
edd9bbc1382119e5cb00fc038e840eaf99b2a4632bb6d548ba19dfbdf05d4ca7.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xdc
  401009:	xor    DWORD PTR ds:0x42d014,0x42a000
  401013:	push   esi
  401014:	movzx  esi,WORD PTR ds:0x429014
  40101b:	sub    DWORD PTR ds:0x42a018,esi
  401021:	mov    esi,DWORD PTR ds:0x42ed49
  401027:	push   0x8
  401029:	push   0x42e545
  40102e:	and    DWORD PTR ds:0x42c010,0x110f
  401038:	call   esi
  40103a:	test   eax,eax
  40103c:	mov    DWORD PTR ds:0x42a018,0x6e1c
  401046:	je     0x40105d
  40104c:	adc    DWORD PTR ds:0x42a014,0x429000
  401056:	xor    eax,eax
  401058:	jmp    0x402be5
  40105d:	push   edi
  40105e:	push   0x42e555
  401063:	xor    edi,edi
  401065:	and    DWORD PTR ds:0x42c004,0x42d018
  40106f:	inc    edi
  401070:	push   edi
  401071:	push   edi
  401072:	call   DWORD PTR ds:0x42ed79
  401078:	xor    DWORD PTR ds:0x42d01c,0x429020
  401082:	test   eax,eax
  401084:	mov    DWORD PTR ds:0x42c004,0x42a7
  40108e:	je     0x4010a5
  401094:	xor    eax,eax
  401096:	mov    DWORD PTR ds:0x42a018,0x32e7
  4010a0:	jmp    0x402be4
  4010a5:	sbb    DWORD PTR ds:0x42a010,0x2663
  4010af:	push   ebx
  4010b0:	and    DWORD PTR ds:0x42d008,0x0
  4010ba:	mov    ebx,DWORD PTR ds:0x42d008
  4010c0:	inc    ebx
  4010c1:	mov    DWORD PTR ds:0x42d008,ebx
  4010c7:	cmp    DWORD PTR ds:0x42d008,0xb
  4010ce:	jne    0x4010e4
  4010d4:	push   0x2cfb
  4010d9:	push   0x7de9
  4010de:	call   DWORD PTR ds:0x42ed35
  4010e4:	cmp    DWORD PTR ds:0x42d008,0xa
  4010eb:	jne    0x4010fe
  4010f1:	mov    ebx,DWORD PTR ds:0x42d008
  4010f7:	inc    ebx
  4010f8:	mov    DWORD PTR ds:0x42d008,ebx
  4010fe:	cmp    DWORD PTR ds:0x42d008,0x12
  401105:	jb     0x4010ba
  40110b:	mov    ebx,DWORD PTR ds:0x42ed4d
  401111:	push   0x42e565
  401116:	sub    DWORD PTR ds:0x429014,0x429020
  401120:	push   edi
  401121:	mov    DWORD PTR ds:0x42b01c,0x3048
  40112b:	push   edi
  40112c:	call   ebx
  40112e:	and    DWORD PTR ds:0x42c00c,0x5ead
  401138:	test   eax,eax
  40113a:	jne    0x401e1f
  401140:	push   0xc
  401142:	push   0x42e589
  401147:	adc    DWORD PTR ds:0x42c010,0x42d010
  401151:	call   esi
  401153:	test   eax,eax
  401155:	mov    DWORD PTR ds:0x42a01c,0x6b4c
  40115f:	jne    0x401e1f
  401165:	push   0x7
  401167:	push   0x42e59d
  40116c:	call   esi
  40116e:	xor    DWORD PTR ds:0x429028,0x6216
  401178:	test   eax,eax
  40117a:	jne    0x401e1f
  401180:	add    DWORD PTR ds:0x429004,0x14dc
  40118a:	push   0x8
  40118c:	and    DWORD PTR ds:0x42c00c,0x42a000
  401196:	push   0x42e5ad
  40119b:	add    DWORD PTR ds:0x42a018,0x317f
  4011a5:	call   esi
  4011a7:	test   eax,eax
  4011a9:	mov    DWORD PTR ds:0x42c014,0x304b
  4011b3:	jne    0x401e1f
  4011b9:	push   0x42e5bd
  4011be:	xor    DWORD PTR ds:0x42d014,0x42b004
  4011c8:	push   edi
  4011c9:	push   edi
  4011ca:	sub    DWORD PTR ds:0x429010,0x429028
  4011d4:	call   DWORD PTR ds:0x42ed79
  4011da:	not    DWORD PTR ds:0x42b000
  4011e0:	test   eax,eax
  4011e2:	mov    DWORD PTR ds:0x429008,0x4a9f
  4011ec:	jne    0x401e1f
  4011f2:	push   0x42e5cd
  4011f7:	push   edi
  4011f8:	adc    DWORD PTR ds:0x42d000,0x42900c
  401202:	push   edi
  401203:	call   ebx
  401205:	test   eax,eax
  401207:	jne    0x401e1f
  40120d:	xor    DWORD PTR ds:0x429000,0x429010
  401217:	push   0xc
  401219:	and    DWORD PTR ds:0x42b00c,0x6767
  401223:	push   0x42e5f1
  401228:	sub    DWORD PTR ds:0x42a010,0x429018
  401232:	call   esi
  401234:	sub    DWORD PTR ds:0x429010,0x42a010
  40123e:	test   eax,eax
  401240:	jne    0x401e1f
  401246:	push   0x7
  401248:	push   0x42e605
  40124d:	and    DWORD PTR ds:0x42c004,0x42b014
  401257:	call   esi
  401259:	test   eax,eax
  40125b:	mov    DWORD PTR ds:0x42c014,0x7e03
  401265:	jne    0x401e1f
  40126b:	and    DWORD PTR ds:0x429020,0x42d000
  401275:	push   0x8
  401277:	sbb    DWORD PTR ds:0x42a008,0x42901c
  401281:	push   0x42e615
  401286:	add    DWORD PTR ds:0x42c01c,0x42d010
  401290:	call   esi
  401292:	test   eax,eax
  401294:	mov    DWORD PTR ds:0x429008,0x7503
  40129e:	jne    0x401e1f
  4012a4:	push   0x42e625
  4012a9:	and    DWORD PTR ds:0x42d008,0x42c000
  4012b3:	push   edi
  4012b4:	push   edi
  4012b5:	call   DWORD PTR ds:0x42ed79
  4012bb:	or     DWORD PTR ds:0x42c01c,0x42d000
  4012c5:	test   eax,eax
  4012c7:	jne    0x401e1f
  4012cd:	add    DWORD PTR ds:0x42b018,0x42d004
  4012d7:	push   0x42e635
  4012dc:	and    DWORD PTR ds:0x42900c,0x42a018
  4012e6:	push   edi
  4012e7:	push   edi
  4012e8:	and    DWORD PTR ds:0x42c018,0x4f5c
  4012f2:	call   ebx
  4012f4:	xor    DWORD PTR ds:0x42b00c,0x577f
  4012fe:	test   eax,eax
  401300:	jne    0x401e1f
  401306:	push   0xc
  401308:	push   0x42e659
  40130d:	xor    DWORD PTR ds:0x429018,0x2dc5
  401317:	call   esi
  401319:	mov    DWORD PTR ds:0x42d014,0x790c
  401323:	test   eax,eax
  401325:	mov    DWORD PTR ds:0x42a014,0x2892
  40132f:	jne    0x401e1f
  401335:	sub    DWORD PTR ds:0x42d004,0x3ee1
  40133f:	push   0x7
  401341:	xor    DWORD PTR ds:0x42a01c,0x42b018
  40134b:	push   0x42e66d
  401350:	and    DWORD PTR ds:0x42c018,0x42d014
  40135a:	call   esi
  40135c:	test   eax,eax
  40135e:	mov    DWORD PTR ds:0x429008,0x4095
  401368:	jne    0x401e1f
  40136e:	sub    DWORD PTR ds:0x42d008,0x42b000
  401378:	push   0x8
  40137a:	adc    DWORD PTR ds:0x42d018,0x42c00c
  401384:	push   0x42e67d
  401389:	xor    DWORD PTR ds:0x42c014,0x7b1e
  401393:	call   esi
  401395:	test   eax,eax
  401397:	mov    DWORD PTR ds:0x42c010,0x4421
  4013a1:	jne    0x401e1f
  4013a7:	push   0x42e68d
  4013ac:	xor    DWORD PTR ds:0x42d018,0x31e9
  4013b6:	push   edi
  4013b7:	push   edi
  4013b8:	dec    DWORD PTR ds:0x42b010
  4013be:	call   DWORD PTR ds:0x42ed79
  4013c4:	test   eax,eax
  4013c6:	mov    DWORD PTR ds:0x429008,0x30d5
  4013d0:	jne    0x401e1f
  4013d6:	push   0x42e69d
  4013db:	push   edi
  4013dc:	adc    DWORD PTR ds:0x42c018,0x42d014
  4013e6:	push   edi
  4013e7:	sbb    DWORD PTR ds:0x429024,0x42b00c
  4013f1:	call   ebx
  4013f3:	xor    DWORD PTR ds:0x42b004,0x3165
  4013fd:	test   eax,eax
  4013ff:	mov    DWORD PTR ds:0x429028,0x3c76
  401409:	jne    0x401e1f
  40140f:	push   0xc
  401411:	or     DWORD PTR ds:0x42d000,0x42c004
  40141b:	push   0x42e6c1
  401420:	call   esi
  401422:	test   eax,eax
  401424:	mov    DWORD PTR ds:0x42d01c,0x6bbc
  40142e:	jne    0x401e1f
  401434:	and    DWORD PTR ds:0x42c018,0x24ff
  40143e:	push   0x7
  401440:	push   0x42e6d5
  401445:	add    DWORD PTR ds:0x42c008,0x429024
  40144f:	call   esi
  401451:	adc    DWORD PTR ds:0x429008,0x42b004
  40145b:	test   eax,eax
  40145d:	jne    0x401e1f
  401463:	push   0x8
  401465:	push   0x42e6e5
  40146a:	or     DWORD PTR ds:0x42a00c,0x2f15
  401474:	call   esi
  401476:	test   eax,eax
  401478:	jne    0x401e1f
  40147e:	push   0x42e6f5
  401483:	push   edi
  401484:	add    DWORD PTR ds:0x42a008,0x52fe
  40148e:	push   edi
  40148f:	call   DWORD PTR ds:0x42ed79
  401495:	sub    DWORD PTR ds:0x429018,0x42c010
  40149f:	test   eax,eax
  4014a1:	mov    DWORD PTR ds:0x42d014,0x5fc2
  4014ab:	jne    0x401e1f
  4014b1:	push   0x42e705
  4014b6:	add    DWORD PTR ds:0x42b014,0x42a00c
  4014c0:	push   edi
  4014c1:	push   edi
  4014c2:	xor    DWORD PTR ds:0x42b00c,0x37e4
  4014cc:	call   ebx
  4014ce:	mov    DWORD PTR ds:0x429000,0x2bcb
  4014d8:	test   eax,eax
  4014da:	jne    0x401e1f
  4014e0:	push   0xc
  4014e2:	push   0x42e729
  4014e7:	call   esi
  4014e9:	and    DWORD PTR ds:0x42b000,0x6be4
  4014f3:	test   eax,eax
  4014f5:	mov    DWORD PTR ds:0x42b00c,0x4954
  4014ff:	jne    0x401e1f
  401505:	or     DWORD PTR ds:0x429004,0x2e1b
  40150f:	push   0x7
  401511:	push   0x42e73d
  401516:	neg    DWORD PTR ds:0x429018
  40151c:	call   esi
  40151e:	or     DWORD PTR ds:0x429004,0x7cc8
  401528:	test   eax,eax
  40152a:	mov    DWORD PTR ds:0x42a000,0x4af4
  401534:	jne    0x401e1f
  40153a:	sub    DWORD PTR ds:0x429020,0x6067
  401544:	push   0x8
  401546:	push   0x42e74d
  40154b:	call   esi
  40154d:	test   eax,eax
  40154f:	jne    0x401e1f
  401555:	xor    DWORD PTR ds:0x429008,0x42a00c
  40155f:	push   0x42e75d
  401564:	push   edi
  401565:	sbb    DWORD PTR ds:0x42a004,0x429028
  40156f:	push   edi
  401570:	adc    DWORD PTR ds:0x42c000,0x42b004
  40157a:	call   DWORD PTR ds:0x42ed79
  401580:	xor    DWORD PTR ds:0x42b01c,0x42d004
  40158a:	test   eax,eax
  40158c:	mov    DWORD PTR ds:0x429004,0x6f0c
  401596:	jne    0x401e1f
  40159c:	sbb    DWORD PTR ds:0x429010,0x42b010
  4015a6:	push   0x42e76d
  4015ab:	push   edi
  4015ac:	xor    DWORD PTR ds:0x42c000,0x17e1
  4015b6:	push   edi
  4015b7:	add    DWORD PTR ds:0x429024,0x42b018
  4015c1:	call   ebx
  4015c3:	sbb    DWORD PTR ds:0x42c004,0x42b018
  4015cd:	test   eax,eax
  4015cf:	jne    0x401e1f
  4015d5:	or     DWORD PTR ds:0x42d008,0x42d000
  4015df:	push   0xc
  4015e1:	push   0x42e791
  4015e6:	adc    DWORD PTR ds:0x42d01c,0x429000
  4015f0:	call   esi
  4015f2:	test   eax,eax
  4015f4:	jne    0x401e1f
  4015fa:	sbb    DWORD PTR ds:0x42b01c,0x35f4
  401604:	push   0x7
  401606:	adc    DWORD PTR ds:0x42d00c,0x4213
  401610:	push   0x42e7a5
  401615:	xor    DWORD PTR ds:0x42b01c,0x728b
  40161f:	call   esi
  401621:	test   eax,eax
  401623:	mov    DWORD PTR ds:0x429010,0x1355
  40162d:	jne    0x401e1f
  401633:	add    DWORD PTR ds:0x42c00c,0x42d000
  40163d:	push   0x8
  40163f:	sub    DWORD PTR ds:0x42d000,0x42a014
  401649:	push   0x42e7b5
  40164e:	xor    DWORD PTR ds:0x42900c,0x42a014
  401658:	call   esi
  40165a:	add    DWORD PTR ds:0x42d018,0x7270
  401664:	test   eax,eax
  401666:	jne    0x401e1f
  40166c:	xor    DWORD PTR ds:0x429028,0x318
  401676:	push   0x42e7c5
  40167b:	not    DWORD PTR ds:0x42b00c
  401681:	push   edi
  401682:	and    DWORD PTR ds:0x429024,0x42d004
  40168c:	push   edi
  40168d:	call   DWORD PTR ds:0x42ed79
  401693:	test   eax,eax
  401695:	jne    0x401e1f
  40169b:	push   0x42e7d5
  4016a0:	push   edi
  4016a1:	push   edi
  4016a2:	xor    DWORD PTR ds:0x42d004,0x42b004
  4016ac:	call   ebx
  4016ae:	sbb    DWORD PTR ds:0x42d01c,0x42a008
  4016b8:	test   eax,eax
  4016ba:	mov    DWORD PTR ds:0x42b008,0x59c6
  4016c4:	jne    0x401e1f
  4016ca:	mov    DWORD PTR ds:0x42a008,0x78fc
  4016d4:	push   0xc
  4016d6:	add    DWORD PTR ds:0x42900c,0x42c018
  4016e0:	push   0x42e7f9
  4016e5:	call   esi
  4016e7:	test   eax,eax
  4016e9:	jne    0x401e1f
  4016ef:	and    DWORD PTR ds:0x42d010,0x3029
  4016f9:	push   0x7
  4016fb:	xor    DWORD PTR ds:0x42d008,0x429020
  401705:	push   0x42e80d
  40170a:	call   esi
  40170c:	sub    DWORD PTR ds:0x42901c,0x49cd
  401716:	test   eax,eax
  401718:	mov    DWORD PTR ds:0x42900c,0x2477
  401722:	jne    0x401e1f
  401728:	push   0x8
  40172a:	push   0x42e81d
  40172f:	call   esi
  401731:	or     DWORD PTR ds:0x42c000,0x42b014
  40173b:	test   eax,eax
  40173d:	jne    0x401e1f
  401743:	sub    DWORD PTR ds:0x429018,0x4202
  40174d:	push   0x42e82d
  401752:	adc    DWORD PTR ds:0x42a000,0x15e
  40175c:	push   edi
  40175d:	push   edi
  40175e:	and    DWORD PTR ds:0x42d008,0x1b79
  401768:	call   DWORD PTR ds:0x42ed79
  40176e:	add    DWORD PTR ds:0x42b008,0x42c000
  401778:	test   eax,eax
  40177a:	mov    DWORD PTR ds:0x429004,0x4fab
  401784:	jne    0x401e1f
  40178a:	add    DWORD PTR ds:0x42b008,0x429018
  401794:	push   0x42e83d
  401799:	push   edi
  40179a:	adc    DWORD PTR ds:0x42d018,0x42b008
  4017a4:	push   edi
  4017a5:	call   ebx
  4017a7:	adc    DWORD PTR ds:0x42b01c,0x42a014
  4017b1:	test   eax,eax
  4017b3:	mov    DWORD PTR ds:0x42b008,0x413c
  4017bd:	jne    0x401e1f
  4017c3:	sub    DWORD PTR ds:0x42a004,0x429004
  4017cd:	push   0xc
  4017cf:	push   0x42e861
  4017d4:	sub    DWORD PTR ds:0x42b014,0x419d
  4017de:	call   esi
  4017e0:	sub    DWORD PTR ds:0x429014,0x429024
  4017ea:	test   eax,eax
  4017ec:	mov    DWORD PTR ds:0x42c018,0x3584
  4017f6:	jne    0x401e1f
  4017fc:	adc    DWORD PTR ds:0x42b014,0x3845
  401806:	push   0x7
  401808:	adc    DWORD PTR ds:0x42b014,0x5918
  401812:	push   0x42e875
  401817:	call   esi
  401819:	or     DWORD PTR ds:0x42b004,0x42a000
  401823:	test   eax,eax
  401825:	jne    0x401e1f
  40182b:	sub    DWORD PTR ds:0x42c010,0x7a9b
  401835:	push   0x8
  401837:	push   0x42e885
  40183c:	call   esi
  40183e:	or     DWORD PTR ds:0x42b018,0x42a018
  401848:	test   eax,eax
  40184a:	mov    DWORD PTR ds:0x42c018,0x6db6
  401854:	jne    0x401e1f
  40185a:	push   0x42e895
  40185f:	push   edi
  401860:	push   edi
  401861:	or     DWORD PTR ds:0x429024,0x42b004
  40186b:	call   DWORD PTR ds:0x42ed79
  401871:	test   eax,eax
  401873:	jne    0x401e1f
  401879:	push   0x42e8a5
  40187e:	mov    DWORD PTR ds:0x42d010,0x708e
  401888:	push   edi
  401889:	mov    DWORD PTR ds:0x42c01c,0x7ef
  401893:	push   edi
  401894:	call   ebx
  401896:	test   eax,eax
  401898:	mov    DWORD PTR ds:0x42a00c,0x3b87
  4018a2:	jne    0x401e1f
  4018a8:	mov    DWORD PTR ds:0x429004,0x503
  4018b2:	push   0xc
  4018b4:	xor    DWORD PTR ds:0x42c00c,0x6b3b
  4018be:	push   0x42e8c9
  4018c3:	call   esi
  4018c5:	test   eax,eax
  4018c7:	mov    DWORD PTR ds:0x42a004,0x812
  4018d1:	jne    0x401e1f
  4018d7:	push   0x7
  4018d9:	sub    DWORD PTR ds:0x42b000,0x42a00c
  4018e3:	push   0x42e8dd
  4018e8:	sub    DWORD PTR ds:0x42d008,0x6a91
  4018f2:	call   esi
  4018f4:	add    DWORD PTR ds:0x429000,0x3ce6
  4018fe:	test   eax,eax
  401900:	mov    DWORD PTR ds:0x42d018,0x1a2
  40190a:	jne    0x401e1f
  401910:	sub    DWORD PTR ds:0x42a008,0x42a010
  40191a:	push   0x8
  40191c:	push   0x42e8ed
  401921:	call   esi
  401923:	sub    DWORD PTR ds:0x42d00c,0x42900c
  40192d:	test   eax,eax
  40192f:	mov    DWORD PTR ds:0x429000,0x18ec
  401939:	jne    0x401e1f
  40193f:	sbb    DWORD PTR ds:0x42a01c,0x42a004
  401949:	push   0x42e8fd
  40194e:	adc    DWORD PTR ds:0x42c010,0x1027
  401958:	push   edi
  401959:	adc    DWORD PTR ds:0x42d014,0x61c0
  401963:	push   edi
  401964:	xor    DWORD PTR ds:0x42d004,0x42b000
  40196e:	call   DWORD PTR ds:0x42ed79
  401974:	and    DWORD PTR ds:0x42b00c,0x54e0
  40197e:	test   eax,eax
  401980:	jne    0x401e1f
  401986:	mov    DWORD PTR ds:0x42b014,0x48d
  401990:	push   0x42e90d
  401995:	xor    DWORD PTR ds:0x42b00c,0x429000
  40199f:	push   edi
  4019a0:	xor    DWORD PTR ds:0x42c008,0x7d0d
  4019aa:	push   edi
  4019ab:	and    DWORD PTR ds:0x42b010,0xad4
  4019b5:	call   ebx
  4019b7:	adc    DWORD PTR ds:0x42b01c,0x42d018
  4019c1:	test   eax,eax
  4019c3:	mov    DWORD PTR ds:0x42a00c,0x2f29
  4019cd:	jne    0x401e1f
  4019d3:	sub    DWORD PTR ds:0x42a010,0x429014
  4019dd:	push   0xc
  4019df:	add    DWORD PTR ds:0x42d004,0x38f3
  4019e9:	push   0x42e931
  4019ee:	sub    DWORD PTR ds:0x42d008,0x531f
  4019f8:	call   esi
  4019fa:	xor    DWORD PTR ds:0x42a00c,0x1332
  401a04:	test   eax,eax
  401a06:	jne    0x401e1f
  401a0c:	add    DWORD PTR ds:0x42d014,0x42b000
  401a16:	push   0x7
  401a18:	push   0x42e945
  401a1d:	adc    DWORD PTR ds:0x429028,0x23cf
  401a27:	call   esi
  401a29:	test   eax,eax
  401a2b:	jne    0x401e1f
  401a31:	push   0x8
  401a33:	add    DWORD PTR ds:0x429020,0x607a
  401a3d:	push   0x42e955
  401a42:	call   esi
  401a44:	or     DWORD PTR ds:0x42c000,0x42b00c
  401a4e:	test   eax,eax
  401a50:	mov    DWORD PTR ds:0x42c00c,0x4ca0
  401a5a:	jne    0x401e1f
  401a60:	sub    DWORD PTR ds:0x429000,0x42d010
  401a6a:	push   0x42e965
  401a6f:	push   edi
  401a70:	and    DWORD PTR ds:0x42901c,0x42a004
  401a7a:	push   edi
  401a7b:	xor    DWORD PTR ds:0x42b018,0x42a008
  401a85:	call   DWORD PTR ds:0x42ed79
  401a8b:	adc    DWORD PTR ds:0x42d004,0x42901c
  401a95:	test   eax,eax
  401a97:	mov    DWORD PTR ds:0x42c010,0x64f7
  401aa1:	jne    0x401e1f
  401aa7:	push   0x42e975
  401aac:	mov    DWORD PTR ds:0x42a014,0x62f7
  401ab6:	push   edi
  401ab7:	push   edi
  401ab8:	call   ebx
  401aba:	add    DWORD PTR ds:0x42a018,0x42d01c
  401ac4:	test   eax,eax
  401ac6:	mov    DWORD PTR ds:0x42c01c,0x72ca
  401ad0:	jne    0x401e1f
  401ad6:	mov    DWORD PTR ds:0x42c01c,0x7760
  401ae0:	push   0xc
  401ae2:	sub    DWORD PTR ds:0x42b018,0x3ed8
  401aec:	push   0x42e999
  401af1:	call   esi
  401af3:	test   eax,eax
  401af5:	mov    DWORD PTR ds:0x42d018,0x4329
  401aff:	jne    0x401e1f
  401b05:	push   0x7
  401b07:	push   0x42e9ad
  401b0c:	call   esi
  401b0e:	add    DWORD PTR ds:0x42b01c,0x42d008
  401b18:	test   eax,eax
  401b1a:	jne    0x401e1f
  401b20:	add    DWORD PTR ds:0x42a008,0x5e0b
  401b2a:	push   0x8
  401b2c:	sub    DWORD PTR ds:0x429018,0x42a00c
  401b36:	push   0x42e9bd
  401b3b:	call   esi
  401b3d:	test   eax,eax
  401b3f:	mov    DWORD PTR ds:0x42d008,0x514f
  401b49:	jne    0x401e1f
  401b4f:	sbb    DWORD PTR ds:0x42b000,0x42d000
  401b59:	push   0x42e9cd
  401b5e:	xor    DWORD PTR ds:0x42c018,0x40e4
  401b68:	push   edi
  401b69:	add    DWORD PTR ds:0x42b010,0x42c000
  401b73:	push   edi
  401b74:	add    DWORD PTR ds:0x42d004,0x42c010
  401b7e:	call   DWORD PTR ds:0x42ed79
  401b84:	mov    DWORD PTR ds:0x42a000,0x51c5
  401b8e:	test   eax,eax
  401b90:	mov    DWORD PTR ds:0x42b000,0x17c8
  401b9a:	jne    0x401e1f
  401ba0:	and    DWORD PTR ds:0x42d014,0x42d010
  401baa:	push   0x42e9dd
  401baf:	push   edi
  401bb0:	push   edi
  401bb1:	call   ebx
  401bb3:	sbb    DWORD PTR ds:0x429010,0x42b014
  401bbd:	test   eax,eax
  401bbf:	mov    DWORD PTR ds:0x42c01c,0x73a3
  401bc9:	jne    0x401e1f
  401bcf:	xor    DWORD PTR ds:0x42c01c,0x6e0
  401bd9:	push   0xc
  401bdb:	adc    DWORD PTR ds:0x429008,0x42c008
  401be5:	push   0x42ea01
  401bea:	adc    DWORD PTR ds:0x42901c,0x2688
  401bf4:	call   esi
  401bf6:	add    DWORD PTR ds:0x42c008,0x63eb
  401c00:	test   eax,eax
  401c02:	mov    DWORD PTR ds:0x429004,0x7742
  401c0c:	jne    0x401e1f
  401c12:	adc    DWORD PTR ds:0x42c014,0x42b008
  401c1c:	push   0x7
  401c1e:	adc    DWORD PTR ds:0x42c008,0x42b010
  401c28:	push   0x42ea15
  401c2d:	call   esi
  401c2f:	test   eax,eax
  401c31:	mov    DWORD PTR ds:0x42900c,0x5c79
  401c3b:	jne    0x401e1f
  401c41:	adc    DWORD PTR ds:0x42d008,0x429000
  401c4b:	push   0x8
  401c4d:	xor    DWORD PTR ds:0x42c008,0x42b014
  401c57:	push   0x42ea25
  401c5c:	sub    DWORD PTR ds:0x42d000,0x42b01c
  401c66:	call   esi
  401c68:	xor    DWORD PTR ds:0x429008,0x42a00c
  401c72:	test   eax,eax
  401c74:	jne    0x401e1f
  401c7a:	push   0x42ea35
  401c7f:	adc    DWORD PTR ds:0x429020,0x1586
  401c89:	push   edi
  401c8a:	push   edi
  401c8b:	and    DWORD PTR ds:0x429008,0x42a014
  401c95:	call   DWORD PTR ds:0x42ed79
  401c9b:	and    DWORD PTR ds:0x42a01c,0x429000
  401ca5:	test   eax,eax
  401ca7:	jne    0x401e1f
  401cad:	push   0x42ea45
  401cb2:	push   edi
  401cb3:	sub    DWORD PTR ds:0x42d000,0x429000
  401cbd:	push   edi
  401cbe:	call   ebx
  401cc0:	test   eax,eax
  401cc2:	jne    0x401e1f
  401cc8:	push   0xc
  401cca:	push   0x42ea69
  401ccf:	sbb    DWORD PTR ds:0x42a004,0x42a014
  401cd9:	call   esi
  401cdb:	test   eax,eax
  401cdd:	mov    DWORD PTR ds:0x42a018,0x57a5
  401ce7:	jne    0x401e1f
  401ced:	sub    DWORD PTR ds:0x42d018,0x45f
  401cf7:	push   0x7
  401cf9:	push   0x42ea7d
  401cfe:	call   esi
  401d00:	test   eax,eax
  401d02:	mov    DWORD PTR ds:0x42a010,0x77f7
  401d0c:	jne    0x401e1f
  401d12:	adc    DWORD PTR ds:0x42a008,0x42900c
  401d1c:	push   0x8
  401d1e:	sub    DWORD PTR ds:0x429008,0x429014
  401d28:	push   0x42ea8d
  401d2d:	and    DWORD PTR ds:0x429008,0x429018
  401d37:	call   esi
  401d39:	test   eax,eax
  401d3b:	mov    DWORD PTR ds:0x429000,0x2cbb
  401d45:	jne    0x401e1f
  401d4b:	and    DWORD PTR ds:0x42d01c,0x42b000
  401d55:	push   0x42ea9d
  401d5a:	or     DWORD PTR ds:0x42b010,0x58c8
  401d64:	push   edi
  401d65:	or     DWORD PTR ds:0x42c00c,0x42a00c
  401d6f:	push   edi
  401d70:	adc    DWORD PTR ds:0x42b004,0x42a01c
  401d7a:	call   DWORD PTR ds:0x42ed79
  401d80:	and    DWORD PTR ds:0x429020,0x42b000
  401d8a:	test   eax,eax
  401d8c:	jne    0x401e1f
  401d92:	or     DWORD PTR ds:0x42c01c,0x42b01c
  401d9c:	push   0x42eaad
  401da1:	push   edi
  401da2:	push   edi
  401da3:	call   ebx
  401da5:	sbb    DWORD PTR ds:0x42901c,0x42c01c
  401daf:	test   eax,eax
  401db1:	mov    DWORD PTR ds:0x429018,0x129d
  401dbb:	jne    0x401e1f
  401dc1:	sbb    DWORD PTR ds:0x42a004,0x14a1
  401dcb:	push   0xc
  401dcd:	push   0x42ead1
  401dd2:	call   esi
  401dd4:	sbb    DWORD PTR ds:0x42c00c,0x67e3
  401dde:	test   eax,eax
  401de0:	mov    DWORD PTR ds:0x42c014,0x5d4a
  401dea:	jne    0x401e1f
  401df0:	sbb    DWORD PTR ds:0x42c00c,0x7769
  401dfa:	push   0x7
  401dfc:	or     DWORD PTR ds:0x42b00c,0x1035
  401e06:	push   0x42eae5
  401e0b:	call   esi
  401e0d:	test   eax,eax
  401e0f:	mov    DWORD PTR ds:0x42d014,0xf4
  401e19:	je     0x401e3a
  401e1f:	sub    DWORD PTR ds:0x42b01c,0x42b000
  401e29:	xor    eax,eax
  401e2b:	mov    DWORD PTR ds:0x42c018,0x7f86
  401e35:	jmp    0x402be3
  401e3a:	or     esi,DWORD PTR ds:0x429020
  401e40:	mov    DWORD PTR [ebp-0x10],0x0
  401e47:	movzx  esi,BYTE PTR ds:0x42d010
  401e4e:	add    DWORD PTR ds:0x42c004,esi
  401e54:	mov    eax,DWORD PTR [ebp-0x30]
  401e57:	dec    esi
  401e58:	mov    DWORD PTR [ebp-0x30],eax
  401e5b:	mov    ecx,0xf89c85b5
  401e60:	mov    edi,DWORD PTR ds:0x412170
  401e66:	mov    esi,DWORD PTR ds:0x4120a7
  401e6c:	sub    esi,edi
  401e6e:	imul   edi,DWORD PTR [edi+esi*1]
  401e72:	mov    DWORD PTR [ebp-0x8],ecx
  401e75:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  401e7c:	and    DWORD PTR ds:0x42a004,0x0
  401e86:	jmp    0x401e98
  401e8b:	mov    edi,DWORD PTR ds:0x42a004
  401e91:	inc    edi
  401e92:	mov    DWORD PTR ds:0x42a004,edi
  401e98:	cmp    DWORD PTR ds:0x42a004,0x1c
  401e9f:	jae    0x401ed2
  401ea5:	cmp    DWORD PTR ds:0x42a004,0x25
  401eac:	jne    0x401ec3
  401eb2:	push   DWORD PTR [ebp-0x14]
  401eb5:	push   0x42a004
  401eba:	push   DWORD PTR [ebp-0x1c]
  401ebd:	call   DWORD PTR ds:0x42ed39
  401ec3:	jmp    0x401e8b
  401ec8:	sbb    DWORD PTR ds:0x42d000,0x3f97
  401ed2:	lea    eax,[ebp-0x3c]
  401ed5:	mov    DWORD PTR [ebp-0x38],eax
  401ed8:	mov    esi,DWORD PTR ds:0x429018
  401ede:	and    esi,DWORD PTR ds:0x42901c
  401ee4:	mov    DWORD PTR ds:0x429018,esi
  401eea:	lea    eax,[ebp-0x40]
  401eed:	mov    DWORD PTR [ebp-0x18],eax
  401ef0:	sub    DWORD PTR ds:0x429018,0x2a07
  401efa:	mov    eax,ds:0x42e435
  401eff:	mov    eax,DWORD PTR [eax+0x1c8]
  401f05:	or     DWORD PTR ds:0x429028,0x42b010
  401f0f:	mov    eax,DWORD PTR [eax]
  401f11:	mov    edx,DWORD PTR [ebp-0x18]
  401f14:	mov    esi,0x7510897
  401f19:	adc    DWORD PTR ds:0x429014,edi
  401f1f:	xor    eax,esi
  401f21:	mov    edi,0x3272de
  401f26:	add    eax,edi
  401f28:	mov    DWORD PTR ds:0x42d008,0xdc
  401f32:	mov    DWORD PTR [edx],eax
  401f34:	mov    eax,ds:0x42b000
  401f39:	mov    eax,ds:0x42ebcd
  401f3e:	cmp    eax,0x312bc9f6
  401f43:	jne    0x40206d
  401f49:	xor    eax,0x6ec6
  401f4e:	mov    eax,DWORD PTR [ebp-0x8]
  401f51:	mov    edx,DWORD PTR ds:0x42e435
  401f57:	or     DWORD PTR ds:0x42901c,0x3e24
  401f61:	mov    edx,DWORD PTR [edx+0x198]
  401f67:	or     DWORD PTR ds:0x42b018,edx
  401f6d:	xor    eax,esi
  401f6f:	and    ebx,0x7b5c
  401f75:	add    eax,edi
  401f77:	and    DWORD PTR ds:0x429028,0x0
  401f81:	jmp    0x401f93
  401f86:	mov    ebx,DWORD PTR ds:0x429028
  401f8c:	inc    ebx
  401f8d:	mov    DWORD PTR ds:0x429028,ebx
  401f93:	cmp    DWORD PTR ds:0x429028,0x10
  401f9a:	jae    0x401fc8
  401fa0:	cmp    DWORD PTR ds:0x429028,0x12
  401fa7:	jne    0x401fbd
  401fad:	push   0x42e010
  401fb2:	push   0x42e0c5
  401fb7:	call   DWORD PTR ds:0x42ed3d
  401fbd:	jmp    0x401f86
  401fc2:	sub    DWORD PTR ds:0x42c014,edx
  401fc8:	mov    DWORD PTR [edx],eax
  401fca:	sbb    DWORD PTR ds:0x42c014,edi
  401fd0:	mov    eax,DWORD PTR [ebp-0x8]
  401fd3:	mov    DWORD PTR ds:0x42c018,0x1d
  401fdd:	cmp    DWORD PTR ds:0x42c018,0x0
  401fe4:	je     0x402064
  401fea:	cmp    DWORD PTR ds:0x42c018,0x26
  401ff1:	jne    0x40200a
  401ff7:	push   0x887e
  401ffc:	push   0x81aa
  402001:	push   DWORD PTR [ebp-0x1c]
  402004:	call   DWORD PTR ds:0x42ed41
  40200a:	mov    ebx,DWORD PTR ds:0x42c018
  402010:	dec    ebx
  402011:	mov    DWORD PTR ds:0x42c018,ebx
  402017:	jmp    0x401fdd
  40201c:	and    DWORD PTR ds:0x42a018,0x0
  402026:	mov    ebx,DWORD PTR ds:0x42a018
  40202c:	inc    ebx
  40202d:	mov    DWORD PTR ds:0x42a018,ebx
  402033:	cmp    DWORD PTR ds:0x42a018,0x27
  40203a:	jne    0x402051
  402040:	push   DWORD PTR [ebp-0x10]
  402043:	push   0x429008
  402048:	push   DWORD PTR [ebp-0xc]
  40204b:	call   DWORD PTR ds:0x42ed45
  402051:	cmp    DWORD PTR ds:0x42a018,0x17
  402058:	jb     0x402026
  40205e:	xor    ebx,0x6fac
  402064:	xor    eax,esi
  402066:	add    eax,edi
  402068:	mov    ds:0x42ebcd,eax
  40206d:	sub    ebx,ebx
  40206f:	mov    eax,ds:0x42e435
  402074:	mov    eax,DWORD PTR [eax+0x18c]
  40207a:	sbb    DWORD PTR ds:0x42c004,ecx
  402080:	mov    eax,DWORD PTR [eax]
  402082:	mov    DWORD PTR [ebp-0x7c],eax
  402085:	or     DWORD PTR ds:0x42900c,0x1063
  40208f:	mov    ebx,0xf89c85b1
  402094:	mov    DWORD PTR [ebp-0x10],ebx
  402097:	dec    DWORD PTR ds:0x429024
  40209d:	mov    DWORD PTR [ebp-0x10],ebx
  4020a0:	sub    DWORD PTR ds:0x429028,0x6632
  4020aa:	mov    DWORD PTR [ebp-0x10],ebx
  4020ad:	and    DWORD PTR ds:0x42b018,0x42a00c
  4020b7:	mov    DWORD PTR [ebp-0x18],ecx
  4020ba:	mov    DWORD PTR [ebp-0x10],ebx
  4020bd:	add    DWORD PTR ds:0x42a008,0x61a5
  4020c7:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  4020ce:	adc    DWORD PTR ds:0x42a004,0x6791
  4020d8:	mov    eax,DWORD PTR [ebp-0x8]
  4020db:	and    DWORD PTR ds:0x42d008,0x429018
  4020e5:	xor    eax,esi
  4020e7:	add    eax,edi
  4020e9:	mov    DWORD PTR ds:0x42c00c,0x48a6
  4020f3:	jmp    0x4022be
  4020f8:	add    eax,eax
  4020fa:	mov    eax,DWORD PTR [ebp-0xc]
  4020fd:	adc    DWORD PTR ds:0x42c000,0x10b0
  402107:	mov    ecx,DWORD PTR [ebp-0x1c]
  40210a:	xor    eax,esi
  40210c:	sub    DWORD PTR ds:0x42b00c,0x42a004
  402116:	lea    eax,[eax+ecx*1+0x3272de]
  40211d:	push   eax
  40211e:	mov    DWORD PTR ds:0x42a014,0x1b
  402128:	cmp    DWORD PTR ds:0x42a014,0x0
  40212f:	je     0x40217e
  402135:	cmp    DWORD PTR ds:0x42a014,0x6
  40213c:	jne    0x402148
  402142:	call   DWORD PTR ds:0x42ed51
  402148:	cmp    DWORD PTR ds:0x42a014,0x7
  40214f:	jne    0x402160
  402155:	mov    eax,ds:0x42a014
  40215a:	dec    eax
  40215b:	mov    ds:0x42a014,eax
  402160:	mov    eax,ds:0x42a014
  402165:	dec    eax
  402166:	mov    ds:0x42a014,eax
  40216b:	jmp    0x402128
  402170:	xor    eax,eax
  402172:	add    eax,DWORD PTR ds:0x42a008
  402178:	sub    DWORD PTR ds:0x429024,eax
  40217e:	mov    eax,DWORD PTR [ebp-0x18]
  402181:	adc    DWORD PTR ds:0x429020,0x429028
  40218b:	xor    eax,esi
  40218d:	lea    eax,[ebp+eax*1+0x3272e6]
  402194:	push   eax
  402195:	add    DWORD PTR ds:0x42900c,0x1bda
  40219f:	mov    eax,ds:0x42e435
  4021a4:	push   DWORD PTR [eax+0x1bc]
  4021aa:	xor    DWORD PTR ds:0x42c018,0x429018
  4021b4:	call   0x402bee
  4021b9:	and    DWORD PTR ds:0x42b018,0x0
  4021c3:	jmp    0x4021d5
  4021c8:	mov    ecx,DWORD PTR ds:0x42b018
  4021ce:	inc    ecx
  4021cf:	mov    DWORD PTR ds:0x42b018,ecx
  4021d5:	cmp    DWORD PTR ds:0x42b018,0x1d
  4021dc:	jae    0x4021fa
  4021e2:	cmp    DWORD PTR ds:0x42b018,0x27
  4021e9:	jne    0x4021f5
  4021ef:	call   DWORD PTR ds:0x42ed55
  4021f5:	jmp    0x4021c8
  4021fa:	mov    eax,DWORD PTR [ebp-0xc]
  4021fd:	mov    ecx,DWORD PTR [ebp-0x1c]
  402200:	and    DWORD PTR ds:0x429010,0x0
  40220a:	mov    edx,DWORD PTR ds:0x429010
  402210:	inc    edx
  402211:	mov    DWORD PTR ds:0x429010,edx
  402217:	cmp    DWORD PTR ds:0x429010,0x9
  40221e:	jne    0x402245
  402224:	push   DWORD PTR [ebp-0x20]
  402227:	push   DWORD PTR [ebp-0x14]
  40222a:	push   0x42a010
  40222f:	push   0x39f6
  402234:	push   DWORD PTR [ebp-0x10]
  402237:	push   0x1415
  40223c:	push   DWORD PTR [ebp-0x14]
  40223f:	call   DWORD PTR ds:0x42ed59
  402245:	cmp    DWORD PTR ds:0x429010,0x8
  40224c:	jne    0x40225f
  402252:	mov    edx,DWORD PTR ds:0x429010
  402258:	inc    edx
  402259:	mov    DWORD PTR ds:0x429010,edx
  40225f:	cmp    DWORD PTR ds:0x429010,0x17
  402266:	jb     0x40220a
  40226c:	and    DWORD PTR ds:0x42d01c,0x0
  402276:	jmp    0x402288
  40227b:	mov    edx,DWORD PTR ds:0x42d01c
  402281:	inc    edx
  402282:	mov    DWORD PTR ds:0x42d01c,edx
  402288:	cmp    DWORD PTR ds:0x42d01c,0x16
  40228f:	jae    0x4022b5
  402295:	cmp    DWORD PTR ds:0x42d01c,0x1f
  40229c:	jne    0x4022b0
  4022a2:	push   DWORD PTR [ebp-0xc]
  4022a5:	push   0x42e12b
  4022aa:	call   DWORD PTR ds:0x42ed5d
  4022b0:	jmp    0x40227b
  4022b5:	xor    eax,esi
  4022b7:	lea    eax,[ecx+eax*1+0x3272de]
  4022be:	and    DWORD PTR ds:0x429000,0x0
  4022c8:	jmp    0x4022da
  4022cd:	mov    edx,DWORD PTR ds:0x429000
  4022d3:	inc    edx
  4022d4:	mov    DWORD PTR ds:0x429000,edx
  4022da:	cmp    DWORD PTR ds:0x429000,0x1a
  4022e1:	jae    0x402370
  4022e7:	cmp    DWORD PTR ds:0x429000,0x7
  4022ee:	jne    0x402308
  4022f4:	push   0x42e196
  4022f9:	push   0x1
  4022fb:	push   0x0
  4022fd:	push   0x72dd
  402302:	call   DWORD PTR ds:0x42ed61
  402308:	cmp    DWORD PTR ds:0x429000,0x6
  40230f:	jne    0x402322
  402315:	mov    edx,DWORD PTR ds:0x429000
  40231b:	inc    edx
  40231c:	mov    DWORD PTR ds:0x429000,edx
  402322:	jmp    0x4022cd
  402327:	and    DWORD PTR ds:0x42a014,0x0
  402331:	mov    edx,DWORD PTR ds:0x42a014
  402337:	inc    edx
  402338:	mov    DWORD PTR ds:0x42a014,edx
  40233e:	cmp    DWORD PTR ds:0x42a014,0x1b
  402345:	jne    0x402359
  40234b:	push   0x42d004
  402350:	push   DWORD PTR [ebp-0x18]
  402353:	call   DWORD PTR ds:0x42ed65
  402359:	cmp    DWORD PTR ds:0x42a014,0x11
  402360:	jb     0x402331
  402366:	and    DWORD PTR ds:0x42d018,0x567b
  402370:	mov    ecx,DWORD PTR [ebp-0xc]
  402373:	xor    edx,0x27b9
  402379:	mov    edx,DWORD PTR [ebp-0xc]
  40237c:	add    DWORD PTR ds:0x42a010,0x42d014
  402386:	xor    edx,esi
  402388:	xor    ecx,esi
  40238a:	and    DWORD PTR ds:0x42c00c,0x48dd
  402394:	add    ecx,edx
  402396:	mov    edx,DWORD PTR [ebp-0xc]
  402399:	neg    DWORD PTR ds:0x42c00c
  40239f:	xor    edx,esi
  4023a1:	lea    ecx,[ecx+edx*1+0x97589a]
  4023a8:	mov    DWORD PTR ds:0x42b018,0x21
  4023b2:	mov    DWORD PTR [ebp-0x1c],eax
  4023b5:	mov    DWORD PTR ds:0x42a010,0x55c5
  4023bf:	cmp    eax,ecx
  4023c1:	mov    DWORD PTR ds:0x42c01c,0x1ffa
  4023cb:	jbe    0x4020f8
  4023d1:	and    DWORD PTR ds:0x42d01c,0x0
  4023db:	jmp    0x4023eb
  4023e0:	mov    eax,ds:0x42d01c
  4023e5:	inc    eax
  4023e6:	mov    ds:0x42d01c,eax
  4023eb:	cmp    DWORD PTR ds:0x42d01c,0x15
  4023f2:	jae    0x402430
  4023f8:	cmp    DWORD PTR ds:0x42d01c,0x17
  4023ff:	jne    0x402425
  402405:	push   0x25d9
  40240a:	push   0x42a014
  40240f:	push   0x7d1e
  402414:	push   0x42e035
  402419:	push   DWORD PTR [ebp-0x14]
  40241c:	push   DWORD PTR [ebp-0xc]
  40241f:	call   DWORD PTR ds:0x42ed6d
  402425:	jmp    0x4023e0
  40242a:	sbb    ecx,DWORD PTR ds:0x429018
  402430:	mov    eax,DWORD PTR [ebp+0xc]
  402433:	mov    DWORD PTR ds:0x42c010,0x1b
  40243d:	cmp    DWORD PTR ds:0x42c010,0x0
  402444:	je     0x402489
  40244a:	cmp    DWORD PTR ds:0x42c010,0xe
  402451:	jne    0x40245d
  402457:	call   DWORD PTR ds:0x42ed71
  40245d:	cmp    DWORD PTR ds:0x42c010,0xf
  402464:	jne    0x402477
  40246a:	mov    ecx,DWORD PTR ds:0x42c010
  402470:	dec    ecx
  402471:	mov    DWORD PTR ds:0x42c010,ecx
  402477:	mov    ecx,DWORD PTR ds:0x42c010
  40247d:	dec    ecx
  40247e:	mov    DWORD PTR ds:0x42c010,ecx
  402484:	jmp    0x40243d
  402489:	mov    ds:0x42e2b9,eax
  40248e:	and    DWORD PTR ds:0x429010,ecx
  402494:	mov    eax,DWORD PTR [ebp+0x10]
  402497:	movzx  ecx,BYTE PTR ds:0x42d010
  40249e:	sub    DWORD PTR ds:0x429010,ecx
  4024a4:	mov    ds:0x42e50d,eax
  4024a9:	mov    eax,ds:0x42e2b9
  4024ae:	and    DWORD PTR ds:0x429018,0xd59
  4024b8:	mov    ecx,DWORD PTR [ebp-0x38]
  4024bb:	sub    DWORD PTR ds:0x42d004,0x41ed
  4024c5:	sub    eax,edi
  4024c7:	xor    eax,esi
  4024c9:	mov    DWORD PTR [ecx],eax
  4024cb:	mov    DWORD PTR ds:0x42b000,0x41dd
  4024d5:	mov    eax,DWORD PTR [ebp-0x30]
  4024d8:	cmp    eax,0xf89c85b5
  4024dd:	jne    0x402633
  4024e3:	mov    DWORD PTR ds:0x42b008,0x94c
  4024ed:	lea    eax,[ebp-0x48]
  4024f0:	adc    DWORD PTR ds:0x429000,0x77c7
  4024fa:	mov    DWORD PTR [ebp-0x80],eax
  4024fd:	adc    DWORD PTR ds:0x42c010,0x2852
  402507:	lea    eax,[ebp+0x4]
  40250a:	sbb    DWORD PTR ds:0x42b00c,0x6aac
  402514:	mov    DWORD PTR [ebp-0x48],eax
  402517:	and    DWORD PTR ds:0x42d008,0x0
  402521:	mov    eax,ds:0x42d008
  402526:	inc    eax
  402527:	mov    ds:0x42d008,eax
  40252c:	cmp    DWORD PTR ds:0x42d008,0x6
  402533:	jne    0x402544
  402539:	push   0x42c008
  40253e:	call   DWORD PTR ds:0x42ed75
  402544:	cmp    DWORD PTR ds:0x42d008,0x5
  40254b:	jne    0x40255c
  402551:	mov    eax,ds:0x42d008
  402556:	inc    eax
  402557:	mov    ds:0x42d008,eax
  40255c:	cmp    DWORD PTR ds:0x42d008,0x1b
  402563:	jb     0x402521
  402569:	mov    eax,DWORD PTR [ebp-0x48]
  40256c:	test   eax,eax
  40256e:	je     0x402bc8
  402574:	mov    eax,DWORD PTR [ebp-0x20]
  402577:	mov    eax,DWORD PTR [ebp-0xc]
  40257a:	mov    eax,DWORD PTR [ebp-0x8]
  40257d:	mov    DWORD PTR [ebp+0xc],eax
  402580:	mov    eax,eax
  402582:	mov    eax,ds:0x42e435
  402587:	mov    eax,DWORD PTR [eax+0x1c8]
  40258d:	mov    eax,DWORD PTR [eax]
  40258f:	cdq    
  402590:	mov    ebx,eax
  402592:	mov    eax,0xfabdbeeb
  402597:	add    ebx,eax
  402599:	adc    edx,0xffffffff
  40259c:	and    DWORD PTR [ebp-0x10],0x0
  4025a0:	xor    edx,0x0
  4025a3:	mov    DWORD PTR [ebp-0x68],edx
  4025a6:	mov    edx,DWORD PTR [ebp+0xc]
  4025a9:	mov    DWORD PTR [ebp-0x14],edx
  4025ac:	mov    ecx,0x8a29a129
  4025b1:	xor    ebx,ecx
  4025b3:	add    DWORD PTR [ebp-0x14],eax
  4025b6:	mov    edx,DWORD PTR [ebp-0x14]
  4025b9:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025bd:	xor    edx,ecx
  4025bf:	mov    DWORD PTR [ebp-0x58],edx
  4025c2:	mov    edx,DWORD PTR [ebp-0x10]
  4025c5:	xor    edx,0x0
  4025c8:	mov    DWORD PTR [ebp-0x54],edx
  4025cb:	cmp    DWORD PTR [ebp-0x58],ebx
  4025ce:	jne    0x4025e0
  4025d4:	mov    edx,DWORD PTR [ebp-0x68]
  4025d7:	cmp    DWORD PTR [ebp-0x54],edx
  4025da:	je     0x40260f
  4025e0:	mov    edx,DWORD PTR ds:0x42e435
  4025e6:	mov    edx,DWORD PTR [edx+0x1c0]
  4025ec:	mov    edx,DWORD PTR [edx]
  4025ee:	xor    ebx,ebx
  4025f0:	add    edx,eax
  4025f2:	adc    ebx,0xffffffff
  4025f5:	xor    edx,ecx
  4025f7:	xor    ebx,0x0
  4025fa:	cmp    edx,0x70941fc5
  402600:	jne    0x402bc8
  402606:	cmp    ebx,0xffffffff
  402609:	jne    0x402bc8
  40260f:	mov    edx,DWORD PTR ds:0x42e4b1
  402615:	mov    ebx,DWORD PTR ds:0x42e4b9
  40261b:	xor    edx,ebx
  40261d:	mov    DWORD PTR ds:0x42e4b1,edx
  402623:	mov    ebx,DWORD PTR ds:0x42e4b1
  402629:	mov    edx,DWORD PTR [ebp-0x48]
  40262c:	add    DWORD PTR [edx],ebx
  40262e:	jmp    0x402b89
  402633:	mov    eax,DWORD PTR [ebp-0x3c]
  402636:	cmp    eax,0xf89c85b4
  40263b:	je     0x402698
  402641:	mov    eax,DWORD PTR [ebp-0x8]
  402644:	mov    ecx,DWORD PTR [ebp-0x40]
  402647:	xor    eax,esi
  402649:	add    eax,edi
  40264b:	cmp    eax,ecx
  40264d:	je     0x402698
  402653:	mov    eax,ds:0x42e435
  402658:	mov    eax,DWORD PTR [eax+0x194]
  40265e:	mov    ecx,DWORD PTR [eax]
  402660:	mov    eax,DWORD PTR [ecx+0x3c]
  402663:	push   DWORD PTR ds:0x42e50d
  402669:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40266d:	push   DWORD PTR ds:0x42e2b9
  402673:	add    eax,ecx
  402675:	mov    ecx,DWORD PTR ds:0x42e435
  40267b:	mov    ecx,DWORD PTR [ecx+0x194]
  402681:	push   DWORD PTR [ecx]
  402683:	call   eax
  402685:	mov    ecx,DWORD PTR ds:0x42e435
  40268b:	mov    ecx,DWORD PTR [ecx+0x1cc]
  402691:	mov    DWORD PTR [ecx],eax
  402693:	jmp    0x402bc8
  402698:	mov    eax,DWORD PTR [ebp-0x8]
  40269b:	mov    ecx,DWORD PTR [ebp-0x7c]
  40269e:	xor    eax,esi
  4026a0:	add    eax,edi
  4026a2:	cmp    eax,ecx
  4026a4:	jne    0x402a83
  4026aa:	mov    eax,DWORD PTR [ebp-0x8]
  4026ad:	mov    ecx,DWORD PTR ds:0x42e435
  4026b3:	mov    ecx,DWORD PTR [ecx+0x198]
  4026b9:	xor    eax,esi
  4026bb:	add    eax,edi
  4026bd:	cmp    eax,DWORD PTR [ecx]
  4026bf:	jne    0x4026de
  4026c5:	mov    eax,DWORD PTR [ebp-0x8]
  4026c8:	push   0xf89c85b5
  4026cd:	xor    eax,esi
  4026cf:	add    eax,edi
  4026d1:	push   eax
  4026d2:	push   ebx
  4026d3:	push   DWORD PTR [ebp-0xc]
  4026d6:	push   DWORD PTR [ebp-0x8]
  4026d9:	call   0x40816b
  4026de:	mov    eax,DWORD PTR [ebp-0xc]
  4026e1:	mov    DWORD PTR [ebp-0x44],eax
  4026e4:	mov    eax,DWORD PTR [ebp-0x8]
  4026e7:	mov    DWORD PTR [ebp-0x1c],eax
  4026ea:	mov    eax,DWORD PTR [ebp-0x1c]
  4026ed:	xor    eax,esi
  4026ef:	add    eax,edi
  4026f1:	mov    DWORD PTR [ebp+0x10],eax
  4026f4:	mov    eax,ds:0x42e2b5
  4026f9:	mov    eax,DWORD PTR [eax]
  4026fb:	mov    DWORD PTR [ebp+0x10],eax
  4026fe:	mov    eax,ds:0x42e4bd
  402703:	mov    eax,DWORD PTR [eax]
  402705:	mov    DWORD PTR [ebp-0x18],eax
  402708:	mov    DWORD PTR [ebp+0xc],0xf89c87b5
  40270f:	mov    eax,DWORD PTR [ebp+0xc]
  402712:	xor    eax,esi
  402714:	add    eax,edi
  402716:	mov    DWORD PTR [ebp+0xc],eax
  402719:	mov    eax,ds:0x42e435
  40271e:	mov    DWORD PTR [ebp+0xc],eax
  402721:	mov    eax,DWORD PTR [ebp+0x10]
  402724:	mov    DWORD PTR [ebp+0xc],eax
  402727:	mov    eax,DWORD PTR [ebp+0xc]
  40272a:	push   0x4
  40272c:	pop    ecx
  40272d:	sub    ecx,eax
  40272f:	add    ecx,DWORD PTR [ebp-0x18]
  402732:	mov    DWORD PTR [ebp-0x38],0xf89c85f5
  402739:	mov    DWORD PTR [ebp+0x10],ecx
  40273c:	mov    DWORD PTR [ebp-0xdc],ebx
  402742:	mov    eax,DWORD PTR [ebp+0xc]
  402745:	mov    DWORD PTR [ebp-0xd8],eax
  40274b:	mov    eax,DWORD PTR [ebp+0x10]
  40274e:	mov    DWORD PTR [ebp-0xd4],eax
  402754:	mov    eax,DWORD PTR [ebp-0x38]
  402757:	xor    eax,esi
  402759:	add    eax,edi
  40275b:	mov    DWORD PTR [ebp-0xd0],eax
  402761:	lea    eax,[ebp-0x88]
  402767:	mov    DWORD PTR [ebp-0xcc],eax
  40276d:	mov    eax,DWORD PTR [ebp-0xdc]
  402773:	xor    eax,esi
  402775:	add    eax,edi
  402777:	mov    DWORD PTR [ebp-0xdc],eax
  40277d:	lea    eax,[ebp-0xdc]
  402783:	push   eax
  402784:	mov    eax,DWORD PTR [ebp-0x44]
  402787:	xor    eax,esi
  402789:	add    eax,edi
  40278b:	push   eax
  40278c:	mov    eax,ds:0x42e455
  402791:	push   0x42e3ab
  402796:	push   DWORD PTR [eax]
  402798:	call   0x405235
  40279d:	mov    eax,DWORD PTR [ebp+0xc]
  4027a0:	mov    ecx,DWORD PTR [ebp+0x10]
  4027a3:	mov    DWORD PTR [ebp-0x78],ecx
  4027a6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4027a9:	xor    ecx,esi
  4027ab:	mov    DWORD PTR [ebp-0x18],eax
  4027ae:	add    ecx,edi
  4027b0:	jmp    0x402a24
  4027b5:	lea    edx,[ecx+eax*1]
  4027b8:	mov    DWORD PTR [ebp+0x10],edx
  4027bb:	mov    edx,DWORD PTR [ebp-0x78]
  4027be:	sub    edx,ecx
  4027c0:	mov    DWORD PTR [ebp+0xc],edx
  4027c3:	mov    edx,DWORD PTR [ebp+0xc]
  4027c6:	mov    DWORD PTR [ebp-0x50],edx
  4027c9:	mov    edx,DWORD PTR [ebp+0x10]
  4027cc:	mov    DWORD PTR [ebp-0x4c],0xf89c85b5
  4027d3:	mov    DWORD PTR [ebp-0x68],edx
  4027d6:	mov    DWORD PTR [ebp-0x24],0xf89c85b4
  4027dd:	mov    edx,DWORD PTR [ebp-0x4c]
  4027e0:	xor    edx,esi
  4027e2:	add    edx,edi
  4027e4:	mov    DWORD PTR [ebp+0x10],edx
  4027e7:	mov    edx,DWORD PTR [ebp-0x4c]
  4027ea:	xor    edx,esi
  4027ec:	add    edx,edi
  4027ee:	mov    DWORD PTR [ebp+0xc],edx
  4027f1:	mov    DWORD PTR [ebp-0x64],0xf89c85d5
  4027f8:	mov    DWORD PTR [ebp-0x60],0xf89c85be
  4027ff:	mov    edx,DWORD PTR [ebp-0x4c]
  402802:	mov    ebx,DWORD PTR [ebp-0x50]
  402805:	xor    edx,esi
  402807:	add    edx,edi
  402809:	cmp    ebx,edx
  40280b:	je     0x402a18
  402811:	mov    eax,DWORD PTR [ebp-0x24]
  402814:	xor    eax,esi
  402816:	mov    edx,0xffcd8d22
  40281b:	sub    edx,eax
  40281d:	add    edx,DWORD PTR [ebp-0x50]
  402820:	mov    eax,DWORD PTR [ebp-0x24]
  402823:	mov    ebx,DWORD PTR [ebp+0x10]
  402826:	xor    eax,esi
  402828:	add    eax,edi
  40282a:	imul   eax,ebx
  40282d:	cmp    eax,edx
  40282f:	ja     0x402a15
  402835:	mov    edx,DWORD PTR [ebp+0x10]
  402838:	mov    eax,DWORD PTR [ebp-0x50]
  40283b:	mov    ebx,DWORD PTR [ebp-0x64]
  40283e:	sub    eax,edx
  402840:	xor    ebx,esi
  402842:	xor    edx,edx
  402844:	add    ebx,edi
  402846:	div    ebx
  402848:	mov    DWORD PTR [ebp+0xc],eax
  40284b:	mov    eax,DWORD PTR [ebp-0x60]
  40284e:	mov    edx,DWORD PTR [ebp+0xc]
  402851:	xor    eax,esi
  402853:	add    eax,edi
  402855:	cmp    edx,eax
  402857:	jbe    0x402867
  40285d:	mov    eax,DWORD PTR [ebp-0x60]
  402860:	xor    eax,esi
  402862:	add    eax,edi
  402864:	mov    DWORD PTR [ebp+0xc],eax
  402867:	mov    eax,DWORD PTR [ebp-0x64]
  40286a:	mov    edx,DWORD PTR [ebp+0xc]
  40286d:	xor    eax,esi
  40286f:	add    eax,edi
  402871:	imul   eax,edx
  402874:	mov    DWORD PTR [ebp+0xc],eax
  402877:	mov    eax,DWORD PTR [ebp-0x4c]
  40287a:	mov    edx,DWORD PTR [ebp+0xc]
  40287d:	xor    eax,esi
  40287f:	add    eax,edi
  402881:	cmp    edx,eax
  402883:	je     0x4029fe
  402889:	mov    eax,DWORD PTR [ebp+0xc]
  40288c:	mov    DWORD PTR [ebp-0x30],eax
  40288f:	mov    eax,DWORD PTR [ebp+0x10]
  402892:	add    eax,DWORD PTR [ebp-0x68]
  402895:	mov    DWORD PTR [ebp-0x38],0xf89c85b5
  40289c:	mov    DWORD PTR [ebp-0x2c],eax
  40289f:	mov    eax,0xf89c85b4
  4028a4:	mov    DWORD PTR [ebp-0x5c],eax
  4028a7:	mov    DWORD PTR [ebp-0x54],0xf89c85b3
  4028ae:	mov    DWORD PTR [ebp-0x10],0xf89c85b2
  4028b5:	mov    DWORD PTR [ebp-0x28],eax
  4028b8:	mov    eax,DWORD PTR [ebp-0x38]
  4028bb:	xor    eax,esi
  4028bd:	add    eax,edi
  4028bf:	jmp    0x4029ba
  4028c4:	mov    eax,DWORD PTR [ebp-0x28]
  4028c7:	mov    edx,DWORD PTR [ebp+0xc]
  4028ca:	xor    eax,esi
  4028cc:	add    eax,edi
  4028ce:	imul   eax,edx
  4028d1:	mov    edx,DWORD PTR [ebp-0x2c]
  4028d4:	mov    BYTE PTR [eax+edx*1],0x0
  4028d8:	mov    DWORD PTR [ebp-0x70],0xf89c85bb
  4028df:	mov    DWORD PTR [ebp-0x74],0xf89c85a1
  4028e6:	mov    eax,DWORD PTR [ebp-0x28]
  4028e9:	mov    edx,DWORD PTR [ebp+0xc]
  4028ec:	xor    eax,esi
  4028ee:	add    eax,edi
  4028f0:	imul   eax,edx
  4028f3:	mov    edx,DWORD PTR [ebp-0x2c]
  4028f6:	mov    al,BYTE PTR [eax+edx*1]
  4028f9:	mov    BYTE PTR [ebp-0x1],al
  4028fc:	mov    eax,DWORD PTR [ebp-0x28]
  4028ff:	mov    edx,DWORD PTR [ebp+0xc]
  402902:	xor    eax,esi
  402904:	add    eax,edi
  402906:	imul   eax,edx
  402909:	mov    edx,DWORD PTR [ebp-0x54]
  40290c:	xor    edx,esi
  40290e:	add    eax,edx
  402910:	mov    edx,DWORD PTR [ebp-0x2c]
  402913:	movzx  eax,BYTE PTR [eax+edx*1+0x3272de]
  40291b:	mov    edx,DWORD PTR [ebp-0x70]
  40291e:	xor    edx,esi
  402920:	lea    eax,[edx+eax*1+0x3272de]
  402927:	movzx  edx,BYTE PTR [ebp-0x1]
  40292b:	xor    edx,eax
  40292d:	mov    BYTE PTR [ebp-0x1],dl
  402930:	mov    al,BYTE PTR [ebp-0x1]
  402933:	mov    edx,DWORD PTR [ebp-0x28]
  402936:	mov    ebx,DWORD PTR [ebp+0xc]
  402939:	xor    edx,esi
  40293b:	add    edx,edi
  40293d:	imul   edx,ebx
  402940:	mov    ebx,DWORD PTR [ebp-0x2c]
  402943:	mov    BYTE PTR [edx+ebx*1],al
  402946:	mov    eax,DWORD PTR [ebp-0x28]
  402949:	mov    edx,DWORD PTR [ebp+0xc]
  40294c:	xor    eax,esi
  40294e:	add    eax,edi
  402950:	imul   eax,edx
  402953:	mov    edx,DWORD PTR [ebp-0x2c]
  402956:	mov    al,BYTE PTR [eax+edx*1]
  402959:	mov    BYTE PTR [ebp-0x1],al
  40295c:	mov    eax,DWORD PTR [ebp-0x28]
  40295f:	mov    edx,DWORD PTR [ebp+0xc]
  402962:	xor    eax,esi
  402964:	add    eax,edi
  402966:	imul   eax,edx
  402969:	mov    edx,DWORD PTR [ebp-0x5c]
  40296c:	xor    edx,esi
  40296e:	add    eax,edx
  402970:	mov    edx,DWORD PTR [ebp-0x2c]
  402973:	movzx  eax,BYTE PTR [eax+edx*1+0x3272de]
  40297b:	mov    edx,DWORD PTR [ebp-0x74]
  40297e:	xor    edx,esi
  402980:	lea    eax,[edx+eax*1+0x3272de]
  402987:	movzx  edx,BYTE PTR [ebp-0x1]
  40298b:	xor    edx,eax
  40298d:	mov    BYTE PTR [ebp-0x1],dl
  402990:	mov    al,BYTE PTR [ebp-0x1]
  402993:	mov    edx,DWORD PTR [ebp-0x28]
  402996:	mov    ebx,DWORD PTR [ebp+0xc]
  402999:	xor    edx,esi
  40299b:	add    edx,edi
  40299d:	imul   edx,ebx
  4029a0:	mov    ebx,DWORD PTR [ebp-0x2c]
  4029a3:	mov    BYTE PTR [edx+ebx*1],al
  4029a6:	mov    eax,DWORD PTR [ebp-0x10]
  4029a9:	mov    edx,DWORD PTR [ebp-0x5c]
  4029ac:	xor    eax,esi
  4029ae:	xor    edx,esi
  4029b0:	add    eax,edi
  4029b2:	add    edx,edi
  4029b4:	imul   eax,edx
  4029b7:	add    eax,DWORD PTR [ebp+0xc]
  4029ba:	mov    DWORD PTR [ebp+0xc],eax
  4029bd:	mov    eax,DWORD PTR [ebp+0xc]
  4029c0:	mov    edx,DWORD PTR [ebp-0x30]
  4029c3:	cmp    edx,eax
  4029c5:	jb     0x4028c4
  4029cb:	mov    eax,DWORD PTR [ebp-0x5c]
  4029ce:	mov    edx,DWORD PTR [ebp-0x30]
  4029d1:	xor    eax,esi
  4029d3:	add    eax,edi
  4029d5:	imul   eax,edx
  4029d8:	mov    edx,DWORD PTR [ebp-0x38]
  4029db:	xor    edx,esi
  4029dd:	add    edx,edi
  4029df:	or     eax,edx
  4029e1:	mov    edx,DWORD PTR [ebp-0x24]
  4029e4:	xor    edx,esi
  4029e6:	add    eax,edx
  4029e8:	mov    edx,DWORD PTR [ebp-0x24]
  4029eb:	xor    edx,esi
  4029ed:	add    eax,edx
  4029ef:	mov    edx,DWORD PTR [ebp+0x10]
  4029f2:	lea    eax,[eax+edx*1+0x64e5bc]
  4029f9:	jmp    0x402a0d
  4029fe:	mov    eax,DWORD PTR [ebp-0x24]
  402a01:	mov    edx,DWORD PTR [ebp+0x10]
  402a04:	xor    eax,esi
  402a06:	lea    eax,[eax+edx*1+0x3272de]
  402a0d:	mov    DWORD PTR [ebp+0x10],eax
  402a10:	jmp    0x402811
  402a15:	mov    eax,DWORD PTR [ebp-0x18]
  402a18:	mov    edx,DWORD PTR [ebp-0x44]
  402a1b:	xor    edx,esi
  402a1d:	lea    ecx,[ecx+edx*1+0x3272de]
  402a24:	lea    edx,[ecx-0x3272de]
  402a2a:	xor    edx,esi
  402a2c:	cmp    edx,0xf89c95b5
  402a32:	jne    0x4027b5
  402a38:	mov    ecx,DWORD PTR [ebp-0x1c]
  402a3b:	mov    edx,DWORD PTR [ebp-0x44]
  402a3e:	mov    ebx,DWORD PTR [ebp-0x1c]
  402a41:	xor    edx,esi
  402a43:	mov    dl,BYTE PTR [edx+eax*1+0x3272de]
  402a4a:	xor    ecx,esi
  402a4c:	mov    cl,BYTE PTR [ecx+eax*1+0x3272de]
  402a53:	xor    ebx,esi
  402a55:	mov    BYTE PTR [ebx+eax*1+0x3272de],dl
  402a5c:	mov    edx,DWORD PTR [ebp-0x44]
  402a5f:	xor    edx,esi
  402a61:	mov    BYTE PTR [edx+eax*1+0x3272de],cl
  402a68:	mov    eax,DWORD PTR [ebp-0x44]
  402a6b:	mov    eax,DWORD PTR [ebp-0x8]
  402a6e:	xor    eax,esi
  402a70:	add    eax,edi
  402a72:	mov    ds:0x42e4b9,eax
  402a77:	mov    eax,DWORD PTR [ebp-0x8]
  402a7a:	xor    eax,esi
  402a7c:	add    eax,edi
  402a7e:	mov    ds:0x42e4b1,eax
  402a83:	lea    eax,[ebp-0x34]
  402a86:	mov    DWORD PTR [ebp-0x98],eax
  402a8c:	lea    eax,[ebp+0x4]
  402a8f:	mov    DWORD PTR [ebp-0x34],eax
  402a92:	mov    eax,DWORD PTR [ebp-0x34]
  402a95:	test   eax,eax
  402a97:	je     0x402bc8
  402a9d:	mov    DWORD PTR [ebp-0x90],0xf152c3c
  402aa7:	mov    DWORD PTR [ebp-0x84],0x712ed0f
  402ab1:	mov    DWORD PTR [ebp-0x8c],0x373fc2d
  402abb:	mov    DWORD PTR [ebp-0x94],0x72670a1d
  402ac5:	call   0x405a40
  402aca:	mov    eax,DWORD PTR [ebp-0x20]
  402acd:	mov    eax,DWORD PTR [ebp-0xc]
  402ad0:	mov    eax,DWORD PTR [ebp-0x8]
  402ad3:	mov    DWORD PTR [ebp+0xc],eax
  402ad6:	mov    eax,eax
  402ad8:	mov    eax,ds:0x42e435
  402add:	mov    eax,DWORD PTR [eax+0x1c8]
  402ae3:	mov    eax,DWORD PTR [eax]
  402ae5:	cdq    
  402ae6:	mov    ebx,eax
  402ae8:	mov    eax,0xfabdbeeb
  402aed:	add    ebx,eax
  402aef:	adc    edx,0xffffffff
  402af2:	and    DWORD PTR [ebp-0x10],0x0
  402af6:	xor    edx,0x0
  402af9:	mov    DWORD PTR [ebp-0x68],edx
  402afc:	mov    edx,DWORD PTR [ebp+0xc]
  402aff:	mov    DWORD PTR [ebp-0x14],edx
  402b02:	mov    ecx,0x8a29a129
  402b07:	xor    ebx,ecx
  402b09:	add    DWORD PTR [ebp-0x14],eax
  402b0c:	mov    edx,DWORD PTR [ebp-0x14]
  402b0f:	adc    DWORD PTR [ebp-0x10],0xffffffff
  402b13:	xor    edx,ecx
  402b15:	mov    DWORD PTR [ebp-0x58],edx
  402b18:	mov    edx,DWORD PTR [ebp-0x10]
  402b1b:	xor    edx,0x0
  402b1e:	mov    DWORD PTR [ebp-0x54],edx
  402b21:	cmp    DWORD PTR [ebp-0x58],ebx
  402b24:	jne    0x402b36
  402b2a:	mov    edx,DWORD PTR [ebp-0x68]
  402b2d:	cmp    DWORD PTR [ebp-0x54],edx
  402b30:	je     0x402b65
  402b36:	mov    edx,DWORD PTR ds:0x42e435
  402b3c:	mov    edx,DWORD PTR [edx+0x1c0]
  402b42:	mov    edx,DWORD PTR [edx]
  402b44:	xor    ebx,ebx
  402b46:	add    edx,eax
  402b48:	adc    ebx,0xffffffff
  402b4b:	xor    edx,ecx
  402b4d:	xor    ebx,0x0
  402b50:	cmp    edx,0x70941fc5
  402b56:	jne    0x402bc8
  402b5c:	cmp    ebx,0xffffffff
  402b5f:	jne    0x402bc8
  402b65:	mov    edx,DWORD PTR ds:0x42e4b1
  402b6b:	mov    ebx,DWORD PTR ds:0x42e4b9
  402b71:	xor    edx,ebx
  402b73:	mov    DWORD PTR ds:0x42e4b1,edx
  402b79:	mov    edx,DWORD PTR [ebp-0x34]
  402b7c:	mov    ebx,DWORD PTR ds:0x42e4b1
  402b82:	add    ebx,DWORD PTR [edx]
  402b84:	mov    edx,DWORD PTR [ebp-0x34]
  402b87:	mov    DWORD PTR [edx],ebx
  402b89:	mov    edx,DWORD PTR [ebp+0xc]
  402b8c:	xor    esi,edx
  402b8e:	mov    edx,DWORD PTR ds:0x42e4b1
  402b94:	add    esi,edi
  402b96:	xor    ebx,ebx
  402b98:	add    esi,eax
  402b9a:	adc    ebx,0xffffffff
  402b9d:	xor    edi,edi
  402b9f:	xor    esi,ecx
  402ba1:	xor    ebx,0x0
  402ba4:	add    edx,eax
  402ba6:	adc    edi,0xffffffff
  402ba9:	xor    edx,ecx
  402bab:	xor    edi,0x0
  402bae:	cmp    edx,esi
  402bb0:	jne    0x402bc8
  402bb6:	cmp    edi,ebx
  402bb8:	jne    0x402bc8
  402bbe:	mov    eax,ds:0x42e4b1
  402bc3:	mov    ds:0x42e4b9,eax
  402bc8:	mov    eax,ds:0x42e435
  402bcd:	push   0x4
  402bcf:	add    eax,0x1cc
  402bd4:	push   eax
  402bd5:	lea    eax,[ebp-0x20]
  402bd8:	push   eax
  402bd9:	call   0x402bee
  402bde:	mov    eax,DWORD PTR [ebp-0x20]
  402be1:	mov    eax,DWORD PTR [eax]
  402be3:	pop    ebx
  402be4:	pop    edi
  402be5:	pop    esi
  402be6:	leave  
  402be7:	ret    0xc
  402bea:	xor    eax,eax
  402bec:	inc    eax
  402bed:	ret    
  402bee:	push   ebp
  402bef:	mov    ebp,esp
  402bf1:	sub    esp,0x10
  402bf4:	jmp    0x404f42
  402bf9:	push   cs
  402bfa:	xlat   BYTE PTR ds:[ebx]
  402bfb:	xchg   ecx,eax
  402bfc:	loopne 0x402c6f
  402bfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bff:	emms   
  402c01:	adc    al,ah
  402c03:	sub    DWORD PTR [ecx+ecx*4+0x3f],0x78784d6f
  402c0b:	js     0x402c85
  402c0d:	dec    ecx
  402c0e:	pop    edi
  402c0f:	js     0x402c89
  402c11:	adc    DWORD PTR [esi],ebp
  402c13:	pop    ss
  402c14:	cmp    eax,0x2f1b2115
  402c19:	popa   
  402c1a:	ds gs fs mov al,0x64
  402c1f:	push   0xc1306968
  402c24:	fdivp  st(5),st
  402c26:	push   edx
  402c27:	dec    edx
  402c28:	imul   edi,DWORD PTR [ebp+0x5b],0xffffff92
  402c2c:	bound  ebp,QWORD PTR [ecx+0x55]
  402c2f:	iret   
  402c30:	pop    ecx
  402c31:	dec    eax
  402c32:	and    cl,BYTE PTR [esi+0x577487f8]
  402c38:	dec    ecx
  402c39:	jg     0x402c72
  402c3b:	jb     0x402be1
  402c3d:	jg     0x402be1
  402c3f:	mov    al,ds:0x64ff2e3b
  402c44:	fdivp  st(0),st
  402c46:	push   ebx
  402c47:	jg     0x402c65
  402c49:	jmp    0xe9f8f583
  402c4e:	xchg   DWORD PTR [ebx],edx
  402c50:	fmul   QWORD PTR [ebx-0x54aaf0db]
  402c56:	mov    dh,al
  402c58:	imul   DWORD PTR [ecx-0x27]
  402c5b:	push   es
  402c5c:	(bad)  
  402c5d:	or     al,0xf8
  402c5f:	and    al,0x1a
  402c61:	dec    edx
  402c62:	push   cs
  402c63:	and    al,0x6b
  402c65:	push   0xffffffb5
  402c67:	scas   eax,DWORD PTR es:[edi]
  402c68:	adc    ebx,DWORD PTR [ebp+0x1]
  402c6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c6c:	jmp    ebp
  402c6e:	inc    ebp
  402c6f:	sub    esi,DWORD PTR [esi+0x30]
  402c72:	retf   0xf55b
  402c75:	sbb    al,bh
  402c77:	jp     0x402c36
  402c79:	arpl   cx,bx
  402c7b:	call   0x8016:0x7bd8b5f
  402c82:	dec    ebp
  402c83:	repz pushf 
  402c85:	ds jo  0x402cfb
  402c88:	or     ebx,eax
  402c8a:	sub    DWORD PTR [eax-0x77],edx
  402c8d:	xor    edx,DWORD PTR ss:[esi-0x1d]
  402c91:	iret   
  402c92:	mov    BYTE PTR ds:0xceb7b285,ah
  402c98:	mov    ch,BYTE PTR [ebp-0x1a]
  402c9b:	inc    ecx
  402c9c:	push   eax
  402c9d:	dec    esi
  402c9e:	push   cs
  402c9f:	cmp    al,0xf3
  402ca1:	xor    al,0x3
  402ca3:	test   eax,0x32a7c84b
  402ca8:	ret    0x5406
  402cab:	stc    
  402cac:	push   eax
  402cad:	push   esp
  402cae:	mov    eax,ds:0xfabf6af5
  402cb3:	inc    eax
  402cb4:	add    BYTE PTR [eax-0x72],bl
  402cb7:	mov    ch,0x47
  402cb9:	int    0x26
  402cbb:	enter  0xe463,0xad
  402cbf:	pop    eax
  402cc0:	aam    0x7f
  402cc2:	bound  ebx,QWORD PTR [edi-0x3]
  402cc5:	je     0x402c4c
  402cc7:	xor    DWORD PTR [ecx+edi*4-0x458dd68d],eax
  402cce:	inc    edx
  402ccf:	test   eax,0x69de75ff
  402cd4:	xlat   BYTE PTR ds:[ebx]
  402cd5:	jns    0x402cc2
  402cd7:	stos   DWORD PTR es:[edi],eax
  402cd8:	pop    es
  402cd9:	hlt    
  402cda:	jecxz  0x402d4c
  402cdc:	aas    
  402cdd:	mov    BYTE PTR [ebp-0x2a],al
  402ce0:	loope  0x402c86
  402ce2:	inc    ebp
  402ce3:	outs   dx,BYTE PTR ds:[esi]
  402ce4:	mov    al,ds:0xcee8e98c
  402ce9:	mov    ds:0x8ad08032,al
  402cee:	out    dx,eax
  402cef:	lock or BYTE PTR [esi+0x43],0x48
  402cf4:	sbb    al,0xd0
  402cf6:	xor    esp,ebp
  402cf8:	shl    BYTE PTR [esp+esi*8-0x45],1
  402cfc:	idiv   BYTE PTR es:[esi+0x76]
  402d00:	pop    eax
  402d01:	push   ebx
  402d02:	pop    ebp
  402d03:	jns    0x402d04
  402d05:	mov    WORD PTR [esi+0x20],?
  402d08:	xchg   esp,eax
  402d09:	jmp    0xece5:0x10e88aa1
  402d10:	fcomp  QWORD PTR [ebp-0x6d]
  402d13:	fs lahf 
  402d15:	sub    BYTE PTR [eax-0x5c],dh
  402d18:	not    DWORD PTR [eax]
  402d1a:	pop    ecx
  402d1b:	xor    BYTE PTR [edi-0x2fc7ae35],bh
  402d21:	add    ecx,DWORD PTR [edx+0x50]
  402d24:	mov    dh,0x81
  402d26:	aaa    
  402d27:	jmp    0x6abd6cee
  402d2c:	adc    ebx,edi
  402d2e:	and    dl,dl
  402d30:	cwde   
  402d31:	xor    BYTE PTR [eax],ah
  402d33:	inc    ebp
  402d34:	fdivp  st(1),st
  402d36:	int3   
  402d37:	push   es
  402d38:	ret    0xeab4
  402d3b:	mov    ds:0x97706b8b,eax
  402d40:	push   edi
  402d41:	pop    esp
  402d42:	(bad)  
  402d43:	imul   edx,DWORD PTR [ebx-0x2bf7b398],0x8dd8a530
  402d4d:	cli    
  402d4e:	mov    ebx,DWORD PTR [edx+ecx*4]
  402d51:	pop    ebx
  402d52:	shr    ch,1
  402d54:	mov    ch,0xe7
  402d56:	mov    esp,0x3563456e
  402d5b:	fcom   st(0)
  402d5d:	outs   dx,BYTE PTR ds:[esi]
  402d5e:	add    esi,DWORD PTR [edi+eiz*1]
  402d61:	out    0xd7,al
  402d63:	gs fwait
  402d65:	and    edx,DWORD PTR [ebp-0x5a]
  402d68:	mov    ds:0xbee7acb0,eax
  402d6d:	add    al,0x6a
  402d6f:	push   ds
  402d70:	cld    
  402d71:	sar    DWORD PTR [eax+0x6d],1
  402d74:	mov    dl,0x2d
  402d76:	in     al,dx
  402d77:	fwait
  402d78:	jp     0x402d34
  402d7a:	loopne 0x402d94
  402d7c:	mov    gs,WORD PTR [ecx]
  402d7e:	hlt    
  402d7f:	adc    bh,BYTE PTR [eax-0x6b]
  402d82:	xchg   esi,eax
  402d83:	inc    eax
  402d84:	mov    eax,ds:0x201f0d51
  402d89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d8a:	rcl    DWORD PTR gs:[edi-0x4],1
  402d8e:	pop    ds
  402d8f:	mov    eax,ds:0xbc8c4f19
  402d94:	mov    edi,0x716fb240
  402d99:	bnd jmp 0xc6085b47
  402d9f:	mov    es,WORD PTR [eax+ecx*1+0x3f7cee9f]
  402da6:	int    0x91
  402da8:	lahf   
  402da9:	aas    
  402daa:	adc    DWORD PTR [ecx+edx*1],esp
  402dad:	inc    edi
  402dae:	add    ah,BYTE PTR [ebp-0x6d]
  402db1:	in     eax,0x8
  402db3:	inc    edx
  402db4:	jge    0x402dc5
  402db6:	loopne 0x402d91
  402db8:	push   esi
  402db9:	fstp   TBYTE PTR [edi+0x6751aa5c]
  402dbf:	sub    BYTE PTR [ecx+eiz*8-0x3900ed71],0x44
  402dc7:	aam    0xbc
  402dc9:	div    edx
  402dcb:	sub    eax,0xbcf48594
  402dd0:	jno    0x402d8b
  402dd2:	push   edx
  402dd3:	jp     0x402e16
  402dd5:	inc    eax
  402dd6:	push   edx
  402dd7:	stc    
  402dd8:	xchg   BYTE PTR [ecx+0x29],dl
  402ddb:	call   0x13bb:0xb499d73d
  402de2:	popa   
  402de3:	sub    edx,DWORD PTR [esi-0x15]
  402de6:	push   edi
  402de7:	in     eax,0xf0
  402de9:	push   0xdb911a7d
  402dee:	adc    bh,BYTE PTR [ecx+0x2e]
  402df1:	sbb    DWORD PTR [edx+eax*2],ecx
  402df4:	scas   al,BYTE PTR es:[edi]
  402df5:	add    eax,ebx
  402df7:	test   eax,0x2119c05e
  402dfc:	inc    edx
  402dfd:	call   0xe7cc:0xb66a3547
  402e04:	lods   eax,DWORD PTR ds:[esi]
  402e05:	fsub   QWORD PTR [ecx+0x59]
  402e08:	inc    ebx
  402e09:	jmp    0x688d2b95
  402e0e:	pop    ebp
  402e0f:	sbb    al,0x14
  402e11:	mov    ecx,0x62e0b313
  402e16:	xchg   BYTE PTR [ecx],dh
  402e18:	retf   0x560e
  402e1b:	mov    ds:0xec4c2c5c,al
  402e20:	std    
  402e21:	stos   BYTE PTR es:[edi],al
  402e22:	dec    eax
  402e23:	(bad)  
  402e24:	mov    bh,0x8d
  402e26:	xchg   esp,eax
  402e27:	mov    edx,0x2c109e49
  402e2c:	adc    al,0x2
  402e2e:	ds clc 
  402e30:	outs   dx,BYTE PTR ds:[esi]
  402e31:	mov    ecx,0xf2fe954f
  402e36:	(bad)  
  402e37:	ror    BYTE PTR [esi-0x444c858b],0x5d
  402e3e:	jle    0x402df9
  402e40:	cmp    BYTE PTR ds:0x73913304,al
  402e46:	fst    QWORD PTR [ebp+0x5d]
  402e49:	ret    
  402e4a:	xchg   ecx,eax
  402e4b:	mov    dh,0xfb
  402e4d:	retf   0x1bae
  402e50:	or     esi,DWORD PTR [edx+0x68de513e]
  402e56:	push   ds
  402e57:	imul   bx,di,0xffb9
  402e5b:	jmp    0xb50cc26b
  402e60:	mov    al,0x75
  402e62:	(bad)  
  402e63:	fcom   DWORD PTR [ebp+0x77]
  402e66:	arpl   WORD PTR [edx-0x54872fb4],bx
  402e6c:	pop    ss
  402e6d:	rcl    BYTE PTR [ebp+0x59],1
  402e70:	mov    edx,?
  402e72:	je     0x402e40
  402e74:	in     eax,dx
  402e75:	ret    0xded7
  402e78:	jle    0x402ee9
  402e7a:	push   cs
  402e7b:	loop   0x402e01
  402e7d:	jp     0x402eec
  402e7f:	call   FWORD PTR [esi+ecx*1-0x72]
  402e83:	hlt    
  402e84:	cdq    
  402e85:	shl    BYTE PTR [edi],cl
  402e87:	outs   dx,DWORD PTR ds:[esi]
  402e88:	stc    
  402e89:	shl    BYTE PTR [ecx],cl
  402e8b:	dec    eax
  402e8c:	ficom  WORD PTR [esi-0x4013fdd7]
  402e92:	ds push edi
  402e94:	in     al,dx
  402e95:	pop    edx
  402e96:	je     0x402eb5
  402e98:	adc    bh,bh
  402e9a:	mov    bl,0x6d
  402e9c:	mov    ah,0xa3
  402e9e:	xor    ah,BYTE PTR ds:0xb2afc163
  402ea4:	push   ss
  402ea5:	ds and cl,bl
  402ea8:	xor    esp,DWORD PTR [ebp-0x15]
  402eab:	adc    eax,0x7e354124
  402eb0:	jo     0x402eda
  402eb2:	rcr    DWORD PTR [ecx],cl
  402eb4:	mov    ch,0x15
  402eb6:	cmp    dl,BYTE PTR ds:0xbee86780
  402ebc:	loope  0x402ef9
  402ebe:	ins    DWORD PTR es:[edi],dx
  402ebf:	sub    bh,BYTE PTR [edx-0x69]
  402ec2:	dec    edi
  402ec3:	outs   dx,BYTE PTR ds:[esi]
  402ec4:	das    
  402ec5:	test   DWORD PTR [eax+esi*8-0x77],ebp
  402ec9:	sub    dl,BYTE PTR [eax]
  402ecb:	into   
  402ecc:	dec    edi
  402ecd:	mov    ecx,0x36536d33
  402ed2:	imul   edx,DWORD PTR [ebx+0x47],0xfffffff3
  402ed6:	xor    edx,DWORD PTR [eax-0x48a90635]
  402edc:	pop    ss
  402edd:	cmp    ecx,ecx
  402edf:	jnp    0x402f2b
  402ee1:	fild   WORD PTR [ebp-0x55]
  402ee4:	in     al,0x8
  402ee6:	lods   al,BYTE PTR ds:[esi]
  402ee7:	(bad)  
  402ee8:	not    DWORD PTR [eax+esi*2-0xb07e6e0]
  402eef:	pop    eax
  402ef0:	aad    0xd0
  402ef2:	fucomip st,st(2)
  402ef4:	fwait
  402ef5:	imul   ebx,DWORD PTR [eax-0x1b],0x179eeef1
  402efc:	push   ds
  402efd:	outs   dx,DWORD PTR ds:[esi]
  402efe:	jno    0x402f68
  402f00:	pop    edi
  402f01:	mov    esi,0x2212f5a2
  402f06:	sbb    BYTE PTR ds:0xec0b31a9,bl
  402f0c:	xor    eax,ecx
  402f0e:	mov    ds:0xbd76ea08,eax
  402f13:	cmp    BYTE PTR [edx],cl
  402f15:	rol    DWORD PTR [ecx],0x39
  402f18:	pop    ecx
  402f19:	mov    ch,0xcc
  402f1b:	popf   
  402f1c:	mov    ebx,0x4af8bee5
  402f21:	cld    
  402f22:	(bad)  
  402f23:	lock pop ebp
  402f25:	mov    ebp,0xc6d322c7
  402f2a:	in     al,dx
  402f2b:	outs   dx,DWORD PTR ds:[esi]
  402f2c:	fisub  DWORD PTR [edi-0x7e98af72]
  402f32:	jmp    0x402f6f
  402f34:	ins    BYTE PTR es:[edi],dx
  402f35:	sahf   
  402f36:	and    al,0x6e
  402f38:	cdq    
  402f39:	pop    esp
  402f3a:	mov    DWORD PTR ds:[edx+0xe393c80],edi
  402f41:	or     BYTE PTR [ebx],0x98
  402f44:	(bad)  
  402f46:	jnp    0x402f99
  402f48:	cmp    DWORD PTR [ecx-0x44],ebx
  402f4b:	call   0x55bf:0xbb8fe61f
  402f52:	pop    ecx
  402f53:	std    
  402f54:	inc    ecx
  402f55:	jmp    DWORD PTR [edi+0x1]
  402f58:	fdiv   DWORD PTR ds:0xefa07470
  402f5e:	lods   eax,DWORD PTR ds:[esi]
  402f5f:	xchg   ecx,eax
  402f60:	xor    esp,eax
  402f62:	and    ebp,DWORD PTR [edi+0x69ccadf7]
  402f68:	mov    ds:0xff02596f,eax
  402f6d:	sub    al,0x1c
  402f6f:	out    0x97,eax
  402f71:	mov    ecx,0xd993345c
  402f76:	iret   
  402f77:	sahf   
  402f78:	lahf   
  402f79:	pop    ss
  402f7a:	inc    eax
  402f7b:	aaa    
  402f7c:	xchg   ebp,eax
  402f7d:	sub    al,0x76
  402f7f:	jb     0x402fa6
  402f81:	mov    ecx,0x48bbb897
  402f86:	inc    ebx
  402f87:	lods   al,BYTE PTR ds:[si]
  402f89:	(bad)  
  402f8a:	repnz adc dh,BYTE PTR [ebp+0x33]
  402f8e:	inc    ebp
  402f8f:	ins    BYTE PTR es:[edi],dx
  402f90:	or     DWORD PTR [ecx-0x7b],edx
  402f93:	loope  0x402fe8
  402f95:	mov    dl,0x19
  402f97:	push   ds
  402f98:	les    ecx,FWORD PTR [ebp+0x31]
  402f9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f9c:	and    al,0x70
  402f9e:	jbe    0x402fad
  402fa0:	jo     0x402f41
  402fa2:	mov    bh,0xc7
  402fa4:	repz mov ebp,0xa7ff5d4
  402faa:	aaa    
  402fab:	push   0xffffffac
  402fad:	push   ebp
  402fae:	cmc    
  402faf:	push   dx
  402fb1:	pushf  
  402fb2:	rcl    BYTE PTR [ebx],cl
  402fb4:	fdiv   DWORD PTR [edx]
  402fb6:	test   al,0xb3
  402fb8:	jge    0x40300b
  402fba:	jns    0x40302e
  402fbc:	add    DWORD PTR ds:0x827ced4f,edx
  402fc2:	dec    edi
  402fc3:	and    eax,0x8552a746
  402fc8:	adc    bh,BYTE PTR es:[ebx]
  402fcb:	jne    0x403013
  402fcd:	pop    ebp
  402fce:	sub    al,0xc4
  402fd0:	inc    edx
  402fd1:	cli    
  402fd2:	enter  0xb7d,0x3f
  402fd6:	fidivr DWORD PTR [edx]
  402fd8:	in     al,dx
  402fd9:	jno    0x403057
  402fdb:	jmp    0x403023
  402fdd:	cli    
  402fde:	sahf   
  402fdf:	xor    BYTE PTR [ebx-0x3e],0xe7
  402fe3:	push   esp
  402fe4:	jb     0x402f98
  402fe6:	cmp    eax,0x9538a481
  402feb:	add    eax,0x5021bcb1
  402ff0:	mov    edi,0x1194b32d
  402ff5:	shl    BYTE PTR [eax-0x20e39f30],1
  402ffb:	mov    al,0x2d
  402ffd:	aaa    
  402ffe:	cmp    BYTE PTR [esi-0x5b],bh
  403001:	scas   al,BYTE PTR es:[edi]
  403002:	jne    0x403019
  403004:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403005:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403006:	dec    ecx
  403007:	sbb    DWORD PTR [eax+0x41],edx
  40300a:	mov    ah,0xfe
  40300c:	xlat   BYTE PTR ds:[ebx]
  40300d:	popf   
  40300e:	leave  
  40300f:	jno    0x403029
  403011:	push   edx
  403012:	and    al,0xe6
  403014:	jl     0x40303a
  403016:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403017:	mov    al,es:0x1e9fe672
  40301d:	fcomp  QWORD PTR [edi+eiz*2+0x1390488b]
  403024:	or     cl,al
  403026:	into   
  403027:	xor    al,0x9d
  403029:	inc    esp
  40302a:	mov    ch,0x7b
  40302c:	into   
  40302d:	cmp    eax,0xdd62c91f
  403032:	sub    ch,BYTE PTR ss:[ebp+eiz*2+0x55]
  403037:	loopne 0x40305b
  403039:	sahf   
  40303a:	mov    DWORD PTR [edi+0x2d],ebx
  40303d:	jmp    0x77a:0xdd474f64
  403044:	lock ins DWORD PTR es:[edi],dx
  403046:	outs   dx,DWORD PTR ds:[esi]
  403047:	sub    DWORD PTR [edi+esi*4],esp
  40304a:	mov    DWORD PTR [di-0x14],ebp
  40304e:	scas   al,BYTE PTR es:[edi]
  40304f:	pop    esp
  403050:	sbb    ebx,0x1046801c
  403056:	pusha  
  403057:	loop   0x403027
  403059:	and    al,0x3
  40305b:	cli    
  40305c:	sti    
  40305d:	and    DWORD PTR [eax+eiz*4],ecx
  403060:	imul   ebx
  403062:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403063:	cld    
  403064:	mov    esp,0x26e4d717
  403069:	mov    eax,ds:0xab618d48
  40306e:	mov    al,ds:0x9b000778
  403073:	arpl   WORD PTR [esi-0x29],ax
  403076:	add    DWORD PTR [eax],ebp
  403078:	mov    ch,0x7b
  40307a:	ja     0x403073
  40307c:	push   ss
  40307d:	jb     0x40304b
  40307f:	jo     0x4030cd
  403081:	in     al,dx
  403082:	pop    edx
  403083:	pop    es
  403084:	and    ch,ch
  403086:	pop    esi
  403087:	lods   eax,DWORD PTR ds:[esi]
  403088:	ror    DWORD PTR [edx],0x45
  40308b:	add    ebx,ebx
  40308d:	pop    ds
  40308e:	loope  0x403087
  403090:	or     BYTE PTR [ecx+0x336029a3],al
  403096:	pop    ss
  403097:	out    dx,al
  403098:	xlat   BYTE PTR ds:[ebx]
  403099:	ins    DWORD PTR es:[edi],dx
  40309a:	add    DWORD PTR [edx+0x6c],eax
  40309d:	inc    esi
  40309e:	leave  
  40309f:	out    dx,al
  4030a0:	hlt    
  4030a1:	scas   eax,DWORD PTR es:[edi]
  4030a2:	das    
  4030a3:	jns    0x40308c
  4030a5:	cli    
  4030a6:	dec    eax
  4030a7:	add    BYTE PTR [ebx-0x58],0x31
  4030ab:	repz repz push ecx
  4030ae:	inc    esp
  4030af:	mov    ah,0xd1
  4030b1:	pop    ecx
  4030b2:	into   
  4030b3:	push   edx
  4030b4:	xchg   ebx,eax
  4030b5:	out    0xa0,al
  4030b7:	into   
  4030b8:	adc    bl,dl
  4030ba:	ds sbb eax,ebx
  4030bd:	xchg   edi,eax
  4030be:	mov    al,0x2d
  4030c0:	and    esi,DWORD PTR [ebx+0x37]
  4030c3:	lods   al,BYTE PTR ds:[esi]
  4030c4:	lahf   
  4030c5:	push   eax
  4030c6:	iret   
  4030c7:	and    DWORD PTR [esi-0x4f],ecx
  4030ca:	inc    ecx
  4030cb:	cli    
  4030cc:	loopne 0x4030f7
  4030ce:	mov    ah,0x2
  4030d0:	pop    ecx
  4030d1:	pop    ss
  4030d2:	sbb    DWORD PTR [eax+ecx*2+0x1040f496],edx
  4030d9:	sbb    DWORD PTR [edi],esp
  4030db:	sbb    BYTE PTR [ecx],ch
  4030dd:	dec    BYTE PTR [eax-0x51d027de]
  4030e3:	cdq    
  4030e4:	rcl    ah,0x8b
  4030e7:	jnp    0x4030f8
  4030e9:	mov    cl,0x35
  4030eb:	dec    edx
  4030ec:	sahf   
  4030ed:	fcmovne st,st(1)
  4030ef:	inc    esp
  4030f0:	(bad)  
  4030f1:	cwde   
  4030f2:	lock add eax,0x7a63498c
  4030f8:	into   
  4030f9:	add    BYTE PTR [edx-0x4],0x43
  4030fd:	sbb    bl,BYTE PTR [ebp-0x49]
  403100:	sub    eax,0x92498688
  403105:	(bad)  
  403106:	call   0x43b4:0x19a4de7e
  40310d:	or     ecx,eax
  40310f:	push   ebp
  403110:	pop    ebp
  403111:	push   esp
  403112:	test   BYTE PTR [esi],ch
  403114:	xchg   edx,eax
  403115:	les    ebp,FWORD PTR [ecx-0x7e580592]
  40311b:	cmc    
  40311c:	ins    BYTE PTR es:[edi],dx
  40311d:	scas   al,BYTE PTR es:[edi]
  40311e:	scas   al,BYTE PTR es:[edi]
  40311f:	es dec eax
  403121:	test   BYTE PTR [edx+edi*4],bl
  403124:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403125:	sbb    edi,DWORD PTR [edi-0x77afba96]
  40312b:	arpl   WORD PTR [edi-0x4a],cx
  40312e:	sbb    eax,0x856bcb1f
  403133:	mov    ds:0x237b9589,eax
  403138:	scas   al,BYTE PTR es:[edi]
  403139:	call   0x5cf5:0x3843de8
  403140:	icebp  
  403141:	dec    esi
  403142:	jbe    0x403102
  403144:	aaa    
  403145:	jg     0x4030ce
  403147:	jae    0x4031b8
  403149:	pushf  
  40314a:	mov    BYTE PTR [edx+0xae5f90],al
  403150:	dec    esp
  403151:	push   esi
  403152:	jnp    0x4031cd
  403154:	imul   ecx,DWORD PTR [eax+0x17],0xa7f7a843
  40315b:	aam    0x79
  40315d:	dec    edi
  40315e:	xchg   ecx,eax
  40315f:	mov    cl,0x2b
  403161:	mov    gs,WORD PTR [ecx-0x52dc718c]
  403167:	push   es
  403168:	lea    esp,[esi-0x40]
  40316b:	xchg   esp,eax
  40316c:	push   0xe9a8f693
  403171:	mov    DWORD PTR [ebx+0x55],edi
  403174:	push   ss
  403175:	lds    edx,FWORD PTR [eax-0x74]
  403178:	int    0x3d
  40317a:	mov    ah,0x59
  40317c:	push   ss
  40317d:	mov    bh,0x7
  40317f:	out    0xfc,al
  403181:	and    dl,BYTE PTR [edi+edx*1]
  403184:	dec    edx
  403185:	leave  
  403186:	dec    esi
  403187:	jecxz  0x40311e
  403189:	stc    
  40318a:	stos   BYTE PTR es:[edi],al
  40318b:	mov    bh,0xa9
  40318d:	or     eax,0xfec52748
  403192:	fadd   st(0),st
  403194:	add    BYTE PTR [edx-0x66],bh
  403197:	sbb    ch,BYTE PTR [esi+0x16a167c1]
  40319d:	icebp  
  40319e:	rcl    DWORD PTR [ecx+0x9],0x43
  4031a2:	loop   0x40313c
  4031a4:	pop    esp
  4031a5:	jmp    0x42a5b023
  4031aa:	dec    esp
  4031ab:	lock dec esi
  4031ad:	jl     0x40314f
  4031af:	popa   
  4031b0:	jmp    0x2083:0x78f800de
  4031b7:	adc    BYTE PTR [esi+ecx*1-0x14],ch
  4031bb:	add    ebp,ebp
  4031bd:	push   ds
  4031be:	dec    esi
  4031bf:	ins    DWORD PTR es:[edi],dx
  4031c0:	popf   
  4031c1:	sbb    eax,0x74fb7012
  4031c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031c7:	mov    ecx,0x72b6c86f
  4031cc:	mov    ah,0x29
  4031ce:	mov    BYTE PTR [esi-0x38],dl
  4031d1:	xor    ebp,ecx
  4031d3:	mov    al,0xd7
  4031d5:	pushf  
  4031d6:	mov    al,BYTE PTR [esp+ebp*1]
  4031d9:	sti    
  4031da:	sbb    esp,DWORD PTR [ebx]
  4031dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031dd:	or     eax,eax
  4031df:	aad    0x15
  4031e1:	loop   0x4031fb
  4031e3:	dec    eax
  4031e4:	cdq    
  4031e5:	addr16 ja 0x4031c2
  4031e8:	out    dx,al
  4031e9:	inc    ecx
  4031ea:	pop    ecx
  4031eb:	fwait
  4031ec:	imul   esi,DWORD PTR [ebp+0x76c5bed6],0x1c290c37
  4031f6:	push   ds
  4031f7:	add    DWORD PTR [edi+0x157af5ed],ecx
  4031fd:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4031ff:	aaa    
  403200:	and    al,0xc4
  403202:	and    ch,ch
  403204:	cmp    ah,BYTE PTR [ebp+0x195a8064]
  40320a:	jbe    0x4031f0
  40320c:	xor    ax,0xc182
  403210:	test   DWORD PTR [eax-0x1c],0x100c22f5
  403217:	pop    es
  403218:	sbb    ebp,esp
  40321a:	fsubr  st(5),st
  40321c:	and    al,0x16
  40321e:	xchg   edi,eax
  40321f:	imul   ecx,DWORD PTR [eax-0xe9e0cff],0xdffd762f
  403229:	or     DWORD PTR [edi+0x3959b97c],edi
  40322f:	(bad)  
  403230:	xchg   ecx,eax
  403231:	inc    ebp
  403232:	pop    ebx
  403233:	cmc    
  403234:	xor    DWORD PTR [ecx-0x3717967c],esi
  40323a:	pop    ebx
  40323b:	mov    bh,0x45
  40323d:	les    edx,FWORD PTR [eax-0x18187e6c]
  403243:	lods   al,BYTE PTR ds:[esi]
  403244:	pop    eax
  403245:	ret    
  403246:	cs and al,0xed
  403249:	out    0xf4,eax
  40324b:	add    dh,BYTE PTR [edi]
  40324d:	jge    0x403231
  40324f:	pop    edx
  403250:	in     al,0xb
  403252:	xchg   ebx,eax
  403253:	or     eax,0xdf2b1079
  403258:	xchg   esp,eax
  403259:	add    eax,0xe2a1e710
  40325e:	in     al,dx
  40325f:	push   0x6b
  403261:	and    al,0x8d
  403263:	mov    ecx,0xb88242ee
  403268:	and    eax,0x26c7bd9b
  40326d:	xchg   BYTE PTR [edi-0x7],al
  403270:	pop    eax
  403271:	sub    al,0x84
  403273:	xor    DWORD PTR [ebx+0x13],0x8411e2e9
  40327a:	add    DWORD PTR [eax-0x1f8bf982],ebx
  403280:	scas   eax,DWORD PTR es:[edi]
  403281:	add    cl,BYTE PTR [ebp+0x40c03c0b]
  403287:	mov    al,ds:0x8ffac0da
  40328c:	test   DWORD PTR [ebp-0x16ba4a0f],eax
  403292:	(bad)  
  403293:	fs dec esi
  403295:	lods   eax,DWORD PTR ds:[esi]
  403296:	push   es
  403297:	rcl    DWORD PTR [ebx-0x50],cl
  40329a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40329b:	sub    eax,0xcf7c025e
  4032a0:	jmp    0xa282:0x882e0a49
  4032a7:	inc    esp
  4032a8:	xchg   ebx,eax
  4032a9:	popa   
  4032aa:	aas    
  4032ab:	loope  0x40323d
  4032ad:	cmc    
  4032ae:	xor    eax,0x5860e8ff
  4032b3:	fstp   DWORD PTR [eax+0x64a394df]
  4032b9:	or     DWORD PTR [edx+0x51],ebp
  4032bc:	loope  0x4032d3
  4032be:	aad    0xaa
  4032c0:	dec    esi
  4032c1:	add    eax,0x62131db7
  4032c6:	aaa    
  4032c7:	push   edx
  4032c8:	sub    DWORD PTR [eax+0x1e],esi
  4032cb:	imul   eax,DWORD PTR [edx-0x1c],0xe2a88303
  4032d2:	pop    edx
  4032d3:	repnz mov WORD PTR [ebx+eiz*4+0x63],ss
  4032d8:	and    eax,0xa8fc072a
  4032dd:	ficomp WORD PTR [edx+esi*1]
  4032e0:	jne    0x40332a
  4032e2:	out    dx,eax
  4032e3:	call   0x2c0a1979
  4032e8:	inc    edx
  4032e9:	stos   DWORD PTR es:[edi],eax
  4032ea:	and    ah,ch
  4032ec:	fimul  WORD PTR [ebp-0x2a25e5e]
  4032f2:	pop    esp
  4032f3:	ja     0x4032d0
  4032f5:	xlat   BYTE PTR ds:[ebx]
  4032f6:	fwait
  4032f7:	lods   eax,DWORD PTR ds:[esi]
  4032f8:	dec    ecx
  4032f9:	push   ebp
  4032fa:	imul   esp,DWORD PTR [edx],0x3c
  4032fd:	lea    edx,[ebp-0x5]
  403300:	dec    esi
  403301:	push   eax
  403302:	inc    ecx
  403303:	sbb    ebx,0x90823e90
  403309:	std    
  40330a:	fisubr WORD PTR [edi-0x7848741c]
  403310:	aad    0x15
  403312:	(bad)  
  403314:	sub    al,0xbe
  403316:	xchg   esp,eax
  403317:	jge    0x4032bc
  403319:	mov    DWORD PTR [ebx-0x80],esp
  40331c:	mov    cl,0x87
  40331e:	lea    ebx,[ebx+0x7f]
  403321:	jl     0x4032d1
  403323:	mov    ds:0x8ec0a5e6,al
  403328:	xor    edx,esp
  40332a:	scas   al,BYTE PTR es:[edi]
  40332b:	leave  
  40332c:	push   edi
  40332d:	ror    ecx,1
  40332f:	and    DWORD PTR [edi],esp
  403331:	inc    edi
  403332:	lahf   
  403333:	fnstcw WORD PTR ds:0x42a0e062
  403339:	pop    ebp
  40333a:	into   
  40333b:	repnz call 0xd50c:0xeb7edded
  403343:	test   eax,0x1322fe16
  403348:	psllq  mm0,QWORD PTR [ebx+0x78]
  40334c:	jle    0x403395
  40334e:	jo     0x403316
  403350:	cmp    ch,bl
  403352:	jge    0x40335b
  403354:	in     eax,dx
  403355:	mov    bh,0x52
  403357:	ja     0x40338b
  403359:	jp     0x4032ea
  40335b:	xchg   edx,eax
  40335c:	popa   
  40335d:	aam    0x58
  40335f:	mov    esp,0x69eaa638
  403364:	xchg   esi,eax
  403365:	ja     0x403335
  403367:	add    al,0xc1
  403369:	push   ds
  40336a:	iret   
  40336b:	fcom   DWORD PTR [bx+si-0x69b0]
  403370:	jecxz  0x403322
  403372:	in     al,0xe6
  403374:	xchg   esi,eax
  403375:	loope  0x4033e9
  403377:	pop    ds
  403378:	dec    ecx
  403379:	dec    ebp
  40337a:	pop    esi
  40337b:	cdq    
  40337c:	or     esi,edx
  40337e:	inc    edx
  40337f:	mov    BYTE PTR [ebp-0x2],ch
  403382:	adc    esp,edi
  403384:	mov    ah,0xb1
  403386:	lods   al,BYTE PTR ds:[esi]
  403387:	je     0x403337
  403389:	and    al,0xc4
  40338b:	jbe    0x4033b0
  40338d:	cmovbe ebx,DWORD PTR [eax]
  403390:	mov    ebp,?
  403392:	aad    0x44
  403394:	cdq    
  403395:	cmc    
  403396:	das    
  403397:	iret   
  403398:	mov    ebx,0x2c2c9f1b
  40339d:	(bad)  
  40339e:	out    dx,eax
  40339f:	fidiv  WORD PTR [edi-0x7b1c771]
  4033a5:	dec    esi
  4033a6:	jl     0x4033b0
  4033a8:	daa    
  4033a9:	adc    dh,dl
  4033ab:	xlat   BYTE PTR ds:[ebx]
  4033ac:	ins    DWORD PTR es:[edi],dx
  4033ad:	sub    al,0x2e
  4033af:	test   eax,0x3c5dd4c8
  4033b4:	adc    al,0x60
  4033b6:	xor    al,0x7
  4033b8:	adc    bh,BYTE PTR [esi]
  4033ba:	pushf  
  4033bb:	and    BYTE PTR [ebx],ch
  4033bd:	mov    ebx,0x8ef6884
  4033c2:	cli    
  4033c3:	mov    bl,BYTE PTR [ecx+ebp*4+0x2337e74a]
  4033ca:	js     0x4033e6
  4033cc:	mov    al,ds:0x46f3f1ad
  4033d1:	inc    ecx
  4033d2:	xor    al,0x91
  4033d4:	or     dh,BYTE PTR [ebx]
  4033d6:	loope  0x40337e
  4033d8:	fld    DWORD PTR [esi]
  4033da:	dec    eax
  4033db:	mov    eax,0xa75b28b6
  4033e0:	pop    ds
  4033e1:	mov    ?,ebp
  4033e3:	adc    DWORD PTR [edi-0x79],ebp
  4033e6:	inc    esi
  4033e7:	push   0x89fd31de
  4033ec:	dec    esi
  4033ed:	mov    BYTE PTR [ebx],ah
  4033ef:	push   ecx
  4033f0:	fist   DWORD PTR [ebx+0x76]
  4033f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033f4:	mov    ch,0x3d
  4033f6:	add    dh,BYTE PTR [eax+0x72]
  4033f9:	mov    eax,ds:0x6d22d329
  4033fe:	mov    dh,0xf8
  403400:	add    bl,ch
  403402:	pop    ds
  403403:	test   DWORD PTR [ebx+ebx*8+0x1d],edi
  403407:	inc    bp
  403409:	xor    cl,cl
  40340b:	mov    ecx,esp
  40340d:	push   ebp
  40340e:	mov    esp,0xbf496cfe
  403413:	and    DWORD PTR [ebp-0xd],edi
  403416:	adc    cl,bl
  403418:	push   cs
  403419:	mov    ebp,0x40b71a70
  40341e:	int    0xb0
  403420:	jmp    DWORD PTR [esp+ecx*1-0x8]
  403424:	xchg   esi,eax
  403425:	das    
  403426:	in     al,dx
  403427:	stos   BYTE PTR es:[edi],al
  403428:	jg     0x4033c5
  40342a:	enter  0xf88e,0xb8
  40342e:	icebp  
  40342f:	push   0xa6056aab
  403434:	or     BYTE PTR [edx],ch
  403436:	sub    esp,DWORD PTR [ebx-0xc]
  403439:	sbb    eax,0x5712ec61
  40343e:	inc    ebp
  40343f:	jle    0x4034a0
  403441:	out    dx,eax
  403442:	(bad)  
  403443:	or     BYTE PTR [ebp+0x6909b54c],ah
  403449:	fsubp  st(2),st
  40344b:	mov    DWORD PTR [eax],edx
  40344d:	xchg   esp,eax
  40344e:	mov    esp,0x4a56204e
  403453:	test   al,0x85
  403455:	loop   0x403410
  403457:	push   eax
  403458:	shl    al,cl
  40345a:	push   eax
  40345b:	stc    
  40345c:	out    dx,eax
  40345d:	xor    ebp,DWORD PTR [esp+eax*1+0x27]
  403461:	jge    0x4034a1
  403463:	js     0x40346e
  403465:	je     0x4033f3
  403467:	cmp    al,0xea
  403469:	push   0xffffffb6
  40346b:	cmp    dh,BYTE PTR [edi-0x900e737]
  403471:	(bad)  [ecx+0x1a]
  403474:	pop    ecx
  403475:	sti    
  403476:	push   0x11
  403478:	lahf   
  403479:	test   eax,0x3803ce1c
  40347e:	ror    DWORD PTR [eax],cl
  403480:	sti    
  403481:	lods   al,BYTE PTR ds:[esi]
  403482:	dec    eax
  403483:	jle    0x4034e7
  403485:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403486:	fs test al,0x13
  403489:	cmp    ebx,esi
  40348b:	xor    bl,cl
  40348d:	dec    edx
  40348e:	adc    DWORD PTR [edi],0x5b
  403491:	push   ecx
  403492:	lods   al,BYTE PTR ds:[esi]
  403493:	leave  
  403494:	dec    eax
  403495:	ret    
  403496:	xchg   esp,eax
  403497:	mov    ebx,0x1c07253c
  40349c:	add    DWORD PTR [esi-0x168a56e6],eax
  4034a2:	shl    BYTE PTR [edx-0x4d65826f],cl
  4034a8:	xor    ebp,ebp
  4034aa:	cmc    
  4034ab:	jle    0x40349b
  4034ad:	lods   al,BYTE PTR ds:[esi]
  4034ae:	xchg   edx,eax
  4034af:	hlt    
  4034b0:	hlt    
  4034b1:	pop    ebp
  4034b2:	in     eax,0x67
  4034b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034b5:	mov    bl,0x19
  4034b7:	in     al,0x1b
  4034b9:	ficomp WORD PTR [ebx]
  4034bb:	adc    BYTE PTR [eax],al
  4034bd:	scas   al,BYTE PTR es:[edi]
  4034be:	sub    bh,BYTE PTR [edx-0xf]
  4034c1:	cdq    
  4034c2:	aas    
  4034c3:	and    edi,ebp
  4034c5:	outs   dx,DWORD PTR ds:[esi]
  4034c6:	popa   
  4034c7:	lods   eax,DWORD PTR ds:[esi]
  4034c8:	mov    ds:0xf5629493,eax
  4034cd:	sub    edx,DWORD PTR [edi]
  4034cf:	mov    edx,0x311cfb14
  4034d4:	xchg   DWORD PTR [ebp-0x36574f2e],ecx
  4034da:	sbb    al,0xdd
  4034dc:	(bad)  
  4034dd:	cld    
  4034de:	sbb    DWORD PTR [ebp-0x1856d11f],esi
  4034e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034e5:	mov    ch,0x3
  4034e7:	pop    ebx
  4034e8:	fs shr ch,cl
  4034eb:	jb     0x40347a
  4034ed:	xor    BYTE PTR [esi-0x1c05dbcb],bh
  4034f3:	fldcw  WORD PTR [eax]
  4034f5:	call   0x8b7d6f38
  4034fa:	push   ebp
  4034fb:	lods   al,BYTE PTR ds:[esi]
  4034fc:	or     eax,0xacf807c4
  403501:	cdq    
  403502:	xchg   ebp,eax
  403503:	jmp    FWORD PTR [esi]
  403505:	loopne 0x403557
  403507:	in     eax,0x58
  403509:	add    al,BYTE PTR [ebx-0xa]
  40350c:	test   BYTE PTR [esi+0x70],0xf4
  403510:	xchg   edx,eax
  403511:	std    
  403512:	sub    BYTE PTR [eax],0x98
  403515:	fwait
  403516:	jp     0x4034d0
  403518:	outs   dx,DWORD PTR ds:[esi]
  403519:	inc    BYTE PTR [esi]
  40351b:	xor    ch,cl
  40351d:	mov    ecx,0x37ed7422
  403522:	cmp    al,0xec
  403524:	(bad)  
  403525:	clc    
  403526:	(bad)  
  403527:	sub    DWORD PTR [ecx+0x36],ebp
  40352a:	xlat   BYTE PTR ds:[ebx]
  40352b:	push   edx
  40352c:	aam    0xf9
  40352e:	data16 sti 
  403530:	inc    eax
  403531:	sbb    edx,edx
  403533:	jmp    0xaf8124b0
  403538:	imul   ecx,DWORD PTR [esi+0x6123d973],0x26
  40353f:	sbb    bl,BYTE PTR [eax-0x15532cd8]
  403545:	(bad)  
  403546:	lock in al,0xca
  403549:	retf   
  40354a:	shl    ch,0x3c
  40354d:	jl     0x403512
  40354f:	(bad)  
  403550:	adc    DWORD PTR [eax],esp
  403552:	and    bl,BYTE PTR [edx-0x15]
  403555:	in     eax,0x9
  403557:	loop   0x403554
  403559:	pop    edx
  40355a:	test   al,0xcf
  40355c:	inc    ebx
  40355d:	xlat   BYTE PTR ds:[ebx]
  40355e:	in     al,dx
  40355f:	jae    0x403582
  403561:	out    dx,eax
  403562:	add    BYTE PTR [esi+0x22],ah
  403565:	mov    esp,0x67697c35
  40356a:	(bad)  
  40356b:	fsub   DWORD PTR [ebx+0x69]
  40356e:	imul   ebp,DWORD PTR [edx-0x49],0xffffffae
  403572:	test   DWORD PTR [ecx+0x491e1aa5],0xc25b5814
  40357c:	jne    0x403503
  40357e:	call   0x69cd:0x449be883
  403585:	mov    dh,0x31
  403587:	xchg   esi,eax
  403588:	pop    ds
  403589:	fsubr  st(4),st
  40358b:	sbb    eax,0xf711f81d
  403590:	dec    ebp
  403591:	inc    ecx
  403592:	jb     0x403580
  403594:	add    al,0x7d
  403596:	scas   eax,DWORD PTR es:[di]
  403598:	xchg   esi,eax
  403599:	adc    DWORD PTR [ecx],edx
  40359b:	sbb    al,0x29
  40359d:	daa    
  40359e:	daa    
  40359f:	mov    eax,ds:0x15fd23a1
  4035a4:	dec    esi
  4035a5:	and    eax,DWORD PTR [ecx]
  4035a7:	out    0xfd,eax
  4035a9:	and    BYTE PTR [edx],bh
  4035ab:	mov    eax,ds
  4035ad:	push   edx
  4035ae:	push   ebp
  4035af:	retf   0xd6ec
  4035b2:	sbb    DWORD PTR [ecx],ecx
  4035b4:	retf   
  4035b5:	adc    bl,BYTE PTR [edi+esi*8+0x6b]
  4035b9:	xor    DWORD PTR [ecx+0xab2ae04],eax
  4035bf:	es jo  0x403581
  4035c2:	es aas 
  4035c4:	sar    BYTE PTR [eax+0x6f],0x7f
  4035c8:	push   ds
  4035c9:	xchg   ebx,eax
  4035ca:	sbb    DWORD PTR [edx+0x7e86662b],edx
  4035d0:	retf   0xf7ed
  4035d3:	fxch   st(6)
  4035d5:	sub    eax,0x2db33098
  4035da:	sar    BYTE PTR [ebx+ecx*8-0x76],cl
  4035de:	loopne 0x4035db
  4035e0:	repz jle 0x4035da
  4035e3:	cs add al,0xfc
  4035e6:	loope  0x403619
  4035e8:	iret   
  4035e9:	mov    dh,0x7c
  4035eb:	jno    0x40364a
  4035ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035ee:	dec    ebp
  4035ef:	lahf   
  4035f0:	dec    esp
  4035f1:	pusha  
  4035f2:	inc    ecx
  4035f3:	out    dx,al
  4035f4:	dec    ebp
  4035f5:	stos   DWORD PTR es:[edi],eax
  4035f6:	pop    ds
  4035f7:	stos   BYTE PTR es:[edi],al
  4035f8:	jo     0x403592
  4035fa:	xchg   edi,eax
  4035fb:	loop   0x40364e
  4035fd:	in     al,0xaa
  4035ff:	dec    edx
  403600:	test   ebp,edi
  403602:	pop    ebx
  403603:	in     al,0x11
  403605:	inc    eax
  403606:	shr    esi,cl
  403608:	or     al,0xf9
  40360a:	sahf   
  40360b:	jmp    0x9654:0xf69d2ced
  403612:	test   dl,ah
  403614:	(bad)  
  403615:	in     al,0x8b
  403617:	cs jge 0x403678
  40361a:	push   edi
  40361b:	icebp  
  40361c:	push   DWORD PTR [ecx+edi*1-0x74]
  403620:	push   ebx
  403621:	dec    ecx
  403622:	sbb    eax,0x58ce555d
  403627:	retf   
  403628:	sar    DWORD PTR [ecx-0x5b631edb],1
  40362e:	imul   esi
  403630:	push   eax
  403631:	nop
  403632:	jg     0x4035cd
  403634:	mov    eax,0xd94a9c8
  403639:	dec    eax
  40363a:	ja     0x403661
  40363c:	mov    ecx,0x2cf3b6bb
  403641:	sar    BYTE PTR [ecx+0x1e6149ef],1
  403647:	dec    eax
  403648:	inc    ecx
  403649:	inc    ecx
  40364a:	jns    0x403634
  40364c:	imul   BYTE PTR [edi-0x72de5272]
  403652:	or     al,0xe5
  403654:	fdivr  QWORD PTR [eax]
  403656:	cmp    al,0xc4
  403658:	sbb    ecx,DWORD PTR [ecx+0x2b]
  40365b:	mov    ecx,0x6f95b601
  403660:	push   ebx
  403661:	sub    ebx,DWORD PTR [esi]
  403663:	mov    al,ds:0x3aa0f80d
  403668:	mov    bh,0x86
  40366a:	dec    edi
  40366b:	xchg   edx,eax
  40366c:	fs mov dh,0x6e
  40366f:	pop    esi
  403670:	sbb    BYTE PTR [ebx+0x5],dl
  403673:	dec    esi
  403674:	loope  0x4036ec
  403676:	sub    dh,cl
  403678:	jecxz  0x403619
  40367a:	(bad)  
  40367b:	not    BYTE PTR [ebx]
  40367d:	(bad)  
  40367e:	lock popf 
  403680:	(bad)  
  403681:	loopne 0x4036e2
  403683:	jnp    0x403635
  403685:	lock cmp BYTE PTR [edx+ecx*2+0x29],ah
  40368a:	push   edi
  40368b:	(bad)  
  40368c:	cwde   
  40368d:	sbb    DWORD PTR [ecx],0xffffffb6
  403690:	adc    DWORD PTR [edx+ebp*4-0x6a8018b2],ebx
  403697:	mov    ebx,0x4d1c9b80
  40369c:	imul   edi,DWORD PTR [eax],0xffffffb7
  40369f:	sub    BYTE PTR [ecx],bl
  4036a1:	push   ecx
  4036a2:	shl    DWORD PTR [edx+0x5f380fed],cl
  4036a8:	sbb    eax,0x7d7d1504
  4036ad:	dec    ecx
  4036ae:	jecxz  0x403713
  4036b0:	aaa    
  4036b1:	data16 fisubr DWORD PTR [ebp-0x27]
  4036b5:	(bad)  
  4036b6:	fisttp DWORD PTR [ebx+0x20]
  4036b9:	pop    ebp
  4036ba:	push   esi
  4036bb:	cmp    al,0xe3
  4036bd:	dec    ebp
  4036be:	adc    BYTE PTR [edx],ah
  4036c0:	and    ebx,0xffffffa7
  4036c3:	xchg   ebp,eax
  4036c4:	mov    ecx,0xe276661b
  4036c9:	lods   eax,DWORD PTR ds:[esi]
  4036ca:	imul   ebx,edi,0xffffff98
  4036cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036ce:	hlt    
  4036cf:	sbb    eax,DWORD PTR [bx+si+0xb]
  4036d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036d4:	int    0x9f
  4036d6:	call   0xf9d6:0xe6554ec7
  4036dd:	ins    DWORD PTR es:[edi],dx
  4036de:	inc    edi
  4036df:	add    DWORD PTR [edx],edx
  4036e1:	mov    ds:0x83fc9bd,al
  4036e6:	shl    BYTE PTR [edx],cl
  4036e8:	xor    al,ah
  4036ea:	out    dx,eax
  4036eb:	ror    DWORD PTR [ecx],cl
  4036ed:	or     bh,cl
  4036ef:	data16 loopne 0x4036a0
  4036f2:	rol    BYTE PTR [eax+0x26],0x6f
  4036f6:	mov    ebx,0xc2e73161
  4036fb:	cli    
  4036fc:	paddsw mm4,QWORD PTR [esi+0x49]
  403700:	icebp  
  403701:	pop    edi
  403702:	icebp  
  403703:	cmp    ah,BYTE PTR [ebx]
  403705:	mov    dh,0x35
  403707:	mov    esp,0x94172f17
  40370c:	sub    ebp,ecx
  40370e:	mov    esp,0x43ffa882
  403713:	loope  0x4036f6
  403715:	mov    fs,WORD PTR [esi+0x28]
  403718:	sbb    esp,DWORD PTR [edi-0x2d863a06]
  40371e:	xor    BYTE PTR [eax+edx*8-0x48],ah
  403722:	sbb    BYTE PTR [edx+0x6aea1231],al
  403728:	or     al,0xf1
  40372a:	fwait
  40372b:	(bad)  
  40372c:	loope  0x403785
  40372e:	dec    ebx
  40372f:	outs   dx,DWORD PTR ds:[esi]
  403730:	jp     0x4036fe
  403732:	push   es
  403733:	push   0x71
  403735:	sbb    dl,BYTE PTR [ecx+0x24162504]
  40373b:	cmc    
  40373c:	imul   ebp,DWORD PTR [edx-0x25],0x4c
  403740:	test   al,0xd7
  403742:	(bad)  
  403744:	ja     0x4037bc
  403746:	mov    ch,0xf8
  403748:	jle    0x403704
  40374a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40374b:	fisttp DWORD PTR [eax+0x37]
  40374e:	sahf   
  40374f:	outs   dx,DWORD PTR ds:[esi]
  403750:	(bad)  
  403751:	hlt    
  403752:	scas   eax,DWORD PTR es:[di]
  403754:	ret    0x7827
  403757:	cmp    BYTE PTR [ebx],dl
  403759:	clc    
  40375a:	cld    
  40375b:	mov    ch,0x30
  40375d:	cdq    
  40375e:	jl     0x403714
  403760:	outs   dx,BYTE PTR ds:[esi]
  403761:	sbb    eax,0x4237d77f
  403766:	test   BYTE PTR [eax-0x1d749947],ch
  40376c:	aaa    
  40376d:	jo     0x40373b
  40376f:	pop    eax
  403770:	fisttp WORD PTR [esi-0x4f8f700e]
  403776:	mov    edi,0x23023b13
  40377b:	fs mov ebx,0x355948fa
  403781:	and    al,0x2a
  403783:	mov    eax,ds:0x302ad104
  403788:	adc    eax,0x419cd389
  40378d:	imul   edx,DWORD PTR ss:[ebp+0x41cc5ca7],0x74a1779c
  403798:	ss in  eax,dx
  40379a:	(bad)  
  40379b:	mov    edi,0x6f93be05
  4037a0:	mov    al,0xfe
  4037a2:	pushf  
  4037a3:	xchg   edx,eax
  4037a4:	shl    edx,1
  4037a6:	mov    ch,0x6a
  4037a8:	sub    edi,ebx
  4037aa:	xor    al,0xa6
  4037ac:	push   ecx
  4037ad:	mov    esp,0xf525730c
  4037b2:	mov    edx,0x6b8f7d6a
  4037b7:	mov    edx,0xb766bdd2
  4037bc:	add    BYTE PTR [edi],bl
  4037be:	mov    dh,0xa1
  4037c0:	xor    al,0xa5
  4037c2:	and    BYTE PTR [ebx-0x3],ch
  4037c5:	scas   al,BYTE PTR es:[edi]
  4037c6:	out    dx,eax
  4037c7:	ins    BYTE PTR es:[edi],dx
  4037c8:	enter  0xd060,0x21
  4037cc:	xor    al,BYTE PTR ds:0x427e2acf
  4037d2:	das    
  4037d3:	cmp    eax,0x8c1f01a0
  4037d8:	out    dx,al
  4037d9:	push   DWORD PTR [eax-0x6d]
  4037dc:	in     al,dx
  4037dd:	call   0xb208e95
  4037e2:	lock push ebx
  4037e4:	pop    ecx
  4037e5:	dec    edx
  4037e6:	movlps QWORD PTR [esi+0x130ddbfd],xmm2
  4037ed:	xor    al,0xc4
  4037ef:	xchg   ebx,eax
  4037f0:	xor    eax,0x49b5b7ed
  4037f5:	pop    ss
  4037f6:	pop    ecx
  4037f7:	xchg   edi,eax
  4037f8:	jp     0x403805
  4037fa:	pop    esi
  4037fb:	jns    0x403813
  4037fd:	pop    ebp
  4037fe:	imul   edx,DWORD PTR [eax-0x3151d739],0x1
  403805:	add    ecx,DWORD PTR [ebp-0x42]
  403808:	aas    
  403809:	ret    
  40380a:	aad    0x35
  40380c:	jb     0x403837
  40380e:	rcr    DWORD PTR [edx],0xa1
  403811:	cmc    
  403812:	aas    
  403813:	jnp    0x403861
  403815:	in     eax,dx
  403816:	xchg   edx,eax
  403817:	pop    ecx
  403818:	fs mov bh,0x9b
  40381b:	repz pop es
  40381d:	mov    ch,0x94
  40381f:	hlt    
  403820:	sbb    DWORD PTR [edi+0x50],esi
  403823:	imul   esp,DWORD PTR [ebx+0x41675bb4],0xffffffcf
  40382a:	(bad)
  40382e:	mov    ch,0x4b
  403830:	repz xor ch,BYTE PTR [edi-0x79]
  403834:	pop    ecx
  403835:	sbb    al,0x48
  403837:	sub    BYTE PTR [esi+0x7f],al
  40383a:	or     DWORD PTR [ebx+ebx*8],ebp
  40383d:	add    BYTE PTR [eax-0x5f77acdc],dl
  403843:	adc    ebp,DWORD PTR [ebp-0x1c]
  403846:	sbb    esp,DWORD PTR [eax-0x77]
  403849:	cmp    al,0x36
  40384b:	xchg   ebx,eax
  40384c:	dec    ebp
  40384d:	ficom  WORD PTR ds:0xf7d438e5
  403853:	bound  eax,QWORD PTR [ecx-0x73]
  403856:	es xchg ebp,eax
  403858:	jmp    0x40382c
  40385a:	push   esp
  40385b:	adc    ah,0x7f
  40385e:	xchg   BYTE PTR [esi-0xf552acd],dl
  403864:	mov    ch,0x74
  403866:	ins    BYTE PTR es:[edi],dx
  403867:	dec    ebx
  403868:	push   esp
  403869:	fisttp QWORD PTR [edi+0x56]
  40386c:	inc    esp
  40386d:	jmp    0x16fd:0x253f1a64
  403874:	je     0x403878
  403876:	in     eax,dx
  403877:	std    
  403878:	mov    eax,0x9530e3d2
  40387d:	pop    ebx
  40387e:	adc    ch,BYTE PTR [ecx+0x58505e08]
  403884:	jmp    0x1928:0xf216ac1f
  40388b:	loope  0x403898
  40388d:	js     0x40385d
  40388f:	inc    ecx
  403890:	(bad)  
  403891:	mov    ds:0x2e48a465,al
  403896:	mov    edx,0xb656ff86
  40389b:	aad    0x7d
  40389d:	nop
  40389e:	retf   
  40389f:	dec    ecx
  4038a0:	push   cs
  4038a1:	and    bl,bl
  4038a3:	jae    0x4038e1
  4038a5:	dec    DWORD PTR [eax+0x71]
  4038a8:	int3   
  4038a9:	inc    ecx
  4038aa:	push   ss
  4038ab:	(bad)  
  4038ac:	sbb    eax,0x6938415b
  4038b1:	out    dx,al
  4038b2:	add    DWORD PTR [edx+0x22eff001],esi
  4038b8:	fld    QWORD PTR [ebx]
  4038ba:	xchg   ebx,eax
  4038bb:	dec    ebx
  4038bc:	mov    ecx,0xba7ecbc4
  4038c1:	aam    0x91
  4038c3:	jno    0x403860
  4038c5:	jl     0x403923
  4038c7:	push   es
  4038c8:	xchg   ebp,eax
  4038c9:	push   ebx
  4038ca:	mov    ah,0xde
  4038cc:	jp     0x4038ba
  4038ce:	clc    
  4038cf:	retf   
  4038d0:	adc    ecx,DWORD PTR [ebx]
  4038d2:	fstp   DWORD PTR [ebp-0x7]
  4038d5:	push   cs
  4038d6:	jge    0x40386f
  4038d8:	and    bh,BYTE PTR [esi]
  4038da:	dec    ecx
  4038db:	mov    esi,0x78f432dc
  4038e0:	fdivp  st(3),st
  4038e2:	jne    0x403950
  4038e4:	or     eax,0xe2b2ea2a
  4038e9:	fisttp QWORD PTR [edi]
  4038eb:	jg     0x403880
  4038ed:	cmp    esp,DWORD PTR [edx+0x5c]
  4038f0:	in     eax,dx
  4038f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038f2:	pop    es
  4038f3:	pushf  
  4038f4:	icebp  
  4038f5:	fldz   
  4038f7:	jae    0x403971
  4038f9:	adc    ecx,DWORD PTR [ecx-0x30]
  4038fc:	mov    ecx,DWORD PTR [edx]
  4038fe:	int3   
  4038ff:	cmp    edi,DWORD PTR [ecx+0xc3c2e18]
  403905:	jmp    0xe65fe0d7
  40390a:	push   esp
  40390b:	pop    ecx
  40390c:	adc    edx,DWORD PTR [ebp+0x6bb02c18]
  403912:	fmul   QWORD PTR [eax-0x4d382b97]
  403918:	sub    BYTE PTR [edi+0x5c6d5e7d],0x74
  40391f:	in     al,0x4b
  403921:	pusha  
  403922:	fs imul esi,edi,0x2059ca13
  403929:	sar    eax,0x73
  40392c:	xchg   edi,eax
  40392d:	scas   eax,DWORD PTR es:[edi]
  40392e:	out    dx,eax
  40392f:	xor    eax,edi
  403931:	cli    
  403932:	inc    edx
  403933:	dec    ebx
  403934:	xor    cl,BYTE PTR [eax+0x7f90a9cb]
  40393a:	mov    eax,DWORD PTR [edx+ecx*4]
  40393d:	cmp    BYTE PTR [esi],0x9f
  403940:	aas    
  403941:	pusha  
  403942:	lock fsubrp st(3),st
  403945:	inc    esp
  403946:	sbb    DWORD PTR [esi+0x653ea056],ebp
  40394c:	mov    ds:0x72791349,eax
  403951:	xchg   DWORD PTR [eax+0x12],ebp
  403954:	aas    
  403955:	cmp    cl,BYTE PTR [ecx-0x6ca44f67]
  40395b:	jmp    0x4039aa
  40395d:	mov    dh,dh
  40395f:	imul   eax,DWORD PTR [ecx+0x723ae325],0x3147048a
  403969:	scas   eax,DWORD PTR es:[edi]
  40396a:	cmp    ch,ah
  40396c:	out    0x1d,eax
  40396e:	fstp   QWORD PTR [edi+ecx*4]
  403971:	add    BYTE PTR ds:0xdaf27b96,bl
  403977:	mov    esi,0xde05d125
  40397c:	das    
  40397d:	pop    ebp
  40397e:	dec    bh
  403980:	add    ebx,DWORD PTR [edi]
  403982:	jmp    0x403906
  403984:	pop    es
  403985:	add    BYTE PTR [ebp-0x48654353],ah
  40398b:	and    DWORD PTR es:[edx-0x5d60c64d],0xab04eca9
  403996:	cmp    al,0x67
  403998:	inc    BYTE PTR [ecx-0x6372800d]
  40399e:	out    dx,al
  40399f:	sbb    esp,esp
  4039a1:	enter  0x2ab4,0x18
  4039a5:	in     al,dx
  4039a6:	fcmovbe st,st(0)
  4039a8:	pushf  
  4039a9:	or     DWORD PTR [ebp+0x4b],ebp
  4039ac:	mov    eax,0x40f4a37a
  4039b1:	xchg   BYTE PTR [esi-0x66e66c10],dl
  4039b7:	xor    esp,DWORD PTR [ecx]
  4039b9:	es fcmove st,st(7)
  4039bc:	loope  0x4039f7
  4039be:	adc    al,0x5
  4039c0:	add    ebx,ecx
  4039c2:	or     BYTE PTR [ebx],al
  4039c4:	scas   al,BYTE PTR es:[edi]
  4039c5:	or     al,0x82
  4039c7:	adc    cl,BYTE PTR [esi-0x51]
  4039ca:	(bad)  
  4039cc:	xchg   DWORD PTR [esi],esi
  4039ce:	sub    eax,0xfe8692f5
  4039d3:	aaa    
  4039d4:	inc    edx
  4039d5:	ret    0x85af
  4039d8:	icebp  
  4039d9:	stc    
  4039da:	and    al,0x52
  4039dc:	dec    edx
  4039dd:	sub    BYTE PTR [edi+0x1f],0x4b
  4039e1:	lahf   
  4039e2:	ss (bad) 
  4039e4:	les    ecx,FWORD PTR [esi-0x6e869c51]
  4039ea:	stos   BYTE PTR es:[edi],al
  4039eb:	pop    ds
  4039ec:	sbb    esi,DWORD PTR [edx]
  4039ee:	cmp    ah,BYTE PTR [edx-0x15]
  4039f1:	not    DWORD PTR [esi+0x77dce73e]
  4039f7:	out    dx,al
  4039f8:	jbe    0x4039e9
  4039fa:	or     eax,0xd51dfb6f
  4039ff:	or     eax,0xd217f1c3
  403a04:	lahf   
  403a05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a06:	ficom  DWORD PTR [esi]
  403a08:	pop    ds
  403a09:	fisttp QWORD PTR [eax]
  403a0b:	fiadd  WORD PTR [edx+eiz*8]
  403a0e:	in     eax,0xb5
  403a10:	arpl   WORD PTR [ebx+ebp*2],ax
  403a13:	(bad)  
  403a14:	push   ebx
  403a15:	sahf   
  403a16:	xchg   esp,eax
  403a17:	out    0x53,al
  403a19:	sub    al,0x67
  403a1b:	(bad)  
  403a1d:	repz call 0x444c8699
  403a23:	int3   
  403a24:	pop    edx
  403a25:	adc    ebx,edi
  403a27:	and    bl,BYTE PTR [edi+0x69275737]
  403a2d:	adc    BYTE PTR [ecx-0x27200ac8],0x1e
  403a34:	cs fcmovnb st,st(0)
  403a37:	jecxz  0x4039ce
  403a39:	in     eax,dx
  403a3a:	dec    ebp
  403a3b:	cmp    BYTE PTR [ebp+0xd62a0b0],0xe9
  403a42:	dec    esp
  403a43:	retf   0xa46c
  403a46:	jmp    0x8fdf:0x575510b
  403a4d:	xchg   ecx,eax
  403a4e:	arpl   WORD PTR [ecx+0x27884bb1],sp
  403a54:	dec    ebx
  403a55:	inc    edi
  403a56:	lahf   
  403a57:	iret   
  403a58:	adc    eax,0xf14337c2
  403a5d:	(bad)  
  403a5e:	jl     0x403a7a
  403a60:	jp     0x403a56
  403a62:	jmp    0x7ea6:0x2d8437f9
  403a69:	sahf   
  403a6a:	sub    al,BYTE PTR [eax]
  403a6c:	mov    DWORD PTR [ebp+0x75],esp
  403a6f:	test   dl,ah
  403a71:	sub    bh,al
  403a73:	cld    
  403a74:	retf   0x1ec9
  403a77:	scas   eax,DWORD PTR es:[edi]
  403a78:	cld    
  403a79:	hlt    
  403a7a:	pop    ebp
  403a7b:	fwait
  403a7c:	lahf   
  403a7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a7e:	jnp    0x403a5f
  403a80:	sub    DWORD PTR [ebp-0x511658c7],esi
  403a86:	and    esp,DWORD PTR [di+0x49]
  403a8a:	imul   ebp,edi,0x1e
  403a8d:	xchg   ebx,eax
  403a8e:	(bad)  
  403a8f:	or     BYTE PTR [ebp-0x78],dl
  403a92:	mov    al,0xd
  403a94:	mov    al,ds:0x6ba15756
  403a99:	adc    dh,BYTE PTR [edi-0x30]
  403a9c:	fwait
  403a9d:	jbe    0x403b0f
  403a9f:	call   0x9686:0x17a55993
  403aa6:	cwde   
  403aa7:	sub    DWORD PTR [esi-0x2a005cc5],ebp
  403aad:	adc    WORD PTR [edx+0x453878cc],dx
  403ab4:	pop    edi
  403ab5:	ja     0x403a5f
  403ab7:	or     bl,cl
  403ab9:	dec    esi
  403aba:	cmp    al,0xcf
  403abc:	mov    edx,0x22c92ab
  403ac1:	jecxz  0x403a5d
  403ac3:	mov    ecx,0x6af6447d
  403ac8:	sbb    al,0x6a
  403aca:	add    DWORD PTR [ebp+eiz*4-0x2fb58b6a],0xffffffa8
  403ad2:	jno    0x403b24
  403ad4:	nop
  403ad5:	pop    ecx
  403ad6:	cs mov al,cl
  403ad9:	das    
  403ada:	or     ecx,DWORD PTR [eax-0x47]
  403add:	sbb    al,0x2e
  403adf:	(bad)  
  403ae1:	xchg   esp,eax
  403ae2:	idiv   bh
  403ae4:	pop    edi
  403ae5:	shl    BYTE PTR [ebp+0x64],cl
  403ae8:	bound  edi,QWORD PTR [ebp-0x3afe16e9]
  403aee:	ds retf 0xc17b
  403af2:	inc    ecx
  403af3:	jg     0x403ae0
  403af5:	out    0x70,eax
  403af7:	mov    edx,0xc9fb7b5a
  403afc:	sbb    eax,0xf3ec3a7b
  403b01:	xchg   BYTE PTR [ebx-0x24],al
  403b04:	push   ss
  403b05:	push   edx
  403b06:	push   esi
  403b07:	inc    esp
  403b08:	pop    esp
  403b09:	xor    eax,0xc6b31625
  403b0e:	outs   dx,BYTE PTR ds:[esi]
  403b0f:	xchg   ebx,eax
  403b10:	mov    eax,ds:0x754e3bdf
  403b15:	loop   0x403ac0
  403b17:	cmp    DWORD PTR [edi],0xef387f50
  403b1d:	fst    DWORD PTR [ecx-0x5d]
  403b20:	push   es
  403b21:	cwde   
  403b22:	imul   bl
  403b24:	xchg   edi,eax
  403b25:	jmp    0x2b6c02bc
  403b2a:	jb     0x403b22
  403b2c:	(bad)  
  403b2e:	jnp    0x403b29
  403b30:	rcl    BYTE PTR [ecx],0x81
  403b33:	dec    ecx
  403b34:	jmp    0x403b50
  403b36:	rol    DWORD PTR [edx],1
  403b38:	pop    es
  403b39:	mov    ebx,ebx
  403b3b:	ins    DWORD PTR es:[edi],dx
  403b3c:	dec    esi
  403b3d:	push   eax
  403b3e:	push   edx
  403b3f:	sbb    cl,0x61
  403b42:	sbb    bh,BYTE PTR ds:0x4e458958
  403b48:	stos   BYTE PTR es:[edi],al
  403b49:	in     eax,0x80
  403b4b:	cmp    eax,0x3836960e
  403b50:	aad    0xf5
  403b52:	add    BYTE PTR [eax+0x24],0xb0
  403b56:	add    edi,ebp
  403b58:	(bad)  
  403b5a:	not    BYTE PTR [esi+0x7ef3c7fb]
  403b60:	pushf  
  403b61:	push   0xe907e326
  403b66:	mov    ebp,0xea3ba4a9
  403b6b:	aaa    
  403b6c:	sub    dh,BYTE PTR [edi+0x19662897]
  403b72:	repnz loope 0x403b56
  403b75:	lods   eax,DWORD PTR ds:[esi]
  403b76:	test   eax,0x63c03d50
  403b7b:	sbb    ebp,esp
  403b7d:	mov    dh,0xaf
  403b7f:	iret   
  403b80:	push   eax
  403b81:	int    0x3d
  403b83:	pop    edx
  403b84:	test   DWORD PTR [ebp+ebp*2-0x7],edi
  403b88:	mov    al,ds:0x81b43a85
  403b8d:	push   edx
  403b8e:	aas    
  403b8f:	fcom   QWORD PTR [esi-0x66]
  403b92:	jnp    0x403b71
  403b94:	(bad)  
  403b95:	push   ecx
  403b96:	push   ss
  403b97:	pop    eax
  403b98:	ror    DWORD PTR [esi],1
  403b9a:	push   ebx
  403b9b:	daa    
  403b9c:	cmp    bl,cl
  403b9e:	sub    al,0x35
  403ba0:	mov    ch,0xe7
  403ba2:	stc    
  403ba3:	adc    DWORD PTR [esi],esi
  403ba5:	fcom   st(0)
  403ba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ba8:	sbb    DWORD PTR [ebx+0x7e89495],edi
  403bae:	or     DWORD PTR [esi],esi
  403bb0:	and    DWORD PTR [ecx],0xffffff90
  403bb3:	jmp    0xe90c0e39
  403bb8:	adc    eax,0x302e372e
  403bbd:	call   0xd0b7549a
  403bc2:	ja     0x403c10
  403bc4:	pop    ds
  403bc5:	iret   
  403bc6:	pop    esi
  403bc7:	xchg   edx,eax
  403bc8:	data16 cmp al,0xdb
  403bcb:	cmc    
  403bcc:	out    dx,al
  403bcd:	pop    edi
  403bce:	shl    BYTE PTR [ecx+0x13ecf345],1
  403bd4:	add    BYTE PTR [eax-0x76],dl
  403bd7:	adc    BYTE PTR [edi+0x54],cl
  403bda:	loop   0x403c2f
  403bdc:	sbb    al,0xf5
  403bde:	out    0x9c,al
  403be0:	sahf   
  403be1:	imul   ebx,DWORD PTR [edi+ecx*2-0x2d],0x1f
  403be6:	or     ch,bh
  403be8:	rol    DWORD PTR [ecx],cl
  403bea:	fs imul ebp,esp,0x8526b70b
  403bf1:	aam    0x37
  403bf3:	dec    eax
  403bf4:	push   esi
  403bf5:	mov    esi,?
  403bf7:	adc    al,0xca
  403bf9:	add    edx,DWORD PTR [ecx]
  403bfb:	in     eax,0xdf
  403bfd:	loope  0x403c28
  403bff:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  403c01:	rcl    DWORD PTR [ebp+0x7eca6aab],1
  403c07:	and    bl,BYTE PTR [edx+0x47d750d7]
  403c0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c0e:	xchg   edx,eax
  403c0f:	stos   BYTE PTR es:[edi],al
  403c10:	pop    eax
  403c11:	mul    ecx
  403c13:	xor    ebp,DWORD PTR [eax+esi*4+0x27]
  403c17:	fimul  WORD PTR [edi-0x10c99220]
  403c1d:	fcmovne st,st(6)
  403c1f:	addr16 fld st(1)
  403c22:	mov    ebx,edx
  403c24:	out    0x3,eax
  403c26:	push   esi
  403c27:	clc    
  403c28:	push   edi
  403c29:	mov    es,WORD PTR [ebx]
  403c2b:	test   BYTE PTR [eax-0x60],bl
  403c2e:	retf   0x27a8
  403c31:	std    
  403c32:	or     DWORD PTR [edi],ebx
  403c34:	fmul   QWORD PTR [esi-0x2de9623f]
  403c3a:	iret   
  403c3b:	jmp    0x403c6f
  403c3d:	jb     0x403bf7
  403c3f:	icebp  
  403c40:	and    ebx,DWORD PTR [ecx+ebp*2+0x40]
  403c44:	mov    edi,0x55a708d
  403c49:	ret    
  403c4a:	pop    esi
  403c4b:	and    BYTE PTR ds:0x9af7e782,cl
  403c51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c52:	and    DWORD PTR fs:[edx-0x14f7427b],edi
  403c59:	imul   ecx,DWORD PTR [eax],0x6265ff5e
  403c5f:	mov    ecx,0x821d8c56
  403c64:	in     al,dx
  403c65:	sbb    ecx,DWORD PTR [ebx+0x4e9aff18]
  403c6b:	mov    ds,WORD PTR [ebx+0x29c9e9a5]
  403c71:	popf   
  403c72:	inc    edi
  403c73:	push   esp
  403c74:	add    BYTE PTR [esi],0xb6
  403c77:	fwait
  403c78:	aam    0xd5
  403c7a:	adc    ah,BYTE PTR [edi+0x33]
  403c7d:	inc    edx
  403c7e:	scas   eax,DWORD PTR es:[edi]
  403c7f:	push   eax
  403c80:	out    0x1d,eax
  403c82:	xchg   esi,eax
  403c83:	mov    ebp,0x3fb87e1
  403c88:	ror    esp,0xaf
  403c8b:	dec    ebp
  403c8c:	mov    edi,0xa1093976
  403c91:	and    al,0x11
  403c93:	enter  0x8f50,0x8a
  403c97:	mov    ebx,0x9eb07ce9
  403c9c:	inc    ecx
  403c9d:	cli    
  403c9e:	or     BYTE PTR fs:[ebx-0x65],ch
  403ca2:	shl    DWORD PTR ds:0x368f3e74,1
  403ca8:	lea    eax,[eax+0x78]
  403cab:	loop   0x403c3c
  403cad:	bound  edx,QWORD PTR [edx]
  403caf:	les    eax,FWORD PTR ds:[edx+0x7]
  403cb3:	lock ret 0xc347
  403cb7:	sahf   
  403cb8:	imul   bx,WORD PTR ds:0xfe6a261c,0xffd2
  403cc0:	lahf   
  403cc1:	xlat   BYTE PTR ds:[ebx]
  403cc2:	paddusb mm4,QWORD PTR [esi+0x6a4b614a]
  403cc9:	sub    esi,DWORD PTR [edi+0x292be804]
  403ccf:	push   0xebc66259
  403cd4:	mov    edx,0xabf33703
  403cd9:	xor    edx,0x49
  403cdc:	sub    esi,DWORD PTR [ebx+0x494cb1cf]
  403ce2:	iret   
  403ce3:	xchg   ebp,eax
  403ce4:	mov    dh,0x4d
  403ce6:	ins    BYTE PTR es:[edi],dx
  403ce7:	fs clts 
  403cea:	mov    edx,0x498249ae
  403cef:	and    eax,0x35ea8c12
  403cf4:	mov    bl,0x29
  403cf6:	imul   ecx,ebx,0x21
  403cf9:	jno    0x403cfd
  403cfb:	xor    DWORD PTR [ebx],edx
  403cfd:	in     eax,dx
  403cfe:	ficomp WORD PTR [eax*2-0x60899e4]
  403d05:	sbb    cl,BYTE PTR [ebp-0x47be401a]
  403d0b:	mov    dh,0x58
  403d0d:	aas    
  403d0e:	mov    esi,0x66b1501d
  403d13:	ja     0x403d42
  403d15:	fnop   
  403d17:	push   ecx
  403d18:	mov    bl,0x4f
  403d1a:	or     eax,0xd6484567
  403d1f:	daa    
  403d20:	jo     0x403d6b
  403d22:	xor    bl,bl
  403d24:	adc    al,0x11
  403d26:	push   ebp
  403d27:	sub    eax,0xf721863d
  403d2c:	jmp    0x403d14
  403d2e:	cli    
  403d2f:	inc    edx
  403d30:	(bad)  
  403d31:	imul   DWORD PTR [ebx-0x6a]
  403d34:	stos   BYTE PTR es:[edi],al
  403d35:	jl     0x403d55
  403d37:	je     0x403d74
  403d39:	neg    BYTE PTR [ecx+0x8e5992f]
  403d3f:	fcomp  QWORD PTR [ebp+eiz*4+0x3097c84b]
  403d46:	retf   0x1f40
  403d49:	or     DWORD PTR [edx+edi*8+0x9ead6eb],ebp
  403d50:	push   ebp
  403d51:	mov    WORD PTR [edi-0x8e9e7f8],es
  403d57:	dec    edx
  403d58:	inc    esi
  403d59:	stos   DWORD PTR es:[edi],eax
  403d5a:	or     ecx,ebx
  403d5c:	push   ss
  403d5d:	jmp    0x403db4
  403d5f:	(bad)  
  403d60:	int    0x2d
  403d62:	xor    BYTE PTR [ebx],dl
  403d64:	nop
  403d65:	pop    ebx
  403d66:	rcr    BYTE PTR [eax+eax*2-0x24],0x8e
  403d6b:	inc    ebx
  403d6c:	outs   dx,DWORD PTR ds:[esi]
  403d6d:	add    eax,0xa05aab28
  403d72:	jmp    0xc111564b
  403d77:	fcomp  QWORD PTR [eax]
  403d79:	mov    ecx,0xb9abec57
  403d7e:	pop    edi
  403d7f:	neg    DWORD PTR ds:0x5cd5487f
  403d85:	into   
  403d86:	push   eax
  403d87:	mov    bh,0x7c
  403d89:	cs stos BYTE PTR es:[edi],al
  403d8b:	and    al,0xe6
  403d8d:	inc    eax
  403d8e:	pop    esi
  403d8f:	cmp    dl,BYTE PTR [esi+0x281bc6e5]
  403d95:	push   ebp
  403d97:	sbb    BYTE PTR [ebx+0x1e7e05de],0x19
  403d9e:	mov    al,0xb3
  403da0:	dec    ebx
  403da1:	cli    
  403da2:	iret   
  403da3:	mov    ecx,0x26be1ab4
  403da8:	sbb    eax,0xd54c48f1
  403dad:	or     ecx,esp
  403daf:	dec    esp
  403db0:	mov    ds:0xb3096d60,al
  403db5:	mov    ds:0x91a6bd40,eax
  403dba:	add    cl,BYTE PTR [edi-0x262fd572]
  403dc0:	sbb    edx,DWORD PTR [edi-0x774d30c7]
  403dc6:	sub    al,0x10
  403dc8:	scas   eax,DWORD PTR es:[edi]
  403dc9:	les    edx,FWORD PTR [edi+ecx*2]
  403dcc:	xor    edx,ebx
  403dce:	xor    eax,0x43835f1c
  403dd3:	sub    DWORD PTR [edi],ebp
  403dd5:	mov    al,0x22
  403dd7:	inc    esi
  403dd8:	pop    es
  403dd9:	mov    ?,WORD PTR [bp+si+0x36]
  403ddd:	cli    
  403dde:	mov    cl,0x48
  403de0:	fdivr  QWORD PTR [ebp-0x289d5c24]
  403de6:	dec    ebx
  403de7:	sub    eax,0x29d144ff
  403dec:	mov    ds:0x67cf84de,eax
  403df1:	jae    0x403e4d
  403df3:	(bad)  
  403df4:	xor    ebx,DWORD PTR [edi+0x770adac1]
  403dfa:	pop    edi
  403dfb:	pop    ecx
  403dfc:	cmp    cl,BYTE PTR [ebx+0x6f25eba6]
  403e02:	into   
  403e03:	rcl    BYTE PTR ds:0xe0fa88a5,cl
  403e09:	pop    ecx
  403e0a:	jmp    0x7d1d:0x40c4144a
  403e11:	adc    eax,0xa9aa3ac
  403e16:	or     esp,ebx
  403e18:	jne    0x403e34
  403e1a:	shr    DWORD PTR ds:0x351702f8,cl
  403e20:	dec    esi
  403e21:	retf   0xc676
  403e24:	xchg   ebx,eax
  403e25:	retf   
  403e26:	icebp  
  403e27:	lock sub bl,0xf8
  403e2b:	fcmovb st,st(0)
  403e2d:	mov    ah,0x0
  403e2f:	(bad)  
  403e30:	xchg   edx,eax
  403e31:	xor    bh,al
  403e33:	or     eax,0xc01c4d50
  403e38:	imul   ebp,DWORD PTR [edx+0x47],0xc7e4f304
  403e3f:	loope  0x403dd6
  403e41:	lahf   
  403e42:	sti    
  403e43:	or     esi,DWORD PTR [ecx]
  403e45:	cmp    al,0x7c
  403e47:	xchg   esp,eax
  403e48:	mov    ah,0x27
  403e4a:	and    eax,0x35548d17
  403e4f:	jmp    0xf293:0xd5c73935
  403e56:	fcmovu st,st(1)
  403e58:	inc    ecx
  403e59:	add    DWORD PTR [esi-0x371ab666],0xffffffc3
  403e60:	pop    ecx
  403e61:	mov    WORD PTR [edx+eax*8+0x45],?
  403e65:	jmp    0x907:0x60daa3d3
  403e6c:	mov    ecx,0xd1cc14b3
  403e71:	xor    BYTE PTR [edx-0x79e4b714],cl
  403e77:	jmp    0xe2d16bad
  403e7c:	imul   ebp,edi,0x25456936
  403e82:	fdiv   QWORD PTR [esi+0x5988884e]
  403e88:	bound  edx,QWORD PTR [eax+0x16]
  403e8b:	int3   
  403e8c:	repnz pushf 
  403e8e:	xchg   dh,bl
  403e90:	cwde   
  403e91:	(bad)  
  403e92:	mov    eax,DWORD PTR ds:0xb60c1536
  403e98:	mov    dh,0x19
  403e9a:	repz mov ecx,0x9dd96072
  403ea0:	or     dh,dh
  403ea2:	call   0x7005:0x2775e7b7
  403ea9:	jne    0x403f1e
  403eab:	inc    eax
  403eac:	jnp    0x403eb0
  403eae:	xchg   esi,eax
  403eaf:	xor    al,0x5c
  403eb1:	dec    edi
  403eb2:	iret   
  403eb3:	push   es
  403eb4:	sub    al,0x24
  403eb6:	push   esi
  403eb7:	gs clc 
  403eb9:	(bad)  
  403eba:	xchg   esi,eax
  403ebb:	clc    
  403ebc:	dec    ecx
  403ebd:	ins    DWORD PTR es:[edi],dx
  403ebe:	aaa    
  403ebf:	inc    edx
  403ec0:	inc    esp
  403ec1:	out    dx,eax
  403ec2:	test   ecx,esp
  403ec4:	jge    0x403f15
  403ec6:	sti    
  403ec7:	adc    ebx,DWORD PTR [eax-0x63]
  403eca:	sub    BYTE PTR [eax],ch
  403ecc:	xor    edi,edi
  403ece:	jmp    0x3ce3a5f7
  403ed3:	jo     0x403ea6
  403ed5:	les    esp,FWORD PTR [edi-0x11]
  403ed8:	and    edx,edx
  403eda:	sbb    cl,al
  403edc:	ja     0x403ef0
  403ede:	hlt    
  403edf:	in     al,0xf2
  403ee1:	jo     0x403f13
  403ee3:	or     eax,0xb0941c02
  403ee8:	dec    ebp
  403ee9:	call   0xac8cf2ff
  403eee:	push   ecx
  403eef:	es cmc 
  403ef1:	repnz xchg edi,eax
  403ef3:	lock push eax
  403ef5:	(bad)  
  403ef6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ef7:	xchg   DWORD PTR [ebx],ebx
  403ef9:	pushf  
  403efa:	pop    ecx
  403efb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403efc:	mov    eax,ds:0x7abe0e32
  403f01:	mov    al,ds:0x1ff21b7e
  403f06:	pop    ss
  403f07:	mov    ds:0x6fea8370,al
  403f0c:	cld    
  403f0d:	mov    ecx,0xf4cd4f70
  403f12:	sub    BYTE PTR [edx-0x35],dh
  403f15:	xor    eax,0x47d67aaa
  403f1a:	cs hlt 
  403f1c:	dec    esp
  403f1e:	pop    edi
  403f1f:	retf   0x6d25
  403f22:	out    0x95,al
  403f24:	inc    ebx
  403f25:	and    bh,BYTE PTR [edx+edi*1+0x7653f737]
  403f2c:	ins    DWORD PTR es:[edi],dx
  403f2d:	xor    eax,0x32a3beb6
  403f32:	xor    edx,DWORD PTR [ebp+0x371efc2a]
  403f38:	imul   esp,DWORD PTR [eax],0x62
  403f3b:	and    al,0xa8
  403f3d:	out    0x41,eax
  403f3f:	lea    eax,[ebx]
  403f41:	xor    ch,ch
  403f43:	adc    eax,0xaada8a74
  403f48:	sub    DWORD PTR [edx+0x8243b61],edi
  403f4e:	(bad)  
  403f50:	sbb    DWORD PTR ds:0x3d505eff,ebp
  403f56:	or     dl,BYTE PTR [ebx+0x7f0ff4a9]
  403f5c:	fisubr WORD PTR [eax+0x6a]
  403f5f:	dec    ebx
  403f60:	retf   
  403f61:	adc    ebx,esp
  403f63:	cmp    edx,ebp
  403f65:	cwde   
  403f66:	or     eax,0x996a512a
  403f6b:	jmp    0x403f34
  403f6d:	mov    ebx,0x91e72b8
  403f72:	fwait
  403f73:	pop    ebp
  403f74:	icebp  
  403f75:	inc    esp
  403f76:	fld    TBYTE PTR [eax-0x42]
  403f79:	leave  
  403f7a:	mov    ah,0x94
  403f7c:	test   al,0x3a
  403f7e:	ret    0xde69
  403f81:	(bad)  
  403f82:	imul   esp,edx,0xffffffb7
  403f85:	popf   
  403f86:	repz pop ss
  403f88:	out    0xc4,eax
  403f8a:	ins    DWORD PTR es:[edi],dx
  403f8b:	aad    0x54
  403f8d:	daa    
  403f8e:	daa    
  403f8f:	outs   dx,DWORD PTR ds:[esi]
  403f90:	pop    esp
  403f91:	xor    DWORD PTR [edx],esp
  403f93:	push   ecx
  403f94:	cs adc ebx,esp
  403f97:	or     BYTE PTR [edx-0x13],0x21
  403f9b:	retf   
  403f9c:	lods   al,BYTE PTR ds:[esi]
  403f9d:	jno    0x403f65
  403f9f:	add    DWORD PTR [ecx-0x75],edi
  403fa2:	pop    ds
  403fa3:	daa    
  403fa4:	jecxz  0x403fcd
  403fa6:	in     eax,dx
  403fa7:	fistp  QWORD PTR [eax+eax*2-0x4c]
  403fab:	dec    edi
  403fac:	(bad)  
  403fad:	test   eax,0x949ea5da
  403fb2:	mov    BYTE PTR [ebp+0x17],cl
  403fb5:	test   eax,0x49dda945
  403fba:	jle    0x403ff4
  403fbc:	fst    QWORD PTR [ecx]
  403fbe:	add    DWORD PTR [eax+0x7f],esi
  403fc1:	iret   
  403fc2:	(bad)  
  403fc3:	cld    
  403fc4:	mov    ah,bl
  403fc6:	pop    ebx
  403fc7:	sbb    edx,ecx
  403fc9:	pop    es
  403fca:	fidivr WORD PTR [edx-0x54]
  403fcd:	jno    0x40403d
  403fcf:	scas   eax,DWORD PTR es:[edi]
  403fd0:	in     eax,dx
  403fd1:	cmp    bl,BYTE PTR [ecx+0xc5f1604]
  403fd7:	inc    ebx
  403fd8:	cmp    BYTE PTR [edx-0x3d687e54],0x5b
  403fdf:	inc    ecx
  403fe0:	sti    
  403fe1:	mov    al,ds:0x78db4247
  403fe6:	dec    esi
  403fe7:	mov    al,0xf6
  403fe9:	sub    eax,0x77c6f960
  403fee:	mov    edx,0xccf2ef74
  403ff3:	jmp    0x40401b
  403ff5:	pop    edi
  403ff6:	inc    esp
  403ff7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ff8:	iret   
  403ff9:	loopne 0x404035
  403ffb:	gs fcmovnb st,st(0)
  403ffe:	addr16 js 0x404024
  404001:	shr    DWORD PTR [ebx-0xdaccbb2],0x47
  404008:	leave  
  404009:	std    
  40400a:	mov    dh,0xbb
  40400c:	popf   
  40400d:	cs into 
  40400f:	jb     0x403f9f
  404011:	es aad 0x24
  404014:	xchg   BYTE PTR [ebp-0x25],al
  404017:	dec    eax
  404018:	shl    DWORD PTR [ecx+0x39],1
  40401b:	pop    edi
  40401c:	stos   DWORD PTR es:[edi],eax
  40401d:	in     eax,0x7e
  40401f:	dec    eax
  404020:	push   esi
  404021:	je     0x404015
  404023:	mov    bh,0xd7
  404025:	pop    esi
  404026:	pusha  
  404027:	pop    es
  404028:	mov    eax,DWORD PTR [edx+edi*2+0x6fae1c20]
  40402f:	sbb    ecx,DWORD PTR [ebp-0x31876d69]
  404035:	sbb    bl,dl
  404037:	push   esi
  404038:	jge    0x40404f
  40403a:	cmp    al,0x48
  40403c:	fidivr WORD PTR [ecx]
  40403e:	gs push ebx
  404041:	shr    ebp,0x8f
  404044:	repz inc ebx
  404046:	jbe    0x404077
  404048:	mov    ebx,0xbd172472
  40404d:	loope  0x404093
  40404f:	or     eax,0xe0beec3
  404054:	xchg   edx,eax
  404055:	dec    edi
  404056:	in     eax,dx
  404057:	mov    dl,0xa
  404059:	aam    0xd
  40405b:	push   ebx
  40405c:	xor    eax,DWORD PTR [ecx-0x30]
  40405f:	jnp    0x404041
  404061:	inc    ax
  404063:	jmp    DWORD PTR [edi+0x78f61707]
  404069:	inc    ebp
  40406a:	or     al,0x6e
  40406c:	je     0x4040cb
  40406e:	je     0x4040d3
  404070:	sbb    DWORD PTR [edx],eax
  404072:	nop
  404073:	pop    esi
  404074:	test   ecx,esp
  404076:	ins    BYTE PTR es:[edi],dx
  404077:	sub    DWORD PTR [edx],0x6d
  40407a:	icebp  
  40407b:	jecxz  0x4040c4
  40407d:	pop    ecx
  40407e:	fistp  QWORD PTR [ecx-0x58632268]
  404084:	push   cs
  404085:	je     0x404009
  404087:	retf   0x1438
  40408a:	sub    eax,0xf5b1c17c
  40408f:	mov    dl,0x17
  404091:	test   BYTE PTR [ebp+edx*2-0x21],ch
  404095:	sub    esp,ecx
  404097:	pop    ds
  404098:	dec    ebx
  404099:	inc    esp
  40409a:	popa   
  40409b:	shl    DWORD PTR [ebx+0x2a],cl
  40409e:	clc    
  40409f:	scas   eax,DWORD PTR es:[edi]
  4040a0:	xor    esp,DWORD PTR [eax+0x36a40e4d]
  4040a6:	inc    ecx
  4040a7:	mov    ebp,0x7c1059b0
  4040ac:	leave  
  4040ad:	xlat   BYTE PTR ds:[ebx]
  4040ae:	push   cs
  4040af:	push   esp
  4040b0:	cld    
  4040b1:	(bad)
  4040b4:	pop    ss
  4040b5:	adc    al,0xeb
  4040b7:	in     al,dx
  4040b8:	aaa    
  4040b9:	lea    ecx,[esi+edi*2]
  4040bc:	data16 jns 0x40408e
  4040bf:	lahf   
  4040c0:	cmp    BYTE PTR [esi-0xa],dl
  4040c3:	jl     0x40413a
  4040c5:	inc    ebx
  4040c6:	mov    ecx,0x487a18bf
  4040cb:	lds    ebx,FWORD PTR [eax]
  4040cd:	xchg   BYTE PTR [ebp+edi*1+0x540c85c7],dh
  4040d4:	(bad)  [edi+0xc]
  4040d7:	pop    edi
  4040d8:	fild   WORD PTR [ecx+0x355878cb]
  4040de:	jno    0x404085
  4040e0:	enter  0x40cd,0x8e
  4040e4:	jo     0x4040cf
  4040e6:	xor    ah,BYTE PTR [edi]
  4040e8:	jnp    0x404079
  4040ea:	nop
  4040eb:	or     BYTE PTR [ebx+0x2b44dfdf],dh
  4040f1:	xchg   edi,eax
  4040f2:	neg    ah
  4040f4:	xor    dh,al
  4040f6:	push   ss
  4040f7:	push   0x5e
  4040f9:	push   edx
  4040fa:	sbb    eax,0x14f6883f
  4040ff:	or     al,0x94
  404101:	fs (bad) 
  404103:	aam    0xb3
  404105:	adc    cl,BYTE PTR [ebx-0x58]
  404108:	jne    0x404108
  40410a:	pop    ss
  40410b:	xchg   edx,eax
  40410c:	jg     0x40414a
  40410e:	and    DWORD PTR [ebp+edi*2+0x1abcb895],esi
  404115:	mov    cl,0xa7
  404117:	push   ss
  404118:	or     ebx,esi
  40411a:	cmp    eax,0x4423c1be
  40411f:	or     eax,0x83ba26ae
  404124:	fidivr DWORD PTR [edx]
  404126:	fsubrp st(0),st
  404128:	cmp    al,0xca
  40412a:	jg     0x404187
  40412c:	mov    BYTE PTR [ecx],0xcb
  40412f:	(bad)  
  404130:	int3   
  404131:	or     edi,DWORD PTR [eax]
  404133:	popa   
  404134:	and    BYTE PTR [ebx-0x38],dh
  404137:	mov    esi,DWORD PTR [eax]
  404139:	cwde   
  40413a:	nop
  40413b:	in     al,0x73
  40413d:	outs   dx,DWORD PTR ds:[esi]
  40413e:	xchg   esp,eax
  40413f:	arpl   WORD PTR [esi-0x16e8a1e4],sp
  404145:	fwait
  404146:	ss jge 0x40414c
  404149:	push   cs
  40414a:	mov    ds:0x6a184c8d,eax
  40414f:	sbb    ch,bh
  404151:	xlat   BYTE PTR ds:[ebx]
  404152:	jbe    0x40418c
  404154:	pop    ebp
  404155:	pop    esp
  404156:	lahf   
  404157:	cdq    
  404158:	push   ebx
  404159:	pop    es
  40415a:	mov    ah,BYTE PTR [esi*2+0x457695ed]
  404161:	imul   edx,DWORD PTR [ecx+0x4c],0x51bfdca3
  404168:	in     al,dx
  404169:	mov    ds:0xa8534b8c,al
  40416e:	dec    eax
  40416f:	jge    0x4041ab
  404171:	out    0x22,eax
  404173:	sub    eax,0x7faa0acb
  404178:	mov    ecx,0x8c45bd14
  40417d:	mov    esp,0x911b0f67
  404182:	pop    eax
  404183:	xchg   ebx,eax
  404184:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404185:	loop   0x404170
  404187:	lahf   
  404188:	pop    ecx
  404189:	icebp  
  40418a:	lock mov eax,ds:0x10b95391
  404190:	add    BYTE PTR [esi-0x65a7dcff],0xed
  404197:	mov    bh,BYTE PTR [esi-0x48]
  40419a:	popf   
  40419b:	push   0x31
  40419d:	sbb    DWORD PTR [edi-0x2a],eax
  4041a0:	mov    cl,0x1b
  4041a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041a3:	dec    esi
  4041a4:	lods   eax,DWORD PTR ds:[esi]
  4041a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041a6:	add    al,0x94
  4041a8:	stos   DWORD PTR es:[edi],eax
  4041a9:	adc    BYTE PTR [esi-0x1a],bh
  4041ac:	nop
  4041ad:	outs   dx,BYTE PTR ds:[esi]
  4041ae:	cdq    
  4041af:	pushf  
  4041b0:	mov    bh,0xe3
  4041b2:	ror    DWORD PTR [ecx+0x4f],1
  4041b5:	mov    bl,0x14
  4041b7:	mov    dl,BYTE PTR [ebx+0x40c364a7]
  4041bd:	pop    ebp
  4041be:	sbb    al,0xee
  4041c0:	push   cs
  4041c1:	shl    DWORD PTR [edx+0x38],0x70
  4041c5:	lods   al,BYTE PTR ds:[esi]
  4041c6:	jmp    FWORD PTR ds:0x646758e2
  4041cc:	mov    al,dl
  4041ce:	ror    DWORD PTR [ebx+0x2c],1
  4041d1:	xor    edx,ebx
  4041d3:	adc    dl,BYTE PTR [ebp+0x31]
  4041d6:	push   ebx
  4041d7:	shl    DWORD PTR ds:0xba5bbbd5,0x34
  4041de:	sbb    BYTE PTR [edi+0x37eb0e39],bl
  4041e4:	xor    DWORD PTR [ebp+0x23f9da44],eax
  4041ea:	lds    eax,FWORD PTR [ecx]
  4041ec:	cmc    
  4041ed:	aas    
  4041ee:	loop   0x404229
  4041f0:	popa   
  4041f1:	push   edi
  4041f2:	out    dx,al
  4041f3:	sbb    eax,0x9383a9b4
  4041f8:	sbb    ebp,DWORD PTR [ecx+0x7d]
  4041fb:	shl    ebp,1
  4041fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041fe:	sbb    DWORD PTR [esi+0x309ebe37],ebp
  404204:	add    al,0x7e
  404206:	jnp    0x4041df
  404208:	das    
  404209:	mov    esi,0x4752cf55
  40420e:	xchg   ebx,edx
  404210:	mov    al,ds:0x1a593790
  404215:	or     eax,0x7f9ac92
  40421a:	xor    eax,0x8f1f77b
  40421f:	dec    ebx
  404220:	int    0x18
  404222:	lock xor edi,DWORD PTR [ebx+0x1dff2404]
  404229:	cmc    
  40422a:	adc    dl,BYTE PTR [ecx+edx*1]
  40422d:	gs pop eax
  40422f:	fucomi st,st(0)
  404231:	xor    BYTE PTR [ecx+0x10],dh
  404234:	mov    ebp,0x6ba8a5e8
  404239:	aas    
  40423a:	and    al,0x42
  40423c:	push   0x2d792290
  404241:	push   es
  404242:	dec    ebp
  404243:	sub    al,0xc
  404245:	mov    ch,BYTE PTR [ebx+0x38]
  404248:	shl    BYTE PTR [edi-0x19],cl
  40424b:	fiadd  WORD PTR [esi-0x6e]
  40424e:	adc    DWORD PTR [eax+edi*4],edi
  404251:	pop    ecx
  404252:	push   es
  404253:	pop    ebp
  404254:	adc    dl,BYTE PTR [ebp+0x5e]
  404257:	sub    ecx,0xffffff87
  40425a:	(bad)  
  40425b:	pop    eax
  40425c:	data16 in al,0xcf
  40425f:	jmp    0x84eb:0xf19b15e7
  404266:	arpl   WORD PTR [edi],bp
  404268:	int    0x5a
  40426a:	sub    ch,BYTE PTR [edx+0x1a]
  40426d:	je     0x404252
  40426f:	inc    ebp
  404270:	fisttp QWORD PTR [edi+0x14]
  404273:	cld    
  404274:	mov    eax,ds:0xa20333de
  404279:	mov    ds:0x70773408,al
  40427e:	outs   dx,DWORD PTR ds:[esi]
  40427f:	push   0x9
  404281:	xor    BYTE PTR [edx+ebx*8],dh
  404284:	sub    dh,BYTE PTR ds:0x10acf091
  40428a:	jnp    0x4042fc
  40428c:	je     0x40422c
  40428e:	test   BYTE PTR [esi],dh
  404290:	dec    esi
  404291:	inc    eax
  404292:	or     eax,0x841cde37
  404297:	pop    es
  404298:	adc    DWORD PTR [ebx],esi
  40429a:	cld    
  40429b:	xor    bl,BYTE PTR [eax-0x3cc3b634]
  4042a1:	xchg   edx,eax
  4042a2:	call   0x5057:0xd4678d04
  4042a9:	xlat   BYTE PTR ds:[ebx]
  4042aa:	mov    ecx,0x7cfa5aaf
  4042af:	mov    al,ds:0x667a7bf9
  4042b4:	inc    esp
  4042b5:	pop    esp
  4042b6:	cmc    
  4042b7:	xchg   ebx,eax
  4042b8:	cmova  edx,DWORD PTR [ebp+0x17]
  4042bc:	repnz leave 
  4042be:	dec    edi
  4042bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042c0:	push   ebx
  4042c1:	xor    ebx,edi
  4042c3:	mov    bl,0x73
  4042c5:	jbe    0x4042b9
  4042c7:	(bad)  
  4042c8:	stos   BYTE PTR es:[edi],al
  4042c9:	mov    esi,0x2752e75e
  4042ce:	in     eax,0x1d
  4042d0:	push   esp
  4042d1:	inc    edi
  4042d2:	dec    ecx
  4042d3:	mov    esi,0x4583f399
  4042d8:	pop    ecx
  4042d9:	iret   
  4042da:	aaa    
  4042db:	xor    DWORD PTR [edx-0x724540f9],0x29
  4042e2:	je     0x4042e7
  4042e4:	fwait
  4042e5:	or     BYTE PTR [edi+0x5f],dh
  4042e8:	out    dx,al
  4042e9:	sbb    BYTE PTR [edx],ch
  4042eb:	int3   
  4042ec:	ror    DWORD PTR [edx+ebp*8-0x3],0xb9
  4042f1:	xor    eax,0xe02c49be
  4042f6:	ds mov edx,0x3ec01372
  4042fc:	scas   eax,DWORD PTR es:[edi]
  4042fd:	pop    eax
  4042fe:	test   eax,0x4e851ac5
  404303:	in     al,0x81
  404305:	mov    dh,0xeb
  404307:	je     0x404321
  404309:	push   edi
  40430a:	outs   dx,DWORD PTR ds:[esi]
  40430b:	push   cs
  40430c:	xor    DWORD PTR [eax],edx
  40430e:	lahf   
  40430f:	cmp    DWORD PTR [ebx+0x70],ebx
  404312:	add    eax,0x3808eb5c
  404317:	out    0x3,eax
  404319:	sbb    BYTE PTR [ecx+0x6b3e6ff7],ch
  40431f:	mov    ah,0x18
  404321:	fmulp  st(7),st
  404323:	es pop es
  404325:	mov    ds:0x154ac4c,al
  40432a:	popa   
  40432b:	adc    edx,DWORD PTR [edx+0x51]
  40432e:	mov    edi,0xeaca29f2
  404333:	imul   edi,DWORD PTR ds:0x9825a6b9,0x4d0235a8
  40433d:	jp     0x404334
  40433f:	cli    
  404340:	aaa    
  404341:	jmp    DWORD PTR [esi]
  404343:	add    al,0xf3
  404345:	push   ss
  404346:	test   BYTE PTR [edx],bl
  404348:	xchg   ebp,eax
  404349:	mov    bl,0xd6
  40434b:	push   ds
  40434c:	(bad)  
  40434d:	sti    
  40434e:	xor    al,0x75
  404350:	and    DWORD PTR [ebx+0x74],eax
  404353:	mulps  xmm3,xmm0
  404356:	jae    0x4043a5
  404358:	cmp    dh,BYTE PTR [ebx+0x68210cd7]
  40435e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40435f:	sbb    DWORD PTR [ebx],ecx
  404361:	ins    DWORD PTR es:[edi],dx
  404362:	push   ecx
  404363:	sti    
  404364:	dec    esi
  404365:	pop    esi
  404366:	sbb    al,0xff
  404368:	lods   al,BYTE PTR ds:[esi]
  404369:	push   ebp
  40436a:	jne    0x404378
  40436c:	sbb    eax,0xa9ef797f
  404371:	cmp    edx,edx
  404373:	jp     0x404316
  404375:	ret    0xa7ae
  404378:	cld    
  404379:	bound  esi,QWORD PTR [edx+edx*4-0x2a]
  40437d:	sbb    dh,BYTE PTR [ebx]
  40437f:	leave  
  404380:	ja     0x4043cc
  404382:	inc    ebx
  404383:	repz jne 0x4043e7
  404386:	xchg   DWORD PTR [edi-0x3f],esp
  404389:	pop    ebp
  40438a:	outs   dx,BYTE PTR ds:[esi]
  40438b:	out    dx,eax
  40438c:	cmp    DWORD PTR [ebx],edi
  40438e:	sub    DWORD PTR [ebp+ecx*8-0x2b2b8ca7],ebp
  404395:	fs enter 0x6d15,0xc
  40439a:	sti    
  40439b:	push   ds
  40439c:	jnp    0x4043bd
  40439e:	stos   DWORD PTR es:[edi],eax
  40439f:	mov    ecx,0xecd51e60
  4043a4:	push   ds
  4043a5:	fsub   QWORD PTR [eax+0x13]
  4043a8:	push   ss
  4043a9:	pop    esi
  4043aa:	imul   edi,DWORD PTR [edi+0x68bdd1b8],0x3b
  4043b1:	inc    edx
  4043b2:	test   al,0xdc
  4043b4:	out    dx,eax
  4043b5:	xchg   DWORD PTR [edi+ecx*8],eax
  4043b8:	jmp    0x13ac:0xf1d23c40
  4043bf:	das    
  4043c0:	out    0x7d,eax
  4043c2:	pop    esi
  4043c3:	mov    eax,0x70862c34
  4043c8:	(bad)  
  4043c9:	or     esi,DWORD PTR [ecx]
  4043cb:	jge    0x4043e7
  4043cd:	stos   DWORD PTR es:[edi],eax
  4043ce:	fcomp  st(7)
  4043d0:	pop    eax
  4043d1:	sub    bl,dh
  4043d3:	fmul   st,st(2)
  4043d5:	js     0x40436a
  4043d7:	jge    0x40441d
  4043d9:	scas   eax,DWORD PTR es:[edi]
  4043da:	loop   0x4043e5
  4043dc:	leave  
  4043dd:	shr    DWORD PTR [ebx-0x4b],cl
  4043e0:	lahf   
  4043e1:	sahf   
  4043e2:	outs   dx,DWORD PTR ds:[esi]
  4043e3:	push   0xffffff92
  4043e5:	adc    esp,DWORD PTR ds:0x94209978
  4043eb:	out    dx,eax
  4043ec:	add    dl,0x1c
  4043ef:	call   0x6779:0x8c6f9317
  4043f6:	jne    0x40439d
  4043f8:	aas    
  4043f9:	ret    0x7130
  4043fc:	jge    0x40443e
  4043fe:	mov    dl,0xa4
  404400:	push   es
  404401:	test   DWORD PTR ds:0xac14643b,ebx
  404407:	mov    ds:0xc8df504d,al
  40440c:	xlat   BYTE PTR ds:[ebx]
  40440d:	jmp    0xe623:0x35edd6c3
  404414:	in     al,dx
  404415:	pop    edx
  404416:	fldenv [esi]
  404418:	into   
  404419:	ins    DWORD PTR es:[edi],dx
  40441a:	pop    es
  40441b:	das    
  40441c:	sbb    DWORD PTR [ecx],esi
  40441e:	mov    BYTE PTR [edx],dl
  404420:	into   
  404421:	jb     0x40449a
  404423:	and    DWORD PTR [edi-0x5d008d1],0x0
  40442a:	gs call 0x5b5e1118
  404430:	pop    ebx
  404431:	dec    ecx
  404432:	ret    
  404433:	jmp    0x4043ed
  404435:	scas   al,BYTE PTR es:[edi]
  404436:	aaa    
  404437:	cdq    
  404438:	mov    ebp,0xd20bdf8e
  40443d:	sti    
  40443e:	pop    edx
  40443f:	cmp    ch,ah
  404441:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404442:	adc    cl,BYTE PTR [edx]
  404444:	and    al,0x7e
  404446:	mul    DWORD PTR [eax]
  404448:	xchg   ecx,eax
  404449:	lods   al,BYTE PTR ds:[esi]
  40444a:	xor    dh,BYTE PTR [ebx]
  40444c:	adc    dl,cl
  40444e:	shl    BYTE PTR [edx+0x2a],cl
  404451:	inc    edi
  404452:	rcr    BYTE PTR [ebx-0x71],0x5d
  404456:	mov    edi,0x41e3b1
  40445b:	xor    eax,0xc57cddf6
  404460:	xchg   DWORD PTR [edi-0x533f9b32],edx
  404466:	retf   
  404467:	iret   
  404468:	(bad)  
  404469:	mov    ah,0x4f
  40446b:	xchg   ebx,eax
  40446c:	cli    
  40446d:	mov    WORD PTR [edx-0x3d453ee6],gs
  404473:	outs   dx,DWORD PTR ds:[esi]
  404474:	std    
  404475:	xchg   esp,eax
  404476:	pop    ecx
  404477:	popa   
  404478:	cmc    
  404479:	dec    ebx
  40447a:	mov    eax,ds:0x6337e530
  40447f:	or     DWORD PTR [ebp+eax*2+0x6d],edx
  404483:	call   FWORD PTR [esp+ebp*1+0x3565ea77]
  40448a:	inc    esp
  40448b:	jmp    0x6e4748ba
  404490:	inc    esp
  404491:	test   BYTE PTR [edi+ebx*4+0x52],cl
  404495:	mov    dh,0x8f
  404497:	stos   DWORD PTR es:[edi],eax
  404498:	add    ecx,DWORD PTR [bp-0x68]
  40449c:	ins    BYTE PTR es:[edi],dx
  40449d:	adc    DWORD PTR [edx+eax*4],ecx
  4044a0:	jne    0x404479
  4044a2:	push   0x3b5765e
  4044a7:	inc    esi
  4044a8:	and    bh,dh
  4044aa:	dec    esi
  4044ab:	shl    BYTE PTR [edx-0x5d],0x36
  4044af:	adc    eax,0x8da3683
  4044b4:	mov    eax,0x2327ea77
  4044b9:	xchg   edi,eax
  4044ba:	out    0x12,al
  4044bc:	(bad)  
  4044bd:	clc    
  4044be:	mov    al,0xed
  4044c0:	aam    0x20
  4044c2:	clc    
  4044c3:	cmp    al,0xee
  4044c5:	jo     0x404489
  4044c7:	push   edi
  4044c8:	aaa    
  4044c9:	or     BYTE PTR [ebx+0x4c23ced3],0xfd
  4044d0:	fild   DWORD PTR [edx]
  4044d2:	into   
  4044d3:	retf   
  4044d4:	out    dx,al
  4044d5:	jb     0x40447d
  4044d7:	retf   0x67ac
  4044da:	mov    dh,0xea
  4044dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044dd:	iret   
  4044de:	mov    cl,BYTE PTR [esi+edi*8]
  4044e1:	mov    edi,0xfe0806f6
  4044e6:	lods   eax,DWORD PTR ds:[esi]
  4044e7:	mov    WORD PTR [ebx],fs
  4044e9:	pop    esp
  4044ea:	pushf  
  4044eb:	mov    edi,DWORD PTR ds:0xfff946e0
  4044f1:	(bad)  
  4044f3:	add    al,0xc1
  4044f5:	inc    eax
  4044f6:	xor    eax,0xd7d8ef2c
  4044fb:	outs   dx,DWORD PTR ds:[esi]
  4044fc:	inc    eax
  4044fd:	cli    
  4044fe:	bound  esp,QWORD PTR [esi-0xf7e5815]
  404504:	xor    BYTE PTR ds:0x90d7cf6f,bh
  40450a:	scas   eax,DWORD PTR es:[edi]
  40450b:	pop    esi
  40450c:	out    0x35,eax
  40450e:	xor    al,0x55
  404510:	xor    DWORD PTR ds:0xda0d8144,0x4d9fb92c
  40451a:	xor    DWORD PTR [ebx+0x31e97de8],ecx
  404520:	and    BYTE PTR [edi+0x11],bl
  404523:	mov    eax,ds:0xdfb36db9
  404528:	sbb    eax,0xba67eaa6
  40452d:	hlt    
  40452e:	inc    edx
  40452f:	sub    al,BYTE PTR [edx+0x7f82390b]
  404535:	push   cs
  404536:	jno    0x4044e3
  404538:	xchg   ebp,eax
  404539:	jecxz  0x4044f4
  40453b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40453c:	mov    cl,0xe4
  40453e:	or     BYTE PTR [esi],dh
  404540:	nop
  404541:	cmp    eax,0x6d98e338
  404546:	cmp    DWORD PTR [ecx],esi
  404548:	es ins BYTE PTR es:[edi],dx
  40454a:	jp     0x40453b
  40454c:	aam    0x91
  40454e:	inc    edi
  40454f:	hlt    
  404550:	sti    
  404551:	leave  
  404552:	push   0xa49c3412
  404557:	call   0x21342ebe
  40455c:	test   eax,0x8b90d9a9
  404561:	out    0xb,al
  404563:	pop    edi
  404564:	mov    dl,0xcb
  404566:	sub    ch,bl
  404568:	fs push edi
  40456a:	xor    BYTE PTR [esi+0x36],dh
  40456d:	cs out dx,eax
  40456f:	jle    0x404531
  404571:	mov    cl,0xf0
  404573:	cli    
  404574:	and    ebx,DWORD PTR [ecx]
  404576:	shl    DWORD PTR [ecx-0x4f],1
  404579:	mov    ecx,0x62480f2a
  40457e:	fidiv  WORD PTR [ebp+ebp*2-0x232257b5]
  404585:	mov    eax,DWORD PTR [esi+0x4c]
  404588:	(bad)
  40458d:	xor    al,BYTE PTR [ebx-0x9]
  404590:	stc    
  404591:	cmp    bl,BYTE PTR [eax]
  404593:	hlt    
  404594:	cmp    bl,BYTE PTR [eax]
  404596:	jge    0x4045b3
  404598:	sahf   
  404599:	leave  
  40459a:	loopne 0x404576
  40459c:	jne    0x4045dc
  40459e:	enter  0x94a5,0x96
  4045a2:	ja     0x40455d
  4045a4:	mov    dh,BYTE PTR [ebx-0x7c0d7098]
  4045aa:	jmp    0x4045cf
  4045ac:	add    BYTE PTR [edi+edx*1+0x3838a025],al
  4045b3:	xchg   ebp,eax
  4045b4:	dec    edi
  4045b5:	rcr    DWORD PTR [ebp-0x6c588a1d],1
  4045bb:	js     0x404572
  4045bd:	mov    ch,0xe6
  4045bf:	mov    ebp,0x9ea0622
  4045c4:	mov    bh,0x90
  4045c6:	sbb    eax,0xd6099c66
  4045cb:	in     eax,dx
  4045cc:	lahf   
  4045cd:	push   es
  4045ce:	push   0x20b8bcbe
  4045d3:	or     ecx,DWORD PTR [edi]
  4045d5:	xor    eax,0x509ec9f
  4045da:	aaa    
  4045db:	or     eax,0xf140575a
  4045e0:	push   edi
  4045e1:	jmp    0x7b88ab0f
  4045e6:	inc    ebx
  4045e7:	and    eax,0x7b
  4045ea:	jb     0x4045bf
  4045ec:	add    ebx,edi
  4045ee:	out    0x3c,al
  4045f0:	mov    DWORD PTR [ecx+0x14],eax
  4045f3:	lea    ebx,[eax]
  4045f5:	call   0xffe4:0x446b5e3c
  4045fc:	adc    eax,0xbb18bc0d
  404601:	js     0x4045ea
  404603:	mov    eax,ds:0x824f8a0e
  404608:	ss pop es
  40460a:	dec    esi
  40460b:	push   ebp
  40460c:	or     BYTE PTR [edx+0x1c5b32f4],0x84
  404613:	xor    al,0xfe
  404615:	sub    DWORD PTR [ecx+0x68bd7ccb],ebx
  40461b:	add    al,0x53
  40461d:	and    ch,BYTE PTR ds:0xc8d6b99a
  404623:	(bad)  
  404624:	lahf   
  404625:	mov    edi,0xb124e09a
  40462a:	pushf  
  40462b:	push   eax
  40462c:	xchg   BYTE PTR [edx+0x6e535c27],dh
  404632:	pop    edx
  404633:	ins    BYTE PTR es:[edi],dx
  404634:	aad    0x59
  404636:	or     al,0xcc
  404638:	in     eax,dx
  404639:	or     al,0xa6
  40463b:	push   ebx
  40463c:	adc    edi,DWORD PTR cs:[ebx+ebx*4+0x10828899]
  404644:	mov    eax,ds:0x1c7e4567
  404649:	xchg   esp,eax
  40464a:	inc    ebx
  40464b:	jmp    0x61ea:0x61007efb
  404652:	stos   BYTE PTR es:[edi],al
  404653:	pop    es
  404654:	cdq    
  404655:	xchg   esi,eax
  404656:	leave  
  404657:	adc    eax,0xc27a68e7
  40465c:	data16 aad 0x81
  40465f:	pop    eax
  404660:	sub    ecx,ebx
  404662:	enter  0x4611,0xd3
  404666:	shr    BYTE PTR [edi-0x7b],0x1f
  40466a:	bnd jge 0x40460c
  40466d:	fadd   st,st(4)
  40466f:	xor    BYTE PTR [ebp+0x1f],ah
  404672:	mov    es,WORD PTR [edi-0x1b144d38]
  404678:	mov    ds:0x8e2aa2e7,eax
  40467d:	dec    ebp
  40467e:	dec    ebp
  40467f:	sti    
  404680:	sub    ecx,esi
  404682:	pushf  
  404683:	adc    al,0x95
  404685:	cdq    
  404686:	outs   dx,BYTE PTR ds:[esi]
  404687:	mov    ds:0x360996a1,eax
  40468c:	sub    ebp,DWORD PTR [ebp+0x5c]
  40468f:	pop    ebp
  404690:	sbb    DWORD PTR [edx],ebp
  404692:	(bad)  
  404693:	hlt    
  404694:	inc    esi
  404695:	xchg   ebp,eax
  404696:	push   edi
  404697:	in     al,0x8e
  404699:	sahf   
  40469a:	into   
  40469b:	sub    al,0x38
  40469d:	mov    ebp,0xc1e9a1e9
  4046a2:	jns    0x404707
  4046a4:	inc    ebp
  4046a5:	adc    al,BYTE PTR [ecx-0x259805cf]
  4046ab:	das    
  4046ac:	add    DWORD PTR [edi+0x27],esi
  4046af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046b0:	dec    ebp
  4046b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046b2:	or     bh,BYTE PTR [edi+ebp*8]
  4046b5:	fsubr  QWORD PTR [ecx+0x15ef7282]
  4046bb:	pop    es
  4046bc:	clc    
  4046bd:	test   BYTE PTR [edx+0x6451ddfc],al
  4046c3:	leave  
  4046c4:	retf   
  4046c5:	es pop edx
  4046c7:	sub    esp,ecx
  4046c9:	and    eax,0xebff119f
  4046ce:	jae    0x404716
  4046d0:	dec    edx
  4046d1:	pop    ds
  4046d2:	jno    0x404720
  4046d4:	mov    al,0xff
  4046d6:	inc    ebx
  4046d7:	mov    ah,BYTE PTR [ebx-0x30523d72]
  4046dd:	pop    esi
  4046de:	sub    ebp,edx
  4046e0:	std    
  4046e1:	sbb    cl,BYTE PTR [ebx-0x4565b2f6]
  4046e7:	lods   al,BYTE PTR ds:[esi]
  4046e8:	jp     0x404684
  4046ea:	(bad)  
  4046eb:	ficom  WORD PTR [esi]
  4046ed:	pop    ecx
  4046ee:	out    dx,eax
  4046ef:	mov    edx,0xc9aa5731
  4046f4:	int3   
  4046f5:	add    esp,DWORD PTR [edi]
  4046f7:	fmul   DWORD PTR [ebx]
  4046f9:	xchg   BYTE PTR [edx+edx*8+0x22399705],ah
  404700:	pushf  
  404701:	mov    ds:0xec498be7,al
  404706:	sahf   
  404707:	and    al,0x94
  404709:	jge    0x4046fd
  40470b:	lock jmp 0x404717
  40470e:	inc    eax
  40470f:	mov    ss,WORD PTR [edi]
  404711:	and    cl,bh
  404713:	push   edx
  404714:	cmp    esp,DWORD PTR [ebx-0x7d0833ce]
  40471a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40471b:	xor    BYTE PTR [esi-0x76e16112],ch
  404721:	or     al,0xbc
  404723:	mov    dh,0xaa
  404725:	mov    edi,0x7ec9ffbc
  40472a:	shr    BYTE PTR [edx-0x21b6c03d],1
  404730:	cmp    ebp,DWORD PTR [eax+0x760fac83]
  404736:	mov    ebx,0x837661a
  40473b:	fist   DWORD PTR [esi+0x508735d8]
  404741:	fcmovnbe st,st(7)
  404743:	popf   
  404744:	ret    
  404745:	pop    ecx
  404746:	fdiv   QWORD PTR gs:[esp+ecx*4+0x311de3d1]
  40474e:	and    BYTE PTR [ecx],dh
  404750:	js     0x404739
  404752:	arpl   WORD PTR [eax+0x2a3febf0],sp
  404758:	retf   0x98b3
  40475b:	bound  esp,QWORD PTR [edi]
  40475d:	dec    ebp
  40475e:	jne    0x404775
  404760:	imul   edx,DWORD PTR [eax-0x73],0x2b
  404764:	adc    dh,dl
  404766:	loope  0x404759
  404768:	mov    esp,0xe29fcc81
  40476d:	pop    es
  40476e:	xchg   esi,eax
  40476f:	adc    BYTE PTR [edi+0x41],dl
  404772:	ds pop esp
  404774:	cli    
  404775:	loopne 0x404797
  404777:	mov    al,ds:0xc17725d0
  40477c:	push   ds
  40477d:	fcom   QWORD PTR [eax-0x388fa4c]
  404783:	mov    bh,0x5e
  404785:	mov    dl,0x47
  404787:	ja     0x4047d8
  404789:	cmp    al,0x1c
  40478b:	sub    dl,dh
  40478d:	inc    ecx
  40478e:	les    ebx,FWORD PTR [edx]
  404790:	sbb    BYTE PTR [esi+0xb6bf9dc],ch
  404796:	adc    DWORD PTR [ebp+0x38],ecx
  404799:	nop
  40479a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40479b:	test   ecx,0x9920a8f9
  4047a1:	call   0x90331fa3
  4047a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047a7:	jbe    0x404807
  4047a9:	outs   dx,DWORD PTR ds:[esi]
  4047aa:	std    
  4047ab:	dec    ebx
  4047ac:	fstp   QWORD PTR [edi+0x2b6590c9]
  4047b2:	push   ebp
  4047b3:	aam    0x52
  4047b5:	lods   eax,DWORD PTR ds:[esi]
  4047b6:	xchg   esi,eax
  4047b7:	ficom  DWORD PTR [ebx+ebp*8+0x70]
  4047bb:	imul   ecx,DWORD PTR [edx],0xf
  4047be:	push   ds
  4047bf:	bound  ecx,QWORD PTR [esi]
  4047c1:	fild   QWORD PTR [ebx]
  4047c3:	data16 fst QWORD PTR [edi+ebx*4+0x13f1854a]
  4047cc:	test   BYTE PTR [ebp-0x4e706c37],cl
  4047d2:	jmp    0xe846:0x128dcc82
  4047d9:	jnp    0x404791
  4047db:	xlat   BYTE PTR ds:[ebx]
  4047dc:	mov    esi,0x43c8a37f
  4047e1:	sub    edi,ebx
  4047e3:	adc    al,0x9
  4047e5:	pop    edx
  4047e6:	mov    dh,0x22
  4047e8:	inc    esp
  4047e9:	sub    al,BYTE PTR [ebx]
  4047eb:	sub    BYTE PTR [ebx],bh
  4047ed:	lahf   
  4047ee:	(bad)  
  4047ef:	pop    ebp
  4047f0:	aaa    
  4047f1:	fidivr DWORD PTR [esi-0x7]
  4047f4:	xchg   edx,eax
  4047f5:	inc    eax
  4047f6:	es pop ecx
  4047f8:	(bad)  
  4047f9:	idiv   edi
  4047fb:	adc    DWORD PTR [ebp+edx*8+0x3cdd7161],0xffffff83
  404803:	retf   
  404804:	out    0xdf,eax
  404806:	push   esi
  404807:	stos   DWORD PTR es:[edi],eax
  404808:	inc    edx
  404809:	fadd   DWORD PTR [esi+0x36]
  40480c:	leave  
  40480d:	push   edi
  40480e:	mov    edx,0x7fff50d8
  404813:	jle    0x40482c
  404815:	js     0x4047a4
  404817:	sub    al,0x86
  404819:	jg     0x4047db
  40481b:	pop    ebx
  40481c:	test   BYTE PTR [ecx-0x3],0xf5
  404820:	stc    
  404821:	test   DWORD PTR [esp+eiz*2],eax
  404824:	retf   0x2f7a
  404827:	(bad)  
  404828:	cwde   
  404829:	out    dx,al
  40482a:	inc    esi
  40482b:	mov    ecx,0x3ebe20e8
  404830:	jb     0x40486b
  404832:	jne    0x40483c
  404834:	into   
  404835:	and    eax,ebx
  404837:	dec    ebx
  404838:	xor    eax,0x8096537a
  40483d:	cld    
  40483e:	enter  0xd7d0,0xdd
  404842:	int    0x21
  404844:	scas   eax,DWORD PTR es:[edi]
  404845:	and    al,0xc1
  404847:	cmp    DWORD PTR [ebx+0x134a35ba],edx
  40484d:	cmp    esp,eax
  40484f:	sbb    ecx,ebx
  404851:	leave  
  404852:	mov    ch,0x78
  404854:	lahf   
  404855:	ins    DWORD PTR es:[edi],dx
  404856:	cdq    
  404857:	cmp    BYTE PTR [edi],cl
  404859:	lds    edx,FWORD PTR [edi]
  40485b:	lods   al,BYTE PTR ds:[esi]
  40485c:	sbb    eax,0x669e902a
  404861:	in     al,0x98
  404863:	in     al,0xa8
  404865:	repz fwait
  404867:	loopne 0x404819
  404869:	rcl    BYTE PTR [ecx],cl
  40486b:	adc    eax,0x32
  40486e:	fild   DWORD PTR [ebx]
  404870:	daa    
  404871:	stos   DWORD PTR es:[edi],eax
  404872:	repz enter 0xbd,0xd1
  404877:	(bad)  
  404878:	stc    
  404879:	lds    esi,FWORD PTR [ecx]
  40487b:	mov    WORD PTR [edx+0x136ea8aa],ds
  404881:	mov    bl,0x1
  404883:	ds jp  0x404900
  404886:	push   ss
  404887:	mov    ch,0xc3
  404889:	dec    ecx
  40488a:	iret   
  40488b:	xor    DWORD PTR [edx-0x6ff6ae38],ebp
  404891:	fistp  QWORD PTR [edx+eiz*4]
  404894:	lods   eax,DWORD PTR ds:[esi]
  404895:	iret   
  404896:	dec    ecx
  404897:	aam    0x8e
  404899:	call   0x9a9826f7
  40489e:	outs   dx,BYTE PTR ds:[esi]
  40489f:	inc    eax
  4048a0:	jnp    0x4048cf
  4048a2:	arpl   WORD PTR [edi+0x37448a76],sp
  4048a8:	ja     0x404855
  4048aa:	inc    ecx
  4048ab:	jl     0x404889
  4048ad:	dec    ecx
  4048ae:	shl    ah,cl
  4048b0:	dec    edi
  4048b1:	and    BYTE PTR [ecx],0xe7
  4048b4:	and    BYTE PTR [esi+0x33],bl
  4048b7:	sub    ecx,0x55f5149d
  4048bd:	hlt    
  4048be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048bf:	mov    eax,0x674a207b
  4048c4:	imul   DWORD PTR ds:0x43e0dcca
  4048ca:	push   ebx
  4048cb:	mov    ebp,0xfafa9893
  4048d0:	add    ebp,esi
  4048d2:	leave  
  4048d3:	cmc    
  4048d4:	push   0x46fc9413
  4048d9:	ins    DWORD PTR es:[edi],dx
  4048da:	or     al,0xc
  4048dc:	push   ds
  4048dd:	fsub   QWORD PTR [ecx+0x3b]
  4048e0:	jno    0x404875
  4048e2:	jae    0x404938
  4048e4:	add    esp,DWORD PTR [esi]
  4048e6:	mov    DWORD PTR [ecx-0x2c50e641],esp
  4048ec:	mov    ch,0x5b
  4048ee:	or     al,0xa6
  4048f0:	(bad)  
  4048f1:	mov    ds:0x6c5e9fa4,eax
  4048f6:	push   DWORD PTR [edx-0x19]
  4048f9:	add    cl,BYTE PTR [ebp-0x479a000c]
  4048ff:	sbb    BYTE PTR [ebx],dh
  404901:	test   BYTE PTR [ebx+0x36fcc3f9],ch
  404907:	jl     0x4048cf
  404909:	pavgw  mm7,QWORD PTR [edi]
  40490c:	or     DWORD PTR [ebx],eax
  40490e:	pusha  
  40490f:	sbb    dh,bh
  404911:	sbb    cl,0x9a
  404914:	fwait
  404915:	shl    BYTE PTR [edx],0xb6
  404918:	jle    0x404925
  40491a:	(bad)  
  40491b:	fild   WORD PTR [esi-0x281c5b68]
  404921:	jae    0xcaa19737
  404927:	push   edx
  404928:	mov    ch,0x7c
  40492a:	mov    cl,0x42
  40492c:	in     eax,0xe
  40492e:	push   esi
  40492f:	dec    edx
  404930:	xchg   edi,eax
  404931:	enter  0x664b,0xbb
  404935:	jb     0x404985
  404937:	sbb    BYTE PTR [edx+0x3b4b779b],bl
  40493d:	xor    ebx,edi
  40493f:	adc    al,0x1f
  404941:	sbb    BYTE PTR [edx],0x0
  404944:	fsubr  st,st(0)
  404946:	and    eax,0x7b555b5
  40494b:	or     al,0x82
  40494d:	sub    eax,0xc099653b
  404952:	lock adc DWORD PTR [edx+0x0],esp
  404956:	arpl   WORD PTR [edi],sp
  404958:	rcr    DWORD PTR [edx-0x1],0xea
  40495c:	push   ds
  40495d:	jns    0x4049a7
  40495f:	(bad)  
  404960:	icebp  
  404961:	ror    BYTE PTR [ecx-0x45],1
  404964:	sub    BYTE PTR [esi-0x49a1541b],al
  40496a:	xchg   ebx,eax
  40496b:	dec    edx
  40496c:	pop    es
  40496d:	imul   ebx,DWORD PTR [ebx],0x4620e59
  404973:	ds jns 0x404926
  404976:	pop    ebx
  404977:	test   al,0x26
  404979:	push   0xf31c205c
  40497e:	in     eax,dx
  40497f:	test   DWORD PTR [ebx-0x5ae6edd8],esi
  404985:	jl     0x40496c
  404987:	mov    esp,0x17ffee5c
  40498c:	or     cl,BYTE PTR [ebp+esi*4-0x113e302]
  404993:	iret   
  404994:	jmp    0xedb2c66e
  404999:	pop    edi
  40499a:	pop    esi
  40499b:	or     eax,0x7302d658
  4049a0:	add    cl,BYTE PTR es:[ebp-0x40c6ace5]
  4049a7:	ins    DWORD PTR es:[edi],dx
  4049a8:	ror    BYTE PTR [esi+ebp*1+0x35],cl
  4049ac:	mov    ds:0x3bbc9a71,al
  4049b1:	adc    BYTE PTR [ebp-0x6a],ah
  4049b4:	cmp    ch,BYTE PTR [edi]
  4049b6:	and    cl,BYTE PTR [ebx+0x50dda6db]
  4049bc:	fsubr  DWORD PTR [eax+ebp*4+0x381017f5]
  4049c3:	xchg   DWORD PTR [ecx-0x15cb0a59],ebx
  4049c9:	inc    ecx
  4049cb:	adc    bl,BYTE PTR [edi-0x48047298]
  4049d1:	dec    eax
  4049d2:	jg     0x404993
  4049d4:	or     eax,0x237f1fe4
  4049d9:	int    0x72
  4049db:	stc    
  4049dc:	mov    eax,ds:0x45ec71ca
  4049e1:	test   ax,0x1658
  4049e5:	inc    ecx
  4049e6:	ds push ebp
  4049e8:	inc    ebp
  4049e9:	cwde   
  4049ea:	lods   eax,DWORD PTR ds:[esi]
  4049eb:	jge    0x404984
  4049ed:	shr    DWORD PTR [esp+edx*8-0x4dd0ff7a],0x83
  4049f5:	xchg   esp,eax
  4049f6:	sbb    bl,BYTE PTR [esi-0x477e0a40]
  4049fc:	das    
  4049fd:	adc    DWORD PTR [ebx],esi
  4049ff:	pop    ecx
  404a00:	stos   BYTE PTR es:[edi],al
  404a01:	stos   BYTE PTR es:[edi],al
  404a02:	and    eax,0x5bc3a3d1
  404a07:	fsubr  QWORD PTR [esi-0x2b]
  404a0a:	out    dx,eax
  404a0b:	fld    TBYTE PTR [ebp-0x6bd5983b]
  404a11:	shr    BYTE PTR [ebp+0x16],0x89
  404a15:	imul   BYTE PTR [edi+0x5729202]
  404a1b:	fld    DWORD PTR [ebx]
  404a1d:	adc    BYTE PTR [ecx+0x5a3c5b08],bh
  404a23:	pusha  
  404a24:	inc    edi
  404a25:	or     ecx,DWORD PTR [edx]
  404a27:	sub    al,0xb
  404a29:	xor    al,cl
  404a2b:	sub    DWORD PTR ds:0x36de3b6c,ebp
  404a31:	mov    eax,ds:0x175a0d2
  404a36:	loopne 0x404a64
  404a38:	inc    esi
  404a39:	(bad)  
  404a3a:	mov    ds:0xfb0428cd,al
  404a3f:	jbe    0x4049de
  404a41:	sbb    BYTE PTR [ecx+0x49],ch
  404a44:	mov    cl,0xf5
  404a46:	cmp    eax,0xf96d84ce
  404a4b:	push   edx
  404a4c:	cli    
  404a4d:	hlt    
  404a4e:	push   edi
  404a4f:	stos   DWORD PTR es:[edi],eax
  404a50:	pushf  
  404a51:	int3   
  404a52:	or     DWORD PTR [ecx],esp
  404a54:	ss adc al,0x48
  404a57:	mov    dh,BYTE PTR [ebx-0x35]
  404a5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a5b:	dec    ebx
  404a5c:	jo     0x404abb
  404a5e:	mov    ds:0x851f4bfd,eax
  404a63:	jb     0x404a74
  404a65:	jmp    0x22eaea7d
  404a6a:	push   edx
  404a6b:	sbb    dh,cl
  404a6d:	nop
  404a6e:	stc    
  404a6f:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  404a71:	xchg   DWORD PTR [esi+0x42],edx
  404a74:	jg     0x404a61
  404a76:	test   al,0x2b
  404a78:	sbb    al,0x1b
  404a7a:	iret   
  404a7b:	push   cs
  404a7c:	sbb    esp,ecx
  404a7e:	sub    al,0xbc
  404a80:	sub    al,0x6c
  404a82:	pop    ebp
  404a83:	lahf   
  404a84:	into   
  404a85:	xor    al,0x79
  404a87:	push   esi
  404a88:	inc    ecx
  404a89:	sub    BYTE PTR [esi],dh
  404a8b:	mov    ebx,0x4eee3c26
  404a90:	pushf  
  404a91:	sti    
  404a92:	test   eax,0x693ca5e0
  404a97:	xor    ebx,DWORD PTR [edi-0x57]
  404a9a:	mov    ecx,DWORD PTR [esi+edi*4+0xc22e65a]
  404aa1:	mov    esi,0x5094388f
  404aa6:	jno    0x404a9a
  404aa8:	out    0x24,al
  404aaa:	loope  0x404a4d
  404aac:	call   0x8b81:0x63739c94
  404ab3:	add    bl,BYTE PTR fs:[edi+0x612cd3d]
  404aba:	xlat   BYTE PTR ds:[ebx]
  404abb:	cli    
  404abc:	add    eax,0x25f70caf
  404ac1:	outs   dx,BYTE PTR ds:[esi]
  404ac2:	mov    ebp,0x9cefc76e
  404ac7:	dec    edx
  404ac8:	xor    BYTE PTR [edi+0x68],0x60
  404acc:	xlat   BYTE PTR ds:[ebx]
  404acd:	mov    ah,0x17
  404acf:	mov    cl,0x5f
  404ad1:	ret    0x72e0
  404ad4:	mov    esi,0x2d112d04
  404ad9:	add    edi,DWORD PTR [ecx+0x78f17c31]
  404adf:	je     0x404abd
  404ae1:	inc    DWORD PTR [ebx-0x209949a7]
  404ae7:	push   es
  404ae8:	into   
  404ae9:	add    BYTE PTR es:[ebp-0x3a],dl
  404aed:	nop
  404aee:	jae    0x404acf
  404af0:	add    al,0x1c
  404af2:	je     0x404b54
  404af4:	adc    DWORD PTR [esi],edx
  404af6:	mov    ch,0xb1
  404af8:	sti    
  404af9:	imul   esi,DWORD PTR [esi],0x68
  404afc:	int    0xca
  404afe:	std    
  404aff:	jmp    0x459389e1
  404b04:	fs mov dh,bl
  404b07:	pusha  
  404b08:	imul   edx,ebx,0x68
  404b0b:	into   
  404b0c:	ficomp DWORD PTR [edi+edi*4]
  404b0f:	dec    ebp
  404b10:	sub    eax,0x43ca438c
  404b15:	call   0xcef3:0x47cead94
  404b1c:	xor    ch,0xc2
  404b1f:	add    ebp,DWORD PTR [ecx]
  404b21:	and    ebx,ebx
  404b23:	(bad)  
  404b24:	mov    bl,0xb1
  404b26:	pop    ebp
  404b27:	xlat   BYTE PTR ds:[ebx]
  404b28:	ret    0xb0d9
  404b2b:	(bad)  
  404b2c:	mov    DWORD PTR [edx+0x3d],edx
  404b2f:	pop    esp
  404b30:	cmp    DWORD PTR [ebx+0x10],esp
  404b33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b34:	mov    ds:0x41051e6d,al
  404b39:	push   0xffffff95
  404b3b:	outs   dx,BYTE PTR ds:[esi]
  404b3c:	stos   DWORD PTR es:[edi],eax
  404b3d:	dec    ebx
  404b3e:	push   cs
  404b3f:	sub    BYTE PTR [ebx],0xfa
  404b42:	push   esp
  404b43:	loop   0x404b90
  404b45:	sbb    BYTE PTR [edi-0x46],bl
  404b48:	adc    DWORD PTR [ecx-0x13b58ddd],ebp
  404b4e:	inc    eax
  404b4f:	outs   dx,DWORD PTR ds:[esi]
  404b50:	pop    ebp
  404b51:	div    BYTE PTR [eax]
  404b53:	ja     0x404bb9
  404b55:	sar    esp,0x2b
  404b58:	sti    
  404b59:	enter  0x6b4,0x96
  404b5d:	xlat   BYTE PTR ds:[ebx]
  404b5e:	test   DWORD PTR [ebx-0x57],ebx
  404b61:	mov    edi,0xc6084d5e
  404b66:	mov    ebx,0x6662147f
  404b6b:	jae    0x404b38
  404b6d:	call   0xa17f:0x9d56609
  404b74:	xor    al,cl
  404b76:	cmc    
  404b77:	ror    BYTE PTR [eax-0x37aab1d0],1
  404b7d:	fs cmp ah,dh
  404b80:	jae    0x404b22
  404b82:	lock ror DWORD PTR es:[edx],0x9
  404b87:	aaa    
  404b88:	in     eax,0x29
  404b8a:	loop   0x404be5
  404b8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b8d:	cmp    al,0x8b
  404b8f:	mov    ss,WORD PTR [edx-0x23913f9b]
  404b95:	jne    0x404be4
  404b97:	adc    DWORD PTR [ecx+0x18],edi
  404b9a:	(bad)  
  404b9b:	mov    bl,al
  404b9d:	mov    ah,BYTE PTR [edi-0x4aa0497f]
  404ba3:	push   ebx
  404ba4:	add    ah,bh
  404ba6:	cmp    eax,0x27518cbf
  404bab:	sti    
  404bac:	push   edi
  404bad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bae:	push   0xcec84da9
  404bb3:	out    dx,eax
  404bb4:	xor    ecx,esp
  404bb6:	and    BYTE PTR [eax],bh
  404bb8:	sar    bl,0xd2
  404bbb:	inc    edi
  404bbc:	jge    0x404b83
  404bbe:	mov    ebp,0x9fe64ab1
  404bc3:	sbb    ah,ch
  404bc5:	jg     0x404b68
  404bc7:	mov    ebp,0xd865a5f9
  404bcc:	stc    
  404bcd:	push   ds
  404bce:	pop    eax
  404bcf:	push   eax
  404bd0:	mov    eax,0x43836f12
  404bd5:	xor    al,0xcd
  404bd7:	(bad)  
  404bd8:	lock iret 
  404bda:	stos   BYTE PTR es:[edi],al
  404bdb:	mov    edx,0x58ad6764
  404be0:	call   0xae56:0x9846eddb
  404be7:	jae    0x404b78
  404be9:	push   0xcabf14ce
  404bee:	sub    edi,edi
  404bf0:	js     0x404c13
  404bf2:	test   BYTE PTR [esi-0x25e75311],bl
  404bf8:	data16 xor dh,dl
  404bfb:	push   esi
  404bfc:	mov    dh,0xc6
  404bfe:	imul   esp,DWORD PTR [eax-0x14de0bb],0x9cb2d442
  404c08:	cmc    
  404c09:	jne    0x404c68
  404c0b:	cmp    al,0x21
  404c0d:	jae    0x404c59
  404c0f:	pop    ss
  404c10:	leave  
  404c11:	outs   dx,DWORD PTR ds:[esi]
  404c12:	jbe    0x404c31
  404c14:	lock push esi
  404c16:	es nop
  404c18:	xor    al,0xdb
  404c1a:	inc    esi
  404c1b:	sti    
  404c1c:	mov    cl,0xdc
  404c1e:	cli    
  404c1f:	sti    
  404c20:	(bad)  ds:0xa71a9e9c
  404c26:	inc    esi
  404c27:	jp     0x404c3a
  404c29:	cwde   
  404c2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c2b:	ins    BYTE PTR es:[edi],dx
  404c2c:	dec    edi
  404c2d:	cmp    eax,0x76e650c6
  404c32:	and    DWORD PTR [esi+eax*1-0x5f],esp
  404c36:	jns    0x404bd4
  404c38:	xchg   esi,eax
  404c39:	pop    edx
  404c3a:	cmp    al,0x34
  404c3c:	lods   al,BYTE PTR ds:[esi]
  404c3d:	gs or  al,0xb3
  404c40:	adc    DWORD PTR [ebp-0x18],ebx
  404c43:	lahf   
  404c44:	jbe    0x404c5d
  404c46:	dec    esi
  404c47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c48:	xor    al,0x81
  404c4a:	dec    eax
  404c4b:	scas   eax,DWORD PTR es:[edi]
  404c4c:	adc    BYTE PTR [ecx-0x5f],ah
  404c4f:	mov    bl,0x22
  404c51:	ins    DWORD PTR es:[edi],dx
  404c52:	in     al,dx
  404c53:	imul   edi,eax,0xfffffffd
  404c56:	jne    0x404cae
  404c58:	mov    al,ds:0x537d459f
  404c5d:	test   eax,0x735c3c78
  404c62:	xor    ebp,0xffffffaf
  404c65:	jne    0x404caf
  404c67:	pusha  
  404c68:	call   0x178ea5fc
  404c6d:	add    al,0xb2
  404c6f:	push   ebx
  404c70:	fwait
  404c71:	ret    0x8957
  404c74:	add    eax,0x1e479bea
  404c79:	mov    DWORD PTR [edx],esi
  404c7b:	mov    ebx,0x317fbce6
  404c80:	push   ecx
  404c81:	shl    bl,cl
  404c83:	mov    ebx,0x71113688
  404c88:	mov    ah,0x6e
  404c8a:	(bad)  
  404c8b:	cmp    ch,BYTE PTR cs:[edx+0x63bb5165]
  404c92:	pop    ss
  404c93:	or     eax,0x7f52be8f
  404c98:	jp     0x404c7b
  404c9a:	mov    al,ds:0x342eeb99
  404c9f:	sti    
  404ca0:	xchg   DWORD PTR [edi+0x47],edi
  404ca3:	push   esp
  404ca4:	mov    edx,0xe3b2c053
  404ca9:	imul   edx,DWORD PTR [ebx-0x53],0x48
  404cad:	sar    DWORD PTR [ebp+0x43],0x60
  404cb1:	push   ebx
  404cb2:	nop
  404cb3:	push   eax
  404cb4:	hlt    
  404cb5:	and    eax,0x224782ba
  404cba:	cs (bad) 
  404cbc:	rcl    ah,1
  404cbe:	loop   0x404ca5
  404cc0:	stc    
  404cc1:	mov    ch,0x81
  404cc3:	pusha  
  404cc4:	outs   dx,BYTE PTR fs:[esi]
  404cc6:	mov    ebx,cs
  404cc8:	pop    es
  404cc9:	call   DWORD PTR [edx+0x1]
  404ccc:	ss jo  0x404c5b
  404ccf:	sub    al,bl
  404cd1:	or     dl,BYTE PTR [ebx-0x43f901e0]
  404cd7:	fidivr DWORD PTR [ebx-0x4f]
  404cda:	mov    eax,ss
  404cdc:	xchg   esp,eax
  404cdd:	sbb    BYTE PTR [edx+0x7cc7493e],cl
  404ce3:	arpl   WORD PTR [ebp-0x11f1097],ax
  404ce9:	in     eax,0x83
  404ceb:	add    ebp,DWORD PTR [ebp-0x3e]
  404cee:	popa   
  404cef:	pop    edi
  404cf0:	sar    edi,cl
  404cf2:	pop    ebx
  404cf3:	scas   al,BYTE PTR es:[edi]
  404cf4:	add    dl,BYTE PTR [ebx-0x20d4b25f]
  404cfa:	cdq    
  404cfb:	mov    edi,0x2d2dd355
  404d00:	inc    edx
  404d01:	cmp    BYTE PTR [eax+0x5f],0xae
  404d05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d06:	mul    esi
  404d08:	xchg   ebp,eax
  404d09:	stos   BYTE PTR es:[edi],al
  404d0a:	enter  0xe19,0x57
  404d0e:	or     edx,DWORD PTR [eax-0x11]
  404d11:	jmp    0x2ad490ac
  404d16:	and    BYTE PTR [eax+0x75],cl
  404d19:	lahf   
  404d1a:	mov    dl,0xce
  404d1c:	cmp    esp,DWORD PTR [esp+ecx*8+0x47]
  404d20:	sbb    al,0xd0
  404d22:	pop    ebp
  404d23:	and    eax,0xae28eac
  404d28:	scas   eax,DWORD PTR es:[edi]
  404d29:	jle    0x404d65
  404d2b:	cli    
  404d2c:	mov    bl,0x62
  404d2e:	out    dx,al
  404d2f:	fsub   QWORD PTR [ebx-0x49]
  404d32:	mov    eax,0xbab29eb2
  404d37:	test   al,0x99
  404d39:	adc    al,0x4f
  404d3b:	mov    dl,0x51
  404d3d:	jo     0x404cfd
  404d3f:	aaa    
  404d40:	test   al,0x1e
  404d42:	sub    ebx,DWORD PTR [ebp+0xd]
  404d45:	mov    cl,0xbb
  404d47:	fsub   DWORD PTR [edi]
  404d49:	inc    eax
  404d4a:	inc    esi
  404d4b:	ss icebp 
  404d4d:	das    
  404d4e:	imul   esi,DWORD PTR [ecx],0x76a982d1
  404d54:	push   0xffffffc7
  404d56:	jmp    0x15cb:0x26405c84
  404d5d:	add    BYTE PTR [ecx+0x38],ah
  404d60:	fisttp WORD PTR [edx+0x6b803b43]
  404d66:	cld    
  404d67:	loop   0x404db8
  404d69:	clc    
  404d6a:	mov    bl,0xd5
  404d6c:	mov    ss,WORD PTR [eax-0x33]
  404d6f:	out    dx,al
  404d70:	out    dx,eax
  404d71:	or     DWORD PTR [esi],0xcfd83a5b
  404d77:	sub    DWORD PTR [ecx],esi
  404d79:	mov    ecx,0xcea66bdf
  404d7e:	addr16 xchg esi,eax
  404d80:	xchg   esp,eax
  404d81:	test   eax,0xb93a8816
  404d86:	or     edx,DWORD PTR fs:[ecx+0x76]
  404d8a:	sahf   
  404d8b:	mov    cl,0x67
  404d8d:	outs   dx,BYTE PTR ds:[esi]
  404d8e:	fdivr  st,st(3)
  404d90:	pusha  
  404d91:	jg     0x404dfe
  404d93:	in     eax,dx
  404d94:	cld    
  404d95:	mov    edx,0xf9c46b0e
  404d9a:	add    BYTE PTR [ecx+eax*8+0x13],al
  404d9e:	dec    esp
  404d9f:	pushf  
  404da0:	retf   
  404da1:	(bad)  
  404da2:	sub    eax,esp
  404da4:	add    esp,DWORD PTR ss:0xa3aedf8
  404dab:	std    
  404dac:	dec    esp
  404dad:	sar    DWORD PTR [ebp-0x5ac210ca],0x4
  404db4:	stos   DWORD PTR es:[di],eax
  404db6:	das    
  404db7:	(bad)  
  404db8:	jge    0x404dc1
  404dba:	cdq    
  404dbb:	inc    edi
  404dbc:	iret   
  404dbd:	mov    edi,0xd7ac1b3f
  404dc2:	fs popa 
  404dc4:	cmp    eax,0xd2324b8c
  404dc9:	push   cs
  404dca:	xor    al,0x4
  404dcc:	sub    al,BYTE PTR [ecx+0x5c]
  404dcf:	cwde   
  404dd0:	adc    ch,BYTE PTR [edx-0x6555886c]
  404dd6:	out    0x2,eax
  404dd8:	add    ch,BYTE PTR fs:[ecx-0x56f1d9fe]
  404ddf:	loop   0x404dee
  404de1:	cmp    al,0x60
  404de3:	(bad)  
  404de4:	cmp    eax,0xd45095df
  404de9:	xchg   ebp,eax
  404dea:	outs   dx,DWORD PTR ds:[esi]
  404deb:	sub    eax,0xc0e8b48a
  404df0:	mov    ds:0xf0b0169b,eax
  404df5:	xchg   ebx,eax
  404df6:	das    
  404df7:	pop    edx
  404df8:	xchg   esi,eax
  404df9:	gs in  eax,dx
  404dfb:	mov    DWORD PTR [ebx+0x3b092474],eax
  404e01:	in     al,dx
  404e02:	add    esp,DWORD PTR [edi-0x46700fc9]
  404e08:	rol    DWORD PTR [ecx-0x6e],0x17
  404e0c:	mov    ebp,0xbb753c3f
  404e11:	cmp    al,0xe4
  404e13:	les    ebx,FWORD PTR [ecx]
  404e15:	jne    0x404de6
  404e17:	std    
  404e18:	test   DWORD PTR [edi+esi*1],edx
  404e1b:	mov    ah,bl
  404e1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e1e:	jbe    0x404e89
  404e20:	or     al,0xac
  404e22:	aas    
  404e23:	outs   dx,BYTE PTR ds:[esi]
  404e24:	xabort 0x70
  404e27:	dec    ebp
  404e28:	addr16 jo 0x404ddc
  404e2b:	sub    edi,0x85fa7c82
  404e31:	xchg   DWORD PTR [eax+eiz*2-0x1c9d3f4b],ecx
  404e38:	sti    
  404e39:	jle    0x404dfc
  404e3b:	(bad)  
  404e3c:	and    bh,dh
  404e3e:	(bad)  
  404e3f:	mov    al,0xff
  404e41:	jae    0x404e5e
  404e43:	dec    eax
  404e44:	clc    
  404e45:	mov    ebp,0x378701bd
  404e4a:	cmp    DWORD PTR [esi+0x52fe61ad],eax
  404e50:	mov    ds:0xc7ef2664,al
  404e55:	imul   eax,DWORD PTR [ecx-0x37],0x3bc995e8
  404e5c:	sbb    DWORD PTR [edi],ebp
  404e5e:	cmp    DWORD PTR [ecx],0xffffff9b
  404e61:	push   esp
  404e62:	or     DWORD PTR [edx],eax
  404e64:	scas   eax,DWORD PTR es:[edi]
  404e65:	jae    0x404df0
  404e67:	mov    ch,0x56
  404e69:	iret   
  404e6a:	jae    0x404ebf
  404e6c:	add    eax,0xcbb3e0cb
  404e71:	rep lods al,BYTE PTR ds:[esi]
  404e73:	pusha  
  404e74:	sti    
  404e75:	loope  0x404ecd
  404e77:	jecxz  0x404e42
  404e79:	adc    edx,esi
  404e7b:	repz fisttp WORD PTR [ebp+0x15a8d2a1]
  404e82:	aam    0x6d
  404e84:	jle    0x404eb7
  404e86:	dec    ebx
  404e87:	ret    
  404e88:	fisubr DWORD PTR [edx-0x68]
  404e8b:	int3   
  404e8c:	(bad)  
  404e8d:	mov    dl,0x3f
  404e8f:	adc    eax,0x1baeac5
  404e94:	adc    eax,0x6b779245
  404e99:	jmp    DWORD PTR [edi]
  404e9b:	aas    
  404e9c:	pop    ss
  404e9d:	hlt    
  404e9e:	mov    BYTE PTR [edx],ah
  404ea0:	jmp    0x404e2b
  404ea2:	mov    dl,0x2
  404ea4:	into   
  404ea5:	jbe    0x404ee9
  404ea7:	ss mov dl,0x21
  404eaa:	loop   0x404ef0
  404eac:	mov    esp,0x1b850b3c
  404eb1:	add    eax,0x547b77b6
  404eb6:	xor    ch,BYTE PTR [edi]
  404eb8:	call   0x1ebc9d00
  404ebd:	add    BYTE PTR [ebx],bh
  404ebf:	xor    BYTE PTR [esi+edx*2+0x7d],dh
  404ec3:	lahf   
  404ec4:	jmp    0x343e5265
  404ec9:	aas    
  404eca:	popa   
  404ecb:	sub    edx,esi
  404ecd:	pop    ecx
  404ece:	loope  0x404e50
  404ed0:	(bad)  
  404ed1:	stos   BYTE PTR es:[edi],al
  404ed2:	xor    DWORD PTR [edx],0xe176dd0a
  404ed8:	push   edx
  404ed9:	add    al,ch
  404edb:	fisub  WORD PTR [eax+0x1b]
  404ede:	inc    eax
  404edf:	ret    
  404ee0:	ret    
  404ee1:	mov    dl,0xcf
  404ee3:	pop    ds
  404ee4:	xchg   edi,eax
  404ee5:	sbb    eax,0xf0d9f37
  404eea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404eeb:	inc    esp
  404eec:	imul   ebx,DWORD PTR [ecx+0x606eac14],0x68
  404ef3:	ins    BYTE PTR es:[edi],dx
  404ef4:	mov    ds:0xded7cba,eax
  404ef9:	scas   eax,DWORD PTR es:[edi]
  404efa:	lock lods eax,DWORD PTR ds:[esi]
  404efc:	add    al,0xd1
  404efe:	mov    edi,0x145c95
  404f03:	ret    0x40b0
  404f06:	mov    al,0x81
  404f08:	or     bh,cl
  404f0a:	pop    esp
  404f0b:	inc    ebp
  404f0c:	cmp    dh,dl
  404f0e:	jecxz  0x404ee7
  404f10:	retf   
  404f11:	push   esp
  404f12:	pop    esp
  404f13:	out    dx,al
  404f14:	or     BYTE PTR ds:[edx],dh
  404f17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f18:	push   0xffffff93
  404f1a:	nop
  404f1b:	mov    ds:0x324efb04,al
  404f20:	add    DWORD PTR [edi+edx*2-0x5a749a4],esi
  404f27:	pop    es
  404f28:	or     BYTE PTR [ebp+eax*2-0x4b],0x74
  404f2d:	mov    ds:0xf42d3491,al
  404f32:	into   
  404f33:	out    dx,al
  404f34:	adc    ecx,ebx
  404f36:	xchg   esi,eax
  404f37:	cmp    BYTE PTR [ebx+0x4996f81c],bl
  404f3d:	pushf  
  404f3e:	push   0x1c
  404f40:	jge    0x404f73
  404f42:	mov    eax,0xf89c85b5
  404f47:	and    DWORD PTR ds:0x42a010,edi
  404f4d:	mov    DWORD PTR [ebp-0x4],eax
  404f50:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  404f57:	mov    ecx,DWORD PTR [ebp-0x4]
  404f5a:	mov    DWORD PTR ds:0x42a000,0x12
  404f64:	cmp    DWORD PTR ds:0x42a000,0x0
  404f6b:	je     0x404fb8
  404f71:	cmp    DWORD PTR ds:0x42a000,0x9
  404f78:	jne    0x404f8c
  404f7e:	push   DWORD PTR [ebp-0x24]
  404f81:	push   0x5fe9
  404f86:	call   DWORD PTR ds:0x42ed35
  404f8c:	cmp    DWORD PTR ds:0x42a000,0xa
  404f93:	jne    0x404fa6
  404f99:	mov    edx,DWORD PTR ds:0x42a000
  404f9f:	dec    edx
  404fa0:	mov    DWORD PTR ds:0x42a000,edx
  404fa6:	mov    edx,DWORD PTR ds:0x42a000
  404fac:	dec    edx
  404fad:	mov    DWORD PTR ds:0x42a000,edx
  404fb3:	jmp    0x404f64
  404fb8:	push   esi
  404fb9:	mov    edx,0x7510897
  404fbe:	adc    esi,DWORD PTR ds:0x42d018
  404fc4:	xor    ecx,edx
  404fc6:	or     esi,0x58d6
  404fcc:	mov    esi,0x3272de
  404fd1:	push   edi
  404fd2:	add    edi,DWORD PTR ds:0x42c010
  404fd8:	mov    edi,DWORD PTR [ebp+0x10]
  404fdb:	sbb    DWORD PTR ds:0x42b008,0x61d9
  404fe5:	add    ecx,esi
  404fe7:	mov    DWORD PTR ds:0x42b00c,0x2918
  404ff1:	cmp    ecx,edi
  404ff3:	je     0x405132
  404ff9:	sbb    ecx,0x5a47
  404fff:	mov    ecx,DWORD PTR [ebp-0x4]
  405002:	mov    edi,DWORD PTR [ebp+0x10]
  405005:	xor    eax,eax
  405007:	xor    ecx,edx
  405009:	xor    DWORD PTR ds:0x42a000,0x42d004
  405013:	add    ecx,esi
  405015:	add    edi,0xfabdbeeb
  40501b:	mov    DWORD PTR ds:0x42901c,0x2ab
  405025:	adc    eax,0xffffffff
  405028:	xor    DWORD PTR ds:0x429000,0x42c018
  405032:	xor    eax,0x0
  405035:	mov    DWORD PTR [ebp-0xc],eax
  405038:	mov    DWORD PTR ds:0x429010,0x21c3
  405042:	push   ebx
  405043:	mov    eax,ds:0x42c000
  405048:	adc    DWORD PTR ds:0x429024,eax
  40504e:	xor    ebx,ebx
  405050:	and    DWORD PTR ds:0x429028,0x2bdb
  40505a:	xor    edi,0x8a29a129
  405060:	sub    eax,0x2af1
  405065:	mov    eax,ecx
  405067:	sub    DWORD PTR ds:0x429008,0x42c018
  405071:	add    eax,0xfabdbeeb
  405076:	mov    DWORD PTR ds:0x42d008,0x23e2
  405080:	adc    ebx,0xffffffff
  405083:	xor    eax,0x8a29a129
  405088:	xor    DWORD PTR ds:0x42a01c,0x5bfd
  405092:	xor    ebx,0x0
  405095:	cmp    eax,edi
  405097:	jne    0x4050c4
  40509d:	mov    DWORD PTR ds:0x42d014,0x5593
  4050a7:	cmp    ebx,DWORD PTR [ebp-0xc]
  4050aa:	mov    DWORD PTR ds:0x42c000,0x5fb3
  4050b4:	je     0x40512c
  4050ba:	jmp    0x4050c4
  4050bf:	mov    esi,0x3272de
  4050c4:	mov    eax,DWORD PTR [ebp-0x4]
  4050c7:	mov    edi,DWORD PTR [ebp-0x8]
  4050ca:	xor    edi,edx
  4050cc:	add    edi,esi
  4050ce:	mov    esi,DWORD PTR [ebp+0x8]
  4050d1:	imul   edi,ecx
  4050d4:	mov    ebx,DWORD PTR [ebp+0xc]
  4050d7:	xor    eax,edx
  4050d9:	add    eax,ecx
  4050db:	mov    al,BYTE PTR [ebx+eax*1+0x3272de]
  4050e2:	mov    BYTE PTR [edi+esi*1],al
  4050e5:	mov    eax,DWORD PTR [ebp-0x8]
  4050e8:	mov    esi,DWORD PTR [ebp+0x10]
  4050eb:	xor    eax,edx
  4050ed:	xor    ebx,ebx
  4050ef:	add    esi,0xfabdbeeb
  4050f5:	adc    ebx,0xffffffff
  4050f8:	lea    ecx,[ecx+eax*1+0x3272de]
  4050ff:	xor    edi,edi
  405101:	xor    esi,0x8a29a129
  405107:	xor    ebx,0x0
  40510a:	mov    eax,ecx
  40510c:	add    eax,0xfabdbeeb
  405111:	adc    edi,0xffffffff
  405114:	xor    eax,0x8a29a129
  405119:	xor    edi,0x0
  40511c:	cmp    eax,esi
  40511e:	jne    0x4050bf
  405124:	cmp    edi,ebx
  405126:	jne    0x4050bf
  40512c:	mov    eax,0xf89c85b4
  405131:	pop    ebx
  405132:	pop    edi
  405133:	pop    esi
  405134:	leave  
  405135:	ret    0xc
  405138:	push   ebp
  405139:	mov    ebp,esp
  40513b:	push   ecx
  40513c:	adc    DWORD PTR ds:0x42d00c,ebx
  405142:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  405149:	mov    eax,DWORD PTR [ebp+0x8]
  40514c:	sub    DWORD PTR ds:0x42a01c,0x42d008
  405156:	mov    al,BYTE PTR [eax]
  405158:	xor    DWORD PTR ds:0x42b000,0x3196
  405162:	add    al,0xa
  405164:	xor    al,0x72
  405166:	mov    DWORD PTR ds:0x42a00c,0x42a3
  405170:	cmp    al,0x25
  405172:	jne    0x405224
  405178:	mov    eax,DWORD PTR [ebp+0x8]
  40517b:	mov    ecx,DWORD PTR ds:0x42d018
  405181:	adc    ecx,DWORD PTR ds:0x42b01c
  405187:	mov    DWORD PTR ds:0x42d018,ecx
  40518d:	mov    ecx,DWORD PTR [ebp+0x8]
  405190:	add    ecx,DWORD PTR [eax+0x3c]
  405193:	mov    edx,0x7510897
  405198:	movzx  eax,BYTE PTR ds:0x42d01c
  40519f:	xor    DWORD PTR ds:0x429008,eax
  4051a5:	mov    DWORD PTR [ebp+0x8],ecx
  4051a8:	and    DWORD PTR ds:0x42d010,0x0
  4051b2:	jmp    0x4051c2
  4051b7:	mov    eax,ds:0x42d010
  4051bc:	inc    eax
  4051bd:	mov    ds:0x42d010,eax
  4051c2:	cmp    DWORD PTR ds:0x42d010,0x10
  4051c9:	jae    0x4051f6
  4051cf:	cmp    DWORD PTR ds:0x42d010,0x18
  4051d6:	jne    0x4051f1
  4051dc:	push   0x1f60
  4051e1:	push   0x42b008
  4051e6:	push   0x63e2
  4051eb:	call   DWORD PTR ds:0x42ed39
  4051f1:	jmp    0x4051b7
  4051f6:	mov    eax,DWORD PTR [ebp-0x4]
  4051f9:	xor    eax,edx
  4051fb:	push   esi
  4051fc:	mov    esi,DWORD PTR [ebp+0x8]
  4051ff:	mov    ecx,0x3272de
  405204:	add    eax,ecx
  405206:	cmp    DWORD PTR [esi+0x54],eax
  405209:	pop    esi
  40520a:	je     0x405218
  405210:	mov    eax,DWORD PTR [ebp+0x8]
  405213:	jmp    0x405231
  405218:	mov    eax,DWORD PTR [ebp-0x4]
  40521b:	xor    eax,edx
  40521d:	add    eax,ecx
  40521f:	jmp    0x405231
  405224:	mov    eax,DWORD PTR [ebp-0x4]
  405227:	xor    eax,0x7510897
  40522c:	add    eax,0x3272de
  405231:	leave  
  405232:	ret    0x4
  405235:	push   ebp
  405236:	mov    ebp,esp
  405238:	sub    esp,0x78
  40523b:	push   ebx
  40523c:	push   esi
  40523d:	not    DWORD PTR ds:0x42c004
  405243:	push   edi
  405244:	and    DWORD PTR ds:0x42a010,0x4b6f
  40524e:	push   0x1f
  405250:	and    DWORD PTR ds:0x42b01c,0x5e1c
  40525a:	lea    eax,[ebp-0x78]
  40525d:	push   eax
  40525e:	xor    DWORD PTR ds:0x429008,0x42d018
  405268:	push   0x0
  40526a:	sbb    DWORD PTR ds:0x429008,0x42c01c
  405274:	call   DWORD PTR ds:0x42ed69
  40527a:	and    DWORD PTR ds:0x42a004,0x5ecf
  405284:	push   0x97898797
  405289:	and    DWORD PTR ds:0x42b014,0x429004
  405293:	call   DWORD PTR ds:0x42ed2d
  405299:	and    ebx,eax
  40529b:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4052a2:	mov    DWORD PTR [ebp-0x14],0xf89c85b4
  4052a9:	mov    ecx,DWORD PTR [ebp-0x4]
  4052ac:	and    DWORD PTR ds:0x42b008,0x0
  4052b6:	jmp    0x4052c6
  4052bb:	mov    eax,ds:0x42b008
  4052c0:	inc    eax
  4052c1:	mov    ds:0x42b008,eax
  4052c6:	cmp    DWORD PTR ds:0x42b008,0x1f
  4052cd:	jae    0x40535c
  4052d3:	cmp    DWORD PTR ds:0x42b008,0x7
  4052da:	jne    0x4052f0
  4052e0:	push   0x42e0e4
  4052e5:	push   0x42e083
  4052ea:	call   DWORD PTR ds:0x42ed3d
  4052f0:	cmp    DWORD PTR ds:0x42b008,0x6
  4052f7:	jne    0x405308
  4052fd:	mov    eax,ds:0x42b008
  405302:	inc    eax
  405303:	mov    ds:0x42b008,eax
  405308:	jmp    0x4052bb
  40530d:	mov    DWORD PTR ds:0x429004,0x1d
  405317:	cmp    DWORD PTR ds:0x429004,0x0
  40531e:	je     0x40535c
  405324:	cmp    DWORD PTR ds:0x429004,0x1f
  40532b:	jne    0x405340
  405331:	push   DWORD PTR [ebp-0x28]
  405334:	push   DWORD PTR [ebp-0xc]
  405337:	push   DWORD PTR [ebp-0xc]
  40533a:	call   DWORD PTR ds:0x42ed41
  405340:	mov    ebx,DWORD PTR ds:0x429004
  405346:	dec    ebx
  405347:	mov    DWORD PTR ds:0x429004,ebx
  40534d:	jmp    0x405317
  405352:	and    DWORD PTR ds:0x42a010,0x5936
  40535c:	mov    ebx,0x7510897
  405361:	xor    ecx,ebx
  405363:	sbb    DWORD PTR ds:0x42a000,edx
  405369:	mov    eax,0x3272de
  40536e:	or     DWORD PTR ds:0x42d018,0x42c010
  405378:	add    ecx,eax
  40537a:	and    DWORD PTR ds:0x429014,0x42b004
  405384:	mov    DWORD PTR [ebp-0x1c],ecx
  405387:	xor    DWORD PTR ds:0x429010,edx
  40538d:	mov    ecx,DWORD PTR [ebp+0x14]
  405390:	and    DWORD PTR ds:0x42b004,0x273e
  40539a:	test   ecx,ecx
  40539c:	mov    DWORD PTR ds:0x42c004,0x295e
  4053a6:	je     0x4053b6
  4053ac:	mov    ecx,DWORD PTR [ebp+0x14]
  4053af:	or     esi,esi
  4053b1:	mov    ecx,DWORD PTR [ecx]
  4053b3:	mov    DWORD PTR [ebp-0x1c],ecx
  4053b6:	and    DWORD PTR ds:0x42b018,0x0
  4053c0:	jmp    0x4053d2
  4053c5:	mov    edi,DWORD PTR ds:0x42b018
  4053cb:	inc    edi
  4053cc:	mov    DWORD PTR ds:0x42b018,edi
  4053d2:	cmp    DWORD PTR ds:0x42b018,0x18
  4053d9:	jae    0x405402
  4053df:	cmp    DWORD PTR ds:0x42b018,0x24
  4053e6:	jne    0x4053fd
  4053ec:	push   DWORD PTR [ebp-0x14]
  4053ef:	push   0x42d004
  4053f4:	push   DWORD PTR [ebp-0x14]
  4053f7:	call   DWORD PTR ds:0x42ed45
  4053fd:	jmp    0x4053c5
  405402:	mov    ecx,0x7665
  405407:	and    DWORD PTR ds:0x42a014,0x0
  405411:	jmp    0x405423
  405416:	mov    esi,DWORD PTR ds:0x42a014
  40541c:	inc    esi
  40541d:	mov    DWORD PTR ds:0x42a014,esi
  405423:	cmp    DWORD PTR ds:0x42a014,0x15
  40542a:	jae    0x405448
  405430:	cmp    DWORD PTR ds:0x42a014,0x19
  405437:	jne    0x405443
  40543d:	call   DWORD PTR ds:0x42ed51
  405443:	jmp    0x405416
  405448:	imul   edx,eax
  40544b:	mov    esi,0x76532
  405450:	and    DWORD PTR ds:0x42c014,0x0
  40545a:	jmp    0x40546c
  40545f:	mov    edi,DWORD PTR ds:0x42c014
  405465:	inc    edi
  405466:	mov    DWORD PTR ds:0x42c014,edi
  40546c:	cmp    DWORD PTR ds:0x42c014,0x16
  405473:	jae    0x40549e
  405479:	cmp    DWORD PTR ds:0x42c014,0x22
  405480:	jne    0x40548c
  405486:	call   DWORD PTR ds:0x42ed55
  40548c:	jmp    0x40545f
  405491:	movzx  edi,WORD PTR ds:0x429024
  405498:	xor    DWORD PTR ds:0x42c008,edi
  40549e:	add    edx,ecx
  4054a0:	xchg   esi,ecx
  4054a2:	mov    edi,0x54354
  4054a7:	and    DWORD PTR ds:0x429028,0x0
  4054b1:	jmp    0x4054c3
  4054b6:	mov    ecx,DWORD PTR ds:0x429028
  4054bc:	inc    ecx
  4054bd:	mov    DWORD PTR ds:0x429028,ecx
  4054c3:	cmp    DWORD PTR ds:0x429028,0x1c
  4054ca:	jae    0x40550b
  4054d0:	cmp    DWORD PTR ds:0x429028,0x21
  4054d7:	jne    0x405500
  4054dd:	push   0x8575
  4054e2:	push   0x65be
  4054e7:	push   0x42d000
  4054ec:	push   DWORD PTR [ebp-0x24]
  4054ef:	push   DWORD PTR [ebp-0x14]
  4054f2:	push   DWORD PTR [ebp-0x18]
  4054f5:	push   0x5d3f
  4054fa:	call   DWORD PTR ds:0x42ed59
  405500:	jmp    0x4054b6
  405505:	inc    DWORD PTR ds:0x429020
  40550b:	sub    edx,edi
  40550d:	xor    ecx,DWORD PTR ds:0x42c014
  405513:	mov    ecx,DWORD PTR [ebp-0x4]
  405516:	sbb    DWORD PTR ds:0x42a008,ecx
  40551c:	xor    ecx,ebx
  40551e:	inc    esi
  40551f:	add    ecx,eax
  405521:	mov    DWORD PTR [ebp-0x8],ecx
  405524:	and    esi,ecx
  405526:	mov    ecx,DWORD PTR [ebp-0x14]
  405529:	xor    ecx,ebx
  40552b:	add    ecx,eax
  40552d:	mov    DWORD PTR ds:0x429004,0x1b
  405537:	cmp    DWORD PTR ds:0x429004,0x0
  40553e:	je     0x405599
  405544:	cmp    DWORD PTR ds:0x429004,0x9
  40554b:	jne    0x405561
  405551:	push   0x27da
  405556:	push   0x42e0f3
  40555b:	call   DWORD PTR ds:0x42ed5d
  405561:	cmp    DWORD PTR ds:0x429004,0xa
  405568:	jne    0x40557d
  40556e:	xor    esi,esi
  405570:	or     esi,DWORD PTR ds:0x429004
  405576:	dec    esi
  405577:	mov    DWORD PTR ds:0x429004,esi
  40557d:	mov    esi,DWORD PTR ds:0x429004
  405583:	dec    esi
  405584:	mov    DWORD PTR ds:0x429004,esi
  40558a:	jmp    0x405537
  40558f:	adc    DWORD PTR ds:0x42d008,0x2b5d
  405599:	mov    DWORD PTR [ebp-0x24],ecx
  40559c:	mov    ecx,DWORD PTR [ebp-0x4]
  40559f:	or     DWORD PTR ds:0x42d014,ebx
  4055a5:	xor    ecx,ebx
  4055a7:	add    ecx,eax
  4055a9:	sub    esi,0x14b0
  4055af:	mov    DWORD PTR [ebp-0x30],ecx
  4055b2:	or     DWORD PTR ds:0x42a000,edi
  4055b8:	mov    esi,DWORD PTR [ebp-0x4]
  4055bb:	xor    esi,ebx
  4055bd:	and    DWORD PTR ds:0x42d018,0x0
  4055c7:	jmp    0x4055d9
  4055cc:	mov    ecx,DWORD PTR ds:0x42d018
  4055d2:	inc    ecx
  4055d3:	mov    DWORD PTR ds:0x42d018,ecx
  4055d9:	cmp    DWORD PTR ds:0x42d018,0x10
  4055e0:	jae    0x405636
  4055e6:	cmp    DWORD PTR ds:0x42d018,0x9
  4055ed:	jne    0x405608
  4055f3:	push   0x42e14e
  4055f8:	push   DWORD PTR [ebp-0x10]
  4055fb:	push   0x1
  4055fd:	push   0x8e12
  405602:	call   DWORD PTR ds:0x42ed61
  405608:	cmp    DWORD PTR ds:0x42d018,0x8
  40560f:	jne    0x405624
  405615:	xor    ecx,ecx
  405617:	xor    ecx,DWORD PTR ds:0x42d018
  40561d:	inc    ecx
  40561e:	mov    DWORD PTR ds:0x42d018,ecx
  405624:	jmp    0x4055cc
  405629:	movzx  ecx,BYTE PTR ds:0x42d010
  405630:	and    DWORD PTR ds:0x429014,ecx
  405636:	add    esi,eax
  405638:	xor    ecx,0x7f80
  40563e:	mov    ecx,DWORD PTR [ebp-0x24]
  405641:	sub    ecx,eax
  405643:	sub    DWORD PTR ds:0x42b010,0x42d018
  40564d:	lea    edx,[esi-0x3272de]
  405653:	adc    DWORD PTR ds:0x42c010,0x429018
  40565d:	xor    ecx,ebx
  40565f:	xor    edx,ebx
  405661:	cmp    edx,ecx
  405663:	mov    DWORD PTR ds:0x42a01c,0x644e
  40566d:	je     0x40584a
  405673:	mov    ecx,DWORD PTR [ebp-0x4]
  405676:	or     DWORD PTR ds:0x429004,0x58dd
  405680:	xor    ecx,ebx
  405682:	add    ecx,eax
  405684:	mov    DWORD PTR ds:0x42a014,0x2056
  40568e:	cmp    esi,ecx
  405690:	mov    DWORD PTR ds:0x42d01c,0x3298
  40569a:	jne    0x405827
  4056a0:	push   DWORD PTR [ebp+0x8]
  4056a3:	call   0x405138
  4056a8:	mov    DWORD PTR ds:0x42901c,0x1db4
  4056b2:	mov    DWORD PTR [ebp-0x18],eax
  4056b5:	xor    edi,edi
  4056b7:	xor    edi,DWORD PTR ds:0x42a004
  4056bd:	and    DWORD PTR ds:0x42d018,edi
  4056c3:	mov    eax,DWORD PTR [ebp-0x4]
  4056c6:	sbb    DWORD PTR ds:0x42a018,0x66a3
  4056d0:	mov    ecx,DWORD PTR [ebp-0x18]
  4056d3:	adc    DWORD PTR ds:0x42b010,ecx
  4056d9:	xor    eax,ebx
  4056db:	mov    edi,0x3272de
  4056e0:	sub    DWORD PTR ds:0x42d01c,0x42d010
  4056ea:	add    eax,edi
  4056ec:	mov    DWORD PTR ds:0x429014,0x47bf
  4056f6:	cmp    ecx,eax
  4056f8:	mov    DWORD PTR ds:0x42d008,0x237d
  405702:	je     0x4058ba
  405708:	add    DWORD PTR ds:0x42a018,0x42c000
  405712:	push   DWORD PTR [ebp-0x18]
  405715:	push   DWORD PTR [ebp+0x8]
  405718:	call   0x40aa37
  40571d:	adc    ecx,DWORD PTR ds:0x42c010
  405723:	mov    DWORD PTR [ebp-0x18],eax
  405726:	mov    eax,DWORD PTR [ebp-0x4]
  405729:	mov    ecx,DWORD PTR [ebp-0x18]
  40572c:	xor    eax,ebx
  40572e:	xor    DWORD PTR ds:0x429014,0x42d00c
  405738:	add    eax,edi
  40573a:	cmp    ecx,eax
  40573c:	je     0x4058ba
  405742:	sbb    ecx,DWORD PTR ds:0x429024
  405748:	mov    eax,DWORD PTR [ebp-0x18]
  40574b:	and    DWORD PTR ds:0x42b000,0x0
  405755:	mov    ecx,DWORD PTR ds:0x42b000
  40575b:	inc    ecx
  40575c:	mov    DWORD PTR ds:0x42b000,ecx
  405762:	cmp    DWORD PTR ds:0x42b000,0x25
  405769:	jne    0x40577f
  40576f:	push   0x42c010
  405774:	push   0x70cc
  405779:	call   DWORD PTR ds:0x42ed65
  40577f:	cmp    DWORD PTR ds:0x42b000,0x1f
  405786:	jb     0x405755
  40578c:	and    DWORD PTR ds:0x42c008,0x0
  405796:	xor    ecx,ecx
  405798:	or     ecx,DWORD PTR ds:0x42c008
  40579e:	inc    ecx
  40579f:	mov    DWORD PTR ds:0x42c008,ecx
  4057a5:	cmp    DWORD PTR ds:0x42c008,0x1d
  4057ac:	jne    0x4057d0
  4057b2:	push   DWORD PTR [ebp-0x1c]
  4057b5:	push   0x42a01c
  4057ba:	push   DWORD PTR [ebp-0x14]
  4057bd:	push   0x42e143
  4057c2:	push   DWORD PTR [ebp-0xc]
  4057c5:	push   0x6f44
  4057ca:	call   DWORD PTR ds:0x42ed6d
  4057d0:	cmp    DWORD PTR ds:0x42c008,0x1a
  4057d7:	jb     0x405796
  4057dd:	mov    eax,DWORD PTR [eax+0x18]
  4057e0:	xor    ecx,ecx
  4057e2:	add    ecx,DWORD PTR ds:0x42c010
  4057e8:	and    ecx,DWORD PTR ds:0x429024
  4057ee:	mov    DWORD PTR ds:0x42c010,ecx
  4057f4:	mov    DWORD PTR [ebp-0x24],eax
  4057f7:	mov    eax,DWORD PTR [ebp-0x18]
  4057fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4057fd:	add    ecx,DWORD PTR [eax+0x20]
  405800:	adc    eax,0x666b
  405805:	mov    DWORD PTR [ebp-0x2c],ecx
  405808:	mov    eax,DWORD PTR [ebp-0x18]
  40580b:	mov    ecx,DWORD PTR [ebp+0x8]
  40580e:	add    ecx,DWORD PTR [eax+0x24]
  405811:	mov    DWORD PTR [ebp-0x34],ecx
  405814:	mov    eax,DWORD PTR [ebp-0x18]
  405817:	mov    ecx,DWORD PTR [ebp+0x8]
  40581a:	add    ecx,DWORD PTR [eax+0x1c]
  40581d:	mov    eax,edi
  40581f:	mov    DWORD PTR [ebp-0x18],ecx
  405822:	jmp    0x405882
  405827:	mov    ecx,DWORD PTR [ebp-0x2c]
  40582a:	mov    edx,DWORD PTR [ebp+0x8]
  40582d:	add    edx,DWORD PTR [ecx+esi*4]
  405830:	mov    DWORD PTR [ebp-0x28],edx
  405833:	mov    ecx,DWORD PTR [ebp-0x4]
  405836:	mov    edx,DWORD PTR [ebp-0x28]
  405839:	xor    ecx,ebx
  40583b:	add    ecx,eax
  40583d:	cmp    edx,ecx
  40583f:	je     0x405882
  405845:	jmp    0x40586e
  40584a:	mov    ecx,DWORD PTR [ebp-0x4]
  40584d:	mov    edx,DWORD PTR [ebp-0x8]
  405850:	xor    ecx,ebx
  405852:	add    ecx,eax
  405854:	cmp    edx,ecx
  405856:	je     0x4058c6
  40585c:	mov    ecx,DWORD PTR [ebp-0x4]
  40585f:	mov    edx,DWORD PTR [ebp-0x30]
  405862:	xor    ecx,ebx
  405864:	add    ecx,eax
  405866:	cmp    edx,ecx
  405868:	je     0x4058d5
  40586e:	lea    eax,[ebp-0x8]
  405871:	push   eax
  405872:	push   DWORD PTR [ebp-0x28]
  405875:	push   DWORD PTR [ebp+0xc]
  405878:	call   0x40ac7b
  40587d:	mov    eax,0x3272de
  405882:	mov    ecx,DWORD PTR [ebp-0x4]
  405885:	mov    edx,DWORD PTR [ebp-0x8]
  405888:	xor    ecx,ebx
  40588a:	add    ecx,eax
  40588c:	cmp    edx,ecx
  40588e:	je     0x4058a9
  405894:	mov    ecx,DWORD PTR [ebp-0x34]
  405897:	movzx  ecx,WORD PTR [ecx+esi*2]
  40589b:	mov    edx,DWORD PTR [ebp-0x18]
  40589e:	mov    ecx,DWORD PTR [edx+ecx*4]
  4058a1:	mov    DWORD PTR [ebp-0x38],ecx
  4058a4:	jmp    0x40584a
  4058a9:	mov    ecx,DWORD PTR [ebp-0x14]
  4058ac:	xor    ecx,ebx
  4058ae:	lea    esi,[esi+ecx*1+0x3272de]
  4058b5:	jmp    0x405638
  4058ba:	mov    eax,DWORD PTR [ebp-0x4]
  4058bd:	xor    eax,ebx
  4058bf:	add    eax,edi
  4058c1:	jmp    0x405a39
  4058c6:	mov    eax,DWORD PTR [ebp-0x4]
  4058c9:	xor    eax,ebx
  4058cb:	add    eax,0x3272de
  4058d0:	jmp    0x405a39
  4058d5:	mov    ecx,DWORD PTR [ebp-0x38]
  4058d8:	add    ecx,DWORD PTR [ebp+0x8]
  4058db:	mov    DWORD PTR [ebp-0x10],ecx
  4058de:	mov    ecx,DWORD PTR [ebp-0x1c]
  4058e1:	test   ecx,ecx
  4058e3:	je     0x4059c4
  4058e9:	mov    DWORD PTR [ebp-0x20],0x0
  4058f0:	push   0x3
  4058f2:	xor    edx,edx
  4058f4:	pop    edx
  4058f5:	add    edx,0x8
  4058f8:	push   edx
  4058f9:	pop    ecx
  4058fa:	push   0x6
  4058fc:	dec    ecx
  4058fd:	pop    ebx
  4058fe:	dec    ebx
  4058ff:	xchg   ebx,ecx
  405901:	sub    ebx,ecx
  405903:	xchg   ebx,ecx
  405905:	dec    ecx
  405906:	mov    eax,DWORD PTR [ebp-0x1c]
  405909:	imul   eax,ecx
  40590c:	sub    esp,eax
  40590e:	mov    DWORD PTR [ebp-0x20],esp
  405911:	mov    eax,DWORD PTR [ebp-0x4]
  405914:	mov    ecx,0x7510897
  405919:	xor    eax,ecx
  40591b:	mov    edx,0x3272de
  405920:	add    eax,edx
  405922:	mov    DWORD PTR [ebp+0x8],eax
  405925:	mov    eax,DWORD PTR [ebp-0x14]
  405928:	xor    eax,ecx
  40592a:	add    eax,edx
  40592c:	mov    edx,DWORD PTR [ebp+0x14]
  40592f:	imul   eax,DWORD PTR [edx]
  405932:	mov    edx,DWORD PTR [ebp-0x4]
  405935:	xor    edx,ecx
  405937:	mov    ecx,DWORD PTR [ebp+0x8]
  40593a:	lea    ecx,[edx+ecx*1+0x3272de]
  405941:	cmp    ecx,eax
  405943:	je     0x4059ba
  405949:	mov    edi,DWORD PTR [ebp-0x14]
  40594c:	mov    eax,DWORD PTR [ebp+0x8]
  40594f:	mov    edx,DWORD PTR [ebp+0x14]
  405952:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  405956:	mov    ecx,0x7510897
  40595b:	xor    edx,edx
  40595d:	xor    edi,ecx
  40595f:	mov    esi,0x3272de
  405964:	add    edi,esi
  405966:	div    edi
  405968:	mov    edx,DWORD PTR [ebp-0x4]
  40596b:	xor    edx,ecx
  40596d:	lea    eax,[edx+eax*1+0x3272de]
  405974:	mov    edx,DWORD PTR [ebp+0x8]
  405977:	mov    edi,DWORD PTR [ebp-0x20]
  40597a:	mov    DWORD PTR [edi+edx*4],eax
  40597d:	mov    eax,DWORD PTR [ebp-0x14]
  405980:	mov    edx,DWORD PTR [ebp+0x8]
  405983:	xor    eax,ecx
  405985:	lea    eax,[eax+edx*1+0x3272de]
  40598c:	mov    DWORD PTR [ebp+0x8],eax
  40598f:	mov    eax,DWORD PTR [ebp-0x14]
  405992:	mov    edx,DWORD PTR [ebp+0x14]
  405995:	xor    eax,ecx
  405997:	add    eax,esi
  405999:	imul   eax,DWORD PTR [edx]
  40599c:	mov    edx,DWORD PTR [ebp-0x4]
  40599f:	xor    edx,ecx
  4059a1:	mov    ecx,DWORD PTR [ebp+0x8]
  4059a4:	lea    ecx,[edx+ecx*1+0x3272de]
  4059ab:	cmp    ecx,eax
  4059ad:	jne    0x405949
  4059b3:	mov    eax,esi
  4059b5:	jmp    0x4059bf
  4059ba:	mov    eax,0x3272de
  4059bf:	mov    ebx,0x7510897
  4059c4:	mov    ecx,DWORD PTR [ebp-0x4]
  4059c7:	xor    ecx,ebx
  4059c9:	add    ecx,eax
  4059cb:	mov    DWORD PTR [ebp-0xc],ecx
  4059ce:	mov    ebx,0x65655
  4059d3:	add    ebx,0x3234
  4059d9:	xchg   ebx,esi
  4059db:	xor    ebx,ebx
  4059dd:	push   esi
  4059de:	mov    esi,ebx
  4059e0:	pop    ebx
  4059e1:	mov    edx,esi
  4059e3:	add    ebx,0x1002
  4059e9:	lea    eax,[ebp-0x10]
  4059ec:	add    edx,eax
  4059ee:	add    edx,0x5
  4059f1:	push   edx
  4059f2:	inc    esi
  4059f3:	pop    ecx
  4059f4:	dec    ecx
  4059f5:	xchg   ecx,eax
  4059f6:	dec    eax
  4059f7:	xchg   ecx,eax
  4059f8:	dec    ecx
  4059f9:	xchg   ecx,edx
  4059fb:	dec    edx
  4059fc:	push   edx
  4059fd:	mov    edx,ebx
  4059ff:	pop    ebx
  405a00:	dec    ebx
  405a01:	call   DWORD PTR [ebx]
  405a03:	cmp    DWORD PTR [ebp+0x10],esi
  405a06:	je     0x405a25
  405a0c:	xchg   edx,eax
  405a0d:	push   0xb
  405a0f:	pop    ecx
  405a10:	push   0x4
  405a12:	pop    ebx
  405a13:	inc    ebx
  405a14:	xchg   ebx,ecx
  405a16:	sub    ebx,ecx
  405a18:	xchg   ebx,ecx
  405a1a:	dec    ecx
  405a1b:	dec    ecx
  405a1c:	mov    eax,DWORD PTR [ebp-0x1c]
  405a1f:	imul   eax,ecx
  405a22:	add    esp,eax
  405a24:	xchg   edx,eax
  405a25:	push   eax
  405a26:	xor    ebx,ebx
  405a28:	mov    edx,esp
  405a2a:	dec    edx
  405a2b:	inc    ebx
  405a2c:	add    ebx,DWORD PTR [edx+ebx*1]
  405a2f:	dec    ebx
  405a30:	xor    edx,edx
  405a32:	add    DWORD PTR [ebp-0xc],ebx
  405a35:	pop    ebx
  405a36:	mov    eax,DWORD PTR [ebp-0xc]
  405a39:	pop    edi
  405a3a:	pop    esi
  405a3b:	pop    ebx
  405a3c:	leave  
  405a3d:	ret    0x10
  405a40:	push   ebp
  405a41:	mov    ebp,esp
  405a43:	sub    esp,0x7c
  405a46:	mov    DWORD PTR ds:0x42c018,0x1a
  405a50:	cmp    DWORD PTR ds:0x42c018,0x0
  405a57:	je     0x405a9c
  405a5d:	cmp    DWORD PTR ds:0x42c018,0xd
  405a64:	jne    0x405a70
  405a6a:	call   DWORD PTR ds:0x42ed71
  405a70:	cmp    DWORD PTR ds:0x42c018,0xe
  405a77:	jne    0x405a8a
  405a7d:	mov    ecx,DWORD PTR ds:0x42c018
  405a83:	dec    ecx
  405a84:	mov    DWORD PTR ds:0x42c018,ecx
  405a8a:	mov    ecx,DWORD PTR ds:0x42c018
  405a90:	dec    ecx
  405a91:	mov    DWORD PTR ds:0x42c018,ecx
  405a97:	jmp    0x405a50
  405a9c:	push   esi
  405a9d:	and    DWORD PTR ds:0x42901c,0x0
  405aa7:	mov    eax,ds:0x42901c
  405aac:	inc    eax
  405aad:	mov    ds:0x42901c,eax
  405ab2:	cmp    DWORD PTR ds:0x42901c,0x13
  405ab9:	jne    0x405aca
  405abf:	push   0x42b018
  405ac4:	call   DWORD PTR ds:0x42ed75
  405aca:	cmp    DWORD PTR ds:0x42901c,0x10
  405ad1:	jb     0x405aa7
  405ad7:	push   edi
  405ad8:	and    DWORD PTR ds:0x42d004,0x0
  405ae2:	mov    esi,DWORD PTR ds:0x42d004
  405ae8:	inc    esi
  405ae9:	mov    DWORD PTR ds:0x42d004,esi
  405aef:	cmp    DWORD PTR ds:0x42d004,0xc
  405af6:	jne    0x405b0c
  405afc:	push   0x476e
  405b01:	push   0x899a
  405b06:	call   DWORD PTR ds:0x42ed35
  405b0c:	cmp    DWORD PTR ds:0x42d004,0xb
  405b13:	jne    0x405b26
  405b19:	mov    esi,DWORD PTR ds:0x42d004
  405b1f:	inc    esi
  405b20:	mov    DWORD PTR ds:0x42d004,esi
  405b26:	cmp    DWORD PTR ds:0x42d004,0x14
  405b2d:	jb     0x405ae2
  405b33:	and    esi,0x6b28
  405b39:	mov    eax,ds:0x42e435
  405b3e:	mov    DWORD PTR [ebp-0x24],eax
  405b41:	sbb    DWORD PTR ds:0x42a01c,ecx
  405b47:	mov    eax,ds:0x42e541
  405b4c:	mov    DWORD PTR [ebp-0x34],eax
  405b4f:	and    DWORD PTR [ebp-0x30],0x0
  405b53:	xor    eax,0x7905
  405b58:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  405b5f:	mov    DWORD PTR [ebp-0x28],0xf89c85b4
  405b66:	dec    esi
  405b67:	mov    eax,DWORD PTR [ebp-0x10]
  405b6a:	mov    ecx,DWORD PTR [ebp-0x10]
  405b6d:	and    DWORD PTR ds:0x42b010,0x0
  405b77:	jmp    0x405b89
  405b7c:	mov    esi,DWORD PTR ds:0x42b010
  405b82:	inc    esi
  405b83:	mov    DWORD PTR ds:0x42b010,esi
  405b89:	cmp    DWORD PTR ds:0x42b010,0x11
  405b90:	jae    0x405bbb
  405b96:	cmp    DWORD PTR ds:0x42b010,0x1a
  405b9d:	jne    0x405bb4
  405ba3:	push   DWORD PTR [ebp-0x24]
  405ba6:	push   0x42901c
  405bab:	push   DWORD PTR [ebp-0x1c]
  405bae:	call   DWORD PTR ds:0x42ed39
  405bb4:	jmp    0x405b7c
  405bb9:	add    edi,esi
  405bbb:	sub    eax,ecx
  405bbd:	mov    DWORD PTR [ebp-0x10],eax
  405bc0:	xor    ecx,ecx
  405bc2:	or     ecx,DWORD PTR ds:0x429008
  405bc8:	sub    DWORD PTR ds:0x429028,ecx
  405bce:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  405bd5:	xor    ecx,edi
  405bd7:	mov    eax,DWORD PTR [ebp-0x18]
  405bda:	mov    DWORD PTR ds:0x42d00c,0x18
  405be4:	cmp    DWORD PTR ds:0x42d00c,0x0
  405beb:	je     0x405c20
  405bf1:	cmp    DWORD PTR ds:0x42d00c,0x19
  405bf8:	jne    0x405c0e
  405bfe:	push   0x42e044
  405c03:	push   0x42e143
  405c08:	call   DWORD PTR ds:0x42ed3d
  405c0e:	mov    ecx,DWORD PTR ds:0x42d00c
  405c14:	dec    ecx
  405c15:	mov    DWORD PTR ds:0x42d00c,ecx
  405c1b:	jmp    0x405be4
  405c20:	mov    ecx,DWORD PTR [ebp-0x18]
  405c23:	sub    eax,ecx
  405c25:	sbb    DWORD PTR ds:0x429014,ebx
  405c2b:	mov    DWORD PTR [ebp-0x18],eax
  405c2e:	mov    DWORD PTR ds:0x42900c,0x1b
  405c38:	cmp    DWORD PTR ds:0x42900c,0x0
  405c3f:	je     0x405c8d
  405c45:	cmp    DWORD PTR ds:0x42900c,0x6
  405c4c:	jne    0x405c61
  405c52:	push   DWORD PTR [ebp-0x14]
  405c55:	push   DWORD PTR [ebp-0x18]
  405c58:	push   DWORD PTR [ebp-0x18]
  405c5b:	call   DWORD PTR ds:0x42ed41
  405c61:	cmp    DWORD PTR ds:0x42900c,0x7
  405c68:	jne    0x405c7b
  405c6e:	mov    ecx,DWORD PTR ds:0x42900c
  405c74:	dec    ecx
  405c75:	mov    DWORD PTR ds:0x42900c,ecx
  405c7b:	mov    ecx,DWORD PTR ds:0x42900c
  405c81:	dec    ecx
  405c82:	mov    DWORD PTR ds:0x42900c,ecx
  405c88:	jmp    0x405c38
  405c8d:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  405c94:	and    DWORD PTR ds:0x42a010,0x0
  405c9e:	jmp    0x405cb2
  405ca3:	xor    ecx,ecx
  405ca5:	or     ecx,DWORD PTR ds:0x42a010
  405cab:	inc    ecx
  405cac:	mov    DWORD PTR ds:0x42a010,ecx
  405cb2:	cmp    DWORD PTR ds:0x42a010,0x1c
  405cb9:	jae    0x405ce4
  405cbf:	cmp    DWORD PTR ds:0x42a010,0x24
  405cc6:	jne    0x405cdf
  405ccc:	push   DWORD PTR [ebp-0xc]
  405ccf:	push   0x429020
  405cd4:	push   0x5eed
  405cd9:	call   DWORD PTR ds:0x42ed45
  405cdf:	jmp    0x405ca3
  405ce4:	mov    eax,DWORD PTR [ebp-0xc]
  405ce7:	mov    ecx,DWORD PTR [ebp-0xc]
  405cea:	sub    eax,ecx
  405cec:	mov    DWORD PTR [ebp-0xc],eax
  405cef:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  405cf6:	jmp    0x40804a
  405cfb:	pop    ebp
  405cfc:	sbb    dl,0x8b
  405cff:	fwait
  405d00:	jnp    0x405d0f
  405d02:	mov    al,BYTE PTR [edx+0x49]
  405d05:	scas   al,BYTE PTR es:[edi]
  405d06:	xor    eax,0x63048c62
  405d0b:	dec    ecx
  405d0c:	pop    edi
  405d0d:	js     0x405d87
  405d0f:	xor    ebx,DWORD PTR [edi+0x78]
  405d12:	js     0x405d43
  405d14:	mov    esi,0x8125a61f
  405d19:	xor    DWORD PTR [edx],esp
  405d1b:	cmp    ch,ah
  405d1d:	cwde   
  405d1e:	jno    0x405d05
  405d20:	adc    BYTE PTR ds:[ecx+0x75b4fa22],ch
  405d27:	aad    0x96
  405d29:	push   ebp
  405d2a:	jae    0x405d07
  405d2c:	daa    
  405d2d:	xchg   ebp,eax
  405d2e:	pop    esi
  405d2f:	fidivr DWORD PTR [esi*4-0x49ba79fb]
  405d36:	mov    bh,0xe9
  405d38:	loopne 0x405d81
  405d3a:	lods   eax,DWORD PTR ds:[esi]
  405d3b:	jns    0x405d50
  405d3d:	pop    esp
  405d3e:	jo     0x405cdb
  405d40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d41:	(bad)  
  405d43:	test   ecx,0xafc40b7e
  405d49:	pop    esp
  405d4a:	test   DWORD PTR [edi],esi
  405d4c:	adc    DWORD PTR [ebp+ecx*4-0x4f],0xc195d1f4
  405d54:	dec    ecx
  405d55:	pop    ss
  405d56:	xlat   BYTE PTR ds:[ebx]
  405d57:	shl    BYTE PTR [eax-0x532314e5],1
  405d5d:	push   cs
  405d5e:	jmp    0xf43ba734
  405d63:	add    edi,edx
  405d65:	sahf   
  405d66:	adc    edi,DWORD PTR [ebp+0x5e59bc3c]
  405d6c:	and    ah,ah
  405d6e:	push   ds
  405d6f:	adc    al,0x59
  405d71:	jnp    0x405d44
  405d73:	push   ebx
  405d74:	add    eax,0x6e301696
  405d79:	xchg   edx,eax
  405d7a:	mov    al,ds:0x90e1077a
  405d7f:	jae    0x405d66
  405d81:	cwde   
  405d82:	add    DWORD PTR [edx+0x75],0xb2277416
  405d89:	cmp    BYTE PTR [esi-0x56],ch
  405d8c:	mov    ds:0x41abe826,al
  405d91:	(bad)
  405d94:	jno    0x405d43
  405d96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d97:	inc    edx
  405d98:	loop   0x405d8b
  405d9a:	nop
  405d9b:	in     al,0x9a
  405d9d:	iret   
  405d9e:	pop    ds
  405d9f:	sub    BYTE PTR [ebp-0x2f],ch
  405da2:	cmp    ebp,ecx
  405da4:	dec    esi
  405da5:	sahf   
  405da6:	(bad)  [ebx-0x1607e496]
  405dac:	sbb    BYTE PTR [edx],dl
  405dae:	mov    bl,0xec
  405db0:	xor    bh,bh
  405db2:	shr    BYTE PTR [edx+eax*2-0x2d18183f],cl
  405db9:	inc    edi
  405dba:	repnz dec eax
  405dbc:	test   eax,ebp
  405dbe:	sbb    dl,bl
  405dc0:	fs in  al,0xaa
  405dc3:	mov    esp,0x8110430e
  405dc8:	cmp    esi,DWORD PTR [esi+edi*4]
  405dcb:	mov    BYTE PTR [ebx-0x2db049c0],dh
  405dd1:	hlt    
  405dd2:	stos   DWORD PTR es:[edi],eax
  405dd3:	pop    ss
  405dd4:	stos   DWORD PTR es:[edi],eax
  405dd5:	or     BYTE PTR [eax-0x12],dh
  405dd8:	ds in  al,0x57
  405ddb:	or     al,0x9e
  405ddd:	mov    ds:0x28d9dce1,al
  405de2:	xor    al,0xdb
  405de4:	cmp    dl,al
  405de6:	je     0x405e30
  405de8:	(bad)  
  405deb:	fisubr WORD PTR [edx]
  405ded:	imul   esi,DWORD PTR [eax],0xb75d38c2
  405df3:	jne    0x405e34
  405df5:	aaa    
  405df6:	test   dh,bl
  405df8:	psubw  mm1,QWORD PTR ss:[esi+0x6a]
  405dfd:	stc    
  405dfe:	jmp    0x6d95:0x8ce5933b
  405e05:	sub    eax,0x37d882f6
  405e0a:	mov    eax,0xc8fcce8
  405e0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e10:	xchg   edi,eax
  405e11:	dec    eax
  405e12:	jae    0x405e17
  405e14:	pop    ebx
  405e15:	sbb    DWORD PTR [esi+edi*2-0x44],ecx
  405e19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e1a:	inc    esp
  405e1b:	push   0xdf6c8054
  405e20:	repz pop edi
  405e22:	ins    BYTE PTR es:[edi],dx
  405e23:	and    esp,DWORD PTR [ebx]
  405e25:	imul   ecx,DWORD PTR [eax-0x47d56675],0x9d602ec4
  405e2f:	add    ebp,DWORD PTR [edx]
  405e31:	mov    edi,0x6d64d930
  405e36:	mov    DWORD PTR ds:0x23656830,edi
  405e3c:	sbb    ah,BYTE PTR [edx+0x41d51921]
  405e42:	gs xor bh,bh
  405e45:	xor    ebx,DWORD PTR [eax-0x57]
  405e48:	mov    esp,0x96d7aa20
  405e4d:	inc    edx
  405e4e:	pop    edx
  405e4f:	xor    cl,al
  405e51:	xlat   BYTE PTR ds:[ebx]
  405e52:	sub    edx,DWORD PTR [edx+0x1076e2be]
  405e58:	ja     0x405eaf
  405e5a:	mov    al,ds:0x1536b21b
  405e5f:	dec    ecx
  405e60:	jo     0x405e8e
  405e62:	pop    esp
  405e63:	jns    0x405e18
  405e65:	jge    0x405ded
  405e67:	iret   
  405e68:	sbb    dh,ch
  405e6a:	pop    edi
  405e6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e6c:	and    BYTE PTR [edi],bh
  405e6e:	pop    edi
  405e6f:	jnp    0x405e42
  405e71:	repz popa 
  405e73:	and    bh,BYTE PTR [ecx-0x7f3a949c]
  405e79:	cmc    
  405e7a:	fisub  DWORD PTR [ebx-0x6b8a06be]
  405e80:	pushf  
  405e81:	add    cl,BYTE PTR [esi+ebp*8]
  405e84:	std    
  405e85:	mov    BYTE PTR ds:0xfd18bfe1,ch
  405e8b:	ret    
  405e8c:	push   ebp
  405e8d:	jmp    0x28a4:0x7467b387
  405e94:	jmp    0x405e55
  405e96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e97:	test   BYTE PTR [ecx-0x482edf1b],al
  405e9d:	ja     0x405e34
  405e9f:	pop    es
  405ea0:	xchg   esi,eax
  405ea1:	ss xchg esi,eax
  405ea3:	cwde   
  405ea4:	add    al,0xd6
  405ea6:	sub    BYTE PTR [ebx],dl
  405ea8:	outs   dx,DWORD PTR ds:[esi]
  405ea9:	and    BYTE PTR [ecx],bl
  405eab:	adc    DWORD PTR [edx-0x3647852e],ebx
  405eb1:	add    ebx,0x5650acab
  405eb7:	mov    DWORD PTR [ebp+0x17],ecx
  405eba:	pop    edx
  405ebb:	mov    bl,0x34
  405ebd:	sti    
  405ebe:	inc    esi
  405ebf:	ds adc eax,0xbc683302
  405ec5:	jo     0x405e92
  405ec7:	ret    
  405ec8:	pop    ebp
  405ec9:	icebp  
  405eca:	sub    eax,0x8175cdee
  405ecf:	cmp    al,0xf7
  405ed1:	imul   esi,DWORD PTR [esi+0x1960cf5],0xffffffeb
  405ed8:	popf   
  405ed9:	imul   eax,DWORD PTR [ecx-0x6e96817d],0xc15805cd
  405ee3:	add    dl,bl
  405ee5:	and    DWORD PTR [esi-0x44cb06],ebx
  405eeb:	lock data16 (bad) 
  405eee:	aad    0x9d
  405ef0:	xchg   eax,esi
  405ef2:	inc    edx
  405ef3:	bound  edx,QWORD PTR [esi-0x6c321c58]
  405ef9:	sub    cl,bh
  405efb:	mov    eax,ds:0xf234f472
  405f00:	jp     0x405f20
  405f02:	mov    bl,0x52
  405f04:	pop    esp
  405f05:	test   eax,0x508ec2ad
  405f0a:	mov    ah,0x9f
  405f0c:	cld    
  405f0d:	mov    al,ds:0xd5aa64b
  405f12:	(bad)  [edi-0x43]
  405f15:	xor    al,0xf3
  405f17:	or     BYTE PTR [edx+esi*4],dl
  405f1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f1b:	imul   ecx,esi,0x6c27f13
  405f21:	pop    ebp
  405f22:	test   BYTE PTR [edx+0x63],ah
  405f25:	ins    DWORD PTR es:[edi],dx
  405f26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f27:	dec    ebp
  405f28:	pusha  
  405f29:	ret    
  405f2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f2b:	cmp    eax,0x16093615
  405f30:	pop    ebp
  405f31:	dec    edx
  405f32:	inc    ebx
  405f33:	or     ecx,DWORD PTR [ecx+0x77]
  405f36:	mov    WORD PTR [ebx+0x18],fs
  405f39:	(bad)  
  405f3b:	pop    DWORD PTR [ecx+0x35]
  405f3e:	sbb    eax,0xca362d49
  405f43:	jmp    0xe3dec0f9
  405f48:	add    eax,DWORD PTR [edi+edi*8+0x1ca2390b]
  405f4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f50:	dec    ecx
  405f51:	push   edi
  405f52:	push   edx
  405f53:	cmp    esp,DWORD PTR [edi]
  405f55:	xor    bl,BYTE PTR [edx+0x35]
  405f58:	sbb    eax,DWORD PTR ds:0xa5fa961d
  405f5e:	push   esi
  405f5f:	sub    cl,ch
  405f61:	sbb    al,0xf8
  405f63:	pusha  
  405f64:	jae    0x405f70
  405f66:	shl    BYTE PTR [eax],cl
  405f68:	jbe    0x405f4b
  405f6a:	fidiv  WORD PTR [ecx-0x341ccd9]
  405f70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f71:	or     ebx,DWORD PTR [ecx+0x3cf167ad]
  405f77:	mov    al,ds:0xb112406b
  405f7c:	and    BYTE PTR [ebp+0x37527870],bl
  405f82:	push   ds
  405f83:	xchg   ebp,eax
  405f84:	xor    al,0x97
  405f86:	or     BYTE PTR [edx],ah
  405f88:	ja     0x405fef
  405f8a:	addr16 loopne 0x406004
  405f8d:	cmp    edi,DWORD PTR [ebx]
  405f8f:	mov    WORD PTR [edx],gs
  405f91:	jle    0x405f23
  405f93:	mov    ah,0x7a
  405f95:	std    
  405f96:	fistp  WORD PTR [ebx-0x43]
  405f99:	fwait
  405f9a:	stos   BYTE PTR es:[edi],al
  405f9b:	repz pushf 
  405f9d:	psubusw mm0,QWORD PTR [edi+0x47f61bf5]
  405fa4:	je     0x405f6d
  405fa6:	loop   0x405f35
  405fa8:	retf   0xf027
  405fab:	cld    
  405fac:	mov    bl,0x71
  405fae:	je     0x405fe0
  405fb0:	pushf  
  405fb1:	int    0x33
  405fb3:	stos   DWORD PTR es:[edi],eax
  405fb4:	pop    esp
  405fb5:	mov    al,0x56
  405fb7:	sub    bl,BYTE PTR [ebp+eax*8+0x1b925831]
  405fbe:	lock iret 
  405fc0:	fs pop esi
  405fc2:	ror    BYTE PTR [eax],0xa
  405fc5:	mov    ecx,0x5afc0788
  405fca:	xor    al,0xaa
  405fcc:	mov    BYTE PTR [eax+0x37],al
  405fcf:	xor    esp,DWORD PTR [eax]
  405fd1:	inc    ebp
  405fd2:	dec    ebp
  405fd3:	ret    
  405fd4:	sbb    bh,BYTE PTR [edx-0x7b]
  405fd7:	int3   
  405fd8:	icebp  
  405fd9:	pop    edx
  405fda:	dec    ebx
  405fdb:	jecxz  0x405f80
  405fdd:	sahf   
  405fde:	cmp    cl,BYTE PTR [edx+0x2]
  405fe1:	sbb    ebp,DWORD PTR es:[ecx+0x27]
  405fe5:	inc    ebp
  405fe6:	sub    ah,bh
  405fe8:	iret   
  405fe9:	jb     0x405ff7
  405feb:	and    cl,al
  405fed:	cmp    eax,0x1e76321b
  405ff2:	dec    ebp
  405ff3:	(bad)  
  405ff4:	inc    edx
  405ff5:	xor    al,0xe6
  405ff7:	std    
  405ff8:	push   edx
  405ff9:	shl    BYTE PTR [edx-0x47],1
  405ffc:	pushf  
  405ffd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ffe:	mov    BYTE PTR [ecx],bl
  406000:	jge    0x406026
  406002:	stos   DWORD PTR es:[edi],eax
  406003:	js     0x405fcf
  406005:	inc    edi
  406006:	xchg   edx,eax
  406007:	popa   
  406008:	push   ss
  406009:	xor    al,0x71
  40600b:	aad    0xe5
  40600d:	(bad)  
  40600e:	test   al,0xa9
  406010:	adc    BYTE PTR [edx],ch
  406012:	loop   0x405f99
  406014:	jle    0x405fe0
  406016:	and    edi,ebx
  406018:	mov    dh,BYTE PTR [ebx]
  40601a:	sub    bl,BYTE PTR [edi]
  40601c:	jns    0x406011
  40601e:	iret   
  40601f:	ds jb  0x40605c
  406022:	jmp    0xe953:0xf0a69c66
  406029:	fdivp  st(3),st
  40602b:	jmp    0x13f8:0xdf5bbd30
  406032:	pop    ss
  406033:	cmp    bl,bh
  406035:	(bad)  
  406036:	mov    bl,BYTE PTR [ebx-0x12]
  406039:	std    
  40603a:	xor    al,0xd8
  40603c:	add    DWORD PTR [edi+0x785acd4a],edi
  406042:	sbb    al,dh
  406044:	mov    bl,0x8b
  406046:	pop    esi
  406047:	mov    al,0x31
  406049:	push   es
  40604a:	push   ebx
  40604b:	std    
  40604c:	mov    dl,0xcb
  40604e:	cli    
  40604f:	bound  ebx,QWORD PTR [eax+eax*8+0x70e17834]
  406056:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406057:	inc    ecx
  406058:	ss mov al,ds:0x147c0203
  40605f:	std    
  406060:	adc    al,0xbe
  406062:	rcl    BYTE PTR [ebx+0x53],cl
  406065:	jns    0x405fff
  406067:	jp     0x406095
  406069:	test   eax,0x1d5b1b28
  40606e:	xor    al,0x53
  406070:	and    eax,ebx
  406072:	mov    DWORD PTR [edx],ebp
  406074:	push   ss
  406075:	cs xchg ebp,eax
  406077:	fistp  DWORD PTR [eax]
  406079:	popa   
  40607a:	sub    DWORD PTR [edx],ebx
  40607c:	(bad)  
  40607e:	lods   eax,DWORD PTR ds:[esi]
  40607f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406080:	in     al,dx
  406081:	xchg   esp,eax
  406082:	shl    ah,0xc
  406085:	dec    esi
  406086:	adc    BYTE PTR [ebx-0x5ccce34f],cl
  40608c:	(bad)  
  40608e:	jns    0x4060c4
  406090:	data16 cli 
  406092:	xor    ebp,ecx
  406094:	(bad)  
  406095:	xchg   ebx,eax
  406096:	add    eax,0x943773a6
  40609b:	or     al,0xc8
  40609d:	jae    0x4060b6
  40609f:	push   esp
  4060a0:	stos   BYTE PTR es:[edi],al
  4060a1:	sub    DWORD PTR [ecx-0x1cad1a48],esp
  4060a7:	mov    dl,0x47
  4060a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060aa:	nop
  4060ab:	sbb    DWORD PTR [ebp-0x62],0xffffffa4
  4060af:	fwait
  4060b0:	sahf   
  4060b1:	(bad)  
  4060b2:	cs das 
  4060b4:	sub    BYTE PTR [ebx-0x4],bh
  4060b7:	sub    dl,BYTE PTR [esi]
  4060b9:	cld    
  4060ba:	outs   dx,DWORD PTR ds:[esi]
  4060bb:	cs xchg edi,eax
  4060bd:	rcr    BYTE PTR [eax],1
  4060bf:	ds sbb eax,0x492c9111
  4060c5:	cmp    DWORD PTR [esi],ebx
  4060c7:	popf   
  4060c8:	jmp    0xfddc:0xb7d8d1fb
  4060cf:	das    
  4060d0:	popa   
  4060d1:	nop
  4060d2:	arpl   WORD PTR [ebx+eiz*8+0xe],cx
  4060d6:	jnp    0x40607a
  4060d8:	pop    edi
  4060d9:	jecxz  0x40613e
  4060db:	mov    esp,DWORD PTR [esi-0x25513981]
  4060e1:	rol    dl,0xd2
  4060e4:	cmp    DWORD PTR [esi+edi*8-0x664f4526],edi
  4060eb:	popf   
  4060ec:	lock ror BYTE PTR [esi],1
  4060ef:	sbb    edi,DWORD PTR [ecx-0x3bebefc]
  4060f5:	jb     0x4060f6
  4060f7:	rcr    BYTE PTR [eax],1
  4060f9:	mov    al,0xdc
  4060fb:	ret    0x911f
  4060fe:	fdiv   st(0),st
  406100:	sar    DWORD PTR [edx+0x10],cl
  406103:	pop    ebx
  406104:	add    al,BYTE PTR [ecx-0x7cd2eec9]
  40610a:	mov    al,0x3
  40610c:	mov    edi,0xaf73f9a2
  406111:	jle    0x40615e
  406113:	xlat   BYTE PTR ds:[ebx]
  406114:	and    bl,ch
  406116:	mov    al,0x63
  406118:	xor    DWORD PTR [ecx],edi
  40611a:	or     BYTE PTR [ebx],ah
  40611c:	fwait
  40611d:	out    0x91,eax
  40611f:	dec    edi
  406120:	hlt    
  406121:	stc    
  406122:	fcomp  DWORD PTR [ebx+eiz*1-0x3aa65e34]
  406129:	dec    ebx
  40612a:	inc    eax
  40612b:	fimul  DWORD PTR [ebp+0x30]
  40612e:	mov    al,ds:0x72678514
  406133:	mov    edx,0x7011aaf6
  406138:	clc    
  406139:	dec    esp
  40613a:	ja     0x4061a1
  40613c:	ds xchg ebp,eax
  40613e:	std    
  40613f:	nop
  406140:	out    dx,al
  406141:	mov    ebx,0x527ced91
  406146:	xchg   edi,eax
  406147:	ror    edx,1
  406149:	ret    
  40614a:	aas    
  40614b:	xor    BYTE PTR [edx],dh
  40614d:	clc    
  40614e:	mov    WORD PTR [edi-0x42],ds
  406151:	mov    ss,WORD PTR [edx+0x15]
  406154:	loope  0x406149
  406156:	in     al,0xb1
  406158:	jge    0x40610f
  40615a:	dec    ebp
  40615b:	pop    ebp
  40615c:	or     BYTE PTR [eax+0x545578d3],0x24
  406163:	fild   QWORD PTR [esi]
  406165:	lods   eax,DWORD PTR ds:[si]
  406167:	jmp    0x406130
  406169:	jg     0x4060fe
  40616b:	jns    0x406161
  40616d:	outs   dx,DWORD PTR ds:[esi]
  40616e:	add    ebx,DWORD PTR ds:0xa2354cfc
  406174:	in     al,0x4a
  406176:	jg     0x406167
  406178:	aam    0xd0
  40617a:	out    0x28,al
  40617c:	add    al,0xbf
  40617e:	loope  0x4061d3
  406180:	lods   eax,DWORD PTR ds:[esi]
  406181:	mov    dh,0x1f
  406183:	adc    bl,dh
  406185:	pushf  
  406186:	popa   
  406187:	push   ecx
  406188:	dec    esi
  406189:	pop    ecx
  40618a:	arpl   WORD PTR [esi],cx
  40618c:	mov    dl,0xd2
  40618e:	les    esp,FWORD PTR [esi]
  406190:	xchg   edx,eax
  406191:	les    esp,FWORD PTR [ecx+0x19]
  406194:	dec    esp
  406195:	xchg   edx,esi
  406197:	pop    esi
  406198:	jne    0x4061c0
  40619a:	mov    edi,0xce0d2146
  40619f:	retf   0xccf7
  4061a2:	xor    ch,BYTE PTR [edi+ecx*4]
  4061a5:	sbb    esi,0x5
  4061a8:	ins    DWORD PTR es:[edi],dx
  4061a9:	icebp  
  4061aa:	sti    
  4061ab:	hlt    
  4061ac:	sbb    edi,DWORD PTR [edi+esi*1-0x70]
  4061b0:	push   edi
  4061b1:	jo     0x4061ca
  4061b3:	inc    edx
  4061b4:	(bad)  [edx-0x7cc213b0]
  4061ba:	dec    esp
  4061bb:	loopne 0x4061b2
  4061bd:	mul    BYTE PTR [esp+ecx*1]
  4061c0:	mul    BYTE PTR [ebp+0x79]
  4061c3:	inc    eax
  4061c4:	out    0xae,al
  4061c6:	mov    ebp,0x315050bd
  4061cb:	and    eax,ecx
  4061cd:	mov    ss,WORD PTR [ecx+0xfaa7034]
  4061d3:	es sbb cl,cl
  4061d6:	xchg   esi,eax
  4061d7:	mov    ebx,0x1dfb13c0
  4061dc:	lds    edi,FWORD PTR [ebp-0x34594ff2]
  4061e2:	in     al,dx
  4061e3:	push   esi
  4061e4:	pushf  
  4061e5:	repnz or ebx,0x41
  4061e9:	gs pop edx
  4061eb:	jmp    0x1e952eea
  4061f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061f1:	push   ebx
  4061f2:	(bad)  
  4061f3:	data16 aaa 
  4061f5:	dec    eax
  4061f6:	or     bh,BYTE PTR [ebp-0x2a]
  4061f9:	leave  
  4061fa:	jle    0x4061a5
  4061fc:	test   al,0x52
  4061fe:	mov    ds:0xd732a95b,al
  406203:	loop   0x4061a2
  406205:	adc    al,0x94
  406207:	(bad)  
  406209:	and    eax,0xdd3dd631
  40620e:	adc    esi,ebx
  406210:	xchg   ebp,eax
  406211:	xlat   BYTE PTR ds:[ebx]
  406212:	les    ecx,FWORD PTR [esi+0x6c]
  406215:	or     ebx,DWORD PTR [edi-0x4c]
  406218:	mov    bh,0x24
  40621a:	mov    esi,0x53d4f3ab
  40621f:	inc    ebx
  406220:	cli    
  406221:	xchg   ebx,eax
  406222:	out    0x13,al
  406224:	xlat   BYTE PTR ds:[ebx]
  406225:	call   0xc1b2:0x84671aa8
  40622c:	add    DWORD PTR [edi+0x5d],esi
  40622f:	stos   BYTE PTR es:[edi],al
  406230:	adc    BYTE PTR [ebx+0x4f],0xa0
  406234:	push   edx
  406235:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406236:	push   es
  406237:	mov    esi,0xeb9e8956
  40623c:	ss inc ecx
  40623e:	push   cs
  40623f:	aam    0xb6
  406241:	pop    esi
  406242:	sbb    eax,DWORD PTR [ecx]
  406244:	aad    0x55
  406246:	call   0xf3b1:0x578642e0
  40624d:	mov    eax,0x1f22ba8c
  406252:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406253:	pop    es
  406254:	cmp    eax,0xf2ec78a9
  406259:	inc    edi
  40625a:	jl     0x4061e0
  40625c:	jno    0x40624f
  40625e:	das    
  40625f:	clc    
  406260:	sub    al,0x3e
  406262:	fwait
  406263:	adc    dl,ch
  406265:	(bad)  
  406266:	and    al,cl
  406268:	das    
  406269:	dec    eax
  40626a:	imul   esi,ecx,0x27c6d712
  406270:	jnp    0x4062da
  406272:	mov    dh,0x48
  406274:	(bad)  
  406275:	in     al,0x1
  406277:	xor    cl,al
  406279:	jmp    0x5bf3:0xda709e64
  406280:	add    esi,DWORD PTR [ebp+0x2ce9fc31]
  406286:	leave  
  406287:	bound  edx,QWORD PTR [ebx-0x16c7c52d]
  40628d:	and    bl,dh
  40628f:	das    
  406290:	mov    edi,0xfe86903a
  406295:	xor    dl,ch
  406297:	mov    esi,0xba099cc1
  40629c:	sbb    eax,0xba791f04
  4062a1:	in     al,dx
  4062a2:	mov    edi,0x5498def8
  4062a7:	jmp    0x1077:0x9f1b36c0
  4062ae:	test   DWORD PTR [edx+edi*2-0x70],0x2630e974
  4062b6:	retf   0xaca
  4062b9:	pop    ss
  4062ba:	in     al,dx
  4062bb:	adc    esi,DWORD PTR [ebp-0x53]
  4062be:	jecxz  0x4062db
  4062c0:	inc    esi
  4062c1:	mov    BYTE PTR [edi-0x31b15ca4],bl
  4062c7:	ja     0x4062e8
  4062c9:	call   0xe09b1b04
  4062ce:	sub    bh,dl
  4062d0:	pop    es
  4062d1:	loop   0x406299
  4062d3:	xchg   esi,eax
  4062d4:	push   esp
  4062d5:	sub    bh,BYTE PTR [eax+esi*1-0x6b5853a2]
  4062dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062dd:	test   eax,0x5fd9b58e
  4062e2:	or     DWORD PTR [ecx],edx
  4062e4:	pop    edi
  4062e5:	stos   DWORD PTR es:[edi],eax
  4062e6:	shl    dl,cl
  4062e8:	repnz daa 
  4062ea:	fstp   QWORD PTR [esi+0x6f2d0b52]
  4062f0:	cmp    DWORD PTR [eax+ebp*8+0x0],esp
  4062f4:	xor    eax,ebx
  4062f6:	jl     0x40627d
  4062f8:	(bad)  
  4062f9:	fild   QWORD PTR [ecx-0xe96621d]
  4062ff:	and    DWORD PTR [edi],0xffffffdd
  406302:	mov    ah,0x9a
  406304:	mov    dh,0x2e
  406306:	(bad)  
  406307:	lea    ecx,ds:0xdc3d843d
  40630d:	stc    
  40630e:	std    
  40630f:	fwait
  406310:	cmp    eax,0x582836d6
  406315:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406316:	cmc    
  406317:	push   edi
  406318:	cmp    DWORD PTR [esi-0x36e07801],edi
  40631e:	loope  0x406361
  406320:	xchg   ebp,eax
  406321:	jmp    0x333e:0x60ec65c5
  406328:	sub    dl,ah
  40632a:	test   BYTE PTR [ebx-0x43da3e1b],0x66
  406331:	idiv   DWORD PTR [edx+edi*8+0x4699286b]
  406338:	xor    al,0x15
  40633a:	fistp  DWORD PTR [ecx+0x3d]
  40633d:	into   
  40633e:	outs   dx,DWORD PTR ds:[esi]
  40633f:	js     0x40638a
  406341:	mov    DWORD PTR [ecx+0x624367d4],ebx
  406347:	ja     0x40631d
  406349:	ja     0x40635a
  40634b:	test   eax,0x3d50dd37
  406350:	sbb    esp,0x21
  406353:	test   al,0x8f
  406355:	pusha  
  406356:	or     al,0x79
  406358:	in     al,dx
  406359:	call   0xef5eee24
  40635e:	cmp    eax,0xa23b49a8
  406363:	xchg   ebp,eax
  406364:	cli    
  406365:	xor    al,0xea
  406367:	or     al,0xc5
  406369:	jp     0x40631c
  40636b:	nop
  40636c:	out    0x72,eax
  40636e:	pop    esp
  40636f:	sbb    ecx,edx
  406371:	xor    DWORD PTR [esi],edx
  406373:	jns    0x406328
  406375:	shl    DWORD PTR ds:0x869c0974,0x35
  40637c:	fs inc ebp
  40637e:	int3   
  40637f:	push   edi
  406380:	pop    eax
  406381:	dec    ecx
  406382:	cmp    ecx,esp
  406384:	fstp   QWORD PTR [ebx+0x3a]
  406387:	pushf  
  406388:	cmp    eax,0x6eeab337
  40638d:	outs   dx,DWORD PTR ds:[esi]
  40638e:	or     ebp,eax
  406390:	popf   
  406391:	push   eax
  406392:	dec    edi
  406393:	add    BYTE PTR ds:0x34817f71,ah
  406399:	sub    eax,DWORD PTR [esp+edx*1-0x5f]
  40639d:	or     ecx,DWORD PTR [eax+0x6256ce6c]
  4063a3:	xor    ax,WORD PTR [ecx]
  4063a6:	mov    al,BYTE PTR [ecx+0x53126a96]
  4063ac:	jmp    0x406341
  4063ae:	int3   
  4063af:	sub    dh,0x59
  4063b2:	cmp    eax,0x50b3114b
  4063b7:	jbe    0x40641e
  4063b9:	add    bh,BYTE PTR [edi]
  4063bb:	or     al,0xa3
  4063bd:	jmp    0x4c51636d
  4063c2:	imul   ecx,DWORD PTR [edi+0x4f],0xffffff82
  4063c6:	hlt    
  4063c7:	maskmovq mm1,(bad)
  4063c8:	test   DWORD PTR [edi+ebp*1],0x6927b266
  4063cf:	fist   DWORD PTR [esi-0x784bd2b1]
  4063d5:	jns    0x406451
  4063d7:	pusha  
  4063d8:	in     eax,dx
  4063d9:	add    DWORD PTR [eax],esi
  4063db:	dec    eax
  4063dc:	jno    0x40637b
  4063de:	cmp    eax,0xde240123
  4063e3:	sub    al,0x8d
  4063e5:	enter  0x944e,0xb7
  4063e9:	sub    BYTE PTR ds:0x7e76ba1,bh
  4063ef:	jns    0x406432
  4063f1:	popa   
  4063f2:	int    0x48
  4063f4:	xor    eax,0x13d363ab
  4063f9:	mov    bl,0x2
  4063fb:	jnp    0x4063f1
  4063fd:	(bad)  
  4063fe:	into   
  4063ff:	mov    ds:0x99128491,eax
  406404:	in     al,dx
  406405:	(bad)  
  406406:	rol    DWORD PTR [edi+0x2a],1
  406409:	mov    bl,0x28
  40640b:	sahf   
  40640c:	mov    ds:0x266e4e0,al
  406411:	outs   dx,BYTE PTR ds:[esi]
  406412:	addr16 adc al,0x8c
  406415:	inc    edx
  406416:	(bad)  
  406417:	stc    
  406418:	loopne 0x40643b
  40641a:	xchg   esp,eax
  40641b:	dec    edx
  40641c:	jae    0x4063ac
  40641e:	jl     0x4063d0
  406420:	ds in  al,0x8d
  406423:	cmp    DWORD PTR [ecx+ebx*8],esp
  406426:	out    dx,eax
  406427:	pop    edi
  406428:	inc    ebp
  406429:	cmp    esp,DWORD PTR [esi+0x7f]
  40642c:	popf   
  40642d:	pusha  
  40642e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40642f:	jg     0x40640e
  406431:	xlat   BYTE PTR ds:[ebx]
  406432:	mov    eax,ds:0x5cec1994
  406437:	repnz pop esp
  406439:	dec    edx
  40643a:	mov    fs,ebx
  40643c:	add    al,0xbe
  40643e:	sbb    DWORD PTR [ebx+0x319a6ec5],edi
  406444:	(bad)  
  406445:	stos   BYTE PTR es:[edi],al
  406446:	xor    ebx,DWORD PTR [edi-0x5a]
  406449:	cld    
  40644a:	jecxz  0x40642c
  40644c:	xor    eax,DWORD PTR [ecx+0x30]
  40644f:	into   
  406450:	push   ss
  406451:	push   ebx
  406452:	pop    eax
  406453:	lock and BYTE PTR [esp+esi*1+0x2f],0xfd
  406459:	xchg   ebx,eax
  40645a:	pop    ds
  40645b:	add    al,0xb5
  40645d:	mov    ebp,0xa6ae5a2a
  406462:	dec    ebx
  406463:	sbb    ebp,eax
  406465:	sbb    cx,si
  406468:	dec    ebp
  406469:	mov    bl,0xaf
  40646b:	loope  0x4064c7
  40646d:	sub    edx,ebx
  40646f:	pop    es
  406470:	nop
  406471:	add    bl,BYTE PTR [eax+0x23108c03]
  406477:	or     ah,bl
  406479:	and    BYTE PTR [eax+edi*1+0x70],dh
  40647d:	(bad)  
  40647e:	ja     0x406491
  406480:	rcr    BYTE PTR [edi],0x2d
  406483:	ins    DWORD PTR es:[edi],dx
  406484:	mov    eax,0xecd63b7a
  406489:	in     eax,0x89
  40648b:	bound  edi,QWORD PTR [ebx-0x6e2666f7]
  406491:	ror    DWORD PTR [eax-0x17ac4b8d],cl
  406497:	xchg   esi,eax
  406498:	push   edx
  406499:	xlat   BYTE PTR ds:[ebx]
  40649a:	(bad)  [ecx]
  40649c:	leave  
  40649d:	fnstenv [ebx+0x376403c]
  4064a3:	mov    DWORD PTR [esi],eax
  4064a5:	dec    edi
  4064a6:	mov    esi,0xe653cc36
  4064ab:	jl     0x406492
  4064ad:	sub    BYTE PTR [ecx],0x1f
  4064b0:	sbb    DWORD PTR [esi],ebx
  4064b2:	cwde   
  4064b3:	xchg   ebp,eax
  4064b4:	lods   eax,DWORD PTR ds:[esi]
  4064b5:	push   ss
  4064b6:	rol    BYTE PTR [ebp-0x79],1
  4064b9:	data16 stc 
  4064bb:	imul   ebp,esp,0x6
  4064be:	aaa    
  4064bf:	mov    ds,WORD PTR [edi+0x4698c619]
  4064c5:	xor    BYTE PTR [edi],dl
  4064c7:	push   cs
  4064c8:	mov    ds:0xd96f26c2,al
  4064cd:	or     WORD PTR [ebx-0x27],si
  4064d1:	and    eax,0xebc393ba
  4064d6:	loop   0x406471
  4064d8:	mov    ds:0x330bb1d9,al
  4064dd:	add    BYTE PTR [edi+0xaf0523f],dl
  4064e3:	out    0xaf,al
  4064e5:	aam    0x6a
  4064e7:	mov    esi,0xa9a42148
  4064ec:	icebp  
  4064ed:	mov    es,WORD PTR [ebp+edx*1+0x2a606bd1]
  4064f4:	xchg   esp,eax
  4064f5:	xchg   esi,eax
  4064f6:	sub    al,0xc5
  4064f8:	pushf  
  4064f9:	mov    ecx,0x23de06e3
  4064fe:	lods   eax,DWORD PTR ds:[esi]
  4064ff:	frstor [edx-0x124c4c69]
  406505:	idiv   BYTE PTR [eax+ecx*8+0x79e9578f]
  40650c:	and    DWORD PTR [edx-0x53],esi
  40650f:	dec    esi
  406510:	add    bl,BYTE PTR [eax]
  406512:	fmul   QWORD PTR [edx]
  406514:	push   0x54435295
  406519:	xor    dh,BYTE PTR [esi-0x496e80c3]
  40651f:	push   cs
  406520:	mov    dh,0x2b
  406522:	stc    
  406523:	xor    BYTE PTR [edi],al
  406525:	fdivr  DWORD PTR [edx+0x73]
  406528:	neg    DWORD PTR [edi]
  40652a:	dec    esi
  40652b:	pop    eax
  40652c:	adc    eax,0xa4d8cb5d
  406531:	out    0xd5,al
  406533:	push   0x6119b755
  406538:	adc    DWORD PTR [esi-0x2b],esi
  40653b:	or     edx,ebx
  40653d:	xor    eax,DWORD PTR ds:0x5b124d4e
  406543:	daa    
  406544:	idiv   BYTE PTR [ebx]
  406546:	mov    ds:0xd5f21cac,al
  40654b:	push   esp
  40654c:	xchg   edi,eax
  40654d:	rol    BYTE PTR ss:0x6f98801c,1
  406554:	push   eax
  406555:	jmp    0xe4c7:0x4026ddab
  40655c:	dec    edx
  40655d:	in     eax,dx
  40655e:	(bad)  
  40655f:	fstp   TBYTE PTR [esi+0x3e]
  406562:	xor    DWORD PTR [ecx-0x4063203d],ecx
  406568:	add    eax,0x26574e16
  40656d:	or     edi,eax
  40656f:	dec    edi
  406570:	fxch   st(3)
  406572:	sahf   
  406573:	test   BYTE PTR [esi],al
  406575:	fsub   QWORD PTR [edi+0x578ef84d]
  40657b:	adc    BYTE PTR [edi+edi*8+0x3c],0xd
  406580:	and    BYTE PTR [edx+0x5c32351d],dh
  406586:	sbb    al,0xa5
  406588:	jno    0x4065e5
  40658a:	fmul   QWORD PTR [eax]
  40658c:	sub    DWORD PTR [esi+0x2782c2a1],eax
  406592:	xor    al,0x2d
  406594:	lahf   
  406595:	shr    BYTE PTR [edx-0x44],cl
  406598:	test   BYTE PTR [esi+0x22],al
  40659b:	xchg   edi,eax
  40659c:	fsub   DWORD PTR [ecx]
  40659e:	mov    dh,0x29
  4065a0:	cmp    ebx,DWORD PTR [eax]
  4065a2:	not    BYTE PTR [ecx+edi*4-0x57258dbe]
  4065a9:	or     al,0xc4
  4065ab:	xor    ebx,DWORD PTR ds:0x3ee29f08
  4065b1:	and    eax,0xdd716aa1
  4065b6:	adc    DWORD PTR [eax+0x21f2635f],0x41
  4065bd:	(bad)  [ebx-0xb]
  4065c0:	jmp    FWORD PTR [ecx+0x749ac830]
  4065c6:	and    BYTE PTR [edi],cl
  4065c8:	add    ebx,DWORD PTR [eax]
  4065ca:	or     BYTE PTR [ebx+0x38],0xb4
  4065ce:	cld    
  4065cf:	ss (bad) 
  4065d2:	out    dx,eax
  4065d3:	neg    ebx
  4065d5:	sbb    DWORD PTR [edx-0xf83633c],edx
  4065db:	(bad)  
  4065dc:	imul   ebx,DWORD PTR [ebp+0x45],0x4d01491c
  4065e3:	sbb    BYTE PTR [ecx-0x78],dh
  4065e6:	and    bl,BYTE PTR [edi+0x69172a7b]
  4065ec:	dec    esp
  4065ed:	aaa    
  4065ee:	stc    
  4065ef:	mov    dl,0x83
  4065f1:	pushf  
  4065f2:	cmp    esp,DWORD PTR [ebp+0x2e]
  4065f5:	daa    
  4065f6:	lahf   
  4065f7:	call   0xc4b8d938
  4065fc:	mov    ah,0x11
  4065fe:	push   es
  4065ff:	(bad)  
  406600:	int3   
  406601:	adc    BYTE PTR [ebp+ebx*1+0x20f4e43f],al
  406608:	inc    edx
  406609:	xor    edx,DWORD PTR [esi-0xa066267]
  40660f:	imul   esi,DWORD PTR [ecx+0x62],0xffffff95
  406613:	enter  0x1ae8,0x7b
  406617:	xchg   edx,eax
  406618:	retf   
  406619:	push   esi
  40661a:	push   ss
  40661b:	popf   
  40661c:	pop    ds
  40661d:	jg     0x40660e
  40661f:	jmp    0x406605
  406621:	rcr    BYTE PTR [esi+0x66],1
  406624:	jecxz  0x406681
  406626:	mov    ds:0xe7d92350,eax
  40662b:	cmp    edx,DWORD PTR [edi-0x54e90db6]
  406631:	in     al,0xbf
  406633:	sbb    BYTE PTR [ebx],0x24
  406636:	adc    esp,DWORD PTR [ebp+0x1f]
  406639:	in     eax,0xf6
  40663b:	into   
  40663c:	fwait
  40663d:	push   esp
  40663e:	mov    esi,0x969b5262
  406643:	outs   dx,DWORD PTR ds:[esi]
  406644:	cmp    DWORD PTR [edx],0xfffffff1
  406647:	(bad)  
  406648:	push   edi
  406649:	push   cs
  40664a:	sbb    eax,0x6ef30a02
  40664f:	jae    0x40660e
  406651:	sbb    dh,BYTE PTR [eax]
  406653:	ror    BYTE PTR [ecx+0x4],1
  406656:	stos   DWORD PTR es:[edi],eax
  406657:	jae    0x4066b5
  406659:	test   eax,0x70abb4f5
  40665e:	cli    
  40665f:	jmp    0x71f0:0x52f44da6
  406666:	fdivrp st(3),st
  406668:	or     esp,eax
  40666a:	int    0xb5
  40666c:	lods   eax,DWORD PTR ds:[esi]
  40666d:	popf   
  40666e:	sti    
  40666f:	ret    0x6377
  406672:	mov    bh,0xd9
  406674:	aam    0x12
  406676:	mov    al,0x4f
  406678:	xchg   DWORD PTR [eax-0x287000c5],ebx
  40667e:	ins    BYTE PTR es:[edi],dx
  40667f:	(bad)  
  406680:	pop    edx
  406681:	and    edi,esp
  406683:	mov    ecx,DWORD PTR [edx+eax*8+0x749b55cd]
  40668a:	jmp    0x42c:0x20cec952
  406691:	pop    eax
  406692:	popa   
  406693:	inc    edi
  406694:	mov    ds:0x2423c50b,al
  406699:	pop    ds
  40669a:	sahf   
  40669b:	enter  0x7f6f,0x6f
  40669f:	es test al,0xd5
  4066a2:	cwde   
  4066a3:	cdq    
  4066a4:	in     eax,dx
  4066a5:	pop    esp
  4066a6:	sub    al,0xe2
  4066a8:	jo     0x40668b
  4066aa:	mov    dh,0xc1
  4066ac:	mov    bl,0x76
  4066ae:	ss addr16 cmp eax,0xeeba111c
  4066b5:	int3   
  4066b6:	sbb    al,0x69
  4066b8:	imul   DWORD PTR [edi+0x5c3bb971]
  4066be:	push   ss
  4066bf:	in     al,dx
  4066c0:	es mov ecx,0x8002d86e
  4066c6:	adc    cl,BYTE PTR [ecx]
  4066c8:	lods   eax,DWORD PTR ds:[esi]
  4066c9:	xchg   ebp,eax
  4066ca:	(bad)  
  4066cb:	out    0xe1,al
  4066cd:	jo     0x406736
  4066cf:	arpl   WORD PTR [eax-0x77],bp
  4066d2:	sbb    ah,BYTE PTR [ebp-0x74217fec]
  4066d8:	outs   dx,BYTE PTR ds:[esi]
  4066d9:	out    dx,al
  4066da:	ja     0x4066d7
  4066dc:	es ins BYTE PTR es:[edi],dx
  4066de:	int    0x4b
  4066e0:	(bad)  
  4066e1:	cmp    bl,BYTE PTR [esp+eax*1+0x7f]
  4066e5:	sbb    edx,esp
  4066e7:	jnp    0x40671f
  4066e9:	sar    DWORD PTR [edi-0x4],1
  4066ec:	dec    ebx
  4066ed:	and    bl,BYTE PTR [ebx]
  4066ef:	sbb    bl,BYTE PTR [esi-0x5d]
  4066f2:	lds    esp,FWORD PTR ds:0xe3436961
  4066f8:	mov    ebp,0x61de85a9
  4066fd:	pop    ss
  4066fe:	xchg   BYTE PTR [edx+0x6c],ah
  406701:	push   ebx
  406702:	stos   DWORD PTR es:[edi],eax
  406703:	jmp    0x40669e
  406705:	jbe    0x4066d5
  406707:	dec    ebp
  406708:	jo     0x406748
  40670a:	jmp    0xade7:0x372b77a2
  406711:	push   ecx
  406712:	iret   
  406713:	aad    0x57
  406715:	scas   eax,DWORD PTR es:[edi]
  406716:	xchg   ebx,eax
  406717:	loope  0x40673d
  406719:	(bad)  
  40671a:	sub    esi,DWORD PTR [ecx+0x23]
  40671d:	jno    0x4066b5
  40671f:	pop    esi
  406720:	cs inc eax
  406722:	imul   esi,DWORD PTR [eax+eiz*4-0x29],0xd8be3a20
  40672a:	call   0xb674be74
  40672f:	dec    edx
  406730:	out    0xcb,eax
  406732:	sub    DWORD PTR [edi],ebp
  406734:	cdq    
  406735:	enter  0x1654,0xb0
  406739:	xchg   edi,eax
  40673a:	mov    ebx,es
  40673c:	pusha  
  40673d:	ror    ebp,cl
  40673f:	data16 or BYTE PTR [ecx],cl
  406742:	aad    0x1
  406744:	jo     0x40678d
  406746:	mov    ds:0xc8238dd0,eax
  40674b:	outs   dx,DWORD PTR fs:[esi]
  40674d:	mov    al,0x21
  40674f:	cmc    
  406750:	bound  edi,QWORD PTR [ebx+0x34]
  406753:	lahf   
  406754:	push   ebx
  406755:	xchg   edi,eax
  406756:	nop
  406757:	(bad)  
  406758:	jbe    0x406759
  40675a:	lods   eax,DWORD PTR ds:[esi]
  40675b:	mov    ch,0x60
  40675d:	daa    
  40675e:	xor    ebx,DWORD PTR [eax+0xf]
  406761:	je     0x406702
  406763:	xchg   edx,eax
  406764:	dec    eax
  406765:	xor    BYTE PTR [eax+0x4b],0xdc
  406769:	lock push esp
  40676b:	xlat   BYTE PTR ds:[ebx]
  40676c:	nop
  40676d:	int    0x4
  40676f:	in     eax,0x61
  406771:	retf   0x3a59
  406774:	mov    edx,0x73ede106
  406779:	push   cs
  40677a:	cmp    ch,BYTE PTR [ebx]
  40677c:	imul   esp,DWORD PTR [esi+0x8],0xf0c20b25
  406783:	pop    esi
  406784:	pop    edi
  406785:	sub    eax,0xeb930dfd
  40678a:	lds    edx,FWORD PTR [esi+esi*2+0x293f3e75]
  406791:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406792:	popa   
  406793:	adc    DWORD PTR [edx+eiz*4+0x79],edi
  406797:	xor    cl,0x47
  40679a:	pop    ebp
  40679b:	mov    esi,0xd9155e59
  4067a0:	int3   
  4067a1:	and    DWORD PTR [esi+ebx*4],ebx
  4067a4:	fbld   TBYTE PTR [esi+eiz*8]
  4067a7:	xor    DWORD PTR [ecx],eax
  4067a9:	add    BYTE PTR [esp+esi*1],0xa6
  4067ad:	call   0x36d3:0xf0df0b32
  4067b4:	mov    al,0x6a
  4067b6:	or     ebp,DWORD PTR [edx+edx*8]
  4067b9:	push   edx
  4067ba:	jns    0x406836
  4067bc:	adc    edi,eax
  4067be:	into   
  4067bf:	fmul   QWORD PTR [ebx+edx*2]
  4067c2:	push   eax
  4067c3:	pop    edx
  4067c4:	rcl    DWORD PTR [ebx+0xb],cl
  4067c7:	pop    edx
  4067c8:	mov    esp,0x13c59b9d
  4067cd:	je     0x4067bd
  4067cf:	sub    DWORD PTR [ecx-0x789b6e09],eax
  4067d5:	jmp    FWORD PTR [edi-0x1eb0dfda]
  4067db:	pop    ebp
  4067dc:	pop    ebp
  4067dd:	popa   
  4067de:	mov    edi,ecx
  4067e0:	pushf  
  4067e1:	icebp  
  4067e2:	push   ss
  4067e3:	mov    esi,0x30e94255
  4067e8:	xchg   ebp,eax
  4067e9:	(bad)  
  4067ea:	jecxz  0x40680c
  4067ec:	add    BYTE PTR [edx-0x50],0x88
  4067f0:	push   esi
  4067f1:	and    ecx,DWORD PTR [ebp-0x23]
  4067f4:	mov    eax,ds:0x88a56546
  4067f9:	pop    eax
  4067fa:	sub    al,BYTE PTR [ebx+0x6d]
  4067fd:	scas   eax,DWORD PTR es:[edi]
  4067fe:	mov    eax,0xe3618149
  406803:	lahf   
  406804:	push   ecx
  406805:	outs   dx,BYTE PTR ds:[esi]
  406806:	dec    edx
  406807:	stc    
  406808:	mov    esp,0x28f09ce4
  40680d:	retf   0x3e76
  406810:	xchg   edi,eax
  406811:	pop    ecx
  406812:	outs   dx,DWORD PTR ds:[esi]
  406813:	mov    esi,0xa6ac83ca
  406818:	sar    BYTE PTR [eax-0x6f8d0b23],1
  40681e:	aas    
  40681f:	sbb    BYTE PTR [ecx],0xa8
  406822:	ret    
  406823:	add    ch,dh
  406825:	add    eax,0x8eeeb8bc
  40682a:	fs ds adc eax,0xc49f5a7a
  406831:	js     0x4067e0
  406833:	iret   
  406834:	hlt    
  406835:	pop    eax
  406836:	mov    esi,0x5598b7a4
  40683b:	(bad)  
  40683c:	hlt    
  40683d:	in     al,0x16
  40683f:	mov    DWORD PTR [edx],esp
  406841:	int3   
  406842:	xor    al,0x6e
  406844:	in     al,0x57
  406846:	xor    eax,0x66a7f17e
  40684b:	out    dx,eax
  40684c:	shl    DWORD PTR [edi],1
  40684e:	add    bh,bh
  406850:	repnz or DWORD PTR [eax+0x62b1b5f],0xa46258a1
  40685b:	fld    DWORD PTR [edx+0x7219f8fd]
  406861:	cmp    eax,0x86a5ae60
  406866:	fsubr  DWORD PTR [esi-0x4129c580]
  40686c:	xor    al,0x3b
  40686e:	sbb    eax,0x5f2cb34d
  406873:	aas    
  406874:	jle    0x4068e8
  406876:	xor    ch,BYTE PTR [eax]
  406878:	test   al,0x3f
  40687a:	shl    dl,cl
  40687c:	aam    0xb1
  40687e:	xchg   edx,eax
  40687f:	push   ebx
  406880:	inc    esp
  406881:	(bad)  
  406882:	mov    esp,0x8c436b2c
  406887:	push   eax
  406888:	sbb    BYTE PTR [edi+ebx*2+0x60c71f5d],cl
  40688f:	or     bh,bh
  406891:	sbb    DWORD PTR [edi],edx
  406893:	inc    ecx
  406894:	or     eax,0x2fbd2ab5
  406899:	shl    DWORD PTR [ecx-0x117b2757],0x6a
  4068a0:	mov    edi,0x9e673650
  4068a5:	popa   
  4068a6:	dec    esp
  4068a7:	jp     0x4068ef
  4068a9:	and    eax,0xde616e98
  4068ae:	push   edi
  4068af:	xlat   BYTE PTR ds:[ebx]
  4068b0:	add    DWORD PTR [esi+edx*1],esi
  4068b3:	sub    BYTE PTR [ecx+0x738a1abd],cl
  4068b9:	push   ds
  4068ba:	repz mov dh,0xa
  4068bd:	iret   
  4068be:	shl    DWORD PTR [esi+0xa],0x39
  4068c2:	enter  0x8cd0,0xa8
  4068c6:	mov    ebp,0x7e6fda64
  4068cb:	xor    al,0xcd
  4068cd:	add    dh,BYTE PTR [edx+0x42698b2]
  4068d3:	jecxz  0x4068d7
  4068d5:	sti    
  4068d6:	scas   eax,DWORD PTR es:[edi]
  4068d7:	pop    ss
  4068d8:	mov    al,0xc8
  4068da:	iret   
  4068db:	test   DWORD PTR [ecx],edx
  4068dd:	mov    ah,0x9a
  4068df:	imul   edi,DWORD PTR [ebx-0x43d4182f],0xe2da78a9
  4068e9:	xor    DWORD PTR [esp+edi*4+0x67],esi
  4068ed:	dec    edi
  4068ee:	test   DWORD PTR [edi-0xa4dc813],0xe111ff57
  4068f8:	(bad)  
  4068f9:	xchg   edi,eax
  4068fa:	aad    0x37
  4068fc:	fidiv  DWORD PTR [edx]
  4068fe:	adc    al,0xcf
  406900:	add    BYTE PTR [eax+0x72],bl
  406903:	xchg   edx,eax
  406904:	mov    edx,DWORD PTR [eax]
  406906:	loopne 0x40689a
  406908:	push   edi
  406909:	push   ebx
  40690a:	ss mov esp,0x274c093f
  406910:	fidivr DWORD PTR [edx+0x33b02f9e]
  406916:	jmp    FWORD PTR [ebx+0x68925a7d]
  40691c:	ins    BYTE PTR es:[edi],dx
  40691d:	ins    BYTE PTR es:[edi],dx
  40691e:	and    DWORD PTR [edx],edi
  406920:	xor    al,0x3d
  406922:	in     eax,0xb2
  406924:	(bad)  
  406925:	inc    BYTE PTR [ecx]
  406927:	scas   eax,DWORD PTR es:[edi]
  406928:	push   0xb16cafda
  40692d:	mov    ebp,0xcabe98c
  406932:	or     BYTE PTR [ecx+eiz*2-0x34],dh
  406936:	mov    cl,0x82
  406938:	mov    bh,0x38
  40693a:	retf   0x1dc2
  40693d:	mov    eax,0xe419c0f4
  406942:	call   0xb34c:0xccb83939
  406949:	pop    edi
  40694a:	mov    cl,0xc3
  40694c:	mov    dh,0xbc
  40694e:	sub    DWORD PTR [ebx],eax
  406950:	out    0xac,eax
  406952:	adc    BYTE PTR [ebp-0x1c9862b8],cl
  406958:	push   ds
  406959:	and    DWORD PTR [ecx+0x6e5e55e3],ebx
  40695f:	aas    
  406960:	das    
  406961:	push   edx
  406962:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406963:	loope  0x4069de
  406965:	mov    WORD PTR [edx+eiz*8],es
  406968:	sbb    ebx,DWORD PTR [ebx+0x63d3a15e]
  40696e:	cs jne 0x40699d
  406971:	xor    eax,0xb59d2b6f
  406976:	cmp    ebx,DWORD PTR [ebx]
  406978:	sbb    DWORD PTR [eax-0x11708336],0x3b
  40697f:	xor    eax,0x2a672158
  406984:	inc    esi
  406985:	daa    
  406986:	mov    bh,0xc9
  406988:	jns    0x40692b
  40698a:	mov    ch,0x6d
  40698c:	jp     0x4069db
  40698e:	imul   ebx,DWORD PTR [ebp+0x4a7e4c17],0x96c269c8
  406998:	arpl   WORD PTR [esi+0x220bfebc],si
  40699e:	cli    
  40699f:	shr    DWORD PTR [ecx-0x4a5053f6],cl
  4069a5:	in     eax,0x2e
  4069a7:	scas   eax,DWORD PTR es:[edi]
  4069a8:	std    
  4069a9:	cli    
  4069aa:	fwait
  4069ab:	sub    eax,0x34ca0d80
  4069b0:	dec    esi
  4069b1:	jb     0x406a1e
  4069b3:	mov    ah,0x9e
  4069b5:	(bad)  
  4069b6:	cmp    al,0xb1
  4069b8:	rcl    ecx,0x8d
  4069bb:	xor    dh,BYTE PTR [edx+0x639717ea]
  4069c1:	rcr    DWORD PTR [edi+0x3d84b30e],cl
  4069c7:	sbb    al,0x6e
  4069c9:	pop    ds
  4069ca:	fcomip st,st(4)
  4069cc:	inc    ecx
  4069cd:	and    BYTE PTR [ecx],0xfa
  4069d0:	add    ah,bh
  4069d2:	pop    ds
  4069d3:	(bad)  
  4069d6:	mov    bh,0xbf
  4069d8:	(bad)  
  4069d9:	imul   BYTE PTR [ecx]
  4069db:	lods   eax,DWORD PTR ds:[esi]
  4069dc:	mov    ah,0xcd
  4069de:	xor    ch,dh
  4069e0:	dec    eax
  4069e1:	sub    esi,esi
  4069e3:	push   0xf95bc6f8
  4069e8:	int    0xe1
  4069ea:	out    0xf1,eax
  4069ec:	dec    esp
  4069ed:	add    ecx,DWORD PTR [ebx+esi*1]
  4069f0:	ins    DWORD PTR es:[edi],dx
  4069f1:	jecxz  0x4069ca
  4069f3:	out    0xcb,al
  4069f5:	cmp    dl,BYTE PTR [eax+edi*1]
  4069f8:	rcl    BYTE PTR [eax],0xae
  4069fb:	(bad)  
  4069fc:	pop    esp
  4069fd:	mov    ds:0x5b93fdfb,al
  406a02:	add    eax,0x124df10c
  406a07:	cmp    ch,0xf6
  406a0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a0b:	cmp    eax,0x21507f41
  406a10:	pop    ecx
  406a11:	icebp  
  406a12:	cld    
  406a13:	ret    
  406a14:	fadd   st(1),st
  406a16:	or     DWORD PTR [ebp-0x4eb66610],ecx
  406a1c:	and    al,0x30
  406a1e:	mov    eax,0x2535d8d6
  406a23:	jo     0x406a0f
  406a25:	dec    ecx
  406a26:	sub    BYTE PTR [ecx+0x526ccd61],dh
  406a2c:	or     bh,al
  406a2e:	js     0x406a23
  406a30:	inc    esi
  406a31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a32:	paddusw mm7,QWORD PTR [ecx+0x3f4678ec]
  406a39:	sar    DWORD PTR [esi+eax*4-0x23],1
  406a3d:	into   
  406a3e:	mov    ecx,0x9c555ceb
  406a43:	retf   0x19a2
  406a46:	pop    eax
  406a47:	mov    ds:0xd351b6f3,eax
  406a4c:	and    DWORD PTR [edx],0x62ab0160
  406a52:	out    dx,al
  406a53:	loopne 0x406a89
  406a55:	xchg   ecx,eax
  406a56:	ret    0x2d0d
  406a59:	adc    DWORD PTR [eax-0x5d3156a3],ecx
  406a5f:	lods   al,BYTE PTR ds:[esi]
  406a60:	(bad)  
  406a61:	in     al,dx
  406a62:	adc    DWORD PTR [esi+0x1c],esp
  406a65:	pop    ds
  406a66:	mov    ebx,0x1852a876
  406a6b:	add    BYTE PTR [edi],ah
  406a6d:	pop    edi
  406a6e:	(bad)  
  406a70:	icebp  
  406a71:	push   es
  406a72:	inc    edi
  406a73:	sbb    eax,0xedee29b
  406a78:	push   0xffffff8c
  406a7a:	mov    cl,0x29
  406a7c:	sbb    eax,0x4a29715d
  406a81:	push   edi
  406a82:	fs sub al,0xdf
  406a85:	int    0x87
  406a87:	xor    eax,0xce97e455
  406a8c:	cmp    BYTE PTR [esi],cl
  406a8e:	ins    BYTE PTR es:[edi],dx
  406a8f:	mov    ch,0x9f
  406a91:	aas    
  406a92:	xchg   BYTE PTR ds:[esi-0x6e],ah
  406a96:	enter  0xb460,0x55
  406a9a:	int3   
  406a9b:	dec    eax
  406a9c:	cmp    esi,DWORD PTR [eax]
  406a9e:	sbb    al,0xa1
  406aa0:	or     ecx,esp
  406aa2:	aad    0xdf
  406aa4:	pop    ds
  406aa5:	or     DWORD PTR [eax-0x7b1f8c07],edi
  406aab:	xchg   edx,eax
  406aac:	mov    esi,?
  406aae:	sub    BYTE PTR [esi-0x54],cl
  406ab1:	jmp    0x673e19fe
  406ab6:	lahf   
  406ab7:	and    esp,DWORD PTR [eax-0x4309ecd0]
  406abd:	jo     0x406a80
  406abf:	lock add DWORD PTR [esi+esi*2-0x20],ecx
  406ac4:	in     eax,dx
  406ac5:	loop   0x406a87
  406ac7:	daa    
  406ac8:	push   ecx
  406ac9:	shrd   edi,edi,cl
  406acc:	mov    edx,DWORD PTR [esi+0x44]
  406acf:	jle    0x406a98
  406ad1:	fst    QWORD PTR [edi]
  406ad3:	adc    eax,DWORD PTR [eax]
  406ad5:	mov    bh,0x3c
  406ad7:	mov    ah,0x10
  406ad9:	sbb    DWORD PTR [ebx-0x41],esp
  406adc:	adc    ebp,edx
  406ade:	loopne 0x406a8c
  406ae0:	mov    eax,DWORD PTR es:[esi-0x5a913985]
  406ae7:	test   BYTE PTR [edx-0x56],cl
  406aea:	mov    eax,ds:0x1de9d7a1
  406aef:	sbb    cl,BYTE PTR [edx]
  406af1:	psraw  mm7,QWORD PTR [eax+0x7b]
  406af5:	fnsave [ecx]
  406af7:	xlat   BYTE PTR ds:[ebx]
  406af8:	inc    edx
  406af9:	jbe    0x406b60
  406afb:	mov    edi,0x4f75565a
  406b00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b01:	test   bl,0x82
  406b04:	mov    dl,0x99
  406b06:	add    BYTE PTR ds:0x1b939ebb,0x5
  406b0d:	xchg   edx,eax
  406b0e:	mov    ebx,0xf9ea1ad1
  406b13:	mov    al,0x3c
  406b15:	push   esp
  406b16:	sub    ah,dl
  406b18:	xchg   esp,eax
  406b19:	loope  0x406b6e
  406b1b:	add    eax,0x15f741b
  406b20:	pop    esi
  406b21:	jns    0x406afd
  406b23:	or     al,bh
  406b25:	(bad)  
  406b26:	(bad)  
  406b28:	(bad)  
  406b29:	cmp    eax,0xe1572d0a
  406b2e:	fbld   TBYTE PTR [ecx+ecx*4-0x229f1998]
  406b35:	imul   ebp,DWORD PTR [eax-0x4a346559],0x6eb2344b
  406b3f:	cmp    cl,BYTE PTR [edx+0x26]
  406b42:	test   DWORD PTR [esi],eax
  406b44:	out    dx,eax
  406b45:	mov    esp,0xf8ed81d8
  406b4a:	mov    esp,0xacbb7dd
  406b4f:	pop    esi
  406b51:	and    dh,BYTE PTR [esi+0x33]
  406b54:	addr16 (bad) 
  406b56:	jns    0x406b1c
  406b58:	addr16 jle 0x406b42
  406b5b:	ss stos DWORD PTR es:[edi],eax
  406b5d:	cmp    eax,0x3785a5e6
  406b62:	mov    esi,DWORD PTR [ebx+0x49]
  406b65:	ja     0x406bdd
  406b67:	in     eax,0x3e
  406b69:	(bad)  
  406b6a:	mov    DWORD PTR [ecx+esi*8+0x22edd522],edi
  406b71:	fld    TBYTE PTR [esi-0x48]
  406b74:	aaa    
  406b75:	add    eax,0x67c09748
  406b7a:	mul    BYTE PTR [edi-0x33]
  406b7d:	mov    ah,0xa1
  406b7f:	popf   
  406b80:	enter  0xc337,0x49
  406b84:	add    al,0xd4
  406b86:	mov    cl,0xe6
  406b88:	pop    eax
  406b89:	inc    ebx
  406b8a:	jmp    0xc540898c
  406b8f:	push   ds
  406b90:	fist   WORD PTR [eax-0x5a4efd79]
  406b96:	je     0x406b8e
  406b98:	sub    BYTE PTR [edi],cl
  406b9a:	jbe    0x406bfa
  406b9c:	xchg   ebx,ebx
  406b9e:	les    esp,FWORD PTR [ecx]
  406ba0:	jae    0x406bf6
  406ba2:	inc    esi
  406ba3:	push   esp
  406ba4:	cmp    eax,0xf6f87c2b
  406ba9:	rcr    dh,cl
  406bab:	jo     0x406bff
  406bad:	les    esp,FWORD PTR [ecx+0x108189e9]
  406bb3:	mov    ah,BYTE PTR [eax]
  406bb5:	mov    ds:0x95080200,al
  406bba:	mov    dh,0xe8
  406bbc:	and    eax,0xd4870ed2
  406bc1:	lahf   
  406bc2:	mov    ch,0xff
  406bc4:	mov    bl,0xb9
  406bc6:	xlat   BYTE PTR ds:[ebx]
  406bc7:	ins    BYTE PTR es:[edi],dx
  406bc8:	mov    edx,0xbd13bd1d
  406bcd:	mov    ebp,esp
  406bcf:	mov    ecx,0xfeba22f3
  406bd4:	dec    eax
  406bd5:	repz cs jg 0x406c0c
  406bd9:	ins    DWORD PTR es:[edi],dx
  406bda:	cmp    al,0x90
  406bdc:	ret    
  406bdd:	mov    ?,WORD PTR [ecx-0x12]
  406be0:	cwde   
  406be1:	jno    0x406bfd
  406be3:	pop    edx
  406be4:	into   
  406be5:	and    esp,edx
  406be7:	add    edx,DWORD PTR [ebp+0x31]
  406bea:	pop    ss
  406beb:	pop    ss
  406bec:	add    eax,0x7f0fcea
  406bf1:	push   cs
  406bf2:	stos   DWORD PTR es:[edi],eax
  406bf3:	mov    edi,0x4973a6b4
  406bf8:	std    
  406bf9:	mov    eax,0xfa40b69a
  406bfe:	xor    esp,DWORD PTR [edx-0x6e]
  406c01:	inc    eax
  406c02:	fbstp  TBYTE PTR [edi-0x2d0ce4f5]
  406c08:	clc    
  406c09:	adc    DWORD PTR [esi-0x28],ebp
  406c0c:	mov    ebp,0x46759c7a
  406c11:	ss hlt 
  406c13:	dec    ebp
  406c14:	sub    DWORD PTR [ecx-0x5e190378],edi
  406c1a:	das    
  406c1b:	sub    bh,BYTE PTR [edi]
  406c1d:	jae    0x406ba0
  406c1f:	xor    eax,0x3b048b48
  406c24:	or     eax,0x8ccbe5fa
  406c29:	lods   al,BYTE PTR ds:[esi]
  406c2a:	out    0x1d,eax
  406c2c:	or     cl,BYTE PTR [eax]
  406c2e:	loop   0x406cac
  406c30:	cmc    
  406c31:	push   0x106f4934
  406c36:	xchg   ebx,eax
  406c37:	retf   
  406c38:	das    
  406c39:	mov    bl,0xb9
  406c3b:	out    0xa1,eax
  406c3d:	fwait
  406c3e:	jno    0x406bc7
  406c40:	or     esi,DWORD PTR [ebx+edx*4]
  406c43:	sub    al,0x40
  406c45:	jnp    0x406c0b
  406c47:	push   edx
  406c48:	and    eax,0x17844a79
  406c4d:	push   eax
  406c4e:	data16 out dx,al
  406c50:	sbb    ebx,DWORD PTR [eax-0x38]
  406c53:	or     dl,BYTE PTR [eax]
  406c55:	pop    eax
  406c56:	jne    0x406bff
  406c58:	inc    edi
  406c59:	cmp    dl,BYTE PTR [ecx+ecx*1]
  406c5c:	into   
  406c5d:	(bad)  
  406c5e:	adc    dx,WORD PTR [esi-0x5]
  406c62:	cmp    dl,BYTE PTR [eax]
  406c64:	out    dx,eax
  406c65:	in     eax,dx
  406c66:	data16 mov al,ds:0x3fb08c42
  406c6c:	stos   DWORD PTR es:[edi],eax
  406c6d:	in     al,0x78
  406c6f:	rol    eax,cl
  406c71:	pop    ecx
  406c72:	aam    0x47
  406c74:	ss mov ecx,edi
  406c77:	pop    ss
  406c78:	popfw  
  406c7a:	adc    cl,BYTE PTR [ecx+eax*2+0x7]
  406c7e:	xlat   BYTE PTR ds:[ebx]
  406c7f:	add    eax,0x518ed444
  406c84:	jno    0x406c15
  406c86:	add    dl,BYTE PTR [eax-0x628477a5]
  406c8c:	rol    BYTE PTR [ecx],0xec
  406c8f:	sub    DWORD PTR [edi+0x1f],edx
  406c92:	xchg   esp,eax
  406c93:	inc    edi
  406c94:	sbb    esp,DWORD PTR [eax+0x5f]
  406c97:	pop    ecx
  406c98:	fiadd  DWORD PTR [ebp-0x8efc405]
  406c9e:	sar    ecx,1
  406ca0:	or     ecx,eax
  406ca2:	ret    0x45e0
  406ca5:	add    al,0x5a
  406ca7:	xchg   esi,eax
  406ca8:	out    dx,al
  406ca9:	and    eax,DWORD PTR [esi+0x49]
  406cac:	jo     0x406d15
  406cae:	mov    bh,0xbf
  406cb0:	nop
  406cb1:	push   ds
  406cb2:	xchg   ebp,eax
  406cb3:	jns    0x406cbc
  406cb5:	in     al,dx
  406cb6:	xor    BYTE PTR [ecx+edi*2+0x4d],bl
  406cba:	cld    
  406cbb:	bound  esp,QWORD PTR [eax+0x58]
  406cbe:	xchg   esp,eax
  406cbf:	jo     0x406cff
  406cc1:	dec    esi
  406cc2:	xchg   esi,eax
  406cc3:	fld    QWORD PTR [edi-0x82df2a9]
  406cca:	pop    ecx
  406ccb:	retf   0xcb6c
  406cce:	ret    0x4e6
  406cd1:	ja     0x406cf3
  406cd3:	mov    al,ds:0xd0396a7f
  406cd8:	lds    ecx,FWORD PTR [ecx]
  406cda:	jne    0x406d47
  406cdc:	lods   al,BYTE PTR ds:[esi]
  406cdd:	fsincos 
  406cdf:	dec    edi
  406ce0:	jbe    0x406d2b
  406ce2:	fwait
  406ce3:	add    al,0xe5
  406ce5:	sub    DWORD PTR [edx-0x4],ebx
  406ce8:	lods   eax,DWORD PTR ds:[esi]
  406ce9:	inc    ebp
  406cea:	mov    esp,0x3901c6de
  406cef:	fsubrp st(1),st
  406cf1:	imul   esi,edx,0x38889d1f
  406cf7:	ss pop esp
  406cf9:	and    eax,0x68de31ef
  406cfe:	loop   0x406cd3
  406d00:	(bad)  
  406d01:	mov    ch,0x3a
  406d03:	inc    ebx
  406d04:	fwait
  406d05:	jp     0x406d38
  406d07:	cwde   
  406d08:	cmp    ah,ah
  406d0a:	or     eax,0xc4cc4212
  406d0f:	ja     0x406ca5
  406d11:	(bad)  
  406d12:	outs   dx,DWORD PTR ds:[esi]
  406d13:	(bad)  
  406d14:	jge    0x406d16
  406d16:	jb     0x406d07
  406d18:	test   BYTE PTR [edx+0x3f285fc],0xc
  406d1f:	gs jmp 0xb9954eab
  406d25:	not    BYTE PTR ds:0xf13775d
  406d2b:	cwde   
  406d2c:	jbe    0x406ce8
  406d2e:	jo     0x406cc6
  406d30:	fcomi  st,st(3)
  406d32:	cmp    bh,0xf8
  406d35:	dec    ebx
  406d36:	jmp    0x82ab:0x6ceb294c
  406d3d:	or     ch,BYTE PTR [edx-0x3a37cb3d]
  406d43:	cmp    DWORD PTR [eax],edi
  406d45:	jnp    0x406cfc
  406d47:	sub    DWORD PTR [esi+esi*8-0x663b4415],0x65
  406d4f:	jmp    0xbc22b8f3
  406d54:	lea    ebp,[ebx+0x33d93770]
  406d5a:	scas   eax,DWORD PTR es:[edi]
  406d5b:	adc    eax,0xf1bcc3d2
  406d60:	add    BYTE PTR [esi],dh
  406d62:	mov    ebp,0x551a2103
  406d67:	jmp    0x406d8f
  406d69:	dec    edi
  406d6a:	lods   eax,DWORD PTR ds:[esi]
  406d6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d6c:	call   0xc2c18bf9
  406d71:	mov    dl,0x34
  406d73:	out    0x4f,eax
  406d75:	adc    bl,BYTE PTR [edx+0x5f]
  406d78:	outs   dx,BYTE PTR ds:[esi]
  406d79:	add    al,0x8
  406d7b:	(bad)  
  406d7c:	sbb    al,0xdf
  406d7e:	fidivr WORD PTR [ebp+0x114043fa]
  406d84:	out    0x1e,eax
  406d86:	enter  0x1eae,0xa9
  406d8a:	int3   
  406d8b:	xchg   ebx,eax
  406d8c:	sbb    edx,DWORD PTR [eax+0x29716757]
  406d92:	push   esp
  406d93:	sar    DWORD PTR [eax],cl
  406d95:	dec    eax
  406d96:	and    eax,DWORD PTR [ebx]
  406d98:	and    al,0x4d
  406d9a:	pop    ds
  406d9b:	add    dl,bl
  406d9d:	push   ecx
  406d9e:	xor    al,BYTE PTR [eax+0x51]
  406da1:	push   ss
  406da2:	das    
  406da3:	into   
  406da4:	pop    esi
  406da5:	aam    0x18
  406da7:	pop    es
  406da8:	ror    DWORD PTR [ebp+0x7ed85b31],0xee
  406daf:	push   0xb3333772
  406db4:	jb     0x406d97
  406db6:	mov    bh,0x96
  406db8:	popf   
  406db9:	enter  0x3270,0x3
  406dbd:	sbb    ch,dl
  406dbf:	sub    edx,ebp
  406dc1:	std    
  406dc2:	xchg   edi,esp
  406dc4:	(bad)  
  406dc6:	lahf   
  406dc7:	je     0x406dc3
  406dc9:	jb     0x406d4c
  406dcb:	adc    ebx,DWORD PTR [edi+0xae75d04]
  406dd1:	sbb    ebp,DWORD PTR [edi+0x22797c2b]
  406dd7:	xchg   BYTE PTR [edi+0x4624b9a9],dh
  406ddd:	mov    WORD PTR [edi-0x3cd6c8d4],ds
  406de3:	lea    edx,[ecx+0x6]
  406de6:	call   0x2965:0x2a77a71c
  406ded:	add    BYTE PTR [ebx+0x62ecca71],ah
  406df3:	xor    cl,BYTE PTR [ebx+eiz*8]
  406df6:	pop    edx
  406df7:	push   edi
  406df8:	pop    edx
  406df9:	arpl   WORD PTR [edx],sp
  406dfb:	dec    edi
  406dfc:	dec    ebx
  406dfd:	mov    ds,WORD PTR [eax]
  406dff:	nop
  406e00:	xor    eax,0x485cb3cd
  406e05:	imul   ebp,edx,0x753f70d0
  406e0b:	push   ebx
  406e0c:	adc    cl,al
  406e0e:	cmp    al,0xc1
  406e10:	xor    eax,0x29f928b8
  406e15:	dec    edi
  406e16:	add    al,BYTE PTR [ecx+ecx*4-0x4e]
  406e1a:	add    ch,BYTE PTR [eax]
  406e1c:	loopne 0x406de3
  406e1e:	daa    
  406e1f:	xor    eax,edi
  406e21:	cs out 0xc5,al
  406e24:	mov    ebx,0x2910ce2a
  406e29:	mov    BYTE PTR [ebx+0x42],dh
  406e2c:	ds xor eax,0xf7b2e3e9
  406e32:	push   0xffffff91
  406e34:	out    dx,al
  406e35:	mov    eax,ds:0xd8187318
  406e3a:	sub    dl,BYTE PTR [ebx-0x14]
  406e3d:	int    0xa3
  406e3f:	add    al,0xc0
  406e41:	shl    BYTE PTR [ecx+0x329c0044],cl
  406e47:	ins    BYTE PTR es:[edi],dx
  406e48:	int3   
  406e49:	jmp    0x406e1f
  406e4b:	mov    eax,ds:0x25ab19a4
  406e50:	outs   dx,BYTE PTR ds:[esi]
  406e51:	dec    eax
  406e52:	mov    WORD PTR [esp+edi*4-0x3a],es
  406e56:	jne    0x406ea2
  406e58:	cmp    BYTE PTR [ebx],dl
  406e5a:	(bad)
  406e5d:	push   edx
  406e5e:	int    0xdd
  406e60:	and    eax,0x94d64f7
  406e65:	xor    ch,bh
  406e67:	push   0x25
  406e69:	scas   eax,DWORD PTR es:[edi]
  406e6a:	sub    DWORD PTR [ecx-0x1259514e],ebx
  406e70:	adc    al,0xfe
  406e72:	pop    esp
  406e73:	mov    fs,WORD PTR [edx+0x236cf9ab]
  406e79:	push   esp
  406e7a:	dec    ebx
  406e7b:	call   0x574a:0x629633da
  406e82:	gs cs and esi,ecx
  406e86:	or     al,0xc9
  406e88:	sub    al,dl
  406e8a:	sahf   
  406e8b:	fbstp  TBYTE PTR [ecx-0x5b]
  406e8e:	jge    0x406f05
  406e90:	cmp    bl,BYTE PTR [edi+0x2e4a77d8]
  406e96:	es inc ebx
  406e98:	out    dx,al
  406e99:	push   ss
  406e9a:	push   esi
  406e9b:	sbb    al,0x85
  406e9d:	dec    edi
  406e9e:	jns    0x406eac
  406ea0:	jbe    0x406e67
  406ea2:	sub    DWORD PTR [esi+eax*8],0x3b
  406ea6:	xlat   BYTE PTR ds:[ebx]
  406ea7:	push   ebx
  406ea8:	dec    edi
  406ea9:	pop    ebx
  406eaa:	fwait
  406eab:	jb     0x406eb8
  406ead:	xchg   ecx,eax
  406eae:	cmc    
  406eaf:	mov    edi,0x1571ea43
  406eb4:	jl     0x406e55
  406eb6:	pusha  
  406eb7:	repnz cmp al,BYTE PTR [edi]
  406eba:	and    bl,cl
  406ebc:	ret    0x9bcc
  406ebf:	jge    0x406ea3
  406ec1:	mov    dl,0x91
  406ec3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ec4:	xor    al,0xa4
  406ec6:	inc    edx
  406ec7:	inc    ecx
  406ec8:	out    dx,al
  406ec9:	dec    edi
  406eca:	les    ebp,FWORD PTR [ebx]
  406ecc:	ficom  DWORD PTR [edx]
  406ece:	out    dx,al
  406ecf:	or     DWORD PTR [esi+0x10],esi
  406ed2:	jmp    0xe698389b
  406ed7:	pop    esp
  406ed8:	shl    BYTE PTR [edi+ebp*4],0x6
  406edc:	jp     0x406ecc
  406ede:	into   
  406edf:	mov    ds:0xbd11be70,al
  406ee4:	dec    ebp
  406ee5:	sub    ecx,DWORD PTR [ecx+0x406bd4f6]
  406eeb:	ds out 0xe8,eax
  406eee:	repnz dec ebx
  406ef0:	mov    al,0x92
  406ef2:	jns    0x406ef9
  406ef4:	lock cmp BYTE PTR [edi+ebp*2-0x37cc14a7],dl
  406efc:	loopne 0x406f35
  406efe:	xor    eax,0x5920cc48
  406f03:	pop    eax
  406f04:	inc    ebp
  406f05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f06:	cdq    
  406f07:	and    eax,0x5ebcd26
  406f0c:	retf   0xd686
  406f0f:	dec    edx
  406f10:	repz and BYTE PTR [esp+0x701c1826],ah
  406f18:	test   eax,0x266453a8
  406f1d:	jae    0x406f0a
  406f1f:	or     eax,0x17fd927b
  406f24:	and    eax,0xed93c457
  406f29:	int    0x1c
  406f2b:	pop    esp
  406f2c:	sbb    BYTE PTR [edi+0x471b6b80],dh
  406f32:	push   0x436dddd1
  406f37:	sar    DWORD PTR [eax+0x691da4f1],cl
  406f3d:	ret    
  406f3e:	hlt    
  406f3f:	jno    0x406f37
  406f41:	(bad)  
  406f42:	pop    edi
  406f43:	int    0x43
  406f45:	out    0x81,eax
  406f47:	jae    0x406eed
  406f49:	jg     0x406fa2
  406f4b:	cdq    
  406f4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f4d:	(bad)  
  406f4f:	or     bl,bh
  406f51:	fsub   DWORD PTR [ecx-0x70]
  406f54:	ret    0xf0ec
  406f57:	imul   ebp,DWORD PTR [ebp-0xf],0xffffff87
  406f5b:	xlat   BYTE PTR ds:[ebx]
  406f5c:	std    
  406f5d:	fisttp DWORD PTR [edi-0x49]
  406f60:	into   
  406f61:	shl    BYTE PTR [ecx],cl
  406f63:	sahf   
  406f64:	lahf   
  406f65:	cmp    esp,DWORD PTR [edi]
  406f67:	pop    ss
  406f68:	(bad)  
  406f69:	in     al,dx
  406f6a:	imul   edx,DWORD PTR [edx],0xfe79b9e2
  406f70:	xor    DWORD PTR [esi-0x7b],esi
  406f73:	dec    edx
  406f74:	loope  0x406fc9
  406f76:	dec    ebx
  406f77:	xchg   ebx,eax
  406f78:	fs clc 
  406f7a:	mul    DWORD PTR [ecx]
  406f7c:	js     0x406f17
  406f7e:	leave  
  406f7f:	sub    BYTE PTR [eax+0x3e],dl
  406f82:	mov    ah,0x5a
  406f84:	push   es
  406f85:	or     esi,0x7cb41617
  406f8b:	mov    edi,0x586e330a
  406f90:	dec    esp
  406f91:	gs leave 
  406f93:	pushf  
  406f94:	xchg   ebp,eax
  406f95:	cdq    
  406f96:	bound  esp,QWORD PTR [esi-0x4a64ae35]
  406f9c:	in     al,0xf6
  406f9e:	push   0x22
  406fa0:	das    
  406fa1:	inc    eax
  406fa2:	retf   
  406fa3:	jns    0x407018
  406fa5:	into   
  406fa6:	inc    ebx
  406fa7:	lods   al,BYTE PTR ds:[esi]
  406fa8:	nop
  406fa9:	ret    0x4208
  406fac:	popa   
  406fad:	(bad)  
  406fae:	jp     0x406f4b
  406fb0:	sbb    DWORD PTR cs:[eax],edx
  406fb3:	ins    DWORD PTR es:[edi],dx
  406fb4:	and    dl,BYTE PTR [eax+0x36]
  406fb7:	inc    edi
  406fb8:	fld    QWORD PTR [ebp+0xa]
  406fbb:	sub    al,0xb
  406fbd:	aad    0x5
  406fbf:	mov    edx,0x3d36a815
  406fc4:	push   0x112d89c5
  406fc9:	mov    ch,0x26
  406fcb:	dec    edi
  406fcc:	pop    edx
  406fcd:	aam    0x43
  406fcf:	mov    dl,0x68
  406fd1:	icebp  
  406fd2:	popa   
  406fd3:	in     ax,0x1b
  406fd6:	stos   BYTE PTR es:[edi],al
  406fd7:	dec    esp
  406fd8:	mov    ecx,0xffd733db
  406fdd:	das    
  406fde:	js     0x406fe3
  406fe0:	mov    gs:0xc8b6b3b9,ax
  406fe7:	daa    
  406fe8:	inc    esp
  406fe9:	dec    esi
  406fea:	lods   al,BYTE PTR ds:[esi]
  406feb:	jg     0x407017
  406fed:	inc    BYTE PTR [edx]
  406fef:	ja     0x407031
  406ff1:	idiv   DWORD PTR [edx-0x782df9e6]
  406ff7:	mov    edi,0x52e80548
  406ffc:	fmulp  st(0),st
  406ffe:	jnp    0x406f8a
  407000:	sbb    eax,0x2a2ec7bd
  407005:	shr    dl,cl
  407007:	loope  0x407057
  407009:	adc    DWORD PTR [esi],edx
  40700b:	pop    ds
  40700c:	sahf   
  40700d:	daa    
  40700e:	jb     0x406fce
  407010:	(bad)  
  407011:	imul   ebx,DWORD PTR [ecx+0x74],0x2d6c17a0
  407018:	jae    0x407048
  40701a:	and    al,0xe
  40701c:	push   ds
  40701d:	sub    eax,0x404491ba
  407022:	cmp    BYTE PTR [eax-0x70],ah
  407025:	jo     0x406fb0
  407027:	add    dh,bh
  407029:	ja     0x407050
  40702b:	(bad)  
  40702c:	or     eax,0x98fda47
  407031:	push   edi
  407032:	mov    cl,0xb1
  407034:	jne    0x406ff7
  407036:	bound  edi,QWORD PTR [eax+0x55]
  407039:	sahf   
  40703a:	aas    
  40703b:	pop    eax
  40703c:	jo     0x406fd2
  40703e:	int3   
  40703f:	pop    ebx
  407040:	imul   esi,DWORD PTR [ecx-0x5d],0xffffffd3
  407044:	sub    bl,dh
  407046:	ds pop ebx
  407048:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407049:	push   edi
  40704a:	mov    al,ds:0xeda6fa99
  40704f:	ds enter 0x2e81,0xbb
  407054:	and    DWORD PTR [esi-0x5a170bf9],ecx
  40705a:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40705c:	xor    esp,DWORD PTR [edi+0x34f1c6c3]
  407062:	out    dx,al
  407063:	enter  0xe17f,0x15
  407067:	(bad)  
  407068:	pop    esp
  407069:	and    eax,0xeba7f431
  40706e:	or     ebx,DWORD PTR [edi]
  407070:	jp     0x4070bd
  407072:	shl    DWORD PTR [ebx-0x65],cl
  407075:	dec    edx
  407076:	jne    0x4070a7
  407078:	lods   eax,DWORD PTR ds:[esi]
  407079:	jne    0x4070a9
  40707b:	je     0x407023
  40707d:	mov    edx,0x97b4a25e
  407082:	arpl   si,sp
  407084:	pop    es
  407085:	fcom   QWORD PTR [ebx-0x196a6e04]
  40708b:	mov    BYTE PTR [ebp+0x28768a4b],cl
  407091:	pop    ss
  407092:	pop    edx
  407093:	pop    ecx
  407094:	ret    
  407095:	mov    edx,0xdb210e74
  40709a:	add    ebp,DWORD PTR [ebp-0x2ca12827]
  4070a0:	cmp    edx,esp
  4070a2:	adc    eax,0x1a07be91
  4070a7:	cmp    eax,0xe57d4d0f
  4070ac:	add    BYTE PTR ds:0x95547435,dh
  4070b2:	div    ch
  4070b4:	fwait
  4070b5:	pop    edi
  4070b6:	or     ebp,0x30
  4070b9:	mov    ds:0x7d15ad56,eax
  4070be:	in     eax,0xb2
  4070c0:	mov    eax,ds:0x1ee864a1
  4070c5:	retf   
  4070c6:	arpl   WORD PTR [ebx],bx
  4070c8:	pop    ss
  4070c9:	cld    
  4070ca:	mul    DWORD PTR [ecx-0x1a]
  4070cd:	mov    eax,ds:0xc2932367
  4070d2:	adc    BYTE PTR [edx],al
  4070d4:	push   cs
  4070d5:	int3   
  4070d6:	(bad)  
  4070d7:	std    
  4070d8:	(bad)  
  4070d9:	xchg   edx,eax
  4070da:	call   0x5057e6c6
  4070df:	dec    ecx
  4070e0:	inc    ebp
  4070e1:	cmp    al,0x43
  4070e3:	mov    ds:0xfbaf316e,al
  4070e8:	jo     0x40710d
  4070ea:	add    bh,BYTE PTR [ecx+0x4b]
  4070ed:	pop    ebx
  4070ee:	arpl   WORD PTR [edi-0x78],dx
  4070f1:	pop    ss
  4070f2:	dec    edx
  4070f3:	loope  0x4070d8
  4070f5:	data16 add BYTE PTR [esi-0x10c3aa62],ch
  4070fc:	mov    edx,0xe4ddf9a6
  407101:	cs stc 
  407103:	in     al,dx
  407104:	pop    edi
  407105:	in     eax,dx
  407106:	cld    
  407107:	(bad)  
  407108:	cmp    al,0xa5
  40710a:	mov    esp,ecx
  40710c:	inc    esp
  40710d:	mov    edi,0x92d89837
  407112:	cmp    dh,BYTE PTR [eax+0x54687514]
  407118:	es dec edi
  40711a:	jne    0x4070c5
  40711c:	add    BYTE PTR [ebp+0x7431c09f],bl
  407122:	scas   al,BYTE PTR es:[edi]
  407123:	lods   al,BYTE PTR ds:[esi]
  407124:	jp     0x407159
  407126:	dec    edi
  407127:	mov    ebx,0xc45a6862
  40712c:	jae    0x40718b
  40712e:	out    dx,eax
  40712f:	shl    BYTE PTR [eax],cl
  407131:	adc    eax,0x46004949
  407136:	cmp    DWORD PTR [esi-0x20],ecx
  407139:	cmp    bh,dl
  40713b:	push   eax
  40713c:	sub    al,0x2c
  40713e:	pop    edi
  40713f:	xor    DWORD PTR [si-0x5bfa],esi
  407144:	dec    ebp
  407145:	pop    ecx
  407146:	push   0x2d
  407148:	add    BYTE PTR [edx+0x47df5a59],0xad
  40714f:	cwde   
  407150:	cli    
  407151:	ret    
  407152:	mov    esp,0x65656cb3
  407157:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407158:	aad    0xd4
  40715a:	and    cl,BYTE PTR [edi-0x1196689f]
  407160:	out    dx,al
  407161:	mov    DWORD PTR [eax+0x33e68eb2],esp
  407167:	jl     0x407195
  407169:	sub    esp,DWORD PTR [ecx-0x3da65d38]
  40716f:	(bad)  
  407170:	out    dx,al
  407171:	cmp    esi,DWORD PTR [ebx-0x58]
  407174:	jne    0x407114
  407176:	outs   dx,BYTE PTR ds:[esi]
  407177:	sbb    al,0x3f
  407179:	push   es
  40717a:	inc    ebp
  40717b:	das    
  40717c:	mov    DWORD PTR [ebx-0x3b],esp
  40717f:	fnsave [ecx]
  407181:	mov    ds:0x1a85d870,al
  407186:	sub    BYTE PTR [edx-0x6],al
  407189:	and    DWORD PTR [esi+0x1b],ebx
  40718c:	retf   
  40718d:	iret   
  40718e:	xchg   ebx,ebx
  407190:	sub    bh,dh
  407192:	es push ebx
  407194:	call   0xd10b:0x2901c055
  40719b:	std    
  40719c:	int    0x97
  40719e:	dec    esi
  40719f:	xchg   ebp,edx
  4071a1:	sbb    eax,0x3ef297ef
  4071a6:	adc    BYTE PTR [ebx-0x4293cca7],bh
  4071ac:	mov    edi,0xd5b8362
  4071b1:	add    bl,BYTE PTR [edi+0x7c]
  4071b4:	and    al,bh
  4071b6:	xor    edx,DWORD PTR [edx-0x265fd080]
  4071bc:	ja     0x407236
  4071be:	mov    BYTE PTR [eax],0x68
  4071c1:	mov    ebx,0x8d1f0c07
  4071c6:	jo     0x407184
  4071c8:	inc    edi
  4071c9:	cmp    al,0x0
  4071cb:	hlt    
  4071cc:	in     eax,0x92
  4071ce:	add    cl,BYTE PTR [edi+0x7874ad97]
  4071d4:	mov    eax,0x35b16dd2
  4071d9:	(bad)  
  4071da:	pop    eax
  4071db:	ins    DWORD PTR es:[edi],dx
  4071dc:	iret   
  4071dd:	mov    ah,0xd6
  4071df:	inc    edx
  4071e0:	outs   dx,BYTE PTR ds:[esi]
  4071e1:	and    dh,BYTE PTR [edx-0x29]
  4071e4:	hlt    
  4071e5:	or     DWORD PTR [esi-0x2d24e8e6],0xffffff91
  4071ec:	pop    edx
  4071ed:	xor    esp,esp
  4071ef:	cmp    ch,BYTE PTR [eiz*8-0x5e0e63f9]
  4071f6:	fisub  WORD PTR [edi]
  4071f8:	add    bh,0xa3
  4071fb:	dec    ecx
  4071fc:	int3   
  4071fd:	jnp    0x407254
  4071ff:	out    0x8c,eax
  407201:	push   ebp
  407202:	mov    bl,0x1a
  407204:	int    0x66
  407206:	and    al,dh
  407208:	or     BYTE PTR [ebx],0x9e
  40720b:	ret    0xb201
  40720e:	jbe    0x40721f
  407210:	fucomip st,st(7)
  407212:	sbb    eax,0xab8ca5d6
  407217:	je     0x407206
  407219:	shr    al,1
  40721b:	nop
  40721c:	(bad)  
  40721d:	daa    
  40721e:	jg     0x40723d
  407220:	jmp    0x4071c9
  407222:	not    DWORD PTR [edx+ebp*2-0x5b]
  407226:	lock sub al,0x40
  407229:	mov    bl,0x8
  40722b:	scas   eax,DWORD PTR es:[edi]
  40722c:	jbe    0x407243
  40722e:	stos   DWORD PTR es:[edi],eax
  40722f:	les    eax,FWORD PTR [edi-0x1f]
  407232:	das    
  407233:	fnstcw WORD PTR ds:0x8306c544
  407239:	pop    ebx
  40723a:	mov    bh,0xe0
  40723c:	mov    bl,0x70
  40723e:	sar    BYTE PTR [esi-0x59a75509],1
  407244:	add    ebp,edx
  407246:	xchg   ebp,eax
  407247:	sar    BYTE PTR [edi],1
  407249:	xchg   ebx,eax
  40724a:	and    ecx,DWORD PTR [ecx+0x51]
  40724d:	sbb    eax,0x1178a14a
  407252:	or     eax,0x591b6825
  407257:	outs   dx,BYTE PTR ds:[esi]
  407258:	std    
  407259:	sti    
  40725a:	xor    eax,0x81d15bca
  40725f:	pop    es
  407260:	mov    edx,?
  407262:	sbb    ah,BYTE PTR [edx+0x318a6329]
  407268:	aad    0xc
  40726a:	push   ds
  40726b:	pop    ds
  40726c:	pmullw mm7,QWORD PTR [esi+0x5f8c7b10]
  407273:	inc    ebp
  407274:	adc    BYTE PTR [ecx+0x4a],ah
  407277:	mov    ebp,ebp
  407279:	sub    eax,0x4d27e13c
  40727e:	(bad)  
  407280:	and    al,0x57
  407282:	sub    ebx,0x36856bfe
  407288:	ret    0x4a23
  40728b:	je     0x40722d
  40728d:	push   ebx
  40728e:	and    ebp,DWORD PTR [esi+0x5916dc90]
  407294:	aam    0x20
  407296:	mov    bh,0xb9
  407298:	outs   dx,DWORD PTR ds:[esi]
  407299:	push   edx
  40729a:	xor    bh,BYTE PTR [edx]
  40729c:	je     0x407282
  40729e:	jae    0x407236
  4072a0:	test   BYTE PTR [ebx],dh
  4072a2:	lock nop
  4072a4:	or     DWORD PTR [esi+edx*8],ecx
  4072a7:	adc    cl,BYTE PTR [ebp-0x4ec0cdf1]
  4072ad:	(bad)  
  4072af:	add    ah,bl
  4072b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072b2:	jb     0x4072da
  4072b4:	sub    ch,BYTE PTR [ebp+0xd]
  4072b7:	je     0x4072c8
  4072b9:	imul   BYTE PTR [esi+ebp*1+0x3a]
  4072bd:	stc    
  4072be:	jnp    0x407249
  4072c0:	cmp    eax,DWORD PTR [edi+0x1c]
  4072c3:	cdq    
  4072c4:	dec    esp
  4072c5:	cmp    edx,edx
  4072c7:	add    eax,0xc952d711
  4072cc:	inc    edi
  4072cd:	mov    bl,0xfd
  4072cf:	sar    ecx,0x1e
  4072d2:	std    
  4072d3:	jmp    0xbff6f252
  4072d8:	(bad)  [ebp+0x4f]
  4072db:	cmp    ch,bh
  4072dd:	shl    BYTE PTR [eax+0x55],cl
  4072e0:	xor    bl,ah
  4072e2:	cs pop es
  4072e4:	xlat   BYTE PTR ds:[ebx]
  4072e5:	adc    DWORD PTR [ebx],esp
  4072e7:	push   0x5d
  4072e9:	sbb    DWORD PTR [esi+0x515b6352],esi
  4072ef:	scas   eax,DWORD PTR es:[edi]
  4072f0:	fldcw  WORD PTR [ecx-0x26]
  4072f3:	fbstp  TBYTE PTR [edi-0x2694281d]
  4072f9:	dec    esp
  4072fa:	push   edx
  4072fb:	fwait
  4072fc:	cmp    edi,ecx
  4072fe:	cmp    esi,DWORD PTR [ecx+0x3d]
  407301:	xor    eax,0xe3211fa8
  407306:	push   ebp
  407307:	and    dh,cl
  407309:	inc    ecx
  40730a:	cmp    ch,ch
  40730c:	push   0xffffffaf
  40730e:	pop    edi
  40730f:	out    0xc5,al
  407311:	dec    ecx
  407312:	(bad)  
  407313:	fnstsw WORD PTR [edi]
  407315:	pusha  
  407316:	pop    esi
  407317:	(bad)  
  407318:	in     al,dx
  407319:	ret    
  40731a:	mov    ebp,0x29cf3a1f
  40731f:	sub    al,0x3
  407321:	jle    0x4072df
  407323:	aam    0x79
  407325:	ror    DWORD PTR [edx+0x66698340],0x46
  40732c:	mov    WORD PTR [ebx+0x76],ds
  40732f:	sahf   
  407330:	mov    al,0x80
  407332:	and    eax,0x5a01a7d0
  407337:	mov    WORD PTR [eax+0x22],ss
  40733a:	pushf  
  40733b:	or     DWORD PTR [ebx+0x52],ebp
  40733e:	xchg   esi,eax
  40733f:	add    eax,0x9d89f055
  407344:	push   esp
  407345:	jno    0x407381
  407347:	(bad)
  40734a:	inc    eax
  40734b:	sar    DWORD PTR [esi+0x1a],0x59
  40734f:	lock pop es
  407351:	stc    
  407352:	nop
  407353:	xchg   BYTE PTR [ecx],bh
  407355:	add    edi,edi
  407357:	rcl    BYTE PTR [edx+0x7],1
  40735a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40735b:	jmp    0x617e:0x97347d27
  407362:	dec    esp
  407363:	pop    ecx
  407364:	inc    esp
  407365:	in     eax,dx
  407366:	mul    ebx
  407368:	outs   dx,DWORD PTR ds:[esi]
  407369:	jge    0x4072f7
  40736b:	retf   
  40736c:	scas   eax,DWORD PTR es:[edi]
  40736d:	dec    edi
  40736e:	mov    ch,0x6f
  407370:	jnp    0x407353
  407372:	jae    0x40730f
  407374:	sar    BYTE PTR [eax],1
  407376:	gs in  eax,0x4d
  407379:	(bad)  
  40737a:	cmp    esp,edi
  40737c:	imul   esp,DWORD PTR [edx+0x4f],0x6d
  407380:	ret    
  407381:	out    dx,al
  407382:	push   cs
  407383:	outs   dx,DWORD PTR ds:[esi]
  407384:	aaa    
  407385:	shld   DWORD PTR [esi-0x4bca9c0],esp,cl
  40738c:	int3   
  40738d:	retf   0xed9e
  407390:	test   BYTE PTR [eax-0x71],al
  407393:	les    ebp,FWORD PTR [esi-0x54]
  407396:	pop    esp
  407397:	arpl   WORD PTR [edi],bx
  407399:	aad    0x8d
  40739b:	or     esi,DWORD PTR [edi+0x751a8469]
  4073a1:	pop    es
  4073a2:	sti    
  4073a3:	or     al,0x33
  4073a5:	sub    eax,0x52859257
  4073aa:	je     0x4073a0
  4073ac:	in     eax,dx
  4073ad:	push   ds
  4073ae:	mov    WORD PTR [esi],ss
  4073b0:	mov    bl,BYTE PTR [edx]
  4073b2:	xchg   DWORD PTR [ebp+0x5f],edx
  4073b5:	test   BYTE PTR [ebp+0x50],bl
  4073b8:	rep outs dx,DWORD PTR ds:[esi]
  4073ba:	and    DWORD PTR [esi+edx*4+0x49447d0a],0x6356d951
  4073c5:	sbb    al,0x9f
  4073c7:	lods   eax,DWORD PTR ds:[esi]
  4073c8:	push   es
  4073c9:	clc    
  4073ca:	mov    eax,0xcfb49d96
  4073cf:	mov    edi,0x16fb0936
  4073d4:	ret    0x7cbd
  4073d7:	push   edx
  4073d8:	sti    
  4073d9:	repz adc bl,dh
  4073dc:	jmp    0x90f88307
  4073e1:	inc    ecx
  4073e2:	pop    esp
  4073e3:	or     dh,BYTE PTR [eax-0x29]
  4073e6:	sbb    al,0x5f
  4073e8:	fnstsw WORD PTR [edx+esi*8+0x3]
  4073ec:	jb     0x4073fe
  4073ee:	inc    ecx
  4073ef:	mov    bh,0x4d
  4073f2:	lock mul al
  4073f5:	outs   dx,DWORD PTR ds:[esi]
  4073f6:	jge    0x4073f8
  4073f8:	fnstenv [edi+0x6e]
  4073fb:	push   0xffffffa3
  4073fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073fe:	call   0x325a5d2b
  407403:	je     0x4073cc
  407405:	lock lds edx,FWORD PTR [eax-0x66]
  407409:	pop    es
  40740a:	rcl    BYTE PTR [ebp+0x3f13f00c],cl
  407410:	xor    cl,BYTE PTR [ebx+ebx*1-0x69a9a2e7]
  407417:	cs gs sahf 
  40741a:	inc    edx
  40741b:	into   
  40741c:	imul   edx,ebp,0x7f24ce1b
  407422:	jmp    0x407451
  407424:	es leave 
  407426:	out    0x51,al
  407428:	ret    
  407429:	sub    al,0xc1
  40742b:	xor    dh,BYTE PTR [ecx+eax*8-0x217f48e5]
  407432:	pushf  
  407433:	and    eax,0x1a942656
  407438:	pop    ebp
  407439:	int3   
  40743a:	jae    0x4073e3
  40743c:	popa   
  40743d:	push   ecx
  40743e:	mov    esp,0x8bc43bfa
  407443:	in     al,0x41
  407445:	in     al,dx
  407446:	mov    cl,0x5e
  407448:	test   eax,0x12203ff
  40744d:	inc    edx
  40744e:	push   0xfffffff0
  407450:	dec    ecx
  407451:	rcl    BYTE PTR [ebp+0x623880cc],0x56
  407458:	cmp    al,0x7a
  40745a:	pop    ebx
  40745b:	clc    
  40745c:	cli    
  40745d:	mov    eax,ds:0x9b056699
  407462:	cmp    ah,dh
  407464:	and    ecx,DWORD PTR [edi]
  407466:	icebp  
  407467:	cwde   
  407468:	push   ebx
  407469:	mov    eax,ds:0x9636e3b
  40746e:	mov    ecx,0xcc26c8f6
  407473:	loopne 0x4074ba
  407475:	xor    bh,al
  407477:	cmp    BYTE PTR [esi+0xc],ah
  40747a:	mov    ecx,0xdee6a577
  40747f:	mov    edi,0x251576ed
  407484:	xchg   DWORD PTR [eax+edi*2],ebp
  407487:	data16 and BYTE PTR [edx+ecx*2+0x5eaad58b],dh
  40748f:	inc    ebx
  407490:	fs aam 0x20
  407493:	jbe    0x4074b5
  407495:	xchg   esp,eax
  407496:	push   ebx
  407497:	outs   dx,BYTE PTR ds:[esi]
  407498:	mov    BYTE PTR es:[ebx+0x1d],0xac
  40749d:	jl     0x4074d8
  40749f:	call   0x734c:0x59f9c346
  4074a6:	ret    0x5fc2
  4074a9:	push   ecx
  4074aa:	cdq    
  4074ab:	push   cs
  4074ac:	dec    edi
  4074ad:	pop    ecx
  4074ae:	xor    eax,0x2e8625b3
  4074b3:	ds inc edi
  4074b5:	inc    esp
  4074b6:	dec    edi
  4074b7:	mov    WORD PTR [eax-0x354e887c],ss
  4074bd:	jmp    0x40746d
  4074bf:	jmp    0x4e61:0xd8662160
  4074c6:	jl     0x407520
  4074c8:	mov    DWORD PTR [ebp+eiz*2-0x5d],esp
  4074cc:	pop    ss
  4074cd:	mov    esp,0x67088b
  4074d2:	lahf   
  4074d3:	into   
  4074d4:	arpl   WORD PTR [eax-0x16],cx
  4074d7:	mov    ds:0x48c1a9d0,eax
  4074dc:	inc    eax
  4074dd:	jno    0x4074c8
  4074df:	pop    es
  4074e0:	dec    esi
  4074e1:	push   es
  4074e2:	xor    eax,DWORD PTR [ebp-0x34]
  4074e5:	sub    al,0x35
  4074e7:	loop   0x4074e1
  4074e9:	and    eax,0x50f8a267
  4074ee:	lods   al,BYTE PTR ds:[esi]
  4074ef:	out    0x7b,al
  4074f1:	test   dh,0x3a
  4074f4:	cdq    
  4074f5:	jne    0x4074dc
  4074f7:	es mov cl,0x91
  4074fa:	in     al,0x9e
  4074fc:	cmp    eax,0xfe76dd37
  407501:	jo     0x4074ef
  407503:	sbb    bh,dl
  407505:	fcmovbe st,st(5)
  407507:	into   
  407508:	js     0x407517
  40750a:	pop    ds
  40750b:	fs or  al,0x70
  40750e:	cwde   
  40750f:	jnp    0x4074a4
  407511:	jl     0x4074e6
  407513:	adc    edx,ecx
  407515:	js     0x4074d5
  407517:	ds aaa 
  407519:	jge    0x4074e5
  40751b:	dec    esp
  40751c:	ins    DWORD PTR es:[edi],dx
  40751d:	jmp    0xe2cc:0xbd6a510e
  407524:	std    
  407525:	mov    ah,0x90
  407527:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407528:	mov    ch,0x28
  40752a:	(bad)  
  40752b:	jmp    0x40754b
  40752d:	sub    eax,eax
  40752f:	push   es
  407530:	fild   WORD PTR [esi+0x12]
  407533:	retf   0xa5c3
  407536:	xor    eax,0x60a016e2
  40753b:	pushf  
  40753c:	adc    BYTE PTR [edi+ebx*2],al
  40753f:	or     bl,BYTE PTR [edx]
  407541:	adc    eax,0xb0627a15
  407546:	fmul   QWORD PTR [ebp+0x59220863]
  40754c:	push   ebp
  40754d:	adc    BYTE PTR [ecx],ch
  40754f:	fwait
  407550:	add    al,0x9e
  407552:	mov    ah,0xa3
  407554:	inc    ecx
  407555:	cld    
  407556:	adc    edi,DWORD PTR [ebp-0x5e]
  407559:	push   edx
  40755a:	mov    dh,0x67
  40755c:	or     al,0xda
  40755e:	out    0x96,al
  407560:	and    BYTE PTR [ebp-0x214fc9b7],ah
  407566:	mov    ds:0x9a46765,al
  40756b:	sbb    BYTE PTR [edx],dh
  40756d:	xor    BYTE PTR [esi],0x7
  407570:	rcr    DWORD PTR [eax-0x526f3690],0xaa
  407577:	sub    eax,0x6fb8e02b
  40757c:	jmp    0x4075b6
  40757e:	cs dec esi
  407580:	(bad)  
  407582:	arpl   dx,sp
  407584:	pop    ss
  407585:	or     esp,esi
  407587:	fisub  WORD PTR [eax]
  407589:	add    al,0x91
  40758b:	adc    ah,al
  40758d:	vmread DWORD PTR [ecx+0x2150393e],ebp
  407594:	outs   dx,BYTE PTR ds:[esi]
  407595:	ins    DWORD PTR es:[edi],dx
  407596:	dec    ebp
  407597:	cmp    ecx,DWORD PTR [ebx+0x165db34e]
  40759d:	jno    0x40758f
  40759f:	loope  0x40760c
  4075a1:	inc    esi
  4075a2:	jbe    0xcb3a7abf
  4075a8:	sahf   
  4075a9:	cmp    eax,0x31b0d19b
  4075ae:	int    0x2b
  4075b0:	push   ebp
  4075b1:	mov    ebp,0x808a7d0a
  4075b6:	ret    0x5661
  4075b9:	jns    0x4075ac
  4075bb:	mov    dl,0x32
  4075bd:	cmp    BYTE PTR [esi+0x2fb20d07],dl
  4075c3:	push   es
  4075c4:	mov    WORD PTR [ecx-0x3d927104],ds
  4075ca:	out    dx,al
  4075cb:	stos   BYTE PTR es:[edi],al
  4075cc:	push   0x4316451e
  4075d1:	xchg   ecx,eax
  4075d2:	mov    WORD PTR [esi],?
  4075d4:	xchg   BYTE PTR [esi],bh
  4075d6:	add    BYTE PTR [edi-0x81ebfb7],cl
  4075dc:	in     eax,0x7e
  4075de:	repnz sbb ebx,ecx
  4075e1:	pop    ds
  4075e2:	cwde   
  4075e3:	pop    esp
  4075e4:	in     eax,dx
  4075e5:	(bad)  
  4075e6:	sbb    esp,DWORD PTR [edx]
  4075e8:	fisttp QWORD PTR [ebx]
  4075ea:	hlt    
  4075eb:	(bad)  ss:[edi+0x7c59bc02]
  4075f2:	xor    al,0x6e
  4075f4:	xlat   BYTE PTR ds:[ebx]
  4075f5:	pushf  
  4075f6:	mov    BYTE PTR [esp+ebp*1],dh
  4075f9:	dec    ecx
  4075fb:	lahf   
  4075fc:	xchg   edx,eax
  4075fe:	mov    esi,0x5f4adf6
  407603:	outs   dx,DWORD PTR ds:[esi]
  407604:	mov    ebp,0x4b4bd93d
  407609:	ins    DWORD PTR es:[edi],dx
  40760a:	push   esi
  40760b:	sub    ch,BYTE PTR [esi]
  40760d:	xchg   esp,eax
  40760e:	adc    eax,0xeb444c94
  407613:	push   es
  407614:	mov    eax,ds:0x91e84772
  407619:	call   0x252c:0x64d3d72
  407620:	jecxz  0x407686
  407622:	mov    gs,WORD PTR [ebx-0x12f88246]
  407628:	popa   
  407629:	dec    edx
  40762a:	and    bh,BYTE PTR [edx+0x28]
  40762d:	mulps  xmm6,xmm1
  407630:	fnstsw WORD PTR [ebx-0x40]
  407633:	push   ebx
  407634:	imul   BYTE PTR [ecx+0x37]
  407637:	xchg   ebp,eax
  407638:	xor    dh,BYTE PTR [eax]
  40763a:	and    BYTE PTR [ecx-0x4d988f68],cl
  407640:	jns    0x4075f4
  407642:	push   ecx
  407643:	mov    ecx,0x1759b826
  407648:	aam    0xcb
  40764a:	imul   ecx,DWORD PTR [ebp-0x4b41f009],0x48c13f94
  407654:	aam    0x2d
  407656:	sbb    esi,DWORD PTR [ebp+edx*1+0x19]
  40765a:	cmp    DWORD PTR [edi-0x6a539139],ecx
  407660:	jle    0x407626
  407662:	sbb    DWORD PTR [edx],ebx
  407664:	add    DWORD PTR [bx],esi
  407667:	jmp    0x6a3ad489
  40766c:	test   eax,edx
  40766e:	sbb    esi,eax
  407670:	stos   BYTE PTR es:[edi],al
  407671:	dec    esp
  407672:	scas   eax,DWORD PTR es:[edi]
  407673:	sbb    BYTE PTR [ecx],ch
  407675:	pop    ebp
  407676:	jae    0x40765b
  407678:	inc    ebx
  407679:	xchg   ebp,eax
  40767a:	and    eax,0xa6b0058c
  40767f:	test   DWORD PTR [edi],0x1423734e
  407685:	mov    ah,0x35
  407687:	adc    DWORD PTR gs:[esi+0x6c],esp
  40768b:	leave  
  40768c:	test   BYTE PTR [ecx+0x51651888],bh
  407692:	pusha  
  407693:	and    BYTE PTR [ecx+0x76410e23],dl
  407699:	leave  
  40769a:	es inc edi
  40769c:	and    dl,BYTE PTR [ecx+0xd216e67]
  4076a2:	jno    0x4076b1
  4076a4:	push   ebp
  4076a5:	gs iret 
  4076a7:	je     0x4076ae
  4076a9:	push   es
  4076aa:	inc    ebx
  4076ab:	mov    ds:0x36e8215f,al
  4076b0:	pop    ecx
  4076b1:	cld    
  4076b2:	(bad)  
  4076b3:	clc    
  4076b4:	jmp    0x40771d
  4076b6:	pop    ecx
  4076b7:	out    dx,eax
  4076b8:	test   DWORD PTR [edx],0x3a244a08
  4076be:	enter  0xf104,0xe6
  4076c2:	and    BYTE PTR [ecx],dh
  4076c4:	hlt    
  4076c5:	and    ecx,ebx
  4076c7:	pop    edx
  4076c8:	ja     0x407659
  4076ca:	push   eax
  4076cb:	add    BYTE PTR [ebp-0x7be67436],cl
  4076d1:	retf   0x7c10
  4076d4:	mov    ah,0xc4
  4076d6:	jne    0x4076a6
  4076d8:	xor    al,BYTE PTR [esi]
  4076da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076db:	daa    
  4076dc:	aam    0x29
  4076de:	inc    edx
  4076df:	and    DWORD PTR [ecx-0x5],esi
  4076e2:	fsub   QWORD PTR [eax-0x6b]
  4076e5:	adc    ecx,edi
  4076e7:	ja     0x40774d
  4076e9:	(bad)  
  4076ea:	out    0x75,eax
  4076ec:	push   ecx
  4076ed:	in     eax,0x4a
  4076ef:	mov    dh,0x62
  4076f1:	lea    ebx,[edx-0x2a]
  4076f4:	sti    
  4076f5:	cmp    ah,dh
  4076f7:	(bad)  
  4076f8:	and    ecx,DWORD PTR [ecx-0x34]
  4076fb:	push   ecx
  4076fc:	popa   
  4076fd:	(bad)  
  4076ff:	ret    
  407700:	lahf   
  407701:	or     eax,esp
  407703:	daa    
  407704:	stos   BYTE PTR es:[edi],al
  407705:	sub    eax,0x38e3d136
  40770a:	xchg   edi,eax
  40770b:	stos   DWORD PTR es:[edi],eax
  40770c:	or     edx,DWORD PTR [ebp-0x4c]
  40770f:	xchg   ecx,eax
  407710:	xchg   ebp,eax
  407711:	cwde   
  407712:	bound  edi,QWORD PTR [ecx-0xa]
  407715:	adc    bl,BYTE PTR [ecx]
  407717:	pop    edx
  407718:	jbe    0x407764
  40771a:	inc    ecx
  40771b:	push   eax
  40771c:	and    edx,DWORD PTR [ebx+eiz*2+0x67515990]
  407723:	mov    esi,0x92cf670f
  407728:	mov    dl,BYTE PTR [edx-0x60b0ef9e]
  40772e:	rol    BYTE PTR [esi+eax*1+0x7a],0x7f
  407733:	push   es
  407734:	daa    
  407735:	adc    DWORD PTR [edi],ebx
  407737:	add    al,BYTE PTR [esi]
  407739:	push   edx
  40773a:	push   esi
  40773b:	or     al,0xd4
  40773d:	push   ds
  40773e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40773f:	sbb    al,0x65
  407741:	loope  0x4076f6
  407743:	sub    BYTE PTR [ecx+0x41],0x7d
  407747:	adc    edx,esp
  407749:	into   
  40774a:	jecxz  0x407767
  40774c:	add    eax,0xfe99ecd5
  407751:	adc    BYTE PTR [edx+eax*4],0x70
  407755:	repnz daa 
  407757:	jns    0x407724
  407759:	cdq    
  40775a:	xchg   DWORD PTR [ecx+0x5a],edx
  40775d:	(bad)  
  40775f:	jle    0x4077c2
  407761:	(bad)  
  407762:	scas   eax,DWORD PTR es:[edi]
  407763:	jecxz  0x4077d4
  407765:	sbb    BYTE PTR [edx],ch
  407767:	xor    ah,BYTE PTR [edi]
  407769:	clc    
  40776a:	xadd   DWORD PTR [edi],ecx
  40776d:	popw   ds
  40776f:	call   0x73ba:0x5e11dc28
  407776:	int3   
  407777:	adc    BYTE PTR [edi],0xe4
  40777a:	push   esi
  40777b:	cmc    
  40777c:	sbb    BYTE PTR [edi+0x469788a2],al
  407782:	fwait
  407783:	test   DWORD PTR [edi+0x2c],0x1cc7e567
  40778a:	imul   ebx,DWORD PTR [ebx],0xff65e70f
  407790:	xor    al,0x44
  407792:	gs jmp 0x9a3c:0x44ce3228
  40779a:	test   DWORD PTR [eax-0x1c4b1886],0x5d2fbb6d
  4077a4:	sub    eax,0x8e69bc73
  4077a9:	daa    
  4077aa:	js     0x407814
  4077ac:	mov    edi,0x94e7bfa6
  4077b1:	in     eax,0x40
  4077b3:	dec    ebp
  4077b4:	pushf  
  4077b5:	push   esi
  4077b6:	mov    BYTE PTR [eax+0x1963f061],bl
  4077bc:	dec    ebp
  4077bd:	push   ebx
  4077be:	cmc    
  4077bf:	fild   DWORD PTR [ebp+0xd]
  4077c2:	leave  
  4077c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077c4:	sahf   
  4077c5:	mov    ebx,0x5b486a2d
  4077ca:	mov    esp,0x3ad2cb7c
  4077cf:	xchg   edx,eax
  4077d0:	xchg   esp,eax
  4077d1:	ror    cl,cl
  4077d3:	sbb    ebx,ecx
  4077d5:	push   edi
  4077d6:	out    dx,al
  4077d7:	iret   
  4077d8:	fistp  WORD PTR [eax-0x7c8361e2]
  4077de:	sub    al,0x8
  4077e0:	bound  esi,QWORD PTR ds:0x37a8cd60
  4077e6:	cmc    
  4077e7:	jmp    0x407800
  4077e9:	jmp    0x4077e4
  4077eb:	call   0x852e8ee3
  4077f0:	push   edi
  4077f1:	ret    0xc32
  4077f4:	jns    0x4077f4
  4077f6:	pop    ds
  4077f7:	jo     0x4077f7
  4077f9:	cmp    ah,BYTE PTR [edx+0x3da6084b]
  4077ff:	rol    DWORD PTR [eax+0x3c780b0],cl
  407805:	sbb    eax,0x82fd2a69
  40780a:	xor    BYTE PTR [esi],ah
  40780c:	sbb    BYTE PTR fs:[ebp+0x5d39b030],ah
  407813:	jno    0x40781c
  407815:	fdiv   QWORD PTR [ebx]
  407817:	icebp  
  407818:	sbb    eax,0x3d36a70d
  40781d:	ror    dh,0xa8
  407820:	cld    
  407821:	pop    edx
  407822:	or     dh,dh
  407824:	or     BYTE PTR [ebp-0x46],0x24
  407828:	mov    es,WORD PTR [ebx]
  40782a:	pusha  
  40782b:	lods   al,BYTE PTR ds:[esi]
  40782c:	mov    edx,0x9dae6c72
  407831:	dec    edx
  407832:	sub    esp,ecx
  407834:	jno    0x4077d8
  407836:	cld    
  407837:	or     eax,0x23bbfd11
  40783c:	inc    ebp
  40783d:	enter  0xda99,0x5a
  407841:	imul   edi,DWORD PTR es:[ebp+0x17],0xffffffc9
  407846:	in     eax,dx
  407847:	dec    edi
  407848:	imul   ecx,DWORD PTR [edx-0x54996ba0],0xbf7bf2fb
  407852:	loop   0x4078b5
  407854:	mov    eax,ds:0x3c83e7f3
  407859:	mov    eax,0x7e821f56
  40785e:	ins    BYTE PTR es:[edi],dx
  40785f:	cwde   
  407860:	xchg   edx,eax
  407861:	jb     0x407895
  407863:	pop    esp
  407864:	cmp    cl,cl
  407866:	mov    bl,0xe9
  407868:	fdivp  st(5),st
  40786a:	cmc    
  40786b:	pop    ss
  40786c:	jp     0x40785a
  40786e:	or     esi,DWORD PTR [esi-0x57c36ee8]
  407874:	cdq    
  407875:	out    0xc2,al
  407877:	or     eax,0xb0d6eedb
  40787c:	ficomp WORD PTR [ecx+0x4cdc5296]
  407882:	jmp    0xd265:0xe23f0f51
  407889:	cmp    eax,0x9d5698bc
  40788e:	imul   eax,DWORD PTR [ebp+0x74],0xffffffba
  407892:	sub    al,0xdd
  407894:	call   0x838e843
  407899:	imul   edi,DWORD PTR [ebp-0x5a],0xffffffa0
  40789d:	sbb    BYTE PTR [edx],dl
  40789f:	ins    BYTE PTR es:[edi],dx
  4078a0:	adc    al,0xfe
  4078a2:	jmp    FWORD PTR [edi]
  4078a4:	sahf   
  4078a5:	pushf  
  4078a6:	mov    bl,0x42
  4078a8:	aam    0x84
  4078aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078ab:	mov    ecx,DWORD PTR [eax]
  4078ad:	popf   
  4078ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078af:	hlt    
  4078b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078b1:	mov    ds:0x474bddd1,al
  4078b6:	fcom   QWORD PTR [ebx]
  4078b8:	or     DWORD PTR [edx+0x46],0x1f2bb09f
  4078bf:	pop    esi
  4078c0:	dec    ecx
  4078c1:	jbe    0x40786d
  4078c3:	lahf   
  4078c4:	push   edx
  4078c5:	sahf   
  4078c6:	pcmpgtw mm0,QWORD PTR [esi+0x47]
  4078ca:	xor    BYTE PTR [ebp+0x4153ceb1],al
  4078d0:	iret   
  4078d1:	pop    ds
  4078d2:	mov    ch,0x46
  4078d4:	hlt    
  4078d5:	out    0xb7,al
  4078d7:	rcr    edi,cl
  4078d9:	and    bh,bl
  4078db:	mov    DWORD PTR [ecx-0x5bb1e825],edi
  4078e1:	mov    edx,0x9b9ceec0
  4078e6:	add    al,0xc
  4078e8:	clc    
  4078e9:	aad    0x3d
  4078eb:	fimul  WORD PTR [ecx-0x76]
  4078ee:	push   cs
  4078ef:	pop    esp
  4078f0:	mov    ds:0xf8638b1b,al
  4078f5:	mov    bh,0x98
  4078f7:	cdq    
  4078f8:	rcr    DWORD PTR [ebx],1
  4078fa:	jmp    0x907f81dd
  4078ff:	pop    eax
  407900:	xor    al,0x9f
  407902:	sub    ebx,ecx
  407904:	lods   al,BYTE PTR ds:[esi]
  407905:	movzx  edx,dx
  407908:	rcl    ecx,0x11
  40790b:	test   BYTE PTR [esi+0x5cc5488f],0xe0
  407912:	imul   ecx,DWORD PTR [esi+0x24],0x274df2cf
  407919:	in     eax,0x96
  40791b:	pop    ecx
  40791c:	jmp    0x4078e1
  40791e:	adc    ecx,DWORD PTR [ebx]
  407920:	sbb    cl,BYTE PTR [ecx]
  407922:	ja     0x4078e5
  407924:	fsub   DWORD PTR [ebx-0x3a]
  407927:	jg     0x407963
  407929:	mov    edi,0x1c1a6cca
  40792e:	clc    
  40792f:	pop    eax
  407930:	sbb    al,0xa6
  407932:	cmp    al,0xf1
  407934:	inc    esi
  407935:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407936:	sbb    ecx,DWORD PTR [edi-0x5d]
  407939:	shl    BYTE PTR [edx],0x18
  40793c:	mov    BYTE PTR [ecx-0x4ba21c54],cl
  407942:	ins    DWORD PTR es:[edi],dx
  407943:	sub    DWORD PTR ds:[ecx-0x4d],ecx
  407947:	xor    dl,cl
  407949:	loop   0x407933
  40794b:	(bad)  [esi+0x283d0077]
  407951:	mov    al,ds:0x760416cf
  407956:	fs sti 
  407958:	mov    ds,ecx
  40795a:	stc    
  40795b:	sub    DWORD PTR [esi-0x1689c6f6],0x5
  407962:	not    ah
  407964:	xor    DWORD PTR [edi+0x6f],esi
  407967:	dec    esp
  407968:	inc    ebp
  407969:	outs   dx,DWORD PTR ds:[esi]
  40796a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40796b:	or     al,0xd3
  40796d:	int    0x99
  40796f:	out    dx,al
  407970:	inc    eax
  407971:	push   ecx
  407972:	ret    0x4de0
  407975:	dec    edi
  407976:	jmp    0xc4abe440
  40797b:	out    dx,al
  40797c:	lods   eax,DWORD PTR ds:[esi]
  40797d:	into   
  40797e:	out    0x12,eax
  407980:	and    DWORD PTR [eax],0x66
  407983:	push   edi
  407984:	pop    ebp
  407985:	push   0x3
  407987:	(bad)
  40798a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40798b:	fisub  DWORD PTR [ebp-0x55]
  40798e:	add    eax,DWORD PTR [eax]
  407990:	imul   ecx,DWORD PTR [ebp+0x15816274],0xf67ebd61
  40799a:	addr16 icebp 
  40799c:	ss add eax,0x76fa3142
  4079a2:	or     edx,ebp
  4079a4:	fcmove st,st(6)
  4079a6:	jnp    0x4079ab
  4079a8:	jne    0x4079e3
  4079aa:	pop    es
  4079ab:	xor    bl,BYTE PTR [edx+0x21da1c53]
  4079b1:	cwde   
  4079b2:	xor    al,0x65
  4079b4:	dec    edi
  4079b5:	mov    eax,ds:0xfba038d1
  4079ba:	out    dx,al
  4079bb:	call   0x66bd:0x8b620f12
  4079c2:	dec    esi
  4079c3:	xor    al,0x25
  4079c5:	and    DWORD PTR [ebx+0x30],ecx
  4079c8:	sbb    edx,DWORD PTR [ebx-0x4adc7fa8]
  4079ce:	mov    eax,0x83c6d712
  4079d3:	outs   dx,DWORD PTR ds:[esi]
  4079d4:	outs   dx,BYTE PTR ds:[esi]
  4079d5:	enter  0xaed9,0xd5
  4079d9:	sub    esp,esi
  4079db:	int3   
  4079dc:	aad    0xf8
  4079de:	sub    dh,al
  4079e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079e1:	in     al,0x48
  4079e3:	mov    bh,0x76
  4079e5:	xor    esi,DWORD PTR [eax-0x32]
  4079e8:	jmp    0x4079ba
  4079ea:	mov    dl,0xd1
  4079ec:	arpl   WORD PTR [ecx+0x77437b95],bx
  4079f2:	xacquire xchg DWORD PTR [eax-0x2641f6bc],edx
  4079f9:	pop    ecx
  4079fa:	cmc    
  4079fb:	add    al,0x63
  4079fd:	stc    
  4079fe:	xor    edi,DWORD PTR [eax]
  407a00:	mov    ebp,0x1239a8d0
  407a05:	out    dx,eax
  407a06:	fild   DWORD PTR [eax-0x62]
  407a09:	mov    WORD PTR [ebp+0x521e909],gs
  407a0f:	cmp    DWORD PTR [edx+0x6e],0x2e4a1fe7
  407a16:	std    
  407a17:	mov    ch,0x98
  407a19:	mov    DWORD PTR [eax+eiz*8],esp
  407a1c:	dec    ebx
  407a1d:	stos   BYTE PTR es:[edi],al
  407a1e:	stos   DWORD PTR es:[edi],eax
  407a1f:	pop    ecx
  407a20:	xor    al,0xb9
  407a22:	mov    dh,0x25
  407a24:	jmp    0x4896430b
  407a29:	push   edx
  407a2a:	push   0xc2c80d4a
  407a2f:	jp     0x4079c0
  407a31:	mov    dh,0x5
  407a33:	dec    ebx
  407a34:	pop    edx
  407a35:	xor    esp,edx
  407a37:	mov    eax,ds:0x9186a40
  407a3c:	div    DWORD PTR cs:[edi+0x75]
  407a40:	stc    
  407a41:	mov    ecx,0x9c9729f3
  407a46:	sbb    ch,BYTE PTR [ebp+0x20bc7d79]
  407a4c:	sub    cl,ah
  407a4e:	jl     0x407aaf
  407a50:	mov    cl,0x93
  407a52:	shl    BYTE PTR [esi+0x51],1
  407a55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a56:	div    BYTE PTR ds:0x85b2a38e
  407a5c:	dec    ebp
  407a5d:	jg     0x407a28
  407a5f:	mov    ecx,DWORD PTR [ecx+ecx*4]
  407a62:	dec    esi
  407a63:	in     al,dx
  407a64:	aas    
  407a65:	xor    eax,0xecb6a1b5
  407a6a:	sub    bh,BYTE PTR [ecx]
  407a6c:	add    cx,si
  407a6f:	sbb    esi,DWORD PTR [esi]
  407a71:	xor    eax,0x3e506c70
  407a76:	nop
  407a77:	les    edi,FWORD PTR [edx+edi*8-0x18543189]
  407a7e:	imul   ebp,DWORD PTR [ecx],0xd5cab7f3
  407a84:	add    al,0x7b
  407a86:	add    al,0x28
  407a88:	mov    ah,BYTE PTR [ebx+0xf5f18e]
  407a8e:	xchg   ebp,eax
  407a8f:	jge    0x407b06
  407a91:	adc    esp,DWORD PTR [edi]
  407a93:	inc    edi
  407a94:	call   0xd10:0xa49964b2
  407a9b:	ins    DWORD PTR es:[edi],dx
  407a9c:	push   esi
  407a9d:	inc    esp
  407a9e:	push   ebx
  407a9f:	ins    DWORD PTR es:[edi],dx
  407aa0:	fstp   DWORD PTR [ecx-0x697b88e]
  407aa6:	mov    esi,0xf17f8cb4
  407aab:	push   cs
  407aac:	sbb    ebp,DWORD PTR [ebx-0x73923cf4]
  407ab2:	cmp    ebp,DWORD PTR [ecx+0x1b9461ed]
  407ab8:	xor    BYTE PTR [eax+ebx*2+0x23],dl
  407abc:	mov    dh,BYTE PTR [edi+ebp*4+0x7c]
  407ac0:	inc    DWORD PTR gs:[ecx+ecx*1+0x4e]
  407ac5:	add    ecx,DWORD PTR [ebp-0x7d013dc1]
  407acb:	sbb    eax,0x6f7ddef
  407ad0:	adc    eax,0x93dfda82
  407ad5:	(bad)  
  407ad6:	fstp   TBYTE PTR [ecx+0xfd31321]
  407adc:	pop    es
  407add:	test   DWORD PTR [ebp-0x11],ecx
  407ae0:	repz call 0xbc832c9f
  407ae6:	xchg   ebx,eax
  407ae7:	xchg   BYTE PTR [esi+0x320e5b5d],ch
  407aed:	pop    edi
  407aee:	sub    ch,BYTE PTR [edx]
  407af0:	adc    eax,0x71a3b81c
  407af5:	pop    ds
  407af6:	jl     0x407b3f
  407af8:	(bad)  
  407af9:	dec    edi
  407afa:	shr    BYTE PTR [edi*4+0x1a1bbe05],cl
  407b01:	or     ebp,DWORD PTR [edi-0x5a4b5d50]
  407b07:	(bad)  
  407b08:	fucomip st,st(6)
  407b0a:	leave  
  407b0b:	daa    
  407b0c:	popa   
  407b0d:	hlt    
  407b0e:	mov    esp,0x8d689b85
  407b13:	ins    DWORD PTR es:[edi],dx
  407b14:	test   BYTE PTR [ebx+0x10],ch
  407b17:	or     DWORD PTR [edx-0x5c],ebx
  407b1a:	lahf   
  407b1b:	mov    ebp,0x522dbe05
  407b20:	inc    ebp
  407b21:	add    al,0xe3
  407b23:	push   eax
  407b24:	scas   al,BYTE PTR es:[edi]
  407b25:	mov    BYTE PTR [eax-0x49],cl
  407b28:	dec    esp
  407b29:	test   DWORD PTR [esi+ebp*8+0x32],ecx
  407b2d:	push   ecx
  407b2e:	inc    esp
  407b2f:	cmp    bh,BYTE PTR [edi-0x39]
  407b32:	inc    esp
  407b33:	nop
  407b34:	inc    edi
  407b35:	sbb    bl,BYTE PTR [ebx-0x56c32da]
  407b3b:	xor    BYTE PTR [ecx+ebx*1+0x6b237de8],cl
  407b42:	push   0x746ce349
  407b47:	sub    eax,0x8fcba3c7
  407b4c:	and    ecx,DWORD PTR [ebx+0x15ce930b]
  407b52:	daa    
  407b53:	and    bl,al
  407b55:	icebp  
  407b56:	std    
  407b57:	fdivr  st,st(7)
  407b59:	jg     0x407b96
  407b5b:	rol    DWORD PTR [ebx+0x111ff198],cl
  407b61:	lea    esp,[esi+0x256e2919]
  407b67:	sub    DWORD PTR [di],esp
  407b6a:	iret   
  407b6b:	dec    esp
  407b6c:	xor    BYTE PTR [ebp+0x17],cl
  407b6f:	xor    BYTE PTR [ecx+ebp*1-0x62e54b95],dl
  407b76:	jp     0x407b6a
  407b78:	out    0x76,eax
  407b7a:	imul   esp,DWORD PTR [ebp+0x258edb78],0xcb0ed338
  407b84:	push   ebp
  407b85:	mov    al,ds:0x3f37ea5d
  407b8a:	xlat   BYTE PTR ds:[ebx]
  407b8b:	sbb    al,0x0
  407b8d:	or     DWORD PTR [eax+0x46e7b23e],esi
  407b93:	push   edi
  407b94:	and    ebp,DWORD PTR [ebx-0x6c37c7d1]
  407b9a:	sbb    eax,0x65e87062
  407b9f:	ins    DWORD PTR es:[edi],dx
  407ba0:	and    dh,BYTE PTR [esi]
  407ba2:	ret    0x413b
  407ba5:	add    bh,BYTE PTR [edx]
  407ba7:	pop    ds
  407ba8:	xor    eax,ecx
  407baa:	xor    esp,eax
  407bac:	mov    esp,0x7feb45e3
  407bb1:	mov    esi,0x4ade24d1
  407bb6:	icebp  
  407bb7:	adc    DWORD PTR [edi-0x41],ebp
  407bba:	test   DWORD PTR [ebx],esi
  407bbc:	mov    dl,0xbd
  407bbe:	xor    ch,BYTE PTR [ecx-0x63c7baec]
  407bc4:	test   BYTE PTR [edi+0x17e63c12],bl
  407bca:	jae    0x407b55
  407bcc:	dec    edi
  407bcd:	push   0xffffffb4
  407bcf:	frstor [ecx]
  407bd1:	ret    0xff59
  407bd4:	and    BYTE PTR [eax],0xfa
  407bd7:	adc    DWORD PTR [ecx+0x32],ebx
  407bda:	xchg   ebp,eax
  407bdb:	fstp   QWORD PTR ds:0x54a79c8c
  407be1:	popf   
  407be2:	mov    al,0x52
  407be4:	xor    ah,0x66
  407be7:	mov    edi,0xb4e6a722
  407bec:	mov    dh,0xdf
  407bee:	pop    ebp
  407bef:	in     al,0x3f
  407bf1:	arpl   WORD PTR [ecx],cx
  407bf3:	xor    al,0x6e
  407bf5:	mov    ecx,edi
  407bf7:	pop    ds
  407bf8:	fnstcw WORD PTR [ebx+0x734f8894]
  407bfe:	hlt    
  407bff:	icebp  
  407c00:	mov    ch,0xba
  407c02:	mov    edx,0x2004d394
  407c07:	jne    0x407bd3
  407c09:	push   esi
  407c0a:	dec    ebx
  407c0b:	into   
  407c0c:	jno    0x407c26
  407c0e:	jp     0x407c6f
  407c10:	and    eax,0xeed7d357
  407c15:	fwait
  407c16:	sub    ebx,ebx
  407c18:	inc    esp
  407c19:	mov    dl,0xac
  407c1b:	jmp    0x3d517f88
  407c20:	cli    
  407c21:	scas   al,BYTE PTR es:[edi]
  407c22:	jno    0x407c68
  407c24:	rcl    esp,0xad
  407c27:	push   esp
  407c28:	dec    edi
  407c29:	leave  
  407c2a:	rcl    ecx,0x73
  407c2d:	in     eax,0xea
  407c2f:	mov    bh,0x11
  407c31:	mov    ah,0xc2
  407c33:	dec    ebx
  407c34:	inc    esp
  407c35:	and    eax,0x99302891
  407c3a:	clc    
  407c3b:	jb     0x407cae
  407c3d:	das    
  407c3e:	rcl    BYTE PTR [ecx+esi*8+0x2e],0xdc
  407c43:	inc    DWORD PTR [edx+eax*4+0x3d]
  407c47:	out    dx,al
  407c48:	xchg   BYTE PTR [ecx+edi*4],ah
  407c4b:	ins    DWORD PTR es:[edi],dx
  407c4c:	adc    BYTE PTR [edx-0x1c1de0af],0xdf
  407c53:	jbe    0x407c2c
  407c55:	jg     0x407caf
  407c57:	fcomi  st,st(7)
  407c59:	inc    edi
  407c5a:	sar    DWORD PTR [ebx+esi*8-0x5d],1
  407c5e:	out    0xf2,eax
  407c60:	iret   
  407c61:	mov    DWORD PTR [eax],0x22999ceb
  407c67:	fwait
  407c68:	cmp    al,BYTE PTR [ebp+0x6c2e0ebc]
  407c6e:	jnp    0x407c57
  407c70:	and    eax,0xe1e9f9e
  407c75:	(bad)  
  407c76:	mov    ebx,0xfb6698c9
  407c7b:	inc    ebp
  407c7c:	lods   eax,DWORD PTR gs:[esi]
  407c7e:	mov    al,ds:0xe1ad9f76
  407c83:	bound  edx,QWORD PTR [edi]
  407c85:	leave  
  407c86:	(bad)  
  407c87:	xchg   edi,eax
  407c88:	jle    0x407c6e
  407c8a:	inc    ebx
  407c8b:	jle    0x407c99
  407c8d:	push   ebx
  407c8e:	and    cl,BYTE PTR [esi-0x65]
  407c91:	pop    es
  407c92:	push   ds
  407c93:	out    dx,eax
  407c94:	(bad)  
  407c95:	cld    
  407c96:	aaa    
  407c97:	inc    ebp
  407c98:	ins    DWORD PTR es:[edi],dx
  407c99:	cmp    dl,ah
  407c9b:	fistp  WORD PTR [ecx]
  407c9d:	xlat   BYTE PTR ds:[ebx]
  407c9e:	loope  0x407cae
  407ca0:	popf   
  407ca1:	mov    bl,0xa0
  407ca3:	pusha  
  407ca4:	jo     0x407c5f
  407ca6:	mov    cl,0xd2
  407ca8:	int3   
  407ca9:	ret    
  407caa:	adc    DWORD PTR [edx],ecx
  407cac:	sub    edi,DWORD PTR [edi]
  407cae:	or     ebp,0x4f
  407cb1:	stos   BYTE PTR es:[edi],al
  407cb2:	xor    eax,0x3e5dd54a
  407cb7:	into   
  407cb8:	mov    ds:0x6c7f35b1,eax
  407cbd:	pop    edx
  407cbe:	xchg   ebx,eax
  407cbf:	aas    
  407cc0:	pop    ss
  407cc1:	fs xchg ebp,eax
  407cc3:	inc    eax
  407cc4:	test   eax,0x691ff132
  407cc9:	rcr    BYTE PTR [edi+0x7f46cbe7],cl
  407ccf:	sub    eax,0xa3524160
  407cd4:	(bad)  
  407cd5:	stos   BYTE PTR es:[edi],al
  407cd6:	pop    edi
  407cd7:	mov    cl,0x9e
  407cd9:	jb     0x407d20
  407cdb:	in     eax,0x1b
  407cdd:	rcl    ch,0x34
  407ce0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ce1:	fnsave [edi-0x68]
  407ce4:	mov    cl,0x66
  407ce6:	out    0x3a,al
  407ce8:	xchg   BYTE PTR [esi+0x1850202],bl
  407cee:	mov    BYTE PTR [edx],dh
  407cf0:	push   edx
  407cf1:	add    DWORD PTR [edi-0x66],ecx
  407cf4:	mov    ch,0xd6
  407cf6:	in     al,0x81
  407cf8:	inc    esi
  407cf9:	mov    bh,0x2f
  407cfb:	fnstcw WORD PTR [edx]
  407cfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cfe:	inc    edi
  407cff:	(bad)  
  407d00:	imul   ebx,DWORD PTR [ebx],0x6
  407d03:	(bad)  
  407d04:	ror    dl,1
  407d06:	popf   
  407d07:	lds    esp,FWORD PTR [eax+ecx*8]
  407d0a:	stc    
  407d0b:	mov    ebx,0x9037790c
  407d10:	xchg   edi,eax
  407d11:	nop
  407d12:	lea    ebp,[ebp-0x113e2cac]
  407d18:	dec    edi
  407d19:	imul   edi,DWORD PTR ds:0xf44b1c13,0xbfbb3170
  407d23:	aas    
  407d24:	or     BYTE PTR [edx+0xf46a74e],bl
  407d2a:	sahf   
  407d2b:	mov    dh,0x51
  407d2d:	gs jmp 0x407d7f
  407d30:	xor    eax,0x7d029cee
  407d35:	adc    BYTE PTR [edx],dh
  407d37:	mov    bh,0xfe
  407d39:	mov    bh,0xba
  407d3b:	in     eax,0x54
  407d3d:	sar    DWORD PTR [esi],0x8a
  407d40:	dec    ebp
  407d41:	sbb    eax,0xe092a9d9
  407d46:	push   ebp
  407d47:	pushf  
  407d48:	mov    edi,esi
  407d4a:	sbb    bl,BYTE PTR [edi-0xe]
  407d4d:	jmp    0xa38c:0x59545f7b
  407d54:	pop    ebp
  407d55:	daa    
  407d56:	(bad)  
  407d57:	mov    ss,edx
  407d59:	mov    eax,0x7cb966f6
  407d5e:	push   eax
  407d5f:	lods   al,BYTE PTR ds:[esi]
  407d60:	(bad)  
  407d62:	dec    esi
  407d63:	and    DWORD PTR gs:[edi+ebx*2-0x5fc7e1e2],0x43697398
  407d6f:	clc    
  407d70:	dec    eax
  407d71:	and    BYTE PTR [ebx+0x14],0x74
  407d75:	jmp    0x407d05
  407d77:	cmp    dh,BYTE PTR [edi+0x15]
  407d7a:	inc    edi
  407d7b:	xchg   esi,eax
  407d7c:	and    al,0xf1
  407d7e:	inc    edx
  407d7f:	and    eax,0xc0d082d6
  407d84:	xor    edx,DWORD PTR [eax+0x20cb75ab]
  407d8a:	jbe    0x407d3b
  407d8c:	jnp    0x407d5f
  407d8e:	mov    WORD PTR [edi-0x4c],?
  407d91:	pop    ecx
  407d92:	xor    eax,0x4d3de27e
  407d97:	pop    ebp
  407d98:	int    0xb4
  407d9a:	repnz not ah
  407d9d:	cmp    bh,BYTE PTR [esi]
  407d9f:	ja     0x407d52
  407da1:	out    dx,eax
  407da2:	xchg   edx,eax
  407da3:	cmp    esi,DWORD PTR ds:0x3ee2293e
  407da9:	sbb    DWORD PTR [ecx],esp
  407dab:	inc    ebp
  407dac:	cmp    DWORD PTR [edx+0x3b],ecx
  407daf:	fild   DWORD PTR [edx+0x576e95d1]
  407db5:	mov    cl,cl
  407db7:	iret   
  407db8:	stc    
  407db9:	xor    BYTE PTR [edi-0x8],al
  407dbc:	hlt    
  407dbd:	jo     0x407dc5
  407dbf:	gs dec edx
  407dc1:	aaa    
  407dc2:	cmp    al,0x8
  407dc4:	pop    edi
  407dc5:	sahf   
  407dc6:	popf   
  407dc7:	fptan  
  407dc9:	push   eax
  407dca:	xlat   BYTE PTR ds:[ebx]
  407dcb:	or     dl,ch
  407dcd:	aas    
  407dce:	sub    DWORD PTR [ebp+ebx*1+0x69],ecx
  407dd2:	aad    0x1a
  407dd4:	dec    esi
  407dd5:	jo     0x407e27
  407dd7:	cmc    
  407dd8:	aas    
  407dd9:	or     BYTE PTR [ebp+0x2e],cl
  407ddc:	enter  0x3897,0xcf
  407de0:	dec    esp
  407de1:	sub    dh,BYTE PTR [esi-0x1f]
  407de4:	enter  0x1912,0x44
  407de8:	mov    ch,0x4e
  407dea:	das    
  407deb:	in     eax,dx
  407dec:	addr16 mov ah,0x79
  407def:	xchg   DWORD PTR [ebx+0x4e],ecx
  407df2:	pop    ebp
  407df3:	test   BYTE PTR [ebp+edi*4+0x1128a94d],al
  407dfa:	es xchg esi,eax
  407dfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dfd:	push   cs
  407dfe:	addr16 jb 0x407d93
  407e01:	pusha  
  407e02:	xchg   edi,eax
  407e03:	ins    BYTE PTR es:[edi],dx
  407e04:	test   eax,0x6bd2146f
  407e09:	dec    edx
  407e0a:	push   ss
  407e0b:	adc    dl,BYTE PTR ds:0xbaecddee
  407e11:	mov    ds:0x492719bf,eax
  407e17:	mov    bh,BYTE PTR [edx]
  407e19:	jmp    0xd2d8b796
  407e1e:	movsx  eax,BYTE PTR [ebx]
  407e21:	cmp    BYTE PTR [ebp-0x68],al
  407e24:	adc    dh,ch
  407e26:	fdiv   QWORD PTR [edx-0x423ad278]
  407e2c:	ret    0xe498
  407e2f:	das    
  407e30:	je     0x407e78
  407e32:	stos   DWORD PTR es:[edi],eax
  407e33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e34:	(bad)
  407e37:	cmp    al,0xf6
  407e39:	aas    
  407e3a:	jp     0x407e4c
  407e3c:	jns    0x407dbf
  407e3e:	jae    0x407ea3
  407e40:	fs and al,0x4f
  407e43:	aam    0xb7
  407e45:	mov    ecx,0xaa6ea63a
  407e4a:	lods   al,BYTE PTR ds:[esi]
  407e4b:	sti    
  407e4c:	jl     0x407e4e
  407e4e:	mul    BYTE PTR [ecx-0x67c1b05f]
  407e54:	ja     0x407e17
  407e56:	adc    al,BYTE PTR gs:[ecx+eax*1]
  407e5a:	mov    al,ds:0xd62bf13b
  407e5f:	mov    cl,0xbf
  407e61:	popf   
  407e62:	jmp    0x7b18d8af
  407e67:	mov    edi,0xbbd18f53
  407e6c:	in     eax,dx
  407e6d:	add    ah,BYTE PTR [esi+0x22]
  407e70:	jg     0x407ec3
  407e72:	pop    eax
  407e73:	inc    edi
  407e74:	inc    ebx
  407e75:	lods   eax,DWORD PTR ds:[esi]
  407e76:	sbb    BYTE PTR [edi-0x5d],dl
  407e79:	in     al,0x46
  407e7b:	lods   al,BYTE PTR ds:[esi]
  407e7c:	(bad)  
  407e7d:	cmp    dl,BYTE PTR [edi+0x3bd3a654]
  407e83:	mov    esi,DWORD PTR [esi]
  407e85:	lock push esp
  407e87:	nop
  407e88:	sbb    BYTE PTR [edi-0x44],0x1f
  407e8c:	shr    BYTE PTR [edx+0x378e5ab3],0xc0
  407e93:	mov    eax,ds:0x21ec954a
  407e98:	es xchg edi,eax
  407e9a:	repnz scas al,BYTE PTR es:[edi]
  407e9c:	or     DWORD PTR [esp+edi*8+0x4452d35a],esp
  407ea3:	xor    bl,dh
  407ea5:	pop    eax
  407ea6:	cmp    BYTE PTR [ecx-0x6e],dl
  407ea9:	mov    DWORD PTR [eax],esi
  407eab:	and    al,0x37
  407ead:	dec    edi
  407eae:	xor    eax,0xb68b3a77
  407eb3:	lock test BYTE PTR [edx+0x5c],dh
  407eb7:	pop    ss
  407eb8:	repz aad 0x9c
  407ebb:	je     0x407e96
  407ebd:	add    dh,BYTE PTR [esi+0x1e]
  407ec0:	sahf   
  407ec1:	call   0xf771:0x3453649f
  407ec8:	clc    
  407ec9:	mov    al,ds:0x933a4df3
  407ece:	dec    eax
  407ecf:	cmp    BYTE PTR [ebp+0x4f],ah
  407ed2:	xor    al,0x39
  407ed4:	(bad)  
  407ed5:	mov    ebp,0x8dc8511c
  407eda:	ss ret 
  407edc:	xchg   edx,eax
  407edd:	(bad)  
  407ede:	test   eax,0x6e56e6a9
  407ee3:	dec    esp
  407ee4:	jns    0x407e96
  407ee6:	mov    ah,0x3e
  407ee8:	cli    
  407ee9:	cmc    
  407eea:	jae    0x407ed1
  407eec:	mov    cl,0x2a
  407eee:	sahf   
  407eef:	jbe    0x407e8d
  407ef1:	and    al,0xce
  407ef3:	jl     0x407f5c
  407ef5:	mov    cl,0x8e
  407ef7:	sub    DWORD PTR [ecx+0x17ddb8f7],0x1646d2c9
  407f01:	stc    
  407f02:	ins    DWORD PTR es:[edi],dx
  407f03:	jle    0x407f0f
  407f05:	jne    0x407ec9
  407f07:	sti    
  407f08:	fdiv   QWORD PTR ds:0xfe44d5e8
  407f0e:	sbb    al,0x2e
  407f10:	(bad)  
  407f11:	jns    0x407f45
  407f13:	xchg   ecx,eax
  407f14:	pop    ds
  407f15:	mov    bl,0x33
  407f17:	cmp    dl,0xf
  407f1a:	popa   
  407f1b:	pop    ebp
  407f1c:	test   eax,0x75c2753d
  407f21:	cmp    ecx,DWORD PTR [ebp-0x43abecc1]
  407f27:	rcl    BYTE PTR [esp+eiz*2],cl
  407f2a:	adc    eax,0x44cffb1a
  407f2f:	push   ebx
  407f30:	pop    eax
  407f31:	imul   edx,ebx,0x7bd59b69
  407f37:	jno    0x407f2e
  407f39:	lds    ebx,FWORD PTR [ebp+0x1]
  407f3c:	enter  0xae7d,0x60
  407f40:	aaa    
  407f41:	inc    edi
  407f42:	or     BYTE PTR ds:0x8d7bcb96,bl
  407f48:	xor    eax,0x272a5ba1
  407f4d:	inc    edx
  407f4e:	sub    al,BYTE PTR [ebx+0x41]
  407f51:	mov    dh,0x87
  407f53:	or     dl,ch
  407f55:	leave  
  407f56:	xlat   BYTE PTR ds:[ebx]
  407f57:	sub    eax,0xe605eab9
  407f5c:	xchg   BYTE PTR [eax],bl
  407f5e:	cmp    BYTE PTR [esi],al
  407f60:	jae    0x407f42
  407f62:	call   0x2d9b:0x6868eda
  407f69:	fcomi  st,st(5)
  407f6b:	push   ecx
  407f6c:	sbb    al,0xe2
  407f6e:	jecxz  0x407f4f
  407f70:	ja     0x407fd6
  407f72:	dec    eax
  407f73:	xor    bl,BYTE PTR [esp+esi*4+0x3c]
  407f77:	mov    edx,0x790ba3ea
  407f7c:	or     edx,DWORD PTR [edi]
  407f7e:	mov    WORD PTR [edi+ecx*2+0x1344e629],gs
  407f85:	les    ecx,FWORD PTR [ecx]
  407f87:	scas   al,BYTE PTR es:[edi]
  407f88:	mov    esp,0x850fa43a
  407f8d:	push   eax
  407f8e:	adc    edi,DWORD PTR ds:0x4edb2a70
  407f94:	std    
  407f95:	xchg   DWORD PTR [ecx-0x36553a0b],esp
  407f9b:	push   ebx
  407f9c:	gs gs dec ebx
  407f9f:	gs ss inc esp
  407fa2:	sbb    bl,BYTE PTR [ecx+esi*2-0x490ca28c]
  407fa9:	ins    DWORD PTR es:[edi],dx
  407faa:	outs   dx,BYTE PTR ds:[esi]
  407fab:	add    al,0xe9
  407fad:	cs aas 
  407faf:	ins    DWORD PTR es:[edi],dx
  407fb0:	fild   DWORD PTR [ecx+eax*8]
  407fb3:	inc    ebp
  407fb4:	ins    BYTE PTR es:[edi],dx
  407fb5:	scas   eax,DWORD PTR es:[edi]
  407fb6:	cdq    
  407fb7:	dec    ecx
  407fb8:	push   cs
  407fb9:	mov    eax,ds:0xd5c384ef
  407fbe:	aad    0x2f
  407fc0:	inc    ebx
  407fc1:	jmp    0x407fc8
  407fc3:	xor    eax,0x40e4c1c1
  407fc8:	outs   dx,DWORD PTR ds:[esi]
  407fc9:	mov    eax,ds:0x4e90883
  407fce:	pop    edx
  407fcf:	(bad)
  407fd3:	or     al,0x2d
  407fd5:	xor    bh,BYTE PTR [ebp-0x3834fb1f]
  407fdb:	(bad)  
  407fdc:	aas    
  407fdd:	es cdq 
  407fdf:	and    ebx,DWORD PTR [edx-0x31]
  407fe2:	xchg   DWORD PTR [edx+edi*2],ecx
  407fe5:	sbb    ah,BYTE PTR [di+0x7]
  407fe9:	mov    dh,0x7d
  407feb:	push   edi
  407fec:	iret   
  407fed:	pop    esi
  407fee:	jp     0x407fdc
  407ff0:	sti    
  407ff1:	(bad)  
  407ff2:	imul   esi,DWORD PTR [ebp+0x6d],0xffffff93
  407ff6:	inc    ecx
  407ff7:	dec    ebp
  407ff8:	(bad)  
  407ff9:	mov    cl,0x2
  407ffb:	dec    esp
  407ffc:	jb     0x407fce
  407ffe:	adc    ebp,edi
  408000:	jmp    0xdf36:0x90fd220d
  408007:	jl     0x40801f
  408009:	jns    0x407fc0
  40800b:	es shr edx,cl
  40800e:	and    ecx,esi
  408010:	add    bl,BYTE PTR [ebx+0x1c]
  408013:	je     0x408000
  408015:	outs   dx,BYTE PTR ds:[esi]
  408016:	push   eax
  408017:	push   0x9d379154
  40801c:	cwde   
  40801d:	mov    DWORD PTR [eax],0x7a2a381b
  408023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408024:	or     BYTE PTR ds:0xfd80c49b,dh
  40802a:	ret    0xa3f4
  40802d:	aas    
  40802e:	sbb    al,0x4
  408030:	pcmpgtw mm5,QWORD PTR [eax]
  408033:	mov    gs,WORD PTR [ebx+0x384e2362]
  408039:	sbb    BYTE PTR [edi-0x51],0xa2
  40803d:	pop    es
  40803e:	pushf  
  40803f:	pushf  
  408040:	jle    0x408015
  408042:	cmp    al,0x5a
  408044:	add    BYTE PTR ds:0x12092bbc,dh
  40804a:	mov    eax,DWORD PTR [ebp-0x1c]
  40804d:	mov    ecx,DWORD PTR [ebp-0x1c]
  408050:	sub    eax,ecx
  408052:	mov    DWORD PTR [ebp-0x1c],eax
  408055:	or     DWORD PTR [ebp-0x1c],0xf89c85d5
  40805c:	mov    eax,DWORD PTR [ebp-0x20]
  40805f:	mov    ecx,DWORD PTR [ebp-0x20]
  408062:	sub    eax,ecx
  408064:	mov    DWORD PTR [ebp-0x20],eax
  408067:	mov    eax,DWORD PTR [ebp-0x2c]
  40806a:	mov    ecx,DWORD PTR [ebp-0x20]
  40806d:	mov    esi,0x7510897
  408072:	xor    eax,esi
  408074:	mov    edi,0x3272de
  408079:	add    eax,edi
  40807b:	or     eax,ecx
  40807d:	mov    DWORD PTR [ebp-0x20],eax
  408080:	mov    eax,DWORD PTR [ebp-0x4]
  408083:	mov    ecx,DWORD PTR [ebp-0x4]
  408086:	sub    eax,ecx
  408088:	mov    DWORD PTR [ebp-0x4],eax
  40808b:	or     DWORD PTR [ebp-0x4],0xf89c85b0
  408092:	mov    eax,DWORD PTR [ebp-0xc]
  408095:	xor    eax,esi
  408097:	add    eax,edi
  408099:	push   eax
  40809a:	mov    eax,DWORD PTR [ebp-0x10]
  40809d:	xor    eax,esi
  40809f:	add    eax,edi
  4080a1:	push   eax
  4080a2:	mov    eax,DWORD PTR [ebp-0x4]
  4080a5:	xor    eax,esi
  4080a7:	add    eax,edi
  4080a9:	push   eax
  4080aa:	lea    eax,[ebp-0x7c]
  4080ad:	push   eax
  4080ae:	push   DWORD PTR [ebp-0x2c]
  4080b1:	push   DWORD PTR [ebp-0x28]
  4080b4:	call   0x40ab86
  4080b9:	test   eax,eax
  4080bb:	je     0x4080e9
  4080c1:	lea    eax,[ebp-0x7c]
  4080c4:	push   eax
  4080c5:	mov    eax,DWORD PTR [ebp-0x28]
  4080c8:	xor    eax,esi
  4080ca:	add    eax,edi
  4080cc:	push   eax
  4080cd:	mov    eax,DWORD PTR [ebp-0x24]
  4080d0:	add    eax,0xaa
  4080d5:	push   eax
  4080d6:	mov    eax,DWORD PTR [ebp-0x24]
  4080d9:	mov    eax,DWORD PTR [eax+0x198]
  4080df:	push   DWORD PTR [eax]
  4080e1:	call   0x405235
  4080e6:	mov    DWORD PTR [ebp-0x14],eax
  4080e9:	lea    eax,[ebp+0x4]
  4080ec:	mov    DWORD PTR [ebp-0x30],eax
  4080ef:	mov    eax,DWORD PTR [ebp-0x14]
  4080f2:	test   eax,eax
  4080f4:	je     0x40815c
  4080fa:	lea    eax,[ebp-0x8]
  4080fd:	mov    DWORD PTR [ebp-0x38],eax
  408100:	mov    eax,DWORD PTR [ebp-0x34]
  408103:	mov    DWORD PTR [ebp-0x8],eax
  408106:	mov    eax,DWORD PTR [ebp-0x8]
  408109:	mov    ecx,DWORD PTR [ebp-0x14]
  40810c:	sub    eax,ecx
  40810e:	mov    DWORD PTR [ebp-0x8],eax
  408111:	mov    ecx,DWORD PTR [ebp-0x4]
  408114:	xor    ecx,esi
  408116:	mov    eax,0xffcd8d22
  40811b:	sub    eax,ecx
  40811d:	add    DWORD PTR [ebp-0x8],eax
  408120:	mov    eax,DWORD PTR [ebp-0x8]
  408123:	mov    ecx,DWORD PTR [ebp-0x14]
  408126:	mov    DWORD PTR [ecx+0x1],eax
  408129:	mov    eax,DWORD PTR [ebp-0x14]
  40812c:	push   DWORD PTR [ebp-0x24]
  40812f:	mov    BYTE PTR [eax],0xe9
  408132:	mov    eax,ds:0x42e2b1
  408137:	push   DWORD PTR [eax]
  408139:	push   DWORD PTR ds:0x42e50d
  40813f:	push   DWORD PTR ds:0x42e2b9
  408145:	push   DWORD PTR ds:0x42e4ed
  40814b:	push   DWORD PTR ds:0x42eafd
  408151:	push   DWORD PTR [ebp-0x28]
  408154:	push   DWORD PTR [ebp-0x2c]
  408157:	mov    eax,DWORD PTR [ebp-0x14]
  40815a:	call   eax
  40815c:	mov    eax,DWORD PTR [ebp-0x30]
  40815f:	mov    ecx,DWORD PTR ds:0x42e4b1
  408165:	add    DWORD PTR [eax],ecx
  408167:	pop    edi
  408168:	pop    esi
  408169:	leave  
  40816a:	ret    
  40816b:	push   ebp
  40816c:	mov    ebp,esp
  40816e:	sub    esp,0x18
  408171:	sub    edx,DWORD PTR ds:0x42c004
  408177:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  40817e:	add    ecx,edx
  408180:	lea    eax,[ebp+0x14]
  408183:	mov    edx,DWORD PTR ds:0x42b008
  408189:	xor    DWORD PTR ds:0x42b01c,edx
  40818f:	mov    DWORD PTR [ebp-0x4],eax
  408192:	push   esi
  408193:	and    DWORD PTR ds:0x42b000,0x0
  40819d:	xor    ecx,ecx
  40819f:	or     ecx,DWORD PTR ds:0x42b000
  4081a5:	inc    ecx
  4081a6:	mov    DWORD PTR ds:0x42b000,ecx
  4081ac:	cmp    DWORD PTR ds:0x42b000,0x24
  4081b3:	jne    0x4081bf
  4081b9:	call   DWORD PTR ds:0x42ed51
  4081bf:	cmp    DWORD PTR ds:0x42b000,0x19
  4081c6:	jb     0x40819d
  4081cc:	mov    esi,0xf89c85b5
  4081d1:	mov    DWORD PTR ds:0x42a004,0x1a
  4081db:	cmp    DWORD PTR ds:0x42a004,0x0
  4081e2:	je     0x40827f
  4081e8:	cmp    DWORD PTR ds:0x42a004,0x25
  4081ef:	jne    0x4081fb
  4081f5:	call   DWORD PTR ds:0x42ed55
  4081fb:	mov    ecx,DWORD PTR ds:0x42a004
  408201:	dec    ecx
  408202:	mov    DWORD PTR ds:0x42a004,ecx
  408208:	jmp    0x4081db
  40820d:	and    DWORD PTR ds:0x42c014,0x0
  408217:	mov    ecx,DWORD PTR ds:0x42c014
  40821d:	inc    ecx
  40821e:	mov    DWORD PTR ds:0x42c014,ecx
  408224:	cmp    DWORD PTR ds:0x42c014,0xa
  40822b:	jne    0x408258
  408231:	push   0x4b5d
  408236:	push   0x662f
  40823b:	push   0x429024
  408240:	push   0x2027
  408245:	push   DWORD PTR [ebp-0x14]
  408248:	push   0x6d51
  40824d:	push   0x3a33
  408252:	call   DWORD PTR ds:0x42ed59
  408258:	cmp    DWORD PTR ds:0x42c014,0x9
  40825f:	jne    0x408272
  408265:	mov    ecx,DWORD PTR ds:0x42c014
  40826b:	inc    ecx
  40826c:	mov    DWORD PTR ds:0x42c014,ecx
  408272:	cmp    DWORD PTR ds:0x42c014,0x13
  408279:	jb     0x408217
  40827f:	mov    DWORD PTR [ebp-0xc],esi
  408282:	lea    eax,[ebp-0xc]
  408285:	mov    DWORD PTR ds:0x429008,0x7000
  40828f:	mov    DWORD PTR [ebp-0x14],eax
  408292:	mov    eax,DWORD PTR [ebp-0xc]
  408295:	adc    ecx,ecx
  408297:	mov    edx,DWORD PTR [ebp-0x14]
  40829a:	mov    ecx,0x7510897
  40829f:	xor    eax,ecx
  4082a1:	and    DWORD PTR ds:0x42a00c,0x546c
  4082ab:	add    eax,0x3272de
  4082b0:	xor    DWORD PTR ds:0x42900c,0x42b014
  4082ba:	mov    DWORD PTR [edx],eax
  4082bc:	xor    eax,DWORD PTR ds:0x42900c
  4082c2:	mov    eax,ds:0x42e2ad
  4082c7:	movzx  edx,BYTE PTR ds:0x42d00c
  4082ce:	add    edx,DWORD PTR ds:0x42d014
  4082d4:	mov    DWORD PTR ds:0x42d00c,edx
  4082da:	mov    edx,DWORD PTR [ebp-0x4]
  4082dd:	add    DWORD PTR ds:0x42d014,0x42c01c
  4082e7:	mov    eax,DWORD PTR [eax]
  4082e9:	add    eax,DWORD PTR [edx]
  4082eb:	dec    edx
  4082ec:	push   edi
  4082ed:	or     edi,DWORD PTR ds:0x429020
  4082f3:	mov    DWORD PTR [ebp-0x8],eax
  4082f6:	sbb    DWORD PTR ds:0x42b000,0x50b8
  408300:	mov    edi,DWORD PTR [ebp+0x8]
  408303:	or     edx,DWORD PTR ds:0x42c000
  408309:	mov    eax,ds:0x42e435
  40830e:	add    DWORD PTR ds:0x42a008,edi
  408314:	mov    eax,DWORD PTR [eax+0x198]
  40831a:	mov    edx,DWORD PTR ds:0x429020
  408320:	xor    DWORD PTR ds:0x42d000,edx
  408326:	xor    edi,ecx
  408328:	add    edx,DWORD PTR ds:0x42d010
  40832e:	mov    edx,0x3272de
  408333:	add    edi,edx
  408335:	cmp    DWORD PTR [eax],edi
  408337:	mov    DWORD PTR ds:0x42b000,0x2ab9
  408341:	je     0x408362
  408347:	mov    DWORD PTR ds:0x42b01c,0x7253
  408351:	mov    eax,DWORD PTR [eax]
  408353:	mov    DWORD PTR ds:0x429010,0x649d
  40835d:	jmp    0x40aa31
  408362:	mov    eax,DWORD PTR [ebp+0x18]
  408365:	mov    DWORD PTR ds:0x42c014,0x271
  40836f:	cmp    eax,esi
  408371:	mov    DWORD PTR ds:0x42c004,0x124b
  40837b:	jne    0x408395
  408381:	push   0xf89c85b4
  408386:	mov    DWORD PTR ds:0x42c000,0x7723
  408390:	jmp    0x40aa20
  408395:	mov    DWORD PTR ds:0x42d014,0x3adf
  40839f:	mov    esi,DWORD PTR [ebp+0x18]
  4083a2:	mov    DWORD PTR ds:0x42901c,ebx
  4083a8:	mov    eax,0xf89c85b3
  4083ad:	mov    DWORD PTR ds:0x42d014,0x7a94
  4083b7:	cmp    esi,eax
  4083b9:	jne    0x40aa10
  4083bf:	mov    eax,DWORD PTR [ebp+0x10]
  4083c2:	sbb    DWORD PTR ds:0x42d01c,0x4fef
  4083cc:	xor    eax,ecx
  4083ce:	neg    esi
  4083d0:	add    eax,edx
  4083d2:	mov    DWORD PTR [ebp-0x18],eax
  4083d5:	and    DWORD PTR ds:0x42c008,0x0
  4083df:	jmp    0x4083f1
  4083e4:	mov    esi,DWORD PTR ds:0x42c008
  4083ea:	inc    esi
  4083eb:	mov    DWORD PTR ds:0x42c008,esi
  4083f1:	cmp    DWORD PTR ds:0x42c008,0x1b
  4083f8:	jae    0x40841f
  4083fe:	cmp    DWORD PTR ds:0x42c008,0x21
  408405:	jne    0x408419
  40840b:	push   DWORD PTR [ebp-0xc]
  40840e:	push   0x42e04f
  408413:	call   DWORD PTR ds:0x42ed5d
  408419:	jmp    0x4083e4
  40841e:	inc    esi
  40841f:	mov    eax,DWORD PTR [ebp+0xc]
  408422:	adc    esi,0x4c2a
  408428:	mov    esi,DWORD PTR [ebp-0x8]
  40842b:	xor    eax,ecx
  40842d:	and    DWORD PTR ds:0x42c00c,0x5a7b
  408437:	add    eax,edx
  408439:	add    DWORD PTR ds:0x429028,0x559b
  408443:	imul   eax,DWORD PTR [esi]
  408446:	mov    esi,DWORD PTR [ebp+0x8]
  408449:	and    DWORD PTR ds:0x42c014,0x42b014
  408453:	xor    esi,ecx
  408455:	add    esi,edx
  408457:	mov    DWORD PTR ds:0x42b00c,0x7e3f
  408461:	cmp    esi,eax
  408463:	mov    DWORD PTR ds:0x429028,0x3893
  40846d:	mov    eax,DWORD PTR [ebp-0x4]
  408470:	jmp    0x40a7d3
  408475:	push   esp
  408476:	pop    ss
  408477:	rcl    DWORD PTR [ebx-0x6d],cl
  40847a:	fwait
  40847b:	aam    0x17
  40847d:	adc    BYTE PTR [eax+0x38],bl
  408480:	push   cs
  408481:	mov    BYTE PTR [edi-0x16],bl
  408484:	jmp    0x5f22:0x78782200
  40848b:	js     0x408505
  40848d:	pop    ecx
  40848e:	dec    eax
  40848f:	idiv   dl
  408491:	push   eax
  408492:	aam    0x4b
  408494:	test   BYTE PTR [edi],0x2a
  408497:	leave  
  408498:	loopne 0x408481
  40849a:	ds push ecx
  40849c:	sbb    bh,BYTE PTR [eax]
  40849e:	add    ecx,DWORD PTR [edx-0x18df064]
  4084a4:	outs   dx,BYTE PTR ds:[esi]
  4084a5:	in     al,0x18
  4084a7:	sbb    bl,ah
  4084a9:	push   edi
  4084aa:	pop    ss
  4084ab:	sub    al,0xe5
  4084ad:	xor    al,0x16
  4084af:	mov    ch,BYTE PTR [eax-0x6f]
  4084b2:	fs popf 
  4084b4:	and    DWORD PTR [edx+0x5731934e],edx
  4084ba:	ficomp DWORD PTR [ecx]
  4084bc:	inc    ebp
  4084bd:	mov    ss,WORD PTR [ecx+0x28c6f94e]
  4084c3:	or     eax,0xab93716a
  4084c8:	aas    
  4084c9:	fcomp  DWORD PTR [edx+eiz*1-0x7e]
  4084cd:	cdq    
  4084ce:	push   esp
  4084cf:	cmp    bl,BYTE PTR [edi]
  4084d1:	mov    bl,0xb2
  4084d3:	adc    bl,BYTE PTR [ebx-0x5e]
  4084d6:	lock and DWORD PTR [eax+esi*2+0x58],esp
  4084db:	enter  0x313,0xcc
  4084df:	jns    0x40850c
  4084e1:	imul   ecx,DWORD PTR [eax-0x57727cb5],0x49900c78
  4084eb:	in     al,dx
  4084ec:	in     eax,0x5b
  4084ee:	push   esi
  4084ef:	outs   dx,DWORD PTR ds:[esi]
  4084f0:	pop    ds
  4084f1:	popf   
  4084f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084f3:	call   0x64f9bd9b
  4084f8:	xchg   esi,eax
  4084f9:	hlt    
  4084fa:	and    DWORD PTR [edx+eax*4],ebx
  4084fd:	into   
  4084fe:	sub    BYTE PTR [edi-0x56359454],0xb7
  408505:	xor    DWORD PTR [ecx+0x2b],ecx
  408508:	or     DWORD PTR [eax+0x4e57a1c6],ebx
  40850e:	loop   0x40851b
  408510:	mov    esi,0xf583f6e6
  408515:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408516:	or     esp,DWORD PTR [edx]
  408518:	call   0x8dc6:0x7cb14fb0
  40851f:	cli    
  408520:	push   ebp
  408521:	shr    BYTE PTR [edx+0x739c6f16],cl
  408527:	enter  0xdffd,0xaf
  40852b:	ss ss push eax
  40852e:	add    dl,BYTE PTR [edi+0x3f]
  408531:	lock mov eax,0xd50d3aa5
  408537:	and    esp,DWORD PTR ds:0x5fa5a242
  40853d:	out    dx,eax
  40853e:	cld    
  40853f:	sar    BYTE PTR [esi+0x580202da],cl
  408545:	pop    edi
  408546:	jecxz  0x40854d
  408548:	xor    BYTE PTR [edx+0x2f0e94c9],cl
  40854e:	aam    0x9e
  408550:	(bad)  
  408551:	cwde   
  408552:	es in  eax,0x16
  408555:	fnstsw WORD PTR [edx+edi*4+0x1f]
  408559:	xor    cl,dh
  40855b:	dec    esp
  40855c:	shr    DWORD PTR [esi],cl
  40855e:	fs cmp eax,0x26d1490b
  408564:	lods   al,BYTE PTR ds:[esi]
  408565:	xchg   ecx,eax
  408566:	push   esi
  408567:	mov    esi,0xf48e8b43
  40856c:	sbb    bh,bh
  40856e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40856f:	cmp    DWORD PTR ds:0x15f64323,ebx
  408575:	sahf   
  408576:	(bad)
  40857a:	lahf   
  40857b:	add    al,0xae
  40857d:	into   
  40857e:	and    BYTE PTR [ebx-0x445bc031],ah
  408584:	mov    ah,0x99
  408586:	into   
  408587:	loope  0x40856f
  408589:	xor    esi,DWORD PTR [edx-0xd201524]
  40858f:	pop    ds
  408590:	nop
  408591:	sar    cl,1
  408593:	punpckhbw mm4,mm3
  408596:	dec    ebp
  408597:	pop    ebp
  408598:	loope  0x408605
  40859a:	inc    eax
  40859b:	mov    bh,0x45
  40859d:	mov    ah,0x40
  40859f:	call   0x9172:0x477d5cb9
  4085a6:	pop    eax
  4085a7:	fld    QWORD PTR [ebx-0x2a]
  4085aa:	ins    BYTE PTR es:[edi],dx
  4085ab:	enter  0x7594,0xf0
  4085af:	ret    
  4085b0:	daa    
  4085b1:	imul   ebx,eax,0x2b
  4085b4:	or     esp,DWORD PTR [edx-0x49]
  4085b7:	dec    edi
  4085b8:	sub    BYTE PTR [ebp+0x53],0x91
  4085bc:	mov    eax,0xd0abce8f
  4085c1:	xor    eax,0xec116e45
  4085c6:	mov    esp,0xedda97b4
  4085cb:	and    DWORD PTR [eax+0xac533fd],eax
  4085d1:	out    dx,eax
  4085d2:	push   cs
  4085d3:	(bad)  
  4085d4:	call   FWORD PTR [ecx+eiz*2-0x2a]
  4085d8:	sbb    DWORD PTR [ecx+ecx*8],edi
  4085db:	fld    st(3)
  4085dd:	cmp    eax,0x60a51ac2
  4085e2:	sahf   
  4085e3:	lock outs dx,DWORD PTR ds:[esi]
  4085e5:	cld    
  4085e6:	mov    ecx,0x24291485
  4085eb:	cs test eax,0x58e4faf1
  4085f1:	xor    dl,al
  4085f3:	jp     0x4085b5
  4085f5:	hlt    
  4085f6:	pop    edx
  4085f7:	mov    edi,0x5c4509c8
  4085fc:	rcr    ebx,1
  4085fe:	jmp    0x40858c
  408600:	or     BYTE PTR [ecx-0x5e94eaa7],bl
  408606:	inc    esi
  408607:	jle    0x408639
  408609:	inc    ebp
  40860a:	push   esp
  40860b:	fdiv   DWORD PTR [esi-0x590abfb7]
  408611:	lods   eax,DWORD PTR ds:[esi]
  408612:	xchg   esi,eax
  408613:	loopne 0x408621
  408615:	in     eax,0x14
  408617:	test   BYTE PTR [edi-0x4bfb6976],al
  40861d:	pop    eax
  40861e:	xchg   edx,eax
  40861f:	or     DWORD PTR [edi+ecx*1-0x69],0xc
  408624:	push   DWORD PTR [ecx-0x573bace6]
  40862a:	xor    eax,0x97d48943
  40862f:	das    
  408630:	loop   0x4086b0
  408632:	jl     0x4085db
  408634:	ins    DWORD PTR es:[edi],dx
  408635:	out    dx,eax
  408636:	add    al,0xfe
  408638:	imul   edi,DWORD PTR [edx+ebx*2+0x7d],0x804ec6bb
  408640:	mov    al,dh
  408642:	cmp    BYTE PTR [edi-0x59],ah
  408645:	lods   al,BYTE PTR ds:[esi]
  408646:	jl     0x408609
  408648:	fist   DWORD PTR [edx-0x6f]
  40864b:	scas   eax,DWORD PTR es:[edi]
  40864c:	scas   al,BYTE PTR es:[edi]
  40864d:	stos   DWORD PTR es:[edi],eax
  40864e:	dec    esi
  40864f:	jmp    0x408675
  408651:	and    al,BYTE PTR [eax-0x1cfa259d]
  408657:	add    BYTE PTR [edi],0x6d
  40865a:	std    
  40865b:	adc    al,0x4c
  40865d:	sub    BYTE PTR [ecx+edi*2-0x46],0xdd
  408662:	pop    ebp
  408663:	push   eax
  408664:	cld    
  408665:	cmp    BYTE PTR [edi-0x636f2d2a],al
  40866b:	cmp    DWORD PTR [ebp-0x80],esi
  40866e:	retf   
  40866f:	call   0x9e06:0x4f4b1fe0
  408676:	adc    BYTE PTR [edx],ch
  408678:	pop    edx
  408679:	adc    dh,BYTE PTR [edx+0x48d254a9]
  40867f:	xchg   BYTE PTR ds:0x83cec6d3,dh
  408685:	into   
  408686:	pop    ecx
  408687:	es sbb al,0x7f
  40868a:	stos   DWORD PTR es:[edi],eax
  40868b:	pushf  
  40868c:	es xchg edx,eax
  40868e:	add    edi,esi
  408690:	and    eax,0xd908e899
  408695:	in     eax,dx
  408696:	xor    eax,0x48295bd3
  40869b:	and    esi,DWORD PTR [eax-0x25]
  40869e:	iret   
  40869f:	xchg   ebp,eax
  4086a0:	sub    BYTE PTR [eax-0x35a35370],cl
  4086a6:	jmp    0x4086b3
  4086a8:	ret    
  4086a9:	mov    DWORD PTR ds:0x83ec6993,esp
  4086af:	xor    ebx,DWORD PTR [edi]
  4086b1:	mov    gs,edx
  4086b3:	add    BYTE PTR [ecx],0xe9
  4086b6:	std    
  4086b7:	iret   
  4086b8:	cmp    eax,0x5a42b661
  4086bd:	and    edi,esi
  4086bf:	push   ds
  4086c0:	ss inc ecx
  4086c2:	shr    ch,1
  4086c4:	ret    
  4086c5:	scas   al,BYTE PTR es:[edi]
  4086c6:	(bad)
  4086c9:	or     DWORD PTR [esi-0x579cd309],eax
  4086cf:	cmp    BYTE PTR [ebx+0x46be7498],dl
  4086d5:	and    ch,al
  4086d7:	(bad)  
  4086d8:	xchg   esi,eax
  4086d9:	shl    BYTE PTR [eax],cl
  4086db:	push   ds
  4086dc:	inc    ebx
  4086de:	stc    
  4086df:	mov    gs,WORD PTR [ebp+0x14]
  4086e2:	std    
  4086e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086e4:	shl    BYTE PTR [esi+esi*2-0x74],1
  4086e8:	mov    BYTE PTR [edi-0x76],al
  4086eb:	stos   DWORD PTR es:[edi],eax
  4086ec:	das    
  4086ed:	mov    WORD PTR [ecx-0x1a138e2d],ss
  4086f3:	push   es
  4086f4:	xchg   edi,eax
  4086f5:	mov    ebx,0xb4592e62
  4086fa:	bound  esi,QWORD PTR [edi-0x33]
  4086fd:	out    dx,al
  4086fe:	jo     0x40869e
  408700:	dec    ebx
  408701:	cmovne ecx,DWORD PTR [ebx-0x19]
  408705:	push   eax
  408706:	jnp    0x4086e3
  408708:	in     al,dx
  408709:	pop    esp
  40870a:	adc    BYTE PTR [edi],al
  40870c:	in     al,0x89
  40870e:	sbb    al,BYTE PTR [ebx-0x1a]
  408711:	loope  0x40871e
  408713:	mov    edx,0x29354858
  408718:	sub    al,0x42
  40871a:	cli    
  40871b:	mov    WORD PTR [ecx],ds
  40871d:	adc    DWORD PTR ds:0x2605acb9,esi
  408723:	jmp    0x3cf7bb9
  408728:	push   0xe0c11bc
  40872d:	adc    al,0x43
  40872f:	sub    dh,bl
  408731:	jp     0x40872d
  408733:	inc    ebx
  408734:	inc    ecx
  408735:	pusha  
  408736:	in     al,0xc0
  408738:	adc    BYTE PTR [esi-0x5db6445e],ch
  40873e:	sar    DWORD PTR [ecx],1
  408740:	lds    esi,FWORD PTR [ecx]
  408742:	sub    eax,0xe23f7de
  408747:	pop    ebx
  408748:	jmp    0x5863bbd0
  40874d:	stos   BYTE PTR es:[edi],al
  40874e:	daa    
  40874f:	xlat   BYTE PTR ds:[ebx]
  408750:	jecxz  0x408776
  408752:	pusha  
  408753:	xor    edi,DWORD PTR cs:[edx-0x7c]
  408757:	adc    eax,0x878605be
  40875c:	cmp    eax,DWORD PTR [ecx+0x3d]
  40875f:	(bad)
  408763:	lock pop ss
  408765:	scas   eax,DWORD PTR es:[edi]
  408766:	loop   0x40871f
  408768:	dec    esp
  408769:	or     DWORD PTR [edx+esi*8+0x1f41e444],eax
  408770:	jns    0x408734
  408772:	icebp  
  408773:	adc    eax,0x9a5fa027
  408778:	std    
  408779:	cmc    
  40877a:	sub    al,0xa2
  40877c:	in     al,0xaf
  40877e:	push   ebx
  40877f:	push   esp
  408780:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408781:	fistp  WORD PTR [edi-0x107f598f]
  408787:	fmulp  st(5),st
  408789:	dec    edi
  40878a:	std    
  40878b:	xor    esi,DWORD PTR [edi+0xb62ecdc]
  408791:	test   al,0x39
  408793:	lock push 0x378d9dbb
  408799:	adc    eax,0x9ad30556
  40879e:	lahf   
  40879f:	jne    0x4087b8
  4087a1:	push   0x23fba516
  4087a6:	test   DWORD PTR [edx-0x55],ecx
  4087a9:	dec    edi
  4087aa:	jg     0x4087d9
  4087ac:	xor    BYTE PTR [ebp-0x4e],bh
  4087af:	mov    bh,0x1f
  4087b1:	push   ecx
  4087b2:	jno    0x4087f3
  4087b4:	pop    esp
  4087b5:	pop    edi
  4087b6:	sub    edi,edx
  4087b8:	(bad)  
  4087b9:	paddw  mm5,mm0
  4087bc:	pop    ebx
  4087bd:	dec    eax
  4087be:	pop    ss
  4087bf:	lock lods al,BYTE PTR ds:[esi]
  4087c1:	scas   al,BYTE PTR es:[edi]
  4087c2:	mov    esp,0xe18211e7
  4087c7:	ins    DWORD PTR es:[edi],dx
  4087c8:	jmp    0xb9d8776a
  4087cd:	adc    al,0xa7
  4087cf:	jnp    0x4087cb
  4087d1:	mov    edi,0x9655e44d
  4087d6:	sbb    BYTE PTR [ebx+0x2],bl
  4087d9:	stos   DWORD PTR es:[edi],eax
  4087da:	adc    al,0xa1
  4087dc:	inc    esp
  4087dd:	mov    ds:0x43f059a2,al
  4087e2:	test   al,0xf5
  4087e4:	add    DWORD PTR [esi-0xb5969fb],edi
  4087ea:	jbe    0x4087ed
  4087ec:	dec    edx
  4087ed:	jb     0x4087d1
  4087ef:	retf   
  4087f0:	jmp    DWORD PTR [eax+0x79f32af9]
  4087f6:	cmp    BYTE PTR [eax-0x15],0x6b
  4087fa:	mov    ah,0xae
  4087fc:	sbb    DWORD PTR ds:[edi+0x3d41d6da],ebp
  408803:	call   0x7daf:0x5b5e328b
  40880a:	cmp    eax,0x25ea43bc
  40880f:	adc    eax,0x87175c63
  408814:	lods   eax,DWORD PTR ds:[esi]
  408815:	dec    ebx
  408816:	loop   0x408854
  408818:	clc    
  408819:	aam    0x3
  40881b:	adc    bh,bh
  40881d:	(bad)  
  40881e:	not    DWORD PTR [edx+0x5]
  408821:	iret   
  408822:	adc    dl,bl
  408824:	retf   
  408825:	mov    ebx,0x8a11bc18
  40882a:	adc    DWORD PTR [eax*2+0x41b915d4],edi
  408831:	jp     0x4087e2
  408833:	inc    edx
  408834:	and    esi,edx
  408836:	jl     0x4087d4
  408838:	in     eax,0xf2
  40883a:	add    DWORD PTR [ecx-0x71],esi
  40883d:	mov    dh,0x20
  40883f:	pop    ebp
  408840:	mov    gs,WORD PTR [eax+0x53]
  408843:	dec    ebx
  408844:	jmp    0x5460f610
  408849:	arpl   WORD PTR [edi-0x70],bx
  40884c:	push   cs
  40884d:	mov    WORD PTR [edx-0x30],es
  408850:	aad    0xc7
  408852:	test   DWORD PTR [ecx-0x5d95059f],edx
  408858:	nop
  408859:	bnd jg 0x4087e3
  40885c:	push   ebp
  40885d:	xor    eax,0x8f742df7
  408862:	jno    0x4087f0
  408864:	lods   al,BYTE PTR ds:[esi]
  408865:	mov    al,ds:0xe15ac355
  40886a:	ror    DWORD PTR [edx-0x48],cl
  40886d:	xchg   esp,eax
  40886e:	daa    
  40886f:	ret    0x1adb
  408872:	test   BYTE PTR [eax],bh
  408874:	jle    0x4088c8
  408876:	xchg   ecx,eax
  408877:	fsubr  st(1),st
  408879:	mov    eax,0x1a82b96a
  40887e:	out    0x90,al
  408880:	dec    edx
  408881:	js     0x4088b7
  408883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408884:	xor    ebp,edx
  408886:	sbb    ah,ch
  408888:	int    0x9a
  40888a:	or     DWORD PTR [ecx+eiz*2+0x6e],0x36
  40888f:	cmp    BYTE PTR [ebp+0x1fd59953],al
  408895:	adc    eax,edx
  408897:	sti    
  408898:	xchg   edi,eax
  408899:	inc    esp
  40889a:	aad    0xb
  40889c:	and    BYTE PTR [ecx],bl
  40889e:	xchg   edi,eax
  40889f:	add    esi,ebx
  4088a1:	xlat   BYTE PTR ds:[ebx]
  4088a2:	sahf   
  4088a3:	dec    edx
  4088a4:	xchg   ebp,eax
  4088a5:	test   eax,0x8da6cbed
  4088aa:	add    ah,BYTE PTR [edx-0x37]
  4088ad:	cmp    ch,BYTE PTR [esi+edi*8]
  4088b0:	add    al,dh
  4088b2:	pop    ebx
  4088b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088b5:	mul    BYTE PTR [edx+0x3ddb6486]
  4088bb:	rcl    bh,1
  4088bd:	push   0x6b
  4088bf:	xor    eax,0xd23cf439
  4088c4:	jge    0x4088a2
  4088c6:	push   esp
  4088c7:	pop    eax
  4088c8:	and    DWORD PTR [edx+0x3e],ebx
  4088cb:	test   BYTE PTR [edx+0x5f13baa7],cl
  4088d1:	add    edi,DWORD PTR [ebx-0x5fba1b7d]
  4088d7:	xchg   ebp,eax
  4088d8:	jge    0x408902
  4088da:	out    dx,eax
  4088db:	shl    esp,0xfd
  4088de:	lods   eax,DWORD PTR ds:[esi]
  4088df:	push   ebx
  4088e0:	jmp    0x1d10893b
  4088e5:	inc    ecx
  4088e6:	leave  
  4088e7:	ret    0x9dfa
  4088ea:	in     al,dx
  4088eb:	test   BYTE PTR [edx],ch
  4088ed:	cs cld 
  4088ef:	xchg   DWORD PTR [edi],ecx
  4088f1:	fcomp  QWORD PTR [esi+0x3383a263]
  4088f7:	mov    cl,0x3f
  4088f9:	cli    
  4088fa:	dec    eax
  4088fb:	scas   al,BYTE PTR es:[edi]
  4088fc:	xor    BYTE PTR [ecx+0x4d],ah
  4088ff:	imul   ebx,esi,0x3064f768
  408905:	test   eax,0x5a82fa27
  40890a:	ds jae 0x408944
  40890d:	and    ecx,0x125bd727
  408913:	ja     0x408920
  408915:	fucom  st(5)
  408917:	jg     0x4088c6
  408919:	mov    esp,0xbab11ce5
  40891e:	push   edi
  40891f:	out    dx,eax
  408920:	fist   WORD PTR [eax-0x7a]
  408923:	jb     0x408960
  408925:	retf   0xeafa
  408928:	xchg   DWORD PTR [eax+edi*8],eax
  40892b:	mov    cl,0xa0
  40892d:	mov    DWORD PTR [edi*1+0xfffbb2c],0xecd17b8e
  408938:	idiv   eax
  40893a:	xor    eax,0xa37aafd1
  40893f:	ds sti 
  408941:	das    
  408942:	and    al,0x2
  408944:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408945:	fsub   DWORD PTR [eax+0x42eba078]
  40894b:	mov    DWORD PTR [edi+0x59f76da],edi
  408951:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408952:	sub    BYTE PTR [eax-0x6a],0xe
  408956:	pop    edi
  408957:	(bad)  
  408958:	mov    ah,0xca
  40895a:	cmp    edx,DWORD PTR [ecx+0x2a]
  40895d:	jb     0x408941
  40895f:	add    eax,0x2bbc7238
  408964:	cs shl ebx,cl
  408967:	and    eax,0xb807d17d
  40896c:	lods   eax,DWORD PTR ds:[esi]
  40896d:	mov    al,ds:0x22145ae
  408972:	cmp    bh,bl
  408974:	clc    
  408975:	loop   0x4089bd
  408977:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408978:	mov    esp,0x10c9e8c2
  40897d:	sbb    BYTE PTR [ebx+0x2c421d86],dl
  408983:	outs   dx,BYTE PTR ds:[esi]
  408984:	xlat   BYTE PTR ds:[ebx]
  408985:	mov    bl,BYTE PTR [esi-0x6d2f0e52]
  40898b:	pop    ss
  40898c:	call   0x32a04473
  408991:	fdivr  QWORD PTR ds:0x1eb99621
  408997:	mul    edx
  408999:	xchg   DWORD PTR [eax-0x2f],ecx
  40899c:	inc    ecx
  40899d:	xchg   ebx,eax
  40899e:	push   esp
  40899f:	push   bx
  4089a1:	jecxz  0x408950
  4089a3:	mov    cl,0x34
  4089a5:	in     eax,0x4b
  4089a7:	stos   DWORD PTR es:[edi],eax
  4089a8:	push   esi
  4089a9:	mov    ch,0x57
  4089ab:	xchg   DWORD PTR gs:[ebx],esp
  4089ae:	mov    dh,0x61
  4089b0:	adc    BYTE PTR [eax+0x75771acd],0xfe
  4089b7:	xchg   ebp,eax
  4089b8:	in     eax,0x34
  4089ba:	mov    dh,0x53
  4089bc:	push   0xef469f85
  4089c1:	test   DWORD PTR [ecx],esi
  4089c3:	sbb    al,0xf0
  4089c5:	xor    BYTE PTR [esi+eax*8+0x37],ch
  4089c9:	js     0x4089d9
  4089cb:	fist   WORD PTR [edi]
  4089cd:	test   DWORD PTR [eax],ebp
  4089cf:	pushf  
  4089d0:	(bad)
  4089d4:	or     eax,ebx
  4089d6:	(bad)  
  4089d7:	mov    edx,0xff3d14ad
  4089dc:	pop    esi
  4089dd:	adc    eax,0x100be17c
  4089e2:	or     BYTE PTR [edi-0x6d],al
  4089e5:	ins    BYTE PTR es:[edi],dx
  4089e6:	sbb    BYTE PTR [edi-0x4680f5],cl
  4089ec:	call   0xec0a:0x33025431
  4089f3:	sub    eax,0x5b184268
  4089f8:	jl     0x4089e4
  4089fa:	cmp    bl,BYTE PTR [esi+0x32]
  4089fd:	shl    BYTE PTR [esi-0x3a],0xf2
  408a01:	cli    
  408a02:	daa    
  408a03:	sbb    BYTE PTR [esi-0x2f],dh
  408a06:	loope  0x4089b1
  408a08:	test   BYTE PTR [esi],ah
  408a0a:	repnz xor al,0x26
  408a0d:	sub    DWORD PTR [eax+eiz*8-0x70de96cd],eax
  408a14:	(bad)  
  408a15:	fistp  WORD PTR [edi-0x62]
  408a18:	mov    al,0xb
  408a1a:	cdq    
  408a1b:	and    eax,0x310816c3
  408a20:	mov    esp,0x8f1cc6b9
  408a25:	int    0xdd
  408a27:	push   ecx
  408a28:	call   0xc3e085a4
  408a2d:	sbb    BYTE PTR [esi],al
  408a2f:	mov    cl,0x23
  408a31:	cdq    
  408a32:	call   0xbe81b31
  408a37:	push   0x7
  408a39:	fwait
  408a3a:	push   ecx
  408a3b:	loop   0x408a5a
  408a3d:	adc    BYTE PTR [edx+ebx*4-0x46],0xbf
  408a42:	leave  
  408a43:	jnp    0x4089fa
  408a45:	inc    ebp
  408a46:	je     0x408a37
  408a48:	cld    
  408a49:	and    eax,0x35ada4b0
  408a4e:	aas    
  408a4f:	addr16 push ecx
  408a51:	cmc    
  408a52:	fadd   QWORD PTR [edx]
  408a54:	(bad)  
  408a55:	fisttp WORD PTR [edi+0x46e17d1f]
  408a5b:	sub    esp,esp
  408a5d:	adc    ah,cl
  408a5f:	jmp    0x408a37
  408a61:	jno    0x408a58
  408a63:	jecxz  0x4089ea
  408a65:	cwde   
  408a66:	imul   ecx,DWORD PTR [eax+0x6b949ba0],0x7732b3a6
  408a70:	dec    esp
  408a71:	(bad)  
  408a72:	(bad)  
  408a73:	ror    dh,0x10
  408a76:	daa    
  408a77:	(bad)  
  408a79:	lds    ecx,FWORD PTR [eax+eiz*1+0x4a]
  408a7d:	dec    esi
  408a7e:	sub    DWORD PTR [eax+0x47],0xd5511483
  408a85:	mov    ss:0xcf0268fb,al
  408a8b:	nop/reserved BYTE PTR [ecx]
  408a8e:	data16 xor al,0xf9
  408a91:	jmp    0xdf9:0xfba70894
  408a98:	ror    BYTE PTR [ecx-0x49],1
  408a9b:	in     eax,0x3b
  408a9d:	(bad)  
  408a9f:	sub    DWORD PTR [ebx],eax
  408aa1:	inc    ebp
  408aa2:	pop    ss
  408aa3:	shr    ebp,0x52
  408aa6:	out    dx,eax
  408aa7:	js     0x408aa6
  408aa9:	pop    ebp
  408aaa:	adc    eax,0xbc83426d
  408aaf:	or     dl,bh
  408ab1:	sub    DWORD PTR [edi+0x65],edx
  408ab4:	jp     0x408a55
  408ab6:	mov    eax,cs
  408ab8:	jno    0x408aba
  408aba:	jmp    0xf32bfa41
  408abf:	sar    ebp,cl
  408ac1:	adc    cl,BYTE PTR [edx+0x72]
  408ac4:	jmp    0x408b12
  408ac6:	mov    dl,0x69
  408ac8:	(bad)  
  408ac9:	(bad)  
  408aca:	xchg   edi,eax
  408acb:	cli    
  408acc:	scas   eax,DWORD PTR es:[edi]
  408acd:	daa    
  408ace:	xor    bl,BYTE PTR ds:0xd97c6fe
  408ad4:	(bad)  
  408ad5:	jb     0x408b37
  408ad7:	mov    BYTE PTR [edx-0x67],bh
  408ada:	stc    
  408adb:	xchg   ebp,eax
  408adc:	imul   edx,DWORD PTR [ecx-0x3fa3065b],0x3f176f01
  408ae6:	add    dh,BYTE PTR [esi]
  408ae8:	or     al,0xe8
  408aea:	iret   
  408aeb:	xchg   edx,eax
  408aec:	mov    eax,0xa1cc7eb2
  408af1:	int3   
  408af2:	dec    BYTE PTR [ebx+0x6fb58eb0]
  408af8:	xchg   ebx,eax
  408af9:	shr    DWORD PTR [ecx],cl
  408afb:	lds    eax,FWORD PTR [ebp-0x1b]
  408afe:	adc    eax,0x806d5e5e
  408b03:	mov    BYTE PTR [ebx-0x3fe1d6f1],al
  408b09:	mov    ch,0xf5
  408b0b:	in     eax,dx
  408b0c:	ja     0x408af2
  408b0e:	mov    dh,0xae
  408b10:	mov    gs,eax
  408b12:	cdq    
  408b13:	aad    0x19
  408b15:	cdq    
  408b16:	fdiv   QWORD PTR [edx]
  408b18:	pcmpgtb mm4,QWORD PTR [edi+edx*8]
  408b1c:	add    al,0xc5
  408b1e:	shl    eax,1
  408b20:	out    0xd4,al
  408b22:	enter  0xc0b6,0x6a
  408b26:	into   
  408b27:	cli    
  408b28:	jecxz  0x408b45
  408b2a:	pop    es
  408b2b:	aaa    
  408b2c:	push   ss
  408b2d:	xchg   ebx,eax
  408b2e:	xor    dl,cl
  408b30:	lock sbb ebx,esp
  408b33:	repz inc eax
  408b35:	fwait
  408b36:	stc    
  408b37:	jle    0x408abc
  408b39:	cmp    bh,dh
  408b3b:	xor    al,0xf7
  408b3d:	or     DWORD PTR [eax],edx
  408b3f:	std    
  408b40:	pop    ss
  408b41:	or     al,0x9b
  408b43:	mov    eax,ds:0x2a727fd7
  408b48:	bound  esp,QWORD PTR [edi+0x1a5ccb]
  408b4e:	mov    ah,cl
  408b50:	jge    0x408b5d
  408b52:	call   0x17a7:0x115a27e0
  408b59:	xchg   ebp,eax
  408b5a:	adc    BYTE PTR [eax-0x15],dh
  408b5d:	call   0xa892:0xd86481a9
  408b64:	loopne 0x408b31
  408b66:	arpl   WORD PTR [eax],dx
  408b68:	sbb    al,0x9b
  408b6a:	je     0x408bcb
  408b6c:	xchg   esi,eax
  408b6d:	sahf   
  408b6e:	pop    ecx
  408b6f:	hlt    
  408b70:	xor    dl,BYTE PTR [edi+0x76fca6fc]
  408b76:	xchg   ebp,eax
  408b77:	inc    ebx
  408b78:	into   
  408b79:	push   es
  408b7a:	dec    ecx
  408b7b:	cmp    cl,BYTE PTR [ebx+0x369505b0]
  408b81:	(bad)  
  408b82:	adc    eax,0x1ac2467f
  408b87:	jecxz  0x408b96
  408b89:	pop    ds
  408b8a:	ret    
  408b8b:	sahf   
  408b8c:	jle    0x408b9d
  408b8e:	outs   dx,DWORD PTR ds:[esi]
  408b8f:	mov    dh,0x1c
  408b91:	jp     0x408b6c
  408b93:	daa    
  408b94:	repnz pop edi
  408b96:	pop    edx
  408b97:	ins    DWORD PTR es:[edi],dx
  408b98:	test   DWORD PTR [eax+0x7e],0x4f7798da
  408b9f:	das    
  408ba0:	repz loopne 0x408c1e
  408ba3:	xor    ebp,DWORD PTR [ebp+0x44ed631b]
  408ba9:	cld    
  408baa:	mov    bh,0xfa
  408bac:	add    esp,DWORD PTR [esp+esi*1+0x6c]
  408bb0:	jbe    0x408b45
  408bb2:	and    DWORD PTR [ecx+0x61727943],ecx
  408bb8:	jo     0x408c1a
  408bba:	pop    ebx
  408bbb:	jo     0x408bd3
  408bbd:	dec    ecx
  408bbe:	int    0xd4
  408bc0:	cmp    eax,0xab8e6601
  408bc5:	outs   dx,BYTE PTR ds:[esi]
  408bc6:	inc    eax
  408bc7:	jns    0x408b69
  408bc9:	cmp    ebx,DWORD PTR ds:0x34342a12
  408bcf:	jns    0x408b7b
  408bd1:	pop    edx
  408bd2:	ds adc al,0xc0
  408bd5:	push   es
  408bd6:	icebp  
  408bd7:	call   0x1283:0xa85bf814
  408bde:	dec    ebp
  408bdf:	adc    eax,0x9916e2c6
  408be4:	sbb    DWORD PTR [ecx-0x3d3fd2dc],ecx
  408bea:	pop    ss
  408beb:	loope  0x408b8c
  408bed:	mov    dl,0x2c
  408bef:	adc    esp,DWORD PTR [edx+esi*4+0x5]
  408bf3:	iret   
  408bf4:	add    al,0xb
  408bf6:	loope  0x408c32
  408bf8:	push   esi
  408bf9:	popf   
  408bfa:	push   edx
  408bfb:	scas   eax,DWORD PTR es:[edi]
  408bfc:	in     eax,dx
  408bfd:	jno    0x408be7
  408bff:	adc    DWORD PTR [ebx-0x7f05f94],ebx
  408c05:	xchg   edx,eax
  408c06:	dec    esi
  408c07:	jb     0x408b9b
  408c09:	int    0x33
  408c0b:	jae    0x408c6c
  408c0d:	sahf   
  408c0e:	ins    BYTE PTR es:[edi],dx
  408c0f:	ret    0xd914
  408c12:	mov    ebx,0x20a4d66d
  408c17:	lahf   
  408c18:	inc    esi
  408c19:	dec    ecx
  408c1a:	pop    edx
  408c1b:	adc    ebx,DWORD PTR [edi]
  408c1d:	(bad)  
  408c1e:	fsubrp st(4),st
  408c20:	pusha  
  408c21:	sahf   
  408c22:	sub    esi,DWORD PTR [edi]
  408c24:	dec    edi
  408c25:	xchg   edi,eax
  408c26:	push   edx
  408c27:	in     eax,0xf3
  408c29:	retf   
  408c2a:	xor    al,0x71
  408c2c:	jno    0x408be5
  408c2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c2f:	push   0x5cb7b1a
  408c34:	mov    dl,0xbd
  408c36:	cmc    
  408c37:	icebp  
  408c38:	daa    
  408c39:	sahf   
  408c3a:	adc    ecx,DWORD PTR [eax]
  408c3c:	cmp    BYTE PTR [ebx-0x137ce04],al
  408c42:	cdq    
  408c43:	push   cs
  408c44:	enter  0xed2e,0x17
  408c48:	jnp    0x408cac
  408c4a:	cs rcl ch,1
  408c4d:	and    BYTE PTR [eax],bl
  408c4f:	out    0x5b,al
  408c51:	add    ebp,DWORD PTR fs:0x404732c8
  408c58:	jno    0x408be2
  408c5a:	sahf   
  408c5b:	(bad)  
  408c5c:	loopne 0x408bfb
  408c5e:	outs   dx,BYTE PTR ds:[esi]
  408c5f:	mov    ah,0xd6
  408c61:	gs adc al,0xdf
  408c64:	and    ah,BYTE PTR [edx-0x3]
  408c67:	mov    bl,0xe8
  408c69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c6a:	leave  
  408c6b:	data16 mov al,ds:0x909f3b42
  408c71:	(bad)  
  408c73:	cmc    
  408c74:	pop    esp
  408c75:	sbb    eax,0x9bce28c2
  408c7a:	bound  esi,QWORD PTR [edx-0x333c559e]
  408c80:	mov    al,0xc0
  408c82:	cli    
  408c83:	pop    ecx
  408c84:	fdivr  st(3),st
  408c86:	or     eax,0xfa6aa136
  408c8b:	das    
  408c8c:	push   cs
  408c8d:	adc    bh,BYTE PTR [eax-0x76]
  408c90:	nop
  408c91:	(bad)  
  408c92:	sbb    eax,0xc337a4d2
  408c97:	in     eax,0xd1
  408c99:	and    ch,dl
  408c9b:	loop   0x408d0c
  408c9d:	(bad)  
  408c9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c9f:	xor    bh,0xd7
  408ca2:	sbb    eax,edx
  408ca4:	test   al,0x7f
  408ca6:	in     eax,dx
  408ca7:	xchg   BYTE PTR [ebp-0x10],bl
  408caa:	push   edi
  408cab:	imul   edx,edi,0xffffffdd
  408cae:	repnz loop 0x408d21
  408cb1:	ret    0x9b0d
  408cb4:	fidivr WORD PTR [edi]
  408cb6:	inc    esi
  408cb7:	in     eax,0xae
  408cb9:	fcmovbe st,st(0)
  408cbb:	inc    ebp
  408cbc:	rcl    bh,cl
  408cbe:	loope  0x408c46
  408cc0:	push   ebx
  408cc1:	ja     0x408cf1
  408cc3:	fstp   DWORD PTR [ebx+0x25]
  408cc6:	fisttp DWORD PTR [edx-0x17848e0b]
  408ccc:	fptan  
  408cce:	or     al,0x23
  408cd0:	jne    0x408cad
  408cd2:	mov    DWORD PTR [eax],edi
  408cd4:	out    0xc8,eax
  408cd6:	nop
  408cd7:	fidiv  DWORD PTR [edi-0x7a6a14e9]
  408cdd:	fwait
  408cde:	mov    cl,0x79
  408ce0:	lods   eax,DWORD PTR ds:[esi]
  408ce1:	mov    ch,0xe4
  408ce3:	hlt    
  408ce4:	jae    0x408c6b
  408ce6:	cmc    
  408ce7:	push   esi
  408ce8:	out    0x23,eax
  408cea:	je     0x408cd6
  408cec:	mov    eax,ds:0x463cdb62
  408cf1:	xchg   esi,eax
  408cf2:	(bad)  
  408cf3:	fst    QWORD PTR ds:0x1c3f3db2
  408cf9:	ins    DWORD PTR es:[edi],dx
  408cfa:	jmp    DWORD PTR [edi-0x52d8e223]
  408d00:	push   es
  408d01:	cwde   
  408d02:	arpl   WORD PTR [edi-0x51f25965],si
  408d08:	addr16 jbe 0x408ce0
  408d0b:	aas    
  408d0c:	dec    edx
  408d0d:	cmc    
  408d0e:	mov    eax,ds:0x50a898f3
  408d13:	jno    0x408d3c
  408d15:	repz pop ds
  408d17:	push   edi
  408d18:	and    ah,cl
  408d1a:	sbb    al,0xc0
  408d1c:	inc    eax
  408d1d:	sar    BYTE PTR [edi-0x736d6c5e],0x5
  408d24:	icebp  
  408d25:	call   0x6ef2:0xbe9ac4f4
  408d2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d2d:	dec    ebp
  408d2e:	pop    esi
  408d2f:	add    cl,BYTE PTR [eax-0x1a]
  408d32:	mov    cl,0x79
  408d34:	xor    eax,DWORD PTR [ebp-0x748084bc]
  408d3a:	inc    ecx
  408d3b:	loope  0x408d08
  408d3d:	in     al,0x57
  408d3f:	push   eax
  408d40:	lds    edx,FWORD PTR [ebx-0x1b7b6d00]
  408d46:	or     ecx,DWORD PTR [eax+0x763e6ab0]
  408d4c:	xlat   BYTE PTR ds:[ebx]
  408d4d:	loopne 0x408d78
  408d4f:	inc    eax
  408d50:	sahf   
  408d51:	psrld  mm7,QWORD PTR [esi-0x748a8ee5]
  408d58:	mov    ds:0xc048c98e,al
  408d5d:	rcl    DWORD PTR [edi],cl
  408d5f:	int3   
  408d60:	push   ebx
  408d61:	pop    edi
  408d62:	iret   
  408d63:	das    
  408d64:	cld    
  408d65:	push   edi
  408d66:	cld    
  408d67:	stos   DWORD PTR es:[edi],eax
  408d68:	or     DWORD PTR [eax+0x53],edi
  408d6b:	inc    ecx
  408d6d:	and    ecx,esi
  408d6f:	mov    DWORD PTR [esi+0x72],ebx
  408d72:	push   eax
  408d73:	mov    edi,DWORD PTR [eax]
  408d75:	add    eax,0x86c8ddb4
  408d7a:	add    dh,BYTE PTR [esi-0x657a1b49]
  408d80:	ss mov ebp,0x499a3e25
  408d86:	stos   BYTE PTR es:[edi],al
  408d87:	outs   dx,DWORD PTR ds:[esi]
  408d88:	mov    WORD PTR [esi],es
  408d8a:	jns    0x408e0b
  408d8c:	push   edi
  408d8d:	sahf   
  408d8e:	jns    0x408ddc
  408d90:	mov    eax,0x4c0929ce
  408d95:	sub    eax,DWORD PTR [ebx+0x5d]
  408d98:	es shr cl,0xe4
  408d9c:	inc    edx
  408d9d:	arpl   WORD PTR ds:[edi+0x728371ef],di
  408da4:	(bad)  
  408da5:	std    
  408da6:	cdq    
  408da7:	xor    BYTE PTR [ebx-0x4f],0xd7
  408dab:	jnp    0x408dcc
  408dad:	mov    WORD PTR [eax],ds
  408daf:	leave  
  408db0:	push   ds
  408db1:	or     eax,0x159f97f4
  408db6:	call   DWORD PTR [eax-0x1e]
  408db9:	xor    DWORD PTR [edx],ecx
  408dbb:	hlt    
  408dbc:	dec    esi
  408dbd:	pop    ds
  408dbe:	push   ss
  408dbf:	shl    BYTE PTR [eax-0x47],0xa1
  408dc3:	and    BYTE PTR [edi],ch
  408dc5:	cmc    
  408dc6:	inc    eax
  408dc7:	call   DWORD PTR [edi-0x4c5fb9b2]
  408dcd:	nop
  408dce:	and    edx,ebx
  408dd0:	push   ds
  408dd1:	mov    bh,bh
  408dd3:	dec    ebp
  408dd4:	iret   
  408dd5:	mov    cl,0x69
  408dd7:	adc    eax,0x6a17b486
  408ddc:	and    eax,0xec4bf678
  408de1:	inc    ecx
  408de2:	mov    ch,0x5a
  408de4:	repnz push cs
  408de6:	push   ss
  408de7:	and    DWORD PTR [edi+0x5e1fb231],ebp
  408ded:	ins    DWORD PTR es:[edi],dx
  408dee:	lock mov ds:0xf7a76ea5,eax
  408df4:	js     0x408e68
  408df6:	add    DWORD PTR [edx+0x53],0x64
  408dfa:	push   edi
  408dfb:	cmp    ecx,DWORD PTR [edx]
  408dfd:	jg     0x408e3b
  408dff:	(bad)  
  408e00:	pop    ebx
  408e01:	pop    ecx
  408e02:	cs out dx,eax
  408e04:	lahf   
  408e05:	cmp    edi,DWORD PTR [ebx]
  408e07:	xor    DWORD PTR [esi+0x28ca2729],esp
  408e0d:	fiadd  DWORD PTR [edx+0x247936fa]
  408e13:	shr    esi,0xdf
  408e16:	dec    ebp
  408e17:	mov    BYTE PTR [ecx+0x7a],bh
  408e1a:	(bad)  
  408e1b:	and    eax,0x83460469
  408e20:	push   eax
  408e21:	(bad)  
  408e22:	(bad)  
  408e23:	aaa    
  408e24:	cmp    dh,0x8d
  408e27:	(bad)  
  408e28:	mov    ss,WORD PTR [ecx-0x77]
  408e2b:	xchg   esi,eax
  408e2c:	in     eax,dx
  408e2d:	jns    0x408e42
  408e2f:	mov    dh,0xce
  408e31:	enter  0xa22,0xe6
  408e35:	call   0xc7e4e125
  408e3a:	std    
  408e3b:	add    DWORD PTR [edx-0x75d67512],esp
  408e41:	mov    dl,0x96
  408e43:	add    edx,DWORD PTR [ebx]
  408e45:	ucomiss xmm3,DWORD PTR [ecx-0x39b75732]
  408e4c:	cdq    
  408e4d:	std    
  408e4e:	je     0x408ea8
  408e50:	sbb    eax,0x129fdbfa
  408e55:	bound  ebx,QWORD PTR gs:[ecx-0x39]
  408e59:	xchg   esp,eax
  408e5a:	hlt    
  408e5b:	push   cs
  408e5c:	arpl   WORD PTR [ecx+0x3ac42940],cx
  408e62:	push   ds
  408e63:	xchg   ebx,eax
  408e64:	push   es
  408e65:	sbb    ecx,ebp
  408e67:	pop    ss
  408e68:	repnz sub ch,BYTE PTR [esi]
  408e6b:	mov    ch,BYTE PTR [edx]
  408e6d:	xchg   edi,eax
  408e6e:	xor    edx,DWORD PTR [ebx+0x69]
  408e71:	ja     0x408eba
  408e73:	in     al,0xc9
  408e75:	(bad)  
  408e76:	adc    al,0xd9
  408e78:	dec    ebx
  408e79:	mov    eax,ds:0x1661f53a
  408e7e:	xchg   DWORD PTR [esi+edx*1+0x4],ebp
  408e82:	push   ebp
  408e83:	pop    es
  408e84:	and    DWORD PTR [ebp-0x77955f4a],esp
  408e8a:	in     al,0x72
  408e8c:	bound  ecx,QWORD PTR [esi]
  408e8e:	push   ss
  408e8f:	test   al,0xcc
  408e91:	adc    eax,0x43f98e7e
  408e96:	out    0x94,eax
  408e98:	bound  ebp,QWORD PTR [ebp+0x4f9e4984]
  408e9e:	lock call 0x2ada:0x147653a9
  408ea6:	arpl   WORD PTR [eax],ax
  408ea8:	mov    al,ds:0x323cad64
  408ead:	neg    BYTE PTR [ecx]
  408eaf:	push   esi
  408eb0:	sbb    eax,0xb3d92613
  408eb5:	mov    ebx,0xcdb5f011
  408eba:	dec    esp
  408ebb:	adc    DWORD PTR [eax],edx
  408ebd:	int    0xd7
  408ebf:	dec    DWORD PTR [ecx]
  408ec1:	mov    ebx,0x90009de6
  408ec6:	cmp    al,0xeb
  408ec8:	pop    esi
  408ec9:	loope  0x408efe
  408ecb:	fist   DWORD PTR [edi-0x24e86d75]
  408ed1:	sub    BYTE PTR [edi+0x5986e59f],ch
  408ed7:	les    ecx,FWORD PTR [eax-0x1f9fe732]
  408edd:	mov    cl,0x5b
  408edf:	xchg   ebx,eax
  408ee0:	(bad)  
  408ee1:	stos   BYTE PTR es:[edi],al
  408ee2:	test   BYTE PTR [ebx-0x1d],bl
  408ee5:	loope  0x408e72
  408ee7:	push   0xffffffdf
  408ee9:	add    DWORD PTR [ebp+0x6f],0xc0b088bc
  408ef0:	mov    edi,0x2b83c00d
  408ef5:	mov    ds:0x6794ed04,eax
  408efa:	outs   dx,DWORD PTR ds:[esi]
  408efb:	add    al,0x10
  408efd:	xchg   ebp,eax
  408efe:	inc    edi
  408eff:	add    edi,eax
  408f01:	retf   0xc3b4
  408f04:	adc    edi,ebp
  408f06:	aad    0xd8
  408f08:	daa    
  408f09:	pop    ss
  408f0a:	sbb    eax,0x4c5c103b
  408f0f:	push   esp
  408f10:	jb     0x408f17
  408f12:	pop    edi
  408f13:	inc    ebp
  408f14:	leave  
  408f15:	clc    
  408f16:	mov    al,0xb9
  408f18:	sbb    DWORD PTR [edi],eax
  408f1a:	in     eax,0x29
  408f1c:	and    DWORD PTR [ebx-0x51],edi
  408f1f:	xor    DWORD PTR [eax+0x59],ebp
  408f22:	stos   BYTE PTR es:[edi],al
  408f23:	push   0x1b
  408f25:	mov    ch,0x8c
  408f27:	xchg   esp,eax
  408f28:	sub    BYTE PTR [edx],bl
  408f2a:	or     esi,DWORD PTR [edi]
  408f2c:	pop    es
  408f2d:	dec    esp
  408f2e:	add    al,0xf7
  408f30:	sar    ebx,0x11
  408f33:	cld    
  408f34:	data16 sti 
  408f36:	mov    ds:0xa7092697,eax
  408f3b:	mov    ah,0xed
  408f3d:	inc    ecx
  408f3e:	xor    dh,BYTE PTR [edi+0x5d]
  408f41:	inc    ecx
  408f42:	cmp    eax,DWORD PTR [ebp+eiz*4-0x29]
  408f46:	out    0xd7,eax
  408f48:	icebp  
  408f49:	mov    ebp,0xad9bc156
  408f4e:	push   ebx
  408f4f:	ret    
  408f50:	dec    edx
  408f51:	loopne 0x408f83
  408f53:	adc    BYTE PTR [eax],ah
  408f55:	mov    DWORD PTR ds:[esp+ecx*8],esp
  408f59:	sub    DWORD PTR [edx-0x5],edi
  408f5c:	lea    eax,[esi]
  408f5e:	add    al,0xc
  408f60:	test   BYTE PTR [esi+0x65489d35],bl
  408f66:	sar    esi,0xe5
  408f69:	ror    esi,1
  408f6b:	add    cl,BYTE PTR [ecx+0x343d0d2a]
  408f71:	sub    ah,ah
  408f73:	sbb    eax,0x897c9789
  408f78:	mov    bl,0xd1
  408f7a:	pop    edx
  408f7b:	leave  
  408f7c:	dec    esp
  408f7d:	sti    
  408f7e:	mov    ah,0x8f
  408f80:	add    BYTE PTR [ecx],ch
  408f82:	pop    esi
  408f83:	out    0x32,eax
  408f85:	mov    ebx,0x5f3c4734
  408f8a:	loope  0x408f59
  408f8c:	push   edx
  408f8d:	pop    es
  408f8e:	popf   
  408f8f:	jle    0x408fd7
  408f91:	jbe    0x408f78
  408f93:	in     eax,0xf8
  408f95:	mov    ah,0x2e
  408f97:	test   al,0x55
  408f99:	cwde   
  408f9a:	in     al,dx
  408f9b:	nop
  408f9c:	in     eax,0x50
  408f9e:	and    DWORD PTR [esi+0x4d],esp
  408fa1:	add    edi,ebx
  408fa3:	shl    BYTE PTR [esi+ecx*1-0x75],cl
  408fa7:	int3   
  408fa8:	pop    ebp
  408fa9:	int    0xdd
  408fab:	sub    eax,0x3d75026f
  408fb0:	sbb    BYTE PTR [edi+0xc],0x82
  408fb4:	mov    dh,0xac
  408fb6:	scas   al,BYTE PTR es:[edi]
  408fb7:	cmc    
  408fb8:	mov    edi,0xc7898525
  408fbd:	pop    ebx
  408fbe:	loop   0x408fd9
  408fc0:	sub    edx,DWORD PTR [ecx]
  408fc2:	bnd jmp 0x408fb4
  408fc5:	mov    ah,0x1d
  408fc7:	mov    ebx,0xed11528e
  408fcc:	repz popf 
  408fce:	mov    BYTE PTR [edi-0x5abb164c],bl
  408fd4:	test   BYTE PTR [ebp+0x51b79fc5],al
  408fda:	es pop ecx
  408fdc:	dec    esp
  408fdd:	mov    cs,esp
  408fdf:	inc    esp
  408fe0:	add    BYTE PTR [ebx*4+0x7bc06304],0x9b
  408fe8:	xor    al,0xc7
  408fea:	pop    eax
  408feb:	mov    esp,0x243b3b18
  408ff0:	jne    0x409034
  408ff2:	lea    eax,[edi+ebx*1-0x55]
  408ff6:	enter  0x433,0x3d
  408ffa:	ret    
  408ffb:	xchg   esi,eax
  408ffc:	add    ah,BYTE PTR [eax]
  408ffe:	sub    BYTE PTR [ebx+0x6cbebd7b],bl
  409004:	push   edi
  409005:	lahf   
  409006:	push   eax
  409007:	cmc    
  409008:	fcmovnbe st,st(3)
  40900a:	js     0x408fef
  40900c:	imul   edx,DWORD PTR [ecx+0x47],0xffffffbe
  409010:	bound  ebx,QWORD PTR [esi+0xc508f28]
  409016:	xchg   ecx,edx
  409018:	cmc    
  409019:	shr    BYTE PTR [eax],cl
  40901b:	or     eax,eax
  40901d:	neg    DWORD PTR cs:[edi]
  409020:	rcl    DWORD PTR [ebp-0x1adf0f85],1
  409026:	mov    ds:0xaf430680,al
  40902b:	mov    bl,0x23
  40902d:	mov    ch,0x54
  40902f:	lods   al,BYTE PTR ds:[esi]
  409030:	lds    ecx,FWORD PTR [ecx]
  409032:	fild   QWORD PTR [ecx]
  409034:	jl     0x4090ab
  409036:	jecxz  0x408fec
  409038:	imul   esi,eax,0xfffffffa
  40903b:	push   ebx
  40903c:	in     al,0x91
  40903e:	jge    0x408fe4
  409040:	dec    edi
  409041:	fcomp  QWORD PTR [ecx+0x56ace7bd]
  409047:	sbb    bh,BYTE PTR [edi+0x2462f966]
  40904d:	imul   ebp,ebx,0xe8f24320
  409053:	cmp    DWORD PTR [ebx],0xffffffbf
  409056:	cld    
  409057:	lods   eax,DWORD PTR ds:[esi]
  409058:	jmp    0xd2efe02
  40905d:	rcl    DWORD PTR ds:0x711829af,0x7f
  409064:	popf   
  409065:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409066:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409067:	add    al,0xfe
  409069:	mov    dh,0x14
  40906b:	pop    ebx
  40906c:	and    eax,0x6a90cc7d
  409071:	loope  0x40907b
  409073:	mov    ebx,0x80ff9f
  409078:	mov    ecx,0x3d1dc579
  40907d:	and    DWORD PTR [edi],esp
  40907f:	pop    edi
  409080:	jno    0x40902e
  409082:	inc    edi
  409083:	jns    0x4090c1
  409085:	fild   WORD PTR [eax+0x4]
  409088:	es test al,0x82
  40908b:	ss ja  0x40901c
  40908e:	repz sbb DWORD PTR [eax-0x5a4b7366],eax
  409095:	int    0x55
  409097:	add    dl,BYTE PTR [ecx-0x36436de1]
  40909d:	ds in  eax,dx
  40909f:	outs   dx,DWORD PTR ds:[esi]
  4090a0:	mov    al,0x3b
  4090a2:	(bad)  
  4090a3:	jp     0x4090e5
  4090a5:	cmp    al,BYTE PTR [ebp+0x4c53c3ea]
  4090ab:	jbe    0x4090e7
  4090ad:	int3   
  4090ae:	test   DWORD PTR [eax-0x8],ebx
  4090b1:	fsub   DWORD PTR [eax+edi*8]
  4090b4:	adc    BYTE PTR [edx-0x1d],dh
  4090b7:	rcr    al,cl
  4090b9:	or     BYTE PTR [ebp-0x7ea83c7e],dh
  4090bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090c0:	fcmovbe st,st(7)
  4090c2:	mov    dl,0xd
  4090c4:	aas    
  4090c5:	xchg   DWORD PTR [esi+0x35],edx
  4090c8:	test   ch,dl
  4090ca:	cli    
  4090cb:	push   ecx
  4090cc:	es inc esi
  4090ce:	js     0x409148
  4090d0:	pop    esi
  4090d1:	pop    ss
  4090d2:	loop   0x4090f1
  4090d4:	leave  
  4090d5:	ret    
  4090d6:	mov    ch,0xb7
  4090d8:	and    bl,al
  4090da:	int    0x23
  4090dc:	fstp   QWORD PTR [edi+0x16]
  4090df:	jnp    0x4090a0
  4090e1:	mov    al,0xb9
  4090e3:	push   ebp
  4090e4:	adc    al,0x68
  4090e6:	mov    dl,0x68
  4090e8:	(bad)  
  4090e9:	cmc    
  4090ea:	ror    BYTE PTR [edi-0x29c18b0b],cl
  4090f0:	fidiv  DWORD PTR [edx]
  4090f2:	dec    edx
  4090f3:	setbe  BYTE PTR [ecx+0x71]
  4090f7:	sbb    eax,0x3ed62aed
  4090fc:	adc    ebx,edi
  4090fe:	aad    0x4b
  409100:	push   ebx
  409101:	adc    esp,ecx
  409103:	retf   0xf784
  409106:	mov    cl,0xc8
  409108:	enter  0xad13,0x58
  40910c:	out    dx,eax
  40910d:	outs   dx,DWORD PTR ds:[esi]
  40910e:	mov    BYTE PTR [edx],ch
  409110:	mov    bl,0xe0
  409112:	mov    ss,WORD PTR [edx]
  409114:	retf   
  409115:	jg     0x4090d0
  409117:	iret   
  409118:	retf   
  409119:	and    ch,cl
  40911b:	lea    ebx,ds:0x2b2cefa3
  409121:	xchg   edi,eax
  409122:	xor    al,0xa9
  409124:	adc    dl,BYTE PTR [ebp-0x11]
  409127:	xchg   edi,eax
  409128:	pushf  
  409129:	daa    
  40912a:	int3   
  40912b:	ins    DWORD PTR es:[edi],dx
  40912c:	(bad)  
  40912d:	xchg   edx,eax
  40912e:	jb     0x40913f
  409130:	fmul   DWORD PTR [ecx-0x16bc2a47]
  409136:	scas   eax,DWORD PTR es:[edi]
  409137:	and    eax,0x74638401
  40913c:	pop    es
  40913d:	pusha  
  40913e:	pop    es
  40913f:	fstp   DWORD PTR [ebx-0x2b933699]
  409145:	pop    esi
  409146:	inc    esi
  409147:	mov    ebx,eax
  409149:	inc    ebp
  40914a:	sbb    edx,DWORD PTR [ebx+0x4e]
  40914d:	mov    ah,0x82
  40914f:	add    DWORD PTR [edx],edi
  409151:	and    al,0x5a
  409153:	std    
  409154:	jl     0x4091b9
  409156:	arpl   WORD PTR [esi+ebx*2-0x2],sp
  40915a:	push   edi
  40915b:	or     bl,BYTE PTR ds:0xc04c351b
  409161:	addr16 mov edx,0x6befde76
  409167:	inc    DWORD PTR [ecx]
  409169:	jmp    0x10d1bcfc
  40916e:	scas   al,BYTE PTR es:[edi]
  40916f:	push   edx
  409170:	sub    DWORD PTR ds:0x2ca26f60,eax
  409176:	mov    ds:0xef78ba,eax
  40917b:	cmp    ecx,ebx
  40917d:	imul   edi,DWORD PTR [esi+edx*4-0x34],0xb3dc4d81
  409185:	mov    ch,0x59
  409187:	mov    edx,0xe87ed50d
  40918c:	or     ebx,DWORD PTR [esi]
  40918e:	push   ss
  40918f:	jne    0x409162
  409191:	xchg   edi,eax
  409192:	lock xchg DWORD PTR [ebx+eiz*4],edi
  409196:	cmp    dl,ch
  409198:	fcomip st,st(7)
  40919a:	ins    BYTE PTR es:[edi],dx
  40919b:	mov    ebp,0xa03b4d55
  4091a0:	arpl   WORD PTR [ebp-0x4b4ada39],bp
  4091a6:	out    0x24,al
  4091a8:	loope  0x4091dd
  4091aa:	or     BYTE PTR [edi-0x7a],ch
  4091ad:	jg     0x40922a
  4091af:	jecxz  0x4091e8
  4091b1:	xchg   ebx,eax
  4091b2:	fwait
  4091b3:	dec    ecx
  4091b4:	imul   eax,DWORD PTR [edx+0x352e5837],0x3f
  4091bb:	out    dx,al
  4091bc:	out    0xc3,al
  4091be:	push   esp
  4091bf:	rol    DWORD PTR [eax+0xb5527b2],cl
  4091c5:	pop    eax
  4091c6:	pop    es
  4091c7:	in     al,0xb4
  4091c9:	mov    cl,0xb8
  4091cb:	imul   ebp,DWORD PTR [esi],0xfffffff3
  4091ce:	inc    edx
  4091cf:	mov    esp,0x99704c31
  4091d4:	ds in  eax,dx
  4091d6:	adc    al,0xa7
  4091d8:	or     al,0x74
  4091da:	cmp    ah,dl
  4091dc:	pop    ecx
  4091dd:	and    al,0xf4
  4091df:	xchg   esi,eax
  4091e0:	mov    ds:0xa58e4da2,al
  4091e5:	pop    es
  4091e6:	and    DWORD PTR [edx-0x6c],ecx
  4091e9:	push   edi
  4091ea:	mov    ecx,0x3e0f345a
  4091ef:	dec    edi
  4091f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091f1:	xchg   ebp,eax
  4091f2:	lods   eax,DWORD PTR ds:[esi]
  4091f3:	push   ebp
  4091f4:	pusha  
  4091f5:	push   ebp
  4091f6:	imul   esi,DWORD PTR [ecx-0x7caf14f4],0xa2600b62
  409200:	retf   
  409201:	add    al,0xee
  409203:	xchg   cl,ch
  409205:	fdivr  DWORD PTR [esp+edx*1]
  409208:	stos   BYTE PTR es:[edi],al
  409209:	lods   eax,DWORD PTR ds:[esi]
  40920a:	adc    dh,BYTE PTR [ebx]
  40920c:	xchg   ebp,eax
  40920d:	jl     0x40919c
  40920f:	sbb    eax,0x3f8bf725
  409214:	and    eax,0xf590d30b
  409219:	jmp    0xd5c84ae6
  40921e:	sbb    DWORD PTR [ebx],ebx
  409220:	push   eax
  409221:	lods   eax,DWORD PTR ds:[esi]
  409222:	fstp   QWORD PTR [esi]
  409224:	test   BYTE PTR [esp+ebx*8],ah
  409227:	mov    dh,0xde
  409229:	in     al,0x9e
  40922b:	repz push ebx
  40922d:	pop    eax
  40922e:	aam    0x1a
  409230:	retf   
  409231:	fcom   DWORD PTR [esi-0xe]
  409234:	jle    0x409275
  409236:	jmp    0x4091dc
  409238:	inc    esp
  409239:	mov    ebx,0x166d270
  40923e:	iret   
  40923f:	retf   
  409240:	(bad)  
  409241:	jae    0x409200
  409243:	adc    BYTE PTR [edx-0x55fe56f6],bl
  409249:	sub    al,0xea
  40924b:	enter  0x25f,0x80
  40924f:	les    ebx,FWORD PTR [edx-0x33c13ded]
  409255:	ret    
  409256:	push   cs
  409257:	dec    DWORD PTR fs:[ecx-0x996bc6d]
  40925e:	pop    eax
  40925f:	cmp    al,BYTE PTR [esp+edi*2]
  409262:	mov    ch,0xfd
  409264:	xchg   esi,eax
  409265:	out    0xdd,al
  409267:	and    esi,DWORD PTR [ecx+0x7229a18f]
  40926d:	ret    
  40926e:	cs pop edx
  409270:	and    DWORD PTR [ebx],esp
  409272:	mov    edx,0x2b17d06d
  409277:	inc    eax
  409278:	xchg   esi,eax
  409279:	push   ebp
  40927a:	mov    dh,0xbb
  40927c:	pop    ds
  40927d:	sbb    DWORD PTR [eax-0x34],esi
  409280:	lahf   
  409281:	pop    ebp
  409282:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409283:	xchg   ebx,eax
  409284:	jle    0x409218
  409286:	cmp    esp,0xfffffff2
  409289:	jmp    0x16c4:0x28dee96a
  409290:	fs scas eax,DWORD PTR es:[edi]
  409292:	xlat   BYTE PTR ds:[ebx]
  409293:	mov    BYTE PTR [edi+0x28],dl
  409296:	cs pop ebp
  409298:	or     BYTE PTR [esi+0x5b9dfd44],ah
  40929e:	enter  0xb04e,0xa1
  4092a2:	dec    eax
  4092a3:	push   ebx
  4092a4:	(bad)  
  4092a5:	arpl   WORD PTR [esi+0x66],sp
  4092a8:	popf   
  4092a9:	iret   
  4092aa:	inc    ebp
  4092ab:	(bad)  
  4092ac:	and    edx,DWORD PTR [edx+0x4b7d95c6]
  4092b2:	jmp    0xb432:0xbdbd1382
  4092b9:	pushf  
  4092ba:	dec    edi
  4092bb:	out    dx,al
  4092bc:	pop    esp
  4092bd:	push   ebp
  4092be:	dec    eax
  4092bf:	sti    
  4092c0:	sub    BYTE PTR [ecx-0x58],dh
  4092c3:	or     ecx,DWORD PTR [edx+0x33f8b88a]
  4092c9:	imul   ecx,DWORD PTR [eax-0x5144ccb2],0x4fcd2f60
  4092d3:	clc    
  4092d4:	je     0x4092f6
  4092d6:	sub    al,0xdc
  4092d8:	pusha  
  4092d9:	scas   eax,DWORD PTR es:[edi]
  4092da:	popf   
  4092db:	mov    bl,0x4f
  4092dd:	or     DWORD PTR [esi-0x69f9af51],edi
  4092e3:	mov    esi,0xe7abbe1c
  4092e8:	(bad)  
  4092e9:	lea    esp,[esi]
  4092eb:	icebp  
  4092ec:	mov    bl,0x94
  4092ee:	inc    edx
  4092ef:	pop    edx
  4092f0:	push   cs
  4092f1:	ret    
  4092f2:	data16 cs int 0x98
  4092f6:	push   ebp
  4092f7:	xor    ch,BYTE PTR [edx]
  4092f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092fa:	jo     0x409294
  4092fc:	dec    edx
  4092fd:	xor    BYTE PTR [ebx-0xfca80d8],dh
  409303:	ret    0xd5bd
  409306:	cmp    al,0x56
  409308:	inc    ebp
  409309:	jp     0x409291
  40930b:	pop    edx
  40930c:	ja     0x4092f4
  40930e:	mov    cl,0xd3
  409310:	into   
  409311:	push   edx
  409312:	inc    eax
  409313:	push   eax
  409314:	outs   dx,BYTE PTR ds:[esi]
  409315:	fisttp WORD PTR [esi+0x55]
  409318:	hlt    
  409319:	pop    ebp
  40931a:	in     eax,0x39
  40931c:	and    DWORD PTR [ecx],ebp
  40931e:	repnz nop
  409320:	sub    ebp,DWORD PTR [eax]
  409322:	xchg   ebp,eax
  409323:	inc    ebp
  409324:	iret   
  409325:	jnp    0x40933c
  409327:	xchg   BYTE PTR [ebx+0x35],dh
  40932a:	sub    dh,dl
  40932c:	sub    cl,BYTE PTR [esi+eiz*1-0x48]
  409330:	das    
  409331:	mov    al,0x95
  409333:	ins    DWORD PTR es:[edi],dx
  409334:	cmp    ebx,esp
  409336:	imul   ecx,DWORD PTR [ebp+0x28860e9],0x39
  40933d:	mov    eax,ds:0xbd6ebcfa
  409342:	add    edi,DWORD PTR [edi]
  409344:	jmp    0x55e06f6e
  409349:	xchg   ebx,eax
  40934a:	inc    ebx
  40934b:	in     eax,0xd7
  40934d:	dec    edx
  40934e:	pusha  
  40934f:	xchg   ecx,eax
  409350:	lods   eax,DWORD PTR ds:[esi]
  409351:	test   BYTE PTR [edi-0xed127b9],ch
  409357:	sbb    al,0xef
  409359:	or     dl,BYTE PTR [eax+0x4e95cc82]
  40935f:	sbb    eax,0x3397a989
  409364:	jnp    0x40933d
  409366:	or     BYTE PTR [ebp-0x409d559b],dl
  40936c:	ret    
  40936d:	test   al,0x36
  40936f:	mov    edi,0x75fbf6b
  409374:	std    
  409375:	mov    al,0x50
  409377:	ss fcmovbe st,st(5)
  40937a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40937b:	or     ebp,edx
  40937d:	out    0x4e,al
  40937f:	dec    eax
  409380:	test   bp,bp
  409383:	or     BYTE PTR [ebp+esi*4+0x72],cl
  409387:	sub    BYTE PTR [esi+0x3bb0cefa],dh
  40938d:	jnp    0x40933f
  40938f:	sub    ch,BYTE PTR [eax+0x38]
  409392:	dec    ebp
  409393:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409394:	(bad)  
  409395:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409396:	test   BYTE PTR [esi+0x7e],ah
  409399:	je     0x409365
  40939b:	mov    ds:0xe012b5c4,eax
  4093a0:	das    
  4093a1:	(bad)  
  4093a2:	in     eax,0x62
  4093a4:	rcr    BYTE PTR [edx-0x38b260f6],0xf4
  4093ab:	ss loopne 0x409367
  4093ae:	lock popa 
  4093b0:	std    
  4093b1:	pop    ds
  4093b2:	mov    bl,0x85
  4093b4:	int    0xd4
  4093b6:	in     al,0x93
  4093b8:	xor    eax,0xcba8c380
  4093bd:	inc    ecx
  4093be:	cmp    al,0xc0
  4093c0:	push   0xfffffffa
  4093c2:	ss call 0xa682aa4c
  4093c8:	call   0x51aa6d4a
  4093cd:	pop    es
  4093ce:	fsub   DWORD PTR [eax+0x772b1d4d]
  4093d4:	push   0xffffffad
  4093d6:	cdq    
  4093d7:	fimul  WORD PTR [ecx]
  4093d9:	(bad)  
  4093da:	jmp    0x28e2c150
  4093df:	push   edi
  4093e0:	stos   BYTE PTR es:[edi],al
  4093e1:	mov    DWORD PTR [eax-0x57116208],0xc071eaca
  4093eb:	xor    ch,BYTE PTR [ebx-0xe52e28]
  4093f1:	jno    0x40937d
  4093f3:	jmp    0x409389
  4093f5:	pop    ss
  4093f6:	mov    DWORD PTR [esi],esi
  4093f8:	push   ecx
  4093f9:	sbb    BYTE PTR [ebx+0x45a222f4],al
  4093ff:	loop   0x409473
  409401:	xor    BYTE PTR [ebx-0x4c],dl
  409404:	push   esi
  409405:	inc    ecx
  409406:	jns    0x4093a7
  409408:	adc    al,0x62
  40940a:	fidivr DWORD PTR [edx+0x2]
  40940d:	push   edi
  40940e:	jge    0x4093e4
  409410:	mov    dh,0xe
  409412:	and    BYTE PTR [eax-0x169d2230],al
  409418:	leave  
  409419:	icebp  
  40941a:	les    edi,FWORD PTR [ecx-0x74]
  40941d:	xlat   BYTE PTR ds:[ebx]
  40941e:	inc    ebx
  40941f:	test   al,0xf7
  409421:	dec    edx
  409422:	mov    ebx,0x2fbfa113
  409427:	lods   al,BYTE PTR ds:[esi]
  409428:	mov    esp,0x8507b6bc
  40942d:	fmul   QWORD PTR [esi]
  40942f:	sub    edx,eax
  409431:	pop    edi
  409432:	and    dh,BYTE PTR [eax]
  409434:	mov    dh,0x79
  409436:	(bad)  
  409437:	cs arpl si,bp
  40943a:	pop    ecx
  40943b:	cmp    cl,BYTE PTR [esi+ebx*8-0x8ef7782]
  409442:	pop    eax
  409443:	lea    ebp,ds:0x39ba7f02
  409449:	xchg   esp,eax
  40944a:	mov    ds:0xcf469d3a,eax
  40944f:	adc    bh,BYTE PTR [edi+edx*1-0xe]
  409453:	jp     0x4093f9
  409455:	adc    BYTE PTR [ebp-0x4665495c],dh
  40945b:	xor    ebp,edi
  40945d:	test   BYTE PTR [edi+0x51e43368],cl
  409463:	loope  0x409493
  409465:	daa    
  409466:	clc    
  409467:	mov    esp,0x54861f5c
  40946c:	mov    ecx,0x245a745c
  409471:	jo     0x4094d9
  409473:	pop    ecx
  409474:	push   eax
  409475:	pop    ebp
  409476:	or     al,0xef
  409478:	mov    ecx,0x28924635
  40947d:	mov    esp,0x21342609
  409482:	xor    BYTE PTR ss:[esi+0x9],ah
  409486:	cwde   
  409487:	or     cl,cl
  409489:	outs   dx,DWORD PTR ds:[esi]
  40948a:	ror    DWORD PTR [ebx+eax*8-0x577eb11f],0x9d
  409492:	adc    al,BYTE PTR [edi]
  409494:	add    al,0xa0
  409496:	jl     0x409480
  409498:	pop    es
  409499:	push   ebx
  40949a:	retf   0xfb81
  40949d:	mov    al,0x72
  40949f:	es sub al,0x78
  4094a2:	(bad)  
  4094a3:	xor    eax,0xb8107535
  4094a8:	shr    DWORD PTR [ebp-0x29a8d4bb],cl
  4094ae:	jp     0x409524
  4094b0:	xchg   ebx,eax
  4094b1:	mov    ch,0xd5
  4094b3:	ins    BYTE PTR es:[edi],dx
  4094b4:	jmp    0x5711:0xc7d2c572
  4094bb:	repnz mov BYTE PTR [edi-0x1161b4e5],dh
  4094c2:	inc    edx
  4094c3:	jae    0x4094f5
  4094c5:	jle    0x4094cd
  4094c7:	push   ss
  4094c8:	int    0x56
  4094ca:	popf   
  4094cb:	adc    al,BYTE PTR ds:0xccd108f2
  4094d1:	push   edi
  4094d2:	sub    ebp,DWORD PTR [esi-0x2c]
  4094d5:	mov    al,0xad
  4094d7:	outs   dx,DWORD PTR ds:[esi]
  4094d8:	loopne 0x4094cd
  4094da:	arpl   WORD PTR [edi-0x69ead7b0],cx
  4094e0:	sub    cl,bl
  4094e2:	cmp    DWORD PTR [edi+edx*4+0x1e],0xffffffef
  4094e7:	loop   0x4094c3
  4094e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094ea:	or     al,BYTE PTR [eax-0xd]
  4094ed:	ror    BYTE PTR [ebp+0x28585085],cl
  4094f3:	cwde   
  4094f4:	je     0x40951c
  4094f6:	xor    ebp,DWORD PTR [ebx-0x291c98d8]
  4094fc:	test   eax,0xd5047324
  409501:	into   
  409502:	sbb    bl,BYTE PTR [edx]
  409504:	mov    ecx,0x98733d75
  409509:	pop    esp
  40950a:	xchg   ebx,eax
  40950b:	aad    0xfc
  40950d:	loopne 0x4094c6
  40950f:	sbb    DWORD PTR [edx+0x78ed4e2e],esp
  409515:	aam    0x92
  409517:	es pop esi
  409519:	or     al,0x92
  40951b:	add    eax,0x378c2d30
  409520:	and    cl,bl
  409522:	(bad)  
  409523:	pop    esi
  409524:	fs scas eax,DWORD PTR es:[edi]
  409526:	jg     0x4094d5
  409528:	mov    edi,0xa13b24b4
  40952d:	ss inc edi
  40952f:	inc    edx
  409530:	hlt    
  409531:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409533:	and    ebp,DWORD PTR [esp+eiz*8-0x28b9afc3]
  40953a:	neg    DWORD PTR [edi]
  40953c:	mov    cl,BYTE PTR [eax+0x31]
  40953f:	je     0x40950c
  409541:	cli    
  409542:	push   esi
  409543:	inc    esi
  409544:	lods   eax,DWORD PTR gs:[esi]
  409546:	sub    DWORD PTR [ecx+0x1d],edi
  409549:	jl     0x409504
  40954b:	inc    eax
  40954c:	fs sub eax,0xadc4f1a0
  409552:	aam    0x4c
  409554:	pop    ds
  409555:	sti    
  409556:	clc    
  409557:	lods   eax,DWORD PTR ds:[esi]
  409558:	jbe    0x4094ec
  40955a:	int3   
  40955b:	fs gs jnp 0x409576
  40955f:	xlat   BYTE PTR ds:[ebx]
  409560:	xchg   edi,eax
  409561:	pop    esp
  409562:	or     DWORD PTR gs:[ebp-0x7d],esi
  409566:	retf   
  409567:	cmc    
  409568:	push   ecx
  409569:	(bad)  
  40956a:	(bad)  
  40956b:	leave  
  40956c:	cdq    
  40956d:	adc    BYTE PTR [esi+ebx*4],al
  409570:	in     al,dx
  409571:	xor    eax,0x4b5e1de3
  409576:	adc    DWORD PTR [edx-0x467ec110],eax
  40957c:	sbb    dl,ah
  40957e:	in     eax,0x31
  409580:	popf   
  409581:	bound  ecx,QWORD PTR [edi-0x6eab21e]
  409587:	test   BYTE PTR [edi],ch
  409589:	push   esp
  40958a:	addr16 cli 
  40958c:	cmp    ah,dh
  40958e:	stc    
  40958f:	test   DWORD PTR [ecx],edx
  409591:	test   DWORD PTR [edx-0x17],ebx
  409594:	or     al,0xf8
  409596:	lock cmc 
  409598:	add    eax,0x83c6986
  40959d:	dec    ebp
  40959e:	push   ebx
  40959f:	cli    
  4095a0:	cld    
  4095a1:	jmp    0x7e685463
  4095a6:	xchg   ebp,eax
  4095a7:	jmp    0xb0e2f69f
  4095ac:	stc    
  4095ad:	ins    BYTE PTR es:[edi],dx
  4095ae:	or     al,0xb8
  4095b0:	fbstp  TBYTE PTR [esp+ebx*2+0x35]
  4095b4:	int    0x10
  4095b6:	cmp    al,0x73
  4095b8:	or     eax,0xf6c37fb1
  4095bd:	or     ecx,edx
  4095bf:	call   0xc600:0x4849fcba
  4095c6:	jnp    0x40954e
  4095c8:	clc    
  4095c9:	push   esi
  4095ca:	bound  esp,QWORD PTR [edx-0x70]
  4095cd:	stc    
  4095ce:	inc    edi
  4095cf:	cdq    
  4095d0:	test   DWORD PTR [ecx-0x62],eax
  4095d3:	ror    BYTE PTR [edi+0x6e],0x1c
  4095d7:	cmp    al,0xc5
  4095d9:	jp     0x409571
  4095db:	xchg   BYTE PTR [esi+0x9c86648],dl
  4095e1:	pushf  
  4095e2:	imul   di,bp,0xb27c
  4095e7:	iret   
  4095e8:	imul   ebp,DWORD PTR [edi+edi*8+0x23],0xbce1fc44
  4095f0:	jbe    0x409609
  4095f2:	xchg   cl,cl
  4095f4:	jne    0x40957a
  4095f6:	adc    al,0xdd
  4095f8:	stos   BYTE PTR es:[edi],al
  4095f9:	stos   BYTE PTR es:[edi],al
  4095fa:	out    dx,al
  4095fb:	pop    eax
  4095fc:	push   edx
  4095fd:	pop    ss
  4095fe:	sbb    ch,BYTE PTR [ecx+0x57]
  409601:	and    esp,DWORD PTR [ebp-0x4a]
  409604:	es xchg ebp,edi
  409607:	loopne 0x4095e6
  409609:	test   eax,0x39ee5edd
  40960e:	or     ah,BYTE PTR [eax+0x3b]
  409611:	pusha  
  409612:	addr16 mov ah,0xc3
  409615:	(bad)  
  409616:	stos   BYTE PTR es:[edi],al
  409617:	cld    
  409618:	jmp    0xe570d701
  40961d:	mov    al,0x4c
  40961f:	shr    DWORD PTR [esi+0x2d],1
  409622:	jbe    0x40963e
  409624:	push   ss
  409625:	sbb    bl,bh
  409627:	push   ss
  409628:	mov    DWORD PTR [ebx-0x7],0x1c393e3e
  40962f:	ss ins DWORD PTR es:[edi],dx
  409631:	push   ebp
  409632:	inc    ecx
  409633:	retf   0x427e
  409636:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409637:	lods   eax,DWORD PTR ds:[esi]
  409638:	aas    
  409639:	push   ds
  40963a:	jae    0x4095c4
  40963c:	gs inc edi
  40963e:	xor    eax,eax
  409640:	(bad)  
  409641:	aam    0xa5
  409643:	lock xchg BYTE PTR [edi-0x79],al
  409647:	call   0xa28a6fef
  40964c:	and    DWORD PTR [ebx-0x80],edx
  40964f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409650:	add    ah,BYTE PTR [edi-0x75bd9bd9]
  409656:	ja     0x409663
  409658:	mul    BYTE PTR [ebp-0x12de0b51]
  40965e:	loop   0x4096a1
  409660:	lea    edx,[ebx]
  409662:	clc    
  409663:	imul   esi,DWORD PTR gs:[ecx-0x1563ed6d],0x8
  40966b:	pop    edi
  40966c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40966d:	xchg   esp,eax
  40966e:	sub    al,0x91
  409670:	mov    fs,WORD PTR [esi]
  409672:	or     eax,0xef54c033
  409677:	dec    esp
  409678:	fwait
  409679:	mov    edi,0x13479c63
  40967e:	add    DWORD PTR [edi+0x6e3b4fc5],esp
  409684:	in     eax,0xe2
  409686:	leave  
  409687:	sbb    dx,WORD PTR [eax]
  40968a:	mov    al,0x95
  40968c:	add    dh,BYTE PTR [ecx]
  40968e:	dec    edi
  40968f:	(bad)  
  409690:	and    cl,BYTE PTR [ecx+esi*8-0x6f]
  409694:	xchg   ecx,eax
  409695:	sub    ch,bh
  409697:	mov    dh,0xac
  409699:	jbe    0x4096f2
  40969b:	push   ecx
  40969c:	adc    BYTE PTR [edi],dh
  40969e:	aaa    
  40969f:	es test eax,0xebb61e33
  4096a5:	ins    BYTE PTR es:[edi],dx
  4096a6:	cmp    al,0xf9
  4096a8:	cmp    eax,0xf2b74f3d
  4096ad:	inc    ebx
  4096ae:	sub    bh,BYTE PTR [ebp+0x1e099823]
  4096b4:	fwait
  4096b5:	mov    eax,DWORD PTR ds:0x5abb840d
  4096bb:	sbb    ecx,DWORD PTR [edx+0x7b]
  4096be:	shr    BYTE PTR [edi+0x6],1
  4096c1:	dec    ebx
  4096c2:	xchg   ebx,eax
  4096c3:	hlt    
  4096c4:	dec    esp
  4096c5:	jg     0x409716
  4096c7:	ss in  eax,dx
  4096c9:	dec    ebp
  4096ca:	xor    DWORD PTR [edx+0x76],esp
  4096cd:	inc    edx
  4096ce:	xchg   DWORD PTR [ecx],esi
  4096d0:	outs   dx,BYTE PTR ds:[esi]
  4096d1:	xor    dh,ch
  4096d3:	bound  ecx,QWORD PTR [esi]
  4096d5:	sbb    al,0xb3
  4096d7:	inc    esp
  4096d8:	mov    edi,0xbbb4cec2
  4096dd:	popf   
  4096de:	cmp    dl,BYTE PTR [ecx]
  4096e0:	enter  0x4daf,0x1
  4096e4:	es stc 
  4096e6:	adc    BYTE PTR [eax],al
  4096e8:	scas   eax,DWORD PTR es:[edi]
  4096e9:	aas    
  4096ea:	jg     0x409741
  4096ec:	jns    0x40974b
  4096ee:	(bad)
  4096f2:	xchg   esp,eax
  4096f3:	out    dx,al
  4096f4:	xor    BYTE PTR [eax+0x19957d96],0x3a
  4096fb:	xor    BYTE PTR fs:[edx+edx*2+0x42],0x76
  409701:	pusha  
  409702:	jae    0x4096ad
  409704:	adc    DWORD PTR [edx],esp
  409706:	adc    ah,0x89
  409709:	jbe    0x409725
  40970b:	push   edx
  40970c:	das    
  40970d:	fisubr DWORD PTR [ecx]
  40970f:	push   edx
  409710:	psrld  mm4,QWORD PTR [ecx-0x10]
  409714:	(bad)  
  409715:	cld    
  409716:	test   eax,0xc23c5a3b
  40971b:	adc    BYTE PTR [ebp-0x4e],dh
  40971e:	mov    ds:0xa5dbc3e8,eax
  409723:	icebp  
  409724:	in     al,dx
  409725:	and    DWORD PTR [edi+0x5685587e],0x6b
  40972c:	pop    ebx
  40972d:	sbb    DWORD PTR [ecx],0xffffffc6
  409730:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409731:	test   al,0x96
  409733:	mov    edi,ss
  409735:	jmp    0xaf0f0ee7
  40973a:	jle    0x40972c
  40973c:	mov    cl,0x38
  40973e:	mov    edx,0xaee07989
  409743:	mov    ch,0xf
  409745:	(bad)  
  409746:	pop    edx
  409747:	xor    al,0x7b
  409749:	(bad)  
  40974a:	push   eax
  40974b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40974c:	imul   eax,DWORD PTR [edx-0x4922b3a8],0x9
  409753:	pop    esi
  409754:	push   0x9303b5ab
  409759:	and    dh,BYTE PTR [ecx]
  40975b:	pop    ebx
  40975c:	push   es
  40975d:	dec    ebx
  40975e:	cdq    
  40975f:	addr16 push ss
  409761:	jno    0x4097d0
  409763:	cdq    
  409764:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409765:	mov    al,0x90
  409767:	es mov dl,0x47
  40976a:	mov    bh,0x38
  40976c:	retf   0xe272
  40976f:	std    
  409770:	fwait
  409771:	sbb    al,0xd5
  409773:	repz xchg ah,ah
  409776:	xor    bh,BYTE PTR [ecx+0x1b4a788b]
  40977c:	je     0x4097a4
  40977e:	pop    ebx
  40977f:	cmp    DWORD PTR [ebx+0x6fbb33f],esi
  409785:	and    BYTE PTR [ecx],0x3e
  409788:	xor    eax,0xdbf74b37
  40978d:	xlat   BYTE PTR ds:[ebx]
  40978e:	inc    esi
  40978f:	mov    al,ds:0xf903e35d
  409794:	jmp    0x58e065fc
  409799:	push   ecx
  40979a:	xchg   esi,eax
  40979b:	lahf   
  40979c:	jmp    0xe385:0x86f9e400
  4097a3:	mov    al,ds:0xb2015cc9
  4097a8:	sbb    cl,BYTE PTR es:[edi-0x3d87a07a]
  4097af:	adc    al,0x3
  4097b1:	mov    al,0xd6
  4097b3:	mov    ah,0x82
  4097b5:	jo     0x40977b
  4097b7:	(bad)  
  4097b8:	cmp    ebp,esp
  4097ba:	xor    ch,BYTE PTR [ebp+0x70]
  4097bd:	sub    ch,BYTE PTR [ecx]
  4097bf:	push   cs
  4097c0:	inc    ecx
  4097c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097c2:	adc    al,0xfd
  4097c4:	cmp    al,0xcf
  4097c6:	adc    DWORD PTR [edx-0x56258a0],edi
  4097cc:	pop    esi
  4097cd:	cmp    DWORD PTR [ebx+0x26],edx
  4097d0:	lock add DWORD PTR [edx+0x3a320187],edi
  4097d7:	cwde   
  4097d8:	mov    dl,0x90
  4097da:	or     DWORD PTR [edi-0x5e1b2e8c],edx
  4097e0:	jmp    0xf5ef:0xb00b283c
  4097e7:	mov    eax,ds:0x4c80dbf6
  4097ec:	mov    edx,0x7bd31a08
  4097f1:	xchg   edi,eax
  4097f2:	ins    BYTE PTR es:[edi],dx
  4097f3:	lods   al,BYTE PTR ds:[esi]
  4097f4:	push   ss
  4097f5:	das    
  4097f6:	out    0x18,al
  4097f8:	aam    0xa1
  4097fa:	mov    dl,0xec
  4097fc:	jbe    0x40987c
  4097fe:	dec    edi
  4097ff:	iret   
  409800:	lods   eax,DWORD PTR ds:[esi]
  409801:	inc    ebx
  409802:	cmp    eax,0xcc2abfc4
  409807:	mov    esp,0x55d8ff75
  40980c:	xor    al,0xef
  40980e:	push   edx
  40980f:	dec    ebp
  409810:	or     ah,dh
  409812:	scas   eax,DWORD PTR es:[edi]
  409813:	xor    al,0x12
  409815:	test   eax,0xb7027429
  40981a:	daa    
  40981b:	xchg   DWORD PTR [ecx+0x5bbbb085],esp
  409821:	add    eax,0xa783dcac
  409826:	inc    esi
  409827:	and    DWORD PTR [ecx+edi*2-0x43],ecx
  40982b:	inc    esp
  40982c:	sub    al,0x15
  40982e:	jmp    0x4097ce
  409830:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409831:	test   DWORD PTR [ebx-0x19759145],esi
  409837:	(bad)  
  409838:	jecxz  0x4097bc
  40983a:	aaa    
  40983b:	mov    fs,WORD PTR [eax+0x48c953ff]
  409841:	adc    dl,ch
  409843:	fisub  WORD PTR [eiz*8+0xd4c5028]
  40984a:	jbe    0x409807
  40984c:	sahf   
  40984d:	scas   eax,DWORD PTR es:[edi]
  40984e:	jp     0x409887
  409850:	sub    esp,DWORD PTR [ecx+0x7f]
  409853:	and    DWORD PTR [eax],ebx
  409855:	mov    esp,0x7d9f10a7
  40985a:	add    BYTE PTR [esi+0x3fe1c326],cl
  409860:	xchg   edx,eax
  409861:	rcr    DWORD PTR [eax+0x8],0xf5
  409865:	mov    ds:0x2ba87ce0,eax
  40986a:	leave  
  40986b:	push   eax
  40986c:	call   0xb012:0x83002a3d
  409873:	pop    ebx
  409874:	or     bl,BYTE PTR [ebx-0x13]
  409877:	(bad)  
  409879:	(bad)  
  40987a:	ds enter 0x96,0x43
  40987f:	xor    eax,0x88516044
  409884:	pop    edx
  409885:	mov    esi,?
  409887:	into   
  409888:	sub    al,0x1d
  40988a:	mov    al,ds:0x375e1ffd
  40988f:	sub    bl,BYTE PTR [ebx+0xa]
  409892:	jno    0x409900
  409894:	dec    ebx
  409895:	data16 adc bh,cl
  409898:	js     0x409834
  40989a:	adc    BYTE PTR [ecx],cl
  40989c:	xlat   BYTE PTR ds:[ebx]
  40989d:	div    bh
  40989f:	and    al,0xa2
  4098a1:	and    al,0x53
  4098a3:	sub    eax,0xd3b3188d
  4098a8:	add    dl,cl
  4098aa:	push   esi
  4098ab:	push   edi
  4098ac:	je     0x409857
  4098ae:	data16 adc al,0xb3
  4098b1:	or     DWORD PTR [eax-0x11c7e3e6],edi
  4098b7:	pop    edi
  4098b8:	bswap  edi
  4098ba:	ja     0x409901
  4098bc:	retf   0xaae7
  4098bf:	and    DWORD PTR [edi],0x427a12d9
  4098c5:	(bad)  
  4098c6:	sti    
  4098c7:	(bad)
  4098ca:	retf   0x1540
  4098cd:	imul   eax,DWORD PTR [esi+0x6bd01f17],0x4f
  4098d4:	dec    eax
  4098d5:	xchg   ecx,ebx
  4098d7:	mov    ebp,0xd46071e1
  4098dc:	xchg   ebp,eax
  4098dd:	dec    eax
  4098de:	clc    
  4098df:	leave  
  4098e0:	scas   al,BYTE PTR es:[edi]
  4098e1:	or     eax,0x6dc80409
  4098e6:	out    dx,al
  4098e7:	sub    al,BYTE PTR [ecx+0x2041eb83]
  4098ed:	mov    edi,0x301b5631
  4098f2:	(bad)  [ebp-0x690450d9]
  4098f8:	clc    
  4098f9:	dec    edx
  4098fa:	cld    
  4098fb:	push   ebp
  4098fc:	and    eax,esp
  4098fe:	(bad)  
  4098ff:	cmc    
  409900:	outs   dx,BYTE PTR ds:[esi]
  409901:	xchg   ecx,eax
  409902:	mov    ecx,0x7641267b
  409907:	mov    bh,0x52
  409909:	test   al,0xe3
  40990b:	stos   BYTE PTR es:[edi],al
  40990c:	xlat   BYTE PTR ds:[ebx]
  40990d:	mov    eax,0x214899ab
  409912:	or     esi,eax
  409914:	cs loop 0x4098f0
  409917:	jmp    0xb0a0:0x4e40f191
  40991e:	jg     0x40995c
  409920:	mov    ch,0xe
  409922:	sbb    DWORD PTR [ecx+0x4f],0xffffff92
  409926:	rcr    BYTE PTR [edx-0x2cd3db07],0x3f
  40992d:	add    ch,BYTE PTR gs:[esi+edx*8+0x58129477]
  409935:	repnz inc eax
  409937:	scas   al,BYTE PTR es:[edi]
  409938:	and    eax,0xa2a3ec12
  40993d:	xor    eax,0xa4872ade
  409942:	in     al,dx
  409943:	jmp    0x409953
  409945:	sbb    BYTE PTR [edi-0x21],0xff
  409949:	xchg   ebx,eax
  40994a:	and    ebx,DWORD PTR [ecx+edx*4-0x74050e3d]
  409951:	push   esi
  409952:	sbb    eax,0xfada2702
  409957:	and    DWORD PTR gs:[ebx-0x55],esp
  40995b:	dec    eax
  40995c:	shl    BYTE PTR [esp+0x7f],cl
  409960:	jo     0x4098f0
  409962:	mov    ds:0x84aa5b9b,al
  409967:	loop   0x4099d9
  409969:	ret    0x2d7f
  40996c:	sti    
  40996d:	popf   
  40996e:	stos   DWORD PTR es:[edi],eax
  40996f:	push   eax
  409970:	mul    BYTE PTR [eax+0x48]
  409973:	aas    
  409974:	adc    BYTE PTR [ecx-0x57],bh
  409977:	sbb    DWORD PTR [eax+ebp*4+0x292b894a],ebx
  40997e:	xchg   BYTE PTR [eax-0x55c9e4cd],ch
  409984:	das    
  409985:	int    0xec
  409987:	jno    0x4099f5
  409989:	push   0xce1d54ca
  40998e:	dec    ebx
  40998f:	mov    edx,edi
  409991:	sub    eax,0xb292b941
  409996:	dec    eax
  409997:	div    BYTE PTR ds:0x314c4c5e
  40999d:	in     al,dx
  40999e:	and    al,BYTE PTR [ebx-0x4bfcc41f]
  4099a4:	push   ebx
  4099a5:	cwde   
  4099a6:	(bad)  
  4099a9:	out    dx,eax
  4099aa:	test   ebx,ebp
  4099ac:	xchg   esi,eax
  4099ad:	jmp    0xf4470fac
  4099b2:	jae    0x409966
  4099b4:	or     DWORD PTR [esi-0x4c],edx
  4099b7:	pusha  
  4099b8:	jne    0x409a2d
  4099ba:	adc    edx,DWORD PTR [edx+0x19]
  4099bd:	xor    al,0x7a
  4099bf:	sub    ebx,eax
  4099c1:	push   esp
  4099c2:	push   ebx
  4099c3:	(bad)  
  4099c4:	mov    bl,0x44
  4099c6:	dec    esi
  4099c7:	mov    dh,0xa4
  4099c9:	mov    eax,0x8c079d4f
  4099ce:	loope  0x4099a6
  4099d0:	out    0x78,eax
  4099d2:	pop    ds
  4099d3:	xchg   esp,eax
  4099d4:	pop    esp
  4099d5:	mov    eax,DWORD PTR [edx]
  4099d7:	scas   eax,DWORD PTR es:[edi]
  4099d8:	loope  0x40995e
  4099da:	dec    eax
  4099db:	pop    edi
  4099dc:	(bad)  
  4099dd:	aas    
  4099de:	(bad)
  4099e2:	mov    ecx,0xca0fb584
  4099e7:	lods   al,BYTE PTR es:[esi]
  4099e9:	cdq    
  4099ea:	jge    0x40998c
  4099ec:	ja     0x4099d2
  4099ee:	(bad)  
  4099f0:	loopne 0x409986
  4099f2:	jle    0x409a18
  4099f4:	xchg   esi,eax
  4099f5:	push   es
  4099f6:	and    bl,BYTE PTR [edi-0x729f7adb]
  4099fc:	mov    eax,ds:0xadd6bbb3
  409a01:	(bad)  
  409a02:	jb     0x409a48
  409a04:	out    dx,al
  409a05:	fisubr WORD PTR [edx-0x60]
  409a08:	add    DWORD PTR [ebx+ebx*1-0xb],ebp
  409a0c:	clc    
  409a0d:	stos   BYTE PTR es:[edi],al
  409a0e:	add    DWORD PTR [esi],ebp
  409a10:	pop    ebx
  409a11:	jmp    0xf20f1fa4
  409a16:	mov    bl,0x8c
  409a18:	inc    ebx
  409a19:	push   ds
  409a1a:	pop    edx
  409a1b:	outs   dx,BYTE PTR ds:[esi]
  409a1c:	push   edx
  409a1d:	in     eax,0x50
  409a1f:	(bad)  
  409a20:	lods   eax,DWORD PTR ds:[esi]
  409a21:	xor    eax,0xc5f52cd8
  409a26:	mov    bh,BYTE PTR [edx]
  409a28:	mov    esp,0xd0f6ff9f
  409a2d:	inc    edi
  409a2e:	sbb    cl,BYTE PTR [edx-0x293f691e]
  409a34:	adc    bh,BYTE PTR [ebx+0x2d7496cc]
  409a3a:	xlat   BYTE PTR ds:[ebx]
  409a3b:	aas    
  409a3c:	aaa    
  409a3d:	test   al,0x40
  409a3f:	sbb    BYTE PTR [eax-0x3c160113],bh
  409a45:	mov    ecx,0xfacdee0c
  409a4a:	aaa    
  409a4b:	cmp    esp,DWORD PTR [edx+0x60]
  409a4e:	clc    
  409a4f:	adc    DWORD PTR [eax],0xb8f4d362
  409a55:	jl     0x409aa9
  409a57:	fdivr  QWORD PTR ds:0xbc210d2f
  409a5e:	repz pop ss
  409a60:	das    
  409a61:	fst    DWORD PTR [eax]
  409a63:	and    ebx,DWORD PTR [ebx+edx*1-0x5]
  409a67:	sub    edi,edx
  409a69:	jg     0x409a49
  409a6b:	sar    BYTE PTR [edx-0x130efafe],0x32
  409a72:	fld    QWORD PTR [ebx+0x6e8a2642]
  409a78:	mov    edi,0x47105192
  409a7d:	(bad)  
  409a7f:	mov    ebx,0x1af51bdd
  409a84:	icebp  
  409a85:	adc    DWORD PTR [ebx+edi*4-0x1b],0xf
  409a8a:	outs   dx,BYTE PTR ds:[esi]
  409a8b:	ins    DWORD PTR es:[edi],dx
  409a8c:	push   ss
  409a8d:	iret   
  409a8e:	cs jge 0x409a3f
  409a91:	inc    esp
  409a92:	jb     0x409aa0
  409a94:	xor    DWORD PTR [ebx-0x3b],ecx
  409a97:	adc    DWORD PTR [eax-0x41],edi
  409a9a:	sahf   
  409a9b:	xor    eax,0xe5f5677a
  409aa0:	lock push ebp
  409aa2:	test   cl,al
  409aa4:	sbb    al,ch
  409aa6:	outs   dx,DWORD PTR ds:[esi]
  409aa7:	sbb    bh,BYTE PTR [ebp+0x62b865a7]
  409aad:	pop    bp
  409aaf:	adc    ch,BYTE PTR [edx-0x12ca531]
  409ab5:	cmc    
  409ab6:	sbb    al,0xcd
  409ab8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ab9:	ins    DWORD PTR es:[edi],dx
  409aba:	jnp    0x409a9a
  409abc:	mov    ds:0x19b8e8a2,eax
  409ac1:	aaa    
  409ac2:	ret    
  409ac3:	xchg   BYTE PTR [edi+0x15],cl
  409ac6:	aad    0x2
  409ac8:	imul   ebp,DWORD PTR [ebx+0x16],0x5086ae27
  409acf:	xchg   edi,eax
  409ad0:	test   DWORD PTR [ebx],edx
  409ad2:	mov    eax,ds:0xb0529d83
  409ad7:	fwait
  409ad8:	xchg   esi,eax
  409ad9:	mov    ebx,0x1d6b06da
  409ade:	xor    dh,dh
  409ae0:	jbe    0x409ab4
  409ae2:	ins    BYTE PTR es:[edi],dx
  409ae3:	sti    
  409ae4:	mov    al,ds:0xbdf766db
  409ae9:	xchg   BYTE PTR [eax],ch
  409aeb:	js     0x409a6d
  409aed:	mov    BYTE PTR [ecx+0x3f],bh
  409af0:	mov    eax,0xd2cbec70
  409af5:	dec    ebp
  409af6:	add    BYTE PTR [ecx+0x687d9e67],bl
  409afc:	jmp    0xcb46:0x79205182
  409b03:	add    ebp,DWORD PTR [ebp+ecx*4-0x71]
  409b07:	ins    BYTE PTR es:[edi],dx
  409b08:	cdq    
  409b09:	ret    0x5588
  409b0c:	out    dx,al
  409b0d:	dec    edi
  409b0e:	push   ebx
  409b0f:	pop    ebp
  409b10:	ficomp DWORD PTR [esi-0x7d]
  409b13:	xchg   ebp,eax
  409b14:	das    
  409b15:	pop    ss
  409b16:	adc    DWORD PTR [ecx+ecx*4],ecx
  409b19:	cmp    BYTE PTR [esi],cl
  409b1b:	or     eax,0x8c364793
  409b20:	dec    ebp
  409b21:	or     BYTE PTR [eax-0x62],bl
  409b24:	pop    ebx
  409b25:	inc    ebx
  409b26:	xor    BYTE PTR [esi+0x16ba59f2],bh
  409b2c:	xor    DWORD PTR [eax-0x68],eax
  409b2f:	xchg   DWORD PTR [ecx+0x3f],esi
  409b32:	cmp    al,0x2d
  409b34:	stos   BYTE PTR es:[edi],al
  409b35:	sbb    al,0x39
  409b37:	cmp    eax,0xaf76dc12
  409b3c:	dec    edx
  409b3d:	push   esi
  409b3e:	(bad)  
  409b40:	daa    
  409b41:	inc    eax
  409b42:	xchg   edx,eax
  409b43:	jge    0x409b80
  409b45:	pop    ecx
  409b46:	jns    0x409b9c
  409b48:	adc    bl,al
  409b4a:	sti    
  409b4b:	adc    ch,bl
  409b4d:	push   ebp
  409b4e:	add    esi,ebp
  409b50:	(bad)  
  409b51:	add    eax,0xaddc4078
  409b56:	adc    BYTE PTR [edi+edi*2],cl
  409b59:	inc    ebp
  409b5a:	les    ebx,FWORD PTR ds:0xacf5237d
  409b60:	das    
  409b61:	fldcw  WORD PTR [esi-0x37]
  409b64:	push   ebp
  409b65:	dec    eax
  409b66:	fs out 0xdf,eax
  409b69:	pop    esi
  409b6a:	outs   dx,DWORD PTR ds:[esi]
  409b6b:	xor    ah,BYTE PTR [edx-0x2375a25b]
  409b71:	les    ecx,FWORD PTR [edx]
  409b73:	and    dh,BYTE PTR [esp+ecx*2+0x7b1605fa]
  409b7a:	mov    dl,0x3f
  409b7c:	int3   
  409b7d:	ja     0x409b69
  409b7f:	inc    eax
  409b80:	and    BYTE PTR [edx+0x657c73d],bh
  409b86:	add    BYTE PTR [edx-0x3c999e75],0x14
  409b8d:	iret   
  409b8e:	dec    ah
  409b90:	jo     0x409be9
  409b92:	(bad)  
  409b93:	mov    ebp,ebx
  409b95:	lahf   
  409b96:	push   esp
  409b97:	dec    eax
  409b98:	jmp    0x75e49d00
  409b9d:	iret   
  409b9e:	in     eax,dx
  409b9f:	in     al,dx
  409ba0:	sub    al,BYTE PTR [esi-0x7a72f2a]
  409ba6:	or     BYTE PTR [esi+0x2362f34a],0xfe
  409bad:	mov    ds:0xfdf30d9a,al
  409bb2:	int3   
  409bb3:	jecxz  0x409c1f
  409bb5:	arpl   ax,sp
  409bb7:	add    al,0x32
  409bb9:	loopne 0x409b8a
  409bbb:	cdq    
  409bbc:	enter  0x7222,0xd
  409bc0:	repz sub ch,al
  409bc3:	mov    ecx,0xca7f22ac
  409bc8:	push   eax
  409bc9:	test   edx,ecx
  409bcb:	pop    edx
  409bcc:	mov    cl,0xe2
  409bce:	sbb    BYTE PTR [esi-0x7a72b3a9],bh
  409bd4:	lods   eax,DWORD PTR ds:[esi]
  409bd5:	clc    
  409bd6:	adc    al,0xd5
  409bd8:	lods   al,BYTE PTR ds:[esi]
  409bd9:	popa   
  409bda:	cld    
  409bdb:	pop    ebx
  409bdc:	push   esi
  409bdd:	jne    0x409b70
  409bdf:	jmp    0x744c60
  409be4:	je     0x409bca
  409be6:	pusha  
  409be7:	xor    eax,0xaf9a482c
  409bec:	mov    esi,0x7dcb249c
  409bf1:	iret   
  409bf2:	sbb    ebp,DWORD PTR [edi+0x3c75066f]
  409bf8:	jb     0x409ba8
  409bfa:	sbb    eax,0x2323c5cf
  409bff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c00:	mov    al,ds:0x6bdf2b29
  409c05:	add    al,0x1b
  409c07:	test   eax,0x9a9ce45e
  409c0c:	and    eax,0xf953a810
  409c11:	pop    ebx
  409c12:	dec    edi
  409c13:	in     eax,dx
  409c14:	inc    ebx
  409c15:	(bad)  
  409c16:	sbb    esi,DWORD PTR [ebx]
  409c18:	xchg   esi,eax
  409c19:	(bad)  
  409c1b:	add    eax,0x77e215ab
  409c20:	fidiv  DWORD PTR [ebx]
  409c22:	xchg   esp,eax
  409c23:	mov    ?,WORD PTR [esi+0x7]
  409c26:	test   DWORD PTR [esi-0x5],edx
  409c29:	push   ds
  409c2a:	pop    esp
  409c2b:	mov    edx,0x8ea77907
  409c30:	ins    BYTE PTR es:[edi],dx
  409c31:	das    
  409c32:	retf   0xe94a
  409c35:	push   eax
  409c36:	sti    
  409c37:	sahf   
  409c38:	cwde   
  409c39:	out    dx,al
  409c3a:	jl     0x409c0f
  409c3c:	in     eax,0x58
  409c3e:	es call 0xac20784e
  409c44:	(bad)  
  409c45:	jb     0x409c61
  409c47:	mov    esi,0x6f65f6d0
  409c4c:	shl    BYTE PTR [esi-0x443c0e0e],0x7a
  409c53:	jno    0x409ccc
  409c55:	xchg   ecx,eax
  409c56:	neg    BYTE PTR ds:0x59b4bf1a
  409c5c:	xchg   esp,eax
  409c5d:	inc    edi
  409c5e:	sub    ebp,esi
  409c60:	(bad)  
  409c61:	loop   0x409cd4
  409c63:	jmp    0x75c33932
  409c68:	xor    bl,BYTE PTR [ecx]
  409c6a:	mov    esi,0x84e76102
  409c6f:	dec    edx
  409c70:	stos   DWORD PTR es:[edi],eax
  409c71:	jno    0x409c7b
  409c73:	xchg   esi,eax
  409c74:	fdivrp st(2),st
  409c76:	or     DWORD PTR [edi-0x227f41d0],edx
  409c7c:	call   0xb6063750
  409c81:	push   ss
  409c82:	mov    al,BYTE PTR [ebx+eiz*4+0x6f319c36]
  409c89:	adc    eax,0x2b42c320
  409c8e:	jmp    0x409c9f
  409c90:	pop    ebp
  409c91:	inc    ebx
  409c92:	sti    
  409c93:	pusha  
  409c94:	mov    edi,edi
  409c96:	jmp    0x409d09
  409c98:	or     eax,0x8f473d34
  409c9d:	(bad)
  409ca1:	aam    0x34
  409ca3:	ss cwde 
  409ca5:	dec    esp
  409ca6:	jmp    0xf1ab:0x5cbf52d6
  409cad:	push   cs
  409cae:	sbb    al,BYTE PTR [esi-0x4c]
  409cb1:	mov    ah,0x50
  409cb3:	mov    bh,BYTE PTR [eax+0x62f1d11e]
  409cb9:	fwait
  409cba:	enter  0xf8fe,0x4d
  409cbe:	xchg   esp,eax
  409cbf:	or     al,0xa9
  409cc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cc2:	fild   QWORD PTR [edi]
  409cc4:	ins    BYTE PTR es:[edi],dx
  409cc5:	repz or al,0xd7
  409cc8:	xchg   edx,eax
  409cc9:	sbb    al,0x3e
  409ccb:	ret    
  409ccc:	mov    bl,0x9a
  409cce:	cdq    
  409ccf:	je     0x409d24
  409cd1:	popf   
  409cd2:	repnz mov bh,0xe2
  409cd5:	into   
  409cd6:	jae    0x409d02
  409cd8:	sub    BYTE PTR [ebp+0x66f979aa],ah
  409cde:	adc    BYTE PTR [edi],0xcf
  409ce1:	es pushf 
  409ce3:	adc    DWORD PTR [edi+0x54],ebx
  409ce6:	and    bl,ah
  409ce8:	repnz add DWORD PTR [ebx-0x1af61042],edi
  409cef:	jnp    0x409caa
  409cf1:	mov    bl,0x36
  409cf3:	cld    
  409cf4:	call   0x7f069fea
  409cf9:	jnp    0x409c7f
  409cfb:	mov    ch,0xb1
  409cfd:	adc    ah,BYTE PTR [edi+0x1d]
  409d00:	push   edi
  409d01:	xchg   ecx,eax
  409d02:	loop   0x409cb6
  409d04:	out    0x68,eax
  409d06:	imul   ecx,DWORD PTR [ebx+0x62788067],0x3c5a4861
  409d10:	jmp    0x117252a3
  409d15:	mov    ah,0x19
  409d17:	pop    edx
  409d18:	dec    ebx
  409d19:	js     0x409d04
  409d1b:	jns    0x409cbb
  409d1d:	mov    ds:0xfe0c6a80,al
  409d22:	imul   eax,eax,0x6
  409d25:	dec    eax
  409d26:	mov    DWORD PTR [ecx-0x2a],esi
  409d29:	ds xchg ebx,eax
  409d2b:	xchg   BYTE PTR [esi+0x11],ch
  409d2e:	fdivr  DWORD PTR [esi-0x1c]
  409d31:	xor    al,0xed
  409d33:	les    esp,FWORD PTR ds:0x6c63c505
  409d39:	xor    dl,BYTE PTR [edx]
  409d3b:	or     ch,BYTE PTR fs:[eax]
  409d3e:	stos   DWORD PTR es:[edi],eax
  409d3f:	mov    ds:0xfa1137a3,al
  409d44:	test   al,0xfa
  409d46:	ss in  eax,dx
  409d48:	push   edx
  409d49:	mov    ds:0xe4cfccd3,al
  409d4e:	(bad)  
  409d4f:	and    DWORD PTR [ebx-0x1f853930],esp
  409d55:	dec    eax
  409d56:	push   0x568ebc18
  409d5b:	sub    esi,DWORD PTR [eax-0x4f]
  409d5e:	mov    DWORD PTR [ebx-0x4cb2b8a1],edx
  409d64:	scas   eax,DWORD PTR es:[edi]
  409d65:	loope  0x409ddd
  409d67:	shr    DWORD PTR [edi],cl
  409d69:	mov    ah,0xdc
  409d6b:	dec    ebp
  409d6c:	fdiv   QWORD PTR [esi+eiz*2+0xf3a5034]
  409d73:	retf   0xdb28
  409d76:	repz addr16 adc eax,0x306871b6
  409d7d:	ror    DWORD PTR [eax-0x8a04415],1
  409d83:	dec    esi
  409d84:	scas   eax,DWORD PTR es:[edi]
  409d85:	repz and ch,al
  409d88:	pop    ecx
  409d89:	mov    eax,ds:0x4f11a1a5
  409d8e:	jno    0x409db2
  409d90:	sbb    BYTE PTR [edi-0x1e],ah
  409d93:	pop    edi
  409d94:	jnp    0x409d1f
  409d96:	lock out 0x5f,eax
  409d99:	nop
  409d9a:	push   edx
  409d9b:	pop    esp
  409d9c:	sbb    eax,0x610dcefe
  409da1:	mov    edx,0xbab1c5fd
  409da6:	int3   
  409da7:	pusha  
  409da8:	push   esp
  409da9:	xor    DWORD PTR [esp+eax*1],ecx
  409dac:	pop    eax
  409dad:	jp     0x409de7
  409daf:	ins    BYTE PTR es:[edi],dx
  409db0:	push   ebx
  409db1:	mov    cl,0xc0
  409db3:	xchg   ebp,eax
  409db4:	imul   ecx,DWORD PTR [bx+si+0x15],0x319de9e9
  409dbc:	shl    bl,0x48
  409dbf:	jmp    0xaa29:0x8c70b24
  409dc6:	mov    bl,0x97
  409dc8:	mov    fs,WORD PTR [esp+edi*2-0x6445de5b]
  409dcf:	stos   DWORD PTR es:[edi],eax
  409dd0:	leave  
  409dd1:	mov    ebx,0x72918139
  409dd6:	dec    ebx
  409dd7:	lods   al,BYTE PTR ds:[si]
  409dd9:	inc    esp
  409dda:	xor    dh,BYTE PTR [ecx+esi*1-0x39]
  409dde:	arpl   di,ax
  409de0:	in     eax,dx
  409de1:	(bad)  
  409de2:	idiv   DWORD PTR [esp+ebx*4]
  409de5:	xor    eax,0xa5b69a96
  409dea:	mov    ebp,0x92b93d4a
  409def:	push   edx
  409df0:	mov    edi,0x69e9612
  409df5:	pop    ss
  409df6:	call   0xadefdf64
  409dfb:	int    0xbf
  409dfd:	les    edi,FWORD PTR [eax+0xad94bb9]
  409e03:	mov    dl,0x29
  409e05:	or     bl,BYTE PTR [esi-0x65]
  409e08:	sti    
  409e09:	xchg   bh,cl
  409e0b:	adc    ch,dh
  409e0d:	mov    edx,0xda888b01
  409e12:	lods   al,BYTE PTR ds:[esi]
  409e13:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  409e15:	stos   DWORD PTR es:[edi],eax
  409e16:	add    BYTE PTR [ebx+0x2],dl
  409e19:	xchg   edi,eax
  409e1a:	je     0x409da1
  409e1c:	inc    ebx
  409e1d:	xor    al,0xaa
  409e1f:	das    
  409e20:	retf   
  409e21:	pop    esi
  409e22:	sub    al,0x7e
  409e24:	nop
  409e25:	inc    edx
  409e26:	mov    dl,0x97
  409e28:	pop    ds
  409e29:	in     al,0x6c
  409e2b:	aaa    
  409e2c:	xchg   esp,eax
  409e2d:	cld    
  409e2e:	mov    al,ds:0xe496053a
  409e33:	add    BYTE PTR [edi],al
  409e35:	pop    esp
  409e36:	add    eax,0xc0bf1985
  409e3b:	dec    esi
  409e3c:	jns    0x409e1e
  409e3e:	push   esi
  409e3f:	shl    DWORD PTR [ebx-0x37],cl
  409e42:	sbb    DWORD PTR [ebp+0x3bf42bb],edx
  409e48:	ror    BYTE PTR [edi+0x67d0d83a],cl
  409e4e:	mov    ecx,0x6c96250f
  409e53:	aad    0x3b
  409e55:	int    0x50
  409e57:	xor    ah,BYTE PTR [esi-0x671afdad]
  409e5d:	lock imul esi,DWORD PTR [ecx+esi*8],0xcfda1f32
  409e65:	test   BYTE PTR [eax],cl
  409e67:	lds    esp,FWORD PTR [ecx]
  409e69:	imul   BYTE PTR [edi-0x7ff1d430]
  409e6f:	idiv   BYTE PTR [ebp+edx*8-0x792096fd]
  409e76:	jmp    0xcecd0b3d
  409e7b:	shl    BYTE PTR [eax],cl
  409e7d:	mov    bl,0x18
  409e7f:	and    DWORD PTR [edx+0x17],ebx
  409e82:	fldenv [edi]
  409e84:	mov    dl,0xf
  409e86:	retf   0x6b4
  409e89:	sar    BYTE PTR ss:[ebp-0x57],cl
  409e8d:	test   al,0xc0
  409e8f:	popa   
  409e90:	push   esi
  409e91:	jg     0x409e58
  409e93:	out    0xe4,eax
  409e95:	out    dx,al
  409e96:	lock mov WORD PTR [edi+0x4d],?
  409e9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e9b:	ins    BYTE PTR es:[edi],dx
  409e9c:	add    BYTE PTR [ebp-0x11],0xee
  409ea0:	dec    DWORD PTR [ecx]
  409ea2:	scas   eax,DWORD PTR es:[edi]
  409ea3:	cmc    
  409ea4:	jg     0x409ed0
  409ea6:	or     DWORD PTR [eax+edx*8+0x336c3238],esp
  409ead:	sahf   
  409eae:	fs pop ds
  409eb0:	jmp    0x45b13f9d
  409eb5:	and    dh,BYTE PTR [edx+0x18]
  409eb8:	jp     0x409ebe
  409eba:	xchg   edx,eax
  409ebb:	ds out 0xd2,al
  409ebe:	js     0x409eb5
  409ec0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ec1:	sbb    ah,0x3b
  409ec4:	pop    edi
  409ec5:	xchg   ebp,eax
  409ec6:	mov    al,gs:0xb08cda3
  409ecc:	outs   dx,BYTE PTR ds:[esi]
  409ecd:	shld   DWORD PTR ds:0x1d578450,ebx,0x16
  409ed5:	sub    al,0xe2
  409ed7:	out    dx,al
  409ed8:	clc    
  409ed9:	loope  0x409e60
  409edb:	cdq    
  409edc:	cmp    esp,DWORD PTR [ebx+ebx*8-0x7d]
  409ee0:	dec    esi
  409ee1:	sub    al,0xf9
  409ee3:	add    al,0x8f
  409ee5:	push   ebp
  409ee6:	push   edx
  409ee7:	retf   0x17b1
  409eea:	mov    edi,0xc855030a
  409eef:	in     al,0x60
  409ef1:	aam    0x32
  409ef3:	inc    ebp
  409ef4:	cmp    BYTE PTR [esp+ebx*8-0x3731c410],ah
  409efb:	test   eax,0x6fc9c13c
  409f00:	test   eax,0xe131b9d3
  409f05:	dec    ebx
  409f06:	fidivr WORD PTR [esi]
  409f08:	cmc    
  409f09:	mov    edi,0x718fa192
  409f0e:	sub    cl,0x64
  409f11:	not    DWORD PTR [edx-0x73]
  409f14:	(bad)  
  409f15:	lods   al,BYTE PTR ds:[esi]
  409f16:	enter  0xf08f,0x5a
  409f1a:	aad    0xc4
  409f1c:	xchg   DWORD PTR [eax+0x3ad18d9a],ebx
  409f22:	jp     0x409eab
  409f24:	xlat   BYTE PTR ds:[ebx]
  409f25:	dec    edi
  409f26:	test   al,0xbc
  409f28:	enter  0xfc94,0xcc
  409f2c:	test   DWORD PTR [esi+0x3bfb4a04],edi
  409f32:	out    0xc6,eax
  409f34:	sub    eax,0x50521344
  409f39:	sar    DWORD PTR [ecx],0x25
  409f3c:	pop    ecx
  409f3d:	daa    
  409f3e:	fcomip st,st(0)
  409f40:	fsub   DWORD PTR [edi+edx*4]
  409f43:	push   0x6822e977
  409f48:	and    eax,0x15ce0ddd
  409f4d:	int    0x72
  409f4f:	mov    edx,DWORD PTR [ebp+0x2]
  409f52:	add    eax,0xd1c939bb
  409f57:	addr16 dec edx
  409f59:	call   0x785c:0x52ac4df
  409f60:	fucom  st(0)
  409f62:	inc    edi
  409f63:	xchg   ebp,eax
  409f64:	jnp    0x409f43
  409f66:	in     eax,0x70
  409f68:	es lock into 
  409f6b:	stos   DWORD PTR es:[edi],eax
  409f6c:	fwait
  409f6d:	add    al,0x5f
  409f6f:	outs   dx,BYTE PTR ds:[esi]
  409f70:	pop    eax
  409f71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f72:	jge    0x409faf
  409f74:	ja     0x409f0a
  409f76:	test   BYTE PTR [ebx-0x452e6fed],bh
  409f7c:	and    DWORD PTR [eax+0x6b25283a],ebp
  409f82:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  409f84:	pop    es
  409f85:	fcom   DWORD PTR [ecx+0x4bc02cac]
  409f8b:	pop    ebx
  409f8c:	ret    0x152d
  409f8f:	xchg   ebp,eax
  409f90:	je     0x409fd8
  409f92:	mov    ebx,0x1ef0ad6
  409f97:	cmp    eax,0x23978f6c
  409f9c:	jmp    0x409fb5
  409f9e:	jnp    0x409f29
  409fa0:	int    0x3b
  409fa2:	jecxz  0x409f5c
  409fa4:	arpl   WORD PTR [ecx],ax
  409fa6:	pop    ecx
  409fa7:	cmp    BYTE PTR [ebx],cl
  409fa9:	sub    edx,edx
  409fab:	sbb    dh,al
  409fad:	repnz push esi
  409faf:	jb     0x409fb5
  409fb1:	fbstp  TBYTE PTR [esi]
  409fb3:	adc    esp,ecx
  409fb5:	mov    edx,0xf3482fa1
  409fba:	and    bh,BYTE PTR [esi-0x6c]
  409fbd:	push   edi
  409fbe:	retf   0x589
  409fc1:	inc    ecx
  409fc2:	inc    eax
  409fc3:	mov    ?,WORD PTR [eax+0x3f]
  409fc6:	pop    edx
  409fc7:	loopne 0x409fb1
  409fc9:	cwde   
  409fca:	popf   
  409fcb:	test   BYTE PTR [ecx],ch
  409fcd:	cmp    al,0x2f
  409fcf:	rcr    dh,1
  409fd1:	pop    es
  409fd2:	jmp    DWORD PTR [edi+0x59]
  409fd5:	in     al,0x40
  409fd7:	out    dx,al
  409fd8:	(bad)  
  409fd9:	mov    esi,0x4b296363
  409fde:	xor    BYTE PTR [ebx+ebp*1-0x518a6048],0xbc
  409fe6:	xor    DWORD PTR [esi+eax*2],0xbd2aa133
  409fed:	xor    ebx,0xf3d3ce7c
  409ff3:	pop    ds
  409ff4:	sub    ecx,DWORD PTR [eax+0x67228678]
  409ffa:	jl     0x409fb6
  409ffc:	or     ebp,eax
  409ffe:	fisttp WORD PTR [ebx]
  40a000:	test   eax,0xd0a661f7
  40a005:	es jns 0x409f8e
  40a008:	stos   BYTE PTR es:[edi],al
  40a009:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a00a:	adc    BYTE PTR [edx-0x3086efaf],bl
  40a010:	addr16 sbb al,0x92
  40a013:	cmp    edx,eax
  40a015:	data16 mov bl,0x2a
  40a018:	dec    ebx
  40a019:	pop    eax
  40a01a:	addr16 fwait
  40a01c:	or     bl,bh
  40a01e:	in     al,dx
  40a01f:	add    BYTE PTR [ecx],dl
  40a021:	mov    eax,ds:0xd38a6d0
  40a026:	pop    ebx
  40a027:	jbe    0x40a08a
  40a029:	cmp    edx,DWORD PTR [eax+0x3e9a6733]
  40a02f:	inc    eax
  40a030:	(bad)  
  40a031:	jl     0x40a02a
  40a033:	sbb    ebx,DWORD PTR [esi]
  40a035:	mov    ah,0xaa
  40a037:	mov    ecx,DWORD PTR [ebx]
  40a039:	sub    edx,DWORD PTR [esp+ebx*2+0x67]
  40a03d:	push   ebx
  40a03e:	fstp   TBYTE PTR [ebp+ecx*4-0x2acebc63]
  40a045:	call   0x5f99:0x59e1f8b1
  40a04c:	adc    DWORD PTR [eax+ebp*1+0x4907fe45],esp
  40a053:	mov    BYTE PTR [edx],al
  40a055:	adc    eax,0xd5553610
  40a05a:	dec    esi
  40a05b:	mov    dh,0xab
  40a05d:	lea    edx,[ecx]
  40a05f:	fdivp  st(0),st
  40a061:	cmp    ebp,ecx
  40a063:	pop    ss
  40a064:	cld    
  40a065:	repz data16 out 0xc9,al
  40a069:	mov    bl,0xef
  40a06b:	lahf   
  40a06c:	lods   al,BYTE PTR ds:[esi]
  40a06d:	aam    0x90
  40a06f:	out    dx,al
  40a070:	sub    eax,0xdd0f1362
  40a075:	mov    eax,0xceb789fb
  40a07a:	(bad)  
  40a07b:	adc    dl,BYTE PTR [edi-0x650a8c4e]
  40a081:	jmp    DWORD PTR [esi+0x4f9658ca]
  40a087:	test   DWORD PTR [edi+0x3e0226af],ebx
  40a08d:	dec    ecx
  40a08e:	xor    DWORD PTR [ecx-0x2c2afd8e],0x3668637
  40a098:	push   es
  40a099:	icebp  
  40a09a:	es push edi
  40a09c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a09d:	push   eax
  40a09e:	(bad)  
  40a09f:	adc    DWORD PTR [esp+eax*1-0x19],esp
  40a0a3:	outs   dx,DWORD PTR ds:[esi]
  40a0a4:	jmp    0x814b:0x1ea78c49
  40a0ab:	test   BYTE PTR [edx],ch
  40a0ad:	je     0x40a0c8
  40a0af:	and    DWORD PTR [edi-0x679831dc],esp
  40a0b5:	je     0x40a0ae
  40a0b7:	fdivr  DWORD PTR [ebx-0x76]
  40a0ba:	jmp    0x40a073
  40a0bc:	or     cl,dl
  40a0be:	and    ch,cl
  40a0c0:	ss inc ebp
  40a0c2:	jl     0x40a0ba
  40a0c4:	mov    bl,0x6c
  40a0c6:	xlat   BYTE PTR ds:[ebx]
  40a0c7:	ja     0x40a0cd
  40a0c9:	(bad)  
  40a0ca:	mov    ah,BYTE PTR [eax+0x50]
  40a0cd:	and    edi,edi
  40a0cf:	xchg   ebp,eax
  40a0d0:	call   0x3e4c:0x66cd2c48
  40a0d7:	repz inc edi
  40a0d9:	and    edi,DWORD PTR [ecx+eax*4+0x6ed2cc2b]
  40a0e0:	cld    
  40a0e1:	and    ebx,DWORD PTR [ebx-0x7a]
  40a0e4:	mov    bh,0x18
  40a0e6:	lods   al,BYTE PTR ds:[esi]
  40a0e7:	or     bh,BYTE PTR [ebx+0x55]
  40a0ea:	es dec ecx
  40a0ec:	ret    
  40a0ed:	mov    al,BYTE PTR [esi-0x475510ce]
  40a0f3:	push   ecx
  40a0f4:	and    cl,bl
  40a0f6:	cs inc eax
  40a0f8:	lds    ebp,FWORD PTR [edx+edi*4+0x3212ad11]
  40a0ff:	xchg   DWORD PTR ds:0xe20de25d,ebx
  40a105:	dec    esp
  40a106:	ret    
  40a107:	inc    esi
  40a108:	leave  
  40a109:	fld    QWORD PTR [ebp-0x338ca6b3]
  40a10f:	jnp    0x40a13e
  40a111:	sbb    DWORD PTR [ebp+0x7b],0x23
  40a115:	aaa    
  40a116:	pop    ebp
  40a117:	int3   
  40a118:	ret    
  40a119:	in     eax,dx
  40a11a:	aad    0x85
  40a11c:	mov    es:0x943da084,al
  40a122:	mov    esi,0xa9d0639f
  40a127:	mov    dh,al
  40a129:	popf   
  40a12a:	call   0x70d4a2a7
  40a12f:	clc    
  40a130:	cmp    edx,DWORD PTR [ebp+eax*4+0x2621d020]
  40a137:	addr16 jmp 0x2bf48168
  40a13d:	xchg   esp,eax
  40a13e:	pop    ebp
  40a13f:	jge    0x40a127
  40a141:	pop    ecx
  40a142:	cld    
  40a143:	xchg   esi,eax
  40a144:	dec    edx
  40a145:	push   ecx
  40a146:	mov    cl,cl
  40a148:	ins    DWORD PTR es:[edi],dx
  40a149:	sub    esp,DWORD PTR [ebx-0x23528e9d]
  40a14f:	(bad)  
  40a150:	adc    al,0x6c
  40a152:	jmp    0xd980:0x1716568f
  40a159:	push   0xffffffbf
  40a15b:	daa    
  40a15c:	add    BYTE PTR [ebp+0x6f],ch
  40a15f:	jle    0x40a1b2
  40a161:	enter  0xc50c,0xf0
  40a165:	out    0xef,eax
  40a167:	cli    
  40a168:	mov    eax,ds:0x935cca61
  40a16d:	and    ah,cl
  40a16f:	dec    ebx
  40a170:	dec    ebp
  40a171:	pop    ecx
  40a172:	inc    edx
  40a173:	dec    eax
  40a174:	adc    edi,DWORD PTR [esi+0x235f4cd3]
  40a17a:	or     cl,BYTE PTR [esi-0x67]
  40a17d:	inc    esp
  40a17e:	cmp    ebx,ebp
  40a180:	iret   
  40a181:	leave  
  40a182:	mov    ebp,0x1c0f2535
  40a187:	and    al,0x7c
  40a189:	nop
  40a18a:	mov    ch,0x38
  40a18c:	imul   DWORD PTR [ebx+0x20]
  40a18f:	loopne 0x40a17c
  40a191:	fdiv   QWORD PTR [edx-0x1a]
  40a194:	sbb    BYTE PTR [esi],al
  40a196:	dec    edi
  40a197:	call   0xf234:0x8a5c416a
  40a19e:	(bad)  
  40a19f:	and    al,0x40
  40a1a1:	dec    esi
  40a1a2:	mov    esi,0x6e89049a
  40a1a7:	lea    esi,[eax*8-0x6e99cda3]
  40a1ae:	scas   eax,DWORD PTR es:[edi]
  40a1af:	data16 daa 
  40a1b1:	pop    edi
  40a1b2:	jmp    0x40a215
  40a1b4:	and    ecx,edi
  40a1b6:	in     eax,0x92
  40a1b8:	sbb    DWORD PTR [edi-0x5a0c513],edx
  40a1be:	xor    eax,DWORD PTR [edx]
  40a1c0:	or     BYTE PTR gs:[ebx+0x3960463e],ch
  40a1c7:	fwait
  40a1c8:	pop    es
  40a1c9:	jp     0x40a22a
  40a1cb:	in     al,0x6b
  40a1cd:	jae    0x40a1a4
  40a1cf:	inc    edi
  40a1d0:	push   cs
  40a1d1:	sar    DWORD PTR [edi],0xe3
  40a1d4:	shl    DWORD PTR [edx],1
  40a1d6:	ret    0xbbee
  40a1d9:	push   edx
  40a1da:	rol    BYTE PTR [edi-0x4e21e73b],1
  40a1e0:	dec    edx
  40a1e1:	xlat   BYTE PTR ds:[ebx]
  40a1e2:	clc    
  40a1e3:	stc    
  40a1e4:	inc    esi
  40a1e5:	or     BYTE PTR [edi+0x69],0x8c
  40a1e9:	pop    ss
  40a1ea:	mov    ch,0x70
  40a1ec:	and    esi,edi
  40a1ee:	jae    0x40a26e
  40a1f0:	(bad)  
  40a1f1:	rcr    DWORD PTR [ebp-0x46],cl
  40a1f4:	call   0x9487247a
  40a1f9:	aad    0x30
  40a1fb:	add    edi,DWORD PTR [ecx]
  40a1fd:	mov    esp,0x6119b0f2
  40a202:	(bad)  
  40a203:	or     ebp,eax
  40a205:	in     al,0x5f
  40a207:	rdtsc  
  40a209:	mov    ds:0xe5758aea,al
  40a20e:	xchg   esp,eax
  40a20f:	pop    eax
  40a210:	jecxz  0x40a229
  40a212:	sbb    bh,dh
  40a214:	jnp    0x40a289
  40a216:	sub    eax,0x8990963a
  40a21b:	mov    cs,ebp
  40a21d:	push   ebx
  40a21e:	cmp    DWORD PTR gs:[esi+ebp*2-0x227c44b],esi
  40a226:	(bad)  
  40a227:	push   esi
  40a228:	std    
  40a229:	mov    dh,0x77
  40a22b:	xchg   ecx,eax
  40a22c:	sar    esp,0xd8
  40a22f:	call   0xc6bc:0xa8c2be35
  40a236:	lods   eax,DWORD PTR ds:[esi]
  40a237:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a238:	and    al,0xbe
  40a23a:	sub    cl,BYTE PTR ds:0x1d680eb6
  40a240:	cmp    ah,BYTE PTR cs:[edx]
  40a243:	sub    esi,edx
  40a245:	cld    
  40a246:	jmp    0x40a21e
  40a248:	out    dx,al
  40a249:	inc    ebx
  40a24a:	stos   BYTE PTR es:[edi],al
  40a24b:	cld    
  40a24c:	adc    BYTE PTR [ebx+0xad26771],bl
  40a252:	cwde   
  40a253:	imul   esi,DWORD PTR [eax+0x61],0x6d
  40a257:	and    BYTE PTR [ebx-0x3fb271cd],ah
  40a25d:	dec    ebp
  40a25e:	in     eax,0xda
  40a260:	xchg   esi,eax
  40a261:	gs out 0x55,eax
  40a264:	ins    BYTE PTR es:[edi],dx
  40a265:	mov    ah,0x48
  40a267:	pop    ebp
  40a268:	sbb    DWORD PTR [edi+0x66],esp
  40a26b:	lds    edx,FWORD PTR ds:0xeb214406
  40a271:	pusha  
  40a272:	push   ss
  40a273:	stos   BYTE PTR es:[edi],al
  40a274:	or     eax,edx
  40a276:	or     cl,dl
  40a278:	xchg   BYTE PTR [ebp+ebp*4+0x65],dl
  40a27c:	cli    
  40a27d:	jg     0x40a205
  40a27f:	pop    ebp
  40a280:	addr16 mov eax,ds:0xd8f5
  40a284:	adc    esp,ebx
  40a286:	lds    ebp,FWORD PTR [ebp-0x69]
  40a289:	pop    esp
  40a28a:	bound  ebp,QWORD PTR [ebp-0x6c]
  40a28d:	stos   DWORD PTR es:[edi],eax
  40a28e:	vpcmpeqd ymm7,ymm0,YMMWORD PTR [eax-0x54]
  40a293:	repz (bad) 
  40a295:	xchg   esi,eax
  40a296:	pop    edx
  40a297:	or     al,0x50
  40a299:	neg    DWORD PTR ss:[ebp-0x72]
  40a29d:	xlat   BYTE PTR ds:[ebx]
  40a29e:	imul   edx,DWORD PTR [eax+0x21f89e94],0x1c
  40a2a5:	lods   al,BYTE PTR ds:[esi]
  40a2a6:	not    ebp
  40a2a8:	lds    esp,FWORD PTR [ebx]
  40a2aa:	adc    BYTE PTR [ebx-0x80],cl
  40a2ad:	push   cs
  40a2ae:	test   al,0x7e
  40a2b0:	sub    ecx,DWORD PTR [ebx]
  40a2b2:	cmp    dh,bl
  40a2b4:	or     DWORD PTR [bp+di],edi
  40a2b7:	retf   0x7e3f
  40a2ba:	mov    ds:0x3493e693,al
  40a2bf:	rol    BYTE PTR [ecx],0xfa
  40a2c2:	inc    ebx
  40a2c3:	jbe    0x40a281
  40a2c5:	xor    eax,DWORD PTR [ebx+0x3160fb4d]
  40a2cb:	scas   al,BYTE PTR es:[edi]
  40a2cc:	aad    0x29
  40a2ce:	xor    DWORD PTR [edx-0x48],0x423ba4f4
  40a2d5:	or     bh,BYTE PTR [edi-0x5c]
  40a2d8:	push   ecx
  40a2d9:	or     BYTE PTR [eax],dl
  40a2db:	adc    DWORD PTR [edx+0x1775f631],esi
  40a2e1:	cli    
  40a2e2:	std    
  40a2e3:	or     al,0x94
  40a2e5:	dec    ebp
  40a2e6:	or     eax,0x27abb378
  40a2eb:	push   esp
  40a2ec:	add    esp,DWORD PTR [eax+0x6ec725ec]
  40a2f2:	jmp    FWORD PTR [esi+ecx*8-0x4b6f2a9b]
  40a2f9:	sti    
  40a2fa:	xchg   DWORD PTR [esi],esi
  40a2fc:	inc    ebp
  40a2fd:	push   es
  40a2fe:	cmp    ebx,DWORD PTR [eax-0x7f29e3ea]
  40a304:	cwde   
  40a305:	idiv   ch
  40a307:	dec    ebp
  40a308:	push   eax
  40a309:	xchg   ebx,eax
  40a30a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a30b:	mov    eax,0x8d07e837
  40a310:	xor    DWORD PTR [ebp+0x14afd3bb],esp
  40a316:	pop    ebx
  40a317:	pop    ebp
  40a318:	mov    al,ds:0x2278e89a
  40a31d:	pop    esp
  40a31e:	test   BYTE PTR [eax-0x13546a99],bl
  40a324:	mov    al,ds:0x480eec8e
  40a329:	jne    0x40a36b
  40a32b:	fwait
  40a32c:	pop    ds
  40a32d:	xchg   esp,eax
  40a32e:	mov    ds:0x4ca2282,eax
  40a333:	inc    edx
  40a334:	mov    ss,edx
  40a336:	fwait
  40a337:	pop    es
  40a338:	push   ebx
  40a339:	fidivr DWORD PTR [ecx+0x74]
  40a33c:	das    
  40a33d:	dec    eax
  40a33e:	sub    BYTE PTR [edx+0xc2c94fe],0x55
  40a345:	je     0x40a355
  40a347:	xor    dl,ah
  40a349:	mov    ebp,0xdb744d1
  40a34e:	push   ds
  40a34f:	arpl   WORD PTR [ecx+0x37cdbae3],sp
  40a355:	ss aaa 
  40a357:	lahf   
  40a358:	mov    eax,ds:0xdbea1a4d
  40a35d:	dec    ebp
  40a35e:	push   esi
  40a35f:	es dec esp
  40a361:	ja     0x40a367
  40a363:	cmp    al,0x8a
  40a365:	adc    eax,0xa93ba754
  40a36a:	dec    edx
  40a36b:	loopne 0x40a374
  40a36d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a36e:	mov    ch,0x7e
  40a370:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a371:	cmp    eax,0x5fd1f953
  40a376:	pop    ebp
  40a377:	jecxz  0x40a344
  40a379:	cmp    edx,DWORD PTR [edi]
  40a37b:	and    BYTE PTR [ecx+0x2],bh
  40a37e:	fstp   QWORD PTR ds:[esp+eiz*4-0x2fee17a6]
  40a386:	mov    bh,0x13
  40a388:	stc    
  40a389:	daa    
  40a38a:	gs jle 0x40a3e4
  40a38d:	xlat   BYTE PTR ds:[ebx]
  40a38e:	rcr    DWORD PTR [eax],0x6
  40a391:	cmp    DWORD PTR [ecx],eax
  40a393:	pusha  
  40a394:	loopne 0x40a3b4
  40a396:	xchg   ah,bl
  40a398:	add    al,BYTE PTR [edx+ebp*2+0x26c30484]
  40a39f:	sub    al,0x4e
  40a3a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3a2:	or     al,0x64
  40a3a4:	inc    ebp
  40a3a5:	addr16 (bad) 
  40a3a7:	fistp  WORD PTR [eax-0x6b]
  40a3aa:	enter  0x4cd3,0x81
  40a3ae:	aaa    
  40a3af:	jg     0x40a3b6
  40a3b1:	cmp    BYTE PTR [esi-0x69],dl
  40a3b4:	dec    edi
  40a3b5:	dec    esi
  40a3b6:	inc    ebp
  40a3b7:	icebp  
  40a3b8:	idiv   BYTE PTR [esp+ecx*4]
  40a3bb:	sub    al,0xa
  40a3bd:	loop   0x40a39c
  40a3bf:	pop    ss
  40a3c0:	jl     0x40a40a
  40a3c2:	jmp    0xb60:0x967c61bf
  40a3c9:	push   0x42
  40a3cb:	dec    ebx
  40a3cc:	je     0x40a39d
  40a3ce:	ins    BYTE PTR es:[edi],dx
  40a3cf:	in     eax,0xa5
  40a3d1:	mov    eax,0x5897576
  40a3d6:	retf   0xa5d8
  40a3d9:	cwde   
  40a3da:	dec    edi
  40a3db:	imul   esi,ebp,0xfffffff4
  40a3de:	and    ebp,DWORD PTR [si+0x51]
  40a3e2:	clc    
  40a3e3:	pop    ecx
  40a3e4:	cli    
  40a3e5:	and    bh,cl
  40a3e7:	mov    cl,0xeb
  40a3e9:	jnp    0x40a389
  40a3eb:	sub    al,BYTE PTR [esi+0x498cc715]
  40a3f1:	mov    ch,0x62
  40a3f3:	and    al,0xb5
  40a3f5:	ffreep st(3)
  40a3f7:	and    dl,BYTE PTR [ecx-0x268aaff9]
  40a3fd:	push   ebp
  40a3fe:	std    
  40a3ff:	xlat   BYTE PTR ds:[ebx]
  40a400:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a401:	inc    esi
  40a402:	stos   DWORD PTR es:[edi],eax
  40a403:	das    
  40a404:	jp     0x40a3bf
  40a406:	xchg   BYTE PTR [esi+0x652414ce],cl
  40a40c:	or     eax,0x680a8479
  40a411:	mov    cl,0xcb
  40a413:	mov    ds:0x29b17fd3,al
  40a418:	mov    bl,0x36
  40a41a:	adc    esp,DWORD PTR [edi]
  40a41c:	add    BYTE PTR [esi],ah
  40a41e:	out    dx,eax
  40a41f:	xor    al,0xc1
  40a421:	sbb    esi,ebp
  40a423:	mov    ecx,0x1f7bea38
  40a428:	lods   al,BYTE PTR ds:[esi]
  40a429:	out    0xde,al
  40a42b:	std    
  40a42c:	xchg   BYTE PTR [eax+0x5afa068b],al
  40a432:	sub    cl,BYTE PTR [ebp-0x6a22e551]
  40a438:	pop    edx
  40a439:	inc    eax
  40a43a:	jnp    0x40a42e
  40a43c:	out    dx,eax
  40a43d:	jo     0x40a4a3
  40a43f:	lds    esp,FWORD PTR [esi]
  40a441:	mov    eax,0x12410545
  40a446:	xor    dl,bl
  40a448:	dec    ebp
  40a449:	stc    
  40a44a:	fwait
  40a44b:	adc    BYTE PTR [ebx],dh
  40a44d:	jne    0x40a3f7
  40a44f:	mov    edx,DWORD PTR [ebp-0x59389637]
  40a455:	popf   
  40a456:	dec    edi
  40a457:	out    0xb7,al
  40a459:	dec    ecx
  40a45a:	sbb    BYTE PTR [eax-0x40b74d11],0xc
  40a461:	lea    edi,ds:0xd8656982
  40a467:	dec    esi
  40a468:	ss (bad) 
  40a46a:	repz pop es
  40a46c:	ins    DWORD PTR es:[edi],dx
  40a46d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a46e:	ins    DWORD PTR es:[edi],dx
  40a46f:	adc    BYTE PTR [ecx-0x3f94e378],ch
  40a475:	in     eax,dx
  40a476:	mov    al,0x14
  40a478:	ss ds adc eax,0x81a32c7d
  40a47f:	cmp    ebp,ecx
  40a481:	aas    
  40a482:	jl     0x40a407
  40a484:	add    eax,DWORD PTR [edx+eiz*4]
  40a487:	and    eax,0x6724ebd4
  40a48c:	popf   
  40a48d:	fnsave [eax]
  40a48f:	xor    ecx,DWORD PTR [edi]
  40a491:	jns    0x40a4a9
  40a493:	out    0xbe,eax
  40a495:	gs adc al,0xa6
  40a498:	inc    ecx
  40a499:	(bad)  
  40a49a:	in     eax,0x31
  40a49c:	adc    eax,0x8ee37475
  40a4a1:	xchg   edi,eax
  40a4a2:	xor    eax,0xd308dd72
  40a4a7:	arpl   WORD PTR [edi+0x1ecdf3f9],dx
  40a4ad:	cmp    DWORD PTR [edx],ebx
  40a4af:	imul   esi,DWORD PTR [edx],0x26
  40a4b2:	inc    ebx
  40a4b3:	aad    0x50
  40a4b5:	mov    ds:0xe25e67f,eax
  40a4ba:	fadd   QWORD PTR [edi]
  40a4bc:	jb     0x40a4de
  40a4be:	push   cs
  40a4bf:	add    BYTE PTR [edi+0x12],bh
  40a4c2:	mov    ds:0x4827acaa,al
  40a4c7:	mov    es,WORD PTR [edi+0x4007080b]
  40a4cd:	ins    DWORD PTR es:[edi],dx
  40a4ce:	stos   BYTE PTR es:[edi],al
  40a4cf:	in     al,dx
  40a4d0:	cli    
  40a4d1:	ds xchg esp,eax
  40a4d3:	mov    ss,WORD PTR [edx+0x7f3c0733]
  40a4d9:	popf   
  40a4da:	jge    0x40a507
  40a4dc:	jmp    0x10f18bbb
  40a4e1:	or     DWORD PTR [ebx-0x6c7e0b7a],ecx
  40a4e7:	push   eax
  40a4e8:	ret    0x403f
  40a4eb:	mov    ah,BYTE PTR [ebx+0x7fcb8ce1]
  40a4f1:	xchg   DWORD PTR [ecx+esi*1-0x60],edi
  40a4f5:	pushf  
  40a4f6:	sub    dl,0x12
  40a4f9:	ficomp DWORD PTR [eax-0x6f]
  40a4fc:	cmp    esp,DWORD PTR [ebx+0x7a]
  40a4ff:	and    esi,ebp
  40a501:	shl    dl,cl
  40a503:	add    BYTE PTR [edx+0x1a],dh
  40a506:	pop    ss
  40a507:	test   eax,0xbb8fc0a5
  40a50c:	loop   0x40a54e
  40a50e:	add    al,0x7c
  40a510:	xchg   esi,eax
  40a511:	pushf  
  40a512:	mov    bh,BYTE PTR [ecx+0x63]
  40a515:	shl    esi,1
  40a517:	mov    edi,ss
  40a519:	aas    
  40a51a:	push   ss
  40a51b:	add    eax,DWORD PTR [ecx+ebx*8-0xccae32d]
  40a522:	and    ch,BYTE PTR [ebx+ebx*8+0x55937813]
  40a529:	mov    dh,BYTE PTR [esi-0x1607fb35]
  40a52f:	call   0xb401fdd4
  40a534:	jmp    0x88c5:0x2ac82a57
  40a53b:	cmp    al,0xed
  40a53e:	mov    bh,0x30
  40a540:	mov    bh,0xa2
  40a542:	in     eax,dx
  40a543:	lods   ax,WORD PTR ds:[esi]
  40a545:	mov    edi,0x8abcc043
  40a54a:	sub    eax,0xd9fe13a
  40a54f:	rcl    ah,1
  40a551:	mov    dl,0x8f
  40a553:	fs scas al,BYTE PTR es:[edi]
  40a555:	stos   DWORD PTR es:[edi],eax
  40a556:	mov    cl,0xa8
  40a558:	ins    DWORD PTR es:[edi],dx
  40a559:	cmc    
  40a55a:	xchg   edi,eax
  40a55b:	sbb    DWORD PTR [ebp+esi*4-0x44],0xffffff87
  40a560:	push   0xfd9c69cf
  40a565:	leave  
  40a566:	add    ebp,esp
  40a568:	sti    
  40a569:	cmp    DWORD PTR [ebx-0x6f],esi
  40a56c:	push   ss
  40a56d:	repz lahf 
  40a56f:	or     DWORD PTR [edx-0x53e9a19b],esi
  40a575:	jg     0x40a598
  40a577:	push   esp
  40a578:	hlt    
  40a579:	bound  ecx,QWORD PTR [esi-0xa]
  40a57c:	mov    eax,ds:0x60b09a45
  40a581:	out    dx,eax
  40a582:	icebp  
  40a583:	cmp    ah,BYTE PTR [edi+0x4824b2a9]
  40a589:	lds    esp,FWORD PTR [esi+0x63]
  40a58c:	push   esp
  40a58d:	push   ebx
  40a58e:	ja     0x40a5d0
  40a590:	je     0x40a523
  40a592:	ror    BYTE PTR [edi+edi*1-0x529f025c],1
  40a599:	in     al,0xb7
  40a59b:	and    dl,BYTE PTR [edi+0x7fa5d13d]
  40a5a1:	aaa    
  40a5a2:	lea    ebx,[edi]
  40a5a4:	pop    eax
  40a5a5:	cmp    DWORD PTR [esi-0x8],0x830097c0
  40a5ac:	pavgb  mm4,mm3
  40a5af:	cmp    al,0x87
  40a5b1:	outs   dx,DWORD PTR ds:[esi]
  40a5b2:	push   edi
  40a5b3:	pop    ebx
  40a5b4:	mov    edx,cs
  40a5b6:	mov    ds:0x24cbd720,eax
  40a5bb:	scas   eax,DWORD PTR es:[edi]
  40a5bc:	cmp    ch,BYTE PTR ds:[ecx+0x5fb743e2]
  40a5c3:	popa   
  40a5c4:	mov    al,ds:0x3a7e7bd3
  40a5c9:	xchg   ecx,eax
  40a5ca:	add    eax,0x9da9d2d5
  40a5cf:	sub    BYTE PTR [ebp-0x3a],0xfd
  40a5d3:	int3   
  40a5d4:	adc    dh,cl
  40a5d6:	sbb    ah,BYTE PTR [esi+0x19]
  40a5d9:	jmp    0x359e:0x880be3a0
  40a5e0:	jmp    0xe25dc565
  40a5e5:	ret    
  40a5e6:	push   ecx
  40a5e7:	je     0x40a5fd
  40a5e9:	cs addr16 cmc 
  40a5ec:	sub    al,0x1a
  40a5ee:	mov    bh,0xf8
  40a5f0:	mov    edi,0x1a211f25
  40a5f5:	cmc    
  40a5f6:	arpl   WORD PTR [edi-0x33],cx
  40a5f9:	xchg   DWORD PTR [eax-0x37],eax
  40a5fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5fd:	cmp    BYTE PTR [edi-0x29c3d79b],bh
  40a603:	push   es
  40a604:	mov    cl,0x1f
  40a606:	xchg   edx,eax
  40a607:	sub    al,0x65
  40a609:	push   edx
  40a60a:	inc    ebx
  40a60b:	xor    BYTE PTR [ebx+eiz*4-0x3c9dfd8a],0xcc
  40a613:	or     eax,0x8d7dc845
  40a618:	jmp    0x40a5df
  40a61a:	xchg   esp,eax
  40a61b:	and    al,0x0
  40a61d:	adc    edi,DWORD PTR [esi]
  40a61f:	ret    
  40a620:	or     al,0xbf
  40a622:	xor    BYTE PTR [ebx-0x244e7139],cl
  40a628:	xchg   ecx,eax
  40a629:	mov    al,0x86
  40a62b:	aaa    
  40a62c:	sbb    cl,bh
  40a62e:	in     al,dx
  40a62f:	rcl    DWORD PTR [ebx-0x2d5304f1],cl
  40a635:	and    BYTE PTR [eax],dl
  40a637:	mov    dl,0xa6
  40a639:	and    BYTE PTR [ebx-0x5c6f46f3],dl
  40a63f:	mov    dh,0xaa
  40a641:	pusha  
  40a642:	jecxz  0x40a6a4
  40a644:	push   ebp
  40a645:	sahf   
  40a646:	sbb    al,0x27
  40a648:	jmp    0x100f9e66
  40a64d:	xor    al,0x23
  40a64f:	leave  
  40a650:	sub    esp,esi
  40a652:	loopne 0x40a60a
  40a654:	jecxz  0x40a6a4
  40a656:	xchg   ecx,eax
  40a657:	in     al,dx
  40a658:	adc    al,0x7e
  40a65a:	sub    ch,BYTE PTR [eax+0x4e31f849]
  40a660:	sub    dh,BYTE PTR [edx-0x3b7684ee]
  40a666:	lods   eax,DWORD PTR ds:[esi]
  40a667:	bound  ebx,QWORD PTR [edx-0x5833e9e2]
  40a66d:	loop   0x40a60b
  40a66f:	push   cs
  40a670:	dec    esi
  40a671:	mov    esp,DWORD PTR [edx]
  40a673:	cld    
  40a674:	sbb    eax,0xbafe4732
  40a679:	test   al,0xf5
  40a67b:	push   ebp
  40a67c:	and    dl,BYTE PTR [esi]
  40a67e:	cdq    
  40a67f:	lahf   
  40a680:	scas   eax,DWORD PTR es:[edi]
  40a681:	lea    ebp,[ebp+0x317130d3]
  40a687:	pop    edi
  40a688:	sbb    ch,BYTE PTR [eax+0xe]
  40a68b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a68c:	push   ss
  40a68d:	cmp    esp,edx
  40a68f:	ffreep st(7)
  40a691:	push   ebp
  40a692:	lods   al,BYTE PTR ds:[esi]
  40a693:	cmp    BYTE PTR [edi],ah
  40a695:	dec    ecx
  40a696:	shl    DWORD PTR [edi+0x5d],0xb0
  40a69a:	ror    edx,1
  40a69c:	imul   ebx,DWORD PTR [ecx],0x39fa21cb
  40a6a2:	and    dh,BYTE PTR [eax-0x16]
  40a6a5:	mov    al,0x1d
  40a6a7:	xor    BYTE PTR [edx],dl
  40a6a9:	out    0xd2,eax
  40a6ab:	test   BYTE PTR [ebp+0x4aa7496e],ch
  40a6b1:	mov    esp,0x8a8d4036
  40a6b6:	popa   
  40a6b7:	jns    0x40a687
  40a6b9:	out    0x2e,al
  40a6bb:	dec    ebp
  40a6bc:	jecxz  0x40a6aa
  40a6be:	pop    eax
  40a6bf:	jno    0x40a6dd
  40a6c1:	xchg   edx,eax
  40a6c2:	dec    edx
  40a6c3:	jmp    0xe2101ac3
  40a6c8:	aad    0x93
  40a6ca:	jno    0x40a66c
  40a6cc:	fild   WORD PTR [ebx]
  40a6ce:	push   cs
  40a6cf:	popa   
  40a6d0:	cmp    al,0x52
  40a6d2:	cmp    DWORD PTR [ebx],eax
  40a6d4:	jge    0x40a68c
  40a6d6:	push   ebp
  40a6d7:	dec    ecx
  40a6d8:	and    eax,0x60632ce
  40a6dd:	shr    DWORD PTR [eax-0x1e31d52e],cl
  40a6e3:	pop    ss
  40a6e4:	dec    eax
  40a6e5:	or     bh,BYTE PTR [edi]
  40a6e7:	int3   
  40a6e8:	je     0x40a731
  40a6ea:	js     0x40a6d9
  40a6ec:	enter  0x2108,0xcc
  40a6f0:	gs xchg ecx,eax
  40a6f2:	xlat   BYTE PTR ds:[ebx]
  40a6f3:	xchg   dh,cl
  40a6f5:	or     eax,0x2982a61c
  40a6fa:	inc    ecx
  40a6fb:	fidivr DWORD PTR [ebx]
  40a6fd:	popf   
  40a6fe:	scas   eax,DWORD PTR es:[edi]
  40a6ff:	test   DWORD PTR [ebp+0x24e322ea],ecx
  40a705:	je     0x40a77f
  40a707:	cmp    BYTE PTR [edi],bh
  40a709:	popf   
  40a70a:	cmp    edx,esi
  40a70c:	inc    ebx
  40a70d:	sbb    BYTE PTR [edx],0x5e
  40a710:	push   ebp
  40a711:	push   edx
  40a712:	frstor [edx]
  40a714:	jl     0x40a721
  40a716:	mov    dh,0x4
  40a718:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a719:	jne    0x40a752
  40a71b:	xor    eax,0x6d614ef3
  40a720:	mov    ebp,0xb8374826
  40a725:	test   BYTE PTR [esi],bh
  40a727:	fnstsw WORD PTR [ecx-0xd]
  40a72a:	es clc 
  40a72c:	jp     0x40a72a
  40a72e:	mov    al,0x50
  40a730:	push   edi
  40a731:	test   al,0x45
  40a733:	mov    bh,0x3e
  40a735:	xchg   esi,eax
  40a736:	pop    es
  40a737:	fs fs sub eax,0x60562bce
  40a73e:	push   esi
  40a73f:	mov    ebx,DWORD PTR [ecx+0x25]
  40a742:	mov    BYTE PTR [ebp-0x7fb59b80],ch
  40a748:	inc    edx
  40a749:	or     eax,0xb73701cb
  40a74e:	sbb    al,0xc6
  40a750:	and    al,0xe3
  40a752:	scas   eax,DWORD PTR es:[edi]
  40a753:	pop    esi
  40a754:	loope  0x40a780
  40a756:	cli    
  40a757:	pop    ds
  40a758:	sahf   
  40a759:	xchg   BYTE PTR ds:0xcb5eb293,dh
  40a75f:	mov    edx,0x88cfd052
  40a764:	out    0x8e,eax
  40a766:	and    ebp,DWORD PTR [esi+0x75505aff]
  40a76c:	dec    edi
  40a76d:	adc    DWORD PTR [esi],edi
  40a76f:	mov    al,ds:0x2d345075
  40a774:	fstp   QWORD PTR ds:0xbc3795af
  40a77a:	mov    al,ds:0xe07c8e9d
  40a77f:	pop    ebp
  40a780:	cdq    
  40a781:	(bad)  
  40a782:	dec    esp
  40a783:	jne    0x40a799
  40a785:	add    al,0x1
  40a787:	nop
  40a788:	push   esp
  40a789:	je     0x40a762
  40a78b:	pop    eax
  40a78c:	in     al,dx
  40a78d:	inc    eax
  40a78e:	sub    ch,bl
  40a790:	adc    ah,BYTE PTR [eax+0x323e352d]
  40a796:	(bad)  
  40a797:	aad    0xee
  40a799:	sub    dh,ah
  40a79b:	jb     0x40a7b6
  40a79d:	in     al,0x8b
  40a79f:	inc    ecx
  40a7a0:	xor    ah,BYTE PTR [ebx-0x177ca80c]
  40a7a6:	sbb    cl,BYTE PTR [ebp-0x31148791]
  40a7ac:	fld    st(0)
  40a7ae:	jmp    0x6856:0x2686ee61
  40a7b5:	inc    esi
  40a7b6:	sbb    BYTE PTR [edx],bh
  40a7b8:	pop    es
  40a7b9:	fdiv   DWORD PTR [esi+ebx*8-0x6]
  40a7bd:	lock int 0xe2
  40a7c0:	std    
  40a7c1:	in     al,dx
  40a7c2:	(bad)  
  40a7c3:	es add eax,0x7739907e
  40a7ca:	rcr    DWORD PTR [esi+0x1aecbbda],0x83
  40a7d1:	jne    0x40a7c4
  40a7d3:	push   ebx
  40a7d4:	mov    DWORD PTR ds:0x42c004,0x7145
  40a7de:	je     0x40a831
  40a7e4:	and    esi,0x2f20
  40a7ea:	mov    esi,DWORD PTR [ebp-0x18]
  40a7ed:	add    DWORD PTR [eax],esi
  40a7ef:	mov    eax,DWORD PTR [ebp-0x4]
  40a7f2:	adc    esi,0x3e3c
  40a7f8:	mov    esi,DWORD PTR [ebp+0xc]
  40a7fb:	sbb    DWORD PTR ds:0x42d010,0x429008
  40a805:	xor    esi,ecx
  40a807:	adc    DWORD PTR ds:0x42b014,0x7980
  40a811:	add    esi,edx
  40a813:	xor    DWORD PTR ds:0x42d004,0x42b000
  40a81d:	imul   esi,DWORD PTR [eax]
  40a820:	mov    DWORD PTR [eax],esi
  40a822:	mov    DWORD PTR ds:0x42a008,0x3759
  40a82c:	jmp    0x40a849
  40a831:	movzx  esi,BYTE PTR ds:0x42a00c
  40a838:	sub    DWORD PTR ds:0x42a018,esi
  40a83e:	mov    esi,DWORD PTR [ebp+0x14]
  40a841:	and    ebx,DWORD PTR ds:0x42a010
  40a847:	xor    DWORD PTR [eax],esi
  40a849:	and    edi,0x6d78
  40a84f:	mov    eax,DWORD PTR [ebp-0x4]
  40a852:	mov    edi,DWORD PTR [ebp+0x10]
  40a855:	mov    DWORD PTR ds:0x42c014,0x1d
  40a85f:	cmp    DWORD PTR ds:0x42c014,0x0
  40a866:	je     0x40a8bc
  40a86c:	cmp    DWORD PTR ds:0x42c014,0xd
  40a873:	jne    0x40a88e
  40a879:	push   0x42e1c8
  40a87e:	push   DWORD PTR [ebp-0x14]
  40a881:	push   0x1
  40a883:	push   0x66db
  40a888:	call   DWORD PTR ds:0x42ed61
  40a88e:	cmp    DWORD PTR ds:0x42c014,0xe
  40a895:	jne    0x40a8aa
  40a89b:	xor    esi,esi
  40a89d:	or     esi,DWORD PTR ds:0x42c014
  40a8a3:	dec    esi
  40a8a4:	mov    DWORD PTR ds:0x42c014,esi
  40a8aa:	mov    esi,DWORD PTR ds:0x42c014
  40a8b0:	dec    esi
  40a8b1:	mov    DWORD PTR ds:0x42c014,esi
  40a8b7:	jmp    0x40a85f
  40a8bc:	xor    edi,ecx
  40a8be:	mov    esi,0xffcd8d22
  40a8c3:	mov    ebx,esi
  40a8c5:	sub    ebx,edi
  40a8c7:	add    DWORD PTR [eax],ebx
  40a8c9:	mov    eax,DWORD PTR [ebp-0x4]
  40a8cc:	mov    edi,DWORD PTR [ebp-0x8]
  40a8cf:	add    edi,DWORD PTR [eax]
  40a8d1:	mov    DWORD PTR [ebp-0x8],edi
  40a8d4:	mov    eax,DWORD PTR [ebp+0xc]
  40a8d7:	mov    edi,DWORD PTR [ebp+0xc]
  40a8da:	xor    edi,ecx
  40a8dc:	xor    eax,ecx
  40a8de:	lea    eax,[eax+edi*1+0x64e5bc]
  40a8e5:	mov    edi,DWORD PTR [ebp+0xc]
  40a8e8:	xor    edi,ecx
  40a8ea:	add    edi,edx
  40a8ec:	imul   eax,edi
  40a8ef:	mov    edi,DWORD PTR [ebp+0xc]
  40a8f2:	xor    edi,ecx
  40a8f4:	sub    edi,eax
  40a8f6:	mov    eax,DWORD PTR [ebp-0x4]
  40a8f9:	add    edi,edx
  40a8fb:	cmp    DWORD PTR [eax],edi
  40a8fd:	mov    eax,DWORD PTR [ebp-0x4]
  40a900:	mov    edi,DWORD PTR [ebp+0x10]
  40a903:	jg     0x40a916
  40a909:	xor    edi,ecx
  40a90b:	mov    ebx,esi
  40a90d:	sub    ebx,edi
  40a90f:	add    DWORD PTR [eax],ebx
  40a911:	jmp    0x40a91c
  40a916:	xor    edi,ecx
  40a918:	add    edi,edx
  40a91a:	add    DWORD PTR [eax],edi
  40a91c:	mov    eax,DWORD PTR [ebp-0x8]
  40a91f:	mov    edi,DWORD PTR [ebp-0x10]
  40a922:	mov    eax,DWORD PTR [eax]
  40a924:	xor    edi,ecx
  40a926:	add    edi,0x3272dd
  40a92c:	not    edi
  40a92e:	and    eax,edi
  40a930:	movsx  di,BYTE PTR [eax+0x1]
  40a935:	mov    ebx,0x3b4e
  40a93a:	sub    di,bx
  40a93d:	mov    ebx,0x8a8b
  40a942:	xor    di,bx
  40a945:	mov    ebx,0x4f87
  40a94a:	cmp    di,bx
  40a94d:	jne    0x40a975
  40a953:	movsx  di,BYTE PTR [eax]
  40a957:	mov    ebx,0x3b4e
  40a95c:	sub    di,bx
  40a95f:	mov    ebx,0x8a8b
  40a964:	xor    di,bx
  40a967:	mov    ebx,0x4e74
  40a96c:	cmp    di,bx
  40a96f:	je     0x40a985
  40a975:	mov    edi,DWORD PTR [ebp-0x10]
  40a978:	xor    edi,ecx
  40a97a:	mov    ebx,esi
  40a97c:	sub    ebx,edi
  40a97e:	add    eax,ebx
  40a980:	jmp    0x40a930
  40a985:	mov    esi,DWORD PTR [ebp-0x14]
  40a988:	mov    esi,DWORD PTR [esi]
  40a98a:	mov    edi,DWORD PTR [eax+0x3c]
  40a98d:	lea    esi,[edi+esi*8+0x78]
  40a991:	mov    esi,DWORD PTR [esi+eax*1]
  40a994:	mov    DWORD PTR [ebp-0x8],esi
  40a997:	mov    esi,DWORD PTR [ebp+0x8]
  40a99a:	xor    esi,ecx
  40a99c:	add    esi,edx
  40a99e:	mov    DWORD PTR [ebp-0x14],esi
  40a9a1:	mov    esi,DWORD PTR [ebp+0x8]
  40a9a4:	mov    edi,DWORD PTR [ebp-0x8]
  40a9a7:	xor    esi,ecx
  40a9a9:	add    esi,edx
  40a9ab:	pop    ebx
  40a9ac:	cmp    edi,esi
  40a9ae:	jne    0x40a9cc
  40a9b4:	mov    eax,DWORD PTR [ebp+0xc]
  40a9b7:	xor    eax,ecx
  40a9b9:	mov    ecx,DWORD PTR [ebp-0x8]
  40a9bc:	add    eax,edx
  40a9be:	imul   eax,ecx
  40a9c1:	mov    DWORD PTR [ebp-0x8],eax
  40a9c4:	push   DWORD PTR [ebp+0x18]
  40a9c7:	jmp    0x40aa20
  40a9cc:	mov    ecx,DWORD PTR [ebp-0x8]
  40a9cf:	add    ecx,eax
  40a9d1:	mov    DWORD PTR [ebp-0x14],ecx
  40a9d4:	mov    ecx,DWORD PTR [ebp-0x14]
  40a9d7:	mov    ecx,DWORD PTR [ecx+0xc]
  40a9da:	movsx  cx,BYTE PTR [ecx+eax*1]
  40a9df:	mov    edx,0x3b4e
  40a9e4:	sub    cx,dx
  40a9e7:	mov    edx,0x8a8b
  40a9ec:	xor    cx,dx
  40a9ef:	mov    edx,0x4e76
  40a9f4:	cmp    cx,dx
  40a9f7:	jne    0x40a9c4
  40a9fd:	mov    ecx,DWORD PTR ds:0x42e435
  40aa03:	mov    ecx,DWORD PTR [ecx+0x198]
  40aa09:	mov    DWORD PTR [ecx],eax
  40aa0b:	jmp    0x40aa31
  40aa10:	mov    ecx,DWORD PTR [ebp+0x18]
  40aa13:	cmp    ecx,0xf89c85b4
  40aa19:	jne    0x40aa31
  40aa1f:	push   eax
  40aa20:	push   DWORD PTR [ebp+0x14]
  40aa23:	push   DWORD PTR [ebp+0x10]
  40aa26:	push   DWORD PTR [ebp+0xc]
  40aa29:	push   DWORD PTR [ebp+0x8]
  40aa2c:	call   0x40816b
  40aa31:	pop    edi
  40aa32:	pop    esi
  40aa33:	leave  
  40aa34:	ret    0x14
  40aa37:	push   ebp
  40aa38:	mov    ebp,esp
  40aa3a:	push   ecx
  40aa3b:	xor    DWORD PTR ds:0x42b01c,edi
  40aa41:	push   ecx
  40aa42:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  40aa49:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  40aa50:	and    DWORD PTR ds:0x429014,0x0
  40aa5a:	jmp    0x40aa6c
  40aa5f:	mov    ecx,DWORD PTR ds:0x429014
  40aa65:	inc    ecx
  40aa66:	mov    DWORD PTR ds:0x429014,ecx
  40aa6c:	cmp    DWORD PTR ds:0x429014,0x11
  40aa73:	jae    0x40aa9e
  40aa79:	cmp    DWORD PTR ds:0x429014,0x15
  40aa80:	jne    0x40aa94
  40aa86:	push   0x42c004
  40aa8b:	push   DWORD PTR [ebp-0x1c]
  40aa8e:	call   DWORD PTR ds:0x42ed65
  40aa94:	jmp    0x40aa5f
  40aa99:	xor    eax,0x3b7b
  40aa9e:	mov    eax,DWORD PTR [ebp-0x4]
  40aaa1:	push   esi
  40aaa2:	sub    DWORD PTR ds:0x429020,0x421f
  40aaac:	mov    esi,DWORD PTR [ebp-0x8]
  40aaaf:	mov    edx,0x7510897
  40aab4:	and    DWORD PTR ds:0x42d00c,0x0
  40aabe:	mov    ecx,DWORD PTR ds:0x42d00c
  40aac4:	inc    ecx
  40aac5:	mov    DWORD PTR ds:0x42d00c,ecx
  40aacb:	cmp    DWORD PTR ds:0x42d00c,0x21
  40aad2:	jne    0x40aaf8
  40aad8:	push   0x2769
  40aadd:	push   0x42b014
  40aae2:	push   0x77ff
  40aae7:	push   0x42e074
  40aaec:	push   DWORD PTR [ebp-0x1c]
  40aaef:	push   DWORD PTR [ebp-0x14]
  40aaf2:	call   DWORD PTR ds:0x42ed6d
  40aaf8:	cmp    DWORD PTR ds:0x42d00c,0x11
  40aaff:	jb     0x40aabe
  40ab05:	xor    eax,edx
  40ab07:	neg    DWORD PTR ds:0x42c018
  40ab0d:	xor    esi,edx
  40ab0f:	mov    ecx,0x3272de
  40ab14:	add    esi,ecx
  40ab16:	add    eax,ecx
  40ab18:	imul   eax,esi
  40ab1b:	mov    esi,DWORD PTR [ebp+0xc]
  40ab1e:	mov    DWORD PTR ds:0x429008,0x69f6
  40ab28:	cmp    esi,eax
  40ab2a:	jne    0x40ab46
  40ab30:	mov    eax,DWORD PTR [ebp-0x4]
  40ab33:	mov    esi,DWORD PTR [ebp-0x8]
  40ab36:	xor    eax,edx
  40ab38:	xor    esi,edx
  40ab3a:	add    eax,ecx
  40ab3c:	add    esi,ecx
  40ab3e:	imul   eax,esi
  40ab41:	jmp    0x40ab81
  40ab46:	mov    eax,DWORD PTR [ebp+0xc]
  40ab49:	mov    eax,DWORD PTR [eax+0x78]
  40ab4c:	mov    DWORD PTR [ebp+0xc],eax
  40ab4f:	mov    eax,DWORD PTR [ebp-0x4]
  40ab52:	mov    esi,DWORD PTR [ebp-0x8]
  40ab55:	xor    eax,edx
  40ab57:	xor    esi,edx
  40ab59:	add    eax,ecx
  40ab5b:	add    esi,ecx
  40ab5d:	imul   eax,esi
  40ab60:	mov    esi,DWORD PTR [ebp+0xc]
  40ab63:	cmp    esi,eax
  40ab65:	mov    eax,DWORD PTR [ebp-0x4]
  40ab68:	je     0x40ab33
  40ab6e:	xor    eax,edx
  40ab70:	add    eax,ecx
  40ab72:	mov    ecx,DWORD PTR [ebp+0xc]
  40ab75:	imul   eax,ecx
  40ab78:	add    eax,DWORD PTR [ebp+0x8]
  40ab7b:	mov    DWORD PTR [ebp+0xc],eax
  40ab7e:	mov    eax,DWORD PTR [ebp+0xc]
  40ab81:	pop    esi
  40ab82:	leave  
  40ab83:	ret    0x8
  40ab86:	push   ebp
  40ab87:	mov    ebp,esp
  40ab89:	push   ecx
  40ab8a:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  40ab91:	and    DWORD PTR ds:0x42b014,0x0
  40ab9b:	jmp    0x40abae
  40aba0:	xor    eax,eax
  40aba2:	or     eax,DWORD PTR ds:0x42b014
  40aba8:	inc    eax
  40aba9:	mov    ds:0x42b014,eax
  40abae:	cmp    DWORD PTR ds:0x42b014,0x19
  40abb5:	jae    0x40ac2d
  40abbb:	cmp    DWORD PTR ds:0x42b014,0x7
  40abc2:	jne    0x40abce
  40abc8:	call   DWORD PTR ds:0x42ed71
  40abce:	cmp    DWORD PTR ds:0x42b014,0x6
  40abd5:	jne    0x40abe6
  40abdb:	mov    eax,ds:0x42b014
  40abe0:	inc    eax
  40abe1:	mov    ds:0x42b014,eax
  40abe6:	jmp    0x40aba0
  40abeb:	and    DWORD PTR ds:0x42900c,0x0
  40abf5:	mov    edx,DWORD PTR ds:0x42900c
  40abfb:	inc    edx
  40abfc:	mov    DWORD PTR ds:0x42900c,edx
  40ac02:	cmp    DWORD PTR ds:0x42900c,0x1f
  40ac09:	jne    0x40ac1a
  40ac0f:	push   0x42c00c
  40ac14:	call   DWORD PTR ds:0x42ed75
  40ac1a:	cmp    DWORD PTR ds:0x42900c,0x1c
  40ac21:	jb     0x40abf5
  40ac27:	sub    DWORD PTR ds:0x42d010,edx
  40ac2d:	mov    eax,DWORD PTR [ebp-0x4]
  40ac30:	mov    edx,DWORD PTR [ebp+0x10]
  40ac33:	mov    ecx,0x7510897
  40ac38:	xor    eax,ecx
  40ac3a:	add    eax,0x3272de
  40ac3f:	mov    DWORD PTR [edx],eax
  40ac41:	mov    eax,DWORD PTR [ebp+0xc]
  40ac44:	xor    eax,ecx
  40ac46:	push   esi
  40ac47:	mov    esi,DWORD PTR [ebp+0x10]
  40ac4a:	mov    edx,0x3272de
  40ac4f:	add    eax,edx
  40ac51:	mov    DWORD PTR [esi+0x4],eax
  40ac54:	mov    eax,DWORD PTR [ebp+0x14]
  40ac57:	mov    esi,DWORD PTR [ebp+0x10]
  40ac5a:	mov    DWORD PTR [esi+0x8],eax
  40ac5d:	mov    eax,DWORD PTR [ebp+0x18]
  40ac60:	mov    esi,DWORD PTR [ebp+0x10]
  40ac63:	mov    DWORD PTR [esi+0xc],eax
  40ac66:	mov    eax,DWORD PTR [ebp+0x1c]
  40ac69:	mov    esi,DWORD PTR [ebp+0x10]
  40ac6c:	mov    DWORD PTR [esi+0x10],eax
  40ac6f:	mov    eax,DWORD PTR [ebp+0x8]
  40ac72:	xor    eax,ecx
  40ac74:	add    eax,edx
  40ac76:	pop    esi
  40ac77:	leave  
  40ac78:	ret    0x18
  40ac7b:	push   ebp
  40ac7c:	mov    ebp,esp
  40ac7e:	sub    esp,0xa4
  40ac84:	mov    ecx,DWORD PTR [ebp+0x8]
  40ac87:	inc    eax
  40ac88:	mov    eax,0x8a8b
  40ac8d:	xor    ax,WORD PTR [ecx+0x20]
  40ac91:	mov    ecx,0x3b4e
  40ac96:	and    DWORD PTR ds:0x42901c,0xd95
  40aca0:	add    ax,cx
  40aca3:	xor    ecx,ecx
  40aca5:	or     ecx,DWORD PTR ds:0x42d01c
  40acab:	adc    DWORD PTR ds:0x42901c,ecx
  40acb1:	movzx  eax,ax
  40acb4:	mov    DWORD PTR [ebp-0x18],eax
  40acb7:	and    DWORD PTR ds:0x42a008,0x3531
  40acc1:	mov    BYTE PTR [ebp-0x1],0x79
  40acc5:	or     ecx,0x4f02
  40accb:	lea    eax,[ebp-0x1]
  40acce:	movzx  ecx,WORD PTR ds:0x42900c
  40acd5:	add    DWORD PTR ds:0x42b004,ecx
  40acdb:	mov    DWORD PTR [ebp-0x10],eax
  40acde:	and    DWORD PTR ds:0x42a010,0x0
  40ace8:	jmp    0x40acfa
  40aced:	mov    ecx,DWORD PTR ds:0x42a010
  40acf3:	inc    ecx
  40acf4:	mov    DWORD PTR ds:0x42a010,ecx
  40acfa:	cmp    DWORD PTR ds:0x42a010,0x16
  40ad01:	jae    0x40adb2
  40ad07:	cmp    DWORD PTR ds:0x42a010,0x25
  40ad0e:	jne    0x40ad20
  40ad14:	push   DWORD PTR [ebp-0x10]
  40ad17:	push   DWORD PTR [ebp-0x14]
  40ad1a:	call   DWORD PTR ds:0x42ed35
  40ad20:	jmp    0x40aced
  40ad25:	and    DWORD PTR ds:0x42b000,0x0
  40ad2f:	xor    ecx,ecx
  40ad31:	or     ecx,DWORD PTR ds:0x42b000
  40ad37:	inc    ecx
  40ad38:	mov    DWORD PTR ds:0x42b000,ecx
  40ad3e:	cmp    DWORD PTR ds:0x42b000,0x17
  40ad45:	jne    0x40ad5e
  40ad4b:	push   DWORD PTR [ebp-0x28]
  40ad4e:	push   0x429018
  40ad53:	push   0x2079
  40ad58:	call   DWORD PTR ds:0x42ed39
  40ad5e:	cmp    DWORD PTR ds:0x42b000,0x13
  40ad65:	jb     0x40ad2f
  40ad6b:	and    DWORD PTR ds:0x429000,0x0
  40ad75:	mov    ecx,DWORD PTR ds:0x429000
  40ad7b:	inc    ecx
  40ad7c:	mov    DWORD PTR ds:0x429000,ecx
  40ad82:	cmp    DWORD PTR ds:0x429000,0x26
  40ad89:	jne    0x40ad9f
  40ad8f:	push   0x42e06a
  40ad94:	push   0x42e11d
  40ad99:	call   DWORD PTR ds:0x42ed3d
  40ad9f:	cmp    DWORD PTR ds:0x429000,0x16
  40ada6:	jb     0x40ad75
  40adac:	or     DWORD PTR ds:0x42c01c,ebx
  40adb2:	mov    al,BYTE PTR [ebp-0x1]
  40adb5:	mov    ecx,DWORD PTR [ebp-0x10]
  40adb8:	adc    DWORD PTR ds:0x42b004,0x42c01c
  40adc2:	xor    al,0x72
  40adc4:	sub    al,0xa
  40adc6:	mov    DWORD PTR ds:0x42b018,0x196a
  40add0:	mov    BYTE PTR [ecx],al
  40add2:	xor    ecx,DWORD PTR ds:0x42d01c
  40add8:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40addf:	sub    eax,0x1bc
  40ade4:	push   ebx
  40ade5:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  40adec:	mov    ecx,DWORD PTR [ebp-0x14]
  40adef:	sub    eax,DWORD PTR ds:0x42d018
  40adf5:	push   esi
  40adf6:	mov    eax,0x7510897
  40adfb:	and    DWORD PTR ds:0x42b004,0x42d008
  40ae05:	xor    ecx,eax
  40ae07:	sbb    DWORD PTR ds:0x42c010,0x42c018
  40ae11:	mov    esi,0x3272de
  40ae16:	push   edi
  40ae17:	add    ecx,esi
  40ae19:	jmp    0x40ae3d
  40ae1e:	mov    dl,BYTE PTR [ebp-0x1]
  40ae21:	mov    DWORD PTR ds:0x429010,0xa66
  40ae2b:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40ae32:	mov    DWORD PTR ds:0x429020,0x7b55
  40ae3c:	inc    ecx
  40ae3d:	cmp    ecx,0x40
  40ae40:	jb     0x40ae1e
  40ae46:	mov    edx,DWORD PTR [ebp-0x14]
  40ae49:	adc    DWORD PTR ds:0x429008,0x429014
  40ae53:	xor    edx,eax
  40ae55:	mov    DWORD PTR ds:0x429028,0x35c1
  40ae5f:	add    edx,esi
  40ae61:	mov    DWORD PTR ds:0x42a000,0x76a6
  40ae6b:	jmp    0x40af3e
  40ae70:	mov    edi,DWORD PTR [ebp+0x8]
  40ae73:	mov    DWORD PTR ds:0x42a01c,0x1a
  40ae7d:	cmp    DWORD PTR ds:0x42a01c,0x0
  40ae84:	je     0x40aede
  40ae8a:	cmp    DWORD PTR ds:0x42a01c,0xc
  40ae91:	jne    0x40aeaa
  40ae97:	push   DWORD PTR [ebp-0x24]
  40ae9a:	push   0x67b8
  40ae9f:	push   0x110d
  40aea4:	call   DWORD PTR ds:0x42ed41
  40aeaa:	cmp    DWORD PTR ds:0x42a01c,0xd
  40aeb1:	jne    0x40aec6
  40aeb7:	xor    ecx,ecx
  40aeb9:	xor    ecx,DWORD PTR ds:0x42a01c
  40aebf:	dec    ecx
  40aec0:	mov    DWORD PTR ds:0x42a01c,ecx
  40aec6:	mov    ecx,DWORD PTR ds:0x42a01c
  40aecc:	dec    ecx
  40aecd:	mov    DWORD PTR ds:0x42a01c,ecx
  40aed3:	jmp    0x40ae7d
  40aed8:	xor    DWORD PTR ds:0x42d008,edx
  40aede:	mov    ecx,0x8a8b
  40aee3:	xor    DWORD PTR ds:0x429004,0x35f6
  40aeed:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40aef2:	mov    edi,0x3b4e
  40aef7:	add    cx,di
  40aefa:	add    DWORD PTR ds:0x42a018,0x42a008
  40af04:	movzx  ecx,cx
  40af07:	adc    DWORD PTR ds:0x42d000,0x42a018
  40af11:	mov    DWORD PTR [ebp-0x10],ecx
  40af14:	mov    ecx,DWORD PTR [ebp+0x8]
  40af17:	movzx  ecx,WORD PTR [ecx+edx*4]
  40af1b:	xor    ecx,0x8a8b
  40af21:	add    ecx,edi
  40af23:	mov    DWORD PTR ds:0x429018,0x7e83
  40af2d:	mov    edi,DWORD PTR [ebp-0x10]
  40af30:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40af37:	mov    DWORD PTR ds:0x42a014,ebx
  40af3d:	inc    edx
  40af3e:	mov    ecx,0x1044
  40af43:	mov    ecx,DWORD PTR [ebp-0x18]
  40af46:	cmp    edx,ecx
  40af48:	mov    DWORD PTR ds:0x42a018,0x1347
  40af52:	jne    0x40ae70
  40af58:	sbb    DWORD PTR ds:0x429008,ebx
  40af5e:	mov    ecx,DWORD PTR [ebp-0x14]
  40af61:	not    edx
  40af63:	mov    edx,DWORD PTR [ebp+0x10]
  40af66:	xor    ecx,eax
  40af68:	adc    DWORD PTR ds:0x42c01c,0x129
  40af72:	add    ecx,esi
  40af74:	or     DWORD PTR ds:0x429010,0x70a0
  40af7e:	mov    DWORD PTR [edx],ecx
  40af80:	and    DWORD PTR ds:0x429024,0x0
  40af8a:	xor    ecx,ecx
  40af8c:	add    ecx,DWORD PTR ds:0x429024
  40af92:	inc    ecx
  40af93:	mov    DWORD PTR ds:0x429024,ecx
  40af99:	cmp    DWORD PTR ds:0x429024,0x20
  40afa0:	jne    0x40afb7
  40afa6:	push   DWORD PTR [ebp-0x14]
  40afa9:	push   0x42a008
  40afae:	push   DWORD PTR [ebp-0x18]
  40afb1:	call   DWORD PTR ds:0x42ed45
  40afb7:	cmp    DWORD PTR ds:0x429024,0x13
  40afbe:	jb     0x40af8a
  40afc4:	add    DWORD PTR ds:0x429010,0xba4
  40afce:	mov    ecx,DWORD PTR [ebp-0x14]
  40afd1:	xor    ecx,eax
  40afd3:	add    ecx,esi
  40afd5:	mov    DWORD PTR [ebp-0x20],ecx
  40afd8:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  40afdf:	mov    ecx,0x4eac
  40afe4:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  40afeb:	mov    DWORD PTR [ebp-0x1c],0xf89c95b5
  40aff2:	mov    ecx,DWORD PTR [ebp-0xc]
  40aff5:	mov    DWORD PTR [ebp+0x8],ecx
  40aff8:	mov    DWORD PTR ds:0x42d008,0x744
  40b002:	jmp    0x40d54d
  40b007:	and    DWORD PTR ds:0x42a00c,0x64d1
  40b011:	mov    ecx,DWORD PTR [ebp+0x8]
  40b014:	jmp    0x40d3d6
  40b019:	add    BYTE PTR [ecx],al
  40b01b:	shl    BYTE PTR [ebx-0x74048c2f],1
  40b021:	mov    esi,0xf1c1dc7e
  40b026:	ja     0x40afee
  40b028:	xor    edx,ecx
  40b02a:	add    DWORD PTR [eax+0x78],edi
  40b02d:	fstp   QWORD PTR [edi+0x78]
  40b030:	js     0x40aff2
  40b032:	scas   eax,DWORD PTR es:[edi]
  40b033:	rcl    DWORD PTR [edx],cl
  40b035:	xor    bl,bl
  40b037:	(bad)  
  40b038:	into   
  40b039:	mov    ecx,0xf2a414c3
  40b03e:	stos   DWORD PTR es:[edi],eax
  40b03f:	stc    
  40b040:	mov    ah,0x4f
  40b042:	jp     0x40b06c
  40b044:	push   ss
  40b045:	jno    0x40b0a5
  40b047:	repz or ch,0xc5
  40b04b:	or     ebx,DWORD PTR [esi]
  40b04d:	(bad)  
  40b04f:	lahf   
  40b050:	bound  esp,QWORD PTR [esi+0x40b18f31]
  40b056:	dec    ebp
  40b057:	call   0x3c82a6f6
  40b05c:	into   
  40b05d:	aas    
  40b05e:	sbb    esi,DWORD PTR [eax]
  40b060:	loop   0x40b039
  40b062:	and    eax,0x4bc39ade
  40b067:	sub    DWORD PTR [eax-0x21],edx
  40b06a:	jmp    0x2d38:0xc669bf63
  40b071:	or     al,0xea
  40b073:	xchg   ecx,eax
  40b074:	cmc    
  40b075:	xchg   ecx,eax
  40b076:	(bad)  
  40b077:	jmp    0xbdccb516
  40b07c:	xor    BYTE PTR [ecx+0xa],cl
  40b07f:	mov    ds:0x10bee38d,eax
  40b084:	jge    0x40b0df
  40b086:	aad    0x26
  40b088:	and    DWORD PTR [eax-0x20],edi
  40b08b:	and    eax,0x96e69449
  40b090:	add    eax,0x2c59679a
  40b095:	ins    BYTE PTR es:[edi],dx
  40b096:	pop    esp
  40b097:	fs pusha 
  40b099:	cmp    al,0x70
  40b09b:	push   ebx
  40b09c:	(bad)  [ecx-0x32]
  40b09f:	cmp    eax,0xc0d75cde
  40b0a4:	ins    BYTE PTR es:[edi],dx
  40b0a5:	mov    DWORD PTR ds:0x48c9638b,esi
  40b0ab:	fdivr  st(0),st
  40b0ad:	outs   dx,DWORD PTR ds:[esi]
  40b0ae:	push   esp
  40b0af:	imul   ebp,DWORD PTR [eax+0x634e9cd3],0xffffffe2
  40b0b6:	jno    0x40b083
  40b0b8:	dec    esi
  40b0b9:	iret   
  40b0ba:	push   esp
  40b0bb:	adc    esi,edx
  40b0bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0be:	sbb    eax,0xf20f3967
  40b0c3:	ss (bad) 
  40b0c5:	push   0x128ab87e
  40b0ca:	xor    DWORD PTR [ebx-0x5f7ab433],ebx
  40b0d0:	enter  0x5b3,0x53
  40b0d4:	add    DWORD PTR [edi+0x5851f956],esi
  40b0da:	push   eax
  40b0db:	loope  0x40b06a
  40b0dd:	out    dx,eax
  40b0de:	xchg   ebx,eax
  40b0df:	repz ds gs (bad) 
  40b0e3:	lahf   
  40b0e4:	pop    ss
  40b0e5:	xor    al,0xa
  40b0e7:	popa   
  40b0e8:	cmp    BYTE PTR [edx-0x1d],dl
  40b0eb:	scas   al,BYTE PTR es:[edi]
  40b0ec:	inc    edi
  40b0ed:	cli    
  40b0ee:	sbb    ebp,0xffffffeb
  40b0f1:	sar    BYTE PTR [eax-0x50c7c69a],1
  40b0f7:	out    0x47,al
  40b0f9:	mov    ebx,DWORD PTR [eax+0x58f81479]
  40b0ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b100:	aad    0x17
  40b102:	jns    0x40b161
  40b104:	adc    al,0x3a
  40b106:	repz sbb edi,DWORD PTR [edi-0x44]
  40b10a:	xchg   esi,eax
  40b10b:	out    0xbc,al
  40b10d:	leave  
  40b10e:	mov    ecx,0x5c66e715
  40b113:	stos   BYTE PTR es:[edi],al
  40b114:	adc    al,0x2c
  40b116:	jmp    0x40b0a9
  40b118:	xor    esi,edx
  40b11a:	pop    ss
  40b11b:	mov    esi,0x3c2fc841
  40b120:	and    al,0x3a
  40b122:	xchg   edi,eax
  40b123:	retf   
  40b124:	hlt    
  40b125:	cmp    BYTE PTR [eax],ch
  40b127:	pop    ds
  40b128:	std    
  40b129:	sbb    ah,cl
  40b12b:	cmp    al,BYTE PTR [ebp+0x51]
  40b12e:	mov    ch,0x3a
  40b130:	sbb    eax,0xb9fd2e52
  40b135:	add    ebx,DWORD PTR [edx-0xe]
  40b138:	sub    esi,DWORD PTR [bx-0x6f]
  40b13c:	test   BYTE PTR [edi],bl
  40b13e:	mov    ecx,0xa99054f5
  40b143:	inc    ebx
  40b144:	xlat   BYTE PTR ds:[ebx]
  40b145:	stos   DWORD PTR es:[edi],eax
  40b146:	push   esp
  40b147:	dec    ecx
  40b148:	xchg   edx,eax
  40b149:	out    0xa5,al
  40b14b:	icebp  
  40b14c:	clc    
  40b14d:	retf   
  40b14e:	mov    BYTE PTR ds:0xca84ae9a,bh
  40b154:	lea    eax,[esi+0x24296e59]
  40b15a:	sbb    ch,BYTE PTR [eax+0x68]
  40b15d:	inc    eax
  40b15e:	xchg   si,ax
  40b160:	dec    esp
  40b161:	(bad)  
  40b162:	jbe    0x40b1d9
  40b164:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b165:	and    dh,al
  40b167:	int3   
  40b168:	leave  
  40b169:	and    ch,BYTE PTR [edx-0x37]
  40b16c:	or     DWORD PTR [edi],edx
  40b16e:	jl     0x40b127
  40b170:	stos   DWORD PTR es:[edi],eax
  40b171:	cmp    eax,0x68464b8e
  40b176:	clc    
  40b177:	loope  0x40b116
  40b179:	ss loopne 0x40b1e2
  40b17c:	add    DWORD PTR [ecx],edi
  40b17e:	inc    edx
  40b17f:	arpl   bp,di
  40b181:	(bad)  
  40b182:	ret    0x234
  40b185:	fwait
  40b186:	out    dx,eax
  40b187:	cmp    edi,edx
  40b189:	xchg   edi,eax
  40b18a:	jno    0x40b10e
  40b18c:	sub    cl,dl
  40b18e:	inc    ecx
  40b18f:	rcr    DWORD PTR [edi-0x6da08d8d],0x87
  40b196:	push   ss
  40b197:	cmp    eax,DWORD PTR [ebx]
  40b199:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b19a:	sahf   
  40b19b:	xchg   esp,eax
  40b19c:	inc    ah
  40b19e:	outs   dx,DWORD PTR ds:[esi]
  40b19f:	mov    al,ds:0x5c61fc0b
  40b1a4:	aaa    
  40b1a5:	repz out 0x36,eax
  40b1a8:	(bad)  
  40b1a9:	xor    al,0x62
  40b1ab:	sub    eax,0x52c14332
  40b1b0:	ja     0x40b19e
  40b1b2:	and    DWORD PTR [eax+0x78],esp
  40b1b5:	out    dx,eax
  40b1b6:	sub    al,0x3d
  40b1b8:	dec    ebx
  40b1b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1ba:	mov    ah,0xc6
  40b1bc:	push   ss
  40b1bd:	push   ss
  40b1be:	fwait
  40b1bf:	sahf   
  40b1c0:	xlat   BYTE PTR ds:[ebx]
  40b1c1:	dec    esi
  40b1c2:	jge    0x40b198
  40b1c4:	shl    bl,0xe6
  40b1c7:	push   ebp
  40b1c8:	or     esp,DWORD PTR [edi]
  40b1ca:	dec    ecx
  40b1cb:	xchg   ebx,eax
  40b1cc:	cli    
  40b1cd:	mov    cl,0xdf
  40b1cf:	fs xchg esi,esp
  40b1d2:	or     edi,DWORD PTR [ebp+0x60ad9af9]
  40b1d8:	clc    
  40b1d9:	push   edx
  40b1da:	adc    eax,0xa0f29714
  40b1df:	lock aad 0x1c
  40b1e2:	mov    cl,bh
  40b1e4:	in     eax,0x3d
  40b1e6:	in     al,0xc4
  40b1e8:	mov    dl,0x1b
  40b1ea:	cmp    dl,BYTE PTR [ecx-0x329c9d35]
  40b1f0:	mov    ch,0x36
  40b1f2:	hlt    
  40b1f3:	das    
  40b1f4:	mov    al,ds:0xb0095a9f
  40b1f9:	test   DWORD PTR [edx+esi*1+0x14],esp
  40b1fd:	(bad)  
  40b1fe:	xor    DWORD PTR [ebx-0x1e],edi
  40b201:	inc    ebp
  40b202:	pop    edi
  40b203:	mov    dh,0x4d
  40b205:	xor    BYTE PTR [esi],dh
  40b207:	hlt    
  40b208:	cmp    DWORD PTR [edx-0x6d85264a],esi
  40b20e:	push   es
  40b20f:	xchg   edi,eax
  40b210:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b211:	xor    al,0x52
  40b213:	stos   DWORD PTR es:[edi],eax
  40b214:	pushf  
  40b215:	fwait
  40b216:	das    
  40b217:	lods   al,BYTE PTR ds:[esi]
  40b218:	sbb    BYTE PTR [ecx-0x3a],bl
  40b21b:	and    eax,0x90d59042
  40b220:	xor    DWORD PTR [edi],esi
  40b222:	mov    eax,0x988ae699
  40b227:	adc    BYTE PTR [ebp+0x4e],dl
  40b22a:	cdq    
  40b22b:	cmc    
  40b22c:	iret   
  40b22d:	xchg   edx,eax
  40b22e:	add    BYTE PTR [ecx],bh
  40b230:	in     eax,0xf
  40b232:	push   ebx
  40b233:	cmp    esp,ecx
  40b235:	jmp    0xc7f6:0x47cfc304
  40b23c:	arpl   WORD PTR [esi+0x7d],si
  40b23f:	popf   
  40b240:	xchg   edi,eax
  40b241:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b242:	ror    BYTE PTR ds:0xc76a0af0,1
  40b248:	pop    edi
  40b249:	sti    
  40b24a:	inc    ecx
  40b24b:	cmp    esp,ebx
  40b24d:	mov    dl,BYTE PTR [edx+0xb812a1a]
  40b253:	jo     0x40b29c
  40b255:	call   0xe525:0x55f6f747
  40b25c:	fistp  WORD PTR [esi]
  40b25e:	mov    eax,0xb5733e69
  40b263:	cmp    eax,0x26f63183
  40b268:	shr    BYTE PTR [edx+0x28905512],1
  40b26e:	out    dx,eax
  40b26f:	and    al,0x1a
  40b271:	popf   
  40b272:	inc    ebx
  40b273:	call   0xe454d401
  40b278:	bound  ecx,QWORD PTR [esp+ebp*2+0x15aa7567]
  40b27f:	fstp   TBYTE PTR [ecx]
  40b281:	les    eax,FWORD PTR [ecx+edx*4]
  40b284:	add    DWORD PTR ds:0xad7d6b2f,edx
  40b28a:	pop    edi
  40b28b:	fisubr WORD PTR [edx+0x2]
  40b28e:	into   
  40b28f:	sub    eax,DWORD PTR [ebx]
  40b291:	adc    BYTE PTR [esi-0x703ab341],0x50
  40b298:	mov    ah,0xb2
  40b29a:	pop    esp
  40b29b:	aam    0x16
  40b29d:	or     al,0x40
  40b29f:	lods   al,BYTE PTR ds:[esi]
  40b2a0:	mov    cl,0xe4
  40b2a2:	dec    edx
  40b2a3:	dec    edi
  40b2a4:	xor    BYTE PTR [ecx],cl
  40b2a6:	pop    ebp
  40b2a7:	push   cs
  40b2a8:	push   cs
  40b2a9:	into   
  40b2aa:	leave  
  40b2ab:	xor    BYTE PTR [edi+0x51a2983f],bh
  40b2b1:	loopne 0x40b2f2
  40b2b3:	jmp    0x40b2ec
  40b2b5:	jge    0x40b327
  40b2b7:	push   ss
  40b2b8:	xor    DWORD PTR [esi],0x5e
  40b2bb:	adc    al,0xb6
  40b2bd:	jl     0x40b33e
  40b2bf:	(bad)  
  40b2c0:	pusha  
  40b2c1:	test   ebp,edx
  40b2c3:	lods   al,BYTE PTR ds:[esi]
  40b2c4:	dec    ecx
  40b2c5:	jmp    0x6cf8:0xab8ae483
  40b2cc:	das    
  40b2cd:	loop   0x40b2f5
  40b2cf:	and    ebp,DWORD PTR [eax+0x50786da2]
  40b2d5:	out    0x7c,eax
  40b2d7:	ret    
  40b2d8:	jns    0x40b312
  40b2da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2db:	sar    edi,cl
  40b2dd:	dec    esp
  40b2de:	pusha  
  40b2df:	sub    DWORD PTR [edi+0x67],ebp
  40b2e2:	shl    edi,1
  40b2e4:	lea    ebp,[edi-0x69cea07a]
  40b2ea:	ret    
  40b2eb:	xchg   ebp,eax
  40b2ec:	ret    
  40b2ed:	idiv   DWORD PTR [eax-0x17]
  40b2f0:	out    0x58,eax
  40b2f2:	inc    BYTE PTR [edi-0x3b97082c]
  40b2f8:	push   edx
  40b2f9:	jmp    0x1425:0xe30965aa
  40b300:	scas   eax,DWORD PTR es:[edi]
  40b301:	jno    0x40b2da
  40b303:	sar    BYTE PTR [ebp-0x2e],1
  40b306:	outs   dx,BYTE PTR ds:[esi]
  40b307:	push   0x10625438
  40b30c:	ss xchg esi,eax
  40b30e:	ja     0x40b297
  40b310:	xor    BYTE PTR [ebx-0x5c206cbb],ah
  40b316:	bound  esi,QWORD PTR ss:[esi]
  40b319:	push   esi
  40b31a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b31b:	lods   eax,DWORD PTR ds:[esi]
  40b31c:	push   esp
  40b31d:	cld    
  40b31e:	sub    ebx,esp
  40b320:	xchg   ebp,eax
  40b321:	rol    DWORD PTR [edx],cl
  40b323:	jmp    0x59cd:0xc59f4be5
  40b32a:	rcr    DWORD PTR [edx+0x7824ebb3],1
  40b330:	adc    bh,BYTE PTR [ebx-0x8]
  40b333:	add    DWORD PTR [ecx+0x68af293e],edi
  40b339:	inc    eax
  40b33a:	sbb    bh,bh
  40b33c:	xor    bl,dl
  40b33e:	pop    ds
  40b33f:	out    dx,al
  40b340:	mov    edx,es
  40b342:	cmp    ch,0x7e
  40b345:	sbb    ebx,DWORD PTR [ebx+0x5722aef4]
  40b34b:	js     0x40b31e
  40b34d:	push   cs
  40b34e:	xchg   esi,eax
  40b34f:	pop    esp
  40b350:	loopne 0x40b3a7
  40b352:	xor    al,0x6e
  40b354:	jmp    0x40b38b
  40b356:	mov    ch,0x42
  40b358:	and    DWORD PTR [esi-0x7d],edx
  40b35b:	mov    esp,DWORD PTR [eax-0x71]
  40b35e:	loopne 0x40b320
  40b360:	aad    0x87
  40b362:	fprem  
  40b364:	push   esp
  40b365:	bound  esp,QWORD PTR [esi]
  40b367:	pop    edx
  40b368:	aaa    
  40b369:	fsub   st,st(0)
  40b36b:	push   ss
  40b36c:	sti    
  40b36d:	inc    esp
  40b36e:	dec    ebp
  40b36f:	mov    ebx,0xf4ae5954
  40b374:	sbb    al,bl
  40b376:	hlt    
  40b377:	add    ch,dh
  40b379:	je     0x40b3b4
  40b37b:	retf   0x6b6e
  40b37e:	outs   dx,BYTE PTR gs:[esi]
  40b380:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b381:	inc    DWORD PTR [edi+0x23b4bac4]
  40b387:	daa    
  40b388:	loope  0x40b3c0
  40b38a:	mov    edx,0x2817938
  40b38f:	mov    cl,0x24
  40b391:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b392:	push   ecx
  40b393:	jmp    0x92a2788c
  40b398:	int    0x72
  40b39a:	fmul   DWORD PTR [ecx-0x703e43ba]
  40b3a0:	jae    0x40b38c
  40b3a2:	dec    esi
  40b3a3:	test   eax,0x2ec6dcd9
  40b3a8:	fcomp  DWORD PTR [eax-0x3a403641]
  40b3ae:	clc    
  40b3af:	adc    eax,0x8db7e9b
  40b3b4:	fnstenv [esp+ecx*1-0x684ec6b8]
  40b3bb:	dec    ecx
  40b3bc:	add    ch,dl
  40b3be:	or     edx,DWORD PTR [edi]
  40b3c0:	cmc    
  40b3c1:	dec    edx
  40b3c2:	add    DWORD PTR [eax-0x11295a1d],eax
  40b3c8:	pushf  
  40b3c9:	inc    ebx
  40b3ca:	arpl   WORD PTR [eax+0x4991e20],ax
  40b3d0:	aam    0xec
  40b3d2:	out    0x2d,al
  40b3d4:	frstor [edi+ecx*2]
  40b3d7:	lds    esp,FWORD PTR [edx+0x7b834ba2]
  40b3dd:	inc    eax
  40b3de:	js     0x40b3a1
  40b3e0:	mov    eax,0x6dc13d04
  40b3e5:	xchg   edi,eax
  40b3e6:	cs ss test eax,0xb31c70d0
  40b3ed:	cmp    cl,BYTE PTR [edx+0x31f8bbb9]
  40b3f3:	adc    al,0xbe
  40b3f5:	jno    0x40b381
  40b3f7:	mov    dh,0xca
  40b3f9:	jae    0x40b3a4
  40b3fb:	jl     0x40b3ab
  40b3fd:	xacquire xchg DWORD PTR [ebx+0x1a],ecx
  40b401:	mov    eax,ds:0x7911b191
  40b406:	hlt    
  40b407:	or     dh,BYTE PTR [ecx-0x11]
  40b40a:	ins    DWORD PTR es:[edi],dx
  40b40b:	test   BYTE PTR [ebx+0x41],bh
  40b40e:	xchg   ah,cl
  40b410:	adc    eax,DWORD PTR [edx-0x62]
  40b413:	jnp    0x40b475
  40b415:	pop    eax
  40b416:	or     ecx,DWORD PTR [edi]
  40b418:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b419:	sub    DWORD PTR [esi+0x21ef98ab],ebx
  40b41f:	fiadd  WORD PTR ds:0x533d4e2
  40b425:	mov    WORD PTR [ecx+ecx*8-0x9615b7c],cs
  40b42c:	adc    eax,edx
  40b42e:	(bad)  
  40b42f:	add    eax,0x8fce31b7
  40b434:	adc    ecx,esi
  40b436:	xchg   edx,eax
  40b437:	mov    esi,ecx
  40b439:	stos   DWORD PTR es:[edi],eax
  40b43a:	jnp    0x40b418
  40b43c:	ret    
  40b43d:	js     0x40b443
  40b43f:	inc    edi
  40b440:	pop    ecx
  40b441:	push   ecx
  40b442:	call   0xdb47:0x30277444
  40b449:	fs call 0x3acf:0x9175b481
  40b451:	iret   
  40b452:	pushf  
  40b453:	xchg   edx,eax
  40b454:	(bad)  
  40b455:	std    
  40b456:	outs   dx,DWORD PTR ds:[esi]
  40b457:	sub    BYTE PTR [edx+0x5f],ch
  40b45a:	add    ebp,0xffffffc1
  40b45d:	and    eax,0x8de7cabf
  40b462:	adc    bh,al
  40b464:	sbb    DWORD PTR [ecx+0x27],esi
  40b467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b468:	fsub   QWORD PTR [edi+0xcf412f5]
  40b46e:	dec    edx
  40b46f:	xchg   si,ax
  40b471:	mov    esp,0x6a80768
  40b476:	push   esi
  40b477:	jnp    0x40b465
  40b479:	mov    cl,0x9c
  40b47b:	clc    
  40b47c:	cs mov cl,0xa2
  40b47f:	dec    eax
  40b480:	mov    cl,0xa9
  40b482:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b483:	iret   
  40b484:	aas    
  40b485:	jns    0x40b449
  40b487:	fist   WORD PTR [ebx+0x6b]
  40b48a:	mov    ds:0xef51da99,al
  40b48f:	sbb    DWORD PTR [edx],esi
  40b491:	inc    ebp
  40b492:	xchg   edx,eax
  40b493:	aas    
  40b494:	ret    
  40b495:	leave  
  40b496:	sar    BYTE PTR [esp+edx*8],1
  40b499:	jle    0x40b446
  40b49b:	xor    DWORD PTR [edi],esp
  40b49d:	push   0x2d
  40b49f:	mov    ebx,0xc1684fe
  40b4a4:	repz pop esi
  40b4a6:	cmc    
  40b4a7:	mov    esi,0x5a18fe42
  40b4ac:	outs   dx,DWORD PTR ds:[esi]
  40b4ad:	loopne 0x40b512
  40b4af:	sbb    al,0x9f
  40b4b1:	daa    
  40b4b2:	sar    DWORD PTR [edx+ebx*2],0x96
  40b4b6:	inc    edi
  40b4b7:	test   eax,0x39e1ee02
  40b4bc:	pop    es
  40b4bd:	cmp    DWORD PTR [ebx+0x49c86561],ebp
  40b4c3:	inc    ch
  40b4c5:	cdq    
  40b4c6:	(bad)  
  40b4c7:	gs ins BYTE PTR es:[edi],dx
  40b4c9:	mov    cl,0xf8
  40b4cb:	ja     0x40b529
  40b4cd:	int3   
  40b4ce:	mov    dl,0x19
  40b4d0:	jbe    0x40b537
  40b4d2:	ror    BYTE PTR [edi+0x28],0x63
  40b4d6:	mov    ch,0xbe
  40b4d8:	dec    ebx
  40b4d9:	push   ebp
  40b4da:	fldcw  WORD PTR [esi]
  40b4dc:	cwde   
  40b4dd:	gs jne 0x40b48a
  40b4e0:	xor    ax,0xdab9
  40b4e4:	imul   ebp,DWORD PTR [edi+0x118baeee],0x9bde21f9
  40b4ee:	test   eax,0xa517ebc7
  40b4f3:	sahf   
  40b4f4:	mov    al,0xc
  40b4f6:	loop   0x40b4d5
  40b4f8:	and    BYTE PTR [ecx+esi*4],al
  40b4fb:	out    dx,al
  40b4fc:	ja     0x40b546
  40b4fe:	inc    edi
  40b4ff:	cmp    al,BYTE PTR [esi+ebx*1+0x4e]
  40b503:	cmp    eax,0x624769bf
  40b508:	inc    ebp
  40b509:	inc    ecx
  40b50a:	call   0x936e:0x715acd25
  40b511:	(bad)  
  40b512:	sti    
  40b513:	imul   esp,eax,0x363cf0f0
  40b519:	aad    0xf4
  40b51b:	not    DWORD PTR [ecx+0x1d]
  40b51e:	and    BYTE PTR [edi],ch
  40b520:	sbb    dl,bh
  40b522:	cmc    
  40b523:	xor    al,0x64
  40b525:	adc    eax,0x5d2fa3f1
  40b52a:	arpl   WORD PTR [ecx+0x60],dx
  40b52d:	sub    BYTE PTR [edx-0x1f],cl
  40b530:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b531:	cmp    ebp,esi
  40b533:	dec    eax
  40b534:	jbe    0x40b5a8
  40b536:	sub    eax,0x7ecedf08
  40b53b:	or     BYTE PTR [esi],ch
  40b53d:	xor    eax,0xe31bcceb
  40b542:	sub    eax,ebx
  40b544:	mov    bl,0xe7
  40b546:	sbb    ecx,DWORD PTR [ebp+0x1d]
  40b549:	cli    
  40b54a:	loopne 0x40b535
  40b54c:	jle    0x40b504
  40b54e:	stos   BYTE PTR es:[edi],al
  40b54f:	adc    edi,DWORD PTR [ebx-0x4c]
  40b552:	out    dx,eax
  40b553:	jae    0x40b5a1
  40b555:	fimul  WORD PTR [ebp+0x15]
  40b558:	fucomp st(3)
  40b55a:	and    al,0x2f
  40b55c:	fwait
  40b55d:	je     0x40b534
  40b55f:	fbstp  TBYTE PTR [ebp+0x52789338]
  40b565:	test   cl,bh
  40b567:	out    0x36,eax
  40b569:	jns    0x40b599
  40b56b:	cmp    ah,BYTE PTR [ecx-0x62]
  40b56e:	test   eax,0x8bcc74f1
  40b573:	sbb    al,0xdd
  40b575:	push   esi
  40b576:	cmp    DWORD PTR [esi+0xc],eax
  40b579:	repz inc edi
  40b57b:	loope  0x40b58e
  40b57d:	sub    eax,0x9e10810e
  40b582:	xchg   esi,eax
  40b583:	jae    0x40b5db
  40b585:	ja     0x40b5e8
  40b587:	jge    0x40b56e
  40b589:	xchg   esp,eax
  40b58a:	(bad)  
  40b58c:	dec    ebp
  40b58d:	out    dx,al
  40b58e:	fwait
  40b58f:	shr    DWORD PTR [edx+0x17e58555],1
  40b595:	pop    ss
  40b596:	pop    ebx
  40b597:	mov    cl,0x65
  40b599:	js     0x40b5fd
  40b59b:	hlt    
  40b59c:	ret    0xc0b8
  40b59f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5a0:	or     DWORD PTR [ebx-0x5f],0x43
  40b5a4:	adc    edx,DWORD PTR [ebx-0x71]
  40b5a7:	sbb    ah,dh
  40b5a9:	cmp    al,0x7d
  40b5ab:	fdiv   DWORD PTR [ebx+esi*8]
  40b5ae:	adc    al,0x98
  40b5b0:	and    dl,BYTE PTR [ecx+0x66]
  40b5b3:	es clc 
  40b5b5:	das    
  40b5b6:	ins    DWORD PTR es:[edi],dx
  40b5b7:	cdq    
  40b5b8:	lods   eax,DWORD PTR ds:[esi]
  40b5b9:	dec    eax
  40b5ba:	mov    eax,ds:0xe98b1ee5
  40b5bf:	push   ebx
  40b5c0:	adc    al,0xae
  40b5c2:	sub    DWORD PTR [eax],0x8e484d96
  40b5c8:	cmp    BYTE PTR [edx-0x11],dl
  40b5cb:	mov    bl,0x95
  40b5cd:	popa   
  40b5ce:	sti    
  40b5cf:	xor    ch,BYTE PTR [ebx]
  40b5d1:	adc    eax,0x47b2393c
  40b5d6:	int3   
  40b5d7:	jbe    0x40b60c
  40b5d9:	jp     0x40b5ce
  40b5db:	(bad)  
  40b5dc:	(bad)  
  40b5dd:	xlat   BYTE PTR ds:[ebx]
  40b5de:	outs   dx,BYTE PTR ds:[esi]
  40b5df:	inc    esi
  40b5e0:	icebp  
  40b5e1:	sub    ch,bh
  40b5e3:	cs je  0x40b658
  40b5e6:	shr    BYTE PTR [edi+0x64],0xa5
  40b5ea:	mov    cl,0xd
  40b5ec:	popf   
  40b5ed:	push   ds
  40b5ee:	and    al,0x8c
  40b5f0:	into   
  40b5f1:	mov    al,0x18
  40b5f3:	lods   al,BYTE PTR ds:[esi]
  40b5f4:	and    BYTE PTR [edi],ah
  40b5f6:	adc    esi,DWORD PTR [ebp+edi*2+0x3ad2652]
  40b5fd:	repnz pop ax
  40b601:	aas    
  40b602:	cmpps  xmm2,XMMWORD PTR [ecx],0xe1
  40b606:	jae    0x40b663
  40b608:	mov    ch,0x4e
  40b60a:	jle    0x40b593
  40b60c:	aaa    
  40b60d:	fst    DWORD PTR [esi+0x2007efee]
  40b613:	inc    eax
  40b614:	jns    0x40b66a
  40b616:	mov    esi,0x7cfdada7
  40b61b:	push   cs
  40b61c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b61d:	clc    
  40b61e:	test   BYTE PTR [ebx+0x78],dl
  40b621:	jb     0x40b5ae
  40b623:	pop    ebp
  40b624:	sbb    eax,0x23ac99b1
  40b629:	cld    
  40b62a:	pusha  
  40b62b:	(bad)  
  40b62c:	in     eax,dx
  40b62d:	xchg   esp,eax
  40b62e:	adc    ebx,DWORD PTR [eax+0x13aec299]
  40b634:	xchg   esp,eax
  40b635:	or     bh,BYTE PTR [esi]
  40b637:	outs   dx,DWORD PTR ds:[esi]
  40b638:	mov    eax,0x6ce419db
  40b63d:	dec    ebx
  40b63e:	push   edx
  40b63f:	push   edx
  40b640:	mov    cl,0x9f
  40b642:	jmp    0x40b60f
  40b644:	in     eax,0x4e
  40b646:	xchg   esi,eax
  40b647:	jns    0x40b65a
  40b649:	jecxz  0x40b5d2
  40b64b:	pop    edi
  40b64c:	and    al,0xe1
  40b64e:	cwde   
  40b64f:	ins    DWORD PTR es:[edi],dx
  40b650:	pop    edx
  40b651:	pop    ebx
  40b652:	pop    ebp
  40b653:	fild   DWORD PTR [esi-0x4b]
  40b656:	fs cmp ah,0x94
  40b65a:	push   edi
  40b65b:	aaa    
  40b65c:	mov    bl,0x87
  40b65e:	sti    
  40b65f:	clc    
  40b660:	je     0x40b6dd
  40b662:	cmp    eax,DWORD PTR [edx+0x159a10d7]
  40b668:	pop    eax
  40b669:	push   esp
  40b66a:	hlt    
  40b66b:	or     DWORD PTR [ecx-0x6b],ecx
  40b66e:	mov    ds:0x9a82586e,eax
  40b673:	fisubr DWORD PTR [ebp+0x47]
  40b676:	and    al,BYTE PTR [edx+0x3b539779]
  40b67c:	mov    ebp,0x480b923
  40b681:	jg     0x40b633
  40b683:	sbb    ecx,DWORD PTR [esi+0x47]
  40b686:	leave  
  40b687:	mov    esp,DWORD PTR [eax+0x4cc1ecb2]
  40b68d:	call   0x41399786
  40b692:	icebp  
  40b693:	shr    BYTE PTR [ecx-0x55],1
  40b696:	jg     0x40b68c
  40b698:	jo     0x40b694
  40b69a:	frstor [esp+esi*4]
  40b69d:	hlt    
  40b69e:	ins    BYTE PTR es:[edi],dx
  40b69f:	mov    eax,ds:0x8b1bc7a9
  40b6a4:	in     al,0x91
  40b6a6:	lahf   
  40b6a7:	fs scas al,BYTE PTR es:[edi]
  40b6a9:	pop    esi
  40b6aa:	cwde   
  40b6ab:	pop    ecx
  40b6ac:	sbb    BYTE PTR [ebx-0x7e8e06e7],bl
  40b6b2:	and    DWORD PTR [edx],eax
  40b6b4:	mov    ebx,0x31af784c
  40b6b9:	sahf   
  40b6ba:	lds    eax,FWORD PTR [edx+0x2556aa0f]
  40b6c0:	or     DWORD PTR [ecx-0x1c],esp
  40b6c3:	and    edx,0xffffffa0
  40b6c6:	push   ss
  40b6c7:	bound  ecx,QWORD PTR [ebx+0x3c]
  40b6ca:	or     DWORD PTR [ebp+0x53891349],esp
  40b6d0:	inc    eax
  40b6d1:	aam    0xd
  40b6d3:	aas    
  40b6d4:	adc    edx,DWORD PTR [esi]
  40b6d6:	mov    cl,0xb2
  40b6d8:	xchg   esp,eax
  40b6d9:	shr    BYTE PTR [eax-0xe],cl
  40b6dc:	neg    DWORD PTR [ecx+0x4eef2440]
  40b6e2:	push   edi
  40b6e3:	jb     0x40b705
  40b6e5:	mov    cl,0x8
  40b6e7:	sar    BYTE PTR [edx],1
  40b6e9:	and    BYTE PTR [ecx-0x77056d18],ch
  40b6ef:	push   ds
  40b6f0:	repz pop ecx
  40b6f2:	jl     0x40b6e6
  40b6f4:	int    0x61
  40b6f6:	popf   
  40b6f7:	jecxz  0x40b6c0
  40b6f9:	mov    dl,0x9a
  40b6fb:	stos   BYTE PTR es:[edi],al
  40b6fc:	mov    ds:0xc9357964,eax
  40b701:	xchg   ecx,eax
  40b702:	xchg   ebp,eax
  40b703:	adc    eax,0x4a53364c
  40b708:	test   eax,0x7caaa288
  40b70d:	cmp    BYTE PTR [ebx],dl
  40b70f:	xlat   BYTE PTR ds:[ebx]
  40b710:	jo     0x40b697
  40b712:	push   ebx
  40b713:	not    BYTE PTR [esi+0x5c]
  40b716:	cmp    ch,bl
  40b718:	div    DWORD PTR [ebx]
  40b71a:	jne    0x40b6f5
  40b71c:	mov    edi,0x7a08195f
  40b721:	mov    dh,0x29
  40b723:	sbb    DWORD PTR [ebx+0x58],edi
  40b726:	stos   BYTE PTR es:[edi],al
  40b727:	data16 jp 0x40b75d
  40b72a:	add    eax,0xb9d7e1f8
  40b72f:	lock adc eax,0xcf5d9acf
  40b735:	outs   dx,BYTE PTR ds:[esi]
  40b736:	enter  0x604d,0x63
  40b73a:	sub    DWORD PTR fs:[ebp-0x294e2f76],0x10
  40b742:	dec    ecx
  40b743:	fxam   
  40b745:	jnp    0x40b79a
  40b747:	jmp    0x27f0:0x9edfbb5c
  40b74e:	int    0x1d
  40b750:	cmp    DWORD PTR [edi+0x32],ebx
  40b753:	fidivr WORD PTR [ebp-0x55]
  40b756:	add    DWORD PTR [eax*4-0x4756f94a],eax
  40b75d:	lfs    edx,FWORD PTR [ecx-0x414ae846]
  40b764:	push   eax
  40b765:	out    0xa5,al
  40b767:	mov    esi,0x6896d10a
  40b76c:	ja     0x40b787
  40b76e:	dec    esi
  40b76f:	sub    dh,BYTE PTR [esi]
  40b771:	mov    WORD PTR [ecx-0x66837ba5],gs
  40b777:	or     DWORD PTR [ebp-0x54],esp
  40b77a:	push   edi
  40b77b:	fdiv   DWORD PTR [esi]
  40b77d:	outs   dx,DWORD PTR ds:[esi]
  40b77e:	in     al,0x57
  40b780:	daa    
  40b781:	cmc    
  40b782:	jbe    0x40b7e4
  40b784:	dec    ebp
  40b785:	les    ebx,FWORD PTR [esi+0x36]
  40b788:	inc    edi
  40b789:	cwde   
  40b78a:	jbe    0x40b76a
  40b78c:	sbb    al,0xf2
  40b78e:	popf   
  40b78f:	cld    
  40b790:	into   
  40b791:	repz add bl,BYTE PTR [edx]
  40b794:	outs   dx,BYTE PTR ds:[esi]
  40b795:	xor    DWORD PTR ds:0xf2198efc,0x54
  40b79c:	popf   
  40b79d:	adc    eax,0xb34be7f8
  40b7a2:	dec    DWORD PTR [edi-0x43d9597e]
  40b7a8:	mov    ah,0x9b
  40b7aa:	mov    bl,0xfa
  40b7ac:	lea    ebp,[edx-0x7f]
  40b7af:	les    esp,FWORD PTR [ebx+esi*2]
  40b7b2:	fistp  QWORD PTR [edx-0x6e]
  40b7b5:	lahf   
  40b7b6:	icebp  
  40b7b7:	imul   edx,DWORD PTR [esi-0x58],0x2a
  40b7bb:	loope  0x40b794
  40b7bd:	lds    eax,FWORD PTR [ebp+edi*2-0x41]
  40b7c1:	je     0x40b7ef
  40b7c3:	mov    edx,0x7396cfd
  40b7c8:	push   DWORD PTR es:[edx]
  40b7cb:	(bad)  [eax]
  40b7cd:	in     eax,dx
  40b7ce:	aam    0xec
  40b7d0:	xchg   edx,eax
  40b7d1:	ins    DWORD PTR es:[edi],dx
  40b7d2:	or     cl,BYTE PTR ds:0x594f58ca
  40b7d8:	bound  eax,QWORD PTR [ebx]
  40b7da:	jecxz  0x40b845
  40b7dc:	stos   BYTE PTR es:[edi],al
  40b7dd:	loop   0x40b806
  40b7df:	test   eax,0xfc850d61
  40b7e4:	lea    ebx,[edi]
  40b7e6:	loop   0x40b7bd
  40b7e8:	dec    esp
  40b7e9:	test   eax,0x2557f0bf
  40b7ee:	(bad)  
  40b7ef:	rol    DWORD PTR [ecx+0x25466ea4],cl
  40b7f5:	nop
  40b7f6:	sbb    ch,BYTE PTR [edi-0x18]
  40b7f9:	pop    ds
  40b7fa:	sub    dh,BYTE PTR [ecx+0x7d]
  40b7fd:	mov    eax,0x40d41ed7
  40b802:	das    
  40b803:	clc    
  40b804:	and    DWORD PTR [ebx+0x19ebf72c],ebp
  40b80a:	sbb    ebx,eax
  40b80c:	mov    ds:0x22999e5f,eax
  40b811:	jne    0x40b82b
  40b813:	mov    gs,WORD PTR [eax+eax*8]
  40b816:	les    eax,FWORD PTR [esi+0x8]
  40b819:	xchg   ebx,eax
  40b81a:	jmp    0x40b865
  40b81c:	adc    dl,BYTE PTR [eax+0x64c885b8]
  40b822:	xor    al,0x9f
  40b824:	(bad)  
  40b825:	out    0x96,al
  40b827:	jae    0x40b821
  40b829:	pop    edx
  40b82a:	push   esi
  40b82b:	xchg   ecx,eax
  40b82c:	pop    eax
  40b82d:	or     al,0x1f
  40b82f:	inc    ebx
  40b830:	es xchg edi,eax
  40b832:	mov    ecx,0xed0f8ad2
  40b837:	xor    eax,DWORD PTR ds:0x709080e7
  40b83d:	xchg   ebx,eax
  40b83e:	adc    eax,0xfd4f8e69
  40b843:	adc    ecx,DWORD PTR [edx-0x72]
  40b846:	daa    
  40b847:	push   0xc84c9841
  40b84c:	sub    eax,0x380567e
  40b851:	fnsave [ecx+0x4]
  40b854:	retf   0x66a6
  40b857:	cmc    
  40b858:	call   0x875d986b
  40b85d:	in     al,0xbe
  40b85f:	mov    ebx,DWORD PTR [ebx+0x4]
  40b862:	xchg   esp,eax
  40b863:	adc    al,0xf3
  40b865:	ret    0xf2d6
  40b868:	lock out dx,eax
  40b86a:	out    dx,al
  40b86b:	sbb    cl,BYTE PTR [edi-0x24]
  40b86e:	adc    al,0xfb
  40b870:	rcl    DWORD PTR [eax],cl
  40b872:	test   BYTE PTR [esi],bh
  40b874:	rcl    DWORD PTR [ebx+0x2c4f3193],1
  40b87a:	xchg   ebp,eax
  40b87b:	jg     0x40b810
  40b87d:	cmp    ch,BYTE PTR [ebx-0x12]
  40b880:	pop    ebx
  40b881:	test   BYTE PTR [edi-0x4c],0xd2
  40b885:	xor    BYTE PTR [edi],ch
  40b887:	cwde   
  40b888:	jg     0x40b864
  40b88a:	jbe    0x40b896
  40b88c:	lods   al,BYTE PTR ds:[esi]
  40b88d:	ror    ebp,cl
  40b88f:	cld    
  40b890:	stc    
  40b891:	push   0x76
  40b893:	mov    BYTE PTR [esi+0x37],ch
  40b896:	lods   al,BYTE PTR ds:[esi]
  40b897:	add    eax,0xca4e9397
  40b89c:	mov    dl,0x12
  40b89e:	leave  
  40b89f:	xor    BYTE PTR [esi-0xa],bl
  40b8a2:	xor    edx,ebp
  40b8a4:	mov    gs,WORD PTR [esi-0x259ad992]
  40b8aa:	pop    eax
  40b8ab:	lahf   
  40b8ac:	mov    eax,ds:0xf97e1da9
  40b8b1:	aaa    
  40b8b2:	in     eax,dx
  40b8b3:	loope  0x40b873
  40b8b5:	mov    cl,0xc6
  40b8b7:	xchg   BYTE PTR [ecx-0x3f6e749d],al
  40b8bd:	popa   
  40b8be:	dec    ecx
  40b8bf:	pcmpeqb mm0,QWORD PTR [ecx-0x55]
  40b8c3:	push   0x65
  40b8c5:	xor    edi,DWORD PTR [ebx-0x571ba3a9]
  40b8cb:	push   ebx
  40b8cc:	jne    0x40b883
  40b8ce:	xchg   ebx,eax
  40b8cf:	xor    BYTE PTR [esi],bl
  40b8d1:	bound  ebp,QWORD PTR [edi+0x2bea75b9]
  40b8d7:	fld    TBYTE PTR [ecx+0x18aff796]
  40b8dd:	pop    ds
  40b8de:	jg     0x40b8b9
  40b8e0:	add    ch,BYTE PTR [eax-0x528b2c8a]
  40b8e6:	sti    
  40b8e7:	aam    0xbd
  40b8e9:	jnp    0x40b8cf
  40b8eb:	push   0xf018ac8c
  40b8f0:	rol    BYTE PTR [edi-0xa05442e],0x57
  40b8f7:	sahf   
  40b8f8:	popf   
  40b8f9:	pusha  
  40b8fa:	(bad)  
  40b8fb:	adc    ebp,DWORD PTR [edi]
  40b8fd:	push   ebx
  40b8fe:	mov    esp,0xe44785d9
  40b903:	lahf   
  40b904:	mov    ds:0x5828a4f9,al
  40b909:	pop    esi
  40b90a:	xor    ecx,ebx
  40b90c:	push   ds
  40b90d:	icebp  
  40b90e:	adc    eax,0x79410282
  40b913:	xchg   esi,eax
  40b914:	mov    BYTE PTR [eax+0x5dab861],bl
  40b91a:	xor    DWORD PTR [ebx],ebx
  40b91c:	aad    0x5c
  40b91e:	mov    cl,0x80
  40b920:	jmp    0xc60541c2
  40b925:	or     ebp,eax
  40b927:	jno    0x40b96e
  40b929:	test   eax,0x4e177edc
  40b92e:	ins    BYTE PTR es:[edi],dx
  40b92f:	push   ds
  40b930:	ins    DWORD PTR es:[edi],dx
  40b931:	inc    esp
  40b932:	fs push cs
  40b934:	xor    esp,DWORD PTR [edi-0x52]
  40b937:	adc    edi,DWORD PTR [esi]
  40b939:	xor    DWORD PTR [ebp+0x7a],edi
  40b93c:	mov    esp,0x17148da7
  40b941:	in     eax,0xc0
  40b943:	sahf   
  40b944:	aam    0x66
  40b946:	jmp    0x1a75:0x772a07ac
  40b94d:	xchg   ebx,eax
  40b94e:	xchg   esi,eax
  40b94f:	pop    ebx
  40b950:	aas    
  40b951:	pop    edi
  40b952:	popa   
  40b953:	xlat   BYTE PTR ds:[ebx]
  40b954:	imul   BYTE PTR [edx-0x8]
  40b957:	js     0x40b94f
  40b959:	js     0x40b917
  40b95b:	push   edx
  40b95c:	je     0x40b996
  40b95e:	dec    ebx
  40b95f:	dec    ebx
  40b960:	jmp    0x40b964
  40b962:	xor    ch,bh
  40b964:	scas   eax,DWORD PTR es:[edi]
  40b965:	push   esp
  40b966:	cwde   
  40b967:	mov    dh,BYTE PTR [edx+0x65]
  40b96a:	rcl    bl,0x3b
  40b96d:	push   eax
  40b96e:	push   es
  40b96f:	jo     0x40b952
  40b971:	mov    eax,0x82959b62
  40b976:	outs   dx,BYTE PTR ds:[esi]
  40b977:	leave  
  40b978:	out    0xaa,eax
  40b97a:	sub    ebp,DWORD PTR [ebp-0x5b01c3fc]
  40b980:	scas   al,BYTE PTR es:[edi]
  40b981:	cdq    
  40b982:	inc    esi
  40b983:	test   eax,0x58178f76
  40b988:	sub    eax,0x70415321
  40b98d:	jae    0x40b9df
  40b98f:	je     0x40b962
  40b991:	pop    es
  40b992:	and    bh,BYTE PTR [ecx]
  40b994:	stos   BYTE PTR es:[edi],al
  40b995:	pop    ds
  40b996:	enter  0xeb84,0xde
  40b99a:	ins    DWORD PTR es:[edi],dx
  40b99b:	loope  0x40b9f2
  40b99d:	dec    esp
  40b99e:	es out dx,eax
  40b9a0:	inc    esp
  40b9a1:	pop    ebx
  40b9a2:	arpl   si,di
  40b9a4:	pop    ecx
  40b9a5:	push   ds
  40b9a6:	sbb    ebp,DWORD PTR [edx+ebx*2+0x78e3c4cc]
  40b9ad:	add    DWORD PTR [ecx],esp
  40b9af:	mov    eax,0x3e2cfe44
  40b9b4:	pop    esp
  40b9b5:	enter  0x8623,0x44
  40b9b9:	popf   
  40b9ba:	pop    ebx
  40b9bb:	mov    al,ds:0x6a1573c7
  40b9c0:	adc    ebp,DWORD PTR [edi+0x5da46a53]
  40b9c6:	or     al,0x2f
  40b9c8:	mov    al,ds:0xfb6c957a
  40b9cd:	jp     0x40b956
  40b9cf:	lock pushf 
  40b9d1:	fadd   DWORD PTR [eax]
  40b9d3:	sub    DWORD PTR [edi+0x752410cd],edi
  40b9d9:	add    cl,BYTE PTR [ebx]
  40b9db:	sbb    BYTE PTR [esi+0x21],ah
  40b9de:	icebp  
  40b9df:	or     eax,0x2676161b
  40b9e4:	ja     0x40b9b7
  40b9e6:	pop    eax
  40b9e7:	lea    ebx,[esi+0x51]
  40b9ea:	adc    eax,0xb0e7ca32
  40b9ef:	shl    DWORD PTR ds:0x7b3377d,1
  40b9f5:	fadd   QWORD PTR [edi]
  40b9f7:	int3   
  40b9f8:	dec    edi
  40b9f9:	repnz inc esi
  40b9fb:	mov    bh,0x2a
  40b9fd:	sbb    DWORD PTR [ecx+0x1d],ebp
  40ba00:	xor    DWORD PTR [ebx],ecx
  40ba02:	data16 cmp BYTE PTR [ebp+0x5eca9312],cl
  40ba09:	in     al,dx
  40ba0a:	test   al,0xc4
  40ba0c:	pop    esp
  40ba0d:	mov    WORD PTR [ebp+0x5d],?
  40ba10:	fadd   DWORD PTR [ebx-0x8]
  40ba13:	shr    DWORD PTR [esi+ebx*1-0x66],0x80
  40ba18:	xchg   ebx,eax
  40ba19:	pop    es
  40ba1a:	test   ebx,ebp
  40ba1c:	daa    
  40ba1d:	(bad)  
  40ba1e:	aas    
  40ba1f:	fwait
  40ba20:	pop    es
  40ba21:	imul   eax,DWORD PTR ds:0x89618378,0x63
  40ba28:	mov    ah,0x3b
  40ba2a:	(bad)  
  40ba2b:	fldenv [ebx-0x7a3ee6f2]
  40ba31:	out    0x4c,al
  40ba33:	inc    ebp
  40ba34:	xchg   ecx,eax
  40ba35:	and    DWORD PTR [esi+0x12987677],eax
  40ba3b:	in     al,0x51
  40ba3d:	dec    esi
  40ba3e:	jns    0x40ba54
  40ba40:	out    dx,al
  40ba41:	pop    ds
  40ba42:	cmp    eax,0xb9401023
  40ba47:	js     0x40ba4d
  40ba49:	or     BYTE PTR [edi+0x6b],dl
  40ba4c:	ss dec edi
  40ba4e:	or     BYTE PTR [eax+0xe],bl
  40ba51:	test   eax,0x490b47cc
  40ba56:	mov    al,ds:0xcf056a01
  40ba5b:	xchg   ebp,eax
  40ba5c:	lds    edi,FWORD PTR [edx+ebp*1-0x6e43f73d]
  40ba63:	mov    BYTE PTR [ebx-0x757f79a9],dh
  40ba69:	lods   eax,DWORD PTR ds:[esi]
  40ba6a:	dec    esp
  40ba6b:	jno    0x40baeb
  40ba6d:	cmp    bh,0x93
  40ba70:	inc    edx
  40ba71:	jns    0x40bab6
  40ba73:	cli    
  40ba74:	test   al,0x37
  40ba76:	inc    edi
  40ba77:	sti    
  40ba78:	retf   
  40ba79:	and    al,0xe0
  40ba7b:	fistp  QWORD PTR [edi-0x5b]
  40ba7e:	retf   
  40ba7f:	(bad)  
  40ba80:	ficomp WORD PTR [ebx+0x39]
  40ba83:	arpl   WORD PTR [si+0xf4a],bx
  40ba88:	retw   0x2a1f
  40ba8c:	inc    esp
  40ba8d:	or     dl,BYTE PTR [edi]
  40ba8f:	pop    ebp
  40ba90:	daa    
  40ba91:	ret    0x4e55
  40ba94:	cmp    BYTE PTR [ebx-0x7c],al
  40ba97:	inc    ecx
  40ba98:	xor    BYTE PTR [ebx-0x43],cl
  40ba9b:	jb     0x40bafa
  40ba9d:	jmp    0xa0d131f0
  40baa2:	xchg   edx,eax
  40baa3:	push   ebx
  40baa4:	ror    DWORD PTR [ebx+0x1b25558],1
  40baaa:	je     0x40ba4c
  40baac:	pop    edi
  40baad:	outs   dx,WORD PTR ds:[esi]
  40baaf:	pop    ecx
  40bab0:	xor    esi,DWORD PTR [eax+0x79322bad]
  40bab6:	(bad)  [ebx+0x30]
  40bab9:	adc    al,BYTE PTR [esi-0x73]
  40babc:	mov    esi,0x676df683
  40bac1:	cmp    eax,0xb8e1692b
  40bac6:	neg    edx
  40bac8:	xor    eax,0x9630a4e
  40bacd:	mov    ds,WORD PTR [edx]
  40bacf:	jmp    0xaa34:0xb00f8d66
  40bad6:	fnstcw WORD PTR [edi+ebp*8]
  40bad9:	mov    DWORD PTR [eax],ebp
  40badb:	sbb    BYTE PTR ds:[ecx+0x663d80a5],bh
  40bae2:	sub    edi,DWORD PTR [esi]
  40bae4:	hlt    
  40bae5:	jecxz  0x40bad8
  40bae7:	pop    ebp
  40bae8:	and    bl,ah
  40baea:	push   edx
  40baeb:	xchg   esi,eax
  40baec:	jno    0x40bb5d
  40baee:	xchg   ecx,eax
  40baef:	jl     0x40baed
  40baf1:	mov    al,ds:0xd225448e
  40baf6:	ror    esp,0xd8
  40baf9:	xchg   DWORD PTR [ecx+0x731cc01],edi
  40baff:	add    al,0xa6
  40bb01:	and    eax,0x7b0d8584
  40bb06:	daa    
  40bb07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb08:	adc    al,0x41
  40bb0a:	ror    BYTE PTR [ebp-0x5d80ddc0],cl
  40bb10:	out    0x81,al
  40bb12:	dec    edx
  40bb13:	dec    esi
  40bb14:	in     al,dx
  40bb15:	stos   BYTE PTR es:[edi],al
  40bb16:	mov    DWORD PTR [ebp+0x22ee9f51],eax
  40bb1c:	add    eax,0x37b62fc5
  40bb21:	frstor [ebx-0x19db8f3]
  40bb27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb28:	bswap  ecx
  40bb2a:	jmp    0x93bd104d
  40bb2f:	stos   BYTE PTR es:[edi],al
  40bb30:	jnp    0x40bafb
  40bb32:	push   eax
  40bb33:	push   edx
  40bb34:	inc    esi
  40bb35:	fabs   
  40bb37:	xlat   BYTE PTR ds:[ebx]
  40bb38:	inc    ebp
  40bb39:	xor    eax,0xe3066854
  40bb3e:	test   DWORD PTR [edx+0x2f],esi
  40bb41:	sub    edx,esp
  40bb43:	out    dx,eax
  40bb44:	rol    ebx,0x11
  40bb47:	pop    ss
  40bb48:	cmc    
  40bb49:	push   esp
  40bb4a:	cmp    BYTE PTR [edx-0x702a6f1a],bl
  40bb50:	je     0x40bbce
  40bb52:	mov    dh,0x30
  40bb54:	ins    DWORD PTR es:[edi],dx
  40bb55:	and    eax,0xad537e73
  40bb5a:	aad    0xd4
  40bb5c:	and    dl,dh
  40bb5e:	hlt    
  40bb5f:	sub    dh,ah
  40bb61:	xchg   esi,eax
  40bb62:	jl     0x40bba0
  40bb64:	int    0xd3
  40bb66:	cwde   
  40bb67:	aaa    
  40bb68:	add    ebp,0xffffffd2
  40bb6b:	mov    edx,0x399a9342
  40bb70:	mov    bh,0x1c
  40bb72:	hlt    
  40bb73:	dec    ebp
  40bb74:	mov    ebx,0xe91441f0
  40bb79:	xchg   esp,eax
  40bb7a:	cs jle 0x40bb67
  40bb7d:	mov    dh,0x44
  40bb7f:	xor    esi,ebp
  40bb81:	adc    DWORD PTR [ecx],edi
  40bb83:	mov    eax,ds:0x635f6638
  40bb88:	pop    ecx
  40bb89:	xchg   ebp,eax
  40bb8a:	pop    dx
  40bb8c:	leave  
  40bb8d:	push   ecx
  40bb8e:	mov    esp,0x14fd562
  40bb93:	or     al,0xe4
  40bb95:	xchg   edx,eax
  40bb96:	fst    QWORD PTR [edi+0xf7cee21]
  40bb9c:	xor    cl,BYTE PTR [ebx-0x6ca12321]
  40bba2:	xor    bh,BYTE PTR [ebx]
  40bba4:	call   0xfe44:0xdfeeb2ee
  40bbab:	ds push esp
  40bbad:	and    eax,0xb48f3cd4
  40bbb2:	fbstp  TBYTE PTR [ecx-0x18873cc9]
  40bbb8:	ins    DWORD PTR es:[edi],dx
  40bbb9:	jmp    FWORD PTR [ebx-0x2ac97218]
  40bbbf:	push   ebp
  40bbc0:	dec    ebx
  40bbc1:	in     eax,dx
  40bbc2:	dec    ecx
  40bbc3:	les    ebx,FWORD PTR [edx+0x1e]
  40bbc6:	rcr    bl,1
  40bbc8:	xchg   edx,eax
  40bbc9:	pop    ebp
  40bbca:	hlt    
  40bbcb:	jecxz  0x40bb99
  40bbcd:	pop    ss
  40bbce:	dec    ecx
  40bbcf:	and    eax,0x1a24fdfb
  40bbd4:	or     cl,BYTE PTR [ebp-0xe]
  40bbd7:	out    0xfa,al
  40bbd9:	mov    esp,DWORD PTR [ecx-0x9]
  40bbdc:	and    cl,BYTE PTR [edx+0x2758710e]
  40bbe2:	jns    0x40bc5e
  40bbe4:	les    edi,FWORD PTR [ebp-0x5fa42cb6]
  40bbea:	sub    ah,BYTE PTR [esi+edx*2]
  40bbed:	ret    
  40bbee:	shl    esi,1
  40bbf0:	jmp    0x87c0:0x2623ec50
  40bbf7:	cmp    DWORD PTR [esi-0x60],edi
  40bbfa:	fimul  DWORD PTR [edi-0x67625f7]
  40bc00:	add    al,0xa6
  40bc02:	popa   
  40bc03:	imul   esp,esi,0x66fffd42
  40bc09:	and    dl,BYTE PTR gs:[edi-0x70ae726d]
  40bc10:	call   0xbe3549b8
  40bc15:	or     BYTE PTR [ebp+0x28],ah
  40bc18:	adc    al,0x74
  40bc1a:	mov    cl,0x64
  40bc1c:	cmc    
  40bc1d:	pop    ebx
  40bc1e:	call   0x836b57e8
  40bc23:	mov    ebx,ebx
  40bc25:	fld    DWORD PTR [esi+0x20cdfce4]
  40bc2b:	fisttp QWORD PTR [edi]
  40bc2d:	push   es
  40bc2e:	shr    BYTE PTR ds:0xe90ac3e1,cl
  40bc34:	push   0xa78efb04
  40bc39:	(bad)  
  40bc3a:	or     ebp,eax
  40bc3c:	and    bl,ch
  40bc3e:	or     al,0x10
  40bc40:	mov    ecx,0x835a9ee9
  40bc45:	push   edx
  40bc46:	loop   0x40bbdb
  40bc48:	dec    esi
  40bc49:	in     al,dx
  40bc4a:	scas   eax,DWORD PTR es:[edi]
  40bc4b:	mov    cl,0x8
  40bc4d:	mov    WORD PTR [edi],cs
  40bc4f:	jb     0x40bc9d
  40bc51:	cmc    
  40bc52:	fnstsw WORD PTR [esi]
  40bc54:	pop    ds
  40bc55:	cmc    
  40bc56:	popf   
  40bc57:	xor    BYTE PTR [edx-0x68],al
  40bc5a:	sub    ecx,DWORD PTR [esi-0x2b]
  40bc5d:	adc    DWORD PTR ds:0x6428a639,eax
  40bc63:	cmp    dh,BYTE PTR [edx]
  40bc65:	in     eax,dx
  40bc66:	fnstenv [edi-0x47]
  40bc69:	add    DWORD PTR [esi-0x19],esi
  40bc6c:	sub    esi,DWORD PTR [edi-0x6bb3c48]
  40bc72:	and    BYTE PTR [ebx+0x40a71351],bl
  40bc78:	in     al,0x80
  40bc7a:	pop    eax
  40bc7b:	call   eax
  40bc7d:	lahf   
  40bc7e:	cli    
  40bc7f:	dec    esi
  40bc80:	stc    
  40bc81:	xchg   ebx,eax
  40bc82:	and    eax,DWORD PTR [edi+0x78a07856]
  40bc88:	aas    
  40bc89:	xchg   esp,eax
  40bc8a:	adc    al,0xaa
  40bc8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc8d:	nop
  40bc8e:	push   ebx
  40bc8f:	inc    esp
  40bc90:	and    DWORD PTR [eax],ecx
  40bc92:	inc    eax
  40bc93:	retf   0xc724
  40bc96:	pop    ecx
  40bc97:	jb     0x40bd07
  40bc99:	loopne 0x40bc81
  40bc9b:	(bad)  
  40bc9d:	cmp    cl,BYTE PTR [edx-0x44]
  40bca0:	loop   0x40bc84
  40bca2:	push   eax
  40bca3:	mov    eax,0xc985ed4
  40bca8:	lock adc al,0xec
  40bcab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcac:	push   eax
  40bcad:	test   al,0xa4
  40bcaf:	inc    eax
  40bcb0:	call   0x38cd:0x8ad97b94
  40bcb7:	xchg   esp,eax
  40bcb8:	mov    al,0x59
  40bcba:	fucomi st,st(3)
  40bcbc:	ret    
  40bcbd:	adc    al,0x5e
  40bcbf:	inc    edi
  40bcc0:	push   edx
  40bcc1:	int3   
  40bcc2:	xor    ebx,DWORD PTR [esi-0x5f636f82]
  40bcc8:	cmp    bh,BYTE PTR [edi-0x61]
  40bccb:	data16 adc bh,BYTE PTR [edx-0x1ff477b9]
  40bcd2:	sub    esp,ebx
  40bcd4:	lods   al,BYTE PTR ds:[esi]
  40bcd5:	in     eax,dx
  40bcd6:	xchg   ebp,eax
  40bcd7:	jo     0x40bd3d
  40bcd9:	mov    ah,0xa4
  40bcdb:	pop    eax
  40bcdc:	jae    0x40bca9
  40bcde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcdf:	mov    DWORD PTR [edx],edx
  40bce1:	pusha  
  40bce2:	push   ebx
  40bce3:	sub    eax,0x5673ed90
  40bce8:	xchg   esi,eax
  40bce9:	jno    0x40bc98
  40bceb:	fisttp DWORD PTR [eax+0x39]
  40bcee:	fadd   QWORD PTR [eax-0x7a]
  40bcf1:	iret   
  40bcf2:	mov    cl,0x1a
  40bcf4:	or     eax,0xa621cb68
  40bcf9:	nop
  40bcfa:	sbb    ah,cl
  40bcfc:	cmp    BYTE PTR [ebp+0xd],dl
  40bcff:	jo     0x40bce6
  40bd01:	xor    eax,esp
  40bd03:	das    
  40bd04:	ja     0x40bcaa
  40bd06:	mov    DWORD PTR [ebx-0x43],ebx
  40bd09:	clc    
  40bd0a:	jg     0x40bd30
  40bd0c:	out    0x50,eax
  40bd0e:	push   ds
  40bd0f:	sub    DWORD PTR [eax],0x4f22ff5b
  40bd15:	mov    ds:0xe0fcdf07,al
  40bd1a:	test   eax,0x165ebfb3
  40bd1f:	jne    0x40bd24
  40bd21:	(bad)  
  40bd23:	jnp    0x40bcf6
  40bd25:	scas   al,BYTE PTR es:[edi]
  40bd26:	std    
  40bd27:	sbb    al,0x93
  40bd29:	sub    esi,DWORD PTR [esi]
  40bd2b:	into   
  40bd2c:	sub    DWORD PTR [ecx-0x531bbb65],esi
  40bd32:	pop    edi
  40bd33:	jb     0x40bd95
  40bd35:	add    eax,0x9165837a
  40bd3a:	rcl    dl,0xc
  40bd3d:	sbb    eax,0xb8af11df
  40bd42:	add    DWORD PTR [esi+0x1c],edi
  40bd45:	retf   0xc5df
  40bd48:	inc    eax
  40bd49:	adc    DWORD PTR [edi+0x3975020c],eax
  40bd4f:	mov    ds:0xac191793,eax
  40bd54:	add    al,0x0
  40bd56:	pop    ss
  40bd57:	add    BYTE PTR [ecx],al
  40bd59:	data16 mov cl,0x42
  40bd5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd5d:	out    dx,al
  40bd5e:	(bad)  
  40bd60:	mov    dl,0xe7
  40bd62:	inc    eax
  40bd63:	sub    al,BYTE PTR [ecx]
  40bd65:	jmp    0x40bd77
  40bd67:	test   DWORD PTR [edi+esi*4-0x3a32c401],esp
  40bd6e:	pop    ds
  40bd6f:	adc    eax,0x1548076d
  40bd74:	ins    BYTE PTR es:[edi],dx
  40bd75:	sahf   
  40bd76:	sbb    bh,BYTE PTR [ebx+ecx*2+0xfe1d2d4]
  40bd7d:	pop    edx
  40bd7e:	inc    ecx
  40bd7f:	loope  0x40bddc
  40bd81:	add    DWORD PTR [edi],eax
  40bd83:	popf   
  40bd84:	push   ss
  40bd85:	mov    edi,0x893a3411
  40bd8a:	lods   al,BYTE PTR ds:[esi]
  40bd8b:	sub    al,0xe3
  40bd8d:	popf   
  40bd8e:	cmp    DWORD PTR [ebp+eiz*4+0x6f037e03],ebx
  40bd95:	mov    bl,0x65
  40bd97:	push   ebp
  40bd98:	inc    ebx
  40bd99:	jmp    0x490f46f4
  40bd9e:	dec    ebp
  40bd9f:	push   edx
  40bda0:	sbb    eax,0xfa6ad56b
  40bda5:	inc    eax
  40bda6:	mov    bh,0x8d
  40bda8:	int3   
  40bda9:	inc    ebp
  40bdaa:	cmp    eax,DWORD PTR [edx+edx*2-0x3e1e7ed8]
  40bdb1:	push   edi
  40bdb2:	lahf   
  40bdb3:	bound  ecx,QWORD PTR [edx+0x3b]
  40bdb6:	repz lahf 
  40bdb8:	popf   
  40bdb9:	mov    ebp,0xdbd4f3f0
  40bdbe:	and    dh,BYTE PTR [ecx]
  40bdc0:	jo     0x40bd50
  40bdc2:	call   0xb13e2dfb
  40bdc7:	mov    ah,0xef
  40bdc9:	lea    eax,[eax-0xce21bf8]
  40bdcf:	mov    esp,0xdd3ada10
  40bdd4:	cmp    edx,DWORD PTR [ebx-0x12]
  40bdd7:	push   edi
  40bdd8:	stc    
  40bdd9:	out    dx,al
  40bdda:	mov    ecx,0xe4ffc1b8
  40bddf:	rcl    esp,cl
  40bde1:	mov    BYTE PTR [edi],bl
  40bde3:	sub    BYTE PTR [ebx],0x23
  40bde6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bde7:	jbe    0x40bdab
  40bde9:	or     eax,0x75e35859
  40bdee:	sahf   
  40bdef:	add    bh,0xfa
  40bdf2:	aas    
  40bdf3:	imul   edx,ebp,0x50
  40bdf6:	push   edi
  40bdf7:	mov    WORD PTR [eax+0x3b],gs
  40bdfa:	and    ebx,DWORD PTR [edx]
  40bdfc:	cld    
  40bdfd:	xchg   ecx,eax
  40bdfe:	imul   BYTE PTR [eax+0x13]
  40be01:	sbb    dh,bh
  40be03:	dec    esi
  40be04:	mov    bh,0x9d
  40be06:	xchg   edx,eax
  40be07:	or     eax,0x2dfa35cc
  40be0c:	jecxz  0x40be42
  40be0e:	stos   DWORD PTR es:[edi],eax
  40be0f:	sahf   
  40be10:	aad    0x44
  40be12:	dec    edi
  40be13:	mov    esi,0xf6aa0e86
  40be18:	test   al,0x59
  40be1a:	push   ecx
  40be1b:	out    0x1a,eax
  40be1d:	imul   DWORD PTR [edi]
  40be1f:	inc    ecx
  40be20:	jmp    0x94fa16d9
  40be25:	cmp    BYTE PTR [eax-0x402c23a],bh
  40be2b:	imul   edi,DWORD PTR [eax],0xe2977c2a
  40be31:	scas   al,BYTE PTR es:[edi]
  40be32:	push   eax
  40be33:	scas   al,BYTE PTR es:[edi]
  40be34:	ret    
  40be35:	ret    0xe9dd
  40be38:	(bad)  
  40be3a:	dec    eax
  40be3b:	sbb    BYTE PTR [edx-0x39],bh
  40be3e:	das    
  40be3f:	pop    esp
  40be40:	aaa    
  40be41:	fimul  WORD PTR [edx-0x78fb453a]
  40be47:	pop    esi
  40be48:	mov    edx,0x2af35fe1
  40be4d:	sub    BYTE PTR [edi-0x25],bh
  40be50:	sub    eax,0x5ea79b45
  40be55:	or     eax,0x2dc6480c
  40be5a:	inc    ecx
  40be5b:	ds sub eax,0x32191a79
  40be61:	imul   ebp,edi,0x6d
  40be64:	pop    ds
  40be65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be66:	(bad)  
  40be68:	dec    esi
  40be69:	cs dec esi
  40be6b:	push   ecx
  40be6c:	jno    0x40be9c
  40be6e:	push   es
  40be6f:	nop
  40be70:	xor    ch,BYTE PTR ds:0x4b84fbd5
  40be76:	and    al,cl
  40be78:	mov    edx,0xdc12c75a
  40be7d:	retf   
  40be7e:	mov    WORD PTR [edi],ds
  40be80:	(bad)  
  40be81:	lds    esi,FWORD PTR [eax]
  40be83:	ret    
  40be84:	in     al,dx
  40be85:	push   edi
  40be86:	push   eax
  40be87:	mov    ds:0xf6a9fbbd,eax
  40be8c:	stc    
  40be8d:	mov    bl,0x1a
  40be8f:	sar    ch,cl
  40be91:	or     eax,0xadff7df5
  40be96:	int3   
  40be97:	dec    esp
  40be98:	aas    
  40be99:	sub    al,0xcd
  40be9b:	ret    
  40be9c:	sbb    esi,DWORD PTR [esp+ebx*4]
  40be9f:	pop    edi
  40bea0:	pop    esp
  40bea1:	mov    esi,ebx
  40bea3:	sub    BYTE PTR [esi],0x4d
  40bea6:	cmp    al,0xdb
  40bea8:	jno    0x40beeb
  40beaa:	push   edi
  40beab:	jb     0x40be48
  40bead:	xor    al,0xc7
  40beaf:	mov    al,ds:0xbd93f7e7
  40beb4:	into   
  40beb5:	scas   al,BYTE PTR es:[edi]
  40beb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40beb7:	mov    ebx,0xe0eb373
  40bebc:	idiv   ebp
  40bebe:	retf   0x291e
  40bec1:	call   0xad23:0x83fedd05
  40bec8:	xchg   ebp,ebx
  40beca:	adc    al,BYTE PTR ds:0xcccf
  40becf:	mov    bl,0xff
  40bed1:	dec    ecx
  40bed2:	jno    0x40bf1e
  40bed4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bed5:	je     0x40be9d
  40bed7:	inc    ebp
  40bed8:	(bad)  
  40bed9:	icebp  
  40beda:	shl    BYTE PTR [esp+eax*8+0x363b02a6],0x88
  40bee2:	std    
  40bee3:	sub    al,0x64
  40bee5:	add    al,0xc0
  40bee7:	and    bh,cl
  40bee9:	or     eax,0x28ec0438
  40beee:	inc    edx
  40beef:	add    al,ch
  40bef1:	scas   eax,DWORD PTR es:[edi]
  40bef2:	cmp    ebp,esi
  40bef4:	and    eax,ebp
  40bef6:	inc    edx
  40bef7:	cmp    eax,0x1fdef407
  40befc:	mov    ch,0x40
  40befe:	xchg   edx,eax
  40beff:	jmp    0xf00e:0x91d91800
  40bf06:	mov    bh,0x6a
  40bf08:	or     dl,BYTE PTR [edi+0x70099d84]
  40bf0e:	imul   eax,DWORD PTR [edx],0xffffffb2
  40bf11:	scas   al,BYTE PTR es:[edi]
  40bf12:	cmp    DWORD PTR fs:[edx+0x6257c109],eax
  40bf19:	sbb    eax,0xef16b522
  40bf1e:	lahf   
  40bf1f:	nop
  40bf20:	jnp    0x40bf35
  40bf22:	xor    BYTE PTR [ebp+0x4a953c78],ah
  40bf28:	add    ch,BYTE PTR [esi]
  40bf2a:	sbb    ecx,eax
  40bf2c:	dec    eax
  40bf2d:	pop    es
  40bf2e:	out    0x28,eax
  40bf30:	cmp    al,0x35
  40bf32:	mov    dl,0xba
  40bf34:	cmc    
  40bf35:	adc    al,0xb1
  40bf37:	icebp  
  40bf38:	sahf   
  40bf39:	cmp    DWORD PTR [edi+ebx*4+0x6b63f5b8],esi
  40bf40:	cdq    
  40bf41:	loop   0x40bf11
  40bf43:	mov    ebx,0x35158c0b
  40bf48:	or     BYTE PTR [eax+0x527bc406],al
  40bf4e:	pop    es
  40bf4f:	xor    DWORD PTR [esi-0x2c783e8e],0x1764a6b7
  40bf59:	cmp    al,0xba
  40bf5b:	cld    
  40bf5c:	je     0x40bf36
  40bf5e:	dec    edx
  40bf5f:	outs   dx,BYTE PTR ds:[esi]
  40bf60:	cmp    eax,0x5a273579
  40bf65:	mov    ds:0x1b5827d3,eax
  40bf6a:	stos   DWORD PTR es:[edi],eax
  40bf6b:	hlt    
  40bf6c:	fadd   DWORD PTR [ecx+0x46725b69]
  40bf72:	clc    
  40bf73:	adc    eax,0x272e68e2
  40bf78:	cld    
  40bf79:	fsubr  QWORD PTR [edi]
  40bf7b:	xor    esp,ebx
  40bf7d:	and    edi,edx
  40bf7f:	daa    
  40bf80:	test   eax,0x9d29c22b
  40bf85:	ffree  st(5)
  40bf87:	lds    ecx,FWORD PTR [ebp+0x2d]
  40bf8a:	aaa    
  40bf8b:	daa    
  40bf8c:	jne    0x40bf42
  40bf8e:	jmp    0x40bfd9
  40bf90:	lahf   
  40bf91:	xchg   edi,eax
  40bf92:	xchg   DWORD PTR [esi-0x38],ebx
  40bf95:	or     esp,DWORD PTR [edi+0x5b]
  40bf98:	mov    dl,0xc2
  40bf9a:	mov    fs,WORD PTR [esi+esi*4]
  40bf9d:	test   al,0x52
  40bf9f:	repz fwait
  40bfa1:	and    esi,DWORD PTR [edx-0xb1447ab]
  40bfa7:	mul    BYTE PTR [edx]
  40bfa9:	inc    esi
  40bfaa:	push   edx
  40bfab:	fcomp  QWORD PTR [edx-0x70b8c5ca]
  40bfb1:	ja     0x40bf48
  40bfb3:	add    BYTE PTR [ebx-0x24],dl
  40bfb6:	call   0xababbdf0
  40bfbb:	inc    esi
  40bfbc:	ins    DWORD PTR es:[edi],dx
  40bfbd:	pop    es
  40bfbe:	adc    bl,BYTE PTR [ebp+0x69da63d8]
  40bfc4:	mov    cl,0xc1
  40bfc6:	adc    BYTE PTR [esp+esi*2-0x70],ah
  40bfca:	aas    
  40bfcb:	sub    ecx,edi
  40bfcd:	icebp  
  40bfce:	push   0x4a2dfec3
  40bfd3:	push   ss
  40bfd4:	ins    DWORD PTR es:[edi],dx
  40bfd5:	das    
  40bfd6:	xor    eax,0x27e7f0f5
  40bfdb:	add    ebp,DWORD PTR [edi+ebp*8-0x72]
  40bfdf:	pop    ebx
  40bfe0:	xchg   ecx,eax
  40bfe1:	jmp    0x40bfea
  40bfe3:	push   cs
  40bfe4:	xchg   esp,eax
  40bfe5:	fmul   QWORD PTR [esi]
  40bfe7:	or     al,0xa9
  40bfea:	js     0x40bfed
  40bfec:	xchg   DWORD PTR [esi-0x8],ebp
  40bfef:	push   ss
  40bff0:	outs   dx,BYTE PTR ds:[esi]
  40bff1:	jae    0x40c02b
  40bff3:	pop    ebp
  40bff4:	sub    ebx,edx
  40bff6:	retf   0xe428
  40bff9:	adc    al,0x6f
  40bffb:	int    0x21
  40bffd:	rcr    BYTE PTR [ecx+0xaec3b4b],0x73
  40c004:	pop    es
  40c005:	repnz xor al,bl
  40c008:	cdq    
  40c009:	inc    ecx
  40c00a:	xchg   ecx,eax
  40c00b:	cli    
  40c00c:	adc    al,0xf1
  40c00e:	repnz cs hlt 
  40c011:	xor    BYTE PTR [edi-0x5451e35d],al
  40c017:	rcl    esp,cl
  40c019:	popa   
  40c01a:	out    0xd6,al
  40c01c:	stc    
  40c01d:	aaa    
  40c01e:	mov    edi,0xadd27492
  40c023:	cmp    DWORD PTR [ebp+0x109e48d],ecx
  40c029:	sub    edi,esi
  40c02b:	(bad)  
  40c02c:	push   ecx
  40c02d:	xor    DWORD PTR [ebx+0x30ad18e2],ebx
  40c033:	adc    eax,0x99167822
  40c038:	fadd   st(2),st
  40c03a:	jae    0x40bfe6
  40c03c:	pop    edi
  40c03d:	xor    BYTE PTR [eax],bh
  40c03f:	dec    ecx
  40c040:	or     BYTE PTR [ebp+0x1c26a37],0x14
  40c047:	inc    edx
  40c048:	repz call 0x6fd7:0xba218971
  40c050:	hlt    
  40c051:	mov    BYTE PTR [edx-0x198d631b],cl
  40c057:	fisttp DWORD PTR [ebx-0x2565caac]
  40c05d:	mov    ebx,0xaea478c7
  40c062:	aas    
  40c063:	cli    
  40c064:	fdivr  DWORD PTR [edi]
  40c066:	popf   
  40c067:	outs   dx,BYTE PTR ds:[esi]
  40c068:	add    eax,0xac234924
  40c06d:	arpl   WORD PTR ds:0x5f8806f6,sp
  40c073:	push   ss
  40c074:	aas    
  40c075:	cli    
  40c076:	xchg   esi,eax
  40c077:	arpl   WORD PTR [edi+0x6688e2b2],dx
  40c07d:	xor    ah,ah
  40c07f:	jge    0x40c09e
  40c081:	pop    ebp
  40c082:	jle    0x40c056
  40c084:	push   ebp
  40c085:	dec    ebp
  40c086:	sub    cl,BYTE PTR [eax+0x10a1c6d6]
  40c08c:	imul   ecx,DWORD PTR [edi+0x1a],0x1d
  40c090:	leave  
  40c091:	push   esp
  40c092:	xor    ch,al
  40c094:	sbb    BYTE PTR [ebx],0xa9
  40c097:	and    ch,dl
  40c099:	cli    
  40c09a:	add    esp,eax
  40c09c:	stos   DWORD PTR es:[edi],eax
  40c09d:	scas   eax,DWORD PTR es:[edi]
  40c09e:	shl    DWORD PTR [ebp+0x1b],cl
  40c0a1:	enter  0xd92,0xe
  40c0a5:	add    BYTE PTR [edx-0x34],0x95
  40c0a9:	xchg   ebx,eax
  40c0aa:	(bad)  
  40c0ac:	fsubrp st(7),st
  40c0ae:	aam    0x6e
  40c0b0:	xor    al,0xc7
  40c0b2:	xchg   edi,eax
  40c0b3:	add    esp,DWORD PTR [eax+0x64]
  40c0b6:	(bad)  
  40c0b7:	lods   al,BYTE PTR ds:[esi]
  40c0b8:	scas   eax,DWORD PTR es:[edi]
  40c0b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0ba:	jmp    0x40c0ea
  40c0bc:	mov    esi,0x8fdd76d1
  40c0c1:	daa    
  40c0c2:	leave  
  40c0c3:	jecxz  0x40c12c
  40c0c5:	icebp  
  40c0c6:	jecxz  0x40c056
  40c0c8:	mov    esi,0x81a07364
  40c0cd:	xchg   ebx,eax
  40c0ce:	test   eax,0xd32c4c54
  40c0d3:	mov    edi,0xb27c967a
  40c0d8:	sbb    BYTE PTR ds:0x3ba4dc76,dh
  40c0de:	in     eax,0xc4
  40c0e0:	inc    esp
  40c0e1:	mov    al,ds:0xcc15b16c
  40c0e6:	mov    ebx,0xb682f8b8
  40c0eb:	or     bl,ch
  40c0ed:	pusha  
  40c0ee:	dec    DWORD PTR gs:[ebx-0x1a6ef586]
  40c0f5:	ffree  st(2)
  40c0f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0f8:	push   DWORD PTR [esi+0x519e866b]
  40c0fe:	xchg   DWORD PTR [ecx-0x38],ebx
  40c101:	sub    DWORD PTR ds:0xb878ec4e,ecx
  40c107:	sahf   
  40c108:	xor    DWORD PTR [ecx+0x14070df6],eax
  40c10e:	(bad)  [ebx-0x7c]
  40c111:	pminub mm0,QWORD PTR [esi-0x2d]
  40c115:	out    dx,al
  40c116:	and    dl,BYTE PTR [esi-0x53]
  40c119:	imul   ebx,DWORD PTR [ecx],0xa62663f5
  40c11f:	pop    eax
  40c120:	sbb    dh,dl
  40c122:	cmp    BYTE PTR [edi*8-0x7e4090da],ah
  40c129:	ror    DWORD PTR [edi+0x14],cl
  40c12c:	test   al,0x2d
  40c12e:	mov    dl,0x50
  40c130:	xor    DWORD PTR [edx],eax
  40c132:	xor    eax,0x2e172c70
  40c137:	popf   
  40c138:	daa    
  40c139:	adc    al,0xb9
  40c13b:	out    dx,al
  40c13c:	fidivr WORD PTR [esi]
  40c13e:	scas   al,BYTE PTR es:[edi]
  40c13f:	test   al,0x57
  40c141:	or     DWORD PTR [eax],0xfffffff7
  40c144:	jmp    0x7a7b:0x76cbef75
  40c14b:	dec    ecx
  40c14c:	or     eax,edx
  40c14e:	sub    eax,0xc30ca824
  40c153:	sub    esp,DWORD PTR [ebp+0xf1b54e0]
  40c159:	fiadd  WORD PTR [edi]
  40c15b:	out    dx,eax
  40c15c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c15d:	sub    DWORD PTR ds:0xc285ba26,edx
  40c163:	(bad)  
  40c165:	pop    ebx
  40c166:	push   ecx
  40c167:	in     al,dx
  40c168:	and    BYTE PTR [edi-0x4b],bl
  40c16b:	mov    eax,ds:0x65557d08
  40c170:	mov    DWORD PTR [ecx-0x37],ecx
  40c173:	ret    
  40c174:	jns    0x40c198
  40c176:	mov    bh,0x5e
  40c178:	mov    esi,0x2ff900fb
  40c17d:	inc    ebp
  40c17e:	and    dl,dh
  40c180:	or     dh,BYTE PTR [esp+eiz*2]
  40c183:	(bad)  
  40c184:	mov    edx,fs
  40c186:	imul   esp,eax,0x66
  40c189:	sub    ebp,DWORD PTR ds:0xf48a6233
  40c18f:	push   ebx
  40c190:	iret   
  40c191:	or     dl,BYTE PTR [esi]
  40c193:	test   edi,edi
  40c195:	adc    cl,BYTE PTR [ebx+0x58baad1d]
  40c19b:	xor    bh,0xd8
  40c19e:	jne    0x40c13d
  40c1a0:	(bad)
  40c1a3:	push   eax
  40c1a4:	inc    ebx
  40c1a5:	fstp   QWORD PTR [eax+0x41c2dbb0]
  40c1ab:	data16 (bad) 
  40c1ad:	jnp    0x40c21e
  40c1af:	push   ebx
  40c1b0:	aaa    
  40c1b1:	test   edi,ebp
  40c1b3:	push   esp
  40c1b4:	mov    ah,0xf8
  40c1b6:	and    dl,bl
  40c1b8:	xor    eax,0x7940eb6e
  40c1bd:	test   BYTE PTR [esi-0x546dc7b3],ch
  40c1c3:	and    dh,BYTE PTR [ecx+0x5e]
  40c1c6:	jae    0x40c20e
  40c1c8:	arpl   WORD PTR [ecx-0x40],di
  40c1cb:	push   0xffffffb7
  40c1cd:	pop    edx
  40c1ce:	pop    esi
  40c1cf:	mov    ds:0xbb7e2f58,al
  40c1d4:	jno    0x40c24f
  40c1d6:	pop    ss
  40c1d7:	imul   esi,eax,0x10b99720
  40c1dd:	jnp    0x40c203
  40c1df:	pop    edx
  40c1e0:	xlat   BYTE PTR ds:[ebx]
  40c1e1:	cmp    al,0xe
  40c1e3:	mov    edi,0xb70f3bba
  40c1e8:	pusha  
  40c1e9:	sub    ch,0x47
  40c1ec:	dec    ebp
  40c1ed:	imul   ebp,ebx,0xffffffc3
  40c1f0:	mov    gs,WORD PTR [ecx+ebx*1-0xd]
  40c1f4:	ins    BYTE PTR es:[edi],dx
  40c1f5:	shr    bh,1
  40c1f7:	pop    ss
  40c1f8:	ffreep st(4)
  40c1fa:	or     ch,BYTE PTR [eax]
  40c1fc:	lds    esp,FWORD PTR ds:0xb2fa624e
  40c202:	(bad)  
  40c204:	or     edi,DWORD PTR [esi]
  40c206:	xchg   ecx,eax
  40c207:	xchg   esp,eax
  40c208:	adc    edi,DWORD PTR [edi+0x73b18b9]
  40c20e:	stc    
  40c20f:	retf   
  40c210:	or     bh,bh
  40c212:	mov    ebx,0x7e790b2
  40c217:	pop    ds
  40c218:	sub    eax,0x39b45fe
  40c21d:	xlat   BYTE PTR ds:[ebx]
  40c21e:	push   esi
  40c21f:	jl     0x40c1a6
  40c221:	or     esp,DWORD PTR [ebp+0x11fc5b4f]
  40c227:	mov    edx,0x65a505e4
  40c22c:	mul    BYTE PTR ds:0xa69ced19
  40c232:	push   ss
  40c233:	sub    bh,BYTE PTR [ecx]
  40c235:	mov    ds:0xebc6a4f8,eax
  40c23a:	add    DWORD PTR [esi+0x56],esi
  40c23d:	(bad)  
  40c23e:	xchg   ebp,eax
  40c23f:	mov    esi,0x41482ad5
  40c244:	clc    
  40c245:	inc    esi
  40c246:	addr16 xchg ebx,eax
  40c248:	jmp    0xb0bdef6a
  40c24d:	or     al,0xa
  40c24f:	xor    ch,ch
  40c251:	not    BYTE PTR [eax]
  40c253:	cmp    eax,0x6a2538ca
  40c258:	inc    ebx
  40c259:	adc    BYTE PTR ss:[ebx+0x38],dl
  40c25d:	icebp  
  40c25e:	push   ebp
  40c25f:	jns    0x40c269
  40c261:	pop    es
  40c262:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c263:	sbb    al,BYTE PTR [ebp+0x5]
  40c266:	jecxz  0x40c2d7
  40c268:	pop    ds
  40c269:	aam    0xa7
  40c26b:	lock inc ebx
  40c26d:	xchg   edi,esp
  40c26f:	or     eax,0xc08dda7f
  40c274:	out    dx,eax
  40c275:	mov    BYTE PTR [ebx],dl
  40c277:	push   ss
  40c278:	retf   0x64de
  40c27b:	int3   
  40c27c:	mov    edi,0xc3427045
  40c281:	lds    esi,FWORD PTR [ebx+0x35b60c93]
  40c287:	(bad)  
  40c289:	mov    esi,0x3252baed
  40c28e:	sbb    al,BYTE PTR [edx+ecx*4+0x67]
  40c292:	sub    eax,0xa0d91f1e
  40c297:	adc    cl,BYTE PTR ds:0x53b757d8
  40c29d:	push   es
  40c29e:	outs   dx,BYTE PTR ds:[esi]
  40c29f:	push   ecx
  40c2a0:	ficom  WORD PTR [edi+0x7f]
  40c2a3:	pop    ax
  40c2a5:	lods   al,BYTE PTR ds:[esi]
  40c2a6:	lods   eax,DWORD PTR ds:[esi]
  40c2a7:	loope  0x40c2c4
  40c2a9:	ret    0x7005
  40c2ac:	test   DWORD PTR [ebp+ecx*2+0x26],esi
  40c2b0:	or     BYTE PTR es:[edx],ah
  40c2b3:	mov    ebx,DWORD PTR [edi-0x54]
  40c2b6:	stos   DWORD PTR es:[edi],eax
  40c2b7:	shr    ebp,1
  40c2b9:	shl    al,cl
  40c2bb:	add    ecx,DWORD PTR [edx]
  40c2bd:	cmp    edi,DWORD PTR [ecx+0x1a]
  40c2c0:	cli    
  40c2c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2c2:	enter  0x7c48,0x3e
  40c2c6:	lahf   
  40c2c7:	mov    edi,0x74b8c59a
  40c2cc:	xor    BYTE PTR [ebx+0x46cbf0bd],al
  40c2d2:	outs   dx,BYTE PTR ds:[esi]
  40c2d3:	into   
  40c2d4:	in     eax,dx
  40c2d5:	sub    BYTE PTR [ecx+ecx*8+0xa],dl
  40c2d9:	jbe    0x40c29d
  40c2db:	mov    ds:0x2004048d,al
  40c2e0:	mov    edi,DWORD PTR [ecx]
  40c2e2:	ss pop edx
  40c2e4:	sbb    esp,ebp
  40c2e6:	enter  0x278,0x7b
  40c2ea:	mov    ds:0x7ce167c4,al
  40c2ef:	add    DWORD PTR [ebp-0xf],eax
  40c2f2:	inc    esi
  40c2f3:	cdq    
  40c2f4:	enter  0xe0ee,0xaf
  40c2f8:	out    dx,eax
  40c2f9:	repnz imul esp,DWORD PTR [ebp+0x42],0x6f
  40c2fe:	pop    esp
  40c2ff:	(bad)  
  40c300:	jecxz  0x40c33c
  40c302:	imul   edx,DWORD PTR [ecx-0x50433730],0x17
  40c309:	je     0x40c31c
  40c30b:	jno    0x40c311
  40c30d:	je     0x40c2e1
  40c30f:	pop    edx
  40c310:	gs dec ebp
  40c312:	sub    eax,0xe40a3b9d
  40c317:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c318:	lods   eax,DWORD PTR ds:[esi]
  40c319:	or     edx,edx
  40c31b:	cmp    al,0xa4
  40c31d:	test   WORD PTR [esi],sp
  40c320:	test   ch,cl
  40c322:	jg     0x40c2de
  40c324:	repz jge 0x40c351
  40c327:	imul   ebp,ebp,0x9ea3ece7
  40c32d:	mov    bl,0xe5
  40c32f:	xchg   edi,eax
  40c330:	push   ecx
  40c331:	shl    BYTE PTR [eax+0x3d],0x4
  40c335:	scas   al,BYTE PTR es:[edi]
  40c336:	mov    DWORD PTR [ebx],esi
  40c338:	js     0x40c361
  40c33a:	cmp    al,0xf3
  40c33c:	mov    bl,0xad
  40c33e:	aam    0x5c
  40c340:	stos   DWORD PTR es:[edi],eax
  40c341:	lea    ebp,[ecx-0x42]
  40c344:	bound  esi,QWORD PTR [edx]
  40c346:	aad    0xb0
  40c348:	xchg   edx,eax
  40c349:	sub    esi,DWORD PTR [eax-0x48a98d97]
  40c34f:	cmc    
  40c350:	out    dx,al
  40c351:	cmp    edx,DWORD PTR [edi]
  40c353:	cmp    eax,0xc381490b
  40c358:	(bad)  
  40c359:	mov    edi,0x7799a8e
  40c35e:	jne    0x40c30e
  40c360:	sbb    al,0xdb
  40c362:	scas   eax,DWORD PTR es:[edi]
  40c363:	daa    
  40c364:	or     al,0x6b
  40c366:	(bad)  
  40c367:	(bad)  
  40c369:	aaa    
  40c36a:	(bad)  
  40c36c:	xor    cl,BYTE PTR [edx+0x6d274e0f]
  40c372:	inc    eax
  40c373:	sub    BYTE PTR [edx+0x50],ch
  40c376:	jmp    0x40c36c
  40c378:	int    0x95
  40c37a:	sbb    ch,BYTE PTR [eax]
  40c37c:	dec    esp
  40c37d:	stos   DWORD PTR es:[edi],eax
  40c37e:	pop    ds
  40c37f:	ins    BYTE PTR es:[edi],dx
  40c380:	mov    ds:0xfb3fc842,al
  40c385:	mov    ah,0x78
  40c387:	bound  ebx,QWORD PTR [eax+0x7f]
  40c38a:	inc    eax
  40c38b:	test   DWORD PTR [edx],esp
  40c38d:	sub    BYTE PTR [ecx],ch
  40c38f:	mov    dl,0xb4
  40c391:	sbb    eax,0x6687635f
  40c396:	adc    DWORD PTR [ecx],ebp
  40c398:	repnz (bad) 
  40c39b:	jo     0x40c3d9
  40c39d:	retf   
  40c39e:	imul   edi,DWORD PTR [ecx+0x70],0xffffffdb
  40c3a2:	js     0x40c34a
  40c3a4:	shr    BYTE PTR [eax],1
  40c3a6:	pop    ebx
  40c3a7:	add    ebx,edx
  40c3a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3aa:	ja     0x40c3e5
  40c3ac:	(bad)  
  40c3af:	mov    al,ds:0x73ca40e7
  40c3b4:	and    cl,bh
  40c3b6:	pop    ebp
  40c3b8:	sub    DWORD PTR [edi-0x2d],eax
  40c3bb:	inc    esp
  40c3bc:	lds    esp,FWORD PTR [edx+0x7078c9e]
  40c3c2:	cli    
  40c3c3:	push   ecx
  40c3c4:	inc    ebx
  40c3c5:	scas   al,BYTE PTR es:[edi]
  40c3c6:	stos   DWORD PTR es:[edi],eax
  40c3c7:	mov    edx,0x2eb70130
  40c3cc:	mov    DWORD PTR [edx],ebp
  40c3ce:	popf   
  40c3cf:	or     DWORD PTR [esp+edi*8+0x1412ff5a],ecx
  40c3d6:	adc    ebp,0xffffffca
  40c3d9:	sbb    cl,BYTE PTR [ecx]
  40c3db:	mov    eax,ds:0x44e7fb30
  40c3e0:	(bad)  
  40c3e1:	cmp    esp,DWORD PTR [ecx-0x67]
  40c3e4:	jbe    0x40c3c9
  40c3e6:	cmc    
  40c3e7:	push   ecx
  40c3e8:	retf   
  40c3e9:	and    eax,0xd5cfb397
  40c3ee:	adc    eax,0x1f504229
  40c3f3:	xchg   DWORD PTR [edi+edi*2-0x5e9587c3],esp
  40c3fa:	test   eax,0xdb8070b8
  40c3ff:	ret    
  40c400:	pop    ebx
  40c401:	mov    ebp,0xf9d4dad7
  40c406:	or     bh,BYTE PTR [ecx+0x27f74c09]
  40c40c:	push   ss
  40c40d:	push   ebp
  40c40e:	ins    BYTE PTR es:[edi],dx
  40c40f:	arpl   bp,di
  40c411:	test   DWORD PTR [ecx+0x7bf83eb2],ebp
  40c417:	lods   al,BYTE PTR ds:[esi]
  40c418:	and    DWORD PTR es:[edx-0x13],ebp
  40c41c:	xlat   BYTE PTR ds:[ebx]
  40c41d:	xor    BYTE PTR [edx+ebp*2],dl
  40c420:	aad    0xcd
  40c422:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c423:	mov    ch,0xff
  40c425:	push   eax
  40c426:	(bad)  
  40c428:	xchg   ebx,eax
  40c429:	push   cs
  40c42a:	sub    ebx,DWORD PTR [edi]
  40c42c:	iret   
  40c42d:	clc    
  40c42e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c42f:	fwait
  40c430:	in     eax,0xe1
  40c432:	mov    es,WORD PTR [esi-0x14fd6ae7]
  40c438:	rol    al,cl
  40c43a:	in     al,dx
  40c43b:	or     eax,0xb2b4acd3
  40c440:	int3   
  40c441:	mov    ah,0x43
  40c443:	div    DWORD PTR [edi-0x64]
  40c446:	pusha  
  40c447:	cld    
  40c448:	retf   0x3d7f
  40c44b:	mov    edx,0x6ad148f5
  40c450:	dec    esp
  40c451:	adc    DWORD PTR [ebx+esi*4+0x7a4fbabf],esp
  40c458:	sbb    eax,0xbca01e79
  40c45d:	inc    ebp
  40c45e:	xchg   ebx,eax
  40c45f:	pop    es
  40c460:	lea    edi,[esi+0x41]
  40c463:	mov    WORD PTR [esi+0x5],?
  40c466:	mov    ah,0x5d
  40c468:	cmc    
  40c469:	stos   DWORD PTR es:[edi],eax
  40c46a:	adc    ebp,DWORD PTR [ecx-0x2f]
  40c46d:	enter  0x6dbc,0xbf
  40c471:	cmp    eax,0x71708c6f
  40c476:	loop   0x40c4c8
  40c478:	test   eax,0xccf216ea
  40c47d:	xchg   edx,eax
  40c47e:	sar    BYTE PTR [ebx+edi*1+0x2f],0xd7
  40c483:	aas    
  40c484:	mov    bh,0x58
  40c486:	mov    esp,0x87ada8b3
  40c48b:	mov    eax,ds:0x53a9b6a9
  40c490:	or     DWORD PTR [edx+0x147768af],ebx
  40c496:	jno    0x40c44c
  40c498:	mov    esi,0x10df2770
  40c49d:	adc    DWORD PTR [edi+0x100a4884],esp
  40c4a3:	mov    cs,WORD PTR [ebp-0x40]
  40c4a6:	sub    edi,ecx
  40c4a8:	shl    DWORD PTR [ebx-0x753d700c],0x0
  40c4af:	push   esp
  40c4b0:	mov    al,BYTE PTR [ebp+0x7e]
  40c4b3:	jnp    0x40c481
  40c4b5:	mov    al,ds:0xc62f9af2
  40c4ba:	test   eax,0xf82d0d03
  40c4bf:	mov    WORD PTR ds:0x5442292d,fs
  40c4c5:	ins    DWORD PTR es:[edi],dx
  40c4c6:	out    0x30,eax
  40c4c8:	out    0xa3,al
  40c4ca:	fldenv [eax+ecx*8-0x4881132f]
  40c4d1:	pop    eax
  40c4d2:	mov    dh,0x4a
  40c4d4:	fdiv   QWORD PTR [ebx+0x47c5eaf1]
  40c4da:	jae    0x40c4c4
  40c4dc:	shr    BYTE PTR [eax+0x26],cl
  40c4df:	mov    ch,0x8b
  40c4e1:	push   ss
  40c4e2:	sub    eax,0xea309237
  40c4e7:	call   0x3790683
  40c4ec:	lock scas eax,DWORD PTR es:[edi]
  40c4ee:	lods   al,BYTE PTR ds:[esi]
  40c4ef:	addr16 inc ebp
  40c4f1:	or     bl,BYTE PTR [esi+0x2ff39a83]
  40c4f7:	cld    
  40c4f8:	pusha  
  40c4f9:	scas   eax,DWORD PTR es:[edi]
  40c4fa:	adc    DWORD PTR [eax],ebp
  40c4fc:	pop    esi
  40c4fd:	xor    eax,0xee4a6458
  40c502:	cwde   
  40c503:	in     eax,dx
  40c504:	fsubr  st(7),st
  40c506:	arpl   WORD PTR ds:0x9602a0e9,cx
  40c50c:	sbb    ch,dl
  40c50e:	loope  0x40c56c
  40c510:	dec    eax
  40c511:	mov    al,0xcc
  40c513:	stos   BYTE PTR es:[edi],al
  40c514:	mov    ebx,0x1324bea6
  40c519:	jge    0x40c4f7
  40c51b:	mov    dh,0x6a
  40c51d:	mov    edi,0x69049207
  40c522:	sbb    ebx,DWORD PTR [edi]
  40c524:	push   ebx
  40c525:	mov    WORD PTR [edi+eax*4-0x729f4f61],?
  40c52c:	xchg   esp,eax
  40c52d:	pop    eax
  40c52e:	(bad)  
  40c52f:	pop    ebp
  40c530:	outs   dx,BYTE PTR ds:[esi]
  40c531:	pop    ss
  40c532:	and    DWORD PTR [edx+0x24],0x3c
  40c536:	loop   0x40c592
  40c538:	and    edi,DWORD PTR [ebx+0x48]
  40c53b:	lahf   
  40c53c:	aaa    
  40c53d:	inc    ebp
  40c53e:	out    dx,eax
  40c53f:	or     DWORD PTR [ecx+edx*4-0x5],0xffffff90
  40c544:	sbb    BYTE PTR [ebx+0x5b99d430],0xfa
  40c54b:	and    eax,0xa91de260
  40c550:	mov    ds:0x5b093086,eax
  40c555:	test   BYTE PTR ds:0xca323cc9,bl
  40c55b:	iret   
  40c55c:	fcomip st,st(7)
  40c55e:	cmp    eax,0xe7ea5542
  40c563:	mov    BYTE PTR [esi+0x58],0x1
  40c567:	imul   BYTE PTR [ebx-0x16]
  40c56a:	jnp    0x40c514
  40c56c:	push   ecx
  40c56d:	fnstcw WORD PTR [ebx]
  40c56f:	repz jmp 0xcc16:0x55c65d91
  40c577:	ret    0x7618
  40c57a:	call   0xe399:0x22ac4325
  40c581:	cmp    ah,BYTE PTR [ebp+0x65]
  40c584:	cmc    
  40c585:	stos   DWORD PTR es:[edi],eax
  40c586:	xchg   ecx,eax
  40c587:	lods   al,BYTE PTR ds:[esi]
  40c588:	cdq    
  40c589:	dec    esp
  40c58b:	call   0xab333621
  40c590:	push   cs
  40c591:	shl    DWORD PTR [edx+0x73],cl
  40c594:	add    eax,0x95c5a1fa
  40c599:	lods   al,BYTE PTR ds:[esi]
  40c59a:	or     eax,0xa0dc8e6c
  40c59f:	pusha  
  40c5a0:	xchg   ebx,eax
  40c5a1:	mov    ah,0xe5
  40c5a3:	jle    0x40c5f9
  40c5a5:	pop    edx
  40c5a6:	daa    
  40c5a7:	test   DWORD PTR [edi-0x65],edi
  40c5aa:	icebp  
  40c5ab:	dec    eax
  40c5ac:	fisttp QWORD PTR [ebx+0xd]
  40c5af:	lahf   
  40c5b0:	out    dx,eax
  40c5b1:	sub    al,0x6e
  40c5b4:	xor    DWORD PTR [eax+0x4475691d],0x30
  40c5bb:	pop    esp
  40c5bc:	pop    ss
  40c5bd:	pop    edi
  40c5be:	enter  0x227e,0x49
  40c5c2:	jnp    0x40c5ae
  40c5c4:	(bad)  
  40c5c6:	loope  0x40c576
  40c5c8:	push   edx
  40c5c9:	into   
  40c5ca:	pop    es
  40c5cb:	lea    ebx,[edi]
  40c5cd:	mov    es,WORD PTR [eax+0x75d80a81]
  40c5d3:	sbb    bh,BYTE PTR [eax-0x6e6aee54]
  40c5d9:	shl    DWORD PTR [edx+0x59d07ecc],cl
  40c5df:	je     0x40c5b6
  40c5e1:	push   0xee6c56f7
  40c5e6:	cmp    al,0x86
  40c5e8:	mov    bl,0x14
  40c5ea:	shl    DWORD PTR [edi],0x2d
  40c5ed:	xor    esp,0xffffff88
  40c5f0:	jbe    0x40c573
  40c5f2:	div    BYTE PTR [edx+0x2e]
  40c5f5:	mov    DWORD PTR [esi],esi
  40c5f7:	push   ecx
  40c5f8:	xor    cl,BYTE PTR [eax]
  40c5fa:	xchg   BYTE PTR [edi+0x269fbcde],dl
  40c600:	push   es
  40c601:	jp     0x40c5c0
  40c603:	(bad)  
  40c604:	mov    ds:0xd6167b2a,al
  40c609:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c60a:	stc    
  40c60b:	and    edx,DWORD PTR [esi+0x77]
  40c60e:	mov    ebx,0x6d3675eb
  40c613:	mov    bl,0xc
  40c615:	loopne 0x40c5b0
  40c617:	xor    BYTE PTR [eax+0x3bf27810],dh
  40c61d:	cmp    ch,ch
  40c61f:	stc    
  40c620:	and    bh,dh
  40c622:	fsub   st(3),st
  40c624:	mov    edx,edi
  40c626:	out    dx,al
  40c627:	scas   al,BYTE PTR es:[edi]
  40c628:	sbb    ah,dl
  40c62a:	jl     0x40c5af
  40c62c:	xor    eax,0x453acaca
  40c631:	data16 cmp BYTE PTR [edx],bl
  40c634:	jge    0x40c64a
  40c636:	add    al,dl
  40c638:	fbstp  TBYTE PTR [ecx]
  40c63a:	outs   dx,BYTE PTR ds:[esi]
  40c63b:	or     edi,DWORD PTR [ebp+esi*8-0x2e79de81]
  40c642:	(bad)  
  40c643:	shl    DWORD PTR [ebx+0x74],cl
  40c646:	js     0x40c6a2
  40c648:	fisub  WORD PTR [esi+0x2993f78e]
  40c64e:	xchg   DWORD PTR gs:[ebx+0x55672f3d],ebp
  40c655:	push   edi
  40c656:	pop    ebp
  40c657:	repz into 
  40c659:	pop    esp
  40c65a:	xchg   BYTE PTR [ecx+0x2d36500d],al
  40c660:	push   ebx
  40c661:	mov    DWORD PTR [esi+0x20],0x573836ca
  40c668:	dec    edx
  40c669:	call   FWORD PTR [edx]
  40c66b:	inc    ebx
  40c66c:	(bad)  
  40c66e:	add    ch,0x4a
  40c671:	sub    eax,0x606ecfc9
  40c676:	aam    0xf4
  40c678:	jge    0x40c606
  40c67a:	imul   ebp,DWORD PTR [ecx-0x4c450ce7],0xe67b1824
  40c684:	cld    
  40c685:	fcomp  QWORD PTR [ebx-0x1]
  40c688:	adc    eax,0xd8cd5fa6
  40c68d:	leave  
  40c68e:	dec    ebx
  40c68f:	shl    BYTE PTR [ebx],cl
  40c691:	ret    0x24ad
  40c694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c695:	aas    
  40c696:	jns    0x40c69f
  40c698:	cdq    
  40c699:	mov    dl,0x34
  40c69b:	into   
  40c69c:	js     0x40c626
  40c69e:	mov    edx,edi
  40c6a0:	nop
  40c6a1:	ins    DWORD PTR es:[edi],dx
  40c6a2:	or     dh,bh
  40c6a4:	scas   al,BYTE PTR es:[edi]
  40c6a5:	mov    ebx,0xe03a4974
  40c6aa:	pop    ebp
  40c6ab:	sbb    eax,0xbcb536dc
  40c6b0:	test   DWORD PTR [esi+0x5b],esi
  40c6b3:	inc    ecx
  40c6b4:	jae    0x40c6a9
  40c6b6:	adc    ebx,DWORD PTR [ebp+0x1]
  40c6b9:	mov    bh,0x13
  40c6bb:	aas    
  40c6bc:	mov    ecx,0xdc3dccc
  40c6c1:	xchg   ebp,eax
  40c6c2:	loopne 0x40c6b6
  40c6c4:	push   ecx
  40c6c5:	mov    esi,0x2f804e63
  40c6ca:	loopne 0x40c746
  40c6cc:	dec    eax
  40c6cd:	push   0x74
  40c6cf:	enter  0x59c2,0xea
  40c6d3:	(bad)  
  40c6d4:	js     0x40c739
  40c6d6:	mov    dh,0xe3
  40c6d8:	sbb    BYTE PTR [ebp-0x1ef01cc2],0xcc
  40c6df:	fidivr WORD PTR [esi-0x4e]
  40c6e2:	test   eax,0x6a72af68
  40c6e7:	adc    cl,BYTE PTR [eax+0x74]
  40c6ea:	idiv   DWORD PTR [esi-0x2f0b17e7]
  40c6f0:	arpl   cx,si
  40c6f2:	into   
  40c6f3:	call   0x5452:0xb433c98e
  40c6fa:	xor    BYTE PTR [esi*8-0x34b1560e],0xd1
  40c702:	pop    ebp
  40c703:	daa    
  40c704:	call   FWORD PTR [ebx+ebx*4-0x10]
  40c708:	push   edi
  40c709:	and    al,0x9c
  40c70b:	mov    BYTE PTR [esp+ecx*2-0x30],bh
  40c70f:	lds    ebp,FWORD PTR [eax]
  40c711:	push   ss
  40c712:	xchg   DWORD PTR [ecx],ecx
  40c714:	pop    esp
  40c715:	jno    0x40c6e3
  40c717:	push   ebx
  40c718:	jae    0x40c6ce
  40c71a:	les    eax,FWORD PTR [ecx]
  40c71c:	or     eax,0x93a77016
  40c721:	inc    edx
  40c722:	call   0x51027637
  40c727:	fucomip st,st(0)
  40c729:	in     al,dx
  40c72a:	clc    
  40c72b:	stos   BYTE PTR es:[edi],al
  40c72c:	mov    es,WORD PTR [ebp+0x5e9014b4]
  40c732:	push   es
  40c733:	(bad)  
  40c734:	pushf  
  40c735:	hlt    
  40c736:	out    dx,eax
  40c737:	and    eax,0x24600f44
  40c73c:	sbb    al,0xde
  40c73e:	xchg   ebp,eax
  40c73f:	mov    dh,0xc1
  40c741:	mov    al,0xd6
  40c743:	cs add ebx,esp
  40c746:	das    
  40c747:	xchg   ebx,eax
  40c748:	pushf  
  40c749:	jns    0x40c6de
  40c74b:	scas   eax,DWORD PTR es:[edi]
  40c74c:	push   cs
  40c74d:	push   edx
  40c74e:	push   edx
  40c74f:	inc    eax
  40c750:	imul   ebp,DWORD PTR [ecx-0x461990a2],0xffffff9e
  40c757:	fsubr  QWORD PTR [esi-0x6bc70878]
  40c75d:	test   BYTE PTR [edx+ecx*1-0x32],dh
  40c761:	cmp    DWORD PTR [edx-0x62f41a38],ebp
  40c767:	dec    esp
  40c768:	ret    0xb78b
  40c76b:	js     0x40c7c9
  40c76d:	sbb    DWORD PTR [edi+0x36],ebx
  40c770:	push   0x27
  40c772:	adc    al,0x42
  40c774:	shr    DWORD PTR [edx+edi*4],1
  40c777:	loope  0x40c747
  40c779:	icebp  
  40c77a:	aaa    
  40c77b:	mov    al,ds:0x15bcbf05
  40c780:	add    DWORD PTR [ebp+0x29],esp
  40c783:	adc    cl,cl
  40c785:	dec    ecx
  40c786:	inc    eax
  40c787:	pop    ebx
  40c788:	sbb    edx,DWORD PTR [edx]
  40c78a:	cs pop ss
  40c78c:	push   ds
  40c78d:	or     eax,0x6536dc34
  40c792:	pop    edx
  40c793:	sti    
  40c794:	fistp  WORD PTR [ecx-0xa800c8c]
  40c79a:	pop    ecx
  40c79b:	aam    0x8e
  40c79d:	repnz (bad) 
  40c7a0:	dec    esi
  40c7a1:	(bad)  
  40c7a3:	das    
  40c7a4:	jl     0x40c813
  40c7a6:	and    DWORD PTR [eax],0xd6a2b94c
  40c7ac:	ins    DWORD PTR es:[edi],dx
  40c7ad:	stc    
  40c7ae:	mov    ecx,0x5d1a2b42
  40c7b3:	ss xor ebx,ebp
  40c7b6:	out    dx,eax
  40c7b7:	cld    
  40c7b8:	mov    WORD PTR [edx+0x115e60d8],?
  40c7be:	push   esi
  40c7bf:	les    esi,FWORD PTR [edi]
  40c7c1:	popf   
  40c7c2:	dec    edx
  40c7c3:	dec    edi
  40c7c4:	xchg   BYTE PTR [ebx+ecx*1],ah
  40c7c7:	test   eax,0x89e74a4b
  40c7cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7cd:	cmova  edx,edi
  40c7d0:	mov    edi,0xaa64b162
  40c7d5:	jmp    0x40c75d
  40c7d7:	stos   DWORD PTR es:[edi],eax
  40c7d8:	icebp  
  40c7d9:	sahf   
  40c7da:	dec    esi
  40c7db:	out    0xa5,al
  40c7dd:	sbb    ebp,DWORD PTR [edi+edx*1]
  40c7e0:	inc    esi
  40c7e1:	jnp    0x40c7cd
  40c7e3:	ret    
  40c7e4:	and    BYTE PTR [edx-0x35],ch
  40c7e7:	or     ch,BYTE PTR ds:0x504351e8
  40c7ed:	(bad)  
  40c7ee:	icebp  
  40c7ef:	add    BYTE PTR [ebx+0x1a],ah
  40c7f2:	arpl   WORD PTR [ecx-0x3a],si
  40c7f5:	inc    ecx
  40c7f6:	sub    bl,BYTE PTR [eax]
  40c7f8:	sub    dh,BYTE PTR [ebx+0x2e]
  40c7fb:	fild   WORD PTR [edx-0x6efa0e29]
  40c801:	ret    0xa9ba
  40c804:	loop   0x40c791
  40c806:	popa   
  40c807:	and    eax,0x48762d72
  40c80c:	imul   ebx,DWORD PTR [ebx+0x60],0xa7605089
  40c813:	or     eax,0x2edb11c0
  40c818:	(bad)  
  40c819:	sub    ebx,DWORD PTR cs:[eax]
  40c81c:	pushf  
  40c81d:	std    
  40c81e:	dec    bx
  40c820:	(bad)  
  40c821:	jle    0x40c812
  40c823:	rol    DWORD PTR [esi+0x41],0xea
  40c827:	pop    edx
  40c828:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c829:	in     eax,0x63
  40c82b:	dec    eax
  40c82c:	js     0x40c80b
  40c82e:	loopne 0x40c838
  40c830:	inc    edx
  40c831:	imul   edx,esp,0x9bc363a7
  40c837:	in     al,dx
  40c838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c839:	(bad)  
  40c83a:	push   eax
  40c83b:	xchg   ebx,eax
  40c83c:	mov    dl,0x67
  40c83e:	jne    0x40c893
  40c840:	sub    ecx,DWORD PTR [ebx+0x69438f70]
  40c846:	cli    
  40c847:	pop    edi
  40c848:	or     cl,0x8f
  40c84b:	mov    gs,WORD PTR [eax-0x13]
  40c84e:	pop    ss
  40c84f:	inc    edx
  40c850:	(bad)  [ebx+0x5c]
  40c853:	xor    edx,DWORD PTR [ecx-0x4ea1b5d1]
  40c859:	ret    0xb9b1
  40c85c:	add    eax,DWORD PTR [edx-0x2e]
  40c85f:	cs xor eax,0xd440bca4
  40c865:	fcomp  QWORD PTR [ecx]
  40c867:	pop    es
  40c868:	cmp    ecx,DWORD PTR [ecx-0x6b]
  40c86b:	mov    cl,BYTE PTR [eax]
  40c86d:	xor    al,dl
  40c86f:	dec    ecx
  40c870:	int3   
  40c871:	push   ecx
  40c872:	clc    
  40c873:	mov    ds:0xbbdc4fc6,eax
  40c878:	add    eax,0x4c32e98d
  40c87d:	mov    eax,ds:0xf16b272b
  40c882:	nop
  40c883:	iret   
  40c884:	dec    eax
  40c885:	(bad)  
  40c886:	mov    dh,0x92
  40c888:	cmp    eax,0xacc9bbb6
  40c88d:	push   ds
  40c88e:	aaa    
  40c88f:	cmp    DWORD PTR [eax+0x4f8ed363],esp
  40c895:	fs sar cl,1
  40c898:	jmp    0x40c859
  40c89a:	adc    al,0x69
  40c89c:	(bad)  
  40c89d:	jmp    DWORD PTR [edi-0x44]
  40c8a0:	jp     0x40c827
  40c8a2:	fbstp  TBYTE PTR [eax+esi*1]
  40c8a5:	dec    ecx
  40c8a6:	or     eax,0xa96e6f3
  40c8ab:	aas    
  40c8ac:	mov    BYTE PTR [ecx+ebx*8-0x640a867b],ah
  40c8b3:	and    BYTE PTR [eax],al
  40c8b5:	adc    eax,0x5f9da46a
  40c8ba:	sbb    DWORD PTR [ebx],ebp
  40c8bc:	cwde   
  40c8bd:	daa    
  40c8be:	pushf  
  40c8bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8c0:	addr16 cdq 
  40c8c2:	arpl   WORD PTR [esi-0x2cc3611d],di
  40c8c8:	mov    dh,0xf4
  40c8ca:	xchg   edx,eax
  40c8cb:	loop   0x40c8be
  40c8cd:	imul   edx,DWORD PTR [esi],0xffffffb4
  40c8d0:	int    0x9e
  40c8d2:	dec    edi
  40c8d3:	mov    cl,cl
  40c8d5:	xchg   edx,eax
  40c8d6:	ret    0x6c2d
  40c8d9:	xchg   edx,eax
  40c8da:	jge    0x40c8ef
  40c8dc:	mov    bl,0x64
  40c8de:	xchg   ebp,eax
  40c8df:	xchg   edx,eax
  40c8e0:	pop    esp
  40c8e1:	shr    bh,cl
  40c8e3:	dec    ebx
  40c8e4:	not    DWORD PTR [ebp+0x371880f0]
  40c8ea:	push   eax
  40c8eb:	sub    eax,0x75344cc6
  40c8f0:	sbb    al,0x58
  40c8f2:	sbb    esi,DWORD PTR [ebx]
  40c8f4:	adc    DWORD PTR [ecx+0x52],edx
  40c8f7:	dec    esi
  40c8f8:	jnp    0x40c8f0
  40c8fa:	xchg   edi,eax
  40c8fb:	hlt    
  40c8fc:	jno    0x40c8e7
  40c8fe:	sti    
  40c8ff:	mov    ds:0xe734000d,eax
  40c904:	fcmovnu st,st(6)
  40c906:	jns    0x40c921
  40c908:	jo     0x40c90e
  40c90a:	lods   al,BYTE PTR ds:[esi]
  40c90b:	inc    ebx
  40c90c:	repnz and DWORD PTR [edi-0x71289e19],ebx
  40c913:	jle    0x40c98a
  40c915:	push   0xa6ff2d1b
  40c91a:	data16 outs dx,BYTE PTR ds:[esi]
  40c91c:	mov    bh,0x40
  40c91e:	rcr    BYTE PTR [ecx-0x4d8e4065],0x22
  40c925:	(bad)  
  40c926:	cli    
  40c927:	cmp    DWORD PTR [ebx],edx
  40c929:	jno    0x40c8d7
  40c92b:	ins    DWORD PTR es:[edi],dx
  40c92c:	mov    dl,0xf5
  40c92e:	mov    cl,0xfe
  40c930:	test   al,0x4f
  40c932:	mov    BYTE PTR [ebx+0x2e],al
  40c935:	jmp    0x7630:0x5e7d558
  40c93c:	aam    0x35
  40c93e:	pop    ebx
  40c93f:	shl    DWORD PTR [edi],0x69
  40c942:	fsub   DWORD PTR [ebx+0xa8c9a41]
  40c948:	push   ecx
  40c949:	jmp    0x405d1859
  40c94e:	push   ebx
  40c94f:	daa    
  40c950:	fucomi st,st(7)
  40c952:	sub    eax,0x40fc1326
  40c957:	xchg   edi,eax
  40c958:	mov    BYTE PTR [ebx+0x19844360],al
  40c95e:	retf   
  40c95f:	pop    esi
  40c960:	push   ss
  40c961:	lea    ebx,[ebx+0xb8b957f]
  40c967:	and    dl,BYTE PTR [ebx-0x2d0a624f]
  40c96d:	adc    bh,BYTE PTR [ecx]
  40c96f:	nop
  40c970:	retf   0x887e
  40c973:	pop    esp
  40c974:	mov    esi,DWORD PTR [ebx-0x33c2a778]
  40c97a:	xor    DWORD PTR [ecx+0x1d],edx
  40c97d:	std    
  40c97e:	mov    ds:0x635e8f44,al
  40c983:	iret   
  40c984:	xor    cl,cl
  40c986:	clc    
  40c987:	and    al,0x29
  40c989:	xor    BYTE PTR [esi+ebp*8+0x6f],0xff
  40c98e:	inc    DWORD PTR [esi+0x0]
  40c991:	mov    ch,0xb5
  40c993:	add    ebp,DWORD PTR [eax+ebx*1+0x13b2e98]
  40c99a:	jae    0x40c9f2
  40c99c:	inc    edi
  40c99d:	lock push esp
  40c99f:	mov    dl,0xc9
  40c9a1:	lods   al,BYTE PTR ds:[esi]
  40c9a2:	mov    al,0x67
  40c9a4:	mov    WORD PTR [edx+ebp*4],cs
  40c9a7:	or     DWORD PTR [eax],ecx
  40c9a9:	scas   eax,DWORD PTR es:[edi]
  40c9aa:	and    al,0xbd
  40c9ac:	fnstcw WORD PTR [edx-0xd]
  40c9af:	mov    dl,0xdf
  40c9b1:	jo     0x40c963
  40c9b3:	mov    eax,0x212f9107
  40c9b8:	ins    BYTE PTR es:[edi],dx
  40c9b9:	sub    esp,DWORD PTR [ebp-0x7]
  40c9bc:	add    dl,BYTE PTR [ecx+0x13]
  40c9bf:	cmovbe eax,DWORD PTR [edi+0x64c5238e]
  40c9c6:	lods   al,BYTE PTR ds:[esi]
  40c9c7:	lods   al,BYTE PTR ds:[esi]
  40c9c8:	stc    
  40c9c9:	or     bl,BYTE PTR [ecx-0x3a9c044c]
  40c9cf:	repnz mov DWORD PTR [ecx],edi
  40c9d2:	and    dl,dl
  40c9d4:	aam    0xe6
  40c9d6:	jbe    0x40c9fa
  40c9d8:	jecxz  0x40ca21
  40c9da:	sbb    edi,DWORD PTR [ecx]
  40c9dc:	lods   al,BYTE PTR ds:[esi]
  40c9dd:	jl     0x40c9fa
  40c9df:	and    ch,BYTE PTR [ecx]
  40c9e1:	pop    eax
  40c9e2:	jb     0x40ca04
  40c9e4:	test   eax,0xf2d497f2
  40c9e9:	dec    ecx
  40c9ea:	and    al,0x11
  40c9ec:	fiadd  WORD PTR [ebp+edx*2+0x21]
  40c9f0:	sti    
  40c9f1:	std    
  40c9f2:	xor    eax,0x1d17ffa4
  40c9f7:	pop    esi
  40c9f8:	test   al,0xfc
  40c9fa:	dec    esp
  40c9fb:	rcr    DWORD PTR [eax-0x4c],cl
  40c9fe:	sar    BYTE PTR [esi],0xac
  40ca01:	add    eax,0xfa19a4ca
  40ca06:	jp     0x40c9d6
  40ca08:	(bad)  
  40ca09:	xlat   BYTE PTR ds:[ebx]
  40ca0a:	out    dx,eax
  40ca0b:	push   ecx
  40ca0c:	inc    edi
  40ca0d:	adc    eax,0x105317f0
  40ca12:	or     eax,DWORD PTR [ebp-0x7c4e502a]
  40ca18:	fwait
  40ca19:	popf   
  40ca1a:	out    dx,eax
  40ca1b:	sbb    esp,DWORD PTR [eax-0x50d3725c]
  40ca21:	pop    ebx
  40ca22:	jecxz  0x40c9ec
  40ca24:	cmp    BYTE PTR [ebp+ebp*8+0x7f],ah
  40ca28:	pop    ecx
  40ca29:	push   esi
  40ca2a:	inc    ecx
  40ca2b:	xchg   BYTE PTR [esi],dl
  40ca2d:	sub    esp,0xc5c29eb
  40ca33:	push   eax
  40ca34:	fmul   QWORD PTR [ecx+0x6974160e]
  40ca3a:	mov    al,0xb9
  40ca3c:	xor    BYTE PTR [ebx-0x3e],dh
  40ca3f:	enter  0x65c7,0x4c
  40ca43:	sbb    eax,0x40f76886
  40ca48:	pop    ds
  40ca49:	loop   0x40c9ef
  40ca4b:	add    BYTE PTR [esi],cl
  40ca4d:	pusha  
  40ca4e:	xchg   DWORD PTR [esi+edi*1-0x1],esi
  40ca52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca53:	push   ebx
  40ca54:	xor    esi,DWORD PTR [edi+edx*4-0x6926f82f]
  40ca5b:	clc    
  40ca5c:	rol    DWORD PTR [ebx],1
  40ca5e:	aas    
  40ca5f:	(bad)  
  40ca60:	sub    al,BYTE PTR [edx+0x5fa5f48]
  40ca66:	lock jo 0x40ca4a
  40ca69:	stos   DWORD PTR es:[edi],eax
  40ca6a:	adc    BYTE PTR [ebp+0x784cfe05],dh
  40ca70:	xchg   esp,eax
  40ca71:	pop    edi
  40ca72:	ins    BYTE PTR es:[edi],dx
  40ca73:	push   es
  40ca74:	(bad)  
  40ca75:	div    BYTE PTR [ecx+0x64]
  40ca78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca79:	dec    eax
  40ca7a:	je     0x40ca29
  40ca7c:	pxor   mm0,QWORD PTR [esi+0x19]
  40ca80:	jne    0x40cabf
  40ca82:	mov    eax,0x365feb7a
  40ca87:	xlat   BYTE PTR ds:[ebx]
  40ca88:	adc    ah,cl
  40ca8a:	outs   dx,BYTE PTR ds:[esi]
  40ca8b:	pop    edx
  40ca8c:	ins    BYTE PTR es:[edi],dx
  40ca8d:	push   0x2c
  40ca8f:	and    edx,DWORD PTR [eax+esi*2]
  40ca92:	loopne 0x40cad1
  40ca94:	jne    0x40ca60
  40ca96:	sbb    ah,bh
  40ca98:	lods   al,BYTE PTR ds:[esi]
  40ca99:	push   edi
  40ca9a:	dec    edx
  40ca9b:	(bad)  
  40ca9c:	pop    esi
  40ca9e:	jns    0x40ca76
  40caa0:	or     BYTE PTR [esi-0x19cd71f3],ah
  40caa6:	gs inc ebx
  40caa8:	sub    DWORD PTR [esi+edx*4+0x6],esp
  40caac:	cmp    BYTE PTR [eax-0x5e],bh
  40caaf:	adc    al,bh
  40cab1:	daa    
  40cab2:	sbb    bh,dh
  40cab4:	mov    ebp,0xed987015
  40cab9:	push   esi
  40caba:	fucom  st(6)
  40cabc:	hlt    
  40cabd:	mov    bl,0xfa
  40cabf:	ret    
  40cac0:	mov    ch,0xac
  40cac2:	or     ah,BYTE PTR [ebx-0x74]
  40cac5:	and    ecx,ecx
  40cac7:	test   BYTE PTR [esi],ah
  40cac9:	out    dx,eax
  40caca:	pushf  
  40cacb:	mov    edx,0xd3866fa8
  40cad0:	sbb    al,0x3b
  40cad2:	test   eax,0x5bd4a69c
  40cad7:	inc    esp
  40cad8:	dec    esi
  40cad9:	std    
  40cada:	repz xchg ecx,eax
  40cadc:	mov    bh,ah
  40cade:	jp     0x40cac5
  40cae0:	in     eax,0x9
  40cae2:	ss mov dl,0x21
  40cae5:	sbb    al,0x77
  40cae7:	and    BYTE PTR [ebx+0x1e],al
  40caea:	dec    eax
  40caeb:	clc    
  40caec:	clc    
  40caed:	jne    0x40cae0
  40caef:	dec    esp
  40caf0:	pop    ds
  40caf1:	push   eax
  40caf2:	xor    al,0xc3
  40caf4:	ja     0x40caa6
  40caf6:	cs push ebp
  40caf8:	or     al,0xe3
  40cafa:	cmp    ebp,DWORD PTR [edx]
  40cafc:	leave  
  40cafd:	ins    BYTE PTR es:[edi],dx
  40cafe:	mov    bh,0x52
  40cb00:	mov    al,0x14
  40cb02:	cmp    ch,BYTE PTR [esi+0x6e]
  40cb05:	mov    BYTE PTR [edx],al
  40cb07:	fisttp QWORD PTR [eax]
  40cb09:	pop    ebp
  40cb0a:	sti    
  40cb0b:	sub    BYTE PTR [ebx+eiz*1],0x76
  40cb0f:	xchg   ecx,eax
  40cb10:	js     0x40cb2e
  40cb12:	dec    esi
  40cb13:	(bad)  
  40cb14:	enter  0x86f7,0x87
  40cb18:	push   esi
  40cb19:	dec    edx
  40cb1a:	push   esp
  40cb1b:	(bad)  
  40cb1c:	dec    edx
  40cb1d:	(bad)  
  40cb1e:	aaa    
  40cb1f:	dec    esi
  40cb20:	cmp    dl,BYTE PTR [ebp-0x1d2f0f14]
  40cb26:	sub    dh,0x95
  40cb29:	adc    esi,DWORD PTR [esi-0x14]
  40cb2c:	dec    edi
  40cb2d:	pop    es
  40cb2e:	and    DWORD PTR [edx-0x17],edi
  40cb31:	mov    esi,0x5b419cc5
  40cb36:	mov    bl,0xb4
  40cb38:	pop    es
  40cb39:	and    eax,0x9c2ece42
  40cb3e:	ss lock or eax,0x9a1b30f7
  40cb45:	dec    edx
  40cb46:	mov    bh,0xec
  40cb48:	mov    edx,0x4f29d511
  40cb4d:	jae    0x40cb76
  40cb4f:	dec    esp
  40cb50:	mov    ds:0x58013750,eax
  40cb55:	adc    al,0x53
  40cb57:	sahf   
  40cb58:	xor    BYTE PTR [ebp+0x26],ch
  40cb5b:	test   al,0xee
  40cb5d:	push   edx
  40cb5e:	std    
  40cb5f:	xchg   esp,eax
  40cb60:	jecxz  0x40cb75
  40cb62:	xbegin 0xe1db1a22
  40cb68:	bswap  esi
  40cb6a:	mov    esi,0x858c2953
  40cb6f:	mov    WORD PTR [ecx-0x37e4b682],es
  40cb75:	mov    eax,ds:0x1f0a7da7
  40cb7a:	and    dl,ah
  40cb7c:	test   DWORD PTR [bx],esi
  40cb7f:	xor    DWORD PTR [ecx+0x51088eb1],0x5491f2b
  40cb89:	jae    0x40cb70
  40cb8b:	mov    eax,ds:0x99e17785
  40cb90:	test   al,0x74
  40cb92:	and    al,cl
  40cb94:	aaa    
  40cb95:	push   0xffffffc8
  40cb97:	out    dx,eax
  40cb98:	data16 (bad) 
  40cb9a:	loope  0x40cba8
  40cb9c:	pop    edx
  40cb9d:	inc    ebx
  40cb9e:	xor    al,0xc5
  40cba0:	mov    WORD PTR [esi-0xb],cs
  40cba3:	and    ah,BYTE PTR [edi-0x42]
  40cba6:	cmp    al,0x41
  40cba8:	or     eax,0x42e626ad
  40cbad:	add    ebp,esi
  40cbaf:	idiv   BYTE PTR [edx+ebp*2-0x64]
  40cbb3:	mov    dl,0xf
  40cbb5:	hlt    
  40cbb6:	sbb    al,0x70
  40cbb8:	push   edi
  40cbb9:	pop    ecx
  40cbba:	xchg   ebp,eax
  40cbbb:	jl     0x40cc29
  40cbbd:	mov    WORD PTR [eax],ds
  40cbbf:	xor    DWORD PTR [ecx-0x72],esp
  40cbc2:	jo     0x40cc05
  40cbc4:	dec    ebx
  40cbc5:	dec    edi
  40cbc6:	mov    cl,0x49
  40cbc8:	cwde   
  40cbc9:	push   esp
  40cbca:	outs   dx,DWORD PTR ds:[esi]
  40cbcb:	jns    0x40cb7a
  40cbcd:	aad    0x5e
  40cbcf:	fld    TBYTE PTR [ebp+0x25]
  40cbd2:	mov    eax,ds:0x859d3636
  40cbd7:	arpl   dx,sp
  40cbd9:	sbb    esi,ebx
  40cbdb:	jl     0x40cb63
  40cbdd:	push   esp
  40cbde:	mov    cl,0x20
  40cbe0:	inc    edx
  40cbe1:	adc    BYTE PTR [edi+0x6e],bh
  40cbe4:	addr16 mov esi,0xf7da670c
  40cbea:	call   0x167c0d86
  40cbef:	sub    cl,BYTE PTR [esi]
  40cbf1:	jp     0x40cc3d
  40cbf3:	dec    edx
  40cbf4:	lock (bad) 
  40cbf6:	rcr    DWORD PTR [edi+ebp*8+0x257b7542],cl
  40cbfd:	push   cs
  40cbfe:	jmp    0xdd02:0xb48bdba1
  40cc05:	ror    edx,0x92
  40cc08:	sbb    eax,0xc95937a0
  40cc0d:	push   edi
  40cc0e:	xchg   edi,eax
  40cc0f:	add    al,0x1e
  40cc11:	popf   
  40cc12:	push   0x49c13048
  40cc17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc18:	je     0x40cc28
  40cc1a:	lods   al,BYTE PTR ds:[esi]
  40cc1b:	dec    ebx
  40cc1c:	sbb    eax,0x5434ae79
  40cc21:	jae    0x40cc4f
  40cc23:	aam    0x80
  40cc25:	dec    esp
  40cc26:	lods   eax,DWORD PTR ds:[esi]
  40cc27:	sbb    ch,al
  40cc29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc2a:	lods   eax,DWORD PTR ds:[esi]
  40cc2b:	add    BYTE PTR [edi],0x65
  40cc2e:	lahf   
  40cc2f:	daa    
  40cc30:	in     eax,0xf1
  40cc32:	icebp  
  40cc33:	mov    cl,0xbd
  40cc35:	rol    DWORD PTR [edi+0x128ccde2],0x29
  40cc3c:	mov    edi,0x138b014b
  40cc41:	push   ebx
  40cc42:	dec    eax
  40cc43:	cmp    DWORD PTR [esi-0x13ac8c31],edi
  40cc49:	fld    DWORD PTR [eax-0x33b13a7c]
  40cc4f:	arpl   WORD PTR [ebx],si
  40cc51:	push   ebp
  40cc52:	mov    edx,0xfe22c101
  40cc57:	out    0xbd,eax
  40cc59:	pop    ebp
  40cc5a:	inc    esp
  40cc5b:	ror    BYTE PTR [esi],1
  40cc5d:	dec    ecx
  40cc5e:	xchg   edx,eax
  40cc5f:	inc    ebx
  40cc60:	sub    esi,DWORD PTR [ebp+edi*2+0x13c25bff]
  40cc67:	stos   BYTE PTR es:[edi],al
  40cc68:	jle    0x40ccbf
  40cc6a:	cdq    
  40cc6b:	call   0xe26507c
  40cc70:	cmp    al,0x83
  40cc72:	mov    dh,0x29
  40cc74:	rcr    BYTE PTR [edi+0x3de26a4e],0xba
  40cc7b:	and    eax,0xcd760cc9
  40cc80:	sub    BYTE PTR [edx-0x55],dh
  40cc83:	cli    
  40cc84:	xchg   esp,eax
  40cc85:	and    eax,0xae36ec5a
  40cc8a:	in     eax,0x61
  40cc8c:	jge    0x40cc36
  40cc8e:	mov    eax,0xc6d5e9e5
  40cc93:	dec    ecx
  40cc94:	and    eax,0xa47e9b5c
  40cc99:	es push ecx
  40cc9b:	repz mov bl,0x7b
  40cc9e:	lods   eax,DWORD PTR ds:[esi]
  40cc9f:	jmp    0x40cca3
  40cca1:	mov    eax,ds:0xe2672b90
  40cca6:	push   ebp
  40cca7:	or     ebx,ecx
  40cca9:	jg     0x40cd17
  40ccab:	add    DWORD PTR [edi-0x5e],ebx
  40ccae:	ds add esi,ebx
  40ccb1:	js     0x40ccc5
  40ccb3:	mov    eax,ds:0x5634c1be
  40ccb8:	daa    
  40ccb9:	ja     0x40cc80
  40ccbb:	enter  0x60cd,0xb8
  40ccbf:	push   edx
  40ccc0:	add    cl,BYTE PTR [ecx+ebp*2+0x54]
  40ccc4:	xor    dl,bl
  40ccc6:	xchg   ecx,eax
  40ccc7:	mov    cl,0xe8
  40ccc9:	int3   
  40ccca:	test   eax,0xa96834f4
  40cccf:	and    dl,BYTE PTR [ebp-0x64cfac99]
  40ccd5:	lock add DWORD PTR [eax],edx
  40ccd8:	push   es
  40ccd9:	lods   eax,DWORD PTR ds:[esi]
  40ccda:	inc    ecx
  40ccdb:	inc    BYTE PTR [edx]
  40ccdd:	mov    ecx,0xfce30faa
  40cce2:	test   al,0xfd
  40cce4:	ins    DWORD PTR es:[edi],dx
  40cce5:	and    BYTE PTR [eax-0x7155a86c],cl
  40cceb:	scas   eax,DWORD PTR es:[edi]
  40ccec:	(bad)  [esi-0x653f8bdf]
  40ccf2:	xchg   edi,eax
  40ccf3:	push   ss
  40ccf4:	sub    ebp,eax
  40ccf6:	xchg   DWORD PTR [bp+di+0x7c],ecx
  40ccfa:	mov    ah,0x6
  40ccfc:	add    BYTE PTR [ebp-0x4b],dh
  40ccff:	fisubr WORD PTR fs:[ebp-0x5e1df0e2]
  40cd06:	pushf  
  40cd07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd08:	and    al,0x18
  40cd0a:	fsubr  DWORD PTR [edi+0x5908438e]
  40cd10:	popf   
  40cd11:	lods   al,BYTE PTR ds:[esi]
  40cd12:	retf   
  40cd13:	pop    esi
  40cd14:	retf   
  40cd15:	pop    edi
  40cd16:	fwait
  40cd17:	xchg   ebp,eax
  40cd18:	adc    BYTE PTR [esi+0x729c8fb1],dl
  40cd1e:	imul   edi,edi,0x64cb9e44
  40cd24:	out    dx,al
  40cd25:	bound  ecx,QWORD PTR [ebx*4+0x359734cb]
  40cd2c:	jl     0x40cd96
  40cd2e:	xchg   edi,eax
  40cd2f:	int3   
  40cd30:	mov    al,ds:0xbc3ca8bc
  40cd35:	cmp    eax,0xb60bb453
  40cd3a:	adc    DWORD PTR [eax-0x327d241c],esp
  40cd40:	adc    BYTE PTR [ebp+0x52],dl
  40cd43:	stos   BYTE PTR es:[edi],al
  40cd44:	addr16 or eax,0x204f1c24
  40cd4a:	sub    ebx,esp
  40cd4c:	iret   
  40cd4d:	sbb    eax,0xd67a93c6
  40cd52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd53:	pushf  
  40cd54:	mov    dl,0x74
  40cd56:	jnp    0x40ccfb
  40cd58:	push   edi
  40cd59:	adc    al,0xa
  40cd5b:	repnz push ss
  40cd5d:	repnz call 0x9aa1:0xbc8ecfcc
  40cd65:	mov    ebx,0x8c05fef0
  40cd6a:	rcr    bh,1
  40cd6c:	pop    ds
  40cd6d:	aaa    
  40cd6e:	dec    ebx
  40cd6f:	cmp    eax,0x4761a24
  40cd74:	mov    bh,0x57
  40cd76:	ret    0xcb61
  40cd79:	loope  0x40cde1
  40cd7b:	int3   
  40cd7c:	mov    edi,0x68c5f9a9
  40cd81:	inc    eax
  40cd82:	into   
  40cd83:	xor    eax,0x618c2a48
  40cd88:	in     eax,0xe
  40cd8a:	add    dh,BYTE PTR [ebp+0x4a9341dc]
  40cd90:	push   esp
  40cd91:	jo     0x40ce0d
  40cd93:	adc    cl,dl
  40cd95:	in     eax,dx
  40cd96:	dec    bh
  40cd98:	cdq    
  40cd99:	push   eax
  40cd9a:	sbb    al,BYTE PTR [edx+0x35]
  40cd9d:	and    ebx,DWORD PTR [edx-0x1]
  40cda0:	add    eax,0xc5dbf62b
  40cda5:	aaa    
  40cda6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cda7:	and    eax,0x647ccac8
  40cdac:	fild   DWORD PTR [ecx]
  40cdae:	outs   dx,DWORD PTR ds:[esi]
  40cdaf:	repnz and al,0x79
  40cdb2:	jmp    0x40cdba
  40cdb4:	sahf   
  40cdb5:	and    al,0x61
  40cdb7:	sub    DWORD PTR [esi-0xc407c1b],edi
  40cdbd:	lock sbb dh,BYTE PTR [edx-0xb]
  40cdc1:	stc    
  40cdc2:	lock add al,dl
  40cdc5:	test   DWORD PTR [ecx],ecx
  40cdc7:	test   al,0xb3
  40cdc9:	ret    
  40cdca:	loop   0x40cd50
  40cdcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdcd:	push   eax
  40cdce:	icebp  
  40cdcf:	loop   0x40ce2b
  40cdd1:	push   ebx
  40cdd2:	imul   edi,ecx,0x11
  40cdd5:	call   0x1cf8b66e
  40cdda:	mov    eax,ds:0x656e2574
  40cddf:	into   
  40cde0:	push   edx
  40cde1:	jmp    0x8fd3:0xf30de078
  40cde8:	mov    bl,BYTE PTR [ecx+0x34]
  40cdeb:	cmp    BYTE PTR [eax+esi*8+0x7dd1ef56],al
  40cdf2:	mov    ds,WORD PTR [ebp-0x3843d4da]
  40cdf8:	xor    DWORD PTR [esi+edx*8],esi
  40cdfb:	xchg   BYTE PTR [edx-0x5ae598b1],cl
  40ce01:	jae    0x40ce26
  40ce03:	out    0xba,al
  40ce05:	pop    edi
  40ce06:	cmp    DWORD PTR [ebp-0x6467d8cb],0x49dfbdff
  40ce10:	cmp    ah,BYTE PTR [edx+0x6c]
  40ce13:	das    
  40ce14:	or     edx,DWORD PTR [ecx+0x38]
  40ce17:	cmp    bl,BYTE PTR [ebp-0x1f]
  40ce1a:	dec    edi
  40ce1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce1c:	adc    eax,0x9022f3ca
  40ce21:	popf   
  40ce22:	cmp    al,bh
  40ce24:	push   esp
  40ce25:	push   ds
  40ce26:	int3   
  40ce27:	(bad)  [edi+0x4e]
  40ce2a:	xchg   cl,bh
  40ce2c:	stos   DWORD PTR es:[edi],eax
  40ce2d:	lds    edi,FWORD PTR [ebp-0x10d69efb]
  40ce33:	mov    ah,0x6a
  40ce35:	mov    ah,0x14
  40ce37:	cmp    al,0xb3
  40ce39:	cmp    edx,eax
  40ce3b:	dec    esp
  40ce3c:	jecxz  0x40ce2e
  40ce3e:	in     al,0xd8
  40ce40:	push   es
  40ce41:	test   BYTE PTR [ebx],dh
  40ce43:	add    esi,DWORD PTR [eax+ecx*1]
  40ce46:	ins    BYTE PTR es:[edi],dx
  40ce47:	cmp    DWORD PTR [ecx-0x23fc1573],eax
  40ce4d:	cs pop esp
  40ce4f:	hlt    
  40ce50:	mov    ?,WORD PTR [edi+0x34]
  40ce53:	stos   BYTE PTR es:[edi],al
  40ce54:	mov    ?,eax
  40ce56:	out    dx,eax
  40ce57:	fld    st(4)
  40ce59:	add    al,0xe0
  40ce5b:	(bad)  
  40ce5c:	jg     0x40ce84
  40ce5e:	pop    ss
  40ce5f:	mov    cl,al
  40ce61:	js     0x40ce5e
  40ce63:	cmp    eax,0x908c8115
  40ce68:	rep outs dx,DWORD PTR ds:[esi]
  40ce6a:	into   
  40ce6b:	loopne 0x40ce7f
  40ce6d:	data16 aas 
  40ce6f:	lea    ecx,[eax-0x1dd06172]
  40ce75:	xor    BYTE PTR [esi],ch
  40ce77:	sbb    eax,0xc970e654
  40ce7c:	mov    edi,esi
  40ce7e:	jecxz  0x40ced6
  40ce80:	jno    0x40ceab
  40ce82:	fld    DWORD PTR [edx-0x70f0b411]
  40ce88:	mov    edx,0x95c1a808
  40ce8d:	fwait
  40ce8e:	sbb    BYTE PTR [ebx+edi*4],bl
  40ce91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce92:	aad    0x2e
  40ce94:	and    DWORD PTR [edx],edx
  40ce96:	push   0x1628b70e
  40ce9b:	ins    BYTE PTR es:[edi],dx
  40ce9c:	jecxz  0x40cefe
  40ce9e:	dec    ebp
  40ce9f:	fld    QWORD PTR [ebp-0x1f]
  40cea2:	retf   0x6d09
  40cea5:	dec    esi
  40cea6:	js     0x40ce84
  40cea8:	inc    ebx
  40cea9:	and    ah,ah
  40ceab:	pop    ss
  40ceac:	mov    ah,0xbe
  40ceae:	pop    ecx
  40ceaf:	fstp   QWORD PTR [ebx-0x2f4098e1]
  40ceb5:	mov    bl,0xdb
  40ceb7:	mov    al,0x51
  40ceb9:	ffree  st(0)
  40cebb:	xchg   ah,cl
  40cebd:	in     eax,dx
  40cebe:	adc    al,0x4a
  40cec0:	rol    dh,cl
  40cec2:	sbb    al,0x1d
  40cec4:	adc    BYTE PTR [edx+0x19411120],0x43
  40cecb:	bound  esi,QWORD PTR [edx-0x432d8410]
  40ced1:	lock cs push ebx
  40ced4:	test   BYTE PTR [ebx],bh
  40ced6:	lods   al,BYTE PTR ds:[esi]
  40ced7:	out    dx,al
  40ced8:	add    eax,0x2d06885e
  40cedd:	popa   
  40cede:	in     al,dx
  40cedf:	mul    al
  40cee1:	ins    BYTE PTR es:[edi],dx
  40cee2:	sub    al,0x39
  40cee4:	and    BYTE PTR [ebx+0x2fd8c0e6],bh
  40ceea:	jno    0x40cf5f
  40ceec:	jge    0x40ce82
  40ceee:	fucomp st(3)
  40cef0:	adc    dl,cl
  40cef2:	add    eax,DWORD PTR [edi-0x6af1c6b0]
  40cef8:	dec    esi
  40cef9:	or     al,0x96
  40cefb:	xchg   edx,eax
  40cefc:	jae    0x40ce7e
  40cefe:	adc    DWORD PTR [edi],ebx
  40cf00:	nop
  40cf01:	mov    bh,0x72
  40cf03:	sub    dh,BYTE PTR [esi]
  40cf05:	call   0x8b3f:0x8ba77fdc
  40cf0c:	mov    ds:0x4c5871af,eax
  40cf11:	adc    BYTE PTR [ecx+0x2d7222d2],dh
  40cf17:	or     bh,dl
  40cf19:	adc    DWORD PTR [ecx+edi*8+0x75],0x1f
  40cf1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf1f:	fiadd  WORD PTR [edx]
  40cf21:	sbb    DWORD PTR ds:0x94f38600,0x5c
  40cf28:	pop    ecx
  40cf29:	lea    esp,ds:0x11af4acd
  40cf2f:	out    dx,eax
  40cf30:	push   esi
  40cf31:	xchg   esi,eax
  40cf32:	push   ecx
  40cf33:	xchg   esp,eax
  40cf34:	dec    eax
  40cf35:	xor    al,0x73
  40cf37:	shr    DWORD PTR [edi+0x12],0x2d
  40cf3b:	dec    eax
  40cf3c:	ror    BYTE PTR [ecx],cl
  40cf3e:	loope  0x40cee3
  40cf40:	daa    
  40cf41:	cwde   
  40cf42:	popf   
  40cf43:	fnclex 
  40cf45:	pop    ebx
  40cf46:	into   
  40cf47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf48:	retf   0x6425
  40cf4b:	(bad)  
  40cf4c:	dec    esi
  40cf4d:	inc    edi
  40cf4e:	push   ebx
  40cf4f:	scas   eax,DWORD PTR es:[edi]
  40cf50:	jno    0x40cfc4
  40cf52:	or     al,0xfe
  40cf54:	sbb    eax,0x7e4b007b
  40cf59:	and    dh,BYTE PTR ds:0xce59aff2
  40cf5f:	xor    BYTE PTR [ecx-0x66],0x9a
  40cf63:	in     eax,dx
  40cf64:	ins    BYTE PTR es:[edi],dx
  40cf65:	dec    eax
  40cf66:	mov    edx,0xa09c5a5c
  40cf6b:	jg     0x40cf73
  40cf6d:	lods   eax,DWORD PTR ds:[esi]
  40cf6e:	(bad)  
  40cf6f:	cmp    al,0xac
  40cf71:	push   0x25
  40cf73:	inc    ebx
  40cf74:	pop    edi
  40cf75:	call   0x8028:0x20bd843d
  40cf7c:	ins    BYTE PTR es:[edi],dx
  40cf7d:	dec    edx
  40cf7e:	add    esp,ecx
  40cf80:	in     eax,dx
  40cf81:	enter  0x7966,0x20
  40cf85:	es mov eax,0xf9b52d3
  40cf8b:	cmp    BYTE PTR [ebx-0x6610bcc],0x60
  40cf92:	mov    ebp,DWORD PTR [edi-0x3c]
  40cf95:	cmc    
  40cf96:	or     ebx,DWORD PTR [ebp+0x1764a079]
  40cf9c:	cs jo  0x40cfe0
  40cf9f:	std    
  40cfa0:	xchg   DWORD PTR [edx+0x7decfa11],ebp
  40cfa6:	xchg   edi,eax
  40cfa7:	adc    BYTE PTR [eax+ecx*8],ch
  40cfaa:	ffreep st(0)
  40cfac:	xchg   esp,eax
  40cfad:	sti    
  40cfae:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfb0:	(bad)  
  40cfb1:	xor    ch,BYTE PTR [ebp-0x3f23aeb9]
  40cfb7:	mov    ds:0xb391f3b4,eax
  40cfbc:	sub    al,0x64
  40cfbe:	mov    edx,0x2bff24af
  40cfc3:	test   BYTE PTR [eax],bh
  40cfc5:	retf   0xfe39
  40cfc8:	sub    eax,0x9ac4968d
  40cfcd:	sub    bh,cl
  40cfcf:	ds xor cl,0xa3
  40cfd3:	fisubr DWORD PTR [edx-0x1357b514]
  40cfd9:	xor    eax,0xebca8fdb
  40cfde:	lds    ecx,FWORD PTR [eax-0x2e]
  40cfe1:	lock lea ecx,[edi]
  40cfe4:	das    
  40cfe5:	ins    DWORD PTR es:[edi],dx
  40cfe6:	pusha  
  40cfe7:	sub    al,0xcd
  40cfe9:	hlt    
  40cfea:	push   es
  40cfeb:	neg    DWORD PTR [ebp-0x48f8fcc6]
  40cff1:	sub    bh,BYTE PTR [eax+eiz*4-0x1f]
  40cff5:	jg     0x40d017
  40cff7:	in     al,0xa5
  40cff9:	aaa    
  40cffa:	stos   DWORD PTR es:[edi],eax
  40cffb:	pop    es
  40cffc:	fdiv   st(6),st
  40cffe:	mov    BYTE PTR [edx+0x27],0x19
  40d002:	bound  ebx,QWORD PTR [ebp+0x31]
  40d005:	repnz pop ebp
  40d007:	loop   0x40cffe
  40d009:	arpl   si,dx
  40d00b:	test   BYTE PTR [ebp-0x41],0xfb
  40d00f:	add    eax,0x50d69e14
  40d014:	push   esi
  40d015:	shl    BYTE PTR [edi+eax*8+0x6051a5d1],1
  40d01c:	addr16 mov ecx,0xaf286975
  40d022:	(bad)  
  40d023:	retf   
  40d024:	mov    bh,dl
  40d026:	mov    DWORD PTR [esi+eax*2+0x33],esp
  40d02a:	fdivr  DWORD PTR [ebx+0x78]
  40d02d:	gs inc eax
  40d02f:	adc    eax,0x1d1609f3
  40d034:	xchg   BYTE PTR [edx-0x16],dh
  40d037:	stos   DWORD PTR es:[edi],eax
  40d038:	push   eax
  40d039:	xor    eax,ebx
  40d03b:	mov    ah,0x88
  40d03d:	test   esi,eax
  40d03f:	mov    ebx,0x10131e32
  40d044:	push   0xffffffcc
  40d046:	out    0xc1,eax
  40d048:	(bad)  
  40d049:	mov    dl,BYTE PTR [edi-0x4b]
  40d04c:	dec    esp
  40d04d:	mov    eax,0x6a5f61f5
  40d052:	sub    DWORD PTR [ebx],ebx
  40d054:	cdq    
  40d055:	es (bad) 
  40d057:	outs   dx,BYTE PTR ds:[esi]
  40d058:	jns    0x40d070
  40d05a:	jns    0x40d0b0
  40d05c:	lock inc esi
  40d05e:	cmp    DWORD PTR [ebx-0x46a0e436],eax
  40d064:	push   esp
  40d065:	mov    ?,ecx
  40d067:	pusha  
  40d068:	shl    DWORD PTR [edx-0x1e],0x57
  40d06c:	out    0x47,eax
  40d06e:	int3   
  40d06f:	sub    DWORD PTR [esi+0xd20c66f],edx
  40d075:	popa   
  40d076:	ret    0x820c
  40d079:	sbb    ah,BYTE PTR [ebx+0x3a16c496]
  40d07f:	cwde   
  40d080:	xor    ah,al
  40d082:	and    DWORD PTR [esi*1-0x4df42e46],esi
  40d089:	xchg   ebp,eax
  40d08a:	xchg   edx,eax
  40d08b:	icebp  
  40d08c:	sbb    al,0xcc
  40d08e:	imul   ebx,DWORD PTR [ebx-0x1b0d3c72],0x64d80033
  40d098:	inc    esi
  40d099:	icebp  
  40d09a:	sub    al,0xdc
  40d09c:	and    dl,0xc7
  40d09f:	mov    eax,ds:0xf085d299
  40d0a4:	mov    al,0x5
  40d0a6:	jbe    0x40d0a8
  40d0a8:	fild   QWORD PTR [ebp+eax*4-0x3c]
  40d0ac:	mov    cs,esp
  40d0ae:	outs   dx,DWORD PTR ds:[esi]
  40d0af:	dec    eax
  40d0b0:	pop    edx
  40d0b1:	imul   ebx,ebx,0x7
  40d0b4:	sub    DWORD PTR [esi+0xa27c1ac],edi
  40d0ba:	fs jecxz 0x40d0e4
  40d0bd:	into   
  40d0be:	jmp    0x489c:0xe23a9982
  40d0c5:	(bad)  
  40d0c6:	(bad)  
  40d0c7:	outs   dx,BYTE PTR ds:[esi]
  40d0c8:	cmp    DWORD PTR [edi],edx
  40d0ca:	xlat   BYTE PTR ds:[ebx]
  40d0cb:	addr16 jmp 0x736f29a0
  40d0d1:	push   ds
  40d0d2:	into   
  40d0d3:	push   edx
  40d0d4:	stc    
  40d0d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0d6:	dec    esp
  40d0d7:	adc    edx,DWORD PTR [ecx-0x7de7dc6d]
  40d0dd:	mov    edi,0x462040fa
  40d0e2:	or     ebx,edi
  40d0e4:	icebp  
  40d0e5:	xor    BYTE PTR [ebx+ebp*1-0x356ea9d8],0x7b
  40d0ed:	and    BYTE PTR [esi],dh
  40d0ef:	das    
  40d0f0:	mov    eax,0x4c384db3
  40d0f5:	popf   
  40d0f6:	outs   dx,DWORD PTR ds:[esi]
  40d0f7:	cmp    dh,BYTE PTR [eax+ecx*8+0x7e0f011a]
  40d0fe:	push   cs
  40d0ff:	mov    ebp,0x6174424d
  40d104:	imul   ecx,DWORD PTR [ecx-0x21],0xdb99435c
  40d10b:	dec    edx
  40d10c:	mov    ds:0x74129bd6,eax
  40d111:	(bad)  
  40d112:	in     al,0x9c
  40d114:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d115:	dec    esi
  40d116:	into   
  40d117:	bound  ecx,QWORD PTR [edx+0x7e]
  40d11a:	and    BYTE PTR [ecx+0x31],bh
  40d11d:	jg     0x40d0a7
  40d11f:	popf   
  40d120:	mov    ds:0xd56e08a,eax
  40d125:	enter  0x2772,0x7f
  40d129:	pop    ds
  40d12a:	jns    0x40d199
  40d12c:	jbe    0x40d1ac
  40d12e:	jno    0x40d0b6
  40d130:	mov    al,0x59
  40d132:	xchg   BYTE PTR [ecx-0x1f45cb84],bl
  40d138:	add    DWORD PTR [edi],ebp
  40d13a:	add    bl,BYTE PTR [esi-0x70490563]
  40d140:	xchg   esp,eax
  40d141:	cmp    bl,0x3f
  40d144:	dec    esp
  40d145:	or     al,0x3a
  40d147:	mov    DWORD PTR [esi+0x384b8599],edi
  40d14d:	inc    edi
  40d14e:	test   al,0x65
  40d150:	test   al,0x2c
  40d152:	pop    ebp
  40d153:	xchg   edi,eax
  40d154:	sub    eax,0x29ffdafc
  40d159:	cdq    
  40d15a:	xor    eax,0x35bbacdb
  40d15f:	sub    BYTE PTR [esi],ah
  40d161:	pushf  
  40d162:	pop    ecx
  40d163:	lea    esi,[ecx+ecx*8]
  40d166:	lahf   
  40d167:	push   0x11afa538
  40d16c:	call   0xb759:0x8aaf
  40d172:	adc    BYTE PTR [ebx-0x11213e4a],0x61
  40d179:	dec    edi
  40d17a:	sub    ch,dh
  40d17c:	dec    esi
  40d17d:	aaa    
  40d17e:	lea    edx,[edi+0x28]
  40d181:	xor    al,0xef
  40d183:	fimul  WORD PTR [esi]
  40d185:	dec    edi
  40d186:	ficomp DWORD PTR [ecx+0x15]
  40d189:	(bad)  
  40d18a:	mov    esp,DWORD PTR [esi-0x2d]
  40d18d:	aas    
  40d18e:	xchg   BYTE PTR [ebx+0xaa5de4a],bh
  40d194:	xor    esp,eax
  40d196:	ins    BYTE PTR es:[edi],dx
  40d197:	mov    esp,0x80fc213a
  40d19c:	dec    eax
  40d19d:	fdiv   st,st(1)
  40d19f:	xor    bh,BYTE PTR [edx-0x2e1c2132]
  40d1a5:	ud1    edi,DWORD PTR [ebp-0x6591e97e]
  40d1ac:	nop
  40d1ad:	scas   eax,DWORD PTR es:[edi]
  40d1ae:	add    al,0x2f
  40d1b0:	fisttp DWORD PTR [edx-0x48]
  40d1b3:	xor    eax,0x30bf79e9
  40d1b8:	jae    0x40d144
  40d1ba:	inc    eax
  40d1bb:	jae    0x40d15d
  40d1bd:	retf   0xf0dd
  40d1c0:	mov    esp,0x2e636cee
  40d1c5:	cli    
  40d1c6:	dec    ebx
  40d1c7:	call   0x6234:0xd5c70fdc
  40d1ce:	jl     0x40d20c
  40d1d0:	and    bh,BYTE PTR [edx-0x18]
  40d1d3:	lods   eax,DWORD PTR ds:[esi]
  40d1d4:	add    al,0xf5
  40d1d6:	mov    bl,0x79
  40d1d8:	fild   DWORD PTR [ebp-0x63]
  40d1db:	xor    al,0x45
  40d1dd:	push   esp
  40d1de:	mov    dl,0x89
  40d1e0:	ret    
  40d1e1:	into   
  40d1e2:	scas   al,BYTE PTR es:[edi]
  40d1e3:	mov    esi,0x70856f19
  40d1e8:	shl    BYTE PTR ds:0x11a4ac21,1
  40d1ee:	clc    
  40d1ef:	popa   
  40d1f0:	lea    eax,[ecx+ebp*4-0xe56e981]
  40d1f7:	xchg   ebx,eax
  40d1f8:	aaa    
  40d1f9:	mov    bl,0xb6
  40d1fb:	popa   
  40d1fc:	icebp  
  40d1fd:	je     0x40d206
  40d1ff:	ins    DWORD PTR es:[edi],dx
  40d200:	outs   dx,DWORD PTR ds:[esi]
  40d201:	(bad)
  40d204:	aam    0x1
  40d206:	xor    bl,BYTE PTR [ebx+0x5c]
  40d209:	mov    ah,0xc5
  40d20b:	add    eax,0x5a948206
  40d210:	xchg   ebx,eax
  40d211:	dec    esp
  40d212:	pusha  
  40d213:	add    al,0x8d
  40d215:	stos   BYTE PTR es:[edi],al
  40d216:	adc    DWORD PTR [ecx],esi
  40d218:	pop    es
  40d219:	popf   
  40d21a:	and    BYTE PTR [eax-0x3e],0x17
  40d21e:	push   edi
  40d21f:	loope  0x40d256
  40d221:	aad    0x1f
  40d223:	adc    ebx,edi
  40d225:	mov    dl,BYTE PTR [ecx]
  40d227:	cmc    
  40d228:	arpl   WORD PTR [ebp-0x17],si
  40d22b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d22c:	neg    DWORD PTR [ecx+0x23f4256e]
  40d232:	lahf   
  40d233:	push   ss
  40d234:	mov    eax,ds:0x92b08931
  40d239:	rcr    DWORD PTR [ecx+0x41],1
  40d23c:	and    DWORD PTR [ecx-0x43],eax
  40d23f:	lods   eax,DWORD PTR ds:[esi]
  40d240:	stc    
  40d241:	sub    DWORD PTR [ebp-0x34],0x418168bd
  40d248:	or     DWORD PTR [edi+0x50062da8],0x54
  40d24f:	sub    bh,BYTE PTR [edx-0x6cdab65b]
  40d255:	pop    esp
  40d256:	dec    esi
  40d257:	mov    eax,0xc2bff1fc
  40d25c:	or     BYTE PTR ds:0xa5cccf5f,al
  40d262:	fdivr  DWORD PTR [ebx]
  40d264:	test   eax,0x86fc964d
  40d269:	dec    ebp
  40d26a:	sahf   
  40d26b:	(bad)  
  40d26c:	pop    ebx
  40d26d:	xor    dl,BYTE PTR [ebx]
  40d26f:	mov    dh,0x92
  40d272:	cs inc ebp
  40d274:	push   esp
  40d275:	mov    esi,0xb5ab9ae0
  40d27a:	jmp    0x9a82:0xe24dcd03
  40d281:	or     eax,0x3e595ab5
  40d286:	inc    esp
  40d287:	popf   
  40d288:	jmp    0x4ba694e6
  40d28d:	loopne 0x40d25a
  40d28f:	cmp    esp,ecx
  40d291:	sub    al,0x85
  40d293:	jnp    0x40d22d
  40d295:	ss jo  0x40d257
  40d298:	fcmovb st,st(0)
  40d29a:	in     al,0x2c
  40d29c:	add    eax,0x68ce3b2b
  40d2a1:	addr16 mov ebp,0x98e6484e
  40d2a7:	aam    0xaa
  40d2a9:	js     0x40d2c5
  40d2ab:	jmp    0xfb375240
  40d2b0:	cwde   
  40d2b1:	mov    ch,0xff
  40d2b3:	jecxz  0x40d307
  40d2b5:	out    0xad,al
  40d2b7:	mov    ch,0x88
  40d2b9:	outs   dx,BYTE PTR ds:[esi]
  40d2ba:	cdq    
  40d2bb:	xlat   BYTE PTR ds:[ebx]
  40d2bc:	fst    DWORD PTR [esi-0x7fd6dddc]
  40d2c2:	mov    edi,0x40e0230
  40d2c7:	icebp  
  40d2c8:	pop    edi
  40d2c9:	sub    ah,BYTE PTR [ecx]
  40d2cb:	push   ebx
  40d2cc:	push   eax
  40d2cd:	dec    edi
  40d2ce:	mov    DWORD PTR [ebx+0x58],ebp
  40d2d1:	call   0x8582:0x69ac09c1
  40d2d8:	shr    eax,0x38
  40d2db:	out    0x18,eax
  40d2dd:	pop    esi
  40d2de:	ret    
  40d2df:	or     DWORD PTR [edi-0x52160fba],ebx
  40d2e5:	mov    BYTE PTR [ebp+0x462a775],ch
  40d2eb:	adc    BYTE PTR [eax+ecx*4+0x3f16e657],bl
  40d2f2:	pop    esi
  40d2f3:	dec    esi
  40d2f4:	loope  0x40d297
  40d2f6:	sbb    al,0x8d
  40d2f8:	jge    0x40d2cb
  40d2fa:	mov    eax,0x8bab760e
  40d2ff:	dec    ebp
  40d300:	mov    al,ds:0x5a24fc1
  40d305:	pop    ecx
  40d306:	push   esi
  40d307:	mov    dh,0x51
  40d309:	ja     0x40d2e8
  40d30b:	mov    dl,0x6c
  40d30d:	repz in eax,0xe
  40d310:	and    DWORD PTR [ebx],eax
  40d312:	adc    DWORD PTR [ebx+0x6c],ebp
  40d315:	mov    ecx,0x1deda555
  40d31a:	sub    DWORD PTR [ecx-0x663b32d5],ebp
  40d320:	fcomp  DWORD PTR [eax+0x66e7c4a6]
  40d326:	sub    bl,BYTE PTR [ebx+0x5c]
  40d329:	inc    edx
  40d32a:	jno    0x40d336
  40d32c:	pop    ds
  40d32d:	jno    0x40d347
  40d32f:	ins    DWORD PTR es:[edi],dx
  40d330:	stos   BYTE PTR es:[edi],al
  40d331:	test   al,0x74
  40d333:	mov    ds:0x91c7bf92,al
  40d338:	mov    ds:0xb9968ff0,eax
  40d33d:	gs ret 0xa070
  40d341:	and    al,0x8a
  40d343:	loopne 0x40d3a6
  40d345:	retf   0x4c0
  40d348:	int3   
  40d349:	rol    eax,0xe7
  40d34c:	sahf   
  40d34d:	inc    esp
  40d34e:	dec    DWORD PTR [ebp-0x38027cfe]
  40d354:	ja     0x40d305
  40d356:	ror    BYTE PTR ds:0x490c70cc,cl
  40d35c:	data16 mov bh,0x84
  40d35f:	mov    ebp,0x12084666
  40d364:	push   0xc08d7ffb
  40d369:	cs loop 0x40d348
  40d36c:	idiv   BYTE PTR [edi+ebx*1+0x51e246b8]
  40d373:	inc    ecx
  40d374:	out    dx,eax
  40d375:	jg     0x40d313
  40d377:	cmp    DWORD PTR [esi+0x53c01f5f],ebp
  40d37d:	pop    ds
  40d37e:	js     0x40d36b
  40d380:	sub    eax,0xd12ce577
  40d385:	fisttp QWORD PTR cs:[edi]
  40d388:	outs   dx,BYTE PTR ds:[esi]
  40d389:	bound  ebp,QWORD PTR [edx+0xa52131d]
  40d38f:	stc    
  40d390:	jmp    0x40d393
  40d392:	sub    edi,eax
  40d394:	mov    al,0x9a
  40d396:	fidiv  WORD PTR [eax]
  40d398:	data16 (bad) 
  40d39b:	ins    DWORD PTR es:[edi],dx
  40d39c:	sti    
  40d39d:	scas   al,BYTE PTR es:[edi]
  40d39e:	dec    esi
  40d39f:	fs xor ch,ah
  40d3a2:	and    BYTE PTR [ebx],bh
  40d3a4:	stos   BYTE PTR es:[edi],al
  40d3a5:	adc    eax,0x42bb5c8d
  40d3aa:	leave  
  40d3ab:	stos   DWORD PTR es:[edi],eax
  40d3ac:	sub    BYTE PTR ds:0x61dbede6,bl
  40d3b2:	inc    BYTE PTR ds:0x30d80495
  40d3b8:	mov    esp,DWORD PTR [ecx+ebx*4-0x27]
  40d3bc:	or     eax,0x2c269832
  40d3c1:	repz sub eax,0x5b21b94c
  40d3c7:	adc    BYTE PTR [edx-0x6133bacd],0x29
  40d3ce:	pop    edi
  40d3cf:	add    al,0x5f
  40d3d1:	cmp    BYTE PTR ds:0x8b24c60a,dl
  40d3d7:	push   ebp
  40d3d8:	clc    
  40d3d9:	and    DWORD PTR ds:0x42c008,0x42b004
  40d3e3:	xor    ecx,eax
  40d3e5:	sbb    DWORD PTR ds:0x42c008,0x693a
  40d3ef:	xor    edx,eax
  40d3f1:	adc    DWORD PTR ds:0x42c00c,0x42b014
  40d3fb:	sub    ecx,edx
  40d3fd:	sub    ecx,esi
  40d3ff:	xor    ecx,eax
  40d401:	mov    DWORD PTR [ebp+0x8],ecx
  40d404:	mov    ecx,DWORD PTR [ebp+0x8]
  40d407:	adc    DWORD PTR ds:0x42d010,edi
  40d40d:	mov    edx,DWORD PTR [ebp-0x64]
  40d410:	lea    ecx,[edx+ecx*1+0x5708f4]
  40d417:	sub    DWORD PTR ds:0x42d014,ebx
  40d41d:	mov    DWORD PTR [ebp-0x64],ecx
  40d420:	mov    ecx,DWORD PTR [ebp+0x8]
  40d423:	sub    DWORD PTR ds:0x42a00c,0x429024
  40d42d:	mov    edx,DWORD PTR [ebp-0x60]
  40d430:	lea    ecx,[edx+ecx*1+0x5708f4]
  40d437:	mov    DWORD PTR [ebp-0x60],ecx
  40d43a:	mov    DWORD PTR ds:0x429024,0x1a
  40d444:	cmp    DWORD PTR ds:0x429024,0x0
  40d44b:	je     0x40d498
  40d451:	cmp    DWORD PTR ds:0x429024,0x6
  40d458:	jne    0x40d464
  40d45e:	call   DWORD PTR ds:0x42ed51
  40d464:	cmp    DWORD PTR ds:0x429024,0x7
  40d46b:	jne    0x40d47e
  40d471:	mov    edx,DWORD PTR ds:0x429024
  40d477:	dec    edx
  40d478:	mov    DWORD PTR ds:0x429024,edx
  40d47e:	xor    edx,edx
  40d480:	or     edx,DWORD PTR ds:0x429024
  40d486:	dec    edx
  40d487:	mov    DWORD PTR ds:0x429024,edx
  40d48d:	jmp    0x40d444
  40d492:	or     ecx,DWORD PTR ds:0x429000
  40d498:	mov    ecx,DWORD PTR [ebp+0x8]
  40d49b:	mov    edx,DWORD PTR [ebp-0x5c]
  40d49e:	lea    ecx,[edx+ecx*1+0x5708f3]
  40d4a5:	sub    DWORD PTR ds:0x42c004,edx
  40d4ab:	mov    DWORD PTR [ebp-0x5c],ecx
  40d4ae:	mov    ecx,DWORD PTR [ebp+0x8]
  40d4b1:	mov    edx,DWORD PTR [ebp-0x58]
  40d4b4:	lea    ecx,[edx+ecx*1+0x5708f2]
  40d4bb:	or     DWORD PTR ds:0x42d010,edx
  40d4c1:	mov    DWORD PTR [ebp-0x58],ecx
  40d4c4:	mov    ecx,DWORD PTR [ebp+0x8]
  40d4c7:	xor    edx,edx
  40d4c9:	or     edx,DWORD PTR ds:0x42d00c
  40d4cf:	add    DWORD PTR ds:0x42a008,edx
  40d4d5:	mov    edx,DWORD PTR [ebp-0x54]
  40d4d8:	lea    ecx,[edx+ecx*1+0x5708f1]
  40d4df:	mov    DWORD PTR [ebp-0x54],ecx
  40d4e2:	and    DWORD PTR ds:0x42c014,0x0
  40d4ec:	mov    ecx,DWORD PTR ds:0x42c014
  40d4f2:	inc    ecx
  40d4f3:	mov    DWORD PTR ds:0x42c014,ecx
  40d4f9:	cmp    DWORD PTR ds:0x42c014,0x11
  40d500:	jne    0x40d50c
  40d506:	call   DWORD PTR ds:0x42ed55
  40d50c:	cmp    DWORD PTR ds:0x42c014,0x10
  40d513:	jne    0x40d526
  40d519:	mov    ecx,DWORD PTR ds:0x42c014
  40d51f:	inc    ecx
  40d520:	mov    DWORD PTR ds:0x42c014,ecx
  40d526:	cmp    DWORD PTR ds:0x42c014,0x1e
  40d52d:	jb     0x40d4ec
  40d533:	mov    ecx,DWORD PTR [ebp+0x8]
  40d536:	mov    DWORD PTR ds:0x42900c,0x421d
  40d540:	mov    edx,DWORD PTR [ebp-0x50]
  40d543:	lea    ecx,[edx+ecx*1+0x5708f0]
  40d54a:	mov    DWORD PTR [ebp-0x50],ecx
  40d54d:	mov    ecx,DWORD PTR [ebp+0x8]
  40d550:	sbb    DWORD PTR ds:0x42c018,0x25ac
  40d55a:	xor    ecx,eax
  40d55c:	or     DWORD PTR ds:0x42d000,0x429014
  40d566:	add    ecx,esi
  40d568:	jne    0x40b007
  40d56e:	mov    DWORD PTR ds:0x42b018,0x1de
  40d578:	jmp    0x40fc3c
  40d57d:	xor    DWORD PTR ds:0x42d010,0x429020
  40d587:	mov    ecx,DWORD PTR [ebp-0x1c]
  40d58a:	xor    edx,edx
  40d58c:	xor    edx,DWORD PTR ds:0x42d014
  40d592:	sbb    DWORD PTR ds:0x42c01c,edx
  40d598:	mov    edx,DWORD PTR [ebp-0x8]
  40d59b:	xor    ecx,eax
  40d59d:	and    DWORD PTR ds:0x429020,0x3910
  40d5a7:	xor    edx,eax
  40d5a9:	and    DWORD PTR ds:0x429004,0x1359
  40d5b3:	sub    ecx,edx
  40d5b5:	sub    ecx,esi
  40d5b7:	xor    ecx,eax
  40d5b9:	mov    DWORD PTR [ebp-0x1c],ecx
  40d5bc:	mov    DWORD PTR ds:0x42a004,0x3dac
  40d5c6:	mov    ecx,DWORD PTR [ebp-0xc]
  40d5c9:	mov    DWORD PTR [ebp+0x8],ecx
  40d5cc:	jmp    0x40d6e6
  40d5d1:	and    DWORD PTR ds:0x429010,0x7fda
  40d5db:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5de:	mov    edx,DWORD PTR [ebp-0x8]
  40d5e1:	mov    DWORD PTR ds:0x42d018,0x16
  40d5eb:	cmp    DWORD PTR ds:0x42d018,0x0
  40d5f2:	je     0x40d654
  40d5f8:	cmp    DWORD PTR ds:0x42d018,0x2
  40d5ff:	jne    0x40d628
  40d605:	push   0x69b5
  40d60a:	push   DWORD PTR [ebp-0x10]
  40d60d:	push   0x429000
  40d612:	push   0x5bc7
  40d617:	push   DWORD PTR [ebp-0x28]
  40d61a:	push   0x68ba
  40d61f:	push   DWORD PTR [ebp-0x24]
  40d622:	call   DWORD PTR ds:0x42ed59
  40d628:	cmp    DWORD PTR ds:0x42d018,0x3
  40d62f:	jne    0x40d642
  40d635:	mov    edi,DWORD PTR ds:0x42d018
  40d63b:	dec    edi
  40d63c:	mov    DWORD PTR ds:0x42d018,edi
  40d642:	mov    edi,DWORD PTR ds:0x42d018
  40d648:	dec    edi
  40d649:	mov    DWORD PTR ds:0x42d018,edi
  40d64f:	jmp    0x40d5eb
  40d654:	xor    ecx,eax
  40d656:	sub    DWORD PTR ds:0x429024,0x443a
  40d660:	xor    edx,eax
  40d662:	not    edi
  40d664:	sub    ecx,edx
  40d666:	sub    ecx,esi
  40d668:	and    DWORD PTR ds:0x42d010,0x0
  40d672:	mov    edx,DWORD PTR ds:0x42d010
  40d678:	inc    edx
  40d679:	mov    DWORD PTR ds:0x42d010,edx
  40d67f:	cmp    DWORD PTR ds:0x42d010,0x5
  40d686:	jne    0x40d69a
  40d68c:	push   DWORD PTR [ebp-0x28]
  40d68f:	push   0x42e110
  40d694:	call   DWORD PTR ds:0x42ed5d
  40d69a:	cmp    DWORD PTR ds:0x42d010,0x4
  40d6a1:	jne    0x40d6b4
  40d6a7:	mov    edx,DWORD PTR ds:0x42d010
  40d6ad:	inc    edx
  40d6ae:	mov    DWORD PTR ds:0x42d010,edx
  40d6b4:	cmp    DWORD PTR ds:0x42d010,0x15
  40d6bb:	jb     0x40d672
  40d6c1:	and    DWORD PTR ds:0x42a018,edx
  40d6c7:	xor    ecx,eax
  40d6c9:	mov    DWORD PTR [ebp+0x8],ecx
  40d6cc:	mov    ecx,DWORD PTR [ebp+0x8]
  40d6cf:	mov    edx,DWORD PTR [ebp+0x8]
  40d6d2:	imul   edx,edx,0x5708f4
  40d6d8:	xor    ecx,eax
  40d6da:	add    ecx,esi
  40d6dc:	lea    ecx,[ebp+ecx*4-0x64]
  40d6e0:	mov    edi,DWORD PTR [ecx]
  40d6e2:	add    edx,edi
  40d6e4:	mov    DWORD PTR [ecx],edx
  40d6e6:	mov    ecx,DWORD PTR [ebp+0x8]
  40d6e9:	xor    ecx,eax
  40d6eb:	add    ecx,esi
  40d6ed:	jne    0x40d5d1
  40d6f3:	mov    ecx,DWORD PTR [ebp-0x20]
  40d6f6:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40d6fd:	mov    dl,BYTE PTR [ebp-0x1]
  40d700:	cmp    cl,dl
  40d702:	je     0x40fb9d
  40d708:	mov    ecx,DWORD PTR [ebp-0x20]
  40d70b:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40d712:	mov    edx,DWORD PTR [ebp+0xc]
  40d715:	cmp    cl,BYTE PTR [edx]
  40d717:	jne    0x40fc4e
  40d71d:	mov    ecx,DWORD PTR [ebp-0x14]
  40d720:	mov    edx,DWORD PTR [ebp+0xc]
  40d723:	movsx  edx,BYTE PTR [edx]
  40d726:	xor    ecx,eax
  40d728:	add    ecx,esi
  40d72a:	cmp    edx,ecx
  40d72c:	mov    ecx,DWORD PTR [ebp-0xc]
  40d72f:	mov    DWORD PTR [ebp+0x8],ecx
  40d732:	mov    ecx,DWORD PTR [ebp+0x8]
  40d735:	je     0x40fcc8
  40d73b:	jmp    0x40fb32
  40d740:	mov    ecx,DWORD PTR [ebp+0x8]
  40d743:	mov    edx,DWORD PTR [ebp-0x8]
  40d746:	xor    ecx,eax
  40d748:	xor    edx,eax
  40d74a:	sub    ecx,edx
  40d74c:	jmp    0x40fb0e
  40d751:	rcl    BYTE PTR [ebx+eiz*2-0x71],1
  40d755:	jecxz  0x40d7ce
  40d757:	je     0x40d754
  40d759:	push   esp
  40d75a:	mov    edi,0xc657b854
  40d75f:	in     eax,0xf5
  40d761:	das    
  40d762:	in     eax,0x78
  40d764:	js     0x40d743
  40d766:	pop    edi
  40d767:	js     0x40d7e1
  40d769:	int3   
  40d76a:	leave  
  40d76b:	sbb    eax,0xb0fd511
  40d770:	lock add esp,ebp
  40d773:	out    0x6b,al
  40d775:	loope  0x40d741
  40d777:	lods   al,BYTE PTR ds:[esi]
  40d778:	and    al,0xfc
  40d77a:	dec    edi
  40d77b:	cmc    
  40d77c:	or     eax,0x8b6a900a
  40d781:	fsub   QWORD PTR [edi+0x40a8e2e0]
  40d787:	mov    ebx,0x37638cb7
  40d78c:	into   
  40d78d:	fdivr  st,st(7)
  40d78f:	jmp    0x40d773
  40d791:	cmp    eax,DWORD PTR [ebp-0x76a51fe]
  40d797:	frstor ds:0x674108e8
  40d79d:	cmp    al,0x22
  40d79f:	(bad)  
  40d7a0:	ins    BYTE PTR es:[edi],dx
  40d7a1:	dec    ecx
  40d7a2:	int    0xa
  40d7a4:	outs   dx,DWORD PTR ds:[esi]
  40d7a5:	cmp    al,0x53
  40d7a7:	out    0x4a,eax
  40d7a9:	ret    
  40d7aa:	mov    DWORD PTR [esi+0x72d93433],edx
  40d7b0:	and    al,BYTE PTR [ebx]
  40d7b2:	cs mov esp,0xd26112ba
  40d7b8:	stos   DWORD PTR es:[edi],eax
  40d7b9:	popf   
  40d7ba:	pusha  
  40d7bb:	xor    DWORD PTR [esi],esp
  40d7bd:	dec    edx
  40d7be:	dec    eax
  40d7bf:	(bad)  
  40d7c1:	xchg   ecx,ebp
  40d7c3:	jbe    0x40d7bd
  40d7c5:	fld    QWORD PTR [ecx]
  40d7c7:	dec    esp
  40d7c8:	paddusw mm2,QWORD PTR [ebp-0x77]
  40d7cc:	out    0xdf,eax
  40d7ce:	in     eax,dx
  40d7cf:	push   0x76
  40d7d1:	cmp    ah,bl
  40d7d3:	popa   
  40d7d4:	mov    ecx,0x3cb2e906
  40d7d9:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40d7db:	aas    
  40d7dc:	mov    ebp,0x9e4381e
  40d7e1:	mov    esp,0x11b23dca
  40d7e6:	ror    BYTE PTR [ecx],0x12
  40d7e9:	dec    eax
  40d7ea:	scas   al,BYTE PTR es:[edi]
  40d7eb:	mov    eax,0x61560af9
  40d7f0:	dec    ebp
  40d7f1:	inc    ebp
  40d7f2:	xchg   DWORD PTR [esi],esp
  40d7f4:	ret    
  40d7f5:	xor    BYTE PTR [esi],bh
  40d7f7:	push   ecx
  40d7f8:	xchg   edx,eax
  40d7f9:	inc    ebp
  40d7fa:	pop    ebp
  40d7fb:	inc    ebp
  40d7fc:	popf   
  40d7fd:	and    cl,BYTE PTR [ebx]
  40d7ff:	mov    WORD PTR [ebx],ds
  40d801:	out    dx,eax
  40d802:	adc    esp,DWORD PTR [edi-0x35]
  40d805:	xor    eax,0xd5257a48
  40d80a:	lds    edx,FWORD PTR ds:0xa631bb08
  40d810:	daa    
  40d811:	test   DWORD PTR [ebp+0x49ceac13],edi
  40d817:	rcr    BYTE PTR [edx-0x39],1
  40d81a:	dec    ebx
  40d81b:	pop    edi
  40d81c:	push   es
  40d81d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d81e:	xor    eax,0x54893548
  40d823:	jno    0x40d8a2
  40d825:	inc    esi
  40d826:	hlt    
  40d827:	sbb    DWORD PTR ds:0xfa94fe9,0x5f
  40d82e:	jmp    0x45708422
  40d833:	gs dec eax
  40d835:	loope  0x40d7d7
  40d837:	jmp    0x53257aea
  40d83c:	pushf  
  40d83d:	sub    bh,BYTE PTR [edi+0x6e]
  40d840:	or     ebp,esp
  40d842:	mov    al,0x59
  40d844:	push   0xffffffb7
  40d846:	adc    dh,dl
  40d848:	int3   
  40d849:	je     0x40d87c
  40d84b:	fisttp DWORD PTR [eax+0x6d]
  40d84e:	fiadd  WORD PTR [esp+ebp*4]
  40d851:	sbb    eax,0x15275e2f
  40d856:	sti    
  40d857:	ds mov ch,0x8c
  40d85a:	mov    esi,esi
  40d85c:	add    BYTE PTR [edi+esi*1-0x2],0xb7
  40d861:	ins    BYTE PTR es:[edi],dx
  40d862:	sbb    BYTE PTR [edx],0xe2
  40d865:	or     BYTE PTR [eax-0x4b8fc575],cl
  40d86b:	mov    ds:0xa4ee5e56,eax
  40d870:	ins    DWORD PTR es:[edi],dx
  40d871:	out    dx,eax
  40d872:	and    ecx,DWORD PTR [ebx+0x10]
  40d875:	popf   
  40d876:	xchg   ebp,eax
  40d877:	push   0x5d
  40d879:	dec    ecx
  40d87a:	xor    al,0xfd
  40d87c:	cmp    DWORD PTR [esi],esi
  40d87e:	xchg   DWORD PTR ds:[ebp-0x63],edx
  40d882:	mov    ah,0xbf
  40d884:	outs   dx,BYTE PTR ds:[esi]
  40d885:	es fcomip st,st(4)
  40d888:	out    dx,eax
  40d889:	jb     0x40d892
  40d88b:	xchg   ecx,eax
  40d88c:	adc    dh,BYTE PTR [edx+0x25]
  40d88f:	inc    edi
  40d890:	outs   dx,DWORD PTR ds:[esi]
  40d891:	jne    0x40d843
  40d893:	jne    0x40d8d1
  40d895:	fadd   st(3),st
  40d897:	test   ebx,esi
  40d899:	pop    ecx
  40d89a:	mov    DWORD PTR [ebx+0x23],eax
  40d89d:	popa   
  40d89e:	push   ds
  40d89f:	cmp    esi,DWORD PTR [ebp+0x4f3fb611]
  40d8a5:	push   cs
  40d8a6:	adc    eax,DWORD PTR [esi-0x35]
  40d8a9:	js     0x40d859
  40d8ab:	sbb    ah,bl
  40d8ad:	mov    ch,BYTE PTR [ebx+0x5e31c8a5]
  40d8b3:	test   eax,0xc7c1cc79
  40d8b8:	inc    eax
  40d8b9:	shl    DWORD PTR [eax],1
  40d8bb:	push   ds
  40d8bc:	test   esi,eax
  40d8be:	and    al,0x6
  40d8c0:	cwde   
  40d8c1:	cmp    cl,BYTE PTR [eax-0x5]
  40d8c4:	or     al,0x13
  40d8c6:	loopne 0x40d943
  40d8c8:	push   ds
  40d8c9:	cwde   
  40d8ca:	dec    ecx
  40d8cb:	mov    esp,fs
  40d8cd:	cwde   
  40d8ce:	fistp  QWORD PTR [edi+0x5b]
  40d8d1:	sbb    ch,BYTE PTR [ecx+0x9603fb5]
  40d8d7:	cdq    
  40d8d8:	or     edx,DWORD PTR [eax*4-0x2dd11b6f]
  40d8df:	pop    edx
  40d8e0:	pop    edx
  40d8e1:	outs   dx,DWORD PTR ds:[esi]
  40d8e2:	jae    0x40d902
  40d8e4:	test   eax,0x30721765
  40d8e9:	daa    
  40d8ea:	mov    ebx,0x6ae51437
  40d8ef:	lods   eax,DWORD PTR ds:[esi]
  40d8f0:	cwde   
  40d8f1:	fdivp  st(3),st
  40d8f3:	xchg   esi,eax
  40d8f4:	(bad)  
  40d8f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8f6:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40d8f8:	cmp    bl,BYTE PTR [ebp+0x2462a037]
  40d8fe:	mov    al,0xe5
  40d900:	fnstsw WORD PTR [ecx-0x79]
  40d903:	mov    edi,0xd1db3c8a
  40d908:	jge    0x40d943
  40d90a:	dec    ecx
  40d90b:	xor    dh,BYTE PTR [eax-0x64cc7947]
  40d911:	dec    ebx
  40d912:	sub    BYTE PTR [ebp+edi*1+0x59],al
  40d916:	(bad)  
  40d917:	mov    DWORD PTR [edx+esi*4+0x23],esp
  40d91b:	xor    eax,0x2399e990
  40d920:	(bad)  
  40d922:	lea    ecx,[ebx+0x4261e34f]
  40d928:	xchg   BYTE PTR [ecx],ch
  40d92a:	dec    ecx
  40d92b:	mov    al,0x44
  40d92d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d92e:	mov    edi,0x53132a89
  40d933:	test   al,0xcb
  40d935:	ret    
  40d936:	(bad)  
  40d937:	mov    edx,0xd3755ae8
  40d93c:	repnz pop ss
  40d93e:	push   ss
  40d93f:	dec    ebp
  40d940:	aas    
  40d941:	cld    
  40d942:	out    0xa6,al
  40d944:	pop    ebp
  40d945:	imul   esp,DWORD PTR [ebx-0x4fb26fd3],0x32a81ea0
  40d94f:	call   0x8e44271e
  40d954:	jge    0x40d945
  40d956:	xchg   esp,eax
  40d957:	out    dx,al
  40d958:	scas   al,BYTE PTR es:[edi]
  40d959:	mov    edx,0x655dfc07
  40d95e:	clc    
  40d95f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d960:	fwait
  40d961:	push   ss
  40d962:	sbb    ecx,DWORD PTR [eax-0x7fe00360]
  40d968:	mov    eax,ds:0xe3e63698
  40d96d:	add    BYTE PTR [ebx+0x24],0xf3
  40d971:	xchg   edx,eax
  40d972:	mov    eax,ds:0x3869ec39
  40d977:	sti    
  40d978:	mov    cl,BYTE PTR [ebx]
  40d97a:	fcom   QWORD PTR [ecx]
  40d97c:	pop    edi
  40d97d:	mov    bl,al
  40d97f:	out    dx,al
  40d980:	or     ebp,DWORD PTR [ecx-0x24]
  40d983:	popf   
  40d984:	cmc    
  40d985:	ds icebp 
  40d987:	mov    edx,0xad5699bc
  40d98c:	std    
  40d98d:	or     dl,BYTE PTR es:[ebp+0xd]
  40d991:	dec    edi
  40d992:	jp     0x40d9b8
  40d994:	js     0x40da08
  40d996:	dec    ecx
  40d997:	xchg   DWORD PTR [edx],edi
  40d999:	popf   
  40d99a:	jle    0x40d9f2
  40d99c:	cmp    ah,BYTE PTR [ebx+0x48]
  40d99f:	dec    esp
  40d9a0:	push   ebp
  40d9a1:	or     DWORD PTR ds:0x8f9f8ffa,edx
  40d9a7:	or     edx,eax
  40d9a9:	sti    
  40d9aa:	or     al,BYTE PTR [edx-0x20]
  40d9ad:	and    DWORD PTR [ebp+0x79],0xffffffad
  40d9b1:	in     al,dx
  40d9b2:	pop    edx
  40d9b3:	stos   BYTE PTR es:[edi],al
  40d9b4:	jmp    0x40d9cf
  40d9b6:	test   al,0x42
  40d9b8:	adc    eax,0x7b72526d
  40d9bd:	mov    BYTE PTR [ebp+0x7f5320b1],al
  40d9c3:	cmp    al,0x40
  40d9c5:	pop    edx
  40d9c6:	or     ah,bh
  40d9c8:	stos   DWORD PTR es:[edi],eax
  40d9c9:	call   FWORD PTR [edx-0x738ae07f]
  40d9cf:	xchg   bx,ax
  40d9d1:	cli    
  40d9d2:	xchg   esi,eax
  40d9d3:	push   es
  40d9d4:	jle    0x40da52
  40d9d6:	jmp    0xc5c88e88
  40d9db:	push   edi
  40d9dc:	mov    eax,0x9e03c43f
  40d9e1:	inc    ebx
  40d9e2:	(bad)  
  40d9e3:	int3   
  40d9e4:	push   eax
  40d9e5:	add    ebx,eax
  40d9e7:	ret    
  40d9e8:	sbb    BYTE PTR [ebx+ecx*2+0x4f],ch
  40d9ec:	je     0x40da43
  40d9ee:	mov    al,ds:0xcab5b6a
  40d9f3:	ret    
  40d9f4:	ss stos DWORD PTR es:[edi],eax
  40d9f6:	adc    al,0x4c
  40d9f8:	adc    BYTE PTR [ecx+0x3c],ah
  40d9fb:	push   esp
  40d9fc:	mov    ?,esp
  40d9fe:	cld    
  40d9ff:	sbb    DWORD PTR [edi],edx
  40da01:	add    ch,bh
  40da03:	(bad)  
  40da04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da05:	sbb    cl,ah
  40da07:	out    dx,eax
  40da08:	add    eax,DWORD PTR [ecx]
  40da0a:	xchg   ebx,eax
  40da0b:	mov    ch,0xec
  40da0d:	push   cs
  40da0e:	(bad)  
  40da10:	cld    
  40da11:	push   eax
  40da12:	retf   
  40da13:	stc    
  40da14:	rol    BYTE PTR [edi],0x95
  40da17:	mov    eax,ds:0x6c5c36dd
  40da1c:	adc    BYTE PTR [ecx-0x601e7c4d],bl
  40da22:	jg     0x40da68
  40da24:	sar    BYTE PTR [ebx+0x35a6f255],0xd9
  40da2b:	xchg   BYTE PTR [edx-0x72],cl
  40da2e:	leave  
  40da2f:	xor    al,0x49
  40da32:	ss in  al,dx
  40da34:	push   ebp
  40da35:	cli    
  40da36:	mov    BYTE PTR [esi+edx*4-0x30],bh
  40da3a:	leave  
  40da3b:	mov    ch,0x71
  40da3d:	mov    ds:0x58328d20,eax
  40da42:	mov    ss,WORD PTR [ebx+0x703a8b5e]
  40da48:	leave  
  40da49:	adc    eax,DWORD PTR [ecx-0x7bd407aa]
  40da4f:	jno    0x40d9d7
  40da51:	pop    ecx
  40da52:	mov    esi,0x490816c5
  40da57:	jns    0x40dac6
  40da59:	test   DWORD PTR [ebx+0x6a],ebx
  40da5c:	addr16 sub ebx,ebp
  40da5f:	push   ebx
  40da60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da61:	and    edi,DWORD PTR [edi]
  40da63:	xchg   esp,eax
  40da64:	push   ebx
  40da65:	loop   0x40dab9
  40da67:	fidivr DWORD PTR [esi]
  40da69:	fistp  WORD PTR [edx+0x20]
  40da6c:	sbb    eax,0x2e175fde
  40da71:	pop    esp
  40da72:	stos   DWORD PTR es:[edi],eax
  40da73:	or     BYTE PTR [eax],al
  40da75:	jae    0x40dadf
  40da77:	jg     0x40da46
  40da79:	xchg   BYTE PTR [ebx-0x4c],bh
  40da7c:	cmp    BYTE PTR [ecx],dh
  40da7e:	push   ecx
  40da7f:	dec    ebp
  40da80:	test   BYTE PTR [edi+0x5d839a79],cl
  40da86:	sar    DWORD PTR [edx-0x4260870a],1
  40da8c:	and    eax,0xa30a8986
  40da91:	xor    eax,0xa859bfbd
  40da96:	fcom   DWORD PTR [ecx+eax*8-0x73]
  40da9a:	lods   al,BYTE PTR ds:[esi]
  40da9b:	stos   BYTE PTR es:[edi],al
  40da9c:	jge    0x40da5d
  40da9e:	ret    0x5768
  40daa1:	push   es
  40daa2:	dec    esi
  40daa3:	mov    ecx,0x37c6220d
  40daa8:	mov    dl,0xe0
  40daaa:	shl    BYTE PTR [edx],cl
  40daac:	pop    eax
  40daad:	cmp    eax,DWORD PTR [ebx]
  40daaf:	aaa    
  40dab0:	jl     0x40da6e
  40dab2:	sub    al,0x89
  40dab4:	lea    ebp,[edi+0x791a6efb]
  40daba:	dec    edi
  40dabb:	loope  0x40dab7
  40dabd:	xor    esp,DWORD PTR [eax+esi*8+0x33112ad4]
  40dac4:	jae    0x40dabb
  40dac6:	adc    DWORD PTR [ecx-0x63],edx
  40dac9:	xchg   ebx,eax
  40daca:	mov    eax,DWORD PTR ds:0x8cbce696
  40dad0:	out    dx,eax
  40dad1:	(bad)  
  40dad2:	xchg   esp,eax
  40dad3:	adc    ah,BYTE PTR [esi-0x69c0734]
  40dad9:	loopne 0x40da68
  40dadb:	pop    edi
  40dadc:	leave  
  40dadd:	mov    ebx,0x5e31e691
  40dae2:	cmp    DWORD PTR [edx+edx*2+0x21],edi
  40dae6:	test   al,0xd6
  40dae8:	mov    eax,ds:0xaeb79104
  40daed:	add    ch,BYTE PTR [ecx-0x7a185d1b]
  40daf3:	pusha  
  40daf4:	out    0xd1,eax
  40daf6:	mov    DWORD PTR [ecx-0x49cfa992],esp
  40dafc:	fadd   QWORD PTR [ebp-0x366022ac]
  40db02:	sbb    al,0x40
  40db04:	push   0xfffffff0
  40db06:	fild   QWORD PTR [esi]
  40db08:	cld    
  40db09:	adc    eax,0xc986d0c8
  40db0e:	push   es
  40db0f:	push   edx
  40db10:	dec    edx
  40db11:	inc    eax
  40db12:	cmp    ah,ch
  40db14:	push   ebx
  40db15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db16:	adc    ecx,DWORD PTR [ecx-0x5292371]
  40db1c:	xchg   ah,al
  40db1e:	mov    eax,0x9681dd10
  40db23:	pmaxub mm6,QWORD PTR [eax]
  40db26:	je     0x40dade
  40db28:	jmp    0xe05d:0x2e9aa44e
  40db2f:	loopne 0x40db9d
  40db31:	jmp    0xd35d8d1e
  40db36:	sub    dh,al
  40db38:	stc    
  40db39:	arpl   WORD PTR [edi-0x42ca0acb],sp
  40db3f:	out    0x44,eax
  40db41:	push   eax
  40db42:	or     bl,ch
  40db44:	fidivr WORD PTR [esi]
  40db46:	ss popa 
  40db48:	rcr    BYTE PTR [ecx+eiz*2+0x58],1
  40db4c:	fs ret 0x5e44
  40db50:	pusha  
  40db51:	popf   
  40db52:	scas   al,BYTE PTR es:[edi]
  40db53:	data16 stc 
  40db55:	in     eax,0xce
  40db57:	arpl   WORD PTR [edi],ax
  40db59:	jb     0x40db96
  40db5b:	push   eax
  40db5c:	jb     0x40db25
  40db5e:	inc    ebx
  40db5f:	call   0x5c84cca3
  40db64:	inc    eax
  40db65:	sbb    BYTE PTR [ecx-0x1765134a],cl
  40db6b:	pop    ecx
  40db6c:	and    eax,0xc8ff66f0
  40db71:	add    al,0x48
  40db73:	(bad)  
  40db74:	pop    ss
  40db75:	fstp   DWORD PTR [esi+0x3f968e59]
  40db7b:	jo     0x40dbc1
  40db7d:	adc    al,0xe5
  40db7f:	jne    0x40db6e
  40db81:	push   esp
  40db82:	out    0xc5,al
  40db84:	lods   al,BYTE PTR ds:[esi]
  40db85:	div    ecx
  40db87:	or     eax,0xe4c600ec
  40db8c:	jmp    0xce121a0a
  40db91:	lods   eax,DWORD PTR ds:[esi]
  40db92:	dec    eax
  40db93:	call   0xc11ddbf0
  40db98:	imul   edi,DWORD PTR [eax+0x1c],0x3c
  40db9c:	jle    0x40dbab
  40db9e:	dec    esi
  40db9f:	cwde   
  40dba0:	xchg   BYTE PTR [ecx-0x1e],dl
  40dba3:	sub    DWORD PTR [ecx+0x37],esi
  40dba6:	test   BYTE PTR [edi+0xb210d8d],ch
  40dbac:	inc    eax
  40dbad:	mov    esi,DWORD PTR [edi+ebx*4+0x6f8ce217]
  40dbb4:	aad    0xa9
  40dbb6:	mov    cl,0x3f
  40dbb8:	retf   0xfaaa
  40dbbb:	inc    ecx
  40dbbc:	out    0x58,eax
  40dbbe:	inc    edi
  40dbbf:	mov    eax,ds:0x68df3069
  40dbc4:	push   ebp
  40dbc5:	in     al,0x5a
  40dbc7:	inc    eax
  40dbc8:	xchg   edx,eax
  40dbc9:	dec    edx
  40dbca:	call   0xc20263bd
  40dbcf:	add    al,BYTE PTR [eax+0x217856b6]
  40dbd5:	hlt    
  40dbd6:	mul    DWORD PTR [eax]
  40dbd8:	ja     0x40dc0d
  40dbda:	fistp  DWORD PTR [ebx+esi*1+0x30644d99]
  40dbe1:	int    0xbf
  40dbe3:	shr    ah,0xd2
  40dbe6:	add    DWORD PTR [edi],edi
  40dbe8:	in     al,dx
  40dbe9:	sbb    dl,bl
  40dbeb:	lds    edi,FWORD PTR [edx+0x25]
  40dbee:	pop    ecx
  40dbef:	shl    DWORD PTR [edi-0x6b],0x6c
  40dbf3:	ins    DWORD PTR es:[edi],dx
  40dbf4:	jl     0x40dbcc
  40dbf6:	int    0xf
  40dbf8:	stos   BYTE PTR es:[edi],al
  40dbf9:	xor    ah,dh
  40dbfb:	push   ebp
  40dbfc:	jg     0x40db98
  40dbfe:	icebp  
  40dbff:	push   esi
  40dc00:	mov    bl,0xa6
  40dc02:	xchg   edi,eax
  40dc03:	mov    cl,0xa7
  40dc05:	ins    BYTE PTR es:[edi],dx
  40dc06:	add    DWORD PTR [ecx],0xffffffc0
  40dc09:	inc    ebx
  40dc0a:	imul   edi,DWORD PTR [ebp+0x6f],0x49aa4be6
  40dc11:	fisttp WORD PTR [eax-0x1f54e418]
  40dc17:	push   ss
  40dc18:	loope  0x40dc7a
  40dc1a:	sbb    ebp,edx
  40dc1c:	mov    ah,cl
  40dc1e:	popa   
  40dc1f:	sbb    BYTE PTR [ecx+0x29],bl
  40dc22:	or     ecx,0x5862fc55
  40dc28:	push   esp
  40dc29:	(bad)  [ebx-0x44af5fff]
  40dc2f:	pop    DWORD PTR [ebp+0x56b56121]
  40dc35:	shr    eax,1
  40dc37:	pop    es
  40dc38:	shr    ah,cl
  40dc3a:	adc    ecx,DWORD PTR [ebp-0x28]
  40dc3d:	add    esp,eax
  40dc3f:	mov    ?,WORD PTR [edx-0x68]
  40dc42:	push   ds
  40dc43:	in     al,0xb7
  40dc45:	out    0xa3,al
  40dc47:	pop    ebx
  40dc48:	(bad)  
  40dc49:	(bad)  
  40dc4a:	cs jmp 0xe44ca0d
  40dc50:	add    BYTE PTR [edx-0x31f9d62a],al
  40dc56:	test   eax,0x19376cf4
  40dc5b:	mov    esi,0x2808aca5
  40dc60:	cld    
  40dc61:	xchg   edx,eax
  40dc62:	sub    edx,0x99896e57
  40dc68:	cmp    ebx,DWORD PTR [ecx-0x2b]
  40dc6b:	je     0x40dbf9
  40dc6d:	pop    eax
  40dc6e:	es (bad) 
  40dc70:	out    0x69,eax
  40dc72:	aad    0x6f
  40dc74:	ins    DWORD PTR es:[edi],dx
  40dc75:	jmp    0x9bd4:0x1dfeafaf
  40dc7c:	xlat   BYTE PTR ds:[ebx]
  40dc7d:	pop    ds
  40dc7e:	jg     0x40dcf7
  40dc80:	mov    DWORD PTR [edi+0x3bb9f3e2],edi
  40dc86:	cmp    al,0x7b
  40dc88:	add    al,0x5c
  40dc8a:	cmp    eax,DWORD PTR [edx-0x5fc72017]
  40dc90:	and    eax,0x18345ded
  40dc95:	jne    0x40dcaf
  40dc97:	xchg   ebx,eax
  40dc98:	ss pop es
  40dc9a:	in     eax,dx
  40dc9b:	cmp    ebp,DWORD PTR [ebx+edi*4-0x4fda5c4b]
  40dca2:	outs   dx,DWORD PTR ds:[esi]
  40dca3:	into   
  40dca4:	xor    edi,DWORD PTR [ecx]
  40dca6:	scas   eax,DWORD PTR es:[edi]
  40dca7:	loopne 0x40dcc6
  40dca9:	push   0x28
  40dcab:	and    al,0x8a
  40dcad:	jl     0x40dc3e
  40dcaf:	je     0x40dcfb
  40dcb1:	dec    BYTE PTR [esp+edi*8]
  40dcb4:	into   
  40dcb5:	mov    esp,0xb7bef794
  40dcba:	scas   eax,DWORD PTR es:[edi]
  40dcbb:	icebp  
  40dcbc:	or     al,0xa2
  40dcbe:	das    
  40dcbf:	retf   0xedc4
  40dcc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcc3:	test   eax,0xe5ac05a8
  40dcc8:	mov    bl,0x5c
  40dcca:	push   cs
  40dccb:	inc    eax
  40dccc:	outs   dx,DWORD PTR ds:[esi]
  40dccd:	mov    ah,0x6a
  40dccf:	pop    ebp
  40dcd0:	out    0xd6,al
  40dcd2:	dec    edx
  40dcd3:	popf   
  40dcd4:	pop    edi
  40dcd5:	push   0xfffffffb
  40dcd7:	cmp    cl,BYTE PTR [ebp+0x18040014]
  40dcdd:	shl    BYTE PTR [ebx+0x7f],0xc7
  40dce1:	mov    ebp,0x53790ad1
  40dce6:	mov    eax,0xf99fd60b
  40dceb:	jecxz  0x40dd0c
  40dced:	fs pushf 
  40dcef:	rol    DWORD PTR [eax+eiz*2],cl
  40dcf2:	shr    esp,cl
  40dcf4:	ds (bad) 
  40dcf6:	aam    0xf9
  40dcf8:	icebp  
  40dcf9:	in     al,0x20
  40dcfb:	add    ah,dh
  40dcfd:	jnp    0x40dc90
  40dcff:	fiadd  WORD PTR [edi]
  40dd01:	sub    eax,0xe4613fff
  40dd06:	mov    esp,0x4319a604
  40dd0b:	push   ds
  40dd0c:	cmp    ch,al
  40dd0e:	loope  0x40dc96
  40dd10:	mul    eax
  40dd12:	mov    al,ds:0xc99bdbd9
  40dd17:	hlt    
  40dd18:	imul   edx,DWORD PTR [eax],0x8d8f4e3c
  40dd1e:	mov    esp,0xd05291e5
  40dd23:	es out 0x72,al
  40dd26:	rcr    DWORD PTR [ecx-0x12bf489],0xab
  40dd2d:	in     al,0xe0
  40dd2f:	loop   0x40dd8a
  40dd31:	lods   al,BYTE PTR ds:[esi]
  40dd32:	idiv   DWORD PTR [esi+0x13]
  40dd35:	adc    eax,0xa62cb39f
  40dd3a:	inc    esp
  40dd3b:	xor    eax,0xe817c652
  40dd40:	je     0x40dd71
  40dd42:	xor    bl,BYTE PTR [ebx-0x3d]
  40dd45:	iret   
  40dd46:	add    dl,BYTE PTR [edx-0xc]
  40dd49:	pushf  
  40dd4a:	xchg   ecx,eax
  40dd4b:	cmp    edi,ebp
  40dd4d:	invd   
  40dd4f:	lock mov eax,0xd0f05312
  40dd55:	jae    0x40dcf4
  40dd57:	inc    ecx
  40dd58:	xchg   edi,eax
  40dd59:	inc    ecx
  40dd5a:	iret   
  40dd5b:	add    al,0xbd
  40dd5d:	cs mov ch,0xe
  40dd60:	leave  
  40dd61:	imul   ebx,DWORD PTR [eax],0x25
  40dd64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd65:	jmp    0xd0b6:0x10ede8f8
  40dd6c:	stos   DWORD PTR es:[edi],eax
  40dd6d:	int3   
  40dd6e:	inc    edi
  40dd6f:	fcomp  QWORD PTR [ebx-0x49]
  40dd72:	sub    DWORD PTR [edi+0x435b03d7],0xffffff82
  40dd79:	cmp    esi,DWORD PTR [eax+0x417a6692]
  40dd7f:	fcos   
  40dd81:	xor    eax,0x5dcc3dc1
  40dd86:	cmp    DWORD PTR ds:0xb7bbf71e,edx
  40dd8c:	pop    esi
  40dd8d:	mov    bl,0x25
  40dd8f:	scas   al,BYTE PTR es:[edi]
  40dd90:	xor    DWORD PTR [edi-0x1d],esi
  40dd93:	stos   BYTE PTR es:[edi],al
  40dd94:	mov    bl,dh
  40dd96:	out    dx,al
  40dd97:	push   0x2a
  40dd99:	stos   DWORD PTR es:[edi],eax
  40dd9a:	inc    esp
  40dd9b:	iret   
  40dd9c:	cmp    eax,0x6a008da5
  40dda1:	xor    esp,edi
  40dda3:	add    al,0x38
  40dda5:	(bad)  [ebx+0x25]
  40dda8:	xchg   esp,eax
  40dda9:	lods   eax,DWORD PTR ds:[esi]
  40ddaa:	fstp   TBYTE PTR [ebx]
  40ddac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddad:	out    dx,al
  40ddae:	retf   0x2bf2
  40ddb1:	fwait
  40ddb2:	inc    esp
  40ddb3:	shr    BYTE PTR [ebp+0x16a6ba7b],cl
  40ddb9:	pop    ds
  40ddba:	in     eax,dx
  40ddbb:	mov    al,0xa9
  40ddbd:	push   edi
  40ddbe:	mov    dh,0x48
  40ddc0:	mov    dh,0x51
  40ddc2:	data16 mov bl,0x85
  40ddc5:	sbb    al,0x24
  40ddc7:	int    0x4d
  40ddc9:	cmp    cl,ah
  40ddcb:	push   ecx
  40ddcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddcd:	daa    
  40ddce:	xchg   edx,eax
  40ddcf:	into   
  40ddd0:	idiv   BYTE PTR [esi-0x5b]
  40ddd3:	das    
  40ddd4:	jp     0x40de16
  40ddd6:	jnp    0x40ddcd
  40ddd8:	fdiv   QWORD PTR [ebx]
  40ddda:	xor    al,0xd8
  40dddc:	out    0x99,eax
  40ddde:	sbb    BYTE PTR [edi],bh
  40dde0:	mov    al,ds:0x4f5252d9
  40dde5:	add    bh,dl
  40dde7:	sub    ebx,esp
  40dde9:	pop    eax
  40ddea:	pop    ecx
  40ddeb:	push   edx
  40ddec:	push   ss
  40dded:	popa   
  40ddee:	push   edi
  40ddef:	mov    edi,0xa932d991
  40ddf4:	jns    0x40de48
  40ddf6:	mov    al,ds:0x3548fdee
  40ddfb:	lahf   
  40ddfc:	test   eax,0x7f2eaa89
  40de01:	push   esp
  40de02:	dec    edi
  40de03:	fxch   st(0)
  40de05:	scas   al,BYTE PTR es:[edi]
  40de06:	xchg   ebp,eax
  40de07:	sahf   
  40de08:	test   al,0x8a
  40de0a:	sbb    eax,0x942056f
  40de0f:	push   esp
  40de10:	push   edi
  40de11:	sbb    eax,0x8aa9d5ca
  40de16:	stc    
  40de17:	pop    ebp
  40de18:	mov    bh,0xdb
  40de1a:	clc    
  40de1b:	es cmp eax,0xbc0c8c1f
  40de21:	dec    edx
  40de22:	mov    eax,0xe9b65789
  40de27:	fistp  QWORD PTR [edx+edi*8]
  40de2a:	hlt    
  40de2b:	xor    cl,ch
  40de2d:	mov    cl,0xa4
  40de2f:	dec    ecx
  40de30:	push   eax
  40de31:	ins    DWORD PTR es:[edi],dx
  40de32:	(bad)  
  40de34:	cdq    
  40de35:	leave  
  40de36:	cwde   
  40de37:	or     eax,0xa248d1f9
  40de3c:	lods   al,BYTE PTR ds:[esi]
  40de3d:	push   esp
  40de3e:	(bad)  
  40de3f:	call   0xbe18:0x701688a5
  40de46:	adc    eax,0x11896dc
  40de4b:	popa   
  40de4c:	pop    esp
  40de4d:	jmp    0xb4a9af0d
  40de52:	or     al,al
  40de54:	ret    0x350
  40de57:	add    esp,DWORD PTR [ebp+0x3e]
  40de5a:	lock es or al,0xc9
  40de5e:	jns    0x40ddf9
  40de60:	jmp    0x40ded2
  40de62:	popf   
  40de63:	xor    ch,cl
  40de65:	das    
  40de66:	push   edi
  40de67:	sub    eax,DWORD PTR [edi+0x11]
  40de6a:	mov    ebp,0x5738cbe2
  40de6f:	mov    esp,0xa5290f5b
  40de74:	mov    ds:0xca2a8ba8,al
  40de79:	int3   
  40de7a:	inc    ecx
  40de7b:	adc    al,0x26
  40de7d:	inc    esi
  40de7e:	call   0x65c16cc8
  40de83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de84:	or     DWORD PTR [edi],ebp
  40de86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de87:	push   eax
  40de88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de89:	iret   
  40de8a:	int3   
  40de8b:	jb     0x40def1
  40de8d:	pop    edi
  40de8e:	leave  
  40de8f:	cld    
  40de90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de91:	loope  0x40de6b
  40de93:	pop    edi
  40de94:	popf   
  40de95:	mov    dh,BYTE PTR [edx-0x4e]
  40de98:	or     cl,BYTE PTR [ecx*8+0x7563cab9]
  40de9f:	inc    eax
  40dea0:	cwde   
  40dea1:	js     0x40defd
  40dea3:	iret   
  40dea4:	pop    ss
  40dea5:	in     al,0xeb
  40dea7:	rol    BYTE PTR [edx],cl
  40dea9:	adc    eax,0x389e5336
  40deae:	pop    edi
  40deaf:	fadd   DWORD PTR [eax-0x62]
  40deb2:	mov    ebx,0x52a357aa
  40deb7:	cmc    
  40deb8:	popf   
  40deb9:	repz cli 
  40debb:	xchg   ebp,eax
  40debc:	fisttp QWORD PTR [ebx-0x9]
  40debf:	mov    ch,0xd9
  40dec1:	fild   QWORD PTR [esi+0x78]
  40dec4:	(bad)  [ecx+0x51]
  40dec7:	inc    esp
  40dec8:	jae    0x40dee6
  40deca:	ins    DWORD PTR es:[edi],dx
  40decb:	imul   edi,DWORD PTR [ebx+0x38c14ecd],0xa25507de
  40ded5:	pop    esp
  40ded6:	or     ebx,DWORD PTR es:[esi+0x4185a507]
  40dedd:	xchg   edi,eax
  40dede:	fs pusha 
  40dee0:	retf   0xf1cd
  40dee3:	loope  0x40df2c
  40dee5:	neg    BYTE PTR [edx+edi*2-0x5f]
  40dee9:	loopne 0x40de97
  40deeb:	sbb    ch,BYTE PTR ds:0x84e52992
  40def1:	push   0x334ce83
  40def6:	mov    BYTE PTR [ebp+0xf6e48b3],ch
  40defc:	lea    edi,[ecx]
  40defe:	out    dx,al
  40deff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df00:	sti    
  40df01:	repnz mov edi,0x55a9b8f6
  40df07:	pop    edi
  40df08:	jge    0x40debe
  40df0a:	mov    esp,DWORD PTR [ecx-0x7d205d3f]
  40df10:	adc    eax,0x496cd6af
  40df15:	xor    eax,0xba5eb5a9
  40df1a:	push   0x63
  40df1c:	js     0x40def9
  40df1e:	fnstsw WORD PTR [edi]
  40df20:	int3   
  40df21:	push   edi
  40df22:	and    eax,0x5cec7844
  40df27:	pop    es
  40df28:	or     BYTE PTR [ebp-0x7c0783db],ah
  40df2e:	stos   BYTE PTR es:[edi],al
  40df2f:	dec    ebp
  40df30:	sbb    eax,ebx
  40df32:	or     al,0x21
  40df34:	aad    0x7e
  40df36:	push   ss
  40df37:	fmul   QWORD PTR [eax]
  40df39:	call   0x9280:0x5d050638
  40df40:	mul    BYTE PTR [edx*8-0x7fa2b6bc]
  40df47:	ds push 0xc6b4d4d0
  40df4d:	fldcw  WORD PTR [ebp-0x25a4d131]
  40df53:	sbb    DWORD PTR [ebx-0x652a9ef],edi
  40df59:	sub    eax,0x8001ef17
  40df5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df5f:	cdq    
  40df60:	invd   
  40df62:	cmp    esi,DWORD PTR [edi+0x6e]
  40df65:	(bad)  
  40df67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df68:	mov    bl,0xcd
  40df6a:	inc    ebx
  40df6b:	xchg   edi,eax
  40df6c:	das    
  40df6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df6e:	dec    cl
  40df70:	or     ebx,DWORD PTR [edx-0x77f98]
  40df76:	mov    ds:0x95202f15,eax
  40df7b:	js     0x40dfe6
  40df7d:	jl     0x40df40
  40df7f:	jb     0x40df8f
  40df81:	fdivr  DWORD PTR [ebx]
  40df83:	jae    0x40df13
  40df85:	mov    al,0x7c
  40df87:	mov    DWORD PTR [esi+0xa302ccc],esi
  40df8d:	mov    al,0xdf
  40df8f:	gs jmp 0x2b89c00a
  40df95:	mov    ebp,es
  40df97:	aaa    
  40df98:	or     dl,BYTE PTR [ebx+0x27]
  40df9b:	sub    BYTE PTR [ebx],0x53
  40df9e:	pushf  
  40df9f:	push   esi
  40dfa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfa1:	adc    bl,BYTE PTR [ebp+0x7ad06212]
  40dfa7:	jecxz  0x40df4a
  40dfa9:	mov    esi,0xa4c2f375
  40dfae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfaf:	xchg   esp,eax
  40dfb0:	(bad)  
  40dfb1:	cdq    
  40dfb2:	mov    dh,0x85
  40dfb4:	lea    edi,[ebx]
  40dfb6:	stc    
  40dfb7:	inc    esi
  40dfb8:	mov    edi,0x153e2e3
  40dfbd:	xlat   BYTE PTR ds:[ebx]
  40dfbe:	repnz cmp ebp,edx
  40dfc1:	jp     0x40dfcd
  40dfc3:	aam    0x98
  40dfc5:	ret    0x7d66
  40dfc8:	xchg   edi,eax
  40dfc9:	test   DWORD PTR [ebp+0x410386ab],0x6f526140
  40dfd3:	icebp  
  40dfd4:	in     eax,dx
  40dfd5:	or     ebp,eax
  40dfd7:	cmp    DWORD PTR [eax-0x3f],edi
  40dfda:	pop    es
  40dfdb:	shl    ebp,0x20
  40dfde:	retf   
  40dfdf:	or     eax,0x164606aa
  40dfe4:	mov    edx,0xaaeaa2a4
  40dfe9:	pop    ebp
  40dfea:	xor    edi,edi
  40dfec:	jnp    0x40e06c
  40dfee:	(bad)  
  40dfef:	fdivrp st(4),st
  40dff1:	sbb    al,0x2b
  40dff3:	sbb    eax,0xf8b5d05f
  40dff8:	jle    0x40df97
  40dffa:	mov    al,0xe0
  40dffc:	push   ecx
  40dffd:	mov    ecx,DWORD PTR [edx-0x58]
  40e000:	popa   
  40e001:	mov    bl,0xeb
  40e003:	test   BYTE PTR [edi],0x44
  40e006:	pop    eax
  40e007:	pop    edi
  40e008:	lods   eax,DWORD PTR ds:[esi]
  40e009:	in     al,0xef
  40e00b:	sbb    BYTE PTR [ecx+0x75],0xf8
  40e00f:	pop    ss
  40e010:	lods   eax,DWORD PTR ds:[esi]
  40e011:	lock adc DWORD PTR [ebp-0x7059bcfb],esi
  40e018:	je     0x40e039
  40e01a:	jnp    0x40dfa1
  40e01c:	fmul   DWORD PTR [esi-0x1]
  40e01f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e020:	mov    ebp,0xffa33777
  40e025:	je     0x40e02f
  40e027:	push   esp
  40e028:	popa   
  40e029:	xchg   DWORD PTR [ebx+0x5747ba1e],esp
  40e02f:	out    0xa0,eax
  40e031:	add    DWORD PTR [esi],ebp
  40e033:	cmp    bh,0xaf
  40e036:	push   0x3a
  40e038:	sbb    al,0x21
  40e03a:	enter  0x675b,0xad
  40e03e:	int3   
  40e03f:	sub    edi,DWORD PTR gs:[edx+0x21fc4717]
  40e046:	push   0x32
  40e048:	out    0x88,al
  40e04a:	repz test DWORD PTR [edx],ecx
  40e04d:	jmp    0x40dff2
  40e04f:	int    0x67
  40e051:	xchg   edx,eax
  40e052:	mov    ds:0x18109082,eax
  40e057:	out    0xb0,al
  40e059:	out    0x31,eax
  40e05b:	adc    eax,0x883fa46f
  40e060:	inc    ecx
  40e061:	mov    ch,0x58
  40e063:	sub    cl,BYTE PTR [edx]
  40e065:	inc    eax
  40e066:	mov    al,ds:0x506eeb56
  40e06b:	test   al,0x80
  40e06d:	and    al,0x9
  40e06f:	loopne 0x40e011
  40e071:	jl     0x40e00d
  40e073:	scas   al,BYTE PTR es:[edi]
  40e074:	inc    edi
  40e075:	cmc    
  40e076:	fst    QWORD PTR [esi]
  40e078:	rcr    DWORD PTR [ecx-0x69],1
  40e07b:	mov    DWORD PTR [edx-0x226e656e],esp
  40e081:	sub    eax,0x9cf1ba1b
  40e086:	sub    ecx,esi
  40e088:	dec    edx
  40e089:	movd   mm1,DWORD PTR [ebx-0x70514c11]
  40e090:	xor    ah,BYTE PTR [eax-0x741cef25]
  40e096:	add    eax,0x417cb41b
  40e09b:	xchg   edx,eax
  40e09c:	hlt    
  40e09d:	out    0x4c,eax
  40e09f:	mov    bl,al
  40e0a1:	or     BYTE PTR [ecx+edi*8+0x5a],bl
  40e0a5:	addr16 jne 0x40e0d6
  40e0a8:	js     0x40e065
  40e0aa:	sbb    DWORD PTR [edi],ebp
  40e0ac:	pop    edx
  40e0ad:	(bad)  
  40e0ae:	cli    
  40e0af:	pop    edx
  40e0b0:	pop    edi
  40e0b1:	fcom   DWORD PTR [ecx]
  40e0b3:	(bad)  
  40e0b4:	bound  edi,QWORD PTR [edi+0x2e6f6bfe]
  40e0ba:	or     BYTE PTR [ebp+0x75],0x43
  40e0be:	push   ebx
  40e0bf:	sti    
  40e0c0:	out    dx,al
  40e0c1:	scas   eax,DWORD PTR es:[edi]
  40e0c2:	call   0x2151:0x6c278f88
  40e0c9:	dec    esp
  40e0ca:	dec    esi
  40e0cb:	mov    ecx,0x1e33b687
  40e0d0:	mov    edi,0xd6930990
  40e0d5:	mov    esp,gs
  40e0d7:	mov    ds:0xbb92cb3a,eax
  40e0dc:	retf   0xeae5
  40e0df:	xor    al,0xa8
  40e0e1:	mov    dl,0x8
  40e0e3:	mov    ch,BYTE PTR [esi]
  40e0e5:	fld    QWORD PTR [edi+0x350d644d]
  40e0eb:	sub    al,BYTE PTR [eax+0x7]
  40e0ee:	mov    bl,cl
  40e0f0:	js     0x40e0bd
  40e0f2:	mov    esp,0xbc6f4d30
  40e0f7:	in     eax,dx
  40e0f8:	adc    BYTE PTR [ebp-0x1013efd5],bl
  40e0fe:	aam    0x3e
  40e100:	mov    BYTE PTR [ebx+0x383aed56],ah
  40e106:	xchg   edi,eax
  40e107:	jbe    0x40e097
  40e109:	test   DWORD PTR [edi],ebp
  40e10b:	or     eax,0x655c145e
  40e110:	arpl   WORD PTR [esi+edx*2+0x5b],ax
  40e114:	mov    ah,0x1a
  40e116:	gs jecxz 0x40e13d
  40e119:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e11a:	ins    DWORD PTR es:[edi],dx
  40e11b:	iret   
  40e11c:	sub    DWORD PTR [ebx],eax
  40e11e:	or     al,cl
  40e120:	lock mov esi,0x7826ad69
  40e126:	pop    eax
  40e127:	es xor eax,ebx
  40e12a:	pop    es
  40e12b:	sbb    eax,eax
  40e12d:	sbb    ah,BYTE PTR [eax-0x3b022914]
  40e133:	stc    
  40e134:	daa    
  40e135:	pop    ss
  40e136:	lds    ecx,FWORD PTR [ecx-0x295907f0]
  40e13c:	ror    al,1
  40e13e:	mov    ecx,0x52e61e23
  40e143:	(bad)  
  40e144:	adc    BYTE PTR [ecx-0x330ccb89],al
  40e14a:	push   ecx
  40e14b:	sar    DWORD PTR [edi-0xd],0xe8
  40e14f:	mov    ebx,0xd11871d
  40e154:	sbb    esp,DWORD PTR [eax]
  40e156:	adc    BYTE PTR [eax+0x3e9f57dc],bl
  40e15c:	rol    DWORD PTR [esi],1
  40e15e:	popa   
  40e15f:	cmp    dh,BYTE PTR [esp+ebx*4+0x10]
  40e163:	test   al,dh
  40e165:	mov    eax,eax
  40e167:	mov    ?,WORD PTR [edx+0x56569d17]
  40e16d:	jbe    0x40e124
  40e16f:	pop    ss
  40e170:	and    dh,BYTE PTR [edi+0x15]
  40e173:	jne    0x40e153
  40e175:	mov    edx,0x93600322
  40e17a:	push   ecx
  40e17b:	inc    edx
  40e17c:	fstp   QWORD PTR [edi+0x1068e6ec]
  40e182:	iret   
  40e183:	or     ebp,DWORD PTR [ebx-0x620ce049]
  40e189:	dec    ebx
  40e18a:	das    
  40e18b:	jns    0x40e208
  40e18d:	adc    BYTE PTR [ecx-0x5],ah
  40e190:	push   ss
  40e191:	sub    eax,0x4ed1b0c6
  40e196:	xor    al,0xf5
  40e198:	aaa    
  40e199:	imul   edi,DWORD PTR [ebx+0x7a128ca9],0x56379d3
  40e1a3:	jmp    0xe4816aa8
  40e1a8:	push   ecx
  40e1a9:	loop   0x40e1d0
  40e1ab:	add    DWORD PTR [eax-0x50],edi
  40e1ae:	(bad)  
  40e1af:	pop    edi
  40e1b0:	sub    DWORD PTR [esi+edx*1+0x7e],esp
  40e1b4:	xor    eax,0x23e2b312
  40e1b9:	cmp    eax,0x4ebc8d45
  40e1be:	fnsave [ebx-0x1e]
  40e1c1:	dec    eax
  40e1c2:	sub    eax,0xb5dd805c
  40e1c7:	enter  0x4ff8,0x25
  40e1cb:	aam    0x4d
  40e1cd:	and    bl,0xa1
  40e1d0:	mov    bh,0x58
  40e1d2:	cmp    eax,0xd62770ac
  40e1d7:	(bad)  
  40e1d9:	xchg   esi,eax
  40e1da:	mov    WORD PTR [ebp+0xd],?
  40e1dd:	cmp    al,0xcd
  40e1df:	jp     0x40e1b8
  40e1e1:	push   ecx
  40e1e2:	sub    DWORD PTR [edi+0x68],esi
  40e1e5:	xor    al,0x4d
  40e1e7:	push   es
  40e1e8:	shr    BYTE PTR [eax-0x25],1
  40e1eb:	scas   eax,DWORD PTR es:[edi]
  40e1ec:	sub    DWORD PTR [edx-0x1d],eax
  40e1ef:	mov    al,BYTE PTR [ebp+0x1fd242ff]
  40e1f5:	and    eax,0x9a214a02
  40e1fa:	pop    ebx
  40e1fb:	lahf   
  40e1fc:	std    
  40e1fd:	sub    ch,BYTE PTR [edx-0x17]
  40e200:	sbb    al,0xe1
  40e202:	and    dl,bh
  40e204:	call   0x81f7e371
  40e209:	out    dx,eax
  40e20a:	sbb    cl,BYTE PTR [ebx+0x120717c4]
  40e210:	je     0x40e22a
  40e212:	ins    DWORD PTR es:[edi],dx
  40e213:	mov    ah,0xd
  40e215:	shl    DWORD PTR [ecx],cl
  40e217:	jecxz  0x40e219
  40e219:	cmp    BYTE PTR [ebp+0x3c],cl
  40e21c:	std    
  40e21d:	rcr    dl,1
  40e21f:	dec    esp
  40e220:	loopne 0x40e251
  40e222:	ds in  al,0x6f
  40e225:	(bad)  
  40e226:	xchg   ecx,eax
  40e227:	ins    BYTE PTR es:[edi],dx
  40e228:	cld    
  40e229:	jae    0x40e227
  40e22b:	les    esp,FWORD PTR [ebx-0x6b]
  40e22e:	outs   dx,DWORD PTR ds:[esi]
  40e22f:	or     esi,esi
  40e231:	add    al,0xfa
  40e233:	stos   BYTE PTR es:[edi],al
  40e234:	loopne 0x40e262
  40e236:	scas   eax,DWORD PTR es:[edi]
  40e237:	clc    
  40e238:	pushf  
  40e239:	or     ah,BYTE PTR [ecx+0x5f]
  40e23c:	test   BYTE PTR [eax],bl
  40e23e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e23f:	dec    BYTE PTR [edx+eax*8]
  40e242:	push   ebx
  40e243:	jl     0x40e25e
  40e245:	dec    esp
  40e246:	call   0x54b5:0x22f325fc
  40e24d:	lahf   
  40e24e:	xchg   edi,eax
  40e24f:	mov    ebp,0x4c3fe5a9
  40e254:	popf   
  40e255:	add    DWORD PTR [ebx+edx*2],ebx
  40e258:	cmp    eax,0xa5790c89
  40e25d:	push   ecx
  40e25e:	call   0xbabc:0x9a9f794e
  40e265:	pop    edi
  40e266:	(bad)  
  40e267:	loopne 0x40e1fb
  40e269:	mov    ah,0x4b
  40e26b:	pop    eax
  40e26c:	clc    
  40e26d:	pop    esi
  40e26e:	xor    al,0x58
  40e270:	repz leave 
  40e272:	and    ebp,eax
  40e274:	fdiv   DWORD PTR [ecx-0x1a]
  40e277:	or     DWORD PTR [ebp-0x1f7812b4],esi
  40e27d:	mov    dh,BYTE PTR [ebp-0x5b63a95e]
  40e283:	xchg   DWORD PTR [esi-0x432d1fd],edi
  40e289:	or     al,0x29
  40e28b:	mov    al,0x4e
  40e28d:	fnstcw WORD PTR [ebp-0x503395fe]
  40e293:	int3   
  40e294:	mov    eax,ds:0xf5f14d85
  40e299:	cmp    BYTE PTR [ecx+0x36],bl
  40e29c:	daa    
  40e29d:	xchg   BYTE PTR ds:0x7d20fcc0,al
  40e2a3:	push   es
  40e2a4:	and    eax,0xde83e9f0
  40e2a9:	enter  0xd558,0x22
  40e2ad:	dec    edi
  40e2ae:	outs   dx,BYTE PTR ds:[esi]
  40e2af:	retf   0x8804
  40e2b2:	dec    esp
  40e2b3:	not    DWORD PTR [ebx-0x7fa94772]
  40e2b9:	aaa    
  40e2ba:	cmp    dh,BYTE PTR [eax-0x4c]
  40e2bd:	dec    ecx
  40e2be:	scas   al,BYTE PTR es:[edi]
  40e2bf:	xchg   edx,eax
  40e2c0:	jae    0x40e2a0
  40e2c2:	sub    al,0xb1
  40e2c4:	in     eax,dx
  40e2c5:	dec    edx
  40e2c6:	lahf   
  40e2c7:	xchg   esp,eax
  40e2c8:	add    ecx,esp
  40e2ca:	sub    DWORD PTR [eax+0x458077e5],ecx
  40e2d0:	retf   
  40e2d1:	ja     0x40e26e
  40e2d3:	lods   eax,DWORD PTR ds:[esi]
  40e2d4:	jg     0x40e353
  40e2d6:	pop    edx
  40e2d7:	sbb    al,0x88
  40e2d9:	add    dh,BYTE PTR ds:0xbfb729af
  40e2df:	pop    eax
  40e2e0:	iret   
  40e2e1:	lds    edi,FWORD PTR fs:[edx+0x5a08df64]
  40e2e8:	popa   
  40e2e9:	ret    
  40e2ea:	mov    edi,0xa1ff3916
  40e2ef:	cmc    
  40e2f0:	iret   
  40e2f1:	mov    ebp,0xc80b82a7
  40e2f6:	inc    ebp
  40e2f7:	inc    esi
  40e2f8:	call   0x60bcb0e7
  40e2fd:	in     al,dx
  40e2fe:	(bad)  
  40e2ff:	sti    
  40e300:	xor    BYTE PTR [edi+0x14],0x35
  40e304:	push   es
  40e305:	into   
  40e306:	and    DWORD PTR [eax],eax
  40e308:	or     BYTE PTR [eax+0x4ef0deb6],bl
  40e30e:	hlt    
  40e30f:	pop    ebp
  40e310:	sub    ecx,DWORD PTR [ebp-0x54]
  40e313:	pop    edx
  40e314:	or     al,0x43
  40e316:	jo     0x40e2c9
  40e318:	jns    0x40e389
  40e31a:	sub    BYTE PTR ds:0xfeb25dcb,ch
  40e320:	sbb    BYTE PTR [esi-0x410dd5b8],ah
  40e326:	dec    edx
  40e327:	(bad)  
  40e328:	xlat   BYTE PTR ds:[ebx]
  40e329:	pop    es
  40e32a:	pop    ebp
  40e32b:	sub    al,0x9a
  40e32d:	pop    eax
  40e32e:	add    esi,DWORD PTR [esi+0x10]
  40e331:	or     DWORD PTR [edi+0x1ef21e89],ebp
  40e337:	cmc    
  40e338:	fwait
  40e339:	aad    0x91
  40e33b:	jmp    0x40e322
  40e33d:	sub    edx,DWORD PTR [edx+0x22]
  40e340:	pop    ecx
  40e341:	fld    DWORD PTR [esi]
  40e343:	(bad)  
  40e344:	or     eax,0x75d9bee
  40e349:	sti    
  40e34a:	dec    ebp
  40e34b:	dec    eax
  40e34c:	inc    ecx
  40e34d:	lea    ecx,[edi]
  40e34f:	push   ss
  40e350:	int    0x26
  40e352:	sub    DWORD PTR [edx-0x63],edi
  40e355:	inc    esi
  40e356:	sub    BYTE PTR ds:0x36212edf,dh
  40e35c:	sub    al,0xc7
  40e35e:	stos   BYTE PTR es:[edi],al
  40e35f:	xchg   esp,eax
  40e360:	sbb    edx,DWORD PTR [ecx]
  40e362:	imul   edi,esp,0xffffffd9
  40e365:	lock shr DWORD PTR [esi-0x71],cl
  40e369:	inc    ebx
  40e36a:	inc    ebp
  40e36b:	mov    ecx,0x4c327bcf
  40e370:	sahf   
  40e371:	dec    eax
  40e372:	mov    edi,0x30bd791f
  40e377:	bound  ecx,QWORD PTR [ecx+edi*1+0x51]
  40e37b:	cmc    
  40e37c:	(bad)  
  40e37d:	mov    esi,0xe1b808ba
  40e382:	mov    ds:0xed1d56ce,al
  40e387:	pop    ds
  40e388:	(bad)
  40e38c:	xchg   ebx,eax
  40e38d:	je     0x40e3e7
  40e38f:	push   ds
  40e390:	xchg   edi,eax
  40e391:	fisub  DWORD PTR [edx+0x4bf234fe]
  40e397:	into   
  40e398:	repnz cmc 
  40e39a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e39b:	sub    BYTE PTR [edi-0x48],cl
  40e39e:	jmp    0x40e369
  40e3a0:	aaa    
  40e3a1:	cmp    BYTE PTR [eax+0x4d614bb5],cl
  40e3a7:	add    DWORD PTR [edi-0x7ac0e566],ecx
  40e3ad:	jmp    0x40e32f
  40e3af:	pop    edi
  40e3b0:	mov    eax,ds:0xb10a2f36
  40e3b5:	test   BYTE PTR [esi+ecx*2+0x79567e1c],ah
  40e3bc:	(bad)  
  40e3bd:	dec    ecx
  40e3be:	popf   
  40e3bf:	xlat   BYTE PTR ds:[ebx]
  40e3c0:	xchg   edx,eax
  40e3c1:	sub    BYTE PTR [ebp-0x7a859e7e],ah
  40e3c7:	inc    eax
  40e3c8:	aas    
  40e3c9:	add    edx,0xd0e35c5d
  40e3cf:	and    ch,dh
  40e3d1:	gs jae 0x40e3be
  40e3d4:	and    eax,ebp
  40e3d6:	add    eax,0xb5e4c6f8
  40e3db:	push   edx
  40e3dc:	pop    ss
  40e3dd:	dec    esp
  40e3de:	inc    edx
  40e3df:	imul   ebp,DWORD PTR [ecx-0x42],0xffffffee
  40e3e3:	retf   
  40e3e4:	mov    eax,0xc069f9d0
  40e3e9:	cmp    DWORD PTR [ecx],0x16
  40e3ec:	shl    BYTE PTR ds:[eax],1
  40e3ef:	mov    dl,0x8d
  40e3f1:	push   esp
  40e3f2:	jne    0x40e463
  40e3f4:	ss xchg ecx,eax
  40e3f6:	pop    ecx
  40e3f7:	lea    ebp,[ebx-0x1ab92a41]
  40e3fd:	inc    esp
  40e3fe:	xchg   ebp,eax
  40e3ff:	test   al,0xc1
  40e401:	rol    DWORD PTR [edi],1
  40e403:	sti    
  40e404:	xor    eax,ebp
  40e406:	repz clc 
  40e408:	fst    DWORD PTR [ebx+0x2a]
  40e40b:	ret    
  40e40c:	mov    esi,0xfc4ab05b
  40e411:	sub    DWORD PTR [ecx-0x230cebb5],ecx
  40e417:	in     al,dx
  40e418:	xor    eax,0xfc7f625d
  40e41d:	inc    ebp
  40e41e:	nop
  40e41f:	mov    DWORD PTR [edi-0x4ca11bfc],edx
  40e425:	pusha  
  40e426:	pop    es
  40e427:	test   BYTE PTR [edx-0x1fa36768],al
  40e42d:	pop    esp
  40e42e:	cli    
  40e42f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e430:	or     DWORD PTR [esi-0x3b132d3d],esp
  40e436:	inc    ecx
  40e437:	shl    DWORD PTR [ebp+0x3b87e9bc],0x6e
  40e43e:	sahf   
  40e43f:	out    dx,eax
  40e440:	into   
  40e441:	jmp    0xab709605
  40e446:	pop    ebp
  40e447:	xchg   ecx,eax
  40e448:	fild   DWORD PTR [ecx]
  40e44a:	clc    
  40e44b:	test   eax,esi
  40e44d:	jnp    0x40e49d
  40e44f:	xlat   BYTE PTR ds:[ebx]
  40e450:	mov    edx,0x5e379d35
  40e455:	(bad)  
  40e456:	fsubp  st(0),st
  40e458:	jno    0x40e3fa
  40e45a:	ret    
  40e45b:	das    
  40e45c:	cmc    
  40e45d:	cmp    cl,dh
  40e45f:	jb     0x40e412
  40e461:	pop    ss
  40e462:	(bad)  
  40e463:	int    0x91
  40e465:	fnstenv [ecx-0x2a]
  40e468:	jnp    0x40e4df
  40e46a:	push   cs
  40e46b:	sti    
  40e46c:	iret   
  40e46d:	inc    edi
  40e46e:	dec    ecx
  40e46f:	nop
  40e470:	repnz sbb ebp,DWORD PTR [eax+0x36]
  40e474:	push   es
  40e475:	push   esi
  40e476:	sub    eax,esp
  40e478:	jb     0x40e42f
  40e47a:	mov    ch,0x12
  40e47c:	xchg   ebp,eax
  40e47d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e47e:	jo     0x40e419
  40e480:	jmp    0x40e4f7
  40e482:	in     al,dx
  40e483:	hlt    
  40e484:	mov    esp,0x954a2fff
  40e489:	test   eax,0x83bccf28
  40e48e:	out    0x72,al
  40e490:	push   es
  40e491:	push   ss
  40e492:	stos   DWORD PTR es:[edi],eax
  40e493:	or     bh,dl
  40e495:	imul   esp,DWORD PTR [bx+di],0x9009affe
  40e49c:	xor    eax,0xb3d539ba
  40e4a1:	out    dx,eax
  40e4a2:	xchg   edx,eax
  40e4a3:	mov    al,ds:0xdddad59f
  40e4a8:	or     esi,edi
  40e4aa:	inc    ebx
  40e4ab:	iret   
  40e4ac:	retf   0x30cc
  40e4af:	nop
  40e4b0:	push   0xffffffbf
  40e4b2:	mov    ebp,0xb7203b9a
  40e4b7:	std    
  40e4b8:	mov    ebp,gs
  40e4ba:	jb     0x40e464
  40e4bc:	mov    edi,0x28fac48a
  40e4c1:	mov    ebp,0x94b2cc6f
  40e4c6:	xchg   BYTE PTR [ecx-0x3b464de],cl
  40e4cc:	mov    bh,0xf8
  40e4ce:	fiadd  DWORD PTR [ecx+esi*4]
  40e4d1:	sbb    DWORD PTR [ecx],edx
  40e4d3:	ja     0x40e4c2
  40e4d5:	cmc    
  40e4d6:	mov    eax,0xc6484af9
  40e4db:	xor    BYTE PTR [edi+0x27d0e32f],cl
  40e4e1:	or     DWORD PTR [ebx-0x751e7fc2],ebp
  40e4e7:	pop    esp
  40e4e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4e9:	and    eax,DWORD PTR [ecx-0x1152eef3]
  40e4ef:	add    DWORD PTR [esp+edi*8-0x1],ebp
  40e4f3:	and    DWORD PTR [esi+0x42f90f2b],edi
  40e4f9:	fxch   st(5)
  40e4fb:	dec    esp
  40e4fc:	ror    eax,1
  40e4fe:	stos   DWORD PTR es:[edi],eax
  40e4ff:	add    al,0xc6
  40e501:	or     al,0x15
  40e503:	push   edx
  40e504:	arpl   WORD PTR [edi+0x58],dx
  40e507:	frstor [edi+0x48417f1]
  40e50d:	add    al,0x5
  40e50f:	xor    BYTE PTR [ebx+edi*8],ah
  40e512:	xchg   esi,eax
  40e513:	xchg   ebp,eax
  40e514:	pop    ebp
  40e515:	bound  ebp,QWORD PTR [esp+eiz*8+0x3f914133]
  40e51c:	and    eax,edi
  40e51e:	mov    bh,0xb5
  40e520:	pop    es
  40e521:	in     eax,0xd8
  40e523:	fsub   st,st(3)
  40e525:	data16 stos BYTE PTR es:[edi],al
  40e527:	daa    
  40e528:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e529:	ret    
  40e52a:	sbb    esp,DWORD PTR [eax+edi*8-0x4800d17]
  40e531:	or     al,0x15
  40e533:	sbb    al,0x25
  40e535:	rcl    BYTE PTR [ebx],cl
  40e537:	sahf   
  40e538:	pop    edi
  40e539:	xchg   ecx,eax
  40e53a:	pop    ds
  40e53b:	ss inc esi
  40e53d:	stos   BYTE PTR es:[edi],al
  40e53e:	cwde   
  40e53f:	lahf   
  40e540:	jmp    0x4db3:0x5404e7ff
  40e547:	lea    edi,[edx+0x43]
  40e54a:	or     eax,0x9fe7a431
  40e54f:	loopne 0x40e515
  40e551:	nop
  40e552:	adc    BYTE PTR [ebp+0x52],cl
  40e555:	cmp    eax,0x9e0c348d
  40e55a:	hlt    
  40e55b:	inc    esp
  40e55c:	lea    eax,[ebp-0x69af39ee]
  40e562:	lods   al,BYTE PTR ds:[esi]
  40e563:	mov    ds:0xf0e66b4e,eax
  40e568:	mov    dl,0x53
  40e56a:	shr    BYTE PTR [edi],0x5e
  40e56d:	mov    ah,BYTE PTR [edx-0x55]
  40e570:	sub    al,0x7f
  40e572:	lods   eax,DWORD PTR ds:[esi]
  40e573:	mov    dh,0xc3
  40e575:	call   0x267efc7b
  40e57a:	mov    esp,0xe6553b7a
  40e57f:	sbb    BYTE PTR [edx-0x75071ddb],0xf8
  40e586:	lea    eax,[esi]
  40e588:	jge    0x40e5da
  40e58a:	daa    
  40e58b:	mov    bl,0xdb
  40e58d:	pop    eax
  40e58e:	in     eax,0x59
  40e590:	jmp    0xa29b:0xefd85312
  40e597:	pop    ebx
  40e598:	mov    ecx,0x5abe8470
  40e59d:	popa   
  40e59e:	les    ebx,FWORD PTR [edi]
  40e5a0:	push   esp
  40e5a1:	inc    ebp
  40e5a2:	in     eax,dx
  40e5a3:	ins    DWORD PTR es:[edi],dx
  40e5a4:	mov    edx,0xfa0c7896
  40e5a9:	xor    DWORD PTR [eax+0x39],edi
  40e5ac:	add    BYTE PTR [ebx+0x5c],bh
  40e5af:	fidiv  DWORD PTR [ebx+0x47]
  40e5b2:	dec    ebp
  40e5b3:	rol    DWORD PTR [ebp-0x1a],0x8d
  40e5b7:	xor    BYTE PTR [ebx-0x54],dh
  40e5ba:	lea    esi,[edx-0x11]
  40e5bd:	lock xchg esi,eax
  40e5bf:	cmp    al,0xf3
  40e5c1:	in     al,0x52
  40e5c3:	je     0x40e592
  40e5c5:	(bad)  
  40e5c6:	xlat   BYTE PTR ds:[ebx]
  40e5c7:	mov    ebp,0x61779f31
  40e5cc:	mov    ds:0xa66a3db1,eax
  40e5d1:	fs pop es
  40e5d3:	push   ecx
  40e5d4:	ins    DWORD PTR es:[edi],dx
  40e5d5:	ror    DWORD PTR [edi-0x54],cl
  40e5d8:	ins    DWORD PTR es:[edi],dx
  40e5d9:	pushf  
  40e5da:	aas    
  40e5db:	jle    0x40e5e3
  40e5dd:	xchg   edi,eax
  40e5de:	pop    ebx
  40e5df:	adc    DWORD PTR [ebx],0xcb0ba409
  40e5e5:	std    
  40e5e6:	dec    ebp
  40e5e7:	jecxz  0x40e5fb
  40e5e9:	mov    ecx,0x20fd7f07
  40e5ee:	xchg   BYTE PTR [ebx],bl
  40e5f0:	push   edi
  40e5f1:	mov    ds:0xd43f0e3d,eax
  40e5f6:	cmp    al,0x30
  40e5f8:	push   ecx
  40e5f9:	sub    al,0xa1
  40e5fb:	pop    edi
  40e5fc:	call   0x2766:0x51f64300
  40e603:	fmul   st(7),st
  40e605:	mov    bh,0x8e
  40e607:	pop    edi
  40e608:	add    BYTE PTR [ebx],ch
  40e60a:	jno    0x40e5b8
  40e60c:	mov    ds:0xa012cabf,al
  40e611:	push   edx
  40e612:	sbb    cl,al
  40e614:	inc    edi
  40e615:	jge    0x40e623
  40e617:	pushf  
  40e618:	sbb    DWORD PTR [ecx],esi
  40e61a:	mov    al,ds:0xd21bcf1c
  40e61f:	inc    edx
  40e620:	lea    esp,[edx]
  40e622:	xor    BYTE PTR ds:0x161a051b,bl
  40e628:	pushf  
  40e629:	xchg   ebx,eax
  40e62a:	fst    DWORD PTR [ebx]
  40e62c:	adc    DWORD PTR [esi+esi*8+0x21a969f5],ebp
  40e633:	sub    cl,BYTE PTR [ebx]
  40e635:	loopne 0x40e5f0
  40e637:	arpl   WORD PTR [ecx+ebx*1+0x76013d0a],ax
  40e63e:	jl     0x40e5ca
  40e640:	mov    esp,DWORD PTR [eax-0x44145dd]
  40e646:	rcr    BYTE PTR [ebp+0x6924e4d5],cl
  40e64c:	jecxz  0x40e6b1
  40e64e:	stc    
  40e64f:	je     0x40e67c
  40e651:	stc    
  40e652:	and    ebp,DWORD PTR [edi]
  40e654:	std    
  40e655:	dec    esp
  40e656:	loope  0x40e6be
  40e658:	into   
  40e659:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e65a:	push   eax
  40e65b:	pop    eax
  40e65c:	jbe    0x40e69e
  40e65e:	adc    esp,DWORD PTR [ebx+0x41]
  40e661:	and    esi,DWORD PTR [esi]
  40e663:	scas   al,BYTE PTR es:[edi]
  40e664:	push   ds
  40e665:	xor    al,0x8d
  40e667:	ja     0x40e6aa
  40e669:	inc    ecx
  40e66a:	js     0x40e69c
  40e66c:	fisub  WORD PTR [edx-0x7e2c5c09]
  40e672:	push   ebx
  40e673:	mov    esi,0xdf54c604
  40e678:	pop    ecx
  40e679:	push   eax
  40e67a:	out    dx,al
  40e67b:	js     0x40e606
  40e67d:	mov    es,edi
  40e67f:	test   eax,0x56607c36
  40e684:	pop    esp
  40e685:	and    eax,0x7ccfd8c7
  40e68a:	push   0xffffffca
  40e68c:	push   edi
  40e68d:	pushf  
  40e68e:	mov    edi,0xaade7ee3
  40e693:	and    bl,BYTE PTR [edx+edi*4]
  40e696:	dec    esi
  40e697:	inc    ebp
  40e698:	(bad)  
  40e69a:	xchg   esp,eax
  40e69b:	xor    esi,DWORD PTR [esi-0x1a]
  40e69e:	inc    esi
  40e69f:	jae    0x40e6d7
  40e6a1:	sub    esi,edi
  40e6a3:	out    0xb7,al
  40e6a5:	add    ebx,ebp
  40e6a7:	adc    edi,DWORD PTR [edi+0x4c]
  40e6aa:	not    DWORD PTR gs:[ecx-0x3c91083a]
  40e6b1:	adc    al,BYTE PTR [ebx+0x21]
  40e6b4:	inc    edx
  40e6b5:	jae    0x40e6d6
  40e6b7:	and    dl,ch
  40e6b9:	xor    DWORD PTR [ecx],esp
  40e6bb:	pop    es
  40e6bc:	sub    BYTE PTR [eax+ecx*2+0xb],ch
  40e6c0:	in     eax,0x1c
  40e6c2:	int    0xf3
  40e6c4:	push   ebx
  40e6c5:	lock outs dx,DWORD PTR ds:[esi]
  40e6c7:	or     edi,esp
  40e6c9:	lahf   
  40e6ca:	ficomp WORD PTR [esi+edi*2-0x19caecf6]
  40e6d1:	stos   DWORD PTR es:[edi],eax
  40e6d2:	mov    ecx,0xc66dfbe9
  40e6d7:	dec    ebx
  40e6d8:	mov    bl,0x21
  40e6da:	push   ds
  40e6db:	jnp    0x40e675
  40e6dd:	in     al,0x50
  40e6df:	inc    eax
  40e6e0:	cmp    al,0x1f
  40e6e2:	push   cs
  40e6e3:	adc    esp,DWORD PTR [ebp-0x48d5dc89]
  40e6e9:	inc    esi
  40e6ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6eb:	mov    cl,0x99
  40e6ed:	ficomp DWORD PTR [ebx]
  40e6ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6f0:	and    ecx,ecx
  40e6f2:	ficom  DWORD PTR [ebp+0x603ab256]
  40e6f8:	jno    0x40e743
  40e6fa:	call   0xda64c234
  40e6ff:	retf   
  40e700:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e701:	jno    0x40e692
  40e703:	aaa    
  40e704:	sub    BYTE PTR [ebx-0x38],dl
  40e707:	sub    eax,0x7fc0b6a2
  40e70c:	popf   
  40e70d:	imul   edi,DWORD PTR [edx-0x1f730aa6],0xffffffb3
  40e714:	xor    eax,0xcf8ee3b4
  40e719:	cmp    eax,0xb47402
  40e71e:	sti    
  40e71f:	xchg   ecx,eax
  40e720:	aam    0xd
  40e722:	sar    bh,0xe9
  40e725:	dec    ebx
  40e726:	fwait
  40e727:	sbb    DWORD PTR [edx],ecx
  40e729:	dec    ecx
  40e72a:	retf   0xf211
  40e72d:	int3   
  40e72e:	pop    ebp
  40e72f:	pop    ss
  40e730:	aad    0xaa
  40e732:	fwait
  40e733:	lds    esp,FWORD PTR [ebx]
  40e735:	and    edi,DWORD PTR [edi]
  40e737:	adc    al,BYTE PTR [ebp+0x2c]
  40e73a:	pop    edx
  40e73b:	add    BYTE PTR [esi],0x1c
  40e73e:	sbb    BYTE PTR [edi+esi*2-0x472cb552],bh
  40e745:	cmp    ebx,DWORD PTR [edx]
  40e747:	gs xchg edx,eax
  40e749:	pop    ds
  40e74a:	push   ss
  40e74b:	or     eax,esp
  40e74d:	inc    ecx
  40e74e:	ret    0x57d5
  40e751:	in     eax,dx
  40e752:	jmp    eax
  40e754:	aam    0x7c
  40e756:	jp     0x40e782
  40e758:	retf   0xd01d
  40e75b:	popa   
  40e75c:	push   eax
  40e75d:	and    BYTE PTR [ecx],bl
  40e75f:	in     eax,dx
  40e760:	frstor [eax]
  40e762:	mov    ah,0x83
  40e764:	std    
  40e765:	pop    esp
  40e766:	rol    edx,cl
  40e768:	mov    edi,DWORD PTR [ebp+edi*1-0x40]
  40e76c:	rcl    DWORD PTR [edx],cl
  40e76e:	neg    cl
  40e770:	xchg   esi,eax
  40e771:	dec    esp
  40e772:	push   esi
  40e773:	push   ss
  40e774:	add    DWORD PTR [ecx+0x75379d80],0xffffffb7
  40e77b:	push   ds
  40e77c:	adc    DWORD PTR [eax-0x735ff399],eax
  40e782:	pop    edx
  40e783:	xor    al,0x3e
  40e785:	pop    ss
  40e786:	push   ebx
  40e787:	bound  esp,QWORD PTR [edi+ebp*4]
  40e78a:	push   ecx
  40e78b:	push   ss
  40e78c:	nop
  40e78d:	loopne 0x40e749
  40e78f:	and    DWORD PTR [esi],edi
  40e791:	mov    ds:0x93205f91,al
  40e796:	(bad)  
  40e797:	sbb    al,0xb8
  40e799:	dec    ecx
  40e79a:	mov    BYTE PTR [edi],0xd4
  40e79d:	mov    WORD PTR [edi-0x40a42123],ss
  40e7a3:	out    dx,al
  40e7a4:	inc    ebp
  40e7a5:	leave  
  40e7a6:	mov    eax,0x3f0075ad
  40e7ab:	loope  0x40e7f5
  40e7ad:	fs dec edi
  40e7af:	sbb    BYTE PTR [esi],ch
  40e7b1:	push   ecx
  40e7b2:	hlt    
  40e7b3:	aas    
  40e7b4:	cmp    al,0xc7
  40e7b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7b7:	enter  0x1ff8,0x82
  40e7bb:	mov    ecx,0x956180f
  40e7c0:	inc    ebx
  40e7c1:	in     al,0x26
  40e7c3:	add    DWORD PTR [ebp-0x7f4a9ad4],eax
  40e7c9:	data16 clc 
  40e7cb:	mov    eax,ds:0x1157465d
  40e7d0:	std    
  40e7d1:	dec    eax
  40e7d2:	push   edi
  40e7d3:	mov    ebp,0xb147a5d7
  40e7d8:	sub    ah,BYTE PTR [ecx-0x6e1dabb6]
  40e7de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7df:	inc    esp
  40e7e0:	mov    ch,0x79
  40e7e2:	lea    esi,[ebp+edx*8-0x3b6569dd]
  40e7e9:	jle    0x40e7dc
  40e7eb:	pop    es
  40e7ec:	jmp    0x38e20f5c
  40e7f1:	daa    
  40e7f2:	mov    dh,0x7a
  40e7f4:	shl    edx,1
  40e7f6:	xchg   esi,eax
  40e7f7:	cli    
  40e7f8:	scas   al,BYTE PTR es:[edi]
  40e7f9:	hlt    
  40e7fa:	cmp    BYTE PTR [ecx+0x50e9f2d8],dl
  40e800:	ins    DWORD PTR es:[edi],dx
  40e801:	addr16 cmp ebx,esp
  40e804:	sub    BYTE PTR [eax],cl
  40e806:	or     BYTE PTR [ecx],cl
  40e808:	sbb    eax,0x884c2bcd
  40e80d:	mov    bh,0x55
  40e80f:	jnp    0x40e87e
  40e811:	shr    bh,1
  40e813:	add    al,0x31
  40e815:	popa   
  40e816:	mov    esi,0x97147432
  40e81b:	mov    ebx,0xa5137b04
  40e820:	adc    al,0x94
  40e822:	adc    ebp,ebx
  40e824:	fsubr  st,st(7)
  40e826:	add    al,0x70
  40e828:	xor    ebp,DWORD PTR [esi+0x23]
  40e82b:	call   0xc8c95961
  40e830:	jnp    0x40e81c
  40e832:	lahf   
  40e833:	out    dx,eax
  40e834:	nop
  40e835:	mov    ch,0xa5
  40e837:	fidiv  DWORD PTR [edi+eiz*4]
  40e83a:	add    edi,0xb26736cd
  40e840:	pop    ss
  40e841:	outs   dx,BYTE PTR ds:[esi]
  40e842:	jne    0x40e86a
  40e844:	ret    
  40e845:	mov    ah,0xbe
  40e847:	xor    ebx,DWORD PTR [edx]
  40e849:	rcr    DWORD PTR [ebp-0x66],1
  40e84c:	pop    ecx
  40e84d:	ret    0xcb4f
  40e850:	sbb    al,0x35
  40e852:	pop    esi
  40e853:	cmp    ecx,DWORD PTR [edx]
  40e855:	outs   dx,BYTE PTR ds:[esi]
  40e856:	jp     0x40e896
  40e858:	xchg   edi,eax
  40e859:	mov    ah,BYTE PTR [ebp+0x26]
  40e85c:	push   cs
  40e85d:	mov    bl,BYTE PTR es:[eax+0x536a77c9]
  40e864:	xor    al,0x87
  40e866:	lea    ebx,[edx]
  40e868:	out    0x58,al
  40e86a:	lds    ecx,FWORD PTR [edi+0x6c6ff6e1]
  40e870:	mov    dh,0x80
  40e873:	stos   BYTE PTR es:[edi],al
  40e874:	mov    bl,0xe9
  40e876:	cwde   
  40e877:	pop    edi
  40e878:	(bad)  
  40e879:	mov    cs,WORD PTR [ecx+0x35d6ef74]
  40e87f:	sbb    edx,DWORD PTR [ecx]
  40e881:	das    
  40e882:	xchg   BYTE PTR [edx],ch
  40e884:	inc    ecx
  40e885:	or     DWORD PTR [ecx-0x9037e2d],edi
  40e88b:	aam    0xb1
  40e88d:	jne    0x40e8fb
  40e88f:	jecxz  0x40e890
  40e891:	(bad)  
  40e893:	inc    esp
  40e894:	adc    eax,0x9bb6d36d
  40e899:	xor    BYTE PTR [eax+ecx*1-0x3180f873],bl
  40e8a0:	jg     0x40e901
  40e8a2:	dec    eax
  40e8a3:	addr16 jle 0x40e8e4
  40e8a6:	xchg   edx,eax
  40e8a7:	(bad)  
  40e8a8:	adc    al,0xfd
  40e8aa:	jp     0x40e8bf
  40e8ac:	icebp  
  40e8ad:	mov    DWORD PTR [ebx],edi
  40e8af:	jl     0x40e87a
  40e8b1:	and    ch,BYTE PTR [ecx]
  40e8b3:	ret    0x6009
  40e8b6:	jmp    0x40e8b5
  40e8b8:	push   0x6f
  40e8ba:	sub    edx,ecx
  40e8bc:	mov    ds:0x6f7f6977,eax
  40e8c1:	adc    edx,DWORD PTR [ebp+0x26]
  40e8c4:	push   edi
  40e8c5:	or     BYTE PTR [edx-0x56205e1],0xa2
  40e8cc:	push   edi
  40e8cd:	inc    esi
  40e8ce:	adc    ah,BYTE PTR [edx-0x28]
  40e8d1:	sub    eax,0x3657d7fa
  40e8d6:	out    0x69,eax
  40e8d8:	fcomp  DWORD PTR [eax]
  40e8da:	mov    ds:0x6d484cb0,al
  40e8df:	fild   DWORD PTR [edi+0x2c]
  40e8e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8e3:	fsub   DWORD PTR [eax]
  40e8e5:	or     DWORD PTR [edi-0xb],esi
  40e8e8:	in     eax,0x2b
  40e8ea:	inc    ecx
  40e8eb:	xchg   esp,eax
  40e8ec:	data16 lahf 
  40e8ee:	(bad)  
  40e8ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8f0:	and    BYTE PTR [ebp-0x6],0xc3
  40e8f4:	dec    esp
  40e8f5:	dec    ebx
  40e8f6:	mov    eax,ds:0x766c842e
  40e8fb:	arpl   di,sp
  40e8fd:	test   ebx,edi
  40e8ff:	inc    eax
  40e901:	xchg   esi,eax
  40e902:	mov    bl,0xf1
  40e904:	aam    0x57
  40e906:	mov    al,0x4d
  40e908:	jmp    0x3a93:0x3e8be75c
  40e90f:	rol    BYTE PTR ds:0x28115eed,cl
  40e915:	and    al,0x7
  40e917:	ins    DWORD PTR es:[edi],dx
  40e918:	test   BYTE PTR [eax+eiz*4-0x11],bh
  40e91c:	jg     0x40e977
  40e91e:	or     BYTE PTR [esi+0x71],dl
  40e921:	pop    ebx
  40e922:	out    0xe,eax
  40e924:	dec    ecx
  40e925:	outs   dx,DWORD PTR ds:[esi]
  40e926:	cmp    eax,0x3c094b2f
  40e92b:	popa   
  40e92c:	pop    esi
  40e92d:	fmulp  st(0),st
  40e92f:	adc    BYTE PTR [ecx],dl
  40e931:	adc    eax,0xfcd0349
  40e936:	pop    es
  40e937:	cmc    
  40e938:	push   edx
  40e939:	xor    BYTE PTR [eax-0x25],0xb6
  40e93d:	(bad)  
  40e93f:	mov    esp,0xbc68b438
  40e944:	ds call 0xfbd1:0x8e64f937
  40e94c:	and    BYTE PTR [edx-0x15a3b968],bl
  40e952:	arpl   ax,si
  40e954:	pop    esi
  40e955:	mov    bl,0x16
  40e957:	adc    BYTE PTR [eax],0xe5
  40e95a:	add    al,0xd1
  40e95c:	jo     0x40e992
  40e95e:	out    dx,al
  40e95f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e960:	xor    eax,0xeb8e1f6b
  40e965:	push   0x7145f825
  40e96a:	mov    al,ds:0xa5c16fc
  40e96f:	call   DWORD PTR [edi]
  40e971:	out    0x73,eax
  40e973:	mov    ebx,0x169c6b2a
  40e978:	scas   al,BYTE PTR es:[edi]
  40e979:	scas   eax,DWORD PTR es:[edi]
  40e97a:	push   esp
  40e97b:	fld    TBYTE PTR [edi+0x5e]
  40e97e:	xchg   esi,eax
  40e97f:	sub    DWORD PTR [esi+0x1d],ebp
  40e982:	and    BYTE PTR [eax-0x12a41225],ch
  40e988:	(bad)  
  40e989:	push   ss
  40e98a:	xchg   edi,eax
  40e98b:	aas    
  40e98c:	xor    BYTE PTR [esi-0x2d0fbc48],ah
  40e992:	(bad)  
  40e993:	mov    esi,0xac648248
  40e998:	push   esi
  40e999:	aad    0x3a
  40e99b:	iret   
  40e99c:	mov    eax,DWORD PTR [eax+ebp*4-0x2]
  40e9a0:	aad    0x30
  40e9a2:	or     DWORD PTR [ebp-0x7033dd74],0x932960dd
  40e9ac:	arpl   WORD PTR [edx+ecx*2-0x52],sp
  40e9b0:	out    0x43,eax
  40e9b2:	inc    esi
  40e9b3:	(bad)  [esi]
  40e9b5:	stos   DWORD PTR es:[edi],eax
  40e9b6:	test   al,0x2b
  40e9b8:	push   ebp
  40e9b9:	jb     0x40ea11
  40e9bb:	or     BYTE PTR [eax],dl
  40e9bd:	jnp    0x40e9d8
  40e9bf:	cs call 0x4d98672a
  40e9c5:	push   edx
  40e9c6:	xchg   esi,eax
  40e9c7:	add    al,0x90
  40e9c9:	dec    ebp
  40e9ca:	sub    bh,dh
  40e9cc:	scas   eax,DWORD PTR es:[edi]
  40e9cd:	fwait
  40e9ce:	jbe    0x40e9d8
  40e9d0:	pop    esi
  40e9d1:	pop    edi
  40e9d2:	not    DWORD PTR [ecx+eax*8-0x6d03beca]
  40e9d9:	in     eax,dx
  40e9da:	lock xchg edx,eax
  40e9dc:	cld    
  40e9dd:	sub    DWORD PTR [edi+0xb],ebx
  40e9e0:	mov    esp,DWORD PTR [edi]
  40e9e2:	adc    DWORD PTR cs:[ebp+0x69],esp
  40e9e6:	add    DWORD PTR ds:0x5246bf93,0x911345c9
  40e9f0:	sbb    DWORD PTR [ecx+ebp*4],0xfc5caf60
  40e9f7:	lahf   
  40e9f8:	xchg   BYTE PTR [esi+0x35080b0],bl
  40e9fe:	cmp    dl,BYTE PTR [edi]
  40ea00:	inc    edi
  40ea01:	or     al,0x73
  40ea03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea04:	or     DWORD PTR [eax-0x5f],0x2a4f7577
  40ea0b:	push   ebp
  40ea0c:	xchg   edi,eax
  40ea0d:	leave  
  40ea0e:	icebp  
  40ea0f:	push   0x8c0d765c
  40ea14:	fdiv   st,st(6)
  40ea16:	pop    es
  40ea17:	repz (bad) 
  40ea19:	in     al,0x6a
  40ea1b:	fmulp  st(4),st
  40ea1d:	sahf   
  40ea1e:	jmp    0x40e9db
  40ea20:	std    
  40ea21:	dec    ebp
  40ea22:	mov    esp,gs
  40ea24:	loopne 0x40ea36
  40ea26:	dec    edx
  40ea27:	in     eax,0x16
  40ea29:	test   DWORD PTR [ecx-0x664ee92b],edi
  40ea2f:	mov    cl,0xcf
  40ea31:	cld    
  40ea32:	(bad)  
  40ea33:	mov    al,ds:0x53f12613
  40ea38:	pop    esi
  40ea39:	mov    esi,0x7a80e56e
  40ea3e:	and    BYTE PTR [ecx],cl
  40ea40:	lods   eax,DWORD PTR es:[esi]
  40ea42:	test   eax,0x7a82bb33
  40ea47:	test   al,0xfb
  40ea49:	neg    DWORD PTR [eax+ecx*4]
  40ea4c:	pop    ebp
  40ea4d:	aad    0xe4
  40ea4f:	cmp    ch,BYTE PTR [eax+edx*1+0x47]
  40ea53:	or     edx,DWORD PTR gs:[edi-0xf]
  40ea57:	adc    ebp,DWORD PTR [ebx+esi*4+0x28d832bb]
  40ea5e:	data16 or bh,al
  40ea61:	jno    0x40ea73
  40ea63:	xchg   esp,eax
  40ea64:	push   edx
  40ea65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea66:	inc    esi
  40ea67:	push   eax
  40ea68:	sub    BYTE PTR [esi-0x57f38aed],0x10
  40ea6f:	std    
  40ea70:	jae    0x40ea80
  40ea72:	add    BYTE PTR [ebp-0x7f],ch
  40ea75:	inc    edi
  40ea76:	push   edi
  40ea77:	sub    BYTE PTR [eax],dl
  40ea79:	aad    0xe2
  40ea7b:	mov    eax,0x9c5614c6
  40ea80:	sbb    DWORD PTR [ebp+0x68bf0b80],ebx
  40ea86:	sti    
  40ea87:	xor    DWORD PTR [edi-0x80],edx
  40ea8a:	xor    eax,0xd989e4fc
  40ea8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea90:	cs push esi
  40ea92:	jmp    0x3f0e89de
  40ea97:	jmp    0x8bf4:0xc902c608
  40ea9e:	mov    ds:0x41bcfe4b,eax
  40eaa3:	ss mov bh,ch
  40eaa6:	inc    ebx
  40eaa7:	mov    BYTE PTR [ebp+0x3775a65],ch
  40eaad:	packsswb mm4,QWORD PTR [edx]
  40eab0:	pop    edx
  40eab1:	and    ebp,DWORD PTR [esi+0x20]
  40eab4:	popf   
  40eab5:	addr16 imul esp
  40eab8:	out    dx,al
  40eab9:	adc    eax,0x9dbf7e02
  40eabe:	mov    WORD PTR [esi+0x426fe1e],fs
  40eac4:	(bad)  
  40eac5:	jno    0x40eb03
  40eac7:	dec    ebx
  40eac8:	in     eax,dx
  40eac9:	jae    0x40eb24
  40eacb:	repz or BYTE PTR [esi+0x24],bh
  40eacf:	add    DWORD PTR ds:[ebp-0x20070c0b],ebp
  40ead6:	aad    0xce
  40ead8:	cli    
  40ead9:	es ret 
  40eadb:	adc    al,0x58
  40eadd:	fcmovbe st,st(2)
  40eadf:	add    al,0x79
  40eae1:	xor    DWORD PTR [edx-0x11],ebx
  40eae4:	sub    DWORD PTR [ecx-0x53],esi
  40eae7:	scas   al,BYTE PTR es:[edi]
  40eae8:	icebp  
  40eae9:	jg     0x40eb0e
  40eaeb:	fistp  WORD PTR [eax-0x6a9bd2b9]
  40eaf1:	stc    
  40eaf2:	pop    ds
  40eaf3:	sbb    ebp,DWORD PTR [ebx+eax*1+0x11073d89]
  40eafa:	pop    ds
  40eafb:	push   edx
  40eafc:	ds aad 0xe1
  40eaff:	mov    ebx,0x1b0d4829
  40eb04:	aad    0x61
  40eb06:	hlt    
  40eb07:	pop    ebx
  40eb08:	pop    ebp
  40eb09:	add    BYTE PTR [edi],0xa0
  40eb0c:	or     ebx,DWORD PTR [edx+0x5e7f16e8]
  40eb12:	ret    0x3716
  40eb15:	sbb    esp,DWORD PTR [eax-0x30]
  40eb18:	cmp    cl,ah
  40eb1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb1b:	in     eax,0xb8
  40eb1d:	int3   
  40eb1e:	add    al,0x65
  40eb20:	jbe    0x40eb1e
  40eb22:	ret    0xe7f4
  40eb25:	rcl    BYTE PTR [esi-0x70],cl
  40eb28:	aad    0x81
  40eb2a:	call   0x2601:0xd3edd713
  40eb31:	cmp    cl,BYTE PTR [ecx+0x4ea79124]
  40eb37:	jnp    0x40eb7b
  40eb39:	test   DWORD PTR [esi],esp
  40eb3b:	push   ebp
  40eb3c:	daa    
  40eb3d:	ficom  WORD PTR [edx+0x43]
  40eb40:	mov    edi,eax
  40eb42:	lock mov al,0x67
  40eb45:	mov    dh,0x15
  40eb47:	fcomip st,st(0)
  40eb49:	test   al,0x5c
  40eb4b:	sar    BYTE PTR gs:[esp+ebp*8],1
  40eb4f:	mov    WORD PTR [edi],ds
  40eb51:	jns    0x40eaf0
  40eb53:	inc    ecx
  40eb54:	in     eax,dx
  40eb55:	or     ebp,DWORD PTR [esi-0x9]
  40eb58:	xchg   esi,eax
  40eb59:	out    dx,al
  40eb5a:	push   esp
  40eb5b:	(bad)  
  40eb5c:	xlat   BYTE PTR ds:[ebx]
  40eb5d:	add    al,0x9e
  40eb5f:	cmp    eax,0x2571f0a5
  40eb64:	pusha  
  40eb65:	cmovb  eax,DWORD PTR [ebx-0x34]
  40eb69:	mov    ebx,0x98a37d53
  40eb6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb6f:	pusha  
  40eb70:	xor    DWORD PTR [ebx],edi
  40eb72:	out    0x11,eax
  40eb74:	hlt    
  40eb75:	sbb    BYTE PTR [ecx-0x1702e4d2],0x30
  40eb7c:	out    dx,eax
  40eb7d:	aad    0xa9
  40eb7f:	sub    DWORD PTR ds:0xcfdcfac7,ecx
  40eb85:	shr    DWORD PTR [ecx-0x2a],0xa2
  40eb89:	out    dx,eax
  40eb8a:	dec    esi
  40eb8b:	call   0x8345:0x81530526
  40eb92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb93:	pop    esp
  40eb94:	stos   BYTE PTR es:[edi],al
  40eb95:	push   ds
  40eb96:	mov    eax,ds:0xec331f23
  40eb9b:	mov    ch,0x1f
  40eb9d:	aam    0x7a
  40eb9f:	lods   eax,DWORD PTR ds:[esi]
  40eba0:	pop    es
  40eba1:	mov    bl,0xe6
  40eba3:	aad    0x2b
  40eba5:	jecxz  0x40ec08
  40eba7:	mov    dl,0x7d
  40eba9:	xrelease mov BYTE PTR [edx],bh
  40ebac:	and    DWORD PTR [ebp-0x691a88d6],ecx
  40ebb2:	outs   dx,BYTE PTR ds:[esi]
  40ebb3:	retf   
  40ebb4:	cmp    DWORD PTR [eax+0x10df02ee],ebx
  40ebba:	sub    BYTE PTR [eax+esi*1-0x3b19cb51],dh
  40ebc1:	jnp    0x40ebd1
  40ebc3:	icebp  
  40ebc4:	stc    
  40ebc5:	dec    eax
  40ebc6:	cmp    ah,BYTE PTR [eax-0x2f2238af]
  40ebcc:	inc    esp
  40ebcd:	(bad)  
  40ebce:	js     0x40ebc2
  40ebd0:	shl    DWORD PTR [ebx],cl
  40ebd2:	ret    0xc71
  40ebd5:	xchg   ebp,eax
  40ebd6:	xchg   ebx,eax
  40ebd7:	or     DWORD PTR [esi],0x10fd4ad7
  40ebdd:	call   0x7f68:0x88327612
  40ebe4:	push   esi
  40ebe5:	push   es
  40ebe6:	add    al,0xbe
  40ebe8:	test   al,0x91
  40ebea:	or     DWORD PTR [eax-0x7d29e448],0xa37500d3
  40ebf4:	and    edx,eax
  40ebf6:	out    0x40,eax
  40ebf8:	(bad)  
  40ebf9:	push   0xffffffed
  40ebfb:	icebp  
  40ebfc:	mov    gs,ebx
  40ebfe:	clc    
  40ebff:	aam    0x4e
  40ec01:	cs stos BYTE PTR es:[edi],al
  40ec03:	push   esi
  40ec04:	ss dec ebx
  40ec06:	add    edx,DWORD PTR [ebx+0x3b1f3bbb]
  40ec0c:	jecxz  0x40ebb0
  40ec0e:	dec    edx
  40ec0f:	lods   eax,DWORD PTR ds:[esi]
  40ec10:	push   edi
  40ec11:	pop    esp
  40ec12:	mov    esi,0xc031db9a
  40ec17:	xor    ecx,DWORD PTR [esi]
  40ec19:	sub    BYTE PTR es:[ebx+edi*4],bl
  40ec1d:	xor    BYTE PTR [eax+eiz*1+0x5d],ah
  40ec21:	fmul   st(2),st
  40ec23:	pop    ss
  40ec24:	cdq    
  40ec25:	inc    eax
  40ec26:	cs (bad) 
  40ec28:	repz cmp BYTE PTR [edx+0x59],dh
  40ec2c:	push   edi
  40ec2d:	xchg   ecx,eax
  40ec2e:	sub    eax,0x5cfb8558
  40ec33:	repnz pop esi
  40ec35:	lock fld QWORD PTR [ebp+0x38]
  40ec39:	cmp    bh,BYTE PTR [ebp+0x355246eb]
  40ec3f:	call   0x4b89fcd5
  40ec44:	mov    bl,0x4b
  40ec46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec47:	mov    bh,cl
  40ec49:	ret    0xe47d
  40ec4c:	fist   WORD PTR [ebx+0x7dd2f252]
  40ec52:	dec    eax
  40ec53:	or     ebx,ecx
  40ec55:	fwait
  40ec56:	jbe    0x40ec76
  40ec58:	push   esp
  40ec59:	stos   BYTE PTR es:[edi],al
  40ec5a:	(bad)
  40ec5d:	or     DWORD PTR [ecx+0x376eae8d],ebp
  40ec63:	icebp  
  40ec64:	dec    ebx
  40ec65:	adc    BYTE PTR [ecx+0x76],0xcb
  40ec69:	mov    ch,0xeb
  40ec6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec6c:	rol    esi,cl
  40ec6e:	inc    ecx
  40ec6f:	pop    ecx
  40ec70:	push   ebp
  40ec71:	lahf   
  40ec72:	push   es
  40ec73:	ins    BYTE PTR es:[edi],dx
  40ec74:	pop    ds
  40ec75:	jb     0x40ecb0
  40ec77:	sub    ebx,ebp
  40ec79:	loop   0x40ec1c
  40ec7b:	cwde   
  40ec7c:	and    al,BYTE PTR [esi]
  40ec7e:	outs   dx,DWORD PTR ds:[esi]
  40ec7f:	ret    
  40ec80:	inc    eax
  40ec81:	stos   BYTE PTR es:[edi],al
  40ec82:	or     bl,BYTE PTR ds:0xaefb76d4
  40ec88:	inc    eax
  40ec89:	gs enter 0xcfc4,0x5a
  40ec8e:	pop    ebp
  40ec8f:	cmp    eax,0x3854a500
  40ec94:	neg    DWORD PTR [eax+0x2a]
  40ec97:	stc    
  40ec98:	in     al,0x7
  40ec9a:	ss dec esi
  40ec9c:	inc    ebx
  40ec9d:	mov    esi,0xf3b83bd4
  40eca2:	sub    ch,BYTE PTR [ebx-0x6c]
  40eca5:	mov    eax,ebx
  40eca7:	or     ah,cl
  40eca9:	pop    ebp
  40ecaa:	lods   eax,DWORD PTR ds:[esi]
  40ecab:	xchg   ebp,eax
  40ecac:	xor    ch,0x42
  40ecaf:	mov    BYTE PTR ds:0x2df881a8,dh
  40ecb5:	push   ebx
  40ecb6:	xor    al,0xd2
  40ecb8:	adc    al,BYTE PTR [edx+0x213f8e31]
  40ecbe:	inc    esp
  40ecbf:	(bad)  
  40ecc0:	or     eax,0xc4585809
  40ecc5:	fsub   st(3),st
  40ecc7:	jno    0x40ec5b
  40ecc9:	inc    ebp
  40ecca:	inc    ecx
  40eccb:	cmp    eax,0x51369b7e
  40ecd0:	outs   dx,DWORD PTR ds:[esi]
  40ecd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecd2:	aad    0xbe
  40ecd4:	(bad)  
  40ecd5:	jns    0x40ed0d
  40ecd7:	out    0xc5,eax
  40ecd9:	icebp  
  40ecda:	das    
  40ecdb:	dec    esp
  40ecdc:	or     DWORD PTR [ebx+0x3f],esi
  40ecdf:	xlat   BYTE PTR ds:[ebx]
  40ece0:	jg     0x40ed1b
  40ece2:	and    eax,0x41806ca0
  40ece7:	mov    edi,0x359f48f
  40ecec:	dec    esi
  40eced:	ss jae 0x40ed55
  40ecf0:	or     al,0x53
  40ecf2:	mov    al,0x5d
  40ecf4:	div    al
  40ecf6:	mov    DWORD PTR ds:0x73b331f4,edx
  40ecfc:	clc    
  40ecfd:	dec    ebp
  40ecfe:	xor    DWORD PTR [ecx-0x127e643e],edi
  40ed04:	add    BYTE PTR [esi+0x2af54904],bl
  40ed0a:	lea    edx,[ecx-0x4db2e54f]
  40ed10:	addr16 push 0xc
  40ed13:	xor    cl,BYTE PTR [edx]
  40ed15:	lods   eax,DWORD PTR ds:[esi]
  40ed16:	mov    eax,ds:0x82a41977
  40ed1b:	or     ch,bl
  40ed1d:	ins    BYTE PTR es:[edi],dx
  40ed1e:	test   BYTE PTR [eax-0x6de7ae08],dh
  40ed24:	dec    edx
  40ed25:	retf   0xc219
  40ed28:	lods   al,BYTE PTR ds:[esi]
  40ed29:	shl    DWORD PTR [ebx+0x5c2b47f2],1
  40ed2f:	stos   BYTE PTR es:[edi],al
  40ed30:	rcl    BYTE PTR [ebp+0x10],1
  40ed33:	push   edi
  40ed34:	adc    BYTE PTR [ecx],0xd9
  40ed37:	inc    eax
  40ed38:	xchg   bh,dh
  40ed3a:	adc    al,0x1d
  40ed3c:	inc    edx
  40ed3d:	xchg   edx,eax
  40ed3e:	inc    edi
  40ed3f:	retf   0x1e50
  40ed42:	addr16 mov al,al
  40ed45:	add    ebp,DWORD PTR [eax+0x5b761af]
  40ed4b:	pop    es
  40ed4c:	je     0x40ed41
  40ed4e:	pop    ecx
  40ed4f:	mov    dh,0xad
  40ed51:	push   0x8349ef12
  40ed56:	inc    esp
  40ed57:	ja     0x40ed2b
  40ed59:	or     eax,0x846f845d
  40ed5e:	dec    ecx
  40ed5f:	cmp    dh,bh
  40ed61:	repnz mov al,ds:0x255b75d2
  40ed67:	(bad)  
  40ed68:	push   ds
  40ed69:	popf   
  40ed6a:	out    dx,eax
  40ed6b:	or     BYTE PTR [ebp-0x21],ch
  40ed6e:	mov    esp,fs
  40ed70:	xchg   esp,eax
  40ed71:	fstp   st(0)
  40ed73:	shr    BYTE PTR [edx],0x18
  40ed76:	js     0x40ed02
  40ed78:	mov    ds:0x87419646,eax
  40ed7d:	lea    ebp,[ebx]
  40ed7f:	inc    esi
  40ed81:	adc    al,0x4
  40ed83:	loop   0x40ed9c
  40ed85:	cs in  eax,dx
  40ed87:	xor    DWORD PTR [esi+0x77],edx
  40ed8a:	xchg   ebx,eax
  40ed8b:	pop    ss
  40ed8c:	sub    ah,cl
  40ed8e:	adc    bh,BYTE PTR [ebp-0x1aa75a43]
  40ed94:	outs   dx,DWORD PTR ds:[si]
  40ed96:	push   ebx
  40ed97:	std    
  40ed98:	mov    ebx,0x7daac171
  40ed9d:	sbb    ebx,ebp
  40ed9f:	sub    eax,0x427403fb
  40eda4:	push   es
  40eda5:	xor    DWORD PTR [ecx],edi
  40eda7:	push   ebp
  40eda8:	xor    DWORD PTR [ebx-0x71db6c50],esp
  40edae:	cs mov bl,bl
  40edb1:	or     edi,ebx
  40edb3:	sub    ah,BYTE PTR [eax-0x50]
  40edb6:	cld    
  40edb7:	int    0x39
  40edb9:	inc    ecx
  40edba:	aaa    
  40edbb:	pop    eax
  40edbc:	lods   al,BYTE PTR ds:[esi]
  40edbd:	data16 mov gs,WORD PTR [eax-0x235d9f4b]
  40edc4:	pop    esi
  40edc5:	pop    eax
  40edc6:	or     eax,0x292df448
  40edcb:	ror    ecx,cl
  40edcd:	sbb    al,0xd3
  40edcf:	popa   
  40edd0:	xor    esi,DWORD PTR [edx+0x23]
  40edd3:	mov    esi,0x82870d79
  40edd8:	loopne 0x40ed8f
  40edda:	adc    BYTE PTR [ebp+0x70],al
  40eddd:	out    dx,al
  40edde:	ret    0x19c4
  40ede1:	cmp    eax,0xe068f7b3
  40ede6:	mov    BYTE PTR [ebp+0x4a837180],0x90
  40eded:	xchg   esi,eax
  40edee:	sbb    esi,DWORD PTR [edx+esi*1]
  40edf1:	cmp    BYTE PTR [ecx-0x1f],cl
  40edf4:	jecxz  0x40ee5b
  40edf6:	push   ebp
  40edf7:	in     eax,dx
  40edf8:	xchg   esi,eax
  40edf9:	ret    0x348c
  40edfc:	inc    ebp
  40edfd:	mov    ds:0x46418c11,al
  40ee02:	pop    edx
  40ee03:	in     eax,dx
  40ee04:	mov    ebx,0x939ec902
  40ee09:	sbb    bl,ah
  40ee0b:	(bad)  
  40ee0c:	inc    edx
  40ee0d:	popf   
  40ee0e:	jl     0x40edd6
  40ee10:	cmp    BYTE PTR [esi-0xb724dfa],bl
  40ee16:	rep ins DWORD PTR es:[edi],dx
  40ee18:	jbe    0x40ee1d
  40ee1a:	xchg   BYTE PTR [esi+0x9df1480],bl
  40ee20:	sub    al,0xd0
  40ee22:	and    eax,0xc6d63d48
  40ee27:	pushf  
  40ee28:	inc    esi
  40ee29:	and    esp,DWORD PTR [ecx+0x136b58a6]
  40ee2f:	aaa    
  40ee30:	das    
  40ee31:	je     0x40edc9
  40ee33:	in     al,0x43
  40ee35:	mov    eax,0x47944901
  40ee3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee3b:	sbb    dl,BYTE PTR [eax]
  40ee3d:	dec    ebp
  40ee3e:	mov    eax,ds:0x1081267f
  40ee43:	sub    DWORD PTR [ebx+0x109ec89c],edx
  40ee49:	jo     0x40ee9d
  40ee4b:	je     0x40ee03
  40ee4d:	xchg   esp,eax
  40ee4e:	adc    eax,edi
  40ee50:	scas   al,BYTE PTR es:[edi]
  40ee51:	and    al,dl
  40ee53:	sbb    eax,0x343f26ed
  40ee58:	mov    ds:0x67a0ee06,al
  40ee5d:	cli    
  40ee5e:	sbb    BYTE PTR [esi-0x75],cl
  40ee61:	in     eax,0x9e
  40ee63:	stos   DWORD PTR es:[edi],eax
  40ee64:	jbe    0x40eeb5
  40ee66:	popa   
  40ee67:	jmp    0x40ee02
  40ee69:	add    edx,DWORD PTR [edx-0x32]
  40ee6c:	mov    esp,0xd5a7850
  40ee71:	pop    ecx
  40ee72:	loop   0x40eee2
  40ee74:	ror    BYTE PTR [edx-0x7],1
  40ee77:	not    bh
  40ee79:	or     al,0xe8
  40ee7b:	ds mov edx,0xd6224d2
  40ee81:	dec    edx
  40ee82:	push   edi
  40ee83:	cmp    eax,0x1aeaee24
  40ee88:	inc    esp
  40ee89:	in     al,0x79
  40ee8b:	mov    ebp,0x3ceb63b7
  40ee90:	sar    DWORD PTR [esi],1
  40ee92:	dec    edx
  40ee93:	add    DWORD PTR [eax-0x7b1cb153],ecx
  40ee99:	pop    esi
  40ee9a:	(bad)  
  40ee9b:	mov    edx,0xcb34216c
  40eea0:	inc    ebp
  40eea1:	faddp  st(7),st
  40eea3:	aam    0x3d
  40eea5:	inc    esp
  40eea6:	push   0x78
  40eea8:	retf   
  40eea9:	sbb    BYTE PTR [ebp+edi*2+0x23493ff7],al
  40eeb0:	dec    edi
  40eeb1:	xor    eax,0xf0042579
  40eeb6:	test   esi,edx
  40eeb8:	in     eax,0xf5
  40eeba:	fdiv   QWORD PTR [eax-0x34]
  40eebd:	pop    edi
  40eebe:	nop
  40eebf:	retf   
  40eec0:	sahf   
  40eec1:	mov    DWORD PTR [edx-0x322eac96],edi
  40eec7:	imul   edx,DWORD PTR [ebp+0x2d],0x99741320
  40eece:	loopne 0x40ee88
  40eed0:	stos   BYTE PTR es:[edi],al
  40eed1:	sub    al,0x32
  40eed3:	lods   eax,DWORD PTR ds:[esi]
  40eed4:	(bad)  
  40eed6:	push   esp
  40eed7:	sbb    al,0x72
  40eed9:	sub    BYTE PTR [eax-0x51],bl
  40eedc:	pop    esp
  40eedd:	and    ah,BYTE PTR ds:0xe987b1b2
  40eee3:	pop    edi
  40eee4:	push   ss
  40eee5:	or     al,0x83
  40eee7:	mov    edx,DWORD PTR [esi]
  40eee9:	jno    0x40eedc
  40eeeb:	in     al,0x25
  40eeed:	sbb    DWORD PTR [ecx],ecx
  40eeef:	push   ecx
  40eef0:	int    0xb6
  40eef2:	push   edi
  40eef3:	jnp    0x40ef16
  40eef5:	jnp    0x40eeb2
  40eef7:	stos   BYTE PTR es:[edi],al
  40eef8:	lock fdivp st(4),st
  40eefb:	ror    ebp,0x97
  40eefe:	out    dx,al
  40eeff:	rol    DWORD PTR [ebp+0x1f06d4f8],cl
  40ef05:	sbb    DWORD PTR [esp+0x6f19c4d3],ebx
  40ef0c:	xor    ebp,DWORD PTR [eax+ecx*2]
  40ef0f:	mov    ds:0xdef83a6d,eax
  40ef14:	push   esp
  40ef15:	daa    
  40ef16:	jbe    0x40ef39
  40ef18:	jl     0x40eefa
  40ef1a:	push   ebx
  40ef1b:	mov    edx,ds
  40ef1d:	in     al,0x4a
  40ef1f:	stc    
  40ef20:	fadd   DWORD PTR [edx+ecx*8-0x34]
  40ef24:	shr    ah,cl
  40ef26:	xlat   BYTE PTR ds:[ebx]
  40ef27:	fwait
  40ef28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef29:	rcr    ch,0x8b
  40ef2c:	sbb    al,0xbf
  40ef2e:	jle    0x40ef96
  40ef30:	add    ebp,ecx
  40ef32:	js     0x40eed1
  40ef34:	push   ebp
  40ef35:	(bad)  
  40ef36:	lds    ebx,FWORD PTR ss:[eax+0x1bea5f92]
  40ef3d:	inc    esp
  40ef3e:	xor    BYTE PTR [esi-0x63],dl
  40ef41:	push   0xc7bf1aaa
  40ef46:	push   esi
  40ef47:	adc    ch,BYTE PTR [edx+0x53ba60ff]
  40ef4d:	lods   eax,DWORD PTR ds:[esi]
  40ef4e:	sub    DWORD PTR [edx],edx
  40ef50:	mov    ah,0x21
  40ef52:	dec    edx
  40ef53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef54:	dec    esi
  40ef55:	bound  ebp,QWORD PTR [esi+0xcf10060]
  40ef5b:	add    eax,0x323ae740
  40ef60:	cmp    esp,DWORD PTR [edi+0x7b449d1a]
  40ef66:	sub    al,0x2b
  40ef68:	pop    ds
  40ef69:	int    0xdc
  40ef6b:	fld    DWORD PTR [esp+ecx*1-0x7b]
  40ef6f:	es out dx,eax
  40ef71:	call   0x38c9b776
  40ef76:	fld    TBYTE PTR [ebp-0x3a]
  40ef79:	add    ebx,eax
  40ef7b:	sbb    BYTE PTR [edx-0x4aa7ab75],ah
  40ef81:	mov    dh,0x2b
  40ef83:	cmp    al,0x18
  40ef85:	fidivr WORD PTR [esp+esi*1-0x6b22f86d]
  40ef8c:	inc    edx
  40ef8d:	loopne 0x40efec
  40ef8f:	arpl   WORD PTR [edi],si
  40ef91:	enter  0x9b89,0x7a
  40ef95:	mov    edi,0xa43ef1a4
  40ef9a:	cdq    
  40ef9b:	xchg   ecx,eax
  40ef9c:	inc    ebx
  40ef9d:	aaa    
  40ef9e:	dec    edx
  40ef9f:	or     DWORD PTR [esi],esi
  40efa1:	out    0xcd,eax
  40efa3:	xchg   BYTE PTR [esi+0x4b],dl
  40efa6:	add    esi,DWORD PTR ds:0x38fdba9e
  40efac:	ret    
  40efad:	out    dx,eax
  40efae:	int3   
  40efaf:	sub    eax,0xba82532c
  40efb4:	std    
  40efb5:	in     eax,0x89
  40efb7:	mov    edi,0xa86fd5a8
  40efbc:	pop    es
  40efbd:	xor    eax,0xd0ba0a37
  40efc2:	div    eax
  40efc4:	xchg   bh,dl
  40efc6:	xlat   BYTE PTR ds:[ebx]
  40efc7:	mov    DWORD PTR [ebp-0x69],eax
  40efca:	stos   BYTE PTR es:[edi],al
  40efcb:	fidivr DWORD PTR [ebp+0x11]
  40efce:	jp     0x40efdd
  40efd0:	lahf   
  40efd1:	in     eax,dx
  40efd2:	fs retf 0xded5
  40efd6:	mov    DWORD PTR [ebp+0x34],ebp
  40efd9:	shl    al,0x8
  40efdc:	inc    esi
  40efdd:	lds    ebp,FWORD PTR [ecx]
  40efdf:	add    BYTE PTR [ecx+esi*2],ch
  40efe2:	or     ch,BYTE PTR [edx-0x42]
  40efe5:	out    0x2a,al
  40efe7:	sbb    bl,BYTE PTR [ecx+0x7e]
  40efea:	adc    DWORD PTR [eax],edx
  40efec:	stc    
  40efed:	and    eax,0x5c79da2d
  40eff2:	retf   0x1213
  40eff5:	inc    eax
  40eff6:	mov    ah,BYTE PTR [di]
  40eff9:	js     0x40efbe
  40effb:	pop    eax
  40effc:	sub    ah,bh
  40effe:	loope  0x40f072
  40f000:	pop    ebp
  40f001:	out    dx,eax
  40f002:	pop    edx
  40f003:	mov    al,0x70
  40f005:	bound  edx,QWORD PTR [esi]
  40f007:	leave  
  40f008:	xor    eax,0x67a20ed1
  40f00d:	xor    eax,0xa55ae80f
  40f012:	jbe    0x40f02e
  40f014:	and    al,0xa9
  40f016:	cmc    
  40f017:	mov    WORD PTR [eax+0x25f5ffc6],gs
  40f01d:	fbld   TBYTE PTR [eax-0x1bc6e52e]
  40f023:	in     eax,0xe7
  40f025:	add    al,0x7b
  40f027:	shl    DWORD PTR [edi-0x4356c7b1],0xef
  40f02e:	outs   dx,DWORD PTR ds:[esi]
  40f02f:	addr16 mov ecx,ecx
  40f032:	cmp    ecx,esi
  40f034:	leave  
  40f035:	fcomi  st,st(5)
  40f037:	(bad)  
  40f038:	xchg   ecx,eax
  40f039:	nop
  40f03a:	adc    al,0x50
  40f03c:	xchg   esp,eax
  40f03d:	and    BYTE PTR [ecx+edi*8],cl
  40f040:	into   
  40f041:	int3   
  40f042:	inc    esi
  40f043:	pop    ecx
  40f044:	mov    al,cl
  40f046:	hlt    
  40f047:	ret    0xaf33
  40f04a:	scas   al,BYTE PTR es:[edi]
  40f04b:	lods   al,BYTE PTR ds:[esi]
  40f04c:	test   dl,cl
  40f04e:	sar    ch,0x82
  40f051:	and    al,0xa4
  40f053:	xor    DWORD PTR [esi],ebx
  40f055:	or     BYTE PTR [edi+ebp*2+0x4],cl
  40f059:	jne    0x40f0bd
  40f05b:	jo     0x40f0b1
  40f05d:	and    edi,DWORD PTR [ecx+0xa]
  40f060:	dec    ebp
  40f061:	sbb    dl,al
  40f063:	or     ecx,DWORD PTR [edx+0x31]
  40f066:	shr    DWORD PTR [ecx-0x60],0x26
  40f06a:	outs   dx,DWORD PTR ds:[esi]
  40f06b:	xchg   DWORD PTR [eax-0x7f],edx
  40f06e:	or     dl,BYTE PTR [ebp-0x7a767279]
  40f074:	imul   ecx,DWORD PTR [ebp+0x1ecf6c0a],0xffffffca
  40f07b:	push   eax
  40f07c:	xor    DWORD PTR [edx+0x15ad1f2b],0xfe0d846e
  40f086:	push   esi
  40f087:	push   cs
  40f088:	push   ss
  40f089:	xor    al,0xb8
  40f08b:	imul   ebp,ebx,0xffffffc9
  40f08e:	xchg   ebp,eax
  40f08f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f090:	rcl    DWORD PTR [ecx-0x5a9079c0],1
  40f096:	fidivr DWORD PTR [ebx+edx*8+0x2be6b980]
  40f09d:	(bad)  
  40f09e:	cmc    
  40f09f:	aas    
  40f0a0:	push   ebx
  40f0a1:	fisubr DWORD PTR [edi-0x48]
  40f0a4:	xchg   ebx,eax
  40f0a5:	(bad)  
  40f0a6:	test   eax,0x24031a0b
  40f0ab:	es dec eax
  40f0ad:	fwait
  40f0ae:	adc    esi,DWORD PTR [eax+0x347c8ee0]
  40f0b4:	aaa    
  40f0b5:	mov    esp,DWORD PTR [edi-0x52]
  40f0b8:	rcr    DWORD PTR [eax],1
  40f0ba:	fisttp QWORD PTR [ebx-0x3c]
  40f0bd:	add    BYTE PTR [ecx-0x238674be],bh
  40f0c3:	pusha  
  40f0c4:	adc    BYTE PTR [edi-0x4cf1af8a],bl
  40f0ca:	(bad)  
  40f0cd:	push   cs
  40f0ce:	cmp    bl,BYTE PTR [ebx-0x33]
  40f0d1:	pop    ebx
  40f0d2:	lds    esp,FWORD PTR [edx-0x24166636]
  40f0d8:	les    esp,FWORD PTR [ecx+0x6d]
  40f0db:	in     al,dx
  40f0dc:	fldcw  WORD PTR [edx+edi*4]
  40f0df:	xor    ah,al
  40f0e1:	fbstp  TBYTE PTR [edi-0x3]
  40f0e4:	int3   
  40f0e5:	test   BYTE PTR [ebp+0x56],0xf5
  40f0e9:	fadd   QWORD PTR [ebp-0x50ed8241]
  40f0ef:	push   ecx
  40f0f0:	mov    ah,BYTE PTR [esp+ebp*8-0x18]
  40f0f4:	int    0x19
  40f0f6:	and    al,0x46
  40f0f8:	pop    esi
  40f0f9:	leave  
  40f0fa:	cmp    eax,DWORD PTR [esi-0x23]
  40f0fd:	lds    ebx,FWORD PTR [esi+0xa]
  40f100:	jae    0x40f0a8
  40f102:	out    0x95,eax
  40f104:	inc    esi
  40f105:	jecxz  0x40f0a4
  40f107:	xor    DWORD PTR [ecx+0x718971fc],edi
  40f10d:	cs pop ebx
  40f10f:	retf   
  40f110:	or     BYTE PTR [edi+0x2c],bh
  40f113:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f114:	mov    ebx,0xfbe2c642
  40f119:	sub    al,0x7b
  40f11b:	xchg   DWORD PTR [eax-0x43],edx
  40f11e:	gs lahf 
  40f120:	lahf   
  40f121:	sbb    al,0x69
  40f123:	cmp    DWORD PTR [edi],ebx
  40f125:	jle    0x40f126
  40f127:	adc    al,ch
  40f129:	and    ebp,DWORD PTR [ecx-0x53]
  40f12c:	test   DWORD PTR [edx+ebx*1+0x58],esi
  40f130:	in     eax,dx
  40f131:	mov    esi,0x86de6388
  40f136:	xchg   BYTE PTR [esi-0x48],ah
  40f139:	mov    edi,0x60552696
  40f13e:	out    dx,eax
  40f13f:	(bad)  
  40f140:	ja     0x40f19e
  40f142:	repz add al,0x3a
  40f145:	xchg   esp,eax
  40f146:	xor    al,0xb1
  40f148:	(bad)
  40f14b:	adc    cl,ch
  40f14d:	outs   dx,BYTE PTR ds:[esi]
  40f14e:	push   cs
  40f14f:	pop    esp
  40f150:	in     al,0xbd
  40f152:	lods   al,BYTE PTR ds:[esi]
  40f153:	mov    esp,0x7ae85043
  40f158:	mov    BYTE PTR [ebp+0x5b],dh
  40f15b:	xlat   BYTE PTR ds:[ebx]
  40f15c:	lods   al,BYTE PTR ds:[esi]
  40f15d:	adc    edx,DWORD PTR [ebx+0x19]
  40f160:	js     0x40f110
  40f162:	imul   esp,DWORD PTR [ebx+0x5c],0x4a84f74d
  40f169:	jno    0x40f1e9
  40f16b:	(bad)  
  40f16c:	mov    gs,WORD PTR [eax]
  40f16e:	scas   eax,DWORD PTR es:[edi]
  40f16f:	jle    0x40f161
  40f171:	adc    eax,0xabd405a0
  40f176:	je     0x40f1b6
  40f178:	dec    esp
  40f179:	fcmovnbe st,st(1)
  40f17b:	xchg   DWORD PTR [ecx+0x11],eax
  40f17e:	sub    eax,0xf4fa623e
  40f183:	cmp    esi,ecx
  40f185:	je     0x40f18b
  40f187:	mov    ds:0x5c0c57a3,eax
  40f18c:	ret    0xb54
  40f18f:	ja     0x40f18f
  40f191:	inc    esi
  40f192:	fisttp QWORD PTR [eax+0x19]
  40f195:	out    dx,eax
  40f196:	fild   WORD PTR [edx+0x40]
  40f199:	hlt    
  40f19a:	clc    
  40f19b:	mov    esp,0xbe832e00
  40f1a0:	repnz into 
  40f1a2:	add    DWORD PTR [edx+0xcc04969],ebp
  40f1a8:	jmp    0x3852e888
  40f1ad:	enter  0xe8fe,0x3a
  40f1b1:	sub    ebp,edx
  40f1b3:	pop    ecx
  40f1b4:	(bad)  
  40f1b5:	pop    esp
  40f1b6:	sar    BYTE PTR [esi],0xac
  40f1b9:	daa    
  40f1ba:	in     eax,dx
  40f1bb:	shl    DWORD PTR ds:0x82cbae3e,1
  40f1c1:	sbb    ecx,DWORD PTR [eax+0x57]
  40f1c4:	mov    edi,0x4365ce22
  40f1c9:	and    al,BYTE PTR [esi-0x67]
  40f1cc:	and    eax,0xfeaef97c
  40f1d1:	es xor bh,ah
  40f1d4:	pop    es
  40f1d5:	push   ss
  40f1d6:	test   eax,esi
  40f1d8:	jmp    0x8a90:0x44f6e020
  40f1df:	inc    ebx
  40f1e0:	sub    esi,DWORD PTR [ecx+0x16]
  40f1e3:	jp     0x40f1ed
  40f1e5:	and    eax,0xb5fd5a2e
  40f1ea:	jge    0x40f1da
  40f1ec:	add    esp,DWORD PTR ss:[ecx]
  40f1ef:	shl    BYTE PTR ds:0x31aae7c6,1
  40f1f5:	sbb    al,0x5e
  40f1f7:	and    DWORD PTR [edx+ebx*4+0x409c3877],ecx
  40f1fe:	sbb    BYTE PTR [ebp+0x2],dh
  40f201:	xor    DWORD PTR [ecx+0x105886ba],0x329cebde
  40f20b:	cs fwait
  40f20d:	xor    ch,ah
  40f20f:	adc    eax,0x6ab762a8
  40f214:	jne    0x40f23f
  40f216:	loope  0x40f20a
  40f218:	and    al,0x31
  40f21a:	stc    
  40f21b:	push   ecx
  40f21c:	not    DWORD PTR [edx+0x3f6eb4f5]
  40f222:	repnz inc esi
  40f224:	std    
  40f225:	loop   0x40f26f
  40f227:	jns    0x40f298
  40f229:	adc    eax,0xf99220e9
  40f22e:	shr    DWORD PTR [edi],cl
  40f230:	gs popa 
  40f232:	and    al,0x20
  40f234:	jmp    0x8108:0x72f07e70
  40f23b:	push   ebx
  40f23c:	dec    ecx
  40f23d:	push   eax
  40f23e:	imul   esp,DWORD PTR [edi+0x2a],0x78
  40f242:	sti    
  40f243:	jl     0x40f26f
  40f245:	adc    DWORD PTR [eax+0x6],0x8f6798a8
  40f24c:	mov    eax,0xc36351bf
  40f251:	stos   BYTE PTR es:[edi],al
  40f252:	pop    esi
  40f253:	inc    edi
  40f254:	(bad)  
  40f255:	jle    0x40f1e3
  40f257:	pop    ebp
  40f258:	fcomp  QWORD PTR [ecx-0x51555cf5]
  40f25e:	ins    DWORD PTR es:[edi],dx
  40f25f:	(bad)  
  40f260:	push   edi
  40f261:	and    eax,0xd414ba6f
  40f266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f267:	mov    ds:0x59c51100,eax
  40f26c:	adc    BYTE PTR [edx+esi*1+0xa],ah
  40f270:	stos   BYTE PTR es:[edi],al
  40f271:	out    dx,eax
  40f272:	in     eax,dx
  40f273:	mov    WORD PTR [esi+0x23],fs
  40f276:	jnp    0x40f2ed
  40f278:	sub    eax,DWORD PTR [edi+0x2cd00dbe]
  40f27e:	test   al,0x51
  40f280:	pop    ebx
  40f281:	in     eax,0x23
  40f283:	sahf   
  40f284:	jb     0x40f281
  40f286:	icebp  
  40f287:	xchg   DWORD PTR ds:0x1b3bbf3d,ebp
  40f28d:	inc    edx
  40f28e:	lods   eax,DWORD PTR ds:[esi]
  40f28f:	rcl    ebp,1
  40f291:	mov    dl,0x16
  40f293:	jb     0x40f26a
  40f295:	dec    ecx
  40f296:	xchg   BYTE PTR [ebx+0x4cff47ba],dh
  40f29c:	xor    BYTE PTR [ebp+0x6b],al
  40f29f:	les    edx,FWORD PTR [eax-0x17]
  40f2a2:	leave  
  40f2a3:	hlt    
  40f2a4:	cmc    
  40f2a5:	out    0x1a,al
  40f2a7:	and    ah,BYTE PTR [edi]
  40f2a9:	push   ss
  40f2aa:	test   eax,0x2e776f4e
  40f2af:	pop    edi
  40f2b0:	mov    edi,0xec8b8a59
  40f2b5:	and    al,0xf7
  40f2b7:	cwde   
  40f2b8:	fiadd  DWORD PTR [edi+0x69]
  40f2bb:	std    
  40f2bc:	cmc    
  40f2bd:	xor    al,0x7d
  40f2bf:	sub    esp,DWORD PTR [edx-0x6290319b]
  40f2c5:	inc    ecx
  40f2c6:	daa    
  40f2c7:	fst    DWORD PTR [ebx-0x5cab9ffa]
  40f2cd:	imul   edi,edx,0x58
  40f2d0:	std    
  40f2d1:	es aas 
  40f2d3:	mov    al,ds:0x9680903f
  40f2d8:	jl     0x40f2b8
  40f2da:	add    ah,dh
  40f2dc:	jecxz  0x40f33d
  40f2de:	sub    DWORD PTR [ebp-0x36941991],ebx
  40f2e4:	not    BYTE PTR [esi+esi*1+0x6]
  40f2e8:	data16 int 0xf
  40f2eb:	out    dx,eax
  40f2ec:	js     0x40f323
  40f2ee:	rcr    BYTE PTR [ecx+0x7be182d4],0xe8
  40f2f5:	ret    
  40f2f6:	inc    ecx
  40f2f7:	xchg   esp,eax
  40f2f8:	adc    eax,0x749868d2
  40f2fd:	sub    edi,DWORD PTR [edi]
  40f2ff:	mov    ds:0x46ebc6fe,eax
  40f304:	clc    
  40f305:	or     BYTE PTR [ebx+edx*1+0x4b],cl
  40f309:	xchg   edx,eax
  40f30a:	mov    bh,0x6a
  40f30c:	xor    al,0x89
  40f30e:	mov    eax,ds:0xdb5f0122
  40f313:	(bad)  
  40f314:	mov    dh,0x4a
  40f316:	mov    cl,0x66
  40f318:	lods   eax,DWORD PTR ds:[esi]
  40f319:	xchg   DWORD PTR [ecx+0x4e806673],esp
  40f31f:	retf   0x8f57
  40f322:	ret    
  40f323:	leave  
  40f324:	or     eax,0xff7ec7b2
  40f329:	pop    eax
  40f32a:	fucomp st(4)
  40f32c:	mov    eax,0xcd11e962
  40f331:	cmp    dl,bh
  40f333:	xchg   edx,eax
  40f334:	data16 add BYTE PTR [esi+0x74],0xd5
  40f339:	sbb    ebx,DWORD PTR [edx+0xf093c6e]
  40f33f:	mov    bh,0x29
  40f341:	or     BYTE PTR [edi+0x26],bh
  40f344:	mov    ds:0x4099fe17,eax
  40f349:	std    
  40f34a:	loope  0x40f2f6
  40f34c:	mov    al,0xe5
  40f34e:	inc    ecx
  40f34f:	out    0x88,eax
  40f351:	fsubr  st(2),st
  40f353:	iret   
  40f354:	or     DWORD PTR [edi+0x21],ebx
  40f357:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f358:	xchg   edi,eax
  40f359:	inc    ebx
  40f35a:	dec    ebp
  40f35b:	add    ch,dl
  40f35d:	lods   eax,DWORD PTR ds:[esi]
  40f35e:	sbb    BYTE PTR ds:0xe624efbe,ah
  40f364:	add    cl,bh
  40f366:	lods   al,BYTE PTR ds:[esi]
  40f367:	into   
  40f368:	push   es
  40f369:	adc    eax,0x2e63c6ab
  40f36e:	and    dl,dl
  40f370:	jns    0x40f30a
  40f372:	pop    edi
  40f373:	std    
  40f374:	test   cl,0x37
  40f377:	cmp    DWORD PTR [ebx+edi*8+0x3c97f49d],0x18
  40f37f:	mov    ecx,0xfc644634
  40f384:	clc    
  40f385:	fnsave [ecx-0x3d1e885e]
  40f38b:	jmp    0xfda7:0x357dcc12
  40f392:	lahf   
  40f393:	repz test esi,ebx
  40f396:	xor    edx,DWORD PTR [eax-0x16c235c6]
  40f39c:	clc    
  40f39d:	mov    eax,DWORD PTR [esi-0x534cc216]
  40f3a3:	call   0x1b42:0x84969755
  40f3aa:	jg     0x40f355
  40f3ac:	xor    eax,DWORD PTR [ecx-0x18]
  40f3af:	repnz add ecx,DWORD PTR [edx]
  40f3b2:	jbe    0x40f405
  40f3b4:	(bad)  
  40f3b6:	cmp    BYTE PTR [edi],ch
  40f3b8:	aas    
  40f3b9:	pusha  
  40f3ba:	cld    
  40f3bb:	xchg   BYTE PTR [ebx],bl
  40f3bd:	and    ebx,esp
  40f3bf:	xor    al,0x3
  40f3c1:	inc    eax
  40f3c2:	jmp    0x1f9ef8da
  40f3c7:	pop    esp
  40f3c8:	sbb    al,0x7f
  40f3ca:	jmp    0x8064:0xad0f540a
  40f3d1:	cwde   
  40f3d2:	lea    edi,[esi+edx*4+0x5a]
  40f3d6:	pushf  
  40f3d7:	jp     0x40f361
  40f3d9:	repnz adc al,0xe8
  40f3dc:	retf   
  40f3dd:	mov    bh,ch
  40f3df:	xchg   esp,eax
  40f3e0:	mov    ebp,0x796b5698
  40f3e5:	test   bh,ah
  40f3e7:	lock int 0x55
  40f3ea:	aad    0x75
  40f3ec:	adc    BYTE PTR [eax],al
  40f3ee:	(bad)  
  40f3ef:	jg     0x40f378
  40f3f1:	rcl    BYTE PTR [ebp-0x17928dc8],1
  40f3f7:	add    al,0xb2
  40f3f9:	xor    ebp,edi
  40f3fb:	adc    DWORD PTR [eax-0x522aed0f],ecx
  40f401:	ins    BYTE PTR es:[edi],dx
  40f402:	cmp    DWORD PTR [eax+0x698459fa],ebp
  40f408:	ja     0x40f42f
  40f40a:	sbb    DWORD PTR [esi-0x669a48d1],esi
  40f410:	popf   
  40f411:	popf   
  40f412:	lahf   
  40f413:	outs   dx,DWORD PTR ds:[esi]
  40f414:	sub    ch,BYTE PTR [ebx-0x4]
  40f417:	pop    esp
  40f418:	add    dh,BYTE PTR [eax]
  40f41a:	jo     0x40f3b8
  40f41c:	jg     0x40f3d8
  40f41e:	in     al,dx
  40f41f:	imul   edx,DWORD PTR [ecx-0x48],0xffffff8b
  40f423:	test   eax,0x22c6f1ec
  40f428:	mov    DWORD PTR [esi-0x658a6fdb],esi
  40f42e:	sub    dh,al
  40f430:	inc    ebp
  40f431:	push   esp
  40f432:	sbb    DWORD PTR [eax+0x38],eax
  40f435:	(bad)  
  40f436:	jno    0x40f443
  40f438:	pop    esp
  40f439:	fdivp  st(4),st
  40f43b:	ficomp DWORD PTR [eax]
  40f43d:	xchg   edx,eax
  40f43e:	in     eax,dx
  40f43f:	dec    esp
  40f440:	add    DWORD PTR ds:0x3b8348f6,ebx
  40f446:	in     eax,dx
  40f447:	add    DWORD PTR [edi+0x53500c99],edx
  40f44d:	pminub mm0,QWORD PTR [esi]
  40f450:	repz fld TBYTE PTR [edx]
  40f453:	push   ds
  40f454:	std    
  40f455:	sbb    eax,0x2d348927
  40f45a:	push   es
  40f45b:	jmp    0x571a:0x87808441
  40f462:	jmp    0x7f44ba45
  40f467:	jmp    0xe649869e
  40f46c:	mov    al,ds:0xb38793fb
  40f471:	ds int 0xf9
  40f474:	cld    
  40f475:	mov    DWORD PTR [edx+ebp*4-0x69],edx
  40f479:	dec    esp
  40f47a:	or     ah,BYTE PTR [esi+0x5a]
  40f47d:	inc    edx
  40f47e:	push   esi
  40f47f:	test   bh,al
  40f481:	enter  0x5e63,0xa7
  40f485:	popf   
  40f486:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f487:	out    0xe4,al
  40f489:	cs lock adc al,0x2
  40f48d:	or     BYTE PTR [ecx-0x2bbe2cbd],bh
  40f493:	mov    ch,0xfb
  40f495:	mov    bh,0x15
  40f497:	call   0xd41dea7b
  40f49c:	out    dx,eax
  40f49d:	rcl    BYTE PTR [eax],1
  40f49f:	loop   0x40f4d6
  40f4a1:	xor    eax,0x6a54eae4
  40f4a6:	dec    ebx
  40f4a7:	(bad)  
  40f4a8:	fidiv  WORD PTR [edi]
  40f4aa:	pop    es
  40f4ab:	pop    ss
  40f4ac:	vmovaps xmm3,xmm1
  40f4b0:	ss mov al,0x32
  40f4b3:	rcr    BYTE PTR [ebx-0x2b0795d2],0xb
  40f4ba:	mov    ah,dl
  40f4bc:	aad    0x9a
  40f4be:	mov    ebp,0x7a96f5f3
  40f4c3:	dec    ecx
  40f4c4:	fld    QWORD PTR [eax+eax*4+0x1d]
  40f4c8:	pop    ds
  40f4c9:	mov    edi,0x6e7052d1
  40f4ce:	stos   BYTE PTR es:[edi],al
  40f4cf:	cld    
  40f4d0:	call   0x4da7c10e
  40f4d5:	mov    ebx,?
  40f4d7:	clc    
  40f4d8:	dec    esi
  40f4d9:	ja     0x40f4ba
  40f4db:	sbb    ebx,ebp
  40f4dd:	(bad)
  40f4e2:	dec    ebx
  40f4e3:	inc    esp
  40f4e4:	jnp    0x40f4f9
  40f4e6:	arpl   WORD PTR [edx-0x3a894a99],cx
  40f4ec:	inc    esi
  40f4ed:	arpl   WORD PTR [edx],ax
  40f4ef:	pop    eax
  40f4f0:	sub    DWORD PTR [edx],0x5c3e71f2
  40f4f6:	sbb    BYTE PTR [edx-0xf17da49],dl
  40f4fc:	imul   edi,DWORD PTR [ebx+eiz*2+0x668ced3],0x2ad1bd60
  40f507:	fld    TBYTE PTR [ecx+ebp*8-0x38c001]
  40f50e:	and    BYTE PTR [ebx-0x6f],al
  40f511:	mov    ds:0xcbec918f,eax
  40f516:	push   0x38
  40f518:	test   DWORD PTR [ebp+0x5eac5f5f],edi
  40f51e:	cmp    edx,DWORD PTR [edi+0xafefdf9]
  40f524:	mov    ebx,0x3d27c00e
  40f529:	(bad)  
  40f52a:	lds    esi,FWORD PTR [esp+ebx*1+0x17]
  40f52e:	nop
  40f52f:	push   edi
  40f530:	in     al,0x18
  40f532:	jb     0x40f54d
  40f534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f535:	imul   edx,eax,0xffffffa6
  40f538:	popa   
  40f539:	cmc    
  40f53a:	push   eax
  40f53b:	shl    BYTE PTR [edi+esi*8-0x60aa3cf6],1
  40f542:	pop    ebx
  40f543:	pop    ecx
  40f544:	ret    0xb461
  40f547:	pop    es
  40f548:	cdq    
  40f549:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f54a:	sub    bl,dl
  40f54c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f54d:	stc    
  40f54e:	icebp  
  40f54f:	shl    edi,cl
  40f551:	addr16 cmp ecx,ebp
  40f554:	mov    dl,0x40
  40f556:	dec    ebx
  40f557:	mov    BYTE PTR gs:[ebx],ch
  40f55a:	cmp    BYTE PTR [ebx-0x618edb27],ch
  40f560:	nop
  40f561:	mov    WORD PTR [ecx+0x69],cs
  40f564:	sub    edx,DWORD PTR [eax-0x7900a3e]
  40f56a:	loop   0x40f56f
  40f56c:	add    eax,0x17b5a5b4
  40f571:	cmc    
  40f572:	cmp    edi,edi
  40f574:	sub    DWORD PTR [ebx],ebp
  40f576:	sahf   
  40f577:	xchg   BYTE PTR [eax-0x53],al
  40f57a:	mov    ecx,0x1953d7dc
  40f57f:	lock sar BYTE PTR [ecx-0x1d26cb5e],0x98
  40f587:	ins    BYTE PTR es:[edi],dx
  40f588:	push   ebp
  40f589:	pop    ebx
  40f58a:	or     eax,0x46506ba4
  40f58f:	jno    0x40f5e9
  40f591:	stos   DWORD PTR es:[edi],eax
  40f592:	inc    esp
  40f593:	pop    esp
  40f594:	dec    ecx
  40f595:	mov    ebp,esp
  40f597:	fidiv  WORD PTR [edx+0x35]
  40f59a:	retf   0xbfdc
  40f59d:	or     dh,bl
  40f59f:	cmp    DWORD PTR [edi],0xce31c24
  40f5a5:	ss push eax
  40f5a7:	arpl   WORD PTR [ecx],si
  40f5a9:	sbb    al,0xaf
  40f5ab:	dec    edi
  40f5ac:	std    
  40f5ad:	dec    eax
  40f5ae:	jbe    0x40f5ce
  40f5b0:	dec    ebp
  40f5b1:	push   0x0
  40f5b3:	xchg   esi,eax
  40f5b4:	cmp    BYTE PTR [ebp-0x2d],dl
  40f5b7:	xor    DWORD PTR ds:0xa282bdee,eax
  40f5bd:	mov    edx,0x71ec2068
  40f5c2:	jp     0x40f58d
  40f5c4:	sub    eax,0xdd108028
  40f5c9:	mov    WORD PTR [ebp*1-0x49b007d4],gs
  40f5d0:	outs   dx,BYTE PTR ds:[esi]
  40f5d1:	std    
  40f5d2:	add    al,0x58
  40f5d4:	push   0x698c77d8
  40f5d9:	mov    dl,0xa6
  40f5db:	sti    
  40f5dc:	push   es
  40f5dd:	push   edi
  40f5de:	les    eax,FWORD PTR [ebx]
  40f5e0:	push   ecx
  40f5e1:	les    esi,FWORD PTR [esi]
  40f5e3:	add    eax,0x146c2d3c
  40f5e8:	arpl   WORD PTR [esi+ebp*4-0x69833de8],bp
  40f5ef:	aas    
  40f5f0:	(bad)  
  40f5f1:	lds    esi,FWORD PTR [esi]
  40f5f3:	popa   
  40f5f4:	pushf  
  40f5f5:	pop    edx
  40f5f6:	fwait
  40f5f7:	in     eax,0x2
  40f5f9:	(bad)  
  40f5fa:	out    dx,eax
  40f5fb:	cmp    cl,BYTE PTR [eax]
  40f5fd:	adc    al,0x44
  40f5ff:	repz in al,dx
  40f601:	adc    BYTE PTR [ebx],dh
  40f603:	fnstcw WORD PTR [ebx]
  40f605:	pop    edx
  40f606:	dec    al
  40f608:	dec    edi
  40f609:	mov    bl,0x53
  40f60b:	push   ebx
  40f60c:	pop    ss
  40f60d:	(bad)  
  40f60e:	(bad)  
  40f60f:	cli    
  40f610:	pop    esp
  40f611:	in     eax,0xb3
  40f613:	retf   
  40f614:	pop    esp
  40f615:	mov    bl,0xfa
  40f617:	test   al,0x22
  40f619:	lods   al,BYTE PTR ds:[esi]
  40f61a:	jl     0x40f5e0
  40f61c:	test   BYTE PTR [esi],ch
  40f61e:	add    BYTE PTR [ecx-0x43],bh
  40f621:	cmp    BYTE PTR [ecx],dh
  40f623:	dec    ecx
  40f624:	xchg   DWORD PTR [edi-0x77e78ecf],eax
  40f62a:	je     0x40f622
  40f62c:	cmp    al,BYTE PTR [eax+0x24]
  40f62f:	or     bh,ah
  40f631:	pop    esi
  40f632:	arpl   WORD PTR [edi],sp
  40f634:	call   FWORD PTR [edx]
  40f636:	call   0xf025e4cd
  40f63b:	es push es
  40f63d:	and    eax,0xe1c69062
  40f643:	repz jns 0x40f688
  40f646:	push   ds
  40f647:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f648:	or     BYTE PTR [ebx-0x2e],dl
  40f64b:	sbb    ah,BYTE PTR ds:0x695b8e68
  40f651:	push   0x9979f7a7
  40f656:	mov    cl,0x42
  40f658:	sub    eax,0x1a616e5b
  40f65d:	or     dh,BYTE PTR [eax+eax*1-0x291835d5]
  40f664:	mov    bh,0xf9
  40f666:	xlat   BYTE PTR ds:[ebx]
  40f667:	add    al,0x8c
  40f669:	int3   
  40f66a:	out    dx,al
  40f66b:	out    0x7,eax
  40f66d:	xchg   ebp,eax
  40f66e:	push   esp
  40f66f:	stos   BYTE PTR es:[edi],al
  40f670:	inc    BYTE PTR [esp+eiz*4-0x26]
  40f674:	mov    bl,bh
  40f676:	pop    esp
  40f677:	mov    edi,0xfd86c25c
  40f67c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f67d:	out    0xd0,al
  40f67f:	jle    0x40f684
  40f681:	leave  
  40f682:	adc    DWORD PTR [edi+eax*8],esp
  40f685:	cdq    
  40f686:	stos   DWORD PTR es:[edi],eax
  40f687:	or     BYTE PTR [eax-0x5],ah
  40f68a:	loop   0x40f6f0
  40f68c:	mov    ebx,0xf458a8b0
  40f691:	inc    esp
  40f692:	sbb    edx,0xffffffca
  40f695:	test   BYTE PTR [eax+0x1116ef17],dh
  40f69b:	push   edx
  40f69c:	sar    bh,0x65
  40f69f:	fs ja  0x40f6db
  40f6a2:	xor    eax,ebp
  40f6a4:	lahf   
  40f6a5:	test   BYTE PTR [ecx],bh
  40f6a7:	int    0xa2
  40f6a9:	rcr    BYTE PTR [bx+si],1
  40f6ac:	jae    0x40f652
  40f6ae:	stos   DWORD PTR es:[edi],eax
  40f6af:	ror    BYTE PTR [edx-0x22],1
  40f6b2:	cwde   
  40f6b3:	push   0xffffffdc
  40f6b5:	lods   al,BYTE PTR ds:[esi]
  40f6b6:	push   ebp
  40f6b7:	mov    eax,0x5c30d7df
  40f6bc:	(bad)  
  40f6bd:	cmp    eax,0x64968f24
  40f6c2:	lahf   
  40f6c3:	and    al,0x74
  40f6c5:	femms  
  40f6c7:	jnp    0x40f700
  40f6c9:	sbb    al,0x24
  40f6cb:	ss jne 0x40f6a9
  40f6ce:	jbe    0x40f735
  40f6d0:	pop    ebx
  40f6d1:	stc    
  40f6d2:	xor    al,0xf0
  40f6d4:	and    eax,0x65c7508
  40f6d9:	pushw  es
  40f6db:	mov    bh,0x7a
  40f6dd:	mov    esp,DWORD PTR [ecx-0x5c]
  40f6e0:	fs nop
  40f6e2:	ds sub al,0x4a
  40f6e5:	js     0x40f6b3
  40f6e7:	fwait
  40f6e8:	rol    BYTE PTR [ebx],cl
  40f6ea:	pop    ebx
  40f6eb:	adc    al,0xf3
  40f6ed:	cmp    BYTE PTR [edx+0x1690d2cb],al
  40f6f3:	or     ebx,DWORD PTR [ebp+0x3b]
  40f6f6:	lods   al,BYTE PTR ds:[esi]
  40f6f7:	addr16 mov edi,eax
  40f6fa:	pop    ss
  40f6fb:	or     eax,0x1df4cd89
  40f700:	mov    bh,0x45
  40f702:	jle    0x40f747
  40f704:	dec    ebp
  40f705:	mov    esp,0x5ad2c9fb
  40f70a:	jns    0x40f734
  40f70c:	pusha  
  40f70d:	mov    DWORD PTR [ebp+0x5e76058b],ebx
  40f713:	aas    
  40f714:	mov    ch,BYTE PTR [esi-0x31]
  40f717:	and    eax,DWORD PTR [ebp-0x8]
  40f71a:	out    0x37,al
  40f71c:	fwait
  40f71d:	add    dh,dl
  40f71f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f720:	cmp    eax,0x16564039
  40f725:	nop
  40f726:	pop    esp
  40f727:	mov    WORD PTR cs:[ecx+ebx*8],fs
  40f72b:	fcomp  DWORD PTR [edx]
  40f72d:	or     esi,edx
  40f72f:	sub    ch,al
  40f731:	jmp    0xfb7c9b04
  40f736:	arpl   si,ax
  40f738:	mov    esi,0x20d2c500
  40f73d:	push   edx
  40f73e:	(bad)  [edi+0x274f8381]
  40f744:	int    0xdc
  40f746:	xor    al,0xa8
  40f748:	aaa    
  40f749:	jbe    0x40f7b3
  40f74b:	xor    al,0x80
  40f74d:	xchg   BYTE PTR [bx+di],al
  40f750:	mov    WORD PTR [edx-0x6c],?
  40f753:	sub    edi,DWORD PTR [esi+0x29]
  40f756:	xchg   ebx,eax
  40f757:	repnz adc BYTE PTR [edi-0x29018a3],cl
  40f75e:	inc    eax
  40f75f:	cli    
  40f760:	stc    
  40f761:	stos   BYTE PTR es:[edi],al
  40f762:	repnz or eax,0x501943f4
  40f768:	mov    ah,BYTE PTR [edx]
  40f76a:	pop    ecx
  40f76b:	jmp    0x40f77c
  40f76d:	sbb    ecx,DWORD PTR [esi+eiz*1+0x60a1bd81]
  40f774:	fiadd  DWORD PTR [ebp-0x4601079a]
  40f77a:	test   DWORD PTR [edx-0x3d],ebp
  40f77d:	adc    edi,DWORD PTR [edx-0x38]
  40f780:	fdivr  DWORD PTR ds:0x346e95f4
  40f786:	pmaxsw mm0,mm2
  40f789:	dec    eax
  40f78a:	cli    
  40f78b:	cmp    al,0x10
  40f78d:	lods   al,BYTE PTR ds:[esi]
  40f78e:	(bad)  
  40f78f:	push   eax
  40f790:	loop   0x40f738
  40f792:	dec    esp
  40f793:	push   eax
  40f794:	in     eax,dx
  40f795:	fwait
  40f796:	dec    eax
  40f797:	stc    
  40f798:	mov    bl,0x51
  40f79a:	pusha  
  40f79b:	fadd   DWORD PTR [esi]
  40f79d:	xchg   ch,dh
  40f79f:	sbb    ch,BYTE PTR fs:[edi+eax*1]
  40f7a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7a4:	test   al,0xf7
  40f7a6:	or     BYTE PTR [ebx+0x51],al
  40f7a9:	adc    bh,ah
  40f7ab:	test   BYTE PTR ds:0x4308ea2,0x46
  40f7b2:	dec    esi
  40f7b3:	or     bh,BYTE PTR [edx+0x37]
  40f7b6:	mov    dl,0xe1
  40f7b8:	jmp    0x81bc5ff2
  40f7bd:	mov    BYTE PTR [ebx-0x21],ch
  40f7c0:	fnsave [eax+0x525b5659]
  40f7c6:	xchg   ah,ch
  40f7c8:	test   esp,0xbb49fdcf
  40f7ce:	ret    
  40f7cf:	lea    ebx,[ecx+0x4ec9f539]
  40f7d5:	in     al,dx
  40f7d6:	jle    0x40f76c
  40f7d8:	add    eax,0xcaba1c97
  40f7dd:	out    0x62,eax
  40f7df:	or     BYTE PTR [ecx],al
  40f7e1:	pop    esp
  40f7e2:	cmp    ebx,DWORD PTR [ebp-0x45]
  40f7e5:	fxch   st(1)
  40f7e7:	shl    BYTE PTR [eax],1
  40f7e9:	outs   dx,BYTE PTR ds:[esi]
  40f7ea:	lea    esp,[esi]
  40f7ec:	lods   al,BYTE PTR ds:[esi]
  40f7ed:	fcmovbe st,st(6)
  40f7ef:	dec    esp
  40f7f0:	add    eax,0x7405daa
  40f7f5:	out    dx,eax
  40f7f6:	xchg   esi,eax
  40f7f7:	cli    
  40f7f8:	call   0xb6e2:0x4c777f4e
  40f7ff:	xchg   ebx,eax
  40f800:	test   al,0x7c
  40f802:	adc    DWORD PTR [esp+ebx*8-0x39699838],ebx
  40f809:	loopne 0x40f83f
  40f80b:	lods   eax,DWORD PTR ds:[esi]
  40f80c:	add    ah,BYTE PTR [ebx+edx*2]
  40f80f:	aas    
  40f810:	adc    bl,BYTE PTR [edi+0x13]
  40f813:	test   al,0xd9
  40f815:	mov    edx,0xfc9b092e
  40f81a:	cmp    ebp,edi
  40f81c:	sar    BYTE PTR [eax+0x43],cl
  40f81f:	mov    esp,edi
  40f821:	pop    edx
  40f822:	xchg   esp,eax
  40f823:	dec    eax
  40f824:	adc    al,0xd3
  40f826:	mov    eax,ds:0xa7e818b5
  40f82b:	clc    
  40f82c:	jo     0x40f81a
  40f82e:	lea    ecx,[esi-0x61]
  40f831:	repnz aad 0xbe
  40f834:	xchg   esi,eax
  40f835:	test   al,0x22
  40f837:	lahf   
  40f838:	sar    BYTE PTR [esi+0x6c],0x7
  40f83c:	inc    ebx
  40f83d:	fisub  WORD PTR fs:[edi+0xf]
  40f841:	jae    0x40f7ec
  40f843:	sub    cl,BYTE PTR [esi-0xb]
  40f846:	mov    al,0xfc
  40f848:	add    dh,BYTE PTR [esi-0x3b0b001]
  40f84e:	cld    
  40f84f:	mov    edx,0xa9183123
  40f854:	cmp    eax,DWORD PTR [ebp-0x3afd7d31]
  40f85a:	mov    edi,0x3cf2171
  40f85f:	cmp    al,0x6c
  40f861:	mov    cl,0xc
  40f863:	dec    esp
  40f864:	mov    BYTE PTR [esi+edx*4+0x1c],al
  40f868:	les    ecx,FWORD PTR [ebx+0x71]
  40f86b:	xchg   edi,eax
  40f86c:	fs out dx,al
  40f86e:	inc    DWORD PTR [eax-0x2c]
  40f871:	call   eax
  40f873:	cmc    
  40f874:	and    bl,ch
  40f876:	out    0x10,al
  40f878:	sub    al,0x9e
  40f87a:	ss aam 0xfb
  40f87d:	pop    esi
  40f87e:	call   DWORD PTR [esi]
  40f880:	outs   dx,DWORD PTR ds:[esi]
  40f881:	out    0x66,al
  40f883:	hlt    
  40f884:	addr16 pop es
  40f886:	mov    ebp,0xcc6329da
  40f88b:	mov    ss,WORD PTR [esi+0x31]
  40f88e:	xlat   BYTE PTR ds:[ebx]
  40f88f:	retf   
  40f890:	xor    DWORD PTR [ecx+eax*4+0x32],ebp
  40f894:	mov    ebx,0x55b428b8
  40f899:	cmp    DWORD PTR [ebx-0x398085ae],ebp
  40f89f:	adc    ebx,DWORD PTR ds:0x6692a905
  40f8a5:	(bad)  
  40f8a6:	repnz out dx,al
  40f8a8:	sbb    DWORD PTR [ecx-0x29],ebp
  40f8ab:	movups XMMWORD PTR [ecx-0x4f],xmm2
  40f8af:	sbb    BYTE PTR [ecx-0x5cefaf73],bh
  40f8b5:	xchg   edx,eax
  40f8b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8b7:	dec    edx
  40f8b8:	pop    ebp
  40f8b9:	(bad)  [esp+ebx*2]
  40f8bc:	and    al,0x37
  40f8be:	jmp    0x8aa4:0xb112aedf
  40f8c5:	or     al,0x9b
  40f8c7:	inc    ebx
  40f8c8:	fld    TBYTE PTR [esi-0x4b]
  40f8cb:	jb     0x40f850
  40f8cd:	and    ecx,DWORD PTR [edi+esi*4+0x20c943e5]
  40f8d4:	ror    BYTE PTR [edi],1
  40f8d6:	ret    0x3a19
  40f8d9:	bound  edi,QWORD PTR [esp+eax*1-0x30c4fbaf]
  40f8e0:	div    DWORD PTR [ecx]
  40f8e2:	fiadd  DWORD PTR cs:[edx]
  40f8e5:	xchg   ebp,eax
  40f8e6:	sbb    al,0x5b
  40f8e8:	sar    ebx,1
  40f8ea:	outs   dx,BYTE PTR ds:[esi]
  40f8eb:	pop    esp
  40f8ec:	retf   0x58f9
  40f8ef:	lock adc DWORD PTR [ecx+0x7547b31a],edi
  40f8f6:	pop    ebx
  40f8f7:	mov    al,ds:0xd2029155
  40f8fc:	inc    edx
  40f8fd:	fs pop ebx
  40f8ff:	push   ebx
  40f900:	aad    0x66
  40f902:	pop    esi
  40f903:	push   ebx
  40f904:	clc    
  40f905:	mov    ah,bl
  40f907:	jbe    0x40f975
  40f909:	and    edx,DWORD PTR [ebp-0x54]
  40f90c:	js     0x40f8ef
  40f90e:	pushf  
  40f90f:	sahf   
  40f910:	mov    al,ds:0x572ee712
  40f915:	pop    eax
  40f916:	jb     0x40f939
  40f918:	or     ch,BYTE PTR [ecx-0x41d27dff]
  40f91e:	xor    al,0x1
  40f920:	test   BYTE PTR ds:[edi],0xa5
  40f924:	pop    edi
  40f925:	mov    edi,0xf0c819ae
  40f92a:	neg    DWORD PTR [ebx]
  40f92c:	das    
  40f92d:	sbb    eax,0xa1c0438d
  40f932:	and    DWORD PTR [edx],ebp
  40f934:	push   ds
  40f935:	dec    BYTE PTR [edi]
  40f937:	out    dx,al
  40f938:	dec    edi
  40f939:	xchg   BYTE PTR [edx-0x1e],bl
  40f93c:	retf   0x8640
  40f93f:	inc    edi
  40f940:	xchg   ah,cl
  40f942:	lock std 
  40f944:	fistp  WORD PTR [eax+0x6f3968]
  40f94a:	std    
  40f94b:	loop   0x40f914
  40f94d:	ror    ch,cl
  40f94f:	clc    
  40f950:	in     al,0xca
  40f952:	adc    al,0x1
  40f954:	in     eax,dx
  40f955:	mov    bl,0x2d
  40f957:	add    ah,al
  40f959:	xchg   ebx,eax
  40f95a:	pop    eax
  40f95b:	sbb    al,0xfa
  40f95d:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f95f:	aam    0xb9
  40f961:	aam    0x26
  40f963:	in     eax,0x89
  40f965:	mov    cl,0x89
  40f967:	pop    ds
  40f968:	add    esi,DWORD PTR [ebx-0x51]
  40f96b:	aad    0x94
  40f96d:	pop    edx
  40f96e:	imul   ebx,DWORD PTR [eax+0x6336f660],0x44
  40f975:	mov    cl,0x72
  40f977:	mov    dh,0x34
  40f979:	adc    al,0x8d
  40f97b:	cmp    dl,bh
  40f97d:	inc    ebx
  40f97e:	xchg   esi,eax
  40f97f:	add    esp,edi
  40f981:	fcos   
  40f983:	mov    al,ds:0x73750982
  40f988:	out    0x95,eax
  40f98a:	lock and esp,DWORD PTR [edx-0xb]
  40f98e:	push   ebp
  40f98f:	xchg   BYTE PTR [ecx],ah
  40f991:	int    0x9
  40f993:	outs   dx,BYTE PTR ds:[esi]
  40f994:	push   ebp
  40f995:	push   0xe246ea34
  40f99a:	sub    eax,0x1226ea21
  40f99f:	jp     0x40f980
  40f9a1:	sub    esi,DWORD PTR [ebx+0x7eca53df]
  40f9a7:	out    dx,al
  40f9a8:	idiv   eax
  40f9aa:	mov    BYTE PTR [edi-0x72076d0e],bh
  40f9b0:	xchg   ebx,eax
  40f9b1:	mov    bl,0xaf
  40f9b3:	xchg   DWORD PTR [eax+0x32],esp
  40f9b6:	add    ch,al
  40f9b8:	retf   
  40f9b9:	scas   eax,DWORD PTR es:[edi]
  40f9ba:	xor    eax,0x582775da
  40f9bf:	sbb    BYTE PTR [ebp-0x5e],al
  40f9c2:	adc    al,0x34
  40f9c4:	sub    edx,DWORD PTR [edi]
  40f9c6:	outs   dx,DWORD PTR ds:[esi]
  40f9c7:	inc    ebx
  40f9c8:	call   0x36de:0x6099a26d
  40f9cf:	aas    
  40f9d0:	adc    edx,edx
  40f9d2:	stos   BYTE PTR es:[edi],al
  40f9d3:	data16 jae 0x40fa37
  40f9d6:	imul   ebx,ebx,0xffffffd6
  40f9d9:	ins    DWORD PTR es:[edi],dx
  40f9da:	je     0x40f9ec
  40f9dc:	dec    ecx
  40f9dd:	push   ebp
  40f9de:	and    al,0x68
  40f9e0:	pop    esp
  40f9e1:	mov    esp,0xbee3432
  40f9e6:	add    DWORD PTR [eax],eax
  40f9e8:	in     al,0xc1
  40f9ea:	pop    ecx
  40f9eb:	enter  0x4039,0xd
  40f9ef:	cwde   
  40f9f0:	(bad)
  40f9f4:	cmp    cl,dh
  40f9f6:	mov    ss,WORD PTR [ecx+0x790635b2]
  40f9fc:	push   ds
  40f9fd:	add    DWORD PTR [edi],edi
  40f9ff:	xchg   ebp,eax
  40fa00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa01:	(bad)  
  40fa02:	mov    ch,0xa6
  40fa04:	jp     0x40fa4e
  40fa06:	inc    esi
  40fa07:	pop    eax
  40fa08:	in     al,0xea
  40fa0a:	retf   
  40fa0b:	adc    ah,BYTE PTR [ecx]
  40fa0d:	xor    DWORD PTR ds:0xedd4501e,edi
  40fa13:	ret    0xfe25
  40fa16:	and    eax,DWORD PTR [edi+0x45]
  40fa19:	lahf   
  40fa1a:	sbb    al,0xcf
  40fa1c:	clc    
  40fa1d:	add    BYTE PTR [ebp+ebx*4+0x4d0eebaa],ah
  40fa24:	ds stc 
  40fa26:	ret    0x7db0
  40fa29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa2a:	imul   eax,DWORD PTR [edx],0x6d
  40fa2d:	loopne 0x40f9b8
  40fa2f:	xor    eax,0xac775558
  40fa34:	pop    es
  40fa35:	fisubr DWORD PTR ds:0xc04c4887
  40fa3b:	xor    DWORD PTR [esi],0x52
  40fa3e:	mov    ch,0xbe
  40fa40:	aad    0x47
  40fa42:	jg     0x40fa66
  40fa44:	dec    edi
  40fa45:	jnp    0x40fa49
  40fa47:	pop    edx
  40fa48:	mov    edi,0x7cf64f2b
  40fa4d:	and    al,0x50
  40fa4f:	xlat   BYTE PTR ds:[ebx]
  40fa50:	sahf   
  40fa51:	push   DWORD PTR gs:[ecx]
  40fa54:	xchg   esi,eax
  40fa55:	or     eax,0xc825f4ad
  40fa5a:	mov    ds:0xd9164487,eax
  40fa5f:	popf   
  40fa60:	add    DWORD PTR ds:0x78498a56,esp
  40fa66:	imul   ebp,DWORD PTR [eax+0x5f061b8b],0x218f75da
  40fa70:	(bad)  
  40fa71:	push   esi
  40fa72:	mov    eax,0x93acb18c
  40fa77:	test   eax,0xd7c2c7ec
  40fa7c:	retf   
  40fa7d:	fcomp  DWORD PTR [edx]
  40fa7f:	jle    0x40faeb
  40fa81:	mov    ch,0xa5
  40fa83:	sahf   
  40fa84:	jnp    0x40fae3
  40fa86:	push   ebp
  40fa87:	mov    ah,0xd8
  40fa89:	mov    dl,0x7b
  40fa8b:	iret   
  40fa8c:	and    DWORD PTR [esi],edi
  40fa8e:	addr16 adc edx,ebx
  40fa91:	jl     0x40fad5
  40fa93:	div    al
  40fa95:	push   ds
  40fa96:	pop    ds
  40fa97:	add    al,0xda
  40fa9a:	loope  0x40fa62
  40fa9c:	add    esi,edi
  40fa9e:	ins    DWORD PTR es:[edi],dx
  40fa9f:	and    al,0x7f
  40faa1:	jb     0x40fa8a
  40faa3:	test   BYTE PTR [eax+0x787240fc],bh
  40faa9:	xlat   BYTE PTR ds:[ebx]
  40faaa:	cmc    
  40faab:	jae    0x40fb05
  40faad:	data16 aas 
  40faaf:	ins    DWORD PTR es:[edi],dx
  40fab0:	sbb    al,0x16
  40fab2:	dec    esi
  40fab3:	and    esi,DWORD PTR [eax+0x31]
  40fab6:	div    BYTE PTR [esi-0x33]
  40fab9:	sbb    eax,0x2637a688
  40fabe:	addr16 add eax,0x694973bf
  40fac4:	mov    al,ds:0xf1133b8b
  40fac9:	pop    ebp
  40faca:	cmp    eax,0x8c4fa8bb
  40facf:	aad    0xe8
  40fad1:	xchg   DWORD PTR [ebp+0x7e],edx
  40fad4:	jbe    0x40faae
  40fad6:	cmp    eax,0xe24b7df9
  40fadb:	push   0x6bf23df
  40fae0:	cmp    cl,BYTE PTR [ebx+0x67085619]
  40fae6:	loope  0x40fa6a
  40fae8:	cmp    ecx,DWORD PTR [esi]
  40faea:	pop    eax
  40faeb:	pop    ds
  40faec:	xchg   ebp,eax
  40faee:	inc    eax
  40faef:	retf   
  40faf0:	popa   
  40faf1:	inc    eax
  40faf2:	in     al,0x53
  40faf4:	xchg   edx,eax
  40faf5:	ret    
  40faf6:	push   eax
  40faf7:	xor    esp,esp
  40faf9:	mov    DWORD PTR [edx-0x50],esi
  40fafc:	sub    cl,BYTE PTR [esi-0x44]
  40faff:	dec    edi
  40fb00:	sub    al,0xa5
  40fb02:	push   ebp
  40fb03:	pop    es
  40fb04:	mov    ch,0x2
  40fb06:	and    al,0x67
  40fb08:	xor    ah,cl
  40fb0a:	mov    al,ds:0x2b99fed1
  40fb0f:	into   
  40fb10:	xor    ecx,eax
  40fb12:	mov    DWORD PTR [ebp+0x8],ecx
  40fb15:	mov    ecx,DWORD PTR [ebp+0x8]
  40fb18:	mov    edx,DWORD PTR [ebp+0x8]
  40fb1b:	xor    ecx,eax
  40fb1d:	imul   edx,edx,0x5708f4
  40fb23:	add    ecx,esi
  40fb25:	lea    ecx,[ebp+ecx*4-0x64]
  40fb29:	mov    edi,DWORD PTR [ecx]
  40fb2b:	add    edx,edi
  40fb2d:	mov    DWORD PTR [ecx],edx
  40fb2f:	mov    ecx,DWORD PTR [ebp+0x8]
  40fb32:	xor    ecx,eax
  40fb34:	add    ecx,esi
  40fb36:	jne    0x40d740
  40fb3c:	mov    ecx,DWORD PTR [ebp-0x14]
  40fb3f:	mov    edx,DWORD PTR [ebp+0x8]
  40fb42:	xor    ecx,eax
  40fb44:	xor    edx,eax
  40fb46:	add    ecx,esi
  40fb48:	add    edx,esi
  40fb4a:	cmp    ecx,edx
  40fb4c:	jae    0x40fbe2
  40fb52:	lea    edx,[ecx-0x3272de]
  40fb58:	mov    DWORD PTR [ebp-0x18],edx
  40fb5b:	mov    edi,DWORD PTR [ebp-0x18]
  40fb5e:	mov    DWORD PTR [ebp-0x24],0x705fd0f
  40fb65:	lea    edx,[ebp-0x24]
  40fb68:	mov    DWORD PTR [ebp-0x10],edx
  40fb6b:	mov    edx,DWORD PTR [ebp-0x10]
  40fb6e:	add    DWORD PTR [edx],0x705fa0f
  40fb74:	mov    ebx,DWORD PTR [ebp-0x10]
  40fb77:	xor    edi,eax
  40fb79:	add    edi,DWORD PTR [ebx]
  40fb7b:	lea    edx,[ebp+ecx*4-0x64]
  40fb7f:	mov    ebx,DWORD PTR [edx]
  40fb81:	xor    edi,ebx
  40fb83:	mov    DWORD PTR [edx],edi
  40fb85:	mov    edx,DWORD PTR [ebp+0x8]
  40fb88:	xor    edx,eax
  40fb8a:	inc    ecx
  40fb8b:	inc    DWORD PTR [ebp-0x18]
  40fb8e:	add    edx,esi
  40fb90:	cmp    ecx,edx
  40fb92:	jb     0x40fb5b
  40fb98:	jmp    0x40fbe2
  40fb9d:	mov    ecx,DWORD PTR [ebp-0xc]
  40fba0:	mov    DWORD PTR [ebp+0x8],ecx
  40fba3:	jmp    0x40fbd5
  40fba8:	mov    ecx,DWORD PTR [ebp+0x8]
  40fbab:	mov    edx,DWORD PTR [ebp-0x8]
  40fbae:	xor    ecx,eax
  40fbb0:	xor    edx,eax
  40fbb2:	sub    ecx,edx
  40fbb4:	sub    ecx,esi
  40fbb6:	xor    ecx,eax
  40fbb8:	mov    DWORD PTR [ebp+0x8],ecx
  40fbbb:	mov    ecx,DWORD PTR [ebp+0x8]
  40fbbe:	mov    edx,DWORD PTR [ebp+0x8]
  40fbc1:	imul   edx,edx,0x5708f4
  40fbc7:	xor    ecx,eax
  40fbc9:	add    ecx,esi
  40fbcb:	lea    ecx,[ebp+ecx*4-0x64]
  40fbcf:	mov    edi,DWORD PTR [ecx]
  40fbd1:	add    edx,edi
  40fbd3:	mov    DWORD PTR [ecx],edx
  40fbd5:	mov    ecx,DWORD PTR [ebp+0x8]
  40fbd8:	xor    ecx,eax
  40fbda:	add    ecx,esi
  40fbdc:	jne    0x40fba8
  40fbe2:	mov    ecx,DWORD PTR [ebp-0xc]
  40fbe5:	mov    DWORD PTR [ebp+0x8],ecx
  40fbe8:	jmp    0x40fc1a
  40fbed:	mov    ecx,DWORD PTR [ebp+0x8]
  40fbf0:	mov    edx,DWORD PTR [ebp-0x8]
  40fbf3:	xor    ecx,eax
  40fbf5:	xor    edx,eax
  40fbf7:	sub    ecx,edx
  40fbf9:	sub    ecx,esi
  40fbfb:	xor    ecx,eax
  40fbfd:	mov    DWORD PTR [ebp+0x8],ecx
  40fc00:	mov    ecx,DWORD PTR [ebp+0x8]
  40fc03:	mov    edx,DWORD PTR [ebp+0x8]
  40fc06:	imul   edx,edx,0x5708f4
  40fc0c:	xor    ecx,eax
  40fc0e:	add    ecx,esi
  40fc10:	lea    ecx,[ebp+ecx*4-0x64]
  40fc14:	mov    edi,DWORD PTR [ecx]
  40fc16:	add    edx,edi
  40fc18:	mov    DWORD PTR [ecx],edx
  40fc1a:	mov    ecx,DWORD PTR [ebp+0x8]
  40fc1d:	xor    ecx,eax
  40fc1f:	add    ecx,esi
  40fc21:	jne    0x40fbed
  40fc27:	mov    ecx,DWORD PTR [ebp-0x8]
  40fc2a:	mov    edx,DWORD PTR [ebp-0x20]
  40fc2d:	xor    ecx,eax
  40fc2f:	lea    ecx,[ecx+edx*1+0x3272de]
  40fc36:	mov    DWORD PTR [ebp-0x20],ecx
  40fc39:	inc    DWORD PTR [ebp+0xc]
  40fc3c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40fc3f:	xor    ecx,eax
  40fc41:	add    ecx,esi
  40fc43:	jne    0x40d57d
  40fc49:	jmp    0x412094
  40fc4e:	mov    ecx,DWORD PTR [ebp-0xc]
  40fc51:	mov    DWORD PTR [ebp+0x8],ecx
  40fc54:	jmp    0x40fc86
  40fc59:	mov    ecx,DWORD PTR [ebp+0x8]
  40fc5c:	mov    edx,DWORD PTR [ebp-0x8]
  40fc5f:	xor    ecx,eax
  40fc61:	xor    edx,eax
  40fc63:	sub    ecx,edx
  40fc65:	sub    ecx,esi
  40fc67:	xor    ecx,eax
  40fc69:	mov    DWORD PTR [ebp+0x8],ecx
  40fc6c:	mov    ecx,DWORD PTR [ebp+0x8]
  40fc6f:	mov    edx,DWORD PTR [ebp+0x8]
  40fc72:	imul   edx,edx,0x5708f4
  40fc78:	xor    ecx,eax
  40fc7a:	add    ecx,esi
  40fc7c:	lea    ecx,[ebp+ecx*4-0x64]
  40fc80:	mov    edi,DWORD PTR [ecx]
  40fc82:	add    edx,edi
  40fc84:	mov    DWORD PTR [ecx],edx
  40fc86:	mov    ecx,DWORD PTR [ebp+0x8]
  40fc89:	xor    ecx,eax
  40fc8b:	add    ecx,esi
  40fc8d:	jne    0x40fc59
  40fc93:	jmp    0x4120a0
  40fc98:	mov    ecx,DWORD PTR [ebp+0x8]
  40fc9b:	mov    edx,DWORD PTR [ebp-0x8]
  40fc9e:	xor    ecx,eax
  40fca0:	xor    edx,eax
  40fca2:	sub    ecx,edx
  40fca4:	sub    ecx,esi
  40fca6:	xor    ecx,eax
  40fca8:	mov    DWORD PTR [ebp+0x8],ecx
  40fcab:	mov    ecx,DWORD PTR [ebp+0x8]
  40fcae:	mov    edx,DWORD PTR [ebp+0x8]
  40fcb1:	xor    ecx,eax
  40fcb3:	imul   edx,edx,0x5708f4
  40fcb9:	add    ecx,esi
  40fcbb:	lea    ecx,[ebp+ecx*4-0x64]
  40fcbf:	mov    edi,DWORD PTR [ecx]
  40fcc1:	add    edx,edi
  40fcc3:	mov    DWORD PTR [ecx],edx
  40fcc5:	mov    ecx,DWORD PTR [ebp+0x8]
  40fcc8:	xor    ecx,eax
  40fcca:	add    ecx,esi
  40fccc:	jmp    0x41208e
  40fcd1:	pop    ebx
  40fcd2:	(bad)  
  40fcd3:	sbb    BYTE PTR [edi-0x74],cl
  40fcd6:	ja     0x40fcf3
  40fcd8:	retf   
  40fcd9:	push   edx
  40fcda:	outs   dx,BYTE PTR ds:[esi]
  40fcdb:	pop    edx
  40fcdc:	imul   ebp,DWORD PTR [esi+0x70f90e29],0xdd7878c8
  40fce6:	pop    edi
  40fce7:	js     0x40fd61
  40fce9:	mov    eax,ds:0x1943223b
  40fcee:	add    al,0xc5
  40fcf0:	pop    esi
  40fcf1:	std    
  40fcf2:	push   cs
  40fcf3:	jmp    0xd43e:0x95c80ba2
  40fcfa:	jle    0x40fd52
  40fcfc:	fdiv   QWORD PTR [ecx+ecx*4-0x6e455ada]
  40fd03:	cli    
  40fd04:	gs pop es
  40fd06:	sbb    al,0x93
  40fd08:	pmuludq mm2,QWORD PTR [bx+di+0x60]
  40fd0e:	add    BYTE PTR [esi],bl
  40fd10:	xchg   ebp,eax
  40fd11:	test   al,bl
  40fd13:	lahf   
  40fd14:	pop    eax
  40fd15:	ret    0x9008
  40fd18:	std    
  40fd19:	(bad)
  40fd1c:	push   ebp
  40fd1d:	or     eax,0x6596fe1e
  40fd22:	das    
  40fd23:	in     al,dx
  40fd24:	or     bh,bl
  40fd26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd27:	test   BYTE PTR [esi],al
  40fd29:	xchg   esi,eax
  40fd2a:	mov    eax,ds:0x58e89290
  40fd2f:	push   cs
  40fd30:	sub    ah,dh
  40fd32:	and    ebx,esi
  40fd34:	outs   dx,BYTE PTR ds:[esi]
  40fd35:	scas   eax,DWORD PTR es:[edi]
  40fd36:	in     al,dx
  40fd37:	adc    BYTE PTR [esi-0xb79b392],ch
  40fd3d:	push   0x38
  40fd3f:	mov    ds:0x9bf335b6,eax
  40fd44:	dec    DWORD PTR [ebx-0x2b4d9916]
  40fd4a:	rcr    BYTE PTR [eax-0x4e],1
  40fd4d:	scas   al,BYTE PTR es:[edi]
  40fd4e:	xor    cl,BYTE PTR [edx-0x43]
  40fd51:	rol    DWORD PTR [ebp+0x10],1
  40fd54:	xchg   esi,eax
  40fd55:	mov    bh,0xd2
  40fd57:	aas    
  40fd58:	(bad)  [ebp-0x3c2c0755]
  40fd5e:	ins    BYTE PTR es:[edi],dx
  40fd5f:	rol    BYTE PTR [ecx+eax*1],0x27
  40fd63:	mov    eax,ds:0x93bf05ac
  40fd68:	aaa    
  40fd69:	inc    ebp
  40fd6a:	scas   eax,DWORD PTR es:[edi]
  40fd6b:	fwait
  40fd6c:	stos   BYTE PTR es:[edi],al
  40fd6d:	ror    edi,0x25
  40fd70:	stos   DWORD PTR es:[edi],eax
  40fd71:	and    ch,BYTE PTR [ebx]
  40fd73:	xchg   ebp,eax
  40fd74:	ins    DWORD PTR es:[edi],dx
  40fd75:	mov    ebp,DWORD PTR [edi+eax*4+0x61bf0aae]
  40fd7c:	shl    BYTE PTR [edi],cl
  40fd7e:	aas    
  40fd7f:	inc    esi
  40fd80:	fisub  DWORD PTR [ebx+0x296eaec9]
  40fd86:	jp     0x40fd70
  40fd88:	inc    eax
  40fd89:	out    0x5d,al
  40fd8b:	jg     0x40fd22
  40fd8d:	mov    ds:0x51aac3d7,eax
  40fd92:	fisubr WORD PTR [ebp+0x7897f2b6]
  40fd98:	jmp    0x449d325f
  40fd9d:	and    BYTE PTR [ebp+ecx*4+0x553f4178],ch
  40fda4:	arpl   WORD PTR [ecx+esi*2+0x4a],bx
  40fda8:	sbb    bl,BYTE PTR [ebx+0x57712148]
  40fdae:	sbb    al,0xca
  40fdb0:	and    DWORD PTR [ebp-0x423a9931],eax
  40fdb6:	dec    ch
  40fdb8:	mov    edi,0x2db2a367
  40fdbd:	lea    ebx,[eax+ebx*8]
  40fdc0:	(bad)  
  40fdc1:	jnp    0x40fe3b
  40fdc3:	mov    esp,0x5aed68b8
  40fdc8:	inc    edi
  40fdc9:	call   0x51a884b6
  40fdce:	cmp    BYTE PTR ds:0x7ecb7e19,bl
  40fdd4:	mov    dl,0xdc
  40fdd6:	std    
  40fdd7:	add    ebp,DWORD PTR [eax-0x4c0d2f15]
  40fddd:	test   BYTE PTR [esi+0x6],cl
  40fde0:	xor    DWORD PTR [eax+0x57],esi
  40fde3:	fs pop esp
  40fde5:	out    dx,eax
  40fde6:	in     eax,0x5b
  40fde8:	(bad)  
  40fdea:	xor    al,0xf2
  40fdec:	sahf   
  40fded:	and    DWORD PTR [edx-0x6d572265],edi
  40fdf3:	out    dx,eax
  40fdf4:	mov    ah,0x36
  40fdf6:	leave  
  40fdf7:	mov    bl,0x89
  40fdf9:	in     eax,dx
  40fdfa:	mov    dl,0x65
  40fdfc:	outs   dx,DWORD PTR ds:[esi]
  40fdfd:	xchg   ebx,eax
  40fdfe:	cmp    bh,BYTE PTR [ebx+0x54]
  40fe01:	jg     0x40fe00
  40fe03:	dec    ebp
  40fe04:	(bad)  
  40fe05:	xchg   esi,eax
  40fe06:	jae    0x40fe03
  40fe08:	arpl   WORD PTR [edx+0x32e0caba],sp
  40fe0e:	ds inc esp
  40fe10:	jne    0x40fe87
  40fe12:	dec    ecx
  40fe13:	add    cl,BYTE PTR [eax+0x1277157e]
  40fe19:	sti    
  40fe1a:	lds    ebx,FWORD PTR [ecx+edi*2+0x1d]
  40fe1e:	add    dl,cl
  40fe20:	std    
  40fe21:	pop    es
  40fe22:	inc    edx
  40fe23:	retf   
  40fe24:	cmp    BYTE PTR [ebx],0x9
  40fe27:	push   ss
  40fe28:	test   DWORD PTR [ebx+0x1b],ecx
  40fe2b:	cmp    esi,ebx
  40fe2d:	pop    eax
  40fe2e:	mov    eax,ds:0xbbd8d88
  40fe33:	mov    dh,0x61
  40fe35:	repnz enter 0x7eb9,0x73
  40fe3a:	cmp    al,0x72
  40fe3c:	xchg   esp,eax
  40fe3d:	cmp    eax,0x509a1e51
  40fe42:	or     dl,cl
  40fe44:	and    BYTE PTR [esi-0x7f],bh
  40fe47:	ins    DWORD PTR es:[edi],dx
  40fe48:	in     eax,dx
  40fe49:	xchg   edi,eax
  40fe4a:	lock jge 0x40fea6
  40fe4d:	push   ds
  40fe4e:	and    al,0xd9
  40fe50:	pop    ebx
  40fe51:	in     eax,dx
  40fe52:	add    dl,BYTE PTR [edi+edx*4-0x40]
  40fe56:	pop    ecx
  40fe57:	(bad)  
  40fe58:	adc    al,0xf3
  40fe5a:	inc    ebx
  40fe5b:	mov    esp,0x4d0b7e73
  40fe60:	and    bh,BYTE PTR [ecx+ebx*8+0x66030eca]
  40fe67:	push   esi
  40fe68:	xchg   ebx,eax
  40fe69:	pop    ebp
  40fe6a:	mov    esi,0xb9300bf1
  40fe6f:	test   BYTE PTR [ecx+0x4a],ch
  40fe72:	or     ebx,eax
  40fe74:	cwde   
  40fe75:	sbb    ch,cl
  40fe77:	mov    al,ds:0x78b34b59
  40fe7c:	sahf   
  40fe7d:	cs fwait
  40fe7f:	mov    ds,WORD PTR [edx-0x3f57a2c0]
  40fe85:	js     0x40fe82
  40fe87:	adc    al,0x25
  40fe89:	add    eax,0x6d292edd
  40fe8e:	scas   al,BYTE PTR es:[edi]
  40fe8f:	inc    edx
  40fe90:	addr16 cld 
  40fe92:	cmc    
  40fe93:	lds    esi,FWORD PTR [edx-0x5d]
  40fe96:	pop    esp
  40fe97:	pop    ebp
  40fe98:	sub    cl,ch
  40fe9a:	scas   eax,DWORD PTR es:[edi]
  40fe9b:	mov    edi,0xc8855fb2
  40fea0:	push   ss
  40fea1:	ret    0x4175
  40fea4:	add    eax,0x47125c1b
  40fea9:	add    bl,BYTE PTR [eax]
  40feab:	lods   eax,DWORD PTR ds:[esi]
  40feac:	aaa    
  40fead:	xor    BYTE PTR [esi-0x5],bl
  40feb0:	add    DWORD PTR [edx+esi*8+0x22378752],edx
  40feb7:	push   esp
  40feb8:	inc    edx
  40feb9:	pop    esp
  40feba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40febb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40febc:	mov    dh,BYTE PTR [esp+eiz*8-0x5035e0c5]
  40fec3:	repz sbb eax,0x45221bc
  40fec9:	xor    al,BYTE PTR [ecx]
  40fecb:	push   esp
  40fecc:	ret    0xbd44
  40fecf:	or     edi,0xffffffae
  40fed2:	pop    eax
  40fed3:	add    ah,bl
  40fed5:	call   0x2d13:0x93b144f6
  40fedc:	rol    DWORD PTR [esi-0x2b52fd2],0x7a
  40fee3:	add    BYTE PTR [edi-0x52],dh
  40fee6:	inc    esi
  40fee7:	cwde   
  40fee8:	idiv   BYTE PTR gs:[eax-0x54]
  40feec:	arpl   WORD PTR [ebx],cx
  40feee:	xor    BYTE PTR [ebx-0x2a],dh
  40fef1:	cld    
  40fef2:	repnz stos DWORD PTR es:[edi],eax
  40fef4:	adc    esp,edx
  40fef6:	dec    ebp
  40fef7:	push   eax
  40fef8:	xchg   ch,dh
  40fefa:	jae    0x40feb0
  40fefc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fefd:	and    esi,DWORD PTR [edx+0x52]
  40ff00:	and    BYTE PTR ds:0xe404db91,0xf0
  40ff07:	out    0xf2,al
  40ff09:	add    DWORD PTR [esi],esi
  40ff0b:	clc    
  40ff0c:	dec    ebx
  40ff0d:	sti    
  40ff0e:	cld    
  40ff0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff11:	loopne 0x40fe94
  40ff13:	bound  ebx,QWORD PTR [edi]
  40ff15:	cmp    DWORD PTR [ecx],esi
  40ff17:	pop    ebp
  40ff18:	iret   
  40ff19:	cwde   
  40ff1a:	sbb    DWORD PTR ds:0x6aced44f,esp
  40ff20:	ret    0xdc4d
  40ff23:	push   ecx
  40ff24:	aaa    
  40ff25:	push   ds
  40ff26:	fadd   st(1),st
  40ff28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff29:	sbb    eax,0x2a8fca37
  40ff2e:	sbb    BYTE PTR [edi+0x3e1f9540],al
  40ff34:	push   0x1c9d5de2
  40ff39:	outs   dx,BYTE PTR ds:[esi]
  40ff3a:	jne    0x40ff05
  40ff3c:	cmc    
  40ff3d:	outs   dx,BYTE PTR ds:[esi]
  40ff3e:	(bad)  
  40ff3f:	jns    0x40ff21
  40ff41:	fstp   TBYTE PTR [ebx-0x570ec1a4]
  40ff47:	hlt    
  40ff48:	popa   
  40ff49:	ja     0x40ff89
  40ff4b:	xchg   esi,eax
  40ff4c:	sbb    DWORD PTR [ebp-0x679c35df],edi
  40ff52:	sbb    dh,BYTE PTR [ebp+0x6d1cd352]
  40ff58:	pop    esi
  40ff59:	pusha  
  40ff5a:	push   ebp
  40ff5b:	mov    bh,0x3b
  40ff5d:	push   esp
  40ff5e:	arpl   WORD PTR [ebx-0x12],sp
  40ff61:	jecxz  0x40ff87
  40ff63:	sahf   
  40ff64:	add    al,0xae
  40ff66:	int    0x58
  40ff68:	xlat   BYTE PTR ds:[ebx]
  40ff69:	push   esi
  40ff6a:	call   0x3305235d
  40ff6f:	mov    BYTE PTR ds:0x82d2a07b,al
  40ff75:	inc    eax
  40ff76:	jno    0x40ff71
  40ff78:	xor    bl,bl
  40ff7a:	fimul  WORD PTR [ebx+ebp*4]
  40ff7d:	fst    DWORD PTR [ecx]
  40ff7f:	jmp    0x19dc:0x1f575612
  40ff86:	fcomi  st,st(4)
  40ff88:	jmp    0xbaff:0x4d652a01
  40ff8f:	mov    bh,0xbf
  40ff91:	addr16 dec ecx
  40ff93:	push   esp
  40ff94:	jle    0x40ff49
  40ff96:	push   cs
  40ff97:	ja     0x40ffe4
  40ff99:	mov    ds,WORD PTR [edx+0x14]
  40ff9c:	jl     0x40ff40
  40ff9e:	xchg   ebp,eax
  40ff9f:	std    
  40ffa0:	scas   eax,DWORD PTR es:[edi]
  40ffa1:	sub    edx,DWORD PTR ds:0x88c273dd
  40ffa7:	jl     0x410000
  40ffa9:	jle    0x40ff95
  40ffab:	adc    DWORD PTR ds:0x95b1b36d,0x6061b48
  40ffb5:	add    DWORD PTR [edi],edi
  40ffb7:	mov    DWORD PTR [eax-0xe],eax
  40ffba:	adc    BYTE PTR [ebp+edi*4+0x7f474be2],ah
  40ffc1:	retf   0xac90
  40ffc4:	xchg   BYTE PTR [esi+edx*1],dh
  40ffc7:	bound  ecx,QWORD PTR [eax]
  40ffc9:	inc    esp
  40ffca:	aaa    
  40ffcb:	mov    eax,ds:0x4d64819b
  40ffd0:	pop    eax
  40ffd1:	sar    esp,cl
  40ffd3:	push   ebp
  40ffd4:	ss retf 
  40ffd6:	and    ebx,edx
  40ffd8:	cmp    BYTE PTR [ebx-0x2d],ah
  40ffdb:	mov    bl,0x2b
  40ffdd:	push   ss
  40ffde:	int3   
  40ffdf:	stc    
  40ffe0:	imul   ebp,DWORD PTR [edx-0x3b],0x31
  40ffe4:	sub    DWORD PTR [edx-0x7a51181b],0x70
  40ffeb:	test   BYTE PTR [ecx-0xa0c6e9f],dl
  40fff1:	data16 sub BYTE PTR es:[esi-0x34],al
  40fff6:	imul   edi,DWORD PTR [eax+0x662fc339],0xf2399b21
  410000:	cmp    al,0x2
  410002:	retf   0xe05e
  410005:	mov    esp,0xd23bfe23
  41000a:	pushf  
  41000b:	inc    eax
  41000c:	jg     0x40ffa5
  41000e:	pop    esi
  41000f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410010:	jb     0x40fff5
  410012:	fst    DWORD PTR [edi+0x54626c21]
  410018:	jl     0x40ffa5
  41001a:	adc    al,0xbb
  41001c:	cmp    DWORD PTR [edx+0x2e],edi
  41001f:	sbb    esp,0x71
  410022:	jp     0x41002d
  410024:	imul   al
  410026:	idiv   BYTE PTR [edx+edi*1+0x45112ff9]
  41002d:	(bad)  
  41002e:	repnz push eax
  410030:	dec    edx
  410031:	inc    ebp
  410032:	cmp    eax,0x812b443c
  410037:	leave  
  410038:	push   ss
  410039:	mov    ch,0x64
  41003b:	sub    ch,BYTE PTR [ecx-0x5a0e650d]
  410041:	or     al,0xd4
  410043:	stos   DWORD PTR es:[edi],eax
  410044:	retf   
  410045:	pop    ebx
  410046:	mov    ds:0x30b1f139,eax
  41004b:	rcl    DWORD PTR [edx+0xe],0x4a
  41004f:	das    
  410050:	pop    esi
  410051:	push   ss
  410052:	or     eax,0x3ff8888d
  410057:	je     0x41006b
  410059:	arpl   WORD PTR [ebx-0x13],sp
  41005c:	sar    DWORD PTR [ebp-0x9e1e025],0x10
  410063:	jo     0x41000b
  410065:	test   eax,0x2b2ce272
  41006a:	mov    esi,0xccca2f54
  41006f:	sub    al,0xb9
  410071:	ins    BYTE PTR es:[edi],dx
  410072:	jne    0x4100c6
  410074:	jae    0x4100e5
  410076:	shl    DWORD PTR [eax+edi*1-0x6b4c89a2],1
  41007d:	jae    0x4100ac
  41007f:	mov    ah,0xc2
  410081:	adc    ecx,eax
  410083:	mov    ecx,0xc5a5d1cf
  410088:	rcl    ah,1
  41008a:	ins    BYTE PTR es:[edi],dx
  41008b:	and    bl,BYTE PTR [edi+eax*4-0x1dad73a]
  410092:	push   0x18e5c9b4
  410097:	mov    dl,0x5f
  410099:	std    
  41009a:	call   0xfc1c:0x802b0d32
  4100a1:	dec    DWORD PTR ds:0x601dc9ec
  4100a7:	je     0x4100d8
  4100a9:	add    eax,0x327225b
  4100ae:	or     eax,0xecb37a9e
  4100b3:	aas    
  4100b4:	sahf   
  4100b5:	sub    ebp,ebp
  4100b7:	or     BYTE PTR [edi+0x59],bh
  4100ba:	xchg   esi,eax
  4100bb:	mov    eax,ds:0x58834b52
  4100c0:	dec    ebx
  4100c1:	or     al,al
  4100c3:	sbb    esi,DWORD PTR [ebx]
  4100c5:	inc    ebp
  4100c6:	sub    edx,edx
  4100c8:	lock test dh,ah
  4100cb:	das    
  4100cc:	xchg   esp,eax
  4100cd:	jne    0x4100e8
  4100cf:	xor    ch,BYTE PTR [edi]
  4100d1:	sub    BYTE PTR [esi],dh
  4100d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100d4:	loope  0x4100f6
  4100d6:	ss pop edi
  4100d8:	push   ecx
  4100d9:	ja     0x41013d
  4100db:	push   esp
  4100dc:	dec    esp
  4100dd:	sbb    eax,0xd7fae717
  4100e2:	dec    ebx
  4100e3:	fcom   QWORD PTR [esi-0x34bdb723]
  4100e9:	and    bh,bh
  4100eb:	add    edx,edx
  4100ed:	mov    eax,ds:0x65eac34e
  4100f2:	call   0x8237:0x806a790f
  4100f9:	push   eax
  4100fa:	mov    ecx,0x22973f1b
  4100ff:	push   ebx
  410100:	in     al,0x69
  410102:	test   ebp,0x9b7500ce
  410108:	pop    ebx
  410109:	scas   eax,DWORD PTR es:[edi]
  41010a:	push   edi
  41010b:	sti    
  41010c:	add    ebx,DWORD PTR [ebp+0x4e]
  41010f:	and    bl,BYTE PTR [ebx]
  410111:	xchg   DWORD PTR [esi],ebp
  410113:	and    edx,esi
  410115:	and    DWORD PTR [edx],0xb7455325
  41011b:	lea    esi,[esi]
  41011d:	jne    0x4100b0
  41011f:	jbe    0x41019d
  410121:	daa    
  410122:	mov    al,ds:0x956ee5c2
  410127:	cmp    bl,BYTE PTR [esi-0x3755adc2]
  41012d:	cmp    esp,DWORD PTR [ebp+0x18781249]
  410133:	repz sbb ecx,edi
  410136:	inc    eax
  410137:	mov    eax,0x14db4702
  41013c:	xlat   BYTE PTR ds:[ebx]
  41013d:	sub    bh,BYTE PTR [edi+0x22]
  410140:	ja     0x410187
  410142:	fnstcw WORD PTR [ebp+0x45ca155]
  410148:	aas    
  410149:	push   ebp
  41014a:	mov    bl,0x77
  41014c:	jmp    0x79ce6d5a
  410151:	xchg   edx,eax
  410152:	mov    cl,0x2c
  410154:	dec    ebp
  410155:	test   al,0x88
  410157:	inc    edi
  410158:	cmp    al,cl
  41015a:	and    esp,DWORD PTR [ecx+0x1f]
  41015d:	push   esp
  41015e:	enter  0x6870,0x8d
  410162:	cmp    edi,edx
  410164:	xchg   ebp,eax
  410165:	cmp    DWORD PTR [edi-0x52],eax
  410168:	outs   dx,DWORD PTR ds:[esi]
  410169:	dec    edi
  41016a:	gs fld st(3)
  41016d:	icebp  
  41016e:	sbb    bh,BYTE PTR [ebp-0x5a]
  410171:	jmp    0x34e9:0xa555f709
  410178:	xor    eax,0xfea4ff37
  41017d:	je     0x410107
  41017f:	rcr    BYTE PTR [ebx+0x9e3b126],1
  410185:	xor    esi,DWORD PTR ds:0xea2ddd6a
  41018b:	fld    TBYTE PTR [ecx-0x34]
  41018e:	arpl   dx,sp
  410190:	cmp    esi,DWORD PTR [ebx-0x71100a48]
  410196:	aam    0x13
  410198:	sub    BYTE PTR gs:[ecx+0x2f],bl
  41019c:	mov    ?,edx
  41019e:	jae    0x41017b
  4101a0:	cld    
  4101a1:	gs imul ebp,esp,0x2befe4f
  4101a8:	test   eax,0xa1b8a9f5
  4101ad:	vunpckhps ymm1,ymm2,YMMWORD PTR [esi+0x4b]
  4101b2:	sub    cl,bl
  4101b4:	xchg   ebp,eax
  4101b5:	push   eax
  4101b6:	or     edi,DWORD PTR [edx+0x55815ec4]
  4101bc:	sar    BYTE PTR [esi-0x7655a4f6],0x5a
  4101c3:	inc    ebp
  4101c4:	jmp    0xe85a48d6
  4101c9:	clc    
  4101ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101cb:	adc    DWORD PTR [ebx+0x2b],edx
  4101ce:	add    eax,0x556c2531
  4101d3:	dec    ecx
  4101d4:	jno    0x4101dc
  4101d6:	mov    esi,0x1d3c2f85
  4101db:	or     bh,BYTE PTR [ebp-0x5c962116]
  4101e1:	adc    ch,cl
  4101e3:	push   cs
  4101e4:	push   es
  4101e5:	scas   eax,DWORD PTR es:[edi]
  4101e6:	jmp    0x5446:0xfcded138
  4101ed:	scas   eax,DWORD PTR es:[edi]
  4101ee:	inc    edx
  4101ef:	hlt    
  4101f0:	pop    ds
  4101f1:	adc    eax,0x46cbe807
  4101f6:	xor    dl,0x2
  4101f9:	icebp  
  4101fa:	mov    al,dl
  4101fc:	mov    ?,ebp
  4101fe:	jp     0x4101ad
  410200:	lahf   
  410201:	sub    eax,0x22768942
  410206:	lock fucom st(5)
  410209:	jbe    0x4101a1
  41020b:	inc    ax
  41020d:	adc    ch,dl
  41020f:	rcr    BYTE PTR [ecx+0x65],0x80
  410213:	add    ebx,ecx
  410215:	xor    DWORD PTR [ecx-0x219cd4e9],edi
  41021b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41021c:	mov    bh,0xbd
  41021e:	adc    DWORD PTR [ecx],esp
  410220:	loope  0x4101d0
  410222:	and    al,0xd4
  410224:	or     al,0xc5
  410226:	out    0xea,al
  410228:	int    0xf
  41022a:	retf   
  41022b:	xchg   ecx,eax
  41022c:	fnstcw WORD PTR [ecx+0x5c]
  41022f:	pop    esi
  410230:	add    eax,0x653e7439
  410235:	dec    edi
  410236:	dec    ecx
  410237:	call   DWORD PTR [esi]
  410239:	adc    al,0x12
  41023b:	fldz   
  41023d:	shl    DWORD PTR [ebp-0x4e],1
  410240:	les    ecx,FWORD PTR [esi]
  410242:	nop
  410243:	stos   DWORD PTR es:[edi],eax
  410244:	out    0xd5,al
  410246:	aad    0x5
  410248:	nop
  410249:	pusha  
  41024a:	dec    esi
  41024b:	adc    BYTE PTR [ecx+0xbb4db40],dh
  410251:	sub    bh,cl
  410253:	push   cs
  410254:	push   ds
  410255:	add    al,0xe9
  410257:	lods   eax,DWORD PTR ds:[esi]
  410258:	shl    BYTE PTR [ecx],0x21
  41025b:	dec    edx
  41025c:	mov    cl,0x7d
  41025e:	mov    ecx,0x7c3065ea
  410263:	fist   WORD PTR [edx+edi*4-0x19]
  410267:	sub    ebp,ebp
  410269:	push   ecx
  41026a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41026b:	popa   
  41026c:	push   esp
  41026d:	add    DWORD PTR [ebx],ebx
  41026f:	jmp    0x194f:0xb3708700
  410276:	cli    
  410277:	mov    esi,0xb80f4c7e
  41027c:	sbb    eax,0xcc795cd9
  410281:	pushf  
  410282:	hlt    
  410283:	mov    ch,0x66
  410285:	js     0x4102fe
  410287:	js     0x41025e
  410289:	sub    BYTE PTR [esi-0x68720cc4],cl
  41028f:	shl    DWORD PTR [eax+0x71],cl
  410292:	push   esi
  410293:	sti    
  410294:	shl    BYTE PTR ds:0xb4c6a05a,0x7a
  41029b:	jp     0x410268
  41029d:	dec    edx
  41029e:	push   ebp
  41029f:	pop    ecx
  4102a0:	test   eax,0x50a63d84
  4102a5:	inc    ebp
  4102a6:	adc    eax,0xb432855f
  4102ab:	inc    esp
  4102ac:	in     al,0x43
  4102ae:	push   ebp
  4102af:	test   eax,0x958d10c4
  4102b4:	push   cs
  4102b5:	sub    eax,0x2d8954d4
  4102ba:	popf   
  4102bb:	mov    dh,0x4e
  4102bd:	sub    BYTE PTR [eax+ecx*1+0x493ea848],cl
  4102c4:	test   al,0xf5
  4102c6:	fwait
  4102c7:	jns    0x4102fb
  4102c9:	cmp    ecx,ecx
  4102cb:	sub    eax,0x65bb7230
  4102d0:	jle    0x41029d
  4102d2:	xchg   edi,eax
  4102d3:	add    DWORD PTR [edi+0x7e],edx
  4102d6:	dec    ebp
  4102d7:	mov    eax,0x52fdd01
  4102dc:	push   0x5c4e1eae
  4102e1:	add    eax,edi
  4102e3:	shr    DWORD PTR [ecx+esi*4],0xbf
  4102e7:	jg     0x4102f0
  4102e9:	push   ds
  4102ea:	fistp  QWORD PTR [ebx-0x24]
  4102ed:	les    ebx,FWORD PTR [edi+0x18511698]
  4102f3:	enter  0x1d7d,0xf7
  4102f7:	xchg   edi,eax
  4102f8:	loopne 0x4102a7
  4102fa:	ror    DWORD PTR [ecx],1
  4102fc:	adc    bl,BYTE PTR [ebp+0x4546a0fe]
  410302:	add    al,0xd3
  410304:	test   DWORD PTR [esi+0x4e],esp
  410307:	mov    al,ds:0xf6199bfb
  41030c:	sub    cl,BYTE PTR [eax+0x6c]
  41030f:	pop    edi
  410310:	and    DWORD PTR [eax+0x38b50bec],0x11
  410317:	mov    esp,0x62c5d5ac
  41031c:	lods   al,BYTE PTR ds:[esi]
  41031d:	xchg   BYTE PTR [edi],ch
  41031f:	ret    
  410320:	pop    edx
  410321:	xchg   esp,eax
  410322:	xor    eax,DWORD PTR [ecx+0x67e811dd]
  410328:	popa   
  410329:	stos   BYTE PTR es:[edi],al
  41032a:	inc    bp
  41032c:	cmc    
  41032d:	stos   DWORD PTR es:[edi],eax
  41032e:	fcom   DWORD PTR [ecx+0x6d2b7d9c]
  410334:	push   ebp
  410335:	mov    cl,0x92
  410337:	xor    al,0xec
  410339:	push   es
  41033a:	and    ch,BYTE PTR [edx]
  41033c:	mov    dl,ah
  41033e:	push   edi
  41033f:	cmp    BYTE PTR [ecx-0x16e65c89],al
  410345:	xor    eax,0x5bd4f5aa
  41034a:	mov    BYTE PTR [edi+0x518f6da7],bh
  410350:	xchg   ebx,eax
  410351:	add    cl,cl
  410353:	pop    ecx
  410354:	adc    eax,DWORD PTR [esi+0x3ae2a8f0]
  41035a:	leave  
  41035b:	cmp    ebx,DWORD PTR ds:0xd8270530
  410361:	stos   DWORD PTR es:[edi],eax
  410362:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410363:	dec    eax
  410364:	mov    al,ds:0xc2e9e41
  410369:	mov    BYTE PTR [ebp+0x3],ch
  41036c:	dec    ecx
  41036d:	mov    BYTE PTR [ebp+edi*8+0x74],dl
  410371:	jae    0x41030e
  410373:	xchg   DWORD PTR [edx+ecx*2+0x10],esp
  410377:	call   FWORD PTR [eax]
  410379:	inc    ecx
  41037a:	ins    BYTE PTR es:[edi],dx
  41037b:	lock inc esp
  41037d:	shr    BYTE PTR [esp+ebp*2-0x6a],1
  410381:	dec    ecx
  410382:	loopne 0x410333
  410384:	gs push 0x7b
  410387:	push   ss
  410388:	jmp    0xb17a:0x6b4ef46d
  41038f:	mov    cl,0xc8
  410391:	jns    0x4103a5
  410393:	into   
  410394:	push   0x3b
  410396:	cdq    
  410397:	(bad)  
  410398:	stos   DWORD PTR es:[edi],eax
  410399:	pop    edi
  41039a:	sub    DWORD PTR [edi],esp
  41039c:	and    eax,DWORD PTR [esi+0x5c849478]
  4103a2:	dec    esp
  4103a3:	push   cs
  4103a4:	cwde   
  4103a5:	mov    DWORD PTR [ecx-0x18817f0b],ecx
  4103ab:	lahf   
  4103ac:	cwde   
  4103ad:	cdq    
  4103ae:	rol    cl,cl
  4103b0:	cmc    
  4103b1:	cmp    al,0xa8
  4103b3:	fild   DWORD PTR [ebx+ebp*1]
  4103b6:	push   esi
  4103b7:	mov    al,0x92
  4103b9:	push   edx
  4103ba:	jp     0x41041d
  4103bc:	inc    esi
  4103bd:	or     al,0x17
  4103bf:	sub    ebp,DWORD PTR [esi]
  4103c1:	jb     0x4103d3
  4103c3:	or     ch,BYTE PTR [edi-0x26]
  4103c6:	data16 ficomp WORD PTR [eax]
  4103c9:	dec    eax
  4103ca:	mov    esi,0xa4638245
  4103cf:	mov    esp,0xf275acaa
  4103d4:	call   0x13d2:0x504f1553
  4103db:	sar    DWORD PTR [ebx],1
  4103dd:	push   ss
  4103de:	pop    esi
  4103df:	mov    ah,0x43
  4103e1:	test   eax,0xc299ce46
  4103e6:	test   BYTE PTR [ebx-0x56],0xdf
  4103ea:	inc    ecx
  4103eb:	mov    ds:0xdd5725e1,al
  4103f0:	neg    DWORD PTR [esi-0x2a]
  4103f3:	dec    ecx
  4103f4:	iretw  
  4103f6:	in     al,0x9b
  4103f8:	jmp    0x601c3bb
  4103fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103fe:	inc    edi
  4103ff:	xchg   esi,eax
  410400:	mov    cl,0xce
  410402:	add    esp,edi
  410404:	pop    ecx
  410405:	sahf   
  410406:	cmp    BYTE PTR [ebx],ah
  410408:	out    dx,al
  410409:	loopne 0x41042e
  41040b:	in     al,0x40
  41040d:	pushf  
  41040e:	mov    ebx,0xb56079bf
  410413:	mov    bl,0x7f
  410415:	retf   
  410416:	cli    
  410417:	ss fdiv st(1),st
  41041a:	mov    ebp,0xa0d702fe
  41041f:	push   ecx
  410420:	push   ebx
  410421:	std    
  410422:	daa    
  410423:	push   edi
  410425:	pop    ebp
  410426:	dec    esi
  410427:	cmp    esp,esi
  410429:	push   cs
  41042a:	or     BYTE PTR [esi-0x1517c080],dh
  410430:	or     BYTE PTR [eax-0x78],0xcb
  410434:	push   ebp
  410435:	xor    BYTE PTR [eax+0x4b],bh
  410438:	int3   
  410439:	sbb    bl,BYTE PTR [esi-0x68]
  41043c:	jns    0x4103da
  41043e:	loopne 0x410431
  410440:	and    DWORD PTR [eax+ebx*1+0x1cbeeb1d],ebp
  410447:	ret    0xa170
  41044a:	(bad)  
  41044b:	out    0xc3,eax
  41044d:	cmp    dh,BYTE PTR [ecx+eiz*2]
  410450:	arpl   sp,ax
  410452:	adc    ecx,eax
  410454:	inc    ebp
  410455:	dec    esi
  410456:	lahf   
  410457:	aas    
  410458:	sbb    edi,0xffffff89
  41045b:	mov    al,0xf8
  41045d:	sub    eax,0x964b01b9
  410462:	ret    
  410463:	imul   BYTE PTR [esi+0x565af7de]
  410469:	cmp    al,0x93
  41046b:	ds int3 
  41046d:	cmp    bh,ah
  41046f:	in     eax,0xdf
  410471:	stc    
  410472:	or     eax,0xef79bc90
  410477:	or     edx,eax
  410479:	mov    ebx,0xddc407de
  41047e:	jle    0x4104d5
  410480:	mov    ch,0xb1
  410482:	or     esp,DWORD PTR [edi-0x5c]
  410485:	inc    eax
  410486:	dec    edx
  410487:	dec    edx
  410488:	pop    ecx
  410489:	test   bl,bl
  41048b:	dec    esp
  41048c:	fdiv   DWORD PTR [eax-0x6a]
  41048f:	mov    ecx,0x79808bfd
  410494:	mov    esi,0xc1a33b99
  410499:	lock aad 0x50
  41049c:	retf   
  41049d:	neg    bh
  41049f:	mov    bl,0xc4
  4104a1:	xchg   ebp,eax
  4104a2:	push   ecx
  4104a3:	inc    edi
  4104a4:	xchg   ebx,eax
  4104a5:	dec    eax
  4104a6:	stos   DWORD PTR es:[edi],eax
  4104a7:	in     eax,dx
  4104a8:	cmp    DWORD PTR [eax+0x4d2381ff],esp
  4104ae:	lds    esp,FWORD PTR [eax]
  4104b0:	mov    esi,0xe70a5428
  4104b5:	dec    ecx
  4104b6:	mov    esi,0x543bfd0a
  4104bb:	or     DWORD PTR [eax],edx
  4104bd:	jno    0x41052f
  4104bf:	jg     0x410472
  4104c1:	ficom  WORD PTR [edx]
  4104c3:	stos   BYTE PTR es:[edi],al
  4104c4:	sti    
  4104c5:	(bad)  
  4104c7:	test   BYTE PTR [ebp-0x15],bl
  4104ca:	mov    bl,0x2c
  4104cc:	adc    eax,0x8f25320d
  4104d1:	add    al,bl
  4104d3:	xchg   edx,eax
  4104d4:	jns    0x41045d
  4104d6:	dec    eax
  4104d7:	out    0x45,eax
  4104d9:	mov    bh,0x43
  4104db:	mov    edi,0x88393242
  4104e0:	mov    cl,0xac
  4104e2:	ins    BYTE PTR es:[edi],dx
  4104e3:	adc    dl,BYTE PTR [ecx]
  4104e5:	sbb    eax,0xa328db14
  4104ea:	mov    DWORD PTR [edi+edx*4],edi
  4104ed:	or     dl,BYTE PTR [ecx+0x4a]
  4104f0:	div    BYTE PTR [eax-0x1ee21842]
  4104f6:	mov    DWORD PTR [edx+0x74],esi
  4104f9:	dec    eax
  4104fa:	push   eax
  4104fb:	jno    0x41056c
  4104fd:	inc    esi
  4104fe:	cdq    
  4104ff:	mov    ebp,0x5d24aca7
  410504:	inc    esi
  410505:	mov    dh,0x23
  410507:	ins    DWORD PTR es:[edi],dx
  410508:	sub    ah,BYTE PTR [edi-0x1c]
  41050b:	jle    0x4104cd
  41050d:	push   esp
  41050e:	jb     0x410536
  410510:	xlat   BYTE PTR ds:[ebx]
  410511:	out    dx,al
  410512:	mov    esp,0x6d05a78e
  410517:	add    ebx,DWORD PTR [eax+0x6f]
  41051a:	add    eax,0x603061c6
  41051f:	cmp    ah,BYTE PTR [esi+0x5b3e60d4]
  410525:	lock aas 
  410527:	xor    eax,0xd0f4b93c
  41052c:	fadd   QWORD PTR [ecx-0x4b]
  41052f:	xor    DWORD PTR [edx],0xffffffd3
  410532:	js     0x410582
  410534:	retf   
  410535:	lods   al,BYTE PTR ds:[esi]
  410536:	bound  ecx,QWORD PTR [ecx-0x59]
  410539:	mov    esp,0x6e9672a9
  41053e:	out    0xf3,al
  410540:	add    DWORD PTR [edi],esp
  410542:	dec    esp
  410543:	xchg   edx,eax
  410544:	dec    edx
  410545:	sbb    ecx,DWORD PTR [edi-0x9e96772]
  41054b:	mov    al,0x68
  41054d:	scas   al,BYTE PTR es:[edi]
  41054e:	sbb    BYTE PTR [esi],0xa0
  410551:	mov    eax,0x4eda521c
  410556:	xchg   esi,eax
  410557:	adc    BYTE PTR [ebx-0x7c9e8a20],dl
  41055d:	lods   eax,DWORD PTR ds:[esi]
  41055e:	add    DWORD PTR [eax-0x69],ecx
  410561:	mov    dh,0x48
  410563:	rcr    DWORD PTR [esi+0x40],1
  410566:	pop    edi
  410567:	xlat   BYTE PTR ds:[ebx]
  410568:	jle    0x4105cb
  41056a:	jne    0x410531
  41056c:	addr16 es jnp 0x41059b
  410570:	les    ebx,FWORD PTR [ebx-0x2d]
  410573:	fsubr  QWORD PTR [edi-0x5f]
  410576:	inc    esp
  410577:	(bad)  
  410578:	and    ecx,DWORD PTR [eax]
  41057a:	xor    ebp,DWORD PTR [eax-0xe]
  41057d:	cmp    eax,0xe179805f
  410582:	mov    ebx,0x54efee3
  410587:	mov    edx,DWORD PTR [edx-0x57]
  41058a:	sbb    al,ch
  41058c:	mov    edx,0x791d9f41
  410591:	ss dec esi
  410593:	sbb    ecx,esp
  410595:	bound  eax,QWORD PTR [ebx]
  410597:	fst    QWORD PTR [esi-0x4a5fed2]
  41059d:	inc    esp
  41059e:	adc    BYTE PTR [edx+0x53ab59a1],ah
  4105a4:	cmp    ah,cl
  4105a6:	or     DWORD PTR [edi-0x16],ebp
  4105a9:	test   DWORD PTR [ebp-0x37c7efcf],ebp
  4105af:	aam    0xd4
  4105b1:	aaa    
  4105b2:	outs   dx,DWORD PTR ds:[esi]
  4105b3:	aam    0x6f
  4105b5:	push   edx
  4105b6:	ficom  WORD PTR [edx-0x31eb22d8]
  4105bc:	out    0xae,al
  4105be:	pop    ds
  4105bf:	rcr    BYTE PTR [edi-0x3b7fdea0],0xb3
  4105c6:	vpmullw xmm5,xmm4,XMMWORD PTR [ebp+0x76]
  4105cb:	mov    cl,0xa1
  4105cd:	outs   dx,DWORD PTR ds:[esi]
  4105ce:	mov    esp,0x5ecb8d28
  4105d3:	test   ebp,esp
  4105d5:	enter  0xb875,0x39
  4105d9:	push   ss
  4105da:	xchg   ecx,eax
  4105db:	fdivp  st(7),st
  4105dd:	imul   ecx,DWORD PTR [edi+ebp*1],0x34928d23
  4105e4:	fisubr WORD PTR [ecx+0x4962ab39]
  4105ea:	push   esi
  4105eb:	arpl   WORD PTR [eax],si
  4105ed:	mov    eax,0x3d017c34
  4105f2:	mov    eax,ds:0xf43bfb92
  4105f7:	or     DWORD PTR [esi-0x524766ba],0xffffffe0
  4105fe:	in     eax,dx
  4105ff:	xor    edx,DWORD PTR [esp+esi*2-0x4e]
  410603:	pop    esi
  410604:	popa   
  410605:	dec    edx
  410606:	jmp    0x41064b
  410608:	jmp    0x4105bf
  41060a:	std    
  41060b:	lods   al,BYTE PTR ds:[esi]
  41060c:	mov    ds:0x9235c9b6,al
  410611:	les    esp,FWORD PTR [ebp+0x101418ea]
  410617:	inc    ebx
  410618:	ret    0x205b
  41061b:	nop
  41061c:	aas    
  41061d:	std    
  41061e:	add    al,0x56
  410620:	shl    DWORD PTR [edx-0x64],0x19
  410624:	dec    esi
  410625:	xlat   BYTE PTR ds:[ebx]
  410626:	out    dx,eax
  410627:	nop
  410628:	xor    eax,0xfe709a8d
  41062d:	add    al,0x8a
  41062f:	or     eax,0x2358f589
  410634:	enter  0x5f84,0x69
  410638:	cld    
  410639:	push   es
  41063a:	nop
  41063b:	psrlq  mm2,QWORD PTR [ebx-0x71]
  41063f:	retf   
  410640:	icebp  
  410641:	sbb    eax,DWORD PTR [ecx+ebp*1-0x70]
  410645:	jp     0x410659
  410647:	push   edx
  410648:	adc    eax,DWORD PTR [ecx]
  41064a:	push   es
  41064b:	ret    
  41064c:	fiadd  DWORD PTR [edx+0x6c98f1d9]
  410652:	dec    esi
  410653:	pop    ds
  410654:	jo     0x410695
  410656:	pop    ebp
  410657:	sbb    ch,dh
  410659:	jno    0x4106a0
  41065b:	jl     0x410642
  41065d:	pop    ecx
  41065e:	test   DWORD PTR [ebp-0x3b134c2d],0xfcb724b8
  410668:	mov    bl,0xdc
  41066a:	into   
  41066b:	jnp    0x4106bf
  41066d:	sbb    DWORD PTR [ebp+0x21],edx
  410670:	adc    eax,0xf55ca541
  410675:	repz push ebp
  410677:	push   esp
  410678:	or     ebx,DWORD PTR [eax+0x54]
  41067b:	mov    esi,esp
  41067d:	mov    cl,0x78
  41067f:	ret    0x29e8
  410682:	outs   dx,DWORD PTR ds:[esi]
  410683:	dec    eax
  410684:	push   esi
  410685:	cmp    al,0x23
  410687:	sub    ebx,DWORD PTR [esi-0x71]
  41068a:	xor    eax,0x4dbf035f
  41068f:	fnstsw WORD PTR [ebp+0x2959d0ae]
  410695:	scas   eax,DWORD PTR es:[edi]
  410696:	adc    al,0x28
  410698:	pushf  
  410699:	mov    BYTE PTR [eax+0x1b71d632],dl
  41069f:	test   DWORD PTR [edi-0x19fb9abc],edi
  4106a5:	or     DWORD PTR [ebx],edi
  4106a7:	aaa    
  4106a8:	mov    bh,0xa2
  4106aa:	cmp    ch,al
  4106ac:	call   0xa8de:0x7036e586
  4106b3:	or     al,0x52
  4106b5:	shl    dl,1
  4106b7:	xchg   ebp,eax
  4106b8:	cmp    al,0x75
  4106ba:	(bad)  
  4106bb:	fild   QWORD PTR [ecx]
  4106bd:	lock sbb ch,cl
  4106c0:	cmp    DWORD PTR [ebx],edi
  4106c2:	add    al,0x45
  4106c4:	or     ecx,DWORD PTR ds:0x50f142fc
  4106ca:	mov    bh,0x2c
  4106cc:	(bad)  
  4106cd:	int3   
  4106ce:	xor    eax,0x3028a560
  4106d3:	pop    ds
  4106d4:	add    ch,bl
  4106d6:	push   ds
  4106d7:	jecxz  0x410694
  4106d9:	mov    esi,0x4e5b8722
  4106de:	jl     0x41075e
  4106e0:	adc    edi,ebx
  4106e2:	hlt    
  4106e3:	lock cmp DWORD PTR cs:[ecx],0xbc2e7d13
  4106eb:	adc    al,BYTE PTR gs:[ecx+eax*8]
  4106ef:	ds dec ecx
  4106f1:	adc    BYTE PTR [esi+0x1c],bh
  4106f4:	mov    edx,0x93f934ad
  4106f9:	out    dx,eax
  4106fa:	xchg   ebx,eax
  4106fb:	gs fwait
  4106fd:	loop   0x410769
  4106ff:	mov    al,0xaf
  410701:	sahf   
  410702:	dec    esp
  410703:	jmp    0x433f:0xa9d88249
  41070a:	and    ecx,ecx
  41070c:	xor    ch,BYTE PTR [eax+ebp*1-0x42a5c008]
  410713:	sub    esi,ebx
  410715:	mov    al,0x8e
  410717:	xor    al,BYTE PTR ds:0xa0f0293a
  41071d:	add    BYTE PTR [edi+0x72e4273e],bl
  410723:	not    DWORD PTR cs:[ecx-0x3b71d52c]
  41072a:	xchg   DWORD PTR [ebx+eax*8],esp
  41072d:	std    
  41072e:	mov    ds:0xe661da99,al
  410733:	iret   
  410734:	clc    
  410735:	or     dl,bl
  410737:	out    0xf2,eax
  410739:	push   eax
  41073a:	mov    gs,ebp
  41073c:	stc    
  41073d:	or     DWORD PTR [ebx+0x29f012c7],edi
  410743:	sbb    DWORD PTR [ecx-0x152b19b4],ebp
  410749:	loop   0x4106f2
  41074b:	hlt    
  41074c:	out    0x6,eax
  41074e:	adc    DWORD PTR [ebp+0xd63b5a3],ecx
  410754:	sbb    DWORD PTR [eax],ebx
  410756:	push   ebx
  410757:	push   ebp
  410758:	and    ch,0x16
  41075b:	jo     0x410781
  41075d:	ror    BYTE PTR [ebx],1
  41075f:	(bad)  
  410760:	cld    
  410761:	int    0x47
  410763:	ret    0x4e10
  410766:	idiv   BYTE PTR [ecx+ecx*2+0x3c605cfb]
  41076d:	rol    DWORD PTR es:[ecx],cl
  410770:	ficomp DWORD PTR [ecx+edx*1]
  410773:	add    bh,BYTE PTR [ebx+eax*2+0x12ec3c50]
  41077a:	inc    edi
  41077b:	into   
  41077c:	daa    
  41077d:	jo     0x410779
  41077f:	aaa    
  410780:	dec    eax
  410781:	ins    DWORD PTR es:[edi],dx
  410782:	cmp    al,0x63
  410784:	shl    DWORD PTR [edi+0x6cdcb2d9],1
  41078a:	sbb    al,BYTE PTR ds:0xca441080
  410790:	xlat   BYTE PTR ds:[ebx]
  410791:	xchg   ebp,eax
  410792:	or     al,0x82
  410794:	cli    
  410795:	fld    TBYTE PTR [esi-0x67]
  410798:	inc    ecx
  410799:	enter  0xcfb,0x6f
  41079d:	jae    0x41074e
  41079f:	rol    DWORD PTR [ebx-0x559611e3],cl
  4107a5:	adc    eax,0x630f01c3
  4107aa:	mov    edi,0x12e6e277
  4107af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107b0:	dec    eax
  4107b1:	jl     0x4107f8
  4107b3:	icebp  
  4107b4:	inc    ebp
  4107b5:	push   0x51
  4107b7:	test   eax,0x9d6df999
  4107bc:	pop    ds
  4107bd:	dec    eax
  4107be:	pop    edx
  4107bf:	push   esi
  4107c0:	out    0x66,eax
  4107c2:	cdq    
  4107c3:	scas   eax,DWORD PTR es:[edi]
  4107c4:	jae    0x4107dd
  4107c6:	pop    esp
  4107c7:	cwde   
  4107c8:	sub    edi,DWORD PTR [ebp+0x1f]
  4107cb:	inc    ebp
  4107cc:	cmp    DWORD PTR [ebp+0x45f8beb9],edi
  4107d2:	addr16 mov bh,0x63
  4107d5:	add    al,0x1f
  4107d7:	iret   
  4107d8:	adc    eax,0xea818049
  4107dd:	cld    
  4107de:	ins    DWORD PTR es:[edi],dx
  4107df:	and    ebx,DWORD PTR [ebx-0x4d7d4bf6]
  4107e5:	sti    
  4107e6:	mov    gs,WORD PTR [edx-0x6e]
  4107e9:	pop    edx
  4107ea:	adc    al,0x0
  4107ec:	inc    edx
  4107ed:	enter  0x1762,0xee
  4107f1:	sub    eax,0xa3440627
  4107f6:	and    ch,BYTE PTR [ecx]
  4107f8:	cmp    eax,0xd1fa6ca1
  4107fd:	hlt    
  4107fe:	cld    
  4107ff:	sbb    DWORD PTR ds:0xf7db8fbc,esp
  410805:	adc    bh,dl
  410807:	or     al,0xd9
  410809:	xchg   ecx,eax
  41080a:	out    0x72,al
  41080c:	data16 fucom st(7)
  41080f:	sub    BYTE PTR [eax+edi*4],ah
  410812:	cwde   
  410813:	sub    edi,eax
  410815:	xchg   esi,eax
  410816:	mov    ch,0x5d
  410818:	or     DWORD PTR [ecx-0x46],esi
  41081b:	adc    ebx,DWORD PTR [ebx+0x6b]
  41081e:	mov    ebx,0x8427f9ce
  410823:	xchg   BYTE PTR [edx+0x74a1f36a],dh
  410829:	dec    ecx
  41082a:	dec    ecx
  41082b:	sbb    edx,ebp
  41082d:	sbb    cl,BYTE PTR [eax+edx*8-0x4161ed9a]
  410834:	in     al,0x29
  410836:	jl     0x41081a
  410838:	mov    edx,0x380bcbbe
  41083d:	imul   edx,DWORD PTR [esi-0x7a88ec05],0x2ac0e8f
  410847:	mov    edx,0xb367c1df
  41084c:	xchg   edi,eax
  41084d:	aaa    
  41084e:	adc    al,0x9c
  410850:	retf   
  410851:	lea    edx,[esi]
  410853:	dec    edi
  410854:	mov    ds:0xf65efa84,eax
  410859:	fwait
  41085a:	stos   DWORD PTR es:[edi],eax
  41085b:	shr    DWORD PTR [ebx],0x43
  41085e:	sbb    dh,BYTE PTR [eax-0x32]
  410861:	out    0x83,al
  410863:	sti    
  410864:	dec    ebp
  410865:	retf   0xc5e
  410868:	out    0x35,al
  41086a:	arpl   WORD PTR [ebp+0x2dcc091],bx
  410870:	js     0x4108ec
  410872:	shl    ecx,0xfc
  410875:	xchg   DWORD PTR [eax-0x5a],edi
  410878:	scas   al,BYTE PTR es:[edi]
  410879:	mov    ds:0xc286256e,eax
  41087e:	ret    
  41087f:	fmul   DWORD PTR [edx+0x7d]
  410882:	mov    cl,0x64
  410884:	dec    esi
  410885:	mov    al,ds:0xfb718d17
  41088a:	(bad)  
  41088b:	hlt    
  41088c:	out    0x40,eax
  41088e:	jmp    0xb9af:0x854e991e
  410895:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410896:	daa    
  410897:	popa   
  410898:	arpl   ax,ax
  41089a:	and    eax,0xf0af09a1
  41089f:	dec    eax
  4108a0:	sbb    al,0xff
  4108a2:	xor    BYTE PTR [ebp-0x63],bl
  4108a5:	pop    esp
  4108a6:	daa    
  4108a7:	jns    0x410912
  4108a9:	in     al,0xc5
  4108ab:	pop    edi
  4108ac:	jmp    0x4108d5
  4108ae:	cmp    bl,BYTE PTR [ecx+0x46]
  4108b1:	in     eax,0x44
  4108b3:	lock inc esp
  4108b6:	jp     0x4108a4
  4108b8:	ss das 
  4108ba:	jne    0x4108c0
  4108bc:	test   eax,0x52c4c5c6
  4108c1:	fs jb  0x4108f2
  4108c4:	sahf   
  4108c5:	mov    edx,0x9e6e20bc
  4108ca:	and    al,0xef
  4108cc:	pusha  
  4108cd:	mov    dh,0x23
  4108cf:	xchg   ebp,eax
  4108d0:	sti    
  4108d1:	test   eax,0x95447e6
  4108d6:	inc    eax
  4108d7:	lea    eax,[esi-0x80]
  4108da:	push   ecx
  4108db:	ins    DWORD PTR es:[edi],dx
  4108dc:	repz cmp al,BYTE PTR fs:[edi]
  4108e0:	aad    0x16
  4108e2:	add    bl,BYTE PTR ds:0x22061ae2
  4108e8:	pusha  
  4108e9:	pushf  
  4108ea:	cmp    ecx,DWORD PTR [edi-0x1c]
  4108ed:	iret   
  4108ee:	mov    ds:0xf09f6811,eax
  4108f3:	inc    esi
  4108f4:	or     ebx,DWORD PTR [edi]
  4108f6:	cmp    bh,BYTE PTR [eax]
  4108f8:	(bad)  
  4108f9:	call   0xabfa:0xb945e1a1
  410900:	scas   eax,DWORD PTR es:[edi]
  410901:	pop    ds
  410902:	stc    
  410903:	dec    edi
  410904:	test   al,0x24
  410906:	and    bh,0x6f
  410909:	test   BYTE PTR [ecx],al
  41090b:	cli    
  41090c:	jnp    0x41095c
  41090e:	mov    al,ds:0x87f9aa04
  410913:	mov    al,ds:0x8328e65d
  410918:	xor    BYTE PTR [eax+ebp*8],ch
  41091b:	mov    ecx,0xf554405e
  410920:	sti    
  410921:	ins    BYTE PTR es:[edi],dx
  410922:	icebp  
  410923:	fidiv  WORD PTR [edi]
  410925:	shl    DWORD PTR [edi+ebx*8],1
  410928:	dec    edx
  410929:	push   ebp
  41092a:	mov    cl,BYTE PTR [ebx+0x86f3405]
  410930:	add    BYTE PTR [ebp+0x54],ah
  410933:	shl    DWORD PTR [edi+0x21076fb8],1
  410939:	sub    edx,DWORD PTR [edx-0x1d]
  41093c:	xchg   edi,eax
  41093d:	pop    eax
  41093e:	mov    dh,0x32
  410940:	icebp  
  410941:	xchg   ebp,eax
  410942:	add    edx,esi
  410944:	sar    bl,0xab
  410947:	dec    DWORD PTR [ebp-0x54]
  41094a:	sub    DWORD PTR [esi],edx
  41094c:	lods   al,BYTE PTR ds:[esi]
  41094d:	sbb    al,0xb3
  41094f:	jge    0x4109b3
  410951:	outs   dx,BYTE PTR ds:[esi]
  410952:	sbb    BYTE PTR [ebx],ch
  410954:	add    BYTE PTR [ebx],ah
  410956:	mov    eax,0x832850c7
  41095b:	sub    eax,0xc21dc51b
  410960:	mov    dl,0x9e
  410962:	mov    eax,0xa19f888b
  410967:	daa    
  410968:	enter  0x53f0,0xa3
  41096c:	sbb    BYTE PTR [edx],bl
  41096e:	or     BYTE PTR [ebx-0x7192f8a4],al
  410974:	es sbb al,0x59
  410977:	jbe    0x4109cf
  410979:	push   eax
  41097a:	clc    
  41097b:	cwde   
  41097c:	sar    BYTE PTR es:[ebp-0x45],1
  410980:	add    DWORD PTR [esi],ecx
  410982:	mov    ds:0xd642bbfc,al
  410987:	jnp    0x410935
  410989:	mov    edi,0x52448f9
  41098e:	pop    es
  41098f:	fwait
  410990:	xlat   BYTE PTR ds:[ebx]
  410991:	fadd   DWORD PTR ds:0x88aa29e0
  410997:	xchg   edx,eax
  410998:	imul   esp,DWORD PTR [esi],0x2dafa6f9
  41099e:	mov    eax,ds:0xe0e98be7
  4109a3:	jle    0x4109c4
  4109a5:	xchg   ecx,eax
  4109a6:	xchg   esi,eax
  4109a7:	out    0x82,al
  4109a9:	adc    al,0x96
  4109ab:	cmp    DWORD PTR [ebx+0x6b],0xffffffc3
  4109af:	xchg   esi,eax
  4109b0:	test   al,0xc9
  4109b2:	xor    BYTE PTR [edx-0x55],0x37
  4109b6:	imul   edi,DWORD PTR ds:0x89b0d933,0xd159ecfd
  4109c0:	add    DWORD PTR [ebp-0x38278e58],0xffffff89
  4109c7:	and    BYTE PTR [ecx+0x4a],bh
  4109ca:	loop   0x410975
  4109cc:	lahf   
  4109cd:	sbb    al,0x9b
  4109cf:	retf   
  4109d0:	and    ch,BYTE PTR [ecx+0x234a0a21]
  4109d6:	mov    es,WORD PTR ds:[esi]
  4109d9:	out    0xbd,eax
  4109db:	adc    al,0xc8
  4109dd:	stc    
  4109de:	inc    esi
  4109df:	gs add eax,0x40b06d33
  4109e5:	in     eax,0x6e
  4109e7:	mov    gs,WORD PTR [ecx+esi*2+0x71]
  4109eb:	(bad)  
  4109ec:	pop    edi
  4109ed:	and    eax,0x464a252d
  4109f2:	push   0x703a562a
  4109f7:	add    ah,cl
  4109f9:	jge    0x410a55
  4109fb:	stc    
  4109fc:	jb     0x410a36
  4109fe:	dec    edx
  4109ff:	xor    eax,0xdc5113a9
  410a04:	loopne 0x410a35
  410a06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a07:	mov    edi,DWORD PTR [ebx+eiz*4]
  410a0a:	push   ebx
  410a0b:	adc    al,0x6b
  410a0d:	sbb    ch,ah
  410a0f:	mov    dh,0xed
  410a11:	pop    ebp
  410a12:	push   ds
  410a13:	add    dl,dl
  410a15:	fdiv   QWORD PTR [ebx-0x58]
  410a18:	retf   0x8d23
  410a1b:	adc    eax,0x63e05bba
  410a20:	dec    ebp
  410a21:	inc    eax
  410a22:	scas   eax,DWORD PTR es:[edi]
  410a23:	pop    eax
  410a24:	(bad)  
  410a25:	ins    BYTE PTR es:[edi],dx
  410a26:	cs das 
  410a28:	fcmovnb st,st(4)
  410a2a:	inc    ebp
  410a2b:	cmp    eax,DWORD PTR [edi]
  410a2d:	inc    esi
  410a2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a2f:	std    
  410a30:	mov    ch,0xbe
  410a32:	outs   dx,BYTE PTR ds:[esi]
  410a33:	sub    DWORD PTR [edi+edx*1],0x7c
  410a37:	and    DWORD PTR [eax],edx
  410a39:	loopne 0x410a89
  410a3b:	push   cs
  410a3c:	cs cli 
  410a3e:	hlt    
  410a3f:	fsubr  st(4),st
  410a41:	add    eax,0x7de70f16
  410a46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a47:	enter  0x9915,0x91
  410a4b:	aas    
  410a4c:	mov    ecx,0x6f762eab
  410a51:	test   BYTE PTR [edi],dl
  410a53:	dec    ebx
  410a54:	xchg   DWORD PTR [eax],edx
  410a56:	call   0xede5:0x3d7dc5ef
  410a5d:	fst    st(7)
  410a5f:	dec    eax
  410a60:	push   0xffffffa9
  410a62:	and    BYTE PTR [edi-0x64a73099],cl
  410a68:	push   DWORD PTR [ecx+edi*1+0x52]
  410a6c:	adc    al,BYTE PTR ds:0xd7c0eba
  410a72:	push   edi
  410a73:	retf   
  410a74:	aas    
  410a75:	pop    ds
  410a76:	aam    0x4a
  410a78:	in     eax,0xf4
  410a7a:	xor    dl,BYTE PTR [ecx]
  410a7c:	pusha  
  410a7d:	imul   edx,DWORD PTR [ecx+0x7ec07f64],0xffffffac
  410a84:	jp     0x410a5a
  410a86:	arpl   WORD PTR [edx],cx
  410a88:	data16 add al,0x53
  410a8b:	pop    esp
  410a8c:	daa    
  410a8d:	inc    edx
  410a8e:	out    dx,eax
  410a8f:	sar    BYTE PTR [eax+0x12],1
  410a92:	pop    ebp
  410a93:	stos   DWORD PTR es:[edi],eax
  410a94:	xchg   ebx,eax
  410a95:	add    eax,0x24d2d87c
  410a9a:	dec    edi
  410a9b:	or     ebx,DWORD PTR [ebx]
  410a9d:	inc    edx
  410a9e:	dec    edx
  410a9f:	int    0x39
  410aa1:	xchg   esp,eax
  410aa2:	fstp   TBYTE PTR ds:0x13968128
  410aa8:	call   0xaf4a5b73
  410aad:	lock push ebp
  410aaf:	pop    eax
  410ab0:	adc    esp,DWORD PTR [ecx]
  410ab2:	xchg   ecx,eax
  410ab3:	loope  0x410b0a
  410ab5:	ss test eax,0x6159a60b
  410abb:	pushf  
  410abc:	hlt    
  410abd:	js     0x410af8
  410abf:	std    
  410ac0:	imul   esi,DWORD PTR [ebx-0x32],0x5d
  410ac4:	mov    ah,0x3f
  410ac6:	and    BYTE PTR [edi+0x5e207263],dh
  410acc:	bound  edi,QWORD PTR [esi]
  410ace:	or     ebp,0x684d1791
  410ad4:	outs   dx,DWORD PTR ds:[esi]
  410ad5:	mov    ds:0x55c58d7e,al
  410ada:	xchg   esi,eax
  410adb:	or     dh,bh
  410add:	mov    bl,0x41
  410adf:	shl    DWORD PTR [eax],0xaa
  410ae2:	pop    esi
  410ae3:	out    0xb9,eax
  410ae5:	dec    edi
  410ae6:	sub    DWORD PTR [ecx+0x6e],edx
  410ae9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410aea:	pop    ecx
  410aeb:	mov    ds:0xb6e37ff9,al
  410af0:	add    DWORD PTR [edx-0x3d5963a1],edi
  410af6:	push   esp
  410af7:	(bad)  
  410af8:	(bad)  
  410af9:	jnp    0x410ac3
  410afb:	ret    0x41c6
  410afe:	mov    bl,BYTE PTR [edi+0x6d]
  410b01:	das    
  410b02:	cmp    dl,BYTE PTR [esi+0x531bb762]
  410b08:	mov    esp,0xbf634e26
  410b0d:	in     eax,dx
  410b0e:	mov    cl,BYTE PTR [edi+ebp*1-0x2c1edf2]
  410b15:	pop    es
  410b16:	or     BYTE PTR [edx],bh
  410b18:	lea    edx,[esi+0x56]
  410b1b:	ret    
  410b1c:	pop    ss
  410b1d:	cmp    edi,DWORD PTR [edx]
  410b1f:	fidivr WORD PTR [ebp+0x3eeff5f2]
  410b25:	add    al,0xaf
  410b27:	push   ebp
  410b28:	or     eax,0xf83bc087
  410b2d:	sub    al,0x17
  410b2f:	inc    DWORD PTR [eax]
  410b31:	jmp    0x1251450e
  410b36:	and    esi,edi
  410b38:	xchg   esp,eax
  410b39:	test   eax,0xa1f414e2
  410b3e:	clc    
  410b3f:	mov    BYTE PTR [edi],bh
  410b41:	push   eax
  410b42:	mov    ds:0xf9666f6a,al
  410b47:	out    dx,eax
  410b48:	mov    dl,BYTE PTR [edi+0x6b41edd]
  410b4e:	or     eax,0x5017c365
  410b53:	push   cs
  410b54:	mov    ecx,0x89487792
  410b59:	popf   
  410b5a:	adc    edi,DWORD PTR [ebp+0x608818a6]
  410b60:	or     DWORD PTR [ebx-0x7f],eax
  410b63:	sub    ecx,ecx
  410b65:	psrld  mm6,QWORD PTR [edx]
  410b68:	mov    ah,BYTE PTR [ecx]
  410b6a:	pop    ebp
  410b6b:	xchg   ebp,eax
  410b6c:	lock sub edi,ecx
  410b6f:	sbb    BYTE PTR [esi-0x5d],al
  410b72:	jnp    0x410b7e
  410b74:	and    eax,ecx
  410b76:	pusha  
  410b77:	cmp    dl,BYTE PTR [ecx-0x4547bee]
  410b7d:	not    ebp
  410b7f:	and    cl,bl
  410b81:	add    bl,BYTE PTR [edi-0x8]
  410b84:	lock mov edx,0xfb97419c
  410b8a:	jae    0x410b2f
  410b8c:	aam    0x98
  410b8e:	push   esp
  410b8f:	inc    eax
  410b90:	rcr    ch,1
  410b92:	pusha  
  410b93:	and    BYTE PTR [ecx-0x7d3c3d15],dh
  410b99:	dec    eax
  410b9a:	pop    esi
  410b9b:	jmp    0xc4b0:0x3b9d5183
  410ba2:	mov    eax,0x2545f2dd
  410ba7:	jnp    0x410c20
  410ba9:	out    0x4b,al
  410bab:	sub    al,0x5
  410bad:	loop   0x410bc7
  410baf:	fcomp  QWORD PTR [ebx-0x624393a8]
  410bb5:	sbb    bh,BYTE PTR [esi+0x28]
  410bb8:	cmp    eax,0x6fba5364
  410bbd:	jne    0x410c1a
  410bbf:	push   eax
  410bc0:	scas   eax,DWORD PTR es:[edi]
  410bc1:	mov    ebp,0x7ad9e3a8
  410bc6:	out    dx,eax
  410bc7:	in     eax,0xbc
  410bc9:	mov    dl,0x76
  410bcb:	fwait
  410bcc:	jmp    0x410c3b
  410bce:	mov    esi,0xa2d0e818
  410bd3:	add    ah,BYTE PTR [ecx+edx*4+0x369e5578]
  410bda:	inc    ecx
  410bdb:	sub    bh,BYTE PTR [eax-0x439dd90a]
  410be1:	push   esp
  410be2:	xchg   ebp,eax
  410be3:	mov    ds:0x75cc2fbc,eax
  410be8:	jmp    0x7c9e:0x6cde687d
  410bef:	je     0x410c36
  410bf1:	mov    bh,0x88
  410bf3:	test   BYTE PTR ds:0xee1c7209,bl
  410bf9:	fs dec esi
  410bfb:	out    0xa6,eax
  410bfd:	sbb    WORD PTR ds:0xef4f4147,0x6f72
  410c06:	int3   
  410c07:	cmp    bl,al
  410c09:	mov    ah,0x2f
  410c0b:	cld    
  410c0c:	or     bl,BYTE PTR [ebx+0x21]
  410c0f:	not    DWORD PTR [ecx]
  410c11:	sbb    BYTE PTR [edx+0x5e9e8ea7],cl
  410c17:	inc    esi
  410c18:	jnp    0x410c68
  410c1a:	inc    esi
  410c1b:	mov    DWORD PTR [ecx],edi
  410c1d:	jecxz  0x410c8f
  410c1f:	pop    edi
  410c20:	mov    dh,0x85
  410c22:	into   
  410c23:	dec    ebx
  410c24:	in     al,dx
  410c25:	inc    ecx
  410c26:	inc    ecx
  410c27:	push   ebx
  410c28:	push   DWORD PTR [edx]
  410c2a:	das    
  410c2b:	scas   al,BYTE PTR es:[edi]
  410c2c:	xor    eax,0xeca9729f
  410c31:	lds    eax,FWORD PTR [eax+0x76]
  410c34:	or     BYTE PTR [ebx],0x6b
  410c37:	add    ebp,ecx
  410c39:	cmp    edi,DWORD PTR [edx]
  410c3b:	push   ecx
  410c3c:	mov    eax,ds:0x5888831e
  410c41:	dec    ebx
  410c42:	sbb    BYTE PTR [ebx+0x38],ah
  410c45:	sbb    DWORD PTR [ecx],ecx
  410c47:	and    edi,edx
  410c49:	stc    
  410c4a:	dec    ebp
  410c4b:	call   0x3099fd2e
  410c50:	les    ebp,FWORD PTR [esi+0x14e9b796]
  410c56:	push   0xffffffa8
  410c58:	inc    ecx
  410c59:	ds sbb eax,0xfd29822c
  410c5f:	mov    ah,0xd9
  410c61:	mov    ebx,DWORD PTR [esi-0x67]
  410c64:	jne    0x410c95
  410c66:	inc    edi
  410c67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c68:	fwait
  410c69:	adc    ebx,edi
  410c6b:	ins    BYTE PTR es:[edi],dx
  410c6c:	imul   BYTE PTR [ebp+0x5c0d3823]
  410c72:	test   BYTE PTR [ebx+eax*4+0x4b02c1ed],cl
  410c79:	jmp    0x741b5a2
  410c7e:	call   0xf3d1:0xadf3c24e
  410c85:	ret    0x61a2
  410c88:	sub    BYTE PTR [edi],bl
  410c8a:	ret    0x6354
  410c8d:	xchg   esp,eax
  410c8e:	xlat   BYTE PTR ds:[ebx]
  410c8f:	cwde   
  410c90:	out    0xb5,eax
  410c92:	fwait
  410c93:	aaa    
  410c94:	pop    ebx
  410c95:	outs   dx,BYTE PTR ds:[esi]
  410c96:	fidivr DWORD PTR [esi+edi*8]
  410c99:	mov    bl,0x8
  410c9b:	mov    ds:0x31e47d46,al
  410ca0:	mov    ds:0xb2db05af,eax
  410ca5:	push   eax
  410ca6:	xchg   esp,eax
  410ca7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ca8:	xchg   ebp,eax
  410ca9:	lds    edx,FWORD PTR [esi+edx*2-0x6c8e9058]
  410cb0:	std    
  410cb1:	lahf   
  410cb2:	xor    ch,bh
  410cb4:	mov    ds:0xee34cb20,eax
  410cb9:	out    0x7f,al
  410cbb:	jp     0x410c69
  410cbd:	ja     0x410ca7
  410cbf:	mov    al,0x97
  410cc1:	dec    eax
  410cc2:	cwde   
  410cc3:	popa   
  410cc4:	addr16 mov ebp,0x498b8c53
  410cca:	call   0x130b:0xc4deaaea
  410cd1:	adc    DWORD PTR [esp+ecx*2+0x26],ecx
  410cd5:	cdq    
  410cd6:	test   al,0x59
  410cd8:	int    0xf6
  410cda:	icebp  
  410cdb:	jle    0x410c70
  410cdd:	enter  0xc5cc,0x9c
  410ce1:	icebp  
  410ce2:	das    
  410ce3:	shl    DWORD PTR [esi],0x34
  410ce6:	cmc    
  410ce7:	call   0x9859eeb0
  410cec:	(bad)  
  410ced:	and    DWORD PTR [ebx-0x35],esp
  410cf0:	mov    eax,0xcd0bcd0d
  410cf5:	ror    BYTE PTR [ebp-0x25],cl
  410cf8:	rol    edx,cl
  410cfa:	daa    
  410cfb:	call   0x5e8b80a7
  410d00:	out    dx,al
  410d01:	stos   BYTE PTR es:[edi],al
  410d02:	fild   QWORD PTR [ebx]
  410d04:	pop    ecx
  410d05:	popf   
  410d06:	rol    BYTE PTR [ebx+0x562d75ad],cl
  410d0c:	iret   
  410d0d:	imul   esp,edx,0x18faa960
  410d13:	adc    esp,DWORD PTR [edx]
  410d15:	mov    ah,BYTE PTR [edi-0xa]
  410d18:	jbe    0x410d54
  410d1a:	loope  0x410d57
  410d1c:	pop    ds
  410d1d:	mov    edi,0x9f84360
  410d22:	test   BYTE PTR [edx+ecx*4],0xb2
  410d26:	fldlg2 
  410d28:	mov    ebp,DWORD PTR [ebx+eiz*1+0x5f]
  410d2c:	stc    
  410d2d:	repnz push ss
  410d2f:	shl    esp,1
  410d31:	cmp    BYTE PTR [ebp-0x550a33ff],dl
  410d37:	loope  0x410d5d
  410d39:	iret   
  410d3a:	mov    al,0xfd
  410d3c:	js     0x410d9d
  410d3e:	icebp  
  410d3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d40:	mov    DWORD PTR [edx+0x1e937925],eax
  410d46:	shl    BYTE PTR [eax+0x24],cl
  410d49:	aam    0xd1
  410d4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d4c:	das    
  410d4d:	shr    DWORD PTR [eax],cl
  410d4f:	fisub  WORD PTR [ebp+ebx*1-0x62]
  410d53:	in     eax,0x9c
  410d55:	fld    DWORD PTR [ebx]
  410d57:	je     0x410d0d
  410d59:	push   edx
  410d5a:	inc    esp
  410d5b:	pop    ds
  410d5c:	ret    0xf9e5
  410d5f:	pop    es
  410d60:	pop    eax
  410d61:	inc    ebx
  410d62:	loopne 0x410d45
  410d64:	(bad)  
  410d65:	xchg   ecx,eax
  410d66:	arpl   dx,ax
  410d68:	aas    
  410d69:	or     eax,0x8333eb4d
  410d6e:	ja     0x410d6e
  410d70:	xor    esp,esi
  410d72:	mov    dl,0x24
  410d74:	ret    0x54e7
  410d77:	nop
  410d78:	jl     0x410d6b
  410d7a:	jo     0x410df1
  410d7c:	loope  0x410d6b
  410d7e:	and    DWORD PTR [ebp-0x45fe931b],0x62
  410d85:	adc    ecx,eax
  410d87:	push   esp
  410d88:	mov    al,ds:0x1ce19ea3
  410d8d:	aas    
  410d8e:	or     al,0x64
  410d90:	popf   
  410d91:	sub    DWORD PTR [edi],ecx
  410d93:	repz jle 0x410d70
  410d96:	loop   0x410de3
  410d98:	push   es
  410d99:	adc    eax,0x6a13223b
  410d9e:	lods   al,BYTE PTR ds:[esi]
  410d9f:	out    dx,al
  410da0:	pop    ss
  410da1:	jl     0x410dce
  410da3:	into   
  410da4:	test   bl,ah
  410da6:	adc    BYTE PTR [ebx],al
  410da8:	aad    0x7b
  410daa:	mov    al,ds:0xe623ac2a
  410daf:	or     edx,DWORD PTR [edi]
  410db1:	rcl    BYTE PTR [edi-0x54],1
  410db4:	mov    ah,0xa3
  410db6:	ja     0x410d6c
  410db8:	mov    al,ds:0x48ac3a7b
  410dbd:	int    0xf7
  410dbf:	jo     0x410de4
  410dc1:	adc    ch,BYTE PTR [eax]
  410dc3:	ds pop ebp
  410dc5:	push   es
  410dc6:	add    DWORD PTR [eax],ebx
  410dc8:	inc    ebp
  410dc9:	pop    esi
  410dca:	pop    ecx
  410dcb:	mov    ch,0xdc
  410dcd:	imul   edx,DWORD PTR [eax+0x10],0xfdde3c4f
  410dd4:	sub    DWORD PTR [edx-0x46],eax
  410dd7:	add    cl,bh
  410dd9:	pop    eax
  410dda:	and    al,0x10
  410ddc:	out    0xaf,eax
  410dde:	test   al,0xba
  410de0:	stc    
  410de1:	jb     0x410d7d
  410de3:	dec    eax
  410de4:	or     edi,DWORD PTR [edi-0x23]
  410de7:	add    eax,edx
  410de9:	push   es
  410dea:	push   0xffffffc3
  410dec:	mov    ebx,0xcd86f3b3
  410df1:	or     BYTE PTR [edx+0x418af170],cl
  410df7:	sar    edx,cl
  410df9:	in     eax,0x4d
  410dfb:	jl     0x410d95
  410dfd:	retf   
  410dfe:	mov    edi,0x46f49a46
  410e03:	sbb    BYTE PTR fs:[edx],bh
  410e06:	imul   edi,DWORD PTR [ecx+0x18dfc956],0x7
  410e0d:	jmp    0xd7e3689b
  410e12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e13:	sar    edx,0xf1
  410e16:	add    ch,cl
  410e18:	fwait
  410e19:	dec    esi
  410e1a:	mov    esi,0xd396dfbc
  410e1f:	call   0x25a7:0x1117bc7b
  410e26:	into   
  410e27:	(bad)  
  410e28:	ins    DWORD PTR es:[edi],dx
  410e29:	dec    esp
  410e2a:	sbb    bl,bl
  410e2c:	mov    dl,0x41
  410e2e:	pop    ebp
  410e2f:	mov    ah,0x29
  410e31:	jo     0x410e23
  410e33:	add    DWORD PTR [esi-0x2b],eax
  410e36:	cmp    edi,DWORD PTR [edx-0x6d]
  410e39:	sar    ebx,1
  410e3b:	or     eax,0x90c2548e
  410e40:	je     0x410e60
  410e42:	outs   dx,BYTE PTR ds:[esi]
  410e43:	add    eax,0x4cf82fa4
  410e48:	inc    ebx
  410e49:	pop    ebx
  410e4a:	adc    esi,esi
  410e4c:	in     eax,dx
  410e4d:	adc    ch,bh
  410e4f:	add    BYTE PTR [edx+edx*4],ah
  410e52:	cmp    DWORD PTR [edx-0x14],eax
  410e55:	cs pop es
  410e57:	xlat   BYTE PTR ds:[ebx]
  410e58:	cmp    ecx,DWORD PTR [edx-0x540a5a67]
  410e5e:	imul   esp,ebx,0x2e
  410e61:	push   edx
  410e62:	lods   eax,DWORD PTR ds:[esi]
  410e63:	shl    DWORD PTR [ebx+0x50],0x8d
  410e67:	xchg   bl,dh
  410e69:	int    0xed
  410e6b:	sahf   
  410e6c:	scas   eax,DWORD PTR es:[edi]
  410e6d:	sub    BYTE PTR [esi-0x29],dh
  410e70:	pop    edi
  410e71:	ds loop 0x410e34
  410e74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e75:	shl    DWORD PTR [eax+0x18aade6e],cl
  410e7b:	jbe    0x410e7b
  410e7d:	aad    0x16
  410e7f:	dec    edx
  410e80:	or     bl,0xc1
  410e83:	mov    fs,ebx
  410e85:	pushf  
  410e86:	add    bl,bl
  410e88:	das    
  410e89:	dec    ebp
  410e8a:	jb     0x410ec8
  410e8c:	push   ebx
  410e8d:	retf   
  410e8e:	sbb    edx,ecx
  410e90:	cli    
  410e91:	jp     0x410e21
  410e93:	out    0xa4,al
  410e95:	add    esp,esi
  410e97:	push   ss
  410e98:	sub    ecx,DWORD PTR [ecx+0x7a30ffeb]
  410e9e:	xor    al,0x1e
  410ea0:	scas   eax,DWORD PTR es:[edi]
  410ea1:	scas   eax,DWORD PTR es:[edi]
  410ea2:	(bad)  [ebp+0x77]
  410ea5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ea6:	xchg   edi,eax
  410ea7:	push   ecx
  410ea8:	call   0x70adcdb0
  410ead:	pop    ecx
  410eae:	xlat   BYTE PTR ds:[ebx]
  410eaf:	ins    DWORD PTR es:[edi],dx
  410eb0:	push   0x4fd42cf5
  410eb5:	inc    eax
  410eb6:	adc    al,0x96
  410eb8:	(bad)  
  410eb9:	adc    BYTE PTR [ecx+0x3413d8dd],ch
  410ebf:	jo     0x410eae
  410ec1:	fsub   st,st(3)
  410ec3:	adc    al,0xc
  410ec5:	pop    edi
  410ec6:	aad    0x7e
  410ec8:	imul   edx,ebp,0xb241d994
  410ece:	xchg   edi,eax
  410ecf:	ret    
  410ed0:	test   eax,0x39e3d117
  410ed5:	or     BYTE PTR [eax],dh
  410ed7:	xor    ecx,eax
  410ed9:	xchg   ecx,eax
  410eda:	inc    ecx
  410edb:	repz loop 0x410e77
  410ede:	shl    DWORD PTR ds:0x9246c729,cl
  410ee4:	mov    WORD PTR [esp+ebx*2],?
  410ee7:	pop    edi
  410ee8:	into   
  410ee9:	cmc    
  410eea:	out    dx,eax
  410eeb:	lahf   
  410eec:	addr16 push 0x108f1972
  410ef2:	sbb    bh,BYTE PTR [edx]
  410ef4:	pop    edi
  410ef5:	loop   0x410f6f
  410ef7:	and    al,BYTE PTR [edx-0x2c]
  410efa:	push   ebx
  410efb:	adc    DWORD PTR [ecx],esp
  410efd:	mul    BYTE PTR [edx+0x61ef209e]
  410f03:	mov    ah,0x1f
  410f05:	loope  0x410ede
  410f07:	leave  
  410f08:	adc    eax,0x6e473178
  410f0d:	stos   DWORD PTR es:[edi],eax
  410f0e:	jle    0x410ef8
  410f10:	push   ss
  410f11:	jae    0x410f5d
  410f13:	dec    edx
  410f14:	inc    esp
  410f15:	sub    BYTE PTR [edi+0x5be32fd5],dh
  410f1b:	cli    
  410f1c:	dec    ebp
  410f1d:	fcom   QWORD PTR [eax+0x230469f9]
  410f23:	fwait
  410f24:	pop    ss
  410f25:	and    BYTE PTR [esi-0x7],al
  410f28:	ss dec ecx
  410f2a:	fstp   TBYTE PTR [edx+0x32108bcd]
  410f30:	js     0x410eb2
  410f32:	call   0x1e7bdffe
  410f37:	cmp    al,0x0
  410f3a:	sub    al,0xeb
  410f3c:	repz mov eax,ds:0x20af015c
  410f42:	jmp    0x410fbd
  410f44:	out    dx,eax
  410f45:	pop    esi
  410f46:	pop    es
  410f47:	cs dec esp
  410f49:	fs je  0x410f8d
  410f4c:	and    dl,bh
  410f4e:	in     eax,0xd3
  410f50:	neg    DWORD PTR [edx-0x58]
  410f53:	pop    edi
  410f54:	sub    BYTE PTR [ebp-0x3a],bl
  410f57:	and    DWORD PTR [edi],eax
  410f59:	xor    al,0xbe
  410f5b:	inc    esi
  410f5c:	sub    al,0x78
  410f5e:	fisub  WORD PTR [esi-0x3]
  410f61:	cwde   
  410f62:	xchg   ecx,eax
  410f63:	call   0xa1be:0x30ffc5db
  410f6a:	ds retf 0x87ff
  410f6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f6f:	sbb    al,0xdb
  410f71:	sub    dl,BYTE PTR ds:0x16646b53
  410f77:	jno    0x410f31
  410f79:	mov    esi,0x5d666a07
  410f7e:	loope  0x410f00
  410f80:	lds    ebp,FWORD PTR [ebx]
  410f82:	out    0xe0,al
  410f84:	push   esp
  410f85:	adc    eax,0xab1c6d64
  410f8a:	into   
  410f8b:	aam    0x48
  410f8d:	in     al,0x6a
  410f8f:	loop   0x410f42
  410f91:	fldenv [ecx]
  410f93:	mov    bl,BYTE PTR [eax]
  410f95:	add    ebp,eax
  410f97:	adc    BYTE PTR ds:0xa26e0b34,bl
  410f9d:	mov    eax,ds:0x10229946
  410fa2:	push   ds
  410fa3:	mov    ecx,0xc9ca7a20
  410fa8:	mov    ?,WORD PTR [eax+0x5d9af2]
  410fae:	sbb    esp,eax
  410fb0:	sub    BYTE PTR [edi-0x52fbcd58],0xaa
  410fb7:	sbb    esi,DWORD PTR [ebp-0x3c94ec8c]
  410fbd:	iret   
  410fbe:	push   0x51
  410fc0:	xchg   BYTE PTR [edx+0x56d8e531],bl
  410fc6:	stos   DWORD PTR es:[edi],eax
  410fc7:	call   0x367f:0x40de3c8e
  410fce:	jb     0x41101e
  410fd0:	adc    esp,0x3c87aa71
  410fd6:	sbb    al,0xae
  410fd8:	pop    ecx
  410fd9:	add    BYTE PTR [edi-0x6c],dl
  410fdc:	cmp    al,0x25
  410fde:	inc    ebp
  410fdf:	sub    bl,0x17
  410fe2:	std    
  410fe3:	int3   
  410fe4:	stc    
  410fe5:	adc    ah,al
  410fe7:	adc    ebx,DWORD PTR [ecx+0x59cd8c3f]
  410fed:	clc    
  410fee:	aam    0x46
  410ff0:	fidiv  WORD PTR [esi+edx*8+0x14]
  410ff4:	xor    esi,eax
  410ff6:	or     eax,0x65bc07b5
  410ffb:	ret    0xa82d
  410ffe:	mov    esp,0xc9c74bd5
  411003:	inc    cx
  411005:	xchg   ebx,eax
  411006:	fs push 0xf7003cc7
  41100c:	and    DWORD PTR [edi],esi
  41100e:	add    eax,0xe10e5758
  411013:	pop    ebx
  411015:	lds    edi,FWORD PTR [esi+eiz*2-0xc]
  411019:	xlat   BYTE PTR ds:[ebx]
  41101a:	adc    eax,ebx
  41101c:	jno    0x410fff
  41101e:	es add edi,edi
  411021:	push   0x16
  411023:	and    edx,edx
  411025:	push   ecx
  411026:	out    dx,al
  411027:	mov    eax,ds:0x9c554d97
  41102c:	push   esp
  41102d:	adc    eax,DWORD PTR [edx-0x29]
  411030:	mov    ah,0xab
  411032:	adc    ebp,DWORD PTR [ebx+ebp*8-0x39ee6130]
  411039:	sbb    DWORD PTR [edi+eiz*2+0x47f9c4a9],eax
  411040:	aam    0x23
  411042:	scas   eax,DWORD PTR es:[di]
  411044:	cmp    BYTE PTR [esp+eax*2],ch
  411047:	pop    ss
  411048:	dec    ecx
  411049:	jae    0x4110ab
  41104b:	loopne 0x411041
  41104d:	or     DWORD PTR [ebp+0xd],esp
  411050:	in     eax,0xbd
  411052:	jb     0x411045
  411054:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411055:	xchg   edi,eax
  411056:	popf   
  411057:	in     eax,dx
  411058:	sub    eax,0x1be91a
  41105d:	in     al,0x1d
  41105f:	xor    DWORD PTR [ebx-0x48],0x7ec9b617
  411066:	in     eax,dx
  411067:	add    eax,0x89c80aea
  41106c:	adc    eax,0x710f2fe2
  411071:	out    dx,al
  411072:	mov    eax,0x3ca539ae
  411077:	jl     0x410ffd
  411079:	sbb    BYTE PTR [eax],cl
  41107b:	pop    esi
  41107c:	sbb    al,0xe2
  41107e:	ja     0x41100a
  411080:	pop    ebp
  411081:	mov    edx,0x31af1c12
  411086:	xchg   esp,eax
  411087:	dec    esi
  411088:	jb     0x411066
  41108a:	pop    es
  41108b:	mov    esp,0xeff4380a
  411090:	popa   
  411091:	mul    DWORD PTR [ebx+0x57f2612a]
  411097:	loope  0x4110da
  411099:	sar    BYTE PTR [esi],1
  41109b:	sahf   
  41109c:	jge    0x411064
  41109e:	ror    DWORD PTR [ecx-0x1f],0xa2
  4110a2:	jne    0x411072
  4110a4:	test   DWORD PTR [esi-0x70b34708],edx
  4110aa:	xchg   esi,eax
  4110ab:	jecxz  0x4110f4
  4110ad:	int3   
  4110ae:	or     ecx,edx
  4110b0:	inc    edi
  4110b1:	ins    BYTE PTR es:[edi],dx
  4110b2:	dec    edi
  4110b3:	pop    ebp
  4110b4:	ficom  DWORD PTR [ebx-0x41]
  4110b7:	add    eax,0xd93a1e61
  4110bc:	stos   DWORD PTR es:[edi],eax
  4110bd:	adc    dl,dl
  4110bf:	(bad)  
  4110c0:	fadd   DWORD PTR ds:0x471fdc8c
  4110c6:	jmp    0xa405:0x695db5ef
  4110cd:	rol    ecx,1
  4110cf:	call   0xd584316d
  4110d4:	jmp    0x57c3:0x2068d520
  4110db:	popa   
  4110dc:	fwait
  4110dd:	in     al,dx
  4110de:	fist   WORD PTR [edi+0x59]
  4110e1:	sub    DWORD PTR [eax],ebx
  4110e3:	xchg   esp,eax
  4110e4:	in     eax,dx
  4110e5:	iret   
  4110e6:	xchg   ebx,eax
  4110e7:	daa    
  4110e8:	dec    esi
  4110e9:	sub    BYTE PTR [ebp-0x1f8c5a7f],cl
  4110ef:	or     eax,0x228d7ad9
  4110f4:	jle    0x411088
  4110f6:	into   
  4110f7:	dec    edi
  4110f8:	imul   ebx,DWORD PTR [ebp+0x57],0x2553a5a1
  4110ff:	xchg   ebp,eax
  411100:	fwait
  411101:	ins    BYTE PTR es:[edi],dx
  411102:	gs jge 0x411150
  411105:	aam    0x43
  411107:	sbb    eax,DWORD PTR [ecx+0x5fc77a6]
  41110d:	cwde   
  41110e:	fs ins DWORD PTR es:[edi],dx
  411110:	mov    ebp,0x61097448
  411115:	jne    0x411150
  411117:	and    eax,DWORD PTR [edi+0x26]
  41111a:	pusha  
  41111b:	inc    ecx
  41111c:	repz cmp BYTE PTR [eax+0x1007a52],dh
  411123:	or     al,0x43
  411125:	pop    ds
  411126:	leave  
  411127:	push   edi
  411128:	aaa    
  411129:	scas   al,BYTE PTR es:[edi]
  41112a:	imul   edx,DWORD PTR [eax],0xffffffd1
  41112d:	in     eax,0x73
  41112f:	(bad)  
  411130:	aas    
  411131:	cmp    DWORD PTR [ebx+0x31d53a7b],0xffffffdb
  411138:	fdiv   QWORD PTR [ecx-0xb321dce]
  41113e:	loop   0x411128
  411140:	xchg   edi,eax
  411141:	xor    eax,0xe12fd64a
  411146:	das    
  411147:	jb     0x411125
  411149:	fnstsw WORD PTR [ebp-0x40]
  41114c:	lods   al,BYTE PTR ds:[esi]
  41114d:	fstp   DWORD PTR [edi-0x7c5e1da]
  411153:	xor    eax,0x51613874
  411158:	push   ebx
  411159:	aam    0x3b
  41115b:	inc    ebp
  41115c:	test   BYTE PTR [esi+0x7c],bl
  41115f:	push   ecx
  411160:	inc    eax
  411161:	inc    ecx
  411162:	xchg   DWORD PTR [ebp+0x3a],ebx
  411165:	jbe    0x41118b
  411167:	dec    ebp
  411168:	stos   DWORD PTR es:[edi],eax
  411169:	rcl    DWORD PTR [edx+0x71],1
  41116c:	cdq    
  41116d:	sub    al,0x50
  41116f:	or     DWORD PTR [ecx-0xd],esp
  411172:	inc    eax
  411173:	call   0x183bb559
  411178:	add    al,0x2a
  41117a:	xor    esi,ebx
  41117c:	out    dx,al
  41117d:	sub    esi,DWORD PTR [eax+edi*4-0x92b7c80]
  411184:	jp     0x411174
  411186:	(bad)  
  411188:	icebp  
  411189:	pop    ss
  41118a:	pop    esp
  41118b:	aaa    
  41118c:	shl    DWORD PTR [ecx+ebp*1-0x23],0xec
  411191:	(bad)  
  411192:	in     al,0xf1
  411194:	push   0xebb25e03
  411199:	mov    dl,0xb3
  41119b:	js     0x411171
  41119d:	fdivr  st(7),st
  41119f:	sti    
  4111a0:	push   edi
  4111a1:	and    BYTE PTR [ebp-0x7d],bh
  4111a4:	inc    esp
  4111a5:	sbb    eax,0xebeb1d2d
  4111aa:	(bad)  
  4111ab:	fidivr DWORD PTR [eax+0x742e65ea]
  4111b1:	mov    al,ds:0x94cc1d96
  4111b6:	div    DWORD PTR [edx-0x57601fbb]
  4111bc:	lock test eax,0xc4ce4502
  4111c2:	cmc    
  4111c3:	loopne 0x4111c8
  4111c5:	push   ebx
  4111c6:	imul   eax,DWORD PTR [eax],0xfffffff6
  4111c9:	jnp    0x411170
  4111cb:	mov    es,WORD PTR [ebx+0x2]
  4111ce:	jp     0x41121d
  4111d0:	mov    edx,0xab886c8d
  4111d5:	loop   0x411211
  4111d7:	add    ah,cl
  4111d9:	mov    BYTE PTR [eax+0x43],ch
  4111dc:	or     DWORD PTR [ebx],eax
  4111de:	or     BYTE PTR [eax+0x1],ah
  4111e1:	xchg   ecx,eax
  4111e2:	xor    edi,DWORD PTR [esi+0x58]
  4111e5:	push   edx
  4111e6:	stos   BYTE PTR es:[edi],al
  4111e7:	inc    edi
  4111e8:	imul   ebp,DWORD PTR [eax+eiz*1+0x354c1093],0xf305967
  4111f3:	jne    0x41120b
  4111f5:	int3   
  4111f6:	and    bh,BYTE PTR [esi]
  4111f8:	hlt    
  4111f9:	cli    
  4111fa:	(bad)
  4111fd:	les    edi,FWORD PTR [esi]
  4111ff:	ret    
  411200:	jo     0x4111dd
  411202:	push   0xdf051e66
  411207:	inc    esi
  411208:	les    esi,FWORD PTR [ecx-0x3f]
  41120b:	push   ss
  41120c:	pop    ss
  41120d:	xor    eax,0xc8b96268
  411212:	push   esi
  411213:	pusha  
  411214:	xor    al,0x2d
  411216:	repnz mov ds:0x3a9f7be7,eax
  41121c:	and    BYTE PTR [edi-0x2a942a57],cl
  411222:	inc    edi
  411223:	cmc    
  411224:	(bad)  
  411225:	push   esi
  411226:	mov    bl,0xf7
  411228:	dec    esp
  411229:	xor    bh,BYTE PTR [eax]
  41122b:	fsub   QWORD PTR [edi]
  41122d:	and    eax,0x956f0d0b
  411232:	ds popa 
  411234:	aad    0x92
  411236:	jbe    0x411219
  411238:	popf   
  411239:	adc    BYTE PTR [edi-0x43140187],ch
  41123f:	and    ax,0xbed
  411243:	imul   esp,DWORD PTR [eax-0x59767bb6],0xfffffff1
  41124a:	push   0x5712cbf3
  41124f:	lahf   
  411250:	call   0x4a7bacd2
  411255:	xchg   esp,eax
  411256:	push   ds
  411257:	jb     0x4112c5
  411259:	sbb    DWORD PTR [edi-0x4f],eax
  41125c:	and    ch,bl
  41125e:	lock mov BYTE PTR [ecx*8+0x2d3d5d8b],0x23
  411267:	cdq    
  411268:	femms  
  41126a:	sub    eax,DWORD PTR [ecx]
  41126c:	shr    DWORD PTR [ebx],1
  41126e:	mov    dh,0xe5
  411270:	xchg   ebx,eax
  411271:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411272:	mov    edx,0xd7eb6985
  411277:	mov    cl,0xc3
  411279:	(bad)  
  41127a:	fsubr  QWORD PTR [eax]
  41127c:	inc    edx
  41127d:	fisttp WORD PTR [edi-0x421ca386]
  411283:	ret    0x2343
  411286:	xor    eax,0x948f6dcf
  41128b:	hlt    
  41128c:	(bad)  
  41128d:	mov    ecx,0x2f147f6d
  411292:	and    dh,BYTE PTR [edi]
  411294:	bound  ebx,QWORD PTR [esi+0x5fe89b77]
  41129a:	ficom  DWORD PTR [edx-0x47ea9543]
  4112a0:	sub    BYTE PTR [edx],0x7c
  4112a3:	and    BYTE PTR [esi+0x16b6d995],dl
  4112a9:	sbb    edx,DWORD PTR [esi]
  4112ab:	fnsave [edx-0x22]
  4112ae:	jbe    0x41127a
  4112b0:	fisubr DWORD PTR [ebp+0xf]
  4112b3:	adc    ah,0xfc
  4112b6:	repnz push ebx
  4112b8:	fisub  WORD PTR [ecx]
  4112ba:	(bad)
  4112bd:	repnz cli 
  4112bf:	es jl  0x411294
  4112c2:	jne    0x41124a
  4112c4:	loope  0x411284
  4112c6:	jnp    0x411298
  4112c8:	fadd   QWORD PTR [edi-0x4c9e5a69]
  4112ce:	das    
  4112cf:	jg     0x41127f
  4112d1:	push   esp
  4112d2:	lds    ebx,FWORD PTR [esi+0x983e4e0]
  4112d8:	cdq    
  4112d9:	dec    edx
  4112da:	cdq    
  4112db:	ja     0x4112b2
  4112dd:	cld    
  4112de:	imul   DWORD PTR [esi]
  4112e0:	ret    0x4b5
  4112e3:	cmp    BYTE PTR [edi-0x6ee36cde],ch
  4112e9:	add    ebp,DWORD PTR [edi-0x77]
  4112ec:	fimul  WORD PTR [edx+0x3a45d224]
  4112f2:	bound  ecx,QWORD PTR [eax]
  4112f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112f5:	test   BYTE PTR [edx-0x66],0x40
  4112f9:	idiv   DWORD PTR [ecx+0x53589440]
  4112ff:	mov    al,0x34
  411301:	jo     0x411382
  411303:	aaa    
  411304:	popf   
  411305:	push   esi
  411306:	adc    al,0xe0
  411308:	aam    0xce
  41130a:	jmp    0x9d4d:0x18ee5ec5
  411311:	adc    eax,0xde3d1e39
  411316:	(bad)  
  411317:	dec    esi
  411318:	dec    ebp
  411319:	sti    
  41131a:	sti    
  41131b:	int3   
  41131c:	scas   eax,DWORD PTR es:[edi]
  41131d:	mov    eax,ss:0x8ed6f452
  411323:	sub    al,BYTE PTR [edx-0x55]
  411326:	dec    esi
  411327:	cdq    
  411328:	jnp    0x411356
  41132a:	mov    ch,0x33
  41132c:	fucomp st(5)
  41132e:	(bad)  
  411330:	dec    edx
  411331:	or     BYTE PTR [eax+edx*8-0x23],bl
  411335:	(bad)  
  411336:	stc    
  411337:	out    0x96,al
  411339:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41133a:	xor    al,BYTE PTR [edi+0x2cb8251c]
  411340:	mov    WORD PTR [esi-0x2f],gs
  411343:	jae    0x41132f
  411345:	mov    ah,0x8
  411347:	mov    ecx,0xc68138e0
  41134c:	inc    esi
  41134d:	or     al,0x21
  41134f:	jge    0x411310
  411351:	dec    edx
  411352:	div    cl
  411354:	xchg   edx,eax
  411355:	data16 ins BYTE PTR es:[edi],dx
  411357:	or     DWORD PTR [ebp-0x5eb0d488],ebp
  41135d:	mov    esi,0xa7eb2d4e
  411362:	xchg   esp,eax
  411363:	inc    ebp
  411364:	cmp    BYTE PTR [esi-0x579aece4],dh
  41136a:	sub    DWORD PTR [edi-0x53c1f1ec],esp
  411370:	cmp    eax,DWORD PTR [edi]
  411372:	int3   
  411373:	inc    ebp
  411374:	gs jp  0x4113a6
  411377:	test   eax,0x64815ccc
  41137c:	lock mov al,0xb9
  41137f:	popa   
  411380:	cmp    dl,BYTE PTR [ecx-0x2b]
  411383:	pop    esp
  411384:	ret    0xdd00
  411387:	push   eax
  411388:	and    cl,0xff
  41138b:	iret   
  41138c:	sbb    ebx,DWORD PTR [esi+ebx*8]
  41138f:	xchg   edx,eax
  411390:	shl    BYTE PTR [ebp+0x56],1
  411393:	out    0xda,eax
  411395:	in     eax,0x62
  411397:	push   cs
  411398:	sbb    esp,ecx
  41139a:	xchg   BYTE PTR [ebx-0x3f],dl
  41139d:	inc    ebp
  41139e:	es or  al,0x7e
  4113a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113a2:	push   0x6849d4d3
  4113a7:	xor    BYTE PTR [esi+0x2],ah
  4113aa:	and    DWORD PTR [esi-0xc],edx
  4113ad:	cwde   
  4113ae:	and    esp,DWORD PTR [eax-0x51]
  4113b1:	add    edi,DWORD PTR [edi+0x20]
  4113b4:	(bad)  
  4113b5:	je     0x411391
  4113b7:	ins    BYTE PTR es:[edi],dx
  4113b8:	adc    DWORD PTR [edx-0x4f160776],ecx
  4113be:	jge    0x41142e
  4113c0:	shl    ah,1
  4113c2:	push   ecx
  4113c3:	pop    edi
  4113c4:	fs dec edi
  4113c6:	(bad)  
  4113c7:	fidiv  DWORD PTR [ebp-0x3e]
  4113ca:	and    BYTE PTR [edi-0x38],bh
  4113cd:	mov    ah,0x1
  4113cf:	xor    BYTE PTR [ebx+0x6b],al
  4113d2:	mov    es,esp
  4113d4:	es int3 
  4113d6:	adc    BYTE PTR [ecx],0xca
  4113d9:	jnp    0x411453
  4113db:	adc    ebp,edi
  4113dd:	pusha  
  4113de:	ins    DWORD PTR es:[edi],dx
  4113df:	jp     0x4113b9
  4113e1:	test   cl,dl
  4113e3:	out    0xa4,al
  4113e5:	lods   eax,DWORD PTR ds:[esi]
  4113e6:	adc    ecx,ebp
  4113e8:	inc    ecx
  4113e9:	inc    edx
  4113ea:	icebp  
  4113eb:	aad    0x40
  4113ed:	(bad)  
  4113ee:	shl    DWORD PTR [edx+0x5e09bad3],1
  4113f4:	sbb    eax,ecx
  4113f6:	test   ebp,esp
  4113f8:	arpl   WORD PTR [edx],dx
  4113fa:	xlat   BYTE PTR ds:[ebx]
  4113fb:	stos   BYTE PTR es:[edi],al
  4113fc:	inc    esi
  4113fd:	and    BYTE PTR [esi+0x4d0f24fe],dh
  411403:	xchg   DWORD PTR ds:0x84e81961,ebp
  411409:	scas   eax,DWORD PTR es:[edi]
  41140a:	jl     0x41142a
  41140c:	push   es
  41140d:	inc    esi
  41140e:	mov    eax,ds:0x70aeedb7
  411413:	mov    al,ds:0x6f269ba0
  411418:	and    al,0xa5
  41141a:	shl    al,1
  41141c:	retf   
  41141d:	ins    DWORD PTR es:[edi],dx
  41141e:	fndisi(8087 only) 
  411420:	bound  ebx,QWORD PTR [ebx+0x57abe11f]
  411426:	data16 and al,0x41
  411429:	mov    edi,0x6f9f23a2
  41142e:	call   0x9ac2c32f
  411433:	adc    ah,BYTE PTR [edx+0x9877b46]
  411439:	fs cmc 
  41143b:	dec    ecx
  41143c:	xchg   BYTE PTR [ebp-0x20],ch
  41143f:	jbe    0x411442
  411441:	shl    esp,0x93
  411444:	(bad)  
  411445:	es not esp
  411448:	dec    edx
  411449:	mov    DWORD PTR ds:0xefdb3779,eax
  41144f:	aaa    
  411450:	adc    dl,BYTE PTR [edx+0x542794f1]
  411456:	jmp    0x411425
  411458:	push   esi
  411459:	in     ax,dx
  41145b:	in     al,dx
  41145c:	retf   0x197d
  41145f:	lock and ebp,DWORD PTR [bp+si-0x7de7]
  411465:	jae    0x4114bd
  411467:	sbb    esi,ebx
  411469:	and    edi,esi
  41146b:	sbb    eax,0x3a083ff
  411470:	pop    es
  411471:	test   al,0x20
  411473:	push   ecx
  411474:	cwde   
  411475:	loopne 0x41140f
  411477:	mov    cs,esi
  411479:	mov    edi,0x206ea51c
  41147e:	xor    bl,BYTE PTR [esi+0x7e]
  411481:	and    ah,ah
  411483:	rcl    DWORD PTR [ebx],0x61
  411486:	mov    edx,0x85751c88
  41148b:	(bad)  
  41148c:	xor    DWORD PTR [edi+0x6b8f223],ebx
  411492:	popf   
  411493:	pop    esi
  411494:	test   BYTE PTR [ecx-0x6b],0x2a
  411498:	sbb    al,0xe0
  41149a:	(bad)  
  41149b:	mov    eax,0x863fa725
  4114a0:	test   eax,0x29c3441b
  4114a5:	(bad)  [edi+0x53]
  4114a8:	das    
  4114a9:	adc    cl,BYTE PTR [ebx+0x7d744733]
  4114af:	int3   
  4114b0:	ret    
  4114b1:	nop
  4114b2:	adc    DWORD PTR [ebp+0x3c],0x2d
  4114b6:	mov    ch,0xe8
  4114b8:	nop
  4114b9:	adc    ecx,DWORD PTR [ebx]
  4114bb:	and    dl,BYTE PTR [edi+0x63]
  4114be:	inc    dl
  4114c0:	push   0x5990eafe
  4114c5:	gs jne 0x411545
  4114c8:	call   0x4298:0x36d2371f
  4114cf:	pop    esp
  4114d0:	pop    edx
  4114d1:	push   ss
  4114d2:	cld    
  4114d3:	mov    al,ds:0xd5427989
  4114d8:	ret    0x8552
  4114db:	push   ebp
  4114dc:	cwde   
  4114dd:	shl    ch,cl
  4114df:	lods   eax,DWORD PTR ds:[esi]
  4114e0:	ds and ecx,eax
  4114e3:	jmp    0xa5a9:0x6e12ba91
  4114ea:	cld    
  4114eb:	cli    
  4114ec:	arpl   WORD PTR [esp+ebx*1-0x67],sp
  4114f0:	push   ebp
  4114f1:	sbb    dl,BYTE PTR [esp+esi*1-0x61671867]
  4114f8:	(bad)  
  4114f9:	jns    0x4114c7
  4114fb:	loop   0x411493
  4114fd:	and    BYTE PTR [esi-0x4],al
  411500:	int    0x40
  411502:	inc    ebp
  411503:	loope  0x4114cc
  411505:	cli    
  411506:	mov    al,ds:0x1ccbd80
  41150b:	mov    eax,ss:0xd11ab6eb
  411511:	pop    eax
  411512:	mov    BYTE PTR [ecx+0x335edec4],0x7a
  411519:	test   DWORD PTR [ecx],0xd7fba1bd
  41151f:	out    dx,al
  411520:	inc    edx
  411521:	and    al,0x1e
  411523:	retf   0x2904
  411526:	dec    esi
  411527:	fs mov dl,0xc
  41152a:	ins    DWORD PTR es:[edi],dx
  41152b:	jno    0x41157e
  41152d:	fidivr DWORD PTR [ecx-0x522e0dff]
  411533:	hlt    
  411534:	ror    BYTE PTR [eax-0x6a],cl
  411537:	mov    fs:0x2bfbcbd5,eax
  41153d:	adc    DWORD PTR [ecx-0x73bfbd75],0xffffffc1
  411544:	xchg   ebp,eax
  411545:	aad    0x7e
  411547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411548:	push   esp
  411549:	xor    dx,WORD PTR [edi-0x6]
  41154d:	inc    esp
  41154e:	adc    edx,DWORD PTR [edi-0x70]
  411551:	in     eax,dx
  411552:	mov    WORD PTR [ecx+ebx*4],cs
  411555:	mov    DWORD PTR [ebx-0x25f664a8],edx
  41155b:	push   ds
  41155c:	pop    ecx
  41155d:	jmp    DWORD PTR [esi+0x1347ad8a]
  411563:	lods   al,BYTE PTR ds:[esi]
  411564:	jp     0x4115d3
  411566:	cmp    ebx,DWORD PTR ds:0x3ac5784c
  41156c:	xor    DWORD PTR [edx+0x77],ebp
  41156f:	xor    ah,0xfd
  411572:	aad    0x23
  411574:	pop    ecx
  411575:	push   edx
  411576:	ret    0x90f4
  411579:	nop
  41157a:	ss hlt 
  41157c:	es int3 
  41157e:	inc    edx
  41157f:	mov    edi,0xfc178a0e
  411584:	fnstsw WORD PTR [eax]
  411586:	lea    eax,[edx+0x43]
  411589:	jnp    0x4115fc
  41158b:	in     al,0x77
  41158d:	imul   eax,DWORD PTR [edi-0x7c],0xfd1e7af
  411594:	adc    ebp,DWORD PTR [ebx+0x1e398f23]
  41159a:	inc    edi
  41159b:	fstp   DWORD PTR [edi-0x4d]
  41159e:	add    bh,BYTE PTR [edi]
  4115a0:	xlat   BYTE PTR ds:[ebx]
  4115a1:	ins    BYTE PTR es:[edi],dx
  4115a2:	jge    0x411559
  4115a4:	dec    eax
  4115a5:	mov    cl,0xa0
  4115a7:	jbe    0x41158d
  4115a9:	cli    
  4115aa:	jmp    0x411541
  4115ac:	mov    cs,WORD PTR [esi-0x2a]
  4115af:	mov    al,ds:0x7688e9f0
  4115b4:	mov    esp,edx
  4115b6:	hlt    
  4115b7:	dec    ebp
  4115b8:	pop    edx
  4115b9:	jb     0x41156b
  4115bb:	jge    0x4115cf
  4115bd:	shr    DWORD PTR [ebx-0x3f],cl
  4115c0:	mov    esp,DWORD PTR [ebx-0x2221e98]
  4115c6:	ss push esi
  4115c8:	lds    edi,FWORD PTR [esi+0x49]
  4115cb:	sub    BYTE PTR [edx],bh
  4115cd:	adc    bl,BYTE PTR [esi-0x1540c085]
  4115d3:	fsub   DWORD PTR [edi]
  4115d5:	fs add eax,0x46e75fc5
  4115db:	jge    0x4115a9
  4115dd:	adc    dl,BYTE PTR ds:0x778ee538
  4115e3:	mov    ah,0x5
  4115e5:	mov    ds:0xd61f27bc,al
  4115ea:	aad    0x9
  4115ec:	adc    BYTE PTR [edi],ah
  4115ee:	pop    edi
  4115ef:	(bad)  
  4115f0:	fld    TBYTE PTR [ebx-0x38254fd7]
  4115f6:	mov    eax,ds:0x2d9e07d0
  4115fb:	sub    al,0xab
  4115fd:	neg    DWORD PTR [esi+edx*2+0x46e4dc15]
  411604:	aam    0x7b
  411606:	jmp    0x9ea9:0x4826c6b1
  41160d:	dec    edi
  41160e:	jg     0x411642
  411610:	sar    bl,cl
  411612:	pop    ebx
  411613:	sbb    DWORD PTR [esi],esi
  411615:	repz push cs
  411617:	or     eax,0x66200c7d
  41161c:	sub    DWORD PTR ds:0x7bb4a5df,ecx
  411622:	mov    edi,0x6edcf362
  411627:	dec    edi
  411628:	ja     0x411672
  41162a:	cdq    
  41162b:	adc    eax,DWORD PTR [edi-0x9]
  41162e:	ins    DWORD PTR es:[edi],dx
  41162f:	rol    DWORD PTR [ecx],0x48
  411632:	jl     0x41160d
  411634:	out    0x90,eax
  411636:	ret    0x337c
  411639:	stos   DWORD PTR es:[edi],eax
  41163a:	cwde   
  41163b:	push   esp
  41163c:	sbb    DWORD PTR [eax-0x23bfaa98],eax
  411642:	mov    WORD PTR [edi+0x413ef230],?
  411648:	jae    0x411647
  41164a:	aaa    
  41164b:	ins    DWORD PTR es:[edi],dx
  41164c:	sub    esp,DWORD PTR [ebx-0x225b9f60]
  411652:	fs aad 0xbe
  411655:	sbb    ebp,ebx
  411657:	jp     0x411692
  411659:	adc    edx,DWORD PTR [ebp+0x492eba18]
  41165f:	pop    edi
  411660:	sub    eax,0x4a8af6d5
  411665:	xchg   DWORD PTR [ecx],esi
  411667:	das    
  411668:	pop    edi
  411669:	fwait
  41166a:	(bad)  
  41166b:	jp     0x4116a1
  41166d:	mov    eax,ds:0xa52cdc3b
  411672:	jb     0x41169f
  411674:	mov    al,ds:0x51e40aec
  411679:	push   0x15129915
  41167e:	jne    0x411641
  411680:	popa   
  411681:	outs   dx,BYTE PTR ds:[esi]
  411682:	add    cl,BYTE PTR ds:0xaa675ace
  411688:	inc    edx
  411689:	add    BYTE PTR [edx],bl
  41168b:	sbb    al,0x7e
  41168d:	or     edx,DWORD PTR ds:[ebp+0x7f05e824]
  411694:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411695:	nop
  411696:	mov    dh,0xd0
  411698:	lahf   
  411699:	mov    ch,0x50
  41169b:	ss pop es
  41169d:	shr    BYTE PTR [ecx+0x1b],1
  4116a0:	cmp    ecx,DWORD PTR [eax-0xcd65174]
  4116a6:	test   DWORD PTR [edi+0x1e],ebp
  4116a9:	jmp    0x8009f542
  4116ae:	inc    esi
  4116af:	jnp    0x411668
  4116b1:	xor    BYTE PTR [eax+0x1fe39abd],ch
  4116b7:	xor    esp,DWORD PTR [esi-0x4d6a27c4]
  4116bd:	fisttp WORD PTR [ebp-0x7fe72a74]
  4116c3:	sub    eax,0x274e6447
  4116c8:	adc    al,0x58
  4116ca:	(bad)  
  4116cb:	fisttp DWORD PTR [edx]
  4116cd:	pop    es
  4116ce:	sub    DWORD PTR [esi+ebx*2],esi
  4116d1:	push   ecx
  4116d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116d3:	cmc    
  4116d4:	dec    eax
  4116d5:	mov    edx,0xa57f445c
  4116da:	shl    BYTE PTR [ecx+0x56e7d1f8],0xb3
  4116e1:	fwait
  4116e2:	push   ss
  4116e3:	xchg   dh,cl
  4116e5:	int3   
  4116e6:	pusha  
  4116e7:	aas    
  4116e8:	xor    BYTE PTR [esi-0x3a],ah
  4116eb:	add    bl,BYTE PTR [edi+0x38]
  4116ee:	xor    eax,0x5e61ad51
  4116f3:	mov    bh,bh
  4116f5:	adc    cl,dl
  4116f7:	jecxz  0x411693
  4116f9:	fist   WORD PTR [esi+0x41111bff]
  4116ff:	inc    ecx
  411700:	jae    0x411768
  411702:	xor    eax,0x8c6bb8e9
  411707:	scas   al,BYTE PTR es:[edi]
  411708:	or     BYTE PTR [ebx],0x21
  41170b:	adc    bh,BYTE PTR [edx]
  41170d:	push   0xf765d4f4
  411712:	sub    al,0xa4
  411714:	addr16 pushf 
  411716:	stc    
  411717:	jne    0x4116bd
  411719:	imul   esp,DWORD PTR [edi],0x79e10a4c
  41171f:	jmp    ebx
  411721:	cmp    DWORD PTR [esi-0x5d08eb4f],0xb41b022d
  41172b:	jge    0x411797
  41172d:	sahf   
  41172e:	fst    DWORD PTR [ecx+0x3d03a733]
  411734:	jne    0x4117b1
  411736:	mov    al,0x2
  411738:	clc    
  411739:	mov    ?,ebp
  41173b:	mov    WORD PTR [ebx+edi*1+0xdde165d],?
  411742:	xor    eax,0xc269bbc
  411747:	sar    DWORD PTR [esi],0xfd
  41174a:	add    cl,BYTE PTR [edx]
  41174c:	ja     0x41172c
  41174e:	loop   0x4117cb
  411750:	loope  0x411745
  411752:	jle    0x4117bf
  411754:	mov    edi,eax
  411756:	(bad)  
  411757:	cld    
  411758:	dec    edi
  411759:	cli    
  41175a:	loope  0x411717
  41175c:	push   ss
  41175d:	aad    0x2e
  41175f:	imul   edi,DWORD PTR [ecx+0x7],0x56
  411763:	addr16 ret 
  411765:	inc    DWORD PTR [esi]
  411767:	sub    dl,BYTE PTR [ebp-0x8c08402]
  41176d:	pop    ebp
  41176e:	in     eax,0xb
  411770:	fwait
  411771:	mov    cl,cl
  411773:	or     al,0x2d
  411775:	int3   
  411776:	cmp    BYTE PTR [ebp-0x3296d335],bl
  41177c:	out    dx,al
  41177d:	mov    al,ds:0x27494541
  411782:	mov    esp,0x3b39dcb7
  411787:	(bad)  
  411789:	mov    edi,0x160bb242
  41178e:	aas    
  41178f:	ret    0xf5ad
  411792:	add    eax,0xb9493ad5
  411797:	aas    
  411798:	enter  0x8bf9,0x80
  41179c:	xchg   ecx,eax
  41179d:	jbe    0x411775
  41179f:	sub    dh,BYTE PTR [esi]
  4117a1:	cmp    DWORD PTR [ebp-0x3838511a],0x18
  4117a8:	mov    esp,0xb3b7ab7a
  4117ad:	ror    esi,1
  4117af:	add    eax,0x2dd6904
  4117b4:	add    al,0x8
  4117b6:	test   BYTE PTR [ebp+0x7a],al
  4117b9:	fsubr  st,st(5)
  4117bb:	adc    DWORD PTR [ecx-0x109cbaa4],eax
  4117c1:	adc    edi,DWORD PTR [ecx+ebx*4]
  4117c4:	jle    0x4117ec
  4117c6:	ror    BYTE PTR [esi],1
  4117c8:	mov    al,0xd3
  4117ca:	jae    0x411758
  4117cc:	cs in  al,dx
  4117ce:	aaa    
  4117cf:	dec    edi
  4117d0:	loopne 0x411824
  4117d2:	sbb    cl,dh
  4117d4:	cmp    ah,0xf0
  4117d7:	(bad)  
  4117d8:	and    edi,eax
  4117da:	pop    edi
  4117db:	(bad)  
  4117dc:	bound  esi,QWORD PTR [edi]
  4117de:	loope  0x4117eb
  4117e0:	dec    eax
  4117e1:	sub    DWORD PTR [ebx-0x38f119fd],0x66a4bcab
  4117eb:	xchg   ebp,eax
  4117ec:	push   ecx
  4117ed:	stos   DWORD PTR es:[edi],eax
  4117ee:	in     al,0xc7
  4117f0:	xchg   BYTE PTR [ebp-0x1a785ce5],bl
  4117f6:	retfw  
  4117f8:	sub    eax,0x3297d916
  4117fd:	mov    edx,0xcc202187
  411802:	mov    edi,0x1de0a5bb
  411807:	dec    edi
  411808:	test   al,0xef
  41180a:	sti    
  41180b:	sub    BYTE PTR [ebx-0x49],cl
  41180e:	pop    edi
  41180f:	mov    dl,0xe5
  411811:	lds    esi,FWORD PTR [ecx-0x57]
  411814:	xchg   DWORD PTR [edx+0x661ee6f],eax
  41181a:	cmp    DWORD PTR ds:0xedec073a,edi
  411820:	es clc 
  411822:	pusha  
  411823:	xchg   edi,eax
  411824:	aas    
  411825:	mov    eax,ds:0x6657f9c5
  41182a:	test   DWORD PTR [ebx-0x2bfba045],edi
  411830:	dec    ecx
  411831:	xor    al,0x41
  411833:	pop    ecx
  411834:	ret    0xb285
  411837:	loope  0x411813
  411839:	ja     0x4118b9
  41183b:	add    BYTE PTR [ecx-0x383000de],0x9d
  411842:	jg     0x411800
  411844:	or     dl,bl
  411846:	add    DWORD PTR [ebp-0x5ec235c7],ebp
  41184c:	sbb    BYTE PTR ds:0xac390be0,al
  411852:	stc    
  411853:	mov    esp,DWORD PTR [edx+0x7a]
  411856:	mov    ecx,0xd519a89f
  41185b:	test   eax,0xf1b51be7
  411860:	mov    ch,0xf9
  411863:	loope  0x411868
  411865:	xchg   edx,eax
  411866:	sbb    DWORD PTR [edi+ebx*4],esi
  411869:	adc    DWORD PTR [edi],edx
  41186b:	jmp    0x411828
  41186d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41186e:	mov    bh,0xb5
  411870:	or     al,0x77
  411872:	sbb    BYTE PTR [edi+0x4df6d78f],0xb1
  411879:	lods   eax,DWORD PTR ds:[esi]
  41187a:	fimul  DWORD PTR [edi+ebp*1+0x3037bcb6]
  411881:	pop    ebp
  411882:	cs and eax,0x8756e330
  411888:	arpl   ax,ax
  41188a:	data16 mov al,BYTE PTR [esi+edx*8-0x5ec9eefe]
  411892:	jne    0x4118e0
  411894:	(bad)  
  411896:	fist   WORD PTR [edi+0x5c9f428a]
  41189c:	xchg   edi,eax
  41189d:	sub    eax,DWORD PTR [esi-0x60]
  4118a0:	int3   
  4118a1:	shl    BYTE PTR [ecx],0x90
  4118a4:	xor    BYTE PTR [edi+eiz*1],ah
  4118a7:	add    eax,edx
  4118a9:	inc    ecx
  4118aa:	pop    edi
  4118ab:	dec    ebx
  4118ac:	mov    edi,0xee340e8a
  4118b1:	and    eax,0x3bd9eb0c
  4118b6:	xor    al,0x25
  4118b8:	out    0x85,eax
  4118ba:	das    
  4118bb:	mov    dh,0x75
  4118bd:	int    0x7d
  4118bf:	xchg   ebp,eax
  4118c0:	sbb    esp,DWORD PTR [edi+0x63]
  4118c3:	jnp    0x411914
  4118c5:	jne    0x4118b8
  4118c7:	jp     0x4118e2
  4118c9:	cmp    ah,BYTE PTR [esi-0x5d]
  4118cc:	inc    ecx
  4118cd:	rcl    DWORD PTR [eax],0x6b
  4118d0:	push   ecx
  4118d1:	dec    edx
  4118d2:	test   BYTE PTR [ebx+0x4f],bl
  4118d5:	inc    edi
  4118d6:	test   ah,dh
  4118d8:	and    al,0x12
  4118da:	fs pop ebx
  4118dc:	(bad)  
  4118dd:	pop    ecx
  4118de:	stos   BYTE PTR es:[edi],al
  4118df:	dec    edi
  4118e0:	mov    edi,0xafdc4ca1
  4118e5:	int3   
  4118e6:	jle    0x41190f
  4118e8:	jae    0x41193b
  4118ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118eb:	sub    DWORD PTR [eax+0x78],eax
  4118ee:	popa   
  4118ef:	fmulp  st(2),st
  4118f1:	adc    DWORD PTR [esi-0x5e],eax
  4118f4:	sub    al,0xae
  4118f6:	push   ss
  4118f7:	jb     0x411965
  4118f9:	or     ecx,DWORD PTR [esi-0xbaae7ea]
  4118ff:	in     eax,0xa3
  411901:	ins    DWORD PTR es:[edi],dx
  411902:	jbe    0x41194c
  411904:	sar    DWORD PTR [ebx-0x40],1
  411907:	loop   0x41189f
  411909:	adc    BYTE PTR [ebx-0x3],bl
  41190c:	ucomiss xmm2,DWORD PTR [ebx+0x1e]
  411910:	in     al,0x54
  411912:	fs scas eax,DWORD PTR es:[edi]
  411914:	mov    esi,?
  411916:	(bad)  
  411917:	loope  0x4118ac
  411919:	stos   DWORD PTR es:[edi],eax
  41191a:	pop    edx
  41191b:	inc    edi
  41191c:	cmp    ah,BYTE PTR [ebx-0x40]
  41191f:	or     al,0xfc
  411921:	mov    dl,0xb
  411923:	push   esp
  411924:	es sti 
  411926:	mov    ebx,DWORD PTR [ebx]
  411928:	inc    edx
  411929:	dec    esp
  41192a:	loope  0x4118fc
  41192c:	arpl   ax,bp
  41192e:	pop    es
  41192f:	fst    DWORD PTR [ebp+0xed06411]
  411935:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411936:	loopne 0x411986
  411938:	jmp    0x4119b7
  41193a:	sbb    eax,eax
  41193c:	or     BYTE PTR [ebx+0x26],dh
  41193f:	dec    ebx
  411940:	fsub   DWORD PTR [ecx]
  411942:	xor    edx,ecx
  411944:	sbb    ah,BYTE PTR [eax+0x288c7176]
  41194a:	dec    ebx
  41194b:	ins    BYTE PTR es:[edi],dx
  41194c:	mov    ecx,0x70614e75
  411951:	adc    al,0x7
  411954:	mov    eax,0x320416c0
  411959:	int    0xbc
  41195b:	mov    dh,ah
  41195d:	mov    dh,0xa0
  41195f:	add    dh,BYTE PTR [ebx+0x43]
  411962:	cmp    ebx,ebx
  411964:	jae    0x41190c
  411966:	dec    esp
  411967:	adc    esp,eax
  411969:	and    DWORD PTR [bp+di-0x2c],edx
  41196d:	retf   0xf0e8
  411970:	push   esi
  411971:	int    0x0
  411973:	or     edi,DWORD PTR fs:[si+0x5c]
  411978:	(bad)  
  411979:	adc    BYTE PTR [edi-0x79a82b70],0xcd
  411980:	mov    ds:0xa992b664,eax
  411985:	cmp    DWORD PTR [esi+0xb],ecx
  411988:	pop    ebp
  411989:	dec    edx
  41198a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41198b:	jae    0x41194b
  41198d:	outs   dx,BYTE PTR ds:[esi]
  41198e:	loope  0x411a09
  411990:	and    DWORD PTR [ebx-0x342d12c2],esi
  411996:	fwait
  411997:	dec    esp
  411998:	outs   dx,DWORD PTR ds:[esi]
  411999:	popf   
  41199a:	cmp    BYTE PTR [edx-0x6f],0x19
  41199e:	test   DWORD PTR [ecx-0x343e4f5e],ecx
  4119a4:	sti    
  4119a5:	mov    DWORD PTR [edx+0x4d0cbd43],esp
  4119ab:	shl    BYTE PTR [ecx+0x51ed2f69],1
  4119b1:	jbe    0x411a0b
  4119b3:	fcomp  QWORD PTR [ebp+ebp*8+0x7]
  4119b7:	pop    ebx
  4119b8:	je     0x4119f4
  4119ba:	clc    
  4119bb:	sbb    eax,0x93177f95
  4119c0:	xchg   BYTE PTR [ecx],dl
  4119c2:	xor    ebp,esp
  4119c4:	lods   eax,DWORD PTR ds:[esi]
  4119c5:	jb     0x4119bc
  4119c7:	mov    dh,0xed
  4119c9:	xchg   esp,eax
  4119ca:	shr    dh,0x14
  4119cd:	pop    esp
  4119ce:	aaa    
  4119cf:	xor    al,0xf5
  4119d1:	dec    ecx
  4119d2:	fucompp 
  4119d5:	lock mov ds:0xf73ae042,al
  4119db:	stc    
  4119dc:	adc    BYTE PTR [edi+0x25],ah
  4119df:	mov    al,0xd9
  4119e1:	in     al,0xe
  4119e3:	xchg   edx,eax
  4119e4:	(bad)  
  4119e5:	test   al,0xa7
  4119e7:	cld    
  4119e8:	adc    DWORD PTR [ecx+0x209fb3f3],0x87e44bb9
  4119f2:	or     DWORD PTR [ecx],ecx
  4119f4:	stc    
  4119f5:	push   esp
  4119f6:	add    eax,0x81001aef
  4119fb:	shrd   DWORD PTR ds:0x2711f6f,ebx,cl
  411a02:	dec    ebp
  411a03:	dec    di
  411a05:	jp     0x411a79
  411a07:	xchg   ebx,eax
  411a08:	push   ebx
  411a09:	pop    edx
  411a0a:	(bad)  [ecx+edx*8+0x1ada9cad]
  411a11:	out    0xde,al
  411a13:	fcom   DWORD PTR [ecx-0x5c23a08e]
  411a19:	sti    
  411a1a:	imul   eax,DWORD PTR [eax+0x7f],0x6f5f917e
  411a21:	and    eax,DWORD PTR [eax-0x14ae563c]
  411a27:	repz adc eax,0x66fca33e
  411a2d:	fsub   st,st(0)
  411a2f:	out    0x1b,al
  411a31:	dec    esp
  411a32:	mov    esp,0xf2682b99
  411a37:	mov    cl,0x4e
  411a39:	lods   eax,DWORD PTR ds:[esi]
  411a3a:	inc    esp
  411a3b:	pop    ds
  411a3c:	pop    ss
  411a3d:	mov    DWORD PTR [edi-0x7a],esi
  411a40:	gs pop ebp
  411a42:	dec    ecx
  411a43:	adc    eax,0x13d5cda9
  411a48:	nop
  411a49:	xchg   edi,eax
  411a4a:	repnz mov ds:0xc9f26410,eax
  411a50:	cwde   
  411a51:	adc    BYTE PTR [edi+0x7807b643],ah
  411a57:	sbb    esp,DWORD PTR [esi+0x4a9744e4]
  411a5d:	mov    dl,0xed
  411a5f:	adc    ah,BYTE PTR [edi+0x15cf954c]
  411a65:	xlat   BYTE PTR ds:[ebx]
  411a66:	shl    bl,0x60
  411a69:	sub    ebp,DWORD PTR [edi+0x3fec3683]
  411a6f:	cld    
  411a70:	dec    ecx
  411a71:	mov    ecx,0xff653267
  411a76:	mov    ch,0xed
  411a78:	mov    esi,ecx
  411a7a:	inc    edi
  411a7b:	outs   dx,BYTE PTR ds:[esi]
  411a7c:	fcom   DWORD PTR [ebx]
  411a7e:	fcmovnb st,st(6)
  411a80:	idiv   esi
  411a82:	aas    
  411a83:	das    
  411a84:	out    0x73,eax
  411a86:	sub    BYTE PTR [edx],al
  411a88:	mov    ch,ch
  411a8a:	mov    ebx,0xf6b8b9e1
  411a8f:	ins    DWORD PTR es:[edi],dx
  411a90:	stos   BYTE PTR es:[edi],al
  411a91:	enter  0xa3b1,0xf3
  411a95:	ins    DWORD PTR es:[edi],dx
  411a96:	jp     0x411a27
  411a98:	pop    ds
  411a99:	rcr    BYTE PTR gs:[esi-0x1d],1
  411a9d:	repnz push 0xb6db768d
  411aa3:	adc    BYTE PTR [ebx+0x1d],bh
  411aa6:	pop    ebx
  411aa7:	mov    ebx,0x417dd178
  411aac:	js     0x411a7c
  411aae:	and    DWORD PTR [ebx-0xac3f7df],0x52b99adf
  411ab8:	add    edi,DWORD PTR [esi-0x7b]
  411abb:	arpl   WORD PTR [eax-0x172cfd0],bx
  411ac1:	jmp    0x91069267
  411ac6:	ds pusha 
  411ac8:	jmp    0x411b3e
  411aca:	jge    0x411a5b
  411acc:	push   esi
  411acd:	outs   dx,DWORD PTR ds:[esi]
  411ace:	add    eax,0x5b22e5bd
  411ad3:	pop    eax
  411ad4:	mov    al,0xee
  411ad6:	push   es
  411ad7:	les    edx,FWORD PTR [ebx]
  411ad9:	xor    al,0xf
  411adb:	inc    ebx
  411adc:	push   ebx
  411add:	pop    ebp
  411ade:	mov    edx,0xce776f98
  411ae3:	outs   dx,BYTE PTR ds:[esi]
  411ae4:	fldcw  WORD PTR [edi]
  411ae6:	outs   dx,DWORD PTR ds:[esi]
  411ae7:	mov    cl,0xc1
  411ae9:	stos   DWORD PTR es:[edi],eax
  411aea:	lods   eax,DWORD PTR ds:[esi]
  411aeb:	or     bl,BYTE PTR [edi-0x47]
  411aee:	mov    dl,0x70
  411af0:	mov    al,0xdb
  411af2:	mov    DWORD PTR ss:[esi],esi
  411af5:	cmp    dl,al
  411af7:	jge    0x411af6
  411af9:	scas   al,BYTE PTR es:[edi]
  411afa:	add    al,0xc
  411afc:	adc    edx,DWORD PTR [esi-0x51be79de]
  411b02:	enter  0x915a,0xd3
  411b06:	loopne 0x411b30
  411b08:	test   eax,0xc502c136
  411b0d:	fsubr  st,st(7)
  411b0f:	clc    
  411b10:	and    BYTE PTR [ebp-0x24b4f68a],ch
  411b16:	xchg   edx,eax
  411b17:	jecxz  0x411b1d
  411b19:	imul   DWORD PTR [ebx+0x41]
  411b1c:	loopne 0x411ae6
  411b1e:	add    DWORD PTR [eax+0x14],ebp
  411b21:	(bad)  [ebp+ebp*2-0x60]
  411b25:	jmp    0x63e974fb
  411b2a:	test   al,0x25
  411b2c:	inc    edx
  411b2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b2e:	rcl    DWORD PTR [esi+esi*4],0xad
  411b32:	adc    al,0x4f
  411b34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b35:	(bad)  [ecx-0x4d]
  411b38:	cmp    BYTE PTR [ebx+0x4d92acc],dh
  411b3e:	mov    edx,ebx
  411b40:	leave  
  411b41:	cwde   
  411b42:	sti    
  411b43:	jl     0x411b2f
  411b45:	push   cs
  411b46:	inc    esi
  411b47:	sbb    al,0x10
  411b49:	cmp    dh,BYTE PTR [eax]
  411b4b:	sbb    al,0x88
  411b4d:	pop    esi
  411b4e:	mov    edx,0x47b9cd9f
  411b53:	inc    ebp
  411b54:	push   edx
  411b55:	je     0x411b80
  411b57:	call   0x4372:0xa6763897
  411b5e:	dec    ebp
  411b5f:	stos   BYTE PTR es:[edi],al
  411b60:	adc    cl,ah
  411b62:	fdiv   QWORD PTR [edi+0x5406a2be]
  411b68:	sahf   
  411b69:	add    al,0xea
  411b6b:	rcl    DWORD PTR [edx],1
  411b6d:	jmp    0x411be9
  411b6f:	pop    edi
  411b70:	pushf  
  411b71:	sub    ch,BYTE PTR [ebx+0x7777c76]
  411b77:	int3   
  411b78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b79:	or     ebp,ebp
  411b7b:	repnz test esp,edx
  411b7e:	cdq    
  411b7f:	test   eax,0xf95b6d82
  411b84:	jecxz  0x411b86
  411b86:	jno    0x411b21
  411b88:	inc    ecx
  411b89:	fs adc al,0x57
  411b8c:	pop    edi
  411b8d:	hlt    
  411b8e:	test   al,0x34
  411b90:	inc    edi
  411b91:	loopne 0x411bd8
  411b93:	imul   edi,DWORD PTR [edi+ecx*8-0x29],0xc194c540
  411b9b:	dec    cx
  411b9d:	pop    esi
  411b9e:	push   cs
  411b9f:	jg     0x411b36
  411ba1:	lahf   
  411ba2:	push   eax
  411ba3:	xchg   esp,eax
  411ba4:	aad    0x4e
  411ba6:	jg     0x411bc0
  411ba8:	clc    
  411ba9:	sub    bl,BYTE PTR [edx]
  411bab:	ret    0x55e7
  411bae:	pop    edi
  411baf:	iret   
  411bb0:	xchg   DWORD PTR [edx],ecx
  411bb2:	mov    ds:0xcea9431b,al
  411bb7:	jmp    0x6117:0x7042a9e
  411bbe:	inc    ecx
  411bbf:	sar    DWORD PTR [edx-0x7f1b49b0],cl
  411bc5:	sar    DWORD PTR [esi-0x70c5d2ec],cl
  411bcb:	fimul  DWORD PTR [esi-0x6994c1]
  411bd1:	mov    eax,ds:0x8e3631b0
  411bd6:	popa   
  411bd7:	sbb    eax,0xf8037e1b
  411bdc:	mov    ch,0x6f
  411bde:	popa   
  411bdf:	and    eax,0x2e09b913
  411be4:	popa   
  411be5:	mov    bl,0xcd
  411be7:	mov    edi,0xd028eef7
  411bec:	jl     0x411c0f
  411bee:	and    ch,cl
  411bf0:	jle    0x411c09
  411bf2:	push   edi
  411bf3:	iret   
  411bf4:	aas    
  411bf5:	xchg   ebx,eax
  411bf6:	push   ebp
  411bf7:	dec    ebx
  411bf8:	std    
  411bf9:	ins    BYTE PTR es:[edi],dx
  411bfa:	stos   DWORD PTR es:[edi],eax
  411bfb:	dec    eax
  411bfc:	retf   0x563d
  411bff:	test   BYTE PTR [ebx],ch
  411c01:	fmul   DWORD PTR [ebp+0x7]
  411c04:	inc    esp
  411c05:	mov    ch,0x8c
  411c07:	add    bh,BYTE PTR [ebx+0x3c]
  411c0a:	hlt    
  411c0b:	sbb    al,0x72
  411c0d:	shr    BYTE PTR [ebp-0x3a86ca1b],1
  411c13:	aam    0x41
  411c15:	pop    es
  411c16:	in     eax,0x7a
  411c18:	add    al,BYTE PTR [edi+0x21]
  411c1b:	inc    eax
  411c1c:	mov    ds:0x10679b03,al
  411c21:	jne    0x411c5d
  411c23:	push   esp
  411c24:	sti    
  411c25:	xor    ebp,DWORD PTR [ecx+eiz*1]
  411c28:	stos   BYTE PTR es:[di],al
  411c2a:	sbb    DWORD PTR ds:0x82490cb,edx
  411c30:	outs   dx,BYTE PTR ds:[esi]
  411c31:	mov    ah,0x8e
  411c33:	pusha  
  411c34:	idiv   DWORD PTR [ebp+0x6a]
  411c37:	mov    ebx,0x3fa75404
  411c3c:	cmp    DWORD PTR [edx+eiz*1+0x5b],0x508c5c1a
  411c44:	ret    0x4755
  411c47:	mov    dh,0x64
  411c49:	lahf   
  411c4a:	inc    edi
  411c4b:	add    BYTE PTR ds:0xb3236045,cl
  411c51:	gs into 
  411c53:	in     al,0xf1
  411c55:	cs call 0x8ab7b9e8
  411c5b:	shr    DWORD PTR [ecx+0x6762bdbe],0xc6
  411c62:	icebp  
  411c63:	call   0x7ce4:0x1286ae71
  411c6a:	jnp    0x411cd1
  411c6c:	icebp  
  411c6d:	xor    DWORD PTR [esi+0x6094aa2f],esi
  411c73:	pop    ebp
  411c74:	sub    DWORD PTR [eax],ebp
  411c76:	jl     0x411cb4
  411c78:	in     eax,0xbf
  411c7a:	fidiv  WORD PTR [ecx+eax*8]
  411c7d:	push   ecx
  411c7e:	loopne 0x411c7d
  411c80:	add    dl,BYTE PTR [ecx+0x68e630c3]
  411c86:	retf   
  411c87:	lea    ebx,[ebx]
  411c89:	enter  0x6e,0x83
  411c8d:	ss iret 
  411c8f:	daa    
  411c90:	push   ebx
  411c91:	clc    
  411c92:	sahf   
  411c93:	in     eax,dx
  411c94:	pop    ecx
  411c95:	scas   al,BYTE PTR es:[edi]
  411c96:	xor    BYTE PTR [edi+ebp*2],bl
  411c99:	inc    ecx
  411c9a:	mov    ds:0xc7e52ea6,al
  411c9f:	pusha  
  411ca0:	mov    al,ds:0x510aa4da
  411ca5:	iret   
  411ca6:	push   es
  411ca7:	nop
  411ca8:	sahf   
  411ca9:	test   DWORD PTR [edx],edi
  411cab:	mov    dh,0x6f
  411cad:	loope  0x411c98
  411caf:	js     0x411cb8
  411cb1:	cdq    
  411cb2:	pop    ecx
  411cb3:	xor    BYTE PTR [edx+ebp*4],dl
  411cb6:	sbb    bl,BYTE PTR [ecx]
  411cb8:	pop    esp
  411cb9:	je     0x411c5b
  411cbb:	xchg   ebp,eax
  411cbc:	in     eax,dx
  411cbd:	sbb    ah,BYTE PTR [edi-0x35251b39]
  411cc3:	pop    es
  411cc4:	and    DWORD PTR [ecx+edx*4+0x47],ecx
  411cc8:	xchg   esi,eax
  411cc9:	push   ebp
  411cca:	inc    ebp
  411ccb:	sbb    ebp,DWORD PTR [ecx+0x51]
  411cce:	pop    ebp
  411ccf:	dec    ecx
  411cd0:	(bad)  
  411cd1:	cs pop ds
  411cd3:	mov    al,0xe7
  411cd5:	adc    ah,dl
  411cd7:	xor    al,0x7f
  411cd9:	xor    DWORD PTR [esi+0x5b],edi
  411cdc:	pusha  
  411cdd:	xchg   esp,eax
  411cde:	or     BYTE PTR [edi],al
  411ce0:	and    esi,DWORD PTR ds:0x2e532be1
  411ce6:	mov    esi,0x202e4b97
  411ceb:	dec    edi
  411cec:	sar    BYTE PTR [ecx],cl
  411cee:	sbb    BYTE PTR ds:0x9a35271c,bh
  411cf4:	ret    
  411cf5:	std    
  411cf6:	adc    dl,BYTE PTR [ebx]
  411cf8:	dec    esi
  411cf9:	enter  0x95ae,0x70
  411cfd:	imul   eax,DWORD PTR [eax-0x50],0xffffffa1
  411d01:	jne    0x411cdb
  411d03:	xor    al,0x2d
  411d05:	mov    ah,0xae
  411d07:	mov    WORD PTR [ebp+0x681f5a5e],?
  411d0d:	jmp    0x411d6a
  411d0f:	test   eax,0xae6b0a4c
  411d14:	arpl   WORD PTR ds:0xb2789e3f,di
  411d1a:	or     cl,BYTE PTR [ecx-0x33]
  411d1d:	jbe    0x411cbd
  411d1f:	(bad)  
  411d20:	xchg   esi,eax
  411d21:	scas   eax,DWORD PTR es:[edi]
  411d22:	cli    
  411d23:	(bad)  
  411d24:	fsub   st(6),st
  411d26:	xchg   edx,eax
  411d27:	cmp    DWORD PTR [ecx+edx*1],ebp
  411d2a:	(bad)  
  411d2b:	icebp  
  411d2c:	data16 lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d2f:	inc    ecx
  411d31:	adc    DWORD PTR [ebp-0x41],edi
  411d34:	pop    edx
  411d35:	scas   eax,DWORD PTR es:[edi]
  411d36:	sub    DWORD PTR [edi],0xffffffce
  411d39:	jne    0x411d3c
  411d3b:	imul   ebx,DWORD PTR [ecx],0xffffffc1
  411d3e:	fwait
  411d3f:	cmc    
  411d40:	mov    DWORD PTR [edx+0x1a],eax
  411d43:	pop    ebp
  411d44:	lods   eax,DWORD PTR ds:[esi]
  411d45:	push   esp
  411d46:	std    
  411d47:	inc    ebp
  411d48:	push   ecx
  411d49:	faddp  st(0),st
  411d4b:	xor    al,BYTE PTR [ecx-0x3795abee]
  411d51:	popa   
  411d52:	shr    BYTE PTR [edi-0x7f46da49],1
  411d58:	sbb    dl,BYTE PTR [esi]
  411d5a:	mul    bh
  411d5c:	(bad)  
  411d5d:	clc    
  411d5e:	sub    dh,BYTE PTR [ecx+0x4f]
  411d61:	xchg   BYTE PTR [edi+0x2e],dl
  411d64:	loop   0x411dce
  411d66:	xor    dl,al
  411d68:	mov    ds:0xd6f5bc48,al
  411d6d:	cdq    
  411d6e:	inc    ebx
  411d6f:	test   eax,0x94697be5
  411d74:	ja     0x411d84
  411d76:	mov    bl,0x96
  411d78:	sbb    dl,bh
  411d7a:	shr    edx,cl
  411d7c:	pop    ebp
  411d7d:	push   ss
  411d7e:	sbb    dl,BYTE PTR [ebp+0x5ad306ee]
  411d84:	leavew 
  411d86:	call   0x27b15275
  411d8b:	xchg   ebp,eax
  411d8c:	mov    eax,ds:0x5e08ddc5
  411d91:	bound  esp,QWORD PTR [esi+0x72]
  411d94:	ins    BYTE PTR es:[di],dx
  411d96:	in     al,dx
  411d97:	(bad)  
  411d98:	sbb    cl,al
  411d9a:	nop
  411d9b:	mov    ch,0xce
  411d9d:	or     ch,BYTE PTR [edx+0x13]
  411da0:	(bad)
  411da3:	mul    BYTE PTR [eax-0x39fc3da]
  411da9:	or     eax,0xcdfe475a
  411dae:	rcr    DWORD PTR [ebx-0xb73471c],0x11
  411db5:	fwait
  411db6:	push   esp
  411db7:	push   ds
  411db8:	dec    ebp
  411db9:	lahf   
  411dba:	cmc    
  411dbb:	push   esi
  411dbc:	les    ebp,FWORD PTR [edx-0x1211f870]
  411dc2:	btr    DWORD PTR [eax+edx*1-0x42d8be7c],eax
  411dca:	mov    dl,0x6e
  411dcc:	scas   al,BYTE PTR es:[edi]
  411dcd:	pop    ecx
  411dce:	data16 and dh,cl
  411dd1:	xchg   esi,eax
  411dd2:	inc    esp
  411dd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411dd4:	sar    BYTE PTR [edi+0x5],1
  411dd7:	inc    edx
  411dd8:	sub    bl,BYTE PTR [edi-0x5df658ab]
  411dde:	mov    dh,0x7d
  411de0:	inc    ebx
  411de1:	mov    WORD PTR [ebx+0x3527b065],?
  411de7:	call   FWORD PTR [ebx-0x39]
  411dea:	in     eax,dx
  411deb:	sub    dh,BYTE PTR [ebx+0x3a02c10f]
  411df1:	lock addr16 xor al,0x28
  411df5:	mov    al,ds:0x62e3efc7
  411dfa:	jne    0x411dd0
  411dfc:	inc    ebx
  411dfd:	push   edx
  411dfe:	scas   eax,DWORD PTR es:[edi]
  411dff:	xchg   ebx,eax
  411e00:	clc    
  411e01:	adc    bh,BYTE PTR [ebx+0x50bec24f]
  411e07:	fistp  QWORD PTR [edx]
  411e09:	jle    0x411de2
  411e0b:	jbe    0x411e7a
  411e0d:	mov    ?,WORD PTR [edx-0x555d60c8]
  411e13:	mov    al,ds:0x38181d0f
  411e18:	jg     0x411dcb
  411e1a:	sub    bh,BYTE PTR [eax+0x2b0201f7]
  411e20:	jp     0x411daf
  411e22:	icebp  
  411e23:	xor    eax,DWORD PTR [esi+0x26]
  411e26:	sub    eax,DWORD PTR [edx-0x6f]
  411e29:	inc    ebp
  411e2a:	cmc    
  411e2b:	rcr    esp,cl
  411e2d:	aam    0x4d
  411e2f:	or     bl,BYTE PTR [ecx+0x3f]
  411e32:	daa    
  411e33:	cmp    sp,0xffd2
  411e37:	mov    cl,0x99
  411e39:	sbb    eax,DWORD PTR [edi+0x5]
  411e3c:	scas   eax,DWORD PTR es:[edi]
  411e3d:	mov    ebp,0x4230b60a
  411e42:	mov    edx,0x5480da2a
  411e47:	(bad)  
  411e48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e49:	ror    DWORD PTR [esi+ebp*2+0x3d02b146],1
  411e50:	sbb    edx,DWORD PTR [edx]
  411e52:	adc    eax,0x81c3c5f
  411e57:	mov    dh,0xc7
  411e59:	lods   eax,DWORD PTR ds:[esi]
  411e5a:	push   esp
  411e5b:	push   es
  411e5c:	jae    0x411e6a
  411e5e:	sahf   
  411e5f:	cmp    BYTE PTR [ecx],ch
  411e61:	dec    ecx
  411e62:	pop    ecx
  411e63:	add    BYTE PTR [esi+esi*8],ch
  411e66:	xchg   DWORD PTR ds:0x38c7f808,ecx
  411e6c:	push   esp
  411e6d:	mov    ah,0xc5
  411e6f:	bound  eax,QWORD PTR [ebx+0x5b9a0a9d]
  411e75:	test   DWORD PTR [esi-0x40],eax
  411e78:	ds inc esi
  411e7a:	jae    0x411e06
  411e7c:	add    dh,BYTE PTR [eax+0x49]
  411e7f:	shl    al,0xd2
  411e82:	mov    bh,0xdb
  411e84:	adc    ch,ch
  411e86:	inc    esp
  411e87:	and    eax,DWORD PTR [ecx+eax*4+0x11ff0cc3]
  411e8e:	mov    ecx,0xe3268aa9
  411e93:	add    al,0x46
  411e95:	dec    ebp
  411e96:	push   ss
  411e97:	sub    al,0x98
  411e99:	inc    eax
  411e9a:	aad    0x73
  411e9c:	ins    DWORD PTR es:[edi],dx
  411e9d:	imul   edi,DWORD PTR ds:0xe1cde961,0xffffffa7
  411ea4:	bound  ebp,QWORD PTR [ebx]
  411ea6:	mov    dh,0xc5
  411ea8:	sbb    bl,BYTE PTR [esi-0x4760c121]
  411eae:	les    ebp,FWORD PTR [edx+0x50685f88]
  411eb4:	sbb    eax,0x50c8ed08
  411eb9:	lea    esp,[ebx+0x382317f]
  411ebf:	pusha  
  411ec0:	inc    ebp
  411ec1:	es push ecx
  411ec3:	add    DWORD PTR [eax-0x3f85dbf6],ebx
  411ec9:	repnz xchg edi,eax
  411ecb:	xchg   edi,eax
  411ecc:	add    cl,BYTE PTR [eax+0x3]
  411ecf:	mov    ebx,?
  411ed1:	inc    edx
  411ed2:	xchg   ebx,eax
  411ed3:	push   ss
  411ed4:	xlat   BYTE PTR ds:[ebx]
  411ed5:	pop    ebp
  411ed6:	ins    DWORD PTR es:[edi],dx
  411ed7:	icebp  
  411ed8:	sbb    eax,0xc950db32
  411edd:	sbb    eax,0x40dddf6b
  411ee2:	out    dx,eax
  411ee3:	xor    al,0x81
  411ee5:	adc    eax,0x6595563f
  411eea:	shl    edx,cl
  411eec:	test   BYTE PTR [esi+0xb000e66],al
  411ef2:	retf   0x5aa0
  411ef5:	xor    DWORD PTR [esi+0x626625a6],eax
  411efb:	stos   DWORD PTR es:[edi],eax
  411efc:	push   ebp
  411efd:	bound  eax,QWORD PTR [edi-0x4a466edc]
  411f03:	out    0x3b,al
  411f05:	retf   
  411f06:	xor    al,0xdf
  411f08:	push   eax
  411f09:	pop    ecx
  411f0a:	outs   dx,DWORD PTR ds:[esi]
  411f0b:	out    0xc3,eax
  411f0d:	fisub  DWORD PTR [esi-0x1a88054e]
  411f13:	add    dl,ch
  411f15:	sbb    ch,bh
  411f17:	push   0xfffffff1
  411f19:	jno    0x411f23
  411f1b:	mov    ecx,0x42ec67c7
  411f20:	add    eax,DWORD PTR [esp+ebp*4+0x28]
  411f24:	sbb    dl,dh
  411f26:	inc    ebp
  411f27:	or     BYTE PTR [edi-0x1b],al
  411f2a:	arpl   WORD PTR [ebp+0x6057d5c2],ax
  411f30:	jb     0x411f1e
  411f32:	add    edx,DWORD PTR [ebx]
  411f34:	xor    BYTE PTR [eax-0x3e],bl
  411f37:	pop    esi
  411f38:	inc    esi
  411f39:	loope  0x411eee
  411f3b:	or     al,0x93
  411f3e:	arpl   WORD PTR ds:0x17c035c5,cx
  411f44:	fild   WORD PTR [ecx-0x6e36d34b]
  411f4a:	cdq    
  411f4b:	or     dl,BYTE PTR [edx+ecx*8-0x60]
  411f4f:	push   es
  411f50:	sub    al,0x43
  411f52:	(bad)  
  411f53:	aam    0xe1
  411f55:	xchg   esp,eax
  411f56:	jge    0x411f9c
  411f58:	jmp    0x6b66ed0c
  411f5d:	dec    esp
  411f5e:	sbb    BYTE PTR [ebx],dh
  411f60:	inc    eax
  411f61:	inc    ecx
  411f62:	repnz (bad) 
  411f64:	addr16 out 0xbc,al
  411f67:	add    DWORD PTR [esi+ebp*2+0x7eeb2e18],ecx
  411f6e:	mov    bh,0x7d
  411f70:	xlat   BYTE PTR ds:[ebx]
  411f71:	cdq    
  411f72:	xor    esi,DWORD PTR [esi-0x250fcee1]
  411f78:	mul    BYTE PTR [edx]
  411f7a:	lock scas al,BYTE PTR es:[edi]
  411f7c:	mov    al,ds:0x215c479b
  411f81:	mov    al,ds:0xb66c80ff
  411f86:	fldenv [eax+eiz*2+0x841bc2e]
  411f8d:	popf   
  411f8e:	(bad)  
  411f8f:	push   edi
  411f90:	hlt    
  411f91:	in     al,dx
  411f92:	push   0x667d7c30
  411f97:	mov    ah,0x58
  411f99:	lods   eax,DWORD PTR ds:[esi]
  411f9a:	cmp    al,0xf4
  411f9c:	(bad)  
  411f9d:	sbb    eax,0x7c5c2c77
  411fa2:	outs   dx,BYTE PTR ds:[esi]
  411fa3:	mov    eax,ds:0x66225d4
  411fa8:	ret    0x330a
  411fab:	sub    eax,DWORD PTR [ecx-0x3c31e505]
  411fb1:	pushf  
  411fb2:	pop    edi
  411fb3:	and    esi,DWORD PTR [esi-0x10]
  411fb6:	xor    DWORD PTR [edi+0x53bce699],ecx
  411fbc:	cld    
  411fbd:	cwde   
  411fbe:	jno    0x411f80
  411fc0:	popa   
  411fc1:	outs   dx,DWORD PTR ds:[esi]
  411fc2:	ret    0x83c6
  411fc5:	pop    eax
  411fc6:	cmp    al,0xdf
  411fc8:	retf   0x3c3b
  411fcb:	dec    eax
  411fcc:	or     DWORD PTR [edi+0xd],0x3b04ab8c
  411fd3:	scas   eax,DWORD PTR es:[edi]
  411fd4:	in     eax,0x9a
  411fd6:	mov    esi,DWORD PTR [eax-0x4d943931]
  411fdc:	(bad)  
  411fde:	fbld   TBYTE PTR [eax+0x78e9934]
  411fe4:	imul   edi,DWORD PTR [ecx],0xca8e9548
  411fea:	sub    al,0x88
  411fec:	inc    edx
  411fed:	mov    edx,0x35c51ec6
  411ff2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ff3:	jle    0x412016
  411ff5:	inc    ebx
  411ff6:	fs js  0x411fdc
  411ff9:	cmp    DWORD PTR [ecx],ebp
  411ffb:	sub    bl,dl
  411ffd:	(bad)  
  411fff:	ret    0x6750
  412002:	mov    al,0x6e
  412004:	inc    ebp
  412005:	rol    BYTE PTR [ebx+0x2a530e28],1
  41200b:	ss pop esp
  41200d:	imul   esp,DWORD PTR [esp+eax*1],0x21
  412011:	enter  0xc8db,0x1b
  412015:	popa   
  412016:	cmp    bh,BYTE PTR [ecx]
  412018:	int3   
  412019:	aas    
  41201a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41201b:	ss and al,0x14
  41201e:	jl     0x41203e
  412020:	adc    BYTE PTR [eax-0x45e9c139],al
  412026:	dec    esp
  412027:	xchg   ebp,eax
  412028:	cmp    DWORD PTR [esi-0x25],ebp
  41202b:	das    
  41202c:	sub    al,0xfc
  41202e:	cmp    cl,dl
  412030:	push   edx
  412031:	dec    ebp
  412032:	lods   eax,DWORD PTR ds:[esi]
  412033:	outs   dx,DWORD PTR ds:[esi]
  412034:	push   esi
  412035:	adc    al,0xda
  412037:	sub    BYTE PTR [esi],dh
  412039:	mov    al,0x8f
  41203b:	sbb    ebp,esp
  41203d:	outs   dx,BYTE PTR ds:[esi]
  41203e:	add    al,0x53
  412040:	dec    ebx
  412041:	xor    edi,DWORD PTR [ebp+0x5788ede5]
  412047:	out    0x1b,al
  412049:	xor    eax,0xf1a8b251
  41204e:	jo     0x4120ca
  412050:	mov    edi,0x70ac3bbb
  412055:	or     dl,BYTE PTR [ebx]
  412057:	and    DWORD PTR [edx],esp
  412059:	sub    ebx,ebp
  41205b:	mov    BYTE PTR [ecx],ch
  41205d:	imul   BYTE PTR [ecx+eax*8]
  412060:	dec    ebx
  412061:	cmc    
  412062:	xor    DWORD PTR ds:0xfa289d3a,0xffffffc1
  412069:	mov    esp,0xd1e33a6f
  41206e:	pusha  
  41206f:	jmp    0xfc0b:0xee24b129
  412076:	repnz loopne 0x4120a0
  412079:	push   ebx
  41207a:	(bad)  
  41207b:	(bad)  
  41207c:	cmp    DWORD PTR ds:0x5232355f,0x15
  412083:	dec    ecx
  412084:	into   
  412085:	fwait
  412086:	mov    WORD PTR [ecx+0x12],gs
  412089:	mov    bl,0xac
  41208b:	cmpps  xmm2,XMMWORD PTR [ecx+0xf],0x85
  412090:	add    al,0xdc
  412092:	(bad)  
  412093:	dec    DWORD PTR [ebx-0x37cc07b3]
  412099:	mov    eax,DWORD PTR [ebp+0x10]
  41209c:	add    ecx,esi
  41209e:	mov    DWORD PTR [eax],ecx
  4120a0:	pop    edi
  4120a1:	pop    esi
  4120a2:	pop    ebx
  4120a3:	leave  
  4120a4:	ret    0xc
  4120a7:	add    BYTE PTR [eax-0x5ffbffbe],ah
  4120ad:	inc    edx
  4120ae:	add    BYTE PTR [eax],cl
  4120b0:	mov    al,ds:0xa00c0042
  4120b5:	inc    edx
  4120b6:	add    BYTE PTR [eax],dl
  4120b8:	mov    al,ds:0xa0140042
  4120bd:	inc    edx
  4120be:	add    BYTE PTR [eax],bl
  4120c0:	mov    al,ds:0xa01c0042
  4120c5:	inc    edx
  4120c6:	add    BYTE PTR [eax],al
  4120c8:	rol    BYTE PTR [edx+0x0],1
  4120cb:	add    al,0xd0
  4120cd:	inc    edx
  4120ce:	add    BYTE PTR [eax],cl
  4120d0:	rol    BYTE PTR [edx+0x0],1
  4120d3:	or     al,0xd0
  4120d5:	inc    edx
  4120d6:	add    BYTE PTR [eax],dl
  4120d8:	rol    BYTE PTR [edx+0x0],1
  4120db:	adc    al,0xd0
  4120dd:	inc    edx
  4120de:	add    BYTE PTR [eax],bl
  4120e0:	rol    BYTE PTR [edx+0x0],1
  4120e3:	sbb    al,0xd0
  4120e5:	inc    edx
	...
  4120f2:	add    BYTE PTR [eax],al
  4120f4:	adc    al,0x15
  4120f6:	into   
  4120f7:	dec    ebp
  4120f8:	add    BYTE PTR [eax],al
  4120fa:	add    BYTE PTR [eax],al
  4120fc:	add    al,BYTE PTR [eax]
  4120fe:	add    BYTE PTR [eax],al
  412100:	cmp    eax,0xe0000000
  412105:	and    DWORD PTR [ecx],eax
  412107:	add    al,ah
  412109:	adc    eax,0x1
  41210e:	add    BYTE PTR [eax],al
  412110:	add    BYTE PTR [eax],al
  412112:	add    BYTE PTR [eax],al
  412114:	adc    al,0x15
  412116:	into   
  412117:	dec    ebp
  412118:	add    BYTE PTR [eax],al
  41211a:	add    BYTE PTR [eax],al
  41211c:	inc    edx
  41211d:	and    DWORD PTR [ecx],eax
  41211f:	add    BYTE PTR [ecx],al
  412121:	add    BYTE PTR [eax],al
  412123:	add    BYTE PTR [ecx],al
  412125:	add    BYTE PTR [eax],al
  412127:	add    BYTE PTR [ecx],al
  412129:	add    BYTE PTR [eax],al
  41212b:	add    BYTE PTR [eax],bh
  41212d:	and    DWORD PTR [ecx],eax
  41212f:	add    BYTE PTR [ecx+eiz*1],bh
  412132:	add    DWORD PTR [eax],eax
  412134:	inc    eax
  412135:	and    DWORD PTR [ecx],eax
  412137:	add    dl,ch
  412139:	sub    eax,DWORD PTR [eax]
  41213b:	add    BYTE PTR [esi+0x21],cl
  41213e:	add    DWORD PTR [eax],eax
  412140:	add    BYTE PTR [eax],al
  412142:	inc    esp
  412143:	jns    0x4121b3
  412145:	popa   
  412146:	ins    DWORD PTR es:[edi],dx
  412147:	imul   ebp,DWORD PTR [ecx+0x43],0x747361
  41214e:	aas    
  41214f:	inc    ebx
  412150:	ins    BYTE PTR es:[edi],dx
  412151:	outs   dx,DWORD PTR ds:[esi]
  412152:	jae    0x4121b9
  412154:	push   edi
  412155:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  41215c:	popa   
  41215d:	je     0x4121c8
  41215f:	outs   dx,DWORD PTR ds:[esi]
  412160:	outs   dx,BYTE PTR ds:[esi]
  412161:	inc    ebx
  412162:	ins    BYTE PTR es:[edi],dx
  412163:	outs   dx,DWORD PTR ds:[esi]
  412164:	jae    0x4121cb
  412166:	push   edi
  412167:	imul   eax,DWORD PTR [eax],0x4004290
  41216d:	nop
  41216e:	inc    edx
  41216f:	add    BYTE PTR [eax],cl
  412171:	nop
  412172:	inc    edx
  412173:	add    BYTE PTR [eax+edx*4],cl
  412176:	inc    edx
  412177:	add    BYTE PTR [eax],dl
  412179:	nop
  41217a:	inc    edx
  41217b:	add    BYTE PTR [eax+edx*4],dl
  41217e:	inc    edx
  41217f:	add    BYTE PTR [eax],bl
  412181:	nop
  412182:	inc    edx
  412183:	add    BYTE PTR [eax+edx*4],bl
  412186:	inc    edx
  412187:	add    BYTE PTR [eax],ah
  412189:	nop
  41218a:	inc    edx
  41218b:	add    BYTE PTR [eax+edx*4],ah
  41218e:	inc    edx
  41218f:	add    BYTE PTR [eax],ch
  412191:	nop
  412192:	inc    edx
  412193:	add    BYTE PTR [eax],al
  412195:	mov    al,0x42
  412197:	add    BYTE PTR [eax+esi*4],al
  41219a:	inc    edx
  41219b:	add    BYTE PTR [eax],cl
  41219d:	mov    al,0x42
  41219f:	add    BYTE PTR [eax+esi*4],cl
  4121a2:	inc    edx
  4121a3:	add    BYTE PTR [eax],dl
  4121a5:	mov    al,0x42
  4121a7:	add    BYTE PTR [eax+esi*4],dl
  4121aa:	inc    edx
  4121ab:	add    BYTE PTR [eax],bl
  4121ad:	mov    al,0x42
  4121af:	add    BYTE PTR [eax+esi*4],bl
  4121b2:	inc    edx
  4121b3:	add    BYTE PTR [eax],al
  4121b5:	rol    BYTE PTR [edx+0x0],0x4
  4121b9:	rol    BYTE PTR [edx+0x0],0x8
  4121bd:	rol    BYTE PTR [edx+0x0],0xc
  4121c1:	rol    BYTE PTR [edx+0x0],0x10
  4121c5:	rol    BYTE PTR [edx+0x0],0x14
  4121c9:	rol    BYTE PTR [edx+0x0],0x18
  4121cd:	rol    BYTE PTR [edx+0x0],0x1c
  4121d1:	rol    BYTE PTR [edx+0x0],0x0
	...
  4121dd:	add    BYTE PTR [eax],al
  4121df:	add    BYTE PTR [edx+0x53],dl
  4121e2:	inc    esp
  4121e3:	push   ebx
  4121e4:	inc    ebx
  4121e5:	add    ebx,DWORD PTR [ebp-0x31]
  4121e8:	ret    0x2449
  4121eb:	dec    esi
  4121ec:	nop
  4121ed:	cmp    eax,0x5074639f
  4121f2:	lock add al,0x1
  4121f5:	add    BYTE PTR [eax],al
  4121f7:	add    BYTE PTR [ebx+0x3a],al
  4121fa:	pop    esp
  4121fb:	inc    ebx
  4121fc:	jne    0x412270
  4121fe:	jb     0x412265
  412200:	outs   dx,BYTE PTR ds:[esi]
  412201:	je     0x412247
  412203:	popa   
  412204:	je     0x412267
  412206:	pop    esp
  412207:	dec    ebp
  412208:	outs   dx,DWORD PTR ds:[esi]
  412209:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  412211:	ins    BYTE PTR es:[edi],dx
  412212:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  412219:	dec    esi
  41221a:	gs ja  0x41221d
  41221d:	mov    edx,DWORD PTR [ebp-0x14]
  412220:	sub    esp,0xe4
  412226:	push   ebx
  412227:	push   edi
  412228:	mov    eax,ebx
  41222a:	xchg   ecx,eax
  41222b:	mov    eax,DWORD PTR [ebp+0x8]
  41222e:	mov    edi,0xf89c85b5
  412233:	cmp    eax,edi
  412235:	jne    0x4125c9
  41223b:	mov    eax,DWORD PTR [ebp+0xc]
  41223e:	cmp    eax,0xf89c85b4
  412243:	jne    0x4125c9
  412249:	mov    eax,DWORD PTR [ebp+0x24]
  41224c:	mov    DWORD PTR [ebp-0x4],eax
  41224f:	mov    BYTE PTR [ebp-0x18],0x3
  412253:	mov    BYTE PTR [ebp-0x17],0x1c
  412257:	mov    BYTE PTR [ebp-0x16],0x1
  41225b:	mov    BYTE PTR [ebp-0x15],0x4f
  41225f:	mov    BYTE PTR [ebp-0x14],0x4e
  412263:	mov    BYTE PTR [ebp-0x13],0x78
  412267:	mov    BYTE PTR [ebp-0x20],0xd
  41226b:	mov    BYTE PTR [ebp-0x1f],0xf
  41226f:	mov    BYTE PTR [ebp-0x1e],0x1d
  412273:	mov    BYTE PTR [ebp-0x1d],0xe
  412277:	mov    BYTE PTR [ebp-0x1c],0x4f
  41227b:	mov    BYTE PTR [ebp-0x1b],0x4e
  41227f:	mov    BYTE PTR [ebp-0x1a],0x78
  412283:	mov    BYTE PTR [ebp-0x28],0xf
  412287:	xor    edx,edx
  412289:	mov    BYTE PTR [ebp-0x27],dl
  41228c:	mov    BYTE PTR [ebp-0x26],0x4
  412290:	mov    BYTE PTR [ebp-0x25],0xf3
  412294:	mov    BYTE PTR [ebp-0x24],0x19
  412298:	mov    BYTE PTR [ebp-0x23],0x8
  41229c:	push   esi
  41229d:	mov    BYTE PTR [ebp-0x22],0x1
  4122a1:	mov    BYTE PTR [ebp-0x21],0x78
  4122a5:	xor    esi,esi
  4122a7:	mov    eax,0xf6
  4122ac:	lea    ecx,[ebp+esi*1-0x18]
  4122b0:	movzx  ebx,BYTE PTR [ecx]
  4122b3:	xor    ebx,0x72
  4122b6:	add    ebx,eax
  4122b8:	inc    esi
  4122b9:	mov    BYTE PTR [ecx],bl
  4122bb:	cmp    esi,0x6
  4122be:	jb     0x4122ac
  4122c0:	xor    esi,esi
  4122c2:	lea    ecx,[ebp+esi*1-0x20]
  4122c6:	movzx  ebx,BYTE PTR [ecx]
  4122c9:	xor    ebx,0x72
  4122cc:	add    ebx,eax
  4122ce:	inc    esi
  4122cf:	mov    BYTE PTR [ecx],bl
  4122d1:	cmp    esi,0x7
  4122d4:	jb     0x4122c2
  4122d6:	xor    esi,esi
  4122d8:	lea    ecx,[ebp+esi*1-0x28]
  4122dc:	movzx  ebx,BYTE PTR [ecx]
  4122df:	xor    ebx,0x72
  4122e2:	add    ebx,eax
  4122e4:	push   0x8
  4122e6:	mov    BYTE PTR [ecx],bl
  4122e8:	inc    esi
  4122e9:	pop    ecx
  4122ea:	cmp    esi,ecx
  4122ec:	jb     0x4122d8
  4122ee:	lea    eax,[ebp-0x2c]
  4122f1:	mov    DWORD PTR [ebp-0x8],eax
  4122f4:	mov    esi,DWORD PTR [ebp-0x8]
  4122f7:	mov    eax,0x7113fcef
  4122fc:	mov    DWORD PTR [esi],eax
  4122fe:	mov    esi,DWORD PTR [ebp-0x2c]
  412301:	cmp    esi,eax
  412303:	jne    0x41230f
  412305:	mov    DWORD PTR [ebp-0x8],edi
  412308:	mov    DWORD PTR [ebp-0x8],0xf89c85e2
  41230f:	mov    eax,DWORD PTR [ebp-0x4]
  412312:	mov    eax,DWORD PTR [eax+0x18c]
  412318:	cmp    DWORD PTR [eax],edx
  41231a:	jne    0x412573
  412320:	mov    eax,DWORD PTR [ebp-0x4]
  412323:	mov    eax,DWORD PTR [eax+0x17c]
  412329:	mov    DWORD PTR [eax],edx
  41232b:	mov    eax,DWORD PTR [ebp-0x4]
  41232e:	mov    eax,DWORD PTR [eax+0x180]
  412334:	mov    DWORD PTR [eax],edx
  412336:	mov    edi,0x4e39
  41233b:	mov    eax,0x4f8e
  412340:	mov    WORD PTR [ebp-0x78],ax
  412344:	mov    eax,edi
  412346:	mov    WORD PTR [ebp-0x76],ax
  41234a:	add    eax,0x45
  41234d:	mov    WORD PTR [ebp-0x74],ax
  412351:	lea    eax,[edi+0x5]
  412354:	mov    WORD PTR [ebp-0x72],ax
  412358:	mov    eax,0x4fa9
  41235d:	mov    WORD PTR [ebp-0x70],ax
  412361:	lea    eax,[edi+0x4]
  412364:	mov    WORD PTR [ebp-0x6e],ax
  412368:	add    eax,0x3b
  41236b:	mov    WORD PTR [ebp-0x6c],ax
  41236f:	lea    eax,[edi-0x6]
  412372:	mov    WORD PTR [ebp-0x6a],ax
  412376:	mov    eax,edi
  412378:	mov    WORD PTR [ebp-0x68],ax
  41237c:	add    eax,0xfffffff9
  41237f:	mov    WORD PTR [ebp-0x66],ax
  412383:	mov    eax,0x99fe
  412388:	mov    WORD PTR [ebp-0x64],ax
  41238c:	mov    eax,0x828d
  412391:	mov    WORD PTR [ebp-0x62],ax
  412395:	mov    eax,0xd788
  41239a:	mov    WORD PTR [ebp-0x60],ax
  41239e:	add    eax,0x24
  4123a1:	mov    WORD PTR [ebp-0x5e],ax
  4123a5:	mov    eax,0x27a3
  4123aa:	mov    WORD PTR [ebp-0x5c],ax
  4123ae:	mov    eax,0x47a3
  4123b3:	mov    WORD PTR [ebp-0x5a],ax
  4123b7:	lea    eax,[edi+0x3]
  4123ba:	mov    WORD PTR [ebp-0x58],ax
  4123be:	mov    DWORD PTR [ebp-0x10],0xf304000f
  4123c5:	mov    BYTE PTR [ebp-0xc],0x19
  4123c9:	mov    BYTE PTR [ebp-0xb],cl
  4123cc:	mov    WORD PTR [ebp-0xa],0x7801
  4123d2:	lea    eax,[ebp-0x10]
  4123d5:	mov    dl,BYTE PTR [eax]
  4123d7:	xor    dl,0x72
  4123da:	sub    dl,0xa
  4123dd:	mov    BYTE PTR [eax],dl
  4123df:	inc    eax
  4123e0:	dec    ecx
  4123e1:	jne    0x4123d5
  4123e3:	lea    eax,[ebp-0x10]
  4123e6:	mov    DWORD PTR [ebp-0xb8],eax
  4123ec:	lea    eax,[ebp-0xbc]
  4123f2:	push   eax
  4123f3:	mov    eax,DWORD PTR [ebp+0xc]
  4123f6:	mov    ebx,0x7510897
  4123fb:	xor    eax,ebx
  4123fd:	mov    esi,0x3272de
  412402:	add    eax,esi
  412404:	push   eax
  412405:	mov    eax,DWORD PTR [ebp-0x4]
  412408:	add    eax,0x66
  41240b:	push   eax
  41240c:	mov    eax,DWORD PTR [ebp-0x4]
  41240f:	mov    eax,DWORD PTR [eax+0x198]
  412415:	mov    DWORD PTR [ebp-0xbc],0x1
  41241f:	push   DWORD PTR [eax]
  412421:	mov    eax,DWORD PTR [ebp+0x10]
  412424:	call   eax
  412426:	mov    ecx,DWORD PTR [ebp+0x8]
  412429:	xor    ecx,ebx
  41242b:	add    ecx,esi
  41242d:	mov    DWORD PTR [ebp-0x8],eax
  412430:	cmp    eax,ecx
  412432:	jne    0x41244d
  412434:	mov    eax,ds:0x33730bee
  412439:	or     eax,0x22150bef
  41243e:	mov    ds:0x33730bee,eax
  412443:	add    eax,0x3372e90f
  412448:	mov    ds:0x33730bee,eax
  41244d:	mov    ecx,0x4f81
  412452:	mov    eax,ecx
  412454:	mov    WORD PTR [ebp-0x40],ax
  412458:	mov    eax,0x4e74
  41245d:	mov    edx,eax
  41245f:	mov    WORD PTR [ebp-0x3e],dx
  412463:	lea    edx,[ecx+0x1b]
  412466:	mov    WORD PTR [ebp-0x3c],dx
  41246a:	add    edx,0xfffffff8
  41246d:	mov    WORD PTR [ebp-0x3a],dx
  412471:	lea    edx,[ecx+0x29]
  412474:	mov    WORD PTR [ebp-0x38],dx
  412478:	add    edx,0x5
  41247b:	mov    WORD PTR [ebp-0x36],dx
  41247f:	lea    edx,[ecx+0x1f]
  412482:	mov    WORD PTR [ebp-0x34],dx
  412486:	mov    WORD PTR [ebp-0x32],cx
  41248a:	mov    ecx,edi
  41248c:	mov    WORD PTR [ebp-0x30],cx
  412490:	lea    ecx,[edx+0x1]
  412493:	mov    edx,ecx
  412495:	mov    WORD PTR [ebp-0x54],dx
  412499:	mov    edx,eax
  41249b:	mov    WORD PTR [ebp-0x52],dx
  41249f:	add    edx,0x8
  4124a2:	mov    WORD PTR [ebp-0x50],dx
  4124a6:	mov    WORD PTR [ebp-0x4e],ax
  4124aa:	lea    eax,[ecx-0x17]
  4124ad:	mov    WORD PTR [ebp-0x4c],ax
  4124b1:	add    eax,0x5
  4124b4:	mov    WORD PTR [ebp-0x4a],ax
  4124b8:	lea    eax,[ecx-0x21]
  4124bb:	mov    WORD PTR [ebp-0x48],ax
  4124bf:	mov    WORD PTR [ebp-0x46],cx
  4124c3:	mov    WORD PTR [ebp-0x44],di
  4124c7:	mov    eax,DWORD PTR [ebp+0x8]
  4124ca:	movzx  ecx,WORD PTR [ebp-0x54]
  4124ce:	xor    eax,ebx
  4124d0:	add    eax,esi
  4124d2:	xor    eax,ecx
  4124d4:	mov    WORD PTR [ebp-0x54],ax
  4124d8:	mov    eax,DWORD PTR [ebp+0x8]
  4124db:	movzx  ecx,WORD PTR [ebp-0x40]
  4124df:	xor    eax,ebx
  4124e1:	add    eax,esi
  4124e3:	xor    eax,ecx
  4124e5:	mov    WORD PTR [ebp-0x40],ax
  4124e9:	xor    eax,eax
  4124eb:	mov    WORD PTR [ebp-0xd0],ax
  4124f2:	mov    WORD PTR [ebp-0xe4],ax
  4124f9:	mov    edi,DWORD PTR [ebp+0x24]
  4124fc:	lea    eax,[ebp-0xd0]
  412502:	lea    edx,[ebp-0x54]
  412505:	mov    DWORD PTR [ebp-0xbc],0x2
  41250f:	mov    DWORD PTR [ebp-0xb8],eax
  412515:	call   0x414ea6
  41251a:	mov    DWORD PTR [ebp-0xb4],eax
  412520:	lea    eax,[ebp-0xbc]
  412526:	push   eax
  412527:	mov    eax,DWORD PTR [ebp+0xc]
  41252a:	xor    eax,ebx
  41252c:	add    eax,esi
  41252e:	push   eax
  41252f:	lea    eax,[ebp-0x78]
  412532:	push   eax
  412533:	push   DWORD PTR [ebp-0x8]
  412536:	mov    eax,DWORD PTR [ebp+0x10]
  412539:	call   eax
  41253b:	mov    edi,DWORD PTR [ebp+0x24]
  41253e:	lea    eax,[ebp-0xe4]
  412544:	lea    edx,[ebp-0x40]
  412547:	mov    DWORD PTR [ebp-0xb8],eax
  41254d:	call   0x414ea6
  412552:	mov    DWORD PTR [ebp-0xb4],eax
  412558:	lea    eax,[ebp-0xbc]
  41255e:	push   eax
  41255f:	mov    eax,DWORD PTR [ebp+0xc]
  412562:	xor    eax,ebx
  412564:	add    eax,esi
  412566:	push   eax
  412567:	lea    eax,[ebp-0x78]
  41256a:	push   eax
  41256b:	push   DWORD PTR [ebp-0x8]
  41256e:	mov    eax,DWORD PTR [ebp+0x10]
  412571:	call   eax
  412573:	mov    eax,DWORD PTR [ebp+0x14]
  412576:	push   DWORD PTR [ebp-0x4]
  412579:	push   DWORD PTR [ebp+0x20]
  41257c:	push   DWORD PTR [ebp+0x1c]
  41257f:	push   DWORD PTR [ebp+0x18]
  412582:	push   DWORD PTR [ebp+0x10]
  412585:	push   DWORD PTR [ebp+0x8]
  412588:	push   DWORD PTR [ebp+0xc]
  41258b:	call   0x41374a
  412590:	add    DWORD PTR [ebp-0x4],eax
  412593:	mov    eax,DWORD PTR [ebp-0x4]
  412596:	mov    eax,DWORD PTR [ebp-0x4]
  412599:	mov    edi,DWORD PTR [eax+0x190]
  41259f:	mov    eax,DWORD PTR [ebp-0x4]
  4125a2:	mov    eax,DWORD PTR [eax+0x18c]
  4125a8:	mov    esi,DWORD PTR [eax]
  4125aa:	lea    ecx,[ebp+0x4]
  4125ad:	mov    edx,DWORD PTR [ecx]
  4125af:	cmp    edx,esi
  4125b1:	jb     0x4125c8
  4125b3:	mov    eax,DWORD PTR [edi]
  4125b5:	mov    edi,DWORD PTR [eax+0x3c]
  4125b8:	mov    edi,DWORD PTR [edi+eax*1+0x50]
  4125bc:	add    edi,esi
  4125be:	cmp    edx,edi
  4125c0:	jae    0x4125c8
  4125c2:	sub    eax,esi
  4125c4:	add    eax,edx
  4125c6:	mov    DWORD PTR [ecx],eax
  4125c8:	pop    esi
  4125c9:	pop    edi
  4125ca:	pop    ebx
  4125cb:	leave  
  4125cc:	ret    0x20
  4125cf:	push   edi
  4125d0:	push   esi
  4125d1:	push   ebx
  4125d2:	push   ebp
  4125d3:	mov    ebp,esp
  4125d5:	mov    eax,DWORD PTR [ebp+0x24]
  4125d8:	add    DWORD PTR [ebp+0x28],eax
  4125db:	push   eax
  4125dc:	cld    
  4125dd:	mov    esi,DWORD PTR [ebp+0x18]
  4125e0:	add    DWORD PTR [ebp+0x1c],esi
  4125e3:	push   esi
  4125e4:	mov    esi,DWORD PTR [ebp+0x14]
  4125e7:	lods   eax,DWORD PTR ds:[esi]
  4125e8:	xchg   edx,eax
  4125e9:	push   edx
  4125ea:	mov    cl,BYTE PTR [esi-0x2]
  4125ed:	or     eax,0xffffffff
  4125f0:	shl    eax,cl
  4125f2:	not    eax
  4125f4:	push   eax
  4125f5:	mov    cl,dh
  4125f7:	or     eax,0xffffffff
  4125fa:	shl    eax,cl
  4125fc:	not    eax
  4125fe:	push   eax
  4125ff:	add    cl,dl
  412601:	mov    edi,esi
  412603:	sub    esp,0xc
  412606:	sub    eax,eax
  412608:	inc    eax
  412609:	push   eax
  41260a:	push   eax
  41260b:	push   eax
  41260c:	push   eax
  41260d:	push   eax
  41260e:	push   edi
  41260f:	sub    esi,esi
  412611:	push   esi
  412612:	or     ebx,0xffffffff
  412615:	mov    eax,0x300
  41261a:	shl    eax,cl
  41261c:	lea    ecx,[eax+0x736]
  412622:	mov    eax,0x4000400
  412627:	shr    ecx,1
  412629:	rep stos DWORD PTR es:[edi],eax
  41262b:	push   0x5
  41262d:	pop    ecx
  41262e:	call   0x412919
  412633:	loop   0x41262e
  412635:	lea    esi,[esi]
  412637:	lea    edi,[edi]
  412639:	mov    edi,DWORD PTR [ebp-0x4]
  41263c:	mov    eax,DWORD PTR [ebp-0x10]
  41263f:	sub    edi,DWORD PTR [ebp+0x24]
  412642:	and    eax,edi
  412644:	mov    DWORD PTR [ebp-0x18],eax
  412647:	mov    al,0x0
  412649:	call   0x412931
  41264e:	jne    0x4126e9
  412654:	mov    cl,BYTE PTR [ebp-0xc]
  412657:	and    edi,DWORD PTR [ebp-0x14]
  41265a:	shl    edi,cl
  41265c:	sub    cl,0x8
  41265f:	neg    cl
  412661:	shr    esi,cl
  412663:	pop    eax
  412664:	add    edi,esi
  412666:	pop    esi
  412667:	lea    edi,[edi+edi*2]
  41266a:	shl    edi,0x8
  41266d:	cmp    al,0x7
  41266f:	pop    edx
  412670:	lea    ecx,[esi+edi*2+0xe6c]
  412677:	push   ecx
  412678:	push   esi
  412679:	mov    esi,0x100
  41267e:	push   eax
  41267f:	mov    al,0x1
  412681:	jb     0x4126b7
  412683:	mov    edi,DWORD PTR [ebp-0x4]
  412686:	sub    edi,DWORD PTR [ebp-0x24]
  412689:	movzx  edi,BYTE PTR [edi]
  41268c:	mov    ebp,DWORD PTR [ebp-0x34]
  41268f:	shl    edi,1
  412691:	mov    ecx,esi
  412693:	and    esi,edi
  412695:	add    ecx,esi
  412697:	lea    ebp,[ebp+ecx*2+0x0]
  41269b:	call   0x412950
  4126a0:	mov    ecx,eax
  4126a2:	shr    esi,0x8
  4126a5:	and    ecx,0x1
  4126a8:	cmp    esi,ecx
  4126aa:	mov    esi,0x100
  4126af:	jne    0x4126bf
  4126b1:	cmp    eax,esi
  4126b3:	jb     0x41268c
  4126b5:	jmp    0x4126cb
  4126b7:	mov    ebp,DWORD PTR [ebp-0x34]
  4126ba:	call   0x412950
  4126bf:	inc    eax
  4126c0:	inc    esi
  4126c1:	sub    eax,0x1
  4126c4:	sub    esi,0x1
  4126c7:	cmp    eax,esi
  4126c9:	jb     0x4126b7
  4126cb:	pop    edx
  4126cc:	inc    edx
  4126cd:	cmp    edx,0x5
  4126d0:	dec    edx
  4126d1:	mov    ecx,edx
  4126d3:	jb     0x4126e4
  4126d5:	inc    edx
  4126d6:	cmp    edx,0xb
  4126d9:	dec    edx
  4126da:	mov    cl,0x4
  4126dc:	dec    cl
  4126de:	jb     0x4126e4
  4126e0:	mov    cl,0x7
  4126e2:	dec    cl
  4126e4:	sub    edx,ecx
  4126e6:	push   edx
  4126e7:	jmp    0x412738
  4126e9:	mov    al,0xc1
  4126eb:	dec    al
  4126ed:	call   0x412941
  4126f2:	jne    0x412708
  4126f4:	pop    eax
  4126f5:	pop    edi
  4126f6:	pop    edx
  4126f7:	pop    ecx
  4126f8:	pop    edx
  4126f9:	pop    ecx
  4126fa:	push   DWORD PTR [esp]
  4126fd:	push   ecx
  4126fe:	push   edx
  4126ff:	mov    edx,0x664
  412704:	mov    cl,0x0
  412706:	jmp    0x41277b
  412708:	mov    al,0xcd
  41270a:	dec    al
  41270c:	call   0x412941
  412711:	jne    0x412741
  412713:	mov    al,0xf1
  412715:	dec    al
  412717:	call   0x412931
  41271c:	jne    0x412771
  41271e:	pop    eax
  41271f:	cmp    al,0x7
  412721:	mov    al,0x9
  412723:	jb     0x412727
  412725:	mov    al,0xb
  412727:	push   eax
  412728:	mov    esi,DWORD PTR [ebp-0x4]
  41272b:	sub    esi,DWORD PTR [ebp-0x24]
  41272e:	cmp    esi,DWORD PTR [ebp+0x24]
  412731:	jb     0x412908
  412737:	lods   al,BYTE PTR ds:[esi]
  412738:	mov    edi,DWORD PTR [ebp-0x4]
  41273b:	stos   BYTE PTR es:[edi],al
  41273c:	jmp    0x4128cf
  412741:	mov    al,0xd8
  412743:	call   0x412941
  412748:	mov    esi,DWORD PTR [ebp-0x28]
  41274b:	je     0x412768
  41274d:	mov    al,0xe4
  41274f:	call   0x412941
  412754:	mov    esi,DWORD PTR [ebp-0x2c]
  412757:	je     0x412762
  412759:	mov    esi,DWORD PTR [ebp-0x30]
  41275c:	mov    ecx,DWORD PTR [ebp-0x2c]
  41275f:	mov    DWORD PTR [ebp-0x30],ecx
  412762:	mov    ecx,DWORD PTR [ebp-0x28]
  412765:	mov    DWORD PTR [ebp-0x2c],ecx
  412768:	mov    ecx,DWORD PTR [ebp-0x24]
  41276b:	mov    DWORD PTR [ebp-0x28],ecx
  41276e:	mov    DWORD PTR [ebp-0x24],esi
  412771:	pop    eax
  412772:	pop    edi
  412773:	pop    ecx
  412774:	mov    edx,0xa68
  412779:	mov    cl,0x8
  41277b:	add    edx,edi
  41277d:	push   edx
  41277e:	push   edi
  41277f:	cmp    al,0x7
  412781:	mov    al,cl
  412783:	jb     0x412787
  412785:	add    al,0x3
  412787:	push   eax
  412788:	mov    ebp,DWORD PTR [ebp-0x34]
  41278b:	call   0x41294e
  412790:	jne    0x4127a6
  412792:	mov    eax,DWORD PTR [ebp-0x18]
  412795:	mov    edi,DWORD PTR [ebp-0x34]
  412798:	shl    eax,0x3
  41279b:	sub    ecx,ecx
  41279d:	push   0x8
  41279f:	pop    esi
  4127a0:	lea    edi,[edi+eax*2+0x4]
  4127a4:	jmp    0x4127db
  4127a6:	mov    ebp,DWORD PTR [ebp-0x34]
  4127a9:	add    ebp,0x2
  4127ac:	call   0x41294e
  4127b1:	jne    0x4127cb
  4127b3:	mov    eax,DWORD PTR [ebp-0x18]
  4127b6:	mov    edi,DWORD PTR [ebp-0x34]
  4127b9:	shl    eax,0x3
  4127bc:	push   0x8
  4127be:	pop    ecx
  4127bf:	push   0x8
  4127c1:	pop    esi
  4127c2:	lea    edi,[edi+eax*2+0x104]
  4127c9:	jmp    0x4127db
  4127cb:	mov    edi,0x204
  4127d0:	add    edi,DWORD PTR [ebp-0x34]
  4127d3:	push   0x10
  4127d5:	pop    ecx
  4127d6:	mov    esi,0x100
  4127db:	mov    DWORD PTR [ebp-0x1c],ecx
  4127de:	sub    eax,eax
  4127e0:	inc    eax
  4127e1:	mov    ebp,edi
  4127e3:	call   0x412950
  4127e8:	mov    ecx,eax
  4127ea:	sub    ecx,esi
  4127ec:	jb     0x4127e1
  4127ee:	add    DWORD PTR [ebp-0x1c],ecx
  4127f1:	cmp    DWORD PTR [ebp-0x3c],0x4
  4127f5:	jae    0x4128ab
  4127fb:	add    DWORD PTR [ebp-0x3c],0x7
  4127ff:	mov    ecx,DWORD PTR [ebp-0x1c]
  412802:	cmp    ecx,0x4
  412805:	jb     0x41280a
  412807:	push   0x3
  412809:	pop    ecx
  41280a:	mov    edi,DWORD PTR [ebp-0x38]
  41280d:	shl    ecx,0x6
  412810:	sub    eax,eax
  412812:	inc    eax
  412813:	push   0x40
  412815:	pop    esi
  412816:	lea    edi,[edi+ecx*2+0x360]
  41281d:	mov    ebp,edi
  41281f:	call   0x412950
  412824:	mov    ecx,eax
  412826:	sub    ecx,esi
  412828:	jb     0x41281d
  41282a:	mov    DWORD PTR [ebp-0x18],ecx
  41282d:	mov    DWORD PTR [ebp-0x24],ecx
  412830:	cmp    ecx,0x4
  412833:	jb     0x4128a8
  412835:	mov    esi,ecx
  412837:	and    DWORD PTR [ebp-0x24],0x1
  41283b:	shr    esi,1
  41283d:	or     DWORD PTR [ebp-0x24],0x2
  412841:	dec    esi
  412842:	cmp    ecx,0xe
  412845:	jae    0x412860
  412847:	mov    eax,0x2af
  41284c:	sub    eax,ecx
  41284e:	mov    ecx,esi
  412850:	shl    BYTE PTR [ebp-0x24],cl
  412853:	add    eax,DWORD PTR [ebp-0x24]
  412856:	shl    eax,1
  412858:	add    eax,DWORD PTR [ebp-0x38]
  41285b:	mov    DWORD PTR [ebp-0x34],eax
  41285e:	jmp    0x41288d
  412860:	sub    esi,0x4
  412863:	call   0x41290d
  412868:	shr    ebx,1
  41286a:	shl    DWORD PTR [ebp-0x24],1
  41286d:	cmp    DWORD PTR [ebp-0x20],ebx
  412870:	jb     0x412878
  412872:	inc    DWORD PTR [ebp-0x24]
  412875:	sub    DWORD PTR [ebp-0x20],ebx
  412878:	dec    esi
  412879:	jne    0x412863
  41287b:	mov    eax,0x644
  412880:	add    eax,DWORD PTR [ebp-0x38]
  412883:	mov    DWORD PTR [ebp-0x34],eax
  412886:	shl    DWORD PTR [ebp-0x24],0x4
  41288a:	push   0x4
  41288c:	pop    esi
  41288d:	sub    edi,edi
  41288f:	inc    edi
  412890:	mov    eax,edi
  412892:	mov    ebp,DWORD PTR [ebp-0x34]
  412895:	call   0x412950
  41289a:	test   al,0x1
  41289c:	je     0x4128a1
  41289e:	or     DWORD PTR [ebp-0x24],edi
  4128a1:	shl    edi,1
  4128a3:	dec    esi
  4128a4:	jne    0x412892
  4128a6:	jmp    0x4128a8
  4128a8:	inc    DWORD PTR [ebp-0x24]
  4128ab:	mov    ecx,DWORD PTR [ebp-0x1c]
  4128ae:	add    ecx,0x2
  4128b1:	mov    edi,DWORD PTR [ebp-0x4]
  4128b4:	mov    eax,edi
  4128b6:	sub    eax,DWORD PTR [ebp+0x24]
  4128b9:	cmp    DWORD PTR [ebp-0x24],eax
  4128bc:	ja     0x412908
  4128be:	mov    esi,edi
  4128c0:	sub    esi,DWORD PTR [ebp-0x24]
  4128c3:	mov    edx,DWORD PTR [ebp+0x28]
  4128c6:	lods   al,BYTE PTR ds:[esi]
  4128c7:	stos   BYTE PTR es:[edi],al
  4128c8:	cmp    edi,edx
  4128ca:	jae    0x4128cf
  4128cc:	dec    ecx
  4128cd:	jne    0x4128c6
  4128cf:	mov    DWORD PTR [ebp-0x4],edi
  4128d2:	movzx  esi,al
  4128d5:	cmp    edi,DWORD PTR [ebp+0x28]
  4128d8:	jb     0x412639
  4128de:	call   0x41290d
  4128e3:	sub    eax,eax
  4128e5:	lea    ebp,[esp+0x3c]
  4128e9:	mov    edx,DWORD PTR [ebp+0x20]
  4128ec:	mov    esi,DWORD PTR [ebp-0x8]
  4128ef:	sub    esi,DWORD PTR [ebp+0x18]
  4128f2:	mov    DWORD PTR [edx],esi
  4128f4:	mov    edx,DWORD PTR [ebp+0x2c]
  4128f7:	mov    edi,DWORD PTR [ebp-0x4]
  4128fa:	sub    edi,DWORD PTR [ebp+0x24]
  4128fd:	mov    DWORD PTR [edx],edi
  4128ff:	leave  
  412900:	pop    ebx
  412901:	pop    esi
  412902:	pop    edi
  412903:	ret    0x1c
  412906:	pop    esi
  412907:	pop    eax
  412908:	sub    eax,eax
  41290a:	inc    eax
  41290b:	jmp    0x4128e5
  41290d:	cmp    ebx,0x1000000
  412913:	jb     0x412916
  412915:	ret    
  412916:	shl    ebx,0x8
  412919:	push   esi
  41291a:	mov    esi,DWORD PTR [ebp-0x8]
  41291d:	cmp    esi,DWORD PTR [ebp+0x1c]
  412920:	jae    0x412906
  412922:	mov    eax,DWORD PTR [ebp-0x20]
  412925:	shl    eax,0x8
  412928:	lods   al,BYTE PTR ds:[esi]
  412929:	mov    DWORD PTR [ebp-0x20],eax
  41292c:	mov    DWORD PTR [ebp-0x8],esi
  41292f:	pop    esi
  412930:	ret    
  412931:	mov    ecx,DWORD PTR [ebp-0x3c]
  412934:	movzx  eax,al
  412937:	shl    ecx,0x4
  41293a:	add    eax,DWORD PTR [ebp-0x18]
  41293d:	add    eax,ecx
  41293f:	jmp    0x412947
  412941:	movzx  eax,al
  412944:	add    eax,DWORD PTR [ebp-0x3c]
  412947:	mov    ebp,DWORD PTR [ebp-0x38]
  41294a:	lea    ebp,[ebp+eax*2+0x0]
  41294e:	sub    eax,eax
  412950:	lea    ebp,[ebp+eax*2+0x0]
  412954:	cmp    ebx,0x1000000
  41295a:	jae    0x412978
  41295c:	mov    ecx,DWORD PTR [esp+0x38]
  412960:	shl    DWORD PTR [esp+0x20],0x8
  412965:	cmp    ecx,DWORD PTR [esp+0x5c]
  412969:	jae    0x412907
  41296b:	mov    dl,BYTE PTR [ecx]
  41296d:	inc    DWORD PTR [esp+0x38]
  412971:	shl    ebx,0x8
  412974:	mov    BYTE PTR [esp+0x20],dl
  412978:	mov    ecx,ebx
  41297a:	movzx  edx,WORD PTR [ebp+0x0]
  41297e:	shr    ecx,0xb
  412981:	imul   ecx,edx
  412984:	cmp    DWORD PTR [esp+0x20],ecx
  412988:	jae    0x4129a1
  41298a:	mov    ebx,ecx
  41298c:	mov    ecx,0x800
  412991:	sub    ecx,edx
  412993:	shr    ecx,0x5
  412996:	add    WORD PTR [ebp+0x0],cx
  41299a:	add    eax,eax
  41299c:	lea    ebp,[esp+0x40]
  4129a0:	ret    
  4129a1:	shr    edx,0x5
  4129a4:	sub    DWORD PTR [esp+0x20],ecx
  4129a8:	sub    ebx,ecx
  4129aa:	sub    WORD PTR [ebp+0x0],dx
  4129ae:	add    eax,eax
  4129b0:	add    eax,0x1
  4129b3:	lea    ebp,[esp+0x40]
  4129b7:	ret    
  4129b8:	push   ebp
  4129b9:	mov    ebp,esp
  4129bb:	sub    esp,0x104
  4129c1:	push   ebx
  4129c2:	push   esi
  4129c3:	push   edi
  4129c4:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  4129cb:	mov    DWORD PTR [ebp-0x44],0xf89c85b4
  4129d2:	mov    eax,DWORD PTR [ebp+0x8]
  4129d5:	mov    DWORD PTR [ebp+0x8],eax
  4129d8:	mov    ecx,DWORD PTR [ebp-0x10]
  4129db:	mov    ebx,0x7510897
  4129e0:	xor    ecx,ebx
  4129e2:	mov    eax,0x3272de
  4129e7:	add    ecx,eax
  4129e9:	mov    DWORD PTR [ebp-0x28],ecx
  4129ec:	mov    ecx,DWORD PTR [ebp-0x10]
  4129ef:	xor    ecx,ebx
  4129f1:	add    ecx,eax
  4129f3:	mov    DWORD PTR [ebp-0x40],ecx
  4129f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4129f9:	xor    ecx,ebx
  4129fb:	add    ecx,eax
  4129fd:	mov    DWORD PTR [ebp-0x3c],ecx
  412a00:	mov    ecx,DWORD PTR [ebp-0x10]
  412a03:	xor    ecx,ebx
  412a05:	add    ecx,eax
  412a07:	mov    DWORD PTR [ebp-0xa0],ecx
  412a0d:	mov    DWORD PTR [ebp-0x50],0xf89f05b5
  412a14:	mov    DWORD PTR [ebp-0x3c],0xf89cb5b5
  412a1b:	mov    DWORD PTR [ebp-0x4c],0xf89c85b1
  412a22:	push   0x24
  412a24:	pop    ecx
  412a25:	mov    DWORD PTR [ebp-0x2c],ecx
  412a28:	mov    DWORD PTR [ebp-0x2c],ecx
  412a2b:	push   0x64
  412a2d:	pop    ecx
  412a2e:	mov    DWORD PTR [ebp-0x2c],ecx
  412a31:	mov    DWORD PTR [ebp-0x2c],ecx
  412a34:	mov    DWORD PTR [ebp-0x2c],0x4c
  412a3b:	mov    DWORD PTR [ebp-0x2c],0x42
  412a42:	mov    ecx,DWORD PTR [ebp-0x10]
  412a45:	xor    ecx,ebx
  412a47:	add    ecx,eax
  412a49:	mov    DWORD PTR [ebp-0x2c],ecx
  412a4c:	mov    ecx,DWORD PTR [ebp-0x10]
  412a4f:	xor    ecx,ebx
  412a51:	add    ecx,eax
  412a53:	mov    DWORD PTR [ebp-0x2c],ecx
  412a56:	mov    DWORD PTR [ebp-0x24],0x256
  412a5d:	mov    DWORD PTR [ebp-0x34],0x34
  412a64:	mov    DWORD PTR [ebp-0x14],0x78
  412a6b:	lea    edi,[ebp-0xe4]
  412a71:	lea    esi,[ebp-0x104]
  412a77:	call   0x4136b9
  412a7c:	dec    DWORD PTR [ebp-0x14]
  412a7f:	jne    0x412a6b
  412a81:	dec    DWORD PTR [ebp-0x34]
  412a84:	jne    0x412a64
  412a86:	dec    DWORD PTR [ebp-0x24]
  412a89:	jne    0x412a5d
  412a8b:	mov    DWORD PTR [ebp-0x24],0x400c
  412a92:	mov    eax,DWORD PTR [ebp-0x10]
  412a95:	xor    eax,ebx
  412a97:	mov    esi,0x3272de
  412a9c:	add    eax,esi
  412a9e:	mov    DWORD PTR [ebp-0x1c],eax
  412aa1:	mov    eax,DWORD PTR [ebp-0x10]
  412aa4:	and    DWORD PTR [ebp-0x94],0x0
  412aab:	xor    eax,ebx
  412aad:	add    eax,esi
  412aaf:	mov    DWORD PTR [ebp-0x38],eax
  412ab2:	mov    eax,fs:0x18
  412ab8:	mov    DWORD PTR [ebp-0x94],eax
  412abe:	mov    eax,DWORD PTR [eax+0x30]
  412ac1:	mov    DWORD PTR [ebp-0x98],eax
  412ac7:	mov    eax,DWORD PTR [eax+0xc]
  412aca:	mov    DWORD PTR [ebp-0xc0],eax
  412ad0:	mov    eax,DWORD PTR [ebp+0x8]
  412ad3:	lea    ecx,[ebp-0x94]
  412ad9:	mov    DWORD PTR [eax+0x1a0],ecx
  412adf:	mov    eax,DWORD PTR [ebp+0x8]
  412ae2:	lea    ecx,[ebp-0x98]
  412ae8:	mov    DWORD PTR [eax+0x1a4],ecx
  412aee:	mov    eax,DWORD PTR [ebp+0x8]
  412af1:	push   DWORD PTR [ebp+0x8]
  412af4:	lea    ecx,[ebp-0xc0]
  412afa:	mov    DWORD PTR [eax+0x1a8],ecx
  412b00:	call   0x414e77
  412b05:	mov    ecx,DWORD PTR [ebp-0x10]
  412b08:	xor    ecx,ebx
  412b0a:	add    ecx,esi
  412b0c:	cmp    ecx,eax
  412b0e:	je     0x412deb
  412b14:	mov    eax,DWORD PTR [ebp+0x8]
  412b17:	mov    eax,DWORD PTR [eax+0x194]
  412b1d:	mov    ecx,DWORD PTR [eax]
  412b1f:	mov    eax,DWORD PTR [ebp+0x8]
  412b22:	mov    eax,DWORD PTR [eax+0x194]
  412b28:	mov    eax,DWORD PTR [eax]
  412b2a:	add    eax,DWORD PTR [ecx+0x3c]
  412b2d:	mov    ecx,DWORD PTR [ebp+0x8]
  412b30:	mov    ecx,DWORD PTR [ecx+0x1d8]
  412b36:	lea    edx,[ebp-0xc4]
  412b3c:	push   edx
  412b3d:	mov    edx,DWORD PTR [ebp+0x8]
  412b40:	mov    edx,DWORD PTR [edx+0x18c]
  412b46:	mov    edx,DWORD PTR [edx]
  412b48:	add    edx,DWORD PTR [eax+0x88]
  412b4e:	push   0x4
  412b50:	push   DWORD PTR [eax+0x8c]
  412b56:	push   edx
  412b57:	call   DWORD PTR [ecx+0x1c]
  412b5a:	push   DWORD PTR [ebp+0x8]
  412b5d:	mov    edi,DWORD PTR [ebp+0x8]
  412b60:	mov    eax,DWORD PTR [ebp+0x8]
  412b63:	mov    edx,DWORD PTR [eax+0x1b8]
  412b69:	mov    DWORD PTR [ebp-0x68],0xe0c0f04
  412b70:	mov    DWORD PTR [ebp-0x64],0x108051f
  412b77:	mov    WORD PTR [ebp-0x60],0x7839
  412b7d:	mov    DWORD PTR [ebp-0x90],0x3f0f21
  412b87:	mov    DWORD PTR [ebp-0x8c],0x4390e19
  412b91:	mov    DWORD PTR [ebp-0x88],0x2a190008
  412b9b:	mov    DWORD PTR [ebp-0x84],0xe1d050d
  412ba5:	mov    DWORD PTR [ebp-0x80],0x78391f01
  412bac:	mov    DWORD PTR [ebp-0x7c],0x3f0f21
  412bb3:	mov    DWORD PTR [ebp-0x78],0x4390e19
  412bba:	mov    DWORD PTR [ebp-0x74],0x2a190008
  412bc1:	mov    DWORD PTR [ebp-0x70],0xe1d050d
  412bc8:	mov    DWORD PTR [ebp-0x6c],0x78131f01
  412bcf:	call   0x414ea6
  412bd4:	push   eax
  412bd5:	mov    eax,DWORD PTR [ebp+0x8]
  412bd8:	mov    eax,DWORD PTR [eax+0x1a8]
  412bde:	push   DWORD PTR [eax]
  412be0:	call   0x414b48
  412be5:	test   eax,eax
  412be7:	jne    0x412c39
  412be9:	mov    eax,DWORD PTR [ebp+0x8]
  412bec:	mov    eax,DWORD PTR [eax+0x1d8]
  412bf2:	mov    edi,DWORD PTR [ebp+0x8]
  412bf5:	add    eax,0x4
  412bf8:	mov    DWORD PTR [ebp-0x20],eax
  412bfb:	mov    eax,DWORD PTR [ebp+0x8]
  412bfe:	mov    edx,DWORD PTR [eax+0x1b8]
  412c04:	call   0x414ea6
  412c09:	push   eax
  412c0a:	mov    eax,DWORD PTR [ebp-0x20]
  412c0d:	call   DWORD PTR [eax]
  412c0f:	test   eax,eax
  412c11:	jne    0x412c39
  412c13:	mov    eax,DWORD PTR [ebp+0x8]
  412c16:	mov    eax,DWORD PTR [eax+0x1d8]
  412c1c:	mov    edi,DWORD PTR [ebp+0x8]
  412c1f:	add    eax,0x10
  412c22:	mov    DWORD PTR [ebp-0x20],eax
  412c25:	mov    eax,DWORD PTR [ebp+0x8]
  412c28:	mov    edx,DWORD PTR [eax+0x1b8]
  412c2e:	call   0x414ea6
  412c33:	push   eax
  412c34:	mov    eax,DWORD PTR [ebp-0x20]
  412c37:	call   DWORD PTR [eax]
  412c39:	mov    eax,DWORD PTR [ebp-0x10]
  412c3c:	mov    ecx,DWORD PTR [ebp-0x24]
  412c3f:	xor    eax,ebx
  412c41:	add    eax,esi
  412c43:	cmp    eax,ecx
  412c45:	je     0x412dc4
  412c4b:	mov    eax,DWORD PTR [ebp-0x44]
  412c4e:	xor    eax,ebx
  412c50:	mov    ecx,0xffcd8d22
  412c55:	sub    ecx,eax
  412c57:	add    ecx,DWORD PTR [ebp-0x24]
  412c5a:	mov    eax,DWORD PTR [ebp-0x1c]
  412c5d:	cmp    eax,ecx
  412c5f:	ja     0x412dc4
  412c65:	mov    DWORD PTR [ebp-0x34],0x0
  412c6c:	push   DWORD PTR [ebp+0x8]
  412c6f:	mov    edi,DWORD PTR [ebp+0x8]
  412c72:	mov    eax,DWORD PTR [ebp+0x8]
  412c75:	mov    edx,DWORD PTR [eax+0x1b4]
  412c7b:	call   0x414ea6
  412c80:	push   eax
  412c81:	mov    eax,DWORD PTR [ebp+0x8]
  412c84:	mov    eax,DWORD PTR [eax+0x1a8]
  412c8a:	push   DWORD PTR [eax]
  412c8c:	call   0x414b48
  412c91:	mov    ecx,DWORD PTR [ebp+0x8]
  412c94:	mov    ecx,DWORD PTR [ecx+0x19c]
  412c9a:	mov    DWORD PTR [ecx],eax
  412c9c:	mov    eax,DWORD PTR [ebp+0x8]
  412c9f:	mov    edi,DWORD PTR [eax+0x1d8]
  412ca5:	mov    esi,DWORD PTR [ebp+0x8]
  412ca8:	xor    eax,eax
  412caa:	lea    edx,[ebp-0x7c]
  412cad:	call   0x414edc
  412cb2:	push   eax
  412cb3:	mov    eax,DWORD PTR [ebp+0x8]
  412cb6:	mov    eax,DWORD PTR [eax+0x19c]
  412cbc:	push   DWORD PTR [eax]
  412cbe:	call   DWORD PTR [edi+0x8]
  412cc1:	mov    DWORD PTR [ebp-0x20],eax
  412cc4:	mov    eax,DWORD PTR [ebp+0x8]
  412cc7:	mov    edi,DWORD PTR [eax+0x1d8]
  412ccd:	mov    esi,DWORD PTR [ebp+0x8]
  412cd0:	xor    eax,eax
  412cd2:	lea    edx,[ebp-0x90]
  412cd8:	call   0x414edc
  412cdd:	push   eax
  412cde:	mov    eax,DWORD PTR [ebp+0x8]
  412ce1:	mov    eax,DWORD PTR [eax+0x19c]
  412ce7:	push   DWORD PTR [eax]
  412ce9:	call   DWORD PTR [edi+0x8]
  412cec:	and    DWORD PTR [ebp-0x8],0x0
  412cf0:	mov    eax,DWORD PTR [ebp-0x8]
  412cf3:	and    eax,0x7
  412cf6:	add    eax,0x31
  412cf9:	push   eax
  412cfa:	call   DWORD PTR [ebp-0x20]
  412cfd:	test   eax,eax
  412cff:	jne    0x412d06
  412d01:	and    DWORD PTR [ebp-0x14],eax
  412d04:	jmp    0x412d2e
  412d06:	mov    eax,DWORD PTR [ebp+0x8]
  412d09:	mov    edi,DWORD PTR [eax+0x1d8]
  412d0f:	mov    esi,DWORD PTR [ebp+0x8]
  412d12:	xor    eax,eax
  412d14:	lea    edx,[ebp-0x68]
  412d17:	call   0x414edc
  412d1c:	push   eax
  412d1d:	mov    eax,DWORD PTR [ebp+0x8]
  412d20:	mov    eax,DWORD PTR [eax+0x198]
  412d26:	push   DWORD PTR [eax]
  412d28:	call   DWORD PTR [edi+0x8]
  412d2b:	mov    DWORD PTR [ebp-0x14],eax
  412d2e:	inc    DWORD PTR [ebp-0x8]
  412d31:	cmp    DWORD PTR [ebp-0x8],0x10
  412d35:	jb     0x412cf0
  412d37:	mov    eax,DWORD PTR [ebp-0x44]
  412d3a:	mov    esi,DWORD PTR [ebp+0x8]
  412d3d:	xor    eax,ebx
  412d3f:	mov    edi,0x3272de
  412d44:	add    eax,edi
  412d46:	lea    edx,[ebp-0xe4]
  412d4c:	call   0x414edc
  412d51:	push   eax
  412d52:	mov    eax,DWORD PTR [ebp-0x10]
  412d55:	mov    esi,DWORD PTR [ebp+0x8]
  412d58:	xor    eax,ebx
  412d5a:	add    eax,edi
  412d5c:	lea    edx,[ebp-0x104]
  412d62:	call   0x414edc
  412d67:	push   eax
  412d68:	call   DWORD PTR [ebp-0x14]
  412d6b:	mov    ecx,DWORD PTR [ebp-0x10]
  412d6e:	xor    ecx,ebx
  412d70:	add    ecx,edi
  412d72:	cmp    ecx,eax
  412d74:	jne    0x412d7d
  412d76:	mov    DWORD PTR [ebp-0x34],0x1
  412d7d:	mov    eax,DWORD PTR [ebp-0x44]
  412d80:	mov    ecx,DWORD PTR [ebp-0x1c]
  412d83:	xor    eax,ebx
  412d85:	lea    eax,[eax+ecx*1+0x3272de]
  412d8c:	mov    DWORD PTR [ebp-0x1c],eax
  412d8f:	mov    eax,DWORD PTR [ebp-0x34]
  412d92:	test   eax,eax
  412d94:	je     0x412da8
  412d96:	mov    eax,DWORD PTR [ebp-0x44]
  412d99:	mov    ecx,DWORD PTR [ebp-0x38]
  412d9c:	xor    eax,ebx
  412d9e:	lea    eax,[eax+ecx*1+0x3272de]
  412da5:	mov    DWORD PTR [ebp-0x38],eax
  412da8:	mov    eax,DWORD PTR [ebp-0x44]
  412dab:	xor    eax,ebx
  412dad:	mov    ecx,0xffcd8d22
  412db2:	sub    ecx,eax
  412db4:	add    ecx,DWORD PTR [ebp-0x24]
  412db7:	mov    eax,DWORD PTR [ebp-0x1c]
  412dba:	cmp    eax,ecx
  412dbc:	jbe    0x412c65
  412dc2:	mov    esi,edi
  412dc4:	mov    eax,DWORD PTR [ebp-0x38]
  412dc7:	mov    ecx,DWORD PTR [ebp-0x1c]
  412dca:	cmp    ecx,eax
  412dcc:	jne    0x412ddf
  412dce:	push   DWORD PTR [ebp+0x8]
  412dd1:	lea    eax,[ebp-0x40]
  412dd4:	push   eax
  412dd5:	call   0x415955
  412dda:	mov    DWORD PTR [ebp-0x28],eax
  412ddd:	jmp    0x412deb
  412ddf:	mov    eax,DWORD PTR [ebp-0x28]
  412de2:	mov    ecx,DWORD PTR [ebp-0x44]
  412de5:	xor    ecx,ebx
  412de7:	add    ecx,esi
  412de9:	xor    DWORD PTR [eax],ecx
  412deb:	mov    eax,DWORD PTR [ebp-0x10]
  412dee:	mov    ecx,DWORD PTR [ebp-0x28]
  412df1:	xor    eax,ebx
  412df3:	add    eax,esi
  412df5:	cmp    eax,ecx
  412df7:	je     0x413597
  412dfd:	mov    eax,DWORD PTR [ebp-0x10]
  412e00:	mov    ecx,DWORD PTR [ebp-0x40]
  412e03:	xor    eax,ebx
  412e05:	add    eax,esi
  412e07:	cmp    eax,ecx
  412e09:	je     0x413597
  412e0f:	mov    eax,DWORD PTR [ebp-0x10]
  412e12:	xor    eax,ebx
  412e14:	add    eax,esi
  412e16:	jmp    0x412e34
  412e18:	mov    edi,DWORD PTR [ebp-0x28]
  412e1b:	mov    cl,al
  412e1d:	and    cl,0x1f
  412e20:	or     dl,0xff
  412e23:	sub    dl,cl
  412e25:	add    BYTE PTR [edi+eax*1],dl
  412e28:	mov    ecx,DWORD PTR [ebp-0x44]
  412e2b:	xor    ecx,ebx
  412e2d:	lea    eax,[eax+ecx*1+0x3272de]
  412e34:	mov    ecx,DWORD PTR [ebp-0x40]
  412e37:	cmp    eax,ecx
  412e39:	jb     0x412e18
  412e3b:	mov    eax,DWORD PTR [ebp-0x40]
  412e3e:	mov    DWORD PTR [ebp-0x24],eax
  412e41:	mov    eax,DWORD PTR [ebp-0x28]
  412e44:	mov    DWORD PTR [ebp-0x38],0xf89c85b5
  412e4b:	mov    DWORD PTR [ebp-0xbc],eax
  412e51:	mov    edi,0xf89c85b4
  412e56:	mov    DWORD PTR [ebp-0x1c],edi
  412e59:	mov    eax,DWORD PTR [ebp-0x38]
  412e5c:	xor    eax,ebx
  412e5e:	add    eax,esi
  412e60:	mov    DWORD PTR [ebp-0xc],eax
  412e63:	mov    eax,DWORD PTR [ebp-0x38]
  412e66:	xor    eax,ebx
  412e68:	add    eax,esi
  412e6a:	mov    DWORD PTR [ebp-0x8],eax
  412e6d:	mov    DWORD PTR [ebp-0x48],0xf89c85d5
  412e74:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  412e7b:	mov    eax,DWORD PTR [ebp-0x38]
  412e7e:	mov    ecx,DWORD PTR [ebp-0x24]
  412e81:	xor    eax,ebx
  412e83:	add    eax,esi
  412e85:	cmp    ecx,eax
  412e87:	je     0x41309a
  412e8d:	jmp    0x413076
  412e92:	mov    ecx,DWORD PTR [ebp-0xc]
  412e95:	mov    eax,DWORD PTR [ebp-0x24]
  412e98:	sub    eax,ecx
  412e9a:	mov    ecx,DWORD PTR [ebp-0x48]
  412e9d:	xor    ecx,ebx
  412e9f:	add    ecx,esi
  412ea1:	xor    edx,edx
  412ea3:	div    ecx
  412ea5:	mov    DWORD PTR [ebp-0x8],eax
  412ea8:	mov    eax,DWORD PTR [ebp-0x54]
  412eab:	mov    ecx,DWORD PTR [ebp-0x8]
  412eae:	xor    eax,ebx
  412eb0:	add    eax,esi
  412eb2:	cmp    ecx,eax
  412eb4:	jbe    0x412ec0
  412eb6:	mov    eax,DWORD PTR [ebp-0x54]
  412eb9:	xor    eax,ebx
  412ebb:	add    eax,esi
  412ebd:	mov    DWORD PTR [ebp-0x8],eax
  412ec0:	mov    eax,DWORD PTR [ebp-0x48]
  412ec3:	mov    ecx,DWORD PTR [ebp-0x8]
  412ec6:	xor    eax,ebx
  412ec8:	add    eax,esi
  412eca:	imul   eax,ecx
  412ecd:	mov    DWORD PTR [ebp-0x8],eax
  412ed0:	mov    eax,DWORD PTR [ebp-0x38]
  412ed3:	mov    ecx,DWORD PTR [ebp-0x8]
  412ed6:	xor    eax,ebx
  412ed8:	add    eax,esi
  412eda:	cmp    ecx,eax
  412edc:	je     0x413064
  412ee2:	mov    eax,DWORD PTR [ebp-0x8]
  412ee5:	mov    DWORD PTR [ebp-0x14],eax
  412ee8:	mov    eax,DWORD PTR [ebp-0xc]
  412eeb:	add    eax,DWORD PTR [ebp-0xbc]
  412ef1:	mov    DWORD PTR [ebp-0x20],0xf89c85b5
  412ef8:	mov    DWORD PTR [ebp-0x34],edi
  412efb:	mov    DWORD PTR [ebp-0xa8],0xf89c85b3
  412f05:	mov    DWORD PTR [ebp-0x8],eax
  412f08:	mov    DWORD PTR [ebp-0x2c],0xf89c85b2
  412f0f:	mov    DWORD PTR [ebp-0x30],edi
  412f12:	mov    eax,DWORD PTR [ebp-0x20]
  412f15:	xor    eax,ebx
  412f17:	add    eax,esi
  412f19:	jmp    0x413023
  412f1e:	mov    eax,DWORD PTR [ebp-0x30]
  412f21:	mov    ecx,DWORD PTR [ebp-0x18]
  412f24:	xor    eax,ebx
  412f26:	add    eax,esi
  412f28:	imul   eax,ecx
  412f2b:	mov    ecx,DWORD PTR [ebp-0x8]
  412f2e:	mov    BYTE PTR [eax+ecx*1],0x0
  412f32:	mov    DWORD PTR [ebp-0xb0],0xf89c85bb
  412f3c:	mov    DWORD PTR [ebp-0xb8],0xf89c85a1
  412f46:	mov    eax,DWORD PTR [ebp-0x30]
  412f49:	mov    ecx,DWORD PTR [ebp-0x18]
  412f4c:	xor    eax,ebx
  412f4e:	add    eax,esi
  412f50:	imul   eax,ecx
  412f53:	mov    ecx,DWORD PTR [ebp-0x8]
  412f56:	mov    al,BYTE PTR [eax+ecx*1]
  412f59:	mov    BYTE PTR [ebp-0x2],al
  412f5c:	mov    eax,DWORD PTR [ebp-0x30]
  412f5f:	mov    ecx,DWORD PTR [ebp-0x18]
  412f62:	xor    eax,ebx
  412f64:	add    eax,esi
  412f66:	imul   eax,ecx
  412f69:	mov    ecx,DWORD PTR [ebp-0xa8]
  412f6f:	xor    ecx,ebx
  412f71:	add    eax,ecx
  412f73:	mov    ecx,DWORD PTR [ebp-0x8]
  412f76:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272de]
  412f7e:	mov    ecx,DWORD PTR [ebp-0xb0]
  412f84:	xor    ecx,ebx
  412f86:	lea    eax,[ecx+eax*1+0x3272de]
  412f8d:	movzx  ecx,BYTE PTR [ebp-0x2]
  412f91:	xor    ecx,eax
  412f93:	mov    BYTE PTR [ebp-0x2],cl
  412f96:	mov    al,BYTE PTR [ebp-0x2]
  412f99:	mov    ecx,DWORD PTR [ebp-0x30]
  412f9c:	mov    edx,DWORD PTR [ebp-0x18]
  412f9f:	xor    ecx,ebx
  412fa1:	add    ecx,esi
  412fa3:	imul   ecx,edx
  412fa6:	mov    edx,DWORD PTR [ebp-0x8]
  412fa9:	mov    BYTE PTR [ecx+edx*1],al
  412fac:	mov    eax,DWORD PTR [ebp-0x30]
  412faf:	mov    ecx,DWORD PTR [ebp-0x18]
  412fb2:	xor    eax,ebx
  412fb4:	add    eax,esi
  412fb6:	imul   eax,ecx
  412fb9:	mov    ecx,DWORD PTR [ebp-0x8]
  412fbc:	mov    al,BYTE PTR [eax+ecx*1]
  412fbf:	mov    BYTE PTR [ebp-0x2],al
  412fc2:	mov    eax,DWORD PTR [ebp-0x30]
  412fc5:	mov    ecx,DWORD PTR [ebp-0x18]
  412fc8:	xor    eax,ebx
  412fca:	add    eax,esi
  412fcc:	imul   eax,ecx
  412fcf:	mov    ecx,DWORD PTR [ebp-0x34]
  412fd2:	xor    ecx,ebx
  412fd4:	add    eax,ecx
  412fd6:	mov    ecx,DWORD PTR [ebp-0x8]
  412fd9:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272de]
  412fe1:	mov    ecx,DWORD PTR [ebp-0xb8]
  412fe7:	xor    ecx,ebx
  412fe9:	lea    eax,[ecx+eax*1+0x3272de]
  412ff0:	movzx  ecx,BYTE PTR [ebp-0x2]
  412ff4:	xor    ecx,eax
  412ff6:	mov    BYTE PTR [ebp-0x2],cl
  412ff9:	mov    al,BYTE PTR [ebp-0x2]
  412ffc:	mov    ecx,DWORD PTR [ebp-0x30]
  412fff:	mov    edx,DWORD PTR [ebp-0x18]
  413002:	xor    ecx,ebx
  413004:	add    ecx,esi
  413006:	imul   ecx,edx
  413009:	mov    edx,DWORD PTR [ebp-0x8]
  41300c:	mov    BYTE PTR [ecx+edx*1],al
  41300f:	mov    eax,DWORD PTR [ebp-0x2c]
  413012:	mov    ecx,DWORD PTR [ebp-0x34]
  413015:	xor    eax,ebx
  413017:	xor    ecx,ebx
  413019:	add    eax,esi
  41301b:	add    ecx,esi
  41301d:	imul   eax,ecx
  413020:	add    eax,DWORD PTR [ebp-0x18]
  413023:	mov    DWORD PTR [ebp-0x18],eax
  413026:	mov    eax,DWORD PTR [ebp-0x18]
  413029:	mov    ecx,DWORD PTR [ebp-0x14]
  41302c:	cmp    ecx,eax
  41302e:	jb     0x412f1e
  413034:	mov    eax,DWORD PTR [ebp-0x34]
  413037:	mov    ecx,DWORD PTR [ebp-0x14]
  41303a:	xor    eax,ebx
  41303c:	add    eax,esi
  41303e:	imul   eax,ecx
  413041:	mov    ecx,DWORD PTR [ebp-0x20]
  413044:	xor    ecx,ebx
  413046:	add    ecx,esi
  413048:	or     eax,ecx
  41304a:	mov    ecx,DWORD PTR [ebp-0x1c]
  41304d:	xor    ecx,ebx
  41304f:	add    eax,ecx
  413051:	mov    ecx,DWORD PTR [ebp-0x1c]
  413054:	xor    ecx,ebx
  413056:	add    eax,ecx
  413058:	mov    ecx,DWORD PTR [ebp-0xc]
  41305b:	lea    eax,[eax+ecx*1+0x64e5bc]
  413062:	jmp    0x413073
  413064:	mov    eax,DWORD PTR [ebp-0x1c]
  413067:	mov    ecx,DWORD PTR [ebp-0xc]
  41306a:	xor    eax,ebx
  41306c:	lea    eax,[eax+ecx*1+0x3272de]
  413073:	mov    DWORD PTR [ebp-0xc],eax
  413076:	mov    eax,DWORD PTR [ebp-0x1c]
  413079:	xor    eax,ebx
  41307b:	mov    ecx,0xffcd8d22
  413080:	sub    ecx,eax
  413082:	add    ecx,DWORD PTR [ebp-0x24]
  413085:	mov    eax,DWORD PTR [ebp-0x1c]
  413088:	mov    edx,DWORD PTR [ebp-0xc]
  41308b:	xor    eax,ebx
  41308d:	add    eax,esi
  41308f:	imul   eax,edx
  413092:	cmp    eax,ecx
  413094:	jbe    0x412e92
  41309a:	mov    eax,DWORD PTR [ebp-0x10]
  41309d:	mov    ecx,DWORD PTR [ebp-0x40]
  4130a0:	mov    eax,DWORD PTR [ebp+0x8]
  4130a3:	mov    edx,DWORD PTR [ebp-0x4c]
  4130a6:	mov    eax,DWORD PTR [eax+0x1d8]
  4130ac:	xor    edx,ebx
  4130ae:	add    edx,esi
  4130b0:	push   edx
  4130b1:	mov    edx,DWORD PTR [ebp-0x3c]
  4130b4:	xor    edx,ebx
  4130b6:	add    edx,esi
  4130b8:	push   edx
  4130b9:	push   ecx
  4130ba:	mov    DWORD PTR [ebp-0x2c],ecx
  4130bd:	mov    ecx,DWORD PTR [ebp-0x10]
  4130c0:	xor    ecx,ebx
  4130c2:	add    ecx,esi
  4130c4:	push   ecx
  4130c5:	call   DWORD PTR [eax+0x14]
  4130c8:	mov    edi,eax
  4130ca:	mov    eax,DWORD PTR [ebp-0x10]
  4130cd:	xor    eax,ebx
  4130cf:	add    eax,esi
  4130d1:	cmp    eax,edi
  4130d3:	je     0x41312e
  4130d5:	mov    eax,DWORD PTR [ebp-0x10]
  4130d8:	jmp    0x4130fb
  4130da:	mov    ecx,DWORD PTR [ebp-0x28]
  4130dd:	xor    eax,ebx
  4130df:	mov    cl,BYTE PTR [ecx+eax*1+0x3272de]
  4130e6:	mov    BYTE PTR [eax+edi*1+0x3272de],cl
  4130ed:	mov    ecx,DWORD PTR [ebp-0x44]
  4130f0:	xor    ecx,ebx
  4130f2:	lea    eax,[ecx+eax*1+0x3272de]
  4130f9:	xor    eax,ebx
  4130fb:	mov    ecx,DWORD PTR [ebp-0x40]
  4130fe:	sub    ecx,esi
  413100:	xor    ecx,ebx
  413102:	cmp    eax,ecx
  413104:	jne    0x4130da
  413106:	mov    eax,DWORD PTR [ebp+0x8]
  413109:	mov    ecx,DWORD PTR [ebp-0x50]
  41310c:	mov    eax,DWORD PTR [eax+0x1d8]
  413112:	xor    ecx,ebx
  413114:	add    ecx,esi
  413116:	push   ecx
  413117:	mov    ecx,DWORD PTR [ebp-0x10]
  41311a:	xor    ecx,ebx
  41311c:	add    ecx,esi
  41311e:	push   ecx
  41311f:	push   DWORD PTR [ebp-0x28]
  413122:	call   DWORD PTR [eax+0x18]
  413125:	mov    eax,DWORD PTR [ebp-0x2c]
  413128:	mov    DWORD PTR [ebp-0x28],edi
  41312b:	mov    DWORD PTR [ebp-0x40],eax
  41312e:	mov    edi,DWORD PTR [ebp-0x28]
  413131:	mov    eax,DWORD PTR [ebp-0x44]
  413134:	mov    ecx,DWORD PTR [ebp-0x10]
  413137:	xor    eax,ebx
  413139:	mov    DWORD PTR [ebp-0x2c],edi
  41313c:	add    eax,esi
  41313e:	mov    DWORD PTR [ebp-0x5c],0x39102810
  413145:	mov    DWORD PTR [ebp-0x58],0x27103f10
  41314c:	jmp    0x413180
  41314e:	xor    ecx,ebx
  413150:	mov    dl,BYTE PTR [ebp+ecx*1+0x327282]
  413157:	xor    dl,0x72
  41315a:	sub    dl,0xa
  41315d:	mov    DWORD PTR [ebp-0x3c],ecx
  413160:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272de]
  413168:	movzx  edx,dl
  41316b:	cmp    ecx,edx
  41316d:	jne    0x41318a
  41316f:	mov    ecx,DWORD PTR [ebp-0x44]
  413172:	mov    edx,DWORD PTR [ebp-0x3c]
  413175:	xor    ecx,ebx
  413177:	lea    ecx,[ecx+edx*1+0x3272de]
  41317e:	xor    ecx,ebx
  413180:	cmp    ecx,0xf89c85bd
  413186:	jne    0x41314e
  413188:	jmp    0x413191
  41318a:	mov    eax,DWORD PTR [ebp-0x10]
  41318d:	xor    eax,ebx
  41318f:	add    eax,esi
  413191:	mov    ecx,DWORD PTR [ebp-0x10]
  413194:	xor    ecx,ebx
  413196:	add    ecx,esi
  413198:	cmp    ecx,eax
  41319a:	je     0x41330d
  4131a0:	mov    eax,DWORD PTR [edi+0x8]
  4131a3:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  4131aa:	mov    DWORD PTR [ebp-0x3c],0xf89cc306
  4131b1:	mov    DWORD PTR [ebp-0x48],0xf89cb5b5
  4131b8:	mov    DWORD PTR [ebp-0x20],0xf89c85b1
  4131bf:	mov    DWORD PTR [ebp-0x14],eax
  4131c2:	mov    eax,DWORD PTR [ebp+0x8]
  4131c5:	mov    ecx,DWORD PTR [ebp-0x20]
  4131c8:	xor    ecx,ebx
  4131ca:	add    ecx,esi
  4131cc:	push   ecx
  4131cd:	mov    ecx,DWORD PTR [ebp-0x48]
  4131d0:	mov    eax,DWORD PTR [eax+0x1d8]
  4131d6:	xor    ecx,ebx
  4131d8:	add    ecx,esi
  4131da:	push   ecx
  4131db:	mov    ecx,DWORD PTR [ebp-0x3c]
  4131de:	xor    ecx,ebx
  4131e0:	add    ecx,esi
  4131e2:	push   ecx
  4131e3:	mov    ecx,DWORD PTR [ebp-0xc]
  4131e6:	xor    ecx,ebx
  4131e8:	add    ecx,esi
  4131ea:	push   ecx
  4131eb:	call   DWORD PTR [eax+0x14]
  4131ee:	mov    edi,eax
  4131f0:	mov    eax,DWORD PTR [ebp+0x8]
  4131f3:	mov    ecx,DWORD PTR [ebp-0x20]
  4131f6:	mov    eax,DWORD PTR [eax+0x1d8]
  4131fc:	xor    ecx,ebx
  4131fe:	add    ecx,esi
  413200:	push   ecx
  413201:	mov    ecx,DWORD PTR [ebp-0x48]
  413204:	xor    ecx,ebx
  413206:	add    ecx,esi
  413208:	push   ecx
  413209:	mov    ecx,DWORD PTR [ebp-0xc]
  41320c:	push   DWORD PTR [ebp-0x14]
  41320f:	xor    ecx,ebx
  413211:	add    ecx,esi
  413213:	push   ecx
  413214:	call   DWORD PTR [eax+0x14]
  413217:	mov    ecx,DWORD PTR [ebp-0xc]
  41321a:	xor    ecx,ebx
  41321c:	add    ecx,esi
  41321e:	mov    DWORD PTR [ebp-0x20],eax
  413221:	cmp    ecx,edi
  413223:	je     0x4135c4
  413229:	mov    ecx,DWORD PTR [ebp-0xc]
  41322c:	xor    ecx,ebx
  41322e:	add    ecx,esi
  413230:	cmp    ecx,eax
  413232:	je     0x4135c4
  413238:	mov    DWORD PTR [ebp-0x3c],0xf89c85b2
  41323f:	mov    DWORD PTR [ebp-0x4c],0xf89c85b3
  413246:	mov    ecx,DWORD PTR [ebp-0x3c]
  413249:	xor    cl,0x97
  41324c:	sub    cl,0x22
  41324f:	mov    BYTE PTR [edi],cl
  413251:	mov    ecx,DWORD PTR [ebp-0xc]
  413254:	xor    cl,0x97
  413257:	sub    cl,0x22
  41325a:	mov    BYTE PTR [edi+0x1],cl
  41325d:	mov    ecx,DWORD PTR [ebp-0x4c]
  413260:	xor    cl,0x97
  413263:	sub    cl,0x22
  413266:	mov    BYTE PTR [edi+0x2],cl
  413269:	and    DWORD PTR [ebp-0xb4],0x0
  413270:	and    DWORD PTR [ebp-0xa4],0x0
  413277:	lea    ecx,[ebp-0xa4]
  41327d:	push   ecx
  41327e:	push   DWORD PTR [ebp-0x14]
  413281:	push   eax
  413282:	lea    eax,[ebp-0xb4]
  413288:	push   eax
  413289:	mov    eax,DWORD PTR [ebp-0x2c]
  41328c:	push   DWORD PTR [eax+0xc]
  41328f:	mov    eax,DWORD PTR [ebp-0x28]
  413292:	add    eax,0x10
  413295:	push   eax
  413296:	push   edi
  413297:	call   0x4125cf
  41329c:	mov    DWORD PTR [ebp-0x3c],eax
  41329f:	mov    eax,DWORD PTR [ebp+0x8]
  4132a2:	mov    ecx,DWORD PTR [ebp-0x50]
  4132a5:	mov    eax,DWORD PTR [eax+0x1d8]
  4132ab:	xor    ecx,ebx
  4132ad:	add    ecx,esi
  4132af:	push   ecx
  4132b0:	mov    ecx,DWORD PTR [ebp-0xc]
  4132b3:	xor    ecx,ebx
  4132b5:	add    ecx,esi
  4132b7:	push   ecx
  4132b8:	push   edi
  4132b9:	call   DWORD PTR [eax+0x18]
  4132bc:	mov    eax,DWORD PTR [ebp-0x3c]
  4132bf:	add    eax,0xffcd8d22
  4132c4:	xor    eax,ebx
  4132c6:	cmp    eax,0xf89c85b5
  4132cb:	mov    eax,DWORD PTR [ebp+0x8]
  4132ce:	mov    eax,DWORD PTR [eax+0x1d8]
  4132d4:	mov    ecx,DWORD PTR [ebp-0x50]
  4132d7:	jne    0x4132fa
  4132d9:	xor    ecx,ebx
  4132db:	add    ecx,esi
  4132dd:	push   ecx
  4132de:	mov    ecx,DWORD PTR [ebp-0xc]
  4132e1:	xor    ecx,ebx
  4132e3:	add    ecx,esi
  4132e5:	push   ecx
  4132e6:	push   DWORD PTR [ebp-0x28]
  4132e9:	call   DWORD PTR [eax+0x18]
  4132ec:	mov    eax,DWORD PTR [ebp-0x20]
  4132ef:	mov    DWORD PTR [ebp-0x28],eax
  4132f2:	mov    eax,DWORD PTR [ebp-0x14]
  4132f5:	mov    DWORD PTR [ebp-0x40],eax
  4132f8:	jmp    0x41330d
  4132fa:	xor    ecx,ebx
  4132fc:	add    ecx,esi
  4132fe:	push   ecx
  4132ff:	mov    ecx,DWORD PTR [ebp-0xc]
  413302:	xor    ecx,ebx
  413304:	add    ecx,esi
  413306:	push   ecx
  413307:	push   DWORD PTR [ebp-0x20]
  41330a:	call   DWORD PTR [eax+0x18]
  41330d:	mov    eax,DWORD PTR [ebp-0x40]
  413310:	mov    DWORD PTR [ebp-0x38],eax
  413313:	mov    eax,DWORD PTR [ebp-0x28]
  413316:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  41331d:	mov    DWORD PTR [ebp-0x3c],eax
  413320:	mov    edi,0xf89c85b4
  413325:	mov    DWORD PTR [ebp-0x30],edi
  413328:	mov    eax,DWORD PTR [ebp-0x24]
  41332b:	xor    eax,ebx
  41332d:	add    eax,esi
  41332f:	mov    DWORD PTR [ebp-0xc],eax
  413332:	mov    eax,DWORD PTR [ebp-0x24]
  413335:	xor    eax,ebx
  413337:	add    eax,esi
  413339:	mov    DWORD PTR [ebp-0x14],eax
  41333c:	mov    DWORD PTR [ebp-0x48],0xf89c85d5
  413343:	mov    DWORD PTR [ebp-0x20],0xf89c85be
  41334a:	mov    eax,DWORD PTR [ebp-0x24]
  41334d:	mov    ecx,DWORD PTR [ebp-0x38]
  413350:	xor    eax,ebx
  413352:	add    eax,esi
  413354:	cmp    ecx,eax
  413356:	je     0x413560
  41335c:	jmp    0x41353c
  413361:	mov    ecx,DWORD PTR [ebp-0xc]
  413364:	mov    eax,DWORD PTR [ebp-0x38]
  413367:	sub    eax,ecx
  413369:	mov    ecx,DWORD PTR [ebp-0x48]
  41336c:	xor    ecx,ebx
  41336e:	add    ecx,esi
  413370:	xor    edx,edx
  413372:	div    ecx
  413374:	mov    DWORD PTR [ebp-0x14],eax
  413377:	mov    eax,DWORD PTR [ebp-0x20]
  41337a:	mov    ecx,DWORD PTR [ebp-0x14]
  41337d:	xor    eax,ebx
  41337f:	add    eax,esi
  413381:	cmp    ecx,eax
  413383:	jbe    0x41338f
  413385:	mov    eax,DWORD PTR [ebp-0x20]
  413388:	xor    eax,ebx
  41338a:	add    eax,esi
  41338c:	mov    DWORD PTR [ebp-0x14],eax
  41338f:	mov    eax,DWORD PTR [ebp-0x48]
  413392:	mov    ecx,DWORD PTR [ebp-0x14]
  413395:	xor    eax,ebx
  413397:	add    eax,esi
  413399:	imul   eax,ecx
  41339c:	mov    DWORD PTR [ebp-0x14],eax
  41339f:	mov    eax,DWORD PTR [ebp-0x24]
  4133a2:	mov    ecx,DWORD PTR [ebp-0x14]
  4133a5:	xor    eax,ebx
  4133a7:	add    eax,esi
  4133a9:	cmp    ecx,eax
  4133ab:	je     0x41352a
  4133b1:	mov    eax,DWORD PTR [ebp-0x14]
  4133b4:	mov    DWORD PTR [ebp-0x34],eax
  4133b7:	mov    eax,DWORD PTR [ebp-0xc]
  4133ba:	add    eax,DWORD PTR [ebp-0x3c]
  4133bd:	mov    DWORD PTR [ebp-0x54],0xf89c85b5
  4133c4:	mov    DWORD PTR [ebp-0x14],edi
  4133c7:	mov    DWORD PTR [ebp-0x4c],0xf89c85b3
  4133ce:	mov    DWORD PTR [ebp-0x8],eax
  4133d1:	mov    DWORD PTR [ebp-0x2c],0xf89c85b2
  4133d8:	mov    DWORD PTR [ebp-0x1c],edi
  4133db:	mov    eax,DWORD PTR [ebp-0x54]
  4133de:	xor    eax,ebx
  4133e0:	add    eax,esi
  4133e2:	jmp    0x4134e9
  4133e7:	mov    eax,DWORD PTR [ebp-0x1c]
  4133ea:	mov    ecx,DWORD PTR [ebp-0x18]
  4133ed:	xor    eax,ebx
  4133ef:	add    eax,esi
  4133f1:	imul   eax,ecx
  4133f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4133f7:	mov    BYTE PTR [eax+ecx*1],0x0
  4133fb:	mov    DWORD PTR [ebp-0xac],0xf89c85bb
  413405:	mov    DWORD PTR [ebp-0x9c],0xf89c85a1
  41340f:	mov    eax,DWORD PTR [ebp-0x1c]
  413412:	mov    ecx,DWORD PTR [ebp-0x18]
  413415:	xor    eax,ebx
  413417:	add    eax,esi
  413419:	imul   eax,ecx
  41341c:	mov    ecx,DWORD PTR [ebp-0x8]
  41341f:	mov    al,BYTE PTR [eax+ecx*1]
  413422:	mov    BYTE PTR [ebp-0x1],al
  413425:	mov    eax,DWORD PTR [ebp-0x1c]
  413428:	mov    ecx,DWORD PTR [ebp-0x18]
  41342b:	xor    eax,ebx
  41342d:	add    eax,esi
  41342f:	imul   eax,ecx
  413432:	mov    ecx,DWORD PTR [ebp-0x4c]
  413435:	xor    ecx,ebx
  413437:	add    eax,ecx
  413439:	mov    ecx,DWORD PTR [ebp-0x8]
  41343c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272de]
  413444:	mov    ecx,DWORD PTR [ebp-0xac]
  41344a:	xor    ecx,ebx
  41344c:	lea    eax,[ecx+eax*1+0x3272de]
  413453:	movzx  ecx,BYTE PTR [ebp-0x1]
  413457:	xor    ecx,eax
  413459:	mov    BYTE PTR [ebp-0x1],cl
  41345c:	mov    al,BYTE PTR [ebp-0x1]
  41345f:	mov    ecx,DWORD PTR [ebp-0x1c]
  413462:	mov    edx,DWORD PTR [ebp-0x18]
  413465:	xor    ecx,ebx
  413467:	add    ecx,esi
  413469:	imul   ecx,edx
  41346c:	mov    edx,DWORD PTR [ebp-0x8]
  41346f:	mov    BYTE PTR [ecx+edx*1],al
  413472:	mov    eax,DWORD PTR [ebp-0x1c]
  413475:	mov    ecx,DWORD PTR [ebp-0x18]
  413478:	xor    eax,ebx
  41347a:	add    eax,esi
  41347c:	imul   eax,ecx
  41347f:	mov    ecx,DWORD PTR [ebp-0x8]
  413482:	mov    al,BYTE PTR [eax+ecx*1]
  413485:	mov    BYTE PTR [ebp-0x1],al
  413488:	mov    eax,DWORD PTR [ebp-0x1c]
  41348b:	mov    ecx,DWORD PTR [ebp-0x18]
  41348e:	xor    eax,ebx
  413490:	add    eax,esi
  413492:	imul   eax,ecx
  413495:	mov    ecx,DWORD PTR [ebp-0x14]
  413498:	xor    ecx,ebx
  41349a:	add    eax,ecx
  41349c:	mov    ecx,DWORD PTR [ebp-0x8]
  41349f:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272de]
  4134a7:	mov    ecx,DWORD PTR [ebp-0x9c]
  4134ad:	xor    ecx,ebx
  4134af:	lea    eax,[ecx+eax*1+0x3272de]
  4134b6:	movzx  ecx,BYTE PTR [ebp-0x1]
  4134ba:	xor    ecx,eax
  4134bc:	mov    BYTE PTR [ebp-0x1],cl
  4134bf:	mov    al,BYTE PTR [ebp-0x1]
  4134c2:	mov    ecx,DWORD PTR [ebp-0x1c]
  4134c5:	mov    edx,DWORD PTR [ebp-0x18]
  4134c8:	xor    ecx,ebx
  4134ca:	add    ecx,esi
  4134cc:	imul   ecx,edx
  4134cf:	mov    edx,DWORD PTR [ebp-0x8]
  4134d2:	mov    BYTE PTR [ecx+edx*1],al
  4134d5:	mov    eax,DWORD PTR [ebp-0x2c]
  4134d8:	mov    ecx,DWORD PTR [ebp-0x14]
  4134db:	xor    eax,ebx
  4134dd:	xor    ecx,ebx
  4134df:	add    eax,esi
  4134e1:	add    ecx,esi
  4134e3:	imul   eax,ecx
  4134e6:	add    eax,DWORD PTR [ebp-0x18]
  4134e9:	mov    DWORD PTR [ebp-0x18],eax
  4134ec:	mov    eax,DWORD PTR [ebp-0x18]
  4134ef:	mov    ecx,DWORD PTR [ebp-0x34]
  4134f2:	cmp    ecx,eax
  4134f4:	jb     0x4133e7
  4134fa:	mov    eax,DWORD PTR [ebp-0x14]
  4134fd:	mov    ecx,DWORD PTR [ebp-0x34]
  413500:	xor    eax,ebx
  413502:	add    eax,esi
  413504:	imul   eax,ecx
  413507:	mov    ecx,DWORD PTR [ebp-0x54]
  41350a:	xor    ecx,ebx
  41350c:	add    ecx,esi
  41350e:	or     eax,ecx
  413510:	mov    ecx,DWORD PTR [ebp-0x30]
  413513:	xor    ecx,ebx
  413515:	add    eax,ecx
  413517:	mov    ecx,DWORD PTR [ebp-0x30]
  41351a:	xor    ecx,ebx
  41351c:	add    eax,ecx
  41351e:	mov    ecx,DWORD PTR [ebp-0xc]
  413521:	lea    eax,[eax+ecx*1+0x64e5bc]
  413528:	jmp    0x413539
  41352a:	mov    eax,DWORD PTR [ebp-0x30]
  41352d:	mov    ecx,DWORD PTR [ebp-0xc]
  413530:	xor    eax,ebx
  413532:	lea    eax,[eax+ecx*1+0x3272de]
  413539:	mov    DWORD PTR [ebp-0xc],eax
  41353c:	mov    eax,DWORD PTR [ebp-0x30]
  41353f:	xor    eax,ebx
  413541:	mov    ecx,0xffcd8d22
  413546:	sub    ecx,eax
  413548:	add    ecx,DWORD PTR [ebp-0x38]
  41354b:	mov    eax,DWORD PTR [ebp-0x30]
  41354e:	mov    edx,DWORD PTR [ebp-0xc]
  413551:	xor    eax,ebx
  413553:	add    eax,esi
  413555:	imul   eax,edx
  413558:	cmp    eax,ecx
  41355a:	jbe    0x413361
  413560:	push   DWORD PTR [ebp+0x8]
  413563:	mov    eax,DWORD PTR [ebp+0x8]
  413566:	push   DWORD PTR [eax+0x1cc]
  41356c:	lea    eax,[ebp-0xa0]
  413572:	push   eax
  413573:	mov    eax,DWORD PTR [ebp+0x8]
  413576:	mov    eax,DWORD PTR [eax+0x1c4]
  41357c:	push   DWORD PTR [eax]
  41357e:	mov    eax,DWORD PTR [ebp+0x8]
  413581:	mov    eax,DWORD PTR [eax+0x1c0]
  413587:	push   DWORD PTR [eax]
  413589:	push   DWORD PTR [ebp-0x40]
  41358c:	push   DWORD PTR [ebp-0x28]
  41358f:	call   0x414065
  413594:	mov    DWORD PTR [ebp-0x3c],eax
  413597:	mov    eax,DWORD PTR [ebp-0x10]
  41359a:	mov    ecx,DWORD PTR [ebp-0x28]
  41359d:	xor    eax,ebx
  41359f:	add    eax,esi
  4135a1:	cmp    eax,ecx
  4135a3:	je     0x4135c4
  4135a5:	mov    eax,DWORD PTR [ebp+0x8]
  4135a8:	mov    ecx,DWORD PTR [ebp-0x50]
  4135ab:	mov    eax,DWORD PTR [eax+0x1d8]
  4135b1:	xor    ecx,ebx
  4135b3:	add    ecx,esi
  4135b5:	push   ecx
  4135b6:	mov    ecx,DWORD PTR [ebp-0x10]
  4135b9:	xor    ecx,ebx
  4135bb:	add    ecx,esi
  4135bd:	push   ecx
  4135be:	push   DWORD PTR [ebp-0x28]
  4135c1:	call   DWORD PTR [eax+0x18]
  4135c4:	pop    edi
  4135c5:	pop    esi
  4135c6:	pop    ebx
  4135c7:	leave  
  4135c8:	ret    0x4
  4135cb:	push   ebp
  4135cc:	mov    ebp,esp
  4135ce:	push   ecx
  4135cf:	push   ecx
  4135d0:	lea    eax,[ebp-0x8]
  4135d3:	mov    DWORD PTR [ebp-0x4],eax
  4135d6:	push   esi
  4135d7:	mov    esi,DWORD PTR [ebp-0x4]
  4135da:	mov    eax,0xf881ba0f
  4135df:	mov    DWORD PTR [esi],eax
  4135e1:	mov    esi,DWORD PTR [ebp-0x8]
  4135e4:	cmp    esi,eax
  4135e6:	pop    esi
  4135e7:	jne    0x4135f1
  4135e9:	mov    BYTE PTR [ecx+0xa],0x78
  4135ed:	mov    BYTE PTR [edx+0x8],0x2f
  4135f1:	mov    BYTE PTR [edx+0xa],0x78
  4135f5:	mov    BYTE PTR [ecx+0x2],0xa
  4135f9:	leave  
  4135fa:	ret    
  4135fb:	push   ebp
  4135fc:	mov    ebp,esp
  4135fe:	push   ecx
  4135ff:	push   ecx
  413600:	lea    eax,[ebp-0x8]
  413603:	mov    DWORD PTR [ebp-0x4],eax
  413606:	mov    edx,DWORD PTR [ebp-0x4]
  413609:	mov    eax,0xf88b0beb
  41360e:	mov    DWORD PTR [edx],eax
  413610:	mov    edx,DWORD PTR [ebp-0x8]
  413613:	cmp    edx,eax
  413615:	jne    0x413626
  413617:	mov    eax,DWORD PTR [ebp+0x8]
  41361a:	mov    BYTE PTR [ecx+0x9],0xc
  41361e:	mov    BYTE PTR [eax+0x7],0x47
  413622:	mov    BYTE PTR [ecx+0x6],0xf
  413626:	mov    BYTE PTR [ecx+0x3],0x1c
  41362a:	leave  
  41362b:	ret    0x4
  41362e:	push   ebp
  41362f:	mov    ebp,esp
  413631:	push   ecx
  413632:	push   ecx
  413633:	lea    eax,[ebp-0x8]
  413636:	mov    DWORD PTR [ebp-0x4],eax
  413639:	mov    edx,DWORD PTR [ebp-0x4]
  41363c:	mov    eax,0x7e0da0f
  413641:	mov    DWORD PTR [edx],eax
  413643:	mov    edx,DWORD PTR [ebp-0x8]
  413646:	cmp    edx,eax
  413648:	jne    0x41364e
  41364a:	mov    BYTE PTR [ecx+0x7],0x47
  41364e:	mov    eax,DWORD PTR [ebp+0x8]
  413651:	mov    BYTE PTR [ecx+0x1],0x1
  413655:	mov    BYTE PTR [eax+0x9],0x2c
  413659:	leave  
  41365a:	ret    0x4
  41365d:	push   ebp
  41365e:	mov    ebp,esp
  413660:	push   ecx
  413661:	push   ecx
  413662:	lea    eax,[ebp-0x8]
  413665:	mov    DWORD PTR [ebp-0x4],eax
  413668:	push   esi
  413669:	mov    esi,DWORD PTR [ebp-0x4]
  41366c:	mov    eax,0x7060e3e
  413671:	mov    DWORD PTR [esi],eax
  413673:	mov    esi,DWORD PTR [ebp-0x8]
  413676:	cmp    esi,eax
  413678:	pop    esi
  413679:	jne    0x413685
  41367b:	mov    BYTE PTR [edx+0x4],0xb
  41367f:	mov    WORD PTR [ecx+0x3],0xb1c
  413685:	mov    BYTE PTR [edx],0x3f
  413688:	leave  
  413689:	ret    
  41368a:	push   ebp
  41368b:	mov    ebp,esp
  41368d:	push   ecx
  41368e:	push   ecx
  41368f:	lea    eax,[ebp-0x8]
  413692:	mov    DWORD PTR [ebp-0x4],eax
  413695:	mov    edx,DWORD PTR [ebp-0x4]
  413698:	mov    eax,0xf8870b3f
  41369d:	mov    DWORD PTR [edx],eax
  41369f:	mov    edx,DWORD PTR [ebp-0x8]
  4136a2:	cmp    edx,eax
  4136a4:	jne    0x4136b1
  4136a6:	mov    eax,DWORD PTR [ebp+0x8]
  4136a9:	mov    BYTE PTR [ecx+0x8],0xf
  4136ad:	mov    BYTE PTR [eax+0x1],0x1
  4136b1:	mov    BYTE PTR [ecx+0x5],0xf3
  4136b5:	leave  
  4136b6:	ret    0x4
  4136b9:	push   esi
  4136ba:	mov    ecx,edi
  4136bc:	call   0x41368a
  4136c1:	mov    edx,edi
  4136c3:	mov    ecx,esi
  4136c5:	mov    BYTE PTR [esi],0x1f
  4136c8:	call   0x41365d
  4136cd:	push   esi
  4136ce:	mov    ecx,edi
  4136d0:	mov    BYTE PTR [esi+0x5],0xf3
  4136d4:	call   0x41362e
  4136d9:	push   esi
  4136da:	mov    BYTE PTR [esi+0x6],0xf
  4136de:	call   0x4135fb
  4136e3:	mov    BYTE PTR [esi+0x2],0xa
  4136e7:	mov    edx,esi
  4136e9:	jmp    0x4135cb
  4136ee:	push   ebp
  4136ef:	mov    ebp,esp
  4136f1:	push   ecx
  4136f2:	mov    ecx,DWORD PTR [edx+0x194]
  4136f8:	push   esi
  4136f9:	mov    esi,DWORD PTR [ebp+0x8]
  4136fc:	mov    esi,DWORD PTR [esi]
  4136fe:	mov    DWORD PTR [ecx],esi
  413700:	mov    ecx,DWORD PTR [edx+0x194]
  413706:	mov    ecx,DWORD PTR [ecx]
  413708:	mov    esi,DWORD PTR [edx+0x190]
  41370e:	mov    DWORD PTR [esi],ecx
  413710:	mov    eax,DWORD PTR [edx+0x194]
  413716:	mov    ecx,DWORD PTR [eax]
  413718:	mov    ecx,DWORD PTR [ecx+0x3c]
  41371b:	add    ecx,DWORD PTR [eax]
  41371d:	mov    DWORD PTR [ebp-0x4],0xf89ca5b5
  413724:	mov    eax,DWORD PTR [ebp-0x4]
  413727:	movzx  ecx,WORD PTR [ecx+0x16]
  41372b:	xor    eax,0x7510897
  413730:	add    eax,0x3272de
  413735:	pop    esi
  413736:	test   ecx,eax
  413738:	je     0x413746
  41373a:	mov    eax,DWORD PTR [edx+0x1c8]
  413740:	mov    DWORD PTR [eax],0xf89c85b4
  413746:	leave  
  413747:	ret    0x4
  41374a:	push   ebp
  41374b:	mov    ebp,esp
  41374d:	sub    esp,0x70
  413750:	and    DWORD PTR [ebp-0x20],0x0
  413754:	mov    DWORD PTR [ebp-0x18],0xf89cb5b5
  41375b:	mov    DWORD PTR [ebp-0x1c],0xf89c85f5
  413762:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  413769:	mov    DWORD PTR [ebp-0x14],0xf89c85b3
  413770:	mov    DWORD PTR [ebp-0x2c],0xf89f05b5
  413777:	mov    eax,DWORD PTR [ebp+0x20]
  41377a:	mov    eax,DWORD PTR [eax+0x194]
  413780:	mov    DWORD PTR [ebp-0xc],eax
  413783:	mov    eax,DWORD PTR [ebp+0x20]
  413786:	push   ebx
  413787:	push   esi
  413788:	mov    esi,DWORD PTR [eax+0x190]
  41378e:	mov    eax,DWORD PTR [ebp+0x20]
  413791:	mov    eax,DWORD PTR [eax+0x18c]
  413797:	mov    DWORD PTR [ebp-0x8],eax
  41379a:	mov    eax,DWORD PTR [eax]
  41379c:	push   edi
  41379d:	mov    DWORD PTR [ebp-0x4],esi
  4137a0:	test   eax,eax
  4137a2:	jne    0x4137af
  4137a4:	push   DWORD PTR [ebp+0x1c]
  4137a7:	mov    edx,DWORD PTR [ebp+0x20]
  4137aa:	call   0x4136ee
  4137af:	mov    eax,DWORD PTR [esi]
  4137b1:	mov    ebx,DWORD PTR [esi]
  4137b3:	add    ebx,DWORD PTR [eax+0x3c]
  4137b6:	mov    eax,DWORD PTR [ebp+0xc]
  4137b9:	mov    ecx,DWORD PTR [ebp-0x8]
  4137bc:	mov    ecx,DWORD PTR [ecx]
  4137be:	mov    esi,0x7510897
  4137c3:	xor    eax,esi
  4137c5:	mov    edi,0x3272de
  4137ca:	add    eax,edi
  4137cc:	cmp    eax,ecx
  4137ce:	jne    0x413a06
  4137d4:	mov    eax,DWORD PTR [ebp-0xc]
  4137d7:	mov    eax,DWORD PTR [eax]
  4137d9:	mov    DWORD PTR [ebp-0x10],eax
  4137dc:	mov    eax,DWORD PTR [ebx+0x50]
  4137df:	mov    DWORD PTR [ebp-0x68],eax
  4137e2:	mov    eax,DWORD PTR [ebp-0x18]
  4137e5:	xor    eax,esi
  4137e7:	add    eax,edi
  4137e9:	mov    DWORD PTR [ebp-0x64],eax
  4137ec:	mov    eax,DWORD PTR [ebp-0x14]
  4137ef:	and    DWORD PTR [ebp-0x6c],0x0
  4137f3:	xor    eax,esi
  4137f5:	add    eax,edi
  4137f7:	mov    DWORD PTR [ebp-0x60],eax
  4137fa:	lea    eax,[ebp-0x70]
  4137fd:	push   eax
  4137fe:	mov    eax,DWORD PTR [ebp+0x8]
  413801:	xor    eax,esi
  413803:	add    eax,edi
  413805:	push   eax
  413806:	mov    eax,DWORD PTR [ebp+0x20]
  413809:	add    eax,0xaa
  41380e:	push   eax
  41380f:	mov    eax,DWORD PTR [ebp+0x20]
  413812:	mov    eax,DWORD PTR [eax+0x198]
  413818:	mov    DWORD PTR [ebp-0x70],0x4
  41381f:	push   DWORD PTR [eax]
  413821:	mov    eax,DWORD PTR [ebp+0x10]
  413824:	call   eax
  413826:	mov    ecx,DWORD PTR [ebp-0xc]
  413829:	mov    ecx,DWORD PTR [ecx]
  41382b:	mov    edx,DWORD PTR [ebp-0x8]
  41382e:	mov    DWORD PTR [ebp-0x6c],eax
  413831:	mov    DWORD PTR [ebp+0x1c],eax
  413834:	mov    DWORD PTR [edx],ecx
  413836:	mov    ecx,DWORD PTR [ebp-0x4]
  413839:	mov    DWORD PTR [ecx],eax
  41383b:	mov    eax,DWORD PTR [ebx+0x50]
  41383e:	mov    DWORD PTR [ebp-0x68],eax
  413841:	mov    eax,DWORD PTR [ebp-0x1c]
  413844:	xor    eax,esi
  413846:	add    eax,edi
  413848:	mov    DWORD PTR [ebp-0x64],eax
  41384b:	lea    eax,[ebp-0x20]
  41384e:	mov    DWORD PTR [ebp-0x60],eax
  413851:	lea    eax,[ebp-0x70]
  413854:	push   eax
  413855:	mov    eax,DWORD PTR [ebp+0x8]
  413858:	xor    eax,esi
  41385a:	add    eax,edi
  41385c:	push   eax
  41385d:	mov    eax,DWORD PTR [ebp+0x20]
  413860:	add    eax,0xee
  413865:	push   eax
  413866:	mov    eax,DWORD PTR [ebp+0x20]
  413869:	mov    eax,DWORD PTR [eax+0x198]
  41386f:	mov    DWORD PTR [ebp-0x70],0x4
  413876:	push   DWORD PTR [eax]
  413878:	mov    eax,DWORD PTR [ebp+0x10]
  41387b:	call   eax
  41387d:	test   eax,eax
  41387f:	je     0x4138a4
  413881:	and    DWORD PTR [ebp+0xc],0x0
  413885:	cmp    DWORD PTR [ebx+0x50],0x0
  413889:	jbe    0x4138a4
  41388b:	mov    eax,DWORD PTR [ebp+0x1c]
  41388e:	mov    ecx,DWORD PTR [ebp-0x10]
  413891:	sub    ecx,eax
  413893:	mov    dl,BYTE PTR [ecx+eax*1]
  413896:	inc    DWORD PTR [ebp+0xc]
  413899:	mov    BYTE PTR [eax],dl
  41389b:	mov    edx,DWORD PTR [ebp+0xc]
  41389e:	inc    eax
  41389f:	cmp    edx,DWORD PTR [ebx+0x50]
  4138a2:	jb     0x413893
  4138a4:	mov    edx,DWORD PTR [ebp+0x1c]
  4138a7:	mov    ecx,DWORD PTR [edx+0x3c]
  4138aa:	add    ecx,edx
  4138ac:	mov    eax,DWORD PTR [ecx+0xa0]
  4138b2:	mov    ebx,DWORD PTR [ecx+0x28]
  4138b5:	add    eax,edx
  4138b7:	sub    edx,DWORD PTR [ebp-0x10]
  4138ba:	add    ebx,DWORD PTR [ebp+0x1c]
  4138bd:	mov    DWORD PTR [ebp+0xc],edx
  4138c0:	mov    DWORD PTR [ebp-0x2c],ecx
  4138c3:	mov    DWORD PTR [ebp-0x14],ebx
  4138c6:	mov    DWORD PTR [ebp-0x8],0x0
  4138cd:	jmp    0x413949
  4138cf:	add    edx,0xfffffff8
  4138d2:	shr    edx,1
  4138d4:	mov    DWORD PTR [ebp-0x18],edx
  4138d7:	je     0x413935
  4138d9:	lea    edx,[eax+0x8]
  4138dc:	mov    DWORD PTR [ebp-0x4],edx
  4138df:	mov    edx,DWORD PTR [ebp-0x18]
  4138e2:	mov    DWORD PTR [ebp-0x18],edx
  4138e5:	mov    edx,DWORD PTR [ebp-0x4]
  4138e8:	movzx  edx,WORD PTR [edx]
  4138eb:	mov    DWORD PTR [ebp-0x24],edx
  4138ee:	and    edx,0xfff
  4138f4:	mov    DWORD PTR [ebp-0x28],edx
  4138f7:	mov    edx,DWORD PTR [ebp-0x24]
  4138fa:	shr    edx,0xc
  4138fd:	add    edx,0xffcd8d22
  413903:	xor    edx,esi
  413905:	cmp    edx,0xf89c85b2
  41390b:	jne    0x41392c
  41390d:	mov    edx,DWORD PTR [ebp-0x28]
  413910:	add    edx,DWORD PTR [ebp+0x1c]
  413913:	mov    ebx,DWORD PTR [eax]
  413915:	cmp    DWORD PTR [ebx+edx*1],0x0
  413919:	je     0x413929
  41391b:	mov    ecx,DWORD PTR [ebp+0xc]
  41391e:	add    ecx,DWORD PTR [ebx+edx*1]
  413921:	mov    ebx,DWORD PTR [eax]
  413923:	mov    DWORD PTR [edx+ebx*1],ecx
  413926:	mov    ecx,DWORD PTR [ebp-0x2c]
  413929:	mov    ebx,DWORD PTR [ebp-0x14]
  41392c:	add    DWORD PTR [ebp-0x4],0x2
  413930:	dec    DWORD PTR [ebp-0x18]
  413933:	jne    0x4138e5
  413935:	mov    edx,DWORD PTR [ebp-0xc]
  413938:	add    DWORD PTR [ebp-0x8],edx
  41393b:	mov    edx,DWORD PTR [ebp-0x8]
  41393e:	cmp    edx,DWORD PTR [ecx+0xa4]
  413944:	jae    0x413957
  413946:	add    eax,DWORD PTR [ebp-0xc]
  413949:	mov    edx,DWORD PTR [eax+0x4]
  41394c:	mov    DWORD PTR [ebp-0xc],edx
  41394f:	test   edx,edx
  413951:	jne    0x4138cf
  413957:	mov    eax,DWORD PTR [ebp-0x10]
  41395a:	mov    DWORD PTR [ebp-0x6c],eax
  41395d:	mov    DWORD PTR [ebp-0x70],0x4
  413964:	mov    eax,DWORD PTR [ecx+0x50]
  413967:	mov    DWORD PTR [ebp-0x68],eax
  41396a:	mov    eax,DWORD PTR [ebp-0x1c]
  41396d:	xor    eax,esi
  41396f:	add    eax,edi
  413971:	mov    DWORD PTR [ebp-0x64],eax
  413974:	lea    eax,[ebp-0x20]
  413977:	mov    DWORD PTR [ebp-0x60],eax
  41397a:	lea    eax,[ebp-0x70]
  41397d:	push   eax
  41397e:	mov    eax,DWORD PTR [ebp+0x8]
  413981:	xor    eax,esi
  413983:	add    eax,edi
  413985:	push   eax
  413986:	mov    eax,DWORD PTR [ebp+0x20]
  413989:	add    eax,0xee
  41398e:	push   eax
  41398f:	mov    eax,DWORD PTR [ebp+0x20]
  413992:	mov    eax,DWORD PTR [eax+0x198]
  413998:	push   DWORD PTR [eax]
  41399a:	mov    eax,DWORD PTR [ebp+0x10]
  41399d:	call   eax
  41399f:	mov    eax,DWORD PTR [ebp+0x20]
  4139a2:	mov    eax,DWORD PTR [eax+0x180]
  4139a8:	add    eax,DWORD PTR [ebp+0xc]
  4139ab:	mov    ecx,DWORD PTR [ebp+0xc]
  4139ae:	push   DWORD PTR [ebp+0x18]
  4139b1:	mov    DWORD PTR [eax],ecx
  4139b3:	push   DWORD PTR [ebp+0x14]
  4139b6:	push   DWORD PTR [ebp+0x1c]
  4139b9:	call   ebx
  4139bb:	mov    eax,DWORD PTR [ebp+0xc]
  4139be:	add    eax,DWORD PTR [ebp+0x20]
  4139c1:	lea    ecx,[ebp+0x4]
  4139c4:	mov    DWORD PTR [ebp+0x20],eax
  4139c7:	mov    eax,DWORD PTR [ebp+0x20]
  4139ca:	mov    eax,DWORD PTR [ebp+0x20]
  4139cd:	mov    edx,DWORD PTR [eax+0x190]
  4139d3:	mov    eax,DWORD PTR [ebp+0x20]
  4139d6:	mov    eax,DWORD PTR [eax+0x18c]
  4139dc:	mov    esi,DWORD PTR [eax]
  4139de:	cmp    DWORD PTR [ecx],esi
  4139e0:	jb     0x413a01
  4139e2:	mov    esi,DWORD PTR [edx]
  4139e4:	mov    edi,DWORD PTR [edx]
  4139e6:	mov    esi,DWORD PTR [esi+0x3c]
  4139e9:	lea    esi,[edi+esi*1+0x50]
  4139ed:	mov    edi,DWORD PTR [eax]
  4139ef:	add    edi,DWORD PTR [esi]
  4139f1:	cmp    DWORD PTR [ecx],edi
  4139f3:	jae    0x413a01
  4139f5:	mov    esi,DWORD PTR [eax]
  4139f7:	mov    eax,DWORD PTR [ecx]
  4139f9:	mov    edx,DWORD PTR [edx]
  4139fb:	sub    eax,esi
  4139fd:	add    edx,eax
  4139ff:	mov    DWORD PTR [ecx],edx
  413a01:	mov    eax,DWORD PTR [ebp+0xc]
  413a04:	jmp    0x413a47
  413a06:	push   DWORD PTR [ebp+0x20]
  413a09:	call   0x4129b8
  413a0e:	mov    eax,DWORD PTR [ebp+0x20]
  413a11:	mov    eax,DWORD PTR [eax+0x1c8]
  413a17:	mov    eax,DWORD PTR [eax]
  413a19:	xor    eax,esi
  413a1b:	add    eax,edi
  413a1d:	mov    eax,DWORD PTR [ebp+0x20]
  413a20:	jne    0x413a38
  413a22:	mov    ecx,DWORD PTR [ebp+0x20]
  413a25:	mov    ecx,DWORD PTR [ecx+0x1cc]
  413a2b:	push   DWORD PTR [ecx]
  413a2d:	mov    eax,DWORD PTR [eax+0x1d8]
  413a33:	call   DWORD PTR [eax+0x28]
  413a36:	jmp    0x413a45
  413a38:	mov    eax,DWORD PTR [eax+0x17c]
  413a3e:	mov    ecx,DWORD PTR [eax]
  413a40:	lea    eax,[ebp+0x4]
  413a43:	add    DWORD PTR [eax],ecx
  413a45:	xor    eax,eax
  413a47:	pop    edi
  413a48:	pop    esi
  413a49:	pop    ebx
  413a4a:	leave  
  413a4b:	ret    0x1c
  413a4e:	push   ebp
  413a4f:	mov    ebp,esp
  413a51:	sub    esp,0x1c
  413a54:	push   esi
  413a55:	mov    esi,eax
  413a57:	mov    eax,DWORD PTR [ecx+0x190]
  413a5d:	cmp    DWORD PTR [eax],0x0
  413a60:	je     0x413b70
  413a66:	test   edx,edx
  413a68:	je     0x413b70
  413a6e:	test   esi,esi
  413a70:	je     0x413b70
  413a76:	mov    eax,DWORD PTR [esi+0x88]
  413a7c:	test   eax,eax
  413a7e:	je     0x413b6b
  413a84:	cmp    DWORD PTR [esi+0x8c],0x10
  413a8b:	je     0x413b6b
  413a91:	cmp    DWORD PTR [esi+0x34],edx
  413a94:	je     0x413b6b
  413a9a:	mov    esi,DWORD PTR [ecx+0x18c]
  413aa0:	and    DWORD PTR [ebp-0x10],0x0
  413aa4:	mov    ecx,edx
  413aa6:	sub    ecx,DWORD PTR [esi]
  413aa8:	add    eax,edx
  413aaa:	movzx  edx,WORD PTR [eax+0xc]
  413aae:	mov    DWORD PTR [ebp-0x1c],ecx
  413ab1:	movzx  ecx,WORD PTR [eax+0xe]
  413ab5:	add    ecx,edx
  413ab7:	je     0x413b6b
  413abd:	lea    ecx,[eax+0x14]
  413ac0:	push   ebx
  413ac1:	mov    DWORD PTR [ebp-0x18],ecx
  413ac4:	mov    esi,0x7fffffff
  413ac9:	push   edi
  413aca:	test   DWORD PTR [ecx],esi
  413acc:	je     0x413b4d
  413ace:	mov    edx,DWORD PTR [ecx]
  413ad0:	and    DWORD PTR [ebp-0xc],0x0
  413ad4:	and    edx,esi
  413ad6:	add    edx,eax
  413ad8:	movzx  edi,WORD PTR [edx+0xe]
  413adc:	movzx  ebx,WORD PTR [edx+0xc]
  413ae0:	add    edi,ebx
  413ae2:	je     0x413b4d
  413ae4:	lea    ecx,[edx+0x14]
  413ae7:	mov    DWORD PTR [ebp-0x14],ecx
  413aea:	test   DWORD PTR [ecx],esi
  413aec:	je     0x413b2f
  413aee:	mov    ecx,DWORD PTR [ecx]
  413af0:	and    DWORD PTR [ebp-0x8],0x0
  413af4:	and    ecx,esi
  413af6:	add    ecx,eax
  413af8:	movzx  edi,WORD PTR [ecx+0xe]
  413afc:	movzx  ebx,WORD PTR [ecx+0xc]
  413b00:	add    edi,ebx
  413b02:	je     0x413b2f
  413b04:	lea    edi,[ecx+0x14]
  413b07:	mov    DWORD PTR [ebp-0x4],edi
  413b0a:	mov    edi,DWORD PTR [ebp-0x4]
  413b0d:	mov    edi,DWORD PTR [edi]
  413b0f:	test   edi,edi
  413b11:	je     0x413b19
  413b13:	mov    ebx,DWORD PTR [ebp-0x1c]
  413b16:	add    DWORD PTR [edi+eax*1],ebx
  413b19:	movzx  edi,WORD PTR [ecx+0xe]
  413b1d:	movzx  ebx,WORD PTR [ecx+0xc]
  413b21:	inc    DWORD PTR [ebp-0x8]
  413b24:	add    DWORD PTR [ebp-0x4],0x8
  413b28:	add    edi,ebx
  413b2a:	cmp    DWORD PTR [ebp-0x8],edi
  413b2d:	jb     0x413b0a
  413b2f:	movzx  edi,WORD PTR [edx+0xe]
  413b33:	movzx  ebx,WORD PTR [edx+0xc]
  413b37:	mov    ecx,DWORD PTR [ebp-0x14]
  413b3a:	inc    DWORD PTR [ebp-0xc]
  413b3d:	add    ecx,0x8
  413b40:	add    edi,ebx
  413b42:	mov    DWORD PTR [ebp-0x14],ecx
  413b45:	cmp    DWORD PTR [ebp-0xc],edi
  413b48:	jb     0x413aea
  413b4a:	mov    ecx,DWORD PTR [ebp-0x18]
  413b4d:	movzx  edx,WORD PTR [eax+0xe]
  413b51:	movzx  edi,WORD PTR [eax+0xc]
  413b55:	inc    DWORD PTR [ebp-0x10]
  413b58:	add    ecx,0x8
  413b5b:	add    edx,edi
  413b5d:	mov    DWORD PTR [ebp-0x18],ecx
  413b60:	cmp    DWORD PTR [ebp-0x10],edx
  413b63:	jb     0x413aca
  413b69:	pop    edi
  413b6a:	pop    ebx
  413b6b:	xor    eax,eax
  413b6d:	inc    eax
  413b6e:	jmp    0x413b72
  413b70:	xor    eax,eax
  413b72:	pop    esi
  413b73:	leave  
  413b74:	ret    
  413b75:	push   ebp
  413b76:	mov    ebp,esp
  413b78:	mov    ecx,DWORD PTR [ecx+0x190]
  413b7e:	mov    eax,DWORD PTR [ebp+0xc]
  413b81:	sub    esp,0x10
  413b84:	push   ebx
  413b85:	xor    ebx,ebx
  413b87:	push   esi
  413b88:	push   edi
  413b89:	cmp    DWORD PTR [ecx],ebx
  413b8b:	je     0x413c13
  413b91:	cmp    eax,ebx
  413b93:	je     0x413c13
  413b95:	cmp    DWORD PTR [eax+0x78],ebx
  413b98:	jne    0x413b9f
  413b9a:	xor    eax,eax
  413b9c:	inc    eax
  413b9d:	jmp    0x413c15
  413b9f:	mov    eax,DWORD PTR [eax+0x78]
  413ba2:	add    eax,DWORD PTR [ebp+0x8]
  413ba5:	mov    ecx,DWORD PTR [eax+0x1c]
  413ba8:	mov    edx,DWORD PTR [eax+0x24]
  413bab:	mov    esi,DWORD PTR [eax+0x14]
  413bae:	mov    edi,DWORD PTR [eax+0x18]
  413bb1:	add    ecx,DWORD PTR [ebp+0x8]
  413bb4:	add    edx,DWORD PTR [ebp+0x8]
  413bb7:	mov    DWORD PTR [ebp-0x4],esi
  413bba:	cmp    esi,edi
  413bbc:	ja     0x413bc1
  413bbe:	mov    DWORD PTR [ebp-0x4],edi
  413bc1:	mov    DWORD PTR [ebp-0x8],ebx
  413bc4:	cmp    DWORD PTR [ebp-0x4],ebx
  413bc7:	jbe    0x413b9a
  413bc9:	cmp    ebx,DWORD PTR [eax+0x14]
  413bcc:	jae    0x413bd4
  413bce:	movzx  esi,WORD PTR [edx+ebx*2]
  413bd2:	jmp    0x413bd6
  413bd4:	mov    esi,ebx
  413bd6:	lea    esi,[ecx+esi*4]
  413bd9:	mov    edi,DWORD PTR [esi]
  413bdb:	test   edi,edi
  413bdd:	je     0x413c08
  413bdf:	add    edi,DWORD PTR [ebp+0x8]
  413be2:	mov    DWORD PTR [ebp-0x10],edi
  413be5:	cmp    edi,eax
  413be7:	jbe    0x413bf9
  413be9:	mov    ebx,DWORD PTR [ebp+0xc]
  413bec:	mov    ebx,DWORD PTR [ebx+0x7c]
  413bef:	add    ebx,eax
  413bf1:	cmp    edi,ebx
  413bf3:	jae    0x413bf9
  413bf5:	mov    esi,DWORD PTR [esi]
  413bf7:	jmp    0x413c01
  413bf9:	sub    edi,DWORD PTR [ebp+0x8]
  413bfc:	mov    DWORD PTR [esi],edi
  413bfe:	mov    esi,DWORD PTR [ebp-0x10]
  413c01:	test   esi,esi
  413c03:	je     0x413c13
  413c05:	mov    ebx,DWORD PTR [ebp-0x8]
  413c08:	inc    ebx
  413c09:	mov    DWORD PTR [ebp-0x8],ebx
  413c0c:	cmp    ebx,DWORD PTR [ebp-0x4]
  413c0f:	jb     0x413bc9
  413c11:	jmp    0x413b9a
  413c13:	xor    eax,eax
  413c15:	pop    edi
  413c16:	pop    esi
  413c17:	pop    ebx
  413c18:	leave  
  413c19:	ret    0x8
  413c1c:	push   ebp
  413c1d:	mov    ebp,esp
  413c1f:	sub    esp,0x2c
  413c22:	mov    edx,0xf89c85b5
  413c27:	mov    DWORD PTR [ebp-0x4],edx
  413c2a:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  413c31:	mov    eax,DWORD PTR [ebp-0x4]
  413c34:	mov    ecx,DWORD PTR [ebp-0x4]
  413c37:	mov    ecx,DWORD PTR [ebp-0x4]
  413c3a:	mov    ecx,DWORD PTR [ebp-0x4]
  413c3d:	mov    ecx,DWORD PTR [ebp-0x4]
  413c40:	mov    ecx,DWORD PTR [ebp-0x4]
  413c43:	push   ebx
  413c44:	mov    ebx,DWORD PTR [ebp+0x10]
  413c47:	push   esi
  413c48:	mov    esi,0x7510897
  413c4d:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  413c54:	mov    ecx,DWORD PTR [ebp-0x4]
  413c57:	mov    ebx,DWORD PTR [ebx+0x190]
  413c5d:	push   edi
  413c5e:	mov    edi,0x3272de
  413c63:	xor    ecx,esi
  413c65:	xor    eax,esi
  413c67:	add    eax,edi
  413c69:	add    ecx,edi
  413c6b:	mov    DWORD PTR [ebp-0x18],eax
  413c6e:	cmp    ecx,DWORD PTR [ebx]
  413c70:	je     0x413ef1
  413c76:	mov    ebx,DWORD PTR [ebp-0x4]
  413c79:	mov    ecx,DWORD PTR [ebp+0xc]
  413c7c:	xor    ebx,esi
  413c7e:	add    ebx,edi
  413c80:	cmp    ebx,ecx
  413c82:	je     0x413ef1
  413c88:	mov    ebx,DWORD PTR [ebp-0x4]
  413c8b:	mov    ecx,DWORD PTR [ecx+0x80]
  413c91:	xor    ebx,esi
  413c93:	add    ebx,edi
  413c95:	cmp    ecx,ebx
  413c97:	je     0x413eec
  413c9d:	add    ecx,DWORD PTR [ebp+0x8]
  413ca0:	mov    DWORD PTR [ebp-0x2c],ecx
  413ca3:	mov    ebx,edx
  413ca5:	xor    ebx,esi
  413ca7:	add    ebx,edi
  413ca9:	mov    DWORD PTR [ebp-0x10],ebx
  413cac:	mov    ebx,DWORD PTR [ebp-0x10]
  413caf:	cmp    ebx,edx
  413cb1:	je     0x413cc5
  413cb3:	mov    edx,DWORD PTR [ebp-0x10]
  413cb6:	mov    ebx,DWORD PTR [ebp-0x4]
  413cb9:	imul   edx,edx,0x14
  413cbc:	xor    ebx,esi
  413cbe:	add    ebx,edi
  413cc0:	cmp    DWORD PTR [edx+ecx*1],ebx
  413cc3:	jne    0x413cdc
  413cc5:	mov    edx,DWORD PTR [ebp-0x10]
  413cc8:	mov    ebx,DWORD PTR [ebp-0x4]
  413ccb:	imul   edx,edx,0x14
  413cce:	xor    ebx,esi
  413cd0:	add    ebx,edi
  413cd2:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  413cd6:	je     0x413ede
  413cdc:	mov    eax,DWORD PTR [ebp-0x4]
  413cdf:	mov    ebx,DWORD PTR [ebp-0x4]
  413ce2:	mov    eax,DWORD PTR [ebp-0x10]
  413ce5:	imul   eax,eax,0x14
  413ce8:	add    eax,ecx
  413cea:	mov    ecx,DWORD PTR [eax+0x10]
  413ced:	add    ecx,DWORD PTR [ebp+0x8]
  413cf0:	xor    ebx,esi
  413cf2:	mov    DWORD PTR [ebp-0x1c],ecx
  413cf5:	mov    ecx,DWORD PTR [ebp-0x4]
  413cf8:	mov    edx,DWORD PTR [ebp-0x4]
  413cfb:	xor    ecx,esi
  413cfd:	add    ecx,edi
  413cff:	xor    edx,esi
  413d01:	mov    DWORD PTR [ebp-0x24],ecx
  413d04:	mov    ecx,DWORD PTR [eax]
  413d06:	add    edx,edi
  413d08:	add    ebx,edi
  413d0a:	cmp    ecx,edx
  413d0c:	je     0x413d14
  413d0e:	add    ecx,DWORD PTR [ebp+0x8]
  413d11:	mov    DWORD PTR [ebp-0x24],ecx
  413d14:	mov    ecx,DWORD PTR [ebp-0x4]
  413d17:	xor    ecx,esi
  413d19:	add    ecx,DWORD PTR [eax+0xc]
  413d1c:	mov    eax,DWORD PTR [ebp+0x8]
  413d1f:	lea    eax,[ecx+eax*1+0x3272de]
  413d26:	mov    DWORD PTR [ebp+0xc],eax
  413d29:	mov    DWORD PTR [ebp-0x28],0xf89c85b0
  413d30:	mov    eax,DWORD PTR [ebp+0x10]
  413d33:	push   DWORD PTR [ebp+0xc]
  413d36:	mov    eax,DWORD PTR [eax+0x1d8]
  413d3c:	call   DWORD PTR [eax]
  413d3e:	mov    ecx,DWORD PTR [ebp-0x4]
  413d41:	xor    ecx,esi
  413d43:	add    ecx,edi
  413d45:	mov    DWORD PTR [ebp-0xc],eax
  413d48:	cmp    ecx,eax
  413d4a:	jne    0x413d5e
  413d4c:	mov    eax,DWORD PTR [ebp+0x10]
  413d4f:	push   DWORD PTR [ebp+0xc]
  413d52:	mov    eax,DWORD PTR [eax+0x1d8]
  413d58:	call   DWORD PTR [eax+0xc]
  413d5b:	mov    DWORD PTR [ebp-0xc],eax
  413d5e:	mov    DWORD PTR [ebp-0x20],0x7f661b0c
  413d65:	mov    DWORD PTR [ebp-0x20],0xf89c999c
  413d6c:	mov    eax,DWORD PTR [ebp-0x4]
  413d6f:	xor    eax,esi
  413d71:	add    eax,edi
  413d73:	cmp    eax,DWORD PTR [ebp-0xc]
  413d76:	jne    0x413d9b
  413d78:	mov    eax,DWORD PTR [ebp-0x8]
  413d7b:	mov    ecx,DWORD PTR [ebp-0x20]
  413d7e:	xor    eax,esi
  413d80:	xor    ecx,esi
  413d82:	lea    ebx,[ebx+eax*1+0x3272de]
  413d89:	mov    eax,DWORD PTR [ebp+0x10]
  413d8c:	mov    eax,DWORD PTR [eax+0x1d8]
  413d92:	add    ecx,edi
  413d94:	imul   ecx,ebx
  413d97:	push   ecx
  413d98:	call   DWORD PTR [eax+0x24]
  413d9b:	mov    eax,DWORD PTR [ebp-0x4]
  413d9e:	xor    eax,esi
  413da0:	add    eax,edi
  413da2:	cmp    eax,DWORD PTR [ebp-0xc]
  413da5:	jne    0x413db6
  413da7:	mov    eax,DWORD PTR [ebp-0x28]
  413daa:	xor    eax,esi
  413dac:	add    eax,edi
  413dae:	cmp    ebx,eax
  413db0:	jbe    0x413d30
  413db6:	mov    eax,DWORD PTR [ebp-0x4]
  413db9:	xor    eax,esi
  413dbb:	add    eax,edi
  413dbd:	cmp    eax,DWORD PTR [ebp-0xc]
  413dc0:	jne    0x413dd9
  413dc2:	mov    eax,DWORD PTR [ebp-0x8]
  413dc5:	mov    ecx,DWORD PTR [ebp-0x18]
  413dc8:	xor    eax,esi
  413dca:	lea    eax,[ecx+eax*1+0x3272de]
  413dd1:	mov    DWORD PTR [ebp-0x18],eax
  413dd4:	jmp    0x413ec8
  413dd9:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  413de0:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  413de7:	mov    ebx,DWORD PTR [ebp-0x4]
  413dea:	xor    ebx,esi
  413dec:	add    ebx,edi
  413dee:	jmp    0x413eb5
  413df3:	mov    eax,DWORD PTR [ebp-0x4]
  413df6:	xor    eax,esi
  413df8:	add    eax,edi
  413dfa:	mov    DWORD PTR [ebp-0x14],eax
  413dfd:	mov    eax,DWORD PTR [ebp-0x4]
  413e00:	xor    eax,esi
  413e02:	add    eax,edi
  413e04:	mov    DWORD PTR [ebp+0xc],eax
  413e07:	mov    ecx,DWORD PTR [ebp-0x4]
  413e0a:	mov    eax,DWORD PTR [ebp-0x24]
  413e0d:	xor    ecx,esi
  413e0f:	add    ecx,edi
  413e11:	cmp    ecx,eax
  413e13:	je     0x413e1b
  413e15:	mov    eax,DWORD PTR [eax+ebx*4]
  413e18:	mov    DWORD PTR [ebp-0x14],eax
  413e1b:	mov    eax,DWORD PTR [ebp-0x1c]
  413e1e:	mov    eax,DWORD PTR [eax+ebx*4]
  413e21:	mov    DWORD PTR [ebp+0xc],eax
  413e24:	mov    eax,DWORD PTR [ebp-0x4]
  413e27:	mov    ecx,DWORD PTR [ebp-0x14]
  413e2a:	xor    eax,esi
  413e2c:	add    eax,edi
  413e2e:	cmp    eax,ecx
  413e30:	je     0x413e5b
  413e32:	mov    eax,DWORD PTR [ebp-0x4]
  413e35:	mov    ecx,DWORD PTR [ebp-0x14]
  413e38:	xor    eax,esi
  413e3a:	add    eax,edi
  413e3c:	shr    ecx,0x1f
  413e3f:	cmp    eax,ecx
  413e41:	je     0x413e5b
  413e43:	mov    ecx,DWORD PTR [ebp-0x14]
  413e46:	mov    eax,DWORD PTR [ebp+0x10]
  413e49:	mov    eax,DWORD PTR [eax+0x1d8]
  413e4f:	movzx  ecx,cx
  413e52:	push   ecx
  413e53:	push   DWORD PTR [ebp-0xc]
  413e56:	call   DWORD PTR [eax+0x8]
  413e59:	jmp    0x413e74
  413e5b:	mov    eax,DWORD PTR [ebp+0xc]
  413e5e:	add    eax,DWORD PTR [ebp+0x8]
  413e61:	mov    ecx,DWORD PTR [ebp+0x10]
  413e64:	mov    ecx,DWORD PTR [ecx+0x1d8]
  413e6a:	add    eax,0x2
  413e6d:	push   eax
  413e6e:	push   DWORD PTR [ebp-0xc]
  413e71:	call   DWORD PTR [ecx+0x8]
  413e74:	mov    DWORD PTR [ebp+0xc],eax
  413e77:	mov    eax,DWORD PTR [ebp-0x4]
  413e7a:	mov    ecx,DWORD PTR [ebp+0xc]
  413e7d:	xor    eax,esi
  413e7f:	add    eax,edi
  413e81:	cmp    eax,ecx
  413e83:	mov    eax,DWORD PTR [ebp-0x8]
  413e86:	jne    0x413e99
  413e88:	mov    ecx,DWORD PTR [ebp-0x18]
  413e8b:	xor    eax,esi
  413e8d:	lea    eax,[ecx+eax*1+0x3272de]
  413e94:	mov    DWORD PTR [ebp-0x18],eax
  413e97:	jmp    0x413ea9
  413e99:	mov    ecx,DWORD PTR [ebp+0xc]
  413e9c:	xor    eax,esi
  413e9e:	add    eax,edi
  413ea0:	imul   eax,ecx
  413ea3:	mov    ecx,DWORD PTR [ebp-0x1c]
  413ea6:	mov    DWORD PTR [ecx+ebx*4],eax
  413ea9:	mov    eax,DWORD PTR [ebp-0x8]
  413eac:	xor    eax,esi
  413eae:	lea    ebx,[ebx+eax*1+0x3272de]
  413eb5:	mov    eax,DWORD PTR [ebp-0x4]
  413eb8:	mov    ecx,DWORD PTR [ebp-0x1c]
  413ebb:	xor    eax,esi
  413ebd:	add    eax,edi
  413ebf:	cmp    DWORD PTR [ecx+ebx*4],eax
  413ec2:	jne    0x413df3
  413ec8:	mov    edx,DWORD PTR [ebp-0x10]
  413ecb:	mov    eax,DWORD PTR [ebp-0x18]
  413ece:	mov    ecx,DWORD PTR [ebp-0x2c]
  413ed1:	sub    edx,0x3272dd
  413ed7:	xor    edx,esi
  413ed9:	jmp    0x413ca3
  413ede:	mov    ecx,DWORD PTR [ebp-0x4]
  413ee1:	xor    ecx,esi
  413ee3:	add    ecx,edi
  413ee5:	cmp    eax,ecx
  413ee7:	mov    eax,DWORD PTR [ebp-0x4]
  413eea:	jne    0x413ef4
  413eec:	mov    eax,DWORD PTR [ebp-0x8]
  413eef:	jmp    0x413ef4
  413ef1:	mov    eax,DWORD PTR [ebp-0x4]
  413ef4:	xor    eax,esi
  413ef6:	add    eax,edi
  413ef8:	pop    edi
  413ef9:	pop    esi
  413efa:	pop    ebx
  413efb:	leave  
  413efc:	ret    0xc
  413eff:	push   ebp
  413f00:	mov    ebp,esp
  413f02:	sub    esp,0x28
  413f05:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  413f0c:	mov    DWORD PTR [ebp-0x28],0xf89c85b4
  413f13:	mov    eax,DWORD PTR [ebp+0xc]
  413f16:	mov    DWORD PTR [ebp+0xc],eax
  413f19:	push   esi
  413f1a:	mov    eax,eax
  413f1c:	mov    eax,DWORD PTR [ebp-0x4]
  413f1f:	mov    esi,DWORD PTR [ebp+0x8]
  413f22:	mov    ecx,0x7510897
  413f27:	xor    eax,ecx
  413f29:	mov    edx,0x3272de
  413f2e:	add    eax,edx
  413f30:	cmp    esi,eax
  413f32:	je     0x414059
  413f38:	mov    eax,DWORD PTR [ebp+0x8]
  413f3b:	mov    esi,DWORD PTR [ebp+0x8]
  413f3e:	add    esi,DWORD PTR [eax+0x3c]
  413f41:	push   edi
  413f42:	mov    DWORD PTR [ebp+0xc],esi
  413f45:	mov    DWORD PTR [ebp-0x1c],0xf89c85b0
  413f4c:	mov    eax,DWORD PTR [ebp-0x1c]
  413f4f:	mov    esi,DWORD PTR [ebp-0x4]
  413f52:	mov    edi,DWORD PTR [ebp+0xc]
  413f55:	xor    esi,ecx
  413f57:	xor    eax,ecx
  413f59:	add    esi,edx
  413f5b:	cmp    DWORD PTR [edi+eax*8+0x1939768],esi
  413f62:	je     0x414053
  413f68:	mov    esi,DWORD PTR [ebp+0xc]
  413f6b:	mov    eax,DWORD PTR [ebp+0x8]
  413f6e:	add    eax,DWORD PTR [esi+0xa0]
  413f74:	mov    esi,DWORD PTR [ebp+0x8]
  413f77:	mov    edi,DWORD PTR [ebp+0xc]
  413f7a:	sub    esi,DWORD PTR [edi+0x34]
  413f7d:	mov    edi,DWORD PTR [ebp-0x4]
  413f80:	xor    edi,ecx
  413f82:	add    edi,edx
  413f84:	mov    DWORD PTR [ebp-0x24],esi
  413f87:	cmp    esi,edi
  413f89:	je     0x414053
  413f8f:	mov    esi,DWORD PTR [ebp-0x4]
  413f92:	xor    esi,ecx
  413f94:	add    esi,edx
  413f96:	mov    DWORD PTR [ebp-0x8],esi
  413f99:	push   ebx
  413f9a:	mov    DWORD PTR [ebp-0x10],0xf89c85b2
  413fa1:	jmp    0x41403d
  413fa6:	mov    esi,DWORD PTR [ebp-0x4]
  413fa9:	xor    esi,ecx
  413fab:	lea    edi,[ebx-0x8]
  413fae:	add    esi,edx
  413fb0:	shr    edi,1
  413fb2:	cmp    esi,edi
  413fb4:	jae    0x414023
  413fb6:	sub    edi,esi
  413fb8:	lea    ebx,[eax+esi*2+0x8]
  413fbc:	mov    DWORD PTR [ebp-0x18],edi
  413fbf:	movzx  esi,WORD PTR [ebx]
  413fc2:	and    esi,0xfff
  413fc8:	mov    DWORD PTR [ebp-0x14],esi
  413fcb:	mov    edi,DWORD PTR [ebp-0x14]
  413fce:	mov    esi,DWORD PTR [eax]
  413fd0:	sub    esi,edx
  413fd2:	add    edi,esi
  413fd4:	movzx  esi,WORD PTR [ebx]
  413fd7:	shr    esi,0xc
  413fda:	xor    edi,ecx
  413fdc:	mov    DWORD PTR [ebp-0x20],edi
  413fdf:	mov    DWORD PTR [ebp-0x14],esi
  413fe2:	mov    esi,DWORD PTR [ebp-0x20]
  413fe5:	mov    edi,DWORD PTR [ebp+0x8]
  413fe8:	xor    esi,ecx
  413fea:	lea    esi,[esi+edi*1+0x3272de]
  413ff1:	mov    DWORD PTR [ebp-0x20],esi
  413ff4:	mov    esi,DWORD PTR [ebp-0x10]
  413ff7:	mov    edi,DWORD PTR [ebp-0x14]
  413ffa:	xor    esi,ecx
  413ffc:	add    esi,edx
  413ffe:	cmp    edi,esi
  414000:	jne    0x414018
  414002:	mov    esi,DWORD PTR [ebp-0x10]
  414005:	mov    edi,DWORD PTR [ebp-0x14]
  414008:	xor    esi,ecx
  41400a:	add    esi,edx
  41400c:	cmp    edi,esi
  41400e:	jne    0x414018
  414010:	mov    esi,DWORD PTR [ebp-0x20]
  414013:	mov    edi,DWORD PTR [ebp-0x24]
  414016:	add    DWORD PTR [esi],edi
  414018:	add    ebx,0x2
  41401b:	dec    DWORD PTR [ebp-0x18]
  41401e:	jne    0x413fbf
  414020:	mov    ebx,DWORD PTR [ebp-0xc]
  414023:	add    DWORD PTR [ebp-0x8],ebx
  414026:	mov    esi,DWORD PTR [ebp-0x1c]
  414029:	mov    edi,DWORD PTR [ebp-0x8]
  41402c:	mov    ebx,DWORD PTR [ebp+0xc]
  41402f:	xor    esi,ecx
  414031:	cmp    edi,DWORD PTR [ebx+esi*8+0x193976c]
  414038:	jae    0x414052
  41403a:	add    eax,DWORD PTR [ebp-0xc]
  41403d:	mov    esi,DWORD PTR [ebp-0x4]
  414040:	mov    ebx,DWORD PTR [eax+0x4]
  414043:	xor    esi,ecx
  414045:	add    esi,edx
  414047:	mov    DWORD PTR [ebp-0xc],ebx
  41404a:	cmp    ebx,esi
  41404c:	jne    0x413fa6
  414052:	pop    ebx
  414053:	mov    eax,DWORD PTR [ebp-0x28]
  414056:	pop    edi
  414057:	jmp    0x41405c
  414059:	mov    eax,DWORD PTR [ebp-0x4]
  41405c:	xor    eax,ecx
  41405e:	add    eax,edx
  414060:	pop    esi
  414061:	leave  
  414062:	ret    0x8
  414065:	push   ebp
  414066:	mov    ebp,esp
  414068:	sub    esp,0x54
  41406b:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  414072:	mov    DWORD PTR [ebp-0x24],0xf89c85b4
  414079:	mov    eax,DWORD PTR [ebp-0x4]
  41407c:	push   ebx
  41407d:	push   esi
  41407e:	mov    esi,0x7510897
  414083:	xor    eax,esi
  414085:	mov    ebx,0x3272de
  41408a:	add    eax,ebx
  41408c:	mov    DWORD PTR [ebp-0x18],eax
  41408f:	mov    eax,DWORD PTR [ebp-0x4]
  414092:	xor    eax,esi
  414094:	add    eax,ebx
  414096:	mov    DWORD PTR [ebp-0x20],eax
  414099:	push   edi
  41409a:	mov    edi,DWORD PTR [ebp+0x20]
  41409d:	mov    eax,DWORD PTR [ebp-0x10]
  4140a0:	mov    ecx,DWORD PTR [ebp-0x10]
  4140a3:	xor    eax,ecx
  4140a5:	mov    DWORD PTR [ebp-0x10],eax
  4140a8:	add    DWORD PTR [ebp-0x10],0xf89cb5b5
  4140af:	mov    eax,DWORD PTR [ebp-0x8]
  4140b2:	mov    ecx,DWORD PTR [ebp-0x8]
  4140b5:	xor    eax,ecx
  4140b7:	mov    DWORD PTR [ebp-0x8],eax
  4140ba:	add    DWORD PTR [ebp-0x8],0xf89c85f5
  4140c1:	mov    eax,DWORD PTR [ebp-0xc]
  4140c4:	mov    ecx,DWORD PTR [ebp-0xc]
  4140c7:	xor    eax,ecx
  4140c9:	mov    DWORD PTR [ebp-0xc],eax
  4140cc:	add    DWORD PTR [ebp-0xc],0xf89c85b1
  4140d3:	mov    eax,DWORD PTR [ebp-0x14]
  4140d6:	mov    ecx,DWORD PTR [ebp-0x14]
  4140d9:	xor    eax,ecx
  4140db:	mov    DWORD PTR [ebp-0x14],eax
  4140de:	add    DWORD PTR [ebp-0x14],0xf89f05b5
  4140e5:	mov    eax,0x9474
  4140ea:	mov    WORD PTR [ebp+0x20],ax
  4140ee:	mov    eax,DWORD PTR [ebp+0x8]
  4140f1:	test   eax,eax
  4140f3:	je     0x4144d8
  4140f9:	mov    eax,DWORD PTR [ebp+0xc]
  4140fc:	test   eax,eax
  4140fe:	je     0x4144d8
  414104:	mov    eax,DWORD PTR [ebp+0x18]
  414107:	test   eax,eax
  414109:	je     0x4144d8
  41410f:	mov    ax,WORD PTR [ebp+0x20]
  414113:	mov    ecx,0x8a8b
  414118:	xor    ax,cx
  41411b:	mov    ecx,0x3b4e
  414120:	add    ax,cx
  414123:	mov    ecx,DWORD PTR [ebp+0x8]
  414126:	cmp    WORD PTR [ecx],ax
  414129:	jne    0x4144d8
  41412f:	mov    eax,DWORD PTR [ebp-0x4]
  414132:	mov    ecx,DWORD PTR [ebp+0x8]
  414135:	mov    eax,DWORD PTR [ebp+0x8]
  414138:	add    eax,DWORD PTR [ecx+0x3c]
  41413b:	mov    DWORD PTR [ebp+0xc],eax
  41413e:	mov    eax,DWORD PTR [eax+0x50]
  414141:	test   eax,eax
  414143:	je     0x4144d8
  414149:	mov    DWORD PTR [ebp-0x2c],0xf88c85b5
  414150:	mov    eax,DWORD PTR [ebp-0x2c]
  414153:	xor    eax,esi
  414155:	add    eax,ebx
  414157:	mov    DWORD PTR [ebp-0x2c],eax
  41415a:	mov    eax,DWORD PTR [ebp-0x4]
  41415d:	mov    eax,DWORD PTR [edi+0x190]
  414163:	mov    ecx,DWORD PTR [eax]
  414165:	mov    ecx,DWORD PTR [ecx+0x3c]
  414168:	add    ecx,DWORD PTR [eax]
  41416a:	mov    eax,DWORD PTR [ebp-0x4]
  41416d:	mov    eax,DWORD PTR [edi+0x18c]
  414173:	mov    edx,DWORD PTR [eax]
  414175:	mov    DWORD PTR [ebp-0x1c],ecx
  414178:	mov    DWORD PTR [ebp+0x20],edx
  41417b:	cmp    edx,edx
  41417d:	jne    0x4141b2
  41417f:	mov    eax,DWORD PTR [edi+0x1d8]
  414185:	lea    edx,[ebp-0x18]
  414188:	push   edx
  414189:	mov    edx,DWORD PTR [ebp-0x8]
  41418c:	xor    edx,esi
  41418e:	add    edx,ebx
  414190:	push   edx
  414191:	push   DWORD PTR [ecx+0x50]
  414194:	push   DWORD PTR [ebp+0x20]
  414197:	call   DWORD PTR [eax+0x1c]
  41419a:	mov    ecx,DWORD PTR [ebp-0x1c]
  41419d:	mov    eax,DWORD PTR [ecx+0x54]
  4141a0:	mov    ecx,DWORD PTR [ecx+0x50]
  4141a3:	sub    ecx,eax
  4141a5:	add    eax,DWORD PTR [ebp+0x20]
  4141a8:	push   ecx
  4141a9:	push   eax
  4141aa:	call   0x414aec
  4141af:	mov    edx,DWORD PTR [ebp+0x20]
  4141b2:	mov    eax,DWORD PTR [edi+0x194]
  4141b8:	mov    DWORD PTR [eax],edx
  4141ba:	mov    eax,DWORD PTR [ebp+0xc]
  4141bd:	push   DWORD PTR [eax+0x54]
  4141c0:	push   DWORD PTR [ebp+0x8]
  4141c3:	push   edx
  4141c4:	call   0x414993
  4141c9:	mov    ecx,DWORD PTR [ebp+0x20]
  4141cc:	mov    eax,DWORD PTR [ecx+0x3c]
  4141cf:	add    eax,ecx
  4141d1:	movzx  ecx,WORD PTR [eax+0x14]
  4141d5:	lea    ecx,[ecx+eax*1+0x18]
  4141d9:	mov    DWORD PTR [ebp+0x18],ecx
  4141dc:	mov    ecx,DWORD PTR [ebp-0x4]
  4141df:	movzx  edx,WORD PTR [eax+0x6]
  4141e3:	xor    ecx,esi
  4141e5:	add    ecx,ebx
  4141e7:	mov    DWORD PTR [ebp+0xc],eax
  4141ea:	cmp    edx,ecx
  4141ec:	je     0x41429a
  4141f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4141f5:	xor    ecx,esi
  4141f7:	add    ecx,ebx
  4141f9:	mov    DWORD PTR [ebp-0x20],ecx
  4141fc:	mov    ecx,DWORD PTR [ebp-0x24]
  4141ff:	movzx  edx,WORD PTR [eax+0x6]
  414203:	xor    ecx,esi
  414205:	sub    edx,ecx
  414207:	sub    edx,ebx
  414209:	cmp    DWORD PTR [ebp-0x20],edx
  41420c:	ja     0x41429a
  414212:	mov    edx,DWORD PTR [ebp+0x18]
  414215:	add    edx,0x8
  414218:	mov    DWORD PTR [ebp+0x18],edx
  41421b:	jmp    0x414220
  41421d:	mov    edx,DWORD PTR [ebp+0x18]
  414220:	mov    eax,DWORD PTR [eax+0x38]
  414223:	lea    ecx,[eax-0x1]
  414226:	mov    DWORD PTR [ebp-0x30],eax
  414229:	mov    eax,DWORD PTR [edx]
  41422b:	test   ecx,eax
  41422d:	je     0x414236
  41422f:	not    ecx
  414231:	and    eax,ecx
  414233:	add    eax,DWORD PTR [ebp-0x30]
  414236:	push   eax
  414237:	mov    eax,DWORD PTR [edx+0x4]
  41423a:	add    eax,DWORD PTR [ebp+0x20]
  41423d:	push   eax
  41423e:	call   0x414aec
  414243:	mov    edx,DWORD PTR [ebp-0x4]
  414246:	mov    eax,DWORD PTR [ebp+0x18]
  414249:	mov    ecx,DWORD PTR [eax+0x8]
  41424c:	xor    edx,esi
  41424e:	add    edx,ebx
  414250:	cmp    ecx,edx
  414252:	je     0x41426b
  414254:	push   ecx
  414255:	mov    ecx,DWORD PTR [ebp+0x8]
  414258:	add    ecx,DWORD PTR [eax+0xc]
  41425b:	mov    eax,DWORD PTR [eax+0x4]
  41425e:	add    eax,DWORD PTR [ebp+0x20]
  414261:	push   ecx
  414262:	push   eax
  414263:	call   0x414993
  414268:	mov    eax,DWORD PTR [ebp+0x18]
  41426b:	mov    ecx,DWORD PTR [ebp-0x24]
  41426e:	mov    edx,DWORD PTR [ebp-0x20]
  414271:	add    eax,0x28
  414274:	xor    ecx,esi
  414276:	lea    ecx,[edx+ecx*1+0x3272de]
  41427d:	mov    edx,DWORD PTR [ebp+0xc]
  414280:	mov    DWORD PTR [ebp+0x18],eax
  414283:	mov    eax,DWORD PTR [ebp-0x24]
  414286:	movzx  edx,WORD PTR [edx+0x6]
  41428a:	xor    eax,esi
  41428c:	sub    edx,eax
  41428e:	mov    eax,DWORD PTR [ebp+0xc]
  414291:	sub    edx,ebx
  414293:	mov    DWORD PTR [ebp-0x20],ecx
  414296:	cmp    ecx,edx
  414298:	jbe    0x41421d
  41429a:	mov    ecx,DWORD PTR [ebp-0x4]
  41429d:	mov    edx,DWORD PTR [edi+0x18c]
  4142a3:	xor    ecx,esi
  4142a5:	add    ecx,ebx
  4142a7:	mov    DWORD PTR [ebp+0x18],ecx
  4142aa:	mov    ecx,DWORD PTR [ebp+0x20]
  4142ad:	cmp    ecx,DWORD PTR [edx]
  4142af:	jne    0x4142d8
  4142b1:	mov    eax,DWORD PTR [edi+0x1d8]
  4142b7:	lea    edx,[ebp-0x18]
  4142ba:	push   edx
  4142bb:	mov    edx,DWORD PTR [ebp-0xc]
  4142be:	xor    edx,esi
  4142c0:	add    edx,ebx
  4142c2:	push   edx
  4142c3:	mov    edx,DWORD PTR [ebp-0x1c]
  4142c6:	push   DWORD PTR [edx+0x54]
  4142c9:	push   ecx
  4142ca:	call   DWORD PTR [eax+0x1c]
  4142cd:	test   eax,eax
  4142cf:	je     0x4144c9
  4142d5:	mov    eax,DWORD PTR [ebp+0xc]
  4142d8:	mov    ecx,DWORD PTR [edi+0x1c8]
  4142de:	mov    ecx,DWORD PTR [ecx]
  4142e0:	xor    ecx,esi
  4142e2:	add    ecx,ebx
  4142e4:	je     0x4143f4
  4142ea:	and    DWORD PTR [ebp-0x28],0x0
  4142ee:	mov    eax,0x4fab
  4142f3:	mov    WORD PTR [ebp-0x3c],ax
  4142f7:	add    eax,0x2
  4142fa:	mov    WORD PTR [ebp-0x3a],ax
  4142fe:	mov    eax,0x4f9d
  414303:	mov    WORD PTR [ebp-0x38],ax
  414307:	add    eax,0xfffffff8
  41430a:	and    DWORD PTR [ebp+0x8],0x0
  41430e:	mov    ecx,eax
  414310:	mov    WORD PTR [ebp-0x34],ax
  414314:	mov    eax,0x4e39
  414319:	mov    WORD PTR [ebp-0x36],cx
  41431d:	mov    WORD PTR [ebp-0x32],ax
  414321:	mov    eax,DWORD PTR [ebp+0x8]
  414324:	lea    eax,[ebp+eax*2-0x3c]
  414328:	mov    ecx,0x8a8b
  41432d:	xor    cx,WORD PTR [eax]
  414330:	mov    edx,0x3b4e
  414335:	add    cx,dx
  414338:	inc    DWORD PTR [ebp+0x8]
  41433b:	cmp    DWORD PTR [ebp+0x8],0x6
  41433f:	mov    WORD PTR [eax],cx
  414342:	jb     0x414321
  414344:	mov    DWORD PTR [ebp-0x54],0x220e1c24
  41434b:	mov    DWORD PTR [ebp-0x50],0x3d1c0a01
  414352:	mov    DWORD PTR [ebp-0x4c],0xf10e0c0a
  414359:	mov    DWORD PTR [ebp-0x48],0x390e0b22
  414360:	mov    DWORD PTR [ebp-0x44],0x1d0e1c1c
  414367:	mov    WORD PTR [ebp-0x40],0xf0f
  41436d:	mov    BYTE PTR [ebp-0x3e],0x78
  414371:	xor    ecx,ecx
  414373:	lea    eax,[ebp+ecx*1-0x54]
  414377:	mov    dl,BYTE PTR [eax]
  414379:	xor    dl,0x72
  41437c:	sub    dl,0xa
  41437f:	inc    ecx
  414380:	mov    BYTE PTR [eax],dl
  414382:	cmp    ecx,0x17
  414385:	jb     0x414373
  414387:	mov    eax,DWORD PTR [edi+0x1d8]
  41438d:	lea    ecx,[ebp-0x3c]
  414390:	push   ecx
  414391:	call   DWORD PTR [eax+0x4]
  414394:	mov    ecx,DWORD PTR [edi+0x1d8]
  41439a:	lea    edx,[ebp-0x54]
  41439d:	push   edx
  41439e:	push   eax
  41439f:	call   DWORD PTR [ecx+0x8]
  4143a2:	lea    ecx,[ebp-0x28]
  4143a5:	push   ecx
  4143a6:	mov    ecx,DWORD PTR [edi+0x18c]
  4143ac:	push   DWORD PTR [ecx]
  4143ae:	call   eax
  4143b0:	mov    eax,DWORD PTR [ebp-0x28]
  4143b3:	test   eax,eax
  4143b5:	je     0x4143f1
  4143b7:	mov    DWORD PTR [ebp+0x8],eax
  4143ba:	jmp    0x4143c6
  4143bc:	mov    eax,DWORD PTR [eax]
  4143be:	mov    DWORD PTR [ebp-0x28],eax
  4143c1:	cmp    eax,DWORD PTR [ebp+0x8]
  4143c4:	je     0x4143d3
  4143c6:	mov    edx,DWORD PTR [eax+0x18]
  4143c9:	mov    ecx,DWORD PTR [edi+0x18c]
  4143cf:	cmp    edx,DWORD PTR [ecx]
  4143d1:	jne    0x4143bc
  4143d3:	mov    edx,DWORD PTR [eax+0x18]
  4143d6:	mov    ecx,DWORD PTR [edi+0x18c]
  4143dc:	cmp    edx,DWORD PTR [ecx]
  4143de:	jne    0x4143f1
  4143e0:	mov    edx,DWORD PTR [ebp-0x1c]
  4143e3:	mov    ecx,DWORD PTR [edi+0x190]
  4143e9:	mov    edx,DWORD PTR [edx+0x28]
  4143ec:	add    edx,DWORD PTR [ecx]
  4143ee:	mov    DWORD PTR [eax+0x1c],edx
  4143f1:	mov    eax,DWORD PTR [ebp+0xc]
  4143f4:	push   edi
  4143f5:	push   eax
  4143f6:	push   DWORD PTR [ebp+0x20]
  4143f9:	call   0x413c1c
  4143fe:	test   eax,eax
  414400:	je     0x4144c9
  414406:	push   DWORD PTR [ebp+0xc]
  414409:	mov    ecx,edi
  41440b:	push   DWORD PTR [ebp+0x20]
  41440e:	call   0x413b75
  414413:	test   eax,eax
  414415:	je     0x4144c9
  41441b:	mov    eax,DWORD PTR [ebp+0xc]
  41441e:	mov    edx,DWORD PTR [ebp+0x20]
  414421:	mov    ecx,edi
  414423:	call   0x413a4e
  414428:	test   eax,eax
  41442a:	je     0x4144c9
  414430:	push   edi
  414431:	push   DWORD PTR [ebp+0x20]
  414434:	call   0x413eff
  414439:	test   eax,eax
  41443b:	je     0x4144c9
  414441:	mov    eax,DWORD PTR [edi+0x18c]
  414447:	mov    edx,DWORD PTR [ebp+0x20]
  41444a:	cmp    edx,DWORD PTR [eax]
  41444c:	jne    0x414468
  41444e:	mov    eax,DWORD PTR [edi+0x1d8]
  414454:	lea    ecx,[ebp-0x18]
  414457:	push   ecx
  414458:	push   DWORD PTR [ebp-0x18]
  41445b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41445e:	push   DWORD PTR [ecx+0x54]
  414461:	push   edx
  414462:	call   DWORD PTR [eax+0x1c]
  414465:	mov    edx,DWORD PTR [ebp+0x20]
  414468:	mov    eax,DWORD PTR [edi+0x1c8]
  41446e:	mov    eax,DWORD PTR [eax]
  414470:	xor    eax,esi
  414472:	add    eax,ebx
  414474:	je     0x4144ad
  414476:	mov    ecx,DWORD PTR [ebp+0xc]
  414479:	mov    eax,DWORD PTR [ecx+0x28]
  41447c:	mov    DWORD PTR [ebp+0x8],0xf89ca5b5
  414483:	mov    esi,DWORD PTR [ebp+0x8]
  414486:	push   DWORD PTR [ebp+0x14]
  414489:	xor    esi,0x897
  41448f:	push   DWORD PTR [ebp+0x10]
  414492:	add    esi,0x72de
  414498:	or     WORD PTR [ecx+0x16],si
  41449c:	add    eax,edx
  41449e:	push   edx
  41449f:	call   eax
  4144a1:	mov    DWORD PTR [edi+0x1d0],0xf89c85b4
  4144ab:	jmp    0x4144b7
  4144ad:	mov    eax,DWORD PTR [ebp+0xc]
  4144b0:	mov    eax,DWORD PTR [eax+0x28]
  4144b3:	add    eax,edx
  4144b5:	call   eax
  4144b7:	mov    DWORD PTR [ebp-0x20],eax
  4144ba:	mov    eax,DWORD PTR [ebp-0x20]
  4144bd:	mov    ecx,DWORD PTR [ebp+0x1c]
  4144c0:	mov    DWORD PTR [ecx],eax
  4144c2:	mov    DWORD PTR [ebp+0x18],0x1
  4144c9:	cmp    DWORD PTR [ebp+0x18],0x0
  4144cd:	jne    0x4144d3
  4144cf:	and    DWORD PTR [ebp+0x20],0x0
  4144d3:	mov    eax,DWORD PTR [ebp+0x20]
  4144d6:	jmp    0x4144da
  4144d8:	xor    eax,eax
  4144da:	pop    edi
  4144db:	pop    esi
  4144dc:	pop    ebx
  4144dd:	leave  
  4144de:	ret    0x1c
  4144e1:	push   ebp
  4144e2:	mov    ebp,esp
  4144e4:	movzx  edx,WORD PTR [ecx+0x6]
  4144e8:	movzx  eax,WORD PTR [ecx+0x14]
  4144ec:	push   ebx
  4144ed:	push   edi
  4144ee:	xor    edi,edi
  4144f0:	lea    eax,[eax+ecx*1+0x18]
  4144f4:	test   edx,edx
  4144f6:	je     0x414517
  4144f8:	mov    ecx,DWORD PTR [eax+0xc]
  4144fb:	lea    ebx,[ecx+esi*1]
  4144fe:	cmp    DWORD PTR [ebp+0x8],ebx
  414501:	jb     0x41450f
  414503:	mov    ebx,DWORD PTR [eax+0x8]
  414506:	add    ebx,ecx
  414508:	add    ebx,esi
  41450a:	cmp    DWORD PTR [ebp+0x8],ebx
  41450d:	jb     0x414519
  41450f:	add    eax,0x28
  414512:	inc    edi
  414513:	cmp    edi,edx
  414515:	jb     0x4144f8
  414517:	xor    eax,eax
  414519:	pop    edi
  41451a:	pop    ebx
  41451b:	pop    ebp
  41451c:	ret    0x4
  41451f:	push   ebp
  414520:	mov    ebp,esp
  414522:	sub    esp,0x28
  414525:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  41452c:	mov    DWORD PTR [ebp-0x1c],0xf89c85b4
  414533:	mov    DWORD PTR [ebp-0x28],0xf89c85b3
  41453a:	mov    eax,0x4f98
  41453f:	mov    WORD PTR [ebp-0xc],ax
  414543:	mov    eax,0x4e78
  414548:	mov    WORD PTR [ebp-0x4],ax
  41454c:	mov    eax,0x4fa7
  414551:	mov    WORD PTR [ebp-0x8],ax
  414555:	add    eax,0xffffffe0
  414558:	mov    WORD PTR [ebp-0x8],ax
  41455c:	mov    eax,DWORD PTR [ebp+0x8]
  41455f:	mov    DWORD PTR [ebp-0x14],eax
  414562:	mov    eax,DWORD PTR [ebp+0xc]
  414565:	mov    DWORD PTR [ebp-0x18],eax
  414568:	mov    eax,DWORD PTR [ebp-0x10]
  41456b:	push   ebx
  41456c:	mov    ecx,0x7510897
  414571:	xor    eax,ecx
  414573:	push   esi
  414574:	mov    esi,DWORD PTR [ebp-0x14]
  414577:	mov    edx,0x3272de
  41457c:	add    eax,edx
  41457e:	push   edi
  41457f:	cmp    esi,eax
  414581:	je     0x41477f
  414587:	mov    eax,DWORD PTR [ebp-0x10]
  41458a:	mov    esi,DWORD PTR [ebp-0x18]
  41458d:	xor    eax,ecx
  41458f:	add    eax,edx
  414591:	cmp    esi,eax
  414593:	je     0x41477f
  414599:	mov    eax,DWORD PTR [ebp-0x10]
  41459c:	xor    eax,ecx
  41459e:	add    eax,edx
  4145a0:	mov    DWORD PTR [ebp-0x20],eax
  4145a3:	mov    eax,DWORD PTR [ebp-0x10]
  4145a6:	xor    eax,ecx
  4145a8:	add    eax,edx
  4145aa:	mov    DWORD PTR [ebp-0x24],eax
  4145ad:	movzx  esi,WORD PTR [ebp-0x4]
  4145b1:	movzx  edi,WORD PTR [ebp-0xc]
  4145b5:	mov    eax,0x8a8b
  4145ba:	xor    si,ax
  4145bd:	mov    ebx,0x8a8b
  4145c2:	xor    di,bx
  4145c5:	mov    eax,0x3b4e
  4145ca:	add    si,ax
  4145cd:	add    di,ax
  4145d0:	sub    edi,esi
  4145d2:	mov    WORD PTR [ebp-0xc],di
  4145d6:	mov    esi,DWORD PTR [ebp-0x20]
  4145d9:	mov    edi,DWORD PTR [ebp-0x14]
  4145dc:	mov    si,WORD PTR [edi+esi*2]
  4145e0:	mov    WORD PTR [ebp+0x8],si
  4145e4:	mov    esi,DWORD PTR [ebp-0x24]
  4145e7:	mov    edi,DWORD PTR [ebp-0x18]
  4145ea:	mov    si,WORD PTR [edi+esi*2]
  4145ee:	mov    WORD PTR [ebp+0xc],si
  4145f2:	mov    esi,0x72de
  4145f7:	jmp    0x414704
  4145fc:	mov    edi,DWORD PTR [ebp-0x10]
  4145ff:	mov    bx,WORD PTR [ebp+0xc]
  414603:	xor    edi,0x897
  414609:	add    edi,esi
  41460b:	cmp    bx,di
  41460e:	je     0x41472e
  414614:	mov    edi,DWORD PTR [ebp-0x10]
  414617:	mov    ebx,DWORD PTR [ebp+0x10]
  41461a:	xor    edi,ecx
  41461c:	add    edi,edx
  41461e:	cmp    ebx,edi
  414620:	mov    di,WORD PTR [ebp+0xc]
  414624:	mov    bx,WORD PTR [ebp+0x8]
  414628:	je     0x4146bb
  41462e:	cmp    bx,di
  414631:	je     0x4146c4
  414637:	mov    di,WORD PTR [ebp-0x4]
  41463b:	mov    ebx,0x8a8b
  414640:	xor    di,bx
  414643:	mov    bx,WORD PTR [ebp+0x8]
  414647:	add    di,ax
  41464a:	cmp    bx,di
  41464d:	jb     0x414675
  41464f:	mov    di,WORD PTR [ebp-0x8]
  414653:	mov    ebx,0x8a8b
  414658:	xor    di,bx
  41465b:	mov    bx,WORD PTR [ebp+0x8]
  41465f:	add    di,ax
  414662:	cmp    bx,di
  414665:	ja     0x414675
  414667:	movzx  edi,WORD PTR [ebp+0x8]
  41466b:	movzx  ebx,WORD PTR [ebp-0xc]
  41466f:	add    edi,ebx
  414671:	mov    WORD PTR [ebp+0x8],di
  414675:	mov    di,WORD PTR [ebp-0x4]
  414679:	mov    ebx,0x8a8b
  41467e:	xor    di,bx
  414681:	mov    bx,WORD PTR [ebp+0xc]
  414685:	add    di,ax
  414688:	cmp    bx,di
  41468b:	jb     0x4146b3
  41468d:	mov    di,WORD PTR [ebp-0x8]
  414691:	mov    ebx,0x8a8b
  414696:	xor    di,bx
  414699:	mov    bx,WORD PTR [ebp+0xc]
  41469d:	add    di,ax
  4146a0:	cmp    bx,di
  4146a3:	ja     0x4146b3
  4146a5:	movzx  edi,WORD PTR [ebp+0xc]
  4146a9:	movzx  ebx,WORD PTR [ebp-0xc]
  4146ad:	add    edi,ebx
  4146af:	mov    WORD PTR [ebp+0xc],di
  4146b3:	mov    di,WORD PTR [ebp+0xc]
  4146b7:	mov    bx,WORD PTR [ebp+0x8]
  4146bb:	cmp    bx,di
  4146be:	jne    0x41477f
  4146c4:	mov    edi,DWORD PTR [ebp-0x28]
  4146c7:	mov    ebx,DWORD PTR [ebp-0x14]
  4146ca:	xor    edi,ecx
  4146cc:	lea    edi,[edi+ebx*1+0x3272de]
  4146d3:	mov    DWORD PTR [ebp-0x14],edi
  4146d6:	mov    edi,DWORD PTR [ebp-0x28]
  4146d9:	mov    ebx,DWORD PTR [ebp-0x18]
  4146dc:	xor    edi,ecx
  4146de:	lea    edi,[edi+ebx*1+0x3272de]
  4146e5:	mov    DWORD PTR [ebp-0x18],edi
  4146e8:	mov    edi,DWORD PTR [ebp-0x20]
  4146eb:	mov    ebx,DWORD PTR [ebp-0x14]
  4146ee:	mov    di,WORD PTR [ebx+edi*2]
  4146f2:	mov    WORD PTR [ebp+0x8],di
  4146f6:	mov    edi,DWORD PTR [ebp-0x24]
  4146f9:	mov    ebx,DWORD PTR [ebp-0x18]
  4146fc:	mov    di,WORD PTR [ebx+edi*2]
  414700:	mov    WORD PTR [ebp+0xc],di
  414704:	mov    edi,DWORD PTR [ebp-0x10]
  414707:	mov    bx,WORD PTR [ebp+0x8]
  41470b:	xor    edi,0x897
  414711:	add    edi,esi
  414713:	cmp    bx,di
  414716:	jne    0x4145fc
  41471c:	mov    esi,DWORD PTR [ebp-0x1c]
  41471f:	xor    esi,ecx
  414721:	mov    ecx,DWORD PTR [ebp-0x10]
  414724:	add    esi,edx
  414726:	imul   esi,ecx
  414729:	mov    DWORD PTR [ebp-0x10],esi
  41472c:	jmp    0x414740
  41472e:	mov    edx,DWORD PTR [ebp-0x10]
  414731:	xor    edx,ecx
  414733:	mov    ecx,DWORD PTR [ebp-0x1c]
  414736:	lea    ecx,[edx+ecx*1+0x3272de]
  41473d:	mov    DWORD PTR [ebp-0x1c],ecx
  414740:	mov    edx,DWORD PTR [ebp-0x20]
  414743:	mov    esi,DWORD PTR [ebp-0x14]
  414746:	mov    si,WORD PTR [esi+edx*2]
  41474a:	mov    ecx,eax
  41474c:	sub    si,cx
  41474f:	mov    edx,0x8a8b
  414754:	xor    si,dx
  414757:	mov    ecx,0x4e39
  41475c:	cmp    si,cx
  41475f:	jne    0x41477a
  414761:	mov    esi,DWORD PTR [ebp-0x24]
  414764:	mov    edi,DWORD PTR [ebp-0x18]
  414767:	mov    si,WORD PTR [edi+esi*2]
  41476b:	sub    si,ax
  41476e:	xor    si,dx
  414771:	cmp    si,cx
  414774:	jne    0x41477a
  414776:	xor    eax,eax
  414778:	jmp    0x414786
  41477a:	xor    eax,eax
  41477c:	inc    eax
  41477d:	jmp    0x414786
  41477f:	mov    eax,DWORD PTR [ebp-0x1c]
  414782:	xor    eax,ecx
  414784:	add    eax,edx
  414786:	pop    edi
  414787:	pop    esi
  414788:	pop    ebx
  414789:	leave  
  41478a:	ret    0xc
  41478d:	push   ebp
  41478e:	mov    ebp,esp
  414790:	push   ecx
  414791:	mov    cx,WORD PTR [eax]
  414794:	push   esi
  414795:	mov    esi,0x3b4e
  41479a:	sub    cx,si
  41479d:	mov    esi,0x8a8b
  4147a2:	xor    cx,si
  4147a5:	mov    esi,0x4e39
  4147aa:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  4147b1:	mov    edx,0xf89c85b5
  4147b6:	cmp    cx,si
  4147b9:	je     0x414818
  4147bb:	push   ebx
  4147bc:	push   edi
  4147bd:	movzx  ecx,cx
  4147c0:	mov    edi,0xffcd8d22
  4147c5:	mov    esi,0x7510897
  4147ca:	mov    ebx,0x4f85
  4147cf:	cmp    cx,bx
  4147d2:	jne    0x4147d7
  4147d4:	mov    DWORD PTR [ebp-0x4],edx
  4147d7:	lea    edx,[edi+0x1]
  4147da:	xor    edx,esi
  4147dc:	mov    edi,edx
  4147de:	xor    edi,esi
  4147e0:	mov    cx,WORD PTR [eax+edi*2+0x64e5bc]
  4147e8:	mov    ebx,0x3b4e
  4147ed:	sub    cx,bx
  4147f0:	mov    ebx,0x8a8b
  4147f5:	xor    cx,bx
  4147f8:	mov    ebx,0x4e39
  4147fd:	cmp    cx,bx
  414800:	jne    0x4147ca
  414802:	mov    ecx,DWORD PTR [ebp-0x4]
  414805:	pop    edi
  414806:	pop    ebx
  414807:	cmp    ecx,0xf89c85b6
  41480d:	je     0x414818
  41480f:	xor    ecx,esi
  414811:	lea    eax,[eax+ecx*2+0x64e5be]
  414818:	pop    esi
  414819:	leave  
  41481a:	ret    
  41481b:	push   ebp
  41481c:	mov    ebp,esp
  41481e:	push   ecx
  41481f:	push   esi
  414820:	push   edi
  414821:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  414828:	mov    esi,0xf89c85b5
  41482d:	call   0x41478d
  414832:	mov    edi,eax
  414834:	mov    al,BYTE PTR [edi]
  414836:	add    al,0xa
  414838:	xor    al,0x72
  41483a:	cmp    al,0x78
  41483c:	je     0x41489f
  41483e:	mov    eax,edi
  414840:	mov    edx,0xffcd8d22
  414845:	mov    ecx,0x7510897
  41484a:	push   ebx
  41484b:	mov    ax,WORD PTR [eax]
  41484e:	mov    ebx,0x3b4e
  414853:	sub    ax,bx
  414856:	mov    ebx,0x8a8b
  41485b:	xor    ax,bx
  41485e:	mov    ebx,0x4e6b
  414863:	cmp    ax,bx
  414866:	jne    0x41486b
  414868:	mov    DWORD PTR [ebp-0x4],esi
  41486b:	lea    esi,[edx+0x1]
  41486e:	xor    esi,ecx
  414870:	mov    edx,esi
  414872:	xor    edx,ecx
  414874:	lea    eax,[edi+edx*2+0x64e5bc]
  41487b:	mov    bl,BYTE PTR [eax]
  41487d:	add    bl,0xa
  414880:	xor    bl,0x72
  414883:	cmp    bl,0x78
  414886:	jne    0x41484b
  414888:	mov    eax,DWORD PTR [ebp-0x4]
  41488b:	pop    ebx
  41488c:	cmp    eax,0xf89c85b6
  414891:	je     0x41489f
  414893:	xor    eax,ecx
  414895:	xor    ecx,ecx
  414897:	mov    WORD PTR [edi+eax*2+0x64e5bc],cx
  41489f:	mov    eax,edi
  4148a1:	pop    edi
  4148a2:	pop    esi
  4148a3:	leave  
  4148a4:	ret    
  4148a5:	push   ebp
  4148a6:	mov    ebp,esp
  4148a8:	push   ecx
  4148a9:	push   esi
  4148aa:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  4148b1:	mov    esi,0xf89c85b5
  4148b6:	call   0x41478d
  4148bb:	mov    cx,WORD PTR [eax]
  4148be:	mov    edx,0x3b4e
  4148c3:	sub    cx,dx
  4148c6:	mov    edx,0x8a8b
  4148cb:	xor    cx,dx
  4148ce:	mov    edx,0x4e39
  4148d3:	cmp    cx,dx
  4148d6:	je     0x41492f
  4148d8:	push   ebx
  4148d9:	push   edi
  4148da:	movzx  ecx,cx
  4148dd:	mov    edx,0xffcd8d22
  4148e2:	mov    edi,0x7510897
  4148e7:	mov    ebx,0x4e6b
  4148ec:	cmp    cx,bx
  4148ef:	jne    0x4148f4
  4148f1:	mov    DWORD PTR [ebp-0x4],esi
  4148f4:	lea    esi,[edx+0x1]
  4148f7:	xor    esi,edi
  4148f9:	mov    edx,esi
  4148fb:	xor    edx,edi
  4148fd:	mov    cx,WORD PTR [eax+edx*2+0x64e5bc]
  414905:	mov    ebx,0x3b4e
  41490a:	sub    cx,bx
  41490d:	mov    ebx,0x8a8b
  414912:	xor    cx,bx
  414915:	mov    ebx,0x4e39
  41491a:	cmp    cx,bx
  41491d:	jne    0x4148e7
  41491f:	cmp    DWORD PTR [ebp-0x4],0xf89c85b6
  414926:	pop    edi
  414927:	pop    ebx
  414928:	je     0x41492f
  41492a:	xor    eax,eax
  41492c:	inc    eax
  41492d:	jmp    0x414931
  41492f:	xor    eax,eax
  414931:	pop    esi
  414932:	leave  
  414933:	ret    
  414934:	push   ebp
  414935:	mov    ebp,esp
  414937:	push   ecx
  414938:	mov    eax,DWORD PTR [ebp+0x8]
  41493b:	movzx  ecx,WORD PTR [eax]
  41493e:	push   esi
  41493f:	lea    eax,[ecx-0x3b4e]
  414945:	mov    esi,0x8a8b
  41494a:	push   edi
  41494b:	xor    eax,esi
  41494d:	mov    edi,0x4e39
  414952:	mov    DWORD PTR [ebp-0x4],edx
  414955:	cmp    ax,di
  414958:	je     0x414985
  41495a:	mov    eax,DWORD PTR [ebp+0x8]
  41495d:	sub    eax,edx
  41495f:	mov    DWORD PTR [ebp+0x8],eax
  414962:	jmp    0x414967
  414964:	mov    eax,DWORD PTR [ebp+0x8]
  414967:	mov    WORD PTR [edx],cx
  41496a:	add    edx,0x2
  41496d:	movzx  edi,WORD PTR [eax+edx*1]
  414971:	mov    ecx,edi
  414973:	add    edi,0xffffc4b2
  414979:	xor    edi,esi
  41497b:	mov    eax,0x4e39
  414980:	cmp    di,ax
  414983:	jne    0x414964
  414985:	xor    eax,eax
  414987:	pop    edi
  414988:	mov    WORD PTR [edx],ax
  41498b:	mov    eax,DWORD PTR [ebp-0x4]
  41498e:	pop    esi
  41498f:	leave  
  414990:	ret    0x4
  414993:	push   ebp
  414994:	mov    ebp,esp
  414996:	sub    esp,0x18
  414999:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  4149a0:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  4149a7:	mov    eax,DWORD PTR [ebp-0x14]
  4149aa:	xor    eax,0x7510897
  4149af:	add    eax,0x3272de
  4149b4:	mov    DWORD PTR [ebp-0x8],eax
  4149b7:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  4149be:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  4149c5:	mov    DWORD PTR [ebp-0x4],0xf89c85b3
  4149cc:	mov    eax,DWORD PTR [ebp-0x14]
  4149cf:	xor    eax,0x7510897
  4149d4:	mov    ecx,DWORD PTR [ebp-0x8]
  4149d7:	lea    eax,[ecx+eax*1+0x3272de]
  4149de:	mov    ecx,DWORD PTR [ebp-0x18]
  4149e1:	xor    ecx,0x7510897
  4149e7:	add    ecx,0x3272de
  4149ed:	mov    edx,DWORD PTR [ebp+0x10]
  4149f0:	imul   edx,ecx
  4149f3:	cmp    eax,edx
  4149f5:	jae    0x414ae8
  4149fb:	mov    eax,DWORD PTR [ebp+0x10]
  4149fe:	mov    ecx,DWORD PTR [ebp-0x8]
  414a01:	sub    eax,ecx
  414a03:	mov    ecx,DWORD PTR [ebp-0x10]
  414a06:	xor    ecx,0x7510897
  414a0c:	add    ecx,0x3272de
  414a12:	cmp    eax,ecx
  414a14:	jbe    0x414a46
  414a16:	mov    eax,DWORD PTR [ebp+0x8]
  414a19:	add    eax,DWORD PTR [ebp-0x8]
  414a1c:	mov    ecx,DWORD PTR [ebp+0xc]
  414a1f:	add    ecx,DWORD PTR [ebp-0x8]
  414a22:	mov    edx,DWORD PTR [ecx]
  414a24:	mov    DWORD PTR [eax],edx
  414a26:	mov    ecx,DWORD PTR [ecx+0x4]
  414a29:	mov    DWORD PTR [eax+0x4],ecx
  414a2c:	mov    eax,DWORD PTR [ebp-0x10]
  414a2f:	xor    eax,0x7510897
  414a34:	mov    ecx,DWORD PTR [ebp-0x8]
  414a37:	lea    eax,[ecx+eax*1+0x3272de]
  414a3e:	mov    DWORD PTR [ebp-0x8],eax
  414a41:	jmp    0x414ae3
  414a46:	mov    eax,DWORD PTR [ebp+0x10]
  414a49:	mov    ecx,DWORD PTR [ebp-0x8]
  414a4c:	sub    eax,ecx
  414a4e:	mov    ecx,DWORD PTR [ebp-0xc]
  414a51:	xor    ecx,0x7510897
  414a57:	add    ecx,0x3272de
  414a5d:	cmp    eax,ecx
  414a5f:	jbe    0x414a88
  414a61:	mov    eax,DWORD PTR [ebp+0x8]
  414a64:	add    eax,DWORD PTR [ebp-0x8]
  414a67:	mov    ecx,DWORD PTR [ebp+0xc]
  414a6a:	add    ecx,DWORD PTR [ebp-0x8]
  414a6d:	mov    ecx,DWORD PTR [ecx]
  414a6f:	mov    DWORD PTR [eax],ecx
  414a71:	mov    eax,DWORD PTR [ebp-0xc]
  414a74:	xor    eax,0x7510897
  414a79:	mov    ecx,DWORD PTR [ebp-0x8]
  414a7c:	lea    eax,[ecx+eax*1+0x3272de]
  414a83:	mov    DWORD PTR [ebp-0x8],eax
  414a86:	jmp    0x414ae3
  414a88:	mov    eax,DWORD PTR [ebp+0x10]
  414a8b:	mov    ecx,DWORD PTR [ebp-0x8]
  414a8e:	sub    eax,ecx
  414a90:	mov    ecx,DWORD PTR [ebp-0x4]
  414a93:	xor    ecx,0x7510897
  414a99:	add    ecx,0x3272de
  414a9f:	cmp    eax,ecx
  414aa1:	jbe    0x414acc
  414aa3:	mov    eax,DWORD PTR [ebp+0x8]
  414aa6:	add    eax,DWORD PTR [ebp-0x8]
  414aa9:	mov    ecx,DWORD PTR [ebp+0xc]
  414aac:	add    ecx,DWORD PTR [ebp-0x8]
  414aaf:	mov    cx,WORD PTR [ecx]
  414ab2:	mov    WORD PTR [eax],cx
  414ab5:	mov    eax,DWORD PTR [ebp-0x4]
  414ab8:	xor    eax,0x7510897
  414abd:	mov    ecx,DWORD PTR [ebp-0x8]
  414ac0:	lea    eax,[ecx+eax*1+0x3272de]
  414ac7:	mov    DWORD PTR [ebp-0x8],eax
  414aca:	jmp    0x414ae3
  414acc:	mov    eax,DWORD PTR [ebp+0x8]
  414acf:	add    eax,DWORD PTR [ebp-0x8]
  414ad2:	mov    ecx,DWORD PTR [ebp+0xc]
  414ad5:	add    ecx,DWORD PTR [ebp-0x8]
  414ad8:	mov    cl,BYTE PTR [ecx]
  414ada:	mov    BYTE PTR [eax],cl
  414adc:	mov    eax,DWORD PTR [ebp-0x8]
  414adf:	inc    eax
  414ae0:	mov    DWORD PTR [ebp-0x8],eax
  414ae3:	jmp    0x4149cc
  414ae8:	leave  
  414ae9:	ret    0xc
  414aec:	push   ebp
  414aed:	mov    ebp,esp
  414aef:	push   ecx
  414af0:	push   ecx
  414af1:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  414af8:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  414aff:	xor    eax,eax
  414b01:	inc    eax
  414b02:	je     0x414b44
  414b04:	mov    eax,DWORD PTR [ebp-0x4]
  414b07:	xor    eax,0x7510897
  414b0c:	add    eax,0x3272de
  414b11:	cmp    DWORD PTR [ebp+0xc],eax
  414b14:	jne    0x414b18
  414b16:	jmp    0x414b44
  414b18:	mov    eax,DWORD PTR [ebp-0x8]
  414b1b:	xor    eax,0x7510897
  414b20:	add    eax,0x3272de
  414b25:	mov    ecx,DWORD PTR [ebp+0xc]
  414b28:	sub    ecx,eax
  414b2a:	mov    DWORD PTR [ebp+0xc],ecx
  414b2d:	mov    eax,DWORD PTR [ebp-0x4]
  414b30:	xor    eax,0x7510897
  414b35:	add    eax,0x3272de
  414b3a:	mov    ecx,DWORD PTR [ebp+0x8]
  414b3d:	add    ecx,DWORD PTR [ebp+0xc]
  414b40:	mov    BYTE PTR [ecx],al
  414b42:	jmp    0x414aff
  414b44:	leave  
  414b45:	ret    0x8
  414b48:	push   ebp
  414b49:	mov    ebp,esp
  414b4b:	sub    esp,0x21c
  414b51:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  414b58:	mov    DWORD PTR [ebp-0x14],0xf89c85b4
  414b5f:	mov    eax,DWORD PTR [ebp+0x10]
  414b62:	mov    eax,DWORD PTR [ebp-0x4]
  414b65:	mov    ecx,DWORD PTR [ebp+0x8]
  414b68:	push   esi
  414b69:	push   edi
  414b6a:	mov    edi,0x7510897
  414b6f:	xor    eax,edi
  414b71:	mov    esi,0x3272de
  414b76:	add    eax,esi
  414b78:	cmp    eax,ecx
  414b7a:	mov    eax,DWORD PTR [ebp-0x4]
  414b7d:	jne    0x414b88
  414b7f:	xor    eax,edi
  414b81:	add    eax,esi
  414b83:	jmp    0x414c34
  414b88:	mov    ecx,DWORD PTR [ebp+0xc]
  414b8b:	xor    eax,edi
  414b8d:	add    eax,esi
  414b8f:	cmp    eax,ecx
  414b91:	jne    0x414b98
  414b93:	mov    eax,DWORD PTR [ebp-0x4]
  414b96:	jmp    0x414b7f
  414b98:	lea    eax,[ebp-0x21c]
  414b9e:	mov    DWORD PTR [ebp-0x8],eax
  414ba1:	mov    eax,DWORD PTR [ebp+0xc]
  414ba4:	mov    DWORD PTR [ebp-0x10],eax
  414ba7:	mov    eax,DWORD PTR [ebp-0x4]
  414baa:	xor    eax,edi
  414bac:	add    eax,esi
  414bae:	mov    DWORD PTR [ebp+0x10],eax
  414bb1:	mov    eax,DWORD PTR [ebp+0xc]
  414bb4:	push   ebx
  414bb5:	call   0x4148a5
  414bba:	mov    ebx,eax
  414bbc:	mov    eax,DWORD PTR [ebp+0x8]
  414bbf:	mov    eax,DWORD PTR [eax+0x14]
  414bc2:	jmp    0x414c1c
  414bc4:	mov    eax,DWORD PTR [ebp+0xc]
  414bc7:	sub    eax,0x8
  414bca:	mov    DWORD PTR [ebp-0xc],eax
  414bcd:	mov    eax,DWORD PTR [ebp-0xc]
  414bd0:	mov    eax,DWORD PTR [eax+0x28]
  414bd3:	call   0x41478d
  414bd8:	mov    DWORD PTR [ebp+0x10],eax
  414bdb:	push   DWORD PTR [ebp+0x10]
  414bde:	mov    edx,DWORD PTR [ebp-0x8]
  414be1:	call   0x414934
  414be6:	mov    eax,DWORD PTR [ebp-0x4]
  414be9:	xor    eax,edi
  414beb:	add    eax,esi
  414bed:	cmp    eax,ebx
  414bef:	jne    0x414bf9
  414bf1:	mov    eax,DWORD PTR [ebp-0x8]
  414bf4:	call   0x41481b
  414bf9:	mov    eax,DWORD PTR [ebp-0x14]
  414bfc:	xor    eax,edi
  414bfe:	add    eax,esi
  414c00:	push   eax
  414c01:	push   DWORD PTR [ebp-0x10]
  414c04:	push   DWORD PTR [ebp-0x8]
  414c07:	call   0x41451f
  414c0c:	mov    ecx,DWORD PTR [ebp-0x4]
  414c0f:	xor    ecx,edi
  414c11:	add    ecx,esi
  414c13:	cmp    eax,ecx
  414c15:	je     0x414c3a
  414c17:	mov    eax,DWORD PTR [ebp+0xc]
  414c1a:	mov    eax,DWORD PTR [eax]
  414c1c:	mov    DWORD PTR [ebp+0xc],eax
  414c1f:	mov    eax,DWORD PTR [ebp+0x8]
  414c22:	mov    ecx,DWORD PTR [ebp+0xc]
  414c25:	add    eax,0x14
  414c28:	cmp    ecx,eax
  414c2a:	jne    0x414bc4
  414c2c:	mov    eax,DWORD PTR [ebp-0x4]
  414c2f:	xor    eax,edi
  414c31:	add    eax,esi
  414c33:	pop    ebx
  414c34:	pop    edi
  414c35:	pop    esi
  414c36:	leave  
  414c37:	ret    0xc
  414c3a:	mov    eax,DWORD PTR [ebp-0xc]
  414c3d:	mov    eax,DWORD PTR [eax+0x18]
  414c40:	jmp    0x414c33
  414c42:	push   ebp
  414c43:	mov    ebp,esp
  414c45:	mov    eax,DWORD PTR [ebp+0xc]
  414c48:	sub    esp,0x10
  414c4b:	cmp    DWORD PTR [ebp+0x8],0x0
  414c4f:	push   ebx
  414c50:	push   esi
  414c51:	push   edi
  414c52:	je     0x414d07
  414c58:	test   eax,eax
  414c5a:	je     0x414d07
  414c60:	movzx  eax,WORD PTR [eax+0x20]
  414c64:	mov    ecx,eax
  414c66:	mov    DWORD PTR [ebp-0x10],eax
  414c69:	xor    edx,edx
  414c6b:	and    DWORD PTR [ebp-0x8],edx
  414c6e:	mov    eax,0x8a8b
  414c73:	xor    ecx,eax
  414c75:	add    ecx,0x3b4e
  414c7b:	mov    DWORD PTR [ebp-0xc],ecx
  414c7e:	and    DWORD PTR [ebp-0x4],0x0
  414c82:	xor    ecx,ecx
  414c84:	push   0x7e
  414c86:	pop    edi
  414c87:	cmp    cx,WORD PTR [ebp-0xc]
  414c8b:	jae    0x414cf1
  414c8d:	lea    esi,[edx-0x3b4e]
  414c93:	xor    esi,eax
  414c95:	movzx  ecx,WORD PTR [ebp-0x4]
  414c99:	mov    ebx,DWORD PTR [ebp+0xc]
  414c9c:	lea    ecx,[ebx+ecx*4]
  414c9f:	cmp    WORD PTR [ecx+0x2],si
  414ca3:	jne    0x414cdc
  414ca5:	movzx  ecx,WORD PTR [ecx]
  414ca8:	mov    edi,0x4e39
  414cad:	cmp    cx,di
  414cb0:	jne    0x414cbe
  414cb2:	mov    ebx,DWORD PTR [ebp+0x8]
  414cb5:	movzx  edi,dx
  414cb8:	cmp    BYTE PTR [edi+ebx*1],0x0
  414cbc:	je     0x414ceb
  414cbe:	mov    ebx,DWORD PTR [ebp+0x8]
  414cc1:	movzx  edi,dx
  414cc4:	movsx  di,BYTE PTR [edi+ebx*1]
  414cc9:	mov    ebx,0x3b4e
  414cce:	sub    di,bx
  414cd1:	xor    di,ax
  414cd4:	cmp    cx,di
  414cd7:	je     0x414ceb
  414cd9:	push   0x78
  414cdb:	pop    edi
  414cdc:	inc    DWORD PTR [ebp-0x4]
  414cdf:	mov    cx,WORD PTR [ebp-0xc]
  414ce3:	cmp    WORD PTR [ebp-0x4],cx
  414ce7:	jb     0x414c95
  414ce9:	jmp    0x414cf1
  414ceb:	inc    DWORD PTR [ebp-0x8]
  414cee:	push   0x79
  414cf0:	pop    edi
  414cf1:	mov    esi,DWORD PTR [ebp+0x8]
  414cf4:	movzx  ecx,dx
  414cf7:	cmp    BYTE PTR [ecx+esi*1],0x0
  414cfb:	je     0x414d10
  414cfd:	inc    edx
  414cfe:	cmp    edi,0x78
  414d01:	jne    0x414c7e
  414d07:	xor    eax,eax
  414d09:	pop    edi
  414d0a:	pop    esi
  414d0b:	pop    ebx
  414d0c:	leave  
  414d0d:	ret    0x8
  414d10:	mov    ecx,DWORD PTR [ebp-0x8]
  414d13:	add    ecx,0xffffc4b2
  414d19:	xor    cx,ax
  414d1c:	xor    eax,eax
  414d1e:	cmp    cx,WORD PTR [ebp-0x10]
  414d22:	sete   al
  414d25:	jmp    0x414d09
  414d27:	push   ebp
  414d28:	mov    ebp,esp
  414d2a:	sub    esp,0x50
  414d2d:	push   edi
  414d2e:	mov    edi,eax
  414d30:	mov    eax,DWORD PTR [edi+0x1a8]
  414d36:	cmp    DWORD PTR [eax],0x0
  414d39:	jne    0x414d42
  414d3b:	xor    eax,eax
  414d3d:	jmp    0x414e72
  414d42:	push   0x2c
  414d44:	push   DWORD PTR [ebp+0x8]
  414d47:	call   0x414aec
  414d4c:	mov    edx,DWORD PTR [edi+0x1ac]
  414d52:	lea    eax,[edi+0x22]
  414d55:	mov    DWORD PTR [ebp-0x4c],eax
  414d58:	lea    eax,[edi+0x44]
  414d5b:	mov    DWORD PTR [ebp-0x48],eax
  414d5e:	lea    eax,[edi+0x66]
  414d61:	mov    DWORD PTR [ebp-0x44],eax
  414d64:	lea    eax,[edi+0x88]
  414d6a:	mov    DWORD PTR [ebp-0x40],eax
  414d6d:	lea    eax,[edi+0xaa]
  414d73:	mov    DWORD PTR [ebp-0x3c],eax
  414d76:	lea    eax,[edi+0xcc]
  414d7c:	mov    DWORD PTR [ebp-0x38],eax
  414d7f:	lea    eax,[edi+0xee]
  414d85:	mov    DWORD PTR [ebp-0x34],eax
  414d88:	lea    eax,[edi+0x110]
  414d8e:	mov    DWORD PTR [ebp-0x30],eax
  414d91:	lea    eax,[edi+0x132]
  414d97:	mov    DWORD PTR [ebp-0x2c],eax
  414d9a:	lea    eax,[edi+0x154]
  414da0:	push   edi
  414da1:	mov    DWORD PTR [ebp-0x50],edi
  414da4:	mov    DWORD PTR [ebp-0x28],eax
  414da7:	call   0x414ea6
  414dac:	push   eax
  414dad:	mov    eax,DWORD PTR [edi+0x1a8]
  414db3:	push   DWORD PTR [eax]
  414db5:	call   0x414b48
  414dba:	mov    DWORD PTR [ebp-0x10],eax
  414dbd:	test   eax,eax
  414dbf:	je     0x414e72
  414dc5:	mov    ecx,DWORD PTR [eax+0x3c]
  414dc8:	push   ebx
  414dc9:	push   esi
  414dca:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  414dce:	add    esi,eax
  414dd0:	mov    edi,DWORD PTR [esi+0x24]
  414dd3:	mov    ecx,DWORD PTR [esi+0x1c]
  414dd6:	mov    edx,DWORD PTR [esi+0x20]
  414dd9:	mov    ebx,DWORD PTR [esi+0x18]
  414ddc:	add    edi,eax
  414dde:	mov    DWORD PTR [ebp-0x20],edi
  414de1:	mov    edi,DWORD PTR [esi+0x14]
  414de4:	add    ecx,eax
  414de6:	add    edx,eax
  414de8:	mov    DWORD PTR [ebp-0xc],ecx
  414deb:	mov    DWORD PTR [ebp-0x1c],edx
  414dee:	mov    DWORD PTR [ebp-0x8],edi
  414df1:	cmp    edi,ebx
  414df3:	ja     0x414df8
  414df5:	mov    DWORD PTR [ebp-0x8],ebx
  414df8:	xor    ebx,ebx
  414dfa:	mov    DWORD PTR [ebp-0x18],ebx
  414dfd:	cmp    DWORD PTR [ebp-0x8],ebx
  414e00:	jbe    0x414e70
  414e02:	jmp    0x414e07
  414e04:	mov    edx,DWORD PTR [ebp-0x1c]
  414e07:	mov    edi,DWORD PTR [ebp-0x20]
  414e0a:	movzx  edi,WORD PTR [edi+ebx*2]
  414e0e:	cmp    ebx,DWORD PTR [esi+0x18]
  414e11:	jae    0x414e70
  414e13:	cmp    edi,DWORD PTR [esi+0x14]
  414e16:	jae    0x414e70
  414e18:	mov    ebx,DWORD PTR [edx+ebx*4]
  414e1b:	mov    edx,DWORD PTR [ebp+0x8]
  414e1e:	mov    edi,DWORD PTR [ecx+edi*4]
  414e21:	mov    DWORD PTR [ebp-0x4],edx
  414e24:	lea    edx,[ebp-0x50]
  414e27:	add    ebx,eax
  414e29:	add    edi,eax
  414e2b:	sub    edx,DWORD PTR [ebp+0x8]
  414e2e:	mov    DWORD PTR [ebp-0x14],0xb
  414e35:	mov    DWORD PTR [ebp-0x24],edx
  414e38:	mov    edx,DWORD PTR [ebp-0x4]
  414e3b:	cmp    DWORD PTR [edx],0x0
  414e3e:	jne    0x414e5b
  414e40:	mov    eax,DWORD PTR [ebp-0x24]
  414e43:	push   DWORD PTR [eax+edx*1]
  414e46:	push   ebx
  414e47:	call   0x414c42
  414e4c:	mov    ecx,DWORD PTR [ebp-0xc]
  414e4f:	test   eax,eax
  414e51:	je     0x414e58
  414e53:	mov    eax,DWORD PTR [ebp-0x4]
  414e56:	mov    DWORD PTR [eax],edi
  414e58:	mov    eax,DWORD PTR [ebp-0x10]
  414e5b:	add    DWORD PTR [ebp-0x4],0x4
  414e5f:	dec    DWORD PTR [ebp-0x14]
  414e62:	jne    0x414e38
  414e64:	mov    ebx,DWORD PTR [ebp-0x18]
  414e67:	inc    ebx
  414e68:	mov    DWORD PTR [ebp-0x18],ebx
  414e6b:	cmp    ebx,DWORD PTR [ebp-0x8]
  414e6e:	jb     0x414e04
  414e70:	pop    esi
  414e71:	pop    ebx
  414e72:	pop    edi
  414e73:	leave  
  414e74:	ret    0x4
  414e77:	push   ebp
  414e78:	mov    ebp,esp
  414e7a:	mov    eax,DWORD PTR [ebp+0x8]
  414e7d:	push   esi
  414e7e:	push   DWORD PTR [eax+0x1d8]
  414e84:	lea    esi,[eax+0x198]
  414e8a:	mov    eax,DWORD PTR [ebp+0x8]
  414e8d:	call   0x414d27
  414e92:	mov    ecx,DWORD PTR [esi]
  414e94:	mov    DWORD PTR [ecx],eax
  414e96:	mov    eax,DWORD PTR [esi]
  414e98:	xor    ecx,ecx
  414e9a:	cmp    DWORD PTR [eax],ecx
  414e9c:	pop    esi
  414e9d:	setne  cl
  414ea0:	mov    eax,ecx
  414ea2:	pop    ebp
  414ea3:	ret    0x4
  414ea6:	mov    ecx,DWORD PTR [edi+0x188]
  414eac:	push   ebx
  414ead:	jmp    0x414ec2
  414eaf:	xor    eax,0x8a8b
  414eb4:	add    eax,0x3b4e
  414eb9:	mov    WORD PTR [ecx],ax
  414ebc:	add    ecx,0x2
  414ebf:	add    edx,0x2
  414ec2:	movzx  eax,WORD PTR [edx]
  414ec5:	mov    ebx,0x4e39
  414eca:	cmp    ax,bx
  414ecd:	jne    0x414eaf
  414ecf:	xor    eax,eax
  414ed1:	mov    WORD PTR [ecx],ax
  414ed4:	mov    eax,DWORD PTR [edi+0x188]
  414eda:	pop    ebx
  414edb:	ret    
  414edc:	push   edi
  414edd:	mov    edi,eax
  414edf:	mov    eax,DWORD PTR [esi+0x188]
  414ee5:	shl    edi,0x6
  414ee8:	add    eax,edi
  414eea:	jmp    0x414ef6
  414eec:	xor    cl,0x72
  414eef:	sub    cl,0xa
  414ef2:	mov    BYTE PTR [eax],cl
  414ef4:	inc    eax
  414ef5:	inc    edx
  414ef6:	mov    cl,BYTE PTR [edx]
  414ef8:	cmp    cl,0x78
  414efb:	jne    0x414eec
  414efd:	mov    BYTE PTR [eax],0x0
  414f00:	mov    eax,DWORD PTR [esi+0x188]
  414f06:	add    eax,edi
  414f08:	pop    edi
  414f09:	ret    
  414f0a:	push   ebp
  414f0b:	mov    ebp,esp
  414f0d:	sub    esp,0x38
  414f10:	push   ebx
  414f11:	mov    ebx,0xf89c85b5
  414f16:	mov    DWORD PTR [ebp-0x4],ebx
  414f19:	lea    eax,[ebx-0x1]
  414f1c:	push   esi
  414f1d:	mov    DWORD PTR [ebp-0x24],eax
  414f20:	mov    ecx,DWORD PTR [ebp-0x4]
  414f23:	mov    edx,DWORD PTR [ebp+0x8]
  414f26:	mov    esi,0x7510897
  414f2b:	push   edi
  414f2c:	xor    ecx,esi
  414f2e:	mov    edi,0x3272de
  414f33:	add    ecx,edi
  414f35:	cmp    edx,ecx
  414f37:	je     0x4150a5
  414f3d:	mov    ecx,DWORD PTR [ebp-0x4]
  414f40:	mov    edx,DWORD PTR [ebp+0xc]
  414f43:	xor    ecx,esi
  414f45:	add    ecx,edi
  414f47:	cmp    edx,ecx
  414f49:	je     0x4150a5
  414f4f:	mov    ecx,DWORD PTR [ebp+0x10]
  414f52:	mov    DWORD PTR [ebp-0x18],ecx
  414f55:	mov    ecx,DWORD PTR [ebp+0xc]
  414f58:	mov    DWORD PTR [ebp-0x14],ecx
  414f5b:	mov    ecx,DWORD PTR [ebp+0x8]
  414f5e:	mov    DWORD PTR [ebp-0x1c],0xf89c8509
  414f65:	mov    DWORD PTR [ebp-0x20],eax
  414f68:	mov    DWORD PTR [ebp-0x10],ebx
  414f6b:	mov    DWORD PTR [ebp+0xc],eax
  414f6e:	mov    DWORD PTR [ebp+0x10],0xf89c85b3
  414f75:	mov    eax,DWORD PTR [ebp+0xc]
  414f78:	mov    DWORD PTR [ebp-0xc],ecx
  414f7b:	xor    eax,esi
  414f7d:	mov    ecx,0xffcd8d22
  414f82:	sub    ecx,eax
  414f84:	add    ecx,DWORD PTR [ebp-0x14]
  414f87:	mov    DWORD PTR [ebp+0x8],ecx
  414f8a:	mov    DWORD PTR [ebp-0x8],0xf89c85b0
  414f91:	jmp    0x415095
  414f96:	mov    eax,DWORD PTR [ebp+0xc]
  414f99:	mov    ecx,DWORD PTR [ebp+0xc]
  414f9c:	xor    eax,esi
  414f9e:	xor    ecx,esi
  414fa0:	lea    ecx,[eax+ecx*1+0x64e5bc]
  414fa7:	mov    eax,DWORD PTR [ebp+0x8]
  414faa:	xor    edx,edx
  414fac:	div    ecx
  414fae:	mov    eax,DWORD PTR [ebp+0x10]
  414fb1:	mov    ecx,DWORD PTR [ebp+0xc]
  414fb4:	xor    eax,esi
  414fb6:	xor    ecx,esi
  414fb8:	sub    eax,ecx
  414fba:	cmp    edx,eax
  414fbc:	jne    0x415051
  414fc2:	mov    eax,DWORD PTR [ebp+0x8]
  414fc5:	add    eax,DWORD PTR [ebp-0xc]
  414fc8:	mov    dl,BYTE PTR [eax]
  414fca:	mov    eax,DWORD PTR [ebp-0x10]
  414fcd:	mov    ecx,DWORD PTR [ebp-0x8]
  414fd0:	xor    eax,esi
  414fd2:	xor    ecx,esi
  414fd4:	add    eax,edi
  414fd6:	add    ecx,edi
  414fd8:	cmp    eax,ecx
  414fda:	jae    0x415022
  414fdc:	lea    ecx,[eax-0x3272de]
  414fe2:	mov    DWORD PTR [ebp-0x4],ecx
  414fe5:	mov    ebx,DWORD PTR [ebp-0x4]
  414fe8:	xor    ebx,esi
  414fea:	add    ebx,0x7f55d8f3
  414ff0:	lea    ecx,[ebp+eax*4-0x38]
  414ff4:	mov    DWORD PTR [ecx],ebx
  414ff6:	mov    ebx,DWORD PTR [ecx]
  414ff8:	cmp    ebx,0x244ecbd2
  414ffe:	jbe    0x415008
  415000:	add    DWORD PTR [ecx],0x405fc11
  415006:	jmp    0x41500e
  415008:	add    DWORD PTR [ecx],0xfdaf43ef
  41500e:	mov    ecx,DWORD PTR [ebp-0x8]
  415011:	xor    ecx,esi
  415013:	inc    eax
  415014:	inc    DWORD PTR [ebp-0x4]
  415017:	add    ecx,edi
  415019:	cmp    eax,ecx
  41501b:	jb     0x414fe5
  41501d:	mov    ebx,0xf89c85b5
  415022:	mov    eax,DWORD PTR [ebp-0x18]
  415025:	test   eax,eax
  415027:	jne    0x415031
  415029:	xor    dl,0x72
  41502c:	sub    dl,0xa
  41502f:	jmp    0x415047
  415031:	mov    eax,DWORD PTR [ebp-0x1c]
  415034:	xor    al,0x97
  415036:	mov    cl,0x22
  415038:	sub    cl,al
  41503a:	add    dl,cl
  41503c:	mov    ecx,DWORD PTR [ebp-0x20]
  41503f:	xor    cl,0x97
  415042:	sub    cl,0x22
  415045:	ror    dl,cl
  415047:	xor    eax,eax
  415049:	mov    eax,DWORD PTR [ebp+0x8]
  41504c:	add    eax,DWORD PTR [ebp-0xc]
  41504f:	mov    BYTE PTR [eax],dl
  415051:	mov    eax,DWORD PTR [ebp+0x8]
  415054:	mov    ecx,DWORD PTR [ebp-0x10]
  415057:	sub    eax,edi
  415059:	xor    eax,esi
  41505b:	cmp    eax,ecx
  41505d:	jne    0x415083
  41505f:	mov    eax,DWORD PTR [ebp+0x10]
  415062:	mov    ecx,DWORD PTR [ebp+0xc]
  415065:	xor    eax,esi
  415067:	xor    ecx,esi
  415069:	sub    eax,ecx
  41506b:	sub    eax,edi
  41506d:	xor    eax,esi
  41506f:	mov    DWORD PTR [ebp+0x10],eax
  415072:	mov    eax,DWORD PTR [ebp+0xc]
  415075:	xor    eax,esi
  415077:	mov    ecx,0xffcd8d22
  41507c:	sub    ecx,eax
  41507e:	add    ecx,DWORD PTR [ebp-0x14]
  415081:	jmp    0x415092
  415083:	mov    eax,DWORD PTR [ebp+0xc]
  415086:	xor    eax,esi
  415088:	mov    ecx,0xffcd8d22
  41508d:	sub    ecx,eax
  41508f:	add    ecx,DWORD PTR [ebp+0x8]
  415092:	mov    DWORD PTR [ebp+0x8],ecx
  415095:	mov    eax,DWORD PTR [ebp+0x10]
  415098:	cmp    eax,ebx
  41509a:	jne    0x414f96
  4150a0:	mov    eax,DWORD PTR [ebp-0x24]
  4150a3:	jmp    0x4150a8
  4150a5:	mov    eax,DWORD PTR [ebp-0x4]
  4150a8:	xor    eax,esi
  4150aa:	add    eax,edi
  4150ac:	pop    edi
  4150ad:	pop    esi
  4150ae:	pop    ebx
  4150af:	leave  
  4150b0:	ret    0xc
  4150b3:	push   ebp
  4150b4:	mov    ebp,esp
  4150b6:	sub    esp,0x14
  4150b9:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  4150c0:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  4150c7:	mov    eax,DWORD PTR [ebx]
  4150c9:	mov    DWORD PTR [ebp-0x8],eax
  4150cc:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4150d3:	push   esi
  4150d4:	push   edi
  4150d5:	mov    DWORD PTR [ebp-0x14],0xead718d5
  4150dc:	mov    edi,DWORD PTR [ebp-0x4]
  4150df:	mov    ecx,DWORD PTR [ebp-0x10]
  4150e2:	mov    eax,0x7510897
  4150e7:	xor    edi,eax
  4150e9:	mov    edx,0x3272de
  4150ee:	xor    ecx,eax
  4150f0:	add    edi,edx
  4150f2:	add    ecx,edx
  4150f4:	imul   edi,ecx
  4150f7:	jmp    0x41513f
  4150f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4150fc:	mov    esi,DWORD PTR [ebp-0x4]
  4150ff:	xor    ecx,eax
  415101:	xor    esi,eax
  415103:	add    ecx,edx
  415105:	add    esi,edx
  415107:	test   esi,ecx
  415109:	mov    esi,DWORD PTR [ebp-0x8]
  41510c:	mov    ecx,DWORD PTR [ebp-0x4]
  41510f:	je     0x415126
  415111:	xor    ecx,eax
  415113:	xor    esi,eax
  415115:	add    ecx,edx
  415117:	add    esi,edx
  415119:	shr    esi,cl
  41511b:	mov    ecx,DWORD PTR [ebp-0x14]
  41511e:	xor    ecx,eax
  415120:	add    ecx,edx
  415122:	xor    esi,ecx
  415124:	jmp    0x415130
  415126:	xor    esi,eax
  415128:	xor    ecx,eax
  41512a:	add    esi,edx
  41512c:	add    ecx,edx
  41512e:	shr    esi,cl
  415130:	mov    DWORD PTR [ebp-0x8],esi
  415133:	mov    ecx,DWORD PTR [ebp-0x4]
  415136:	xor    ecx,eax
  415138:	lea    edi,[edi+ecx*1+0x3272de]
  41513f:	mov    ecx,DWORD PTR [ebp-0xc]
  415142:	mov    esi,DWORD PTR [ebp-0x4]
  415145:	xor    esi,eax
  415147:	xor    ecx,eax
  415149:	sub    ecx,esi
  41514b:	cmp    edi,ecx
  41514d:	jbe    0x4150f9
  41514f:	mov    eax,DWORD PTR [ebp-0x8]
  415152:	pop    edi
  415153:	mov    DWORD PTR [ebx],eax
  415155:	mov    eax,DWORD PTR [ebp-0x8]
  415158:	pop    esi
  415159:	leave  
  41515a:	ret    
  41515b:	push   ebp
  41515c:	mov    ebp,esp
  41515e:	sub    esp,0x420
  415164:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  41516b:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  415172:	mov    DWORD PTR [ebp-0x18],0xf89c86b5
  415179:	push   ebx
  41517a:	mov    DWORD PTR [ebp-0x1c],0xf89c85b6
  415181:	mov    eax,DWORD PTR [ebp-0x14]
  415184:	push   esi
  415185:	mov    esi,0x7510897
  41518a:	push   edi
  41518b:	xor    eax,esi
  41518d:	mov    edi,0x3272de
  415192:	add    eax,edi
  415194:	mov    DWORD PTR [ebp-0x8],eax
  415197:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41519e:	mov    DWORD PTR [ebp-0x4],0xead718d5
  4151a5:	mov    DWORD PTR [ebp-0x10],0x8
  4151ac:	mov    ecx,ecx
  4151ae:	mov    eax,DWORD PTR [ebp-0xc]
  4151b1:	mov    ecx,DWORD PTR [ebp-0x14]
  4151b4:	xor    eax,esi
  4151b6:	xor    ecx,esi
  4151b8:	add    eax,edi
  4151ba:	add    ecx,edi
  4151bc:	imul   eax,ecx
  4151bf:	jmp    0x4151f2
  4151c1:	mov    eax,DWORD PTR [ebp-0x4]
  4151c4:	sub    eax,edi
  4151c6:	xor    eax,esi
  4151c8:	mov    DWORD PTR [ebp-0x8],eax
  4151cb:	lea    ebx,[ebp-0x8]
  4151ce:	call   0x4150b3
  4151d3:	mov    DWORD PTR [ebp-0x8],eax
  4151d6:	mov    eax,DWORD PTR [ebp-0x8]
  4151d9:	mov    ecx,DWORD PTR [ebp-0x4]
  4151dc:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4151e3:	mov    eax,DWORD PTR [ebp-0xc]
  4151e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4151e9:	xor    eax,esi
  4151eb:	lea    eax,[eax+ecx*1+0x3272de]
  4151f2:	mov    DWORD PTR [ebp-0x4],eax
  4151f5:	mov    eax,DWORD PTR [ebp-0x18]
  4151f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4151fb:	xor    ecx,esi
  4151fd:	xor    eax,esi
  4151ff:	sub    eax,ecx
  415201:	mov    ecx,DWORD PTR [ebp-0x4]
  415204:	cmp    ecx,eax
  415206:	jbe    0x4151c1
  415208:	mov    eax,DWORD PTR [ebp-0x1c]
  41520b:	xor    eax,esi
  41520d:	add    eax,edi
  41520f:	mov    DWORD PTR [ebp-0x8],eax
  415212:	mov    DWORD PTR [ebp-0x18],0xf89c86b6
  415219:	mov    ebx,ebx
  41521b:	jmp    0x41527e
  41521d:	mov    ecx,DWORD PTR [ebp-0x20]
  415220:	mov    eax,DWORD PTR [ebp-0x8]
  415223:	xor    ecx,esi
  415225:	add    ecx,edi
  415227:	shr    eax,cl
  415229:	mov    DWORD PTR [ebp-0x4],eax
  41522c:	mov    eax,DWORD PTR [ebp+0x8]
  41522f:	mov    cl,BYTE PTR [eax]
  415231:	mov    BYTE PTR [ebp+0xb],cl
  415234:	mov    cl,BYTE PTR [ebp+0xb]
  415237:	mov    edx,DWORD PTR [ebp-0x8]
  41523a:	movzx  ecx,cl
  41523d:	xor    ecx,edx
  41523f:	mov    DWORD PTR [ebp+0x8],ecx
  415242:	mov    ecx,DWORD PTR [ebp-0x18]
  415245:	mov    edx,DWORD PTR [ebp+0x8]
  415248:	xor    ecx,esi
  41524a:	add    ecx,edi
  41524c:	and    ecx,edx
  41524e:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  415255:	mov    edx,DWORD PTR [ebp-0x4]
  415258:	xor    ecx,edx
  41525a:	mov    DWORD PTR [ebp-0x8],ecx
  41525d:	mov    ecx,DWORD PTR [ebp-0xc]
  415260:	xor    ecx,esi
  415262:	lea    eax,[eax+ecx*1+0x3272de]
  415269:	mov    DWORD PTR [ebp+0x8],eax
  41526c:	mov    eax,DWORD PTR [ebp-0xc]
  41526f:	xor    eax,esi
  415271:	mov    ecx,0xffcd8d22
  415276:	sub    ecx,eax
  415278:	add    ecx,DWORD PTR [ebp-0x10]
  41527b:	mov    DWORD PTR [ebp-0x10],ecx
  41527e:	mov    eax,DWORD PTR [ebp-0x14]
  415281:	mov    ecx,DWORD PTR [ebp-0x10]
  415284:	xor    eax,esi
  415286:	add    eax,edi
  415288:	cmp    ecx,eax
  41528a:	jne    0x41521d
  41528c:	mov    eax,DWORD PTR [ebp-0x1c]
  41528f:	mov    ecx,DWORD PTR [ebp-0x8]
  415292:	xor    eax,esi
  415294:	add    eax,edi
  415296:	pop    edi
  415297:	pop    esi
  415298:	xor    eax,ecx
  41529a:	pop    ebx
  41529b:	leave  
  41529c:	ret    0x4
  41529f:	push   ebp
  4152a0:	mov    ebp,esp
  4152a2:	mov    eax,DWORD PTR [ebp+0x1c]
  4152a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4152a8:	mov    edx,DWORD PTR [ebp+0x10]
  4152ab:	mov    eax,DWORD PTR [eax+0x190]
  4152b1:	mov    eax,DWORD PTR [eax]
  4152b3:	sub    esp,0x64
  4152b6:	push   ebx
  4152b7:	push   esi
  4152b8:	push   edi
  4152b9:	mov    edi,0x7510897
  4152be:	xor    ecx,edi
  4152c0:	mov    ebx,0x3272de
  4152c5:	add    ecx,ebx
  4152c7:	cmp    ecx,edx
  4152c9:	jne    0x4152da
  4152cb:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  4152d5:	jmp    0x4157d7
  4152da:	mov    ecx,DWORD PTR [ebp+0x8]
  4152dd:	mov    esi,DWORD PTR [ebp+0x14]
  4152e0:	mov    edx,DWORD PTR [esi]
  4152e2:	xor    ecx,edi
  4152e4:	add    ecx,ebx
  4152e6:	cmp    edx,ecx
  4152e8:	je     0x415792
  4152ee:	mov    ecx,DWORD PTR [ebp+0x1c]
  4152f1:	mov    DWORD PTR [ebp-0x1c],eax
  4152f4:	mov    DWORD PTR [ebp+0x1c],ecx
  4152f7:	mov    ecx,DWORD PTR [ebp+0x18]
  4152fa:	mov    eax,DWORD PTR [esi]
  4152fc:	mov    DWORD PTR [ebp-0x20],eax
  4152ff:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  415306:	mov    edx,0xf89c85b4
  41530b:	mov    DWORD PTR [ebp-0x8],edx
  41530e:	mov    eax,DWORD PTR [ebp+0x1c]
  415311:	mov    DWORD PTR [ebp+0x1c],eax
  415314:	mov    eax,DWORD PTR [ebp+0x1c]
  415317:	mov    eax,DWORD PTR [eax+0x190]
  41531d:	mov    eax,DWORD PTR [eax]
  41531f:	mov    DWORD PTR [ebp-0x24],ecx
  415322:	mov    ecx,DWORD PTR [ebp+0x1c]
  415325:	mov    ecx,DWORD PTR [ecx+0x190]
  41532b:	mov    ecx,DWORD PTR [ecx]
  41532d:	add    ecx,DWORD PTR [eax+0x3c]
  415330:	mov    DWORD PTR [ebp+0x10],ecx
  415333:	mov    eax,DWORD PTR [ebp+0x8]
  415336:	xor    eax,edi
  415338:	add    eax,ebx
  41533a:	mov    DWORD PTR [ebp-0x4],eax
  41533d:	mov    eax,DWORD PTR [ebp+0x8]
  415340:	xor    eax,edi
  415342:	add    eax,ebx
  415344:	mov    DWORD PTR [ebp+0x18],eax
  415347:	mov    eax,DWORD PTR [ebp+0x10]
  41534a:	mov    eax,DWORD PTR [eax+0x50]
  41534d:	sub    eax,0xc
  415350:	mov    DWORD PTR [ebp-0x28],eax
  415353:	mov    eax,DWORD PTR [ebp+0x10]
  415356:	mov    eax,DWORD PTR [eax+0x38]
  415359:	mov    ecx,DWORD PTR [ebp+0x10]
  41535c:	dec    eax
  41535d:	test   DWORD PTR [ecx+0x54],eax
  415360:	mov    eax,DWORD PTR [ebp+0x10]
  415363:	je     0x41537d
  415365:	mov    eax,DWORD PTR [eax+0x38]
  415368:	mov    ecx,DWORD PTR [ebp+0x10]
  41536b:	mov    ecx,DWORD PTR [ecx+0x54]
  41536e:	dec    eax
  41536f:	not    eax
  415371:	and    ecx,eax
  415373:	mov    eax,DWORD PTR [ebp+0x10]
  415376:	mov    eax,DWORD PTR [eax+0x38]
  415379:	add    eax,ecx
  41537b:	jmp    0x415380
  41537d:	mov    eax,DWORD PTR [eax+0x54]
  415380:	mov    DWORD PTR [ebp+0x1c],eax
  415383:	mov    eax,DWORD PTR [ebp+0x8]
  415386:	xor    eax,edi
  415388:	add    eax,ebx
  41538a:	mov    DWORD PTR [ebp+0x18],eax
  41538d:	mov    eax,DWORD PTR [ebp+0x8]
  415390:	xor    eax,edi
  415392:	add    eax,ebx
  415394:	mov    DWORD PTR [ebp+0x18],eax
  415397:	mov    eax,DWORD PTR [ebp+0x8]
  41539a:	mov    ecx,DWORD PTR [ebp-0x24]
  41539d:	xor    eax,edi
  41539f:	add    eax,ebx
  4153a1:	mov    DWORD PTR [ecx],eax
  4153a3:	mov    DWORD PTR [ebp+0x18],edx
  4153a6:	mov    DWORD PTR [ebp+0x18],0xf89c85b3
  4153ad:	mov    DWORD PTR [ebp+0x18],0xf89c85b2
  4153b4:	mov    DWORD PTR [ebp+0x18],0xf89c85b1
  4153bb:	mov    eax,DWORD PTR [ebp-0x8]
  4153be:	mov    ecx,DWORD PTR [ebp+0x1c]
  4153c1:	xor    eax,edi
  4153c3:	add    eax,ebx
  4153c5:	imul   eax,ecx
  4153c8:	mov    ecx,DWORD PTR [ebp+0x8]
  4153cb:	mov    edx,DWORD PTR [ebp-0x28]
  4153ce:	xor    ecx,edi
  4153d0:	lea    ecx,[ecx+edx*1+0x3272de]
  4153d7:	cmp    eax,ecx
  4153d9:	jae    0x41578b
  4153df:	mov    eax,DWORD PTR [ebp+0x8]
  4153e2:	xor    eax,edi
  4153e4:	add    eax,ebx
  4153e6:	mov    DWORD PTR [ebp+0x18],eax
  4153e9:	mov    eax,DWORD PTR [ebp+0x1c]
  4153ec:	add    eax,DWORD PTR [ebp-0x1c]
  4153ef:	mov    DWORD PTR [ebp-0x4],eax
  4153f2:	push   DWORD PTR [ebp-0x4]
  4153f5:	mov    esi,DWORD PTR [ebp-0x1c]
  4153f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4153fb:	call   0x4144e1
  415400:	mov    DWORD PTR [ebp+0xc],eax
  415403:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  41540a:	mov    eax,DWORD PTR [ebp-0x18]
  41540d:	xor    eax,edi
  41540f:	add    eax,ebx
  415411:	push   eax
  415412:	lea    eax,[ebp-0x40]
  415415:	push   eax
  415416:	call   0x414aec
  41541b:	mov    eax,DWORD PTR [ebp+0xc]
  41541e:	test   eax,eax
  415420:	je     0x415470
  415422:	mov    eax,DWORD PTR [ebp-0x18]
  415425:	xor    eax,edi
  415427:	add    eax,ebx
  415429:	push   eax
  41542a:	push   DWORD PTR [ebp+0xc]
  41542d:	lea    eax,[ebp-0x40]
  415430:	push   eax
  415431:	call   0x414993
  415436:	mov    eax,DWORD PTR [ebp-0x4]
  415439:	mov    DWORD PTR [ebp-0x18],eax
  41543c:	mov    eax,DWORD PTR [ebp-0x18]
  41543f:	mov    ecx,DWORD PTR [ebp-0x1c]
  415442:	sub    eax,ecx
  415444:	mov    DWORD PTR [ebp-0x18],eax
  415447:	mov    eax,DWORD PTR [ebp+0xc]
  41544a:	mov    ecx,DWORD PTR [ebp+0xc]
  41544d:	mov    eax,DWORD PTR [eax+0x10]
  415450:	add    eax,DWORD PTR [ecx+0xc]
  415453:	mov    ecx,DWORD PTR [ebp-0x18]
  415456:	cmp    ecx,eax
  415458:	jb     0x415470
  41545a:	mov    eax,DWORD PTR [ebp+0xc]
  41545d:	mov    eax,DWORD PTR [eax+0xc]
  415460:	mov    ecx,DWORD PTR [ebp+0xc]
  415463:	add    eax,DWORD PTR [ecx+0x8]
  415466:	mov    ecx,DWORD PTR [ebp-0x18]
  415469:	sub    eax,ecx
  41546b:	jmp    0x41575e
  415470:	push   0xc
  415472:	push   DWORD PTR [ebp-0x4]
  415475:	lea    eax,[ebp-0x4c]
  415478:	push   eax
  415479:	call   0x414993
  41547e:	mov    eax,0xf89c85b5
  415483:	mov    DWORD PTR [ebp-0x2c],eax
  415486:	mov    DWORD PTR [ebp-0x30],0xf89c85b4
  41548d:	mov    DWORD PTR [ebp-0x34],0xf89c85b3
  415494:	mov    DWORD PTR [ebp-0x38],0xf89c85b2
  41549b:	lea    ecx,[ebp-0x2c]
  41549e:	mov    DWORD PTR [ebp-0xc],ecx
  4154a1:	lea    ecx,[ebp-0x30]
  4154a4:	mov    DWORD PTR [ebp-0x10],ecx
  4154a7:	lea    ecx,[ebp-0x34]
  4154aa:	mov    DWORD PTR [ebp+0xc],ecx
  4154ad:	lea    ecx,[ebp-0x38]
  4154b0:	mov    DWORD PTR [ebp-0x14],ecx
  4154b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4154b6:	xor    ecx,edi
  4154b8:	add    ecx,ebx
  4154ba:	mov    DWORD PTR [ebp-0x18],ecx
  4154bd:	jmp    0x4156b9
  4154c2:	cmp    eax,0xf89c85b3
  4154c7:	je     0x4156cb
  4154cd:	mov    ecx,DWORD PTR [ebp-0x8]
  4154d0:	xor    ecx,edi
  4154d2:	mov    esi,eax
  4154d4:	add    ecx,ebx
  4154d6:	mov    DWORD PTR [ebp+0x18],ecx
  4154d9:	mov    eax,DWORD PTR [ebp-0x18]
  4154dc:	xor    esi,edi
  4154de:	lea    eax,[eax+esi*1+0x3272de]
  4154e5:	mov    DWORD PTR [ebp-0x18],eax
  4154e8:	mov    eax,DWORD PTR [ebp-0x8]
  4154eb:	mov    ecx,DWORD PTR [ebp-0x18]
  4154ee:	xor    eax,edi
  4154f0:	add    eax,ebx
  4154f2:	cmp    ecx,eax
  4154f4:	jne    0x415509
  4154f6:	mov    eax,DWORD PTR [ebp+0x8]
  4154f9:	xor    eax,edi
  4154fb:	add    eax,ebx
  4154fd:	push   eax
  4154fe:	push   0xc
  415500:	lea    eax,[ebp-0x4c]
  415503:	push   eax
  415504:	call   0x414f0a
  415509:	mov    eax,DWORD PTR [ebp-0xc]
  41550c:	mov    eax,DWORD PTR [eax]
  41550e:	xor    eax,edi
  415510:	mov    al,BYTE PTR [ebp+eax*1+0x327292]
  415517:	mov    ecx,DWORD PTR [ebp+0x8]
  41551a:	xor    ecx,edi
  41551c:	movzx  eax,al
  41551f:	add    ecx,ebx
  415521:	cmp    eax,ecx
  415523:	je     0x4156a1
  415529:	mov    eax,DWORD PTR [ebp-0x10]
  41552c:	mov    eax,DWORD PTR [eax]
  41552e:	xor    eax,edi
  415530:	mov    al,BYTE PTR [ebp+eax*1+0x327292]
  415537:	mov    ecx,DWORD PTR [ebp+0x8]
  41553a:	xor    ecx,edi
  41553c:	movzx  eax,al
  41553f:	add    ecx,ebx
  415541:	cmp    eax,ecx
  415543:	je     0x4156a1
  415549:	mov    eax,DWORD PTR [ebp+0xc]
  41554c:	mov    eax,DWORD PTR [eax]
  41554e:	xor    eax,edi
  415550:	mov    al,BYTE PTR [ebp+eax*1+0x327292]
  415557:	mov    ecx,DWORD PTR [ebp+0x8]
  41555a:	xor    ecx,edi
  41555c:	movzx  eax,al
  41555f:	add    ecx,ebx
  415561:	cmp    eax,ecx
  415563:	je     0x4156a1
  415569:	mov    eax,DWORD PTR [ebp-0x14]
  41556c:	mov    eax,DWORD PTR [eax]
  41556e:	xor    eax,edi
  415570:	mov    al,BYTE PTR [ebp+eax*1+0x327292]
  415577:	mov    ecx,DWORD PTR [ebp+0x8]
  41557a:	xor    ecx,edi
  41557c:	movzx  eax,al
  41557f:	add    ecx,ebx
  415581:	cmp    eax,ecx
  415583:	je     0x4156a1
  415589:	mov    eax,DWORD PTR [ebp-0x10]
  41558c:	mov    eax,DWORD PTR [eax]
  41558e:	xor    eax,edi
  415590:	mov    al,BYTE PTR [ebp+eax*1+0x327292]
  415597:	mov    ecx,DWORD PTR [ebp-0xc]
  41559a:	mov    ecx,DWORD PTR [ecx]
  41559c:	xor    ecx,edi
  41559e:	mov    cl,BYTE PTR [ebp+ecx*1+0x327292]
  4155a5:	xor    al,cl
  4155a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4155aa:	mov    ecx,DWORD PTR [ecx]
  4155ac:	xor    ecx,edi
  4155ae:	mov    cl,BYTE PTR [ebp+ecx*1+0x327292]
  4155b5:	or     al,cl
  4155b7:	mov    ecx,DWORD PTR [ebp-0xc]
  4155ba:	mov    ecx,DWORD PTR [ecx]
  4155bc:	xor    ecx,edi
  4155be:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4155c5:	cmp    cl,al
  4155c7:	jne    0x4156a1
  4155cd:	mov    eax,DWORD PTR [ebp+0xc]
  4155d0:	mov    eax,DWORD PTR [eax]
  4155d2:	xor    eax,edi
  4155d4:	mov    al,BYTE PTR [ebp+eax*1+0x327292]
  4155db:	mov    ecx,DWORD PTR [ebp-0x10]
  4155de:	mov    ecx,DWORD PTR [ecx]
  4155e0:	xor    ecx,edi
  4155e2:	mov    cl,BYTE PTR [ebp+ecx*1+0x327292]
  4155e9:	xor    al,cl
  4155eb:	mov    ecx,DWORD PTR [ebp-0x14]
  4155ee:	mov    ecx,DWORD PTR [ecx]
  4155f0:	xor    ecx,edi
  4155f2:	mov    cl,BYTE PTR [ebp+ecx*1+0x327292]
  4155f9:	or     al,cl
  4155fb:	mov    ecx,DWORD PTR [ebp-0x10]
  4155fe:	mov    ecx,DWORD PTR [ecx]
  415600:	xor    ecx,edi
  415602:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  415609:	cmp    cl,al
  41560b:	jne    0x4156a1
  415611:	mov    eax,DWORD PTR [ebp-0x14]
  415614:	mov    eax,DWORD PTR [eax]
  415616:	xor    eax,edi
  415618:	mov    al,BYTE PTR [ebp+eax*1+0x327292]
  41561f:	mov    ecx,DWORD PTR [ebp+0xc]
  415622:	mov    ecx,DWORD PTR [ecx]
  415624:	xor    ecx,edi
  415626:	mov    cl,BYTE PTR [ebp+ecx*1+0x327292]
  41562d:	xor    al,cl
  41562f:	mov    ecx,DWORD PTR [ebp-0xc]
  415632:	mov    ecx,DWORD PTR [ecx]
  415634:	xor    ecx,edi
  415636:	mov    cl,BYTE PTR [ebp+ecx*1+0x327292]
  41563d:	or     al,cl
  41563f:	mov    ecx,DWORD PTR [ebp+0xc]
  415642:	mov    ecx,DWORD PTR [ecx]
  415644:	xor    ecx,edi
  415646:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  41564d:	cmp    cl,al
  41564f:	jne    0x4156a1
  415651:	mov    eax,DWORD PTR [ebp-0x14]
  415654:	mov    eax,DWORD PTR [eax]
  415656:	xor    eax,edi
  415658:	mov    al,BYTE PTR [ebp+eax*1+0x327292]
  41565f:	mov    ecx,DWORD PTR [ebp-0xc]
  415662:	mov    ecx,DWORD PTR [ecx]
  415664:	xor    ecx,edi
  415666:	mov    cl,BYTE PTR [ebp+ecx*1+0x327292]
  41566d:	xor    al,cl
  41566f:	mov    ecx,DWORD PTR [ebp-0x10]
  415672:	mov    ecx,DWORD PTR [ecx]
  415674:	xor    ecx,edi
  415676:	mov    cl,BYTE PTR [ebp+ecx*1+0x327292]
  41567d:	or     al,cl
  41567f:	mov    ecx,DWORD PTR [ebp-0x14]
  415682:	mov    ecx,DWORD PTR [ecx]
  415684:	xor    ecx,edi
  415686:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  41568d:	cmp    cl,al
  41568f:	jne    0x4156a1
  415691:	lea    eax,[ebp-0x4c]
  415694:	push   eax
  415695:	call   0x41515b
  41569a:	mov    ecx,DWORD PTR [ebp-0x44]
  41569d:	cmp    eax,ecx
  41569f:	je     0x4156ab
  4156a1:	mov    eax,DWORD PTR [ebp+0x8]
  4156a4:	xor    eax,edi
  4156a6:	add    eax,ebx
  4156a8:	mov    DWORD PTR [ebp+0x18],eax
  4156ab:	mov    eax,DWORD PTR [ebp-0x8]
  4156ae:	xor    eax,edi
  4156b0:	lea    eax,[eax+esi*1+0x3272de]
  4156b7:	xor    eax,edi
  4156b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4156bc:	mov    edx,DWORD PTR [ebp+0x18]
  4156bf:	xor    ecx,edi
  4156c1:	add    ecx,ebx
  4156c3:	cmp    edx,ecx
  4156c5:	je     0x4154c2
  4156cb:	mov    eax,DWORD PTR [ebp+0x8]
  4156ce:	mov    ecx,DWORD PTR [ebp+0x18]
  4156d1:	xor    eax,edi
  4156d3:	add    eax,ebx
  4156d5:	cmp    ecx,eax
  4156d7:	jne    0x4156ea
  4156d9:	mov    eax,DWORD PTR [ebp-0x8]
  4156dc:	mov    ecx,DWORD PTR [ebp+0x1c]
  4156df:	xor    eax,edi
  4156e1:	lea    eax,[eax+ecx*1+0x3272de]
  4156e8:	jmp    0x415761
  4156ea:	push   0x18
  4156ec:	push   DWORD PTR [ebp-0x4]
  4156ef:	lea    eax,[ebp-0x64]
  4156f2:	push   eax
  4156f3:	call   0x414993
  4156f8:	mov    eax,DWORD PTR [ebp+0x8]
  4156fb:	mov    ecx,DWORD PTR [ebp-0x18]
  4156fe:	xor    eax,edi
  415700:	add    eax,ebx
  415702:	cmp    eax,ecx
  415704:	je     0x415719
  415706:	mov    eax,DWORD PTR [ebp+0x8]
  415709:	xor    eax,edi
  41570b:	add    eax,ebx
  41570d:	push   eax
  41570e:	push   0x18
  415710:	lea    eax,[ebp-0x64]
  415713:	push   eax
  415714:	call   0x414f0a
  415719:	mov    eax,DWORD PTR [ebp-0x4]
  41571c:	add    eax,0x18
  41571f:	mov    DWORD PTR [ebp+0x18],eax
  415722:	push   DWORD PTR [ebp-0x50]
  415725:	push   DWORD PTR [ebp+0x18]
  415728:	mov    eax,DWORD PTR [ebp-0x54]
  41572b:	add    eax,DWORD PTR [ebp-0x20]
  41572e:	push   eax
  41572f:	call   0x414993
  415734:	mov    eax,DWORD PTR [ebp+0x8]
  415737:	mov    ecx,DWORD PTR [ebp-0x18]
  41573a:	xor    eax,edi
  41573c:	add    eax,ebx
  41573e:	cmp    eax,ecx
  415740:	je     0x415753
  415742:	push   0x0
  415744:	push   DWORD PTR [ebp-0x50]
  415747:	mov    eax,DWORD PTR [ebp-0x54]
  41574a:	add    eax,DWORD PTR [ebp-0x20]
  41574d:	push   eax
  41574e:	call   0x414f0a
  415753:	mov    eax,DWORD PTR [ebp-0x24]
  415756:	mov    ecx,DWORD PTR [ebp-0x50]
  415759:	add    DWORD PTR [eax],ecx
  41575b:	mov    eax,DWORD PTR [ebp-0x50]
  41575e:	add    eax,DWORD PTR [ebp+0x1c]
  415761:	mov    DWORD PTR [ebp+0x1c],eax
  415764:	mov    eax,DWORD PTR [ebp-0x8]
  415767:	mov    ecx,DWORD PTR [ebp+0x1c]
  41576a:	xor    eax,edi
  41576c:	add    eax,ebx
  41576e:	imul   eax,ecx
  415771:	mov    ecx,DWORD PTR [ebp+0x8]
  415774:	mov    edx,DWORD PTR [ebp-0x28]
  415777:	xor    ecx,edi
  415779:	lea    ecx,[ecx+edx*1+0x3272de]
  415780:	cmp    eax,ecx
  415782:	jb     0x4153df
  415788:	mov    esi,DWORD PTR [ebp+0x14]
  41578b:	mov    eax,DWORD PTR [ebp-0x20]
  41578e:	mov    DWORD PTR [esi],eax
  415790:	jmp    0x4157d7
  415792:	mov    ecx,DWORD PTR [ebp+0x8]
  415795:	mov    edx,DWORD PTR [ebp+0xc]
  415798:	xor    ecx,edi
  41579a:	xor    edx,edi
  41579c:	add    ecx,ebx
  41579e:	add    edx,ebx
  4157a0:	cmp    ecx,edx
  4157a2:	jne    0x4157b6
  4157a4:	mov    eax,ds:0x7f642d1e
  4157a9:	imul   eax,eax,0x9f15fcef
  4157af:	mov    ds:0x7f642d1e,eax
  4157b4:	jmp    0x4157d7
  4157b6:	mov    ecx,DWORD PTR [ebp+0x8]
  4157b9:	xor    ecx,edi
  4157bb:	add    ecx,ebx
  4157bd:	cmp    eax,ecx
  4157bf:	je     0x4157cd
  4157c1:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  4157cb:	jmp    0x4157d7
  4157cd:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  4157d7:	pop    edi
  4157d8:	pop    esi
  4157d9:	pop    ebx
  4157da:	leave  
  4157db:	ret    0x18
  4157de:	push   ebp
  4157df:	mov    ebp,esp
  4157e1:	and    esp,0xfffffff8
  4157e4:	mov    eax,DWORD PTR [ebp+0x20]
  4157e7:	sub    esp,0x14
  4157ea:	push   ebx
  4157eb:	mov    ebx,DWORD PTR [ebp+0x14]
  4157ee:	push   esi
  4157ef:	push   edi
  4157f0:	cmp    eax,0xf89c85b5
  4157f5:	jne    0x415801
  4157f7:	push   0xf89c85b4
  4157fc:	jmp    0x415933
  415801:	mov    eax,DWORD PTR [ebp+0x20]
  415804:	cmp    eax,0xf89c85b4
  415809:	jne    0x415815
  41580b:	push   0xf89c85b3
  415810:	jmp    0x415933
  415815:	mov    eax,DWORD PTR [ebp+0x20]
  415818:	cmp    eax,0xf89c85b3
  41581d:	jne    0x415829
  41581f:	push   0xf89c85b2
  415824:	jmp    0x415933
  415829:	mov    eax,DWORD PTR [ebp+0x20]
  41582c:	cmp    eax,0xf89c85b2
  415831:	jne    0x41583d
  415833:	push   0xf89c85b1
  415838:	jmp    0x415933
  41583d:	mov    ecx,DWORD PTR [ebp+0x20]
  415840:	mov    eax,0xf89c85be
  415845:	cmp    ecx,eax
  415847:	jne    0x415903
  41584d:	mov    eax,DWORD PTR [ebp+0x10]
  415850:	mov    DWORD PTR [esp+0xc],eax
  415854:	mov    eax,DWORD PTR [ebp+0x18]
  415857:	mov    DWORD PTR [esp+0x14],eax
  41585b:	mov    eax,DWORD PTR [ebp+0xc]
  41585e:	mov    DWORD PTR [esp+0x18],eax
  415862:	mov    eax,DWORD PTR [ebp+0x8]
  415865:	mov    DWORD PTR [esp+0x10],eax
  415869:	mov    eax,DWORD PTR [esp+0x10]
  41586d:	mov    ecx,DWORD PTR [esp+0x14]
  415871:	mov    edi,0x7510897
  415876:	xor    eax,edi
  415878:	mov    esi,0x3272de
  41587d:	add    eax,esi
  41587f:	mov    DWORD PTR [ecx],eax
  415881:	mov    eax,DWORD PTR [esp+0xc]
  415885:	mov    eax,DWORD PTR [eax+0x194]
  41588b:	mov    ecx,DWORD PTR [eax]
  41588d:	mov    eax,DWORD PTR [esp+0xc]
  415891:	mov    eax,DWORD PTR [eax+0x194]
  415897:	mov    eax,DWORD PTR [eax]
  415899:	add    eax,DWORD PTR [ecx+0x3c]
  41589c:	mov    ecx,DWORD PTR [esp+0xc]
  4158a0:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4158a6:	mov    ecx,DWORD PTR [ecx+0x14]
  4158a9:	push   0x4
  4158ab:	push   0x3000
  4158b0:	push   DWORD PTR [eax+0x50]
  4158b3:	push   0x0
  4158b5:	call   ecx
  4158b7:	mov    DWORD PTR [ebx],eax
  4158b9:	mov    eax,DWORD PTR [esp+0x10]
  4158bd:	push   DWORD PTR [esp+0xc]
  4158c1:	xor    eax,edi
  4158c3:	add    eax,esi
  4158c5:	mov    DWORD PTR [esp+0x20],eax
  4158c9:	lea    eax,[esp+0x20]
  4158cd:	push   eax
  4158ce:	push   ebx
  4158cf:	push   DWORD PTR [esp+0x20]
  4158d3:	push   DWORD PTR [esp+0x28]
  4158d7:	push   DWORD PTR [esp+0x24]
  4158db:	call   0x41529f
  4158e0:	mov    eax,DWORD PTR [esp+0x10]
  4158e4:	mov    ecx,DWORD PTR [ebx]
  4158e6:	xor    eax,edi
  4158e8:	add    eax,esi
  4158ea:	cmp    ecx,eax
  4158ec:	je     0x41594a
  4158ee:	mov    eax,DWORD PTR [esp+0x18]
  4158f2:	mov    ecx,DWORD PTR [esp+0x14]
  4158f6:	xor    eax,edi
  4158f8:	add    eax,esi
  4158fa:	imul   eax,DWORD PTR [esp+0x1c]
  4158ff:	mov    DWORD PTR [ecx],eax
  415901:	jmp    0x41594a
  415903:	mov    ecx,DWORD PTR [ebp+0x20]
  415906:	cmp    ecx,0xf89c85b1
  41590c:	jne    0x415915
  41590e:	push   0xf89c85b0
  415913:	jmp    0x415933
  415915:	mov    ecx,DWORD PTR [ebp+0x20]
  415918:	cmp    ecx,0xf89c85b0
  41591e:	jne    0x415927
  415920:	push   0xf89c85bf
  415925:	jmp    0x415933
  415927:	mov    ecx,DWORD PTR [ebp+0x20]
  41592a:	cmp    ecx,0xf89c85bf
  415930:	jne    0x41594a
  415932:	push   eax
  415933:	push   DWORD PTR [ebp+0x1c]
  415936:	push   DWORD PTR [ebp+0x18]
  415939:	push   ebx
  41593a:	push   DWORD PTR [ebp+0x10]
  41593d:	push   DWORD PTR [ebp+0xc]
  415940:	push   DWORD PTR [ebp+0x8]
  415943:	call   0x4157de
  415948:	mov    DWORD PTR [ebx],eax
  41594a:	mov    eax,DWORD PTR [ebx]
  41594c:	pop    edi
  41594d:	pop    esi
  41594e:	pop    ebx
  41594f:	mov    esp,ebp
  415951:	pop    ebp
  415952:	ret    0x1c
  415955:	push   ebp
  415956:	mov    ebp,esp
  415958:	sub    esp,0xc
  41595b:	mov    eax,0xf89c85b5
  415960:	mov    DWORD PTR [ebp-0x8],eax
  415963:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  41596a:	mov    ecx,DWORD PTR [ebp-0x8]
  41596d:	xor    ecx,0x7510897
  415973:	add    ecx,0x3272de
  415979:	mov    DWORD PTR [ebp-0x4],ecx
  41597c:	mov    ecx,DWORD PTR [ebp+0xc]
  41597f:	push   eax
  415980:	mov    DWORD PTR [ebp+0xc],ecx
  415983:	push   DWORD PTR [ebp+0xc]
  415986:	lea    eax,[ebp-0x4]
  415989:	push   DWORD PTR [ebp+0x8]
  41598c:	push   eax
  41598d:	push   DWORD PTR [ebp+0xc]
  415990:	push   DWORD PTR [ebp-0xc]
  415993:	push   DWORD PTR [ebp-0x8]
  415996:	call   0x4157de
  41599b:	mov    DWORD PTR [ebp-0x4],eax
  41599e:	mov    eax,DWORD PTR [ebp-0x4]
  4159a1:	leave  
  4159a2:	ret    0x8
  4159a5:	mov    cl,0x27
  4159a7:	popa   
  4159a8:	test   bh,dh
  4159aa:	(bad)  
  4159ab:	cmc    
  4159ac:	aaa    
  4159ad:	in     eax,0xc5
  4159af:	sub    eax,0x1b6b688b
  4159b4:	and    eax,0xd49d
  4159b9:	clc    
  4159ba:	add    al,0x0
  4159bc:	add    BYTE PTR [eax+ebx*8-0x1],dh
  4159c0:	or     ch,BYTE PTR [edi-0x707c02b4]
  4159c6:	out    dx,al
  4159c7:	test   DWORD PTR [ebx],0x14b156d6
  4159cd:	inc    ecx
  4159ce:	push   ss
  4159cf:	pop    es
  4159d0:	mov    dl,0x28
  4159d2:	daa    
  4159d3:	aad    0x7d
  4159d5:	sbb    BYTE PTR [eax],0x41
  4159d8:	pop    eax
  4159d9:	fnstcw WORD PTR [ebp-0xf017c55]
  4159df:	js     0x415a23
  4159e1:	imul   edx,DWORD PTR ds:0x69a84fd0
  4159e8:	pop    esi
  4159e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159ea:	call   0x53e4ccfb
  4159ef:	push   ebp
  4159f0:	sub    al,0xec
  4159f2:	test   esp,ecx
  4159f4:	jle    0x415a69
  4159f6:	jge    0x4159d8
  4159f8:	mov    ebp,0xf05e322
  4159fd:	push   ebx
  4159fe:	xor    ecx,esp
  415a00:	repz call 0xce647bc8
  415a06:	(bad)  
  415a07:	and    bh,dh
  415a09:	mov    ch,0xc7
  415a0b:	mov    al,ds:0xd5f73710
  415a10:	adc    eax,0x8fc7efe5
  415a15:	arpl   dx,ax
  415a17:	pop    edx
  415a18:	test   al,0xdd
  415a1a:	and    BYTE PTR [edi],bl
  415a1c:	addr16 aam 0x1a
  415a1f:	lds    edi,FWORD PTR [eax+esi*1+0x45]
  415a23:	push   ebx
  415a24:	and    al,0x3f
  415a26:	sub    al,0xb5
  415a28:	repz and dl,BYTE PTR [esi+0x2d]
  415a2c:	std    
  415a2d:	dec    edx
  415a2e:	in     al,dx
  415a2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a30:	xchg   edi,eax
  415a31:	xor    eax,0x98aeb495
  415a36:	mov    al,ds:0xf21d24d7
  415a3c:	cs sbb ebx,ecx
  415a3f:	in     al,dx
  415a40:	push   edx
  415a41:	pop    es
  415a42:	stos   BYTE PTR es:[edi],al
  415a43:	adc    eax,DWORD PTR [edx+0x3]
  415a46:	hlt    
  415a47:	shr    BYTE PTR [edx],cl
  415a49:	imul   DWORD PTR [ebp-0x3ee2ca26]
  415a4f:	aam    0xbc
  415a51:	or     al,0x7f
  415a53:	xchg   esp,eax
  415a54:	stos   DWORD PTR es:[edi],eax
  415a55:	div    BYTE PTR [esi-0x4e03f8dd]
  415a5b:	mov    esi,ebx
  415a5d:	xchg   esp,eax
  415a5e:	dec    eax
  415a5f:	pop    ss
  415a60:	inc    ebp
  415a61:	xor    al,0x40
  415a63:	and    ebp,DWORD PTR [edx+0x22]
  415a66:	test   al,0xb9
  415a68:	pop    ebx
  415a69:	mov    eax,ds:0xe06f573c
  415a6e:	iret   
  415a6f:	adc    al,0xcf
  415a71:	imul   esp,DWORD PTR [edx+edi*1],0x868ae2d2
  415a78:	jno    0x415a57
  415a7a:	arpl   WORD PTR [esi-0x56],dx
  415a7d:	popf   
  415a7e:	push   esp
  415a7f:	repnz push esp
  415a81:	jle    0x415ab4
  415a83:	ds ret 0xc008
  415a87:	lea    edi,[ebx-0x223847b0]
  415a8d:	ds pop edx
  415a8f:	int    0xf8
  415a91:	jo     0x415abe
  415a93:	cld    
  415a94:	xchg   ecx,eax
  415a95:	inc    edx
  415a96:	test   DWORD PTR [edi+0x7a],edx
  415a99:	(bad)  
  415a9a:	adc    DWORD PTR [ebp-0x6728cae3],0x796e8f81
  415aa4:	pop    es
  415aa5:	loopne 0x415a61
  415aa7:	mov    bh,0xda
  415aa9:	xor    BYTE PTR [esi+0x7d],dl
  415aac:	sub    esp,DWORD PTR [ecx+0x4a]
  415aaf:	push   ecx
  415ab0:	inc    edx
  415ab1:	inc    esi
  415ab2:	icebp  
  415ab3:	fbstp  TBYTE PTR [edx-0x7b]
  415ab6:	imul   BYTE PTR [esi]
  415ab8:	sbb    BYTE PTR [ebx-0x1402c54e],ch
  415abe:	fdivr  st,st(7)
  415ac0:	in     al,dx
  415ac1:	in     al,dx
  415ac2:	push   eax
  415ac3:	push   ebx
  415ac4:	xchg   bl,dh
  415ac6:	cwde   
  415ac7:	popf   
  415ac8:	out    dx,eax
  415ac9:	push   DWORD PTR [ebx]
  415acb:	push   eax
  415acc:	enter  0x7d52,0x7e
  415ad0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ad1:	xor    DWORD PTR [esi-0x2f],edx
  415ad4:	outs   dx,BYTE PTR ds:[esi]
  415ad5:	stc    
  415ad6:	xchg   ecx,eax
  415ad7:	out    dx,al
  415ad8:	cld    
  415ad9:	(bad)  
  415ada:	(bad)  
  415adb:	mov    dl,0x7c
  415add:	lahf   
  415ade:	and    eax,0x3e7506af
  415ae3:	adc    BYTE PTR [edi-0x51942f0f],0xb9
  415aea:	adc    al,0x5e
  415aec:	mov    dl,BYTE PTR [ebx-0x40]
  415aef:	or     DWORD PTR ds:0x633020c0,ebp
  415af5:	pop    ebp
  415af6:	lods   al,BYTE PTR ds:[esi]
  415af7:	ror    DWORD PTR [ebx],1
  415af9:	addr16 xchg ecx,eax
  415afb:	add    DWORD PTR [edx-0x4db0f0ea],esp
  415b01:	pop    esi
  415b02:	retf   0x6ba9
  415b05:	ror    DWORD PTR [ecx],1
  415b07:	xchg   edi,eax
  415b08:	pushf  
  415b09:	sbb    ebx,DWORD PTR [esi+0x320913aa]
  415b0f:	xor    DWORD PTR [edx+edi*8-0x32],ebp
  415b13:	mov    eax,ds:0x8aacb75a
  415b18:	pop    ebx
  415b19:	js     0x415aae
  415b1b:	cmp    ah,BYTE PTR [ebp+0x53e3ffc5]
  415b21:	mov    gs,WORD PTR [eax-0x6becdfd4]
  415b27:	lea    esp,[edx]
  415b29:	addr16 (bad) 
  415b2b:	sub    ah,BYTE PTR gs:[ebx+0x45196d15]
  415b32:	sbb    ch,BYTE PTR [ecx-0x70]
  415b35:	mov    bl,0x78
  415b37:	mov    al,0xc
  415b39:	(bad)  
  415b3a:	idiv   BYTE PTR [edx]
  415b3c:	in     al,dx
  415b3d:	fwait
  415b3e:	pop    ss
  415b3f:	dec    esi
  415b40:	sbb    BYTE PTR [eax-0x3528eebd],0x4c
  415b47:	inc    edx
  415b48:	push   ebx
  415b49:	dec    eax
  415b4a:	sub    eax,0x27b61ad3
  415b4f:	or     BYTE PTR [ebx-0x6],ch
  415b52:	sub    al,0xbf
  415b54:	jmp    0xffd89942
  415b59:	sbb    al,0xc9
  415b5b:	outs   dx,DWORD PTR ds:[esi]
  415b5c:	jne    0x415ba4
  415b5e:	(bad)  
  415b5f:	xlat   BYTE PTR ds:[ebx]
  415b60:	cmc    
  415b61:	retf   
  415b62:	daa    
  415b63:	ror    DWORD PTR [edx-0xe7db475],cl
  415b69:	xor    ebp,edi
  415b6b:	xor    BYTE PTR [esi-0x7d410861],0x8c
  415b72:	mov    ds:0x49669727,eax
  415b77:	dec    edi
  415b78:	jb     0x415b8d
  415b7a:	xchg   edx,eax
  415b7b:	mov    ch,0x21
  415b7d:	test   al,0xcc
  415b7f:	mov    ds:0x91b69d0c,al
  415b84:	repz xor al,0xc0
  415b87:	mov    edx,0xdf195216
  415b8c:	adc    al,0x99
  415b8e:	push   edi
  415b8f:	adc    esp,DWORD PTR [edx-0xa159e54]
  415b95:	std    
  415b96:	xor    BYTE PTR [edi],ch
  415b98:	retf   0x3aee
  415b9b:	jl     0x415c13
  415b9d:	stos   BYTE PTR es:[edi],al
  415b9e:	pop    es
  415b9f:	lahf   
  415ba0:	xchg   DWORD PTR [edi+0x74],ebx
  415ba3:	lds    esi,FWORD PTR [eax+edx*8]
  415ba6:	xchg   esp,edx
  415ba8:	mov    esp,0x95042558
  415bad:	jg     0x415b7d
  415baf:	daa    
  415bb0:	cwde   
  415bb1:	xor    al,0xd1
  415bb3:	inc    esp
  415bb4:	pusha  
  415bb5:	ja     0x415b38
  415bb7:	ret    
  415bb8:	out    dx,eax
  415bb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bba:	repz (bad) 
  415bbc:	aad    0x82
  415bbe:	jae    0x415bdc
  415bc0:	leave  
  415bc1:	jp     0x415c07
  415bc3:	(bad)  
  415bc4:	mov    al,0x95
  415bc6:	ss or  al,0x8e
  415bc9:	mov    esp,0x37916d72
  415bce:	mov    eax,0x907b6c5
  415bd3:	inc    esp
  415bd4:	stc    
  415bd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bd6:	add    al,ch
  415bd8:	jo     0x415c21
  415bda:	pop    esi
  415bdb:	push   ss
  415bdc:	jno    0x415bac
  415bde:	sub    eax,0x4923ab32
  415be3:	lods   eax,DWORD PTR ds:[esi]
  415be4:	mov    edi,0x94897c8a
  415be9:	clc    
  415bea:	jno    0x415b74
  415bec:	cs cmps DWORD PTR ss:[esi],DWORD PTR es:[edi]
  415bef:	daa    
  415bf0:	push   cs
  415bf1:	inc    ecx
  415bf2:	pop    esi
  415bf3:	mov    bh,0x2c
  415bf5:	xor    eax,0x9021434c
  415bfa:	sahf   
  415bfb:	sar    BYTE PTR [ebx+0xe],0xa
  415bff:	mov    ch,0xb9
  415c01:	jnp    0x415bf9
  415c03:	jp     0x415bda
  415c05:	add    al,0xa
  415c07:	mov    esp,0x7817ad9b
  415c0c:	push   cs
  415c0d:	or     eax,0x393959a3
  415c12:	repz and BYTE PTR [edi-0x535aced6],cl
  415c19:	mov    BYTE PTR [esi],al
  415c1b:	jle    0x415c0d
  415c1d:	out    0x23,al
  415c1f:	mov    dh,0xae
  415c21:	push   cs
  415c22:	inc    esp
  415c23:	mov    ebx,0x647ae82a
  415c28:	inc    ebp
  415c29:	test   al,0xb6
  415c2b:	pop    eax
  415c2c:	jne    0x415c89
  415c2e:	mov    edx,0xa0b6f024
  415c33:	jp     0x415c60
  415c35:	mov    eax,0x1691ca91
  415c3a:	aaa    
  415c3b:	in     eax,0xdf
  415c3d:	call   0xcfbb:0xb636ea7c
  415c44:	xchg   edi,eax
  415c45:	cli    
  415c46:	or     eax,0x6a5decaf
  415c4b:	add    BYTE PTR [edi-0x9a512e],dl
  415c51:	pop    ebp
  415c52:	loope  0x415c4a
  415c54:	pop    eax
  415c55:	adc    bh,BYTE PTR [edi+0x72]
  415c58:	mov    dh,0x74
  415c5a:	fist   DWORD PTR [ebp+0x59289fc5]
  415c60:	iret   
  415c61:	cmp    BYTE PTR [edx+eiz*4+0x5b],bh
  415c65:	sub    bh,0x66
  415c68:	push   cs
  415c69:	cli    
  415c6a:	jo     0x415c82
  415c6c:	lahf   
  415c6d:	pop    eax
  415c6e:	stc    
  415c6f:	jmp    0x415c66
  415c71:	dec    ecx
  415c72:	cmovnp ebx,DWORD PTR [ecx+0x476358c9]
  415c79:	adc    DWORD PTR [ebx],eax
  415c7b:	rcr    ebp,cl
  415c7d:	push   edx
  415c7e:	jbe    0x415c34
  415c80:	pushf  
  415c81:	dec    esp
  415c82:	inc    esp
  415c83:	inc    edx
  415c84:	inc    esp
  415c85:	mov    dl,0x3e
  415c87:	pop    ss
  415c88:	xor    BYTE PTR [ebx-0x32],0x1f
  415c8c:	lea    ebp,ds:0x70ceca25
  415c92:	(bad)  
  415c93:	lahf   
  415c94:	sbb    DWORD PTR [edi],0xffffff81
  415c97:	fwait
  415c98:	mov    al,ds:0x246b9b62
  415c9d:	ret    
  415c9e:	pop    ebp
  415ca0:	ret    
  415ca1:	cmp    al,0x44
  415ca3:	sub    BYTE PTR [eax-0x10],0xf9
  415ca7:	jmp    0x9be9:0x55bdac9c
  415cae:	sar    DWORD PTR [esi-0x716de627],1
  415cb4:	add    eax,0x41d6879a
  415cb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cba:	inc    edi
  415cbb:	jp     0x415c6b
  415cbd:	test   al,0xd3
  415cbf:	xchg   edi,eax
  415cc0:	mov    bh,dl
  415cc2:	retf   0x2848
  415cc5:	sub    eax,0x5690fcfd
  415cca:	or     ch,ch
  415ccc:	pop    esi
  415ccd:	xor    BYTE PTR [ecx],0xdf
  415cd0:	call   0x63499720
  415cd5:	lds    ebp,FWORD PTR ds:0x2cdfbcef
  415cdb:	inc    edx
  415cdc:	icebp  
  415cdd:	or     bh,cl
  415cdf:	pop    ebx
  415ce0:	scas   al,BYTE PTR es:[edi]
  415ce1:	sbb    ah,dl
  415ce3:	popa   
  415ce4:	xchg   edi,eax
  415ce5:	sbb    eax,0x8d28919f
  415cea:	inc    ecx
  415ceb:	mov    esi,0x72c69458
  415cf0:	test   al,0x74
  415cf2:	lods   eax,DWORD PTR ds:[esi]
  415cf3:	xchg   ecx,eax
  415cf4:	add    DWORD PTR [ebp+ecx*4+0x4e],ecx
  415cf8:	arpl   WORD PTR [ecx+ebp*1+0xe70e690],sp
  415cff:	xor    al,0xa4
  415d01:	xlat   BYTE PTR ds:[ebx]
  415d02:	repnz and eax,0xf56655e9
  415d08:	xor    ebp,edi
  415d0a:	pop    esp
  415d0b:	push   es
  415d0c:	fisttp WORD PTR [ebx-0x44da7e1b]
  415d12:	(bad)  [edx-0xa89057f]
  415d18:	ja     0x415ce5
  415d1a:	push   0x4075a574
  415d1f:	jns    0x415d04
  415d21:	into   
  415d22:	and    BYTE PTR [eax],bh
  415d24:	cdq    
  415d25:	mov    dh,0x31
  415d27:	push   ecx
  415d28:	jmp    0x415d8c
  415d2a:	push   ebp
  415d2b:	gs pop edx
  415d2d:	aas    
  415d2e:	add    al,0x8
  415d30:	and    BYTE PTR es:[eax-0x3be92fdf],bl
  415d37:	imul   ebp,DWORD PTR [esi],0x4a23211a
  415d3d:	sbb    DWORD PTR [edi],ecx
  415d3f:	jne    0x415d6e
  415d41:	shr    BYTE PTR [ebx],0xaf
  415d44:	inc    edi
  415d45:	int    0x10
  415d47:	test   ebp,ecx
  415d49:	cpuid  
  415d4b:	frstor [eax]
  415d4d:	pop    edx
  415d4e:	loopne 0x415d52
  415d50:	jecxz  0x415d45
  415d52:	test   DWORD PTR ss:[edx-0x7a],edi
  415d56:	jg     0x415dba
  415d58:	pop    ebx
  415d59:	test   al,0xdb
  415d5b:	xchg   edx,eax
  415d5c:	dec    ebx
  415d5d:	jbe    0x415d63
  415d5f:	xchg   ebx,eax
  415d60:	cli    
  415d61:	push   eax
  415d62:	je     0x415dd0
  415d64:	popf   
  415d65:	imul   ebx,DWORD PTR [ebx-0x59ecf6e9],0x60
  415d6c:	out    dx,al
  415d6d:	sar    DWORD PTR [esi+0x70],cl
  415d70:	cmp    eax,0x65d980bf
  415d75:	lea    ecx,ds:0x482ac5f
  415d7b:	jae    0x415db0
  415d7d:	or     DWORD PTR [edi+0x56241a85],edi
  415d83:	jle    0x415d0e
  415d85:	or     DWORD PTR [ecx],ebp
  415d87:	enter  0xc5ed,0x21
  415d8b:	(bad)  
  415d8c:	aam    0xe6
  415d8e:	adc    al,BYTE PTR [ebx-0xa87a726]
  415d94:	pop    edi
  415d95:	jmp    0x415d8f
  415d97:	mov    esp,0xd0b808a7
  415d9c:	pop    edi
  415d9d:	push   ebp
  415d9e:	(bad)  
  415d9f:	retf   
  415da0:	mov    ds:0xc434cdce,eax
  415da5:	(bad)  
  415da6:	jmp    0x4eadb4c1
  415dab:	arpl   cx,ax
  415dad:	daa    
  415dae:	dec    eax
  415daf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415db0:	mov    edi,0x1e5346c3
  415db5:	stc    
  415db6:	jnp    0x415e06
  415db8:	pop    ecx
  415db9:	fadd   DWORD PTR [edi+0x58f05182]
  415dbf:	je     0x415d61
  415dc1:	aaa    
  415dc2:	mov    bh,0xeb
  415dc4:	jg     0x415dc5
  415dc6:	push   ebx
  415dc7:	mov    eax,0xee7425a2
  415dcc:	mov    esp,0x7a17fd0c
  415dd1:	mov    esi,cr0
  415dd4:	sbb    ch,ch
  415dd6:	cmp    ch,al
  415dd8:	xlat   BYTE PTR ds:[ebx]
  415dd9:	in     eax,0xed
  415ddb:	xchg   ebp,eax
  415ddc:	or     al,0xc2
  415dde:	mov    DWORD PTR [edx+0x21],edi
  415de1:	inc    ebx
  415de2:	cmp    eax,0x497d394c
  415de7:	jge    0x415e47
  415de9:	mov    ds:0xc2ac6f0c,al
  415dee:	xor    ebp,edx
  415df0:	pushf  
  415df1:	out    dx,eax
  415df2:	popf   
  415df3:	xor    bh,dl
  415df5:	pop    ebx
  415df6:	jno    0x415e44
  415df8:	dec    edi
  415df9:	cmp    ch,BYTE PTR [ebx]
  415dfb:	ret    
  415dfc:	js     0x415dfa
  415dfe:	mov    edx,0xa71cb1d7
  415e03:	push   esi
  415e04:	jmp    0x5b48cfdd
  415e09:	jmp    0x415d92
  415e0b:	push   edi
  415e0c:	imul   ebx,edx,0x40cb34a0
  415e12:	pop    ds
  415e13:	stc    
  415e14:	jmp    0x80da:0x377dc7b3
  415e1b:	mov    eax,ebx
  415e1d:	adc    DWORD PTR [edi],edi
  415e1f:	sub    eax,ebx
  415e21:	retf   0x21fd
  415e24:	sahf   
  415e25:	rcr    BYTE PTR [ebx-0x69],0xfc
  415e29:	xchg   DWORD PTR [edx+0x3a],ecx
  415e2c:	add    ebx,edi
  415e2e:	rep repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e31:	ret    0xe55a
  415e34:	mov    cl,0x4d
  415e36:	stos   BYTE PTR es:[edi],al
  415e37:	add    bh,BYTE PTR [edx-0x76]
  415e3a:	lahf   
  415e3b:	fwait
  415e3c:	outs   dx,BYTE PTR ds:[esi]
  415e3d:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  415e3f:	jae    0x415e8e
  415e41:	adc    eax,0x7cec6758
  415e46:	cld    
  415e47:	(bad)  
  415e48:	mov    al,ds:0xb16888e1
  415e4d:	rol    eax,cl
  415e4f:	dec    ecx
  415e50:	out    dx,al
  415e51:	into   
  415e52:	dec    esp
  415e53:	(bad)  
  415e54:	icebp  
  415e55:	and    esi,DWORD PTR [ebx-0x4f10c99e]
  415e5b:	adc    eax,DWORD PTR [eax-0x4634bb67]
  415e61:	loope  0x415e99
  415e63:	jl     0x415e99
  415e65:	push   edx
  415e66:	jns    0x415df3
  415e68:	sub    BYTE PTR ds:0xe2ab12c8,0xa3
  415e6f:	fdivr  QWORD PTR [eax+eiz*4+0x62]
  415e73:	push   cs
  415e74:	loop   0x415e19
  415e76:	gs in  al,0xee
  415e79:	add    al,0xfb
  415e7b:	mov    bh,0xd5
  415e7d:	jno    0x415efe
  415e7f:	jne    0x415ef3
  415e81:	push   esp
  415e82:	add    DWORD PTR [ebx-0x699427eb],esp
  415e88:	bound  ecx,QWORD PTR [edx]
  415e8a:	(bad)  
  415e8b:	sar    DWORD PTR [ebx],cl
  415e8d:	jle    0x415e75
  415e8f:	cmp    BYTE PTR [edi-0x24],dl
  415e92:	mov    ss,WORD PTR [edi-0x21]
  415e95:	es not ebp
  415e98:	pop    ecx
  415e99:	add    DWORD PTR [ebp-0x3ba84293],0x31a1338b
  415ea3:	(bad)  
  415ea4:	sub    esp,DWORD PTR [edx-0x43]
  415ea7:	push   esp
  415ea8:	mov    ds:0x3c294337,ax
  415eae:	iret   
  415eaf:	jbe    0x415efc
  415eb1:	push   ss
  415eb2:	rcl    edx,cl
  415eb4:	fld    st(0)
  415eb6:	push   ss
  415eb7:	sbb    BYTE PTR [ebx-0x2a],0xdf
  415ebb:	fistp  DWORD PTR [edi+0x2bb78b94]
  415ec1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ec2:	shl    DWORD PTR [edi],cl
  415ec4:	fist   WORD PTR [ebp-0x7ffff27]
  415eca:	add    al,0x0
  415ecc:	add    BYTE PTR [esp+ebx*1],cl
  415ecf:	sbb    dl,bh
  415ed1:	je     0x415ebe
  415ed3:	and    dl,dl
  415ed5:	inc    edx
  415ed7:	pop    ebx
  415ed8:	inc    ecx
  415ed9:	pop    ebx
  415eda:	iret   
  415edb:	(bad)  
  415edd:	lahf   
  415ede:	sub    eax,DWORD PTR [ebp+0x767d6bd0]
  415ee4:	retf   
  415ee5:	jb     0x415f04
  415ee7:	ins    BYTE PTR es:[edi],dx
  415ee8:	jns    0x415ea0
  415eea:	xchg   BYTE PTR [edi+0x611148de],cl
  415ef0:	sub    BYTE PTR [ebx-0x45],ah
  415ef3:	xchg   edx,eax
  415ef4:	mov    ecx,0x7a23a7e8
  415ef9:	ret    0xc61f
  415efc:	rol    BYTE PTR [ebx],cl
  415efe:	jmp    0xf591ca06
  415f03:	shl    BYTE PTR [ebp+0x4],0x16
  415f07:	sbb    ch,BYTE PTR [eax+esi*8]
  415f0a:	or     DWORD PTR [edi-0x798c1594],ebp
  415f10:	mov    esi,0x7092c626
  415f15:	mov    cl,0x18
  415f17:	popf   
  415f18:	icebp  
  415f19:	sub    eax,0x7a6bd795
  415f1e:	sub    ecx,DWORD PTR [edi+0x6bc6068a]
  415f24:	xor    al,0xee
  415f26:	shr    BYTE PTR [eax-0x11edc7f5],cl
  415f2c:	test   ax,0xb77f
  415f30:	fcomp  st(3)
  415f32:	cmp    DWORD PTR [edx],edi
  415f34:	jne    0x415f0b
  415f36:	inc    eax
  415f37:	mov    gs,WORD PTR [eax+ebp*4]
  415f3a:	loopne 0x415f1a
  415f3c:	pop    esi
  415f3d:	imul   ecx,DWORD PTR ds:0x5ce70679,0xffffffe3
  415f44:	retf   
  415f45:	sahf   
  415f46:	popf   
  415f47:	(bad)  
  415f48:	cmp    al,cl
  415f4a:	xor    DWORD PTR [edx],esi
  415f4c:	or     ch,ah
  415f4e:	dec    esi
  415f4f:	popa   
  415f50:	ficom  DWORD PTR [ebp+0x7d73833b]
  415f56:	repz shr DWORD PTR [esi+0x417d5772],0x33
  415f5e:	mov    bh,0x6f
  415f60:	cmp    DWORD PTR [ebp+ebx*8+0x13],esi
  415f64:	add    al,0x5
  415f66:	cli    
  415f67:	icebp  
  415f68:	and    al,0xbc
  415f6a:	mov    eax,0x71572af6
  415f6f:	dec    edi
  415f70:	call   DWORD PTR [edx+0x19]
  415f73:	mov    bl,0x56
  415f75:	xor    eax,0x19544ed5
  415f7a:	xor    eax,0x5e5e1de4
  415f7f:	mov    esp,DWORD PTR [ebx-0x46]
  415f82:	add    dh,BYTE PTR [ecx]
  415f84:	adc    cl,al
  415f86:	retf   0x36dd
  415f89:	retf   
  415f8a:	and    al,0xb5
  415f8c:	and    DWORD PTR [edx-0x4cf85c8d],edi
  415f92:	retf   0xa45d
  415f95:	stos   BYTE PTR es:[edi],al
  415f96:	in     al,0xac
  415f98:	pop    ss
  415f99:	and    ebp,0x23404c93
  415f9f:	dec    ebp
  415fa0:	mov    eax,ds:0xa95599a
  415fa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fa6:	std    
  415fa7:	lea    eax,[ecx+0x72]
  415faa:	pop    esi
  415fab:	lods   eax,DWORD PTR ds:[esi]
  415fac:	mov    edx,0x1010bd91
  415fb1:	jecxz  0x415f96
  415fb3:	push   es
  415fb4:	mov    al,0x72
  415fb6:	xor    al,0x70
  415fb8:	cmp    eax,0x923213a6
  415fbd:	pop    ecx
  415fbe:	cmc    
  415fbf:	ds retf 
  415fc1:	(bad)  
  415fc2:	sbb    BYTE PTR [esi],al
  415fc4:	dec    ecx
  415fc5:	mov    dh,0xaf
  415fc7:	xor    eax,0xc5d88cb6
  415fcc:	jmp    0x83ea:0x1e2db534
  415fd3:	push   edi
  415fd4:	dec    ecx
  415fd5:	push   esi
  415fd6:	xor    BYTE PTR [ecx+0x1c],dh
  415fd9:	call   0x68cdb818
  415fde:	push   eax
  415fdf:	dec    BYTE PTR [eax+0x58fcc0e8]
  415fe5:	retf   
  415fe6:	ins    BYTE PTR es:[edi],dx
  415fe7:	push   esp
  415fe8:	call   0x8903:0x904ed629
  415fef:	lds    ecx,FWORD PTR ds:0x9e2b78c7
  415ff5:	mov    eax,0xb6680898
  415ffa:	sub    al,0x59
  415ffc:	ds pushf 
  415ffe:	mov    dl,0x74
  416000:	sub    eax,0x47a61923
  416005:	shr    DWORD PTR ss:[edx-0x7ad31ecd],cl
  41600c:	mov    DWORD PTR [esi-0x10],eax
  41600f:	sub    cl,ch
  416011:	in     al,0x31
  416013:	push   eax
  416014:	cmp    ecx,DWORD PTR [esi-0x17ab6912]
  41601a:	les    edi,FWORD PTR [edx+0x62]
  41601d:	jge    0x41600b
  41601f:	push   edx
  416020:	cmp    DWORD PTR [ebx],ebx
  416022:	inc    edx
  416023:	adc    al,0xf6
  416025:	icebp  
  416026:	shr    DWORD PTR [ebx-0x5104c06a],0x4f
  41602d:	cmp    edi,DWORD PTR [edx+0x75398209]
  416033:	pop    esi
  416034:	repz dec eax
  416036:	fwait
  416037:	data16 loope 0x416033
  41603a:	mov    cl,0xc3
  41603c:	jbe    0x416040
  41603e:	jmp    0xc51db1f7
  416043:	in     al,dx
  416044:	and    BYTE PTR [edx+0x40],0xdb
  416048:	mov    eax,0x3e4896f2
  41604d:	pop    ecx
  41604e:	add    eax,DWORD PTR [ebx+0x505e5133]
  416054:	lock xor DWORD PTR [eax+esi*1-0xc],ecx
  416059:	jae    0x416048
  41605b:	push   ebx
  41605c:	add    ecx,edi
  41605e:	sbb    eax,0x7b284a51
  416063:	dec    eax
  416064:	lahf   
  416065:	stos   BYTE PTR es:[edi],al
  416066:	int3   
  416067:	cmc    
  416068:	push   cs
  416069:	xchg   BYTE PTR [eax],bh
  41606b:	int3   
  41606c:	dec    esi
  41606d:	int3   
  41606e:	push   ebx
  41606f:	xchg   ecx,eax
  416070:	daa    
  416071:	arpl   sp,di
  416073:	add    al,0xed
  416075:	mov    ebp,0xba676b14
  41607a:	inc    esp
  41607b:	cmp    BYTE PTR es:[ebp-0x7e],bl
  41607f:	shr    ah,cl
  416081:	inc    esi
  416082:	jno    0x4160cf
  416084:	mov    al,ds:0x8b06b9c6
  416089:	inc    DWORD PTR ds:0xa46eb077
  41608f:	neg    ecx
  416091:	enter  0x7f6f,0x8f
  416095:	pop    ebx
  416096:	and    BYTE PTR [edx-0x74b43280],cl
  41609c:	ret    
  41609d:	jo     0x416085
  41609f:	xchg   ebx,eax
  4160a0:	out    dx,al
  4160a1:	pop    esi
  4160a2:	push   edi
  4160a3:	pop    ecx
  4160a4:	fst    st(4)
  4160a6:	xchg   ebp,eax
  4160a7:	mov    ebx,edi
  4160a9:	dec    edx
  4160aa:	jns    0x416045
  4160ac:	imul   ebx,edi,0xac30ed4f
  4160b2:	xchg   edx,eax
  4160b3:	jge    0x4160eb
  4160b5:	mov    ah,BYTE PTR [eax-0x59]
  4160b8:	and    eax,esp
  4160ba:	shl    BYTE PTR [edi-0x44],0x2d
  4160be:	cmp    al,0xd2
  4160c0:	std    
  4160c1:	or     eax,eax
  4160c3:	test   eax,0x2b442a54
  4160c8:	into   
  4160c9:	out    0xa2,eax
  4160cb:	xchg   esi,eax
  4160cc:	mov    eax,ds:0xd96a6f03
  4160d1:	jmp    0x41612e
  4160d3:	mov    edi,DWORD PTR [eax+0x16a1b60e]
  4160d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160da:	call   0x7b6ca06f
  4160df:	repnz jmp 0x9422:0x8363428a
  4160e7:	hlt    
  4160e8:	mov    bh,0x1f
  4160ea:	pop    ecx
  4160eb:	(bad)  
  4160ec:	out    dx,al
  4160ed:	inc    esi
  4160ee:	mov    gs,WORD PTR [esi]
  4160f0:	cld    
  4160f1:	push   ebx
  4160f2:	(bad)  
  4160f3:	test   DWORD PTR [esp+edx*4-0x1808f1fc],0x2a1b4626
  4160fe:	sbb    ebx,esi
  416100:	cmp    al,ch
  416102:	inc    ecx
  416103:	ja     0x4160cf
  416105:	pop    edi
  416106:	add    edi,edi
  416108:	cmp    edx,esi
  41610a:	imul   ebp,DWORD PTR [ebp-0x14],0xe8ab77dc
  416111:	jecxz  0x4160c5
  416113:	leave  
  416114:	sub    ebx,DWORD PTR [eax-0x6c]
  416117:	sti    
  416118:	or     BYTE PTR [esp+ebp*4-0x6c0dc941],0xcb
  416120:	xor    BYTE PTR es:[ecx],bh
  416123:	imul   ebx,DWORD PTR [eax+ebx*1+0x7d],0x50294d13
  41612b:	fild   DWORD PTR [esi+0x42]
  41612e:	inc    esi
  41612f:	rcr    DWORD PTR [esp+eax*1],0x15
  416133:	cmp    BYTE PTR [ebx],ah
  416135:	add    BYTE PTR [eax+0x709ff29b],dl
  41613b:	(bad)  
  41613c:	stos   DWORD PTR es:[edi],eax
  41613d:	lods   eax,DWORD PTR ds:[esi]
  41613e:	add    al,0x98
  416140:	mov    dx,0xca23
  416144:	xchg   esi,eax
  416145:	loop   0x4161c4
  416147:	mov    eax,0x49b5b0dd
  41614c:	add    ch,BYTE PTR [ecx-0x36ceb411]
  416152:	loopne 0x41618d
  416154:	xchg   ebx,eax
  416155:	mov    edi,DWORD PTR [ebx+0x62]
  416158:	mov    esi,es
  41615a:	sbb    DWORD PTR [edi-0x2c405803],edx
  416160:	push   cs
  416161:	call   0xa41c66ad
  416166:	jmp    0x87f1f4e4
  41616b:	pop    edi
  41616c:	test   BYTE PTR [ebp+0x7baeae6c],0x61
  416173:	sbb    al,0x19
  416175:	xchg   ebx,eax
  416176:	mov    cl,0xdb
  416178:	adc    cl,dl
  41617a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41617b:	sub    esi,ecx
  41617d:	add    al,0x47
  41617f:	sbb    BYTE PTR [edx-0x63],bh
  416182:	shr    BYTE PTR [ebp+eax*2-0x5f],1
  416186:	shl    BYTE PTR [ecx],0x1d
  416189:	addr16 out dx,eax
  41618b:	outs   dx,BYTE PTR ds:[esi]
  41618c:	jb     0x4161a9
  41618e:	(bad)  
  41618f:	push   ebp
  416190:	leave  
  416191:	and    DWORD PTR [ebp-0x20],esp
  416194:	jmp    0xab99:0xb08d6dad
  41619b:	cs jb  0x4161c6
  41619e:	pusha  
  41619f:	xchg   DWORD PTR [ebx+0x4a],eax
  4161a2:	fs je  0x4161ee
  4161a5:	push   0xffffffb7
  4161a7:	(bad)  [edx+0x4a10883d]
  4161ad:	jno    0x4161a4
  4161af:	push   esi
  4161b0:	mov    ebp,0x8973fadb
  4161b5:	and    al,0xb
  4161b7:	add    BYTE PTR [eax-0x2026c69f],dh
  4161bd:	aas    
  4161be:	jno    0x416195
  4161c0:	pop    ebx
  4161c1:	out    0xb8,eax
  4161c3:	or     BYTE PTR [ecx*1-0xedf7238],dl
  4161ca:	pop    ds
  4161cb:	sub    ecx,DWORD PTR ds:0x1394bc3e
  4161d1:	in     eax,dx
  4161d2:	test   DWORD PTR [ecx+edi*8-0x1b],ebx
  4161d6:	lock push edx
  4161d8:	xor    al,0x53
  4161da:	shr    ecx,1
  4161dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161dd:	push   0xf6194809
  4161e2:	sub    ch,BYTE PTR [edi+eax*4+0x2c]
  4161e6:	mov    eax,ds:0xddadb1a2
  4161eb:	and    eax,0x5a0c5a72
  4161f0:	in     eax,dx
  4161f1:	loop   0x416235
  4161f3:	leave  
  4161f4:	push   edx
  4161f5:	inc    edx
  4161f6:	or     ch,BYTE PTR [esi+0x493bfd7]
  4161fc:	xchg   ecx,eax
  4161fd:	outs   dx,DWORD PTR ds:[esi]
  4161fe:	jmp    0x7ede:0x9f1beeeb
  416205:	add    BYTE PTR [esi],bh
  416207:	fnstsw WORD PTR [ebp+ebp*2-0x5d5d7cf3]
  41620e:	cmp    esp,eax
  416210:	inc    eax
  416211:	inc    edx
  416212:	fdivr  QWORD PTR [edx-0x40]
  416215:	mov    bl,BYTE PTR [edx-0x33]
  416218:	mov    ds:0x165e0982,al
  41621d:	(bad)
  416220:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  416222:	jecxz  0x41627d
  416224:	outs   dx,DWORD PTR ds:[esi]
  416225:	rcr    BYTE PTR [edx-0xb441fc3],1
  41622b:	jno    0x416264
  41622d:	adc    eax,0x6f53a41d
  416232:	pop    esi
  416233:	imul   edx,DWORD PTR cs:[edi-0x6f6a6810],0x7a8a0558
  41623e:	dec    esi
  41623f:	popf   
  416240:	js     0x416290
  416242:	hlt    
  416243:	mov    ebp,DWORD PTR [ebx-0xa]
  416246:	inc    ebp
  416247:	add    al,0x95
  416249:	or     al,0x7c
  41624b:	int    0xf9
  41624d:	fmul   QWORD PTR [ecx+eiz*1]
  416250:	fcomp  st(7)
  416252:	jns    0x416206
  416254:	(bad)  
  416256:	icebp  
  416257:	and    al,0x86
  416259:	dec    ebx
  41625a:	test   eax,0x3f1a2fb7
  41625f:	out    dx,eax
  416260:	(bad)  
  416261:	retf   0x5f77
  416264:	mov    esp,0x32f4b6bb
  416269:	in     al,0x2f
  41626b:	enter  0x6e90,0x93
  41626f:	ror    BYTE PTR [edx],1
  416271:	sbb    BYTE PTR [ebx+0x43],bh
  416274:	xchg   ecx,eax
  416275:	shr    BYTE PTR ds:0x9d442285,0x2d
  41627c:	jg     0x4162de
  41627e:	mov    dh,0x6c
  416280:	mov    ebp,0x3e2ef195
  416285:	xor    DWORD PTR [ecx+0x20],ecx
  416288:	int    0x19
  41628a:	mov    edx,DWORD PTR [edx+0x5c]
  41628d:	call   0xc8cdd744
  416292:	fs fxch st(4)
  416295:	pop    edx
  416296:	xchg   ecx,eax
  416297:	pusha  
  416298:	out    dx,eax
  416299:	dec    eax
  41629a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41629b:	pop    esp
  41629c:	push   esi
  41629d:	aas    
  41629e:	mov    edi,0x5d82dfb
  4162a3:	loopne 0x416269
  4162a5:	pop    ebp
  4162a6:	out    0x6b,al
  4162a8:	sahf   
  4162a9:	(bad)  
  4162aa:	jmp    0x74274b04
  4162af:	mov    ch,0x5d
  4162b1:	xor    DWORD PTR [esi+0xa],0xffffffa0
  4162b5:	hlt    
  4162b6:	ins    DWORD PTR es:[edi],dx
  4162b7:	aaa    
  4162b8:	test   eax,0x84518712
  4162bd:	repnz push edx
  4162bf:	mov    bh,0x74
  4162c1:	sub    ebp,DWORD PTR [esi]
  4162c3:	stos   BYTE PTR es:[edi],al
  4162c4:	add    al,0xc3
  4162c6:	xor    al,0xd4
  4162c8:	aad    0xb8
  4162ca:	sub    bh,BYTE PTR [ebx-0xa49a49d]
  4162d0:	data16 sbb al,0xf0
  4162d3:	and    BYTE PTR [ebp-0x3e9ae05a],bl
  4162d9:	push   0xc7892204
  4162de:	inc    edi
  4162df:	mov    cs,WORD PTR [ebp+0x18]
  4162e2:	and    al,0x3d
  4162e4:	clc    
  4162e5:	jae    0x4162c2
  4162e7:	jge    0x41631e
  4162e9:	retf   
  4162ea:	push   edx
  4162eb:	sub    edx,DWORD PTR [ebx+0x530dc677]
  4162f1:	call   0x48b5861f
  4162f6:	mov    dh,0x6c
  4162f8:	sub    bh,BYTE PTR [eax-0x69599ba6]
  4162fe:	lahf   
  4162ff:	rcl    BYTE PTR [eax-0x2004daec],cl
  416305:	out    0x68,eax
  416307:	fucomi st,st(0)
  416309:	cmp    ebp,DWORD PTR [edx+0x24]
  41630c:	int    0xec
  41630e:	lea    ebx,[ecx-0x41]
  416311:	sub    ebx,DWORD PTR [esi]
  416313:	retf   
  416314:	addr16 cmp al,0x9
  416317:	or     al,0x17
  416319:	not    DWORD PTR [edi*8-0x33ca651b]
  416320:	mov    dh,0xd
  416322:	pop    ebx
  416323:	sbb    eax,0xd3e23d14
  416328:	les    edi,FWORD PTR [ecx+0x4d]
  41632b:	test   DWORD PTR [ebp+0x59],edx
  41632e:	push   0x44
  416330:	daa    
  416331:	mov    bl,0x9c
  416333:	pop    esp
  416334:	mov    es,ebx
  416336:	mul    cl
  416338:	adc    DWORD PTR ds:0x4453b156,edi
  41633e:	pop    edx
  41633f:	sub    bl,ch
  416341:	loope  0x416352
  416343:	pushf  
  416344:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416345:	jp     0x416318
  416347:	test   al,0xbb
  416349:	add    edi,DWORD PTR [esp+ebp*1-0x1f]
  41634d:	out    dx,al
  41634e:	out    dx,al
  41634f:	out    dx,eax
  416350:	mov    WORD PTR [ebp-0x1],ss
  416353:	mov    dl,0x20
  416355:	gs or  bh,ah
  416358:	daa    
  416359:	push   eax
  41635a:	pop    esi
  41635b:	mov    ch,0xc2
  41635d:	dec    edi
  41635e:	fisub  WORD PTR ds:0x1bd8c8cd
  416364:	lds    ecx,FWORD PTR [ebx-0x5e]
  416367:	jp     0x416309
  416369:	pop    ebx
  41636a:	mov    BYTE PTR [esi+0x7bb949f0],ah
  416370:	jo     0x416383
  416372:	push   esp
  416373:	aam    0xb2
  416375:	into   
  416376:	data16 ja 0x416360
  416379:	fadd   DWORD PTR [ebp+0x1]
  41637c:	sbb    ecx,0xffffffc4
  41637f:	cmp    BYTE PTR [ecx+0x27],cl
  416382:	mov    esi,0xc23d3dca
  416387:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416388:	xchg   esp,eax
  416389:	les    ebx,FWORD PTR [ebx]
  41638b:	xor    eax,0xe9de7108
  416390:	mov    ch,0x2c
  416392:	xor    al,0x59
  416394:	jbe    0x41637e
  416396:	dec    ecx
  416397:	ds sbb esi,0xe05a93b9
  41639e:	cmp    DWORD PTR [ebx+0x49],edi
  4163a1:	push   eax
  4163a2:	sar    DWORD PTR [edx],cl
  4163a4:	sahf   
  4163a5:	pushf  
  4163a6:	add    edi,ecx
  4163a8:	ss call 0x967b:0x86912cd1
  4163b0:	bound  eax,QWORD PTR [ecx+edx*2-0x4f]
  4163b4:	div    BYTE PTR [ecx-0x1adf8339]
  4163ba:	jecxz  0x41635d
  4163bc:	pop    ecx
  4163bd:	loope  0x416428
  4163bf:	adc    al,0x5a
  4163c1:	cli    
  4163c2:	push   edi
  4163c3:	leave  
  4163c4:	push   edi
  4163c5:	cmp    dh,BYTE PTR [ebp+0x3c]
  4163c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163c9:	jg     0x4163ba
  4163cb:	mov    edx,0xf7e5f4fd
  4163d0:	ror    al,0x6e
  4163d3:	(bad)  
  4163d4:	mov    edx,0xde8d
  4163d9:	clc    
  4163da:	add    al,0x0
  4163dc:	add    BYTE PTR [ecx+0x4e],bh
  4163df:	pop    ebp
  4163e0:	add    BYTE PTR [ecx+0x49],dl
  4163e3:	shr    esi,1
  4163e5:	mov    ecx,DWORD PTR [edi]
  4163e7:	out    dx,eax
  4163e8:	lods   eax,DWORD PTR ds:[esi]
  4163e9:	(bad)  
  4163ea:	mov    bl,0x30
  4163ec:	adc    DWORD PTR ds:0xbf1c5de9,esi
  4163f2:	mov    bl,0xf5
  4163f4:	pusha  
  4163f5:	stc    
  4163f6:	inc    edi
  4163f7:	push   es
  4163f8:	(bad)  
  4163f9:	xlat   BYTE PTR ds:[ebx]
  4163fa:	pop    edi
  4163fb:	dec    esp
  4163fc:	inc    eax
  4163fd:	bound  edx,QWORD PTR [edi-0x6ea33619]
  416403:	daa    
  416404:	inc    eax
  416405:	mov    ds:0x122cc2d3,al
  41640a:	cld    
  41640b:	cmp    edi,edi
  41640d:	xchg   esp,eax
  41640e:	lea    eax,[ecx]
  416410:	pop    ebx
  416411:	ss ss inc edi
  416414:	aas    
  416415:	push   0x3e
  416417:	xchg   ebx,eax
  416418:	mov    ebx,DWORD PTR [edi-0x22cea9f2]
  41641e:	cld    
  41641f:	xlat   BYTE PTR ds:[ebx]
  416420:	loop   0x416404
  416422:	sub    DWORD PTR [edi-0x1641c21a],esp
  416428:	adc    al,0xb8
  41642a:	or     BYTE PTR [ecx-0x5d],0x36
  41642e:	and    ch,ah
  416430:	xor    DWORD PTR [edx+esi*4-0x6f4ee6a],ecx
  416437:	shl    al,cl
  416439:	mov    ebp,0x143fe72b
  41643e:	mov    edx,0xe5d0c45e
  416443:	xchg   esi,eax
  416444:	cmc    
  416445:	push   ss
  416446:	mov    eax,ds:0x332be165
  41644b:	jns    0x416434
  41644d:	std    
  41644e:	loope  0x41645c
  416450:	not    BYTE PTR [ebp+0xcbd9ba4]
  416456:	nop
  416457:	lock cli 
  416459:	xor    edx,DWORD PTR [ebx]
  41645b:	sar    DWORD PTR [ecx-0x1884b565],cl
  416461:	add    BYTE PTR [edi+0x1e],cl
  416464:	out    dx,al
  416465:	mov    bh,0xba
  416467:	push   ss
  416468:	cmp    edx,DWORD PTR ds:0x8535a652
  41646e:	inc    ecx
  41646f:	clc    
  416470:	sbb    eax,0x80b2081f
  416475:	leave  
  416476:	(bad)  
  416477:	mov    ds:0xc199661e,al
  41647c:	das    
  41647d:	inc    edi
  41647e:	dec    eax
  41647f:	mov    cl,0xa3
  416481:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416482:	cwde   
  416483:	sysret 
  416485:	daa    
  416486:	clc    
  416487:	or     eax,0x54c185db
  41648c:	add    bh,BYTE PTR [ebp+0x28d11572]
  416492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416493:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416494:	sbb    ah,BYTE PTR [edi-0x22]
  416497:	cmc    
  416498:	scas   eax,DWORD PTR es:[edi]
  416499:	lods   eax,DWORD PTR ds:[esi]
  41649a:	inc    eax
  41649b:	xor    eax,0xe58e2f8
  4164a0:	sti    
  4164a1:	lea    edi,ds:0x4bc
  4164a6:	push   eax
  4164a7:	mov    edi,0x99c7fdb9
  4164ac:	test   DWORD PTR [esi+0x2b],esp
  4164af:	mov    bh,0x91
  4164b1:	cwde   
  4164b2:	fwait
  4164b3:	mov    esi,0x51f093bc
  4164b8:	sub    BYTE PTR [ebp-0x40],al
  4164bb:	or     ah,dh
  4164bd:	fs ins DWORD PTR es:[edi],dx
  4164bf:	neg    DWORD PTR [ebx]
  4164c1:	dec    ebx
  4164c2:	stos   DWORD PTR es:[edi],eax
  4164c3:	inc    ecx
  4164c4:	cwde   
  4164c5:	sbb    eax,0x87399332
  4164ca:	pop    esp
  4164cb:	and    BYTE PTR [eax],bh
  4164cd:	xchg   esi,eax
  4164ce:	js     0x4164f0
  4164d0:	or     al,0xbe
  4164d2:	mov    dl,0x59
  4164d4:	adc    BYTE PTR [ebp+0x6b],dh
  4164d7:	mov    dl,0x50
  4164d9:	lahf   
  4164da:	add    ch,0x6d
  4164dd:	jg     0x4164d2
  4164df:	xchg   edi,eax
  4164e0:	adc    eax,0x42260af6
  4164e5:	shl    edx,1
  4164e7:	je     0x416552
  4164e9:	pop    es
  4164ea:	xchg   ebx,eax
  4164eb:	ds fcom st(2)
  4164ee:	dec    eax
  4164ef:	call   0x80f7d128
  4164f4:	sbb    bl,BYTE PTR [ecx+0x732f1efb]
  4164fa:	dec    esi
  4164fb:	xchg   ecx,eax
  4164fc:	adc    BYTE PTR [ebx],bl
  4164fe:	leave  
  4164ff:	jno    0x41654a
  416501:	mov    esi,0x15a7a13b
  416506:	icebp  
  416507:	cmp    BYTE PTR [ecx+ecx*1+0x45bd21bc],ah
  41650e:	aas    
  41650f:	sbb    edx,DWORD PTR [esi+0x72]
  416512:	jp     0x4164a3
  416514:	ja     0x41651f
  416516:	pop    edx
  416517:	ficom  DWORD PTR [edi-0x7c]
  41651a:	mov    edi,0xac584f5d
  41651f:	or     BYTE PTR [edx+0x79d14b3f],cl
  416525:	xor    BYTE PTR [edi+0x36],dl
  416528:	mov    ds:0x84568df9,eax
  41652d:	cmp    esp,DWORD PTR [eax+0x702b6b2b]
  416533:	enter  0x536,0x16
  416537:	es inc ebp
  416539:	es loope 0x416558
  41653c:	popf   
  41653d:	sbb    al,0xb2
  41653f:	(bad)  
  416540:	fsubr  DWORD PTR [edi-0x1287ed59]
  416546:	jb     0x416598
  416548:	jne    0x8fced239
  41654e:	cld    
  41654f:	outs   dx,DWORD PTR ds:[esi]
  416550:	dec    eax
  416551:	fcomp  st(7)
  416553:	pop    edi
  416554:	iret   
  416555:	cwde   
  416556:	(bad)  
  416557:	hlt    
  416558:	scas   eax,DWORD PTR es:[edi]
  416559:	sbb    eax,0xd90dfb6
  41655e:	and    DWORD PTR ds:0x3e662e2,0x38
  416565:	push   ds
  416566:	rcl    DWORD PTR [ebx-0x26ab333c],0x89
  41656d:	rcr    BYTE PTR [eax],cl
  41656f:	push   eax
  416570:	jg     0x41653f
  416572:	push   eax
  416573:	cli    
  416574:	inc    edx
  416575:	mov    ecx,0xb28f3390
  41657a:	fsub   DWORD PTR [ecx+ebx*8-0xe]
  41657e:	sbb    esp,DWORD PTR [eax+0x4c]
  416581:	xlat   BYTE PTR ds:[ebx]
  416582:	add    al,0x5a
  416584:	sub    BYTE PTR [ebx-0x14],dh
  416587:	or     al,0x4c
  416589:	push   cs
  41658a:	out    dx,eax
  41658b:	cdq    
  41658c:	frstor [edx+0x3f50916f]
  416592:	imul   si,WORD PTR [eax],0x1f79
  416597:	dec    eax
  416598:	imul   esp,DWORD PTR [eax+edx*1-0x1fb3f8],0x41
  4165a0:	pop    ebx
  4165a1:	sub    DWORD PTR [eax*4-0x68bf621b],ebx
  4165a8:	pop    ss
  4165a9:	and    eax,esp
  4165ab:	sbb    eax,0x5f8f09a2
  4165b0:	jne    0x4165c2
  4165b2:	inc    esi
  4165b3:	pusha  
  4165b4:	daa    
  4165b5:	and    eax,0xef0aced0
  4165ba:	push   ss
  4165bb:	jge    0x41653d
  4165bd:	and    bh,ah
  4165bf:	and    eax,0xe8ce58d1
  4165c5:	pop    ecx
  4165c6:	mov    bh,0x8c
  4165c8:	mov    ebp,0xed98a654
  4165cd:	stos   BYTE PTR es:[edi],al
  4165ce:	lds    edx,FWORD PTR [ecx-0x709d9c6a]
  4165d4:	inc    eax
  4165d5:	cmp    edi,ebp
  4165d7:	jmp    0x4165f6
  4165d9:	mov    dh,BYTE PTR [edi]
  4165db:	inc    eax
  4165dc:	test   BYTE PTR ds:0x20d3a1a6,dh
  4165e2:	(bad)  
  4165e3:	xor    BYTE PTR ds:[edx],al
  4165e6:	adc    esi,DWORD PTR [ebx+0x12f13d56]
  4165ec:	mov    edi,0x775e547d
  4165f1:	mov    cl,0x42
  4165f3:	jae    0x41659f
  4165f5:	loope  0x4165cc
  4165f7:	pop    ebx
  4165f8:	(bad)  
  4165f9:	sar    al,1
  4165fb:	hlt    
  4165fc:	add    BYTE PTR [eax],ah
  4165fe:	and    eax,0x47801c6b
  416603:	ficomp WORD PTR [ebx-0x23]
  416606:	and    ebx,edx
  416608:	(bad)  
  416609:	fdiv   DWORD PTR [ebp-0x2c]
  41660c:	inc    edi
  41660d:	mov    BYTE PTR ds:0xe2fb12ba,al
  416613:	push   esp
  416614:	fbstp  TBYTE PTR [ebx+0x47]
  416617:	nop
  416618:	loop   0x4165c7
  41661a:	popf   
  41661b:	test   al,0xb4
  41661d:	lock jecxz 0x4165de
  416620:	sar    DWORD PTR [ebx+ebp*4+0x69],cl
  416624:	sub    al,0x90
  416626:	pushf  
  416627:	mov    ds:0x2c78f0dd,al
  41662c:	mov    al,ds:0x47fe6bde
  416631:	pushf  
  416632:	mov    edi,0xfb745cb5
  416637:	inc    ecx
  416638:	sbb    BYTE PTR fs:[eax],bh
  41663b:	cmc    
  41663c:	mov    DWORD PTR [ebx],ecx
  41663e:	aad    0x2d
  416640:	add    BYTE PTR [esi+0x12],bh
  416643:	fld    TBYTE PTR [ecx]
  416645:	ins    DWORD PTR es:[edi],dx
  416646:	mov    bh,0x6f
  416648:	adc    BYTE PTR [eax-0x14],ah
  41664b:	sub    eax,0xa2133d8c
  416650:	test   DWORD PTR [eax+eax*2],esp
  416653:	(bad)  
  416654:	scas   eax,DWORD PTR es:[edi]
  416655:	dec    ebp
  416656:	int3   
  416657:	push   ebx
  416658:	sbb    eax,0x5f578b80
  41665d:	js     0x416629
  41665f:	fimul  DWORD PTR [ebp-0x2b]
  416662:	stos   DWORD PTR es:[edi],eax
  416663:	and    DWORD PTR [bp+0x36],0x49fd1be8
  41666b:	mul    DWORD PTR [ebp+0x707db2ee]
  416671:	je     0x41665c
  416673:	aas    
  416674:	pop    ebp
  416675:	inc    edx
  416676:	imul   ebx,DWORD PTR [ebp+ecx*1-0x743edf51],0x498b8bab
  416681:	stos   DWORD PTR es:[edi],eax
  416682:	in     eax,dx
  416683:	call   0xa8a8:0x763d2f3a
  41668a:	lods   eax,DWORD PTR ds:[esi]
  41668b:	int3   
  41668c:	push   0xffffffbc
  41668e:	push   es
  41668f:	mov    esp,0xc68b2e86
  416694:	jp     0x4166b6
  416696:	xchg   esp,eax
  416697:	sbb    al,0xf9
  41669a:	sub    al,0x41
  41669c:	fnsave [eax-0x2d]
  41669f:	push   0x8c554a00
  4166a4:	jmp    0x2b58:0x3b0ca005
  4166ab:	jb     0x416694
  4166ad:	fidivr DWORD PTR [eax]
  4166af:	mov    cl,bh
  4166b1:	retf   
  4166b2:	jno    0x4166bd
  4166b4:	mov    eax,0x2297dc4
  4166b9:	jmp    0x4166a1
  4166bb:	dec    eax
  4166bc:	js     0x4166e3
  4166be:	dec    esp
  4166bf:	icebp  
  4166c0:	push   esp
  4166c1:	dec    edx
  4166c2:	jmp    0x9fcaf0f2
  4166c7:	pop    es
  4166c8:	xchg   BYTE PTR [ebx-0x2e6c6270],bh
  4166ce:	sbb    eax,0xb2bd05a
  4166d3:	(bad)  
  4166d5:	sub    BYTE PTR [edx+0x6ee86517],ch
  4166db:	nop
  4166dc:	xor    al,0x6a
  4166de:	inc    ebp
  4166df:	push   ebp
  4166e0:	(bad)  
  4166e1:	(bad)  
  4166e3:	jmp    0xf5e3eef5
  4166e8:	xor    al,0xbb
  4166ea:	fisttp WORD PTR [ecx-0x70996a07]
  4166f0:	stc    
  4166f1:	je     0x41674e
  4166f3:	jge    0x4166b4
  4166f5:	popf   
  4166f6:	ror    DWORD PTR [esi-0x6a],cl
  4166f9:	mov    dh,ch
  4166fb:	out    0xe6,eax
  4166fd:	add    al,0x81
  4166ff:	mov    dl,BYTE PTR [edx+0x27]
  416702:	and    BYTE PTR [ebp-0x42602ddd],0xfe
  416709:	inc    esi
  41670a:	into   
  41670b:	scas   eax,DWORD PTR es:[edi]
  41670c:	push   0xffffffa9
  41670e:	ss sub eax,0x10d4de61
  416714:	xchg   eax,edx
  416716:	and    al,0x99
  416718:	push   edx
  416719:	jl     0x416763
  41671b:	ret    0x7e3b
  41671e:	ins    DWORD PTR es:[edi],dx
  41671f:	dec    esi
  416720:	and    BYTE PTR [edx+0x39954f22],dl
  416726:	xchg   ah,bl
  416728:	ds popf 
  41672a:	jmp    0x98d6:0x8217aa47
  416731:	inc    edi
  416732:	mov    eax,0x2fcaa89e
  416737:	add    al,0xdd
  416739:	retf   
  41673a:	hlt    
  41673b:	jp     0x4166c4
  41673d:	retf   
  41673e:	sub    cl,ch
  416740:	push   edx
  416741:	stos   DWORD PTR es:[edi],eax
  416742:	dec    esi
  416743:	jecxz  0x4166e6
  416745:	outs   dx,DWORD PTR ds:[esi]
  416746:	mov    esp,0x3acee9d8
  41674b:	ror    BYTE PTR [edx+0x3d],1
  41674e:	out    dx,al
  41674f:	mov    eax,DWORD PTR [esi]
  416751:	dec    edx
  416752:	outs   dx,DWORD PTR ds:[esi]
  416753:	adc    DWORD PTR ds:0xa3b8bc44,eax
  416759:	test   DWORD PTR [ebx-0x2b],ebp
  41675c:	sbb    DWORD PTR [ecx-0x35],edx
  41675f:	fwait
  416760:	mov    DWORD PTR [ecx+0xcad7de],esp
  416766:	into   
  416767:	in     eax,0x61
  416769:	mov    ebx,0xd0e3f385
  41676e:	(bad)  
  416770:	jno    0x41678b
  416772:	jecxz  0x416711
  416774:	in     al,dx
  416775:	push   eax
  416776:	aam    0x92
  416778:	sbb    BYTE PTR [esi+edi*1+0x5201197a],cl
  41677f:	cdq    
  416780:	fdiv   DWORD PTR [edx-0x2d]
  416783:	sbb    al,0x0
  416785:	dec    ebp
  416786:	fdivrp st(0),st
  416788:	pop    esi
  416789:	nop
  41678a:	std    
  41678b:	xlat   BYTE PTR ds:[ebx]
  41678c:	in     al,dx
  41678d:	cmp    BYTE PTR [esi+0x28fb75e4],ch
  416793:	fild   DWORD PTR [ebx-0x31]
  416796:	mov    esp,0x44521287
  41679b:	cmp    eax,0xc3e650e2
  4167a0:	mov    esi,0x8b935fde
  4167a5:	add    DWORD PTR [edx],edx
  4167a7:	xchg   ebp,eax
  4167a8:	popf   
  4167a9:	xlat   BYTE PTR ds:[ebx]
  4167aa:	push   edx
  4167ab:	xor    BYTE PTR [ebp+0x2],cl
  4167ae:	call   0x368b3e84
  4167b3:	lods   eax,DWORD PTR ds:[esi]
  4167b4:	pop    edi
  4167b5:	mov    esp,0xf01be3f0
  4167ba:	mov    ah,ah
  4167bc:	in     al,dx
  4167bd:	call   0xd69f6b32
  4167c2:	mov    ebp,edx
  4167c4:	xchg   BYTE PTR [edx+0x2fa32671],cl
  4167ca:	(bad)  
  4167cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167cc:	(bad)  
  4167cd:	mov    dh,0x75
  4167cf:	lahf   
  4167d0:	jg     0x4167f4
  4167d2:	aad    0x14
  4167d4:	xchg   esp,ecx
  4167d6:	adc    esp,edi
  4167d8:	adc    al,0xd2
  4167da:	xchg   ecx,eax
  4167db:	sbb    ch,BYTE PTR [ebx+edx*4-0x2c]
  4167df:	pop    ecx
  4167e0:	popf   
  4167e1:	aas    
  4167e2:	ret    0x7b5
  4167e5:	mov    ebx,0x77371fd5
  4167ea:	sti    
  4167eb:	dec    esi
  4167ec:	jp     0x41678a
  4167ee:	aam    0xfc
  4167f0:	pop    edi
  4167f1:	das    
  4167f2:	inc    edx
  4167f3:	inc    eax
  4167f4:	arpl   cx,di
  4167f6:	loop   0x416844
  4167f8:	xchg   DWORD PTR [ebp+0x7f199f38],edi
  4167fe:	mov    ch,0x13
  416800:	cmp    esp,DWORD PTR [edi+edi*8]
  416803:	push   esp
  416804:	mov    ds:0x114ec7c2,al
  416809:	aas    
  41680a:	(bad)  
  41680b:	mov    bl,0x16
  41680d:	push   es
  41680e:	mov    ah,0xa1
  416810:	fldenv [esi]
  416812:	xor    DWORD PTR [edx+0x52b878d9],edx
  416818:	sti    
  416819:	push   esp
  41681a:	push   cs
  41681b:	inc    esi
  41681c:	xor    eax,0xfc4751ca
  416821:	outs   dx,BYTE PTR ds:[esi]
  416822:	call   0x735c:0xe8f18999
  416829:	or     BYTE PTR [esi+0x5c787ecc],dl
  41682f:	fnstenv [eax+0x2ece8bc0]
  416835:	popf   
  416836:	xor    al,0x94
  416838:	jmp    FWORD PTR [esi+0x102dd48e]
  41683e:	aad    0x97
  416840:	xor    al,0xbd
  416842:	int3   
  416843:	mul    ch
  416845:	int    0x2f
  416847:	cli    
  416848:	push   esi
  416849:	xlat   BYTE PTR ds:[ebx]
  41684a:	push   edx
  41684b:	bound  edx,QWORD PTR [edx]
  41684d:	ins    BYTE PTR es:[edi],dx
  41684e:	xor    edi,DWORD PTR [ecx-0x49]
  416851:	dec    ebx
  416852:	and    BYTE PTR [esp+esi*4+0x3],dl
  416856:	lods   eax,DWORD PTR ds:[esi]
  416857:	dec    esi
  416858:	stos   DWORD PTR es:[edi],eax
  416859:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41685a:	fwait
  41685b:	clc    
  41685c:	ins    DWORD PTR es:[edi],dx
  41685d:	cmp    eax,0xe88d9a43
  416862:	jo     0x416852
  416864:	arpl   WORD PTR [ebp+0x7],sp
  416867:	lds    edi,FWORD PTR [edx+0x73]
  41686a:	enter  0xf095,0x1b
  41686e:	pop    ss
  41686f:	add    DWORD PTR [edi],ebp
  416871:	out    0x1b,al
  416873:	cs test ebp,esi
  416876:	jae    0x416860
  416878:	(bad)  
  416879:	int3   
  41687a:	iret   
  41687b:	pop    edi
  41687c:	cli    
  41687d:	repnz pop ebp
  41687f:	clc    
  416880:	test   BYTE PTR [esi-0x7a9fc443],bl
  416886:	fimul  DWORD PTR [edi]
  416888:	popa   
  416889:	cdq    
  41688a:	adc    BYTE PTR [eax],dl
  41688c:	(bad)  
  41688d:	sti    
  41688e:	sub    al,0x18
  416890:	adc    eax,0x84e358be
  416895:	push   ecx
  416896:	push   0x1ccf0079
  41689b:	stos   BYTE PTR es:[edi],al
  41689c:	ficom  WORD PTR [ebx+0x2c1c5297]
  4168a2:	fidivr DWORD PTR [ebx+0x16336562]
  4168a8:	pop    edx
  4168a9:	jle    0x416876
  4168ab:	mov    DWORD PTR [ecx-0x686fa718],ebx
  4168b1:	sub    ecx,DWORD PTR [esi]
  4168b3:	out    dx,al
  4168b4:	jne    0x416922
  4168b6:	cmc    
  4168b7:	push   esi
  4168b8:	inc    edx
  4168b9:	retf   0xd2b7
  4168bc:	mov    cl,0xc6
  4168be:	addr16 popa 
  4168c0:	popw   ss
  4168c2:	rcl    DWORD PTR [ebx],0xb4
  4168c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168c6:	rcr    DWORD PTR [edx+eiz*1-0xe],1
  4168ca:	push   cs
  4168cb:	retf   
  4168cc:	pop    edx
  4168cd:	sbb    eax,0x76c230a
  4168d2:	fistp  WORD PTR [esp+eiz*8]
  4168d5:	clc    
  4168d6:	pminsw mm6,QWORD PTR [edi-0x1]
  4168da:	idiv   ebp
  4168dc:	(bad)  
  4168dd:	aad    0x6c
  4168df:	push   ebx
  4168e0:	(bad)  
  4168e1:	adc    edx,ebx
  4168e3:	mov    esp,DWORD PTR [ebp+0xe385]
  4168e9:	clc    
  4168ea:	add    al,0x0
  4168ec:	add    BYTE PTR [eax+0x34835e40],ch
  4168f2:	dec    eax
  4168f3:	mov    ch,0xcd
  4168f5:	ret    0xa00e
  4168f8:	xchg   ebx,ebp
  4168fa:	lds    ebx,FWORD PTR [ebx]
  4168fc:	or     DWORD PTR [ecx+eiz*2+0x5a],edi
  416900:	mov    ds:0x9539188d,al
  416905:	icebp  
  416906:	xor    eax,0x4269ec67
  41690b:	cmp    esi,edi
  41690d:	push   ebx
  41690e:	sbb    eax,0xd845c426
  416913:	fs jmp 0x4da4472f
  416919:	lea    edx,[ebx]
  41691b:	cmp    DWORD PTR [ebp-0x74a32a52],ebp
  416921:	adc    dh,BYTE PTR [ebx]
  416923:	je     0x41695c
  416925:	jo     0x4168b8
  416927:	popa   
  416928:	fwait
  416929:	setge  BYTE PTR [edx+0x134ce5d4]
  416930:	clc    
  416931:	sbb    DWORD PTR [edx+0x49],ebx
  416934:	fnstenv [edi-0x7b]
  416937:	fsubr  QWORD PTR [ebp+edi*4-0x5d25c45a]
  41693e:	sar    BYTE PTR [edx],0x15
  416941:	push   es
  416942:	dec    esp
  416943:	xchg   ebx,eax
  416944:	and    al,0x9c
  416946:	es cld 
  416948:	inc    ebx
  416949:	or     bl,ah
  41694b:	mov    ebx,0x504cfdb2
  416950:	les    esi,FWORD PTR [esi]
  416952:	pop    edi
  416953:	mov    eax,edx
  416955:	out    dx,eax
  416956:	jae    0x416951
  416958:	rol    BYTE PTR [ebp-0x3eb4df96],cl
  41695e:	inc    ecx
  41695f:	jmp    0x416937
  416961:	xor    al,0xc9
  416963:	cmp    eax,0xe80eb1f4
  416968:	bswap  eax
  41696a:	in     al,dx
  41696b:	shl    ecx,cl
  41696d:	popa   
  41696e:	xchg   esi,eax
  41696f:	test   BYTE PTR [ecx+eax*4],dh
  416972:	icebp  
  416973:	scas   al,BYTE PTR es:[edi]
  416974:	mov    eax,0xaedf3315
  416979:	mov    gs,WORD PTR fs:0x32bc3922
  416980:	sbb    ah,BYTE PTR ds:0x4c7a2ab9
  416986:	imul   esp,DWORD PTR [edx],0xa0289b94
  41698c:	mov    ds:0xd92f4501,eax
  416991:	sub    bl,bh
  416993:	adc    DWORD PTR [esi-0x5b],edi
  416996:	dec    eax
  416997:	mov    ebx,0x8f3fd2fe
  41699c:	retf   
  41699d:	dec    esi
  41699e:	or     al,0x79
  4169a0:	pop    ebx
  4169a1:	add    ebx,DWORD PTR [eax-0x59fa02b0]
  4169a7:	js     0x41692a
  4169a9:	adc    eax,0x34bf318b
  4169ae:	dec    edi
  4169af:	sar    bl,0x83
  4169b2:	inc    eax
  4169b3:	mov    al,ds:0x422a6aac
  4169b8:	mov    DWORD PTR [ecx+0x45],ebx
  4169bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169bc:	jne    0x4169c8
  4169be:	hlt    
  4169bf:	sahf   
  4169c0:	cvtss2sd xmm0,DWORD PTR [edx+0x14]
  4169c5:	es add cl,al
  4169c8:	jnp    0x416a20
  4169ca:	xchg   ebx,eax
  4169cb:	clc    
  4169cc:	(bad)  
  4169cd:	fbstp  TBYTE PTR [eax+0x49]
  4169d0:	fisubr WORD PTR [ecx]
  4169d2:	div    BYTE PTR [ebp-0x59bbba26]
  4169d8:	test   eax,0xee3a4044
  4169dd:	dec    edx
  4169de:	sti    
  4169df:	ret    
  4169e0:	test   eax,0xcf81dfb8
  4169e5:	(bad)  
  4169e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169e7:	test   ebx,edx
  4169e9:	push   edi
  4169ea:	ret    
  4169eb:	stos   BYTE PTR es:[edi],al
  4169ec:	push   eax
  4169ed:	pop    ebx
  4169ee:	fs mov eax,0x8138f127
  4169f4:	adc    BYTE PTR [ebp+0x1061133d],al
  4169fa:	fisubr WORD PTR [ebx]
  4169fc:	shl    BYTE PTR [ebp-0x134fcab1],cl
  416a02:	sub    eax,DWORD PTR [ecx+0x72]
  416a05:	cld    
  416a06:	(bad)  
  416a07:	gs and eax,0x6174898c
  416a0d:	repz adc eax,0x460006e3
  416a13:	inc    edx
  416a14:	test   DWORD PTR [edx+0x3226308],ecx
  416a1a:	shl    al,cl
  416a1c:	std    
  416a1d:	aas    
  416a1e:	int3   
  416a1f:	push   edx
  416a20:	fcomp  DWORD PTR [ecx-0xb724f84]
  416a26:	cli    
  416a27:	ficom  WORD PTR [esi+0xc94a1f7]
  416a2d:	sub    edi,esp
  416a2f:	lahf   
  416a30:	jmp    0x1f91:0xb72be531
  416a37:	xchg   esi,eax
  416a38:	xor    BYTE PTR [eax+0x6b586e3e],dh
  416a3e:	push   edi
  416a3f:	mov    esi,0x354acd18
  416a44:	mov    al,0x9d
  416a46:	sub    DWORD PTR [ebx+edx*8+0x39],ebp
  416a4a:	jae    0x416a58
  416a4c:	push   edi
  416a4d:	rcl    DWORD PTR [edx-0x3f],cl
  416a50:	ror    BYTE PTR [ecx+0x15b73a28],cl
  416a56:	mov    dh,0x19
  416a58:	div    BYTE PTR [esi]
  416a5a:	fbld   TBYTE PTR [ebp+0x54]
  416a5d:	fbstp  TBYTE PTR [ebp-0x79]
  416a60:	gs nop
  416a62:	sub    DWORD PTR [ebx],0x7b037813
  416a68:	inc    ebx
  416a69:	adc    BYTE PTR [edx-0x52c5eb37],cl
  416a6f:	lods   al,BYTE PTR ds:[esi]
  416a70:	sbb    dh,BYTE PTR [ebx]
  416a72:	outs   dx,DWORD PTR ds:[esi]
  416a73:	sbb    DWORD PTR [esi-0x2aaaa23d],ebx
  416a79:	lock fisttp WORD PTR [ebx-0x2034db38]
  416a80:	mov    cl,0x69
  416a82:	pop    ss
  416a83:	or     edi,DWORD PTR [ebp-0x3ccee673]
  416a89:	jp     0x416a53
  416a8b:	jmp    0x15ef1a02
  416a90:	sub    al,0xa9
  416a92:	popf   
  416a93:	sub    al,0xd1
  416a95:	popf   
  416a96:	adc    dh,0xb2
  416a99:	sub    DWORD PTR ds:0x22113cd4,eax
  416a9f:	and    BYTE PTR [ebx-0x4ab45644],bl
  416aa5:	aas    
  416aa6:	lea    edi,[esi]
  416aa8:	loope  0x416ab3
  416aaa:	and    al,0xb9
  416aac:	fidiv  DWORD PTR [ebx]
  416aae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416aaf:	xchg   ecx,eax
  416ab0:	or     bh,BYTE PTR [edi+edx*1+0x591ce2ef]
  416ab7:	retf   0x9a15
  416aba:	xchg   ecx,eax
  416abb:	test   eax,0x71110d0c
  416ac0:	xchg   DWORD PTR [esi-0x1c23625f],eax
  416ac6:	mov    cl,0x8b
  416ac8:	xchg   bh,dl
  416aca:	fcmove st,st(1)
  416acc:	push   ebx
  416acd:	cmp    dl,BYTE PTR [ebp+ebx*1-0x7a5422df]
  416ad4:	lea    edx,[esi]
  416ad6:	and    BYTE PTR [esp+eiz*2+0x27],bh
  416ada:	cld    
  416adb:	shl    BYTE PTR [edx+0x172999e4],1
  416ae1:	xchg   DWORD PTR [ebx],eax
  416ae3:	xchg   BYTE PTR [eax-0x3f25b522],ah
  416ae9:	int    0x45
  416aeb:	mov    DWORD PTR [edx+0x44],esp
  416aee:	and    eax,0x7c827ffe
  416af3:	dec    esi
  416af4:	hlt    
  416af5:	(bad)  
  416af6:	mov    edx,fs
  416af8:	and    ch,BYTE PTR [edi+ebp*4]
  416afb:	(bad)  
  416afc:	cmp    al,0xfd
  416afe:	adc    eax,0x8604bc17
  416b03:	les    ecx,FWORD PTR [ebx]
  416b05:	sub    eax,0x163c9a7e
  416b0a:	xchg   esp,eax
  416b0c:	int3   
  416b0d:	dec    ebx
  416b0e:	pop    ecx
  416b0f:	scas   eax,DWORD PTR es:[edi]
  416b10:	xchg   BYTE PTR [esi+0x1598c880],dh
  416b16:	out    0xda,al
  416b18:	and    edi,DWORD PTR [edx+0x1c791f53]
  416b1e:	bnd jp 0x416ad7
  416b21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b22:	sub    esi,DWORD PTR [eax+0x4a906503]
  416b28:	push   ds
  416b29:	add    edx,DWORD PTR [eax+0x1d]
  416b2c:	js     0x416ac6
  416b2e:	sub    eax,0x16750866
  416b33:	cld    
  416b34:	mov    eax,0x56df5bce
  416b39:	mov    cl,0x6a
  416b3b:	dec    ebx
  416b3c:	out    dx,eax
  416b3d:	sbb    al,0xf7
  416b3f:	dec    ebp
  416b40:	fs ds mov cl,0xb9
  416b44:	push   cs
  416b45:	mov    ch,0x1e
  416b47:	sub    al,0x1a
  416b49:	loop   0x416b48
  416b4b:	data16 sbb al,0x3e
  416b4e:	push   ss
  416b4f:	mov    fs,WORD PTR [esi]
  416b51:	mov    ds:0x853643b1,al
  416b56:	loopne 0x416b49
  416b58:	sub    eax,0x385d34ab
  416b5d:	jmp    0x445eca25
  416b62:	jns    0x416b11
  416b64:	arpl   WORD PTR [edi+0x455d3672],sp
  416b6a:	iret   
  416b6b:	jl     0x416b6c
  416b6d:	loope  0x416ba8
  416b6f:	or     edi,DWORD PTR [edx+0x8]
  416b72:	inc    ebp
  416b73:	out    dx,al
  416b74:	std    
  416b75:	xlat   BYTE PTR ds:[ebx]
  416b76:	imul   esp,eax,0xffffffb0
  416b79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b7a:	mov    ah,0x6e
  416b7c:	or     eax,0x26875e7f
  416b81:	(bad)  
  416b83:	dec    ecx
  416b84:	shl    BYTE PTR [edx],cl
  416b86:	sub    al,0xe8
  416b88:	repz mov bl,0x2c
  416b8b:	xchg   bl,al
  416b8d:	push   eax
  416b8e:	mov    edx,DWORD PTR [edx+0x7bd3e658]
  416b94:	jmp    ebx
  416b96:	lods   al,BYTE PTR ds:[esi]
  416b97:	push   0xffffffd0
  416b99:	jle    0x416b56
  416b9b:	cs add ebp,esp
  416b9e:	xor    al,0xbd
  416ba0:	shl    BYTE PTR [eax],cl
  416ba2:	sbb    BYTE PTR [esi-0x5c52971b],0xcb
  416ba9:	das    
  416baa:	pop    edx
  416bab:	mov    dh,0x2e
  416bad:	adc    al,0x15
  416baf:	push   es
  416bb0:	lea    edx,[ebx]
  416bb2:	(bad)  
  416bb3:	loop   0x416be3
  416bb5:	adc    BYTE PTR [eax-0x215304dc],bh
  416bbb:	lods   eax,DWORD PTR ds:[esi]
  416bbc:	ins    DWORD PTR es:[edi],dx
  416bbd:	push   es
  416bbe:	pop    ebp
  416bbf:	stos   DWORD PTR es:[edi],eax
  416bc0:	pushf  
  416bc1:	lock xor BYTE PTR [edx+0x7d],0x2b
  416bc6:	pushf  
  416bc7:	xchg   ebx,eax
  416bc8:	das    
  416bc9:	mov    ds:0xe9e52712,al
  416bce:	xchg   BYTE PTR ds:0x7043946c,bh
  416bd4:	mov    ah,0xad
  416bd6:	test   ebx,esi
  416bd8:	xor    al,0xe1
  416bda:	and    eax,0x61bd6296
  416bdf:	call   0xb54696d0
  416be4:	add    DWORD PTR [edi+0x13996978],0xfffffffa
  416beb:	(bad)  
  416bec:	aam    0x3f
  416bee:	push   sp
  416bf0:	push   edi
  416bf1:	pop    ss
  416bf2:	push   ecx
  416bf3:	mov    ah,0x30
  416bf5:	mov    ah,0xd0
  416bf7:	lock ins BYTE PTR es:[edi],dx
  416bf9:	push   cs
  416bfa:	push   esp
  416bfb:	and    BYTE PTR [esi],dh
  416bfd:	jle    0x416bd1
  416bff:	adc    eax,0xcfb4296
  416c04:	xor    ah,BYTE PTR [eiz*2-0x308652e3]
  416c0b:	je     0x416c83
  416c0d:	pop    edi
  416c0e:	sbb    eax,0xeaaab775
  416c13:	ret    0x96bd
  416c16:	sbb    eax,0xd85f9682
  416c1b:	or     DWORD PTR ds:0x5c189880,0x5921a76d
  416c25:	adc    ecx,ebp
  416c27:	icebp  
  416c28:	iret   
  416c29:	sbb    BYTE PTR [ecx+0x16bd5e32],dl
  416c2f:	ja     0x416c83
  416c31:	jecxz  0x416bca
  416c33:	mov    al,0x84
  416c35:	call   0x6c2d0b80
  416c3a:	pop    edi
  416c3b:	inc    edx
  416c3c:	imul   ebx,DWORD PTR [eax],0xa054f6f2
  416c42:	push   edi
  416c43:	inc    eax
  416c44:	push   eax
  416c45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c46:	push   esp
  416c47:	or     eax,esi
  416c49:	repz cmp eax,0x15452d99
  416c4f:	lods   al,BYTE PTR ds:[esi]
  416c50:	jno    0x416cba
  416c52:	cmp    esp,eax
  416c54:	adc    BYTE PTR [edx-0x54],bh
  416c57:	or     DWORD PTR [edi-0xbb1dd75],0xa8c696f9
  416c61:	sbb    ecx,edx
  416c63:	push   esp
  416c64:	ret    
  416c65:	mov    dl,0xc6
  416c67:	jmp    0x7a19296
  416c6c:	inc    ecx
  416c6d:	push   ss
  416c6e:	(bad)  
  416c6f:	adc    BYTE PTR [ebx],ch
  416c71:	sub    DWORD PTR [ecx+0x1616ebf9],esp
  416c77:	jmp    0x416c1c
  416c79:	imul   esi,DWORD PTR [ecx+0x3],0x7c
  416c7d:	push   es
  416c7e:	aas    
  416c7f:	push   ss
  416c80:	cdq    
  416c81:	xor    DWORD PTR [eax+0x56641a1c],ecx
  416c87:	sub    al,0xe9
  416c89:	jmp    0x416c82
  416c8b:	nop
  416c8c:	es add eax,0xe83bec6a
  416c92:	jno    0x416cd1
  416c94:	pop    ds
  416c95:	iret   
  416c96:	repz in eax,dx
  416c98:	scas   al,BYTE PTR es:[edi]
  416c99:	inc    ecx
  416c9a:	(bad)  
  416c9b:	lock xchg BYTE PTR [ebx-0x11d77715],ah
  416ca2:	in     al,dx
  416ca3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ca4:	mov    BYTE PTR [ebx+0x75],dl
  416ca7:	mov    ebp,0xb92db2f7
  416cac:	aaa    
  416cad:	mov    esp,0x8a35f70c
  416cb2:	in     eax,dx
  416cb3:	(bad)  
  416cb4:	jl     0x416c6f
  416cb6:	test   BYTE PTR [eax],ch
  416cb8:	dec    esp
  416cb9:	push   ebx
  416cba:	dec    esi
  416cbb:	scas   eax,DWORD PTR es:[edi]
  416cbc:	jb     0x416c48
  416cbe:	out    0xb5,al
  416cc0:	rol    al,0xc1
  416cc3:	gs cli 
  416cc5:	aaa    
  416cc6:	scas   al,BYTE PTR es:[edi]
  416cc7:	push   esp
  416cc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cc9:	jmp    0x416c7f
  416ccb:	outs   dx,DWORD PTR ds:[esi]
  416ccc:	xchg   esp,eax
  416ccd:	inc    ebp
  416cce:	xor    eax,0xbde652
  416cd3:	enter  0x8f64,0xce
  416cd7:	add    DWORD PTR [edi-0x5811975],esp
  416cdd:	hlt    
  416cde:	popf   
  416cdf:	mov    ds:0xfe85673d,eax
  416ce4:	(bad)  
  416ce5:	arpl   WORD PTR [edx+0x46],ax
  416ce8:	into   
  416ce9:	test   BYTE PTR ds:0x62cfabcc,dh
  416cef:	rol    BYTE PTR [edi],cl
  416cf1:	std    
  416cf2:	add    bl,BYTE PTR [ebx]
  416cf4:	pop    ebp
  416cf5:	jns    0x416cd6
  416cf7:	into   
  416cf8:	mov    ebx,0x768ac790
  416cfd:	loopne 0x416d1b
  416cff:	sbb    esp,0xffffff8b
  416d02:	jge    0x416ca1
  416d04:	std    
  416d05:	repz imul ebp,DWORD PTR [edx],0x5f
  416d09:	and    BYTE PTR [edx-0x55245e0],ch
  416d0f:	sbb    esi,edi
  416d11:	rcl    DWORD PTR [eax-0x56],1
  416d14:	sub    DWORD PTR [ebx-0x56],ebx
  416d17:	sub    edi,DWORD PTR [edx+ebp*2]
  416d1a:	stos   DWORD PTR es:[edi],eax
  416d1b:	mov    al,ds:0x4c5b5221
  416d20:	lods   eax,DWORD PTR ds:[esi]
  416d21:	inc    ebp
  416d22:	mov    ds:0xfb22fad9,al
  416d27:	xchg   edi,eax
  416d28:	mov    DWORD PTR [eax+ebp*4],ebx
  416d2b:	cs cs mov edi,0x8c7f64ff
  416d32:	ss cld 
  416d34:	mov    esi,0xb97c85c
  416d39:	xchg   esi,eax
  416d3a:	mov    ch,BYTE PTR [edi-0x366f5bf0]
  416d40:	mov    al,ds:0xb39783c3
  416d45:	mov    BYTE PTR [ecx+0x56],bh
  416d48:	xchg   ebp,eax
  416d49:	out    0x3c,eax
  416d4b:	loop   0x416d64
  416d4d:	fs pop eax
  416d4f:	sahf   
  416d50:	(bad)  
  416d51:	cld    
  416d52:	dec    edi
  416d53:	jg     0x416d3e
  416d55:	ins    DWORD PTR es:[edi],dx
  416d56:	xchg   dx,ax
  416d58:	popa   
  416d59:	repz inc esp
  416d5b:	mov    ch,0xa3
  416d5d:	ret    0xfcd8
  416d60:	cmc    
  416d61:	sbb    al,0xc9
  416d63:	cmp    ebp,esp
  416d65:	das    
  416d66:	stos   BYTE PTR es:[edi],al
  416d67:	xor    eax,0xd4569fea
  416d6c:	pushf  
  416d6d:	loop   0x416d78
  416d6f:	adc    dl,bl
  416d71:	icebp  
  416d72:	into   
  416d73:	jns    0x416da2
  416d75:	rol    ch,1
  416d77:	pushf  
  416d78:	cdq    
  416d79:	pop    ds
  416d7a:	sub    esi,DWORD PTR [ecx]
  416d7c:	fs cmc 
  416d7e:	shr    DWORD PTR [ebx-0x47],1
  416d81:	add    al,0x2b
  416d83:	adc    DWORD PTR [edx+0x1e],ebx
  416d86:	jmp    0x9982:0x2e9496af
  416d8d:	jg     0x416d2d
  416d8f:	scas   eax,DWORD PTR es:[edi]
  416d90:	xchg   edx,eax
  416d91:	mov    bl,BYTE PTR [esi-0x2]
  416d94:	mov    eax,0x699d553
  416d99:	mov    dl,0x58
  416d9b:	push   0x34c96af6
  416da0:	sub    eax,0x7f00c586
  416da5:	mov    WORD PTR [edi],ss
  416da7:	lods   eax,DWORD PTR ds:[esi]
  416da8:	(bad)  
  416da9:	nop
  416daa:	dec    ebp
  416dab:	aaa    
  416dac:	ds pushf 
  416dae:	cld    
  416daf:	sbb    eax,0xff74ad32
  416db4:	cmp    al,0x1e
  416db6:	cld    
  416db7:	enter  0x1751,0x50
  416dbb:	fadd   QWORD PTR [esi+0x3ade110b]
  416dc1:	jmp    0x9cd7:0x6ceaf00e
  416dc8:	xchg   esi,eax
  416dc9:	sar    BYTE PTR [edx+0x2955b50a],1
  416dcf:	dec    ebp
  416dd0:	lea    edx,[esi+0x5a]
  416dd3:	mov    esp,0x28f9de65
  416dd8:	push   edx
  416dd9:	sub    dh,BYTE PTR [ecx-0x52cabd35]
  416ddf:	add    BYTE PTR [eax],bl
  416de1:	mov    eax,ds:0xe87fdeb4
  416de6:	xchg   ecx,eax
  416de7:	retf   0xfb3a
  416dea:	jnp    0x416de4
  416dec:	rcr    DWORD PTR [edx+0x1e3098d0],cl
  416df2:	xchg   edx,eax
  416df3:	push   eax
  416df4:	aas    
  416df5:	jge    0x416ddf
  416df7:	add    BYTE PTR [eax],al
  416df9:	clc    
  416dfa:	add    al,0x0
  416dfc:	add    BYTE PTR [ebx-0x5a],bh
  416dff:	jo     0x416db9
  416e01:	das    
  416e02:	hlt    
  416e03:	pop    es
  416e04:	imul   esp,DWORD PTR [edi-0x22983095],0xc850e95d
  416e0e:	leave  
  416e0f:	push   esi
  416e10:	pop    ss
  416e11:	xor    BYTE PTR [ebx-0x18],bl
  416e14:	mov    dh,0x7d
  416e16:	inc    ecx
  416e17:	out    dx,al
  416e18:	imul   ecx,ecx,0xffffffc5
  416e1b:	outs   dx,BYTE PTR ds:[esi]
  416e1c:	mov    BYTE PTR [ebp+0x1c],al
  416e1f:	out    0x8f,al
  416e21:	pop    ebp
  416e22:	jmp    0x4288:0x8b93940e
  416e29:	add    BYTE PTR [esi],bh
  416e2b:	in     al,0x59
  416e2d:	pop    esi
  416e2e:	call   0xbbed34c4
  416e33:	fisttp DWORD PTR [ecx]
  416e35:	aas    
  416e36:	and    edi,DWORD PTR [ebx+ebx*4+0x4d]
  416e3a:	jge    0x416eab
  416e3c:	jge    0x416e18
  416e3e:	mov    ch,0x9f
  416e40:	enter  0x4aa1,0x3
  416e44:	mov    WORD PTR [ecx-0x5d765d2e],cs
  416e4a:	hlt    
  416e4b:	call   0xc3c1:0x9c7c5bee
  416e52:	dec    esp
  416e53:	imul   esp,DWORD PTR [edx],0x43111e75
  416e59:	cwde   
  416e5a:	imul   esp,ecx,0xa2fb32ad
  416e60:	lar    edi,dx
  416e63:	cmp    edx,DWORD PTR [edx-0x9]
  416e66:	sub    al,0xb0
  416e68:	popf   
  416e69:	or     ecx,DWORD PTR [edi]
  416e6b:	push   esp
  416e6c:	es ins DWORD PTR es:[edi],dx
  416e6e:	sbb    dh,al
  416e70:	push   edi
  416e71:	ror    BYTE PTR [ecx-0x1391a3],1
  416e77:	cli    
  416e78:	(bad)  
  416e79:	arpl   cx,ax
  416e7b:	mov    cl,0x1e
  416e7d:	test   ebp,edx
  416e7f:	mov    edi,0x7bf16921
  416e84:	sub    ah,dh
  416e86:	dec    esi
  416e87:	adc    BYTE PTR [ebp+eax*1-0x196382ef],0xac
  416e8f:	out    dx,eax
  416e90:	retf   
  416e91:	xlat   BYTE PTR ds:[ebx]
  416e92:	ja     0x416ece
  416e94:	retf   0xc88e
  416e97:	div    ch
  416e99:	(bad)  
  416e9a:	push   esp
  416e9b:	(bad)  
  416e9c:	push   esp
  416e9d:	mov    dl,0x90
  416e9f:	ja     0x416efb
  416ea1:	dec    ebp
  416ea2:	mov    cl,0xcb
  416ea4:	hlt    
  416ea5:	push   0x6f
  416ea7:	dec    ebx
  416ea8:	retf   0x241
  416eab:	test   al,0x30
  416ead:	xchg   esi,eax
  416eae:	out    0xf2,eax
  416eb0:	ret    
  416eb1:	jno    0x416ef8
  416eb3:	add    al,0xfa
  416eb5:	and    bh,ch
  416eb7:	ret    
  416eb8:	jno    0x416e75
  416eba:	neg    DWORD PTR [esi+0x2b]
  416ebd:	popf   
  416ebe:	and    ah,BYTE PTR [ecx-0x3017a053]
  416ec4:	pusha  
  416ec5:	loop   0x416e72
  416ec7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ec8:	aas    
  416ec9:	out    0xd8,al
  416ecb:	push   esp
  416ecc:	xchg   edx,ebp
  416ece:	mov    dh,0x19
  416ed0:	daa    
  416ed1:	sahf   
  416ed2:	push   esi
  416ed3:	stos   DWORD PTR es:[edi],eax
  416ed4:	mov    dh,bl
  416ed6:	imul   eax,DWORD PTR [edi],0x778d2fec
  416edc:	xchg   ecx,eax
  416edd:	add    edi,DWORD PTR [eax+0x4c78c4dd]
  416ee3:	fadd   QWORD PTR [ebp-0x21]
  416ee6:	(bad)  
  416ee7:	clc    
  416ee8:	cdq    
  416ee9:	mov    al,ds:0x6bf3be68
  416eee:	test   eax,0xa4443f2d
  416ef3:	imul   edi,DWORD PTR [edi+0x5f],0xffffffc2
  416ef7:	sbb    edx,ebx
  416ef9:	aas    
  416efa:	cmp    dh,bh
  416efc:	bound  esp,QWORD PTR [eax-0x1e]
  416eff:	ins    DWORD PTR es:[edi],dx
  416f00:	inc    ecx
  416f01:	mov    ah,0xa3
  416f03:	sbb    eax,0x55af806a
  416f08:	sbb    al,0xee
  416f0a:	mov    WORD PTR [ecx+esi*8],?
  416f0d:	sbb    BYTE PTR [ebx+0x38ce0869],dl
  416f13:	repz arpl ax,ax
  416f16:	adc    esi,ecx
  416f18:	jmp    0x951c:0x3e0776b2
  416f1f:	in     eax,dx
  416f20:	mov    eax,ds:0x1c7b13bc
  416f25:	fwait
  416f26:	xchg   edx,eax
  416f27:	pop    ebp
  416f28:	jl     0x416eac
  416f2a:	cmp    dh,BYTE PTR ds:[eax]
  416f2d:	dec    edx
  416f2e:	pop    edx
  416f2f:	retf   0xf6fb
  416f32:	out    0x8c,eax
  416f34:	xlat   BYTE PTR es:[ebx]
  416f36:	add    al,0x59
  416f38:	jns    0x416f1f
  416f3a:	inc    esi
  416f3b:	mov    edi,0x7466f944
  416f40:	xor    al,BYTE PTR [eax]
  416f42:	mov    bh,0xa3
  416f44:	sbb    al,0x42
  416f46:	mov    BYTE PTR [edx+eiz*4-0x14715199],cl
  416f4d:	pop    ebp
  416f4e:	bnd jb 0x416fc2
  416f51:	int3   
  416f52:	retf   0xff17
  416f55:	jno    0x416fbd
  416f57:	retf   
  416f58:	inc    DWORD PTR [edi]
  416f5a:	ins    DWORD PTR es:[edi],dx
  416f5b:	cdq    
  416f5c:	ins    DWORD PTR es:[edi],dx
  416f5d:	ins    DWORD PTR es:[edi],dx
  416f5e:	inc    esp
  416f5f:	mov    al,0x12
  416f61:	mov    esi,0xa3f6c9d0
  416f66:	rcr    BYTE PTR [esi],1
  416f68:	sub    eax,0x7e14ce41
  416f6d:	loopne 0x416fcc
  416f6f:	cmp    al,0x6d
  416f71:	loope  0x416f6c
  416f73:	int3   
  416f74:	pop    edx
  416f75:	mov    WORD PTR [esi-0x1e7d9843],cs
  416f7b:	pop    esp
  416f7c:	adc    DWORD PTR [ecx+0x4f9b3011],ebx
  416f82:	cs inc eax
  416f84:	addr16 push cs
  416f86:	mov    edi,0x3d6d221d
  416f8b:	xchg   ebx,eax
  416f8c:	adc    ah,BYTE PTR [eax+0x780f1e4b]
  416f92:	adc    eax,0x56aab29f
  416f97:	mov    al,0x80
  416f99:	fs and ah,BYTE PTR ds:[esi-0x37512165]
  416fa1:	sbb    ah,ah
  416fa3:	dec    edi
  416fa4:	sti    
  416fa5:	mov    esi,0x175cc30c
  416faa:	adc    DWORD PTR [ebx],eax
  416fac:	push   ecx
  416fad:	fsubr  st(6),st
  416faf:	ficomp WORD PTR [ebp-0x6a5b0308]
  416fb5:	addr16 push es
  416fb7:	mov    eax,0x56849379
  416fbc:	(bad)  
  416fbd:	ds push esi
  416fbf:	mov    eax,0x67813d18
  416fc4:	dec    ebx
  416fc5:	int3   
  416fc6:	rcr    BYTE PTR [esi-0x6d],1
  416fc9:	(bad)  
  416fca:	mov    ecx,0xc56c2cd
  416fcf:	mov    edx,0xa779970b
  416fd4:	cmp    ebx,esi
  416fd6:	bound  edi,QWORD PTR [ecx]
  416fd8:	cwde   
  416fd9:	retf   
  416fda:	jle    0x416f65
  416fdc:	lods   ax,WORD PTR ds:[esi]
  416fde:	inc    esi
  416fdf:	or     al,BYTE PTR [ecx-0x7bfa942e]
  416fe5:	sub    eax,0xcb14ae22
  416fea:	or     dl,BYTE PTR [ebx+0x2c06a5f3]
  416ff0:	xor    dl,ah
  416ff2:	pop    ecx
  416ff3:	mov    ?,esi
  416ff5:	ins    BYTE PTR es:[edi],dx
  416ff6:	int    0xc0
  416ff8:	sahf   
  416ff9:	es dec ebx
  416ffb:	add    bh,BYTE PTR [ebx+0x6d]
  416ffe:	(bad)  ds:0x722ef20b
  417004:	dec    ecx
  417005:	jo     0x41704a
  417007:	cmp    BYTE PTR ds:0xc1dd6f3d,0xca
  41700e:	jb     0x416fd3
  417010:	in     eax,dx
  417011:	ins    BYTE PTR es:[edi],dx
  417012:	fwait
  417013:	pop    es
  417014:	inc    eax
  417015:	pop    ebx
  417016:	mov    eax,DWORD PTR [edi-0x20]
  417019:	pop    esi
  41701a:	aad    0x74
  41701c:	dec    edi
  41701d:	xchg   edx,eax
  41701e:	(bad)  [eax+0x35]
  417021:	dec    ecx
  417022:	data16 xor ch,al
  417025:	mov    ds:0x7cc0b9f9,eax
  41702a:	cmp    eax,0x1253e48a
  41702f:	push   0xb
  417031:	inc    ebp
  417032:	and    eax,0xeb356d16
  417037:	fmul   DWORD PTR [edi]
  417039:	sbb    al,0xe2
  41703b:	mov    ch,0xf1
  41703d:	test   al,0xe4
  41703f:	stos   BYTE PTR es:[edi],al
  417040:	(bad)  
  417041:	jns    0x416ff9
  417043:	xor    dh,dh
  417045:	mov    ah,0x65
  417047:	pop    esp
  417048:	mov    esp,esi
  41704a:	and    al,BYTE PTR [esi-0x10]
  41704d:	push   eax
  41704e:	ret    
  41704f:	pop    eax
  417050:	scas   al,BYTE PTR es:[edi]
  417051:	call   0x418c:0xdda6feec
  417058:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417059:	mov    al,ds:0x52a782d
  41705e:	cmc    
  41705f:	aam    0x6f
  417061:	arpl   bx,cx
  417063:	pop    eax
  417064:	jle    0x4170ac
  417066:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417068:	mov    ?,WORD PTR [ebx]
  41706a:	ins    BYTE PTR es:[edi],dx
  41706b:	jmp    0x8424:0x14ac928a
  417072:	pop    esi
  417073:	sbb    DWORD PTR [edx-0x71],ebp
  417076:	inc    ebp
  417077:	add    dl,ch
  417079:	(bad)  
  41707b:	int3   
  41707c:	and    al,0x83
  41707e:	paddw  mm7,QWORD PTR [edi+0x7c]
  417082:	scas   al,BYTE PTR es:[edi]
  417083:	jl     0x417012
  417085:	mov    eax,ds:0xf1cb4d01
  41708a:	push   ebx
  41708b:	pop    es
  41708c:	iret   
  41708d:	gs mov esp,0xe94f6114
  417093:	dec    eax
  417094:	imul   BYTE PTR [esi]
  417096:	(bad)  
  417097:	(bad)  
  417099:	sbb    ch,BYTE PTR [edi-0x6c]
  41709c:	repz push cs
  41709e:	ret    0x8739
  4170a1:	test   al,0x34
  4170a3:	js     0x417039
  4170a5:	fimul  WORD PTR [edx+edi*4+0x26]
  4170a9:	retf   0x70b0
  4170ac:	xor    DWORD PTR [edi+0xd],ebx
  4170af:	aaa    
  4170b0:	sbb    al,BYTE PTR [ecx+0x7a]
  4170b3:	and    eax,0xd6974b04
  4170b8:	jno    0x417127
  4170ba:	add    esi,ecx
  4170bc:	pop    ecx
  4170bd:	pop    ebx
  4170be:	push   edi
  4170bf:	enter  0xeab0,0xcd
  4170c3:	ja     0x4170aa
  4170c5:	mov    al,ds:0xdfaf58dd
  4170ca:	adc    bl,BYTE PTR [ebx-0x6a45b943]
  4170d0:	sbb    al,0x74
  4170d2:	sub    DWORD PTR [ebx],ecx
  4170d4:	or     dh,dh
  4170d6:	std    
  4170d7:	jmp    0x417141
  4170d9:	popa   
  4170da:	mov    eax,0x92209146
  4170df:	xchg   ebx,eax
  4170e0:	stos   BYTE PTR es:[edi],al
  4170e1:	jns    0x4170ec
  4170e3:	adc    al,al
  4170e5:	scas   al,BYTE PTR es:[edi]
  4170e6:	and    BYTE PTR [edx],bl
  4170e8:	jb     0x4170e2
  4170ea:	sbb    BYTE PTR [ecx+0x204a2cb6],ah
  4170f0:	add    al,0xcf
  4170f2:	std    
  4170f3:	popf   
  4170f4:	pop    ecx
  4170f5:	xor    ebx,DWORD PTR [ebp-0x6417c999]
  4170fb:	aas    
  4170fc:	sti    
  4170fd:	xchg   esi,eax
  4170fe:	arpl   WORD PTR [edx-0x5c039226],cx
  417104:	push   ebp
  417105:	inc    edx
  417106:	sbb    ebp,DWORD PTR [esi]
  417108:	sub    al,0x7b
  41710a:	adc    bh,BYTE PTR [edi+0x61c9864c]
  417110:	pop    ecx
  417111:	or     dh,BYTE PTR [eax+0x4c4d77eb]
  417117:	and    dl,bh
  417119:	dec    eax
  41711a:	sbb    al,0xd6
  41711c:	aas    
  41711d:	add    al,0xd4
  41711f:	push   ebp
  417120:	fwait
  417121:	sbb    eax,0x54cb6e67
  417126:	ret    
  417127:	xchg   BYTE PTR ds:0xf3ef6dad,cl
  41712d:	dec    edi
  41712e:	scas   eax,DWORD PTR es:[edi]
  41712f:	mov    eax,ds:0x907805aa
  417134:	mov    esp,0x918ff652
  417139:	jnp    0x417126
  41713b:	jns    0x4171aa
  41713d:	pop    edi
  41713e:	out    0x36,eax
  417140:	pop    eax
  417141:	mov    es,WORD PTR [edi+0x1c]
  417144:	mov    esi,0xcc25660c
  417149:	cli    
  41714a:	outs   dx,DWORD PTR ds:[esi]
  41714b:	pushf  
  41714c:	xchg   ebx,eax
  41714d:	adc    BYTE PTR [ebx],dh
  41714f:	add    dh,BYTE PTR [edi]
  417151:	out    dx,al
  417152:	stos   DWORD PTR es:[edi],eax
  417153:	jmp    0x2641:0x835963c
  41715a:	aas    
  41715b:	or     BYTE PTR [edi+ecx*2-0x3],0x92
  417160:	dec    ecx
  417161:	sbb    esi,ecx
  417163:	test   eax,0xb40909ad
  417168:	jmp    0xbea0:0x6154c2b6
  41716f:	mov    al,0xdf
  417171:	leave  
  417172:	sar    BYTE PTR [ebp+0x34],0x30
  417176:	dec    ebx
  417177:	pop    ecx
  417178:	and    DWORD PTR [edx+0x1f],esi
  41717b:	jle    0x41711a
  41717d:	jb     0x41718d
  41717f:	mov    ds:0x3335954e,eax
  417184:	gs scas eax,DWORD PTR es:[edi]
  417186:	sub    BYTE PTR [edi-0x69],dl
  417189:	push   ss
  41718a:	adc    BYTE PTR [ebx-0x40cdb10b],0x49
  417191:	lods   eax,DWORD PTR ds:[esi]
  417192:	xchg   ebp,eax
  417193:	mov    eax,ds:0x45e20345
  417198:	test   eax,0xc8c8eac4
  41719d:	mov    cl,0xac
  41719f:	(bad)  
  4171a1:	jb     0x41719a
  4171a3:	in     al,0x50
  4171a5:	scas   eax,DWORD PTR es:[edi]
  4171a6:	fimul  DWORD PTR ds:0xcc7725d3
  4171ac:	dec    edx
  4171ad:	dec    ebx
  4171ae:	loopne 0x417184
  4171b0:	jae    0x4171f4
  4171b2:	retf   
  4171b3:	adc    eax,0x39dc2a3c
  4171b8:	and    cl,bh
  4171ba:	(bad)  
  4171bb:	fcomp  DWORD PTR [esi-0x77747998]
  4171c1:	repz les eax,FWORD PTR [ebx+esi*4]
  4171c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171c6:	pop    ebp
  4171c7:	repz jge 0x4171ae
  4171ca:	add    ecx,esp
  4171cc:	pop    esp
  4171cd:	loope  0x41716d
  4171cf:	inc    ebp
  4171d0:	sub    DWORD PTR [ecx],esi
  4171d2:	push   esi
  4171d3:	std    
  4171d4:	loopne 0x41720c
  4171d6:	fsub   QWORD PTR [edx]
  4171d8:	push   es
  4171d9:	adc    edi,edi
  4171db:	popf   
  4171dc:	jg     0x41723d
  4171de:	test   eax,0xc954b85a
  4171e3:	jns    0x417172
  4171e5:	sbb    BYTE PTR [eax+0x3622bcd9],ah
  4171eb:	repz sub ecx,DWORD PTR [ecx]
  4171ee:	call   0x191fd387
  4171f3:	(bad)  [edi-0x77]
  4171f6:	fstp   TBYTE PTR [esi]
  4171f8:	xchg   ecx,eax
  4171f9:	ret    0xf3e7
  4171fc:	mov    cl,0xcc
  4171fe:	mov    ecx,0x8e30de35
  417203:	mov    bl,0xbb
  417205:	xchg   DWORD PTR [eax+0x3ebf7809],edi
  41720b:	mov    ecx,0x629ca36d
  417210:	ins    BYTE PTR es:[edi],dx
  417211:	or     bh,BYTE PTR [ebp-0x4af0e90a]
  417217:	adc    ebp,DWORD PTR [ebx+ebx*1-0x3a31a488]
  41721e:	lods   eax,DWORD PTR ds:[esi]
  41721f:	cld    
  417220:	dec    ebx
  417221:	push   0xffffffa0
  417223:	jle    0x4171b1
  417225:	in     al,dx
  417226:	int3   
  417227:	jno    0x4172a8
  417229:	push   eax
  41722a:	push   eax
  41722b:	mov    ebx,0x95443991
  417230:	lock std 
  417232:	loopne 0x4171ce
  417234:	lahf   
  417235:	not    BYTE PTR [ebx-0x6c90988]
  41723b:	pop    eax
  41723c:	lea    ecx,[ebp-0x16]
  41723f:	shl    DWORD PTR [edx+edi*8],cl
  417242:	(bad)  
  417243:	mov    al,ds:0x85a4b25b
  417248:	lock adc DWORD PTR [edi+0x1d],0x839d7a44
  417250:	adc    eax,0x625f2644
  417255:	fisub  WORD PTR [ecx+0x17c7e97d]
  41725b:	jle    0x417272
  41725d:	xchg   BYTE PTR [eax+0x68],ah
  417260:	xchg   ebp,eax
  417261:	add    BYTE PTR [ebx+edx*8-0x526baf31],dh
  417268:	jns    0x41729b
  41726a:	fs in  eax,dx
  41726c:	lea    ebx,[ebx+0x417985a7]
  417272:	jno    0x417249
  417274:	mov    ebp,DWORD PTR [ebx-0x5ddc6034]
  41727a:	es dec ebx
  41727c:	(bad)  
  41727d:	mov    ds:0x729ea027,eax
  417282:	sub    al,0x73
  417284:	cs in  al,dx
  417286:	gs inc ecx
  417288:	popf   
  417289:	push   es
  41728a:	out    dx,eax
  41728b:	adc    cl,0xc9
  41728e:	dec    ebx
  41728f:	mov    ch,0x8e
  417291:	loope  0x41730c
  417293:	es adc edi,edx
  417296:	xchg   ebp,eax
  417297:	push   esp
  417298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417299:	lock sbb eax,0x9a9fbd54
  41729f:	loop   0x41730d
  4172a1:	les    edx,FWORD PTR [esi-0xc2479ea]
  4172a7:	loopne 0x4172f7
  4172a9:	sub    BYTE PTR [edi],cl
  4172ab:	test   al,0x3c
  4172ad:	inc    ebx
  4172ae:	inc    edi
  4172af:	mov    eax,ds:0x4793cd51
  4172b4:	fstp   TBYTE PTR [ecx]
  4172b6:	in     eax,0xfa
  4172b8:	push   edx
  4172b9:	fdiv   QWORD PTR [eax+0x2af8a70]
  4172bf:	adc    cl,BYTE PTR [edx]
  4172c1:	rol    BYTE PTR [ebp-0x17],0xf4
  4172c5:	test   al,0xe7
  4172c7:	jmp    0x32b91f36
  4172cc:	pusha  
  4172cd:	mov    cl,0xd
  4172cf:	out    0xfc,eax
  4172d1:	scas   al,BYTE PTR es:[edi]
  4172d2:	call   0xafa00404
  4172d7:	shl    BYTE PTR [ebx+0x45],0xa1
  4172db:	pop    ebx
  4172dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172dd:	xchg   ecx,eax
  4172de:	mov    ebp,esi
  4172e0:	pop    ecx
  4172e1:	out    dx,eax
  4172e2:	les    ebx,FWORD PTR [ecx-0x7]
  4172e5:	xchg   ebx,eax
  4172e7:	nop
  4172e8:	dec    eax
  4172e9:	dec    ecx
  4172ea:	inc    edx
  4172eb:	mov    esi,esp
  4172ed:	cmp    ch,ch
  4172ef:	or     DWORD PTR [ebp+0x7ed5cd6f],ebx
  4172f5:	push   ebp
  4172f6:	sub    al,0x5f
  4172f8:	test   DWORD PTR [edi-0x9],edi
  4172fb:	(bad)  
  4172fd:	enter  0x5167,0xc
  417301:	sub    DWORD PTR [eax],eax
  417303:	pcmpgtd mm6,QWORD PTR [ebp-0x13]
  417307:	add    BYTE PTR [eax],al
  417309:	clc    
  41730a:	add    al,0x0
  41730c:	add    bh,dl
  41730e:	dec    eax
  41730f:	push   esp
  417310:	aam    0x7c
  417312:	push   ss
  417313:	inc    ebp
  417314:	inc    ecx
  417315:	push   cs
  417316:	jne    0x417315
  417318:	and    al,0x7
  41731a:	gs pop edi
  41731c:	lds    esp,FWORD PTR [ecx+0x24f836a3]
  417322:	add    BYTE PTR [eax-0x35],bl
  417325:	xchg   edi,eax
  417326:	aam    0x60
  417328:	mov    ss,esi
  41732a:	jno    0x4172c3
  41732c:	into   
  41732d:	cmp    edx,edi
  41732f:	xor    ecx,DWORD PTR [edi+0x5c]
  417332:	(bad)  
  417333:	(bad)  
  417334:	daa    
  417335:	fsub   QWORD PTR [esi-0x1f775d18]
  41733b:	ds adc eax,0xeac57295
  417341:	or     dl,BYTE PTR [edi+0x48fccd74]
  417347:	add    edx,DWORD PTR [esi]
  417349:	pop    ecx
  41734a:	jle    0x417327
  41734c:	int3   
  41734d:	xor    ebp,DWORD PTR [edi+0x0]
  417350:	sub    DWORD PTR [edx-0x56721f9d],ebx
  417356:	idiv   ch
  417358:	adc    ebp,DWORD PTR [eax]
  41735a:	fisubr DWORD PTR ds:0x572dfbd2
  417360:	jne    0x41732e
  417362:	xchg   esi,eax
  417363:	lock xchg edx,eax
  417365:	inc    esi
  417366:	fsubr  QWORD PTR gs:[ebp-0x5d]
  41736a:	pusha  
  41736b:	xchg   ebx,eax
  41736c:	lods   al,BYTE PTR ds:[esi]
  41736d:	call   0xfa00d611
  417372:	xchg   BYTE PTR [ecx+ebx*1+0x60],dh
  417376:	mov    ds:0x4a81c042,al
  41737b:	stos   DWORD PTR es:[edi],eax
  41737c:	adc    dh,ah
  41737e:	and    eax,0x1866e132
  417383:	stos   BYTE PTR es:[edi],al
  417384:	sub    BYTE PTR [ecx],dh
  417386:	xchg   esp,eax
  417387:	pop    eax
  417388:	cld    
  417389:	(bad)  
  41738a:	aad    0xeb
  41738c:	push   edx
  41738d:	in     al,dx
  41738e:	out    0xe,al
  417390:	dec    esp
  417391:	scas   eax,DWORD PTR es:[edi]
  417392:	inc    ebp
  417393:	inc    ebx
  417394:	mov    esi,0x54337459
  417399:	test   DWORD PTR [ebx-0x24d1bd33],eax
  41739f:	cld    
  4173a0:	in     eax,0xb3
  4173a2:	je     0x417334
  4173a4:	fcomip st,st(6)
  4173a6:	cmp    edi,DWORD PTR [esi]
  4173a8:	es inc ebx
  4173aa:	shr    esp,0x66
  4173ad:	mov    cl,0xba
  4173af:	push   ebx
  4173b0:	fiadd  WORD PTR [edi+0x7]
  4173b3:	inc    edi
  4173b4:	dec    eax
  4173b5:	les    esi,FWORD PTR [eax]
  4173b7:	sub    ah,BYTE PTR [edx]
  4173b9:	inc    ebx
  4173ba:	pushf  
  4173bb:	repnz leave 
  4173bd:	sbb    esp,DWORD PTR [edx-0x2da23a67]
  4173c3:	in     eax,0x24
  4173c5:	xor    DWORD PTR [eax-0x4e3302d2],0xa8a9a404
  4173cf:	mov    edi,DWORD PTR [eax-0x76bb3fa8]
  4173d5:	mov    esi,0x16bc723b
  4173da:	repnz inc esi
  4173dc:	push   0x7e
  4173de:	and    esi,DWORD PTR [esi+0x70]
  4173e1:	cdq    
  4173e2:	sbb    bh,BYTE PTR [ebx]
  4173e4:	ja     0x417408
  4173e6:	ins    BYTE PTR es:[edi],dx
  4173e7:	sub    ebx,DWORD PTR [ecx-0x18]
  4173ea:	push   ebx
  4173eb:	jnp    0x4173cd
  4173ed:	cmp    DWORD PTR [edi-0x3b241aa3],0x1f
  4173f4:	test   eax,0x4197b996
  4173f9:	sti    
  4173fa:	lahf   
  4173fb:	sbb    bh,BYTE PTR [ecx+edi*2]
  4173fe:	fs scas eax,DWORD PTR es:[edi]
  417400:	sti    
  417401:	mov    WORD PTR [eax-0x1444e69c],ss
  417407:	fisttp WORD PTR [esi-0x78c3729a]
  41740d:	ds jbe 0x417446
  417410:	sub    DWORD PTR [eax+ecx*2],esi
  417413:	sbb    DWORD PTR [esi],esi
  417415:	popf   
  417416:	jbe    0x4173b8
  417418:	out    dx,al
  417419:	outs   dx,DWORD PTR ds:[esi]
  41741a:	or     bh,BYTE PTR [edi]
  41741c:	std    
  41741d:	and    eax,0x9f131a71
  417422:	jecxz  0x4173b1
  417424:	jns    0x4173cf
  417426:	arpl   WORD PTR [ecx+ecx*1+0x455c5b31],ax
  41742d:	nop
  41742e:	ror    DWORD PTR [esi+0x6fb0274],0x1f
  417435:	retf   0xcc2c
  417438:	push   es
  417439:	xchg   esp,eax
  41743a:	mov    WORD PTR [ecx-0x3d],ss
  41743d:	push   edx
  41743e:	mov    al,ds:0x5c942f2a
  417443:	mov    eax,0x53b9ff7b
  417448:	aaa    
  417449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41744a:	jo     0x417494
  41744c:	cmp    ebp,DWORD PTR [edx]
  41744e:	xchg   esp,eax
  41744f:	cwde   
  417450:	ja     0x4174bc
  417452:	(bad)  
  417453:	es in  al,0x9a
  417456:	pushaw 
  417458:	pop    ebp
  417459:	daa    
  41745a:	pop    eax
  41745b:	shr    dh,0x75
  41745e:	mov    ecx,0x20e994d3
  417463:	mov    ch,0x8
  417465:	dec    esi
  417466:	sub    al,0xe4
  417468:	lds    ebp,FWORD PTR [ebp-0x4a]
  41746b:	cmp    al,0x19
  41746d:	sbb    eax,0xc2e34bb9
  417472:	pop    ebp
  417473:	gs jns 0x417495
  417476:	stos   BYTE PTR es:[edi],al
  417477:	cdq    
  417478:	jmp    0x196529ed
  41747d:	and    al,0x30
  41747f:	xor    eax,DWORD PTR [eax+0x4d]
  417482:	xchg   esp,eax
  417483:	mov    al,BYTE PTR [esi]
  417485:	xchg   ecx,eax
  417486:	out    0xcb,eax
  417488:	dec    eax
  417489:	or     bl,BYTE PTR [ebx+0x21]
  41748c:	rcl    DWORD PTR [edi],1
  41748e:	and    edx,DWORD PTR [ebx]
  417490:	push   esi
  417491:	data16 jg 0x4174c2
  417494:	add    bh,BYTE PTR [ebx-0x4c638c7e]
  41749a:	add    esi,DWORD PTR [ecx+0x4e2d3999]
  4174a0:	adc    eax,DWORD PTR [eax-0x5]
  4174a3:	stc    
  4174a4:	adc    cl,BYTE PTR [edx+0x6f]
  4174a7:	aam    0x33
  4174a9:	xor    edx,eax
  4174ab:	inc    ebx
  4174ac:	xor    dl,BYTE PTR [edx]
  4174ae:	mul    DWORD PTR [esi+0x64556f78]
  4174b4:	xlat   BYTE PTR ds:[ebx]
  4174b5:	stos   BYTE PTR es:[edi],al
  4174b6:	or     eax,0x63f9348e
  4174bb:	test   dl,bh
  4174bd:	mov    ebp,DWORD PTR [ecx]
  4174bf:	dec    esi
  4174c0:	loope  0x4174c1
  4174c2:	jecxz  0x4174e8
  4174c4:	rcr    DWORD PTR [eax-0x51],1
  4174c7:	ins    BYTE PTR es:[edi],dx
  4174c8:	ret    
  4174c9:	inc    ebx
  4174ca:	mov    ebp,0xab4ae3fe
  4174cf:	push   eax
  4174d0:	push   ss
  4174d1:	xchg   BYTE PTR [eax-0x5bfae26a],al
  4174d7:	addr16 push es
  4174d9:	mov    edx,0x6ea07e90
  4174de:	pusha  
  4174df:	xor    DWORD PTR [ecx-0x5f90894c],edi
  4174e5:	pusha  
  4174e6:	aad    0x95
  4174e8:	retf   0x5df9
  4174eb:	mov    al,0x0
  4174ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174ee:	test   DWORD PTR [ebx-0x70],ebp
  4174f1:	mov    edx,0x1e8e9204
  4174f6:	aas    
  4174f7:	aam    0xae
  4174f9:	aam    0xa7
  4174fb:	xchg   esp,eax
  4174fc:	jnp    0x4174e0
  4174fe:	dec    esi
  4174ff:	mov    ebp,0x89f1fd80
  417504:	into   
  417505:	jns    0x4174ae
  417507:	add    ch,BYTE PTR [edi]
  417509:	mov    BYTE PTR [ebx+0x67],0xa9
  41750d:	cld    
  41750e:	adc    al,0xf3
  417510:	cdq    
  417511:	paddb  mm1,QWORD PTR [ebp-0x2b]
  417515:	sub    BYTE PTR [eax+0x6ea74dd3],ah
  41751b:	outs   dx,DWORD PTR ds:[esi]
  41751c:	hlt    
  41751d:	push   ss
  41751e:	adc    al,0xc6
  417520:	aad    0x10
  417522:	jecxz  0x4174b0
  417524:	out    dx,al
  417525:	jnp    0x417523
  417527:	jb     0x41750e
  417529:	rcl    BYTE PTR [edx+0x61],cl
  41752c:	xor    edx,ebp
  41752e:	add    esi,DWORD PTR [eax+0x45fa786b]
  417534:	cmp    ah,al
  417536:	mov    ds,WORD PTR [ecx-0x9]
  417539:	fs xchg edx,eax
  41753b:	or     eax,0x7d333b90
  417540:	jecxz  0x417500
  417542:	ins    DWORD PTR es:[edi],dx
  417543:	push   0x2b
  417545:	cmp    ah,cl
  417547:	dec    eax
  417548:	adc    BYTE PTR [edi+0x73b7dfb7],0x3f
  41754f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417550:	mov    ds,WORD PTR [esi]
  417552:	dec    edi
  417553:	call   0x5dd6:0x57ef5adf
  41755a:	dec    ebp
  41755b:	xchg   esp,eax
  41755c:	imul   DWORD PTR [eax-0x5]
  41755f:	repnz xor al,0x61
  417562:	scas   eax,DWORD PTR es:[edi]
  417563:	mov    BYTE PTR [ecx+edx*2-0x71],ch
  417567:	or     al,BYTE PTR [ebx-0x48]
  41756a:	mov    dh,0xae
  41756c:	inc    eax
  41756d:	vpunpcklqdq xmm2,xmm2,XMMWORD PTR ss:[esi]
  417572:	jo     0x417591
  417574:	push   esp
  417575:	or     eax,ebx
  417577:	lods   eax,DWORD PTR ds:[esi]
  417578:	add    eax,DWORD PTR [ebp+edi*4-0x51ab243e]
  41757f:	xchg   ecx,eax
  417580:	jge    0x417589
  417582:	repz aas 
  417584:	jns    0x41753f
  417586:	fidivr DWORD PTR [esi]
  417588:	cli    
  417589:	mov    ds:0x7a095a46,eax
  41758e:	outs   dx,BYTE PTR ds:[esi]
  41758f:	pop    ecx
  417590:	cmp    eax,0x5a63c150
  417595:	and    DWORD PTR ds:0x9913,ebp
  41759a:	adc    al,0xc9
  41759c:	add    bh,BYTE PTR [edx+0x5f18ae6b]
  4175a2:	popa   
  4175a3:	pop    ds
  4175a4:	rcl    DWORD PTR [edx],0x97
  4175a7:	outs   dx,BYTE PTR ds:[esi]
  4175a8:	pushf  
  4175a9:	sub    esi,DWORD PTR ds:0xb82a2c07
  4175af:	adc    esp,DWORD PTR [ebp-0x9]
  4175b2:	stc    
  4175b3:	(bad)  
  4175b4:	pop    edx
  4175b5:	das    
  4175b6:	outs   dx,BYTE PTR ds:[esi]
  4175b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175b8:	popa   
  4175b9:	add    BYTE PTR [edx-0x3e5af45a],cl
  4175bf:	mov    edx,0x8caccad2
  4175c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175c5:	popa   
  4175c6:	fnsave [ecx+0x6e]
  4175c9:	jnp    0x41754d
  4175cb:	mov    ebp,0x45716d8d
  4175d0:	push   esp
  4175d1:	add    DWORD PTR [edi-0x68],esi
  4175d4:	stos   BYTE PTR es:[edi],al
  4175d5:	sbb    DWORD PTR [ebp-0x6223f125],0xa1a15a87
  4175df:	pop    ebp
  4175e0:	push   ecx
  4175e1:	cli    
  4175e2:	addr16 xchg esi,eax
  4175e4:	outs   dx,BYTE PTR ds:[esi]
  4175e5:	xor    ebx,DWORD PTR cs:[ebp+0xe]
  4175e9:	mov    eax,ds:0xd41b39ba
  4175ee:	(bad)  
  4175f0:	mov    esi,0x195a7402
  4175f5:	push   ebx
  4175f6:	cmp    al,0x39
  4175f8:	mov    edx,ebx
  4175fa:	sub    DWORD PTR [ebx],edx
  4175fc:	popa   
  4175fd:	aas    
  4175fe:	aad    0x75
  417600:	adc    DWORD PTR [esi+0x709e3539],ecx
  417606:	push   esp
  417607:	xor    eax,0xffffff88
  41760a:	add    DWORD PTR [ecx+eax*1-0x67103792],ecx
  417611:	inc    ebx
  417612:	out    0x84,eax
  417614:	fdiv   QWORD PTR [ecx+ebx*1]
  417617:	jp     0x417657
  417619:	out    dx,eax
  41761a:	dec    edi
  41761b:	dec    bp
  41761d:	imul   esi,DWORD PTR [edx+0x54],0x739a26c6
  417624:	test   al,0xc8
  417626:	mov    ebp,ss
  417628:	stos   BYTE PTR es:[edi],al
  417629:	(bad)  [edx-0x236e9a6a]
  41762f:	cmp    ch,BYTE PTR [edx+0x60]
  417632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417633:	jns    0x4175f1
  417635:	ss push ebx
  417637:	pop    ebp
  417638:	mov    ah,0x7e
  41763a:	fnsave [edx-0x692286e9]
  417640:	mov    ds:0x55c0a312,eax
  417645:	pop    esp
  417646:	fild   QWORD PTR [eax-0x22]
  417649:	ret    0x76cc
  41764c:	xor    eax,0xad0283f9
  417651:	or     eax,0xd79792ba
  417656:	xor    al,0x37
  417658:	mov    dh,0x16
  41765a:	xchg   esi,eax
  41765b:	mov    ecx,0x693b4d19
  417660:	mov    esi,0x8f1782cd
  417665:	ins    DWORD PTR es:[edi],dx
  417666:	out    0x76,al
  417668:	jmp    0x4b28056a
  41766d:	cwde   
  41766e:	jp     0x41765d
  417670:	mov    bl,0xe8
  417672:	(bad)  
  417673:	icebp  
  417674:	mov    BYTE PTR fs:[ebp+0x5050cb67],cl
  41767b:	mov    bl,0xf2
  41767d:	xchg   edi,eax
  41767e:	(bad)  
  41767f:	fdiv   DWORD PTR [eax+edx*8]
  417682:	fwait
  417683:	jbe    0x417615
  417685:	sbb    bh,al
  417687:	repnz test al,0xb1
  41768a:	sub    eax,DWORD PTR [ebp+ebx*1+0xd]
  41768e:	push   ss
  41768f:	test   eax,0x93cd0e65
  417694:	add    edx,DWORD PTR [ebx+0x7d]
  417697:	(bad)  
  417698:	mov    esi,0x2a27574a
  41769d:	aad    0xcb
  41769f:	inc    esi
  4176a0:	outs   dx,DWORD PTR ds:[esi]
  4176a1:	jbe    0x41770b
  4176a3:	mov    esi,0x7caefe26
  4176a8:	and    BYTE PTR [ebx],dh
  4176aa:	sbb    esi,eax
  4176ac:	or     al,0x8b
  4176ae:	inc    ebx
  4176af:	jg     0x41765f
  4176b1:	sar    DWORD PTR [ecx-0x63],cl
  4176b4:	jg     0x4176e1
  4176b6:	sbb    esi,DWORD PTR [eax+esi*8-0x5c]
  4176ba:	pmaxsw mm2,mm0
  4176bd:	(bad)  
  4176bf:	jmp    0x623c:0xe668713b
  4176c6:	sub    bl,bl
  4176c8:	mov    ecx,0x7caa966a
  4176cd:	hlt    
  4176ce:	cmp    eax,0x4df88b94
  4176d3:	lahf   
  4176d4:	jnp    0x417717
  4176d6:	pop    eax
  4176d7:	or     eax,0x1ccb06eb
  4176dc:	xor    ecx,DWORD PTR [ecx]
  4176de:	mov    DWORD PTR [edi+0x10],ebx
  4176e1:	mov    ds:0x42d77bfc,al
  4176e6:	test   al,0xe7
  4176e8:	push   ebp
  4176e9:	ret    
  4176ea:	cs inc ecx
  4176ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176ed:	cdq    
  4176ee:	push   edx
  4176ef:	sahf   
  4176f0:	jle    0x4176ad
  4176f2:	aaa    
  4176f3:	stc    
  4176f4:	jns    0x417702
  4176f6:	retf   
  4176f7:	mov    ecx,0x3e8be8a6
  4176fc:	add    DWORD PTR [ecx-0x4],edi
  4176ff:	inc    esp
  417700:	pushf  
  417701:	jg     0x4176c8
  417703:	add    al,0x0
  417705:	adc    al,0xe7
  417707:	push   eax
  417708:	cwde   
  417709:	push   ss
  41770a:	jg     0x41776a
  41770c:	cmc    
  41770d:	inc    ebx
  41770e:	sub    ebx,DWORD PTR [edi+0xb]
  417711:	(bad)  
  417712:	dec    edi
  417713:	xchg   ebx,eax
  417714:	sbb    ch,BYTE PTR [eax+0x7f]
  417717:	pop    esi
  417718:	sbb    al,dh
  41771a:	pushw  cs
  41771c:	jmp    FWORD PTR [ecx-0x692272a]
  417722:	sub    DWORD PTR ds:0xbea8d0ce,ecx
  417728:	pop    eax
  417729:	mov    ds:0xbeefd37,eax
  41772e:	addr16 mov bh,0x64
  417731:	adc    DWORD PTR [ecx],esp
  417733:	or     ecx,DWORD PTR [edx+0x20]
  417736:	pushf  
  417737:	aaa    
  417738:	inc    ecx
  417739:	outs   dx,DWORD PTR ds:[esi]
  41773a:	imul   eax,DWORD PTR [ecx+edi*1],0xffffff8c
  41773e:	mov    dh,0x95
  417740:	push   0xddb6875a
  417745:	lods   al,BYTE PTR ds:[esi]
  417746:	ss jne 0x41771a
  417749:	in     al,0x25
  41774b:	dec    ebp
  41774c:	fdiv   DWORD PTR [ebx+0x25b4e580]
  417752:	xchg   ebx,eax
  417753:	xchg   dl,bl
  417755:	ins    BYTE PTR es:[edi],dx
  417756:	xlat   BYTE PTR ds:[ebx]
  417757:	popf   
  417758:	sub    ah,al
  41775a:	dec    esi
  41775b:	mov    ecx,0x12b89fb9
  417760:	mov    ds:0x76a02029,al
  417765:	lahf   
  417766:	repz or ebx,0xffffff93
  41776a:	pop    es
  41776b:	sbb    al,0xb3
  41776d:	pop    ss
  41776e:	iret   
  41776f:	push   esp
  417770:	add    edi,eax
  417772:	push   0xffffffb2
  417774:	fmul   st,st(4)
  417776:	sub    eax,0x1cad21ae
  41777b:	mov    WORD PTR [eax+0x511ba594],es
  417781:	frstor [esi+0x4b1510e1]
  417787:	aad    0x5f
  417789:	imul   ecx,DWORD PTR ds:0xe6a781a8,0x751955c2
  417793:	adc    eax,0xd5c695a9
  417798:	cmp    ch,BYTE PTR [ebp+0x3]
  41779b:	push   ecx
  41779c:	mov    ebp,0x934eeefb
  4177a1:	lods   al,BYTE PTR ds:[esi]
  4177a2:	inc    edi
  4177a3:	mov    al,0x49
  4177a5:	cmc    
  4177a6:	in     eax,dx
  4177a7:	cmp    eax,0x9c640bf3
  4177ac:	and    DWORD PTR [esi],eax
  4177ae:	cmp    BYTE PTR ds:0xfc15f0a9,ch
  4177b4:	js     0x417835
  4177b6:	mov    ss,WORD PTR [esi+0x7c]
  4177b9:	inc    esp
  4177ba:	fist   WORD PTR [eax-0x2c]
  4177bd:	mov    ch,0x67
  4177bf:	mov    eax,ds:0xdd7f9ec3
  4177c4:	jmp    0x417838
  4177c6:	push   ebp
  4177c7:	fidivr WORD PTR [ecx-0x44b23f91]
  4177cd:	pop    edx
  4177ce:	ret    0xa588
  4177d1:	adc    DWORD PTR [edx],0x6
  4177d4:	adc    al,0x4b
  4177d6:	or     BYTE PTR [edx],cl
  4177d8:	test   BYTE PTR [eax+0x36],0x62
  4177dc:	jae    0x41775e
  4177de:	js     0x417818
  4177e0:	pop    es
  4177e1:	aas    
  4177e2:	out    dx,eax
  4177e3:	out    dx,al
  4177e4:	pop    eax
  4177e5:	push   ecx
  4177e6:	adc    ecx,DWORD PTR [edi+0x4828ea58]
  4177ec:	inc    esp
  4177ed:	inc    esp
  4177ee:	jns    0x417816
  4177f0:	ins    BYTE PTR es:[edi],dx
  4177f1:	add    DWORD PTR [edx+eiz*8+0x4],0x4b
  4177f6:	xchg   DWORD PTR [ebx+eax*2-0x1be24d64],esi
  4177fd:	mov    dh,BYTE PTR [ebx+0x2]
  417800:	sub    edx,DWORD PTR [esi-0x20ee1ac9]
  417806:	dec    ebp
  417807:	call   0x555f:0xdfdf9a89
  41780e:	cmc    
  41780f:	icebp  
  417810:	or     esp,DWORD PTR [eax+0x6d683010]
  417816:	repnz add BYTE PTR [eax],al
  417819:	clc    
  41781a:	add    al,0x0
  41781c:	add    bl,ch
  41781e:	shr    DWORD PTR [ecx-0xa8d02c3],cl
  417824:	shl    ch,0x96
  417827:	ds mov ch,0x38
  41782a:	and    al,0x54
  41782c:	mov    eax,0xf3ad9bfe
  417831:	add    dh,dl
  417833:	and    edi,DWORD PTR [edi]
  417835:	push   ebx
  417836:	ret    
  417837:	mov    al,ds:0x66e8fe2f
  41783c:	mov    edx,0x3b12ea22
  417841:	sbb    BYTE PTR [ecx-0x5421c5d6],dh
  417847:	(bad)  
  417848:	leave  
  417849:	(bad)  
  41784b:	adc    eax,0x6c7d99a
  417850:	call   0xe9b2b321
  417855:	xlat   BYTE PTR ds:[ebx]
  417856:	xchg   BYTE PTR [ebx],ch
  417858:	adc    DWORD PTR [edi+ebp*2-0x75899df4],ebx
  41785f:	(bad)  
  417860:	pusha  
  417861:	outs   dx,DWORD PTR ds:[esi]
  417862:	cmp    al,0x7
  417864:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417865:	xor    cl,dh
  417867:	adc    esp,DWORD PTR [ebx]
  417869:	icebp  
  41786a:	jnp    0x417808
  41786c:	or     esp,DWORD PTR [eax]
  41786e:	pop    ebp
  41786f:	dec    esp
  417870:	ret    0xaf09
  417873:	cmp    ch,cl
  417875:	xor    eax,0xa509140f
  41787a:	dec    ecx
  41787b:	pop    esi
  41787c:	test   DWORD PTR [edx],0xded47fc3
  417882:	xor    al,0x1f
  417884:	and    DWORD PTR ds:0x953b46fb,0xd80ef3ef
  41788e:	jnp    0x417862
  417890:	inc    edi
  417891:	xchg   BYTE PTR [esi+esi*4-0x33],dl
  417895:	cmp    DWORD PTR [esi],edx
  417897:	sub    DWORD PTR [eax+0x53420052],ecx
  41789d:	repnz in al,dx
  41789f:	fcmovnb st,st(3)
  4178a1:	xor    dl,BYTE PTR [ebp+0x17]
  4178a4:	loopne 0x417841
  4178a6:	adc    BYTE PTR [ebx+0x6c0c6198],bh
  4178ac:	mov    ds:0x35444598,al
  4178b1:	jle    0x417873
  4178b3:	stc    
  4178b4:	dec    edi
  4178b5:	enter  0x2f82,0x59
  4178b9:	loopne 0x417851
  4178bb:	dec    ebp
  4178bc:	mov    esp,0xe43afdce
  4178c1:	nop
  4178c2:	fbld   TBYTE PTR [esi]
  4178c4:	mov    ebx,0x17468c11
  4178c9:	rol    DWORD PTR [edi],0xe
  4178cc:	cmp    al,BYTE PTR [ebp-0x4b720648]
  4178d2:	sbb    ecx,esp
  4178d4:	push   0x3
  4178d6:	jecxz  0x4178a1
  4178d8:	add    esi,ebx
  4178da:	or     cl,BYTE PTR [eax-0x3bf9715d]
  4178e0:	cli    
  4178e1:	jb     0x417898
  4178e3:	test   eax,0x24432096
  4178e8:	inc    ecx
  4178e9:	int3   
  4178ea:	stc    
  4178eb:	dec    ecx
  4178ec:	and    bh,BYTE PTR [eax+edi*2+0x29be4123]
  4178f3:	pushf  
  4178f4:	mov    edi,0x77774e95
  4178f9:	dec    edi
  4178fa:	jno    0x417891
  4178fc:	shr    DWORD PTR [ebp+0x35],1
  4178ff:	or     cl,dl
  417901:	ja     0x417883
  417903:	lahf   
  417904:	loopne 0x417916
  417906:	dec    esi
  417907:	jmp    0x4178f3
  417909:	imul   edx,ecx,0x25
  41790c:	sbb    bl,BYTE PTR [ebx+0x31]
  41790f:	add    ah,dl
  417911:	(bad)  
  417912:	dec    edx
  417913:	rol    BYTE PTR [edi+0x6a228b39],1
  417919:	test   DWORD PTR [ebp+esi*8+0xff115c4],ebp
  417920:	add    BYTE PTR [eax-0x593e7950],dl
  417926:	sub    BYTE PTR [ebx],ch
  417928:	push   esi
  417929:	push   ebx
  41792a:	mov    al,ds:0xef960603
  41792f:	mov    dl,0xae
  417931:	jne    0x4179ad
  417933:	idiv   BYTE PTR [esi+0x11fd2e7a]
  417939:	aas    
  41793a:	push   0xe9c73120
  41793f:	int    0xf5
  417941:	stos   DWORD PTR es:[edi],eax
  417942:	jno    0x41792f
  417944:	inc    esi
  417945:	xor    dl,BYTE PTR [ecx+0x2b]
  417948:	fsub   st,st(7)
  41794a:	xchg   edx,eax
  41794b:	jmp    0xdfebe3f3
  417950:	inc    edi
  417951:	and    edi,ebx
  417953:	jp     0x417980
  417955:	cmp    eax,0x8a31b494
  41795a:	add    edi,DWORD PTR ds:0x7ffd69e3
  417960:	mov    bh,BYTE PTR [ebp+0x4e71e123]
  417966:	test   al,0xec
  417968:	les    ebp,FWORD PTR [ebx]
  41796a:	cmp    BYTE PTR [edi+0x37],dl
  41796d:	fwait
  41796e:	push   0xc78c9a80
  417973:	cmc    
  417974:	sti    
  417975:	push   ebx
  417976:	push   esi
  417977:	dec    edi
  417978:	shr    DWORD PTR [edx],cl
  41797a:	fdivr  QWORD PTR [esi+edi*2+0x1a22ba8b]
  417981:	outs   dx,DWORD PTR ds:[esi]
  417982:	jmp    0x417997
  417984:	bound  eax,QWORD PTR [ebp-0x59]
  417987:	xchg   ebx,eax
  417988:	or     esi,esp
  41798a:	adc    eax,0xbd6a27e2
  41798f:	mov    ebx,0x3caac3ce
  417994:	jno    0x4179b7
  417996:	adc    al,0x2a
  417998:	pop    ebp
  417999:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41799a:	jle    0x41798e
  41799c:	add    eax,0xd4f4dcfe
  4179a1:	in     eax,dx
  4179a2:	xchg   bl,bl
  4179a4:	dec    esp
  4179a5:	xchg   edi,eax
  4179a6:	outs   dx,BYTE PTR ds:[esi]
  4179a7:	cmc    
  4179a8:	mov    al,es:0x4cf21062
  4179ae:	xchg   edx,eax
  4179af:	mov    bh,BYTE PTR [edi+ebp*1+0x3]
  4179b3:	sub    al,0xce
  4179b5:	xor    eax,0xd8317f8f
  4179ba:	ret    
  4179bb:	push   ebp
  4179bc:	pop    ebp
  4179bd:	loope  0x4179d4
  4179bf:	adc    edi,DWORD PTR [ebp+0x4c99b035]
  4179c5:	out    0xef,eax
  4179c7:	repz xor eax,0x34ecec4f
  4179cd:	inc    ecx
  4179ce:	xor    eax,esi
  4179d0:	ja     0x4179b2
  4179d2:	add    edi,DWORD PTR [edi-0x6]
  4179d5:	dec    esp
  4179d6:	inc    edi
  4179d7:	xor    BYTE PTR [edx+eiz*2-0x8c437d4],0xd3
  4179df:	(bad)  
  4179e0:	sbb    bl,BYTE PTR ds:0xd11690f3
  4179e6:	es cmp al,0x7d
  4179e9:	ror    DWORD PTR [ebx],cl
  4179eb:	popf   
  4179ec:	mov    ebx,0xa375835e
  4179f1:	fs push ds
  4179f3:	jge    0x417a62
  4179f5:	nop
  4179f6:	lea    ebx,[ecx+edi*4+0x43]
  4179fa:	or     al,0x70
  4179fc:	xor    esp,esi
  4179fe:	xor    ah,BYTE PTR [ebp+ecx*8+0x44]
  417a02:	and    eax,0x1778a79
  417a07:	stc    
  417a08:	sbb    edi,DWORD PTR [ebp+0x53]
  417a0b:	imul   ecx,DWORD PTR [ecx+0x4e],0xbfe5fcdf
  417a12:	test   BYTE PTR [ebp+0x151d6be7],0xb0
  417a19:	xchg   ebx,eax
  417a1a:	inc    cl
  417a1c:	pop    esp
  417a1d:	repnz pop ebp
  417a1f:	and    DWORD PTR [ebx],esi
  417a21:	and    BYTE PTR [ebp-0x3c410cca],0xdf
  417a28:	aad    0x9
  417a2a:	lods   eax,DWORD PTR ds:[esi]
  417a2b:	and    ch,BYTE PTR [edx+0x7422e3c7]
  417a31:	and    DWORD PTR [eax-0x21],ecx
  417a34:	xor    BYTE PTR [edx-0xbf81dc5],bl
  417a3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a3b:	sub    ch,dl
  417a3d:	and    DWORD PTR [ebx+0x1a],0x75b0acca
  417a44:	add    ah,BYTE PTR [ecx]
  417a46:	(bad)  
  417a47:	div    BYTE PTR fs:0xc97d3734
  417a4e:	enter  0x6a84,0x87
  417a52:	in     eax,0xc0
  417a54:	add    eax,0x49f44a58
  417a59:	cmp    bl,al
  417a5b:	push   0x56c9af48
  417a60:	push   DWORD PTR [ecx-0x34]
  417a63:	fisub  WORD PTR [ecx]
  417a65:	test   DWORD PTR [edx-0x1c],esp
  417a68:	pop    ebp
  417a69:	div    DWORD PTR [edi-0x656e6538]
  417a6f:	xlat   BYTE PTR ds:[ebx]
  417a70:	jmp    0x417a46
  417a72:	repz pop ecx
  417a74:	out    0x38,eax
  417a76:	stos   BYTE PTR es:[edi],al
  417a77:	xor    ah,0x5d
  417a7a:	test   DWORD PTR [edx],eax
  417a7c:	repnz mov DWORD PTR [ebp-0x5b],edi
  417a80:	ficomp WORD PTR [ebp+eax*2+0x38ce9add]
  417a87:	sahf   
  417a88:	loopne 0x417ac2
  417a8a:	in     al,0xb0
  417a8c:	dec    esp
  417a8d:	nop
  417a8e:	stos   DWORD PTR es:[edi],eax
  417a8f:	mov    dl,BYTE PTR [edx-0x4c]
  417a92:	ja     0x417a55
  417a94:	lahf   
  417a95:	xor    dl,BYTE PTR [ebx-0x3bee0ee3]
  417a9b:	mov    edi,0x8a97a1
  417aa0:	xor    ecx,DWORD PTR [edi+0x79c71682]
  417aa6:	fisub  WORD PTR [edx]
  417aa8:	and    eax,0x60b9b539
  417aad:	int    0xbc
  417aaf:	sub    ch,dh
  417ab1:	push   ebp
  417ab2:	pop    edi
  417ab3:	loopne 0x417acf
  417ab5:	out    dx,eax
  417ab6:	ret    0xf019
  417ab9:	or     bh,ch
  417abb:	pop    esp
  417abc:	shr    BYTE PTR [esi],1
  417abe:	ss push ecx
  417ac0:	xchg   edx,eax
  417ac1:	xchg   ebx,eax
  417ac2:	fs out 0x48,eax
  417ac5:	pop    ss
  417ac6:	mov    esp,0xaa8f221f
  417acb:	fwait
  417acc:	scas   al,BYTE PTR es:[edi]
  417acd:	dec    esi
  417ace:	inc    edi
  417acf:	xchg   edx,eax
  417ad0:	(bad)  
  417ad1:	xchg   ebp,eax
  417ad2:	mov    ebp,0x8fa9aaf5
  417ad7:	and    bh,ah
  417ad9:	add    ch,BYTE PTR [edx+0x61b0391a]
  417adf:	cmp    al,0xda
  417ae1:	arpl   di,si
  417ae3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ae4:	mov    edx,0xf1aa67fa
  417ae9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417aea:	push   ss
  417aeb:	mov    DWORD PTR [ebp-0x520ae584],eax
  417af1:	je     0x417b3e
  417af3:	mov    edi,0xdca4368
  417af8:	jmp    0xcbe1:0x2ddae0fe
  417aff:	and    BYTE PTR [edx+ecx*1],dl
  417b02:	add    al,0xd5
  417b04:	fbstp  TBYTE PTR [ecx]
  417b06:	or     al,0xda
  417b08:	sub    ah,BYTE PTR [eax-0x76]
  417b0b:	push   0x912578ec
  417b10:	mov    al,BYTE PTR fs:[edx]
  417b13:	in     eax,dx
  417b14:	xor    edx,DWORD PTR [esi-0x4c]
  417b17:	mov    ds:0x8b738188,al
  417b1c:	rep ins BYTE PTR es:[edi],dx
  417b1e:	jmp    0x63a43c92
  417b23:	mov    dl,0xd6
  417b25:	pop    edi
  417b26:	add    cl,BYTE PTR [ecx+0x6f]
  417b29:	xlat   BYTE PTR ds:[ebx]
  417b2a:	outs   dx,BYTE PTR ds:[esi]
  417b2b:	pop    esp
  417b2c:	test   eax,0xaeb7c7e9
  417b31:	in     eax,dx
  417b32:	loopne 0x417b52
  417b34:	push   ss
  417b35:	int3   
  417b36:	sbb    DWORD PTR [esi],esp
  417b38:	jg     0x417ae6
  417b3a:	push   0xa701af33
  417b3f:	repnz mov bh,0xf1
  417b42:	div    cl
  417b44:	lock cs std 
  417b47:	scas   eax,DWORD PTR es:[edi]
  417b48:	popf   
  417b49:	add    DWORD PTR [ecx],eax
  417b4b:	gs test ecx,ecx
  417b4e:	push   eax
  417b4f:	into   
  417b50:	retf   
  417b51:	xor    DWORD PTR [edi],0x32
  417b54:	jo     0x417afb
  417b56:	and    BYTE PTR ds:0x58b2789c,ah
  417b5c:	js     0x417b73
  417b5e:	(bad)  
  417b5f:	jae    0x417bc7
  417b61:	jo     0x417b73
  417b63:	ror    cl,1
  417b65:	pop    ebp
  417b66:	jp     0x417b51
  417b68:	dec    edi
  417b69:	mov    ch,dl
  417b6b:	pop    ds
  417b6c:	(bad)  
  417b6d:	push   es
  417b6e:	xchg   DWORD PTR [ecx+0x24],ebp
  417b71:	and    ch,al
  417b73:	mov    ebp,0xbe3b5b07
  417b78:	push   ecx
  417b79:	rcr    DWORD PTR [ebx+0x1b82cca5],cl
  417b7f:	call   FWORD PTR [eax-0x8]
  417b82:	mov    dh,0x6e
  417b84:	push   edx
  417b85:	sbb    eax,0x8ee0ad67
  417b8a:	mov    al,ds:0x58c9f6a
  417b8f:	jg     0x417b94
  417b91:	inc    ebp
  417b92:	jns    0x417bcd
  417b94:	ret    0x77d9
  417b97:	in     eax,dx
  417b98:	dec    edx
  417b99:	jg     0x417b99
  417b9b:	jmp    0x417c0a
  417b9d:	adc    BYTE PTR [edx-0x69ce432d],dh
  417ba3:	inc    eax
  417ba4:	mov    eax,0x31f8ce9f
  417ba9:	call   0x298c11d1
  417bae:	sub    al,0x5a
  417bb0:	dec    BYTE PTR [edx-0x32482936]
  417bb6:	in     al,dx
  417bb7:	pop    edx
  417bb8:	mov    esp,0xec07e29f
  417bbd:	out    dx,eax
  417bbe:	add    eax,0xd0f8bb76
  417bc3:	xchg   edx,eax
  417bc4:	hlt    
  417bc5:	add    al,0x37
  417bc7:	stos   BYTE PTR es:[edi],al
  417bc8:	aas    
  417bc9:	stos   BYTE PTR es:[edi],al
  417bca:	mov    DWORD PTR [edi+0x7dcfdbc8],esi
  417bd0:	jne    0x417c29
  417bd2:	and    al,0x7b
  417bd4:	sbb    cl,BYTE PTR [esi-0x61870c43]
  417bda:	and    ebp,DWORD PTR [eax]
  417bdc:	sbb    dl,ah
  417bde:	ret    0x4b15
  417be1:	push   0x20
  417be3:	into   
  417be4:	jo     0x417b86
  417be6:	lods   al,BYTE PTR ds:[esi]
  417be7:	dec    ecx
  417be8:	inc    eax
  417be9:	mov    al,0xd9
  417beb:	or     ebx,edi
  417bed:	rcl    WORD PTR fs:[esi+0x45],cl
  417bf2:	add    ah,BYTE PTR [bx+si+0x61]
  417bf6:	mov    eax,DWORD PTR [ebx+0x5d]
  417bf9:	mov    al,dh
  417bfb:	dec    ecx
  417bfc:	sahf   
  417bfd:	rcr    BYTE PTR [edi+0x69],1
  417c00:	mul    DWORD PTR [eax-0x1f93b489]
  417c06:	(bad)  
  417c07:	loope  0x417c26
  417c09:	call   0x72f6:0x598acf59
  417c10:	xchg   edi,eax
  417c11:	jae    0x417c89
  417c13:	adc    BYTE PTR [eax+esi*1+0x377ea079],dh
  417c1a:	add    eax,0x888d59d7
  417c1f:	icebp  
  417c20:	outs   dx,DWORD PTR ds:[esi]
  417c21:	cli    
  417c22:	mov    esi,0x754049a0
  417c27:	adc    eax,0xf50a8e95
  417c2c:	or     ch,BYTE PTR [ecx-0x63615032]
  417c32:	setg   ah
  417c35:	mov    al,0xbf
  417c37:	cmp    eax,0x81aadcc4
  417c3c:	(bad)  
  417c3d:	out    dx,al
  417c3e:	scas   eax,DWORD PTR es:[edi]
  417c3f:	xchg   ebx,eax
  417c40:	lods   al,BYTE PTR ds:[esi]
  417c41:	fwait
  417c42:	lods   eax,DWORD PTR ds:[esi]
  417c43:	mov    ebp,0xcfbc431d
  417c48:	jno    0x417c1f
  417c4a:	jno    0x417bdc
  417c4c:	mov    esi,0xe1fab94d
  417c51:	xchg   ebp,eax
  417c52:	out    dx,eax
  417c53:	mov    al,0x6f
  417c55:	retf   0xc15c
  417c58:	cmp    edi,edi
  417c5a:	pushf  
  417c5b:	push   es
  417c5c:	and    eax,0xd2f08327
  417c61:	mov    ebp,0x68088e5f
  417c66:	aaa    
  417c67:	outs   dx,BYTE PTR ds:[esi]
  417c68:	retf   0x5e1b
  417c6b:	addr16 push esi
  417c6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c6e:	mov    ch,0xd3
  417c70:	lods   al,BYTE PTR ds:[esi]
  417c71:	adc    DWORD PTR [ebp-0x1a3b147b],eax
  417c77:	out    0xe9,eax
  417c79:	mov    ds:0x5f27a2e8,al
  417c7e:	jmp    0x1131160a
  417c83:	std    
  417c84:	lock or eax,0x7a584c61
  417c8a:	lock iret 
  417c8c:	mov    ah,0x90
  417c8e:	or     ebx,DWORD PTR [ebp+0x2590a7c5]
  417c94:	mov    dh,0x8
  417c96:	call   0xc48280c7
  417c9b:	cdq    
  417c9c:	(bad)  
  417c9d:	xchg   ecx,eax
  417c9e:	mov    al,0xa1
  417ca0:	add    BYTE PTR [edx+0x7566eb5c],cl
  417ca6:	sbb    cl,dl
  417ca8:	or     al,0x1f
  417caa:	lds    edx,FWORD PTR [edx-0x30]
  417cad:	cmp    bl,dh
  417caf:	mov    ebp,0xf4464e16
  417cb4:	test   DWORD PTR [ebx],0xd6d45c3e
  417cba:	or     BYTE PTR [ebp+0x63],dh
  417cbd:	sub    eax,DWORD PTR [eax]
  417cbf:	leave  
  417cc0:	jmp    0xcf5b:0x6fdee3a4
  417cc7:	jb     0x417c7d
  417cc9:	add    al,0x16
  417ccb:	add    al,0xe2
  417ccd:	inc    edx
  417cce:	sub    ebx,DWORD PTR [eax-0x26]
  417cd1:	dec    ebp
  417cd2:	push   ebp
  417cd3:	rol    BYTE PTR [ecx],cl
  417cd5:	mov    cl,0x65
  417cd7:	xchg   DWORD PTR [eax+0x52],edi
  417cda:	mov    edx,DWORD PTR [ebx+0x7b]
  417cdd:	mov    eax,ds:0x813e9a23
  417ce2:	adc    esp,DWORD PTR [esi]
  417ce4:	xor    ecx,DWORD PTR [edx+0x3a]
  417ce7:	cdq    
  417ce8:	fld    TBYTE PTR [eax-0x64b2d65c]
  417cee:	ins    DWORD PTR es:[edi],dx
  417cef:	pop    edx
  417cf0:	stc    
  417cf1:	std    
  417cf2:	fwait
  417cf3:	sbb    BYTE PTR [edx+0x5],0xaf
  417cf7:	mov    ds:0x5b1b9c9d,eax
  417cfc:	jge    0x417d42
  417cfe:	cmp    ebx,DWORD PTR [ecx-0x50]
  417d01:	jge    0x417d3c
  417d03:	inc    esp
  417d04:	popa   
  417d05:	xor    edi,edi
  417d07:	sti    
  417d08:	cmp    edi,DWORD PTR ds:0x19ebaf8d
  417d0e:	mov    ecx,DWORD PTR [edx+0x41]
  417d11:	jno    0x417d16
  417d13:	jge    0x417ce3
  417d15:	es mov ah,0x71
  417d18:	jno    0x417d0d
  417d1a:	cmc    
  417d1b:	mul    DWORD PTR es:[edi+edx*1-0x2acf18d8]
  417d23:	jg     0x417d49
  417d25:	test   DWORD PTR gs:[eax],0x4f800
  417d2c:	add    BYTE PTR [edi-0x599e3e66],ah
  417d32:	aam    0x22
  417d34:	mov    cs,WORD PTR [esi+ebp*1-0xf]
  417d38:	in     al,dx
  417d39:	hlt    
  417d3a:	inc    ebx
  417d3b:	inc    ebx
  417d3c:	sub    ebp,DWORD PTR [ecx-0x40c01591]
  417d42:	pop    ebx
  417d43:	test   eax,0x7c85bcdb
  417d48:	jne    0x417cf3
  417d4a:	aam    0x88
  417d4c:	xchg   ebp,eax
  417d4d:	xchg   DWORD PTR [ebp-0x5622d3d8],ebp
  417d53:	push   ds
  417d54:	mov    ah,0x6b
  417d56:	push   0x46c6651f
  417d5b:	imul   ecx,DWORD PTR [ebx],0x2
  417d5e:	xchg   edi,eax
  417d5f:	arpl   WORD PTR [eax+edx*1],bp
  417d62:	bound  esi,QWORD PTR [ecx-0x13]
  417d65:	ret    0xc9a7
  417d68:	stos   DWORD PTR es:[edi],eax
  417d69:	push   es
  417d6a:	lods   al,BYTE PTR ds:[esi]
  417d6b:	inc    esi
  417d6c:	dec    edi
  417d6d:	jno    0x417dd5
  417d6f:	or     al,0xca
  417d71:	pushf  
  417d72:	mov    dh,0x10
  417d74:	je     0x417de7
  417d76:	jle    0x417d90
  417d78:	stos   DWORD PTR es:[edi],eax
  417d79:	sbb    dl,dh
  417d7b:	sbb    DWORD PTR [ebx],edx
  417d7d:	sub    dl,BYTE PTR [edx]
  417d7f:	add    esp,0x4
  417d82:	mov    ebp,0x746c6649
  417d87:	mov    ?,WORD PTR [edx+0x62]
  417d8a:	lds    ebx,FWORD PTR [ecx-0xaa9fa00]
  417d90:	mov    BYTE PTR [edi],ch
  417d92:	into   
  417d93:	fs in  eax,dx
  417d95:	popf   
  417d96:	adc    eax,0xf3d1364c
  417d9b:	das    
  417d9c:	add    ebx,DWORD PTR [esi+0x7e]
  417d9f:	mov    eax,ds:0x24f55845
  417da4:	aaa    
  417da5:	xchg   ch,dh
  417da7:	mov    ds:0xd961ffeb,eax
  417dac:	push   cs
  417dad:	jp     0x417d63
  417daf:	adc    BYTE PTR [edx+0x65a308f0],0x4
  417db6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417db7:	pop    ds
  417db8:	ror    BYTE PTR [edx-0x6a],1
  417dbb:	ret    0x7568
  417dbe:	jnp    0x417dc8
  417dc0:	sbb    ecx,DWORD PTR [ebx]
  417dc2:	hlt    
  417dc3:	(bad)  
  417dc5:	das    
  417dc6:	dec    esi
  417dc7:	je     0x417e0e
  417dc9:	call   0xa9a9:0x2953d5da
  417dd0:	adc    al,0x54
  417dd2:	push   edx
  417dd3:	shr    DWORD PTR [edi+0x3b],1
  417dd6:	mov    edx,0x6157a6e9
  417ddb:	add    bh,BYTE PTR [eax+0x2c1cccb6]
  417de1:	pop    esi
  417de2:	mov    dl,0x52
  417de4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417de5:	inc    edi
  417de6:	inc    ecx
  417de7:	jno    0x417dc6
  417de9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dea:	daa    
  417deb:	add    ebx,ebp
  417ded:	push   cs
  417dee:	jl     0x417e1f
  417df0:	scas   eax,DWORD PTR es:[edi]
  417df1:	sbb    cl,BYTE PTR ss:[ecx+esi*1+0x63f4bb2]
  417df9:	out    dx,eax
  417dfa:	outs   dx,DWORD PTR ds:[esi]
  417dfb:	or     eax,0x4009080
  417e00:	inc    ebp
  417e01:	jge    0x417e65
  417e03:	mov    ch,0x16
  417e05:	mov    esi,DWORD PTR [ecx+esi*2-0x4d900099]
  417e0c:	push   0x4f
  417e0e:	into   
  417e0f:	gs popa 
  417e11:	jl     0x417da7
  417e13:	popf   
  417e14:	jg     0x417e95
  417e16:	dec    edx
  417e17:	stos   BYTE PTR es:[edi],al
  417e18:	push   esi
  417e19:	fild   QWORD PTR [esi]
  417e1b:	jmp    0xf2637df2
  417e20:	in     eax,0xa5
  417e22:	pop    es
  417e23:	ficom  WORD PTR [eax+0x951cfaa]
  417e29:	inc    eax
  417e2a:	test   DWORD PTR ds:0x919607e5,edi
  417e30:	push   ebx
  417e31:	jecxz  0x417e00
  417e33:	es cdq 
  417e35:	xchg   DWORD PTR [edi-0x69af03e9],edx
  417e3b:	and    eax,0xc3d2fd87
  417e40:	pop    es
  417e41:	jae    0x417e0b
  417e43:	int    0xc5
  417e45:	mov    esi,0xb058cd1a
  417e4a:	xchg   ecx,eax
  417e4b:	fisttp WORD PTR [edi+0x2e]
  417e4e:	dec    esp
  417e4f:	cld    
  417e50:	mov    ah,ch
  417e52:	pop    edx
  417e53:	push   eax
  417e54:	cmp    al,0x25
  417e56:	pop    ebp
  417e57:	push   ebp
  417e58:	xchg   ebx,eax
  417e59:	fs (bad) 
  417e5b:	mov    esp,0x3591eda3
  417e60:	inc    esi
  417e61:	sbb    DWORD PTR [ecx+0x5c2c1d76],0xffffffd0
  417e68:	push   edx
  417e69:	push   edi
  417e6a:	(bad)  
  417e6b:	aas    
  417e6c:	or     BYTE PTR [edi+0x8],ch
  417e6f:	cmp    DWORD PTR [eax],ebx
  417e71:	call   FWORD PTR [ebp-0x53]
  417e74:	js     0x417dfe
  417e76:	lock adc esp,0xffffffbb
  417e7a:	out    dx,al
  417e7b:	rcl    DWORD PTR [eax+0x68be41af],1
  417e81:	xor    eax,0xe93c9ab5
  417e86:	jmp    0x417e8f
  417e88:	in     eax,dx
  417e89:	(bad)  
  417e8a:	in     eax,0x58
  417e8c:	adc    eax,0xcc503e07
  417e91:	and    al,0xff
  417e93:	add    al,BYTE PTR [ecx]
  417e95:	sbb    BYTE PTR ds:0xa2cef1f7,bh
  417e9b:	retf   0xfc58
  417e9e:	inc    edi
  417e9f:	cmp    DWORD PTR [eax+ecx*4],ecx
  417ea2:	mov    al,0x80
  417ea4:	pop    es
  417ea5:	scas   al,BYTE PTR es:[edi]
  417ea6:	sar    BYTE PTR [ebx-0x3d],0x9a
  417eaa:	sub    al,0xd4
  417eac:	or     edi,DWORD PTR [ebx+0x3a]
  417eaf:	lahf   
  417eb0:	inc    edi
  417eb1:	mov    ds:0xfbfd3ab6,al
  417eb6:	dec    ebp
  417eb7:	pop    esi
  417eb8:	clc    
  417eb9:	ret    0xb143
  417ebc:	dec    esi
  417ebd:	fcmovbe st,st(4)
  417ebf:	mov    eax,0xc632716c
  417ec4:	pop    eax
  417ec5:	nop
  417ec6:	jmp    0xbf099cf1
  417ecb:	pop    esp
  417ecc:	or     BYTE PTR [esi-0x4ed7c1f3],dh
  417ed2:	mov    ch,0x9c
  417ed4:	addr16 (bad) 
  417ed6:	mov    ebx,DWORD PTR [esp+ecx*2+0x31]
  417eda:	xchg   edx,eax
  417edb:	test   DWORD PTR [bx-0x58],0xabdf2e6f
  417ee3:	(bad)  
  417ee4:	retf   0x8aa4
  417ee7:	sbb    ah,dl
  417ee9:	mov    eax,0x408a7131
  417eee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417eef:	addr16 push 0xd0e94bc0
  417ef5:	nop    DWORD PTR ds:0xe0a5a6f2
  417efc:	pop    es
  417efd:	fbld   TBYTE PTR cs:0x5c8be9d4
  417f04:	mov    esp,0xa061bf31
  417f09:	into   
  417f0a:	sub    ch,BYTE PTR [ecx-0x175eacaf]
  417f10:	jmp    0x140d:0xc1f2d5bf
  417f17:	ret    0x9749
  417f1a:	clc    
  417f1b:	mov    dh,0x35
  417f1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f1e:	sbb    edx,DWORD PTR [edi+edi*1-0x52]
  417f22:	in     al,0xbf
  417f24:	into   
  417f25:	aas    
  417f26:	and    eax,0xaacaf441
  417f2b:	imul   ecx,DWORD PTR [edx-0x1a],0xb555a9c1
  417f32:	je     0x417f84
  417f34:	cmp    DWORD PTR [ebx],edx
  417f36:	jbe    0x417f02
  417f38:	enter  0xbaca,0x8b
  417f3c:	test   al,0xde
  417f3e:	fisub  DWORD PTR [edi-0x46]
  417f41:	adc    BYTE PTR gs:[edx-0x7108a0d7],dh
  417f48:	stos   BYTE PTR es:[edi],al
  417f49:	test   eax,0x5163abba
  417f4e:	adc    al,BYTE PTR [edx]
  417f50:	mov    DWORD PTR [ebx],0x4c165787
  417f56:	and    eax,0xf5ce35c
  417f5b:	and    ecx,DWORD PTR [edx-0x75442288]
  417f61:	bound  eax,QWORD PTR [ebx-0x232322d7]
  417f67:	loope  0x417f41
  417f69:	jecxz  0x417f94
  417f6b:	lods   eax,DWORD PTR ds:[esi]
  417f6c:	ret    
  417f6d:	test   al,0x53
  417f6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f70:	mov    al,0xf1
  417f72:	mov    eax,ds:0xbbbcc2b3
  417f77:	xor    esp,ecx
  417f79:	sbb    DWORD PTR [esi+0x4ab4b8a9],edx
  417f7f:	aaa    
  417f80:	pop    esi
  417f81:	adc    DWORD PTR [ebx+0x27],ecx
  417f84:	lahf   
  417f85:	(bad)  
  417f86:	sub    ecx,esi
  417f88:	data16 jl 0x417f60
  417f8b:	push   0x1bc4d47f
  417f90:	ins    BYTE PTR es:[edi],dx
  417f91:	in     al,dx
  417f92:	inc    ebp
  417f93:	fcmovnbe st,st(3)
  417f95:	mov    ds:0x3b3804ae,al
  417f9a:	adc    eax,0x7e1eea2
  417f9f:	sub    edx,ebp
  417fa1:	ins    BYTE PTR es:[edi],dx
  417fa2:	xchg   edi,eax
  417fa3:	jle    0x417f30
  417fa5:	mov    ebp,0xae3d78bd
  417faa:	mov    eax,ds:0xfaf7258d
  417faf:	mov    BYTE PTR [edx],dh
  417fb1:	add    esi,esp
  417fb3:	cld    
  417fb4:	test   BYTE PTR [esi-0x17],dh
  417fb7:	lea    ebp,[esi+0x4bcbb4a1]
  417fbd:	test   DWORD PTR [ecx+eiz*1-0x3a],edi
  417fc1:	ds loop 0x417f8d
  417fc4:	gs jae 0x41800b
  417fc7:	inc    ebp
  417fc8:	stc    
  417fc9:	mov    cl,al
  417fcb:	mov    ds:0x3fcc30c7,eax
  417fd0:	popa   
  417fd1:	ins    BYTE PTR es:[edi],dx
  417fd2:	jb     0x417ff9
  417fd4:	xor    al,0x25
  417fd6:	xchg   DWORD PTR [eax+ecx*4],esi
  417fd9:	jp     0x418059
  417fdb:	lds    eax,FWORD PTR [esi-0x45]
  417fde:	xchg   BYTE PTR [ebx+edi*8],dh
  417fe1:	cwde   
  417fe2:	pusha  
  417fe3:	add    eax,0xfa7728e8
  417fe8:	in     eax,0xd3
  417fea:	adc    eax,0xfbd0526f
  417fef:	(bad)  
  417ff0:	fadd   st(2),st
  417ff2:	mov    cl,0xb0
  417ff4:	pushf  
  417ff5:	mov    bl,0x42
  417ff7:	xchg   esp,eax
  417ff8:	add    esi,DWORD PTR [esi]
  417ffa:	inc    ebx
  417ffb:	mov    al,ds:0x4ebaeb9f
  418000:	sahf   
  418001:	jmp    0x417fba
  418003:	mov    ecx,0x57e6d79d
  418008:	out    dx,eax
  418009:	ret    0xc80d
  41800c:	sbb    al,0x89
  41800e:	jge    0x418071
  418010:	pop    es
  418011:	stc    
  418012:	pop    ds
  418013:	bound  esi,QWORD PTR [ebx]
  418015:	xor    esi,eax
  418017:	cwde   
  418018:	push   ebp
  418019:	rcr    DWORD PTR [ebp+0x5f],cl
  41801c:	pop    ecx
  41801d:	dec    esp
  41801e:	jno    0x41803f
  418020:	inc    ecx
  418021:	jnp    0x41809e
  418023:	sbb    ah,BYTE PTR [ebx-0x33edcf9f]
  418029:	jg     0x417fb1
  41802b:	shl    DWORD PTR [ebp-0x2b02f4b1],0xa7
  418032:	sti    
  418033:	sahf   
  418034:	and    ah,BYTE PTR [esp+eax*1]
  418037:	(bad)  
  418038:	sub    eax,0x5b35f29
  41803d:	clc    
  41803e:	xchg   edx,eax
  41803f:	sbb    esp,DWORD PTR [edi-0x353953cc]
  418045:	or     DWORD PTR [eax+0x79],esp
  418048:	mov    ah,0x13
  41804a:	pop    ecx
  41804b:	mov    cl,0xd
  41804d:	push   edi
  41804e:	mov    edx,0x428276e3
  418053:	retf   
  418054:	push   0x23
  418056:	loop   0x4180cf
  418058:	push   esi
  418059:	pop    ebp
  41805a:	sub    DWORD PTR [ecx],eax
  41805c:	out    0x5c,eax
  41805e:	jp     0x4180d9
  418060:	push   ds
  418061:	(bad)  
  418063:	sub    BYTE PTR [eax],ch
  418065:	in     al,dx
  418066:	gs jb  0x418072
  418069:	scas   eax,DWORD PTR es:[edi]
  41806a:	dec    ebx
  41806b:	loope  0x4180bd
  41806d:	push   ecx
  41806e:	mov    esp,0x43e7c201
  418073:	ror    ah,1
  418075:	out    dx,eax
  418076:	lods   ax,WORD PTR ds:[esi]
  418078:	xchg   edx,eax
  418079:	xor    bh,BYTE PTR [esi-0x28]
  41807c:	jo     0x418062
  41807e:	mov    al,0xae
  418080:	xor    DWORD PTR [eax+edi*1+0x44e54f85],edi
  418087:	out    0xe8,al
  418089:	or     eax,0x19f8214c
  41808e:	mov    esp,0x517deea0
  418093:	xchg   esi,eax
  418094:	fs enter 0x3142,0x5c
  418099:	int    0x66
  41809b:	paddsw mm5,QWORD PTR [esi]
  41809e:	(bad)
  4180a2:	push   cs
  4180a3:	push   eax
  4180a4:	or     al,0xac
  4180a6:	loope  0x41803a
  4180a8:	ins    BYTE PTR es:[edi],dx
  4180a9:	mov    ds:0xb3586cb,eax
  4180ae:	add    DWORD PTR ds:0x78f74f24,ebx
  4180b4:	xor    eax,0xb4e1e2ad
  4180b9:	push   edx
  4180ba:	push   es
  4180bb:	mov    ebp,DWORD PTR [eax+0x25]
  4180be:	hlt    
  4180bf:	cdq    
  4180c0:	(bad)  [ebx+0x2ae1fc92]
  4180c6:	lahf   
  4180c7:	xor    al,0x3e
  4180c9:	jno    0x41810d
  4180cb:	add    eax,DWORD PTR [ebp+0x53dd8fb0]
  4180d1:	mov    ch,0x58
  4180d3:	icebp  
  4180d4:	je     0x418137
  4180d6:	retf   
  4180d7:	cmp    al,0x6f
  4180d9:	(bad)  
  4180da:	ret    
  4180db:	mov    cl,0x14
  4180dd:	enter  0x1294,0xf1
  4180e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180e2:	jecxz  0x41814c
  4180e4:	mov    ?,WORD PTR [esi]
  4180e6:	cmp    DWORD PTR [ecx],edx
  4180e8:	popa   
  4180e9:	pop    edx
  4180ea:	(bad)  
  4180eb:	aad    0xb3
  4180ed:	pusha  
  4180ee:	jmp    0x4180fa
  4180f0:	ret    
  4180f1:	imul   esi,ecx,0xbaa6cb76
  4180f7:	cmp    ah,bh
  4180f9:	ss cmp al,0x3a
  4180fc:	cmp    DWORD PTR [eax],ebp
  4180fe:	mov    DWORD PTR [ebx],edi
  418100:	adc    DWORD PTR [edx+0x33],edi
  418103:	xor    ecx,DWORD PTR [ebx+esi*8]
  418106:	mov    bh,0x67
  418108:	nop
  418109:	cs adc eax,0x40b8cf6c
  41810f:	mov    WORD PTR [edx],ds
  418111:	cdq    
  418112:	or     DWORD PTR [edi+0x79c68c99],eax
  418118:	mov    ebp,0x8fb05bb1
  41811d:	ror    DWORD PTR [ebp+eiz*4-0x5c9e163d],cl
  418124:	jmp    0x34371afc
  418129:	fsub   QWORD PTR [eax+0x77]
  41812c:	in     al,dx
  41812d:	adc    cl,BYTE PTR [eax+0x30]
  418130:	cwde   
  418131:	mov    bl,0x9c
  418133:	xchg   ecx,eax
  418134:	stos   DWORD PTR es:[edi],eax
  418135:	mov    cl,0xeb
  418137:	das    
  418138:	sub    al,0x38
  41813a:	je     0x4180d9
  41813c:	fs pop ecx
  41813e:	in     al,0x8d
  418140:	sub    al,0xdf
  418142:	hlt    
  418143:	push   esp
  418144:	push   ecx
  418145:	(bad)  [ebx+edi*2]
  418148:	sahf   
  418149:	lahf   
  41814a:	cs push edx
  41814c:	retf   0x5a15
  41814f:	xchg   esp,eax
  418150:	popf   
  418151:	cwd    
  418153:	pop    ss
  418154:	rcr    dl,cl
  418156:	ficomp DWORD PTR [esi-0x62e9f5ed]
  41815c:	xchg   BYTE PTR [ebx+0x39],bl
  41815f:	ret    
  418160:	call   FWORD PTR [ebx]
  418162:	mov    dl,0xa3
  418164:	test   esp,0x94d19ff5
  41816a:	jmp    0x70ac:0x23bb1258
  418171:	add    DWORD PTR [edx+0x56668729],0xfffffffc
  418178:	inc    eax
  418179:	mov    esp,0xaf7aeeb5
  41817e:	xchg   ebx,eax
  41817f:	xor    cl,BYTE PTR [ebx-0x4198caa6]
  418185:	pop    ebp
  418186:	adc    esi,DWORD PTR [ebx+0x16]
  418189:	mov    bl,0x89
  41818b:	push   ebx
  41818c:	or     eax,0xf61b07c6
  418191:	add    DWORD PTR [ebx*2+0x349e25e7],esp
  418198:	jb     0x41816f
  41819a:	adc    DWORD PTR [ebx+0xd3a4436],edx
  4181a0:	rcr    ebp,1
  4181a2:	in     al,dx
  4181a3:	dec    esp
  4181a4:	jl     0x418195
  4181a6:	pop    es
  4181a7:	(bad)
  4181ab:	imul   DWORD PTR [edx+esi*2]
  4181ae:	in     al,0x34
  4181b0:	push   cs
  4181b1:	push   eax
  4181b2:	mov    cl,0x9
  4181b4:	push   ebp
  4181b5:	das    
  4181b6:	xchg   esi,eax
  4181b7:	add    ebp,edi
  4181b9:	mov    al,BYTE PTR [edx]
  4181bb:	cwde   
  4181bc:	and    ah,BYTE PTR [ecx-0x4a]
  4181bf:	mov    esp,ebx
  4181c1:	push   ebx
  4181c2:	inc    ecx
  4181c3:	jns    0x418174
  4181c5:	jbe    0x4181b6
  4181c7:	mov    cl,0xe3
  4181c9:	(bad)  
  4181ca:	in     al,dx
  4181cb:	int    0x3f
  4181cd:	das    
  4181ce:	adc    cl,bh
  4181d0:	mov    dl,0x3b
  4181d2:	pusha  
  4181d3:	in     al,0x46
  4181d5:	mov    edi,0xeddb5e9f
  4181da:	or     eax,0x7fda79e4
  4181df:	xchg   ebx,eax
  4181e0:	push   ebp
  4181e1:	push   0xffffffae
  4181e3:	dec    ebp
  4181e4:	push   cs
  4181e5:	pop    ebx
  4181e6:	push   0x4c6dc16f
  4181eb:	dec    eax
  4181ec:	mov    bl,0x56
  4181ee:	hlt    
  4181ef:	jge    0x418265
  4181f1:	in     al,0x69
  4181f3:	es or  eax,0x76780cde
  4181f9:	cmp    eax,0x84340436
  4181fe:	ins    BYTE PTR es:[edi],dx
  4181ff:	call   0x29b1:0xb29bea5b
  418206:	mov    ebx,0xef4ce0
  41820b:	xchg   esp,eax
  41820c:	push   0xfffffffa
  41820e:	fcomp  QWORD PTR [esi-0x9]
  418211:	fmulp  st(5),st
  418213:	mov    eax,0x136cf3c5
  418218:	pop    edi
  418219:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41821b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41821c:	push   ecx
  41821d:	loopne 0x41825a
  41821f:	xchg   esi,eax
  418220:	add    edi,DWORD PTR [edx-0x3dedefe1]
  418226:	sahf   
  418227:	xchg   ebx,eax
  418228:	inc    edi
  418229:	fisttp WORD PTR [edi-0x2a]
  41822c:	lahf   
  41822d:	rol    DWORD PTR [ecx*1+0x28a531b0],1
  418234:	repz pop ebp
  418236:	cld    
  418237:	add    BYTE PTR [eax],al
  418239:	clc    
  41823a:	add    al,0x0
  41823c:	add    BYTE PTR [esp+ebp*8],dh
  41823f:	(bad)  
  418240:	lock (bad) 
  418242:	call   0x10952e71
  418247:	jno    0x4181d9
  418249:	mov    esi,0x4d42889d
  41824e:	and    eax,0x28b7d7f8
  418253:	fcom   DWORD PTR [edi+0x11]
  418256:	mov    dh,0xb
  418258:	outs   dx,DWORD PTR ds:[esi]
  418259:	push   es
  41825a:	cli    
  41825b:	pop    ecx
  41825c:	mov    ds:0xfb78c5f0,eax
  418261:	imul   edx,DWORD PTR ds:0xfef72ee1,0xb74202f
  41826b:	fiadd  DWORD PTR [ebx+ebx*8+0x7]
  418270:	(bad)  
  418271:	scas   al,BYTE PTR es:[edi]
  418272:	out    0xb,al
  418274:	(bad)  
  418275:	sbb    DWORD PTR [edx],edx
  418277:	fistp  WORD PTR [edi+edi*2-0x4c]
  41827b:	cdq    
  41827c:	aas    
  41827d:	cld    
  41827e:	cmc    
  41827f:	mov    ch,BYTE PTR [ebx+0x25]
  418282:	stos   DWORD PTR es:[edi],eax
  418283:	je     0x4182c1
  418285:	mul    DWORD PTR [ecx-0x3e]
  418288:	js     0x41824a
  41828a:	ss popf 
  41828c:	or     al,0xdb
  41828e:	mov    edi,0xcb47640e
  418293:	mov    fs,WORD PTR [ebx-0x59]
  418296:	retf   
  418297:	jge    0x41823f
  418299:	pop    ds
  41829a:	or     DWORD PTR [edi+0x783c0c4d],0x28
  4182a1:	mov    al,bh
  4182a3:	pop    ebp
  4182a4:	inc    edx
  4182a5:	mov    ds:0x39a164d9,eax
  4182aa:	adc    DWORD PTR [edi+edx*4+0x10a3cb7b],0xfffffffc
  4182b2:	push   ecx
  4182b3:	addr16 xchg ebp,eax
  4182b5:	cmp    ch,al
  4182b7:	in     eax,0x6e
  4182b9:	mov    dl,al
  4182bb:	mov    DWORD PTR [ebp+0x3c],esp
  4182be:	and    dl,BYTE PTR [ebx]
  4182c0:	out    0x79,al
  4182c2:	sub    bl,bl
  4182c4:	push   0x547b9314
  4182c9:	adc    BYTE PTR [esp+eiz*4],0x6f
  4182cd:	push   ds
  4182ce:	pop    esi
  4182cf:	das    
  4182d0:	xchg   DWORD PTR [ebp-0x128c735],eax
  4182d6:	data16 mov WORD PTR [esi-0x2112ac4f],fs
  4182dd:	pop    ebx
  4182de:	(bad)  
  4182df:	cli    
  4182e0:	rcl    BYTE PTR [edi-0x4df7cd47],1
  4182e6:	add    edx,DWORD PTR [ebx]
  4182e8:	js     0x41827b
  4182ea:	sbb    eax,0x8930f4b4
  4182ef:	jmp    0xfd42375a
  4182f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182f5:	dec    ebx
  4182f6:	scas   eax,DWORD PTR es:[edi]
  4182f7:	xor    ebx,DWORD PTR [edi+edx*8]
  4182fa:	mov    ch,0xd3
  4182fc:	jmp    0x4182a2
  4182fe:	mov    dh,0xb0
  418300:	push   esp
  418301:	imul   DWORD PTR [eax]
  418303:	xchg   ebp,eax
  418304:	push   edi
  418305:	outs   dx,DWORD PTR ds:[esi]
  418306:	fcmovu st,st(2)
  418308:	mov    cl,0x58
  41830a:	adc    al,0xfc
  41830c:	retf   
  41830d:	sub    eax,0xdbe8745c
  418312:	push   es
  418313:	mov    ebp,DWORD PTR [ebx+0x19]
  418316:	mov    edi,ss
  418318:	sbb    eax,0x498d09ce
  41831d:	rcr    BYTE PTR es:[esp+ecx*4+0x2d],0x8d
  418323:	add    al,0x1a
  418325:	popa   
  418326:	dec    ecx
  418327:	adc    bh,ch
  418329:	pusha  
  41832a:	les    edx,FWORD PTR [ebp-0x3bb879ec]
  418330:	mov    gs,eax
  418332:	jno    0x418300
  418334:	mov    esp,0x16f18ca0
  418339:	cli    
  41833a:	mov    dl,0x96
  41833c:	mov    ds:0x2c4a2c06,al
  418341:	add    edi,esp
  418343:	bound  ecx,QWORD PTR [ebp-0x1f4fe882]
  418349:	mov    ds:0xe172bd93,al
  41834e:	rcr    BYTE PTR [esp+eiz*2+0xb],0xe4
  418353:	ffreep st(4)
  418355:	pop    eax
  418356:	mov    ecx,0x48882734
  41835b:	xor    BYTE PTR [esi+0x6a],dl
  41835e:	rol    DWORD PTR [ecx],1
  418360:	dec    ebx
  418361:	add    DWORD PTR [esi-0x25],edx
  418364:	push   ecx
  418365:	mov    cl,0xf5
  418367:	jne    0x4182f7
  418369:	fisubr WORD PTR [ebx+0x23]
  41836c:	into   
  41836d:	je     0x418303
  41836f:	dec    esp
  418370:	pop    edx
  418371:	push   ebx
  418372:	aaa    
  418373:	(bad)
  418376:	cdq    
  418377:	pop    ss
  418378:	enter  0x9bf,0x15
  41837c:	jmp    0x418350
  41837e:	mov    esp,0xc7d61853
  418383:	in     eax,0xa5
  418385:	sbb    ebx,DWORD PTR [ebx]
  418387:	push   ebp
  418388:	and    ecx,0xffffff82
  41838b:	sub    bl,BYTE PTR [esi-0x30]
  41838e:	retf   
  41838f:	xchg   esp,eax
  418390:	retf   
  418391:	aaa    
  418392:	xchg   esi,eax
  418393:	aam    0xd4
  418395:	lods   eax,DWORD PTR ds:[esi]
  418396:	sbb    edi,DWORD PTR ds:0xef5a3260
  41839c:	dec    esi
  41839d:	out    dx,al
  41839e:	or     al,0xc5
  4183a0:	dec    esp
  4183a1:	adc    eax,DWORD PTR [esi]
  4183a3:	pop    edx
  4183a4:	mov    esi,0xb34234f4
  4183a9:	lea    edi,[esi+0x7769fe4e]
  4183af:	in     eax,dx
  4183b0:	nop
  4183b1:	jp     0x41842c
  4183b3:	pop    es
  4183b4:	mov    edi,0xc65d4111
  4183b9:	ja     0x4183ea
  4183bb:	push   ds
  4183bc:	call   0x6a8:0xce5280bc
  4183c3:	jp     0x41838a
  4183c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183c6:	push   ecx
  4183c7:	fs push 0xe1f7977e
  4183cd:	aam    0xd6
  4183cf:	dec    ebx
  4183d0:	mov    ch,0x26
  4183d2:	lods   al,BYTE PTR ds:[esi]
  4183d3:	mov    esi,0x89fe06ab
  4183d8:	mov    bh,0x36
  4183da:	inc    ebx
  4183db:	add    ebx,DWORD PTR [ecx-0x2cf73b34]
  4183e1:	adc    al,BYTE PTR [ecx-0x721e5698]
  4183e7:	cmp    ecx,DWORD PTR [edx]
  4183e9:	mov    bl,0xfe
  4183eb:	add    DWORD PTR [ebx+0x29169f6e],0x2167e1c6
  4183f5:	pop    ecx
  4183f6:	and    DWORD PTR [ebp+0x43694928],eax
  4183fc:	jae    0x418467
  4183fe:	mov    bh,0x24
  418400:	or     BYTE PTR [eax+0x33],dh
  418403:	in     eax,dx
  418404:	call   0x6932:0x1a3e4c07
  41840b:	jle    0x4183fb
  41840d:	fucomp st(2)
  41840f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418410:	out    0xd0,al
  418412:	sbb    dl,BYTE PTR [edi]
  418414:	out    dx,eax
  418415:	dec    ebx
  418416:	add    ecx,DWORD PTR [ebp-0x65375e89]
  41841c:	cld    
  41841d:	imul   eax,DWORD PTR [esi-0x6a],0x93ff04bc
  418424:	mov    ebx,0xcf2355ae
  418429:	sbb    DWORD PTR [ebp+eax*4-0x2c],esp
  41842d:	mov    ebx,0x9507a789
  418432:	sbb    ch,BYTE PTR ds:0x670ada42
  418438:	mov    ebx,0x23a8345b
  41843d:	adc    cl,BYTE PTR [ebx-0x5b899db6]
  418443:	sbb    DWORD PTR [edx+esi*8],esp
  418446:	sahf   
  418447:	sbb    eax,0x1503b305
  41844c:	ja     0x418459
  41844e:	stos   DWORD PTR es:[edi],eax
  41844f:	mov    al,0x1f
  418451:	lahf   
  418452:	pop    es
  418453:	shl    cl,0xaa
  418456:	inc    edi
  418457:	(bad)  
  418459:	fistp  DWORD PTR [ecx+0x589dbde7]
  41845f:	sti    
  418460:	jne    0x41848a
  418462:	imul   eax,DWORD PTR [eax-0x22ceeb81],0xffffffc3
  418469:	mov    ss,esp
  41846b:	in     eax,dx
  41846c:	jns    0x41843a
  41846e:	push   edi
  41846f:	pop    ebx
  418470:	add    edx,DWORD PTR [edx+0x4f]
  418473:	and    bl,bh
  418475:	push   es
  418476:	nop
  418477:	aaa    
  418478:	dec    eax
  418479:	call   0xb82:0xed4d5c
  418480:	inc    esp
  418481:	pop    ebx
  418482:	aam    0x99
  418484:	mov    bh,0xf9
  418486:	stos   BYTE PTR es:[edi],al
  418487:	stc    
  418488:	rcr    DWORD PTR [ecx],0x15
  41848b:	xor    BYTE PTR [ecx],ah
  41848d:	call   0x2631:0x7cbb6311
  418494:	mov    esi,0xf53b1b24
  418499:	inc    ebp
  41849a:	mov    fs,WORD PTR [ecx-0x44]
  41849d:	push   ds
  41849e:	mov    esi,DWORD PTR [eax+0x9]
  4184a1:	sbb    al,0xda
  4184a3:	femms  
  4184a5:	in     al,dx
  4184a6:	xchg   ecx,eax
  4184a7:	and    BYTE PTR [ebp-0x42],dh
  4184aa:	test   eax,0xdbc298c1
  4184af:	inc    edx
  4184b0:	mov    esi,0x90767d67
  4184b5:	xchg   ebx,eax
  4184b6:	sbb    bh,bl
  4184b8:	mov    esp,0xae28f4f9
  4184bd:	ss iret 
  4184bf:	mov    BYTE PTR [esi],cl
  4184c1:	inc    edi
  4184c2:	or     BYTE PTR [ecx+0x46231b6e],ah
  4184c8:	(bad)  
  4184c9:	and    ecx,DWORD PTR [edi+0x77]
  4184cc:	out    0x15,eax
  4184ce:	mov    eax,ds:0x3e8a4c81
  4184d3:	mov    bl,0x2
  4184d5:	mov    al,0x3f
  4184d7:	add    dh,BYTE PTR [ebp+ebp*1-0x315a1c36]
  4184de:	pop    ss
  4184df:	scas   al,BYTE PTR es:[edi]
  4184e0:	or     al,0xfc
  4184e2:	stc    
  4184e3:	jae    0x41849c
  4184e5:	cwde   
  4184e6:	pusha  
  4184e7:	scas   eax,DWORD PTR es:[edi]
  4184e8:	sub    edi,eax
  4184ea:	ficomp WORD PTR [ecx]
  4184ec:	xlat   BYTE PTR ds:[ebx]
  4184ed:	push   0x65
  4184ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184f0:	in     eax,0x42
  4184f2:	lds    eax,FWORD PTR [ecx+0x63]
  4184f5:	sub    eax,0x58d0ddc8
  4184fa:	mov    dh,0xdc
  4184fc:	out    dx,eax
  4184fd:	std    
  4184fe:	mov    DWORD PTR [ecx+ebp*2-0x6c],ecx
  418502:	jmp    DWORD PTR [ebx-0x7f]
  418505:	add    ah,cl
  418507:	mov    ecx,DWORD PTR [esi]
  418509:	dec    ebp
  41850a:	and    bl,BYTE PTR es:[ebp-0x69dee88b]
  418511:	les    esp,FWORD PTR [edi-0x70e771c7]
  418517:	dec    eax
  418518:	dec    ecx
  418519:	fwait
  41851a:	pop    eax
  41851b:	inc    edx
  41851c:	or     eax,0x82a3ed7f
  418521:	rcl    BYTE PTR [ebx+0x445597b2],1
  418527:	jno    0x418515
  418529:	mov    bl,0x8f
  41852b:	xchg   ebp,eax
  41852c:	xchg   esp,eax
  41852d:	jnp    0x4184de
  41852f:	mov    al,ds:0x9e38ba59
  418534:	adc    DWORD PTR [ebp-0x694a3873],edi
  41853a:	nop
  41853b:	das    
  41853c:	pop    esi
  41853d:	push   esp
  41853e:	lock fisub WORD PTR [edx]
  418541:	jno    0x4184ee
  418543:	xor    edi,esp
  418545:	xchg   edx,eax
  418546:	std    
  418547:	jg     0x418525
  418549:	mov    eax,ds:0xe0021f63
  41854e:	(bad)  
  41854f:	cld    
  418550:	sub    eax,0x5adb6c85
  418555:	cld    
  418556:	inc    ebp
  418557:	mov    ebp,0x5d3de690
  41855c:	in     al,dx
  41855d:	xchg   DWORD PTR [ebx+0x4168ff32],edi
  418563:	inc    edx
  418564:	add    dh,bl
  418566:	out    dx,al
  418567:	rol    DWORD PTR es:[ebx-0x25],1
  41856b:	sbb    BYTE PTR [eax],bh
  41856d:	(bad)  
  41856e:	in     al,dx
  41856f:	push   esi
  418570:	fmul   DWORD PTR ss:[ecx]
  418573:	inc    ebx
  418574:	hlt    
  418575:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418576:	ins    BYTE PTR es:[edi],dx
  418577:	fisub  WORD PTR [edi]
  418579:	es out 0xdc,al
  41857c:	out    dx,al
  41857d:	lea    ecx,[esi]
  41857f:	retf   
  418580:	mul    DWORD PTR [ecx+ebp*4+0x3f857342]
  418587:	jge    0x4185c1
  418589:	shl    ah,1
  41858b:	pop    ss
  41858c:	mov    bl,0xe0
  41858e:	test   eax,0x6047950d
  418593:	dec    ecx
  418594:	push   edi
  418595:	repz xchg edx,eax
  418597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418598:	mov    edi,0x775f66b
  41859d:	or     al,0xc3
  41859f:	xor    ch,BYTE PTR [edx-0x4f]
  4185a2:	jge    0x418586
  4185a4:	hlt    
  4185a5:	lea    edx,[ebx+0xe]
  4185a8:	popa   
  4185a9:	jl     0x418628
  4185ab:	sbb    al,0x3c
  4185ad:	rcl    BYTE PTR [ebp-0x6f2dbbc6],cl
  4185b3:	pop    ds
  4185b4:	xor    DWORD PTR [ecx-0x4a],ecx
  4185b7:	mov    esi,0x7d10aae9
  4185bc:	jmp    0x418558
  4185be:	dec    ebx
  4185bf:	sub    BYTE PTR [edi-0x61e4ec72],bl
  4185c5:	push   es
  4185c6:	xchg   BYTE PTR [ebp+0x63],dh
  4185c9:	sbb    al,BYTE PTR ds:0x2a945e6
  4185cf:	ds stos DWORD PTR es:[edi],eax
  4185d1:	dec    esi
  4185d2:	loopne 0x41856f
  4185d4:	sar    DWORD PTR [eax-0x5e],1
  4185d7:	and    bl,dl
  4185d9:	push   ds
  4185da:	fwait
  4185db:	scas   eax,DWORD PTR es:[edi]
  4185dc:	into   
  4185dd:	add    bh,ah
  4185df:	mov    esi,0xa4c0a72d
  4185e4:	hlt    
  4185e5:	in     eax,0xce
  4185e7:	frstor [edx+0x4c388954]
  4185ed:	(bad)  
  4185ee:	aad    0x3a
  4185f0:	jno    0x418630
  4185f2:	in     al,0x94
  4185f4:	(bad)  
  4185f5:	out    dx,eax
  4185f6:	arpl   WORD PTR [ecx+0x55a653ec],bp
  4185fc:	pop    ebp
  4185fd:	sbb    BYTE PTR [eax-0x32b01a89],0xfe
  418604:	mov    es,ebp
  418606:	dec    edi
  418607:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418608:	out    dx,al
  418609:	mov    BYTE PTR [esi-0x454f6e6e],dh
  41860f:	retf   0x2a54
  418612:	int3   
  418613:	or     ebp,DWORD PTR ds:0xe2853776
  418619:	aas    
  41861a:	call   0xc40f:0x91390db2
  418621:	stos   BYTE PTR es:[edi],al
  418622:	jle    0x4185a8
  418624:	sub    DWORD PTR [edi+0x49],edi
  418627:	push   ebp
  418628:	stc    
  418629:	int    0xe5
  41862b:	lods   eax,DWORD PTR ds:[esi]
  41862c:	mov    dl,0x46
  41862e:	mov    dl,0xd0
  418630:	es dec esp
  418632:	add    DWORD PTR [ecx+eax*2-0x80],ebp
  418636:	int3   
  418637:	push   DWORD PTR [esi+ecx*8-0x63]
  41863b:	ja     0x418668
  41863d:	jae    0x41865d
  41863f:	push   ebp
  418640:	das    
  418641:	pushf  
  418642:	icebp  
  418643:	lods   eax,DWORD PTR ds:[esi]
  418644:	stc    
  418645:	cmp    bl,bl
  418647:	sbb    DWORD PTR [esi+edi*4-0xf296d2f],esp
  41864e:	jb     0x418672
  418650:	clc    
  418651:	push   es
  418652:	sub    dh,BYTE PTR [eax-0x47]
  418655:	retf   0x1cde
  418658:	fnstenv [ecx]
  41865a:	std    
  41865b:	cmp    dl,al
  41865d:	in     al,0xc4
  41865f:	cmp    eax,0xbf915f98
  418664:	and    BYTE PTR [esi+0x40],bh
  418667:	or     eax,DWORD PTR [edx+0x62d78c8e]
  41866d:	lods   eax,DWORD PTR ds:[esi]
  41866e:	mov    fs,WORD PTR [edx]
  418670:	imul   esp,DWORD PTR ds:0xc476c3a9,0xa1842c4e
  41867a:	(bad)  [edi]
  41867c:	mov    bh,bh
  41867e:	sbb    dl,BYTE PTR [ebp+0x76243b30]
  418684:	(bad)  
  418685:	cmp    DWORD PTR [ecx-0x3b06215d],esi
  41868b:	add    al,0xfb
  41868d:	popa   
  41868e:	sbb    eax,0x82fd65c1
  418693:	ret    
  418694:	aad    0xfc
  418696:	pusha  
  418697:	xchg   edi,eax
  418698:	xchg   eax,edi
  41869a:	or     eax,0x56da3b80
  41869f:	sub    BYTE PTR [ebx+0x7b],0x37
  4186a3:	mov    esp,0xb97ea2a4
  4186a8:	lock shl BYTE PTR [edx-0x5d],0x5
  4186ad:	add    al,0x1d
  4186af:	in     al,0x6d
  4186b1:	lahf   
  4186b2:	adc    BYTE PTR [esi],ah
  4186b4:	in     eax,dx
  4186b5:	les    ebx,FWORD PTR [edx]
  4186b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186b8:	out    dx,eax
  4186b9:	push   ecx
  4186ba:	cmp    al,0xfa
  4186bc:	xchg   DWORD PTR [edi-0x77],eax
  4186bf:	mov    ebx,0xca43647b
  4186c4:	fdiv   DWORD PTR [ecx-0x43]
  4186c7:	cwde   
  4186c8:	rol    DWORD PTR [ecx],1
  4186ca:	xchg   esi,eax
  4186cb:	inc    ebp
  4186cc:	pop    esi
  4186cd:	sub    edx,ecx
  4186cf:	pop    ebp
  4186d0:	cmp    eax,0xcfb11849
  4186d5:	fisub  DWORD PTR [esp+eax*2+0x3e]
  4186d9:	call   0xb2e89ef3
  4186de:	sub    ecx,DWORD PTR [ecx-0x1faaa18]
  4186e4:	aas    
  4186e5:	mov    ds:0x3c0cb9af,al
  4186ea:	mov    dh,0x43
  4186ec:	adc    dh,al
  4186ee:	scas   al,BYTE PTR es:[edi]
  4186ef:	scas   eax,DWORD PTR es:[edi]
  4186f0:	inc    eax
  4186f1:	in     al,dx
  4186f2:	sub    DWORD PTR [ebx+0x12af065e],0x26
  4186f9:	cdq    
  4186fa:	lock jbe 0x41873b
  4186fd:	setns  BYTE PTR [esi]
  418700:	and    eax,0x6129b02c
  418705:	xor    eax,0x6fd2c4d
  41870a:	sub    BYTE PTR [esi+ebp*2+0x7f73fc15],0x86
  418712:	xlat   BYTE PTR ds:[ebx]
  418713:	sub    al,0xbf
  418715:	into   
  418716:	outs   dx,DWORD PTR ds:[esi]
  418717:	out    0x4b,al
  418719:	cmc    
  41871a:	sbb    bh,ch
  41871c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41871d:	rol    DWORD PTR [ebx],0xae
  418720:	jg     0x418748
  418722:	lea    edi,ds:0xde65ff0d
  418729:	jo     0x41871b
  41872b:	mov    ebx,0x9a6d8591
  418730:	jmp    0x418704
  418732:	fucomi st,st(2)
  418734:	pop    edi
  418735:	xchg   esi,eax
  418736:	cmp    eax,0xffebb562
  41873b:	xlat   BYTE PTR ds:[ebx]
  41873c:	aas    
  41873d:	mov    ecx,0x378c6229
  418742:	push   cs
  418743:	fbstp  TBYTE PTR [esi+0x10155]
  418749:	clc    
  41874a:	add    al,0x0
  41874c:	add    BYTE PTR [edi],ch
  41874e:	(bad)  
  41874f:	jmp    0x2b2:0x306a236a
  418756:	push   edi
  418757:	jmp    0x8ef12604
  41875c:	std    
  41875d:	out    dx,eax
  41875e:	xchg   edx,eax
  41875f:	mov    BYTE PTR [edi+ecx*4],cl
  418762:	cld    
  418763:	dec    eax
  418764:	cld    
  418765:	jbe    0x418779
  418767:	add    edx,DWORD PTR [ebx]
  418769:	cmp    BYTE PTR ds:0x38600c09,al
  41876f:	and    DWORD PTR [esi-0xbeb8a2a],ebx
  418775:	gs mov bl,0xc8
  418778:	mov    ebp,0x6bddf029
  41877d:	test   al,0x79
  41877f:	mov    al,0x19
  418781:	dec    ebx
  418782:	(bad)  
  418784:	lock in al,0x48
  418787:	xor    ah,BYTE PTR [ebx-0xd3f990]
  41878d:	sbb    DWORD PTR [ebx+0x5],0xe949dc4a
  418794:	or     al,0xc1
  418796:	imul   ecx,DWORD PTR [ebx-0x53],0xfffffffd
  41879a:	in     eax,0xd7
  41879c:	ins    BYTE PTR es:[edi],dx
  41879d:	dec    esi
  41879e:	xchg   edx,eax
  41879f:	pop    eax
  4187a0:	in     eax,dx
  4187a1:	and    al,BYTE PTR [eax-0x7b731467]
  4187a7:	xchg   ebx,eax
  4187a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187a9:	fs ins DWORD PTR es:[edi],dx
  4187ab:	enter  0xd28c,0xac
  4187af:	xor    ebp,ecx
  4187b1:	adc    DWORD PTR [edi-0x71],esp
  4187b4:	inc    edx
  4187b5:	iret   
  4187b6:	mov    ah,0x8a
  4187b8:	jno    0x418752
  4187ba:	xor    BYTE PTR [esi+0xee87bb4],dh
  4187c0:	jmp    0x418791
  4187c2:	dec    eax
  4187c3:	mov    eax,0x3083d5d8
  4187c8:	mov    bl,0x25
  4187ca:	(bad)  
  4187cb:	xor    eax,0x34b99940
  4187d0:	imul   ebp,DWORD PTR [edi],0xffffff8f
  4187d3:	ror    BYTE PTR [edx-0x1c],0xe0
  4187d7:	popf   
  4187d8:	lods   al,BYTE PTR ds:[esi]
  4187d9:	test   DWORD PTR [edx],ebp
  4187db:	sbb    ah,bh
  4187dd:	fst    DWORD PTR [edx-0x1d535b66]
  4187e3:	ins    BYTE PTR es:[edi],dx
  4187e4:	mul    BYTE PTR [esi+edx*8]
  4187e7:	dec    edi
  4187e8:	dec    edx
  4187e9:	and    dl,0xef
  4187ec:	push   ecx
  4187ed:	xor    dh,BYTE PTR [edi+edi*1]
  4187f0:	mov    dl,0xf1
  4187f2:	repz sub DWORD PTR [eax+0xffd25f],edi
  4187f9:	rol    BYTE PTR [ebx],1
  4187fb:	call   0xbd1a:0x17b4a992
  418802:	jg     0x4187ef
  418804:	xor    DWORD PTR [esp+ebp*1],ecx
  418807:	xchg   ebp,eax
  418808:	les    ecx,FWORD PTR [eax]
  41880a:	or     al,ch
  41880c:	pop    ss
  41880d:	loope  0x41887c
  41880f:	mov    edx,0x14fedd01
  418814:	mov    ebp,DWORD PTR [ecx+0x43]
  418817:	xor    eax,0x58a1a236
  41881c:	lea    edi,[edi+eax*2]
  41881f:	mov    ah,0xfa
  418821:	lods   eax,DWORD PTR ds:[esi]
  418822:	cli    
  418823:	shr    BYTE PTR ds:0x7a21dd1b,cl
  418829:	sub    ebx,DWORD PTR [edi+0x1c5bda40]
  41882f:	fisubr WORD PTR [edx-0x69]
  418832:	int3   
  418833:	adc    BYTE PTR [esi],ah
  418835:	or     eax,0x2eeff518
  41883a:	das    
  41883b:	push   edi
  41883c:	and    DWORD PTR [ecx],ecx
  41883e:	dec    ebp
  41883f:	xor    DWORD PTR [esi-0x32bfc965],ebx
  418845:	push   ebp
  418846:	cdq    
  418847:	pop    ebp
  418848:	inc    ebx
  418849:	mov    ds:0x163357b8,eax
  41884e:	and    eax,0x66d98b70
  418853:	aad    0xeb
  418855:	icebp  
  418856:	leave  
  418857:	aaa    
  418858:	mov    ah,0x9c
  41885a:	mov    bh,0x53
  41885c:	aam    0xa6
  41885e:	lock imul ecx,DWORD PTR ds:0xb2e027dc,0xffffffb7
  418867:	adc    eax,0x4458a70d
  41886c:	daa    
  41886d:	cmp    ebp,DWORD PTR [ebx-0x668dc633]
  418873:	xchg   BYTE PTR [edi+0x586e826e],cl
  418879:	rcl    DWORD PTR [eax+0x90b5f40],cl
  41887f:	fstp   QWORD PTR ds:0xce624fa0
  418885:	jnp    0x41881a
  418887:	ret    0x3742
  41888a:	rol    DWORD PTR [esi],cl
  41888c:	add    DWORD PTR [eax],ecx
  41888e:	leave  
  41888f:	std    
  418890:	retf   0x3b86
  418893:	mov    esp,0xb0375932
  418898:	inc    BYTE PTR [eax-0x40df7ad6]
  41889e:	xchg   edi,eax
  41889f:	cwde   
  4188a0:	pop    esi
  4188a1:	(bad)  
  4188a2:	xlat   BYTE PTR ds:[ebx]
  4188a3:	std    
  4188a4:	push   ebx
  4188a5:	aas    
  4188a6:	ds push ebp
  4188a8:	pop    eax
  4188a9:	fnstenv [esi-0x227a4eef]
  4188af:	test   al,0x6b
  4188b1:	xchg   bl,dh
  4188b3:	scas   al,BYTE PTR es:[edi]
  4188b4:	loop   0x4188f3
  4188b6:	paddw  mm6,QWORD PTR [eax-0x70]
  4188ba:	fdivr  QWORD PTR [ebx-0x62]
  4188bd:	xor    ebx,DWORD PTR [edx+0x72ec47ec]
  4188c3:	mov    ds:0xf3c5a9b,al
  4188c8:	jge    0x4188fc
  4188ca:	mov    al,0x2d
  4188cc:	push   cs
  4188cd:	and    al,0x5
  4188cf:	aam    0x12
  4188d1:	fnstcw WORD PTR [ebx+0x671c6c2c]
  4188d7:	cld    
  4188d8:	int    0x1a
  4188da:	(bad)  
  4188db:	lahf   
  4188dc:	fld    DWORD PTR [esi+0x288235d8]
  4188e2:	pop    esp
  4188e3:	mov    bh,BYTE PTR [ebp+0x4d]
  4188e6:	sti    
  4188e7:	jne    0x418951
  4188e9:	in     eax,0x4e
  4188eb:	jns    0x418910
  4188ed:	(bad)  
  4188ee:	int    0x91
  4188f0:	jle    0x41896d
  4188f2:	push   es
  4188f3:	jo     0x418939
  4188f5:	mov    WORD PTR [edx-0xc9d8547],fs
  4188fb:	dec    esi
  4188fc:	jbe    0x418930
  4188fe:	or     eax,0xf5a0b270
  418903:	shr    BYTE PTR [esi-0x27a3bb61],cl
  418909:	push   es
  41890a:	mov    cl,0xfa
  41890c:	pop    ds
  41890d:	(bad)  
  41890e:	popa   
  41890f:	call   0x4f68:0xa413262f
  418916:	call   0x6e15:0x123a7456
  41891d:	daa    
  41891e:	test   al,0x26
  418920:	idiv   DWORD PTR [edi-0x5b]
  418923:	adc    al,0xfa
  418925:	int3   
  418926:	test   eax,0xd632a046
  41892b:	in     al,dx
  41892c:	inc    esi
  41892d:	push   ebx
  41892e:	call   DWORD PTR [edx]
  418930:	loopne 0x4188c1
  418932:	or     eax,0xbcbf48fb
  418937:	(bad)  [edi-0x4a2e72f8]
  41893d:	mov    eax,ds:0xbba7e84b
  418942:	scas   eax,DWORD PTR es:[edi]
  418943:	clc    
  418944:	xchg   ebx,eax
  418945:	push   ss
  418946:	jo     0x418941
  418948:	dec    DWORD PTR [esp+eax*4+0xf6f1a12]
  41894f:	mov    ecx,0x2ab7abf7
  418954:	fs iret 
  418956:	inc    ebp
  418957:	xchg   edx,eax
  418958:	je     0x4188e5
  41895a:	inc    esi
  41895b:	sbb    eax,DWORD PTR ss:[eax+0x74]
  41895f:	dec    ebx
  418960:	pushf  
  418961:	daa    
  418962:	in     al,0x41
  418964:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418965:	and    dl,bl
  418967:	pop    ebx
  418968:	jae    0x4189c2
  41896a:	aad    0xe4
  41896c:	jnp    0x4189ec
  41896e:	sub    DWORD PTR [ebx],0x251f3a11
  418974:	push   edi
  418975:	pushf  
  418976:	inc    edi
  418977:	aad    0xcb
  418979:	into   
  41897a:	outs   dx,DWORD PTR ds:[esi]
  41897b:	xor    BYTE PTR [esi-0x26437808],dh
  418981:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418982:	sbb    al,0xd0
  418984:	mov    gs,WORD PTR [esi]
  418986:	out    dx,eax
  418987:	add    al,0xb9
  418989:	retf   
  41898a:	sbb    al,0x76
  41898c:	push   eax
  41898d:	scas   al,BYTE PTR es:[edi]
  41898e:	pop    ebp
  41898f:	mov    ds:0xe0afad92,al
  418994:	mov    bl,0xee
  418996:	ret    
  418997:	mov    ?,WORD PTR [eax+0x25]
  41899a:	jmp    0x4ad3acef
  41899f:	popaw  
  4189a1:	leave  
  4189a2:	iret   
  4189a3:	sbb    BYTE PTR [eax-0x7a],bh
  4189a6:	fdivrp st(5),st
  4189a8:	inc    esi
  4189a9:	or     ecx,DWORD PTR [eax-0x3e]
  4189ac:	loop   0x4189ea
  4189ae:	pop    ecx
  4189af:	or     DWORD PTR [ebx+0x22be95f7],ebp
  4189b5:	idiv   DWORD PTR [ebx+0x7e9b009]
  4189bb:	lods   al,BYTE PTR ds:[esi]
  4189bc:	and    bh,dl
  4189be:	cmp    eax,0x58d38025
  4189c3:	mov    ebx,0xee90f7a6
  4189c8:	mov    ch,BYTE PTR [esi+0x49]
  4189cb:	mov    DWORD PTR [ebp+esi*2+0x68c9a245],esi
  4189d2:	popf   
  4189d3:	loopne 0x418a42
  4189d5:	(bad)  
  4189d6:	mov    esp,edx
  4189d8:	or     eax,0xde3571f9
  4189dd:	sbb    esi,DWORD PTR [edx-0x3ef5d7e6]
  4189e3:	mov    ch,0x11
  4189e5:	sub    bl,bl
  4189e7:	mov    eax,ds:0xb3ffd8e4
  4189ec:	scas   al,BYTE PTR es:[edi]
  4189ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189ee:	mov    al,0xe3
  4189f0:	sbb    cl,BYTE PTR [ecx]
  4189f2:	ret    0xd457
  4189f5:	xchg   bx,ax
  4189f7:	call   0x83d462d6
  4189fc:	test   al,0x1
  4189fe:	clc    
  4189ff:	cmp    BYTE PTR [ecx+eiz*2+0x2548ba0b],al
  418a06:	sbb    BYTE PTR [edi-0x1e19c2bb],ah
  418a0c:	xchg   ebp,eax
  418a0d:	mov    al,0x2a
  418a0f:	scas   eax,DWORD PTR es:[edi]
  418a10:	sbb    al,BYTE PTR [ebp+0x3f67a9ba]
  418a16:	and    bh,BYTE PTR [ecx+0x52]
  418a19:	(bad)  
  418a1a:	or     eax,0x12b96e64
  418a1f:	cmc    
  418a20:	dec    eax
  418a21:	leave  
  418a22:	nop
  418a23:	(bad)  
  418a24:	mov    dh,0xda
  418a27:	xor    al,0xc2
  418a29:	jno    0x4189c3
  418a2b:	xor    ecx,ebp
  418a2d:	xor    dh,BYTE PTR [esi+0x4a16139f]
  418a33:	push   ecx
  418a34:	popf   
  418a35:	dec    ebx
  418a36:	out    0x9d,eax
  418a38:	xchg   eax,ebx
  418a3a:	lds    ebp,FWORD PTR [esi]
  418a3c:	inc    ebx
  418a3d:	fnsave [ebp-0x3fd9fc5]
  418a43:	stos   BYTE PTR es:[edi],al
  418a44:	xchg   edi,eax
  418a45:	jne    0x418a43
  418a47:	dec    edi
  418a48:	pusha  
  418a49:	test   eax,0x2aa161db
  418a4e:	addr16 aas 
  418a50:	jmp    0x418a93
  418a52:	adc    eax,edi
  418a54:	cwde   
  418a55:	sub    eax,0xe7a2a019
  418a5a:	jne    0x418a0c
  418a5c:	mov    ds:0xfa7a5a74,eax
  418a61:	dec    ebp
  418a62:	retf   
  418a63:	sub    cl,BYTE PTR [edx]
  418a65:	push   edx
  418a66:	rcr    BYTE PTR [ebp-0x681c0a3c],cl
  418a6c:	push   cs
  418a6d:	sub    DWORD PTR [edx],eax
  418a6f:	sub    eax,0xf501ee2a
  418a74:	sti    
  418a75:	mov    dh,0xfb
  418a77:	sahf   
  418a78:	test   eax,0x9f9000c3
  418a7d:	int3   
  418a7e:	call   0xdf004f5d
  418a83:	daa    
  418a84:	dec    ebx
  418a85:	sub    WORD PTR [ebx+0x14253e6e],sp
  418a8c:	jecxz  0x418a38
  418a8e:	or     al,0x31
  418a90:	leave  
  418a91:	xor    esi,DWORD PTR [esi-0x32]
  418a94:	sub    DWORD PTR [eax],edi
  418a96:	mov    eax,ds:0xa30c9211
  418a9b:	inc    eax
  418a9c:	or     ecx,DWORD PTR [ebx-0x29]
  418a9f:	pushf  
  418aa0:	test   BYTE PTR [edi+0x40],bh
  418aa3:	mov    ch,0x40
  418aa5:	pop    edx
  418aa6:	(bad)  
  418aa7:	xchg   ecx,eax
  418aa8:	mov    ds:0x274b303b,eax
  418aad:	or     BYTE PTR [eax-0x6d],dl
  418ab0:	repnz mov bh,dl
  418ab3:	inc    edi
  418ab4:	aas    
  418ab5:	out    0x1b,al
  418ab7:	cdq    
  418ab8:	aam    0xa9
  418aba:	xor    al,0x2a
  418abc:	repz dec esi
  418abe:	lods   eax,DWORD PTR ds:[esi]
  418abf:	pop    ss
  418ac0:	xchg   ebp,eax
  418ac1:	dec    esi
  418ac2:	retf   
  418ac3:	push   ecx
  418ac4:	ret    0xbf42
  418ac7:	cmp    DWORD PTR [eax+0x15],esp
  418aca:	ret    0xed31
  418acd:	ds push edi
  418acf:	sub    BYTE PTR [ebp+0x2cae5626],dl
  418ad5:	retf   0xea42
  418ad8:	adc    edi,DWORD PTR [edx-0x4c]
  418adb:	pop    es
  418adc:	add    BYTE PTR [ebx-0x532a29f6],ch
  418ae2:	in     al,dx
  418ae3:	jne    0x418b60
  418ae5:	retf   
  418ae6:	imul   esi,DWORD PTR [edx],0xfffffff8
  418ae9:	push   ds
  418aea:	cmp    BYTE PTR [edx],cl
  418aec:	icebp  
  418aed:	jmp    0x418ace
  418aef:	xor    al,0x25
  418af1:	jne    0x418b3e
  418af3:	cli    
  418af4:	xor    BYTE PTR [ebx+0x24],dh
  418af7:	fldenv [edx+0x8]
  418afa:	repz (bad) 
  418afc:	adc    edi,ebx
  418afe:	or     edi,DWORD PTR [edx+0x2e9ae4e2]
  418b04:	dec    eax
  418b05:	push   edi
  418b06:	pop    edx
  418b07:	or     DWORD PTR [esi+edi*4-0x70],ebp
  418b0b:	dec    edx
  418b0c:	stc    
  418b0d:	push   es
  418b0e:	pop    ebx
  418b0f:	fsubr  st,st(1)
  418b11:	icebp  
  418b12:	xor    ebx,DWORD PTR ss:[esi+0x37ee59ee]
  418b19:	das    
  418b1a:	xchg   esi,eax
  418b1b:	xor    eax,0xe4649ed
  418b20:	(bad)  
  418b21:	sbb    eax,0x100e8204
  418b26:	pop    ds
  418b27:	ins    DWORD PTR es:[edi],dx
  418b28:	enter  0x58,0x6
  418b2c:	aas    
  418b2d:	(bad)  
  418b2e:	jne    0x418b4d
  418b30:	sub    dl,dl
  418b32:	pop    eax
  418b33:	push   ds
  418b34:	add    eax,0x752ca378
  418b39:	ret    
  418b3a:	sbb    ebx,esi
  418b3c:	or     ah,BYTE PTR [esi-0x3a]
  418b3f:	sahf   
  418b40:	sbb    BYTE PTR [edi+0x64],0xb1
  418b44:	push   0x13a9ae86
  418b49:	(bad)  
  418b4a:	sar    DWORD PTR [ecx-0x53cc186e],cl
  418b50:	popf   
  418b51:	loopne 0x418b97
  418b53:	inc    esp
  418b54:	cdq    
  418b55:	mov    edi,eax
  418b57:	pop    ecx
  418b58:	test   BYTE PTR [eax+0x3111b2a7],0x25
  418b5f:	jmp    0x2459e8eb
  418b64:	lock push ds
  418b66:	in     al,dx
  418b67:	fld    QWORD PTR [eax-0x39]
  418b6a:	or     BYTE PTR [edx+0x9],ah
  418b6d:	sub    ah,ch
  418b6f:	add    al,BYTE PTR [esi]
  418b71:	mov    ebx,0x73a97b60
  418b76:	push   eax
  418b77:	xchg   esp,eax
  418b78:	(bad)  
  418b79:	aad    0xe2
  418b7b:	shl    BYTE PTR [eax+0x1b6a6ff1],cl
  418b81:	mov    esi,0x709d1fe9
  418b86:	leave  
  418b87:	pushf  
  418b88:	stc    
  418b89:	sahf   
  418b8a:	(bad)  
  418b8c:	neg    BYTE PTR [edx-0x6dd242c0]
  418b92:	add    ah,dh
  418b94:	js     0x418b2b
  418b96:	mov    ds:0xb4649a72,al
  418b9b:	adc    eax,0x7e277af8
  418ba0:	pop    es
  418ba1:	pop    ss
  418ba2:	aad    0x3f
  418ba4:	(bad)  
  418ba5:	dec    ecx
  418ba6:	retf   0xb9d1
  418ba9:	pop    ebx
  418baa:	addr16 sti 
  418bac:	push   0xa79e19a
  418bb1:	sbb    esp,ebp
  418bb3:	jne    0x418c2d
  418bb5:	mov    ebp,0x8991aa72
  418bba:	jb     0x418c28
  418bbc:	pop    ebx
  418bbd:	out    0x50,eax
  418bbf:	dec    eax
  418bc0:	fidivr DWORD PTR [ecx+0x25901644]
  418bc6:	inc    ecx
  418bc7:	mov    ds:0x8b946dc6,eax
  418bcc:	adc    dh,ch
  418bce:	cmp    ch,BYTE PTR [ebx+0x39]
  418bd1:	fisub  WORD PTR [edi]
  418bd3:	call   0xa8c9:0xffe564d5
  418bda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bdb:	mov    ah,0xb3
  418bdd:	inc    eax
  418bde:	retf   
  418bdf:	loop   0x418c4f
  418be1:	repnz test BYTE PTR [edi+edi*1+0x16],bl
  418be6:	add    BYTE PTR [edx+0x16],dl
  418be9:	div    DWORD PTR [eax+0x8]
  418bec:	pop    esi
  418bed:	lock (bad) 
  418bef:	loopne 0x418b8b
  418bf1:	push   ss
  418bf2:	jmp    0xb26f:0x47ae668f
  418bf9:	adc    eax,0x6b76c18e
  418bfe:	cmp    ebx,0xc0c72443
  418c04:	(bad)  
  418c05:	cmp    al,0x72
  418c07:	mov    ch,0xe7
  418c09:	fwait
  418c0a:	lea    eax,ds:0xf109f077
  418c10:	pop    esi
  418c11:	xchg   ebp,eax
  418c12:	mov    eax,ds:0x2102c9d1
  418c17:	loopne 0x418c12
  418c19:	loop   0x418c5b
  418c1b:	adc    cl,BYTE PTR [ecx]
  418c1d:	int    0xb8
  418c1f:	push   0x697031e2
  418c24:	pop    edx
  418c25:	std    
  418c26:	pushf  
  418c27:	and    eax,0x9f881f67
  418c2c:	mov    edi,0x1473d52d
  418c31:	test   bl,0x7
  418c34:	push   edx
  418c35:	mov    bh,ah
  418c37:	xchg   ebx,eax
  418c38:	cmp    al,0x87
  418c3a:	(bad)  
  418c3b:	mov    bl,0x22
  418c3d:	rcr    DWORD PTR [ecx],1
  418c3f:	mov    es,WORD PTR [eax]
  418c41:	fcmovnb st,st(6)
  418c43:	and    al,0x80
  418c45:	sahf   
  418c46:	ins    DWORD PTR es:[edi],dx
  418c47:	not    esi
  418c49:	neg    esi
  418c4b:	mov    edi,0xa13de6d
  418c50:	jge    0x418c79
  418c52:	mov    edx,0x64d58ab
  418c57:	add    DWORD PTR [eax],eax
  418c59:	clc    
  418c5a:	add    al,0x0
  418c5c:	add    BYTE PTR [edx],bh
  418c5e:	in     al,dx
  418c5f:	sub    DWORD PTR [edx+0x57],0xd
  418c63:	imul   eax,DWORD PTR [ebx],0x6b
  418c66:	(bad)  
  418c67:	cld    
  418c68:	sahf   
  418c69:	push   ds
  418c6a:	jmp    0xd8cfc21a
  418c6f:	xchg   esi,eax
  418c70:	jnp    0x418c12
  418c72:	retf   0xec89
  418c75:	push   eax
  418c76:	lods   al,BYTE PTR ds:[esi]
  418c77:	sbb    BYTE PTR [eax],dl
  418c79:	and    al,0xd2
  418c7b:	xor    al,0x2
  418c7d:	fild   WORD PTR [edx-0x24777af7]
  418c83:	cmp    al,0x4b
  418c85:	aad    0x6d
  418c87:	arpl   WORD PTR [eax+0x25],dx
  418c8a:	pop    ebx
  418c8b:	cwde   
  418c8c:	pushf  
  418c8d:	pop    ebp
  418c8e:	dec    esp
  418c8f:	mov    al,BYTE PTR [ebx-0x2238fc80]
  418c95:	mov    ds:0x647f00c5,eax
  418c9a:	xor    DWORD PTR [ebx-0x5f9b81e3],ebx
  418ca0:	mov    ah,0xc2
  418ca2:	retf   
  418ca3:	jbe    0x418d1e
  418ca5:	test   dh,dl
  418ca7:	inc    DWORD PTR [esi]
  418ca9:	cdq    
  418caa:	or     DWORD PTR [ebp-0x3a],0x40ffea2
  418cb1:	or     BYTE PTR [edx-0x38b017bc],al
  418cb7:	hlt    
  418cb8:	gs pop es
  418cba:	fs dec eax
  418cbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cbd:	jl     0x418cca
  418cbf:	sbb    al,BYTE PTR [edx-0x60bfb4f]
  418cc5:	js     0x418d21
  418cc7:	jmp    0x57e2:0xe3dfbc57
  418cce:	add    al,0xc7
  418cd0:	jge    0x418c85
  418cd2:	(bad)  
  418cd4:	adc    eax,0x1f2270c4
  418cd9:	xchg   ebx,eax
  418cda:	mov    edi,0x24689644
  418cdf:	popf   
  418ce0:	ss out 0x95,al
  418ce3:	xor    al,0x6f
  418ce5:	in     al,dx
  418ce6:	cmc    
  418ce7:	push   ecx
  418ce8:	lahf   
  418ce9:	imul   edx,DWORD PTR [edi+ebp*1-0x2e2cd599],0xcc1832b6
  418cf4:	sub    al,0xff
  418cf6:	retf   0xa5f6
  418cf9:	lods   al,BYTE PTR ds:[esi]
  418cfa:	sahf   
  418cfb:	xor    ebx,DWORD PTR [edi-0x3e4c13f2]
  418d01:	test   DWORD PTR [edx-0x58f274e3],edx
  418d07:	call   0x5f118b92
  418d0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d0d:	jo     0x418d48
  418d0f:	outs   dx,DWORD PTR ds:[esi]
  418d10:	push   0xffe07977
  418d15:	inc    esp
  418d16:	pop    ecx
  418d17:	dec    edx
  418d18:	repz mov fs,WORD PTR [ebp-0x55]
  418d1c:	leave  
  418d1d:	mov    ds:0xb7c526fd,eax
  418d22:	push   0x25
  418d24:	inc    ecx
  418d25:	jl     0x418d0f
  418d27:	push   edx
  418d28:	and    al,0x76
  418d2a:	sub    DWORD PTR [ebx+0x9],ebp
  418d2d:	retf   0x6101
  418d30:	ret    0x5e12
  418d33:	es xchg ebx,eax
  418d35:	xchg   esp,eax
  418d36:	shl    DWORD PTR [ebx-0x27],0xb1
  418d3a:	adc    BYTE PTR [edi+ebx*2],dh
  418d3d:	cdq    
  418d3e:	xchg   BYTE PTR fs:[edi-0x65],ch
  418d42:	or     eax,DWORD PTR [edi]
  418d44:	loop   0x418d0b
  418d46:	sbb    BYTE PTR [eax+0x8],bl
  418d49:	aad    0x8e
  418d4b:	in     al,dx
  418d4c:	int    0xfd
  418d4e:	sbb    ch,BYTE PTR [eax+0xd75e4d2]
  418d54:	jecxz  0x418ceb
  418d56:	mov    al,0xc3
  418d58:	sar    DWORD PTR [eax-0x2d],0x58
  418d5c:	jb     0x418da3
  418d5e:	dec    ecx
  418d5f:	in     eax,0xa3
  418d61:	imul   ebp,DWORD PTR [eax+0x763369f0],0xffffffb0
  418d68:	xor    esp,esi
  418d6a:	xchg   edi,eax
  418d6b:	std    
  418d6c:	test   BYTE PTR [esi+0x44],bh
  418d6f:	call   0x6025:0xfe85cad5
  418d76:	sub    esp,DWORD PTR [edi+esi*4+0x7b]
  418d7a:	jmp    DWORD PTR [eax]
  418d7c:	mov    bl,0xf8
  418d7e:	jge    0x418d3c
  418d80:	jae    0x418d7e
  418d82:	int3   
  418d83:	push   ds
  418d84:	sub    dl,BYTE PTR [ebx+0x55fb460]
  418d8a:	int    0xfa
  418d8c:	shl    DWORD PTR [eax],0x99
  418d8f:	gs cmp al,0x55
  418d92:	jmp    0x4d7a222a
  418d97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d98:	stos   BYTE PTR es:[edi],al
  418d99:	push   0xed40a43a
  418d9e:	mov    al,0xa1
  418da0:	sub    esp,ecx
  418da2:	xchg   ebp,eax
  418da3:	pushf  
  418da4:	push   ebp
  418da5:	dec    BYTE PTR [edx-0x1]
  418da8:	pop    eax
  418da9:	cmp    BYTE PTR [esi+eiz*4+0xe6cf68b],bh
  418db0:	push   edi
  418db1:	cmp    al,0xe5
  418db3:	repnz push ebp
  418db5:	ret    0xc2f0
  418db8:	retf   0x4b1b
  418dbb:	mov    es,WORD PTR [ebp-0x44]
  418dbe:	sub    DWORD PTR [esi],esp
  418dc0:	icebp  
  418dc1:	xchg   ebp,eax
  418dc2:	inc    eax
  418dc3:	mov    al,0xe5
  418dc5:	jle    0x418e19
  418dc7:	cmp    eax,0xed9d8b2b
  418dcc:	(bad)  
  418dcd:	push   esp
  418dce:	(bad)  
  418dcf:	sub    cl,BYTE PTR [edx]
  418dd1:	xchg   esp,eax
  418dd2:	inc    edx
  418dd3:	sbb    esp,DWORD PTR [ebp+0x38]
  418dd6:	cmp    al,0xca
  418dd8:	push   ss
  418dd9:	daa    
  418dda:	imul   eax,DWORD PTR [ebp-0x12],0x1905d852
  418de1:	and    edi,ecx
  418de3:	popa   
  418de4:	sub    DWORD PTR [eax],ebp
  418de6:	jo     0x418d9e
  418de8:	xlat   BYTE PTR ds:[ebx]
  418de9:	pop    eax
  418dea:	paddd  mm0,QWORD PTR [edx+edi*8]
  418dee:	int    0x2d
  418df0:	loopne 0x418e08
  418df2:	xchg   ah,dl
  418df4:	inc    edx
  418df5:	jnp    0x418dc0
  418df7:	rol    DWORD PTR [edx-0x1179640d],0xfa
  418dfe:	pop    DWORD PTR [eax-0x62]
  418e01:	mov    esi,0x8c2f5340
  418e06:	test   al,0x75
  418e08:	sbb    eax,0x69b62135
  418e0d:	sbb    BYTE PTR [ebp-0x595a0dc9],ch
  418e13:	nop
  418e14:	cmp    DWORD PTR [edx],ebx
  418e16:	push   esp
  418e17:	scas   eax,DWORD PTR es:[edi]
  418e18:	xchg   ebx,eax
  418e19:	push   0x49
  418e1b:	inc    ecx
  418e1c:	mov    dl,0xba
  418e1e:	enter  0x9a24,0x72
  418e22:	ins    BYTE PTR es:[edi],dx
  418e23:	scas   al,BYTE PTR es:[edi]
  418e24:	stc    
  418e25:	sti    
  418e26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e27:	cmp    ebx,ebp
  418e29:	or     DWORD PTR [ebx+0x3a],edx
  418e2c:	lds    ebp,FWORD PTR [esi]
  418e2e:	pop    ss
  418e2f:	pop    esp
  418e30:	adc    al,0xea
  418e32:	xor    al,0x66
  418e34:	jl     0x418e65
  418e36:	push   es
  418e37:	cli    
  418e38:	push   cs
  418e39:	pop    edx
  418e3a:	arpl   bp,sp
  418e3c:	int3   
  418e3d:	mov    edi,0xb7362567
  418e42:	push   eax
  418e43:	inc    ebx
  418e44:	dec    edx
  418e45:	sub    BYTE PTR [esi],bh
  418e47:	or     edi,DWORD PTR [ecx+eiz*1]
  418e4a:	aas    
  418e4b:	ja     0x418e35
  418e4d:	loop   0x418e2f
  418e4f:	xlat   BYTE PTR ds:[ebx]
  418e50:	imul   edi,DWORD PTR [esi+edi*4-0x14],0x6d
  418e55:	pop    edx
  418e56:	cdq    
  418e57:	ja     0x418ed1
  418e59:	mov    eax,ds:0x97e3b39c
  418e5e:	pop    esi
  418e5f:	imul   BYTE PTR [ebx]
  418e61:	imul   edi,DWORD PTR [edx+0x1458bee3],0x3a4f4e0c
  418e6b:	leave  
  418e6c:	sbb    al,0xbe
  418e6e:	push   cs
  418e6f:	popa   
  418e70:	repnz dec ebx
  418e72:	mov    WORD PTR [eax],cs
  418e74:	mov    esi,0x5a706d1e
  418e79:	pop    ebp
  418e7a:	lock pop edi
  418e7c:	sti    
  418e7d:	ret    
  418e7e:	retf   0x7b29
  418e81:	(bad)  
  418e82:	fdivrp st(2),st
  418e84:	into   
  418e85:	mov    edi,0xf1e8c5ce
  418e8b:	stc    
  418e8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e8d:	shl    DWORD PTR [ebp-0x5753ea33],cl
  418e93:	fwait
  418e94:	cmp    dl,BYTE PTR [ecx+0xf]
  418e97:	mov    eax,ds:0x1627c109
  418e9c:	xchg   ebp,eax
  418e9d:	jmp    0xd65c:0xe1ec5aad
  418ea4:	add    esi,DWORD PTR ds:0xef3e6f9e
  418eaa:	sub    al,0x26
  418eac:	mov    ecx,0x30034c4f
  418eb1:	add    al,0x23
  418eb3:	push   eax
  418eb4:	adc    BYTE PTR [edi+0x1d],cl
  418eb7:	dec    esp
  418eb8:	cdq    
  418eb9:	scas   eax,DWORD PTR es:[edi]
  418eba:	pop    ds
  418ebb:	pop    ss
  418ebc:	xor    eax,0x3f400665
  418ec1:	or     edi,DWORD PTR [esi]
  418ec3:	jnp    0x418f1a
  418ec5:	xchg   cl,ch
  418ec7:	or     ecx,ecx
  418ec9:	inc    edi
  418eca:	int3   
  418ecb:	push   eax
  418ecc:	mov    edx,esp
  418ece:	sub    edi,DWORD PTR [edx+0x29a9108e]
  418ed4:	fsubr  st,st(3)
  418ed6:	call   0xae439c86
  418edb:	and    eax,0xa083648c
  418ee0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ee1:	je     0x418f4c
  418ee3:	jmp    0xf420:0xdac05284
  418eea:	jl     0x418ef6
  418eec:	iret   
  418eed:	xchg   DWORD PTR [edx],esi
  418eef:	dec    sp
  418ef1:	or     eax,0xe4b5882f
  418ef6:	sub    BYTE PTR [edx-0x4b8fbc22],bh
  418efc:	push   esp
  418efd:	mov    ebp,0x9e22db21
  418f02:	(bad)  
  418f03:	test   DWORD PTR [ebx-0x15],ebx
  418f06:	loope  0x418f3d
  418f08:	gs mov al,0xff
  418f0b:	cmp    al,0xf1
  418f0d:	mov    ds:0x284a4e5,eax
  418f12:	add    ch,dl
  418f14:	pop    esi
  418f15:	sub    eax,0xf2ca7cc6
  418f1a:	jle    0x418eef
  418f1c:	dec    esp
  418f1d:	mov    ebp,0x71e0bcc2
  418f22:	pop    esi
  418f23:	fs pop eax
  418f25:	test   eax,0x78bbc89e
  418f2a:	rol    DWORD PTR [ebx+0x31a90939],cl
  418f30:	fst    DWORD PTR [ebp+0x105470b7]
  418f36:	rcl    BYTE PTR ds:0x6452c241,1
  418f3c:	jp     0x418ed7
  418f3e:	inc    ebp
  418f3f:	jecxz  0x418ec8
  418f41:	shl    DWORD PTR [edi],cl
  418f43:	xchg   edi,eax
  418f44:	addr16 inc esi
  418f46:	ins    BYTE PTR es:[edi],dx
  418f47:	nop
  418f48:	popf   
  418f49:	pop    ebx
  418f4a:	sahf   
  418f4b:	push   edi
  418f4c:	imul   eax,DWORD PTR [eax+0x1466cba4],0x1fa5d424
  418f56:	stc    
  418f57:	cmp    bl,bl
  418f59:	sub    eax,0x6af44b9d
  418f5e:	pop    edi
  418f5f:	retf   0x8a38
  418f62:	jl     0x418f5b
  418f64:	sbb    ebx,DWORD PTR [esi]
  418f66:	ja     0x418f3f
  418f68:	xchg   esi,eax
  418f69:	xchg   ecx,eax
  418f6a:	or     al,0xa1
  418f6c:	sub    eax,0xbbe3e8f4
  418f71:	pop    edx
  418f72:	add    eax,0xb3eaef93
  418f77:	test   DWORD PTR [edi-0xa],ebx
  418f7a:	cwde   
  418f7b:	int3   
  418f7c:	std    
  418f7d:	xchg   esp,eax
  418f7e:	xchg   DWORD PTR [eax],ecx
  418f80:	xchg   BYTE PTR [ebx-0x403899e2],ch
  418f86:	inc    edx
  418f87:	add    al,0xca
  418f89:	adc    al,0x11
  418f8b:	mov    cl,0xc9
  418f8d:	mov    ds,WORD PTR [ebp+0x547d2032]
  418f93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f94:	out    dx,eax
  418f95:	jno    0x418ff4
  418f97:	lock mov ebx,0xe0cc7318
  418f9d:	jo     0x418f96
  418f9f:	jge    0x41901a
  418fa1:	sbb    al,0xa1
  418fa3:	xchg   eax,ecx
  418fa5:	pop    edi
  418fa6:	jno    0x418f30
  418fa8:	push   edi
  418fa9:	push   0x33dc62f1
  418fae:	xchg   ecx,eax
  418faf:	int3   
  418fb0:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  418fb2:	jp     0x418f76
  418fb4:	pop    ds
  418fb5:	rol    ah,cl
  418fb7:	out    dx,eax
  418fb8:	imul   esp,DWORD PTR [esp+ebp*1],0xcb542d65
  418fbf:	jns    0x418f70
  418fc1:	push   edi
  418fc2:	test   eax,0x2684c6c6
  418fc7:	mov    eax,0xca7607b8
  418fcc:	pop    edi
  418fcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fce:	jmp    0x839e:0x3184affb
  418fd5:	xor    cl,0xc0
  418fd8:	or     BYTE PTR [ebp-0x5d33053b],ah
  418fde:	les    ebx,FWORD PTR [edx+ecx*1+0x48]
  418fe2:	xchg   ebx,eax
  418fe3:	or     al,0x3b
  418fe5:	xchg   esp,eax
  418fe6:	das    
  418fe7:	cmp    dl,dl
  418fe9:	retf   0x95cb
  418fec:	hlt    
  418fed:	cmp    esi,edx
  418fef:	js     0x41901a
  418ff1:	(bad)  
  418ff2:	sbb    al,0x3e
  418ff4:	add    edi,DWORD PTR [edx]
  418ff6:	inc    ebx
  418ff7:	ja     0x419018
  418ff9:	dec    esp
  418ffa:	clc    
  418ffb:	mov    DWORD PTR [ebx+ebp*1],ebp
  418ffe:	sub    al,0xce
  419000:	mov    ebx,0x2daa62f3
  419005:	adc    BYTE PTR [edx-0x534c4c66],al
  41900b:	int3   
  41900c:	sub    al,0x5
  41900e:	int3   
  41900f:	imul   DWORD PTR [ebp-0x43c396eb]
  419015:	jle    0x418fb5
  419017:	mov    esi,0x9de49378
  41901c:	leave  
  41901d:	push   cs
  41901e:	ror    BYTE PTR cs:[esi-0x2c],0xb0
  419023:	inc    edx
  419024:	pop    ecx
  419025:	pop    edx
  419026:	in     al,dx
  419027:	xchg   edi,eax
  419028:	or     DWORD PTR [esi],esi
  41902a:	sbb    eax,0x83c36443
  41902f:	leave  
  419030:	mov    ebx,DWORD PTR [esi]
  419032:	std    
  419033:	nop
  419034:	aam    0x4b
  419036:	imul   esp,edi,0x2e
  419039:	jle    0x418fed
  41903b:	imul   edx,DWORD PTR [esi+0x59972e39],0xd2b8cecf
  419045:	jmp    0x419054
  419047:	daa    
  419048:	fdivr  QWORD PTR ds:0x1e9cefb1
  41904e:	push   ss
  41904f:	les    esp,FWORD PTR [ebx+0xb]
  419052:	dec    ecx
  419053:	sti    
  419054:	into   
  419055:	xchg   ebp,eax
  419056:	in     eax,dx
  419057:	mov    dh,BYTE PTR [edx-0x1b0ad647]
  41905d:	adc    edi,0x67051fbe
  419063:	mov    al,0x25
  419065:	xchg   esi,eax
  419066:	mov    ebx,0x9caa64e9
  41906b:	inc    ebp
  41906c:	cmp    eax,0xedb52c1a
  419071:	loopne 0x4190c1
  419073:	add    al,0xa4
  419075:	adc    ebx,DWORD PTR [ebp-0x443413e5]
  41907b:	cli    
  41907c:	cmp    eax,0x16cfb5cc
  419081:	lea    edi,[edx+0x30809a49]
  419087:	lahf   
  419088:	pop    ecx
  419089:	and    DWORD PTR [ecx+edi*1+0x7b165298],0xf6378f36
  419094:	and    DWORD PTR [ecx],ebx
  419096:	dec    ebx
  419097:	jecxz  0x419068
  419099:	dec    BYTE PTR [edi]
  41909b:	mov    esp,0xea40e938
  4190a0:	xor    esi,DWORD PTR [ecx+eax*4-0x59ce1d73]
  4190a7:	arpl   WORD PTR [ebp-0x41bb7c41],ax
  4190ad:	stc    
  4190ae:	rcl    BYTE PTR [ecx+0x496ded74],1
  4190b4:	adc    ebx,esp
  4190b6:	xor    BYTE PTR [edx],dh
  4190b8:	aad    0x37
  4190ba:	push   cs
  4190bb:	sub    al,0x40
  4190bd:	xor    DWORD PTR [ebx],0xaed40f33
  4190c3:	sub    BYTE PTR [ebp-0x36],bl
  4190c6:	add    DWORD PTR [edx-0x42],edi
  4190c9:	mov    esi,ebp
  4190cb:	pop    ss
  4190cc:	daa    
  4190cd:	jns    0x4190e2
  4190cf:	mov    al,0x1c
  4190d1:	jnp    0x419144
  4190d3:	dec    ebx
  4190d4:	xchg   ecx,eax
  4190d5:	loopne 0x4190ea
  4190d7:	sbb    al,0x5d
  4190d9:	xchg   edi,eax
  4190da:	hlt    
  4190db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190dc:	shr    BYTE PTR [eax+0x43],cl
  4190df:	repnz mov esi,DWORD PTR [edx+0x7b1941a2]
  4190e6:	scas   eax,DWORD PTR es:[edi]
  4190e7:	jg     0x41915c
  4190e9:	inc    ecx
  4190ea:	and    al,0xd5
  4190ec:	mov    ebp,0x219e7683
  4190f1:	mov    dh,0x52
  4190f3:	xchg   DWORD PTR [ebx],esp
  4190f5:	arpl   WORD PTR [ebx+edx*4-0x31f937b0],bx
  4190fc:	mov    edi,0x9e1f1fc7
  419101:	retf   
  419102:	pop    edx
  419103:	scas   al,BYTE PTR es:[edi]
  419104:	mov    eax,0x8866713
  41910a:	mov    ebx,DWORD PTR ds:0x15ca34ff
  419110:	sbb    DWORD PTR [ebx+esi*1+0x10edc88a],ebx
  419117:	in     al,0xbc
  419119:	xchg   ebx,eax
  41911a:	cdq    
  41911b:	xchg   ecx,eax
  41911c:	jp     0x4190a1
  41911e:	retf   0x93b2
  419121:	ficomp WORD PTR [edx]
  419123:	(bad)  
  419124:	add    ch,BYTE PTR [ecx]
  419126:	ins    DWORD PTR es:[edi],dx
  419127:	pop    edx
  419128:	ffree  st(7)
  41912a:	jns    0x419185
  41912c:	das    
  41912d:	push   ds
  41912e:	push   esp
  41912f:	pop    ss
  419130:	or     ch,BYTE PTR [esi+0x61]
  419133:	loope  0x41912c
  419135:	sbb    DWORD PTR [edi],edi
  419137:	fldenv [ebp-0x5d]
  41913a:	aas    
  41913b:	out    dx,eax
  41913c:	cld    
  41913d:	xchg   ch,cl
  41913f:	push   0xe851598a
  419144:	add    bl,BYTE PTR [esi+0x5515cafb]
  41914a:	ror    BYTE PTR gs:[esi+esi*8+0x99e74f0],cl
  419152:	cmp    al,0x1a
  419154:	mov    esp,0xc96a57b2
  419159:	out    dx,eax
  41915a:	std    
  41915b:	mov    bl,0x7f
  41915d:	cwde   
  41915e:	xor    bh,BYTE PTR [eax]
  419160:	das    
  419161:	loope  0x4191dc
  419163:	idiv   DWORD PTR [ebx]
  419165:	inc    ebp
  419166:	or     eax,DWORD PTR [ecx]
  419168:	add    al,bh
  41916a:	add    al,0x0
  41916c:	add    BYTE PTR [edi-0x70],cl
  41916f:	adc    eax,0x3d1a76ed
  419174:	mov    edi,0x8a379c97
  419179:	cmp    eax,0xc781234a
  41917e:	push   0xa67fb3e9
  419183:	repz jmp FWORD PTR [edx+edx*4+0x27]
  419188:	mov    ebp,0xa2612a54
  41918d:	xor    ebp,DWORD PTR [ebx+0x71]
  419190:	push   eax
  419191:	sub    esp,esp
  419193:	pop    es
  419194:	mov    esp,0x409db74
  419199:	imul   edx,DWORD PTR [ebx+0x1c],0x3c607513
  4191a0:	aaa    
  4191a1:	xchg   BYTE PTR ds:[esi+0x4625b4e1],ch
  4191a8:	ret    
  4191a9:	mov    bl,0x30
  4191ab:	inc    ecx
  4191ac:	vmaxsd xmm3,xmm2,QWORD PTR [edi-0x1685af26]
  4191b4:	push   DWORD PTR [edx]
  4191b6:	mov    al,0x48
  4191b8:	jne    0x419186
  4191ba:	not    DWORD PTR [edi-0x29]
  4191bd:	(bad)  
  4191bf:	nop
  4191c0:	out    dx,al
  4191c1:	stc    
  4191c2:	ds add eax,0x143e1c0d
  4191c8:	rcr    DWORD PTR [edi+0x16],cl
  4191cb:	shl    DWORD PTR [esi+eiz*8],1
  4191ce:	lods   al,BYTE PTR ds:[esi]
  4191cf:	or     DWORD PTR [esi+0x7b],esi
  4191d2:	jbe    0x419169
  4191d4:	add    ebx,ebp
  4191d6:	inc    esp
  4191d7:	repnz xor eax,0x3ebacc29
  4191dd:	xchg   esp,eax
  4191de:	bound  edx,QWORD PTR [edi+eiz*1]
  4191e1:	mov    ebp,0xda5d7a62
  4191e6:	(bad)  
  4191e7:	jb     0x4191da
  4191e9:	jbe    0x4191ec
  4191eb:	xchg   edi,eax
  4191ec:	rcl    DWORD PTR [edi+0x3e580a4e],cl
  4191f2:	sete   BYTE PTR [ecx+edx*1]
  4191f6:	aam    0x51
  4191f8:	ss cwde 
  4191fa:	es retf 0xedec
  4191fe:	int3   
  4191ff:	mov    edx,0x8697678
  419204:	xchg   DWORD PTR gs:[edx+ecx*1-0x5c],ecx
  419209:	pop    ebx
  41920a:	dec    esp
  41920b:	or     eax,0x3daa0ba8
  419210:	(bad)  
  419211:	ror    DWORD PTR [eax-0xf],1
  419214:	stos   DWORD PTR es:[edi],eax
  419215:	out    dx,al
  419216:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419217:	push   ss
  419218:	xor    eax,0x84ae9cec
  41921d:	mov    edx,DWORD PTR [edi-0x2388b262]
  419223:	mov    al,0xac
  419225:	mov    esp,0x18f8df
  41922a:	ins    BYTE PTR es:[edi],dx
  41922b:	mov    edi,0xfd5106a3
  419230:	push   edi
  419231:	push   ecx
  419232:	mov    al,BYTE PTR [esp+ebx*4+0x54e1ce8a]
  419239:	xor    DWORD PTR [eax+0x5c81e5d6],0xffffff9f
  419240:	nop
  419241:	iret   
  419242:	mov    al,0xa3
  419244:	sahf   
  419245:	mov    DWORD PTR [ecx+0x38],ecx
  419248:	test   BYTE PTR [esi+0x23f23feb],ah
  41924e:	cmp    esi,DWORD PTR [esi-0x41]
  419251:	push   ebx
  419252:	nop
  419253:	outs   dx,BYTE PTR ds:[esi]
  419254:	mov    esp,0xdc7709d
  419259:	not    ebx
  41925b:	sbb    al,0xfb
  41925d:	stos   DWORD PTR es:[edi],eax
  41925e:	das    
  41925f:	test   eax,0x243ca40e
  419264:	aam    0x88
  419266:	push   0x55ef62bf
  41926b:	addr16 test al,0xff
  41926e:	imul   ebp,DWORD PTR [esi+0x23],0x5d
  419272:	outs   dx,BYTE PTR ds:[esi]
  419273:	push   ecx
  419274:	popf   
  419275:	xor    eax,DWORD PTR [esi]
  419277:	xor    eax,0xc1e12e9
  41927c:	imul   ebp,DWORD PTR [edi],0xffffff8d
  41927f:	sbb    DWORD PTR [ebp+0x120bf08c],esp
  419285:	xor    ah,0x35
  419288:	ins    BYTE PTR es:[edi],dx
  419289:	lods   eax,DWORD PTR ds:[esi]
  41928a:	jne    0x41926c
  41928c:	rcl    DWORD PTR [edx+0x75f29fbb],1
  419292:	mov    ecx,0xd94a74cc
  419297:	stc    
  419298:	pushf  
  419299:	sbb    esi,DWORD PTR [edi-0x71]
  41929c:	xor    bl,0xb7
  41929f:	push   edx
  4192a0:	stos   BYTE PTR es:[edi],al
  4192a1:	outs   dx,DWORD PTR ds:[esi]
  4192a2:	and    ebx,ebp
  4192a4:	shr    DWORD PTR [ecx],1
  4192a6:	ret    
  4192a7:	mov    ds:0xaa9cf555,al
  4192ac:	(bad)  
  4192ad:	sti    
  4192ae:	sub    ebx,DWORD PTR [ebp-0x67]
  4192b1:	sbb    DWORD PTR [eax+0x5c],eax
  4192b4:	lds    eax,FWORD PTR [esi]
  4192b6:	ins    BYTE PTR es:[edi],dx
  4192b7:	popa   
  4192b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192b9:	xchg   esp,eax
  4192ba:	sbb    eax,0x37febddf
  4192c0:	adc    esi,DWORD PTR [edi+0x55]
  4192c3:	ss push esp
  4192c5:	add    ah,dl
  4192c7:	xlat   BYTE PTR ds:[ebx]
  4192c8:	rcl    BYTE PTR [esi-0x23],cl
  4192cb:	cmp    eax,edx
  4192cd:	lods   eax,DWORD PTR ds:[esi]
  4192ce:	inc    ebx
  4192cf:	mov    ds:0x91a648c1,eax
  4192d4:	les    esp,FWORD PTR [edx-0xb]
  4192d7:	and    eax,0x54b27028
  4192dc:	xchg   ebx,eax
  4192dd:	jge    0x4192f3
  4192df:	mov    ah,0x5c
  4192e1:	ins    BYTE PTR es:[edi],dx
  4192e2:	sub    DWORD PTR [edx+0x2b841f44],esp
  4192e8:	xchg   ebx,eax
  4192e9:	call   0xc485:0x2e7e249a
  4192f0:	and    DWORD PTR [edx],ebx
  4192f2:	outs   dx,BYTE PTR ds:[esi]
  4192f3:	imul   ebx,edx,0x79
  4192f6:	xor    ebx,DWORD PTR [ebx]
  4192f8:	xchg   esi,eax
  4192f9:	jns    0x419351
  4192fb:	mov    eax,?
  4192fd:	jae    0x4192ca
  4192ff:	sbb    al,0x9a
  419301:	adc    DWORD PTR ds:0xcb8b815a,0xffffffe2
  419308:	mov    bh,0x1d
  41930a:	cli    
  41930b:	push   eax
  41930c:	fnstsw WORD PTR [ebx+0x1c]
  41930f:	hlt    
  419310:	loopne 0x4192e4
  419312:	add    DWORD PTR [eax+esi*8],eax
  419315:	push   esp
  419316:	lds    edx,FWORD PTR [ecx-0x67]
  419319:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41931a:	mov    edx,esi
  41931c:	push   0x684ac064
  419321:	jp     0x419319
  419323:	mov    edx,0x9faac1b
  419328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419329:	rcr    DWORD PTR [edi-0x7d],1
  41932c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41932d:	fadd   DWORD PTR fs:[eax-0x55]
  419331:	in     eax,0xaa
  419333:	das    
  419334:	hlt    
  419335:	pop    edi
  419336:	push   ebp
  419337:	fmul   QWORD PTR ds:0x33b85ce3
  41933d:	push   0x4acb689e
  419342:	lods   eax,DWORD PTR ds:[esi]
  419343:	mov    gs,WORD PTR [ebx]
  419345:	mov    ebp,0x691c30f6
  41934a:	outs   dx,BYTE PTR ds:[esi]
  41934b:	mov    ch,0xd7
  41934d:	out    dx,al
  41934e:	push   ds
  41934f:	pop    edi
  419350:	lahf   
  419351:	lock jae 0x419324
  419354:	daa    
  419355:	sti    
  419356:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419357:	scas   al,BYTE PTR es:[edi]
  419358:	repz sub BYTE PTR [eax-0x27],bl
  41935c:	xor    DWORD PTR [ecx+0x31],esp
  41935f:	ss ins DWORD PTR es:[edi],dx
  419361:	pop    edi
  419362:	jnp    0x4192e5
  419364:	jbe    0x4193b9
  419366:	pop    ebp
  419367:	xchg   esp,eax
  419368:	sbb    esi,DWORD PTR ds:0x46dde334
  41936e:	loope  0x41930d
  419370:	sbb    edx,DWORD PTR [eax]
  419372:	push   ecx
  419373:	push   ebp
  419374:	test   eax,0xb4d08d05
  419379:	jnp    0x41931d
  41937b:	int    0x3c
  41937d:	jns    0x41932d
  41937f:	fbstp  TBYTE PTR [edx]
  419381:	outs   dx,BYTE PTR ds:[esi]
  419382:	jmp    0x5c7e1be9
  419387:	hlt    
  419388:	scas   al,BYTE PTR es:[edi]
  419389:	lods   eax,DWORD PTR ds:[esi]
  41938a:	ret    0x97c0
  41938d:	shl    DWORD PTR [esi],1
  41938f:	jmp    0x4193a9
  419391:	jmp    0x41931e
  419393:	jae    0x41932b
  419395:	imul   edi,edi,0xb612e659
  41939b:	and    esi,DWORD PTR [esi-0xb2093dc]
  4193a1:	lahf   
  4193a2:	adc    al,0xd3
  4193a4:	aas    
  4193a5:	imul   eax,DWORD PTR ds:0x4a4ddb58,0x57844d2
  4193af:	dec    ebp
  4193b0:	rep outs dx,DWORD PTR ds:[esi]
  4193b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193b3:	xchg   esp,eax
  4193b4:	imul   esi,DWORD PTR [ebp+0x3a3b11b4],0xffffff83
  4193bb:	clc    
  4193bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193bd:	daa    
  4193be:	mov    eax,ds:0xd3a7c4d
  4193c3:	in     al,dx
  4193c4:	es (bad) 
  4193c7:	pop    ecx
  4193c8:	mov    dl,0x7d
  4193ca:	sub    ah,cl
  4193cc:	js     0x4193b3
  4193ce:	addr16 clc 
  4193d0:	mov    ebp,0xde9eb805
  4193d5:	test   DWORD PTR [edi+0x1c],ebp
  4193d8:	stos   DWORD PTR es:[edi],eax
  4193d9:	mov    ebp,0x157dc30b
  4193de:	inc    esi
  4193df:	fld    QWORD PTR [edx]
  4193e1:	xchg   edx,eax
  4193e2:	(bad)  
  4193e4:	in     eax,0x2a
  4193e6:	ins    BYTE PTR es:[edi],dx
  4193e7:	retf   
  4193e8:	div    ch
  4193ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193eb:	test   al,0xa2
  4193ed:	call   0x1575:0x89b0224b
  4193f4:	mov    al,0x45
  4193f6:	inc    esi
  4193f7:	jnp    0x4193a7
  4193f9:	mov    bh,0x98
  4193fb:	or     DWORD PTR [edi+eiz*8-0x2d5c9d40],esp
  419402:	or     eax,0x8407ed91
  419407:	push   esi
  419408:	xor    DWORD PTR [edx-0x6a93fc96],esi
  41940e:	das    
  41940f:	jne    0x41948f
  419411:	dec    ebp
  419412:	mov    edx,0xa8a84ceb
  419417:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419418:	out    dx,al
  419419:	adc    bl,bh
  41941b:	or     al,0x83
  41941d:	mov    BYTE PTR [esi],bh
  41941f:	fistp  DWORD PTR [eax]
  419421:	rol    BYTE PTR [esi-0x10],1
  419424:	push   eax
  419425:	jnp    0x4193fd
  419427:	jae    0x41940e
  419429:	sub    edx,edi
  41942b:	int    0x17
  41942d:	mov    edx,0x19d23b04
  419432:	cmp    eax,0x24f2333d
  419437:	xchg   ebp,eax
  419438:	out    dx,al
  419439:	sub    eax,0x4ed46757
  41943e:	pop    ebx
  41943f:	adc    DWORD PTR [eax+0x2],ecx
  419442:	pusha  
  419443:	sbb    edx,eax
  419445:	(bad)
  419449:	test   eax,0x6393e0c9
  41944e:	repnz push edx
  419450:	pusha  
  419451:	and    ebx,DWORD PTR [ebp+0xb]
  419454:	frstor [eax]
  419456:	mov    esi,es
  419458:	pop    ss
  419459:	inc    ebp
  41945a:	aam    0x29
  41945c:	(bad)  
  41945d:	jmp    0x60454d12
  419462:	cld    
  419463:	add    al,0x34
  419465:	in     eax,dx
  419466:	sub    eax,0xd971c4f9
  41946b:	ficomp WORD PTR [ecx+ecx*8]
  41946e:	(bad)  [eax-0x8]
  419471:	aaa    
  419472:	inc    DWORD PTR [ecx+0x67]
  419475:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419476:	gs hlt 
  419478:	mov    bl,0x65
  41947a:	or     al,0x6d
  41947c:	mov    dh,al
  41947e:	or     ah,BYTE PTR [ecx-0x7e]
  419481:	xchg   BYTE PTR [eax+0x705d72fb],ch
  419487:	into   
  419488:	add    cl,BYTE PTR ss:[edi+0xa9f9b26]
  41948f:	pop    eax
  419490:	pop    edx
  419491:	inc    edi
  419492:	inc    esi
  419493:	cmp    BYTE PTR [ecx+ebx*4-0x48cf8b0d],dl
  41949a:	push   eax
  41949b:	xchg   ebp,eax
  41949c:	mov    esp,0xb5e88a82
  4194a1:	push   eax
  4194a2:	dec    esp
  4194a3:	stos   DWORD PTR es:[edi],eax
  4194a4:	fdiv   DWORD PTR [ebx+esi*4]
  4194a7:	dec    edi
  4194a8:	(bad)  
  4194a9:	in     eax,0xe6
  4194ab:	mov    ebx,0xa3923380
  4194b0:	mov    esi,0xbb461af0
  4194b5:	sub    ebp,DWORD PTR [ebp+0x16]
  4194b8:	xchg   edi,ecx
  4194ba:	retf   0x34c4
  4194bd:	shl    DWORD PTR [ebp-0xe57b863],1
  4194c3:	jbe    0x4194d5
  4194c5:	adc    bl,al
  4194c7:	iret   
  4194c8:	sbb    DWORD PTR [esp+ecx*8],edx
  4194cb:	cmc    
  4194cc:	jbe    0x419516
  4194ce:	scas   al,BYTE PTR es:[edi]
  4194cf:	xor    bh,BYTE PTR ds:0xc433062d
  4194d5:	or     eax,0x12afbc6f
  4194da:	imul   eax,ebx,0xffffffc4
  4194dd:	rcr    BYTE PTR [ebp-0x49a2a2ef],cl
  4194e3:	xchg   esi,eax
  4194e4:	adc    dl,ah
  4194e6:	adc    eax,0x26
  4194e9:	mov    ch,0xf5
  4194eb:	mov    BYTE PTR [ebx-0xc],dl
  4194ee:	shr    DWORD PTR [ecx-0x6abe4dff],1
  4194f4:	enter  0x709f,0x76
  4194f8:	inc    ebp
  4194f9:	mov    edx,0x1089df2c
  4194fe:	push   ebx
  4194ff:	inc    esp
  419500:	sar    DWORD PTR [ebx+esi*1+0x3b02f8a7],cl
  419507:	inc    ebx
  419508:	pop    eax
  419509:	pop    eax
  41950a:	jae    0x419586
  41950c:	outs   dx,DWORD PTR ds:[esi]
  41950d:	ja     0x419561
  41950f:	push   esi
  419510:	ins    BYTE PTR es:[edi],dx
  419511:	xchg   edx,eax
  419512:	xchg   ebp,eax
  419513:	adc    eax,0x7075e81b
  419518:	mov    ecx,0xbfc7a324
  41951d:	add    DWORD PTR [ebx],ebp
  41951f:	pop    esp
  419520:	push   cs
  419521:	das    
  419522:	adc    al,0x17
  419524:	mov    bl,0x84
  419526:	mov    DWORD PTR [edi],eax
  419528:	dec    esp
  419529:	pop    ebx
  41952a:	fucomip st,st(0)
  41952c:	ror    DWORD PTR [ebp-0xb23b381],1
  419532:	pusha  
  419533:	in     eax,0xa5
  419535:	ret    0x7f4c
  419538:	mov    bl,0x30
  41953a:	nop
  41953b:	xchg   ebp,eax
  41953c:	push   esp
  41953d:	adc    dh,BYTE PTR ds:0xea4b6ee1
  419543:	mov    DWORD PTR [esi+edx*1+0x7c969856],edx
  41954a:	aas    
  41954b:	aaa    
  41954c:	mov    cs,WORD PTR [ecx+edi*4]
  41954f:	inc    eax
  419550:	sub    al,0x82
  419552:	(bad)  
  419553:	push   esi
  419554:	cli    
  419555:	mov    cl,BYTE PTR [edi-0x41]
  419558:	inc    esi
  419559:	mov    es,WORD PTR [ebp-0x2]
  41955c:	xchg   esi,eax
  41955d:	mov    ch,0x1b
  41955f:	cmp    bh,BYTE PTR [edx+0x640dc24b]
  419565:	sbb    esp,ebx
  419567:	mov    BYTE PTR [esi+0x35],ah
  41956a:	sti    
  41956b:	adc    al,0x5
  41956d:	mov    eax,0x48caa2f2
  419572:	adc    DWORD PTR [ecx],esp
  419574:	xchg   edi,eax
  419575:	out    0xb8,al
  419577:	sbb    eax,0xe757bac0
  41957c:	pop    eax
  41957d:	std    
  41957e:	ret    
  41957f:	cld    
  419580:	das    
  419581:	cld    
  419582:	in     eax,dx
  419583:	(bad)  
  419584:	cmp    al,0x7b
  419586:	or     dh,al
  419588:	sbb    bh,bh
  41958a:	fbld   TBYTE PTR [ebx-0xb]
  41958d:	mov    bl,0x19
  41958f:	outs   dx,DWORD PTR ds:[esi]
  419590:	mov    ebp,0xb837c764
  419595:	shl    ah,cl
  419597:	push   es
  419598:	fst    QWORD PTR [esi-0x65]
  41959b:	test   eax,0xc5f0c751
  4195a0:	or     DWORD PTR [esi-0x3b45a802],edi
  4195a6:	cmp    dl,0x6d
  4195a9:	imul   DWORD PTR [ecx]
  4195ab:	fs out dx,al
  4195ad:	adc    eax,0x63feedf4
  4195b2:	push   0x58aa3fc2
  4195b7:	add    al,0x79
  4195b9:	push   es
  4195ba:	push   ebx
  4195bb:	inc    edi
  4195bc:	jae    0x4195bf
  4195be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195bf:	test   DWORD PTR [edx+0x58],esp
  4195c2:	push   ebx
  4195c3:	xor    cl,dl
  4195c5:	retf   0xb752
  4195c8:	call   0xf8ef34c
  4195cd:	mov    ecx,0x38e9834b
  4195d2:	jb     0x4195e4
  4195d4:	cs pop edi
  4195d6:	call   0x701a6767
  4195db:	mov    ebx,ebx
  4195dd:	or     eax,0x2f8cfd8e
  4195e2:	std    
  4195e3:	mov    dh,BYTE PTR [ebx+0x74d99d14]
  4195e9:	retf   
  4195ea:	push   es
  4195eb:	and    DWORD PTR [ecx+0x54f79d54],ebp
  4195f1:	or     esi,DWORD PTR [eax+0x6e79af2e]
  4195f7:	(bad)  
  4195f8:	jno    0x41961a
  4195fa:	outs   dx,DWORD PTR ds:[esi]
  4195fb:	push   ebx
  4195fc:	clc    
  4195fd:	add    al,0x0
  4195ff:	jp     0x4195d6
  419601:	or     al,0xba
  419603:	add    BYTE PTR [ebp*1+0x7ddc0ed2],0xca
  41960b:	outs   dx,DWORD PTR ds:[esi]
  41960c:	out    dx,eax
  41960d:	stos   BYTE PTR es:[edi],al
  41960e:	not    BYTE PTR ds:0x21d9330d
  419614:	add    bh,BYTE PTR [esi+0x1a693a4d]
  41961a:	retf   
  41961b:	mov    edx,0x557743d6
  419620:	jp     0x4195aa
  419622:	fst    DWORD PTR [eax-0x727510f7]
  419628:	test   eax,0x79d57729
  41962d:	xchg   esp,eax
  41962e:	pop    esp
  41962f:	jns    0x4196a6
  419631:	das    
  419632:	inc    ebp
  419633:	jnp    0x4196ac
  419635:	cs xor eax,0xbd39ec84
  41963b:	dec    esp
  41963c:	hlt    
  41963d:	sbb    bh,bl
  41963f:	aad    0xa9
  419641:	popf   
  419642:	out    dx,eax
  419643:	mov    esp,0xfa914297
  419648:	hlt    
  419649:	mov    bh,0x96
  41964b:	pop    esi
  41964c:	(bad)  
  41964d:	cmc    
  41964e:	dec    esp
  41964f:	pop    es
  419650:	jmp    DWORD PTR [edx+0x11b387f9]
  419656:	inc    ebp
  419657:	scas   eax,DWORD PTR es:[edi]
  419658:	mov    DWORD PTR ss:[eax],ebp
  41965b:	push   edi
  41965c:	bound  esi,QWORD PTR [edi-0x659083b4]
  419662:	dec    edi
  419663:	ds xchg ecx,eax
  419665:	inc    ebp
  419666:	push   cs
  419667:	retf   0xcb6c
  41966a:	in     al,dx
  41966b:	out    0x2f,eax
  41966d:	pushf  
  41966e:	das    
  41966f:	cmp    esi,DWORD PTR [eax-0x7ececf37]
  419675:	cmp    eax,0xf8000110
  41967a:	add    al,0x0
  41967c:	add    BYTE PTR [esi+0x771fb79a],ah
  419682:	push   ebp
  419683:	shr    BYTE PTR [esi],0x75
  419686:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  419688:	sub    ecx,eax
  41968a:	(bad)  
  41968b:	pop    ebx
  41968c:	fdiv   QWORD PTR [ecx-0x36]
  41968f:	mov    dh,0xea
  419691:	(bad)  
  419692:	sbb    dh,BYTE PTR [edi-0xdb89c42]
  419698:	mul    DWORD PTR [ebx]
  41969a:	out    dx,al
  41969b:	popf   
  41969c:	repnz mov bh,0x52
  41969f:	in     al,0xc3
  4196a1:	inc    ecx
  4196a2:	add    ch,ch
  4196a4:	dec    edi
  4196a5:	and    eax,0x98e97fdc
  4196aa:	aam    0x6d
  4196ac:	frstor [esi]
  4196ae:	mov    cl,0xe1
  4196b0:	mov    esp,0x637aa882
  4196b5:	jl     0x419642
  4196b7:	xchg   edi,eax
  4196b8:	push   ss
  4196b9:	xchg   DWORD PTR [ebx+0x13],ebx
  4196bc:	daa    
  4196bd:	cmp    eax,0x522ecb39
  4196c2:	push   esi
  4196c3:	sti    
  4196c4:	jmp    0x4156879e
  4196c9:	adc    esi,ebp
  4196cb:	dec    ebx
  4196cc:	jbe    0x419730
  4196ce:	add    DWORD PTR [esp+edx*8-0x1e],ebp
  4196d2:	inc    esi
  4196d3:	neg    DWORD PTR [esi+0x2456e28a]
  4196d9:	or     edx,DWORD PTR [edi+esi*8+0xb]
  4196dd:	retf   
  4196de:	pop    ecx
  4196df:	jp     0x419745
  4196e1:	in     al,0x34
  4196e3:	in     eax,dx
  4196e4:	cld    
  4196e5:	push   ecx
  4196e6:	fsub   DWORD PTR [ecx-0x2e]
  4196e9:	daa    
  4196ea:	clc    
  4196eb:	gs pushf 
  4196ed:	stos   DWORD PTR es:[edi],eax
  4196ee:	sar    DWORD PTR [eax],cl
  4196f0:	ds add dl,bl
  4196f3:	neg    DWORD PTR [edx+ebx*1+0xe93e59]
  4196fa:	jge    0x4196d4
  4196fc:	pop    ds
  4196fd:	mov    dl,cl
  4196ff:	adc    eax,0xcafce577
  419704:	mov    ecx,0xa728feed
  419709:	push   ebx
  41970a:	push   cs
  41970b:	pop    eax
  41970c:	fdivr  DWORD PTR [ebp+0x70737350]
  419712:	mov    ?,WORD PTR [ebx]
  419714:	or     al,0xd
  419716:	xchg   ebx,eax
  419717:	sbb    ch,ah
  419719:	out    dx,al
  41971a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41971b:	mov    esi,0x67778f7a
  419720:	test   DWORD PTR [eax],ebx
  419722:	inc    ebx
  419723:	lock jmp 0x4196cf
  419726:	ds push ds
  419728:	xor    ah,0x8f
  41972b:	cmp    eax,0xa39605bd
  419730:	or     al,0x1b
  419732:	cmp    al,0x95
  419734:	add    eax,0xf52ede08
  419739:	dec    esi
  41973a:	aas    
  41973b:	mov    ds:0x36c49559,al
  419740:	cmp    esi,DWORD PTR [edi]
  419742:	dec    ebx
  419743:	cs xor eax,0xb07c7940
  419749:	(bad)  
  41974a:	in     eax,0xad
  41974c:	or     dl,BYTE PTR es:[ecx-0x31]
  419750:	add    al,0x13
  419752:	xchg   edi,eax
  419753:	mov    ah,0xee
  419755:	push   cs
  419756:	jb     0x41970f
  419758:	es pushf 
  41975a:	cdq    
  41975b:	xchg   edi,eax
  41975c:	dec    edi
  41975d:	ins    BYTE PTR es:[edi],dx
  41975e:	mov    ds:0x2e0fe7a8,al
  419763:	jo     0x4197e2
  419765:	jge    0x419707
  419767:	jbe    0x419771
  419769:	and    eax,0xaa314752
  41976e:	push   edi
  41976f:	shl    DWORD PTR [edx],1
  419771:	lea    esp,[ecx-0x2c]
  419774:	mov    al,0x99
  419776:	xchg   ebx,eax
  419777:	ja     0x4197d7
  419779:	adc    al,BYTE PTR cs:[esi]
  41977c:	mov    fs,WORD PTR [ecx+0x1e]
  41977f:	mov    cs,WORD PTR [ebx]
  419781:	mov    bh,0x7b
  419783:	jo     0x4197b8
  419785:	and    esi,DWORD PTR [edx+0x49e87266]
  41978b:	cmp    al,0xe7
  41978d:	ficom  DWORD PTR [eax-0x28f3ebcf]
  419793:	outs   dx,DWORD PTR ds:[esi]
  419794:	mov    cl,0x69
  419796:	jb     0x419802
  419798:	adc    eax,0x9c7cd442
  41979d:	ror    dl,1
  41979f:	fcom   DWORD PTR [ecx-0x62]
  4197a2:	sbb    eax,0xa22e7b03
  4197a7:	hlt    
  4197a8:	and    DWORD PTR ds:0xfa1ef85a,0x14053b0c
  4197b2:	push   0x86c1a292
  4197b7:	inc    edi
  4197b8:	jno    0x4197b0
  4197ba:	xchg   esi,eax
  4197bb:	sbb    al,dh
  4197bd:	ins    BYTE PTR es:[edi],dx
  4197be:	lea    edi,[ebp-0x38]
  4197c1:	xor    bl,BYTE PTR [ebx+edi*1]
  4197c4:	mov    esi,0xde9df5bb
  4197c9:	lods   al,BYTE PTR ds:[esi]
  4197ca:	xchg   esi,eax
  4197cb:	add    eax,0x9c559fd7
  4197d0:	jae    0x4197d4
  4197d2:	(bad)  [esp+ebp*4+0x6f]
  4197d6:	sub    al,BYTE PTR [ebx-0x61]
  4197d9:	stc    
  4197da:	pmaxub mm7,QWORD PTR [esi]
  4197dd:	mov    bl,0xe
  4197df:	push   ss
  4197e0:	jg     0x41984c
  4197e2:	pop    edi
  4197e3:	adc    eax,0x2807b98a
  4197e8:	and    DWORD PTR [ecx+edx*8],ebx
  4197eb:	ss mov bl,0xee
  4197ee:	and    DWORD PTR [edx*4+0x83b8986],ecx
  4197f5:	pushf  
  4197f6:	mov    ch,0x2c
  4197f8:	cdq    
  4197f9:	mov    ds:0xba740666,eax
  4197fe:	dec    ebx
  4197ff:	stos   DWORD PTR es:[edi],eax
  419800:	dec    ecx
  419801:	sbb    DWORD PTR [eax+0x559636b0],ecx
  419807:	pop    edi
  419808:	imul   ebx,eax,0x2c
  41980b:	inc    eax
  41980c:	test   ch,0x21
  41980f:	dec    edx
  419810:	jl     0x4197b4
  419812:	int3   
  419813:	xchg   esi,eax
  419814:	cs push edi
  419816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419817:	pop    ss
  419818:	adc    eax,0xfaab446f
  41981d:	ss mov dh,0xd
  419820:	add    BYTE PTR [edi+0x62],bh
  419823:	inc    ecx
  419824:	ret    
  419825:	cmp    eax,0x31052fb2
  41982a:	sahf   
  41982b:	aad    0xfe
  41982d:	xchg   esi,eax
  41982e:	xchg   ecx,eax
  41982f:	mov    ch,0x70
  419831:	mov    esi,0x1d8275f
  419836:	pop    es
  419837:	jnp    0x4197d7
  419839:	adc    eax,ecx
  41983b:	nop
  41983c:	into   
  41983d:	into   
  41983e:	loopne 0x4197d5
  419840:	mov    dl,0x7d
  419842:	shr    BYTE PTR [ebx-0x45],0xb4
  419846:	or     BYTE PTR [edi+0xb48ed56],al
  41984c:	inc    esi
  41984d:	sub    al,0xee
  41984f:	scas   al,BYTE PTR es:[edi]
  419850:	or     eax,0x97f4c1da
  419855:	jmp    0x419895
  419857:	jecxz  0x419874
  419859:	hlt    
  41985a:	xor    BYTE PTR [esi-0x6c],0x9
  41985e:	jmp    0x876a:0x8b6bae8f
  419865:	lods   eax,DWORD PTR ds:[esi]
  419866:	pop    esi
  419867:	push   ss
  419868:	pusha  
  419869:	push   edx
  41986a:	pushf  
  41986b:	(bad)  
  41986c:	mov    dh,0xde
  41986e:	xchg   ecx,eax
  41986f:	adc    bl,dh
  419871:	cmp    al,0xb6
  419873:	xchg   ebx,eax
  419874:	pmuludq mm7,QWORD PTR [ebx-0x47c20e6]
  41987b:	lock inc eax
  41987d:	data16 ja 0x419896
  419880:	xor    esp,DWORD PTR [ecx-0x28ee0ccd]
  419886:	mov    eax,0x7811a6d5
  41988b:	pop    esi
  41988c:	inc    ebx
  41988d:	in     al,0x89
  41988f:	push   edi
  419890:	add    al,0x47
  419892:	test   BYTE PTR [ecx],dh
  419894:	fs xchg edi,eax
  419896:	retf   
  419897:	rcl    BYTE PTR [edi],cl
  419899:	int3   
  41989a:	cmc    
  41989b:	sbb    ebp,ebp
  41989d:	rcl    DWORD PTR [eax+edi*2],1
  4198a0:	aaa    
  4198a1:	in     eax,dx
  4198a2:	mov    dh,0xc6
  4198a4:	in     al,0x30
  4198a6:	xchg   dh,dl
  4198a8:	pop    ss
  4198a9:	popf   
  4198aa:	xchg   edi,eax
  4198ab:	out    dx,al
  4198ac:	jnp    0x4198cf
  4198ae:	xor    eax,DWORD PTR [edx+ecx*2]
  4198b1:	cwde   
  4198b2:	mov    al,0x85
  4198b4:	pop    ss
  4198b5:	scas   al,BYTE PTR es:[edi]
  4198b6:	cvtps2pd xmm5,QWORD PTR [ebp-0x32]
  4198ba:	out    0x70,al
  4198bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198bd:	mov    ?,WORD PTR [eax-0x4c]
  4198c0:	test   al,0xf9
  4198c2:	stos   DWORD PTR es:[edi],eax
  4198c3:	or     BYTE PTR [esi],0x4e
  4198c6:	loope  0x419932
  4198c8:	mov    BYTE PTR [ebx-0x6d643b89],ch
  4198ce:	sub    bh,BYTE PTR [edx]
  4198d0:	pop    esi
  4198d1:	cli    
  4198d2:	int3   
  4198d3:	jecxz  0x4198f3
  4198d5:	xchg   edi,eax
  4198d6:	jo     0x41991f
  4198d8:	xchg   edi,eax
  4198d9:	xchg   ecx,eax
  4198da:	cmp    BYTE PTR ds:0x9e258d8f,cl
  4198e0:	mov    DWORD PTR ds:0x9329cd3c,eax
  4198e6:	mov    cl,0x17
  4198e8:	push   ds
  4198e9:	sbb    eax,0x441a8910
  4198ee:	test   DWORD PTR [ecx+0x6b5ce3d3],ebp
  4198f4:	mov    eax,0x146caa39
  4198f9:	arpl   WORD PTR [ebp-0x1],bp
  4198fc:	aad    0x6d
  4198fe:	leave  
  4198ff:	fdivrp st(7),st
  419901:	scas   al,BYTE PTR es:[edi]
  419902:	or     dl,BYTE PTR [ebx-0x3d]
  419905:	inc    esp
  419906:	adc    ecx,edx
  419908:	mov    al,ds:0x5213bd4e
  41990d:	mov    ebx,0xcd314b32
  419912:	pusha  
  419913:	add    edi,edi
  419915:	mov    bh,0xd5
  419917:	(bad)  
  419918:	lods   eax,DWORD PTR ds:[esi]
  419919:	push   edi
  41991a:	rcr    DWORD PTR [esi+0x6a5100be],0x68
  419921:	mov    BYTE PTR [edi-0x10da570c],bl
  419927:	xchg   DWORD PTR [edx+ebp*2],ecx
  41992a:	inc    ebx
  41992b:	js     0x41997f
  41992d:	xchg   esp,eax
  41992e:	repz call 0xdabb:0xb62e4f7e
  419936:	cmp    al,BYTE PTR [edx+ecx*8]
  419939:	(bad)  
  41993a:	cli    
  41993b:	mov    ?,WORD PTR [eax+0x2a]
  41993e:	(bad)  
  41993f:	ja     0x4199af
  419941:	cwde   
  419942:	sti    
  419943:	cmp    BYTE PTR [ebp+0xdfa4e5b],bh
  419949:	sahf   
  41994a:	pop    ebx
  41994b:	repz mov ah,0xad
  41994e:	xchg   esi,eax
  41994f:	icebp  
  419950:	and    eax,0x54
  419953:	div    BYTE PTR [esi+0x22b0702e]
  419959:	jg     0x419949
  41995b:	jne    0x419953
  41995d:	cmp    bh,BYTE PTR [ebp-0x5047446]
  419963:	call   0x980277eb
  419968:	pushf  
  419969:	stos   DWORD PTR es:[edi],eax
  41996a:	adc    eax,0xaf1955b1
  41996f:	jecxz  0x419983
  419971:	pop    es
  419972:	dec    esp
  419973:	sub    ch,BYTE PTR [eax-0x5d3e96cf]
  419979:	in     eax,0x54
  41997b:	pushw  0x9bcf
  41997f:	cmp    al,0x6e
  419981:	ret    0x646
  419984:	sbb    BYTE PTR [ebx+0x7b544111],bh
  41998a:	mov    ds:0xf1751b27,al
  41998f:	sub    DWORD PTR [edx],ebp
  419991:	xchg   edi,eax
  419992:	mov    ds:0x17ea3ede,eax
  419997:	mov    ds:0x5edd0e26,al
  41999c:	jae    0x419982
  41999e:	retf   0x9723
  4199a1:	mov    edx,0x2185c116
  4199a6:	add    dl,0xa3
  4199a9:	in     al,dx
  4199aa:	mov    esp,0xac0f4325
  4199af:	jmp    0x41996b
  4199b1:	dec    edi
  4199b2:	rcl    BYTE PTR [eax-0x533a3fa5],1
  4199b8:	adc    bh,BYTE PTR [edi-0x5]
  4199bb:	or     al,0xb6
  4199bd:	stos   DWORD PTR es:[edi],eax
  4199be:	cmp    eax,0xcaa36f7a
  4199c3:	jle    0x4199cd
  4199c5:	push   edi
  4199c6:	in     eax,dx
  4199c7:	nop
  4199c8:	mov    ebp,0x59916ceb
  4199cd:	test   al,0xa
  4199cf:	xchg   DWORD PTR [eax],edx
  4199d1:	mov    esi,0xda6145e5
  4199d6:	xor    ecx,DWORD PTR [ebx]
  4199d8:	dec    ecx
  4199d9:	or     edi,esp
  4199db:	mov    cl,0x87
  4199dd:	xchg   edx,eax
  4199de:	hlt    
  4199df:	retf   0x5769
  4199e2:	mov    DWORD PTR [edi-0x8],esp
  4199e5:	xor    DWORD PTR [ecx],ebp
  4199e7:	mov    BYTE PTR [edi-0x2c237a33],ch
  4199ed:	test   eax,0x7cb93c2e
  4199f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199f3:	dec    edx
  4199f4:	mov    ds,WORD PTR [ebx*8-0x4fb05613]
  4199fb:	call   0x7d64c41c
  419a00:	mov    ecx,0x9595f5d6
  419a05:	adc    esi,DWORD PTR [ebp+0x2d]
  419a08:	lods   al,BYTE PTR ds:[esi]
  419a09:	sub    al,0x45
  419a0b:	fs inc ebx
  419a0d:	outs   dx,BYTE PTR ds:[esi]
  419a0e:	and    BYTE PTR [edx+0x1e1b3305],0xfd
  419a15:	sub    al,0x2b
  419a17:	fisubr DWORD PTR [edx+0x375d0f22]
  419a1d:	lea    ebp,[eax]
  419a1f:	pop    ss
  419a20:	scas   al,BYTE PTR es:[edi]
  419a21:	sbb    al,0x53
  419a23:	push   ebp
  419a24:	push   eax
  419a25:	fild   DWORD PTR [ebp+0x30]
  419a28:	xchg   ebp,eax
  419a29:	lds    edx,FWORD PTR [ecx+edi*4-0x5]
  419a2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a2e:	(bad)  [eax-0x3b89a4e4]
  419a34:	pop    edi
  419a35:	dec    esi
  419a36:	xchg   DWORD PTR [eax+0x44],ebx
  419a39:	retf   0x242b
  419a3c:	sub    ebp,DWORD PTR [edi+0x75]
  419a3f:	arpl   WORD PTR [edi+0x2c04bad4],ax
  419a45:	or     al,0x84
  419a47:	ins    DWORD PTR es:[edi],dx
  419a48:	call   0x5c21:0x9e23c04f
  419a4f:	sbb    BYTE PTR [esi-0xc],ah
  419a52:	imul   edi,ebx,0x523cf5e0
  419a58:	mov    BYTE PTR [edi],cl
  419a5a:	lods   eax,DWORD PTR ds:[esi]
  419a5b:	in     al,dx
  419a5c:	stos   DWORD PTR es:[edi],eax
  419a5d:	fdiv   QWORD PTR [esi-0x45e60a8f]
  419a63:	popa   
  419a64:	cmp    BYTE PTR [ecx],al
  419a66:	sahf   
  419a67:	adc    BYTE PTR [ebx+0x1338a144],0x7b
  419a6e:	neg    DWORD PTR [edx+ecx*1-0x3987c557]
  419a75:	hlt    
  419a76:	cmp    eax,0x7f67c33c
  419a7b:	fwait
  419a7c:	ja     0x419ae4
  419a7e:	inc    esi
  419a7f:	popf   
  419a80:	and    BYTE PTR [ebx-0x2d4a0d3c],cl
  419a86:	and    ecx,ecx
  419a88:	daa    
  419a89:	mov    edx,0xc1fce81d
  419a8e:	popa   
  419a8f:	inc    eax
  419a90:	and    al,0x7b
  419a92:	xor    bl,dh
  419a94:	push   ebp
  419a95:	out    0x65,al
  419a97:	mov    cs,WORD PTR [edx+0x5c]
  419a9a:	cmp    dl,bh
  419a9c:	scas   al,BYTE PTR es:[edi]
  419a9d:	jmp    0x419a5f
  419a9f:	dec    ebp
  419aa0:	dec    esi
  419aa1:	and    ebp,DWORD PTR [edx]
  419aa3:	mov    esp,0x48fc514c
  419aa8:	stos   DWORD PTR es:[edi],eax
  419aa9:	sbb    BYTE PTR [edx],0xf0
  419aac:	or     BYTE PTR [ebx-0x1a],dh
  419aaf:	nop
  419ab0:	out    0xa0,eax
  419ab2:	push   edx
  419ab3:	push   edx
  419ab4:	(bad)  
  419ab5:	or     eax,DWORD PTR [ebx-0x63b00262]
  419abb:	aam    0xa3
  419abd:	sbb    BYTE PTR [edx],dh
  419abf:	outs   dx,BYTE PTR ds:[esi]
  419ac0:	cmp    bl,BYTE PTR [ebx]
  419ac2:	sbb    dl,cl
  419ac4:	add    ebx,ebx
  419ac6:	add    eax,0x70804cf8
  419acb:	push   edx
  419acc:	(bad)  
  419acd:	loop   0x419adb
  419acf:	nop
  419ad0:	test   eax,0x80212851
  419ad5:	enter  0x7785,0xa9
  419ad9:	stos   DWORD PTR es:[edi],eax
  419ada:	pop    ss
  419adb:	xlat   BYTE PTR ds:[ebx]
  419adc:	pop    ebp
  419add:	xor    al,0x8b
  419adf:	mov    eax,ds:0x1dbb63a1
  419ae4:	pop    eax
  419ae5:	scas   al,BYTE PTR es:[edi]
  419ae6:	mov    ah,0xa8
  419ae8:	ret    0xb33f
  419aeb:	push   cs
  419aec:	fwait
  419aed:	push   0x19fc8133
  419af2:	push   0x15de3da5
  419af7:	jae    0x419aba
  419af9:	and    eax,0x8453567b
  419afe:	inc    edi
  419aff:	or     edx,DWORD PTR [ebx+0x5f]
  419b02:	mov    ds:0xbe819196,eax
  419b07:	jmp    FWORD PTR [eax-0x48]
  419b0a:	push   cs
  419b0b:	push   ds
  419b0c:	in     eax,dx
  419b0d:	push   ds
  419b0e:	lea    eax,[esp+ecx*1+0x5b]
  419b12:	in     eax,dx
  419b13:	hlt    
  419b14:	mov    ch,0x4f
  419b16:	ins    BYTE PTR es:[edi],dx
  419b17:	(bad)  
  419b19:	daa    
  419b1a:	pop    edi
  419b1b:	arpl   WORD PTR [ecx+0x794d5834],di
  419b21:	pop    edi
  419b22:	mov    edx,0x76b83592
  419b27:	mov    BYTE PTR [ebp+0x13fbb01a],dh
  419b2d:	inc    ecx
  419b2e:	xchg   edx,eax
  419b2f:	retf   
  419b30:	push   edx
  419b31:	data16 in al,0xb1
  419b34:	sbb    DWORD PTR [eax],ebp
  419b36:	and    al,0xb7
  419b38:	pop    eax
  419b39:	out    0x54,al
  419b3b:	nop
  419b3c:	dec    esp
  419b3d:	sbb    DWORD PTR [esi],ecx
  419b3f:	imul   eax,DWORD PTR [ebp-0x6af91b8c],0xffffffb8
  419b46:	xchg   ebp,eax
  419b47:	scas   al,BYTE PTR es:[edi]
  419b48:	jb     0x419b85
  419b4a:	int3   
  419b4b:	in     eax,0xa2
  419b4d:	jns    0x419b5e
  419b4f:	xchg   edx,eax
  419b50:	dec    esp
  419b51:	sub    BYTE PTR [edi+0x1c],dl
  419b54:	out    dx,al
  419b55:	call   0x9933:0x37a3460c
  419b5c:	push   edx
  419b5d:	mov    edx,0x73d54aa9
  419b62:	mov    eax,eax
  419b64:	push   ebp
  419b65:	pop    ebx
  419b66:	sar    esi,1
  419b68:	xlat   BYTE PTR ds:[ebx]
  419b69:	mov    al,ds:0x3cbaea2c
  419b6e:	sbb    eax,0x8d93d210
  419b73:	jmp    0x752ab004
  419b78:	and    al,0xfd
  419b7a:	mov    ebp,0x4cf954
  419b7f:	out    0x11,al
  419b81:	jno    0x419bee
  419b83:	pop    eax
  419b84:	sysexit 
  419b86:	adc    eax,0x4f80001
  419b8b:	add    BYTE PTR [eax],al
  419b8d:	and    edx,ecx
  419b8f:	push   ds
  419b90:	mov    ebp,0x619a92f4
  419b95:	sub    BYTE PTR [ebp-0x5b3032a5],0xed
  419b9c:	mov    bh,0xd6
  419b9e:	push   ss
  419b9f:	and    eax,0x5de7c06
  419ba4:	int    0xab
  419ba6:	lea    eax,[ebx-0x56]
  419ba9:	sub    esp,DWORD PTR [esi-0x1e]
  419bac:	xlat   BYTE PTR ds:[bx]
  419bae:	push   ss
  419baf:	mov    ebx,0x6fe7cc9b
  419bb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bb5:	repnz xlat BYTE PTR ds:[ebx]
  419bb7:	adc    BYTE PTR [ebp+ebx*1+0x4639b83c],ah
  419bbe:	jmp    0x419b7c
  419bc0:	pusha  
  419bc1:	pop    ecx
  419bc2:	adc    eax,0x61182a3b
  419bc7:	stc    
  419bc8:	mov    BYTE PTR [eax],dh
  419bca:	pop    ecx
  419bcb:	push   edx
  419bcc:	sub    edi,DWORD PTR [ebx+0x2c]
  419bcf:	jb     0x419c30
  419bd1:	(bad)  [edi]
  419bd3:	(bad)  
  419bd4:	loop   0x419b83
  419bd6:	and    DWORD PTR [edi+0x1],ecx
  419bd9:	mov    ah,0x37
  419bdb:	xor    edi,DWORD PTR [ebp+ebx*1+0x5203d73b]
  419be2:	inc    ebp
  419be3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419be4:	push   edx
  419be5:	xor    al,0x5b
  419be7:	rcl    DWORD PTR [edi+0x5f3471f4],1
  419bed:	jne    0x419c2a
  419bef:	leave  
  419bf0:	mov    ebp,0xa3d534c4
  419bf5:	add    BYTE PTR [edx-0x722aceb8],cl
  419bfb:	fld    QWORD PTR [ecx+ecx*4]
  419bfe:	aaa    
  419bff:	clc    
  419c00:	or     dl,BYTE PTR [esi+eiz*4-0x24994932]
  419c07:	mov    eax,ds:0x762fbe7b
  419c0c:	and    bh,ch
  419c0e:	scas   al,BYTE PTR es:[edi]
  419c0f:	mov    ebx,0x148c2670
  419c14:	ins    DWORD PTR es:[edi],dx
  419c15:	sbb    bh,BYTE PTR [esi-0x20]
  419c18:	push   ecx
  419c19:	stc    
  419c1a:	mov    ebx,0xb676eac5
  419c1f:	(bad)  
  419c20:	cmp    DWORD PTR [ebx],esi
  419c22:	in     al,dx
  419c23:	dec    DWORD PTR [ebp+0x71560e38]
  419c29:	imul   ecx,DWORD PTR [ecx],0x70f2d3ab
  419c2f:	aas    
  419c30:	mov    ebp,0xb8261dcf
  419c35:	push   0xfffffff4
  419c37:	aaa    
  419c38:	in     eax,0x5f
  419c3a:	cwde   
  419c3b:	sti    
  419c3c:	outs   dx,DWORD PTR ds:[esi]
  419c3d:	shl    BYTE PTR [ecx],cl
  419c3f:	loopne 0x419c57
  419c41:	addr16 mov ebp,edi
  419c44:	jl     0x419cab
  419c46:	outs   dx,BYTE PTR ds:[esi]
  419c47:	bound  ebx,QWORD PTR [esi+ebp*2]
  419c4a:	xor    al,0x38
  419c4c:	inc    edx
  419c4d:	rcr    BYTE PTR ss:[ecx],1
  419c50:	int    0xf7
  419c52:	sbb    eax,0xb74d5ead
  419c57:	jmp    0xf2f667fd
  419c5c:	mov    edi,0x4011565e
  419c61:	sub    DWORD PTR [eax],0x1c
  419c64:	mov    edx,0x8246e970
  419c69:	cdq    
  419c6a:	dec    ebx
  419c6b:	sub    BYTE PTR [eax+0x683e128a],ch
  419c71:	fs (bad) 
  419c73:	ficomp WORD PTR [eax]
  419c75:	mov    esi,eax
  419c77:	xchg   esi,eax
  419c78:	push   esp
  419c79:	push   ebp
  419c7a:	test   dl,ch
  419c7c:	test   DWORD PTR [ebp-0x7fc1d658],esp
  419c82:	ss cdq 
  419c84:	push   ds
  419c85:	push   cs
  419c86:	lahf   
  419c87:	int3   
  419c88:	sub    al,0x89
  419c8a:	dec    eax
  419c8b:	pop    esp
  419c8c:	add    ebp,DWORD PTR [edi+0x24]
  419c8f:	out    dx,al
  419c90:	mov    dl,0x2d
  419c92:	outs   dx,BYTE PTR ds:[esi]
  419c93:	mov    ebx,esi
  419c95:	cdq    
  419c96:	int3   
  419c97:	(bad)  
  419c98:	mov    ebp,0x1980bdb5
  419c9d:	jmp    FWORD PTR [eax]
  419c9f:	push   ss
  419ca0:	xchg   ecx,eax
  419ca1:	adc    edx,DWORD PTR [ebx-0x3368b22c]
  419ca7:	call   0xe94a:0x7dc616d9
  419cae:	call   0x3f79b4d3
  419cb3:	das    
  419cb4:	jecxz  0x419ca3
  419cb6:	mov    ch,0xcd
  419cb8:	mov    ch,0x5c
  419cba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cbb:	inc    edi
  419cbc:	xchg   BYTE PTR [edx+esi*2-0x7f],dh
  419cc0:	sar    DWORD PTR [edi+0x3a1bf948],1
  419cc6:	add    DWORD PTR [ecx+0x74d16c1e],esi
  419ccc:	aas    
  419ccd:	test   eax,0x696a33a5
  419cd2:	test   BYTE PTR [esi-0x71],al
  419cd5:	adc    eax,DWORD PTR [ebp-0x7d]
  419cd8:	aas    
  419cd9:	mov    esi,DWORD PTR [edi+0x32bd54eb]
  419cdf:	pop    edx
  419ce0:	mov    eax,ds:0xe771b781
  419ce5:	xlat   BYTE PTR ds:[ebx]
  419ce6:	aad    0x64
  419ce8:	inc    edx
  419ce9:	cdq    
  419cea:	sbb    al,0x16
  419cec:	repnz pop edi
  419cee:	cmp    BYTE PTR [ebp-0x3],bh
  419cf1:	stos   DWORD PTR es:[edi],eax
  419cf2:	jnp    0x419c81
  419cf4:	gs popa 
  419cf6:	addr16 mov esi,0x1071db3
  419cfc:	dec    esi
  419cfd:	ja     0x419d1e
  419cff:	fmul   DWORD PTR [esi+0x56]
  419d02:	inc    edi
  419d03:	in     eax,dx
  419d04:	outs   dx,BYTE PTR ds:[esi]
  419d05:	mov    ecx,0x3f28efe
  419d0a:	mov    ebx,0x7f4313e8
  419d0f:	fadd   DWORD PTR [ebx]
  419d11:	adc    esi,esi
  419d13:	dec    edx
  419d14:	and    ebp,DWORD PTR [edi+0x38]
  419d17:	data16 loope 0x419d7a
  419d1a:	in     eax,dx
  419d1b:	mov    eax,0x209a43d9
  419d20:	(bad)  
  419d22:	push   ebx
  419d23:	cwde   
  419d24:	mov    esp,0x2243aae
  419d29:	push   eax
  419d2a:	aad    0x96
  419d2c:	pop    eax
  419d2d:	mov    edi,0xef97ed5d
  419d32:	bound  ecx,QWORD PTR [ebp-0x6a]
  419d35:	icebp  
  419d36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d37:	ficom  DWORD PTR [ebp+0x7af9a735]
  419d3d:	pop    edi
  419d3e:	dec    edi
  419d3f:	cmp    edx,DWORD PTR [edx]
  419d41:	adc    DWORD PTR [edi+esi*1+0x1e],ecx
  419d45:	pop    ss
  419d46:	sbb    DWORD PTR [edx],esi
  419d48:	add    DWORD PTR [ecx],esp
  419d4a:	outs   dx,BYTE PTR ds:[esi]
  419d4b:	sbb    al,0x2c
  419d4d:	push   ebx
  419d4e:	sub    al,BYTE PTR [eax+esi*8]
  419d51:	and    al,0x7a
  419d53:	xchg   ebp,eax
  419d54:	push   esp
  419d55:	mov    eax,0xae72ea91
  419d5a:	fst    DWORD PTR [ebp+0x40]
  419d5d:	rcr    DWORD PTR [edx+0x29938535],1
  419d63:	cmp    BYTE PTR [edi+0x65917bb3],ch
  419d69:	repz mov edx,0x59962d3f
  419d6f:	popf   
  419d70:	pop    ds
  419d71:	repz mov ?,WORD PTR [edi+ebp*8-0x167c9c0f]
  419d79:	sub    eax,0x2765993e
  419d7e:	jmp    0x419da7
  419d80:	xlat   BYTE PTR ds:[ebx]
  419d81:	loopne 0x419d99
  419d83:	js     0x419dd7
  419d85:	stos   DWORD PTR es:[edi],eax
  419d86:	dec    esi
  419d87:	fs test eax,0xc11f17f1
  419d8d:	sbb    DWORD PTR [esi],ecx
  419d8f:	jg     0x419d4f
  419d91:	fwait
  419d92:	sub    DWORD PTR [eax],esp
  419d94:	mov    ch,0xea
  419d96:	inc    ebx
  419d97:	inc    esp
  419d98:	mov    ecx,0xdcbe8fc5
  419d9d:	jl     0x419de5
  419d9f:	xchg   ebp,eax
  419da0:	cdq    
  419da1:	loop   0x419d6d
  419da3:	inc    edi
  419da4:	dec    esi
  419da5:	lock mov ecx,0xa447733e
  419dab:	cmp    eax,0xc299e4e1
  419db0:	pop    esi
  419db1:	aas    
  419db2:	sub    dh,BYTE PTR [eax+0x30ee7b72]
  419db8:	outs   dx,BYTE PTR ds:[esi]
  419db9:	inc    eax
  419dba:	cmp    BYTE PTR [esi+ebx*4-0x24],al
  419dbe:	inc    edi
  419dbf:	out    dx,eax
  419dc0:	push   esp
  419dc1:	sbb    DWORD PTR [esi-0x72],ecx
  419dc4:	loop   0x419e36
  419dc6:	inc    esp
  419dc7:	pop    edi
  419dc8:	pop    ss
  419dc9:	cmc    
  419dca:	mov    BYTE PTR [eax+0x2f],al
  419dcd:	pushf  
  419dce:	lds    edi,FWORD PTR [esi]
  419dd0:	sub    BYTE PTR [ecx],dh
  419dd2:	pop    esp
  419dd3:	test   dh,bl
  419dd5:	jbe    0x419dc1
  419dd7:	xor    BYTE PTR [esp+edx*2+0x3d],bl
  419ddb:	int    0x8d
  419ddd:	sub    edx,DWORD PTR [eax+ecx*8]
  419de0:	imul   ebp,ebx,0x69
  419de3:	xor    esp,DWORD PTR [ebp-0x6d2c0a5d]
  419de9:	mul    DWORD PTR [esi-0x14]
  419dec:	add    bl,dh
  419dee:	sbb    DWORD PTR [esi+0x27],ebp
  419df1:	repnz add eax,0xe25aa2c2
  419df7:	fidivr WORD PTR [ebx+eax*2]
  419dfa:	xchg   ebp,eax
  419dfb:	push   edx
  419dfc:	mov    ebx,0x8a6c1b16
  419e01:	push   ebp
  419e02:	add    BYTE PTR [edi+0x5cad4c90],cl
  419e08:	dec    ecx
  419e09:	shl    BYTE PTR [eax],1
  419e0b:	mov    ebp,0x522646d5
  419e10:	inc    eax
  419e11:	inc    edi
  419e12:	lods   al,BYTE PTR ds:[esi]
  419e13:	lea    ecx,[ebp-0x182de3b3]
  419e19:	dec    esi
  419e1a:	sub    ebp,DWORD PTR [edx+0x1b3dc2b1]
  419e20:	(bad)
  419e23:	ins    DWORD PTR es:[edi],dx
  419e24:	dec    ebp
  419e25:	cmp    al,BYTE PTR [ebx]
  419e27:	sub    esp,DWORD PTR [ebp-0x3a]
  419e2a:	dec    eax
  419e2b:	xchg   edx,edi
  419e2d:	int3   
  419e2e:	bnd ret 
  419e30:	cld    
  419e31:	out    0xfa,al
  419e33:	push   esi
  419e34:	out    0x8a,eax
  419e36:	push   eax
  419e37:	inc    esp
  419e38:	sub    eax,0x1d024c25
  419e3d:	call   0x8da2b2d3
  419e42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e43:	mov    ebp,0x50ad2947
  419e48:	push   ebx
  419e49:	fiadd  DWORD PTR [edx+edx*2]
  419e4c:	xchg   ebx,eax
  419e4d:	cmp    al,0xbe
  419e4f:	out    dx,eax
  419e50:	repz jne 0x419e22
  419e53:	push   esp
  419e54:	loop   0x419e58
  419e56:	jmp    FWORD PTR [esi+0x46]
  419e59:	stc    
  419e5a:	aaa    
  419e5b:	or     al,0xe7
  419e5d:	xor    BYTE PTR [edi],ah
  419e5f:	fwait
  419e60:	dec    ecx
  419e61:	xchg   BYTE PTR [ebx],al
  419e63:	or     DWORD PTR [ebx-0x35],edi
  419e66:	pop    edi
  419e67:	push   0xb9092754
  419e6c:	repz std 
  419e6e:	sahf   
  419e6f:	dec    edi
  419e70:	div    esi
  419e72:	mov    ecx,DWORD PTR ds:0xc626fa12
  419e78:	outs   dx,BYTE PTR ds:[esi]
  419e79:	fs js  0x419e5a
  419e7c:	inc    esi
  419e7d:	fbstp  TBYTE PTR [edi+eiz*1]
  419e80:	outs   dx,BYTE PTR ds:[esi]
  419e81:	cmp    DWORD PTR [ebx+0x7b66bc83],eax
  419e87:	or     edi,DWORD PTR [ebx+0x1606c5d8]
  419e8d:	repz sub BYTE PTR [ebx],0xa4
  419e91:	xchg   esp,eax
  419e92:	dec    edx
  419e93:	jnp    0x419e86
  419e95:	xor    BYTE PTR [edx+0x79af9d0e],al
  419e9b:	xchg   DWORD PTR [ecx-0x24],ebp
  419e9e:	je     0x419e8a
  419ea0:	push   0x41d25579
  419ea5:	mov    eax,0xccdb05a6
  419eaa:	cmp    ch,0xf6
  419ead:	(bad)  
  419eae:	je     0x419e64
  419eb0:	mov    ?,WORD PTR [eax]
  419eb2:	addr16 stc 
  419eb4:	adc    esp,DWORD PTR [ecx+eax*4]
  419eb7:	in     eax,0xd6
  419eb9:	(bad)  
  419eba:	cwde   
  419ebb:	imul   edx,DWORD PTR [eax],0x91399e6d
  419ec1:	mov    al,ds:0x67bf4753
  419ec6:	arpl   cx,bp
  419ec8:	push   ebx
  419ec9:	rol    BYTE PTR [ebp-0x60e3286b],0x10
  419ed0:	in     al,0x9b
  419ed2:	bound  ebp,QWORD PTR [ecx-0xd2f33d9]
  419ed8:	adc    eax,0xd0ccdec9
  419edd:	fistp  WORD PTR [ecx+0x2320f4b]
  419ee3:	adc    DWORD PTR [ebx],edx
  419ee5:	pop    eax
  419ee6:	add    BYTE PTR [edx+0x75],bh
  419ee9:	popf   
  419eea:	test   eax,0x2c82469c
  419eef:	rcr    DWORD PTR [edi],0xe6
  419ef2:	push   0x53
  419ef4:	aas    
  419ef5:	xor    edx,DWORD PTR [edi-0x2db9c48f]
  419efb:	dec    edi
  419efc:	shl    dl,cl
  419efe:	sbb    esi,DWORD PTR [edx]
  419f00:	jne    0x419e9f
  419f02:	xlat   BYTE PTR ds:[ebx]
  419f03:	sar    ebp,1
  419f05:	adc    ebx,DWORD PTR [edi-0x10]
  419f08:	cmc    
  419f09:	xor    eax,0x24c76e74
  419f0e:	iret   
  419f0f:	ss aas 
  419f11:	push   0x36
  419f13:	mov    ah,0x48
  419f15:	sub    al,0xea
  419f17:	mov    dl,0x4f
  419f19:	and    BYTE PTR [ebx],al
  419f1b:	cwde   
  419f1c:	jno    0x419f6f
  419f1e:	cmp    bh,ch
  419f20:	cmc    
  419f21:	or     BYTE PTR [eax+edx*1-0x6cbad40c],ch
  419f28:	mov    WORD PTR [eax+0x1bbfc5ef],es
  419f2e:	nop
  419f2f:	xor    DWORD PTR [ecx-0x1c],0xffffffdb
  419f33:	std    
  419f34:	push   ss
  419f35:	fisubr DWORD PTR [edx]
  419f37:	call   0x4ce368f
  419f3c:	in     al,dx
  419f3d:	fstp   DWORD PTR [edx+0x7a6097f5]
  419f43:	and    al,0x69
  419f45:	mov    cl,BYTE PTR [esi+0x3]
  419f48:	inc    ebx
  419f49:	or     dl,cl
  419f4b:	xchg   esp,eax
  419f4c:	test   BYTE PTR [esi-0x7],bh
  419f4f:	cmp    edi,ecx
  419f51:	mov    ecx,0xfeaa8ea9
  419f56:	mov    ch,0x67
  419f58:	shl    esi,0x24
  419f5b:	ins    DWORD PTR es:[edi],dx
  419f5c:	shl    esi,1
  419f5e:	mov    ah,0x50
  419f60:	loop   0x419f44
  419f62:	and    eax,DWORD PTR [edi+ebx*2-0x3]
  419f66:	mov    eax,ds:0xa0d1c302
  419f6b:	int3   
  419f6c:	ss test ebp,eax
  419f6f:	rcl    bh,1
  419f71:	add    al,0xdc
  419f73:	dec    esi
  419f74:	xchg   DWORD PTR [ebx+edx*1-0x6d0f956e],edx
  419f7b:	shr    DWORD PTR [ebp*4-0x7be55eaa],cl
  419f82:	sbb    al,BYTE PTR [eax+0x63f67852]
  419f88:	lds    ebx,FWORD PTR [edi+eiz*1-0x2f52c720]
  419f8f:	outs   dx,BYTE PTR ds:[esi]
  419f90:	call   0x56928678
  419f95:	pop    ss
  419f96:	movhps xmm4,QWORD PTR [eax+0x27ae348f]
  419f9d:	repz cdq 
  419f9f:	xchg   edi,eax
  419fa0:	sbb    ah,BYTE PTR [edx+0x53607ea3]
  419fa6:	stos   BYTE PTR es:[edi],al
  419fa7:	ficom  DWORD PTR [esi]
  419fa9:	hlt    
  419faa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fab:	into   
  419fac:	mov    esp,DWORD PTR [ecx]
  419fae:	and    edi,DWORD PTR [edi]
  419fb0:	sub    ecx,esp
  419fb2:	mov    WORD PTR [edi-0x53],es
  419fb5:	jl     0x41a017
  419fb7:	mov    ah,0x26
  419fb9:	in     eax,dx
  419fba:	out    0xed,al
  419fbc:	sbb    DWORD PTR [ebx],edi
  419fbe:	and    DWORD PTR [ebx-0x39852ef6],0xfffffff2
  419fc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fc6:	and    eax,0x88d8343f
  419fcb:	int3   
  419fcc:	pop    ecx
  419fcd:	ficomp WORD PTR [ebp-0x3a0292e2]
  419fd3:	mov    esp,0x5c5b6529
  419fd8:	(bad)  
  419fd9:	cmc    
  419fda:	jmp    0x419fda
  419fdc:	xor    bh,BYTE PTR [ebx-0x62f7e72c]
  419fe2:	(bad)  
  419fe3:	jecxz  0x41a006
  419fe5:	fsub   QWORD PTR [eax+0x1b]
  419fe8:	sbb    DWORD PTR [eax],edi
  419fea:	leave  
  419feb:	fistp  DWORD PTR [esi+0x252051b]
  419ff1:	in     eax,dx
  419ff2:	call   0xb029:0x463a847
  419ff9:	(bad)
  419ffc:	add    al,0x98
  419ffe:	or     bh,cl
  41a000:	out    0xe8,al
  41a002:	push   0xfab09a31
  41a007:	push   0x7e
  41a009:	xchg   edx,eax
  41a00a:	js     0x41a07a
  41a00c:	pop    eax
  41a00d:	div    DWORD PTR [esi-0x6136312b]
  41a013:	lahf   
  41a014:	fcmovnu st,st(1)
  41a016:	retf   0xbe3c
  41a019:	repz adc esp,esi
  41a01c:	loope  0x41a081
  41a01e:	jecxz  0x419fb1
  41a020:	mov    cl,0xbb
  41a022:	sub    ebx,DWORD PTR [ebp+0x439ea753]
  41a028:	int3   
  41a029:	cmp    eax,0xf0f28f72
  41a02e:	and    ebp,DWORD PTR [ebx]
  41a030:	inc    edx
  41a031:	ds inc eax
  41a033:	mov    eax,ds:0xd44630ba
  41a038:	xor    bh,BYTE PTR [ecx-0x6b065c5c]
  41a03e:	in     eax,dx
  41a03f:	not    DWORD PTR [edx+0xb86056f]
  41a045:	fdiv   QWORD PTR [ebp+edi*1+0x18]
  41a049:	loope  0x41a048
  41a04b:	or     eax,0xacaa4a8f
  41a050:	outs   dx,DWORD PTR ds:[esi]
  41a051:	cwde   
  41a052:	adc    cl,BYTE PTR [ecx+0x5be910a3]
  41a058:	call   FWORD PTR [ebx+edx*4-0x618d0918]
  41a05f:	push   ebx
  41a060:	jp     0x41a04e
  41a062:	ror    DWORD PTR [edi],0x8c
  41a065:	jae    0x419ffc
  41a067:	xor    BYTE PTR [edx],0x32
  41a06a:	cmc    
  41a06b:	adc    ecx,edi
  41a06d:	dec    ebp
  41a06e:	or     dl,BYTE PTR [ecx-0xa414f87]
  41a074:	pop    ss
  41a075:	mov    bh,0xed
  41a077:	adc    DWORD PTR [esi],edx
  41a079:	or     eax,0xe0fea046
  41a07e:	(bad)  
  41a07f:	ficomp DWORD PTR [eax+eiz*8+0x75]
  41a083:	xor    ah,dh
  41a085:	mov    BYTE PTR [ebp-0x40],al
  41a088:	fs int 0xe5
  41a08b:	lods   al,BYTE PTR ds:[esi]
  41a08c:	in     eax,dx
  41a08d:	call   0x45977730
  41a092:	shl    DWORD PTR [edi],1
  41a094:	xchg   esp,eax
  41a095:	sub    eax,0xf800011a
  41a09a:	add    al,0x0
  41a09c:	add    BYTE PTR [ebx+0x3139fea9],dl
  41a0a2:	mov    cl,0x5a
  41a0a4:	mov    fs,WORD PTR [ebx]
  41a0a6:	push   ecx
  41a0a7:	pop    es
  41a0a8:	add    eax,0x9ec59914
  41a0ad:	push   ds
  41a0ae:	dec    esp
  41a0af:	shl    ebp,0x10
  41a0b2:	push   es
  41a0b3:	stc    
  41a0b4:	ss dec edx
  41a0b6:	mov    BYTE PTR [edx-0x49],ah
  41a0b9:	sub    ebx,DWORD PTR [ecx-0x4a]
  41a0bc:	fisub  DWORD PTR [eax-0x338c4e69]
  41a0c2:	lea    esi,[ecx-0x36]
  41a0c5:	mov    al,0xbb
  41a0c7:	sbb    ch,dh
  41a0c9:	lock xchg edi,eax
  41a0cb:	jle    0x41a113
  41a0cd:	or     eax,0xdd13398f
  41a0d2:	xchg   ebp,eax
  41a0d3:	xor    BYTE PTR [edx-0x6a3f00e3],dl
  41a0d9:	retf   
  41a0da:	pop    edi
  41a0db:	popa   
  41a0dc:	inc    edi
  41a0dd:	fcmovu st,st(6)
  41a0df:	rcr    DWORD PTR [eax+0x57],cl
  41a0e2:	jl     0x41a096
  41a0e4:	xor    BYTE PTR [ecx-0x39a1d394],dh
  41a0ea:	aad    0x11
  41a0ec:	push   ds
  41a0ed:	jp     0x41a0a5
  41a0ef:	inc    esp
  41a0f0:	fmul   st(0),st
  41a0f2:	pop    ebx
  41a0f3:	add    al,0xe5
  41a0f5:	test   DWORD PTR [edx+0x51],edi
  41a0f8:	lods   eax,DWORD PTR ds:[esi]
  41a0f9:	sar    DWORD PTR [edx+0x5301e56],1
  41a0ff:	push   ebx
  41a100:	push   ebx
  41a101:	or     edx,DWORD PTR [esi-0x60]
  41a104:	lods   al,BYTE PTR ds:[esi]
  41a105:	pop    ss
  41a106:	outs   dx,DWORD PTR ds:[esi]
  41a107:	dec    esp
  41a108:	adc    eax,0x4dec382a
  41a10d:	adc    DWORD PTR [esi+eiz*8+0x26],esp
  41a111:	mov    eax,0xe1b6ce52
  41a116:	add    DWORD PTR ss:[esp+eax*8+0x40d46805],esp
  41a11e:	adc    bl,BYTE PTR [ebx+0x24415635]
  41a124:	or     BYTE PTR [edi-0x1083fac6],al
  41a12a:	or     bl,BYTE PTR [edi]
  41a12c:	test   eax,0xe66e8f2
  41a131:	jne    0x41a0b6
  41a133:	mov    DWORD PTR [esi-0x348a986f],edi
  41a139:	in     al,dx
  41a13a:	repnz stos DWORD PTR es:[edi],eax
  41a13c:	dec    esi
  41a13d:	outs   dx,BYTE PTR ds:[esi]
  41a13e:	inc    eax
  41a13f:	and    DWORD PTR [edi+0x5b],0x65
  41a143:	int    0xba
  41a145:	jo     0x41a0e8
  41a147:	fsub   QWORD PTR [ebp+edi*4-0x60]
  41a14b:	jp     0x41a1b2
  41a14d:	sbb    ebp,DWORD PTR [edi+0x28]
  41a150:	js     0x41a170
  41a152:	fs loop 0x41a106
  41a155:	jbe    0x41a0ef
  41a157:	push   cs
  41a158:	ror    DWORD PTR ds:0x2cc2dba0,1
  41a15e:	aad    0x95
  41a160:	jecxz  0x41a1b0
  41a162:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a163:	cmp    bh,bl
  41a165:	cmc    
  41a166:	mov    DWORD PTR [ebx+0x8a7790b],ebx
  41a16c:	cmc    
  41a16d:	es push ds
  41a16f:	int    0x17
  41a171:	push   edx
  41a172:	cmp    bh,al
  41a174:	jl     0x41a1ce
  41a176:	mov    bl,0xe8
  41a178:	push   es
  41a179:	inc    eax
  41a17a:	sti    
  41a17b:	clc    
  41a17c:	xchg   ecx,eax
  41a17d:	mov    cl,0xbc
  41a17f:	repz pop ebp
  41a181:	jnp    0x41a15d
  41a183:	loopne 0x41a182
  41a185:	sbb    eax,0xad3529f4
  41a18a:	fs in  eax,dx
  41a18c:	adc    al,0x1b
  41a18e:	imul   ecx,DWORD PTR [ebp+0x7459d6fa],0xc
  41a195:	out    dx,eax
  41a196:	icebp  
  41a197:	cmp    eax,0x91ec9dc
  41a19c:	rcl    DWORD PTR [eax],1
  41a19e:	mov    cl,0x2
  41a1a0:	pop    edi
  41a1a1:	xchg   ebp,eax
  41a1a2:	adc    eax,0xa124dc52
  41a1a7:	sahf   
  41a1a8:	inc    ebx
  41a1a9:	xlat   BYTE PTR ds:[ebx]
  41a1aa:	add    bh,BYTE PTR ds:0xc62550ec
  41a1b0:	mov    WORD PTR [ebp+0x7f29b3f1],fs
  41a1b6:	outs   dx,BYTE PTR ds:[esi]
  41a1b7:	dec    ecx
  41a1b8:	jae    0x41a20b
  41a1ba:	mov    ecx,DWORD PTR [ecx+0x21]
  41a1bd:	out    dx,eax
  41a1be:	std    
  41a1bf:	jp     0x41a1c7
  41a1c1:	push   edx
  41a1c2:	sar    BYTE PTR [ebx+0x47],cl
  41a1c5:	adc    DWORD PTR [edi],edx
  41a1c7:	in     al,dx
  41a1c8:	iret   
  41a1c9:	mov    ah,0x4a
  41a1cb:	inc    ebx
  41a1cc:	mov    ebx,0xedf07496
  41a1d1:	adc    edi,edi
  41a1d3:	leave  
  41a1d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1d5:	pop    esi
  41a1d6:	rcr    DWORD PTR [eax+edi*1],1
  41a1d9:	fwait
  41a1da:	retf   0x3279
  41a1dd:	fs inc ecx
  41a1df:	(bad)  
  41a1e0:	xor    edi,edi
  41a1e2:	stc    
  41a1e3:	aam    0x4a
  41a1e5:	test   BYTE PTR [esi-0x3761a8a6],bl
  41a1eb:	jmp    0x3cb3c154
  41a1f0:	mov    WORD PTR [edx-0xc],?
  41a1f3:	sub    BYTE PTR [edi],dh
  41a1f5:	scas   eax,DWORD PTR es:[edi]
  41a1f6:	xchg   ecx,eax
  41a1f7:	aaa    
  41a1f8:	adc    al,0xab
  41a1fa:	inc    BYTE PTR ds:0x6fc3d2ff
  41a200:	call   0x6af:0x42995316
  41a207:	pop    ebp
  41a208:	jo     0x41a245
  41a20a:	test   al,0xba
  41a20c:	push   es
  41a20d:	jmp    0x41a236
  41a20f:	pop    ecx
  41a210:	jae    0x41a27a
  41a212:	int    0xb
  41a214:	push   edx
  41a215:	jecxz  0x41a1a5
  41a217:	sar    BYTE PTR [edi],0xe7
  41a21a:	adc    eax,0x2fd7d7ce
  41a21f:	dec    ebx
  41a220:	jp     0x41a200
  41a222:	sbb    BYTE PTR [ebx+0x209af4e4],ch
  41a228:	mov    edi,edi
  41a22a:	push   ss
  41a22b:	ins    BYTE PTR es:[edi],dx
  41a22c:	in     eax,0xc6
  41a22e:	ret    0x869d
  41a231:	pop    esi
  41a232:	mov    BYTE PTR [eax-0x45],bl
  41a235:	sub    DWORD PTR [edi],ecx
  41a237:	push   edx
  41a238:	push   esi
  41a239:	mov    cl,0x96
  41a23b:	loop   0x41a285
  41a23d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a23e:	in     eax,0x60
  41a240:	(bad)  
  41a241:	jno    0x41a23f
  41a243:	jl     0x41a222
  41a245:	sbb    al,0xd9
  41a247:	mov    bl,0xf9
  41a249:	fmul   DWORD PTR [ebx]
  41a24b:	gs pushf 
  41a24d:	fwait
  41a24e:	xor    ecx,DWORD PTR [ecx-0x7b]
  41a251:	in     al,0x46
  41a253:	add    DWORD PTR [ebp+esi*4+0x34],esp
  41a257:	mov    dl,0x66
  41a25a:	mov    ah,ch
  41a25c:	mov    eax,0x668722e3
  41a261:	dec    eax
  41a262:	add    BYTE PTR [ecx],cl
  41a264:	cmp    al,0x95
  41a266:	imul   dh
  41a268:	sbb    al,0x3b
  41a26a:	shl    BYTE PTR [ecx-0x3d804666],1
  41a270:	sub    dl,BYTE PTR [esi-0x15]
  41a273:	jmp    0x41a26f
  41a275:	mov    edi,0x228e6bc
  41a27a:	imul   esi,DWORD PTR [ecx-0x25cff584],0x50
  41a281:	jmp    0x41a2ab
  41a283:	loop   0x41a292
  41a285:	xchg   ebx,eax
  41a286:	push   ecx
  41a287:	call   0xf65a00e2
  41a28c:	pop    ecx
  41a28d:	or     esi,DWORD PTR [esi-0x4bad7482]
  41a293:	cmp    cl,0x72
  41a296:	mov    cl,0x62
  41a298:	pop    esp
  41a299:	mov    ebp,0x30dd982b
  41a29e:	mov    al,ds:0xb5c99dd2
  41a2a3:	test   eax,0x4dbc9c55
  41a2a8:	xor    bl,BYTE PTR [edx-0x60]
  41a2ab:	lea    ebp,[eax+0x50]
  41a2ae:	loope  0x41a32f
  41a2b0:	mov    ecx,0x45b8d96c
  41a2b5:	dec    edx
  41a2b7:	imul   edx,DWORD PTR [edi+0x4e5c12dd],0xb8ed2e03
  41a2c1:	retf   
  41a2c2:	jno    0x41a2b3
  41a2c4:	cli    
  41a2c5:	out    dx,eax
  41a2c6:	nop
  41a2c7:	pusha  
  41a2c8:	dec    DWORD PTR [edx-0x4b]
  41a2cb:	hlt    
  41a2cc:	sbb    BYTE PTR [ecx+0x1e],0x3a
  41a2d0:	adc    eax,0x7f811af5
  41a2d5:	pop    eax
  41a2d6:	sbb    bh,BYTE PTR [eax]
  41a2d8:	xchg   edx,eax
  41a2d9:	test   cl,dh
  41a2db:	adc    bl,ch
  41a2dd:	clc    
  41a2de:	jmp    0xe26f:0x393d63a6
  41a2e5:	scas   al,BYTE PTR es:[edi]
  41a2e6:	mov    ebx,DWORD PTR [edi-0x1b439266]
  41a2ec:	jg     0x41a295
  41a2ee:	jle    0x41a301
  41a2f0:	jl     0x41a329
  41a2f2:	pop    ds
  41a2f3:	dec    edi
  41a2f4:	lds    eax,FWORD PTR [ebx-0x30]
  41a2f7:	dec    eax
  41a2f8:	jb     0x41a30e
  41a2fa:	or     eax,DWORD PTR [ecx+0x38]
  41a2fd:	cmc    
  41a2fe:	fiadd  WORD PTR [edx-0x4185d371]
  41a304:	add    BYTE PTR [edi-0x34],dh
  41a307:	in     eax,0xbe
  41a309:	iret   
  41a30a:	dec    ecx
  41a30b:	jo     0x41a2d6
  41a30d:	jmp    0x41a2ce
  41a30f:	jnp    0x41a2f9
  41a311:	lods   eax,DWORD PTR ds:[esi]
  41a312:	ss std 
  41a314:	out    0x10,eax
  41a316:	popa   
  41a317:	int3   
  41a318:	in     al,dx
  41a319:	mov    ds:0x41a0459e,al
  41a31e:	cmc    
  41a31f:	sar    DWORD PTR [edi+0x23],cl
  41a322:	data16 ja 0x41a2c4
  41a325:	sub    BYTE PTR [ecx],al
  41a327:	sar    DWORD PTR [esi+0x51],1
  41a32a:	nop
  41a32b:	and    al,0xc2
  41a32d:	aad    0xf5
  41a32f:	lock nop
  41a331:	sbb    DWORD PTR [eax-0x6c],0xffffff9d
  41a335:	pop    ecx
  41a336:	fldcw  WORD PTR [ebp*4+0x7791632c]
  41a33d:	in     eax,0xf8
  41a33f:	dec    ebp
  41a340:	mov    ds:0xbf3596cf,al
  41a345:	xor    BYTE PTR ds:0x8e2e1311,bh
  41a34b:	clc    
  41a34c:	jp     0x41a348
  41a34e:	mov    eax,0x63a59bdb
  41a353:	inc    ecx
  41a354:	dec    esp
  41a355:	push   ebx
  41a356:	xor    ebx,eax
  41a358:	sub    eax,0xb72eb5a6
  41a35d:	ss xchg ebx,eax
  41a35f:	dec    edx
  41a360:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a361:	cs iret 
  41a363:	mov    bl,0x56
  41a365:	popa   
  41a366:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a367:	(bad)  
  41a368:	stos   BYTE PTR es:[edi],al
  41a369:	call   0xe80e939f
  41a36e:	mov    ch,0xb7
  41a370:	stc    
  41a371:	(bad)  
  41a373:	ins    DWORD PTR es:[edi],dx
  41a374:	mov    al,ds:0xd159135b
  41a379:	dec    ebx
  41a37a:	or     BYTE PTR [ecx],cl
  41a37c:	in     al,0xf1
  41a37e:	out    0x8d,eax
  41a380:	inc    edx
  41a381:	jb     0x41a39b
  41a383:	and    al,0x94
  41a385:	inc    ebp
  41a386:	jle    0x41a326
  41a388:	pop    eax
  41a389:	pusha  
  41a38a:	inc    edx
  41a38b:	lods   al,BYTE PTR ds:[esi]
  41a38c:	sti    
  41a38d:	fwait
  41a38e:	push   0xef22aa2
  41a393:	pop    edi
  41a394:	aam    0x9f
  41a396:	retf   0xc3cc
  41a399:	mov    ah,0x8f
  41a39b:	cld    
  41a39c:	mov    WORD PTR [esi],fs
  41a39e:	dec    BYTE PTR [edi+eiz*2-0x5c21ff09]
  41a3a5:	mov    DWORD PTR [ebx-0x5a],edx
  41a3a8:	(bad)  
  41a3a9:	addr16 jmp 0x815d:0x67bed3e4
  41a3b1:	fild   WORD PTR [edi+0x580bfa5a]
  41a3b7:	push   ss
  41a3b8:	(bad)  
  41a3b9:	jmp    0xba8b8d02
  41a3be:	jmp    0xadc2:0x4027312e
  41a3c5:	push   0x4b
  41a3c7:	lods   al,BYTE PTR ds:[esi]
  41a3c8:	and    ah,BYTE PTR [edx]
  41a3ca:	test   DWORD PTR [esi+0x31fa45a3],0x1e1c3b4e
  41a3d4:	fidiv  WORD PTR [eax]
  41a3d6:	mov    ebx,0x41b7caef
  41a3db:	and    ah,ah
  41a3dd:	imul   edx,DWORD PTR [edi+0x57],0x44
  41a3e1:	sub    al,BYTE PTR [eax*4+0x6579ccf7]
  41a3e8:	jecxz  0x41a3e1
  41a3ea:	outs   dx,BYTE PTR ds:[esi]
  41a3eb:	cmc    
  41a3ec:	iret   
  41a3ed:	cld    
  41a3ee:	ins    DWORD PTR es:[edi],dx
  41a3ef:	cdq    
  41a3f0:	adc    BYTE PTR fs:[edi],cl
  41a3f3:	neg    al
  41a3f5:	push   es
  41a3f6:	(bad)  
  41a3f7:	push   cs
  41a3f8:	nop
  41a3f9:	xor    DWORD PTR [eax-0xa],eax
  41a3fc:	(bad)  
  41a3fd:	(bad)  
  41a3fe:	hlt    
  41a3ff:	dec    ebp
  41a400:	enter  0xa0a9,0xf0
  41a404:	daa    
  41a405:	sbb    eax,0xb221fb38
  41a40a:	xchg   ah,bl
  41a40c:	or     ebp,DWORD PTR [eax-0x4e70b5a2]
  41a412:	call   0x220302ae
  41a417:	test   al,0xc8
  41a419:	shl    DWORD PTR [ebp-0x1d],1
  41a41c:	adc    bl,BYTE PTR [ebx]
  41a41e:	ins    BYTE PTR es:[edi],dx
  41a41f:	mov    DWORD PTR [edi+0x17455f3a],esi
  41a425:	test   BYTE PTR [ebp+eax*4-0x1c9393d3],cl
  41a42c:	push   esi
  41a42d:	pop    edi
  41a42e:	retf   
  41a42f:	mov    bl,0x38
  41a431:	jns    0x41a425
  41a433:	xor    eax,0x9e36a3fe
  41a438:	mov    BYTE PTR [ecx+ecx*4+0x2a],bl
  41a43c:	pop    es
  41a43d:	pushf  
  41a43e:	and    eax,0x39cc311a
  41a443:	loop   0x41a3ef
  41a445:	sahf   
  41a446:	in     al,0xbc
  41a448:	addr16 pushf 
  41a44a:	je     0x41a499
  41a44c:	in     al,dx
  41a44d:	jno    0x41a3fd
  41a44f:	imul   edx,esi,0x3a2b5df8
  41a455:	push   esp
  41a456:	xchg   esi,eax
  41a457:	imul   eax,DWORD PTR [ebx+0x2935c584],0x74e27490
  41a461:	aas    
  41a462:	loope  0x41a416
  41a464:	push   edi
  41a465:	fs popa 
  41a467:	cmp    BYTE PTR [edx+0x30e6f5b],0x78
  41a46e:	pop    esp
  41a46f:	(bad)  
  41a470:	(bad)  
  41a471:	ins    DWORD PTR es:[edi],dx
  41a472:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41a474:	xor    bh,BYTE PTR [eax+0x3a4fa5fc]
  41a47a:	or     al,0x44
  41a47c:	push   edx
  41a47d:	and    DWORD PTR [ebx-0x10],0xffffffe4
  41a481:	retf   0xe26e
  41a484:	(bad)
  41a487:	mov    ds,WORD PTR [eax+0x380cea30]
  41a48d:	xlat   BYTE PTR ds:[ebx]
  41a48e:	or     eax,ecx
  41a490:	mov    DWORD PTR [edi-0x26],edi
  41a493:	mov    al,0xc7
  41a495:	push   cs
  41a496:	lock daa 
  41a498:	cdq    
  41a499:	mov    ebx,0x78b7f834
  41a49e:	pop    esp
  41a49f:	int3   
  41a4a0:	mov    esi,0xdb72f551
  41a4a5:	nop
  41a4a6:	les    esi,FWORD PTR [edi]
  41a4a8:	mov    edx,0xaeb9e764
  41a4ad:	neg    BYTE PTR [ecx-0x2942b56e]
  41a4b3:	adc    DWORD PTR [ebp+ecx*2+0x3d],edx
  41a4b7:	jae    0x41a46d
  41a4b9:	mov    esi,0xd5526a08
  41a4be:	push   0x4b
  41a4c0:	mov    al,0x63
  41a4c2:	je     0x41a4e2
  41a4c4:	jecxz  0x41a471
  41a4c6:	sti    
  41a4c7:	sti    
  41a4c8:	push   eax
  41a4c9:	sahf   
  41a4ca:	(bad)  
  41a4cc:	xchg   esp,eax
  41a4cd:	(bad)  
  41a4ce:	mov    ecx,0xb8cac7f6
  41a4d3:	pop    es
  41a4d4:	loop   0x41a4bc
  41a4d6:	pop    edi
  41a4d7:	pusha  
  41a4d8:	sbb    bl,BYTE PTR [ebx+eiz*1]
  41a4db:	and    eax,0x79c71ad
  41a4e0:	imul   esi,DWORD PTR [ecx+ebp*4],0xffffffb7
  41a4e4:	mov    ds:0x9d15580e,al
  41a4e9:	push   cs
  41a4ea:	mov    eax,ds:0x7affebab
  41a4ef:	sbb    al,0xb5
  41a4f1:	mov    eax,0xccd67492
  41a4f6:	mov    dh,0xf
  41a4f8:	inc    edi
  41a4f9:	pop    esp
  41a4fa:	fld    TBYTE PTR [edi-0x64]
  41a4fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4fe:	ret    0x5043
  41a501:	add    dh,dh
  41a503:	call   DWORD PTR [edi]
  41a505:	cmp    eax,0xa6a3d2b8
  41a50a:	sub    BYTE PTR [ebx+0x5ebac3d2],dl
  41a510:	jecxz  0x41a567
  41a512:	mov    bl,BYTE PTR [ebx-0x288f4471]
  41a518:	mov    edx,0xee495086
  41a51d:	scas   al,BYTE PTR es:[edi]
  41a51e:	mov    cs,esp
  41a520:	or     ecx,DWORD PTR [ebx-0x6538586c]
  41a526:	and    ch,0xbc
  41a529:	(bad)  
  41a52a:	scas   al,BYTE PTR es:[edi]
  41a52b:	gs arpl ax,si
  41a52e:	ins    BYTE PTR es:[edi],dx
  41a52f:	adc    eax,0xebf5f057
  41a534:	outs   dx,DWORD PTR ds:[esi]
  41a536:	pop    eax
  41a537:	cmp    esp,ebx
  41a539:	xor    bl,BYTE PTR [esi+esi*4-0x298d8edb]
  41a540:	xchg   ebx,eax
  41a541:	add    ebp,DWORD PTR [eax+0x3c]
  41a544:	(bad)  
  41a545:	push   0xb8d9a10c
  41a54a:	sub    eax,0xc49ccee4
  41a54f:	cmp    esp,DWORD PTR [edx-0x32027fa5]
  41a555:	cdq    
  41a556:	out    dx,eax
  41a557:	pinsrw mm5,WORD PTR [edx-0x4e50c2e0],0x59
  41a55f:	adc    esi,ecx
  41a561:	xchg   edi,eax
  41a562:	cmp    DWORD PTR [esi+0x55],0xffffffba
  41a566:	fbstp  TBYTE PTR [eax]
  41a568:	mov    ebx,0xa71ec837
  41a56d:	mov    ah,BYTE PTR [ecx]
  41a56f:	jne    0x41a502
  41a571:	push   bp
  41a573:	ror    BYTE PTR [eax-0x5b02d473],cl
  41a579:	adc    DWORD PTR [ebx+0x30],ebp
  41a57c:	sub    al,BYTE PTR [esi]
  41a57e:	pushf  
  41a57f:	aaa    
  41a580:	sysexit 
  41a582:	jb     0x41a521
  41a584:	push   edx
  41a585:	push   DWORD PTR [esi-0x19]
  41a588:	addr16 js 0x41a5e4
  41a58b:	inc    edx
  41a58c:	lea    ebp,[ebp+0x3b]
  41a58f:	mov    ?,ecx
  41a591:	cmc    
  41a592:	gs dec edx
  41a594:	add    eax,0x50e5518
  41a599:	dec    edi
  41a59a:	pop    edi
  41a59b:	sbb    ebx,DWORD PTR [ebp-0x8]
  41a59e:	retf   0x9c05
  41a5a1:	in     eax,dx
  41a5a2:	xor    BYTE PTR [ecx+0x25],cl
  41a5a5:	and    eax,0xf800011f
  41a5aa:	add    al,0x0
  41a5ac:	add    ch,cl
  41a5ae:	xchg   edx,eax
  41a5af:	ins    BYTE PTR es:[edi],dx
  41a5b0:	xchg   ebp,eax
  41a5b1:	adc    esp,DWORD PTR [edi-0x6dea6426]
  41a5b7:	push   cs
  41a5b8:	mov    ch,0x19
  41a5ba:	push   ds
  41a5bb:	bound  edi,QWORD PTR [eax+0x9639872]
  41a5c1:	inc    esi
  41a5c2:	loopne 0x41a55e
  41a5c4:	mov    eax,ds:0x1600c06a
  41a5c9:	lahf   
  41a5ca:	mov    al,ds:0xcef2301f
  41a5cf:	test   al,0xee
  41a5d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5d2:	sahf   
  41a5d3:	ret    
  41a5d4:	add    dh,0x64
  41a5d7:	adc    BYTE PTR [ebx+0x63daf8bb],al
  41a5dd:	pop    edx
  41a5de:	mov    dl,0xd2
  41a5e0:	aaa    
  41a5e1:	call   0xcc77:0xe6b534da
  41a5e8:	icebp  
  41a5e9:	pop    eax
  41a5ea:	lock adc al,0xb
  41a5ed:	xor    al,0x6a
  41a5ef:	adc    eax,0xa0c146b2
  41a5f4:	push   ebx
  41a5f5:	outs   dx,BYTE PTR ds:[esi]
  41a5f6:	mov    eax,DWORD PTR [edx+0x56]
  41a5f9:	push   esi
  41a5fa:	push   0x60
  41a5fc:	pop    ecx
  41a5fd:	stc    
  41a5fe:	push   ds
  41a5ff:	pop    ebp
  41a600:	sub    ecx,ecx
  41a602:	test   al,0x80
  41a605:	push   ebp
  41a606:	push   ecx
  41a607:	bound  ebp,QWORD PTR [eax-0x49c28e55]
  41a60d:	cwde   
  41a60e:	pop    eax
  41a60f:	xchg   ebp,eax
  41a610:	sub    al,BYTE PTR [ecx]
  41a612:	xchg   edi,eax
  41a613:	mov    ds:0x3c47f37c,al
  41a618:	enter  0xaae9,0x2f
  41a61c:	inc    edx
  41a61d:	xchg   esp,eax
  41a61e:	dec    eax
  41a61f:	xor    DWORD PTR [ecx+esi*8-0x72c3ef73],esi
  41a626:	mov    al,ds:0x889e8f87
  41a62b:	data16 sbb al,0x4f
  41a62e:	das    
  41a62f:	jns    0x41a5fe
  41a631:	(bad)  
  41a632:	sti    
  41a633:	mov    cl,dl
  41a635:	fbstp  TBYTE PTR [edx]
  41a637:	xlat   BYTE PTR ds:[ebx]
  41a638:	push   esp
  41a639:	push   ss
  41a63a:	leave  
  41a63b:	or     eax,0xb6f95700
  41a640:	into   
  41a641:	je     0x41a5ce
  41a643:	pop    ebx
  41a644:	retf   0xf51c
  41a647:	jge    0x41a6b9
  41a649:	aam    0x98
  41a64b:	inc    edx
  41a64c:	inc    ecx
  41a64d:	call   0xd294b295
  41a652:	popa   
  41a653:	push   0x26c8148
  41a658:	push   edx
  41a659:	fucomp st(2)
  41a65b:	scas   eax,DWORD PTR es:[edi]
  41a65c:	pusha  
  41a65d:	dec    BYTE PTR [edx]
  41a65f:	pop    esp
  41a660:	xor    BYTE PTR [edx+eiz*1-0x7c],0x57
  41a665:	sbb    edi,DWORD PTR [edx+0x23]
  41a668:	pop    esi
  41a669:	test   DWORD PTR [edx-0x1c],edi
  41a66c:	xchg   edx,eax
  41a66d:	scas   al,BYTE PTR es:[edi]
  41a66e:	or     ecx,0xf7de6ff1
  41a674:	inc    esi
  41a675:	lahf   
  41a676:	adc    al,0xa8
  41a678:	fsub   QWORD PTR ds:0xd4206082
  41a67e:	xor    DWORD PTR [esi-0x48e20d87],edx
  41a684:	out    0xae,al
  41a686:	mov    al,0x3d
  41a688:	xchg   esi,eax
  41a689:	cmc    
  41a68a:	xlat   BYTE PTR ds:[ebx]
  41a68b:	add    bh,BYTE PTR [esi+0x2c3fc703]
  41a691:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a692:	das    
  41a693:	mov    esi,esp
  41a695:	or     bl,dl
  41a697:	(bad)  
  41a698:	daa    
  41a699:	imul   edx,DWORD PTR [esi+eiz*8+0x44c07405],0x53
  41a6a1:	adc    BYTE PTR [ebx-0x4d],ch
  41a6a4:	adc    esp,0x8815405f
  41a6aa:	fidiv  DWORD PTR [edx-0x48]
  41a6ad:	ins    BYTE PTR es:[edi],dx
  41a6ae:	cld    
  41a6af:	xchg   ebx,eax
  41a6b0:	xor    edx,ebx
  41a6b2:	hlt    
  41a6b3:	out    dx,eax
  41a6b4:	jns    0x41a70a
  41a6b6:	sub    ebp,DWORD PTR [edx-0x36]
  41a6b9:	clc    
  41a6ba:	sub    cl,bh
  41a6bc:	pop    ss
  41a6bd:	push   0xffffffb1
  41a6bf:	int    0x9e
  41a6c1:	push   DWORD PTR [esi+0x7ed42f94]
  41a6c7:	cmp    edx,DWORD PTR [ecx+0x1a]
  41a6ca:	pop    eax
  41a6cb:	mov    BYTE PTR [ebp+0x7e],bl
  41a6ce:	test   DWORD PTR [edi+edi*4],ebx
  41a6d1:	out    dx,eax
  41a6d2:	clc    
  41a6d3:	adc    cl,dl
  41a6d5:	loope  0x41a6dc
  41a6d7:	cmp    BYTE PTR [edx],0x7d
  41a6da:	adc    dl,ch
  41a6dc:	push   eax
  41a6dd:	dec    edx
  41a6de:	push   eax
  41a6df:	shl    BYTE PTR [esi+eax*4],1
  41a6e2:	add    bh,BYTE PTR [ecx+0x30]
  41a6e5:	mov    ebp,0x4577813e
  41a6ea:	inc    esp
  41a6eb:	inc    edi
  41a6ec:	xor    al,BYTE PTR [edx-0x43]
  41a6ef:	xor    eax,0xacff1fb9
  41a6f4:	mov    BYTE PTR [esi-0x546e8be9],ch
  41a6fa:	rol    DWORD PTR [eax],0x45
  41a6fd:	mov    BYTE PTR ds:0xb9cc3adb,bl
  41a703:	fnstsw WORD PTR [ecx-0x313f45c8]
  41a709:	mov    eax,ds:0x2ea62888
  41a70e:	pop    edx
  41a70f:	cmp    bl,BYTE PTR [ecx+0xc76299b]
  41a715:	ret    
  41a716:	or     ch,BYTE PTR [ebp+0x2c9dbf09]
  41a71c:	mov    esi,0x8811ab51
  41a721:	in     al,dx
  41a722:	push   ecx
  41a723:	sub    al,0xa0
  41a725:	das    
  41a726:	jno    0x41a6d0
  41a728:	in     eax,dx
  41a729:	div    esi
  41a72b:	sbb    BYTE PTR ds:0x412f4e76,bh
  41a731:	add    eax,0x20d4242
  41a736:	int    0x4e
  41a738:	shl    DWORD PTR ds:0x8b8b48a6,0x9a
  41a73f:	in     eax,0xaa
  41a741:	cmp    eax,0x44d40b4
  41a746:	sahf   
  41a747:	loopne 0x41a766
  41a749:	pop    esp
  41a74a:	pop    edx
  41a74b:	fisttp QWORD PTR [edi]
  41a74d:	inc    edx
  41a74e:	push   edx
  41a74f:	sbb    BYTE PTR [ecx-0x37013c12],bh
  41a755:	sbb    al,0xc8
  41a757:	in     eax,0x5f
  41a759:	gs je  0x41a718
  41a75c:	add    al,0xf2
  41a75e:	add    eax,0x17674e4
  41a763:	ins    DWORD PTR es:[edi],dx
  41a764:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a765:	lds    esp,FWORD PTR [ebx+0x1647f2ec]
  41a76b:	cmp    al,0xe0
  41a76d:	or     ecx,0xffffffea
  41a770:	sub    ah,BYTE PTR [ebp-0xa8a6759]
  41a776:	mov    ds:0xd70ab39d,al
  41a77b:	cdq    
  41a77c:	inc    ebx
  41a77d:	test   DWORD PTR [eax+0x7ca07dea],edi
  41a783:	push   esp
  41a784:	rcr    DWORD PTR ds:0xbf30e66f,1
  41a78a:	hlt    
  41a78b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a78c:	cmp    al,0x41
  41a78e:	or     al,0x41
  41a790:	dec    ebx
  41a791:	add    ebp,edi
  41a793:	out    dx,al
  41a794:	sub    ebp,0x4f
  41a797:	dec    esi
  41a798:	sub    al,0xd3
  41a79a:	adc    ah,BYTE PTR [esi]
  41a79c:	mov    dl,0xdd
  41a79f:	ds fwait
  41a7a1:	xor    cl,BYTE PTR [ecx-0x69a4c7d3]
  41a7a7:	lea    ecx,[ebx-0x3c]
  41a7aa:	mov    ecx,ecx
  41a7ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7ad:	mov    al,ds:0x9a6f8234
  41a7b2:	mov    edx,0x28e8c86e
  41a7b7:	mov    ch,0x51
  41a7b9:	and    ecx,DWORD PTR ds:0x589b715
  41a7bf:	hlt    
  41a7c0:	push   ss
  41a7c1:	pop    es
  41a7c2:	mov    dl,0x70
  41a7c4:	lods   eax,DWORD PTR ds:[esi]
  41a7c5:	xor    eax,0x694b1bd9
  41a7ca:	test   al,0xcd
  41a7cc:	js     0x41a808
  41a7ce:	int3   
  41a7cf:	or     BYTE PTR [ecx-0x73],al
  41a7d2:	outs   dx,DWORD PTR ds:[esi]
  41a7d3:	lock and DWORD PTR [esi+0x422507dc],ecx
  41a7da:	mov    eax,ds:0xbea4250a
  41a7df:	xchg   esi,eax
  41a7e0:	xor    eax,0x828a345b
  41a7e5:	ins    DWORD PTR es:[edi],dx
  41a7e6:	out    dx,eax
  41a7e7:	mov    WORD PTR [eax-0x28],es
  41a7ea:	mov    gs:0x4d561df9,eax
  41a7f0:	lock mov esi,0x55a074b5
  41a7f6:	adc    ecx,edi
  41a7f8:	fs dec eax
  41a7fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7fb:	or     esi,DWORD PTR [ecx+0x79239407]
  41a801:	je     0x41a812
  41a803:	neg    ebp
  41a805:	jge    0x41a7bb
  41a807:	sub    bh,al
  41a809:	xchg   esi,eax
  41a80a:	daa    
  41a80b:	inc    ebx
  41a80c:	(bad)  
  41a80d:	out    dx,eax
  41a80e:	ret    
  41a80f:	enter  0xc355,0x71
  41a813:	vpxor  ymm4,ymm5,YMMWORD PTR [edx]
  41a817:	sbb    al,BYTE PTR [esi+0x70]
  41a81a:	sub    ecx,DWORD PTR [esi+0x23]
  41a81d:	leave  
  41a81e:	or     eax,0x413ad8bd
  41a823:	push   eax
  41a824:	push   cs
  41a825:	jecxz  0x41a8a3
  41a827:	mov    bh,0xcd
  41a829:	inc    esp
  41a82a:	add    BYTE PTR [ecx+0x3e],bl
  41a82d:	dec    edi
  41a82e:	aam    0x48
  41a830:	add    bh,BYTE PTR [ebx]
  41a832:	push   edx
  41a833:	aas    
  41a834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a835:	mov    esi,0x6d725551
  41a83a:	xchg   dl,bh
  41a83c:	call   0x5551:0xff8079a1
  41a843:	xor    bl,ch
  41a845:	and    eax,0xe261315b
  41a84a:	sub    DWORD PTR [eax+edi*1+0xa3e39aa],esp
  41a851:	sbb    eax,DWORD PTR [eax+0xb4f1a27]
  41a857:	add    ch,BYTE PTR [ebx+0x2a]
  41a85a:	xchg   esi,eax
  41a85b:	xchg   edx,eax
  41a85c:	cwde   
  41a85d:	clc    
  41a85e:	sbb    eax,edi
  41a860:	add    eax,0x284db8db
  41a865:	xlat   BYTE PTR ds:[bx]
  41a867:	mov    ebp,0x74b1f77
  41a86c:	cmp    eax,0x1f28489e
  41a871:	cli    
  41a872:	dec    ebp
  41a873:	stos   BYTE PTR es:[edi],al
  41a874:	jmp    0x62a702b0
  41a879:	and    ebx,DWORD PTR [edx-0x2dd661b6]
  41a87f:	pop    edx
  41a880:	inc    esi
  41a881:	xchg   ebx,eax
  41a882:	int    0x70
  41a884:	mov    dh,0xfe
  41a886:	cmp    ecx,0x5d81948e
  41a88c:	inc    edx
  41a88d:	push   0x5c
  41a88f:	out    0x24,eax
  41a891:	adc    DWORD PTR [ebx+0x68],ebx
  41a894:	jns    0x41a902
  41a896:	pop    ebp
  41a897:	push   0xfffffff5
  41a899:	add    BYTE PTR [edx+ebx*4+0x59d1c674],bl
  41a8a0:	sbb    BYTE PTR [edx],al
  41a8a2:	jmp    0x41a862
  41a8a4:	mov    dl,0xe1
  41a8a6:	or     dl,BYTE PTR [edx-0xe]
  41a8a9:	pop    ecx
  41a8aa:	push   esp
  41a8ab:	mov    ds:0x66fc199b,eax
  41a8b0:	out    0x87,eax
  41a8b2:	sub    BYTE PTR [edi+0x7697632d],dh
  41a8b8:	jp     0x41a8df
  41a8ba:	xchg   edi,eax
  41a8bb:	mov    ch,ah
  41a8bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8be:	inc    esp
  41a8bf:	ins    DWORD PTR es:[edi],dx
  41a8c0:	icebp  
  41a8c1:	in     al,0x65
  41a8c3:	cld    
  41a8c4:	or     bh,BYTE PTR [ecx-0x22]
  41a8c7:	push   edi
  41a8c8:	cmc    
  41a8c9:	stos   BYTE PTR es:[edi],al
  41a8ca:	inc    ebp
  41a8cb:	pop    ebp
  41a8cc:	sahf   
  41a8cd:	mov    esi,0x84a1c4ed
  41a8d2:	xchg   ecx,eax
  41a8d3:	bound  esi,QWORD PTR [ebp-0x3b8e1eeb]
  41a8d9:	sahf   
  41a8da:	stc    
  41a8db:	add    DWORD PTR [edi],ecx
  41a8dd:	scas   eax,DWORD PTR es:[edi]
  41a8de:	jecxz  0x41a867
  41a8e0:	mov    edi,ss
  41a8e2:	inc    esp
  41a8e3:	sbb    BYTE PTR [eax],0x1
  41a8e6:	push   eax
  41a8e7:	jae    0x41a8a8
  41a8e9:	ins    BYTE PTR es:[edi],dx
  41a8ea:	popa   
  41a8eb:	jp     0x41a8b7
  41a8ed:	loop   0x41a890
  41a8ef:	popa   
  41a8f0:	cmc    
  41a8f1:	lock retf 
  41a8f3:	fisttp DWORD PTR ds:0x42f8d8fd
  41a8f9:	mov    eax,ds:0xec632912
  41a8fe:	inc    eax
  41a8ff:	movhps xmm0,QWORD PTR [ebx+0x13]
  41a903:	or     esp,DWORD PTR [ebp-0x3c]
  41a906:	adc    BYTE PTR [ecx-0x6f246fe2],dl
  41a90c:	jmp    0x9cb0ae1f
  41a911:	sbb    esp,DWORD PTR [ebp+0x1f]
  41a914:	adc    BYTE PTR [ebp+0x11],cl
  41a917:	cmc    
  41a918:	adc    esp,DWORD PTR [esi-0x32368287]
  41a91e:	ins    DWORD PTR es:[edi],dx
  41a91f:	int3   
  41a920:	jg     0x41a93f
  41a922:	fst    DWORD PTR [edi+0x7b113a44]
  41a928:	(bad)  
  41a929:	in     al,0xf1
  41a92b:	inc    edx
  41a92c:	test   esi,eax
  41a92e:	in     al,dx
  41a92f:	jp     0x41a993
  41a931:	in     al,0xa9
  41a933:	jge    0x41a98b
  41a935:	in     eax,dx
  41a936:	div    edi
  41a938:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a939:	loopne 0x41a953
  41a93b:	call   0x186d:0x13a908b9
  41a942:	sbb    eax,0x5f400026
  41a947:	add    ebp,DWORD PTR [ebp+0x61]
  41a94a:	sbb    dh,BYTE PTR [ebx+0x53561b71]
  41a950:	ficomp WORD PTR [edi-0x12]
  41a953:	fs cmc 
  41a955:	stc    
  41a956:	adc    al,0x81
  41a958:	test   DWORD PTR [edi-0x1bd7b4b0],ebx
  41a95e:	dec    edx
  41a95f:	mov    esi,0x2df3b61a
  41a964:	iret   
  41a965:	mov    WORD PTR [edx+0x0],ds
  41a968:	dec    eax
  41a969:	cmp    BYTE PTR [ebx+0x77],ah
  41a96c:	add    ch,ch
  41a96e:	clc    
  41a96f:	lds    esp,FWORD PTR [ebx]
  41a971:	hlt    
  41a972:	(bad)  
  41a973:	lods   al,BYTE PTR ds:[esi]
  41a974:	in     eax,dx
  41a975:	aam    0x8d
  41a977:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a978:	ret    
  41a979:	cmp    ebx,DWORD PTR [ecx-0x3a]
  41a97c:	(bad)  
  41a97d:	cmp    ch,dh
  41a97f:	xor    BYTE PTR [edx-0x1e9d512b],bh
  41a985:	(bad)  
  41a987:	xor    BYTE PTR [edi-0x10],ch
  41a98a:	enter  0x5aef,0x6d
  41a98e:	outs   dx,DWORD PTR ds:[esi]
  41a98f:	cmp    DWORD PTR [edi],0xc04da75
  41a995:	dec    ebp
  41a996:	cmc    
  41a997:	cs and eax,0xefda4d5c
  41a99d:	inc    edi
  41a99e:	jmp    0x46e97614
  41a9a3:	dec    esi
  41a9a4:	or     al,0x77
  41a9a6:	push   cs
  41a9a7:	fisub  WORD PTR [ecx+0x64]
  41a9aa:	inc    ebx
  41a9ab:	int    0xb7
  41a9ad:	loope  0x41a9a3
  41a9af:	stc    
  41a9b0:	aam    0x35
  41a9b2:	adc    al,0x44
  41a9b4:	mov    ebp,0xc2763c54
  41a9b9:	sbb    al,0xa5
  41a9bb:	dec    esp
  41a9bc:	mov    WORD PTR [edx-0x4f63dcc4],gs
  41a9c2:	xlat   BYTE PTR ds:[ebx]
  41a9c3:	out    dx,al
  41a9c4:	or     BYTE PTR [edi-0x79],al
  41a9c7:	mov    dl,0x3d
  41a9c9:	enter  0xc79a,0xda
  41a9cd:	xchg   DWORD PTR [edi],ebx
  41a9cf:	mov    BYTE PTR [esi],bl
  41a9d1:	lds    eax,FWORD PTR ds:0x118285ea
  41a9d7:	fcomi  st,st(2)
  41a9d9:	mov    eax,0xeacd1db
  41a9de:	mov    dl,0x20
  41a9e0:	adc    dl,BYTE PTR [edx-0x76]
  41a9e3:	mov    edx,0x6c25da51
  41a9e8:	push   edx
  41a9e9:	xchg   ecx,eax
  41a9ea:	push   ds
  41a9eb:	mov    cl,0x30
  41a9ed:	mov    ds:0x4a55309d,al
  41a9f2:	jmp    0xc36c:0x968fb4c2
  41a9f9:	(bad)  
  41a9fa:	in     al,0x26
  41a9fc:	in     al,0x73
  41a9fe:	push   edi
  41a9ff:	add    eax,0x9143a6ca
  41aa04:	repz inc esp
  41aa06:	sbb    DWORD PTR [edx+esi*8+0x53b330e8],ebp
  41aa0d:	es xchg edx,eax
  41aa0f:	addr16 enter 0x2995,0x1a
  41aa14:	xlat   BYTE PTR ds:[ebx]
  41aa15:	int    0xfc
  41aa17:	pop    eax
  41aa18:	inc    edx
  41aa19:	(bad)  
  41aa1a:	adc    bh,BYTE PTR [eax]
  41aa1c:	push   edx
  41aa1d:	sbb    DWORD PTR [edx+0xdc7bdff],edx
  41aa23:	aad    0xe2
  41aa25:	mov    bh,0x96
  41aa27:	jno    0x41a9f7
  41aa29:	mov    DWORD PTR [ebx-0x6164296],eax
  41aa2f:	loopne 0x41a9f1
  41aa31:	outs   dx,BYTE PTR ds:[esi]
  41aa32:	daa    
  41aa33:	jecxz  0x41a9ff
  41aa35:	push   edx
  41aa36:	rcl    BYTE PTR [edx+0x61],cl
  41aa39:	lea    edx,gs:[ebp+0x3f]
  41aa3d:	cdq    
  41aa3e:	push   ecx
  41aa3f:	adc    DWORD PTR [ebx+0x5],ebx
  41aa42:	retf   
  41aa43:	fcomp  DWORD PTR [esi]
  41aa45:	hlt    
  41aa46:	and    edi,0x1176d82d
  41aa4c:	and    eax,0xeb15b7b2
  41aa51:	xor    eax,0x3780fae
  41aa56:	adc    ecx,0xaa4dcc44
  41aa5c:	and    eax,0x581d3415
  41aa61:	int3   
  41aa62:	ss xchg ecx,eax
  41aa64:	xor    BYTE PTR [ecx*1-0x5796460d],0x70
  41aa6c:	adc    esp,esp
  41aa6e:	mov    bl,0x51
  41aa70:	loop   0x41aa33
  41aa72:	sbb    bl,cl
  41aa74:	cmp    esi,ebp
  41aa76:	inc    edi
  41aa77:	sbb    ch,BYTE PTR [edi-0x2476251a]
  41aa7d:	adc    eax,ebx
  41aa7f:	inc    ebp
  41aa80:	jmp    0x41aad9
  41aa82:	repz cwde 
  41aa84:	lea    edi,[edx+esi*8-0x54092c2]
  41aa8b:	dec    esp
  41aa8c:	or     DWORD PTR [eax+0xa381647],0x6cbdc053
  41aa96:	cmp    DWORD PTR [edx+0x2c],ebp
  41aa99:	cdq    
  41aa9a:	pop    es
  41aa9b:	out    0xaa,eax
  41aa9d:	jbe    0x41aa41
  41aa9f:	mov    eax,0x3124e4ff
  41aaa4:	cwde   
  41aaa5:	dec    esi
  41aaa6:	outs   dx,DWORD PTR ds:[esi]
  41aaa7:	je     0x41aad1
  41aaa9:	jne    0x41aae6
  41aaab:	pop    esi
  41aaac:	outs   dx,DWORD PTR ds:[esi]
  41aaad:	dec    esi
  41aaae:	cwde   
  41aaaf:	les    ebx,FWORD PTR [edx-0x6b]
  41aab2:	jbe    0x41aa3a
  41aab4:	call   0x4f8:0x1241d
  41aabb:	add    BYTE PTR [eax],al
  41aabd:	sbb    DWORD PTR [ebp+0x2e],ebx
  41aac0:	mov    al,0xda
  41aac2:	shr    BYTE PTR [edx+0x6cff94c4],1
  41aac8:	or     al,0x2b
  41aaca:	imul   ecx
  41aacc:	(bad)  
  41aacd:	adc    bl,BYTE PTR [edi-0x66]
  41aad0:	in     al,0x3
  41aad2:	pop    ds
  41aad3:	imul   ebx,DWORD PTR [eax+0x69fbefc1],0xffffff8e
  41aada:	cld    
  41aadb:	(bad)  
  41aadc:	jp     0x41ab42
  41aade:	rol    BYTE PTR [ecx-0x18],0xe
  41aae2:	mov    ah,0x5f
  41aae4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aae5:	fisttp WORD PTR [ebx+0x17]
  41aae8:	adc    ebx,DWORD PTR [edx]
  41aaea:	push   ss
  41aaeb:	lock pop edi
  41aaed:	and    ch,BYTE PTR [eax]
  41aaef:	cld    
  41aaf0:	jmp    0x3f5b:0xf9e9fd2e
  41aaf7:	mov    eax,0xa7e75c1
  41aafc:	js     0x41aad3
  41aafe:	dec    ebp
  41aaff:	mov    ch,0x42
  41ab01:	jb     0x41aaaf
  41ab03:	out    dx,al
  41ab04:	in     eax,0x1d
  41ab06:	popa   
  41ab07:	cmp    cl,ch
  41ab09:	pop    ds
  41ab0a:	inc    eax
  41ab0b:	push   edi
  41ab0c:	mov    bl,0x1e
  41ab0e:	test   BYTE PTR [ebp+0x5d7e7dff],0x15
  41ab15:	ss fs pop es
  41ab18:	xor    BYTE PTR [ebp+0x3],ch
  41ab1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab1c:	aas    
  41ab1d:	dec    ebx
  41ab1e:	mov    BYTE PTR [edx+0x2c],al
  41ab21:	and    eax,ecx
  41ab23:	(bad)  
  41ab24:	xlat   BYTE PTR ds:[ebx]
  41ab25:	mov    ecx,0xf52504
  41ab2a:	jge    0x41ab8a
  41ab2c:	loop   0x41aad9
  41ab2e:	popw   es
  41ab30:	imul   DWORD PTR ds:0xbb63a27b
  41ab36:	cdq    
  41ab37:	bound  ecx,QWORD PTR ds:[eax]
  41ab3a:	adc    BYTE PTR [ecx],dl
  41ab3c:	test   al,0xd
  41ab3e:	aad    0xeb
  41ab40:	or     DWORD PTR [ebx+0xe0649fa],esi
  41ab46:	pop    edi
  41ab47:	mov    BYTE PTR [edx],dl
  41ab49:	into   
  41ab4a:	rcr    BYTE PTR [eax+eax*2-0x26],0xab
  41ab4f:	mov    es,WORD PTR [ebx]
  41ab51:	shr    BYTE PTR [edx+0xf],cl
  41ab54:	sub    esp,0xffffffbc
  41ab57:	retf   
  41ab58:	jno    0x41ab3b
  41ab5a:	sti    
  41ab5b:	je     0x41ab0f
  41ab5d:	fwait
  41ab5e:	push   0xc8a6e8e0
  41ab63:	and    ecx,edx
  41ab65:	push   cs
  41ab66:	inc    esp
  41ab67:	push   eax
  41ab68:	in     eax,0xb8
  41ab6a:	mov    esi,esp
  41ab6c:	fisttp DWORD PTR [esp+ebx*1+0x20b47dbb]
  41ab73:	mov    bh,0x1a
  41ab75:	mov    dh,0xe9
  41ab77:	xchg   ebp,eax
  41ab78:	mov    edx,0xb56700b9
  41ab7d:	inc    edi
  41ab7e:	sub    esi,esi
  41ab80:	outs   dx,DWORD PTR ds:[esi]
  41ab81:	retf   
  41ab82:	xchg   esp,eax
  41ab83:	push   ss
  41ab84:	scas   eax,DWORD PTR es:[edi]
  41ab85:	cmc    
  41ab86:	scas   al,BYTE PTR es:[edi]
  41ab87:	push   ebx
  41ab88:	lock (bad) 
  41ab8a:	sar    BYTE PTR [eax],cl
  41ab8c:	dec    ebp
  41ab8d:	dec    ecx
  41ab8e:	fcom   QWORD PTR [edx-0x3a6389f]
  41ab94:	aaa    
  41ab95:	ja     0x41ab60
  41ab97:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab99:	imul   edx,edi,0x2b
  41ab9c:	jle    0x41ab76
  41ab9e:	(bad)
  41aba1:	imul   eax,DWORD PTR [eax],0xffffffc6
  41aba4:	leave  
  41aba5:	pop    ecx
  41aba6:	enter  0xf301,0xe7
  41abaa:	pop    esp
  41abab:	test   al,0x77
  41abad:	push   ebx
  41abae:	rol    BYTE PTR [ebx],cl
  41abb0:	je     0x41ab3f
  41abb2:	mov    dh,0xec
  41abb4:	pop    edi
  41abb5:	dec    ecx
  41abb6:	(bad)  [ecx-0x19d3ddaf]
  41abbc:	add    al,0xec
  41abbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abbf:	aaa    
  41abc0:	and    al,BYTE PTR [edi-0x360662d7]
  41abc6:	xor    eax,0xc9366d05
  41abcb:	cli    
  41abcc:	xor    BYTE PTR [ecx],dh
  41abce:	mov    DWORD PTR [esi],edx
  41abd0:	or     DWORD PTR [edx],esp
  41abd2:	shl    cl,1
  41abd4:	int3   
  41abd5:	cmp    eax,0xd5f8a160
  41abda:	jmp    0x41ac49
  41abdc:	aad    0xf2
  41abde:	xchg   ebx,eax
  41abdf:	xor    edx,DWORD PTR [eax-0x5bb66d19]
  41abe5:	in     eax,0xab
  41abe7:	aaa    
  41abe8:	fsubr  DWORD PTR [ecx]
  41abea:	retf   
  41abeb:	and    ch,BYTE PTR [esi]
  41abed:	fcom   st(1)
  41abef:	sbb    al,0x3c
  41abf1:	jno    0x41ac1f
  41abf3:	push   ecx
  41abf4:	aaa    
  41abf5:	fidiv  DWORD PTR [ecx-0x2148000b]
  41abfb:	mov    ah,dh
  41abfd:	mov    ecx,DWORD PTR [eax+ecx*8+0x3f]
  41ac01:	pushf  
  41ac02:	dec    eax
  41ac03:	inc    ecx
  41ac04:	test   BYTE PTR [edi-0x28],cl
  41ac07:	jae    0x41ac2b
  41ac09:	pop    ebx
  41ac0a:	mov    DWORD PTR [edx+edx*2],ecx
  41ac0d:	fwait
  41ac0e:	push   esp
  41ac0f:	jecxz  0x41ac12
  41ac11:	and    BYTE PTR [esi],0xb3
  41ac14:	cmp    BYTE PTR [edx+ebx*2],al
  41ac17:	loope  0x41abb6
  41ac19:	iret   
  41ac1a:	in     eax,dx
  41ac1b:	out    0xb7,al
  41ac1d:	rcr    cl,cl
  41ac1f:	push   ebp
  41ac20:	mov    ecx,0xc1af02f7
  41ac25:	in     al,0xec
  41ac27:	sti    
  41ac28:	fdivr  st,st(3)
  41ac2a:	aad    0x86
  41ac2c:	shl    BYTE PTR [edi+0x1f],1
  41ac2f:	cli    
  41ac30:	ins    BYTE PTR es:[edi],dx
  41ac31:	idiv   ebp
  41ac33:	adc    ecx,DWORD PTR [edx+0x9]
  41ac36:	icebp  
  41ac37:	mov    esp,0x6044171b
  41ac3c:	in     al,dx
  41ac3d:	iret   
  41ac3e:	mov    esp,0x8576c224
  41ac43:	ja     0x41abec
  41ac45:	stos   DWORD PTR es:[edi],eax
  41ac46:	adc    eax,0xfad7a78a
  41ac4b:	sar    BYTE PTR [edx+0xeb96011],cl
  41ac51:	inc    ecx
  41ac52:	fidivr DWORD PTR [ebp+0x74]
  41ac55:	inc    esi
  41ac56:	sbb    DWORD PTR [edi+0x20],0x151d102e
  41ac5d:	push   ebp
  41ac5e:	jae    0x41ac90
  41ac60:	push   edx
  41ac61:	inc    esi
  41ac62:	cmp    al,0xe1
  41ac64:	repz push es
  41ac66:	stc    
  41ac67:	daa    
  41ac68:	out    dx,al
  41ac69:	out    0x4c,eax
  41ac6b:	sahf   
  41ac6c:	mov    edx,0xf0dc43ad
  41ac71:	fstp   TBYTE PTR [edx-0x5f7bb4e0]
  41ac77:	push   ss
  41ac78:	adc    DWORD PTR [ebp+0x1],edx
  41ac7b:	cmp    al,0xbe
  41ac7d:	sbb    al,0x69
  41ac7f:	fimul  WORD PTR [esi+0x5c528f97]
  41ac85:	jmp    0xe38fe949
  41ac8a:	mov    esi,esi
  41ac8c:	sbb    eax,0x11c74eca
  41ac91:	fsub   QWORD PTR ds:0x6ac7e425
  41ac97:	jae    0x41ac1b
  41ac99:	dec    eax
  41ac9a:	pop    ss
  41ac9b:	ins    BYTE PTR es:[edi],dx
  41ac9c:	jno    0x41acd8
  41ac9e:	test   ecx,0xc856b558
  41aca4:	test   BYTE PTR [eax+eax*4-0xfcad4c7],bl
  41acab:	imul   esp,DWORD PTR [esi+0xf],0xf099e367
  41acb2:	fwait
  41acb3:	xchg   DWORD PTR [esi],edi
  41acb5:	jb     0x41ac85
  41acb7:	ret    0xa81
  41acba:	mov    esp,0x7fcf2cbc
  41acbf:	enter  0x3c77,0x62
  41acc3:	cmp    esp,DWORD PTR [ebx+0x5338c947]
  41acc9:	scas   al,BYTE PTR es:[edi]
  41acca:	jnp    0x41ad16
  41accc:	ds jno 0x41ad15
  41accf:	xchg   BYTE PTR [edx],ah
  41acd1:	xor    al,bh
  41acd3:	mov    ds:0xfd7f70e0,al
  41acd8:	shl    DWORD PTR [eax+eiz*8-0x2b],cl
  41acdc:	or     al,0xfa
  41acde:	sahf   
  41acdf:	stos   DWORD PTR es:[edi],eax
  41ace0:	scas   al,BYTE PTR es:[edi]
  41ace1:	test   al,0x33
  41ace3:	sub    DWORD PTR [ebx+0x671eeb82],edi
  41ace9:	dec    ecx
  41acea:	pop    eax
  41aceb:	ficom  WORD PTR [ebp-0x5fecd455]
  41acf1:	fcom   DWORD PTR [edx]
  41acf3:	retf   
  41acf4:	mov    ebx,DWORD PTR [edi-0x39ec262f]
  41acfa:	push   ebp
  41acfb:	pop    ds
  41acfc:	test   eax,0x3ffc4381
  41ad01:	fwait
  41ad02:	inc    edx
  41ad03:	adc    eax,0x95ef3a6a
  41ad08:	jge    0x41acbf
  41ad0a:	aas    
  41ad0b:	cmp    eax,0x4561bca9
  41ad10:	xor    al,0x22
  41ad12:	mov    esp,0xa3573fd
  41ad17:	push   ebp
  41ad18:	mov    ah,0xa2
  41ad1a:	ret    
  41ad1b:	aaa    
  41ad1c:	lock push esp
  41ad1e:	sub    DWORD PTR [edx-0x67],0xb7cd8129
  41ad25:	jle    0x41ad79
  41ad27:	mov    BYTE PTR [edx+0x15b77968],0x65
  41ad2e:	pop    es
  41ad2f:	and    esp,edi
  41ad31:	gs mov esi,0x361f5ce7
  41ad37:	cmp    BYTE PTR [ebx+esi*1-0x73],al
  41ad3b:	or     ebp,DWORD PTR [ecx-0x7c1ad249]
  41ad41:	xchg   ecx,eax
  41ad42:	ret    0x5b45
  41ad45:	or     BYTE PTR [esi-0x2223e52b],dl
  41ad4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad4c:	xchg   ebp,eax
  41ad4d:	xor    edi,DWORD PTR [esi-0x2b8ad74b]
  41ad53:	mov    ecx,esp
  41ad55:	lock adc al,0x59
  41ad58:	pop    ss
  41ad59:	pop    ds
  41ad5a:	sbb    eax,0x5803a1aa
  41ad5f:	or     al,0x56
  41ad61:	int3   
  41ad62:	cmp    DWORD PTR [esi-0x7a6c49e3],ebp
  41ad68:	fbstp  TBYTE PTR [edi]
  41ad6a:	mov    bh,0x7d
  41ad6c:	test   eax,0xa1d6c03c
  41ad71:	and    al,0xf0
  41ad73:	sbb    eax,0x7751e6e8
  41ad78:	lods   eax,DWORD PTR ds:[esi]
  41ad79:	cdq    
  41ad7a:	sahf   
  41ad7b:	out    dx,eax
  41ad7c:	sahf   
  41ad7d:	or     BYTE PTR [edi-0x653bdc34],dl
  41ad83:	gs and eax,0x324f273b
  41ad89:	ss (bad) 
  41ad8b:	and    eax,ecx
  41ad8d:	dec    esi
  41ad8e:	add    esp,esi
  41ad90:	fld    TBYTE PTR [edx]
  41ad92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad93:	or     al,BYTE PTR [edi-0x1f68dd26]
  41ad99:	xchg   esi,eax
  41ad9a:	jp     0x41add3
  41ad9c:	test   eax,0xdb92fecb
  41ada1:	sbb    edx,edx
  41ada3:	dec    esi
  41ada4:	dec    ebp
  41ada5:	cld    
  41ada6:	mov    edx,0xb4af3fca
  41adab:	or     bh,al
  41adad:	push   esp
  41adae:	sub    eax,edx
  41adb0:	sub    BYTE PTR [ebx],0x19
  41adb3:	je     0x41ae12
  41adb5:	inc    ebx
  41adb6:	xor    dl,BYTE PTR [edi+0x21]
  41adb9:	cmp    BYTE PTR [edx+0x3fac038b],dh
  41adbf:	(bad)  
  41adc0:	mov    ds:0x13f25482,eax
  41adc5:	add    BYTE PTR [ebx-0x12457ed5],dl
  41adcb:	push   0xffffffc8
  41adcd:	lods   al,BYTE PTR cs:[esi]
  41adcf:	xchg   edi,eax
  41add1:	jp     0x41ae1e
  41add3:	sub    DWORD PTR ds:0x4d1890af,ebp
  41add9:	mov    cl,0xd7
  41addb:	aas    
  41addc:	jmp    0x41ad6f
  41adde:	ja     0x41addf
  41ade0:	mov    gs,WORD PTR [edx-0x80]
  41ade3:	imul   esp,edx,0x16
  41ade6:	inc    ebp
  41ade7:	inc    edi
  41ade8:	mov    ch,0x23
  41adea:	or     eax,0xc3ecb7a5
  41adef:	sub    BYTE PTR [eax],bh
  41adf1:	out    0xbc,al
  41adf3:	stos   DWORD PTR es:[edi],eax
  41adf4:	mov    ch,0x9c
  41adf6:	dec    ebx
  41adf7:	inc    ecx
  41adf8:	sub    eax,0x10c8f7a4
  41adfd:	out    dx,eax
  41adfe:	cwde   
  41adff:	add    al,0x3c
  41ae01:	or     eax,0x1319512a
  41ae06:	cwde   
  41ae07:	(bad)  
  41ae08:	out    0x64,al
  41ae0a:	jbe    0x41ae61
  41ae0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae0d:	inc    esi
  41ae0e:	jns    0x41ae54
  41ae10:	outs   dx,DWORD PTR ds:[esi]
  41ae11:	in     al,0x57
  41ae13:	into   
  41ae14:	add    esp,eax
  41ae16:	cmp    BYTE PTR [ecx-0x1b357ab2],0x2f
  41ae1d:	cdq    
  41ae1e:	xor    cl,BYTE PTR [edi-0x66]
  41ae21:	and    DWORD PTR [esi+ecx*4-0x36],esp
  41ae25:	jmp    0x78b0:0xa0fadf25
  41ae2c:	in     eax,0x14
  41ae2e:	add    eax,DWORD PTR [edi-0x2f]
  41ae31:	jp     0x41adfc
  41ae33:	pop    ss
  41ae34:	scas   eax,DWORD PTR es:[edi]
  41ae35:	mul    DWORD PTR [ebx]
  41ae37:	jp     0x41ae4e
  41ae39:	pop    eax
  41ae3a:	pushf  
  41ae3b:	loope  0x41ae74
  41ae3d:	repnz gs stc 
  41ae40:	mov    al,BYTE PTR [edi]
  41ae42:	clc    
  41ae43:	test   DWORD PTR [edx+0x5d],eax
  41ae46:	out    0xed,al
  41ae48:	sub    eax,DWORD PTR [eax+0x423cd678]
  41ae4e:	test   edx,ebp
  41ae50:	push   0xa4c7b0bb
  41ae55:	pop    esi
  41ae56:	pushf  
  41ae57:	call   0x676c:0xf424701c
  41ae5e:	loopne 0x41ae8c
  41ae60:	adc    DWORD PTR [ecx],eax
  41ae62:	adc    eax,0xd7b60ed9
  41ae67:	ret    0xdb6f
  41ae6a:	pop    ss
  41ae6b:	sti    
  41ae6c:	adc    al,0x3f
  41ae6e:	arpl   WORD PTR [ecx-0x1e],si
  41ae71:	gs mov edx,0x7336c81c
  41ae77:	or     ecx,DWORD PTR [eax+ecx*4]
  41ae7a:	pop    ebx
  41ae7b:	clc    
  41ae7c:	sub    al,0x2e
  41ae7e:	jae    0x41ae7b
  41ae80:	inc    eax
  41ae81:	shr    BYTE PTR [ebx],0xa4
  41ae84:	adc    eax,0x7e056df2
  41ae89:	mov    bl,0x23
  41ae8b:	sbb    eax,DWORD PTR [edx+0x5634edbf]
  41ae91:	jg     0x41aef8
  41ae93:	sbb    esi,DWORD PTR [esi+0x4ad89a76]
  41ae99:	jge    0x41ae29
  41ae9b:	daa    
  41ae9c:	push   ebx
  41ae9d:	xchg   esp,eax
  41ae9e:	push   edx
  41ae9f:	mov    ch,0x6e
  41aea1:	cmp    DWORD PTR [edi-0x13],esp
  41aea4:	push   ebp
  41aea5:	xchg   BYTE PTR [ecx+0x7a],bh
  41aea8:	enter  0x757b,0xd5
  41aeac:	mov    DWORD PTR [ecx+0x54],ebp
  41aeaf:	sti    
  41aeb0:	or     BYTE PTR [edx+0x32],bl
  41aeb3:	fwait
  41aeb4:	inc    esi
  41aeb5:	and    al,0x2a
  41aeb7:	and    DWORD PTR [eax-0x3504cd9e],0x69
  41aebe:	push   edx
  41aebf:	into   
  41aec0:	in     al,dx
  41aec1:	fs (bad) 
  41aec3:	js     0x41aef0
  41aec5:	sar    BYTE PTR [eax],cl
  41aec7:	test   DWORD PTR ds:0x8f8eee30,0x2281f5f8
  41aed1:	and    al,0x7
  41aed3:	scas   al,BYTE PTR es:[edi]
  41aed4:	in     eax,dx
  41aed5:	jbe    0x41aea8
  41aed7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aed8:	sub    ecx,DWORD PTR [ecx+0x71]
  41aedb:	or     BYTE PTR [ebx+ecx*4+0x58a0ca36],dh
  41aee2:	sub    al,0xeb
  41aee4:	cmp    dh,ah
  41aee6:	ss mov dh,0x36
  41aee9:	ss xchg ebx,eax
  41aeeb:	jle    0x41aea4
  41aeed:	add    al,0x98
  41aeef:	leave  
  41aef0:	js     0x41af30
  41aef2:	dec    ebp
  41aef3:	inc    ecx
  41aef4:	ret    
  41aef5:	and    al,0xb9
  41aef7:	fadd   DWORD PTR [esi]
  41aef9:	or     edi,DWORD PTR [esi+ebp*2+0x45]
  41aefd:	or     ebp,DWORD PTR [esi]
  41aeff:	cmp    ebp,esp
  41af01:	(bad)  
  41af02:	push   edi
  41af03:	xor    DWORD PTR [ebx],ebx
  41af05:	xor    DWORD PTR [ecx+edi*2],0xffffffbe
  41af09:	cs adc eax,0x6463c7f2
  41af0f:	daa    
  41af10:	out    0x4b,al
  41af12:	jecxz  0x41af50
  41af14:	jecxz  0x41aeca
  41af16:	or     eax,edx
  41af18:	push   ebp
  41af19:	adc    cl,bh
  41af1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af1c:	test   eax,0xb46e1ceb
  41af21:	or     ah,BYTE PTR [edx-0x4]
  41af24:	jl     0x41aecb
  41af26:	retf   
  41af27:	int    0x9d
  41af29:	popf   
  41af2a:	call   0x9c1ba447
  41af2f:	in     al,dx
  41af30:	(bad)  
  41af31:	ds xchg ebx,eax
  41af33:	mov    al,ds:0x93a3bd24
  41af38:	lods   al,BYTE PTR ds:[esi]
  41af39:	xchg   ecx,eax
  41af3a:	sbb    eax,0xe460028f
  41af3f:	leave  
  41af40:	fisttp WORD PTR [edi]
  41af42:	sub    cl,BYTE PTR [edi+0x7de4bb59]
  41af48:	cmp    al,0x12
  41af4a:	test   eax,0x3bb3e838
  41af4f:	mov    edi,0x64603554
  41af54:	hlt    
  41af55:	dec    edx
  41af56:	adc    eax,esi
  41af58:	cmp    DWORD PTR [edx],edx
  41af5a:	mov    ebx,DWORD PTR [edi]
  41af5c:	loope  0x41af22
  41af5e:	repz jge 0x41afc0
  41af61:	xchg   ebp,eax
  41af62:	popf   
  41af63:	into   
  41af64:	shr    dh,0x52
  41af67:	aas    
  41af68:	jbe    0x41af29
  41af6a:	lea    edx,[ebx+0x1b25b5d9]
  41af70:	fimul  DWORD PTR [edi]
  41af72:	mov    ds:0xc5203507,al
  41af77:	les    ebx,FWORD PTR [edi-0x25]
  41af7a:	clc    
  41af7b:	loope  0x41af02
  41af7d:	or     ebx,DWORD PTR [eax]
  41af7f:	jp     0x41af5a
  41af81:	div    DWORD PTR [ecx-0x59e173c3]
  41af87:	and    bh,dh
  41af89:	sub    eax,0xe932ec9e
  41af8e:	jp     0x41af46
  41af90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af91:	loope  0x41aff7
  41af93:	lods   al,BYTE PTR ds:[esi]
  41af94:	mov    al,0x2
  41af96:	ss xchg esp,eax
  41af98:	pop    ebp
  41af99:	pop    ebx
  41af9a:	jp     0x41af7d
  41af9c:	rol    bl,cl
  41af9e:	into   
  41af9f:	inc    ebx
  41afa0:	imul   esi,DWORD PTR [esp+ebp*1-0x63d57abe],0x191649e1
  41afab:	mov    eax,0x3aa072a9
  41afb0:	cmc    
  41afb1:	jl     0x41afe0
  41afb3:	lods   al,BYTE PTR ds:[esi]
  41afb4:	fisttp QWORD PTR [ebp+0x4d]
  41afb7:	ss retf 0xfb36
  41afbb:	std    
  41afbc:	iret   
  41afbd:	pop    eax
  41afbe:	sub    ch,al
  41afc0:	adc    al,0x5e
  41afc2:	popf   
  41afc3:	jmp    0xf800:0x12915ce
  41afca:	add    al,0x0
  41afcc:	add    BYTE PTR [edx+edi*1],ah
  41afcf:	sbb    DWORD PTR [esi+0x656c0083],0xffffffad
  41afd6:	mov    ebx,0xca8c628b
  41afdb:	stos   DWORD PTR es:[edi],eax
  41afdc:	int3   
  41afdd:	mov    ebx,0xbb29ac75
  41afe2:	mov    BYTE PTR [ecx],0xd2
  41afe5:	outs   dx,DWORD PTR ds:[esi]
  41afe6:	out    dx,al
  41afe7:	js     0x41af8b
  41afe9:	pop    esp
  41afea:	mov    al,0x65
  41afec:	inc    ebx
  41afed:	cmp    DWORD PTR ds:[ebp-0x281e74e7],0x92db650
  41aff8:	aad    0xd3
  41affa:	xor    bh,0x77
  41affd:	xor    eax,0xd2241d99
  41b002:	cmp    al,BYTE PTR [esi+0x68e7ada7]
  41b008:	cmp    BYTE PTR [ebx],dh
  41b00a:	cld    
  41b00b:	sub    eax,edx
  41b00d:	jb     0x41afce
  41b00f:	or     BYTE PTR [edx+0x23],ch
  41b012:	jnp    0x41afd4
  41b014:	mov    ch,0xaf
  41b016:	ficom  DWORD PTR [edx+0x5c2f9fb7]
  41b01c:	sub    BYTE PTR [ebx-0x7fb66df1],cl
  41b022:	pop    ebp
  41b023:	mov    esi,0x616b4c96
  41b028:	ret    
  41b029:	push   eax
  41b02a:	push   ss
  41b02b:	push   esp
  41b02c:	adc    ebp,esi
  41b02e:	adc    DWORD PTR [edx+eax*2+0x40834e7b],ebx
  41b035:	sub    bh,dl
  41b037:	mov    eax,ds:0xff61e474
  41b03c:	lods   al,BYTE PTR ds:[esi]
  41b03d:	add    edi,esp
  41b03f:	enter  0x52f8,0x72
  41b043:	xchg   edx,eax
  41b044:	(bad)  
  41b045:	and    al,0xb3
  41b047:	push   cs
  41b048:	outs   dx,DWORD PTR ds:[esi]
  41b049:	in     eax,dx
  41b04a:	push   ds
  41b04b:	mov    ecx,0x135bf1f9
  41b050:	dec    esi
  41b051:	dec    esi
  41b052:	in     eax,0xd5
  41b054:	mov    esi,DWORD PTR [edi]
  41b056:	and    eax,0x4869703e
  41b05b:	arpl   WORD PTR [eax+0x3e],di
  41b05e:	into   
  41b05f:	xchg   ebp,eax
  41b060:	mov    WORD PTR [ecx],es
  41b062:	test   eax,0x5d07278
  41b067:	xor    bh,BYTE PTR [edi]
  41b069:	add    al,0xb0
  41b06b:	jnp    0x41b072
  41b06d:	outs   dx,BYTE PTR ds:[esi]
  41b06e:	aaa    
  41b06f:	push   ss
  41b070:	or     eax,0x9982e42
  41b075:	test   al,0x1e
  41b077:	jo     0x41b035
  41b079:	ja     0x41b075
  41b07b:	jecxz  0x41b036
  41b07d:	push   ebp
  41b07e:	fxch   st(3)
  41b080:	xchg   DWORD PTR [ebp-0x24617241],edi
  41b086:	sub    ecx,DWORD PTR [ebx+0x37]
  41b089:	mov    ah,0xb2
  41b08b:	dec    esp
  41b08c:	inc    ecx
  41b08d:	retf   
  41b08e:	jl     0x41b0b8
  41b090:	dec    esp
  41b091:	je     0x41b032
  41b093:	pushf  
  41b094:	sar    DWORD PTR [edx-0x4895013d],0x27
  41b09b:	push   esp
  41b09c:	sbb    ebp,esp
  41b09e:	ins    BYTE PTR es:[edi],dx
  41b09f:	xor    bh,BYTE PTR [ecx*8+0x5301b53]
  41b0a6:	pop    edx
  41b0a7:	in     eax,0xea
  41b0a9:	cmp    al,0x3d
  41b0ab:	ficomp WORD PTR [eax]
  41b0ad:	jae    0x41b0ab
  41b0af:	or     ecx,DWORD PTR [ebp-0x4e]
  41b0b2:	rcr    esp,cl
  41b0b4:	pop    edi
  41b0b5:	pop    eax
  41b0b6:	lock in eax,dx
  41b0b8:	in     eax,0x31
  41b0ba:	sbb    edi,DWORD PTR [edi-0x21090c06]
  41b0c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0c1:	xlat   BYTE PTR ds:[ebx]
  41b0c2:	pop    esp
  41b0c3:	xor    al,0x9e
  41b0c5:	or     BYTE PTR [esi-0x30a0d4fd],0x20
  41b0cc:	or     edx,edi
  41b0ce:	push   edi
  41b0cf:	mov    esi,0x161004f3
  41b0d4:	xchg   edi,eax
  41b0d5:	mov    dl,dl
  41b0d7:	and    eax,edx
  41b0d9:	add    BYTE PTR [ebx-0x3a],dl
  41b0dc:	(bad)  
  41b0dd:	popf   
  41b0de:	adc    bl,BYTE PTR [esi-0x7a]
  41b0e1:	mov    ebp,edx
  41b0e3:	jge    0x41b0b4
  41b0e5:	pop    ecx
  41b0e6:	stc    
  41b0e7:	fwait
  41b0e8:	xchg   ebx,eax
  41b0e9:	retf   0x5513
  41b0ec:	(bad)  
  41b0ee:	imul   ebx,DWORD PTR [edi+0x62],0xffffff8d
  41b0f2:	stos   BYTE PTR es:[edi],al
  41b0f3:	icebp  
  41b0f4:	mov    edx,0xe5a9555b
  41b0f9:	(bad)  [edi+0x50]
  41b0fc:	adc    al,0xb7
  41b0fe:	rcr    BYTE PTR [edi-0x7f],1
  41b101:	mov    bh,0xe4
  41b103:	sbb    al,0x49
  41b105:	je     0x41b0d0
  41b107:	out    0x29,al
  41b109:	or     dl,bh
  41b10b:	xor    DWORD PTR [eax],eax
  41b10d:	loop   0x41b156
  41b10f:	test   eax,0x2fb44be0
  41b114:	mov    bl,0x0
  41b116:	in     eax,dx
  41b117:	sbb    BYTE PTR [edi+edi*1-0x2251d0f6],dl
  41b11e:	call   0xc37fc089
  41b123:	and    edi,DWORD PTR [edx]
  41b125:	fcomp  QWORD PTR [ebp+0x3b]
  41b128:	dec    edx
  41b129:	fdivr  DWORD PTR [esi-0x62ba45bd]
  41b12f:	shl    BYTE PTR [esi],cl
  41b131:	xchg   ebx,eax
  41b132:	hlt    
  41b133:	dec    ebx
  41b134:	push   ebx
  41b135:	fimul  WORD PTR [edx-0x34b5ae4f]
  41b13b:	or     BYTE PTR [ebx-0x296a2c1a],dh
  41b141:	lds    ecx,FWORD PTR [ebx]
  41b143:	pop    ebp
  41b144:	pop    ebx
  41b145:	jl     0x41b0d2
  41b147:	sahf   
  41b148:	enter  0x1b2b,0x2d
  41b14c:	dec    edi
  41b14d:	test   DWORD PTR [eax-0x17],esi
  41b150:	mov    ebx,?
  41b152:	dec    edx
  41b153:	(bad)  
  41b154:	loop   0x41b1a9
  41b156:	ins    DWORD PTR es:[edi],dx
  41b157:	es jmp 0x41b1d3
  41b15a:	xor    ebp,esp
  41b15c:	mov    esp,DWORD PTR [ebp-0x70]
  41b15f:	pop    es
  41b160:	dec    edx
  41b161:	scas   eax,DWORD PTR es:[edi]
  41b162:	mov    ebx,0x856ef9e4
  41b167:	mov    al,dh
  41b169:	mov    edx,0xd109de47
  41b16e:	aam    0xd7
  41b170:	or     edx,0x18
  41b173:	push   ss
  41b174:	xchg   BYTE PTR [edi],ah
  41b176:	xor    eax,DWORD PTR [ebp-0x6aa92533]
  41b17c:	(bad)  
  41b17e:	aas    
  41b17f:	dec    edx
  41b180:	jo     0x41b1d5
  41b182:	sbb    al,0xa1
  41b184:	or     BYTE PTR [esi],bh
  41b186:	imul   cl
  41b188:	and    DWORD PTR [ebx],ebx
  41b18a:	cmp    eax,0xe98e0576
  41b18f:	stos   DWORD PTR es:[edi],eax
  41b190:	popa   
  41b191:	and    DWORD PTR [ecx-0x7e137c27],0x47c41dcb
  41b19b:	lods   eax,DWORD PTR ds:[esi]
  41b19c:	or     ah,BYTE PTR [edi]
  41b19e:	cmp    eax,0x3ab2a656
  41b1a3:	inc    edx
  41b1a4:	inc    esi
  41b1a5:	idiv   DWORD PTR [ecx]
  41b1a7:	jne    0x41b1a2
  41b1a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1aa:	lahf   
  41b1ab:	mov    bl,0x66
  41b1ad:	and    ebx,DWORD PTR ds:0x9f6175f4
  41b1b3:	jg     0x41b153
  41b1b5:	ret    0x9001
  41b1b8:	mov    ecx,0x29e78da2
  41b1bd:	mov    esi,0x4638e8ce
  41b1c2:	test   BYTE PTR [esi-0x4],cl
  41b1c5:	sbb    ebx,ebp
  41b1c7:	lock sbb esi,edx
  41b1ca:	mov    dl,0xe1
  41b1cc:	xor    DWORD PTR [ecx-0x3],ecx
  41b1cf:	mov    esp,edx
  41b1d1:	int3   
  41b1d2:	not    DWORD PTR [ebp-0x30e0dbfc]
  41b1d8:	push   ebx
  41b1d9:	cmp    BYTE PTR [eax+0x3c],ch
  41b1dc:	xchg   bl,cl
  41b1de:	and    ebx,DWORD PTR [ebx]
  41b1e0:	pop    ds
  41b1e1:	or     al,0xae
  41b1e3:	cmp    DWORD PTR [ebx+0x16],0x989f7f26
  41b1ea:	(bad)  
  41b1eb:	or     DWORD PTR [edi-0x65762822],ebx
  41b1f1:	jo     0x41b211
  41b1f3:	(bad)  [eax+0x3f6ea1fa]
  41b1f9:	imul   edi,DWORD PTR [edi+0x69ec4b62],0xfffffff9
  41b200:	mov    edx,0xd797718b
  41b205:	dec    edx
  41b206:	mov    ah,0xa4
  41b208:	xor    BYTE PTR [ecx+0x2b],bl
  41b20b:	pop    es
  41b20c:	test   esi,ebp
  41b20e:	ss xchg esp,eax
  41b210:	mov    cl,0x24
  41b212:	repz into 
  41b214:	jmp    0x41b1d0
  41b216:	mov    al,0xc3
  41b218:	loop   0x41b1cb
  41b21a:	icebp  
  41b21b:	mov    ss,WORD PTR [eax-0x3c]
  41b21e:	fbld   TBYTE PTR [edi+0x548c6daf]
  41b224:	cmp    al,0x99
  41b226:	fstp   TBYTE PTR [eax+eax*2]
  41b229:	inc    ebx
  41b22a:	fstp   QWORD PTR cs:[ecx]
  41b22d:	fisubr DWORD PTR [esp+ebp*2+0x6ce5349b]
  41b234:	aad    0xff
  41b236:	inc    eax
  41b237:	sub    edi,DWORD PTR [edx+0x72]
  41b23a:	fnsave [ecx-0x77]
  41b23d:	mov    DWORD PTR ds:0x8f942c0a,eax
  41b243:	rcl    BYTE PTR [edx],cl
  41b245:	sub    bh,al
  41b247:	adc    al,0xd8
  41b249:	jb     0x41b1ee
  41b24b:	aad    0xe2
  41b24d:	mov    ah,0xdf
  41b24f:	shl    BYTE PTR [ecx],0xd2
  41b252:	ins    DWORD PTR es:[edi],dx
  41b253:	sbb    DWORD PTR [ebp+0x2c],edx
  41b256:	cli    
  41b257:	xchg   DWORD PTR [eax+esi*8-0x2a],ebx
  41b25b:	xchg   BYTE PTR [edi-0x20],cl
  41b25e:	sahf   
  41b25f:	add    eax,0xc8a86822
  41b264:	mov    al,ds:0xae1c48e4
  41b269:	add    BYTE PTR ds:0x33be04be,cl
  41b26f:	xchg   BYTE PTR [ecx+0x1],dl
  41b272:	fucomip st,st(7)
  41b274:	pop    edx
  41b275:	jecxz  0x41b24b
  41b277:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b278:	mov    ch,BYTE PTR [edi-0x6b1d3642]
  41b27e:	cmp    esi,DWORD PTR [esi-0x575ca06e]
  41b284:	mov    al,BYTE PTR [edx-0x6c]
  41b287:	gs jl  0x41b236
  41b28a:	push   ebp
  41b28b:	hlt    
  41b28c:	cmp    eax,0x911e98a
  41b291:	and    BYTE PTR [ebx+0x179e5513],cl
  41b297:	jle    0x41b253
  41b299:	mov    bl,0x4d
  41b29b:	push   ebx
  41b29c:	cmp    edx,edi
  41b29e:	cmp    esp,DWORD PTR [ebx]
  41b2a0:	push   eax
  41b2a1:	aad    0xe6
  41b2a3:	sub    DWORD PTR ds:0x43d4ada8,0x7c9f8136
  41b2ad:	fistp  QWORD PTR [esi+0x4a]
  41b2b0:	push   esp
  41b2b1:	arpl   WORD PTR [eax],sp
  41b2b3:	and    DWORD PTR [esi-0x2c],eax
  41b2b6:	test   BYTE PTR [ecx+0x14ab0b2f],bl
  41b2bc:	rol    edx,1
  41b2be:	test   BYTE PTR [ebp-0x73],0x57
  41b2c2:	out    dx,eax
  41b2c3:	adc    cl,BYTE PTR [ebx+0x42]
  41b2c6:	mov    cl,0x78
  41b2c8:	adc    bl,BYTE PTR [edx+0x1a1897bf]
  41b2ce:	push   DWORD PTR [ebx]
  41b2d0:	and    DWORD PTR [ecx+ebx*2-0x97553d4],esi
  41b2d7:	push   eax
  41b2d8:	xor    esp,ecx
  41b2da:	jae    0x41b2e6
  41b2dc:	adc    ebp,DWORD PTR [edx+0x1a4aacb7]
  41b2e2:	mov    al,0x6
  41b2e4:	mov    bh,0x41
  41b2e6:	aas    
  41b2e7:	ins    DWORD PTR es:[edi],dx
  41b2e8:	or     bl,BYTE PTR [esi]
  41b2ea:	and    dl,BYTE PTR [edx-0x2b60cdf]
  41b2f0:	mov    ah,0x70
  41b2f2:	scas   al,BYTE PTR es:[edi]
  41b2f3:	jns    0x41b2a1
  41b2f5:	sub    dh,BYTE PTR [ebp+0x4e93c30e]
  41b2fb:	add    al,0x14
  41b2fd:	inc    edx
  41b2fe:	mov    cl,0xd6
  41b300:	retf   
  41b301:	fucomip st,st(6)
  41b303:	lock xchg esp,eax
  41b305:	mov    eax,0xc719f3bc
  41b30a:	and    al,0x30
  41b30c:	inc    eax
  41b30d:	adc    DWORD PTR [ebp-0x76],0x12
  41b311:	mov    edx,0xf08396ad
  41b316:	std    
  41b317:	mov    cl,0x2d
  41b319:	mov    al,ds:0x54fdb2a1
  41b31e:	rol    DWORD PTR [eax+0x6e3573c2],1
  41b324:	or     DWORD PTR [ebx-0x5f78cdcb],0x2a24d712
  41b32e:	inc    esi
  41b32f:	fadd   QWORD PTR [edi-0x1a437df7]
  41b335:	inc    ecx
  41b336:	mov    ebp,0x8660d2db
  41b33b:	mov    eax,ds:0x7a634f29
  41b340:	fidiv  DWORD PTR [edi-0x34e5ec5b]
  41b346:	outs   dx,BYTE PTR ds:[esi]
  41b347:	lsl    esi,WORD PTR [edx]
  41b34a:	shl    DWORD PTR [ecx-0x4f4d9124],cl
  41b350:	cmp    BYTE PTR [ecx+0x4c],cl
  41b353:	cmp    cl,BYTE PTR [ebx+0x6e8c9698]
  41b359:	push   0x1af0a883
  41b35e:	nop
  41b35f:	fbld   TBYTE PTR [edx+0x5d]
  41b362:	xor    eax,0x7247a298
  41b367:	sub    eax,0xd6c18419
  41b36c:	stc    
  41b36d:	ret    
  41b36e:	sti    
  41b36f:	(bad)  
  41b370:	(bad)  
  41b371:	jmp    0x41b32b
  41b373:	sub    ah,ah
  41b375:	aam    0x7d
  41b377:	mov    al,ds:0xa951f502
  41b37c:	mov    eax,ds:0x2e8a5599
  41b381:	in     eax,dx
  41b382:	test   DWORD PTR [eax+0x1c551c61],ebp
  41b388:	cs (bad) 
  41b38a:	call   0x7b6f8691
  41b38f:	pop    ecx
  41b390:	sar    al,cl
  41b392:	call   0xdc7d391d
  41b397:	jnp    0x41b3c0
  41b399:	or     edi,DWORD PTR [ebx]
  41b39b:	add    al,0x52
  41b39d:	mov    ds:0x3c7696d4,al
  41b3a2:	inc    edx
  41b3a3:	fadd   QWORD PTR [ebp+0x640c1b64]
  41b3a9:	mov    DWORD PTR [ebp+eiz*4+0xe],0x6545efbc
  41b3b1:	jp     0x41b37f
  41b3b3:	sub    esi,DWORD PTR [ebx]
  41b3b5:	add    BYTE PTR [eax-0x764ab196],0x2a
  41b3bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3bd:	out    dx,al
  41b3be:	(bad)  
  41b3bf:	push   esi
  41b3c0:	data16 outs dx,BYTE PTR ds:[esi]
  41b3c2:	jmp    0xcb98:0xfc9a77be
  41b3c9:	mov    esp,0x2a6b7c83
  41b3ce:	push   0xffffffdb
  41b3d0:	adc    ch,BYTE PTR [eax]
  41b3d2:	sbb    BYTE PTR [eax],al
  41b3d4:	loop   0x41b452
  41b3d6:	dec    ecx
  41b3d7:	mov    ebx,0x5e52fc49
  41b3dc:	mov    ebp,eax
  41b3de:	push   eax
  41b3df:	ret    
  41b3e0:	call   0x481b:0x94aba7c3
  41b3e7:	pusha  
  41b3e8:	dec    eax
  41b3e9:	mov    edx,0x2fd5465b
  41b3ee:	or     BYTE PTR [edx+0x5a],ch
  41b3f1:	or     DWORD PTR [ebp-0x50e53e7b],ebx
  41b3f7:	fnstcw WORD PTR [ecx+0x2c]
  41b3fa:	popf   
  41b3fb:	fisub  WORD PTR cs:[eax+eiz*1+0x5d]
  41b400:	ffreep st(2)
  41b402:	popf   
  41b403:	aaa    
  41b404:	push   eax
  41b405:	jmp    0x41b45e
  41b407:	adc    bh,BYTE PTR [edi]
  41b409:	pop    es
  41b40a:	add    edi,ebp
  41b40c:	repnz add al,0xd8
  41b40f:	cli    
  41b410:	mov    dl,0xbf
  41b412:	aad    0xf
  41b414:	pop    edx
  41b415:	idiv   BYTE PTR [eax-0x74d79207]
  41b41b:	sbb    eax,0x160c0000
  41b420:	or     cl,BYTE PTR [ebx]
  41b422:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b423:	sub    ebx,DWORD PTR [ecx]
  41b425:	mov    eax,0x92919708
  41b42a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b42b:	loopne 0x41b3c4
  41b42d:	ffreep st(2)
  41b42f:	dec    ecx
  41b430:	aas    
  41b431:	add    al,0x4f
  41b433:	inc    esi
  41b434:	sub    dl,bh
  41b436:	or     eax,0x7a4e6c58
  41b43b:	shl    DWORD PTR [esi],cl
  41b43d:	lods   eax,DWORD PTR ds:[esi]
  41b43e:	or     DWORD PTR [eax-0x541247ae],edi
  41b444:	sub    bl,BYTE PTR [esi]
  41b446:	sbb    eax,0x25ec3fff
  41b44b:	adc    ah,BYTE PTR [eax]
  41b44d:	ret    
  41b44e:	scas   eax,DWORD PTR es:[edi]
  41b44f:	paddd  mm4,mm7
  41b452:	(bad)  
  41b453:	xchg   ebp,eax
  41b454:	sar    DWORD PTR [edi],0x49
  41b457:	mov    dl,BYTE PTR [edx+ebx*2+0x4d]
  41b45b:	les    edi,FWORD PTR [esi+0x19]
  41b45e:	push   0xbb5cbd90
  41b463:	ror    BYTE PTR [ebp-0x636153cf],0x2a
  41b46a:	gs push cs
  41b46c:	int    0x90
  41b46e:	daa    
  41b46f:	adc    BYTE PTR [ebx+0x15c99365],ah
  41b475:	sbb    ebp,edx
  41b477:	ins    DWORD PTR es:[edi],dx
  41b478:	mov    ah,0x3a
  41b47a:	ins    DWORD PTR es:[edi],dx
  41b47b:	inc    eax
  41b47c:	or     dl,BYTE PTR [esi-0x6572627a]
  41b482:	bound  edx,QWORD PTR [ecx+0x213fc984]
  41b488:	mov    esi,0xbed39d50
  41b48d:	mov    bl,BYTE PTR ds:[edi+0x43]
  41b491:	mov    BYTE PTR [esp+esi*2],dh
  41b494:	dec    edi
  41b495:	fcom   DWORD PTR [eax-0x4e]
  41b498:	xor    BYTE PTR [ecx+eax*2+0x1a9d5dce],cl
  41b49f:	dec    esp
  41b4a0:	sahf   
  41b4a1:	dec    esp
  41b4a2:	pop    es
  41b4a3:	sbb    ecx,DWORD PTR [edx-0x6d0d850e]
  41b4a9:	or     eax,0x9ae8130b
  41b4ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4af:	xchg   ebp,eax
  41b4b0:	aam    0xcd
  41b4b2:	inc    ecx
  41b4b3:	mov    al,ds:0xc29992b8
  41b4b8:	in     eax,dx
  41b4b9:	retf   0xeea8
  41b4bc:	mov    ah,0xf3
  41b4be:	push   ds
  41b4bf:	or     ecx,0xde4e0faa
  41b4c5:	cld    
  41b4c6:	es out dx,eax
  41b4c8:	mov    eax,ds:0x7ffee9ff
  41b4cd:	in     al,dx
  41b4ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4cf:	data16 arpl WORD PTR [esi+0xd89461d],bp
  41b4d6:	add    DWORD PTR cs:[eax],eax
  41b4d9:	clc    
  41b4da:	add    al,0x0
  41b4dc:	add    BYTE PTR [ebp-0x28],bl
  41b4df:	mov    ds:0xeb97126d,al
  41b4e4:	cmp    eax,0xc47dd3a1
  41b4e9:	inc    ecx
  41b4ea:	ret    0x475e
  41b4ed:	imul   esp,DWORD PTR [ecx+edx*8],0x36
  41b4f1:	es mov bh,0x69
  41b4f4:	add    eax,0x9bc459c5
  41b4f9:	push   eax
  41b4fa:	popf   
  41b4fb:	sub    edi,DWORD PTR [eax]
  41b4fd:	aad    0x3e
  41b4ff:	mov    ch,0x36
  41b501:	stos   DWORD PTR es:[edi],eax
  41b502:	xchg   esi,eax
  41b503:	or     dh,bl
  41b505:	sub    eax,0x5b5f2609
  41b50a:	xchg   edi,eax
  41b50b:	loop   0x41b4ca
  41b50d:	mov    ah,0xd4
  41b50f:	push   eax
  41b510:	mov    esi,0x1fc83fe8
  41b515:	xor    edx,DWORD PTR [esi-0xbd105a6]
  41b51b:	outs   dx,DWORD PTR ds:[esi]
  41b51c:	fsub   st(6),st
  41b51e:	fstp   DWORD PTR ds:0x7ff33464
  41b524:	fstp   TBYTE PTR [ecx]
  41b526:	mov    esp,eax
  41b528:	and    al,BYTE PTR [edx+0x5ca0e6e4]
  41b52e:	popf   
  41b52f:	pop    ebp
  41b530:	jl     0x41b56f
  41b532:	aaa    
  41b533:	mov    esi,0x26f6c42f
  41b538:	dec    edx
  41b539:	jo     0x41b57e
  41b53b:	enter  0xaf94,0x73
  41b53f:	data16 int3 
  41b541:	inc    edx
  41b542:	fist   WORD PTR [esp+edx*4+0x2a]
  41b546:	imul   esi,DWORD PTR [ebx+0x4c324019],0xc
  41b54d:	nop
  41b54e:	in     eax,dx
  41b54f:	push   ecx
  41b550:	enter  0xbd99,0x7e
  41b554:	and    eax,0xc7e523ac
  41b559:	mov    BYTE PTR [eax+0x5d04d408],ch
  41b55f:	dec    esi
  41b560:	mov    al,ds:0x6480e2cf
  41b565:	out    dx,eax
  41b566:	and    BYTE PTR [ebp-0x198783e2],al
  41b56c:	xchg   ebx,eax
  41b56d:	cmp    esp,DWORD PTR [eax-0x7593e370]
  41b573:	dec    ebp
  41b574:	out    0x15,al
  41b576:	add    bh,BYTE PTR [ecx-0x2a70b539]
  41b57c:	mov    ebp,0xb769302f
  41b581:	loopne 0x41b5c1
  41b583:	mov    ds:0xc6fb706d,eax
  41b588:	not    DWORD PTR [ecx-0x15]
  41b58b:	ja     0x41b554
  41b58d:	in     al,0x6c
  41b58f:	mov    ds:0x55ebdace,al
  41b594:	xchg   esp,eax
  41b595:	imul   ebp,DWORD PTR [ebp+0x71c00171],0x8892d8d0
  41b59f:	xor    al,0x62
  41b5a1:	call   0xe6ae:0xdde00875
  41b5a8:	sub    BYTE PTR [esi-0x7b],0x10
  41b5ac:	inc    ebp
  41b5ad:	mov    DWORD PTR [ebp-0x36553d36],ebp
  41b5b3:	addr16 cmc 
  41b5b5:	pop    edx
  41b5b6:	push   ds
  41b5b7:	je     0x41b564
  41b5b9:	push   0xe
  41b5bb:	xchg   ebx,eax
  41b5bc:	(bad)  
  41b5bd:	inc    ebp
  41b5be:	push   esi
  41b5bf:	or     BYTE PTR [esi+0x2582fc77],bh
  41b5c5:	pop    esi
  41b5c6:	push   ebx
  41b5c7:	xchg   ebx,ecx
  41b5c9:	pop    eax
  41b5ca:	iret   
  41b5cb:	jmp    0xc944:0xeda1890a
  41b5d2:	pop    es
  41b5d3:	les    ebx,FWORD PTR [ebx]
  41b5d5:	aam    0x48
  41b5d7:	cmc    
  41b5d8:	test   DWORD PTR [esi+0x43],eax
  41b5db:	and    dh,ch
  41b5dd:	call   0x1c6cb96e
  41b5e2:	jmp    0x41b597
  41b5e4:	mov    ebx,0xa3f3338b
  41b5e9:	shl    ebx,0x6b
  41b5ec:	add    cl,dl
  41b5ee:	call   0x315114a
  41b5f3:	leave  
  41b5f4:	sbb    al,0x68
  41b5f6:	mov    eax,0xa4b38da5
  41b5fb:	(bad)
  41b600:	xchg   DWORD PTR [esi-0x13],esp
  41b603:	std    
  41b604:	ss sub eax,0x47b0bf02
  41b60a:	add    dh,BYTE PTR [esi]
  41b60c:	add    dh,ch
  41b60e:	sbb    DWORD PTR [ebp-0x6b93fbbd],esi
  41b614:	xor    bl,ch
  41b616:	pusha  
  41b617:	data16 jle 0x41b5d4
  41b61a:	jnp    0x41b68f
  41b61c:	mov    cl,0x93
  41b61e:	rcl    BYTE PTR [edi],1
  41b620:	add    ch,BYTE PTR [eax-0x40]
  41b623:	pop    esi
  41b624:	sbb    DWORD PTR [ecx+ecx*8],eax
  41b627:	mov    eax,ds:0x5a5b75c7
  41b62c:	inc    edx
  41b62d:	cmp    DWORD PTR [eax+eax*1],esp
  41b630:	test   BYTE PTR [edx+0x6c],al
  41b633:	xlat   BYTE PTR ds:[ebx]
  41b634:	mov    esp,0x191e31e8
  41b639:	es xchg esp,eax
  41b63b:	pop    es
  41b63c:	stos   DWORD PTR es:[edi],eax
  41b63d:	mov    WORD PTR [edx-0x40],fs
  41b640:	ss jns 0x41b692
  41b643:	inc    esi
  41b644:	mov    DWORD PTR [ecx+0x62],0xfbdcb673
  41b64b:	adc    DWORD PTR [edx],0x370147ae
  41b651:	cld    
  41b652:	pop    ebp
  41b653:	sub    DWORD PTR [ecx-0x2a],ebx
  41b656:	adc    al,0xf
  41b658:	xchg   edx,eax
  41b659:	shl    ecx,0xc7
  41b65c:	jnp    0x41b61d
  41b65e:	dec    esp
  41b65f:	clc    
  41b660:	sub    BYTE PTR [eax+0x49],al
  41b663:	in     al,dx
  41b664:	fs mov bh,0xdc
  41b667:	mov    ds:0x88b49b33,al
  41b66c:	inc    esi
  41b66d:	dec    eax
  41b66e:	nop
  41b66f:	addr16 das 
  41b671:	aaa    
  41b672:	call   0x3469:0xbceea40f
  41b679:	rol    edi,cl
  41b67b:	and    esi,0x57
  41b67e:	jnp    0x41b6fc
  41b680:	ret    0xf686
  41b683:	mov    dh,0xa3
  41b685:	fwait
  41b686:	out    0x37,al
  41b688:	es cmp ch,dh
  41b68b:	and    bh,dh
  41b68d:	inc    ecx
  41b68e:	sbb    dh,BYTE PTR [ebp+0x50]
  41b691:	or     DWORD PTR [esi],edx
  41b693:	adc    al,0x8a
  41b695:	mov    ds:0xd25531fc,al
  41b69a:	es in  eax,dx
  41b69c:	std    
  41b69d:	dec    edx
  41b69e:	aas    
  41b69f:	loop   0x41b689
  41b6a1:	mov    bl,BYTE PTR [ebx+0x2d]
  41b6a4:	ins    BYTE PTR es:[edi],dx
  41b6a5:	and    esi,DWORD PTR [ebx-0x48344bfd]
  41b6ab:	loop   0x41b6b6
  41b6ad:	and    eax,0xc387d877
  41b6b2:	ffree  st(1)
  41b6b4:	jno    0x41b66e
  41b6b6:	xchg   ebx,eax
  41b6b7:	fs popf 
  41b6b9:	(bad)  
  41b6ba:	cs cli 
  41b6bc:	jne    0x41b6e9
  41b6be:	pop    ss
  41b6bf:	jne    0x41b6eb
  41b6c1:	popa   
  41b6c2:	push   0xffffffc9
  41b6c4:	mov    edi,0x4b034da4
  41b6c9:	dec    ecx
  41b6ca:	jle    0x41b6ba
  41b6cc:	mov    esp,0x95039749
  41b6d1:	or     al,0xbe
  41b6d3:	retf   0xd27e
  41b6d6:	test   eax,0x75f3771e
  41b6db:	cmp    bh,bh
  41b6dd:	inc    esi
  41b6de:	sti    
  41b6df:	neg    DWORD PTR [esi+0x7100c319]
  41b6e5:	jp     0x41b70e
  41b6e7:	mov    ch,0x46
  41b6e9:	retf   0xf49
  41b6ec:	xor    DWORD PTR [ebp-0x11771f9f],edi
  41b6f2:	sub    ebp,DWORD PTR [edi]
  41b6f4:	jne    0x41b767
  41b6f6:	push   ss
  41b6f7:	int3   
  41b6f8:	push   ecx
  41b6f9:	sahf   
  41b6fa:	dec    eax
  41b6fb:	lea    esp,[ecx-0x2f60d7c6]
  41b701:	mov    edx,0x20d22b17
  41b706:	arpl   WORD PTR [esi+0x6cf774b0],sp
  41b70c:	out    0xa2,eax
  41b70e:	out    dx,eax
  41b70f:	div    BYTE PTR [edx]
  41b711:	adc    BYTE PTR [eax+0x59b9a4a2],al
  41b717:	jbe    0x41b6fb
  41b719:	or     BYTE PTR [ebx*1+0x441dba3c],ah
  41b720:	or     DWORD PTR [ebp+0x7b8e8adb],ebp
  41b726:	sub    BYTE PTR ds:0xc592e974,al
  41b72c:	scas   al,BYTE PTR es:[edi]
  41b72d:	xchg   esi,eax
  41b72e:	sbb    bh,BYTE PTR ds:0x1af1133e
  41b734:	jmp    0x29052c68
  41b739:	fcmovnb st,st(7)
  41b73b:	push   ecx
  41b73c:	sbb    DWORD PTR [ebx-0x79],ebx
  41b73f:	cmc    
  41b740:	pop    ds
  41b741:	or     cl,al
  41b743:	xor    BYTE PTR [eax-0x30],0x84
  41b747:	push   esi
  41b748:	dec    edi
  41b749:	mov    dh,0x46
  41b74b:	mov    ebx,0xdc2a7b1f
  41b750:	pusha  
  41b751:	dec    eax
  41b752:	mov    cl,0xa
  41b754:	in     al,dx
  41b755:	sbb    eax,0x42a5277e
  41b75a:	inc    ecx
  41b75b:	call   0x50a6:0xe308bf74
  41b762:	sbb    al,0x25
  41b764:	add    BYTE PTR ds:0x949609d2,dl
  41b76a:	cmp    eax,0xc41260fc
  41b76f:	ret    0xa715
  41b772:	retf   0x7fb
  41b775:	xchg   BYTE PTR [ebp-0x546b5c0d],al
  41b77b:	xchg   esi,eax
  41b77c:	add    al,0x75
  41b77e:	pusha  
  41b77f:	fdivr  DWORD PTR ds:0x243d0eef
  41b785:	mov    ds:0x15936c7a,eax
  41b78a:	repz xchg ecx,eax
  41b78c:	or     ecx,DWORD PTR [ecx+0x70]
  41b78f:	int    0x0
  41b791:	dec    esp
  41b792:	mov    bl,0x53
  41b794:	aad    0xfe
  41b796:	adc    al,0xa2
  41b798:	(bad)  
  41b79a:	and    al,0x4
  41b79c:	add    ebp,esi
  41b79e:	cmp    BYTE PTR [eax-0x75c8c206],ch
  41b7a4:	iret   
  41b7a5:	scas   eax,DWORD PTR es:[edi]
  41b7a6:	nop
  41b7a7:	lods   al,BYTE PTR ds:[esi]
  41b7a9:	retf   
  41b7aa:	adc    BYTE PTR [esp+edx*8],bl
  41b7ad:	mov    cl,0xc9
  41b7af:	ret    
  41b7b0:	push   esp
  41b7b1:	loop   0x41b7c4
  41b7b3:	dec    eax
  41b7b4:	or     edx,ebp
  41b7b6:	add    DWORD PTR [edx-0x2c223328],edi
  41b7bc:	add    eax,0x459f551a
  41b7c1:	sub    BYTE PTR [edx+0x7],0x65
  41b7c5:	sub    ebx,DWORD PTR [eax]
  41b7c7:	xchg   esp,eax
  41b7c8:	test   al,0x24
  41b7ca:	fimul  WORD PTR [ecx+0x3f]
  41b7cd:	sbb    al,0x85
  41b7cf:	pop    es
  41b7d0:	mov    bh,0xe2
  41b7d2:	(bad)  
  41b7d3:	cld    
  41b7d4:	adc    ah,BYTE PTR es:[edx]
  41b7d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7d8:	cwde   
  41b7d9:	cmc    
  41b7da:	syscall 
  41b7dc:	mov    dl,0xe3
  41b7de:	test   DWORD PTR [esi-0x36],edx
  41b7e1:	inc    edi
  41b7e2:	inc    eax
  41b7e3:	retf   0x5909
  41b7e6:	addr16 pop edx
  41b7e8:	fs jp  0x41b7d7
  41b7eb:	pusha  
  41b7ec:	mov    esi,0xff3b60dc
  41b7f1:	pushf  
  41b7f2:	std    
  41b7f3:	or     BYTE PTR [ebx-0x2e],ah
  41b7f6:	jle    0x41b7a3
  41b7f8:	enter  0x2c36,0x43
  41b7fc:	pop    ds
  41b7fd:	ficom  WORD PTR [edi+ebp*8+0x2]
  41b801:	xor    DWORD PTR [eax-0x6f8c90d5],ecx
  41b807:	cmp    al,0x5c
  41b809:	out    0xad,eax
  41b80b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b80c:	das    
  41b80d:	add    al,0xb8
  41b80f:	stc    
  41b810:	cmp    edi,DWORD PTR [edx+0x1932b359]
  41b816:	and    eax,0x79d84ff1
  41b81b:	jle    0x41b80a
  41b81d:	mov    ebx,0x310a8095
  41b822:	push   ecx
  41b823:	aad    0x95
  41b825:	repnz test al,0x47
  41b828:	in     al,0x7f
  41b82a:	mov    ecx,0xa95a66b1
  41b82f:	les    ebx,FWORD PTR [esi-0x67]
  41b832:	jl     0x41b839
  41b834:	ins    BYTE PTR es:[edi],dx
  41b835:	adc    DWORD PTR [ecx],eax
  41b837:	ja     0x41b81e
  41b839:	ds daa 
  41b83b:	loope  0x41b873
  41b83d:	dec    esp
  41b83e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b83f:	fldln2 
  41b841:	mov    BYTE PTR [ecx+0x21d0bdf],ah
  41b847:	and    ah,BYTE PTR [ebx-0x36]
  41b84a:	xchg   bl,ah
  41b84c:	push   edi
  41b84d:	add    eax,0xc9ecdfe1
  41b852:	std    
  41b853:	fs nop
  41b855:	dec    ebp
  41b856:	dec    edi
  41b857:	mov    ah,0x54
  41b859:	in     eax,dx
  41b85a:	xchg   ebx,eax
  41b85b:	push   ebp
  41b85c:	xchg   edx,eax
  41b85d:	jns    0x41b83a
  41b85f:	hlt    
  41b860:	add    DWORD PTR ds:0x3773f434,esp
  41b866:	inc    DWORD PTR es:[esi-0x9494d57]
  41b86d:	push   cs
  41b86e:	inc    eax
  41b86f:	dec    edi
  41b870:	jmp    0x41b809
  41b872:	or     ecx,DWORD PTR [ebx]
  41b874:	adc    ecx,DWORD PTR ds:0x933cf9e8
  41b87a:	sub    al,0xd1
  41b87c:	pop    ebx
  41b87d:	fnstcw WORD PTR [eax-0x31dc2bc1]
  41b883:	mov    esi,0xb55e3c32
  41b888:	ins    BYTE PTR es:[edi],dx
  41b889:	jmp    0x41b8fc
  41b88b:	test   eax,0x31252438
  41b890:	adc    BYTE PTR [ecx-0x46],dl
  41b893:	pop    edx
  41b894:	retf   
  41b895:	in     eax,dx
  41b896:	mov    ch,0xd8
  41b898:	jle    0x41b8b5
  41b89a:	repnz rcr BYTE PTR [ebx+0x6f],1
  41b89e:	arpl   WORD PTR [eax],si
  41b8a0:	push   edx
  41b8a1:	aam    0x71
  41b8a3:	dec    esp
  41b8a4:	mov    cl,0x21
  41b8a6:	mov    bl,0xf9
  41b8a8:	fwait
  41b8a9:	inc    edi
  41b8aa:	aas    
  41b8ab:	add    eax,ecx
  41b8ad:	mov    DWORD PTR ss:[ecx+0x71],ebx
  41b8b1:	sbb    ebx,ecx
  41b8b3:	popf   
  41b8b4:	outs   dx,DWORD PTR ds:[esi]
  41b8b5:	aam    0xb4
  41b8b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8b8:	adc    DWORD PTR [eax+0x627f12d1],0x35
  41b8bf:	nop
  41b8c0:	or     al,0xb7
  41b8c2:	or     DWORD PTR [ebp-0xdfbc5a],0xffffffe4
  41b8c9:	xchg   edx,eax
  41b8ca:	cmp    cl,dl
  41b8cc:	sub    esi,DWORD PTR [ecx+0x55dd335e]
  41b8d2:	mov    ch,0x49
  41b8d4:	and    esi,DWORD PTR [esi+ebp*4-0x40]
  41b8d8:	mov    edx,0x172e46c9
  41b8dd:	push   eax
  41b8de:	lock mov BYTE PTR [edx-0x41],ah
  41b8e2:	inc    esi
  41b8e3:	shl    DWORD PTR [eax-0x60b9534c],1
  41b8e9:	pop    edx
  41b8ea:	mov    dl,0x5f
  41b8ec:	fistp  DWORD PTR [edx-0x2c6bf918]
  41b8f2:	data16 mov dh,0xa3
  41b8f5:	addr16 and eax,edx
  41b8f8:	or     ecx,DWORD PTR [eax]
  41b8fa:	dec    edx
  41b8fb:	inc    ebp
  41b8fc:	inc    ebx
  41b8fd:	stos   DWORD PTR es:[edi],eax
  41b8fe:	imul   esp,ebx,0x79
  41b901:	jns    0x41b8f9
  41b903:	push   0x196c9d1e
  41b908:	push   eax
  41b909:	and    DWORD PTR [edx],esi
  41b90b:	inc    eax
  41b90c:	imul   ebp,ecx,0xffffffe8
  41b90f:	inc    ebp
  41b910:	iret   
  41b911:	in     al,0xa5
  41b913:	popa   
  41b914:	xchg   BYTE PTR [ecx+0x471ae712],dl
  41b91a:	sub    ecx,esp
  41b91c:	test   al,0xad
  41b91e:	mov    ebx,0x8e849ce
  41b923:	push   0xd5de1975
  41b928:	in     eax,dx
  41b929:	lock cmp eax,0xe93b06e3
  41b92f:	mov    ah,0xad
  41b931:	jo     0x41b96d
  41b933:	icebp  
  41b934:	pop    ebp
  41b935:	aaa    
  41b936:	jmp    0x41b8bc
  41b938:	sub    edx,edx
  41b93a:	dec    esi
  41b93b:	lahf   
  41b93c:	fidivr DWORD PTR [ebx]
  41b93e:	push   cs
  41b93f:	and    BYTE PTR [esi+ecx*1+0x61],dh
  41b943:	ret    0x2d0b
  41b946:	xchg   ebp,eax
  41b947:	mov    al,ds:0x19ca46de
  41b94c:	add    al,0x9b
  41b94e:	lods   al,BYTE PTR ds:[esi]
  41b94f:	imul   esp,ebp,0x1a058d5c
  41b955:	test   al,0x2d
  41b957:	dec    edx
  41b958:	pop    ebx
  41b959:	ins    DWORD PTR es:[edi],dx
  41b95a:	hlt    
  41b95b:	jns    0x41b914
  41b95d:	add    BYTE PTR [ecx+0x945c0b5],0xa6
  41b964:	mov    bh,0x33
  41b966:	shl    BYTE PTR ss:[bx+di-0x6a2],1
  41b96c:	mov    bl,0x9
  41b96e:	mov    WORD PTR [ebx+esi*1-0x62],fs
  41b972:	pop    ecx
  41b973:	in     al,dx
  41b974:	out    dx,al
  41b975:	adc    al,0xb4
  41b977:	jl     0x41b984
  41b979:	scas   al,BYTE PTR es:[edi]
  41b97a:	add    DWORD PTR [ebp-0x64b0fdce],edi
  41b980:	sub    al,0x85
  41b982:	(bad)  
  41b983:	sub    al,0x52
  41b985:	je     0x41ba04
  41b987:	in     eax,dx
  41b988:	retf   0x9d66
  41b98b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b98c:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b98e:	fdivr  QWORD PTR [ebp*2-0x5e9bd4cf]
  41b995:	fimul  DWORD PTR [eax]
  41b997:	lods   eax,DWORD PTR ds:[esi]
  41b998:	shl    BYTE PTR ds:0xd8384547,0x21
  41b99f:	loope  0x41b97a
  41b9a1:	and    ebx,ecx
  41b9a3:	in     eax,dx
  41b9a4:	mov    eax,DWORD PTR [eax+0x6d477b6]
  41b9aa:	push   ecx
  41b9ab:	aas    
  41b9ac:	cmp    DWORD PTR [edx],0xffffff99
  41b9af:	mov    bh,0xff
  41b9b1:	and    ecx,DWORD PTR [edi]
  41b9b3:	add    DWORD PTR [edx-0x7e2b7766],ebp
  41b9b9:	shr    BYTE PTR [ebp-0x635a9ef4],cl
  41b9bf:	and    cl,dh
  41b9c1:	and    BYTE PTR [ecx+0x79c7387c],ah
  41b9c7:	jmp    0x41b9e5
  41b9c9:	cli    
  41b9ca:	iret   
  41b9cb:	ins    BYTE PTR es:[edi],dx
  41b9cc:	add    DWORD PTR [ebx+0x36],ebx
  41b9cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9d0:	fnstcw WORD PTR ds:0xc6e2e399
  41b9d6:	aaa    
  41b9d7:	sti    
  41b9d8:	addr16 sti 
  41b9da:	out    dx,eax
  41b9db:	fidiv  WORD PTR [edi-0x1dda8775]
  41b9e1:	arpl   WORD PTR [ebp-0x4a],ax
  41b9e4:	fiadd  DWORD PTR ds:0xf8000133
  41b9ea:	add    al,0x0
  41b9ec:	add    dh,ch
  41b9ee:	sbb    dl,BYTE PTR cs:[ebx+0x1a3d86b7]
  41b9f5:	push   0xf0e7aebf
  41b9fa:	into   
  41b9fb:	mov    eax,0xa5063465
  41ba00:	xor    BYTE PTR [ebp+0x51c7db65],ah
  41ba06:	push   ebx
  41ba07:	sbb    eax,0x911e6f
  41ba0c:	jle    0x41ba03
  41ba0e:	jge    0x41ba19
  41ba10:	mov    eax,0xbdde4b37
  41ba15:	sub    al,0xdc
  41ba17:	xchg   esi,eax
  41ba18:	mov    dh,0x2b
  41ba1a:	jle    0x41b9e8
  41ba1c:	dec    ebp
  41ba1d:	int3   
  41ba1e:	pop    eax
  41ba1f:	pop    ebp
  41ba20:	mov    eax,0x859dfca4
  41ba25:	sub    eax,0x3313c4e8
  41ba2a:	cwde   
  41ba2b:	sbb    eax,0x8db5c423
  41ba30:	fist   DWORD PTR [edi]
  41ba32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba33:	loopne 0x41ba4a
  41ba35:	fisubr DWORD PTR ds:0x50f07c2a
  41ba3b:	mov    esi,0xf62be4e
  41ba40:	scas   al,BYTE PTR es:[edi]
  41ba41:	xchg   edi,eax
  41ba42:	jle    0x41ba82
  41ba44:	jp     0x41ba62
  41ba46:	xchg   ebx,eax
  41ba47:	xlat   BYTE PTR ds:[ebx]
  41ba48:	cmp    edx,ebp
  41ba4a:	or     eax,0x5482c0ac
  41ba4f:	mov    edi,0x78ab1a74
  41ba54:	popw   es
  41ba56:	jb     0x41ba75
  41ba58:	clc    
  41ba59:	mov    eax,ebp
  41ba5b:	fst    QWORD PTR [ecx+0x578119b6]
  41ba61:	movq   QWORD PTR [ecx+0x7ea66dd3],mm5
  41ba68:	mov    BYTE PTR [edi+0x4],dl
  41ba6b:	shr    DWORD PTR [edi],0x40
  41ba6e:	call   edi
  41ba70:	xchg   DWORD PTR [edx],esi
  41ba72:	push   cs
  41ba73:	inc    eax
  41ba74:	add    al,0x1c
  41ba76:	aad    0x69
  41ba78:	mov    al,ds:0x1439146b
  41ba7d:	into   
  41ba7e:	mov    esi,0x7276b7d6
  41ba83:	icebp  
  41ba84:	(bad)
  41ba87:	or     edi,esp
  41ba89:	adc    bl,bl
  41ba8b:	xor    ch,bh
  41ba8d:	jg     0x41ba5f
  41ba8f:	ret    
  41ba90:	add    al,0x23
  41ba92:	(bad)  
  41ba93:	pop    ds
  41ba94:	stc    
  41ba95:	int3   
  41ba96:	gs (bad) 
  41ba98:	push   esp
  41ba99:	bound  edi,QWORD PTR [ecx-0x33]
  41ba9c:	mov    ds:0x3fef635d,al
  41baa1:	cmp    ch,BYTE PTR [ebp-0x46]
  41baa4:	scas   al,BYTE PTR es:[edi]
  41baa5:	(bad)
  41baa9:	test   BYTE PTR [edi+0x5f],bl
  41baac:	jp     0x41bab0
  41baae:	ret    
  41baaf:	fisttp QWORD PTR [eax+0x6a]
  41bab2:	fcmove st,st(1)
  41bab4:	push   edx
  41bab5:	ds je  0x41ba99
  41bab8:	pop    ds
  41bab9:	adc    al,0x14
  41babb:	jmp    0xf733:0x8c27c6a4
  41bac2:	mov    cl,dl
  41bac4:	scas   eax,DWORD PTR es:[edi]
  41bac5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bac6:	and    BYTE PTR [ebx-0x54],dh
  41bac9:	dec    edx
  41baca:	lahf   
  41bacb:	enter  0x73ab,0x67
  41bacf:	daa    
  41bad0:	pop    ebp
  41bad1:	and    al,0x99
  41bad3:	jnp    0x41babc
  41bad5:	cmc    
  41bad6:	sbb    eax,DWORD PTR [esi-0x4106ed55]
  41badc:	outs   dx,BYTE PTR ds:[esi]
  41badd:	ret    
  41bade:	pop    esp
  41badf:	cmp    dl,cl
  41bae1:	ds je  0x41bb36
  41bae4:	and    esi,edx
  41bae6:	rcl    BYTE PTR [ecx],0xdf
  41bae9:	push   ebp
  41baea:	icebp  
  41baeb:	imul   esp,DWORD PTR [eax],0x6f131957
  41baf1:	push   es
  41baf2:	(bad)  
  41baf3:	jle    0x41bb57
  41baf5:	outs   dx,BYTE PTR ds:[esi]
  41baf6:	in     eax,dx
  41baf7:	test   eax,0xc5e61d55
  41bafc:	xor    ebp,DWORD PTR [ecx+0x6e]
  41baff:	mov    al,ds:0x8ec30246
  41bb04:	push   es
  41bb05:	mov    BYTE PTR [edx+0x35ec6a12],dl
  41bb0b:	repnz fld DWORD PTR [ebx+ebx*1+0x7357bdb3]
  41bb13:	test   DWORD PTR [ecx+0x6d],eax
  41bb16:	push   eax
  41bb17:	outs   dx,DWORD PTR ds:[esi]
  41bb18:	push   edx
  41bb19:	sub    esp,DWORD PTR [ecx+edi*2]
  41bb1c:	mov    esi,0x8fa2e20d
  41bb21:	dec    ebp
  41bb22:	push   cs
  41bb23:	push   0x2f3a449b
  41bb28:	sar    BYTE PTR [edx-0x5bd7e7f4],0x4f
  41bb2f:	add    BYTE PTR [ebx-0x452e996b],ch
  41bb35:	scas   al,BYTE PTR es:[edi]
  41bb36:	xchg   esi,eax
  41bb37:	push   0xffffffef
  41bb39:	les    edi,FWORD PTR [edi+0x36]
  41bb3c:	pop    edi
  41bb3d:	mov    BYTE PTR [ebp+0x67],dl
  41bb40:	cmp    eax,esp
  41bb42:	pop    esp
  41bb43:	pop    esp
  41bb44:	mov    bl,0x2
  41bb46:	mov    al,0xb8
  41bb48:	popf   
  41bb49:	xor    DWORD PTR [edi+0x1a03a31a],0x21
  41bb50:	fstp   st(6)
  41bb52:	jnp    0x41baf7
  41bb54:	add    eax,0xce84626d
  41bb59:	sbb    al,0xba
  41bb5b:	xchg   esp,eax
  41bb5c:	mov    ah,0x9f
  41bb5e:	stos   BYTE PTR es:[edi],al
  41bb5f:	cmp    eax,0xc0cb08a5
  41bb64:	call   0xcb7b:0x97b91e24
  41bb6b:	lds    ecx,FWORD PTR [edx+0x1e]
  41bb6e:	sbb    BYTE PTR [eax+0x4a],cl
  41bb71:	enter  0x51e1,0x19
  41bb75:	jmp    0x27b4:0x45ef4096
  41bb7c:	sbb    cl,cl
  41bb7e:	outs   dx,DWORD PTR ds:[esi]
  41bb7f:	pop    edx
  41bb80:	fcomp  QWORD PTR [edi-0x725df3a9]
  41bb86:	scas   eax,DWORD PTR es:[edi]
  41bb87:	lahf   
  41bb88:	out    dx,al
  41bb89:	mov    BYTE PTR [esi],dh
  41bb8b:	std    
  41bb8c:	mov    esp,0xe7d27b1a
  41bb91:	sar    esi,cl
  41bb93:	hlt    
  41bb94:	nop
  41bb95:	xor    eax,0xee647185
  41bb9a:	les    eax,FWORD PTR [edi+0x1cf9ed8b]
  41bba0:	sub    DWORD PTR [ebp+ecx*8-0x5b],edx
  41bba4:	cmp    eax,0x38f8b609
  41bba9:	mov    WORD PTR [edi-0x35],ss
  41bbac:	xchg   esi,eax
  41bbad:	sbb    ah,BYTE PTR [ebx-0x42e23eaf]
  41bbb3:	clc    
  41bbb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbb5:	(bad)  
  41bbb6:	mov    ch,0xf8
  41bbb8:	popf   
  41bbb9:	and    DWORD PTR es:[edx],ebx
  41bbbc:	test   DWORD PTR [ecx-0x65],edx
  41bbbf:	or     al,0x4e
  41bbc1:	pop    ebp
  41bbc2:	retf   
  41bbc3:	ret    0x1cab
  41bbc6:	mov    edi,0xa2fcfed8
  41bbcb:	mov    DWORD PTR [ebp+0x77],edi
  41bbce:	ret    
  41bbcf:	sbb    BYTE PTR [eax+0x71],cl
  41bbd2:	mov    es,ebp
  41bbd4:	sar    BYTE PTR [ecx+0x5bc7bd43],1
  41bbda:	push   0x2408bb38
  41bbdf:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbe1:	cmp    bl,BYTE PTR [ecx+0x1a9c563a]
  41bbe7:	xlat   BYTE PTR ds:[ebx]
  41bbe8:	jae    0x41bc56
  41bbea:	es ins BYTE PTR es:[edi],dx
  41bbec:	aas    
  41bbed:	or     dl,cl
  41bbef:	pop    esp
  41bbf0:	xchg   ebp,eax
  41bbf1:	dec    esi
  41bbf2:	inc    ebx
  41bbf3:	and    BYTE PTR [ecx],0xa3
  41bbf6:	nop
  41bbf7:	mov    ds:0xa0543c9f,eax
  41bbfc:	pop    ss
  41bbfd:	sahf   
  41bbfe:	push   eax
  41bbff:	hlt    
  41bc00:	loope  0x41bbd4
  41bc02:	lea    ebp,[ebx-0x2b]
  41bc05:	mov    cl,BYTE PTR [ecx+ebx*2]
  41bc08:	push   0x66703e61
  41bc0d:	mov    edx,0x78cb5411
  41bc12:	mul    BYTE PTR ds:0x48ab4fa2
  41bc18:	mov    WORD PTR [ebx+0xac8893e],?
  41bc1e:	xor    al,0xdf
  41bc20:	out    dx,eax
  41bc21:	ficomp DWORD PTR [eax]
  41bc23:	push   es
  41bc24:	adc    eax,DWORD PTR [ecx+ecx*4-0x7f1271b2]
  41bc2b:	adc    edi,DWORD PTR [esi+0x3a]
  41bc2e:	xlat   BYTE PTR ds:[ebx]
  41bc2f:	mov    ebp,0xd5e33fce
  41bc34:	adc    BYTE PTR [esi],bh
  41bc36:	pop    edx
  41bc37:	(bad)  
  41bc38:	and    BYTE PTR [edi+0x6d],bl
  41bc3b:	inc    eax
  41bc3c:	dec    edx
  41bc3d:	push   ebx
  41bc3e:	retf   
  41bc3f:	push   edi
  41bc40:	xor    ebp,0x2b42aabf
  41bc46:	cmc    
  41bc47:	pushf  
  41bc48:	outs   dx,DWORD PTR ds:[esi]
  41bc49:	mov    WORD PTR [esi+0x7be2a060],cs
  41bc4f:	xchg   bx,ax
  41bc51:	add    eax,0x48e8bde1
  41bc56:	mov    ecx,0x7d8ff866
  41bc5b:	cmp    dh,BYTE PTR [edx+0x11]
  41bc5e:	xchg   edx,eax
  41bc5f:	jmp    0xc134:0xa845b8f4
  41bc66:	pop    ebx
  41bc67:	stc    
  41bc68:	xlat   BYTE PTR ds:[ebx]
  41bc69:	cmp    eax,0xd070ea20
  41bc6e:	xor    ah,BYTE PTR [edx-0x3c]
  41bc71:	jnp    0x41bcbf
  41bc73:	sub    esi,DWORD PTR [ecx]
  41bc75:	aas    
  41bc76:	xchg   BYTE PTR [edi+0x79],ah
  41bc79:	xor    esi,DWORD PTR [ecx]
  41bc7b:	cmovl  ebx,DWORD PTR ds:0xf1894d7e
  41bc82:	add    bh,BYTE PTR [ecx]
  41bc84:	rol    BYTE PTR [edi-0x36f7dcae],cl
  41bc8a:	adc    BYTE PTR [ebx],bl
  41bc8c:	and    DWORD PTR [edx],edi
  41bc8e:	ins    DWORD PTR es:[edi],dx
  41bc8f:	and    BYTE PTR [esi+0x251d319e],ah
  41bc95:	stos   DWORD PTR es:[edi],eax
  41bc96:	push   0x72bec4d4
  41bc9b:	ds ret 0x2134
  41bc9f:	es (bad) 
  41bca2:	lock mov edi,0x82e77e74
  41bca8:	push   ss
  41bca9:	dec    ecx
  41bcaa:	pop    ecx
  41bcab:	(bad)  
  41bcac:	mov    ebp,0x170ba052
  41bcb1:	dec    esp
  41bcb2:	jmp    0x41bccc
  41bcb4:	add    esp,DWORD PTR [ebx+esi*4]
  41bcb7:	stc    
  41bcb8:	enter  0xf40,0xad
  41bcbc:	xor    eax,0x80cea527
  41bcc1:	(bad)  
  41bcc2:	adc    al,0x3f
  41bcc4:	jle    0x41bd0c
  41bcc6:	jp     0x41bc72
  41bcc8:	std    
  41bcc9:	dec    esi
  41bcca:	push   ebx
  41bccb:	mov    edx,0xba52bb24
  41bcd0:	mov    BYTE PTR [ecx],0x93
  41bcd3:	xor    ebp,DWORD PTR [eax]
  41bcd5:	not    DWORD PTR [esi+0x15]
  41bcd8:	push   0x6a2720c9
  41bcdd:	mov    eax,0xd6914030
  41bce2:	jg     0x41bcb8
  41bce4:	icebp  
  41bce5:	inc    ebp
  41bce6:	dec    edi
  41bce8:	wbinvd 
  41bcea:	push   ebx
  41bceb:	cwde   
  41bcec:	mov    DWORD PTR fs:[edx-0x2c62cbc0],eax
  41bcf3:	sbb    BYTE PTR [esi],dl
  41bcf5:	jecxz  0x41bd4c
  41bcf7:	jb     0x41bcc5
  41bcf9:	jecxz  0x41bccd
  41bcfb:	daa    
  41bcfc:	sbb    eax,0xaff5b2dc
  41bd01:	jp     0x41bd42
  41bd03:	mov    esp,edx
  41bd05:	mov    bl,0xe
  41bd07:	pop    ebx
  41bd08:	imul   ebp,DWORD PTR [edx],0xffffffee
  41bd0b:	jmp    0x41bd61
  41bd0d:	inc    ebp
  41bd0e:	or     dl,BYTE PTR [eax+esi*1+0x22]
  41bd12:	jg     0x41bd20
  41bd14:	xor    eax,0x82803196
  41bd19:	rcr    BYTE PTR [eax-0x55],0xf1
  41bd1d:	sbb    edx,ebx
  41bd1f:	ret    
  41bd20:	shr    BYTE PTR [eax+ebx*4-0x24f02156],1
  41bd27:	(bad)  
  41bd28:	or     ebx,ebp
  41bd2a:	mov    esp,0x343ce4bb
  41bd2f:	ret    0xf0ce
  41bd32:	jecxz  0x41bd31
  41bd34:	push   ebp
  41bd35:	fbld   TBYTE PTR [esi-0xd1fdf43]
  41bd3b:	adc    al,0x8f
  41bd3d:	inc    edx
  41bd3e:	mov    esi,0xa73f374b
  41bd43:	into   
  41bd44:	pop    ebx
  41bd45:	out    0x67,eax
  41bd47:	push   es
  41bd48:	out    0x26,al
  41bd4a:	sti    
  41bd4b:	pop    esp
  41bd4c:	outs   dx,DWORD PTR ds:[esi]
  41bd4d:	inc    ebp
  41bd4e:	sub    eax,0x51daea41
  41bd53:	rol    BYTE PTR [edx+ecx*1+0x20],0x5c
  41bd58:	(bad)  
  41bd59:	push   esp
  41bd5a:	mov    ah,0x65
  41bd5c:	and    al,0x31
  41bd5e:	bnd jnp 0x16797ee5
  41bd65:	mov    DWORD PTR [edx-0x38437a9b],esp
  41bd6b:	lods   eax,DWORD PTR ds:[esi]
  41bd6c:	xchg   DWORD PTR [eax+eiz*2],esp
  41bd6f:	sbb    BYTE PTR [eax+0x38],bl
  41bd72:	data16 cmp BYTE PTR [esi+0x2e7d42ad],bh
  41bd79:	sub    eax,0x1cdf2803
  41bd7e:	lods   eax,DWORD PTR ds:[esi]
  41bd7f:	cdq    
  41bd80:	mov    ecx,0x7f19fc05
  41bd85:	fdivr  DWORD PTR [edi-0x312e2581]
  41bd8b:	mov    cl,0x51
  41bd8d:	aad    0x1
  41bd8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd90:	sahf   
  41bd91:	and    al,0xf5
  41bd93:	shl    BYTE PTR [esi],0x7f
  41bd96:	call   0x1ab0:0x67a26523
  41bd9d:	pop    ebx
  41bd9e:	jmp    0xeb30917c
  41bda3:	mov    WORD PTR [edi],es
  41bda5:	fyl2x  
  41bda7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bda8:	mov    bl,0xee
  41bdaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdab:	pop    eax
  41bdac:	sbb    edi,ebp
  41bdae:	mov    ebx,0x440ac647
  41bdb3:	inc    eax
  41bdb4:	int    0xf7
  41bdb6:	and    eax,0x79ad10ec
  41bdbb:	iret   
  41bdbc:	daa    
  41bdbd:	jo     0x41bd59
  41bdbf:	xor    ebx,DWORD PTR [edi+0x58cd8a45]
  41bdc5:	das    
  41bdc6:	jae    0x41bdd2
  41bdc8:	in     al,0x4
  41bdca:	mov    ebp,0x561c21ae
  41bdcf:	pop    ds
  41bdd0:	loop   0x41be50
  41bdd2:	enter  0x5ca8,0x6
  41bdd6:	mov    ah,0x8e
  41bdd8:	out    dx,al
  41bdd9:	or     eax,0xb812ae60
  41bdde:	int3   
  41bddf:	push   edx
  41bde0:	fsubr  DWORD PTR [edx]
  41bde2:	jns    0x41be1b
  41bde4:	cmp    edi,ebp
  41bde6:	(bad)  
  41bde7:	scas   al,BYTE PTR es:[edi]
  41bde8:	add    dl,bh
  41bdea:	adc    DWORD PTR [ebp-0x5],0x3b
  41bdee:	adc    eax,0xc79ab5eb
  41bdf3:	dec    eax
  41bdf4:	inc    ebx
  41bdf5:	mov    eax,0x99cf9f5d
  41bdfa:	pop    es
  41bdfb:	rol    esp,1
  41bdfd:	mov    WORD PTR ds:[edx-0x63ba61a9],ds
  41be04:	call   0xdb86:0xc21b4519
  41be0b:	pop    ecx
  41be0c:	jge    0x41bda8
  41be0e:	es test eax,0x75faf330
  41be14:	jne    0x41bddc
  41be16:	int3   
  41be17:	fst    DWORD PTR [edx-0x5b]
  41be1a:	mov    ds:0x3afa8d31,eax
  41be1f:	or     DWORD PTR [ebp+0x37e469ea],ebx
  41be25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be26:	dec    ebx
  41be27:	aam    0xfb
  41be29:	imul   ecx,DWORD PTR [edx],0x1c
  41be2c:	(bad)  
  41be2d:	aad    0x5a
  41be2f:	xor    esp,ebx
  41be31:	dec    ebx
  41be32:	sbb    al,BYTE PTR [ebx-0x128dea83]
  41be38:	pop    eax
  41be39:	and    cl,BYTE PTR [eax+0xda4654]
  41be3f:	jecxz  0x41be2d
  41be41:	push   ebp
  41be42:	jae    0x41be16
  41be44:	gs retf 0x1d67
  41be48:	into   
  41be49:	add    esp,edx
  41be4b:	jp     0x41be29
  41be4d:	jb     0x41be27
  41be4f:	add    edi,ebp
  41be51:	mov    ds:0xc97b056b,eax
  41be56:	pop    esp
  41be57:	jns    0x41beb3
  41be59:	xlat   BYTE PTR ds:[ebx]
  41be5a:	jbe    0x41be17
  41be5c:	and    al,0x28
  41be5e:	mov    dh,0x43
  41be60:	push   esi
  41be61:	(bad)  
  41be62:	xchg   ebx,eax
  41be63:	clc    
  41be64:	cmp    cl,dh
  41be66:	lock pop ecx
  41be68:	mul    BYTE PTR [esp+eax*2]
  41be6b:	inc    esp
  41be6c:	add    BYTE PTR ds:0xd6975055,bh
  41be72:	mov    ch,0x12
  41be74:	ret    0x6781
  41be77:	shl    BYTE PTR [edx],cl
  41be79:	add    eax,0x64b2eb4b
  41be7e:	es xchg ecx,eax
  41be80:	psubw  mm0,QWORD PTR cs:0x526aa3e5
  41be88:	gs mov ah,0xf0
  41be8b:	shl    DWORD PTR [edx-0x3022c2c4],1
  41be91:	pop    edx
  41be92:	rol    BYTE PTR [ebx-0x37],cl
  41be95:	enter  0x88a8,0xfb
  41be99:	dec    esp
  41be9a:	bound  esi,QWORD PTR [ecx+0x28eafb56]
  41bea0:	add    cl,BYTE PTR [ebx-0x2]
  41bea3:	adc    ebx,DWORD PTR [ebx]
  41bea5:	in     al,0xdd
  41bea7:	and    esi,DWORD PTR [ebp+0x5]
  41beaa:	shl    BYTE PTR [edi-0x5f182cf7],cl
  41beb0:	ror    esp,cl
  41beb2:	retf   0xffab
  41beb5:	inc    ebp
  41beb6:	leave  
  41beb7:	pop    ss
  41beb8:	or     eax,esi
  41beba:	cmp    al,0x14
  41bebc:	ret    
  41bebd:	and    DWORD PTR [eax+esi*2],0xffffffde
  41bec1:	inc    edx
  41bec2:	popf   
  41bec3:	xor    al,0x98
  41bec5:	xor    ch,BYTE PTR [esi-0x8]
  41bec8:	pop    edx
  41bec9:	cli    
  41beca:	stos   BYTE PTR es:[edi],al
  41becb:	fst    DWORD PTR [edi]
  41becd:	dec    ebx
  41bece:	enter  0x7da9,0x44
  41bed2:	pop    ds
  41bed3:	xchg   esp,eax
  41bed4:	or     eax,esp
  41bed6:	or     dl,dh
  41bed8:	cmp    edi,DWORD PTR [esi]
  41beda:	mov    dh,0xeb
  41bedc:	mov    eax,ds:0x52f9fb61
  41bee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bee2:	pop    esp
  41bee3:	fmul   QWORD PTR [eax]
  41bee5:	out    0x40,al
  41bee7:	sbb    eax,0xee5dbf15
  41beec:	repz sbb esi,DWORD PTR [edi+edi*1+0x13]
  41bef1:	inc    edi
  41bef2:	imul   edx,DWORD PTR [esi],0x137fd4f
  41bef8:	add    al,bh
  41befa:	add    al,0x0
  41befc:	add    BYTE PTR [edi+0x5a],bl
  41beff:	rol    cl,1
  41bf01:	mov    ds:0x1e287338,eax
  41bf06:	add    eax,ecx
  41bf08:	pop    ebx
  41bf09:	stc    
  41bf0a:	and    al,0xfd
  41bf0c:	jmp    0x527d3962
  41bf11:	jae    0x41bf6a
  41bf13:	mov    al,0xbe
  41bf15:	stc    
  41bf16:	mov    ecx,0x33d1f3bf
  41bf1b:	sbb    bh,BYTE PTR ds:0x8430973e
  41bf21:	pop    esp
  41bf22:	jae    0x41bf39
  41bf24:	push   edi
  41bf25:	sti    
  41bf26:	xchg   ebx,eax
  41bf27:	clc    
  41bf28:	adc    eax,DWORD PTR [bp+si+0x67da]
  41bf2d:	das    
  41bf2e:	mov    DWORD PTR [edi+0x4],esp
  41bf31:	pusha  
  41bf32:	out    dx,eax
  41bf33:	pop    ebp
  41bf34:	sti    
  41bf35:	cs push 0x7d3cdce3
  41bf3b:	mov    bl,0xbc
  41bf3d:	ins    BYTE PTR es:[edi],dx
  41bf3e:	ss mov cl,0xdb
  41bf41:	in     al,0x4a
  41bf43:	test   eax,0x30993682
  41bf48:	add    DWORD PTR [ebp+0x27],edx
  41bf4b:	adc    DWORD PTR [ebp+0x7779f89f],edi
  41bf51:	(bad)  
  41bf52:	icebp  
  41bf53:	mov    edx,0x6205c290
  41bf58:	lds    ebp,FWORD PTR [edi-0x553d6fdb]
  41bf5e:	mov    ch,0x4e
  41bf60:	and    ecx,esp
  41bf62:	xchg   ebp,eax
  41bf63:	push   eax
  41bf64:	test   BYTE PTR [ecx-0x11ce07eb],ah
  41bf6a:	push   ebx
  41bf6b:	in     eax,0x4f
  41bf6d:	xchg   esp,eax
  41bf6e:	mov    eax,0xb82fa77a
  41bf73:	dec    ebp
  41bf74:	pop    es
  41bf75:	mov    dh,0xc8
  41bf77:	xor    edx,DWORD PTR [ebp+0x686220ac]
  41bf7d:	and    eax,0xac04844a
  41bf82:	fstp   TBYTE PTR [esi+0x44c6027e]
  41bf88:	mov    edi,0x571646c1
  41bf8d:	mov    WORD PTR [eax+0x7a],fs
  41bf90:	mov    dh,0x39
  41bf92:	jp     0x41bf26
  41bf94:	ror    esp,0x90
  41bf97:	in     eax,0xae
  41bf99:	mov    ebp,0x9e44331a
  41bf9e:	cld    
  41bf9f:	xchg   ebp,eax
  41bfa0:	sbb    cl,BYTE PTR [esi+0x3527a37]
  41bfa6:	scas   eax,DWORD PTR es:[edi]
  41bfa7:	inc    edx
  41bfa8:	loope  0x41bf4a
  41bfaa:	add    BYTE PTR [edi],bl
  41bfac:	or     esi,DWORD PTR [ebp-0x526c4f5c]
  41bfb2:	ss jecxz 0x41bf3c
  41bfb5:	lahf   
  41bfb6:	in     al,0x12
  41bfb8:	inc    eax
  41bfb9:	cmc    
  41bfba:	sub    dh,cl
  41bfbc:	out    dx,al
  41bfbd:	and    eax,0x3c5f8237
  41bfc2:	adc    al,0xbd
  41bfc4:	imul   edx,DWORD PTR [ebp+0x49a00883],0xffffff86
  41bfcb:	fcomp  st(6)
  41bfcd:	push   ebp
  41bfce:	test   DWORD PTR [edx-0x50],esi
  41bfd1:	ins    DWORD PTR es:[edi],dx
  41bfd2:	fbstp  TBYTE PTR [edx+edi*8-0x71a4899f]
  41bfd9:	call   0xb0a1b60b
  41bfde:	popf   
  41bfdf:	retf   0x1b98
  41bfe2:	repz fst QWORD PTR [edi-0x1fa2d22f]
  41bfe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfeb:	test   ah,bh
  41bfed:	stos   BYTE PTR es:[edi],al
  41bfee:	test   cl,bh
  41bff0:	xor    ebx,DWORD PTR [esi-0x4747b38c]
  41bff6:	daa    
  41bff7:	and    ebp,ecx
  41bff9:	lahf   
  41bffa:	das    
  41bffb:	mov    ecx,eax
  41bffd:	cdq    
  41bffe:	scas   eax,DWORD PTR es:[edi]
  41bfff:	adc    bh,BYTE PTR [eax+0x74dc6422]
  41c005:	lods   al,BYTE PTR ds:[esi]
  41c006:	mov    ah,0xb7
  41c008:	ss ins BYTE PTR es:[edi],dx
  41c00a:	xor    BYTE PTR [esi+0x8],0xa0
  41c00e:	les    edi,FWORD PTR ds:0xdebf8ebf
  41c014:	call   0x2a0a:0x632f9216
  41c01b:	mov    edi,ecx
  41c01d:	jne    0x41bfe6
  41c01f:	and    al,BYTE PTR [esp+edx*2+0x37]
  41c023:	retf   0x3b9c
  41c026:	add    bl,BYTE PTR [ecx+0x78]
  41c029:	mov    bl,0x85
  41c02b:	daa    
  41c02c:	shl    BYTE PTR [ebx],cl
  41c02e:	ja     0x41c038
  41c030:	xor    DWORD PTR [ebx+ebp*8-0x56],0x55
  41c035:	mov    dl,BYTE PTR [ebp+0x57]
  41c038:	rcl    esi,0x79
  41c03b:	popa   
  41c03c:	sub    al,0x6f
  41c03e:	sbb    bl,dh
  41c040:	pushf  
  41c041:	lahf   
  41c042:	push   ds
  41c043:	xchg   ebx,eax
  41c044:	lods   al,BYTE PTR ds:[esi]
  41c045:	push   ss
  41c046:	jp     0x41c021
  41c048:	test   BYTE PTR [ecx-0x5a7640a7],dl
  41c04e:	jl     0x41c004
  41c050:	and    DWORD PTR [edi-0x2edf6a2f],esp
  41c056:	stc    
  41c057:	sbb    al,0xcd
  41c059:	sahf   
  41c05a:	in     eax,dx
  41c05b:	arpl   WORD PTR [eax+0x58],dx
  41c05e:	adc    cl,ch
  41c060:	push   ebp
  41c061:	call   0xc42288b7
  41c066:	mov    ds:0xcf9fc688,al
  41c06b:	iret   
  41c06c:	xchg   ebp,eax
  41c06d:	fdivr  DWORD PTR [ebx-0x28ace6c1]
  41c073:	pop    DWORD PTR [edi+ebp*2+0xf]
  41c077:	push   eax
  41c078:	sub    cl,cl
  41c07a:	xchg   esp,eax
  41c07b:	pop    ss
  41c07c:	test   BYTE PTR [ebx+0x4fd93783],bl
  41c082:	add    esp,DWORD PTR [eax]
  41c084:	xchg   edx,eax
  41c085:	cmp    eax,ecx
  41c087:	xchg   ebp,eax
  41c088:	out    dx,eax
  41c089:	in     al,dx
  41c08a:	pop    ecx
  41c08b:	enter  0x6cd0,0x9
  41c08f:	or     eax,0xa12d66fa
  41c094:	sbb    BYTE PTR [edi],bl
  41c096:	mov    ebp,0x8a2d603b
  41c09b:	out    dx,al
  41c09c:	sub    al,0x3e
  41c09e:	cs or  ch,0xe6
  41c0a2:	pop    esi
  41c0a3:	mov    DWORD PTR [esi],edx
  41c0a5:	push   0x6ec877b5
  41c0aa:	jbe    0x41c08a
  41c0ac:	fcomp  QWORD PTR [edx+0x60]
  41c0af:	xlat   BYTE PTR ds:[ebx]
  41c0b0:	fwait
  41c0b1:	test   eax,0x8ced44f6
  41c0b6:	out    dx,eax
  41c0b7:	pop    esi
  41c0b8:	push   edi
  41c0b9:	int3   
  41c0ba:	ret    0x2842
  41c0bd:	xor    BYTE PTR [eax+ebp*4],dh
  41c0c0:	arpl   WORD PTR [edx],ax
  41c0c2:	(bad)  
  41c0c3:	mov    BYTE PTR [ecx],ah
  41c0c5:	jb     0x41c056
  41c0c7:	cs mov edi,0x2b17c316
  41c0cd:	call   0xed74:0x54728e9d
  41c0d4:	mov    dh,0x2
  41c0d6:	inc    edx
  41c0d7:	mov    ebp,0x98383ec3
  41c0dc:	sbb    eax,0x7185c3d9
  41c0e1:	sub    cl,BYTE PTR ds:0xdd1266ce
  41c0e7:	hlt    
  41c0e8:	or     DWORD PTR [edx],eax
  41c0ea:	jne    0x41c11f
  41c0ec:	fwait
  41c0ed:	lea    edx,[esi-0x29]
  41c0f0:	(bad)  
  41c0f2:	mov    edi,0xf09d0973
  41c0f7:	pop    ecx
  41c0f8:	jg     0x41c0a8
  41c0fa:	test   BYTE PTR [ebp-0x52ce19e0],dh
  41c100:	xchg   esp,eax
  41c101:	xchg   ecx,eax
  41c102:	imul   ecx,DWORD PTR [esi-0x3061477a],0xffffffbc
  41c109:	mov    dl,0xd2
  41c10b:	ret    0x75c
  41c10e:	in     al,0x71
  41c110:	sbb    BYTE PTR [edi+0x9],dh
  41c113:	outs   dx,BYTE PTR ds:[esi]
  41c114:	sub    esp,DWORD PTR [edi+0x5e473cf7]
  41c11a:	cmp    DWORD PTR [eax],0x3
  41c11d:	xchg   esi,eax
  41c11e:	rcr    BYTE PTR [ebp+0xba88661],cl
  41c124:	in     eax,0xaa
  41c126:	jp     0x41c0d5
  41c128:	xchg   ebp,eax
  41c129:	push   ecx
  41c12a:	mov    ds:0x80643b84,eax
  41c12f:	adc    DWORD PTR [edi],edx
  41c131:	push   0x7f
  41c133:	aaa    
  41c134:	mov    esi,0x137ddb8c
  41c139:	popa   
  41c13a:	test   al,0x3d
  41c13c:	es into 
  41c13e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c13f:	jns    0x41c196
  41c141:	push   ss
  41c142:	icebp  
  41c143:	bsf    esp,DWORD PTR [ebp-0x54cb3893]
  41c14a:	stc    
  41c14b:	inc    ebx
  41c14c:	jge    0x41c167
  41c14e:	call   0x2fe1cbaf
  41c153:	pop    ebx
  41c154:	in     eax,0xfa
  41c156:	sbb    eax,0x6c2f072e
  41c15b:	icebp  
  41c15c:	mov    ch,0xef
  41c15e:	mov    ah,0x31
  41c160:	pop    eax
  41c161:	mov    ch,0x74
  41c163:	jmp    0x41c1d4
  41c165:	add    eax,0xeca66755
  41c16a:	loop   0x41c1ad
  41c16c:	adc    eax,0x265204a4
  41c171:	dec    esi
  41c172:	push   es
  41c173:	pop    edx
  41c174:	(bad)  
  41c175:	or     DWORD PTR [eax+ecx*8-0x51],0xf494f071
  41c17d:	mov    ds:0x56698426,eax
  41c182:	mov    ds:0xdcd58b19,al
  41c187:	(bad)  
  41c188:	xchg   edi,eax
  41c189:	push   ecx
  41c18a:	mov    ss,WORD PTR [edi+0x6e9b1069]
  41c190:	sub    esi,esp
  41c192:	ret    
  41c193:	in     al,0x91
  41c195:	push   ebx
  41c196:	xor    eax,0x263503ee
  41c19b:	ja     0x41c189
  41c19d:	dec    edx
  41c19e:	int    0x12
  41c1a0:	sub    DWORD PTR [ecx+0x24eb380c],esi
  41c1a6:	rcl    BYTE PTR [ecx-0x7f49bbe0],0xb
  41c1ad:	fnstcw WORD PTR [edi]
  41c1af:	fmul   st(6),st
  41c1b1:	adc    al,BYTE PTR [eax-0x1a9be76e]
  41c1b7:	mov    ds:0xdb858b9d,al
  41c1bc:	jp     0x41c14b
  41c1be:	scas   al,BYTE PTR es:[edi]
  41c1bf:	mov    WORD PTR [eax+0x75],gs
  41c1c2:	and    bl,BYTE PTR [ecx]
  41c1c4:	dec    edi
  41c1c5:	aad    0x68
  41c1c7:	dec    ebp
  41c1c8:	fs retf 
  41c1ca:	clc    
  41c1cb:	pop    edx
  41c1cc:	mov    ds:0x6d8c7c5d,eax
  41c1d1:	xor    al,0x7b
  41c1d3:	push   0x1330828c
  41c1d8:	push   ebp
  41c1d9:	cwde   
  41c1da:	test   al,0xe4
  41c1dc:	sbb    al,ah
  41c1de:	mov    WORD PTR [ecx-0x7b3c58ae],es
  41c1e4:	or     esp,DWORD PTR [ebp-0x4b]
  41c1e7:	aas    
  41c1e8:	pop    esp
  41c1e9:	jmp    0x41c1b6
  41c1eb:	push   ds
  41c1ec:	pop    edx
  41c1ed:	mov    esp,0xfeb16087
  41c1f2:	test   DWORD PTR [ebx+edi*8+0x37],ebp
  41c1f6:	imul   ebp,DWORD PTR [ecx],0x715dda02
  41c1fc:	ins    BYTE PTR es:[edi],dx
  41c1fd:	stos   DWORD PTR es:[edi],eax
  41c1fe:	inc    esi
  41c1ff:	jmp    0xe729bcc6
  41c204:	push   ebx
  41c205:	push   ebp
  41c206:	mov    ebx,DWORD PTR [edi]
  41c208:	mov    BYTE PTR [esi],bh
  41c20a:	out    0x1a,eax
  41c20c:	fdivr  QWORD PTR [edx+0x0]
  41c20f:	cwde   
  41c210:	retf   
  41c211:	inc    eax
  41c212:	inc    edx
  41c213:	and    al,0x68
  41c215:	(bad)  [ecx-0x416a98b9]
  41c21b:	scas   al,BYTE PTR es:[edi]
  41c21c:	into   
  41c21d:	ins    BYTE PTR es:[edi],dx
  41c21e:	into   
  41c21f:	xchg   BYTE PTR [ebx-0x48],bl
  41c222:	sub    DWORD PTR [esi],ebx
  41c224:	(bad)  
  41c225:	jnp    0x41c274
  41c227:	in     al,0x5b
  41c229:	mov    ch,0xb3
  41c22b:	cld    
  41c22c:	jae    0x41c24e
  41c22e:	out    0xed,eax
  41c230:	inc    eax
  41c231:	gs xchg ebx,eax
  41c233:	test   BYTE PTR [edi+0xc],ah
  41c236:	sbb    bh,BYTE PTR ds:0xda282a71
  41c23c:	sub    al,0xe6
  41c23e:	dec    eax
  41c23f:	cdq    
  41c240:	dec    ebx
  41c241:	popa   
  41c242:	sub    dh,bl
  41c244:	inc    esp
  41c245:	push   eax
  41c246:	in     eax,0x1a
  41c248:	aas    
  41c249:	cmp    eax,0xc5fad430
  41c24e:	(bad)
  41c251:	loope  0x41c1ef
  41c253:	hlt    
  41c254:	div    BYTE PTR [ebx-0x3420974b]
  41c25a:	mov    dh,ah
  41c25c:	add    eax,DWORD PTR [esi-0x76986e2f]
  41c262:	mov    esp,0x24232f18
  41c267:	std    
  41c268:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41c26a:	mov    ebp,0x9d0190e5
  41c26f:	aam    0x99
  41c271:	mov    eax,ds:0xab33ff31
  41c276:	cs add eax,esp
  41c279:	inc    edi
  41c27a:	mov    dh,0x21
  41c27c:	gs dec ebx
  41c27e:	call   0xd465e70f
  41c283:	jno    0x41c27a
  41c285:	pop    ds
  41c286:	imul   ebx,esp,0xffffffec
  41c289:	inc    edx
  41c28a:	mov    esp,0xade01d98
  41c28f:	(bad)  
  41c290:	ds jl  0x41c242
  41c293:	ret    0xb1c7
  41c296:	rcr    al,0x6e
  41c299:	jle    0x41c316
  41c29b:	jb     0x41c302
  41c29d:	mov    ?,esi
  41c29f:	cmp    al,0x4b
  41c2a1:	ret    0x71b
  41c2a4:	push   ebx
  41c2a5:	clc    
  41c2a6:	inc    esp
  41c2a7:	push   0xffffffc3
  41c2a9:	out    0xdf,eax
  41c2ab:	call   0x437c:0xa1c2f688
  41c2b2:	pop    eax
  41c2b3:	sub    DWORD PTR [edi-0x5a4fa0dc],ebx
  41c2b9:	xor    eax,0xfab2ac1f
  41c2be:	inc    edx
  41c2bf:	mov    dh,0x1a
  41c2c1:	ins    DWORD PTR es:[edi],dx
  41c2c2:	sbb    al,BYTE PTR [ecx-0xc]
  41c2c5:	or     cl,BYTE PTR [esi-0x51528f1a]
  41c2cb:	out    dx,eax
  41c2cc:	sbb    eax,ebp
  41c2ce:	pop    esi
  41c2cf:	in     al,dx
  41c2d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2d1:	(bad)
  41c2d5:	fdiv   st,st(4)
  41c2d7:	cmp    BYTE PTR [edx],cl
  41c2d9:	sub    edi,DWORD PTR [esi+edx*8-0x3fa7c4aa]
  41c2e0:	pop    esp
  41c2e1:	imul   edi,edx,0x1b
  41c2e4:	pop    ebp
  41c2e5:	pop    es
  41c2e6:	add    al,BYTE PTR [eax]
  41c2e8:	adc    al,0xa7
  41c2ea:	sbb    edx,edi
  41c2ec:	cdq    
  41c2ed:	xchg   esp,eax
  41c2ee:	mov    bl,dl
  41c2f0:	jmp    0x41c31f
  41c2f2:	sub    al,0x5
  41c2f4:	sub    edx,DWORD PTR [ecx-0x38fdc5ac]
  41c2fa:	loopne 0x41c2c5
  41c2fc:	es mul edi
  41c2ff:	enter  0xbbbb,0x5
  41c303:	mov    esp,DWORD PTR ds:0xf296bb81
  41c309:	call   0xd8986724
  41c30e:	dec    ebx
  41c30f:	sub    bh,bl
  41c311:	sub    al,0x22
  41c313:	ins    DWORD PTR es:[edi],dx
  41c314:	stos   DWORD PTR es:[edi],eax
  41c315:	xchg   esi,eax
  41c316:	stos   DWORD PTR es:[edi],eax
  41c317:	test   al,0x48
  41c319:	push   es
  41c31a:	mov    esi,0x279c4911
  41c31f:	and    eax,0x32244ebe
  41c324:	clc    
  41c325:	dec    eax
  41c326:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c327:	jle    0x41c338
  41c329:	add    DWORD PTR [eax+0x4c361542],esi
  41c32f:	mov    ds:0x8847ee86,eax
  41c334:	push   edi
  41c335:	scas   al,BYTE PTR es:[edi]
  41c336:	aam    0x6c
  41c338:	or     eax,0x98593c8d
  41c33d:	aad    0xe7
  41c33f:	inc    esp
  41c340:	pop    edx
  41c341:	stc    
  41c342:	mov    edi,DWORD PTR [edx+edx*1-0x5ab22470]
  41c349:	arpl   WORD PTR [eax],cx
  41c34b:	inc    ebp
  41c34c:	push   cs
  41c34d:	jno    0x41c3cb
  41c34f:	add    eax,0x5ebf32bb
  41c354:	jbe    0x41c3c3
  41c356:	in     al,dx
  41c357:	cdq    
  41c358:	(bad)  
  41c359:	aad    0xfa
  41c35b:	popa   
  41c35c:	jo     0x41c3b2
  41c35e:	(bad)  
  41c35f:	pop    ecx
  41c360:	dec    ebp
  41c361:	sub    BYTE PTR [edx+0x6c],bl
  41c364:	repz (bad) 
  41c366:	cmp    BYTE PTR [ebp-0x56152a31],bl
  41c36c:	popf   
  41c36d:	fsub   st,st(1)
  41c36f:	rol    DWORD PTR [ebx],0x28
  41c372:	test   BYTE PTR [ebp-0x69aba3b0],cl
  41c378:	les    edi,FWORD PTR [ecx]
  41c37a:	rcl    DWORD PTR [edi+ecx*4],0x47
  41c37e:	fld    DWORD PTR [edx+0xb15e6b6]
  41c384:	pop    es
  41c385:	add    DWORD PTR [ebx],esp
  41c387:	push   0x3e
  41c389:	js     0x41c3a8
  41c38b:	xchg   ebp,eax
  41c38c:	lds    edi,FWORD PTR [ecx]
  41c38e:	popa   
  41c38f:	into   
  41c390:	push   eax
  41c391:	add    eax,0x866199ef
  41c396:	xor    edx,edi
  41c398:	out    dx,eax
  41c399:	std    
  41c39a:	adc    al,0x5f
  41c39c:	add    cl,dl
  41c39e:	scas   al,BYTE PTR es:[edi]
  41c39f:	call   0x94fc:0xfee53ad8
  41c3a6:	cwde   
  41c3a7:	fwait
  41c3a8:	sub    BYTE PTR [ebx-0x56],ah
  41c3ab:	xchg   edi,eax
  41c3ac:	inc    eax
  41c3ad:	xor    dh,BYTE PTR [ebx+0x6b]
  41c3b0:	out    0x6a,eax
  41c3b2:	lods   al,BYTE PTR ds:[esi]
  41c3b3:	test   DWORD PTR [ebx],ecx
  41c3b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3b6:	stos   BYTE PTR es:[edi],al
  41c3b7:	jl     0x41c378
  41c3b9:	popa   
  41c3ba:	jmp    0xa778:0x9fbef573
  41c3c1:	jno    0x41c43e
  41c3c3:	pop    ebp
  41c3c4:	adc    eax,0xd5b9628
  41c3c9:	dec    esi
  41c3ca:	idiv   BYTE PTR fs:[ebp-0x36]
  41c3ce:	test   al,0x92
  41c3d0:	sbb    edi,esp
  41c3d2:	jge    0x41c439
  41c3d4:	cwde   
  41c3d5:	popf   
  41c3d6:	add    DWORD PTR [ebx],0x7f8d882a
  41c3dc:	xchg   esi,eax
  41c3dd:	arpl   bx,sp
  41c3df:	push   0x9bfe5a8d
  41c3e4:	and    eax,0x1985136d
  41c3e9:	aam    0xb
  41c3eb:	mov    ds:0x59aa06fa,eax
  41c3f0:	stc    
  41c3f1:	pop    ecx
  41c3f2:	adc    eax,0x3ab6ad7a
  41c3f7:	out    0x1,eax
  41c3f9:	out    dx,eax
  41c3fa:	(bad)  
  41c3fc:	mov    edi,0x745d8fe9
  41c401:	xchg   ebx,eax
  41c402:	sbb    cl,BYTE PTR [eax+0x50]
  41c405:	cmc    
  41c406:	cmp    al,0x1
  41c408:	add    al,bh
  41c40a:	add    al,0x0
  41c40c:	add    bl,al
  41c40e:	scas   al,BYTE PTR es:[edi]
  41c40f:	retf   
  41c410:	xchg   ebp,eax
  41c411:	and    esi,DWORD PTR [ecx]
  41c413:	pop    esi
  41c414:	in     eax,dx
  41c415:	adc    DWORD PTR [esi-0x87ddb6a],edi
  41c41b:	test   DWORD PTR [ebp-0xce83d68],edx
  41c421:	nop
  41c422:	mov    ah,0xbe
  41c424:	lods   al,BYTE PTR ds:[esi]
  41c425:	push   es
  41c426:	xor    eax,DWORD PTR [ebx+0x42]
  41c429:	stos   BYTE PTR es:[edi],al
  41c42a:	dec    esp
  41c42b:	lds    ecx,FWORD PTR [eax]
  41c42d:	xor    eax,0xdab5dd94
  41c432:	mov    ah,0xb1
  41c434:	sub    bl,BYTE PTR [ebx-0x75149345]
  41c43a:	stos   BYTE PTR es:[edi],al
  41c43b:	pop    es
  41c43c:	hlt    
  41c43d:	adc    DWORD PTR ds:0xeb642be1,esi
  41c443:	add    ch,ch
  41c445:	jns    0x41c489
  41c447:	xchg   edi,eax
  41c448:	pop    esp
  41c449:	mov    edi,0x13c429ae
  41c44e:	mov    ecx,edi
  41c450:	(bad)  
  41c451:	add    BYTE PTR ds:[eax+0x2020f296],dl
  41c458:	inc    ebx
  41c459:	repnz push ebp
  41c45b:	adc    eax,0x4a97742e
  41c460:	mov    edi,0x9411f401
  41c465:	mov    edi,DWORD PTR [esp+eax*8]
  41c468:	mov    edx,0x9fd19c18
  41c46d:	xchg   bh,ch
  41c46f:	js     0x41c476
  41c471:	nop
  41c472:	mov    bl,0x56
  41c474:	(bad)  
  41c475:	adc    eax,0xc776235b
  41c47a:	mov    esp,0x5400ef7a
  41c47f:	(bad)  
  41c480:	je     0x41c4d4
  41c482:	not    BYTE PTR [ebp+0x56c66db5]
  41c488:	hlt    
  41c489:	and    dh,0x37
  41c48c:	(bad)  
  41c48d:	mov    dh,0xa8
  41c48f:	out    dx,al
  41c490:	je     0x41c4c5
  41c492:	jbe    0x41c466
  41c494:	nop
  41c495:	adc    BYTE PTR [ebx],ch
  41c497:	jae    0x41c44b
  41c499:	jp     0x41c4a5
  41c49b:	dec    ebx
  41c49c:	bound  esi,QWORD PTR [edi]
  41c49e:	xchg   edx,eax
  41c49f:	(bad)  
  41c4a1:	lock xchg esp,eax
  41c4a3:	inc    BYTE PTR [edi+0x4f68b9c2]
  41c4a9:	pop    esi
  41c4aa:	cmc    
  41c4ab:	jnp    0x41c458
  41c4ad:	pop    ds
  41c4ae:	ret    
  41c4af:	fild   DWORD PTR [ebp+0x49]
  41c4b2:	or     ecx,DWORD PTR [ebp-0x32]
  41c4b5:	retf   
  41c4b6:	in     al,dx
  41c4b7:	inc    edi
  41c4b8:	ss in  al,dx
  41c4ba:	and    esp,ebp
  41c4bc:	test   eax,0x37ccb9d1
  41c4c1:	icebp  
  41c4c2:	pop    es
  41c4c3:	nop
  41c4c4:	int3   
  41c4c5:	daa    
  41c4c6:	sbb    al,BYTE PTR [esi]
  41c4c8:	in     eax,dx
  41c4c9:	or     esi,DWORD PTR [esi-0x2df60326]
  41c4cf:	scas   al,BYTE PTR es:[edi]
  41c4d0:	sub    al,0x13
  41c4d2:	sysexit 
  41c4d4:	(bad)  
  41c4d5:	(bad)  
  41c4d6:	adc    cl,BYTE PTR [edi+0x10]
  41c4d9:	mov    BYTE PTR [esi+0x11],bl
  41c4dc:	cwde   
  41c4dd:	jns    0x41c4e3
  41c4df:	(bad)  
  41c4e0:	(bad)  [edx+0x1e66b472]
  41c4e6:	cmp    eax,0xeb865352
  41c4eb:	out    dx,al
  41c4ec:	jb     0x41c491
  41c4ee:	pop    ebp
  41c4ef:	add    ebx,0x3f
  41c4f2:	nop
  41c4f3:	xlat   BYTE PTR ds:[ebx]
  41c4f4:	leave  
  41c4f5:	bound  esp,QWORD PTR [ecx-0x2d]
  41c4f8:	ret    
  41c4f9:	pop    ss
  41c4fa:	or     ch,bh
  41c4fc:	test   eax,0x638c334a
  41c501:	adc    edx,DWORD PTR [ecx+0x4b615366]
  41c507:	jmp    0xd514:0x9e902ca3
  41c50e:	nop
  41c50f:	js     0x41c51d
  41c511:	xor    eax,0x1112651
  41c516:	and    edx,DWORD PTR [ecx+0x41]
  41c519:	mov    ebx,0x5ad3e19
  41c51e:	enter  0x925c,0xf6
  41c522:	ja     0x41c573
  41c524:	sub    eax,DWORD PTR [edx]
  41c526:	ins    DWORD PTR es:[edi],dx
  41c527:	lea    ebp,[esi+esi*4+0x23]
  41c52b:	jo     0x41c582
  41c52d:	sub    eax,0x8981343b
  41c532:	idiv   DWORD PTR [eax-0x31]
  41c535:	xor    al,0x5c
  41c537:	dec    DWORD PTR [edx]
  41c539:	mov    edi,0x11c75c79
  41c53e:	popf   
  41c53f:	fstp   DWORD PTR ds:0x4d56562e
  41c545:	test   eax,0x6acb6723
  41c54a:	sub    DWORD PTR [ebx-0x45480209],ebp
  41c550:	adc    BYTE PTR [eax+0x78edd02],bl
  41c556:	sbb    DWORD PTR [edx+0x1],edi
  41c559:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c55a:	sti    
  41c55b:	ins    DWORD PTR es:[edi],dx
  41c55c:	add    eax,0x1024e1c3
  41c561:	retf   0xf9a5
  41c564:	cmp    DWORD PTR [esi-0x23485ee5],edi
  41c56a:	xchg   ebx,eax
  41c56b:	mov    ebx,0x48288bad
  41c570:	mov    esp,0xa253d97e
  41c575:	mov    cl,0xe9
  41c577:	(bad)  
  41c578:	(bad)  
  41c579:	jg     0x41c53e
  41c57b:	int3   
  41c57c:	sbb    al,0x4e
  41c57e:	pushf  
  41c57f:	or     DWORD PTR [eax+0x7df54432],0x75
  41c586:	imul   edx,DWORD PTR [eax],0xffffffca
  41c589:	jge    0x41c5f9
  41c58b:	shr    BYTE PTR [eax-0x1b675b6d],0x9d
  41c592:	sub    al,0xdd
  41c594:	fdivr  st,st(5)
  41c596:	jno    0x41c54e
  41c598:	xor    al,0x19
  41c59a:	scas   al,BYTE PTR es:[edi]
  41c59b:	movaps xmm3,XMMWORD PTR [edx+0x49]
  41c59f:	in     al,0x10
  41c5a1:	xchg   esi,eax
  41c5a2:	mov    ebp,0xa6a01593
  41c5a7:	pop    edx
  41c5a8:	stos   BYTE PTR es:[edi],al
  41c5a9:	in     al,dx
  41c5aa:	fnstcw WORD PTR [ebx]
  41c5ac:	mov    al,ds:0x7586bc4b
  41c5b1:	dec    edx
  41c5b2:	pop    ss
  41c5b3:	adc    al,0xae
  41c5b5:	repnz push cs
  41c5b7:	stos   DWORD PTR es:[edi],eax
  41c5b8:	inc    edi
  41c5b9:	fcomp  DWORD PTR [ebx+0x17]
  41c5bc:	or     al,0x18
  41c5be:	call   0x6813:0x39953904
  41c5c5:	aaa    
  41c5c6:	adc    dh,BYTE PTR [ebp+0x5ef3c973]
  41c5cc:	stos   BYTE PTR es:[edi],al
  41c5cd:	fdiv   st(0),st
  41c5cf:	iret   
  41c5d0:	aam    0x5a
  41c5d2:	popf   
  41c5d3:	jbe    0x41c649
  41c5d5:	ins    DWORD PTR es:[edi],dx
  41c5d6:	jl     0x41c591
  41c5d8:	jge    0x41c572
  41c5da:	nop
  41c5db:	mov    al,0x48
  41c5dd:	mov    DWORD PTR [ecx+edx*8+0x53],ebx
  41c5e1:	not    DWORD PTR [edi]
  41c5e3:	das    
  41c5e4:	and    eax,esi
  41c5e6:	or     eax,edi
  41c5e8:	and    DWORD PTR [ebp+0x27cdc4aa],0xe
  41c5ef:	push   eax
  41c5f0:	jecxz  0x41c617
  41c5f2:	pop    ss
  41c5f3:	lods   al,BYTE PTR ds:[esi]
  41c5f4:	jmp    0x41c5a9
  41c5f6:	ss je  0x41c600
  41c5f9:	inc    ebx
  41c5fa:	cmp    esi,DWORD PTR ds:[esi-0x13]
  41c5fe:	mov    cl,0x8e
  41c600:	rcl    BYTE PTR [edi-0x6e46de42],1
  41c606:	jne    0x41c611
  41c608:	js     0x41c59f
  41c60a:	scas   eax,DWORD PTR es:[edi]
  41c60b:	div    BYTE PTR [esi+0x3852d1e8]
  41c611:	icebp  
  41c612:	push   0x222edc39
  41c617:	mov    DWORD PTR [esi],0x99750529
  41c61d:	ror    DWORD PTR [eax-0x41],1
  41c620:	aam    0x14
  41c622:	xlat   BYTE PTR ds:[ebx]
  41c623:	inc    edx
  41c624:	enter  0xb877,0x81
  41c628:	repz cld 
  41c62a:	das    
  41c62b:	adc    eax,0x5910cf4
  41c630:	lahf   
  41c631:	sahf   
  41c632:	into   
  41c633:	mov    ?,WORD PTR [esp+ebx*8]
  41c636:	inc    eax
  41c637:	cdq    
  41c638:	jge    0x41c6ab
  41c63a:	mov    edi,0xcd36d083
  41c63f:	adc    dh,bh
  41c641:	cmp    dl,al
  41c643:	cmp    ch,BYTE PTR [edi-0x589be6f]
  41c649:	test   eax,0xe03559b2
  41c64e:	mov    eax,ds:0x8b1b8fa9
  41c653:	enter  0xf882,0x17
  41c657:	outs   dx,DWORD PTR ds:[esi]
  41c658:	mov    ah,BYTE PTR [ebx+0x570acf51]
  41c65e:	adc    esi,DWORD PTR [eax+0x53]
  41c661:	pop    ds
  41c662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c663:	add    ch,BYTE PTR [ecx]
  41c665:	xor    BYTE PTR [edi-0x498827f5],ch
  41c66b:	add    al,0xf8
  41c66d:	gs jmp 0x828efab6
  41c673:	mov    al,ds:0x9055e9fd
  41c678:	xor    BYTE PTR [edi+ebp*2-0x571273b6],ch
  41c67f:	add    DWORD PTR [ecx],ecx
  41c681:	popf   
  41c682:	clc    
  41c683:	cmp    BYTE PTR [ebx-0x41],dl
  41c686:	je     0x41c64b
  41c688:	iret   
  41c689:	div    DWORD PTR [esi]
  41c68b:	popa   
  41c68c:	fsubr  QWORD PTR [esi-0x4d9d8872]
  41c692:	mov    bh,BYTE PTR [edi-0x1e233287]
  41c698:	adc    BYTE PTR ds:0xa350ca94,ch
  41c69e:	or     bh,bh
  41c6a0:	push   esi
  41c6a1:	add    DWORD PTR [eax-0x3c688a5d],esi
  41c6a7:	and    DWORD PTR [ecx+esi*1+0x4d6cd118],edx
  41c6ae:	and    DWORD PTR [ecx+0x33],0x75b2b3c5
  41c6b5:	lods   al,BYTE PTR ds:[esi]
  41c6b6:	pop    ebx
  41c6b7:	ss jno 0x41c6cc
  41c6ba:	div    BYTE PTR [esi+0x3d]
  41c6bd:	(bad)  
  41c6be:	and    eax,0x3d651362
  41c6c3:	cmc    
  41c6c4:	add    DWORD PTR ds:[eax+0x3],esi
  41c6c8:	aaa    
  41c6c9:	ds mov edi,0xd548a60d
  41c6cf:	test   al,0x85
  41c6d1:	mov    esi,0xf540d57b
  41c6d6:	aas    
  41c6d7:	jo     0x41c6ec
  41c6d9:	outs   dx,DWORD PTR ds:[esi]
  41c6da:	jmp    0x41c710
  41c6dc:	icebp  
  41c6dd:	push   eax
  41c6de:	call   0xcb039812
  41c6e3:	pushf  
  41c6e4:	push   0x3d165932
  41c6e9:	dec    esi
  41c6ea:	mov    eax,ds:0x75a7790d
  41c6ef:	pop    ebx
  41c6f0:	dec    ebx
  41c6f1:	or     eax,0xfcc3c704
  41c6f6:	aaa    
  41c6f7:	in     eax,0xc7
  41c6f9:	add    ebx,0x1a57e77
  41c6ff:	mov    edi,0xd6d0ff82
  41c704:	test   al,0xe9
  41c706:	cdq    
  41c707:	repz mov al,0x63
  41c70a:	xor    al,0x3a
  41c70c:	inc    esi
  41c70d:	mov    ch,BYTE PTR [edi+0x4fa20ce9]
  41c713:	ret    0xbd7d
  41c716:	(bad)  
  41c717:	shl    BYTE PTR [edi-0x37e7b586],cl
  41c71d:	xor    ecx,esi
  41c71f:	pop    ebx
  41c720:	addr16 and al,0xeb
  41c723:	or     dh,BYTE PTR [eax]
  41c725:	xor    ah,BYTE PTR [eax+ebp*8+0x26]
  41c729:	adc    eax,0x8496d61f
  41c72e:	and    al,0xe6
  41c730:	test   bl,dh
  41c732:	inc    edi
  41c733:	int    0xcc
  41c735:	mov    cl,0x91
  41c737:	dec    esi
  41c738:	fucomi st,st(6)
  41c73b:	inc    ecx
  41c73c:	ror    DWORD PTR [bp+di+0x1365],1
  41c741:	sbb    al,0xe4
  41c743:	outs   dx,DWORD PTR ds:[esi]
  41c744:	xchg   ecx,eax
  41c745:	lahf   
  41c746:	xchg   ebx,eax
  41c747:	xchg   esi,eax
  41c748:	sbb    BYTE PTR [ecx-0x6777b5c3],bl
  41c74e:	in     eax,dx
  41c74f:	scas   eax,DWORD PTR es:[edi]
  41c750:	ss dec edi
  41c752:	mov    ds:0x752ae51e,al
  41c757:	cs mov eax,0x14d000e4
  41c75d:	inc    esp
  41c75e:	jmp    0x41c7cb
  41c760:	cmp    ebp,DWORD PTR [eax+0xa]
  41c763:	pushf  
  41c764:	daa    
  41c765:	adc    al,0x8c
  41c767:	or     al,0x1e
  41c769:	je     0x41c77d
  41c76b:	add    DWORD PTR [esi-0xb],esp
  41c76e:	mov    bl,0x54
  41c770:	push   edx
  41c771:	jmp    0x89eee8e8
  41c776:	icebp  
  41c777:	or     BYTE PTR [edi-0x22b48a6f],ch
  41c77d:	push   edi
  41c77e:	pop    edx
  41c77f:	pusha  
  41c780:	popa   
  41c781:	loopne 0x41c79b
  41c783:	xchg   ecx,eax
  41c784:	les    eax,FWORD PTR es:[esi]
  41c787:	bnd jmp 0xae5bfcb9
  41c78d:	mov    al,ds:0xbf8be608
  41c792:	push   0x2f4ccf25
  41c797:	fdivr  QWORD PTR [ebp+0x55]
  41c79a:	sub    cl,dh
  41c79c:	push   ebp
  41c79d:	aam    0x32
  41c79f:	mov    edx,0x5ac60c6c
  41c7a4:	jns    0x41c7b7
  41c7a6:	xlat   BYTE PTR ds:[ebx]
  41c7a7:	push   ecx
  41c7a8:	repnz leave 
  41c7aa:	outs   dx,DWORD PTR ds:[esi]
  41c7ab:	xor    ebp,0xbe1be80b
  41c7b1:	addr16 or al,0x5d
  41c7b4:	jns    0x41c7ce
  41c7b6:	cmp    dl,al
  41c7b8:	mov    ds:0x8b944880,al
  41c7bd:	fsub   QWORD PTR [edx-0x2eca2f8e]
  41c7c3:	push   eax
  41c7c4:	les    edx,FWORD PTR [eax-0x3c]
  41c7c7:	push   cs
  41c7c8:	jecxz  0x41c7ae
  41c7ca:	cdq    
  41c7cb:	lea    esp,[ecx+esi*1+0x63c8879b]
  41c7d2:	pop    ds
  41c7d3:	in     al,dx
  41c7d4:	push   cs
  41c7d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7d6:	imul   ebx,esi,0xffffffb6
  41c7d9:	pop    ebx
  41c7da:	and    cl,BYTE PTR [edi]
  41c7dc:	cmc    
  41c7dd:	je     0x41c76c
  41c7df:	inc    eax
  41c7e0:	xchg   edi,eax
  41c7e1:	arpl   WORD PTR [ebx+esi*8+0x16],cx
  41c7e5:	loop   0x41c856
  41c7e7:	pop    ebx
  41c7e8:	pusha  
  41c7e9:	xor    eax,0xbe6e3867
  41c7ee:	inc    edi
  41c7ef:	add    dl,BYTE PTR [ecx+0x72ce5ced]
  41c7f5:	xor    dl,BYTE PTR [edi-0x152a7a64]
  41c7fb:	lds    edi,FWORD PTR [eax+0x53]
  41c7fe:	in     al,0x6
  41c800:	popf   
  41c801:	and    DWORD PTR [edi+0x64],edi
  41c804:	dec    edx
  41c805:	pop    edx
  41c806:	mov    al,0x6c
  41c808:	sub    ecx,DWORD PTR [esi-0x6c]
  41c80b:	or     al,0xeb
  41c80d:	dec    esi
  41c80e:	into   
  41c80f:	sub    dl,BYTE PTR [ecx+esi*2-0xf]
  41c813:	cmovle ebx,DWORD PTR [esi+eiz*2-0xf]
  41c818:	adc    al,0xb3
  41c81a:	leave  
  41c81b:	pop    edx
  41c81c:	hlt    
  41c81d:	retf   
  41c81e:	inc    esi
  41c81f:	mov    DWORD PTR [ebx-0x57acc06d],ebp
  41c825:	ret    
  41c826:	jne    0x41c7c3
  41c828:	jo     0x41c877
  41c82a:	outs   dx,BYTE PTR ds:[esi]
  41c82b:	aas    
  41c82c:	push   cs
  41c82d:	xor    BYTE PTR [ebx-0x13],dh
  41c830:	adc    dh,ch
  41c832:	imul   ebx,DWORD PTR [eax-0x9],0xd8ca3245
  41c839:	sub    ecx,DWORD PTR [esi-0x629b37fe]
  41c83f:	mov    ebp,0x75d44165
  41c844:	in     eax,0xfd
  41c846:	cmp    DWORD PTR [eax],esp
  41c848:	and    eax,0xb2dda25
  41c84d:	jno    0x41c811
  41c84f:	loop   0x41c81e
  41c851:	sbb    ebp,DWORD PTR [ebx+0x3b1156c8]
  41c857:	lds    edx,FWORD PTR [ebx]
  41c859:	xchg   esp,eax
  41c85a:	sahf   
  41c85b:	rol    ch,cl
  41c85d:	les    esp,FWORD PTR [ebp-0x13]
  41c860:	rol    BYTE PTR [ebx],0x2d
  41c863:	test   BYTE PTR [ebp+0x76],cl
  41c866:	add    DWORD PTR [esi-0x8bcff19],esi
  41c86c:	xchg   edx,eax
  41c86d:	and    al,0x56
  41c86f:	aad    0xf7
  41c871:	mov    ch,0x36
  41c873:	lds    ebp,FWORD PTR [ebp-0x7a1c79f3]
  41c879:	loop   0x41c83d
  41c87b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c87c:	xor    DWORD PTR [ebp+ecx*2-0x252e08a1],edx
  41c883:	add    bl,0x58
  41c886:	sub    esp,DWORD PTR [ebx]
  41c888:	pop    ds
  41c889:	push   0xffffffad
  41c88b:	sbb    ecx,DWORD PTR [ebp+0x68ba263f]
  41c891:	repz add dl,0x8b
  41c895:	lods   eax,DWORD PTR ds:[esi]
  41c896:	fist   DWORD PTR [edx+ecx*2]
  41c899:	and    al,0xc7
  41c89b:	stos   BYTE PTR es:[edi],al
  41c89c:	adc    ah,ah
  41c89e:	mov    ?,WORD PTR [ebx-0x6d]
  41c8a1:	add    bl,dl
  41c8a3:	dec    ebx
  41c8a4:	sub    eax,0x459fde89
  41c8a9:	shld   DWORD PTR [eax-0x3a8fa88c],esp,cl
  41c8b0:	or     eax,0x2f0133ef
  41c8b5:	mov    ecx,0x66ec084c
  41c8ba:	push   esp
  41c8bb:	scas   eax,DWORD PTR es:[edi]
  41c8bc:	cmp    eax,0xda9c3350
  41c8c1:	es add al,0x4f
  41c8c4:	xchg   ebx,eax
  41c8c5:	bound  ebp,QWORD PTR [eax+ebp*4+0xd]
  41c8c9:	or     al,0x96
  41c8cb:	shl    BYTE PTR [ebx+0x7f],0x8d
  41c8cf:	and    dh,dl
  41c8d1:	mov    esi,0xf5e2304a
  41c8d6:	push   ds
  41c8d7:	mov    ecx,0x416a732
  41c8dc:	mov    eax,0x93719928
  41c8e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8e2:	push   ecx
  41c8e3:	call   0x78ab:0xeed6c6e7
  41c8ea:	pusha  
  41c8eb:	push   esi
  41c8ec:	push   ds
  41c8ed:	cmp    al,0xeb
  41c8ef:	mov    ecx,0x1c9b9b07
  41c8f4:	add    bl,BYTE PTR [eax]
  41c8f6:	xchg   ebp,eax
  41c8f7:	jb     0x41c8f9
  41c8f9:	ds addr16 jg 0x41c8a0
  41c8fd:	adc    edi,DWORD PTR [edi+0x3c]
  41c900:	jnp    0x41c88b
  41c902:	jge    0x41c980
  41c904:	xor    ah,ch
  41c906:	adc    al,BYTE PTR [edi]
  41c908:	dec    ebx
  41c909:	neg    DWORD PTR [edi-0x13]
  41c90c:	mov    esi,0x965e93ef
  41c911:	mov    ebp,0xed09b8d1
  41c916:	inc    ecx
  41c917:	add    DWORD PTR [eax],eax
  41c919:	clc    
  41c91a:	add    al,0x0
  41c91c:	add    BYTE PTR [esi],ah
  41c91e:	push   ebp
  41c91f:	ja     0x41c956
  41c921:	cmp    DWORD PTR [ecx-0x21734c1],esi
  41c927:	xchg   esi,eax
  41c928:	mov    edx,0xe51b18e1
  41c92d:	inc    ecx
  41c92e:	das    
  41c92f:	fmul   QWORD PTR [ebp+0x6f]
  41c932:	cwde   
  41c933:	xlat   BYTE PTR ds:[ebx]
  41c934:	mov    dh,0xcf
  41c936:	jl     0x41c936
  41c938:	mov    eax,0x6fd7fdfd
  41c93d:	cdq    
  41c93e:	jb     0x41c8f1
  41c940:	or     eax,0x9dd46a98
  41c945:	loope  0x41c92f
  41c947:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c948:	mov    ds:0x3ef9d6a2,eax
  41c94d:	and    edx,DWORD PTR [ebp-0xa]
  41c950:	and    DWORD PTR [edx+0x5e],ecx
  41c953:	ins    BYTE PTR es:[edi],dx
  41c954:	iret   
  41c955:	hlt    
  41c956:	push   0x46532ecf
  41c95b:	and    ah,0xa8
  41c95e:	cmc    
  41c95f:	jmp    0x41c927
  41c961:	rcl    edx,1
  41c963:	out    dx,eax
  41c964:	pop    eax
  41c965:	in     eax,dx
  41c966:	fisub  WORD PTR [esi]
  41c968:	fidiv  DWORD PTR [ebx-0x4]
  41c96b:	or     eax,0x8a1d6be6
  41c970:	mov    ebx,0x9155deb1
  41c975:	(bad)
  41c979:	les    esp,FWORD PTR [edx+0x232e965f]
  41c97f:	scas   eax,DWORD PTR es:[edi]
  41c980:	sbb    eax,0x88ce15a0
  41c985:	fcomp  QWORD PTR [edx-0xc8409e4]
  41c98b:	adc    eax,0x6ded6626
  41c990:	ins    DWORD PTR es:[edi],dx
  41c991:	xor    al,0x32
  41c993:	mov    edi,0x255718dd
  41c998:	cli    
  41c999:	cmp    DWORD PTR [eax+0x43],esp
  41c99c:	sahf   
  41c99d:	mov    edx,0x7716fa6a
  41c9a2:	hlt    
  41c9a3:	xchg   esp,eax
  41c9a4:	dec    esp
  41c9a5:	pusha  
  41c9a6:	jge    0x41c960
  41c9a8:	(bad)  
  41c9a9:	jnp    0x41c99d
  41c9ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9ac:	into   
  41c9ad:	loope  0x41c9b2
  41c9af:	inc    ebp
  41c9b0:	rcl    BYTE PTR [ecx+0x7ad6d06f],cl
  41c9b6:	and    al,0xc9
  41c9b8:	fwait
  41c9b9:	les    edx,FWORD PTR [ebx]
  41c9bb:	sub    cl,BYTE PTR [ebx-0x40]
  41c9be:	sbb    DWORD PTR [eax-0x39],0x4e267abf
  41c9c5:	jg     0x41ca1e
  41c9c7:	xchg   edi,eax
  41c9c8:	cs ret 
  41c9ca:	test   eax,0x13e3acf
  41c9cf:	sub    DWORD PTR [edx+eiz*2],eax
  41c9d2:	cdq    
  41c9d3:	push   0x676b4234
  41c9d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9d9:	(bad)  
  41c9da:	sbb    al,0xe4
  41c9dc:	stos   BYTE PTR es:[edi],al
  41c9dd:	mov    DWORD PTR [edi],0x33e3ea74
  41c9e3:	dec    esi
  41c9e4:	outs   dx,DWORD PTR ds:[esi]
  41c9e5:	xchg   ebp,eax
  41c9e6:	add    eax,0x18d5bbc9
  41c9eb:	push   ebx
  41c9ec:	(bad)  
  41c9ed:	push   esp
  41c9ee:	and    ebp,DWORD PTR [edi-0x54b8584f]
  41c9f4:	push   esp
  41c9f5:	add    eax,0x7a7c3baf
  41c9fa:	cmp    al,0x96
  41c9fc:	call   eax
  41c9fe:	neg    DWORD PTR [ebx]
  41ca00:	xchg   ebp,eax
  41ca01:	dec    esp
  41ca02:	and    BYTE PTR [esi-0x238d4bde],ah
  41ca08:	enter  0x748e,0xe8
  41ca0c:	retf   
  41ca0d:	adc    esi,DWORD PTR [edi+0x6bd89d12]
  41ca13:	adc    eax,0x6fcf46da
  41ca18:	cmp    BYTE PTR [esi-0x22],0xc7
  41ca1c:	mov    BYTE PTR [eax-0x9],0xb1
  41ca20:	mov    al,0x54
  41ca22:	aam    0x64
  41ca24:	pop    es
  41ca25:	mov    esi,0xbc0bab54
  41ca2b:	adc    ch,BYTE PTR ds:[eax+edi*2]
  41ca2f:	pop    esi
  41ca30:	mov    ah,BYTE PTR [edi+0x4a]
  41ca33:	dec    esi
  41ca34:	and    al,0x34
  41ca36:	mov    al,0x2d
  41ca38:	stos   BYTE PTR es:[edi],al
  41ca39:	cmp    ebx,ebx
  41ca3b:	push   es
  41ca3c:	jp     0x41ca87
  41ca3e:	call   0xd822f2c7
  41ca43:	or     eax,esp
  41ca45:	sbb    ch,BYTE PTR [edi-0x5cfe4261]
  41ca4b:	inc    esi
  41ca4c:	xor    BYTE PTR [ebp+esi*8-0x342ebcf4],bl
  41ca53:	pop    edx
  41ca54:	xchg   ecx,eax
  41ca55:	jl     0x41c9f0
  41ca57:	popf   
  41ca58:	or     edx,DWORD PTR ds:0xd2cf75cd
  41ca5e:	jno    0x41ca52
  41ca60:	cmp    eax,0xf083eb8d
  41ca65:	(bad)  
  41ca66:	pop    ebp
  41ca67:	add    bl,BYTE PTR [esi+0x470e817f]
  41ca6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca6e:	sub    esi,edx
  41ca70:	pop    edi
  41ca71:	sub    edx,DWORD PTR [eax-0x10]
  41ca74:	mov    al,0x78
  41ca76:	loope  0x41cae7
  41ca78:	inc    esp
  41ca79:	out    0x19,eax
  41ca7b:	xchg   esi,eax
  41ca7c:	inc    edi
  41ca7d:	push   0x17b8cb06
  41ca82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca83:	jno    0x41ca86
  41ca85:	or     edx,edx
  41ca87:	add    eax,0x15888c66
  41ca8c:	mov    ebp,0xcd229dba
  41ca91:	xor    DWORD PTR [eax-0x6d],0xffffff8c
  41ca95:	sub    al,0x91
  41ca97:	aas    
  41ca98:	push   ebx
  41ca99:	add    al,0x2a
  41ca9b:	popf   
  41ca9c:	fsub   DWORD PTR [eax-0x79]
  41ca9f:	(bad)  
  41caa0:	into   
  41caa1:	retf   
  41caa2:	mov    ah,0x23
  41caa4:	pop    ds
  41caa5:	in     eax,0x63
  41caa7:	mov    dh,0x63
  41caa9:	adc    edx,DWORD PTR [edi]
  41caab:	xor    BYTE PTR [esi+ebp*1-0x69],0x47
  41cab0:	pop    edx
  41cab1:	test   dh,bh
  41cab3:	dec    eax
  41cab4:	inc    edx
  41cab5:	dec    edx
  41cab6:	das    
  41cab7:	inc    edx
  41cab8:	xchg   esi,eax
  41cab9:	pop    esi
  41caba:	mov    dh,0x59
  41cabc:	(bad)  
  41cabd:	jmp    0xbdcb:0x492f2fd3
  41cac4:	and    al,0x26
  41cac6:	mov    DWORD PTR [eax+0x6],ebx
  41cac9:	sbb    BYTE PTR [esi],dl
  41cacb:	xchg   esi,eax
  41cacc:	out    0x80,eax
  41cace:	push   ebx
  41cacf:	jmp    0x41caf6
  41cad1:	xor    BYTE PTR ds:0x5a8206d0,dh
  41cad7:	jecxz  0x41cb3a
  41cad9:	push   es
  41cada:	dec    ecx
  41cadb:	ins    DWORD PTR es:[edi],dx
  41cadc:	jp     0x41cafd
  41cade:	call   0xedf8:0x26898e6f
  41cae5:	es fcomp st(6)
  41cae8:	adc    al,0xbb
  41caea:	mov    eax,0x7968c279
  41caef:	inc    eax
  41caf0:	sar    dl,1
  41caf2:	cmp    al,0x2
  41caf4:	fld    TBYTE PTR [edx+0x7bd13f26]
  41cafa:	xor    BYTE PTR [ebp-0x59],0x39
  41cafe:	xor    DWORD PTR [eax],esi
  41cb00:	mov    ecx,0x17638930
  41cb05:	mov    bl,0xa5
  41cb07:	cmp    dl,BYTE PTR [esi-0x2e]
  41cb0a:	addr16 cmp eax,0x343a22d4
  41cb10:	cli    
  41cb11:	(bad)  
  41cb12:	shl    DWORD PTR ds:0xfc79f72e,cl
  41cb18:	clc    
  41cb19:	cmp    esp,ebx
  41cb1b:	jne    0x41caf0
  41cb1d:	jmp    0x1e39:0x5be9cc25
  41cb24:	add    DWORD PTR [edx],esi
  41cb26:	cmp    dh,BYTE PTR [eax+eiz*1]
  41cb29:	xor    DWORD PTR [eax-0x675aba70],0x78
  41cb30:	cs add eax,0x97228fe2
  41cb36:	pushf  
  41cb37:	jg     0x41cae8
  41cb39:	jae    0x41cb78
  41cb3b:	adc    DWORD PTR [esi],ebx
  41cb3d:	nop
  41cb3e:	ret    
  41cb3f:	add    BYTE PTR ds:[eax-0x79ce3d7a],al
  41cb46:	pop    esi
  41cb47:	xchg   ebx,eax
  41cb48:	and    eax,0xcf64f61d
  41cb4d:	fs in  al,0x84
  41cb50:	jmp    0x79b73ac7
  41cb55:	pop    eax
  41cb56:	inc    ebx
  41cb57:	test   eax,0x4ec17149
  41cb5c:	les    edi,FWORD PTR [edi+0x70]
  41cb5f:	leave  
  41cb60:	lea    ebp,[edi]
  41cb62:	xlat   BYTE PTR ds:[ebx]
  41cb63:	add    al,0xeb
  41cb65:	push   es
  41cb66:	pop    ss
  41cb67:	dec    ebp
  41cb68:	lea    edi,[ecx+0x5a550f84]
  41cb6e:	mov    bl,0x95
  41cb70:	ins    DWORD PTR es:[edi],dx
  41cb71:	pop    esi
  41cb72:	scas   al,BYTE PTR es:[edi]
  41cb73:	aas    
  41cb74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb75:	outs   dx,BYTE PTR ds:[esi]
  41cb76:	rcl    BYTE PTR [edi],cl
  41cb78:	jg     0x41cbc7
  41cb7a:	xor    esi,DWORD PTR [ebx+0x23]
  41cb7d:	loop   0x41cb5b
  41cb7f:	loop   0x41cbe0
  41cb81:	inc    BYTE PTR [edx]
  41cb83:	mov    esi,0xd6278865
  41cb88:	adc    DWORD PTR [ebp+0x7e],ebp
  41cb8b:	ins    DWORD PTR es:[edi],dx
  41cb8c:	cmp    bl,BYTE PTR [edx+edi*1-0x15]
  41cb90:	fbld   TBYTE PTR [ecx-0x29854dfe]
  41cb96:	test   eax,0xa1004e0d
  41cb9b:	jne    0x41cb39
  41cb9d:	push   ss
  41cb9e:	xchg   BYTE PTR [eax+edx*8],ah
  41cba1:	les    eax,FWORD PTR [esi]
  41cba3:	mov    esp,0xfb19cb8e
  41cba8:	call   0x83f4:0x4c16698c
  41cbaf:	or     DWORD PTR [esi+0x15],ebx
  41cbb2:	jno    0x41cb82
  41cbb4:	or     DWORD PTR [eax],ebp
  41cbb6:	fs push ds
  41cbb8:	jecxz  0x41cc19
  41cbba:	nop
  41cbbb:	loopne 0x41cb65
  41cbbd:	cmp    dl,bl
  41cbbf:	call   0x12ca:0x16458104
  41cbc6:	push   edx
  41cbc7:	dec    ebp
  41cbc8:	out    dx,al
  41cbc9:	and    edi,DWORD PTR [esi-0x25ef1c7e]
  41cbcf:	mov    eax,0x276cfefe
  41cbd4:	lods   eax,DWORD PTR ds:[esi]
  41cbd5:	out    dx,al
  41cbd6:	sbb    esp,DWORD PTR [ecx]
  41cbd8:	mul    DWORD PTR [ebx]
  41cbda:	mov    WORD PTR [ecx],gs
  41cbdc:	or     DWORD PTR [ecx+0x41],ebx
  41cbdf:	sub    cl,ch
  41cbe1:	ins    DWORD PTR es:[edi],dx
  41cbe2:	add    cl,bh
  41cbe4:	int    0x35
  41cbe6:	nop
  41cbe7:	retf   0x1ca6
  41cbea:	xchg   BYTE PTR [ebx-0x1b394f0f],al
  41cbf0:	fild   QWORD PTR [ecx]
  41cbf2:	and    bl,BYTE PTR [edi+0x5de51ab]
  41cbf8:	mov    ch,0xb7
  41cbfa:	(bad)  
  41cbfb:	(bad)  
  41cbfd:	push   ebx
  41cbfe:	leave  
  41cbff:	or     DWORD PTR [ecx+edx*4+0x64],0x819c4a48
  41cc07:	add    dl,BYTE PTR [edi-0x13e64a98]
  41cc0d:	hlt    
  41cc0e:	fnsave [eax-0x78]
  41cc11:	and    DWORD PTR [edi],esi
  41cc13:	out    dx,eax
  41cc14:	or     BYTE PTR [eax+edx*1],bh
  41cc17:	mov    al,ds:0xd23e986b
  41cc1c:	sub    eax,0x73093424
  41cc21:	aam    0xe9
  41cc23:	xchg   ebx,eax
  41cc24:	loop   0x41cbd4
  41cc26:	fwait
  41cc27:	jmp    0x41cc11
  41cc29:	sub    ecx,DWORD PTR [edi+0x63]
  41cc2c:	enter  0xc10a,0x6a
  41cc30:	lds    eax,FWORD PTR [esi]
  41cc32:	ret    
  41cc33:	retf   0xe50a
  41cc36:	inc    ebx
  41cc37:	mov    WORD PTR [ebx],gs
  41cc39:	xchg   ecx,eax
  41cc3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc3b:	cli    
  41cc3c:	arpl   WORD PTR [ebp-0x3a],bp
  41cc3f:	iret   
  41cc40:	pusha  
  41cc41:	sti    
  41cc42:	imul   eax,DWORD PTR [edx],0xfffffffe
  41cc45:	jnp    0x41cbef
  41cc47:	cdq    
  41cc48:	xor    BYTE PTR [edx],ch
  41cc4a:	imul   esi,DWORD PTR [ebx-0x5ed8dcd9],0x32
  41cc51:	jne    0x41cc51
  41cc53:	fdivr  st(1),st
  41cc55:	retf   
  41cc56:	repz (bad) 
  41cc58:	fcom   QWORD PTR [esi-0x5e]
  41cc5b:	push   edx
  41cc5c:	cs test eax,0x1bb46c12
  41cc62:	imul   ebx,DWORD PTR [ebx+0x2dae0253],0xffffffc3
  41cc69:	into   
  41cc6a:	int3   
  41cc6b:	stos   DWORD PTR es:[edi],eax
  41cc6c:	inc    ebx
  41cc6d:	stos   DWORD PTR es:[edi],eax
  41cc6e:	pop    eax
  41cc6f:	outs   dx,DWORD PTR ds:[esi]
  41cc70:	aam    0xe9
  41cc72:	std    
  41cc73:	loop   0x41cccd
  41cc75:	nop
  41cc76:	repz push es
  41cc78:	jmp    0xcd14:0xc8758194
  41cc7f:	pop    es
  41cc80:	mov    al,0xe7
  41cc82:	ret    
  41cc83:	xchg   ebx,eax
  41cc84:	shl    DWORD PTR ds:0xad168902,1
  41cc8a:	out    dx,eax
  41cc8b:	dec    esp
  41cc8c:	or     al,bl
  41cc8e:	cmp    al,0xe8
  41cc90:	inc    esp
  41cc91:	and    eax,0x38ebba98
  41cc96:	nop
  41cc97:	lea    ebx,[ebx+0x43]
  41cc9a:	ror    BYTE PTR [edi+0x2a],cl
  41cc9d:	fcmovu st,st(4)
  41cc9f:	imul   esi,DWORD PTR [ecx],0xfe52ca6c
  41cca5:	jl     0x41ccff
  41cca7:	push   edi
  41cca8:	out    dx,eax
  41cca9:	cli    
  41ccaa:	pop    ds
  41ccab:	outs   dx,DWORD PTR ds:[esi]
  41ccac:	jg     0x41ccf8
  41ccae:	in     eax,0x6
  41ccb0:	mov    dh,0xcf
  41ccb2:	jp     0x41ccc4
  41ccb4:	dec    edx
  41ccb5:	(bad)  
  41ccb7:	mov    bh,BYTE PTR [edx]
  41ccb9:	(bad)  
  41ccba:	in     eax,0xf9
  41ccbc:	cmp    al,bl
  41ccbe:	mov    al,ds:0x944a6d00
  41ccc3:	or     esp,esp
  41ccc5:	call   0x56750efb
  41ccca:	nop
  41cccb:	or     al,0x6
  41cccd:	cmp    al,BYTE PTR [ebx-0x3c3f6ce]
  41ccd3:	dec    esp
  41ccd4:	dec    edi
  41ccd5:	sahf   
  41ccd6:	hlt    
  41ccd7:	add    eax,eax
  41ccd9:	mov    dl,0xe4
  41ccdb:	pop    eax
  41ccdc:	outs   dx,DWORD PTR ds:[esi]
  41ccdd:	xchg   ebx,eax
  41ccde:	arpl   WORD PTR [edx],cx
  41cce0:	aas    
  41cce1:	mov    ebp,0x1c8d6d03
  41cce6:	inc    edx
  41cce7:	dec    esi
  41cce8:	out    dx,eax
  41cce9:	push   esp
  41ccea:	push   0x7bc22d0f
  41ccef:	push   ebp
  41ccf0:	mov    bh,0x13
  41ccf2:	dec    esp
  41ccf3:	mov    ebx,eax
  41ccf5:	es repz pop es
  41ccf8:	inc    esp
  41ccf9:	sbb    ebp,DWORD PTR [edi]
  41ccfb:	rol    esp,0x7c
  41ccfe:	cli    
  41ccff:	pop    ecx
  41cd00:	adc    eax,0xe75caac8
  41cd05:	pop    ebp
  41cd06:	bswap  esp
  41cd08:	fcomp  DWORD PTR [eax]
  41cd0a:	lock idiv BYTE PTR [edx+0x71595e79]
  41cd11:	stc    
  41cd12:	in     eax,0x4b
  41cd14:	mov    esp,0xfd86df69
  41cd19:	call   0xaa5d3642
  41cd1e:	and    eax,DWORD PTR ds:0x3159860a
  41cd24:	xlat   BYTE PTR ds:[ebx]
  41cd25:	and    bh,BYTE PTR [ecx-0x56]
  41cd28:	or     ah,BYTE PTR [ecx-0x2b]
  41cd2b:	mov    ebx,0xb7a9cea7
  41cd30:	mov    bl,BYTE PTR [esi]
  41cd32:	push   cs
  41cd33:	cld    
  41cd34:	enter  0x29a8,0x8a
  41cd38:	mov    al,0xe7
  41cd3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd3b:	sbb    DWORD PTR ss:[ebx],edi
  41cd3e:	and    eax,0xae8bc983
  41cd43:	inc    edx
  41cd44:	pop    edx
  41cd45:	(bad)  
  41cd46:	(bad)  
  41cd47:	ret    0xbcff
  41cd4a:	ds cmp ah,al
  41cd4d:	(bad)
  41cd52:	xor    BYTE PTR [ebx-0x32],dh
  41cd55:	imul   DWORD PTR [ecx+0x78]
  41cd58:	mov    dh,0x94
  41cd5a:	xor    eax,0x99ff6ae8
  41cd5f:	mov    al,0xc
  41cd61:	jbe    0x41cd82
  41cd63:	xchg   DWORD PTR [ebx+ebx*8-0x64],ebx
  41cd67:	pop    esi
  41cd68:	xchg   esp,eax
  41cd69:	mov    esp,0xba205cdf
  41cd6e:	icebp  
  41cd6f:	mov    ds:0x138c769c,eax
  41cd74:	inc    edi
  41cd75:	sub    BYTE PTR [ebp-0x644f0cda],dl
  41cd7b:	jge    0x41cd72
  41cd7d:	jmp    0x3934:0x90cdb5f6
  41cd84:	pop    edx
  41cd85:	inc    edx
  41cd86:	add    al,0x54
  41cd88:	or     al,0x98
  41cd8a:	jecxz  0x41cd82
  41cd8c:	and    cl,BYTE PTR [esi+0x5a]
  41cd8f:	sbb    cl,ch
  41cd91:	das    
  41cd92:	pop    ebp
  41cd93:	(bad)  
  41cd94:	cmp    BYTE PTR [esp+edi*2+0x35932745],dl
  41cd9b:	jmp    0xdee55d70
  41cda0:	bound  ecx,QWORD PTR ds:0x932c9e96
  41cda6:	mul    DWORD PTR [ebp-0x3e9dcd50]
  41cdac:	ror    dh,0xd4
  41cdaf:	rcr    ch,1
  41cdb1:	stos   DWORD PTR es:[edi],eax
  41cdb2:	fnstenv [edi+0x123b3cb6]
  41cdb8:	test   al,0xe0
  41cdba:	adc    bl,dl
  41cdbc:	repnz icebp 
  41cdbe:	push   edx
  41cdbf:	test   eax,edx
  41cdc1:	loop   0x41cdab
  41cdc3:	sub    dl,dh
  41cdc5:	inc    eax
  41cdc6:	cmp    al,0x28
  41cdc8:	mov    ds:0xce2eb254,al
  41cdcd:	inc    edi
  41cdce:	in     al,0x99
  41cdd0:	test   al,0xd
  41cdd2:	pop    esi
  41cdd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdd4:	xlat   BYTE PTR ds:[ebx]
  41cdd5:	jmp    0x41cdee
  41cdd7:	jecxz  0x41cd99
  41cdd9:	in     eax,dx
  41cdda:	out    dx,eax
  41cddb:	int3   
  41cddc:	stos   BYTE PTR es:[edi],al
  41cddd:	fld    QWORD PTR [ebp+0xa]
  41cde0:	and    al,0x15
  41cde2:	dec    BYTE PTR [ebx+eiz*8+0x33]
  41cde6:	pop    edx
  41cde7:	addr16 popf 
  41cde9:	pop    eax
  41cdea:	pop    esi
  41cdeb:	iret   
  41cdec:	in     al,dx
  41cded:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdee:	inc    ecx
  41cdef:	aam    0xe8
  41cdf1:	inc    esi
  41cdf2:	sahf   
  41cdf3:	sub    eax,0x207db03
  41cdf8:	(bad)  
  41cdf9:	and    eax,0x39c2f1fe
  41cdfe:	icebp  
  41cdff:	and    BYTE PTR [ecx+0x3e],cl
  41ce02:	mov    bl,0x8e
  41ce04:	(bad)  
  41ce05:	mov    esi,0x3e7fa189
  41ce0a:	cld    
  41ce0b:	mov    dl,0xb8
  41ce0d:	pop    eax
  41ce0e:	add    al,al
  41ce10:	push   edi
  41ce11:	mov    ch,0x15
  41ce13:	sbb    ebp,esi
  41ce15:	in     al,0x3e
  41ce17:	mov    esp,ss
  41ce19:	fdivrp st(6),st
  41ce1b:	cld    
  41ce1c:	ds js  0x41cdd0
  41ce1f:	out    dx,al
  41ce20:	daa    
  41ce21:	sub    ebx,ecx
  41ce23:	add    al,BYTE PTR [eiz*8-0x7fffeba]
  41ce2a:	add    al,0x0
  41ce2c:	add    bh,bl
  41ce2e:	in     eax,0x3a
  41ce30:	daa    
  41ce31:	push   edx
  41ce32:	xchg   ecx,eax
  41ce33:	dec    edi
  41ce34:	ficom  DWORD PTR fs:[ebp+0x4e680a51]
  41ce3b:	mov    esp,edi
  41ce3d:	loop   0x41ce86
  41ce3f:	imul   BYTE PTR [edx+0x12927c26]
  41ce45:	rdtsc  
  41ce47:	and    dh,BYTE PTR [eax]
  41ce49:	mov    dl,0xe2
  41ce4b:	call   0xed56cff1
  41ce50:	test   edi,esi
  41ce52:	ret    0x67e2
  41ce55:	jecxz  0x41ce59
  41ce57:	inc    ebx
  41ce58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce59:	(bad)  
  41ce5a:	jmp    0x4fe5:0xb3518d0e
  41ce61:	sub    esi,DWORD PTR [edx]
  41ce63:	arpl   WORD PTR [ecx+0x16],bp
  41ce66:	shl    dl,1
  41ce68:	or     DWORD PTR ds:0x2481bdd0,0x3d
  41ce6f:	jb     0x41cea3
  41ce71:	mov    al,0x18
  41ce73:	xchg   ebp,eax
  41ce74:	aad    0xe2
  41ce76:	sbb    dl,BYTE PTR [ebx+edx*8-0x2a37cfc5]
  41ce7d:	inc    esi
  41ce7e:	cld    
  41ce7f:	add    al,0xb
  41ce81:	pop    edi
  41ce82:	xchg   ecx,eax
  41ce83:	ror    DWORD PTR [edx],cl
  41ce85:	cmp    dl,BYTE PTR [ebx]
  41ce87:	nop
  41ce88:	les    ebp,FWORD PTR [edi-0x2dcf2a33]
  41ce8e:	test   ebp,ecx
  41ce90:	frstor [eax+esi*1-0x582a139]
  41ce97:	sub    BYTE PTR [edi-0x2f],0x20
  41ce9b:	test   eax,0xd0b01524
  41cea0:	hlt    
  41cea1:	fwait
  41cea2:	adc    BYTE PTR [ebp+0x2d],bl
  41cea5:	shr    BYTE PTR [esi+eiz*4],cl
  41cea8:	push   edi
  41cea9:	dec    ebp
  41ceaa:	test   eax,0xd2462c40
  41ceaf:	fs pop ds
  41ceb1:	data16 hlt 
  41ceb3:	shl    BYTE PTR [ecx+eiz*2-0x5c],1
  41ceb7:	jae    0x41ce8e
  41ceb9:	mov    BYTE PTR [edx-0x73],ah
  41cebc:	je     0x41cf30
  41cebe:	loopne 0x41cf0a
  41cec0:	retf   0x490f
  41cec3:	mov    ah,0x9a
  41cec5:	pop    ebp
  41cec6:	repz sbb eax,0x1d252503
  41cecc:	sbb    edi,edi
  41cece:	stos   DWORD PTR es:[edi],eax
  41cecf:	fist   DWORD PTR [ebx+0x5aead863]
  41ced5:	or     eax,0x515be0aa
  41ceda:	retf   0x8a5
  41cedd:	dec    eax
  41cede:	push   esi
  41cedf:	fdivr  QWORD PTR [ecx+0x21b06987]
  41cee5:	lock inc edx
  41cee7:	mov    al,0x58
  41cee9:	jge    0x41ceba
  41ceeb:	add    BYTE PTR [ebp-0x2548d407],bh
  41cef1:	xchg   ebp,eax
  41cef2:	out    dx,eax
  41cef3:	mov    ds:0xcdc35b8f,eax
  41cef8:	mov    dl,BYTE PTR [edi+esi*2+0x6443d0a6]
  41ceff:	cmp    BYTE PTR [ebp-0x31a9f3dc],cl
  41cf05:	in     eax,dx
  41cf06:	dec    eax
  41cf07:	lods   al,BYTE PTR ds:[esi]
  41cf08:	dec    esp
  41cf09:	xchg   ebp,eax
  41cf0a:	sub    DWORD PTR [ebp+0x19],ebp
  41cf0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf0e:	push   cs
  41cf0f:	(bad)  
  41cf10:	push   eax
  41cf11:	adc    edx,ebx
  41cf13:	fiadd  WORD PTR [esi]
  41cf15:	sub    al,0x9f
  41cf17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf18:	dec    edi
  41cf19:	pop    ebp
  41cf1a:	mov    al,ds:0xf798136a
  41cf1f:	mov    esi,0x9d15e437
  41cf24:	ret    
  41cf25:	mov    DWORD PTR [esi+eax*4+0x4b7c27a3],ebp
  41cf2c:	pop    eax
  41cf2d:	mov    bh,ch
  41cf2f:	cwde   
  41cf30:	add    edi,ebp
  41cf32:	loope  0x41cf9c
  41cf34:	xor    eax,esp
  41cf36:	mov    ds:0xaef23e11,al
  41cf3b:	aaa    
  41cf3c:	repnz cmp BYTE PTR [eax-0x78],dl
  41cf40:	or     ebp,esi
  41cf42:	sbb    BYTE PTR [eax+0x3f],dl
  41cf45:	test   eax,0xff84e1e7
  41cf4a:	sub    ebp,DWORD PTR [edx]
  41cf4c:	mov    edx,0x3afc6868
  41cf51:	(bad)  [ebx-0x39f5f568]
  41cf57:	dec    edi
  41cf58:	lods   eax,DWORD PTR ds:[esi]
  41cf59:	cdq    
  41cf5a:	mov    esi,0x1b5cd8ba
  41cf5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf60:	pop    ebp
  41cf61:	daa    
  41cf62:	adc    al,0x85
  41cf64:	dec    esi
  41cf65:	dec    edx
  41cf66:	imul   esi,ecx,0x42
  41cf69:	mov    edi,DWORD PTR [esi]
  41cf6b:	xor    BYTE PTR [esi-0x75e8ed95],0xa1
  41cf72:	mov    bh,0x5
  41cf74:	gs bound eax,QWORD PTR cs:[ebx-0x3f]
  41cf79:	rcl    DWORD PTR [eax-0x56],0xbe
  41cf7d:	lock push ss
  41cf7f:	cmp    eax,DWORD PTR [edi]
  41cf81:	bound  ecx,QWORD PTR [eax+0x7784d518]
  41cf87:	inc    esp
  41cf88:	mov    eax,ds:0x87f195ba
  41cf8d:	inc    edx
  41cf8e:	xor    al,0xd5
  41cf90:	retf   0x186c
  41cf93:	mov    BYTE PTR [ebx-0x3e8a58db],bh
  41cf99:	mov    ebx,0xa8a2ccfb
  41cf9e:	add    edi,DWORD PTR [edx-0x5]
  41cfa1:	jnp    0x41cf71
  41cfa3:	push   es
  41cfa4:	xlat   BYTE PTR ds:[ebx]
  41cfa5:	fwait
  41cfa6:	lds    esi,FWORD PTR gs:[edx+0x28]
  41cfaa:	adc    bh,0x9c
  41cfad:	jle    0x41d013
  41cfaf:	jmp    0x41cfbf
  41cfb1:	xchg   edx,eax
  41cfb2:	fbld   TBYTE PTR [edi]
  41cfb4:	and    BYTE PTR ds:0x9a2dfce8,bh
  41cfba:	(bad)
  41cfbd:	adc    DWORD PTR [edi+0x6cf107ec],0xfe09763
  41cfc7:	pop    ecx
  41cfc8:	retf   0x50c8
  41cfcb:	sbb    esp,0x46
  41cfce:	pop    ss
  41cfcf:	push   esp
  41cfd0:	push   ss
  41cfd1:	test   BYTE PTR [ebp+0x76],dh
  41cfd4:	test   al,0x8b
  41cfd6:	jnp    0x41d019
  41cfd8:	gs ret 0x4918
  41cfdc:	add    BYTE PTR [esi-0x44],ch
  41cfdf:	jl     0x41cff7
  41cfe1:	adc    al,dh
  41cfe3:	inc    edi
  41cfe4:	and    al,0x46
  41cfe6:	ret    0xdc1f
  41cfe9:	push   edi
  41cfea:	adc    eax,0x9acd32cc
  41cfef:	pop    es
  41cff0:	rcl    DWORD PTR [ecx+0x185e73c3],cl
  41cff6:	lahf   
  41cff7:	icebp  
  41cff8:	add    ch,BYTE PTR [esi+edi*1]
  41cffb:	or     al,BYTE PTR [eax+0x5e]
  41cffe:	jns    0x41d07b
  41d000:	cmc    
  41d001:	jne    0x41cfc4
  41d003:	push   es
  41d004:	inc    eax
  41d005:	outs   dx,DWORD PTR ds:[esi]
  41d006:	mov    ebx,0x8aa71e58
  41d00b:	and    DWORD PTR [edi],ebp
  41d00d:	xor    ch,BYTE PTR [esi+0x17]
  41d010:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d011:	jmp    FWORD PTR [edi+0x31]
  41d014:	les    ebp,FWORD PTR [esi+0x7f]
  41d017:	aaa    
  41d018:	test   BYTE PTR [ebx-0x21],ah
  41d01b:	sub    esi,DWORD PTR [edi+0x5e]
  41d01e:	out    0xe1,al
  41d020:	and    al,0x1d
  41d022:	sub    BYTE PTR [ecx-0x5f],dh
  41d025:	jns    0x41d001
  41d027:	or     BYTE PTR [eax-0x23],bl
  41d02a:	mov    eax,ds:0x2166c586
  41d02f:	loop   0x41cffd
  41d031:	ins    DWORD PTR es:[edi],dx
  41d032:	fnstcw WORD PTR [edi-0x3b]
  41d035:	cmp    al,0xc9
  41d037:	(bad)  
  41d038:	rcl    BYTE PTR [edx],0x91
  41d03b:	(bad)  
  41d03c:	mov    cl,0x41
  41d03e:	imul   ebx,esp,0x53
  41d041:	int    0x61
  41d043:	mov    eax,ds:0xfd7e20d9
  41d048:	sub    DWORD PTR [edx-0x2c],esi
  41d04b:	mov    edx,0x57c50a87
  41d050:	sub    dl,cl
  41d052:	xor    ebp,eax
  41d054:	cwde   
  41d055:	sub    al,0x3d
  41d057:	or     DWORD PTR [esi-0x28],ebx
  41d05a:	xchg   ebx,eax
  41d05b:	fistp  WORD PTR [ecx-0x3]
  41d05e:	xchg   edx,eax
  41d05f:	jnp    0x41d063
  41d061:	dec    esp
  41d062:	daa    
  41d063:	xchg   ecx,eax
  41d064:	adc    BYTE PTR [ebx-0x77],bh
  41d067:	enter  0x1ac9,0x5e
  41d06b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d06c:	pop    eax
  41d06d:	inc    ecx
  41d06e:	cld    
  41d06f:	pop    ss
  41d070:	inc    eax
  41d071:	sub    ebp,DWORD PTR [edi+0x15]
  41d074:	pop    edx
  41d075:	add    ah,dl
  41d077:	fmul   QWORD PTR [ebp+0x3a17e278]
  41d07d:	and    ch,BYTE PTR [esi+esi*8-0xc]
  41d081:	setl   cl
  41d084:	(bad)  
  41d086:	loop   0x41d05f
  41d088:	scas   eax,DWORD PTR es:[edi]
  41d089:	push   ebp
  41d08a:	add    al,0x17
  41d08c:	pop    ebp
  41d08d:	xor    eax,0xd06def9b
  41d092:	sbb    cl,BYTE PTR [eax+0x10]
  41d095:	scas   al,BYTE PTR es:[edi]
  41d096:	pop    esi
  41d097:	jl     0x41d08b
  41d099:	(bad)  
  41d09a:	dec    edi
  41d09b:	das    
  41d09c:	jo     0x41d0b0
  41d09e:	sbb    al,0x46
  41d0a0:	mov    bl,0xf0
  41d0a2:	loopne 0x41d0d6
  41d0a4:	mov    esi,0x1d271b25
  41d0a9:	xchg   edi,eax
  41d0aa:	cmp    DWORD PTR [edx+ebx*2-0x65b07fc6],ecx
  41d0b1:	jecxz  0x41d04a
  41d0b3:	pop    esi
  41d0b4:	sub    BYTE PTR [ebx+edx*1+0x7becd3e7],ch
  41d0bb:	lahf   
  41d0bc:	popf   
  41d0bd:	rol    DWORD PTR [ecx+eax*4+0x18],0x25
  41d0c2:	ret    
  41d0c3:	in     al,0x72
  41d0c5:	pop    ebp
  41d0c6:	(bad)  
  41d0c7:	scas   eax,DWORD PTR es:[edi]
  41d0c8:	push   esi
  41d0c9:	out    dx,eax
  41d0ca:	and    dh,dl
  41d0cc:	mov    ecx,0x344ce06e
  41d0d1:	mov    DWORD PTR [esi+0x1791a050],edx
  41d0d7:	sub    BYTE PTR [edi],dh
  41d0d9:	pop    esi
  41d0da:	adc    al,cl
  41d0dc:	pop    ss
  41d0dd:	jmp    0xa938:0x391bb67b
  41d0e4:	dec    esp
  41d0e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0e6:	pushf  
  41d0e7:	stos   DWORD PTR es:[edi],eax
  41d0e8:	and    ebp,eax
  41d0ea:	call   0x1ac6:0x67b12e45
  41d0f1:	loop   0x41d140
  41d0f3:	int3   
  41d0f4:	or     bh,BYTE PTR [edx]
  41d0f6:	add    eax,0x15eab4e9
  41d0fb:	dec    BYTE PTR [edx+0x3ca74939]
  41d101:	mov    cs,WORD PTR [ebp+0x13a64812]
  41d107:	pop    edx
  41d108:	push   edx
  41d109:	add    al,0x7a
  41d10b:	leave  
  41d10c:	add    DWORD PTR [edx],ebx
  41d10e:	(bad)  
  41d10f:	mov    BYTE PTR [ebx+0x723d2df5],dl
  41d115:	int3   
  41d116:	aad    0xf4
  41d118:	xchg   ebx,eax
  41d119:	or     al,0xf8
  41d11b:	pop    esp
  41d11c:	fdivp  st(6),st
  41d11e:	cli    
  41d11f:	mov    esp,DWORD PTR [ebx]
  41d121:	push   esi
  41d122:	es sub al,0x4d
  41d125:	xor    BYTE PTR [esi],cl
  41d127:	add    BYTE PTR [esi],ah
  41d129:	mov    cl,0x8a
  41d12b:	out    0x85,al
  41d12d:	in     eax,dx
  41d12e:	mov    edi,0x47028caf
  41d133:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d134:	xchg   edx,eax
  41d135:	xchg   esp,eax
  41d136:	sbb    al,0x5a
  41d138:	xchg   esp,eax
  41d139:	ret    0x33e1
  41d13c:	das    
  41d13d:	(bad)  
  41d13e:	cmp    al,0xf7
  41d140:	ins    BYTE PTR es:[edi],dx
  41d141:	outs   dx,DWORD PTR ds:[esi]
  41d142:	cld    
  41d143:	mov    ebx,0xdbfccd2e
  41d148:	test   esi,ecx
  41d14a:	imul   ecx,eax,0x30
  41d14d:	(bad)  
  41d14e:	push   esi
  41d14f:	push   esp
  41d150:	pop    edx
  41d151:	cmc    
  41d152:	mov    ah,0x73
  41d154:	inc    DWORD PTR [eax-0x28]
  41d157:	dec    ebx
  41d158:	cmp    eax,DWORD PTR [ebp-0x30abbfb9]
  41d15e:	leave  
  41d15f:	scas   eax,DWORD PTR es:[edi]
  41d160:	mov    esi,0x682f7e40
  41d165:	or     DWORD PTR [edi+0x2e],0xfffffffa
  41d169:	xor    DWORD PTR [ebx-0x7f46956a],0xd5c117ea
  41d173:	test   al,0xd1
  41d175:	out    dx,eax
  41d176:	pop    ss
  41d177:	sub    eax,ecx
  41d179:	push   ebp
  41d17a:	or     al,0xea
  41d17c:	sbb    BYTE PTR [esi-0x63],ah
  41d17f:	mov    esi,0x528c5a7d
  41d184:	lods   eax,DWORD PTR ds:[esi]
  41d185:	add    al,0x3e
  41d187:	push   edx
  41d188:	es nop
  41d18a:	lock cmp DWORD PTR [edx-0x71647f32],esi
  41d191:	sbb    DWORD PTR [eax+0x33],eax
  41d194:	iret   
  41d195:	lods   eax,DWORD PTR ds:[esi]
  41d196:	mov    edi,0x6e9a1304
  41d19b:	xor    edi,DWORD PTR [edx]
  41d19d:	lods   al,BYTE PTR ds:[esi]
  41d19e:	and    DWORD PTR [esi],esp
  41d1a0:	pushf  
  41d1a1:	push   ecx
  41d1a2:	call   0xc773:0x5f109bb3
  41d1a9:	jae    0x41d1b8
  41d1ab:	add    bh,dl
  41d1ad:	outs   dx,BYTE PTR ds:[esi]
  41d1ae:	push   edi
  41d1af:	pop    edx
  41d1b0:	mov    bl,0x10
  41d1b2:	cs arpl bx,sp
  41d1b5:	xchg   ebx,eax
  41d1b6:	cmc    
  41d1b7:	shl    DWORD PTR [ecx],1
  41d1b9:	mov    ah,0x60
  41d1bb:	jle    0x41d206
  41d1bd:	push   eax
  41d1be:	mov    edx,0xd4d5dd83
  41d1c3:	sub    al,0x89
  41d1c5:	xchg   DWORD PTR [ecx+0x189746c7],eax
  41d1cb:	scas   al,BYTE PTR es:[edi]
  41d1cc:	dec    ecx
  41d1cd:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41d1cf:	mov    ds:0xead90ed9,eax
  41d1d4:	and    eax,0x43c6f79
  41d1d9:	add    eax,0x9e6edba6
  41d1de:	jnp    0x41d202
  41d1e0:	or     eax,DWORD PTR [ebp+0x1c17695a]
  41d1e6:	jp     0x41d1ed
  41d1e8:	cs or  eax,eax
  41d1eb:	ja     0x41d1c7
  41d1ed:	add    eax,DWORD PTR [edx*8-0x5ed026bc]
  41d1f4:	and    al,0x2f
  41d1f6:	les    ecx,FWORD PTR [esi-0x2b]
  41d1f9:	mov    ?,WORD PTR [ebp+0x71]
  41d1fc:	enter  0xff59,0x84
  41d200:	into   
  41d201:	(bad)  
  41d202:	sbb    DWORD PTR [edx+0x37],edi
  41d205:	je     0x41d262
  41d207:	test   eax,0xd579aeb4
  41d20c:	retf   
  41d20d:	and    al,0x9d
  41d20f:	outs   dx,BYTE PTR ds:[esi]
  41d210:	jecxz  0x41d212
  41d212:	inc    esp
  41d213:	jno    0x41d1ef
  41d215:	cdq    
  41d216:	inc    esi
  41d217:	and    ah,BYTE PTR [edx+0x3d]
  41d21a:	or     bh,bh
  41d21c:	jmp    0x402389e5
  41d221:	adc    ebx,esp
  41d223:	(bad)  
  41d224:	mov    dh,0xb4
  41d226:	push   esp
  41d227:	out    dx,eax
  41d228:	test   ecx,0xfe6e7e99
  41d22e:	inc    ebp
  41d22f:	jg     0x41d27a
  41d231:	jbe    0x41d213
  41d233:	push   ss
  41d234:	push   0x6154604d
  41d239:	retf   
  41d23a:	or     DWORD PTR [ebx+eax*1-0x2d774e9d],edx
  41d241:	inc    edx
  41d242:	stos   DWORD PTR es:[edi],eax
  41d243:	dec    ecx
  41d244:	push   ss
  41d245:	imul   ebp,DWORD PTR [ecx],0xffffffff
  41d248:	cmp    edx,eax
  41d24a:	or     ebx,ebx
  41d24c:	sbb    ebx,DWORD PTR [edx]
  41d24e:	call   0x2291:0x91583b1
  41d255:	mov    bl,0x2b
  41d257:	loopne 0x41d277
  41d259:	pop    eax
  41d25a:	std    
  41d25b:	clc    
  41d25c:	fmul   st,st(3)
  41d25e:	jecxz  0x41d277
  41d260:	cld    
  41d261:	(bad)  
  41d262:	sbb    dh,BYTE PTR [ebp-0x338d23a4]
  41d268:	pop    ecx
  41d269:	mov    cl,0x59
  41d26b:	push   esi
  41d26c:	inc    ebx
  41d26d:	imul   eax,DWORD PTR [ebp+0x58],0xca307711
  41d274:	sbb    DWORD PTR [esi+eiz*4+0x47],ecx
  41d278:	or     al,0x27
  41d27a:	hlt    
  41d27b:	xor    DWORD PTR [ecx+0x674ae0c7],esi
  41d281:	mov    eax,0x982e57f3
  41d286:	jnp    0x41d256
  41d288:	mov    al,0x19
  41d28a:	outs   dx,DWORD PTR ds:[esi]
  41d28b:	inc    eax
  41d28c:	imul   edi,DWORD PTR ds:0xce0218f0,0xfbc93404
  41d296:	fcmovnb st,st(0)
  41d298:	fisttp QWORD PTR [edi+0x59]
  41d29b:	cs pop esi
  41d29d:	div    BYTE PTR [edi+0x13]
  41d2a0:	bswap  edi
  41d2a2:	outs   dx,BYTE PTR ds:[esi]
  41d2a3:	push   es
  41d2a4:	das    
  41d2a5:	mov    dl,dh
  41d2a7:	into   
  41d2a8:	xchg   ecx,eax
  41d2a9:	mov    esi,0x5d3f974d
  41d2ae:	xchg   ebp,eax
  41d2af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2b0:	mov    cl,0x64
  41d2b2:	cmp    eax,0x2867a401
  41d2b7:	sbb    cl,BYTE PTR [ebx]
  41d2b9:	lock jg 0x41d2b4
  41d2bc:	int3   
  41d2bd:	xchg   edi,eax
  41d2be:	pop    ss
  41d2bf:	ror    DWORD PTR [esi+0x6dcc04ca],cl
  41d2c5:	push   0x20
  41d2c7:	pop    ss
  41d2c8:	xchg   edx,eax
  41d2c9:	pop    esi
  41d2ca:	xlat   BYTE PTR ds:[ebx]
  41d2cb:	scas   al,BYTE PTR es:[edi]
  41d2cc:	jecxz  0x41d2fe
  41d2ce:	loop   0x41d2cb
  41d2d0:	dec    ecx
  41d2d1:	xor    DWORD PTR [ebp-0x6f],ebp
  41d2d4:	ret    
  41d2d5:	jecxz  0x41d28d
  41d2d7:	mov    al,ds:0xff2bd995
  41d2dc:	retf   0x9c3d
  41d2df:	dec    eax
  41d2e0:	cmp    eax,0x86c123fc
  41d2e5:	fmulp  st(1),st
  41d2e7:	and    al,0x1a
  41d2e9:	or     ebp,DWORD PTR [edi]
  41d2eb:	sbb    ch,cl
  41d2ed:	and    al,0x4f
  41d2ef:	sti    
  41d2f0:	push   esp
  41d2f1:	mov    ds:0xff6adbfe,al
  41d2f6:	std    
  41d2f7:	(bad)  
  41d2f8:	cli    
  41d2f9:	mov    ebx,0x22e378a2
  41d2fe:	ins    DWORD PTR es:[edi],dx
  41d2ff:	add    dh,dl
  41d301:	pop    ebx
  41d302:	push   ecx
  41d303:	dec    ebp
  41d304:	cmp    edx,ebx
  41d306:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d307:	mov    al,0xe2
  41d309:	(bad)  
  41d30b:	es test al,0x61
  41d30e:	or     al,0xf9
  41d310:	pop    ebp
  41d311:	mov    ebp,0x324030e2
  41d316:	jg     0x41d361
  41d318:	adc    DWORD PTR [edi+0x69],ecx
  41d31b:	jmp    0x41d2bf
  41d31d:	sbb    dh,bh
  41d31f:	inc    esp
  41d320:	xor    al,0x3b
  41d322:	push   ecx
  41d323:	je     0x41d32d
  41d325:	jnp    0x41d2f0
  41d327:	xor    bh,0xb2
  41d32a:	(bad)  
  41d32b:	jg     0x41d2fa
  41d32d:	cdq    
  41d32e:	sbb    ax,WORD PTR [eax-0x5ff23617]
  41d335:	fisttp QWORD PTR [ebx+0x1]
  41d338:	add    al,bh
  41d33a:	add    al,0x0
  41d33c:	add    al,dh
  41d33e:	pop    ebx
  41d33f:	call   0x823f6977
  41d344:	popf   
  41d345:	mov    dl,0x41
  41d347:	mov    eax,DWORD PTR [edx-0x119b5a1]
  41d34d:	sahf   
  41d34e:	xor    edx,ebx
  41d350:	pop    ebp
  41d351:	fbld   TBYTE PTR [eax]
  41d353:	aaa    
  41d354:	add    BYTE PTR [ebp-0x74030215],0x38
  41d35b:	jg     0x41d2dd
  41d35d:	pop    ebx
  41d35e:	xlat   BYTE PTR ds:[ebx]
  41d35f:	ss jne 0x41d316
  41d362:	cwde   
  41d363:	push   ecx
  41d364:	outs   dx,DWORD PTR ds:[esi]
  41d365:	shl    BYTE PTR [edx],1
  41d367:	js     0x41d3d4
  41d369:	push   edi
  41d36a:	sbb    esi,DWORD PTR [edx-0x771f8373]
  41d370:	out    dx,al
  41d371:	fs push ebp
  41d373:	retf   0x4eb
  41d376:	inc    esi
  41d377:	inc    DWORD PTR [ecx+0x3a38e0f2]
  41d37d:	or     esp,edx
  41d37f:	cmp    bl,BYTE PTR [eax+0x5abe9925]
  41d385:	add    eax,0x229c20fc
  41d38a:	test   eax,0x6cdba7b3
  41d38f:	cli    
  41d390:	or     dl,BYTE PTR [edi+edx*2+0x1c0f3d1d]
  41d397:	cmp    eax,ecx
  41d399:	sub    al,BYTE PTR [ecx+0x400e506c]
  41d39f:	shr    BYTE PTR ds:0xa6e9c4dd,cl
  41d3a5:	ror    BYTE PTR [edx+0x25e55dde],1
  41d3ab:	fstp   QWORD PTR [edi]
  41d3ad:	pop    eax
  41d3ae:	mov    ebx,0x41f1ace8
  41d3b3:	xor    eax,0x3e319212
  41d3b8:	cmp    DWORD PTR [edx],esi
  41d3ba:	xor    al,0x68
  41d3bc:	in     al,0xe7
  41d3be:	mov    ch,0x4b
  41d3c0:	fdiv   QWORD PTR [ecx-0x33]
  41d3c3:	ficomp WORD PTR [edi+0x65346c3]
  41d3c9:	pop    ebp
  41d3ca:	and    eax,0x522155b4
  41d3cf:	hlt    
  41d3d0:	(bad)  
  41d3d1:	out    dx,eax
  41d3d2:	daa    
  41d3d3:	mov    BYTE PTR [esp+esi*2-0x36],dl
  41d3d7:	pushf  
  41d3d8:	sub    BYTE PTR [ebx],ch
  41d3da:	fisttp WORD PTR [ebx]
  41d3dc:	cld    
  41d3dd:	jp     0x41d3ec
  41d3df:	loop   0x41d41f
  41d3e1:	push   eax
  41d3e2:	mov    edi,0xb758c5a1
  41d3e7:	sub    cl,BYTE PTR [ebx]
  41d3e9:	dec    edx
  41d3ea:	or     al,0xf1
  41d3ec:	mov    edi,0x7566442
  41d3f1:	xchg   ebx,eax
  41d3f2:	(bad)  
  41d3f3:	jle    0x41d45d
  41d3f5:	pop    ds
  41d3f6:	jmp    0x89ca:0xf0dd599a
  41d3fd:	mov    edx,esp
  41d3ff:	dec    esi
  41d400:	mov    al,0x2a
  41d402:	adc    al,0x4c
  41d404:	mov    esp,0x36b22828
  41d409:	in     eax,dx
  41d40a:	arpl   WORD PTR [esi+0x68fdbc8d],dx
  41d410:	int3   
  41d411:	xchg   edi,eax
  41d412:	fimul  WORD PTR ds:0x81a76243
  41d418:	cmp    dl,bl
  41d41a:	push   eax
  41d41b:	push   ebx
  41d41c:	ret    0xb1eb
  41d41f:	cmp    eax,0x5ba99e98
  41d424:	cmp    ch,dh
  41d426:	xchg   esi,ecx
  41d428:	sbb    al,0x62
  41d42a:	repz jge 0x41d445
  41d42d:	in     al,dx
  41d42e:	pop    ss
  41d42f:	bound  edx,QWORD PTR ds:0xf390a651
  41d435:	xchg   esi,eax
  41d436:	mov    ds:0xea346ad4,eax
  41d43b:	push   es
  41d43c:	and    DWORD PTR [edi],edi
  41d43e:	je     0x41d3c1
  41d440:	mov    ah,0x3f
  41d442:	dec    ebp
  41d443:	in     al,dx
  41d444:	sar    DWORD PTR [ecx],0x76
  41d447:	ds add eax,0x9709edc1
  41d44d:	pop    ebx
  41d44e:	add    BYTE PTR [ebp-0x7d01cf47],cl
  41d454:	gs je  0x41d42c
  41d457:	into   
  41d458:	cld    
  41d459:	out    0x6b,al
  41d45b:	cmp    ebx,ebx
  41d45d:	test   BYTE PTR [eax+edx*4-0x1b],ch
  41d461:	push   es
  41d462:	std    
  41d463:	push   edi
  41d464:	bound  ecx,QWORD PTR [ecx-0x71]
  41d467:	xchg   esi,eax
  41d468:	mov    ecx,0xc0e4dc1c
  41d46d:	push   0xffffff97
  41d46f:	fs and eax,0x857e10ad
  41d475:	(bad)  
  41d476:	xlat   BYTE PTR ds:[ebx]
  41d477:	add    BYTE PTR [bp+di-0x3f73],dh
  41d47c:	fistp  QWORD PTR [edi+0xb]
  41d47f:	mov    ch,0xfb
  41d481:	cmc    
  41d482:	fiadd  DWORD PTR [ecx-0x2bd4efc2]
  41d488:	pop    eax
  41d489:	das    
  41d48a:	dec    ebp
  41d48b:	arpl   WORD PTR [edi-0x1aa9f8f],di
  41d491:	frstor [esi]
  41d493:	jecxz  0x41d418
  41d495:	sbb    esi,DWORD PTR [eax-0x42]
  41d498:	sbb    BYTE PTR [edx],al
  41d49a:	mov    es,WORD PTR [eax+0x14]
  41d49d:	popf   
  41d49e:	out    dx,al
  41d49f:	inc    edx
  41d4a0:	sub    al,0x70
  41d4a2:	loop   0x41d4d2
  41d4a4:	call   0x999b:0x5cba06a5
  41d4ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4ac:	call   0xd399:0x126513a1
  41d4b3:	mov    ah,0x12
  41d4b5:	xchg   esi,eax
  41d4b6:	sbb    bl,BYTE PTR [eax+0x4a]
  41d4b9:	xchg   BYTE PTR ds:[eax+ebx*1],dl
  41d4bd:	lds    eax,FWORD PTR [edi-0x28142597]
  41d4c3:	ror    DWORD PTR [eax+0x241c492c],0x69
  41d4ca:	outs   dx,DWORD PTR ds:[esi]
  41d4cb:	mov    WORD PTR ds:0x56f52571,ss
  41d4d1:	and    edi,DWORD PTR [edi-0x6f]
  41d4d4:	adc    DWORD PTR [esi+ebx*4-0x21277042],edx
  41d4db:	mov    esi,DWORD PTR [esi+0x53ad8297]
  41d4e1:	sub    ebx,DWORD PTR [ecx+0x3a46f2cc]
  41d4e7:	popa   
  41d4e8:	adc    BYTE PTR [eax-0x46],0x14
  41d4ec:	jnp    0x41d4de
  41d4ee:	es inc esi
  41d4f0:	lods   eax,DWORD PTR ds:[esi]
  41d4f1:	mov    ecx,0x168990fb
  41d4f6:	aaa    
  41d4f7:	xchg   ebx,eax
  41d4f8:	aas    
  41d4f9:	mov    bl,0x2a
  41d4fb:	sub    esp,edx
  41d4fd:	pop    eax
  41d4fe:	dec    edi
  41d4ff:	inc    edx
  41d500:	adc    al,0x29
  41d502:	repnz cmp ebp,ecx
  41d505:	loope  0x41d54f
  41d507:	cwde   
  41d508:	push   es
  41d509:	inc    ecx
  41d50a:	xchg   DWORD PTR [esi+0xab24094],esi
  41d510:	addr16 in al,0x91
  41d513:	xchg   DWORD PTR [ecx+0x63798f1],ecx
  41d519:	mov    bl,dh
  41d51b:	cwde   
  41d51c:	push   edi
  41d51d:	cld    
  41d51e:	push   0xffffff97
  41d520:	jge    0x41d4a6
  41d522:	jns    0x41d4be
  41d524:	xchg   DWORD PTR [ecx],eax
  41d526:	pushf  
  41d527:	adc    al,0xc2
  41d529:	mov    BYTE PTR [esi+0x121a5a18],al
  41d52f:	dec    ebx
  41d530:	pushf  
  41d531:	push   edx
  41d532:	shl    BYTE PTR [edx],0xbd
  41d535:	pop    esi
  41d536:	cmp    ecx,DWORD PTR ds:[ecx+0x64]
  41d53a:	adc    esi,DWORD PTR [ebx+edx*4]
  41d53d:	pop    es
  41d53e:	scas   eax,DWORD PTR es:[edi]
  41d53f:	ffree  st(4)
  41d541:	test   BYTE PTR [edx+0x5a34f7a1],0x50
  41d548:	sub    bh,BYTE PTR [ecx+esi*4+0x5342037f]
  41d54f:	or     ax,0xea38
  41d553:	es adc eax,0x61305abf
  41d559:	scas   eax,DWORD PTR es:[edi]
  41d55a:	sbb    al,0x1
  41d55c:	stc    
  41d55d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d55e:	inc    ebp
  41d55f:	(bad)  
  41d560:	arpl   WORD PTR [ecx],ax
  41d562:	sub    BYTE PTR [ebx],ch
  41d564:	mov    al,ds:0xb521e68f
  41d569:	(bad)  [ecx-0x2212f0d2]
  41d56f:	ret    0xe1b3
  41d572:	in     eax,dx
  41d573:	mov    ds:0xf8c30077,eax
  41d578:	mov    ecx,0xa95fbe7f
  41d57d:	adc    eax,0xdda5022c
  41d582:	inc    edi
  41d583:	scas   al,BYTE PTR es:[edi]
  41d584:	js     0x41d52a
  41d586:	fadd   st(1),st
  41d588:	aam    0x7
  41d58a:	jp     0x41d512
  41d58c:	int3   
  41d58d:	test   BYTE PTR [eax-0x55],ah
  41d590:	loop   0x41d571
  41d592:	test   BYTE PTR [ebp-0x74],dh
  41d595:	dec    edi
  41d596:	dec    eax
  41d597:	xor    DWORD PTR [eax-0x73],esi
  41d59a:	or     BYTE PTR [esi+0x13],0x3c
  41d59e:	into   
  41d59f:	push   es
  41d5a0:	dec    ecx
  41d5a1:	xor    cl,BYTE PTR ds:0x487dd01a
  41d5a7:	ret    0x66dc
  41d5aa:	add    DWORD PTR [edx],ecx
  41d5ac:	jecxz  0x41d574
  41d5ae:	pop    edx
  41d5af:	ds pushf 
  41d5b1:	xchg   edi,eax
  41d5b2:	daa    
  41d5b3:	hlt    
  41d5b4:	push   0x6a2b7421
  41d5b9:	in     eax,dx
  41d5ba:	in     eax,dx
  41d5bb:	inc    ecx
  41d5bc:	mov    DWORD PTR [ecx+0x4d4111ed],edx
  41d5c2:	out    dx,al
  41d5c3:	fstp   TBYTE PTR [ebx+0x5]
  41d5c6:	inc    edx
  41d5c7:	xchg   edx,eax
  41d5c8:	out    dx,al
  41d5c9:	dec    esp
  41d5ca:	inc    DWORD PTR [ebx+0x5c]
  41d5cd:	popf   
  41d5ce:	jno    0x41d606
  41d5d0:	ja     0x41d5b2
  41d5d2:	lods   eax,DWORD PTR ds:[esi]
  41d5d3:	mov    esi,0x98a5f98b
  41d5d8:	or     ebp,ecx
  41d5da:	das    
  41d5db:	xchg   ecx,eax
  41d5dc:	jge    0x41d58a
  41d5de:	adc    eax,ecx
  41d5e0:	mov    ecx,0x1e822f6b
  41d5e5:	push   DWORD PTR [ebx+0xe]
  41d5e8:	dec    esi
  41d5e9:	aaa    
  41d5ea:	adc    al,0x9c
  41d5ec:	leave  
  41d5ed:	addr16 cmc 
  41d5ef:	out    0x14,eax
  41d5f1:	bound  esp,QWORD PTR [edx]
  41d5f3:	sub    BYTE PTR [esi],al
  41d5f5:	adc    cl,al
  41d5f7:	xor    BYTE PTR [edi-0x40396b08],al
  41d5fd:	xor    DWORD PTR [edi+edi*1+0x1b9139d0],ebx
  41d604:	stos   DWORD PTR es:[edi],eax
  41d605:	xchg   esi,eax
  41d606:	dec    ebp
  41d607:	(bad)  
  41d608:	sbb    DWORD PTR [ebx-0x34d5cee3],ebx
  41d60e:	push   ss
  41d60f:	scas   eax,DWORD PTR es:[edi]
  41d610:	lea    ebp,[edx-0xa467d02]
  41d616:	ret    0x66d4
  41d619:	mov    bl,ch
  41d61b:	sbb    DWORD PTR [ebp+ecx*2-0x41],ebp
  41d61f:	pop    edi
  41d620:	enter  0x67f3,0x5c
  41d624:	ins    DWORD PTR es:[edi],dx
  41d625:	sub    DWORD PTR [esi-0x610818c4],esi
  41d62b:	adc    ch,BYTE PTR [eax]
  41d62d:	repz cmp esi,eax
  41d630:	adc    al,0x91
  41d632:	sub    edx,esp
  41d634:	cmp    esi,DWORD PTR [esp+ecx*1-0x13ee4b35]
  41d63b:	sar    BYTE PTR [ebx],0xd3
  41d63e:	push   ss
  41d63f:	mov    ecx,0x3df56574
  41d644:	mov    ds:0x28a4a404,eax
  41d649:	mov    ecx,0xe6e5bf1e
  41d64e:	(bad)  
  41d64f:	stc    
  41d650:	(bad)  [ebp-0x621275d6]
  41d656:	push   esi
  41d657:	jo     0x41d60f
  41d659:	or     ebp,edi
  41d65b:	or     ebx,0xa918b9cc
  41d661:	and    edx,DWORD PTR [esi+0x11]
  41d664:	xor    al,0xb3
  41d666:	jae    0x41d641
  41d668:	mov    edx,0xf741f9e8
  41d66e:	sub    ch,BYTE PTR [ecx]
  41d670:	add    eax,0xb657d34b
  41d675:	fisub  DWORD PTR [edx+0x5d109b0f]
  41d67b:	ret    
  41d67c:	mov    al,BYTE PTR [edx+0x3d]
  41d67f:	inc    edx
  41d680:	jmp    0xe0fd:0xb038a760
  41d687:	test   DWORD PTR [ebp-0x21dc33e3],eax
  41d68d:	dec    edi
  41d68e:	dec    ebx
  41d68f:	leave  
  41d690:	dec    edi
  41d691:	icebp  
  41d692:	jae    0x41d707
  41d694:	mov    ah,0xf6
  41d696:	sar    BYTE PTR [esp+ebx*8+0xb2e59a3],0x13
  41d69e:	jmp    0xc9d95dc7
  41d6a3:	call   0x3e7a4462
  41d6a8:	mov    ebx,0xd3312cd0
  41d6ad:	scas   eax,DWORD PTR es:[edi]
  41d6ae:	jl     0x41d6ea
  41d6b0:	into   
  41d6b1:	pop    edi
  41d6b2:	aas    
  41d6b3:	outs   dx,DWORD PTR ds:[esi]
  41d6b4:	nop
  41d6b5:	push   ebp
  41d6b6:	aam    0xbb
  41d6b8:	cs sbb cl,BYTE PTR fs:[esi+0x3e]
  41d6bd:	xor    eax,0xca85ec28
  41d6c2:	pop    ds
  41d6c3:	(bad)  
  41d6c4:	sub    BYTE PTR [eax],0x41
  41d6c7:	cli    
  41d6c8:	pop    ecx
  41d6c9:	test   DWORD PTR [edi+0x69],0xa397df10
  41d6d0:	xchg   dl,dh
  41d6d2:	shl    BYTE PTR [eax+ecx*4],cl
  41d6d5:	jge    0x41d6cd
  41d6d7:	pop    es
  41d6d8:	add    al,0xe9
  41d6da:	mov    BYTE PTR [ebp-0x2],dl
  41d6dd:	cmc    
  41d6de:	sub    DWORD PTR [edx+0x64574c17],edi
  41d6e4:	jmp    0x2f78e860
  41d6e9:	and    dl,BYTE PTR [edi-0x62f336ec]
  41d6ef:	mov    ebp,0xedd9fca5
  41d6f4:	fbld   TBYTE PTR [ebx]
  41d6f6:	in     al,0xd5
  41d6f8:	sub    ebp,DWORD PTR [edi+0x731dbcd7]
  41d6fe:	sbb    ebx,esi
  41d700:	(bad)  
  41d701:	(bad)  
  41d702:	cmp    eax,0x3549db67
  41d707:	sub    al,0x52
  41d709:	fistp  QWORD PTR [edi]
  41d70b:	cmp    edi,DWORD PTR [esi]
  41d70d:	rol    BYTE PTR gs:[esi],1
  41d710:	sub    bh,bl
  41d712:	dec    cl
  41d714:	(bad)  
  41d715:	test   eax,0x59973182
  41d71a:	xchg   ebx,ebx
  41d71c:	adc    esp,eax
  41d71e:	lods   eax,DWORD PTR ds:[esi]
  41d71f:	xor    ebp,ebx
  41d721:	sub    eax,0x406d77a0
  41d726:	push   ebx
  41d727:	ins    BYTE PTR es:[edi],dx
  41d728:	xlat   BYTE PTR ds:[ebx]
  41d729:	dec    edi
  41d72a:	mov    esp,0x5a0b76bd
  41d72f:	push   eax
  41d730:	popf   
  41d731:	dec    eax
  41d732:	dec    ebx
  41d734:	loop   0x41d7ae
  41d736:	mov    edi,0x7e33c163
  41d73b:	cmp    eax,0x63a83b5e
  41d740:	les    edx,FWORD PTR [ebp+0x7d]
  41d743:	js     0x41d728
  41d745:	in     al,dx
  41d746:	cmp    BYTE PTR [ebp+0x584051dd],ch
  41d74c:	mov    BYTE PTR [ebx+0x777a3e31],cl
  41d752:	das    
  41d753:	cmovge esi,edi
  41d756:	inc    esp
  41d757:	test   DWORD PTR [ebp-0x45],edx
  41d75a:	gs addr16 inc eax
  41d75d:	mov    bl,0x65
  41d75f:	xor    dh,al
  41d761:	pop    ebp
  41d762:	xor    eax,0x9cbb489a
  41d767:	mov    cl,0xc1
  41d769:	pop    es
  41d76a:	push   esp
  41d76b:	inc    eax
  41d76d:	stos   BYTE PTR es:[edi],al
  41d76e:	cmp    eax,0x59d148de
  41d773:	push   0x35
  41d775:	sbb    BYTE PTR [edx+esi*8+0x3e],0x5b
  41d77a:	adc    cl,BYTE PTR [ecx-0x4ab17f46]
  41d780:	xchg   BYTE PTR [ebx-0x60],bl
  41d783:	mov    bh,0x3a
  41d785:	mov    DWORD PTR [ebx+0x214ddb9c],eax
  41d78b:	into   
  41d78c:	jo     0x41d78b
  41d78e:	mov    al,ds:0x571b2742
  41d793:	mov    al,0x38
  41d795:	xchg   esi,eax
  41d796:	cs out 0x27,al
  41d799:	mov    eax,0x4295d5ea
  41d79e:	pop    edx
  41d79f:	(bad)  
  41d7a0:	fldenv [edi-0x67]
  41d7a3:	push   esp
  41d7a4:	pushf  
  41d7a5:	xchg   ebx,eax
  41d7a6:	add    al,0x33
  41d7a8:	xor    ah,BYTE PTR [ecx]
  41d7aa:	faddp  st(1),st
  41d7ac:	fwait
  41d7ad:	mov    edx,0x5bfb4051
  41d7b2:	inc    ebp
  41d7b3:	out    0x3d,eax
  41d7b5:	push   esp
  41d7b6:	sub    BYTE PTR [ecx+0x26],0xe0
  41d7ba:	sahf   
  41d7bb:	stos   DWORD PTR es:[edi],eax
  41d7bc:	fdivr  st(0),st
  41d7be:	ins    DWORD PTR es:[edi],dx
  41d7bf:	inc    esi
  41d7c0:	inc    edi
  41d7c1:	std    
  41d7c2:	sub    eax,0x7918a23d
  41d7c7:	arpl   WORD PTR [ecx+0x6b],dx
  41d7ca:	inc    ebp
  41d7cb:	mov    BYTE PTR [edx+0x6c],ch
  41d7ce:	sub    al,0xe7
  41d7d0:	push   ds
  41d7d1:	pusha  
  41d7d2:	inc    BYTE PTR [esi]
  41d7d4:	push   ebx
  41d7d5:	push   es
  41d7d6:	mov    eax,ds:0xd4492cf1
  41d7db:	imul   ebx,esp,0xffffffce
  41d7de:	fidivr WORD PTR [ecx+0x30b7770e]
  41d7e4:	cwde   
  41d7e5:	(bad)  
  41d7e6:	jns    0x41d785
  41d7e8:	cmp    al,0x7c
  41d7ea:	clc    
  41d7eb:	rcr    BYTE PTR [esi+0x36],cl
  41d7ee:	mov    ch,0x73
  41d7f0:	pop    ds
  41d7f1:	rcl    BYTE PTR [esi+0x796b111b],1
  41d7f7:	in     eax,dx
  41d7f8:	pop    es
  41d7f9:	or     esp,DWORD PTR [eax+ebp*1-0x1f]
  41d7fd:	scas   al,BYTE PTR es:[edi]
  41d7fe:	xchg   esp,eax
  41d7ff:	add    dl,BYTE PTR [edi+0x2a8d9a6c]
  41d805:	vmwrite esp,DWORD PTR [ebx+0x2342e022]
  41d80c:	push   ebp
  41d80d:	out    dx,eax
  41d80e:	out    dx,al
  41d80f:	mov    al,0x4d
  41d811:	ret    0xbc24
  41d814:	pop    esp
  41d815:	jo     0x41d896
  41d817:	loope  0x41d7e6
  41d819:	cmp    DWORD PTR [edi],esp
  41d81b:	adc    al,0xf4
  41d81d:	push   esi
  41d81e:	scas   al,BYTE PTR es:[edi]
  41d81f:	jnp    0x41d829
  41d821:	ror    ebx,1
  41d823:	scas   al,BYTE PTR es:[edi]
  41d824:	mov    edx,0xbc8ca7d2
  41d829:	pop    edx
  41d82a:	mov    edx,0xd94852f0
  41d82f:	xchg   bh,bh
  41d831:	pop    esp
  41d832:	cmp    ebp,DWORD PTR [esi+0x10ae2dd]
  41d838:	xchg   ecx,eax
  41d839:	jmp    0x25bdcad9
  41d83e:	sub    bh,bl
  41d840:	aam    0xa4
  41d842:	lea    ebp,ds:[ecx]
  41d845:	aad    0x50
  41d847:	add    DWORD PTR [eax],eax
  41d849:	clc    
  41d84a:	add    al,0x0
  41d84c:	add    BYTE PTR [esp+esi*8],bh
  41d84f:	lds    ecx,FWORD PTR [esi]
  41d851:	lods   al,BYTE PTR ds:[esi]
  41d852:	retf   0x6cef
  41d855:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d856:	hlt    
  41d857:	scas   eax,DWORD PTR es:[edi]
  41d858:	push   0xffffffe8
  41d85a:	aas    
  41d85b:	les    esp,FWORD PTR [esi]
  41d85d:	adc    bh,BYTE PTR [edi]
  41d85f:	mov    ss,ebx
  41d861:	pop    ebx
  41d862:	mov    ds:0x6b571b55,al
  41d867:	xchg   ecx,eax
  41d868:	jle    0x41d86f
  41d86a:	adc    al,0xca
  41d86c:	arpl   WORD PTR [ecx+0x9],cx
  41d86f:	sbb    ecx,DWORD PTR [edx-0x133fa5f]
  41d875:	mov    ch,0xa5
  41d877:	pop    ebp
  41d878:	lods   al,BYTE PTR ds:[esi]
  41d879:	cmp    BYTE PTR [eax+eax*8-0x2b0c8e60],ah
  41d880:	cmp    BYTE PTR [ebp+0x5901f7c9],bl
  41d886:	lahf   
  41d887:	mov    ch,0xec
  41d889:	inc    edi
  41d88a:	push   edx
  41d88b:	pop    ebx
  41d88c:	fs (bad) 
  41d88e:	inc    esp
  41d88f:	popf   
  41d890:	shr    BYTE PTR ds:0x288a9312,0xe1
  41d897:	stos   BYTE PTR es:[edi],al
  41d898:	aam    0x4e
  41d89a:	add    al,0xf1
  41d89c:	adc    edx,ebx
  41d89e:	loope  0x41d8a4
  41d8a0:	pushf  
  41d8a1:	add    dh,BYTE PTR [esi-0x1]
  41d8a4:	sub    BYTE PTR [esi],ah
  41d8a6:	adc    esi,ebp
  41d8a8:	add    al,0xea
  41d8aa:	rcr    BYTE PTR ds:0xafd0df66,1
  41d8b0:	sub    BYTE PTR [edx-0x16da2a11],cl
  41d8b6:	hlt    
  41d8b7:	call   0x9e5c:0x57e39a60
  41d8be:	das    
  41d8bf:	push   ss
  41d8c0:	sub    BYTE PTR [esi-0x1c87a6cc],0x32
  41d8c7:	test   ebx,0x72f391b4
  41d8cd:	xchg   ebx,eax
  41d8ce:	cmp    ch,ah
  41d8d0:	ret    0xef33
  41d8d3:	ins    BYTE PTR es:[edi],dx
  41d8d4:	xor    al,0x69
  41d8d6:	das    
  41d8d7:	push   edx
  41d8d8:	je     0x41d876
  41d8da:	mov    ecx,0xf978875e
  41d8df:	xor    BYTE PTR [ebp-0x60afe38b],ch
  41d8e5:	ficomp WORD PTR [ebp+edx*1+0x5e]
  41d8e9:	jno    0x41d880
  41d8eb:	pushf  
  41d8ec:	or     DWORD PTR [ebx-0x19],eax
  41d8ef:	xlat   BYTE PTR ds:[ebx]
  41d8f0:	aas    
  41d8f1:	jmp    0x41d905
  41d8f3:	xchg   esi,eax
  41d8f4:	xor    eax,0xfa6e77d2
  41d8f9:	popf   
  41d8fa:	mov    dh,0xfb
  41d8fc:	sbb    ecx,DWORD PTR [eax+0x44e40790]
  41d902:	aam    0x10
  41d904:	push   eax
  41d905:	cmp    ch,BYTE PTR [edx]
  41d907:	stos   BYTE PTR es:[edi],al
  41d908:	ins    BYTE PTR es:[edi],dx
  41d909:	xchg   edi,eax
  41d90a:	call   0xcf97:0x77b782c7
  41d911:	xchg   esi,eax
  41d912:	inc    ebp
  41d913:	not    edi
  41d915:	dec    edi
  41d916:	pop    ebx
  41d917:	fwait
  41d918:	xchg   BYTE PTR [edi-0x59d6b26e],bh
  41d91e:	xor    ebx,0xffffff94
  41d921:	mov    ch,0x87
  41d923:	push   ebp
  41d924:	out    dx,al
  41d925:	push   ebx
  41d926:	ins    DWORD PTR es:[edi],dx
  41d927:	sbb    bl,BYTE PTR [esi+0x50aff84e]
  41d92d:	dec    edx
  41d92e:	jne    0x41d8e1
  41d930:	xor    ah,dl
  41d932:	dec    esi
  41d933:	mov    ecx,eax
  41d935:	cwde   
  41d936:	jl     0x41d9b0
  41d938:	inc    ebx
  41d939:	lea    edx,[ecx-0x1d2b94ff]
  41d93f:	mov    ah,BYTE PTR [ecx-0x31]
  41d942:	lahf   
  41d943:	adc    DWORD PTR [ecx-0x6f95d81],esi
  41d949:	mov    al,0xed
  41d94b:	out    dx,eax
  41d94c:	and    al,0xa
  41d94e:	(bad)  
  41d94f:	dec    edi
  41d950:	scas   al,BYTE PTR es:[edi]
  41d951:	les    eax,FWORD PTR [ebx-0x3ac784c9]
  41d957:	xchg   ecx,eax
  41d958:	and    bh,BYTE PTR [eax+0x707c1c6a]
  41d95e:	repnz inc ebp
  41d960:	ror    edx,0xff
  41d963:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d964:	out    0xf1,eax
  41d966:	inc    ecx
  41d967:	cwde   
  41d968:	xchg   esp,eax
  41d969:	aam    0x9e
  41d96b:	push   es
  41d96c:	fbstp  TBYTE PTR [edi+0x55]
  41d96f:	push   esi
  41d970:	popf   
  41d971:	jl     0x41d9a2
  41d973:	pop    ds
  41d974:	iret   
  41d975:	fstp   QWORD PTR [ebx-0x64c2aa61]
  41d97b:	mov    eax,ds:0x2d65ea48
  41d980:	pop    esi
  41d981:	inc    ebp
  41d982:	lea    esp,[esi+0x7f]
  41d985:	mov    ebx,edi
  41d987:	mov    al,ds:0x6a84c768
  41d98c:	mov    cl,0x50
  41d98e:	out    dx,eax
  41d98f:	and    BYTE PTR [esi+0xfb8eb85],dh
  41d995:	jp     0x41d92f
  41d997:	push   edx
  41d998:	push   ebp
  41d999:	adc    eax,0x4b4d1b51
  41d99e:	mov    ecx,0xf48d9861
  41d9a3:	xchg   ecx,eax
  41d9a4:	fwait
  41d9a5:	adc    ah,BYTE PTR [edx+0x34cadafe]
  41d9ab:	ret    0x7afc
  41d9ae:	stc    
  41d9af:	sub    BYTE PTR [ebx],ah
  41d9b1:	daa    
  41d9b2:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9b4:	mov    ds:0x3c195797,eax
  41d9b9:	mov    esi,0xb54d3c53
  41d9be:	mov    BYTE PTR [ebp-0x4],ah
  41d9c1:	xchg   edx,eax
  41d9c2:	fistp  QWORD PTR [ebx-0x1395e935]
  41d9c8:	sub    dl,BYTE PTR [edi]
  41d9ca:	mov    eax,0x651b078
  41d9cf:	dec    esp
  41d9d0:	fist   DWORD PTR [esi+0xa]
  41d9d3:	nop
  41d9d4:	xor    eax,0x97c5e846
  41d9d9:	jg     0x41d9f2
  41d9db:	hlt    
  41d9dc:	jno    0x41d972
  41d9de:	fisubr WORD PTR [esi+0x323f694b]
  41d9e4:	sbb    ch,0xdb
  41d9e7:	pop    edx
  41d9e8:	pop    esp
  41d9e9:	cmp    BYTE PTR [ecx],al
  41d9eb:	sti    
  41d9ec:	adc    DWORD PTR [eax+0x5751706e],0xa9855450
  41d9f6:	ja     0x41da54
  41d9f8:	test   al,0xce
  41d9fa:	int    0x9a
  41d9fc:	addr16 mov ds:0x75b8,eax
  41da00:	leave  
  41da01:	fld    QWORD PTR [ebx]
  41da03:	loope  0x41d990
  41da05:	and    bh,0x6a
  41da08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da09:	bound  ebp,QWORD PTR [ebx+0x6a017114]
  41da0f:	popa   
  41da10:	xchg   ecx,eax
  41da11:	mov    eax,ds:0xb4242f2c
  41da16:	and    ecx,DWORD PTR [eax]
  41da18:	loop   0x41da79
  41da1a:	mov    ebp,0x4f7627ef
  41da1f:	jge    0x41d9e4
  41da21:	dec    DWORD PTR [ebx+ebp*8-0x41542e56]
  41da28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da29:	cwde   
  41da2a:	jmp    0x3e3f2685
  41da2f:	cdq    
  41da30:	pop    edi
  41da31:	sbb    DWORD PTR [esi+ecx*2-0x34],ebx
  41da35:	nop    ebx
  41da38:	pop    edi
  41da39:	aas    
  41da3a:	out    0x73,al
  41da3c:	repnz nop
  41da3e:	push   0x27
  41da40:	jb     0x41dab1
  41da42:	call   0xb910:0x3ec2710f
  41da49:	mov    ds,WORD PTR [ecx]
  41da4b:	lahf   
  41da4c:	sub    ecx,DWORD PTR [edi]
  41da4e:	jmp    0x362557a3
  41da53:	aas    
  41da54:	retf   0x4ff3
  41da57:	pop    ecx
  41da58:	outs   dx,BYTE PTR ds:[esi]
  41da59:	sbb    BYTE PTR [edx-0x48],bh
  41da5c:	repnz test BYTE PTR [ecx],bl
  41da5f:	test   al,0x5b
  41da61:	mov    ch,0xe9
  41da63:	mov    dl,0x44
  41da65:	dec    ebp
  41da66:	dec    edx
  41da67:	xor    al,0x6b
  41da69:	cs pop ss
  41da6b:	out    0x75,eax
  41da6d:	lds    edx,FWORD PTR [ebx+0x754fe83d]
  41da73:	add    DWORD PTR [edx-0x30cd4606],esp
  41da79:	imul   ecx,DWORD PTR [ebx],0xa5c7804c
  41da7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da80:	test   dh,dh
  41da82:	imul   edx,DWORD PTR [esi+eiz*2+0x69],0x32
  41da87:	push   esp
  41da88:	lock mov bh,0x15
  41da8b:	ins    DWORD PTR es:[edi],dx
  41da8c:	sbb    edx,DWORD PTR [edi]
  41da8e:	adc    esi,DWORD PTR [ebx+0x1aa3a10b]
  41da94:	cld    
  41da95:	mov    ecx,0x29275de5
  41da9a:	add    al,0xd8
  41da9c:	and    dh,BYTE PTR ds:0x432908c8
  41daa2:	jecxz  0x41da86
  41daa4:	push   0x45
  41daa6:	in     eax,0x3a
  41daa8:	cmc    
  41daa9:	jb     0x41da55
  41daab:	mov    eax,ds:0x557f437f
  41dab0:	jp     0x41da32
  41dab2:	fiadd  DWORD PTR [edi+0x43]
  41dab5:	scas   al,BYTE PTR es:[edi]
  41dab6:	push   0xffffff98
  41dab8:	push   eax
  41dab9:	enter  0xfc43,0x4b
  41dabd:	sbb    BYTE PTR ds:0x52260b9d,0x1c
  41dac4:	xchg   edx,eax
  41dac5:	jp     0x41daab
  41dac7:	mov    DWORD PTR [ebx-0x710d94e7],esp
  41dacd:	rcl    BYTE PTR [eax+0x37014996],0x3c
  41dad4:	mov    al,ds:0x99185bca
  41dad9:	and    al,0xa5
  41dadb:	popf   
  41dadc:	dec    eax
  41dadd:	mov    edi,0xcf117866
  41dae2:	data16 (bad) 
  41dae5:	pop    edi
  41dae6:	loope  0x41daea
  41dae8:	arpl   WORD PTR [esi-0x72338b7e],dx
  41daee:	sbb    BYTE PTR [eax-0x263ac51c],bh
  41daf4:	sar    DWORD PTR [ebp-0x46],cl
  41daf7:	popf   
  41daf8:	mov    edx,0xaa8d84eb
  41dafd:	in     eax,0x10
  41daff:	jle    0x41da94
  41db01:	jnp    0x41db73
  41db03:	push   ds
  41db04:	mov    ?,eax
  41db06:	mov    eax,ds:0x83e0b10d
  41db0b:	mov    ch,0xb9
  41db0d:	scas   eax,DWORD PTR es:[edi]
  41db0e:	std    
  41db0f:	sbb    DWORD PTR [ebp-0x35],0x26
  41db13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db14:	repnz test eax,0xb91cf4a7
  41db1a:	ret    
  41db1b:	xor    dl,BYTE PTR [edi-0x5083bd7d]
  41db21:	and    eax,0xb03b03f
  41db26:	aaa    
  41db27:	jns    0x41dacc
  41db29:	xchg   ebx,eax
  41db2a:	jne    0x41dabd
  41db2c:	jge    0x41db2d
  41db2e:	push   ebx
  41db2f:	dec    ecx
  41db30:	xor    esp,eax
  41db32:	xchg   esi,eax
  41db33:	xor    BYTE PTR [edx],ah
  41db35:	pop    edx
  41db36:	fwait
  41db37:	push   0x6e0cd72f
  41db3c:	shl    BYTE PTR [eax],1
  41db3e:	pop    eax
  41db3f:	pop    edi
  41db40:	push   esp
  41db41:	sub    DWORD PTR [ebx+0x24d240e8],esi
  41db47:	nop
  41db48:	push   ebx
  41db49:	cmp    cl,BYTE PTR [eax]
  41db4b:	jb     0x41db70
  41db4d:	mov    esi,0xd7d2940a
  41db52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db53:	test   DWORD PTR [esi+0x65],ebp
  41db56:	xchg   esi,eax
  41db57:	sbb    ah,bl
  41db59:	pop    ebx
  41db5a:	pop    esi
  41db5b:	in     al,dx
  41db5c:	jmp    0xb296:0xdec57b63
  41db63:	pop    edi
  41db64:	leave  
  41db65:	adc    BYTE PTR [ebp-0x73],al
  41db68:	enter  0x9c95,0x8c
  41db6c:	scas   al,BYTE PTR es:[edi]
  41db6d:	sub    ecx,ecx
  41db6f:	ja     0x41db80
  41db71:	adc    DWORD PTR [edi-0x1443258e],esp
  41db77:	add    DWORD PTR [edx],eax
  41db79:	push   es
  41db7a:	mov    bh,0xc4
  41db7c:	ins    BYTE PTR es:[edi],dx
  41db7d:	jb     0x41db76
  41db7f:	inc    edx
  41db80:	jb     0x41dbdb
  41db82:	pop    edx
  41db83:	scas   eax,DWORD PTR es:[edi]
  41db84:	pop    eax
  41db85:	pop    ds
  41db86:	inc    eax
  41db87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db88:	sbb    DWORD PTR [eax+0x58],ebp
  41db8b:	xlat   BYTE PTR ds:[ebx]
  41db8c:	jne    0x41db39
  41db8e:	cmp    eax,0x7b5332db
  41db93:	mov    esp,0xe5062d2e
  41db98:	fs fcmove st,st(1)
  41db9b:	cdq    
  41db9c:	or     BYTE PTR [edx+0x6b],ah
  41db9f:	mov    BYTE PTR [esp+esi*2],0x5
  41dba3:	sbb    eax,0x2580b1f1
  41dba8:	daa    
  41dba9:	jecxz  0x41db2e
  41dbab:	mov    ch,0x5d
  41dbad:	xchg   edi,ebp
  41dbaf:	jno    0x41dc24
  41dbb1:	push   ss
  41dbb2:	rol    BYTE PTR [eax],0xae
  41dbb5:	(bad)  
  41dbb6:	dec    ebp
  41dbb7:	cmc    
  41dbb8:	fwait
  41dbb9:	jecxz  0x41dbfb
  41dbbb:	ret    
  41dbbc:	mul    al
  41dbbe:	mov    ebx,0xa73c9455
  41dbc3:	nop
  41dbc4:	out    dx,al
  41dbc5:	loope  0x41dbc9
  41dbc7:	stos   BYTE PTR es:[edi],al
  41dbc8:	emms   
  41dbca:	fidivr DWORD PTR [edi]
  41dbcc:	mov    al,ds:0x47ccbcaa
  41dbd1:	repnz inc esi
  41dbd3:	in     eax,0xa4
  41dbd5:	hlt    
  41dbd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbd7:	push   ss
  41dbd8:	mov    fs,WORD PTR [eax-0x641a2576]
  41dbde:	sti    
  41dbdf:	pop    ebp
  41dbe0:	aaa    
  41dbe1:	push   ss
  41dbe2:	arpl   WORD PTR [edx+0x67],si
  41dbe5:	js     0x41db71
  41dbe7:	jge    0x41dc30
  41dbe9:	stos   BYTE PTR es:[edi],al
  41dbea:	pop    ds
  41dbeb:	jae    0x41dbba
  41dbed:	sub    eax,0xdb32d335
  41dbf2:	or     BYTE PTR [eax-0x4ab08381],bl
  41dbf8:	imul   ebp,DWORD PTR [ecx+ebp*1-0x3a],0x83def0c8
  41dc00:	dec    ebp
  41dc01:	jp     0x41dba4
  41dc03:	mov    bl,0xa3
  41dc05:	push   es
  41dc06:	and    ecx,DWORD PTR [ecx-0x1aae3142]
  41dc0c:	jl     0x41dc40
  41dc0e:	call   0x1c500eb5
  41dc13:	mov    bl,0x7
  41dc15:	imul   ebx,ebp,0xf7451096
  41dc1b:	add    cl,BYTE PTR [eax]
  41dc1d:	inc    edx
  41dc1e:	repz dec ebx
  41dc20:	sbb    edx,DWORD PTR [eax+0x2d]
  41dc23:	cli    
  41dc24:	pop    eax
  41dc25:	lahf   
  41dc26:	cmp    al,0xdf
  41dc28:	call   0xa4ed:0xce8c18e
  41dc2f:	retf   
  41dc30:	pop    ds
  41dc31:	int3   
  41dc32:	lock jecxz 0x41dc3a
  41dc35:	retf   
  41dc36:	xor    BYTE PTR [esi-0x66],dl
  41dc39:	xchg   edx,eax
  41dc3a:	iret   
  41dc3b:	xchg   DWORD PTR [ecx-0x3536f1ac],edx
  41dc41:	fnstenv [edi]
  41dc43:	in     eax,dx
  41dc44:	adc    dl,ch
  41dc46:	mov    esi,edi
  41dc48:	daa    
  41dc49:	mov    al,gs:0xb65be852
  41dc4f:	cmp    ebp,edx
  41dc51:	or     esp,DWORD PTR [eax+0x20850c9f]
  41dc57:	inc    edi
  41dc58:	push   0x6f97b023
  41dc5d:	and    ecx,DWORD PTR ds:0xd2c32abb
  41dc63:	jbe    0x41dc65
  41dc65:	push   ebx
  41dc66:	push   0x5b9bcc1c
  41dc6b:	js     0x41dceb
  41dc6d:	push   eax
  41dc6e:	push   0x4e48099f
  41dc73:	sahf   
  41dc74:	inc    edx
  41dc75:	sbb    edi,DWORD PTR [esi]
  41dc77:	stc    
  41dc78:	add    al,0x58
  41dc7a:	pop    ebx
  41dc7b:	ss or  al,0x96
  41dc7e:	test   DWORD PTR [esi+0x3a],esp
  41dc81:	jbe    0x41dc76
  41dc83:	or     al,0xbb
  41dc85:	and    eax,ebp
  41dc87:	push   edx
  41dc88:	mov    eax,esp
  41dc8a:	xchg   ebp,esp
  41dc8c:	fild   QWORD PTR [ecx]
  41dc8e:	pusha  
  41dc8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc90:	test   al,0x6b
  41dc92:	idiv   DWORD PTR [esi+0x11]
  41dc95:	outs   dx,DWORD PTR ds:[esi]
  41dc96:	scas   eax,DWORD PTR es:[edi]
  41dc97:	xor    al,BYTE PTR [eax+0x5d]
  41dc9a:	out    0xee,al
  41dc9c:	ja     0x41dd0b
  41dc9e:	in     eax,dx
  41dc9f:	aaa    
  41dca0:	cli    
  41dca1:	cmp    al,0x39
  41dca3:	loopne 0x41dcc2
  41dca5:	xchg   edx,eax
  41dca6:	fld    DWORD PTR [esi+ebx*8-0x3f97f3bb]
  41dcad:	jne    0x41dcf1
  41dcaf:	out    dx,al
  41dcb0:	mov    ch,0xac
  41dcb2:	and    BYTE PTR [ebp-0x681feaf6],dl
  41dcb8:	int3   
  41dcb9:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41dcbb:	sahf   
  41dcbc:	sbb    al,0xc4
  41dcbe:	xor    ebx,DWORD PTR [esi+0x3]
  41dcc1:	ret    
  41dcc2:	lods   al,BYTE PTR ds:[esi]
  41dcc3:	in     al,dx
  41dcc4:	dec    edx
  41dcc5:	cmp    DWORD PTR [edx-0x63f56e10],esi
  41dccb:	push   0x1
  41dccd:	ret    0xdf2
  41dcd0:	ret    
  41dcd1:	mov    ds:0x8d13eec4,al
  41dcd6:	dec    ecx
  41dcd7:	cmp    DWORD PTR [esi-0x788fdaba],ebx
  41dcdd:	sti    
  41dcde:	and    edi,0x22a431cd
  41dce4:	pusha  
  41dce5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dce6:	bound  esi,QWORD PTR [eax-0x60]
  41dce9:	jb     0x41dd16
  41dceb:	mov    esp,0x7fc3c47a
  41dcf0:	jns    0x41dd70
  41dcf2:	jp     0x41dd69
  41dcf4:	jo     0x41dd0a
  41dcf6:	push   edi
  41dcf7:	pushf  
  41dcf8:	stos   DWORD PTR es:[edi],eax
  41dcf9:	in     al,0x76
  41dcfb:	xchg   DWORD PTR [ebx-0x7],ebx
  41dcfe:	mov    edi,0xa9f5354b
  41dd03:	inc    ecx
  41dd04:	cmp    eax,0x943aad08
  41dd09:	pop    ebp
  41dd0a:	mov    BYTE PTR [eax],cl
  41dd0c:	fisub  WORD PTR [esi]
  41dd0e:	add    esi,DWORD PTR [edi-0x72]
  41dd11:	stos   BYTE PTR es:[edi],al
  41dd12:	enter  0x8141,0x38
  41dd16:	jecxz  0x41dd75
  41dd18:	jno    0x41dcad
  41dd1a:	int    0x12
  41dd1c:	adc    BYTE PTR [eax-0x53ddfe2a],dh
  41dd22:	mov    ecx,0x758bd5f9
  41dd27:	adc    eax,0x7c9ecab2
  41dd2c:	mov    esi,?
  41dd2e:	lar    ecx,WORD PTR [ecx-0x1d546209]
  41dd35:	mov    cl,0x2d
  41dd37:	fsub   st,st(2)
  41dd39:	outs   dx,BYTE PTR ds:[esi]
  41dd3a:	pop    ebp
  41dd3b:	repnz and bl,dh
  41dd3e:	lock or BYTE PTR [esi],0x76
  41dd42:	sbb    eax,0x5e5eed12
  41dd47:	loope  0x41ddb7
  41dd49:	loope  0x41dd4a
  41dd4b:	fistp  QWORD PTR [esi-0x4f]
  41dd4e:	xor    al,0x1a
  41dd50:	pop    ecx
  41dd51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd52:	in     eax,0x53
  41dd54:	push   ebx
  41dd55:	int    0x55
  41dd57:	add    DWORD PTR [eax],eax
  41dd59:	clc    
  41dd5a:	add    al,0x0
  41dd5c:	add    BYTE PTR [eax-0x2599e66d],cl
  41dd62:	data16 fidivr WORD PTR [ecx]
  41dd65:	stos   BYTE PTR es:[edi],al
  41dd66:	inc    ecx
  41dd67:	jmp    0x303f:0x6e794007
  41dd6e:	ins    BYTE PTR es:[edi],dx
  41dd6f:	push   0x928f1355
  41dd74:	jbe    0x41dd12
  41dd76:	sbb    eax,edi
  41dd78:	or     ah,BYTE PTR [eax+edi*4+0x1a]
  41dd7c:	xchg   ebp,eax
  41dd7d:	clc    
  41dd7e:	es retf 
  41dd80:	es ins DWORD PTR es:[edi],dx
  41dd82:	lahf   
  41dd83:	mov    ebp,0x9a4ab0b7
  41dd88:	(bad)  
  41dd8a:	xor    al,0xc8
  41dd8c:	xacquire xchg WORD PTR ds:0x65c89a5e,di
  41dd94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd95:	js     0x41ddb8
  41dd97:	ins    DWORD PTR es:[edi],dx
  41dd98:	dec    edx
  41dd99:	aas    
  41dd9a:	std    
  41dd9b:	and    ebx,ebx
  41dd9d:	jo     0x41dd6d
  41dd9f:	iret   
  41dda0:	shr    DWORD PTR [ebx-0x726f5482],1
  41dda6:	push   ebx
  41dda7:	add    BYTE PTR [edi-0x226c72f9],0xbe
  41ddae:	or     eax,DWORD PTR [ebp+0x3c]
  41ddb1:	sub    BYTE PTR [eax],cl
  41ddb3:	or     eax,0xa346d1d9
  41ddb8:	leave  
  41ddb9:	xor    ah,0xda
  41ddbc:	xor    BYTE PTR [edi],ah
  41ddbe:	in     al,dx
  41ddbf:	sbb    BYTE PTR [edx+0x3dff12d8],ah
  41ddc5:	xlat   BYTE PTR ds:[ebx]
  41ddc6:	mov    ebx,0x5352c745
  41ddcb:	xchg   ebx,eax
  41ddcc:	cmp    al,0x83
  41ddce:	imul   BYTE PTR [esi]
  41ddd0:	dec    ebx
  41ddd1:	ret    
  41ddd2:	mov    cl,0x2e
  41ddd4:	jecxz  0x41ddd9
  41ddd6:	test   BYTE PTR [ecx-0x1b],ch
  41ddd9:	push   esi
  41ddda:	add    BYTE PTR [edi],ch
  41dddc:	mov    edx,0x8541853d
  41dde1:	dec    ebx
  41dde2:	ins    WORD PTR es:[edi],dx
  41dde4:	inc    ecx
  41dde5:	int    0xa5
  41dde7:	js     0x41de1f
  41dde9:	or     al,0xea
  41ddeb:	mov    eax,0xcd3564be
  41ddf0:	inc    ebp
  41ddf1:	cmp    DWORD PTR [eax-0x194a7cfb],0xffffffdc
  41ddf8:	in     eax,0x50
  41ddfa:	in     al,0xe2
  41ddfc:	aam    0x57
  41ddfe:	push   ds
  41ddff:	test   al,0x97
  41de01:	sbb    al,0xf5
  41de03:	dec    esp
  41de04:	add    eax,0xac750aef
  41de09:	jmp    0x2bd7:0x3d1cce52
  41de10:	cdq    
  41de11:	fs fwait
  41de13:	mov    esi,0xcc28664f
  41de18:	jl     0x41de48
  41de1a:	fisttp DWORD PTR [ebx-0x3e983f95]
  41de20:	rol    DWORD PTR ds:[ebp+ebx*1+0x3c92eb7f],1
  41de28:	daa    
  41de29:	jne    0x41de63
  41de2b:	xor    BYTE PTR [esi],0x43
  41de2e:	xor    BYTE PTR [ebp+0xea2f9cb],0x2a
  41de35:	aaa    
  41de36:	pop    ebp
  41de37:	les    ebp,FWORD PTR [eax-0x2e]
  41de3a:	leave  
  41de3b:	jae    0x41ddc3
  41de3d:	inc    edx
  41de3e:	push   es
  41de3f:	sbb    BYTE PTR [edx-0x51c66096],al
  41de45:	mov    esp,0x3a839934
  41de4a:	adc    esi,DWORD PTR [edx+0x67a6f440]
  41de50:	(bad)  
  41de51:	ds add al,0x7
  41de54:	mov    al,0x3b
  41de56:	inc    esp
  41de57:	inc    esi
  41de58:	mov    ebx,DWORD PTR [eax+0x2a]
  41de5b:	(bad)  
  41de5c:	and    dl,BYTE PTR [esi+ebx*1+0x58]
  41de60:	xor    BYTE PTR cs:[eax+0x11],cl
  41de64:	int3   
  41de65:	pop    ecx
  41de66:	ror    DWORD PTR [ecx-0x5cc7944f],1
  41de6c:	jg     0x41de98
  41de6e:	imul   ecx,eax
  41de71:	loope  0x41deac
  41de73:	adc    ah,BYTE PTR [ecx]
  41de75:	clc    
  41de76:	pop    esp
  41de77:	sbb    al,0x6c
  41de79:	sub    DWORD PTR [edi-0x8],0xffffff86
  41de7d:	or     esp,DWORD PTR [esi+0x25]
  41de80:	mov    ebp,0x9043cba4
  41de85:	jmp    0x8b888b19
  41de8a:	(bad)  
  41de8b:	xchg   esi,eax
  41de8c:	cmp    ah,ch
  41de8e:	les    eax,FWORD PTR [eax+0x20f336c]
  41de94:	stos   BYTE PTR es:[edi],al
  41de95:	dec    ecx
  41de96:	push   ebx
  41de97:	xchg   edx,eax
  41de98:	call   0x41f65cf7
  41de9d:	clc    
  41de9e:	mov    dl,0xb0
  41dea0:	cld    
  41dea1:	push   0xc3beaa61
  41dea6:	retf   0xdcd2
  41dea9:	xor    eax,0x5db4a776
  41deae:	into   
  41deaf:	nop
  41deb0:	cld    
  41deb1:	xchg   esi,eax
  41deb2:	inc    ebp
  41deb3:	cwde   
  41deb4:	mov    ebx,0xaf3cd4a4
  41deb9:	loope  0x41de95
  41debb:	jo     0x41de7b
  41debd:	stos   BYTE PTR es:[edi],al
  41debe:	shl    esi,1
  41dec0:	fild   QWORD PTR [ebp-0x61e74ed0]
  41dec6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dec7:	out    dx,eax
  41dec8:	lods   eax,DWORD PTR ds:[esi]
  41dec9:	mov    ds:0xd8ea371a,al
  41dece:	stc    
  41decf:	and    BYTE PTR [ebx],0xdb
  41ded2:	aad    0xb9
  41ded4:	add    DWORD PTR [eax+0x3d],esi
  41ded7:	sbb    DWORD PTR [esi+0x9921124],eax
  41dedd:	jl     0x41de68
  41dedf:	jns    0x41de6f
  41dee1:	les    ebp,FWORD PTR [ebp+0x2f5bef24]
  41dee7:	leave  
  41dee8:	int    0x66
  41deea:	adc    eax,0x5af0ce1d
  41deef:	pop    esp
  41def0:	add    DWORD PTR [eax],ebx
  41def2:	mov    bl,bl
  41def4:	mov    ch,0xbc
  41def6:	jl     0x41deaf
  41def8:	cld    
  41def9:	repz jne 0x41df6b
  41defc:	int3   
  41defd:	sbb    ebp,DWORD PTR [esi+0x54]
  41df00:	mov    esi,0x5c914123
  41df05:	sar    BYTE PTR [edi-0x35],cl
  41df08:	mov    es,WORD PTR [ecx]
  41df0a:	rcr    cl,1
  41df0c:	(bad)  
  41df0d:	mov    bl,0xc1
  41df0f:	scas   eax,DWORD PTR es:[edi]
  41df10:	add    al,0xfd
  41df12:	dec    edi
  41df13:	add    esi,edx
  41df15:	sbb    DWORD PTR [eax],ecx
  41df17:	je     0x41de9f
  41df19:	push   ebx
  41df1a:	mov    esp,0xcb2a8427
  41df20:	mov    ecx,0x3f61fff
  41df25:	fnstenv fs:[edi+eax*1]
  41df29:	jle    0x41df19
  41df2b:	and    esp,edx
  41df2d:	lods   al,BYTE PTR ds:[esi]
  41df2e:	dec    esp
  41df2f:	pop    edx
  41df30:	je     0x41df97
  41df32:	add    cl,cl
  41df34:	retf   0x3da0
  41df37:	bound  edx,QWORD PTR [eax-0x3098a30e]
  41df3d:	push   esi
  41df3e:	inc    ebx
  41df3f:	fs ret 
  41df41:	cmp    BYTE PTR [ebp+ebp*8-0x6b8feb55],ah
  41df48:	aaa    
  41df49:	iret   
  41df4a:	sub    eax,0x1fc3fefb
  41df4f:	stos   DWORD PTR es:[edi],eax
  41df50:	es cmc 
  41df52:	call   0x114c3599
  41df57:	in     al,dx
  41df58:	clc    
  41df59:	xchg   ecx,eax
  41df5a:	dec    esi
  41df5b:	pop    edi
  41df5c:	std    
  41df5d:	push   DWORD PTR [ebx-0x2b]
  41df60:	ins    DWORD PTR es:[edi],dx
  41df61:	pop    esi
  41df62:	pop    edi
  41df63:	inc    edi
  41df64:	adc    BYTE PTR [eax+0x16],al
  41df67:	ror    bh,0x46
  41df6a:	stos   DWORD PTR es:[edi],eax
  41df6b:	cmp    ebx,ebx
  41df6d:	xor    bh,0xe4
  41df70:	neg    DWORD PTR ds:0x6ba1a04d
  41df76:	or     al,0x94
  41df78:	mov    ah,0xdf
  41df7a:	push   0x447ea2a7
  41df7f:	adc    al,0x99
  41df81:	aas    
  41df82:	aam    0xab
  41df84:	and    eax,0xdec195b6
  41df89:	mov    dh,0x33
  41df8b:	lea    ebp,[ebp+0x4fcfc1bd]
  41df91:	or     ebx,ebp
  41df93:	in     eax,dx
  41df94:	daa    
  41df95:	xchg   esp,eax
  41df96:	(bad)  
  41df97:	pop    ebx
  41df98:	arpl   WORD PTR [eax+0x1b7b73d0],di
  41df9e:	loope  0x41e001
  41dfa0:	xchg   DWORD PTR ds:0x271241f8,edi
  41dfa6:	cmp    bl,ah
  41dfa8:	inc    ebx
  41dfa9:	imul   eax,esp,0xdb41a767
  41dfaf:	fcomp  QWORD PTR [esi-0x41]
  41dfb2:	sub    DWORD PTR [eax],ebx
  41dfb4:	lock pop esp
  41dfb6:	jecxz  0x41e028
  41dfb8:	adc    esi,0xb7f71804
  41dfbe:	jecxz  0x41e03d
  41dfc0:	call   0x6af5:0x2383ba3
  41dfc7:	scas   eax,DWORD PTR es:[edi]
  41dfc8:	fst    st(7)
  41dfca:	pop    ebx
  41dfcb:	push   es
  41dfcc:	sbb    eax,0xc0ccf75b
  41dfd1:	pop    edx
  41dfd2:	sti    
  41dfd3:	inc    eax
  41dfd4:	int3   
  41dfd5:	nop
  41dfd6:	(bad)  ds:0xdbe4f16
  41dfdc:	add    esp,ecx
  41dfde:	clc    
  41dfdf:	rcr    DWORD PTR [ecx+0x5aa52207],0x24
  41dfe6:	xchg   edx,eax
  41dfe7:	push   0xffffff97
  41dfe9:	rcl    eax,1
  41dfeb:	add    al,0xd3
  41dfed:	fs adc ebp,eax
  41dff0:	or     dh,BYTE PTR [ecx+0x2]
  41dff3:	inc    edi
  41dff4:	dec    ebx
  41dff5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dff6:	imul   edx,DWORD PTR [ebx-0x13],0xc4e8fc3
  41dffd:	jle    0x41e049
  41dfff:	(bad)  
  41e000:	mov    esi,0x85f85b4e
  41e005:	call   0x91eb6111
  41e00a:	jmp    0x41df93
  41e00c:	jne    0x41e023
  41e00e:	and    eax,0x46dc70d8
  41e013:	xor    eax,0x67b3c7bf
  41e018:	iret   
  41e019:	fs in  al,dx
  41e01b:	add    al,0xf0
  41e01d:	mov    ds:0xe97b554f,al
  41e022:	jno    0x41e089
  41e024:	or     eax,0xc4893e06
  41e029:	jb     0x41dfee
  41e02b:	ss jmp 0x41dfec
  41e02e:	lods   eax,DWORD PTR ds:[esi]
  41e02f:	jno    0x41e089
  41e031:	mov    cl,0xef
  41e033:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e034:	mov    DWORD PTR [ebx],esp
  41e036:	jbe    0x41e078
  41e038:	mov    ah,0x35
  41e03a:	shr    BYTE PTR [edx-0x2b],cl
  41e03d:	jb     0x41e049
  41e03f:	dec    ebp
  41e040:	add    DWORD PTR [esi-0x1f],esp
  41e043:	call   0xaab9:0xba8edbe0
  41e04a:	test   eax,0x175046d9
  41e04f:	pusha  
  41e050:	aam    0x91
  41e052:	sbb    BYTE PTR [edi],bl
  41e054:	dec    esi
  41e055:	data16 ds jp 0x41e024
  41e059:	jnp    0x41dffc
  41e05b:	ss jmp 0x41e018
  41e05e:	cmp    DWORD PTR [ebx+0x65],eax
  41e061:	cmp    ch,BYTE PTR [ebx-0x71]
  41e064:	in     eax,dx
  41e065:	(bad)  
  41e066:	ds push ds
  41e068:	retf   
  41e069:	jg     0x41e0b4
  41e06b:	mov    cs,WORD PTR [ebp+0x7bcc16e]
  41e071:	mov    al,ds:0x9ef0afbb
  41e076:	inc    edi
  41e077:	fisttp QWORD PTR [eax+ebx*8]
  41e07a:	mov    esi,0x18f0001d
  41e07f:	pop    esi
  41e080:	push   esp
  41e081:	mov    dl,0x95
  41e083:	bound  ebx,QWORD PTR [ebp+0x62]
  41e086:	xchg   ecx,eax
  41e087:	cmp    al,0xfd
  41e089:	mov    dh,0x7b
  41e08b:	leave  
  41e08c:	jmp    0x41e099
  41e08e:	xchg   DWORD PTR [ebx],edx
  41e090:	cmp    dl,cl
  41e092:	xchg   ebp,eax
  41e093:	mov    al,0x9e
  41e095:	imul   eax,DWORD PTR [ebx+0x141075dd],0xffffff8d
  41e09c:	hlt    
  41e09d:	outs   dx,BYTE PTR ds:[esi]
  41e09e:	pop    ebp
  41e09f:	and    bl,BYTE PTR cs:[edx+0x8]
  41e0a3:	pop    ecx
  41e0a4:	into   
  41e0a5:	mov    ebp,0x44436b8d
  41e0aa:	dec    eax
  41e0ab:	dec    ebx
  41e0ac:	scas   eax,DWORD PTR es:[edi]
  41e0ad:	mov    DWORD PTR [ebx+edx*2-0x73],edi
  41e0b1:	or     bl,dl
  41e0b3:	loope  0x41e074
  41e0b5:	pop    eax
  41e0b6:	xor    ch,0xd0
  41e0b9:	add    ah,BYTE PTR [ecx-0x68]
  41e0bc:	mov    ds:0xc04f215,eax
  41e0c1:	ds xchg esp,eax
  41e0c3:	or     al,0x4a
  41e0c5:	inc    edx
  41e0c6:	xchg   edi,eax
  41e0c7:	sbb    DWORD PTR [ebx],esp
  41e0c9:	and    ebx,DWORD PTR [ebp+0x65]
  41e0cc:	test   DWORD PTR [ecx+0x6e1fc815],edx
  41e0d2:	int3   
  41e0d3:	enter  0x929c,0x96
  41e0d7:	ror    DWORD PTR [eax+edx*8],0x68
  41e0db:	jno    0x41e0dd
  41e0dd:	sbb    esi,esp
  41e0df:	sbb    DWORD PTR [eax+0x4cb75e5a],0x1
  41e0e6:	lock pop ebp
  41e0e8:	push   eax
  41e0e9:	rcl    BYTE PTR [edx],1
  41e0eb:	fstp   DWORD PTR [edi-0x70]
  41e0ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0ef:	retf   0xc69
  41e0f2:	pop    esi
  41e0f3:	mov    esp,0x82688179
  41e0f8:	shr    DWORD PTR [ebx+0x7da333b6],1
  41e0fe:	fwait
  41e0ff:	mov    al,dh
  41e101:	(bad)  
  41e102:	xchg   esp,eax
  41e103:	aaa    
  41e104:	ja     0x41e0f1
  41e106:	xchg   ebx,eax
  41e107:	imul   BYTE PTR [ecx]
  41e109:	out    0xe0,al
  41e10b:	and    ebp,0xffffffc0
  41e10e:	xor    ebx,DWORD PTR [esi+0x18059a5a]
  41e114:	pop    eax
  41e115:	scas   al,BYTE PTR es:[edi]
  41e116:	sti    
  41e117:	rcr    BYTE PTR [ecx],0xd4
  41e11a:	in     al,dx
  41e11b:	mov    ds:0x596752cd,eax
  41e120:	es nop
  41e122:	fwait
  41e123:	mov    esp,0x6f004289
  41e128:	cmp    edx,DWORD PTR [edx-0x605f739f]
  41e12e:	jae    0x41e13e
  41e130:	jge    0x41e14d
  41e132:	sub    al,0x89
  41e134:	loopne 0x41e19b
  41e136:	enter  0x321c,0xbb
  41e13a:	inc    ebp
  41e13b:	pop    ecx
  41e13c:	lahf   
  41e13d:	xlat   BYTE PTR ds:[ebx]
  41e13e:	ins    DWORD PTR es:[edi],dx
  41e13f:	mov    bh,0x14
  41e141:	mov    BYTE PTR ds:0x7e2ca90b,bh
  41e147:	xchg   edx,eax
  41e148:	ror    DWORD PTR [ecx+0x69],0x24
  41e14c:	xlat   BYTE PTR ds:[ebx]
  41e14d:	jns    0x41e10e
  41e14f:	cs xchg edi,eax
  41e151:	addr16 dec eax
  41e153:	sbb    ecx,ebx
  41e155:	add    al,0xd4
  41e157:	sbb    ah,BYTE PTR [esi]
  41e159:	loopne 0x41e0eb
  41e15b:	das    
  41e15c:	cli    
  41e15d:	push   ecx
  41e15e:	clc    
  41e15f:	mov    gs:0xf1f46963,al
  41e165:	mov    BYTE PTR [ebp-0x4],dh
  41e168:	jmp    0x41e1b3
  41e16a:	fcmovnu st,st(6)
  41e16c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e16d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e16e:	jmp    0x41e126
  41e170:	pop    esp
  41e171:	inc    ebp
  41e172:	scas   eax,DWORD PTR es:[edi]
  41e173:	hlt    
  41e174:	add    esi,DWORD PTR [edi+0x45]
  41e177:	in     al,dx
  41e178:	inc    edi
  41e179:	ds jl  0x41e144
  41e17c:	mov    DWORD PTR [esi+eax*1+0x6],esi
  41e180:	xchg   edi,eax
  41e181:	fadd   QWORD PTR [edi-0x4c]
  41e184:	push   esp
  41e185:	clc    
  41e186:	sub    eax,DWORD PTR [eax-0x7591344b]
  41e18c:	cmp    BYTE PTR [edi],dh
  41e18e:	xchg   BYTE PTR [edi+ebx*1+0x75],al
  41e192:	out    dx,eax
  41e193:	into   
  41e194:	out    dx,eax
  41e195:	pop    es
  41e196:	scas   al,BYTE PTR es:[edi]
  41e197:	mov    DWORD PTR [esi+0x45],esi
  41e19a:	clc    
  41e19b:	mov    ebp,fs
  41e19d:	adc    BYTE PTR [edx+ecx*4+0x4e],bl
  41e1a1:	xor    DWORD PTR [edi+edx*4+0x35],esp
  41e1a5:	xor    BYTE PTR ds:0xac61bc18,ah
  41e1ab:	mov    edx,esp
  41e1ad:	or     DWORD PTR [ecx-0x7a6a1164],0x71cea258
  41e1b7:	push   ebx
  41e1b8:	jp     0x41e18c
  41e1ba:	mov    ah,0x20
  41e1bc:	sbb    DWORD PTR [edx+0xb],ecx
  41e1bf:	inc    esi
  41e1c0:	jae    0x41e1b7
  41e1c2:	mov    bh,0x7c
  41e1c4:	out    0x18,eax
  41e1c6:	mov    BYTE PTR [esi],cl
  41e1c8:	fwait
  41e1c9:	int3   
  41e1ca:	loope  0x41e19c
  41e1cc:	cmp    BYTE PTR [ecx-0x6d],dl
  41e1cf:	sub    DWORD PTR [eax+0xfd9985a],edx
  41e1d5:	cs dec esi
  41e1d7:	xlat   BYTE PTR ds:[ebx]
  41e1d8:	int3   
  41e1d9:	push   cs
  41e1da:	push   edi
  41e1db:	jg     0x41e247
  41e1dd:	or     al,0xe5
  41e1df:	imul   eax
  41e1e1:	out    dx,eax
  41e1e2:	mov    esp,0x56c110c5
  41e1e7:	ins    BYTE PTR es:[edi],dx
  41e1e8:	mov    ebp,0x1b2dbf4e
  41e1ed:	mov    edx,0x35fdf91f
  41e1f2:	mov    dl,0x72
  41e1f4:	xchg   BYTE PTR [ebp+0x7],ch
  41e1f7:	xchg   esi,eax
  41e1f8:	pop    esp
  41e1f9:	sti    
  41e1fa:	daa    
  41e1fb:	bound  eax,QWORD PTR [edi-0x6]
  41e1fe:	jnp    0x41e200
  41e200:	mov    DWORD PTR [esi-0x36],edi
  41e203:	jle    0x41e1d4
  41e205:	push   ebp
  41e206:	retf   
  41e207:	test   eax,0xbaf7e10c
  41e20c:	loope  0x41e215
  41e20e:	adc    bl,BYTE PTR [eax+esi*4-0x2f]
  41e212:	cld    
  41e213:	iret   
  41e214:	in     eax,dx
  41e215:	mov    al,ds:0x209dbb7b
  41e21a:	dec    BYTE PTR ds:0x70b07c20
  41e220:	push   esp
  41e221:	mov    dh,0x9b
  41e223:	ret    0xe437
  41e226:	xchg   edi,eax
  41e227:	push   esi
  41e228:	cmc    
  41e229:	dec    edx
  41e22a:	sbb    DWORD PTR [ebp+0x2cbf07e4],ebx
  41e230:	jae    0x41e208
  41e232:	not    DWORD PTR [ebp+edi*2+0x35828408]
  41e239:	mov    eax,0x9a9a233e
  41e23e:	clc    
  41e23f:	sbb    DWORD PTR [ebx-0x4a016c35],0xffffffed
  41e246:	add    DWORD PTR fs:[ebx+edx*8],ebp
  41e24a:	inc    edx
  41e24b:	add    DWORD PTR [edi-0x6a48483],edx
  41e251:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e252:	add    eax,0x84e1c408
  41e257:	xchg   al,dh
  41e259:	out    0xf2,eax
  41e25b:	not    DWORD PTR [ebp+0xf787ad4]
  41e261:	jp     0x41e212
  41e263:	mov    eax,ds:0x15ac554
  41e268:	add    al,bh
  41e26a:	add    al,0x0
  41e26c:	add    BYTE PTR [edx],bl
  41e26e:	and    DWORD PTR [ebx-0xbd467b0],edx
  41e274:	mov    eax,0xff9305c2
  41e279:	test   al,dh
  41e27b:	jmp    0x41e276
  41e27d:	in     eax,0x66
  41e27f:	inc    edx
  41e280:	jmp    0xb853d166
  41e285:	sti    
  41e286:	ss ins DWORD PTR es:[edi],dx
  41e288:	jne    0x41e270
  41e28a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e28b:	arpl   WORD PTR [ebp+0x6b7ca9ef],sp
  41e291:	push   cs
  41e292:	lods   al,BYTE PTR ds:[esi]
  41e293:	mov    edx,0x80a55e65
  41e298:	dec    ebp
  41e299:	loopne 0x41e2f5
  41e29b:	stc    
  41e29c:	lea    esi,[esi]
  41e29e:	ds jle 0x41e2d8
  41e2a1:	ins    DWORD PTR es:[edi],dx
  41e2a2:	stc    
  41e2a3:	mov    esp,0xc06bfa97
  41e2a8:	imul   ebp,DWORD PTR [edx],0xb87c47a7
  41e2ae:	sti    
  41e2af:	ss stc 
  41e2b1:	jmp    0x41e26d
  41e2b3:	push   ss
  41e2b4:	lock jg 0x41e2b8
  41e2b7:	pop    ecx
  41e2b8:	adc    DWORD PTR [eax],ebx
  41e2ba:	or     esi,DWORD PTR [ecx]
  41e2bc:	add    eax,0x158a215d
  41e2c1:	bound  esi,QWORD PTR [esi]
  41e2c3:	je     0x41e27f
  41e2c5:	sub    DWORD PTR [ecx],esp
  41e2c7:	popf   
  41e2c8:	jg     0x41e257
  41e2ca:	cld    
  41e2cb:	cld    
  41e2cc:	sbb    eax,0x24eab573
  41e2d1:	fidivr DWORD PTR [eax]
  41e2d3:	retf   0x47ea
  41e2d6:	cmp    DWORD PTR [ebp-0x2ffc419f],0x66
  41e2dd:	mov    esp,0xd1e776fe
  41e2e2:	fldenv [edi-0x4d]
  41e2e5:	jns    0x41e364
  41e2e7:	arpl   WORD PTR [eax+0x1e55bebe],dx
  41e2ed:	fild   WORD PTR ds:0xeea9cb9a
  41e2f3:	scas   al,BYTE PTR es:[edi]
  41e2f4:	or     ah,BYTE PTR [edi]
  41e2f6:	test   al,0xd6
  41e2f8:	add    ah,dl
  41e2fa:	fild   DWORD PTR [edi+0x27]
  41e2fd:	mov    ds:0x8d8ba7f8,al
  41e302:	inc    ebp
  41e303:	out    dx,eax
  41e304:	aas    
  41e305:	pop    esi
  41e306:	or     bl,0x59
  41e309:	aaa    
  41e30a:	pop    eax
  41e30b:	mov    esp,0x6d69e1b9
  41e310:	ins    DWORD PTR es:[edi],dx
  41e311:	ret    
  41e312:	cmp    BYTE PTR [ecx],dl
  41e314:	mov    BYTE PTR [ecx],cl
  41e316:	rcl    dh,cl
  41e318:	xor    al,0xb7
  41e31a:	in     eax,0x62
  41e31c:	push   ss
  41e31d:	mov    cl,0x9a
  41e31f:	jns    0x41e348
  41e321:	adc    al,0xf1
  41e323:	imul   ebx,DWORD PTR [eax],0x5ea7cbe4
  41e329:	ror    BYTE PTR [ebx+edx*1],0x4f
  41e32d:	retf   
  41e32e:	jmp    0x41e2c0
  41e330:	push   es
  41e331:	test   edi,ebp
  41e333:	pop    ebp
  41e334:	js     0x41e2f2
  41e336:	push   cs
  41e337:	xchg   edi,eax
  41e338:	stos   DWORD PTR es:[edi],eax
  41e339:	and    eax,0x4b7d3d8f
  41e33e:	call   FWORD PTR [eax+ebp*2]
  41e341:	fcom   DWORD PTR [ecx+0x63d6949c]
  41e347:	into   
  41e348:	xchg   ecx,eax
  41e349:	push   ecx
  41e34a:	iret   
  41e34b:	push   ebp
  41e34c:	fnstcw WORD PTR [edx+0x72740b7d]
  41e352:	jnp    0x41e2dc
  41e354:	in     al,0x5b
  41e356:	xor    dh,cl
  41e358:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e359:	shr    BYTE PTR [eax+eiz*1-0x74],0xd3
  41e35e:	push   ecx
  41e35f:	loop   0x41e3c8
  41e361:	les    ebp,FWORD PTR [ecx+0x6d]
  41e364:	xor    BYTE PTR [edx],0x8e
  41e367:	test   eax,0xc1264d08
  41e36c:	pop    esp
  41e36d:	int3   
  41e36e:	mov    WORD PTR [edx-0x55395a30],ds
  41e374:	ins    DWORD PTR es:[edi],dx
  41e375:	push   0x4c
  41e377:	lods   al,BYTE PTR ds:[esi]
  41e378:	sbb    al,BYTE PTR [ebx-0x48339f4]
  41e37e:	lea    esp,[edi-0x55]
  41e381:	push   esi
  41e382:	mov    ?,edi
  41e384:	inc    edx
  41e385:	aas    
  41e386:	icebp  
  41e387:	fld    QWORD PTR [ecx-0x3a]
  41e38a:	adc    bl,al
  41e38c:	push   edx
  41e38d:	lods   eax,DWORD PTR ds:[esi]
  41e38e:	out    0xe4,al
  41e390:	rcl    ebx,1
  41e392:	and    dh,BYTE PTR [edx-0x57]
  41e395:	and    eax,0x4062c355
  41e39a:	sub    eax,0x6bd69939
  41e39f:	ss mov esp,0x556c7b5b
  41e3a5:	push   ebx
  41e3a6:	mov    WORD PTR [ecx-0x70],gs
  41e3a9:	dec    esp
  41e3aa:	push   0x52
  41e3ac:	sbb    al,0xe5
  41e3ae:	mov    BYTE PTR [edi],dh
  41e3b0:	jecxz  0x41e415
  41e3b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3b3:	add    DWORD PTR [ebx-0x1a],edx
  41e3b6:	push   esp
  41e3b7:	enter  0x2ea6,0x83
  41e3bb:	jb     0x41e3c5
  41e3bd:	out    dx,al
  41e3be:	jns    0x41e36c
  41e3c0:	sub    al,0xcc
  41e3c2:	call   0x8df4a208
  41e3c7:	xor    eax,0xbfef8ae7
  41e3cc:	out    dx,al
  41e3cd:	add    BYTE PTR [esi-0x50738994],cl
  41e3d3:	(bad)  
  41e3d4:	pop    ss
  41e3d5:	imul   BYTE PTR [edi]
  41e3d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3d8:	arpl   WORD PTR [ecx+0x42],sp
  41e3db:	mov    esi,0x4224a6fb
  41e3e0:	popa   
  41e3e1:	jns    0x41e3e8
  41e3e3:	lahf   
  41e3e4:	xchg   esp,eax
  41e3e5:	jmp    0x41e3f8
  41e3e7:	lods   eax,DWORD PTR ds:[esi]
  41e3e8:	clc    
  41e3e9:	ficom  DWORD PTR [ecx-0x7fad936d]
  41e3ef:	pop    esi
  41e3f0:	sbb    al,0x46
  41e3f2:	shl    DWORD PTR [ebx-0x26],0x52
  41e3f6:	inc    esi
  41e3f7:	inc    edx
  41e3f8:	hlt    
  41e3f9:	(bad)  
  41e3fb:	sub    DWORD PTR [ecx],0x65
  41e3fe:	jg     0x41e41b
  41e400:	mov    ebp,0xfa6248c1
  41e405:	mov    esp,0x1aca15b0
  41e40a:	or     eax,0x85772cb4
  41e40f:	stos   BYTE PTR es:[edi],al
  41e410:	adc    BYTE PTR [edx],ah
  41e412:	ins    BYTE PTR es:[edi],dx
  41e413:	iret   
  41e414:	adc    al,0xc8
  41e416:	add    esp,esi
  41e418:	add    al,0x56
  41e41a:	sahf   
  41e41b:	ins    BYTE PTR es:[edi],dx
  41e41c:	jns    0x41e493
  41e41e:	mov    dl,0x9a
  41e420:	cdq    
  41e421:	icebp  
  41e422:	imul   ebx,DWORD PTR ds:0x266d6fa9,0x72
  41e429:	mov    ebp,0x75af6a8a
  41e42e:	adc    esp,DWORD PTR [esi]
  41e430:	jg     0x41e4a0
  41e432:	js     0x41e46b
  41e434:	xchg   esp,eax
  41e435:	push   cs
  41e436:	out    dx,eax
  41e437:	cmp    edx,DWORD PTR [eax-0x409cd575]
  41e43d:	mov    esp,esi
  41e43f:	lods   eax,DWORD PTR ds:[esi]
  41e440:	dec    ebx
  41e441:	test   eax,0xe259ec44
  41e446:	jecxz  0x41e49e
  41e448:	and    cl,BYTE PTR [ecx]
  41e44a:	lds    esi,FWORD PTR [edx+edi*8-0x4e]
  41e44e:	loopne 0x41e463
  41e450:	test   eax,0x8d900707
  41e455:	mov    dl,0x24
  41e457:	mov    dh,ch
  41e459:	fmul   QWORD PTR [eax]
  41e45b:	mov    ebp,ss
  41e45d:	fdiv   QWORD PTR [edi]
  41e45f:	add    esi,DWORD PTR [edi+esi*2-0x64]
  41e463:	cmp    eax,0x70b35793
  41e468:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e469:	repz shl DWORD PTR [ebp-0x33c82359],1
  41e470:	iret   
  41e471:	and    eax,0x9420cba1
  41e476:	mov    ds,WORD PTR [esp+eax*4+0x4c55bfd1]
  41e47d:	cld    
  41e47e:	jno    0x41e4e1
  41e480:	ds push es
  41e482:	pop    ds
  41e483:	pop    edx
  41e484:	jmp    0x41e40f
  41e486:	push   cs
  41e487:	outs   dx,BYTE PTR ds:[esi]
  41e488:	adc    DWORD PTR [ebp+edx*8+0x3cbb15c3],eax
  41e48f:	sbb    edi,ebx
  41e491:	inc    ebp
  41e492:	mov    ecx,0xd227cd49
  41e497:	fisub  DWORD PTR [ebp+0x27]
  41e49a:	push   ss
  41e49b:	xchg   esp,eax
  41e49c:	jmp    0x79adc00c
  41e4a1:	addr16 dec eax
  41e4a3:	sbb    BYTE PTR gs:[ebp+0x26],cl
  41e4a7:	push   cs
  41e4a8:	mov    eax,ds:0xca287357
  41e4ad:	inc    eax
  41e4ae:	pop    edx
  41e4af:	pop    ebx
  41e4b0:	pusha  
  41e4b1:	sbb    BYTE PTR [ebx],ch
  41e4b3:	adc    ebx,DWORD PTR [ebp-0x74]
  41e4b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4b7:	cmc    
  41e4b8:	clc    
  41e4b9:	sti    
  41e4ba:	mov    cl,0x60
  41e4bc:	shl    BYTE PTR ds:0x95b9d67d,cl
  41e4c2:	fs mov cl,0x6f
  41e4c5:	mov    dl,0xa
  41e4c7:	(bad)  
  41e4c8:	cdq    
  41e4c9:	push   esi
  41e4ca:	test   al,0xd3
  41e4cc:	xor    BYTE PTR [ecx+0x49],bh
  41e4cf:	ins    BYTE PTR es:[edi],dx
  41e4d0:	es cmc 
  41e4d2:	dec    ecx
  41e4d3:	es cs xchg ebx,eax
  41e4d6:	adc    al,0x4a
  41e4d8:	mov    ds:0xa786be19,eax
  41e4dd:	dec    esi
  41e4de:	inc    ebp
  41e4df:	dec    esp
  41e4e0:	ins    DWORD PTR es:[edi],dx
  41e4e1:	xor    bl,BYTE PTR [eax+ebp*1-0x1c8c5dd2]
  41e4e8:	xor    eax,0x9d9ad89b
  41e4ed:	sub    BYTE PTR [esi+edi*4-0x676822a5],dl
  41e4f4:	popa   
  41e4f5:	pop    ebp
  41e4f6:	inc    eax
  41e4f7:	inc    ecx
  41e4f8:	ds popf 
  41e4fa:	fsubr  DWORD PTR [edi+eiz*4-0x5b]
  41e4fe:	mov    ?,WORD PTR [ebx+0x3a]
  41e501:	popf   
  41e502:	xor    eax,0xcd91ad08
  41e507:	int    0x22
  41e509:	icebp  
  41e50a:	jmp    0xe4af3e56
  41e50f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e510:	test   al,0xb6
  41e512:	add    esp,DWORD PTR ds:0x5a1e0341
  41e518:	imul   edi,DWORD PTR [edi],0x32
  41e51b:	xlat   BYTE PTR ds:[ebx]
  41e51c:	outs   dx,DWORD PTR ds:[esi]
  41e51d:	gs cmp al,dl
  41e520:	rcr    BYTE PTR [eax],cl
  41e522:	ret    
  41e523:	inc    esp
  41e524:	inc    eax
  41e525:	das    
  41e526:	mov    ebp,0x955f44af
  41e52b:	imul   esi,DWORD PTR [ecx],0xffffffca
  41e52e:	es je  0x41e4b1
  41e531:	(bad)  
  41e532:	fisubr WORD PTR [eax+edi*8+0x16]
  41e536:	fs push edx
  41e538:	rol    DWORD PTR [eax+0x37d7da58],0x94
  41e53f:	pop    edx
  41e540:	in     al,0x13
  41e542:	hlt    
  41e543:	shl    DWORD PTR [ecx-0x2ab4fd32],1
  41e549:	xor    cl,BYTE PTR [ebx]
  41e54b:	daa    
  41e54c:	lahf   
  41e54d:	adc    esp,DWORD PTR [eax-0x795afe25]
  41e553:	ret    0xd455
  41e556:	sub    ah,BYTE PTR [ebx+0x3317c16]
  41e55c:	lea    edx,[ecx+0x12f3a9a0]
  41e562:	lods   al,BYTE PTR ds:[esi]
  41e563:	xchg   esp,eax
  41e564:	jle    0x41e4f5
  41e566:	push   0xffffffc9
  41e568:	les    ebx,FWORD PTR [eax-0x10790e1]
  41e56e:	dec    eax
  41e56f:	int3   
  41e570:	push   edx
  41e571:	push   es
  41e572:	rol    DWORD PTR [ecx+esi*1-0x2fca877c],1
  41e579:	push   esp
  41e57a:	pop    es
  41e57b:	sti    
  41e57c:	int3   
  41e57d:	dec    ecx
  41e57e:	jge    0x41e511
  41e580:	inc    esp
  41e581:	sbb    bl,ch
  41e583:	popf   
  41e584:	cli    
  41e585:	popa   
  41e586:	push   edi
  41e587:	(bad)
  41e58c:	dec    esi
  41e58d:	sti    
  41e58e:	(bad)  
  41e58f:	popf   
  41e590:	lea    ebx,[edx+0xb]
  41e593:	in     eax,dx
  41e594:	test   al,0x37
  41e596:	adc    esi,DWORD PTR [edx]
  41e598:	fistp  QWORD PTR [ecx+0xd9b5507]
  41e59e:	xor    esp,DWORD PTR [esp+ebx*4]
  41e5a1:	rcr    BYTE PTR [edi],0xcb
  41e5a4:	jno    0x41e5fe
  41e5a6:	sbb    ecx,DWORD PTR [eax-0x290c648e]
  41e5ac:	test   al,0xb2
  41e5ae:	pop    ds
  41e5af:	das    
  41e5b0:	xchg   edi,eax
  41e5b1:	jge    0x41e5d2
  41e5b3:	jecxz  0x41e581
  41e5b5:	sub    eax,0xfc568fba
  41e5ba:	cmp    ch,BYTE PTR [ecx]
  41e5bc:	test   DWORD PTR [eax+0x14dca543],edx
  41e5c2:	test   al,0x33
  41e5c4:	(bad)  
  41e5c5:	imul   eax,DWORD PTR [ecx+ecx*4-0x44f031ad],0x78
  41e5cd:	sbb    eax,0xdc25884
  41e5d2:	and    eax,0x98513a9e
  41e5d7:	mov    ebx,0x9ebf3dbe
  41e5dc:	inc    BYTE PTR [ebp-0x53]
  41e5df:	mov    ds:0x73848fd8,eax
  41e5e4:	jne    0x41e59d
  41e5e6:	jl     0x41e60b
  41e5e8:	(bad)  [esi-0x4]
  41e5eb:	add    edi,esi
  41e5ed:	(bad)  
  41e5ee:	push   esp
  41e5ef:	rol    ah,cl
  41e5f1:	push   edx
  41e5f2:	in     eax,0xd5
  41e5f4:	xor    al,0x8d
  41e5f6:	mov    eax,0xd3c3bd75
  41e5fb:	sub    BYTE PTR [edx],ch
  41e5fd:	fidivr WORD PTR ss:[edx]
  41e600:	sbb    DWORD PTR [edi+0x25857915],ecx
  41e606:	jno    0x41e601
  41e608:	fisttp QWORD PTR [ebx]
  41e60a:	xchg   BYTE PTR [esi],bl
  41e60c:	out    dx,al
  41e60d:	and    bh,BYTE PTR [edx+edx*8]
  41e610:	psubusw mm6,mm2
  41e613:	xor    BYTE PTR [esp+edi*1+0x2266978a],bl
  41e61a:	shr    al,1
  41e61c:	or     al,0xe9
  41e61e:	cli    
  41e61f:	or     dl,BYTE PTR [eax]
  41e621:	mov    edi,0xd2547852
  41e626:	jnp    0x41e66e
  41e628:	xlat   BYTE PTR ds:[ebx]
  41e629:	fdiv   st(5),st
  41e62b:	scas   eax,DWORD PTR es:[edi]
  41e62c:	lock shl bl,cl
  41e62f:	pop    ebx
  41e630:	cmc    
  41e631:	inc    esp
  41e632:	or     ah,ah
  41e634:	inc    ecx
  41e635:	stc    
  41e636:	pushf  
  41e637:	add    edi,DWORD PTR [eax+0x3347d0bd]
  41e63d:	push   cs
  41e63e:	add    eax,0xa7c12c27
  41e643:	xchg   edi,eax
  41e644:	push   ds
  41e645:	stos   BYTE PTR es:[edi],al
  41e646:	mov    al,ds:0x70814fc1
  41e64b:	into   
  41e64c:	dec    edi
  41e64d:	sub    esp,DWORD PTR [eax+0x2b55fc31]
  41e653:	iret   
  41e654:	cmp    eax,0xf0567f64
  41e659:	scas   al,BYTE PTR es:[edi]
  41e65a:	add    al,0x1b
  41e65c:	lahf   
  41e65d:	div    BYTE PTR [ebx]
  41e65f:	dec    edi
  41e660:	outs   dx,BYTE PTR ds:[esi]
  41e661:	rcr    DWORD PTR [esi-0x48],1
  41e664:	lods   al,BYTE PTR ds:[esi]
  41e665:	pushf  
  41e666:	xor    cl,BYTE PTR [esi+0x30]
  41e669:	mov    edi,?
  41e66b:	sbb    BYTE PTR [ebp-0x3a],0xda
  41e66f:	cmp    ah,BYTE PTR [edi-0x210352d6]
  41e675:	loop   0x41e6ad
  41e677:	jns    0x41e64f
  41e679:	loope  0x41e6ab
  41e67b:	xchg   edx,eax
  41e67c:	xor    dh,BYTE PTR [edx+0x5238e262]
  41e682:	mov    bh,0xf
  41e684:	push   ebx
  41e685:	ret    
  41e686:	int3   
  41e687:	lea    ebx,[ebx+ebx*2+0x56a1c508]
  41e68e:	mov    ebp,0xb1b14ec4
  41e693:	retf   
  41e694:	push   esp
  41e695:	aam    0x26
  41e697:	out    0x2a,al
  41e699:	mov    cl,0x1
  41e69b:	clc    
  41e69c:	xor    dl,bl
  41e69e:	aad    0xbf
  41e6a0:	mov    gs,WORD PTR [esi-0x38]
  41e6a3:	add    ebp,eax
  41e6a5:	js     0x41e702
  41e6a7:	jo     0x41e6a3
  41e6a9:	ret    0xde88
  41e6ac:	pop    ecx
  41e6ad:	ficom  WORD PTR [ebp+0x1e649e29]
  41e6b3:	sub    ebp,0xffffffa6
  41e6b6:	rcl    DWORD PTR [edi+0x5d],0xd8
  41e6ba:	cmp    al,0x7e
  41e6bc:	aaa    
  41e6bd:	push   es
  41e6be:	xchg   esi,eax
  41e6bf:	cmp    DWORD PTR [edx-0x1f],edx
  41e6c2:	pusha  
  41e6c3:	fs inc edi
  41e6c5:	scas   eax,DWORD PTR es:[edi]
  41e6c6:	fcom   DWORD PTR [ecx-0x15]
  41e6c9:	les    edi,FWORD PTR [eax+0x4c]
  41e6cc:	push   esp
  41e6cd:	std    
  41e6ce:	jle    0x41e6cd
  41e6d0:	jns    0x41e740
  41e6d2:	dec    eax
  41e6d3:	popa   
  41e6d4:	js     0x41e73a
  41e6d6:	out    dx,eax
  41e6d7:	clc    
  41e6d8:	and    BYTE PTR [edx+ebx*8+0x56c82c5d],bh
  41e6df:	je     0x41e6d5
  41e6e1:	cli    
  41e6e2:	fsubr  QWORD PTR [edx+0xe]
  41e6e5:	and    eax,0xe6b220c5
  41e6ea:	dec    ecx
  41e6eb:	(bad)  
  41e6ed:	std    
  41e6ee:	cmp    edi,DWORD PTR [edi]
  41e6f0:	(bad)  
  41e6f1:	jge    0x41e71e
  41e6f3:	push   ss
  41e6f4:	sahf   
  41e6f5:	test   al,0x82
  41e6f7:	aad    0xa3
  41e6f9:	in     eax,0xf8
  41e6fb:	push   ebp
  41e6fc:	pushf  
  41e6fd:	cmp    eax,0xf49926b9
  41e702:	mov    bh,0xea
  41e704:	pop    DWORD PTR [ebx-0x18]
  41e707:	cs jbe 0x41e75f
  41e70a:	xlat   BYTE PTR ds:[ebx]
  41e70b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e70c:	sar    BYTE PTR ds:0xc406aa7f,cl
  41e712:	mov    ebx,0xea35e88
  41e717:	sbb    al,0xb2
  41e719:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e71a:	add    bl,BYTE PTR [ebx]
  41e71c:	lods   al,BYTE PTR ds:[esi]
  41e71d:	mov    WORD PTR [ebx-0x57814106],?
  41e723:	pop    eax
  41e724:	push   edi
  41e725:	fild   WORD PTR [edi+0x34]
  41e728:	mov    ch,bh
  41e72a:	mov    dl,0xb0
  41e72c:	push   ss
  41e72d:	or     al,BYTE PTR [ebx-0xf]
  41e730:	xchg   BYTE PTR [edx-0x73422b8],al
  41e736:	inc    esi
  41e737:	mov    ds:0x42a668b2,eax
  41e73c:	or     BYTE PTR [eax+0x4f],0x1b
  41e740:	pop    ecx
  41e741:	inc    edi
  41e742:	xchg   dh,bl
  41e744:	out    dx,eax
  41e745:	ret    
  41e746:	rcr    dl,1
  41e748:	js     0x41e6ca
  41e74a:	mov    ds:0x3c3937eb,eax
  41e74f:	fbld   TBYTE PTR [ebp-0x6ac0aa01]
  41e755:	inc    ebx
  41e756:	icebp  
  41e757:	pop    edx
  41e758:	sub    BYTE PTR [edx-0x35c798ae],al
  41e75e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e75f:	setns  BYTE PTR [ebp+0x6]
  41e763:	xor    al,0xd1
  41e765:	add    al,0xf8
  41e768:	and    eax,edi
  41e76a:	cmp    ecx,ebx
  41e76c:	loope  0x41e76a
  41e76e:	pop    esp
  41e76f:	ds cld 
  41e771:	add    ebx,DWORD PTR [eax+0x56]
  41e774:	cmp    bh,BYTE PTR [ebp-0x7fffea1]
  41e77a:	add    al,0x0
  41e77c:	add    BYTE PTR [eax+esi*2-0x2b],al
  41e780:	(bad)  
  41e782:	repnz pop ebp
  41e784:	adc    al,0x1c
  41e786:	xchg   ebx,eax
  41e787:	sub    dl,BYTE PTR [ecx]
  41e789:	dec    eax
  41e78a:	mov    al,0x7
  41e78c:	cmp    al,0x53
  41e78e:	ror    bl,1
  41e790:	out    0xd5,al
  41e792:	outs   dx,DWORD PTR ds:[esi]
  41e793:	adc    dl,cl
  41e795:	cld    
  41e796:	ss int 0x7f
  41e799:	push   esp
  41e79a:	add    esp,esp
  41e79c:	inc    edi
  41e79d:	in     eax,dx
  41e79e:	pop    esp
  41e79f:	xor    BYTE PTR [edi-0xb],ch
  41e7a2:	dec    edi
  41e7a3:	jg     0x41e755
  41e7a5:	mov    edi,0xf09d237d
  41e7aa:	aas    
  41e7ab:	xor    al,0x8a
  41e7ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7ae:	add    al,0x5b
  41e7b0:	icebp  
  41e7b1:	mov    ss,edx
  41e7b3:	and    eax,0xf22cf8c2
  41e7b8:	fst    QWORD PTR ds:0x8d213dbd
  41e7be:	popf   
  41e7bf:	xor    DWORD PTR [eax],ebp
  41e7c1:	sub    BYTE PTR [ebp-0x5926669c],al
  41e7c7:	popf   
  41e7c8:	push   cs
  41e7c9:	lods   al,BYTE PTR ds:[esi]
  41e7ca:	in     al,0x33
  41e7cc:	mov    edx,0x823d7d59
  41e7d1:	mov    DWORD PTR ds:0x7227f05,eax
  41e7d7:	fst    DWORD PTR [ecx+0x59]
  41e7da:	jmp    0x11a4:0x11efbb4b
  41e7e1:	(bad)  
  41e7e2:	lds    ecx,FWORD PTR [esi]
  41e7e4:	push   ebp
  41e7e5:	(bad)  
  41e7e6:	imul   ecx,DWORD PTR [ebx+ecx*8-0x32],0x72c57bc1
  41e7ee:	pop    edx
  41e7ef:	or     dh,cl
  41e7f1:	std    
  41e7f2:	rol    DWORD PTR [eax+0x43914d5f],0x3e
  41e7f9:	repnz inc ebx
  41e7fb:	jmp    0x41e878
  41e7fd:	push   cs
  41e7fe:	jecxz  0x41e7d8
  41e800:	aas    
  41e801:	mov    ds:0xd3a361b3,eax
  41e806:	sub    eax,0xef28a251
  41e80b:	jae    0x41e7cb
  41e80d:	add    al,0xca
  41e80f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e810:	ret    
  41e811:	cdq    
  41e812:	jbe    0x41e813
  41e814:	sbb    DWORD PTR [ecx-0x13],edi
  41e817:	or     eax,0x6b589416
  41e81c:	push   edi
  41e81d:	jnp    0x41e7a2
  41e81f:	outs   dx,BYTE PTR ds:[esi]
  41e820:	mov    al,ds:0x95e3d3c
  41e825:	popf   
  41e826:	xchg   esp,eax
  41e827:	xor    esi,DWORD PTR [eax]
  41e829:	stos   BYTE PTR es:[edi],al
  41e82a:	push   esi
  41e82b:	xor    eax,DWORD PTR [eax-0x6c]
  41e82e:	in     eax,0xdd
  41e830:	das    
  41e831:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e832:	push   es
  41e833:	das    
  41e834:	das    
  41e835:	sahf   
  41e836:	clc    
  41e837:	cmc    
  41e838:	sbb    al,dl
  41e83a:	adc    al,0xa0
  41e83c:	fwait
  41e83d:	adc    eax,DWORD PTR [esi+0x589da127]
  41e843:	jecxz  0x41e818
  41e845:	pusha  
  41e846:	cli    
  41e847:	fidivr WORD PTR [ebx]
  41e849:	sbb    DWORD PTR [ecx*8+0x3d97ad8e],0xc521dc15
  41e854:	pop    ds
  41e855:	inc    edx
  41e856:	pop    edx
  41e857:	(bad)  
  41e858:	ins    DWORD PTR es:[edi],dx
  41e859:	mov    DWORD PTR [eax-0x37352061],ebx
  41e85f:	cwde   
  41e860:	push   ss
  41e861:	push   es
  41e862:	int    0xf8
  41e864:	sar    DWORD PTR [edi+0x6],0xec
  41e868:	lock cmc 
  41e86a:	call   0x1512:0xd95ebb25
  41e871:	and    BYTE PTR [ebx-0x16d5554d],dh
  41e877:	mov    edi,0xdfaf1a4f
  41e87c:	cmp    eax,0x86840daa
  41e881:	jmp    0x41e888
  41e883:	cld    
  41e884:	pop    edx
  41e885:	lds    esp,FWORD PTR [ecx-0x6b]
  41e888:	shr    DWORD PTR [esi-0x453b8f47],0x64
  41e88f:	ins    DWORD PTR es:[edi],dx
  41e890:	sbb    DWORD PTR [edi],0x5ffa14d5
  41e896:	jbe    0x41e8cf
  41e898:	xchg   ecx,eax
  41e899:	xchg   edi,esp
  41e89b:	out    0x24,eax
  41e89d:	(bad)  
  41e89e:	inc    DWORD PTR [ebx-0x5f]
  41e8a1:	mov    edx,0x71e50ef0
  41e8a6:	xor    eax,0x37433f3a
  41e8ab:	shl    BYTE PTR [edi-0x2ace05a9],0x60
  41e8b2:	bound  eax,QWORD PTR [ebx+0x5e]
  41e8b5:	jl     0x41e8a2
  41e8b7:	inc    DWORD PTR [ebp-0x1a55bf2b]
  41e8bd:	ins    BYTE PTR es:[edi],dx
  41e8be:	cmp    al,0xfe
  41e8c0:	or     BYTE PTR [esi+0x5b44a47b],bl
  41e8c6:	add    al,0x86
  41e8c8:	shl    BYTE PTR [ebx],cl
  41e8ca:	lea    eax,[esi+0x34e9ea9c]
  41e8d0:	jnp    0x41e941
  41e8d2:	call   0xb3e2:0xdcdcee06
  41e8d9:	imul   ecx,DWORD PTR [edi],0x39409ed2
  41e8df:	cdq    
  41e8e0:	stos   DWORD PTR es:[edi],eax
  41e8e1:	mov    al,ds:0x137e8fa9
  41e8e6:	cld    
  41e8e7:	test   eax,0xe7817f50
  41e8ec:	pop    esi
  41e8ed:	push   ss
  41e8ee:	or     al,0x98
  41e8f0:	sbb    eax,0xbdd40185
  41e8f5:	and    DWORD PTR [eax+eax*8-0x5dbb94d0],0x61
  41e8fd:	into   
  41e8fe:	(bad)  
  41e8ff:	cmp    eax,0xab48efa4
  41e904:	pop    edi
  41e905:	lods   al,BYTE PTR ds:[esi]
  41e906:	iret   
  41e907:	or     DWORD PTR [esi],0x46d53ed3
  41e90d:	mov    edi,0xbaf3876c
  41e912:	or     ecx,ebp
  41e914:	xor    BYTE PTR [edx-0x73a7030f],al
  41e91a:	mov    cl,0x22
  41e91c:	(bad)  
  41e91d:	ror    DWORD PTR [ecx],cl
  41e91f:	cmp    edi,DWORD PTR [eax]
  41e921:	outs   dx,DWORD PTR ds:[esi]
  41e922:	push   esp
  41e923:	push   esp
  41e924:	pop    ebp
  41e925:	in     eax,0x6c
  41e927:	mov    al,0x47
  41e929:	dec    ebx
  41e92a:	mov    ?,ecx
  41e92c:	loop   0x41e8c5
  41e92e:	dec    ebp
  41e92f:	mov    BYTE PTR [edx-0xf74ce44],0xbf
  41e936:	int    0x9
  41e938:	in     al,0xb
  41e93a:	scas   al,BYTE PTR es:[edi]
  41e93b:	retf   0x5971
  41e93e:	mov    ds:0xe345819,eax
  41e943:	cdq    
  41e944:	scas   eax,DWORD PTR es:[edi]
  41e945:	lock addr16 push ss
  41e948:	jo     0x41e980
  41e94a:	pop    esi
  41e94b:	in     al,0x9d
  41e94d:	lds    esi,FWORD PTR [esi-0x73]
  41e950:	nop
  41e951:	retf   
  41e952:	push   ds
  41e953:	sbb    DWORD PTR [edx+0x19],esi
  41e956:	dec    eax
  41e957:	ins    BYTE PTR es:[edi],dx
  41e958:	jne    0x41e8e1
  41e95a:	cmp    al,0xc9
  41e95c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e95d:	pop    esp
  41e95e:	adc    BYTE PTR [ecx+0x1e1fc0b6],ch
  41e964:	cmp    edx,eax
  41e966:	dec    edi
  41e967:	ror    DWORD PTR [ecx+0x71],0xdb
  41e96b:	xchg   edx,eax
  41e96c:	stc    
  41e96d:	or     ebp,DWORD PTR [edx-0x431a68af]
  41e973:	(bad)  
  41e974:	jecxz  0x41e9cb
  41e976:	sahf   
  41e977:	inc    edx
  41e978:	xchg   DWORD PTR [eax-0x515a7814],ebp
  41e97e:	fwait
  41e97f:	in     eax,dx
  41e980:	fbld   TBYTE PTR [ebx-0x1d7f486a]
  41e986:	jmp    0x41e944
  41e988:	loope  0x41e9f1
  41e98a:	cmp    ah,BYTE PTR [ebp+0x5f356788]
  41e990:	dec    ecx
  41e991:	fxam   
  41e993:	jns    0x41e9d9
  41e995:	out    0x1d,eax
  41e997:	lock jg 0x41e9df
  41e99a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e99b:	mov    dh,BYTE PTR [edx]
  41e99d:	mov    BYTE PTR [ecx+0x7e],dh
  41e9a0:	xor    cl,BYTE PTR [ebx]
  41e9a2:	sbb    al,0x23
  41e9a4:	dec    eax
  41e9a5:	jo     0x41e94a
  41e9a7:	inc    edi
  41e9a8:	add    DWORD PTR [ebx],ebx
  41e9aa:	arpl   WORD PTR [edi+ebx*2+0x78],cx
  41e9ae:	(bad)  
  41e9af:	sbb    edx,DWORD PTR [eax]
  41e9b1:	fwait
  41e9b2:	push   ebx
  41e9b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9b4:	daa    
  41e9b5:	mov    BYTE PTR [esi+0x51847587],ch
  41e9bb:	aaa    
  41e9bc:	xchg   esp,eax
  41e9bd:	retf   0x5d01
  41e9c0:	dec    ecx
  41e9c1:	test   BYTE PTR [ebx-0x2d],bl
  41e9c4:	mov    al,ds:0xdee0240c
  41e9c9:	push   0x68f6a086
  41e9ce:	out    0x80,al
  41e9d0:	repz sub eax,0x80499130
  41e9d6:	jmp    0x9037:0xd3addffa
  41e9dd:	or     eax,0xf2ff88d5
  41e9e2:	xchg   ebx,eax
  41e9e3:	mov    BYTE PTR [eax+0x5d],al
  41e9e6:	dec    ebp
  41e9e7:	sbb    eax,0xd3f763ef
  41e9ec:	mov    WORD PTR [eax+0x70],?
  41e9ef:	test   al,0xaf
  41e9f1:	sbb    al,0xab
  41e9f3:	test   DWORD PTR [eax+0x3c5272a7],ebx
  41e9f9:	add    edx,0xffffff96
  41e9fc:	inc    ebp
  41e9fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9fe:	aad    0xb7
  41ea00:	leave  
  41ea01:	inc    esi
  41ea02:	loopne 0x41e9e3
  41ea04:	fwait
  41ea05:	idiv   DWORD PTR [esi+0xea2ac2]
  41ea0b:	fidivr WORD PTR [eax-0x3b]
  41ea0e:	jo     0x41e9b6
  41ea10:	and    al,0x2
  41ea12:	neg    DWORD PTR fs:[ecx]
  41ea15:	adc    dl,ch
  41ea17:	inc    ebp
  41ea18:	imul   ebp,DWORD PTR [ecx+0x23],0xffffffaf
  41ea1c:	xchg   eax,edx
  41ea1e:	out    dx,eax
  41ea1f:	fnstcw WORD PTR ds:0x9be5aea7
  41ea25:	cmp    eax,0x14773951
  41ea2a:	xchg   DWORD PTR [ebx+0x2cac7f07],ebp
  41ea30:	xchg   DWORD PTR [ebx+0x475da0dd],ebx
  41ea36:	in     eax,dx
  41ea37:	ss in  eax,dx
  41ea39:	mov    ebx,0xcde05a03
  41ea3e:	ficomp DWORD PTR [eax+0x1d]
  41ea41:	mov    dl,0x48
  41ea43:	xchg   esi,eax
  41ea44:	xchg   esp,eax
  41ea45:	lock sub eax,0xa4276af5
  41ea4b:	push   ebx
  41ea4c:	sar    edx,cl
  41ea4e:	loope  0x41e9e7
  41ea50:	loop   0x41eac0
  41ea52:	mov    ds:0x9bc33983,al
  41ea57:	pop    ds
  41ea58:	scas   al,BYTE PTR es:[edi]
  41ea59:	ficomp DWORD PTR [ebp+0x3269e003]
  41ea5f:	adc    al,BYTE PTR [edi-0x3c]
  41ea62:	jb     0x41eaae
  41ea64:	mov    DWORD PTR [ebx],ebp
  41ea66:	push   ds
  41ea67:	out    0x8f,eax
  41ea69:	adc    al,0xf2
  41ea6b:	push   esp
  41ea6c:	mov    esi,0xcb842b10
  41ea71:	xchg   dl,dh
  41ea73:	(bad)  
  41ea75:	dec    edi
  41ea76:	ds sub eax,0x4ef726d
  41ea7c:	dec    esi
  41ea7d:	add    DWORD PTR [ebx],edx
  41ea7f:	ss mov edx,0xcb6dbbb7
  41ea85:	lods   al,BYTE PTR ds:[esi]
  41ea86:	ret    0xe3c4
  41ea89:	popa   
  41ea8a:	or     eax,0xffb644eb
  41ea8f:	imul   ebx,edi,0xffffffbd
  41ea92:	sahf   
  41ea93:	xchg   DWORD PTR [ebx-0x5e],ecx
  41ea96:	and    dl,BYTE PTR [ebx-0x54]
  41ea99:	cli    
  41ea9a:	push   ecx
  41ea9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea9c:	add    eax,0x8ca0cf0f
  41eaa1:	jge    0x41eb0c
  41eaa3:	ud2    
  41eaa5:	dec    ebx
  41eaa6:	sub    dl,ch
  41eaa8:	fcmovnbe st,st(2)
  41eaaa:	sub    dl,BYTE PTR [esi]
  41eaac:	rcl    BYTE PTR [ebp+0x251b971f],cl
  41eab2:	out    0x86,eax
  41eab4:	mov    ebx,0xd0b9ec8b
  41eab9:	call   0x7c91b1c7
  41eabe:	ins    BYTE PTR es:[edi],dx
  41eabf:	fld    DWORD PTR [esp+esi*1-0x1b]
  41eac3:	sahf   
  41eac4:	dec    esp
  41eac5:	and    edx,DWORD PTR [ecx]
  41eac7:	xor    al,0x7e
  41eac9:	stos   BYTE PTR es:[edi],al
  41eaca:	in     al,dx
  41eacb:	repz mov edx,0xc40a401
  41ead1:	(bad)  
  41ead2:	std    
  41ead3:	jg     0x41ea55
  41ead5:	push   ss
  41ead6:	jno    0x41ea6f
  41ead8:	push   eax
  41ead9:	int    0xdc
  41eadb:	xchg   ebx,eax
  41eadc:	pop    ss
  41eadd:	and    al,0x11
  41eadf:	stc    
  41eae0:	sub    al,0xd1
  41eae2:	aam    0x0
  41eae4:	push   eax
  41eae5:	rcr    BYTE PTR [eax],cl
  41eae7:	pushf  
  41eae8:	retf   
  41eae9:	loope  0x41eb4d
  41eaeb:	sbb    al,0xe5
  41eaed:	adc    ecx,DWORD PTR [edx]
  41eaef:	mov    DWORD PTR [ebx*1+0x5fdf6424],ebp
  41eaf6:	sub    bl,BYTE PTR gs:[esi-0x9]
  41eafa:	retf   
  41eafb:	xchg   DWORD PTR [edi],edi
  41eafd:	push   ss
  41eafe:	aad    0xb4
  41eb00:	dec    esi
  41eb01:	mov    eax,ds:0xfc44d5d3
  41eb06:	add    ah,bh
  41eb08:	xor    esi,edx
  41eb0a:	retf   0xb854
  41eb0d:	adc    eax,0x87623b3f
  41eb12:	dec    ebx
  41eb13:	bound  edx,QWORD PTR [bp+0x4535]
  41eb18:	xchg   di,ax
  41eb1a:	mov    ?,WORD PTR [edx+0x67]
  41eb1d:	pop    esp
  41eb1e:	xor    eax,0x7d3e2ce5
  41eb23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb24:	nop
  41eb25:	dec    ebx
  41eb26:	add    edi,ecx
  41eb28:	stos   BYTE PTR es:[edi],al
  41eb29:	popa   
  41eb2a:	pop    esp
  41eb2b:	pusha  
  41eb2c:	mov    BYTE PTR ds:0x44c94d7b,ch
  41eb32:	inc    ebp
  41eb33:	and    BYTE PTR [esi-0x44],bl
  41eb36:	loopne 0x41ebad
  41eb38:	fnstenv [eax+ebx*8-0x1f53562b]
  41eb3f:	test   DWORD PTR [esi+0x42],0x61cc53f0
  41eb46:	std    
  41eb47:	jo     0x41eb45
  41eb49:	out    0x3,al
  41eb4b:	sar    BYTE PTR [ecx+0x2a5b089],cl
  41eb51:	adc    BYTE PTR [ecx],ch
  41eb53:	dec    cx
  41eb55:	jl     0x41eb07
  41eb57:	adc    BYTE PTR [edx-0x79c8bda6],ch
  41eb5d:	inc    edx
  41eb5e:	jmp    0xb22:0x6fbcd368
  41eb65:	jmp    0xbfe8:0x3785880b
  41eb6c:	stc    
  41eb6d:	push   ecx
  41eb6e:	or     DWORD PTR [edi-0x1e],esp
  41eb71:	cmp    esi,DWORD PTR [edx-0x3e]
  41eb74:	push   edi
  41eb75:	jmp    0x4ba8:0x9a219cc5
  41eb7c:	aad    0xd7
  41eb7e:	push   ss
  41eb7f:	leave  
  41eb80:	call   0x1eb10135
  41eb85:	aaa    
  41eb86:	add    al,BYTE PTR [eax]
  41eb88:	aas    
  41eb89:	sbb    BYTE PTR [ebx+0x31492614],ch
  41eb8f:	rol    DWORD PTR [eax],cl
  41eb91:	retf   
  41eb92:	ja     0x41eb4a
  41eb94:	pop    ecx
  41eb95:	loop   0x41eb22
  41eb97:	add    DWORD PTR ds:0x68db7e9,eax
  41eb9d:	mov    al,BYTE PTR [eax-0x40]
  41eba0:	xchg   esi,eax
  41eba1:	shr    DWORD PTR [edx+0x339cd89a],0x50
  41eba8:	inc    ecx
  41eba9:	add    ebp,DWORD PTR [edx]
  41ebab:	test   DWORD PTR [eax-0x2a],esp
  41ebae:	add    DWORD PTR [esi*8+0x2e48b3ef],eax
  41ebb5:	stos   BYTE PTR es:[edi],al
  41ebb6:	les    esi,FWORD PTR [edi+0x5f6aa877]
  41ebbc:	jno    0x41ec35
  41ebbe:	xchg   ebp,eax
  41ebbf:	cmp    bh,bh
  41ebc1:	jle    0x41ebe5
  41ebc3:	test   BYTE PTR [ebp-0x32811ae8],0x64
  41ebca:	mov    esi,0xaf031be0
  41ebcf:	push   cs
  41ebd0:	or     bl,BYTE PTR [edi-0x61f0fb17]
  41ebd6:	xchg   ebp,eax
  41ebd7:	test   ebp,edx
  41ebd9:	or     BYTE PTR [esi],dl
  41ebdb:	mov    cl,0x13
  41ebdd:	sti    
  41ebde:	mov    ds:0x5bc9f8d,al
  41ebe3:	push   ss
  41ebe4:	jp     0x41ec1b
  41ebe6:	push   cs
  41ebe7:	(bad)  
  41ebe8:	and    al,bh
  41ebea:	xor    ebp,DWORD PTR [ecx]
  41ebec:	jmp    0x41eb74
  41ebee:	lods   al,BYTE PTR ds:[esi]
  41ebef:	stos   BYTE PTR es:[edi],al
  41ebf0:	or     BYTE PTR [esi-0x2ea09821],cl
  41ebf6:	test   DWORD PTR [esi],ecx
  41ebf8:	cld    
  41ebf9:	sbb    al,0xb1
  41ebfb:	in     al,dx
  41ebfc:	int3   
  41ebfd:	loope  0x41ec73
  41ebff:	pop    ss
  41ec00:	outs   dx,DWORD PTR ds:[esi]
  41ec01:	mov    edx,0x17c50799
  41ec06:	outs   dx,DWORD PTR ds:[esi]
  41ec07:	mov    bh,0xb6
  41ec09:	or     al,0xd7
  41ec0b:	adc    DWORD PTR [esi],edx
  41ec0d:	inc    esi
  41ec0e:	int    0xb2
  41ec10:	fs cs (bad) 
  41ec13:	cdq    
  41ec14:	rcl    BYTE PTR [esi+0xb],0xe5
  41ec18:	mov    cs,WORD PTR [edi+0x6070325c]
  41ec1e:	loope  0x41ec04
  41ec20:	mov    eax,ds:0xc7c6885b
  41ec25:	inc    edi
  41ec26:	xchg   BYTE PTR [edi+0xa],ah
  41ec29:	sar    DWORD PTR [ecx+0x7a1687b],0x16
  41ec30:	dec    esp
  41ec31:	cmp    eax,0x2ab5b41
  41ec36:	jb     0x41ebf7
  41ec38:	pop    es
  41ec39:	dec    eax
  41ec3a:	cmp    BYTE PTR [ebx+eax*2],0xae
  41ec3e:	cwde   
  41ec3f:	adc    esp,DWORD PTR [edx]
  41ec41:	adc    BYTE PTR [esi+eax*1-0x5c674010],dl
  41ec48:	xchg   esi,eax
  41ec49:	push   0xffffffcd
  41ec4b:	push   eax
  41ec4c:	nop
  41ec4d:	add    eax,0x8fdf7723
  41ec52:	xor    eax,0xcc025420
  41ec57:	scas   al,BYTE PTR es:[edi]
  41ec58:	gs dec ebp
  41ec5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec5b:	ja     0x41ec26
  41ec5d:	jo     0x41ec0e
  41ec5f:	test   BYTE PTR [esi-0x7537562b],ch
  41ec65:	mov    cl,0x17
  41ec67:	jmp    FWORD PTR [ebx-0x1ca2b78a]
  41ec6d:	into   
  41ec6e:	out    dx,al
  41ec6f:	add    al,0x81
  41ec71:	stc    
  41ec72:	inc    eax
  41ec73:	outs   dx,BYTE PTR ds:[esi]
  41ec74:	mov    esp,0x55b9787f
  41ec79:	mov    edi,0x667affd5
  41ec7e:	jecxz  0x41ecc8
  41ec80:	repz cmp al,0x3
  41ec83:	nop
  41ec84:	mov    ecx,0x164b5
  41ec89:	clc    
  41ec8a:	add    al,0x0
  41ec8c:	add    dl,dh
  41ec8e:	xor    al,0x38
  41ec90:	scas   eax,DWORD PTR es:[edi]
  41ec91:	and    edx,edx
  41ec93:	inc    eax
  41ec94:	sar    DWORD PTR [ebp-0x93927b9],cl
  41ec9a:	ins    DWORD PTR es:[edi],dx
  41ec9b:	std    
  41ec9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec9d:	es cld 
  41ec9f:	dec    ebx
  41eca0:	push   edi
  41eca1:	mov    edi,0x57f0a681
  41eca6:	das    
  41eca7:	fs mov esp,0x6e87e80a
  41ecad:	pop    ss
  41ecae:	js     0x41ece9
  41ecb0:	pop    edi
  41ecb1:	mov    al,ds:0xce5dd7f9
  41ecb6:	push   cs
  41ecb7:	mov    ds:0x8d7b3571,al
  41ecbc:	lods   eax,DWORD PTR ds:[esi]
  41ecbd:	dec    ecx
  41ecbe:	mov    dl,0x84
  41ecc0:	mov    eax,ds:0x79d58043
  41ecc5:	jge    0x41ec84
  41ecc7:	sub    al,0xec
  41ecc9:	cmp    ebx,DWORD PTR [ecx+0x2f]
  41eccc:	mov    WORD PTR [ebx+0x58],gs
  41eccf:	stos   BYTE PTR es:[edi],al
  41ecd0:	(bad)  
  41ecd1:	mov    esp,0x66a09105
  41ecd6:	sbb    bh,al
  41ecd8:	test   DWORD PTR [ebx-0x59],esp
  41ecdb:	jmp    FWORD PTR [si]
  41ecde:	and    ebp,DWORD PTR [ebp+0x3f155901]
  41ece4:	ss mov al,0xab
  41ece7:	push   esp
  41ece8:	rcr    dl,1
  41ecea:	out    dx,eax
  41eceb:	call   0x1cebe5db
  41ecf0:	jge    0x41ecb3
  41ecf2:	popa   
  41ecf3:	jp     0x41ece9
  41ecf5:	mov    ebp,0xb80f1c30
  41ecfa:	cmp    edi,esi
  41ecfc:	mov    ds:0x2a4955e1,al
  41ed01:	sub    dl,dl
  41ed03:	fadd   st(0),st
  41ed05:	out    0x77,al
  41ed07:	sub    dh,BYTE PTR [esi+0x52d07ac7]
  41ed0d:	stc    
  41ed0e:	out    dx,al
  41ed0f:	inc    ebp
  41ed10:	cmp    al,al
  41ed12:	fsub   st(1),st
  41ed14:	inc    eax
  41ed15:	out    dx,eax
  41ed16:	outs   dx,DWORD PTR ds:[esi]
  41ed17:	test   al,0x49
  41ed19:	loope  0x41eca6
  41ed1b:	div    DWORD PTR [ebx+ecx*8+0x32]
  41ed1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed20:	pop    edi
  41ed21:	cmp    DWORD PTR [esi-0x46],eax
  41ed24:	scas   eax,DWORD PTR es:[edi]
  41ed25:	imul   esi,DWORD PTR [ecx-0x3b],0x27
  41ed29:	jno    0x41ed06
  41ed2b:	dec    ecx
  41ed2c:	sar    BYTE PTR [esi+0x64559122],1
  41ed32:	test   edi,edx
  41ed34:	inc    eax
  41ed35:	push   0xab24f751
  41ed3a:	pop    ebx
  41ed3b:	lea    edx,[esp+ebx*1-0x67]
  41ed3f:	mov    cl,0x56
  41ed41:	ins    BYTE PTR es:[edi],dx
  41ed42:	sti    
  41ed43:	retf   
  41ed44:	mov    dl,0x3f
  41ed46:	mov    ah,0xad
  41ed48:	and    ebp,DWORD PTR [ebp+0x63face8]
  41ed4e:	popf   
  41ed4f:	outs   dx,BYTE PTR ds:[esi]
  41ed50:	nop
  41ed51:	ror    BYTE PTR [ebp+0x7c3d1e6b],0x57
  41ed58:	mov    cl,cl
  41ed5a:	sahf   
  41ed5b:	adc    esp,esp
  41ed5d:	jb     0x41ed0a
  41ed5f:	pop    ss
  41ed60:	push   edi
  41ed61:	push   ss
  41ed62:	inc    ebx
  41ed63:	mov    bh,BYTE PTR [ecx-0x11]
  41ed66:	cmp    ch,BYTE PTR [esi-0x554f1bb0]
  41ed6c:	push   ebx
  41ed6e:	and    BYTE PTR [edx],ch
  41ed70:	push   0x5d
  41ed72:	xchg   ebx,eax
  41ed73:	hlt    
  41ed74:	dec    esp
  41ed75:	mov    ds:0x68d47eeb,eax
  41ed7a:	dec    esp
  41ed7b:	and    DWORD PTR [edi-0x206dbe5f],ebp
  41ed81:	int    0xe8
  41ed83:	push   0xcee913de
  41ed88:	es sub DWORD PTR ds:[edx+eax*4+0x56],esp
  41ed8e:	jmp    0x1130f55d
  41ed93:	cli    
  41ed94:	or     ch,BYTE PTR [ebx-0x36db780a]
  41ed9a:	mov    ch,0xca
  41ed9c:	(bad)  
  41ed9d:	sar    ah,0xa2
  41eda0:	mov    WORD PTR [ebp+0xe],?
  41eda3:	fadd   st(3),st
  41eda5:	mov    esp,0xf99a7a95
  41edaa:	ret    0xa9fa
  41edad:	sbb    BYTE PTR [ebx],0x70
  41edb0:	fst    QWORD PTR [eax+0x22]
  41edb3:	fild   DWORD PTR [eax+0x58]
  41edb6:	bswap  edi
  41edb8:	out    dx,al
  41edb9:	xchg   ebp,eax
  41edba:	cdq    
  41edbb:	outs   dx,DWORD PTR ds:[esi]
  41edbc:	lea    esi,[edx+ebp*2]
  41edbf:	js     0x41eddd
  41edc1:	mov    eax,0x84dc9954
  41edc6:	jle    0x41ee14
  41edc8:	or     dh,BYTE PTR [edi-0x1f]
  41edcb:	dec    edi
  41edcc:	cmp    DWORD PTR [eax+0x15],edx
  41edcf:	xchg   edi,eax
  41edd0:	jge    0x41ed8d
  41edd2:	ret    
  41edd3:	(bad)  
  41edd4:	loop   0x41ed7c
  41edd6:	inc    ebp
  41edd7:	or     al,0x19
  41edd9:	xchg   esp,eax
  41edda:	btr    ecx,esi
  41eddd:	add    cl,cl
  41eddf:	mov    ah,0xe4
  41ede1:	dec    ecx
  41ede2:	add    al,0xb5
  41ede4:	pop    eax
  41ede5:	and    ah,BYTE PTR [ecx+0x6b]
  41ede8:	icebp  
  41ede9:	jge    0x41ee10
  41edeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edec:	push   eax
  41eded:	in     eax,0xb2
  41edef:	into   
  41edf0:	jne    0x41ee43
  41edf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edf3:	aaa    
  41edf4:	test   DWORD PTR [edx+edx*4],esi
  41edf7:	(bad)  
  41edf8:	je     0x41ee5a
  41edfa:	pop    esp
  41edfb:	push   edx
  41edfc:	dec    edx
  41edfd:	mov    ebp,0x7004b18f
  41ee02:	in     al,dx
  41ee03:	aad    0x89
  41ee05:	test   BYTE PTR [ebx],cl
  41ee07:	cmp    BYTE PTR [edi+0x71],ch
  41ee0a:	scas   al,BYTE PTR es:[edi]
  41ee0b:	fwait
  41ee0c:	lods   eax,DWORD PTR ds:[esi]
  41ee0d:	cdq    
  41ee0e:	mov    eax,ds:0xd74d0951
  41ee13:	dec    esp
  41ee14:	mov    edx,0xf8ab7527
  41ee19:	or     al,0xc4
  41ee1b:	sbb    BYTE PTR [ecx+0x344fe914],dh
  41ee21:	aad    0x81
  41ee23:	icebp  
  41ee24:	fcmove st,st(7)
  41ee26:	push   ecx
  41ee27:	add    ebp,edx
  41ee29:	sar    WORD PTR [esi-0x46fc0bcb],cl
  41ee30:	push   0xec064f83
  41ee35:	retf   
  41ee36:	lods   eax,DWORD PTR ds:[esi]
  41ee37:	pop    es
  41ee38:	mov    ecx,0xad6103de
  41ee3d:	cmc    
  41ee3e:	sub    BYTE PTR [ebp+0x53],0x31
  41ee42:	in     al,dx
  41ee43:	iret   
  41ee44:	call   0xebb0:0x6a2c1100
  41ee4b:	sbb    eax,DWORD PTR [ecx]
  41ee4d:	jns    0x41eeb7
  41ee4f:	ds dec ebp
  41ee51:	repnz mov ch,0x54
  41ee54:	sbb    eax,ecx
  41ee56:	ret    0x9816
  41ee59:	jno    0x41ee40
  41ee5b:	sti    
  41ee5c:	fisub  WORD PTR [edx+0x15effcdb]
  41ee62:	and    DWORD PTR [ecx+0x11bd2962],0xb2cece67
  41ee6c:	dec    eax
  41ee6d:	lods   eax,DWORD PTR ds:[esi]
  41ee6e:	test   bh,ch
  41ee70:	xor    al,0x21
  41ee72:	int3   
  41ee73:	(bad)  
  41ee75:	jge    0x41ee04
  41ee77:	pop    esi
  41ee78:	and    DWORD PTR [ebx+0x7b],eax
  41ee7b:	jp     0x41ee06
  41ee7d:	aam    0x73
  41ee7f:	(bad)  
  41ee80:	mov    esp,0x6b88a8
  41ee85:	mov    al,0x87
  41ee87:	jl     0x41ee29
  41ee89:	iret   
  41ee8a:	lock and ah,BYTE PTR [edx+edi*2+0x4fa120ea]
  41ee92:	clc    
  41ee93:	(bad)  
  41ee94:	mov    edx,DWORD PTR [edi-0x7944ec7]
  41ee9a:	mov    DWORD PTR ds:0x6b3d0d16,ebp
  41eea0:	sti    
  41eea1:	scas   al,BYTE PTR es:[edi]
  41eea2:	ins    DWORD PTR es:[edi],dx
  41eea3:	(bad)  
  41eea4:	add    al,0x5d
  41eea6:	popa   
  41eea7:	inc    eax
  41eea8:	pop    ss
  41eea9:	test   al,0x98
  41eeab:	aaa    
  41eeac:	lods   eax,DWORD PTR ds:[esi]
  41eead:	arpl   WORD PTR [edi],si
  41eeaf:	neg    al
  41eeb1:	cmp    eax,0xce91d8bc
  41eeb6:	call   FWORD PTR [ebx+0x27]
  41eeb9:	cmp    BYTE PTR [esi-0xe4fc3ed],dh
  41eebf:	retf   0x7cea
  41eec2:	mov    DWORD PTR [edi+0x62],ecx
  41eec5:	pop    es
  41eec6:	addr16 in al,dx
  41eec8:	dec    ebp
  41eec9:	aaa    
  41eeca:	pop    edx
  41eecb:	push   eax
  41eecc:	das    
  41eecd:	(bad)  
  41eece:	sub    eax,0xe2dd662f
  41eed3:	popa   
  41eed4:	sbb    DWORD PTR [edi+eax*8-0x74],ebp
  41eed8:	pop    ebp
  41eed9:	mov    ebp,0xa652f4bb
  41eede:	ja     0x41ef33
  41eee0:	loopne 0x41ef35
  41eee2:	mov    ds:0xa3fb9fdc,al
  41eee7:	push   ss
  41eee8:	mov    eax,ds:0xb2e6f767
  41eeed:	ret    0x7e8f
  41eef0:	shl    bl,cl
  41eef2:	and    DWORD PTR [ebp+0x5a0b8323],edi
  41eef8:	mov    ds:0x275ef86b,eax
  41eefd:	cmc    
  41eefe:	and    edi,DWORD PTR [esi+0x61]
  41ef01:	sub    BYTE PTR [edi],bh
  41ef03:	out    dx,eax
  41ef04:	xor    eax,0x9027be8d
  41ef09:	xor    BYTE PTR [edx],0xa0
  41ef0c:	outs   dx,BYTE PTR ds:[esi]
  41ef0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef0e:	fcom   DWORD PTR [ebx+0x393efccd]
  41ef14:	cli    
  41ef15:	arpl   WORD PTR [ebx-0x43],cx
  41ef18:	fidivr DWORD PTR [ebx+eax*2+0x2b]
  41ef1c:	ret    0xa0be
  41ef1f:	dec    edi
  41ef20:	leave  
  41ef21:	je     0x41eebe
  41ef23:	lock add al,BYTE PTR [ebx+0x73c46023]
  41ef2a:	sbb    ax,0x42f
  41ef2e:	add    al,0x52
  41ef30:	push   ebp
  41ef31:	shl    DWORD PTR [edx+ebx*8+0x50],0xb6
  41ef36:	dec    ebp
  41ef37:	mov    bh,0xfa
  41ef39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef3a:	das    
  41ef3b:	mov    ebp,DWORD PTR [esi]
  41ef3d:	aam    0xec
  41ef3f:	cmp    bh,bl
  41ef41:	mov    esp,0x6a545949
  41ef46:	aad    0x51
  41ef48:	or     edi,DWORD PTR ds:0x963d882f
  41ef4e:	add    dh,ah
  41ef50:	pop    esi
  41ef51:	adc    eax,0xd52c5bb7
  41ef56:	cli    
  41ef57:	cmp    esi,DWORD PTR [ecx]
  41ef59:	adc    ebx,eax
  41ef5b:	cmp    eax,0xbb226753
  41ef60:	xchg   edi,eax
  41ef61:	and    BYTE PTR [ebx+0x13914c6a],dh
  41ef67:	int    0x5b
  41ef69:	in     al,dx
  41ef6a:	xor    DWORD PTR [eax+0x74],ebx
  41ef6d:	ds mov bh,0xbf
  41ef70:	add    ah,dl
  41ef72:	fs (bad) 
  41ef74:	cmp    eax,0x4bf46a6
  41ef79:	inc    edi
  41ef7a:	push   esi
  41ef7b:	int    0x86
  41ef7d:	(bad)  
  41ef7f:	xchg   ebx,eax
  41ef80:	call   0x76baecdf
  41ef85:	imul   ebp,DWORD PTR fs:[ecx-0x48],0xd027b186
  41ef8d:	repnz fptan 
  41ef90:	jb     0x41efc7
  41ef92:	stos   BYTE PTR es:[edi],al
  41ef93:	pause  
  41ef95:	mov    ebp,0x8dbecdbb
  41ef9a:	pushf  
  41ef9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef9c:	cdq    
  41ef9d:	fidiv  DWORD PTR [edi+0x28eb19cd]
  41efa3:	sub    DWORD PTR [edi],edi
  41efa5:	fsubr  DWORD PTR [edi]
  41efa7:	lods   eax,DWORD PTR ds:[esi]
  41efa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efa9:	loopne 0x41ef2b
  41efab:	jp     0x41ef51
  41efad:	pop    esi
  41efae:	dec    ecx
  41efaf:	cmp    ebx,esp
  41efb1:	pop    ss
  41efb2:	stos   DWORD PTR es:[edi],eax
  41efb3:	pop    edx
  41efb4:	hlt    
  41efb5:	add    DWORD PTR [ecx],0x11
  41efb8:	bound  edi,QWORD PTR [edi]
  41efba:	in     eax,dx
  41efbb:	ficomp WORD PTR [edx+0x4]
  41efbe:	fist   WORD PTR [ecx+0x5b]
  41efc1:	pop    ds
  41efc2:	mov    ah,BYTE PTR [ecx]
  41efc4:	out    dx,al
  41efc5:	fdivr  QWORD PTR [esi+0x4b]
  41efc8:	addr16 stc 
  41efca:	cmp    eax,0x35cd5f43
  41efcf:	xchg   esp,eax
  41efd0:	cmp    ebx,DWORD PTR [eax]
  41efd2:	dec    ebx
  41efd3:	fcom   DWORD PTR [esi-0x33c699e7]
  41efd9:	sub    BYTE PTR [eax-0x47521db8],0x4a
  41efe0:	cmp    esp,DWORD PTR [edx]
  41efe2:	out    dx,eax
  41efe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efe4:	cli    
  41efe5:	or     BYTE PTR [edx+0x51b6350a],ah
  41efeb:	in     eax,0x8f
  41efed:	mov    bl,0xd6
  41efef:	imul   esi,esi,0x1f708c94
  41eff5:	xchg   esi,eax
  41eff6:	jo     0x41f027
  41eff8:	leave  
  41eff9:	daa    
  41effa:	mov    ebx,0xa6a39c27
  41efff:	rcr    BYTE PTR [eax],1
  41f001:	fidivr WORD PTR [eax+ecx*2]
  41f004:	call   0xa35b86e1
  41f009:	dec    eax
  41f00a:	lods   eax,DWORD PTR ds:[esi]
  41f00b:	sub    al,0xd2
  41f00d:	adc    DWORD PTR [esi+0x7123053e],ebx
  41f013:	imul   BYTE PTR [esi-0x3d]
  41f016:	pop    ebp
  41f017:	cmp    bh,dh
  41f019:	addr16 xchg bx,ax
  41f01c:	test   eax,0x929502ac
  41f021:	pop    ebx
  41f022:	std    
  41f023:	add    al,bl
  41f025:	mov    eax,0xa80e8f85
  41f02a:	push   es
  41f02b:	ficom  DWORD PTR [ecx-0x46]
  41f02e:	push   0xf85a249c
  41f033:	ds aaa 
  41f035:	push   ebp
  41f036:	mov    gs,WORD PTR [edi+0x7273598d]
  41f03c:	adc    DWORD PTR cs:[edx],0xd6735274
  41f043:	jae    0x41f002
  41f045:	dec    eax
  41f046:	jmp    0x41f03a
  41f048:	scas   al,BYTE PTR es:[edi]
  41f049:	add    BYTE PTR [eax-0x5c],ah
  41f04c:	mov    ah,BYTE PTR [ecx+0x365a4f1e]
  41f052:	(bad)  
  41f053:	mov    esp,0x6a2433e3
  41f058:	mov    ds:0x5c067606,al
  41f05d:	and    esi,DWORD PTR [edi+0x4c]
  41f060:	sar    BYTE PTR [eax-0x5f],1
  41f063:	addr16 in al,dx
  41f065:	xor    BYTE PTR [edi],cl
  41f067:	ins    DWORD PTR es:[edi],dx
  41f068:	xchg   esi,eax
  41f069:	out    dx,al
  41f06a:	sbb    BYTE PTR [eax+0x3f],ah
  41f06d:	xchg   ebp,eax
  41f06e:	ins    BYTE PTR es:[edi],dx
  41f06f:	sub    DWORD PTR [ecx-0x6054fea0],0x21
  41f076:	push   cs
  41f077:	or     DWORD PTR [ecx+0x87741dd],eax
  41f07d:	cs hlt 
  41f07f:	mov    esi,0xa2c243f1
  41f084:	inc    esi
  41f085:	add    cl,BYTE PTR [edx-0x661927a7]
  41f08b:	xchg   ebp,eax
  41f08c:	adc    al,0xa1
  41f08e:	loopne 0x41f0e6
  41f090:	add    BYTE PTR [ebx+0x77],cl
  41f093:	adc    ecx,DWORD PTR [edi+edx*8-0x58979314]
  41f09a:	or     ch,dl
  41f09c:	or     esp,ebx
  41f09e:	mov    eax,0x1c744058
  41f0a3:	mov    bl,0x7d
  41f0a5:	jo     0x41f09a
  41f0a7:	icebp  
  41f0a8:	adc    esp,DWORD PTR [eax-0x130463e7]
  41f0ae:	mov    dh,0x50
  41f0b0:	loopne 0x41f0d3
  41f0b2:	iret   
  41f0b3:	push   ecx
  41f0b4:	xor    ch,bl
  41f0b6:	mov    ah,0x1
  41f0b8:	loopne 0x41f0db
  41f0ba:	mov    BYTE PTR [eax],al
  41f0bc:	pop    ebx
  41f0bd:	xor    al,0xdd
  41f0bf:	cmp    DWORD PTR [esi-0x204d68b7],ecx
  41f0c5:	scas   eax,DWORD PTR es:[edi]
  41f0c6:	jmp    0x41f130
  41f0c8:	jne    0x41f119
  41f0ca:	adc    esi,ecx
  41f0cc:	mov    bl,0xf4
  41f0ce:	cdq    
  41f0cf:	ds das 
  41f0d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0d2:	lahf   
  41f0d3:	arpl   WORD PTR [eax-0x56],ax
  41f0d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0d7:	push   ebx
  41f0d8:	imul   eax,edx,0x5a
  41f0db:	xor    edi,ebx
  41f0dd:	(bad)  
  41f0de:	aaa    
  41f0df:	loop   0x41f15e
  41f0e1:	mov    cl,0x70
  41f0e3:	cwde   
  41f0e4:	mov    ds:0xc6e867f0,eax
  41f0e9:	arpl   WORD PTR [eax-0x154f6098],dx
  41f0ef:	outs   dx,BYTE PTR ds:[esi]
  41f0f0:	(bad)  
  41f0f1:	fsub   st,st(4)
  41f0f3:	jmp    0x4d69:0xfffc3608
  41f0fa:	push   esp
  41f0fb:	sar    DWORD PTR [esi+0x62],cl
  41f0fe:	data16 mov ds:0x65ad32b1,al
  41f104:	dec    edi
  41f105:	push   0xfffffff6
  41f107:	and    BYTE PTR [edi],ch
  41f109:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f10a:	in     eax,0x20
  41f10c:	push   ebx
  41f10d:	(bad)  
  41f10e:	pop    es
  41f10f:	stos   BYTE PTR es:[edi],al
  41f110:	pop    ebp
  41f111:	mov    dl,0xaa
  41f113:	xchg   edx,eax
  41f114:	add    eax,0x72a4929b
  41f119:	or     DWORD PTR [edi+0xe],ebp
  41f11c:	pop    ss
  41f11d:	gs gs xchg ebx,eax
  41f120:	shl    BYTE PTR [ecx+edx*1],0x36
  41f124:	repz dec ecx
  41f126:	dec    ebp
  41f127:	int    0x23
  41f129:	mov    ecx,0xb20ef3c9
  41f12e:	cs adc eax,0xb7bab2e
  41f134:	shl    BYTE PTR [esi],0xfa
  41f137:	fiadd  DWORD PTR es:[ebx-0x43ca8abe]
  41f13e:	and    cl,BYTE PTR [edi]
  41f140:	aad    0x8c
  41f142:	imul   edi,DWORD PTR [edx-0x60],0x5faa9be9
  41f149:	clc    
  41f14a:	mov    bl,BYTE PTR [esi+0x57]
  41f14d:	pop    ss
  41f14e:	fcom   DWORD PTR [edi]
  41f150:	lds    ebx,FWORD PTR [edx-0x7595a9f1]
  41f156:	arpl   WORD PTR [edi],dx
  41f158:	push   edx
  41f159:	mov    edx,0x79952a0a
  41f15e:	xchg   edi,eax
  41f15f:	sbb    edx,edx
  41f161:	scas   eax,DWORD PTR es:[edi]
  41f162:	and    DWORD PTR [ebx+0x1c],ecx
  41f165:	out    dx,eax
  41f166:	cmp    dh,BYTE PTR [edx-0x6c]
  41f169:	xor    eax,DWORD PTR [ebx+eax*2]
  41f16c:	cmp    al,0x2f
  41f16e:	jp     0x41f1af
  41f170:	jmp    0x20b62b89
  41f175:	in     eax,dx
  41f176:	mov    DWORD PTR [ecx+0x78bf4e6d],ebx
  41f17c:	mov    esp,ecx
  41f17e:	xchg   esp,eax
  41f17f:	jge    0x41f140
  41f181:	jnp    0x41f126
  41f183:	adc    al,0x52
  41f185:	push   edx
  41f186:	push   ecx
  41f187:	cmp    BYTE PTR [ebx],al
  41f189:	cmp    ebp,DWORD PTR [ebx+0x7b]
  41f18c:	push   ecx
  41f18d:	push   ss
  41f18e:	or     BYTE PTR [esi+ecx*8],cl
  41f191:	loopne 0x41f116
  41f193:	mov    eax,0x169ad30
  41f198:	add    al,bh
  41f19a:	add    al,0x0
  41f19c:	add    bl,cl
  41f19e:	mov    BYTE PTR [esi+0x38],bh
  41f1a1:	xchg   esp,eax
  41f1a2:	pop    eax
  41f1a3:	fsub   QWORD PTR [ebx-0x4744d437]
  41f1a9:	aad    0x72
  41f1ab:	call   0x6aa:0x1b0a4846
  41f1b2:	sub    al,0xfb
  41f1b4:	js     0x41f181
  41f1b6:	stos   BYTE PTR es:[edi],al
  41f1b7:	adc    ebx,0x52479cd5
  41f1bd:	out    0x7c,eax
  41f1bf:	int3   
  41f1c0:	jae    0x41f21d
  41f1c2:	sbb    edx,eax
  41f1c4:	out    0x7,eax
  41f1c6:	mov    esp,0x964cbe3e
  41f1cb:	inc    ecx
  41f1cc:	adc    DWORD PTR [eax-0x4a125e58],ebp
  41f1d2:	cmp    BYTE PTR [ecx],0x91
  41f1d5:	xor    esi,DWORD PTR [ecx-0x35]
  41f1d8:	je     0x41f232
  41f1da:	call   0x77cc:0x687b6456
  41f1e1:	fisttp DWORD PTR ds:0x9e2b7029
  41f1e7:	cmp    DWORD PTR [esi-0x25],ecx
  41f1ea:	mov    ds:0xaa952c39,al
  41f1ef:	test   eax,0xa5e5c5dd
  41f1f4:	mov    al,0x95
  41f1f6:	inc    eax
  41f1f7:	jnp    0x41f260
  41f1f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1fa:	or     bl,BYTE PTR [esi]
  41f1fc:	xlat   BYTE PTR ds:[ebx]
  41f1fd:	adc    eax,0x4cdd60f2
  41f202:	pop    edx
  41f203:	stc    
  41f204:	jle    0x41f262
  41f206:	ret    0xaafe
  41f209:	(bad)  
  41f20a:	sti    
  41f20b:	cmp    dh,bl
  41f20d:	cld    
  41f20e:	or     al,0x94
  41f210:	cdq    
  41f211:	adc    eax,0x9270b304
  41f216:	add    DWORD PTR [eax+ecx*4-0x3e],0xffffff86
  41f21b:	not    DWORD PTR [ecx]
  41f21d:	cmp    al,0x66
  41f21f:	dec    edi
  41f220:	add    ah,BYTE PTR [edx-0x48]
  41f223:	outs   dx,BYTE PTR ds:[esi]
  41f224:	test   eax,0x3b4185a7
  41f229:	mov    esi,0xbbcf3524
  41f22e:	call   0xe5f4bb6b
  41f233:	pop    ecx
  41f234:	mov    dl,0xdc
  41f236:	rcl    DWORD PTR [edi+eax*1-0x27],0xe0
  41f23b:	es xchg ebx,eax
  41f23d:	sbb    eax,0x9069f037
  41f242:	outs   dx,DWORD PTR ds:[esi]
  41f243:	push   ds
  41f244:	pushf  
  41f245:	and    BYTE PTR [esi+eax*4],bh
  41f248:	mov    bl,0x26
  41f24a:	or     esp,ebx
  41f24c:	dec    ebp
  41f24d:	pop    edi
  41f24e:	pop    es
  41f24f:	or     eax,0x562cafdd
  41f254:	leave  
  41f255:	test   al,0xff
  41f257:	fdiv   QWORD PTR [ebp-0x35997c2d]
  41f25d:	adc    DWORD PTR [edx],ecx
  41f25f:	ins    BYTE PTR es:[edi],dx
  41f260:	cmp    edi,DWORD PTR [esi+0x690e0acc]
  41f266:	int    0xf2
  41f268:	mov    dl,bl
  41f26a:	pop    ebx
  41f26b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f26c:	mov    edx,0xe9542405
  41f271:	xchg   ebx,eax
  41f272:	stc    
  41f273:	jns    0x41f270
  41f275:	sub    eax,0x63cc5dc8
  41f27a:	stos   DWORD PTR es:[edi],eax
  41f27b:	add    edi,DWORD PTR [ebp-0x57635c41]
  41f281:	sbb    BYTE PTR [ebp+eiz*8-0x28],al
  41f285:	and    ecx,DWORD PTR [edi-0xe]
  41f288:	test   al,0x28
  41f28a:	(bad)  
  41f28b:	loop   0x41f306
  41f28d:	aas    
  41f28e:	aam    0xfc
  41f290:	mov    al,0xf0
  41f292:	pop    ecx
  41f293:	js     0x41f245
  41f295:	int    0xef
  41f297:	out    dx,al
  41f298:	loope  0x41f2f0
  41f29a:	or     ah,bh
  41f29c:	mov    edi,0xa0cb11fa
  41f2a1:	sub    eax,0x3c4baeb2
  41f2a6:	enter  0x373a,0xfb
  41f2aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2ab:	iret   
  41f2ac:	push   ds
  41f2ad:	sahf   
  41f2ae:	fwait
  41f2af:	add    al,0x36
  41f2b1:	out    0x89,al
  41f2b3:	icebp  
  41f2b4:	jmp    edx
  41f2b6:	std    
  41f2b7:	pop    ebx
  41f2b8:	jp     0x41f2c0
  41f2ba:	test   ebx,esp
  41f2bc:	ins    BYTE PTR es:[edi],dx
  41f2bd:	sub    DWORD PTR [ebp-0x605f823a],eax
  41f2c3:	pop    es
  41f2c4:	imul   ebp,DWORD PTR [eax-0xc],0x9caae432
  41f2cb:	stos   BYTE PTR es:[edi],al
  41f2cc:	stos   DWORD PTR es:[edi],eax
  41f2cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2ce:	jne    0x41f2e3
  41f2d0:	mov    eax,0x960f2c8d
  41f2d5:	xchg   ebp,eax
  41f2d6:	mov    eax,ds:0x8a054e1f
  41f2db:	push   ecx
  41f2dc:	jecxz  0x41f2c7
  41f2de:	outs   dx,DWORD PTR ds:[esi]
  41f2df:	add    ecx,DWORD PTR [edx-0x531c0590]
  41f2e5:	fst    DWORD PTR [ecx+ebx*4]
  41f2e8:	push   ecx
  41f2e9:	sbb    eax,0xa1468a7c
  41f2ee:	jno    0x41f30b
  41f2f0:	push   ds
  41f2f1:	dec    ebx
  41f2f2:	sbb    cl,BYTE PTR [eax]
  41f2f4:	loope  0x41f30b
  41f2f6:	or     al,0xd0
  41f2f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2f9:	dec    ebx
  41f2fa:	lds    eax,FWORD PTR ds:0x4d2af6f1
  41f300:	stc    
  41f301:	fldcw  WORD PTR [edi-0x43cc3918]
  41f307:	push   ds
  41f308:	push   ebp
  41f309:	jmp    0x41f2bb
  41f30b:	aad    0xfc
  41f30d:	call   0xb98a5723
  41f312:	std    
  41f313:	aas    
  41f314:	mov    DWORD PTR [ecx+0x57965b98],ebx
  41f31a:	add    esi,DWORD PTR [ecx+0x13]
  41f31d:	inc    esp
  41f31e:	push   esp
  41f31f:	ja     0x41f396
  41f321:	in     eax,0x5f
  41f323:	cli    
  41f324:	push   0xd49cf008
  41f329:	push   ss
  41f32a:	mov    ch,0xe1
  41f32c:	ror    BYTE PTR cs:[eax-0x14572522],1
  41f333:	repnz dec edi
  41f335:	add    ah,ah
  41f337:	popf   
  41f338:	dec    edi
  41f339:	call   0x7a22:0x7dfe58dd
  41f340:	inc    eax
  41f341:	dec    ebp
  41f342:	scas   al,BYTE PTR es:[edi]
  41f343:	repnz add al,BYTE PTR [esi]
  41f346:	retf   
  41f347:	cmp    bl,BYTE PTR [eax-0x31]
  41f34a:	push   0xe94e285d
  41f34f:	shl    BYTE PTR [edx-0x4c743c0],cl
  41f355:	int3   
  41f356:	in     eax,dx
  41f357:	gs and al,0xbd
  41f35a:	fsub   QWORD PTR [edi+0x751d0976]
  41f360:	fprem1 
  41f362:	push   0x2b
  41f364:	sbb    DWORD PTR cs:[edx+0x4405a819],ebx
  41f36b:	add    ebp,DWORD PTR [esi+0x5a7911b7]
  41f371:	and    ebx,DWORD PTR [eax]
  41f373:	sahf   
  41f374:	std    
  41f375:	jns    0x41f36e
  41f377:	sub    DWORD PTR [ecx+0x2],esp
  41f37a:	add    BYTE PTR [esi],ch
  41f37c:	adc    DWORD PTR [ebx-0x5],eax
  41f37f:	pop    ds
  41f380:	ret    0x8062
  41f383:	stc    
  41f384:	jl     0x41f317
  41f386:	cmp    BYTE PTR [ebx-0x8],ah
  41f389:	xchg   esi,eax
  41f38a:	lds    ecx,FWORD PTR [esi-0x3a0a1c98]
  41f390:	and    al,BYTE PTR [ebx+esi*4-0x3b0600f2]
  41f397:	fnstenv [ecx]
  41f399:	(bad)  
  41f39a:	cli    
  41f39b:	rol    DWORD PTR [eax+0x993210e],1
  41f3a1:	inc    ecx
  41f3a2:	fnstsw WORD PTR [edx]
  41f3a4:	(bad)  
  41f3a7:	mov    ss,WORD PTR [edi+0x1f]
  41f3aa:	test   eax,0xe876ee55
  41f3af:	in     eax,0x6d
  41f3b1:	bound  edi,QWORD PTR [eax]
  41f3b3:	ds popf 
  41f3b5:	cld    
  41f3b6:	(bad)  
  41f3b7:	clc    
  41f3b8:	mov    ebx,0x6aca985c
  41f3bd:	addr16 add eax,0x37f6bf88
  41f3c3:	xchg   ecx,eax
  41f3c4:	shr    BYTE PTR [eax+0x35500fbb],0x63
  41f3cb:	push   0xfffffffd
  41f3cd:	cmp    DWORD PTR [edx],0x9592fb0d
  41f3d3:	in     al,dx
  41f3d4:	add    ebp,DWORD PTR [esi-0x4c51d1ff]
  41f3da:	popa   
  41f3db:	xchg   esp,eax
  41f3dc:	push   edx
  41f3dd:	adc    ah,BYTE PTR [eax-0x719a1759]
  41f3e3:	push   esp
  41f3e4:	jb     0x41f41c
  41f3e6:	xchg   ecx,eax
  41f3e7:	imul   DWORD PTR [esi+0x7c9f3256]
  41f3ed:	test   BYTE PTR [ecx-0x6216f60a],cl
  41f3f3:	adc    eax,0x96e6b0d9
  41f3f8:	leave  
  41f3f9:	aas    
  41f3fa:	stos   DWORD PTR es:[edi],eax
  41f3fb:	out    0xde,al
  41f3fd:	test   DWORD PTR [edx-0x1f],0x81342835
  41f404:	sar    DWORD PTR [ecx+0x5e],cl
  41f407:	jnp    0x41f47e
  41f409:	aam    0xd5
  41f40b:	scas   al,BYTE PTR es:[edi]
  41f40c:	or     edi,DWORD PTR [eax-0xc652c6a]
  41f412:	int    0xa8
  41f414:	addr16 aaa 
  41f416:	and    eax,0x1f471d66
  41f41b:	imul   esp,DWORD PTR [eax+eiz*4+0x646619a7],0x83b02222
  41f426:	mov    esi,DWORD PTR [ebx-0x5f48bbc5]
  41f42c:	daa    
  41f42d:	std    
  41f42e:	addr16 ror ebx,0x46
  41f432:	mov    dh,0x86
  41f434:	ror    BYTE PTR [esi+0x22f4de51],cl
  41f43a:	push   ss
  41f43b:	loope  0x41f3cd
  41f43d:	xor    al,0xa0
  41f43f:	cwde   
  41f440:	dec    esi
  41f441:	jo     0x41f3eb
  41f443:	sbb    edi,DWORD PTR [edx+0x14eab5a6]
  41f449:	and    eax,0x747302ab
  41f44e:	ins    BYTE PTR es:[edi],dx
  41f44f:	adc    DWORD PTR [edi+esi*4+0x27895cba],ebp
  41f456:	aad    0x4
  41f458:	xor    al,0x41
  41f45a:	loope  0x41f43e
  41f45c:	test   eax,eax
  41f45e:	out    dx,al
  41f45f:	cmc    
  41f460:	mov    bh,0x26
  41f462:	mov    es,WORD PTR [ecx+0x23223839]
  41f468:	fwait
  41f469:	pop    ebp
  41f46a:	nop
  41f46b:	push   eax
  41f46c:	rol    DWORD PTR [ebp-0x35b98c24],0x7f
  41f473:	xlat   BYTE PTR ds:[ebx]
  41f474:	test   eax,0xeb5e1c9d
  41f479:	call   0x1cefb33c
  41f47e:	repnz xchg esi,ebx
  41f481:	push   esp
  41f482:	fldz   
  41f484:	mov    DWORD PTR [edi+0x13b7c79e],esi
  41f48a:	jl     0x41f45e
  41f48c:	push   ebp
  41f48d:	cmp    ch,BYTE PTR [edx+0x32]
  41f490:	push   0x226caefd
  41f495:	mov    WORD PTR [edi+0x247f372a],fs
  41f49b:	and    al,0xdb
  41f49d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f49e:	jae    0x41f4c8
  41f4a0:	fwait
  41f4a1:	ds push edx
  41f4a3:	adc    DWORD PTR [ecx],eax
  41f4a5:	mov    ebp,0x38e40a8
  41f4aa:	das    
  41f4ab:	mov    ch,0x6a
  41f4ae:	add    eax,0x88bb51f0
  41f4b3:	push   ss
  41f4b4:	dec    edx
  41f4b5:	sbb    al,dh
  41f4b7:	rcl    DWORD PTR [edi+0x5015d045],cl
  41f4bd:	test   BYTE PTR [eax-0x1ae0be53],cl
  41f4c3:	ins    BYTE PTR es:[edi],dx
  41f4c4:	in     al,0x62
  41f4c6:	stc    
  41f4c7:	xor    eax,0x8841658f
  41f4cc:	shr    BYTE PTR [eax-0x4d],0xda
  41f4d0:	jmp    0x70a58f8e
  41f4d5:	dec    esp
  41f4d6:	xor    BYTE PTR [ecx+0x28939564],bl
  41f4dc:	aad    0x2c
  41f4de:	shl    cl,1
  41f4e0:	rcr    esi,0xd3
  41f4e3:	sub    eax,0xf6004bcd
  41f4e8:	test   BYTE PTR [esi+0x42],ch
  41f4eb:	cs add al,0xe
  41f4ee:	loopne 0x41f51b
  41f4f0:	and    eax,0x93b41584
  41f4f5:	inc    ebp
  41f4f6:	daa    
  41f4f7:	pop    ebp
  41f4f8:	aaa    
  41f4f9:	cmp    DWORD PTR [edi-0x51],0x9e4edd3a
  41f500:	jae    0x41f4ab
  41f502:	sub    bh,dl
  41f504:	rol    BYTE PTR [eax+0x68],0x4a
  41f508:	test   DWORD PTR [ebx],esp
  41f50a:	inc    esp
  41f50b:	sub    dl,BYTE PTR [ecx-0x2a]
  41f50e:	xor    DWORD PTR [edx+0x45f3ee2d],edi
  41f514:	xlat   BYTE PTR ds:[ebx]
  41f515:	pop    ecx
  41f516:	mov    edi,0xd14130fe
  41f51b:	aas    
  41f51c:	sub    BYTE PTR [edi+0x39],0x8f
  41f520:	mov    al,0xe3
  41f522:	aas    
  41f523:	idiv   DWORD PTR [eax]
  41f525:	mov    dh,0xc1
  41f527:	jno    0x41f551
  41f529:	jno    0x41f59c
  41f52b:	sub    BYTE PTR ds:0x87e73500,dl
  41f531:	out    dx,al
  41f532:	adc    eax,0x914e72ac
  41f537:	pop    edi
  41f538:	fsub   QWORD PTR [ecx]
  41f53a:	int    0xce
  41f53c:	and    edx,DWORD PTR [eax+eax*1]
  41f53f:	or     ecx,DWORD PTR ds:0xf4734a1e
  41f545:	(bad)  
  41f546:	cli    
  41f547:	test   al,0xa8
  41f549:	mov    al,ds:0xf8fff065
  41f54e:	jb     0x41f5a9
  41f550:	add    BYTE PTR [eax],al
  41f552:	daa    
  41f553:	cmp    al,0xf
  41f555:	xchg   edx,eax
  41f556:	add    ebx,esi
  41f558:	sbb    eax,0xa8bbe963
  41f55d:	jg     0x41f566
  41f55f:	add    DWORD PTR [esi+0x77e55636],esi
  41f565:	jg     0x41f542
  41f567:	mov    bh,0x58
  41f569:	pop    eax
  41f56a:	ins    BYTE PTR es:[edi],dx
  41f56b:	adc    al,0x24
  41f56d:	xchg   BYTE PTR [esi-0x70],al
  41f570:	add    DWORD PTR [esi+ecx*1+0x40],ecx
  41f574:	xor    BYTE PTR [ecx-0x7a],dh
  41f577:	xchg   ebx,eax
  41f578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f579:	push   esi
  41f57a:	(bad)  
  41f57b:	mov    DWORD PTR ds:0x206cf676,ebx
  41f581:	jns    0x41f53d
  41f583:	scas   al,BYTE PTR es:[edi]
  41f584:	dec    ecx
  41f585:	aas    
  41f586:	add    eax,0xfb934b91
  41f58b:	mov    al,ds:0xf3f6165
  41f590:	mov    ?,WORD PTR [ebp-0x67f2b35e]
  41f596:	ins    BYTE PTR es:[edi],dx
  41f597:	mov    dl,0x20
  41f599:	lea    ebx,[eax-0x44c50e6b]
  41f59f:	jle    0x41f5e5
  41f5a1:	jg     0x41f5d7
  41f5a3:	mov    ds:0x9ad439c7,eax
  41f5a8:	inc    ax
  41f5aa:	xor    DWORD PTR [edx+0x488cc837],ebx
  41f5b0:	das    
  41f5b1:	xchg   esp,eax
  41f5b2:	lock sti 
  41f5b4:	(bad)  
  41f5b5:	scas   eax,DWORD PTR es:[edi]
  41f5b6:	sbb    al,0x3a
  41f5b8:	in     al,dx
  41f5b9:	push   ebx
  41f5ba:	call   0x17be:0xeeed3507
  41f5c1:	add    BYTE PTR [edi-0x56f0ff0],dh
  41f5c7:	inc    esp
  41f5c8:	mov    dh,0x60
  41f5ca:	ret    
  41f5cb:	or     ecx,eax
  41f5cd:	(bad)  
  41f5ce:	xchg   esi,eax
  41f5cf:	pop    esi
  41f5d0:	aaa    
  41f5d1:	push   ss
  41f5d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5d3:	sub    DWORD PTR [edi],ebp
  41f5d5:	mov    dl,0xab
  41f5d7:	mov    ah,0x66
  41f5d9:	pop    ss
  41f5da:	shr    ch,cl
  41f5dc:	add    al,0x96
  41f5de:	add    BYTE PTR [ebx+ebx*2-0x72],ah
  41f5e2:	dec    esi
  41f5e3:	test   eax,0x4db7df26
  41f5e8:	lock add edx,DWORD PTR [ebx+0x38]
  41f5ec:	inc    edx
  41f5ed:	or     BYTE PTR [edi-0x547ca69d],0xd7
  41f5f4:	adc    ecx,DWORD PTR [ecx+0x34]
  41f5f7:	inc    ecx
  41f5f8:	mov    ecx,0x89e5487c
  41f5fd:	mov    edi,0x6b769ed9
  41f602:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f603:	es pop ecx
  41f605:	lahf   
  41f606:	loopne 0x41f5ee
  41f608:	ss xchg ecx,eax
  41f60a:	and    eax,0x67473f0b
  41f60f:	in     al,0x14
  41f611:	jmp    0x2c50ffa9
  41f616:	sbb    eax,0x69de82ba
  41f61b:	leave  
  41f61c:	cmp    BYTE PTR [edi+esi*1],bh
  41f61f:	push   ecx
  41f620:	fwait
  41f621:	rcl    esi,cl
  41f623:	fild   QWORD PTR [edi+0x42e77eb0]
  41f629:	or     eax,0xe3928968
  41f62e:	stos   DWORD PTR es:[edi],eax
  41f62f:	je     0x41f66d
  41f631:	xchg   ecx,eax
  41f632:	and    BYTE PTR [ebp+0x5101e4d8],bh
  41f638:	and    eax,0xe84385f0
  41f63d:	adc    eax,0x8a099f0c
  41f642:	mov    al,ds:0xa7cb9451
  41f647:	int    0x16
  41f649:	in     al,0xa5
  41f64b:	je     0x41f63f
  41f64d:	loope  0x41f687
  41f64f:	jg     0x41f63e
  41f651:	es enter 0xe217,0x91
  41f656:	in     eax,dx
  41f657:	xor    DWORD PTR [ecx-0x57],0xffffffa9
  41f65b:	addr16 dec ecx
  41f65d:	fwait
  41f65e:	inc    esp
  41f65f:	inc    edi
  41f660:	dec    esi
  41f661:	(bad)
  41f664:	jmp    0xa165ee32
  41f669:	sub    DWORD PTR [ecx-0x47],ecx
  41f66c:	shl    BYTE PTR [ebp+0x55],cl
  41f66f:	retf   
  41f670:	dec    esp
  41f671:	jnp    0x41f67b
  41f673:	push   ds
  41f674:	jg     0x41f606
  41f676:	xor    eax,0xdcbb64f
  41f67b:	mov    ecx,0xc22ab7e0
  41f680:	(bad)  
  41f681:	fiadd  WORD PTR [ecx-0x23aa534d]
  41f687:	out    0x3,al
  41f689:	xor    bh,BYTE PTR [eax+0x114002ca]
  41f68f:	ss mov ebx,0x7206ed60
  41f695:	sub    esp,DWORD PTR [ecx-0x934ebbd]
  41f69b:	jg     0x41f65c
  41f69d:	xchg   ebx,eax
  41f69e:	in     al,0x34
  41f6a0:	xchg   edi,eax
  41f6a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6a2:	mov    cl,0x31
  41f6a4:	jl     0x41f64b
  41f6a6:	outs   dx,BYTE PTR ds:[esi]
  41f6a7:	add    DWORD PTR [eax],eax
  41f6a9:	clc    
  41f6aa:	add    al,0x0
  41f6ac:	add    BYTE PTR [edi],bh
  41f6ae:	push   0x7a
  41f6b0:	mov    edi,0x58638f10
  41f6b5:	add    eax,DWORD PTR [eax]
  41f6b7:	cmp    edx,ecx
  41f6b9:	pop    ebx
  41f6ba:	cmp    eax,0x75f5000
  41f6bf:	dec    eax
  41f6c0:	mov    ebp,DWORD PTR [edx]
  41f6c2:	xlat   BYTE PTR ds:[ebx]
  41f6c3:	(bad)  
  41f6c4:	nop
  41f6c5:	xor    edi,ebx
  41f6c7:	test   eax,0xd12196a
  41f6cc:	lods   al,BYTE PTR ds:[esi]
  41f6cd:	xchg   DWORD PTR [eax+0x6b],ebx
  41f6d0:	outs   dx,BYTE PTR ds:[esi]
  41f6d1:	cld    
  41f6d2:	dec    esi
  41f6d3:	adc    ebx,DWORD PTR [esi]
  41f6d5:	cmp    bl,al
  41f6d7:	imul   edx,DWORD PTR [ebx],0x27
  41f6da:	jb     0x41f70c
  41f6dc:	data16 jb 0x41f72b
  41f6df:	adc    esp,DWORD PTR [eax+0x79e0ed80]
  41f6e5:	sbb    DWORD PTR [edi-0x7efb74ac],0x63a1cc66
  41f6ef:	mov    edx,0x9d6ab129
  41f6f4:	mov    bh,BYTE PTR [ebx]
  41f6f6:	aas    
  41f6f7:	bound  esp,QWORD PTR [ecx+0x67]
  41f6fa:	(bad)  
  41f6fb:	cmc    
  41f6fc:	xlat   BYTE PTR ds:[ebx]
  41f6fd:	push   esi
  41f6fe:	xor    DWORD PTR [eax+0x551325a],ecx
  41f704:	add    dh,bl
  41f706:	push   ss
  41f707:	sbb    DWORD PTR [eax+0x440cb616],edx
  41f70d:	or     DWORD PTR [ebx-0x40925296],ebx
  41f713:	call   0x610075a4
  41f718:	sar    dl,1
  41f71a:	repnz retf 
  41f71c:	ficomp DWORD PTR [esi+ecx*4-0x2a3e56f]
  41f723:	fstp   TBYTE PTR [edi]
  41f725:	cmp    al,0x93
  41f727:	push   esi
  41f728:	inc    edx
  41f729:	push   es
  41f72a:	ret    0xbf1
  41f72d:	sar    DWORD PTR [esi],1
  41f72f:	inc    ebx
  41f730:	fnstenv [edx]
  41f732:	xchg   esp,eax
  41f733:	push   ecx
  41f734:	and    eax,0x743df453
  41f739:	xchg   edi,eax
  41f73a:	adc    DWORD PTR [esi],ebp
  41f73c:	sbb    DWORD PTR [eax+0x64],esp
  41f73f:	xchg   edi,eax
  41f740:	ret    0x3c21
  41f743:	add    ah,BYTE PTR [esi+0xa57b257]
  41f749:	and    al,0xf9
  41f74b:	or     eax,0x3d7a95ab
  41f750:	inc    edi
  41f751:	pop    es
  41f752:	int    0xc1
  41f754:	(bad)  
  41f755:	lea    ebp,[esi+0x43]
  41f758:	or     BYTE PTR [edi-0x1f8c1f53],dh
  41f75e:	mov    dh,0xe9
  41f760:	sbb    ah,bl
  41f762:	xor    al,0xf8
  41f764:	jle    0x41f7de
  41f766:	xchg   ah,bh
  41f768:	fnsave [edx+0x78]
  41f76b:	and    bl,0xba
  41f76e:	push   edi
  41f76f:	hlt    
  41f770:	mov    dl,0xfd
  41f772:	sbb    DWORD PTR [ebx+0x39],ecx
  41f775:	rcr    ecx,cl
  41f777:	mov    esp,edx
  41f779:	push   0xffffffa7
  41f77b:	inc    esi
  41f77c:	jnp    0x41f7dc
  41f77e:	push   ecx
  41f77f:	push   esp
  41f780:	mov    al,ds:0xacd301e2
  41f785:	das    
  41f786:	(bad)  
  41f787:	test   al,0x97
  41f789:	rcr    DWORD PTR [ebx+edx*2+0x6],0xfc
  41f78e:	mov    bh,0xcf
  41f790:	sbb    eax,0x1fd2a825
  41f795:	gs dec esi
  41f797:	sbb    eax,0x5abd2f5b
  41f79c:	add    BYTE PTR [edx+0x4adfe126],dh
  41f7a2:	icebp  
  41f7a3:	lods   al,BYTE PTR ds:[esi]
  41f7a4:	(bad)  
  41f7a6:	(bad)  
  41f7a8:	iret   
  41f7a9:	in     eax,dx
  41f7aa:	gs icebp 
  41f7ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7ad:	pop    es
  41f7ae:	and    bl,BYTE PTR [edx]
  41f7b0:	(bad)  
  41f7b1:	int    0x70
  41f7b3:	shl    BYTE PTR [edi-0x41],0x92
  41f7b7:	rcl    DWORD PTR [ebp-0x76159128],0x64
  41f7be:	push   ss
  41f7bf:	cmp    eax,0x26815a8b
  41f7c4:	and    BYTE PTR [edx+eiz*4],ah
  41f7c7:	add    bl,dh
  41f7c9:	pop    edi
  41f7ca:	prefetch BYTE PTR [ebp+0x35]
  41f7ce:	push   esp
  41f7cf:	adc    DWORD PTR [ebp-0x2fdb353b],esi
  41f7d5:	gs ror dl,0xa4
  41f7d9:	add    DWORD PTR [esi],esp
  41f7db:	and    DWORD PTR [esi+0x6e],edi
  41f7de:	lods   al,BYTE PTR ds:[esi]
  41f7df:	jge    0x41f84d
  41f7e1:	push   ecx
  41f7e2:	sub    eax,0x822df2b8
  41f7e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7e8:	and    eax,0x3fba1d3b
  41f7ed:	retf   0x4821
  41f7f0:	jl     0x41f7ff
  41f7f2:	js     0x41f824
  41f7f4:	mov    ds:0x3d0d346e,al
  41f7f9:	push   edi
  41f7fa:	push   ebx
  41f7fb:	(bad)  [esp+ebp*2+0xa]
  41f7ff:	das    
  41f800:	jnp    0x41f7e9
  41f802:	mov    edi,0xbc866b64
  41f807:	push   ebx
  41f808:	shl    BYTE PTR [eax+0x78],cl
  41f80b:	out    dx,al
  41f80c:	jmp    0xca79:0x6da3dafa
  41f813:	push   ss
  41f814:	test   BYTE PTR ds:0x71b710bb,bh
  41f81a:	dec    esp
  41f81b:	ja     0x41f843
  41f81d:	xchg   esi,eax
  41f81e:	aaa    
  41f81f:	repz sbb BYTE PTR [edi+0x786b766f],0xff
  41f827:	dec    edx
  41f828:	call   0x3945:0xee00c78e
  41f82f:	pop    es
  41f830:	aad    0xbf
  41f832:	pop    edi
  41f833:	sbb    edi,DWORD PTR [esi+0x44]
  41f836:	push   ss
  41f837:	repz out dx,eax
  41f839:	retf   
  41f83a:	test   ebp,0x4fd9deb6
  41f840:	retf   0x9282
  41f843:	inc    edx
  41f844:	xor    cl,BYTE PTR [ecx+edx*1+0x71]
  41f848:	pop    edx
  41f849:	nop
  41f84a:	into   
  41f84b:	test   BYTE PTR [eax+esi*1],0x98
  41f84f:	push   ss
  41f850:	dec    edi
  41f851:	mov    ebp,0xba368fd0
  41f856:	cmp    ebp,ebx
  41f858:	xchg   edi,eax
  41f859:	push   ss
  41f85a:	push   ebp
  41f85b:	push   esi
  41f85c:	ja     0x41f884
  41f85e:	jecxz  0x41f8cb
  41f860:	loopne 0x41f89b
  41f862:	push   esp
  41f863:	push   ds
  41f864:	retf   0x9e6c
  41f867:	out    dx,al
  41f868:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f869:	popa   
  41f86a:	loopne 0x41f7fb
  41f86c:	xlat   BYTE PTR ds:[ebx]
  41f86d:	imul   DWORD PTR [edx+ebx*4]
  41f870:	(bad)  
  41f871:	retf   0x548
  41f874:	mov    eax,ds:0x54de54d7
  41f879:	ins    BYTE PTR es:[edi],dx
  41f87a:	mov    ?,WORD PTR [eax-0x45dda953]
  41f880:	push   ecx
  41f881:	and    BYTE PTR [ebp+0x2a42c7da],bh
  41f887:	jne    0x41f839
  41f889:	outs   dx,BYTE PTR ds:[esi]
  41f88a:	push   ebx
  41f88b:	pop    eax
  41f88c:	int3   
  41f88d:	adc    bl,al
  41f88f:	mov    ebp,0x8694666c
  41f894:	mov    ebx,0x705d1034
  41f899:	mov    cl,0x15
  41f89b:	push   0xc4223439
  41f8a0:	cwde   
  41f8a1:	(bad)  
  41f8a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8a3:	sub    al,0xeb
  41f8a5:	in     eax,0xdf
  41f8a7:	or     cl,ch
  41f8a9:	push   edi
  41f8aa:	mov    dl,0xee
  41f8ac:	jmp    0x98352055
  41f8b1:	or     dl,dh
  41f8b3:	xchg   ebx,eax
  41f8b4:	sbb    DWORD PTR [ebx-0x21],0xb
  41f8b8:	push   DWORD PTR [edi]
  41f8ba:	mov    al,0xb5
  41f8bc:	aas    
  41f8bd:	dec    DWORD PTR [esi+0x4d]
  41f8c0:	adc    eax,0xffafe546
  41f8c5:	or     bh,ah
  41f8c7:	mov    bh,0x7a
  41f8c9:	shl    bl,cl
  41f8cb:	call   0x83bc7b36
  41f8d0:	xor    BYTE PTR [ecx+0x6e278bbb],0x7d
  41f8d7:	mov    ebp,0x1381cad7
  41f8dc:	call   0x906b:0xd6ba3532
  41f8e3:	sti    
  41f8e4:	xor    al,0xb4
  41f8e6:	cld    
  41f8e7:	push   es
  41f8e8:	inc    esi
  41f8e9:	inc    ebx
  41f8ea:	and    al,ah
  41f8ec:	mov    ecx,0x40cd0e63
  41f8f1:	sbb    DWORD PTR [ebx+0x684ce8dd],edi
  41f8f7:	adc    al,0xe
  41f8f9:	push   0xffffff91
  41f8fb:	xchg   edi,eax
  41f8fc:	repnz xchg ebp,eax
  41f8fe:	sbb    edi,DWORD PTR ds:0xe0686b4c
  41f904:	mov    dh,BYTE PTR [esi+0x36ec6ed4]
  41f90a:	mov    ah,BYTE PTR [esp+ebp*1]
  41f90d:	dec    ebp
  41f90e:	cmp    al,0x7f
  41f910:	mov    ds:0xe16e46e5,al
  41f915:	add    BYTE PTR [eax+0x4cfba52],cl
  41f91b:	dec    esp
  41f91c:	add    eax,0x3d130654
  41f921:	xchg   BYTE PTR [edi+0x2d],bl
  41f924:	xchg   ecx,eax
  41f925:	fwait
  41f926:	sahf   
  41f927:	bsf    ebp,DWORD PTR [ebp-0x76]
  41f92b:	jo     0x41f953
  41f92d:	ins    BYTE PTR es:[edi],dx
  41f92e:	lods   al,BYTE PTR ds:[esi]
  41f92f:	and    bh,BYTE PTR [esi+0x81effad]
  41f935:	or     dl,BYTE PTR [eax+0x63260ef0]
  41f93b:	push   edx
  41f93c:	mov    ds:0x41251c19,al
  41f941:	aas    
  41f942:	dec    edi
  41f943:	fld    TBYTE PTR [ebp+0x103fd2ee]
  41f949:	mov    al,0xa5
  41f94b:	pop    esi
  41f94c:	std    
  41f94d:	fimul  DWORD PTR [ebx+eax*2]
  41f950:	jae    0x41f99c
  41f952:	jmp    0x41f94c
  41f954:	fmul   DWORD PTR [eax+ecx*1]
  41f957:	int    0x1a
  41f959:	jp     0x41f8f2
  41f95b:	dec    esi
  41f95c:	lds    ebp,FWORD PTR [ecx+ebx*8]
  41f95f:	sbb    al,0x6f
  41f961:	stos   BYTE PTR es:[edi],al
  41f962:	js     0x41f95c
  41f964:	pop    eax
  41f965:	(bad)  [esi+0x7d]
  41f968:	sub    esp,edi
  41f96a:	or     dh,cl
  41f96c:	mov    ebx,DWORD PTR [ebp-0x74b1ce41]
  41f972:	or     eax,0xfb55d28b
  41f977:	pop    edi
  41f978:	xchg   DWORD PTR [ebp-0x66],ecx
  41f97b:	bound  edi,QWORD PTR [eax-0xb]
  41f97e:	mov    dh,0x11
  41f980:	les    ecx,FWORD PTR [edi-0x75]
  41f983:	xchg   BYTE PTR [edx-0xd],al
  41f986:	xlat   BYTE PTR ds:[ebx]
  41f987:	(bad)  
  41f989:	daa    
  41f98a:	rdpmc  
  41f98c:	dec    ecx
  41f98d:	dec    edx
  41f98e:	in     al,dx
  41f98f:	outs   dx,DWORD PTR ds:[esi]
  41f990:	aas    
  41f991:	and    al,0xff
  41f993:	lods   al,BYTE PTR ds:[esi]
  41f994:	cmp    eax,edi
  41f996:	xchg   ecx,edi
  41f998:	retf   0x896
  41f99b:	jp     0x41f96a
  41f99d:	push   es
  41f99e:	repz call 0xb184:0xa65c449c
  41f9a6:	dec    esp
  41f9a7:	mov    bl,bl
  41f9a9:	jg     0x41f9ce
  41f9ab:	mov    esi,0xa3d94cc3
  41f9b0:	and    dh,BYTE PTR [edx-0x18]
  41f9b3:	sti    
  41f9b4:	jo     0x41fa04
  41f9b6:	and    eax,0xdd78d076
  41f9bb:	xchg   ecx,eax
  41f9bc:	stos   DWORD PTR es:[edi],eax
  41f9bd:	es fwait
  41f9bf:	loop   0x41fa0a
  41f9c1:	add    DWORD PTR [edi+edx*8],eax
  41f9c4:	and    DWORD PTR [edi],edx
  41f9c6:	cld    
  41f9c7:	out    dx,al
  41f9c8:	aam    0x2
  41f9ca:	pop    esi
  41f9cb:	push   esi
  41f9cc:	in     al,0xce
  41f9ce:	jae    0x41f97b
  41f9d0:	and    al,0xd3
  41f9d2:	jmp    0x1338:0xf030d787
  41f9d9:	cmp    ebx,edi
  41f9db:	or     ebx,DWORD PTR [ebp+0x66]
  41f9de:	aas    
  41f9df:	jmp    FWORD PTR [esi+0x429fddda]
  41f9e5:	sbb    BYTE PTR [esi+0x1e],al
  41f9e8:	hlt    
  41f9e9:	pushf  
  41f9ea:	int    0xa7
  41f9ec:	in     eax,0x3d
  41f9ee:	xor    dl,ah
  41f9f0:	cli    
  41f9f1:	mov    al,0x21
  41f9f3:	ret    
  41f9f4:	lods   eax,DWORD PTR ds:[esi]
  41f9f5:	pop    es
  41f9f6:	cdq    
  41f9f7:	fsub   QWORD PTR [eax+0x4a2fdfb8]
  41f9fd:	jb     0x41fa4f
  41f9ff:	das    
  41fa00:	dec    edi
  41fa01:	sbb    eax,0x11ee2585
  41fa06:	fcomp  DWORD PTR [ecx-0x5a]
  41fa09:	sub    cl,BYTE PTR [ebx]
  41fa0b:	pop    esp
  41fa0c:	dec    ecx
  41fa0d:	pushf  
  41fa0e:	xor    al,0x96
  41fa10:	xchg   DWORD PTR gs:[eax+eax*2],edx
  41fa14:	(bad)  
  41fa15:	xchg   ebp,eax
  41fa16:	mov    ds:0x3e314191,eax
  41fa1b:	sahf   
  41fa1c:	xchg   DWORD PTR fs:[esi-0x3c5f2016],eax
  41fa23:	jl     0x41fa6f
  41fa25:	out    dx,eax
  41fa26:	push   edx
  41fa27:	push   ebp
  41fa28:	push   edi
  41fa29:	inc    ebx
  41fa2a:	imul   esp,ebp,0x5b43d797
  41fa30:	mov    ds:0xfe822417,eax
  41fa35:	cmp    BYTE PTR [edi-0x4445990e],0xd3
  41fa3c:	call   0x185c:0x87569eef
  41fa43:	retf   0x1669
  41fa46:	or     ebx,DWORD PTR [esi]
  41fa48:	xor    eax,0xeb79b67c
  41fa4d:	pop    esp
  41fa4e:	ds jmp 0xdfc:0x393717ca
  41fa56:	aam    0x10
  41fa58:	dec    esi
  41fa59:	mov    ah,0x2e
  41fa5b:	mov    bh,BYTE PTR [ebx-0xe0076d9]
  41fa61:	pop    eax
  41fa62:	xchg   edx,eax
  41fa63:	leave  
  41fa64:	fcomp  DWORD PTR [ecx-0x6b]
  41fa67:	fld    DWORD PTR [ebp+0x2dbb14ce]
  41fa6d:	or     DWORD PTR [edx+0x124edba8],eax
  41fa73:	shr    al,1
  41fa75:	xor    eax,0x7176aa81
  41fa7a:	lods   eax,DWORD PTR ds:[esi]
  41fa7b:	xor    al,0xc7
  41fa7d:	fcom   QWORD PTR [eax+edx*8]
  41fa80:	push   ss
  41fa81:	pop    ecx
  41fa82:	inc    ebp
  41fa83:	sub    ebp,eax
  41fa85:	ins    BYTE PTR es:[edi],dx
  41fa86:	and    al,0x42
  41fa88:	cld    
  41fa89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa8a:	aam    0xc9
  41fa8c:	in     al,dx
  41fa8d:	stc    
  41fa8e:	dec    esi
  41fa8f:	sub    eax,0xb126fb89
  41fa94:	xsha1  (bad)
  41fa95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa96:	or     edx,ebp
  41fa98:	xor    al,0x98
  41fa9a:	mov    esp,0xbf3182ac
  41fa9f:	push   esp
  41faa0:	and    bl,ah
  41faa2:	aaa    
  41faa3:	pop    esi
  41faa4:	fcom   DWORD PTR [eax+0x4c]
  41faa7:	add    esp,DWORD PTR [ebx]
  41faa9:	repz adc ecx,DWORD PTR [ebx+0x3c]
  41faad:	mov    edi,0x208b598a
  41fab2:	push   ecx
  41fab3:	dec    esp
  41fab4:	lds    ebp,FWORD PTR [eax]
  41fab6:	fnstcw WORD PTR [edx]
  41fab8:	add    edi,DWORD PTR [ebp-0x2872a70a]
  41fabe:	cli    
  41fabf:	dec    edi
  41fac0:	mov    ebx,0x463a69d5
  41fac5:	pop    esp
  41fac6:	psrlq  mm3,QWORD PTR [esi]
  41fac9:	jge    0x41fa7a
  41facb:	mov    ah,0xb6
  41facd:	iret   
  41face:	push   esi
  41facf:	xor    DWORD PTR [esi-0xd9544e3],ebp
  41fad5:	mov    ecx,0xf85697e7
  41fada:	je     0x41fb15
  41fadc:	dec    esi
  41fadd:	inc    edi
  41fade:	inc    esp
  41fadf:	jge    0x41fae1
  41fae1:	dec    esp
  41fae2:	shl    DWORD PTR [edx-0x6c0aca8d],0x57
  41fae9:	xor    ebx,DWORD PTR [ebp+0x45]
  41faec:	mov    al,0x98
  41faee:	ret    0x23e
  41faf1:	adc    dl,dh
  41faf3:	and    al,0x85
  41faf5:	aad    0x96
  41faf7:	cmp    bh,ah
  41faf9:	and    BYTE PTR [ecx],bl
  41fafb:	mov    BYTE PTR [ebp+0x7f],al
  41fafe:	push   0xffffff9a
  41fb00:	cwde   
  41fb01:	push   esp
  41fb02:	xchg   edx,eax
  41fb03:	(bad)  
  41fb05:	sbb    eax,DWORD PTR [ecx]
  41fb07:	or     BYTE PTR [edi+0x63],bh
  41fb0a:	dec    esp
  41fb0b:	or     al,0xf1
  41fb0d:	dec    ecx
  41fb0e:	(bad)  
  41fb10:	cwde   
  41fb11:	mov    al,0xc
  41fb13:	and    edi,DWORD PTR [edx-0x18]
  41fb16:	pop    esi
  41fb17:	das    
  41fb18:	sub    al,0xfd
  41fb1a:	ja     0x41fb5c
  41fb1c:	fbstp  TBYTE PTR [edi-0x1793e988]
  41fb22:	jmp    0x41fb28
  41fb24:	sti    
  41fb25:	cmp    al,0x94
  41fb27:	cmp    al,0x36
  41fb29:	out    dx,eax
  41fb2a:	push   edx
  41fb2b:	jae    0x41fb67
  41fb2d:	add    eax,0x7c21785a
  41fb32:	sbb    BYTE PTR [ecx+0x41],bh
  41fb35:	xor    DWORD PTR [eax+0x3],edi
  41fb38:	fadd   QWORD PTR [edx*2+0x2048434d]
  41fb3f:	data16 mov bl,0xd
  41fb42:	sbb    DWORD PTR [eax],ebx
  41fb44:	jo     0x41fb77
  41fb46:	repz add al,0x6b
  41fb49:	mov    ds:0x67429ed6,al
  41fb4e:	cmp    al,0x15
  41fb50:	pushf  
  41fb51:	xor    al,0x67
  41fb53:	xor    cl,BYTE PTR [ebp+0x4f]
  41fb56:	and    DWORD PTR [ecx+esi*2-0x74],eax
  41fb5a:	test   BYTE PTR [ebp+0x5f0c1653],bh
  41fb60:	dec    ebx
  41fb61:	(bad)  
  41fb62:	cmovo  edi,DWORD PTR [esp+ecx*2-0x2e]
  41fb67:	movups xmm2,XMMWORD PTR [edx+0x14f822bb]
  41fb6e:	(bad)  
  41fb6f:	mov    ds:0xc58f8843,al
  41fb74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb75:	clc    
  41fb76:	mov    cl,0xd0
  41fb78:	retf   
  41fb79:	outs   dx,DWORD PTR ds:[esi]
  41fb7b:	mov    edx,0x943f07b4
  41fb80:	dec    eax
  41fb81:	pop    ebp
  41fb82:	xchg   ecx,eax
  41fb83:	xchg   DWORD PTR [esi],esp
  41fb85:	aaa    
  41fb86:	test   eax,0x3c31a987
  41fb8b:	mov    esi,0x3760bcda
  41fb90:	ficomp DWORD PTR [eax+0x1e94cc81]
  41fb96:	pop    edx
  41fb97:	loope  0x41fb6c
  41fb99:	test   DWORD PTR [edi-0x7410d7be],ecx
  41fb9f:	sub    ch,dh
  41fba1:	jne    0x41fb54
  41fba3:	mov    edi,0xf6644801
  41fba8:	pusha  
  41fba9:	(bad)  
  41fbaa:	repnz fisubr WORD PTR [edi+ebp*2-0x5f]
  41fbaf:	pop    ss
  41fbb0:	ficom  DWORD PTR [ebx-0x6272af3e]
  41fbb6:	jae    0x41fbb9
  41fbb8:	add    al,bh
  41fbba:	add    al,0x0
  41fbbc:	add    BYTE PTR [ebp-0x353624e4],dh
  41fbc2:	pop    ebp
  41fbc3:	xchg   BYTE PTR [ecx+0x27],ah
  41fbc6:	or     bl,dl
  41fbc8:	cli    
  41fbc9:	and    BYTE PTR [eax],al
  41fbcb:	mov    cl,0x98
  41fbcd:	sbb    eax,0x92ef59d9
  41fbd2:	dec    eax
  41fbd3:	inc    esp
  41fbd4:	cdq    
  41fbd5:	push   es
  41fbd6:	mov    ecx,0x211ab1c4
  41fbdb:	xchg   esi,eax
  41fbdc:	cmp    al,BYTE PTR [edx-0xd943005]
  41fbe2:	adc    al,0xd9
  41fbe4:	inc    edi
  41fbe5:	stos   BYTE PTR es:[edi],al
  41fbe6:	pop    ecx
  41fbe7:	scas   al,BYTE PTR es:[edi]
  41fbe8:	and    ecx,DWORD PTR [esi+0x49e169d0]
  41fbee:	pushf  
  41fbef:	push   0xd3e43745
  41fbf4:	cmp    al,0x5f
  41fbf6:	and    eax,0xc1a9c1f4
  41fbfb:	mov    dl,0xa5
  41fbfd:	(bad)  
  41fbfe:	cmp    BYTE PTR [eax],cl
  41fc00:	pop    edx
  41fc01:	inc    ebp
  41fc02:	mov    ds:0xde268c73,al
  41fc07:	sbb    al,0x78
  41fc09:	add    ah,BYTE PTR [esi-0x75]
  41fc0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc0d:	nop
  41fc0e:	jp     0x41fc37
  41fc10:	adc    DWORD PTR [ebp+0x7f],eax
  41fc13:	mov    DWORD PTR [ecx+ebp*8+0x7ced099d],ebx
  41fc1a:	mov    edx,0x1f5b036c
  41fc1f:	pop    eax
  41fc20:	test   BYTE PTR [edx],al
  41fc22:	cmp    esi,DWORD PTR [esi]
  41fc24:	add    al,0x14
  41fc26:	fwait
  41fc27:	xchg   edi,eax
  41fc28:	cwde   
  41fc29:	mov    ds:0x2b2195c3,al
  41fc2e:	push   es
  41fc2f:	mov    al,0x1e
  41fc31:	jecxz  0x41fc68
  41fc33:	fmul   QWORD PTR [ebx]
  41fc35:	mov    eax,0x68d1fb71
  41fc3a:	lock sbb al,BYTE PTR [ecx+eiz*8-0x72e828dd]
  41fc42:	add    edx,DWORD PTR [ebx+0x14]
  41fc45:	mov    al,ds:0x3f8dd03f
  41fc4a:	mov    BYTE PTR [ebx+0x259ceb92],bl
  41fc50:	pop    esp
  41fc51:	pop    eax
  41fc52:	push   ebx
  41fc53:	lds    esp,FWORD PTR [esi-0x73ab551d]
  41fc59:	aad    0x47
  41fc5b:	adc    al,0xbf
  41fc5d:	push   edi
  41fc5e:	adc    eax,0x72c70f06
  41fc63:	mov    ebx,DWORD PTR [esi+ecx*8-0x28a5da8c]
  41fc6a:	xchg   edi,eax
  41fc6b:	adc    al,bl
  41fc6d:	rol    DWORD PTR [edx-0x46],1
  41fc70:	popf   
  41fc71:	dec    ecx
  41fc72:	js     0x41fc1c
  41fc74:	ja     0x41fc48
  41fc76:	lock pop ss
  41fc78:	cwde   
  41fc79:	repz push ebx
  41fc7b:	jmp    0xc3ca:0x76ccbf0a
  41fc82:	fisubr WORD PTR [esi+0x35]
  41fc85:	dec    ebp
  41fc86:	mov    dl,0xf2
  41fc88:	mov    al,ds:0x5dbee5a0
  41fc8d:	(bad)  
  41fc8e:	jns    0x41fc6e
  41fc90:	push   ss
  41fc91:	es mov ebp,0x6478d1d5
  41fc97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc98:	fcmovu st,st(2)
  41fc9a:	pusha  
  41fc9b:	fadd   DWORD PTR [edi]
  41fc9d:	add    al,0xa3
  41fc9f:	out    0xd6,eax
  41fca1:	mov    ah,0x58
  41fca3:	mov    ?,WORD PTR [ebp+0x794bbcba]
  41fca9:	mov    eax,ds:0x3ea4f5cd
  41fcae:	dec    ecx
  41fcaf:	jne    0x41fd15
  41fcb1:	mov    gs,ebp
  41fcb3:	mov    bh,0x60
  41fcb5:	in     eax,0x15
  41fcb7:	paddw  mm3,QWORD PTR [ecx+ebp*4-0x53ad7e9a]
  41fcbf:	add    bh,BYTE PTR [ebx]
  41fcc1:	(bad)  
  41fcc2:	out    0x1e,eax
  41fcc4:	or     cl,BYTE PTR [esi+esi*4]
  41fcc7:	mov    ch,0x78
  41fcc9:	xchg   esi,eax
  41fcca:	jle    0x41fcb8
  41fccc:	cmp    eax,0x71ebe07b
  41fcd1:	jnp    0x41fc8f
  41fcd3:	fisttp WORD PTR [edi]
  41fcd5:	retf   
  41fcd6:	inc    esi
  41fcd7:	xchg   ecx,eax
  41fcd8:	dec    edi
  41fcd9:	jno    0x41fc78
  41fcdb:	lds    edx,FWORD PTR [edi]
  41fcdd:	add    al,0xad
  41fcdf:	lahf   
  41fce0:	xlat   BYTE PTR ds:[ebx]
  41fce1:	imul   eax,ebx,0xffffffeb
  41fce4:	pop    edx
  41fce5:	test   eax,0x4bb6a7e0
  41fcea:	or     ch,al
  41fcec:	fwait
  41fced:	inc    ebp
  41fcee:	test   eax,0xafb2057
  41fcf3:	mov    eax,0xe256f87d
  41fcf8:	mov    ebx,0xf149b55f
  41fcfd:	inc    esp
  41fcfe:	je     0x41fcb8
  41fd00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd01:	std    
  41fd02:	pop    edi
  41fd03:	fdiv   DWORD PTR [ecx-0x24]
  41fd06:	int    0xcf
  41fd08:	imul   esp,edi,0x5bbdc57f
  41fd0e:	push   esi
  41fd0f:	cmp    ah,BYTE PTR [esi+ecx*8-0x7e]
  41fd13:	or     DWORD PTR [bx+si+0x49],0xffffffc1
  41fd18:	xchg   DWORD PTR [ebp+ebx*4-0x376acb45],esp
  41fd1f:	in     eax,0xbb
  41fd21:	jae    0x41fd3b
  41fd23:	js     0x41fccb
  41fd25:	jp     0x41fd50
  41fd27:	pop    es
  41fd28:	and    al,0x39
  41fd2a:	ret    0x1374
  41fd2d:	aam    0x2c
  41fd2f:	cmp    eax,0x5639be61
  41fd34:	imul   ecx,DWORD PTR [ebp-0x46e23d87],0xffffffed
  41fd3b:	push   edx
  41fd3c:	mov    ch,0x61
  41fd3e:	mov    edi,0xb0d14560
  41fd43:	imul   esi,DWORD PTR [eax-0x6fc87f0a],0x42
  41fd4a:	mov    al,0xdc
  41fd4c:	mov    bh,0xb3
  41fd4e:	push   edx
  41fd4f:	or     DWORD PTR [edx-0x31fa466d],eax
  41fd55:	xchg   ebp,eax
  41fd56:	fiadd  WORD PTR [ecx]
  41fd58:	xor    dh,cl
  41fd5a:	push   ebp
  41fd5b:	xchg   ebx,eax
  41fd5c:	(bad)  
  41fd5d:	gs std 
  41fd5f:	test   BYTE PTR [edx+0xc],dh
  41fd62:	inc    ebp
  41fd63:	xchg   ebp,eax
  41fd64:	out    dx,al
  41fd65:	fsubr  DWORD PTR [eax-0x18]
  41fd68:	out    dx,eax
  41fd69:	call   0xc944db1
  41fd6e:	in     al,dx
  41fd6f:	(bad)  
  41fd70:	sub    ecx,ecx
  41fd72:	retf   
  41fd73:	jl     0x41fd65
  41fd75:	xchg   bx,ax
  41fd77:	bnd jmp 0x41fd20
  41fd7a:	mov    cl,BYTE PTR [edx-0x20ccda0a]
  41fd80:	das    
  41fd81:	mov    dh,ch
  41fd83:	mov    bl,0x35
  41fd85:	xor    DWORD PTR [ebp-0x35],ecx
  41fd88:	sbb    edi,DWORD PTR [edx+0x464a7728]
  41fd8e:	cmc    
  41fd8f:	push   esi
  41fd90:	or     ecx,DWORD PTR [ebx-0x72]
  41fd93:	jg     0x41fdec
  41fd95:	je     0x41fe0c
  41fd97:	inc    eax
  41fd98:	sti    
  41fd99:	cli    
  41fd9a:	iret   
  41fd9b:	test   DWORD PTR [ebx+0x5fbe2fc8],0xa4122cbe
  41fda5:	clc    
  41fda6:	int    0xbb
  41fda8:	jbe    0x41fd70
  41fdaa:	out    dx,al
  41fdab:	test   eax,0x84607ac8
  41fdb0:	xchg   ebp,eax
  41fdb1:	sbb    cl,BYTE PTR [esi+0x7bd5d926]
  41fdb7:	test   BYTE PTR [esi-0x75],bh
  41fdba:	dec    edi
  41fdbb:	push   ds
  41fdbc:	enter  0xe62b,0x1a
  41fdc0:	mov    dl,0x45
  41fdc2:	sub    DWORD PTR [edi],esp
  41fdc4:	inc    ebx
  41fdc5:	sub    esp,DWORD PTR [edi]
  41fdc7:	jb     0x41fe28
  41fdc9:	pop    esi
  41fdca:	call   0x3d42575c
  41fdcf:	in     eax,dx
  41fdd0:	pop    esi
  41fdd1:	es mov dh,0x5b
  41fdd4:	sub    esp,DWORD PTR [eax]
  41fdd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdd7:	dec    eax
  41fdd8:	mov    es,WORD PTR [eax+0x45]
  41fddb:	or     eax,0xb51646ee
  41fde0:	inc    esi
  41fde1:	pop    ss
  41fde2:	mov    dl,0xcd
  41fde4:	enter  0xa975,0xd0
  41fde8:	push   ebp
  41fde9:	jbe    0x41fd83
  41fdeb:	call   0x7618:0xa24bbc9b
  41fdf2:	sub    edx,DWORD PTR [edi]
  41fdf4:	dec    ebp
  41fdf5:	out    dx,al
  41fdf6:	mov    ecx,0xfdc0c9a9
  41fdfb:	lods   eax,DWORD PTR ds:[esi]
  41fdfc:	or     DWORD PTR [edx+0x4a],ecx
  41fdff:	jmp    0x41fe56
  41fe01:	mov    esi,0xd244ebf0
  41fe06:	imul   ebp,DWORD PTR [ecx+0x5c],0x60d8edd0
  41fe0d:	icebp  
  41fe0e:	js     0x41fe1b
  41fe10:	addr16 add ebp,ebx
  41fe13:	dec    eax
  41fe14:	fsub   QWORD PTR [esi-0x21]
  41fe17:	test   eax,0xb6d4d221
  41fe1c:	and    BYTE PTR [edx],0x2a
  41fe1f:	push   ebx
  41fe20:	retf   0xdb3
  41fe23:	dec    ebp
  41fe24:	sar    BYTE PTR [edi+0x73],1
  41fe27:	dec    ebp
  41fe28:	push   esi
  41fe29:	adc    dh,al
  41fe2b:	jbe    0x41fe73
  41fe2d:	or     DWORD PTR [edi],esi
  41fe2f:	mov    bl,0x75
  41fe31:	arpl   WORD PTR [esi-0x3aad07ba],bp
  41fe37:	lods   eax,DWORD PTR ds:[esi]
  41fe38:	pop    ds
  41fe39:	loop   0x41fe35
  41fe3b:	outs   dx,DWORD PTR ds:[esi]
  41fe3c:	add    edi,edx
  41fe3e:	pop    ebp
  41fe3f:	jp     0x41fe31
  41fe41:	push   0xffffffd6
  41fe43:	ret    
  41fe44:	xor    edx,DWORD PTR [eax]
  41fe46:	xor    DWORD PTR [edx+edx*8],ecx
  41fe49:	add    eax,0x4a22172e
  41fe4e:	jmp    0x1604:0x283c31d7
  41fe55:	dec    esp
  41fe56:	mov    ecx,0x3cbe28f5
  41fe5b:	fcomp  QWORD PTR [ecx+eiz*4+0x5ce4487e]
  41fe62:	mul    DWORD PTR [edi+eiz*8-0x768dc683]
  41fe69:	or     al,0x37
  41fe6b:	pop    es
  41fe6c:	xchg   edi,eax
  41fe6d:	scas   al,BYTE PTR es:[edi]
  41fe6e:	into   
  41fe6f:	inc    esp
  41fe70:	lahf   
  41fe71:	jns    0x41fe9b
  41fe73:	bound  ebx,QWORD PTR [ecx]
  41fe75:	cmp    al,0xc2
  41fe77:	jno    0xbf30a9de
  41fe7d:	inc    eax
  41fe7e:	or     esi,DWORD PTR gs:[edi-0x10d74fcb]
  41fe85:	jbe    0x41fe36
  41fe87:	sbb    al,0xd8
  41fe89:	jmp    0xb2d8da84
  41fe8e:	jmp    0x90c1:0x31adcfb6
  41fe95:	xchg   DWORD PTR [edi],eax
  41fe97:	aaa    
  41fe98:	mov    esp,0xeaf97072
  41fe9d:	aam    0x19
  41fe9f:	pop    edx
  41fea0:	jle    0x41ff0c
  41fea2:	inc    eax
  41fea3:	hlt    
  41fea4:	cs pop ss
  41fea6:	mov    cl,0x5f
  41fea8:	or     al,0xa7
  41feaa:	(bad)  
  41feab:	loopne 0x41fed7
  41fead:	or     bh,BYTE PTR [eax]
  41feaf:	cs mov ch,0xc8
  41feb2:	scas   eax,DWORD PTR es:[edi]
  41feb3:	jecxz  0x41ff09
  41feb5:	fadd   DWORD PTR [edi]
  41feb7:	scas   eax,DWORD PTR es:[edi]
  41feb8:	mov    esp,0xf9c07b9
  41febd:	cs push ds
  41febf:	or     DWORD PTR [edx],ebp
  41fec1:	addr16 xor ch,al
  41fec4:	(bad)  
  41fec6:	fninit 
  41fec8:	add    BYTE PTR [ebx],ah
  41feca:	dec    esi
  41fecb:	fidivr DWORD PTR [edx+ebp*2]
  41fece:	push   ds
  41fecf:	jecxz  0x41ff20
  41fed1:	test   eax,0xdc7c5299
  41fed6:	jns    0x41ff40
  41fed8:	jmp    0x299c7672
  41fedd:	xchg   esp,eax
  41fede:	jg     0x41ff48
  41fee0:	and    ch,BYTE PTR [edx]
  41fee2:	sub    DWORD PTR [esi+0x25c10b79],esi
  41fee8:	sub    DWORD PTR [eax],esi
  41feea:	adc    al,0x45
  41feec:	jns    0x41fec8
  41feee:	imul   ecx,DWORD PTR [eax+0x64],0x58acd56b
  41fef5:	nop
  41fef6:	push   edi
  41fef7:	mov    ebx,0x7db55a3a
  41fefc:	int3   
  41fefd:	aas    
  41fefe:	or     eax,0x1f2f871c
  41ff03:	or     al,0x89
  41ff05:	jle    0x41fee9
  41ff07:	xchg   ebp,eax
  41ff08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff09:	out    dx,eax
  41ff0a:	sub    eax,DWORD PTR [eax-0x10]
  41ff0d:	mov    ebx,0xdc3632fb
  41ff12:	xor    DWORD PTR [ebx-0x14],0x864ad285
  41ff19:	cli    
  41ff1a:	lods   al,BYTE PTR ds:[esi]
  41ff1b:	push   eax
  41ff1c:	retf   
  41ff1d:	bound  ebp,QWORD PTR [ecx-0x79]
  41ff20:	pop    edi
  41ff21:	adc    dl,ah
  41ff23:	xor    BYTE PTR [esi+esi*2-0x75],bh
  41ff27:	pop    ebp
  41ff28:	jl     0x41ff15
  41ff2a:	sub    cl,ah
  41ff2c:	mov    ds:0xfd43632e,eax
  41ff31:	push   ebx
  41ff32:	sbb    eax,0xf66fe838
  41ff37:	call   0x4474:0xd67e60ca
  41ff3e:	imul   edi,DWORD PTR [ecx+0x146c933b],0xffffffb0
  41ff45:	dec    ebx
  41ff46:	lds    esp,FWORD PTR [eax]
  41ff48:	retf   0x30d2
  41ff4b:	imul   esi,ebx,0x4a
  41ff4e:	sub    bh,BYTE PTR [esi+0x3e0cb2b9]
  41ff54:	mov    WORD PTR [edi-0x23615731],?
  41ff5a:	popa   
  41ff5b:	aad    0xba
  41ff5d:	test   BYTE PTR [eax+0x6d],bh
  41ff60:	test   BYTE PTR [edx-0x54],dl
  41ff63:	fstp   DWORD PTR ds:0xd44bd3c2
  41ff69:	jle    0x41ffa1
  41ff6b:	into   
  41ff6c:	dec    esi
  41ff6d:	nop
  41ff6e:	out    dx,eax
  41ff6f:	pop    ecx
  41ff70:	inc    esp
  41ff71:	jmp    0x5a4d7f56
  41ff76:	sub    esp,DWORD PTR [edx-0x7ff8a4bf]
  41ff7c:	lods   al,BYTE PTR ds:[esi]
  41ff7d:	out    0x25,eax
  41ff7f:	xlat   BYTE PTR ds:[ebx]
  41ff80:	cld    
  41ff81:	push   esp
  41ff82:	sbb    BYTE PTR [esi],0x96
  41ff85:	test   BYTE PTR [esi-0x24],0x6f
  41ff89:	sub    al,0x90
  41ff8b:	pop    edi
  41ff8c:	es pop edx
  41ff8e:	test   eax,0x628b4d90
  41ff93:	or     eax,0x5044b83b
  41ff98:	push   esp
  41ff99:	jne    0x41ff2a
  41ff9b:	repz push 0xffffffeb
  41ff9e:	out    0x7d,al
  41ffa0:	inc    esi
  41ffa1:	(bad)  
  41ffa2:	jbe    0x42000e
  41ffa4:	pop    esp
  41ffa5:	test   BYTE PTR [eax],dl
  41ffa7:	repz in eax,0x43
  41ffaa:	lods   al,BYTE PTR ds:[esi]
  41ffab:	enter  0x5692,0x27
  41ffaf:	xchg   esp,eax
  41ffb0:	pushf  
  41ffb1:	shl    BYTE PTR [ebx],1
  41ffb3:	xchg   ebp,eax
  41ffb4:	mov    esp,0xd3898a
  41ffb9:	jb     0x41ffc7
  41ffbb:	xchg   esi,eax
  41ffbc:	lods   al,BYTE PTR ds:[esi]
  41ffbd:	das    
  41ffbe:	inc    ecx
  41ffbf:	push   edx
  41ffc0:	ja     0x41ff9a
  41ffc2:	jbe    0x42001c
  41ffc4:	dec    edx
  41ffc5:	cmp    BYTE PTR [ecx],dh
  41ffc7:	loope  0x41ff7d
  41ffc9:	cmp    eax,0x6427d2b4
  41ffce:	xchg   ecx,ebx
  41ffd0:	mov    esi,0x66a26da
  41ffd5:	mov    ecx,0xf1c48bc7
  41ffda:	push   esp
  41ffdb:	fdivr  DWORD PTR [eax+eiz*1-0x17db481e]
  41ffe2:	mov    cl,0x43
  41ffe4:	arpl   WORD PTR [ecx+0x44],dx
  41ffe7:	inc    eax
  41ffe8:	std    
  41ffe9:	jmp    0xcc5f0f9f
  41ffee:	mov    ds:0xfc8e6b6,eax
  41fff3:	sahf   
  41fff4:	ds aam 0xb4
  41fff7:	mov    edx,0xbeb5b9ad
  41fffc:	retf   0x7d39
  41ffff:	jl     0x41ffba
  420001:	addr16 sti 
  420003:	adc    BYTE PTR [ecx+esi*8-0x7b],0x41
  420008:	fstp   QWORD PTR [ebx+0x16]
  42000b:	push   ebp
  42000c:	ss jne 0x42005c
  42000f:	add    al,0x95
  420011:	mov    edx,0xaab15ad
  420016:	sub    BYTE PTR [edi],0xd4
  420019:	mov    cs,edx
  42001b:	outs   dx,DWORD PTR ds:[esi]
  42001c:	ja     0x42000a
  42001e:	test   DWORD PTR [ecx+0x7a],esi
  420021:	jb     0x420052
  420023:	xor    eax,0x594dd16
  420028:	lods   eax,DWORD PTR ds:[esi]
  420029:	(bad)  
  42002a:	xor    al,0x1b
  42002c:	not    DWORD PTR [edi-0x1a]
  42002f:	push   cs
  420030:	in     al,0xc0
  420032:	push   es
  420033:	or     DWORD PTR [ecx-0x7d],ecx
  420036:	mov    bh,0x9a
  420038:	(bad)  
  420039:	jmp    0x4ab40f19
  42003e:	jns    0x41fff2
  420040:	fbstp  TBYTE PTR [eax+ecx*1-0x46]
  420044:	jnp    0x42002b
  420046:	mov    bh,0xe1
  420048:	jns    0x42007b
  42004a:	test   BYTE PTR [edi],ah
  42004c:	jne    0x42001d
  42004e:	out    dx,eax
  42004f:	in     eax,dx
  420050:	pop    edx
  420051:	adc    ch,BYTE PTR ds:0xdd378327
  420057:	fdivr  st,st(0)
  420059:	or     al,0x9a
  42005b:	mov    ebp,0x2f719ba9
  420060:	or     bh,bh
  420062:	cld    
  420063:	out    0x51,al
  420065:	lods   al,BYTE PTR ds:[esi]
  420066:	mov    ds:0x1c2365da,eax
  42006b:	jne    0x420055
  42006d:	dec    edx
  42006e:	std    
  42006f:	(bad)  
  420070:	lock shr ch,1
  420073:	pop    ecx
  420074:	ja     0x420013
  420076:	inc    edi
  420077:	pushf  
  420078:	sbb    ecx,DWORD PTR [ebx]
  42007a:	pop    ebp
  42007b:	jl     0x42003d
  42007d:	mov    dh,0x24
  42007f:	push   esp
  420080:	fisub  DWORD PTR [edx-0x3b]
  420083:	push   ebx
  420084:	sar    cl,0xfe
  420087:	cmc    
  420088:	xchg   edi,eax
  420089:	sbb    ch,bh
  42008b:	dec    ebx
  42008c:	sub    ch,BYTE PTR [edx]
  42008e:	and    BYTE PTR [esi+0x75],ch
  420091:	mov    al,cl
  420093:	dec    ebx
  420094:	in     eax,dx
  420095:	dec    esi
  420096:	or     dh,BYTE PTR [edi+0x12]
  420099:	adc    al,0xe8
  42009b:	outs   dx,DWORD PTR ds:[esi]
  42009c:	cdq    
  42009d:	push   0xffffff8d
  42009f:	mov    DWORD PTR [edi+0x41],esp
  4200a2:	fist   DWORD PTR [edx+0x42d456c9]
  4200a8:	push   ebp
  4200a9:	xor    ebp,DWORD PTR [ecx]
  4200ab:	ret    
  4200ac:	xchg   esi,eax
  4200ad:	rol    DWORD PTR es:[ecx+0x48],cl
  4200b1:	jns    0x420110
  4200b3:	adc    edi,esp
  4200b5:	mov    ds:0xb713b617,al
  4200ba:	mov    bl,0xa7
  4200bc:	mov    bh,0x5
  4200be:	std    
  4200bf:	gs rcl eax,cl
  4200c2:	rcr    BYTE PTR [esp+ebp*8],cl
  4200c5:	xchg   ebp,eax
  4200c6:	js     0x4200c9
  4200c8:	add    al,bh
  4200ca:	add    al,0x0
  4200cc:	add    BYTE PTR [esp+ebp*8-0xa644cf5],bl
  4200d3:	pop    ebx
  4200d4:	or     esi,DWORD PTR [eax+ebx*2+0x2c]
  4200d8:	cs jmp 0x420100
  4200db:	shr    DWORD PTR ds:0x5ed856aa,cl
  4200e1:	xor    BYTE PTR [edx+0x31780242],ch
  4200e7:	lods   eax,DWORD PTR ds:[esi]
  4200e8:	mov    ds:0xeb207a25,al
  4200ed:	(bad)  
  4200ee:	popa   
  4200ef:	int    0x4c
  4200f1:	bound  ebx,QWORD PTR [esi+0x4142ceb]
  4200f7:	out    dx,eax
  4200f8:	jae    0x420150
  4200fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200fb:	mov    edi,DWORD PTR [eax+edi*8]
  4200fe:	and    WORD PTR [edx-0x7c6d0df4],0x11b8
  420107:	repnz add DWORD PTR [ecx+0x254c40df],edi
  42010e:	mov    edi,0x7f6d232f
  420113:	jns    0x4200f0
  420115:	inc    edx
  420116:	adc    DWORD PTR [ebx+0x21],eax
  420119:	shl    ebp,cl
  42011b:	stos   BYTE PTR es:[edi],al
  42011c:	push   ecx
  42011d:	into   
  42011e:	jmp    0xd9629396
  420123:	out    0x71,al
  420125:	pop    edi
  420126:	ja     0x420179
  420128:	call   0x88e9:0x1ddeabf2
  42012f:	dec    esp
  420130:	mov    ch,BYTE PTR [ebx+ebx*2]
  420133:	cwde   
  420134:	jb     0x4200e7
  420136:	mov    esp,0x1af71e22
  42013b:	dec    esp
  42013c:	add    edi,ebp
  42013e:	mov    dh,0xac
  420140:	out    dx,eax
  420141:	and    edi,edx
  420143:	shl    DWORD PTR [edx+0x56],1
  420146:	dec    esi
  420147:	gs dec ebp
  420149:	adc    BYTE PTR [edx+edi*8-0x6fac03b],cl
  420150:	sar    DWORD PTR [ebx+0x60],1
  420153:	pop    ss
  420154:	inc    ebp
  420155:	dec    ebp
  420156:	out    dx,al
  420157:	loop   0x420108
  420159:	pop    ebx
  42015a:	ret    0x2216
  42015d:	ffreep st(1)
  42015f:	push   edi
  420160:	aam    0xd9
  420162:	sub    ebp,DWORD PTR [ecx-0x15]
  420165:	adc    esi,DWORD PTR [edi]
  420167:	loop   0x420105
  420169:	or     ebp,DWORD PTR [edi-0xe]
  42016c:	aad    0x99
  42016e:	jg     0x42012f
  420170:	pop    esi
  420171:	or     eax,0xd2182e7f
  420176:	push   es
  420177:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420178:	leave  
  420179:	cli    
  42017a:	nop
  42017b:	or     DWORD PTR [esi-0x35],esp
  42017e:	jns    0x4201d8
  420180:	shr    BYTE PTR [ebx+0x6beb2560],cl
  420186:	cmp    dl,BYTE PTR [edx-0x29]
  420189:	(bad)  
  42018b:	jno    0x4201a2
  42018d:	jp     0x4201c2
  42018f:	arpl   WORD PTR [ebx-0x76],dx
  420192:	push   ss
  420193:	ja     0x4201a1
  420195:	jns    0x420120
  420197:	(bad)  
  420198:	loop   0x420186
  42019a:	dec    esi
  42019b:	push   ebp
  42019c:	test   ax,0x2625
  4201a0:	xor    DWORD PTR [ebx+ecx*2+0x40f7b9],edi
  4201a7:	lahf   
  4201a8:	sbb    ebx,0xdb58a98e
  4201ae:	and    edi,DWORD PTR ds:0x1f9b99f0
  4201b4:	add    al,BYTE PTR es:[ebx]
  4201b7:	xor    BYTE PTR ds:0x2b14189,bl
  4201bd:	inc    edx
  4201be:	inc    edx
  4201bf:	pop    ds
  4201c0:	(bad)  
  4201c1:	in     al,dx
  4201c2:	sub    eax,0xbad3ef56
  4201c7:	fisttp QWORD PTR [edi+0x1f9bedf]
  4201cd:	xchg   edx,eax
  4201ce:	sbb    ebp,DWORD PTR [edx]
  4201d0:	fdiv   QWORD PTR [ebp+0x6587cd99]
  4201d6:	inc    eax
  4201d7:	jle    0x420186
  4201d9:	adc    al,0x9d
  4201db:	xchg   ecx,eax
  4201dc:	inc    eax
  4201dd:	adc    al,0x3f
  4201df:	sub    dl,BYTE PTR ds:0xed8ed140
  4201e5:	(bad)  
  4201e6:	sub    ebx,DWORD PTR [eax]
  4201e8:	push   esi
  4201e9:	sub    BYTE PTR ds:0x1b4f64ab,ah
  4201ef:	or     al,0xbc
  4201f1:	aas    
  4201f2:	lahf   
  4201f3:	nop
  4201f4:	leave  
  4201f5:	xchg   esi,eax
  4201f6:	mov    ecx,DWORD PTR [ebx-0x42]
  4201f9:	lahf   
  4201fa:	cmp    edi,DWORD PTR [ecx+ebx*8]
  4201fd:	lods   al,BYTE PTR ds:[esi]
  4201ff:	cwde   
  420200:	popf   
  420201:	(bad)  
  420202:	cmp    al,0xa6
  420204:	and    bh,BYTE PTR [edi+0x3d]
  420207:	out    dx,eax
  420208:	mul    BYTE PTR [esi-0x48a4d94]
  42020e:	jl     0x420266
  420210:	out    0xe0,al
  420212:	stos   DWORD PTR es:[edi],eax
  420213:	push   ds
  420214:	xchg   edi,eax
  420215:	dec    edx
  420216:	jle    0x420236
  420218:	mov    bl,bl
  42021a:	jl     0x420248
  42021c:	jbe    0x420233
  42021e:	cmp    al,0x63
  420220:	inc    ebp
  420221:	dec    esp
  420222:	es iret 
  420224:	xchg   DWORD PTR [ebp+0x72],eax
  420227:	or     al,0x8
  420229:	scas   eax,DWORD PTR es:[edi]
  42022a:	data16 jns 0x420254
  42022d:	outs   dx,BYTE PTR ds:[esi]
  42022e:	je     0x4201b9
  420230:	hlt    
  420231:	pop    es
  420232:	clc    
  420233:	jl     0x4201c4
  420235:	jns    0x420229
  420237:	and    eax,0x436ba260
  42023c:	loope  0x4201e9
  42023e:	sub    DWORD PTR [eax-0x99e81e7],esp
  420244:	and    BYTE PTR ds:0x3d5ce7f7,0xdf
  42024b:	mov    edi,0x55dbbbe7
  420250:	xchg   esi,eax
  420251:	mov    ss,ecx
  420253:	cmp    ah,BYTE PTR [ebp-0x771cecec]
  420259:	sub    cl,BYTE PTR [ebx-0x72]
  42025c:	mov    eax,DWORD PTR [edx-0x60]
  42025f:	fcom   DWORD PTR [ebp-0x146c03cb]
  420265:	adc    BYTE PTR [edx],ch
  420267:	or     WORD PTR gs:[ebp+0xf],ax
  42026c:	lods   eax,DWORD PTR ds:[esi]
  42026d:	mov    eax,0xbf688c2d
  420272:	mov    eax,0x1702ff2
  420277:	inc    ebx
  420278:	lock inc edi
  42027a:	inc    edi
  42027b:	fwait
  42027c:	inc    edi
  42027d:	cmp    cl,0x8f
  420280:	jae    0x4202b2
  420282:	in     al,dx
  420283:	mov    al,0xb7
  420285:	fdiv   st,st(2)
  420287:	cmc    
  420288:	jge    0x420230
  42028a:	(bad)  [ebp-0x7c629804]
  420290:	pop    esp
  420291:	mul    DWORD PTR [ecx+edi*4]
  420294:	test   eax,0xb25b8f00
  420299:	scas   eax,DWORD PTR es:[edi]
  42029a:	ret    0x5ba1
  42029d:	cs and eax,0x59f8d278
  4202a3:	ret    
  4202a4:	je     0x4202f3
  4202a6:	mov    ds:0xbb30b47f,al
  4202ab:	xchg   esp,eax
  4202ac:	shr    ch,1
  4202ae:	jns    0x420295
  4202b0:	or     BYTE PTR [ebx+0x5],ch
  4202b3:	(bad)  
  4202b4:	adc    DWORD PTR [edi+0x5e],ebp
  4202b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202b8:	and    dh,ch
  4202ba:	sbb    eax,0x40b62be6
  4202bf:	jmp    0x420290
  4202c1:	xor    al,0xc9
  4202c3:	push   ds
  4202c4:	jne    0x4202dd
  4202c6:	popa   
  4202c7:	sub    cl,BYTE PTR [ebx-0x3fdb977d]
  4202cd:	push   cs
  4202ce:	mov    dl,0x68
  4202d0:	push   edx
  4202d1:	adc    BYTE PTR [ebx],dh
  4202d3:	mov    DWORD PTR ds:0x80e93a23,eax
  4202d9:	add    al,0xc
  4202db:	push   ss
  4202dc:	int    0x51
  4202de:	adc    cl,BYTE PTR [edx-0x2b]
  4202e1:	out    0xf2,al
  4202e3:	mov    ecx,0x58ced573
  4202e8:	retf   
  4202e9:	pushf  
  4202ea:	scas   eax,DWORD PTR es:[edi]
  4202eb:	push   cs
  4202ec:	and    dh,ah
  4202ee:	repnz div DWORD PTR [edx]
  4202f1:	lds    esi,FWORD PTR [esi]
  4202f3:	fwait
  4202f4:	out    0x36,al
  4202f6:	cmp    DWORD PTR [edx-0x30dbe6a5],0xd1947c4a
  420300:	test   ecx,0x452feeb
  420306:	sub    BYTE PTR [edi],dh
  420308:	rcr    ebp,cl
  42030a:	push   ecx
  42030b:	(bad)  
  42030c:	clc    
  42030d:	xchg   esp,eax
  42030e:	packuswb mm1,QWORD PTR [ebx+0x17]
  420312:	sub    DWORD PTR cs:[eax+0x7d9808b6],edx
  420319:	dec    eax
  42031a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42031b:	stos   BYTE PTR es:[edi],al
  42031c:	jl     0x42038d
  42031e:	(bad)  
  42031f:	xor    al,0x38
  420321:	xchg   ebx,eax
  420322:	out    0xe,eax
  420324:	sub    eax,DWORD PTR [esi+ebp*4+0x1a]
  420328:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420329:	push   ebp
  42032a:	ror    DWORD PTR [eax+0x6b],0x4e
  42032e:	xchg   esp,eax
  42032f:	or     esi,DWORD PTR [eax+ebp*4]
  420332:	clc    
  420333:	addr16 hlt 
  420335:	and    DWORD PTR ds:0xf7039749,eax
  42033b:	pop    edx
  42033c:	popa   
  42033d:	rcl    DWORD PTR [ebp+0x74],0x57
  420341:	fdiv   DWORD PTR [edi+0x7ea837ee]
  420347:	lods   eax,DWORD PTR ds:[esi]
  420348:	sub    BYTE PTR [edi-0x18],bl
  42034b:	retf   0x6094
  42034e:	add    cl,BYTE PTR [edi+0x41ee41bc]
  420354:	sub    ebp,DWORD PTR [ebp+0x5b0da52c]
  42035a:	mov    ch,BYTE PTR [esi-0x40]
  42035d:	sbb    edi,ecx
  42035f:	mov    edx,0xa0cb7d6b
  420364:	pop    ds
  420365:	pop    ebx
  420366:	jmp    0x32b38ee0
  42036b:	pop    ss
  42036c:	popf   
  42036d:	je     0x420339
  42036f:	inc    ecx
  420370:	pop    ecx
  420371:	xlat   BYTE PTR ds:[ebx]
  420372:	fisub  WORD PTR [ebx]
  420374:	xchg   DWORD PTR [esi+0x2d],edi
  420377:	push   eax
  420378:	jbe    0x420327
  42037a:	or     al,BYTE PTR [ebx+0xf237981]
  420380:	jb     0x420327
  420382:	and    BYTE PTR [ebx],cl
  420384:	push   eax
  420385:	stos   DWORD PTR es:[edi],eax
  420386:	mov    ds:0xfecdeb6a,al
  42038b:	jmp    0xfd04:0xb2c15fde
  420392:	fs push eax
  420394:	jnp    0x42036f
  420396:	out    dx,eax
  420397:	js     0x4203b8
  420399:	mov    al,ds:0xb9fdbb6b
  42039e:	ins    DWORD PTR es:[edi],dx
  42039f:	mov    ebp,0xc7a7d45d
  4203a4:	ficomp WORD PTR [ebp-0x2d2b3477]
  4203aa:	inc    edx
  4203ab:	jb     0x42035a
  4203ad:	push   ds
  4203ae:	or     ch,bh
  4203b0:	lods   eax,DWORD PTR ds:[esi]
  4203b1:	pop    ss
  4203b2:	inc    esp
  4203b3:	je     0x420375
  4203b5:	push   ebp
  4203b6:	(bad)  
  4203b7:	clc    
  4203b8:	push   esi
  4203b9:	or     BYTE PTR [esi+0x78],dh
  4203bc:	add    bh,al
  4203be:	movaps xmm2,XMMWORD PTR [esp+ecx*8+0x1f]
  4203c3:	sbb    BYTE PTR [edi],dh
  4203c5:	int    0x1
  4203c7:	stc    
  4203c8:	jg     0x4203be
  4203ca:	xor    ecx,DWORD PTR [ebx-0x3a5074a0]
  4203d0:	ds mov bl,0x40
  4203d3:	mov    ds:0xe4f3692,eax
  4203d8:	imul   ebp,ecx,0x22d9ef85
  4203de:	in     eax,dx
  4203df:	test   al,0xab
  4203e1:	stos   BYTE PTR es:[edi],al
  4203e2:	inc    esi
  4203e3:	test   al,0xf
  4203e5:	mov    al,0x5f
  4203e7:	jne    0x4203e9
  4203e9:	jp     0x420373
  4203eb:	(bad)  
  4203ec:	ret    0x9966
  4203ef:	sti    
  4203f0:	jp     0x4203fa
  4203f2:	sbb    eax,0xda503fec
  4203f7:	or     edi,DWORD PTR [edi+0x41]
  4203fa:	imul   ebx,DWORD PTR [edi-0x5919bc4b],0x75
  420401:	inc    edx
  420402:	dec    esi
  420403:	or     edx,DWORD PTR [edi]
  420405:	xor    eax,0x292b615
  42040a:	popf   
  42040b:	std    
  42040c:	adc    BYTE PTR [eax+0x4be77e63],al
  420412:	test   esp,esp
  420414:	fst    QWORD PTR ds:0x7d36b892
  42041a:	arpl   WORD PTR [esi+eiz*1],cx
  42041d:	cli    
  42041e:	mov    WORD PTR cs:[esi],?
  420421:	aam    0x62
  420423:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420424:	xlat   BYTE PTR ds:[bx]
  420426:	jp     0x4203d4
  420428:	popa   
  420429:	add    al,al
  42042b:	jmp    0x4203ec
  42042d:	mov    cl,0x60
  42042f:	sbb    ch,BYTE PTR [ebx-0x4c]
  420432:	pop    eax
  420433:	(bad)  
  420434:	ss ror esp,1
  420437:	add    ah,ah
  420439:	ds mov ebx,0x5b75a1b5
  42043f:	outs   dx,DWORD PTR ds:[esi]
  420440:	ss inc ebp
  420442:	jne    0x42049f
  420444:	sbb    eax,0xef5cf31a
  420449:	pop    esp
  42044a:	push   ebp
  42044b:	arpl   WORD PTR [esi],dx
  42044d:	test   DWORD PTR [ebp+0x26],ebx
  420450:	test   cl,0x16
  420453:	daa    
  420454:	push   eax
  420455:	dec    eax
  420456:	jge    0x420436
  420458:	ficomp DWORD PTR [ecx+0x16088b38]
  42045e:	and    eax,0x879495e0
  420463:	rcr    DWORD PTR [edx+0x2a],cl
  420466:	and    bl,BYTE PTR [ecx+ecx*8]
  420469:	mov    ch,BYTE PTR [esi-0x31]
  42046c:	ins    BYTE PTR es:[edi],dx
  42046d:	xchg   esp,eax
  42046e:	and    ebp,esi
  420470:	pop    ss
  420471:	inc    eax
  420472:	dec    ebx
  420473:	pop    esp
  420474:	(bad)  
  420475:	nop
  420476:	fwait
  420477:	sbb    BYTE PTR [ebp-0x7c],bl
  42047a:	movnti DWORD PTR [ebx-0x5d1a0353],esp
  420481:	icebp  
  420482:	pop    edx
  420483:	and    al,0x2
  420485:	pop    es
  420486:	in     eax,dx
  420487:	mov    ebx,eax
  420489:	cmp    BYTE PTR [edi],cl
  42048b:	aaa    
  42048c:	ins    DWORD PTR es:[edi],dx
  42048d:	xchg   BYTE PTR [ebp+esi*1+0x6e6b637f],al
  420494:	in     eax,dx
  420495:	test   al,0x18
  420497:	aam    0x9d
  420499:	mov    edx,0xcb318d21
  42049e:	fstp   TBYTE PTR [ebx]
  4204a0:	inc    ecx
  4204a1:	scas   al,BYTE PTR es:[edi]
  4204a2:	ficom  DWORD PTR [edi-0x1ca3f476]
  4204a8:	das    
  4204a9:	(bad)  
  4204ab:	scas   eax,DWORD PTR es:[edi]
  4204ac:	push   eax
  4204ad:	in     eax,0xf5
  4204af:	sbb    ecx,edx
  4204b1:	retf   0x7747
  4204b4:	pop    esp
  4204b5:	mov    dh,0x85
  4204b7:	call   0x229b2be9
  4204bc:	mov    al,ds:0xd45aa067
  4204c1:	inc    esi
  4204c2:	xchg   edi,eax
  4204c3:	mov    esp,0xf9e5cc65
  4204c8:	mov    ebx,edi
  4204ca:	xchg   esi,eax
  4204cb:	rcl    bh,cl
  4204cd:	or     eax,0x9cc0c8
  4204d2:	out    dx,al
  4204d3:	and    DWORD PTR [edx],eax
  4204d5:	push   es
  4204d6:	pop    ecx
  4204d7:	or     al,0x15
  4204d9:	jmp    0x60f04b71
  4204de:	jle    0x420466
  4204e0:	mov    edx,0x7c7a52cb
  4204e5:	mov    dh,0xc0
  4204e7:	dec    eax
  4204e8:	js     0x420480
  4204ea:	jno    0x4204e4
  4204ec:	and    ecx,DWORD PTR [edx]
  4204ee:	rcl    DWORD PTR [esi],0x25
  4204f1:	imul   edi
  4204f3:	daa    
  4204f4:	mov    cl,0xe6
  4204f6:	aaa    
  4204f7:	bound  esi,QWORD PTR [esi+0x25]
  4204fa:	adc    BYTE PTR [esi+0x21],0x4b
  4204fe:	push   ss
  4204ff:	mov    BYTE PTR [eax],ch
  420501:	sbb    edx,DWORD PTR [edx]
  420503:	pop    es
  420504:	mov    WORD PTR ds:0xc23631c,gs
  42050a:	add    ah,ah
  42050c:	push   eax
  42050d:	loop   0x4204b4
  42050f:	js     0x4204e4
  420511:	outs   dx,BYTE PTR ds:[esi]
  420512:	repnz mov ebx,DWORD PTR [ecx+esi*4]
  420516:	sti    
  420517:	push   ss
  420518:	cmp    al,BYTE PTR [edx-0x6f]
  42051b:	sbb    DWORD PTR [edx],ebp
  42051d:	jmp    0xdef:0x1241ac52
  420524:	jae    0x42054b
  420526:	out    dx,eax
  420527:	mov    WORD PTR [edi-0x64],fs
  42052a:	fisttp WORD PTR [ebx-0x469efe55]
  420530:	(bad)  
  420532:	or     ecx,DWORD PTR [esi+0x1829baac]
  420538:	inc    esi
  420539:	mov    edi,0xc36b862f
  42053e:	mov    eax,0x28c0e627
  420543:	ret    
  420544:	(bad)  
  420545:	and    cl,BYTE PTR [ebp-0x272cb83d]
  42054b:	cmp    bh,bh
  42054d:	sub    al,0x50
  42054f:	int    0xe1
  420551:	addr16 sub al,0x71
  420554:	push   ecx
  420555:	xchg   esi,eax
  420556:	jecxz  0x4204e9
  420558:	sbb    eax,ecx
  42055a:	imul   ah
  42055c:	add    al,0x91
  42055e:	retf   
  42055f:	dec    ebp
  420560:	cld    
  420561:	mov    edi,0xbc5b4cd0
  420566:	inc    edx
  420567:	sbb    al,0x10
  420569:	fnstsw WORD PTR [eax]
  42056b:	mov    al,0x85
  42056d:	or     ch,BYTE PTR [edx+edi*2-0xd]
  420571:	stos   BYTE PTR es:[edi],al
  420572:	les    ecx,FWORD PTR [edx-0x342c7498]
  420578:	scas   eax,DWORD PTR es:[edi]
  420579:	mov    dh,0x73
  42057b:	xlat   BYTE PTR ds:[ebx]
  42057c:	mov    ah,0x41
  42057e:	push   es
  42057f:	jle    0x4205f2
  420581:	std    
  420582:	iret   
  420583:	ficomp WORD PTR [edx+0x2b]
  420586:	gs sahf 
  420588:	xor    al,0xa3
  42058a:	jmp    0x7b3bf49b
  42058f:	sub    eax,0xf89e11e7
  420594:	xor    edx,esp
  420596:	push   esi
  420597:	mov    eax,ds:0x1488088f
  42059c:	xor    al,0x50
  42059e:	outs   dx,BYTE PTR ds:[esi]
  42059f:	jo     0x420611
  4205a1:	cli    
  4205a2:	sbb    ebx,eax
  4205a4:	inc    esp
  4205a5:	and    eax,0xd212ee28
  4205aa:	sub    al,0xc4
  4205ac:	mov    eax,DWORD PTR [ebx+0x4e]
  4205af:	fldenv [ebx+eiz*8]
  4205b2:	retf   
  4205b3:	jmp    0xa83c495a
  4205b8:	or     al,0x6c
  4205ba:	sbb    eax,0x21bfbe8e
  4205bf:	mov    ch,0xf9
  4205c1:	add    esp,0xffffffba
  4205c4:	adc    DWORD PTR [esi+0x57fe4584],0xffffffff
  4205cb:	mov    edi,0xa8ab31ec
  4205d0:	add    eax,0x796741b3
  4205d5:	lea    edi,[ebp+0x1]
  4205d8:	add    al,bh
  4205da:	add    al,0x0
  4205dc:	add    BYTE PTR [edx],al
  4205de:	fidivr WORD PTR es:[edx+esi*2-0x7d]
  4205e3:	xchg   ebx,eax
  4205e4:	aas    
  4205e5:	in     al,0xbb
  4205e7:	dec    eax
  4205e8:	pop    edi
  4205e9:	int    0xc3
  4205eb:	cmp    ch,0xf1
  4205ee:	xor    al,0x9a
  4205f0:	xchg   ecx,eax
  4205f1:	in     eax,0xff
  4205f3:	inc    edx
  4205f4:	or     eax,0xed5e9773
  4205f9:	into   
  4205fa:	les    esp,FWORD PTR [ebx+0x2444d3c5]
  420600:	pushf  
  420601:	jmp    0x4205c5
  420603:	mov    ebx,0x248d3a12
  420608:	icebp  
  420609:	mov    dh,0x8a
  42060b:	mov    ah,dh
  42060d:	mov    esp,0xb1276e68
  420612:	imul   ebx,edi,0xffffff9d
  420615:	ds hlt 
  420617:	ret    0xb966
  42061a:	sbb    dl,BYTE PTR [esi+0x61]
  42061d:	xor    BYTE PTR [ebp+edx*8+0x332a2680],dh
  420624:	and    BYTE PTR [ecx-0x12],cl
  420627:	clc    
  420628:	lea    edx,[ecx-0x275fa616]
  42062e:	mov    ds:0x497b7b13,al
  420633:	cmovs  ebp,esp
  420636:	in     al,dx
  420637:	cmp    eax,0x7d8088aa
  42063c:	jo     0x4205f1
  42063e:	jmp    0xf53e8cb0
  420643:	xchg   ecx,eax
  420644:	xchg   BYTE PTR [eax-0x71],bh
  420647:	push   ecx
  420648:	ins    BYTE PTR es:[edi],dx
  420649:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42064a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42064b:	in     eax,0xc1
  42064d:	and    eax,0xc0aa539c
  420652:	and    ecx,eax
  420654:	arpl   WORD PTR [ecx],sp
  420656:	jecxz  0x4205ed
  420658:	adc    BYTE PTR [eax-0x48],0xe5
  42065c:	imul   DWORD PTR [ebx+0xe]
  42065f:	jne    0x4206d4
  420661:	das    
  420662:	(bad)  
  420663:	mov    eax,0x90dd89fe
  420668:	sbb    al,0x41
  42066a:	stc    
  42066b:	jmp    0x4fe8fac9
  420670:	adc    BYTE PTR [eax],bl
  420672:	addr16 cdq 
  420674:	(bad)  
  420676:	jp     0x42065f
  420678:	push   cs
  420679:	stos   DWORD PTR es:[edi],eax
  42067a:	popa   
  42067b:	adc    BYTE PTR [ebp+0x44b228c7],al
  420681:	and    esi,DWORD PTR [edi]
  420683:	inc    ebp
  420684:	aaa    
  420685:	scas   eax,DWORD PTR es:[edi]
  420686:	mov    ah,ah
  420688:	in     eax,dx
  420689:	dec    ecx
  42068a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42068b:	out    dx,al
  42068c:	jg     0x420699
  42068e:	xchg   edi,eax
  42068f:	jnp    0x4206ed
  420691:	jge    0x4206cb
  420693:	jp     0x4206df
  420695:	(bad)  
  420696:	popa   
  420697:	test   DWORD PTR [ecx],edx
  420699:	lea    ebx,[edx]
  42069b:	jns    0x4206c6
  42069d:	inc    ecx
  42069e:	ja     0x42067c
  4206a0:	fdiv   DWORD PTR [ebx]
  4206a2:	shl    DWORD PTR [eax-0x259edc87],cl
  4206a8:	xor    DWORD PTR [esp+ecx*1-0x68ebdaa8],0x78bbcafa
  4206b3:	sub    eax,DWORD PTR [ebx+0x1]
  4206b6:	xor    DWORD PTR [eax-0x2bd052cf],ecx
  4206bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206bd:	dec    ebx
  4206be:	fcmovu st,st(6)
  4206c0:	jns    0x4206bc
  4206c2:	stos   DWORD PTR es:[edi],eax
  4206c3:	frstor [esi]
  4206c5:	or     edx,DWORD PTR [ebx+0x39]
  4206c8:	jns    0x420652
  4206ca:	jecxz  0x420673
  4206cc:	push   0xffffffa1
  4206ce:	mov    edx,0x62d79c20
  4206d3:	repz push edi
  4206d5:	mov    ecx,0xf1690d82
  4206da:	std    
  4206db:	and    eax,0xed30c63f
  4206e0:	ins    DWORD PTR es:[edi],dx
  4206e1:	push   esi
  4206e2:	cdq    
  4206e3:	xor    ecx,DWORD PTR [esi]
  4206e5:	or     DWORD PTR [ecx],ebx
  4206e7:	repz dec ebx
  4206e9:	outs   dx,BYTE PTR ds:[esi]
  4206ea:	xchg   edi,eax
  4206eb:	in     eax,0x62
  4206ed:	repnz xchg ecx,eax
  4206ef:	sub    eax,0x5a884907
  4206f4:	sub    BYTE PTR [ecx-0x209c771d],al
  4206fa:	ror    DWORD PTR ds:0x378c0e05,0xe8
  420701:	dec    edi
  420702:	pop    eax
  420703:	xor    BYTE PTR [esi+0x3ace823e],dl
  420709:	outs   dx,DWORD PTR ds:[esi]
  42070a:	inc    eax
  42070b:	fwait
  42070c:	sbb    BYTE PTR [edx],cl
  42070e:	ins    DWORD PTR es:[edi],dx
  42070f:	pusha  
  420710:	mov    bh,0xa8
  420712:	scas   eax,DWORD PTR es:[edi]
  420713:	sub    eax,0x1787b572
  420718:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420719:	retf   
  42071a:	mov    al,0x2f
  42071c:	cmp    DWORD PTR [ebp-0x4367406e],eax
  420722:	jge    0x4206d1
  420724:	cli    
  420725:	mov    eax,0xd8b33bf0
  42072a:	pop    esp
  42072b:	adc    edx,DWORD PTR [esi]
  42072d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42072e:	jg     0x420736
  420730:	out    0xf7,al
  420732:	xor    BYTE PTR [ecx+0x176fe3ed],cl
  420738:	mov    ebx,0x3b95ee5b
  42073d:	mov    esp,0xd6c35baf
  420742:	sub    esp,DWORD PTR [eax-0x7]
  420745:	sub    eax,0xd61c4b21
  42074a:	cs jp  0x4207a9
  42074d:	jns    0x420707
  42074f:	mov    esi,0x345d7b8a
  420754:	les    edi,FWORD PTR [esi+0x3e481ce]
  42075a:	mov    BYTE PTR [edi],cl
  42075c:	test   eax,0x2217057c
  420761:	nop
  420762:	cdq    
  420763:	xchg   esi,eax
  420764:	mov    al,0x15
  420766:	je     0x42078c
  420768:	ror    BYTE PTR [edx-0x63],0xbe
  42076c:	out    dx,eax
  42076d:	in     eax,dx
  42076e:	ja     0x4207e2
  420770:	js     0x420792
  420772:	sub    al,0xf5
  420774:	push   edi
  420775:	ret    0xb24c
  420778:	sahf   
  420779:	stos   DWORD PTR es:[edi],eax
  42077a:	std    
  42077b:	mov    ds:0x3a902d0c,al
  420780:	fld    QWORD PTR [eax-0x313deefa]
  420786:	lock fwait
  420788:	or     DWORD PTR [ecx-0x541a3e89],0x7dc635c0
  420792:	lds    ebx,FWORD PTR [ecx-0x6e]
  420795:	mov    ch,0x8e
  420797:	pop    esp
  420798:	loope  0x420771
  42079a:	cli    
  42079b:	lahf   
  42079c:	ins    DWORD PTR es:[edi],dx
  42079d:	ins    DWORD PTR es:[edi],dx
  42079e:	adc    ebx,DWORD PTR [eax+0x3f93ea34]
  4207a4:	in     al,0xcd
  4207a6:	fisubr WORD PTR [edx]
  4207a8:	aaa    
  4207a9:	cmp    al,0x47
  4207ab:	xchg   ecx,eax
  4207ac:	test   BYTE PTR [edi+0x4],cl
  4207af:	jo     0x42082b
  4207b1:	iret   
  4207b2:	jle    0x42080c
  4207b4:	xchg   edx,eax
  4207b5:	fiadd  DWORD PTR [ebp-0x430e95a9]
  4207bb:	adc    ch,ch
  4207bd:	call   0x7f7:0x2619f6bd
  4207c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207c5:	mov    cl,0xfb
  4207c7:	lods   al,BYTE PTR ds:[esi]
  4207c8:	xor    bh,BYTE PTR [ecx]
  4207ca:	jns    0x42079b
  4207cc:	add    DWORD PTR [edx-0x26],edi
  4207cf:	inc    ebx
  4207d0:	je     0x42081c
  4207d2:	xor    esi,DWORD PTR [esp+esi*2+0x44]
  4207d6:	repnz pop edx
  4207d8:	mov    DWORD PTR [ebp-0x1e05cc38],ebp
  4207de:	dec    ecx
  4207df:	and    eax,0xcf643e53
  4207e4:	mov    esp,0x5cc8fcc4
  4207e9:	inc    edx
  4207ea:	cmp    BYTE PTR [edi+0x28c3532d],ah
  4207f0:	sbb    ecx,edi
  4207f2:	int3   
  4207f3:	xchg   ecx,eax
  4207f4:	in     al,0xaa
  4207f6:	cmp    bh,cl
  4207f8:	(bad)  
  4207f9:	fadd   DWORD PTR [esi]
  4207fb:	pop    ss
  4207fc:	addr16 dec edx
  4207fe:	inc    ebp
  4207ff:	jo     0x42084c
  420801:	push   ds
  420802:	rcl    BYTE PTR [ecx-0x5d312c1f],1
  420808:	test   BYTE PTR [edx-0x5d],ch
  42080b:	(bad)  
  42080c:	xchg   ebp,eax
  42080d:	nop
  42080e:	(bad)  
  42080f:	mov    edx,0xc68dc932
  420814:	add    bl,ch
  420816:	in     al,0x18
  420818:	xor    BYTE PTR [edx-0x32],cl
  42081b:	sbb    esi,DWORD PTR [ecx]
  42081d:	xchg   DWORD PTR [ecx+0xfb812bb],ebx
  420823:	xchg   ecx,eax
  420824:	adc    edi,DWORD PTR ss:[eax-0x6a487552]
  42082b:	sbb    esi,DWORD PTR [edi]
  42082d:	ss pop edi
  42082f:	outs   dx,BYTE PTR ds:[esi]
  420830:	aas    
  420831:	or     ecx,esp
  420833:	leave  
  420834:	das    
  420835:	dec    esp
  420836:	aad    0xc7
  420838:	adc    eax,0xce83a648
  42083d:	mov    ebp,0xd3728167
  420842:	mov    esi,0x85a73d14
  420847:	fisub  WORD PTR ds:0xa79f820
  42084d:	aam    0xd3
  42084f:	xchg   ecx,eax
  420850:	sti    
  420851:	jbe    0x42080b
  420853:	push   ebp
  420854:	lods   eax,DWORD PTR ds:[esi]
  420855:	mov    ?,edi
  420857:	sar    DWORD PTR [ecx-0x520237e0],0x73
  42085e:	aaa    
  42085f:	jns    0x42089c
  420861:	ds push ecx
  420863:	fist   WORD PTR [edi]
  420865:	pop    edi
  420866:	and    eax,0x9e5fe59b
  42086b:	xchg   DWORD PTR [ecx-0x16],esp
  42086e:	pop    esp
  42086f:	and    al,0x92
  420871:	iret   
  420872:	js     0x4208a9
  420874:	add    DWORD PTR [edi],ecx
  420876:	dec    ecx
  420877:	psrlq  mm4,QWORD PTR [edi-0x14]
  42087b:	jl     0x4208e8
  42087d:	test   DWORD PTR ds:0xd6b5b633,edx
  420883:	in     al,dx
  420884:	ss ja  0x420856
  420887:	icebp  
  420888:	test   eax,0xbd02a9dd
  42088d:	stos   DWORD PTR es:[edi],eax
  42088e:	fs or  eax,0xd013f094
  420894:	mov    ecx,0x20754f4f
  420899:	jns    0x420852
  42089b:	js     0x4208bc
  42089d:	and    cl,al
  42089f:	js     0x420890
  4208a1:	stos   BYTE PTR es:[edi],al
  4208a2:	out    dx,eax
  4208a3:	stos   DWORD PTR es:[edi],eax
  4208a4:	pop    edx
  4208a5:	fsubr  QWORD PTR [eax-0xa92f66d]
  4208ab:	mov    bh,0x7e
  4208ad:	cld    
  4208ae:	mov    bl,0x2d
  4208b0:	fs sub al,0x62
  4208b3:	push   edi
  4208b4:	and    esi,DWORD PTR [edi+0x18]
  4208b7:	mov    edx,0xb614b2a3
  4208bc:	jae    0x4208ca
  4208be:	arpl   WORD PTR [edi+0x6c01311a],si
  4208c4:	push   ds
  4208c5:	add    al,0xac
  4208c7:	ret    
  4208c8:	push   edi
  4208c9:	fisub  WORD PTR [eax-0x1abb8f93]
  4208cf:	cmp    DWORD PTR [esi+0x18],edi
  4208d2:	aad    0xb8
  4208d4:	dec    BYTE PTR [esi]
  4208d6:	inc    eax
  4208d7:	addr16 adc ebx,ebp
  4208da:	add    al,0x70
  4208dc:	(bad)  
  4208dd:	rcl    dl,cl
  4208df:	pop    ss
  4208e0:	push   esi
  4208e1:	push   cs
  4208e2:	pop    ds
  4208e3:	dec    ebx
  4208e4:	cwde   
  4208e5:	pop    ds
  4208e6:	fbld   TBYTE PTR [ecx]
  4208e8:	xor    bl,cl
  4208ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208eb:	loop   0x42087d
  4208ed:	inc    eax
  4208ee:	and    BYTE PTR [esi+0x7fdedf7f],dh
  4208f4:	adc    eax,0x9e97357a
  4208f9:	inc    eax
  4208fa:	dec    esp
  4208fb:	or     eax,0x2e91c253
  420900:	outs   dx,BYTE PTR ds:[esi]
  420901:	xor    al,0xe4
  420903:	fdiv   st,st(1)
  420905:	add    al,0x18
  420907:	pop    esp
  420908:	add    eax,0x30bd22cd
  42090d:	lods   eax,DWORD PTR ds:[esi]
  42090e:	dec    ebp
  42090f:	cmp    BYTE PTR [esi+esi*8],ch
  420912:	repnz iret 
  420914:	inc    ebx
  420915:	push   cs
  420916:	sub    eax,0x6a02b898
  42091b:	imul   edx,DWORD PTR [edx-0x4],0xffffffc7
  42091f:	push   edx
  420920:	shr    BYTE PTR [ecx],1
  420922:	cdq    
  420923:	test   eax,0xa2d6281f
  420928:	jae    0x42096b
  42092a:	sub    BYTE PTR [ebx+0x5ee946da],cl
  420930:	lods   al,BYTE PTR ds:[esi]
  420931:	sub    al,0x6b
  420933:	pop    ebx
  420934:	ins    DWORD PTR es:[edi],dx
  420935:	xchg   ebp,eax
  420936:	inc    esi
  420937:	pop    ds
  420938:	xlat   BYTE PTR ds:[ebx]
  420939:	pop    ebx
  42093a:	cmp    dh,BYTE PTR [ecx]
  42093c:	xchg   edx,eax
  42093d:	inc    ebx
  42093e:	pop    esi
  42093f:	out    dx,al
  420940:	scas   eax,DWORD PTR es:[edi]
  420941:	dec    eax
  420942:	xchg   ebp,eax
  420943:	ins    DWORD PTR es:[edi],dx
  420944:	fbld   TBYTE PTR [esi]
  420946:	mov    BYTE PTR [esi+0x45],dl
  420949:	cdq    
  42094a:	jmp    0xb56:0xfe260981
  420951:	ins    DWORD PTR es:[edi],dx
  420952:	xlat   BYTE PTR ds:[ebx]
  420953:	xor    cl,bl
  420955:	jno    0x4208f6
  420957:	imul   edx,DWORD PTR [ebx+0x7f233322],0x79
  42095e:	xor    al,BYTE PTR [edi+0x19b6553a]
  420964:	addr16 mov ds:0x5ce0,eax
  420968:	sub    DWORD PTR ds:0x8b8ffb8,edx
  42096e:	je     0x420934
  420970:	xor    al,BYTE PTR [ecx-0x3f]
  420973:	jbe    0x4209da
  420975:	lods   eax,DWORD PTR ds:[esi]
  420976:	adc    esp,ebx
  420978:	pop    ss
  420979:	and    cl,BYTE PTR [ecx+0x3c2095c5]
  42097f:	pushf  
  420980:	aad    0x5d
  420982:	mov    WORD PTR [esi],?
  420984:	cwde   
  420985:	in     eax,dx
  420986:	sub    al,0x23
  420988:	xchg   ebx,eax
  420989:	or     al,0xd9
  42098b:	and    al,0xe4
  42098d:	(bad)  
  42098e:	inc    eax
  42098f:	in     eax,dx
  420990:	shl    BYTE PTR [esp+eiz*8],cl
  420993:	int    0xeb
  420995:	pusha  
  420996:	sub    DWORD PTR ds:0x7de62c7f,eax
  42099c:	ret    0xe361
  42099f:	(bad)  
  4209a0:	call   0x1714a4f4
  4209a5:	xor    eax,0xbcd2fe52
  4209aa:	jmp    0x420a07
  4209ac:	imul   edi,edi,0xffffffcb
  4209af:	out    0x21,al
  4209b1:	outs   dx,BYTE PTR ds:[esi]
  4209b2:	jmp    0x4209d1
  4209b4:	retf   0x2d57
  4209b7:	mov    edi,0xa4939c5c
  4209bc:	lods   eax,DWORD PTR ds:[esi]
  4209bd:	popa   
  4209be:	lock mov eax,0x397129be
  4209c4:	mov    ecx,edx
  4209c6:	mov    bh,0x4e
  4209c8:	mov    bh,0x17
  4209ca:	arpl   WORD PTR [ebx+0x55],bx
  4209cd:	(bad)  
  4209ce:	test   DWORD PTR [esp+eax*2+0x39],0x3da7044a
  4209d6:	and    ebx,ebp
  4209d8:	pop    ebp
  4209d9:	mov    ecx,0xc407e84c
  4209de:	add    al,0x59
  4209e0:	ins    DWORD PTR es:[edi],dx
  4209e1:	xchg   edx,eax
  4209e2:	sub    al,0xfb
  4209e4:	std    
  4209e5:	enter  0x5bf8,0x9d
  4209e9:	stos   BYTE PTR es:[edi],al
  4209ea:	std    
  4209eb:	(bad)  
  4209ec:	retf   
  4209ed:	add    DWORD PTR [eax-0x4710409e],ebx
  4209f3:	aam    0xdd
  4209f5:	fcom   DWORD PTR [esp+edi*1-0x16eae339]
  4209fc:	pusha  
  4209fd:	mov    esi,DWORD PTR [eax-0x55a57659]
  420a03:	adc    al,0x8f
  420a05:	pop    ecx
  420a06:	fdiv   QWORD PTR [ebp+esi*4+0x61]
  420a0a:	rcl    dh,cl
  420a0c:	iret   
  420a0d:	fist   WORD PTR [ebp-0xb]
  420a10:	shl    DWORD PTR [ecx+esi*2],0x1e
  420a14:	ins    BYTE PTR es:[edi],dx
  420a15:	scas   al,BYTE PTR es:[edi]
  420a16:	add    ebp,DWORD PTR [ecx-0x4de4d44c]
  420a1c:	loopne 0x420a48
  420a1e:	inc    ecx
  420a1f:	ins    BYTE PTR es:[edi],dx
  420a20:	repz add al,BYTE PTR [eax+0x52]
  420a24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a25:	leave  
  420a26:	daa    
  420a27:	int    0xe6
  420a29:	fist   DWORD PTR [ecx-0x623fd4e3]
  420a2f:	clc    
  420a30:	sbb    al,0xf
  420a32:	push   edi
  420a33:	rol    BYTE PTR [ebx],0x22
  420a36:	enter  0x669c,0xf0
  420a3a:	cmp    bl,0xbb
  420a3d:	mov    ch,0x5c
  420a3f:	out    0x40,eax
  420a41:	lea    bx,[edi*8+0x457ff183]
  420a49:	ss push 0xffffffd4
  420a4c:	and    dh,BYTE PTR [ebx+0x3b90f6d8]
  420a52:	jo     0x420ac7
  420a54:	or     ebx,eax
  420a56:	cmp    eax,0x6d500202
  420a5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a5c:	pop    esp
  420a5d:	push   ecx
  420a5e:	ins    DWORD PTR es:[edi],dx
  420a5f:	popf   
  420a60:	sbb    eax,0x9d4b481f
  420a65:	repz ret 
  420a67:	stos   DWORD PTR es:[edi],eax
  420a68:	sub    DWORD PTR [edx+0xe1e9594],ecx
  420a6e:	xor    DWORD PTR [ebx+edx*2],ecx
  420a71:	mov    eax,0xb03c75a1
  420a76:	or     DWORD PTR [ebx],ebx
  420a78:	js     0x420a62
  420a7a:	mov    al,ds:0x9b37219e
  420a7f:	or     ebp,esp
  420a81:	popa   
  420a82:	mov    cl,0xd1
  420a84:	add    DWORD PTR [edi+ebx*4-0x49d501f4],esp
  420a8b:	rcl    DWORD PTR [ebp+ebx*2-0x58edae0],1
  420a92:	dec    ebx
  420a93:	cmp    al,0xad
  420a95:	fld    st(4)
  420a97:	cmp    DWORD PTR [ecx],0xfffffffb
  420a9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a9b:	push   edi
  420a9c:	cmp    dh,BYTE PTR [edi+ebp*4]
  420a9f:	cmp    eax,0xd45edeaf
  420aa4:	leave  
  420aa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420aa6:	cmp    DWORD PTR [edx],ebp
  420aa8:	aad    0x3f
  420aaa:	push   esp
  420aab:	(bad)  
  420aac:	jae    0x420af8
  420aae:	bound  ebp,QWORD PTR ds:0x3cade82d
  420ab4:	mov    edx,0xc4cafad7
  420ab9:	xor    esi,ebp
  420abb:	sbb    al,0xd4
  420abd:	cmp    al,0x4b
  420abf:	ficomp WORD PTR [edx+0x3a]
  420ac2:	sub    ebp,esi
  420ac4:	xor    al,0x99
  420ac6:	jl     0x420b2e
  420ac8:	push   0xaf0ac00
  420acd:	jle    0x420a7c
  420acf:	jmp    0x21ee:0x5c963037
  420ad6:	pop    ds
  420ad7:	fld    QWORD PTR [esi]
  420ad9:	inc    esi
  420adb:	sti    
  420adc:	aas    
  420add:	loopne 0x420b25
  420adf:	imul   edi,DWORD PTR [eax-0x6b],0xffffffc9
  420ae3:	jmp    0x420b58
  420ae5:	test   DWORD PTR [edx+0x4f80001],eax
  420aeb:	add    BYTE PTR [eax],al
  420aed:	lock mov bl,0xc7
  420af0:	aaa    
  420af1:	push   ecx
  420af2:	add    edi,DWORD PTR [esi-0x9]
  420af5:	int3   
  420af6:	imul   esp
  420af8:	aas    
  420af9:	and    eax,0x73d4c4a8
  420afe:	sbb    ebx,edx
  420b00:	sbb    DWORD PTR [esi+0x56],0xffffffdd
  420b04:	push   es
  420b05:	mov    eax,ds:0x964f23ad
  420b0a:	mov    eax,ds:0x16199b70
  420b0f:	jbe    0x420aba
  420b11:	add    BYTE PTR [edi],ch
  420b13:	xchg   ecx,eax
  420b14:	(bad)  
  420b15:	es sahf 
  420b17:	aas    
  420b18:	(bad)  
  420b19:	mov    bh,0x21
  420b1b:	jo     0x420af9
  420b1d:	(bad)
  420b20:	dec    eax
  420b21:	inc    edi
  420b22:	call   0xb489:0xe5ce4d0c
  420b29:	ins    DWORD PTR es:[edi],dx
  420b2a:	test   al,0x35
  420b2c:	out    0x51,eax
  420b2e:	dec    ebp
  420b2f:	and    al,0x34
  420b31:	cmc    
  420b32:	dec    ebx
  420b33:	dec    ecx
  420b34:	retf   0x52d9
  420b37:	aaa    
  420b38:	mul    BYTE PTR [esi+0x42b2fd74]
  420b3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b3f:	enter  0x7762,0x3a
  420b43:	dec    esp
  420b44:	or     eax,DWORD PTR [edi]
  420b46:	retf   
  420b47:	popa   
  420b48:	cdq    
  420b49:	cwde   
  420b4a:	in     eax,dx
  420b4b:	fwait
  420b4c:	out    0xaf,eax
  420b4e:	repz mov dh,0xf2
  420b51:	retf   0xc843
  420b54:	inc    edi
  420b55:	aad    0x58
  420b57:	sahf   
  420b58:	mov    al,ds:0x58e283f6
  420b5d:	pop    esi
  420b5e:	ficom  WORD PTR [ebx]
  420b60:	(bad)  
  420b61:	xchg   ecx,eax
  420b62:	inc    esp
  420b63:	push   cs
  420b64:	jmp    0xb53c:0x86b85c7b
  420b6b:	sbb    DWORD PTR [esi],eax
  420b6d:	in     eax,0x42
  420b6f:	xchg   edx,eax
  420b70:	cdq    
  420b71:	test   eax,0x611f3743
  420b76:	leave  
  420b77:	xchg   esi,eax
  420b78:	scas   eax,DWORD PTR es:[edi]
  420b79:	loope  0x420b64
  420b7b:	mov    BYTE PTR ds:0x5dcfaba3,dh
  420b81:	add    al,0x95
  420b83:	or     BYTE PTR [ebp-0x72117a86],0x7c
  420b8a:	add    BYTE PTR [ebp-0x59c69bb5],cl
  420b90:	clc    
  420b91:	into   
  420b92:	in     al,0x75
  420b94:	cmp    ah,0x64
  420b97:	pop    esp
  420b98:	sti    
  420b99:	and    eax,0x867b8fc3
  420b9e:	data16 das 
  420ba0:	mov    al,BYTE PTR [ecx-0x31]
  420ba3:	cdq    
  420ba4:	test   eax,0x6f497750
  420ba9:	fdiv   st(6),st
  420bab:	inc    ecx
  420bac:	jecxz  0x420b45
  420bae:	jp     0x420b58
  420bb0:	pop    ds
  420bb1:	arpl   WORD PTR [edi],cx
  420bb3:	mov    ch,0x24
  420bb5:	mov    ebx,0xe14b4ced
  420bba:	sub    DWORD PTR ds:0x1c17d127,esi
  420bc0:	adc    BYTE PTR [esi-0x77af9583],dh
  420bc6:	stc    
  420bc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bc9:	jbe    0x420c45
  420bcb:	pop    ss
  420bcc:	pushf  
  420bcd:	aas    
  420bce:	sbb    ebx,DWORD PTR [ebx+edi*4]
  420bd1:	test   DWORD PTR [ecx-0x1c],esi
  420bd4:	xchg   esp,eax
  420bd5:	sub    al,0x6a
  420bd7:	inc    edx
  420bd8:	outs   dx,DWORD PTR ds:[esi]
  420bd9:	jl     0x420b95
  420bdb:	aas    
  420bdc:	scas   al,BYTE PTR es:[edi]
  420bdd:	xchg   esi,eax
  420bde:	jmp    0x2a7c:0x5419ef2d
  420be5:	add    ch,BYTE PTR [ecx]
  420be7:	jns    0x420b95
  420be9:	xor    ch,ah
  420beb:	dec    edx
  420bec:	cmp    ebp,DWORD PTR [edx-0x18]
  420bef:	jae    0x420bf6
  420bf1:	jns    0x420c69
  420bf3:	mov    WORD PTR [esi-0x7527862b],gs
  420bf9:	mov    bl,dl
  420bfb:	iret   
  420bfc:	hlt    
  420bfd:	and    eax,0x7a705952
  420c02:	inc    esp
  420c03:	aam    0xd8
  420c05:	xlat   BYTE PTR ds:[ebx]
  420c06:	cmp    al,0x80
  420c08:	xchg   DWORD PTR [ecx],ebp
  420c0a:	mov    ecx,0x4b2a59c
  420c0f:	cdq    
  420c10:	addr16 cdq 
  420c12:	jmp    0xbdd6:0x7e1cfa4d
  420c19:	mov    edi,0xa0e694c5
  420c1e:	aas    
  420c1f:	mov    WORD PTR [edx-0x50],gs
  420c22:	outs   dx,BYTE PTR ds:[esi]
  420c23:	(bad)  
  420c24:	(bad)  
  420c25:	femms  
  420c27:	push   DWORD PTR [ebx+eax*8-0x30]
  420c2b:	ret    
  420c2c:	in     eax,0x8e
  420c2e:	(bad)  
  420c2f:	pop    ebx
  420c30:	push   ebp
  420c31:	nop
  420c32:	sbb    dh,cl
  420c34:	sbb    al,0x44
  420c36:	mov    ecx,0xc6dfba09
  420c3b:	sub    ebp,DWORD PTR [edx-0x3aa597ea]
  420c41:	mov    esi,0x21d4d894
  420c46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c47:	pop    ds
  420c48:	cdq    
  420c49:	jl     0x420c6c
  420c4b:	cwde   
  420c4c:	(bad)  
  420c4d:	adc    DWORD PTR [esi],edi
  420c4f:	repz sub al,ah
  420c52:	xchg   di,ax
  420c54:	retf   0xaa3d
  420c57:	outs   dx,BYTE PTR ds:[esi]
  420c58:	test   DWORD PTR [ecx-0x24],esp
  420c5b:	dec    esp
  420c5c:	call   0xc978:0xbf982da3
  420c63:	clc    
  420c64:	pop    ss
  420c65:	rol    DWORD PTR [ebp-0xf],cl
  420c68:	adc    DWORD PTR [ecx],ebp
  420c6a:	and    al,0xae
  420c6c:	sub    DWORD PTR [esi+0x574503dc],0x41
  420c73:	push   0xf9b70a7a
  420c78:	(bad)  
  420c79:	mov    edi,0x73cae4bc
  420c7e:	mov    edx,0x916b9a3a
  420c83:	mov    ebp,0x89c1a0ca
  420c88:	(bad)  
  420c89:	cmc    
  420c8a:	jno    0x420cc4
  420c8c:	fsub   DWORD PTR [ebx-0x58]
  420c8f:	mov    dl,0xb0
  420c91:	dec    esi
  420c92:	add    al,0x51
  420c94:	xlat   BYTE PTR ds:[ebx]
  420c95:	mov    al,ds:0x7b20e2ae
  420c9a:	pop    esi
  420c9b:	shl    BYTE PTR [eax],cl
  420c9d:	xor    DWORD PTR [ecx],ecx
  420c9f:	pop    edx
  420ca0:	adc    dh,ah
  420ca2:	fimul  WORD PTR [esi]
  420ca4:	jmp    0x9540:0x8bec60bb
  420cab:	xchg   BYTE PTR [ebp+0x1628b068],al
  420cb1:	orps   xmm3,xmm1
  420cb4:	lods   al,BYTE PTR ds:[esi]
  420cb5:	add    bh,bl
  420cb7:	jp     0x420c3c
  420cb9:	mov    eax,ds:0x1c688909
  420cbe:	cmp    al,0x91
  420cc0:	cmp    al,0x1a
  420cc2:	mov    WORD PTR [ecx],cs
  420cc4:	inc    eax
  420cc5:	xchg   DWORD PTR [edx-0x3d],esi
  420cc8:	or     cl,BYTE PTR [eax-0x3e5f9e20]
  420cce:	and    al,0x13
  420cd0:	in     al,dx
  420cd1:	mov    ebx,0x42aeec24
  420cd6:	or     al,ch
  420cd8:	mov    al,0x74
  420cda:	clc    
  420cdb:	inc    ebp
  420cdc:	mov    edx,0x4806010d
  420ce1:	imul   ecx,edi,0x2f0d39d8
  420ce7:	out    0x79,eax
  420ce9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420cea:	dec    esi
  420ceb:	gs jae 0x420d38
  420cee:	sbb    al,BYTE PTR [ebp+0x18]
  420cf1:	xor    ebp,DWORD PTR [ecx+0x1baaebb]
  420cf7:	fs dec ebp
  420cf9:	inc    ecx
  420cfa:	cli    
  420cfb:	mov    bh,0xf6
  420cfd:	dec    ecx
  420cfe:	dec    ecx
  420cff:	pop    esp
  420d00:	or     al,0x57
  420d02:	sub    al,0xd9
  420d04:	cmc    
  420d05:	or     BYTE PTR [edx],dl
  420d07:	lods   eax,DWORD PTR ds:[esi]
  420d08:	jecxz  0x420d7a
  420d0a:	loope  0x420ca1
  420d0c:	aam    0xd1
  420d0e:	daa    
  420d0f:	jmp    0x420d54
  420d11:	bound  edx,QWORD PTR [ebp+0x2b764848]
  420d17:	jl     0x420d51
  420d19:	shl    DWORD PTR [ebp+0x0],1
  420d1c:	mov    ?,WORD PTR [ecx+edx*2-0x67]
  420d20:	cmp    ah,BYTE PTR [ecx]
  420d22:	push   ebp
  420d23:	inc    edi
  420d24:	xlat   BYTE PTR ds:[ebx]
  420d25:	inc    edi
  420d26:	jnp    0x420da6
  420d28:	outs   dx,BYTE PTR ds:[esi]
  420d29:	dec    esi
  420d2a:	jo     0x420cee
  420d2c:	sub    BYTE PTR [eax],ch
  420d2e:	or     al,0xd1
  420d30:	cmp    esi,DWORD PTR [eax]
  420d32:	lods   eax,DWORD PTR ds:[esi]
  420d33:	ja     0x420dad
  420d35:	mov    esi,DWORD PTR [edi-0x3f]
  420d38:	mov    cl,0x6e
  420d3a:	cvtps2pi mm6,xmm7
  420d3d:	inc    ecx
  420d3e:	call   0xaba101f8
  420d43:	cld    
  420d44:	hlt    
  420d45:	jecxz  0x420d24
  420d47:	jo     0x420ceb
  420d49:	retf   0x4f15
  420d4c:	fisttp QWORD PTR [ecx]
  420d4e:	inc    ebp
  420d4f:	jmp    0x420d0d
  420d51:	dec    esp
  420d52:	pop    esp
  420d53:	ror    BYTE PTR [ebx+ecx*1-0x38],0xd4
  420d58:	fstp   QWORD PTR [edi]
  420d5a:	dec    esi
  420d5b:	mov    ch,0x4b
  420d5d:	mov    ds:0x59f1e0ab,al
  420d62:	jbe    0x420d92
  420d64:	arpl   WORD PTR ds:0x1c6eec2a,sp
  420d6a:	stos   BYTE PTR es:[edi],al
  420d6b:	cwde   
  420d6c:	scas   eax,DWORD PTR es:[edi]
  420d6d:	mov    WORD PTR [edx],cs
  420d6f:	push   0x400a3bca
  420d74:	inc    eax
  420d75:	push   esi
  420d76:	iret   
  420d77:	int3   
  420d78:	jo     0x420dcc
  420d7a:	mov    ch,0x4
  420d7c:	xor    BYTE PTR [ebp+edi*4-0x6dc3848],bl
  420d83:	stos   BYTE PTR es:[edi],al
  420d84:	arpl   bx,bp
  420d86:	dec    edi
  420d87:	push   eax
  420d88:	ror    DWORD PTR [edx-0x7b68bcf7],1
  420d8e:	(bad)  
  420d8f:	repz inc edx
  420d91:	or     al,0x3b
  420d93:	scas   eax,DWORD PTR es:[edi]
  420d94:	mov    bl,0xc4
  420d96:	sub    eax,DWORD PTR [eax+0x5549fd2c]
  420d9c:	xor    eax,0x3f9c2212
  420da1:	out    dx,eax
  420da2:	jmp    0x3e6508c7
  420da7:	mov    ebx,0xb6c12339
  420dac:	test   BYTE PTR ds:0x9c48b4d5,al
  420db2:	push   ebx
  420db3:	xor    DWORD PTR [ecx+0x5],esp
  420db6:	sbb    esp,DWORD PTR [eax]
  420db8:	fs fcmovne st,st(3)
  420dbc:	cmp    bl,al
  420dbe:	inc    ebx
  420dbf:	jecxz  0x420dce
  420dc1:	ret    0xa643
  420dc4:	(bad)  
  420dc5:	not    DWORD PTR [edx+0x4d255c66]
  420dcb:	lea    ecx,[ebx-0x3ce27256]
  420dd1:	sub    esi,esp
  420dd3:	mov    eax,ebx
  420dd5:	aas    
  420dd6:	mov    dh,0x2b
  420dd8:	jae    0x420e0e
  420dda:	es fwait
  420ddc:	(bad)  
  420ddd:	xchg   edi,eax
  420dde:	pop    ebp
  420ddf:	add    al,0x73
  420de1:	pop    ebx
  420de2:	int    0x4b
  420de4:	cmc    
  420de5:	or     al,0x93
  420de7:	aaa    
  420de8:	cli    
  420de9:	sub    al,0x68
  420deb:	mov    bh,0x3f
  420ded:	mov    ?,WORD PTR ds:0x1114fead
  420df3:	dec    ebp
  420df4:	repz (bad) 
  420df8:	pop    eax
  420df9:	cmp    BYTE PTR [eax+0x29b4c168],dl
  420dff:	push   es
  420e00:	in     al,dx
  420e01:	xor    eax,0xbdedcd7b
  420e06:	push   edx
  420e07:	rcl    DWORD PTR [ebp+0x56c65e57],0x9e
  420e0e:	cmp    DWORD PTR [esi],esi
  420e10:	rcl    DWORD PTR [esi+0x56488a1],cl
  420e16:	(bad)  
  420e17:	shl    ah,1
  420e19:	js     0x420de7
  420e1b:	enter  0x6c5c,0x21
  420e1f:	pop    ecx
  420e20:	stos   DWORD PTR es:[edi],eax
  420e21:	imul   ebp,DWORD PTR [edi-0x33],0x1f9e03b3
  420e28:	inc    ecx
  420e29:	adc    BYTE PTR [esi+0x415fce89],ah
  420e2f:	jp     0x420dc7
  420e31:	repnz gs stc 
  420e34:	in     eax,dx
  420e35:	call   0x3ddf:0x93631145
  420e3c:	xchg   ecx,eax
  420e3d:	fiadd  WORD PTR [edx+edx*1-0x3786fd1b]
  420e44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e45:	adc    eax,0x1c0dede3
  420e4a:	add    al,0x6a
  420e4c:	mov    BYTE PTR [ecx+0x6a],0x6d
  420e50:	adc    dh,ch
  420e52:	xchg   esp,eax
  420e53:	mov    ebx,DWORD PTR [eax+0x2]
  420e56:	jbe    0x420e20
  420e58:	sub    DWORD PTR [esi-0x44],eax
  420e5b:	popa   
  420e5c:	xchg   edx,eax
  420e5d:	adc    DWORD PTR [edi+0x5f5eab0e],0xab8e148c
  420e67:	ret    0xe236
  420e6a:	repnz scas eax,DWORD PTR es:[edi]
  420e6c:	clc    
  420e6d:	push   ds
  420e6e:	xor    BYTE PTR [esi-0x3a],cl
  420e71:	outs   dx,BYTE PTR ds:[esi]
  420e72:	std    
  420e73:	push   ss
  420e74:	mov    al,0x21
  420e76:	addr16 cmp eax,0x7c5958ac
  420e7c:	mov    dh,0x34
  420e7e:	mov    ch,0xe1
  420e80:	mov    al,es:0x8d7d312a
  420e86:	jmp    0xa1a8460a
  420e8b:	push   ebx
  420e8c:	push   0xffffffba
  420e8e:	pop    ecx
  420e8f:	jno    0x420e93
  420e91:	std    
  420e92:	outs   dx,BYTE PTR ds:[esi]
  420e93:	dec    ecx
  420e94:	out    dx,eax
  420e95:	ss loop 0x420ef5
  420e98:	dec    ecx
  420e99:	push   esi
  420e9a:	inc    esi
  420e9b:	xchg   edx,eax
  420e9c:	xchg   esp,eax
  420e9d:	xchg   edi,eax
  420e9e:	fsub   QWORD PTR [ebx-0x22]
  420ea1:	push   es
  420ea2:	add    edx,eax
  420ea4:	(bad)  
  420ea6:	imul   ecx,DWORD PTR [eax+0x12],0x44
  420eaa:	inc    ecx
  420eab:	sub    al,0x90
  420ead:	or     al,0xdb
  420eaf:	rol    DWORD PTR [edi-0x2c9f0a83],cl
  420eb5:	cmp    dl,BYTE PTR [eax-0x79]
  420eb8:	out    dx,eax
  420eb9:	jp     0x420ef1
  420ebb:	mov    al,ds:0xa2d1eae3
  420ec0:	pop    ebp
  420ec1:	and    al,0x14
  420ec3:	mov    DWORD PTR [ecx+0x26],ecx
  420ec6:	inc    ecx
  420ec7:	pusha  
  420ec8:	repz mov ah,0xd
  420ecb:	aad    0xc5
  420ecd:	mov    edi,0xf8e38aac
  420ed2:	jp     0x420ec1
  420ed4:	jmp    0x420ebe
  420ed6:	push   ss
  420ed7:	sar    DWORD PTR [ecx+ebx*4-0x7a478d0c],cl
  420ede:	inc    edx
  420edf:	pop    es
  420ee0:	mov    cl,0x91
  420ee3:	cdq    
  420ee4:	pusha  
  420ee5:	pop    ebp
  420ee6:	push   0xffffffbe
  420ee8:	sti    
  420ee9:	imul   ebp,DWORD PTR [ebx+0x4fbec936],0x27
  420ef0:	ins    DWORD PTR es:[edi],dx
  420ef1:	pop    esi
  420ef2:	xchg   DWORD PTR ds:0x29f09539,esp
  420ef8:	push   esi
  420ef9:	mov    eax,0xdfb81dc5
  420efe:	int3   
  420eff:	xor    BYTE PTR [edi-0x4de3cbe2],0xec
  420f06:	sbb    bl,BYTE PTR [ebx+0x22]
  420f09:	xor    dh,al
  420f0b:	cmp    esp,DWORD PTR [edx]
  420f0d:	mov    ah,0x5e
  420f0f:	inc    cx
  420f11:	add    al,ah
  420f13:	or     dl,BYTE PTR [edi+0x6e]
  420f16:	xor    BYTE PTR [edi],dh
  420f18:	scas   eax,DWORD PTR es:[edi]
  420f19:	push   edi
  420f1a:	inc    eax
  420f1b:	and    al,0x99
  420f1d:	xlat   BYTE PTR ds:[ebx]
  420f1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f1f:	sbb    ebx,DWORD PTR [eax]
  420f21:	jns    0x420f5b
  420f23:	loop   0x420f31
  420f25:	add    ah,bl
  420f27:	lea    esp,[ebp-0x58]
  420f2a:	adc    cl,0x25
  420f2d:	into   
  420f2e:	pop    es
  420f2f:	retf   0x4482
  420f32:	fsubr  st,st(0)
  420f34:	test   DWORD PTR [eax-0x1e],0x52b098e4
  420f3b:	pop    ecx
  420f3c:	mov    ebp,0x6dd18737
  420f41:	add    eax,esp
  420f43:	jmp    0xfa036b57
  420f48:	cmp    al,0x5e
  420f4a:	test   BYTE PTR [esi+0x21],ah
  420f4d:	cmp    al,0xb8
  420f4f:	mov    BYTE PTR [eax-0x65],al
  420f52:	int    0x2f
  420f54:	mov    ebx,0x6ef10321
  420f59:	(bad)  
  420f5a:	addr16 call 0xe7b9882
  420f60:	xchg   DWORD PTR [ebx-0x62],edi
  420f63:	repnz lock fsubr st(0),st
  420f67:	mov    esp,0x9d5ce64c
  420f6c:	sub    BYTE PTR [ecx-0x43],bh
  420f6f:	pop    edi
  420f70:	add    DWORD PTR [ecx+0x7c],ebx
  420f73:	call   0xb88e3ab0
  420f78:	loope  0x420f7f
  420f7a:	not    DWORD PTR [eax-0x2a3cef1f]
  420f80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f81:	adc    dh,dl
  420f83:	jge    0x420f65
  420f85:	mov    BYTE PTR [esp+ebx*2],ch
  420f88:	(bad)  
  420f89:	mov    esi,0xcc49e44a
  420f8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f8f:	fidivr WORD PTR [ebp+ebx*2-0x33]
  420f93:	out    0xd2,eax
  420f95:	outs   dx,BYTE PTR ds:[esi]
  420f96:	fs mov ecx,0x75d4955e
  420f9c:	mov    al,ah
  420f9e:	pop    edx
  420f9f:	sub    BYTE PTR [eax],dh
  420fa1:	ins    BYTE PTR es:[edi],dx
  420fa2:	out    dx,al
  420fa3:	mul    BYTE PTR [esi+0x412c58e3]
  420fa9:	jge    0x420f66
  420fab:	dec    edi
  420fac:	(bad)  
  420fad:	loope  0x420f4d
  420faf:	add    eax,0xfbed7b43
  420fb4:	das    
  420fb5:	sub    BYTE PTR [edx+0x5c7df3db],0x43
  420fbc:	mov    ecx,0xd98750b3
  420fc1:	popf   
  420fc2:	fdivr  st,st(7)
  420fc4:	adc    ecx,ecx
  420fc6:	lea    esi,[edx]
  420fc8:	dec    edx
  420fc9:	cmp    esi,DWORD PTR [esi+0x26]
  420fcc:	adc    al,0x7b
  420fce:	nop
  420fcf:	mov    ah,0x1c
  420fd1:	mov    eax,ds:0xfe3b8df
  420fd6:	mov    eax,0x3b108070
  420fdb:	(bad)  
  420fdc:	in     al,dx
  420fdd:	lods   eax,DWORD PTR ds:[esi]
  420fde:	repz push ebx
  420fe0:	and    edx,DWORD PTR [eax-0x64]
  420fe3:	mov    bh,0xd1
  420fe5:	add    DWORD PTR [ebp-0x28],edi
  420fe8:	mov    ebp,0xfd65bdfc
  420fed:	int3   
  420fee:	ins    DWORD PTR es:[edi],dx
  420fef:	xor    BYTE PTR [edi-0x2d3852e8],cl
  420ff5:	jge    0x420f7e
  420ff7:	add    DWORD PTR [eax],eax
  420ff9:	clc    
  420ffa:	add    al,0x0
  420ffc:	add    BYTE PTR [edx+0x27dcdc5a],bl
  421002:	fld    st(5)
  421004:	inc    esp
  421005:	mov    cl,al
  421007:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421008:	mov    ecx,0xbfb6e294
  42100d:	sbb    BYTE PTR ds:0x7c7005dc,0x2e
  421014:	hlt    
  421015:	sub    edx,DWORD PTR [eax+0x0]
  421018:	ja     0x421047
  42101a:	clc    
  42101b:	push   esi
  42101c:	push   0xffffffcb
  42101e:	xchg   esp,eax
  42101f:	pop    ebx
  421020:	in     eax,dx
  421021:	rcl    BYTE PTR [ecx-0x69],cl
  421024:	inc    ebp
  421025:	mov    ebp,0xd3507eab
  42102a:	loope  0x421065
  42102c:	inc    esp
  42102d:	sahf   
  42102e:	les    esp,FWORD PTR [edi]
  421030:	mov    esp,0x587d5e8
  421035:	pop    ecx
  421036:	dec    esp
  421037:	xor    esi,ecx
  421039:	dec    eax
  42103a:	ins    DWORD PTR es:[edi],dx
  42103b:	nop
  42103c:	add    BYTE PTR [edi-0x4eb2498],bh
  421042:	push   0x6
  421044:	xor    BYTE PTR [esi],bl
  421046:	mov    bl,0xa9
  421048:	mov    bl,0x8f
  42104a:	inc    esi
  42104b:	sti    
  42104c:	es jl  0x420fd4
  42104f:	add    BYTE PTR ds:0x51b8e989,ah
  421055:	hlt    
  421056:	pop    ss
  421057:	inc    edi
  421058:	je     0x420ff5
  42105a:	bound  ecx,QWORD PTR [esi-0x6]
  42105d:	call   0xe937:0x97817640
  421064:	pop    eax
  421065:	cmp    al,0x62
  421067:	mov    bl,0xa3
  421069:	test   eax,0x78ab99ac
  42106e:	popa   
  42106f:	jmp    0x4210c8
  421071:	jbe    0x4210a6
  421073:	subps  xmm3,XMMWORD PTR [ebp-0x37]
  421077:	mov    ecx,0x8d477244
  42107c:	test   ah,bl
  42107e:	and    al,0xd9
  421080:	sub    eax,0xf1f77a43
  421085:	inc    ebp
  421086:	push   ss
  421087:	sbb    BYTE PTR [edi-0xc391783],cl
  42108d:	xchg   edi,eax
  42108e:	push   edx
  42108f:	lock mov ds:0xc3d69555,eax
  421095:	jge    0x4210cc
  421097:	les    esp,FWORD PTR [ebx+0x5cb9ff20]
  42109d:	push   eax
  42109e:	in     eax,0x9a
  4210a0:	fist   WORD PTR [eax]
  4210a2:	nop
  4210a3:	ret    
  4210a4:	mov    ebp,0xcc6cac04
  4210a9:	test   eax,0x4fee84e4
  4210ae:	mov    bl,0xed
  4210b0:	in     al,0xad
  4210b2:	xchg   edx,eax
  4210b3:	push   ds
  4210b4:	mov    bh,0x9
  4210b6:	inc    edi
  4210b7:	clc    
  4210b8:	xor    BYTE PTR [esi],dl
  4210ba:	or     eax,0x669ed2ba
  4210bf:	repnz aam 0x2
  4210c2:	add    al,0x18
  4210c4:	inc    esi
  4210c5:	xor    BYTE PTR [esi-0x66],ah
  4210c8:	mov    ebx,0x2bc9eea4
  4210cd:	iret   
  4210ce:	xor    BYTE PTR [ebp+0x204a4da7],ch
  4210d4:	xchg   edi,eax
  4210d5:	(bad)  
  4210d6:	(bad)  
  4210d7:	jnp    0x421060
  4210d9:	adc    al,0x96
  4210db:	test   al,0xc4
  4210dd:	jb     0x421064
  4210df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210e0:	xor    eax,DWORD PTR [esi-0x52]
  4210e3:	sbb    ah,dl
  4210e5:	(bad)  [ebp+edi*1-0x5b867dd0]
  4210ec:	xlat   BYTE PTR ds:[ebx]
  4210ed:	ss mov bl,0x49
  4210f0:	je     0x421090
  4210f2:	repz imul ebx,DWORD PTR ds:0x17c572e6,0x5423c321
  4210fd:	add    DWORD PTR [edi],ebx
  4210ff:	sub    al,0xd1
  421101:	or     edi,eax
  421103:	out    dx,eax
  421104:	fdiv   st,st(4)
  421106:	stos   DWORD PTR es:[edi],eax
  421107:	inc    edi
  421108:	lea    edi,[edx-0x7e]
  42110b:	loop   0x421182
  42110d:	daa    
  42110e:	add    al,0x21
  421110:	arpl   WORD PTR [ebp+0x2c],sp
  421113:	sub    al,0xed
  421115:	and    DWORD PTR [edx],edx
  421117:	cs mov bh,0x91
  42111a:	mov    ch,BYTE PTR [edi+0x54]
  42111d:	fdiv   QWORD PTR [esi-0xd]
  421120:	mov    dl,0x31
  421122:	mov    al,ds:0x5a7bee7c
  421127:	cdq    
  421128:	ds jecxz 0x4210df
  42112b:	sub    al,0xac
  42112d:	inc    esi
  42112e:	pop    ss
  42112f:	sbb    dl,BYTE PTR [ecx+eax*4]
  421132:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421133:	sar    DWORD PTR [ebp-0x5daae730],1
  421139:	fsub   DWORD PTR [esi]
  42113b:	ins    DWORD PTR es:[edi],dx
  42113c:	stos   DWORD PTR es:[edi],eax
  42113d:	mov    WORD PTR [ebp-0x2b1c72d3],es
  421143:	ja     0x421147
  421145:	inc    edi
  421146:	sti    
  421147:	sub    edi,ebp
  421149:	inc    ebx
  42114a:	rcl    ebp,1
  42114c:	jbe    0x42115d
  42114e:	rol    BYTE PTR [edx],0x3d
  421151:	or     DWORD PTR [edi-0x537d6583],0x887d64f5
  42115b:	xor    DWORD PTR [edx+0x18],0xffffff90
  42115f:	bound  ebx,QWORD PTR [ebx]
  421161:	dec    ecx
  421162:	dec    ebp
  421163:	mov    ds:0x6582d038,al
  421168:	push   edx
  421169:	push   edx
  42116a:	daa    
  42116b:	push   ecx
  42116c:	push   edx
  42116d:	call   0x4438:0xeaad89fc
  421174:	dec    esp
  421175:	adc    ch,BYTE PTR [ebp+0x6ef99765]
  42117b:	rcr    BYTE PTR [esi+0x2e],1
  42117e:	sti    
  42117f:	popf   
  421180:	or     DWORD PTR [esi+0x18bc0279],ebx
  421186:	sbb    al,0x5
  421188:	jmp    0xacbd:0x8315baa7
  42118f:	inc    ebx
  421190:	or     BYTE PTR [edx],al
  421192:	xchg   edi,eax
  421193:	sbb    ecx,edi
  421195:	xor    ebp,esi
  421197:	jae    0x42112b
  421199:	mov    edi,0xbfb7d323
  42119e:	mov    ah,0x5f
  4211a0:	mov    cl,0x93
  4211a2:	lds    ebx,FWORD PTR [ebx+0x60edb1f4]
  4211a8:	add    eax,0x6cf98747
  4211ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211ae:	fmul   st,st(1)
  4211b1:	push   edx
  4211b2:	sahf   
  4211b3:	xlat   BYTE PTR ds:[ebx]
  4211b4:	jl     0x421227
  4211b6:	xor    al,0xab
  4211b8:	aaa    
  4211b9:	mul    BYTE PTR [ecx+esi*4-0x47]
  4211bd:	sbb    al,0x22
  4211bf:	mov    ecx,DWORD PTR [edx+0x7c0af1e4]
  4211c5:	xor    eax,0xbc07e514
  4211ca:	mov    eax,0x1fb885db
  4211cf:	xor    ebx,DWORD PTR [eax+eax*4+0xe34c3c]
  4211d6:	xchg   DWORD PTR [ecx+eax*2+0x0],eax
  4211da:	retf   0x5c2e
  4211dd:	stos   DWORD PTR es:[edi],eax
  4211de:	pop    eax
  4211df:	pop    eax
  4211e0:	(bad)  
  4211e2:	retf   0x8fbf
  4211e5:	out    0x5a,al
  4211e7:	sbb    eax,0x669196c8
  4211ec:	pop    edx
  4211ed:	xlat   BYTE PTR ds:[ebx]
  4211ee:	fnstcw WORD PTR [ecx-0x224481ab]
  4211f4:	inc    eax
  4211f5:	fwait
  4211f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211f7:	(bad)  
  4211f8:	jmp    0x8cf296b3
  4211fd:	stos   DWORD PTR es:[edi],eax
  4211fe:	cmc    
  4211ff:	adc    DWORD PTR [ebp-0x26feffaa],ebp
  421205:	adc    BYTE PTR [edx+0x4f],bl
  421208:	call   0xe741:0x3c67dbc
  42120f:	push   ebx
  421210:	ret    0x8d14
  421213:	push   0x51f2ec75
  421218:	mov    ds:0x29637f31,eax
  42121d:	je     0x421237
  42121f:	push   ds
  421220:	xlat   BYTE PTR ds:[ebx]
  421221:	cs dec ebp
  421223:	inc    ebx
  421224:	(bad)  
  421225:	sub    al,0x78
  421227:	mov    bl,0x1f
  421229:	fistp  QWORD PTR [esi+0x7132fe64]
  42122f:	jmp    DWORD PTR [ecx+0x448ff619]
  421235:	test   eax,0xb31230d3
  42123a:	adc    al,0x4
  42123c:	fcom   DWORD PTR [eax+0x569bfa6b]
  421242:	cwde   
  421243:	mov    eax,ds:0xf7d533c6
  421248:	mov    ebp,ebx
  42124a:	sub    BYTE PTR [edx-0x1692036d],al
  421250:	test   eax,0x37135ad0
  421255:	pop    edi
  421256:	(bad)  
  421257:	mov    ds:0x17afbe94,eax
  42125c:	aas    
  42125d:	or     DWORD PTR [eax+0x5f626539],0x4
  421264:	adc    esp,edx
  421266:	fstp   TBYTE PTR [edi]
  421268:	jae    0x4212c9
  42126a:	cs in  al,dx
  42126c:	mov    cl,0x62
  42126e:	dec    ecx
  42126f:	lds    ebx,FWORD PTR [esi-0x53a283dc]
  421275:	(bad)  
  421276:	fdivr  QWORD PTR [edi]
  421278:	adc    eax,0x3a5a02a5
  42127d:	dec    edi
  42127e:	and    al,0x9a
  421280:	mov    cs,WORD PTR [ebp-0x38]
  421283:	push   ds
  421284:	jno    0x421211
  421286:	mov    ds:0xb8f1495b,eax
  42128b:	sbb    ch,BYTE PTR [edi-0x7b]
  42128e:	push   esp
  42128f:	repnz loope 0x421287
  421292:	xchg   esi,eax
  421293:	jle    0x421243
  421295:	repnz shl BYTE PTR [esi],cl
  421298:	push   ds
  421299:	test   eax,0x80645370
  42129e:	inc    ecx
  42129f:	ds jmp 0xceeb:0x420c6b83
  4212a7:	push   0x5d
  4212a9:	inc    edi
  4212aa:	gs jae 0x42126c
  4212ad:	test   edi,esi
  4212af:	add    BYTE PTR [edx-0x5d12e2eb],bl
  4212b5:	jg     0x4212cb
  4212b7:	add    al,0x96
  4212b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212ba:	mov    edi,0x2e28a528
  4212bf:	test   DWORD PTR [edi-0x46],esp
  4212c2:	ret    0x1da8
  4212c5:	dec    ecx
  4212c6:	mov    esi,DWORD PTR gs:[eax]
  4212c9:	out    0x10,al
  4212cb:	pop    ds
  4212cc:	inc    ecx
  4212cd:	ror    BYTE PTR [eax+0x1049b8b9],0x64
  4212d4:	out    0x4d,eax
  4212d6:	(bad)  
  4212d7:	outs   dx,BYTE PTR ds:[esi]
  4212d8:	and    eax,0xa240c7e7
  4212dd:	icebp  
  4212de:	mov    edx,0x7b0d4a7c
  4212e3:	sar    BYTE PTR ds:0x8fbac573,cl
  4212e9:	mov    eax,ds:0xaa669221
  4212ee:	jmp    DWORD PTR [ebx-0x50]
  4212f2:	mov    dl,0x25
  4212f4:	sub    BYTE PTR [edx+edi*4+0x2f],al
  4212f8:	fnstsw WORD PTR [ebx+ebp*1+0x3f1b6386]
  4212ff:	shl    DWORD PTR [eax+0x7],1
  421302:	sti    
  421303:	sub    cl,BYTE PTR ds:0x222b251e
  421309:	push   cs
  42130a:	xchg   di,ax
  42130c:	add    BYTE PTR [ebp+0x5aed5352],dl
  421312:	jge    0x421321
  421314:	mov    ss:0xccdb7819,al
  42131a:	jae    0x4212f4
  42131c:	add    ecx,ebp
  42131e:	pusha  
  42131f:	mov    eax,0x79e7c12b
  421324:	mov    bl,0xcb
  421326:	out    dx,al
  421327:	aad    0xa7
  421329:	aam    0x77
  42132b:	dec    eax
  42132c:	and    al,0x30
  42132e:	mov    edx,0xa1bfb3f9
  421333:	shr    BYTE PTR [ecx],1
  421335:	jnp    0x421391
  421337:	inc    edx
  421338:	lea    edx,[ebx+0x20c0accd]
  42133e:	xor    dh,dh
  421340:	sub    esi,ebp
  421342:	lods   eax,DWORD PTR ds:[esi]
  421343:	inc    eax
  421344:	leave  
  421345:	add    esp,esi
  421347:	push   ebx
  421348:	mov    DWORD PTR [ebx],ebp
  42134a:	and    dh,ch
  42134c:	dec    ecx
  42134d:	push   es
  42134e:	jl     0x421340
  421350:	in     al,dx
  421351:	adc    eax,0xa25a4f1c
  421356:	fcomp  QWORD PTR [eax-0x6ff06c1a]
  42135c:	mov    ss,WORD PTR ds:0x4fb8ae39
  421362:	or     bl,ah
  421364:	aaa    
  421365:	out    dx,eax
  421366:	loop   0x4212f0
  421368:	jg     0x4213bc
  42136a:	int3   
  42136b:	lods   eax,DWORD PTR ds:[esi]
  42136c:	das    
  42136d:	mov    ?,WORD PTR [edx+0xe]
  421370:	xchg   ebp,eax
  421371:	ds mov bh,0x8d
  421374:	push   0xe43f3621
  421379:	bound  eax,QWORD PTR [esp+ebp*4+0xa]
  42137d:	das    
  42137e:	mov    ch,0x46
  421380:	daa    
  421381:	push   eax
  421382:	imul   esi,DWORD PTR [ebx+eax*4-0x55792f70],0x9547e208
  42138d:	pmuludq mm0,QWORD PTR [esi]
  421390:	sbb    bl,0xb7
  421393:	cmp    al,0x9e
  421395:	add    al,0x26
  421397:	xor    eax,ebp
  421399:	adc    BYTE PTR [edx+0x72263077],ch
  42139f:	jmp    0x421322
  4213a1:	inc    esp
  4213a2:	and    al,0x4c
  4213a4:	mov    ds:0xa70ea120,al
  4213a9:	pushf  
  4213aa:	push   edx
  4213ab:	mov    ecx,0xf501b2ec
  4213b0:	add    DWORD PTR [ebx-0x3a828ffe],ebp
  4213b6:	aam    0x99
  4213b8:	rcr    eax,cl
  4213ba:	add    edx,eax
  4213bc:	mov    edi,0xd189292f
  4213c1:	fild   DWORD PTR [edi-0x76]
  4213c4:	fidiv  DWORD PTR [edi+esi*4+0x1c]
  4213c8:	cmp    DWORD PTR [esi+0x51],ecx
  4213cb:	and    DWORD PTR [edx],eax
  4213cd:	hlt    
  4213ce:	adc    cl,BYTE PTR [eax]
  4213d0:	pop    ecx
  4213d1:	mov    ds:0x952e762c,eax
  4213d6:	das    
  4213d7:	jmp    edx
  4213d9:	sbb    BYTE PTR [eax+eax*1-0x38],bl
  4213dd:	mov    eax,ds:0x189e34f
  4213e2:	add    al,0x56
  4213e4:	data16 daa 
  4213e6:	push   ebx
  4213e7:	adc    esp,esi
  4213e9:	nop
  4213ea:	mov    ds:0x96c26958,al
  4213ef:	cmp    ch,0x97
  4213f2:	pop    ecx
  4213f3:	pusha  
  4213f4:	cmp    eax,0xfb06d966
  4213f9:	mov    ebx,DWORD PTR [edx]
  4213fb:	mov    dl,0xa0
  4213fd:	mov    al,0xab
  4213ff:	lahf   
  421400:	xchg   DWORD PTR [ebx-0x10],esi
  421403:	stos   DWORD PTR es:[edi],eax
  421404:	into   
  421405:	inc    ebx
  421406:	mov    edx,0xabdff3af
  42140b:	and    BYTE PTR ds:0x8a5f0dd,ch
  421411:	jo     0x4213b7
  421413:	inc    edi
  421414:	sar    DWORD PTR [eax],1
  421416:	mov    WORD PTR [ebx+0x21],ds
  421419:	sbb    ebx,DWORD PTR [edi+0x49]
  42141c:	xor    ecx,DWORD PTR [ecx]
  42141e:	dec    esi
  42141f:	push   edi
  421420:	sub    DWORD PTR [ebx-0x2ed90483],esi
  421426:	sar    dl,1
  421428:	bound  esp,QWORD PTR [edx+0x66]
  42142b:	push   0xf
  42142d:	add    BYTE PTR [ebx],bh
  42142f:	call   0xafe2:0xac72d8e2
  421436:	imul   edi,ecx,0x6a
  421439:	mov    ebx,0xf8d83f10
  42143e:	xor    DWORD PTR [ebp-0x49],0xa9be128d
  421445:	out    0x7,eax
  421447:	sub    BYTE PTR [ecx],cl
  421449:	loop   0x42143a
  42144b:	fisttp WORD PTR [ecx]
  42144d:	test   bh,bl
  42144f:	xchg   edx,eax
  421450:	mov    WORD PTR [ecx-0x77f8cf46],?
  421456:	es push eax
  421458:	rol    BYTE PTR [edx],0x37
  42145b:	sahf   
  42145c:	enter  0xe98e,0xdf
  421460:	pop    esi
  421461:	and    edi,DWORD PTR [ebp-0x177ee2ef]
  421467:	enter  0x9c3f,0xd
  42146b:	mov    ebx,0x80b867fc
  421470:	jmp    0x421416
  421472:	mov    edx,ecx
  421474:	inc    esi
  421475:	sub    eax,0x373d8a89
  42147a:	push   ebp
  42147b:	data16 data16 jmp 0x4214a3
  42147f:	xchg   BYTE PTR [ebx-0x5a],dh
  421482:	sahf   
  421483:	das    
  421484:	cmp    al,0x21
  421486:	pop    eax
  421487:	cwde   
  421488:	xchg   esp,eax
  421489:	fld    st(4)
  42148b:	shl    dh,cl
  42148d:	es add al,0xdd
  421490:	sbb    al,BYTE PTR [ebx+eax*1-0x3d]
  421494:	in     eax,dx
  421495:	aad    0x17
  421497:	lods   al,BYTE PTR ds:[esi]
  421498:	mov    ch,0xf2
  42149a:	fwait
  42149b:	mov    dh,0x2a
  42149d:	aas    
  42149e:	aaa    
  42149f:	xchg   edi,eax
  4214a0:	aaa    
  4214a1:	lock test al,0xc7
  4214a4:	dec    ecx
  4214a5:	pop    ebp
  4214a6:	mov    ebx,0x6afb29
  4214ab:	stos   DWORD PTR es:[edi],eax
  4214ac:	adc    BYTE PTR [edi+0x60e6d1ec],bh
  4214b2:	xchg   esp,eax
  4214b3:	cmp    BYTE PTR [eax-0x28993f54],cl
  4214b9:	ret    0xe7f1
  4214bc:	mul    edx
  4214be:	inc    edi
  4214bf:	in     al,dx
  4214c0:	mov    eax,0xab6dcf54
  4214c5:	js     0x42148f
  4214c7:	pop    ecx
  4214c8:	pop    edx
  4214c9:	sub    ebx,esp
  4214cb:	out    dx,eax
  4214cc:	fisttp QWORD PTR [ecx-0x6251e4e1]
  4214d2:	mov    al,0xc5
  4214d4:	aam    0xc6
  4214d6:	jbe    0x42145f
  4214d8:	dec    esi
  4214d9:	pop    ds
  4214da:	xchg   ebx,eax
  4214db:	repz adc al,0xcf
  4214de:	in     al,dx
  4214df:	aas    
  4214e0:	rcl    DWORD PTR [eax-0x7b],cl
  4214e3:	jp     0x421521
  4214e5:	dec    edx
  4214e6:	scas   eax,DWORD PTR es:[edi]
  4214e7:	(bad)  
  4214e8:	loop   0x421500
  4214ea:	push   es
  4214eb:	fsubr  st,st(7)
  4214ed:	or     ah,al
  4214ef:	xlat   BYTE PTR ds:[ebx]
  4214f0:	stc    
  4214f1:	ds in  al,0xd4
  4214f4:	push   ebx
  4214f5:	xchg   edi,ecx
  4214f7:	adc    ebp,DWORD PTR [edx]
  4214f9:	pop    ebx
  4214fa:	(bad)  
  4214fb:	mov    edi,0x430897ef
  421500:	add    eax,0x615a32a9
  421505:	jne    0x421493
  421507:	add    DWORD PTR [eax],eax
  421509:	clc    
  42150a:	add    al,0x0
  42150c:	add    BYTE PTR [esi+eax*8],ch
  42150f:	adc    DWORD PTR [esi],edx
  421511:	dec    esp
  421512:	mov    bl,0x3d
  421514:	mov    eax,0x1e3a75f0
  421519:	cmp    BYTE PTR [ebx+0x7d2c11dd],al
  42151f:	or     edi,DWORD PTR [ebx]
  421521:	pusha  
  421522:	inc    ecx
  421523:	cmp    eax,0x7bbf14bc
  421528:	or     ebx,esp
  42152a:	xor    BYTE PTR [ebx],dh
  42152c:	sub    DWORD PTR [esi+ecx*2-0x5d],edx
  421530:	outs   dx,BYTE PTR ds:[esi]
  421531:	scas   al,BYTE PTR es:[edi]
  421532:	stos   DWORD PTR es:[edi],eax
  421533:	dec    edx
  421534:	mov    cl,0xd4
  421536:	sub    al,0x47
  421538:	popf   
  421539:	mov    eax,ds:0xd3af0c1
  42153e:	ret    
  42153f:	xchg   edi,eax
  421540:	mov    edi,0xa9901692
  421545:	loopne 0x4215b0
  421547:	jle    0x4214cc
  421549:	mov    bh,0xb5
  42154b:	in     al,dx
  42154c:	xchg   dl,al
  42154e:	or     eax,0xf5b4d91c
  421553:	xchg   DWORD PTR [ecx],edx
  421555:	pop    esp
  421556:	adc    DWORD PTR [ebx+0x24],ebx
  421559:	icebp  
  42155a:	push   ss
  42155b:	and    dh,BYTE PTR [ecx]
  42155d:	ja     0x421508
  42155f:	in     eax,dx
  421560:	adc    edi,edi
  421562:	lea    edi,[ecx+0x14d44299]
  421568:	fstp   TBYTE PTR [ecx]
  42156b:	fcom   QWORD PTR [edi]
  42156d:	mov    ebx,0x172a480a
  421572:	test   DWORD PTR [eax+ebx*2],edi
  421575:	out    0xe0,al
  421577:	ret    0xa889
  42157a:	data16 aas 
  42157c:	and    bh,BYTE PTR [esi-0x4]
  42157f:	cli    
  421580:	call   DWORD PTR [ecx]
  421582:	nop
  421583:	outs   dx,BYTE PTR ds:[esi]
  421584:	dec    edi
  421585:	pop    ss
  421586:	stc    
  421587:	mov    cl,0xbb
  421589:	lock call 0xc5b5:0x95cc024d
  421591:	push   es
  421592:	fstp   DWORD PTR [esi+eax*4]
  421595:	aas    
  421596:	mov    edx,0x778ebfb
  42159b:	idiv   BYTE PTR [ebx]
  42159d:	(bad)  
  42159f:	push   edx
  4215a0:	fwait
  4215a1:	add    eax,edi
  4215a3:	push   ebx
  4215a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215a5:	in     eax,0xd9
  4215a7:	jp     0x421532
  4215a9:	sbb    al,0x4d
  4215ab:	pop    esi
  4215ac:	mov    cl,0xc2
  4215ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215af:	jbe    0x4215e4
  4215b1:	icebp  
  4215b2:	jmp    0xd2a2c50c
  4215b7:	test   al,0x9c
  4215b9:	cdq    
  4215ba:	cmc    
  4215bb:	cmp    al,cl
  4215bd:	xchg   ebp,eax
  4215be:	test   al,0xc1
  4215c0:	cmc    
  4215c1:	xchg   ecx,eax
  4215c2:	outs   dx,DWORD PTR ds:[esi]
  4215c3:	xchg   edx,eax
  4215c4:	lahf   
  4215c5:	mov    ecx,0x315249e7
  4215ca:	mov    edx,DWORD PTR [ecx-0x4c]
  4215cd:	popf   
  4215ce:	jo     0x4215e4
  4215d0:	(bad)  [ebx]
  4215d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215d3:	inc    esi
  4215d4:	cmp    DWORD PTR [edx+ebx*1+0x21],esi
  4215d8:	push   0x42147d7f
  4215dd:	xlat   BYTE PTR ds:[ebx]
  4215de:	test   DWORD PTR [ebp-0x41],0x37780692
  4215e5:	sahf   
  4215e6:	shl    BYTE PTR [ebx+0x4df449dd],cl
  4215ec:	cmp    al,0x11
  4215ee:	sar    BYTE PTR [ebx+0x460c01ce],0xf2
  4215f5:	aad    0x42
  4215f7:	lods   eax,DWORD PTR ds:[esi]
  4215f8:	adc    BYTE PTR [ebx+0xcfc0226],0x6c
  4215ff:	jmp    0x421624
  421601:	(bad)  
  421602:	loopne 0x4215a9
  421604:	lds    ebp,FWORD PTR [edi+0x4c]
  421607:	ror    cl,1
  421609:	out    dx,al
  42160a:	int    0x96
  42160c:	sbb    BYTE PTR [edi+0x2f],0x9d
  421610:	mov    al,BYTE PTR [eax-0x7bf3fbc4]
  421616:	push   0xabb0a922
  42161b:	add    esi,DWORD PTR [esp+ebx*4-0x2b8a7367]
  421622:	cmp    ch,cl
  421624:	les    esp,FWORD PTR [edi+ebx*4+0x5f2ab0a4]
  42162b:	les    esp,FWORD PTR [edx-0x5fdf2514]
  421631:	dec    eax
  421632:	jmp    0x6c4fe16a
  421637:	cmovo  esp,DWORD PTR [eax+0x2e145da7]
  42163e:	pop    eax
  42163f:	in     eax,0xf3
  421641:	pop    edi
  421642:	jae    0x4215f1
  421644:	mov    dh,dl
  421646:	jle    0x4215d1
  421648:	and    esi,DWORD PTR [esi]
  42164a:	jo     0x4215f4
  42164c:	mov    dl,0x9
  42164e:	xor    bh,BYTE PTR [eax+0x1]
  421651:	loop   0x4216a8
  421653:	pop    esp
  421654:	mov    ecx,0xb99f547
  421659:	gs or  esi,ebp
  42165c:	inc    esi
  42165d:	mov    ds:0x1b86df92,al
  421662:	jmp    0x421654
  421664:	sub    ebx,DWORD PTR ds:0x632727fb
  42166a:	(bad)  
  42166b:	sti    
  42166c:	inc    ebx
  42166d:	rcl    DWORD PTR cs:0xf8977e96,cl
  421674:	loopne 0x4216c6
  421676:	and    ecx,DWORD PTR [edi+0x60]
  421679:	iret   
  42167a:	add    eax,0xf4d78e6e
  42167f:	nop
  421680:	mov    ecx,0xa5f4519f
  421685:	es mov ah,0xf2
  421688:	jl     0x421650
  42168a:	push   ebx
  42168b:	mov    esi,0x7b6ca7ce
  421690:	dec    esp
  421691:	jo     0x421655
  421693:	nop
  421694:	jmp    0xb6820795
  421699:	jo     0x42170d
  42169b:	outs   dx,DWORD PTR ds:[esi]
  42169c:	clc    
  42169d:	cmc    
  42169e:	cmp    edx,eax
  4216a0:	ret    
  4216a1:	inc    edx
  4216a2:	pop    ss
  4216a3:	mov    ecx,0xdc7a2b4b
  4216a8:	sub    esp,DWORD PTR [ebp+0x3b]
  4216ab:	push   esi
  4216ac:	inc    edx
  4216ad:	imul   ecx,DWORD PTR [edi-0x43add9f3],0xfffffffd
  4216b4:	in     al,0x14
  4216b6:	out    0x3b,eax
  4216b8:	xlat   BYTE PTR ds:[ebx]
  4216b9:	rol    BYTE PTR [ebp+0x42ee0856],1
  4216bf:	or     DWORD PTR [edx],ebx
  4216c1:	mov    edi,0x3305483d
  4216c6:	fild   QWORD PTR ds:0xa41ee027
  4216cc:	inc    eax
  4216cd:	xor    DWORD PTR [edx+eiz*1-0x65a2918e],0x1bf88296
  4216d8:	in     eax,0xcd
  4216da:	dec    esp
  4216db:	or     edi,0xffffffe0
  4216de:	mov    ecx,0xb4eb2ac8
  4216e3:	cmc    
  4216e4:	nop
  4216e5:	sub    eax,0xef97726d
  4216ea:	ins    DWORD PTR es:[edi],dx
  4216eb:	add    eax,0x36bd3d5f
  4216f0:	push   esp
  4216f1:	add    edx,0xc09426c6
  4216f7:	dec    ecx
  4216f8:	outs   dx,BYTE PTR ds:[esi]
  4216f9:	call   0x822e5529
  4216fe:	das    
  4216ff:	call   0xf82662e2
  421704:	dec    edi
  421705:	jmp    0x421761
  421707:	mov    al,0x5e
  421709:	dec    edx
  42170a:	sbb    bl,0x6c
  42170d:	adc    al,0x3c
  42170f:	pushf  
  421710:	jmp    0xb03d3ad7
  421715:	repnz les eax,FWORD PTR [ebp-0x5e]
  421719:	push   0xffffffae
  42171b:	sub    cl,BYTE PTR [eax-0x7a]
  42171e:	sti    
  42171f:	dec    edi
  421720:	loopne 0x421764
  421722:	(bad)  
  421724:	aas    
  421725:	aad    0xbc
  421727:	jo     0x4216cd
  421729:	aaa    
  42172a:	retf   
  42172b:	out    dx,al
  42172c:	and    eax,0x7f1172c2
  421731:	loope  0x4216fa
  421733:	cmp    ch,al
  421735:	pop    ecx
  421736:	aam    0xe4
  421738:	adc    dh,0x8b
  42173b:	fsub   QWORD PTR [edi+0x3e06a972]
  421741:	(bad)  
  421742:	cmc    
  421743:	cmp    BYTE PTR [ebx],dl
  421745:	jmp    DWORD PTR [esi]
  421747:	ret    0xc4c5
  42174a:	jae    0x4217a7
  42174c:	push   edx
  42174d:	fs iret 
  42174f:	and    BYTE PTR [edi+0x29e27d3a],ah
  421755:	xchg   edi,eax
  421756:	or     DWORD PTR [ebx],eax
  421758:	mov    esp,esp
  42175a:	pop    esi
  42175b:	dec    edi
  42175c:	adc    edi,eax
  42175e:	das    
  42175f:	sbb    BYTE PTR [di+0x4ab7],dh
  421764:	dec    ebx
  421765:	or     edx,DWORD PTR [esi]
  421767:	fldenv [ecx]
  421769:	jle    0x42174e
  42176b:	dec    ebx
  42176c:	and    cl,BYTE PTR [ebx*1-0x4951325f]
  421773:	hlt    
  421774:	and    edi,eax
  421776:	(bad)  
  421777:	ret    0xb533
  42177a:	add    cl,ch
  42177c:	sbb    DWORD PTR [edx+0x5d8e9091],edi
  421782:	mov    esi,0x5ca95767
  421787:	call   0x4e667be0
  42178c:	adc    ebx,esi
  42178e:	je     0x421760
  421790:	mov    cl,BYTE PTR fs:[esi-0x5141eac1]
  421797:	stos   BYTE PTR es:[edi],al
  421798:	enter  0xc59c,0x87
  42179c:	bound  ebp,QWORD PTR [edi+0x5]
  42179f:	jmp    0x1b7:0x11b0caa1
  4217a6:	lahf   
  4217a7:	xor    DWORD PTR [edx+edi*8-0x7a64352c],esi
  4217ae:	and    edx,DWORD PTR [esi]
  4217b0:	add    BYTE PTR [edi-0x3b153906],bl
  4217b6:	push   esi
  4217b7:	add    DWORD PTR [esi+0x65],0x37
  4217bb:	enter  0x9452,0x10
  4217bf:	and    eax,0x264c6a02
  4217c4:	pushf  
  4217c5:	fldcw  WORD PTR [eax+0xf]
  4217c8:	lea    ecx,[ebx]
  4217ca:	js     0x4217e5
  4217cc:	lods   al,BYTE PTR ds:[esi]
  4217cd:	mov    esp,0xb6d818fc
  4217d2:	sub    al,0xbb
  4217d4:	lods   eax,DWORD PTR ds:[esi]
  4217d5:	inc    ebx
  4217d6:	daa    
  4217d7:	inc    ecx
  4217d8:	cwde   
  4217d9:	push   es
  4217da:	adc    esp,DWORD PTR es:[eax-0x2729dccf]
  4217e1:	dec    esi
  4217e2:	dec    esp
  4217e3:	sub    al,0x91
  4217e5:	in     eax,0xe2
  4217e7:	sti    
  4217e8:	lea    edx,[edx+ebx*4+0x2b]
  4217ec:	xchg   ebx,eax
  4217ed:	or     esp,ebx
  4217ef:	inc    ebx
  4217f0:	or     BYTE PTR [esi],ah
  4217f2:	cmp    al,0x76
  4217f4:	jecxz  0x421860
  4217f6:	cmp    DWORD PTR [edi+eax*2-0x37],ecx
  4217fa:	(bad)  
  4217fb:	test   BYTE PTR [ecx+0x5df64eaa],0x86
  421802:	sub    ah,BYTE PTR [ebp-0x5b]
  421805:	pusha  
  421806:	fisttp DWORD PTR [eax-0x7e]
  421809:	inc    ecx
  42180a:	push   0xa093f8cf
  42180f:	dec    ebx
  421810:	stos   BYTE PTR es:[edi],al
  421811:	ret    
  421812:	and    al,0xf0
  421814:	lods   al,BYTE PTR ds:[esi]
  421815:	pop    esp
  421816:	sar    BYTE PTR [esi-0x21],0xe3
  42181a:	mov    bl,0x69
  42181c:	cmp    DWORD PTR [edi+0x3132e122],ebp
  421822:	jnp    0x421868
  421824:	sub    DWORD PTR [ecx+0x5c],esp
  421827:	xchg   esp,eax
  421828:	cmc    
  421829:	popf   
  42182a:	ds mov ah,0xd8
  42182d:	cmc    
  42182e:	sbb    bl,BYTE PTR [ebp+0x19a2b4a6]
  421834:	inc    ebx
  421835:	(bad)  
  421837:	mov    esp,0xfcc12411
  42183c:	sbb    BYTE PTR [edx],al
  42183e:	inc    eax
  42183f:	outs   dx,BYTE PTR ds:[esi]
  421840:	fcom   DWORD PTR [ebp-0x4f]
  421843:	or     al,0x2e
  421845:	aaa    
  421846:	mov    ?,WORD PTR [edx]
  421848:	(bad)  
  421849:	or     BYTE PTR [esi],bl
  42184b:	sbb    cl,BYTE PTR [edx+0x51]
  42184e:	test   BYTE PTR [ebx-0x1c],dh
  421851:	xor    BYTE PTR [eax],bl
  421853:	adc    BYTE PTR [edx+0x39],cl
  421856:	dec    edi
  421857:	mov    eax,ebx
  421859:	fisttp WORD PTR [ebx]
  42185b:	inc    esp
  42185c:	adc    ebx,ebx
  42185e:	rcr    BYTE PTR [eax],1
  421860:	adc    DWORD PTR [ebx+ebp*8+0x69],esi
  421864:	xchg   DWORD PTR [ecx],ebp
  421866:	test   al,0x24
  421868:	lds    edi,FWORD PTR [ebp-0x20]
  42186b:	inc    edi
  42186c:	in     al,0x87
  42186e:	jne    0x4217f4
  421870:	into   
  421871:	sub    ebp,DWORD PTR ds:0xd06651d0
  421877:	jns    0x42186e
  421879:	xchg   ebp,eax
  42187a:	stc    
  42187b:	stos   BYTE PTR es:[edi],al
  42187c:	or     al,0x3
  42187e:	rcr    ebp,cl
  421880:	outs   dx,BYTE PTR ds:[esi]
  421881:	les    esp,FWORD PTR [eax-0x4eecde7c]
  421887:	aas    
  421888:	jecxz  0x4218b3
  42188a:	mov    ah,0x8b
  42188c:	push   0xfe915b5e
  421891:	mov    ds:0xba9f9a3f,al
  421896:	jne    0x421875
  421898:	jbe    0x4218a8
  42189a:	push   esp
  42189b:	dec    esi
  42189c:	std    
  42189d:	je     0x421907
  42189f:	add    edx,edi
  4218a1:	add    esp,edx
  4218a3:	sar    BYTE PTR [esi+0x2c],cl
  4218a6:	adc    DWORD PTR [ecx],esi
  4218a8:	add    esi,eax
  4218aa:	jb     0x42183f
  4218ac:	imul   ebx,ebp,0x61
  4218af:	sbb    bh,bl
  4218b1:	stc    
  4218b2:	lds    eax,FWORD PTR [edx]
  4218b4:	fsub   QWORD PTR [edx+0x4c]
  4218b7:	dec    esp
  4218b8:	fwait
  4218b9:	gs pop esi
  4218bb:	test   eax,0xa0a2b2f0
  4218c0:	test   BYTE PTR [ecx-0x50482519],bl
  4218c6:	aad    0x27
  4218c8:	or     al,0x9e
  4218ca:	and    eax,0xb2d51582
  4218cf:	(bad)  
  4218d0:	sbb    dl,BYTE PTR [ebx+ebp*4-0x72]
  4218d4:	adc    al,0xcc
  4218d6:	imul   ecx,edi,0xffffffb4
  4218d9:	xor    eax,0x893132ce
  4218de:	std    
  4218df:	push   0xffffffe6
  4218e1:	or     bh,BYTE PTR [edx+0x24]
  4218e4:	mov    esi,0x13069ef5
  4218e9:	mov    dl,0x43
  4218eb:	mov    edi,0xe6da159d
  4218f0:	adc    eax,0xf4221083
  4218f5:	(bad)  
  4218f7:	ja     0x42191c
  4218f9:	icebp  
  4218fa:	call   0x1f1a:0xcc679cfa
  421901:	shl    ebx,cl
  421903:	adc    ecx,ecx
  421905:	pop    es
  421906:	mov    bl,0x8f
  421908:	or     BYTE PTR [esi+0x7fc55188],0x32
  42190f:	pop    eax
  421910:	inc    ecx
  421911:	mov    ah,0xa7
  421913:	jg     0x421972
  421915:	sbb    al,0xff
  421917:	ins    DWORD PTR es:[edi],dx
  421918:	cwde   
  421919:	dec    eax
  42191a:	add    ah,cl
  42191c:	dec    edi
  42191d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42191e:	xor    al,0x8b
  421920:	adc    bl,BYTE PTR [eax+edx*4]
  421923:	xchg   edi,eax
  421924:	test   ebx,0x9e593c8
  42192a:	popa   
  42192b:	jns    0x42195b
  42192d:	loopne 0x421973
  42192f:	sti    
  421930:	in     al,0x19
  421932:	ret    
  421933:	push   cs
  421934:	lea    eax,[edx+0x32]
  421937:	in     eax,dx
  421938:	push   edi
  421939:	inc    edi
  42193a:	popf   
  42193b:	and    eax,DWORD PTR [edi]
  42193d:	mov    esp,0x3379cac3
  421942:	push   esi
  421943:	ds pop esi
  421946:	ret    0x62e8
  421949:	and    eax,0xe5e4abea
  42194e:	mov    eax,0x6c0492cf
  421953:	jnp    0x4218d6
  421955:	add    ah,BYTE PTR [eax+0x1f]
  421958:	mov    ds:0x3b9b4385,al
  42195d:	pop    ecx
  42195e:	mov    cs,WORD PTR [eax+0x13]
  421961:	fsub   DWORD PTR [ecx]
  421963:	jne    0x42196e
  421965:	pop    ebx
  421966:	dec    esp
  421967:	int    0xa1
  421969:	mov    ds:0x90b54317,eax
  42196e:	xchg   BYTE PTR ds:0xee3eeeac,bl
  421974:	inc    ebp
  421975:	fimul  DWORD PTR [ebx]
  421977:	sub    ecx,DWORD PTR [edi+0x727c79ed]
  42197d:	inc    esi
  42197e:	adc    edi,edi
  421980:	mov    BYTE PTR [esp+eax*2],al
  421983:	fnsave [ecx+esi*2+0x655a3683]
  42198a:	dec    esi
  42198b:	or     eax,0x2d771da6
  421990:	mov    dh,0xfa
  421992:	lods   al,BYTE PTR ds:[esi]
  421993:	xor    ebx,DWORD PTR [edi]
  421995:	sahf   
  421996:	sbb    dh,cl
  421998:	out    0x65,eax
  42199a:	sub    DWORD PTR [edx-0x58],eax
  42199d:	outs   dx,BYTE PTR ds:[esi]
  42199e:	jp     0x4219be
  4219a0:	mov    ecx,0xfef4b44c
  4219a5:	fdivr  st,st(4)
  4219a7:	xlat   BYTE PTR ds:[ebx]
  4219a8:	pop    ds
  4219a9:	pop    edx
  4219aa:	mov    ebp,ebx
  4219ac:	adc    ecx,ebx
  4219ae:	icebp  
  4219af:	jo     0x421a2b
  4219b1:	fadd   QWORD PTR [esi-0x275aacee]
  4219b7:	loopne 0x421981
  4219b9:	xor    BYTE PTR [edx+edx*4-0x41],al
  4219bd:	shr    DWORD PTR [eax],0xa
  4219c0:	xor    BYTE PTR [edx+0x46cfce49],al
  4219c6:	mov    ah,0xf1
  4219c9:	sti    
  4219ca:	int    0x97
  4219cc:	push   ebp
  4219cd:	inc    eax
  4219ce:	popf   
  4219cf:	mov    ebx,0xd65ee5ac
  4219d4:	pop    edx
  4219d5:	aam    0x17
  4219d7:	jg     0x421a00
  4219d9:	sbb    bh,bl
  4219db:	ret    0x118c
  4219de:	mov    ebx,0xc68c9065
  4219e3:	rol    BYTE PTR [edx+0x6511aff3],1
  4219e9:	loopne 0x421a48
  4219eb:	out    0xb4,eax
  4219ed:	dec    edi
  4219ee:	push   0xffffffc0
  4219f0:	stc    
  4219f1:	adc    eax,0x25efbb9e
  4219f6:	lods   eax,DWORD PTR ds:[esi]
  4219f7:	or     esi,edx
  4219f9:	mov    esp,0x70d51e25
  4219fe:	jmp    0x421a59
  421a00:	outs   dx,BYTE PTR ds:[esi]
  421a01:	popa   
  421a02:	aas    
  421a03:	pop    esp
  421a04:	sbb    eax,0x26dc24fb
  421a09:	(bad)  
  421a0b:	sti    
  421a0c:	std    
  421a0d:	ror    DWORD PTR [ebp+0x1d],0x3b
  421a11:	outs   dx,DWORD PTR cs:[esi]
  421a13:	sub    BYTE PTR [edi+0x6d],0x91
  421a17:	add    DWORD PTR [eax],eax
  421a19:	clc    
  421a1a:	add    al,0x0
  421a1c:	add    BYTE PTR [esp+edi*2+0x2ddebd3f],bl
  421a23:	retf   
  421a24:	js     0x421a6d
  421a26:	pop    eax
  421a27:	pushf  
  421a28:	mov    edi,0xfcb286ca
  421a2d:	sub    DWORD PTR [edi],eax
  421a2f:	fnsave [edi]
  421a31:	xchg   esp,eax
  421a33:	mov    dl,0xd4
  421a35:	jle    0x421a10
  421a37:	cmp    cl,BYTE PTR [edx+ecx*1]
  421a3a:	dec    esp
  421a3b:	mov    DWORD PTR [ecx-0x5f],esi
  421a3e:	stc    
  421a3f:	push   0x308a3f6c
  421a44:	in     al,0xb6
  421a46:	dec    esi
  421a47:	not    DWORD PTR [ecx+0x6d]
  421a4a:	lea    ebx,[ebp-0x643864f9]
  421a50:	cwde   
  421a51:	dec    edi
  421a52:	hlt    
  421a53:	add    esi,DWORD PTR [ecx-0x221f2562]
  421a59:	xchg   ebp,eax
  421a5a:	inc    ebx
  421a5b:	daa    
  421a5c:	imul   ebx,DWORD PTR [ebx+0x69fc6f9e],0x635bb78a
  421a66:	stc    
  421a67:	mov    eax,ds:0x2afde9f4
  421a6c:	je     0x421a7e
  421a6e:	not    DWORD PTR [esi+ebx*2-0x50]
  421a72:	pop    esp
  421a73:	pushf  
  421a74:	retf   
  421a75:	clc    
  421a76:	outs   dx,DWORD PTR ds:[esi]
  421a77:	dec    ebp
  421a78:	sub    edx,DWORD PTR [ecx+0x2d]
  421a7b:	fwait
  421a7c:	push   ebx
  421a7d:	sahf   
  421a7e:	mov    WORD PTR [esi],?
  421a80:	and    al,0xe9
  421a82:	std    
  421a83:	and    eax,0xb8d22f91
  421a88:	outs   dx,BYTE PTR gs:[esi]
  421a8a:	push   0x12
  421a8c:	out    0xaf,eax
  421a8e:	add    BYTE PTR [edx+0x50637bac],ch
  421a94:	or     BYTE PTR [ebx+esi*4],dh
  421a97:	pop    ebp
  421a98:	int3   
  421a99:	dec    esi
  421a9a:	adc    al,0x19
  421a9c:	repnz mov ah,0x2b
  421a9f:	or     eax,0x5f0466d0
  421aa4:	and    BYTE PTR [edx-0x80],ah
  421aa7:	or     eax,0xf4dfbdff
  421aac:	fnstcw WORD PTR [ebp-0x5e]
  421aaf:	jbe    0x421a7f
  421ab1:	ret    0xfcee
  421ab4:	mov    bh,0x46
  421ab6:	xor    eax,edx
  421ab8:	mov    edx,0x2f0dc539
  421abd:	jl     0x421a65
  421abf:	cmp    DWORD PTR [ebp-0x569b11eb],0x77f22602
  421ac9:	mov    al,0xfa
  421acb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421acc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421acd:	xor    esi,DWORD PTR [esi+0x27]
  421ad0:	sti    
  421ad1:	cli    
  421ad2:	pop    ebx
  421ad3:	xchg   BYTE PTR [edi-0x2d],ah
  421ad6:	loopne 0x421b0e
  421ad8:	lods   al,BYTE PTR ds:[esi]
  421ad9:	push   edx
  421ada:	cmp    al,0xfc
  421adc:	jnp    0x421a5e
  421ade:	adc    bl,BYTE PTR [edi+0x208deadb]
  421ae4:	int3   
  421ae5:	xchg   ebp,eax
  421ae6:	jbe    0x421b66
  421ae8:	inc    ecx
  421ae9:	and    DWORD PTR [eax+edi*1+0x71],0xffffffa1
  421aee:	inc    ecx
  421aef:	dec    edx
  421af0:	mov    BYTE PTR ds:0xad635a5c,ch
  421af6:	int    0x65
  421af8:	xlat   BYTE PTR ds:[ebx]
  421af9:	jge    0x421b4a
  421afb:	sub    eax,0xf15c4568
  421b00:	shl    DWORD PTR [ebx+0x76],1
  421b03:	jp     0x421a94
  421b05:	std    
  421b06:	mov    dl,0xd4
  421b08:	fidiv  WORD PTR [edi+0x7]
  421b0b:	sbb    DWORD PTR [edx+0xc33b5cb],0x7f
  421b12:	aas    
  421b13:	in     eax,0x78
  421b15:	and    DWORD PTR [eax-0x77ce7b74],esi
  421b1b:	xchg   edi,eax
  421b1c:	adc    al,0x5a
  421b1e:	jns    0x421b75
  421b20:	mul    DWORD PTR [esi-0x77ab8df5]
  421b26:	pop    ds
  421b27:	sahf   
  421b28:	popa   
  421b29:	in     al,dx
  421b2a:	push   ds
  421b2b:	sbb    al,0xbf
  421b2d:	cmp    ebp,ecx
  421b2f:	lea    edx,[ebx+0x51]
  421b32:	and    eax,0xc87f17d2
  421b37:	xor    dl,BYTE PTR [esp+esi*4+0x3c3a657c]
  421b3e:	and    DWORD PTR [eax-0x1f],edx
  421b41:	or     al,0xf6
  421b43:	cmp    DWORD PTR [ecx+0x2e1c2f9c],eax
  421b49:	inc    ecx
  421b4a:	xchg   edi,eax
  421b4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b4c:	or     DWORD PTR [ecx-0x6f],esi
  421b4f:	out    dx,eax
  421b50:	add    eax,0xdfc8fed7
  421b55:	push   ss
  421b56:	ins    DWORD PTR es:[edi],dx
  421b57:	popf   
  421b58:	inc    edx
  421b59:	fstp   QWORD PTR [ebx]
  421b5b:	(bad)  
  421b5d:	int    0xd9
  421b5f:	jnp    0x421b23
  421b61:	cmp    ebx,esp
  421b63:	ror    DWORD PTR [edx-0x71],0x48
  421b67:	shr    DWORD PTR [esi-0x16],1
  421b6a:	add    dl,BYTE PTR [esi+0x2ae6e365]
  421b70:	pop    esp
  421b71:	or     esp,ebp
  421b73:	les    esp,FWORD PTR [edi]
  421b75:	pop    ebx
  421b76:	pop    esp
  421b77:	adc    BYTE PTR [ecx+0x161bb282],bl
  421b7d:	fnsave ds:[ebp-0x6d52a8ec]
  421b84:	mov    eax,ds:0xc8a34b7f
  421b89:	stc    
  421b8a:	(bad)  
  421b8b:	adc    cl,BYTE PTR [ecx+eax*4]
  421b8e:	bound  edx,QWORD PTR [ebp-0x48]
  421b91:	icebp  
  421b92:	pop    esp
  421b93:	lahf   
  421b94:	fisub  WORD PTR [edi-0x73]
  421b97:	aas    
  421b98:	stos   BYTE PTR es:[edi],al
  421b99:	lea    edx,[edi]
  421b9b:	and    cl,BYTE PTR [ecx+edi*2]
  421b9e:	sub    DWORD PTR [ebx],edx
  421ba0:	cmp    BYTE PTR [esi+0x63],0x82
  421ba4:	std    
  421ba5:	test   al,0x2d
  421ba7:	sbb    esi,DWORD PTR [ecx+esi*4-0x4e]
  421bab:	cmp    eax,0xbf33cb33
  421bb0:	ja     0x421c01
  421bb2:	fsubr  DWORD PTR [eax-0x6]
  421bb5:	mov    al,0x8b
  421bb7:	adc    esp,ebx
  421bb9:	and    eax,0x38523b25
  421bbe:	test   BYTE PTR [edi+0x2f],0x30
  421bc2:	faddp  st(7),st
  421bc4:	(bad)  
  421bc6:	test   DWORD PTR [ebp+0x34],ecx
  421bc9:	xor    al,0x97
  421bcb:	clc    
  421bcc:	jmp    0xafc6586e
  421bd1:	comiss xmm7,DWORD PTR [ecx-0x21]
  421bd5:	rol    DWORD PTR [ebx-0x766a92bd],1
  421bdb:	jbe    0x421c52
  421bdd:	and    DWORD PTR [ecx],0x13
  421be0:	outs   dx,DWORD PTR ds:[esi]
  421be1:	lods   al,BYTE PTR ds:[esi]
  421be2:	mov    ah,0xb0
  421be4:	xchg   edi,eax
  421be5:	and    eax,0x29
  421be8:	or     dl,dl
  421bea:	xchg   DWORD PTR [edi-0x71],esi
  421bed:	push   0xe5731d38
  421bf2:	sahf   
  421bf3:	add    eax,0xb043374e
  421bf8:	push   ds
  421bf9:	pop    edi
  421bfa:	rol    esi,1
  421bfc:	pop    ebp
  421bfd:	outs   dx,BYTE PTR ds:[esi]
  421bfe:	aam    0xab
  421c00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c01:	sbb    al,0x72
  421c03:	push   esi
  421c04:	inc    ebx
  421c05:	xchg   esp,eax
  421c06:	fld    DWORD PTR [esi-0x787e5a7]
  421c0c:	test   DWORD PTR [eax+0x599577b],0xeca85da0
  421c16:	lahf   
  421c17:	inc    ebp
  421c18:	xor    dh,BYTE PTR [eax-0x6f1e0b3]
  421c1e:	iret   
  421c1f:	jmp    0x805d:0x1e0ca9f4
  421c26:	outs   dx,DWORD PTR ds:[esi]
  421c27:	mov    WORD PTR [esi+0x44f6a2c],cs
  421c2d:	popf   
  421c2e:	neg    BYTE PTR [esp+edx*2-0x68]
  421c32:	daa    
  421c33:	fmul   QWORD PTR [ebx]
  421c35:	pushf  
  421c36:	mov    ch,BYTE PTR [edx-0x65]
  421c39:	nop
  421c3a:	fdivrp st(5),st
  421c3c:	lods   eax,DWORD PTR ds:[esi]
  421c3d:	xchg   ebp,eax
  421c3e:	dec    ebx
  421c3f:	pop    eax
  421c40:	mov    WORD PTR [esi],ds
  421c42:	and    dl,ah
  421c44:	adc    DWORD PTR [esp+ecx*8+0x77],esp
  421c48:	int    0xd6
  421c4a:	ins    BYTE PTR es:[edi],dx
  421c4b:	mov    esp,0xd0c50bd8
  421c50:	sub    eax,0x1f1a1fd3
  421c55:	jbe    0x421bfa
  421c57:	mov    ch,0xa9
  421c59:	cmp    BYTE PTR [edx+0x59d35def],cl
  421c5f:	les    ecx,FWORD PTR [edx]
  421c61:	sub    eax,0xa42d8730
  421c66:	ins    DWORD PTR es:[edi],dx
  421c67:	xor    DWORD PTR [edi-0x45b208f8],esp
  421c6d:	sbb    dh,ch
  421c6f:	int    0xe4
  421c71:	mov    edi,0xa3726d48
  421c76:	xor    DWORD PTR ds:0xb259d5cd,edx
  421c7c:	ds je  0x421cf6
  421c7f:	(bad)  
  421c80:	in     ax,dx
  421c82:	shl    DWORD PTR [ebx-0x4],0xd3
  421c86:	sbb    eax,0x7520cc3e
  421c8b:	xchg   ebx,eax
  421c8c:	adc    eax,0x497f6cea
  421c91:	out    0x2,al
  421c93:	mov    edi,0xfe8399f3
  421c98:	(bad)  
  421c99:	jo     0x421c67
  421c9b:	call   FWORD PTR [esi]
  421c9d:	cmp    dh,bh
  421c9f:	aam    0x2b
  421ca1:	aas    
  421ca2:	dec    edx
  421ca3:	clc    
  421ca4:	add    eax,0xd6655c48
  421ca9:	inc    ebp
  421caa:	push   ds
  421cab:	int    0x6a
  421cad:	pushf  
  421cae:	imul   ecx,DWORD PTR es:[ebp*4+0xf13d16b],0x6a
  421cb7:	pop    edi
  421cb8:	lea    esp,[ebx-0x3d]
  421cbb:	fs mov bl,0x1f
  421cbe:	xchg   ebp,eax
  421cbf:	adc    al,0xf8
  421cc1:	ss test al,0x57
  421cc4:	and    edx,eax
  421cc6:	mov    esi,0x3c4740fb
  421ccb:	std    
  421ccc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ccd:	xchg   esp,eax
  421cce:	in     eax,0xd6
  421cd0:	dec    esi
  421cd1:	mov    dh,0x18
  421cd3:	sar    BYTE PTR [esi+0x7cf82cd0],0x76
  421cda:	imul   ebp,DWORD PTR [edi],0xffffffef
  421cdd:	mov    gs,edx
  421cdf:	popa   
  421ce0:	(bad)  
  421ce1:	icebp  
  421ce2:	and    eax,0xb43ebe23
  421ce7:	xchg   ebp,eax
  421ce8:	cs test eax,0xd8871f4c
  421cee:	fcomp  st(4)
  421cf0:	push   esp
  421cf1:	lods   al,BYTE PTR ds:[esi]
  421cf2:	sub    cl,dl
  421cf4:	sub    esi,esi
  421cf6:	jo     0x421d70
  421cf8:	and    al,0xdf
  421cfa:	es dec edi
  421cfc:	push   ss
  421cfd:	aaa    
  421cfe:	(bad)  
  421cff:	push   edi
  421d00:	lods   al,BYTE PTR ds:[esi]
  421d01:	test   ebx,0xb616a508
  421d07:	jo     0x421d77
  421d09:	outs   dx,DWORD PTR ds:[esi]
  421d0a:	add    eax,0x66256823
  421d0f:	pop    ecx
  421d10:	dec    ebp
  421d11:	dec    ebx
  421d12:	or     ah,BYTE PTR [edx]
  421d14:	mov    ds:0x26f04d5a,al
  421d19:	fsubrp st(4),st
  421d1b:	sub    esp,DWORD PTR [ebp-0x637c1ee5]
  421d21:	xor    DWORD PTR [ebx-0x7f],ecx
  421d24:	test   eax,0x9c1e7fcf
  421d29:	cmp    ch,BYTE PTR [ecx]
  421d2b:	lock cli 
  421d2d:	jle    0x421d3c
  421d2f:	test   esi,edi
  421d31:	inc    eax
  421d32:	sub    BYTE PTR [bx+di+0x28],0x9
  421d37:	inc    esp
  421d38:	add    cl,BYTE PTR [ebx+0x7c]
  421d3b:	mov    ecx,0x769b6a0
  421d40:	repz lock or bl,BYTE PTR [edi+0x3d]
  421d45:	ins    BYTE PTR es:[edi],dx
  421d46:	mov    DWORD PTR [edx+0x64f0b156],ebp
  421d4c:	leave  
  421d4d:	mov    esp,0x7a6671f2
  421d52:	fldcw  WORD PTR [edx-0x3e]
  421d55:	aam    0x0
  421d57:	ficomp DWORD PTR [esp+ebp*4-0x67a61f59]
  421d5e:	inc    edx
  421d5f:	ja     0x421d01
  421d61:	test   eax,0xa250f870
  421d66:	inc    ebx
  421d67:	je     0x421d52
  421d69:	hlt    
  421d6a:	mov    ecx,0x2f1d17db
  421d6f:	pop    ecx
  421d70:	sbb    BYTE PTR [edi+0x50d8c050],0x43
  421d77:	mov    cs,WORD PTR [ebx+0x25d6b1d4]
  421d7d:	in     eax,0x68
  421d7f:	shl    DWORD PTR ds:0x3f90db3e,0x56
  421d86:	pop    es
  421d87:	adc    eax,0xfbe28c3b
  421d8c:	int3   
  421d8d:	push   ebp
  421d8e:	scas   al,BYTE PTR es:[edi]
  421d8f:	ins    BYTE PTR es:[edi],dx
  421d90:	call   0xa80b:0xb0b88ad2
  421d97:	clc    
  421d98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d99:	loop   0x421dd5
  421d9b:	les    esp,FWORD PTR cs:[edx+0x5d]
  421d9f:	pop    edx
  421da0:	rcr    ah,0x66
  421da3:	mov    ebx,0xcf7c3661
  421da8:	(bad)  
  421daa:	rol    DWORD PTR [esi-0x5f6703a3],cl
  421db0:	pop    edi
  421db1:	cmp    eax,0x6715a566
  421db6:	into   
  421db7:	or     ebx,edi
  421db9:	pop    esi
  421dba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421dbb:	icebp  
  421dbc:	xchg   ecx,eax
  421dbd:	scas   eax,DWORD PTR es:[edi]
  421dbe:	into   
  421dbf:	frstor ds:0x1fb36e2c
  421dc5:	ret    
  421dc6:	mov    edx,ss
  421dc8:	outs   dx,DWORD PTR ds:[esi]
  421dc9:	mov    ds:0x967c3fa1,eax
  421dce:	stc    
  421dcf:	mov    al,ds:0x3aaa8c59
  421dd4:	mov    al,BYTE PTR [edx+0x36cb9704]
  421dda:	inc    edx
  421ddb:	cmp    BYTE PTR [edx-0x7d146b18],bl
  421de1:	stos   BYTE PTR es:[edi],al
  421de2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421de3:	mov    edx,0xb0e43d36
  421de8:	cmp    ecx,ebp
  421dea:	pop    ebx
  421deb:	outs   dx,BYTE PTR ds:[esi]
  421dec:	push   edx
  421ded:	mov    eax,0x8d1e1278
  421df2:	sub    ah,BYTE PTR [ebx]
  421df4:	outs   dx,DWORD PTR ds:[esi]
  421df5:	cmp    dl,al
  421df7:	or     edx,DWORD PTR [edi-0x2e]
  421dfa:	sti    
  421dfb:	call   0xafadff49
  421e00:	lods   al,BYTE PTR ds:[esi]
  421e01:	jno    0x421d84
  421e03:	pop    ebx
  421e04:	xor    bh,BYTE PTR [ecx+esi*1+0xd]
  421e08:	push   0xffffffe3
  421e0a:	cmp    bh,BYTE PTR [edx]
  421e0c:	mov    ebx,0xe11d4659
  421e11:	es retf 
  421e13:	add    ecx,esp
  421e15:	dec    eax
  421e16:	jl     0x421e3c
  421e18:	icebp  
  421e19:	(bad)  
  421e1a:	lahf   
  421e1b:	test   eax,0x244520a5
  421e20:	mov    dl,0xfa
  421e22:	push   es
  421e23:	mov    ch,0x8e
  421e25:	mov    ah,0x18
  421e27:	add    ebx,DWORD PTR [edi+0x1b94b4b3]
  421e2d:	mov    eax,0x7ce5aafa
  421e32:	push   0x22
  421e34:	fdivr  QWORD PTR ds:0x7e94a239
  421e3a:	xor    al,0x4
  421e3c:	in     al,0x88
  421e3e:	push   esp
  421e3f:	cmp    edi,esp
  421e41:	xchg   edx,eax
  421e42:	mov    esi,0xdcf071fa
  421e47:	bound  esi,QWORD PTR [ebx-0x28]
  421e4a:	dec    ebx
  421e4b:	jl     0x421e6b
  421e4d:	dec    ecx
  421e4e:	jnp    0x421e3d
  421e50:	sub    esi,eax
  421e52:	in     al,0x31
  421e54:	sbb    esi,0xc36d0a0
  421e5a:	fild   QWORD PTR [ecx+edi*2+0x29]
  421e5e:	pusha  
  421e5f:	test   al,0x21
  421e61:	adc    al,0xe1
  421e63:	popa   
  421e64:	jecxz  0x421ea7
  421e66:	retf   0xcb89
  421e69:	pop    ds
  421e6a:	jle    0x421e32
  421e6c:	pop    es
  421e6d:	jp     0x421ed4
  421e6f:	sbb    al,0x10
  421e71:	sub    ebx,DWORD PTR [esi-0x6d]
  421e74:	push   edi
  421e75:	out    0xa6,eax
  421e77:	hlt    
  421e78:	call   0xb42f3fe0
  421e7d:	pop    esp
  421e7e:	pop    ds
  421e7f:	fs xchg ebp,eax
  421e81:	mov    ah,0x98
  421e83:	ss mov cl,0x6e
  421e86:	imul   ebx,DWORD PTR [edi-0xac7809b],0x13
  421e8d:	push   ebp
  421e8e:	test   bh,ah
  421e90:	sbb    al,0xec
  421e92:	inc    ebp
  421e93:	mov    edi,0xa68334ce
  421e98:	sub    eax,0x1081bb3a
  421e9d:	inc    esp
  421e9e:	das    
  421e9f:	mov    ecx,0xd7d8759
  421ea4:	aas    
  421ea5:	xchg   esi,eax
  421ea6:	in     eax,dx
  421ea7:	fist   DWORD PTR ss:[ebx]
  421eaa:	push   ds
  421eab:	xor    cl,ch
  421ead:	retf   0x470f
  421eb0:	ss xchg ebp,eax
  421eb2:	dec    esp
  421eb3:	mov    al,0x9f
  421eb5:	loope  0x421e6f
  421eb7:	repz enter 0x3476,0x79
  421ebc:	push   ss
  421ebd:	sub    eax,0x562a084b
  421ec2:	jle    0x421ec9
  421ec4:	lds    eax,FWORD PTR [esp+eax*8]
  421ec7:	cmp    eax,ebx
  421ec9:	add    eax,0x5ca8d5f6
  421ece:	or     DWORD PTR [esi],esi
  421ed0:	daa    
  421ed1:	fcomp  st(2)
  421ed3:	test   BYTE PTR [ecx-0x6e7cf1f9],ah
  421ed9:	adc    dh,BYTE PTR [ebx]
  421edb:	(bad)  
  421edc:	outs   dx,DWORD PTR ds:[esi]
  421edd:	jns    0x421ea2
  421edf:	ins    BYTE PTR es:[edi],dx
  421ee0:	fist   DWORD PTR [eax+0x1f]
  421ee3:	test   DWORD PTR [esi],ecx
  421ee5:	pop    esp
  421ee6:	push   edi
  421ee7:	xchg   ebx,eax
  421ee8:	adc    BYTE PTR [ecx],dh
  421eea:	gs cmp al,0x5
  421eed:	fwait
  421eee:	jns    0x421f6f
  421ef0:	pushf  
  421ef1:	dec    esi
  421ef2:	add    al,0x7c
  421ef4:	pop    DWORD PTR [esi]
  421ef6:	jmp    DWORD PTR [edi+0x41]
  421ef9:	(bad)  
  421efa:	fadd   st(1),st
  421efc:	lock dec ecx
  421efe:	mov    eax,0x2fe38a36
  421f03:	cmp    DWORD PTR [di-0x7],esp
  421f07:	cwde   
  421f08:	cld    
  421f09:	mov    bl,0x2
  421f0b:	pop    ds
  421f0c:	rcr    BYTE PTR [ebp+0x607a2e8d],0x6b
  421f13:	sbb    ebx,ebp
  421f15:	sbb    edi,DWORD PTR [esi-0x25106512]
  421f1b:	jg     0x421edc
  421f1d:	inc    eax
  421f1e:	jp     0x421ef4
  421f20:	sbb    eax,0x62a1f98d
  421f25:	gs xchg esi,eax
  421f27:	add    DWORD PTR [eax],eax
  421f29:	clc    
  421f2a:	add    al,0x0
  421f2c:	add    BYTE PTR [eax],bh
  421f2e:	xchg   ebx,esp
  421f30:	inc    eax
  421f31:	cmp    BYTE PTR [ebp+0x7a],dl
  421f34:	data16 cmp BYTE PTR [ebx+0x375a28a3],ch
  421f3b:	xchg   edx,eax
  421f3c:	outs   dx,DWORD PTR ds:[esi]
  421f3d:	and    al,BYTE PTR [edx+0x13ff97bb]
  421f43:	adc    eax,0x70c6ce12
  421f48:	add    BYTE PTR [eax+0x14488c92],ch
  421f4e:	out    dx,al
  421f4f:	out    0xb3,eax
  421f51:	int    0x3
  421f53:	pop    esp
  421f54:	sbb    eax,0xa6242927
  421f59:	cld    
  421f5a:	leave  
  421f5b:	stos   DWORD PTR es:[edi],eax
  421f5c:	inc    eax
  421f5d:	aaa    
  421f5e:	or     BYTE PTR ds:0xf489f3d5,0x7a
  421f65:	xor    BYTE PTR [eax-0x2077ec17],cl
  421f6b:	retf   
  421f6c:	push   edi
  421f6d:	das    
  421f6e:	xchg   esp,eax
  421f6f:	sub    ch,BYTE PTR [edx-0x16]
  421f72:	fs out dx,al
  421f74:	sub    DWORD PTR [edx+0x237f4d38],0xffffff87
  421f7b:	add    al,0x3c
  421f7d:	rcr    eax,0xad
  421f80:	imul   ebp,ebx,0x83ae1d95
  421f86:	js     0x421f4c
  421f88:	test   eax,0xd3581974
  421f8d:	mov    al,ds:0xed10a8
  421f92:	rol    BYTE PTR [esi-0x7d],cl
  421f95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f96:	aam    0x17
  421f98:	push   edx
  421f99:	jp     0x421fea
  421f9b:	pop    esp
  421f9c:	push   edx
  421f9d:	(bad)  [esi]
  421f9f:	(bad)  
  421fa0:	dec    ebx
  421fa1:	lds    edi,FWORD PTR [edx]
  421fa3:	and    al,0xa6
  421fa5:	mov    al,ds:0xb45a6ace
  421faa:	ins    DWORD PTR es:[edi],dx
  421fab:	dec    ebx
  421fac:	jge    0x421fbf
  421fae:	jmp    0x421fb7
  421fb0:	ficomp WORD PTR [ebp+0x4c003ef9]
  421fb6:	or     ch,BYTE PTR [ecx-0x67]
  421fb9:	mov    edi,0x70751119
  421fbe:	mov    eax,0x895ace20
  421fc3:	and    ebx,eax
  421fc5:	mov    cl,BYTE PTR [edx]
  421fc7:	rol    DWORD PTR [ecx+0x2f4296aa],0x7
  421fce:	pop    ecx
  421fcf:	stc    
  421fd0:	add    esi,DWORD PTR [esi]
  421fd2:	sbb    cl,BYTE PTR [esi]
  421fd4:	mov    ch,0xee
  421fd6:	inc    ebx
  421fd7:	mov    WORD PTR [ebp-0x7c],es
  421fda:	xchg   ecx,eax
  421fdb:	adc    al,0x65
  421fdd:	add    al,0x5b
  421fdf:	outs   dx,BYTE PTR ss:[esi]
  421fe1:	clc    
  421fe2:	jnp    0x42205d
  421fe4:	cdq    
  421fe5:	mov    edi,DWORD PTR [ecx]
  421fe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fe8:	(bad)  
  421fe9:	loop   0x421fd1
  421feb:	cwde   
  421fec:	xor    DWORD PTR [ecx],esp
  421fee:	and    al,BYTE PTR [ecx-0x43]
  421ff1:	fisub  DWORD PTR [edx]
  421ff3:	std    
  421ff4:	gs out dx,al
  421ff6:	in     eax,0x69
  421ff8:	mov    es,WORD PTR [ecx]
  421ffa:	and    dl,bh
  421ffc:	daa    
  421ffd:	push   es
  421ffe:	dec    ecx
  421fff:	mov    WORD PTR [ecx-0x5],ss
  422002:	add    eax,0x7f6794fd
  422007:	jne    0x421fae
  422009:	xor    DWORD PTR [ecx-0x41923fda],0x56
  422010:	shr    DWORD PTR [eax-0x62dc5bff],cl
  422016:	xchg   esp,eax
  422017:	sub    al,0xbc
  422019:	int3   
  42201a:	sub    BYTE PTR gs:[edi],0x6f
  42201e:	pushf  
  42201f:	retf   
  422020:	lahf   
  422021:	xor    BYTE PTR [eax-0x67],ch
  422024:	iret   
  422025:	mov    cl,0x58
  422027:	cs hlt 
  422029:	dec    edx
  42202a:	dec    ecx
  42202b:	je     0x421fe5
  42202d:	xchg   ebx,eax
  42202e:	cmp    ah,BYTE PTR [esi]
  422030:	dec    esi
  422031:	outs   dx,DWORD PTR fs:[esi]
  422033:	push   0xffffffb2
  422035:	mov    ebp,0x8c2e48dd
  42203a:	fsubr  QWORD PTR [edi]
  42203c:	add    BYTE PTR [esi+ecx*8+0x618f703e],ah
  422043:	not    BYTE PTR [eax+0x76d39945]
  422049:	shr    bh,cl
  42204b:	ja     0x42208b
  42204d:	and    eax,0xeacfa09b
  422052:	ja     0x42200c
  422054:	jmp    0xf1341b20
  422059:	lea    esp,[ecx-0x46]
  42205c:	sti    
  42205d:	and    edi,DWORD PTR [edx]
  42205f:	mov    eax,?
  422061:	xchg   ebp,eax
  422062:	push   ebx
  422063:	inc    ecx
  422064:	pop    DWORD PTR [ebx]
  422066:	ss pop es
  422068:	mov    eax,ds:0x9ce2ed5f
  42206d:	push   0x6d
  42206f:	outs   dx,DWORD PTR ds:[esi]
  422070:	fdivr  QWORD PTR [edi+0x3ed9b8af]
  422076:	lahf   
  422077:	(bad)  
  422078:	into   
  422079:	xor    al,0x40
  42207b:	mov    bl,0xe0
  42207d:	and    DWORD PTR [ebx+0x19760be9],ebp
  422083:	sub    ch,BYTE PTR [ebp+0x29190394]
  422089:	jmp    0x3390:0xf8244e5f
  422090:	call   0x2fe2:0x74a88a31
  422097:	mov    ebx,0x4e06ce2
  42209c:	push   0x4611a28b
  4220a1:	enter  0x8f4d,0x71
  4220a5:	test   BYTE PTR [ebx-0x5a],al
  4220a8:	or     al,0x4f
  4220aa:	inc    esi
  4220ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220ac:	ins    DWORD PTR es:[edi],dx
  4220ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220ae:	jle    0x4220e8
  4220b0:	das    
  4220b1:	rcl    DWORD PTR [ecx-0x87229f1],cl
  4220b7:	inc    esp
  4220b8:	inc    esi
  4220b9:	rcr    DWORD PTR [edi+0x2ce34126],cl
  4220bf:	data16 (bad) 
  4220c1:	fisubr DWORD PTR [ebp+eax*1-0x65]
  4220c5:	aad    0x41
  4220c7:	cmp    al,0x5c
  4220c9:	pop    ebx
  4220ca:	fstp   DWORD PTR [edi+ebp*8]
  4220cd:	push   ebp
  4220ce:	ins    BYTE PTR es:[edi],dx
  4220cf:	fucom  st(1)
  4220d1:	mov    ds:0xa2ef2085,al
  4220d6:	mov    bh,0x87
  4220d8:	pop    eax
  4220d9:	je     0x422148
  4220db:	fisub  WORD PTR [ebx-0x501824e2]
  4220e1:	(bad)  
  4220e2:	aam    0x2
  4220e4:	mov    ds:0xe07a1370,al
  4220e9:	dec    ebx
  4220ea:	jo     0x4220e9
  4220ec:	xor    al,BYTE PTR fs:[esi+edx*4-0x9]
  4220f1:	adc    eax,0xa467e51c
  4220f6:	sbb    al,0x9
  4220f8:	mov    al,ds:0x499621f2
  4220fd:	sbb    al,0x4a
  4220ff:	hlt    
  422100:	jns    0x4220f3
  422102:	(bad)  [ecx]
  422104:	adc    al,0x19
  422106:	and    edx,0x7d813777
  42210c:	dec    ebx
  42210d:	mov    eax,0xad90e0b
  422112:	mov    ecx,0x5059591c
  422117:	jl     0x422157
  422119:	or     bl,BYTE PTR [ecx]
  42211b:	sbb    eax,edx
  42211d:	sub    DWORD PTR [ebp+0x74],edi
  422120:	pusha  
  422121:	jbe    0x422122
  422123:	inc    ebp
  422124:	push   0x47
  422126:	cmc    
  422127:	jb     0x4220bf
  422129:	clc    
  42212a:	add    DWORD PTR [ebx-0x72],esp
  42212d:	inc    edx
  42212e:	ret    0xf0c8
  422131:	mov    eax,0x87983943
  422136:	and    dh,ch
  422138:	sbb    bl,BYTE PTR [edi+edi*2]
  42213b:	xchg   ebx,eax
  42213c:	fnstenv [ebp+esi*4+0xa]
  422140:	or     DWORD PTR [ecx-0x45],esp
  422143:	lock push ecx
  422145:	adc    eax,0xfc4e9757
  42214a:	sub    BYTE PTR [ecx+ecx*2+0x7ba3c59e],dl
  422151:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422152:	mov    ebp,ds
  422154:	add    edx,esp
  422156:	jp     0x4220ff
  422158:	out    0x1,al
  42215a:	(bad)  [esi-0x54e94a0a]
  422160:	pop    esi
  422161:	je     0x4221ab
  422163:	cmc    
  422164:	call   0x192b4dde
  422169:	out    dx,eax
  42216a:	push   0xfffffff6
  42216c:	in     al,dx
  42216d:	fild   QWORD PTR [edi]
  42216f:	add    dl,bh
  422171:	cld    
  422172:	mov    ebp,0xc33bf429
  422177:	pop    ecx
  422178:	mov    ch,0xd3
  42217a:	xor    al,0x6c
  42217c:	push   eax
  42217d:	in     eax,dx
  42217e:	jmp    0x42214f
  422180:	mov    cl,0xa7
  422182:	(bad)  
  422183:	ins    DWORD PTR es:[edi],dx
  422184:	sub    ebp,DWORD PTR [edi-0x2c5572ef]
  42218a:	and    al,0xc0
  42218c:	add    eax,0x94ef6d9
  422191:	xlat   BYTE PTR ds:[ebx]
  422192:	or     eax,0xf7e391d8
  422197:	ja     0x42218e
  422199:	test   al,0x8d
  42219b:	lock sahf 
  42219d:	std    
  42219e:	and    al,0x90
  4221a0:	xchg   esp,eax
  4221a1:	arpl   sp,bx
  4221a3:	repnz mov ecx,0x92b649e5
  4221a9:	pop    edi
  4221aa:	dec    eax
  4221ab:	mov    ebx,0xa9ca6d11
  4221b0:	nop
  4221b1:	imul   BYTE PTR [edi-0x60]
  4221b4:	mov    ah,bl
  4221b6:	sti    
  4221b7:	and    DWORD PTR [edx+0x62],0xe2fdc189
  4221be:	adc    DWORD PTR [edi-0x58],ebx
  4221c1:	pop    es
  4221c2:	fst    DWORD PTR [ecx+eiz*1]
  4221c5:	rcr    BYTE PTR [ecx-0x36f9484f],cl
  4221cb:	push   ss
  4221cc:	jbe    0x42219c
  4221ce:	inc    ecx
  4221cf:	cmc    
  4221d0:	aad    0xf9
  4221d2:	les    ebp,FWORD PTR [edi+0x7244f901]
  4221d8:	mov    ebp,0x678572aa
  4221dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221de:	sub    al,0x50
  4221e0:	fisttp WORD PTR [ebx+ebp*4-0x79]
  4221e4:	jge    0x4221cf
  4221e6:	mov    ch,BYTE PTR [edi+edx*1+0x79]
  4221ea:	jp     0x422209
  4221ec:	pop    esi
  4221ed:	dec    eax
  4221ee:	mov    ds:0xfe035bc1,al
  4221f3:	and    al,0xd9
  4221f5:	imul   ebp,DWORD PTR [eax-0x34],0x1279b05c
  4221fc:	mov    bh,0xc2
  4221fe:	(bad)  
  4221ff:	clc    
  422200:	pushf  
  422201:	stos   BYTE PTR es:[edi],al
  422202:	pop    ebp
  422203:	sahf   
  422204:	popf   
  422205:	jne    0x422249
  422207:	push   ss
  422208:	and    eax,0x65346410
  42220d:	fld    TBYTE PTR [edi-0x668fae80]
  422213:	and    eax,0x5503da4b
  422218:	dec    esp
  422219:	jo     0x422272
  42221b:	and    ebp,DWORD PTR [edi+0x71]
  42221e:	and    ah,BYTE PTR ds:0x2b8a6c41
  422224:	fiadd  DWORD PTR [ebp+0x5f3a385f]
  42222a:	mov    ch,ah
  42222c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42222d:	(bad)  
  42222e:	mov    cl,0xb6
  422230:	or     al,0x8d
  422232:	arpl   WORD PTR [ecx+0x50f290ec],si
  422238:	or     BYTE PTR [edi+0x15],bh
  42223b:	in     eax,dx
  42223c:	add    al,0x98
  42223e:	push   esp
  42223f:	or     eax,0x9ebe6e7
  422244:	jo     0x422285
  422246:	fs push es
  422248:	mov    WORD PTR [edi+edi*1+0x35d87e06],gs
  42224f:	inc    ebx
  422250:	inc    DWORD PTR [ebx+0x39faa7aa]
  422256:	cwde   
  422257:	xchg   ebp,eax
  422258:	ins    DWORD PTR es:[edi],dx
  422259:	mov    cl,0xa
  42225b:	pop    esi
  42225c:	gs push ds
  42225e:	scas   al,BYTE PTR es:[edi]
  42225f:	jge    0x4221fe
  422261:	mov    al,0xf2
  422263:	jmp    0x65c1:0xb7c5c35d
  42226a:	add    eax,DWORD PTR [ebx-0x20d5b939]
  422270:	mov    ebp,0xf3d28c2c
  422275:	mov    ebp,0xf25cf882
  42227a:	enter  0xaea0,0xa4
  42227e:	push   ebp
  42227f:	outs   dx,BYTE PTR ds:[esi]
  422280:	dec    ecx
  422281:	sub    al,0x18
  422283:	push   ds
  422284:	push   ds
  422285:	int    0xf3
  422287:	mov    esp,0x205078f0
  42228c:	jno    0x422224
  42228e:	pop    edx
  42228f:	mov    esp,0xc4eab599
  422294:	sub    edi,esp
  422296:	aas    
  422297:	arpl   WORD PTR [ebx-0x31],dx
  42229a:	imul   esi,edx,0x2d
  42229d:	mov    ecx,0x5073548a
  4222a2:	sti    
  4222a3:	ret    0xfe83
  4222a6:	or     BYTE PTR ds:0xcd31b7d4,al
  4222ac:	mov    ah,0x1d
  4222ae:	add    al,0xdb
  4222b0:	xchg   DWORD PTR ds:0x5df43db3,esi
  4222b6:	xchg   ebp,eax
  4222b7:	dec    edx
  4222b8:	scas   al,BYTE PTR es:[edi]
  4222b9:	rol    BYTE PTR [eax+0x4c],1
  4222bc:	xor    BYTE PTR [ecx],dl
  4222be:	push   eax
  4222bf:	and    ecx,DWORD PTR [eax+0x7f4bb09a]
  4222c5:	xor    ax,0xf35f
  4222c9:	shl    DWORD PTR [edi+ebx*2],1
  4222cc:	ja     0x42232a
  4222ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222cf:	sbb    edi,DWORD PTR [ecx-0x2da8cafd]
  4222d5:	or     DWORD PTR [ecx],ecx
  4222d7:	sub    dl,BYTE PTR [ebp-0x5f]
  4222da:	pusha  
  4222db:	xor    al,0x83
  4222dd:	inc    ecx
  4222de:	sub    dh,BYTE PTR [edi-0x3]
  4222e1:	outs   dx,BYTE PTR ds:[esi]
  4222e2:	mov    esi,0x13b5cb94
  4222e7:	stos   BYTE PTR es:[edi],al
  4222e8:	pushf  
  4222e9:	add    BYTE PTR [ecx+0x7f],bl
  4222ec:	push   ss
  4222ed:	in     al,0x9a
  4222ef:	push   esp
  4222f0:	mov    ah,0xae
  4222f2:	lods   al,BYTE PTR ds:[esi]
  4222f3:	iret   
  4222f4:	rcr    eax,cl
  4222f6:	outs   dx,DWORD PTR ds:[esi]
  4222f7:	or     eax,0xff2dc50a
  4222fc:	rcr    DWORD PTR [ebx],0x11
  4222ff:	test   BYTE PTR [ecx],0x7
  422302:	push   ds
  422303:	out    dx,al
  422304:	pop    edx
  422305:	and    edi,ebp
  422307:	mov    eax,ds:0xbdeb9b3c
  42230c:	jno    0x422342
  42230e:	repnz add DWORD PTR [edi*4-0x56d2522a],ebp
  422316:	ror    esp,cl
  422318:	mov    esi,0xd009dc58
  42231d:	stos   BYTE PTR es:[edi],al
  42231e:	add    al,0xa7
  422320:	(bad)  
  422321:	and    ecx,DWORD PTR [eax]
  422323:	ss in  eax,dx
  422325:	pop    edx
  422326:	bound  edi,QWORD PTR [esi-0x79]
  422329:	push   edi
  42232a:	push   ebp
  42232b:	jp     0x4222c8
  42232d:	cwde   
  42232e:	xor    eax,0xadd168b9
  422333:	ret    0x8f4c
  422336:	out    dx,eax
  422337:	dec    ebx
  422338:	sbb    eax,edi
  42233a:	pop    es
  42233b:	repz inc ebp
  42233d:	rol    BYTE PTR [eax],cl
  42233f:	es int 0xbe
  422342:	xchg   ecx,eax
  422343:	jns    0x42232c
  422345:	mov    ah,0xfe
  422347:	outs   dx,BYTE PTR ds:[esi]
  422348:	xchg   DWORD PTR [edi+0x751a9276],esp
  42234e:	adc    eax,0x3ee25bdf
  422353:	out    dx,eax
  422354:	inc    ecx
  422355:	clc    
  422356:	jno    0x4222e3
  422358:	int    0x25
  42235a:	aaa    
  42235b:	cmp    DWORD PTR fs:[ecx+0x227afe6b],edx
  422362:	ror    DWORD PTR [ecx+0x60],0xb6
  422366:	xchg   edx,eax
  422367:	neg    BYTE PTR [edi+0x13733851]
  42236d:	je     0x42230c
  42236f:	mov    ds:0xdc3d9ec2,eax
  422374:	sub    al,0xdc
  422376:	gs in  al,dx
  422378:	lahf   
  422379:	js     0x42232a
  42237b:	add    cl,BYTE PTR [ecx-0x56]
  42237e:	gs dec eax
  422380:	inc    esp
  422381:	shl    DWORD PTR [eax],1
  422383:	sub    DWORD PTR [esi],0xffffffa8
  422386:	popa   
  422387:	lea    ebp,[esi+0x1334433e]
  42238d:	cmc    
  42238e:	cdq    
  42238f:	in     al,dx
  422390:	xor    dl,BYTE PTR [eax-0x357dccc7]
  422396:	add    eax,0x8f5fea1e
  42239b:	push   0x8f3a9cf4
  4223a0:	fnsave [esi-0x4c]
  4223a3:	or     eax,ebx
  4223a5:	dec    edx
  4223a6:	lahf   
  4223a7:	fdivrp st(4),st
  4223a9:	or     ah,bh
  4223ab:	pop    esp
  4223ac:	pop    ss
  4223ad:	or     al,BYTE PTR [ebx-0x43]
  4223b0:	in     al,0x18
  4223b2:	popf   
  4223b3:	into   
  4223b4:	mov    bh,dh
  4223b6:	push   ebp
  4223b7:	adc    BYTE PTR [edx+0x8],0x71
  4223bb:	fs xor al,0x85
  4223be:	sbb    ebp,DWORD PTR [edi]
  4223c0:	inc    sp
  4223c2:	aam    0x93
  4223c4:	cmp    BYTE PTR [esi],dh
  4223c6:	mov    ds:0x8fa46147,eax
  4223cb:	scas   al,BYTE PTR es:[edi]
  4223cc:	inc    ebx
  4223cd:	in     al,dx
  4223ce:	xchg   ecx,eax
  4223cf:	lods   al,BYTE PTR ds:[esi]
  4223d0:	cmc    
  4223d1:	cmc    
  4223d2:	div    DWORD PTR gs:[eax]
  4223d5:	jge    0x4223db
  4223d7:	les    esp,FWORD PTR [eax-0x540f5024]
  4223dd:	jecxz  0x42244d
  4223df:	pushf  
  4223e0:	mov    al,ds:0xc8abff1c
  4223e5:	or     al,0x15
  4223e7:	adc    BYTE PTR [ebp-0x7440e0f4],dl
  4223ed:	fisubr WORD PTR [edi+0x4aaff51f]
  4223f3:	fxch   st(1)
  4223f5:	or     al,ch
  4223f7:	dec    ecx
  4223f8:	jp     0x4223f1
  4223fa:	mov    BYTE PTR [eiz*1+0x53a14af5],al
  422401:	call   FWORD PTR [ebx-0x7cee272d]
  422407:	add    dl,dh
  422409:	mov    al,ds:0x52f41f4f
  42240e:	out    0x90,eax
  422410:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422411:	add    bl,ah
  422413:	push   ebp
  422414:	jnp    0x4223c5
  422416:	fsub   DWORD PTR [ecx+0x34b816af]
  42241c:	ins    DWORD PTR es:[edi],dx
  42241d:	cmp    al,0x8c
  42241f:	xor    BYTE PTR [ebx-0x1db95ca7],dl
  422425:	cmp    ecx,edi
  422427:	pop    ebx
  422428:	sub    ebx,ebx
  42242a:	stos   DWORD PTR es:[edi],eax
  42242b:	jns    0x422428
  42242d:	pop    ebp
  42242e:	or     BYTE PTR [edx],bh
  422430:	xor    al,0x37
  422432:	sahf   
  422433:	mov    ds,ecx
  422435:	pop    ebp
  422436:	fwait
  422437:	add    DWORD PTR [eax],eax
  422439:	clc    
  42243a:	add    al,0x0
  42243c:	add    BYTE PTR [eax+0x7cc865f],bl
  422442:	xchg   edi,eax
  422443:	or     BYTE PTR ds:0x436f9321,bl
  422449:	pop    esi
  42244a:	mov    edi,0xb7a767d1
  42244f:	(bad)  
  422450:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422451:	mov    dh,0x77
  422453:	fidiv  DWORD PTR [ebx]
  422455:	aas    
  422456:	add    ah,BYTE PTR [edx+0x54]
  422459:	fdiv   QWORD PTR [edi+0xd]
  42245c:	mov    ds:0xd6d2265,al
  422461:	or     ebx,DWORD PTR [edi+0xa473612]
  422467:	mov    al,0xeb
  422469:	add    BYTE PTR [ebp-0x234f791e],ah
  42246f:	pop    es
  422470:	je     0x4223f7
  422472:	inc    esi
  422473:	mov    esp,0x1b7bfe9a
  422478:	aam    0xce
  42247a:	shr    ecx,0x76
  42247d:	ja     0x42243b
  42247f:	pushf  
  422480:	pop    ss
  422481:	pop    eax
  422482:	inc    ecx
  422483:	xor    esi,DWORD PTR [eax-0x36]
  422486:	mov    eax,ds:0x312cfb86
  42248b:	jg     0x42243e
  42248d:	bound  edi,QWORD PTR [eax]
  42248f:	sbb    BYTE PTR [ecx-0x7af1818c],bh
  422495:	push   es
  422496:	xchg   ecx,eax
  422497:	sahf   
  422498:	sar    DWORD PTR [ebp-0x7797d180],cl
  42249e:	rol    esp,0x7c
  4224a1:	cmp    al,0x72
  4224a3:	mov    eax,DWORD PTR [edi-0x51]
  4224a6:	adc    al,0xf0
  4224a8:	mov    ebp,ecx
  4224aa:	neg    DWORD PTR [ebx]
  4224ac:	add    eax,0x432c138e
  4224b1:	mov    dl,0xd7
  4224b3:	aam    0xed
  4224b5:	ins    DWORD PTR es:[edi],dx
  4224b6:	ret    0xeaad
  4224b9:	xchg   esp,eax
  4224ba:	xor    al,0x95
  4224bc:	mov    dh,0x53
  4224be:	push   edx
  4224bf:	push   0xe836b965
  4224c4:	mov    DWORD PTR [edx],ebp
  4224c6:	push   edx
  4224c7:	dec    ecx
  4224c8:	fcomp  QWORD PTR [esi+0x18a8e771]
  4224ce:	mov    edx,0x7b2581b7
  4224d3:	popa   
  4224d4:	mov    dl,cl
  4224d6:	and    edi,edi
  4224d8:	sub    esp,0xffffffd7
  4224db:	and    BYTE PTR [eax],dl
  4224dd:	test   DWORD PTR [ecx-0x47],edx
  4224e0:	inc    ebp
  4224e1:	add    ebx,ebx
  4224e3:	adc    eax,0x13f933d0
  4224e8:	and    eax,0xdf45836c
  4224ed:	(bad)  
  4224ef:	mov    eax,ds:0xf3cb129e
  4224f4:	sbb    eax,0x5c1c217f
  4224f9:	sub    ch,BYTE PTR ds:0xfc7298ab
  4224ff:	xor    DWORD PTR [edx],esi
  422501:	sbb    ebx,DWORD PTR ds:0xbfc5948d
  422507:	push   esi
  422508:	out    dx,al
  422509:	cmp    eax,0xba757951
  42250e:	inc    edx
  42250f:	jecxz  0x422563
  422511:	jecxz  0x42249d
  422513:	enter  0xa20f,0xbe
  422517:	icebp  
  422518:	adc    DWORD PTR [esp+ebx*4+0xa75d5cd],0xed23b93f
  422523:	icebp  
  422524:	jnp    0x422520
  422526:	fst    DWORD PTR [edi]
  422528:	push   ss
  422529:	push   edi
  42252a:	or     DWORD PTR [edx*2-0x887658b],ebp
  422531:	sahf   
  422532:	cld    
  422533:	jecxz  0x422553
  422535:	push   ebx
  422536:	jmp    0x94ee:0x4d77944b
  42253d:	fidiv  DWORD PTR [edx]
  42253f:	push   edi
  422540:	mov    esp,0x982188a6
  422545:	xchg   ebp,eax
  422546:	inc    edi
  422547:	mov    al,0x40
  422549:	xchg   edx,eax
  42254a:	in     al,dx
  42254b:	ja     0x4225c2
  42254d:	outs   dx,DWORD PTR ds:[esi]
  42254e:	data16 adc al,0xff
  422551:	scas   eax,DWORD PTR es:[edi]
  422552:	aam    0x7f
  422554:	stos   DWORD PTR es:[edi],eax
  422555:	pop    es
  422556:	mov    ebp,0x7d9dee25
  42255b:	pop    edx
  42255c:	dec    eax
  42255d:	mov    edx,0x5eb63867
  422562:	cmp    DWORD PTR [edx-0x204040c3],edx
  422568:	loop   0x4225c2
  42256a:	in     eax,dx
  42256b:	and    al,0x6f
  42256d:	add    bl,0x5f
  422570:	xchg   esi,eax
  422571:	lods   eax,DWORD PTR ds:[esi]
  422572:	clc    
  422573:	(bad)  [edx]
  422575:	loop   0x4225cf
  422577:	mov    es,WORD PTR [eax-0x21]
  42257a:	jmp    0x54dd:0x1e8b5698
  422581:	cli    
  422582:	xlat   BYTE PTR ds:[ebx]
  422583:	pop    eax
  422584:	or     DWORD PTR [esp+ebx*2],esp
  422587:	mov    esi,0x2725a888
  42258c:	cmp    al,0xf6
  42258e:	or     DWORD PTR [edi],ecx
  422590:	lock add al,BYTE PTR [ebx-0x7951e16e]
  422597:	out    0x7f,eax
  422599:	mov    dh,BYTE PTR [edx+0xc]
  42259c:	in     eax,0xee
  42259e:	pusha  
  42259f:	lds    esp,FWORD PTR [ebp-0x50a3c0ab]
  4225a5:	fisub  DWORD PTR [esi]
  4225a7:	loopne 0x4225ae
  4225a9:	ss sti 
  4225ab:	adc    dl,BYTE PTR [eax+0x2997aca3]
  4225b1:	xchg   edi,eax
  4225b2:	adc    ebx,DWORD PTR [edx+ecx*2-0x1d]
  4225b6:	ret    0x25d2
  4225b9:	push   0xb682781
  4225be:	js     0x4225e4
  4225c0:	(bad)  
  4225c1:	(bad)  
  4225c2:	cld    
  4225c3:	xor    al,0xd4
  4225c5:	and    dh,bl
  4225c7:	or     bh,ch
  4225c9:	(bad)  
  4225ca:	dec    ebp
  4225cb:	pop    ebx
  4225cc:	add    dl,BYTE PTR [edx+0x5a]
  4225cf:	or     edi,0x68bfd407
  4225d5:	inc    BYTE PTR [edi-0x5e]
  4225d8:	in     eax,0xc0
  4225da:	not    DWORD PTR [esi+0x2cb08996]
  4225e0:	dec    ecx
  4225e1:	push   eax
  4225e2:	cdq    
  4225e3:	sbb    DWORD PTR [edi+0x63dc2275],esi
  4225e9:	fnstcw WORD PTR [eax+0x52555482]
  4225ef:	mov    WORD PTR [eax-0x3e0dbb6a],?
  4225f5:	cli    
  4225f6:	cmc    
  4225f7:	inc    edi
  4225f8:	dec    esi
  4225f9:	sub    eax,0xc03e50a6
  4225fe:	gs inc esp
  422600:	ja     0x42265a
  422602:	cli    
  422603:	push   cs
  422604:	xlat   BYTE PTR ds:[ebx]
  422605:	dec    edi
  422606:	jnp    0x422612
  422608:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422609:	mov    edx,0xe9bc92cb
  42260e:	jl     0x4225e1
  422610:	ret    0xead4
  422613:	jmp    ebp
  422615:	enter  0xea4c,0xcb
  422619:	lea    edi,[edi]
  42261b:	test   DWORD PTR [ebp+esi*8+0x21c916a2],ecx
  422622:	jo     0x422620
  422624:	daa    
  422625:	mov    eax,ds:0x608ef472
  42262a:	shl    BYTE PTR [ebp-0x2d],0xd3
  42262e:	shl    esp,1
  422630:	mov    edi,0xff432884
  422635:	add    BYTE PTR [esi],0x49
  422638:	or     ah,BYTE PTR [ecx]
  42263a:	mov    ch,0xf5
  42263c:	sbb    BYTE PTR [esi],ch
  42263e:	outs   dx,DWORD PTR ds:[esi]
  42263f:	mov    DWORD PTR [esi],ebx
  422641:	push   es
  422642:	jne    0x42262d
  422644:	cmp    esp,DWORD PTR [eax]
  422646:	adc    esi,ecx
  422648:	xor    edi,DWORD PTR [edx-0x3e]
  42264b:	xor    eax,0x7fe21649
  422650:	pop    ebp
  422651:	jg     0x4226ab
  422653:	lods   eax,DWORD PTR ds:[esi]
  422654:	stc    
  422655:	sar    BYTE PTR [eax],cl
  422657:	stos   DWORD PTR es:[edi],eax
  422658:	cmp    al,0xfe
  42265a:	jg     0x42260e
  42265c:	test   al,0x3e
  42265e:	mov    edi,0x4725bfe9
  422663:	pop    ebp
  422664:	in     al,dx
  422665:	xor    DWORD PTR ds:0x2c4b75cb,ebx
  42266b:	inc    edx
  42266c:	loopne 0x422655
  42266e:	sub    eax,0xeb3697b4
  422673:	test   DWORD PTR [ebp-0x6b],edx
  422676:	sbb    bh,BYTE PTR [edi+0x75]
  422679:	(bad)  
  42267a:	jl     0x42260e
  42267c:	mov    al,ds:0xd2cb9fc0
  422681:	div    BYTE PTR [ecx+0x6d]
  422684:	(bad)  
  422685:	jne    0x4226ba
  422687:	mov    ebx,0x81bfc7fc
  42268c:	adc    ecx,DWORD PTR [edx-0x43f19823]
  422692:	dec    ecx
  422693:	and    esi,DWORD PTR [ebx]
  422695:	dec    eax
  422696:	dec    edx
  422697:	xchg   ebx,eax
  422698:	push   esi
  422699:	jne    0x42263a
  42269b:	cmp    ah,BYTE PTR [esp+edi*8-0x3e]
  42269f:	or     BYTE PTR [eax],cl
  4226a1:	arpl   di,dx
  4226a3:	add    eax,0xb3623abd
  4226a8:	std    
  4226a9:	mov    ch,BYTE PTR [ebp+ebp*8-0x5b]
  4226ad:	es dec edx
  4226af:	(bad)
  4226b2:	mov    ebx,0x3bc2bc7d
  4226b7:	mov    ah,0x61
  4226b9:	(bad)  
  4226bb:	jp     0x422707
  4226bd:	imul   esp,DWORD PTR [esi+ebp*8],0xd8977911
  4226c4:	outs   dx,BYTE PTR ds:[esi]
  4226c5:	into   
  4226c6:	cmp    bl,BYTE PTR [ebx]
  4226c8:	pop    ds
  4226c9:	mov    bl,0x6a
  4226cb:	ins    BYTE PTR es:[edi],dx
  4226cc:	pop    ds
  4226cd:	push   edi
  4226ce:	inc    esi
  4226cf:	ficomp WORD PTR [edi-0x753213e5]
  4226d5:	loopne 0x4226db
  4226d7:	cdq    
  4226d8:	outs   dx,DWORD PTR ds:[esi]
  4226d9:	dec    eax
  4226da:	scas   eax,DWORD PTR es:[edi]
  4226db:	mov    WORD PTR [esi-0x58],?
  4226de:	and    DWORD PTR [ebp-0x61a5b9d9],ebp
  4226e4:	loop   0x4226fb
  4226e6:	das    
  4226e7:	(bad)  [esi+0x5f]
  4226ea:	push   esp
  4226eb:	push   ebp
  4226ec:	adc    eax,0x7f29a360
  4226f1:	lods   eax,DWORD PTR ds:[esi]
  4226f2:	aam    0x58
  4226f4:	dec    ebx
  4226f5:	inc    ecx
  4226f6:	call   0x3978:0x2c2ebd66
  4226fd:	aam    0x63
  4226ff:	mov    ebp,0x14aa24fd
  422704:	push   es
  422705:	inc    esi
  422706:	fdivr  DWORD PTR [esi+0x68]
  422709:	adc    eax,0xbc6f3a9c
  42270e:	jo     0x422712
  422710:	sahf   
  422711:	cmp    al,0xb1
  422713:	retf   
  422714:	xchg   ebx,eax
  422715:	push   es
  422716:	hlt    
  422717:	xor    al,0x68
  422719:	rcr    DWORD PTR [esp+esi*8],0x9f
  42271d:	jb     0x4226ef
  42271f:	(bad)  
  422720:	daa    
  422721:	ins    BYTE PTR es:[edi],dx
  422722:	add    edi,DWORD PTR [edi+0x1c]
  422725:	inc    ecx
  422726:	jnp    0x422759
  422728:	mov    esp,0x69dc4f28
  42272d:	dec    ebx
  42272e:	xchg   esp,eax
  42272f:	inc    eax
  422730:	mov    ch,dh
  422732:	in     eax,dx
  422733:	mov    edi,0xc3526ec7
  422738:	cmp    DWORD PTR [esi-0x27],eax
  42273b:	scas   al,BYTE PTR es:[edi]
  42273c:	imul   DWORD PTR [ebx-0x6c6fb19e]
  422742:	xor    eax,0x74bb2e11
  422747:	ror    DWORD PTR [eax],cl
  422749:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42274a:	(bad)  
  42274b:	fild   WORD PTR [eax+0x59b38c0c]
  422751:	xor    esp,0xd344d985
  422757:	gs call 0xfe84:0x1b3955e5
  42275f:	pop    ss
  422760:	aaa    
  422761:	cmp    DWORD PTR [esi-0x4c],edi
  422764:	jecxz  0x422701
  422766:	and    al,0xab
  422768:	aad    0xf7
  42276a:	sub    al,BYTE PTR [eax-0x1ee9c0e1]
  422770:	mov    ecx,0x4f75cb91
  422775:	popa   
  422776:	es push esp
  422778:	cwde   
  422779:	mov    ch,0xd2
  42277b:	div    BYTE PTR ds:0x19d79a4f
  422781:	fldenv [esi-0x66]
  422784:	jge    0x422765
  422786:	pop    eax
  422787:	rcl    BYTE PTR [eax+0x4b0cbd35],1
  42278d:	mov    ebx,0x11b24e0d
  422792:	lds    ebp,FWORD PTR es:0x9a724762
  422799:	inc    eax
  42279a:	das    
  42279b:	xlat   BYTE PTR ds:[ebx]
  42279c:	dec    ebx
  42279d:	mov    dh,ah
  42279f:	jecxz  0x422728
  4227a1:	and    bh,ah
  4227a3:	mov    dl,0xff
  4227a5:	xlat   BYTE PTR cs:[ebx]
  4227a7:	adc    eax,0xcca88db
  4227ac:	call   0x3792:0x94119fbc
  4227b3:	into   
  4227b4:	jo     0x422744
  4227b6:	das    
  4227b7:	pop    es
  4227b8:	icebp  
  4227b9:	xchg   esp,eax
  4227ba:	ss add al,0xcd
  4227bd:	ins    BYTE PTR es:[edi],dx
  4227be:	push   ebp
  4227bf:	ins    BYTE PTR es:[edi],dx
  4227c0:	or     BYTE PTR [edx+0x2],dl
  4227c3:	mov    eax,ds:0xd7cfae73
  4227c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227ca:	cdq    
  4227cb:	push   esp
  4227cc:	fidivr DWORD PTR [edi-0x56]
  4227cf:	loope  0x42275a
  4227d1:	in     eax,dx
  4227d2:	and    eax,0xdaa4c9bf
  4227d7:	aaa    
  4227d8:	xor    eax,0x1e2b6575
  4227dd:	adc    eax,0xe2d16e6a
  4227e2:	test   BYTE PTR [esi+ebp*1],0xef
  4227e6:	push   ecx
  4227e7:	push   ecx
  4227e8:	mov    ?,WORD PTR [ecx-0x43]
  4227eb:	add    edx,ecx
  4227ed:	inc    eax
  4227ee:	dec    edi
  4227ef:	pop    ebx
  4227f0:	(bad)  
  4227f1:	xchg   esp,eax
  4227f2:	test   edi,ecx
  4227f4:	daa    
  4227f5:	and    al,0x75
  4227f7:	mov    cl,0x15
  4227f9:	xchg   ecx,eax
  4227fa:	cmp    eax,0x215a758d
  4227ff:	pop    esi
  422800:	sub    eax,0xe2d8bcd9
  422805:	cmp    al,0xc3
  422807:	pop    ss
  422808:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422809:	xchg   ebp,eax
  42280a:	iret   
  42280b:	nop
  42280c:	jmp    0xe4df:0xe685be1a
  422813:	cmp    al,0xf1
  422815:	popa   
  422816:	push   ebp
  422817:	bound  eax,QWORD PTR [ebx-0x6c1268d3]
  42281d:	cmp    DWORD PTR [esi+0xd],0x66e87821
  422824:	js     0x42284d
  422826:	and    DWORD PTR [edx-0x55],0xffffff89
  42282a:	add    ah,cl
  42282c:	sub    DWORD PTR [ebp-0x71],0xd44d1291
  422833:	or     ah,BYTE PTR [edx+0x758f557a]
  422839:	pop    esi
  42283a:	push   ecx
  42283b:	cli    
  42283c:	mov    ebp,0x62ad2cc7
  422841:	mov    esp,0x4c1e13a7
  422846:	mov    eax,0x11141cbb
  42284b:	add    ebx,edi
  42284d:	push   ebx
  42284e:	dec    BYTE PTR [ecx]
  422850:	imul   esi,DWORD PTR [ebx-0x7cc3ba69],0x940a4ef0
  42285a:	fcom   QWORD PTR [edx+0x4b5ff074]
  422860:	and    dl,BYTE PTR [ebx]
  422862:	xchg   edi,eax
  422863:	mov    eax,0x60f51ed7
  422868:	inc    eax
  422869:	lea    esi,[ebx+0x29c1b701]
  42286f:	mov    al,BYTE PTR [edi]
  422871:	ja     0x422893
  422873:	into   
  422874:	pop    ebx
  422875:	icebp  
  422876:	in     eax,0xab
  422878:	(bad)  
  422879:	and    BYTE PTR [edi+0x7154476f],bl
  42287f:	addr16 (bad) 
  422881:	fld    st(4)
  422883:	xchg   esp,eax
  422884:	jg     0x422868
  422886:	pop    es
  422887:	pop    eax
  422888:	mov    ds:0x23c5773d,eax
  42288d:	aas    
  42288e:	dec    edx
  42288f:	dec    edi
  422890:	retf   0x87c2
  422893:	xor    esi,DWORD PTR [eax]
  422895:	fdiv   st(5),st
  422897:	pop    esp
  422898:	pop    ebp
  422899:	aad    0x39
  42289b:	inc    ebx
  42289c:	sub    BYTE PTR [ebx+0x54],bh
  42289f:	xchg   ebp,esi
  4228a1:	ins    DWORD PTR es:[edi],dx
  4228a2:	push   edi
  4228a3:	cmc    
  4228a4:	hlt    
  4228a5:	xor    esp,DWORD PTR [ebx+edi*2+0x320d2597]
  4228ac:	xchg   esp,eax
  4228ad:	jbe    0x42287f
  4228af:	xor    cl,BYTE PTR [eax-0x1f]
  4228b2:	mov    WORD PTR [edx-0x1a5cdac5],?
  4228b8:	xor    al,0x5a
  4228ba:	les    eax,FWORD PTR [ebx+edx*8-0x44]
  4228be:	xor    al,0x44
  4228c0:	fstp   DWORD PTR [edx-0xb]
  4228c3:	test   BYTE PTR [esi],dl
  4228c5:	dec    esp
  4228c6:	cmp    bh,BYTE PTR ss:[ecx]
  4228c9:	mov    ds:0x725defdc,eax
  4228ce:	retf   
  4228cf:	shr    al,1
  4228d1:	sub    BYTE PTR ds:0x17f63b74,dl
  4228d7:	sbb    dl,dl
  4228d9:	out    0x93,al
  4228db:	lods   eax,DWORD PTR ds:[esi]
  4228dc:	push   eax
  4228dd:	int    0x4f
  4228df:	neg    DWORD PTR [ecx]
  4228e1:	and    edi,DWORD PTR [eax+edi*1+0x41756b92]
  4228e8:	mov    ecx,esi
  4228ea:	mov    ds:0x763b220f,al
  4228ef:	or     eax,0xdb3409d6
  4228f4:	pop    esp
  4228f5:	fld    DWORD PTR [esi+0x1c]
  4228f8:	(bad)  
  4228f9:	ficomp WORD PTR [ebx]
  4228fb:	push   cs
  4228fc:	xchg   ebp,eax
  4228fd:	inc    esp
  4228fe:	in     al,dx
  4228ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422900:	(bad)
  422903:	sub    ecx,DWORD PTR [eax]
  422905:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422906:	mov    ch,0x5b
  422908:	push   0xffffffd8
  42290a:	push   0x71a830d4
  42290f:	jmp    0x422990
  422911:	cmp    BYTE PTR [edi],cl
  422913:	(bad)  
  422914:	in     eax,0xae
  422916:	adc    BYTE PTR [ebp+0x35442d62],dh
  42291c:	loope  0x422986
  42291e:	dec    edi
  42291f:	jmp    0xeb9e:0x82e5aad5
  422926:	add    ecx,DWORD PTR ds:[edi+0x2a]
  42292a:	clc    
  42292b:	lods   al,BYTE PTR ds:[esi]
  42292c:	sahf   
  42292d:	and    esp,DWORD PTR [eax]
  42292f:	aad    0x4c
  422931:	mov    eax,ds:0xca31d736
  422936:	adc    al,0x69
  422938:	dec    ecx
  422939:	(bad)  
  42293a:	jge    0x422926
  42293c:	xchg   edi,eax
  42293d:	mov    dl,0x28
  42293f:	test   BYTE PTR [edx+0x22],bl
  422942:	cld    
  422943:	mov    edx,0x1a0553f
  422948:	add    al,bh
  42294a:	add    al,0x0
  42294c:	add    BYTE PTR ds:0xdbfcb12b,ch
  422952:	dec    esp
  422953:	sub    al,BYTE PTR [esi-0x3ea6a493]
  422959:	or     BYTE PTR [ecx-0x7a],dl
  42295c:	popa   
  42295d:	pop    ecx
  42295e:	pusha  
  42295f:	xchg   edx,eax
  422960:	arpl   WORD PTR [esi],ax
  422962:	adc    al,0xde
  422964:	int    0x76
  422966:	sahf   
  422967:	mov    cl,0x44
  422969:	test   al,0x85
  42296b:	mov    BYTE PTR [ebp-0x68],bh
  42296e:	push   esi
  42296f:	mov    bh,0x71
  422971:	ja     0x42292d
  422973:	shl    edx,1
  422975:	ins    BYTE PTR es:[edi],dx
  422976:	sbb    ecx,esp
  422978:	pop    edx
  422979:	push   es
  42297a:	add    ecx,edx
  42297c:	push   ebx
  42297d:	adc    BYTE PTR [eax+0x4c],al
  422980:	lods   eax,DWORD PTR ds:[esi]
  422981:	neg    BYTE PTR [ecx-0x278320d4]
  422987:	jecxz  0x422988
  422989:	mov    eax,ds:0x3ff3ab6d
  42298e:	jb     0x4229f7
  422990:	jle    0x422921
  422992:	sbb    cl,0x75
  422995:	test   DWORD PTR [esi-0x3b1bfd6b],esi
  42299b:	or     DWORD PTR [ebx],0xb08f4bd7
  4229a1:	jl     0x42299e
  4229a3:	add    DWORD PTR [esi+eiz*1+0x39257012],edi
  4229aa:	sbb    al,bh
  4229ac:	and    al,0x4e
  4229ae:	lahf   
  4229af:	fdivp  st(2),st
  4229b1:	sbb    ch,dh
  4229b3:	mov    BYTE PTR [ebx-0x7b],cl
  4229b6:	push   cs
  4229b7:	jp     0x4229f5
  4229b9:	lock or BYTE PTR [ecx],cl
  4229bc:	mov    cl,BYTE PTR [ebp-0x4444c1c9]
  4229c2:	adc    edx,DWORD PTR [ecx-0x5ec5443c]
  4229c8:	dec    edi
  4229c9:	gs ja  0x422a1d
  4229cc:	mov    eax,ds:0x71bfd252
  4229d1:	ins    BYTE PTR es:[edi],dx
  4229d2:	xor    esi,DWORD PTR [edi+0x25]
  4229d5:	mov    cl,0x9b
  4229d7:	ins    DWORD PTR es:[edi],dx
  4229d8:	add    BYTE PTR [edi+0x3c],0x18
  4229dc:	fnstcw WORD PTR [ebx+0x49]
  4229df:	sbb    DWORD PTR [ecx],eax
  4229e1:	push   ebx
  4229e2:	add    eax,0x74774c10
  4229e7:	stos   DWORD PTR es:[edi],eax
  4229e8:	xor    BYTE PTR [ecx+0x1a31bd57],bl
  4229ee:	fdiv   st,st(7)
  4229f0:	push   edi
  4229f1:	or     al,0xcb
  4229f3:	retf   
  4229f4:	jae    0x4229d4
  4229f6:	pop    ecx
  4229f7:	push   0xffffffea
  4229f9:	in     eax,0x23
  4229fb:	or     al,0x85
  4229fd:	(bad)  
  4229fe:	sar    BYTE PTR [edi+0x7cd9623],1
  422a04:	jno    0x4229e8
  422a06:	es jp  0x422a45
  422a09:	mov    ah,0x6a
  422a0b:	dec    esi
  422a0c:	es cmp eax,0x15a0d995
  422a12:	(bad)  
  422a13:	shr    dh,0x77
  422a16:	ret    0x4ff4
  422a19:	rcr    DWORD PTR [edi+0x5d3268d6],1
  422a1f:	jge    0x4229e8
  422a21:	repnz inc ebp
  422a23:	xchg   ecx,eax
  422a24:	or     DWORD PTR ds:0xb6ab20c,eax
  422a2a:	addr16 pop edx
  422a2c:	scas   al,BYTE PTR es:[edi]
  422a2d:	pop    ebp
  422a2e:	out    0xc3,al
  422a30:	inc    eax
  422a31:	lahf   
  422a32:	rol    BYTE PTR [edx-0x47],1
  422a35:	out    dx,al
  422a36:	int3   
  422a37:	sti    
  422a38:	mov    dx,0x7fa5
  422a3c:	data16 jno 0x4229df
  422a3f:	fs ret 0xd2e3
  422a43:	call   0x6a85:0x9b736070
  422a4a:	repz sti 
  422a4c:	ja     0x422a4c
  422a4e:	pop    esp
  422a4f:	or     eax,0xdf775543
  422a54:	xchg   ecx,eax
  422a55:	stos   BYTE PTR es:[edi],al
  422a56:	imul   DWORD PTR [edx+ecx*1]
  422a59:	push   ss
  422a5a:	jl     0x422a20
  422a5c:	(bad)  
  422a5e:	xor    ecx,ebx
  422a60:	icebp  
  422a61:	mul    eax
  422a63:	sbb    dl,BYTE PTR [ebx]
  422a65:	jl     0x4229f1
  422a67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a68:	jo     0x422a53
  422a6a:	mov    ebp,0x495a9405
  422a6f:	int    0x46
  422a71:	and    eax,0xb813997f
  422a76:	shl    BYTE PTR [esi],1
  422a78:	loop   0x422a06
  422a7a:	scas   al,BYTE PTR es:[edi]
  422a7b:	test   BYTE PTR [ebp+ebp*8+0x15],bl
  422a7f:	cmp    BYTE PTR [esi-0x3e],bh
  422a82:	xor    BYTE PTR [ecx],dl
  422a84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a85:	pop    ebp
  422a86:	dec    ebp
  422a87:	scas   eax,DWORD PTR es:[edi]
  422a88:	idiv   DWORD PTR [ebx+edi*8-0x279bdc5e]
  422a8f:	sub    esi,edx
  422a91:	mov    ah,0xe9
  422a93:	cmp    DWORD PTR [edx],edx
  422a95:	in     al,0xab
  422a97:	sahf   
  422a98:	or     eax,DWORD PTR [edi+0x3d]
  422a9b:	pop    edx
  422a9c:	add    BYTE PTR [ecx-0x22],dh
  422a9f:	outs   dx,DWORD PTR ds:[esi]
  422aa0:	(bad)  
  422aa1:	mov    ah,0xe
  422aa3:	int    0x98
  422aa5:	inc    ebp
  422aa6:	add    BYTE PTR ds:0x5c058453,bl
  422aac:	mov    cl,0xe0
  422aae:	ins    BYTE PTR es:[edi],dx
  422aaf:	test   DWORD PTR [edx+eax*1],ebp
  422ab2:	fst    st(7)
  422ab4:	or     esi,DWORD PTR [ebx+0x102acccb]
  422aba:	ret    0x47a2
  422abd:	je     0x422b15
  422abf:	xchg   ebx,eax
  422ac0:	pop    ecx
  422ac1:	stos   DWORD PTR es:[edi],eax
  422ac2:	call   0xf10:0x31f0acf8
  422ac9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422aca:	or     eax,0xe7f5c1da
  422ad0:	adc    ebp,DWORD PTR [ebx]
  422ad2:	clc    
  422ad3:	add    edx,edi
  422ad5:	jmp    0xca349f8b
  422ada:	imul   edx,DWORD PTR [esi-0x4cb5ee17],0x17
  422ae1:	sub    dl,bl
  422ae3:	cmc    
  422ae4:	push   ebx
  422ae5:	sbb    DWORD PTR [edx],edi
  422ae7:	in     al,dx
  422ae8:	test   DWORD PTR [ebx-0x26979f94],edi
  422aee:	retf   
  422aef:	cmp    eax,0x6c282872
  422af4:	sbb    BYTE PTR [ecx-0x2da83484],dl
  422afa:	loop   0x422ac9
  422afc:	imul   esi,DWORD PTR [edx],0x60
  422aff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b00:	cmp    DWORD PTR [ecx],eax
  422b02:	pop    edx
  422b03:	or     dh,BYTE PTR [esp+edi*4]
  422b06:	stos   BYTE PTR es:[edi],al
  422b07:	sbb    ah,BYTE PTR [ecx+0x44]
  422b0a:	cmp    ah,0xdb
  422b0d:	gs adc al,0x88
  422b10:	sbb    dh,BYTE PTR ds:0x38b0eeac
  422b16:	in     eax,0x12
  422b18:	stos   BYTE PTR es:[edi],al
  422b19:	mov    dl,0x5d
  422b1b:	ds call 0xd6c6:0x1bbcf7eb
  422b23:	and    esp,eax
  422b25:	mov    ah,0x60
  422b27:	popf   
  422b28:	push   esp
  422b29:	pop    edi
  422b2a:	mov    dl,0x66
  422b2c:	mov    WORD PTR [ebx-0x2a],?
  422b2f:	push   edi
  422b30:	rcl    edx,0xcf
  422b33:	lahf   
  422b34:	mov    edx,0xad3ffb60
  422b39:	sub    BYTE PTR [edx],0xba
  422b3c:	mov    ecx,DWORD PTR [eax]
  422b3e:	shl    ah,1
  422b40:	pop    esp
  422b41:	ds xchg esp,eax
  422b43:	xchg   ebx,eax
  422b44:	inc    esi
  422b45:	shl    BYTE PTR [edi+0x46],0x55
  422b49:	mov    ah,0xac
  422b4b:	add    esi,DWORD PTR [ebp-0x67e835f0]
  422b51:	fist   DWORD PTR [esi+ebp*2]
  422b54:	int3   
  422b55:	jmp    0xfb430e95
  422b5a:	inc    ecx
  422b5b:	lock mov ah,0x5d
  422b5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b5f:	jge    0x422bbf
  422b61:	(bad)  
  422b62:	icebp  
  422b63:	xlat   BYTE PTR ds:[ebx]
  422b64:	mov    DWORD PTR [edx+0x6c],edi
  422b67:	dec    esi
  422b68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b69:	push   eax
  422b6a:	sbb    DWORD PTR [ecx+0x43],ecx
  422b6d:	leave  
  422b6e:	sbb    dl,BYTE PTR [edi+0x7585f792]
  422b74:	cmp    al,0xbb
  422b76:	cmp    eax,0x7ff646e0
  422b7b:	xor    ebp,ebp
  422b7d:	int3   
  422b7e:	imul   ecx,DWORD PTR [ecx+0x32],0x4f
  422b82:	add    BYTE PTR [esi+0x57837358],0xb8
  422b89:	out    0x50,eax
  422b8b:	repz dec ebx
  422b8d:	adc    edi,DWORD PTR [ebx+0x5c77f5ff]
  422b93:	pop    edx
  422b94:	fld    TBYTE PTR [ebp-0x76]
  422b97:	test   al,0x41
  422b99:	arpl   sp,sp
  422b9b:	scas   eax,DWORD PTR es:[edi]
  422b9c:	cmc    
  422b9d:	xor    cl,ah
  422b9f:	loopne 0x422bf3
  422ba1:	xlat   BYTE PTR ds:[ebx]
  422ba2:	mov    esi,0xb4802947
  422ba7:	inc    ax
  422ba9:	cli    
  422baa:	sbb    ah,BYTE PTR [esi+0x1bd36710]
  422bb0:	jbe    0x422bd1
  422bb2:	std    
  422bb3:	inc    edx
  422bb4:	cmp    esp,0xffffff9a
  422bb7:	loope  0x422c1b
  422bb9:	jbe    0x422bb7
  422bbb:	jo     0x422c13
  422bbd:	nop
  422bbe:	push   edx
  422bbf:	mov    cl,0x77
  422bc1:	push   ebp
  422bc2:	xchg   DWORD PTR [ebx-0x4e],ecx
  422bc5:	iret   
  422bc6:	je     0x422b94
  422bc8:	sub    al,ch
  422bca:	jmp    0x422b8c
  422bcc:	or     bh,BYTE PTR [ecx]
  422bce:	fwait
  422bcf:	dec    ebp
  422bd0:	push   esp
  422bd1:	cmc    
  422bd2:	adc    esp,DWORD PTR [ebx-0x3]
  422bd5:	xor    BYTE PTR [ebp-0x23fe8843],dl
  422bdb:	popf   
  422bdc:	popa   
  422bdd:	call   0xedbe485f
  422be2:	push   edi
  422be3:	fs dec ebx
  422be5:	je     0x422b7a
  422be7:	dec    esi
  422be8:	inc    ebx
  422be9:	fwait
  422bea:	or     edx,DWORD PTR [esi]
  422bec:	outs   dx,DWORD PTR ds:[esi]
  422bed:	sub    dl,bh
  422bef:	icebp  
  422bf0:	pushf  
  422bf1:	loopne 0x422c6c
  422bf3:	clc    
  422bf4:	push   ds
  422bf5:	std    
  422bf6:	cld    
  422bf7:	mov    dl,0xd5
  422bf9:	data16 arpl WORD PTR [edx-0x22],si
  422bfd:	mov    esp,DWORD PTR [esp+edi*8]
  422c00:	xor    esi,DWORD PTR [ecx]
  422c02:	xor    DWORD PTR [edi-0x78182491],edi
  422c08:	fbld   TBYTE PTR [esi+eiz*8-0x695667e7]
  422c0f:	cmp    BYTE PTR [ecx],dl
  422c11:	test   al,0xf0
  422c13:	or     BYTE PTR [edx+edx*4],ah
  422c16:	fisubr WORD PTR ds:0x127ad911
  422c1c:	pushf  
  422c1d:	clc    
  422c1e:	aas    
  422c1f:	or     DWORD PTR [esi+0x3],esp
  422c22:	xchg   ebp,eax
  422c23:	sbb    esi,DWORD PTR [edi-0x2666702f]
  422c29:	stc    
  422c2a:	jne    0x422c5f
  422c2c:	push   ebp
  422c2d:	mov    ah,0x9d
  422c2f:	xor    edx,esi
  422c31:	ror    BYTE PTR [esi-0x5928c997],0x25
  422c38:	lods   al,BYTE PTR ds:[esi]
  422c39:	jbe    0x422c38
  422c3b:	mov    ah,bl
  422c3d:	add    BYTE PTR [esi-0x2d94112],cl
  422c43:	retf   
  422c44:	push   cs
  422c45:	stos   DWORD PTR es:[edi],eax
  422c46:	vshufps ymm6,ymm3,YMMWORD PTR [ebx+0x33],0xeb
  422c4c:	mov    edx,DWORD PTR [edx]
  422c4e:	push   0x15
  422c50:	idiv   BYTE PTR [edx+ecx*2-0x77e361e0]
  422c57:	mov    esp,0x24073d9b
  422c5c:	mov    ch,0xb3
  422c5e:	movnti DWORD PTR [edx+eiz*4+0x6],edi
  422c63:	xor    eax,0xa6436b22
  422c68:	enter  0x6124,0x8d
  422c6c:	ret    
  422c6d:	out    dx,al
  422c6e:	xchg   BYTE PTR [ecx+eax*2-0x22],ch
  422c72:	cwde   
  422c73:	sub    eax,0xd80301b3
  422c78:	push   ebx
  422c79:	jae    0x422c47
  422c7b:	push   ss
  422c7c:	outs   dx,BYTE PTR ds:[esi]
  422c7d:	cmp    BYTE PTR [ecx-0x38cfec4f],0x60
  422c84:	jno    0x422d02
  422c86:	sbb    ebx,DWORD PTR [ebx+0x18]
  422c89:	sbb    ah,BYTE PTR fs:[eax]
  422c8c:	scas   eax,DWORD PTR es:[edi]
  422c8d:	xor    BYTE PTR [edi-0x1],dl
  422c90:	xchg   al,bl
  422c92:	mov    dl,0x13
  422c94:	sub    esp,DWORD PTR [esi]
  422c96:	cwde   
  422c97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c98:	mov    ecx,0x6eae4b12
  422c9d:	pop    edx
  422c9e:	hlt    
  422c9f:	popf   
  422ca0:	jae    0x422c49
  422ca2:	and    DWORD PTR [edx],0xf5bb80f2
  422ca8:	mov    edx,0xb68f957b
  422cad:	(bad)  
  422cae:	jbe    0x422c7c
  422cb0:	sahf   
  422cb1:	out    0x9e,eax
  422cb3:	mov    edi,DWORD PTR [ecx+0x1c]
  422cb6:	adc    DWORD PTR [edi],eax
  422cb8:	inc    esp
  422cb9:	mov    ch,BYTE PTR [edx+ebx*8]
  422cbc:	sub    DWORD PTR [eax+edx*4-0x3259f9fd],edi
  422cc3:	jns    0x422cda
  422cc5:	or     DWORD PTR [ecx+0x10599d8],ebx
  422ccb:	or     bl,bh
  422ccd:	push   es
  422cce:	not    DWORD PTR [eax+0x3e]
  422cd1:	repz hlt 
  422cd3:	mov    bl,0x25
  422cd5:	xor    ch,dh
  422cd7:	in     al,0x8e
  422cd9:	clc    
  422cda:	das    
  422cdb:	pop    es
  422cdc:	sub    BYTE PTR [eax-0x3c74fc58],bh
  422ce2:	adc    dh,BYTE PTR [ecx]
  422ce4:	mov    ebp,0xf83f37af
  422ce9:	arpl   bx,ax
  422ceb:	cdq    
  422cec:	retf   0x7ce3
  422cef:	adc    BYTE PTR [edx],0x38
  422cf2:	mov    ah,0xfc
  422cf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cf5:	into   
  422cf6:	les    edx,FWORD PTR [edi-0x6f]
  422cf9:	xchg   ebp,eax
  422cfa:	repz popa 
  422cfc:	push   ebx
  422cfd:	call   0xbc50:0xe8c21bc6
  422d04:	push   ebx
  422d05:	cdq    
  422d06:	add    DWORD PTR [eax],0x3e7d04ae
  422d0c:	dec    ebp
  422d0d:	mov    edi,0x9d491819
  422d12:	ins    DWORD PTR es:[edi],dx
  422d13:	xchg   DWORD PTR [esi+0x66536675],ebx
  422d19:	into   
  422d1a:	push   esp
  422d1b:	dec    ecx
  422d1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d1d:	cdq    
  422d1e:	sbb    cl,BYTE PTR [edi+0x27096f04]
  422d24:	mov    al,0x2c
  422d26:	dec    ebx
  422d27:	mov    edx,0xfd56b343
  422d2c:	xchg   ebx,eax
  422d2d:	clc    
  422d2e:	imul   esi,DWORD PTR [edx],0xffffffa2
  422d31:	xor    al,0xbd
  422d33:	scas   eax,DWORD PTR es:[edi]
  422d34:	jae    0x422d08
  422d36:	xchg   ebx,eax
  422d37:	test   BYTE PTR [eax],bh
  422d39:	push   es
  422d3a:	jp     0x422d12
  422d3c:	add    ebx,DWORD PTR [ecx+edx*2]
  422d3f:	jmp    0x8ed83a23
  422d44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d45:	test   eax,0x5265c0c5
  422d4a:	ds mov ebp,0x911c19be
  422d50:	mov    bl,0x8c
  422d52:	ret    0xd29b
  422d55:	mov    bh,0x76
  422d57:	xor    al,0x2f
  422d59:	loop   0x422ce5
  422d5b:	fnstsw WORD PTR [edi-0x4d]
  422d5e:	out    dx,al
  422d5f:	jecxz  0x422d96
  422d61:	or     eax,0x88607bc2
  422d66:	xor    al,0x91
  422d68:	popf   
  422d69:	rcl    DWORD PTR [esi-0x3eb9cc74],1
  422d6f:	pop    ds
  422d70:	jne    0x422ded
  422d72:	pop    ds
  422d73:	lock mov esi,0x8cce2365
  422d79:	lea    esi,[ecx+0x38]
  422d7c:	add    cl,BYTE PTR [eax]
  422d7e:	pop    ss
  422d7f:	js     0x422d9d
  422d81:	in     eax,dx
  422d82:	dec    ebp
  422d83:	dec    dx
  422d85:	fcomip st,st(6)
  422d87:	test   DWORD PTR [edx],eax
  422d89:	push   eax
  422d8a:	das    
  422d8b:	ret    0x2910
  422d8e:	scas   eax,DWORD PTR es:[edi]
  422d8f:	sub    DWORD PTR [ecx],esp
  422d91:	add    ecx,DWORD PTR ds:0x8901175
  422d97:	(bad)  [edx-0x6f]
  422d9b:	aaa    
  422d9c:	mov    ah,0x4d
  422d9e:	loopne 0x422dc1
  422da0:	clc    
  422da1:	cmp    BYTE PTR [ecx],dl
  422da3:	mov    ebx,0xb686ceb7
  422da8:	call   0xa0f3a98d
  422dad:	inc    edi
  422dae:	shl    BYTE PTR ds:0x29d04b22,0xf1
  422db5:	adc    al,0xcf
  422db7:	xchg   DWORD PTR [eax+0x6163e616],ebp
  422dbd:	xchg   edi,eax
  422dbe:	pop    es
  422dbf:	loope  0x422d6f
  422dc1:	xchg   ecx,eax
  422dc2:	imul   ebx,DWORD PTR [edi+0x2d84df99],0x98d9e707
  422dcc:	or     DWORD PTR [edi],0xffffffe5
  422dcf:	popf   
  422dd0:	or     dl,BYTE PTR [edi-0x11]
  422dd3:	out    0x74,eax
  422dd5:	sbb    DWORD PTR [eax+0x1876d4ba],ebp
  422ddb:	les    esp,FWORD PTR es:[ebp+0x17]
  422ddf:	stc    
  422de0:	retf   
  422de1:	stc    
  422de2:	pusha  
  422de3:	dec    ebx
  422de4:	and    BYTE PTR [ebx+0x22350096],cl
  422dea:	ins    DWORD PTR es:[edi],dx
  422deb:	push   edx
  422dec:	shl    DWORD PTR [esi],1
  422dee:	pop    edi
  422def:	popa   
  422df0:	loop   0x422e3e
  422df2:	cmp    edi,DWORD PTR ds:0xa8151e4
  422df8:	mov    eax,0x4d44b403
  422dfd:	sbb    ecx,edi
  422dff:	cli    
  422e00:	pop    ebp
  422e01:	repz arpl WORD PTR [edi],cx
  422e04:	add    eax,DWORD PTR [ebp+0x2aad2d3b]
  422e0a:	jge    0x422e18
  422e0c:	pop    eax
  422e0d:	cs cs dec esp
  422e10:	push   ss
  422e11:	sbb    BYTE PTR [esi-0x547e2fd5],cl
  422e17:	fisubr WORD PTR [ecx]
  422e19:	aad    0xd2
  422e1b:	dec    edx
  422e1c:	fstp   DWORD PTR [ebx-0x4d7dc8cb]
  422e22:	pop    esi
  422e23:	pop    edi
  422e24:	add    al,0x7e
  422e26:	and    cl,bh
  422e28:	push   esi
  422e29:	cmp    eax,0x1f55a419
  422e2e:	sub    BYTE PTR [esi+0x3d196d1d],bl
  422e34:	xchg   esp,eax
  422e35:	xor    al,0x8
  422e37:	addr16 cs and eax,0x675f828a
  422e3e:	je     0x422e5d
  422e40:	mov    ah,0xf4
  422e42:	mov    edi,0xd762354f
  422e47:	hlt    
  422e48:	push   ebp
  422e4a:	jmp    FWORD PTR [ebx-0x21]
  422e4d:	push   ecx
  422e4e:	iret   
  422e4f:	mov    fs,WORD PTR [esi+0x9e565e0]
  422e55:	dec    ebp
  422e56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e57:	add    DWORD PTR [eax],eax
  422e59:	clc    
  422e5a:	add    al,0x0
  422e5c:	add    BYTE PTR [edx],bl
  422e5e:	jp     0x422e62
  422e60:	and    eax,0x90881167
  422e65:	into   
  422e66:	int    0x21
  422e68:	call   0x940aa502
  422e6d:	push   0xed51a78a
  422e72:	jl     0x422e99
  422e74:	sbb    DWORD PTR [eax+0x349a1620],ecx
  422e7a:	mov    edx,0x8963b2f2
  422e7f:	adc    al,0x81
  422e81:	mov    ch,0x12
  422e83:	push   cs
  422e84:	xchg   BYTE PTR ds:0x922f7442,cl
  422e8a:	stos   BYTE PTR es:[edi],al
  422e8b:	stc    
  422e8c:	add    bh,BYTE PTR [edi+ecx*1]
  422e8f:	mov    eax,ds:0x7f6f0ee9
  422e94:	xchg   edx,eax
  422e95:	test   BYTE PTR ds:0x5af1d183,ch
  422e9b:	mov    cl,0xf0
  422e9d:	sub    cl,BYTE PTR [ebx]
  422e9f:	pop    ecx
  422ea0:	push   0x89f3c5b7
  422ea5:	sub    esi,DWORD PTR [eax]
  422ea7:	imul   di,WORD PTR [ecx],0xb8c7
  422eac:	or     DWORD PTR [eax],ebp
  422eae:	stos   DWORD PTR es:[edi],eax
  422eaf:	mov    ?,WORD PTR [ecx]
  422eb1:	nop
  422eb2:	cld    
  422eb3:	or     BYTE PTR [eax+0x5e462b9f],ah
  422eb9:	inc    esi
  422eba:	(bad)  
  422ebb:	jo     0x422e6e
  422ebd:	mov    BYTE PTR [ebx-0x58],dl
  422ec0:	out    dx,eax
  422ec1:	or     eax,0x177bec13
  422ec6:	inc    ebx
  422ec7:	mov    ds:0x1ae69086,al
  422ecc:	push   esp
  422ecd:	inc    eax
  422ece:	dec    ebx
  422ecf:	xor    eax,edi
  422ed1:	cwde   
  422ed2:	stos   BYTE PTR es:[edi],al
  422ed3:	pop    esp
  422ed4:	xchg   dh,ah
  422ed6:	add    DWORD PTR [edi-0x521c150c],esp
  422edc:	adc    eax,0x2acfea82
  422ee1:	sub    ebx,ebp
  422ee3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ee4:	mov    eax,ds:0xd9f4fb5a
  422ee9:	clc    
  422eea:	pop    ebx
  422eeb:	(bad)  
  422eec:	jmp    0x5dd2:0x8a12c300
  422ef3:	std    
  422ef4:	retf   0x5f8
  422ef7:	gs push ebx
  422ef9:	scas   eax,DWORD PTR es:[edi]
  422efa:	jg     0x422e89
  422efc:	mov    eax,0xed59e1ca
  422f01:	push   edi
  422f02:	xor    DWORD PTR [ecx-0x3b],ebp
  422f05:	cmp    BYTE PTR [edx],dl
  422f07:	jecxz  0x422e94
  422f09:	icebp  
  422f0a:	inc    ebx
  422f0b:	or     DWORD PTR [edx+eax*1],eax
  422f0e:	sub    BYTE PTR [ecx],al
  422f10:	inc    esp
  422f11:	sbb    eax,DWORD PTR [edx-0x6cc947e9]
  422f17:	mov    esi,0x52f5760c
  422f1c:	sbb    esp,esp
  422f1e:	mov    bh,0xa3
  422f20:	inc    esp
  422f21:	sub    al,0xf2
  422f23:	mov    dh,0xf5
  422f25:	out    0xf6,eax
  422f27:	ss xor ebx,esp
  422f2a:	mov    esp,0xfbc57f0e
  422f2f:	test   BYTE PTR [edx],dh
  422f31:	addr16 push cs
  422f33:	push   ebp
  422f34:	mov    edx,ebx
  422f36:	mov    ah,0x6
  422f38:	mov    ds:0x59c8dba4,eax
  422f3d:	and    eax,0x4af63018
  422f42:	aad    0x43
  422f44:	inc    eax
  422f45:	lds    ecx,FWORD PTR [edi-0x26e09706]
  422f4b:	inc    edx
  422f4c:	les    eax,FWORD PTR ds:0xf7381066
  422f52:	test   BYTE PTR [ecx+eiz*1],dl
  422f55:	cmovns eax,DWORD PTR [ebp+0x7a]
  422f59:	xchg   ecx,eax
  422f5a:	cmp    al,0x5b
  422f5c:	imul   edx,DWORD PTR [esi+ecx*1+0x35],0xffffff85
  422f61:	imul   esi,ebx,0x2ba06ca8
  422f67:	jmp    0x18d2ea1c
  422f6c:	adc    eax,0xeefbf371
  422f71:	sub    edx,esi
  422f73:	gs out 0x54,eax
  422f76:	mov    esp,0x6540b796
  422f7b:	sub    al,0x9
  422f7d:	mov    ds,WORD PTR [ecx+0x545de9cf]
  422f83:	mov    ecx,0xa1c4840f
  422f88:	mov    esi,0xfb3f4dda
  422f8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f8e:	ja     0x422fd3
  422f90:	and    al,0x64
  422f92:	shl    DWORD PTR [edi-0xf],cl
  422f95:	inc    edx
  422f96:	ja     0x422f53
  422f98:	cmp    al,0x1c
  422f9a:	cmp    dl,dh
  422f9c:	xchg   edx,eax
  422f9d:	bound  ebp,QWORD PTR [eax+0x6a]
  422fa0:	inc    eax
  422fa1:	mov    ebp,0xcce61501
  422fa6:	fdiv   QWORD PTR [edx]
  422fa8:	and    dl,BYTE PTR [ebx-0x8]
  422fab:	(bad)  
  422fac:	cmp    DWORD PTR [edi-0x9],esp
  422faf:	jle    0x422f9c
  422fb1:	test   edi,ebp
  422fb3:	rcr    DWORD PTR [ecx],1
  422fb5:	mov    bl,BYTE PTR [eax+0x6d6e03e9]
  422fbb:	sub    eax,0xafb3e326
  422fc0:	jno    0x422ff6
  422fc2:	sbb    dh,BYTE PTR ds:0x407f6b7f
  422fc8:	mov    ah,0x94
  422fca:	(bad)  
  422fcb:	pop    esi
  422fcc:	(bad)  [ebp+0x59]
  422fcf:	mov    ebx,0xad5ec105
  422fd4:	xchg   ecx,eax
  422fd5:	inc    edx
  422fd6:	and    eax,0xec87f43f
  422fdb:	and    al,0xce
  422fdd:	xlat   BYTE PTR ds:[ebx]
  422fde:	into   
  422fdf:	mov    ah,0x48
  422fe1:	hlt    
  422fe2:	add    ebp,DWORD PTR [ecx]
  422fe4:	inc    edx
  422fe6:	or     BYTE PTR [ebx],dh
  422fe8:	jle    0x423051
  422fea:	out    0x34,al
  422fec:	out    0xe1,al
  422fee:	cld    
  422fef:	ins    DWORD PTR es:[edi],dx
  422ff0:	add    cl,BYTE PTR [esi+esi*2]
  422ff3:	inc    eax
  422ff4:	out    dx,al
  422ff5:	mov    bh,0x64
  422ff7:	std    
  422ff8:	ss mov eax,0xe90f6969
  422ffe:	popa   
  422fff:	cmp    dl,BYTE PTR [eax-0x18b1cd20]
  423005:	xor    DWORD PTR [ecx+ecx*8],ebx
  423008:	mov    cl,0x57
  42300a:	ins    BYTE PTR es:[edi],dx
  42300b:	mov    cl,0xd3
  42300d:	cmp    BYTE PTR [edx+edx*2+0x33bd0056],bl
  423014:	ds aas 
  423016:	(bad)  
  423018:	mov    ebp,0x9c6588d0
  42301d:	cmp    BYTE PTR [ebx-0x7bed1596],0x42
  423024:	push   eax
  423025:	addr16 (bad) 
  423028:	sbb    al,0xea
  42302a:	inc    ebp
  42302b:	mov    eax,0xd130e025
  423030:	add    DWORD PTR [ebx-0x6c],0xffffffe8
  423034:	push   es
  423035:	ins    DWORD PTR es:[edi],dx
  423036:	sub    ah,BYTE PTR [edx+0x432c61ad]
  42303c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42303d:	cmp    DWORD PTR es:[esi],ebx
  423040:	cmp    bh,BYTE PTR [eax-0x1f3d9086]
  423046:	push   esi
  423047:	test   al,0xa8
  423049:	adc    eax,0x52999b7f
  42304e:	int3   
  42304f:	adc    DWORD PTR [ecx-0x10],ecx
  423052:	xchg   edi,eax
  423053:	and    DWORD PTR [edi+eiz*2+0x2c],esi
  423057:	test   BYTE PTR ds:0x95b727c0,ch
  42305d:	inc    ebx
  42305e:	inc    ebx
  42305f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423060:	xchg   esp,eax
  423061:	jp     0x423002
  423063:	or     cl,BYTE PTR [edx+0x6a7fb984]
  423069:	call   0xb40e789e
  42306e:	mov    ds:0xe65d922c,eax
  423073:	das    
  423074:	mov    ds:0x4cfb1346,al
  423079:	xlat   BYTE PTR ds:[ebx]
  42307a:	xchg   ebp,eax
  42307b:	push   ss
  42307c:	ins    DWORD PTR es:[edi],dx
  42307d:	ret    0x323
  423080:	fmul   st(3),st
  423082:	aas    
  423083:	(bad)  
  423084:	push   edx
  423085:	inc    ecx
  423086:	ins    DWORD PTR es:[edi],dx
  423087:	xor    BYTE PTR [ebx-0x2a2d3584],ah
  42308d:	adc    cl,dl
  42308f:	out    dx,al
  423090:	repz lahf 
  423092:	cld    
  423093:	pop    ds
  423094:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423095:	cmp    eax,0xaf920239
  42309a:	mov    ebx,0x46566cb6
  42309f:	and    esi,DWORD PTR [edi-0x12]
  4230a2:	or     DWORD PTR [eax+0x6],edi
  4230a5:	cmp    DWORD PTR [eax],edx
  4230a7:	add    ebx,edi
  4230a9:	arpl   WORD PTR [edi+0x52e7c4d],cx
  4230af:	inc    edx
  4230b0:	sub    eax,edx
  4230b2:	std    
  4230b3:	pop    ss
  4230b4:	into   
  4230b5:	gs push esp
  4230b7:	(bad)  
  4230b8:	lds    esp,FWORD PTR [ebp+0x39]
  4230bb:	mov    ah,0x89
  4230bd:	mov    ebx,0xd4af225a
  4230c2:	cmp    eax,0x9dba908d
  4230c7:	push   cs
  4230c8:	pop    esi
  4230c9:	add    BYTE PTR [eax],ah
  4230cb:	rol    bl,0xff
  4230ce:	aaa    
  4230cf:	jl     0x42305e
  4230d1:	imul   esp,edx,0x7c81153e
  4230d7:	fiadd  WORD PTR [esp+eiz*2]
  4230da:	fs jp  0x4230dc
  4230dd:	lahf   
  4230de:	jnp    0x42311f
  4230e0:	mov    BYTE PTR [esp+esi*4],ah
  4230e3:	pop    ds
  4230e4:	sbb    bh,BYTE PTR [ecx+0x68]
  4230e7:	mov    ebx,0xf664d1d3
  4230ec:	jp     0x4230b6
  4230ee:	imul   BYTE PTR [ebx]
  4230f0:	stc    
  4230f1:	jno    0x42314a
  4230f3:	int    0x59
  4230f5:	inc    esp
  4230f6:	mov    esi,?
  4230f8:	add    al,0xdf
  4230fa:	mov    bh,ch
  4230fc:	mov    ds:0x4d367c37,eax
  423101:	mov    ds:0xebd4e40b,al
  423106:	jne    0x42314c
  423108:	shl    BYTE PTR [eax+0x14e4e6d3],cl
  42310e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42310f:	xchg   edx,eax
  423110:	sub    esp,ebx
  423112:	or     ch,0x57
  423115:	jg     0x423179
  423117:	shl    DWORD PTR [ebx],0x8d
  42311a:	sub    eax,0x4266219c
  42311f:	neg    BYTE PTR [esi+0x31]
  423122:	push   0x7e3df49a
  423127:	shr    DWORD PTR [ebx],0xf9
  42312a:	or     eax,0x16dd2caa
  42312f:	or     eax,0x36db2fd4
  423134:	add    al,dh
  423136:	xor    al,0xb1
  423138:	and    BYTE PTR [ebp+0x77],bl
  42313b:	xchg   ecx,eax
  42313c:	test   BYTE PTR [edi+0x67],dh
  42313f:	xor    DWORD PTR [esi+0x23a78169],edx
  423145:	sbb    DWORD PTR [esi-0x6f],0xffffffc6
  423149:	pop    ecx
  42314a:	aas    
  42314b:	shl    BYTE PTR [ebx],cl
  42314d:	sbb    BYTE PTR [eax+0x37],al
  423150:	adc    BYTE PTR [ebx+0x44f5e6d6],cl
  423156:	lahf   
  423157:	fst    QWORD PTR [eax+0x7c7134dc]
  42315d:	mov    esp,0xa16eebc0
  423162:	(bad)  
  423163:	jp     0x423162
  423165:	add    eax,DWORD PTR ds:[edx-0x28]
  423169:	rcr    DWORD PTR ds:0xe2af7a50,cl
  42316f:	lods   al,BYTE PTR ds:[esi]
  423170:	stos   DWORD PTR es:[edi],eax
  423171:	pusha  
  423172:	or     al,0x71
  423174:	imul   ecx,eax,0x58
  423177:	leave  
  423178:	or     ch,BYTE PTR [ecx-0x7eef1711]
  42317e:	jp     0x423107
  423180:	sub    BYTE PTR [esp+ebx*1],dl
  423183:	dec    ecx
  423184:	hlt    
  423185:	int3   
  423186:	push   esi
  423187:	jecxz  0x423136
  423189:	lea    edx,[eax-0x2c9ae9fc]
  42318f:	sub    bl,BYTE PTR [esi+ecx*8-0x28584635]
  423196:	cmp    esi,DWORD PTR [edx+eax*8-0x775feb0f]
  42319d:	mov    al,ds:0x5637449
  4231a2:	xchg   BYTE PTR [eax+0x26],dh
  4231a5:	jne    0x423194
  4231a7:	xor    al,0xc3
  4231a9:	sub    edi,DWORD PTR [ecx-0x2b03ab52]
  4231af:	xchg   edi,eax
  4231b0:	es jp  0x423180
  4231b3:	dec    eax
  4231b4:	fisubr DWORD PTR [eax-0x43]
  4231b7:	jnp    0x42313c
  4231b9:	ret    
  4231ba:	or     dl,dh
  4231bc:	mov    ebp,0x8b45f700
  4231c1:	leave  
  4231c2:	fldcw  WORD PTR [esi-0x2f7e3b0d]
  4231c8:	scas   al,BYTE PTR es:[edi]
  4231c9:	(bad)  
  4231cb:	xchg   edi,eax
  4231cc:	adc    DWORD PTR [esi+0x591e88a0],eax
  4231d2:	adc    BYTE PTR [edi-0x7f],bl
  4231d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231d6:	pushf  
  4231d7:	push   es
  4231d8:	sub    BYTE PTR [edi+0x6dabd8e5],al
  4231de:	ins    DWORD PTR es:[edi],dx
  4231df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4231e0:	in     al,dx
  4231e1:	retf   0x63a5
  4231e4:	jb     0x423260
  4231e6:	fnstsw WORD PTR [edx]
  4231e8:	cs test eax,0x643a76a2
  4231ee:	sbb    al,0x2e
  4231f0:	fnstenv [ebp-0x1ffbf9ad]
  4231f6:	enter  0x4a40,0xa6
  4231fa:	xchg   cl,bh
  4231fc:	jns    0x4231c7
  4231fe:	pop    esi
  4231ff:	push   ecx
  423200:	pusha  
  423201:	mov    eax,ds:0x171c0ae7
  423206:	bound  ebp,QWORD PTR [edx-0x208fc6a3]
  42320c:	and    eax,0xcb19cdbf
  423211:	gs dec ebp
  423213:	jecxz  0x423254
  423215:	cs jno 0x42327a
  423218:	jmp    0x4d4a:0x406f712f
  42321f:	dec    eax
  423220:	out    dx,al
  423221:	xor    eax,0xa2952d27
  423226:	jmp    0x42323d
  423228:	push   es
  423229:	ror    DWORD PTR [ebx-0x15],cl
  42322c:	mov    WORD PTR [ebp+0x1c],?
  42322f:	test   DWORD PTR [eax],edi
  423231:	lods   eax,DWORD PTR ds:[esi]
  423232:	cld    
  423233:	xchg   DWORD PTR [ebx+0x77269a28],edi
  423239:	push   esi
  42323a:	in     eax,0xff
  42323c:	mov    ebx,0x96b322c3
  423241:	sub    ch,dl
  423243:	jne    0x42326d
  423245:	lods   eax,DWORD PTR ds:[esi]
  423246:	pop    edi
  423247:	adc    edi,ebp
  423249:	test   BYTE PTR [esp+ebp*1],dl
  42324c:	or     dl,dh
  42324e:	in     eax,0x11
  423250:	in     al,0x20
  423252:	das    
  423253:	pop    edx
  423254:	push   ecx
  423255:	pop    edi
  423256:	pop    esp
  423257:	lds    esp,FWORD PTR [eax]
  423259:	jnp    0x423273
  42325b:	iret   
  42325c:	dec    edi
  42325d:	cmc    
  42325e:	fs ret 
  423260:	xchg   esi,eax
  423261:	adc    BYTE PTR [edx+edi*4+0x35],dl
  423265:	mov    edx,0xda3e25f0
  42326a:	jbe    0x42328e
  42326c:	mov    ah,BYTE PTR [edi+0x45]
  42326f:	ins    BYTE PTR es:[edi],dx
  423270:	into   
  423271:	rcl    DWORD PTR [esi-0x2d],0x23
  423275:	addr16 (bad) 
  423277:	mov    esi,0x84d4a761
  42327c:	ror    dh,cl
  42327e:	(bad)  
  42327f:	and    al,0xbe
  423281:	(bad)  
  423282:	dec    edi
  423283:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423284:	or     bh,dl
  423286:	ja     0x423302
  423288:	out    0xd1,eax
  42328a:	ror    BYTE PTR [esp+ebx*2],0xbd
  42328e:	dec    ebp
  42328f:	cli    
  423290:	ja     0x4232ab
  423292:	jmp    0xe13f:0x8cddcb0c
  423299:	push   0x4a790039
  42329e:	mov    ds:0xb0d40c40,al
  4232a3:	mov    ds:0xa7b974bf,eax
  4232a8:	sbb    bl,0x30
  4232ab:	mov    edx,0x5c582082
  4232b0:	dec    eax
  4232b1:	push   ds
  4232b2:	add    BYTE PTR [ecx],dl
  4232b4:	shr    DWORD PTR [ecx+0x8986377],cl
  4232ba:	mov    ebx,0xf60a1ba9
  4232bf:	mov    esp,0xa4632994
  4232c4:	adc    cl,BYTE PTR [esi]
  4232c6:	call   0x90e1:0x95e9cef0
  4232cd:	add    BYTE PTR [esi+0x1e],bh
  4232d0:	imul   bh
  4232d2:	ins    DWORD PTR es:[edi],dx
  4232d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232d4:	gs push 0x14
  4232d7:	cmp    al,0xa
  4232d9:	scas   eax,DWORD PTR es:[edi]
  4232da:	pop    ecx
  4232db:	xchg   esi,eax
  4232dc:	popa   
  4232dd:	xchg   DWORD PTR [ebx],eax
  4232df:	mov    eax,ds:0x30e06073
  4232e4:	mov    eax,ds:0xac6fe261
  4232e9:	pushf  
  4232ea:	fistp  WORD PTR [edi]
  4232ec:	scas   al,BYTE PTR es:[edi]
  4232ed:	sub    BYTE PTR [edx],bl
  4232ef:	xor    DWORD PTR [esi],edx
  4232f1:	pop    edx
  4232f2:	daa    
  4232f3:	cld    
  4232f4:	adc    ecx,DWORD PTR [ebx-0x29c9d34d]
  4232fa:	push   esi
  4232fb:	test   eax,0xa28d690f
  423300:	repnz fsubr DWORD PTR [ebx+esi*4+0x7d]
  423305:	nop
  423306:	sbb    eax,0x448e6be9
  42330b:	inc    ecx
  42330c:	dec    esp
  42330d:	push   eax
  42330e:	les    ebx,FWORD PTR [eax]
  423310:	dec    ebp
  423311:	ds jne 0x423384
  423314:	add    BYTE PTR [eax],dh
  423316:	xor    BYTE PTR [eax+0x45dce242],0x75
  42331d:	in     eax,dx
  42331e:	mov    ds:0x610d5991,eax
  423323:	bound  ebp,QWORD PTR [ebx-0x1328c045]
  423329:	test   BYTE PTR [ebx-0x266cd108],bh
  42332f:	add    BYTE PTR [ebp+0x71],cl
  423332:	mov    al,0x8a
  423334:	pop    eax
  423335:	sbb    DWORD PTR [edx+ecx*2+0x33],edi
  423339:	add    bl,BYTE PTR [ecx+ebp*2-0x159b82f2]
  423340:	push   edx
  423341:	pop    eax
  423342:	into   
  423343:	cmp    BYTE PTR [edi],0xab
  423346:	pop    edx
  423347:	xchg   edx,eax
  423348:	sbb    DWORD PTR [ebp-0x11],0xe223885d
  42334f:	jae    0x42339d
  423351:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423352:	(bad)  
  423353:	sbb    DWORD PTR [ebp+0xf],ecx
  423356:	pop    ebx
  423357:	test   BYTE PTR [esi],dl
  423359:	aam    0xdf
  42335b:	lahf   
  42335c:	pop    ebx
  42335d:	xchg   ebp,eax
  42335e:	sub    ecx,eax
  423360:	pop    esp
  423361:	int3   
  423362:	ficom  DWORD PTR [eax+0x1aa45e7]
  423368:	add    al,bh
  42336a:	add    al,0x0
  42336c:	add    BYTE PTR [esi],al
  42336e:	xlat   BYTE PTR ds:[ebx]
  42336f:	and    cl,BYTE PTR [eax]
  423371:	iret   
  423372:	dec    eax
  423373:	push   0x767a2ca8
  423378:	ins    DWORD PTR es:[edi],dx
  423379:	pop    eax
  42337a:	add    ecx,DWORD PTR [esi+esi*4]
  42337d:	xor    eax,0x4fa64890
  423382:	adc    eax,0xe5e564ba
  423387:	jne    0x4233ba
  423389:	cwde   
  42338a:	movups XMMWORD PTR [edx],xmm3
  42338d:	cmp    DWORD PTR [esi-0x83310e5],0xbf7239f4
  423397:	das    
  423398:	fldcw  WORD PTR [ebx+0x2dd7ae41]
  42339e:	scas   al,BYTE PTR es:[edi]
  42339f:	adc    DWORD PTR [edx-0x80],eax
  4233a2:	(bad)
  4233a5:	test   eax,esp
  4233a7:	jo     0x423355
  4233a9:	and    BYTE PTR [eax-0x17],0x38
  4233ad:	mov    bh,0xcb
  4233af:	mov    edx,0xcc5cadc8
  4233b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233b5:	push   esi
  4233b6:	pop    ebx
  4233b7:	aas    
  4233b8:	add    ebx,esi
  4233ba:	mov    ebp,0x972a20cc
  4233bf:	into   
  4233c0:	cmp    ebp,DWORD PTR [ebx-0x66]
  4233c3:	mov    BYTE PTR ss:[ecx],dl
  4233c6:	scas   al,BYTE PTR es:[edi]
  4233c7:	lea    eax,[edi-0x4a]
  4233ca:	fistp  QWORD PTR [ecx+0x19]
  4233cd:	xchg   ecx,eax
  4233ce:	mov    al,0x9e
  4233d0:	pop    ss
  4233d1:	mov    esi,0xd3748537
  4233d6:	fdivr  QWORD PTR [edi+0x1de341e0]
  4233dd:	sar    DWORD PTR ds:0x8843ecff,0xa6
  4233e4:	call   0x71ee7c65
  4233e9:	adc    BYTE PTR ds:0xc33b7c73,0xc0
  4233f0:	dec    ecx
  4233f1:	rol    DWORD PTR [ecx],cl
  4233f3:	inc    edi
  4233f4:	not    BYTE PTR [ebx-0x5b]
  4233f7:	push   0x6b255e0c
  4233fc:	adc    eax,0x22655d33
  423401:	jecxz  0x4233a5
  423403:	dec    esp
  423404:	popf   
  423405:	push   eax
  423406:	cmp    al,0xcf
  423408:	sub    eax,0x4ee7f508
  42340d:	aam    0x91
  42340f:	mov    ah,0xa
  423411:	xor    DWORD PTR [ebp-0x56a5975e],ecx
  423417:	pop    ebp
  423418:	push   eax
  423419:	add    dh,BYTE PTR [ebx+0x7c]
  42341c:	fst    DWORD PTR [esi]
  42341e:	je     0x42343e
  423420:	push   0xffffffb4
  423422:	das    
  423423:	clc    
  423424:	sub    BYTE PTR [ebp-0x68],dh
  423427:	and    DWORD PTR [edi+0x62b0b748],ebx
  42342d:	xchg   edx,eax
  42342e:	pop    ecx
  42342f:	mov    eax,ds:0xb29aec33
  423434:	jle    0x423474
  423436:	inc    ebp
  423437:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423438:	scas   al,BYTE PTR es:[edi]
  423439:	pusha  
  42343a:	bound  eax,QWORD PTR [esi]
  42343c:	retf   0xc50a
  42343f:	ins    DWORD PTR es:[edi],dx
  423440:	test   BYTE PTR [ebx],dh
  423442:	pop    ebx
  423443:	jo     0x4233ec
  423445:	xor    al,0x30
  423447:	inc    esp
  423448:	push   ebx
  423449:	push   ecx
  42344a:	xor    dh,BYTE PTR [edx-0x2f]
  42344d:	mov    dl,BYTE PTR [eax-0x21a8a92b]
  423453:	cmc    
  423454:	retf   0x4d32
  423457:	js     0x4233dd
  423459:	iret   
  42345a:	sbb    eax,0x4c541dae
  42345f:	sub    eax,0x13c2b92c
  423464:	lods   eax,DWORD PTR ds:[esi]
  423465:	sub    al,0xa7
  423467:	adc    BYTE PTR ds:[ecx+edi*4-0x62c744ab],dl
  42346f:	addr16 cmc 
  423471:	mov    ebx,ebp
  423473:	mov    cl,0x1a
  423475:	and    esi,esp
  423477:	mov    ds:0xb83ade40,eax
  42347c:	mov    al,0xc9
  42347e:	in     al,dx
  42347f:	shl    DWORD PTR [esi-0x74e4c74e],1
  423485:	out    dx,eax
  423486:	pusha  
  423487:	or     esi,DWORD PTR ds:0x157293db
  42348d:	jne    0x42342c
  42348f:	jp     0x423469
  423491:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423492:	cmp    al,0x98
  423494:	jge    0x4234a8
  423496:	or     ebx,DWORD PTR [eax+ebp*8+0x77]
  42349a:	leave  
  42349b:	push   ss
  42349c:	aaa    
  42349d:	jmp    0x423476
  42349f:	stos   DWORD PTR es:[edi],eax
  4234a0:	or     ch,BYTE PTR [esi-0x151c0c21]
  4234a6:	cmp    DWORD PTR [edx],0xc7f6ffb9
  4234ac:	sub    DWORD PTR [esi-0x38d21afd],0x1d4ce282
  4234b6:	neg    ebx
  4234b8:	or     DWORD PTR [esi-0x7f],0xffffffb6
  4234bc:	scas   eax,DWORD PTR es:[edi]
  4234bd:	imul   ebx,DWORD PTR [edi+0x1b3b576d],0xffffffb1
  4234c4:	in     al,0xfe
  4234c6:	repnz xchg edx,eax
  4234c8:	cld    
  4234c9:	pop    edi
  4234ca:	mov    edx,0xb5fe95e0
  4234cf:	ror    bh,0xf4
  4234d2:	call   0x6905f38
  4234d7:	rcl    DWORD PTR [ebx+0x372c7436],cl
  4234dd:	or     al,0xa9
  4234df:	xchg   edx,ecx
  4234e1:	ss inc ecx
  4234e3:	sub    esi,DWORD PTR [ecx]
  4234e5:	or     DWORD PTR [ebx-0x153dbfa1],0x5af24c60
  4234ef:	fisttp WORD PTR [ecx+esi*1-0x45]
  4234f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234f4:	jmp    0xa42ce089
  4234f9:	lods   al,BYTE PTR ds:[esi]
  4234fa:	inc    esi
  4234fb:	mov    esp,0x24d7a59f
  423500:	dec    esi
  423501:	popa   
  423502:	cld    
  423503:	fnstsw WORD PTR [esi+0x1f]
  423506:	mov    edi,0xcd6834bc
  42350b:	fsubr  st,st(4)
  42350d:	xchg   DWORD PTR ds:0x6b90a005,ebx
  423513:	push   ss
  423514:	in     al,0xc2
  423516:	scas   eax,DWORD PTR es:[edi]
  423517:	mov    ah,0xf1
  423519:	lods   eax,DWORD PTR ds:[esi]
  42351a:	arpl   WORD PTR [esi+0x3ee9acb1],bp
  423520:	mov    bl,0x2c
  423522:	pop    ebp
  423523:	or     eax,0x3608f6aa
  423528:	stc    
  423529:	xor    ebp,DWORD PTR [edi+0x643d3729]
  42352f:	mov    esi,0x89e30e3
  423534:	or     edi,esi
  423536:	lods   al,BYTE PTR ds:[esi]
  423537:	push   cs
  423538:	aas    
  423539:	jo     0x4234eb
  42353b:	ss cs aas 
  42353e:	icebp  
  42353f:	ins    BYTE PTR es:[edi],dx
  423540:	lss    ebx,FWORD PTR [eax+0x39c4c68c]
  423547:	mov    edx,ss
  423549:	push   ebp
  42354a:	mov    ebx,DWORD PTR [ecx+0x47]
  42354d:	je     0x4234e5
  42354f:	fadd   DWORD PTR [eax+0x164ed3a4]
  423555:	or     bl,BYTE PTR [edx]
  423557:	push   edx
  423558:	add    DWORD PTR [esp+ebp*4],ebx
  42355b:	lock mov bh,0x17
  42355e:	and    al,0xb0
  423560:	and    edi,DWORD PTR [ebp-0xd]
  423563:	mov    ebx,DWORD PTR [ebp-0x3]
  423566:	ja     0x423525
  423568:	int3   
  423569:	mov    dl,0xa
  42356b:	or     ebx,DWORD PTR [ebp+0x3a]
  42356e:	in     al,dx
  42356f:	aam    0x62
  423571:	mov    ch,0x7b
  423573:	retf   0xaaf6
  423576:	in     al,dx
  423577:	cwde   
  423578:	mov    ah,0x83
  42357a:	mov    esp,0x8dac21b4
  42357f:	leave  
  423580:	mov    ebx,DWORD PTR [edx+0x13]
  423583:	sbb    BYTE PTR [ebx-0x3851670],dh
  423589:	sahf   
  42358a:	pop    DWORD PTR [ebx]
  42358c:	mov    eax,ds:0x4dd3be1f
  423591:	jmp    0x3e15014a
  423596:	mov    dh,0xb3
  423598:	mov    ebp,0x3d738dd
  42359d:	js     0x423530
  42359f:	(bad)  
  4235a1:	mov    ebx,DWORD PTR [esi+0x47]
  4235a4:	adc    edi,DWORD PTR [edi-0x4708a70a]
  4235aa:	jp     0x423544
  4235ac:	sub    eax,0xd6a5dbeb
  4235b1:	div    DWORD PTR [ebx-0x12]
  4235b4:	xor    DWORD PTR [esi-0xca6273f],eax
  4235ba:	and    eax,0xa3acc589
  4235bf:	adc    DWORD PTR [edx],esp
  4235c1:	repz sub bl,BYTE PTR [ecx-0x5c]
  4235c5:	sub    al,0x8a
  4235c7:	mov    DWORD PTR [ebp-0x35],ecx
  4235ca:	push   esp
  4235cb:	lods   eax,DWORD PTR ds:[esi]
  4235cc:	test   eax,0x92751648
  4235d1:	xchg   edx,eax
  4235d2:	fiadd  WORD PTR [edx+ecx*2-0x16428324]
  4235d9:	sahf   
  4235da:	add    DWORD PTR [edi-0x2fd3efe1],esi
  4235e0:	mov    dh,0xb2
  4235e2:	add    edx,edx
  4235e4:	shl    bh,0x8b
  4235e7:	adc    BYTE PTR [ebx],0x7a
  4235ea:	hlt    
  4235eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235ec:	bound  esp,QWORD PTR [edi]
  4235ee:	or     BYTE PTR [eax+esi*4],cl
  4235f1:	adc    ebp,DWORD PTR ds:0x8f41810a
  4235f7:	rcl    BYTE PTR [edi+0x5b],0xd1
  4235fb:	mov    ebx,0x9f9eff9e
  423600:	fsub   QWORD PTR [edi+ebx*1-0x7a]
  423604:	mov    eax,0x3d009b4e
  423609:	jg     0x4235a4
  42360b:	add    ah,BYTE PTR [edi+esi*8]
  42360e:	xor    eax,0xf5921fa6
  423613:	dec    edi
  423614:	push   edi
  423615:	retf   0xbb65
  423618:	dec    edi
  423619:	push   ebp
  42361a:	pop    ds
  42361b:	inc    edx
  42361c:	out    0x32,eax
  42361e:	jb     0x423607
  423620:	iret   
  423621:	inc    edx
  423622:	sub    BYTE PTR [ebx-0x44e7e77e],ah
  423628:	add    al,0xe5
  42362a:	sub    ebp,ebx
  42362c:	imul   esp,DWORD PTR [edi-0x1a],0xce4d706f
  423633:	pop    esi
  423634:	or     BYTE PTR [eax+0x22],0xa
  423638:	pop    ebp
  423639:	fcmovbe st,st(1)
  42363b:	call   0xc252a165
  423640:	pop    ss
  423641:	jbe    0x423663
  423643:	xchg   BYTE PTR [esi],cl
  423645:	jb     0x4235f0
  423647:	(bad)
  42364b:	ret    
  42364c:	cmp    BYTE PTR [edx],dl
  42364e:	sbb    DWORD PTR [edi],ecx
  423650:	xor    eax,edx
  423652:	push   edi
  423653:	mov    edx,0x38f60315
  423658:	lods   eax,DWORD PTR ds:[esi]
  423659:	sbb    al,0xcd
  42365b:	jecxz  0x4236a3
  42365d:	retf   
  42365e:	add    eax,0x5cd98391
  423663:	aaa    
  423664:	(bad)  
  423665:	sbb    ebp,ebx
  423667:	ds ret 0x373b
  42366b:	lods   eax,DWORD PTR ds:[esi]
  42366c:	push   ebx
  42366d:	ds test al,0xe0
  423670:	mov    al,al
  423672:	mov    ebp,0xbb4b978b
  423677:	lea    esp,fs:[edx+0x7442ff4e]
  42367e:	or     al,0x27
  423680:	lock mov BYTE PTR [esi],ah
  423683:	add    eax,0x123694f2
  423688:	mov    edi,DWORD PTR cs:[ebp-0x12]
  42368c:	lea    eax,[ecx]
  42368e:	jbe    0x42361f
  423690:	enter  0x1e52,0x1
  423694:	ja     0x4236fc
  423696:	mov    esp,0x11113c13
  42369b:	inc    ebp
  42369c:	jo     0x42361f
  42369e:	and    edi,DWORD PTR [edx+0x285c282e]
  4236a4:	and    ch,al
  4236a6:	aas    
  4236a7:	cmp    edi,eax
  4236a9:	lods   eax,DWORD PTR ds:[esi]
  4236aa:	dec    edx
  4236ab:	std    
  4236ac:	rcl    DWORD PTR [eax+ebx*8],cl
  4236af:	dec    ebx
  4236b0:	sbb    DWORD PTR [edi+esi*4],0x63c2ad55
  4236b7:	xchg   edx,eax
  4236b8:	(bad)  
  4236b9:	cs aam 0x4
  4236bc:	xchg   ebx,eax
  4236bd:	cmp    DWORD PTR [esi+0x59],0x30
  4236c1:	mov    ds:0xd8bb2e05,al
  4236c6:	fild   QWORD PTR ds:0x4eee294d
  4236cc:	push   ebp
  4236cd:	mov    dl,0xae
  4236cf:	push   es
  4236d0:	(bad)  
  4236d1:	call   0x57470e5e
  4236d6:	sbb    esp,DWORD PTR [edx]
  4236d8:	push   esi
  4236d9:	bound  esp,QWORD PTR ss:[ecx]
  4236dc:	pop    ecx
  4236dd:	mov    edx,0x60912872
  4236e2:	xchg   esp,eax
  4236e3:	mov    dx,0x1cc7
  4236e7:	sbb    al,al
  4236e9:	mov    dh,0x6e
  4236eb:	xor    eax,0x291816e0
  4236f0:	and    BYTE PTR [edi+0x1c7b2412],al
  4236f6:	ins    DWORD PTR es:[edi],dx
  4236f7:	addr16 jae 0x4236e8
  4236fa:	int    0xbb
  4236fc:	out    dx,eax
  4236fd:	test   DWORD PTR ds:0x7863e6d8,ebp
  423703:	imul   ecx,ebp,0xffffffa0
  423706:	dec    ecx
  423707:	(bad)  
  423708:	addr16 jp 0x423698
  42370b:	je     0x4236b3
  42370d:	int    0xdb
  42370f:	lock das 
  423711:	push   es
  423712:	outs   dx,DWORD PTR ds:[esi]
  423713:	repnz repnz sub ecx,ebp
  423717:	or     ah,dl
  423719:	fcomp  QWORD PTR [edi-0x5660691e]
  42371f:	push   ds
  423720:	xchg   BYTE PTR [eax*1-0x615230ad],ah
  423727:	ja     0x423757
  423729:	gs sbb eax,0x83bef710
  42372f:	mov    ch,0xfb
  423731:	sbb    ah,ah
  423733:	or     al,0x21
  423735:	xlat   BYTE PTR ds:[ebx]
  423736:	retf   
  423737:	sahf   
  423738:	add    BYTE PTR [ecx+0x4bcd6f0f],al
  42373e:	xchg   ebx,ebp
  423740:	xlat   BYTE PTR ds:[ebx]
  423741:	pop    ebx
  423742:	mov    bh,0x79
  423744:	test   ah,dh
  423746:	fwait
  423747:	add    bl,al
  423749:	arpl   WORD PTR [ecx+ecx*1],di
  42374c:	sbb    eax,0xdaaba568
  423751:	adc    bh,al
  423753:	leave  
  423754:	lock mov esp,es
  423757:	sbb    al,0x80
  423759:	xchg   edi,eax
  42375a:	div    DWORD PTR [edi+0x1fd4d997]
  423760:	mov    ecx,0xc15a431a
  423765:	jbe    0x423772
  423767:	inc    edi
  423768:	test   BYTE PTR [esi+0x5c073408],bh
  42376e:	cmp    BYTE PTR [edi],cl
  423770:	inc    eax
  423771:	lock and ch,BYTE PTR [ebx+edx*2+0x3f]
  423776:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423777:	add    ecx,DWORD PTR [esi+0x65]
  42377a:	retf   0x87a2
  42377d:	into   
  42377e:	jecxz  0x4237e4
  423780:	lea    ebp,[esi]
  423782:	inc    ebx
  423783:	mov    fs:0xcb5dcfb9,eax
  423789:	cdq    
  42378a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42378b:	sbb    BYTE PTR [esi-0x741c2e90],cl
  423791:	pop    esp
  423792:	add    al,0xbe
  423795:	mov    al,ds:0xc2b1d15f
  42379a:	sbb    DWORD PTR [edx+0x5911be96],ebp
  4237a0:	aad    0xb8
  4237a2:	dec    ebx
  4237a3:	push   esp
  4237a4:	xchg   esi,eax
  4237a5:	or     eax,0xd8736425
  4237aa:	mov    gs,WORD PTR [ebx-0x3e4833cd]
  4237b0:	hlt    
  4237b1:	or     esi,ebx
  4237b3:	adc    esi,eax
  4237b5:	push   ebp
  4237b6:	mov    ecx,DWORD PTR [ebx+edi*2-0x68]
  4237ba:	and    esp,DWORD PTR [esi-0x6a8fb295]
  4237c0:	test   eax,0xf9a3f49
  4237c5:	cwde   
  4237c6:	xor    DWORD PTR [ebx-0x7],ecx
  4237c9:	mov    al,ds:0x802e0f55
  4237ce:	sbb    BYTE PTR [ebx-0x14964026],bh
  4237d4:	mov    eax,ds:0x23595311
  4237d9:	out    0xa4,al
  4237db:	or     edx,esp
  4237dd:	pop    es
  4237de:	or     eax,0x85c620aa
  4237e3:	sub    al,0xa8
  4237e5:	mov    al,0x58
  4237e7:	pop    esi
  4237e8:	popa   
  4237e9:	or     BYTE PTR [esi],ch
  4237eb:	retf   0x8aa8
  4237ee:	aad    0xa0
  4237f0:	in     eax,0x9d
  4237f2:	int3   
  4237f3:	xor    al,BYTE PTR [eax+0x15e65099]
  4237f9:	out    0xa6,al
  4237fb:	xor    ebp,eax
  4237fd:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4237ff:	xchg   ebx,eax
  423800:	xor    BYTE PTR [ebp+eiz*4+0x12296966],0xbe
  423808:	or     DWORD PTR [ebx],ebx
  42380a:	fld    TBYTE PTR [ebx+0x2b9c018f]
  423810:	pop    eax
  423811:	pop    ss
  423812:	cmp    bl,BYTE PTR [eax+0x5e605245]
  423818:	push   ebp
  423819:	out    0xf4,eax
  42381b:	outs   dx,DWORD PTR ds:[esi]
  42381c:	aas    
  42381d:	(bad)  
  42381e:	push   0x749d7657
  423823:	(bad)  
  423824:	xchg   ecx,eax
  423825:	push   eax
  423826:	arpl   WORD PTR ds:0x6b7c934c,dx
  42382c:	jno    0x423849
  42382e:	addr16 inc ecx
  423830:	push   esp
  423831:	push   edx
  423832:	sahf   
  423833:	fcomp  st(7)
  423835:	fcmove st,st(4)
  423837:	test   dl,0x5c
  42383a:	imul   esp,DWORD PTR [esi+ebx*8-0x1c4c29de],0xffffff86
  423842:	adc    edx,edx
  423844:	add    edx,ebx
  423846:	cli    
  423847:	aas    
  423848:	(bad)  
  423849:	and    ebp,DWORD PTR [ebx-0x56cd4335]
  42384f:	jmp    0x4237eb
  423851:	fadd   QWORD PTR [ecx-0x80]
  423854:	fnstcw WORD PTR [edi]
  423856:	push   ss
  423857:	jecxz  0x423813
  423859:	pop    edi
  42385a:	sbb    DWORD PTR [edx+esi*1],ebp
  42385d:	inc    ebp
  42385e:	mov    esi,0x909cc890
  423863:	adc    ecx,eax
  423865:	dec    ecx
  423866:	mov    ds:0xf6ffd655,eax
  42386b:	retf   
  42386c:	mov    edi,0x16fa35ca
  423871:	mov    ebx,0x3d380760
  423876:	scas   eax,DWORD PTR es:[edi]
  423877:	add    DWORD PTR [eax],eax
  423879:	clc    
  42387a:	add    al,0x0
  42387c:	add    BYTE PTR [ebx+eax*4-0x4e0f52ab],al
  423883:	xor    BYTE PTR [edx-0x67],bl
  423886:	xchg   edi,eax
  423887:	pop    ds
  423888:	mov    cl,0xb4
  42388a:	jb     0x4238ea
  42388c:	fmul   st(6),st
  42388e:	fistp  WORD PTR [eax-0x61]
  423891:	shr    dh,1
  423893:	jmp    0x423822
  423895:	fisub  WORD PTR [edx-0xa]
  423898:	adc    al,BYTE PTR [edx+0x2bb8413a]
  42389e:	scas   eax,DWORD PTR es:[edi]
  42389f:	stc    
  4238a0:	jmp    0x68b5:0x512f9e09
  4238a7:	pushf  
  4238a8:	dec    edx
  4238a9:	mov    ecx,DWORD PTR [eax-0x6b]
  4238ac:	into   
  4238ad:	(bad)  
  4238ae:	xchg   ecx,eax
  4238af:	add    al,ch
  4238b1:	std    
  4238b2:	pop    ds
  4238b3:	(bad)  
  4238b4:	cmc    
  4238b5:	jno    0x423843
  4238b7:	pop    ebp
  4238b8:	inc    DWORD PTR [edx]
  4238ba:	hlt    
  4238bb:	mov    bh,0x61
  4238bd:	dec    esp
  4238be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238bf:	cs sub eax,0x50aadcb7
  4238c5:	addr16 adc al,dl
  4238c8:	xor    bl,0xf
  4238cb:	inc    eax
  4238cc:	mov    edi,0x198e21ab
  4238d1:	cmp    al,0x52
  4238d3:	xorps  xmm6,xmm5
  4238d6:	dec    ebx
  4238d7:	pop    ebx
  4238d8:	js     0x423878
  4238da:	aam    0x55
  4238dc:	repz (bad) 
  4238de:	test   ebx,esi
  4238e0:	repz jg 0x4238c5
  4238e3:	(bad)  
  4238e4:	out    0x81,eax
  4238e6:	mov    ds:0xe88681c,eax
  4238eb:	and    eax,DWORD PTR [eax]
  4238ed:	sbb    dl,ch
  4238ef:	stc    
  4238f0:	xchg   esi,eax
  4238f1:	lds    esi,FWORD PTR [edi*2-0x5aab183f]
  4238f8:	fsub   QWORD PTR [edi+0x5db8670b]
  4238fe:	mov    al,ds:0x9a9ecd75
  423903:	and    BYTE PTR [edi+ecx*2+0x3a1d3927],0x69
  42390b:	add    al,0xa8
  42390d:	xchg   edx,eax
  42390e:	adc    BYTE PTR [esi-0x49],cl
  423911:	cmp    BYTE PTR [edx+ecx*8+0x26],ch
  423915:	adc    eax,0xbbb7a4a4
  42391a:	pop    edx
  42391b:	fadd   st,st(3)
  42391d:	es push edi
  42391f:	loopne 0x423984
  423921:	push   ebx
  423922:	aad    0x9f
  423924:	lahf   
  423925:	mov    ds:0xc7916025,eax
  42392a:	ret    
  42392b:	xlat   BYTE PTR ds:[ebx]
  42392c:	add    ecx,DWORD PTR [ebx+0x729d3149]
  423932:	sub    BYTE PTR [ebp-0x20],cl
  423935:	inc    ebp
  423936:	adc    eax,0x2540478c
  42393b:	in     eax,0x22
  42393d:	push   0x16b73bdb
  423942:	fstp   DWORD PTR [eax+0x5cfb18b5]
  423948:	cli    
  423949:	sahf   
  42394a:	jmp    0x423920
  42394c:	enter  0x38ed,0x1f
  423950:	xor    al,0xb7
  423952:	gs xchg esi,eax
  423954:	lods   eax,DWORD PTR ds:[esi]
  423955:	adc    al,0x59
  423957:	sbb    eax,0xa4792449
  42395c:	pop    ebx
  42395d:	jg     0x42398e
  42395f:	push   ebx
  423960:	cdq    
  423961:	xchg   esi,eax
  423962:	es sbb al,0xfc
  423965:	push   esi
  423966:	rcl    dl,0x33
  423969:	arpl   WORD PTR [eax],si
  42396b:	sbb    al,0x58
  42396d:	sbb    cl,BYTE PTR [ebx-0x7acb12e3]
  423973:	pop    edx
  423974:	sub    BYTE PTR [edx+0x721cc5c4],al
  42397a:	mov    esi,0x4ce3170e
  42397f:	xchg   ebp,eax
  423980:	mov    ch,0x7e
  423982:	scas   eax,DWORD PTR es:[edi]
  423983:	pop    eax
  423984:	sbb    BYTE PTR [eax],0xfe
  423987:	add    BYTE PTR [edx+0x1e],ah
  42398a:	sbb    al,0x7
  42398c:	pop    ebp
  42398d:	push   esi
  42398e:	sbb    al,0x41
  423990:	popf   
  423991:	pop    esp
  423992:	in     eax,0x18
  423994:	jge    0x4239d4
  423996:	push   esi
  423997:	sub    BYTE PTR fs:[esi],0x51
  42399b:	inc    esi
  42399c:	or     DWORD PTR ds:0xd11e7521,0xa65b2926
  4239a6:	dec    eax
  4239a7:	jmp    0x42395e
  4239a9:	(bad)  
  4239aa:	push   ebp
  4239ab:	nop
  4239ac:	add    ecx,DWORD PTR [edx-0xe]
  4239af:	not    BYTE PTR [ebp+0x7b]
  4239b2:	cmp    DWORD PTR [esp+edx*4+0x41],edi
  4239b6:	in     al,dx
  4239b7:	stos   DWORD PTR es:[edi],eax
  4239b8:	aaa    
  4239b9:	add    BYTE PTR [ecx-0x2d],0xce
  4239bd:	nop
  4239be:	mov    bh,BYTE PTR [edx+0x2e4485cf]
  4239c4:	push   cs
  4239c5:	push   ebp
  4239c6:	in     al,0x41
  4239c8:	xor    ah,BYTE PTR [ebx+eiz*1+0x2ea25e75]
  4239cf:	iret   
  4239d0:	mov    dl,0xb8
  4239d2:	mov    ds:0xa26fb2b4,eax
  4239d7:	loop   0x4239c0
  4239d9:	push   eax
  4239da:	add    BYTE PTR [edi-0x7a],ah
  4239dd:	cmp    cl,BYTE PTR [ebx]
  4239df:	lds    esp,FWORD PTR [ebx-0x58]
  4239e2:	or     DWORD PTR [ecx-0x307860da],ecx
  4239e8:	xor    edx,esi
  4239ea:	cwde   
  4239eb:	inc    esp
  4239ec:	shl    BYTE PTR [edx+0x4223295d],1
  4239f2:	stos   BYTE PTR es:[edi],al
  4239f3:	ja     0x4239d6
  4239f5:	pop    es
  4239f6:	mov    al,0x7c
  4239f8:	jbe    0x423a0a
  4239fa:	mov    ds:0x1ec98960,al
  4239ff:	push   ds
  423a00:	stos   DWORD PTR es:[edi],eax
  423a01:	les    ebx,FWORD PTR [ecx-0x67]
  423a04:	dec    esi
  423a05:	sbb    eax,0x7d020e7a
  423a0a:	push   es
  423a0b:	adc    ecx,DWORD PTR [ebp+0x30586622]
  423a11:	dec    ebp
  423a12:	jp     0x4239fc
  423a14:	out    0xb6,al
  423a16:	xor    ch,BYTE PTR [eax-0x6e860472]
  423a1c:	sub    edi,ebx
  423a1e:	xor    eax,0x4e9cd80c
  423a23:	inc    ebx
  423a24:	jo     0x423a80
  423a26:	(bad)  
  423a27:	repnz fwait
  423a29:	ret    0xec37
  423a2c:	test   esi,eax
  423a2e:	adc    esi,esi
  423a30:	lods   al,BYTE PTR ds:[esi]
  423a31:	jg     0x423a0e
  423a33:	xchg   DWORD PTR [edx+0x65],eax
  423a36:	mov    BYTE PTR [eax],ch
  423a38:	or     cl,ah
  423a3a:	xchg   bh,cl
  423a3c:	sbb    al,0x74
  423a3e:	enter  0x236d,0xa0
  423a42:	std    
  423a43:	(bad)  
  423a44:	dec    ebp
  423a45:	call   0x870e:0x3e585f48
  423a4c:	sti    
  423a4d:	retf   0xcd23
  423a50:	icebp  
  423a51:	ss daa 
  423a53:	js     0x423a7c
  423a55:	jge    0x423ac3
  423a57:	ja     0x423a5e
  423a59:	jb     0x423a50
  423a5b:	xchg   edi,eax
  423a5c:	push   esp
  423a5d:	and    al,0xb0
  423a5f:	push   ds
  423a60:	mov    BYTE PTR [edx-0x20def849],ah
  423a66:	inc    ebp
  423a67:	rcr    esi,0xe8
  423a6a:	ret    
  423a6b:	jmp    0x34fbc572
  423a70:	enter  0x6f,0x5e
  423a74:	loope  0x423a48
  423a76:	push   ds
  423a77:	jg     0x423a07
  423a79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a7a:	mov    ds:0xae463e0c,eax
  423a7f:	lock mov al,BYTE PTR [ebx]
  423a82:	sub    edi,DWORD PTR [edx+0x43]
  423a85:	fisttp WORD PTR [eax+0x2795170e]
  423a8b:	retf   0xd8ea
  423a8e:	inc    cl
  423a90:	fidivr WORD PTR [edi+edi*2+0x7200c45c]
  423a97:	cdq    
  423a98:	inc    ebp
  423a99:	mov    ?,WORD PTR [esi-0x794062c6]
  423a9f:	cmp    eax,0x383c764
  423aa4:	adc    bl,cl
  423aa6:	jcxz   0x423ac7
  423aa9:	scas   al,BYTE PTR es:[edi]
  423aaa:	xor    eax,0x99d46084
  423aaf:	add    cl,BYTE PTR [ecx+0x6f]
  423ab2:	mov    esi,0xffab8859
  423ab7:	adc    BYTE PTR [esi+eiz*1+0x5512059e],dh
  423abe:	lahf   
  423abf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ac0:	dec    edx
  423ac1:	add    BYTE PTR [edi+eiz*1],ch
  423ac4:	scas   eax,DWORD PTR es:[edi]
  423ac5:	les    ecx,FWORD PTR [ecx+0x7e]
  423ac8:	std    
  423ac9:	mov    al,0x11
  423acb:	ins    DWORD PTR es:[edi],dx
  423acc:	xchg   esi,eax
  423acd:	dec    ebp
  423ace:	mov    esp,0xa17a2202
  423ad3:	test   al,0x1
  423ad5:	mov    dh,BYTE PTR [ebx]
  423ad7:	cs cs aad 0x7
  423adb:	imul   edi,DWORD PTR [edi+ebx*1+0x3b],0xab5c1248
  423ae3:	pop    ss
  423ae4:	pusha  
  423ae5:	shr    esp,1
  423ae7:	add    ch,BYTE PTR ds:0x808c9cfa
  423aed:	ret    0x8a83
  423af0:	dec    eax
  423af1:	jb     0x423a9e
  423af3:	xor    eax,0x324fa24
  423af8:	stos   DWORD PTR es:[edi],eax
  423af9:	stos   BYTE PTR es:[edi],al
  423afa:	mov    edx,esp
  423afc:	bound  ebp,QWORD PTR [esi+0x7c26cc89]
  423b02:	pop    ebx
  423b03:	add    DWORD PTR [esi],edi
  423b05:	aad    0xc8
  423b07:	inc    edx
  423b08:	inc    ebx
  423b09:	shl    BYTE PTR [ebp+0x5d03fb86],0x74
  423b10:	pop    esp
  423b11:	push   ebx
  423b12:	(bad)  
  423b13:	je     0x423b33
  423b15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b16:	hlt    
  423b17:	mov    ds:0x3d82c5b1,al
  423b1c:	sbb    BYTE PTR [ebp+0x26],0x8e
  423b20:	mov    ds:0x96c9e98,al
  423b25:	inc    esp
  423b26:	rcl    ecx,1
  423b28:	mov    ebp,DWORD PTR [ecx]
  423b2a:	(bad)  
  423b2c:	xchg   sp,ax
  423b2e:	psubusw mm4,QWORD PTR [eax-0x28]
  423b32:	or     ch,BYTE PTR [esi]
  423b34:	dec    ecx
  423b35:	dec    DWORD PTR [ecx]
  423b37:	mov    esi,0x5ddca34b
  423b3c:	jns    0x423b7a
  423b3e:	jno    0x423baf
  423b40:	test   eax,0x40a84379
  423b45:	pushf  
  423b46:	mov    BYTE PTR [esp+ebp*2],al
  423b49:	loop   0x423aed
  423b4b:	push   0xf
  423b4d:	fbld   TBYTE PTR [ebp+0x6a]
  423b50:	int    0x7f
  423b52:	test   BYTE PTR [edx+0x8],0x70
  423b56:	daa    
  423b57:	mov    edi,0x15a5b407
  423b5c:	add    DWORD PTR [ecx],eax
  423b5e:	lds    ecx,FWORD PTR [ecx-0x7]
  423b61:	in     eax,dx
  423b62:	inc    ebp
  423b63:	adc    esp,DWORD PTR [edx]
  423b65:	push   esp
  423b66:	adc    BYTE PTR [eax-0x1fb19652],ch
  423b6c:	aam    0xc0
  423b6e:	and    BYTE PTR [esi+0x5c2bc8ec],bl
  423b74:	or     BYTE PTR [ecx-0x1a],ch
  423b77:	repnz mov dl,0xa
  423b7a:	jg     0x423b2a
  423b7c:	add    BYTE PTR ds:0xf108aae7,dh
  423b82:	popf   
  423b83:	inc    esi
  423b84:	dec    edi
  423b85:	sub    al,0xcd
  423b87:	jo     0x423bdf
  423b89:	pop    ebx
  423b8a:	push   0x37aaa055
  423b8f:	jle    0x423bbf
  423b91:	pop    ds
  423b92:	adc    BYTE PTR [ecx+0x78c7e9dd],bh
  423b98:	mov    eax,0xadefb35d
  423b9d:	rep ins DWORD PTR es:[edi],dx
  423b9f:	inc    edi
  423ba0:	add    eax,0x15272a98
  423ba5:	daa    
  423ba6:	mov    bh,0x7
  423ba8:	push   ebp
  423ba9:	(bad)  
  423baa:	jnp    0x423c0c
  423bac:	ja     0x423c1c
  423bae:	or     al,0xf
  423bb0:	mul    BYTE PTR [ecx-0x2b8e319e]
  423bb6:	or     ch,BYTE PTR [ecx+ebp*4]
  423bb9:	or     esi,0x4f
  423bbc:	aaa    
  423bbd:	jae    0x423bd9
  423bbf:	mov    ebx,0x4def903b
  423bc4:	mov    ds:0x29d2867f,al
  423bc9:	jecxz  0x423b90
  423bcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423bcc:	fadd   DWORD PTR [edi]
  423bce:	imul   edx,DWORD PTR [eax-0x4f],0xffffffac
  423bd2:	sub    DWORD PTR [eax-0x293b3390],0x12
  423bd9:	mov    WORD PTR [edx-0xd],?
  423bdc:	push   es
  423bdd:	inc    edi
  423bde:	sar    BYTE PTR [ebx+0x7ed54d2c],0xe2
  423be5:	inc    esp
  423be6:	rcr    ebx,1
  423be8:	pusha  
  423be9:	std    
  423bea:	pushf  
  423beb:	aas    
  423bec:	retf   0xf19a
  423bef:	cmp    al,cl
  423bf1:	dec    edx
  423bf2:	and    al,0xcd
  423bf4:	stos   DWORD PTR es:[edi],eax
  423bf5:	sar    DWORD PTR [edx+0x3638cd27],1
  423bfb:	jge    0x423bfd
  423bfd:	mov    ds:0x9476279e,eax
  423c02:	(bad)  [esi+0x7f]
  423c05:	sti    
  423c06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c07:	into   
  423c08:	adc    edi,DWORD PTR [eax+0x3d04152d]
  423c0e:	icebp  
  423c0f:	push   ds
  423c10:	(bad)  
  423c11:	lods   eax,DWORD PTR ds:[esi]
  423c12:	fcomp  DWORD PTR [esp+eax*1]
  423c15:	push   esi
  423c16:	mov    bl,0x6f
  423c18:	out    0x95,eax
  423c1a:	mov    al,0xca
  423c1c:	mov    ecx,0x4cd6049c
  423c21:	stc    
  423c22:	mov    gs,WORD PTR [edi+ebp*4-0x31]
  423c26:	mov    edi,0xdaa39b71
  423c2b:	adc    BYTE PTR [edi-0x36b8f1be],ah
  423c31:	push   ecx
  423c32:	dec    edi
  423c33:	(bad)  
  423c34:	outs   dx,BYTE PTR ds:[esi]
  423c35:	jae    0x423bb9
  423c37:	push   ecx
  423c38:	adc    eax,0x9c68ce62
  423c3d:	mov    esi,0xa124e7b8
  423c42:	inc    eax
  423c43:	and    bl,dl
  423c45:	pusha  
  423c46:	xlat   BYTE PTR ds:[ebx]
  423c47:	adc    bh,BYTE PTR [ecx]
  423c49:	cmp    dh,BYTE PTR [edx]
  423c4b:	(bad)  
  423c4c:	imul   esi,DWORD PTR [edx],0xc9ad7aa2
  423c52:	or     eax,0x3247411e
  423c57:	mov    al,0x5a
  423c59:	clc    
  423c5a:	cmp    BYTE PTR [eax],ch
  423c5c:	mov    ah,0x70
  423c5e:	aam    0xc4
  423c60:	int    0x56
  423c62:	xchg   ebx,eax
  423c63:	xor    BYTE PTR [eax],0xc3
  423c66:	add    eax,0x19d8140b
  423c6b:	mov    eax,ds:0x2b3fff6f
  423c70:	in     al,dx
  423c71:	jge    0x423cf2
  423c73:	push   ecx
  423c74:	xor    al,0x44
  423c76:	int3   
  423c77:	fs cld 
  423c79:	fistp  QWORD PTR [eax+esi*1+0x3d7378d2]
  423c80:	ret    
  423c81:	lock test DWORD PTR [ecx],esi
  423c84:	jno    0x423c8b
  423c86:	arpl   dx,bx
  423c88:	jle    0x423cc5
  423c8a:	ficomp WORD PTR ss:[edi+0x17474f91]
  423c91:	fwait
  423c92:	xchg   esi,eax
  423c93:	jb     0x423c71
  423c95:	inc    edx
  423c97:	jmp    FWORD PTR ds:0xfd1295d0
  423c9d:	fwait
  423c9e:	cmp    al,0x2a
  423ca0:	cmp    eax,0xe5b4e810
  423ca5:	jp     0x423cd2
  423ca7:	sub    al,0x77
  423ca9:	dec    ebx
  423caa:	shl    BYTE PTR ds:0x3b893317,cl
  423cb0:	jp     0x423d20
  423cb2:	cmc    
  423cb3:	inc    eax
  423cb4:	pop    ss
  423cb5:	push   ecx
  423cb6:	pop    es
  423cb7:	fimul  DWORD PTR [ecx]
  423cb9:	jne    0x423cac
  423cbb:	pop    ss
  423cbc:	cmp    al,0xc4
  423cbe:	cmp    ch,bh
  423cc0:	add    bl,BYTE PTR [ebx-0x3d]
  423cc3:	daa    
  423cc4:	(bad)  
  423cc5:	out    dx,eax
  423cc6:	(bad)  
  423cc7:	mov    dl,0x43
  423cc9:	add    dl,al
  423ccb:	loop   0x423cc8
  423ccd:	popf   
  423cce:	inc    ebp
  423ccf:	mov    al,ds:0x46111202
  423cd4:	mov    eax,0x1f35d116
  423cd9:	cdq    
  423cda:	mov    ah,0x77
  423cdc:	push   edx
  423cdd:	rcl    BYTE PTR [ecx-0x2411dc71],0x1a
  423ce4:	mov    gs,WORD PTR [edi-0x14ee20d]
  423cea:	test   DWORD PTR [esi],edx
  423cec:	fsub   QWORD PTR [edx-0x243efff9]
  423cf2:	mov    eax,0x79877d31
  423cf7:	inc    eax
  423cf8:	mov    esp,0x17c8e5d3
  423cfe:	xor    bh,BYTE PTR [ecx+0xf7a19f0]
  423d04:	inc    edx
  423d05:	sub    DWORD PTR [edx],0x89a23a54
  423d0b:	std    
  423d0c:	mov    eax,0x8e00b339
  423d11:	cmp    ecx,DWORD PTR [eax+0x34413eaa]
  423d17:	scas   eax,DWORD PTR es:[edi]
  423d18:	mov    edx,0x9ac62416
  423d1d:	inc    ebx
  423d1e:	push   ebx
  423d1f:	jmp    0xc3aa:0xff9334cf
  423d26:	retf   
  423d27:	sub    BYTE PTR [ebp+edx*1+0x66],0xcb
  423d2c:	pop    ds
  423d2d:	mov    edx,0x59a5433e
  423d32:	stos   BYTE PTR es:[edi],al
  423d33:	outs   dx,DWORD PTR ds:[esi]
  423d34:	xchg   edx,eax
  423d35:	mov    ds:0xfce05da4,eax
  423d3a:	jl     0x423d28
  423d3c:	xchg   ecx,eax
  423d3d:	dec    ebp
  423d3e:	ss mov edx,0xeaf1704c
  423d44:	aad    0x4e
  423d46:	ins    DWORD PTR es:[edi],dx
  423d47:	(bad)  
  423d48:	sar    edi,cl
  423d4a:	int3   
  423d4b:	dec    esi
  423d4c:	repnz adc BYTE PTR ss:[eax],0x6b
  423d51:	add    ch,dh
  423d53:	mov    DWORD PTR cs:[eax+0x2c],eax
  423d57:	xchg   BYTE PTR [esi-0x14e90407],dh
  423d5d:	jle    0x423dc6
  423d5f:	jb     0x423dd9
  423d61:	(bad)  
  423d62:	xchg   esp,eax
  423d63:	xor    eax,0x314b1e58
  423d68:	fld    TBYTE PTR [edi]
  423d6a:	and    edx,DWORD PTR [esi]
  423d6c:	mov    esp,0x68fcb4ad
  423d71:	ss mov bl,0xf8
  423d74:	mov    es,WORD PTR [esi-0x69]
  423d77:	daa    
  423d78:	cmp    esi,edi
  423d7a:	mov    ebx,0x8b96ff5e
  423d7f:	ss aaa 
  423d81:	fist   DWORD PTR [edx-0x67]
  423d84:	ret    0xb435
  423d87:	add    DWORD PTR [eax],eax
  423d89:	clc    
  423d8a:	add    al,0x0
  423d8c:	add    BYTE PTR [ebx+ecx*8],dl
  423d8f:	mov    ecx,DWORD PTR [ebx]
  423d91:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  423d93:	into   
  423d94:	pop    ss
  423d95:	addr16 ret 0xedd9
  423d99:	sar    DWORD PTR [ecx-0x4c],cl
  423d9c:	add    BYTE PTR [eax+0x4e],cl
  423d9f:	pop    eax
  423da0:	lods   eax,DWORD PTR ds:[esi]
  423da1:	mov    eax,ds:0x6ab3bc96
  423da6:	addr16 (bad) 
  423da8:	loopne 0x423d68
  423daa:	sbb    bl,BYTE PTR [esi+0x1204dfe]
  423db0:	cmp    ecx,DWORD PTR [esi-0x3633d0b6]
  423db6:	outs   dx,BYTE PTR ds:[esi]
  423db7:	inc    edi
  423db8:	adc    DWORD PTR [eax],esp
  423dba:	scas   eax,DWORD PTR es:[edi]
  423dbb:	(bad)  
  423dbd:	mov    ah,0xc7
  423dbf:	jbe    0x423dca
  423dc1:	or     ch,dh
  423dc3:	bound  ebp,QWORD PTR [ebp-0x58]
  423dc6:	inc    edx
  423dc7:	fdivr  QWORD PTR [ebx+0x171c1180]
  423dcd:	bound  esi,QWORD PTR [esi-0x63]
  423dd0:	push   cs
  423dd1:	pop    esp
  423dd2:	fiadd  WORD PTR [ebp-0x49]
  423dd5:	cld    
  423dd6:	mov    WORD PTR ds:0x3d13c91,?
  423ddc:	add    bl,BYTE PTR [esi+0x77f5d260]
  423de2:	xchg   edi,eax
  423de3:	mov    eax,0xa5bcc985
  423de8:	pushf  
  423de9:	mov    al,0xb1
  423deb:	mov    bx,0x859
  423def:	stos   DWORD PTR es:[edi],eax
  423df0:	inc    ebp
  423df1:	pop    ss
  423df2:	inc    edx
  423df3:	(bad)  [eax+eiz*2]
  423df6:	test   al,0x5e
  423df8:	out    dx,eax
  423df9:	pop    edx
  423dfa:	and    DWORD PTR [esi-0x6909ea98],ebx
  423e00:	shr    DWORD PTR [eax+0x6],cl
  423e03:	mov    ecx,0x797ae74b
  423e08:	xchg   esi,eax
  423e09:	addr16 xchg ecx,eax
  423e0b:	lds    si,DWORD PTR [edi]
  423e0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e0f:	rcr    ebx,0xa2
  423e12:	or     eax,0xcfc720e0
  423e17:	dec    esp
  423e18:	jno    0x423e4b
  423e1a:	inc    edx
  423e1b:	mov    ds:0x8217eaf7,eax
  423e20:	sub    DWORD PTR [edi-0x41543810],ecx
  423e26:	pop    edx
  423e27:	mov    bl,BYTE PTR [edx+0x51f3aff7]
  423e2d:	sti    
  423e2e:	es out dx,eax
  423e30:	inc    ebp
  423e31:	inc    ecx
  423e32:	test   eax,0x72591a71
  423e37:	push   edx
  423e38:	fdivrp st(0),st
  423e3a:	add    eax,0x3a898f69
  423e3f:	jmp    0xb93ddb20
  423e44:	add    eax,0x439c879c
  423e49:	fcomp  st(5)
  423e4b:	or     eax,0xe7688edb
  423e50:	nop
  423e51:	push   ebx
  423e52:	adc    al,0xfc
  423e54:	sbb    ch,BYTE PTR [ebx-0x3a5f1cf6]
  423e5a:	and    eax,0x30bdbafb
  423e5f:	dec    ebp
  423e60:	rcl    DWORD PTR [ebx-0x25],0xa1
  423e64:	xor    ebp,DWORD PTR [esp+ebx*2-0x5160d64b]
  423e6b:	call   0xd7d4:0xabf48117
  423e72:	ror    BYTE PTR [edi-0x7a],cl
  423e75:	jmp    0x423eb2
  423e77:	push   edi
  423e78:	mov    esp,0x4076a62d
  423e7d:	adc    DWORD PTR [eax],ebp
  423e7f:	std    
  423e80:	icebp  
  423e81:	jmp    0x423f01
  423e83:	push   es
  423e84:	sbb    al,0x82
  423e86:	popa   
  423e87:	leave  
  423e88:	leave  
  423e89:	hlt    
  423e8a:	popf   
  423e8b:	mov    cl,0xfa
  423e8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e8e:	jns    0x423ec5
  423e90:	push   ecx
  423e91:	std    
  423e92:	mov    edi,0xfb22e7c6
  423e97:	sbb    BYTE PTR [ebp-0x3],0x3a
  423e9b:	push   eax
  423e9c:	repz push eax
  423e9e:	sub    BYTE PTR [ebx-0x58557c17],ah
  423ea4:	sub    BYTE PTR [ecx-0x194084ec],ah
  423eaa:	cdq    
  423eab:	jp     0x423e75
  423ead:	and    ebp,ecx
  423eaf:	cmp    esp,0xf8c89d7
  423eb5:	inc    edx
  423eb6:	lea    ebp,[esi]
  423eb8:	push   esp
  423eb9:	mov    edx,DWORD PTR [eax+eiz*4-0x2a1d6c8d]
  423ec0:	(bad)  
  423ec1:	push   ebx
  423ec2:	pop    edi
  423ec3:	add    eax,0xb8f85ec7
  423ec8:	test   eax,0xf56154b7
  423ecd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ece:	mov    cl,0xb4
  423ed0:	and    al,0x1f
  423ed2:	int3   
  423ed3:	(bad)
  423ed7:	xor    al,0x77
  423ed9:	call   0xfa28:0x4f5e0633
  423ee0:	pusha  
  423ee1:	cmp    BYTE PTR [ecx+0x6cfc099e],0x59
  423ee8:	xor    DWORD PTR [ebp+0xf],0x488a99
  423eef:	adc    DWORD PTR [edi-0x2bc991d9],esp
  423ef5:	icebp  
  423ef6:	xchg   esi,eax
  423ef7:	rcr    dh,cl
  423ef9:	push   ds
  423efa:	and    esp,eax
  423efc:	inc    eax
  423efd:	pop    esp
  423efe:	rol    DWORD PTR [esi-0x21],1
  423f01:	push   ds
  423f02:	hlt    
  423f03:	repz sbb eax,0x974cc0c3
  423f09:	sbb    ebp,DWORD PTR [ebp-0x50]
  423f0c:	scas   eax,DWORD PTR es:[edi]
  423f0d:	nop
  423f0e:	imul   ecx,DWORD PTR [ebx],0xffffff9c
  423f11:	and    ah,BYTE PTR [esi+0x6b83e251]
  423f17:	xchg   esi,eax
  423f18:	ins    BYTE PTR es:[edi],dx
  423f19:	sub    BYTE PTR [eax-0x72],0xc0
  423f1d:	imul   ebp,DWORD PTR [edx],0xff1a0e75
  423f23:	mov    al,ds:0xb6d0fe9e
  423f28:	xchg   esi,esi
  423f2a:	cmp    eax,0xdba222a0
  423f2f:	push   ss
  423f30:	lock dec ebp
  423f32:	jns    0x423f32
  423f34:	add    al,0x37
  423f36:	adc    DWORD PTR [eax*2-0x55eb0d7f],esi
  423f3d:	xlat   BYTE PTR ds:[ebx]
  423f3e:	jp     0x423ec2
  423f40:	daa    
  423f41:	mov    esi,0xde288ea0
  423f46:	mov    ah,0xde
  423f48:	jno    0x423f16
  423f4a:	add    eax,0x86dc56b8
  423f4f:	sub    ecx,DWORD PTR [eax+0x66]
  423f52:	cmp    BYTE PTR [edx+0x323fdb63],0x90
  423f59:	loopne 0x423f0a
  423f5b:	ins    DWORD PTR es:[edi],dx
  423f5c:	xchg   ecx,eax
  423f5d:	jns    0x423f36
  423f5f:	shl    BYTE PTR [edi+0x2171ee4],cl
  423f65:	and    eax,0xc692d51f
  423f6a:	outs   dx,BYTE PTR ds:[esi]
  423f6b:	ins    DWORD PTR es:[edi],dx
  423f6c:	arpl   WORD PTR [ebp+edx*4+0x29],cx
  423f70:	es mov edi,0xf69e64b8
  423f76:	stc    
  423f77:	mov    edi,0x3984b30f
  423f7c:	enter  0xc9dd,0xa3
  423f80:	dec    ebp
  423f81:	es dec edi
  423f83:	dec    ecx
  423f84:	retf   
  423f85:	mov    esi,DWORD PTR [eax-0x43]
  423f88:	xor    dl,bl
  423f8a:	enter  0xa236,0xc8
  423f8e:	xchg   ebx,eax
  423f8f:	mov    al,0x5c
  423f91:	dec    esp
  423f92:	and    BYTE PTR ds:0x868d90d7,cl
  423f98:	sbb    BYTE PTR [esi+0x42],bl
  423f9b:	cwde   
  423f9c:	lea    edi,[edx-0x74235a21]
  423fa2:	and    BYTE PTR [edx-0x26],0x4
  423fa6:	and    BYTE PTR [ebx-0x3996d202],ch
  423fac:	sub    esi,DWORD PTR [ecx]
  423fae:	push   ss
  423faf:	fild   QWORD PTR [esi-0x539df9c9]
  423fb5:	jp     0x424003
  423fb7:	push   ss
  423fb8:	xlat   BYTE PTR ds:[ebx]
  423fb9:	xor    edi,edx
  423fbb:	pop    esp
  423fbc:	jne    0x423fe7
  423fbe:	ins    BYTE PTR es:[edi],dx
  423fbf:	jmp    0xda660f2
  423fc4:	push   ecx
  423fc5:	fiadd  WORD PTR [edi+0x2f]
  423fc8:	jl     0x42403c
  423fca:	jp     0x423fde
  423fcc:	pop    ds
  423fcd:	out    dx,al
  423fce:	xchg   esi,eax
  423fcf:	in     al,dx
  423fd0:	int    0xe3
  423fd2:	jb     0x423fb0
  423fd4:	xor    ecx,DWORD PTR [edx+0x75]
  423fd7:	loopne 0x424038
  423fd9:	cmp    edi,edi
  423fdb:	enter  0xaf3,0x34
  423fdf:	and    al,0x4d
  423fe1:	dec    esp
  423fe2:	int    0x71
  423fe4:	test   al,0xb7
  423fe6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423fe7:	les    ebx,FWORD PTR [eax]
  423fe9:	dec    edx
  423fea:	pop    eax
  423feb:	xchg   ecx,eax
  423fec:	cld    
  423fed:	jecxz  0x423fbd
  423fef:	jbe    0x423f83
  423ff1:	jmp    0x423fc8
  423ff3:	mov    dh,0xb9
  423ff5:	jp     0x42401a
  423ff7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ff8:	sub    eax,0x2ba508f1
  423ffd:	pushf  
  423ffe:	xor    eax,0xd8c91fa8
  424003:	inc    esp
  424004:	aas    
  424005:	mul    DWORD PTR [esi]
  424007:	dec    ecx
  424008:	scas   eax,DWORD PTR es:[edi]
  424009:	xchg   BYTE PTR [ecx-0x26152445],cl
  42400f:	dec    ecx
  424010:	je     0x423fcc
  424012:	outs   dx,DWORD PTR ds:[esi]
  424013:	inc    ecx
  424014:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424015:	aas    
  424016:	lds    ebx,FWORD PTR [ecx+0x7e]
  424019:	jge    0x423fad
  42401b:	xor    al,0x39
  42401d:	sahf   
  42401e:	call   FWORD PTR [ecx+0x26]
  424021:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424022:	repnz pop ebp
  424024:	loopne 0x423ff0
  424026:	jo     0x42403d
  424028:	adc    eax,0x25a19515
  42402d:	int3   
  42402e:	dec    edx
  42402f:	popa   
  424030:	cwde   
  424031:	fst    QWORD PTR [eax-0x10ada8fe]
  424037:	jo     0x424051
  424039:	into   
  42403a:	inc    ebx
  42403b:	mov    al,0x68
  42403d:	or     edi,ebx
  42403f:	xor    eax,0x9558ae12
  424044:	mov    BYTE PTR [esi],cl
  424046:	sbb    al,0xa9
  424048:	mov    ebp,DWORD PTR [ebp+edx*1-0x5c]
  42404c:	sub    BYTE PTR [ebx],al
  42404e:	int3   
  42404f:	loop   0x424074
  424051:	and    eax,ebx
  424053:	fs cld 
  424055:	mov    ds:0xac82ff9c,al
  42405a:	mov    al,BYTE PTR [edi-0x25969ec1]
  424060:	pop    edx
  424061:	cmp    BYTE PTR [ebx-0x7e],al
  424064:	sub    al,0xe2
  424066:	dec    eax
  424067:	(bad)  [ecx-0x3f6147b9]
  42406d:	lods   eax,DWORD PTR ds:[esi]
  42406e:	aaa    
  42406f:	je     0x423ffb
  424071:	popf   
  424072:	sar    DWORD PTR [edi+esi*8],0xe4
  424076:	fadd   DWORD PTR [eax+0x498a2961]
  42407c:	push   edi
  42407d:	call   DWORD PTR [ecx+eiz*1]
  424080:	push   cs
  424081:	mov    esi,0x1e5ab89a
  424086:	test   eax,0x996a86f9
  42408b:	(bad)  [edx]
  42408d:	mov    bl,BYTE PTR [ebx+0x2b]
  424090:	add    eax,0x304968d5
  424095:	loope  0x424048
  424097:	dec    ecx
  424098:	loopne 0x4240e4
  42409a:	and    BYTE PTR [edi+0x59868120],bl
  4240a0:	jno    0x4240b5
  4240a2:	xchg   edi,eax
  4240a3:	sub    BYTE PTR [esi],dl
  4240a5:	int3   
  4240a6:	mov    ah,0x41
  4240a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240a9:	(bad)  
  4240aa:	sbb    BYTE PTR [ebx],ah
  4240ac:	push   ss
  4240ad:	sub    BYTE PTR [esi],bh
  4240af:	mov    ebp,ss
  4240b1:	fcomp  QWORD PTR [ebx+0x160e4560]
  4240b7:	jo     0x424044
  4240b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4240ba:	std    
  4240bb:	mov    bh,0xb5
  4240bd:	or     eax,0x10bfd38d
  4240c2:	cld    
  4240c3:	rol    DWORD PTR [edx+0x4012fb16],1
  4240c9:	and    eax,0xd382ebfc
  4240ce:	xchg   edx,eax
  4240cf:	xchg   ecx,eax
  4240d0:	dec    ebx
  4240d1:	int    0x59
  4240d3:	enter  0xcf1c,0x36
  4240d7:	lds    edx,FWORD PTR [edi+0x30b7859e]
  4240dd:	ins    DWORD PTR es:[edi],dx
  4240de:	out    0x46,al
  4240e0:	(bad)  
  4240e1:	xchg   esp,eax
  4240e2:	xor    al,0x34
  4240e4:	scas   al,BYTE PTR es:[edi]
  4240e5:	inc    esp
  4240e6:	popf   
  4240e7:	pop    ecx
  4240e8:	sub    al,ch
  4240ea:	stc    
  4240eb:	jl     0x4240fa
  4240ed:	sbb    eax,0xf30ddd72
  4240f2:	and    dh,bl
  4240f4:	mov    edx,0x67129394
  4240f9:	mov    ah,0xbf
  4240fb:	jbe    0x42408e
  4240fd:	inc    ebx
  4240fe:	outs   dx,BYTE PTR ds:[esi]
  4240ff:	adc    ah,BYTE PTR [edx]
  424101:	pop    ecx
  424102:	clc    
  424103:	mov    ebx,0xd5dd70e5
  424108:	test   al,0x1d
  42410a:	mov    bh,0x35
  42410c:	xor    al,BYTE PTR [ebx+0x1c]
  42410f:	push   es
  424110:	mov    ds:0x4576c0ee,al
  424115:	inc    ebp
  424116:	pop    esp
  424117:	lds    ecx,FWORD PTR [ebp-0x14]
  42411a:	jge    0x42410c
  42411c:	or     DWORD PTR [ebx-0x9bf1c5],edi
  424122:	cmp    edx,esp
  424124:	in     eax,0xb2
  424126:	into   
  424127:	pop    ebx
  424128:	or     BYTE PTR [esi],ch
  42412a:	popa   
  42412b:	pop    edx
  42412c:	adc    al,0x3e
  42412e:	fcmovu st,st(4)
  424130:	sub    al,0x22
  424132:	lahf   
  424133:	daa    
  424134:	cli    
  424135:	in     eax,dx
  424136:	xchg   ebx,eax
  424137:	popf   
  424138:	mov    bh,0xc
  42413a:	(bad)  
  42413b:	jecxz  0x4240dd
  42413d:	sbb    eax,DWORD PTR [eax]
  42413f:	xor    eax,0xc5f1dbca
  424144:	mov    edi,0x8ce33441
  424149:	push   ebx
  42414a:	ret    
  42414b:	adc    al,0x81
  42414d:	cmp    ecx,edi
  42414f:	mov    al,0x39
  424151:	out    0x3b,al
  424153:	(bad)  
  424154:	sub    esi,DWORD PTR [edx-0x14]
  424157:	cli    
  424158:	scas   al,BYTE PTR es:[edi]
  424159:	ficom  WORD PTR [edi+eax*8-0x38760d1e]
  424160:	rol    DWORD PTR [edx+0x11764cdc],0x12
  424167:	mov    BYTE PTR [eax],al
  424169:	mov    bh,0xd9
  42416b:	mov    al,0x66
  42416d:	add    al,0x88
  42416f:	dec    edi
  424170:	or     DWORD PTR [eax-0x2],ecx
  424173:	sbb    DWORD PTR [ebp+eiz*8+0x16],0x3f
  424178:	push   eax
  424179:	inc    eax
  42417a:	xor    BYTE PTR [eax-0x70],al
  42417d:	out    0x6d,eax
  42417f:	enter  0x92b6,0xb7
  424183:	stos   DWORD PTR es:[edi],eax
  424184:	ret    
  424185:	sbb    eax,0xd893b82
  42418a:	lods   eax,DWORD PTR ds:[esi]
  42418b:	fdiv   DWORD PTR [edi]
  42418d:	xor    bh,0x14
  424190:	neg    dl
  424192:	in     al,0xc0
  424194:	lea    esp,[edx-0x64]
  424197:	xor    dh,dl
  424199:	cmc    
  42419a:	in     al,0xa2
  42419c:	or     bh,BYTE PTR [esi-0xf8cb673]
  4241a2:	mov    edx,0x36ac1416
  4241a7:	cmp    dh,BYTE PTR [eiz*4-0x7c7437f]
  4241ae:	jns    0x42417d
  4241b0:	rol    BYTE PTR [esi],1
  4241b2:	xchg   edi,eax
  4241b3:	sub    DWORD PTR [esi+edi*2+0x74],edx
  4241b7:	mov    ebx,0xbc98cb6
  4241bc:	test   DWORD PTR [esi-0x1f],esp
  4241bf:	jns    0x42414d
  4241c1:	push   ebx
  4241c2:	lahf   
  4241c3:	xor    dh,bh
  4241c5:	mov    edx,0xc1f4e286
  4241ca:	cwde   
  4241cb:	dec    ebp
  4241cc:	cld    
  4241cd:	(bad)
  4241d0:	sub    BYTE PTR [edx+0x1a9390e2],bl
  4241d6:	rcr    DWORD PTR [ebp-0x6a62b45f],cl
  4241dc:	mov    esi,0xa4928eab
  4241e1:	popf   
  4241e2:	dec    edi
  4241e3:	add    ch,BYTE PTR [esp+ecx*1]
  4241e6:	jmp    0x4241d6
  4241e8:	(bad)  
  4241e9:	shl    BYTE PTR [ebx-0x1e],1
  4241ec:	mov    ebp,0xc0fb2b55
  4241f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4241f2:	xchg   BYTE PTR [ebp-0x1d],dl
  4241f5:	fidiv  WORD PTR [ecx-0x5c878499]
  4241fb:	xor    eax,0xd16ea9ca
  424200:	(bad)  
  424201:	pop    edx
  424202:	(bad)  
  424203:	loopne 0x424191
  424205:	imul   ebp,esi,0xe55bb800
  42420b:	fisttp DWORD PTR [edi+0xbf73221]
  424211:	cmp    eax,0x8421f1e1
  424216:	int    0x6c
  424218:	add    esi,DWORD PTR [ebp-0x6a]
  42421b:	and    al,0x5c
  42421d:	sbb    BYTE PTR [eax+0x6d],bh
  424220:	sti    
  424221:	jge    0x4241fa
  424223:	fist   DWORD PTR [esi-0x7d6e3510]
  424229:	in     eax,dx
  42422a:	stc    
  42422b:	fidiv  DWORD PTR [ecx-0x599213b5]
  424231:	jmp    0xee6:0xb9b124b1
  424238:	push   ds
  424239:	pop    eax
  42423a:	mov    dh,0x65
  42423c:	cmp    BYTE PTR [ebx+ebp*1+0x64],bl
  424240:	mov    DWORD PTR [ebp-0x1e301a6c],edi
  424246:	adc    esp,DWORD PTR ds:0xbd84d406
  42424c:	(bad)  
  42424d:	fisubr DWORD PTR ds:0xd314b903
  424253:	or     al,0xa1
  424255:	inc    ebx
  424256:	lods   eax,DWORD PTR ds:[esi]
  424257:	jecxz  0x42428b
  424259:	in     al,dx
  42425a:	fs gs out dx,al
  42425d:	arpl   WORD PTR [ecx+esi*4-0x32],cx
  424261:	cmp    ebp,0xffffffc4
  424264:	into   
  424265:	inc    esi
  424266:	aad    0x3e
  424268:	inc    DWORD PTR [ebx-0x20]
  42426b:	dec    esi
  42426c:	xchg   ebx,eax
  42426d:	dec    esi
  42426e:	scas   eax,DWORD PTR es:[edi]
  42426f:	and    DWORD PTR [edx+0x56fc3a5f],eax
  424275:	add    BYTE PTR [edx],0xd0
  424278:	mov    eax,ds:0x2551435a
  42427d:	pop    ecx
  42427e:	sbb    dl,BYTE PTR [ebx-0x47]
  424281:	xor    ebx,esi
  424283:	mov    cl,0x22
  424285:	sar    al,cl
  424287:	data16 outs dx,BYTE PTR es:[esi]
  42428a:	mov    esi,0xedf7fcd2
  42428f:	ret    0xaf7a
  424292:	adc    BYTE PTR [ebp+ebx*2+0x2d],bl
  424296:	mov    ecx,0x4f80001
  42429b:	add    BYTE PTR [eax],al
  42429d:	dec    esi
  42429e:	adc    al,bl
  4242a0:	mov    ebx,0x679dd826
  4242a5:	popa   
  4242a6:	test   eax,0x5e0bf920
  4242ab:	fsubr  DWORD PTR [eax]
  4242ad:	jne    0x4242b0
  4242af:	retf   0xe6f
  4242b2:	aaa    
  4242b3:	in     eax,dx
  4242b4:	pop    edx
  4242b5:	test   dh,ah
  4242b7:	cmp    eax,0xc3d57906
  4242bc:	lods   al,BYTE PTR ds:[esi]
  4242bd:	cmc    
  4242be:	ret    
  4242bf:	repnz cmp DWORD PTR [esi-0x15],0x32
  4242c4:	mov    bl,0xb8
  4242c6:	jbe    0x4242df
  4242c8:	mov    esi,0x727ee108
  4242cd:	imul   ebp,ebx,0x28358cfb
  4242d3:	pop    edx
  4242d4:	mov    edx,0xa49cfa2d
  4242d9:	cmp    DWORD PTR [eax-0x2f],0x4e
  4242dd:	mov    eax,0x854485bb
  4242e2:	mov    edx,0xc05d7e7d
  4242e7:	int3   
  4242e8:	pop    esi
  4242e9:	push   ebx
  4242ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4242eb:	into   
  4242ec:	faddp  st(7),st
  4242ee:	sub    al,0x23
  4242f0:	dec    esp
  4242f1:	push   edi
  4242f2:	sub    al,BYTE PTR [ecx-0x738bb5c2]
  4242f8:	inc    edi
  4242f9:	pop    ss
  4242fa:	scas   eax,DWORD PTR es:[edi]
  4242fb:	and    eax,0x9b3c815a
  424300:	icebp  
  424301:	and    edx,eax
  424303:	jecxz  0x424359
  424305:	sbb    BYTE PTR [edx],dh
  424307:	mov    bl,ah
  424309:	xor    edx,edi
  42430b:	push   ebp
  42430c:	arpl   bx,dx
  42430e:	ret    
  42430f:	test   eax,0x89a4ffea
  424314:	mov    edx,0xcc0a361b
  424319:	fisubr DWORD PTR [edx+ebx*2-0x17]
  42431d:	hlt    
  42431e:	xchg   edi,eax
  42431f:	adc    eax,0x150df2c0
  424324:	fcomp  DWORD PTR [edi]
  424326:	test   al,0xad
  424328:	mov    DWORD PTR [edx+0x50],0xd4e80390
  42432f:	fwait
  424330:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424331:	rcr    BYTE PTR [ebp-0x20],1
  424334:	scas   al,BYTE PTR es:[edi]
  424335:	jb     0x424361
  424337:	aaa    
  424338:	xor    bh,dl
  42433a:	cwde   
  42433b:	mov    DWORD PTR [ebp+0x60],edx
  42433e:	shr    DWORD PTR [ebp+0xc],cl
  424341:	mov    ebx,0x225d6c06
  424346:	push   ebp
  424347:	pop    ds
  424348:	xchg   esp,eax
  424349:	jl     0x4243bc
  42434b:	sub    DWORD PTR [ebp+0x7f99bc31],ebx
  424351:	mov    ah,0xed
  424353:	dec    esp
  424354:	in     al,0xb2
  424356:	adc    edi,eax
  424358:	mov    bh,0x9d
  42435a:	and    esi,ebp
  42435c:	sbb    DWORD PTR [esi-0xffbabc0],esp
  424362:	push   edx
  424363:	mov    cl,0xee
  424365:	inc    edx
  424366:	or     dh,BYTE PTR [ebx-0x748ace0d]
  42436c:	call   0x1317bf42
  424371:	ins    DWORD PTR es:[edi],dx
  424372:	or     BYTE PTR [edi],0x24
  424375:	in     al,0xa3
  424377:	aas    
  424378:	sbb    al,0x6
  42437a:	fisubr WORD PTR [ebx+0x3425ab92]
  424380:	xor    BYTE PTR [esp+ebx*8],al
  424383:	ret    
  424384:	sbb    al,0x67
  424386:	push   ds
  424387:	mov    dh,0x2b
  424389:	jge    0x424369
  42438b:	adc    ch,BYTE PTR [esi+0x33aaa1c5]
  424391:	loop   0x4243ec
  424393:	push   ecx
  424394:	ins    DWORD PTR es:[edi],dx
  424395:	pop    ss
  424396:	dec    esp
  424397:	mov    cl,0x91
  424399:	mov    eax,0xa306365d
  42439e:	inc    ebx
  42439f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4243a0:	sub    cl,ah
  4243a2:	and    esp,edi
  4243a4:	imul   ebp,DWORD PTR [ebx],0xffffffa0
  4243a7:	bound  esp,QWORD PTR ds:0x96a79b71
  4243ad:	aaa    
  4243ae:	inc    edx
  4243af:	adc    al,0xb6
  4243b1:	das    
  4243b2:	not    cl
  4243b4:	popf   
  4243b5:	stos   DWORD PTR es:[edi],eax
  4243b6:	mov    dh,0xd9
  4243b8:	popf   
  4243b9:	retf   0x7c37
  4243bc:	or     ebx,esi
  4243be:	sbb    DWORD PTR [ecx],edx
  4243c0:	int3   
  4243c1:	mov    ebp,0xcdad2582
  4243c6:	mov    ah,0x94
  4243c8:	jb     0x42437f
  4243ca:	lods   eax,DWORD PTR ds:[esi]
  4243cb:	pusha  
  4243cc:	jecxz  0x4243d1
  4243ce:	test   eax,0x1ee73492
  4243d3:	iret   
  4243d4:	xchg   esi,eax
  4243d5:	mov    esp,0x788852a
  4243da:	dec    edi
  4243db:	dec    eax
  4243dc:	or     ebp,eax
  4243de:	inc    edi
  4243df:	mov    dh,0x4c
  4243e1:	ins    BYTE PTR es:[edi],dx
  4243e2:	cmp    DWORD PTR [edi+ebx*1],edi
  4243e5:	cdq    
  4243e6:	push   esi
  4243e7:	mov    ds:0xba15615d,eax
  4243ec:	mov    ?,WORD PTR [edx]
  4243ee:	hlt    
  4243ef:	mov    al,ds:0x26a22b66
  4243f4:	jb     0x424421
  4243f6:	xchg   esi,edi
  4243f8:	imul   edi,DWORD PTR [ebp-0x516b4857],0xbf995f8f
  424402:	dec    esp
  424403:	xchg   esi,eax
  424404:	mov    esp,0x239df956
  424409:	push   eax
  42440a:	iret   
  42440b:	je     0x424394
  42440d:	or     DWORD PTR [ebx],ecx
  42440f:	(bad)  
  424410:	mov    ebp,0xc8ea3091
  424415:	test   al,0x64
  424417:	ins    BYTE PTR es:[edi],dx
  424418:	mov    ds:0x6797699,eax
  42441d:	xor    BYTE PTR [ecx],ch
  42441f:	jns    0x42442f
  424421:	sbb    bh,dl
  424423:	jae    0x4243e9
  424425:	push   esp
  424426:	outs   dx,BYTE PTR ds:[esi]
  424427:	pop    es
  424428:	loop   0x424450
  42442a:	loopne 0x4243fe
  42442c:	shr    edi,0xce
  42442f:	pop    edx
  424430:	(bad)  
  424431:	in     eax,0x3c
  424433:	fbld   TBYTE PTR [edx-0x59]
  424436:	mov    DWORD PTR [eax-0x30],esp
  424439:	jl     0x42441d
  42443b:	(bad)  
  42443d:	pop    ebx
  42443e:	pop    edi
  42443f:	xor    al,0x9a
  424441:	repz sbb ecx,ecx
  424444:	add    BYTE PTR [ebx+0x39],ch
  424447:	mov    BYTE PTR [ecx],al
  424449:	jnp    0x42445b
  42444b:	aas    
  42444c:	xchg   esi,eax
  42444d:	iret   
  42444e:	int3   
  42444f:	ficom  DWORD PTR [eax-0xc45b12f]
  424455:	adc    bh,BYTE PTR [edi-0x33]
  424458:	stc    
  424459:	xlat   BYTE PTR ds:[ebx]
  42445a:	mov    bl,0xf
  42445c:	xchg   ebp,edi
  42445e:	(bad)  
  42445f:	ins    BYTE PTR es:[edi],dx
  424460:	div    edi
  424462:	rcr    DWORD PTR [edx],cl
  424464:	xchg   edi,eax
  424465:	in     al,0x99
  424467:	pop    eax
  424468:	jae    0x424448
  42446a:	(bad)  
  42446b:	jmp    0x4243fb
  42446d:	and    DWORD PTR [ebp-0x1fed12f8],esp
  424473:	outs   dx,DWORD PTR ds:[esi]
  424474:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424475:	(bad)  
  424476:	sti    
  424477:	push   ecx
  424478:	test   ecx,0x516bb3
  42447e:	not    BYTE PTR [ecx+eax*2-0xd7ddf2c]
  424485:	test   DWORD PTR [ebp+0x60],ebp
  424488:	aad    0xd0
  42448a:	into   
  42448b:	xor    esi,ebx
  42448d:	pop    ebx
  42448e:	xchg   ecx,eax
  42448f:	push   ebx
  424490:	push   0xd6010939
  424495:	rol    ebx,cl
  424497:	jl     0x4244dd
  424499:	pop    eax
  42449a:	and    eax,0xe99c69e6
  42449f:	sbb    esp,DWORD PTR [edi+0x5d61952f]
  4244a5:	mov    bl,0x71
  4244a7:	shl    ah,1
  4244a9:	push   cs
  4244aa:	xchg   edx,eax
  4244ab:	pushf  
  4244ac:	ja     0x424447
  4244ae:	pop    esp
  4244b0:	adc    eax,eax
  4244b2:	push   edx
  4244b3:	mov    ss,ebp
  4244b5:	jecxz  0x424486
  4244b7:	in     eax,0xda
  4244b9:	into   
  4244ba:	cmp    eax,0xd4615ffd
  4244bf:	jo     0x42448a
  4244c1:	jg     0x4244d8
  4244c3:	mov    bl,0x1a
  4244c5:	inc    edx
  4244c6:	jno    0x424491
  4244c8:	cmp    eax,0x6087c0ad
  4244cd:	imul   BYTE PTR [edi+0x20]
  4244d0:	cld    
  4244d1:	mov    al,ds:0x5d3575fd
  4244d6:	dec    edx
  4244d7:	xor    DWORD PTR [ebx+0x1768309b],ebp
  4244dd:	das    
  4244de:	and    DWORD PTR [edi+0x37],esi
  4244e1:	mov    DWORD PTR [edi],esp
  4244e3:	mov    dl,0x57
  4244e5:	adc    BYTE PTR [esi-0x43],dh
  4244e8:	lods   al,BYTE PTR ds:[esi]
  4244e9:	fild   QWORD PTR [edi+0x61]
  4244ec:	shl    BYTE PTR ds:0x295d349b,0x14
  4244f3:	or     eax,0xf133b520
  4244f8:	js     0x424575
  4244fa:	pop    ecx
  4244fb:	and    edi,esi
  4244fd:	nop    edx
  424500:	fist   DWORD PTR [edx+esi*4+0x7]
  424504:	sbb    edi,0x107fc9bf
  42450a:	jne    0x4244ca
  42450c:	mov    ecx,edx
  42450e:	pushf  
  42450f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424510:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424511:	in     al,dx
  424512:	inc    edx
  424513:	adc    BYTE PTR [esi+0x2f],ch
  424516:	shl    DWORD PTR [edi+0x4c],1
  424519:	out    0x62,al
  42451b:	xchg   ebp,eax
  42451c:	sub    al,BYTE PTR [edi-0x33]
  42451f:	fimul  WORD PTR [ebp*1-0x54095b4c]
  424526:	addr16 inc ecx
  424528:	fdiv   QWORD PTR [ebx+0x215b4d0f]
  42452e:	sbb    al,0x67
  424530:	mov    ebp,0x663eabde
  424535:	call   0xc49d:0x32bf9e10
  42453c:	jae    0x4244cc
  42453e:	cmc    
  42453f:	cmp    al,0x9a
  424541:	cld    
  424542:	mov    BYTE PTR [edx+0x31e3ea62],ch
  424548:	inc    edx
  424549:	outs   dx,DWORD PTR ds:[esi]
  42454a:	loope  0x424568
  42454c:	and    eax,0xcda94b06
  424551:	aaa    
  424552:	std    
  424553:	test   BYTE PTR [eax+0x18ab802a],0x91
  42455a:	lods   al,BYTE PTR ds:[esi]
  42455b:	lock xchg esi,eax
  42455d:	sbb    eax,0xe5ff8433
  424562:	dec    esp
  424563:	pop    esp
  424564:	xor    BYTE PTR ds:0xe895ade3,al
  42456a:	xlat   BYTE PTR ds:[ebx]
  42456b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42456c:	rcr    BYTE PTR [edx],0x15
  42456f:	cmp    BYTE PTR [edx+ebx*4+0x496d4a7b],cl
  424576:	(bad)
  424579:	jae    0x424571
  42457b:	push   ds
  42457c:	mov    es,WORD PTR [ebx-0x74]
  42457f:	cmp    DWORD PTR [eax-0x1e],0xfffffff3
  424583:	push   esp
  424584:	dec    esi
  424585:	pop    ds
  424586:	shl    DWORD PTR [edi+0x2bf7b291],cl
  42458c:	gs scas al,BYTE PTR es:[edi]
  42458e:	in     eax,dx
  42458f:	in     al,dx
  424590:	inc    eax
  424591:	repnz xor al,0xa9
  424594:	xchg   esi,eax
  424595:	jge    0x4245d1
  424597:	das    
  424598:	ficom  DWORD PTR [ecx-0x1a]
  42459b:	not    BYTE PTR [ebx-0xe29592c]
  4245a1:	cwde   
  4245a2:	adc    ah,BYTE PTR [edx+0x57dbcf85]
  4245a8:	repz test eax,ebp
  4245ab:	rcl    eax,0xeb
  4245ae:	jnp    0x424627
  4245b0:	es out dx,eax
  4245b2:	scas   eax,DWORD PTR es:[edi]
  4245b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4245b4:	push   ecx
  4245b5:	add    eax,0x46a3da6
  4245ba:	push   es
  4245bb:	das    
  4245bc:	test   BYTE PTR [edx+ebp*8+0x3d],bl
  4245c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4245c1:	retf   
  4245c2:	sbb    eax,0x75ba27bf
  4245c7:	adc    edx,DWORD PTR [ecx-0x7d]
  4245ca:	test   dl,0xd7
  4245cd:	lahf   
  4245ce:	xor    BYTE PTR [ebp-0x786bdca3],0x17
  4245d5:	jmp    0x805fb36d
  4245da:	mov    ch,0x9c
  4245dc:	adc    esi,edi
  4245de:	ror    BYTE PTR [ebx*2-0x27685f1b],cl
  4245e5:	sub    esp,DWORD PTR [ecx-0x32]
  4245e8:	iret   
  4245e9:	cwde   
  4245ea:	lahf   
  4245eb:	push   cs
  4245ec:	jl     0x42461b
  4245ee:	sbb    al,0x2d
  4245f0:	fsub   st,st(0)
  4245f2:	fisttp WORD PTR [esi+ecx*2-0x109c9515]
  4245f9:	adc    BYTE PTR fs:[edx+0x20],dh
  4245fd:	sub    eax,0xaa6074cf
  424602:	jl     0x424606
  424604:	and    BYTE PTR [ebx-0x29],0xd0
  424608:	xor    BYTE PTR [ebx-0x6d],bh
  42460b:	pusha  
  42460c:	retf   0x1f19
  42460f:	mov    esi,?
  424611:	jne    0x42460d
  424613:	inc    edx
  424614:	int    0x6c
  424616:	(bad)  
  424617:	mov    ds:0x357b20d7,al
  42461c:	fdivr  QWORD PTR ds:0xa843
  424621:	mov    dh,0x95
  424623:	in     al,0x92
  424625:	cmp    eax,0xe9d5e2bf
  42462a:	xchg   ebp,eax
  42462b:	fs in  al,dx
  42462d:	fistp  DWORD PTR [esi+0x7f]
  424630:	xor    dl,BYTE PTR [edi-0x36]
  424633:	dec    ecx
  424634:	lock iret 
  424636:	out    0xd5,eax
  424638:	ficom  WORD PTR ss:[esi+0x56]
  42463c:	sub    cl,BYTE PTR [edx]
  42463e:	arpl   dx,di
  424640:	mov    al,ds:0xb5f5f39c
  424645:	test   ah,ch
  424647:	out    dx,eax
  424648:	jmp    0xe170b738
  42464d:	and    al,0x8b
  42464f:	sbb    DWORD PTR [edi+0x3c],esp
  424652:	in     al,dx
  424653:	or     dh,bl
  424655:	clc    
  424656:	scas   eax,DWORD PTR es:[edi]
  424657:	rcl    esp,1
  424659:	adc    DWORD PTR [edi+0x693bfe30],0xffffffae
  424660:	push   cs
  424661:	cld    
  424662:	and    eax,0x11e42705
  424667:	mov    bl,BYTE PTR [eax+0x62e53f06]
  42466d:	imul   edx,DWORD PTR [esi],0xed25f536
  424673:	popf   
  424674:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424675:	fadd   QWORD PTR [ebx-0x2b519d46]
  42467b:	mov    ecx,0x4da05433
  424680:	and    esp,DWORD PTR [esi-0x192b4c8a]
  424686:	out    0x7d,al
  424688:	xchg   ebp,eax
  424689:	sbb    al,0xfe
  42468b:	fisttp QWORD PTR [ecx+0x71d7a594]
  424691:	push   edi
  424692:	mov    cl,0xfc
  424694:	pop    DWORD PTR [edi-0x7a]
  424697:	xchg   edx,eax
  424698:	dec    edi
  424699:	fadd   DWORD PTR ds:0xe41d3e48
  42469f:	adc    BYTE PTR [edi],0xfa
  4246a2:	pusha  
  4246a3:	or     eax,0x1
  4246a6:	bound  edi,QWORD PTR [ebp-0x26]
  4246a9:	push   esp
  4246aa:	xchg   edi,eax
  4246ab:	dec    ecx
  4246ac:	mov    esp,0x5e8d0a14
  4246b1:	and    al,0xb1
  4246b3:	cmp    DWORD PTR [edx+ebp*1],ebp
  4246b6:	push   ebp
  4246b7:	arpl   WORD PTR [esi-0x778d9231],si
  4246bd:	add    DWORD PTR [ecx+0x3d],edx
  4246c0:	xchg   esi,eax
  4246c1:	imul   edx,DWORD PTR ds:0xe7896d71,0xb
  4246c8:	inc    BYTE PTR [ebx+0x1ba7d150]
  4246ce:	or     DWORD PTR [edx-0x312e271b],edx
  4246d4:	das    
  4246d5:	push   esi
  4246d6:	pop    ds
  4246d7:	or     al,0xed
  4246d9:	ds pop ss
  4246db:	xlat   BYTE PTR ds:[ebx]
  4246dc:	cmp    eax,0xded35025
  4246e1:	xor    DWORD PTR [ebx+0x6],ebx
  4246e4:	sub    ch,BYTE PTR [ebx-0x6a1df020]
  4246ea:	mov    eax,0x8d974e67
  4246ef:	rcl    DWORD PTR [edi-0x6f],0xe8
  4246f3:	shr    DWORD PTR [edx-0x3da9630],1
  4246f9:	mov    eax,0xaef63ea4
  4246fe:	xor    DWORD PTR [ebx],0x43
  424701:	aaa    
  424702:	fs push ds
  424704:	fst    QWORD PTR [ecx-0x56]
  424707:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424708:	mov    edx,0x2c8f909d
  42470d:	mov    ebx,0xd7ac780d
  424712:	ds mov ebp,0x52e82675
  424718:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424719:	jbe    0x424779
  42471b:	out    dx,eax
  42471c:	ja     0x4246b3
  42471e:	pop    ecx
  42471f:	and    edx,DWORD PTR [edx-0x52]
  424722:	aaa    
  424723:	add    DWORD PTR ds:0x7db7ec5e,esp
  424729:	push   esi
  42472a:	jl     0x424771
  42472c:	test   DWORD PTR [edx-0x317c67a8],eax
  424732:	pusha  
  424733:	retf   0xbe68
  424736:	lahf   
  424737:	pop    esp
  424738:	or     BYTE PTR [edi],dh
  42473a:	sbb    eax,0xc6cd8b50
  42473f:	dec    edi
  424740:	repz aaa 
  424742:	stos   DWORD PTR es:[edi],eax
  424743:	xor    eax,0x88c9c02d
  424748:	xchg   ebp,eax
  424749:	mov    ch,0xc7
  42474b:	shl    edx,1
  42474d:	add    al,0x29
  42474f:	mov    dh,0x52
  424751:	cmp    DWORD PTR [eax+0x15],ecx
  424754:	mov    bh,0xfb
  424756:	adc    al,BYTE PTR [ecx+0x500d79b7]
  42475c:	enter  0xf64e,0x29
  424760:	int3   
  424761:	call   0xb08e:0x9d40de53
  424768:	cmp    al,0x3a
  42476a:	clc    
  42476b:	push   edi
  42476c:	mov    edx,0xf46f6804
  424771:	xchg   edx,eax
  424772:	xor    al,BYTE PTR [esi-0x21660701]
  424778:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424779:	jnp    0x424791
  42477b:	into   
  42477c:	(bad)  
  42477d:	sbb    DWORD PTR ds:0x839d023d,edi
  424783:	cmp    al,0x5c
  424785:	push   eax
  424786:	les    edx,FWORD PTR [ecx+ebx*2-0xa]
  42478a:	stc    
  42478b:	outs   dx,DWORD PTR ds:[esi]
  42478c:	nop
  42478d:	jp     0x424776
  42478f:	adc    esi,DWORD PTR [ecx+0x1175169d]
  424795:	sub    al,0xda
  424797:	iret   
  424798:	cmp    bh,0x95
  42479b:	outs   dx,DWORD PTR ds:[esi]
  42479c:	(bad)  
  42479d:	stc    
  42479e:	jmp    0x424795
  4247a0:	xor    al,0x43
  4247a2:	dec    edx
  4247a3:	mov    ecx,0x1be25d4
  4247a8:	add    al,bh
  4247aa:	add    al,0x0
  4247ac:	add    cl,cl
  4247ae:	sbb    al,0xc
  4247b0:	inc    esp
  4247b1:	mov    bl,cl
  4247b3:	ret    0xc116
  4247b6:	sub    eax,0xade67306
  4247bb:	push   ss
  4247bc:	mov    eax,0xa12688ce
  4247c1:	pop    ss
  4247c2:	xchg   ecx,eax
  4247c3:	xchg   ebp,eax
  4247c4:	push   esp
  4247c5:	(bad)  
  4247c6:	lock dec eax
  4247c8:	popf   
  4247c9:	sbb    eax,DWORD PTR [edx-0x2]
  4247cc:	rcl    DWORD PTR [ebp-0x77],1
  4247cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4247d0:	jo     0x4247c6
  4247d2:	rcl    DWORD PTR [edi+0x4428b764],cl
  4247d8:	pushf  
  4247d9:	adc    dh,BYTE PTR [ecx+0x4e]
  4247dc:	mov    ecx,0xc2437279
  4247e1:	or     al,0x37
  4247e3:	inc    eax
  4247e4:	xchg   ebp,eax
  4247e5:	adc    ecx,DWORD PTR [eax-0x78cc8380]
  4247eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247ec:	xchg   esp,eax
  4247ed:	mov    ecx,DWORD PTR [esi+esi*1-0x2a920847]
  4247f4:	push   esp
  4247f5:	popf   
  4247f6:	mov    ebp,0xea84e158
  4247fb:	nop
  4247fc:	and    ch,BYTE PTR [ebp-0x5d33faa5]
  424802:	xor    eax,0xe7bb67c0
  424807:	rcl    DWORD PTR [ebp-0xcd77de7],1
  42480d:	fnsetpm(287 only) 
  42480f:	scas   eax,DWORD PTR es:[edi]
  424810:	mov    eax,ds:0x4c9ffa8
  424815:	or     ebp,DWORD PTR [eax-0x10]
  424818:	int3   
  424819:	pushf  
  42481a:	and    ecx,ebp
  42481c:	dec    ebx
  42481d:	out    0xa,eax
  42481f:	es inc eax
  424821:	fdivr  DWORD PTR [edi+0x3b]
  424824:	sbb    DWORD PTR [ecx+0x5d],ebx
  424827:	push   ss
  424828:	pop    esi
  424829:	xchg   esp,eax
  42482a:	xchg   BYTE PTR [ebp+0x2f],dl
  42482d:	xlat   BYTE PTR ds:[ebx]
  42482e:	xlat   BYTE PTR ds:[ebx]
  42482f:	fadd   QWORD PTR [esi-0x6e]
  424832:	xlat   BYTE PTR ds:[ebx]
  424833:	add    DWORD PTR [esi-0x29],0x7d4539bd
  42483a:	mov    BYTE PTR [edx-0x651a624],al
  424840:	aam    0xdf
  424842:	push   ds
  424843:	push   eax
  424844:	out    0x9e,al
  424846:	or     DWORD PTR [ebp+0x28],eax
  424849:	stos   DWORD PTR es:[edi],eax
  42484a:	rcr    esi,1
  42484c:	ret    
  42484d:	ret    
  42484e:	stc    
  42484f:	data16 mov dl,BYTE PTR [ecx+edi*4]
  424853:	dec    esi
  424854:	hlt    
  424855:	mov    al,0xd3
  424857:	stc    
  424858:	jmp    0xab8778f
  42485d:	pusha  
  42485e:	in     eax,0x81
  424860:	ins    BYTE PTR es:[edi],dx
  424861:	arpl   bx,sp
  424863:	icebp  
  424864:	jae    0x42489c
  424866:	add    al,0x54
  424868:	(bad)  
  424869:	cmc    
  42486a:	repnz mov bh,0xf4
  42486d:	(bad)  [eax-0x7aac40c1]
  424873:	bound  edx,QWORD PTR [eax-0x5669ebb6]
  424879:	std    
  42487a:	inc    esi
  42487b:	sub    ecx,DWORD PTR [eax]
  42487d:	sub    dh,BYTE PTR [ebx+0x58]
  424880:	or     ecx,0x765dd2df
  424886:	lea    edi,[ebx]
  424888:	push   ebx
  424889:	mov    ah,0x35
  42488b:	popa   
  42488c:	jl     0x424841
  42488e:	jp     0x42490f
  424890:	or     al,0xdb
  424892:	dec    esp
  424893:	jnp    0x4248b2
  424895:	push   esi
  424896:	pop    edx
  424897:	dec    edx
  424898:	fmul   DWORD PTR [edi+0xc]
  42489b:	mov    WORD PTR [esi+0x7bfc44e1],?
  4248a1:	mov    WORD PTR [ebx+0x3cb7fe35],ss
  4248a7:	retf   0x7080
  4248aa:	adc    ebx,DWORD PTR [ebx+0x3e4f98e5]
  4248b0:	ins    DWORD PTR es:[edi],dx
  4248b1:	scas   al,BYTE PTR es:[edi]
  4248b2:	js     0x424847
  4248b4:	xor    al,0xe5
  4248b6:	mov    ch,0x86
  4248b8:	xor    eax,0x81a4cd49
  4248bd:	lods   eax,DWORD PTR ds:[esi]
  4248be:	icebp  
  4248bf:	sub    ah,BYTE PTR [esi+0x2ae3267b]
  4248c5:	in     al,dx
  4248c6:	sub    eax,0x248f01d4
  4248cb:	cmp    al,0x28
  4248cd:	mov    ebp,0xb97ac97e
  4248d2:	or     dl,BYTE PTR [ebp-0x7d]
  4248d5:	bsf    eax,DWORD PTR [edi+edi*1+0x643c65c]
  4248dd:	nop
  4248de:	mov    dl,0x19
  4248e0:	ins    DWORD PTR es:[edi],dx
  4248e1:	jecxz  0x424877
  4248e3:	adc    ah,BYTE PTR [eax+eax*2+0x3]
  4248e7:	add    al,0xeb
  4248e9:	adc    esi,ebp
  4248eb:	sub    al,0x1b
  4248ed:	aas    
  4248ee:	ins    DWORD PTR es:[edi],dx
  4248ef:	push   esp
  4248f0:	mov    al,0x5a
  4248f2:	scas   al,BYTE PTR es:[edi]
  4248f3:	cwde   
  4248f4:	hlt    
  4248f5:	jo     0x4248a5
  4248f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4248f8:	(bad)  
  4248f9:	loop   0x42495a
  4248fb:	cmp    al,0x1a
  4248fd:	in     eax,0xde
  4248ff:	add    eax,0x6835b702
  424904:	cmp    al,0xfc
  424906:	inc    edx
  424907:	mov    dl,0x79
  424909:	es adc dl,dl
  42490c:	lods   eax,DWORD PTR es:[esi]
  42490e:	or     BYTE PTR [edx+0x7e],bl
  424911:	mov    esi,0x4d6f6f56
  424916:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424917:	sbb    DWORD PTR [ebx],ebp
  424919:	pop    ebx
  42491a:	xchg   edi,eax
  42491b:	repz in eax,dx
  42491d:	jns    0x42494f
  42491f:	loope  0x42491f
  424921:	retf   0x9082
  424924:	xchg   ecx,eax
  424925:	rcl    DWORD PTR ds:0xf63b8efb,0x9
  42492c:	ja     0x424982
  42492e:	inc    esi
  42492f:	jl     0x424997
  424931:	mov    esp,0xd13ec7e7
  424936:	imul   esp,DWORD PTR [ebx],0xffffffef
  424939:	jne    0x424957
  42493b:	and    ch,BYTE PTR [ebx-0x3ca0fad5]
  424941:	pop    edi
  424942:	nop
  424943:	push   ecx
  424944:	push   edx
  424945:	pop    eax
  424946:	jecxz  0x42498c
  424948:	(bad)  
  424949:	jmp    0xa131d3eb
  42494e:	push   0x57
  424950:	fcmovu st,st(6)
  424952:	and    al,0xa1
  424954:	in     eax,0xbb
  424956:	shl    BYTE PTR [ecx],0xfb
  424959:	jp     0x4249c5
  42495b:	into   
  42495c:	into   
  42495d:	repnz xor al,0xcc
  424960:	lods   eax,DWORD PTR ds:[esi]
  424961:	mov    dh,0x31
  424963:	jo     0x42499b
  424965:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424966:	sub    BYTE PTR [ebx-0x9],cl
  424969:	arpl   WORD PTR [esi+0x77a70b5],dx
  42496f:	xchg   esp,eax
  424970:	mov    cl,0xce
  424972:	sub    al,0xaa
  424974:	outs   dx,DWORD PTR ds:[esi]
  424975:	dec    esp
  424976:	xchg   esi,eax
  424977:	out    dx,eax
  424978:	add    DWORD PTR [esi],ebp
  42497a:	jp     0x42493a
  42497c:	sub    esp,esi
  42497e:	push   di
  424980:	clc    
  424981:	sbb    al,bl
  424983:	inc    esp
  424984:	adc    DWORD PTR [eax+0x7e3380f3],esi
  42498a:	xchg   edx,eax
  42498b:	popf   
  42498c:	jl     0x424916
  42498e:	out    0x19,eax
  424990:	sub    DWORD PTR [edi+0x4fe875ba],0x94100045
  42499a:	inc    edx
  42499b:	push   cs
  42499c:	sbb    al,0x9b
  42499e:	cmp    eax,0xad8dabf
  4249a3:	stos   DWORD PTR es:[edi],eax
  4249a4:	je     0x42496e
  4249a6:	mov    dl,0x82
  4249a8:	xchg   DWORD PTR [ebx-0x2f990242],esi
  4249ae:	dec    edi
  4249af:	test   ecx,esi
  4249b1:	xlat   BYTE PTR ds:[ebx]
  4249b2:	cmc    
  4249b3:	xor    dh,BYTE PTR [esi]
  4249b5:	mov    ebx,0xbd87ccb3
  4249ba:	es dec esi
  4249bc:	xchg   ecx,eax
  4249bd:	ins    DWORD PTR es:[edi],dx
  4249be:	lock lods eax,DWORD PTR ds:[esi]
  4249c0:	add    eax,0xd9f3aa
  4249c5:	jno    0x4249ba
  4249c7:	ret    
  4249c8:	and    BYTE PTR [edi+edi*8+0xc],cl
  4249cc:	push   ebx
  4249cd:	into   
  4249ce:	pop    ebp
  4249cf:	xchg   eax,esi
  4249d1:	mov    cl,0x6b
  4249d3:	call   0xb72af5f3
  4249d8:	cdq    
  4249d9:	sti    
  4249da:	add    edx,ebx
  4249dc:	jl     0x424a07
  4249de:	push   edi
  4249df:	mov    ch,0xdb
  4249e1:	add    ebp,eax
  4249e3:	xchg   cl,al
  4249e5:	retf   0x78da
  4249e8:	inc    edi
  4249e9:	ja     0x4249b0
  4249eb:	inc    ecx
  4249ec:	leave  
  4249ed:	or     al,cl
  4249ef:	pop    edi
  4249f0:	mov    esp,0x12030b6d
  4249f5:	fs ret 0x7929
  4249f9:	fsub   DWORD PTR [edx]
  4249fb:	sahf   
  4249fc:	das    
  4249fd:	pop    edi
  4249fe:	ja     0x4249a2
  424a00:	mov    edi,0xd980ef1c
  424a05:	hlt    
  424a06:	or     al,0xec
  424a08:	adc    ch,cl
  424a0a:	sahf   
  424a0b:	cmp    bl,dh
  424a0d:	mov    esp,0x3a2ffeb9
  424a12:	push   ebp
  424a13:	ins    DWORD PTR es:[edi],dx
  424a14:	mov    WORD PTR [eax-0x1f],?
  424a17:	or     BYTE PTR [ecx],ch
  424a19:	add    BYTE PTR gs:[ecx-0x49567213],ch
  424a20:	daa    
  424a21:	dec    esi
  424a22:	cmp    eax,0x1f
  424a25:	jo     0x4249af
  424a27:	mov    DWORD PTR ds:0x444db06e,ebx
  424a2d:	sub    al,0x77
  424a2f:	cld    
  424a30:	dec    eax
  424a31:	test   ecx,edx
  424a33:	outs   dx,BYTE PTR ds:[esi]
  424a34:	test   eax,0x37566f90
  424a39:	inc    edi
  424a3a:	mov    edx,0x7fc0e302
  424a3f:	jo     0x424a62
  424a41:	(bad)  
  424a42:	fsub   QWORD PTR [esi]
  424a44:	cs lock ret 0xb76d
  424a49:	dec    ebp
  424a4a:	repz scas al,BYTE PTR es:[di]
  424a4d:	imul   esp,ebp,0x5a247687
  424a53:	xchg   ecx,eax
  424a55:	in     al,dx
  424a56:	fimul  DWORD PTR [ebx-0x4]
  424a59:	mov    ebp,DWORD PTR [edi-0x5e]
  424a5c:	jmp    0xe58e3432
  424a61:	or     DWORD PTR [edi],edi
  424a63:	adc    ebp,edi
  424a65:	popa   
  424a66:	dec    ebp
  424a67:	add    al,cl
  424a69:	adc    DWORD PTR [esi-0x7d95e995],esi
  424a6f:	test   eax,0x53e301a7
  424a74:	icebp  
  424a75:	hlt    
  424a76:	sub    BYTE PTR [edx],dh
  424a78:	mov    ds:0x4b497093,eax
  424a7d:	dec    edx
  424a7e:	pop    ecx
  424a7f:	outs   dx,BYTE PTR ds:[esi]
  424a80:	mov    al,ds:0x58359ce1
  424a85:	add    BYTE PTR [edi+edi*1+0x46],al
  424a89:	mov    ds:0x24975ff5,al
  424a8e:	loopne 0x424a9e
  424a90:	pop    ds
  424a91:	aad    0xcf
  424a93:	iret   
  424a94:	mov    dh,0x4c
  424a96:	jnp    0x424ab0
  424a98:	mov    BYTE PTR [edx],dh
  424a9a:	dec    esi
  424a9b:	inc    edi
  424a9c:	pop    edi
  424a9d:	enter  0x5228,0x2b
  424aa1:	js     0x424acf
  424aa3:	jle    0x424a5c
  424aa5:	stos   BYTE PTR es:[edi],al
  424aa6:	add    ebx,DWORD PTR ds:0xca983165
  424aac:	pop    eax
  424aad:	push   eax
  424aae:	pop    edx
  424aaf:	adc    eax,0x16ca2170
  424ab4:	repz test ebx,esp
  424ab7:	aam    0xf2
  424ab9:	mov    bl,0x88
  424abb:	inc    esp
  424abc:	jle    0x424a5c
  424abe:	or     ebp,DWORD PTR fs:[ecx+0x55c5af6b]
  424ac5:	leave  
  424ac6:	mov    dh,0xb1
  424ac8:	lock std 
  424aca:	xchg   ebp,eax
  424acb:	rcl    DWORD PTR [edx-0x5a48c253],0x8c
  424ad2:	and    DWORD PTR [esi-0x1a],ecx
  424ad5:	jmp    0x424a9c
  424ad7:	sbb    al,0x13
  424ad9:	sub    ch,bl
  424adb:	and    al,0xbf
  424add:	mov    ds:0x7be26a0c,eax
  424ae2:	or     al,BYTE PTR [eax-0x7dd4b5a3]
  424ae8:	jbe    0x424a78
  424aea:	stos   DWORD PTR es:[edi],eax
  424aeb:	dec    ebx
  424aec:	push   es
  424aed:	mov    WORD PTR [edi-0x5c],cs
  424af0:	out    dx,eax
  424af1:	sbb    bx,WORD PTR [edi]
  424af4:	(bad)  
  424af5:	cli    
  424af6:	nop
  424af7:	jg     0x424af7
  424af9:	adc    ebx,ecx
  424afb:	mov    eax,ds:0xafc42b82
  424b00:	mov    dl,0xad
  424b02:	call   0xff33:0x8fb64e4
  424b09:	mov    ds:0x45638898,eax
  424b0e:	out    dx,eax
  424b0f:	dec    esi
  424b10:	shl    DWORD PTR [ebx-0x4838ff70],cl
  424b16:	jne    0x424a9a
  424b18:	mov    ecx,0x98516ca7
  424b1d:	jb     0x424b82
  424b1f:	push   cs
  424b20:	dec    DWORD PTR [bp+si+0x76]
  424b24:	xlat   BYTE PTR ds:[ebx]
  424b25:	test   eax,0x9ed7e142
  424b2a:	add    esp,0x6f
  424b2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b2e:	push   edi
  424b2f:	inc    eax
  424b30:	dec    esi
  424b31:	add    al,0x0
  424b33:	or     DWORD PTR [ecx+0x411b0894],eax
  424b39:	repz jp 0x424b09
  424b3c:	dec    ebx
  424b3d:	mov    ch,0xac
  424b3f:	xchg   ecx,eax
  424b40:	xchg   esp,eax
  424b41:	mov    esp,0x1a40d455
  424b46:	je     0x424ae7
  424b48:	cmp    al,0xa5
  424b4a:	in     al,dx
  424b4b:	cdq    
  424b4c:	xor    dl,BYTE PTR [ecx-0x4cc3404d]
  424b52:	fwait
  424b53:	inc    esi
  424b54:	loope  0x424b88
  424b56:	fs scas eax,DWORD PTR es:[edi]
  424b58:	enter  0x2e6c,0x26
  424b5c:	cld    
  424b5d:	ins    BYTE PTR es:[edi],dx
  424b5e:	mov    ?,WORD PTR [edi-0x73]
  424b61:	(bad)  
  424b62:	fist   DWORD PTR [esp+ecx*1]
  424b65:	push   edi
  424b66:	mov    ?,esi
  424b68:	pop    ss
  424b69:	add    dl,BYTE PTR [eax]
  424b6b:	dec    edi
  424b6c:	xor    al,0x62
  424b6e:	repnz test al,0x79
  424b71:	pop    es
  424b72:	adc    ebx,DWORD PTR [ebp*1-0x2fe3e8b]
  424b79:	pop    ds
  424b7a:	push   ebp
  424b7b:	in     eax,0x9
  424b7d:	pop    ebp
  424b7e:	lock sub eax,0x34601bae
  424b84:	mov    ch,0xe2
  424b86:	xchg   ebp,eax
  424b87:	jp     0x424b29
  424b89:	dec    esi
  424b8a:	ja     0x424b3c
  424b8c:	(bad)  
  424b8d:	in     eax,dx
  424b8e:	inc    edx
  424b8f:	push   esi
  424b90:	jg     0x424bf4
  424b92:	mov    ebp,DWORD PTR [eax-0x8]
  424b95:	pop    edi
  424b96:	pushf  
  424b97:	(bad)  
  424b98:	inc    edx
  424b99:	sub    ah,BYTE PTR [edx-0x38]
  424b9c:	mov    bh,0xeb
  424b9e:	dec    edx
  424b9f:	push   edx
  424ba0:	scas   eax,DWORD PTR es:[edi]
  424ba1:	jno    0x424b2a
  424ba3:	jnp    0x424bac
  424ba5:	jmp    0xcfeb:0xe6ef4a47
  424bac:	iret   
  424bad:	scas   al,BYTE PTR es:[edi]
  424bae:	add    esi,DWORD PTR [eax+0x4438f76e]
  424bb4:	(bad)  
  424bb6:	shl    dl,1
  424bb8:	mov    ds:0xa4496401,eax
  424bbd:	xchg   ecx,eax
  424bbe:	pop    ebp
  424bbf:	ret    0x4077
  424bc2:	mov    esi,0xc49727d4
  424bc7:	xchg   ecx,eax
  424bc8:	sub    DWORD PTR [eax],ebp
  424bca:	push   ecx
  424bcb:	jp     0x424c11
  424bcd:	xchg   ecx,eax
  424bce:	ret    
  424bcf:	stos   BYTE PTR es:[edi],al
  424bd0:	jo     0x424bcc
  424bd2:	sbb    ebp,esi
  424bd4:	jmp    0xe827:0x252bd011
  424bdb:	int3   
  424bdc:	push   edi
  424bdd:	leave  
  424bde:	or     eax,DWORD PTR fs:[ebx-0x18147287]
  424be5:	xor    ecx,edi
  424be7:	inc    edi
  424be8:	lea    eax,[ebx-0x29]
  424beb:	mov    cl,0x97
  424bed:	mov    esp,edi
  424bef:	cld    
  424bf0:	lahf   
  424bf1:	inc    ebx
  424bf2:	push   esi
  424bf4:	lock mov cl,BYTE PTR [esp+ecx*1+0x3a]
  424bf9:	jo     0x424c73
  424bfb:	std    
  424bfc:	pop    es
  424bfd:	ds dec eax
  424bff:	xor    BYTE PTR [ecx+0x226fab35],bl
  424c05:	sub    BYTE PTR [eax+ebx*4],ch
  424c08:	jp     0x424c31
  424c0a:	mov    ah,0x82
  424c0c:	fbstp  TBYTE PTR [ebx+ebx*4-0x77412bd9]
  424c13:	adc    DWORD PTR [esi+ebx*2+0x61],0x5f
  424c18:	mov    dl,0x7a
  424c1a:	mov    ah,0x64
  424c1c:	iret   
  424c1d:	push   ecx
  424c1e:	rcr    BYTE PTR [edi-0x22835a47],1
  424c24:	sahf   
  424c25:	adc    al,0x70
  424c27:	ret    0xe0fb
  424c2a:	ret    
  424c2b:	(bad)  
  424c2c:	xchg   esp,eax
  424c2d:	mov    eax,0x79ff2cde
  424c32:	loop   0x424c86
  424c34:	jo     0x424be7
  424c36:	test   DWORD PTR [esi],esp
  424c38:	frstor [edx]
  424c3a:	int    0xab
  424c3c:	pushf  
  424c3d:	lock enter 0x6ed9,0x7
  424c42:	jne    0x424cbe
  424c44:	mov    cl,0x7c
  424c46:	mov    edx,0x136a39ba
  424c4b:	nop
  424c4c:	arpl   WORD PTR [eax+0x5c],ax
  424c4f:	mov    ebx,0x70ab2458
  424c54:	call   0x9673:0xb5495510
  424c5b:	(bad)  
  424c5c:	adc    eax,0x1069380f
  424c61:	jb     0x424bf1
  424c63:	jp     0x424c9c
  424c65:	dec    ebx
  424c66:	out    dx,eax
  424c67:	jbe    0x424c37
  424c69:	sub    al,0x4f
  424c6b:	dec    eax
  424c6c:	into   
  424c6d:	cdq    
  424c6e:	arpl   WORD PTR [edx-0x3c],di
  424c71:	and    eax,0x3c0b45c
  424c76:	aad    0x1b
  424c78:	shl    BYTE PTR [ebx+0x33],cl
  424c7b:	or     al,0x8a
  424c7d:	or     DWORD PTR [edx+0x6650073a],ecx
  424c83:	fbld   TBYTE PTR [edi]
  424c85:	nop
  424c86:	lahf   
  424c87:	mov    esp,0x9b591073
  424c8c:	mov    ah,0x79
  424c8e:	pop    ebp
  424c8f:	cs push es
  424c91:	dec    esi
  424c92:	xor    esp,DWORD PTR [edi-0x4b]
  424c95:	jmp    0xe71:0x4b924056
  424c9c:	cli    
  424c9d:	mov    eax,0x8f8b7635
  424ca2:	sahf   
  424ca3:	cld    
  424ca4:	inc    ecx
  424ca5:	adc    ecx,DWORD PTR [ebp-0x104094d7]
  424cab:	push   ebx
  424cac:	std    
  424cad:	push   0x384438c4
  424cb2:	ret    0x1941
  424cb5:	sbb    eax,0xf80001c3
  424cba:	add    al,0x0
  424cbc:	add    BYTE PTR [edx+0x44],ch
  424cbf:	mov    bl,0xec
  424cc1:	pop    ecx
  424cc2:	rcr    ah,0x58
  424cc5:	xchg   esi,ecx
  424cc7:	jecxz  0x424d0c
  424cc9:	out    0xb6,eax
  424ccb:	pop    DWORD PTR [eax]
  424ccd:	ror    BYTE PTR [ecx-0x2069dc75],1
  424cd3:	pop    ebx
  424cd4:	in     al,0x7e
  424cd6:	and    cl,bl
  424cd8:	jmp    0x3eba:0x7d066abe
  424cdf:	xor    eax,DWORD PTR [edi+0x7c]
  424ce2:	mov    edx,0x32bfb44a
  424ce7:	aam    0x54
  424ce9:	jo     0x424ca4
  424ceb:	cwde   
  424cec:	lahf   
  424ced:	jb     0x424d09
  424cef:	push   ds
  424cf0:	data16 or BYTE PTR [edx+ebx*1+0x4236552d],dh
  424cf8:	rcl    DWORD PTR [ecx-0x1aed7f91],cl
  424cfe:	adc    eax,0x453d2986
  424d03:	adc    dh,al
  424d05:	out    0xb2,al
  424d07:	mov    eax,0x4d7086a3
  424d0c:	pop    edi
  424d0d:	scas   eax,DWORD PTR es:[edi]
  424d0e:	mov    al,0xd8
  424d10:	or     BYTE PTR [eax-0x23],dl
  424d13:	xor    BYTE PTR [ecx+ebp*8],ch
  424d16:	js     0x424cf9
  424d18:	push   esp
  424d19:	ror    BYTE PTR [ebp+edi*8+0x24],0x71
  424d1e:	fidivr DWORD PTR [edi+0x441d7c13]
  424d24:	neg    BYTE PTR [esi-0x4fe837c3]
  424d2a:	mov    ?,WORD PTR ds:0xde2d18ed
  424d30:	adc    al,0xcf
  424d32:	mov    dl,0xef
  424d35:	push   eax
  424d36:	ret    0x42cc
  424d39:	jg     0x424d7f
  424d3b:	gs loope 0x424d2b
  424d3e:	push   ecx
  424d3f:	fs jge 0x424d8c
  424d42:	jne    0x424d7e
  424d44:	in     eax,0x21
  424d46:	cdq    
  424d47:	js     0x424d7a
  424d49:	mov    esp,0x4037ec21
  424d4e:	mov    edx,0x8a3bd2ae
  424d53:	mov    ds:0xd91d469a,eax
  424d58:	xor    BYTE PTR [ebx],0x6e
  424d5b:	out    0x6d,eax
  424d5d:	mov    dh,0x17
  424d5f:	fs jo  0x424d91
  424d62:	inc    ecx
  424d63:	imul   ecx,eax,0x861c66e6
  424d69:	jle    0x424d9f
  424d6b:	cli    
  424d6c:	call   0x711d:0xdefc8a7a
  424d73:	test   eax,0x355d2b93
  424d78:	bound  edi,QWORD PTR [ebx+0x5b]
  424d7b:	push   eax
  424d7c:	ds sbb esp,ecx
  424d7f:	pop    edx
  424d80:	jmp    0x424deb
  424d82:	push   eax
  424d83:	adc    BYTE PTR [esi],dl
  424d85:	rcl    esi,0x26
  424d88:	mov    ch,0x37
  424d8a:	out    dx,al
  424d8b:	sub    eax,DWORD PTR [esi+0x17f19dd4]
  424d91:	jmp    0x424d8e
  424d93:	mov    esi,0x65b9699f
  424d98:	aad    0xcd
  424d9a:	(bad)  
  424d9b:	es add al,0xc
  424d9e:	popf   
  424d9f:	dec    edx
  424da0:	call   0x8e7c:0x1a522076
  424da7:	iret   
  424da8:	pop    esp
  424da9:	jl     0x424dff
  424dab:	inc    esp
  424dac:	or     al,0xf8
  424dae:	jp     0x424d3b
  424db0:	out    0x4,al
  424db2:	arpl   WORD PTR [ecx+0x34],si
  424db5:	pop    eax
  424db6:	stos   DWORD PTR es:[di],eax
  424db8:	cdq    
  424db9:	or     edx,DWORD PTR [edi]
  424dbb:	adc    bh,BYTE PTR [ecx]
  424dbd:	pusha  
  424dbe:	xor    ch,dh
  424dc0:	les    ecx,FWORD PTR [edx+0x42ec74e9]
  424dc6:	adc    al,0x2e
  424dc8:	fdiv   st(0),st
  424dca:	mov    edi,0xca1fd17e
  424dcf:	call   0x872f8d0c
  424dd4:	iret   
  424dd5:	call   0xbcca382
  424dda:	pop    edx
  424ddb:	and    BYTE PTR [ebx-0x162ca881],ch
  424de1:	rcl    DWORD PTR [eax-0x63],cl
  424de4:	retf   0xd0d0
  424de7:	loope  0x424e31
  424de9:	adc    edx,ebx
  424deb:	mov    bh,0x6e
  424ded:	(bad)  
  424def:	jl     0x424e58
  424df1:	mov    ah,0xba
  424df3:	jle    0x424e33
  424df5:	test   dh,bl
  424df7:	(bad)  
  424df8:	pause  
  424dfa:	lods   al,BYTE PTR cs:[esi]
  424dfc:	push   eax
  424dfd:	shl    edx,1
  424dff:	lahf   
  424e00:	adc    eax,0x7a0979de
  424e05:	jle    0x424e40
  424e07:	pop    eax
  424e08:	push   ds
  424e09:	neg    ch
  424e0b:	xor    ecx,edi
  424e0d:	jl     0x424dd2
  424e0f:	test   al,0x66
  424e11:	call   0x7cde851f
  424e16:	aad    0x1c
  424e18:	push   ss
  424e19:	jle    0x424e68
  424e1b:	pop    ecx
  424e1c:	sub    edx,DWORD PTR [edi]
  424e1e:	inc    ebp
  424e1f:	rol    BYTE PTR [edi+0x1b71cea9],1
  424e25:	mov    eax,0x492848f5
  424e2a:	mov    bl,0x92
  424e2c:	inc    ebp
  424e2d:	xchg   edx,eax
  424e2e:	pop    edi
  424e2f:	(bad)  
  424e30:	frstor [ebp-0x37cdef23]
  424e36:	mov    WORD PTR [edx+0x35],ds
  424e39:	lea    eax,[ecx-0xc]
  424e3c:	inc    ecx
  424e3d:	iret   
  424e3e:	cmp    al,0x1c
  424e40:	cmp    BYTE PTR [esi],ch
  424e42:	sti    
  424e43:	inc    esp
  424e44:	mov    WORD PTR [eax+0x470ed05f],es
  424e4a:	push   0x28da44a5
  424e4f:	or     eax,0xcd01802f
  424e54:	ins    DWORD PTR es:[edi],dx
  424e55:	sub    esi,DWORD PTR [edx+esi*4+0x6142bb82]
  424e5c:	sub    esi,esi
  424e5e:	rcr    BYTE PTR [ecx-0x70],0x7
  424e62:	jb     0x424e55
  424e64:	pushf  
  424e65:	popf   
  424e66:	pop    ebp
  424e67:	das    
  424e68:	fcom   QWORD PTR [eax+0x751a8909]
  424e6e:	cs pop edi
  424e70:	push   es
  424e71:	out    0xda,al
  424e73:	pop    edx
  424e74:	repnz inc ebp
  424e76:	pop    ss
  424e77:	fimul  DWORD PTR [esi-0x85dfb00]
  424e7d:	xlat   BYTE PTR ds:[ebx]
  424e7e:	pop    esi
  424e7f:	add    ah,BYTE PTR [esi-0x68d08e68]
  424e85:	push   edi
  424e86:	push   ebx
  424e87:	add    al,0xc
  424e89:	sahf   
  424e8a:	dec    edi
  424e8b:	pop    ebx
  424e8c:	int3   
  424e8d:	xchg   ecx,eax
  424e8e:	xor    DWORD PTR [eax+0x386e469b],esp
  424e94:	xor    dh,BYTE PTR ds:0xcc6e485c
  424e9a:	mov    bh,0xbb
  424e9c:	or     al,0x46
  424e9e:	cmp    ah,BYTE PTR [edx]
  424ea0:	dec    ebx
  424ea1:	aam    0x10
  424ea3:	mov    ds:0x4fb755f1,eax
  424ea8:	push   cs
  424ea9:	mov    al,0x25
  424eab:	fnsave [edx]
  424ead:	loop   0x424e43
  424eaf:	jp     0x424e35
  424eb1:	data16 fistp QWORD PTR [ebp-0xe906d4a]
  424eb8:	aam    0x9d
  424eba:	pop    eax
  424ebb:	adc    bh,BYTE PTR [edx+edi*4+0x11]
  424ebf:	jmp    0xab9f:0x7216f14b
  424ec6:	push   edx
  424ec7:	jl     0x424e6e
  424ec9:	xor    ch,BYTE PTR [ecx-0x363ea49f]
  424ecf:	ss xchg esp,eax
  424ed1:	push   edx
  424ed2:	pop    ss
  424ed3:	mov    ecx,esp
  424ed5:	mov    eax,0x7f64e5e5
  424eda:	mov    al,0xae
  424edc:	aaa    
  424edd:	jno    0x424f03
  424edf:	fstp   QWORD PTR [esi]
  424ee1:	stc    
  424ee2:	scas   al,BYTE PTR es:[edi]
  424ee3:	pop    eax
  424ee4:	shl    BYTE PTR [edx-0x45],1
  424ee7:	bound  ebp,QWORD PTR [eax-0x13543b05]
  424eed:	fs popf 
  424eef:	scas   al,BYTE PTR es:[edi]
  424ef0:	addr16 jp 0x424e9a
  424ef3:	aas    
  424ef4:	mov    ch,0xdb
  424ef6:	pop    ss
  424ef7:	bnd js 0x424f61
  424efa:	add    bl,BYTE PTR [esi-0x3a1067ba]
  424f00:	cmp    esi,DWORD PTR [esi+0x4d]
  424f03:	icebp  
  424f04:	cli    
  424f05:	scas   al,BYTE PTR es:[edi]
  424f06:	mov    eax,ds:0xc88705d6
  424f0b:	pop    ds
  424f0c:	cmp    dl,BYTE PTR [esi+edx*8+0x435e1f68]
  424f13:	out    0xa2,eax
  424f15:	popa   
  424f16:	lock jg 0x424f49
  424f19:	stos   DWORD PTR es:[edi],eax
  424f1a:	push   ebp
  424f1b:	das    
  424f1c:	mov    bl,0x73
  424f1e:	xor    edi,DWORD PTR [ebx+eax*4]
  424f21:	or     bl,BYTE PTR [ecx-0x4b]
  424f24:	cmp    dl,BYTE PTR [edi]
  424f26:	enter  0x3d70,0x6b
  424f2a:	nop
  424f2b:	fst    DWORD PTR [ebp-0x7c]
  424f2e:	std    
  424f2f:	mov    ?,WORD PTR [edx]
  424f31:	mov    dh,0x5f
  424f33:	retf   
  424f34:	xor    al,0xd5
  424f36:	xchg   ecx,eax
  424f37:	jae    0x424f00
  424f39:	mov    WORD PTR [eax],?
  424f3b:	push   esp
  424f3c:	pusha  
  424f3d:	neg    BYTE PTR [edx+0x77bbcec9]
  424f43:	and    DWORD PTR [edx+0x43],0x4b24c1aa
  424f4a:	jmp    0x424f27
  424f4c:	lds    ecx,FWORD PTR [ebx]
  424f4e:	or     al,0x12
  424f50:	idiv   BYTE PTR [edi+0x13]
  424f53:	mov    ?,WORD PTR [eax+0x63]
  424f56:	mov    DWORD PTR [esi-0x3b],0x55ca377a
  424f5d:	stos   BYTE PTR es:[edi],al
  424f5e:	ret    
  424f5f:	imul   esp,DWORD PTR [ebp-0x5adc2c8e],0xe5a70928
  424f69:	xchg   DWORD PTR [eax],esi
  424f6b:	jl     0x424f34
  424f6d:	xor    al,al
  424f6f:	inc    edi
  424f70:	and    DWORD PTR [ecx-0x48],esi
  424f73:	ins    BYTE PTR es:[edi],dx
  424f74:	test   BYTE PTR ds:0x1edab74e,dh
  424f7a:	loope  0x424f43
  424f7c:	mov    ebx,esi
  424f7e:	jno    0x424f19
  424f80:	test   eax,0xea0e33f8
  424f85:	xchg   ecx,eax
  424f86:	jge    0x424fac
  424f88:	aam    0x11
  424f8a:	jecxz  0x424f8e
  424f8c:	push   ds
  424f8d:	int    0x60
  424f8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f90:	jo     0x424fee
  424f92:	push   cs
  424f93:	sar    BYTE PTR [eax],1
  424f95:	or     BYTE PTR [edi-0xb],bl
  424f98:	popf   
  424f99:	lahf   
  424f9a:	mov    eax,0xfd48db54
  424f9f:	cmp    al,0xf2
  424fa1:	cmp    eax,0xaf5f80f7
  424fa6:	stos   DWORD PTR es:[edi],eax
  424fa7:	add    al,0xcb
  424fa9:	(bad)  
  424faa:	jp     0x424f55
  424fac:	aam    0xec
  424fae:	add    edx,0x29ace439
  424fb4:	or     BYTE PTR [ecx+0xe],dh
  424fb7:	fs scas eax,DWORD PTR es:[edi]
  424fb9:	mov    al,ds:0x53463e99
  424fbe:	add    DWORD PTR [ebp+esi*8+0x65],eax
  424fc2:	sub    eax,0x40e8c661
  424fc7:	and    al,0x28
  424fc9:	neg    BYTE PTR [eax+0x4b]
  424fcc:	sub    eax,0xd1772b5d
  424fd1:	xchg   DWORD PTR [esi+eiz*4],ebp
  424fd4:	das    
  424fd5:	dec    ecx
  424fd6:	scas   eax,DWORD PTR es:[edi]
  424fd7:	sub    ebp,DWORD PTR [ebp+0xf]
  424fda:	cwde   
  424fdb:	sbb    edx,ecx
  424fdd:	rol    ecx,cl
  424fdf:	ds cdq 
  424fe1:	call   DWORD PTR [ecx-0x76ba8de7]
  424fe7:	(bad)  
  424fe8:	push   edx
  424fe9:	mov    edx,0xe0e29104
  424fee:	nop
  424fef:	test   al,0xba
  424ff1:	mov    bh,0x6c
  424ff3:	cmp    dh,BYTE PTR [ebx-0x5d0951a]
  424ff9:	je     0x424f96
  424ffb:	sbb    cl,BYTE PTR [edx]
  424ffd:	jl     0x424fbd
  424fff:	nop
  425000:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425001:	add    BYTE PTR [ecx+edx*2+0x6bcef431],dl
  425008:	adc    al,0xfb
  42500a:	mov    BYTE PTR [ecx],0x50
  42500d:	and    BYTE PTR [ebx+0xe],bh
  425010:	idiv   bl
  425012:	cmp    ecx,DWORD PTR [esi]
  425014:	sbb    eax,0xfe3757df
  425019:	pop    ecx
  42501a:	mov    ch,0x74
  42501c:	mov    cl,0xf5
  42501e:	enter  0xab85,0xa5
  425022:	out    dx,al
  425023:	out    0x7b,eax
  425025:	push   ecx
  425026:	mov    al,ds:0x2921af06
  42502b:	push   edx
  42502c:	fmul   QWORD PTR [ebx+0x13]
  42502f:	dec    esi
  425030:	add    eax,0xdf287a43
  425035:	mov    DWORD PTR [ecx+0x4b2cdfa],esi
  42503b:	xor    ebx,ecx
  42503d:	daa    
  42503e:	in     al,0x57
  425040:	dec    esi
  425041:	inc    esp
  425042:	pop    ecx
  425043:	lds    esp,FWORD PTR [ecx+0x58a4ef57]
  425049:	fsub   DWORD PTR [eax]
  42504b:	adc    BYTE PTR [ecx+0x207bb551],al
  425051:	cld    
  425052:	mov    ah,0xa6
  425054:	lock pushf 
  425056:	jp     0x42502d
  425058:	or     ax,0x2d19
  42505c:	iret   
  42505d:	js     0x424ffe
  42505f:	and    BYTE PTR [eax],dh
  425061:	scas   eax,DWORD PTR es:[edi]
  425062:	jl     0x425036
  425064:	or     eax,DWORD PTR [esp+edi*4-0x31]
  425068:	and    BYTE PTR [ebx-0x38],dh
  42506b:	sub    BYTE PTR [edx+0x278500db],bh
  425071:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425072:	into   
  425073:	cs pusha 
  425075:	push   cs
  425076:	or     al,0x43
  425078:	cmp    esp,DWORD PTR [ebp-0x44e31834]
  42507e:	addr16 xchg ebx,eax
  425080:	rcr    edx,1
  425082:	or     al,0x5e
  425084:	push   eax
  425085:	or     BYTE PTR [edx],0xc5
  425088:	ret    
  425089:	sub    DWORD PTR [edx+0x5483c96b],esp
  42508f:	shl    DWORD PTR [esi-0x36128eea],1
  425095:	shr    DWORD PTR [edx+0x43291efb],0x32
  42509c:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  42509e:	xor    DWORD PTR [ebx+0x4b883e5a],eax
  4250a4:	mov    ah,0xc1
  4250a6:	jae    0x425097
  4250a8:	pushf  
  4250a9:	ret    
  4250aa:	ds je  0x4250ba
  4250ad:	and    bl,bh
  4250af:	jne    0x425111
  4250b1:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4250b3:	pushfw 
  4250b5:	xchg   dl,dh
  4250b7:	xlat   BYTE PTR ds:[ebx]
  4250b8:	xor    eax,0x78dae174
  4250bd:	push   ds
  4250be:	arpl   WORD PTR [esi-0x2e],bx
  4250c1:	aas    
  4250c2:	sahf   
  4250c3:	cmp    al,0x41
  4250c5:	xor    bl,ah
  4250c7:	in     eax,dx
  4250c8:	jnp    0x42507e
  4250ca:	push   edx
  4250cb:	and    edi,DWORD PTR [edi+0x59429547]
  4250d1:	imul   ebx,esi,0xffffffd7
  4250d4:	and    al,0xdd
  4250d6:	(bad)  
  4250d7:	shl    DWORD PTR [ebx],1
  4250d9:	jns    0x4250d5
  4250db:	push   0x9583abdf
  4250e0:	mov    ?,WORD PTR [ecx+0x1e]
  4250e3:	adc    eax,0x7893573f
  4250e8:	pusha  
  4250e9:	rol    BYTE PTR [ebx-0x354d32c5],0x40
  4250f0:	cmp    bl,BYTE PTR [eax-0x9]
  4250f3:	and    bh,cl
  4250f5:	mov    ah,0xdc
  4250f7:	sub    BYTE PTR [ecx],ch
  4250f9:	push   cs
  4250fa:	lods   al,BYTE PTR ds:[esi]
  4250fb:	sbb    al,0xb9
  4250fd:	jae    0x42515d
  4250ff:	into   
  425100:	ss fwait
  425102:	imul   BYTE PTR [ebp-0x747fdaba]
  425108:	adc    DWORD PTR [edi+ecx*1],eax
  42510b:	pop    es
  42510c:	sbb    edi,DWORD PTR [eax]
  42510e:	pop    ebp
  42510f:	dec    ebp
  425110:	out    dx,al
  425111:	imul   ebx,edi,0x1e30420f
  425117:	repnz add bh,BYTE PTR [edi-0x20b998b9]
  42511e:	(bad)  
  42511f:	mov    dh,0x90
  425121:	xchg   ecx,eax
  425122:	push   ecx
  425123:	loope  0x4250c1
  425125:	jmp    0x4250ee
  425127:	pop    ss
  425128:	js     0x4250d1
  42512a:	fwait
  42512b:	popf   
  42512c:	adc    ebp,DWORD PTR [ebx+0x14]
  42512f:	call   FWORD PTR [esi+0x33]
  425132:	lahf   
  425133:	int    0x9a
  425135:	mov    ?,WORD PTR [ebp+ebx*8-0x6cea4977]
  42513c:	mov    bl,0xf
  42513e:	(bad)  
  42513f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425140:	push   edi
  425141:	cmp    ch,BYTE PTR [ebx]
  425143:	fcomp  QWORD PTR [ecx+edi*2]
  425146:	mov    edx,DWORD PTR [edi-0x4dd54e38]
  42514c:	mov    ah,0x30
  42514e:	add    edx,DWORD PTR [edx]
  425150:	stos   DWORD PTR es:[edi],eax
  425151:	in     al,dx
  425152:	sub    ebp,edx
  425154:	or     al,0x6f
  425156:	sbb    eax,0x82afd084
  42515b:	or     edx,DWORD PTR [eax+0x4e5fdd9b]
  425161:	(bad)  
  425162:	call   0x7592:0x477e8f7
  425169:	pushfw 
  42516b:	pop    es
  42516c:	jecxz  0x425153
  42516e:	adc    eax,0x7e29d3bc
  425173:	sahf   
  425174:	(bad)  
  425175:	in     al,dx
  425176:	test   eax,0x23c980c5
  42517b:	push   0xffffffd8
  42517d:	fadd   st,st(0)
  42517f:	fsub   DWORD PTR [ebp+0x7b223aaa]
  425185:	loope  0x42510f
  425187:	mov    ds:0xf0bab58c,eax
  42518c:	mov    DWORD PTR [eax+0x4f],esp
  42518f:	imul   eax,esp,0x9b5ae477
  425195:	aas    
  425196:	cmp    ch,BYTE PTR [edx]
  425198:	(bad)  
  425199:	mov    esp,0xd6dc2ebd
  42519e:	adc    DWORD PTR [edx+0x70cc8482],edi
  4251a4:	xor    al,0xbd
  4251a6:	hlt    
  4251a7:	xchg   ebx,eax
  4251a8:	inc    ecx
  4251a9:	rcl    DWORD PTR [ebx-0x58ca5f7d],cl
  4251af:	xor    esp,0x473317e8
  4251b5:	add    BYTE PTR [edi+ecx*2+0x7],0xcf
  4251ba:	bswap  eax
  4251bc:	(bad)  
  4251bd:	int3   
  4251be:	push   0xffffffa1
  4251c0:	lahf   
  4251c1:	jb     0x4251cc
  4251c3:	outs   dx,DWORD PTR ds:[esi]
  4251c4:	cdq    
  4251c5:	adc    eax,0xf80001c8
  4251ca:	add    al,0x0
  4251cc:	add    dh,ah
  4251ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251cf:	int    0x2d
  4251d1:	pusha  
  4251d2:	out    0x3c,eax
  4251d4:	mov    esi,0x5698cb93
  4251d9:	addr16 pop esp
  4251db:	pop    esp
  4251dc:	push   edx
  4251dd:	fisttp QWORD PTR [eax-0xce277d4]
  4251e3:	ror    al,1
  4251e5:	(bad)  
  4251e6:	ins    DWORD PTR es:[edi],dx
  4251e7:	push   0x990e9546
  4251ec:	xchg   edx,eax
  4251ed:	mov    edx,0x3952ec93
  4251f2:	and    ah,BYTE PTR [edi+0x61728e85]
  4251f8:	xchg   DWORD PTR [edi],esi
  4251fa:	in     eax,dx
  4251fb:	outs   dx,BYTE PTR ds:[esi]
  4251fc:	js     0x42526e
  4251fe:	out    dx,eax
  4251ff:	pop    ebp
  425200:	pop    ss
  425201:	test   al,0x42
  425203:	scas   eax,DWORD PTR es:[edi]
  425204:	les    ebx,FWORD PTR [edi-0x78]
  425207:	add    DWORD PTR [esi+0x1a118257],edx
  42520d:	mov    edi,0x1a6c4f39
  425212:	(bad)  
  425214:	daa    
  425215:	xchg   esi,esp
  425217:	jmp    0xfcfd:0xf202d91
  42521e:	ins    DWORD PTR es:[edi],dx
  42521f:	das    
  425220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425221:	dec    ecx
  425222:	arpl   WORD PTR [esi+0x48],si
  425225:	adc    BYTE PTR [esi+0x58],0xfa
  425229:	mov    cl,0x8f
  42522b:	out    0x85,al
  42522d:	xchg   esp,eax
  42522e:	sbb    DWORD PTR [ebx+0x67],esi
  425231:	adc    al,0x71
  425233:	test   eax,0xbea5183
  425238:	rcl    DWORD PTR [ebx],cl
  42523a:	or     al,0x32
  42523c:	out    dx,eax
  42523d:	adc    esi,DWORD PTR [esi]
  42523f:	mov    bl,BYTE PTR [ebx+0x1232b07]
  425245:	cmp    al,BYTE PTR [edx+0x34]
  425248:	imul   edi,ebx,0xffffffe6
  42524b:	jge    0x4252bf
  42524d:	mov    esi,0x340ab054
  425252:	pop    ds
  425253:	cli    
  425254:	xchg   ebx,eax
  425255:	pop    eax
  425256:	icebp  
  425257:	mov    ecx,0x3d262e0e
  42525c:	mov    ebp,0xe06176b
  425261:	lock js 0x4252e0
  425264:	xor    BYTE PTR [ebx+0x12da251e],dl
  42526a:	shl    DWORD PTR [edi+0x71],cl
  42526d:	push   eax
  42526e:	cmc    
  42526f:	cdq    
  425270:	mov    esi,eax
  425272:	cdq    
  425273:	jne    0x42520d
  425275:	div    DWORD PTR [eax+esi*8-0x13]
  425279:	jno    0x425264
  42527b:	outs   dx,BYTE PTR ds:[esi]
  42527c:	fadd   QWORD PTR [eax-0x4f2da4c8]
  425282:	mov    eax,ds:0xf55c8754
  425287:	mov    bl,0x63
  425289:	iret   
  42528a:	hlt    
  42528b:	(bad)  
  42528c:	ins    DWORD PTR es:[edi],dx
  42528d:	jmp    0x67ff:0x676fe099
  425294:	dec    edx
  425295:	sub    al,0x6d
  425297:	pushf  
  425298:	(bad)  
  425299:	(bad)  
  42529a:	out    0x6,al
  42529c:	aas    
  42529d:	mov    ebx,edx
  42529f:	out    0x1b,al
  4252a1:	cmp    DWORD PTR [eax],eax
  4252a3:	ss mov eax,0x688815d7
  4252a9:	(bad)  
  4252aa:	sbb    esi,DWORD PTR [edx]
  4252ac:	repnz xor BYTE PTR [ecx-0x52db535b],cl
  4252b3:	fnsave [edx+0x6970da81]
  4252b9:	and    edx,DWORD PTR [edi]
  4252bb:	in     eax,dx
  4252bc:	push   ss
  4252bd:	inc    esi
  4252be:	mov    ebp,?
  4252c0:	mov    eax,0x69518698
  4252c5:	sub    edx,DWORD PTR [ebp-0x7dc462ea]
  4252cb:	and    DWORD PTR [ebp+0x4915da35],edi
  4252d1:	fwait
  4252d2:	jnp    0x425298
  4252d4:	sar    BYTE PTR [esi+0x4fc7cef8],cl
  4252da:	and    BYTE PTR [esp+eiz*8-0x1cb6f0de],bl
  4252e1:	hlt    
  4252e2:	fdivr  QWORD PTR [ebp+0x32]
  4252e5:	xor    al,bh
  4252e7:	(bad)  
  4252e8:	stos   BYTE PTR es:[edi],al
  4252e9:	cmp    BYTE PTR [edx+0x3df91615],0x38
  4252f0:	inc    ebx
  4252f1:	mov    eax,ds:0xfc2b829
  4252f6:	push   eax
  4252f7:	dec    esi
  4252f8:	js     0x42536c
  4252fa:	push   cs
  4252fb:	mov    bh,dl
  4252fd:	addr16 pop esp
  4252ff:	jmp    0xa5e6:0xc912c7b2
  425306:	sub    bl,BYTE PTR [ebx+0x54]
  425309:	mov    edx,0x5c5ddcdd
  42530e:	repnz nop
  425310:	cmp    bl,BYTE PTR ds:0x427501b2
  425316:	or     dh,bh
  425318:	pop    edi
  425319:	xchg   ebx,eax
  42531a:	mov    esi,0x6cdcbdfd
  42531f:	sbb    bh,bl
  425321:	fdiv   DWORD PTR ds:0x30d52462
  425327:	frstor [ebx+ebp*2]
  42532a:	jbe    0x42530f
  42532c:	je     0x42539c
  42532e:	outs   dx,DWORD PTR ds:[esi]
  42532f:	mov    DWORD PTR [ebp-0x3b],edi
  425332:	push   ss
  425333:	jge    0x42536f
  425335:	lods   al,BYTE PTR ds:[esi]
  425336:	mov    esp,0xaa984938
  42533b:	xchg   ebx,eax
  42533c:	sub    esi,ebx
  42533e:	pop    edi
  42533f:	cmp    cl,BYTE PTR [esi+0xa]
  425342:	mov    eax,0x4f6942e7
  425347:	ins    BYTE PTR es:[edi],dx
  425348:	inc    ecx
  425349:	cmp    al,0xa9
  42534b:	daa    
  42534c:	aam    0x3
  42534e:	mov    bh,0x1d
  425350:	outs   dx,BYTE PTR ds:[esi]
  425351:	mov    ah,dl
  425353:	lahf   
  425354:	jnp    0x4252fc
  425356:	pusha  
  425357:	xchg   bh,dh
  425359:	nop
  42535a:	mov    eax,0xea37bc4
  42535f:	popf   
  425360:	xor    al,0x6a
  425362:	add    eax,0x64d1a963
  425367:	push   eax
  425368:	xchg   esp,eax
  425369:	idiv   BYTE PTR [ecx]
  42536b:	nop
  42536c:	add    eax,DWORD PTR [ecx+0x7cf125e2]
  425372:	xlat   BYTE PTR ds:[ebx]
  425373:	cmp    BYTE PTR [edx-0xc21c084],ah
  425379:	sub    eax,0xb810f707
  42537e:	lahf   
  42537f:	std    
  425380:	jmp    0x924ad639
  425385:	pop    ebp
  425386:	xor    al,0x41
  425388:	lods   eax,DWORD PTR ds:[esi]
  425389:	fs cwde 
  42538b:	mov    eax,ds:0xfcafe332
  425390:	aas    
  425391:	adc    DWORD PTR [ecx-0x689b6677],eax
  425397:	loope  0x425331
  425399:	scas   al,BYTE PTR es:[edi]
  42539a:	push   ds
  42539b:	add    BYTE PTR [edx-0x2],ah
  42539e:	or     DWORD PTR [eax-0x77],esi
  4253a1:	add    al,bl
  4253a3:	or     eax,0xffffffbc
  4253a6:	data16 test BYTE PTR [ebx],ch
  4253a9:	lds    ebx,FWORD PTR [eax+0x5bb67472]
  4253af:	pop    ss
  4253b0:	push   esp
  4253b1:	jg     0x425344
  4253b3:	adc    DWORD PTR [ebx+0x6d],0xab651908
  4253ba:	shl    ebp,1
  4253bc:	rcr    DWORD PTR [edi+0x4a],cl
  4253bf:	cmovnp ebx,DWORD PTR [ebx+esi*8]
  4253c3:	pop    ds
  4253c4:	loop   0x42540a
  4253c6:	sti    
  4253c7:	mov    al,0x7
  4253c9:	repnz nop
  4253cb:	cmc    
  4253cc:	mov    dl,0x61
  4253ce:	scas   eax,DWORD PTR es:[edi]
  4253cf:	lods   eax,DWORD PTR ds:[esi]
  4253d0:	push   ss
  4253d1:	jnp    0x4253b8
  4253d3:	xchg   esi,eax
  4253d4:	cmp    BYTE PTR [ebp+0x1f],0xbe
  4253d8:	jmp    0x3ee8100c
  4253dd:	and    BYTE PTR [edi],bh
  4253df:	push   cs
  4253e0:	xchg   ecx,eax
  4253e1:	pushaw 
  4253e3:	push   edx
  4253e4:	dec    edi
  4253e5:	dec    ebx
  4253e6:	into   
  4253e7:	clc    
  4253e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4253e9:	pop    ebx
  4253ea:	dec    esp
  4253eb:	div    BYTE PTR [ecx+0xc20ad29]
  4253f1:	out    dx,al
  4253f2:	call   0x4f5bd50
  4253f7:	mov    ah,0x27
  4253f9:	adc    edi,DWORD PTR [ebx+0x5ef8a69f]
  4253ff:	call   0xa733:0x7185b405
  425406:	sbb    DWORD PTR [ecx-0x46],esi
  425409:	idiv   esp
  42540b:	jmp    0xfb7c0fa6
  425410:	pushf  
  425411:	inc    esi
  425412:	push   es
  425413:	bnd jp 0x42544f
  425416:	jge    0x42539b
  425418:	out    dx,eax
  425419:	jle    0x42540c
  42541b:	xlat   BYTE PTR ds:[ebx]
  42541c:	push   es
  42541d:	aas    
  42541e:	mov    dl,0x47
  425420:	iret   
  425421:	iret   
  425422:	jmp    0xdd269359
  425427:	std    
  425428:	xchg   edi,eax
  425429:	in     al,0x8d
  42542b:	cli    
  42542c:	dec    esp
  42542d:	mov    cl,0x70
  42542f:	ins    DWORD PTR es:[edi],dx
  425430:	add    bl,BYTE PTR [edi+ecx*4+0x7f53806c]
  425437:	pop    ebp
  425438:	ds jb  0x4254b8
  42543b:	push   edx
  42543c:	push   ebp
  42543d:	sti    
  42543e:	out    dx,al
  42543f:	inc    esp
  425440:	daa    
  425441:	call   0xfe6bd067
  425446:	and    eax,0xbe9c23b1
  42544b:	push   ds
  42544c:	xchg   esp,eax
  42544d:	xor    BYTE PTR [ebp*2-0xe8a5c84],bh
  425454:	daa    
  425455:	out    0x27,eax
  425457:	mov    DWORD PTR [edi],esi
  425459:	leave  
  42545a:	sti    
  42545b:	out    dx,al
  42545c:	adc    esp,edx
  42545e:	repnz es xor al,0x1e
  425462:	jo     0x42540d
  425464:	pop    eax
  425465:	jecxz  0x4254e3
  425467:	xchg   edx,eax
  425468:	paddusw mm1,QWORD PTR [esi+0x64]
  42546c:	sbb    eax,ecx
  42546e:	bound  edi,QWORD PTR [edi]
  425470:	cmp    eax,0x46f77b6d
  425475:	rol    DWORD PTR ds:0x9903d9aa,0xd4
  42547c:	(bad)  
  42547d:	or     edi,ecx
  42547f:	shl    ebp,0x3
  425482:	pop    esp
  425483:	rcl    esp,1
  425485:	jno    0x42549e
  425487:	ins    DWORD PTR es:[edi],dx
  425488:	lahf   
  425489:	inc    esi
  42548a:	stos   BYTE PTR es:[edi],al
  42548b:	sbb    ah,BYTE PTR [edi-0x3f]
  42548e:	int3   
  42548f:	inc    ecx
  425490:	hlt    
  425491:	sbb    DWORD PTR [ebx],edi
  425493:	sbb    DWORD PTR [esi-0x758ac00c],eax
  425499:	push   cs
  42549a:	push   edi
  42549b:	inc    esp
  42549c:	fwait
  42549d:	retf   
  42549e:	rol    esi,0xb1
  4254a1:	xor    esp,DWORD PTR [esi+0x5a]
  4254a4:	inc    eax
  4254a5:	fldl2t 
  4254a7:	fsubr  QWORD PTR [esi]
  4254a9:	ficomp DWORD PTR [edx+0x22e5e033]
  4254af:	retf   
  4254b0:	mov    ds:0xe2feb4b3,eax
  4254b5:	jmp    0x605a1349
  4254ba:	xchg   edx,eax
  4254bb:	cmp    eax,0x90e48f66
  4254c0:	mov    dh,0xca
  4254c2:	jnp    0x425456
  4254c4:	xchg   ecx,esi
  4254c6:	lods   eax,DWORD PTR ds:[esi]
  4254c7:	sbb    al,0x33
  4254c9:	and    al,0x46
  4254cb:	inc    esp
  4254cc:	clc    
  4254cd:	dec    eax
  4254ce:	or     al,BYTE PTR [eax+eax*4+0x63]
  4254d2:	leave  
  4254d3:	into   
  4254d4:	idiv   BYTE PTR [esi-0x15]
  4254d7:	retf   
  4254d8:	inc    edx
  4254d9:	inc    ebx
  4254da:	inc    eax
  4254db:	outs   dx,DWORD PTR ds:[esi]
  4254dc:	scas   al,BYTE PTR es:[edi]
  4254dd:	mov    al,0xd8
  4254df:	je     0x425474
  4254e1:	(bad)  
  4254e2:	and    BYTE PTR [ebx+0x37],ah
  4254e5:	or     DWORD PTR [ebp+0x5d],eax
  4254e8:	cmp    eax,0xbb50c751
  4254ed:	aam    0x75
  4254ef:	and    DWORD PTR es:[eax-0x68],ecx
  4254f3:	jo     0x425497
  4254f5:	dec    sp
  4254f7:	sahf   
  4254f8:	call   0x67ec:0xa93ecc3f
  4254ff:	mov    DWORD PTR [edx],0x2d65fcc3
  425505:	sbb    DWORD PTR [ebx+0x4c],esp
  425508:	cmp    al,0x8b
  42550a:	xchg   esi,eax
  42550b:	jnp    0x425574
  42550d:	aad    0x98
  42550f:	fistp  DWORD PTR [ecx]
  425511:	mov    edi,0xba63fd30
  425516:	mov    ebx,0x3b2dc3bb
  42551b:	(bad)  
  42551c:	xchg   DWORD PTR [ecx+0x6df17aaf],esp
  425522:	mov    ebp,0x79b03c96
  425527:	cmc    
  425528:	(bad)  
  425529:	cld    
  42552a:	pop    es
  42552b:	ror    DWORD PTR [edi-0x33],0xec
  42552f:	xchg   ebx,eax
  425530:	mov    ebp,DWORD PTR [esi-0x2e]
  425533:	dec    edx
  425534:	xor    al,0x39
  425536:	inc    esp
  425537:	(bad)  
  425538:	adc    ah,BYTE PTR [eax+0x72]
  42553b:	pop    edx
  42553c:	xchg   DWORD PTR [ecx+eiz*4+0x56],esi
  425540:	scas   al,BYTE PTR es:[edi]
  425541:	je     0x425578
  425543:	xor    BYTE PTR [esi],dl
  425545:	sbb    DWORD PTR [ecx+0x6df8fc9a],0xfd09f41c
  42554f:	mov    al,ds:0x52e3989d
  425554:	push   0xd1f01b27
  425559:	push   edx
  42555a:	xor    BYTE PTR [edi+0x3ba2e8fc],ch
  425560:	ins    BYTE PTR es:[edi],dx
  425561:	fs jo  0x4255b7
  425564:	jg     0x4255b2
  425566:	pop    ds
  425567:	push   ecx
  425568:	hlt    
  425569:	shr    BYTE PTR [ebx-0x3f],1
  42556c:	jne    0x4255ba
  42556e:	adc    DWORD PTR [edx],ebp
  425570:	mov    cl,0xd5
  425572:	sbb    al,ah
  425574:	sbb    BYTE PTR [ebx-0x3a],0x96
  425578:	(bad)  
  425579:	cmp    dl,bl
  42557b:	out    0x6c,eax
  42557d:	cmc    
  42557e:	ins    DWORD PTR es:[edi],dx
  42557f:	add    ch,al
  425581:	inc    ebp
  425582:	sbb    ebx,eax
  425584:	pop    edx
  425585:	add    DWORD PTR [edi+0x51],0x858fe590
  42558c:	aam    0x8
  42558e:	sbb    DWORD PTR [edx-0x25973be0],ebx
  425594:	sahf   
  425595:	mov    cl,0x5f
  425597:	mov    esi,0xa5f61e48
  42559c:	sti    
  42559d:	ins    DWORD PTR es:[edi],dx
  42559e:	iret   
  42559f:	xchg   esi,edx
  4255a1:	shr    BYTE PTR [ebx],cl
  4255a3:	mov    bl,0x3b
  4255a5:	outs   dx,BYTE PTR ds:[esi]
  4255a6:	inc    ebx
  4255a7:	xchg   ecx,eax
  4255a8:	ret    
  4255a9:	ret    
  4255aa:	sar    DWORD PTR [edx+0x7dfb1ca2],1
  4255b0:	dec    edi
  4255b1:	jne    0x4255a1
  4255b3:	xchg   BYTE PTR [ebp-0x3d8c6e0c],al
  4255b9:	jns    0x42558f
  4255bb:	dec    esp
  4255bc:	les    esi,FWORD PTR [esi]
  4255be:	aad    0xcd
  4255c0:	adc    esp,DWORD PTR ds:0x8310cb55
  4255c6:	fnstsw WORD PTR [edi-0x15]
  4255c9:	mov    ch,0x9a
  4255cb:	mov    ebp,0x4509042e
  4255d0:	ins    BYTE PTR es:[edi],dx
  4255d1:	jae    0x4255ad
  4255d3:	push   ecx
  4255d4:	push   edi
  4255d5:	mov    al,BYTE PTR [esi+0x7c4d5d2a]
  4255db:	ret    0x8a45
  4255de:	xor    al,0x8f
  4255e0:	push   ebx
  4255e1:	adc    BYTE PTR [edx],bh
  4255e3:	mov    fs,WORD PTR [ecx]
  4255e5:	popf   
  4255e6:	into   
  4255e7:	pusha  
  4255e8:	jne    0x4255d0
  4255ea:	xor    edx,DWORD PTR [edi+0x49]
  4255ed:	(bad)  
  4255ee:	sub    eax,0x437eaabf
  4255f3:	ins    BYTE PTR es:[edi],dx
  4255f4:	js     0x4255fa
  4255f6:	(bad)  
  4255f7:	imul   eax,DWORD PTR ds:0x81ef1604,0x3b
  4255fe:	push   ecx
  4255ff:	xchg   edi,eax
  425600:	or     eax,0xb14180f8
  425605:	(bad)
  425608:	jg     0x425664
  42560a:	push   DWORD PTR [eax+0xfa884bc]
  425610:	nop
  425611:	sub    eax,0x12a46f4a
  425616:	cmc    
  425617:	jp     0x42568c
  425619:	(bad)  [edx]
  42561b:	rol    BYTE PTR [edx],0x2e
  42561e:	leave  
  42561f:	mov    esi,0x4ce22783
  425624:	fcom   st(1)
  425626:	sub    BYTE PTR [eax],dh
  425628:	shr    BYTE PTR [ecx-0x4394a202],0xae
  42562f:	lds    esp,FWORD PTR [ecx-0x619415d4]
  425635:	add    al,0x67
  425637:	cwde   
  425638:	mov    edx,0x3c109a15
  42563d:	popa   
  42563e:	js     0x425672
  425640:	into   
  425641:	ss and al,0xf7
  425644:	lods   al,BYTE PTR ds:[esi]
  425645:	ss xchg ebx,eax
  425647:	cmp    ebx,DWORD PTR [ebx+0x4437fa55]
  42564d:	adc    BYTE PTR [esi],bl
  42564f:	push   0x43
  425651:	xor    BYTE PTR [esi+0x1c],ch
  425654:	and    eax,0x49ebf7bb
  425659:	pop    edx
  42565a:	ktestb k1,k2
  42565e:	loope  0x425698
  425660:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425661:	scas   eax,DWORD PTR es:[edi]
  425662:	int    0x4a
  425664:	pop    ebx
  425665:	mov    esi,0xbbff1d
  42566a:	pushf  
  42566b:	jge    0x4255ef
  42566d:	add    eax,0x409ec1e7
  425672:	test   eax,0x2aeb033
  425677:	xor    al,0xad
  425679:	movsx  ebx,BYTE PTR [edx-0x25]
  42567d:	sub    al,0x6a
  42567f:	sbb    eax,0x82cda545
  425684:	add    al,0x77
  425686:	xchg   BYTE PTR [edi],bl
  425688:	lea    edi,[eax-0x2b70c73a]
  42568e:	(bad)  
  42568f:	push   ds
  425690:	bound  ebp,QWORD PTR [eax-0x7a]
  425693:	int3   
  425694:	sub    bl,BYTE PTR [edi+0x19]
  425697:	add    dh,cl
  425699:	in     al,dx
  42569a:	ret    
  42569b:	jb     0x4256bd
  42569d:	dec    ebp
  42569e:	jb     0x425687
  4256a0:	adc    edx,DWORD PTR [edi+eiz*8]
  4256a3:	or     al,0x6f
  4256a5:	mov    al,0xa0
  4256a7:	push   es
  4256a8:	clc    
  4256a9:	inc    ebp
  4256aa:	inc    edx
  4256ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4256ac:	jne    0x425677
  4256ae:	loopne 0x4256bc
  4256b0:	sbb    ch,ah
  4256b2:	lock sbb bl,BYTE PTR [esi+0x5a28fcf]
  4256b9:	xchg   edi,ebp
  4256bb:	fcmovnu st,st(4)
  4256bd:	add    cl,dl
  4256bf:	stc    
  4256c0:	sub    al,0xbd
  4256c2:	sbb    al,0x72
  4256c4:	setnp  BYTE PTR [ebp+0x60]
  4256c8:	outs   dx,DWORD PTR ds:[esi]
  4256c9:	out    dx,al
  4256ca:	jg     0x42566b
  4256cc:	cmc    
  4256cd:	jae    0x425723
  4256cf:	cmp    al,0x39
  4256d1:	jo     0x425706
  4256d3:	js     0x4256e6
  4256d5:	or     eax,0xf80001cd
  4256da:	add    al,0x0
  4256dc:	add    BYTE PTR [esi-0xb42e26a],ch
  4256e2:	out    dx,eax
  4256e3:	nop
  4256e4:	test   BYTE PTR [edx],al
  4256e6:	sub    esi,ecx
  4256e8:	(bad)  
  4256e9:	in     eax,0xdd
  4256eb:	test   esi,ecx
  4256ed:	jbe    0x42575c
  4256ef:	retf   0x36ff
  4256f2:	add    DWORD PTR [eax],ecx
  4256f4:	into   
  4256f5:	aaa    
  4256f6:	retf   0x33e3
  4256f9:	jp     0x4256be
  4256fb:	std    
  4256fc:	push   esi
  4256fd:	outs   dx,DWORD PTR ds:[esi]
  4256fe:	pop    es
  4256ff:	fist   DWORD PTR [edi]
  425701:	xor    DWORD PTR [ecx-0x69],esi
  425704:	mov    ds:0x956f0a30,al
  425709:	push   ss
  42570a:	xchg   ecx,eax
  42570b:	mov    ds:0xfbd7b1b3,eax
  425710:	stos   BYTE PTR es:[edi],al
  425711:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425712:	dec    ecx
  425713:	jne    0x425724
  425715:	pop    esi
  425716:	add    al,0x30
  425718:	inc    ecx
  425719:	sbb    DWORD PTR [esi],ebx
  42571b:	cmp    edx,esp
  42571d:	adc    al,0x7d
  42571f:	mov    eax,0xfecea0b3
  425724:	and    eax,0xcf7a5f10
  425729:	ja     0x425764
  42572b:	jle    0x4256c4
  42572d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42572e:	or     al,0x4e
  425730:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425731:	int3   
  425732:	outs   dx,DWORD PTR ds:[esi]
  425733:	xchg   BYTE PTR [eax-0x615eb64e],dh
  425739:	xchg   ecx,eax
  42573a:	xor    cl,BYTE PTR [eax+eax*2-0x73]
  42573e:	mov    ds:0x37d29ecf,eax
  425743:	cld    
  425744:	leave  
  425745:	scas   al,BYTE PTR es:[edi]
  425746:	popa   
  425747:	and    bl,0x77
  42574a:	fnstcw WORD PTR [eax-0x56eb3a7e]
  425750:	adc    al,0x9f
  425752:	xchg   ebx,eax
  425753:	stos   BYTE PTR es:[edi],al
  425754:	test   BYTE PTR [ebx+0x11],0x91
  425758:	(bad)  
  425759:	lds    esp,FWORD PTR [eax+0x35]
  42575c:	xchg   ebx,eax
  42575d:	leave  
  42575e:	or     eax,0x90d8e7b5
  425763:	ss or  al,0x4
  425767:	stos   DWORD PTR es:[edi],eax
  425768:	mov    cl,0x30
  42576a:	sahf   
  42576b:	jb     0x4257ad
  42576d:	fimul  WORD PTR [eax]
  42576f:	adc    ebp,DWORD PTR [edx]
  425771:	xor    ah,dl
  425773:	mov    dl,0x1c
  425775:	or     cl,BYTE PTR [esi]
  425777:	mov    eax,0xf978723f
  42577c:	jl     0x425763
  42577e:	cmp    eax,0xaebb78f3
  425783:	jmp    0x4257f3
  425785:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425787:	bound  esp,QWORD PTR [edx]
  425789:	int    0x89
  42578b:	or     ebp,edi
  42578d:	sbb    BYTE PTR [esi],ch
  42578f:	push   edx
  425790:	inc    ebx
  425791:	sub    ecx,0x33
  425794:	pop    es
  425795:	mov    esp,0xd9911e93
  42579a:	cmp    eax,DWORD PTR [esi+0x5b8a72da]
  4257a0:	test   DWORD PTR [edx+edx*8+0x59],0x4a64326
  4257a8:	mov    ebx,0x6fdcddc2
  4257ad:	pop    ebp
  4257ae:	or     DWORD PTR gs:[eax+esi*4],eax
  4257b2:	out    0x21,al
  4257b4:	push   ds
  4257b5:	jl     0x4257a6
  4257b7:	fadd   QWORD PTR [ebx+edx*4+0x67]
  4257bb:	repnz or eax,0x1e901760
  4257c1:	add    al,0xff
  4257c3:	adc    edx,ecx
  4257c5:	das    
  4257c6:	mov    ch,BYTE PTR ds:0x3476cbb2
  4257cc:	call   esp
  4257ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4257cf:	jp     0x42582c
  4257d1:	mov    esp,0x44157527
  4257d6:	jns    0x425778
  4257d8:	ins    BYTE PTR es:[edi],dx
  4257d9:	fcmovbe st,st(0)
  4257db:	jl     0x4257f1
  4257dd:	fs push edi
  4257df:	mul    BYTE PTR [esi+0x50]
  4257e2:	(bad)  
  4257e3:	and    DWORD PTR [eax],edx
  4257e5:	and    BYTE PTR [ebx+0xd],al
  4257e8:	in     eax,dx
  4257e9:	int3   
  4257ea:	adc    DWORD PTR [edi-0x6d],0x6e
  4257ee:	fsub   QWORD PTR [edx+0x36]
  4257f1:	and    al,0x54
  4257f3:	mov    dl,0x31
  4257f5:	jno    0x425778
  4257f7:	sub    BYTE PTR [edi-0x16],bl
  4257fa:	iret   
  4257fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257fc:	fld    TBYTE PTR [esi-0x36d8fd2]
  425802:	xchg   edx,eax
  425803:	pop    es
  425804:	jmp    0x425810
  425806:	popa   
  425807:	xlat   BYTE PTR ds:[ebx]
  425808:	sub    eax,0x6eaab1e5
  42580d:	mov    edi,0xe990ddea
  425812:	and    eax,0xf470309c
  425817:	mov    esp,0x1bbfa575
  42581c:	push   edx
  42581d:	cld    
  42581e:	dec    esp
  42581f:	jp     0x42587b
  425821:	ds mov eax,0x9a1e1d2a
  425827:	mov    ds:0x5c604f86,al
  42582c:	out    dx,eax
  42582d:	fnstsw WORD PTR [ebp+0x24aa570a]
  425833:	pop    edi
  425834:	sub    BYTE PTR [eax-0x66],ah
  425837:	lahf   
  425838:	or     eax,0xbb19fcc4
  42583d:	popa   
  42583e:	mov    ebp,0x5eb56e43
  425843:	sbb    BYTE PTR [ebx+edi*4],dl
  425846:	test   BYTE PTR [ecx-0x24],dl
  425849:	mov    bh,0x7f
  42584b:	(bad)  
  42584d:	or     ebp,esp
  42584f:	jecxz  0x425847
  425851:	mov    dl,0x4e
  425853:	inc    esp
  425854:	pop    ebp
  425855:	mov    edi,0x794a2b9f
  42585a:	jl     0x42584e
  42585c:	pop    esi
  42585d:	cwde   
  42585e:	fcomp  QWORD PTR [esi+0x5d6f4b91]
  425864:	push   ebp
  425865:	jle    0x4258e6
  425867:	out    0xbc,eax
  425869:	push   edx
  42586a:	inc    eax
  42586b:	mov    DWORD PTR [edx+0x593e612d],ebp
  425871:	push   cs
  425872:	repnz add ch,BYTE PTR [eax-0x71]
  425876:	push   edi
  425877:	or     dl,BYTE PTR [eax+ebp*8+0x76]
  42587b:	sbb    cl,BYTE PTR [eax+0x7cc63e96]
  425881:	sti    
  425882:	cmp    edx,DWORD PTR [edx+0xf]
  425885:	cmp    al,0x14
  425887:	lds    ebx,FWORD PTR [edx]
  425889:	cld    
  42588a:	ins    BYTE PTR es:[edi],dx
  42588b:	outs   dx,DWORD PTR ds:[esi]
  42588c:	or     DWORD PTR [ecx-0x12d67664],ebx
  425892:	pop    eax
  425893:	inc    ecx
  425894:	gs cmc 
  425896:	push   ebp
  425897:	cmp    BYTE PTR [eax-0x2c],ah
  42589a:	fnstenvw [eax-0x57]
  42589e:	outs   dx,BYTE PTR ds:[esi]
  42589f:	mov    edi,esp
  4258a1:	inc    edx
  4258a2:	ret    
  4258a3:	jns    0x42584c
  4258a5:	std    
  4258a6:	and    eax,DWORD PTR [esp+edx*4-0x4f]
  4258aa:	sbb    al,0x4b
  4258ac:	mov    edi,0xedd87c01
  4258b1:	jno    0x425894
  4258b3:	inc    ebx
  4258b5:	loopne 0x425906
  4258b7:	lds    edi,FWORD PTR [ebp-0x4a]
  4258ba:	sub    BYTE PTR [esi],0xac
  4258bd:	push   cs
  4258be:	inc    ecx
  4258bf:	xchg   BYTE PTR [edi-0x15],ch
  4258c2:	lahf   
  4258c3:	test   BYTE PTR [ebp+0x65],bl
  4258c6:	pop    edi
  4258c7:	(bad)  [edi+0x12]
  4258ca:	ja     0x425889
  4258cc:	mov    ebx,es
  4258ce:	loopne 0x425925
  4258d0:	sub    DWORD PTR [ecx-0x41],ecx
  4258d3:	mov    eax,ds:0xa2f22d48
  4258d8:	repz sahf 
  4258da:	or     DWORD PTR [edx],ebx
  4258dc:	ss add eax,0x64cc229e
  4258e2:	rcl    BYTE PTR [eax],0xcf
  4258e5:	xchg   edi,eax
  4258e6:	add    al,0xe6
  4258e8:	daa    
  4258e9:	adc    al,0xb2
  4258eb:	fbld   TBYTE PTR [eax-0x62]
  4258ee:	mov    ebx,0x546512a6
  4258f3:	push   esi
  4258f4:	sbb    bh,ah
  4258f6:	sub    BYTE PTR [edx],0x82
  4258f9:	push   esp
  4258fa:	mov    ecx,0x3cb0fd52
  4258ff:	into   
  425900:	jp     0x4258ce
  425902:	iret   
  425903:	and    BYTE PTR [ebx+0x2ec93c6a],0xc3
  42590a:	pusha  
  42590b:	cmp    ah,dl
  42590d:	js     0x425976
  42590f:	inc    ebp
  425910:	push   ebp
  425911:	push   eax
  425912:	pop    edx
  425913:	rol    edi,cl
  425915:	(bad)
  425919:	adc    dh,BYTE PTR [ebp+0x47]
  42591c:	rcr    DWORD PTR [eax+0x6eae5493],1
  425922:	pusha  
  425923:	bound  ecx,QWORD PTR [ebx+0xa]
  425926:	push   ecx
  425927:	mov    dl,0xe8
  425929:	add    eax,0xfe6f59b2
  42592e:	sbb    ebp,ebx
  425930:	push   ss
  425931:	mov    ah,0xd
  425933:	retf   
  425934:	call   0x9550:0x25c17328
  42593b:	je     0x42597c
  42593d:	(bad)  
  42593e:	and    DWORD PTR [edi],0x79
  425941:	or     eax,0x9bf4e448
  425946:	pop    edx
  425947:	sub    al,0xcd
  425949:	pop    edi
  42594a:	daa    
  42594b:	mov    al,ds:0x5a8571b5
  425950:	popa   
  425951:	adc    eax,0x3a26c7d6
  425956:	mov    esp,0xf43b1b5c
  42595b:	add    cl,BYTE PTR [edx-0x4c863551]
  425961:	sbb    edi,DWORD PTR [ebx+edi*1]
  425964:	iret   
  425965:	(bad)  
  425966:	sar    ah,0x5e
  425969:	or     ah,BYTE PTR [edx]
  42596b:	jae    0x42593a
  42596d:	push   esi
  42596e:	rcl    BYTE PTR [ecx-0x2ba028f0],0x62
  425975:	or     eax,0x469a8630
  42597a:	xor    eax,0xb1dc5cb5
  42597f:	inc    edx
  425980:	test   eax,0x1468af33
  425985:	inc    esi
  425986:	fwait
  425987:	sub    BYTE PTR [edi],ch
  425989:	fwait
  42598a:	xor    al,0xaa
  42598c:	out    dx,eax
  42598d:	iret   
  42598e:	inc    DWORD PTR [ebp-0x5069a23a]
  425994:	cmp    al,0xd1
  425996:	xor    ebp,DWORD PTR [esi-0x27faa74d]
  42599c:	test   al,0x86
  42599e:	jg     0x4259c4
  4259a0:	add    ch,BYTE PTR [esi]
  4259a2:	xchg   ecx,eax
  4259a3:	sbb    BYTE PTR [ecx],al
  4259a5:	lock arpl WORD PTR [ecx],dx
  4259a8:	(bad)  
  4259aa:	mov    ds:0x4f611ca8,eax
  4259af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4259b0:	sub    eax,0x35331b7d
  4259b5:	xlat   BYTE PTR ds:[ebx]
  4259b6:	jne    0x425a28
  4259b8:	aaa    
  4259b9:	xchg   edx,eax
  4259ba:	mov    bh,0x25
  4259bc:	cld    
  4259bd:	repz jmp 0xe5069c1c
  4259c3:	add    ecx,DWORD PTR [ebx-0x48]
  4259c6:	cs ss out 0xa7,eax
  4259ca:	sbb    DWORD PTR [esi],eax
  4259cc:	pop    ebp
  4259cd:	ret    
  4259ce:	or     ecx,DWORD PTR [edx-0x3c]
  4259d1:	icebp  
  4259d2:	add    ebx,DWORD PTR [edi+0x1755a478]
  4259d8:	nop
  4259d9:	xchg   ebp,eax
  4259da:	add    eax,0x5d285ec7
  4259df:	mov    eax,ds:0x7bc3c38a
  4259e4:	mov    esi,0x8f2c74b1
  4259e9:	dec    eax
  4259ea:	mov    DWORD PTR [eax],edi
  4259ec:	fsub   DWORD PTR [eax+0x2cfac0be]
  4259f2:	push   esi
  4259f3:	and    eax,0x3739d46d
  4259f8:	mov    ch,0x6c
  4259fa:	ret    0xd12d
  4259fd:	fs jb  0x425a09
  425a00:	or     ebx,DWORD PTR [ecx+0x1b8d3a14]
  425a06:	adc    BYTE PTR [eax+esi*1+0x68],dl
  425a0a:	push   esp
  425a0b:	mov    bh,0x5
  425a0d:	cmp    al,0x93
  425a0f:	sbb    bl,BYTE PTR [eax]
  425a11:	pop    esp
  425a12:	add    DWORD PTR [ecx],edi
  425a14:	xor    eax,DWORD PTR [ecx-0x45]
  425a17:	repnz add al,0x48
  425a1a:	pop    esp
  425a1b:	test   DWORD PTR [ecx+0x25],edi
  425a1e:	loop   0x425a48
  425a20:	dec    esi
  425a21:	dec    edi
  425a22:	cdq    
  425a23:	mov    DWORD PTR [edx],edx
  425a25:	rol    DWORD PTR [eax-0x63ab33a5],1
  425a2b:	inc    ebx
  425a2c:	iret   
  425a2d:	repnz imul esi,esi,0x10ea0e68
  425a34:	mov    ebx,0xa6eb3cfa
  425a39:	add    DWORD PTR [edi+edi*2],ebx
  425a3c:	sub    al,0xc3
  425a3e:	dec    eax
  425a3f:	push   ss
  425a40:	jb     0x425a7e
  425a42:	sub    BYTE PTR [ecx-0xc],cl
  425a45:	loopne 0x4259db
  425a47:	xor    al,0x58
  425a49:	xchg   DWORD PTR [edx+0x14ad9d2a],edi
  425a4f:	(bad)  
  425a50:	mov    ebx,0x36e7f166
  425a55:	sbb    esi,DWORD PTR [edx+0x2a]
  425a58:	sub    bh,al
  425a5a:	mov    edx,0x6ef4acc7
  425a5f:	sbb    al,0x96
  425a62:	add    DWORD PTR [esi+0x252680e2],edi
  425a68:	lock jmp FWORD PTR [ebx+0x39]
  425a6c:	fs in  al,0x9f
  425a6f:	dec    edi
  425a70:	xchg   eax,ebp
  425a72:	mov    DWORD PTR [edx+0x42],esi
  425a75:	scas   al,BYTE PTR es:[edi]
  425a76:	inc    ebx
  425a77:	adc    eax,0xc205ea68
  425a7c:	fnstsw WORD PTR [ebx-0x35326fea]
  425a82:	(bad)  
  425a84:	ds sub ah,dh
  425a87:	fisttp QWORD PTR [ecx+0x61]
  425a8a:	or     BYTE PTR [edi-0x3e048130],ch
  425a90:	inc    ecx
  425a91:	fldenv [ebp+eiz*4+0x3cf6bc66]
  425a98:	xor    al,0x99
  425a9a:	loopne 0x425b08
  425a9c:	aaa    
  425a9d:	lods   eax,DWORD PTR ds:[esi]
  425a9e:	or     ebx,DWORD PTR [ebx]
  425aa0:	jne    0x425aab
  425aa2:	test   ch,dh
  425aa4:	fidivr WORD PTR [edx+0x3c42ad63]
  425aaa:	sbb    al,0x9b
  425aac:	xchg   ebp,eax
  425aad:	dec    eax
  425aae:	mov    ds:0xe41b7db3,eax
  425ab3:	or     ecx,DWORD PTR [ecx-0x1c]
  425ab6:	loopne 0x425ac2
  425ab8:	sbb    DWORD PTR ds:0x85047f2e,ebp
  425abe:	cwde   
  425abf:	jnp    0x425b1f
  425ac1:	shl    edi,cl
  425ac3:	int    0xa1
  425ac5:	cli    
  425ac6:	popf   
  425ac7:	cs sub edi,ebx
  425aca:	sbb    DWORD PTR [edx+0x560dcd4d],eax
  425ad0:	jl     0x425a66
  425ad2:	fimul  WORD PTR ds:0x3847fc9e
  425ad8:	xchg   ebx,eax
  425ad9:	pop    eax
  425ada:	sahf   
  425adb:	pop    esi
  425adc:	jp     0x425aff
  425ade:	jp     0x425ad9
  425ae0:	imul   ebp,DWORD PTR [ebp+0x6709642d],0xffffff85
  425ae7:	pop    edi
  425ae8:	js     0x425ab9
  425aea:	push   ebp
  425aeb:	jmp    0xfad5:0x4f786563
  425af2:	in     al,0x75
  425af4:	add    ch,BYTE PTR [ebp+0x65bd7201]
  425afa:	fs mov bl,0xc5
  425afd:	sbb    al,0x1a
  425aff:	push   esi
  425b00:	stos   DWORD PTR es:[edi],eax
  425b01:	jae    0x425abb
  425b03:	sbb    BYTE PTR [esi],dh
  425b05:	sub    ebp,DWORD PTR [ecx-0x64]
  425b08:	jl     0x425b58
  425b0a:	cmp    al,0x73
  425b0c:	cdq    
  425b0d:	sbb    ch,ah
  425b0f:	loop   0x425ab8
  425b11:	das    
  425b12:	mov    ebp,0x2a407547
  425b17:	pop    ecx
  425b18:	retf   
  425b19:	inc    esp
  425b1a:	sub    dh,BYTE PTR [ebx]
  425b1c:	pop    ebp
  425b1d:	adc    esi,esp
  425b1f:	test   al,0x22
  425b21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b22:	cdq    
  425b23:	mov    edx,0xb369fcf
  425b28:	pop    ebx
  425b29:	fsubr  DWORD PTR [edx]
  425b2b:	push   ecx
  425b2c:	jns    0x425b18
  425b2e:	push   esp
  425b2f:	adc    BYTE PTR [edi-0x3e8e4e5],dl
  425b35:	xchg   ecx,eax
  425b36:	fsub   st,st(6)
  425b38:	jae    0x425bb6
  425b3a:	mov    ebp,0x9561fbb4
  425b3f:	ins    BYTE PTR es:[edi],dx
  425b40:	mov    WORD PTR [esi+0x62],ds
  425b43:	jp     0x425b65
  425b45:	inc    ebp
  425b46:	jno    0x425ba5
  425b48:	or     DWORD PTR cs:[ebp-0x5bef3dbe],0xfffffffe
  425b50:	repnz push edi
  425b52:	data16 cmc 
  425b54:	lahf   
  425b55:	add    BYTE PTR [esi],dl
  425b57:	push   edx
  425b58:	sub    ebx,DWORD PTR [eax-0x38]
  425b5b:	push   ebp
  425b5c:	pop    es
  425b5d:	data16 sub al,0x5
  425b60:	jae    0x425bd2
  425b62:	fmul   QWORD PTR [ecx-0x3559fdc5]
  425b68:	ret    
  425b69:	ficom  DWORD PTR [ecx-0x7bff9194]
  425b6f:	xchg   BYTE PTR ds:0xe1f757ae,ah
  425b75:	push   ecx
  425b76:	sahf   
  425b77:	mov    ebx,0xaaa34e17
  425b7c:	das    
  425b7d:	jo     0x425b2e
  425b7f:	jmp    0x66ad:0x35c2a310
  425b86:	das    
  425b87:	sub    al,0x15
  425b89:	mov    esp,0x5007304e
  425b8e:	outs   dx,BYTE PTR ds:[esi]
  425b8f:	mov    al,0x7
  425b91:	sbb    ebp,edx
  425b93:	cmp    ch,BYTE PTR [esi+0x658a7b36]
  425b99:	mov    ebx,ebp
  425b9b:	inc    esi
  425b9c:	out    dx,eax
  425b9d:	adc    al,0xa6
  425b9f:	sub    eax,DWORD PTR [ecx+0x75]
  425ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ba3:	jle    0x425b91
  425ba5:	clc    
  425ba6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ba7:	clc    
  425ba8:	and    DWORD PTR [eax],0xb64b9185
  425bae:	pop    eax
  425baf:	nop
  425bb0:	fcmovbe st,st(2)
  425bb2:	jne    0x425ba8
  425bb4:	lods   al,BYTE PTR ds:[esi]
  425bb5:	xor    eax,0x1610acba
  425bba:	das    
  425bbb:	inc    edi
  425bbc:	(bad)  
  425bbd:	or     ebp,DWORD PTR [ebx+0x6f33bf02]
  425bc3:	les    edx,FWORD PTR [eax+0x2e72a8ef]
  425bc9:	cdq    
  425bca:	add    eax,DWORD PTR [ebx]
  425bcc:	xchg   ebx,eax
  425bcd:	mov    ds:0x6d02a841,eax
  425bd2:	sbb    al,0x3b
  425bd4:	loopne 0x425bdb
  425bd6:	test   DWORD PTR [edi-0x109150bc],ebp
  425bdc:	lds    ebp,FWORD PTR [ebp+ebp*8-0x3f]
  425be0:	mov    ds:0x723f26b,al
  425be5:	add    eax,0xf80001d2
  425bea:	add    al,0x0
  425bec:	add    BYTE PTR [edi+0x3fd10933],al
  425bf2:	sahf   
  425bf3:	add    esp,edx
  425bf5:	sbb    eax,0xb507b8cf
  425bfa:	(bad)  
  425bfb:	ins    BYTE PTR es:[edi],dx
  425bfc:	inc    eax
  425bfd:	pop    esi
  425bfe:	mov    al,0xac
  425c00:	int    0x6b
  425c02:	inc    esi
  425c03:	cmp    bh,dh
  425c05:	iret   
  425c06:	jae    0x425c1f
  425c08:	aaa    
  425c09:	add    eax,0x656db33e
  425c0e:	mov    ebx,0x64e7fee7
  425c13:	push   ebp
  425c14:	sub    eax,ebx
  425c16:	push   ds
  425c17:	fnstcw WORD PTR [esi+0x1404fc9]
  425c1d:	outs   dx,BYTE PTR ds:[esi]
  425c1e:	xchg   ebp,eax
  425c1f:	out    dx,al
  425c20:	fs xchg ecx,eax
  425c22:	xchg   esp,eax
  425c23:	cmp    edi,DWORD PTR [edx]
  425c25:	push   edi
  425c26:	mov    bh,0x74
  425c28:	in     al,dx
  425c29:	dec    ebp
  425c2a:	fist   WORD PTR [edi+0x290b826e]
  425c30:	mov    BYTE PTR [edx+0x1502ca3a],al
  425c36:	fistp  QWORD PTR [eax+0x74]
  425c39:	mov    edx,0xc6fbc9a7
  425c3e:	es xchg edx,eax
  425c40:	rcr    DWORD PTR [edi+0x115e22d1],0xdd
  425c47:	lods   al,BYTE PTR ds:[esi]
  425c48:	adc    BYTE PTR [ebp+0xd],al
  425c4b:	icebp  
  425c4c:	ficom  DWORD PTR [edx]
  425c4e:	daa    
  425c4f:	cmp    al,0x51
  425c51:	pop    ecx
  425c52:	lods   eax,DWORD PTR ds:[esi]
  425c53:	xor    ch,BYTE PTR [edx-0x44]
  425c56:	out    dx,eax
  425c57:	mov    ds:0x4daa9863,eax
  425c5c:	cmp    eax,0x3462a29b
  425c61:	arpl   bp,ax
  425c63:	sub    esp,DWORD PTR [ecx-0x7a]
  425c66:	mov    dl,0xb5
  425c68:	jle    0x425c65
  425c6a:	jg     0x425cae
  425c6c:	test   BYTE PTR [edx-0x36],dh
  425c6f:	mov    ecx,0xf0456384
  425c74:	push   cs
  425c75:	dec    ecx
  425c76:	mov    ds:0x1c41ec5a,al
  425c7b:	and    ah,BYTE PTR [ecx]
  425c7d:	lods   eax,DWORD PTR ds:[esi]
  425c7e:	add    DWORD PTR [esi-0x57],edi
  425c81:	jae    0x425c6e
  425c83:	adc    al,0x80
  425c85:	and    dl,al
  425c87:	js     0x425c6c
  425c89:	stc    
  425c8a:	xchg   esp,eax
  425c8b:	mov    bl,0x5f
  425c8d:	push   es
  425c8e:	jae    0x425d0b
  425c90:	fistp  WORD PTR [eax-0xc]
  425c93:	(bad)  
  425c94:	pusha  
  425c95:	push   eax
  425c96:	or     BYTE PTR [eax],dl
  425c98:	mov    ebx,0xa1ccb9e6
  425c9d:	enter  0x1d31,0x30
  425ca1:	adc    al,0x6c
  425ca3:	in     al,0xff
  425ca5:	mov    ah,0xd0
  425ca7:	adc    eax,0xe076b13b
  425cac:	mov    al,0x3e
  425cae:	add    dh,BYTE PTR [esi-0x8]
  425cb1:	jno    0x425cbb
  425cb3:	push   eax
  425cb4:	pop    eax
  425cb5:	ret    
  425cb6:	sub    esi,DWORD PTR [esi+0x16]
  425cb9:	xchg   edx,eax
  425cba:	cld    
  425cbb:	xor    al,0x4b
  425cbd:	add    dl,BYTE PTR [esi-0x31]
  425cc0:	cmp    al,0x3c
  425cc2:	cmp    DWORD PTR [ebx*1-0x56c9e728],esp
  425cc9:	push   ebx
  425cca:	push   0x292058a2
  425ccf:	data16 jle 0x425c92
  425cd2:	sbb    DWORD PTR [edi+0xf],esp
  425cd5:	sbb    BYTE PTR [edi+edi*8-0x3b],ch
  425cd9:	les    ebp,FWORD PTR [ecx+0x5745b08a]
  425cdf:	cmc    
  425ce0:	sbb    al,dh
  425ce2:	inc    esp
  425ce3:	add    ebp,DWORD PTR [esi+0x4d]
  425ce6:	daa    
  425ce7:	lock mov ds:0xecb2d56a,eax
  425ced:	xchg   edx,eax
  425cee:	rcl    BYTE PTR [edx+eiz*2],0x44
  425cf2:	mov    DWORD PTR [ecx-0x461e030e],ebp
  425cf8:	test   eax,0x34fd5d3a
  425cfd:	add    eax,0x6b6ee9ba
  425d02:	mov    eax,ds:0x330b8dfc
  425d07:	icebp  
  425d08:	pushf  
  425d09:	add    edx,DWORD PTR [ebp-0x537a0a6]
  425d0f:	stos   BYTE PTR es:[edi],al
  425d10:	and    bl,0x64
  425d13:	dec    ebx
  425d14:	jge    0x425d53
  425d16:	cmp    al,0x3a
  425d18:	push   ebp
  425d19:	dec    edi
  425d1a:	xchg   ecx,eax
  425d1b:	lock add al,0xfb
  425d1e:	adc    dh,bh
  425d20:	inc    esp
  425d21:	popa   
  425d22:	sbb    al,BYTE PTR [ecx]
  425d24:	xchg   edi,eax
  425d25:	pop    es
  425d26:	mov    edx,0xe865433c
  425d2b:	mov    cl,0x4b
  425d2d:	jbe    0x425cfc
  425d2f:	sbb    dl,BYTE PTR [ecx-0x65e473e7]
  425d35:	nop
  425d36:	pop    ss
  425d37:	push   ds
  425d38:	mov    ?,WORD PTR [ebx]
  425d3a:	jge    0x425d43
  425d3c:	js     0x425d3e
  425d3e:	sar    edx,cl
  425d40:	pop    ecx
  425d41:	lock xor BYTE PTR ds:0xc6d2c55c,cl
  425d48:	into   
  425d49:	bnd jo 0x425cfc
  425d4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d4d:	push   es
  425d4e:	not    DWORD PTR [edx+0x9]
  425d51:	mov    al,BYTE PTR [ecx-0x6d217056]
  425d57:	and    eax,0x64010184
  425d5c:	sub    ah,dl
  425d5e:	fsubrp st(0),st
  425d60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425d61:	xor    ch,cl
  425d63:	outs   dx,BYTE PTR ds:[esi]
  425d64:	outs   dx,DWORD PTR ds:[esi]
  425d65:	fist   WORD PTR [ebx+0x3d]
  425d68:	mov    edx,0x6f06c1ec
  425d6d:	sub    dh,ch
  425d6f:	lods   eax,DWORD PTR ds:[esi]
  425d70:	sahf   
  425d71:	pusha  
  425d72:	scas   al,BYTE PTR es:[edi]
  425d73:	xchg   esi,eax
  425d74:	out    dx,eax
  425d75:	fs cli 
  425d77:	imul   esp,DWORD PTR [ebx],0x809e6c46
  425d7d:	xor    al,BYTE PTR [edx-0x5fd3049]
  425d83:	mov    edi,0x38107f5f
  425d88:	sbb    bh,BYTE PTR [esi+ecx*2-0x38492b3b]
  425d8f:	fld    QWORD PTR [eax-0x44862ac6]
  425d95:	(bad)  
  425d96:	cmp    eax,DWORD PTR [esi]
  425d98:	stc    
  425d99:	lods   eax,DWORD PTR ds:[esi]
  425d9a:	mov    ebx,0xd60b6512
  425d9f:	adc    DWORD PTR [edx],edx
  425da1:	add    eax,0x904ede68
  425da6:	add    eax,0xa3366d96
  425dab:	loope  0x425d65
  425dad:	mov    eax,0x1216a18c
  425db2:	mov    ebx,edi
  425db4:	ins    DWORD PTR es:[edi],dx
  425db5:	xchg   edi,eax
  425db6:	inc    edx
  425db7:	add    esp,edi
  425db9:	test   BYTE PTR [esi-0x41],ah
  425dbc:	sar    BYTE PTR [edx],1
  425dbe:	jns    0x425e26
  425dc0:	aas    
  425dc1:	ins    BYTE PTR es:[edi],dx
  425dc2:	stos   BYTE PTR es:[edi],al
  425dc3:	stos   DWORD PTR es:[edi],eax
  425dc4:	stc    
  425dc5:	bndldx bnd0,[edi+0x2e]
  425dc9:	sar    DWORD PTR [edi-0x2993def6],cl
  425dcf:	xor    DWORD PTR [esi+0x3b952b59],eax
  425dd5:	pop    esi
  425dd6:	dec    edi
  425dd7:	mov    eax,ds:0x2c05bad8
  425ddc:	mov    dl,0x37
  425dde:	lods   eax,DWORD PTR ds:[esi]
  425ddf:	imul   ebx,DWORD PTR [ebp+eax*8+0x7e48cb10],0x8
  425de7:	or     cl,ch
  425de9:	(bad)  
  425dea:	push   ebx
  425deb:	push   esi
  425dec:	outs   dx,DWORD PTR ds:[esi]
  425ded:	lahf   
  425dee:	and    DWORD PTR [esi+0x50],0xfffffffe
  425df2:	pop    edi
  425df3:	xchg   edx,eax
  425df4:	daa    
  425df5:	push   esp
  425df6:	adc    DWORD PTR [ebx],esp
  425df8:	pop    ebp
  425df9:	xchg   DWORD PTR [ebx-0x39],edx
  425dfc:	out    dx,eax
  425dfd:	push   ds
  425dfe:	cli    
  425dff:	aaa    
  425e00:	test   BYTE PTR [esi-0x1bebb8f4],dl
  425e06:	mov    ?,WORD PTR [edi]
  425e08:	test   al,0x5c
  425e0a:	dec    ecx
  425e0b:	cmp    eax,DWORD PTR [ebp-0x41]
  425e0e:	sti    
  425e0f:	rcr    BYTE PTR [esp+edi*8],1
  425e12:	mov    ch,0xd2
  425e14:	or     al,0x50
  425e16:	jmp    0xb186:0x760b2b51
  425e1d:	or     eax,0x2d9dff03
  425e22:	inc    eax
  425e23:	or     ebx,edi
  425e25:	fisub  DWORD PTR [esi]
  425e27:	test   eax,0x115f68da
  425e2c:	adc    DWORD PTR [ecx-0x6f],edi
  425e2f:	lods   eax,DWORD PTR ds:[esi]
  425e30:	cwde   
  425e31:	jb     0x425e20
  425e33:	out    dx,al
  425e34:	push   cs
  425e35:	call   0x54e4549a
  425e3a:	sub    BYTE PTR [edx],dl
  425e3c:	xchg   ecx,eax
  425e3d:	xchg   esi,eax
  425e3e:	dec    esi
  425e3f:	push   esp
  425e40:	pop    ebp
  425e41:	mov    edi,0x1e661380
  425e46:	xchg   ecx,eax
  425e47:	imul   ebp,DWORD PTR [ebp+0x6eadf43b],0xffffffc2
  425e4e:	cmp    DWORD PTR [edx],esi
  425e50:	mov    ah,0xbd
  425e52:	(bad)  
  425e54:	and    ah,ch
  425e56:	call   0x8d5c:0x3aee5f0e
  425e5d:	into   
  425e5e:	sbb    al,0x77
  425e60:	out    0xe5,eax
  425e62:	enter  0xdd7b,0xc8
  425e66:	shr    DWORD PTR [edi+0x7f8d7be3],cl
  425e6c:	nop
  425e6d:	and    bh,bl
  425e6f:	jns    0x425ec4
  425e71:	hlt    
  425e72:	mov    ch,0x5d
  425e74:	pop    esi
  425e75:	mov    WORD PTR [ecx+0x7fc05bb6],es
  425e7b:	shl    DWORD PTR [edx-0x15],0x8
  425e7f:	adc    cl,dl
  425e81:	dec    edx
  425e82:	mov    cl,0xa8
  425e84:	in     al,dx
  425e85:	shr    BYTE PTR [esi],0xe1
  425e88:	aam    0x1c
  425e8a:	lods   al,BYTE PTR ds:[esi]
  425e8b:	pop    ds
  425e8c:	mov    cl,0x1d
  425e8e:	mov    cs,WORD PTR [esi]
  425e90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e91:	daa    
  425e92:	jno    0x425eb5
  425e94:	add    al,0x5e
  425e96:	retf   
  425e97:	jmp    0xe8e38f83
  425e9c:	(bad)  
  425e9d:	or     eax,0x4ab71938
  425ea2:	retf   0x2178
  425ea5:	retf   0xf004
  425ea8:	out    dx,eax
  425ea9:	lahf   
  425eaa:	pusha  
  425eab:	push   ds
  425eac:	call   0x96c:0x9b1a9cc
  425eb3:	xor    esp,DWORD PTR [esi-0x5a]
  425eb6:	lock (bad) 
  425eb8:	sbb    eax,0xe4028682
  425ebd:	xchg   ebx,eax
  425ebe:	or     al,0x1c
  425ec0:	arpl   WORD PTR [esi],dx
  425ec2:	cmp    DWORD PTR [edi],0xffffff9d
  425ec5:	mov    WORD PTR [eax+0x31],gs
  425ec8:	cmp    ah,BYTE PTR [eax*4-0x562ff74]
  425ecf:	push   ds
  425ed0:	or     DWORD PTR [edx*2-0x6f15c69e],ebp
  425ed7:	retf   
  425ed8:	sbb    bl,BYTE PTR [eax-0x779b533d]
  425ede:	mov    eax,0xdf35090b
  425ee3:	mov    BYTE PTR [ecx+eiz*1-0x57f9a01c],ch
  425eea:	clc    
  425eeb:	jecxz  0x425e9c
  425eed:	retf   
  425eee:	dec    ebp
  425eef:	jl     0x425f14
  425ef1:	mov    eax,0xbaf4259a
  425ef6:	push   es
  425ef7:	mov    eax,ds:0x3d6b43ff
  425efc:	push   cs
  425efd:	cmp    bl,BYTE PTR [ebp+0x7cf1ea24]
  425f03:	sub    ch,bl
  425f05:	call   0x7630:0xab637b0b
  425f0c:	cdq    
  425f0d:	(bad)  
  425f0e:	(bad)  
  425f0f:	mov    dh,0x29
  425f11:	test   BYTE PTR [esi],bl
  425f13:	retf   
  425f14:	add    BYTE PTR [edi-0x282db465],al
  425f1a:	into   
  425f1b:	dec    ebp
  425f1c:	adc    al,0x8d
  425f1e:	mov    ds:0x5c2dd1dc,al
  425f23:	outs   dx,BYTE PTR ds:[esi]
  425f24:	push   ds
  425f25:	repnz lds esp,FWORD PTR [eax+ebx*2-0x7273ec37]
  425f2d:	mov    al,ds:0xd6b5b4fd
  425f32:	test   al,0x86
  425f34:	xchg   ecx,eax
  425f35:	mov    esi,0x9dd342fb
  425f3a:	sub    al,0x77
  425f3c:	sub    dl,ah
  425f3e:	ds add eax,0xd7f0681a
  425f44:	nop
  425f45:	stos   DWORD PTR es:[edi],eax
  425f46:	push   ebx
  425f47:	jo     0x425f49
  425f49:	mov    edx,0x4082101e
  425f4e:	mov    dh,BYTE PTR [ecx-0x1c8793cb]
  425f54:	adc    cl,BYTE PTR [edi+0xa094a00]
  425f5a:	push   es
  425f5b:	and    edx,DWORD PTR ds:0x3c99b96
  425f61:	jecxz  0x425fb7
  425f63:	not    BYTE PTR [ebp+0x2d]
  425f66:	mov    esp,DWORD PTR [edi+eiz*4]
  425f69:	ins    BYTE PTR es:[edi],dx
  425f6a:	lods   al,BYTE PTR ds:[esi]
  425f6b:	call   0xb4f5:0x90d71ba2
  425f72:	mov    DWORD PTR [ebp*2-0x588b7e2a],edx
  425f79:	xchg   esp,eax
  425f7a:	xchg   ecx,eax
  425f7b:	fs sbb edi,ebp
  425f7e:	fbld   TBYTE PTR [edx-0x15]
  425f81:	mov    al,ds:0x4c6550a4
  425f86:	ss in  al,0xa6
  425f89:	loopne 0x425fe4
  425f8b:	mov    ch,0xb
  425f8d:	cli    
  425f8e:	imul   eax,DWORD PTR [esi+0x5],0xc36335a3
  425f95:	mov    ebp,0x284a00ba
  425f9a:	sub    al,0x5f
  425f9c:	sub    BYTE PTR ds:0xa3561819,al
  425fa2:	push   ebp
  425fa3:	xchg   edi,eax
  425fa4:	movsx  edx,WORD PTR [ecx-0x15]
  425fa8:	sbb    edx,eax
  425faa:	je     0x425f46
  425fac:	push   0xc19f3d81
  425fb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425fb2:	sbb    BYTE PTR [ecx+0x49],al
  425fb5:	enter  0xdd01,0x32
  425fb9:	push   ebp
  425fba:	and    esp,DWORD PTR [esi-0x16a792c2]
  425fc0:	pop    esp
  425fc1:	dec    ebp
  425fc2:	ins    BYTE PTR es:[edi],dx
  425fc3:	jmp    0xd90e:0x7c059542
  425fca:	outs   dx,BYTE PTR ds:[esi]
  425fcb:	add    DWORD PTR [ecx-0x403ec669],ecx
  425fd1:	pop    ebp
  425fd2:	sbb    dh,BYTE PTR [esi+0x1e]
  425fd5:	inc    edi
  425fd6:	lock les esi,FWORD PTR [edi+ebx*4-0x7f73d1c0]
  425fde:	push   ebx
  425fdf:	stc    
  425fe0:	mov    esi,0x1a93c777
  425fe5:	rol    BYTE PTR [eax+0x4d],cl
  425fe8:	sbb    esi,DWORD PTR [edi]
  425fea:	mov    edi,0x67025557
  425fef:	or     eax,0x3132e2f6
  425ff4:	push   esp
  425ff5:	sub    ah,BYTE PTR [edx+0x26]
  425ff8:	xlat   BYTE PTR ds:[ebx]
  425ff9:	adc    eax,0xa7c0763e
  425ffe:	xor    ecx,DWORD PTR [edi-0x209f8057]
  426004:	clc    
  426005:	mov    ecx,0xd0fd8de9
  42600a:	mov    esi,0xc6108c80
  42600f:	(bad)  
  426010:	mov    eax,0x79ac3060
  426015:	sub    edx,ebx
  426017:	mov    ds:0x3e96b474,eax
  42601c:	jnp    0x426035
  42601e:	add    ah,bl
  426020:	jbe    0x425fd6
  426022:	lds    eax,FWORD PTR [eax]
  426024:	(bad)  
  426025:	div    edx
  426027:	cmp    edx,DWORD PTR [ecx-0x6808c40]
  42602d:	pushf  
  42602e:	mov    WORD PTR [ebp-0x4d1161b],fs
  426034:	hlt    
  426035:	mov    ch,0xb2
  426037:	ins    BYTE PTR es:[edi],dx
  426038:	call   0x7835:0xe781d9ed
  42603f:	mov    al,0x37
  426041:	push   ebp
  426042:	push   edx
  426043:	call   0x166ed32e
  426048:	mov    edx,0x44b8cb6
  42604d:	push   0xffffffa5
  42604f:	sti    
  426050:	jb     0x425fd8
  426052:	inc    ebp
  426053:	adc    esi,0x22
  426056:	pop    edx
  426057:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426058:	fbstp  TBYTE PTR [ebx+ebp*2-0x6c]
  42605c:	sbb    ch,BYTE PTR [ebx-0x49]
  42605f:	dec    esp
  426060:	cmp    eax,ebp
  426062:	xchg   BYTE PTR [ebx+0x17],al
  426065:	dec    ebp
  426066:	push   es
  426067:	mov    ch,0x4c
  426069:	lea    edi,[eax+edx*2]
  42606c:	outs   dx,DWORD PTR ds:[esi]
  42606d:	inc    edi
  42606e:	add    ebx,DWORD PTR [edi-0x40]
  426071:	and    al,0x1f
  426073:	dec    ebx
  426074:	jb     0x425ffd
  426076:	cmp    esp,DWORD PTR cs:[ebx]
  426079:	inc    ecx
  42607a:	adc    ebx,DWORD PTR [edi+0x43cee237]
  426080:	data16 ss clc 
  426083:	push   cs
  426084:	fnstsw WORD PTR [edx-0x58fdba49]
  42608a:	mov    bh,0x48
  42608c:	repz jb 0x426080
  42608f:	clc    
  426090:	cs mov esi,0x29d3e494
  426096:	dec    edx
  426097:	mov    edx,0x6cac3af6
  42609c:	jle    0x4260b6
  42609e:	mov    ebx,0x66bdcc66
  4260a3:	xchg   esp,eax
  4260a4:	xor    eax,DWORD PTR [edx-0xd90eb8f]
  4260aa:	into   
  4260ab:	enter  0x35dc,0xa2
  4260af:	repz xchg edi,eax
  4260b1:	add    al,0x23
  4260b3:	sub    cl,BYTE PTR [eax+0x71eb22e1]
  4260b9:	nop
  4260ba:	bound  ebp,QWORD PTR [edx+eax*4+0x1c6c3aff]
  4260c1:	fdivp  st(1),st
  4260c3:	fdivr  QWORD PTR [ecx]
  4260c5:	(bad)  
  4260c6:	retf   0xf7db
  4260c9:	das    
  4260ca:	mov    edi,0xceab8ac1
  4260cf:	pop    esi
  4260d0:	push   ebx
  4260d1:	fwait
  4260d2:	or     BYTE PTR [ebx-0x1dd3c9cb],dl
  4260d8:	lea    ebx,ds:0x61fc60f0
  4260de:	dec    ecx
  4260df:	jne    0x4260f9
  4260e1:	push   ss
  4260e2:	out    0x51,eax
  4260e4:	add    esi,ebp
  4260e6:	retf   0xd589
  4260e9:	lods   eax,DWORD PTR ds:[esi]
  4260ea:	xlat   BYTE PTR ds:[ebx]
  4260eb:	(bad)  
  4260ec:	sti    
  4260ed:	jmp    0x4260b4
  4260ef:	pop    ebp
  4260f0:	sub    edx,DWORD PTR [ebp+0x7a]
  4260f3:	cmp    edi,DWORD PTR [ecx+0x1d6fd]
  4260f9:	clc    
  4260fa:	add    al,0x0
  4260fc:	add    BYTE PTR [ebp-0x7],bh
  4260ff:	push   esp
  426100:	(bad)  
  426101:	(bad)  
  426103:	add    ebx,DWORD PTR [eax-0x64c7078f]
  426109:	mov    ch,0x4d
  42610b:	or     DWORD PTR [ecx],eax
  42610d:	xor    DWORD PTR [edi+0x1bdb7f6f],0x936d2a53
  426117:	in     al,dx
  426118:	mov    esp,0x29e24eb8
  42611d:	push   ecx
  42611e:	sbb    DWORD PTR [ebx-0x66b1a734],esi
  426124:	lahf   
  426125:	push   esp
  426126:	sar    BYTE PTR cs:[edx-0x7b],cl
  42612a:	jmp    0x426140
  42612c:	xor    al,0x66
  42612e:	xor    BYTE PTR [edx+0xa],ah
  426131:	and    ebp,ecx
  426133:	mov    bl,0xcb
  426135:	jmp    0x2fef:0x3d71f4be
  42613c:	push   es
  42613d:	jno    0x426185
  42613f:	(bad)  
  426140:	clc    
  426141:	push   ds
  426142:	adc    bh,BYTE PTR [esi+0x1e]
  426145:	and    bl,BYTE PTR [eax+0x1fb9480d]
  42614b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42614c:	aad    0xad
  42614e:	ss pop ebx
  426150:	aad    0x47
  426152:	mov    bh,0x6e
  426154:	pop    ecx
  426155:	jp     0x4260fa
  426157:	lea    eax,[esi+ebp*8+0x72604c59]
  42615e:	pop    esp
  42615f:	xor    eax,0x90deb7f7
  426164:	sub    ecx,ebx
  426166:	mov    edi,0x6ff28976
  42616b:	mov    bl,0xc8
  42616d:	lea    ecx,ds:0x943a54fb
  426173:	pop    ebp
  426174:	push   edx
  426175:	jno    0x4261c0
  426177:	pusha  
  426178:	sti    
  426179:	int    0xb0
  42617b:	jnp    0x4261f6
  42617d:	in     eax,0x37
  42617f:	fmul   QWORD PTR [ebp+0x1a]
  426182:	les    esp,FWORD PTR [eax]
  426184:	scas   al,BYTE PTR es:[edi]
  426185:	mov    ds:0x27bc48e5,al
  42618a:	push   0x64
  42618c:	aam    0x5e
  42618e:	xchg   ecx,eax
  42618f:	popa   
  426190:	cmp    esp,ebx
  426192:	cmp    al,0xc4
  426194:	mov    eax,0x43d0d54f
  426199:	add    DWORD PTR ds:0x9258ca00,ebx
  42619f:	iret   
  4261a0:	(bad)  
  4261a1:	ds adc al,0x83
  4261a4:	adc    esi,DWORD PTR [di+0x137c]
  4261a9:	cmp    BYTE PTR ds:0x9f5ecf27,0x87
  4261b0:	dec    ebx
  4261b1:	xlat   BYTE PTR fs:[ebx]
  4261b3:	leave  
  4261b4:	mov    ch,0x90
  4261b6:	cmp    edx,DWORD PTR [ecx-0x30]
  4261b9:	mov    dl,0x5a
  4261bb:	in     eax,0xf4
  4261bd:	or     edx,edi
  4261bf:	cmp    ch,BYTE PTR [esi-0x55d7c659]
  4261c5:	loope  0x42621a
  4261c7:	jbe    0x4261ea
  4261c9:	es lahf 
  4261cb:	sbb    eax,0x43461818
  4261d0:	sub    DWORD PTR [ecx-0x65374a0d],esi
  4261d6:	push   ebp
  4261d7:	or     BYTE PTR [eax+0x454516ce],cl
  4261dd:	fst    st(6)
  4261df:	jne    0x42623d
  4261e1:	cmp    eax,0xc250a2ff
  4261e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261e7:	jns    0x4261ef
  4261e9:	push   edx
  4261ea:	push   esi
  4261eb:	cmp    BYTE PTR [eax-0x41258001],0x98
  4261f2:	sbb    BYTE PTR [eax],0x6d
  4261f5:	inc    ebp
  4261f6:	lahf   
  4261f7:	dec    esi
  4261f8:	in     eax,dx
  4261f9:	out    dx,eax
  4261fa:	dec    ebp
  4261fb:	mov    ds:0xfc47f1a4,eax
  426200:	cdq    
  426201:	popf   
  426202:	fist   DWORD PTR [ebx-0x24edf919]
  426208:	fwait
  426209:	rcr    dh,0xf3
  42620c:	shl    DWORD PTR [esi],0x5b
  42620f:	inc    ebx
  426210:	or     eax,0xce5f2191
  426215:	cmp    al,0xfb
  426217:	adc    dl,ch
  426219:	iret   
  42621a:	shl    DWORD PTR [edx-0x17],0xe0
  42621e:	adc    DWORD PTR [ebx-0x6aceb37e],edx
  426224:	popa   
  426225:	daa    
  426226:	sbb    DWORD PTR [esi+0x51],esp
  426229:	clc    
  42622a:	add    BYTE PTR [eax],bl
  42622c:	imul   esp,DWORD PTR [eax+edx*8],0xffffffb5
  426230:	aad    0xbf
  426232:	scas   al,BYTE PTR es:[edi]
  426233:	addr16 jl 0x4262a2
  426236:	loop   0x426200
  426238:	lods   eax,DWORD PTR ds:[esi]
  426239:	shl    BYTE PTR [edi+0xba7ba1e],cl
  42623f:	cld    
  426240:	ds retf 
  426242:	mov    ds:0xb5081e4d,eax
  426247:	mov    ecx,0xa1eb21e4
  42624c:	xchg   BYTE PTR [edi+ebp*1-0x1e],ch
  426250:	rcr    BYTE PTR [esi+0x14],cl
  426253:	jmp    0x4f9d:0xfb84cd06
  42625a:	cld    
  42625b:	bts    DWORD PTR [ecx+edi*4+0xca03deb],ecx
  426263:	inc    esi
  426264:	push   cs
  426265:	fnstcw WORD PTR [esi-0x22]
  426268:	cmp    DWORD PTR [ecx+ebx*1],edi
  42626b:	loop   0x42623f
  42626d:	jbe    0x4262be
  42626f:	out    dx,al
  426270:	push   ebx
  426271:	sti    
  426272:	push   0xffffffa4
  426274:	gs pushf 
  426276:	cmp    al,0xd2
  426278:	aam    0xe4
  42627a:	add    ch,bh
  42627c:	repz push cs
  42627e:	clc    
  42627f:	xor    al,al
  426281:	push   0x319f4c7e
  426286:	int    0x68
  426288:	inc    edi
  426289:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42628a:	rcr    DWORD PTR [edx-0x27e3be5f],1
  426290:	mov    esp,DWORD PTR [edx-0x19]
  426293:	xor    dh,BYTE PTR es:[ecx+edx*1+0x6a90dd6f]
  42629b:	xor    bh,BYTE PTR [esi]
  42629d:	into   
  42629e:	or     al,0x54
  4262a0:	scas   al,BYTE PTR es:[edi]
  4262a1:	cmp    eax,0x24f7d2a2
  4262a6:	add    DWORD PTR [ebp+ebx*4-0x19],esi
  4262aa:	pop    edx
  4262ab:	(bad)  
  4262ac:	stos   BYTE PTR es:[edi],al
  4262ad:	jecxz  0x4262c5
  4262af:	mov    eax,ds:0xd014341f
  4262b4:	pop    esi
  4262b5:	or     DWORD PTR [esi],eax
  4262b7:	clc    
  4262b8:	push   cs
  4262b9:	pop    esp
  4262ba:	(bad)  
  4262bc:	mov    dh,0x6c
  4262be:	fs mov edi,0x6dd00f53
  4262c4:	inc    edi
  4262c5:	daa    
  4262c6:	mov    cl,0xa8
  4262c8:	xchg   ebx,eax
  4262c9:	adc    BYTE PTR [edi-0xa],ch
  4262cc:	pop    ebx
  4262cd:	test   eax,0x541528f8
  4262d2:	push   0xc12cac0a
  4262d7:	sub    bh,BYTE PTR [ecx+0x9ea0dc]
  4262dd:	mov    esp,esp
  4262df:	out    0xc5,eax
  4262e1:	dec    edi
  4262e2:	push   cs
  4262e3:	sti    
  4262e4:	xlat   BYTE PTR cs:[ebx]
  4262e6:	ss or  eax,ebp
  4262e9:	in     eax,dx
  4262ea:	mov    ch,0x13
  4262ec:	cmc    
  4262ed:	jae    0x426320
  4262ef:	add    ebp,DWORD PTR fs:[esi]
  4262f2:	aad    0x83
  4262f4:	and    BYTE PTR [ebx+0x2b],bl
  4262f7:	frstor [ebx+0x28d8602c]
  4262fd:	(bad)  [ebp-0x3e]
  426300:	xlat   BYTE PTR ds:[ebx]
  426301:	push   ds
  426302:	jmp    0x1a36:0x599cbac0
  426309:	xor    esp,DWORD PTR [edi+eiz*8+0x4]
  42630d:	retf   0xf006
  426310:	stc    
  426311:	mov    dh,0xec
  426313:	mov    cs,edi
  426315:	mov    dh,0x1b
  426317:	push   edi
  426318:	cwde   
  426319:	mov    ecx,0xc46fd97f
  42631e:	stos   DWORD PTR es:[edi],eax
  42631f:	and    dh,dl
  426321:	cmp    al,0x1d
  426323:	xchg   ebp,eax
  426324:	das    
  426325:	adc    bl,BYTE PTR [ebx]
  426327:	xor    DWORD PTR [edi-0x27],esi
  42632a:	(bad)  
  42632b:	jne    0x426365
  42632d:	sbb    DWORD PTR [eax+0x7f],esi
  426330:	inc    esp
  426331:	inc    edi
  426332:	and    BYTE PTR [ecx+0x6aaedcd5],bl
  426338:	sar    DWORD PTR [ebp+0x6a],0x58
  42633c:	cmp    DWORD PTR [ecx-0x73],esi
  42633f:	jmp    0xba1ee999
  426344:	int    0x88
  426346:	cmc    
  426347:	nop
  426348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426349:	inc    ebx
  42634a:	or     bh,BYTE PTR [edx+0x30]
  42634d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42634e:	imul   edx,DWORD PTR [ecx-0x2b],0x2b
  426352:	mov    ebp,0xc98bdf90
  426357:	rcl    DWORD PTR [eax],0xfe
  42635a:	retf   
  42635b:	cdq    
  42635c:	push   esi
  42635d:	stos   DWORD PTR es:[edi],eax
  42635e:	fnsave [edx+0x23]
  426361:	lds    eax,FWORD PTR [eax-0x16]
  426364:	iret   
  426365:	jmp    0x505d6022
  42636a:	iret   
  42636b:	enter  0xaca5,0xa8
  42636f:	gs and eax,0x554b8daa
  426375:	push   edi
  426376:	jne    0x426318
  426378:	(bad)  
  426379:	aad    0xf1
  42637b:	sti    
  42637c:	sahf   
  42637d:	mov    eax,0xf98be11f
  426382:	jg     0x4263e3
  426384:	or     ecx,esi
  426386:	retf   
  426387:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426388:	dec    eax
  426389:	or     edx,edx
  42638b:	arpl   WORD PTR [ecx+0x20b733d7],bx
  426391:	jns    0x4263f8
  426393:	mov    BYTE PTR [eax],dl
  426395:	xchg   esi,eax
  426396:	in     al,0xb
  426398:	enter  0x9f4e,0x11
  42639c:	clc    
  42639d:	and    eax,0x86c0c5f
  4263a2:	add    al,0xc2
  4263a4:	je     0x4263c4
  4263a6:	fidivr DWORD PTR [edx-0x63]
  4263a9:	les    ebp,FWORD PTR [edx+0x66]
  4263ac:	mov    ebx,0x8eaa66ed
  4263b1:	dec    ebx
  4263b2:	jp     0x42640f
  4263b4:	xchg   esp,eax
  4263b5:	call   0x14ad:0x836db248
  4263bc:	popf   
  4263bd:	jl     0x42636c
  4263bf:	sbb    DWORD PTR [edi],ebx
  4263c1:	in     al,0xb3
  4263c3:	addr16 (bad) 
  4263c5:	adc    eax,0x6ca07217
  4263ca:	sub    al,0x59
  4263cc:	fsub   QWORD PTR [eax]
  4263ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263cf:	mov    ch,0xe8
  4263d1:	pop    edx
  4263d2:	jg     0x4263e4
  4263d4:	and    DWORD PTR [eax-0x67],ebx
  4263d7:	idiv   dh
  4263d9:	mov    dl,0x7d
  4263db:	mov    esi,0x52fc6b06
  4263e0:	scas   eax,DWORD PTR es:[edi]
  4263e1:	mov    ds:0x7ad935dc,eax
  4263e6:	scas   al,BYTE PTR es:[edi]
  4263e7:	ss jl  0x4263f6
  4263ea:	aaa    
  4263eb:	stos   DWORD PTR es:[edi],eax
  4263ec:	add    ecx,DWORD PTR ds:[eax]
  4263ef:	push   ecx
  4263f0:	sbb    BYTE PTR ds:0xb508bb43,dh
  4263f6:	mov    al,ds:0x2e8152f
  4263fb:	xor    dh,ah
  4263fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4263fe:	mov    al,ds:0x1be264f4
  426403:	jmp    0x4263a1
  426405:	and    BYTE PTR [esi-0x496c6b27],bh
  42640b:	fisubr WORD PTR [ecx-0x6c]
  42640e:	daa    
  42640f:	lds    ebp,FWORD PTR [eax+edx*4]
  426412:	or     dh,dh
  426414:	clc    
  426415:	or     BYTE PTR [ecx-0x2a2074fe],dh
  42641b:	lods   eax,DWORD PTR ds:[esi]
  42641c:	bound  edx,QWORD PTR [eax-0x4c]
  42641f:	lahf   
  426420:	push   ebx
  426421:	inc    eax
  426423:	sub    BYTE PTR ds:[ebp-0x40],bh
  426427:	jl     0x426478
  426429:	xchg   edx,eax
  42642a:	dec    edi
  42642b:	dec    ebp
  42642c:	addr16 mov ecx,0x9c817822
  426432:	fnstsw ax
  426434:	sti    
  426435:	enter  0x4e,0x22
  426439:	and    ecx,DWORD PTR [edx-0x2e97fdd2]
  42643f:	and    DWORD PTR [eax],0x5931cd5f
  426445:	push   ecx
  426446:	sub    ebp,DWORD PTR [esi]
  426448:	stos   DWORD PTR es:[edi],eax
  426449:	pop    edx
  42644a:	popa   
  42644b:	xchg   edx,eax
  42644c:	inc    edi
  42644d:	pushf  
  42644e:	push   eax
  42644f:	test   DWORD PTR [ecx+edi*4+0x1da11de0],eax
  426456:	dec    ebp
  426457:	imul   esp,DWORD PTR ds:0x75457ef1,0x7
  42645e:	clc    
  42645f:	adc    cl,BYTE PTR [esi-0x468d3a60]
  426465:	pop    DWORD PTR [edi+0x7b]
  426468:	jbe    0x426499
  42646a:	mov    esp,0x496676c8
  42646f:	ss addr16 jl 0x4264cc
  426473:	sbb    BYTE PTR [esi+0x2b422740],ah
  426479:	cmp    DWORD PTR [esi+edi*8+0x71],ebx
  42647d:	clc    
  42647e:	mov    ch,0x7c
  426480:	fiadd  WORD PTR [esp+eiz*2-0x526399ac]
  426487:	js     0x426494
  426489:	and    eax,0x3939a87d
  42648e:	add    ebp,DWORD PTR [esi+0x38366395]
  426494:	call   0xbac5c36a
  426499:	lods   al,BYTE PTR ds:[esi]
  42649a:	int3   
  42649b:	jl     0x42644a
  42649d:	mov    al,ds:0x715bfbd
  4264a2:	sub    BYTE PTR [ebx-0x3f8e8993],0xa0
  4264a9:	icebp  
  4264aa:	mov    ds:0x5975fe43,eax
  4264af:	icebp  
  4264b0:	hlt    
  4264b1:	in     eax,dx
  4264b2:	shr    DWORD PTR [ecx-0x52df8e5b],0x9e
  4264b9:	dec    ebp
  4264ba:	in     al,dx
  4264bb:	call   0x782b:0x674a7f75
  4264c2:	out    dx,eax
  4264c3:	xchg   edi,ebx
  4264c5:	sub    DWORD PTR ds:0xc1259472,edx
  4264cb:	pop    es
  4264cc:	inc    esp
  4264cd:	xchg   ecx,eax
  4264ce:	push   esi
  4264cf:	jae    0x42651e
  4264d1:	fsubrp st(3),st
  4264d3:	mov    ds:0x50d6ad65,eax
  4264d8:	pop    es
  4264d9:	push   esp
  4264da:	(bad)
  4264dd:	test   eax,0x9316c535
  4264e2:	fcmove st,st(7)
  4264e4:	pusha  
  4264e5:	cmp    BYTE PTR [esi-0x25aa2213],0x1a
  4264ec:	stc    
  4264ed:	adc    ebx,DWORD PTR [ebx-0x2c1486f9]
  4264f3:	jo     0x42654d
  4264f5:	push   es
  4264f6:	(bad)  
  4264f7:	sti    
  4264f8:	xor    DWORD PTR [esi+0x57],ebp
  4264fb:	adc    al,0x9d
  4264fd:	mov    ch,0x9a
  4264ff:	fadd   DWORD PTR [edx-0x4371e89b]
  426505:	and    al,0x83
  426507:	shl    bh,cl
  426509:	mov    DWORD PTR [edx-0xa],0xb82e45ca
  426510:	and    al,0x99
  426512:	scas   al,BYTE PTR es:[edi]
  426513:	sbb    eax,esp
  426515:	div    DWORD PTR [edi-0x75]
  426518:	icebp  
  426519:	ret    
  42651a:	mov    ebp,0xee359af1
  42651f:	xchg   ebp,eax
  426520:	(bad)  
  426521:	lods   eax,DWORD PTR ds:[si]
  426523:	inc    ebx
  426524:	inc    ebx
  426525:	out    0x70,al
  426527:	mov    dl,0x6d
  426529:	retf   0x6018
  42652c:	adc    eax,0x15c41d98
  426531:	xchg   ecx,eax
  426532:	adc    ah,BYTE PTR [edi+0x4a]
  426535:	dec    ecx
  426536:	mov    edx,0x2583584c
  42653b:	or     eax,0x29f28e27
  426540:	test   DWORD PTR [eax+ebp*4],esi
  426543:	add    al,0xa0
  426545:	sub    edx,DWORD PTR [edi+0x6152e65b]
  42654b:	push   cs
  42654c:	je     0x426546
  42654e:	add    BYTE PTR [esi+0x23],bl
  426551:	lea    ebx,[eax+0x1f]
  426554:	and    dl,BYTE PTR [esi-0x1b]
  426557:	xor    bh,ah
  426559:	mov    ah,0x80
  42655b:	rdtsc  
  42655d:	hlt    
  42655e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42655f:	add    bh,BYTE PTR [esi-0x7322046b]
  426565:	imul   edx,esi,0x5d
  426568:	repnz dec ecx
  42656a:	jno    0x426573
  42656c:	adc    esi,DWORD PTR [edx]
  42656e:	xchg   edi,eax
  42656f:	jp     0x4265dd
  426571:	fwait
  426572:	pop    ebx
  426573:	adc    ebp,DWORD PTR [edx]
  426575:	jb     0x426548
  426577:	imul   edi,DWORD PTR cs:[ecx-0x40920b35],0x36
  42657f:	inc    ebx
  426580:	sbb    bl,BYTE PTR [edx]
  426582:	dec    ebp
  426583:	repz push edx
  426585:	cs jp  0x4265dc
  426588:	popf   
  426589:	xor    eax,0xe4ea0fe8
  42658e:	pop    esi
  42658f:	ja     0x426607
  426591:	les    ecx,FWORD PTR [ebp-0x4438102a]
  426597:	add    al,0x2d
  426599:	rol    dl,0xcf
  42659c:	fist   WORD PTR [ecx-0x7418a164]
  4265a2:	mov    ch,0x6f
  4265a4:	ds in  al,dx
  4265a6:	loopne 0x426550
  4265a8:	and    DWORD PTR [esi],eax
  4265aa:	and    ecx,DWORD PTR [ecx]
  4265ac:	jecxz  0x426622
  4265ae:	fnclex 
  4265b0:	loopne 0x42654c
  4265b2:	(bad)  
  4265b3:	cmp    cl,bl
  4265b5:	aad    0x6d
  4265b7:	jle    0x42656d
  4265b9:	cmp    ebp,DWORD PTR [edx-0x77]
  4265bc:	loope  0x42658e
  4265be:	jl     0x426554
  4265c0:	pop    esi
  4265c1:	loope  0x4265d6
  4265c3:	pop    ss
  4265c4:	in     eax,0xa1
  4265c6:	iret   
  4265c7:	dec    esp
  4265c8:	imul   BYTE PTR [ebp+0x73]
  4265cb:	lahf   
  4265cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4265cd:	sbb    dh,BYTE PTR [ebx+ebx*2]
  4265d0:	inc    BYTE PTR [eax]
  4265d2:	repz inc ecx
  4265d4:	clc    
  4265d5:	fidiv  DWORD PTR [edi+0x504ba175]
  4265db:	les    eax,FWORD PTR [edx]
  4265dd:	pop    ecx
  4265de:	jge    0x426609
  4265e0:	add    al,dl
  4265e2:	push   0x4558ab48
  4265e7:	pop    ecx
  4265e8:	std    
  4265e9:	pop    eax
  4265ea:	push   0xffffff9e
  4265ec:	popa   
  4265ed:	jnp    0x4265df
  4265ef:	dec    esi
  4265f0:	inc    eax
  4265f1:	pop    edx
  4265f2:	mov    ebp,0xc3713a1b
  4265f7:	loop   0x4265e4
  4265f9:	bnd jmp 0x426675
  4265fc:	fstp   TBYTE PTR [ecx+0x440bd130]
  426602:	mov    ebp,DWORD PTR [edi]
  426604:	add    esi,ebp
  426606:	fild   DWORD PTR [ecx]
  426608:	add    al,bh
  42660a:	add    al,0x0
  42660c:	add    BYTE PTR [ebp-0x73],dh
  42660f:	mov    ds:0xa0d35272,eax
  426614:	mov    edi,0x32a75c71
  426619:	(bad)  
  42661a:	pop    ebx
  42661b:	and    BYTE PTR [edx],bh
  42661d:	dec    esi
  42661e:	mov    WORD PTR [ecx-0x4a],es
  426621:	dec    ecx
  426622:	jo     0x426696
  426624:	cmp    BYTE PTR [ebx],al
  426626:	and    esp,eax
  426628:	fsub   DWORD PTR [eax+0x44bfedf4]
  42662e:	pop    ebp
  42662f:	shr    BYTE PTR [ebx-0x52],cl
  426632:	shl    DWORD PTR [eax+0x7e],cl
  426635:	jge    0x426627
  426637:	push   ss
  426638:	push   0x32
  42663a:	in     eax,0xd4
  42663c:	mov    BYTE PTR [ecx],0xf3
  42663f:	fwait
  426640:	rol    DWORD PTR [edi],1
  426642:	fs popfw 
  426645:	les    esi,FWORD PTR [ebp+0x107fb0b3]
  42664b:	scas   al,BYTE PTR es:[edi]
  42664c:	sti    
  42664d:	dec    eax
  42664e:	call   0xfe957197
  426653:	push   ss
  426654:	pop    esp
  426655:	push   ebp
  426656:	mov    edi,0x33001f1a
  42665b:	mov    dl,0x8c
  42665d:	stc    
  42665e:	add    al,0xac
  426660:	lea    esp,ds:0xdf6c0d4a
  426666:	sbb    cl,BYTE PTR [ebx+edx*4-0x31a890ed]
  42666d:	mov    eax,0x199bb0e2
  426672:	jp     0x42664c
  426674:	push   eax
  426675:	(bad)
  426679:	shl    ebx,cl
  42667b:	ins    DWORD PTR es:[edi],dx
  42667c:	xchg   ebp,eax
  42667d:	sti    
  42667e:	inc    eax
  42667f:	pop    ebx
  426680:	stc    
  426681:	pop    ss
  426682:	fsub   st,st(5)
  426684:	in     al,dx
  426685:	pop    es
  426686:	shl    ch,cl
  426688:	mov    cx,0x633
  42668c:	push   ss
  42668d:	and    al,0xd7
  42668f:	add    BYTE PTR ds:0x78c2220b,ch
  426695:	sub    ebp,esp
  426697:	jno    0x426701
  426699:	sbb    DWORD PTR [ecx-0x5d08b7aa],ebx
  42669f:	or     cl,dh
  4266a1:	test   BYTE PTR [ebx+0x1758e199],bh
  4266a7:	inc    eax
  4266a8:	(bad)  
  4266a9:	(bad)  
  4266ab:	sub    edx,ebp
  4266ad:	mov    al,ds:0xa1eaaeb3
  4266b2:	or     bh,bl
  4266b4:	adc    BYTE PTR [edi+0x4af66cb9],bl
  4266ba:	mov    eax,0x5f56e3cd
  4266bf:	mov    bh,0x41
  4266c1:	sub    cl,ch
  4266c3:	pop    esp
  4266c4:	rcl    ah,1
  4266c6:	shr    ecx,1
  4266c8:	push   ecx
  4266c9:	gs sub eax,0x44815285
  4266cf:	or     BYTE PTR [esi+esi*8+0x78],dl
  4266d3:	faddp  st(5),st
  4266d5:	mov    bh,0x7b
  4266d7:	ja     0x426691
  4266d9:	fcom   QWORD PTR [ebp+0x80fcaeb]
  4266df:	je     0x4266ef
  4266e1:	jne    0x42667c
  4266e3:	lods   al,BYTE PTR ds:[esi]
  4266e4:	clc    
  4266e5:	jnp    0x42672e
  4266e7:	(bad)  
  4266e8:	leave  
  4266e9:	iret   
  4266ea:	daa    
  4266eb:	idiv   DWORD PTR [edx+0x5d]
  4266ee:	and    dh,cl
  4266f0:	rcr    BYTE PTR [edi+ecx*4+0x5953edc2],cl
  4266f7:	jmp    0x42674a
  4266f9:	jne    0x426777
  4266fb:	leave  
  4266fc:	std    
  4266fd:	adc    eax,0x71f056ad
  426702:	pusha  
  426703:	mov    BYTE PTR [ebp*1-0x15e8ec1],bl
  42670a:	mov    edx,0xf5776872
  42670f:	sbb    ah,ah
  426711:	fstp   QWORD PTR [esi-0x42]
  426714:	add    BYTE PTR [ebx-0x5935a46b],ah
  42671a:	xchg   DWORD PTR [ebx+0x1c4992a3],edi
  426720:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426721:	into   
  426722:	xor    BYTE PTR [esi+ebx*8],cl
  426725:	stos   BYTE PTR es:[edi],al
  426726:	adc    ebp,DWORD PTR [esi]
  426728:	ror    ebx,cl
  42672a:	jb     0x42674c
  42672c:	pop    es
  42672d:	out    0xa4,eax
  42672f:	and    bl,BYTE PTR [ecx]
  426731:	add    DWORD PTR [esi],edi
  426733:	adc    DWORD PTR [eax-0x6e89faa7],esi
  426739:	imul   ecx,DWORD PTR [ebx+0x18],0xbe92bf0f
  426740:	fs push ecx
  426742:	xor    DWORD PTR [edx],edi
  426744:	mov    cl,0xf2
  426746:	inc    eax
  426747:	jmp    0x18a575a5
  42674c:	jl     0x4267bd
  42674e:	bound  ebx,QWORD PTR [ecx+0x7461d554]
  426754:	clc    
  426755:	ror    DWORD PTR [ecx],cl
  426757:	or     ecx,DWORD PTR [eax]
  426759:	xor    bl,BYTE PTR [ebx+0x18146183]
  42675f:	clc    
  426760:	mov    al,0xfe
  426762:	out    0xd2,al
  426764:	daa    
  426765:	dec    eax
  426766:	hlt    
  426767:	mov    DWORD PTR [ecx+0x75],esi
  42676a:	cmp    ch,dh
  42676c:	adc    dh,BYTE PTR [edx]
  42676e:	inc    ecx
  42676f:	pop    ecx
  426770:	lds    esp,FWORD PTR [esi-0x7acaab2c]
  426776:	outs   dx,BYTE PTR ds:[esi]
  426777:	jg     0x42672f
  426779:	shr    BYTE PTR [ecx-0x16a6f8a2],cl
  42677f:	int    0xce
  426781:	data16 cmp dh,BYTE PTR [esi+0x29]
  426785:	fsubr  st(1),st
  426787:	lods   eax,DWORD PTR ds:[esi]
  426788:	fs jno 0x4267e1
  42678b:	sub    DWORD PTR [esi-0x302bfe41],0x44382759
  426795:	or     eax,0x4e3da6f3
  42679a:	retf   0x9166
  42679d:	sbb    dl,dl
  42679f:	iret   
  4267a0:	test   DWORD PTR [ecx],esp
  4267a2:	shl    DWORD PTR [ebx+ebp*4-0x4e72fd33],cl
  4267a9:	in     eax,dx
  4267aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267ab:	pop    eax
  4267ac:	jno    0x42680d
  4267ae:	lods   al,BYTE PTR ds:[esi]
  4267af:	repnz sahf 
  4267b1:	push   esi
  4267b2:	mov    ds:0x1e5c1380,eax
  4267b7:	fldenv [ecx]
  4267b9:	xor    ah,BYTE PTR [edi+0x8]
  4267bc:	jbe    0x42675b
  4267be:	in     eax,dx
  4267bf:	or     al,0xef
  4267c1:	sbb    edi,0xf
  4267c4:	pop    edi
  4267c5:	mov    bl,0x30
  4267c7:	popf   
  4267c8:	test   DWORD PTR [edx],esp
  4267ca:	shl    DWORD PTR [ebx-0x3b],0x35
  4267ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4267cf:	je     0x426843
  4267d1:	loop   0x42677a
  4267d3:	dec    ebx
  4267d4:	mov    ebp,0xb369d08d
  4267d9:	dec    ebx
  4267da:	out    0xec,eax
  4267dc:	lahf   
  4267dd:	sahf   
  4267de:	ds and al,0x17
  4267e1:	jecxz  0x426792
  4267e3:	outs   dx,BYTE PTR ds:[esi]
  4267e4:	lea    esi,ds:0x5f8dae2b
  4267ea:	fwait
  4267eb:	mov    DWORD PTR [ebx+eiz*8+0x7c],esi
  4267ef:	xor    ch,BYTE PTR [esi]
  4267f1:	iret   
  4267f2:	call   0x12c3f60f
  4267f7:	stc    
  4267f8:	mov    bh,0x68
  4267fa:	inc    esi
  4267fb:	sar    esi,0x9f
  4267fe:	adc    al,0x7c
  426800:	sbb    DWORD PTR [ecx],esp
  426802:	mov    ah,0xd2
  426804:	arpl   WORD PTR [esi],si
  426806:	sahf   
  426807:	sbb    dl,0x4d
  42680a:	stc    
  42680b:	xor    DWORD PTR [ebp+0x1514ebf3],0xcb23f079
  426815:	pop    esi
  426816:	shl    esi,cl
  426818:	pop    edi
  426819:	test   eax,0xdb8fbb73
  42681e:	dec    esi
  42681f:	lds    ecx,FWORD PTR [edi-0x6a]
  426822:	jmp    0x4ec5:0x4a54b400
  426829:	mov    ds:0x3223b771,al
  42682e:	into   
  42682f:	mov    esp,0x46aad254
  426834:	push   esi
  426835:	and    al,0x8d
  426837:	iret   
  426838:	push   ecx
  426839:	out    dx,al
  42683a:	mov    ebp,0x1c14a764
  42683f:	es mov ebx,0x5d132356
  426845:	push   0xffffffbc
  426847:	popa   
  426848:	mov    esi,0x8f6bb5f7
  42684d:	sbb    ebp,DWORD PTR [eax+ebx*2-0x5c3a606c]
  426854:	out    0xaf,eax
  426856:	test   eax,0xf75b83d0
  42685b:	and    ah,dl
  42685d:	mov    ch,0x18
  42685f:	and    al,0xd5
  426861:	cmp    dl,ah
  426863:	adc    eax,0x4e4229f
  426868:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426869:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42686a:	lods   eax,DWORD PTR ds:[esi]
  42686b:	and    eax,0x98e0a27d
  426870:	repz pusha 
  426872:	ror    dl,cl
  426874:	add    al,0x85
  426876:	pop    edi
  426877:	or     BYTE PTR cs:[esi],ch
  42687a:	sar    DWORD PTR [ecx],0x8
  42687d:	jecxz  0x426876
  42687f:	jmp    0x1014:0x21650476
  426886:	pop    ebx
  426887:	push   ss
  426888:	adc    ebx,DWORD PTR [ebx]
  42688a:	(bad)  
  42688b:	rol    ecx,cl
  42688d:	add    ebp,ecx
  42688f:	(bad)  
  426890:	lods   eax,DWORD PTR ds:[esi]
  426891:	hlt    
  426892:	aaa    
  426893:	mov    ebx,ebp
  426895:	xchg   edi,eax
  426896:	jg     0x4268fe
  426898:	jecxz  0x4268a0
  42689a:	mov    ds:0x59d699a2,al
  42689f:	adc    bh,BYTE PTR [eax-0x44b8fee9]
  4268a5:	mov    eax,ds:0x8754dc18
  4268aa:	sbb    eax,0x9ad042da
  4268af:	jg     0x4268bc
  4268b1:	cmp    DWORD PTR [esi+0x244b01b4],esi
  4268b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4268b8:	clc    
  4268b9:	mov    bl,0xf6
  4268bb:	pop    ds
  4268bc:	pop    esi
  4268bd:	pop    ecx
  4268be:	xor    al,0xf9
  4268c0:	adc    ebp,edi
  4268c2:	push   ds
  4268c3:	push   0x7d
  4268c5:	outs   dx,BYTE PTR ds:[esi]
  4268c6:	dec    ebx
  4268c7:	lahf   
  4268c8:	push   edi
  4268c9:	jecxz  0x426879
  4268cb:	cmp    dh,bh
  4268cd:	sbb    eax,0xe319edb4
  4268d2:	inc    ebp
  4268d3:	push   ds
  4268d4:	xchg   esp,eax
  4268d5:	dec    esp
  4268d6:	pop    es
  4268d7:	or     eax,0x5d785582
  4268dc:	gs push eax
  4268de:	jne    0x4268d7
  4268e0:	stc    
  4268e1:	xchg   esp,eax
  4268e2:	add    DWORD PTR [ecx-0x44],0x9
  4268e6:	push   esi
  4268e7:	lock in eax,0x5d
  4268ea:	pushf  
  4268eb:	sbb    al,0x62
  4268ed:	push   ecx
  4268ee:	sti    
  4268ef:	and    BYTE PTR [ecx-0x13],cl
  4268f2:	test   eax,0x2cdff330
  4268f7:	popa   
  4268f8:	jo     0x4268ae
  4268fa:	mov    dh,0x71
  4268fc:	and    al,0xca
  4268fe:	cs push ds
  426900:	cmp    eax,0x1a8e82e7
  426905:	and    bh,BYTE PTR [eax]
  426907:	jp     0x4268b1
  426909:	in     eax,0x4e
  42690b:	(bad)  
  42690c:	(bad)  
  42690e:	sub    DWORD PTR [edi+0x712e4331],ecx
  426914:	ret    
  426915:	clc    
  426916:	inc    BYTE PTR [ebx]
  426918:	lods   al,BYTE PTR ds:[esi]
  426919:	mov    bl,0x27
  42691b:	nop
  42691c:	push   ss
  42691d:	mov    esi,0x7ca3fb23
  426922:	mov    al,0x84
  426924:	xchg   DWORD PTR ds:0x500190b6,ebp
  42692a:	popf   
  42692b:	jno    0x4269a1
  42692d:	mov    ebx,0x8d647689
  426932:	mov    ch,0xea
  426934:	sbb    esp,DWORD PTR [esi+0x28]
  426937:	shl    DWORD PTR [esi],cl
  426939:	cmp    ah,BYTE PTR [edx-0x61525f7a]
  42693f:	out    dx,eax
  426940:	pushf  
  426941:	shl    DWORD PTR [esi+0x23],1
  426944:	jecxz  0x426937
  426946:	xor    DWORD PTR [edi],esi
  426948:	adc    al,0xfb
  42694a:	mov    bl,0x6a
  42694c:	cwde   
  42694d:	(bad)  
  42694e:	lock inc edi
  426950:	fild   DWORD PTR [edx]
  426952:	jbe    0x4269bc
  426954:	inc    ebp
  426955:	test   BYTE PTR [eax-0x71],bl
  426958:	or     DWORD PTR [esi],edx
  42695a:	in     eax,0xd0
  42695c:	xchg   dl,dl
  42695e:	mov    bl,0x22
  426960:	scas   al,BYTE PTR es:[edi]
  426961:	push   ss
  426962:	ret    0x1582
  426965:	inc    edx
  426966:	or     ecx,DWORD PTR [ecx+edi*4]
  426969:	stos   DWORD PTR es:[edi],eax
  42696a:	imul   BYTE PTR [esi]
  42696c:	mov    al,0x72
  42696e:	adc    BYTE PTR [edi+0x67],cl
  426971:	pop    es
  426972:	(bad)  
  426973:	pusha  
  426974:	ins    DWORD PTR es:[edi],dx
  426975:	jle    0x4269b0
  426977:	push   ebp
  426978:	popf   
  426979:	sbb    ah,BYTE PTR [ebx+0x2e1bf9d7]
  42697f:	sti    
  426980:	pop    edi
  426981:	mov    ds:0x49263e85,eax
  426986:	mov    ?,WORD PTR [di+0xb]
  42698a:	fcmovnu st,st(7)
  42698c:	call   0xb537ecf8
  426991:	clc    
  426992:	xchg   BYTE PTR [edi-0x1c153c9e],cl
  426998:	fsubr  QWORD PTR [edx]
  42699a:	loopne 0x4269a1
  42699c:	inc    edx
  42699d:	dec    esp
  42699e:	popa   
  42699f:	xabort 0x18
  4269a2:	outs   dx,DWORD PTR ds:[esi]
  4269a3:	pop    DWORD PTR [ebx]
  4269a5:	inc    esi
  4269a6:	test   al,0x67
  4269a8:	or     eax,0x78e84102
  4269ad:	fsubr  QWORD PTR ds:0xf62a708e
  4269b3:	in     eax,dx
  4269b4:	mov    ch,0xae
  4269b6:	(bad)  
  4269b7:	call   0x83f4973
  4269bc:	pushf  
  4269bd:	jne    0x42694d
  4269bf:	mov    dl,0xf4
  4269c1:	mov    BYTE PTR [ebx+eax*4],bh
  4269c4:	stos   DWORD PTR es:[edi],eax
  4269c5:	mov    ds:0x3c2c4c3d,eax
  4269ca:	adc    BYTE PTR [esi-0x35],al
  4269cd:	mov    dl,0x66
  4269cf:	dec    esp
  4269d0:	aam    0xd7
  4269d2:	ins    DWORD PTR es:[edi],dx
  4269d3:	test   eax,0x76705bf2
  4269d8:	addr16 fs aad 0x1b
  4269dc:	dec    eax
  4269dd:	adc    ebx,0x2642b396
  4269e3:	cmc    
  4269e4:	aad    0x58
  4269e6:	(bad)  
  4269e7:	pop    ss
  4269e8:	jge    0x426980
  4269ea:	test   DWORD PTR [edx+0xb013a68],esp
  4269f0:	xor    ecx,DWORD PTR [edx+0x343ff08f]
  4269f6:	out    dx,al
  4269f7:	ds push edi
  4269f9:	push   esi
  4269fa:	xchg   DWORD PTR [ebp-0x5fbe895c],edi
  426a00:	call   0xd1751134
  426a05:	dec    esp
  426a06:	iret   
  426a07:	and    BYTE PTR [ecx-0x38758fb1],al
  426a0d:	pop    ecx
  426a0e:	xchg   BYTE PTR [edx+0x639006d0],cl
  426a14:	fcom   QWORD PTR [eax+0x75d819af]
  426a1a:	xor    eax,0x7348aab4
  426a1f:	stos   DWORD PTR es:[edi],eax
  426a20:	ja     0x426a3d
  426a22:	retf   
  426a23:	push   ss
  426a24:	pop    esi
  426a25:	cmp    BYTE PTR ds:0xe3b7f8ec,0x4a
  426a2c:	mov    bh,0x80
  426a2e:	hlt    
  426a2f:	rcl    ebp,1
  426a31:	ss push es
  426a33:	inc    edi
  426a34:	mov    eax,ecx
  426a36:	jg     0x426a16
  426a38:	inc    ecx
  426a39:	in     eax,0x6
  426a3b:	or     al,0xd6
  426a3d:	pop    esp
  426a3e:	jnp    0x426a2a
  426a40:	dec    edx
  426a41:	aaa    
  426a42:	icebp  
  426a43:	and    al,0x4e
  426a45:	lea    esi,fs:[edi-0x1b074b76]
  426a4c:	or     al,0x5e
  426a4e:	or     BYTE PTR [edx],ch
  426a50:	cwde   
  426a51:	cmc    
  426a52:	push   eax
  426a53:	fwait
  426a54:	ror    DWORD PTR [ecx-0x6f2c2579],0x28
  426a5b:	and    BYTE PTR [esi+0x4110e2f0],bl
  426a61:	pop    ecx
  426a62:	lea    esp,[esi]
  426a64:	je     0x426a25
  426a66:	sub    dl,bh
  426a68:	push   esp
  426a69:	in     al,dx
  426a6a:	xor    ecx,0x8a861e63
  426a70:	cli    
  426a71:	pop    ds
  426a72:	int    0xa9
  426a74:	ds pushf 
  426a76:	dec    ebp
  426a77:	(bad)  
  426a78:	ja     0x426ab8
  426a7a:	or     cl,BYTE PTR [ebp+0x27f6c117]
  426a80:	lock push cs
  426a82:	adc    esp,DWORD PTR [ebp+0x7f]
  426a85:	sub    al,0x13
  426a87:	and    BYTE PTR [ebx],0x22
  426a8a:	shr    DWORD PTR [ebp+0x67],1
  426a8d:	xchg   ecx,eax
  426a8e:	nop
  426a8f:	lock push edx
  426a91:	pop    ecx
  426a92:	sbb    BYTE PTR [esi+0x1105d3ed],bl
  426a98:	gs sti 
  426a9a:	pop    ds
  426a9b:	and    al,0xc1
  426a9d:	sbb    ah,cl
  426a9f:	jmp    0xe5c7:0x75d29527
  426aa6:	adc    al,0xe8
  426aa8:	push   cs
  426aa9:	sub    DWORD PTR [ebx-0x1a],eax
  426aac:	clc    
  426aad:	pop    eax
  426aae:	ficom  DWORD PTR [ebx+0x1fa89f02]
  426ab4:	add    cl,BYTE PTR [ebx+edi*2]
  426ab7:	stos   DWORD PTR es:[edi],eax
  426ab8:	sbb    eax,0xb6778893
  426abd:	cmp    al,0xf8
  426abf:	cmp    DWORD PTR [ebx],ebx
  426ac1:	mov    ebx,0xba3ef0ab
  426ac6:	gs pop esi
  426ac8:	xchg   edx,eax
  426ac9:	nop
  426aca:	pop    ecx
  426acb:	jne    0x426b39
  426acd:	and    eax,0x9979046e
  426ad2:	push   edi
  426ad3:	dec    esi
  426ad4:	repnz repnz ror DWORD PTR [esi-0x2f],0xd4
  426ada:	adc    cl,BYTE PTR ds:0x4f000c38
  426ae0:	sbb    eax,0x639d618
  426ae5:	shr    bl,cl
  426ae7:	jmp    0xf3c5:0xac537b5e
  426aee:	ja     0x426ad8
  426af0:	fs (bad) 
  426af2:	maskmovq mm0,(bad)
  426af3:	test   DWORD PTR [ebx],0x3c3fbe3a
  426af9:	stc    
  426afa:	in     al,0x66
  426afc:	and    bl,BYTE PTR ds:0xb1f47ea
  426b02:	fiadd  DWORD PTR [esi+eax*8-0x6c16db7f]
  426b09:	in     eax,dx
  426b0a:	(bad)  
  426b0c:	call   DWORD PTR ss:[ebp+edi*4-0xc575d70]
  426b14:	xor    ch,ch
  426b16:	loopne 0x426b19
  426b18:	add    al,bh
  426b1a:	add    al,0x0
  426b1c:	add    BYTE PTR [edi-0x35],bl
  426b1f:	clc    
  426b20:	inc    edi
  426b21:	pop    eax
  426b22:	inc    eax
  426b23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b24:	fcomi  st,st(4)
  426b26:	daa    
  426b27:	mov    WORD PTR [ebp+0x5a],?
  426b2a:	or     al,0x73
  426b2c:	sti    
  426b2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b2e:	xor    ebp,DWORD PTR [ecx]
  426b30:	es push 0xffffffa3
  426b33:	out    0x17,eax
  426b35:	jg     0x426b22
  426b37:	stc    
  426b38:	aas    
  426b39:	pop    esi
  426b3a:	outs   dx,DWORD PTR ds:[esi]
  426b3b:	dec    ecx
  426b3c:	mov    es,ecx
  426b3e:	push   edx
  426b3f:	add    DWORD PTR cs:[ecx-0x54],ebp
  426b43:	int3   
  426b44:	mov    ecx,0xb22eabed
  426b49:	mov    eax,ds:0x407b265e
  426b4e:	push   edi
  426b4f:	jg     0x426b49
  426b51:	lds    edi,FWORD PTR [ebx-0x4b78480]
  426b57:	test   BYTE PTR [edi-0x5a199d12],dl
  426b5d:	js     0x426b74
  426b5f:	add    bl,al
  426b61:	aad    0x92
  426b63:	cmp    BYTE PTR [edi-0x5d9b9075],bl
  426b69:	outs   dx,BYTE PTR ds:[esi]
  426b6a:	push   ebp
  426b6b:	cmp    cl,dl
  426b6d:	mov    WORD PTR [ecx],?
  426b6f:	jnp    0x426b49
  426b71:	cld    
  426b72:	mov    ebp,0xc9508a93
  426b77:	mov    ch,dh
  426b79:	xchg   esi,eax
  426b7a:	(bad)  
  426b7b:	in     eax,0xcf
  426b7d:	push   ss
  426b7e:	sub    eax,0xc22104ac
  426b83:	mov    BYTE PTR ds:0xe571f9ab,cl
  426b89:	cdq    
  426b8a:	mov    ah,0x41
  426b8c:	pop    edx
  426b8d:	loopne 0x426bce
  426b8f:	fs push 0xfffffffc
  426b92:	mov    ch,0x78
  426b94:	adc    edi,esi
  426b96:	scas   eax,DWORD PTR es:[edi]
  426b97:	adc    al,BYTE PTR [ebx+ebx*2+0x15ba40f7]
  426b9e:	sbb    dl,BYTE PTR [ecx-0x17]
  426ba1:	cmp    BYTE PTR [eax-0x20bed7fd],bh
  426ba7:	add    ebx,edx
  426ba9:	data16 adc BYTE PTR [esp+ebp*8-0x6cce9def],ch
  426bb1:	fwait
  426bb2:	mov    al,ds:0xe9e9d790
  426bb7:	mov    edi,0xde85fdd2
  426bbc:	pop    eax
  426bbd:	pop    ecx
  426bbe:	mov    ch,0x2
  426bc0:	iret   
  426bc1:	popf   
  426bc2:	adc    ebx,edi
  426bc4:	pop    ebx
  426bc5:	pop    es
  426bc6:	push   edx
  426bc7:	mov    bp,0x276a
  426bcb:	xchg   edi,eax
  426bcc:	or     DWORD PTR [edx-0x10],edx
  426bcf:	and    dl,BYTE PTR [ebp+0x3a26390a]
  426bd5:	cmp    DWORD PTR [esi+0x7a872f4c],ebx
  426bdb:	push   0x18
  426bdd:	dec    edx
  426bde:	mov    ah,0xef
  426be0:	stos   BYTE PTR es:[edi],al
  426be1:	adc    dl,BYTE PTR [eax+0x595c9791]
  426be7:	fstp   DWORD PTR [ecx]
  426be9:	mov    eax,ds:0xd282e881
  426bee:	(bad)  
  426bef:	pusha  
  426bf0:	retf   0x44a4
  426bf3:	mov    dl,0x91
  426bf5:	adc    cl,dh
  426bf7:	push   ebp
  426bf8:	adc    DWORD PTR ds:0xd4e388e7,0x40edfa92
  426c02:	cmp    al,dl
  426c04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c05:	xor    BYTE PTR [ebx],dh
  426c07:	mov    ebp,0x8c6698db
  426c0c:	dec    edi
  426c0d:	inc    esp
  426c0e:	mov    ch,0x8e
  426c10:	xchg   BYTE PTR [esi],cl
  426c12:	cmp    eax,0x27b6e7de
  426c17:	fnsave [esi+0x48436e10]
  426c1d:	dec    ebp
  426c1e:	rcr    BYTE PTR [ebx+eax*1],0x10
  426c22:	xor    edi,eax
  426c24:	jb     0x426be7
  426c26:	mov    BYTE PTR [ebx-0x7a8ce234],dh
  426c2c:	daa    
  426c2d:	xchg   edi,eax
  426c2e:	js     0x426bbb
  426c30:	fwait
  426c31:	ds daa 
  426c33:	adc    eax,0x89d250c1
  426c38:	repz xchg esi,ebp
  426c3b:	scas   eax,DWORD PTR es:[edi]
  426c3c:	es test al,cl
  426c3f:	iret   
  426c40:	sub    eax,0xddca936
  426c45:	jmp    FWORD PTR [eax-0x18]
  426c48:	leave  
  426c49:	loopne 0x426bfd
  426c4b:	pop    ss
  426c4c:	enter  0xaa3e,0xec
  426c50:	pop    eax
  426c51:	add    al,0x9
  426c53:	jge    0x426c3e
  426c55:	rol    al,0x91
  426c58:	repz (bad) 
  426c5a:	jmp    0x9b4e896a
  426c5f:	inc    esp
  426c60:	cmp    DWORD PTR [edi+0x23ea302f],ebp
  426c66:	jecxz  0x426c47
  426c68:	mov    bh,BYTE PTR [edx+0x1c1cba1f]
  426c6e:	pusha  
  426c6f:	repz clc 
  426c71:	cmp    BYTE PTR [ebx],dh
  426c73:	pop    DWORD PTR [edx+0x14]
  426c76:	lock mov edi,0x4b583737
  426c7c:	out    dx,eax
  426c7d:	es jo  0x426c47
  426c80:	jno    0x426cf8
  426c82:	and    cl,BYTE PTR [eax+ecx*4+0x52]
  426c86:	out    0x99,eax
  426c88:	pop    ebp
  426c89:	js     0x426ca0
  426c8b:	pop    eax
  426c8c:	mov    cl,0xe4
  426c8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426c8f:	outs   dx,BYTE PTR ds:[esi]
  426c90:	sti    
  426c91:	dec    eax
  426c92:	test   al,0x48
  426c94:	cld    
  426c95:	xchg   edx,eax
  426c96:	jno    0x426ca7
  426c98:	cld    
  426c99:	jne    0x426c7a
  426c9b:	fild   QWORD PTR [esi]
  426c9d:	pop    edx
  426c9e:	(bad)  
  426ca0:	dec    ecx
  426ca1:	je     0x426d01
  426ca3:	xor    BYTE PTR [edi+0x13],ch
  426ca6:	retf   
  426ca7:	add    al,BYTE PTR [ebp-0x2c]
  426caa:	add    eax,0xa0ef2ae5
  426caf:	or     esp,ebp
  426cb1:	mov    ebx,es
  426cb3:	dec    edx
  426cb4:	loopne 0x426d23
  426cb6:	pop    ss
  426cb7:	inc    edi
  426cb8:	repnz int3 
  426cba:	or     ch,dl
  426cbc:	in     al,dx
  426cbd:	retf   0x6d86
  426cc0:	lods   eax,DWORD PTR ds:[esi]
  426cc1:	and    al,0xe0
  426cc3:	jmp    0x8378ed6b
  426cc8:	jp     0x426d0b
  426cca:	pop    ebp
  426ccb:	jnp    0x426c60
  426ccd:	in     al,0x51
  426ccf:	cwde   
  426cd0:	fstp   DWORD PTR [esp+ebx*2]
  426cd3:	push   ebx
  426cd4:	test   DWORD PTR [esi+edx*4-0x34],edx
  426cd8:	(bad)  
  426cd9:	retf   
  426cda:	(bad)  
  426cdb:	pop    edx
  426cdc:	inc    ebx
  426cdd:	inc    esp
  426cde:	push   0xffffffbb
  426ce0:	mov    dh,0x94
  426ce2:	into   
  426ce3:	inc    ecx
  426ce4:	imul   ecx,DWORD PTR [edi-0x18788b24],0xe12a49f9
  426cee:	call   0x19c8546d
  426cf3:	and    eax,0x6c21c3f0
  426cf8:	cmp    al,BYTE PTR [esi]
  426cfa:	xchg   edi,eax
  426cfb:	arpl   WORD PTR [eax+0x34],di
  426cfe:	pop    eax
  426cff:	dec    esp
  426d00:	mov    ch,0x8
  426d02:	cmp    edx,DWORD PTR [ebp-0x19cfb98b]
  426d08:	(bad)  
  426d09:	jg     0x426d1d
  426d0b:	pop    esp
  426d0c:	or     BYTE PTR [esi+0x4d],0x5e
  426d10:	jb     0x426cef
  426d12:	adc    al,0xf8
  426d14:	mov    eax,0x16ad7ada
  426d19:	dec    esp
  426d1a:	fs cmc 
  426d1c:	(bad)  
  426d1d:	out    dx,al
  426d1e:	xchg   esp,eax
  426d1f:	push   edx
  426d20:	in     al,0xe4
  426d22:	adc    dh,BYTE PTR [ebp+0x25745c64]
  426d28:	in     eax,dx
  426d29:	push   esp
  426d2a:	cdq    
  426d2b:	in     eax,0x4e
  426d2d:	jl     0x426d51
  426d2f:	mov    ah,dl
  426d31:	dec    edi
  426d32:	cmp    ch,al
  426d34:	xchg   edx,eax
  426d35:	f2xm1  
  426d37:	push   eax
  426d38:	add    al,BYTE PTR [esi]
  426d3a:	fnstsw WORD PTR [esi+0x51]
  426d3d:	inc    eax
  426d3e:	shl    dl,0x46
  426d41:	xchg   edx,eax
  426d42:	xor    DWORD PTR [ecx+0x50],0x63
  426d46:	mov    ebx,0xc316d72a
  426d4b:	sar    BYTE PTR [ebx],1
  426d4d:	xchg   BYTE PTR [edx+0x1e8ab409],dl
  426d53:	and    dl,BYTE PTR [esi+0x57]
  426d56:	push   esi
  426d57:	ja     0x426db6
  426d59:	jg     0x426d24
  426d5b:	shl    DWORD PTR [ecx-0x47],1
  426d5e:	sub    DWORD PTR [edx],0x25
  426d61:	call   esi
  426d63:	xchg   edx,eax
  426d64:	pop    ecx
  426d65:	inc    edx
  426d66:	outs   dx,DWORD PTR ds:[esi]
  426d67:	shl    BYTE PTR [ecx],0xc6
  426d6a:	ins    BYTE PTR es:[edi],dx
  426d6b:	cwde   
  426d6c:	mov    BYTE PTR [ecx+edi*8+0xdfd3633],ch
  426d73:	lahf   
  426d74:	mov    edi,0x9dc4bb15
  426d79:	inc    edx
  426d7a:	and    DWORD PTR gs:[ebp+0x67],0x9b550d07
  426d82:	push   es
  426d83:	xchg   BYTE PTR [edi],dh
  426d85:	push   0xffffff8e
  426d87:	hlt    
  426d88:	sub    ebp,ecx
  426d8a:	arpl   WORD PTR [eax],si
  426d8c:	cli    
  426d8d:	pop    ebp
  426d8e:	pop    es
  426d8f:	sar    DWORD PTR [edx],0xa1
  426d92:	sbb    eax,0x930d5914
  426d97:	cmp    ebx,ebx
  426d99:	movlps QWORD PTR [edi],xmm1
  426d9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d9d:	cmp    al,0x87
  426d9f:	xor    ebx,eax
  426da1:	push   ebx
  426da2:	stos   BYTE PTR es:[edi],al
  426da3:	xchg   DWORD PTR [eax-0x5],ebp
  426da6:	lds    ecx,FWORD PTR ds:0x5cf579c2
  426dac:	jge    0x426dfd
  426dae:	out    0x1c,al
  426db0:	sahf   
  426db1:	push   ebx
  426db2:	fwait
  426db3:	retf   0x57b0
  426db6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426db7:	cmp    al,0x62
  426db9:	pop    edi
  426dba:	(bad)  
  426dbb:	not    cx
  426dbe:	out    0x99,al
  426dc0:	scas   eax,DWORD PTR es:[edi]
  426dc1:	sub    esp,ebp
  426dc3:	jle    0x426dfe
  426dc5:	mov    ebp,0x87bdd835
  426dca:	iret   
  426dcb:	lahf   
  426dcc:	cli    
  426dcd:	scas   al,BYTE PTR es:[edi]
  426dce:	and    eax,0x29a10924
  426dd3:	(bad)  
  426dd4:	out    dx,eax
  426dd5:	loop   0x426da9
  426dd7:	(bad)  
  426dd8:	xchg   esp,eax
  426dd9:	(bad)  
  426dda:	and    ch,BYTE PTR [ebx+0x70e0af22]
  426de0:	add    ch,BYTE PTR [eax+0x16d27189]
  426de6:	iret   
  426de7:	jns    0x426e06
  426de9:	scas   eax,DWORD PTR es:[di]
  426deb:	pusha  
  426dec:	loopne 0x426e2d
  426dee:	das    
  426def:	jle    0x426dec
  426df1:	into   
  426df2:	(bad)  
  426df3:	out    dx,al
  426df4:	dec    ebp
  426df5:	mov    esi,0x42e0b892
  426dfa:	jmp    0x590b:0xcdc16c17
  426e01:	push   ebp
  426e02:	(bad)  
  426e03:	outs   dx,DWORD PTR ds:[esi]
  426e04:	dec    edx
  426e05:	addr16 jnp 0x426e14
  426e08:	fadd   QWORD PTR [ebx]
  426e0a:	mov    ds:0x4547088a,eax
  426e0f:	je     0x426dbf
  426e11:	gs xor edi,DWORD PTR ss:[ebx-0x6a2df992]
  426e19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e1a:	and    eax,0xad5acc73
  426e1f:	adc    DWORD PTR [ecx-0x6731ca5d],ebx
  426e25:	jo     0x426e5f
  426e27:	inc    ebx
  426e28:	ins    DWORD PTR es:[edi],dx
  426e29:	dec    esi
  426e2a:	mov    al,ds:0x631c41a1
  426e2f:	call   0x3796:0x489cfab7
  426e36:	cmp    cl,bh
  426e38:	ins    DWORD PTR es:[edi],dx
  426e39:	jecxz  0x426ea3
  426e3b:	ins    BYTE PTR es:[edi],dx
  426e3c:	cdq    
  426e3d:	mov    bl,0x36
  426e3f:	pop    ss
  426e40:	cli    
  426e41:	or     DWORD PTR [edi+0x27],esi
  426e44:	push   edi
  426e45:	mov    BYTE PTR [edx+edx*8],0xec
  426e49:	addr16 ds sub eax,0xb1c77d5
  426e50:	xchg   ecx,esi
  426e52:	cmp    eax,0x819a9564
  426e57:	shr    BYTE PTR [edx-0x5288944e],1
  426e5d:	mov    bh,0x8d
  426e5f:	mov    ds:0x4516dfa0,al
  426e64:	adc    bl,BYTE PTR [edi]
  426e66:	or     al,0xbf
  426e68:	jae    0x426e14
  426e6a:	jecxz  0x426e35
  426e6c:	jae    0x426e56
  426e6e:	scas   al,BYTE PTR es:[edi]
  426e6f:	(bad)  
  426e70:	mov    bh,0xc9
  426e72:	jg     0x426ece
  426e74:	dec    esp
  426e75:	or     al,al
  426e77:	mov    ecx,0xd4e238fa
  426e7c:	ror    cl,0xe3
  426e7f:	leave  
  426e80:	js     0x426e8a
  426e82:	mov    ecx,0x7863bd1b
  426e87:	gs and eax,0x8919bda1
  426e8d:	sahf   
  426e8e:	push   ebx
  426e8f:	xor    ebp,DWORD PTR [edx+ebx*1+0x28]
  426e93:	retf   
  426e94:	and    cl,BYTE PTR [ebp-0xd]
  426e97:	fdiv   st,st(7)
  426e99:	mov    ah,BYTE PTR [esi-0x2b]
  426e9c:	loopne 0x426e4b
  426e9e:	mov    gs,WORD PTR [esi+0x3a295ea3]
  426ea4:	out    dx,al
  426ea5:	xchg   esp,eax
  426ea6:	cmp    DWORD PTR [ecx+esi*4-0x44],ebp
  426eaa:	(bad)  
  426eab:	icebp  
  426eac:	push   ecx
  426ead:	aas    
  426eae:	mov    esi,0x55e1dc7
  426eb3:	pop    ss
  426eb4:	nop
  426eb5:	mov    cl,0xeb
  426eb7:	mov    esp,0xcc7f0c6e
  426ebc:	js     0x426eb7
  426ebe:	inc    esp
  426ebf:	sbb    esp,DWORD PTR [ecx+0x555d2ccf]
  426ec5:	sbb    eax,0x3ef507f2
  426eca:	scas   al,BYTE PTR es:[edi]
  426ecb:	lock ret 0x52fc
  426ecf:	sahf   
  426ed0:	scas   eax,DWORD PTR es:[edi]
  426ed1:	and    DWORD PTR [ebx+0x39],ebp
  426ed4:	sbb    ecx,DWORD PTR [ecx]
  426ed6:	and    BYTE PTR [ecx+0x67fb1604],dl
  426edc:	ja     0x426ea2
  426ede:	mov    ebx,0x6e645209
  426ee3:	jle    0x426f2c
  426ee5:	sbb    eax,0x1645aad3
  426eea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426eeb:	loope  0x426f34
  426eed:	cld    
  426eee:	cmp    ah,BYTE PTR [ecx]
  426ef0:	dec    BYTE PTR [edi-0x222417b3]
  426ef6:	xor    eax,0x1daabdb4
  426efb:	daa    
  426efc:	in     al,0x7b
  426efe:	dec    esi
  426eff:	mov    esp,0xd33aa311
  426f04:	(bad)  
  426f05:	xchg   edx,eax
  426f06:	ret    
  426f07:	add    BYTE PTR [edx],bh
  426f09:	xchg   ebx,eax
  426f0a:	push   ecx
  426f0b:	fiadd  WORD PTR [edx]
  426f0d:	mov    ds:0x77ff0bc0,eax
  426f12:	gs add al,0xde
  426f15:	jns    0x426ee6
  426f17:	mov    ecx,0xd9a551cb
  426f1c:	adc    cl,BYTE PTR [edx-0x44]
  426f1f:	rcl    DWORD PTR [edi-0x77],1
  426f22:	jl     0x426ea4
  426f24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f25:	ss inc esi
  426f27:	sbb    ecx,DWORD PTR [ebx]
  426f29:	dec    ebx
  426f2a:	lahf   
  426f2b:	adc    eax,0x99609a26
  426f30:	pop    esp
  426f31:	or     al,0x33
  426f33:	(bad)  
  426f34:	xchg   esp,eax
  426f35:	inc    ebx
  426f36:	leave  
  426f37:	pop    ss
  426f38:	add    BYTE PTR [esi],bl
  426f3a:	mov    ebp,0x34d76f8f
  426f3f:	outs   dx,DWORD PTR ds:[esi]
  426f40:	int    0x48
  426f42:	ret    
  426f43:	es mov dh,0x70
  426f46:	pop    edi
  426f47:	mov    BYTE PTR ds:0x3a0990ad,cl
  426f4d:	xor    al,0xa5
  426f4f:	xor    eax,eax
  426f51:	adc    bl,dl
  426f53:	push   esp
  426f54:	add    eax,0xf98b92f3
  426f59:	inc    ebp
  426f5a:	inc    edi
  426f5b:	add    DWORD PTR [edi],eax
  426f5d:	jmp    0x426ee9
  426f5f:	rcl    DWORD PTR [ecx-0xa],1
  426f62:	in     eax,dx
  426f63:	sub    eax,0xdd86e652
  426f68:	xor    BYTE PTR [ebx-0x36e3a645],0xde
  426f6f:	dec    esi
  426f70:	out    0xf3,eax
  426f72:	xchg   ecx,eax
  426f73:	xlat   BYTE PTR ds:[ebx]
  426f74:	add    eax,0x8c7a4e64
  426f79:	xor    eax,0xd0da0593
  426f7e:	cli    
  426f7f:	cwde   
  426f80:	call   0xb9c531b3
  426f85:	mov    fs,WORD PTR [esi]
  426f87:	les    esi,FWORD PTR cs:[ecx]
  426f8a:	dec    ebp
  426f8b:	popa   
  426f8c:	ret    
  426f8d:	sub    ch,cl
  426f8f:	and    ebx,ecx
  426f91:	out    dx,eax
  426f92:	sbb    esp,DWORD PTR [ebx]
  426f94:	retf   
  426f95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f96:	gs or  ah,dl
  426f99:	rol    DWORD PTR [esp+edx*4+0x3e],cl
  426f9d:	add    al,0x97
  426f9f:	jns    0x427020
  426fa1:	or     esi,DWORD PTR [ebx+esi*2+0x48ed7148]
  426fa8:	in     eax,0x74
  426faa:	push   edx
  426fab:	ror    DWORD PTR [ebx+0x7f],1
  426fae:	popf   
  426faf:	fidiv  DWORD PTR [eax]
  426fb1:	bound  esi,QWORD PTR [edi-0x2c126207]
  426fb7:	xor    al,0x48
  426fba:	xchg   ecx,eax
  426fbb:	xchg   edx,eax
  426fbc:	imul   ebp,esp,0xf24339d
  426fc2:	inc    ebx
  426fc3:	test   DWORD PTR [edx+edx*2-0x65964667],esp
  426fca:	pop    eax
  426fcb:	jp     0x427001
  426fcd:	rol    DWORD PTR [esp+eiz*4],0x6c
  426fd1:	sbb    eax,0x2e125179
  426fd6:	imul   DWORD PTR [edx-0x4bb88375]
  426fdc:	jecxz  0x426f69
  426fde:	mov    ah,0x9d
  426fe0:	ss popa 
  426fe2:	fsubr  st,st(2)
  426fe4:	lods   eax,DWORD PTR ds:[esi]
  426fe5:	inc    eax
  426fe6:	dec    eax
  426fe7:	or     eax,0xe19a2a6e
  426fec:	aad    0x35
  426fee:	cwde   
  426fef:	mov    eax,ds:0x1b13d6f
  426ff4:	jo     0x426fcd
  426ff6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426ff7:	mov    WORD PTR [eax+0x30],?
  426ffa:	enter  0x5b06,0x34
  426ffe:	mov    edi,cs
  427000:	inc    eax
  427001:	xchg   esp,eax
  427002:	(bad)  
  427003:	push   0x971abede
  427008:	scas   al,BYTE PTR es:[edi]
  427009:	and    eax,0x65402deb
  42700e:	rcl    DWORD PTR [eax-0x64],1
  427011:	in     eax,0xb2
  427013:	pusha  
  427014:	arpl   WORD PTR [esi+0x5f451fc0],dx
  42701a:	(bad)  
  42701c:	rcr    DWORD PTR [ebx-0x19],cl
  42701f:	inc    edx
  427020:	adc    esi,esi
  427022:	push   eax
  427023:	push   eax
  427024:	mov    al,0xe5
  427026:	in     eax,0x1
  427028:	add    al,bh
  42702a:	add    al,0x0
  42702c:	add    BYTE PTR [ebx-0x7f1f50c0],al
  427032:	ins    DWORD PTR es:[edi],dx
  427033:	pop    es
  427034:	imul   edi,DWORD PTR [eax-0xf076624],0xcab98fa
  42703e:	scas   eax,DWORD PTR es:[edi]
  42703f:	daa    
  427040:	jnp    0x42706a
  427042:	int3   
  427043:	pop    edi
  427044:	scas   eax,DWORD PTR es:[edi]
  427045:	popf   
  427046:	fwait
  427047:	das    
  427048:	fwait
  427049:	mov    bl,BYTE PTR [edx+0x918c758]
  42704f:	std    
  427050:	jp     0x4270bf
  427052:	push   0xd6a219b4
  427057:	sti    
  427058:	mov    ecx,0xc6244034
  42705d:	sub    eax,edx
  42705f:	inc    ecx
  427060:	adc    bh,al
  427062:	in     eax,0x91
  427064:	dec    ebx
  427065:	sub    eax,DWORD PTR [ecx+0xe]
  427068:	xchg   ebp,eax
  427069:	idiv   BYTE PTR [edx+0x6da7eebe]
  42706f:	mov    edi,0x7a8e5b13
  427074:	pop    ebp
  427075:	xlat   BYTE PTR ds:[ebx]
  427076:	cmp    eax,0xc8316199
  42707b:	adc    eax,0x88f92caf
  427080:	pop    esp
  427081:	jnp    0x4270a8
  427083:	add    DWORD PTR [esi],edx
  427085:	sub    DWORD PTR [eax],ebx
  427087:	icebp  
  427088:	mov    ecx,eax
  42708a:	retf   0x1fb8
  42708d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42708e:	dec    ebx
  42708f:	cwde   
  427090:	imul   ebp,DWORD PTR ds:0xee4f30ad,0x69b0280c
  42709a:	cmp    edi,DWORD PTR [edx-0x44]
  42709d:	push   ds
  42709e:	sub    bh,BYTE PTR [edi+0x66e58d81]
  4270a4:	or     al,BYTE PTR ds:0x4953a641
  4270aa:	and    bl,dh
  4270ac:	shl    bh,1
  4270ae:	add    edi,edi
  4270b0:	fadd   DWORD PTR ds:0xb0a6b267
  4270b6:	scas   al,BYTE PTR es:[edi]
  4270b7:	xchg   ebp,eax
  4270b8:	js     0x42708c
  4270ba:	sbb    al,al
  4270bc:	rcl    BYTE PTR [edi-0x4c40ec5e],cl
  4270c2:	ss (bad) 
  4270c4:	in     al,0x8c
  4270c6:	inc    ebx
  4270c7:	push   esi
  4270c8:	test   al,0x1c
  4270ca:	xchg   ebx,eax
  4270cb:	lock pop ss
  4270cd:	int3   
  4270ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4270cf:	cdq    
  4270d0:	pop    ds
  4270d1:	lds    ebx,FWORD PTR [esp+ecx*4-0x54]
  4270d5:	push   eax
  4270d6:	fnsave [edi]
  4270d8:	jmp    0x4270e6
  4270da:	pop    esp
  4270db:	std    
  4270dc:	cmp    DWORD PTR ds:0xe5ee896,ecx
  4270e2:	xor    BYTE PTR [ecx],dh
  4270e4:	adc    BYTE PTR [eax-0x4d],dh
  4270e7:	pusha  
  4270e8:	test   al,0x22
  4270ea:	and    bh,ah
  4270ec:	call   0xe122:0xf286d90e
  4270f3:	or     al,0x43
  4270f5:	inc    eax
  4270f6:	iret   
  4270f7:	mov    ah,BYTE PTR [esi]
  4270f9:	retf   0xe63e
  4270fc:	add    DWORD PTR [ebx+0x7d56793a],0xffffffae
  427103:	mov    cs,WORD PTR [ecx]
  427105:	sahf   
  427106:	js     0x4270de
  427108:	test   al,0xfa
  42710a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42710b:	or     eax,0xad0fcbfa
  427110:	jmp    FWORD PTR [edx+0x1527eb12]
  427116:	mov    eax,DWORD PTR [edx+0x50]
  427119:	stc    
  42711a:	(bad)  
  42711b:	ret    0x9fd5
  42711e:	aad    0xef
  427120:	xchg   edi,eax
  427121:	mov    bl,0xf
  427123:	in     eax,0x41
  427125:	loopne 0x4270d5
  427127:	mov    dh,bh
  427129:	sti    
  42712a:	or     DWORD PTR [ebx+ecx*1],ebp
  42712d:	add    DWORD PTR [esi+esi*2+0x58],ecx
  427131:	rol    DWORD PTR [edx-0x77c2705b],1
  427137:	int3   
  427138:	js     0x427136
  42713a:	pushf  
  42713b:	mov    ebx,0xa81e5bc3
  427140:	adc    BYTE PTR [esi],al
  427142:	adc    ecx,DWORD PTR [esi+0x3f]
  427145:	std    
  427146:	lea    eax,[ecx]
  427148:	xchg   esi,eax
  427149:	and    edi,DWORD PTR [ebp-0x53]
  42714c:	scas   al,BYTE PTR es:[edi]
  42714d:	xchg   esp,eax
  42714e:	adc    al,0x8d
  427150:	push   edx
  427151:	xor    BYTE PTR [eax+ebx*2-0x69],dh
  427155:	(bad)  
  427156:	rcr    esp,0xd6
  427159:	sbb    al,0xd3
  42715b:	adc    BYTE PTR ds:0xda8e6cf,bh
  427161:	(bad)  
  427162:	and    ecx,edi
  427164:	aaa    
  427165:	jbe    0x4270f9
  427167:	(bad)  
  427168:	xor    BYTE PTR ds:0x14ef001b,cl
  42716e:	add    cl,BYTE PTR [ecx+0x3f]
  427171:	xchg   DWORD PTR [ebp+0x7],edx
  427174:	sbb    DWORD PTR [ebp+ebp*4+0x15],0x32
  427179:	mov    fs,WORD PTR [ecx]
  42717b:	into   
  42717c:	jg     0x427178
  42717e:	aam    0x52
  427180:	dec    edi
  427181:	adc    esi,DWORD PTR [ecx+0x51]
  427184:	add    BYTE PTR [esi-0x2f],ah
  427187:	das    
  427188:	inc    ebx
  427189:	clc    
  42718a:	jl     0x4271f2
  42718c:	mov    ebp,ecx
  42718e:	push   cs
  42718f:	or     al,bh
  427191:	lods   al,BYTE PTR ds:[esi]
  427192:	ja     0x427143
  427194:	ret    0xeafd
  427197:	mov    ch,0x88
  427199:	inc    esp
  42719a:	and    ebp,ebx
  42719c:	enter  0x16a,0xcc
  4271a0:	xor    al,0x3e
  4271a2:	mov    esp,ebx
  4271a4:	leave  
  4271a5:	xor    BYTE PTR [edx-0x4586bd42],bh
  4271ab:	lahf   
  4271ac:	mov    eax,esp
  4271ae:	pop    eax
  4271af:	imul   ebx,DWORD PTR [ecx+ebx*8],0x41
  4271b3:	loop   0x42717c
  4271b5:	adc    ebx,ebx
  4271b7:	cld    
  4271b8:	stc    
  4271b9:	mov    bh,0x6c
  4271bb:	std    
  4271bc:	pop    ss
  4271bd:	and    ch,BYTE PTR [eax+0x346ccbb9]
  4271c3:	adc    DWORD PTR [ebx],ebp
  4271c5:	(bad)  
  4271c6:	int3   
  4271c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4271c8:	mov    cl,0x1f
  4271ca:	dec    ecx
  4271cb:	ret    
  4271cc:	fcomp  DWORD PTR fs:[ebp-0x42]
  4271d0:	push   edx
  4271d1:	or     bl,BYTE PTR [esi+0x5704ca11]
  4271d7:	enter  0x668,0xe8
  4271db:	or     bl,dl
  4271dd:	out    dx,eax
  4271de:	add    bh,dh
  4271e0:	cli    
  4271e1:	lock cmp BYTE PTR [ecx+0x386a2002],bh
  4271e8:	scas   eax,DWORD PTR es:[edi]
  4271e9:	std    
  4271ea:	call   0xce5a9b4e
  4271ef:	xchg   esi,eax
  4271f0:	arpl   WORD PTR [ebx+0x3],ax
  4271f3:	in     eax,dx
  4271f4:	cmp    al,0xe8
  4271f6:	dec    esp
  4271f7:	mov    edx,esp
  4271f9:	imul   edx,DWORD PTR [eax],0x12
  4271fc:	cmp    ebx,DWORD PTR [ebp-0x7de25e75]
  427202:	retf   
  427203:	cmp    al,0x65
  427205:	daa    
  427206:	stos   DWORD PTR es:[edi],eax
  427207:	lahf   
  427208:	sub    ebx,DWORD PTR [ecx]
  42720a:	jmp    0xad93:0xccf7ed4b
  427211:	popa   
  427212:	sbb    DWORD PTR [edx+0x60699a80],0xfc984500
  42721c:	jo     0x427297
  42721e:	ror    BYTE PTR [esp+ecx*8+0x7c561acb],cl
  427225:	shl    DWORD PTR [edx+ecx*8-0x24f361b1],1
  42722c:	adc    bh,BYTE PTR [eax]
  42722e:	jb     0x427267
  427230:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427231:	mov    ebx,0x35360453
  427236:	retf   
  427237:	xor    bh,dl
  427239:	stc    
  42723a:	loop   0x4272b7
  42723c:	rol    BYTE PTR [edi+0x7499a7b4],1
  427242:	loopne 0x427237
  427244:	(bad)  [edx]
  427246:	add    ah,cl
  427248:	int    0x4e
  42724a:	sahf   
  42724b:	cmp    al,0xfc
  42724d:	mov    edi,0x267fce8d
  427252:	xchg   esp,eax
  427253:	outs   dx,BYTE PTR ds:[esi]
  427254:	nop
  427255:	jp     0x427242
  427257:	adc    al,BYTE PTR [eax+0x2b]
  42725a:	inc    edx
  42725b:	jbe    0x427239
  42725d:	icebp  
  42725e:	mov    al,ds:0x99b8e225
  427263:	xchg   DWORD PTR [edi],eax
  427265:	lock dec edi
  427267:	xor    esi,ecx
  427269:	dec    ebx
  42726a:	nop
  42726b:	jge    0x42722d
  42726d:	(bad)  
  42726e:	mov    al,ds:0x76a16e12
  427273:	mov    ebp,fs
  427275:	sub    DWORD PTR [edi+eiz*1],ebp
  427278:	ds ja  0x4272b2
  42727b:	sub    ecx,DWORD PTR [ebp+0x2]
  42727e:	lods   eax,DWORD PTR ds:[esi]
  42727f:	adc    bl,BYTE PTR [ebx+edx*1]
  427282:	inc    ebp
  427283:	scas   eax,DWORD PTR es:[edi]
  427284:	xchg   ebp,eax
  427285:	or     esi,0xaf5a3961
  42728b:	mov    dh,0x30
  42728d:	iret   
  42728e:	sub    edx,DWORD PTR [eax+ecx*4]
  427291:	stos   BYTE PTR es:[edi],al
  427292:	mov    edi,0xeecf5ecd
  427297:	stos   BYTE PTR es:[edi],al
  427298:	or     DWORD PTR [edx],esi
  42729a:	jge    0x42722a
  42729c:	push   ds
  42729d:	adc    eax,0xbcc09cb4
  4272a2:	daa    
  4272a3:	mov    dh,0xa
  4272a5:	inc    eax
  4272a6:	retf   
  4272a7:	or     BYTE PTR [ebp-0x25],cl
  4272aa:	sub    cl,BYTE PTR [edx]
  4272ac:	sahf   
  4272ad:	mov    ds:0x8c7f278d,al
  4272b2:	aam    0x6f
  4272b4:	hlt    
  4272b5:	pusha  
  4272b6:	sbb    DWORD PTR [ebx-0x5fa8d46c],ebp
  4272bc:	dec    esi
  4272bd:	cdq    
  4272be:	push   esp
  4272bf:	jbe    0x42727e
  4272c1:	adc    ch,BYTE PTR [ebp-0x30]
  4272c4:	and    al,0xa4
  4272c6:	cs dec ebp
  4272c8:	rcr    BYTE PTR [ebx],0x80
  4272cb:	leave  
  4272cc:	fld    DWORD PTR [edx]
  4272ce:	pop    es
  4272cf:	hlt    
  4272d0:	sub    BYTE PTR gs:[esi-0x6e38a0f1],0xf2
  4272d8:	shr    eax,1
  4272da:	mov    esi,es
  4272dc:	in     al,0x8
  4272de:	sahf   
  4272df:	das    
  4272e0:	fbstp  TBYTE PTR [eax]
  4272e2:	lods   al,BYTE PTR ds:[esi]
  4272e3:	js     0x42731f
  4272e5:	inc    DWORD PTR [ebp-0xd]
  4272e8:	je     0x427314
  4272ea:	lds    edi,FWORD PTR [ebx]
  4272ec:	(bad)  
  4272ed:	neg    BYTE PTR [edi+0x22]
  4272f0:	or     al,0x63
  4272f2:	xor    BYTE PTR [ecx+0x77],ch
  4272f5:	pop    ebx
  4272f6:	dec    ecx
  4272f7:	push   ds
  4272f8:	jns    0x4272ba
  4272fa:	dec    ebx
  4272fb:	sub    DWORD PTR [edx+0x7135bb87],0xffffff95
  427302:	(bad)  
  427303:	fist   DWORD PTR [ebx-0x3683fc7b]
  427309:	sbb    DWORD PTR [edx],eax
  42730b:	and    DWORD PTR gs:[esp+edi*4+0x2d],ebp
  427310:	lahf   
  427311:	cmc    
  427312:	sbb    dl,dl
  427314:	(bad)  
  427315:	(bad)  
  427316:	sbb    BYTE PTR [eax+0x42],dl
  427319:	mov    al,0xbf
  42731b:	(bad)  
  42731c:	clts   
  42731e:	pop    ds
  42731f:	xlat   BYTE PTR ds:[ebx]
  427320:	dec    ebx
  427321:	mov    eax,0x2da5347f
  427326:	mov    al,ds:0xc5aad058
  42732b:	sbb    eax,0x246f2794
  427330:	pop    esp
  427331:	loope  0x427383
  427333:	push   ss
  427334:	inc    ecx
  427335:	aas    
  427336:	mov    eax,ds:0xb97872ca
  42733b:	out    dx,eax
  42733c:	fs xchg ecx,eax
  42733e:	fneni(8087 only) 
  427340:	in     eax,0xb9
  427342:	dec    edi
  427343:	inc    eax
  427344:	jno    0x4273a0
  427346:	(bad)  
  427348:	(bad)  
  427349:	out    dx,al
  42734a:	push   esi
  42734b:	xor    BYTE PTR [ecx],dl
  42734d:	cli    
  42734e:	ret    
  42734f:	imul   eax,ebx,0xa99217c9
  427355:	push   edi
  427356:	enter  0x8e34,0x32
  42735a:	lea    esp,[eax+0x7345309e]
  427360:	gs repz push ss
  427363:	out    dx,al
  427364:	mov    dl,0x1
  427366:	call   0x76177d64
  42736b:	scas   al,BYTE PTR es:[edi]
  42736c:	mov    edx,0x4f8f2ad4
  427371:	sar    ecx,0x0
  427374:	pop    eax
  427375:	jnp    0x427381
  427377:	mov    bl,0x84
  427379:	xchg   ebp,eax
  42737a:	outs   dx,BYTE PTR ds:[esi]
  42737b:	push   ebp
  42737c:	lock push ss
  42737e:	mov    eax,0xc2951527
  427383:	lock cmp eax,0x3779800a
  427389:	std    
  42738a:	sub    al,BYTE PTR [ecx]
  42738c:	lea    eax,[esi-0x45]
  42738f:	cmp    esi,DWORD PTR [ebp-0x59]
  427392:	outs   dx,BYTE PTR ds:[esi]
  427393:	add    DWORD PTR [ebp-0x5cf8ab7c],edi
  427399:	aam    0x28
  42739b:	jmp    0xfa410669
  4273a0:	mov    dh,0xc
  4273a2:	mov    eax,ds:0x97c92d60
  4273a7:	mov    al,0x47
  4273a9:	repnz sbb eax,0xae6220cb
  4273af:	and    al,0x64
  4273b1:	dec    esi
  4273b2:	cmp    esi,esp
  4273b4:	call   0x9cbc4ca5
  4273b9:	dec    esi
  4273ba:	jge    0x42740b
  4273bc:	pop    esi
  4273bd:	and    al,0xbe
  4273bf:	mov    ebx,0xa0d75dd4
  4273c4:	sbb    eax,0x1fe85b6b
  4273c9:	cmp    esp,DWORD PTR [eax-0x1e]
  4273cc:	mov    ah,0xf
  4273ce:	inc    ebp
  4273cf:	pop    ss
  4273d0:	xor    al,0xe9
  4273d2:	jnp    0x42736f
  4273d4:	out    0x88,al
  4273d6:	xchg   esi,eax
  4273d7:	sbb    DWORD PTR [eax+eiz*8],edi
  4273da:	and    DWORD PTR [ecx],0xffffffff
  4273dd:	shl    BYTE PTR [ebx+ecx*4-0x3e],0xc3
  4273e2:	jo     0x4273c6
  4273e4:	gs inc ebx
  4273e6:	retw   0xd82e
  4273ea:	cmp    al,0xb8
  4273ec:	mov    ecx,0x7fde9913
  4273f1:	jae    0x4273c0
  4273f3:	inc    edx
  4273f4:	mov    DWORD PTR ss:[ebx+0x48d3f402],ecx
  4273fb:	jl     0x427416
  4273fd:	mov    edx,0x43aeaf7a
  427402:	hlt    
  427403:	clc    
  427404:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427405:	pop    ecx
  427406:	fidivr WORD PTR [edi]
  427408:	mov    ebp,0x4f163d66
  42740d:	xor    al,0xde
  42740f:	psubb  mm2,QWORD PTR [ebp+0x13f11472]
  427416:	test   eax,0x185d2243
  42741b:	cmp    edx,edi
  42741d:	sbb    BYTE PTR [ebx],al
  42741f:	out    0xd2,al
  427421:	mov    ebp,0xa96b0e7
  427426:	sub    DWORD PTR [edi],edi
  427428:	dec    esi
  427429:	xchg   DWORD PTR [edx+0x78037979],edx
  42742f:	xchg   esi,eax
  427430:	jl     0x427467
  427432:	xchg   edx,eax
  427433:	xchg   ebx,eax
  427434:	sub    bl,BYTE PTR [esi-0x4f2c5996]
  42743a:	(bad)  [ebx+0x62752d31]
  427440:	ss mov ebx,0xfc82f219
  427446:	ja     0x4274a6
  427448:	fsub   st(7),st
  42744a:	push   0x1
  42744c:	pop    edx
  42744d:	jo     0x4274ad
  42744f:	jg     0x427429
  427451:	pop    ebp
  427452:	jge    0x4273fe
  427454:	iret   
  427455:	test   BYTE PTR [ecx-0x65b4d8be],bl
  42745b:	enter  0x4124,0xaa
  42745f:	mov    ds:0xf9d6c2a8,al
  427464:	lock mov eax,0x60d82f87
  42746a:	in     al,dx
  42746b:	scas   al,BYTE PTR es:[edi]
  42746c:	daa    
  42746d:	stos   DWORD PTR es:[edi],eax
  42746e:	mov    ah,0x4b
  427470:	hlt    
  427471:	js     0x4274cf
  427473:	es push eax
  427475:	inc    ebx
  427476:	dec    edx
  427477:	ss inc eax
  427479:	jno    0x42748b
  42747b:	push   ebp
  42747c:	call   FWORD PTR [ecx+0x6bd6bf9a]
  427482:	es aas 
  427484:	sub    al,cl
  427486:	push   eax
  427487:	cld    
  427488:	jmp    0xbc09:0x983854fc
  42748f:	aas    
  427490:	push   edx
  427491:	pop    ebp
  427492:	and    DWORD PTR [ebx],ebp
  427494:	aam    0x2f
  427496:	test   BYTE PTR [eax-0xa9e66f0],al
  42749c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42749d:	adc    BYTE PTR [ecx],ch
  42749f:	int3   
  4274a0:	in     al,dx
  4274a1:	repz cs jl 0x427441
  4274a5:	daa    
  4274a6:	mov    WORD PTR [edx+0x18995bbf],ds
  4274ac:	pop    ecx
  4274ad:	imul   esi,DWORD PTR [ecx+0x34],0x43253ae1
  4274b4:	icebp  
  4274b5:	ficom  DWORD PTR [edx+0x4f]
  4274b8:	and    al,BYTE PTR [ecx+edx*8]
  4274bb:	adc    eax,0xf8dbc25b
  4274c0:	movd   DWORD PTR [eax],mm7
  4274c3:	push   edx
  4274c4:	mov    al,ds:0x563edc56
  4274c9:	clc    
  4274ca:	mov    ch,0x1c
  4274cc:	inc    edi
  4274cd:	sbb    DWORD PTR [ecx],esp
  4274cf:	cmc    
  4274d0:	adc    eax,esp
  4274d2:	xor    cl,cl
  4274d4:	mov    dh,BYTE PTR [ebx+edi*2+0x57dafeba]
  4274db:	add    al,BYTE PTR ds:0x7c40d5e
  4274e1:	iret   
  4274e2:	gs lea esi,fs:[edi]
  4274e6:	jmp    0xd7f6e1c9
  4274eb:	mov    ebx,0x207a9177
  4274f0:	inc    eax
  4274f1:	(bad)  
  4274f2:	mov    dl,0x61
  4274f4:	dec    edi
  4274f5:	mov    ebp,0x2c2bf51a
  4274fa:	and    esi,DWORD PTR [edx-0x91f6b81]
  427500:	mov    ch,dl
  427502:	xchg   edx,eax
  427503:	mov    bl,BYTE PTR gs:[eax-0x43d0b76b]
  42750a:	iret   
  42750b:	jle    0x42757a
  42750d:	add    al,0xd2
  42750f:	js     0x427541
  427511:	adc    DWORD PTR [esi+ebx*1],eax
  427514:	xchg   edi,eax
  427515:	jmp    0xdbe7bc5e
  42751a:	jne    0x4274ab
  42751c:	repnz pop esi
  42751e:	pop    ecx
  42751f:	dec    edx
  427520:	mov    edi,0x967f44cc
  427525:	sub    eax,DWORD PTR [edi-0xc021e8b]
  42752b:	mov    edi,0xa2081dcf
  427530:	js     0x4275ac
  427532:	rcr    BYTE PTR [ebp+0x1eaddcf],cl
  427538:	add    al,bh
  42753a:	add    al,0x0
  42753c:	add    BYTE PTR [eax],ah
  42753e:	scas   al,BYTE PTR es:[edi]
  42753f:	pop    edx
  427540:	and    eax,0x691870b5
  427545:	mov    esp,0x21158022
  42754a:	and    BYTE PTR [edx+0x43],0x9e
  42754e:	xchg   ecx,eax
  42754f:	xor    eax,0x66faeca7
  427554:	ja     0x4275ad
  427556:	or     DWORD PTR ds:0xe863f017,edx
  42755c:	xchg   ebx,eax
  42755d:	lock (bad) 
  42755f:	mov    al,0xf9
  427561:	ret    
  427562:	jl     0x4275d3
  427564:	into   
  427565:	daa    
  427566:	retf   
  427567:	cmp    ecx,DWORD PTR [eax+0x634aee93]
  42756d:	ins    BYTE PTR es:[edi],dx
  42756e:	pop    edx
  42756f:	out    dx,eax
  427570:	outs   dx,BYTE PTR ds:[esi]
  427571:	mov    dh,BYTE PTR [ecx+edx*8-0x2917a134]
  427578:	fwait
  427579:	popa   
  42757a:	or     al,0x66
  42757c:	nop
  42757d:	mov    dh,ah
  42757f:	pop    esp
  427580:	cwde   
  427581:	aam    0x4c
  427583:	jnp    0x4275e6
  427585:	mov    eax,ds:0xdd5348b7
  42758a:	or     BYTE PTR [esi],bh
  42758c:	xor    dh,BYTE PTR ds:0xd607bf6f
  427592:	inc    ecx
  427593:	retf   
  427594:	adc    ebp,DWORD PTR [esi+0x66]
  427597:	push   cs
  427598:	aad    0x4e
  42759a:	or     DWORD PTR [esp+ebx*8],esi
  42759d:	xor    edx,ebp
  42759f:	sub    DWORD PTR [edi+eiz*4-0x30ba7809],0xbbb2532
  4275aa:	imul   edx,DWORD PTR [ecx-0x73d19918],0xcf8c2ef4
  4275b4:	adc    BYTE PTR [esi-0x24],0x59
  4275b8:	call   0x1adb8414
  4275bd:	dec    ebx
  4275be:	xchg   ebx,eax
  4275bf:	ja     0x4275e1
  4275c1:	(bad)  
  4275c3:	jmp    0x427605
  4275c5:	dec    ebp
  4275c6:	push   es
  4275c7:	repnz mov dh,0xb4
  4275ca:	mov    ah,0xd2
  4275cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275cd:	add    eax,0x6d2aec9a
  4275d2:	in     eax,0xe8
  4275d4:	int3   
  4275d5:	jmp    0x427588
  4275d7:	push   esp
  4275d8:	hlt    
  4275d9:	pop    esi
  4275da:	mov    ds:0x90d17cbe,eax
  4275df:	sub    DWORD PTR [edx],esi
  4275e1:	or     eax,DWORD PTR [edi+ecx*1-0x545a3801]
  4275e8:	mov    ch,0xe8
  4275ea:	jbe    0x427585
  4275ec:	push   0x47
  4275ee:	jne    0x4275fe
  4275f0:	and    ah,dh
  4275f2:	ret    0x7a7c
  4275f5:	daa    
  4275f6:	pop    ebx
  4275f7:	bound  ebp,QWORD PTR [edx]
  4275f9:	(bad)  
  4275fa:	in     al,dx
  4275fb:	inc    edi
  4275fc:	push   0x39
  4275fe:	mov    bh,0x46
  427600:	fwait
  427601:	mov    al,0x4f
  427603:	pop    esi
  427604:	out    dx,eax
  427605:	mov    eax,0x82a5f524
  42760a:	jmp    0x427652
  42760c:	arpl   WORD PTR [ecx],si
  42760e:	hlt    
  42760f:	hlt    
  427610:	cwde   
  427611:	sub    DWORD PTR [eax+ebx*2],ecx
  427614:	out    dx,eax
  427615:	dec    eax
  427616:	adc    al,0x78
  427618:	adc    al,0x9f
  42761a:	cdq    
  42761b:	mov    ds:0x5a91bb1f,al
  427620:	jae    0x4275e6
  427622:	call   0xb34ef06a
  427627:	arpl   bx,bx
  427629:	cmp    BYTE PTR [edi],ah
  42762b:	fadd   QWORD PTR [ecx-0x59]
  42762e:	sbb    eax,0x7851f6d2
  427633:	call   0x2336:0x3be4fc6b
  42763a:	push   ebp
  42763b:	out    0xb5,eax
  42763d:	sub    eax,0x1c20869
  427642:	or     eax,0xc19ac847
  427647:	out    dx,eax
  427648:	test   DWORD PTR [edx],esp
  42764a:	mov    dh,BYTE PTR [ebx]
  42764c:	in     al,0x22
  42764e:	and    ecx,ecx
  427650:	xchg   edi,esi
  427652:	std    
  427653:	push   0xef03c99c
  427658:	lods   eax,DWORD PTR ds:[esi]
  427659:	or     al,0x7b
  42765b:	jp     0x427644
  42765d:	outs   dx,BYTE PTR ds:[esi]
  42765e:	lock dec ecx
  427660:	jno    0x4276ca
  427662:	test   eax,0xe27e4c29
  427667:	sbb    ch,dh
  427669:	pop    esi
  42766a:	mov    bh,0x10
  42766c:	push   es
  42766d:	sbb    bh,BYTE PTR [esi+eax*1+0x40]
  427671:	loope  0x4276df
  427673:	pushf  
  427674:	jp     0x4276ba
  427676:	xor    ebx,DWORD PTR [ecx-0x56edb4ac]
  42767c:	aam    0xe6
  42767e:	dec    edx
  42767f:	mov    cl,dh
  427681:	xor    eax,0xbafcc605
  427686:	imul   DWORD PTR [edi]
  427688:	mov    ebp,0x589de43
  42768d:	retf   0xf60
  427690:	push   ecx
  427691:	sar    DWORD PTR [edi],0xc1
  427694:	cdq    
  427695:	test   BYTE PTR [esi],ah
  427697:	mov    ecx,0xd6b9b00a
  42769c:	imul   bh
  42769e:	jmp    0x427678
  4276a0:	clc    
  4276a1:	dec    eax
  4276a2:	sbb    BYTE PTR [esi],ch
  4276a4:	shl    BYTE PTR [eax+0x58],1
  4276a7:	xchg   esp,eax
  4276a8:	pop    edi
  4276a9:	and    DWORD PTR [ebx+eax*8],0x7330d2d3
  4276b0:	outs   dx,BYTE PTR ds:[esi]
  4276b1:	cli    
  4276b2:	ficomp DWORD PTR ds:0xde4f85cd
  4276b8:	out    0xc9,al
  4276ba:	and    ebx,DWORD PTR [esi]
  4276bc:	pop    ds
  4276bd:	iret   
  4276be:	xor    BYTE PTR [edi-0x4f0546f7],cl
  4276c4:	ds pop ebx
  4276c6:	iret   
  4276c7:	add    DWORD PTR [ecx-0x52955bee],esp
  4276cd:	stos   DWORD PTR es:[edi],eax
  4276ce:	and    eax,DWORD PTR [edi+eiz*4-0x3bf38c57]
  4276d5:	sub    esi,DWORD PTR [esp+edi*1+0x3f70d9d0]
  4276dc:	mov    ?,ebx
  4276de:	sub    cl,dl
  4276e0:	inc    eax
  4276e1:	pop    ebx
  4276e2:	(bad)  
  4276e3:	scas   eax,DWORD PTR es:[edi]
  4276e4:	or     esp,esp
  4276e6:	add    al,0xf7
  4276e8:	sbb    BYTE PTR [ecx],cl
  4276ea:	in     eax,dx
  4276eb:	pop    edx
  4276ec:	pop    es
  4276ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4276ee:	jmp    0x19f28ce0
  4276f3:	xchg   edx,eax
  4276f4:	sub    ecx,DWORD PTR [ebx+edx*8+0x3357c36c]
  4276fb:	mov    ah,0xfb
  4276fd:	nop
  4276fe:	test   al,0x6d
  427700:	shl    edx,cl
  427702:	ins    BYTE PTR es:[edi],dx
  427703:	dec    edi
  427704:	mov    eax,ds:0xe1fd5b93
  427709:	cdq    
  42770a:	mov    ecx,0x184a084b
  42770f:	(bad)  
  427710:	mov    ebx,0x572e73ca
  427715:	lahf   
  427716:	scas   eax,DWORD PTR es:[edi]
  427717:	inc    eax
  427718:	mov    ds:0x104b3fc9,eax
  42771d:	and    eax,0x3403a54c
  427722:	popf   
  427723:	cmp    esi,ebp
  427725:	xchg   edx,eax
  427726:	rol    DWORD PTR [edi-0x4660aa8c],0xb5
  42772d:	jg     0x4276df
  42772f:	jbe    0x4276d0
  427731:	mov    WORD PTR [ecx],es
  427733:	popf   
  427734:	push   ebp
  427735:	in     eax,0x8e
  427737:	push   cs
  427738:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427739:	jne    0x427718
  42773b:	xor    DWORD PTR [ebp-0x6d],edi
  42773e:	ret    0xdcf5
  427741:	jbe    0x4276db
  427743:	adc    DWORD PTR [ecx+0x5ca9b71f],ebp
  427749:	(bad)  
  42774a:	data16 rdtsc 
  42774d:	inc    esi
  42774e:	int    0x51
  427750:	(bad)  
  427751:	ror    ebp,1
  427753:	es xchg ebx,eax
  427755:	pusha  
  427756:	pusha  
  427757:	stos   DWORD PTR es:[edi],eax
  427758:	cmp    al,0x46
  42775a:	jmp    0x42777d
  42775c:	pop    eax
  42775d:	rol    BYTE PTR [esi+0x4f],0x3a
  427761:	mov    ebp,0xa0adbe6c
  427766:	jae    0x427744
  427768:	ret    
  427769:	shl    DWORD PTR [ebx],0xeb
  42776c:	dec    edx
  42776d:	repnz sahf 
  42776f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427770:	test   BYTE PTR [edx],cl
  427772:	fmul   st(3),st
  427774:	pop    es
  427775:	push   cs
  427776:	cli    
  427777:	jp     0x4277c4
  427779:	add    ch,BYTE PTR [edi]
  42777b:	retf   
  42777c:	int3   
  42777d:	dec    esi
  42777e:	hlt    
  42777f:	jge    0x4277fe
  427781:	rcl    DWORD PTR [ebp-0x67ab91da],0xed
  427788:	aad    0xcc
  42778a:	pop    ds
  42778b:	pop    eax
  42778c:	in     al,0xee
  42778e:	and    al,dh
  427790:	(bad)  
  427791:	stc    
  427792:	add    BYTE PTR [ecx-0x4b24902a],bl
  427798:	jge    0x4277f8
  42779a:	cs popa 
  42779c:	in     al,dx
  42779d:	push   esi
  42779e:	sub    BYTE PTR [eax-0x1a88dc52],cl
  4277a4:	outs   dx,DWORD PTR ds:[esi]
  4277a5:	fidiv  WORD PTR [ebx+0x30353aa9]
  4277ab:	(bad)  [ebp-0x50]
  4277ae:	jl     0x427817
  4277b0:	fidiv  WORD PTR [edi+0x5fccd976]
  4277b6:	mov    ecx,0x29e1073d
  4277bb:	mov    bh,0x87
  4277bd:	push   fs
  4277bf:	and    al,0x10
  4277c1:	inc    esp
  4277c2:	ins    DWORD PTR es:[edi],dx
  4277c3:	pop    edx
  4277c4:	mov    eax,ds:0x5c4552ed
  4277c9:	mov    al,ds:0xd56585c4
  4277ce:	xchg   ebp,eax
  4277cf:	push   0xffffffa9
  4277d1:	jns    0x4277bf
  4277d3:	mov    ds:0x3410c072,eax
  4277d8:	retf   0x1f28
  4277db:	and    BYTE PTR [edi-0x3ef234a7],bh
  4277e1:	add    BYTE PTR [ebp+0x17876d3c],cl
  4277e7:	and    BYTE PTR [ebx+0x2a],0x75
  4277eb:	dec    esp
  4277ec:	cmc    
  4277ed:	push   esp
  4277ee:	cmp    bh,BYTE PTR [edx-0x5]
  4277f1:	dec    esi
  4277f2:	je     0x42786d
  4277f4:	push   es
  4277f5:	sub    BYTE PTR [eax+0x22],ch
  4277f8:	les    ecx,FWORD PTR [edx+0x6e65e439]
  4277fe:	push   ss
  4277ff:	cs mov bl,0xc0
  427802:	xchg   edi,eax
  427803:	je     0x42778e
  427805:	xor    DWORD PTR [edi+0x22],edi
  427808:	sub    dh,BYTE PTR [eax-0x748e1248]
  42780e:	out    0x8a,al
  427810:	clc    
  427811:	aas    
  427812:	push   ebp
  427813:	xchg   ebx,eax
  427814:	daa    
  427815:	adc    al,0x48
  427817:	ret    0x508e
  42781a:	popa   
  42781b:	push   eax
  42781c:	inc    esi
  42781d:	scas   eax,DWORD PTR es:[edi]
  42781e:	sbb    edx,ecx
  427820:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427821:	xor    DWORD PTR [edi+0x15],edx
  427824:	repnz mov bl,0x85
  427827:	out    0x86,al
  427829:	mov    ds:0xe7c6b4a6,eax
  42782e:	mov    ebp,0x7c58f81f
  427833:	(bad)  
  427834:	out    0x1a,eax
  427836:	add    DWORD PTR [edx],ecx
  427838:	idiv   BYTE PTR [ebx]
  42783a:	repnz mov ebp,0x95847c2b
  427840:	test   al,0xe1
  427842:	ret    0x34b0
  427845:	jp     0x427894
  427847:	cdq    
  427848:	xor    ch,cl
  42784a:	add    DWORD PTR [esi],ebp
  42784c:	mov    esi,0x1780efeb
  427851:	enter  0xbd16,0x6
  427855:	ds popa 
  427857:	mov    ah,ah
  427859:	xlat   BYTE PTR ds:[ebx]
  42785a:	and    edx,edx
  42785c:	pop    ds
  42785d:	push   es
  42785e:	in     eax,0xd6
  427860:	test   BYTE PTR [eax-0x1ec50300],0x84
  427867:	out    dx,eax
  427868:	jae    0x42788b
  42786a:	(bad)  
  42786b:	enter  0x730f,0x97
  42786f:	mov    al,ds:0x9e5b054a
  427874:	cmp    al,0xe
  427876:	inc    ebp
  427877:	daa    
  427878:	sub    ch,BYTE PTR [esi-0x4972cbbf]
  42787e:	scas   eax,DWORD PTR es:[edi]
  42787f:	imul   ebp,DWORD PTR ds:[edx],0x80c15b26
  427886:	lds    edi,FWORD PTR [ebp+0x7cf49918]
  42788c:	out    0xfd,eax
  42788e:	mov    dh,0x8d
  427890:	push   esi
  427891:	test   DWORD PTR [edi],ecx
  427893:	int3   
  427894:	and    bl,BYTE PTR [esi]
  427896:	pop    ebx
  427897:	adc    al,0x6b
  427899:	xor    BYTE PTR [esi-0x16],bh
  42789c:	sub    DWORD PTR [esp+0x56],ebx
  4278a0:	pop    es
  4278a1:	div    BYTE PTR [esi]
  4278a3:	pop    es
  4278a4:	mov    ebp,0x753dbdd5
  4278a9:	mov    cl,0x3e
  4278ab:	and    DWORD PTR [ecx+0x3bb14a6c],0xffffffd6
  4278b2:	repnz cwde 
  4278b4:	iret   
  4278b5:	mov    eax,ds:0x4613707d
  4278ba:	add    DWORD PTR [edi-0x673eb10b],esi
  4278c0:	mov    dl,0x3f
  4278c2:	inc    esp
  4278c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4278c4:	mov    ah,0x1d
  4278c6:	mov    edx,0x7b98c227
  4278cb:	test   bh,dh
  4278cd:	or     DWORD PTR [edi-0x24],esi
  4278d0:	pusha  
  4278d1:	xchg   ebx,eax
  4278d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4278d3:	cmc    
  4278d4:	sub    al,0xaa
  4278d6:	jmp    0x5cdbfb09
  4278db:	inc    eax
  4278dc:	mov    dl,0xa
  4278de:	inc    ecx
  4278df:	pop    esp
  4278e0:	rcl    ebx,1
  4278e2:	dec    edx
  4278e3:	test   eax,0x94fb6a20
  4278e8:	push   edi
  4278e9:	sub    edi,esi
  4278eb:	aaa    
  4278ec:	gs std 
  4278ee:	jg     0x42795d
  4278f0:	mov    ebp,0xc01bcf2b
  4278f5:	call   0x4c010181
  4278fa:	jae    0x427906
  4278fc:	jae    0x427973
  4278fe:	push   ecx
  4278ff:	xchg   edx,eax
  427900:	stos   BYTE PTR es:[edi],al
  427901:	cmp    dh,dh
  427903:	inc    edx
  427904:	sbb    al,0x3b
  427906:	push   edx
  427907:	inc    ebp
  427908:	lods   al,BYTE PTR ds:[esi]
  427909:	fdivrp st(0),st
  42790b:	mov    eax,0x906def65
  427910:	mov    edx,0x168f8039
  427915:	cmp    al,0xa3
  427917:	jmp    0x427951
  427919:	xor    DWORD PTR [ebx],esp
  42791b:	iret   
  42791c:	cli    
  42791d:	pop    esi
  42791e:	push   es
  42791f:	jb     0x4278ad
  427921:	stc    
  427922:	popf   
  427923:	adc    eax,eax
  427925:	fs retf 0x5584
  427929:	add    eax,0x1d7bb506
  42792e:	mov    ebx,0xc262f8af
  427933:	out    0x68,eax
  427935:	jmp    0x57e1:0x6e054a90
  42793c:	in     eax,0xbb
  42793e:	cmp    al,0xfb
  427940:	xor    ch,BYTE PTR ds:0x2994e55f
  427946:	shl    BYTE PTR [edx],cl
  427948:	in     al,dx
  427949:	dec    edi
  42794a:	sbb    eax,0x98a3c807
  42794f:	aam    0xd2
  427951:	mov    ds:0xb215f2ad,al
  427956:	jno    0x42790c
  427958:	sbb    ebp,DWORD PTR [edi+0x75]
  42795b:	xchg   esp,eax
  42795c:	mov    esp,0x8313bb
  427961:	rol    DWORD PTR [edx],0x75
  427964:	popa   
  427965:	cmp    dh,ch
  427967:	ins    BYTE PTR es:[edi],dx
  427968:	or     BYTE PTR [edx],ch
  42796a:	cld    
  42796b:	inc    ebx
  42796c:	inc    eax
  42796d:	push   eax
  42796e:	lea    edi,[edx]
  427970:	ds dec esi
  427972:	mov    bh,0xd5
  427974:	dec    eax
  427975:	imul   eax,DWORD PTR [esi],0x3ded3e8a
  42797b:	dec    ecx
  42797c:	repnz fincstp 
  42797f:	push   eax
  427980:	cli    
  427981:	(bad)  
  427982:	dec    edi
  427983:	addr16 mov ebp,0x3bc19ade
  427989:	push   0xffffff80
  42798b:	dec    esi
  42798c:	hlt    
  42798d:	pop    es
  42798e:	mov    ecx,DWORD PTR [ebx]
  427990:	xchg   edi,eax
  427991:	daa    
  427992:	sub    ax,0x85dd
  427996:	xchg   edi,eax
  427997:	adc    eax,0xab3f682f
  42799c:	or     al,0xb9
  42799e:	and    BYTE PTR ds:[ebx*8+0x24bbecb8],0x30
  4279a7:	pop    esi
  4279a8:	mov    edi,0xff55ad53
  4279ad:	dec    edx
  4279ae:	jnp    0x42795c
  4279b0:	idiv   BYTE PTR [ecx]
  4279b2:	mov    esp,0x9baf8a17
  4279b7:	fisttp WORD PTR ds:0x4fc640a
  4279bd:	cmp    BYTE PTR [edx+0x9],dh
  4279c0:	in     al,0x65
  4279c2:	jg     0x4279fb
  4279c4:	ins    DWORD PTR es:[edi],dx
  4279c5:	rcr    BYTE PTR [edi],0xb7
  4279c8:	push   0x11a59505
  4279cd:	adc    al,0x32
  4279cf:	imul   ebx,ebx,0x17175101
  4279d5:	xchg   esi,eax
  4279d6:	mov    dl,0x56
  4279d8:	or     DWORD PTR [esi-0x370d65c5],esi
  4279de:	push   esp
  4279df:	add    BYTE PTR ds:[ebx],bl
  4279e2:	add    BYTE PTR [eax+ecx*8],bl
  4279e5:	dec    DWORD PTR [eax]
  4279e7:	sub    eax,0x55ef73aa
  4279ec:	out    0x48,al
  4279ee:	jnp    0x427a58
  4279f0:	and    eax,edx
  4279f2:	out    dx,eax
  4279f3:	test   ebx,ecx
  4279f5:	mov    edi,ecx
  4279f7:	xor    DWORD PTR [esp+ebx*2+0x1b875b05],ebx
  4279fe:	jbe    0x427a7c
  427a00:	sbb    bh,BYTE PTR [ebx]
  427a02:	pop    eax
  427a03:	and    dl,ch
  427a05:	mov    ebp,0xf90cd0ff
  427a0a:	add    BYTE PTR [edx],dh
  427a0c:	or     ch,bl
  427a0e:	xor    al,0x92
  427a10:	jne    0x4279f8
  427a12:	mov    eax,DWORD PTR [esi-0x2dbea813]
  427a18:	cmp    BYTE PTR [edx],bl
  427a1a:	or     BYTE PTR [edx-0x1e],ch
  427a1d:	sub    al,0xbd
  427a1f:	and    al,0x55
  427a21:	shl    BYTE PTR [edx],cl
  427a23:	push   ebp
  427a24:	or     esp,DWORD PTR [ecx]
  427a26:	cmc    
  427a27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a28:	test   DWORD PTR [ecx-0x59bd15f3],0xc0a931c2
  427a32:	xor    al,0x8e
  427a34:	stos   BYTE PTR es:[edi],al
  427a35:	or     al,ah
  427a37:	mov    eax,ds:0x5ef7eff7
  427a3c:	std    
  427a3d:	push   cs
  427a3e:	mov    edx,0x27797fbd
  427a43:	scas   eax,DWORD PTR es:[edi]
  427a44:	or     ebp,edx
  427a46:	out    dx,eax
  427a47:	add    DWORD PTR [eax],eax
  427a49:	clc    
  427a4a:	add    al,0x0
  427a4c:	add    BYTE PTR [edi-0x1e],ah
  427a4f:	xor    DWORD PTR [ebx+0x58],esp
  427a52:	lock out dx,eax
  427a54:	add    BYTE PTR [ebp-0x31],0x7b
  427a58:	inc    ecx
  427a59:	test   BYTE PTR [edx+eax*2-0x27],ah
  427a5d:	hlt    
  427a5e:	dec    ebx
  427a5f:	push   cs
  427a60:	lock or dl,cl
  427a63:	jle    0x427a3a
  427a65:	movnti DWORD PTR [edi],esi
  427a68:	leave  
  427a69:	pop    es
  427a6a:	jo     0x427a6e
  427a6c:	scas   eax,DWORD PTR es:[edi]
  427a6d:	sbb    ecx,edi
  427a6f:	add    al,0x23
  427a71:	jmp    0x427a62
  427a73:	push   0xcc87c55f
  427a78:	xchg   edi,eax
  427a79:	pop    edx
  427a7a:	rcl    BYTE PTR [eax],0x2b
  427a7d:	out    dx,eax
  427a7e:	xor    edx,DWORD PTR [eax-0x12]
  427a81:	clc    
  427a82:	mov    edx,0xd0ac4495
  427a87:	stc    
  427a88:	cli    
  427a89:	mov    edx,0x8a98490a
  427a8e:	js     0x427ae1
  427a90:	mov    bh,0xfb
  427a92:	mov    WORD PTR ds:0xd77773b,ss
  427a98:	call   0xa878:0x3e9e16a7
  427a9f:	icebp  
  427aa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427aa1:	dec    eax
  427aa2:	test   al,0xe0
  427aa4:	out    dx,al
  427aa5:	retf   0x3f5f
  427aa8:	outs   dx,BYTE PTR ds:[esi]
  427aa9:	dec    edx
  427aaa:	xor    bl,BYTE PTR [edx+0x42e401cb]
  427ab0:	icebp  
  427ab1:	into   
  427ab2:	ror    DWORD PTR [esp+esi*1+0x2a83ed15],cl
  427ab9:	add    esi,ebx
  427abb:	jae    0x427ad1
  427abd:	es xchg ah,al
  427ac0:	dec    esi
  427ac1:	es inc ebx
  427ac3:	fwait
  427ac4:	jecxz  0x427a53
  427ac6:	bound  ecx,QWORD PTR [ebp-0x70]
  427ac9:	and    ecx,DWORD PTR ds:0x2234d301
  427acf:	pop    esp
  427ad0:	mov    BYTE PTR [esp+eiz*8],0x98
  427ad4:	and    ah,bh
  427ad6:	push   ecx
  427ad7:	pushf  
  427ad8:	push   ebp
  427ad9:	aas    
  427ada:	jnp    0x427b0c
  427adc:	mov    eax,fs:0x65c2d999
  427ae2:	add    DWORD PTR [ebx+0x75081660],esi
  427ae8:	jns    0x427b49
  427aea:	test   DWORD PTR [esi+0x3faec469],ecx
  427af0:	cmp    eax,0x49c851c
  427af5:	push   0x6a
  427af7:	push   ecx
  427af8:	(bad)  
  427af9:	arpl   di,bp
  427afb:	repz imul esp,DWORD PTR [esi],0x64
  427aff:	out    dx,eax
  427b00:	mov    cl,BYTE PTR [ecx-0x5e]
  427b03:	scas   al,BYTE PTR es:[edi]
  427b04:	lods   al,BYTE PTR ds:[esi]
  427b05:	int3   
  427b06:	out    dx,al
  427b07:	shl    DWORD PTR ds:0xdf2e405f,cl
  427b0d:	fmul   DWORD PTR [edx]
  427b0f:	lock xchg ecx,eax
  427b11:	push   ss
  427b12:	cmp    cl,cl
  427b14:	call   0x8884:0x98a7cb03
  427b1b:	adc    BYTE PTR [ebp+0x3a3c3369],ah
  427b21:	jecxz  0x427b40
  427b23:	rcl    BYTE PTR [edi-0x56c4b4f9],0xea
  427b2a:	ficom  DWORD PTR [ecx+0x33b3b04b]
  427b30:	mov    dh,0x6f
  427b32:	jo     0x427bb0
  427b34:	imul   ebp,DWORD PTR [eax-0x488435e7],0x52d833ea
  427b3e:	or     eax,0x84f098f9
  427b43:	cmp    BYTE PTR [ebx+0x7d06dec7],ch
  427b49:	xor    dh,BYTE PTR ds:0x9a2934c1
  427b4f:	into   
  427b50:	mul    BYTE PTR [eax]
  427b52:	jmp    0x553b52f6
  427b57:	adc    DWORD PTR [esi],0xbde908ba
  427b5d:	xchg   ecx,eax
  427b5e:	xor    bh,BYTE PTR [esp+0x69]
  427b62:	mov    ah,0x55
  427b64:	add    dh,cl
  427b66:	sahf   
  427b67:	test   BYTE PTR [edx-0x1ea915d8],0xe5
  427b6e:	push   esp
  427b6f:	ss pop ds
  427b71:	mov    bh,BYTE PTR ds:0x93f34128
  427b77:	pusha  
  427b78:	push   eax
  427b79:	imul   ecx,DWORD PTR [edi-0x42],0x354a96a7
  427b80:	and    edx,DWORD PTR ds:[ebx]
  427b83:	push   0x50
  427b85:	fcom   QWORD PTR [esi-0xa]
  427b88:	ds jne 0x427b61
  427b8b:	fiadd  DWORD PTR [eax-0x31]
  427b8e:	pop    edi
  427b8f:	push   edi
  427b90:	push   edx
  427b91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427b92:	xchg   edi,eax
  427b93:	pop    es
  427b94:	outs   dx,DWORD PTR ds:[esi]
  427b95:	sbb    BYTE PTR [eax+edx*1],al
  427b98:	out    0xac,eax
  427b9a:	push   ss
  427b9b:	xchg   edx,eax
  427b9c:	cmp    BYTE PTR ds:0x19783634,cl
  427ba2:	icebp  
  427ba3:	out    0xd2,eax
  427ba5:	popa   
  427ba6:	dec    esi
  427ba7:	or     DWORD PTR [esi],eax
  427ba9:	xchg   edi,eax
  427baa:	inc    esi
  427bab:	fstp   QWORD PTR [esi]
  427bad:	ficomp WORD PTR [ecx]
  427baf:	add    dh,BYTE PTR [esi+0x2a]
  427bb2:	push   eax
  427bb3:	aam    0x50
  427bb5:	adc    DWORD PTR [ecx+0x7c],esi
  427bb8:	outs   dx,BYTE PTR ds:[esi]
  427bb9:	lds    eax,FWORD PTR [edi+0xec28a41]
  427bbf:	add    DWORD PTR [edx],eax
  427bc1:	cmp    DWORD PTR [edx+0x26],0x1c
  427bc5:	dec    esp
  427bc6:	jmp    0x3c77:0xc1c6092f
  427bcd:	pop    eax
  427bce:	xchg   DWORD PTR [edi+0x757be9c6],ecx
  427bd4:	mov    eax,0x96abe5e9
  427bd9:	loopne 0x427bab
  427bdb:	mov    ch,0xcf
  427bdd:	mov    dl,0x2d
  427bdf:	xor    eax,0x9cceebe2
  427be4:	ja     0x427b7b
  427be6:	push   0xfffffff1
  427be8:	imul   eax,DWORD PTR [edi-0x6db2691b],0xdafdf9d8
  427bf2:	(bad)  [eax]
  427bf4:	shl    BYTE PTR [eax-0x6],0x4a
  427bf8:	sub    dl,BYTE PTR [ebx-0x2a]
  427bfb:	mov    cl,0x2
  427bfd:	mov    dl,0x9b
  427bff:	leave  
  427c00:	aaa    
  427c01:	cmp    cl,BYTE PTR [edx-0x5c]
  427c04:	jo     0x427c78
  427c06:	jae    0x427c75
  427c08:	fild   WORD PTR [ebp-0x771fa659]
  427c0e:	(bad)  
  427c0f:	jbe    0x427bb1
  427c11:	lds    esi,FWORD PTR [ebp+0x42]
  427c14:	mov    bh,BYTE PTR [ebx+0x143b86ba]
  427c1a:	imul   ecx,DWORD PTR ds:[ecx-0x1a04e0bb],0x38b3c9be
  427c25:	ins    BYTE PTR es:[edi],dx
  427c26:	cdq    
  427c27:	lods   al,BYTE PTR ds:[esi]
  427c28:	jnp    0x427bd5
  427c2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c2b:	mov    eax,0x8660be27
  427c30:	outs   dx,BYTE PTR ds:[esi]
  427c31:	je     0x427c2d
  427c33:	jnp    0x427bcd
  427c35:	pop    esi
  427c36:	shl    ah,1
  427c38:	bound  edi,QWORD PTR [esi]
  427c3a:	mov    edi,0x105a202f
  427c3f:	and    dl,0x29
  427c42:	inc    ebp
  427c43:	in     al,dx
  427c44:	call   0x67c5f363
  427c49:	mov    ds:0xc88e8878,eax
  427c4e:	or     al,BYTE PTR [eax+eax*8-0x69]
  427c52:	adc    ebp,0xffffffda
  427c55:	scas   al,BYTE PTR es:[edi]
  427c56:	loop   0x427c67
  427c58:	add    eax,0x63ce9db1
  427c5d:	adc    eax,0x5a1e9603
  427c62:	and    ebp,DWORD PTR [ecx]
  427c64:	inc    ecx
  427c65:	xor    cl,dl
  427c67:	dec    esp
  427c68:	cld    
  427c69:	(bad)  [edx]
  427c6b:	push   es
  427c6c:	push   ecx
  427c6d:	mov    eax,ds:0xeb1ea4d2
  427c72:	mov    ah,0xe0
  427c74:	not    esp
  427c76:	xor    esp,DWORD PTR [edi+0x41fee228]
  427c7c:	sub    eax,DWORD PTR [ebx-0x92d0017]
  427c82:	mov    al,ds:0xab36e3b9
  427c87:	jg     0x427c90
  427c89:	sub    BYTE PTR [eax],ch
  427c8b:	xchg   ebx,eax
  427c8c:	imul   ebx,DWORD PTR [ebx-0x2763984d],0x346322e4
  427c96:	add    dh,BYTE PTR [esi-0x35]
  427c99:	push   edx
  427c9a:	push   ecx
  427c9b:	or     bl,dl
  427c9d:	and    DWORD PTR [eax+0x1fe8a136],0xffffffea
  427ca4:	push   eax
  427ca5:	dec    esi
  427ca6:	not    DWORD PTR [edx+ebp*8]
  427ca9:	xchg   BYTE PTR [esi],ch
  427cab:	and    al,0x7a
  427cad:	xor    eax,0xd8f8e85e
  427cb2:	mov    esp,0x6edc6d0a
  427cb7:	bound  ecx,QWORD PTR [ebx-0x2b999b07]
  427cbd:	mov    esp,0xbe062226
  427cc2:	cli    
  427cc3:	jae    0x427ce7
  427cc5:	dec    ebx
  427cc6:	iret   
  427cc7:	jb     0x427c8e
  427cc9:	jno    0x427d02
  427ccb:	gs mov eax,0xc32264bc
  427cd1:	das    
  427cd2:	imul   BYTE PTR [ebx]
  427cd4:	ds inc esp
  427cd6:	enter  0xcba5,0xe5
  427cda:	cdq    
  427cdb:	mov    al,0xd3
  427cdd:	pop    esi
  427cde:	jmp    0xcfc1:0xc7e18868
  427ce5:	inc    esp
  427ce6:	adc    al,0x4d
  427ce8:	sbb    ebx,eax
  427cea:	(bad)  
  427ceb:	loop   0x427d67
  427ced:	ins    BYTE PTR es:[edi],dx
  427cee:	fisttp DWORD PTR [edx]
  427cf0:	aas    
  427cf1:	inc    esp
  427cf2:	aas    
  427cf3:	in     al,dx
  427cf4:	clc    
  427cf5:	adc    DWORD PTR [ecx-0x55],eax
  427cf8:	stos   DWORD PTR es:[edi],eax
  427cf9:	cld    
  427cfa:	or     edi,DWORD PTR [eax-0x6c7f0673]
  427d00:	pop    ebp
  427d01:	nop
  427d02:	xchg   esi,eax
  427d03:	pop    es
  427d04:	sbb    BYTE PTR [ebp-0x37342193],ah
  427d0a:	mov    edx,0x6a2a0328
  427d0f:	or     DWORD PTR [ecx+0x4ddaec44],ebx
  427d15:	in     al,0x12
  427d17:	pop    eax
  427d18:	jne    0x427d29
  427d1a:	mov    edx,0x87bc5480
  427d1f:	std    
  427d20:	add    al,0x7f
  427d22:	dec    edi
  427d23:	ret    0x4e2e
  427d26:	rsm    
  427d28:	jbe    0x427d57
  427d2a:	sub    al,0x11
  427d2c:	xor    dh,dl
  427d2e:	rol    ebx,0x38
  427d31:	out    dx,al
  427d32:	mov    BYTE PTR [eax-0xef6bc64],bh
  427d38:	push   ss
  427d39:	dec    esp
  427d3a:	in     eax,dx
  427d3b:	vpsrad ymm1,ymm4,XMMWORD PTR [eax+0x18e37dea]
  427d43:	push   ebx
  427d44:	add    BYTE PTR ds:0xc3d0772c,0x8
  427d4b:	push   eax
  427d4c:	push   ds
  427d4d:	push   0x82bba628
  427d52:	sbb    al,0x75
  427d54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d55:	cli    
  427d56:	pop    ss
  427d57:	push   edi
  427d58:	iret   
  427d59:	mov    esp,DWORD PTR [ebx]
  427d5b:	loopne 0x427d51
  427d5d:	adc    eax,0x83e38d97
  427d62:	push   ds
  427d63:	shl    DWORD PTR [ecx+0x4f],cl
  427d66:	cmp    DWORD PTR [ebp+0x69],eax
  427d69:	jle    0x427d1b
  427d6b:	mov    gs,WORD PTR [edx+0x25fba513]
  427d71:	inc    eax
  427d72:	mov    ebp,0xbb9d7d6d
  427d77:	jmp    DWORD PTR [esi]
  427d79:	test   eax,0x5d5b780c
  427d7e:	push   esi
  427d7f:	xchg   esp,eax
  427d80:	rol    BYTE PTR [edi],cl
  427d82:	outs   dx,BYTE PTR ds:[esi]
  427d83:	(bad)  
  427d85:	ins    BYTE PTR es:[edi],dx
  427d86:	scas   al,BYTE PTR es:[edi]
  427d87:	retf   0x656c
  427d8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d8b:	inc    edx
  427d8c:	pop    ebx
  427d8d:	pop    ds
  427d8e:	shr    BYTE PTR [esi],cl
  427d90:	add    BYTE PTR [esp+eiz*2],bh
  427d93:	pop    ebp
  427d94:	pop    edx
  427d95:	cmp    bh,ah
  427d97:	outs   dx,BYTE PTR ds:[si]
  427d99:	cmc    
  427d9a:	pop    edi
  427d9b:	addr16 (bad) 
  427d9d:	jne    0x427e19
  427d9f:	sub    al,0xd6
  427da1:	dec    ebx
  427da2:	push   0xffffffc2
  427da4:	mov    dl,0xae
  427da6:	outs   dx,DWORD PTR ss:[esi]
  427da8:	jge    0x427e16
  427daa:	ins    DWORD PTR es:[edi],dx
  427dab:	adc    eax,DWORD PTR [ecx+edi*8]
  427dae:	jmp    0x171b:0x8b509751
  427db5:	pop    es
  427db6:	jo     0x427d59
  427db8:	aam    0x29
  427dba:	aam    0x27
  427dbc:	dec    esi
  427dbd:	ds inc ecx
  427dbf:	rcl    al,cl
  427dc1:	es out 0x60,eax
  427dc4:	mov    bl,0x51
  427dc6:	fcmovu st,st(1)
  427dc8:	sbb    al,0xf1
  427dca:	push   eax
  427dcb:	and    al,0xfc
  427dcd:	inc    ebx
  427dce:	sub    edi,DWORD PTR [edi]
  427dd0:	push   ecx
  427dd1:	fidivr WORD PTR [ebx+0x3c50f5ff]
  427dd7:	and    al,BYTE PTR [eax-0x32]
  427dda:	pop    edi
  427ddb:	shl    cl,1
  427ddd:	imul   dl
  427ddf:	jae    0x427d87
  427de1:	jle    0x427e35
  427de3:	sub    eax,0xd256d57b
  427de8:	ret    0x52bf
  427deb:	lahf   
  427dec:	outs   dx,DWORD PTR ds:[esi]
  427ded:	aam    0xd0
  427def:	mov    al,0x7a
  427df1:	mov    ah,0xaa
  427df3:	mov    dl,0xa5
  427df5:	cmp    DWORD PTR [ebx+0x11],esi
  427df8:	push   ss
  427df9:	and    al,0x4e
  427dfb:	hlt    
  427dfc:	out    dx,eax
  427dfd:	pop    ebp
  427dfe:	dec    eax
  427dff:	clc    
  427e00:	(bad)  
  427e01:	cmp    al,0x1d
  427e03:	cld    
  427e04:	loope  0x427db3
  427e06:	mov    ah,0xc
  427e08:	ss ins BYTE PTR es:[edi],dx
  427e0a:	jecxz  0x427e1f
  427e0c:	inc    esi
  427e0d:	repz mov cl,0x3d
  427e10:	test   eax,0x6ceeb168
  427e15:	aam    0x3
  427e17:	xor    ah,BYTE PTR [edx]
  427e19:	iret   
  427e1a:	cmp    dh,BYTE PTR [eax]
  427e1c:	jge    0x427e8b
  427e1e:	mov    dl,0xc2
  427e20:	dec    edi
  427e21:	stos   DWORD PTR es:[edi],eax
  427e22:	cmp    DWORD PTR [edi],ecx
  427e24:	imul   eax,ebp,0xffffffe8
  427e27:	lahf   
  427e28:	push   0x8b99561f
  427e2d:	adc    eax,0xb33db20a
  427e32:	sub    esi,DWORD PTR [ecx]
  427e34:	imul   edx,DWORD PTR [ebx-0x20],0x5b8fe348
  427e3b:	push   cs
  427e3c:	imul   ebp,DWORD PTR [edx],0xffffffaf
  427e3f:	or     BYTE PTR [ebx-0x18ff9f05],0xa
  427e46:	xor    BYTE PTR [ecx+0x5079c633],0xe3
  427e4d:	ins    DWORD PTR es:[edi],dx
  427e4e:	xchg   edi,eax
  427e4f:	mov    ah,0x5
  427e51:	sbb    al,0x1a
  427e53:	sbb    DWORD PTR [esi+0x1d980152],esp
  427e59:	int    0x58
  427e5b:	pop    esi
  427e5c:	sub    BYTE PTR [ebx+edx*4+0x6b],ch
  427e60:	pop    edx
  427e61:	sbb    al,0x72
  427e63:	inc    eax
  427e64:	mov    ebx,0xa48b30db
  427e69:	test   DWORD PTR [edi],edi
  427e6b:	sbb    BYTE PTR [esi],0xb
  427e6e:	bound  edi,QWORD PTR [edi]
  427e70:	xor    ch,BYTE PTR [edi+0x5a088bc0]
  427e76:	cld    
  427e77:	test   al,0x8c
  427e79:	or     BYTE PTR [esi],ch
  427e7b:	and    al,dh
  427e7d:	out    0x76,al
  427e7f:	adc    eax,0x79cb3e6d
  427e84:	sub    al,0x7a
  427e86:	cli    
  427e87:	cli    
  427e88:	scas   al,BYTE PTR es:[edi]
  427e89:	jl     0x427eef
  427e8b:	hlt    
  427e8c:	add    al,bh
  427e8e:	add    edx,DWORD PTR [edx-0x15]
  427e91:	sbb    BYTE PTR [ecx-0x57c565a4],dl
  427e97:	bound  esi,QWORD PTR [eax-0xabaa6dd]
  427e9d:	clc    
  427e9e:	xchg   edi,eax
  427e9f:	sub    ebx,DWORD PTR [ebx+0x4dc5aca0]
  427ea5:	and    BYTE PTR [ecx+0x54],0x9e
  427ea9:	or     DWORD PTR [esi+0x51],ecx
  427eac:	inc    esi
  427ead:	mov    ebp,0xe632619a
  427eb2:	push   ds
  427eb3:	repz sbb eax,0x10d6643c
  427eb9:	cmp    eax,edx
  427ebb:	scas   eax,DWORD PTR es:[edi]
  427ebc:	and    al,BYTE PTR [esi+0x2cb45fd]
  427ec2:	jge    0x427eaa
  427ec4:	test   al,0x4a
  427ec6:	dec    esp
  427ec7:	pusha  
  427ec8:	push   ecx
  427ec9:	sub    al,0x1
  427ecb:	sti    
  427ecc:	xchg   edi,eax
  427ecd:	test   BYTE PTR [edi+0x15],bl
  427ed0:	rol    BYTE PTR [esi-0x1],cl
  427ed3:	xor    ch,ah
  427ed5:	pop    ss
  427ed6:	jo     0x427e91
  427ed8:	pop    ss
  427ed9:	mov    bh,cl
  427edb:	das    
  427edc:	or     BYTE PTR [esi],bh
  427ede:	fadd   QWORD PTR [ebx+0x2d]
  427ee1:	mov    al,0x6d
  427ee3:	push   cs
  427ee4:	dec    edx
  427ee5:	outs   dx,BYTE PTR ds:[esi]
  427ee6:	ror    DWORD PTR [esi-0x4a2a9925],cl
  427eec:	popa   
  427eed:	sub    bl,dl
  427eef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ef0:	mov    ds:0xa578f154,eax
  427ef5:	sbb    ecx,DWORD PTR [edi]
  427ef7:	retf   
  427ef8:	out    dx,al
  427ef9:	pop    es
  427efa:	add    BYTE PTR [edx+0x4537ad77],bh
  427f00:	fnstcw WORD PTR [edi-0x4]
  427f03:	pop    es
  427f04:	inc    esp
  427f05:	pushf  
  427f06:	sbb    BYTE PTR [ebx-0x77036e12],0xbd
  427f0d:	mov    esi,0xa2e5362
  427f12:	jne    0x427f4f
  427f14:	repz fcmovb st,st(4)
  427f17:	ja     0x427f4a
  427f19:	fcom   st(3)
  427f1b:	mov    eax,ds:0x1c363024
  427f20:	lock cmp dl,bl
  427f23:	test   BYTE PTR [ebx+0x1],cl
  427f26:	xor    al,0xcc
  427f28:	adc    esp,DWORD PTR [ecx]
  427f2a:	fidiv  WORD PTR [esi-0x53]
  427f2d:	je     0x427ebe
  427f2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427f30:	mov    al,ds:0xced27232
  427f35:	loop   0x427f74
  427f37:	ins    DWORD PTR es:[edi],dx
  427f38:	outs   dx,BYTE PTR ds:[esi]
  427f39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427f3a:	sahf   
  427f3b:	(bad)  
  427f3c:	lahf   
  427f3d:	enterw 0x12b4,0xe4
  427f42:	call   0xf6ba64d9
  427f47:	push   ecx
  427f48:	dec    edi
  427f49:	shr    edi,1
  427f4b:	jg     0x427f4b
  427f4d:	std    
  427f4e:	cli    
  427f4f:	imul   ebx,DWORD PTR [ecx],0xffffff8a
  427f52:	pop    ebp
  427f53:	imul   edx,edi,0xffffffcd
  427f56:	hlt    
  427f57:	add    DWORD PTR [eax],eax
  427f59:	clc    
  427f5a:	add    al,0x0
  427f5c:	add    BYTE PTR [ebx-0x29b39bc1],bl
  427f62:	je     0x427fd3
  427f64:	push   ss
  427f65:	inc    edi
  427f66:	or     BYTE PTR [eax+0x39642b57],cl
  427f6c:	cmp    al,0x86
  427f6e:	mov    bh,0x51
  427f70:	and    ebx,DWORD PTR [edi]
  427f72:	ss pop eax
  427f74:	sub    bl,BYTE PTR [eax]
  427f76:	lods   eax,DWORD PTR ds:[esi]
  427f77:	inc    esp
  427f78:	mov    dl,0xd4
  427f7a:	mov    BYTE PTR [esi+0x5d],bh
  427f7d:	push   0x64
  427f7f:	fstp   QWORD PTR [esi]
  427f81:	jge    0x427f63
  427f83:	sub    eax,0xfbca9c21
  427f88:	cmp    al,0xf7
  427f8a:	imul   edi,DWORD PTR [edx-0x12ec3574],0x21
  427f91:	xor    BYTE PTR [eax],dl
  427f93:	add    ah,BYTE PTR [edx]
  427f95:	scas   eax,DWORD PTR es:[edi]
  427f96:	push   ds
  427f97:	xchg   DWORD PTR [esp+edx*2+0x2c],edi
  427f9b:	sub    dl,ah
  427f9d:	ficom  DWORD PTR [edx]
  427f9f:	inc    ebp
  427fa0:	sub    eax,DWORD PTR [ebp-0x7a365634]
  427fa6:	dec    esp
  427fa7:	xchg   ebp,esp
  427fa9:	lock repz in eax,0x14
  427fad:	pop    eax
  427fae:	scas   al,BYTE PTR es:[edi]
  427faf:	popf   
  427fb0:	xor    dl,bh
  427fb2:	inc    esi
  427fb3:	lds    esi,FWORD PTR [edx-0x358fbbbb]
  427fb9:	call   0xdb95:0x49a01b1f
  427fc0:	xchg   esp,eax
  427fc1:	dec    esp
  427fc2:	fdiv   DWORD PTR [edx-0x32a3b8ba]
  427fc8:	xchg   esi,eax
  427fc9:	add    ebp,ebx
  427fcb:	mov    ch,0x35
  427fcd:	dec    esp
  427fce:	cmp    esp,edi
  427fd0:	(bad)  
  427fd2:	(bad)  
  427fd3:	mov    ch,0x2b
  427fd5:	loopne 0x427f94
  427fd7:	push   edi
  427fd8:	mov    al,0x1d
  427fda:	mov    al,0xca
  427fdc:	mov    ebx,0x27a6846a
  427fe1:	fndisi(8087 only) 
  427fe3:	or     eax,0xa05c3102
  427fe8:	repnz xchg edx,eax
  427fea:	arpl   WORD PTR [ebx+0x4fa985eb],di
  427ff0:	out    0x60,al
  427ff2:	cmp    ecx,esi
  427ff4:	and    BYTE PTR [ebp+0x319d8e6c],bl
  427ffa:	xchg   esi,eax
  427ffb:	stos   DWORD PTR es:[edi],eax
  427ffc:	or     al,0x97
  427ffe:	test   al,0xaf
  428000:	rol    esi,0x2
  428003:	fbstp  TBYTE PTR [edi-0x5458bd96]
  428009:	fistp  WORD PTR [esi-0x6af223c6]
  42800f:	out    dx,eax
  428010:	xchg   BYTE PTR [edx],bl
  428012:	xchg   ebx,eax
  428013:	sub    al,0xf9
  428015:	or     DWORD PTR [ebx+edx*8-0xc],0xb5f57f8b
  42801d:	mov    ah,0x40
  42801f:	ins    BYTE PTR es:[edi],dx
  428020:	push   eax
  428021:	cmc    
  428022:	dec    edi
  428023:	xor    eax,0x634f7e40
  428028:	dec    esi
  428029:	or     ebp,DWORD PTR [ebp-0x3c572c2c]
  42802f:	(bad)  
  428030:	sar    esi,1
  428032:	test   DWORD PTR [ebx+0x5a18f00],esp
  428038:	jg     0x42802a
  42803a:	lods   al,BYTE PTR ds:[esi]
  42803b:	les    edi,FWORD PTR [eax-0x54f71fd8]
  428041:	lods   al,BYTE PTR ds:[esi]
  428042:	mov    bh,0xbd
  428044:	out    dx,eax
  428045:	add    bl,BYTE PTR [eax]
  428047:	cmc    
  428048:	mov    edx,0x50f4e208
  42804d:	sub    dh,BYTE PTR [eax]
  42804f:	dec    ebp
  428050:	jmp    0x6810c4ad
  428055:	push   edx
  428056:	xchg   DWORD PTR [edx],esi
  428058:	(bad)  
  428059:	and    ecx,DWORD PTR [edx+0x664a3248]
  42805f:	push   esp
  428060:	cdq    
  428061:	popa   
  428062:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428063:	push   ss
  428064:	mov    edx,0x5a867846
  428069:	test   ch,bl
  42806b:	cmp    al,0x78
  42806d:	rcl    DWORD PTR [ecx],0x32
  428070:	push   ss
  428071:	sub    dl,BYTE PTR [edi-0x7d0e9d48]
  428077:	aad    0x18
  428079:	mov    eax,0x8189d3a
  42807e:	ret    
  42807f:	adc    BYTE PTR ds:0x8ca83d0a,ch
  428085:	lock pusha 
  428087:	das    
  428088:	jge    0x4280b6
  42808a:	inc    ecx
  42808b:	in     eax,0xc
  42808d:	pcmpgtw mm2,QWORD PTR [esi+ebx*2+0x115e88a9]
  428095:	inc    edx
  428096:	call   0xc8a0:0x792f5a12
  42809d:	stc    
  42809e:	push   edi
  42809f:	xchg   ebx,eax
  4280a0:	mov    bh,0xa8
  4280a2:	loop   0x42805e
  4280a4:	jmp    0x6651c7d8
  4280a9:	mov    es,WORD PTR [esp+eax*4-0x46]
  4280ad:	add    ecx,0x6d5f1bd1
  4280b3:	adc    al,0x50
  4280b5:	cs mov ebx,0x90c768fd
  4280bb:	dec    esp
  4280bc:	jae    0x4280e3
  4280be:	mov    al,ds:0x20f429f0
  4280c3:	and    cl,BYTE PTR [esi-0x64]
  4280c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4280c7:	rol    BYTE PTR [ecx+0x35681558],0xd9
  4280ce:	cmp    BYTE PTR [esi+0x4c],ah
  4280d1:	and    DWORD PTR [ecx+0x547f5d63],eax
  4280d7:	nop
  4280d8:	test   al,0x50
  4280da:	inc    ecx
  4280db:	popf   
  4280dc:	in     al,0xb2
  4280de:	cmp    eax,0xcf7d713b
  4280e3:	and    eax,0xaa5bfa08
  4280e8:	sti    
  4280e9:	shl    DWORD PTR [edx+0x70],cl
  4280ec:	or     BYTE PTR [esi],ch
  4280ee:	nop
  4280ef:	and    al,0xc6
  4280f1:	inc    ebp
  4280f2:	sbb    edi,DWORD PTR [ebx]
  4280f4:	push   ecx
  4280f5:	cmp    ch,bh
  4280f7:	jg     0x428131
  4280f9:	into   
  4280fa:	into   
  4280fb:	out    dx,eax
  4280fc:	pop    ebp
  4280fd:	(bad)  
  4280fe:	icebp  
  4280ff:	mov    esi,eax
  428101:	(bad)
  428105:	es inc edx
  428107:	cmc    
  428108:	inc    esi
  428109:	lock (bad) 
  42810b:	aaa    
  42810c:	pop    es
  42810d:	jbe    0x428137
  42810f:	xor    DWORD PTR [edx-0x54033a0e],0xb817919c
  428119:	repnz outs dx,DWORD PTR ds:[esi]
  42811b:	outs   dx,BYTE PTR ds:[esi]
  42811c:	pop    eax
  42811d:	adc    ebp,DWORD PTR [edx-0x5762d33b]
  428123:	loop   0x428180
  428125:	mov    ah,0xa7
  428127:	jnp    0x42811e
  428129:	test   DWORD PTR [ecx-0x4d],edi
  42812c:	adc    bh,BYTE PTR [ebp+0x43]
  42812f:	pop    edi
  428130:	or     eax,0xf576ef9f
  428135:	cmp    DWORD PTR [esi],edx
  428137:	popf   
  428138:	inc    esi
  428139:	dec    ebx
  42813a:	inc    ecx
  42813b:	inc    esi
  42813c:	adc    ecx,DWORD PTR [ecx+0x30ff366b]
  428142:	mov    ebx,0xd5ff01eb
  428147:	je     0x428199
  428149:	and    esi,DWORD PTR [ecx-0x3]
  42814c:	cmp    eax,0x5ff43c79
  428151:	rcl    BYTE PTR [ecx+0x79523164],cl
  428157:	push   esi
  428158:	pushf  
  428159:	push   ecx
  42815a:	push   ecx
  42815b:	ja     0x4281c2
  42815d:	xchg   ebx,eax
  42815e:	test   ch,cl
  428160:	out    dx,al
  428161:	imul   edi,ebp,0xffffffb3
  428164:	dec    ebx
  428165:	ret    0x87bd
  428168:	fiadd  WORD PTR [edx-0x6ad22ffb]
  42816e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42816f:	mov    ebx,0x4f91fe66
  428174:	mov    edx,0x21dc6d53
  428179:	jns    0x428160
  42817b:	jbe    0x42815a
  42817d:	mov    dh,0x64
  42817f:	je     0x4281e5
  428181:	leave  
  428182:	jle    0x428132
  428184:	jnp    0x42810f
  428186:	ss xchg edi,eax
  428188:	push   ds
  428189:	jno    0x428171
  42818b:	lods   al,BYTE PTR ds:[esi]
  42818c:	xchg   esi,eax
  42818d:	dec    ebp
  42818e:	or     DWORD PTR ds:0xa00b2746,edx
  428194:	lock xor BYTE PTR [edx+eax*1+0x220de191],0xb6
  42819d:	(bad)  
  42819f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4281a0:	imul   ebp,DWORD PTR [ecx],0x5890efc9
  4281a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4281a7:	mov    ds:0xcb7c125c,al
  4281ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4281ad:	xor    ecx,DWORD PTR [esi+0x35]
  4281b0:	sbb    al,0x27
  4281b2:	mov    al,0xac
  4281b4:	dec    edx
  4281b5:	fiadd  WORD PTR [edi]
  4281b7:	mov    ebp,0xcd166e1d
  4281bc:	int    0x59
  4281be:	cli    
  4281bf:	loop   0x428176
  4281c1:	ja     0x428191
  4281c3:	and    al,0xf6
  4281c5:	jmp    FWORD PTR [ecx+0x52]
  4281c8:	imul   eax,DWORD PTR [ebp-0x7a],0x48
  4281cc:	xchg   DWORD PTR [eax-0x22],ecx
  4281cf:	es aad 0xf
  4281d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4281d3:	fdivr  DWORD PTR [esi]
  4281d5:	in     al,dx
  4281d6:	inc    esp
  4281d7:	inc    edx
  4281d8:	repnz cmp BYTE PTR [ecx-0x604e43b1],0x7
  4281e0:	hlt    
  4281e1:	sub    al,0x91
  4281e3:	mov    ds:0x9fe765da,al
  4281e8:	cmp    BYTE PTR [ebx],dl
  4281ea:	(bad)  
  4281eb:	jae    0x428264
  4281ed:	pop    ebx
  4281ee:	mov    al,ds:0x186176d7
  4281f3:	pop    edi
  4281f4:	test   DWORD PTR [edx-0x3e8054ae],ebx
  4281fa:	mov    ebx,0x3b498fc6
  4281ff:	call   0xa3877520
  428204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428205:	neg    BYTE PTR [ebx]
  428207:	push   es
  428208:	xchg   esp,eax
  428209:	outs   dx,BYTE PTR ds:[esi]
  42820a:	mov    BYTE PTR [ebx-0x5a],dh
  42820d:	sub    BYTE PTR [ebx],bh
  42820f:	mul    DWORD PTR [ebx+0x33ae2166]
  428215:	popa   
  428216:	mov    es,WORD PTR [ebp+0x15932ffe]
  42821c:	cmp    BYTE PTR [esi],dl
  42821e:	xlat   BYTE PTR ds:[ebx]
  428220:	(bad)  
  428221:	pushf  
  428222:	into   
  428223:	lods   al,BYTE PTR ds:[esi]
  428224:	sub    dh,ah
  428226:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428227:	push   cs
  428228:	scas   eax,DWORD PTR es:[edi]
  428229:	int3   
  42822a:	mov    DWORD PTR [ecx],ebp
  42822c:	sbb    eax,0xfa7c7d84
  428231:	xchg   BYTE PTR [ebx-0x1],ah
  428234:	enter  0x8670,0x78
  428238:	or     edi,DWORD PTR [ecx+0x4be67bb]
  42823e:	jo     0x4282b5
  428240:	in     eax,0xf6
  428242:	xchg   edx,eax
  428243:	dec    ebx
  428244:	sbb    al,0x5e
  428246:	pop    ebx
  428247:	dec    esi
  428248:	and    al,0x6b
  42824a:	lods   al,BYTE PTR ds:[esi]
  42824b:	loope  0x4281d4
  42824d:	mov    ds:0xa08f9c00,al
  428252:	xor    eax,0x8b29c8ae
  428257:	repnz test eax,0xa45c4b7f
  42825d:	(bad)  
  42825e:	push   esp
  42825f:	jbe    0x42826c
  428261:	mov    dl,0xa5
  428263:	mov    ds:0xa51592b4,eax
  428268:	push   cs
  428269:	bound  eax,QWORD PTR [eax]
  42826b:	mov    al,0x44
  42826d:	jns    0x428263
  42826f:	popa   
  428270:	push   ebx
  428271:	mov    edx,0x91cd9dea
  428276:	or     eax,0xb8212d9f
  42827b:	inc    eax
  42827c:	mov    dh,0x8e
  42827e:	int3   
  42827f:	xor    cl,BYTE PTR [ebp-0x77]
  428282:	stos   BYTE PTR es:[edi],al
  428283:	ror    DWORD PTR [eax-0x1f],1
  428286:	pop    edi
  428287:	xor    BYTE PTR [ecx+0x7f],dh
  42828a:	pop    ss
  42828b:	repnz fdivr QWORD PTR [ecx-0x5f]
  42828f:	adc    al,BYTE PTR [ebx+0x30d18c17]
  428295:	inc    ebp
  428296:	ins    BYTE PTR es:[edi],dx
  428297:	or     al,0x33
  428299:	hlt    
  42829a:	loopne 0x4282fd
  42829c:	jo     0x4282a1
  42829e:	out    0xea,al
  4282a0:	sbb    al,0x1a
  4282a2:	std    
  4282a3:	xchg   esi,eax
  4282a4:	sbb    ecx,eax
  4282a6:	jbe    0x4282a0
  4282a8:	iret   
  4282a9:	loope  0x42830b
  4282ab:	sti    
  4282ac:	push   esi
  4282ad:	aaa    
  4282ae:	aas    
  4282af:	pop    ss
  4282b0:	xchg   BYTE PTR [edi-0x27],bh
  4282b3:	cmp    al,0x98
  4282b5:	pmulhw mm0,QWORD PTR [edi-0xd3f4112]
  4282bc:	mov    esi,0x6e13a613
  4282c1:	cmp    al,0x73
  4282c3:	leave  
  4282c4:	xor    ebp,eax
  4282c6:	and    al,0x70
  4282c8:	in     eax,0x7e
  4282ca:	and    al,0x68
  4282cc:	jno    0x42830a
  4282ce:	scas   eax,DWORD PTR es:[edi]
  4282cf:	outs   dx,DWORD PTR ds:[esi]
  4282d0:	cmp    bl,ah
  4282d2:	fwait
  4282d3:	outs   dx,BYTE PTR ds:[esi]
  4282d4:	inc    eax
  4282d5:	(bad)  
  4282d6:	test   eax,0x77d70b78
  4282db:	pop    ebp
  4282dc:	mov    dl,0x6
  4282de:	shl    DWORD PTR [ecx+ebp*8-0x79],1
  4282e2:	pushf  
  4282e3:	test   al,0x75
  4282e5:	daa    
  4282e6:	xchg   BYTE PTR [eax],dl
  4282e8:	xor    eax,0x9d4280cd
  4282ed:	push   ss
  4282ee:	(bad)  
  4282ef:	mov    edx,0x197d4fcd
  4282f4:	daa    
  4282f5:	jbe    0x42829e
  4282f7:	enter  0xca57,0xc0
  4282fb:	xchg   esp,eax
  4282fc:	cmp    eax,DWORD PTR [ebp+0x6e75647]
  428302:	fcmove st,st(3)
  428304:	jo     0x4282b8
  428306:	and    ch,ch
  428308:	xor    BYTE PTR [ecx+0x71baf4e5],ch
  42830e:	aaa    
  42830f:	and    DWORD PTR [edx+eiz*4],ebp
  428312:	outs   dx,DWORD PTR ds:[esi]
  428313:	loopne 0x42829d
  428315:	and    DWORD PTR [edx+0x67e44b06],ebx
  42831b:	sub    DWORD PTR [ebx+0x271df056],edi
  428321:	mov    cl,BYTE PTR [edi-0x49a6f3cf]
  428327:	mov    bh,0x5f
  428329:	test   eax,0x76f93ef7
  42832e:	push   ds
  42832f:	xor    ebp,DWORD PTR [ebx+0x7cec0936]
  428335:	outs   dx,BYTE PTR ds:[esi]
  428336:	sub    eax,0x4cc79378
  42833b:	iret   
  42833c:	inc    eax
  42833d:	sub    edi,DWORD PTR [ebx+0x7d]
  428340:	imul   ebp,DWORD PTR [ebx],0xfb8d091e
  428346:	add    dl,ah
  428348:	jno    0x428392
  42834a:	jecxz  0x4283a6
  42834c:	ins    BYTE PTR es:[edi],dx
  42834d:	pop    esi
  42834e:	call   0xde6c:0xb9ef91a8
  428355:	jmp    0x4c90ec4a
  42835a:	int3   
  42835b:	retf   
  42835c:	sub    edx,DWORD PTR [edi-0x7da916dc]
  428362:	jecxz  0x428317
  428364:	dec    ebx
  428365:	or     ebx,esp
  428367:	and    bh,BYTE PTR [edi]
  428369:	aaa    
  42836a:	ins    BYTE PTR es:[edi],dx
  42836b:	xor    al,0xf5
  42836d:	pop    ebx
  42836e:	xlat   BYTE PTR ds:[ebx]
  42836f:	jno    0x42833c
  428371:	and    dl,0xed
  428374:	ret    
  428375:	pop    esi
  428376:	lock jmp 0x35b7002b
  42837c:	jae    0x428365
  42837e:	popf   
  42837f:	push   edx
  428380:	jo     0x428371
  428382:	je     0x4283eb
  428384:	(bad)  [edi]
  428386:	xchg   ecx,eax
  428387:	adc    al,0xd7
  428389:	push   ebx
  42838a:	retf   
  42838b:	cwde   
  42838c:	in     al,dx
  42838d:	mov    esp,0xa21ae724
  428392:	jb     0x4283a3
  428394:	lock sub BYTE PTR [eax],bh
  428397:	sbb    al,0x90
  428399:	inc    ebp
  42839a:	dec    ebp
  42839b:	(bad)  
  42839c:	repz fwait
  42839e:	mov    ds:0xb77a83d5,eax
  4283a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4283a4:	mov    DWORD PTR [edx+0x7d66f3d0],ebp
  4283aa:	std    
  4283ab:	dec    esi
  4283ac:	das    
  4283ad:	(bad)  
  4283af:	pop    esp
  4283b0:	push   cs
  4283b1:	push   ebx
  4283b2:	dec    edx
  4283b3:	iret   
  4283b4:	adc    DWORD PTR [eax],esp
  4283b6:	add    al,0x85
  4283b8:	lods   eax,DWORD PTR ds:[esi]
  4283b9:	in     al,0xcd
  4283bb:	cmpxchg BYTE PTR cs:[eax-0x79],cl
  4283c0:	dec    ecx
  4283c1:	test   DWORD PTR [ecx+0x75d0f69b],ecx
  4283c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4283c8:	or     cl,al
  4283ca:	mov    al,ds:0x566313d9
  4283cf:	xchg   ebx,eax
  4283d0:	sub    DWORD PTR [edx+eiz*4],esp
  4283d3:	sbb    ecx,DWORD PTR [edx+0x13]
  4283d6:	pop    edi
  4283d7:	xchg   esp,eax
  4283d8:	add    al,0xca
  4283da:	or     ch,BYTE PTR [ebx+0x6d]
  4283dd:	dec    esi
  4283de:	cmp    BYTE PTR [ebx+0x62],dl
  4283e1:	pop    ecx
  4283e2:	(bad)  
  4283e3:	into   
  4283e4:	push   esi
  4283e5:	mov    eax,eax
  4283e7:	(bad)  
  4283e8:	dec    ecx
  4283e9:	dec    eax
  4283ea:	mov    esi,0xdeba8aa7
  4283ef:	and    cl,ch
  4283f1:	mov    ?,WORD PTR [edx]
  4283f3:	xchg   ecx,eax
  4283f4:	or     BYTE PTR [edi-0x66],bh
  4283f7:	xchg   esp,eax
  4283f8:	outs   dx,DWORD PTR ds:[esi]
  4283f9:	add    cl,BYTE PTR [ebx]
  4283fb:	lods   al,BYTE PTR ds:[esi]
  4283fc:	bound  eax,QWORD PTR [ebx+0x58]
  4283ff:	dec    edx
  428400:	mov    edi,0x8be4602c
  428405:	pop    esi
  428406:	mov    ch,BYTE PTR [eax+edx*8+0x65]
  42840a:	and    esp,DWORD PTR [si+0x8]
  42840e:	test   BYTE PTR [ebp-0x3],bl
  428411:	js     0x428434
  428413:	cld    
  428414:	mov    ebx,0x8dc154c7
  428419:	add    esp,0x5e
  42841c:	sub    eax,0xfc938d8d
  428421:	xor    DWORD PTR [ebp-0x10f46fea],eax
  428427:	dec    BYTE PTR [ebx+0x60]
  42842a:	mov    edi,0xb30f1515
  42842f:	dec    esi
  428430:	mov    eax,0xdb2303bc
  428435:	push   ss
  428436:	das    
  428437:	mov    ebp,0x300486da
  42843c:	daa    
  42843d:	in     eax,0x7d
  42843f:	imul   BYTE PTR [ebx-0x2d]
  428442:	not    BYTE PTR [eax-0x3715be63]
  428448:	push   0xffffffe4
  42844a:	jecxz  0x4284b5
  42844c:	imul   ebp,DWORD PTR [edx],0x75
  42844f:	ror    BYTE PTR ds:0x1e3ed5bf,0xc6
  428456:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  428458:	push   eax
  428459:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42845a:	shl    bh,cl
  42845c:	div    DWORD PTR [eax+edi*8]
  42845f:	nop
  428460:	pop    edi
  428461:	iret   
  428462:	(bad)  
  428463:	nop
  428464:	aas    
  428465:	(bad)  
  428468:	add    dh,dh
  42846a:	add    al,0x0
  42846c:	add    ah,dh
  42846e:	ret    
  42846f:	mov    ds:0xd4644ede,eax
  428474:	sbb    ah,BYTE PTR [bx+di]
  428477:	inc    ebx
  428478:	mov    eax,ds:0x2f967fa3
  42847d:	xchg   edx,eax
  42847e:	mov    edx,0x707a04d2
  428483:	mov    eax,0x3d5502fc
  428488:	ss sbb eax,0x4955b696
  42848e:	pushf  
  42848f:	push   es
  428490:	fmul   st(1),st
  428492:	mov    ecx,0x703ef18a
  428497:	adc    al,dl
  428499:	arpl   WORD PTR [ebp+0x5f],di
  42849c:	adc    al,0xa
  42849e:	pop    ds
  42849f:	push   ds
  4284a0:	or     DWORD PTR [esi],edx
  4284a2:	inc    ebx
  4284a3:	jb     0x42842d
  4284a5:	inc    esi
  4284a6:	mul    DWORD PTR [ebx+edx*1]
  4284a9:	les    esi,FWORD PTR [esp+edi*1+0x7a203c24]
  4284b0:	push   edx
  4284b1:	add    DWORD PTR [eax+0x34],esi
  4284b4:	or     BYTE PTR [eax],bh
  4284b6:	and    esp,DWORD PTR [edi-0x1fb4feaa]
  4284bc:	xor    dh,0x88
  4284bf:	add    ecx,edx
  4284c1:	adc    dh,BYTE PTR [edi]
  4284c3:	mov    bh,0xd5
  4284c5:	add    DWORD PTR [edi-0x687ca753],ebx
  4284cb:	inc    ebp
  4284cc:	das    
  4284cd:	ss dec esi
  4284cf:	push   0x41
  4284d1:	call   0x8465:0xb5247b0f
  4284d8:	mov    dh,0xb7
  4284da:	mov    ah,0xd2
  4284dc:	enter  0x584d,0x23
  4284e0:	aam    0x23
  4284e2:	fnstcw WORD PTR [edx+0x63]
  4284e5:	aam    0x4f
  4284e7:	add    eax,0xdfbc1cf2
  4284ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4284ed:	mov    esp,0xd447f3af
  4284f2:	test   eax,0x2f1cf73f
  4284f7:	lods   al,BYTE PTR ds:[esi]
  4284f8:	mov    ebp,0xfd9a8b15
  4284fd:	add    DWORD PTR [ebx+0x6de200d8],edi
  428503:	cs jmp 0xdff7:0xedf2cbef
  42850b:	(bad)  
  42850c:	jns    0x4284cf
  42850e:	push   ss
  42850f:	jmp    0x4284bb
  428511:	ss mov bl,0xe4
  428514:	ja     0x42856f
  428516:	sub    ecx,DWORD PTR [eax+0x78]
  428519:	test   DWORD PTR [esi],esi
  42851b:	popf   
  42851c:	mov    bh,0x2e
  42851e:	icebp  
  42851f:	dec    ebx
  428520:	sbb    DWORD PTR [ebx+0x12f60951],0xffffffee
  428527:	mov    ebx,0xd4c678ec
  42852c:	into   
  42852d:	sub    DWORD PTR [ebp-0x292a2867],esi
  428533:	adc    ch,BYTE PTR [eax+ebp*1+0x3e84bbd4]
  42853a:	out    0xce,al
  42853c:	cli    
  42853d:	gs sbb ax,0x264c
  428542:	test   DWORD PTR [esi+0x3c2b421c],ecx
  428548:	in     al,0xb5
  42854a:	(bad)  
  42854b:	pop    ecx
  42854c:	idiv   DWORD PTR [esi]
  42854e:	inc    esp
  42854f:	dec    ebx
  428550:	add    eax,DWORD PTR [eax]
  428552:	gs jp  0x428526
  428555:	loopne 0x428537
  428557:	test   eax,0x93e82972
  42855c:	jg     0x4285b7
  42855e:	test   al,0xeb
  428560:	dec    ebp
  428561:	or     edx,esp
  428563:	pop    esi
  428564:	mov    edx,0x8e292f78
  428569:	jbe    0x4285bb
  42856b:	sbb    BYTE PTR [eax+eax*4],dl
  42856e:	and    BYTE PTR ds:0xc929a251,bl
  428574:	cmp    esp,DWORD PTR [ebx-0x6c0f3e86]
  42857a:	xchg   ebp,eax
  42857b:	fscale 
  42857d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42857e:	pop    ecx
  42857f:	add    DWORD PTR [ecx],eax
  428581:	jno    0x428514
  428583:	icebp  
  428584:	xlat   BYTE PTR ds:[ebx]
  428585:	add    al,0x2f
  428587:	cs jle 0x428529
  42858a:	stos   BYTE PTR es:[edi],al
  42858b:	push   ds
  42858c:	mov    dl,0x78
  42858e:	in     eax,0x5f
  428590:	mov    ah,0x15
  428592:	scas   al,BYTE PTR es:[edi]
  428593:	sbb    eax,0x539567e5
  428598:	repnz out 0xaf,al
  42859b:	popf   
  42859c:	add    edx,0xfffffffc
  42859f:	jno    0x42858c
  4285a1:	mov    fs,WORD PTR [edi-0x26]
  4285a4:	retf   0x88b3
  4285a7:	int3   
  4285a8:	jmp    0x9c1fa66d
  4285ad:	pop    edi
  4285ae:	mov    ss,WORD PTR [edi-0x57]
  4285b1:	add    BYTE PTR [esi+0x63],dh
  4285b4:	(bad)  
  4285b5:	mov    al,ds:0xe99bb909
  4285ba:	inc    esi
  4285bb:	retf   
  4285bc:	or     BYTE PTR [ebp+0x44cd5343],bh
  4285c2:	(bad)  
  4285c4:	leave  
  4285c5:	mov    esp,DWORD PTR [edx+eax*2+0x7ec5956e]
  4285cc:	rcl    ebx,1
  4285ce:	inc    ebx
  4285cf:	out    0x20,eax
  4285d1:	out    0x34,eax
  4285d3:	dec    DWORD PTR [ecx-0x2822be1d]
  4285d9:	out    dx,al
  4285da:	sub    BYTE PTR [edi+0x3f],dl
  4285dd:	mov    edx,0x77d5275c
  4285e2:	add    bh,BYTE PTR [edx-0x12]
  4285e5:	bound  ebx,QWORD PTR [esi]
  4285e7:	pop    esi
  4285e8:	cmp    ebp,DWORD PTR [esp+esi*1]
  4285eb:	dec    cx
  4285ed:	push   ss
  4285ee:	cmp    esp,DWORD PTR [edx+ecx*8-0x2e7a16a6]
  4285f5:	sub    BYTE PTR [edx],al
  4285f7:	cld    
  4285f8:	mov    dl,0xb6
  4285fa:	sub    eax,0x9a1a439f
  4285ff:	inc    edi
  428600:	lea    edx,[edi+ecx*4-0x10a061a7]
  428607:	call   0xbc0b:0x3f6e77c1
  42860e:	shr    DWORD PTR [esi+0x4a],0x4f
  428612:	sub    esp,eax
  428614:	pop    esi
  428615:	mov    ah,0x73
  428617:	mov    esi,ebp
  428619:	adc    BYTE PTR [esi+0x56ee02f1],bh
  42861f:	out    0xbf,al
  428621:	pop    esp
  428622:	mov    esp,0x67dc31c8
  428627:	or     BYTE PTR [esi-0x6d74fe80],0x2e
  42862e:	adc    DWORD PTR [ecx],ebp
  428630:	jae    0x42863c
  428632:	retf   
  428633:	inc    esi
  428634:	je     0x428600
  428636:	sub    al,0xba
  428638:	mov    bh,0xb9
  42863a:	fisttp DWORD PTR [eax+0x1cc99878]
  428640:	jns    0x37695045
  428646:	mov    ebp,0xab6ed16f
  42864b:	mov    ebp,0x3859657
  428650:	sbb    DWORD PTR [edi],edi
  428652:	shl    dl,0xa4
  428655:	mov    dl,0xa0
  428657:	xchg   edi,eax
  428658:	(bad)  
  428659:	in     al,dx
  42865a:	pop    ds
  42865b:	mov    WORD PTR [esi+ecx*2],?
  42865e:	pop    ebp
  42865f:	adc    al,0x7a
  428661:	sbb    eax,0x3a9d416b
  428666:	jge    0x428614
  428668:	push   ebx
  428669:	jle    0x4285fa
  42866b:	xchg   ecx,eax
  42866c:	hlt    
  42866d:	sub    ah,ch
  42866f:	fdiv   QWORD PTR [esi-0x64]
  428672:	adc    al,0xd7
  428674:	xor    BYTE PTR [ebp+0x36],bh
  428677:	int3   
  428678:	inc    ebx
  428679:	mov    bl,0xa6
  42867b:	das    
  42867c:	adc    eax,0xaebf2ffd
  428681:	xchg   esp,eax
  428682:	rcl    DWORD PTR [edx*4-0x7b4a5d0f],1
  428689:	lods   al,BYTE PTR ds:[esi]
  42868a:	(bad)  
  42868c:	jp     0x4286bf
  42868e:	add    BYTE PTR [edx-0x6e57daec],0x82
  428695:	jge    0x42865c
  428697:	gs repz cdq 
  42869a:	inc    ebp
  42869b:	pushf  
  42869c:	or     bl,cl
  42869e:	mov    WORD PTR ds:0x80d71501,?
  4286a4:	xor    DWORD PTR [ebx],ecx
  4286a6:	cmp    DWORD PTR [esi+0x1a061023],esp
  4286ac:	call   0x2e27:0x2cc8d599
  4286b3:	out    0x1a,al
  4286b5:	mov    ah,0xe0
  4286b7:	or     edx,ebx
  4286b9:	loope  0x42869a
  4286bb:	sub    bh,BYTE PTR [eax+0x19a80ac0]
  4286c1:	dec    ebx
  4286c2:	mov    edx,0x15e48d4c
  4286c7:	outs   dx,BYTE PTR ds:[esi]
  4286c8:	jmp    0xd63b:0xa99dad8d
  4286cf:	xor    BYTE PTR [esi+0x67d082a6],ah
  4286d5:	mov    dl,0x9e
  4286d7:	dec    ebx
  4286d8:	stos   BYTE PTR es:[edi],al
  4286d9:	stos   BYTE PTR es:[edi],al
  4286da:	xor    al,0xb2
  4286dc:	out    dx,al
  4286dd:	mov    esp,0xa7f38b85
  4286e2:	frstor [ebx]
  4286e4:	in     eax,dx
  4286e5:	test   al,0x77
  4286e7:	jno    0x42873e
  4286e9:	scas   al,BYTE PTR es:[edi]
  4286ea:	jno    0x428686
  4286ec:	popa   
  4286ed:	push   ecx
  4286ee:	in     al,dx
  4286ef:	pusha  
  4286f0:	mov    bh,0xe8
  4286f2:	add    esi,edx
  4286f4:	sahf   
  4286f5:	xchg   edx,eax
  4286f6:	mov    WORD PTR [ecx-0x6d],ds
  4286f9:	adc    BYTE PTR [edx],dh
  4286fb:	es push eax
  4286fd:	mov    ecx,edi
  4286ff:	lea    esp,[eax-0x3b77cf17]
  428705:	add    ebx,DWORD PTR [esi+0x39de8711]
  42870b:	leave  
  42870c:	or     edx,0x3f6d306c
  428712:	add    cl,0x7e
  428715:	ror    BYTE PTR [edx+0x2d],0xed
  428719:	mov    ebx,0x3e1c1029
  42871e:	pop    eax
  42871f:	lock loope 0x428793
  428722:	pop    es
  428723:	into   
  428724:	shr    BYTE PTR [edi-0x580744e],cl
  42872a:	pop    es
  42872b:	or     ebx,DWORD PTR gs:[ebx]
  42872e:	dec    ebx
  42872f:	dec    edx
  428730:	mov    eax,ds:0x2d3d61c9
  428735:	sbb    DWORD PTR [ebp+ecx*8-0x5b021bc8],ebp
  42873c:	repz pop ds
  42873e:	aaa    
  42873f:	add    al,0xf
  428741:	stos   BYTE PTR es:[edi],al
  428742:	mov    bl,0xb1
  428744:	fwait
  428745:	push   esp
  428746:	push   esi
  428747:	outs   dx,BYTE PTR ds:[esi]
  428748:	push   0x2f62d175
  42874d:	add    DWORD PTR [ecx+0x67],ebx
  428750:	lods   eax,DWORD PTR ds:[esi]
  428751:	or     eax,0x4937c6c
  428756:	pop    ss
  428757:	shr    DWORD PTR [esi+0x2ca09a26],1
  42875d:	inc    esp
  42875e:	and    al,0x92
  428760:	adc    edi,DWORD PTR [edi+0x1497dd98]
  428766:	xor    ah,dh
  428768:	sbb    al,0x43
  42876a:	dec    ecx
  42876b:	mov    ecx,0x48fdbfe9
  428770:	pop    edx
  428771:	xor    bl,BYTE PTR [ebp+0x24a6173a]
  428777:	xor    ah,BYTE PTR [esi+0x21e4388f]
  42877d:	rcl    DWORD PTR [ebx],1
  42877f:	or     dh,dh
  428781:	pop    ds
  428782:	les    eax,FWORD PTR [ebx+edx*4-0x7ce42dc8]
  428789:	pop    ds
  42878a:	xor    dl,BYTE PTR [esi]
  42878c:	cmp    eax,0x79fdcd32
  428791:	retf   0x54d0
  428794:	cwde   
  428795:	pop    es
  428796:	scas   al,BYTE PTR es:[edi]
  428797:	pop    ss
  428798:	mov    ebx,0xb1654305
  42879d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42879e:	inc    edi
  42879f:	mov    dl,0x8
  4287a1:	or     al,0x6c
  4287a3:	loop   0x428822
  4287a5:	pop    edx
  4287a6:	xchg   esi,eax
  4287a7:	mov    ebp,0x9e32d9b9
  4287ac:	test   BYTE PTR [edx-0x2c],dh
  4287af:	in     al,0x36
  4287b1:	and    eax,0xf414d4c4
  4287b6:	int3   
  4287b7:	dec    esi
  4287b8:	cmp    al,BYTE PTR [esp+esi*4+0x1a477e58]
  4287bf:	test   DWORD PTR [esi-0x71],edx
  4287c2:	jl     0x4287a9
  4287c4:	pushf  
  4287c5:	mov    cl,0x76
  4287c7:	mov    dl,0x84
  4287c9:	outs   dx,DWORD PTR ds:[esi]
  4287ca:	sub    ebx,DWORD PTR [ebp+0x2168b740]
  4287d0:	jae    0x428813
  4287d2:	xor    BYTE PTR fs:[ebp+0x4b],ah
  4287d6:	sbb    DWORD PTR [ebx],esi
  4287d8:	cmp    al,0x4d
  4287da:	int3   
  4287db:	scas   al,BYTE PTR es:[edi]
  4287dc:	and    eax,0x79fc0546
  4287e1:	out    dx,al
  4287e2:	loop   0x42879c
  4287e4:	shl    DWORD PTR [esi-0x70],cl
  4287e7:	js     0x4287dc
  4287e9:	fld    TBYTE PTR cs:[esi]
  4287ec:	call   0xe1911b4d
  4287f1:	adc    esi,ebp
  4287f3:	xchg   esi,eax
  4287f4:	and    esi,eax
  4287f6:	jno    0x4287d9
  4287f8:	popa   
  4287f9:	jmp    0x161a:0x5d463dfc
  428800:	and    dh,cl
  428802:	test   ebp,0x57587186
  428808:	jns    0x4287fc
  42880a:	and    DWORD PTR [edx],edx
  42880c:	sbb    ecx,ebx
  42880e:	out    dx,eax
  42880f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428810:	xchg   edx,eax
  428811:	arpl   WORD PTR [eax+0x73],sp
  428814:	jmp    0x42885d
  428816:	les    ecx,FWORD PTR [esi+0x54]
  428819:	push   ds
  42881a:	xchg   BYTE PTR [ebx],bl
  42881c:	imul   esi,DWORD PTR [edx-0x6ecd2f35],0x7e
  428823:	xchg   ebp,eax
  428824:	jle    0x428800
  428826:	mov    edi,0xfeafc61d
  42882b:	xchg   ebx,eax
  42882c:	fsub   st(5),st
  42882e:	mov    dl,0x4c
  428830:	jbe    0x428840
  428832:	add    bl,dh
  428834:	or     cl,dh
  428836:	pop    edi
  428837:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428838:	add    bh,ah
  42883a:	sub    DWORD PTR [edx-0x3e],edi
  42883d:	ds pop edi
  42883f:	and    edx,esi
  428841:	shl    bl,1
  428843:	mov    dh,0x73
  428845:	adc    dl,bh
  428847:	pop    ss
  428848:	lods   al,BYTE PTR ds:[esi]
  428849:	inc    eax
  42884a:	mov    esi,0xbc114fcf
  42884f:	into   
  428850:	inc    esp
  428851:	das    
  428852:	mov    ebx,0x4e8b116
  428857:	aaa    
  428858:	arpl   WORD PTR [esp+eiz*8-0x7df5f7ad],ax
  42885f:	out    0xb7,al
  428861:	(bad)  
  428862:	call   0x44b8:0xc245ae7f
  428869:	fdivr  QWORD PTR [eax]
  42886b:	xchg   edx,eax
  42886c:	and    ebx,DWORD PTR [eax]
  42886e:	enter  0xe318,0x41
  428872:	mov    esp,0x511c3de2
  428877:	fnsave [ecx+0x1e]
  42887a:	jg     0x428801
  42887c:	std    
  42887d:	dec    eax
  42887e:	ret    0x3bf6
  428881:	push   0x1f864b5f
  428886:	nop
  428887:	dec    ebp
  428888:	shl    BYTE PTR [esi-0x21],0xe7
  42888c:	ret    
  42888d:	aam    0x6e
  42888f:	pop    esp
  428890:	ins    BYTE PTR es:[edi],dx
  428891:	repz in eax,dx
  428893:	cld    
  428894:	test   ecx,esi
  428896:	or     DWORD PTR [eax],0x8ac3efad
  42889c:	or     DWORD PTR ds:0xe9e1aee7,0xec6887a7
  4288a6:	xor    al,0x2e
  4288a8:	dec    esi
  4288a9:	loopne 0x428859
  4288ab:	inc    eax
  4288ac:	js     0x428900
  4288ae:	cli    
  4288af:	pop    eax
  4288b0:	cmp    dl,BYTE PTR [ebx-0x1aba924]
  4288b6:	push   0x35412de7
  4288bb:	ret    0x954d
  4288be:	mov    al,ds:0x304af74c
  4288c3:	imul   ebx,DWORD PTR [ecx-0x77edeccc],0x6a32d273
  4288cd:	jle    0x42893e
  4288cf:	jl     0x42892a
  4288d1:	imul   edx,esp,0xffffffd8
  4288d4:	shl    dl,cl
  4288d6:	jp     0x4288b2
  4288d8:	cmp    BYTE PTR [esi-0x20d96bb1],0x43
  4288df:	out    0xdd,eax
  4288e1:	xchg   esp,eax
  4288e2:	cmp    eax,0x11c98e36
  4288e7:	das    
  4288e8:	les    ebx,FWORD PTR [eax+0x15]
  4288eb:	dec    esp
  4288ec:	push   0x2f52c268
  4288f1:	jbe    0x428947
  4288f3:	(bad)  
  4288f4:	sbb    eax,0xd06eaef4
  4288f9:	clc    
  4288fa:	ins    BYTE PTR es:[edi],dx
  4288fb:	push   es
  4288fc:	in     eax,0x68
  4288fe:	rcr    BYTE PTR [esi+eiz*2],cl
  428901:	call   0x8d94:0xb8f6f881
  428908:	movups xmm2,xmm7
  42890b:	stos   DWORD PTR es:[edi],eax
  42890c:	std    
  42890d:	add    edi,ecx
  42890f:	inc    esi
  428910:	jnp    0x42895d
  428912:	xchg   ecx,eax
  428913:	lahf   
  428914:	push   es
  428915:	test   BYTE PTR ds:0x26d74cdf,dh
  42891b:	inc    esp
  42891c:	sar    esi,1
  42891e:	loope  0x4288aa
  428920:	ret    
  428921:	mov    eax,0xcd1ad59
  428926:	xchg   ebx,eax
  428927:	pop    esi
  428928:	mov    al,ds:0x3df350c4
  42892d:	xor    bh,BYTE PTR [ecx]
  42892f:	icebp  
  428930:	cdq    
  428931:	ins    BYTE PTR es:[edi],dx
  428932:	shr    BYTE PTR [ecx+0x6b],0xeb
  428936:	adc    dl,ch
  428938:	and    DWORD PTR [edi+0x280a98ea],ecx
  42893e:	pop    edx
  42893f:	sahf   
  428940:	lds    eax,FWORD PTR [ecx]
  428942:	shr    BYTE PTR [ebx-0xe],1
  428945:	das    
  428946:	call   0x8adf:0x1f33798c
  42894d:	add    eax,0xd2b0afa5
  428952:	shr    DWORD PTR [eax+0x46],0xc2
  428956:	sub    ebx,DWORD PTR [ebx+0x275c3ec]
  42895c:	mov    esi,0xead13a73
  428961:	sbb    bl,BYTE PTR [ebx]
	...
